
a028410755a4460c3433e273e230a47620d75780eb896d8d836290658edcde3c.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	adc    al,0x37
  401006:	cmp    DWORD PTR [ebp+0x0],ecx
  401009:	add    BYTE PTR [eax],al
  40100b:	add    BYTE PTR [edx],dh
  40100d:	adc    BYTE PTR [eax],al
  40100f:	add    BYTE PTR [ecx],al
  401011:	add    BYTE PTR [eax],al
  401013:	add    BYTE PTR [ecx],al
  401015:	add    BYTE PTR [eax],al
  401017:	add    BYTE PTR [ecx],al
  401019:	add    BYTE PTR [eax],al
  40101b:	add    BYTE PTR [eax],ch
  40101d:	adc    BYTE PTR [eax],al
  40101f:	add    BYTE PTR [eax+edx*1],ch
  401022:	add    BYTE PTR [eax],al
  401024:	xor    BYTE PTR [eax],dl
  401026:	add    BYTE PTR [eax],al
  401028:	xor    BYTE PTR [eax+eax*1+0x103e00],al
  40102f:	add    BYTE PTR [eax],al
  401031:	add    BYTE PTR [edi+0x6f],dl
  401034:	jb     0x40109a
  401036:	push   edi
  401037:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  40103e:	aas    
  40103f:	inc    ebx
  401040:	ins    BYTE PTR es:[edi],dx
  401041:	outs   dx,DWORD PTR ds:[esi]
  401042:	jae    0x4010a9
  401044:	push   edi
  401045:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  40104c:	popa   
  40104d:	je     0x4010b8
  40104f:	outs   dx,DWORD PTR ds:[esi]
  401050:	outs   dx,BYTE PTR ds:[esi]
  401051:	inc    ebx
  401052:	ins    BYTE PTR es:[edi],dx
  401053:	outs   dx,DWORD PTR ds:[esi]
  401054:	jae    0x4010bb
  401056:	push   edi
  401057:	imul   edx,DWORD PTR [ebp-0x75],0xa4ec81ec
  40105e:	add    BYTE PTR [eax],al
  401060:	add    BYTE PTR [ebx+0x3d11084d],cl
  401066:	add    BYTE PTR [eax-0x7a47ffbe],ah
  40106c:	mov    al,BYTE PTR [eax]
  40106e:	add    BYTE PTR [esi+0x33],ah
  401071:	inc    ecx
  401072:	and    BYTE PTR [ebx],ch
  401074:	or     eax,0x42b00c
  401079:	mov    ecx,0x3b4b
  40107e:	xor    DWORD PTR ds:0x429018,0x42b01c
  401088:	add    ax,cx
  40108b:	adc    ecx,DWORD PTR ds:0x42c010
  401091:	movzx  eax,ax
  401094:	mov    ecx,DWORD PTR ds:0x423e14
  40109a:	mov    ecx,DWORD PTR [ecx]
  40109c:	sub    DWORD PTR ds:0x42d014,ecx
  4010a2:	mov    DWORD PTR [ebp-0x18],eax
  4010a5:	and    DWORD PTR ds:0x42c008,ebx
  4010ab:	mov    BYTE PTR [ebp-0x1],0x61
  4010af:	sbb    ecx,0x3fcf
  4010b5:	lea    eax,[ebp-0x1]
  4010b8:	xor    ecx,ecx
  4010ba:	xor    ecx,DWORD PTR ds:0x429024
  4010c0:	adc    ecx,DWORD PTR ds:0x42b004
  4010c6:	mov    DWORD PTR ds:0x429024,ecx
  4010cc:	mov    DWORD PTR [ebp-0x10],eax
  4010cf:	mov    ecx,DWORD PTR ds:0x42d01c
  4010d5:	sub    DWORD PTR ds:0x42900c,ecx
  4010db:	mov    al,BYTE PTR [ebp-0x1]
  4010de:	mov    ecx,DWORD PTR [ebp-0x10]
  4010e1:	xor    DWORD PTR ds:0x42b004,0x42900c
  4010eb:	xor    al,0x6f
  4010ed:	sub    al,0xd
  4010ef:	adc    DWORD PTR ds:0x42d008,0x362f
  4010f9:	mov    BYTE PTR [ecx],al
  4010fb:	mov    DWORD PTR ds:0x429020,0x1b
  401105:	cmp    DWORD PTR ds:0x429020,0x0
  40110c:	je     0x40113f
  401112:	cmp    DWORD PTR ds:0x429020,0x24
  401119:	jne    0x40112d
  40111f:	push   DWORD PTR [ebp-0x24]
  401122:	push   0x424500
  401127:	call   DWORD PTR ds:0x425010
  40112d:	mov    ecx,DWORD PTR ds:0x429020
  401133:	dec    ecx
  401134:	mov    DWORD PTR ds:0x429020,ecx
  40113a:	jmp    0x401105
  40113f:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  401146:	push   ebx
  401147:	sub    ecx,eax
  401149:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  401150:	and    DWORD PTR ds:0x42901c,ebx
  401156:	mov    ecx,DWORD PTR [ebp-0x14]
  401159:	push   esi
  40115a:	mov    eax,0x7510893
  40115f:	xor    ecx,eax
  401161:	or     esi,DWORD PTR ds:0x42900c
  401167:	mov    esi,0x3272db
  40116c:	and    DWORD PTR ds:0x429024,0x1a45
  401176:	push   edi
  401177:	sub    DWORD PTR ds:0x42c018,0x2ac6
  401181:	add    ecx,esi
  401183:	mov    DWORD PTR ds:0x42c008,0x57e6
  40118d:	jmp    0x4011bb
  401192:	mov    DWORD PTR ds:0x42a014,0x4932
  40119c:	mov    dl,BYTE PTR [ebp-0x1]
  40119f:	mov    DWORD PTR ds:0x42d014,0x6fce
  4011a9:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  4011b0:	mov    DWORD PTR ds:0x42c010,0x5862
  4011ba:	inc    ecx
  4011bb:	mov    DWORD PTR ds:0x42a018,0x6e07
  4011c5:	cmp    ecx,0x40
  4011c8:	jb     0x401192
  4011ce:	sbb    DWORD PTR ds:0x42a010,0x6c84
  4011d8:	mov    edx,DWORD PTR [ebp-0x14]
  4011db:	add    DWORD PTR ds:0x42b004,0x42900c
  4011e5:	xor    edx,eax
  4011e7:	sub    DWORD PTR ds:0x42c018,0x6b15
  4011f1:	add    edx,esi
  4011f3:	jmp    0x40132b
  4011f8:	add    DWORD PTR ds:0x42b000,ecx
  4011fe:	mov    edi,DWORD PTR [ebp+0x8]
  401201:	mov    DWORD PTR ds:0x42b010,0x1a
  40120b:	cmp    DWORD PTR ds:0x42b010,0x0
  401212:	je     0x40126b
  401218:	cmp    DWORD PTR ds:0x42b010,0x3
  40121f:	jne    0x401233
  401225:	push   0x3d21
  40122a:	push   DWORD PTR [ebp-0x10]
  40122d:	call   DWORD PTR ds:0x425018
  401233:	cmp    DWORD PTR ds:0x42b010,0x4
  40123a:	jne    0x40124f
  401240:	xor    ecx,ecx
  401242:	or     ecx,DWORD PTR ds:0x42b010
  401248:	dec    ecx
  401249:	mov    DWORD PTR ds:0x42b010,ecx
  40124f:	mov    ecx,DWORD PTR ds:0x42b010
  401255:	dec    ecx
  401256:	mov    DWORD PTR ds:0x42b010,ecx
  40125c:	jmp    0x40120b
  401261:	or     DWORD PTR ds:0x429004,0x4238
  40126b:	mov    ecx,0x8a85
  401270:	sbb    DWORD PTR ds:0x42a014,0x4641
  40127a:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40127f:	xor    DWORD PTR ds:0x42901c,edi
  401285:	mov    edi,0x3b4b
  40128a:	add    cx,di
  40128d:	and    DWORD PTR ds:0x42a01c,0x60c1
  401297:	movzx  ecx,cx
  40129a:	mov    DWORD PTR [ebp-0x10],ecx
  40129d:	and    DWORD PTR ds:0x42c014,0x0
  4012a7:	jmp    0x4012b9
  4012ac:	mov    ecx,DWORD PTR ds:0x42c014
  4012b2:	inc    ecx
  4012b3:	mov    DWORD PTR ds:0x42c014,ecx
  4012b9:	cmp    DWORD PTR ds:0x42c014,0x14
  4012c0:	jae    0x4012ec
  4012c6:	cmp    DWORD PTR ds:0x42c014,0x19
  4012cd:	jne    0x4012e5
  4012d3:	push   0x42d008
  4012d8:	push   0x0
  4012da:	push   0x424443
  4012df:	call   DWORD PTR ds:0x42501c
  4012e5:	jmp    0x4012ac
  4012ea:	neg    ecx
  4012ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4012ef:	mov    DWORD PTR ds:0x42a000,0x57bf
  4012f9:	movzx  ecx,WORD PTR [ecx+edx*4]
  4012fd:	xor    ecx,0x8a85
  401303:	add    DWORD PTR ds:0x42b00c,0x42c004
  40130d:	add    ecx,edi
  40130f:	movzx  edi,BYTE PTR ds:0x42c018
  401316:	mov    edi,DWORD PTR [ebp-0x10]
  401319:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  401320:	mov    DWORD PTR ds:0x429024,0x374e
  40132a:	inc    edx
  40132b:	mov    ecx,0x6cf1
  401330:	mov    ecx,DWORD PTR [ebp-0x18]
  401333:	cmp    edx,ecx
  401335:	jne    0x4011f8
  40133b:	mov    ecx,DWORD PTR [ebp-0x14]
  40133e:	and    DWORD PTR ds:0x42d014,0x0
  401348:	mov    edx,DWORD PTR ds:0x42d014
  40134e:	inc    edx
  40134f:	mov    DWORD PTR ds:0x42d014,edx
  401355:	cmp    DWORD PTR ds:0x42d014,0x1e
  40135c:	jne    0x401370
  401362:	push   0x42a010
  401367:	push   DWORD PTR [ebp-0xc]
  40136a:	call   DWORD PTR ds:0x425020
  401370:	cmp    DWORD PTR ds:0x42d014,0x1a
  401377:	jb     0x401348
  40137d:	mov    edx,DWORD PTR [ebp+0x10]
  401380:	add    DWORD PTR ds:0x429018,0x42d01c
  40138a:	xor    ecx,eax
  40138c:	add    ecx,esi
  40138e:	mov    DWORD PTR [edx],ecx
  401390:	xor    DWORD PTR ds:0x429020,0x151c
  40139a:	mov    ecx,DWORD PTR [ebp-0x14]
  40139d:	sbb    DWORD PTR ds:0x42a004,0x76e2
  4013a7:	xor    ecx,eax
  4013a9:	add    ecx,esi
  4013ab:	mov    DWORD PTR [ebp-0x20],ecx
  4013ae:	mov    DWORD PTR ds:0x42c00c,0x69f9
  4013b8:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  4013bf:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  4013c6:	mov    DWORD PTR ds:0x42c00c,ecx
  4013cc:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  4013d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4013d6:	mov    DWORD PTR ds:0x429004,0x7870
  4013e0:	mov    DWORD PTR [ebp+0x8],ecx
  4013e3:	jmp    0x4015f6
  4013e8:	xor    DWORD PTR ds:0x42a014,0x45a5
  4013f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4013f5:	and    DWORD PTR ds:0x42b008,0x0
  4013ff:	mov    edx,DWORD PTR ds:0x42b008
  401405:	inc    edx
  401406:	mov    DWORD PTR ds:0x42b008,edx
  40140c:	cmp    DWORD PTR ds:0x42b008,0x29
  401413:	jne    0x401424
  401419:	push   0x3311
  40141e:	call   DWORD PTR ds:0x425028
  401424:	cmp    DWORD PTR ds:0x42b008,0x1f
  40142b:	jb     0x4013ff
  401431:	adc    DWORD PTR ds:0x42a008,0x7a1a
  40143b:	mov    edx,DWORD PTR [ebp-0x8]
  40143e:	neg    DWORD PTR ds:0x42b00c
  401444:	xor    ecx,eax
  401446:	xor    DWORD PTR ds:0x429018,0x42b01c
  401450:	xor    edx,eax
  401452:	or     DWORD PTR ds:0x429020,0x5996
  40145c:	sub    ecx,edx
  40145e:	movzx  edx,BYTE PTR ds:0x42a014
  401465:	adc    DWORD PTR ds:0x429028,edx
  40146b:	sub    ecx,esi
  40146d:	xor    DWORD PTR ds:0x429028,0xa7c
  401477:	xor    ecx,eax
  401479:	not    edx
  40147b:	mov    DWORD PTR [ebp+0x8],ecx
  40147e:	add    DWORD PTR ds:0x42a01c,0x480
  401488:	mov    ecx,DWORD PTR [ebp+0x8]
  40148b:	mov    edx,DWORD PTR [ebp-0x64]
  40148e:	or     DWORD PTR ds:0x429028,0x2c95
  401498:	lea    ecx,[edx+ecx*1+0x5708f5]
  40149f:	and    edx,0x1ea1
  4014a5:	mov    DWORD PTR [ebp-0x64],ecx
  4014a8:	and    DWORD PTR ds:0x42c000,0x0
  4014b2:	jmp    0x4014c4
  4014b7:	mov    ecx,DWORD PTR ds:0x42c000
  4014bd:	inc    ecx
  4014be:	mov    DWORD PTR ds:0x42c000,ecx
  4014c4:	cmp    DWORD PTR ds:0x42c000,0x1f
  4014cb:	jae    0x401506
  4014d1:	cmp    DWORD PTR ds:0x42c000,0x2a
  4014d8:	jne    0x401501
  4014de:	push   DWORD PTR [ebp-0x1c]
  4014e1:	push   DWORD PTR [ebp-0x10]
  4014e4:	push   0x42a004
  4014e9:	push   0x8921
  4014ee:	push   DWORD PTR [ebp-0x24]
  4014f1:	push   0x8115
  4014f6:	push   0x4d38
  4014fb:	call   DWORD PTR ds:0x42502c
  401501:	jmp    0x4014b7
  401506:	mov    ecx,DWORD PTR [ebp+0x8]
  401509:	mov    edx,DWORD PTR [ebp-0x60]
  40150c:	sub    DWORD PTR ds:0x42a000,0x42a01c
  401516:	lea    ecx,[edx+ecx*1+0x5708f5]
  40151d:	neg    edx
  40151f:	mov    DWORD PTR [ebp-0x60],ecx
  401522:	adc    DWORD PTR ds:0x42d01c,edx
  401528:	mov    ecx,DWORD PTR [ebp+0x8]
  40152b:	add    DWORD PTR ds:0x429008,0x3e29
  401535:	mov    edx,DWORD PTR [ebp-0x5c]
  401538:	add    DWORD PTR ds:0x429028,0x42b010
  401542:	lea    ecx,[edx+ecx*1+0x5708f4]
  401549:	and    DWORD PTR ds:0x42d008,0x0
  401553:	mov    edx,DWORD PTR ds:0x42d008
  401559:	inc    edx
  40155a:	mov    DWORD PTR ds:0x42d008,edx
  401560:	cmp    DWORD PTR ds:0x42d008,0x8
  401567:	jne    0x401576
  40156d:	push   DWORD PTR [ebp-0x20]
  401570:	call   DWORD PTR ds:0x425030
  401576:	cmp    DWORD PTR ds:0x42d008,0x7
  40157d:	jne    0x401592
  401583:	xor    edx,edx
  401585:	or     edx,DWORD PTR ds:0x42d008
  40158b:	inc    edx
  40158c:	mov    DWORD PTR ds:0x42d008,edx
  401592:	cmp    DWORD PTR ds:0x42d008,0x17
  401599:	jb     0x401553
  40159f:	xor    edx,DWORD PTR ds:0x42d00c
  4015a5:	mov    DWORD PTR [ebp-0x5c],ecx
  4015a8:	sbb    ecx,edx
  4015aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4015ad:	xor    DWORD PTR ds:0x42b01c,0x42c004
  4015b7:	mov    edx,DWORD PTR [ebp-0x58]
  4015ba:	lea    ecx,[edx+ecx*1+0x5708fb]
  4015c1:	xor    edx,0x2bb1
  4015c7:	mov    DWORD PTR [ebp-0x58],ecx
  4015ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4015cd:	mov    edx,DWORD PTR [ebp-0x54]
  4015d0:	adc    DWORD PTR ds:0x429024,0x7906
  4015da:	lea    ecx,[edx+ecx*1+0x5708fa]
  4015e1:	not    edx
  4015e3:	mov    DWORD PTR [ebp-0x54],ecx
  4015e6:	mov    ecx,DWORD PTR [ebp+0x8]
  4015e9:	mov    edx,DWORD PTR [ebp-0x50]
  4015ec:	lea    ecx,[edx+ecx*1+0x5708f9]
  4015f3:	mov    DWORD PTR [ebp-0x50],ecx
  4015f6:	dec    ecx
  4015f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4015fa:	xor    ecx,eax
  4015fc:	or     DWORD PTR ds:0x42d000,0x34f3
  401606:	add    ecx,esi
  401608:	mov    DWORD PTR ds:0x42c01c,0x3161
  401612:	jne    0x4013e8
  401618:	mov    DWORD PTR ds:0x429018,0x1b23
  401622:	jmp    0x405fe7
  401627:	mov    ecx,DWORD PTR [ebp-0x1c]
  40162a:	and    DWORD PTR ds:0x42c000,0x0
  401634:	jmp    0x401648
  401639:	xor    edx,edx
  40163b:	xor    edx,DWORD PTR ds:0x42c000
  401641:	inc    edx
  401642:	mov    DWORD PTR ds:0x42c000,edx
  401648:	cmp    DWORD PTR ds:0x42c000,0x15
  40164f:	jae    0x4016e1
  401655:	cmp    DWORD PTR ds:0x42c000,0xa
  40165c:	jne    0x40166e
  401662:	push   DWORD PTR [ebp-0x14]
  401665:	push   DWORD PTR [ebp-0x14]
  401668:	call   DWORD PTR ds:0x425034
  40166e:	cmp    DWORD PTR ds:0x42c000,0x9
  401675:	jne    0x40168a
  40167b:	xor    edx,edx
  40167d:	add    edx,DWORD PTR ds:0x42c000
  401683:	inc    edx
  401684:	mov    DWORD PTR ds:0x42c000,edx
  40168a:	jmp    0x401639
  40168f:	and    DWORD PTR ds:0x42c000,0x0
  401699:	mov    edx,DWORD PTR ds:0x42c000
  40169f:	inc    edx
  4016a0:	mov    DWORD PTR ds:0x42c000,edx
  4016a6:	cmp    DWORD PTR ds:0x42c000,0x1e
  4016ad:	jne    0x4016c6
  4016b3:	push   0x4243a3
  4016b8:	push   0x4244ac
  4016bd:	push   DWORD PTR [ebp-0x18]
  4016c0:	call   DWORD PTR ds:0x42503c
  4016c6:	cmp    DWORD PTR ds:0x42c000,0x12
  4016cd:	jb     0x401699
  4016d3:	xor    edx,edx
  4016d5:	xor    edx,DWORD PTR ds:0x429010
  4016db:	sub    DWORD PTR ds:0x42a01c,edx
  4016e1:	mov    edx,DWORD PTR [ebp-0x8]
  4016e4:	xor    ecx,eax
  4016e6:	xor    edx,eax
  4016e8:	add    DWORD PTR ds:0x429014,0x42d010
  4016f2:	sub    ecx,edx
  4016f4:	mov    DWORD PTR ds:0x42d00c,0x49b3
  4016fe:	sub    ecx,esi
  401700:	xor    ecx,eax
  401702:	mov    DWORD PTR ds:0x42901c,0x3f4e
  40170c:	mov    DWORD PTR [ebp-0x1c],ecx
  40170f:	mov    ecx,DWORD PTR ds:0x42b014
  401715:	mov    ecx,DWORD PTR [ebp-0xc]
  401718:	mov    DWORD PTR [ebp+0x8],ecx
  40171b:	jmp    0x40174d
  401720:	mov    ecx,DWORD PTR [ebp+0x8]
  401723:	mov    edx,DWORD PTR [ebp-0x8]
  401726:	xor    ecx,eax
  401728:	xor    edx,eax
  40172a:	sub    ecx,edx
  40172c:	sub    ecx,esi
  40172e:	xor    ecx,eax
  401730:	mov    DWORD PTR [ebp+0x8],ecx
  401733:	mov    ecx,DWORD PTR [ebp+0x8]
  401736:	mov    edx,DWORD PTR [ebp+0x8]
  401739:	imul   edx,edx,0x5708f5
  40173f:	xor    ecx,eax
  401741:	add    ecx,esi
  401743:	lea    ecx,[ebp+ecx*4-0x64]
  401747:	mov    edi,DWORD PTR [ecx]
  401749:	add    edx,edi
  40174b:	mov    DWORD PTR [ecx],edx
  40174d:	mov    ecx,DWORD PTR [ebp+0x8]
  401750:	xor    ecx,eax
  401752:	add    ecx,esi
  401754:	jne    0x401720
  40175a:	mov    ecx,DWORD PTR [ebp-0x20]
  40175d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401764:	mov    dl,BYTE PTR [ebp-0x1]
  401767:	cmp    cl,dl
  401769:	je     0x405f48
  40176f:	mov    ecx,DWORD PTR [ebp-0x20]
  401772:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401779:	mov    edx,DWORD PTR [ebp+0xc]
  40177c:	cmp    cl,BYTE PTR [edx]
  40177e:	jne    0x405ff9
  401784:	mov    ecx,DWORD PTR [ebp-0x14]
  401787:	mov    edx,DWORD PTR [ebp+0xc]
  40178a:	movsx  edx,BYTE PTR [edx]
  40178d:	xor    ecx,eax
  40178f:	add    ecx,esi
  401791:	jmp    0x403b14
  401796:	add    al,0xcb
  401798:	xchg   edi,eax
  401799:	dec    esp
  40179a:	xchg   edi,eax
  40179b:	in     al,0x63
  40179d:	sbb    DWORD PTR [edx],0xffffff98
  4017a0:	adc    al,0xee
  4017a2:	gs mov bl,0xc4
  4017a5:	sahf   
  4017a6:	bound  esp,QWORD PTR [edx+0x62]
  4017a9:	bound  ebx,QWORD PTR [edi+ebx*2]
  4017ac:	bound  esp,QWORD PTR [edx+0x9]
  4017af:	xor    BYTE PTR [edi],al
  4017b1:	cmp    eax,0xf033905
  4017b6:	jns    0x4017de
  4017b8:	jne    0x401830
  4017ba:	mov    ds:0x7172727c,eax
  4017bf:	sub    bl,cl
  4017c1:	sar    ch,0x4c
  4017c4:	push   esp
  4017c5:	jae    0x401844
  4017c7:	inc    ebx
  4017c8:	mov    WORD PTR [ecx+esi*2+0x45],?
  4017cc:	scas   eax,DWORD PTR es:[edi]
  4017cd:	inc    ecx
  4017ce:	push   edx
  4017cf:	cmp    al,0x90
  4017d1:	loop   0x40176a
  4017d3:	inc    di
  4017d5:	push   ecx
  4017d6:	jg     0x4017ff
  4017d8:	ins    BYTE PTR es:[edi],dx
  4017d9:	mov    dh,0x7f
  4017db:	mov    esp,0xff3023ba
  4017e0:	jbe    0x4017a2
  4017e2:	loop   0x40182f
  4017e4:	jg     0x401804
  4017e6:	icebp  
  4017e7:	and    eax,0x97f1a2d1
  4017ec:	or     ebx,esi
  4017ee:	xchg   ebx,eax
  4017ef:	xor    eax,0x92b345ef
  4017f4:	fsub   st,st(7)
  4017f6:	jno    0x4017b9
  4017f8:	sbb    al,cl
  4017fa:	out    dx,al
  4017fb:	loop   0x401833
  4017fd:	add    al,0x54
  4017ff:	adc    BYTE PTR [esi],dh
  401801:	jae    0x401877
  401803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401804:	(bad)  
  401805:	or     ebx,DWORD PTR [ebp+0x19]
  401808:	mov    dh,0xff
  40180a:	cmc    
  40180b:	push   ebp
  40180c:	xor    ebp,DWORD PTR [eax+0x2a]
  40180f:	aam    0x43
  401811:	in     eax,0x2
  401813:	loop   0x401879
  401815:	mov    ebp,0x5f84c17b
  40181a:	xchg   ebx,eax
  40181b:	mov    ebp,0x2d9a0817
  401820:	jmp    0x4017c0
  401822:	and    BYTE PTR [edx+0x6b],ch
  401825:	adc    eax,edx
  401827:	xor    DWORD PTR [edx-0x6f],ecx
  40182a:	sub    BYTE PTR [ebx],ch
  40182c:	dec    eax
  40182d:	sti    
  40182e:	scas   eax,DWORD PTR es:[edi]
  40182f:	xchg   edx,eax
  401830:	xor    eax,0xd0a7ac95
  401835:	xchg   esp,eax
  401836:	dec    ebp
  401837:	clc    
  401838:	pop    ecx
  401839:	dec    edx
  40183a:	push   eax
  40183b:	adc    BYTE PTR [esi],bh
  40183d:	jmp    0x401865
  40183f:	sbb    esi,DWORD PTR [ecx+0x2cb7d253]
  401845:	fcomp  QWORD PTR [eax]
  401847:	inc    esi
  401848:	loope  0x401894
  40184a:	inc    esi
  40184b:	mov    ecx,0xe4bf74e5
  401850:	pop    edx
  401851:	sbb    al,0x7
  401853:	xchg   ebp,eax
  401854:	loope  0x401835
  401856:	cmp    DWORD PTR [ebx+0x27b128d9],edi
  40185c:	cmp    al,0x2
  40185e:	jb     0x40180c
  401860:	test   BYTE PTR [ebp-0x67],ah
  401863:	mov    al,0x50
  401865:	inc    esp
  401866:	inc    ebx
  401867:	clc    
  401868:	push   0xffffff8c
  40186a:	je     0x401882
  40186c:	nop
  40186d:	outs   dx,DWORD PTR ds:[esi]
  40186e:	into   
  40186f:	les    eax,FWORD PTR [ebp+ecx*1+0x16]
  401873:	ds out dx,eax
  401875:	addr16 pop edi
  401877:	(bad)  
  401879:	pop    eax
  40187a:	pop    esi
  40187b:	push   edi
  40187c:	sub    DWORD PTR [eax-0x485f488d],ebx
  401882:	dec    edi
  401883:	imul   DWORD PTR [eax-0x4c5f1703]
  401889:	pop    ds
  40188a:	loopne 0x40185d
  40188c:	(bad)  
  40188d:	popa   
  40188e:	push   esi
  40188f:	int    0x94
  401891:	mov    esp,esi
  401893:	jmp    0x9f6e254b
  401898:	pop    esi
  401899:	retf   
  40189a:	ret    
  40189b:	out    dx,eax
  40189c:	imul   eax,DWORD PTR [esi+0x78],0x93cde2da
  4018a3:	sti    
  4018a4:	mul    BYTE PTR [edi]
  4018a6:	mov    ecx,0x9282207b
  4018ab:	dec    ebx
  4018ac:	hlt    
  4018ad:	int3   
  4018ae:	cs xchg esi,eax
  4018b0:	(bad)  
  4018b1:	push   ecx
  4018b2:	xchg   esi,eax
  4018b3:	lods   al,BYTE PTR ds:[esi]
  4018b4:	or     esi,DWORD PTR [eax-0x8c262f0]
  4018ba:	cmp    al,0x83
  4018bc:	xor    al,0x7b
  4018be:	mov    al,0x98
  4018c0:	int3   
  4018c1:	into   
  4018c2:	mov    ah,0x2f
  4018c4:	xor    DWORD PTR [eax],0x17
  4018c7:	outs   dx,BYTE PTR ds:[esi]
  4018c8:	and    al,BYTE PTR [eax-0x80]
  4018cb:	and    ebp,DWORD PTR [ebp+eiz*4-0x4e]
  4018cf:	mov    cl,BYTE PTR [esi-0x4fc06a83]
  4018d5:	jo     0x40188b
  4018d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018d8:	js     0x40186d
  4018da:	cwde   
  4018db:	ror    cl,cl
  4018dd:	out    dx,al
  4018de:	aas    
  4018df:	out    dx,eax
  4018e0:	ret    
  4018e1:	add    al,0x8
  4018e3:	mov    BYTE PTR [esi+edi*8],0x2d
  4018e7:	push   edx
  4018e8:	sub    BYTE PTR [ecx+0x1c35bfc0],0x39
  4018ef:	stos   DWORD PTR es:[edi],eax
  4018f0:	int    0x92
  4018f2:	js     0x4018d7
  4018f4:	fstp   QWORD PTR [ecx]
  4018f6:	push   ebx
  4018f7:	cmp    eax,0x938dde09
  4018fc:	xchg   esp,eax
  4018fd:	mov    DWORD PTR [eax+eiz*1+0x29c2a5c4],esp
  401904:	fstp   st(3)
  401906:	mov    esp,0xc0013642
  40190b:	and    edi,DWORD PTR [esp+eiz*2]
  40190e:	div    bl
  401910:	fxch   st(1)
  401912:	add    dh,ah
  401914:	mov    edx,0x5423e2ea
  401919:	pop    ebp
  40191a:	add    eax,0x35d2c32c
  40191f:	popf   
  401920:	inc    eax
  401921:	shl    DWORD PTR [edi],0xb8
  401924:	ror    edx,cl
  401926:	sub    al,0x31
  401928:	(bad)  
  401929:	fwait
  40192a:	shl    edx,1
  40192c:	loop   0x401908
  40192e:	push   0xb5409710
  401933:	enter  0x8b2e,0x78
  401937:	add    al,bl
  401939:	jns    0x4019ac
  40193b:	retf   
  40193c:	stc    
  40193d:	and    BYTE PTR ss:[esi+ebx*1],ch
  401941:	sub    DWORD PTR [esi-0xac47592],ebx
  401947:	xor    dh,0xe7
  40194a:	dec    eax
  40194b:	or     al,0xc5
  40194d:	jae    0x401962
  40194f:	test   BYTE PTR [ebx-0xa55c2c3],cl
  401955:	out    dx,eax
  401956:	xchg   ecx,eax
  401957:	(bad)
  40195a:	dec    ebx
  40195b:	sbb    al,0x30
  40195d:	push   cs
  40195e:	jle    0x4019d6
  401960:	jmp    0x71d85999
  401965:	or     bl,BYTE PTR [edi+edi*4]
  401968:	add    al,0x66
  40196a:	or     ch,BYTE PTR [eax+0x42bdf85c]
  401970:	jne    0x401991
  401972:	aas    
  401973:	rcr    dh,1
  401975:	mov    ch,0x9d
  401977:	pop    ss
  401978:	xchg   edi,eax
  401979:	jmp    FWORD PTR [eax]
  40197b:	inc    ebx
  40197c:	adc    al,0x88
  40197e:	xor    bh,cl
  401980:	mov    DWORD PTR [esi],esi
  401982:	loope  0x4019f6
  401984:	sbb    DWORD PTR [edx-0x60f393ff],esi
  40198a:	jbe    0x4019bc
  40198c:	push   eax
  40198d:	loop   0x4019fe
  40198f:	push   esi
  401990:	inc    ebx
  401991:	xchg   edi,eax
  401992:	scas   al,BYTE PTR es:[edi]
  401993:	repz repnz xor edx,DWORD PTR [edx]
  401997:	psrld  mm3,QWORD PTR [ecx-0x5d]
  40199b:	ins    BYTE PTR es:[edi],dx
  40199c:	xor    eax,0x3bb09e4f
  4019a1:	(bad)  
  4019a2:	xor    eax,0x7a9f5b44
  4019a7:	fsubr  DWORD PTR [eax+ecx*8+0x52af009e]
  4019ae:	bnd call 0x6f46b3a0
  4019b4:	test   eax,0x34e83f4
  4019b9:	push   es
  4019ba:	int    0xc0
  4019bc:	mov    BYTE PTR [esi+0x22],0x9d
  4019c0:	retf   
  4019c1:	repnz out 0x66,al
  4019c4:	popf   
  4019c5:	cmp    al,0x88
  4019c7:	loop   0x4019b5
  4019c9:	ins    DWORD PTR es:[edi],dx
  4019ca:	mov    bh,0xc2
  4019cc:	fimul  DWORD PTR [esi+edi*2]
  4019cf:	idiv   DWORD PTR [ebx+edx*8-0x623ce504]
  4019d6:	ins    DWORD PTR es:[edi],dx
  4019d7:	sub    eax,0xacbcad98
  4019dc:	push   0xe2671d61
  4019e1:	clc    
  4019e2:	mov    esp,ebp
  4019e4:	aas    
  4019e5:	pop    edi
  4019e6:	imul   ecx,DWORD PTR [ebx+0x2a],0xa723433e
  4019ed:	jp     0x401a0e
  4019ef:	dec    ecx
  4019f0:	add    ch,0x20
  4019f3:	pop    edi
  4019f4:	push   edi
  4019f5:	dec    ebx
  4019f6:	mov    eax,ds:0x72056be
  4019fb:	ins    DWORD PTR es:[edi],dx
  4019fc:	inc    edx
  4019fd:	loope  0x4019d5
  4019ff:	add    al,0x4e
  401a01:	xor    esi,ebx
  401a03:	fild   QWORD PTR [ebp-0x62]
  401a06:	jnp    0x401995
  401a08:	inc    ax
  401a0a:	mov    ds:0x846ac946,eax
  401a0f:	jo     0x401a6d
  401a11:	mov    esi,0x8e8bb9c8
  401a16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a17:	jg     0x401a98
  401a19:	adc    cl,BYTE PTR [eax]
  401a1b:	test   DWORD PTR [ebp+edi*4+0x73],esi
  401a1f:	fsubr  DWORD PTR [ebx+0x0]
  401a22:	dec    ecx
  401a23:	stos   DWORD PTR es:[edi],eax
  401a24:	adc    ah,cl
  401a26:	sahf   
  401a27:	add    esi,ebx
  401a29:	jp     0x401a0b
  401a2b:	test   BYTE PTR [esi],al
  401a2d:	sub    al,0xaf
  401a2f:	dec    ebp
  401a30:	in     eax,dx
  401a31:	sbb    edi,DWORD PTR [edi]
  401a33:	inc    ebp
  401a34:	push   ss
  401a35:	mov    al,0xcf
  401a37:	sbb    eax,ecx
  401a39:	and    eax,0xd2f1a7a9
  401a3e:	repnz stos BYTE PTR es:[edi],al
  401a40:	xchg   esi,eax
  401a41:	nop
  401a42:	or     al,dh
  401a44:	inc    esp
  401a45:	test   DWORD PTR [edi+eiz*4+0x26],ebp
  401a49:	aas    
  401a4a:	xlat   BYTE PTR ds:[ebx]
  401a4b:	ret    0x7dd6
  401a4e:	ds out dx,al
  401a50:	inc    esp
  401a51:	or     ebp,DWORD PTR fs:0x8e3e7db6
  401a58:	dec    esp
  401a59:	jecxz  0x401a27
  401a5b:	push   es
  401a5c:	ret    0xd097
  401a5f:	and    al,BYTE PTR [ecx+0x65]
  401a62:	(bad)
  401a65:	stos   BYTE PTR es:[edi],al
  401a66:	test   DWORD PTR [edi],0x3076f6b6
  401a6c:	push   ecx
  401a6d:	into   
  401a6e:	sub    DWORD PTR [edi+esi*2-0x219aa33e],edx
  401a75:	jl     0x401acb
  401a77:	lods   eax,DWORD PTR gs:[esi]
  401a79:	aaa    
  401a7a:	dec    esi
  401a7b:	adc    BYTE PTR [eax+0x343d4430],dl
  401a81:	push   ecx
  401a82:	xchg   ecx,eax
  401a83:	fimul  WORD PTR [eax]
  401a85:	jmp    0x401af1
  401a87:	or     bl,BYTE PTR [edx]
  401a89:	in     eax,dx
  401a8a:	fidiv  DWORD PTR [edi+0x2e]
  401a8d:	jge    0x401ac3
  401a8f:	mov    dl,0xf5
  401a91:	imul   esi,DWORD PTR [edi-0x56269a5c],0x41db9b26
  401a9b:	jge    0x401a8f
  401a9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a9e:	(bad)  
  401a9f:	lock nop
  401aa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401aa2:	or     eax,0x17a26dfe
  401aa7:	mov    ah,0x30
  401aa9:	sub    bl,BYTE PTR [edx-0x16]
  401aac:	cmpps  xmm2,XMMWORD PTR [ecx+ebx*2+0x465230ac],0x4e
  401ab5:	out    dx,eax
  401ab6:	scas   eax,DWORD PTR es:[edi]
  401ab7:	pop    ebx
  401ab8:	imul   esp,esp,0x39
  401abb:	mov    ebp,0x730cdf83
  401ac0:	scas   al,BYTE PTR es:[edi]
  401ac1:	and    al,0xd9
  401ac3:	pop    ebx
  401ac4:	cmp    DWORD PTR [esi-0x6eafce8b],esi
  401aca:	icebp  
  401acb:	mov    eax,ds:0xf64d3f8c
  401ad0:	sbb    dh,ah
  401ad2:	mov    edi,0xae14f8da
  401ad7:	sub    al,0x73
  401ad9:	sahf   
  401ada:	adc    DWORD PTR [ebx+0x4c46dee0],ecx
  401ae0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ae1:	cwde   
  401ae2:	cmc    
  401ae3:	lods   eax,DWORD PTR ds:[esi]
  401ae4:	out    dx,eax
  401ae5:	int3   
  401ae6:	call   0xe4bc39df
  401aeb:	sub    al,0xa4
  401aed:	fs std 
  401aef:	std    
  401af0:	jnp    0x401b1b
  401af2:	cmp    eax,esp
  401af4:	pop    es
  401af5:	mov    BYTE PTR fs:[ebp+0x3a],dl
  401af9:	sti    
  401afa:	aam    0x14
  401afc:	mov    eax,ds:0xee818235
  401b01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b02:	call   0xc19a:0x91335210
  401b09:	add    ebp,DWORD PTR [ecx+eax*8+0xe8e99c3]
  401b10:	xlat   BYTE PTR ds:[ebx]
  401b11:	hlt    
  401b12:	je     0x401aaa
  401b14:	or     eax,0x9681bcfe
  401b19:	(bad)  
  401b1b:	in     al,0x71
  401b1d:	xor    DWORD PTR [ebx+0x3653a6c9],ecx
  401b23:	and    bh,ch
  401b25:	and    ebx,DWORD PTR [ebx]
  401b27:	rcr    BYTE PTR [edx],0xe2
  401b2a:	scas   al,BYTE PTR es:[edi]
  401b2b:	adc    al,0x17
  401b2d:	adc    ah,0x31
  401b30:	inc    esi
  401b32:	mov    al,0xc3
  401b34:	mov    al,0x8b
  401b36:	or     eax,0x7024946d
  401b3b:	or     al,0x7b
  401b3d:	sbb    eax,0xa2a38072
  401b42:	outs   dx,BYTE PTR ds:[esi]
  401b43:	inc    esi
  401b44:	repz les ebx,FWORD PTR [esi-0x6]
  401b48:	xchg   al,ah
  401b4a:	jmp    eax
  401b4c:	sub    eax,0xad6276e7
  401b51:	push   eax
  401b52:	addr16 addr16 jnp 0x401bc2
  401b56:	adc    DWORD PTR [edx],0xffffffdd
  401b59:	ds mov eax,0x746e64c
  401b5f:	pop    ss
  401b60:	scas   al,BYTE PTR es:[edi]
  401b61:	loope  0x401bdb
  401b63:	lea    esp,[edi+ebp*4+0x39a29233]
  401b6a:	bound  esp,QWORD PTR [esi]
  401b6c:	sbb    DWORD PTR [esi-0x46],esp
  401b6f:	xor    eax,0x13161356
  401b74:	mov    dh,0x83
  401b76:	loop   0x401b2d
  401b78:	and    eax,0xa2002e4a
  401b7d:	popf   
  401b7e:	aam    0xb7
  401b80:	mov    ch,0x18
  401b82:	mov    BYTE PTR [esi],0x39
  401b85:	jmp    0x401b74
  401b87:	pop    edx
  401b88:	mov    bh,0x90
  401b8a:	jno    0x401b15
  401b8c:	xor    al,0x6f
  401b8e:	bound  esi,QWORD PTR [ebx-0x3c]
  401b91:	imul   edx,DWORD PTR [esi],0x4f
  401b94:	or     ebp,edi
  401b96:	inc    ebx
  401b97:	pop    ebp
  401b98:	cwde   
  401b99:	xchg   BYTE PTR [ebp+0x70],bh
  401b9c:	xchg   ecx,eax
  401b9d:	or     DWORD PTR [esi-0x2f],ebp
  401ba0:	jle    0x401b74
  401ba2:	pop    eax
  401ba3:	arpl   ax,bx
  401ba5:	outs   dx,DWORD PTR ds:[esi]
  401ba6:	outs   dx,BYTE PTR fs:[esi]
  401ba8:	aas    
  401ba9:	jno    0x401b83
  401bab:	das    
  401bac:	in     al,dx
  401bad:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  401baf:	icebp  
  401bb0:	pop    esp
  401bb1:	jae    0x401b60
  401bb3:	leave  
  401bb4:	pop    esp
  401bb5:	and    eax,DWORD PTR [eax+0x61b84241]
  401bbb:	inc    ebx
  401bbc:	and    eax,0xc9a97d5f
  401bc1:	pop    ds
  401bc2:	mov    edi,DWORD PTR [edi]
  401bc4:	mov    ecx,0x8689ccb7
  401bc9:	outs   dx,DWORD PTR ds:[esi]
  401bca:	xchg   ebx,eax
  401bcb:	aad    0x47
  401bcd:	cmp    al,0xdf
  401bcf:	dec    edi
  401bd0:	jmp    0x50ac:0xcca642ec
  401bd7:	cmc    
  401bd8:	inc    ebp
  401bd9:	push   edi
  401bda:	loope  0x401bb4
  401bdc:	mov    ebp,es
  401bde:	pop    edi
  401bdf:	pop    eax
  401be0:	out    0x6e,al
  401be2:	imul   edx,DWORD PTR ds:0xbd96b0d4,0xffffffee
  401be9:	lock sbb al,0x6a
  401bec:	adc    al,0xda
  401bee:	mov    bl,0x8d
  401bf0:	xlat   BYTE PTR ds:[ebx]
  401bf1:	add    DWORD PTR [eax+0x7a],0x557f1e03
  401bf8:	cmp    al,cl
  401bfa:	add    DWORD PTR [esi],eax
  401bfc:	xchg   ecx,eax
  401bfd:	pop    ss
  401bfe:	jb     0x401bfe
  401c00:	and    al,0xd2
  401c02:	add    edi,eax
  401c04:	repz mov ebx,0xff38db3c
  401c0a:	pusha  
  401c0b:	sub    eax,0x810fa361
  401c10:	xchg   ebp,eax
  401c11:	ret    0x4030
  401c14:	inc    ebx
  401c15:	push   DWORD PTR [ebx-0x49]
  401c18:	pop    ebx
  401c19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c1a:	ret    0xd561
  401c1d:	or     ebx,ebp
  401c1f:	stos   DWORD PTR es:[edi],eax
  401c20:	popa   
  401c21:	ja     0x401c03
  401c23:	test   eax,0x8a6463a7
  401c28:	ret    
  401c29:	or     ecx,eax
  401c2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c2c:	(bad)  
  401c2d:	cli    
  401c2e:	sbb    ebx,DWORD PTR [ebp+0x4dbb46cd]
  401c34:	imul   esp,DWORD PTR [ecx+0xf],0xffffffc6
  401c38:	sub    eax,DWORD PTR [ebx-0x4c]
  401c3b:	xor    eax,0xb1ca852c
  401c40:	sti    
  401c41:	loop   0x401c8a
  401c43:	test   BYTE PTR [esi-0x7c],cl
  401c46:	or     bl,bh
  401c48:	push   ss
  401c49:	test   al,0x67
  401c4b:	mov    esp,0x7568d9f7
  401c50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c51:	dec    edx
  401c52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c53:	ja     0x401c85
  401c55:	jecxz  0x401c29
  401c57:	mov    dh,0xde
  401c59:	jge    0x401c94
  401c5b:	(bad)  
  401c5c:	jle    0x401cdd
  401c5e:	pop    ecx
  401c5f:	xor    BYTE PTR [ebp+0x13],ah
  401c62:	aaa    
  401c63:	xor    ebx,DWORD PTR [ebx-0x7d9c4552]
  401c69:	jns    0x401c65
  401c6b:	sbb    DWORD PTR ds:0x9c07a3d1,0xffffffe3
  401c72:	outs   dx,DWORD PTR ds:[esi]
  401c73:	sahf   
  401c74:	aam    0x13
  401c76:	out    0x27,eax
  401c78:	ret    0x5a6a
  401c7b:	jge    0x401cb6
  401c7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c7e:	pop    ds
  401c7f:	div    BYTE PTR [eax-0x43e43fba]
  401c85:	mov    esp,0xfe15bdd5
  401c8a:	push   esp
  401c8b:	clc    
  401c8c:	push   0xffffff99
  401c8e:	icebp  
  401c8f:	inc    ecx
  401c90:	fstp   DWORD PTR ds:0x832c5d27
  401c96:	ja     0x401c56
  401c98:	fld    DWORD PTR [ecx-0x68]
  401c9b:	rol    BYTE PTR [esi+edi*8-0x20b50042],0x1e
  401ca3:	std    
  401ca4:	jl     0x401c59
  401ca6:	add    DWORD PTR [ebp-0x43460018],esi
  401cac:	test   DWORD PTR [ebp-0x5a2ccdd5],ebx
  401cb2:	and    al,0x87
  401cb4:	inc    edi
  401cb5:	jnp    0x401d10
  401cb7:	fwait
  401cb8:	ret    0xd1b8
  401cbb:	push   eax
  401cbc:	push   es
  401cbd:	test   BYTE PTR [ebp+0x7ad5cb14],bl
  401cc3:	jns    0x401cee
  401cc5:	sbb    cl,0x3a
  401cc8:	std    
  401cc9:	xchg   ecx,eax
  401cca:	mov    fs:0x7adb64af,al
  401cd0:	mov    bh,0xb0
  401cd2:	xchg   ebp,eax
  401cd3:	sbb    BYTE PTR [edi],dh
  401cd5:	mov    ch,0x29
  401cd7:	pop    es
  401cd8:	fild   DWORD PTR [edi+edx*1-0x31]
  401cdc:	pop    ebx
  401cdd:	mov    bh,0xcd
  401cdf:	fs test eax,0x8e704624
  401ce5:	or     BYTE PTR [edx],bl
  401ce7:	imul   ebx,DWORD PTR [ecx],0xb5f7e529
  401ced:	jmp    0x401cec
  401cef:	addr16 sbb al,0x6f
  401cf2:	xchg   ebx,eax
  401cf3:	ftst   
  401cf5:	jp     0x401c7f
  401cf7:	sub    esp,edx
  401cf9:	daa    
  401cfa:	xor    DWORD PTR [ecx+0x69d55b59],ebp
  401d00:	inc    ebp
  401d01:	dec    esp
  401d02:	in     eax,dx
  401d03:	inc    edx
  401d04:	cmp    BYTE PTR [ebx-0x13],ah
  401d07:	xchg   ebp,eax
  401d08:	sbb    al,0xe7
  401d0a:	or     eax,0xc73c2b2b
  401d0f:	sub    al,0xa0
  401d11:	dec    ecx
  401d12:	mov    al,ds:0x694180ec
  401d17:	sbb    ebx,DWORD PTR [ebx-0x6]
  401d1a:	ret    
  401d1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d1c:	and    edx,ecx
  401d1e:	jp     0x401d03
  401d20:	dec    esi
  401d21:	out    dx,eax
  401d22:	test   DWORD PTR [ecx-0x139367ec],edi
  401d28:	push   ebx
  401d29:	test   al,0x9d
  401d2b:	and    DWORD PTR [esi+0x1b],esi
  401d2e:	inc    edi
  401d2f:	push   ss
  401d30:	xchg   ecx,eax
  401d31:	in     eax,dx
  401d32:	(bad)  
  401d33:	fwait
  401d34:	add    DWORD PTR [edi],esi
  401d36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d37:	es (bad) 
  401d39:	shr    DWORD PTR [ecx+0x70],1
  401d3c:	cmp    al,0x39
  401d3e:	push   0x58c4bf0c
  401d43:	xchg   ebx,eax
  401d44:	aad    0xf3
  401d46:	jl     0x401d0c
  401d48:	imul   esp,ebx,0x6c25da63
  401d4e:	dec    edi
  401d4f:	jmp    0x60a2:0x44242182
  401d56:	lock xor al,0xc9
  401d59:	push   ss
  401d5a:	(bad)  
  401d5b:	sbb    ecx,ecx
  401d5d:	repnz adc esi,DWORD PTR [ecx+ebx*2]
  401d61:	pop    esi
  401d62:	pop    esp
  401d63:	push   ebp
  401d64:	dec    esp
  401d65:	ret    
  401d66:	ror    BYTE PTR ds:[eax],1
  401d69:	cld    
  401d6a:	sbb    bh,BYTE PTR [edi]
  401d6c:	inc    ebp
  401d6d:	aas    
  401d6e:	pop    ecx
  401d6f:	mov    ds:0xe27377ea,eax
  401d74:	imul   BYTE PTR [esi]
  401d76:	push   ss
  401d77:	push   ebx
  401d78:	ss jno 0x401d2e
  401d7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d7c:	add    DWORD PTR [edx],ebx
  401d7e:	adc    BYTE PTR [eax],dh
  401d80:	xlat   BYTE PTR ds:[ebx]
  401d81:	or     eax,0xc3165dd3
  401d86:	dec    edx
  401d87:	push   cs
  401d88:	rcl    ebp,0x3c
  401d8b:	test   DWORD PTR [ecx+0x22687afb],ebx
  401d91:	xrelease xchg BYTE PTR [ebp-0x42],bh
  401d95:	and    al,0x19
  401d97:	cmp    esp,edx
  401d99:	iret   
  401d9a:	cs call 0xb74e3f1e
  401da0:	adc    ah,BYTE PTR [edx]
  401da2:	cmp    BYTE PTR [edi-0x7],cl
  401da5:	pushf  
  401da6:	sub    DWORD PTR [ebp-0x3057d5e7],eax
  401dac:	or     cl,BYTE PTR [edi-0xc]
  401daf:	fdivr  QWORD PTR [ecx-0x4a2ba7d2]
  401db5:	cmp    dl,0xe5
  401db8:	push   es
  401db9:	push   ecx
  401dba:	aam    0x7d
  401dbc:	sbb    ebx,DWORD PTR [ecx-0x7ce1361d]
  401dc2:	mov    dh,0xca
  401dc4:	jb     0x401dd4
  401dc6:	push   esi
  401dc8:	ror    BYTE PTR [ebx],cl
  401dca:	mov    cs,WORD PTR [edi*4+0x26315551]
  401dd1:	rcr    eax,1
  401dd3:	mov    BYTE PTR [eax-0x1f],cl
  401dd6:	stos   BYTE PTR es:[edi],al
  401dd7:	sbb    al,0xfc
  401dd9:	hlt    
  401dda:	cmp    DWORD PTR [ecx],edx
  401ddc:	xchg   esp,eax
  401ddd:	enter  0xeaaf,0x2f
  401de1:	adc    DWORD PTR [esi+0x33],edx
  401de4:	es das 
  401de6:	pop    ds
  401de7:	int    0xf8
  401de9:	mul    bl
  401deb:	adc    ecx,DWORD PTR ds:0x9a2eb50c
  401df1:	or     al,0x5e
  401df3:	xchg   DWORD PTR [ebx-0x27bedc9f],eax
  401df9:	dec    ebx
  401dfa:	aas    
  401dfb:	or     edx,DWORD PTR [edx+0x32ab99e2]
  401e01:	and    esi,DWORD PTR [esi-0x6ceb28b4]
  401e07:	ja     0x401e1f
  401e09:	add    eax,0x753a3ea9
  401e0e:	scas   al,BYTE PTR es:[edi]
  401e0f:	push   0x923a8a8c
  401e14:	dec    edx
  401e15:	mov    al,0xf7
  401e17:	mov    dl,0x39
  401e19:	imul   edx,esi,0xfffffff7
  401e1c:	inc    edi
  401e1d:	pop    ecx
  401e1e:	inc    ebx
  401e1f:	loope  0x401ded
  401e21:	inc    edx
  401e22:	bound  edi,QWORD PTR [edi]
  401e24:	out    0xf,al
  401e26:	sbb    eax,0xb9980610
  401e2b:	dec    esp
  401e2c:	mov    esi,0x2985cd5a
  401e31:	call   0xf133d19
  401e36:	sbb    esp,DWORD PTR [ebp-0x76]
  401e39:	pop    ss
  401e3a:	lods   al,BYTE PTR ds:[esi]
  401e3b:	add    ebx,esp
  401e3d:	mov    ecx,DWORD PTR [eax+0x966e9c6]
  401e43:	adc    al,0xc6
  401e45:	out    0x4e,eax
  401e47:	aas    
  401e48:	neg    DWORD PTR [esi]
  401e4a:	xor    al,0xa6
  401e4c:	call   0xcea1:0x6a36cfd9
  401e53:	inc    ebx
  401e54:	addr16 push esp
  401e56:	icebp  
  401e57:	mov    al,ds:0xcb4520cf
  401e5c:	iret   
  401e5d:	fist   WORD PTR [eax]
  401e5f:	push   ebp
  401e60:	add    bh,BYTE PTR [eax+0x4f6ad355]
  401e66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e67:	retf   0x7545
  401e6a:	ds mov ds,ecx
  401e6d:	xlat   BYTE PTR ds:[ebx]
  401e6e:	outs   dx,DWORD PTR ds:[esi]
  401e6f:	cmp    dh,BYTE PTR ds:0x4a869ff0
  401e75:	push   ecx
  401e76:	xchg   BYTE PTR fs:[ecx],dh
  401e79:	cmp    ah,BYTE PTR [esi]
  401e7b:	shl    BYTE PTR [eax-0x30bcc48],1
  401e81:	mov    dl,ch
  401e83:	pusha  
  401e84:	push   0x65
  401e86:	mov    bh,0x6f
  401e88:	and    al,0x1f
  401e8a:	js     0x401eca
  401e8c:	fsub   st,st(5)
  401e8e:	enter  0x4041,0x73
  401e92:	xchg   esp,eax
  401e93:	test   eax,0x2ca87edf
  401e98:	mov    dh,0x60
  401e9a:	(bad)  
  401e9b:	scas   eax,DWORD PTR es:[edi]
  401e9c:	ret    
  401e9d:	hlt    
  401e9e:	stc    
  401e9f:	mov    ebp,0x182c4f2
  401ea4:	sub    esp,DWORD PTR [ebx-0x48]
  401ea7:	fsubr  QWORD PTR [edi-0xcfa6062]
  401ead:	inc    ecx
  401eae:	sbb    DWORD PTR [esi+edx*8-0x4f3789da],0xc
  401eb6:	scas   eax,DWORD PTR es:[edi]
  401eb7:	sbb    BYTE PTR [ebp-0x4b],0x76
  401ebb:	and    DWORD PTR [edx],eax
  401ebd:	mov    esp,0xb1221069
  401ec2:	stos   DWORD PTR es:[edi],eax
  401ec3:	pop    eax
  401ec4:	repnz sub ah,ch
  401ec7:	cs repz inc esp
  401eca:	mov    edx,0x2aaa2500
  401ecf:	cmp    eax,0xbea2abc2
  401ed4:	xchg   esp,eax
  401ed5:	adc    DWORD PTR [edi-0x6],esp
  401ed8:	xor    BYTE PTR [eax-0x64b6ed94],ah
  401ede:	sbb    DWORD PTR ds:[ebx],edx
  401ee1:	sahf   
  401ee2:	jno    0x401f13
  401ee4:	mov    al,0x25
  401ee6:	pmaddwd mm7,QWORD PTR [edi+0x6d]
  401eea:	shl    bh,0x71
  401eed:	cmc    
  401eee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401eef:	push   ss
  401ef0:	popf   
  401ef1:	cmp    al,0xb3
  401ef3:	mov    ch,0x7a
  401ef5:	xor    BYTE PTR [ebp-0x7ba83c95],ch
  401efb:	inc    ebp
  401efc:	lods   eax,DWORD PTR ds:[esi]
  401efd:	call   0xe6a5:0xb03381e1
  401f04:	sub    ecx,DWORD PTR [ebx]
  401f06:	mov    DWORD PTR [ecx],esi
  401f08:	push   edx
  401f09:	fstp   DWORD PTR [esi+0x3e]
  401f0c:	push   edx
  401f0d:	mov    WORD PTR [esi+0x7f],ss
  401f10:	xor    bh,0x29
  401f13:	pop    ds
  401f14:	(bad)  
  401f16:	(bad)  
  401f17:	(bad)  
  401f18:	aam    0x97
  401f1a:	cwde   
  401f1b:	outs   dx,BYTE PTR ds:[esi]
  401f1c:	mov    al,ds:0x44aae278
  401f21:	rcr    esp,cl
  401f23:	retf   0xbaec
  401f26:	inc    edi
  401f27:	xor    al,0x36
  401f29:	adc    esi,ebp
  401f2b:	pop    eax
  401f2c:	stos   BYTE PTR es:[edi],al
  401f2d:	or     DWORD PTR [ebp+0x1b],esp
  401f30:	test   al,0x8c
  401f32:	fs xchg edx,eax
  401f34:	daa    
  401f35:	out    0x60,eax
  401f37:	retf   0x43fe
  401f3a:	call   0x6adb:0x9abff62b
  401f41:	frndint 
  401f43:	xchg   esi,eax
  401f44:	xor    al,0x23
  401f46:	or     al,0xf5
  401f48:	jo     0x401f99
  401f4a:	jnp    0x401ed1
  401f4c:	mov    DWORD PTR [esi+0x36],0xb9b020c3
  401f53:	sub    eax,0xcbab54de
  401f58:	xor    eax,0x3ec459bd
  401f5d:	repnz repz dec esp
  401f60:	xor    al,0x33
  401f62:	or     edi,edi
  401f64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f65:	aas    
  401f66:	jp     0x401f65
  401f68:	inc    esi
  401f69:	push   esi
  401f6a:	data16 or al,0x8b
  401f6d:	or     ebp,DWORD PTR [eax-0x59ba3f3b]
  401f73:	mov    ah,0xa
  401f75:	dec    ecx
  401f76:	out    0xad,eax
  401f78:	pop    ebp
  401f79:	ds add eax,0xa79aa8e6
  401f7f:	xor    ebp,DWORD PTR [ecx]
  401f81:	sub    DWORD PTR [ebx+0x73f3a5e],0x14
  401f88:	out    0xa4,eax
  401f8a:	mov    ecx,0xd6834d8a
  401f8f:	dec    ebp
  401f90:	rcl    BYTE PTR [ebx],cl
  401f92:	das    
  401f93:	dec    ebp
  401f94:	outs   dx,DWORD PTR ds:[esi]
  401f95:	push   ebp
  401f96:	bound  esi,QWORD PTR [esi-0x7fd9ccd9]
  401f9c:	push   0x75de7aee
  401fa1:	jl     0x401faa
  401fa3:	sub    ch,BYTE PTR [edx-0x5a]
  401fa6:	pop    es
  401fa7:	hlt    
  401fa8:	ficomp WORD PTR [ebx]
  401faa:	fsub   DWORD PTR [bp+si+0x37]
  401fae:	xchg   edi,eax
  401faf:	cmc    
  401fb0:	add    eax,0x9e1e1378
  401fb5:	pop    ecx
  401fb6:	(bad)  
  401fb7:	aaa    
  401fb8:	push   0x66
  401fba:	and    esi,DWORD PTR [edx-0x76]
  401fbd:	popa   
  401fbe:	out    dx,al
  401fbf:	push   eax
  401fc0:	inc    ebp
  401fc1:	add    ebx,DWORD PTR [ebx+eiz*1+0x21]
  401fc5:	sbb    al,0x6a
  401fc7:	fdiv   QWORD PTR [edi+0x41]
  401fca:	shl    BYTE PTR [ecx],1
  401fcc:	cmp    eax,0x4192eec6
  401fd1:	push   eax
  401fd2:	dec    esi
  401fd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fd4:	adc    ch,BYTE PTR [edi+0xf6f0eb8]
  401fda:	outs   dx,BYTE PTR ds:[esi]
  401fdb:	mov    eax,es:0x36da42e9
  401fe1:	shl    BYTE PTR [edx],cl
  401fe3:	or     eax,0xd331310b
  401fe8:	cdq    
  401fe9:	cmp    ebx,ecx
  401feb:	pop    edi
  401fec:	arpl   WORD PTR [esi-0x55c1d5c2],bx
  401ff2:	out    dx,al
  401ff3:	hlt    
  401ff4:	iret   
  401ff5:	mov    bl,0x1d
  401ff7:	lods   al,BYTE PTR ds:[esi]
  401ff8:	pop    ss
  401ff9:	push   ebx
  401ffa:	sahf   
  401ffb:	jnp    0x40203d
  401ffd:	mov    edx,0x28a9f823
  402002:	jne    0x402072
  402004:	jmp    0x40206b
  402006:	int3   
  402007:	out    0x5f,eax
  402009:	and    dl,al
  40200b:	adc    eax,0x8e3be265
  402010:	(bad)  
  402011:	aad    0xcb
  402013:	test   BYTE PTR [ebx+0x79],0x81
  402017:	jb     0x402041
  402019:	rcl    BYTE PTR [eax+0x22],1
  40201c:	xor    edx,DWORD PTR [ebx+0x33]
  40201f:	ss test al,0x24
  402022:	ins    BYTE PTR es:[edi],dx
  402023:	into   
  402024:	sbb    eax,DWORD PTR [eax-0x184135d8]
  40202a:	test   dh,dl
  40202c:	xor    DWORD PTR [edi-0x1c],ebp
  40202f:	fstp   QWORD PTR [ecx+0x30]
  402032:	dec    ebp
  402033:	dec    eax
  402034:	or     esi,0x50
  402037:	ds push ds
  402039:	ror    ebx,cl
  40203b:	fdiv   st,st(4)
  40203d:	(bad)  
  40203e:	fcomi  st,st(7)
  402040:	sub    eax,0x278b7413
  402045:	xor    BYTE PTR ds:0x4909c880,bl
  40204b:	js     0x4020b5
  40204d:	xchg   edi,eax
  40204e:	vcmpss xmm6,xmm2,DWORD PTR [ecx],0x90
  402053:	loop   0x402010
  402055:	jmp    0x82e04c37
  40205a:	sbb    ebp,ebp
  40205c:	xchg   ebp,eax
  40205d:	lods   eax,DWORD PTR ds:[esi]
  40205e:	mov    esi,es
  402060:	(bad)  
  402061:	call   0xda4c470d
  402066:	cmp    DWORD PTR [esi+0x20fcc4a1],ebx
  40206c:	bound  esi,QWORD PTR [ebx]
  40206e:	sti    
  40206f:	or     esp,edi
  402071:	xor    DWORD PTR [edx+0x13],edi
  402074:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402075:	xor    al,0xef
  402077:	jnp    0x40209e
  402079:	das    
  40207a:	sahf   
  40207b:	aad    0x50
  40207d:	xchg   esi,eax
  40207e:	stos   BYTE PTR es:[edi],al
  40207f:	es push ss
  402081:	fist   WORD PTR [edi]
  402083:	add    ah,BYTE PTR [ebx-0x50]
  402086:	and    ebp,ebp
  402088:	(bad)  
  402089:	add    eax,0x5a973ee2
  40208e:	add    ch,dh
  402090:	fisubr WORD PTR [ebx+edx*8+0x3b]
  402094:	xchg   ecx,eax
  402095:	pop    edx
  402096:	mov    al,ds:0x80079b6d
  40209b:	pop    esi
  40209c:	mov    ah,0x7
  40209e:	jae    0x4020e9
  4020a0:	or     al,0x55
  4020a2:	xor    DWORD PTR [eax-0x74],0xffffff83
  4020a6:	xor    ch,dh
  4020a8:	fcomp  DWORD PTR [edi+0xb1c4b8f]
  4020ae:	sbb    ebp,DWORD PTR [esi-0x69bace44]
  4020b4:	dec    esp
  4020b5:	jl     0x402071
  4020b7:	and    ebp,DWORD PTR [ebx+0x799498b1]
  4020bd:	je     0x402139
  4020bf:	das    
  4020c0:	sbb    DWORD PTR [ecx],eax
  4020c2:	pop    ss
  4020c3:	leave  
  4020c4:	outs   dx,DWORD PTR ds:[esi]
  4020c5:	(bad)  
  4020c7:	stos   BYTE PTR es:[edi],al
  4020c8:	mov    ah,0x83
  4020ca:	pop    ecx
  4020cb:	cdq    
  4020cc:	adc    BYTE PTR [edi],dh
  4020ce:	xchg   ebx,eax
  4020cf:	retf   0x5be7
  4020d2:	mov    fs,WORD PTR [eax+ecx*4+0x40609b6c]
  4020d9:	jno    0x402103
  4020db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020dc:	retf   
  4020dd:	xchg   esp,eax
  4020de:	lock mov esi,0x9236b646
  4020e4:	fsubr  DWORD PTR es:[ecx]
  4020e7:	test   al,0x4e
  4020e9:	or     DWORD PTR [edi+0x28e14ca0],esp
  4020ef:	mov    ds:0xda1436cf,al
  4020f4:	cmp    BYTE PTR [edi],bh
  4020f6:	inc    esi
  4020f7:	and    al,0x2f
  4020f9:	adc    al,0x33
  4020fb:	ss icebp 
  4020fd:	inc    ebx
  4020fe:	sbb    BYTE PTR [esi-0x22],dl
  402101:	stos   DWORD PTR es:[edi],eax
  402102:	test   eax,0x92baa053
  402107:	dec    ebx
  402108:	cwde   
  402109:	mov    esp,0x472f65f0
  40210e:	popf   
  40210f:	in     eax,0x14
  402111:	stos   DWORD PTR es:[edi],eax
  402112:	mov    ds:0xa97d5c8f,al
  402117:	push   edx
  402118:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402119:	pop    DWORD PTR [esi+0x4]
  40211c:	stc    
  40211d:	inc    eax
  40211e:	out    0xb2,al
  402120:	push   es
  402121:	mov    edi,0x77887217
  402126:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402127:	push   ebx
  402128:	jae    0x4020e6
  40212a:	pop    ebx
  40212b:	mov    bl,0x1a
  40212d:	xor    dl,dl
  40212f:	dec    eax
  402130:	push   0x4685b4
  402135:	push   ss
  402136:	popw   es
  402138:	lock out dx,al
  40213a:	fwait
  40213b:	hlt    
  40213c:	gs add eax,0x60631eb8
  402142:	xchg   esp,eax
  402143:	mov    ebp,0x700408e2
  402148:	(bad)  
  402149:	pusha  
  40214a:	shl    BYTE PTR [esi-0x60b7f936],0x65
  402151:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402152:	(bad)  
  402153:	sub    BYTE PTR [esi+0x48],bh
  402156:	adc    ebp,DWORD PTR [ebp+eax*2+0x434549e2]
  40215d:	and    DWORD PTR [edx-0x19630c0f],esp
  402163:	mov    al,ds:0x17b87f4d
  402168:	push   ebx
  402169:	imul   edx,eax,0xe24f63c2
  40216f:	mov    cl,0xdb
  402171:	jg     0x4021ed
  402173:	push   ebx
  402174:	leave  
  402175:	test   BYTE PTR [edi-0x7ec1759c],cl
  40217b:	xchg   esi,eax
  40217c:	retf   
  40217d:	fs out dx,al
  40217f:	test   bl,0x4a
  402182:	xchg   edi,eax
  402183:	in     al,dx
  402184:	imul   ebx,DWORD PTR [ebx+0x3a2fcf98],0xa9c48e9
  40218e:	jbe    0x4021b7
  402190:	mov    DWORD PTR [ecx-0x56],eax
  402193:	adc    DWORD PTR [edx-0x2501fcc0],0xffffffb9
  40219a:	sub    eax,0xcacc5931
  40219f:	inc    esp
  4021a0:	mov    eax,ds:0x8f2d8b67
  4021a5:	push   edx
  4021a6:	mov    eax,DWORD PTR [eax+0x44]
  4021a9:	pop    es
  4021aa:	loope  0x4021d1
  4021ac:	nop
  4021ad:	(bad)  
  4021ae:	mov    WORD PTR [ebx+0xbeff347],es
  4021b4:	in     al,0x25
  4021b6:	add    DWORD PTR [ebx+0x476f3630],ebx
  4021bc:	pop    es
  4021bd:	sbb    eax,0x1567c974
  4021c2:	les    ebp,FWORD PTR [eax]
  4021c4:	sub    bl,0xcc
  4021c7:	jae    0x4021cd
  4021c9:	inc    ecx
  4021ca:	push   esi
  4021cb:	aaa    
  4021cc:	inc    edx
  4021cd:	push   es
  4021ce:	mov    ds:0xdf913253,eax
  4021d3:	and    DWORD PTR [ebp+0x261e8297],ebx
  4021d9:	retf   
  4021da:	test   BYTE PTR [edx],dh
  4021dc:	inc    esi
  4021dd:	popa   
  4021de:	ret    
  4021df:	dec    edi
  4021e0:	aas    
  4021e1:	cwde   
  4021e2:	cmp    esi,edx
  4021e4:	outs   dx,DWORD PTR ds:[esi]
  4021e5:	push   esp
  4021e6:	add    ecx,esp
  4021e8:	add    BYTE PTR [edi+0x34],cl
  4021eb:	and    ecx,0xffffff9a
  4021ee:	push   ebx
  4021ef:	pop    ebx
  4021f0:	(bad)
  4021f4:	imul   ecx,DWORD PTR [ebp-0x17],0xae24ad12
  4021fb:	sbb    ebx,0xbc19b30d
  402201:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  402203:	lds    esi,FWORD PTR [ebx]
  402205:	jl     0x402225
  402207:	test   al,0xb
  402209:	xchg   ecx,eax
  40220a:	retf   
  40220b:	pop    esp
  40220c:	pop    ecx
  40220d:	mov    ebx,0x59f3a50d
  402212:	jmp    0x931b:0x1ee59b33
  402219:	dec    esp
  40221a:	fidiv  WORD PTR gs:[ecx-0xe]
  40221e:	mov    DWORD PTR [edi+ebp*1-0x6309c8ac],ecx
  402225:	jle    0x402232
  402227:	or     BYTE PTR [ecx+0x6d],0x85
  40222b:	out    0x3,eax
  40222d:	sub    BYTE PTR [ebx+0x77],dl
  402230:	cmp    cl,BYTE PTR [esi]
  402232:	pop    ss
  402233:	in     al,0x7e
  402235:	popa   
  402236:	add    bl,cl
  402238:	push   ebp
  402239:	or     al,0x19
  40223b:	pop    esi
  40223c:	fisttp WORD PTR [edi]
  40223e:	and    BYTE PTR [ecx+0x5086d534],cl
  402244:	add    BYTE PTR [ebp+0x5d],ch
  402247:	fisttp QWORD PTR [esi]
  402249:	add    eax,0xfffffff9
  40224c:	popf   
  40224d:	push   ecx
  40224e:	loopne 0x4022b1
  402250:	pop    esi
  402251:	xor    esp,DWORD PTR [edx]
  402253:	xor    eax,0xa4ade2e8
  402258:	aam    0xda
  40225a:	xor    al,0x3f
  40225c:	dec    eax
  40225d:	popa   
  40225e:	fld    TBYTE PTR [ecx-0x38]
  402261:	(bad)  
  402262:	lods   eax,DWORD PTR ds:[esi]
  402263:	enter  0x488b,0xce
  402267:	fst    DWORD PTR [eax+0x28194f51]
  40226d:	push   esp
  40226e:	rcr    DWORD PTR [ebp-0x9e63ded],0x51
  402275:	lea    esi,[edi+ebp*4]
  402278:	lds    ebx,FWORD PTR [esi+0x4f]
  40227b:	rcl    dl,0x54
  40227e:	inc    eax
  40227f:	and    al,0xbf
  402281:	je     0x4022da
  402283:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402284:	inc    edx
  402285:	sbb    al,0x8b
  402287:	push   esp
  402288:	cmp    dl,BYTE PTR [edx+ebp*8+0xe8c4826]
  40228f:	int3   
  402290:	adc    eax,0x902f2fcb
  402295:	push   edi
  402296:	das    
  402297:	int3   
  402298:	je     0x4022de
  40229a:	adc    edx,DWORD PTR [ebp+0x4b8d2e39]
  4022a0:	jno    0x4022e7
  4022a2:	push   ecx
  4022a3:	(bad)  
  4022a4:	hlt    
  4022a5:	dec    esi
  4022a6:	iret   
  4022a7:	mov    edx,0xfe4dac95
  4022ac:	sbb    bh,dl
  4022ae:	retf   
  4022af:	mov    ah,0xe
  4022b1:	add    eax,0x2ee466e6
  4022b6:	leave  
  4022b7:	sti    
  4022b8:	inc    ebp
  4022b9:	mov    ecx,0xbe1e140d
  4022be:	sbb    DWORD PTR [ebx],ebp
  4022c0:	xchg   ebx,eax
  4022c1:	xlat   BYTE PTR ds:[ebx]
  4022c2:	jb     0x4022e5
  4022c4:	ja     0x4022be
  4022c6:	imul   edx,ebp,0xffffff87
  4022c9:	jne    0x40226d
  4022cb:	mov    ds:0x14a311fb,eax
  4022d0:	xlat   BYTE PTR ds:[ebx]
  4022d1:	stos   DWORD PTR es:[edi],eax
  4022d2:	(bad)  
  4022d3:	in     al,dx
  4022d4:	(bad)  
  4022d5:	dec    ebx
  4022d6:	pop    ecx
  4022d7:	call   FWORD PTR [eiz*4+0x5744a1b0]
  4022de:	ins    BYTE PTR es:[edi],dx
  4022df:	in     al,dx
  4022e0:	or     al,bh
  4022e2:	popa   
  4022e3:	add    DWORD PTR [ebx+0x654281ff],esi
  4022e9:	mov    eax,ds:0x396e6bd4
  4022ee:	lods   eax,DWORD PTR ds:[esi]
  4022ef:	xor    ebp,edx
  4022f1:	pop    esi
  4022f2:	pop    ecx
  4022f3:	test   eax,0xdc64545f
  4022f8:	ret    
  4022f9:	push   es
  4022fa:	xchg   ebx,eax
  4022fb:	shr    BYTE PTR [eax-0x7355405e],cl
  402301:	jo     0x40228e
  402303:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402305:	pop    ebp
  402306:	push   edi
  402307:	fbld   TBYTE PTR [edi-0x2b03858]
  40230d:	jge    0x402367
  40230f:	das    
  402310:	leave  
  402311:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402312:	ret    0xe642
  402315:	in     al,0x4e
  402317:	loop   0x4022f6
  402319:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40231a:	xchg   DWORD PTR [ebx],ebp
  40231c:	cmp    DWORD PTR [esi-0x61fd40f4],eax
  402322:	lock sub dh,BYTE PTR [edx]
  402325:	pop    edx
  402326:	call   0x791a:0xad9dbafe
  40232d:	hlt    
  40232e:	lahf   
  40232f:	rol    BYTE PTR [ebx],1
  402331:	popa   
  402332:	call   0x867f558b
  402337:	sub    ebp,edx
  402339:	loope  0x4023ac
  40233b:	outs   dx,BYTE PTR ds:[esi]
  40233c:	lds    ebx,FWORD PTR [ebp-0x23a63b7]
  402342:	mov    BYTE PTR [ebp+0x57],dl
  402345:	js     0x402333
  402347:	enter  0x25f5,0x3e
  40234b:	and    eax,0x4ebbc289
  402350:	xchg   ah,dl
  402352:	cdq    
  402353:	push   ds
  402354:	test   DWORD PTR [ebx+0x545c71e3],ebx
  40235a:	leave  
  40235b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40235c:	pop    ecx
  40235d:	cmp    al,BYTE PTR [edi+ebx*8]
  402360:	dec    esp
  402361:	xor    bl,BYTE PTR [ebp-0x2c023558]
  402367:	inc    ebp
  402368:	ja     0x4023e0
  40236a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40236b:	leave  
  40236c:	lds    ecx,FWORD PTR [bx+si]
  40236f:	fwait
  402370:	pop    ebx
  402371:	jbe    0x40233d
  402373:	pop    ebp
  402374:	adc    ebp,ecx
  402376:	test   BYTE PTR [eax],dl
  402378:	sbb    eax,ebp
  40237a:	dec    edi
  40237b:	mov    ebp,0xadc8ed5
  402380:	adc    BYTE PTR [eax-0x5c],dl
  402383:	inc    eax
  402384:	dec    eax
  402385:	int    0xa
  402387:	mov    al,ds:0x98ba0bc8
  40238c:	adc    al,0x43
  40238e:	xor    eax,0xc3d272e3
  402393:	fiadd  DWORD PTR [ebp-0x7c]
  402396:	imul   ebx,DWORD PTR [edi-0x77],0xf12cfcaa
  40239d:	or     BYTE PTR [eax-0x3c],bl
  4023a0:	fadd   DWORD PTR [eax-0xb]
  4023a3:	inc    ecx
  4023a4:	or     al,0xd
  4023a6:	xchg   ebx,eax
  4023a7:	sub    eax,eax
  4023a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023aa:	push   eax
  4023ab:	xchg   edi,eax
  4023ac:	pushf  
  4023ad:	popa   
  4023ae:	(bad)  
  4023af:	mov    ah,0x30
  4023b1:	mov    eax,0x25e2509f
  4023b6:	lahf   
  4023b7:	inc    ecx
  4023b8:	loope  0x40238b
  4023ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023bb:	(bad)  
  4023bc:	xchg   esp,eax
  4023bd:	test   al,bl
  4023bf:	inc    DWORD PTR [esi-0x200c74ff]
  4023c5:	mov    edi,0x280b4bcf
  4023ca:	daa    
  4023cb:	adc    DWORD PTR [edx],edx
  4023cd:	jno    0x4023f8
  4023cf:	mov    BYTE PTR [ecx+eax*4],bl
  4023d2:	ror    bl,1
  4023d4:	push   edx
  4023d5:	push   es
  4023d6:	ret    
  4023d7:	lahf   
  4023d8:	(bad)  
  4023d9:	(bad)  
  4023da:	cmp    esi,DWORD PTR [eax+0x15]
  4023dd:	fistp  QWORD PTR [edi+0x499dad86]
  4023e3:	xor    BYTE PTR [ebp-0x2b],dl
  4023e6:	mov    bh,0x6d
  4023e8:	sub    al,al
  4023ea:	inc    edi
  4023eb:	cmp    al,BYTE PTR [ecx-0x3d]
  4023ee:	mov    edx,DWORD PTR [esi-0xbef3b9c]
  4023f4:	loopne 0x402399
  4023f6:	and    eax,0x6bcb22a4
  4023fb:	or     eax,0x3c304143
  402400:	into   
  402401:	mov    ebp,0x4b94b974
  402406:	fs push eax
  402408:	in     al,dx
  402409:	cmp    eax,DWORD PTR [ebx-0x66]
  40240c:	in     eax,0x8e
  40240e:	inc    edx
  40240f:	in     eax,dx
  402410:	sbb    ecx,DWORD PTR [eax+edx*2+0x3163b07c]
  402417:	xor    ebx,ebx
  402419:	push   eax
  40241a:	push   edi
  40241b:	cmp    ebp,DWORD PTR [edi-0x5f]
  40241e:	jae    0x4023e3
  402420:	clc    
  402421:	cli    
  402422:	mov    eax,ds:0xd4255b8b
  402427:	cmp    BYTE PTR es:[ebp+0x3ca9f48d],bh
  40242e:	js     0x402496
  402430:	aam    0xc2
  402432:	push   ds
  402433:	adc    dl,al
  402435:	jbe    0x402464
  402437:	or     eax,0x30fb280a
  40243c:	retf   0x23e5
  40243f:	mov    bh,0xed
  402441:	and    DWORD PTR [edx-0x6a453a7b],ebx
  402447:	mov    ds:0x32664f51,eax
  40244c:	add    BYTE PTR [ecx],cl
  40244e:	mov    dh,0x20
  402450:	in     eax,dx
  402451:	popa   
  402452:	mov    ebx,0xfb68342e
  402457:	pop    eax
  402458:	jl     0x402442
  40245a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40245b:	les    edx,FWORD PTR [ecx-0x5b]
  40245e:	mov    dh,0x72
  402460:	mov    ds:0xab53e0f5,al
  402465:	leave  
  402466:	std    
  402467:	xor    al,BYTE PTR [eax]
  402469:	in     eax,dx
  40246a:	xchg   esp,eax
  40246b:	lahf   
  40246c:	ins    DWORD PTR es:[edi],dx
  40246d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40246e:	and    cl,dh
  402470:	add    al,0xd
  402472:	dec    esi
  402473:	xchg   ecx,eax
  402474:	icebp  
  402475:	and    BYTE PTR [eax],ch
  402477:	add    DWORD PTR [eax+ecx*4+0x4efc72df],eax
  40247e:	sahf   
  40247f:	dec    ecx
  402480:	cld    
  402481:	inc    esp
  402482:	adc    al,0x63
  402484:	jo     0x40245d
  402486:	sub    ch,BYTE PTR [ecx]
  402488:	inc    ecx
  402489:	mov    al,0xe1
  40248b:	stos   BYTE PTR es:[edi],al
  40248c:	cmp    al,0x8a
  40248e:	dec    ebx
  40248f:	call   DWORD PTR [edi+esi*2+0x15ee6d95]
  402496:	frstor [edx-0x6285ea00]
  40249c:	(bad)  
  40249d:	xor    eax,DWORD PTR [edx+esi*1]
  4024a0:	scas   al,BYTE PTR es:[edi]
  4024a1:	jle    0x402460
  4024a3:	push   ds
  4024a4:	data16 fdivr DWORD PTR [esi-0x113dd65f]
  4024ab:	lahf   
  4024ac:	xchg   BYTE PTR [edi],al
  4024ae:	es (bad) 
  4024b0:	jnp    0x402511
  4024b2:	push   edx
  4024b3:	adc    dl,BYTE PTR [edx-0x376ae6cb]
  4024b9:	and    al,0x3
  4024bb:	adc    BYTE PTR [ebp-0x35390001],ch
  4024c1:	(bad)  
  4024c2:	push   edx
  4024c3:	and    ch,BYTE PTR [ebx-0x520659e8]
  4024c9:	ins    BYTE PTR es:[edi],dx
  4024ca:	ror    BYTE PTR [esi+0x44],0x30
  4024ce:	add    al,0x14
  4024d0:	or     bh,ah
  4024d2:	pop    ss
  4024d3:	push   ebp
  4024d4:	inc    esp
  4024d5:	stc    
  4024d6:	pop    edx
  4024d7:	push   edi
  4024d8:	or     edi,DWORD PTR [eax]
  4024da:	cmp    ecx,edi
  4024dc:	rol    ch,1
  4024de:	scas   eax,DWORD PTR es:[edi]
  4024df:	mov    ds:0x424f56a,al
  4024e4:	pop    ecx
  4024e5:	lods   eax,DWORD PTR ds:[esi]
  4024e6:	jbe    0x4024e8
  4024e8:	enter  0x804b,0xc1
  4024ec:	adc    ecx,DWORD PTR [edx-0x464aa80b]
  4024f2:	and    eax,0x58ff432c
  4024f7:	loope  0x40251d
  4024f9:	sbb    al,0x40
  4024fb:	ret    0xe46b
  4024fe:	xor    al,0x75
  402500:	cmp    cl,BYTE PTR [edi]
  402502:	ficomp DWORD PTR [edi]
  402504:	mov    ebx,0xbce69c60
  402509:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40250a:	ss cli 
  40250c:	ror    DWORD PTR [ebx-0x6e],0xb8
  402510:	lds    ebx,FWORD PTR [edi-0x7bf92a82]
  402516:	shr    DWORD PTR [edx+0x5672ddc2],cl
  40251c:	call   0xb139960c
  402521:	cmc    
  402522:	mov    bh,0xb7
  402524:	push   ds
  402525:	int    0xc0
  402527:	jno    0x40258a
  402529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40252a:	fisttp QWORD PTR [eax+0x37]
  40252d:	jmp    0x7129:0xa0ba59f7
  402534:	xchg   ecx,eax
  402535:	xchg   edx,eax
  402536:	xchg   esi,eax
  402537:	enter  0x15c5,0xb
  40253b:	adc    al,0xa
  40253d:	out    dx,eax
  40253e:	jge    0x4024d4
  402540:	mov    ds:0xf650bcec,eax
  402545:	mov    dh,0xfe
  402547:	jno    0x40251a
  402549:	scas   eax,DWORD PTR es:[edi]
  40254a:	aas    
  40254b:	fwait
  40254c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40254d:	not    DWORD PTR [ecx+0x1d]
  402550:	ror    BYTE PTR [ebx],1
  402552:	jmp    0x40259d
  402554:	push   edi
  402556:	mov    ds,edx
  402558:	fild   WORD PTR [edi]
  40255a:	and    DWORD PTR [ebx],eax
  40255c:	int3   
  40255d:	in     eax,dx
  40255e:	cmp    DWORD PTR [edx-0xf383718],ebx
  402564:	inc    edx
  402565:	mov    edi,0xecfe6fbd
  40256a:	push   eax
  40256b:	mov    WORD PTR [ebx-0x18d34ee9],fs
  402571:	shl    ah,0xa
  402574:	push   ebx
  402575:	sar    BYTE PTR [edi-0xd0e4259],1
  40257b:	neg    ebx
  40257d:	enter  0xa135,0xfb
  402581:	push   ecx
  402582:	mov    ch,BYTE PTR [ebx-0x3b]
  402585:	lods   al,BYTE PTR ds:[esi]
  402586:	pop    esi
  402587:	dec    eax
  402588:	push   ss
  402589:	ja     0x4025bd
  40258b:	mov    dh,0x86
  40258d:	mov    eax,ds:0xd2a33f3c
  402592:	adc    eax,0x9eee21be
  402597:	mov    WORD PTR [edx-0x63],ss
  40259a:	jge    0x402576
  40259c:	jmp    0xdb37:0x4cfb2ee7
  4025a3:	pop    edx
  4025a4:	adc    DWORD PTR [eax+0x2fee66d5],0x51
  4025ab:	div    DWORD PTR [esi+0x21f3a3fb]
  4025b1:	mov    ch,0xd1
  4025b3:	cwde   
  4025b4:	cs push ds
  4025b6:	dec    eax
  4025b7:	mov    al,0x80
  4025b9:	or     DWORD PTR [ecx*4-0x254cb60a],0xfffffff5
  4025c1:	in     eax,dx
  4025c2:	and    BYTE PTR [ebx-0x7d],ch
  4025c5:	aas    
  4025c6:	retf   
  4025c7:	pop    ss
  4025c8:	push   edx
  4025c9:	cld    
  4025ca:	loop   0x40257f
  4025cc:	dec    esi
  4025cd:	lahf   
  4025ce:	stos   DWORD PTR es:[edi],eax
  4025cf:	mov    bh,0xa0
  4025d1:	pop    ecx
  4025d2:	adc    DWORD PTR [edi-0x5d],eax
  4025d5:	or     esp,DWORD PTR ds:0x4c3db030
  4025db:	cmp    DWORD PTR [ebx+0x1503b89b],0x6facbebb
  4025e5:	loopne 0x40261b
  4025e7:	jmp    0x8a09916
  4025ec:	push   edx
  4025ed:	pop    es
  4025ee:	sub    ecx,esi
  4025f0:	xchg   edi,eax
  4025f1:	xchg   edi,eax
  4025f2:	mov    eax,ds:0xa6d2941c
  4025f7:	icebp  
  4025f8:	xor    DWORD PTR [ebx-0x7a],0xe0f7f8bf
  4025ff:	iret   
  402600:	sbb    ebx,eax
  402602:	pop    es
  402603:	mov    eax,ds:0x61b84c28
  402608:	in     al,dx
  402609:	imul   edi,DWORD PTR [eax],0xffffffe4
  40260c:	aaa    
  40260d:	fmul   QWORD PTR [ebx+0x1e]
  402610:	mov    ds:0xed5f2bb7,eax
  402615:	loopne 0x402664
  402617:	dec    ecx
  402618:	rcl    ebx,cl
  40261a:	pop    esp
  40261b:	out    0x76,al
  40261d:	push   ebx
  40261e:	and    edi,edx
  402620:	inc    esi
  402621:	mov    ecx,0x366e8dde
  402626:	mov    esp,DWORD PTR [edx+0x5d19d494]
  40262c:	popa   
  40262d:	ror    BYTE PTR [edx-0x5132153],0x78
  402634:	push   ebx
  402635:	mov    ds,WORD PTR [ecx*8+0x182a3221]
  40263c:	lahf   
  40263d:	push   eax
  40263e:	and    DWORD PTR [esi+0x52bd776d],ebx
  402644:	sub    cl,BYTE PTR [ebx-0x7f540554]
  40264a:	(bad)  
  40264b:	sbb    DWORD PTR [edi],ebp
  40264d:	push   edi
  40264e:	sub    ah,BYTE PTR [esi+0x8fa4872]
  402654:	dec    edi
  402655:	neg    BYTE PTR [edi+0x3b80eeee]
  40265b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40265c:	data16 test al,0xa6
  40265f:	push   ecx
  402660:	stos   DWORD PTR es:[edi],eax
  402661:	pop    ecx
  402662:	icebp  
  402663:	frstor [edx-0x6697b9c1]
  402669:	inc    edx
  40266a:	sbb    DWORD PTR ss:[esi-0x2bef3dd4],0x394d2f45
  402675:	fucomip st,st(7)
  402677:	hlt    
  402678:	pushf  
  402679:	in     al,0x3f
  40267b:	lea    ecx,[ecx+0x61298b33]
  402681:	loope  0x402694
  402683:	out    dx,eax
  402684:	mov    ds:0xa211cc1f,eax
  402689:	push   ebp
  40268a:	jle    0x40266c
  40268c:	enter  0xae00,0xf5
  402690:	js     0x402680
  402692:	fstp   QWORD PTR [ebp-0x33ab911]
  402698:	xor    BYTE PTR [eax],cl
  40269a:	push   edx
  40269b:	arpl   WORD PTR [edi-0x7a],dx
  40269e:	sbb    DWORD PTR [ebx-0x1417efb3],ebp
  4026a4:	pushf  
  4026a5:	or     esi,eax
  4026a7:	shl    BYTE PTR [esi+edi*4+0x187be6bd],cl
  4026ae:	je     0x4026c9
  4026b0:	sbb    eax,0xc4b2f932
  4026b5:	mov    bh,0x3e
  4026b7:	call   0x399a1ad1
  4026bc:	int    0xfe
  4026be:	push   ds
  4026bf:	loope  0x4026a4
  4026c1:	fcmovb st,st(2)
  4026c3:	gs and ecx,0xffffff81
  4026c7:	cwde   
  4026c8:	adc    esp,DWORD PTR ds:0x3a3342f9
  4026ce:	add    edi,DWORD PTR [edi+0x30]
  4026d1:	sub    al,0x1f
  4026d3:	fisttp DWORD PTR [edx+ebx*4]
  4026d6:	adc    esp,DWORD PTR [edx+0x234c12a9]
  4026dc:	sbb    eax,0x6477818a
  4026e1:	dec    ebx
  4026e2:	pop    ebp
  4026e3:	xor    BYTE PTR [esi],ch
  4026e5:	jnp    0x402766
  4026e7:	test   BYTE PTR [eax],0x4d
  4026ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026eb:	lods   al,BYTE PTR ds:[esi]
  4026ec:	mov    eax,ds:0x1a187b37
  4026f1:	adc    BYTE PTR [esi],0xb0
  4026f4:	dec    esp
  4026f5:	and    bh,cl
  4026f7:	popf   
  4026f8:	and    BYTE PTR [eax],ah
  4026fa:	jle    0x40272c
  4026fc:	ret    
  4026fd:	pmulhuw mm3,mm5
  402700:	and    al,0x2e
  402702:	push   esi
  402703:	sahf   
  402704:	inc    ebp
  402705:	imul   edi,DWORD PTR [eax],0xb
  402708:	xchg   BYTE PTR [edx-0x18494bab],cl
  40270e:	es int 0x7a
  402711:	call   0x992a:0x388ac518
  402718:	or     ecx,ebp
  40271a:	mov    WORD PTR [ecx+ebp*8],cs
  40271d:	lea    edx,[eax+0x2d]
  402720:	fmul   QWORD PTR [esi]
  402722:	outs   dx,BYTE PTR ds:[esi]
  402723:	and    DWORD PTR [ecx+0x23],0xffffffa5
  402727:	pop    edx
  402728:	jg     0x4026ae
  40272a:	nop
  40272b:	setge  BYTE PTR [esi]
  40272e:	push   ss
  40272f:	les    eax,FWORD PTR [edi]
  402731:	mov    WORD PTR [ebx],?
  402733:	xor    BYTE PTR [edi+0x2e],0x3d
  402737:	sub    eax,0xcbb32121
  40273c:	(bad)  
  40273d:	mov    edx,0x34d06e65
  402742:	push   esi
  402743:	in     al,0xf4
  402745:	inc    edx
  402746:	retf   0xcb35
  402749:	pop    ss
  40274a:	or     edx,DWORD PTR [ebp+0x4b95b8eb]
  402750:	arpl   WORD PTR [ebx+0x5f],bp
  402753:	dec    esp
  402754:	fldlg2 
  402756:	or     DWORD PTR [eax],ebx
  402758:	sbb    al,0x88
  40275a:	(bad)  
  40275b:	cld    
  40275c:	test   BYTE PTR [esp+ecx*2+0xe0aa091],al
  402763:	sub    eax,0xcb9d4eae
  402768:	pop    ebp
  402769:	lea    eax,[eax-0x55f4ce25]
  40276f:	sub    al,0x1f
  402771:	xor    ah,BYTE PTR [ebp+0x6e]
  402774:	jne    0x4027a9
  402776:	std    
  402777:	outs   dx,DWORD PTR ds:[esi]
  402778:	jne    0x40279d
  40277a:	sub    al,0x35
  40277c:	les    ecx,FWORD PTR [ebx+0x6]
  40277f:	retf   
  402780:	pop    esp
  402781:	lahf   
  402782:	daa    
  402783:	mov    bl,0xf2
  402785:	dec    ecx
  402786:	(bad)  
  402787:	mov    ecx,0x847d5403
  40278c:	in     eax,0xf6
  40278e:	outs   dx,BYTE PTR ds:[esi]
  40278f:	mov    WORD PTR [edi+0x6f8c6bc9],fs
  402795:	(bad)  
  402797:	call   0x841d3a5d
  40279c:	add    eax,0x53f45970
  4027a1:	or     DWORD PTR [esp+ebx*2],eax
  4027a4:	push   cs
  4027a5:	popa   
  4027a6:	pop    ss
  4027a7:	aas    
  4027a8:	sbb    DWORD PTR [ebx-0x45],ebx
  4027ab:	fs jmp 0xe59e:0xcd2e1942
  4027b3:	in     al,dx
  4027b4:	xor    ah,ah
  4027b6:	mov    esp,0x2eb4f33
  4027bb:	sub    al,0x2f
  4027bd:	imul   edi,esi,0xb028a53a
  4027c3:	aam    0x27
  4027c5:	mov    ebx,0xf70ba2ea
  4027ca:	mov    edi,0xf56c268d
  4027cf:	ret    0x5e32
  4027d2:	ror    BYTE PTR [ebp+0x32144461],1
  4027d8:	xchg   esp,eax
  4027d9:	fwait
  4027da:	pushf  
  4027db:	iret   
  4027dc:	mov    edi,0xd1fb8a87
  4027e1:	je     0x402763
  4027e3:	test   DWORD PTR [eax+edx*8-0x36670d2d],edx
  4027ea:	dec    ecx
  4027eb:	retf   0x4dae
  4027ee:	sbb    al,0xf2
  4027f0:	inc    edx
  4027f1:	out    dx,eax
  4027f2:	sub    ecx,DWORD PTR [ebx+0x1bb4fc17]
  4027f8:	test   ebx,ebx
  4027fa:	cmp    DWORD PTR [ecx],ebp
  4027fc:	clc    
  4027fd:	xchg   edi,eax
  4027fe:	cwde   
  4027ff:	inc    esi
  402800:	dec    ebx
  402801:	shr    BYTE PTR ds:[eax],1
  402804:	pop    edi
  402805:	sub    ah,BYTE PTR [ebx+0x1d]
  402808:	outs   dx,BYTE PTR ds:[esi]
  402809:	or     BYTE PTR [eax-0x66e58180],dh
  40280f:	dec    esp
  402810:	test   BYTE PTR [esi],bh
  402812:	test   eax,0x7007c881
  402817:	jge    0x402834
  402819:	enter  0x824e,0x9e
  40281d:	jecxz  0x40286a
  40281f:	inc    ecx
  402820:	mul    DWORD PTR [edi+ebx*8]
  402823:	(bad)  
  402824:	mov    bh,0x73
  402826:	mov    al,0x16
  402828:	jno    0x4028a6
  40282a:	dec    eax
  40282b:	mov    ebp,0xb21637e6
  402830:	lods   al,BYTE PTR ds:[esi]
  402831:	sub    DWORD PTR ds:0x478538f9,esi
  402837:	(bad)  
  402838:	call   0xa9e5:0xe93ef6af
  40283f:	out    0x6d,al
  402841:	jbe    0x402856
  402843:	mov    DWORD PTR [edx+0x22],esi
  402846:	std    
  402847:	dec    ebp
  402848:	out    0xc9,al
  40284a:	and    edx,DWORD PTR [edx+0x34c44851]
  402850:	div    esi
  402852:	test   al,0xc7
  402854:	(bad)  
  402855:	mov    dl,0xbe
  402857:	xlat   BYTE PTR ds:[ebx]
  402858:	lahf   
  402859:	push   es
  40285a:	test   BYTE PTR [edx-0x77],bl
  40285d:	fcmovbe st,st(5)
  40285f:	dec    ebx
  402860:	mov    bh,BYTE PTR [ebp+0x16]
  402863:	jno    0x40283e
  402865:	dec    esp
  402866:	xchg   BYTE PTR [ecx+0x63],al
  402869:	and    al,bh
  40286b:	dec    edi
  40286c:	xor    ch,dl
  40286e:	push   0xffffffc3
  402870:	sbb    eax,0x2d03e9a6
  402875:	test   al,0x7
  402877:	push   cs
  402878:	shr    DWORD PTR [ebx],cl
  40287a:	add    eax,0x6ce0875
  40287f:	shl    DWORD PTR [esi-0x7c],cl
  402882:	add    ch,BYTE PTR [eax*8+0x63f65b4b]
  402889:	addr16 inc esi
  40288b:	ins    BYTE PTR es:[edi],dx
  40288c:	pop    eax
  40288d:	cs mov ecx,0x3643b3e6
  402893:	xchg   ebx,eax
  402894:	sbb    edi,DWORD PTR [edi-0x78]
  402897:	and    BYTE PTR [ebx],cl
  402899:	int3   
  40289a:	inc    edi
  40289b:	(bad)
  40289e:	push   ebx
  40289f:	cld    
  4028a0:	xor    BYTE PTR [esi-0x5eb8b467],cl
  4028a6:	es dec esi
  4028a8:	or     al,0x39
  4028aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028ab:	pop    ds
  4028ac:	iret   
  4028ad:	rol    ecx,0x66
  4028b0:	ds adc eax,0x50deb282
  4028b6:	adc    eax,DWORD PTR ds:[esi+0x2255e5fa]
  4028bd:	ror    DWORD PTR [ecx-0x1013b4a1],cl
  4028c3:	test   al,0xa4
  4028c5:	mov    dl,0x50
  4028c7:	(bad)  
  4028c8:	jecxz  0x402938
  4028ca:	or     esp,DWORD PTR [ecx+eax*4]
  4028cd:	cmp    DWORD PTR [ebx+0x55a056d4],eax
  4028d3:	js     0x4028bc
  4028d5:	mov    eax,0x7cfa2662
  4028da:	or     BYTE PTR [ebp+0x2d5d54d],cl
  4028e0:	arpl   bx,dx
  4028e2:	call   0x558e:0x290ef0f2
  4028e9:	shl    DWORD PTR ds:[eax],cl
  4028ec:	jecxz  0x402885
  4028ee:	lods   al,BYTE PTR ds:[esi]
  4028ef:	adc    eax,edx
  4028f1:	test   eax,0x2b13dd6c
  4028f6:	mov    eax,ds:0xf555a311
  4028fb:	fld    QWORD PTR [ebx-0x69]
  4028fe:	mov    esp,0xe9ba8f7e
  402903:	retf   0xc065
  402906:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402907:	mov    al,ds:0xc43030de
  40290c:	ins    DWORD PTR es:[edi],dx
  40290d:	pop    ebx
  40290e:	jge    0x40294c
  402910:	pusha  
  402911:	call   DWORD PTR [edi]
  402913:	sbb    eax,0xdaafcb8e
  402918:	mov    esp,0x71bf2daa
  40291d:	cli    
  40291e:	push   cs
  40291f:	shr    BYTE PTR [ebp-0x12542034],cl
  402925:	and    bl,BYTE PTR [ecx]
  402927:	push   ebp
  402928:	mov    bl,BYTE PTR [ecx-0x6b]
  40292b:	cmc    
  40292c:	or     BYTE PTR [ecx-0x56],cl
  40292f:	(bad)  
  402930:	ficomp DWORD PTR [ecx]
  402932:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402933:	lods   eax,DWORD PTR ds:[esi]
  402934:	das    
  402935:	xchg   ebx,eax
  402936:	outs   dx,DWORD PTR ds:[esi]
  402937:	push   cs
  402938:	gs test dl,cl
  40293b:	or     ebp,edi
  40293d:	hlt    
  40293e:	pop    es
  40293f:	loopne 0x402977
  402941:	loope  0x40298b
  402943:	pop    ecx
  402944:	adc    DWORD PTR [ebx],eax
  402946:	lock retf 
  402948:	repnz xor DWORD PTR [ebx],ecx
  40294b:	rol    DWORD PTR ds:0xd7779404,cl
  402951:	adc    DWORD PTR ds:0x34488ba6,0x9f607618
  40295b:	inc    esp
  40295c:	xchg   edi,eax
  40295d:	push   cs
  40295e:	ror    dh,0xb4
  402961:	ins    BYTE PTR es:[edi],dx
  402962:	in     al,dx
  402963:	mov    ch,0x3d
  402965:	jge    0x40296a
  402967:	lea    esp,[ebx]
  402969:	jae    0x4029a2
  40296b:	pop    esp
  40296c:	in     eax,0xdf
  40296e:	jg     0x4029be
  402970:	pop    ss
  402971:	in     eax,0xf
  402973:	gs leave 
  402975:	shr    bh,cl
  402977:	jae    0x402935
  402979:	out    0x4d,al
  40297b:	pop    ecx
  40297c:	sahf   
  40297d:	mov    edx,DWORD PTR [esp+eax*2-0x36]
  402981:	xchg   esp,eax
  402982:	mov    al,gs:0x7146aa36
  402988:	data16 fmul DWORD PTR [eax-0x3e]
  40298c:	xchg   ecx,eax
  40298d:	popa   
  40298e:	xchg   ebp,eax
  40298f:	inc    ecx
  402990:	xchg   ecx,eax
  402991:	repnz (bad) 
  402993:	mov    al,0x85
  402995:	shr    DWORD PTR [eax-0x1ce4b3f3],0x9b
  40299c:	addr16 fs out 0xae,al
  4029a0:	adc    BYTE PTR [eax-0x66808389],bl
  4029a6:	aaa    
  4029a7:	pop    ds
  4029a8:	xchg   DWORD PTR [edx+0x1e],ebx
  4029ab:	mov    dh,bh
  4029ad:	or     BYTE PTR [edi-0x72],bh
  4029b0:	sahf   
  4029b1:	ss inc ecx
  4029b3:	add    eax,0x1e4dbab5
  4029b8:	lea    ecx,[esi]
  4029ba:	adc    DWORD PTR [esi-0x71],edi
  4029bd:	xor    BYTE PTR [eax],bh
  4029bf:	xchg   ebx,eax
  4029c0:	mov    bh,BYTE PTR [esi]
  4029c2:	mov    ds:0x281a7e83,eax
  4029c7:	iret   
  4029c8:	sti    
  4029c9:	inc    eax
  4029ca:	js     0x402955
  4029cc:	adc    ebp,DWORD PTR [edx-0x6f3c3fe4]
  4029d2:	pop    edi
  4029d3:	fisttp QWORD PTR [esi+ecx*1+0xc856885]
  4029da:	sbb    edx,DWORD PTR [ecx-0x613f70f5]
  4029e0:	add    al,0xf0
  4029e2:	cwde   
  4029e3:	push   edx
  4029e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029e5:	pop    es
  4029e6:	mov    esi,0x1f8d6081
  4029eb:	int3   
  4029ec:	dec    ebx
  4029ed:	icebp  
  4029ee:	xchg   esp,eax
  4029ef:	mov    eax,ds:0xcb909c87
  4029f4:	(bad)
  4029f9:	cmp    al,0x63
  4029fb:	dec    edi
  4029fc:	inc    edi
  4029fd:	or     eax,0x1b02ec20
  402a02:	div    ch
  402a04:	dec    edi
  402a05:	fimul  WORD PTR [eax]
  402a07:	push   es
  402a08:	out    dx,al
  402a09:	ins    DWORD PTR es:[edi],dx
  402a0a:	(bad)  
  402a0b:	cs (bad) 
  402a0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a0e:	ficom  DWORD PTR [esi+ecx*4+0xb]
  402a12:	jmp    0x504c8054
  402a17:	jg     0x4029e1
  402a19:	pop    edx
  402a1a:	mov    BYTE PTR [ebx+ebx*2-0x63],cl
  402a1e:	jg     0x402a18
  402a20:	test   BYTE PTR [ecx-0x3a],0x91
  402a24:	xchg   ecx,eax
  402a25:	sub    dh,dl
  402a27:	jl     0x402a9a
  402a29:	cmc    
  402a2a:	mov    eax,0xba19356
  402a2f:	sbb    bh,al
  402a31:	imul   eax,DWORD PTR [ebp-0x2f],0x52
  402a35:	and    eax,DWORD PTR [ebp+0x528a9645]
  402a3b:	mov    DWORD PTR [edi+0x1d],0x4d7ea7a0
  402a42:	out    0xc5,al
  402a44:	ficom  DWORD PTR [eax+edx*8+0x4d]
  402a48:	lods   al,BYTE PTR ds:[esi]
  402a49:	(bad)  
  402a4a:	jbe    0x402a43
  402a4c:	(bad)  
  402a4e:	in     eax,0x39
  402a50:	pop    ds
  402a51:	call   0x95ca:0x3110ecb4
  402a58:	jne    0x402a3d
  402a5a:	xchg   esi,eax
  402a5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a5c:	xchg   esi,eax
  402a5d:	adc    DWORD PTR [eax-0x75],0x10b16dab
  402a64:	or     al,0xe
  402a66:	add    eax,0x64e12f7e
  402a6b:	cmp    al,0x2
  402a6d:	ins    BYTE PTR es:[edi],dx
  402a6e:	cmc    
  402a6f:	gs push esi
  402a71:	or     BYTE PTR [esi-0x3309c296],0x5d
  402a78:	int3   
  402a79:	xor    al,0x54
  402a7b:	mov    ebp,0x126f2b03
  402a80:	cmp    edi,DWORD PTR [ebx]
  402a82:	mov    eax,ds:0x18f52b1b
  402a87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a88:	rol    BYTE PTR ds:0x34d2670a,1
  402a8e:	lods   al,BYTE PTR ds:[esi]
  402a8f:	shl    DWORD PTR [ebx+esi*2+0x7f],0xc6
  402a94:	icebp  
  402a95:	mov    al,ds:0x14709eb
  402a9a:	out    dx,eax
  402a9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a9c:	adc    BYTE PTR [eax-0x6d],dh
  402a9f:	stos   BYTE PTR es:[edi],al
  402aa0:	xchg   esi,eax
  402aa1:	mov    eax,0x69eac043
  402aa6:	push   esi
  402aa7:	dec    edx
  402aa8:	or     eax,0x9da8db6a
  402aad:	cli    
  402aae:	and    DWORD PTR [eax-0xb],esi
  402ab1:	daa    
  402ab2:	dec    ecx
  402ab3:	push   ecx
  402ab4:	xor    BYTE PTR [bp+di],0x68
  402ab8:	mov    cl,0xdf
  402aba:	inc    edx
  402abb:	jnp    0x402a6e
  402abd:	inc    esp
  402abe:	mov    dh,0xd8
  402ac0:	mov    ecx,ecx
  402ac2:	pop    esp
  402ac3:	xor    al,0x1b
  402ac5:	scas   eax,DWORD PTR es:[edi]
  402ac6:	xchg   ecx,eax
  402ac7:	add    BYTE PTR [edi+ecx*2-0x75],bl
  402acb:	pop    edx
  402acc:	bound  edi,QWORD PTR [eax]
  402ace:	push   0xe78ec319
  402ad3:	fstp   TBYTE PTR [edi-0x6c]
  402ad6:	xor    al,0x2a
  402ad8:	adc    al,BYTE PTR ds:0xb9ce800b
  402ade:	or     dl,BYTE PTR [esp+esi*1-0x16]
  402ae2:	inc    ebx
  402ae3:	fcmovbe st,st(1)
  402ae5:	xchg   ecx,eax
  402ae6:	jecxz  0x402b57
  402ae8:	dec    eax
  402ae9:	imul   esi,DWORD PTR [ecx+0x11],0x4f
  402aed:	xor    al,0x86
  402aef:	das    
  402af0:	aas    
  402af1:	push   es
  402af2:	fwait
  402af3:	inc    edi
  402af4:	sub    ah,BYTE PTR [esi+ecx*4]
  402af7:	and    BYTE PTR [eax+0x52],ah
  402afa:	xchg   ebp,eax
  402afb:	mov    ds:0xe1ad05c5,eax
  402b00:	das    
  402b01:	adc    bh,BYTE PTR [esi-0x45]
  402b04:	fs pop esi
  402b06:	int    0xd4
  402b08:	xor    al,0x9d
  402b0a:	dec    edx
  402b0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b0c:	shl    esp,1
  402b0e:	pop    ebp
  402b0f:	test   DWORD PTR [edi+0x35e2d567],ecx
  402b15:	mov    al,0x77
  402b17:	jno    0x402b8f
  402b19:	dec    si
  402b1b:	and    al,0x42
  402b1d:	(bad)  [eax-0x2c7f37cb]
  402b23:	int    0x99
  402b25:	leave  
  402b26:	push   esp
  402b27:	cmc    
  402b28:	ins    BYTE PTR es:[edi],dx
  402b29:	das    
  402b2a:	test   BYTE PTR [ecx+0x16d5e60d],bh
  402b30:	cmp    dh,0xbe
  402b33:	loope  0x402b18
  402b35:	pop    eax
  402b36:	mov    ebx,0xa3573f19
  402b3b:	mov    al,0xcf
  402b3d:	loopne 0x402b47
  402b3f:	inc    ecx
  402b40:	cdq    
  402b41:	push   0xffffffd3
  402b43:	aaa    
  402b44:	mov    WORD PTR [edi+0x41],gs
  402b47:	sub    bh,0xe4
  402b4a:	jnp    0x402b42
  402b4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b4d:	shl    edi,1
  402b4f:	inc    edx
  402b50:	adc    ecx,edi
  402b52:	je     0x402b40
  402b54:	stos   BYTE PTR es:[edi],al
  402b55:	out    0x71,al
  402b57:	retf   
  402b58:	sbb    al,0x98
  402b5a:	xor    BYTE PTR [edx+edi*1+0x3a],dl
  402b5e:	jl     0x402b0f
  402b60:	mov    eax,ds:0x5f7447e8
  402b65:	jb     0x402b76
  402b67:	pushf  
  402b68:	sar    BYTE PTR [esi-0x518d8653],1
  402b6e:	shl    BYTE PTR gs:[esi-0x5e438cc7],1
  402b75:	xchg   ecx,eax
  402b76:	cmc    
  402b77:	xchg   ebp,eax
  402b78:	mov    ?,WORD PTR [ecx-0x14]
  402b7b:	test   BYTE PTR [eax+0x14f81071],0x78
  402b82:	cmp    al,cl
  402b84:	pop    ebp
  402b85:	hlt    
  402b86:	adc    eax,0x58f186e2
  402b8b:	clc    
  402b8c:	mov    al,ds:0x32fd9450
  402b91:	lock mov gs,WORD PTR [esi-0x41]
  402b95:	test   al,0x20
  402b97:	xchg   esp,eax
  402b98:	cld    
  402b99:	popf   
  402b9a:	(bad)  
  402b9d:	in     eax,0x3c
  402b9f:	les    esp,FWORD PTR [ebx]
  402ba1:	or     ch,BYTE PTR [edx-0x4b]
  402ba4:	popa   
  402ba5:	lods   al,BYTE PTR ds:[esi]
  402ba6:	dec    edi
  402ba7:	mov    ch,0x57
  402ba9:	das    
  402baa:	jns    0x402b9b
  402bac:	mov    cl,0xec
  402bae:	lds    edx,FWORD PTR [edx]
  402bb0:	repz div ebx
  402bb3:	enter  0x4e32,0x8f
  402bb7:	adc    cl,BYTE PTR [eax]
  402bb9:	sbb    esi,DWORD PTR [esi-0x22bf3b6b]
  402bbf:	or     BYTE PTR [esi-0x4e],ah
  402bc2:	bound  eax,QWORD PTR [eax-0x38]
  402bc5:	out    0x5c,eax
  402bc7:	jnp    0x402bbf
  402bc9:	fwait
  402bca:	xor    edx,DWORD PTR [ebx+0x59e7bd5d]
  402bd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bd1:	cmp    eax,0xba4a8b16
  402bd6:	in     eax,0x76
  402bd8:	loopne 0x402c34
  402bda:	mov    ds:0xfffd1f6b,eax
  402bdf:	adc    eax,DWORD PTR [eax-0x96c8e77]
  402be5:	cmp    ah,ah
  402be7:	sub    edx,DWORD PTR ds:0xfc5ea669
  402bed:	adc    ax,0x4d83
  402bf1:	jecxz  0x402ba7
  402bf3:	popa   
  402bf4:	shr    DWORD PTR [ebx-0x4f],0xe7
  402bf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bf9:	pop    edi
  402bfa:	pop    es
  402bfb:	call   0x14e2:0x71865ab7
  402c02:	sbb    ebp,esi
  402c04:	lds    ebp,FWORD PTR [ebx-0x3fdb5439]
  402c0a:	fadd   QWORD PTR [edi]
  402c0c:	pop    ecx
  402c0d:	nop
  402c0e:	xor    edx,DWORD PTR [edi+edi*4-0x29ef2053]
  402c15:	repz mov ds:0xe6b69621,al
  402c1b:	jecxz  0x402bcd
  402c1d:	and    BYTE PTR [edx-0x3da14e95],0x4
  402c24:	and    esi,DWORD PTR [ecx]
  402c26:	cmp    BYTE PTR [ebp-0x27],dl
  402c29:	out    dx,al
  402c2a:	test   BYTE PTR ds:0x54d5eb67,bh
  402c30:	inc    eax
  402c31:	js     0xac99adbf
  402c37:	xchg   edx,eax
  402c38:	mov    edi,0x98823663
  402c3d:	mov    dl,0x65
  402c3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c40:	sub    dl,ah
  402c42:	xchg   esi,esi
  402c44:	dec    esp
  402c45:	mov    ds:0x36b45ad4,al
  402c4a:	add    BYTE PTR [ecx-0x3a],bl
  402c4d:	mov    gs,WORD PTR [edi]
  402c4f:	(bad)  
  402c50:	pop    esp
  402c51:	fs in  al,0x2e
  402c54:	jg     0x402c0e
  402c56:	mov    ebx,0xcb4cb663
  402c5b:	push   esp
  402c5c:	(bad)  
  402c5d:	bound  edi,QWORD PTR [ecx+0x725bb78b]
  402c63:	ret    0xaa06
  402c66:	xchg   esp,eax
  402c67:	hlt    
  402c68:	mov    ss,WORD PTR [ecx+ecx*8]
  402c6b:	int    0xa2
  402c6d:	push   es
  402c6e:	(bad)  
  402c70:	sbb    DWORD PTR [ecx-0x7e737879],ebp
  402c76:	cmp    al,0xa3
  402c78:	ins    BYTE PTR es:[edi],dx
  402c79:	jne    0x402cb8
  402c7b:	sti    
  402c7c:	pop    ss
  402c7d:	xchg   ebp,eax
  402c7e:	push   edi
  402c7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c80:	sub    al,0xc2
  402c82:	or     al,0x33
  402c84:	or     esp,0x90d0c347
  402c8a:	jo     0x402c13
  402c8c:	dec    esi
  402c8d:	jno    0x402c49
  402c8f:	cmp    ch,ch
  402c91:	push   ds
  402c92:	push   esi
  402c93:	fbld   TBYTE PTR [eax]
  402c95:	and    al,0xce
  402c97:	dec    esp
  402c98:	mov    BYTE PTR [esi],ah
  402c9a:	adc    bh,BYTE PTR [esp+edi*2]
  402c9d:	stc    
  402c9e:	es add ch,0x5d
  402ca2:	add    al,0xde
  402ca4:	push   ebp
  402ca5:	les    esp,FWORD PTR [ecx-0x13]
  402ca8:	dec    edx
  402ca9:	cs ins BYTE PTR es:[edi],dx
  402cab:	jo     0x402c65
  402cad:	test   bl,bh
  402caf:	mov    edx,0x93c8e5d7
  402cb4:	and    BYTE PTR [edi],bl
  402cb6:	jg     0x402c3d
  402cb8:	mov    bh,0x59
  402cba:	inc    ebp
  402cbb:	es xor eax,0x671854c9
  402cc1:	jnp    0x402d23
  402cc3:	adc    eax,0xbf16e2f6
  402cc8:	cwde   
  402cc9:	dec    ebp
  402cca:	sub    ebp,DWORD PTR [eax]
  402ccc:	jl     0x402c88
  402cce:	xor    al,0xb2
  402cd0:	adc    eax,0x7406c7d9
  402cd5:	test   al,0x8c
  402cd7:	repz dec edi
  402cd9:	xor    dh,BYTE PTR [bp-0x1ce3]
  402cde:	sub    DWORD PTR [edi],ebp
  402ce0:	in     al,dx
  402ce1:	and    BYTE PTR [ebp+ebp*2-0xa],bl
  402ce5:	out    0xca,eax
  402ce7:	dec    eax
  402ce8:	mov    ah,0x9b
  402cea:	fcom   st(0)
  402cec:	dec    esi
  402ced:	pop    ss
  402cee:	shr    ecx,1
  402cf0:	imul   edx,DWORD PTR [edi+0x2f],0x3b4aaaf8
  402cf7:	das    
  402cf8:	setp   BYTE PTR [esi-0x45d63752]
  402cff:	je     0x402d2b
  402d01:	pop    ecx
  402d02:	mov    ah,BYTE PTR [ebp+0x1287d6ac]
  402d08:	in     al,dx
  402d09:	cs mov ah,0x2b
  402d0c:	mov    ecx,0xc1de4bdc
  402d11:	int    0xaa
  402d13:	and    eax,0x40a45bef
  402d18:	scas   eax,DWORD PTR es:[edi]
  402d19:	xchg   BYTE PTR [edx],cl
  402d1b:	jg     0x402ca8
  402d1d:	lahf   
  402d1e:	sbb    dh,BYTE PTR [ebp+0x4d]
  402d21:	dec    esi
  402d22:	sahf   
  402d23:	cmp    al,0xb7
  402d25:	pop    ebp
  402d26:	aas    
  402d27:	adc    ebp,DWORD PTR [edx]
  402d29:	bswap  ebp
  402d2b:	lock stos DWORD PTR es:[edi],eax
  402d2d:	std    
  402d2e:	or     al,0xf1
  402d30:	mov    eax,ds:0xee52bb3b
  402d35:	shl    DWORD PTR [edx-0x758558ed],0xc3
  402d3c:	call   0x24ae:0xc28413d8
  402d43:	test   dh,bl
  402d45:	imul   esi,DWORD PTR [edi+edi*8],0x37567c8
  402d4c:	push   cs
  402d4d:	add    eax,0x441ddc69
  402d52:	in     al,0x45
  402d54:	int3   
  402d55:	push   0x9b85a7d3
  402d5a:	clc    
  402d5b:	or     esi,DWORD PTR [eax+eax*2]
  402d5e:	push   0xcb97dbc8
  402d63:	push   ebp
  402d64:	es clc 
  402d66:	fdiv   QWORD PTR [ecx+eiz*8-0x141950ba]
  402d6d:	push   ebp
  402d6e:	adc    ah,BYTE PTR [ebx+0x72b54fc5]
  402d74:	adc    ebp,esi
  402d76:	in     al,dx
  402d77:	mov    ebx,0x246bc35f
  402d7c:	cmp    ebx,DWORD PTR [edx+0x10e55e84]
  402d82:	jle    0x402dba
  402d84:	inc    ecx
  402d85:	push   esi
  402d86:	xor    eax,0x461b4e06
  402d8b:	(bad)  
  402d8c:	bound  ebp,QWORD PTR [edx-0x18]
  402d8f:	push   es
  402d90:	ds leave 
  402d92:	cmp    ecx,DWORD PTR ds:0xd6a6b6d3
  402d98:	add    eax,0xf967171b
  402d9d:	repz cmp al,ch
  402da0:	adc    eax,0xbe2ad66a
  402da5:	or     cl,BYTE PTR [esp+ebx*8-0x1a799e06]
  402dac:	loop   0x402d59
  402dae:	lock cmp ebx,esp
  402db1:	push   ss
  402db2:	(bad)
  402db6:	popf   
  402db7:	inc    eax
  402db8:	pop    es
  402db9:	xor    eax,0x806ec8f6
  402dbe:	das    
  402dbf:	lea    ecx,[eax-0xa]
  402dc2:	rol    DWORD PTR [ecx-0x18],cl
  402dc5:	jmp    0x402e11
  402dc7:	jbe    0x402d97
  402dc9:	test   eax,0x927687e0
  402dce:	mov    ds:0x96c503a3,al
  402dd3:	lods   eax,DWORD PTR ds:[esi]
  402dd4:	test   ax,0xa4a7
  402dd8:	and    dh,BYTE PTR [esi-0x69db3dd6]
  402dde:	push   0xc54a6652
  402de3:	retf   0x9064
  402de6:	test   DWORD PTR [ebx],ebp
  402de8:	rcr    DWORD PTR [ecx+edx*1-0x18],1
  402dec:	mov    ebx,0xdebb4bc3
  402df1:	cmp    edx,DWORD PTR [eax-0x7f7b465a]
  402df7:	std    
  402df8:	cmp    esi,esp
  402dfa:	push   es
  402dfb:	fidiv  DWORD PTR [ecx]
  402dfd:	mov    ch,0x8a
  402dff:	mov    eax,ds:0xc1db3e65
  402e04:	js     0x402dbd
  402e06:	mov    bh,0xef
  402e08:	sahf   
  402e09:	popf   
  402e0a:	add    esi,DWORD PTR [eax+0x8]
  402e0d:	scas   eax,DWORD PTR es:[edi]
  402e0e:	add    eax,0x192fb61f
  402e13:	or     eax,0x7a35ea17
  402e18:	sub    eax,0xade763f2
  402e1d:	jb     0x402e05
  402e1f:	imul   ebx,DWORD PTR [edi+0x28],0xffffffd7
  402e23:	push   0xffffff83
  402e25:	lea    edi,[eax+esi*8+0x19]
  402e29:	sub    BYTE PTR [edx-0x1a],dl
  402e2c:	in     eax,0xd9
  402e2e:	sub    al,0x57
  402e30:	in     eax,0x93
  402e32:	mov    ah,ah
  402e34:	and    DWORD PTR [esi+0x21337d6b],edx
  402e3a:	xor    al,0xab
  402e3c:	cmp    dl,dh
  402e3e:	call   0x741d75fe
  402e43:	cld    
  402e44:	adc    ecx,DWORD PTR [eax]
  402e46:	inc    edx
  402e47:	test   BYTE PTR [ebp-0x62],cl
  402e4a:	rol    BYTE PTR [edi],1
  402e4c:	data16 jns 0x402e5a
  402e4f:	imul   eax,DWORD PTR [eax],0x45dda989
  402e55:	jmp    0x573c4aa9
  402e5a:	int3   
  402e5b:	xchg   ebp,eax
  402e5c:	jo     0x402e13
  402e5e:	lea    edx,[esi-0x1473081e]
  402e64:	xchg   esp,eax
  402e65:	cmc    
  402e66:	mov    bh,0x5d
  402e68:	pop    ebp
  402e69:	(bad)  
  402e6a:	adc    dl,bl
  402e6c:	push   cs
  402e6d:	jmp    0x402e9c
  402e6f:	sti    
  402e70:	repz mov ds,WORD PTR [ebx-0x2b9d60]
  402e77:	pop    ds
  402e78:	mov    eax,ds:0x22d89736
  402e7d:	int3   
  402e7e:	fwait
  402e7f:	and    eax,0x56060a97
  402e84:	mov    esi,0x7ff43f62
  402e89:	push   edi
  402e8a:	in     al,0xe0
  402e8c:	and    ch,BYTE PTR [ebx-0x11]
  402e8f:	push   es
  402e90:	jge    0x402eff
  402e92:	mov    eax,ds:0x92b8ebd2
  402e97:	icebp  
  402e98:	push   ebp
  402e99:	xchg   edi,eax
  402e9a:	imul   ecx,DWORD PTR [edx+0x6bd2a5dc],0xffffff98
  402ea1:	cmp    dh,BYTE PTR gs:[edx]
  402ea4:	mov    cl,0x86
  402ea6:	lea    esp,[ecx-0x61]
  402ea9:	fnstenv [eax-0x1c95735d]
  402eaf:	inc    ebx
  402eb0:	jno    0x402ef2
  402eb2:	cld    
  402eb3:	adc    edi,DWORD PTR cs:[eax-0x7e6e5888]
  402eba:	sbb    edx,DWORD PTR ds:0xdfbbfd07
  402ec0:	ja     0x402e4b
  402ec2:	sbb    ecx,DWORD PTR [ebp-0x388d2796]
  402ec8:	or     ecx,0x70
  402ecb:	mov    ds:0x9b1faa04,al
  402ed0:	scas   al,BYTE PTR es:[edi]
  402ed1:	sub    eax,0xbb85f66a
  402ed6:	stos   DWORD PTR es:[edi],eax
  402ed7:	dec    esi
  402ed8:	mov    ?,WORD PTR [edx-0x2b]
  402edb:	enter  0xe61a,0xdc
  402edf:	sti    
  402ee0:	sbb    ch,0xd2
  402ee3:	sbb    DWORD PTR [edx],0xffffffdf
  402ee6:	mov    WORD PTR [esi+edi*2+0x32],fs
  402eea:	stos   BYTE PTR es:[edi],al
  402eeb:	mov    BYTE PTR [ebx+0x3edffdfd],cl
  402ef1:	xchg   ecx,eax
  402ef2:	adc    esp,eax
  402ef4:	fsubr  st(3),st
  402ef6:	jle    0x402f01
  402ef8:	mov    ebx,0x122d6ec8
  402efd:	jg     0x402f70
  402eff:	mov    bl,0x1e
  402f01:	out    dx,al
  402f02:	adc    BYTE PTR [edx-0x1c0b4de4],dh
  402f08:	fisttp QWORD PTR [esp+edx*2-0x2cfe90c6]
  402f0f:	jl     0x402eba
  402f11:	or     eax,0x107cf5a4
  402f16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f17:	mov    al,0x59
  402f19:	xchg   edi,eax
  402f1a:	je     0x402ed8
  402f1c:	mov    eax,ds:0xab496827
  402f21:	test   bh,dl
  402f23:	in     al,0x8d
  402f25:	xchg   ebx,eax
  402f26:	mov    ecx,0x23309074
  402f2b:	jae    0x402f87
  402f2d:	adc    edx,DWORD PTR [eax-0x3af63394]
  402f33:	lahf   
  402f34:	retf   0xb9d3
  402f37:	pop    edi
  402f38:	sub    eax,0x5d801aa0
  402f3d:	jge    0x402f8d
  402f3f:	inc    edi
  402f40:	ds cmc 
  402f42:	leave  
  402f43:	(bad)  
  402f44:	adc    al,0x7d
  402f46:	dec    edx
  402f47:	idiv   DWORD PTR [eax-0x41]
  402f4a:	ss xchg ebx,eax
  402f4c:	ret    0xdb0a
  402f4f:	dec    edi
  402f50:	nop
  402f51:	mov    dl,0xfc
  402f53:	ins    DWORD PTR es:[edi],dx
  402f54:	xor    eax,0x2df42671
  402f59:	xor    edi,DWORD PTR [edx+edi*1+0x32b40718]
  402f60:	push   ebx
  402f61:	(bad)  
  402f62:	stc    
  402f63:	xor    ah,al
  402f65:	lahf   
  402f66:	mov    DWORD PTR [edx+0x2a],0x4eb1c5bd
  402f6d:	pop    ebx
  402f6e:	lea    edi,[ebx]
  402f70:	sbb    DWORD PTR [esi+0x76],eax
  402f73:	cmp    al,0xb8
  402f75:	jno    0x402fb1
  402f77:	xchg   ebp,eax
  402f78:	inc    eax
  402f79:	scas   al,BYTE PTR es:[edi]
  402f7a:	xchg   ebp,eax
  402f7b:	clc    
  402f7c:	dec    ecx
  402f7d:	and    al,0x7b
  402f7f:	cmp    eax,0xe3b7b37d
  402f84:	and    al,0xf7
  402f86:	push   edx
  402f87:	or     DWORD PTR [ecx],esp
  402f89:	mov    edx,0x794dbde2
  402f8e:	mov    eax,0xf62147e9
  402f93:	cmp    al,BYTE PTR [edi+eax*4+0x12]
  402f97:	(bad)  [esi-0x1b8b5c69]
  402f9d:	call   0x869:0xf923936f
  402fa4:	ins    BYTE PTR es:[edi],dx
  402fa5:	loope  0x402f81
  402fa7:	jmp    0x402fa6
  402fa9:	dec    ebp
  402faa:	add    dl,dl
  402fac:	jg     0x402f58
  402fae:	cdq    
  402faf:	cmp    dh,cl
  402fb1:	(bad)  
  402fb2:	lea    esp,[edx-0x6668a561]
  402fb8:	fild   DWORD PTR [esi-0x74967b90]
  402fbe:	fldcw  WORD PTR [ecx-0x6b]
  402fc1:	adc    al,0x1b
  402fc3:	adc    eax,DWORD PTR [ebx+ecx*1+0x42]
  402fc7:	retf   
  402fc8:	adc    dl,BYTE PTR [ebx]
  402fca:	push   0xffffffcc
  402fcc:	or     DWORD PTR [edx+0x64],esp
  402fcf:	jg     0x402fe7
  402fd1:	ret    
  402fd2:	dec    esi
  402fd3:	das    
  402fd4:	pop    edx
  402fd5:	out    dx,al
  402fd6:	ret    
  402fd7:	cli    
  402fd8:	add    esp,DWORD PTR [eax+0x15]
  402fdb:	mov    ebx,0xa776cde7
  402fe0:	mov    ds:0x90805c03,al
  402fe5:	xchg   al,al
  402fe7:	jo     0x403009
  402fe9:	fadd   st,st(5)
  402feb:	push   eax
  402fec:	call   0xf3dc:0xb090a1b3
  402ff3:	scas   al,BYTE PTR es:[edi]
  402ff4:	pusha  
  402ff5:	call   0xe7b4:0xd68efa29
  402ffc:	mov    ecx,eax
  402ffe:	inc    ecx
  402fff:	mov    ebp,DWORD PTR [bp+si]
  403002:	out    0x7b,eax
  403004:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403005:	xchg   ebx,eax
  403006:	adc    BYTE PTR [ecx-0x7d],ch
  403009:	int    0xcf
  40300b:	xchg   DWORD PTR [edi+0x775d417e],ebp
  403011:	adc    DWORD PTR [ebx+0x28],edx
  403014:	jb     0x402fd2
  403016:	js     0x402ff2
  403018:	inc    ebp
  403019:	in     eax,0x1e
  40301b:	jg     0x403094
  40301d:	ret    0x8112
  403020:	(bad)  
  403021:	mov    cl,0xc0
  403023:	shl    BYTE PTR [ebx+0x4e23251d],cl
  403029:	and    ah,bl
  40302b:	pop    edx
  40302c:	push   ds
  40302d:	mov    dl,0xaf
  40302f:	xchg   edx,eax
  403030:	and    al,0x44
  403032:	test   DWORD PTR [esi-0x16],edx
  403035:	sbb    DWORD PTR ds:0x167b1487,0xfee13f2b
  40303f:	ins    DWORD PTR es:[edi],dx
  403040:	cmp    eax,0xa217695f
  403045:	bound  esi,QWORD PTR [ebx-0x509e2ad3]
  40304b:	jl     0x402fda
  40304d:	repz fs hlt 
  403050:	pop    esp
  403051:	repz fcom DWORD PTR [ecx]
  403054:	or     al,BYTE PTR ds:0xef9afe4
  40305a:	push   0xffffffb7
  40305c:	push   ebp
  40305d:	add    BYTE PTR [edx],0xc3
  403060:	test   BYTE PTR [edx],dl
  403062:	rcr    BYTE PTR [edx],1
  403064:	mov    esp,0x51da0a78
  403069:	or     DWORD PTR [edi+eax*2+0x25fe9597],eax
  403070:	loop   0x4030d6
  403072:	je     0x403009
  403074:	aaa    
  403075:	add    eax,ecx
  403077:	pushf  
  403078:	stc    
  403079:	pop    ebx
  40307a:	sub    DWORD PTR [esi-0x7afa2516],ecx
  403080:	outs   dx,DWORD PTR ds:[esi]
  403081:	sti    
  403082:	add    edi,DWORD PTR [ecx+eiz*2]
  403085:	jns    0x4030b3
  403087:	fisttp WORD PTR [edi-0x32bf3db0]
  40308d:	mov    dl,0x97
  40308f:	stc    
  403090:	in     al,0x36
  403092:	adc    ecx,DWORD PTR [ebx+ebx*2+0x362c98d0]
  403099:	retf   
  40309a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40309b:	pop    esi
  40309c:	(bad)  
  40309d:	mov    WORD PTR [eax+0x53b08a82],cs
  4030a3:	mov    al,ds:0x641b7583
  4030a8:	inc    edx
  4030a9:	add    BYTE PTR [edx*4+0x3d3175c9],al
  4030b0:	loop   0x4030d2
  4030b2:	mov    eax,ds:0xa72ab5ec
  4030b7:	mov    bh,0xd4
  4030b9:	push   ebx
  4030ba:	out    0x38,al
  4030bc:	jp     0x403139
  4030be:	(bad)  
  4030bf:	ins    DWORD PTR es:[edi],dx
  4030c0:	pop    esp
  4030c1:	mov    BYTE PTR [ecx-0x1e],bh
  4030c4:	(bad)  ss:[ecx+0x4fdec3a8]
  4030cb:	ja     0x403128
  4030cd:	fadd   st,st(1)
  4030cf:	xor    cl,bh
  4030d1:	dec    ecx
  4030d2:	sub    eax,0x370d4800
  4030d7:	sub    eax,DWORD PTR [eax]
  4030d9:	jp     0x403121
  4030db:	ins    DWORD PTR es:[edi],dx
  4030dc:	xchg   DWORD PTR [eax-0x3a],edi
  4030df:	add    eax,0x28f8cad0
  4030e4:	dec    ebp
  4030e5:	retf   
  4030e6:	inc    eax
  4030e7:	add    ebp,esp
  4030e9:	fdiv   st(6),st
  4030eb:	enter  0x76d1,0x5b
  4030ef:	retf   0x6589
  4030f2:	fs leave 
  4030f4:	std    
  4030f5:	dec    ecx
  4030f6:	pop    es
  4030f7:	dec    BYTE PTR [eax+0x70]
  4030fa:	mov    edi,0x63ff7a56
  4030ff:	or     ch,BYTE PTR [eax-0x5c52f061]
  403105:	repz pop ds
  403107:	dec    edx
  403108:	fcmovnb st,st(2)
  40310a:	sub    dh,dl
  40310c:	cs inc esi
  40310e:	test   BYTE PTR [esi+0xd],cl
  403111:	shr    BYTE PTR [edi],cl
  403113:	das    
  403114:	in     al,0x67
  403116:	mov    ?,WORD PTR [eax-0x27]
  403119:	pop    es
  40311a:	sti    
  40311b:	push   esi
  40311c:	xchg   edx,eax
  40311d:	rcr    DWORD PTR [edi],1
  40311f:	add    edi,ebx
  403121:	dec    esp
  403122:	inc    esp
  403123:	dec    edx
  403124:	fnstenv [ecx+0x33]
  403127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403128:	ins    DWORD PTR es:[edi],dx
  403129:	push   ebx
  40312a:	bnd ja 0x4030d9
  40312d:	aam    0x7e
  40312f:	xor    esp,esp
  403131:	inc    ebx
  403132:	ret    
  403133:	in     eax,dx
  403134:	mov    dl,0xbc
  403136:	fiadd  DWORD PTR [edi]
  403138:	es pop es
  40313a:	inc    eax
  40313b:	xchg   ebp,eax
  40313c:	(bad)
  40313f:	xchg   edx,eax
  403140:	cwde   
  403141:	stc    
  403142:	es js  0x403194
  403145:	sub    BYTE PTR [eax-0x1015a169],dl
  40314b:	rcr    BYTE PTR [eax-0x4c],1
  40314e:	fnsave [ebx+edx*8-0x15]
  403152:	cmp    al,0xc6
  403154:	lahf   
  403155:	in     al,0xf1
  403157:	push   edi
  403158:	test   ch,ch
  40315a:	jno    0x40311d
  40315c:	mov    eax,ds:0xa76b85b2
  403161:	in     eax,0x6e
  403163:	out    dx,al
  403164:	xchg   ecx,eax
  403165:	sbb    edi,DWORD PTR [eax+0x41f1a86]
  40316b:	cld    
  40316c:	call   0x1c52cf83
  403171:	jle    0x4031db
  403173:	xor    eax,0x4532554f
  403178:	cmc    
  403179:	loop   0x403104
  40317b:	je     0x4031f8
  40317d:	test   al,0xd9
  40317f:	(bad)  
  403180:	push   eax
  403181:	sbb    esp,esp
  403183:	popw   ss
  403185:	sub    eax,0x9cf116d8
  40318a:	out    dx,eax
  40318b:	jb     0x40319c
  40318d:	jbe    0x40317a
  40318f:	test   ebp,esi
  403191:	icebp  
  403192:	dec    ebx
  403193:	adc    DWORD PTR [edi],ebp
  403195:	out    dx,eax
  403196:	push   ebx
  403197:	add    eax,0xe8ff0ff1
  40319c:	xchg   edx,eax
  40319d:	int    0x9c
  40319f:	fcomp  DWORD PTR [edi+0x303a7a64]
  4031a5:	sub    al,0xaa
  4031a7:	aad    0x24
  4031a9:	das    
  4031aa:	jg     0x403200
  4031ac:	push   edi
  4031ad:	fcomi  st,st(0)
  4031af:	jno    0x403220
  4031b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031b2:	add    DWORD PTR [esi],ecx
  4031b4:	call   0x1729:0xac8b605d
  4031bb:	adc    eax,DWORD PTR [eax-0x5f075d40]
  4031c1:	rcr    DWORD PTR [ebx-0x3de06a01],0x6d
  4031c8:	fild   DWORD PTR [eax]
  4031ca:	(bad)  
  4031cb:	stc    
  4031cc:	push   edx
  4031cd:	pop    es
  4031ce:	xor    eax,DWORD PTR [esi]
  4031d0:	mov    ch,0x6f
  4031d2:	repz cmp eax,0xc39bec52
  4031d8:	out    0x77,eax
  4031da:	and    esi,DWORD PTR [ecx+0x3f0bbfc]
  4031e0:	sbb    eax,0x95c15db3
  4031e5:	mov    ah,0x72
  4031e7:	cs jns 0x4031a5
  4031ea:	mov    bl,BYTE PTR [ebx-0x730a4cb]
  4031f0:	or     al,0xfa
  4031f2:	mov    ecx,0xbf41e173
  4031f7:	pop    esp
  4031f8:	test   BYTE PTR [ebx+0x10],ch
  4031fb:	sbb    al,0xec
  4031fd:	jmp    0x4031c8
  4031ff:	xchg   edx,eax
  403200:	or     DWORD PTR [edx],ecx
  403202:	neg    DWORD PTR [esp+ebp*4-0x26ff1d87]
  403209:	or     ch,dh
  40320b:	cmovl  edx,DWORD PTR [ebx]
  40320e:	dec    ecx
  40320f:	in     eax,dx
  403210:	xor    eax,0x806c8eb3
  403215:	loope  0x403224
  403217:	mov    eax,0x64002212
  40321c:	stos   DWORD PTR es:[edi],eax
  40321d:	cwde   
  40321e:	dec    esi
  40321f:	cld    
  403220:	mov    ds:0x2b046502,al
  403225:	mov    ebp,0x4a10290b
  40322a:	mov    dh,0xc
  40322c:	outs   dx,BYTE PTR ds:[esi]
  40322d:	push   ds
  40322e:	outs   dx,BYTE PTR ds:[esi]
  40322f:	pop    edx
  403230:	icebp  
  403231:	inc    edi
  403232:	(bad)  
  403233:	or     bh,BYTE PTR [ebx]
  403235:	jmp    0x4031d1
  403237:	jno    0x403285
  403239:	xor    DWORD PTR [ecx-0x408aa401],0xffffffa5
  403240:	mov    ch,0x11
  403242:	ss retf 
  403244:	cmp    DWORD PTR [ebp+edi*8-0x11],ebx
  403248:	fimul  DWORD PTR [esi+ebp*4-0x774b0852]
  40324f:	push   ss
  403250:	pop    edi
  403251:	jb     0x40320d
  403253:	push   es
  403254:	aas    
  403255:	xor    al,0x83
  403257:	fcomp  DWORD PTR [ecx-0x69]
  40325a:	mov    BYTE PTR [edx-0xb],bh
  40325d:	add    al,0x44
  40325f:	sub    dh,BYTE PTR [eax+esi*4+0x443df5f7]
  403266:	sahf   
  403267:	push   esi
  403268:	inc    ebx
  403269:	push   edi
  40326a:	aas    
  40326b:	rcr    DWORD PTR [esi+0x41],cl
  40326e:	mov    edi,0xa40d54de
  403273:	mov    al,BYTE PTR [edi+0x19100614]
  403279:	leave  
  40327a:	rcr    DWORD PTR [ebp+0x7f],cl
  40327d:	arpl   WORD PTR [ebx-0x3a],si
  403280:	sub    al,0xff
  403282:	sar    DWORD PTR [eax+0x8],1
  403285:	test   DWORD PTR [ebx-0x493a3519],edx
  40328b:	pop    eax
  40328c:	mov    ah,0x1c
  40328e:	ret    
  40328f:	fimul  WORD PTR [esi]
  403291:	ins    DWORD PTR es:[edi],dx
  403292:	fwait
  403293:	and    ch,BYTE PTR [ebp+0x6eebd780]
  403299:	push   es
  40329a:	sub    DWORD PTR [ecx+0x2],0xeb37656c
  4032a1:	outs   dx,DWORD PTR ds:[esi]
  4032a2:	xor    eax,0x7962d56d
  4032a7:	stos   DWORD PTR es:[edi],eax
  4032a8:	jl     0x40325c
  4032aa:	cld    
  4032ab:	jmp    0x403250
  4032ad:	xor    DWORD PTR [edi+0x7ef58c6c],eax
  4032b3:	mov    ds:0x7066b8ec,eax
  4032b8:	dec    ebp
  4032b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032ba:	dec    ecx
  4032bb:	call   0x497f:0xc43f7be7
  4032c2:	cmp    DWORD PTR [ecx],edi
  4032c4:	mov    esp,0xa414876d
  4032c9:	neg    BYTE PTR [edx+0x2bb25d8f]
  4032cf:	imul   ebx,DWORD PTR [ecx+0x7be82daf],0x70925cb0
  4032d9:	fwait
  4032da:	cs push ebp
  4032dc:	daa    
  4032dd:	push   ebx
  4032de:	cmp    BYTE PTR [edx+0x26e5fe40],ah
  4032e4:	ret    0xca95
  4032e7:	not    DWORD PTR [edi-0x3d]
  4032ea:	repnz in al,dx
  4032ec:	cmc    
  4032ed:	dec    ebx
  4032ee:	sahf   
  4032ef:	jno    0x4032db
  4032f1:	mov    eax,0x6b99d0e7
  4032f6:	sbb    DWORD PTR [edi+ebx*2+0x77289cde],0xffffffd9
  4032fe:	and    BYTE PTR [eax],cl
  403300:	mov    al,ds:0x42976365
  403305:	jp     0x4032d0
  403307:	pushf  
  403308:	imul   edi,DWORD PTR [edi],0x1336bd98
  40330e:	xchg   ebx,eax
  40330f:	and    DWORD PTR [edx],0xfffffff2
  403312:	inc    edx
  403313:	pushf  
  403314:	pmuludq mm3,mm1
  403317:	pop    esp
  403318:	xchg   edx,eax
  403319:	add    BYTE PTR [eax+edi*2-0x75],bh
  40331d:	fdiv   st(5),st
  40331f:	mov    dh,0x85
  403321:	fwait
  403322:	idiv   BYTE PTR [esi+0x1da7455c]
  403328:	mov    edx,0x8a8ab18f
  40332d:	jmp    DWORD PTR [edx]
  40332f:	neg    BYTE PTR [ebx+0x38]
  403332:	or     al,bh
  403334:	mov    edx,0x1d33527
  403339:	cmp    BYTE PTR [edx-0x395dfd32],dl
  40333f:	jbe    0x4033a1
  403341:	mov    dl,0x14
  403343:	test   al,0x8b
  403345:	mov    ebp,0x7279d4d8
  40334a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40334b:	jecxz  0x403344
  40334d:	jnp    0x403305
  40334f:	xchg   esi,eax
  403350:	and    al,0x76
  403352:	test   BYTE PTR [edi],bh
  403354:	sbb    ah,BYTE PTR [bx+si+0x33c8]
  403359:	mov    eax,ds:0x3349de80
  40335e:	jecxz  0x4033d6
  403360:	repz jg 0x4033a9
  403363:	stc    
  403364:	ror    ebp,1
  403366:	les    ebp,FWORD PTR [ebx+esi*2]
  403369:	push   edx
  40336a:	xchg   esp,eax
  40336b:	sub    al,0xc8
  40336d:	add    ebx,DWORD PTR [eax+0x22]
  403370:	loop   0x403354
  403372:	ret    
  403373:	(bad)  
  403374:	mov    ecx,0x72a428df
  403379:	push   esp
  40337a:	push   ss
  40337b:	sbb    eax,0x94fcf36b
  403380:	mov    bh,0xce
  403382:	scas   al,BYTE PTR es:[edi]
  403383:	dec    edi
  403384:	fsubr  QWORD PTR [esi+0x47]
  403387:	push   edx
  403388:	into   
  403389:	xchg   BYTE PTR [eax+ebp*8],bh
  40338c:	xor    edx,DWORD PTR [ecx+0x2f40e4e9]
  403392:	enter  0xb762,0xdd
  403396:	and    cl,BYTE PTR [edi+0x21]
  403399:	mov    ds,WORD PTR [ebp-0x6a]
  40339c:	sub    DWORD PTR cs:[esi-0x4d85ba8b],ebp
  4033a3:	and    eax,0xde528b4c
  4033a8:	repnz mov esi,0xb7b76c06
  4033ae:	xchg   ecx,eax
  4033af:	push   0xf840e3f6
  4033b4:	int    0x2e
  4033b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033b7:	push   esp
  4033b8:	adc    ebx,DWORD PTR [edx+0x6b347993]
  4033be:	test   al,0x30
  4033c0:	add    dl,BYTE PTR [ebp+0x7b]
  4033c3:	and    DWORD PTR [edi+0x40fe67f7],eax
  4033c9:	fcom   st(4)
  4033cb:	and    cl,ch
  4033cd:	(bad)  
  4033ce:	jg     0x403418
  4033d0:	(bad)  
  4033d1:	lods   eax,DWORD PTR ds:[esi]
  4033d2:	push   ss
  4033d3:	gs cmc 
  4033d5:	mov    dh,dh
  4033d7:	out    dx,al
  4033d8:	lock nop
  4033da:	aaa    
  4033db:	xchg   edi,eax
  4033dc:	sub    al,BYTE PTR [esi-0xd]
  4033df:	ret    0x4458
  4033e2:	mul    DWORD PTR fs:[edx+ebx*1-0x3c]
  4033e7:	push   ebp
  4033e8:	pop    edi
  4033e9:	dec    eax
  4033ea:	cmp    bl,BYTE PTR [edi]
  4033ec:	jmp    0x8f75:0x631c4898
  4033f3:	loop   0x4033a4
  4033f5:	mov    esp,DWORD PTR [edx+0x12ccdbd9]
  4033fb:	mov    cl,0x19
  4033fd:	jns    0x403426
  4033ff:	dec    esi
  403400:	pop    edx
  403401:	adc    ecx,esi
  403403:	xchg   esp,eax
  403404:	or     DWORD PTR [ebp+0x6f],edx
  403407:	loopne 0x403482
  403409:	cwde   
  40340a:	add    dl,BYTE PTR [ebx-0x51]
  40340d:	jb     0x4033dd
  40340f:	out    0x4f,eax
  403411:	sti    
  403412:	retf   
  403413:	fs pop eax
  403415:	push   ebp
  403416:	scas   al,BYTE PTR es:[edi]
  403417:	fnsave [eax-0x5e38a26]
  40341d:	stos   DWORD PTR es:[edi],eax
  40341e:	popf   
  40341f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403420:	push   ss
  403421:	les    edi,FWORD PTR [ecx*2+0x73619873]
  403428:	push   ecx
  403429:	and    cl,bl
  40342b:	in     eax,dx
  40342c:	push   es
  40342d:	ret    0x9bca
  403430:	lds    ebx,FWORD PTR [esi-0x44]
  403433:	dec    eax
  403434:	push   esp
  403435:	mov    eax,ds:0x20fa3895
  40343a:	out    dx,eax
  40343b:	(bad)  
  40343c:	adc    ebx,DWORD PTR ds:0x651896b6
  403442:	xor    al,0x4a
  403444:	(bad)  
  403445:	xor    edi,esp
  403447:	cmp    al,0x6c
  403449:	call   0x89442459
  40344e:	(bad)  
  40344f:	jmp    0x9d20:0x35031f07
  403456:	fdivr  st,st(2)
  403458:	mov    ebp,DWORD PTR [eax-0x8c02108]
  40345e:	stc    
  40345f:	push   0xffffff86
  403461:	stos   BYTE PTR es:[edi],al
  403462:	push   ebp
  403463:	ins    DWORD PTR es:[edi],dx
  403464:	or     esp,DWORD PTR [edx+0x44f4103a]
  40346a:	jnp    0x403444
  40346c:	jmp    0xf7635368
  403471:	push   edi
  403472:	xor    BYTE PTR [ebx-0x13],0x2a
  403476:	xchg   ebx,eax
  403477:	dec    ecx
  403478:	jb     0x4034f8
  40347a:	in     eax,0x79
  40347c:	(bad)  
  40347d:	pop    edx
  40347e:	adc    DWORD PTR [esi],0xe63b4bf8
  403484:	das    
  403485:	mov    bh,0xee
  403487:	adc    DWORD PTR [ecx-0x7b2f2070],0xfffffff9
  40348e:	(bad)  [edi-0x15]
  403491:	into   
  403492:	arpl   si,cx
  403494:	xchg   ebp,eax
  403495:	jle    0x4034d8
  403497:	pop    ss
  403498:	ins    BYTE PTR es:[edi],dx
  403499:	add    esi,DWORD PTR [esi+0x1c3ec78a]
  40349f:	in     eax,0xda
  4034a1:	or     eax,0xc15fab4
  4034a6:	or     BYTE PTR [edi-0x73ee7b3f],0x68
  4034ad:	arpl   WORD PTR [ebp-0x4a],di
  4034b0:	xchg   esi,eax
  4034b1:	jl     0x40346c
  4034b3:	push   ebx
  4034b4:	fimul  DWORD PTR [eax-0x1f472649]
  4034ba:	stos   DWORD PTR es:[edi],eax
  4034bb:	pop    edx
  4034bc:	icebp  
  4034bd:	push   edx
  4034be:	imul   esi,DWORD PTR [eax],0xffffffc4
  4034c1:	lds    eax,FWORD PTR [ecx+0x2cde5f4d]
  4034c7:	mov    esi,0x1a875a66
  4034cc:	ds test esp,0xba03529a
  4034d3:	outs   dx,DWORD PTR ds:[esi]
  4034d4:	or     bh,al
  4034d6:	pop    edi
  4034d7:	jg     0x40351f
  4034d9:	pusha  
  4034da:	pop    ebx
  4034db:	inc    DWORD PTR ds:0xf80e97a4
  4034e1:	mov    ch,0x93
  4034e3:	push   edx
  4034e4:	mov    cl,0xa9
  4034e6:	xchg   ebx,eax
  4034e7:	test   bl,0xfc
  4034ea:	mov    edx,0x603e2412
  4034ef:	inc    esp
  4034f0:	nop
  4034f1:	lods   al,BYTE PTR ds:[esi]
  4034f2:	dec    ebp
  4034f3:	cmp    DWORD PTR [ebx],esi
  4034f5:	ds pop edi
  4034f7:	and    esi,DWORD PTR [edx+0x40]
  4034fa:	je     0x403519
  4034fc:	sti    
  4034fd:	or     BYTE PTR [edi+eax*4+0x2e],ch
  403501:	mov    DWORD PTR [ebx+0x20],ebp
  403504:	scas   eax,DWORD PTR es:[edi]
  403505:	retf   
  403506:	xchg   esp,eax
  403507:	sub    BYTE PTR [esi],dl
  403509:	cmp    ah,BYTE PTR [esi-0x1e8e6ec8]
  40350f:	jnp    0x4034ba
  403511:	xchg   al,ah
  403513:	adc    ax,0x7b87
  403517:	and    DWORD PTR [esp+edi*4+0x9],edx
  40351b:	out    0x3f,al
  40351d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40351e:	xor    DWORD PTR [esi+0x63],edi
  403521:	or     DWORD PTR [si],ebx
  403524:	jmp    0x81e49820
  403529:	fidivr WORD PTR [esi-0x178802c1]
  40352f:	aaa    
  403530:	jecxz  0x403540
  403532:	jns    0x403509
  403534:	clc    
  403535:	inc    eax
  403536:	lahf   
  403537:	pop    esi
  403538:	fisttp QWORD PTR [ebx]
  40353a:	int3   
  40353b:	lea    ebp,[ebx-0x4c]
  40353e:	mov    dh,0x3
  403540:	cmp    DWORD PTR [ecx+edi*8-0x70d30013],ebx
  403547:	scas   eax,DWORD PTR es:[edi]
  403548:	fstp   DWORD PTR [edx+0x281d7a1a]
  40354e:	sub    eax,0x25976f63
  403553:	pop    eax
  403554:	in     eax,dx
  403555:	cmp    DWORD PTR [eax+0x62],esi
  403558:	ja     0x403595
  40355a:	es out dx,eax
  40355c:	lea    eax,[ebp-0x5b]
  40355f:	sahf   
  403560:	push   ebp
  403561:	aad    0xa8
  403563:	loope  0x4035a2
  403565:	rol    BYTE PTR [ebx-0x38],1
  403568:	mov    eax,ds:0x30e77fa9
  40356d:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40356f:	jmp    0xb50815da
  403574:	aad    0x15
  403576:	js     0x403559
  403578:	jno    0x4035c2
  40357a:	ss mov dh,0xf1
  40357d:	(bad)  
  40357e:	sbb    BYTE PTR [edx+0x2ff7df17],dl
  403584:	jb     0x403569
  403586:	in     eax,dx
  403587:	inc    esp
  403588:	cli    
  403589:	cmc    
  40358a:	and    bh,BYTE PTR [esi]
  40358c:	mov    esi,DWORD PTR [edx+edi*4+0x238912be]
  403593:	sar    DWORD PTR [esi+0x4105b890],cl
  403599:	arpl   WORD PTR [edx+ebp*8],dx
  40359c:	or     bh,BYTE PTR [edx-0x1]
  40359f:	out    dx,al
  4035a0:	ret    
  4035a1:	hlt    
  4035a2:	in     al,dx
  4035a3:	fsubr  DWORD PTR [edi+0x25]
  4035a6:	mov    esp,0xd1ca9327
  4035ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035ac:	and    ah,BYTE PTR ds:0x6cf6223b
  4035b2:	loopne 0x403564
  4035b4:	mov    esi,0x974107bc
  4035b9:	push   edx
  4035ba:	mov    edx,0x4c6f89fe
  4035bf:	xchg   ebp,eax
  4035c0:	fwait
  4035c1:	hlt    
  4035c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035c3:	mov    al,ds:0x272214a6
  4035c8:	and    eax,0x57aedcc4
  4035cd:	sar    DWORD PTR [esi+edi*2+0x4256bd48],1
  4035d4:	cmp    BYTE PTR [esi],ah
  4035d6:	test   DWORD PTR [ebx+ebx*1-0x6ec72873],esp
  4035dd:	push   eax
  4035de:	push   ebx
  4035df:	adc    BYTE PTR [edx],dl
  4035e1:	pop    edi
  4035e2:	push   cs
  4035e3:	sbb    esp,ebp
  4035e5:	stos   DWORD PTR es:[edi],eax
  4035e6:	add    ecx,esp
  4035e8:	dec    eax
  4035e9:	shl    DWORD PTR [edi-0x53],0xbd
  4035ed:	pop    ecx
  4035ee:	mov    bh,0x22
  4035f0:	sub    eax,0x4b036d7c
  4035f5:	cmp    esp,esp
  4035f7:	xchg   edx,eax
  4035f8:	lods   al,BYTE PTR ds:[esi]
  4035f9:	aad    0x97
  4035fb:	clc    
  4035fc:	adc    eax,0xba1aa032
  403601:	shl    BYTE PTR [ebx],0xee
  403604:	xchg   BYTE PTR [edx-0x1f],bh
  403607:	jae    0x40359d
  403609:	mov    dh,0xf2
  40360b:	or     ch,0x4c
  40360e:	lods   al,BYTE PTR ds:[esi]
  40360f:	jge    0x403668
  403611:	jge    0x403690
  403613:	jle    0x403623
  403615:	xchg   ecx,eax
  403616:	dec    esi
  403617:	jne    0x4035f4
  403619:	jg     0x4035f7
  40361b:	pop    esi
  40361c:	iret   
  40361d:	cmp    DWORD PTR [eax-0x3ae3e310],esi
  403623:	mov    bl,0x8e
  403625:	out    dx,eax
  403626:	in     eax,0xec
  403628:	(bad)  
  403629:	sti    
  40362a:	adc    al,0x9e
  40362c:	cmc    
  40362d:	push   0x32
  40362f:	pop    es
  403630:	jp     0x40363f
  403632:	inc    eax
  403633:	sti    
  403634:	popf   
  403635:	cmp    al,0xbe
  403637:	loopne 0x40363b
  403639:	pop    ds
  40363a:	retf   0x2bd3
  40363d:	jbe    0x40361f
  40363f:	sbb    esp,DWORD PTR [ebp+0x2ca0634f]
  403645:	bound  eax,QWORD PTR [esi+0x67703c58]
  40364b:	pop    eax
  40364c:	mov    eax,0xc4bbb1ef
  403651:	lea    eax,[esi-0x72645268]
  403657:	ror    DWORD PTR [edi-0x2],0xd6
  40365b:	and    al,0xeb
  40365d:	or     DWORD PTR [esi-0x2969d58b],ebp
  403663:	mov    DWORD PTR [ecx-0x5afb8f12],esp
  403669:	adc    BYTE PTR [esi+0x14],dl
  40366c:	mov    edx,0xf2ac503b
  403671:	psrlq  mm2,QWORD PTR [ebx-0x66e380a3]
  403678:	jg     0x4036ba
  40367a:	call   0xca7b30a6
  40367f:	popa   
  403680:	mov    ah,0xcc
  403682:	outs   dx,DWORD PTR ds:[esi]
  403683:	repnz sbb bl,BYTE PTR [edx+0x31]
  403687:	into   
  403688:	in     al,dx
  403689:	push   0x6dba6b25
  40368e:	xlat   BYTE PTR ds:[ebx]
  40368f:	jle    0x4036bc
  403691:	adc    DWORD PTR [ecx-0x6d640658],edi
  403697:	iret   
  403698:	sahf   
  403699:	clc    
  40369a:	out    dx,al
  40369b:	sbb    al,0x37
  40369d:	adc    al,0x2c
  40369f:	push   eax
  4036a0:	push   cs
  4036a1:	jg     0x4036b0
  4036a3:	push   ds
  4036a4:	lahf   
  4036a5:	and    esp,DWORD PTR [ecx]
  4036a7:	mov    ah,0xb4
  4036a9:	(bad)  
  4036aa:	enter  0x63b4,0x67
  4036ae:	jle    0x4036db
  4036b0:	arpl   WORD PTR [ebp-0x6294f16d],ax
  4036b6:	das    
  4036b7:	sub    ebx,DWORD PTR [ecx]
  4036b9:	dec    eax
  4036ba:	aad    0x8e
  4036bc:	test   esi,edx
  4036be:	mov    ds:0x1f00a8d3,al
  4036c3:	push   edx
  4036c4:	jmp    0x40366c
  4036c6:	gs jmp 0xb3d9:0xbca6eb03
  4036ce:	mov    bl,0xf4
  4036d0:	retf   
  4036d1:	xor    eax,0x37cb0f4f
  4036d6:	stos   BYTE PTR es:[edi],al
  4036d7:	test   eax,0xff5c5fa9
  4036dc:	fwait
  4036dd:	push   cs
  4036de:	lock push ss
  4036e0:	(bad)  [esi-0x77cbed97]
  4036e6:	in     al,dx
  4036e7:	xor    BYTE PTR [edx-0x6c74c905],ah
  4036ed:	imul   ebx,ebp,0x9839cb31
  4036f3:	jle    0x403680
  4036f5:	inc    edi
  4036f6:	es fsub st(7),st
  4036f9:	sub    al,0xdc
  4036fb:	push   ebp
  4036fc:	inc    ebp
  4036fd:	xchg   bh,dh
  4036ff:	push   0x33ef55ea
  403704:	xor    eax,DWORD PTR [ecx-0x41]
  403707:	push   ss
  403708:	mov    edx,0xba3e9be9
  40370d:	ins    DWORD PTR es:[edi],dx
  40370e:	sub    DWORD PTR [edi-0x2cf9284d],0x44
  403715:	mov    ch,0xa7
  403717:	sbb    dl,BYTE PTR [eax-0x5b]
  40371a:	(bad)
  40371d:	and    DWORD PTR [edi],ebx
  40371f:	pop    ds
  403720:	ins    DWORD PTR es:[edi],dx
  403721:	mov    al,0xb1
  403723:	fldenv [eax]
  403725:	mov    eax,ds:0xde109e4d
  40372a:	dec    ecx
  40372b:	js     0x403780
  40372d:	xchg   esp,edi
  40372f:	fwait
  403730:	sbb    cl,BYTE PTR [eax]
  403732:	cmp    dl,BYTE PTR [ecx+0x2f]
  403735:	fwait
  403736:	and    al,0xfa
  403738:	xchg   ebp,eax
  403739:	mov    esi,fs
  40373b:	pop    edi
  40373c:	test   dh,bh
  40373e:	pop    ds
  40373f:	in     eax,dx
  403740:	retf   0x8dae
  403743:	(bad)  
  403745:	pop    ebx
  403746:	or     DWORD PTR [ecx-0x67],0xd55430f6
  40374d:	das    
  40374e:	xchg   ebx,eax
  40374f:	push   cs
  403750:	lahf   
  403751:	mov    fs,WORD PTR [ecx+ebx*8]
  403754:	adc    bl,BYTE PTR [esi]
  403756:	loopne 0x403754
  403758:	(bad)  
  403759:	in     al,0x4
  40375b:	push   edi
  40375c:	popf   
  40375d:	and    ch,BYTE PTR [ecx+ebx*1]
  403760:	je     0x40373f
  403762:	mov    esp,0xd8923d5a
  403767:	outs   dx,DWORD PTR ds:[esi]
  403768:	fucomp st(6)
  40376b:	or     eax,DWORD PTR [edx]
  40376d:	adc    eax,0x4b9fc026
  403772:	sbb    al,0xf9
  403774:	inc    edx
  403775:	dec    ecx
  403776:	call   0x86333121
  40377b:	retf   
  40377c:	dec    ebp
  40377d:	push   0x67ddb2a4
  403782:	and    ebp,DWORD PTR [ebx+edx*2+0x51cca572]
  403789:	mov    bh,BYTE PTR [ebp+0x12]
  40378c:	dec    edx
  40378d:	es in  eax,dx
  40378f:	mov    ah,0x64
  403791:	out    0x5b,eax
  403793:	repnz fcom QWORD PTR [edx-0x46d6b30b]
  40379a:	pop    ecx
  40379b:	mov    esp,0xce98fa9a
  4037a0:	inc    edx
  4037a1:	stos   BYTE PTR es:[edi],al
  4037a2:	push   edx
  4037a3:	std    
  4037a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037a5:	neg    BYTE PTR [ebp+0x71]
  4037a8:	cli    
  4037a9:	adc    bh,BYTE PTR [esi-0x15e8b05e]
  4037af:	inc    esi
  4037b0:	dec    edi
  4037b1:	test   cl,0xa9
  4037b4:	xlat   BYTE PTR ds:[ebx]
  4037b5:	mov    ecx,0xf9082e96
  4037ba:	stos   DWORD PTR es:[edi],eax
  4037bb:	sub    al,BYTE PTR [ecx+eiz*8]
  4037be:	sbb    cl,ch
  4037c0:	add    al,0xd6
  4037c2:	ja     0x4037f6
  4037c4:	outs   dx,BYTE PTR ds:[esi]
  4037c5:	or     al,0xe9
  4037c7:	popa   
  4037c8:	daa    
  4037c9:	shl    BYTE PTR [eax+0x14],0xf1
  4037cd:	and    BYTE PTR [edx-0x63],cl
  4037d0:	into   
  4037d1:	imul   edx,DWORD PTR ds:0xe7ccada,0xf63c3719
  4037db:	int    0x39
  4037dd:	(bad)  
  4037de:	rol    ebp,1
  4037e0:	dec    ecx
  4037e1:	pushf  
  4037e2:	daa    
  4037e3:	adc    bl,dl
  4037e5:	fisttp QWORD PTR [ebp+esi*8+0x41]
  4037e9:	xchg   DWORD PTR [eax+ebp*1],eax
  4037ec:	push   ss
  4037ed:	mov    eax,0x7df4947f
  4037f2:	ds aas 
  4037f4:	push   edi
  4037f5:	popf   
  4037f6:	das    
  4037f7:	mov    DWORD PTR [edx-0x13920e97],esp
  4037fd:	in     eax,0x41
  4037ff:	sbb    ch,BYTE PTR [esi-0x7b]
  403802:	push   0xac8a309c
  403807:	mov    eax,ds:0xcd67433e
  40380c:	jo     0x4037f1
  40380e:	inc    ebx
  40380f:	xchg   ebx,eax
  403810:	dec    ebx
  403811:	into   
  403812:	das    
  403813:	pop    ecx
  403814:	pop    ebx
  403815:	mov    edi,0x74bc40e
  40381a:	(bad)  
  40381b:	jbe    0x4037a0
  40381d:	enter  0x4cfa,0xa3
  403821:	xchg   edx,eax
  403822:	mov    edx,0x580a3120
  403827:	(bad)  
  403828:	int3   
  403829:	inc    ebx
  40382a:	or     eax,0x96b576db
  40382f:	mov    edx,0x405b8a4e
  403834:	xor    DWORD PTR [eax],edx
  403836:	popa   
  403837:	mov    bl,0x93
  403839:	call   0x149:0x62721729
  403840:	xor    eax,0x327c14f9
  403845:	cs call 0xa342cf9f
  40384b:	mov    eax,DWORD PTR [eax-0x5ca056d4]
  403851:	les    esp,FWORD PTR [ecx+ecx*1]
  403854:	lgs    esi,FWORD PTR [eax-0x60]
  403858:	arpl   ax,si
  40385a:	xchg   edi,eax
  40385b:	add    eax,0xf6a5bc27
  403860:	inc    ecx
  403861:	dec    edx
  403862:	std    
  403863:	jno    0x403860
  403865:	xrelease xchg DWORD PTR [ebx],ebx
  403868:	inc    eax
  403869:	mov    dh,0x6e
  40386b:	mov    ah,BYTE PTR [esi+eax*2]
  40386e:	adc    al,0x1b
  403870:	fs mov cl,0x4
  403873:	or     bh,ah
  403875:	loopne 0x403845
  403877:	call   0xa2b6:0x333a21e9
  40387e:	dec    ebp
  40387f:	fwait
  403880:	lods   al,BYTE PTR ds:[esi]
  403881:	sti    
  403882:	repz fwait
  403884:	popf   
  403885:	mov    edi,0x912df26
  40388a:	add    DWORD PTR [ecx-0x652bb7c8],eax
  403890:	rcl    BYTE PTR [eax+0x4f],cl
  403893:	imul   ecx,DWORD PTR [edx-0xf],0x64
  403897:	cmp    al,0x88
  403899:	pop    esp
  40389a:	jmp    0x38b6022a
  40389f:	add    DWORD PTR [eax+0x13249774],esp
  4038a5:	pop    edx
  4038a6:	aaa    
  4038a7:	push   ds
  4038a8:	test   DWORD PTR [ecx+0x30455c55],esp
  4038ae:	ret    0x4773
  4038b1:	cmp    BYTE PTR [edx-0x2d],bl
  4038b4:	push   DWORD PTR [esi]
  4038b6:	jns    0x403839
  4038b8:	jae    0x403870
  4038ba:	es fmulp st(0),st
  4038bd:	inc    eax
  4038be:	mov    BYTE PTR [esi-0x7f],ah
  4038c1:	jle    0x40393f
  4038c3:	push   cs
  4038c4:	ret    0xe523
  4038c7:	sub    eax,0x4fceb086
  4038cc:	mov    eax,ds:0x6021c1b1
  4038d1:	xchg   esp,eax
  4038d2:	dec    edx
  4038d3:	(bad)
  4038d6:	mov    ds:0x567ed251,al
  4038db:	test   dh,bh
  4038dd:	(bad)
  4038e1:	pop    es
  4038e2:	sub    dh,BYTE PTR [ecx-0x687327f3]
  4038e8:	stc    
  4038e9:	test   DWORD PTR [ebx],edi
  4038eb:	gs dec esp
  4038ed:	lea    eax,[edi+0x4d8a9f38]
  4038f3:	and    dl,BYTE PTR [ebx+edi*4+0x7b440638]
  4038fa:	cmp    edi,ebx
  4038fc:	jge    0x403964
  4038fe:	jge    0x403899
  403900:	dec    ecx
  403901:	cmp    bh,BYTE PTR [edi]
  403903:	popf   
  403904:	dec    ebx
  403905:	mov    esp,0xc9cb8061
  40390a:	cmp    DWORD PTR [ecx+0x1d],ecx
  40390d:	jge    0x40392e
  40390f:	inc    edi
  403910:	mov    al,ds:0xc26b4e0f
  403915:	or     al,0x58
  403917:	pop    ebx
  403918:	stos   DWORD PTR es:[edi],eax
  403919:	cmp    ch,0x6e
  40391c:	fbld   TBYTE PTR gs:[eax+0x6482e065]
  403923:	es jnp 0x4038d7
  403926:	loop   0x4038ad
  403928:	jns    0x403976
  40392a:	cmp    BYTE PTR [ecx],ch
  40392c:	adc    edx,DWORD PTR [esi]
  40392e:	mov    ds:0x50d985e2,al
  403933:	cmc    
  403934:	clc    
  403935:	stos   DWORD PTR es:[di],eax
  403937:	xchg   BYTE PTR [esp+ebx*4+0x5c],al
  40393b:	fisubr DWORD PTR [eax]
  40393d:	fs es pop ss
  403940:	push   cs
  403941:	dec    ebx
  403942:	jge    0x403941
  403944:	cmp    ebx,ebp
  403946:	mov    BYTE PTR [ebx+edx*4],0x9a
  40394a:	push   0xfffffff5
  40394c:	push   ebp
  40394d:	int3   
  40394e:	cmp    bh,BYTE PTR [eax+0x2a]
  403951:	pop    esp
  403952:	push   edx
  403953:	dec    eax
  403954:	adc    al,BYTE PTR [ecx+0x6eec1a34]
  40395a:	pop    esi
  40395b:	das    
  40395c:	test   DWORD PTR [edi-0xbc359f2],edi
  403962:	std    
  403963:	adc    BYTE PTR [edx+0x3c61aa5a],0xa6
  40396a:	loop   0x4039e7
  40396c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40396d:	cmp    eax,0x38e69f3b
  403972:	mov    ebp,0xdb64e348
  403977:	sub    bl,BYTE PTR [ecx+0x35]
  40397a:	xor    al,0x63
  40397c:	mov    bh,BYTE PTR [edx-0x6b]
  40397f:	mov    edx,0x64730095
  403984:	sub    eax,0xc13eaae0
  403989:	xchg   edx,eax
  40398a:	push   ss
  40398b:	scas   al,BYTE PTR es:[edi]
  40398c:	iret   
  40398d:	aad    0x8a
  40398f:	push   edx
  403990:	cld    
  403991:	push   edi
  403992:	add    bh,ah
  403994:	pushf  
  403995:	test   BYTE PTR [esi],ch
  403997:	xchg   ebx,eax
  403998:	js     0x4039bd
  40399a:	mov    fs,WORD PTR [ecx-0x46]
  40399d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40399e:	cmp    bh,dl
  4039a0:	cmp    eax,0xf5499982
  4039a5:	mov    ch,0x94
  4039a7:	pop    esp
  4039a8:	mov    edx,0xd7a25fd6
  4039ad:	in     eax,dx
  4039ae:	push   esp
  4039af:	(bad)  
  4039b0:	icebp  
  4039b1:	loop   0x4039f8
  4039b3:	xchg   ebx,eax
  4039b4:	shr    BYTE PTR [ebx],1
  4039b6:	(bad)  
  4039b7:	fsubr  QWORD PTR [esp+ebp*2+0x12286adc]
  4039be:	aas    
  4039bf:	test   al,0x1c
  4039c1:	inc    ebp
  4039c2:	mov    ch,0xca
  4039c4:	jmp    0x403994
  4039c6:	aas    
  4039c7:	inc    edx
  4039c8:	ret    0x65cd
  4039cb:	mov    ecx,0xc1e56428
  4039d0:	aam    0x99
  4039d2:	mov    edi,0xfe082b8b
  4039d7:	cli    
  4039d8:	xchg   esp,eax
  4039d9:	xchg   BYTE PTR [ebx],ch
  4039db:	push   ebp
  4039dc:	test   ah,0xb
  4039df:	sbb    esi,DWORD PTR [eax]
  4039e1:	repnz into 
  4039e3:	mov    eax,ds:0x1f9ddab3
  4039e8:	rcl    DWORD PTR [ecx+0x60],1
  4039eb:	push   ss
  4039ec:	push   0x44
  4039ee:	xchg   DWORD PTR [ebp-0x11],ebx
  4039f1:	jbe    0x403a2a
  4039f3:	aam    0x2b
  4039f5:	xchg   edx,eax
  4039f6:	cwde   
  4039f7:	scas   al,BYTE PTR es:[edi]
  4039f8:	test   DWORD PTR [ecx+0x1e],ebp
  4039fb:	inc    esp
  4039fc:	ss out 0xc1,eax
  4039ff:	xchg   esp,eax
  403a00:	pop    edx
  403a01:	shr    BYTE PTR [edi-0xd],cl
  403a04:	(bad)  
  403a05:	or     esi,DWORD PTR [edx]
  403a07:	fs aas 
  403a09:	mov    ds:0x15eef21b,al
  403a0e:	psubd  mm7,QWORD PTR [esi+0x54]
  403a12:	sti    
  403a13:	mov    bh,0x2c
  403a15:	adc    BYTE PTR [eax+0x7b],ah
  403a18:	jnp    0x4039be
  403a1a:	pop    esi
  403a1b:	or     ebp,edx
  403a1d:	dec    edx
  403a1e:	pop    esp
  403a1f:	popf   
  403a20:	add    eax,0x3746b838
  403a25:	out    0x9b,eax
  403a27:	xchg   edi,eax
  403a28:	ja     0x4039bf
  403a2a:	adc    bl,BYTE PTR [eax+0x642c94ca]
  403a30:	sub    DWORD PTR [ebx+ebx*8+0x2e],ebp
  403a34:	pop    esi
  403a35:	mov    al,ds:0x7dab1a19
  403a3a:	in     al,0xcc
  403a3c:	push   ecx
  403a3d:	push   esi
  403a3e:	and    ch,dh
  403a40:	or     ecx,DWORD PTR [esi]
  403a42:	stos   BYTE PTR es:[edi],al
  403a43:	pusha  
  403a44:	adc    eax,0xf39788c1
  403a49:	inc    esp
  403a4a:	addr16 pop ebp
  403a4c:	lahf   
  403a4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a4e:	or     BYTE PTR [eax+0x77ada5e5],ah
  403a54:	adc    ah,BYTE PTR [eax+0x56]
  403a57:	jl     0x403aa8
  403a59:	cmp    BYTE PTR [edi],0x5b
  403a5c:	int    0x86
  403a5e:	bound  edx,QWORD PTR [ebx]
  403a60:	pushf  
  403a61:	in     al,dx
  403a62:	xor    al,dh
  403a64:	jae    0x403a5d
  403a66:	cwde   
  403a67:	inc    ebx
  403a68:	mov    bl,0x21
  403a6a:	(bad)  [edx+0x42c253bd]
  403a70:	jmp    0x6e2f:0x460b7be8
  403a77:	daa    
  403a78:	and    ebx,ebx
  403a7a:	retf   
  403a7b:	or     al,BYTE PTR [eax+0x7a]
  403a7e:	adc    eax,0x97207b42
  403a83:	cld    
  403a84:	in     al,dx
  403a85:	dec    esp
  403a86:	mov    eax,ds:0xce279733
  403a8b:	repnz fld TBYTE PTR [ebp-0xca1a15c]
  403a92:	loope  0x403aef
  403a94:	xor    al,0xdf
  403a96:	add    eax,0xf03224e5
  403a9b:	add    ebx,DWORD PTR [edi]
  403a9d:	xor    BYTE PTR [ebx],bl
  403a9f:	test   DWORD PTR ds:[ecx-0x658d53cb],ebp
  403aa6:	jle    0x403af4
  403aa8:	sub    al,0x1
  403aaa:	popf   
  403aab:	(bad)  
  403aac:	cmp    eax,0xdc0291d7
  403ab1:	xchg   ecx,eax
  403ab2:	xchg   ecx,eax
  403ab3:	fistp  WORD PTR [esi+0x18]
  403ab6:	fld    DWORD PTR [ebx+0x72a6cb5a]
  403abc:	fisttp DWORD PTR [eax-0x307e8850]
  403ac2:	pop    ds
  403ac3:	popa   
  403ac4:	shl    edi,cl
  403ac6:	inc    esi
  403ac7:	cwde   
  403ac8:	imul   ebx,esi,0x71c2a05a
  403ace:	or     BYTE PTR [edi-0x78037b7b],bh
  403ad4:	arpl   WORD PTR [edi-0x4d],cx
  403ad7:	repnz out dx,al
  403ad9:	cmp    eax,0xf2a86de4
  403ade:	addr16 push esi
  403ae0:	xor    al,0x35
  403ae2:	xor    bh,BYTE PTR [ebp-0x25]
  403ae5:	test   BYTE PTR [ebx-0x21699f78],0xed
  403aec:	push   edx
  403aed:	arpl   WORD PTR [ecx+0x38e6849c],bx
  403af3:	cmp    DWORD PTR [esp+edx*1-0x16b4f4db],ebx
  403afa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403afb:	sar    DWORD PTR [esp+edi*8-0x2a],1
  403aff:	mov    ecx,0xb73ddfdf
  403b04:	imul   edx,DWORD PTR [esi+0x26033db6],0x8a2f5189
  403b0e:	add    eax,0xbac12275
  403b13:	sar    BYTE PTR [ebx],0xd1
  403b16:	mov    ecx,DWORD PTR [ebp-0xc]
  403b19:	mov    DWORD PTR [ebp+0x8],ecx
  403b1c:	mov    ecx,DWORD PTR [ebp+0x8]
  403b1f:	je     0x406073
  403b25:	jmp    0x403b5a
  403b2a:	mov    ecx,DWORD PTR [ebp+0x8]
  403b2d:	mov    edx,DWORD PTR [ebp-0x8]
  403b30:	xor    ecx,eax
  403b32:	xor    edx,eax
  403b34:	sub    ecx,edx
  403b36:	sub    ecx,esi
  403b38:	xor    ecx,eax
  403b3a:	mov    DWORD PTR [ebp+0x8],ecx
  403b3d:	mov    ecx,DWORD PTR [ebp+0x8]
  403b40:	mov    edx,DWORD PTR [ebp+0x8]
  403b43:	xor    ecx,eax
  403b45:	imul   edx,edx,0x5708f5
  403b4b:	add    ecx,esi
  403b4d:	lea    ecx,[ebp+ecx*4-0x64]
  403b51:	mov    edi,DWORD PTR [ecx]
  403b53:	add    edx,edi
  403b55:	mov    DWORD PTR [ecx],edx
  403b57:	mov    ecx,DWORD PTR [ebp+0x8]
  403b5a:	xor    ecx,eax
  403b5c:	add    ecx,esi
  403b5e:	jne    0x403b2a
  403b64:	mov    ecx,DWORD PTR [ebp-0x14]
  403b67:	mov    edx,DWORD PTR [ebp+0x8]
  403b6a:	xor    ecx,eax
  403b6c:	xor    edx,eax
  403b6e:	add    ecx,esi
  403b70:	add    edx,esi
  403b72:	cmp    ecx,edx
  403b74:	jae    0x405f8d
  403b7a:	lea    edx,[ecx-0x3272db]
  403b80:	mov    DWORD PTR [ebp-0x18],edx
  403b83:	mov    edi,DWORD PTR [ebp-0x18]
  403b86:	mov    DWORD PTR [ebp-0x24],0x705fd08
  403b8d:	lea    edx,[ebp-0x24]
  403b90:	mov    DWORD PTR [ebp-0x10],edx
  403b93:	mov    edx,DWORD PTR [ebp-0x10]
  403b96:	add    DWORD PTR [edx],0x705fa08
  403b9c:	mov    ebx,DWORD PTR [ebp-0x10]
  403b9f:	xor    edi,eax
  403ba1:	add    edi,DWORD PTR [ebx]
  403ba3:	lea    edx,[ebp+ecx*4-0x64]
  403ba7:	mov    ebx,DWORD PTR [edx]
  403ba9:	xor    edi,ebx
  403bab:	mov    DWORD PTR [edx],edi
  403bad:	jmp    0x405f30
  403bb2:	pop    esi
  403bb3:	stos   BYTE PTR es:[edi],al
  403bb4:	sbb    DWORD PTR [eax],esp
  403bb6:	gs (bad) 
  403bb8:	push   ebx
  403bb9:	lds    ecx,FWORD PTR fs:[ebp+0x8c1f475]
  403bc0:	addr16 push 0x1c
  403bc3:	pop    edi
  403bc4:	bound  esp,QWORD PTR [edx+0x1c]
  403bc7:	pop    edi
  403bc8:	bound  esp,QWORD PTR [edx-0x43]
  403bcb:	cmp    eax,0xbc26ba44
  403bd0:	mov    BYTE PTR [ebp+0x70],0xcb
  403bd4:	push   edx
  403bd5:	jle    0x403c0d
  403bd7:	ss aas 
  403bd9:	test   eax,0x8503bcbf
  403bde:	mov    esp,0xfc5fa45a
  403be3:	jbe    0x403c22
  403be5:	pop    eax
  403be6:	in     al,dx
  403be7:	fsub   QWORD PTR [edx+esi*1]
  403bea:	fbld   TBYTE PTR [edx+0x13]
  403bed:	ret    
  403bee:	addr16 push cs
  403bf0:	pop    ecx
  403bf1:	add    ecx,0x42
  403bf4:	dec    edi
  403bf5:	and    BYTE PTR [ebp+0x7c0f85b7],dh
  403bfb:	jmp    0x36758978
  403c00:	inc    ebp
  403c01:	dec    ecx
  403c02:	jl     0x403c09
  403c04:	sub    al,dl
  403c06:	mov    bl,BYTE PTR [edi+0x5d]
  403c09:	add    BYTE PTR [ebp+0xc],al
  403c0c:	mov    ebx,0x173cdd17
  403c11:	pop    ss
  403c12:	inc    esp
  403c13:	jmp    DWORD PTR [ecx+0xb]
  403c16:	in     al,0x58
  403c18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c19:	jo     0x403bd4
  403c1b:	sub    BYTE PTR [eax+ebp*4],dh
  403c1e:	retf   
  403c1f:	or     DWORD PTR [eax+0x33],ebp
  403c22:	inc    ebx
  403c23:	mov    dl,0x26
  403c25:	jnp    0x403c08
  403c27:	cmp    cl,BYTE PTR ds:0x88be5a39
  403c2d:	xor    al,0x39
  403c2f:	out    0x55,eax
  403c31:	mov    esi,0xd9e82e83
  403c36:	enter  0xe7d9,0x48
  403c3a:	mov    eax,ds:0xadd86341
  403c3f:	cs adc al,0x67
  403c42:	or     al,0xca
  403c44:	cmp    DWORD PTR [edi+ecx*2-0x71],edi
  403c48:	push   ds
  403c49:	sub    al,0x7e
  403c4b:	add    bl,BYTE PTR [ebx+0x6b]
  403c4e:	mov    ebp,0x9455baec
  403c53:	lods   eax,DWORD PTR ds:[esi]
  403c54:	mov    BYTE PTR [eax+0x1a4dc52a],dl
  403c5a:	sbb    eax,0x86c57282
  403c5f:	(bad)  
  403c60:	jae    0x403cb5
  403c62:	or     ebp,DWORD PTR [esi]
  403c64:	xor    BYTE PTR [ebp+0x2],dh
  403c67:	mov    eax,ds:0xa8a74dae
  403c6c:	sub    DWORD PTR [ecx],esi
  403c6e:	mov    esp,0xeafe619f
  403c73:	(bad)  [eax]
  403c75:	dec    esp
  403c76:	xor    eax,0x1ddc7fa
  403c7b:	jnp    0x403c8c
  403c7d:	cmc    
  403c7e:	into   
  403c7f:	or     dl,BYTE PTR [esi-0x3f]
  403c82:	push   0xaf62d942
  403c87:	stos   DWORD PTR es:[edi],eax
  403c88:	(bad)  
  403c89:	adc    BYTE PTR [edi+eiz*2+0x7620c106],ah
  403c90:	adc    bh,BYTE PTR [esi+edx*4]
  403c93:	jmp    0x403cce
  403c95:	loop   0x403c84
  403c97:	dec    ebx
  403c98:	pop    esi
  403c99:	cdq    
  403c9a:	mov    edx,DWORD PTR [eax]
  403c9c:	push   edx
  403c9d:	or     BYTE PTR [edi-0x7dbf8e93],dh
  403ca3:	xchg   esi,eax
  403ca4:	je     0x403c60
  403ca6:	stos   BYTE PTR es:[edi],al
  403ca7:	out    dx,al
  403ca8:	xor    DWORD PTR [ebp+0x2a1eadad],ebp
  403cae:	cmp    DWORD PTR [edx-0x18dacfdb],edx
  403cb4:	stos   BYTE PTR es:[edi],al
  403cb5:	jge    0x403d30
  403cb7:	outs   dx,BYTE PTR ds:[esi]
  403cb8:	(bad)  
  403cba:	shr    BYTE PTR [ebx],cl
  403cbc:	outs   dx,BYTE PTR ds:[esi]
  403cbd:	mov    esi,0xca0fb40d
  403cc2:	push   ebx
  403cc3:	arpl   WORD PTR [eax+0x0],bp
  403cc6:	adc    al,0x27
  403cc8:	push   ecx
  403cc9:	mov    al,0xf6
  403ccb:	outs   dx,BYTE PTR ds:[esi]
  403ccc:	dec    edi
  403ccd:	gs into 
  403ccf:	cmp    esp,ebx
  403cd1:	push   ss
  403cd2:	mov    ah,0x97
  403cd4:	mov    edx,0xe9b8d671
  403cd9:	add    al,0xf3
  403cdb:	sub    al,dh
  403cdd:	push   esp
  403cde:	repnz cmp eax,0x14d157b1
  403ce4:	gs call 0xf8f7d9dd
  403cea:	sub    edx,DWORD PTR [edx-0x7]
  403ced:	fidivr DWORD PTR [eax]
  403cef:	lahf   
  403cf0:	sub    BYTE PTR [ebp-0x4f],dl
  403cf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cf4:	sbb    ebx,eax
  403cf6:	ins    BYTE PTR es:[edi],dx
  403cf7:	and    BYTE PTR [ebx+0x3d],0x7
  403cfb:	lods   al,BYTE PTR ds:[esi]
  403cfc:	push   es
  403cfd:	push   0x46ac3c73
  403d02:	or     dl,cl
  403d04:	hlt    
  403d05:	adc    ch,BYTE PTR [edx-0x7227fbf9]
  403d0b:	sahf   
  403d0c:	cmp    BYTE PTR [esi+0x68519560],ah
  403d12:	stc    
  403d13:	dec    ebx
  403d14:	xchg   DWORD PTR [edx-0x7a598aa0],edx
  403d1a:	aas    
  403d1b:	ja     0x403ce2
  403d1d:	push   ebx
  403d1e:	dec    ecx
  403d1f:	dec    edi
  403d20:	or     DWORD PTR [ecx-0xa434fc],esi
  403d26:	loope  0x403d9b
  403d28:	mov    esi,0x3d94f90d
  403d2d:	dec    edx
  403d2e:	(bad)  
  403d2f:	scas   eax,DWORD PTR es:[edi]
  403d30:	std    
  403d31:	ficom  WORD PTR [edi]
  403d33:	hlt    
  403d34:	addr16 retf 0xd252
  403d38:	enter  0xf904,0xcf
  403d3c:	scas   eax,DWORD PTR es:[edi]
  403d3d:	shl    dh,cl
  403d3f:	dec    edi
  403d40:	lds    ecx,FWORD PTR [ebx+0x69c06c96]
  403d46:	les    ebp,FWORD PTR [ecx+0x20cbd09d]
  403d4c:	aam    0xd6
  403d4e:	fld    TBYTE PTR [eax+0x38]
  403d51:	pop    ebp
  403d52:	mov    ds:0x55e828f9,al
  403d57:	mov    edx,DWORD PTR [ecx+edx*4]
  403d5a:	iret   
  403d5b:	adc    DWORD PTR [edx],ecx
  403d5d:	hlt    
  403d5e:	push   ds
  403d5f:	(bad)  
  403d60:	pop    esi
  403d61:	je     0x403ceb
  403d63:	dec    edi
  403d64:	add    eax,0xdb327676
  403d69:	mov    ebp,0x2268342a
  403d6f:	dec    ecx
  403d70:	jns    0x403d79
  403d72:	xchg   ebp,eax
  403d73:	mov    ebp,0x55f5fa43
  403d78:	mov    ds:0xc3a14109,eax
  403d7d:	popf   
  403d7e:	or     DWORD PTR [edi+0x2],0x4cef40f0
  403d85:	js     0x403dbb
  403d87:	data16 loope 0x403d7b
  403d8a:	add    cl,0xc8
  403d8d:	(bad)  
  403d8e:	fimul  WORD PTR [edx-0x3b]
  403d91:	js     0x403e0f
  403d93:	pop    ss
  403d94:	lods   al,BYTE PTR ds:[esi]
  403d95:	inc    edx
  403d96:	mov    al,0x4a
  403d98:	xlat   BYTE PTR ds:[ebx]
  403d99:	adc    ecx,DWORD PTR ds:0x580ca8c4
  403d9f:	dec    esp
  403da0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403da1:	ss aas 
  403da3:	and    DWORD PTR [eax],eax
  403da5:	jmp    0xb43c:0x24b167db
  403dac:	mov    dl,0xd3
  403dae:	loop   0x403d92
  403db0:	and    DWORD PTR [esi+ecx*2+0x46fe36c3],edi
  403db7:	frstor [eax]
  403db9:	or     edi,edx
  403dbb:	ss int3 
  403dbd:	cmp    al,0xf8
  403dbf:	stos   DWORD PTR es:[edi],eax
  403dc0:	push   ecx
  403dc1:	sbb    eax,edx
  403dc3:	xchg   ebx,eax
  403dc4:	lods   eax,DWORD PTR ds:[esi]
  403dc5:	fs xchg ebx,eax
  403dc7:	inc    ebp
  403dc8:	mov    ebx,0xf547b1ac
  403dcd:	cmc    
  403dce:	loopne 0x403d93
  403dd0:	mov    ds:0x5bd8f933,al
  403dd5:	dec    ebp
  403dd6:	or     ecx,DWORD PTR [eax-0x37]
  403dd9:	call   0xe3cdad56
  403dde:	sbb    eax,0xb0df5734
  403de3:	push   ss
  403de4:	iret   
  403de5:	fld    DWORD PTR [ecx+0x2d]
  403de8:	and    eax,eax
  403dea:	lods   al,BYTE PTR ds:[esi]
  403deb:	adc    edi,edi
  403ded:	shr    eax,cl
  403def:	push   0x2f
  403df1:	mov    DWORD PTR [ecx],ebp
  403df3:	fcom   QWORD PTR [ecx+0x27]
  403df6:	jae    0x403e29
  403df8:	outs   dx,BYTE PTR ds:[esi]
  403df9:	lds    ebx,FWORD PTR [ebp-0x54]
  403dfc:	pop    ecx
  403dfd:	mov    WORD PTR [edx+0x34],cs
  403e00:	xor    dh,BYTE PTR [ebx-0x78]
  403e03:	jno    0x403e29
  403e05:	mov    DWORD PTR [ebp+0x19],ecx
  403e08:	inc    eax
  403e09:	scas   eax,DWORD PTR es:[edi]
  403e0a:	or     DWORD PTR [eax],eax
  403e0c:	sub    eax,0xc5ccb1c
  403e11:	ins    BYTE PTR es:[edi],dx
  403e12:	xor    BYTE PTR [ebp-0x4e1910a0],bl
  403e18:	and    ah,ah
  403e1a:	and    edx,edx
  403e1c:	or     BYTE PTR [eax+0x381e9435],cl
  403e22:	div    DWORD PTR [ebx]
  403e24:	dec    edi
  403e25:	or     cl,BYTE PTR ds:0x29ffdf9e
  403e2b:	xchg   esp,eax
  403e2c:	jmp    0xa54e3333
  403e31:	jae    0x403e4c
  403e33:	aaa    
  403e34:	rol    DWORD PTR [edx+ecx*8+0x3ef7f21],1
  403e3b:	out    dx,eax
  403e3c:	ja     0x403dfe
  403e3e:	aaa    
  403e3f:	xchg   esp,eax
  403e41:	pop    esi
  403e42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e43:	push   eax
  403e44:	pusha  
  403e45:	inc    esi
  403e46:	shr    BYTE PTR [esi-0x4a],1
  403e49:	push   es
  403e4a:	rcl    BYTE PTR [ecx-0x256d8e0c],cl
  403e50:	inc    eax
  403e51:	(bad)  
  403e52:	jns    0x403ea4
  403e54:	stos   DWORD PTR es:[edi],eax
  403e55:	mov    edx,0xb23302e5
  403e5a:	aaa    
  403e5b:	sahf   
  403e5c:	or     ebx,DWORD PTR [ebx]
  403e5e:	pusha  
  403e5f:	and    dh,dl
  403e61:	mov    esp,0xbd3236e6
  403e66:	push   edx
  403e67:	out    0x7f,eax
  403e69:	popa   
  403e6a:	cld    
  403e6b:	sbb    al,BYTE PTR [eax]
  403e6d:	sar    BYTE PTR [edx+0x61],1
  403e70:	add    BYTE PTR [edi+0x65],dl
  403e73:	dec    edx
  403e74:	adc    al,0xb5
  403e76:	addr16 test esp,0x7d2a7400
  403e7d:	mov    al,0xd3
  403e7f:	out    dx,eax
  403e80:	mov    DWORD PTR [edx-0x396d8a65],esi
  403e86:	hlt    
  403e87:	dec    ebx
  403e88:	or     DWORD PTR [ebx],ebp
  403e8a:	repz (bad) 
  403e8c:	sbb    al,0xe
  403e8e:	pop    ds
  403e8f:	mov    dh,0x49
  403e91:	pop    ebx
  403e92:	aas    
  403e93:	popa   
  403e94:	or     ecx,DWORD PTR [ebx-0x1c038230]
  403e9a:	inc    ecx
  403e9b:	nop
  403e9c:	jo     0x403e55
  403e9e:	sub    esi,DWORD PTR [eax]
  403ea0:	sbb    esp,DWORD PTR [eax+eiz*8]
  403ea3:	pushf  
  403ea4:	es xchg edx,eax
  403ea6:	(bad)  
  403ea7:	cli    
  403ea8:	aas    
  403ea9:	repz add BYTE PTR [esi+0x634bf0df],0x4a
  403eb1:	xor    al,0x1e
  403eb3:	stos   BYTE PTR es:[edi],al
  403eb4:	xchg   esp,eax
  403eb5:	xchg   edi,eax
  403eb6:	or     al,0xde
  403eb8:	leave  
  403eb9:	mov    dh,0x5d
  403ebb:	push   ebx
  403ebc:	dec    esi
  403ebd:	cmp    eax,0x57a857c3
  403ec2:	mov    WORD PTR [ebx],?
  403ec4:	test   BYTE PTR [ebp+0x2a5c806b],bh
  403eca:	or     DWORD PTR [eax],0x92247849
  403ed0:	ficom  WORD PTR [edi]
  403ed2:	mov    dh,0x33
  403ed4:	inc    edx
  403ed5:	fs mov ecx,0xcf042e55
  403edb:	push   edx
  403edc:	out    0x5d,al
  403ede:	sbb    BYTE PTR [esi+0x42116aa7],0x7c
  403ee5:	loope  0x403f48
  403ee7:	scas   eax,DWORD PTR es:[edi]
  403ee8:	out    0x90,eax
  403eea:	data16 daa 
  403eec:	test   DWORD PTR [edx-0x5e534d],esp
  403ef2:	out    0x8c,al
  403ef4:	in     eax,dx
  403ef5:	sbb    cl,BYTE PTR [eax-0x7e31b31f]
  403efb:	fidivr DWORD PTR [eax]
  403efd:	push   ebx
  403efe:	mov    BYTE PTR [ecx],al
  403f00:	mov    esi,ecx
  403f02:	sahf   
  403f03:	sub    dh,al
  403f05:	fimul  WORD PTR [esi-0x38]
  403f08:	nop
  403f09:	rol    BYTE PTR [esi+0x20bf6290],1
  403f0f:	test   BYTE PTR [ebx],ch
  403f11:	add    DWORD PTR [ecx-0x5f],ecx
  403f14:	and    BYTE PTR [eax],ch
  403f16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f17:	xor    edx,DWORD PTR [edi]
  403f19:	stc    
  403f1a:	div    DWORD PTR [ebx+0xf0cf64c]
  403f20:	repz lock int3 
  403f23:	inc    edx
  403f24:	cs jge 0x403f80
  403f27:	inc    esp
  403f28:	jg     0x403f21
  403f2a:	xor    DWORD PTR [edi-0x7f],ebp
  403f2d:	(bad)  
  403f2e:	fild   DWORD PTR [esi+0x430bed83]
  403f34:	sbb    bl,bh
  403f36:	or     DWORD PTR [esi+0x51],ebp
  403f39:	mov    edi,0xd41b8875
  403f3e:	lods   eax,DWORD PTR ds:[esi]
  403f3f:	retf   
  403f40:	lock sbb al,0x0
  403f43:	adc    DWORD PTR [edi-0x6d],ecx
  403f46:	jbe    0x403f7b
  403f48:	push   cs
  403f49:	jg     0x403f75
  403f4b:	xchg   esp,eax
  403f4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f4d:	sub    al,0x65
  403f4f:	push   0xffffffd8
  403f51:	mov    WORD PTR [ecx],ss
  403f53:	xor    ebx,DWORD PTR [edx]
  403f55:	or     DWORD PTR [eax+ebx*1+0xa33d20a],esi
  403f5c:	dec    esi
  403f5d:	int    0xe3
  403f5f:	std    
  403f60:	es jmp 0xbb5d:0xdd5c3f85
  403f68:	test   eax,0x392380a4
  403f6d:	push   edx
  403f6e:	retf   0xff91
  403f71:	out    0x7b,al
  403f73:	or     al,0xac
  403f75:	dec    edx
  403f76:	repnz sbb BYTE PTR [eax+0x44],cl
  403f7a:	test   BYTE PTR [edi],ch
  403f7c:	and    al,0x8b
  403f7e:	mov    cl,0x9d
  403f80:	push   ss
  403f81:	dec    edx
  403f82:	fld    TBYTE PTR [ecx]
  403f84:	sbb    dh,BYTE PTR [ebx]
  403f86:	mov    WORD PTR [ecx],ss
  403f88:	test   DWORD PTR [ebp+0x1d],esi
  403f8b:	mov    bh,0x91
  403f8d:	outs   dx,BYTE PTR ds:[esi]
  403f8e:	gs fwait
  403f90:	je     0x403f5a
  403f92:	jg     0x403f64
  403f94:	(bad)  
  403f95:	rcl    ecx,1
  403f97:	pushw  cs
  403f99:	loop   0x403f89
  403f9b:	ds out 0x33,al
  403f9e:	outs   dx,DWORD PTR ds:[esi]
  403f9f:	fs pushf 
  403fa1:	fcomp  DWORD PTR [ebx+0x1a]
  403fa4:	push   ecx
  403fa5:	sub    ecx,DWORD PTR [eax+0x47ed6c6e]
  403fab:	(bad)  
  403fac:	int3   
  403fad:	out    dx,eax
  403fae:	push   ecx
  403faf:	mov    ebp,0xb7e1c591
  403fb4:	ja     0x404033
  403fb6:	ds test eax,0xb0328056
  403fbc:	pushf  
  403fbd:	inc    eax
  403fbe:	sahf   
  403fbf:	mov    ch,0xc5
  403fc1:	fiadd  DWORD PTR [esi]
  403fc3:	dec    ebx
  403fc4:	mov    ah,BYTE PTR [ebx+0x39]
  403fc7:	mov    ah,0x9f
  403fc9:	mov    edx,0x7d1bca73
  403fce:	fmul   DWORD PTR ds:0xd5daeb34
  403fd4:	mov    dl,0x79
  403fd6:	out    0x1a,eax
  403fd8:	retf   0xf35
  403fdb:	cld    
  403fdc:	mov    esi,DWORD PTR [ecx+eax*8]
  403fdf:	sub    DWORD PTR [edi],0x73051a4b
  403fe5:	scas   al,BYTE PTR es:[edi]
  403fe6:	ror    DWORD PTR [eax],0xd5
  403fe9:	dec    edi
  403fea:	cmp    esi,DWORD PTR [ecx]
  403fec:	xchg   edx,eax
  403fed:	loope  0x404008
  403fef:	aad    0x5b
  403ff1:	sbb    BYTE PTR [ebp+0x163b30ed],cl
  403ff7:	mov    al,0x22
  403ff9:	mov    edi,0x984ac117
  403ffe:	imul   edi,DWORD PTR [ecx+0x6f106ebf],0xffffffcf
  404005:	xor    al,0xdf
  404007:	xor    eax,0x1fad7da7
  40400c:	push   edx
  40400d:	jl     0x404016
  40400f:	or     DWORD PTR [edi-0x2f],esp
  404012:	scas   al,BYTE PTR es:[edi]
  404013:	pusha  
  404014:	mov    ebx,0xdc3a689b
  404019:	pop    ecx
  40401a:	out    dx,al
  40401b:	and    BYTE PTR [edi-0xf],ah
  40401e:	dec    edx
  40401f:	push   cs
  404020:	test   eax,0xe16f1eed
  404025:	cld    
  404026:	sbb    ah,ch
  404028:	inc    ebx
  404029:	dec    esi
  40402a:	inc    edx
  40402b:	sub    BYTE PTR [ebx],ah
  40402d:	ins    BYTE PTR es:[edi],dx
  40402e:	jmp    0x404089
  404030:	xchg   DWORD PTR [esp+eax*4],ecx
  404033:	push   esp
  404034:	xchg   ebp,eax
  404035:	outs   dx,DWORD PTR ds:[esi]
  404036:	adc    al,0xfb
  404038:	cmp    edi,DWORD PTR [edx-0x57b026f5]
  40403e:	inc    eax
  40403f:	inc    DWORD PTR [ebp-0x7163c74c]
  404045:	sti    
  404046:	mov    eax,0x7bec5244
  40404b:	les    esp,FWORD PTR [edx-0x21]
  40404e:	lods   eax,DWORD PTR ds:[esi]
  40404f:	sahf   
  404050:	(bad)  
  404051:	cmc    
  404052:	cmp    ah,BYTE PTR [esi+ebx*2+0x1d5e666e]
  404059:	adc    ebp,esp
  40405b:	mov    edi,0x594f2467
  404060:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404061:	ret    
  404062:	cmp    bl,ah
  404064:	sub    al,0x7
  404066:	xchg   ebx,ecx
  404068:	mov    dl,0x2f
  40406a:	and    ebx,DWORD PTR [ebp-0x67]
  40406d:	fcomp  st(3)
  40406f:	or     DWORD PTR [edi+0x6ec56cde],eax
  404075:	cmp    eax,0x5657338e
  40407a:	fyl2xp1 
  40407c:	jne    0x4040fc
  40407e:	add    esp,DWORD PTR [eax+0x3e]
  404081:	jnp    0x40403d
  404083:	add    DWORD PTR ss:[esp+eax*4-0x264eb922],ecx
  40408b:	iret   
  40408c:	inc    ebp
  40408d:	sub    al,0x6e
  40408f:	or     BYTE PTR [eax-0x51],0x5c
  404093:	jne    0x40403c
  404095:	fdivr  QWORD PTR [ebx]
  404097:	stos   DWORD PTR es:[edi],eax
  404098:	ror    eax,cl
  40409a:	pop    eax
  40409b:	sub    cl,BYTE PTR [ebx]
  40409d:	push   ss
  40409e:	jg     0x404054
  4040a0:	outs   dx,DWORD PTR ds:[esi]
  4040a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040a2:	daa    
  4040a3:	pusha  
  4040a4:	jns    0x404036
  4040a6:	js     0x404123
  4040a8:	push   esi
  4040a9:	cmp    eax,0x7fa88474
  4040ae:	jg     0x4040ce
  4040b0:	out    0xc9,eax
  4040b2:	dec    ebx
  4040b3:	mov    esi,0x87d44ac3
  4040b8:	test   al,0xe7
  4040ba:	fisubr DWORD PTR [edi-0x5a]
  4040bd:	stc    
  4040be:	pop    ds
  4040bf:	out    dx,eax
  4040c0:	mov    DWORD PTR [ebx-0x1e],edi
  4040c3:	js     0x4040f5
  4040c5:	imul   esi,DWORD PTR [ecx],0x3a
  4040c8:	test   eax,0xb7d72ab1
  4040cd:	pop    es
  4040ce:	add    BYTE PTR [esi],bh
  4040d0:	push   edx
  4040d1:	mov    ebp,0xb940a2a2
  4040d6:	das    
  4040d7:	ret    
  4040d8:	pop    ecx
  4040d9:	cs cs stos DWORD PTR es:[edi],eax
  4040dc:	xor    edx,edx
  4040de:	mov    ch,0x55
  4040e0:	mov    eax,0x2bd1dd19
  4040e5:	mov    al,ds:0x131b043
  4040ea:	sar    DWORD PTR [ebx-0x46229cf8],1
  4040f0:	repz neg BYTE PTR es:0x66a8a22a
  4040f8:	sub    eax,0x5c0ce817
  4040fd:	push   cs
  4040fe:	sbb    BYTE PTR [ebx+esi*2+0x3c],al
  404102:	adc    ecx,DWORD PTR [ebp-0x423b884c]
  404108:	stc    
  404109:	or     DWORD PTR ds:0x81ebf349,ebx
  40410f:	stc    
  404110:	sar    al,0x7f
  404113:	push   ebx
  404114:	push   ecx
  404115:	dec    ebp
  404116:	cmp    BYTE PTR [ebp-0x33],0x9f
  40411a:	cmovle ebx,DWORD PTR [ecx+0x250124ef]
  404121:	mov    ah,0x44
  404123:	dec    esp
  404124:	push   0xd01e2005
  404129:	sub    eax,0xf184000b
  40412e:	add    DWORD PTR [edi],esi
  404130:	dec    esp
  404131:	into   
  404132:	push   ecx
  404133:	inc    eax
  404134:	sub    cl,BYTE PTR [esi-0x78]
  404137:	dec    esi
  404138:	int3   
  404139:	ror    DWORD PTR [ebp+0x1b],0xb7
  40413d:	pop    ecx
  40413e:	mov    dh,0xb4
  404140:	sub    eax,0x7c9c8f8c
  404145:	pop    ecx
  404146:	or     al,0x8a
  404148:	test   eax,0x56a73153
  40414d:	test   eax,0xea2c1eff
  404152:	jmp    0xd9520b50
  404157:	dec    esi
  404158:	and    eax,0xa4853de0
  40415d:	icebp  
  40415e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40415f:	dec    esp
  404160:	fst    QWORD PTR [eax-0xe]
  404163:	mov    dl,BYTE PTR [esi]
  404165:	xchg   ebx,eax
  404166:	mov    WORD PTR [eax+0x28ff9186],?
  40416c:	mov    bl,0xe6
  40416e:	in     eax,0x9d
  404170:	push   ss
  404171:	xchg   DWORD PTR [eax-0xf65c38],esi
  404177:	add    esi,edx
  404179:	mov    edi,0x5cf55c06
  40417e:	xchg   ebp,eax
  40417f:	inc    ecx
  404180:	xor    al,0x44
  404182:	cdq    
  404183:	test   eax,0x54ad98ed
  404188:	add    edi,edx
  40418a:	lods   eax,DWORD PTR ds:[esi]
  40418b:	test   eax,0x5b006dc4
  404190:	add    esp,DWORD PTR [ecx-0x3d]
  404193:	and    ebp,ebx
  404195:	mov    bh,0xe1
  404197:	xor    eax,0x1fc693b
  40419c:	cmp    ecx,DWORD PTR [ebp+0x48427aa4]
  4041a2:	ds and eax,0x8d0ab7a3
  4041a8:	jmp    0xbc5d72b9
  4041ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041ae:	outs   dx,BYTE PTR ds:[esi]
  4041af:	inc    esi
  4041b0:	jb     0x4041f5
  4041b2:	ret    0x61a6
  4041b5:	and    BYTE PTR [ecx+0x34],dl
  4041b8:	xchg   ebp,eax
  4041b9:	lea    esp,ds:0x8686a0f8
  4041bf:	push   edx
  4041c0:	add    ebx,ebx
  4041c2:	sar    ah,cl
  4041c4:	adc    ecx,esp
  4041c6:	shr    ah,cl
  4041c8:	adc    DWORD PTR [ebx-0x7e],0xffffffc1
  4041cc:	xchg   esi,eax
  4041cd:	and    eax,0x61d719d8
  4041d2:	mov    bh,0xca
  4041d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041d5:	xor    DWORD PTR [eax-0xe],ebp
  4041d8:	jp     0x404229
  4041da:	sbb    DWORD PTR [eax],ecx
  4041dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041dd:	dec    ebp
  4041de:	add    al,0x9b
  4041e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041e1:	aad    0x80
  4041e3:	shr    BYTE PTR [eax+0x12cf3163],0xd7
  4041ea:	jle    0x4041fa
  4041ec:	gs aas 
  4041ee:	into   
  4041ef:	add    bl,BYTE PTR [ecx-0x4619162d]
  4041f5:	lods   eax,DWORD PTR ds:[esi]
  4041f6:	cmp    al,0x67
  4041f8:	pop    edi
  4041f9:	pop    ebx
  4041fa:	dec    ebx
  4041fb:	fisttp QWORD PTR [esi+0x5126aa80]
  404201:	ret    
  404202:	sub    ecx,DWORD PTR [edi+edi*4]
  404205:	push   ecx
  404206:	outs   dx,BYTE PTR ds:[esi]
  404207:	push   eax
  404208:	mov    BYTE PTR [eax+eax*2],ch
  40420b:	add    eax,0x660be082
  404210:	nop
  404211:	mov    al,ds:0xcd2b900e
  404216:	mov    ds:0x83f8739b,eax
  40421b:	sar    DWORD PTR ss:[edx],0xef
  40421f:	test   al,0x5b
  404221:	inc    ecx
  404222:	pop    ss
  404223:	mov    ebx,0x20fe2281
  404228:	pop    esp
  404229:	jecxz  0x404277
  40422b:	add    eax,0x436d684
  404230:	std    
  404231:	push   cs
  404232:	lock addr16 and dh,bh
  404236:	daa    
  404237:	popf   
  404238:	lock and al,0x7f
  40423b:	pop    edi
  40423c:	jnp    0x40427a
  40423e:	test   al,0xb6
  404240:	xlat   BYTE PTR ds:[ebx]
  404241:	adc    al,0xcc
  404243:	mov    edx,0xc9f83751
  404248:	imul   esi,DWORD PTR [ebx+edi*1+0x31],0xffffffd6
  40424d:	pop    ebx
  40424e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40424f:	les    esp,FWORD PTR [edi+0x3a]
  404252:	pop    ss
  404253:	dec    ecx
  404254:	cli    
  404255:	int3   
  404256:	retf   0x28e4
  404259:	mov    edi,ss
  40425b:	out    dx,eax
  40425c:	mov    bh,0xa7
  40425e:	sti    
  40425f:	mov    cl,0x99
  404261:	jmp    0x4041f3
  404263:	stc    
  404264:	cmp    BYTE PTR [edi+0x7c],cl
  404267:	jecxz  0x4042b2
  404269:	or     dl,BYTE PTR [ebp-0x32b9196]
  40426f:	pop    ecx
  404270:	mov    cl,0x91
  404272:	aaa    
  404273:	mov    DWORD PTR [eax+0x24a20e3],esi
  404279:	sub    al,0x5d
  40427b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40427c:	jecxz  0x4042cb
  40427e:	dec    ebx
  40427f:	(bad)  
  404281:	pop    ebp
  404282:	icebp  
  404283:	repnz push es
  404285:	icebp  
  404286:	mov    dh,0x84
  404288:	stos   DWORD PTR es:[edi],eax
  404289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40428a:	add    DWORD PTR [ebp-0x6bb8150c],edi
  404290:	(bad)  
  404291:	repz fnsave [ebp-0xe]
  404295:	lock xchg ebx,eax
  404297:	pop    ds
  404298:	cmp    ebx,esi
  40429a:	cmp    eax,0x455890bd
  40429f:	cdq    
  4042a0:	stos   BYTE PTR es:[edi],al
  4042a1:	and    al,dl
  4042a3:	pop    ebx
  4042a4:	xor    al,0x99
  4042a6:	jmp    0x71d3:0x6860b1c3
  4042ad:	adc    BYTE PTR [edx+0x7],bl
  4042b0:	jmp    0x404324
  4042b2:	push   ebp
  4042b3:	jmp    0xac9e:0x752f318f
  4042ba:	pop    edx
  4042bb:	test   eax,0x17657138
  4042c0:	(bad)  
  4042c1:	sti    
  4042c2:	stos   DWORD PTR es:[edi],eax
  4042c3:	adc    eax,0x5423cb67
  4042c8:	fcmovnu st,st(4)
  4042ca:	mov    edi,0x9ecd9314
  4042cf:	and    bl,al
  4042d1:	call   0xfa624ad8
  4042d6:	push   eax
  4042d7:	push   eax
  4042d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042d9:	int    0xba
  4042db:	sbb    DWORD PTR [ecx+0x51f62712],esi
  4042e1:	xchg   ecx,eax
  4042e2:	mov    eax,0x2a033963
  4042e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042e8:	jae    0x40431a
  4042ea:	xchg   DWORD PTR [edi-0x15532764],ebx
  4042f0:	bound  ecx,QWORD PTR [esi-0x43]
  4042f3:	xor    ch,0xa8
  4042f6:	mov    al,al
  4042f8:	dec    esp
  4042f9:	in     eax,dx
  4042fa:	int3   
  4042fb:	int    0x45
  4042fd:	inc    ebx
  4042fe:	enter  0xf355,0xff
  404302:	jge    0x404323
  404304:	dec    eax
  404305:	push   ebp
  404306:	mov    eax,0x529be10a
  40430b:	cmp    DWORD PTR [ecx-0x3],0x7c
  40430f:	push   0x2afd1e4e
  404314:	xor    eax,0xee16ccf1
  404319:	sbb    BYTE PTR [ebp+edi*4-0x40],0x5e
  40431e:	xchg   edi,eax
  40431f:	shl    DWORD PTR [edi+0x30ae6222],1
  404325:	add    eax,0x80fea634
  40432a:	loope  0x4042f8
  40432c:	pop    esi
  40432d:	jg     0x404398
  40432f:	sbb    BYTE PTR [ebx-0x59],0xb5
  404333:	jl     0x404374
  404335:	inc    edi
  404336:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404337:	cmp    eax,0xfb00e961
  40433c:	jae    0x404377
  40433e:	mov    al,ds:0x6fc9682a
  404343:	sti    
  404344:	loopne 0x404385
  404346:	test   BYTE PTR [ebp+0x42c7e724],0x45
  40434d:	retf   0xcf1
  404350:	pop    edx
  404351:	pop    edi
  404352:	mov    cl,BYTE PTR [eax+0x795b0750]
  404358:	mov    eax,gs:0xb0063abd
  40435e:	jl     0x4043bb
  404360:	jb     0x404340
  404362:	cmp    bh,BYTE PTR [esi-0x7b]
  404365:	fbld   TBYTE PTR [ecx+0x78fe1bc]
  40436b:	adc    DWORD PTR [ebx],edx
  40436d:	ret    0xc30a
  404370:	in     eax,0x12
  404372:	in     al,dx
  404373:	pop    ebp
  404374:	mov    edi,DWORD PTR [esi-0x3]
  404377:	push   0xffffffea
  404379:	clc    
  40437a:	mov    esp,0xae84dd48
  40437f:	ficom  DWORD PTR [esi+0x2c9a46fe]
  404385:	(bad)  
  404387:	sbb    ch,BYTE PTR [edx-0x42]
  40438a:	and    BYTE PTR [ebx-0x57fbe946],ah
  404390:	sti    
  404391:	mov    dh,0x76
  404393:	gs stos BYTE PTR es:[edi],al
  404395:	add    ecx,0x2cf1418a
  40439b:	ficomp WORD PTR [esi]
  40439d:	cli    
  40439e:	push   edi
  40439f:	mov    cl,0x37
  4043a1:	mov    ebp,0xf9974b60
  4043a6:	pop    ebp
  4043a7:	clc    
  4043a8:	cmp    DWORD PTR [edx+0x19],eax
  4043ab:	sbb    edx,esp
  4043ad:	xor    eax,0x60b512fb
  4043b2:	adc    al,0x46
  4043b4:	push   ds
  4043b5:	je     0x4043f0
  4043b7:	ins    DWORD PTR es:[edi],dx
  4043b8:	or     eax,0x7416c971
  4043bd:	jb     0x40437e
  4043bf:	pop    ds
  4043c0:	push   ss
  4043c1:	add    eax,ebp
  4043c3:	xor    ah,BYTE PTR [ecx+0x2088d9]
  4043c9:	addr16 ss push esi
  4043cc:	mov    bl,0x36
  4043ce:	sbb    bh,BYTE PTR [eax-0x74]
  4043d1:	in     al,dx
  4043d2:	push   esi
  4043d3:	inc    esi
  4043d4:	out    dx,al
  4043d5:	out    0x2c,al
  4043d7:	es push ss
  4043d9:	pop    eax
  4043da:	test   BYTE PTR [esi],dl
  4043dc:	xor    ebx,DWORD PTR [ebp-0x1782ffac]
  4043e2:	xor    dh,BYTE PTR [edx-0x59]
  4043e5:	loope  0x40436d
  4043e7:	inc    eax
  4043e8:	jp     0x40445e
  4043ea:	stos   BYTE PTR es:[edi],al
  4043eb:	push   ebx
  4043ec:	dec    esp
  4043ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043ee:	sbb    al,0xe6
  4043f0:	test   eax,0x149b47fb
  4043f5:	sub    al,BYTE PTR [esi+0x33cff89f]
  4043fb:	fbstp  TBYTE PTR [ebx-0x6b]
  4043fe:	jnp    0x4043b6
  404400:	shr    DWORD PTR [ecx],0x33
  404403:	pop    ebp
  404404:	shr    BYTE PTR [ecx],1
  404406:	add    dl,dh
  404408:	xor    eax,0x264b3555
  40440d:	outs   dx,DWORD PTR ds:[esi]
  40440e:	lods   eax,DWORD PTR ds:[si]
  404410:	adc    eax,0x18c36056
  404415:	add    BYTE PTR [eiz*1+0x1ce97586],cl
  40441c:	xor    al,0x79
  40441e:	ror    al,0xb8
  404421:	push   ebx
  404422:	xchg   edx,eax
  404423:	mov    cl,BYTE PTR ds:[ecx-0x56ace59d]
  40442a:	mov    ds:0xbb238524,al
  40442f:	jle    0x40448b
  404431:	out    0x88,al
  404433:	xor    eax,0x89d56319
  404438:	mov    ch,0x37
  40443a:	repz clc 
  40443c:	push   edx
  40443d:	xor    al,dh
  40443f:	int    0x40
  404441:	xor    eax,0x6475b150
  404446:	shr    BYTE PTR [ebx-0x72],0xa
  40444a:	call   0x4584b534
  40444f:	mov    dl,0xb
  404451:	pop    ebp
  404452:	mov    ecx,esp
  404454:	or     eax,0x34fc665e
  404459:	scas   al,BYTE PTR es:[edi]
  40445a:	jmp    0x6fe80021
  40445f:	shl    ah,0x8
  404462:	dec    esi
  404463:	dec    esi
  404464:	iret   
  404465:	fmul   QWORD PTR [esi]
  404467:	and    al,0xe2
  404469:	add    BYTE PTR [ebx-0x2e],bh
  40446c:	xchg   ebx,eax
  40446d:	in     al,0x0
  40446f:	jg     0x4044a3
  404471:	data16 (bad) [esi-0x19a27c05]
  404478:	scas   al,BYTE PTR es:[edi]
  404479:	pusha  
  40447a:	add    WORD PTR ds:0xb6da1e10,0x38
  404482:	xchg   esi,eax
  404483:	loop   0x404481
  404485:	mov    esi,0x1cfee6c1
  40448a:	xor    BYTE PTR [esi+ebp*4+0x6a1d9ea9],al
  404491:	cmp    BYTE PTR gs:[bx+0x20],0x41
  404497:	and    ecx,DWORD PTR [ecx-0x62eb4171]
  40449d:	cdq    
  40449e:	push   esi
  40449f:	mov    eax,0x3868dd8c
  4044a4:	arpl   dx,sp
  4044a6:	mov    ds:0x1e5333cf,al
  4044ab:	repz add edi,ebx
  4044ae:	jno    0x40446f
  4044b0:	xchg   ecx,eax
  4044b1:	rcl    bl,1
  4044b3:	in     al,0x1e
  4044b5:	stc    
  4044b6:	mov    cl,0x2b
  4044b8:	aas    
  4044b9:	das    
  4044ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044bb:	xchg   ecx,eax
  4044bc:	xor    DWORD PTR [edi],eax
  4044be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044bf:	inc    eax
  4044c0:	jmp    0x404510
  4044c2:	int3   
  4044c3:	pop    eax
  4044c4:	fst    st(6)
  4044c6:	lahf   
  4044c7:	dec    ecx
  4044c8:	fcmovne st,st(4)
  4044ca:	dec    ebx
  4044cb:	pop    esp
  4044cc:	mov    ebx,0x4b2a9c4
  4044d1:	jg     0x40449b
  4044d3:	cmp    eax,0x46bc158a
  4044d8:	in     al,0x9a
  4044da:	hlt    
  4044db:	out    dx,al
  4044dc:	adc    esi,DWORD PTR [eax]
  4044de:	call   0x8b3d39e9
  4044e3:	dec    edi
  4044e4:	int    0x38
  4044e6:	inc    edi
  4044e7:	ins    BYTE PTR es:[edi],dx
  4044e8:	sbb    BYTE PTR [ecx],bl
  4044ea:	leave  
  4044eb:	jecxz  0x404546
  4044ed:	push   0x60fbe671
  4044f2:	out    dx,eax
  4044f3:	(bad)  
  4044f4:	enter  0x73e8,0x9f
  4044f8:	inc    esi
  4044f9:	loop   0x4044b9
  4044fb:	mov    dh,0xc7
  4044fd:	gs stos DWORD PTR es:[edi],eax
  4044ff:	jl     0x4044b5
  404501:	jbe    0x404495
  404503:	xchg   edi,eax
  404504:	out    0x60,al
  404506:	pop    esi
  404507:	stc    
  404508:	lods   eax,DWORD PTR ds:[esi]
  404509:	test   DWORD PTR [ebx-0x2294da9],edi
  40450f:	neg    DWORD PTR [esi+ebx*4]
  404512:	cmp    BYTE PTR [edi],bh
  404514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404515:	pop    eax
  404516:	pop    ecx
  404517:	and    ebp,DWORD PTR [ecx-0x531ae0e5]
  40451d:	(bad)  [eax-0x1db567f1]
  404523:	pop    edi
  404524:	push   edx
  404525:	xchg   esp,eax
  404526:	push   0xffffffd0
  404528:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404529:	outs   dx,DWORD PTR ds:[esi]
  40452a:	sub    DWORD PTR [edx-0x20e089f8],eax
  404530:	retf   0x69b1
  404533:	enter  0x4fbc,0x90
  404537:	and    eax,0x33cc1e5e
  40453c:	sub    eax,0xc246165a
  404541:	shl    DWORD PTR [ecx],0xfe
  404544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404545:	xlat   BYTE PTR ds:[ebx]
  404546:	into   
  404547:	xchg   edi,edx
  404549:	jmp    0x4044e7
  40454b:	sub    DWORD PTR [ebx],ebp
  40454d:	mov    ebx,0x472b362a
  404552:	sub    ch,BYTE PTR [ebx-0x2fe10cdd]
  404558:	pop    esi
  404559:	pop    ecx
  40455a:	xchg   edi,eax
  40455b:	mov    esi,0x56a26ffb
  404560:	mov    cl,0x9e
  404562:	pop    ebp
  404563:	add    dh,BYTE PTR [esi+eax*1+0x63]
  404567:	out    0x59,al
  404569:	inc    ebp
  40456a:	mov    dl,BYTE PTR [esi+0x774f3467]
  404570:	out    dx,eax
  404571:	test   al,0x2b
  404573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404574:	mov    ah,0xb
  404576:	std    
  404577:	aas    
  404578:	outs   dx,DWORD PTR ds:[esi]
  404579:	fmul   QWORD PTR [edx+0x1d0e6f94]
  40457f:	xlat   BYTE PTR ds:[ebx]
  404580:	and    BYTE PTR gs:[edi+0x2e],dl
  404584:	or     edx,DWORD PTR [edi*8+0x27542f58]
  40458b:	pop    ecx
  40458c:	xchg   ebp,eax
  40458d:	cmp    DWORD PTR [esi-0x12],ebx
  404590:	jg     0x404587
  404592:	(bad)  
  404593:	fwait
  404594:	push   edx
  404595:	mov    bh,0x6b
  404597:	in     al,dx
  404598:	jb     0x4045a2
  40459a:	in     al,dx
  40459b:	adc    al,0xb9
  40459d:	ret    
  40459e:	jbe    0x404586
  4045a0:	xor    ebp,esp
  4045a2:	sbb    BYTE PTR [eax+0x3dc7abc2],0xac
  4045a9:	test   DWORD PTR [ecx-0x5b],ebx
  4045ac:	push   cs
  4045ad:	leave  
  4045ae:	jmp    0xcbe1:0x1154315d
  4045b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045b6:	hlt    
  4045b7:	xor    ah,dl
  4045b9:	dec    ebx
  4045ba:	sub    DWORD PTR cs:[ebp+0x31],eax
  4045be:	adc    bh,bl
  4045c0:	push   ebp
  4045c1:	add    ch,dl
  4045c3:	and    BYTE PTR [ecx+0x6c],al
  4045c6:	xlat   BYTE PTR ds:[ebx]
  4045c7:	xchg   BYTE PTR [esi],bh
  4045c9:	cs js  0x404575
  4045cc:	xor    DWORD PTR [edx+0x1c2c3fab],esp
  4045d2:	cmp    al,0xdd
  4045d4:	stos   DWORD PTR es:[edi],eax
  4045d5:	inc    eax
  4045d6:	into   
  4045d7:	sbb    edi,eax
  4045d9:	mov    ah,0x1d
  4045db:	adc    eax,0x69376266
  4045e0:	in     eax,dx
  4045e1:	pop    ebp
  4045e2:	leave  
  4045e3:	gs aas 
  4045e5:	mov    cs,WORD PTR [ebx-0x5a]
  4045e8:	jns    0x404580
  4045ea:	sbb    BYTE PTR es:[ebx+0x4bb57e3d],bh
  4045f1:	dec    ebx
  4045f2:	push   esp
  4045f3:	or     eax,edx
  4045f5:	sub    eax,0x235d5ebe
  4045fa:	rcr    BYTE PTR [eax+0x45],0x18
  4045fe:	fcom   QWORD PTR [edi-0x3a39f91c]
  404604:	leave  
  404605:	fnstenv [esi]
  404607:	push   esp
  404608:	push   ss
  404609:	push   cs
  40460a:	mov    eax,0xca790708
  40460f:	sbb    dh,BYTE PTR [eax]
  404611:	xchg   BYTE PTR [edi],cl
  404613:	into   
  404614:	inc    ebx
  404615:	and    al,0xe5
  404617:	cmp    DWORD PTR [esi+0x3c9c9fe0],esi
  40461d:	or     eax,0x3b6d8759
  404622:	adc    BYTE PTR [eax-0x1011ae31],ah
  404628:	push   ebp
  404629:	pop    ds
  40462a:	push   esi
  40462b:	xchg   edi,eax
  40462c:	push   0xffffffe2
  40462e:	aam    0xa0
  404630:	inc    esi
  404631:	push   es
  404632:	sub    DWORD PTR [esi+0x479bb4b3],edi
  404638:	xlat   BYTE PTR ds:[ebx]
  404639:	call   FWORD PTR [ecx]
  40463b:	cmc    
  40463c:	fisttp QWORD PTR [esi]
  40463e:	push   ds
  40463f:	mov    esi,0xf5424908
  404644:	fcmovnu st,st(7)
  404646:	pop    eax
  404647:	jecxz  0x4045fd
  404649:	popf   
  40464a:	adc    DWORD PTR [eax],eax
  40464c:	icebp  
  40464d:	mov    bl,bh
  40464f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404650:	and    BYTE PTR [edi],ch
  404652:	cmp    DWORD PTR [edi-0x2f],esi
  404655:	lock xor al,0x25
  404658:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404659:	retf   
  40465a:	test   al,bl
  40465c:	jl     0x40466a
  40465e:	sub    DWORD PTR [eax],ebp
  404660:	es retf 0x2dc4
  404664:	and    al,0xc8
  404666:	adc    al,0x8f
  404668:	sar    BYTE PTR [ecx-0x3f],cl
  40466b:	or     ebp,esp
  40466d:	jb     0x4045fe
  40466f:	jle    0x4045f8
  404671:	inc    edx
  404672:	test   al,0xf
  404674:	test   DWORD PTR [esi-0x65],ecx
  404677:	into   
  404678:	mov    eax,ds:0x65743fc2
  40467d:	jp     0x4046fb
  40467f:	jae    0x404687
  404681:	dec    eax
  404682:	pusha  
  404683:	fs inc eax
  404685:	iret   
  404686:	fimul  WORD PTR [edx+0x242f32af]
  40468c:	inc    edx
  40468d:	mov    ebp,0x30903700
  404692:	add    BYTE PTR [ebx],bh
  404694:	bound  edi,QWORD PTR [edi+ebp*4]
  404697:	push   es
  404698:	repnz div DWORD PTR [eax-0x66]
  40469c:	xchg   ebx,eax
  40469d:	mov    ds:0x1111f71c,al
  4046a2:	jle    0x404653
  4046a4:	jnp    0x4046cc
  4046a6:	jne    0x40467f
  4046a8:	xor    al,0x79
  4046aa:	or     DWORD PTR [ebx+0x3c],esi
  4046ad:	popa   
  4046ae:	out    dx,eax
  4046af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046b0:	retf   0xfa5
  4046b3:	push   es
  4046b4:	inc    ebx
  4046b5:	fistp  DWORD PTR [eax+0x70584cd3]
  4046bb:	pop    ds
  4046bc:	ret    0xab5e
  4046bf:	jae    0x40469b
  4046c1:	lods   al,BYTE PTR ds:[esi]
  4046c2:	nop
  4046c3:	fwait
  4046c4:	ins    BYTE PTR es:[edi],dx
  4046c5:	push   0x33d55d8d
  4046ca:	sti    
  4046cb:	jbe    0x4046d2
  4046cd:	or     bh,BYTE PTR [edx+0x6469836a]
  4046d3:	cmp    ah,dl
  4046d5:	les    ebx,FWORD PTR [ecx]
  4046d7:	out    dx,eax
  4046d8:	int    0xd9
  4046da:	sub    BYTE PTR [edx+0x17],dl
  4046dd:	xchg   esi,eax
  4046de:	not    BYTE PTR [ebx]
  4046e0:	jbe    0x40471c
  4046e2:	adc    DWORD PTR [edx-0x7],0x2c
  4046e6:	jecxz  0x40473c
  4046e8:	add    BYTE PTR [eax-0x69692713],ch
  4046ee:	adc    eax,0xf43581ec
  4046f3:	enter  0x716a,0x3b
  4046f7:	inc    esi
  4046f8:	mov    ch,0xe4
  4046fa:	ja     0x40473d
  4046fc:	data16 add cl,al
  4046ff:	sbb    ecx,ebp
  404701:	add    ah,BYTE PTR [esi]
  404703:	aaa    
  404704:	clc    
  404705:	popf   
  404706:	aas    
  404707:	rcl    DWORD PTR [edi],0xb7
  40470a:	in     eax,0x72
  40470c:	dec    edi
  40470d:	shl    BYTE PTR [ebp-0x26],cl
  404710:	aas    
  404711:	jle    0x4046e9
  404713:	xchg   BYTE PTR [esp+esi*8-0x5816d830],al
  40471a:	push   0xd1e1d23d
  40471f:	xchg   ebp,eax
  404720:	jge    0x40475d
  404722:	outs   dx,BYTE PTR ds:[esi]
  404723:	mov    eax,0xa7a963d
  404728:	add    eax,0x5b7bf32e
  40472d:	inc    ecx
  40472e:	dec    ebx
  40472f:	out    dx,al
  404730:	ret    0x678
  404733:	inc    ecx
  404734:	xchg   ebx,eax
  404735:	pop    ebx
  404736:	pop    ds
  404737:	gs pop esi
  404739:	rcl    BYTE PTR [ecx],cl
  40473b:	push   edi
  40473c:	aaa    
  40473d:	cmp    edi,DWORD PTR [eax+0x4c3dcbd1]
  404743:	jg     0x404728
  404745:	add    ah,BYTE PTR [eax]
  404747:	inc    ecx
  404748:	inc    esi
  404749:	jnp    0x4047b2
  40474b:	lds    ebx,FWORD PTR [edi+0x1f]
  40474e:	mov    ah,0x2d
  404750:	loop   0x4046ee
  404752:	cmp    BYTE PTR [eax],bh
  404754:	leave  
  404755:	je     0x4047be
  404757:	jnp    0x40478b
  404759:	aaa    
  40475a:	cmp    DWORD PTR [esi-0x1695b815],edi
  404760:	adc    edi,DWORD PTR [eax]
  404762:	push   es
  404763:	dec    ebx
  404764:	test   BYTE PTR [ecx],dh
  404766:	sub    al,0xbe
  404768:	mov    bl,0x8e
  40476a:	jmp    0x2812fb35
  40476f:	push   0xffffffce
  404771:	xlat   BYTE PTR ds:[ebx]
  404772:	inc    eax
  404773:	xlat   BYTE PTR ds:[ebx]
  404774:	jg     0x404763
  404776:	cwde   
  404777:	shr    BYTE PTR [esi+0x64],0x61
  40477b:	jecxz  0x404702
  40477d:	jb     0x404734
  40477f:	and    edx,DWORD PTR [ebp+0x15]
  404782:	call   0x4b505d3b
  404787:	add    eax,0xa0e06969
  40478c:	pushf  
  40478d:	add    al,0x6d
  40478f:	and    al,0xb3
  404791:	fstp   DWORD PTR [edx+0x73a14e5]
  404797:	out    dx,eax
  404798:	pop    ebp
  404799:	mov    al,0xe4
  40479b:	ror    BYTE PTR [edx+0x34],0x9a
  40479f:	and    eax,0xbfb4bc75
  4047a4:	or     ebp,ebp
  4047a6:	jae    0xae0485ad
  4047ac:	inc    ebx
  4047ad:	mov    esp,0x426f0328
  4047b2:	sub    eax,0xfe3a6f95
  4047b7:	ins    BYTE PTR es:[edi],dx
  4047b8:	sbb    al,0x7e
  4047ba:	shl    DWORD PTR [ecx+0x6f],cl
  4047bd:	les    edi,FWORD PTR [ebx+esi*4+0x71]
  4047c1:	cmp    edi,0xffffffa8
  4047c4:	lds    eax,FWORD PTR [ebx]
  4047c6:	mov    ebp,DWORD PTR [eax+0x319e72c3]
  4047cc:	sbb    dh,ah
  4047ce:	xchg   ecx,eax
  4047cf:	dec    esi
  4047d0:	mov    al,ds:0xe15b29d6
  4047d5:	aas    
  4047d6:	mov    ebp,0xc8050fa2
  4047db:	sub    dl,BYTE PTR [eax+0x1c]
  4047de:	test   DWORD PTR [edx],0x971e152
  4047e4:	adc    DWORD PTR [ebp-0x1],esp
  4047e7:	jno    0x4047f0
  4047e9:	push   ebx
  4047ea:	bound  edi,QWORD PTR [ebx+0x30195072]
  4047f0:	sub    eax,0x22750734
  4047f5:	xor    ebp,DWORD PTR [edx-0x3e9faf17]
  4047fb:	pop    esp
  4047fc:	shl    BYTE PTR [eax-0x1],cl
  4047ff:	and    al,0xa2
  404801:	sub    BYTE PTR [esi+0xa],dl
  404804:	in     eax,dx
  404805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404806:	xor    DWORD PTR [edx+0x3b],edx
  404809:	push   0xbec32ce8
  40480e:	repnz inc edi
  404810:	xchg   edi,eax
  404811:	mov    edi,0x28a0cce
  404816:	cmovs  ebp,DWORD PTR [ecx]
  404819:	xchg   si,ax
  40481b:	mov    cl,0xff
  40481d:	or     bl,dh
  40481f:	daa    
  404820:	dec    ebx
  404821:	mov    ?,WORD PTR ds:0xceee8d7e
  404827:	outs   dx,BYTE PTR ds:[esi]
  404828:	add    DWORD PTR [ecx+0x1],edx
  40482b:	mov    bl,0xb
  40482d:	iret   
  40482e:	push   edx
  40482f:	or     edi,DWORD PTR [ebp+0x32a3f560]
  404835:	retf   
  404836:	sbb    esp,ebp
  404838:	or     DWORD PTR [esp+edx*4],0xf08725a
  40483f:	push   0x6b04dd85
  404844:	fsubrp st(0),st
  404846:	test   DWORD PTR [eax+esi*1+0x324145c2],ebp
  40484d:	mov    ch,0x8f
  40484f:	pop    ebp
  404851:	mov    bl,0x4d
  404853:	imul   edi,DWORD PTR [ebp-0x5a],0xc9975064
  40485a:	ins    DWORD PTR es:[edi],dx
  40485b:	mov    eax,0x9fffde99
  404860:	fsubr  DWORD PTR [ebx]
  404862:	popa   
  404863:	sbb    dh,BYTE PTR [ebp-0x3d1613a4]
  404869:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40486a:	stc    
  40486b:	dec    esp
  40486c:	scas   al,BYTE PTR es:[edi]
  40486d:	aad    0x43
  40486f:	mov    ah,0xa
  404871:	or     al,0xec
  404873:	fsub   QWORD PTR [edx]
  404875:	fnsave [ebx+0x7]
  404878:	jle    0x4048bb
  40487a:	retf   
  40487b:	dec    edx
  40487c:	(bad)  
  40487d:	mov    edi,0xd871ec85
  404882:	in     eax,0x8b
  404884:	fwait
  404885:	in     eax,dx
  404886:	add    al,0xb5
  404888:	aam    0x8b
  40488a:	ins    BYTE PTR es:[edi],dx
  40488b:	jae    0x404908
  40488d:	xchg   edx,eax
  40488e:	loope  0x4048f5
  404890:	dec    eax
  404891:	mov    esi,0x893241b8
  404896:	jg     0x404903
  404898:	cld    
  404899:	ficomp DWORD PTR [ebp+0x3a957ef5]
  40489f:	les    eax,FWORD PTR [ebp-0x61c0a2c8]
  4048a5:	cmp    dl,bl
  4048a7:	arpl   WORD PTR ds:0x952f7239,di
  4048ad:	jb     0x404909
  4048af:	ins    BYTE PTR es:[edi],dx
  4048b0:	pusha  
  4048b1:	mov    ds:0xa8511853,eax
  4048b6:	and    eax,0x2856e5d5
  4048bb:	push   ebp
  4048bc:	xor    DWORD PTR [edi],eax
  4048be:	jb     0x404869
  4048c0:	fdecstp 
  4048c2:	mov    dl,0x15
  4048c4:	scas   al,BYTE PTR es:[edi]
  4048c5:	jmp    0xdd93b20e
  4048ca:	cmp    BYTE PTR [ebp-0x1d5e97ca],ah
  4048d0:	and    eax,0x78089c55
  4048d5:	mov    bl,bl
  4048d7:	dec    esp
  4048d8:	call   DWORD PTR [ebx+0x786cc67]
  4048de:	adc    eax,0x1bd782b8
  4048e3:	or     eax,0xc5260b00
  4048e8:	out    dx,eax
  4048e9:	dec    ebx
  4048ea:	std    
  4048eb:	std    
  4048ec:	mov    WORD PTR [edx],gs
  4048ee:	mov    eax,ds:0x67efb0b0
  4048f3:	retf   
  4048f4:	add    eax,0x4073c7e7
  4048f9:	sbb    al,BYTE PTR [eax]
  4048fb:	push   0xffffff9b
  4048fd:	pop    esp
  4048fe:	push   0xffffff9b
  404900:	dec    eax
  404901:	cmp    al,0xc5
  404903:	aas    
  404904:	xlat   BYTE PTR ds:[ebx]
  404905:	sub    al,0x63
  404907:	adc    eax,0x43a7dca3
  40490c:	fidivr WORD PTR [esi+0x28744492]
  404912:	add    eax,0x1409625a
  404917:	xor    al,0x46
  404919:	fld    DWORD PTR [edx+0x42]
  40491c:	pop    ebp
  40491d:	rol    al,1
  40491f:	scas   eax,DWORD PTR es:[edi]
  404920:	mul    BYTE PTR [eax-0x34]
  404923:	add    eax,0xc5b7e9c4
  404928:	stos   DWORD PTR es:[edi],eax
  404929:	push   eax
  40492a:	stos   DWORD PTR es:[edi],eax
  40492b:	mov    al,ds:0x1931acea
  404930:	or     al,0xee
  404932:	nop
  404933:	retf   0xc90e
  404936:	mov    ebx,DWORD PTR [esi+0x161921c1]
  40493c:	ss out 0xe9,al
  40493f:	mov    al,BYTE PTR [edx+0x2077d724]
  404945:	cmp    eax,DWORD PTR [ebp-0x55]
  404948:	push   edx
  404949:	jne    0x404929
  40494b:	aaa    
  40494c:	(bad)  
  40494d:	cld    
  40494e:	push   edx
  40494f:	mov    DWORD PTR [ecx-0x4b],eax
  404952:	pusha  
  404953:	mov    ebx,0x594c1b79
  404958:	jns    0x404985
  40495a:	outs   dx,DWORD PTR ds:[esi]
  40495b:	retf   
  40495c:	cmp    DWORD PTR [esi+0xc],ebp
  40495f:	imul   ebx,DWORD PTR [edx+0x6f],0x5db17d6b
  404966:	push   0x55
  404968:	shr    DWORD PTR [esi+0x25],0xab
  40496c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40496d:	dec    ecx
  40496e:	fbstp  TBYTE PTR [esi+0x40ad8c82]
  404974:	mov    ebx,0x65803a77
  404979:	int3   
  40497a:	aas    
  40497b:	add    al,0xf8
  40497d:	xor    esi,DWORD PTR [eax-0x65a677ab]
  404983:	lahf   
  404984:	mov    DWORD PTR [esi+eax*1],edx
  404987:	jno    0x404a05
  404989:	ret    0x4fde
  40498c:	jmp    0x404995
  40498e:	pop    eax
  40498f:	popf   
  404990:	stos   BYTE PTR es:[edi],al
  404991:	sbb    BYTE PTR [ebx+0x40],bh
  404994:	scas   al,BYTE PTR es:[edi]
  404995:	fs push ebp
  404997:	inc    edx
  404998:	das    
  404999:	add    al,0xe0
  40499b:	inc    eax
  40499c:	outs   dx,DWORD PTR ds:[esi]
  40499d:	jmp    0x4049b3
  40499f:	js     0x4049ad
  4049a1:	iret   
  4049a2:	xchg   ecx,eax
  4049a3:	sbb    BYTE PTR [ebp-0x4],bh
  4049a6:	xchg   esi,eax
  4049a7:	dec    eax
  4049a8:	adc    edx,DWORD PTR [ecx]
  4049aa:	not    DWORD PTR ds:0xbc9649a0
  4049b0:	mov    dh,0x80
  4049b2:	add    al,0x76
  4049b4:	pop    edi
  4049b5:	ds (bad) 
  4049b7:	push   ebx
  4049b8:	imul   esi,DWORD PTR [esi-0x451a698e],0xf2644a99
  4049c2:	cli    
  4049c3:	test   al,0xae
  4049c5:	push   ss
  4049c6:	mov    dl,0x7f
  4049c8:	(bad)  
  4049c9:	repz loope 0x4049e2
  4049cc:	ins    BYTE PTR es:[edi],dx
  4049cd:	js     0x4049e7
  4049cf:	adc    eax,0xeb4778e
  4049d4:	sti    
  4049d5:	xor    BYTE PTR [ebp-0x42],ah
  4049d8:	ror    DWORD PTR [ebx+0x68],0x4e
  4049dc:	jne    0x404a06
  4049de:	icebp  
  4049df:	mov    eax,ds:0x10d06888
  4049e4:	shl    bl,0x7
  4049e7:	jmp    0x40498f
  4049e9:	pop    ebp
  4049ea:	(bad)  [edi]
  4049ec:	pushf  
  4049ed:	pop    edi
  4049ee:	test   eax,0x81c98ac1
  4049f3:	or     bh,BYTE PTR [eax]
  4049f5:	push   ecx
  4049f6:	clc    
  4049f7:	push   eax
  4049f8:	inc    ebp
  4049f9:	(bad)  
  4049fa:	mov    edx,esi
  4049fc:	adc    DWORD PTR [esi-0x80],edx
  4049ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a00:	sub    al,0x3b
  404a02:	add    ecx,edi
  404a04:	lds    edi,FWORD PTR [edi+0x43]
  404a07:	push   eax
  404a08:	inc    esi
  404a09:	or     ebx,DWORD PTR [eax]
  404a0b:	mov    ds:0xb24baa9e,al
  404a10:	stc    
  404a11:	ret    
  404a12:	dec    edi
  404a13:	sbb    BYTE PTR [edx-0x7a],dl
  404a16:	pushf  
  404a17:	pop    ecx
  404a18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a19:	adc    dh,BYTE PTR [edi+0x28]
  404a1c:	rcl    edi,1
  404a1e:	mov    edi,0xbf5a0c60
  404a23:	lahf   
  404a24:	loopne 0x404a24
  404a26:	dec    ecx
  404a27:	add    dh,BYTE PTR [esi-0x5d7717c4]
  404a2d:	mov    DWORD PTR [ebp-0x4dab7719],edx
  404a33:	lahf   
  404a34:	call   0xab90:0x1b86c2d8
  404a3b:	pushf  
  404a3c:	push   esp
  404a3d:	dec    edi
  404a3e:	xchg   esp,eax
  404a3f:	xchg   ecx,eax
  404a40:	(bad)  
  404a41:	fcomip st,st(6)
  404a43:	mov    eax,DWORD PTR [ebp-0x3a]
  404a46:	clc    
  404a47:	lods   eax,DWORD PTR ds:[esi]
  404a48:	fwait
  404a49:	jo     0x404a88
  404a4b:	pushf  
  404a4c:	mov    esi,0xc3114baa
  404a51:	jb     0x404a29
  404a53:	(bad)  
  404a54:	mov    ebp,0x6c58332f
  404a59:	jmp    0xbdc5:0x171a72d3
  404a60:	mov    ah,0xbc
  404a62:	and    BYTE PTR [esi],bl
  404a64:	ret    0x9d5b
  404a67:	daa    
  404a68:	out    0xd9,al
  404a6a:	adc    al,0xc2
  404a6c:	push   0xb7a6e00a
  404a71:	retf   
  404a72:	jbe    0x404a6b
  404a74:	bound  ebx,QWORD PTR [esi-0x6b]
  404a77:	pop    ecx
  404a78:	cmp    DWORD PTR [edi+0x3d2e5d8],esi
  404a7e:	sbb    al,0xda
  404a80:	in     eax,0xda
  404a82:	jno    0x404a37
  404a84:	fidivr WORD PTR [eax+0x211a9134]
  404a8a:	std    
  404a8b:	mov    ebx,0x40815f04
  404a90:	xchg   DWORD PTR [eax+0x20],ecx
  404a93:	adc    DWORD PTR [ecx-0x4d],ebp
  404a96:	jns    0x404a3c
  404a98:	das    
  404a99:	xchg   cl,dl
  404a9b:	out    0x5c,eax
  404a9d:	jl     0x404aef
  404a9f:	iret   
  404aa0:	cld    
  404aa1:	inc    esp
  404aa2:	ss jae 0x404afe
  404aa5:	push   es
  404aa6:	fst    DWORD PTR [ecx-0x5d]
  404aa9:	pop    esp
  404aaa:	shl    BYTE PTR [ecx-0x42d1f179],1
  404ab0:	outs   dx,DWORD PTR ds:[esi]
  404ab1:	retf   0xcd5f
  404ab4:	xor    al,0x7e
  404ab6:	xor    cl,BYTE PTR [ebp-0xce568f7]
  404abc:	jne    0x404b31
  404abe:	pop    esi
  404abf:	inc    edi
  404ac0:	call   0xa3f646ed
  404ac5:	xchg   edi,eax
  404ac6:	sbb    DWORD PTR [ebx-0x27b8cbfd],esi
  404acc:	shl    DWORD PTR [ecx+0x6c],1
  404acf:	imul   esp,DWORD PTR [ebx-0x7f59f48d],0x39862be6
  404ad9:	enter  0xd53,0x5d
  404add:	test   DWORD PTR ds:0x8f5cf241,ebx
  404ae4:	test   BYTE PTR [edx+0x24d7e001],0xe8
  404aeb:	pop    ecx
  404aec:	add    eax,0x899f4b5c
  404af1:	les    eax,FWORD PTR [ebp-0x2bda7054]
  404af7:	mov    fs,WORD PTR [ebx+0x7a]
  404afa:	cmp    ch,al
  404afc:	mov    WORD PTR [ecx+0x2434b956],?
  404b02:	icebp  
  404b03:	(bad)  
  404b04:	fdiv   st(0),st
  404b06:	loop   0x404ad1
  404b08:	outs   dx,DWORD PTR ds:[esi]
  404b09:	jne    0x404b34
  404b0b:	jmp    0x1901:0x31b60bb6
  404b12:	mov    cl,0x48
  404b14:	mov    BYTE PTR [edi+0x36],bh
  404b17:	push   ebp
  404b18:	pop    esp
  404b19:	mov    ds:0xca792b5c,al
  404b1e:	push   esp
  404b1f:	jno    0x404b96
  404b21:	xchg   edx,eax
  404b22:	sbb    eax,0xabc1ad3d
  404b27:	dec    eax
  404b28:	repnz and DWORD PTR [ebp-0x77a7642e],0xffffffcc
  404b30:	pop    esi
  404b31:	pop    edi
  404b32:	pop    es
  404b33:	ins    DWORD PTR es:[edi],dx
  404b34:	xchg   edx,eax
  404b35:	pop    esp
  404b36:	inc    ebp
  404b37:	mov    al,ds:0x41bb38a8
  404b3c:	adc    esi,DWORD PTR [ebx+ecx*2]
  404b3f:	aas    
  404b40:	ret    
  404b41:	inc    esp
  404b42:	fs icebp 
  404b44:	mov    ds:0xa152c02c,eax
  404b49:	or     eax,0x64c33c08
  404b4e:	pushf  
  404b4f:	rcl    DWORD PTR [edx],0x17
  404b52:	adc    BYTE PTR [edi+0x2d560309],bl
  404b58:	shr    BYTE PTR [edi-0x14e1806b],1
  404b5e:	inc    ebp
  404b5f:	cli    
  404b60:	lahf   
  404b61:	add    esp,DWORD PTR [esi]
  404b63:	call   0x994891f7
  404b68:	out    0x2c,eax
  404b6a:	sub    al,BYTE PTR [esi+edi*4+0x3dc182b0]
  404b71:	mov    ds:0xa1cddffa,eax
  404b76:	xor    eax,0x510530e3
  404b7b:	lods   al,BYTE PTR ds:[esi]
  404b7c:	adc    al,0xe0
  404b7e:	dec    esi
  404b7f:	xor    DWORD PTR [eax-0xc],0x6c
  404b83:	(bad)  
  404b84:	fcomp  DWORD PTR [edx-0x63]
  404b87:	mov    ebp,0x1e6d6db9
  404b8c:	jbe    0x404bab
  404b8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b8f:	cmp    DWORD PTR ds:0x6683e423,edi
  404b95:	and    ebx,DWORD PTR ds:0xe3c99eec
  404b9b:	mov    cl,0x0
  404b9d:	mov    esi,0x21c7904e
  404ba2:	xor    BYTE PTR [edx+ebp*1],ch
  404ba5:	push   ss
  404ba6:	jmp    0x27305adc
  404bab:	test   al,0x2a
  404bad:	addr16 in eax,dx
  404baf:	in     eax,dx
  404bb0:	dec    BYTE PTR [ecx+ebx*4]
  404bb3:	and    esi,DWORD PTR [edx-0x4a10826c]
  404bb9:	adc    DWORD PTR [ecx-0x61],0x5
  404bbd:	pop    esp
  404bbe:	jecxz  0x404be0
  404bc0:	ins    BYTE PTR es:[edi],dx
  404bc1:	sbb    esi,DWORD PTR [eax+edx*8]
  404bc4:	je     0x404bf2
  404bc6:	enter  0x3dba,0x38
  404bca:	mov    ds:0xb35b4e62,al
  404bcf:	std    
  404bd0:	dec    ebp
  404bd1:	icebp  
  404bd2:	jmp    0xb89de231
  404bd7:	cmp    DWORD PTR ds:0xf428e626,esp
  404bdd:	or     dh,ch
  404bdf:	shr    ebp,cl
  404be1:	add    DWORD PTR [edx-0x66],edx
  404be4:	xchg   esp,ebx
  404be6:	iret   
  404be7:	push   es
  404be8:	xchg   esp,eax
  404be9:	mov    bh,0x26
  404beb:	lds    ebx,FWORD PTR [esi+0x7f8cf649]
  404bf1:	and    BYTE PTR [ecx-0x7ffb5345],bl
  404bf7:	ror    BYTE PTR [ecx+ebp*2-0x21],cl
  404bfb:	mov    bh,BYTE PTR [eax+eiz*2]
  404bfe:	push   ebp
  404bff:	and    al,0xa5
  404c01:	test   al,0x22
  404c03:	jecxz  0x404c26
  404c05:	lds    ebp,FWORD PTR [edx-0x7ecbf15d]
  404c0b:	ss push esi
  404c0d:	jl     0x404bd1
  404c0f:	out    dx,eax
  404c10:	mov    al,0xbe
  404c12:	mov    dh,bl
  404c14:	stc    
  404c15:	add    eax,0xd803941
  404c1a:	mov    BYTE PTR [esi-0x5d5ef48b],bh
  404c20:	iret   
  404c21:	jbe    0x404c64
  404c23:	test   al,0xc1
  404c25:	cmp    edx,ebp
  404c27:	push   edi
  404c28:	popa   
  404c29:	cmp    al,0x94
  404c2b:	cmp    esp,DWORD PTR [eax-0x68]
  404c2e:	sbb    eax,0x4224b751
  404c33:	fwait
  404c34:	ret    
  404c35:	sbb    BYTE PTR [edi],dh
  404c37:	and    bl,BYTE PTR [edx]
  404c39:	inc    esp
  404c3a:	and    al,0xcc
  404c3c:	fcmove st,st(5)
  404c3e:	std    
  404c3f:	jne    0x404c2d
  404c41:	mov    bl,0x11
  404c43:	nop
  404c44:	push   cs
  404c45:	mov    edi,0x53e70d0a
  404c4a:	or     dl,BYTE PTR [esi-0x2a598c61]
  404c50:	sahf   
  404c51:	mov    WORD PTR [edx+esi*1+0x67],cs
  404c55:	test   al,0x51
  404c57:	scas   eax,DWORD PTR es:[edi]
  404c58:	cwde   
  404c59:	pop    esi
  404c5a:	(bad)  
  404c5b:	pop    eax
  404c5c:	and    eax,0x927a1792
  404c61:	daa    
  404c62:	bound  ebx,QWORD PTR [eax]
  404c64:	and    BYTE PTR [esi+0x76],dh
  404c67:	scas   al,BYTE PTR es:[edi]
  404c68:	imul   dl
  404c6a:	(bad)  
  404c6b:	jo     0x404ce4
  404c6d:	stos   DWORD PTR es:[edi],eax
  404c6e:	iret   
  404c6f:	adc    eax,0xe92a59e3
  404c74:	inc    eax
  404c75:	in     eax,dx
  404c76:	add    DWORD PTR [ecx+0x35176f69],ebx
  404c7c:	popa   
  404c7d:	pusha  
  404c7e:	mov    esi,0x2d0b8e5d
  404c83:	sub    bl,BYTE PTR [edx+eiz*8+0x36]
  404c87:	pusha  
  404c88:	stos   BYTE PTR es:[edi],al
  404c89:	fwait
  404c8a:	aam    0xa
  404c8c:	dec    DWORD PTR [eax]
  404c8e:	das    
  404c8f:	out    0xfb,al
  404c91:	mov    ah,0xa5
  404c93:	outs   dx,BYTE PTR ds:[esi]
  404c94:	pop    esi
  404c95:	mov    dl,0x49
  404c97:	inc    eax
  404c98:	jnp    0x404d11
  404c9a:	fwait
  404c9b:	jno    0x404c9e
  404c9d:	std    
  404c9e:	mov    cl,0xa8
  404ca0:	pop    esp
  404ca1:	or     BYTE PTR [edx-0x5de0b76],0x6c
  404ca8:	je     0x404cd1
  404caa:	dec    ebp
  404cab:	ins    BYTE PTR es:[edi],dx
  404cac:	bnd ret 0x97a
  404cb0:	xchg   edx,eax
  404cb1:	loope  0x404d0e
  404cb3:	mov    eax,ds:0x3701a021
  404cb8:	adc    al,0x73
  404cba:	jbe    0x404c88
  404cbc:	dec    esi
  404cbd:	ja     0x404c68
  404cbf:	sbb    dl,BYTE PTR [edi-0x71e8b5da]
  404cc5:	jle    0x404d07
  404cc7:	push   ebx
  404cc8:	shr    DWORD PTR [ecx],0xb8
  404ccb:	sbb    edi,DWORD PTR [esi+0x788fd4f4]
  404cd1:	inc    edi
  404cd2:	dec    eax
  404cd3:	inc    eax
  404cd4:	mov    edi,0x93a16859
  404cd9:	aam    0x7b
  404cdb:	fwait
  404cdc:	pop    edx
  404cdd:	jb     0x404d4b
  404cdf:	jae    0x404d10
  404ce1:	(bad)  
  404ce2:	and    BYTE PTR ds:0x19f04936,0x75
  404ce9:	push   edx
  404cea:	jno    0x404c9d
  404cec:	xor    BYTE PTR [edx],cl
  404cee:	ins    DWORD PTR es:[edi],dx
  404cef:	xor    ecx,DWORD PTR [eax]
  404cf1:	dec    esp
  404cf2:	push   eax
  404cf3:	lods   al,BYTE PTR ds:[esi]
  404cf4:	inc    esi
  404cf5:	dec    eax
  404cf6:	jmp    0xed46:0x5dc49f62
  404cfd:	sar    BYTE PTR [ebx],cl
  404cff:	xchg   ebp,eax
  404d00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d01:	mov    ah,0x9a
  404d03:	adc    BYTE PTR [ebp-0x5a],al
  404d06:	mov    esp,0x61f6aac5
  404d0b:	jae    0x404d51
  404d0d:	jp     0x404d1a
  404d0f:	js     0x404d58
  404d11:	fmul   QWORD PTR [ebp+0x1ba23de1]
  404d17:	adc    ebx,DWORD PTR [esi+0x16e27fe6]
  404d1d:	mov    al,0xfd
  404d1f:	jns    0x404d30
  404d21:	imul   esp,DWORD PTR [ecx-0x6b],0xd2b19314
  404d28:	fild   DWORD PTR [edi-0x57eae10e]
  404d2e:	xchg   ecx,eax
  404d2f:	in     al,dx
  404d30:	cdq    
  404d31:	jo     0x404d14
  404d33:	aas    
  404d34:	push   ebp
  404d35:	cdq    
  404d36:	push   cs
  404d37:	(bad)
  404d3a:	stos   BYTE PTR es:[edi],al
  404d3b:	push   es
  404d3c:	out    0x73,eax
  404d3e:	lods   eax,DWORD PTR ds:[esi]
  404d3f:	enter  0xa2a4,0xa7
  404d43:	dec    edx
  404d44:	scas   al,BYTE PTR es:[edi]
  404d45:	sub    al,BYTE PTR [edi]
  404d47:	push   edx
  404d48:	ins    BYTE PTR es:[edi],dx
  404d49:	ret    
  404d4a:	inc    esp
  404d4b:	out    0x98,al
  404d4d:	lock cmp DWORD PTR ds:[edi+ebp*2],0x714eaa24
  404d56:	(bad)  
  404d57:	fbstp  TBYTE PTR [edx-0x1f]
  404d5a:	in     al,dx
  404d5b:	add    eax,0x10385745
  404d60:	fwait
  404d61:	int    0xf9
  404d63:	xchg   ebp,eax
  404d64:	mov    WORD PTR [eax-0x31],cs
  404d67:	cmp    eax,0x8854984b
  404d6c:	sub    BYTE PTR [ebx-0x1219e282],dl
  404d72:	mov    eax,ds:0x7ab1b875
  404d77:	test   BYTE PTR [esp+eiz*2-0x650b4090],bl
  404d7e:	popa   
  404d7f:	arpl   bx,cx
  404d81:	push   ebp
  404d82:	add    eax,0x346eabc5
  404d87:	push   ds
  404d88:	xor    ecx,edi
  404d8a:	inc    ebx
  404d8b:	push   0x35
  404d8d:	inc    esp
  404d8e:	push   eax
  404d8f:	pop    ss
  404d90:	add    al,0xa4
  404d92:	sbb    esp,DWORD PTR [edx]
  404d94:	jle    0x404e0a
  404d96:	ins    BYTE PTR es:[edi],dx
  404d97:	addr16 mov cl,0x29
  404d9a:	in     eax,0x3c
  404d9c:	sub    esi,DWORD PTR [edi]
  404d9e:	out    0xb,eax
  404da0:	(bad)  
  404da1:	cmp    eax,0x338e315c
  404da6:	nop
  404da7:	js     0x404dc2
  404da9:	nop
  404daa:	stc    
  404dab:	sub    DWORD PTR [eax-0x4c8523],edx
  404db1:	cmc    
  404db2:	mov    dh,0x0
  404db4:	aam    0xf
  404db6:	cmc    
  404db7:	cwde   
  404db8:	addr16 mov ah,0xa8
  404dbb:	data16 jmp 0x404d5a
  404dbe:	push   ss
  404dbf:	loope  0x404dd6
  404dc1:	cld    
  404dc2:	and    BYTE PTR [edx+0x3],dh
  404dc5:	fs jl  0x404de2
  404dc8:	(bad)  
  404dc9:	(bad)  
  404dca:	jg     0x404d75
  404dcc:	fisub  WORD PTR [ebx]
  404dce:	leave  
  404dcf:	lea    esi,[esi-0x2f]
  404dd2:	mov    bh,0x2b
  404dd4:	push   cs
  404dd5:	loope  0x404d85
  404dd7:	dec    esi
  404dd8:	pinsrw mm3,edx,0xc
  404ddc:	fisttp DWORD PTR [edx+ebx*8]
  404ddf:	aaa    
  404de0:	leave  
  404de1:	jmp    0x830c:0x6263f567
  404de8:	pop    ebp
  404dea:	cmp    ah,BYTE PTR [edi]
  404dec:	lock scas eax,DWORD PTR es:[edi]
  404dee:	jbe    0x404e00
  404df0:	jle    0x404ddc
  404df2:	mov    es,WORD PTR [ecx+0xe]
  404df5:	inc    ecx
  404df6:	jno    0x404de9
  404df8:	xchg   ebp,eax
  404df9:	cdq    
  404dfa:	sbb    ecx,ebp
  404dfc:	aad    0xff
  404dfe:	mov    ebp,0x266b6d26
  404e03:	(bad)  
  404e04:	sbb    ebx,esi
  404e06:	retf   
  404e07:	hlt    
  404e08:	mov    al,ds:0x4128f298
  404e0d:	ret    
  404e0e:	into   
  404e0f:	test   eax,0xc548311
  404e14:	cmp    ecx,ebx
  404e16:	and    eax,0xd83923b0
  404e1b:	cmc    
  404e1c:	dec    ebx
  404e1d:	dec    eax
  404e1e:	(bad)  
  404e20:	mov    al,0xc3
  404e22:	mov    edx,0xc952535a
  404e27:	xlat   BYTE PTR ds:[ebx]
  404e28:	or     eax,0xe6643ce8
  404e2d:	into   
  404e2e:	mov    cl,0xf8
  404e30:	xchg   ecx,eax
  404e31:	stc    
  404e32:	popf   
  404e33:	pop    ebp
  404e34:	into   
  404e35:	xchg   BYTE PTR [edx],ah
  404e37:	add    ebp,ecx
  404e39:	gs or  eax,0x16c09b8f
  404e3f:	or     eax,0x3fa7f870
  404e44:	add    ah,ah
  404e46:	add    al,cl
  404e48:	test   al,0xd9
  404e4a:	aas    
  404e4b:	retf   0xedae
  404e4e:	(bad)  [edx-0x288f744d]
  404e54:	sbb    al,0x9
  404e56:	pushf  
  404e57:	shl    DWORD PTR [eax-0x80],0xe4
  404e5b:	data16 fimul WORD PTR [esi+0x700d9549]
  404e62:	scas   eax,DWORD PTR es:[edi]
  404e63:	mov    al,ds:0x53b0fdef
  404e68:	loope  0x404e38
  404e6a:	sub    al,0x29
  404e6c:	in     al,0x3d
  404e6e:	sahf   
  404e6f:	and    ah,dl
  404e71:	sbb    ecx,DWORD PTR [ebx]
  404e73:	ret    0x7c9e
  404e76:	jae    0x404eec
  404e78:	pop    ds
  404e79:	sub    BYTE PTR [edi],bl
  404e7b:	fwait
  404e7c:	cld    
  404e7d:	je     0x404e66
  404e7f:	jg     0x404e3a
  404e81:	mov    eax,0xe2432e24
  404e86:	fimul  WORD PTR [esi-0x1e1bd57a]
  404e8c:	pop    esi
  404e8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e8e:	lods   eax,DWORD PTR ds:[esi]
  404e8f:	mov    DWORD PTR [esi+0x6ed9b8fc],edi
  404e95:	push   ebp
  404e96:	jno    0x404ea1
  404e98:	adc    al,BYTE PTR [esi+0x3b]
  404e9b:	jp     0x404ec7
  404e9d:	mov    ds:0x24f86135,al
  404ea2:	cdq    
  404ea3:	jo     0x404ea7
  404ea5:	add    DWORD PTR [edi+ebx*8],ecx
  404ea8:	sbb    ch,BYTE PTR [eax+eiz*2]
  404eab:	aas    
  404eac:	test   al,0xeb
  404eae:	(bad)  
  404eb0:	jbe    0x404e4a
  404eb2:	(bad)  
  404eb3:	fcom   st(6)
  404eb5:	adc    ebp,esi
  404eb7:	jmp    FWORD PTR [edi-0x7e]
  404eba:	(bad)  
  404ebb:	cmp    edx,DWORD PTR ds:0xb89d92b8
  404ec1:	pop    edi
  404ec2:	dec    esi
  404ec3:	xchg   ebx,eax
  404ec4:	pop    ebx
  404ec5:	pop    es
  404ec6:	cmc    
  404ec7:	out    dx,eax
  404ec8:	and    ebx,DWORD PTR [ecx-0x40]
  404ecb:	and    DWORD PTR [ebp-0x58589546],ecx
  404ed1:	add    esp,DWORD PTR [edx+0x4bae76c1]
  404ed7:	add    al,0x9d
  404ed9:	cld    
  404eda:	test   BYTE PTR [ebx],ah
  404edc:	cmp    al,0xff
  404ede:	jg     0x404e6f
  404ee0:	push   ds
  404ee1:	jmp    0x404e70
  404ee3:	scas   al,BYTE PTR es:[edi]
  404ee4:	mov    esi,0xc12fb861
  404ee9:	mov    ah,dl
  404eeb:	add    eax,edx
  404eed:	xor    dl,BYTE PTR [ecx]
  404eef:	jno    0x404ec1
  404ef1:	adc    al,0x97
  404ef3:	fld    QWORD PTR [edi+0xb]
  404ef6:	xor    esi,DWORD PTR [esi-0x23f843ef]
  404efc:	adc    ecx,ecx
  404efe:	lods   al,BYTE PTR ds:[esi]
  404eff:	sub    al,BYTE PTR [ebx+0x27]
  404f02:	adc    bh,al
  404f04:	loop   0x404f04
  404f06:	push   eax
  404f07:	push   eax
  404f08:	fisub  WORD PTR [edx+0x68a77cc2]
  404f0e:	bound  ecx,QWORD PTR [ebx]
  404f10:	inc    ecx
  404f11:	mov    ds:0xad61171a,eax
  404f16:	mov    ebx,0xe94f8bcd
  404f1b:	je     0x404ee9
  404f1d:	fidivr WORD PTR [eax+0x24]
  404f20:	jmp    0x2f82:0x6a8d
  404f26:	inc    edi
  404f27:	out    dx,al
  404f28:	push   0x67
  404f2a:	ret    
  404f2b:	adc    BYTE PTR [ebx],cl
  404f2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f2e:	inc    edx
  404f2f:	in     al,0x92
  404f31:	jp     0x404f4a
  404f33:	je     0x404f6c
  404f35:	bound  esp,QWORD PTR [edx-0x5eaeb169]
  404f3b:	jl     0x404ee9
  404f3d:	retf   0xce34
  404f40:	xor    BYTE PTR [esi+0x6897e2aa],bh
  404f46:	in     al,0x9f
  404f48:	sub    BYTE PTR [ebp-0x62],bh
  404f4b:	imul   ebx,esp,0xffffffd3
  404f4e:	test   DWORD PTR [edi-0x50c5a87f],ebp
  404f54:	cli    
  404f55:	or     BYTE PTR [edx+0x18],cl
  404f58:	or     eax,0xbc7fd50e
  404f5d:	jmp    0x404fa6
  404f5f:	mov    al,ds:0x468cb250
  404f64:	mov    eax,0x437872ea
  404f69:	dec    edi
  404f6a:	ins    DWORD PTR es:[edi],dx
  404f6b:	out    dx,eax
  404f6c:	loope  0x404f32
  404f6e:	or     bl,BYTE PTR [edi]
  404f70:	add    cl,dh
  404f72:	ret    
  404f73:	cmp    eax,0x5cff623
  404f78:	mov    BYTE PTR [esi+ecx*4+0x1a],ah
  404f7c:	in     eax,0x30
  404f7e:	lds    edx,FWORD PTR [ebx+0x17]
  404f81:	pop    edi
  404f82:	lea    ecx,[ebx]
  404f84:	cmp    al,0xe5
  404f86:	jae    0x404f8d
  404f88:	dec    ebx
  404f89:	scas   eax,DWORD PTR es:[edi]
  404f8a:	or     esp,DWORD PTR [edi+0x40]
  404f8d:	mov    dh,cl
  404f8f:	adc    BYTE PTR [ebx-0x1a],ch
  404f92:	adc    eax,DWORD PTR [esi-0x60]
  404f95:	xchg   esi,eax
  404f96:	iret   
  404f97:	mov    edx,0x416f8ba6
  404f9c:	jge    0x404f63
  404f9e:	nop
  404f9f:	int3   
  404fa0:	jo     0x404f55
  404fa2:	mov    dl,0x87
  404fa4:	fsubr  DWORD PTR [edx]
  404fa6:	xchg   edi,eax
  404fa7:	sbb    al,0x60
  404fa9:	jae    0x404f6b
  404fab:	sbb    cl,BYTE PTR [edi]
  404fad:	test   BYTE PTR [edx],ah
  404faf:	pop    edx
  404fb0:	jge    0x40501d
  404fb2:	pop    ebp
  404fb3:	sahf   
  404fb4:	adc    eax,0x5b1d70b5
  404fb9:	xor    bh,BYTE PTR [edx-0x4f]
  404fbc:	stos   DWORD PTR es:[edi],eax
  404fbd:	add    bl,bl
  404fbf:	inc    esp
  404fc0:	jl     0x404fe3
  404fc2:	cdq    
  404fc3:	adc    BYTE PTR [eax],al
  404fc5:	xor    al,0x54
  404fc7:	aam    0xb1
  404fc9:	(bad)  
  404fca:	sbb    bh,BYTE PTR [ebx+edx*4]
  404fcd:	push   ebp
  404fce:	pop    eax
  404fcf:	das    
  404fd0:	mov    edx,0x89e8be1c
  404fd5:	fisttp DWORD PTR [esi+0x8]
  404fd8:	es fs hlt 
  404fdb:	inc    ecx
  404fdc:	and    DWORD PTR [esi+0x63c178b3],esp
  404fe2:	test   BYTE PTR [edi],al
  404fe4:	mov    ebx,0x78e3e6e3
  404fe9:	pusha  
  404fea:	push   es
  404feb:	dec    edi
  404fec:	hlt    
  404fed:	ins    DWORD PTR es:[edi],dx
  404fee:	inc    edi
  404fef:	mov    al,BYTE PTR [edi-0x69cd6b3f]
  404ff5:	mov    DWORD PTR [esi+0x6842f65e],edx
  404ffb:	cs retf 
  404ffd:	mov    ss,WORD PTR [esi]
  404fff:	aaa    
  405000:	jae    0x404fd7
  405002:	push   0xffffff93
  405004:	sbb    al,0x45
  405006:	(bad)  
  405007:	mov    al,0x11
  405009:	out    dx,al
  40500a:	and    esi,DWORD PTR [eax+0x69d681f5]
  405010:	fucomip st,st(4)
  405012:	stos   BYTE PTR es:[edi],al
  405013:	adc    eax,0x6798b002
  405018:	imul   edi,DWORD PTR [ebx],0x15ea2029
  40501e:	push   esp
  40501f:	rcr    DWORD PTR [eax-0x33],cl
  405022:	xchg   edi,eax
  405023:	(bad)
  405026:	fsubr  DWORD PTR [eax]
  405028:	or     al,BYTE PTR [esi+ecx*8-0x27]
  40502c:	mov    ds:0x4208bcb2,eax
  405031:	jmp    0xc4ec:0x607de3c2
  405038:	add    al,0x58
  40503a:	or     BYTE PTR [edx+0x1db6290c],dl
  405040:	jmp    0x991d:0xe9682463
  405047:	in     al,dx
  405048:	inc    ebx
  405049:	outs   dx,BYTE PTR ds:[esi]
  40504a:	aam    0x1f
  40504c:	push   ds
  40504d:	xor    eax,0x8c5fb369
  405052:	pop    esp
  405053:	pop    esi
  405054:	imul   ebp,ebp,0xffffff82
  405057:	cmp    dl,BYTE PTR [ecx]
  405059:	xor    eax,0x89e623fe
  40505e:	jp     0x404fe5
  405060:	imul   ecx,DWORD PTR [ebx+0x79a27a72],0x35
  405067:	ret    0x1f2b
  40506a:	(bad)  
  40506b:	in     eax,0x65
  40506d:	es xchg ebx,eax
  40506f:	aad    0xc0
  405071:	jbe    0x405021
  405073:	je     0x40505a
  405075:	loope  0x4050e9
  405077:	inc    eax
  405078:	adc    BYTE PTR [edi-0x38],dh
  40507b:	pop    edi
  40507c:	push   eax
  40507d:	loopne 0x4050b2
  40507f:	mov    eax,ds:0xaea204e1
  405084:	int    0xa8
  405086:	js     0x40507c
  405088:	gs out 0xd0,eax
  40508b:	sbb    BYTE PTR [edi],0x60
  40508e:	jbe    0x405058
  405090:	sbb    edx,DWORD PTR [edx-0x369a06e]
  405096:	jmp    0x405079
  405098:	jl     0x405066
  40509a:	nop
  40509b:	fbstp  TBYTE PTR ds:0x88af810e
  4050a1:	push   ebp
  4050a2:	adc    al,0xfe
  4050a4:	es fs retf 
  4050a7:	mov    al,0xda
  4050a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050aa:	or     cl,BYTE PTR [eax+0x4d]
  4050ad:	dec    BYTE PTR [ebx]
  4050af:	and    DWORD PTR [esi],eax
  4050b1:	(bad)
  4050b5:	inc    edx
  4050b6:	push   esp
  4050b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050b8:	ficomp WORD PTR [ebx+ecx*1-0x788d3f5c]
  4050bf:	icebp  
  4050c0:	push   0x7458dc94
  4050c5:	(bad)  
  4050c6:	mov    ebp,0x26637926
  4050cb:	adc    BYTE PTR [edx],al
  4050cd:	xor    eax,0x5addcdb8
  4050d2:	xchg   BYTE PTR [esi-0x7c],bl
  4050d5:	fstp   QWORD PTR [ecx+eiz*2+0x6ea60bef]
  4050dc:	pop    ebp
  4050dd:	adc    al,0x1
  4050df:	jns    0x405157
  4050e1:	out    dx,eax
  4050e2:	xchg   esi,eax
  4050e3:	enter  0xbc93,0x62
  4050e7:	inc    ecx
  4050e8:	adc    al,0xb9
  4050ea:	aas    
  4050eb:	xchg   ebx,eax
  4050ec:	out    0x93,eax
  4050ee:	push   edi
  4050ef:	cmc    
  4050f0:	cli    
  4050f1:	dec    esi
  4050f2:	adc    DWORD PTR [edx],esi
  4050f4:	mov    ah,bl
  4050f6:	clc    
  4050f7:	lahf   
  4050f8:	push   esi
  4050f9:	arpl   WORD PTR [esi-0x1a7eb169],di
  4050ff:	aaa    
  405100:	sbb    DWORD PTR [edx+0x5257786a],eax
  405106:	fstp   TBYTE PTR [ebx]
  405108:	push   0x42
  40510a:	outs   dx,DWORD PTR ds:[esi]
  40510b:	imul   edx,DWORD PTR [ecx-0xd],0x1ad985dd
  405112:	adc    dl,bl
  405114:	outs   dx,DWORD PTR ds:[esi]
  405115:	lock push edx
  405117:	push   0x583de051
  40511c:	stos   DWORD PTR es:[edi],eax
  40511d:	xor    eax,0x801c2efd
  405122:	and    bh,cl
  405124:	pusha  
  405125:	pushf  
  405126:	clc    
  405127:	test   DWORD PTR ds:0x989d911,edi
  40512d:	jl     0x40515d
  40512f:	xchg   ebp,eax
  405130:	out    0xdd,al
  405132:	or     eax,0x3b3d42b5
  405137:	adc    BYTE PTR ds:0xfd08acd,dh
  40513d:	mov    eax,0x90373ea
  405142:	mov    ds:0xd91c7bd5,eax
  405147:	mov    ch,0x99
  405149:	sub    edx,DWORD PTR [ebx+eiz*4+0x6ec29c59]
  405150:	call   0xe28f:0x6e6472fc
  405157:	sub    edx,DWORD PTR [edx]
  405159:	cmp    BYTE PTR [eax+eiz*1+0x5a],0xaf
  40515e:	(bad)  
  40515f:	lock nop
  405161:	pop    es
  405162:	xor    al,0x8a
  405164:	jne    0x405145
  405166:	or     ch,0x22
  405169:	or     eax,0x802dadaa
  40516e:	call   0x187327ee
  405173:	inc    ebp
  405174:	dec    esp
  405175:	fsubr  QWORD PTR ds:0x9bec19df
  40517b:	lds    ebp,FWORD PTR [edx]
  40517d:	jp     0x405110
  40517f:	inc    ebx
  405180:	mov    ah,0x1
  405182:	adc    BYTE PTR [ebp-0xa],ch
  405185:	push   ds
  405186:	(bad)  
  405188:	xor    al,BYTE PTR [ebp+0x11]
  40518b:	aad    0x48
  40518d:	test   DWORD PTR [edx+esi*8-0x6f],ebx
  405191:	cmp    al,0x27
  405193:	icebp  
  405194:	ins    DWORD PTR es:[edi],dx
  405195:	mov    esp,0x3840b125
  40519a:	adc    cl,BYTE PTR [edx+0x70f082eb]
  4051a0:	cmp    DWORD PTR [ebx+ecx*4],esi
  4051a3:	scas   al,BYTE PTR es:[edi]
  4051a4:	jge    0x4051ca
  4051a6:	in     al,dx
  4051a7:	leave  
  4051a8:	xor    BYTE PTR [esi],0x57
  4051ab:	pop    edi
  4051ac:	or     al,0x4
  4051ae:	ret    
  4051af:	xchg   ebx,eax
  4051b0:	data16 jbe 0x4051de
  4051b3:	gs jge 0x405150
  4051b6:	out    dx,eax
  4051b7:	push   edi
  4051b8:	xchg   edx,eax
  4051b9:	outs   dx,BYTE PTR ds:[esi]
  4051ba:	push   edx
  4051bb:	jle    0x40516c
  4051bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051be:	or     al,0xc
  4051c0:	add    al,0xb8
  4051c2:	or     eax,0xf991ee8b
  4051c7:	test   BYTE PTR [edi+ebp*4-0x63],0x1d
  4051cc:	sub    DWORD PTR [eax],ecx
  4051ce:	cld    
  4051cf:	daa    
  4051d0:	mov    ebp,0x80649f7b
  4051d5:	jmp    0x405239
  4051d7:	jmp    FWORD PTR [edi+0x2d]
  4051da:	push   DWORD PTR [edi+esi*8]
  4051dd:	aaa    
  4051de:	lods   eax,DWORD PTR ds:[esi]
  4051df:	nop
  4051e0:	test   DWORD PTR ds:0x48c31a36,esi
  4051e6:	cmp    DWORD PTR [ebx+0x5d32c59b],eax
  4051ec:	lods   al,BYTE PTR ds:[esi]
  4051ed:	or     al,cl
  4051ef:	es or  eax,0x67f0974d
  4051f5:	cwde   
  4051f6:	das    
  4051f7:	inc    eax
  4051f8:	sub    BYTE PTR [esp+eax*4+0x69],bh
  4051fc:	push   ecx
  4051fd:	jns    0x4051a4
  4051ff:	xor    DWORD PTR [ebx],ecx
  405201:	sub    eax,0xd9ab104a
  405206:	stos   DWORD PTR es:[edi],eax
  405207:	das    
  405208:	ja     0x40525b
  40520a:	sbb    ecx,DWORD PTR ds:0x9b03b2d0
  405210:	lods   eax,DWORD PTR ds:[esi]
  405211:	in     eax,dx
  405212:	icebp  
  405213:	push   ss
  405214:	push   eax
  405215:	test   eax,0xa4c5e7ce
  40521a:	xchg   edx,eax
  40521b:	stos   DWORD PTR es:[edi],eax
  40521c:	rcr    BYTE PTR gs:[esi+esi*4+0x7cefc23c],cl
  405224:	adc    dh,BYTE PTR ds:0x64e84ca5
  40522a:	pop    es
  40522b:	sub    eax,0xc49a8cc5
  405230:	sti    
  405231:	lock stos DWORD PTR es:[edi],eax
  405233:	xor    eax,0x4dcdaed9
  405238:	xor    BYTE PTR [edx-0x5a5d2659],0x71
  40523f:	test   DWORD PTR [ecx-0x596ba9ec],esp
  405245:	jmp    DWORD PTR [esi]
  405247:	leave  
  405248:	pop    ss
  405249:	stos   DWORD PTR es:[edi],eax
  40524a:	pop    ebp
  40524b:	mov    ebp,0x6802dc27
  405250:	ins    BYTE PTR es:[edi],dx
  405251:	aas    
  405252:	mov    bl,0x80
  405254:	sahf   
  405255:	cmp    edx,eax
  405257:	push   esp
  405258:	jns    0x405222
  40525a:	into   
  40525b:	out    dx,al
  40525c:	ja     0x40523f
  40525e:	or     eax,0x9b0487ee
  405263:	cmp    esp,DWORD PTR [ecx]
  405265:	xchg   BYTE PTR [edx-0x11011c55],ah
  40526b:	or     eax,DWORD PTR [edx-0x6a]
  40526e:	int3   
  40526f:	xchg   edi,eax
  405270:	push   cs
  405271:	stos   DWORD PTR es:[edi],eax
  405272:	and    BYTE PTR [esi+0x40a2e12f],0xec
  405279:	mov    ds,WORD PTR [esi-0x3dffedfa]
  40527f:	lea    ebp,[ecx-0x47]
  405282:	push   es
  405283:	call   0x7684:0xccc34b4
  40528a:	je     0x4052fb
  40528c:	xchg   BYTE PTR [eax-0x3fbffe0a],ah
  405292:	xchg   esi,eax
  405293:	(bad)  
  405294:	(bad)  
  405296:	and    ah,bh
  405298:	out    dx,eax
  405299:	push   ecx
  40529a:	and    eax,DWORD PTR [eax-0x58]
  40529d:	inc    ebx
  40529e:	pop    esp
  40529f:	inc    edi
  4052a0:	mov    al,0xcd
  4052a2:	lock add eax,DWORD PTR [eax-0x6a]
  4052a6:	cli    
  4052a7:	sub    BYTE PTR [ebp-0x703d4b81],cl
  4052ad:	pop    edx
  4052ae:	nop
  4052af:	cmp    al,0x5f
  4052b1:	jmp    0x4bee:0x853e0686
  4052b8:	or     BYTE PTR [eax+0x5bdb486b],bh
  4052be:	add    BYTE PTR [esp+ebp*8],bh
  4052c1:	mov    dl,0x71
  4052c3:	adc    DWORD PTR [edi-0x31a35726],ebx
  4052c9:	nop
  4052ca:	add    BYTE PTR [ebp+0xc54a818],0x77
  4052d1:	add    BYTE PTR [eax+0x5a],0x9
  4052d5:	adc    edi,edx
  4052d7:	dec    eax
  4052d8:	or     ebx,edi
  4052da:	inc    esi
  4052db:	push   ss
  4052dc:	(bad)  
  4052dd:	and    bh,BYTE PTR [edx+0x4e22041]
  4052e3:	sub    dh,BYTE PTR [edi-0x197f9aea]
  4052e9:	xlat   BYTE PTR ds:[ebx]
  4052ea:	push   ebp
  4052eb:	stos   DWORD PTR es:[edi],eax
  4052ec:	mov    cl,0x53
  4052ee:	dec    esi
  4052ef:	mov    al,0x42
  4052f1:	iret   
  4052f2:	xchg   ebp,eax
  4052f3:	push   esp
  4052f4:	dec    edx
  4052f5:	push   ecx
  4052f6:	inc    ebp
  4052f7:	mov    esi,0x97e183f3
  4052fc:	xchg   edi,eax
  4052fd:	push   ds
  4052fe:	fmulp  st(2),st
  405300:	ins    BYTE PTR es:[edi],dx
  405301:	ss jb  0x405352
  405304:	sub    bh,BYTE PTR [eax-0x49e8b8db]
  40530a:	jmp    0x823d0cff
  40530f:	jmp    0x2754:0xe4ee2fbb
  405316:	pushf  
  405317:	popf   
  405318:	or     al,0xfb
  40531a:	mov    ecx,0x2786bb42
  40531f:	mov    ds:0x93c49590,eax
  405324:	cdq    
  405325:	inc    edi
  405326:	cmp    eax,0xbd68c9f1
  40532b:	bound  edi,QWORD PTR [eax]
  40532d:	pop    ss
  40532e:	ss or  ch,ch
  405331:	pop    ds
  405332:	push   ebp
  405333:	add    al,0x91
  405335:	fwait
  405336:	aam    0xbd
  405338:	(bad)  
  40533a:	out    dx,eax
  40533b:	pop    esi
  40533c:	dec    ebx
  40533d:	sbb    BYTE PTR [esi+0x30],0x19
  405341:	out    0x2f,al
  405343:	jmp    0x14c35a6e
  405348:	cmp    dh,ch
  40534a:	dec    edi
  40534b:	fisttp DWORD PTR [ebx+0x1ad04119]
  405351:	xlat   BYTE PTR ds:[ebx]
  405352:	aam    0x43
  405354:	adc    ah,0xbd
  405357:	inc    esi
  405358:	mov    ch,0xab
  40535a:	mov    ah,dh
  40535c:	mov    cl,0x17
  40535e:	cmp    eax,0x118addd2
  405363:	bound  esp,QWORD PTR [ebp-0x8d44837]
  405369:	pop    esi
  40536a:	xlat   BYTE PTR ds:[ebx]
  40536b:	inc    esp
  40536c:	mov    ecx,0x10bc9707
  405371:	cmp    edi,DWORD PTR ds:0x9e7e5c20
  405377:	(bad)  
  405379:	cwde   
  40537a:	retf   
  40537b:	fbstp  TBYTE PTR [edx+0x66]
  40537e:	std    
  40537f:	int    0xfa
  405381:	cdq    
  405382:	jnp    0x40530a
  405384:	data16 into 
  405386:	aad    0xfe
  405388:	inc    ecx
  405389:	or     al,0x92
  40538b:	jmp    0xe81f:0x3e6233bd
  405392:	not    BYTE PTR [eax-0x2b]
  405395:	adc    BYTE PTR [edx-0xd6f5da2],0x97
  40539c:	sub    ebp,DWORD PTR [esi]
  40539e:	jmp    0xa6d22dba
  4053a3:	scas   al,BYTE PTR es:[edi]
  4053a4:	sbb    DWORD PTR [edx+eiz*8-0x6297980b],esi
  4053ab:	(bad)  
  4053ac:	jae    0x4053d1
  4053ae:	xchg   ebx,eax
  4053af:	sbb    al,0x6a
  4053b1:	adc    BYTE PTR [edi-0x6463e475],al
  4053b7:	adc    ecx,DWORD PTR [ebp+0x25]
  4053ba:	pshufw mm6,QWORD PTR [eax+eiz*2],0x49
  4053bf:	sbb    eax,DWORD PTR [esi-0x18]
  4053c2:	jae    0x405389
  4053c4:	les    ebp,FWORD PTR [ecx+0x30769f53]
  4053ca:	mov    BYTE PTR [eax+0x225399c6],dl
  4053d0:	add    ebp,DWORD PTR ds:0x13046c53
  4053d6:	inc    ecx
  4053d7:	jnp    0x40541e
  4053d9:	mov    ch,0x66
  4053db:	scas   eax,DWORD PTR es:[edi]
  4053dc:	cmp    BYTE PTR [eax],cl
  4053de:	cld    
  4053df:	sub    ecx,DWORD PTR [ecx+0x3dd0eda2]
  4053e5:	jmp    0x48e0:0x6f368c9a
  4053ec:	shl    BYTE PTR [edi-0x21],0x47
  4053f0:	aam    0x85
  4053f2:	xor    edi,edi
  4053f4:	je     0x4053d7
  4053f6:	jg     0x40541e
  4053f8:	inc    edx
  4053f9:	sahf   
  4053fa:	mov    DWORD PTR [edx-0x43],esp
  4053fd:	imul   DWORD PTR [edx-0x1552f937]
  405403:	div    BYTE PTR [esi+0x66e3e5f5]
  405409:	sti    
  40540a:	test   BYTE PTR [esi],bl
  40540c:	cld    
  40540d:	test   ebp,0x45668345
  405413:	pop    edx
  405414:	pop    ebp
  405415:	rcr    DWORD PTR [edi+0x18],0xb7
  405419:	and    DWORD PTR [edx+0x10b77eac],edx
  40541f:	popf   
  405420:	stc    
  405421:	jne    0x40540b
  405423:	push   ecx
  405424:	(bad)
  405427:	dec    edi
  405428:	sbb    al,0x5b
  40542a:	fisttp WORD PTR [edi+edx*4]
  40542d:	dec    ecx
  40542e:	mov    fs,WORD PTR [esi]
  405430:	sub    al,0x85
  405432:	gs xchg ebp,eax
  405434:	pop    esp
  405435:	imul   eax,DWORD PTR [eax+0xa],0xad2b7a87
  40543c:	(bad)  
  40543d:	push   ds
  40543e:	stc    
  40543f:	xor    al,0xa7
  405441:	int    0x6d
  405443:	jge    0x40541f
  405445:	jne    0x405462
  405447:	(bad)  
  405448:	pop    ebp
  405449:	or     ebp,ecx
  40544b:	mov    ch,0x7d
  40544d:	sbb    BYTE PTR [esi-0x64],0xa5
  405451:	neg    DWORD PTR [esi]
  405453:	jne    0x5656a100
  405459:	adc    dh,BYTE PTR [eax+ebx*4]
  40545c:	push   esp
  40545d:	jg     0x4054ac
  40545f:	mov    ebp,0x1a75290
  405464:	jl     0x405402
  405466:	push   ebx
  405467:	fdiv   QWORD PTR [ecx+0x52479edf]
  40546d:	test   al,0x48
  40546f:	sbb    al,0xa7
  405471:	sub    BYTE PTR [edx-0x4931c4d2],ch
  405477:	xchg   ecx,eax
  405478:	push   ecx
  405479:	and    DWORD PTR [ebp-0x55],edx
  40547c:	jo     0x40548b
  40547e:	ss hlt 
  405480:	xchg   esp,eax
  405481:	cmc    
  405482:	adc    dl,bl
  405484:	ret    
  405485:	sar    dl,cl
  405487:	jmp    0x405445
  405489:	fldcw  WORD PTR [edx+0x43830c71]
  40548f:	or     al,0x6c
  405491:	inc    ecx
  405492:	pop    ebp
  405493:	mov    BYTE PTR [eax+0x5b],ch
  405496:	and    eax,0x7ef4edba
  40549b:	aas    
  40549c:	push   ss
  40549d:	push   es
  40549e:	xor    cl,BYTE PTR [ebp-0x68]
  4054a1:	push   0x39
  4054a3:	repz push ss
  4054a5:	or     ecx,0xffffffff
  4054a8:	sub    al,BYTE PTR [ebp+0x35]
  4054ab:	sbb    esi,DWORD PTR [edi+ebx*4]
  4054ae:	ficomp WORD PTR [ebx-0x31d96ce0]
  4054b4:	fcomp  DWORD PTR [ecx+0x15535f90]
  4054ba:	lock pop es
  4054bc:	je     0x40546f
  4054be:	outs   dx,BYTE PTR ds:[esi]
  4054bf:	or     ebx,ebx
  4054c1:	add    esi,DWORD PTR [esi+edi*8+0x1241404d]
  4054c8:	mov    eax,ds:0x76f52431
  4054cd:	les    ebx,FWORD PTR [ecx+ecx*1]
  4054d0:	adc    eax,ebx
  4054d2:	imul   edx,DWORD PTR [esp+ebx*8-0x78],0x3a6b03b4
  4054da:	imul   ecx,DWORD PTR gs:[esi],0x1e
  4054de:	xchg   ecx,eax
  4054df:	out    dx,al
  4054e0:	ins    BYTE PTR es:[edi],dx
  4054e1:	or     dh,ch
  4054e3:	jp     0x405467
  4054e5:	cmp    ebx,DWORD PTR [edi+0x2f]
  4054e8:	dec    ebp
  4054e9:	cmp    eax,0xb96a9f1d
  4054ee:	(bad)  
  4054ef:	test   al,0x30
  4054f1:	adc    BYTE PTR [edx+0x69c6960a],0x5f
  4054f8:	fwait
  4054f9:	xchg   ebp,eax
  4054fa:	xor    DWORD PTR ds:0x880c836d,esp
  405500:	sub    bh,BYTE PTR [ebp-0x7cade1ba]
  405506:	mov    ah,BYTE PTR [esi+eax*8]
  405509:	ins    DWORD PTR es:[edi],dx
  40550a:	jge    0x405559
  40550c:	shl    BYTE PTR [ebx-0x1a],0x3a
  405510:	adc    eax,0xc8001b5d
  405515:	jno    0x405566
  405517:	mov    dl,0x7a
  405519:	xor    BYTE PTR [eax+0x73],ch
  40551c:	xchg   edx,eax
  40551d:	stc    
  40551e:	pop    edx
  40551f:	shr    DWORD PTR [ecx+0x51],1
  405522:	pop    ebx
  405523:	call   0x3460:0x5091e0c5
  40552a:	pop    ebp
  40552b:	iret   
  40552c:	popf   
  40552d:	sbb    al,0xd4
  40552f:	mov    DWORD PTR [eax+0x46],ebp
  405532:	push   ss
  405533:	mov    esi,0x2046a8f
  405538:	mov    edi,0xa20fa134
  40553d:	push   ebx
  40553e:	adc    BYTE PTR [eax+0x28],bl
  405541:	test   BYTE PTR [esi],0x68
  405544:	push   cs
  405545:	sbb    BYTE PTR [esi],bl
  405547:	mov    dl,0x91
  405549:	sbb    BYTE PTR [ecx-0x1d],0x8
  40554d:	cmp    al,BYTE PTR [edx-0x10]
  405550:	jp     0x4054fb
  405552:	outs   dx,BYTE PTR ds:[esi]
  405553:	inc    ebx
  405554:	in     eax,0x4e
  405556:	dec    ebp
  405557:	mov    ds:0x42bdb998,eax
  40555c:	in     al,dx
  40555d:	outs   dx,BYTE PTR ds:[esi]
  40555e:	(bad)  
  40555f:	out    dx,eax
  405560:	xor    al,0x60
  405562:	xor    ecx,eax
  405564:	cmp    ebp,ebp
  405566:	into   
  405567:	jge    0x405582
  405569:	xchg   ecx,eax
  40556a:	lods   eax,DWORD PTR ds:[esi]
  40556b:	adc    bh,BYTE PTR [esi-0x79]
  40556e:	or     al,0x44
  405570:	xor    DWORD PTR [edi+0x30877fac],ebp
  405576:	outs   dx,DWORD PTR ds:[esi]
  405577:	cmp    al,0xbf
  405579:	mov    ah,0xf0
  40557b:	mov    eax,es:0x9295286c
  405581:	pusha  
  405582:	jnp    0x405568
  405584:	test   ebx,0xc78bb218
  40558a:	jg     0x405598
  40558c:	loop   0x40555c
  40558e:	sti    
  40558f:	cmp    DWORD PTR [ebx+eiz*8-0x46],eax
  405593:	cmp    eax,0x6901a8a2
  405598:	inc    ecx
  405599:	shl    DWORD PTR [edx-0x6d],1
  40559c:	mov    edx,0x5bead68e
  4055a1:	lods   al,BYTE PTR ds:[esi]
  4055a2:	imul   eax,ebx,0x67
  4055a5:	outs   dx,BYTE PTR ds:[esi]
  4055a6:	bound  eax,QWORD PTR [ebp+0x27]
  4055a9:	idiv   DWORD PTR [eax-0xd]
  4055ac:	faddp  st(5),st
  4055ae:	add    esi,esi
  4055b0:	xor    ch,BYTE PTR [edi]
  4055b2:	sub    al,0xf4
  4055b4:	lock jle 0x40559a
  4055b7:	(bad)  
  4055b8:	mov    ds:0x1634e94a,eax
  4055bd:	in     eax,dx
  4055be:	cmc    
  4055bf:	mov    dl,0xd5
  4055c1:	rcr    dh,1
  4055c3:	cdq    
  4055c4:	dec    esp
  4055c5:	dec    esi
  4055c6:	jle    0x40562a
  4055c8:	enter  0x9075,0x67
  4055cc:	mov    edi,0x53276e67
  4055d1:	push   es
  4055d2:	add    BYTE PTR gs:[ecx+ecx*2],ch
  4055d6:	jnp    0x4055a9
  4055d8:	inc    ebp
  4055d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055da:	pop    ebx
  4055db:	xor    eax,0xa47bb375
  4055e0:	push   edi
  4055e1:	and    dh,BYTE PTR [esi-0x147a4edf]
  4055e7:	mov    DWORD PTR [edi+0x3ae63d7f],edi
  4055ed:	sar    ebp,0xfd
  4055f0:	pop    ss
  4055f1:	mov    eax,0x84c5844
  4055f6:	test   DWORD PTR [edi-0x13],0xffad7a7f
  4055fd:	sub    edi,DWORD PTR [esi-0x7b6ff567]
  405603:	mov    DWORD PTR [ecx+0x70],edx
  405606:	fisttp DWORD PTR [edi-0x30e4108b]
  40560c:	adc    al,BYTE PTR [edx+0x14c552c0]
  405612:	mov    eax,ebp
  405614:	adc    ch,BYTE PTR [eax]
  405616:	jecxz  0x4055bd
  405618:	or     dl,BYTE PTR [ecx+0x618e9cf]
  40561e:	and    esp,DWORD PTR [edi+0x51]
  405621:	imul   ebx,DWORD PTR [ecx-0x62be67c6],0x6bbe52eb
  40562b:	mov    WORD PTR [edi+0x194648c5],ss
  405631:	cmc    
  405632:	sbb    dh,bh
  405634:	or     al,0x8e
  405636:	mov    cl,0x36
  405638:	push   eax
  405639:	int    0xb5
  40563b:	cmp    DWORD PTR [eax+0x1b],esi
  40563e:	pop    ss
  40563f:	imul   eax,ebp,0xffffffa4
  405642:	or     cl,BYTE PTR [esi]
  405644:	test   DWORD PTR ds:0xbf47e507,ebp
  40564a:	ret    
  40564b:	mov    bl,0x3d
  40564d:	inc    esi
  40564e:	cmp    bh,BYTE PTR [ebx-0x6c7405aa]
  405654:	xchg   ebp,eax
  405655:	stos   DWORD PTR es:[edi],eax
  405656:	(bad)  [esp+ebx*8+0x4012d0d]
  40565d:	push   edi
  40565e:	adc    cl,ah
  405660:	sbb    al,BYTE PTR ds:0x1b3b599d
  405666:	in     al,dx
  405667:	adc    dl,BYTE PTR [esi-0x1e]
  40566a:	fidivr WORD PTR [edi+0x19]
  40566d:	lock (bad) 
  40566f:	lods   al,BYTE PTR ds:[esi]
  405670:	loop   0x40566e
  405672:	dec    esp
  405673:	cmc    
  405674:	xchg   esi,eax
  405675:	scas   al,BYTE PTR es:[edi]
  405676:	in     al,0x73
  405678:	push   esp
  405679:	lock and ecx,DWORD PTR [ecx]
  40567c:	mov    ecx,0xb9b42700
  405681:	lea    edx,[eax]
  405683:	pop    es
  405684:	jo     0x40569c
  405686:	hlt    
  405687:	pusha  
  405688:	inc    esp
  405689:	rcl    BYTE PTR [edi],cl
  40568b:	popa   
  40568c:	fisub  WORD PTR [esi+0x5d39fe09]
  405692:	loopne 0x4056c1
  405694:	sub    eax,0xae329832
  405699:	lock dec ecx
  40569b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40569c:	mov    ds:0x21f1d5b1,al
  4056a1:	push   ebx
  4056a2:	call   0x19ba:0x6528e929
  4056a9:	repnz cdq 
  4056ab:	bound  esi,QWORD PTR [edi]
  4056ad:	int3   
  4056ae:	fimul  WORD PTR [esi]
  4056b0:	ja     0x40563b
  4056b2:	cmp    BYTE PTR [ebx-0x78],0xff
  4056b6:	cmp    bl,al
  4056b8:	push   esi
  4056b9:	mov    edx,0xf5e3d570
  4056be:	or     al,0x33
  4056c0:	data16 sub al,0x87
  4056c3:	mov    dl,0x32
  4056c5:	in     eax,0x51
  4056c7:	mov    ds:0x40252e2b,al
  4056cc:	pop    ss
  4056cd:	mov    fs:0x8e45256b,eax
  4056d3:	(bad)  
  4056d4:	sub    al,0x9c
  4056d6:	lds    esp,FWORD PTR [ebp+eax*2+0x2424e6a4]
  4056dd:	cdq    
  4056de:	sub    BYTE PTR [ecx],dh
  4056e0:	imul   ebx
  4056e2:	test   BYTE PTR [edx],0x57
  4056e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056e6:	ja     0x4056b8
  4056e8:	xor    bl,BYTE PTR [edx-0x66]
  4056eb:	sbb    ecx,DWORD PTR [edx]
  4056ed:	loopne 0x4056d1
  4056ef:	jge    0x40568e
  4056f1:	dec    ebp
  4056f2:	sbb    BYTE PTR [ecx+0x52182473],ah
  4056f8:	mov    ds:0x782d769,eax
  4056fd:	jl     0x405735
  4056ff:	cdq    
  405700:	popa   
  405701:	int    0xb1
  405703:	cmp    BYTE PTR [esi+eiz*2+0x3557de5e],dh
  40570a:	inc    DWORD PTR [eax]
  40570c:	pop    ds
  40570d:	dec    edi
  40570e:	push   ss
  40570f:	stos   DWORD PTR es:[edi],eax
  405710:	les    esi,FWORD PTR [ebp+0x5]
  405713:	cld    
  405714:	lock cmp BYTE PTR cs:[esi+0x66],bh
  405719:	(bad)  
  40571a:	xor    al,0x88
  40571c:	out    0xb7,eax
  40571e:	fld    DWORD PTR [edi]
  405720:	les    edx,FWORD PTR [ebp+ebp*8-0x3b]
  405724:	das    
  405725:	out    dx,al
  405726:	outs   dx,DWORD PTR ds:[esi]
  405727:	mov    ebp,DWORD PTR [edx-0x256e507]
  40572d:	and    eax,0x3f00677a
  405732:	fnstenv [edi]
  405734:	or     BYTE PTR [esp+ebx*2+0x12ba158a],dh
  40573b:	pushf  
  40573c:	retf   
  40573d:	imul   edi,DWORD PTR [ecx+edx*4],0xffffffc0
  405741:	xchg   edi,eax
  405742:	and    ebp,DWORD PTR [ecx+0x7a46cab]
  405748:	xchg   BYTE PTR [eax+0x20afbee7],cl
  40574e:	sub    al,0xbe
  405750:	bound  eax,QWORD PTR [edx-0x68]
  405753:	sbb    al,0x97
  405755:	iret   
  405756:	xchg   ebp,eax
  405757:	icebp  
  405758:	mov    cl,ch
  40575a:	fld    TBYTE PTR [ebp+0x6]
  40575d:	mov    bl,0xf8
  40575f:	(bad)  
  405760:	mov    bl,0x91
  405762:	sub    esi,DWORD PTR [edi]
  405764:	jns    0x405736
  405766:	(bad)  
  405767:	shl    DWORD PTR [ebx],cl
  405769:	fisub  DWORD PTR [ecx-0x6]
  40576c:	push   edi
  40576d:	push   edx
  40576e:	cmp    ebp,ecx
  405770:	call   0x263e5b98
  405775:	cli    
  405776:	mov    ds:0x223421f3,eax
  40577b:	in     eax,0x41
  40577d:	(bad)  
  40577f:	data16 sub al,0x15
  405782:	push   edi
  405783:	add    cl,dh
  405785:	outs   dx,DWORD PTR ds:[esi]
  405786:	mov    cl,0xbc
  405788:	inc    edx
  405789:	dec    ebp
  40578a:	mov    eax,0x5726b266
  40578f:	pop    ds
  405790:	sub    ebp,ecx
  405792:	outs   dx,DWORD PTR ds:[esi]
  405793:	mov    ds:0xa5e1d95c,al
  405798:	jb     0x4057aa
  40579a:	addr16 mov ah,0x11
  40579d:	push   cs
  40579e:	in     eax,dx
  40579f:	adc    eax,0xda6b94ee
  4057a4:	cmp    al,0xa1
  4057a6:	out    0x62,eax
  4057a8:	imul   ecx,edi,0x7c0947ad
  4057ae:	imul   edx,eax,0x420040a
  4057b4:	not    BYTE PTR [eax]
  4057b6:	aaa    
  4057b7:	xchg   BYTE PTR [edi],dl
  4057b9:	lds    esp,FWORD PTR [ecx+0x0]
  4057bc:	mov    dh,bl
  4057be:	inc    esi
  4057bf:	xor    bl,dl
  4057c1:	mov    ch,0xde
  4057c3:	jmp    0x9becdd20
  4057c8:	lahf   
  4057c9:	xor    BYTE PTR [esi],bl
  4057cb:	cld    
  4057cc:	xchg   esp,eax
  4057cd:	fst    QWORD PTR [ebx-0x8]
  4057d0:	pop    eax
  4057d1:	aam    0x48
  4057d3:	xchg   DWORD PTR [edx],ebp
  4057d5:	dec    edx
  4057d6:	adc    ch,BYTE PTR [edx+edx*8]
  4057d9:	call   0xa301a991
  4057de:	(bad)  
  4057df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057e0:	add    edi,DWORD PTR [ecx+0x76d10c3c]
  4057e6:	xchg   edi,eax
  4057e7:	arpl   WORD PTR [esi],dx
  4057e9:	ret    0x66e9
  4057ec:	inc    ecx
  4057ed:	dec    edx
  4057ee:	cwde   
  4057ef:	mov    bh,0x31
  4057f1:	xchg   ebx,eax
  4057f2:	std    
  4057f3:	enter  0xf213,0xe
  4057f7:	into   
  4057f8:	mov    bl,0x57
  4057fa:	pop    ecx
  4057fb:	xor    BYTE PTR [esi-0x79],dh
  4057fe:	retf   0x9d44
  405801:	mov    cl,BYTE PTR [edi]
  405803:	inc    ecx
  405804:	out    0xd5,al
  405806:	adc    eax,0x991dc961
  40580b:	lea    edi,[ebx]
  40580d:	ss xor ch,ah
  405810:	ja     0x4057f3
  405812:	add    BYTE PTR [ecx+0x305e1ecb],al
  405818:	jb     0x40580a
  40581a:	call   0xedbf:0x5ab51439
  405821:	nop
  405822:	jg     0x4057d8
  405824:	retf   
  405825:	sahf   
  405826:	xchg   edi,eax
  405827:	stc    
  405828:	aas    
  405829:	add    BYTE PTR [eax],0x6
  40582c:	test   BYTE PTR [edi-0x4],0x85
  405830:	in     al,dx
  405831:	call   0x1b86acdc
  405836:	cmp    al,0xc8
  405838:	mov    ebp,0xc71f08cc
  40583d:	gs iret 
  40583f:	pop    ss
  405840:	out    dx,eax
  405841:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405842:	(bad)  
  405843:	out    0xb7,eax
  405845:	and    ebp,DWORD PTR [esi+0x77]
  405848:	lock add BYTE PTR [edx+0x41],cl
  40584c:	in     al,dx
  40584d:	rcl    BYTE PTR [edx+0x1f2820dc],cl
  405853:	pushf  
  405854:	mov    ch,0xfb
  405856:	xchg   BYTE PTR fs:[ebp-0x66],cl
  40585a:	sbb    edi,DWORD PTR [ebx]
  40585c:	xor    BYTE PTR [ebx+0x392969d6],cl
  405862:	jns    0x405839
  405864:	xor    bl,BYTE PTR [edi-0x665291d4]
  40586a:	inc    eax
  40586b:	sar    DWORD PTR [eax-0x67],1
  40586e:	in     eax,0x56
  405870:	into   
  405871:	lods   eax,DWORD PTR ds:[esi]
  405872:	cmp    DWORD PTR [ecx+0x7368d509],edx
  405878:	jmp    esp
  40587a:	jns    0x4058cb
  40587c:	pop    ds
  40587d:	pop    es
  40587e:	mov    eax,0xaadd3fd0
  405883:	ins    DWORD PTR es:[edi],dx
  405884:	pop    edi
  405885:	loop   0x4058df
  405887:	shl    DWORD PTR [ecx+0x6a],cl
  40588a:	(bad)  
  40588b:	push   edi
  40588c:	aam    0x0
  40588e:	ins    BYTE PTR es:[edi],dx
  40588f:	(bad)  
  405890:	aas    
  405891:	ror    BYTE PTR ds:0x2e57e77,cl
  405897:	(bad)  
  405898:	clc    
  405899:	jne    0x405842
  40589b:	jmp    0xeca1:0x558b4796
  4058a2:	neg    DWORD PTR [edx-0x6]
  4058a5:	and    esp,DWORD PTR [eax-0x51]
  4058a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058a9:	pop    ds
  4058aa:	popf   
  4058ab:	stos   DWORD PTR es:[edi],eax
  4058ac:	cmp    eax,0xfd1cafb4
  4058b1:	retf   
  4058b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058b3:	(bad)  
  4058b4:	push   edi
  4058b5:	pop    es
  4058b6:	lds    eax,FWORD PTR [si]
  4058b9:	ret    
  4058ba:	adc    DWORD PTR [ecx+0x1d],ebx
  4058bd:	ins    DWORD PTR es:[edi],dx
  4058be:	or     BYTE PTR [edi-0x5ae4d2ca],al
  4058c4:	or     eax,0xcb01afe0
  4058c9:	dec    ebx
  4058ca:	aad    0xb5
  4058cc:	xor    ecx,DWORD PTR [ecx+0x74]
  4058cf:	lods   eax,DWORD PTR ds:[esi]
  4058d0:	mov    ebx,0x64a08ddc
  4058d5:	or     ebx,DWORD PTR [edi-0x1df639ae]
  4058db:	mov    ch,0xd
  4058dd:	data16 jg 0x405890
  4058e0:	fdivp  st(7),st
  4058e2:	and    al,0x7c
  4058e4:	in     al,0x97
  4058e6:	xor    ah,BYTE PTR [eax+0x52]
  4058e9:	or     esp,esi
  4058eb:	fcmovbe st,st(0)
  4058ed:	mov    esi,0x860b8d2b
  4058f2:	fdivr  st,st(2)
  4058f4:	mov    WORD PTR [edx+0x21],?
  4058f7:	mov    dl,0x1b
  4058f9:	ss push ss
  4058fb:	push   ebp
  4058fc:	adc    DWORD PTR [edi],esi
  4058fe:	xchg   edi,eax
  4058ff:	sbb    eax,0x94027346
  405904:	mov    ds:0x76e0bbdd,eax
  405909:	mov    edi,DWORD PTR [esi]
  40590b:	jl     0x405906
  40590d:	in     eax,0x13
  40590f:	rcl    al,1
  405911:	xor    al,0x25
  405913:	inc    esp
  405914:	jge    0x4058fb
  405916:	fld    QWORD PTR [ebx-0x6f66b59a]
  40591c:	or     ebp,ebp
  40591e:	or     al,0x7d
  405920:	or     ah,al
  405922:	stc    
  405923:	mov    bh,0xfb
  405925:	push   0xd510c5c
  40592a:	lahf   
  40592b:	push   esp
  40592c:	(bad)  
  40592d:	ins    DWORD PTR es:[edi],dx
  40592e:	stos   DWORD PTR es:[edi],eax
  40592f:	or     esi,ebx
  405931:	xor    ah,al
  405933:	mov    DWORD PTR [ebx],ecx
  405935:	jmp    0xe8bf:0xf8db1f4
  40593c:	add    al,0xa2
  40593e:	scas   eax,DWORD PTR es:[edi]
  40593f:	pop    ss
  405940:	shl    DWORD PTR [edx],1
  405942:	jmp    0x59cb:0xb142c6c3
  405949:	cmp    bl,ah
  40594b:	sub    al,0xeb
  40594d:	pop    edi
  40594e:	and    edi,esi
  405950:	push   ebp
  405951:	push   esp
  405952:	cs aaa 
  405954:	shl    ch,1
  405956:	loope  0x40598d
  405958:	xchg   DWORD PTR [ebx+0x1a],esi
  40595b:	cmp    al,0x18
  40595d:	mov    ah,0xa4
  40595f:	push   esp
  405960:	idiv   BYTE PTR [eax-0x2360e0de]
  405966:	arpl   si,dx
  405968:	in     al,0x43
  40596a:	jg     0x40595d
  40596c:	mov    ecx,0x7c63dfdf
  405971:	out    0x48,eax
  405973:	sti    
  405974:	(bad)  
  405975:	xlat   BYTE PTR ds:[ebx]
  405976:	daa    
  405977:	xchg   DWORD PTR [esp+esi*8],ebx
  40597a:	dec    ebx
  40597b:	pop    esi
  40597c:	lea    eax,[ebx]
  40597e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40597f:	stc    
  405980:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405981:	or     al,0x55
  405983:	add    BYTE PTR [esi-0x9],0xa2
  405987:	jl     0x40590e
  405989:	add    al,0x96
  40598b:	mov    ecx,0x6b286eae
  405990:	dec    ebx
  405991:	cdq    
  405992:	imul   ebp,DWORD PTR [ecx+0x2d],0xffffffe6
  405996:	aas    
  405997:	adc    eax,0x67ce125b
  40599c:	pop    es
  40599d:	in     eax,0x74
  40599f:	lea    edi,[ebx-0x31b627c8]
  4059a5:	pop    ds
  4059a6:	mov    ds:0x100caa7f,eax
  4059ab:	cmp    BYTE PTR [esi],0x81
  4059ae:	imul   ebx,DWORD PTR [eax],0xbe5f938a
  4059b4:	or     BYTE PTR [ebx],dl
  4059b6:	repnz lea ecx,[ebx+0x3143200b]
  4059bd:	push   es
  4059be:	call   DWORD PTR [esp+edi*4+0x6b]
  4059c2:	xlat   BYTE PTR ds:[ebx]
  4059c3:	mov    ds:0x84f32cc4,al
  4059c8:	sbb    dl,BYTE PTR [esi+0x14]
  4059cb:	pop    esi
  4059cc:	mov    esp,0x20d28d71
  4059d1:	sar    DWORD PTR [eax-0x36f01055],0x40
  4059d8:	in     al,0x7a
  4059da:	adc    BYTE PTR [ecx+edx*8+0x6c],0x9e
  4059df:	cmc    
  4059e0:	xchg   BYTE PTR [edx+0x3],ch
  4059e3:	das    
  4059e4:	jle    0x405a56
  4059e6:	out    dx,al
  4059e7:	int    0xb4
  4059e9:	mov    ebx,0xf800abb0
  4059ee:	sub    eax,0xf99a370d
  4059f3:	leave  
  4059f4:	xchg   ebx,eax
  4059f5:	test   ebx,esp
  4059f7:	test   eax,0x578269a6
  4059fc:	nop
  4059fd:	mov    esi,0xb209fc8
  405a02:	iret   
  405a03:	jle    0x405a1a
  405a05:	ror    BYTE PTR [ebx+0x45],0x87
  405a09:	data16 jg 0x405a75
  405a0c:	into   
  405a0d:	gs jns 0x405a51
  405a10:	jle    0x405a5c
  405a12:	sub    dh,BYTE PTR [ebx+0x25]
  405a15:	ins    BYTE PTR es:[edi],dx
  405a16:	leave  
  405a17:	mov    edx,0x74295eb8
  405a1c:	xor    ch,BYTE PTR [ecx-0x11]
  405a1f:	or     eax,0x18ee3a48
  405a24:	fnstcw WORD PTR [ebx+0x5c3f50aa]
  405a2a:	lock add dl,cl
  405a2d:	data16 and al,BYTE PTR [ebx]
  405a30:	arpl   si,si
  405a32:	cmp    ecx,esi
  405a34:	test   DWORD PTR [ecx+0x76],esi
  405a37:	sar    DWORD PTR [ebp+0x56338a12],0x34
  405a3e:	pop    ss
  405a3f:	push   0xffffffdf
  405a41:	idiv   dl
  405a43:	aam    0xdf
  405a45:	jl     0x4059cc
  405a47:	mov    ecx,0xbedbb591
  405a4c:	push   eax
  405a4d:	in     al,dx
  405a4e:	lock dec esi
  405a50:	xor    esp,DWORD PTR [ebx-0x27]
  405a53:	(bad)  
  405a54:	push   DWORD PTR [edx]
  405a56:	sbb    DWORD PTR [edi-0x20],eax
  405a59:	cmp    BYTE PTR [edx+0x26c6fb2d],bl
  405a5f:	sbb    DWORD PTR ds:0xba08dce8,0x51b7afea
  405a69:	dec    ebp
  405a6a:	rol    DWORD PTR [eax+0x549fd373],cl
  405a70:	add    dh,BYTE PTR [edi+0x2502dfef]
  405a76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a77:	fnstenv [eax-0x30]
  405a7a:	jno    0x405a16
  405a7c:	xlat   BYTE PTR ds:[ebx]
  405a7d:	imul   eax,DWORD PTR [esi+0x0],0xbeb05951
  405a84:	fdivr  DWORD PTR [ebp-0x1dea75e7]
  405a8a:	(bad)  
  405a8b:	lock iret 
  405a8d:	sbb    eax,0x5b2795ca
  405a92:	ja     0x405aa7
  405a94:	ret    0xc146
  405a97:	sub    cl,ah
  405a99:	jmp    0xfb23:0xba1e05c6
  405aa0:	sub    dl,BYTE PTR [esi+eax*2-0x6a]
  405aa4:	xchg   DWORD PTR [eax+0x62],esp
  405aa7:	inc    ebx
  405aa8:	leave  
  405aa9:	and    DWORD PTR [esi+0x6],ebp
  405aac:	push   ebp
  405aad:	test   eax,0x95af16ad
  405ab2:	les    ecx,FWORD PTR [eax-0x48e41d9c]
  405ab8:	add    ch,BYTE PTR [esi-0x13be3177]
  405abe:	mov    cl,0x33
  405ac0:	inc    esi
  405ac1:	scas   eax,DWORD PTR es:[edi]
  405ac2:	pop    esi
  405ac3:	xchg   esp,eax
  405ac4:	pushf  
  405ac5:	adc    al,0x7
  405ac7:	or     dl,bl
  405ac9:	cwde   
  405aca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405acb:	mov    ah,0x61
  405acd:	push   ss
  405ace:	pop    esp
  405acf:	and    BYTE PTR [ebp-0x38],ch
  405ad2:	mov    ?,WORD PTR [ebp-0x3d]
  405ad5:	(bad)  
  405ad6:	push   edi
  405ad7:	push   es
  405ad8:	cmp    al,0x2f
  405ada:	lea    ebx,[ebx+0x2b]
  405add:	xlat   BYTE PTR ds:[ebx]
  405ade:	into   
  405adf:	inc    eax
  405ae0:	push   ebp
  405ae1:	repz push ebx
  405ae3:	dec    edi
  405ae4:	out    0xc0,al
  405ae6:	(bad)  [edx-0x7bfe822d]
  405aec:	icebp  
  405aed:	(bad)  
  405aee:	icebp  
  405aef:	int3   
  405af0:	push   esi
  405af1:	xor    ebp,DWORD PTR [si]
  405af4:	daa    
  405af5:	jmp    0x12cd:0x7a730ba0
  405afc:	jg     0x405a90
  405afe:	es pop es
  405b00:	xchg   edx,eax
  405b01:	fadd   QWORD PTR [edi]
  405b03:	sub    eax,0x578a7784
  405b08:	aaa    
  405b09:	and    DWORD PTR [esi+0x1],ebx
  405b0c:	loope  0x405b15
  405b0e:	test   eax,0x8bb2efbf
  405b13:	stos   BYTE PTR es:[edi],al
  405b14:	push   ds
  405b15:	das    
  405b16:	add    eax,0x62b2d3fc
  405b1b:	add    DWORD PTR [edi+0x70],0x8
  405b1f:	push   ss
  405b20:	cmp    BYTE PTR [ebp+0x2fd676fd],bh
  405b26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b27:	dec    edx
  405b28:	in     eax,0x70
  405b2a:	(bad)  
  405b2b:	arpl   cx,sp
  405b2d:	inc    edi
  405b2f:	les    ebx,FWORD PTR [ecx-0x41]
  405b32:	repnz retf 0x326e
  405b36:	pop    ds
  405b37:	xlat   BYTE PTR ds:[ebx]
  405b38:	dec    eax
  405b39:	mov    WORD PTR [eax-0x11],cs
  405b3c:	loopne 0x405ba9
  405b3e:	cmp    eax,0x1aed29f0
  405b43:	js     0x405b13
  405b45:	adc    ebp,ebx
  405b47:	sub    eax,0x23f6274
  405b4c:	cmovae eax,DWORD PTR [esp+ebx*8]
  405b50:	gs mov dh,0x34
  405b53:	dec    esp
  405b54:	add    edx,edi
  405b56:	mov    dl,0x3f
  405b58:	test   BYTE PTR [ecx],dh
  405b5a:	mov    dh,0xba
  405b5c:	adc    al,0xe3
  405b5e:	add    ecx,ebp
  405b60:	test   al,0x84
  405b62:	(bad)  
  405b63:	mov    esi,0x4c79f8cc
  405b68:	in     eax,0x4e
  405b6a:	test   DWORD PTR [eax-0x6954e69f],0xcea28f16
  405b74:	outs   dx,BYTE PTR ds:[esi]
  405b75:	xlat   BYTE PTR ds:[ebx]
  405b76:	loopne 0x405b21
  405b78:	adc    esp,ecx
  405b7a:	in     al,dx
  405b7b:	sub    al,0x12
  405b7d:	out    0x5d,al
  405b7f:	je     0x405b4c
  405b81:	and    eax,0xdfae0319
  405b86:	inc    ebx
  405b87:	xor    al,0x6a
  405b89:	xor    edx,DWORD PTR [esi-0x1f20b0b1]
  405b8f:	daa    
  405b90:	pop    esi
  405b91:	(bad)  
  405b92:	dec    ecx
  405b93:	jge    0x405b82
  405b95:	enter  0x7b60,0xc8
  405b99:	retf   
  405b9a:	aad    0x58
  405b9c:	in     eax,0x61
  405b9e:	mov    ch,0xef
  405ba0:	fnstsw WORD PTR [eax]
  405ba2:	dec    edi
  405ba3:	pop    eax
  405ba4:	int    0xe4
  405ba6:	adc    DWORD PTR [eiz*8+0x37c7940e],ebx
  405bad:	add    al,0xaf
  405baf:	add    DWORD PTR [ebp+eiz*8+0x6e1c7520],esp
  405bb6:	jnp    0x405c2c
  405bb8:	or     BYTE PTR ds:0xf74f762f,cl
  405bbe:	idiv   DWORD PTR [ecx-0x23373dab]
  405bc4:	pop    ebx
  405bc5:	adc    eax,0xc85347ad
  405bca:	in     eax,dx
  405bcb:	mov    ah,0x54
  405bcd:	iret   
  405bce:	sbb    dl,0x9b
  405bd1:	out    dx,al
  405bd2:	daa    
  405bd3:	into   
  405bd4:	xlat   BYTE PTR ds:[ebx]
  405bd5:	lds    edx,FWORD PTR [eax]
  405bd7:	and    al,0xd2
  405bd9:	and    eax,0x969fae63
  405bde:	push   edx
  405bdf:	mov    esi,0x8ed97785
  405be4:	out    dx,eax
  405be5:	inc    eax
  405be6:	div    DWORD PTR [ecx-0x30]
  405be9:	and    dh,ch
  405beb:	stos   BYTE PTR es:[edi],al
  405bec:	sub    al,0x94
  405bee:	js     0x405bbd
  405bf0:	inc    edi
  405bf1:	jp     0x405c3e
  405bf3:	or     eax,0x6c0d8013
  405bf8:	mov    bl,dh
  405bfa:	pop    es
  405bfb:	jle    0x405c28
  405bfd:	adc    al,0x69
  405bff:	mov    eax,ds:0x82731f6e
  405c04:	icebp  
  405c05:	xor    al,0xd1
  405c07:	shl    BYTE PTR [esi],1
  405c09:	inc    eax
  405c0a:	push   ecx
  405c0b:	mov    al,ds:0x9a7d0267
  405c10:	push   0xffffffb3
  405c12:	enter  0x553f,0x3
  405c16:	or     BYTE PTR [edi-0x22],ch
  405c19:	and    DWORD PTR [esi+0x2af385a],ebx
  405c1f:	cmp    eax,0x39821e63
  405c24:	les    ebp,FWORD PTR [eax+0x39]
  405c27:	push   eax
  405c28:	fwait
  405c29:	push   edx
  405c2a:	ds jle 0x405bb0
  405c2d:	int    0x92
  405c2f:	push   ebp
  405c30:	stos   BYTE PTR es:[edi],al
  405c31:	xchg   edx,eax
  405c32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c33:	fadd   DWORD PTR [ebp-0x16]
  405c36:	inc    ecx
  405c37:	lea    eax,[ecx]
  405c39:	jno    0x405c9c
  405c3b:	sbb    al,0xf3
  405c3d:	add    DWORD PTR [ebp-0x47],0xffffff8b
  405c41:	(bad)  
  405c42:	iret   
  405c43:	cdq    
  405c44:	add    eax,0x95b743da
  405c49:	imul   esp,DWORD PTR [eax+0x70b06613],0xffffffc6
  405c50:	xchg   BYTE PTR [eax-0x7a],bl
  405c53:	imul   ebp,DWORD PTR [eax+0x430b2c34],0xffffff83
  405c5a:	jns    0x405ca2
  405c5c:	enter  0x1892,0x65
  405c60:	repnz bound esp,QWORD PTR [ebp-0x27]
  405c64:	shl    DWORD PTR [esi],1
  405c66:	lds    eax,FWORD PTR [edx]
  405c68:	cmp    BYTE PTR [ecx],0x5e
  405c6b:	dec    ebp
  405c6c:	sub    DWORD PTR [ecx+0x50],eax
  405c6f:	sub    ah,BYTE PTR [ebp+0x2c]
  405c72:	or     al,0xf5
  405c74:	jl     0x405ced
  405c76:	sub    cl,BYTE PTR [edx]
  405c78:	dec    esi
  405c79:	and    bh,al
  405c7b:	popf   
  405c7c:	xchg   edi,eax
  405c7d:	and    DWORD PTR [esi+eax*4-0x7fb20f59],ebx
  405c84:	call   0xbc04b019
  405c89:	sbb    BYTE PTR [eax-0x6ec37a86],al
  405c8f:	xor    BYTE PTR [eax-0x57],cl
  405c92:	mov    ebx,0xc80448e2
  405c97:	shl    DWORD PTR [esi+0x73],cl
  405c9a:	cwde   
  405c9b:	sti    
  405c9c:	and    ebx,DWORD PTR [edx]
  405c9e:	dec    ecx
  405c9f:	fst    QWORD PTR [ecx+edx*4-0x2a]
  405ca3:	lock ja 0x405cc9
  405ca6:	js     0x405d27
  405ca8:	mov    ds:0xb14f9550,eax
  405cad:	mov    DWORD PTR [edi+eiz*1-0x55456d62],ebp
  405cb4:	cmp    al,0x37
  405cb6:	mov    bl,0xe0
  405cb8:	push   ebp
  405cb9:	leave  
  405cba:	(bad)  
  405cbb:	nop
  405cbc:	jl     0x405cd8
  405cbe:	nop
  405cbf:	scas   eax,DWORD PTR es:[edi]
  405cc0:	push   0xffffffbc
  405cc2:	lods   eax,DWORD PTR ds:[esi]
  405cc3:	push   ecx
  405cc4:	push   eax
  405cc5:	adc    cl,BYTE PTR [ecx]
  405cc7:	lods   eax,DWORD PTR ds:[esi]
  405cc8:	or     eax,0x1c4d32ed
  405ccd:	sar    BYTE PTR [ecx-0x71951d30],cl
  405cd3:	sub    BYTE PTR [edx+0x3299be52],ah
  405cd9:	jmp    0x250b766c
  405cde:	and    eax,0xc6d6e992
  405ce3:	dec    esi
  405ce4:	imul   ebx,eax,0xf2b3b438
  405cea:	shl    DWORD PTR [ecx],1
  405cec:	nop
  405ced:	sub    edi,DWORD PTR [ecx-0x72]
  405cf0:	pushf  
  405cf1:	pushf  
  405cf2:	mov    al,BYTE PTR [edx]
  405cf4:	adc    DWORD PTR [esi-0x6c],edx
  405cf7:	je     0x405d6e
  405cf9:	or     edi,edx
  405cfb:	in     al,0x1
  405cfd:	pop    esp
  405cfe:	inc    esi
  405cff:	xchg   ebx,eax
  405d00:	dec    eax
  405d01:	ins    DWORD PTR es:[edi],dx
  405d02:	or     DWORD PTR [ebx+eax*8+0xe6ff01c],edx
  405d09:	dec    ebx
  405d0a:	mov    ebp,0x3fcba783
  405d0f:	pushf  
  405d10:	neg    DWORD PTR ds:[esi+0x1708d3c2]
  405d17:	sbb    ch,dh
  405d19:	or     DWORD PTR [esi+edx*2+0x5f7d4b50],edx
  405d20:	hlt    
  405d21:	sbb    eax,0x36295edc
  405d26:	cdq    
  405d27:	jbe    0x405d2e
  405d29:	retf   
  405d2a:	pop    ss
  405d2b:	pop    DWORD PTR [ebx-0x27]
  405d2e:	ins    BYTE PTR es:[edi],dx
  405d2f:	mov    gs,WORD PTR cs:[ebx-0x86f9ec1]
  405d36:	pusha  
  405d37:	inc    ecx
  405d38:	mov    al,ds:0xccf484d6
  405d3d:	mov    esi,0xa32adfab
  405d42:	fs push ss
  405d44:	jno    0x405d40
  405d46:	add    BYTE PTR [ecx],bh
  405d48:	enter  0xcc78,0x19
  405d4c:	(bad)
  405d4f:	bound  esp,QWORD PTR [eax*1-0x43f223a4]
  405d56:	ds enter 0xd65,0xc2
  405d5b:	in     al,0xc0
  405d5d:	add    eax,0x119d735b
  405d62:	jo     0x405d9e
  405d64:	jae    0x405d3d
  405d66:	xchg   ecx,eax
  405d67:	pop    es
  405d68:	out    dx,eax
  405d69:	mov    ds:0xde95c926,al
  405d6e:	imul   edi,DWORD PTR [edx-0x36],0x90fe57e8
  405d75:	jecxz  0x405da6
  405d77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d78:	sbb    BYTE PTR [esi+ebx*4],bl
  405d7b:	or     eax,0x238df997
  405d80:	mov    eax,ds:0x92e40e04
  405d85:	scas   al,BYTE PTR es:[edi]
  405d86:	int    0xc8
  405d88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d89:	(bad)  
  405d8a:	adc    BYTE PTR [edx],ch
  405d8c:	popf   
  405d8d:	rcr    edx,cl
  405d8f:	mov    esi,0x9f80996
  405d94:	loopne 0x405e13
  405d96:	mov    al,BYTE PTR [edi-0x19]
  405d99:	jns    0x405d4f
  405d9b:	mov    al,ds:0x108248d0
  405da0:	sysret 
  405da2:	sbb    edx,DWORD PTR [ebx+0x2c]
  405da5:	(bad)  
  405da6:	mov    ds:0x74c69bf4,eax
  405dab:	dec    esi
  405dac:	xor    eax,0x1eddecd0
  405db1:	mov    ecx,0xc66005ae
  405db6:	inc    edi
  405db7:	cmovae edi,DWORD PTR [ebx]
  405dba:	test   BYTE PTR [edi-0x34594f3f],ah
  405dc0:	jg     0x405da3
  405dc2:	jp     0x405d8d
  405dc4:	inc    edi
  405dc5:	mov    ds:0x68b69459,eax
  405dca:	xor    al,0xe8
  405dcc:	mov    esp,0x43bb8bc8
  405dd1:	and    bl,al
  405dd3:	xor    BYTE PTR [ecx],ch
  405dd5:	xchg   esi,ebx
  405dd7:	es pop ebp
  405dd9:	test   al,0x75
  405ddb:	cmp    BYTE PTR [edi+0x2c],dl
  405dde:	jecxz  0x405dfe
  405de0:	jns    0x405e0e
  405de2:	imul   ecx,DWORD PTR [edx-0xa158e0f],0x40
  405de9:	dec    esi
  405dea:	jbe    0x405e35
  405dec:	pop    edi
  405ded:	iret   
  405dee:	(bad)  
  405def:	jae    0x405df5
  405df1:	test   al,0xb0
  405df3:	dec    edx
  405df4:	out    dx,al
  405df5:	and    BYTE PTR [esp+edi*1-0x59e72569],bl
  405dfc:	push   edx
  405dfd:	(bad)  [edi-0x212e6050]
  405e03:	mov    dl,0x60
  405e05:	int    0xa7
  405e07:	aaa    
  405e08:	fisttp DWORD PTR [ebp-0x1c1bdb8e]
  405e0e:	mov    ebx,0xf204fa35
  405e13:	and    edx,DWORD PTR [eax+0x1a77976a]
  405e19:	jne    0x405ddc
  405e1b:	xor    al,0x8
  405e1d:	int3   
  405e1e:	xchg   ecx,eax
  405e1f:	jge    0x405e13
  405e21:	mov    ecx,0x414826cb
  405e26:	fidiv  DWORD PTR [edx-0x56]
  405e29:	mov    eax,0xa9b7f0b5
  405e2e:	jno    0x405e12
  405e30:	push   ss
  405e31:	dec    ecx
  405e32:	dec    esp
  405e33:	repnz (bad) 
  405e35:	xor    cl,BYTE PTR [edx+0x4e]
  405e38:	xchg   edi,eax
  405e39:	fdiv   DWORD PTR [ecx+0x47]
  405e3c:	mov    bl,0xe9
  405e3e:	adc    eax,0x5c35f019
  405e43:	xcrypt-cfb (bad)
  405e44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e45:	daa    
  405e46:	cmp    esi,eax
  405e48:	sbb    cl,BYTE PTR [eax+0x2e85347e]
  405e4e:	sbb    ecx,DWORD PTR [esi-0x1bd11907]
  405e54:	fdiv   QWORD PTR [esi]
  405e56:	lods   al,BYTE PTR ds:[esi]
  405e57:	std    
  405e58:	xor    edx,eax
  405e5a:	mov    ebp,0x25a0e9f2
  405e5f:	cld    
  405e60:	loopne 0x405ebe
  405e62:	and    esp,DWORD PTR [ecx+0x42a8c7b8]
  405e68:	dec    ebp
  405e69:	cmp    al,dl
  405e6b:	cmp    eax,0x4471570e
  405e70:	xchg   DWORD PTR [ecx+0x7f],edx
  405e73:	pop    ebx
  405e74:	mov    bl,ah
  405e76:	cmp    ah,BYTE PTR [ebp-0x18]
  405e79:	loop   0x405e9d
  405e7b:	and    al,0xb4
  405e7d:	push   edx
  405e7e:	xor    eax,DWORD PTR [edx+0x42]
  405e81:	mov    esp,ebp
  405e83:	(bad)  
  405e84:	loop   0x405eae
  405e86:	pusha  
  405e87:	sub    al,0x26
  405e89:	(bad)  
  405e8a:	aam    0x39
  405e8c:	xchg   edx,eax
  405e8d:	lods   eax,DWORD PTR ds:[esi]
  405e8e:	push   cs
  405e8f:	sbb    ecx,esi
  405e91:	test   DWORD PTR [eax-0x7854f492],esp
  405e97:	push   esp
  405e98:	out    0xd2,eax
  405e9a:	mov    ebx,0xb22e7c92
  405e9f:	fsub   DWORD PTR [ecx+0x4b30f8e6]
  405ea5:	shr    DWORD PTR [eax-0x34fd96d5],1
  405eab:	sub    ah,BYTE PTR [eax+eax*4]
  405eae:	jae    0x405e98
  405eb0:	out    dx,eax
  405eb1:	loope  0x405e56
  405eb3:	add    eax,0xcab84926
  405eb8:	lods   eax,DWORD PTR ds:[esi]
  405eb9:	or     esi,DWORD PTR [ebx]
  405ebb:	cli    
  405ebc:	mov    bl,0xc2
  405ebe:	and    al,0xac
  405ec0:	dec    edx
  405ec1:	or     al,bh
  405ec3:	inc    esp
  405ec4:	dec    edx
  405ec5:	lds    ebp,FWORD PTR [edi]
  405ec7:	pusha  
  405ec8:	shl    BYTE PTR [edi],0xe2
  405ecb:	adc    BYTE PTR ds:0x4e27730c,ch
  405ed1:	ins    DWORD PTR es:[edi],dx
  405ed2:	inc    edx
  405ed3:	push   ebx
  405ed4:	xor    esp,DWORD PTR [edx+0x39bc86fd]
  405eda:	lds    eax,FWORD PTR [eax]
  405edc:	and    DWORD PTR [edx+0x394f53dc],0x429866dd
  405ee6:	pop    esp
  405ee7:	xor    DWORD PTR [ebx+0x7e],edi
  405eea:	cmc    
  405eeb:	fsubr  QWORD PTR [ebx-0x64e44ada]
  405ef1:	xor    bh,BYTE PTR [edi+0x6c]
  405ef4:	sbb    DWORD PTR [edi],ebp
  405ef6:	jmp    0x36bc:0xd03d7d4d
  405efd:	xor    BYTE PTR [eax+0x2e],cl
  405f00:	dec    edx
  405f01:	adc    al,0x48
  405f03:	jp     0x97018a56
  405f09:	xor    al,0xb9
  405f0b:	(bad)  
  405f0c:	(bad)
  405f11:	loope  0x405f67
  405f13:	jge    0x405f5b
  405f15:	mov    cl,0xe7
  405f17:	das    
  405f18:	or     DWORD PTR [ebp-0x3501b4ce],ecx
  405f1e:	push   ebx
  405f1f:	fwait
  405f20:	rol    DWORD PTR ds:0x78a630c0,0xae
  405f27:	or     BYTE PTR [edi],dl
  405f29:	sub    esp,DWORD PTR ds:0x818dacbc
  405f2f:	mov    WORD PTR [ebx-0x2fccf7ab],cs
  405f35:	inc    ecx
  405f36:	inc    DWORD PTR [ebp-0x18]
  405f39:	add    edx,esi
  405f3b:	cmp    ecx,edx
  405f3d:	jb     0x403b83
  405f43:	jmp    0x405f8d
  405f48:	mov    ecx,DWORD PTR [ebp-0xc]
  405f4b:	mov    DWORD PTR [ebp+0x8],ecx
  405f4e:	jmp    0x405f80
  405f53:	mov    ecx,DWORD PTR [ebp+0x8]
  405f56:	mov    edx,DWORD PTR [ebp-0x8]
  405f59:	xor    ecx,eax
  405f5b:	xor    edx,eax
  405f5d:	sub    ecx,edx
  405f5f:	sub    ecx,esi
  405f61:	xor    ecx,eax
  405f63:	mov    DWORD PTR [ebp+0x8],ecx
  405f66:	mov    ecx,DWORD PTR [ebp+0x8]
  405f69:	mov    edx,DWORD PTR [ebp+0x8]
  405f6c:	imul   edx,edx,0x5708f5
  405f72:	xor    ecx,eax
  405f74:	add    ecx,esi
  405f76:	lea    ecx,[ebp+ecx*4-0x64]
  405f7a:	mov    edi,DWORD PTR [ecx]
  405f7c:	add    edx,edi
  405f7e:	mov    DWORD PTR [ecx],edx
  405f80:	mov    ecx,DWORD PTR [ebp+0x8]
  405f83:	xor    ecx,eax
  405f85:	add    ecx,esi
  405f87:	jne    0x405f53
  405f8d:	mov    ecx,DWORD PTR [ebp-0xc]
  405f90:	mov    DWORD PTR [ebp+0x8],ecx
  405f93:	jmp    0x405fc5
  405f98:	mov    ecx,DWORD PTR [ebp+0x8]
  405f9b:	mov    edx,DWORD PTR [ebp-0x8]
  405f9e:	xor    ecx,eax
  405fa0:	xor    edx,eax
  405fa2:	sub    ecx,edx
  405fa4:	sub    ecx,esi
  405fa6:	xor    ecx,eax
  405fa8:	mov    DWORD PTR [ebp+0x8],ecx
  405fab:	mov    ecx,DWORD PTR [ebp+0x8]
  405fae:	mov    edx,DWORD PTR [ebp+0x8]
  405fb1:	imul   edx,edx,0x5708f5
  405fb7:	xor    ecx,eax
  405fb9:	add    ecx,esi
  405fbb:	lea    ecx,[ebp+ecx*4-0x64]
  405fbf:	mov    edi,DWORD PTR [ecx]
  405fc1:	add    edx,edi
  405fc3:	mov    DWORD PTR [ecx],edx
  405fc5:	mov    ecx,DWORD PTR [ebp+0x8]
  405fc8:	xor    ecx,eax
  405fca:	add    ecx,esi
  405fcc:	jne    0x405f98
  405fd2:	mov    ecx,DWORD PTR [ebp-0x8]
  405fd5:	mov    edx,DWORD PTR [ebp-0x20]
  405fd8:	xor    ecx,eax
  405fda:	lea    ecx,[ecx+edx*1+0x3272db]
  405fe1:	mov    DWORD PTR [ebp-0x20],ecx
  405fe4:	inc    DWORD PTR [ebp+0xc]
  405fe7:	mov    ecx,DWORD PTR [ebp-0x1c]
  405fea:	xor    ecx,eax
  405fec:	add    ecx,esi
  405fee:	jne    0x401627
  405ff4:	jmp    0x40607d
  405ff9:	mov    ecx,DWORD PTR [ebp-0xc]
  405ffc:	mov    DWORD PTR [ebp+0x8],ecx
  405fff:	jmp    0x406031
  406004:	mov    ecx,DWORD PTR [ebp+0x8]
  406007:	mov    edx,DWORD PTR [ebp-0x8]
  40600a:	xor    ecx,eax
  40600c:	xor    edx,eax
  40600e:	sub    ecx,edx
  406010:	sub    ecx,esi
  406012:	xor    ecx,eax
  406014:	mov    DWORD PTR [ebp+0x8],ecx
  406017:	mov    ecx,DWORD PTR [ebp+0x8]
  40601a:	mov    edx,DWORD PTR [ebp+0x8]
  40601d:	imul   edx,edx,0x5708f5
  406023:	xor    ecx,eax
  406025:	add    ecx,esi
  406027:	lea    ecx,[ebp+ecx*4-0x64]
  40602b:	mov    edi,DWORD PTR [ecx]
  40602d:	add    edx,edi
  40602f:	mov    DWORD PTR [ecx],edx
  406031:	mov    ecx,DWORD PTR [ebp+0x8]
  406034:	xor    ecx,eax
  406036:	add    ecx,esi
  406038:	jne    0x406004
  40603e:	jmp    0x406089
  406043:	mov    ecx,DWORD PTR [ebp+0x8]
  406046:	mov    edx,DWORD PTR [ebp-0x8]
  406049:	xor    ecx,eax
  40604b:	xor    edx,eax
  40604d:	sub    ecx,edx
  40604f:	sub    ecx,esi
  406051:	xor    ecx,eax
  406053:	mov    DWORD PTR [ebp+0x8],ecx
  406056:	mov    ecx,DWORD PTR [ebp+0x8]
  406059:	mov    edx,DWORD PTR [ebp+0x8]
  40605c:	xor    ecx,eax
  40605e:	imul   edx,edx,0x5708f5
  406064:	add    ecx,esi
  406066:	lea    ecx,[ebp+ecx*4-0x64]
  40606a:	mov    edi,DWORD PTR [ecx]
  40606c:	add    edx,edi
  40606e:	mov    DWORD PTR [ecx],edx
  406070:	mov    ecx,DWORD PTR [ebp+0x8]
  406073:	xor    ecx,eax
  406075:	add    ecx,esi
  406077:	jne    0x406043
  40607d:	mov    ecx,DWORD PTR [ebp-0x8]
  406080:	xor    ecx,eax
  406082:	mov    eax,DWORD PTR [ebp+0x10]
  406085:	add    ecx,esi
  406087:	mov    DWORD PTR [eax],ecx
  406089:	pop    edi
  40608a:	jmp    0x40840d
  40608f:	inc    edx
  406090:	push   0x14
  406092:	add    DWORD PTR [ebx+ebp*2+0x53],esp
  406096:	imul   eax,esi,0xcaa0f463
  40609c:	push   ds
  40609d:	scas   al,BYTE PTR es:[edi]
  40609e:	aaa    
  40609f:	mov    dh,0x3c
  4060a1:	bound  esp,QWORD PTR [edx+0x1c]
  4060a4:	pop    edi
  4060a5:	bound  esp,QWORD PTR [edx-0x69]
  4060a8:	or     al,0xd9
  4060aa:	or     eax,0x92d2a317
  4060af:	repnz (bad) 
  4060b1:	jo     0x406060
  4060b3:	jp     0x4060c7
  4060b5:	repz loop 0x406044
  4060b8:	inc    esp
  4060b9:	std    
  4060ba:	data16 and ah,dl
  4060bd:	xor    eax,0x4f37d44f
  4060c2:	pop    ss
  4060c3:	xchg   ebx,eax
  4060c4:	cmp    bl,BYTE PTR [eax]
  4060c6:	imul   ebp,DWORD PTR [esi],0xffffffb7
  4060c9:	clc    
  4060ca:	lea    ecx,[ebx+0x64a014a1]
  4060d0:	inc    BYTE PTR [esp+ebx*4+0x7bacb308]
  4060d7:	repnz push cs
  4060d9:	dec    edi
  4060da:	mov    al,0x53
  4060dc:	out    dx,al
  4060dd:	and    DWORD PTR [edx+edi*1-0x4ed8b8f7],ebx
  4060e4:	fild   WORD PTR [ebp-0x4655c3c9]
  4060ea:	xchg   ecx,eax
  4060eb:	mov    esp,0xf844da55
  4060f0:	push   ecx
  4060f1:	in     al,dx
  4060f2:	std    
  4060f3:	push   esp
  4060f4:	and    edi,DWORD PTR [esi]
  4060f6:	call   0x7a6a922d
  4060fb:	jmp    0x39e1:0xbfcdb100
  406102:	inc    esp
  406103:	inc    ecx
  406104:	mov    DWORD PTR [ebx+ebp*2-0xe],edx
  406108:	lahf   
  406109:	or     al,0x85
  40610b:	test   edi,0xe37d8fee
  406111:	int    0x50
  406113:	adc    eax,0xa326e471
  406118:	sub    BYTE PTR [ebx+0x2b],al
  40611b:	cwde   
  40611c:	mov    eax,0x5642b571
  406121:	mov    esi,0xcdfd0574
  406126:	or     BYTE PTR [edi-0x21dbc8c6],ch
  40612c:	push   esp
  40612d:	cmp    BYTE PTR [edx+0x39],cl
  406130:	push   edi
  406131:	inc    ebx
  406132:	aaa    
  406133:	push   esi
  406134:	push   esp
  406135:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406136:	push   es
  406137:	(bad)  
  406138:	aas    
  406139:	dec    eax
  40613a:	push   ebp
  40613b:	ror    DWORD PTR [edx+0x4f],cl
  40613e:	or     DWORD PTR [edi-0x73],ebp
  406141:	out    0x60,eax
  406143:	cld    
  406144:	cwde   
  406145:	repz xchg ecx,eax
  406147:	pushf  
  406148:	sahf   
  406149:	call   0xec816aa7
  40614e:	dec    ecx
  40614f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406150:	inc    eax
  406151:	xchg   edx,eax
  406152:	and    edx,DWORD PTR [eax+0x417e767d]
  406158:	xchg   esp,eax
  406159:	push   0xfeb3a45d
  40615e:	fcmove st,st(7)
  406160:	mov    eax,0x73aecf68
  406165:	add    eax,0x4b99287b
  40616a:	jne    0x406193
  40616c:	mov    eax,0xf433c877
  406171:	into   
  406172:	cli    
  406173:	imul   ecx,DWORD PTR [edx],0xffffffdc
  406176:	sbb    DWORD PTR [ebx],0x86cdd894
  40617c:	enter  0x7113,0x1c
  406180:	in     al,dx
  406181:	mov    ah,ch
  406183:	fs mov edi,0x7b524c55
  406189:	jns    0x4061cf
  40618b:	nop
  40618c:	push   ds
  40618d:	sbb    edi,0x70
  406190:	cmp    al,0xe7
  406192:	fadd   QWORD PTR [ebp-0x33de44b1]
  406198:	push   eax
  406199:	jns    0x406160
  40619b:	neg    DWORD PTR [ebp-0x1f]
  40619e:	jno    0x4061f2
  4061a0:	xlat   BYTE PTR ds:[ebx]
  4061a1:	lods   al,BYTE PTR ds:[esi]
  4061a2:	inc    ebx
  4061a3:	cmp    DWORD PTR [edx-0x126d4627],0xfffffffa
  4061aa:	mov    ch,0xb3
  4061ac:	xchg   edx,eax
  4061ad:	add    al,0xd7
  4061af:	stc    
  4061b0:	add    DWORD PTR [ebp-0x2aee0a2a],0x3b
  4061b7:	lods   al,BYTE PTR ds:[esi]
  4061b8:	dec    eax
  4061b9:	popa   
  4061ba:	jg     0x4061ee
  4061bc:	dec    esi
  4061bd:	push   0xd446f227
  4061c2:	and    BYTE PTR [eax],0x76
  4061c5:	loop   0x406243
  4061c7:	sbb    eax,0x6fc5568c
  4061cc:	xor    eax,0x9ffc86f7
  4061d1:	outs   dx,BYTE PTR ds:[esi]
  4061d2:	mov    DWORD PTR [edx-0x1034b43c],esp
  4061d8:	inc    esp
  4061d9:	retf   0x49e
  4061dc:	sub    al,0x1d
  4061de:	inc    ebp
  4061df:	icebp  
  4061e0:	xchg   ebx,eax
  4061e1:	pop    ss
  4061e2:	jg     0x40617e
  4061e4:	mov    esi,0x1ce5cc90
  4061e9:	lds    sp,DWORD PTR [ecx-0x243e253]
  4061f0:	aaa    
  4061f1:	nop
  4061f2:	enter  0x8066,0x2c
  4061f6:	shl    DWORD PTR [eax+0x5b],cl
  4061f9:	pusha  
  4061fa:	call   0x67347b9d
  4061ff:	test   BYTE PTR gs:[ecx-0x73],dl
  406203:	jnp    0x4061a3
  406205:	xchg   BYTE PTR [edi+0x13],bl
  406208:	mov    ds:0x7f64b17a,al
  40620d:	into   
  40620e:	push   ebp
  40620f:	adc    dh,dh
  406211:	mov    edx,ss
  406213:	stos   DWORD PTR es:[edi],eax
  406214:	sub    ch,BYTE PTR [ebp+ebx*8+0x4a]
  406218:	xchg   ecx,eax
  406219:	cmp    edx,ebx
  40621b:	inc    eax
  40621c:	in     al,0x15
  40621e:	test   eax,0xb4990f10
  406223:	sub    DWORD PTR [ebx],esi
  406225:	ss xor ebp,esp
  406228:	daa    
  406229:	sbb    eax,0xbecc1911
  40622e:	mov    eax,0x229aa59d
  406233:	mov    ebx,0xbcc03ba2
  406238:	adc    ebp,DWORD PTR [ebx]
  40623a:	aam    0xad
  40623c:	fnsave [eax]
  40623e:	cmp    DWORD PTR [edx-0x3f],ebx
  406241:	adc    al,0x91
  406243:	xor    eax,0xdd65e0e3
  406248:	jo     0x406236
  40624a:	std    
  40624b:	push   ds
  40624c:	shr    dl,cl
  40624e:	add    bh,al
  406250:	es xchg edi,eax
  406252:	dec    esi
  406253:	sbb    ebp,ebx
  406255:	push   edi
  406256:	add    BYTE PTR [ecx-0x7b],ch
  406259:	vpmacssdd xmm0,xmm5,xmm0,xmm6
  40625f:	test   al,0x4f
  406261:	xchg   DWORD PTR [eax+ebp*2+0x6cfc74e7],edi
  406268:	out    dx,al
  406269:	or     BYTE PTR [edi],dl
  40626b:	in     eax,dx
  40626c:	sbb    al,0x39
  40626e:	or     ch,BYTE PTR [ebx+0x7740115c]
  406274:	jno    0x406290
  406276:	addr16 lock jle 0x406228
  40627a:	sbb    BYTE PTR [edi+0xc],dl
  40627d:	nop
  40627e:	fisubr WORD PTR [eax+0x4f]
  406281:	mov    fs,WORD PTR [edx]
  406283:	mov    edi,0x282adc83
  406288:	aaa    
  406289:	stc    
  40628a:	pop    esp
  40628b:	xchg   ch,ch
  40628d:	xor    bh,BYTE PTR [edx+0x5d]
  406290:	and    ebp,ebx
  406292:	cmp    eax,0xa7f42fec
  406297:	gs mov eax,0xe5a06a47
  40629d:	stos   BYTE PTR es:[edi],al
  40629e:	xlat   BYTE PTR ds:[bx]
  4062a0:	aaa    
  4062a1:	xlat   BYTE PTR ds:[ebx]
  4062a2:	pop    esp
  4062a3:	xor    esi,edx
  4062a5:	mov    esi,0xf7eb6b8d
  4062aa:	xchg   esi,eax
  4062ab:	mov    DWORD PTR [edx-0x405b816b],esp
  4062b1:	arpl   bx,dx
  4062b3:	mov    ds:0x1c2d85db,eax
  4062b8:	loope  0x406241
  4062ba:	mov    WORD PTR [esi],ds
  4062bc:	mov    al,ds:0x2df7c876
  4062c1:	pop    esi
  4062c2:	pop    es
  4062c3:	mov    ebx,DWORD PTR ds:0x22fd5241
  4062c9:	outs   dx,DWORD PTR ds:[esi]
  4062ca:	add    bl,al
  4062cc:	gs mov bl,0x65
  4062cf:	pop    es
  4062d0:	test   al,0x6c
  4062d2:	jbe    0x4062a1
  4062d4:	sbb    dl,BYTE PTR [ebx-0x4580bf9c]
  4062da:	cmp    BYTE PTR [eax-0x2cc519c2],ch
  4062e0:	or     al,0xa3
  4062e2:	(bad)  
  4062e3:	repnz push edx
  4062e5:	out    0x85,eax
  4062e7:	fisttp QWORD PTR [ecx-0x8]
  4062ea:	add    BYTE PTR [edi],ch
  4062ec:	cmp    dl,BYTE PTR [eax]
  4062ee:	jae    0x4062cd
  4062f0:	(bad)  
  4062f1:	fbld   TBYTE PTR [edx-0x55002b4]
  4062f7:	test   edx,0x174bbbe7
  4062fd:	sbb    esi,DWORD PTR [eax]
  4062ff:	scas   eax,DWORD PTR es:[edi]
  406300:	or     eax,0x50f06381
  406305:	hlt    
  406306:	lods   eax,DWORD PTR ds:[esi]
  406307:	test   dl,0xc9
  40630a:	retf   
  40630b:	jo     0x406361
  40630d:	xor    esp,esp
  40630f:	fwait
  406310:	out    dx,eax
  406311:	call   0xf1dad8ab
  406316:	mov    dh,0x78
  406318:	mov    dl,0x28
  40631a:	or     bl,BYTE PTR [ebx]
  40631c:	push   edi
  40631d:	mov    edi,0x65001de8
  406322:	repz out 0x28,eax
  406325:	sub    ebp,DWORD PTR [eax+eax*8]
  406328:	and    eax,0xe944a243
  40632d:	jge    0x4062d9
  40632f:	inc    esp
  406330:	mov    edx,DWORD PTR [edi+0x2c6eddd4]
  406336:	fimul  DWORD PTR [ebp-0x23]
  406339:	imul   esp,DWORD PTR [ebp-0x49],0x22
  40633d:	jbe    0x4062bf
  40633f:	adc    DWORD PTR [ecx-0xf],edx
  406342:	push   ss
  406343:	ds popf 
  406345:	scas   eax,DWORD PTR es:[edi]
  406346:	lahf   
  406347:	mov    ?,WORD PTR [eax+0x7b]
  40634a:	or     bl,dl
  40634c:	sbb    al,al
  40634e:	adc    cl,BYTE PTR [edx-0x1dc4685b]
  406354:	and    eax,0xaeea847c
  406359:	mov    eax,ecx
  40635b:	adc    dh,BYTE PTR [edi]
  40635d:	ins    DWORD PTR es:[edi],dx
  40635e:	dec    edx
  40635f:	jmp    0x4063cd
  406361:	bnd jg 0x4063b6
  406364:	or     BYTE PTR [edx],al
  406366:	xor    ah,0x4c
  406369:	out    0x64,eax
  40636b:	stos   BYTE PTR es:[edi],al
  40636c:	xchg   edi,eax
  40636d:	in     al,0xd2
  40636f:	cmc    
  406370:	sub    BYTE PTR [ebx-0xa],ch
  406373:	es jo  0x4063e6
  406376:	ror    BYTE PTR [ebx+0x54633a81],0xdd
  40637d:	pop    ebx
  40637e:	pop    eax
  40637f:	imul   edi,DWORD PTR [ebp-0x11],0xffffffde
  406383:	or     al,0x84
  406385:	hlt    
  406386:	std    
  406387:	adc    al,BYTE PTR [esi+0x5c]
  40638a:	push   ebx
  40638b:	xlat   BYTE PTR ds:[ebx]
  40638c:	sar    esi,cl
  40638e:	sub    bl,BYTE PTR [edi+0x1b90193c]
  406394:	ror    cl,cl
  406396:	je     0x40634d
  406398:	call   0x95aa0943
  40639d:	cmp    ah,BYTE PTR [eax-0xb67f2b1]
  4063a3:	pop    esp
  4063a4:	shl    BYTE PTR [esi+eax*8+0x73],0x86
  4063a9:	or     eax,0xe1ce5e90
  4063ae:	fld    TBYTE PTR [ebp+0x3ea71b5c]
  4063b4:	test   eax,0x641b59d6
  4063b9:	and    DWORD PTR [ecx+0x305d6dbf],ebx
  4063bf:	ret    0x92a7
  4063c2:	jp     0x406435
  4063c4:	or     DWORD PTR [edx+0x150dda51],eax
  4063ca:	mov    bh,0x88
  4063cc:	cmp    al,0x13
  4063ce:	mov    ecx,0x34eb3c4d
  4063d3:	push   esp
  4063d4:	mov    dl,0x98
  4063d6:	loop   0x406393
  4063d8:	outs   dx,BYTE PTR ds:[esi]
  4063d9:	(bad)  
  4063db:	pop    ebx
  4063dc:	lahf   
  4063dd:	fdivr  DWORD PTR [edx-0x76]
  4063e0:	sbb    dh,cl
  4063e2:	xchg   ebx,eax
  4063e3:	push   0xdacbe58e
  4063e8:	dec    edi
  4063e9:	sbb    al,0x87
  4063ec:	repnz daa 
  4063ee:	jb     0x406430
  4063f0:	leave  
  4063f1:	xchg   edi,eax
  4063f2:	stc    
  4063f3:	mov    ecx,0xa2071fdc
  4063f8:	push   esp
  4063f9:	mov    ebp,DWORD PTR [esi]
  4063fb:	(bad)  
  4063fd:	loope  0x4063dc
  4063ff:	sub    al,0x55
  406401:	add    al,0x7a
  406403:	sti    
  406404:	push   0xffffffbb
  406406:	imul   esp,DWORD PTR ds:0x688859f3,0x46
  40640d:	fldenv [ecx+0x50587d81]
  406413:	fistp  QWORD PTR ds:0x68c046b0
  406419:	fcom   st(2)
  40641b:	stos   BYTE PTR es:[edi],al
  40641c:	push   cs
  40641d:	mov    dh,0x65
  40641f:	mov    ds:0x93fbeeb6,eax
  406424:	jne    0x4063f3
  406426:	and    BYTE PTR [edi+0x4d6915b8],ch
  40642c:	int3   
  40642d:	fcmovne st,st(0)
  40642f:	bound  ebp,QWORD PTR [ebp+eax*1+0x380d62fe]
  406436:	sbb    eax,0xd479c298
  40643b:	cwde   
  40643c:	mov    ah,0xd4
  40643e:	pop    edx
  40643f:	sbb    BYTE PTR [esi+ebp*1+0xc280521],bl
  406446:	(bad)  
  406447:	and    DWORD PTR [ebx],esi
  406449:	jae    0x406443
  40644b:	jmp    0x2638dc32
  406450:	aaa    
  406451:	popf   
  406452:	addr16 push ds
  406454:	fwait
  406455:	mov    ebx,0x412985a6
  40645a:	jne    0x40640c
  40645c:	push   ebx
  40645d:	rol    DWORD PTR [esp+esi*1-0x3b7f7906],1
  406464:	dec    ebp
  406465:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406466:	xor    BYTE PTR [eax-0x1a],ah
  406469:	xchg   dh,dl
  40646b:	mov    DWORD PTR [edi+0x3e],ecx
  40646e:	and    eax,DWORD PTR [eax+0x59]
  406471:	inc    esi
  406472:	jmp    0xcb2d:0x9daeeafc
  406479:	imul   edi,esi,0x1d064425
  40647f:	mov    bh,0x48
  406481:	mov    ecx,0x65bb68e3
  406486:	out    dx,al
  406487:	fld    DWORD PTR [esi]
  406489:	or     DWORD PTR [ecx-0x55],ebp
  40648c:	out    0xe8,eax
  40648e:	(bad)  
  40648f:	fild   WORD PTR [ecx-0x53a6af7b]
  406495:	in     eax,dx
  406496:	xchg   ecx,eax
  406497:	or     dl,BYTE PTR [edx-0x16]
  40649a:	mov    cl,dl
  40649c:	mov    eax,ds:0x823d5f6d
  4064a1:	test   ecx,ebp
  4064a3:	stos   BYTE PTR es:[edi],al
  4064a4:	adc    BYTE PTR gs:[ebp-0x3f9e0d98],bh
  4064ab:	pop    ecx
  4064ac:	inc    ecx
  4064ad:	int    0xb2
  4064af:	pusha  
  4064b0:	fcom   DWORD PTR [edx+0x74]
  4064b3:	mov    al,ds:0x6ea7368b
  4064b8:	mov    BYTE PTR [ebp+0x49],bh
  4064bb:	cmp    al,0xe1
  4064bd:	push   0xceab115
  4064c2:	xchg   edi,eax
  4064c3:	outs   dx,BYTE PTR fs:[esi]
  4064c5:	mov    esi,0xc73ede4e
  4064ca:	std    
  4064cb:	cld    
  4064cc:	aas    
  4064cd:	out    dx,al
  4064ce:	add    DWORD PTR [edx+0x33],ebx
  4064d1:	cmc    
  4064d2:	enter  0x629a,0x5d
  4064d6:	sbb    esp,esi
  4064d8:	or     DWORD PTR [esi-0x5c],edi
  4064db:	sub    edx,DWORD PTR ss:[esi-0x2a]
  4064df:	push   es
  4064e0:	addr16 fprem1 
  4064e3:	push   cs
  4064e4:	out    dx,eax
  4064e5:	lahf   
  4064e6:	inc    edi
  4064e7:	test   al,0x44
  4064e9:	sub    cl,BYTE PTR [edx+0x591bf388]
  4064ef:	jno    0x40654e
  4064f1:	js     0x4064a5
  4064f3:	sub    eax,0x1602d803
  4064f8:	and    BYTE PTR [ebp-0x44],ch
  4064fb:	cld    
  4064fc:	dec    ebx
  4064fd:	clc    
  4064fe:	in     al,dx
  4064ff:	jecxz  0x4064af
  406501:	fmul   DWORD PTR [eax-0xa9304a2]
  406507:	in     eax,0x23
  406509:	mov    dl,0x69
  40650b:	mov    cl,0xbf
  40650d:	sbb    eax,DWORD PTR [ebx]
  40650f:	inc    edx
  406510:	and    ch,BYTE PTR [ebp-0x59c9662d]
  406516:	dec    eax
  406517:	mov    ebp,0x981ec3c9
  40651c:	cmp    dh,BYTE PTR [esi-0x700eae29]
  406522:	jae    0x406564
  406524:	mov    ds:0xd5fff5fb,eax
  406529:	test   DWORD PTR [ebp+0x5a734cb4],0xa4f1ade0
  406533:	jnp    0x4064e0
  406535:	sbb    bh,BYTE PTR [ebp+eiz*2+0xd571646]
  40653c:	jmp    0xb3990f9a
  406541:	add    BYTE PTR [edi+0x69],0x2a
  406545:	and    eax,0xd2ef654
  40654a:	adc    edx,ebp
  40654c:	mov    dl,dh
  40654e:	out    0x53,al
  406550:	cmp    ch,BYTE PTR [edi-0x9]
  406553:	cmc    
  406554:	shr    BYTE PTR [eax],1
  406556:	fisttp QWORD PTR [ebx+edi*4]
  406559:	add    DWORD PTR [ebp+0x337e07ed],edi
  40655f:	imul   ecx,ebx,0xb0fb5a43
  406565:	xchg   ebx,eax
  406567:	iret   
  406568:	mov    DWORD PTR [edi+edx*8-0x5],eax
  40656c:	loope  0x4064fe
  40656e:	mov    edx,0xf3aa027f
  406573:	xchg   esp,eax
  406574:	mov    BYTE PTR [ebp+0x29],0x4
  406578:	jo     0x406539
  40657a:	pushf  
  40657b:	cmp    al,0xdd
  40657d:	scas   eax,DWORD PTR es:[edi]
  40657e:	out    0x75,al
  406580:	ficom  DWORD PTR [ebx-0x77]
  406583:	fidivr DWORD PTR [ebx-0x19]
  406586:	jp     0x406563
  406588:	js     0x4065a9
  40658a:	dec    esi
  40658b:	mov    edi,0xbdc0dfa0
  406590:	mov    edx,0x4c3a6c32
  406595:	bound  esp,QWORD PTR [eax-0x22]
  406598:	dec    ecx
  406599:	xchg   DWORD PTR ds:0x3b85ff8a,edi
  40659f:	test   BYTE PTR [ebx+0x27],dh
  4065a2:	xor    bl,BYTE PTR [ebp-0x9cd8b87]
  4065a8:	pusha  
  4065a9:	mov    ebx,0x624be1bc
  4065ae:	mov    edx,0x9de0e364
  4065b3:	lods   al,BYTE PTR ds:[esi]
  4065b4:	test   BYTE PTR [ebx-0xe],ch
  4065b7:	iret   
  4065b8:	stos   BYTE PTR es:[edi],al
  4065b9:	cld    
  4065ba:	or     al,cl
  4065bc:	out    0xd3,eax
  4065be:	daa    
  4065bf:	jne    0x4065cf
  4065c1:	je     0x4065f3
  4065c3:	dec    esp
  4065c4:	int    0xe6
  4065c6:	loope  0x4065a4
  4065c8:	pop    eax
  4065c9:	fiadd  WORD PTR [ebx]
  4065cb:	or     eax,0x240cd9d7
  4065d0:	add    BYTE PTR [edx],0x91
  4065d3:	sub    eax,0x3f09aa5f
  4065d8:	jg     0x406612
  4065da:	test   eax,0xe70629a7
  4065df:	pop    ebp
  4065e0:	iret   
  4065e1:	mov    DWORD PTR [eax],0x1801040e
  4065e7:	jle    0x4065af
  4065e9:	in     al,0xb5
  4065eb:	add    eax,0xbd26cb79
  4065f0:	sahf   
  4065f1:	jmp    0x406584
  4065f3:	mov    ds:0x2a28781b,al
  4065f8:	mov    dh,0x19
  4065fa:	in     al,0x79
  4065fc:	icebp  
  4065fd:	xchg   BYTE PTR [edx-0x15],ch
  406600:	jns    0x40660f
  406602:	pusha  
  406603:	xchg   BYTE PTR [ecx-0x4c929153],dl
  406609:	adc    eax,0xc5aa5c68
  40660e:	cmp    al,0x62
  406610:	xor    ecx,DWORD PTR [ecx-0x7b]
  406613:	int3   
  406614:	jmp    0x79dc47b8
  406619:	sbb    BYTE PTR [eax+ebx*4+0x4c],bh
  40661d:	mov    esi,0xddcab987
  406622:	bound  ebx,QWORD PTR [ecx-0x3]
  406625:	int3   
  406626:	cmp    eax,0x3408d8fb
  40662b:	push   edi
  40662c:	imul   ebx,DWORD PTR [ecx-0x22],0xffffff9e
  406630:	xor    al,0x20
  406632:	je     0x4065cf
  406634:	push   esi
  406635:	dec    eax
  406636:	push   ds
  406637:	fldcw  WORD PTR [ebp+0x24]
  40663a:	mov    ch,0xa
  40663c:	int3   
  40663d:	pop    esi
  40663e:	and    edx,DWORD PTR [ebx+0x4c2e67e5]
  406644:	sub    BYTE PTR [ebx],bl
  406646:	cmp    al,0x0
  406648:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406649:	ja     0x4066bb
  40664b:	lea    edx,[ecx+0x2f]
  40664e:	inc    edx
  40664f:	inc    eax
  406650:	pop    esp
  406651:	(bad)  
  406652:	push   ds
  406653:	inc    esi
  406654:	in     eax,0x91
  406656:	add    esi,edi
  406658:	and    BYTE PTR [eax-0x1b6a4415],bh
  40665e:	loope  0x4066a9
  406660:	(bad)  
  406661:	cmp    al,0x1c
  406663:	loop   0x4066e1
  406665:	xor    BYTE PTR [eax+0x6f],0x16
  406669:	inc    ebx
  40666a:	idiv   eax
  40666c:	cmp    al,0x82
  40666e:	xchg   edx,eax
  40666f:	fstp   QWORD PTR [edi-0x48b0fc9]
  406675:	xchg   esi,eax
  406676:	sbb    al,BYTE PTR [esi]
  406678:	popf   
  406679:	imul   BYTE PTR [ecx-0x2b33e0cc]
  40667f:	pop    ebx
  406680:	(bad)  
  406681:	adc    cl,BYTE PTR [ebp+0x39]
  406684:	adc    ch,bh
  406686:	push   ecx
  406687:	loop   0x406618
  406689:	pop    ds
  40668a:	adc    edi,DWORD PTR [ecx-0x6f]
  40668d:	or     edx,DWORD PTR [esi-0x70]
  406690:	push   ss
  406691:	in     al,0x3
  406693:	sbb    cl,BYTE PTR [ebp-0x3e]
  406696:	dec    eax
  406697:	test   DWORD PTR [eax],eax
  406699:	ret    0xa483
  40669c:	adc    DWORD PTR [ebx+0x44cf96f1],esp
  4066a2:	cmp    al,0xac
  4066a4:	(bad)  
  4066a6:	out    dx,al
  4066a7:	das    
  4066a8:	fldcw  WORD PTR [ebx-0x50]
  4066ab:	jecxz  0x4066a1
  4066ad:	into   
  4066ae:	mov    eax,0xaabe8a32
  4066b3:	fsubr  QWORD PTR [esi-0x381d87cb]
  4066b9:	adc    al,dh
  4066bb:	out    dx,al
  4066bc:	imul   esp,DWORD PTR [ebx+0x14c3bb5],0xffffff80
  4066c3:	in     al,dx
  4066c4:	cld    
  4066c5:	mov    edi,0x5e5df38
  4066ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066cb:	jle    0x40665f
  4066cd:	adc    eax,DWORD PTR [ebx-0x30]
  4066d0:	push   esp
  4066d1:	xchg   edi,eax
  4066d2:	mov    eax,ds:0x8c306b80
  4066d7:	pusha  
  4066d8:	shld   DWORD PTR [ebp+0x59],esp,0x61
  4066dd:	in     al,dx
  4066de:	dec    esp
  4066df:	ds mov dh,0x99
  4066e2:	mov    cl,0x46
  4066e4:	sbb    edx,DWORD PTR [ebp-0xf85b306]
  4066ea:	lahf   
  4066eb:	mov    ebp,0x1a3be602
  4066f0:	enter  0x6264,0xf4
  4066f4:	js     0x406678
  4066f6:	inc    esi
  4066f7:	in     eax,dx
  4066f8:	popa   
  4066f9:	sub    BYTE PTR [eax],dh
  4066fb:	push   esp
  4066fc:	mov    dh,cl
  4066fe:	pop    edi
  4066ff:	enter  0x1b4a,0xe9
  406703:	int3   
  406704:	loopne 0x406781
  406706:	cmp    eax,0xbf2baa61
  40670b:	dec    esi
  40670c:	outs   dx,DWORD PTR ds:[esi]
  40670d:	xor    al,0xa9
  40670f:	fcom   DWORD PTR [ebp-0x5bbaeee7]
  406715:	jmp    0x406756
  406717:	push   edi
  406718:	out    0x76,al
  40671a:	mov    dl,0x25
  40671c:	je     0x406793
  40671e:	mov    fs,WORD PTR [eax-0x6e592f80]
  406724:	stos   DWORD PTR es:[edi],eax
  406725:	cmp    al,0x45
  406727:	mov    bh,0xc1
  406729:	add    eax,0xbdb2065d
  40672e:	dec    eax
  40672f:	fmul   DWORD PTR ds:0x43f747b5
  406735:	adc    DWORD PTR [eax-0x3d],eax
  406738:	std    
  406739:	and    esi,DWORD PTR [ecx-0x3]
  40673c:	mov    al,0x6b
  40673e:	mov    ecx,0x2b58365b
  406743:	(bad)  
  406745:	cmp    edi,DWORD PTR [esi+ebx*1+0x644efab9]
  40674c:	mov    edx,0x6e1144a7
  406751:	dec    ebx
  406752:	jge    0x40679f
  406754:	xchg   ecx,eax
  406755:	lods   al,BYTE PTR ds:[esi]
  406756:	and    ecx,DWORD PTR [eax-0x44]
  406759:	test   edi,0x10cb5ed1
  40675f:	cmp    al,0xb9
  406761:	xchg   esp,eax
  406762:	xlat   BYTE PTR es:[ebx]
  406764:	lods   eax,DWORD PTR ds:[esi]
  406765:	aas    
  406766:	xchg   edi,eax
  406767:	cmp    eax,0xa770db6
  40676c:	iret   
  40676d:	pop    esi
  40676e:	xor    al,0x5
  406770:	cdq    
  406771:	scas   eax,DWORD PTR es:[edi]
  406772:	xchg   esp,eax
  406773:	mov    bh,0x92
  406775:	data16 das 
  406777:	sbb    bh,BYTE PTR [edi]
  406779:	adc    DWORD PTR [esi-0x22],0xffffffa5
  40677d:	or     eax,0x3fcf352e
  406782:	mov    esp,0x2fb6a8c6
  406787:	push   edi
  406788:	scas   al,BYTE PTR es:[edi]
  406789:	ss push ebx
  40678b:	lea    esp,[eax]
  40678d:	outs   dx,DWORD PTR ds:[esi]
  40678e:	jmp    0x522:0x4de0c2b
  406795:	inc    esi
  406796:	shl    dl,cl
  406798:	cs mov ch,0xc6
  40679b:	pusha  
  40679c:	pop    ebp
  40679d:	inc    ebx
  40679e:	(bad)  
  40679f:	fiadd  DWORD PTR [ebx-0x33]
  4067a2:	in     al,dx
  4067a3:	arpl   bx,bx
  4067a5:	(bad)  
  4067a6:	retf   0xdfd5
  4067a9:	int    0x66
  4067ab:	icebp  
  4067ac:	out    0xe3,al
  4067ae:	test   BYTE PTR [edi],bh
  4067b0:	outs   dx,DWORD PTR ds:[esi]
  4067b1:	sub    eax,0xbfe1fab7
  4067b6:	mov    edi,0xa6e6f5d4
  4067bb:	(bad)  
  4067bc:	(bad)  
  4067bd:	xor    BYTE PTR [edi-0x7a9e8b3d],al
  4067c3:	test   BYTE PTR [edx+edx*2],dh
  4067c6:	adc    bl,BYTE PTR [ebp+0x7d]
  4067c9:	cmp    DWORD PTR [ebx+0x58],esp
  4067cc:	push   ebp
  4067cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067ce:	pop    edx
  4067cf:	std    
  4067d0:	sub    DWORD PTR [ebp+0x4c],ecx
  4067d3:	cmp    al,0xd5
  4067d5:	jle    0x406774
  4067d7:	ror    BYTE PTR [edx-0x2393e6f2],0x46
  4067de:	ret    0xb205
  4067e1:	cmp    BYTE PTR gs:[esi-0x2],dl
  4067e5:	mov    ebx,0xfd6bf5f9
  4067ea:	mov    esp,0x7c4b843
  4067ef:	icebp  
  4067f0:	xchg   ecx,eax
  4067f1:	stc    
  4067f2:	lods   al,BYTE PTR ds:[esi]
  4067f3:	push   ebp
  4067f4:	adc    al,0x27
  4067f6:	call   0x2691:0x281ef559
  4067fd:	add    al,dh
  4067ff:	out    0xb9,al
  406801:	and    ch,bl
  406803:	xchg   ebx,eax
  406804:	shl    dh,0xbb
  406807:	add    DWORD PTR [edi+edx*2],0x59
  40680b:	dec    edi
  40680c:	mov    al,ds:0x3a0e8f98
  406811:	mov    WORD PTR [edx+ebp*4+0x5a],gs
  406815:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406816:	fisub  WORD PTR [edx]
  406818:	imul   ebp,DWORD PTR [eax],0xffffffac
  40681b:	ins    BYTE PTR es:[edi],dx
  40681c:	sub    al,0xd0
  40681e:	cli    
  40681f:	cmove  edx,ecx
  406822:	(bad)  
  406823:	sub    ebx,edx
  406825:	fsub   QWORD PTR [edi-0x20]
  406828:	mov    DWORD PTR [ebx+eax*8-0x6574d094],esi
  40682f:	mov    al,0xa3
  406831:	adc    ecx,ecx
  406833:	lahf   
  406834:	pop    ebx
  406835:	lahf   
  406836:	xor    BYTE PTR [ebp-0x5c],0xd1
  40683a:	adc    al,0xcb
  40683c:	aam    0xa1
  40683e:	xchg   ch,dh
  406840:	lods   eax,DWORD PTR ds:[esi]
  406841:	into   
  406842:	dec    ebx
  406843:	ret    
  406844:	aaa    
  406845:	retf   0x2fe0
  406848:	pop    es
  406849:	sub    edi,DWORD PTR [eax+0x74]
  40684c:	ss dec ecx
  40684e:	push   0x4c
  406850:	inc    edi
  406851:	and    eax,0x6bea3487
  406856:	jbe    0x40685d
  406858:	fmul   st(0),st
  40685a:	nop
  40685b:	xlat   BYTE PTR ds:[ebx]
  40685c:	clc    
  40685d:	cwde   
  40685e:	rol    bh,1
  406860:	xor    al,BYTE PTR [ecx-0x6547638a]
  406866:	js     0x40685b
  406868:	test   al,0xf7
  40686a:	aas    
  40686b:	push   cs
  40686c:	and    al,0xa6
  40686e:	inc    ecx
  40686f:	and    al,0x24
  406871:	in     al,0xb8
  406873:	xlat   BYTE PTR ds:[ebx]
  406874:	rol    DWORD PTR [eax],cl
  406876:	arpl   WORD PTR [esi+0x6c],bx
  406879:	mov    esi,0xe91e6adf
  40687e:	add    BYTE PTR [esi+0x5c3f1571],ah
  406884:	and    BYTE PTR [edi+ebx*2-0x72],dl
  406888:	sub    BYTE PTR [edi+0x5cafbfa3],0xf1
  40688f:	icebp  
  406890:	rcr    DWORD PTR [ebx],cl
  406892:	inc    eax
  406893:	mov    bl,0x3d
  406895:	rcr    BYTE PTR [ebx-0x1d],cl
  406898:	push   0x798752f6
  40689d:	loope  0x40682d
  40689f:	mov    ds:0x1be0d6b6,eax
  4068a4:	outs   dx,BYTE PTR ds:[esi]
  4068a5:	ret    
  4068a6:	call   0x75dc:0x8e794288
  4068ad:	fucomip st,st(5)
  4068af:	and    BYTE PTR [ebp-0x31b82578],dh
  4068b5:	pop    ecx
  4068b6:	xchg   edx,eax
  4068b7:	outs   dx,DWORD PTR ds:[esi]
  4068b8:	pop    eax
  4068b9:	sbb    al,0xc
  4068bb:	mov    ecx,0x90d1538a
  4068c0:	daa    
  4068c1:	xor    al,BYTE PTR [ecx-0x23db4b4]
  4068c7:	push   esi
  4068c8:	pop    edi
  4068c9:	push   ebx
  4068ca:	jns    0x406918
  4068cc:	jg     0x4068a6
  4068ce:	and    esi,DWORD PTR [edx-0x32]
  4068d1:	aaa    
  4068d2:	(bad)  
  4068d3:	shl    BYTE PTR [ecx+0x4210c5e1],cl
  4068d9:	dec    ebx
  4068da:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068dc:	xor    bl,BYTE PTR [edi-0x8]
  4068df:	dec    esp
  4068e0:	stos   DWORD PTR es:[edi],eax
  4068e1:	mov    eax,0x5e7994fc
  4068e6:	dec    esp
  4068e7:	loopne 0x4068b6
  4068e9:	pop    esp
  4068ea:	ss mov eax,0x5e1e39e9
  4068f0:	aas    
  4068f1:	(bad)  
  4068f2:	cs repnz dec ebx
  4068f5:	dec    ecx
  4068f6:	push   es
  4068f7:	mov    DWORD PTR [esi+0x69f874f4],edx
  4068fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068fe:	fst    QWORD PTR [edx+esi*1-0x1d]
  406902:	in     al,dx
  406903:	js     0x406950
  406905:	pop    eax
  406906:	dec    ebx
  406907:	jge    0x4068af
  406909:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40690a:	pop    ecx
  40690b:	mov    bh,BYTE PTR [ecx+0x26]
  40690e:	mov    esi,0x27a5e1ba
  406913:	or     ah,BYTE PTR [esi-0x18732395]
  406919:	rcl    BYTE PTR [edx-0x7be8bc45],1
  40691f:	fdivrp st(2),st
  406921:	push   esi
  406922:	mov    edi,0xf2a456c1
  406927:	mov    eax,ds:0x4842f244
  40692c:	add    BYTE PTR [eax+esi*4+0x84a96f5],bl
  406933:	push   cs
  406934:	or     BYTE PTR [esi],ah
  406936:	and    BYTE PTR [eax-0x79118ee2],bl
  40693c:	outs   dx,DWORD PTR ds:[esi]
  40693d:	cdq    
  40693e:	push   esp
  40693f:	inc    edi
  406940:	aaa    
  406941:	lods   eax,DWORD PTR ds:[esi]
  406942:	mov    al,0xfd
  406944:	cmp    al,0xeb
  406946:	call   0x7aab:0xff86271a
  40694d:	xchg   ebx,eax
  40694e:	icebp  
  40694f:	pop    ecx
  406950:	add    bl,cl
  406952:	sbb    eax,0x71fb4ce4
  406957:	push   esi
  406958:	jg     0x406983
  40695a:	test   DWORD PTR ds:0x6d218e1d,eax
  406960:	sbb    ah,BYTE PTR [edx+0x22]
  406963:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406964:	push   ecx
  406965:	aad    0x39
  406967:	sti    
  406968:	rcl    BYTE PTR [ecx+0x72],0x18
  40696c:	mov    esi,DWORD PTR [ecx]
  40696e:	push   eax
  40696f:	popa   
  406970:	pop    ebx
  406971:	fwait
  406972:	xor    DWORD PTR [ebx],eax
  406974:	mov    ebx,0x979098e0
  406979:	fs push ds
  40697b:	mov    ecx,0x60c39100
  406980:	popa   
  406981:	pop    edi
  406982:	xchg   ebx,eax
  406983:	adc    BYTE PTR [ebp+0x52],al
  406986:	push   es
  406987:	adc    al,0x75
  406989:	adc    DWORD PTR [edi+0x5d],ebp
  40698c:	in     al,0x5
  40698e:	cli    
  40698f:	mov    eax,0xa1a2debe
  406994:	mov    dh,al
  406996:	es jecxz 0x406990
  406999:	jmp    0x406949
  40699b:	outs   dx,BYTE PTR ds:[esi]
  40699c:	cmp    edi,DWORD PTR [edi+0x4e1756a4]
  4069a2:	or     al,0x25
  4069a4:	mov    eax,ds:0x9cea0ef0
  4069a9:	push   ebx
  4069aa:	add    al,0x27
  4069ac:	cwde   
  4069ad:	cmp    esi,DWORD PTR [edx]
  4069af:	push   ecx
  4069b0:	sub    eax,0xff7c0ac0
  4069b5:	mov    bl,0x8e
  4069b7:	or     dh,BYTE PTR [eax-0x1d9bfd21]
  4069bd:	popa   
  4069be:	mov    al,BYTE PTR [ebx]
  4069c0:	cmp    eax,0x265efb3a
  4069c5:	lods   al,BYTE PTR ds:[esi]
  4069c6:	int    0xb1
  4069c8:	bound  edx,QWORD PTR [edi]
  4069ca:	cmp    bl,dh
  4069cc:	sub    ch,BYTE PTR [esi+0x27]
  4069cf:	jne    0x406a0f
  4069d1:	cmp    edx,DWORD PTR [esi]
  4069d3:	sub    al,0x2c
  4069d5:	inc    ebp
  4069d6:	repz loopne 0x406981
  4069d9:	push   ss
  4069da:	dec    edx
  4069db:	jge    0x406985
  4069dd:	push   esp
  4069de:	aad    0xce
  4069e0:	adc    BYTE PTR [edx+0x43],dl
  4069e3:	out    0x5f,eax
  4069e5:	add    esp,DWORD PTR [esi-0x99f8346]
  4069eb:	xchg   BYTE PTR [ebp-0x5f9bf37e],cl
  4069f1:	imul   edi,edx,0xffffff80
  4069f4:	mov    esi,DWORD PTR [ecx-0x53]
  4069f7:	jge    0x4069b5
  4069f9:	adc    DWORD PTR [edx],0x3d
  4069fc:	out    0xa6,al
  4069fe:	and    DWORD PTR [esi-0x3db989f4],eax
  406a04:	inc    edi
  406a05:	pop    edi
  406a06:	sbb    BYTE PTR [edi-0x71],dl
  406a09:	xchg   edx,eax
  406a0a:	or     al,0xd2
  406a0c:	ins    BYTE PTR es:[edi],dx
  406a0d:	push   0x6d741858
  406a12:	rcl    BYTE PTR [eax-0x24296f42],cl
  406a18:	mov    edi,0xb9a80ba4
  406a1d:	mov    ah,0xae
  406a1f:	mov    esi,0x80a66ad1
  406a24:	test   BYTE PTR [ebx-0x711ed1f],dh
  406a2a:	out    0x1c,al
  406a2c:	and    eax,0x5e9e5649
  406a31:	out    0xd9,al
  406a33:	push   eax
  406a34:	ror    BYTE PTR [esi+ebx*2+0x19d718a0],1
  406a3b:	fsub   DWORD PTR [edx]
  406a3d:	sbb    BYTE PTR [edi-0x2a],al
  406a40:	jmp    0x4069f0
  406a42:	ss in  al,dx
  406a44:	mul    edi
  406a46:	or     BYTE PTR [eax-0x5],ch
  406a49:	xor    edx,DWORD PTR ds:0x370d8a
  406a4f:	xchg   edi,eax
  406a50:	test   al,0xe0
  406a52:	in     al,dx
  406a53:	jecxz  0x406ac7
  406a55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a56:	pop    ss
  406a57:	or     ecx,eax
  406a59:	xchg   ecx,eax
  406a5a:	mov    al,0xe8
  406a5c:	inc    eax
  406a5d:	outs   dx,DWORD PTR ds:[esi]
  406a5e:	push   eax
  406a5f:	stos   DWORD PTR es:[edi],eax
  406a60:	dec    ecx
  406a61:	mov    dl,0xd8
  406a63:	ret    
  406a64:	outs   dx,DWORD PTR ds:[esi]
  406a65:	sub    DWORD PTR [ebx+0xa],0x4
  406a69:	js     0x406a73
  406a6b:	cmp    bh,BYTE PTR [eax+0x3b]
  406a6e:	sbb    DWORD PTR [eax-0x4b],0xffffffbe
  406a72:	push   esi
  406a73:	stc    
  406a74:	or     al,0x90
  406a76:	pop    ebp
  406a77:	sub    al,0x70
  406a79:	cli    
  406a7a:	mov    BYTE PTR [edi],ah
  406a7c:	sbb    DWORD PTR [edx+0x3e],eax
  406a7f:	inc    esi
  406a80:	pop    ds
  406a81:	dec    ebp
  406a82:	aas    
  406a83:	std    
  406a84:	mov    dh,0x60
  406a86:	cmp    DWORD PTR [esi+0x2],esp
  406a89:	xchg   edi,eax
  406a8a:	ret    
  406a8b:	in     eax,dx
  406a8c:	div    DWORD PTR [edi-0x47b986ee]
  406a92:	lock sub ecx,ebx
  406a95:	cmp    dh,ch
  406a97:	xchg   ecx,eax
  406a98:	lahf   
  406a99:	cmp    BYTE PTR [ecx],0xe8
  406a9c:	mov    bl,0xd1
  406a9e:	mov    ss,WORD PTR [ecx]
  406aa0:	pop    ss
  406aa1:	fadd   st(7),st
  406aa3:	cmp    BYTE PTR [esi+0x6dc02553],ah
  406aa9:	daa    
  406aaa:	xchg   edi,eax
  406aab:	add    DWORD PTR [edi+ebp*4],esi
  406aae:	or     dl,BYTE PTR [edx]
  406ab0:	mov    DWORD PTR [esp+edx*8+0x4c],ecx
  406ab4:	cmp    ecx,ecx
  406ab6:	mov    edi,cs
  406ab8:	mov    DWORD PTR [ebp-0x68f35d7b],ebp
  406abe:	add    dl,BYTE PTR [esi+0x56a34619]
  406ac4:	xchg   DWORD PTR [edi+eiz*4],ebx
  406ac7:	jnp    0x406b21
  406ac9:	loopne 0x406b09
  406acb:	daa    
  406acc:	fimul  DWORD PTR [ebx-0x34c5c72f]
  406ad2:	ret    0x4ac6
  406ad5:	call   0xf7b7142f
  406ada:	lahf   
  406adb:	adc    DWORD PTR [ecx+0x58],eax
  406ade:	push   cs
  406adf:	mov    al,0x36
  406ae1:	dec    eax
  406ae2:	adc    eax,0x96c80d9e
  406ae7:	inc    ebp
  406ae8:	xchg   edi,eax
  406ae9:	hlt    
  406aea:	rcr    bl,cl
  406aec:	push   ebx
  406aed:	enter  0x116f,0x15
  406af1:	push   esp
  406af2:	sbb    bl,dh
  406af4:	aas    
  406af5:	jbe    0x406b63
  406af7:	jle    0x406b09
  406af9:	or     ebx,DWORD PTR [edx+0x651778ce]
  406aff:	or     edx,0x1
  406b02:	cmp    esi,ebp
  406b04:	push   ebp
  406b05:	jge    0x406ac3
  406b07:	pusha  
  406b08:	jno    0x406ae2
  406b0a:	or     ch,BYTE PTR [edx+0x43]
  406b0d:	jo     0x406af3
  406b0f:	stos   BYTE PTR es:[edi],al
  406b10:	and    eax,0xf1a12f06
  406b15:	adc    edi,DWORD PTR [edx]
  406b17:	xor    esi,DWORD PTR [ecx+0x49]
  406b1a:	lds    esp,FWORD PTR [esi+0x64]
  406b1d:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  406b1f:	sbb    al,0xf5
  406b21:	mov    eax,0xb7d2f70d
  406b26:	ja     0x406aae
  406b28:	les    esi,FWORD PTR [eax]
  406b2a:	ret    0x7e1a
  406b2d:	mov    edx,DWORD PTR ds:0xf507a0e1
  406b33:	jo     0x406b92
  406b35:	push   edi
  406b36:	xchg   esp,eax
  406b37:	hlt    
  406b38:	out    0x7c,eax
  406b3a:	mov    eax,ds:0x7ef77fab
  406b3f:	cmp    DWORD PTR [ecx+edx*2-0x8],esp
  406b43:	inc    esp
  406b44:	cs pop esp
  406b46:	mov    dh,0x6e
  406b48:	sub    ebp,DWORD PTR cs:[edx-0x3c]
  406b4c:	sub    cl,BYTE PTR [ebp+0x4d]
  406b4f:	enter  0x46c1,0x2a
  406b53:	jmp    0xe956ae4a
  406b58:	int3   
  406b59:	sahf   
  406b5a:	push   ebp
  406b5b:	fcomp  DWORD PTR [ebp-0x3c410e06]
  406b61:	je     0x406b62
  406b63:	sub    esi,ecx
  406b65:	aaa    
  406b66:	push   esp
  406b67:	dec    esp
  406b68:	xor    edi,DWORD PTR [edi+0x1c]
  406b6b:	jnp    0x406bac
  406b6d:	scas   al,BYTE PTR es:[edi]
  406b6e:	sbb    cl,BYTE PTR [edi]
  406b70:	stos   BYTE PTR es:[edi],al
  406b71:	ret    0x1212
  406b74:	out    dx,al
  406b75:	mov    ds:0x5039e371,eax
  406b7a:	pop    esi
  406b7b:	mov    esi,0xdb9e9ab6
  406b80:	mov    al,ds:0x48247310
  406b85:	mov    ebp,0xb252eaa2
  406b8a:	mov    esp,0x96e5678b
  406b8f:	push   0xc2dad0f9
  406b94:	pop    ecx
  406b95:	add    al,0x6b
  406b97:	dec    edi
  406b98:	sub    al,0xfd
  406b9a:	rcr    esi,cl
  406b9c:	dec    esp
  406b9d:	jl     0x406bc1
  406b9f:	pushf  
  406ba0:	mov    ebp,0x364b06a7
  406ba5:	fcmovu st,st(5)
  406ba7:	inc    ecx
  406ba8:	pop    ss
  406ba9:	xchg   edi,eax
  406baa:	xbegin 0x41d33cfa
  406bb0:	inc    edx
  406bb1:	fld    DWORD PTR [edx]
  406bb3:	xchg   DWORD PTR [edi-0x5d],esi
  406bb6:	push   esp
  406bb7:	xchg   edx,eax
  406bb8:	sub    al,0xc5
  406bba:	mov    al,0x35
  406bbc:	jo     0x406b73
  406bbe:	jnp    0x406bc3
  406bc0:	ins    DWORD PTR es:[edi],dx
  406bc1:	jne    0x406bc8
  406bc3:	lds    esp,FWORD PTR [ebp+0x39]
  406bc6:	(bad)  
  406bc7:	cmp    ecx,DWORD PTR [ecx+0x29a318a8]
  406bcd:	clc    
  406bce:	aas    
  406bcf:	retf   
  406bd0:	data16 and al,0xc4
  406bd3:	add    esi,ecx
  406bd5:	(bad)  
  406bd6:	xchg   ebp,eax
  406bd7:	leave  
  406bd8:	mov    ds:0x108cfe0c,al
  406bdd:	into   
  406bde:	scas   eax,DWORD PTR es:[edi]
  406bdf:	fild   QWORD PTR [esi+0x61]
  406be2:	pushf  
  406be3:	es mov dh,0x6f
  406be6:	out    dx,eax
  406be7:	lds    ebx,FWORD PTR [edx]
  406be9:	repz xchg edx,esp
  406bec:	rol    BYTE PTR [ecx+0x4d],0xdd
  406bf0:	xor    BYTE PTR [edi-0x5374acc1],bl
  406bf6:	inc    ecx
  406bf7:	je     0x406b95
  406bf9:	shl    BYTE PTR [ebx],cl
  406bfb:	or     al,0x91
  406bfd:	ror    BYTE PTR [ebp+0x5a0a16cc],0x3c
  406c04:	sub    edi,DWORD PTR [edi+0x6d2a5412]
  406c0a:	xor    al,0x5d
  406c0c:	jae    0x406c72
  406c0e:	xchg   dl,ch
  406c10:	adc    ah,bl
  406c12:	push   ebp
  406c13:	lock mov edi,0xf58b01da
  406c19:	cli    
  406c1a:	es sbb bh,bh
  406c1d:	mov    BYTE PTR [esi-0x7d2e1b19],ch
  406c23:	push   esp
  406c24:	repnz lock inc ecx
  406c27:	pop    eax
  406c28:	(bad)  
  406c29:	inc    esi
  406c2a:	outs   dx,DWORD PTR ds:[esi]
  406c2b:	in     eax,0xb3
  406c2d:	mov    ds:0x9d7e2bbb,eax
  406c32:	cli    
  406c33:	rcl    DWORD PTR [eax-0x4d826ec9],1
  406c39:	int3   
  406c3a:	push   edi
  406c3b:	dec    BYTE PTR [ebx-0x36]
  406c3e:	sahf   
  406c3f:	add    BYTE PTR ds:0xb9e6bbd7,0x3c
  406c46:	shl    BYTE PTR [ebx],cl
  406c48:	push   eax
  406c49:	sbb    eax,0x77f0f650
  406c4e:	inc    edi
  406c4f:	fisub  DWORD PTR [ebp-0x24906794]
  406c55:	ja     0x406c5c
  406c57:	ins    BYTE PTR es:[edi],dx
  406c58:	lods   eax,DWORD PTR ds:[esi]
  406c59:	and    BYTE PTR [ebp-0x61],0x1a
  406c5d:	out    0x5b,al
  406c5f:	popf   
  406c60:	mov    edi,0x230679c4
  406c65:	dec    esp
  406c66:	jae    0x406cc7
  406c68:	push   esp
  406c69:	and    ebp,DWORD PTR [esi]
  406c6b:	xchg   esp,eax
  406c6c:	scas   eax,DWORD PTR es:[edi]
  406c6d:	dec    esi
  406c6e:	xchg   DWORD PTR [ebx+0x4077db6d],edx
  406c74:	sub    ch,al
  406c76:	cmp    BYTE PTR [edx-0x4146ef21],al
  406c7c:	bound  edx,QWORD PTR [ebp-0x7e492e8c]
  406c82:	xor    BYTE PTR [ebx],bl
  406c84:	pop    ebx
  406c85:	in     eax,dx
  406c86:	inc    edi
  406c87:	fs push es
  406c89:	les    ebx,FWORD PTR [edi-0x5114a85b]
  406c8f:	sbb    ebp,ebx
  406c91:	clc    
  406c92:	sahf   
  406c93:	cdq    
  406c94:	retf   0x6146
  406c97:	je     0x406cb1
  406c99:	or     eax,0xd27534a9
  406c9e:	aam    0xeb
  406ca0:	fstp   TBYTE PTR [ebx+esi*1-0x56]
  406ca4:	sbb    DWORD PTR [edi-0x37],ebp
  406ca7:	fcom   DWORD PTR [esi-0x5a88bd6f]
  406cad:	rcl    DWORD PTR [esi],1
  406caf:	mov    ecx,0xd1588dc2
  406cb4:	es adc eax,0x5049c796
  406cba:	add    DWORD PTR [ebx],esp
  406cbc:	sbb    esp,DWORD PTR [ebx]
  406cbe:	test   al,0xbe
  406cc0:	adc    DWORD PTR [ebp+0x58],eax
  406cc3:	icebp  
  406cc4:	push   esp
  406cc5:	inc    eax
  406cc6:	repnz pop ebx
  406cc8:	jp     0x406c96
  406cca:	xlat   BYTE PTR ds:[ebx]
  406ccb:	sar    BYTE PTR [ebx],1
  406ccd:	ss out dx,eax
  406ccf:	rcl    BYTE PTR [ebx-0x6c],0x7
  406cd3:	popa   
  406cd4:	les    ebx,FWORD PTR [edx-0x5d]
  406cd7:	int    0x4a
  406cd9:	cmp    bl,ch
  406cdb:	scas   al,BYTE PTR es:[edi]
  406cdc:	inc    eax
  406cdd:	add    BYTE PTR [esi+0x68],bh
  406ce0:	xchg   DWORD PTR [eax+0x60],edi
  406ce3:	jo     0x406d15
  406ce5:	adc    edi,eax
  406ce7:	mov    al,0xf8
  406ce9:	rcl    BYTE PTR [edx+0xc],cl
  406cec:	xchg   esp,eax
  406ced:	xor    DWORD PTR [bp+di-0x56c8],esi
  406cf2:	mov    bh,BYTE PTR [edx+0x53b06cd3]
  406cf8:	leave  
  406cf9:	dec    edx
  406cfa:	jbe    0x406d2f
  406cfc:	out    0x4c,eax
  406cfe:	xor    ah,BYTE PTR [ebx+0x566e1d4a]
  406d04:	pop    ecx
  406d05:	xchg   esp,eax
  406d06:	mov    BYTE PTR [ebx],dh
  406d08:	push   ebx
  406d09:	mov    bl,0xd4
  406d0b:	xlat   BYTE PTR ds:[ebx]
  406d0c:	leave  
  406d0d:	loope  0x406ca9
  406d0f:	add    al,0xfc
  406d11:	sub    bh,ah
  406d13:	pop    ebx
  406d14:	mov    cl,0x5c
  406d16:	dec    ecx
  406d17:	cmp    DWORD PTR [ebx-0x2e31d1da],ecx
  406d1d:	(bad)  
  406d1e:	cmc    
  406d1f:	push   edx
  406d20:	mov    esp,0xd604736
  406d25:	push   es
  406d26:	pusha  
  406d27:	rep ins DWORD PTR es:[edi],dx
  406d29:	ins    BYTE PTR es:[edi],dx
  406d2a:	loope  0x406d86
  406d2c:	jg     0x406da2
  406d2e:	repz pop esp
  406d30:	aas    
  406d31:	pop    edx
  406d32:	sti    
  406d33:	lahf   
  406d34:	sub    DWORD PTR [edi+0x35],ebp
  406d37:	retf   0x894c
  406d3a:	or     BYTE PTR [edx+0x22221570],ch
  406d40:	(bad)  
  406d42:	xchg   esp,eax
  406d43:	mov    bl,BYTE PTR [ebp-0x6bdb64d7]
  406d49:	add    DWORD PTR [ecx+0x3e],ebx
  406d4c:	(bad)  
  406d4d:	leave  
  406d4e:	lds    ebx,FWORD PTR [ebx]
  406d50:	ins    DWORD PTR es:[edi],dx
  406d51:	call   FWORD PTR [ebx+0x7a298f9f]
  406d57:	mov    ch,0x79
  406d59:	cmc    
  406d5a:	cs sbb ch,ah
  406d5d:	out    dx,eax
  406d5e:	ds aam 0x94
  406d61:	and    eax,0xe76675bd
  406d66:	aam    0x3
  406d68:	mov    esp,edi
  406d6a:	das    
  406d6b:	aad    0xbb
  406d6d:	push   edi
  406d6e:	inc    ecx
  406d6f:	xor    cl,BYTE PTR [ecx]
  406d71:	sbb    BYTE PTR [ebx-0x6a],dl
  406d74:	jb     0x406ded
  406d76:	sahf   
  406d77:	xlat   BYTE PTR ds:[ebx]
  406d78:	mov    esp,0x449a7615
  406d7d:	mov    ebx,0x91c28ec6
  406d82:	inc    ebp
  406d83:	scas   al,BYTE PTR es:[edi]
  406d84:	cmp    al,0x6c
  406d86:	xor    BYTE PTR [edx],ch
  406d88:	pop    edx
  406d89:	test   BYTE PTR ds:0xd8b012d9,0x4f
  406d90:	xor    eax,DWORD PTR [edx-0x29]
  406d93:	fstp   TBYTE PTR [edx+eax*2]
  406d96:	ret    0x50fe
  406d99:	mov    esi,0x20f1c106
  406d9e:	bound  eax,QWORD PTR fs:[ecx]
  406da1:	test   al,0xb5
  406da3:	push   cs
  406da4:	dec    ebp
  406da5:	sahf   
  406da6:	data16 not BYTE PTR [ecx-0x35]
  406daa:	jb     0x406e2b
  406dac:	jns    0x406e0c
  406dae:	mov    ds:0x9730b7c0,al
  406db3:	fwait
  406db4:	xchg   BYTE PTR [edx-0x3a590a2e],cl
  406dba:	lea    edx,[ecx]
  406dbc:	jg     0x406d3f
  406dbe:	lahf   
  406dbf:	loop   0x406d45
  406dc1:	(bad)  
  406dc2:	popa   
  406dc3:	sbb    al,0x31
  406dc5:	pop    ebp
  406dc6:	cmp    DWORD PTR [ecx+ecx*8],esi
  406dc9:	es hlt 
  406dcb:	(bad)  
  406dcc:	xor    cl,BYTE PTR [edx-0x44]
  406dcf:	mov    edi,0x3fa180f2
  406dd4:	add    BYTE PTR [ebx+0x43],dl
  406dd7:	pop    ebx
  406dd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406dd9:	push   edx
  406dda:	repnz bound ebp,QWORD PTR ds:0x22549f05
  406de1:	into   
  406de2:	call   0x85e05f17
  406de7:	in     eax,dx
  406de8:	jmp    0x406de0
  406dea:	cwde   
  406deb:	(bad)  [ecx+eiz*1+0x6f]
  406def:	repnz sbb cl,BYTE PTR [esi]
  406df2:	rol    DWORD PTR [esi],cl
  406df4:	test   al,0x6c
  406df6:	test   BYTE PTR [ecx+0x91fa30e],dl
  406dfc:	mov    esi,0x89a40a53
  406e01:	dec    eax
  406e02:	mov    esi,0xb3bb8f33
  406e07:	stos   DWORD PTR es:[edi],eax
  406e08:	dec    edx
  406e09:	dec    esi
  406e0a:	imul   edx,DWORD PTR [edx-0x3c1f032c],0xffffffa2
  406e11:	lods   eax,DWORD PTR ds:[esi]
  406e12:	fst    DWORD PTR [edi+0x69dc8bd0]
  406e18:	or     BYTE PTR [ebx],dh
  406e1a:	std    
  406e1b:	sti    
  406e1c:	mov    esi,0xc133281b
  406e21:	and    cl,BYTE PTR [ecx]
  406e23:	out    0xb7,eax
  406e25:	jb     0x406e36
  406e27:	cmp    edi,DWORD PTR fs:[edi]
  406e2a:	ret    0x1cf4
  406e2d:	sub    esi,DWORD PTR [ecx+0x39]
  406e30:	(bad)  
  406e32:	shl    DWORD PTR [ecx+0x2a237ef9],0x50
  406e39:	out    0x15,eax
  406e3b:	mov    dl,0x59
  406e3d:	outs   dx,BYTE PTR ds:[esi]
  406e3e:	push   0x61
  406e40:	scas   eax,DWORD PTR es:[edi]
  406e41:	ds pop ecx
  406e43:	arpl   WORD PTR [ecx+0x12],sp
  406e46:	loopne 0x406eb3
  406e48:	add    BYTE PTR [eax+0x2580741d],al
  406e4e:	mov    BYTE PTR [ecx-0x29],dl
  406e51:	in     al,dx
  406e52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e53:	add    bl,BYTE PTR [esi+ecx*1-0x505822f]
  406e5a:	push   ebp
  406e5b:	mov    al,BYTE PTR [esp+ebp*2-0x7d2dd1e8]
  406e62:	mov    bh,0x74
  406e64:	pop    ds
  406e65:	pop    ss
  406e66:	in     al,0xb9
  406e68:	push   0xffffffe3
  406e6a:	in     eax,0xf3
  406e6c:	or     ebx,DWORD PTR [edx-0x29ab3c3d]
  406e72:	jne    0x406ebc
  406e74:	sub    al,0xba
  406e76:	popa   
  406e77:	jge    0x406e2e
  406e79:	pop    ds
  406e7a:	stos   BYTE PTR es:[edi],al
  406e7b:	push   cs
  406e7c:	mov    eax,0x7dc7759f
  406e81:	adc    edx,eax
  406e83:	sar    DWORD PTR [eax-0xc61399d],1
  406e89:	pop    ss
  406e8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e8b:	js     0x406e43
  406e8d:	dec    BYTE PTR [ebx]
  406e8f:	js     0x406ee5
  406e91:	ret    0xa75a
  406e94:	xchg   edi,eax
  406e95:	fcmovbe st,st(2)
  406e97:	pop    esp
  406e98:	sbb    al,0x46
  406e9a:	xchg   esp,eax
  406e9b:	stos   DWORD PTR es:[edi],eax
  406e9c:	sub    cl,BYTE PTR [eax]
  406e9e:	inc    ebx
  406e9f:	seta   BYTE PTR [eax+ebx*2-0x7f4cc004]
  406ea7:	(bad)
  406eac:	clc    
  406ead:	push   0x1d87bf85
  406eb2:	jp     0x406ebd
  406eb4:	dec    ebp
  406eb5:	jmp    ebp
  406eb7:	dec    ebp
  406eb8:	dec    ecx
  406eb9:	pusha  
  406eba:	dec    DWORD PTR [edx+0x33]
  406ebd:	pop    edx
  406ebe:	sub    esp,DWORD PTR [ebx*4+0x163ca4a7]
  406ec5:	lahf   
  406ec6:	cdq    
  406ec7:	add    BYTE PTR [edi],0x4c
  406eca:	pop    eax
  406ecb:	inc    ebp
  406ecc:	xchg   esi,eax
  406ecd:	and    bl,BYTE PTR [eax-0x77]
  406ed0:	gs adc eax,0xcf669be
  406ed6:	es pop ds
  406ed8:	bound  esi,QWORD PTR [edx]
  406eda:	push   esp
  406edb:	cmp    edi,DWORD PTR [edx-0x4de14175]
  406ee1:	and    eax,0x1fbac089
  406ee6:	repz or al,0xa9
  406ee9:	stc    
  406eea:	cmp    esi,DWORD PTR [edi+eiz*4+0x25]
  406eee:	mov    ds:0x213af23c,eax
  406ef3:	add    eax,0xe78d9ff0
  406ef8:	pop    ecx
  406ef9:	sbb    BYTE PTR [edi+0x12],dh
  406efc:	pop    esp
  406efd:	push   0x97a3a0c9
  406f02:	push   edi
  406f03:	scas   eax,DWORD PTR es:[edi]
  406f04:	mov    ebx,0x368abc45
  406f09:	ins    BYTE PTR es:[edi],dx
  406f0a:	loope  0x406efd
  406f0c:	scas   al,BYTE PTR es:[di]
  406f0e:	adc    eax,ecx
  406f10:	jl     0x406ed5
  406f12:	adc    edi,eax
  406f14:	je     0x406f60
  406f16:	xor    BYTE PTR [ebx+0x648c9489],0x4c
  406f1d:	xchg   edi,eax
  406f1e:	mov    eax,0xa48771f
  406f23:	inc    esi
  406f24:	mov    BYTE PTR [ecx+0x523cf3c7],0xbf
  406f2b:	aas    
  406f2c:	ja     0x406f80
  406f2e:	mov    eax,0x5d730a46
  406f33:	add    DWORD PTR ds:0x2f97e298,ebp
  406f39:	test   DWORD PTR ds:0xa0a58828,ebx
  406f3f:	xchg   DWORD PTR [edx+0x758b830e],esp
  406f45:	js     0x406f6a
  406f47:	jl     0x406eea
  406f49:	or     al,0x66
  406f4b:	cmp    ch,BYTE PTR [ecx-0x605dcc05]
  406f51:	dec    edi
  406f52:	pop    eax
  406f53:	cmc    
  406f54:	sbb    al,0xb7
  406f56:	push   esp
  406f57:	jge    0x406f17
  406f59:	ins    DWORD PTR es:[edi],dx
  406f5a:	not    BYTE PTR [ecx-0x7e2242c6]
  406f60:	cwde   
  406f61:	xchg   edi,ebx
  406f63:	test   eax,0xd13be97c
  406f68:	cmp    eax,0xe9e00640
  406f6d:	pop    es
  406f6e:	mov    ?,WORD PTR [ebx]
  406f70:	repnz mov dh,bl
  406f73:	sbb    DWORD PTR [eax-0x56],edx
  406f76:	xor    DWORD PTR [ecx-0x23],ecx
  406f79:	jmp    0xa07:0x3f375547
  406f80:	mov    ch,0xcf
  406f82:	sti    
  406f83:	call   0xb58dcd30
  406f88:	imul   ecx,ebx,0x32
  406f8b:	pop    ebx
  406f8c:	and    ah,BYTE PTR ds:0x987d96ff
  406f92:	stc    
  406f93:	stc    
  406f94:	pop    ebp
  406f95:	xchg   ecx,eax
  406f96:	mov    edx,DWORD PTR [edx+0x71213c12]
  406f9c:	xlat   BYTE PTR ds:[ebx]
  406f9d:	add    ah,BYTE PTR [ebx+0x33]
  406fa0:	sar    BYTE PTR [edx],0x7d
  406fa3:	(bad)  
  406fa4:	mov    ds:0xc76c2c83,al
  406fa9:	dec    edx
  406faa:	cmp    ah,BYTE PTR [edi+0x72add4ec]
  406fb0:	cli    
  406fb1:	jle    0x406ff9
  406fb3:	sub    dl,BYTE PTR [ecx+0x19ee5f2c]
  406fb9:	(bad)  
  406fba:	mov    dl,0xb6
  406fbc:	shl    BYTE PTR ss:[edx+eiz*1+0x604e8c9a],0xa8
  406fc5:	push   ss
  406fc6:	repz or eax,0x7377b26
  406fcc:	push   edi
  406fcd:	lahf   
  406fce:	arpl   WORD PTR ds:0xb745f856,si
  406fd4:	in     eax,dx
  406fd5:	clc    
  406fd6:	xor    BYTE PTR [edi-0x26],cl
  406fd9:	scas   al,BYTE PTR es:[edi]
  406fda:	popa   
  406fdb:	stos   BYTE PTR es:[edi],al
  406fdc:	outs   dx,BYTE PTR ds:[esi]
  406fdd:	dec    ebx
  406fde:	lahf   
  406fdf:	out    dx,al
  406fe0:	jmp    0xf751:0x8682cf74
  406fe7:	popf   
  406fe8:	call   0xaefdea90
  406fed:	clc    
  406fee:	test   BYTE PTR [ecx-0xb838082],dh
  406ff4:	mov    cl,0xfa
  406ff6:	aam    0x84
  406ff8:	arpl   si,cx
  406ffa:	dec    edx
  406ffb:	test   eax,0x844dca6f
  407000:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407001:	(bad)  
  407002:	enter  0x4f31,0x26
  407006:	sub    edx,DWORD PTR [edi+0x6c]
  407009:	les    eax,FWORD PTR [ecx]
  40700b:	test   ebx,edx
  40700d:	out    0x7a,al
  40700f:	sti    
  407010:	push   ecx
  407011:	fisttp QWORD PTR [ebx+0x739fae1]
  407017:	push   edi
  407018:	and    ah,BYTE PTR [ecx-0x67]
  40701b:	in     al,0xef
  40701d:	jecxz  0x406fa3
  40701f:	movsx  ebp,WORD PTR [edx+0x771ecb6a]
  407026:	loop   0x407048
  407028:	test   al,0xf4
  40702a:	jmp    0xab87839
  40702f:	add    al,0xaa
  407031:	pop    edx
  407032:	push   edx
  407033:	aad    0xdc
  407035:	hlt    
  407036:	ret    
  407037:	popf   
  407038:	(bad)  
  407039:	xor    eax,0xe8f1b429
  40703e:	xchg   DWORD PTR [eax+0x20],ebx
  407041:	ret    0x2cb1
  407044:	in     al,0x65
  407046:	inc    ecx
  407047:	fdivr  QWORD PTR [eax-0x2d]
  40704a:	pop    ecx
  40704b:	shl    BYTE PTR [ecx+0x7ca0a542],0x7d
  407052:	gs push ds
  407054:	push   ecx
  407055:	(bad)  
  407056:	aaa    
  407057:	aas    
  407058:	hlt    
  407059:	dec    esi
  40705a:	arpl   cx,dx
  40705c:	ins    BYTE PTR es:[edi],dx
  40705d:	inc    ecx
  40705e:	xor    eax,0xaf601db4
  407063:	(bad)  
  407064:	cld    
  407065:	mov    al,ds:0x3f97ec0e
  40706a:	out    0x3,al
  40706c:	push   esp
  40706d:	push   ss
  40706e:	mov    ebp,0x3d740bb2
  407073:	pusha  
  407074:	mov    WORD PTR [esi+0x34],ss
  407077:	test   DWORD PTR [esi+ecx*1-0x6a],eax
  40707b:	jae    0x4070cf
  40707d:	bound  ebx,QWORD PTR [ebx]
  40707f:	jle    0x4070f2
  407081:	sbb    DWORD PTR [edx+0x1e],edx
  407084:	or     al,bl
  407086:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407087:	cmc    
  407088:	mov    ebx,0x2e462307
  40708d:	jno    0x4070c4
  40708f:	jno    0x4070a1
  407091:	add    al,0x2f
  407093:	stos   DWORD PTR es:[edi],eax
  407094:	lea    esi,[ebx]
  407096:	lds    ebp,FWORD PTR [esi+0x58b74ebc]
  40709c:	dec    ebp
  40709d:	scas   al,BYTE PTR es:[edi]
  40709e:	xor    BYTE PTR [edi-0x5],dl
  4070a1:	xchg   ebx,eax
  4070a3:	fstp   QWORD PTR [edi-0x73]
  4070a6:	loopne 0x407071
  4070a8:	mov    ebx,0xe17a930e
  4070ad:	mov    al,ds:0x58d9a534
  4070b2:	in     al,dx
  4070b3:	cmp    ebp,esp
  4070b5:	sahf   
  4070b6:	outs   dx,BYTE PTR ds:[esi]
  4070b7:	jg     0x4070f0
  4070b9:	dec    esi
  4070ba:	xchg   edi,eax
  4070bb:	(bad)  
  4070bc:	jp     0x4070ca
  4070be:	bound  eax,QWORD PTR [edi+0x57b7d018]
  4070c4:	and    ch,BYTE PTR [esi]
  4070c6:	sub    DWORD PTR [edi+edi*8],esi
  4070c9:	das    
  4070ca:	jge    0x40709a
  4070cc:	cwde   
  4070cd:	xchg   edx,eax
  4070ce:	mov    esi,0x4f9f6b08
  4070d3:	sub    al,0xba
  4070d5:	cmp    edx,DWORD PTR [ebx]
  4070d7:	mov    ds:0xe8fada07,al
  4070dc:	ja     0x4070dc
  4070de:	mov    DWORD PTR [ecx],esi
  4070e0:	fcmovnbe st,st(2)
  4070e2:	xchg   bl,ah
  4070e4:	(bad)  
  4070e5:	ins    BYTE PTR es:[edi],dx
  4070e6:	leave  
  4070e7:	adc    eax,DWORD PTR [ecx+0x12f769a]
  4070ed:	test   al,0xe5
  4070ef:	jbe    0x407148
  4070f1:	lock adc DWORD PTR [ebx],ebx
  4070f4:	xchg   BYTE PTR [edi],dh
  4070f6:	or     DWORD PTR [esp+edx*2+0x58],ebx
  4070fa:	test   DWORD PTR [ebx+0x40],0xfe63044
  407101:	mov    WORD PTR [esp+edx*8+0x77184801],ds
  407108:	jae    0x4070ec
  40710a:	les    ecx,FWORD PTR [edi-0x58]
  40710d:	cmp    BYTE PTR [ebp+esi*8+0x79],cl
  407111:	retf   0x19ee
  407114:	jne    0x4070d6
  407116:	test   eax,0x3a17e1c1
  40711b:	sbb    edi,DWORD PTR [ecx+0x39]
  40711e:	xchg   esi,eax
  40711f:	inc    edx
  407120:	and    bh,bl
  407122:	(bad)  [eax-0x5a]
  407125:	mov    al,0xec
  407127:	mov    ebp,0xdd648c55
  40712c:	xchg   edi,eax
  40712d:	jl     0x407167
  40712f:	xchg   DWORD PTR [ebx+0x7fe2fb9f],ebx
  407135:	push   edi
  407136:	sub    DWORD PTR [eax-0x5a],ebx
  407139:	inc    edx
  40713a:	mov    ds:0xd14d531b,eax
  40713f:	sahf   
  407140:	and    ch,BYTE PTR [edi]
  407142:	les    esp,FWORD PTR [esi-0x1af2bffa]
  407148:	fucomi st,st(3)
  40714a:	popa   
  40714b:	add    al,0x7c
  40714d:	mov    eax,0x13e26003
  407152:	push   esp
  407153:	dec    esi
  407154:	push   ds
  407155:	dec    esp
  407156:	or     DWORD PTR [ecx+0x54],esi
  407159:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40715a:	mov    esi,0x96a26767
  40715f:	xor    eax,0x1cc480ee
  407164:	pusha  
  407165:	mov    bl,0x57
  407167:	jmp    0x72f1:0x77cc0f69
  40716e:	popa   
  40716f:	xchg   ebx,eax
  407170:	(bad)  
  407171:	pop    ecx
  407172:	jmp    0xf33a:0xf0909669
  407179:	mov    ds:0x84db9f46,al
  40717e:	jo     0x4071c4
  407180:	popa   
  407181:	sub    BYTE PTR [ebp-0x5092dab0],0x41
  407188:	or     esp,ecx
  40718a:	jb     0x4071b6
  40718c:	pop    ecx
  40718d:	lods   al,BYTE PTR ds:[esi]
  40718e:	push   eax
  40718f:	call   0x4c17:0xc843d7e6
  407196:	inc    ebp
  407197:	mov    ds:0xaa98cf60,al
  40719c:	addr16 sub eax,0xb31d8c5
  4071a2:	add    BYTE PTR [ebx],bl
  4071a4:	je     0x40712f
  4071a6:	fnstenv [edi]
  4071a8:	call   0x8647b524
  4071ad:	sahf   
  4071ae:	or     al,BYTE PTR [edi+eiz*1-0x15]
  4071b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071b3:	xor    esp,DWORD PTR [edi-0xc88d798]
  4071b9:	sub    cl,bl
  4071bb:	xchg   cl,ah
  4071bd:	int3   
  4071be:	adc    BYTE PTR [ebx],bh
  4071c0:	call   0xc058:0xf88d88da
  4071c7:	pop    ss
  4071c8:	push   ebx
  4071c9:	lahf   
  4071ca:	test   DWORD PTR [eax+esi*1-0x6e8b23f],ecx
  4071d1:	aam    0xcb
  4071d3:	push   ds
  4071d4:	cld    
  4071d5:	stos   DWORD PTR es:[edi],eax
  4071d6:	pushf  
  4071d7:	test   bh,ch
  4071d9:	loope  0x40718a
  4071db:	cmp    al,0x26
  4071dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071de:	(bad)  
  4071df:	sbb    edi,DWORD PTR [ebp+0x6c7e3a91]
  4071e5:	sbb    eax,0xd467c28b
  4071ea:	push   ds
  4071eb:	es dec ecx
  4071ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071ee:	out    0x27,al
  4071f0:	neg    ebx
  4071f2:	xchg   DWORD PTR [esi],ecx
  4071f4:	sub    eax,0xc9f8e3e2
  4071f9:	div    DWORD PTR [esi]
  4071fb:	xchg   ecx,eax
  4071fc:	push   edi
  4071fd:	mov    eax,0xf83f3905
  407202:	push   edi
  407203:	push   ebp
  407204:	js     0x407236
  407206:	pop    ecx
  407207:	inc    eax
  407208:	lods   eax,DWORD PTR ds:[esi]
  407209:	xchg   ebp,eax
  40720a:	pop    edx
  40720b:	nop
  40720c:	stos   BYTE PTR es:[edi],al
  40720d:	jge    0x407277
  40720f:	jecxz  0x40720b
  407211:	adc    BYTE PTR [esi-0x63dea226],bl
  407217:	in     eax,0xba
  407219:	pop    ecx
  40721a:	icebp  
  40721b:	sar    DWORD PTR [ebx-0x4c83be84],0x84
  407222:	fdivp  st(2),st
  407224:	mov    eax,ds:0x242c2e07
  407229:	in     al,dx
  40722a:	es aam 0xe6
  40722d:	inc    eax
  40722e:	test   esp,ebx
  407230:	add    al,0x9
  407232:	test   eax,0x1e81d9e9
  407237:	cmp    esp,0xe
  40723a:	dec    edx
  40723b:	mov    dh,0x21
  40723d:	gs fwait
  40723f:	lahf   
  407240:	inc    edx
  407241:	loop   0x4071ef
  407243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407244:	sub    eax,0xd3d1b850
  407249:	dec    esi
  40724a:	sbb    eax,0xae4ecdad
  40724f:	leave  
  407250:	call   0x7946df53
  407255:	inc    eax
  407256:	sbb    DWORD PTR ds:0xf8cbf38c,ebp
  40725c:	ja     0x40725a
  40725e:	pop    ds
  40725f:	nop
  407260:	mul    DWORD PTR [ebp-0xf9c3a94]
  407266:	cmp    DWORD PTR [esi+0x59],0xfffffffa
  40726a:	dec    ebx
  40726b:	pop    ss
  40726c:	mov    BYTE PTR ds:0x1a228011,bh
  407272:	retf   
  407273:	aaa    
  407274:	jb     0x40725a
  407276:	out    0xa2,eax
  407278:	sar    bl,cl
  40727a:	mov    ch,0x5a
  40727c:	xchg   ebp,eax
  40727d:	(bad)  
  40727e:	fidiv  WORD PTR [eax+ebp*8+0xd]
  407282:	push   ss
  407283:	xchg   edi,eax
  407284:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407285:	xor    al,BYTE PTR [esi-0x18]
  407288:	mov    bl,0x32
  40728a:	and    ebx,DWORD PTR [ebp-0xa]
  40728d:	and    edx,esp
  40728f:	aaa    
  407290:	rol    BYTE PTR [ecx+0x32],cl
  407293:	pop    ds
  407294:	inc    edi
  407295:	push   edx
  407296:	jg     0x407226
  407298:	loop   0x407251
  40729a:	cmp    eax,0x2f25b300
  40729f:	mov    esp,0x3359f3e1
  4072a4:	repnz arpl WORD PTR [ecx+0x37],si
  4072a8:	(bad)  
  4072a9:	push   cs
  4072aa:	(bad)  
  4072ab:	sbb    BYTE PTR [esi],al
  4072ad:	in     al,dx
  4072ae:	push   eax
  4072af:	aam    0x4d
  4072b1:	sbb    eax,0x7d4dfbc0
  4072b6:	mov    cx,0xec30
  4072ba:	int3   
  4072bb:	test   DWORD PTR [edx+0x78],edx
  4072be:	mov    dh,0x22
  4072c0:	jmp    0x86ab8056
  4072c5:	mov    dl,0x7a
  4072c7:	or     al,0x27
  4072c9:	arpl   WORD PTR [eax],cx
  4072cb:	push   edi
  4072cc:	sbb    eax,0xefa7eb98
  4072d1:	dec    esi
  4072d2:	xchg   ah,al
  4072d4:	into   
  4072d5:	cmp    al,0xc5
  4072d7:	fcomp  QWORD PTR [esi-0x28]
  4072da:	sbb    al,0x75
  4072dc:	stos   DWORD PTR es:[edi],eax
  4072dd:	ins    DWORD PTR es:[edi],dx
  4072de:	pop    esp
  4072df:	jmp    0x1ef0:0x99253f2e
  4072e6:	inc    eax
  4072e7:	mov    ds:0x5a3d80a3,al
  4072ec:	dec    esi
  4072ed:	test   al,0x9a
  4072ef:	sub    al,0xf6
  4072f1:	stos   BYTE PTR es:[edi],al
  4072f2:	dec    DWORD PTR [esi-0x7a]
  4072f5:	xlat   BYTE PTR ds:[ebx]
  4072f6:	jle    0x4072e1
  4072f8:	imul   edx,DWORD PTR ds:0x44709a6e,0x9460c5fa
  407302:	arpl   dx,si
  407304:	jb     0x40735d
  407306:	cwde   
  407307:	dec    ebp
  407308:	(bad)
  40730b:	jmp    0x4072ae
  40730d:	dec    esi
  40730e:	mov    dl,al
  407310:	out    0xd4,al
  407312:	inc    edi
  407313:	les    eax,FWORD PTR [ebx]
  407315:	sbb    DWORD PTR [esi-0x5a],edi
  407318:	les    eax,FWORD PTR [esp+ebx*1+0x6b79ffe]
  40731f:	xchg   BYTE PTR [ebx+0x5d],bl
  407322:	(bad)  
  407323:	retf   0xccc1
  407326:	push   0x9d5d83f8
  40732b:	fsubr  QWORD PTR [edx+0x3e]
  40732e:	scas   eax,DWORD PTR es:[edi]
  40732f:	mov    edi,0x62d5a8fe
  407334:	mov    ch,0x48
  407336:	int3   
  407337:	xor    esp,esi
  407339:	rcl    BYTE PTR [ebp+0x6336845c],0x62
  407340:	(bad)  
  407341:	jle    0x407320
  407343:	sbb    eax,0x5fea3e63
  407348:	and    bl,BYTE PTR [ecx-0x45df247a]
  40734e:	pop    edi
  40734f:	dec    ecx
  407350:	mov    ebx,0xda4845a0
  407355:	mov    ecx,0x117b86fb
  40735a:	push   ebx
  40735b:	dec    eax
  40735c:	sub    ch,ah
  40735e:	mov    ah,0x26
  407360:	cmp    al,BYTE PTR [eax+esi*8+0x1f813795]
  407367:	out    dx,eax
  407368:	(bad)  
  407369:	out    dx,al
  40736a:	jmp    0x15487a23
  40736f:	pushf  
  407370:	xor    eax,0x86c68655
  407375:	sub    eax,0x80ba9221
  40737a:	jg     0x4073a9
  40737c:	gs stc 
  40737e:	xchg   DWORD PTR [ecx],esi
  407380:	fstp   st(6)
  407382:	leave  
  407383:	jmp    0x407340
  407385:	add    cl,BYTE PTR [edi-0x19]
  407388:	add    ebp,DWORD PTR [edx]
  40738a:	call   0x9d5a:0xc6fc7ec7
  407391:	adc    ch,BYTE PTR [edx-0x44d96442]
  407397:	mov    esi,0x917d4946
  40739c:	rep lods al,BYTE PTR ds:[esi]
  40739e:	in     al,0xd8
  4073a0:	fmul   DWORD PTR [eax+eax*1]
  4073a3:	mov    eax,0x56b6166
  4073a8:	xor    ecx,ebx
  4073aa:	dec    ebx
  4073ab:	in     eax,dx
  4073ac:	xchg   edx,eax
  4073ad:	push   edi
  4073ae:	cmp    eax,ebp
  4073b0:	repz ret 
  4073b2:	(bad)  
  4073b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073b4:	xchg   esp,eax
  4073b5:	jb     0x407368
  4073b7:	mov    eax,ds:0xf37c6715
  4073bc:	js     0x407371
  4073be:	sbb    ecx,DWORD PTR [eax]
  4073c0:	mov    ds:0x2789707c,eax
  4073c5:	sub    edx,DWORD PTR [edi+0x48]
  4073c8:	jne    0x407377
  4073ca:	xchg   ecx,eax
  4073cb:	jmp    0xdab5e224
  4073d0:	in     al,0x60
  4073d2:	pop    ecx
  4073d3:	fs push ebp
  4073d5:	add    al,0x2f
  4073d7:	nop
  4073d8:	mov    ch,0x44
  4073da:	inc    edx
  4073db:	dec    ebx
  4073dc:	es adc ecx,ebp
  4073df:	iret   
  4073e0:	mov    DWORD PTR [esi],esi
  4073e2:	nop
  4073e3:	xlat   BYTE PTR ds:[ebx]
  4073e4:	stc    
  4073e5:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073e7:	test   eax,0x237b52db
  4073ec:	adc    edx,ebx
  4073ee:	js     0x4073dc
  4073f0:	(bad)  
  4073f1:	mov    edi,0xee31fd7d
  4073f6:	enter  0x2496,0x62
  4073fa:	and    ebp,DWORD PTR [esi+edi*2+0x167e15db]
  407401:	pop    es
  407402:	je     0x4073bb
  407404:	in     al,dx
  407405:	push   es
  407406:	adc    ebp,DWORD PTR [ebx-0x2ea85543]
  40740c:	pop    ss
  40740d:	ret    0xd498
  407410:	push   edx
  407411:	ins    DWORD PTR es:[edi],dx
  407412:	pushf  
  407413:	lods   al,BYTE PTR ds:[esi]
  407414:	repnz push esi
  407416:	imul   DWORD PTR [ecx-0x42]
  407419:	jmp    0xcaf44f59
  40741e:	add    eax,eax
  407420:	jo     0x4073a9
  407422:	sbb    al,0x7e
  407424:	pop    esi
  407425:	fild   DWORD PTR [ebp+0x14]
  407428:	ret    0x9d52
  40742b:	mov    edi,0x1e21eb2f
  407430:	pop    edi
  407431:	scas   al,BYTE PTR es:[edi]
  407432:	mov    bh,0x85
  407434:	xchg   BYTE PTR [ebx+0x31ff16b0],ch
  40743a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40743b:	add    eax,0xcbc522d5
  407440:	inc    esp
  407441:	and    eax,0x2624222e
  407446:	nop
  407447:	jmp    0x2b66c87a
  40744c:	mov    edi,DWORD PTR [edx]
  40744e:	xchg   ebp,eax
  40744f:	gs inc edx
  407451:	mov    BYTE PTR [ecx],bl
  407453:	xor    al,0x19
  407455:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407456:	push   esp
  407457:	xor    bh,dl
  407459:	in     eax,dx
  40745a:	loope  0x40749a
  40745c:	call   0xc2e2:0x786933ba
  407463:	mov    al,0xa1
  407465:	push   ecx
  407466:	xchg   ebx,eax
  407467:	xchg   ebp,eax
  407468:	sti    
  407469:	icebp  
  40746a:	mov    bh,bh
  40746c:	adc    al,BYTE PTR [ecx+0x339972c0]
  407472:	pop    eax
  407473:	cdq    
  407474:	jbe    0x4074eb
  407476:	hlt    
  407477:	mov    al,ds:0x13a50494
  40747c:	add    dh,BYTE PTR [eax+0x370d5989]
  407482:	jns    0x4074fa
  407484:	and    esp,DWORD PTR [edx+0x1f4368f3]
  40748a:	jp     0x4074db
  40748c:	mov    WORD PTR [eax*2-0x2e5e4947],es
  407493:	mov    eax,ds:0xbc7930c0
  407498:	fs je  0x4074fe
  40749b:	setbe  ah
  40749e:	fistp  DWORD PTR [edx]
  4074a0:	sahf   
  4074a1:	(bad)  
  4074a2:	jo     0x40749d
  4074a4:	pop    edi
  4074a5:	cmp    eax,edx
  4074a7:	push   edi
  4074a8:	mov    WORD PTR [eax+0x53],fs
  4074ab:	and    BYTE PTR [ecx-0x7b364e38],dh
  4074b1:	ret    0xb206
  4074b4:	aas    
  4074b5:	pop    ebx
  4074b6:	mov    dh,0xc7
  4074b8:	push   ss
  4074b9:	scas   al,BYTE PTR es:[edi]
  4074ba:	and    eax,0x44a8be59
  4074bf:	jno    0x4074b5
  4074c1:	xlat   BYTE PTR ds:[ebx]
  4074c2:	xor    dh,BYTE PTR [esi-0x56]
  4074c5:	xor    BYTE PTR [ecx-0x5c],al
  4074c8:	loope  0x4074aa
  4074ca:	sbb    eax,0x254a30ea
  4074cf:	mov    ebx,0xe0a6a142
  4074d4:	push   ecx
  4074d5:	aad    0xd9
  4074d7:	sti    
  4074d8:	add    ch,bh
  4074da:	jle    0x407464
  4074dc:	jmp    0x95c53aea
  4074e1:	xchg   esp,eax
  4074e2:	lds    ebp,FWORD PTR [eax]
  4074e4:	push   esp
  4074e5:	dec    ebx
  4074e6:	bound  esi,QWORD PTR [eax+0xd]
  4074e9:	stos   DWORD PTR es:[edi],eax
  4074ea:	loop   0x4074b1
  4074ec:	pushf  
  4074ed:	adc    dh,BYTE PTR [ebx+0x6446021a]
  4074f3:	stos   BYTE PTR es:[edi],al
  4074f4:	inc    eax
  4074f5:	mov    edx,DWORD PTR [ebp-0x17]
  4074f8:	les    ebp,FWORD PTR [esi]
  4074fa:	jbe    0x407490
  4074fc:	sbb    edi,0x121f2649
  407502:	pop    es
  407503:	pcmpgtd mm4,QWORD PTR [ebx]
  407506:	into   
  407507:	adc    eax,0x110a10f6
  40750c:	div    cl
  40750e:	mov    cl,0x20
  407510:	or     bh,BYTE PTR [esi]
  407512:	sbb    al,0xe7
  407514:	dec    eax
  407515:	add    eax,DWORD PTR [eax]
  407517:	or     al,0xa2
  407519:	sub    BYTE PTR [ebp+0x27],cl
  40751c:	dec    esp
  40751d:	mov    ebp,0xddeb9d2b
  407522:	add    cl,dl
  407524:	iret   
  407525:	stc    
  407526:	cld    
  407527:	mov    al,ds:0xad340cdc
  40752c:	bound  ebx,QWORD PTR [eax-0x6161733c]
  407532:	test   al,0x3e
  407534:	int3   
  407535:	test   al,0xfa
  407537:	gs push 0x3433fff5
  40753d:	jmp    0x40758d
  40753f:	pop    edi
  407540:	cmp    cl,BYTE PTR [ecx]
  407542:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407543:	scas   al,BYTE PTR es:[edi]
  407544:	mov    ds:0x55441e3d,eax
  407549:	cmp    al,0xa9
  40754b:	xor    BYTE PTR [ebp+0xd],ah
  40754e:	dec    edi
  40754f:	sbb    eax,0x5f8f5405
  407554:	aam    0x7a
  407556:	jecxz  0x40758b
  407558:	xchg   edi,eax
  407559:	adc    BYTE PTR [eax-0x31],al
  40755c:	(bad)  
  40755d:	and    al,0xd9
  40755f:	mov    ecx,0xcfdcd925
  407564:	retf   
  407565:	ja     0x4075ac
  407567:	pop    edi
  407568:	in     al,dx
  407569:	icebp  
  40756a:	inc    esi
  40756b:	add    DWORD PTR [ecx-0xbce773b],esp
  407571:	in     al,0x8d
  407573:	or     BYTE PTR [ecx+0xee9bde1],ch
  407579:	jae    0x407532
  40757b:	(bad)  
  40757c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40757d:	xchg   edi,eax
  40757e:	adc    BYTE PTR [ebx+ecx*8],bh
  407581:	mov    eax,ds:0x633722d0
  407586:	push   ds
  407587:	sbb    al,0x3a
  407589:	sub    ah,cl
  40758b:	(bad)  
  40758c:	xchg   ebx,eax
  40758d:	outs   dx,DWORD PTR ds:[esi]
  40758e:	inc    edx
  40758f:	jg     0x40756b
  407591:	icebp  
  407592:	mov    WORD PTR [eax-0x1],?
  407595:	inc    ebp
  407596:	push   esi
  407597:	lods   eax,DWORD PTR ds:[esi]
  407598:	cvtps2pi mm1,xmm6
  40759b:	fnstcw WORD PTR [eax-0x7a8413a7]
  4075a1:	sar    BYTE PTR [edx],cl
  4075a3:	mov    esi,0xa114c0a9
  4075a8:	push   ebp
  4075a9:	enter  0x9df7,0x35
  4075ad:	inc    ecx
  4075ae:	shl    BYTE PTR [ebx-0x1fee588b],0x5
  4075b5:	cmp    al,0xcb
  4075b7:	xor    al,0x89
  4075b9:	xchg   BYTE PTR [eax-0x5d],bh
  4075bc:	dec    eax
  4075bd:	and    al,BYTE PTR [ebp+0x5e1f4332]
  4075c3:	cmc    
  4075c4:	bound  eax,QWORD PTR [edx]
  4075c6:	dec    eax
  4075c7:	lahf   
  4075c8:	sbb    DWORD PTR [edx+ebx*4],0x60
  4075cc:	sub    ch,BYTE PTR [esi]
  4075ce:	cs push 0x35ae69bf
  4075d4:	jg     0x4075e9
  4075d6:	push   ecx
  4075d7:	fimul  WORD PTR [ebp-0x6afa8b51]
  4075dd:	jge    0x40765c
  4075df:	dec    edi
  4075e0:	mov    edx,0x8f16d8e4
  4075e5:	pop    esp
  4075e6:	mov    dl,0x31
  4075e8:	repnz push 0x79a4a6fd
  4075ee:	mov    eax,0x8d05658f
  4075f3:	push   cs
  4075f4:	(bad)  
  4075f5:	fild   DWORD PTR [edi]
  4075f7:	mov    ebp,0xb68f5753
  4075fc:	ret    0xfd33
  4075ff:	int    0x87
  407601:	in     eax,0xe5
  407603:	icebp  
  407604:	xor    edi,esi
  407606:	imul   BYTE PTR [edi-0x6d]
  407609:	outs   dx,BYTE PTR gs:[esi]
  40760b:	dec    esi
  40760c:	mov    bl,0xa3
  40760e:	push   ecx
  40760f:	icebp  
  407610:	pop    edi
  407611:	scas   al,BYTE PTR es:[edi]
  407612:	(bad)  
  407613:	xor    bl,BYTE PTR [ebx]
  407615:	sub    eax,0x4e03fa47
  40761a:	sahf   
  40761b:	sti    
  40761c:	pusha  
  40761d:	(bad)  
  40761e:	aaa    
  40761f:	dec    ecx
  407620:	push   ecx
  407621:	pop    ebx
  407622:	adc    eax,0x47315946
  407627:	sub    al,0xfe
  407629:	inc    esp
  40762a:	jmp    0x323afb22
  40762f:	and    ecx,ebx
  407631:	rcl    DWORD PTR [edx],0x6c
  407634:	or     dh,ah
  407636:	mov    esi,DWORD PTR [esi-0x2d9d4bba]
  40763c:	neg    BYTE PTR [ecx]
  40763e:	dec    edi
  40763f:	sbb    al,0x1e
  407641:	clc    
  407642:	int3   
  407643:	std    
  407644:	lds    ecx,FWORD PTR [ebx+0x45a712f4]
  40764a:	xchg   edi,eax
  40764b:	pop    esi
  40764c:	int    0x79
  40764e:	call   0x9a3a787b
  407653:	sar    DWORD PTR [eax-0x37],cl
  407656:	adc    al,BYTE PTR [ebp+ebx*4+0x1e]
  40765a:	mov    ebp,0x964d0955
  40765f:	jb     0x4076de
  407661:	mov    dh,0xc0
  407663:	add    cl,ch
  407665:	(bad)  
  407666:	push   0xc4213d86
  40766b:	inc    ebp
  40766c:	enter  0x6222,0xe3
  407670:	sub    BYTE PTR [edi+0x5],dl
  407673:	jns    0x407676
  407675:	ins    DWORD PTR es:[edi],dx
  407676:	gs aas 
  407678:	sbb    cl,al
  40767a:	pop    esp
  40767b:	pop    ebx
  40767c:	repz pop ss
  40767e:	xchg   DWORD PTR [esi-0x1cd89a1e],edx
  407684:	and    eax,0x50973aa6
  407689:	loopne 0x407622
  40768b:	jmp    0xfa:0x5b2a6058
  407692:	ret    0x72ed
  407695:	inc    edi
  407696:	addr16 dec edx
  407698:	mov    cl,0xe9
  40769a:	inc    ecx
  40769b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40769c:	leave  
  40769d:	jl     0x407642
  40769f:	ret    0xf28c
  4076a2:	inc    edx
  4076a3:	mov    WORD PTR [ebp-0x4],fs
  4076a6:	xor    ah,BYTE PTR [eax-0x15a0d121]
  4076ac:	stc    
  4076ad:	fadd   QWORD PTR [edi]
  4076af:	push   esp
  4076b0:	das    
  4076b1:	cwde   
  4076b2:	sub    edx,edi
  4076b4:	into   
  4076b5:	mov    al,0x81
  4076b7:	clc    
  4076b8:	or     DWORD PTR [edx+0x7],ebp
  4076bb:	jb     0x4076dc
  4076bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076be:	test   DWORD PTR [ecx+0x5],esi
  4076c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076c2:	sub    BYTE PTR [esp+eax*1-0x5e],cl
  4076c6:	imul   ecx,DWORD PTR [ebx+edi*1-0x7b7f38b9],0xaf5721b0
  4076d1:	push   cs
  4076d2:	add    esp,esp
  4076d4:	sbb    ecx,DWORD PTR [esi]
  4076d6:	neg    DWORD PTR [ebx+0x32b9c14e]
  4076dc:	lods   al,BYTE PTR ds:[esi]
  4076dd:	pop    edx
  4076de:	enter  0x615e,0x78
  4076e2:	jp     0x407736
  4076e4:	mov    eax,ss:0xec537f6f
  4076ea:	push   es
  4076eb:	cwde   
  4076ec:	sbb    esp,ebx
  4076ee:	dec    ebp
  4076ef:	jmp    0x407674
  4076f1:	mov    cl,0xc1
  4076f3:	xchg   esi,ecx
  4076f5:	push   cs
  4076f6:	mov    esi,0xb5ffcfa6
  4076fb:	enter  0x8c82,0xe0
  4076ff:	cmc    
  407700:	(bad)  
  407701:	retf   0xffa3
  407704:	stos   DWORD PTR es:[edi],eax
  407705:	inc    ecx
  407706:	daa    
  407707:	pop    eax
  407708:	inc    edi
  407709:	call   0x4fca:0xbd836f03
  407710:	add    edx,esp
  407712:	sahf   
  407713:	dec    DWORD PTR [ebp+0xfe56fb7]
  407719:	adc    BYTE PTR ds:0xad643f83,ah
  40771f:	dec    ebp
  407720:	mov    bl,0xa7
  407722:	sbb    edi,ecx
  407724:	div    BYTE PTR [eax]
  407726:	test   eax,0xf6e486b1
  40772b:	dec    ebx
  40772c:	test   eax,0x77de1efe
  407731:	jo     0x4076e4
  407733:	mov    dh,0xa7
  407735:	lock ficomp DWORD PTR [edx-0x12bd558c]
  40773c:	fwait
  40773d:	inc    edi
  40773e:	mov    ds:0x412fe018,eax
  407743:	gs (bad) 
  407745:	(bad)  
  407746:	mov    esi,0xdec3f1ca
  40774b:	adc    al,0x56
  40774d:	ss mov bp,0xbb8b
  407752:	inc    ebp
  407753:	mov    dh,BYTE PTR [ebp+0x39eac10f]
  407759:	jns    0x4077cd
  40775b:	clc    
  40775c:	pop    ebx
  40775d:	pop    eax
  40775e:	sub    al,0x5a
  407760:	xchg   esp,eax
  407761:	push   ebp
  407762:	in     eax,0x35
  407764:	xchg   ebp,eax
  407765:	xor    DWORD PTR [edx-0x14236c8f],edi
  40776b:	or     DWORD PTR [ebx-0x3a],0x51
  40776f:	or     edi,DWORD PTR [ebp-0x67]
  407772:	stos   DWORD PTR es:[edi],eax
  407773:	iret   
  407774:	and    al,0xe
  407776:	xchg   edx,eax
  407777:	sbb    DWORD PTR [eax-0xe1210f],ecx
  40777d:	or     ebx,DWORD PTR ds:0x1f87602f
  407783:	mov    bl,0x63
  407785:	(bad)  [esi]
  407787:	mov    dh,BYTE PTR ds:0xd1c4168c
  40778d:	mov    eax,ds:0x4f406e49
  407792:	add    DWORD PTR fs:[ecx],esp
  407795:	ret    
  407796:	jns    0x407753
  407798:	bound  ecx,QWORD PTR [esi]
  40779a:	jbe    0x4077bd
  40779c:	add    al,bl
  40779e:	pop    ebx
  40779f:	or     BYTE PTR ds:0xa5e5df9b,dh
  4077a5:	xor    DWORD PTR [edx],ebx
  4077a7:	push   cs
  4077a8:	shr    BYTE PTR [esi+0xd],1
  4077ab:	xchg   edi,eax
  4077ac:	mov    ebp,0xaf6199eb
  4077b1:	ficomp WORD PTR ds:0xbd9368fa
  4077b7:	dec    ecx
  4077b8:	add    BYTE PTR [ebx],ah
  4077ba:	inc    edx
  4077bb:	pusha  
  4077bc:	and    bl,BYTE PTR [eax-0x7a]
  4077bf:	ja     0x4077a1
  4077c1:	(bad)  
  4077c2:	stos   DWORD PTR es:[edi],eax
  4077c3:	loope  0x407754
  4077c5:	aad    0x7c
  4077c7:	std    
  4077c8:	xchg   ecx,eax
  4077c9:	push   edx
  4077ca:	push   edx
  4077cb:	shl    DWORD PTR [ebx+0x6f],1
  4077ce:	hlt    
  4077cf:	out    0xd3,eax
  4077d1:	pop    ds
  4077d2:	pusha  
  4077d3:	xchg   ecx,eax
  4077d4:	shl    DWORD PTR [esi+0x4205c4a1],1
  4077da:	sbb    BYTE PTR [edi-0x162e7bb3],cl
  4077e0:	mov    cl,0x24
  4077e2:	ror    DWORD PTR [ecx-0x5],1
  4077e5:	cmp    bh,BYTE PTR [edi+ecx*8-0x2]
  4077e9:	std    
  4077ea:	mov    al,BYTE PTR [edx+edi*2+0xec05da]
  4077f1:	nop
  4077f2:	dec    ecx
  4077f3:	sbb    al,0x39
  4077f5:	retf   
  4077f6:	repz mov edi,0xdcecd5a6
  4077fc:	addr16 jp 0x407786
  4077ff:	icebp  
  407800:	xor    ebp,DWORD PTR [ecx+eiz*2-0x49d2ffeb]
  407807:	js     0x407860
  407809:	das    
  40780a:	adc    eax,esp
  40780c:	sbb    al,0x73
  40780e:	popf   
  40780f:	xor    BYTE PTR [ebx],dl
  407811:	or     edx,edi
  407813:	fdiv   DWORD PTR [edi]
  407815:	in     al,dx
  407816:	or     al,0x2a
  407818:	xchg   ecx,eax
  407819:	out    0xdd,eax
  40781b:	mov    bl,0xec
  40781d:	mov    ds:0x7aebb2ca,eax
  407822:	xor    BYTE PTR [eax+esi*8+0x32],0x83
  407827:	leave  
  407828:	xlat   BYTE PTR ds:[ebx]
  407829:	les    esp,FWORD PTR [eax-0x52]
  40782c:	bound  esp,QWORD PTR [edi-0x3a58bf18]
  407832:	jmp    0x407811
  407834:	shr    BYTE PTR [edx+0x32884ac4],1
  40783a:	cmc    
  40783b:	pop    ebx
  40783c:	in     al,0xe8
  40783e:	mov    esp,0xc1a03041
  407843:	out    dx,eax
  407844:	enter  0xc28a,0x78
  407848:	arpl   cx,ax
  40784a:	shl    DWORD PTR ds:0xd804c62d,1
  407850:	sub    al,0x16
  407852:	fs xor al,0xc6
  407855:	mov    gs:0xf4d44301,al
  40785b:	ins    BYTE PTR es:[edi],dx
  40785c:	add    BYTE PTR [eax],0xe4
  40785f:	add    al,0x9c
  407861:	jbe    0x4078a3
  407863:	jle    0x4078c4
  407865:	inc    edi
  407866:	mov    DWORD PTR [eax-0x2fbf9c5f],esi
  40786c:	adc    dh,BYTE PTR [ecx]
  40786e:	aaa    
  40786f:	adc    edi,esi
  407871:	jg     0x407874
  407873:	mov    esp,0x5f98e094
  407878:	pop    ds
  407879:	out    dx,al
  40787a:	adc    al,0xf3
  40787c:	pop    ebp
  40787d:	retf   0x2586
  407880:	cs adc al,0xce
  407883:	inc    esi
  407884:	or     DWORD PTR [eax+esi*4],edx
  407887:	xor    eax,0xfb277c9c
  40788c:	mov    DWORD PTR [edi+0x2ffe5e92],ebx
  407892:	add    al,bl
  407894:	inc    esi
  407895:	out    0xa8,eax
  407897:	sbb    eax,esp
  407899:	add    eax,0x82987675
  40789e:	ss fld1 
  4078a1:	and    al,0x8d
  4078a3:	xchg   ebx,eax
  4078a4:	xchg   esp,eax
  4078a5:	cmp    BYTE PTR [ecx],0x2a
  4078a8:	mov    ebx,es
  4078aa:	xor    cl,BYTE PTR [esi+0x3f51c884]
  4078b0:	push   edi
  4078b1:	ficomp WORD PTR [ecx+0x51]
  4078b4:	xchg   ecx,eax
  4078b5:	ss add bh,bh
  4078b8:	arpl   WORD PTR [ebx-0x59],sp
  4078bb:	loopne 0x4078f1
  4078bd:	div    DWORD PTR [edx]
  4078bf:	mov    ds:0xfcad0c7,al
  4078c4:	push   esi
  4078c5:	(bad)  
  4078c6:	loope  0x40784b
  4078c8:	or     eax,0x24f5d2b
  4078cd:	std    
  4078ce:	dec    ecx
  4078cf:	xchg   ebx,eax
  4078d0:	in     al,dx
  4078d1:	not    BYTE PTR [esp+ebp*1-0x25dcfe04]
  4078d8:	inc    esi
  4078d9:	das    
  4078da:	xchg   esi,eax
  4078db:	adc    ecx,ebp
  4078dd:	test   DWORD PTR [esi+0x2f],edi
  4078e0:	pop    ds
  4078e1:	xchg   ecx,eax
  4078e2:	inc    edi
  4078e3:	cmp    al,0x58
  4078e5:	inc    esi
  4078e6:	in     eax,0x47
  4078e8:	sub    DWORD PTR [ebx],ebx
  4078ea:	jno    0x4078d8
  4078ec:	adc    esp,esi
  4078ee:	jns    0x40796d
  4078f0:	lea    edi,[edx]
  4078f2:	sbb    ebp,DWORD PTR ds:0xf688fcbc
  4078f8:	sbb    ecx,DWORD PTR [edx-0x5cb60387]
  4078fe:	fbstp  TBYTE PTR [esi+0x20]
  407901:	or     ebx,ebx
  407903:	bound  ebp,QWORD PTR [edx+0x45]
  407906:	mov    ah,0xba
  407908:	xor    DWORD PTR [ebx+0x54e92259],esi
  40790e:	xor    eax,0xab616f75
  407913:	xor    BYTE PTR [esi],dl
  407915:	cdq    
  407916:	dec    esp
  407917:	outs   dx,DWORD PTR ds:[esi]
  407918:	mov    eax,0xd7e6f0a8
  40791d:	jecxz  0x4078d7
  40791f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407920:	int    0x40
  407922:	nop
  407923:	out    dx,eax
  407924:	(bad)  
  407925:	push   ss
  407926:	add    ebx,DWORD PTR [esi]
  407928:	ror    DWORD PTR fs:[esi+0x5b],0x9c
  40792d:	cmc    
  40792e:	leave  
  40792f:	bound  ebp,QWORD PTR [ebx-0x4c]
  407932:	cmp    DWORD PTR [esi-0x4d4d414],esi
  407938:	and    ah,BYTE PTR [eax+0x5a]
  40793b:	fdiv   QWORD PTR [ebp+0x5e6fe8ba]
  407941:	je     0x407957
  407943:	and    dl,BYTE PTR [edi+0x7851d834]
  407949:	mov    ebp,0x2173ecf6
  40794e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40794f:	dec    ebp
  407950:	xchg   ebx,ebp
  407952:	sub    ebx,DWORD PTR [eax+0x15]
  407955:	leave  
  407956:	sub    BYTE PTR [edi],0x6d
  407959:	out    0x8d,eax
  40795b:	loopne 0x407928
  40795d:	mov    esp,0x67fb4866
  407962:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407963:	outs   dx,DWORD PTR ds:[esi]
  407964:	stos   DWORD PTR es:[edi],eax
  407965:	adc    eax,0x29035840
  40796a:	mov    dh,0x2e
  40796c:	mov    cl,0x71
  40796e:	jne    0x40797e
  407970:	cmp    DWORD PTR [esp+ebx*1-0x628e57d6],esp
  407977:	fs (bad) 
  407979:	dec    ecx
  40797a:	pop    ecx
  40797b:	cmp    eax,0x53a0964d
  407980:	daa    
  407981:	mov    edx,0x870f3429
  407986:	mov    ds:0x16d400b8,eax
  40798b:	or     esp,DWORD PTR [eax+0x25833a5a]
  407991:	data16 jbe 0x407966
  407994:	cli    
  407995:	test   eax,0xf7df7bf5
  40799a:	cdq    
  40799b:	adc    DWORD PTR [ebx-0x23],edx
  40799e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40799f:	dec    eax
  4079a0:	pop    ds
  4079a1:	rcl    ah,1
  4079a3:	jo     0x40797e
  4079a5:	imul   edi,ebx,0x17
  4079a8:	cmp    cl,BYTE PTR [ebp*4-0x7d462326]
  4079af:	add    eax,0xd835255b
  4079b4:	loopne 0x4079e1
  4079b6:	jne    0x407946
  4079b8:	shl    DWORD PTR [edi+0x62],cl
  4079bb:	xchg   esi,eax
  4079bc:	aad    0x29
  4079be:	mov    ds:0x3cf1bc8a,al
  4079c3:	dec    edi
  4079c4:	cmp    DWORD PTR [eax],ecx
  4079c6:	gs jnp 0x4079d3
  4079c9:	sar    BYTE PTR [edx-0x16],cl
  4079cc:	stc    
  4079cd:	adc    DWORD PTR [ecx],edx
  4079cf:	sub    ah,BYTE PTR [esi+ebp*2]
  4079d2:	scas   al,BYTE PTR es:[edi]
  4079d3:	fbstp  TBYTE PTR [ecx-0x27]
  4079d6:	ds out dx,eax
  4079d8:	sub    al,BYTE PTR [ebx+0x2c]
  4079db:	call   0x5a32:0x7df7047d
  4079e2:	mov    ch,0x91
  4079e4:	mov    cl,0x5c
  4079e6:	int3   
  4079e7:	dec    edx
  4079e8:	sar    BYTE PTR [ecx+0x74ba0aa9],1
  4079ee:	sub    BYTE PTR [esi-0x32],bh
  4079f1:	or     DWORD PTR [edx-0x2ec6e0d6],edi
  4079f7:	enter  0x13a5,0x61
  4079fb:	fwait
  4079fc:	mov    esi,0xcf5704ae
  407a01:	loop   0x407a28
  407a03:	adc    BYTE PTR [eax-0x5bc03946],0xc6
  407a0a:	sub    eax,0xc465cf67
  407a0f:	loop   0x4079c7
  407a11:	sub    al,0xc9
  407a13:	inc    edx
  407a14:	sub    ecx,DWORD PTR [ebp-0x1e]
  407a17:	jecxz  0x4079ea
  407a19:	jl     0x407a7d
  407a1b:	or     al,BYTE PTR [ebx+0x3e]
  407a1e:	fwait
  407a1f:	cmc    
  407a20:	or     dh,BYTE PTR [eax-0x30]
  407a23:	push   0x45
  407a25:	mov    cl,0x67
  407a27:	inc    esp
  407a28:	jb     0x407a4e
  407a2a:	test   eax,0xed7e2403
  407a2f:	sub    al,0xf6
  407a31:	addr16 in al,dx
  407a33:	shr    DWORD PTR [esi+0x74],cl
  407a36:	addr16 mov bh,0xdf
  407a39:	add    DWORD PTR [eax],ecx
  407a3b:	sbb    DWORD PTR es:[eax+ecx*8],ebx
  407a3f:	cdq    
  407a40:	dec    ecx
  407a41:	stc    
  407a42:	adc    BYTE PTR [ebp-0x60],dh
  407a45:	xlat   BYTE PTR ds:[ebx]
  407a46:	icebp  
  407a47:	shl    esp,cl
  407a49:	(bad)  
  407a4a:	cli    
  407a4b:	fild   DWORD PTR [ebp+0x28]
  407a4e:	test   eax,eax
  407a50:	sbb    esi,DWORD PTR [eax+0x24]
  407a53:	aad    0x49
  407a55:	push   esp
  407a56:	sub    dl,BYTE PTR [ebx-0x25]
  407a59:	mov    eax,0xdff3f3d2
  407a5e:	jae    0x4079fb
  407a60:	mov    bh,0x24
  407a62:	xchg   esp,eax
  407a63:	push   ebp
  407a64:	or     al,BYTE PTR [ebp-0x59]
  407a67:	aas    
  407a68:	push   edx
  407a69:	inc    eax
  407a6a:	fnstenv [ecx]
  407a6c:	int3   
  407a6d:	xchg   esp,eax
  407a6e:	test   al,0x9
  407a70:	add    ch,BYTE PTR [eax]
  407a72:	push   cs
  407a73:	jb     0x407ad4
  407a75:	and    BYTE PTR [esi],bh
  407a77:	mov    ebx,0xa8ee663f
  407a7c:	das    
  407a7d:	(bad)  
  407a7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a7f:	pop    es
  407a80:	pop    esi
  407a81:	mov    esi,0xdf0483a9
  407a86:	pop    ds
  407a87:	lods   al,BYTE PTR ds:[esi]
  407a88:	add    al,0xef
  407a8a:	cld    
  407a8b:	dec    esi
  407a8c:	jno    0x407afd
  407a8e:	arpl   WORD PTR [esi],dx
  407a90:	stos   BYTE PTR es:[edi],al
  407a91:	out    0xe3,eax
  407a93:	fs mov bh,0xa4
  407a96:	ret    0xc21f
  407a99:	add    DWORD PTR [edx-0x68d83ef1],ebp
  407a9f:	pop    es
  407aa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407aa1:	retf   0x66db
  407aa4:	sbb    esp,0xffffffee
  407aa7:	mov    ch,0xb
  407aa9:	repnz test eax,0xdc6d684d
  407aaf:	mov    ds:0x9a9e6469,al
  407ab4:	retf   
  407ab5:	mov    BYTE PTR [ebx+0x60f7f82d],ch
  407abb:	jmp    0x45dfc952
  407ac0:	into   
  407ac1:	mov    al,ds:0xf99d3238
  407ac6:	fs das 
  407ac8:	sub    eax,DWORD PTR [edx-0x68bf78d9]
  407ace:	inc    esi
  407acf:	push   ebx
  407ad0:	push   ebp
  407ad1:	or     BYTE PTR [ebx+0x35],ch
  407ad4:	scas   al,BYTE PTR es:[edi]
  407ad5:	test   DWORD PTR ds:0xff001ff2,edi
  407adb:	daa    
  407adc:	retf   0x9b5a
  407adf:	in     al,dx
  407ae0:	nop
  407ae1:	imul   edx,DWORD PTR [eax+0x5d],0xffffffcb
  407ae5:	clc    
  407ae6:	sbb    DWORD PTR [ecx],ebp
  407ae8:	inc    eax
  407ae9:	pop    eax
  407aea:	pushf  
  407aeb:	dec    esp
  407aec:	pop    edx
  407aed:	ret    
  407aee:	fisub  DWORD PTR [edi+ebx*1]
  407af1:	ficom  DWORD PTR [ebp*2-0x747aeccc]
  407af8:	pop    ebx
  407af9:	mov    cl,0x10
  407afb:	aaa    
  407afc:	mov    ds:0xa549f88b,eax
  407b01:	pop    ds
  407b02:	xchg   ecx,eax
  407b03:	push   0xbe3d7e63
  407b08:	mov    ch,0x10
  407b0a:	loopne 0x407ac3
  407b0c:	rcr    esi,cl
  407b0e:	outs   dx,DWORD PTR ds:[esi]
  407b0f:	sbb    al,0x6f
  407b11:	dec    edx
  407b12:	sbb    BYTE PTR [ebp+0x75],cl
  407b15:	fs and eax,0xecf2da93
  407b1b:	sub    dh,BYTE PTR [esi]
  407b1d:	aad    0x3c
  407b1f:	xchg   ecx,eax
  407b20:	iret   
  407b21:	ror    BYTE PTR [ebx+0x26],cl
  407b24:	mov    ebp,0x323f117c
  407b29:	lods   al,BYTE PTR ds:[esi]
  407b2a:	inc    eax
  407b2b:	adc    ah,ch
  407b2d:	shr    BYTE PTR [di],1
  407b30:	(bad)  
  407b32:	pop    ss
  407b33:	stc    
  407b34:	sbb    edx,edi
  407b36:	mov    ds:0x852fbd79,eax
  407b3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b3c:	int    0xb3
  407b3e:	add    BYTE PTR [edx-0x15c33c46],al
  407b44:	mov    ebx,0xa31c6c0c
  407b49:	dec    ebp
  407b4a:	mov    edx,0x2214c0dd
  407b4f:	dec    esp
  407b50:	mov    al,0x2b
  407b52:	sbb    esi,DWORD PTR [esi+ebp*1+0x3fecdba8]
  407b59:	and    bl,BYTE PTR [edx+0x39]
  407b5c:	mov    ch,bl
  407b5e:	xor    edx,DWORD PTR [edx+0x3f12ebeb]
  407b64:	mov    bh,0x77
  407b66:	adc    ch,BYTE PTR [edi+edx*4-0x15cb417a]
  407b6d:	out    0xcd,eax
  407b6f:	pop    ecx
  407b70:	pop    edx
  407b71:	jmp    0x939d:0xede7bcc
  407b78:	jle    0x407b80
  407b7a:	fs dec ebp
  407b7c:	hlt    
  407b7d:	js     0x407bd8
  407b7f:	or     eax,0xa4e9c5b9
  407b84:	xor    BYTE PTR [esi-0x7d],cl
  407b87:	inc    ebp
  407b88:	pop    es
  407b89:	in     eax,dx
  407b8a:	pop    esp
  407b8b:	mov    ss,WORD PTR [ebx+0x5c173e62]
  407b91:	cli    
  407b92:	out    0x1a,eax
  407b94:	inc    edi
  407b95:	push   0x9090b722
  407b9a:	sub    edx,DWORD PTR [eax-0x74adde34]
  407ba0:	in     al,dx
  407ba1:	dec    edi
  407ba2:	neg    BYTE PTR [edi+0x193f77e]
  407ba8:	push   esi
  407ba9:	inc    eax
  407baa:	cmp    edx,DWORD PTR [edx+eiz*1]
  407bad:	or     DWORD PTR [edi],edi
  407baf:	(bad)  
  407bb1:	rcl    DWORD PTR [ecx+0x4b536a47],1
  407bb7:	add    DWORD PTR [esi],esi
  407bb9:	mov    eax,ds:0xd0393b16
  407bbe:	test   BYTE PTR [edi+0x290d2a01],dl
  407bc4:	pop    ss
  407bc5:	loopne 0x407ba6
  407bc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bc8:	daa    
  407bc9:	mov    ds:0xa67f63c0,eax
  407bce:	mov    dl,0x53
  407bd0:	rcl    BYTE PTR [esi-0x48811c58],0xe8
  407bd7:	neg    DWORD PTR [ebx-0x3]
  407bda:	jle    0x407c3c
  407bdc:	sub    edi,DWORD PTR ds:0x379ff368
  407be2:	mov    esi,0x4e512aa
  407be7:	jo     0x407c49
  407be9:	lahf   
  407bea:	and    DWORD PTR [edi-0x5a],esi
  407bed:	aas    
  407bee:	sar    BYTE PTR [edx+0x7b],0xbf
  407bf2:	pop    ebx
  407bf3:	lock mov ecx,0x616eb67d
  407bf9:	jmp    0xa1b4c011
  407bfe:	sbb    DWORD PTR [edi+0x3b],edi
  407c01:	fmulp  st(4),st
  407c03:	loop   0x407c28
  407c05:	push   ss
  407c06:	add    ecx,DWORD PTR [ecx+0x3202d572]
  407c0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c0d:	or     cl,BYTE PTR [edx-0xb]
  407c10:	add    edx,DWORD PTR [ecx]
  407c12:	mov    cl,BYTE PTR [esi+0x1818e41f]
  407c18:	jp     0x407c88
  407c1a:	pop    es
  407c1b:	fadd   QWORD PTR [esi+0x340fed8f]
  407c21:	inc    ecx
  407c22:	(bad)  
  407c23:	sub    ch,ch
  407c25:	lods   al,BYTE PTR ds:[esi]
  407c26:	dec    eax
  407c27:	pop    ss
  407c28:	int3   
  407c29:	xchg   edx,eax
  407c2a:	xchg   ebx,eax
  407c2b:	outs   dx,DWORD PTR ds:[esi]
  407c2c:	inc    edi
  407c2d:	outs   dx,DWORD PTR ds:[esi]
  407c2e:	push   ecx
  407c2f:	add    al,0x84
  407c31:	and    al,bh
  407c33:	pushf  
  407c34:	repz ret 0xfb17
  407c38:	xchg   DWORD PTR [eax+0x492999e],ebx
  407c3e:	mov    ds:0xdf198fc2,eax
  407c43:	mov    ah,0x82
  407c45:	pop    es
  407c46:	dec    ebx
  407c47:	test   BYTE PTR [eax+0x7e],0x3b
  407c4b:	cmp    dl,BYTE PTR [ebx+eax*2-0x59d6e9bd]
  407c52:	fwait
  407c53:	pop    ecx
  407c54:	mov    DWORD PTR [ecx-0x65],0x3323723d
  407c5b:	das    
  407c5c:	mov    WORD PTR [eax],fs
  407c5e:	mov    ecx,0x5f5ff1f0
  407c63:	leave  
  407c64:	mov    cs,WORD PTR [esi]
  407c66:	shl    BYTE PTR ss:[edi],0xfa
  407c6a:	shr    DWORD PTR [eax],cl
  407c6c:	push   esp
  407c6d:	mov    dh,BYTE PTR [edi]
  407c6f:	jno    0x407c14
  407c71:	scas   eax,DWORD PTR es:[edi]
  407c72:	rol    edx,0x19
  407c75:	or     eax,0x13182ff7
  407c7a:	cmc    
  407c7b:	ficomp DWORD PTR [ebp-0x1f]
  407c7e:	retf   0xb0cb
  407c81:	int    0x8a
  407c83:	idiv   DWORD PTR [ebx+0x1b]
  407c86:	jmp    0x3c1e63dd
  407c8b:	dec    esp
  407c8c:	in     eax,dx
  407c8d:	inc    ebx
  407c8e:	loopne 0x407cdb
  407c90:	int    0x95
  407c92:	repnz pop edi
  407c94:	mov    esi,0x8140111e
  407c99:	sti    
  407c9a:	popa   
  407c9b:	push   cs
  407c9c:	mov    edi,DWORD PTR ds:0x2d44b58a
  407ca2:	popa   
  407ca3:	and    DWORD PTR [eax-0xb],esi
  407ca6:	and    BYTE PTR [ecx],ah
  407ca8:	dec    edi
  407ca9:	push   es
  407caa:	sbb    eax,0x8e17167a
  407caf:	push   ebx
  407cb0:	addr16 add al,0x8a
  407cb3:	or     esi,DWORD PTR [eax-0x394d6c02]
  407cb9:	cwde   
  407cba:	stos   DWORD PTR es:[edi],eax
  407cbb:	out    0xd9,al
  407cbd:	push   ss
  407cbe:	imul   ecx,DWORD PTR [ecx+0x5f],0x8b5a77c9
  407cc5:	(bad)  
  407cc6:	out    0x47,eax
  407cc8:	or     BYTE PTR [edi],ch
  407cca:	pop    ebp
  407ccb:	mov    ah,0xe7
  407ccd:	jb     0x407d4b
  407ccf:	dec    esp
  407cd0:	rol    DWORD PTR [esi-0x2fa606cc],cl
  407cd6:	adc    DWORD PTR [ebp+0x2921a025],esi
  407cdc:	ret    0x9efc
  407cdf:	ja     0x407d59
  407ce1:	push   edi
  407ce3:	mov    ebx,0xeeac14e5
  407ce8:	adc    BYTE PTR [ebx+edi*8],ch
  407ceb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cec:	xchg   edi,eax
  407ced:	test   al,0x15
  407cef:	mov    esi,0x2639d36e
  407cf4:	(bad)  
  407cf5:	aad    0x29
  407cf7:	jg     0x407d59
  407cf9:	or     BYTE PTR [ebx],bl
  407cfb:	or     BYTE PTR [ebp-0x2777defa],ah
  407d01:	ret    0xe4c7
  407d04:	dec    ecx
  407d05:	aaa    
  407d06:	ins    DWORD PTR es:[edi],dx
  407d07:	fst    QWORD PTR [esi-0x56266f1a]
  407d0d:	(bad)  
  407d0e:	enter  0x5712,0x71
  407d12:	adc    al,0x76
  407d14:	call   0x430f:0x805fe149
  407d1b:	mov    ds:0x8c2a214e,eax
  407d20:	jne    0x407cee
  407d22:	mov    ecx,0x393e4802
  407d27:	cmp    BYTE PTR [eax-0x39074ca4],0x3b
  407d2e:	dec    edx
  407d2f:	inc    ebp
  407d30:	xchg   edx,eax
  407d31:	inc    eax
  407d32:	xor    ah,BYTE PTR [eax]
  407d34:	or     eax,0x2c78408d
  407d39:	rol    BYTE PTR [eax-0x25dfd93c],1
  407d3f:	sub    DWORD PTR [eax+eiz*1+0x20],ecx
  407d43:	hlt    
  407d44:	out    dx,eax
  407d45:	popa   
  407d46:	out    0x3f,al
  407d48:	es jbe 0x407db8
  407d4b:	shl    BYTE PTR [esp+edi*1-0x42],cl
  407d4f:	sub    ecx,DWORD PTR [eax]
  407d51:	dec    ecx
  407d52:	fistp  DWORD PTR [ebp-0x2e]
  407d55:	mov    esi,0x6654d7c0
  407d5a:	push   cs
  407d5b:	loopne 0x407d48
  407d5d:	cmp    dl,BYTE PTR [edx+0x78]
  407d60:	and    DWORD PTR [edx],ecx
  407d62:	mov    ds:0xa92a812a,eax
  407d67:	clc    
  407d68:	mov    ebp,0xd8bde637
  407d6d:	ins    BYTE PTR es:[edi],dx
  407d6e:	mov    al,0xf3
  407d70:	xor    ebx,DWORD PTR [ecx+0x63]
  407d73:	push   ebp
  407d74:	sbb    bh,BYTE PTR [ecx]
  407d76:	mov    DWORD PTR [ebx],eax
  407d78:	mov    edx,0x9e27c1d5
  407d7d:	xchg   edi,eax
  407d7e:	mov    ds:0x2b5dfe7a,eax
  407d83:	pop    es
  407d84:	aas    
  407d85:	dec    ebx
  407d86:	push   0x731b1c64
  407d8b:	jb     0x407d3e
  407d8d:	mov    DWORD PTR [ebp+0x4f],ebp
  407d90:	or     esp,ecx
  407d92:	jmp    0x407d3e
  407d94:	lock inc esi
  407d96:	add    edi,esi
  407d98:	sub    esp,esi
  407d9a:	les    edx,FWORD PTR [edx+0x3ae08068]
  407da0:	or     al,0x7b
  407da2:	push   ss
  407da3:	mov    ecx,0x1ea7328
  407da8:	aam    0xab
  407daa:	or     BYTE PTR [ecx-0x64985a5c],ch
  407db0:	lock push cs
  407db2:	adc    eax,0xdc6e916e
  407db7:	jnp    0x407de5
  407db9:	(bad)  
  407dbb:	jnp    0x407dbf
  407dbd:	mov    esi,0x9d3503ab
  407dc2:	xor    eax,0xb46513e5
  407dc7:	pusha  
  407dc8:	xor    BYTE PTR [edi-0x5d801d7c],al
  407dce:	jle    0x407dd0
  407dd0:	pop    ecx
  407dd1:	push   edi
  407dd2:	jne    0x407d56
  407dd4:	sbb    bh,BYTE PTR [edx+0x47]
  407dd7:	cmp    al,0x58
  407dd9:	mov    DWORD PTR [ebx],edi
  407ddb:	push   ecx
  407ddc:	es mov esi,0xad439c3b
  407de2:	pop    edx
  407de3:	bound  edi,QWORD PTR [ebx+edi*1+0x26]
  407de7:	imul   esi,DWORD PTR cs:[eax],0x4cf4a154
  407dee:	and    ah,BYTE PTR [ebp-0x57]
  407df1:	cld    
  407df2:	xor    bl,BYTE PTR [eax+0x1a]
  407df5:	stos   BYTE PTR es:[edi],al
  407df6:	fiadd  WORD PTR [ecx]
  407df8:	adc    dh,BYTE PTR [edx+0x3a]
  407dfb:	sbb    al,0xee
  407dfd:	xor    al,0x4b
  407dff:	or     eax,0xbc7b8ee3
  407e04:	sbb    bh,dh
  407e06:	fwait
  407e07:	mov    esp,0x5d0a575e
  407e0c:	jne    0x407db8
  407e0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e0f:	or     al,0xcf
  407e11:	push   edx
  407e12:	aam    0xb6
  407e14:	xchg   ebx,eax
  407e15:	in     al,0xbc
  407e17:	cmp    bh,BYTE PTR [edx+0x206320c1]
  407e1d:	int3   
  407e1e:	xchg   ebx,eax
  407e1f:	xor    eax,0x6ab97a8d
  407e24:	mov    fs,WORD PTR [ecx-0xfb80050]
  407e2a:	jns    0x407dcb
  407e2c:	push   ss
  407e2d:	push   es
  407e2e:	jmp    esi
  407e30:	data16 std 
  407e32:	mov    edi,0x8d3f0020
  407e37:	or     al,0xcf
  407e39:	jg     0x407de3
  407e3b:	test   eax,0x31826d00
  407e40:	push   ebx
  407e41:	into   
  407e42:	cmp    esi,esi
  407e44:	dec    ebp
  407e45:	mov    ds:0xdf754ce7,eax
  407e4a:	nop
  407e4b:	pop    eax
  407e4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e4d:	outs   dx,BYTE PTR ds:[esi]
  407e4e:	mov    ebx,0x7e252548
  407e53:	es test al,0x2
  407e56:	repnz xchg esp,eax
  407e58:	imul   edi
  407e5a:	inc    ecx
  407e5b:	jne    0x407e21
  407e5d:	clc    
  407e5e:	inc    ebp
  407e5f:	adc    edx,DWORD PTR [eax+0x28]
  407e62:	(bad)  
  407e64:	adc    ebx,edx
  407e66:	pushf  
  407e67:	idiv   ebx
  407e69:	outs   dx,DWORD PTR ds:[esi]
  407e6a:	xor    BYTE PTR [eax-0x37cd11e1],0x93
  407e71:	rcl    edi,0x72
  407e74:	add    eax,DWORD PTR [ebx-0xc]
  407e77:	dec    edi
  407e78:	pop    edx
  407e79:	jno    0x407e2a
  407e7b:	aaa    
  407e7c:	ins    BYTE PTR es:[edi],dx
  407e7d:	pop    ecx
  407e7e:	mov    al,ds:0x6c137d46
  407e83:	out    0x12,al
  407e85:	and    cl,cl
  407e87:	mov    ch,0x59
  407e89:	mov    esp,0xd6b8f2f9
  407e8e:	xchg   edx,eax
  407e8f:	enter  0xb235,0x19
  407e93:	bound  ecx,QWORD PTR ds:0xe99af0c0
  407e99:	nop
  407e9a:	xchg   edi,eax
  407e9b:	loope  0x407e56
  407e9d:	gs add eax,0xb3061ce5
  407ea3:	test   al,0x77
  407ea5:	xchg   edx,eax
  407ea6:	jnp    0x407edd
  407ea8:	into   
  407ea9:	hlt    
  407eaa:	sbb    BYTE PTR [edx+0x1038a411],dh
  407eb0:	fnstcw WORD PTR [esi+0x1c]
  407eb3:	lods   eax,DWORD PTR ds:[esi]
  407eb4:	ds mov esi,0x646ff28c
  407eba:	pop    eax
  407ebb:	gs int3 
  407ebd:	dec    eax
  407ebe:	add    DWORD PTR [eax],esi
  407ec0:	ror    DWORD PTR [ebx],cl
  407ec2:	loop   0x407e87
  407ec4:	xlat   BYTE PTR ds:[ebx]
  407ec5:	mov    esi,0xc2da4340
  407eca:	test   DWORD PTR [eax-0x44],ebx
  407ecd:	sbb    ebp,eax
  407ecf:	pop    edi
  407ed0:	lea    ebp,[ecx]
  407ed2:	or     BYTE PTR [edi+0x707bb073],bl
  407ed8:	test   DWORD PTR [ebx],ecx
  407eda:	or     DWORD PTR [eax],eax
  407edc:	cmp    BYTE PTR [edi+0x29],cl
  407edf:	jmp    0x407ef2
  407ee1:	mov    ds:0xf051851b,eax
  407ee6:	push   ecx
  407ee7:	sub    al,0xc7
  407ee9:	test   ah,bh
  407eeb:	and    dl,0xd5
  407eee:	mov    eax,ds:0x6c76907c
  407ef3:	fldcw  WORD PTR [edx-0x7]
  407ef6:	mov    dl,0xea
  407ef8:	hlt    
  407ef9:	pop    edx
  407efa:	add    DWORD PTR [ebx],eax
  407efc:	adc    BYTE PTR [esi-0x7],dl
  407eff:	push   ds
  407f00:	in     al,0x2c
  407f02:	fnstcw WORD PTR [ebx]
  407f04:	int3   
  407f05:	dec    edi
  407f06:	sub    esp,DWORD PTR [ecx]
  407f08:	sbb    ebx,ebx
  407f0a:	ds pop esi
  407f0c:	adc    eax,0xc565403d
  407f11:	jbe    0x407ef3
  407f13:	repz add al,dl
  407f16:	adc    bh,ch
  407f18:	fsubr  QWORD PTR [edx]
  407f1a:	or     esi,DWORD PTR [esp+eax*1+0x44]
  407f1e:	stos   DWORD PTR es:[edi],eax
  407f1f:	mov    edi,0xa320b616
  407f24:	and    al,0x6c
  407f26:	fld    QWORD PTR [esi]
  407f28:	mov    ?,WORD PTR [ecx-0x77]
  407f2b:	sbb    DWORD PTR [eax],ebp
  407f2d:	inc    esi
  407f2e:	and    al,0xfb
  407f30:	sbb    eax,0x85214d81
  407f35:	cmp    BYTE PTR [edx-0x7bd26570],0xdf
  407f3c:	inc    eax
  407f3d:	sub    dl,BYTE PTR [ecx+0x55]
  407f40:	xor    eax,0x5b42a145
  407f45:	jmp    0xd4b3f9d2
  407f4a:	mov    ah,0xf
  407f4c:	xchg   edx,eax
  407f4d:	gs into 
  407f4f:	adc    DWORD PTR [edx],0x22
  407f52:	addr16 hlt 
  407f54:	cwde   
  407f55:	or     BYTE PTR [ebp-0x8],dl
  407f58:	cmp    esp,edi
  407f5a:	xor    ah,BYTE PTR [ecx-0x46]
  407f5d:	cmc    
  407f5e:	rol    esp,cl
  407f60:	push   edx
  407f61:	cmp    DWORD PTR ds:0x5005b6ba,esi
  407f67:	or     eax,DWORD PTR [edi+0x45]
  407f6a:	out    0x44,eax
  407f6c:	add    DWORD PTR [ecx],0x7e
  407f6f:	cmp    al,0x83
  407f71:	adc    ch,BYTE PTR [ecx-0x34b158df]
  407f77:	(bad)  
  407f78:	dec    ebp
  407f79:	cmp    DWORD PTR [esi-0x76],eax
  407f7c:	mov    cl,0x27
  407f7e:	mov    ecx,0x78d4a9d2
  407f83:	dec    esi
  407f84:	cdq    
  407f85:	mov    ebx,0x79eefc93
  407f8a:	xor    DWORD PTR [ecx+0x66],ebx
  407f8d:	sbb    BYTE PTR [ebp-0x3f],al
  407f90:	mov    ds:0x3aa88bf3,al
  407f95:	dec    esi
  407f96:	jp     0x407fd3
  407f98:	stos   BYTE PTR es:[edi],al
  407f99:	xor    eax,0x8f9202af
  407f9e:	frstor [ebx+0x19]
  407fa1:	pop    eax
  407fa2:	add    cl,cl
  407fa4:	push   cs
  407fa5:	pushf  
  407fa6:	mov    ebx,0x6d78a956
  407fab:	leave  
  407fac:	sub    DWORD PTR [esi],edx
  407fae:	fisttp DWORD PTR [eax]
  407fb0:	sbb    esp,0x1677ec50
  407fb6:	arpl   WORD PTR [eax-0x6f1162be],ax
  407fbc:	ret    0x9a7a
  407fbf:	adc    al,0xa1
  407fc1:	cmp    eax,0x51e5212f
  407fc6:	or     ah,BYTE PTR [edx]
  407fc8:	imul   ebp,DWORD PTR [eax],0xa9ca83a7
  407fce:	out    dx,eax
  407fcf:	or     ebp,DWORD PTR [edx-0x19d001ea]
  407fd5:	nop
  407fd6:	outs   dx,BYTE PTR ds:[esi]
  407fd7:	xor    BYTE PTR [ebp+0x540072b1],0xc7
  407fde:	ret    0x6aaa
  407fe1:	inc    ebx
  407fe2:	or     bh,BYTE PTR [ecx+0x4c]
  407fe5:	add    eax,0x706ecf3b
  407fea:	(bad)  
  407feb:	mov    ds:0xf9a6b598,al
  407ff0:	adc    ecx,DWORD PTR [ebp-0x7dbe9411]
  407ff6:	add    DWORD PTR [ecx-0xe],esi
  407ff9:	jo     0x407fc0
  407ffb:	xchg   ebx,eax
  407ffc:	in     al,dx
  407ffd:	fs out 0x8,al
  408000:	mov    bl,0x16
  408002:	pop    eax
  408003:	lea    ecx,[eax]
  408005:	jns    0x408041
  408007:	jp     0x40803d
  408009:	jmp    0x3047b8d4
  40800e:	push   ebx
  40800f:	aam    0xfb
  408011:	mov    edi,0x6e58a84f
  408016:	pop    eax
  408017:	jecxz  0x408011
  408019:	rcl    DWORD PTR [ebx+0x2d3978ac],1
  40801f:	mov    cl,0xd0
  408021:	jecxz  0x407ff3
  408023:	jb     0x40802e
  408025:	and    bl,BYTE PTR [edx-0x425da8e1]
  40802b:	pop    ebx
  40802c:	push   ds
  40802d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40802e:	mov    esp,0x2259d014
  408033:	clc    
  408034:	stc    
  408035:	push   esp
  408036:	nop
  408037:	inc    esi
  408038:	dec    ebp
  408039:	or     al,0x7b
  40803b:	fidivr DWORD PTR [edx]
  40803d:	mul    al
  40803f:	mov    WORD PTR [esi-0x6d9b249],fs
  408045:	adc    eax,0x4a97de7b
  40804a:	sbb    BYTE PTR [ecx+0xceb5d77],bl
  408050:	fcom   QWORD PTR [edi-0x6b]
  408053:	jge    0x408027
  408055:	clc    
  408056:	sub    DWORD PTR [eax+edi*4+0x539619aa],ebx
  40805d:	les    esp,FWORD PTR [ebp+eax*4-0x7e]
  408061:	int    0x1d
  408063:	les    edx,FWORD PTR [ebp-0x6e]
  408066:	fist   WORD PTR [ebx]
  408068:	arpl   WORD PTR [eax],dx
  40806a:	push   esp
  40806b:	add    bl,bl
  40806d:	sahf   
  40806e:	mov    al,ds:0xdf3ee0af
  408073:	out    dx,al
  408074:	xchg   esi,eax
  408075:	cmp    DWORD PTR [edi+ecx*1-0xd],esi
  408079:	push   eax
  40807a:	push   cs
  40807b:	cmp    eax,ecx
  40807d:	setno  BYTE PTR [ebx+ecx*2-0x4e]
  408082:	cwde   
  408083:	and    esp,DWORD PTR [edi+ebp*1+0x25f1551b]
  40808a:	mov    bl,0x41
  40808c:	mov    ?,WORD PTR [ebx]
  40808e:	pushf  
  40808f:	bound  eax,QWORD PTR [ebp+0x5cd562ba]
  408095:	mov    ds:0x473dac87,eax
  40809a:	mov    bl,0x92
  40809c:	shr    al,0x52
  40809f:	xor    DWORD PTR [eax-0x2621824a],0x6a1cbf0b
  4080a9:	or     al,BYTE PTR [edi]
  4080ab:	dec    eax
  4080ac:	and    eax,0x8c5369ba
  4080b1:	jno    0x408057
  4080b3:	add    al,0x6c
  4080b5:	jmp    0x408116
  4080b7:	mov    al,ds:0xb243db94
  4080bc:	rol    BYTE PTR [ebx+0x5d],0x40
  4080c0:	and    BYTE PTR [esi-0x3d],0x61
  4080c4:	out    dx,al
  4080c5:	inc    eax
  4080c6:	push   esp
  4080c7:	xor    eax,0xfa6ec9b9
  4080cc:	popf   
  4080cd:	adc    esp,DWORD PTR [ecx]
  4080cf:	push   edx
  4080d0:	rcl    bh,1
  4080d2:	lock repnz enter 0x2c2a,0x9b
  4080d8:	repz test DWORD PTR [ebx-0x51],edi
  4080dc:	xchg   esp,eax
  4080dd:	push   ebx
  4080de:	mov    dl,0x4b
  4080e0:	mov    al,0xd
  4080e2:	or     BYTE PTR [ebp-0x73],ch
  4080e5:	sbb    esp,esi
  4080e7:	lods   eax,DWORD PTR ds:[esi]
  4080e8:	sbb    eax,0x2b079c7c
  4080ed:	sbb    DWORD PTR [edx-0x3dae6d4e],ecx
  4080f3:	add    ch,BYTE PTR [ebx+0x7158fe5]
  4080f9:	push   ebx
  4080fa:	jbe    0x4080a1
  4080fc:	sub    eax,0xcc890882
  408101:	iret   
  408102:	sbb    al,BYTE PTR [ecx-0x2f]
  408105:	jmp    ebp
  408107:	mov    bh,0xc6
  408109:	pop    esi
  40810a:	sub    dh,BYTE PTR [eax]
  40810c:	dec    edx
  40810d:	test   BYTE PTR [edi+0x185a02f3],al
  408113:	jb     0x4080ee
  408115:	dec    ecx
  408116:	outs   dx,DWORD PTR ds:[esi]
  408117:	jp     0x40817a
  408119:	ja     0x40816c
  40811b:	cwde   
  40811c:	mov    dh,0xe8
  40811e:	sbb    al,0x59
  408120:	jo     0x408174
  408122:	inc    esp
  408123:	div    WORD PTR [ebx-0x65aacb3d]
  40812a:	inc    esp
  40812b:	xchg   edx,eax
  40812c:	js     0x4080fe
  40812e:	sahf   
  40812f:	sub    DWORD PTR [ecx],ecx
  408131:	pop    esi
  408132:	pop    ds
  408133:	repz adc BYTE PTR [edx+eiz*1-0x38],cl
  408138:	dec    edx
  408139:	hlt    
  40813a:	std    
  40813b:	add    al,0xda
  40813d:	mov    bh,0xb9
  40813f:	add    BYTE PTR ds:0xeaf3eb1f,0x31
  408146:	or     esi,DWORD PTR [eax-0x3ec27140]
  40814c:	push   esi
  40814d:	push   0xa5ad01b5
  408152:	fidivr WORD PTR [ebx+ecx*8]
  408155:	call   DWORD PTR [edi+0x6e]
  408158:	or     DWORD PTR [edx-0x57],edi
  40815b:	inc    esi
  40815c:	pop    esi
  40815d:	and    BYTE PTR [ebp-0x76],dh
  408160:	rcl    esp,1
  408162:	out    0x89,eax
  408164:	sub    eax,0x41415ed2
  408169:	(bad)  
  40816a:	fnstcw WORD PTR ds:0x63cceeb5
  408170:	sub    bl,BYTE PTR [ecx+0x3c2fbab2]
  408176:	mov    eax,0xd584b2e9
  40817b:	pop    eax
  40817c:	push   ss
  40817d:	adc    esi,0xc545101b
  408183:	push   esp
  408184:	std    
  408185:	pop    edx
  408186:	mov    bh,0xf2
  408188:	rcl    BYTE PTR [esi-0x1dc1f534],0xc5
  40818f:	out    dx,eax
  408190:	cmp    DWORD PTR [esi],edi
  408192:	mov    eax,0xda6879c
  408197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408198:	cmc    
  408199:	ret    
  40819a:	jmp    0xfffea601
  40819f:	dec    ecx
  4081a0:	or     al,0x2b
  4081a2:	jge    0x4081d8
  4081a4:	daa    
  4081a5:	repz dec esi
  4081a7:	jns    0x40817c
  4081a9:	popa   
  4081aa:	scas   al,BYTE PTR es:[edi]
  4081ab:	adc    BYTE PTR [eax+0x70],ch
  4081ae:	sub    esi,DWORD PTR [edi]
  4081b0:	inc    ebp
  4081b1:	dec    ebx
  4081b2:	ret    
  4081b3:	es push ss
  4081b5:	push   edx
  4081b6:	jb     0x4081d0
  4081b8:	lock gs dec eax
  4081bb:	popf   
  4081bc:	jmp    0xf363e7b9
  4081c1:	(bad)  
  4081c2:	shl    BYTE PTR [esi-0x317d4088],1
  4081c8:	fld    DWORD PTR [edi-0x56]
  4081cb:	push   ss
  4081cc:	mov    esi,0xe6584677
  4081d1:	fdiv   DWORD PTR [eax]
  4081d3:	push   es
  4081d4:	addr16 push eax
  4081d6:	inc    ebx
  4081d7:	xchg   ebx,eax
  4081d8:	mov    edi,0x904fdc42
  4081dd:	sub    al,0x79
  4081df:	dec    edx
  4081e0:	fmul   DWORD PTR [edi-0x1668687b]
  4081e6:	fld    QWORD PTR [ecx+0x39f4d093]
  4081ec:	lock jg 0x408171
  4081ef:	aaa    
  4081f0:	pusha  
  4081f1:	test   eax,0x7a76b5f6
  4081f6:	jmp    0x7b2aaeb3
  4081fb:	pop    edi
  4081fc:	repz test DWORD PTR [ecx],ecx
  4081ff:	je     0x408227
  408201:	shl    esi,0x5e
  408204:	add    bh,al
  408206:	(bad)  
  408207:	in     al,dx
  408208:	adc    BYTE PTR gs:[ebx],al
  40820b:	jp     0x40827a
  40820d:	inc    esi
  40820e:	push   eax
  40820f:	mov    BYTE PTR [edi+0x52],ah
  408212:	leave  
  408213:	xchg   ecx,eax
  408214:	sub    BYTE PTR [edi-0x35],bh
  408217:	inc    esp
  408218:	test   DWORD PTR [esi-0x73ee39b6],ecx
  40821e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40821f:	add    eax,0xd690d97
  408224:	(bad)  
  408225:	stc    
  408226:	mov    al,0xfd
  408228:	jbe    0x4081dd
  40822a:	mov    es,WORD PTR [edi-0x19ef0ec0]
  408230:	push   eax
  408231:	inc    edi
  408232:	xchg   ebx,eax
  408233:	mov    ah,0xc2
  408235:	and    eax,DWORD PTR [edx+0x70]
  408238:	pop    ebp
  408239:	inc    ebp
  40823a:	mov    edx,0xb9ee0686
  40823f:	ja     0x408265
  408241:	and    al,0x84
  408243:	mov    eax,0x7bb50333
  408248:	sub    ecx,DWORD PTR [ebp+0x18]
  40824b:	ja     0x40828e
  40824d:	or     al,0x23
  40824f:	add    bl,bh
  408251:	jmp    0x40821f
  408253:	or     ecx,ecx
  408255:	xchg   ebp,eax
  408256:	jne    0x40826b
  408258:	xor    al,BYTE PTR [edx]
  40825a:	mov    edx,0x4f9d9d7e
  40825f:	(bad)  
  408260:	(bad)  
  408262:	lds    edi,FWORD PTR [ebp+0x33]
  408265:	lods   eax,DWORD PTR ds:[esi]
  408266:	pop    ss
  408267:	aad    0xc0
  408269:	xchg   BYTE PTR [ecx],ch
  40826b:	sub    ch,dl
  40826d:	mov    edx,0xb00a77fb
  408272:	mov    BYTE PTR [ebx],ah
  408274:	push   ds
  408275:	fs mov ah,0xaa
  408278:	add    al,bl
  40827a:	scas   al,BYTE PTR es:[edi]
  40827b:	js     0x408284
  40827d:	aam    0x8d
  40827f:	cmc    
  408280:	ret    
  408281:	mov    esp,0xf748677e
  408286:	test   eax,0xbee45db5
  40828b:	(bad)  
  40828c:	cld    
  40828d:	std    
  40828e:	out    dx,eax
  40828f:	in     eax,0x87
  408291:	pop    ebp
  408292:	fwait
  408293:	pop    esi
  408294:	dec    esi
  408295:	mov    cl,0xe3
  408297:	push   esp
  408298:	shl    DWORD PTR [esi],0xb4
  40829b:	push   0xfffffffc
  40829d:	sub    al,BYTE PTR [ecx]
  40829f:	jle    0x40826b
  4082a1:	icebp  
  4082a2:	lds    esp,FWORD PTR [esi+0x718b5de6]
  4082a8:	scas   eax,DWORD PTR es:[edi]
  4082a9:	in     eax,dx
  4082aa:	push   0x0
  4082ac:	or     ebx,DWORD PTR gs:[ecx-0x20]
  4082b0:	jge    0x4082dc
  4082b2:	inc    eax
  4082b3:	xor    eax,0x91a7f72b
  4082b8:	int    0x70
  4082ba:	or     eax,0x811aef6b
  4082bf:	jge    0x4082e8
  4082c1:	pop    esi
  4082c2:	sbb    ebp,DWORD PTR [edi+0x21]
  4082c5:	inc    ecx
  4082c6:	into   
  4082c7:	dec    ebp
  4082c8:	(bad)  
  4082c9:	(bad)
  4082cd:	or     bl,BYTE PTR [ecx+ecx*1]
  4082d0:	(bad)  
  4082d1:	(bad)  
  4082d2:	(bad)  
  4082d3:	inc    ebx
  4082d4:	nop
  4082d5:	mov    ds:0xf7326607,al
  4082da:	inc    ah
  4082dc:	jne    0x4082cf
  4082de:	mov    edi,DWORD PTR [ecx+0x32f54b66]
  4082e4:	xchg   esp,eax
  4082e5:	push   esi
  4082e6:	ins    BYTE PTR es:[edi],dx
  4082e7:	adc    bh,dl
  4082e9:	adc    ch,ah
  4082eb:	or     al,0xcc
  4082ed:	mov    esi,0xa5a0137d
  4082f2:	push   ebp
  4082f3:	cmp    BYTE PTR [edi],cl
  4082f5:	fdiv   DWORD PTR [edx]
  4082f7:	mov    WORD PTR [edi+0x65afa754],es
  4082fd:	es enter 0x6a35,0xb9
  408302:	xchg   ecx,eax
  408303:	ret    
  408304:	js     0x408373
  408306:	mov    eax,0x639f5606
  40830b:	mov    al,0xed
  40830d:	(bad)  
  40830e:	retf   
  40830f:	shl    DWORD PTR [edi-0x15],cl
  408312:	in     al,dx
  408313:	outs   dx,BYTE PTR ds:[esi]
  408314:	push   edx
  408315:	cmp    al,0x35
  408317:	adc    al,0x0
  408319:	dec    ebp
  40831a:	jb     0x408369
  40831c:	push   esp
  40831d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40831e:	adc    BYTE PTR [ebp-0x2b],bl
  408321:	push   0x56dc5a13
  408326:	fnstsw WORD PTR [eax+0x41]
  408329:	adc    eax,0x44fdf60e
  40832e:	call   0x11fb4f76
  408333:	xchg   ebp,eax
  408334:	xor    al,0xaf
  408336:	(bad)  
  408337:	mov    ah,0x30
  408339:	fnsave [ecx+0x40edaca0]
  40833f:	push   ebp
  408340:	bound  edx,QWORD PTR [edx+0x3f]
  408343:	pusha  
  408344:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408345:	lea    edx,[ebp-0x29219756]
  40834b:	aam    0x24
  40834d:	pop    edi
  40834e:	inc    ebp
  40834f:	jnp    0x408388
  408351:	out    0x1a,al
  408353:	mov    dl,0xd1
  408355:	jmp    0x408386
  408357:	xor    esi,DWORD PTR ds:0xefe05517
  40835d:	xor    BYTE PTR [ebp+0x7d22da0a],dh
  408363:	sbb    DWORD PTR [edi+0x2fe604c],esp
  408369:	adc    eax,0xc08c374e
  40836e:	out    dx,eax
  40836f:	dec    ebx
  408370:	push   cs
  408371:	int    0xd8
  408373:	cmp    ebp,DWORD PTR [esi-0x42a2d978]
  408379:	xor    BYTE PTR ds:0xae1d3ced,0x39
  408380:	dec    ecx
  408381:	xchg   ebp,eax
  408382:	scas   eax,DWORD PTR es:[edi]
  408383:	or     ah,BYTE PTR [ebp+0x1c]
  408386:	cmp    eax,0xace229e6
  40838b:	xchg   edx,eax
  40838c:	aaa    
  40838d:	fwait
  40838e:	dec    esp
  40838f:	and    DWORD PTR [esi],0x9f66368d
  408395:	push   ss
  408396:	or     eax,0x8ce04bbb
  40839b:	dec    esp
  40839c:	mov    ecx,0x68d3111
  4083a1:	xchg   BYTE PTR [ebx+0x44],dl
  4083a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083a5:	jmp    0x40839c
  4083a7:	dec    ebx
  4083a8:	cmp    BYTE PTR [esi-0x25d66182],dl
  4083ae:	dec    esi
  4083af:	xchg   DWORD PTR [esi],ebp
  4083b1:	sti    
  4083b2:	push   0x302bb715
  4083b7:	ror    BYTE PTR [ebp-0x41],cl
  4083ba:	sbb    eax,0x7f37cb84
  4083bf:	jb     0x408383
  4083c1:	xchg   DWORD PTR [esi+0x538c821],eax
  4083c7:	sub    bh,ch
  4083c9:	dec    eax
  4083ca:	mov    ecx,0x10ff2ae7
  4083cf:	addr16 add al,0x39
  4083d2:	or     edx,DWORD PTR [eax]
  4083d4:	xchg   ebp,eax
  4083d5:	(bad)  
  4083d6:	jle    0x408409
  4083d8:	into   
  4083d9:	xor    BYTE PTR ss:[edx-0x3ac7727b],dl
  4083e0:	int3   
  4083e1:	loop   0x408425
  4083e3:	(bad)  
  4083e4:	cmp    eax,0x3153a438
  4083e9:	pop    eax
  4083ea:	into   
  4083eb:	ins    DWORD PTR es:[edi],dx
  4083ec:	sti    
  4083ed:	and    eax,0xef8f1861
  4083f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083f4:	repz pop edi
  4083f6:	or     al,bh
  4083f8:	mov    ebp,DWORD PTR [ebp+0x3ca0ec7b]
  4083fe:	xchg   esp,eax
  4083ff:	mov    eax,ds:0x8c741f1d
  408404:	xchg   ecx,eax
  408405:	pop    ebp
  408406:	jb     0x408412
  408408:	(bad)  
  408409:	std    
  40840a:	lods   eax,DWORD PTR ds:[esi]
  40840b:	xchg   ebp,eax
  40840c:	hlt    
  40840d:	pop    esi
  40840e:	pop    ebx
  40840f:	leave  
  408410:	ret    0xc
  408413:	push   ebp
  408414:	mov    ebp,esp
  408416:	mov    DWORD PTR ds:0x424124,0xf89c85b5
  408420:	mov    DWORD PTR ds:0x42a00c,0x7dd6
  40842a:	pop    ebp
  40842b:	jmp    0x41b7a1
  408430:	xor    eax,eax
  408432:	or     DWORD PTR ds:0x42b010,0x429008
  40843c:	inc    eax
  40843d:	ret    
  40843e:	push   ebp
  40843f:	mov    ebp,esp
  408441:	sub    esp,0x10
  408444:	sbb    ecx,DWORD PTR ds:0x42d008
  40844a:	mov    eax,0xf89c85b6
  40844f:	mov    edx,DWORD PTR ds:0x42b000
  408455:	add    DWORD PTR ds:0x42c018,edx
  40845b:	mov    DWORD PTR [ebp-0x4],eax
  40845e:	dec    edx
  40845f:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  408466:	mov    DWORD PTR ds:0x42b01c,0x18
  408470:	cmp    DWORD PTR ds:0x42b01c,0x0
  408477:	je     0x4084ad
  40847d:	cmp    DWORD PTR ds:0x42b01c,0x1b
  408484:	jne    0x40849b
  40848a:	push   DWORD PTR [ebp-0x28]
  40848d:	push   0x7565
  408492:	push   DWORD PTR [ebp-0x18]
  408495:	call   DWORD PTR ds:0x425040
  40849b:	mov    edx,DWORD PTR ds:0x42b01c
  4084a1:	dec    edx
  4084a2:	mov    DWORD PTR ds:0x42b01c,edx
  4084a8:	jmp    0x408470
  4084ad:	mov    ecx,DWORD PTR [ebp-0x4]
  4084b0:	xor    edx,DWORD PTR ds:0x42b008
  4084b6:	push   esi
  4084b7:	mov    DWORD PTR ds:0x42c000,0x17
  4084c1:	cmp    DWORD PTR ds:0x42c000,0x0
  4084c8:	je     0x408518
  4084ce:	cmp    DWORD PTR ds:0x42c000,0xa
  4084d5:	jne    0x4084ec
  4084db:	push   0x8fa2
  4084e0:	push   DWORD PTR [ebp-0x24]
  4084e3:	push   DWORD PTR [ebp-0xc]
  4084e6:	call   DWORD PTR ds:0x425044
  4084ec:	cmp    DWORD PTR ds:0x42c000,0xb
  4084f3:	jne    0x408506
  4084f9:	mov    edx,DWORD PTR ds:0x42c000
  4084ff:	dec    edx
  408500:	mov    DWORD PTR ds:0x42c000,edx
  408506:	mov    edx,DWORD PTR ds:0x42c000
  40850c:	dec    edx
  40850d:	mov    DWORD PTR ds:0x42c000,edx
  408513:	jmp    0x4084c1
  408518:	mov    edx,0x7510893
  40851d:	xor    ecx,edx
  40851f:	and    DWORD PTR ds:0x429018,0x2759
  408529:	mov    esi,0x3272db
  40852e:	mov    DWORD PTR ds:0x42b01c,0x64d9
  408538:	push   edi
  408539:	mov    DWORD PTR ds:0x42c000,0x1c
  408543:	cmp    DWORD PTR ds:0x42c000,0x0
  40854a:	je     0x4085a2
  408550:	cmp    DWORD PTR ds:0x42c000,0xb
  408557:	jne    0x408573
  40855d:	push   DWORD PTR [ebp-0xc]
  408560:	push   DWORD PTR [ebp-0x10]
  408563:	push   0x6908
  408568:	push   0x2a1a
  40856d:	call   DWORD PTR ds:0x425048
  408573:	cmp    DWORD PTR ds:0x42c000,0xc
  40857a:	jne    0x40858f
  408580:	xor    edi,edi
  408582:	xor    edi,DWORD PTR ds:0x42c000
  408588:	dec    edi
  408589:	mov    DWORD PTR ds:0x42c000,edi
  40858f:	mov    edi,DWORD PTR ds:0x42c000
  408595:	dec    edi
  408596:	mov    DWORD PTR ds:0x42c000,edi
  40859c:	jmp    0x408543
  4085a1:	dec    edi
  4085a2:	mov    edi,DWORD PTR [ebp+0x10]
  4085a5:	xor    DWORD PTR ds:0x429004,0x6210
  4085af:	add    ecx,esi
  4085b1:	cmp    ecx,edi
  4085b3:	je     0x408678
  4085b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4085bc:	mov    edi,DWORD PTR [ebp+0x10]
  4085bf:	xor    eax,eax
  4085c1:	xor    ecx,edx
  4085c3:	add    ecx,esi
  4085c5:	add    edi,0xfabdbef1
  4085cb:	adc    eax,0xffffffff
  4085ce:	xor    eax,0x0
  4085d1:	mov    DWORD PTR [ebp-0xc],eax
  4085d4:	push   ebx
  4085d5:	xor    ebx,ebx
  4085d7:	xor    edi,0x8a29a123
  4085dd:	mov    eax,ecx
  4085df:	add    eax,0xfabdbef1
  4085e4:	adc    ebx,0xffffffff
  4085e7:	xor    eax,0x8a29a123
  4085ec:	xor    ebx,0x0
  4085ef:	cmp    eax,edi
  4085f1:	jne    0x40860a
  4085f7:	cmp    ebx,DWORD PTR [ebp-0xc]
  4085fa:	je     0x408672
  408600:	jmp    0x40860a
  408605:	mov    esi,0x3272db
  40860a:	mov    eax,DWORD PTR [ebp-0x4]
  40860d:	mov    edi,DWORD PTR [ebp-0x8]
  408610:	xor    edi,edx
  408612:	add    edi,esi
  408614:	mov    esi,DWORD PTR [ebp+0x8]
  408617:	imul   edi,ecx
  40861a:	mov    ebx,DWORD PTR [ebp+0xc]
  40861d:	xor    eax,edx
  40861f:	add    eax,ecx
  408621:	mov    al,BYTE PTR [ebx+eax*1+0x3272db]
  408628:	mov    BYTE PTR [edi+esi*1],al
  40862b:	mov    eax,DWORD PTR [ebp-0x8]
  40862e:	mov    esi,DWORD PTR [ebp+0x10]
  408631:	xor    eax,edx
  408633:	xor    ebx,ebx
  408635:	add    esi,0xfabdbef1
  40863b:	adc    ebx,0xffffffff
  40863e:	lea    ecx,[ecx+eax*1+0x3272db]
  408645:	xor    edi,edi
  408647:	xor    esi,0x8a29a123
  40864d:	xor    ebx,0x0
  408650:	mov    eax,ecx
  408652:	add    eax,0xfabdbef1
  408657:	adc    edi,0xffffffff
  40865a:	xor    eax,0x8a29a123
  40865f:	xor    edi,0x0
  408662:	cmp    eax,esi
  408664:	jne    0x408605
  40866a:	cmp    edi,ebx
  40866c:	jne    0x408605
  408672:	mov    eax,0xf89c85b5
  408677:	pop    ebx
  408678:	pop    edi
  408679:	pop    esi
  40867a:	leave  
  40867b:	ret    0xc
  40867e:	push   ebp
  40867f:	mov    ebp,esp
  408681:	sub    esp,0x78
  408684:	adc    DWORD PTR ds:0x429000,0x42d00c
  40868e:	push   ebx
  40868f:	or     DWORD PTR ds:0x42d000,0x5016
  408699:	push   esi
  40869a:	sbb    DWORD PTR ds:0x42d008,0x6d64
  4086a4:	push   edi
  4086a5:	push   0x1f
  4086a7:	and    DWORD PTR ds:0x42d018,0x1f4a
  4086b1:	lea    eax,[ebp-0x78]
  4086b4:	push   eax
  4086b5:	not    DWORD PTR ds:0x42c008
  4086bb:	push   0x0
  4086bd:	xor    DWORD PTR ds:0x429008,0x2961
  4086c7:	jmp    0x40aa2c
  4086cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086cd:	xchg   esi,eax
  4086ce:	sub    edx,ebp
  4086d0:	out    0x65,eax
  4086d2:	arpl   WORD PTR [ebx+eiz*8+0x6f1a558d],dx
  4086d9:	push   ss
  4086da:	pop    edi
  4086db:	adc    dl,BYTE PTR [eax+0x18]
  4086de:	bound  esp,QWORD PTR [edx+0x3a]
  4086e1:	pop    edi
  4086e2:	bound  esp,QWORD PTR [edx-0x7d]
  4086e5:	outs   dx,BYTE PTR ds:[esi]
  4086e6:	inc    ecx
  4086e7:	jle    0x408759
  4086e9:	lahf   
  4086ea:	xlat   BYTE PTR ds:[ebx]
  4086eb:	lds    edx,FWORD PTR [edi]
  4086ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086ee:	add    ecx,ebx
  4086f0:	sbb    eax,0x29ebbb6
  4086f5:	add    ebx,DWORD PTR ds:0x5fed7cca
  4086fb:	loope  0x408776
  4086fd:	leave  
  4086fe:	jmp    0x5144d96f
  408703:	add    DWORD PTR [eax-0x4a],0x89a27a7e
  40870a:	or     al,0x18
  40870c:	jecxz  0x4086bf
  40870e:	(bad)  
  40870f:	or     eax,0x7bd3cf14
  408714:	mov    ds,WORD PTR [edx+0x12]
  408717:	dec    esp
  408718:	sub    BYTE PTR ds:0x954c1d90,0x88
  40871f:	stc    
  408720:	ror    DWORD PTR ds:0x4f9fd032,0xfb
  408727:	dec    esp
  408728:	fild   WORD PTR [esi+0x7003c42f]
  40872e:	loope  0x4086ec
  408730:	add    al,0xc3
  408732:	sub    DWORD PTR [edx+0x64],esp
  408735:	or     BYTE PTR [ebx],al
  408737:	mov    eax,0x9d40fee1
  40873c:	sub    eax,0xdc296a2a
  408741:	mov    eax,ds:0xca215b24
  408746:	lock jb 0x408769
  408749:	mov    eax,ds:0xff761ed2
  40874e:	pop    edi
  40874f:	test   al,0xb4
  408751:	mov    edi,0x5f3f927e
  408756:	dec    edx
  408757:	mov    cl,cl
  408759:	aaa    
  40875a:	fld    DWORD PTR [edx-0x7ce9e942]
  408760:	xchg   esi,eax
  408761:	mov    eax,ds:0xfb11261b
  408766:	pop    eax
  408767:	data16 sti 
  408769:	dec    esi
  40876a:	and    eax,0x2870ce12
  40876f:	jnp    0x4087a7
  408771:	daa    
  408772:	shl    dh,1
  408774:	inc    ebp
  408775:	mov    esp,0xe9cb5348
  40877a:	loope  0x408726
  40877c:	cmovs  eax,eax
  40877f:	(bad)  ds:0x3e7b4dfb
  408785:	test   edi,esp
  408787:	sub    ch,BYTE PTR [esi+0x554d9730]
  40878d:	jno    0x408725
  40878f:	test   DWORD PTR [edi+0x1c78693f],esi
  408795:	fiadd  DWORD PTR [edi]
  408798:	in     eax,0x8c
  40879a:	nop
  40879b:	loop   0x408801
  40879d:	(bad)
  4087a1:	icebp  
  4087a2:	loope  0x4087c3
  4087a4:	cmp    bh,BYTE PTR ds:0xfa3f7c58
  4087aa:	inc    dx
  4087ac:	stos   DWORD PTR es:[edi],eax
  4087ad:	shl    ecx,cl
  4087af:	lock daa 
  4087b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087b3:	and    BYTE PTR [ecx+ebx*1-0x497a8bd6],dl
  4087ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087bb:	clc    
  4087bc:	hlt    
  4087bd:	xlat   BYTE PTR ds:[ebx]
  4087be:	int    0x7
  4087c0:	fisttp QWORD PTR [edi]
  4087c2:	pop    ebp
  4087c3:	jp     0x4087d8
  4087c5:	adc    al,0xab
  4087c7:	dec    eax
  4087c8:	cmp    DWORD PTR [ecx+0x4dce124b],eax
  4087ce:	into   
  4087cf:	(bad)  
  4087d0:	ins    DWORD PTR es:[edi],dx
  4087d1:	popf   
  4087d2:	jl     0x4087b5
  4087d4:	adc    ah,cl
  4087d6:	loope  0x40884f
  4087d8:	cld    
  4087d9:	mov    eax,0xa4dec02b
  4087de:	loopne 0x40880a
  4087e0:	pop    esp
  4087e1:	test   DWORD PTR [edx],ebp
  4087e3:	cmp    eax,eax
  4087e5:	push   edx
  4087e6:	dec    ebx
  4087e7:	pop    ecx
  4087e8:	dec    eax
  4087e9:	ret    
  4087ea:	test   al,0x89
  4087ec:	or     DWORD PTR [ebp+edx*8+0x3d37ed1b],0xb1e38a8f
  4087f7:	add    ebp,esi
  4087f9:	inc    ebx
  4087fa:	push   0xffffffb1
  4087fc:	out    dx,eax
  4087fd:	rcl    DWORD PTR [ebx-0xef2c13],0xcc
  408804:	stc    
  408805:	inc    ecx
  408806:	sub    DWORD PTR [ecx],0xda157907
  40880c:	sbb    DWORD PTR [ebx+eax*4-0x6a],eax
  408810:	mov    ecx,0x9a6cc2ed
  408815:	outs   dx,BYTE PTR ds:[esi]
  408816:	mov    ch,0xb2
  408818:	mov    ebp,0xd9de92f4
  40881d:	jp     0x4087d5
  40881f:	fdiv   st,st(3)
  408821:	loope  0x408802
  408823:	xor    DWORD PTR cs:[edx],ecx
  408826:	scas   al,BYTE PTR es:[edi]
  408827:	or     eax,0xd788a600
  40882c:	sub    BYTE PTR [edx-0xa],cl
  40882f:	mov    ch,0xab
  408831:	pop    ecx
  408832:	mov    bh,0x6d
  408835:	and    DWORD PTR [edi+edi*2+0x63443237],esi
  40883c:	loop   0x408847
  40883e:	pop    esp
  40883f:	call   0xc982:0xdc066290
  408846:	or     al,0xf
  408848:	sti    
  408849:	jnp    0x408804
  40884b:	pop    es
  40884c:	sbb    edx,esp
  40884e:	mov    ah,0x18
  408850:	pop    eax
  408851:	mov    ebp,0xf40ae90e
  408856:	test   BYTE PTR [ecx+0x673f6e2c],al
  40885c:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40885e:	repz xlat BYTE PTR ds:[ebx]
  408860:	fs sti 
  408862:	imul   ecx,edi,0x43
  408865:	and    eax,0x64aa20b4
  40886a:	cld    
  40886b:	retf   
  40886c:	jae    0x4088ad
  40886e:	std    
  40886f:	xchg   ecx,eax
  408870:	cli    
  408871:	(bad)  
  408872:	xchg   ecx,eax
  408873:	add    edi,DWORD PTR [ecx-0x3f]
  408876:	jb     0x408829
  408878:	xor    eax,0x64682741
  40887d:	ins    DWORD PTR es:[edi],dx
  40887e:	pop    ds
  40887f:	fisub  WORD PTR [ebx]
  408881:	loop   0x40884a
  408883:	fist   DWORD PTR [ebx-0x234e14b4]
  408889:	or     al,BYTE PTR [ebx-0x75]
  40888c:	push   0x762840a7
  408891:	neg    DWORD PTR [edx]
  408893:	call   0x75ddbcd8
  408898:	or     BYTE PTR [edx+0x7e],0x72
  40889c:	mov    ebp,0xb0c57388
  4088a1:	mov    bh,0x19
  4088a3:	leave  
  4088a4:	add    edx,edx
  4088a6:	mov    ds:0xcb4c7a73,al
  4088ab:	or     BYTE PTR [eax+ebx*1],dl
  4088ae:	mov    ecx,0x120d4b7d
  4088b3:	inc    edi
  4088b4:	fadd   st(2),st
  4088b6:	aam    0x44
  4088b8:	xchg   ebp,eax
  4088b9:	ins    DWORD PTR es:[edi],dx
  4088ba:	sbb    DWORD PTR [edx+0x22c141ca],0x6d
  4088c1:	fsubr  DWORD PTR [ecx-0x37]
  4088c4:	rcr    DWORD PTR [ecx-0x18],0x53
  4088c8:	scas   al,BYTE PTR es:[edi]
  4088c9:	push   esp
  4088ca:	add    eax,0x55eec0d2
  4088cf:	rcl    esp,cl
  4088d1:	inc    esp
  4088d2:	jo     0x4088d7
  4088d4:	or     ebp,ecx
  4088d6:	pop    es
  4088d7:	or     DWORD PTR [edx],eax
  4088d9:	xchg   ecx,eax
  4088da:	test   dl,al
  4088dc:	push   0xffffffda
  4088de:	loop   0x408921
  4088e0:	int3   
  4088e1:	adc    BYTE PTR [edi+0x7566cdf6],ah
  4088e7:	mov    dl,0xa3
  4088e9:	jl     0x40892c
  4088eb:	pop    ss
  4088ec:	cmp    ch,bh
  4088ee:	repz retf 
  4088f0:	mov    ch,0xf7
  4088f2:	test   DWORD PTR [edi],0x70a2d154
  4088f8:	inc    ecx
  4088f9:	ret    0x5a7e
  4088fc:	sti    
  4088fd:	pop    edx
  4088fe:	jnp    0x408882
  408900:	xchg   ebx,eax
  408901:	jmp    0x408899
  408903:	jmp    0x81b2:0x49d1c3bc
  40890a:	xchg   BYTE PTR [edx],ah
  40890c:	inc    ebp
  40890d:	cmp    eax,0xc322826e
  408912:	mov    ebx,0x8c56cdc2
  408917:	ja     0x4088a5
  408919:	sbb    eax,0x43ef741c
  40891e:	cdq    
  40891f:	mov    al,ds:0x7f0e65cc
  408924:	ins    BYTE PTR es:[edi],dx
  408925:	and    al,al
  408927:	xchg   edx,eax
  408928:	mov    ecx,0x62baa144
  40892d:	mov    bh,0x34
  40892f:	scas   eax,DWORD PTR es:[edi]
  408930:	xor    dl,dl
  408932:	mov    bh,0xa1
  408934:	jbe    0x4089ac
  408936:	ror    ch,1
  408938:	test   al,0x61
  40893a:	mov    ch,0xf0
  40893c:	outs   dx,BYTE PTR ds:[esi]
  40893d:	je     0x40894f
  40893f:	cli    
  408940:	in     al,dx
  408941:	add    ecx,DWORD PTR [ecx-0x480587ae]
  408947:	dec    edx
  408948:	and    eax,0xccc27600
  40894d:	jb     0x408959
  40894f:	lea    esp,[eax+eax*2-0x598f7108]
  408956:	dec    esi
  408957:	or     al,BYTE PTR [edi]
  408959:	out    0xb9,al
  40895b:	mov    ecx,0x1181c6c8
  408960:	sub    al,0x89
  408962:	xchg   edx,eax
  408963:	mov    bl,0xd
  408965:	retf   
  408966:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408967:	dec    esi
  408968:	sbb    dh,BYTE PTR ds:0xc2592a7
  40896e:	cmp    bl,BYTE PTR ds:0xf3d309dd
  408974:	adc    esp,edi
  408976:	dec    edx
  408977:	aas    
  408978:	adc    ch,bh
  40897a:	adc    ch,BYTE PTR [edi+0x8]
  40897d:	pusha  
  40897e:	dec    eax
  40897f:	cmp    al,0x6f
  408981:	mov    gs,WORD PTR ss:[ebp-0x617b271c]
  408988:	and    esp,DWORD PTR [edx+eiz*1+0x58a76481]
  40898f:	add    ah,bh
  408991:	ds jmp 0x77add5ab
  408997:	scas   al,BYTE PTR es:[edi]
  408998:	jle    0x4089f0
  40899a:	dec    ebx
  40899b:	mov    edx,cs
  40899d:	in     eax,0x2b
  40899f:	inc    edx
  4089a0:	jno    0x4089e0
  4089a2:	outs   dx,DWORD PTR ds:[esi]
  4089a3:	push   ss
  4089a4:	shr    ch,0x7f
  4089a7:	test   al,0x6c
  4089a9:	mov    ah,BYTE PTR [esi+0x21a1b6b]
  4089af:	test   DWORD PTR [ebx-0x2b1454f6],0x3939e041
  4089b9:	mov    ds:0x6f8c9cd6,eax
  4089be:	(bad)  
  4089c0:	mov    esp,0xba035c65
  4089c5:	dec    DWORD PTR [ecx-0x39634bf8]
  4089cb:	aam    0xa7
  4089cd:	adc    ecx,DWORD PTR [edi+0x706652a8]
  4089d3:	dec    ecx
  4089d4:	add    cl,BYTE PTR [edx-0x26]
  4089d7:	pop    edx
  4089d8:	pop    eax
  4089d9:	xchg   esi,eax
  4089da:	inc    edi
  4089db:	fdiv   DWORD PTR [edx+0x26e33829]
  4089e1:	push   ebp
  4089e2:	(bad)  
  4089e3:	pusha  
  4089e4:	xchg   esp,eax
  4089e5:	cwde   
  4089e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089e7:	xchg   esp,eax
  4089e8:	adc    al,0x85
  4089ea:	out    0xbd,eax
  4089ec:	icebp  
  4089ed:	sub    ebp,esi
  4089ef:	scas   al,BYTE PTR es:[edi]
  4089f0:	ficomp WORD PTR [edx]
  4089f2:	sub    DWORD PTR [ecx+0x46cef2cd],0x192ff5e8
  4089fc:	cwde   
  4089fd:	sbb    al,0x4c
  4089ff:	(bad)  
  408a01:	cmp    eax,0x85be98e8
  408a06:	jbe    0x40898b
  408a08:	push   edx
  408a0a:	mov    ds:0xdeb6a76a,al
  408a0f:	sar    BYTE PTR [edi-0x63],cl
  408a12:	jmp    0x408994
  408a14:	mov    al,BYTE PTR [ebp-0x4765a743]
  408a1a:	pusha  
  408a1b:	or     al,0x7c
  408a1d:	jae    0x4089be
  408a1f:	jnp    0x408a33
  408a21:	jmp    0x408a06
  408a23:	in     eax,0xab
  408a25:	sub    ah,BYTE PTR [edi-0x4b]
  408a28:	and    ebp,ebp
  408a2a:	arpl   WORD PTR [eax-0x481dcf88],bx
  408a30:	sbb    ah,BYTE PTR [ebx+edx*2]
  408a33:	cmc    
  408a34:	xchg   ecx,eax
  408a35:	mov    al,0x97
  408a37:	sbb    BYTE PTR [eax+edx*1-0x679979e3],bh
  408a3e:	xchg   esi,eax
  408a3f:	shr    DWORD PTR [edi-0xbb0bc22],1
  408a45:	ins    BYTE PTR es:[edi],dx
  408a46:	das    
  408a47:	dec    DWORD PTR [edi]
  408a49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a4a:	push   ebp
  408a4b:	leave  
  408a4c:	hlt    
  408a4d:	icebp  
  408a4e:	push   ebx
  408a4f:	xor    dl,BYTE PTR [eax-0x4e52c60b]
  408a55:	retf   0xf061
  408a58:	pop    ebx
  408a59:	xor    ah,0x76
  408a5c:	mov    ds:0xcfc5ad2c,al
  408a61:	repz dec ebx
  408a63:	inc    esi
  408a64:	pop    edx
  408a65:	lock cmp BYTE PTR [esi],bl
  408a68:	or     al,0xd9
  408a6a:	or     eax,0xb6f25d57
  408a6f:	imul   eax,edx,0xa8f1318d
  408a75:	add    ebx,DWORD PTR [esi]
  408a77:	add    eax,0x5e27622a
  408a7c:	jmp    DWORD PTR ss:[ebx-0x55175f62]
  408a83:	(bad)  
  408a84:	mov    al,ds:0x728b8012
  408a89:	daa    
  408a8a:	scas   al,BYTE PTR es:[edi]
  408a8b:	dec    eax
  408a8c:	loopne 0x408aa5
  408a8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a8f:	(bad)  
  408a91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a92:	in     al,dx
  408a93:	mov    bl,0x89
  408a95:	push   ebp
  408a96:	jecxz  0x408ad9
  408a98:	dec    esi
  408a99:	adc    edx,eax
  408a9b:	xchg   DWORD PTR [eax-0x3220b7f0],esi
  408aa1:	shr    ebp,1
  408aa3:	sbb    al,0xaa
  408aa5:	add    al,0x73
  408aa7:	sbb    eax,0xdfe17f97
  408aac:	outs   dx,BYTE PTR ds:[esi]
  408aad:	mov    bh,0x7d
  408aaf:	out    dx,eax
  408ab0:	into   
  408ab1:	inc    dl
  408ab3:	lods   al,BYTE PTR ds:[esi]
  408ab4:	ins    DWORD PTR es:[edi],dx
  408ab5:	mov    esp,0xee253a4a
  408aba:	retf   
  408abb:	or     eax,0x905f355c
  408ac0:	mov    ch,0x3
  408ac2:	mov    bh,0x57
  408ac4:	scas   al,BYTE PTR es:[edi]
  408ac5:	popf   
  408ac6:	imul   eax,ebp,0x7b
  408ac9:	repnz fild DWORD PTR [ebx]
  408acc:	jnp    0x408b4d
  408ace:	add    eax,0x47e8e93e
  408ad3:	jmp    0xb6e8d91b
  408ad8:	scas   al,BYTE PTR es:[edi]
  408ad9:	pop    ebp
  408ada:	and    eax,DWORD PTR [ebx]
  408adc:	and    DWORD PTR [esi+0x50],esp
  408adf:	fcmove st,st(0)
  408ae1:	je     0x408ac7
  408ae3:	jge    0x408b38
  408ae5:	rcr    DWORD PTR [edi-0x53],1
  408ae8:	(bad)  
  408ae9:	scas   al,BYTE PTR es:[edi]
  408aea:	or     DWORD PTR [edx+0x750a153a],eax
  408af0:	pop    edi
  408af1:	or     DWORD PTR ds:0x81e920a4,0x7e
  408af8:	ja     0x408b3f
  408afa:	mov    eax,DWORD PTR [ebx]
  408afc:	outs   dx,BYTE PTR ds:[esi]
  408afd:	sti    
  408afe:	rol    BYTE PTR [ebp-0x7e],1
  408b01:	jmp    0x72788612
  408b06:	scas   al,BYTE PTR es:[edi]
  408b07:	or     bh,BYTE PTR [edx+eiz*1+0x3a99a0e1]
  408b0e:	cdq    
  408b0f:	xchg   esp,eax
  408b10:	jno    0x408b17
  408b12:	test   al,0xa3
  408b14:	jo     0x408b64
  408b16:	dec    esi
  408b17:	outs   dx,BYTE PTR ds:[esi]
  408b18:	gs jbe 0x408b53
  408b1b:	loopne 0x408ab4
  408b1d:	and    BYTE PTR [ecx+0x2e16cb97],dl
  408b23:	xchg   DWORD PTR [esp+esi*8+0x61e6af41],ebp
  408b2a:	das    
  408b2b:	cdq    
  408b2c:	mov    es,WORD PTR fs:[edx]
  408b2f:	xlat   BYTE PTR ds:[ebx]
  408b30:	stos   DWORD PTR es:[edi],eax
  408b31:	add    cl,BYTE PTR [edx]
  408b33:	and    dh,BYTE PTR [ecx+0x51]
  408b36:	outs   dx,DWORD PTR ds:[esi]
  408b37:	mov    cl,0x39
  408b39:	lods   al,BYTE PTR ds:[esi]
  408b3a:	push   ds
  408b3b:	int    0x39
  408b3d:	mov    ebp,0x98983a61
  408b42:	aad    0x9
  408b44:	xchg   edi,edi
  408b46:	push   ecx
  408b47:	lods   al,BYTE PTR ds:[esi]
  408b48:	scas   eax,DWORD PTR es:[edi]
  408b49:	lods   al,BYTE PTR ds:[esi]
  408b4a:	outs   dx,DWORD PTR ds:[esi]
  408b4b:	jle    0x408baa
  408b4d:	ds add al,0xf1
  408b50:	mov    ch,0xef
  408b52:	sub    BYTE PTR [ecx-0x6d],0x6d
  408b56:	ret    
  408b57:	sbb    eax,0x5db0d035
  408b5c:	js     0x408b84
  408b5e:	and    al,0xcd
  408b60:	push   ebp
  408b61:	shl    DWORD PTR [edi+0xd],1
  408b64:	lods   eax,DWORD PTR ds:[esi]
  408b65:	jge    0x408afb
  408b67:	test   al,0x1d
  408b69:	xlat   BYTE PTR ds:[ebx]
  408b6a:	mov    DWORD PTR [edx],0x414d2159
  408b70:	mul    DWORD PTR [esi-0x4]
  408b73:	sbb    cl,BYTE PTR [edi-0x20]
  408b76:	xchg   esi,eax
  408b77:	sub    al,bl
  408b79:	pusha  
  408b7a:	fs or  eax,0xa0b4dbac
  408b80:	test   DWORD PTR [ebp+0x4620b657],edi
  408b86:	aas    
  408b87:	xchg   BYTE PTR [ebp-0x7e],bl
  408b8a:	adc    cl,al
  408b8c:	(bad)  
  408b8d:	fmul   st(7),st
  408b8f:	out    dx,al
  408b90:	push   0x25
  408b92:	sub    bh,dh
  408b94:	data16 data16 in al,0xad
  408b98:	data16 loopne 0x408c19
  408b9b:	mov    bl,0x7e
  408b9d:	jb     0x408b24
  408b9f:	add    eax,edx
  408ba1:	fiadd  DWORD PTR [eax+0x34]
  408ba4:	mov    gs:0x68d17871,eax
  408baa:	mov    ebp,0x367fb496
  408baf:	fild   QWORD PTR [edi-0x2a]
  408bb2:	sub    al,0x95
  408bb4:	mov    al,0xcd
  408bb6:	jnp    0x408bdd
  408bb8:	mov    al,0xb3
  408bba:	repz jge 0x408c2e
  408bbd:	js     0x408be4
  408bbf:	xor    BYTE PTR [ecx],ah
  408bc1:	fadd   st,st(7)
  408bc3:	in     al,0x4b
  408bc5:	jo     0x408b5f
  408bc7:	test   al,0xb9
  408bc9:	cmp    DWORD PTR [esi*2-0x62bceca7],edi
  408bd0:	mov    ebx,0xe764cf04
  408bd5:	push   ecx
  408bd6:	mov    esi,0x9362f55
  408bdb:	sub    ah,al
  408bdd:	mov    bl,0x4e
  408bdf:	imul   BYTE PTR [eax]
  408be1:	ror    BYTE PTR [edi],0xed
  408be4:	cmp    BYTE PTR [edx],0x60
  408be7:	stos   DWORD PTR es:[edi],eax
  408be8:	xor    ebx,DWORD PTR [esi+0x5624ed60]
  408bee:	aas    
  408bef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bf0:	lods   eax,DWORD PTR ds:[esi]
  408bf1:	(bad)  
  408bf2:	cmp    al,ch
  408bf4:	loop   0x408c16
  408bf6:	sub    dl,BYTE PTR [eax+0x8e88dad]
  408bfc:	aad    0xda
  408bfe:	xchg   esp,eax
  408bff:	xchg   DWORD PTR [esi+0x5686bf35],esp
  408c05:	sbb    eax,0x52d56c92
  408c0a:	xchg   BYTE PTR [ebx],ah
  408c0c:	(bad)  
  408c0d:	push   eax
  408c0e:	sub    ch,BYTE PTR [ebx]
  408c10:	and    BYTE PTR [ebx+0x27686e22],cl
  408c16:	inc    esi
  408c17:	or     al,0x82
  408c19:	into   
  408c1a:	test   DWORD PTR [edx-0x7f],0x99cbd403
  408c21:	cmp    al,0xcd
  408c23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c24:	push   ecx
  408c25:	sub    edx,edx
  408c27:	push   ebp
  408c28:	leave  
  408c29:	inc    esi
  408c2a:	icebp  
  408c2b:	add    bh,BYTE PTR [eax-0x268e9f4c]
  408c31:	call   0x205:0x6cbd2bf6
  408c38:	cmp    cl,0xb0
  408c3b:	cdq    
  408c3c:	in     eax,dx
  408c3d:	(bad)  
  408c3f:	push   es
  408c40:	fidiv  WORD PTR [eax+0x5a3c9f17]
  408c46:	ret    0x5554
  408c49:	or     eax,0x9876e910
  408c4e:	adc    edx,DWORD PTR [ebp-0x206c7387]
  408c54:	sub    al,0xf3
  408c56:	lea    eax,[esi+edx*2]
  408c59:	cmp    ebp,ecx
  408c5b:	dec    eax
  408c5c:	add    eax,0x871e9521
  408c61:	dec    esi
  408c62:	cmp    eax,DWORD PTR [edi-0x45]
  408c65:	jmp    0x57c8:0xb345d4ed
  408c6c:	and    ah,BYTE PTR [ecx-0x35ef139]
  408c72:	out    dx,al
  408c73:	dec    eax
  408c74:	pop    ebp
  408c75:	jecxz  0x408c71
  408c77:	inc    BYTE PTR [eax]
  408c79:	push   ecx
  408c7a:	pop    esp
  408c7b:	leave  
  408c7c:	fcmove st,st(2)
  408c7e:	xchg   DWORD PTR [eax-0x4cab16a3],ebp
  408c84:	addr16 int3 
  408c86:	out    dx,ax
  408c88:	ret    0xe003
  408c8b:	ja     0x408cd1
  408c8d:	std    
  408c8e:	imul   BYTE PTR [eax]
  408c90:	out    dx,al
  408c91:	jmp    0x408cd0
  408c93:	test   DWORD PTR es:[edx+0x3c],ebp
  408c97:	scas   al,BYTE PTR es:[edi]
  408c98:	stos   DWORD PTR es:[edi],eax
  408c99:	push   cs
  408c9a:	xchg   ebp,eax
  408c9b:	call   0x7def:0x243e243e
  408ca2:	mov    dl,0xb
  408ca4:	dec    edx
  408ca5:	or     edx,DWORD PTR [esp+ebx*2]
  408ca8:	loope  0x408c98
  408caa:	jno    0x408c75
  408cac:	mov    cl,0x8f
  408cae:	ja     0x408cbb
  408cb0:	or     eax,0x1501c2d7
  408cb5:	mov    al,ds:0x485fd2c6
  408cba:	inc    esi
  408cbb:	fild   WORD PTR [ebp+0x225b55b9]
  408cc1:	es push esp
  408cc3:	aaa    
  408cc4:	sub    esi,DWORD PTR [edi+0x18]
  408cc7:	sbb    ebx,DWORD PTR [ecx+ebp*8]
  408cca:	sub    bl,BYTE PTR [edx-0x3]
  408ccd:	fmul   QWORD PTR [ecx-0x54]
  408cd0:	push   es
  408cd1:	(bad)  
  408cd2:	in     al,dx
  408cd3:	adc    edi,DWORD PTR [esi-0x68]
  408cd6:	fidivr WORD PTR [eax]
  408cd8:	cmp    eax,0xdf952ce9
  408cdd:	(bad)  
  408cde:	out    dx,al
  408cdf:	fwait
  408ce0:	push   ecx
  408ce1:	sub    al,0xb2
  408ce3:	sub    al,0x80
  408ce5:	in     al,0x25
  408ce7:	pop    eax
  408ce8:	jno    0x408d03
  408cea:	sub    ebp,edi
  408cec:	sbb    esi,DWORD PTR [ebp-0x79]
  408cef:	mov    bh,0x6a
  408cf1:	or     eax,DWORD PTR [ebx-0x56]
  408cf4:	scas   al,BYTE PTR es:[edi]
  408cf5:	jno    0x408d2c
  408cf7:	test   eax,0x9054ca87
  408cfc:	repnz xchg esi,eax
  408cfe:	shl    BYTE PTR [edi],1
  408d00:	or     BYTE PTR [edi-0x15],ch
  408d03:	mov    bl,0x24
  408d05:	in     al,0x9d
  408d07:	adc    eax,0x581e66eb
  408d0c:	adc    DWORD PTR [eax],edi
  408d0e:	mov    edx,DWORD PTR [edx+0x74db3f3e]
  408d14:	and    esp,DWORD PTR [esi-0x734b17b7]
  408d1a:	pop    ds
  408d1b:	mov    cl,bl
  408d1d:	popf   
  408d1e:	mov    ds:0xbdf76ed3,al
  408d23:	nop
  408d24:	into   
  408d25:	test   al,0xa9
  408d27:	loop   0x408d55
  408d29:	xchg   ebx,eax
  408d2a:	pop    es
  408d2b:	push   es
  408d2c:	adc    DWORD PTR [ecx],esi
  408d2e:	aas    
  408d2f:	stos   BYTE PTR es:[edi],al
  408d30:	outs   dx,DWORD PTR ds:[esi]
  408d31:	mov    ebp,0x89809f10
  408d36:	dec    esi
  408d37:	push   0xc730c919
  408d3c:	lods   eax,DWORD PTR ds:[esi]
  408d3d:	and    BYTE PTR [ecx+eax*1-0x7a255755],cl
  408d44:	sbb    BYTE PTR ds:0x34fd038b,bh
  408d4a:	pusha  
  408d4b:	enter  0x1dfd,0xcd
  408d4f:	addr16 pop edi
  408d51:	ret    0x165f
  408d54:	fwait
  408d55:	and    BYTE PTR [edx+0x53673f71],0x7d
  408d5c:	add    al,0xdc
  408d5e:	jno    0x408d1e
  408d60:	lds    ebp,FWORD PTR [edx]
  408d62:	jge    0x408dd7
  408d64:	and    BYTE PTR [ecx],al
  408d66:	(bad)  
  408d67:	lods   al,BYTE PTR ds:[esi]
  408d68:	mov    eax,0xc7de855b
  408d6d:	jae    0x408d46
  408d6f:	in     eax,0x40
  408d71:	or     eax,0x376ea68e
  408d76:	adc    al,0xec
  408d78:	adc    dh,BYTE PTR ds:0xce9fb6ed
  408d7e:	popa   
  408d7f:	sub    ch,BYTE PTR [edx+eiz*4]
  408d82:	fs inc edi
  408d84:	das    
  408d85:	or     bh,BYTE PTR ds:[edi-0x6c43ce12]
  408d8c:	je     0x408dd9
  408d8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d8f:	mov    dl,0xdd
  408d91:	jle    0x408e06
  408d93:	or     BYTE PTR [ebx-0x113406d],dh
  408d99:	std    
  408d9a:	je     0x408d46
  408d9c:	mov    ds:0x4c13f20c,al
  408da1:	ins    DWORD PTR es:[edi],dx
  408da2:	stc    
  408da3:	sbb    BYTE PTR [esp+ebx*2],ch
  408da6:	cli    
  408da7:	nop
  408da8:	xchg   esp,eax
  408da9:	mov    bl,0xa5
  408dab:	sbb    esi,DWORD PTR [edx]
  408dad:	pushf  
  408dae:	mov    edx,0x1c11e8f1
  408db3:	push   esi
  408db4:	pop    edi
  408db5:	adc    DWORD PTR [edx+0x3a],0xffffffba
  408db9:	xchg   esi,eax
  408dba:	aad    0xdd
  408dbc:	outs   dx,BYTE PTR ds:[esi]
  408dbd:	xchg   DWORD PTR [ebx-0x2e],esp
  408dc0:	mov    edx,0x7f6f8c5
  408dc5:	jecxz  0x408e27
  408dc7:	xchg   esp,eax
  408dc8:	jns    0x408de0
  408dca:	hlt    
  408dcb:	dec    edi
  408dcc:	aad    0x8c
  408dce:	mov    ah,BYTE PTR ds:[ebx-0x4a7823c9]
  408dd5:	dec    edx
  408dd6:	out    0x8a,al
  408dd8:	aam    0x93
  408dda:	popf   
  408ddb:	xchg   DWORD PTR [ebp-0x69b0c60],edx
  408de1:	dec    ebp
  408de2:	outs   dx,DWORD PTR ds:[esi]
  408de3:	lods   eax,DWORD PTR ds:[esi]
  408de4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408de5:	xchg   esp,eax
  408de6:	push   ecx
  408de7:	mov    dh,0x39
  408de9:	(bad)  
  408deb:	inc    esi
  408dec:	stc    
  408ded:	add    al,0x4
  408def:	loop   0x408dac
  408df1:	add    ecx,edx
  408df3:	or     eax,0x527e71f1
  408df8:	mov    fs,WORD PTR [esi+0x15]
  408dfb:	pop    eax
  408dfc:	sbb    bh,dh
  408dfe:	jae    0x408e64
  408e00:	sbb    dh,BYTE PTR [edi]
  408e02:	imul   ebx,DWORD PTR [edx-0x76],0xffffffd8
  408e06:	bound  eax,QWORD PTR [ecx+0x1b]
  408e09:	das    
  408e0a:	mov    edx,0x37cc5299
  408e0f:	jbe    0x408e71
  408e11:	aas    
  408e12:	mov    ch,0x78
  408e14:	pop    ds
  408e15:	cmp    al,0xb5
  408e17:	test   eax,0xa3cc49ff
  408e1c:	dec    ecx
  408e1d:	push   ds
  408e1e:	fdivr  DWORD PTR ds:0xb87692eb
  408e24:	ja     0x408e2c
  408e26:	push   eax
  408e27:	fmul   DWORD PTR [ecx-0x40]
  408e2a:	cmp    al,0x51
  408e2c:	sub    ebp,ebp
  408e2e:	adc    dh,ah
  408e30:	jp     0x408e53
  408e32:	loop   0x408e25
  408e34:	test   BYTE PTR [edi],bh
  408e36:	add    eax,0x2e69c0d7
  408e3b:	(bad)  
  408e3c:	test   BYTE PTR [eax+0x15fe5d46],0x8c
  408e43:	ficomp WORD PTR [edx]
  408e45:	or     ecx,ebp
  408e47:	sar    BYTE PTR [edx],cl
  408e49:	jnp    0x408eae
  408e4b:	dec    ecx
  408e4c:	mov    ch,0x56
  408e4e:	mov    ds:0x668f614,al
  408e53:	adc    DWORD PTR [esi-0x56],esi
  408e56:	ins    BYTE PTR es:[edi],dx
  408e57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e58:	fcomip st,st(3)
  408e5a:	out    0x7c,al
  408e5c:	push   ds
  408e5d:	mov    DWORD PTR [esi-0x34],esi
  408e60:	outs   dx,DWORD PTR ds:[esi]
  408e61:	ret    
  408e62:	test   ebp,ebx
  408e64:	out    dx,al
  408e65:	sub    DWORD PTR [eax*8-0x7c18436d],edi
  408e6c:	test   BYTE PTR [ecx+ebp*2+0x6f051205],ch
  408e73:	xor    al,0xf2
  408e75:	and    ah,BYTE PTR [edi+0x33]
  408e78:	pop    ebp
  408e79:	and    al,0xd6
  408e7b:	outs   dx,DWORD PTR ds:[esi]
  408e7c:	jno    0x408ecb
  408e7e:	dec    ebx
  408e7f:	pop    ds
  408e80:	cli    
  408e81:	sbb    eax,0xc5d8eff1
  408e86:	(bad)  
  408e87:	call   0xf4498dc8
  408e8c:	lds    esp,FWORD PTR [ecx+0x6669d63a]
  408e92:	pop    eax
  408e93:	rcr    DWORD PTR [edi+eiz*4+0x4c],cl
  408e97:	push   edi
  408e98:	xchg   ecx,eax
  408e99:	test   dh,0x15
  408e9c:	xchg   DWORD PTR [edx],edx
  408e9e:	test   eax,0x4ff91906
  408ea3:	ins    DWORD PTR es:[edi],dx
  408ea4:	mov    edi,0x101964e8
  408ea9:	enter  0xff59,0x64
  408ead:	test   BYTE PTR [ebp-0x40],dl
  408eb0:	sti    
  408eb1:	(bad)  
  408eb2:	mov    ebp,0x70d7fde2
  408eb7:	mov    bh,0xe1
  408eb9:	leave  
  408eba:	inc    ecx
  408ebb:	adc    al,0x52
  408ebd:	pop    ds
  408ebe:	push   0xcd6809bc
  408ec3:	push   ebp
  408ec4:	xchg   ecx,eax
  408ec5:	int    0xd3
  408ec7:	gs jns 0x408f18
  408eca:	mov    edi,DWORD PTR [edi+0x2670c56]
  408ed0:	jle    0x408ef8
  408ed2:	(bad)  
  408ed3:	or     eax,0xe26a9356
  408ed8:	ret    
  408ed9:	and    al,0x14
  408edb:	leave  
  408edc:	call   0x510:0xb04318ea
  408ee3:	cmp    eax,0x110ec128
  408ee8:	add    eax,0xcf33c14f
  408eed:	add    DWORD PTR [ebx],0xbb8cb344
  408ef3:	mov    dl,0x2e
  408ef5:	sbb    al,0xcf
  408ef7:	mov    bh,0x71
  408ef9:	imul   ebp,DWORD PTR [ebx+ebp*1+0x299c0d51],0x5bdcce8c
  408f04:	mov    bh,BYTE PTR [ebp+0x51104f54]
  408f0a:	add    BYTE PTR [eax-0x41],bl
  408f0d:	out    dx,al
  408f0e:	dec    esp
  408f0f:	push   eax
  408f10:	jae    0x408f5e
  408f12:	ret    
  408f13:	int3   
  408f14:	push   es
  408f15:	lods   al,BYTE PTR ds:[esi]
  408f16:	stos   DWORD PTR es:[edi],eax
  408f17:	mov    BYTE PTR [ecx-0x52538aba],dl
  408f1d:	cmp    eax,0xdc0089fc
  408f22:	rcl    DWORD PTR [edx],1
  408f24:	adc    ecx,DWORD PTR [ebp+0x62]
  408f27:	mov    bl,0x7a
  408f29:	xor    ebp,esi
  408f2b:	or     BYTE PTR [edx-0x7bb5b57],cl
  408f31:	and    ah,ah
  408f33:	pop    ds
  408f34:	fwait
  408f35:	ret    0x5714
  408f38:	fincstp 
  408f3a:	aam    0xd8
  408f3c:	push   cs
  408f3d:	mov    edi,0x62a534d3
  408f42:	loop   0x408f6c
  408f44:	jg     0x408f98
  408f46:	jb     0x408fa5
  408f48:	in     eax,0x4f
  408f4a:	push   eax
  408f4b:	lahf   
  408f4c:	pop    ecx
  408f4e:	ss mov al,0x63
  408f51:	mov    ebx,0x469cfda2
  408f56:	mov    edx,0x75b8eeb6
  408f5b:	out    dx,al
  408f5c:	sbb    eax,0x4aca8df
  408f61:	xchg   ebx,eax
  408f62:	stos   BYTE PTR es:[edi],al
  408f63:	push   ecx
  408f64:	iret   
  408f65:	mov    eax,0x3e745ff4
  408f6a:	out    dx,eax
  408f6b:	jge    0x408f45
  408f6d:	sbb    ebp,0x664efa50
  408f73:	jo     0x408f84
  408f75:	lds    esp,FWORD PTR [edi-0x6d0ddf00]
  408f7b:	and    eax,0x2efc686
  408f80:	mov    esp,0xddf1ca8b
  408f85:	xor    DWORD PTR [esp+eax*2-0x5d],ebp
  408f89:	adc    bl,dl
  408f8b:	pusha  
  408f8c:	ja     0x408faa
  408f8e:	je     0x408faf
  408f90:	and    BYTE PTR [ecx],bh
  408f92:	jbe    0x408f3a
  408f94:	jp     0x408f2e
  408f96:	inc    eax
  408f97:	or     ah,BYTE PTR [ebx]
  408f99:	adc    cl,BYTE PTR [ebx+0x5]
  408f9c:	and    cl,dl
  408f9e:	xor    esp,ecx
  408fa0:	pop    ebx
  408fa1:	cli    
  408fa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fa3:	mov    bl,0x8d
  408fa5:	add    ch,BYTE PTR [ecx+eax*2+0x717f3d08]
  408fac:	inc    ebx
  408fad:	mov    bl,0x36
  408faf:	data16 lods al,BYTE PTR ds:[esi]
  408fb1:	enter  0xd68,0x26
  408fb5:	retf   
  408fb6:	sahf   
  408fb7:	idiv   DWORD PTR [ebx-0x30b07735]
  408fbd:	cld    
  408fbe:	mov    WORD PTR [ebp+esi*2-0x7d71e39c],es
  408fc5:	out    dx,al
  408fc6:	clc    
  408fc7:	arpl   WORD PTR ss:[edi+edx*4-0x208aa37e],bx
  408fcf:	add    eax,0x9cc7d74c
  408fd4:	and    BYTE PTR [edi],bh
  408fd6:	fdiv   DWORD PTR [ebx-0x4228b0f8]
  408fdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fdd:	adc    ebx,DWORD PTR [edx-0x43ecff57]
  408fe3:	or     al,0x50
  408fe5:	push   ebp
  408fe6:	mov    esi,0x5ab9fe1c
  408feb:	mov    ?,WORD PTR [edi+0x1ac3594f]
  408ff1:	pop    ds
  408ff2:	dec    si
  408ff4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ff5:	lock idiv BYTE PTR [eax]
  408ff8:	mov    cs,WORD PTR [edx+edx*8]
  408ffb:	daa    
  408ffc:	fist   DWORD PTR [ebx+0x3c]
  408fff:	cmp    al,dh
  409001:	sar    BYTE PTR [ebx+0x47],1
  409004:	sub    BYTE PTR [edi+esi*4-0x2b21b980],al
  40900b:	inc    eax
  40900c:	mov    bh,BYTE PTR [esi+0x67525cfe]
  409012:	stc    
  409013:	and    ebx,ecx
  409015:	pop    ecx
  409016:	lods   eax,DWORD PTR ds:[esi]
  409017:	push   ecx
  409018:	test   DWORD PTR [ecx+0x29615d1b],ebx
  40901e:	sbb    DWORD PTR [eax-0x1b],ebp
  409021:	xchg   esp,eax
  409022:	xor    edi,DWORD PTR [edi+ebx*4]
  409025:	mov    eax,ds:0x60686cea
  40902a:	ret    
  40902b:	xor    eax,0x5450a82b
  409030:	ss mov ch,al
  409033:	loope  0x409024
  409035:	out    dx,al
  409036:	push   ss
  409037:	xor    esi,ecx
  409039:	xor    edi,esp
  40903b:	addr16 aam 0xb3
  40903e:	jae    0x408fe6
  409040:	clc    
  409041:	mov    ecx,ebx
  409043:	sbb    BYTE PTR [edi],0x27
  409046:	aaa    
  409047:	xor    eax,0x3297b1fe
  40904c:	add    BYTE PTR [esi+0x6a08bd54],0x2b
  409053:	pop    ebp
  409054:	rol    DWORD PTR ds:0x74ca9e62,cl
  40905a:	adc    bl,BYTE PTR ds:0x78812cfa
  409060:	sub    ecx,eax
  409062:	stc    
  409063:	les    edx,FWORD PTR [ebx-0x10ad5324]
  409069:	jbe    0x409054
  40906b:	xor    ebx,DWORD PTR [ebp+0x2a3067b7]
  409071:	push   edx
  409072:	mov    al,0xda
  409074:	xor    dh,BYTE PTR [ebp+0x44]
  409077:	not    DWORD PTR [edx]
  409079:	repnz xlat BYTE PTR ds:[ebx]
  40907b:	xchg   esp,eax
  40907c:	aas    
  40907d:	popa   
  40907e:	les    esi,FWORD PTR [esi-0x13f4f6f9]
  409084:	shl    bl,0x4d
  409087:	iret   
  409088:	and    BYTE PTR [edi+edx*1-0x54ebad43],0x10
  409090:	xchg   cl,dh
  409092:	pop    es
  409093:	pop    esp
  409094:	retf   
  409095:	mov    cl,0x45
  409097:	fisubr DWORD PTR [ebx+0x771b3308]
  40909d:	sbb    eax,0xe3e7c8fb
  4090a2:	cs cdq 
  4090a4:	jae    0x4090ca
  4090a6:	lods   al,BYTE PTR ds:[esi]
  4090a7:	mov    esi,DWORD PTR [ebp-0x1b]
  4090aa:	test   eax,0x3e21408
  4090af:	pop    esi
  4090b0:	xchg   esp,eax
  4090b1:	xlat   BYTE PTR ds:[ebx]
  4090b2:	push   es
  4090b3:	aaa    
  4090b4:	fdiv   QWORD PTR [eax+0x2a]
  4090b7:	jo     0x4090a5
  4090b9:	push   ss
  4090ba:	fcmovnbe st,st(1)
  4090bc:	fistp  QWORD PTR [ecx]
  4090be:	mov    ds:0xe021eeb5,al
  4090c3:	test   edx,ebx
  4090c5:	imul   ebp,DWORD PTR [esp+ebp*8-0x9],0xe07810dd
  4090cd:	loope  0x4090bb
  4090cf:	push   edi
  4090d0:	dec    eax
  4090d1:	push   ds
  4090d2:	xor    eax,0x199f5390
  4090d7:	jns    0x4090f0
  4090d9:	ffreep st(7)
  4090db:	test   al,0x2
  4090dd:	dec    ecx
  4090de:	je     0x4090af
  4090e0:	jne    0x409139
  4090e2:	(bad)  
  4090e3:	out    0xca,al
  4090e5:	add    ebx,DWORD PTR [ecx]
  4090e7:	mov    bh,0x75
  4090e9:	xchg   esi,eax
  4090ea:	repz sub eax,0x904a9cf
  4090f0:	xchg   ebp,eax
  4090f1:	rcl    DWORD PTR [ebp+esi*1-0x6e],0x8a
  4090f6:	lods   al,BYTE PTR ds:[esi]
  4090f7:	fldcw  WORD PTR [ebx-0x77]
  4090fa:	sbb    eax,0x396ecb85
  4090ff:	pop    ds
  409100:	cmp    al,0xb1
  409103:	mov    ch,0x41
  409105:	dec    ebx
  409106:	idiv   DWORD PTR [edi-0x402e7557]
  40910c:	lahf   
  40910d:	fwait
  40910e:	daa    
  40910f:	xor    ebp,edi
  409111:	jmp    0x409166
  409113:	cmc    
  409114:	xchg   ebp,eax
  409115:	fsub   st,st(3)
  409118:	fcmovbe st,st(6)
  40911a:	popa   
  40911b:	cmp    bl,ah
  40911d:	popf   
  40911e:	inc    ebp
  40911f:	jae    0x409164
  409121:	jae    0x40916d
  409123:	cmc    
  409124:	outs   dx,DWORD PTR ds:[esi]
  409125:	mov    WORD PTR [edx-0x5e],fs
  409128:	mov    esi,?
  40912a:	sbb    BYTE PTR cs:[ecx-0x1e],dl
  40912e:	jno    0x409158
  409130:	push   edx
  409131:	inc    edx
  409132:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409133:	aam    0xdd
  409135:	data16 fwait
  409137:	popf   
  409138:	(bad)  
  409139:	mov    bl,0xaa
  40913b:	and    eax,0x302796ff
  409140:	loop   0x4091bb
  409142:	mov    BYTE PTR [esi+ebx*2-0x12],dh
  409146:	leave  
  409147:	dec    edx
  409148:	icebp  
  409149:	es mov ah,0x10
  40914c:	push   es
  40914d:	call   0x7509:0xabd30f24
  409154:	jl     0x4091d3
  409156:	dec    edi
  409157:	std    
  409158:	jne    0x4091a6
  40915a:	cld    
  40915b:	mov    dh,0xc4
  40915d:	mov    bl,0x11
  40915f:	xor    esi,0x4a
  409162:	in     eax,0xde
  409164:	sbb    dh,BYTE PTR [esi]
  409166:	sub    eax,0xdc0ee83a
  40916b:	imul   edi,ebp,0x11
  40916e:	in     eax,dx
  40916f:	outs   dx,BYTE PTR ds:[esi]
  409170:	clc    
  409171:	test   eax,0x989ab512
  409176:	xchg   ebp,eax
  409177:	push   ss
  409178:	and    DWORD PTR [edi],ebx
  40917a:	mov    ch,0x25
  40917c:	lahf   
  40917d:	push   esp
  40917e:	(bad)  
  40917f:	or     dl,BYTE PTR [ecx]
  409181:	scas   eax,DWORD PTR es:[edi]
  409182:	sbb    al,cl
  409184:	or     DWORD PTR [ebx],0x10
  409187:	neg    BYTE PTR [eax+esi*8-0x50]
  40918b:	fld    st(5)
  40918d:	and    bl,BYTE PTR [edx]
  40918f:	pop    edx
  409190:	mov    edi,0x9364787c
  409195:	mov    esi,DWORD PTR [ebx+0x25]
  409198:	icebp  
  409199:	mov    BYTE PTR [esp+eiz*8-0x4c],0x10
  40919e:	mov    ebp,DWORD PTR ds:0xb5f27154
  4091a4:	test   bh,al
  4091a6:	xchg   esi,eax
  4091a7:	pop    esi
  4091a8:	lea    edx,[eax+0xc43aa4a]
  4091ae:	retf   0xe387
  4091b1:	jl     0x409202
  4091b3:	lea    ebp,[eax+0x4c1193]
  4091b9:	in     eax,dx
  4091ba:	addr16 dec ebx
  4091bc:	add    eax,0x93594868
  4091c1:	aas    
  4091c2:	add    DWORD PTR [ebx-0x11404480],eax
  4091c8:	loopne 0x4091a9
  4091ca:	(bad)  
  4091cb:	fcomp  QWORD PTR [ecx+0x6c745ff9]
  4091d1:	push   0xffffff9b
  4091d3:	retf   0x2a5c
  4091d6:	les    ecx,FWORD PTR ss:[edi-0x59]
  4091da:	or     al,0xcf
  4091dc:	mov    ah,0xef
  4091de:	dec    ecx
  4091df:	cdq    
  4091e0:	loope  0x40918d
  4091e2:	inc    edx
  4091e3:	sti    
  4091e4:	jge    0x4091d4
  4091e6:	in     eax,dx
  4091e7:	cli    
  4091e8:	repnz aas 
  4091ea:	iret   
  4091eb:	add    ebp,DWORD PTR [esi-0x1]
  4091ee:	xor    DWORD PTR [eax],esi
  4091f0:	pop    es
  4091f1:	(bad)  
  4091f2:	(bad)  
  4091f3:	mov    ch,0xbd
  4091f5:	out    dx,eax
  4091f6:	addr16 cdq 
  4091f8:	sbb    edx,DWORD PTR [eax+0x1ac48bdd]
  4091fe:	pop    eax
  4091ff:	shl    BYTE PTR [ecx],1
  409201:	out    dx,al
  409202:	xchg   edx,eax
  409203:	mov    eax,0x900ffc36
  409208:	or     BYTE PTR [ebx+edx*4+0x5ee29f7c],al
  40920f:	jg     0x40919d
  409211:	cwde   
  409212:	pop    edi
  409213:	xor    DWORD PTR [esi],esi
  409215:	or     BYTE PTR [esp+ebx*2],bh
  409218:	mov    ch,0x90
  40921a:	inc    esp
  40921b:	lea    ecx,[eax-0x6ab158cb]
  409221:	adc    BYTE PTR [edx],dh
  409223:	repz xor DWORD PTR [edx],ebx
  409226:	popf   
  409227:	inc    ebp
  409228:	adc    DWORD PTR [ebx],ebp
  40922a:	xchg   eax,eax
  40922c:	xchg   esi,eax
  40922d:	inc    esi
  40922e:	cmp    edx,edx
  409230:	inc    ecx
  409231:	scas   eax,DWORD PTR es:[edi]
  409232:	push   0x4a037674
  409237:	into   
  409238:	enter  0x3d13,0x66
  40923c:	xchg   BYTE PTR [esi-0x67a632a7],ch
  409242:	inc    ebx
  409243:	loopne 0x409225
  409245:	popf   
  409246:	add    edi,DWORD PTR [edi+0x72ff0186]
  40924c:	xor    al,0x19
  40924e:	mov    esi,0x52a07797
  409253:	jmp    0x856df5d
  409258:	cmp    al,0x6f
  40925a:	jne    0x4092cb
  40925c:	adc    DWORD PTR [eax+0x46],edi
  40925f:	mov    edi,0xcead4b4f
  409264:	ds aaa 
  409266:	xchg   ebp,eax
  409267:	push   ebx
  409268:	mov    al,ds:0x964f4629
  40926d:	fs inc ebp
  40926f:	aas    
  409270:	lods   eax,DWORD PTR ds:[esi]
  409271:	sub    eax,0xec6c8e18
  409276:	mov    esi,0xa238dfd5
  40927b:	in     al,dx
  40927c:	pushf  
  40927d:	pop    ss
  40927e:	or     al,0xdc
  409280:	cmp    ah,BYTE PTR [edx-0x1b]
  409283:	mov    dl,0x78
  409285:	pop    eax
  409286:	nop
  409287:	or     bl,BYTE PTR [ebp-0x52]
  40928a:	mov    ecx,0x363fda89
  40928f:	sar    DWORD PTR [ecx+0x5428a9a5],cl
  409295:	mov    edi,0xc012d1fc
  40929a:	ja     0x409229
  40929c:	add    esp,DWORD PTR ds:0xf95246ec
  4092a2:	mov    dh,ah
  4092a4:	std    
  4092a5:	cmp    BYTE PTR [edx],bl
  4092a7:	sub    eax,0x2a7b2499
  4092ac:	mov    esi,0xae3b5961
  4092b1:	stc    
  4092b2:	cdq    
  4092b3:	or     dl,cl
  4092b5:	mov    edx,0xd9a822fb
  4092ba:	mov    edi,0x847dcd9e
  4092bf:	jle    0x4092e7
  4092c1:	cmp    BYTE PTR [ecx+0x68],bl
  4092c4:	adc    al,0xbf
  4092c6:	mov    cl,0x9e
  4092c8:	retf   
  4092c9:	sbb    ch,dl
  4092cb:	js     0x4092f2
  4092cd:	mov    ecx,DWORD PTR [ebx-0x4c]
  4092d0:	repz imul ecx,DWORD PTR [eax],0xc165d3bf
  4092d7:	repz pusha 
  4092d9:	xor    eax,0x5cc31eb8
  4092de:	std    
  4092df:	dec    edi
  4092e0:	adc    ah,BYTE PTR [ebx]
  4092e2:	or     eax,0xefd9e2a8
  4092e7:	push   cs
  4092e8:	loope  0x409308
  4092ea:	shr    DWORD PTR [edi+ebx*8-0x3c8ee2cf],0xc
  4092f2:	inc    esi
  4092f3:	bound  esi,QWORD PTR [eax]
  4092f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092f6:	inc    esp
  4092f7:	fstp   DWORD PTR [esi+0x34dafd7]
  4092fd:	retf   
  4092fe:	jmp    FWORD PTR [ebx-0x528ce1c1]
  409304:	cdq    
  409305:	popa   
  409306:	cmp    ecx,esi
  409308:	sbb    BYTE PTR ds:0x10a17222,bh
  40930e:	pop    es
  40930f:	mov    al,0x6b
  409311:	inc    edi
  409312:	repnz cwde 
  409314:	mov    eax,DWORD PTR [edx-0x69b2d198]
  40931a:	out    dx,eax
  40931b:	call   0x46f5:0x62d3ec93
  409322:	cld    
  409323:	lahf   
  409324:	loop   0x40937d
  409326:	pop    edi
  409327:	xchg   edx,eax
  409328:	test   DWORD PTR [esi],ecx
  40932a:	pop    es
  40932b:	(bad)  
  40932c:	sub    edx,ebx
  40932e:	push   eax
  40932f:	pop    edx
  409330:	fidiv  WORD PTR [ebx+0x49cb219a]
  409336:	or     bl,0xb4
  409339:	out    0x20,al
  40933b:	fld    TBYTE PTR [esi]
  40933d:	and    esp,ebx
  40933f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409340:	and    esp,eax
  409342:	call   0x8fc6:0xfe3ce4bc
  409349:	adc    esp,DWORD PTR [edx]
  40934b:	les    ebp,FWORD PTR [eax]
  40934d:	mov    eax,0x5bff9e68
  409353:	jno    0x409383
  409355:	push   ss
  409356:	leave  
  409357:	and    esi,edi
  409359:	sti    
  40935a:	test   eax,0x9cc432ba
  40935f:	or     dl,bh
  409361:	data16 or ah,BYTE PTR [eax+0x1d]
  409365:	mov    BYTE PTR [ebx+ecx*2-0x44],bh
  409369:	retf   
  40936a:	rcr    BYTE PTR [edx-0x2140a86],cl
  409370:	jmp    0x4ba1e44
  409375:	(bad)  
  409376:	icebp  
  409377:	mov    al,0x28
  409379:	(bad)  
  40937a:	mov    dl,0xe9
  40937c:	inc    esi
  40937d:	xchg   esi,eax
  40937e:	inc    edx
  40937f:	and    eax,0xe3877370
  409384:	iret   
  409385:	dec    ebx
  409386:	sbb    eax,0x975648fd
  40938b:	aad    0x58
  40938d:	jecxz  0x409343
  40938f:	jmp    0x40932a
  409391:	mov    al,ds:0xb7ebf0fe
  409396:	mov    fs,edx
  409398:	xchg   DWORD PTR [ecx],ecx
  40939a:	in     eax,0x4b
  40939c:	cli    
  40939d:	mov    al,0xd1
  40939f:	(bad)  
  4093a0:	into   
  4093a1:	xor    ch,bl
  4093a3:	dec    esi
  4093a4:	mov    edx,DWORD PTR [eax]
  4093a6:	and    al,0x4b
  4093a8:	data16 jle 0x409362
  4093ab:	addr16 add eax,0xd3759a22
  4093b1:	ror    DWORD PTR [edx+0x26],0x6e
  4093b5:	xchg   esi,eax
  4093b6:	xchg   edx,eax
  4093b7:	sbb    eax,0x156232e3
  4093bc:	jbe    0x409392
  4093be:	and    eax,0x4ca8d65f
  4093c3:	cmp    DWORD PTR [edi+0x4b23321e],eax
  4093c9:	mov    dh,0x3
  4093cb:	sub    al,0xc2
  4093cd:	pop    ds
  4093ce:	push   es
  4093cf:	bound  edi,QWORD PTR [ecx+0x2]
  4093d2:	ds mov bh,0xab
  4093d5:	lahf   
  4093d6:	cmp    ebp,DWORD PTR [edx]
  4093d8:	call   0xbcda93b
  4093dd:	sub    BYTE PTR [esi+ecx*8+0x49],ch
  4093e1:	ror    BYTE PTR [ebx],0x45
  4093e4:	(bad)  
  4093e5:	xor    eax,ebx
  4093e7:	xchg   DWORD PTR [edx],ebx
  4093e9:	sub    DWORD PTR [edi-0x4214af3e],eax
  4093ef:	and    DWORD PTR [eax+0x6e],ebx
  4093f2:	mov    ebx,0x47c07b0d
  4093f7:	dec    ebp
  4093f8:	dec    ebp
  4093f9:	sub    esi,DWORD PTR [ecx+eiz*1]
  4093fc:	ja     0x4093ee
  4093fe:	xchg   ecx,eax
  4093ff:	and    DWORD PTR [esi-0x614b7e5],0x56e351a
  409409:	fist   DWORD PTR [eax]
  40940b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40940c:	push   0x29
  40940e:	pop    ss
  40940f:	retf   
  409410:	dec    esi
  409411:	pop    edx
  409412:	jo     0x4093ab
  409414:	cmc    
  409415:	(bad)  
  409416:	mov    cr7,edx
  409419:	mov    edi,0xd67caf63
  40941e:	mov    ebp,0xd57fb218
  409423:	shl    DWORD PTR [eax],cl
  409425:	cmp    bh,BYTE PTR [esi-0x6e]
  409428:	retf   
  409429:	iret   
  40942a:	mov    edi,0xc4373a2c
  40942f:	inc    esp
  409430:	imul   ecx,DWORD PTR [eax+0x7f948faf],0x891458eb
  40943a:	mov    ds:0xe835eb99,al
  40943f:	lea    ecx,[ecx-0x4]
  409442:	or     ebx,eax
  409444:	pusha  
  409445:	inc    ecx
  409446:	cmp    eax,0x239882c4
  40944b:	add    BYTE PTR [ecx],0xc1
  40944e:	test   ebx,eax
  409450:	jp     0x409417
  409452:	jmp    0x5b65:0xf142b224
  409459:	xor    edi,DWORD PTR [edi]
  40945b:	pop    ebp
  40945c:	sbb    al,0xa0
  40945e:	and    dl,BYTE PTR [edi]
  409460:	test   al,0x3e
  409462:	add    dl,BYTE PTR [ebx+0x662242f7]
  409468:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409469:	lahf   
  40946a:	mov    al,0x8
  40946c:	xor    esp,DWORD PTR [ecx+ebx*8-0x4e]
  409470:	jmp    0x718c:0x6b50ccb8
  409477:	jo     0x4094e4
  409479:	in     al,dx
  40947a:	ret    
  40947b:	push   0xffffffde
  40947d:	add    al,bh
  40947f:	cmc    
  409480:	aas    
  409481:	push   eax
  409482:	sub    BYTE PTR [edx+0x3c848666],ah
  409488:	xor    edi,DWORD PTR [eax]
  40948a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40948b:	xchg   ebx,eax
  40948c:	sti    
  40948d:	mov    ebx,DWORD PTR [ecx-0x4df7dc70]
  409493:	cmp    dh,0x70
  409496:	daa    
  409497:	adc    bh,al
  409499:	dec    esi
  40949a:	jl     0x409422
  40949c:	out    0x9c,al
  40949e:	sbb    DWORD PTR [edx-0x28],esi
  4094a1:	xchg   edx,eax
  4094a2:	ret    0x5ca3
  4094a5:	in     al,dx
  4094a6:	fistp  WORD PTR [edi+ebp*4-0x19ea3311]
  4094ad:	shl    BYTE PTR [ecx],cl
  4094af:	jg     0x40949e
  4094b1:	loopne 0x4094af
  4094b3:	dec    esp
  4094b4:	pop    ds
  4094b5:	sbb    al,0x5a
  4094b7:	icebp  
  4094b8:	xchg   DWORD PTR [ebp+0x71],ebx
  4094bb:	hlt    
  4094bc:	xchg   BYTE PTR [ebx+0x7785fb16],bl
  4094c2:	fcom   QWORD PTR ds:0xc9bc41d1
  4094c8:	mov    bh,0x8a
  4094ca:	out    dx,eax
  4094cb:	in     al,dx
  4094cc:	mov    ds:0xdd3c1ef,eax
  4094d1:	std    
  4094d2:	hlt    
  4094d3:	mov    edx,0xc5bbc305
  4094d8:	cmp    dl,ch
  4094da:	sbb    al,0xce
  4094dc:	sbb    al,0x89
  4094de:	sub    al,0x20
  4094e0:	and    DWORD PTR [ebp+0x58],ebp
  4094e3:	dec    ebp
  4094e4:	jne    0x409514
  4094e6:	sar    DWORD PTR [ecx],0x44
  4094e9:	int    0xb9
  4094eb:	jecxz  0x40950c
  4094ed:	jmp    FWORD PTR [ecx+0x51dcadc5]
  4094f3:	addr16 test eax,0x265f836f
  4094f9:	mov    WORD PTR [esi+eiz*2],?
  4094fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094fd:	js     0x409480
  4094ff:	inc    edi
  409500:	or     al,0x8d
  409502:	stc    
  409503:	and    DWORD PTR [ebp-0x2a],esp
  409506:	push   ecx
  409507:	adc    al,0xac
  409509:	xor    DWORD PTR [ebp+0x56],eax
  40950c:	(bad)
  40950f:	pop    ds
  409510:	push   ss
  409511:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409512:	jb     0x4094aa
  409514:	inc    esp
  409515:	and    DWORD PTR [ebx],ebp
  409517:	xchg   BYTE PTR es:[ecx-0x6c],ah
  40951b:	xchg   ebx,eax
  40951c:	mov    ebx,edi
  40951e:	push   edx
  40951f:	retf   0xba61
  409522:	inc    edi
  409523:	pusha  
  409524:	loopne 0x4094a6
  409526:	ds adc al,0xc1
  409529:	adc    eax,0xb3b216f
  40952e:	and    dl,bl
  409530:	pushf  
  409531:	in     eax,0x67
  409533:	xor    eax,DWORD PTR [ebp+0x5b37925e]
  409539:	jns    0x40958c
  40953b:	jns    0x4095a7
  40953d:	ficom  WORD PTR [ecx]
  40953f:	mov    ch,0xe3
  409541:	fld    QWORD PTR [edx]
  409543:	cmp    DWORD PTR [ebp-0x7fbcb42c],edi
  409549:	adc    DWORD PTR [edi+eiz*2-0x3d],edx
  40954d:	imul   ebp,ebp,0xffffffcf
  409550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409551:	cld    
  409552:	xor    BYTE PTR [edi-0x1f9f1fdb],ch
  409558:	mov    esp,0x191b9171
  40955d:	fst    st(0)
  40955f:	ror    BYTE PTR [esi-0x7eb473cd],1
  409565:	int    0xf7
  409567:	mov    esi,0xd351333b
  40956c:	fist   DWORD PTR [ebp+0x400b8a9a]
  409572:	push   esp
  409573:	cmp    edi,edx
  409575:	push   es
  409576:	(bad)  
  409577:	push   esi
  409578:	mov    ah,0xdd
  40957a:	dec    eax
  40957b:	(bad)  
  40957c:	jae    0x40950e
  40957e:	xor    DWORD PTR [eax],ebx
  409580:	jne    0x40953e
  409582:	and    eax,0xfeee2aef
  409587:	test   edi,esi
  409589:	ret    
  40958a:	sub    al,0x4c
  40958c:	ror    DWORD PTR [ebx+0x26a8195a],1
  409592:	push   ebx
  409593:	cmc    
  409594:	inc    ebx
  409595:	popa   
  409596:	aas    
  409597:	jns    0x409552
  409599:	cmp    eax,0x1afe9a41
  40959f:	into   
  4095a0:	call   0x8e55e356
  4095a5:	cmp    DWORD PTR [edx-0x2d932ea7],esi
  4095ab:	shl    BYTE PTR [esi],0xef
  4095ae:	rol    ah,cl
  4095b0:	addr16 cli 
  4095b2:	adc    eax,0xfb4b6a0c
  4095b7:	dec    esp
  4095b8:	test   eax,0x34effb61
  4095bd:	call   0x43695441
  4095c2:	jmp    0x4095c2
  4095c4:	sbb    dh,BYTE PTR [esi+0x9]
  4095c7:	sbb    ebp,DWORD PTR [ebx]
  4095c9:	push   0xc3706b94
  4095ce:	lods   eax,DWORD PTR ds:[esi]
  4095cf:	out    dx,al
  4095d0:	pop    eax
  4095d1:	retf   
  4095d2:	inc    esi
  4095d3:	pop    ss
  4095d4:	int    0xe2
  4095d6:	test   BYTE PTR [edi-0x27],0xa5
  4095da:	dec    edx
  4095db:	or     eax,0xbc94608c
  4095e0:	mov    ebx,0x586ee7f8
  4095e5:	cmp    edi,eax
  4095e7:	lods   al,BYTE PTR ds:[esi]
  4095e8:	jns    0x409653
  4095ea:	(bad)  
  4095eb:	add    DWORD PTR [esi-0x13],ebp
  4095ee:	dec    ecx
  4095ef:	xor    al,0xd
  4095f1:	lods   al,BYTE PTR ds:[esi]
  4095f2:	(bad)  
  4095f3:	loop   0x40965f
  4095f5:	jge    0x40957f
  4095f7:	fsubr  QWORD PTR [ebx+0x1914c684]
  4095fd:	(bad)  
  4095fe:	jge    0x409588
  409600:	inc    ebx
  409601:	dec    DWORD PTR [eax]
  409603:	ds imul esp,eax,0xc2dab074
  40960a:	loope  0x4095cc
  40960c:	xchg   ecx,eax
  40960d:	cmp    DWORD PTR [eax],esp
  40960f:	adc    esp,DWORD PTR [esi-0x14]
  409612:	xchg   esp,eax
  409613:	add    bl,BYTE PTR [esi-0x7928d61d]
  409619:	add    esi,eax
  40961b:	xchg   BYTE PTR [ebx],dl
  40961d:	inc    ebx
  40961e:	cs jbe 0x4095cc
  409621:	das    
  409622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409623:	mov    edi,0xff22a12d
  409628:	pop    edx
  409629:	mov    edx,0x74f9d389
  40962e:	mov    ch,0x1e
  409630:	jne    0x4095ca
  409632:	test   al,0x4
  409634:	sub    dl,bh
  409636:	mov    ecx,0xa5e4c32a
  40963b:	cdq    
  40963c:	enter  0xe229,0xc5
  409640:	mov    bh,0xff
  409642:	and    eax,0xb5c8aafc
  409647:	sbb    al,0xa0
  409649:	stos   BYTE PTR es:[edi],al
  40964a:	ss ins DWORD PTR es:[edi],dx
  40964c:	push   ds
  40964d:	add    eax,0xc9424c7d
  409652:	mov    dl,0x9c
  409654:	dec    esp
  409655:	out    dx,al
  409656:	loopne 0x4095f2
  409658:	ja     0x40965f
  40965a:	loopne 0x4096a5
  40965c:	repz call 0xc93c91cc
  409662:	xor    dh,ah
  409664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409665:	in     al,0xda
  409667:	ds je  0x4095f2
  40966a:	int    0x29
  40966c:	lods   al,BYTE PTR ds:[esi]
  40966d:	out    0x86,eax
  40966f:	sub    esp,DWORD PTR [edx]
  409671:	pushf  
  409672:	and    bl,BYTE PTR [esp+eax*4-0x4b]
  409676:	outs   dx,BYTE PTR ds:[esi]
  409677:	fsub   st(5),st
  409679:	jmp    0xdf73:0xc9e0094c
  409680:	push   esi
  409681:	fldenv [eax+0x6f]
  409684:	xlat   BYTE PTR ds:[ebx]
  409685:	lock es xchg esi,eax
  409688:	hlt    
  409689:	cmp    edi,edi
  40968b:	jns    0x40962e
  40968d:	xchg   edi,eax
  40968e:	dec    ebp
  40968f:	sbb    ebx,DWORD PTR [edi-0x2f]
  409692:	leave  
  409693:	adc    ecx,eax
  409695:	mov    ch,0x61
  409697:	lds    ecx,FWORD PTR [eax-0x3aab1b09]
  40969d:	inc    ebp
  40969e:	imul   eax,DWORD PTR [ecx+0x4d],0xef61a9da
  4096a5:	imul   ebx,DWORD PTR [ecx-0x79],0xec5c03d8
  4096ac:	out    0x13,eax
  4096ae:	mov    ds:0xbcd8993a,al
  4096b3:	loopne 0x4096f2
  4096b5:	or     bh,ch
  4096b7:	and    DWORD PTR [ebx+0x3f],ebx
  4096ba:	jmp    0x1b1a6fce
  4096bf:	mov    BYTE PTR [edi],ah
  4096c1:	add    al,0x15
  4096c3:	in     al,dx
  4096c4:	jecxz  0x4096e7
  4096c6:	sub    dl,0x2d
  4096c9:	into   
  4096ca:	or     al,BYTE PTR ds:0x9eeb921d
  4096d0:	lahf   
  4096d1:	sub    BYTE PTR [ecx+0x4e958b91],bh
  4096d7:	test   al,0x1a
  4096d9:	(bad)  
  4096da:	mov    ebp,0x53fe8db0
  4096df:	cmp    ebp,esp
  4096e1:	ja     0x4096cc
  4096e3:	lods   al,BYTE PTR ds:[esi]
  4096e4:	mov    DWORD PTR [eax+0x379cfe83],ecx
  4096ea:	or     DWORD PTR [ebp+ebx*1-0x178cbd32],ebp
  4096f1:	fwait
  4096f2:	or     ah,BYTE PTR ds:0x47971298
  4096f8:	jns    0x409736
  4096fa:	mov    ecx,eax
  4096fc:	sub    al,0x20
  4096fe:	ror    ecx,cl
  409700:	cmp    al,0x2b
  409702:	sub    BYTE PTR [ebx-0x52],0x1d
  409706:	xchg   esp,eax
  409707:	xlat   BYTE PTR ds:[ebx]
  409708:	test   DWORD PTR [eax-0x473e4cb7],edx
  40970e:	das    
  40970f:	lahf   
  409710:	cmc    
  409711:	dec    ecx
  409712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409713:	jmp    0x1fc4:0xacc8c595
  40971a:	out    0x4e,eax
  40971c:	mov    WORD PTR [eax+0x52cdab23],?
  409722:	out    0xea,eax
  409724:	repnz mul BYTE PTR [ebx-0x7672942c]
  40972b:	dec    esp
  40972c:	data16 and al,al
  40972f:	pop    edx
  409730:	aam    0x3a
  409732:	push   ecx
  409733:	push   0xebc8726f
  409738:	fs and ebp,edi
  40973b:	adc    eax,0xe5d89f91
  409740:	scas   al,BYTE PTR es:[edi]
  409741:	dec    eax
  409742:	jae    0x4096cb
  409744:	das    
  409745:	int    0xab
  409747:	ror    BYTE PTR [edx+ecx*2-0x733c0020],1
  40974e:	shl    BYTE PTR [ebp+0x38],0x5c
  409752:	and    ebx,ebx
  409754:	aad    0x5f
  409756:	es enter 0xb48e,0x2d
  40975b:	pusha  
  40975c:	sbb    ecx,DWORD PTR [ebx]
  40975e:	test   al,0x92
  409760:	sbb    DWORD PTR [edi+0x5a],edi
  409763:	sahf   
  409764:	and    eax,0x52b8cf0
  409769:	aas    
  40976a:	add    DWORD PTR [eax+0x7c],edx
  40976d:	into   
  40976e:	xchg   edi,eax
  40976f:	loopne 0x409781
  409771:	loopne 0x409705
  409773:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409774:	iret   
  409775:	es sbb al,0x8b
  409778:	mov    bh,0x21
  40977a:	sar    DWORD PTR [ebx-0x5c],1
  40977d:	ret    
  40977e:	in     al,dx
  40977f:	push   edx
  409780:	call   0x7844bf59
  409785:	mov    dl,0xd4
  409787:	fdiv   DWORD PTR [eax-0x6cdb1191]
  40978d:	sar    DWORD PTR [ebp+eiz*1-0x2e9e21a7],cl
  409794:	(bad)  
  409795:	and    edx,DWORD PTR [ecx-0xd]
  409798:	gs jl  0x4097b0
  40979b:	std    
  40979c:	fs hlt 
  40979e:	inc    ecx
  40979f:	push   es
  4097a0:	stos   BYTE PTR es:[edi],al
  4097a1:	mov    ebx,edx
  4097a3:	aaa    
  4097a4:	fild   DWORD PTR [edi+0x7]
  4097a7:	lods   al,BYTE PTR ds:[esi]
  4097a8:	dec    ecx
  4097a9:	add    BYTE PTR [ebx],dh
  4097ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097ac:	push   ebp
  4097ad:	or     al,0x21
  4097af:	xchg   esp,eax
  4097b0:	fidivr WORD PTR [edx+0x3a91f835]
  4097b6:	int    0xe9
  4097b8:	and    eax,0x5a539be9
  4097bd:	cmp    esp,eax
  4097bf:	xor    BYTE PTR [esi+0x60a93125],dh
  4097c5:	push   0xffffffa0
  4097c7:	sub    edi,DWORD PTR [eax+0x2e]
  4097ca:	ss stos BYTE PTR es:[edi],al
  4097cc:	mov    esi,0xf9885231
  4097d1:	outs   dx,DWORD PTR ds:[esi]
  4097d2:	cmp    BYTE PTR [ecx],ch
  4097d4:	repnz cwde 
  4097d6:	pop    esp
  4097d7:	push   0x1dd1c890
  4097dc:	add    eax,0x26a129de
  4097e1:	push   es
  4097e2:	sub    BYTE PTR [ebp+0x6a],bl
  4097e5:	xchg   esp,eax
  4097e6:	dec    ebx
  4097e7:	sti    
  4097e8:	xchg   ecx,eax
  4097e9:	mov    al,ds:0x781dfd98
  4097ee:	test   BYTE PTR [esi],0x88
  4097f1:	fmul   QWORD PTR [ebx-0x4]
  4097f4:	add    eax,DWORD PTR [eax+0x55a85178]
  4097fa:	pop    ebx
  4097fb:	jp     0x4097e4
  4097fd:	shr    BYTE PTR [edx+0x60],0x68
  409801:	push   edx
  409802:	lea    edx,[edi+ebp*8+0xe]
  409806:	dec    edi
  409807:	frstor [ecx+0x77430bc1]
  40980d:	popf   
  40980e:	xchg   DWORD PTR [edx+ecx*2+0x42968ab7],esp
  409815:	pop    ebx
  409816:	dec    esp
  409817:	adc    al,0x5e
  409819:	adc    ebx,DWORD PTR [ebx-0x4b]
  40981c:	out    dx,eax
  40981d:	ret    
  40981e:	popf   
  40981f:	fld    QWORD PTR [edx+0x5dfa2171]
  409825:	pop    ebx
  409826:	mov    eax,ds:0x5d9780e3
  40982b:	mov    al,dl
  40982d:	add    eax,0xa0f51371
  409832:	mov    ebx,0x93be01d7
  409837:	mov    ebp,DWORD PTR [ebp-0x38576952]
  40983d:	push   es
  40983e:	xchg   ebp,eax
  40983f:	push   edi
  409840:	dec    si
  409842:	jne    0x4097ec
  409844:	mov    bh,0x44
  409846:	mov    ds,WORD PTR [edx-0x39]
  409849:	fs jo  0x409854
  40984c:	xor    ebp,edi
  40984e:	arpl   bp,sp
  409850:	jns    0x4097ff
  409852:	out    0xf,eax
  409854:	xor    al,BYTE PTR [ecx-0x70a74049]
  40985a:	rcl    DWORD PTR [eax-0x1b],0xa4
  40985e:	retf   0xf99
  409861:	push   esp
  409862:	fcom   QWORD PTR [ebx]
  409864:	out    0x98,eax
  409866:	xchg   esi,eax
  409867:	jp     0x4098da
  409869:	lds    ecx,FWORD PTR ds:0x1ccac669
  40986f:	pop    ss
  409870:	rsm    
  409872:	nop
  409873:	cmp    al,0xff
  409875:	dec    esi
  409876:	mov    eax,ds:0xf81a0da9
  40987b:	(bad)  
  40987e:	and    al,0x14
  409880:	iret   
  409881:	sbb    ax,WORD PTR [ecx-0x4c605e83]
  409888:	sbb    BYTE PTR [edx-0x1c631458],dh
  40988e:	and    eax,esi
  409890:	xchg   edi,eax
  409891:	cmp    esp,DWORD PTR [esi-0x293c80ed]
  409897:	cmp    al,0x91
  409899:	inc    ecx
  40989a:	fdiv   QWORD PTR [eax+esi*1]
  40989d:	jmp    0x409900
  40989f:	rol    ebx,1
  4098a1:	mov    ds:0x5d39593d,al
  4098a6:	cmp    esi,ebx
  4098a8:	les    esp,FWORD PTR [ebx-0x337cb90e]
  4098ae:	push   DWORD PTR [ecx]
  4098b0:	lea    esp,[ebx+0x2885d5bc]
  4098b6:	outs   dx,DWORD PTR ds:[esi]
  4098b7:	xchg   edx,eax
  4098b8:	mov    WORD PTR [edi-0x14],gs
  4098bb:	in     eax,0x9a
  4098bd:	xor    dl,ch
  4098bf:	push   ebp
  4098c0:	out    0x63,al
  4098c2:	xchg   edi,eax
  4098c3:	fwait
  4098c4:	clc    
  4098c5:	xlat   BYTE PTR ds:[ebx]
  4098c6:	cld    
  4098c7:	pop    ds
  4098c8:	jae    0x409886
  4098ca:	xor    eax,0x511e73df
  4098cf:	in     eax,0x70
  4098d1:	test   eax,0xfc62d508
  4098d6:	adc    al,0x67
  4098d8:	pushf  
  4098d9:	mov    esi,0xcf024b79
  4098de:	jae    0x4098f0
  4098e0:	push   0xffffffe0
  4098e2:	adc    BYTE PTR [esi-0xc353e4b],0xd4
  4098e9:	mov    DWORD PTR [ecx+ebp*4-0x1188dd2f],esi
  4098f0:	lahf   
  4098f1:	jmp    0x9f9:0x27b34ea9
  4098f8:	mov    WORD PTR [ebx],es
  4098fa:	mov    bh,0xa9
  4098fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098fd:	lds    ecx,FWORD PTR [ecx]
  4098ff:	or     ecx,DWORD PTR [eax]
  409901:	jne    0x4098c0
  409903:	xchg   edx,eax
  409904:	and    DWORD PTR [esi+0x36d7cccd],0xef0eeb55
  40990e:	mov    ?,ecx
  409910:	fwait
  409911:	pop    ecx
  409912:	add    DWORD PTR [edx-0x22],edi
  409915:	ins    BYTE PTR es:[edi],dx
  409916:	xor    ah,BYTE PTR [edx+esi*4-0x3a3af3d6]
  40991d:	iret   
  40991e:	push   edi
  40991f:	ins    BYTE PTR es:[edi],dx
  409920:	sti    
  409921:	push   ebp
  409922:	stos   BYTE PTR es:[edi],al
  409923:	add    cl,BYTE PTR [ecx-0x6b]
  409926:	cld    
  409927:	pop    ebp
  409928:	iret   
  409929:	(bad)  
  40992a:	xchg   edi,eax
  40992b:	into   
  40992c:	adc    ecx,DWORD PTR [esp+edx*4-0x67]
  409930:	retf   
  409931:	pop    ss
  409932:	pop    dx
  409934:	add    bh,BYTE PTR [eax]
  409936:	jp     0x409944
  409938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409939:	inc    esi
  40993a:	push   edx
  40993b:	inc    edi
  40993c:	ror    ch,cl
  40993e:	xor    eax,0xf482f95a
  409943:	shr    BYTE PTR [edx+0x57],1
  409946:	ds jns 0x4099a6
  409949:	inc    edx
  40994a:	mov    WORD PTR [esi+0x19],ds
  40994d:	rcl    DWORD PTR [esi+0x7f],cl
  409950:	jnp    0x409958
  409952:	ret    
  409953:	lds    esi,FWORD PTR [esi-0xc]
  409956:	sub    BYTE PTR [ebx-0x7d5d36d9],bl
  40995c:	xor    DWORD PTR [esi+ecx*8-0x38],ebx
  409960:	xchg   ebx,eax
  409961:	push   ds
  409962:	cmp    esi,DWORD PTR [edx+eiz*1+0x37]
  409966:	loope  0x4099b2
  409968:	push   esp
  409969:	retf   0x58a
  40996c:	aas    
  40996d:	test   eax,0x86116ec5
  409972:	mov    bh,0x9a
  409974:	lahf   
  409975:	dec    edx
  409976:	xor    al,0x3a
  409978:	inc    edx
  409979:	sbb    esp,DWORD PTR [ebp-0x1e]
  40997c:	adc    eax,0xcec835a5
  409981:	rcr    DWORD PTR [edx-0x1c203e0f],1
  409987:	retf   
  409988:	xchg   esi,eax
  409989:	mov    edi,0x881603ff
  40998e:	fldenv [ecx]
  409990:	(bad)  
  409991:	sub    dh,bh
  409993:	jo     0x4099b8
  409995:	es fcmovne st,st(4)
  409998:	push   ebx
  409999:	les    esi,FWORD PTR [ebp-0x79]
  40999c:	ins    DWORD PTR es:[edi],dx
  40999d:	mov    esi,0x14631e45
  4099a2:	mov    dh,0x84
  4099a4:	cmp    BYTE PTR [edx+0x3d],0xb6
  4099a8:	dec    ebx
  4099a9:	push   ss
  4099aa:	inc    ebx
  4099ab:	inc    ebx
  4099ac:	dec    esp
  4099ad:	cmp    al,0x54
  4099af:	jecxz  0x4099d4
  4099b1:	xchg   edi,eax
  4099b2:	and    DWORD PTR [ecx-0x398eb8d],ebx
  4099b8:	pushf  
  4099b9:	push   ebx
  4099ba:	mov    cl,0x7c
  4099bc:	sti    
  4099bd:	xchg   ebx,eax
  4099be:	sub    bl,BYTE PTR [edx-0x4f]
  4099c1:	aaa    
  4099c2:	data16 repnz or cl,cl
  4099c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099c7:	das    
  4099c8:	or     edx,0x63
  4099cb:	pop    ss
  4099cc:	js     0x409a1f
  4099ce:	(bad)  [ecx-0x2d7764ce]
  4099d4:	mov    dl,0x71
  4099d6:	xchg   ebx,eax
  4099d7:	imul   ebx,DWORD PTR [eax],0x3a63ac64
  4099dd:	out    0xf6,al
  4099df:	retf   
  4099e0:	or     al,0xbf
  4099e2:	mov    BYTE PTR [ebx+0x3d],ah
  4099e5:	mov    esp,0x35aff2b1
  4099ea:	dec    edx
  4099eb:	int    0x4c
  4099ed:	adc    BYTE PTR [edx+0x49143832],al
  4099f3:	jmp    0xb424:0x88ba72b6
  4099fa:	mov    al,ds:0x7994d24e
  4099ff:	jbe    0x409a60
  409a01:	sub    eax,0xe396288d
  409a06:	stc    
  409a07:	cli    
  409a08:	enter  0xd4f1,0x5b
  409a0c:	loope  0x4099bb
  409a0e:	jg     0x409a31
  409a10:	mov    dl,0xad
  409a12:	inc    ecx
  409a13:	cmp    eax,0x5f8d92a8
  409a18:	lock jge 0x409a9a
  409a1b:	outs   dx,BYTE PTR ds:[esi]
  409a1c:	test   ebp,eax
  409a1e:	aad    0x43
  409a20:	comiss xmm2,DWORD PTR [edi+0x407f11e6]
  409a27:	mov    dh,0x7d
  409a29:	jle    0x409a24
  409a2b:	stc    
  409a2c:	jns    0x409a0e
  409a2e:	in     al,dx
  409a2f:	xchg   edx,eax
  409a30:	sbb    DWORD PTR [edx+0x2c],ecx
  409a33:	pop    esi
  409a34:	int    0xd8
  409a36:	push   0xffffffff
  409a38:	xchg   ecx,eax
  409a39:	xor    dh,BYTE PTR [ebp+0x7bc60d88]
  409a3f:	and    BYTE PTR [eax-0x31],ch
  409a42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a43:	mov    al,0x47
  409a45:	mov    cl,BYTE PTR [ecx]
  409a47:	loopne 0x409a22
  409a49:	ret    
  409a4a:	sbb    al,0x8c
  409a4c:	fstp   QWORD PTR [edx+0x15119096]
  409a52:	stc    
  409a53:	imul   edi,edi,0x3f
  409a56:	mov    al,ds:0x6d666fb1
  409a5b:	xchg   ecx,eax
  409a5c:	and    DWORD PTR [ecx-0xfadea19],ecx
  409a62:	enter  0x89f1,0xa8
  409a66:	sbb    DWORD PTR [ecx-0xa],esi
  409a69:	fistp  DWORD PTR [edx]
  409a6b:	sub    eax,0x99b7247e
  409a70:	outs   dx,DWORD PTR ds:[esi]
  409a71:	lahf   
  409a72:	jmp    0x409a1e
  409a74:	dec    ecx
  409a75:	(bad)  
  409a76:	mov    eax,ds:0xbf3d16c3
  409a7b:	push   es
  409a7c:	fucomp st(0)
  409a7e:	fnsave [ebx-0x2068366f]
  409a84:	ds loope 0x409a7d
  409a87:	push   edi
  409a88:	cmp    eax,0x51c9539b
  409a8d:	stc    
  409a8e:	pop    edx
  409a8f:	sahf   
  409a90:	jp     0x409abd
  409a92:	pop    ds
  409a93:	fstp   QWORD PTR [edx+0x70]
  409a96:	xchg   esp,eax
  409a97:	retf   
  409a98:	sbb    DWORD PTR [ebp-0x3],ebp
  409a9b:	sar    DWORD PTR [eax-0x189798d0],cl
  409aa1:	mov    ds:0x9dd74cef,al
  409aa6:	mov    ah,0x75
  409aa8:	(bad)  
  409aa9:	jmp    0x409ac7
  409aab:	out    0x35,eax
  409aad:	out    dx,eax
  409aae:	lock retf 
  409ab0:	xchg   ebx,eax
  409ab1:	fild   QWORD PTR [eax-0x2b7e615e]
  409ab7:	call   0x36c14a44
  409abc:	and    ah,dl
  409abe:	and    BYTE PTR gs:[edx],cl
  409ac1:	mov    bh,bh
  409ac3:	xchg   edx,eax
  409ac4:	movsx  ebx,BYTE PTR [edx+ecx*8-0x7e27a06f]
  409acc:	xor    al,0x99
  409ace:	ja     0x409afc
  409ad0:	stos   DWORD PTR es:[edi],eax
  409ad1:	xchg   ebx,eax
  409ad2:	adc    DWORD PTR [edi+0x1d],edx
  409ad5:	aad    0xb3
  409ad7:	lea    ecx,[ebx-0x61bbe0af]
  409add:	or     edi,esp
  409adf:	lds    esp,FWORD PTR [ebp+eiz*2+0xfd0aa4]
  409ae6:	fidiv  WORD PTR [ecx]
  409ae8:	mov    ch,0xde
  409aea:	adc    eax,0x8c503fe
  409aef:	add    DWORD PTR [edi+ebp*8+0x36cc3008],ecx
  409af6:	mov    al,ds:0xb5a2862f
  409afb:	adc    DWORD PTR [ebx],0xfffffffb
  409afe:	xchg   ecx,eax
  409aff:	jns    0x409a9f
  409b01:	fimul  DWORD PTR [edi-0x4bbb744e]
  409b07:	push   eax
  409b08:	push   edx
  409b09:	pop    esi
  409b0b:	push   ecx
  409b0c:	adc    BYTE PTR [esi],ah
  409b0e:	popa   
  409b0f:	jnp    0x409ae4
  409b11:	int3   
  409b12:	pop    eax
  409b13:	cmp    BYTE PTR [ebp+eiz*4+0x18157c8f],ch
  409b1a:	cmp    al,0xe7
  409b1c:	jmp    0x409b3f
  409b1e:	aam    0xd
  409b20:	enter  0x9bf7,0x40
  409b24:	inc    ebx
  409b25:	inc    edi
  409b26:	in     al,0x90
  409b28:	ret    
  409b29:	dec    edi
  409b2a:	push   ebx
  409b2b:	lahf   
  409b2c:	aas    
  409b2d:	push   eax
  409b2e:	adc    ecx,DWORD PTR [edi+0x3a2becc0]
  409b34:	repz jno 0x409b5d
  409b37:	pop    es
  409b38:	or     ah,dh
  409b3a:	push   es
  409b3b:	stos   DWORD PTR es:[edi],eax
  409b3c:	mov    ds:0x12b0615,eax
  409b41:	inc    ebp
  409b42:	mov    esp,0x2ab15795
  409b47:	rcr    DWORD PTR [esi-0x4e450fdf],1
  409b4d:	div    BYTE PTR [edx+0x6a]
  409b50:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  409b52:	pop    ecx
  409b53:	int3   
  409b54:	jl     0x409bab
  409b56:	test   BYTE PTR [ecx-0x5f971b2],ah
  409b5c:	dec    esi
  409b5d:	aaa    
  409b5e:	or     DWORD PTR [edi-0x73c70fcc],edi
  409b64:	inc    ebx
  409b65:	jne    0x409b6b
  409b67:	xchg   DWORD PTR [edi],esi
  409b69:	int3   
  409b6a:	mov    al,0x2d
  409b6c:	mov    ah,0x9c
  409b6e:	sub    ebx,ebx
  409b70:	js     0x409bbe
  409b72:	mov    edx,0xa34f2e6f
  409b77:	out    0x50,al
  409b79:	cmp    ch,BYTE PTR [edx]
  409b7b:	inc    edi
  409b7c:	sahf   
  409b7d:	data16 or al,0x6d
  409b80:	jle    0x409bb1
  409b82:	push   eax
  409b83:	mov    bl,0x4d
  409b85:	jnp    0x409b1b
  409b87:	test   DWORD PTR [eax],edi
  409b89:	imul   ecx,DWORD PTR [edx],0x34
  409b8c:	dec    ecx
  409b8d:	push   0xffffff8b
  409b8f:	icebp  
  409b90:	add    cl,BYTE PTR [esi-0x4f863aff]
  409b96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b97:	retf   
  409b98:	ficom  DWORD PTR [esi-0x7a]
  409b9b:	aas    
  409b9c:	sbb    BYTE PTR [esi-0x3d3be49d],cl
  409ba2:	cmp    eax,0x4895ed3
  409ba7:	push   cs
  409ba8:	jbe    0x409b97
  409baa:	iret   
  409bab:	bound  ecx,QWORD PTR fs:[edx+0x31]
  409baf:	pop    edx
  409bb0:	dec    eax
  409bb1:	aaa    
  409bb2:	push   eax
  409bb3:	loopne 0x409bd1
  409bb5:	dec    esi
  409bb6:	outs   dx,DWORD PTR ds:[esi]
  409bb7:	sub    eax,0x993356e
  409bbc:	add    ch,0x7f
  409bbf:	retf   0xaa14
  409bc2:	aas    
  409bc3:	jg     0x409bfb
  409bc5:	jnp    0x409be7
  409bc7:	pop    es
  409bc8:	add    al,0x85
  409bcb:	add    DWORD PTR [esi-0x621bc9ca],edx
  409bd1:	jmp    0x39b35d8e
  409bd6:	fsub   st,st(5)
  409bd8:	lods   eax,DWORD PTR ds:[esi]
  409bd9:	jg     0x409beb
  409bdb:	scas   eax,DWORD PTR es:[edi]
  409bdc:	jo     0x409c59
  409bde:	dec    esi
  409bdf:	repz xor BYTE PTR [ebx],0x7c
  409be3:	sbb    eax,0x6289d717
  409be8:	ins    BYTE PTR es:[edi],dx
  409be9:	jle    0x409c08
  409beb:	sti    
  409bec:	leave  
  409bed:	fs sahf 
  409bef:	cmp    edi,edx
  409bf1:	jo     0x409bd1
  409bf3:	mov    al,BYTE PTR [edx-0x4571b8ec]
  409bf9:	mov    cl,0x2f
  409bfb:	enter  0x62ca,0x56
  409bff:	mov    eax,ds:0xeadf29a4
  409c04:	jle    0x409c2f
  409c06:	lahf   
  409c07:	push   ss
  409c08:	cmp    BYTE PTR [edx],al
  409c0a:	imul   ecx,DWORD PTR [ebx+eiz*4-0x4e],0xd73dc52c
  409c12:	xor    ah,BYTE PTR [edi+ebx*8]
  409c15:	pushf  
  409c16:	rol    BYTE PTR [edx-0x23c408c9],0x56
  409c1d:	ficomp DWORD PTR [ecx-0x68]
  409c20:	sub    esi,ebx
  409c22:	das    
  409c23:	and    ch,BYTE PTR [ecx-0x15ab704d]
  409c29:	dec    esi
  409c2a:	inc    ebx
  409c2b:	imul   ebx,DWORD PTR [ebx+0x49],0xffffffa0
  409c2f:	bound  ecx,QWORD PTR [edx-0x4a]
  409c32:	push   es
  409c33:	or     eax,0xd2c4453
  409c38:	retf   
  409c39:	aad    0x9c
  409c3b:	adc    eax,0x61a0f314
  409c40:	push   esp
  409c41:	(bad)  
  409c42:	push   ds
  409c43:	(bad)  
  409c44:	ss push eax
  409c46:	xchg   esi,eax
  409c47:	add    BYTE PTR [ebx+0x6c62e183],dh
  409c4d:	scas   eax,DWORD PTR es:[edi]
  409c4e:	adc    BYTE PTR [esi+0x26],bl
  409c51:	retf   0x2d3b
  409c54:	test   DWORD PTR [ebx-0x51],esp
  409c57:	shl    DWORD PTR [edi+0x72244f1],1
  409c5d:	clc    
  409c5e:	jmp    0x409c26
  409c60:	mov    al,0xde
  409c62:	jp     0x409c00
  409c64:	push   eax
  409c65:	stc    
  409c66:	in     eax,dx
  409c67:	jle    0x409c62
  409c69:	into   
  409c6a:	fs sub al,0x89
  409c6d:	ror    ecx,1
  409c6f:	(bad)  
  409c70:	stc    
  409c71:	lods   al,BYTE PTR ds:[esi]
  409c72:	push   edi
  409c73:	xor    DWORD PTR [esi],esi
  409c75:	in     eax,dx
  409c76:	cdq    
  409c77:	sbb    ah,bl
  409c79:	pop    ebx
  409c7a:	mov    ds:0xe5a3396,al
  409c7f:	and    eax,DWORD PTR [ecx]
  409c81:	sahf   
  409c82:	add    eax,0x27987e68
  409c87:	dec    ebx
  409c88:	pop    esi
  409c89:	inc    DWORD PTR [edi-0x2f]
  409c8c:	mov    ds:0x80ef9ade,al
  409c91:	retf   0xa488
  409c94:	and    dh,BYTE PTR ds:0x76758b02
  409c9a:	sbb    ebx,DWORD PTR [edi]
  409c9c:	jl     0x409cae
  409c9e:	cmp    BYTE PTR [ebx-0x1b],dh
  409ca1:	push   0xffffffd4
  409ca3:	leave  
  409ca4:	bound  edx,QWORD PTR [eax+eiz*4+0x1d]
  409ca8:	sub    bl,dl
  409caa:	mov    esi,0x61c38255
  409caf:	sub    BYTE PTR [ebp+0x6],al
  409cb2:	mov    BYTE PTR ds:0xb380ec7c,cl
  409cb8:	mov    eax,ds:0x207a90d4
  409cbd:	ds (bad) 
  409cbf:	bound  esp,QWORD PTR [ebp*4+0x225c6a79]
  409cc6:	mov    dh,BYTE PTR [ebx+ebx*2]
  409cc9:	sbb    dl,BYTE PTR [esp+edx*4]
  409ccc:	outs   dx,BYTE PTR ds:[esi]
  409ccd:	call   0xcbf0:0x7d58a5cc
  409cd4:	inc    ebx
  409cd5:	test   eax,0x28efabfe
  409cda:	sbb    BYTE PTR [esi+0x1ab13cdf],cl
  409ce0:	out    0x8f,eax
  409ce2:	dec    edi
  409ce3:	push   eax
  409ce4:	xlat   BYTE PTR ds:[ebx]
  409ce5:	sub    BYTE PTR [edx],ch
  409ce7:	call   0x4c6a:0xe6565242
  409cee:	dec    esp
  409cef:	mov    ebx,0x73d7da0a
  409cf4:	mov    BYTE PTR [edx+eiz*4-0x4ff5da5e],ah
  409cfb:	aas    
  409cfc:	aas    
  409cfd:	clc    
  409cfe:	add    al,0xf9
  409d00:	mov    bh,0x1f
  409d02:	xchg   esp,eax
  409d03:	xor    eax,DWORD PTR [edi-0x18]
  409d06:	xchg   ebx,eax
  409d07:	adc    bl,BYTE PTR [ebp+0x18]
  409d0a:	push   edx
  409d0b:	out    dx,eax
  409d0c:	or     al,0x9d
  409d0e:	mov    edx,0x37d1b9a3
  409d13:	dec    esi
  409d14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d15:	sbb    al,0xf3
  409d17:	sbb    al,0xc0
  409d19:	fwait
  409d1a:	test   al,0x1d
  409d1c:	sar    BYTE PTR [eax],0xfd
  409d1f:	add    DWORD PTR [eax+0x3],eax
  409d22:	sub    DWORD PTR [esi],ecx
  409d24:	not    BYTE PTR [ebx-0x6a6b3d0]
  409d2a:	pop    ss
  409d2b:	ja     0x409d44
  409d2d:	and    bh,BYTE PTR [ebp+0x53383f3]
  409d33:	jmp    0x2daeda6
  409d38:	retf   0x6743
  409d3b:	stos   DWORD PTR es:[edi],eax
  409d3c:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  409d3e:	adc    eax,0x99484509
  409d43:	arpl   WORD PTR [edi-0x3c],bx
  409d46:	adc    esi,esi
  409d48:	adc    BYTE PTR [esi-0x71],dh
  409d4b:	and    dh,BYTE PTR [ebx-0x76]
  409d4e:	fadd   DWORD PTR [eax+0x1c]
  409d51:	fld    DWORD PTR [edi-0x702b5a38]
  409d57:	ror    dl,0xa0
  409d5a:	inc    esi
  409d5b:	stos   BYTE PTR es:[edi],al
  409d5c:	xor    BYTE PTR [edx],bl
  409d5e:	inc    ecx
  409d5f:	in     al,0xed
  409d61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d62:	dec    eax
  409d63:	into   
  409d64:	sbb    DWORD PTR [ebx-0x3cd3dc33],esp
  409d6a:	push   cs
  409d6b:	inc    ecx
  409d6c:	sub    al,0x48
  409d6e:	ins    DWORD PTR es:[edi],dx
  409d6f:	(bad)  
  409d70:	pop    ss
  409d71:	(bad)  
  409d72:	xchg   esi,eax
  409d73:	bound  edx,QWORD PTR [ecx+0x53388e2]
  409d79:	gs call ebx
  409d7c:	iret   
  409d7d:	jge    0x409de8
  409d7f:	push   esp
  409d80:	in     eax,dx
  409d81:	pop    esi
  409d82:	adc    bl,BYTE PTR [edi+0x4a89a778]
  409d88:	cmp    dh,BYTE PTR [ebp-0x187d98b0]
  409d8e:	mov    ebp,0x246cf7db
  409d93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d94:	jae    0x409d57
  409d96:	dec    edi
  409d97:	xchg   esp,eax
  409d98:	pop    edx
  409d99:	inc    ecx
  409d9a:	jp     0x409dd3
  409d9c:	lea    ebx,[ecx+eax*1-0x11]
  409da0:	jns    0x409deb
  409da2:	cmp    eax,0x8368e85b
  409da7:	add    eax,0xd135a302
  409dac:	repz push ds
  409dae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409daf:	xor    bl,0x2c
  409db2:	sub    DWORD PTR [edx+0x28],esi
  409db5:	cmp    BYTE PTR [eax-0x4c6ad7f0],bh
  409dbb:	inc    esi
  409dbc:	adc    BYTE PTR [ecx-0x1],dl
  409dbf:	sub    BYTE PTR [edi+eiz*2],bh
  409dc2:	mov    eax,ds:0xb6906d04
  409dc7:	push   ss
  409dc8:	or     ebp,esp
  409dca:	push   es
  409dcb:	out    dx,al
  409dcc:	ins    BYTE PTR es:[edi],dx
  409dcd:	aaa    
  409dce:	ror    DWORD PTR [ebx-0x5e014eae],1
  409dd4:	pushf  
  409dd5:	fsubr  DWORD PTR es:[esi+eax*2]
  409dd9:	daa    
  409dda:	cli    
  409ddb:	fnsave [eax+0x2f828131]
  409de1:	or     edi,DWORD PTR [eax-0x80]
  409de4:	jg     0x409dc2
  409de6:	in     eax,0xda
  409de8:	out    0x77,eax
  409dea:	pop    ebx
  409deb:	and    al,0x7b
  409ded:	arpl   di,dx
  409def:	fwait
  409df0:	and    bh,BYTE PTR [eax+0x70a4c926]
  409df6:	fcom   DWORD PTR [esi-0x2f32cf55]
  409dfc:	add    DWORD PTR [edx+0xf744e33],edx
  409e02:	cdq    
  409e03:	jp     0x409dd5
  409e05:	jp     0x409e02
  409e07:	int3   
  409e08:	lahf   
  409e09:	int    0x6c
  409e0b:	push   edi
  409e0c:	sahf   
  409e0d:	pushf  
  409e0e:	loop   0x409e63
  409e10:	cld    
  409e11:	ficom  WORD PTR [ebx+0x56]
  409e14:	(bad)
  409e17:	push   0xffffff95
  409e19:	mov    cx,0x1746
  409e1d:	jns    0x409e1e
  409e1f:	stos   DWORD PTR es:[edi],eax
  409e20:	std    
  409e21:	sti    
  409e22:	mov    eax,ds:0x54643d7a
  409e27:	sbb    cl,BYTE PTR [esp+ebp*8]
  409e2a:	pusha  
  409e2b:	shl    bl,0xd1
  409e2e:	sbb    al,0xf4
  409e30:	lea    esi,[edx-0x19]
  409e33:	push   edx
  409e34:	(bad)  
  409e35:	in     eax,0x14
  409e37:	push   es
  409e38:	fild   QWORD PTR [ecx]
  409e3a:	pushf  
  409e3b:	imul   esp,DWORD PTR [edi-0x6fbdce96],0x6652f62b
  409e45:	fdivr  st(0),st
  409e47:	and    al,0xba
  409e49:	in     al,dx
  409e4a:	sub    ah,bl
  409e4c:	pop    ebp
  409e4d:	mov    cl,0x3d
  409e4f:	hlt    
  409e50:	retf   
  409e51:	push   esi
  409e52:	dec    ebx
  409e53:	out    dx,al
  409e54:	xchg   ecx,eax
  409e55:	push   edx
  409e56:	nop
  409e57:	dec    ecx
  409e58:	mov    esp,0xef87ba2c
  409e5d:	pushf  
  409e5e:	xchg   ebp,eax
  409e5f:	fild   DWORD PTR [edx+0x425eb838]
  409e65:	cmp    ah,0xaf
  409e68:	scas   al,BYTE PTR es:[edi]
  409e69:	jbe    0x409e6e
  409e6b:	cmp    eax,0xa18c0b5b
  409e70:	loopne 0x409e31
  409e72:	xor    al,BYTE PTR [eax+esi*2]
  409e75:	(bad)  
  409e77:	aas    
  409e78:	jg     0x409e8b
  409e7a:	pop    esp
  409e7b:	leave  
  409e7c:	ret    0x897a
  409e7f:	cmc    
  409e80:	dec    edx
  409e81:	aaa    
  409e82:	in     eax,dx
  409e83:	dec    edx
  409e84:	jecxz  0x409e91
  409e86:	call   0xa6698065
  409e8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e8c:	lock pop edx
  409e8e:	hlt    
  409e8f:	pop    edx
  409e90:	pop    ebp
  409e91:	mov    ebx,0x4c531b36
  409e96:	mov    cs,WORD PTR [ebx+0x49fd97a3]
  409e9c:	test   BYTE PTR [edi-0x6c],dh
  409e9f:	jmp    0x58ea:0x10087912
  409ea6:	js     0x409e40
  409ea8:	add    edi,edx
  409eaa:	lds    esi,FWORD PTR [ebx-0x31]
  409ead:	ss mov dh,0x43
  409eb0:	fst    QWORD PTR [edx]
  409eb2:	cli    
  409eb3:	ficom  DWORD PTR [ebp+0x71]
  409eb6:	push   edx
  409eb7:	fst    QWORD PTR [edi]
  409eb9:	xor    ah,BYTE PTR [ebp-0x45]
  409ebc:	push   esp
  409ebd:	icebp  
  409ebe:	adc    BYTE PTR [edx+0x15ab2ca4],ah
  409ec4:	xchg   ebp,eax
  409ec5:	xchg   esi,eax
  409ec6:	(bad)  
  409ec7:	out    dx,eax
  409ec8:	ret    0xbae7
  409ecb:	xor    ebp,ebx
  409ecd:	push   0x2761214b
  409ed2:	stos   BYTE PTR es:[edi],al
  409ed3:	inc    edx
  409ed4:	jae    0x409ebe
  409ed6:	imul   eax,ebp,0xffffffa2
  409ed9:	mov    ecx,0x27462cd0
  409ede:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409edf:	out    0xb7,eax
  409ee1:	or     eax,0x2cafc67a
  409ee6:	ss ja  0x409ee7
  409ee9:	jb     0x409ef1
  409eeb:	imul   edi,DWORD PTR [esi+0x70],0x44
  409eef:	pop    ss
  409ef0:	imul   eax,DWORD PTR [ebx],0x61
  409ef3:	sub    bl,ch
  409ef5:	fyl2x  
  409ef7:	push   ecx
  409ef8:	pop    esi
  409ef9:	sahf   
  409efa:	sbb    dh,cl
  409efc:	push   esp
  409efd:	jmp    0xd547846
  409f02:	leave  
  409f03:	pop    edx
  409f04:	sbb    eax,0xac71dad0
  409f09:	call   0xac18b1a0
  409f0e:	test   ch,0x6e
  409f11:	das    
  409f12:	stos   BYTE PTR es:[edi],al
  409f13:	lods   al,BYTE PTR fs:[esi]
  409f15:	ret    0x99c6
  409f18:	imul   ebx,DWORD PTR ds:0xc60ae0ed,0x79c05888
  409f22:	fst    DWORD PTR [edx]
  409f24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f25:	sbb    BYTE PTR [esi-0x24],0xce
  409f29:	jno    0x409f04
  409f2b:	ins    BYTE PTR es:[edi],dx
  409f2c:	out    0x2c,eax
  409f2e:	xor    DWORD PTR ds:0xaa50660d,edi
  409f34:	xchg   edi,eax
  409f35:	sub    dl,BYTE PTR [edx+0x22]
  409f38:	dec    ecx
  409f39:	mov    cl,0xb9
  409f3b:	outs   dx,DWORD PTR ds:[esi]
  409f3c:	add    al,0x46
  409f3e:	jo     0x409f4f
  409f40:	dec    ecx
  409f41:	test   DWORD PTR [edi+0x7317d9c],ebp
  409f47:	cmp    BYTE PTR [edx],al
  409f49:	sbb    DWORD PTR [ebx+eax*2+0x73],edx
  409f4d:	stc    
  409f4e:	scas   eax,DWORD PTR es:[edi]
  409f4f:	dec    edx
  409f50:	fdivr  QWORD PTR [eax+ebp*2-0x3]
  409f54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f55:	ins    BYTE PTR es:[edi],dx
  409f56:	add    bl,0x2a
  409f59:	ret    
  409f5a:	mov    ebp,0x986c3000
  409f5f:	push   edx
  409f60:	xchg   edx,eax
  409f61:	gs ins BYTE PTR es:[edi],dx
  409f63:	aas    
  409f64:	lds    esp,FWORD PTR [edx]
  409f66:	mov    BYTE PTR [edx+0x4],ah
  409f69:	mov    cl,0xcc
  409f6b:	dec    ebx
  409f6c:	jg     0x409fba
  409f6e:	sti    
  409f6f:	das    
  409f70:	add    cl,BYTE PTR [edx+0x7a]
  409f73:	jg     0x409fb0
  409f75:	pop    DWORD PTR [edx+0x21]
  409f78:	jle    0x409fb1
  409f7a:	(bad)  
  409f7b:	(bad)  
  409f7d:	jnp    0x409f3e
  409f7f:	xor    DWORD PTR [edx-0x3e],0xffffffa1
  409f83:	xchg   edi,eax
  409f84:	retf   0xcb7e
  409f87:	fs cmp eax,0xb07d226
  409f8d:	xlat   BYTE PTR ds:[ebx]
  409f8e:	es retf 
  409f90:	mov    eax,ds:0xfb216973
  409f95:	inc    esp
  409f96:	mov    BYTE PTR [ebx-0x4d8d1b9e],bl
  409f9c:	retf   
  409f9d:	int3   
  409f9e:	retf   0x7d44
  409fa1:	mov    bh,0x6
  409fa3:	xchg   edi,eax
  409fa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fa5:	mov    cs,WORD PTR [ebx+0x6d8abd42]
  409fab:	mov    eax,ds:0xbde98e5c
  409fb0:	xor    al,0xae
  409fb2:	mov    al,0x1b
  409fb4:	(bad)  
  409fb5:	jmp    0x4dae6a72
  409fba:	mov    esp,0x5b4f0261
  409fbf:	adc    esi,ebp
  409fc1:	pop    ebx
  409fc2:	out    dx,eax
  409fc3:	ds inc esp
  409fc5:	ret    0x8e7a
  409fc8:	(bad)  
  409fc9:	jg     0x40a00b
  409fcb:	mov    bl,0x9a
  409fcd:	lods   eax,DWORD PTR ds:[esi]
  409fce:	sub    ch,cl
  409fd0:	add    ebp,DWORD PTR [ecx+0x48eb4c0f]
  409fd6:	ret    0xf480
  409fd9:	inc    ebx
  409fda:	pop    es
  409fdb:	xor    cl,BYTE PTR [ebp+0x73aeec04]
  409fe1:	arpl   WORD PTR [edx],sp
  409fe3:	or     DWORD PTR [edi+0x60],esp
  409fe6:	mov    ch,0x91
  409fe8:	rol    BYTE PTR [edx+0x126fddc8],1
  409fee:	sub    al,0xfa
  409ff0:	(bad)  
  409ff1:	sahf   
  409ff2:	dec    ebp
  409ff3:	enter  0x760,0x8e
  409ff7:	scas   ax,WORD PTR es:[edi]
  409ff9:	loopne 0x40a038
  409ffb:	jbe    0x409fc4
  409ffd:	shr    BYTE PTR [edx],1
  409fff:	fs (bad) 
  40a001:	mov    fs:0x9d54175a,eax
  40a007:	std    
  40a008:	loopne 0x40a078
  40a00a:	adc    BYTE PTR [edi+ebp*1],bh
  40a00d:	lea    ebp,[ecx+0x68]
  40a010:	dec    ecx
  40a011:	hlt    
  40a012:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a013:	cmp    ch,dl
  40a015:	into   
  40a016:	sahf   
  40a017:	mov    bl,0x4
  40a019:	cmp    BYTE PTR [ebp*4-0xd89f90a],0x2
  40a021:	mov    DWORD PTR [eax+0x61],esp
  40a024:	ins    DWORD PTR es:[edi],dx
  40a025:	jae    0x40a04d
  40a027:	dec    dl
  40a029:	and    eax,0xf669c6f5
  40a02e:	sbb    eax,0xa05e47e5
  40a033:	pusha  
  40a034:	push   0xc
  40a036:	shl    DWORD PTR [eax+0x3d],cl
  40a039:	leave  
  40a03a:	mov    WORD PTR [ebp-0x79e1d6b],ss
  40a040:	xchg   esp,eax
  40a041:	and    ecx,DWORD PTR [esi-0x38d81516]
  40a047:	mov    ah,0xf8
  40a049:	(bad)  
  40a04a:	das    
  40a04b:	fstp   st(3)
  40a04d:	sub    BYTE PTR [ebp+0x25],0xd9
  40a051:	jne    0x40a064
  40a053:	retf   
  40a054:	shl    ecx,0x9b
  40a057:	ss scas eax,DWORD PTR es:[edi]
  40a059:	jb     0x40a06d
  40a05b:	xchg   edx,eax
  40a05c:	mov    esp,0xc87de136
  40a061:	sbb    esp,esi
  40a063:	mov    ds:0xb2d673f3,eax
  40a068:	jb     0x40a057
  40a06a:	dec    ebp
  40a06b:	iret   
  40a06c:	mov    ebp,0x76b27013
  40a071:	xchg   al,ch
  40a073:	cmp    al,0x70
  40a075:	jno    0x40a0b8
  40a077:	cwde   
  40a078:	xor    al,0xb6
  40a07a:	arpl   WORD PTR [di+0xff1],sp
  40a07f:	fwait
  40a080:	sub    DWORD PTR [edx-0x5630773c],eax
  40a086:	push   es
  40a087:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a088:	shr    BYTE PTR [edx+0x72040aae],1
  40a08e:	jg     0x40a0aa
  40a090:	xor    al,0xaa
  40a092:	cdq    
  40a093:	mov    eax,ds:0xd3a84af
  40a098:	sbb    al,0x56
  40a09a:	std    
  40a09b:	popf   
  40a09c:	pusha  
  40a09d:	ret    
  40a09e:	sbb    ebp,edi
  40a0a0:	in     eax,0x9e
  40a0a2:	jecxz  0x40a105
  40a0a4:	push   eax
  40a0a5:	call   0xbeca8ff5
  40a0aa:	divps  xmm3,XMMWORD PTR [ecx+0x5f99c3be]
  40a0b1:	inc    eax
  40a0b2:	jp     0x40a12c
  40a0b4:	je     0x40a103
  40a0b6:	sub    dh,ch
  40a0b8:	sbb    al,0x15
  40a0ba:	je     0x40a053
  40a0bc:	mov    bh,0xb
  40a0be:	scas   al,BYTE PTR es:[edi]
  40a0bf:	jge    0x40a0df
  40a0c1:	sub    al,0x80
  40a0c3:	rol    DWORD PTR [ebx],1
  40a0c5:	popf   
  40a0c6:	aaa    
  40a0c7:	sub    bh,BYTE PTR [ebx+0x31a83f2f]
  40a0cd:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40a0cf:	mul    dh
  40a0d1:	cmp    ebp,DWORD PTR [esi+0x387c08c6]
  40a0d7:	popa   
  40a0d8:	cmp    ax,0x276d
  40a0dc:	pop    esi
  40a0dd:	popf   
  40a0de:	xor    eax,0x6290f085
  40a0e3:	xchg   esi,eax
  40a0e4:	cmp    DWORD PTR [ebp-0x2f273e8d],ecx
  40a0ea:	mov    esp,edx
  40a0ec:	cmp    eax,edi
  40a0ee:	rcl    edi,0x15
  40a0f1:	push   ds
  40a0f2:	xchg   ebx,eax
  40a0f3:	sbb    eax,0xa05daa36
  40a0f9:	jl     0x40a16b
  40a0fb:	test   BYTE PTR [eax+0x2f964f2c],al
  40a101:	sub    al,0xbd
  40a103:	ins    DWORD PTR es:[edi],dx
  40a104:	adc    cl,ah
  40a106:	pop    es
  40a107:	and    al,0xb7
  40a109:	pop    ecx
  40a10a:	out    0x7f,al
  40a10c:	jl     0x40a091
  40a10e:	mov    DWORD PTR [ebx*8-0x52240351],edx
  40a115:	inc    ebx
  40a116:	jecxz  0x40a0e6
  40a118:	jbe    0x40a148
  40a11a:	adc    ah,dh
  40a11c:	aam    0x11
  40a11e:	cmp    eax,0x384e50a5
  40a123:	fdiv   DWORD PTR [eax-0x3c]
  40a126:	mov    ebx,0x647f9294
  40a12b:	jle    0x40a0d2
  40a12d:	and    ch,BYTE PTR [ebx]
  40a12f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a130:	sbb    DWORD PTR [ebp-0x45],ecx
  40a133:	imul   ch
  40a135:	in     al,dx
  40a136:	fstcw  WORD PTR gs:[esp+esi*1+0x45b409d7]
  40a13f:	cwde   
  40a140:	int3   
  40a141:	arpl   WORD PTR [eax-0x50],dx
  40a144:	inc    edi
  40a145:	xchg   edx,eax
  40a146:	(bad)  
  40a147:	adc    bh,BYTE PTR [edi]
  40a149:	call   0x7498:0x18757376
  40a150:	add    bl,BYTE PTR [esi+0x2986cd0e]
  40a156:	sub    edx,ecx
  40a158:	in     eax,dx
  40a159:	out    dx,al
  40a15a:	loopne 0x40a149
  40a15c:	jbe    0x40a183
  40a15e:	clc    
  40a15f:	daa    
  40a160:	and    eax,0xc2a10c75
  40a165:	cdq    
  40a166:	jmp    0x74f47296
  40a16b:	mov    cl,0xb0
  40a16d:	pop    esi
  40a16e:	ins    DWORD PTR es:[edi],dx
  40a16f:	mov    gs,WORD PTR [ecx]
  40a171:	adc    DWORD PTR [edx+0x12d765ff],edx
  40a177:	jecxz  0x40a1f6
  40a179:	arpl   WORD PTR [edi-0xf43520d],di
  40a17f:	xor    eax,0x196ceb4a
  40a184:	aaa    
  40a185:	xor    DWORD PTR [esi+0x53],0x46
  40a189:	ret    
  40a18a:	arpl   WORD PTR [eax],sp
  40a18c:	shr    DWORD PTR [ebx+0x46],0x91
  40a190:	popa   
  40a191:	loope  0x40a1d4
  40a193:	mov    bl,0xfe
  40a195:	jno    0x40a1bf
  40a197:	mov    ah,0xd7
  40a199:	call   FWORD PTR [eax]
  40a19b:	sar    ebp,cl
  40a19d:	sub    BYTE PTR [ebp+0x5c6d64fd],cl
  40a1a3:	(bad)  
  40a1a4:	push   ebx
  40a1a5:	mov    al,ds:0x2bb44d22
  40a1aa:	pop    ebp
  40a1ab:	icebp  
  40a1ac:	adc    dl,al
  40a1ae:	add    edi,DWORD PTR [edx-0x1a]
  40a1b1:	xor    edx,edx
  40a1b3:	push   es
  40a1b4:	jl     0x40a181
  40a1b6:	jp     0x40a155
  40a1b8:	inc    edi
  40a1b9:	xchg   eax,ebp
  40a1bb:	into   
  40a1bc:	and    DWORD PTR [ebp-0x2e],esp
  40a1bf:	outs   dx,BYTE PTR ds:[esi]
  40a1c0:	stos   BYTE PTR es:[edi],al
  40a1c1:	jo     0x40a146
  40a1c3:	sbb    DWORD PTR [ecx+0x25c9508b],edi
  40a1c9:	cs cdq 
  40a1cb:	(bad)  
  40a1cc:	lea    esi,[edi]
  40a1ce:	pop    esp
  40a1cf:	sbb    bl,BYTE PTR ds:0xf35c60dd
  40a1d5:	inc    esp
  40a1d6:	mov    ds:0x40531d04,al
  40a1db:	xor    BYTE PTR [edi+0x1d],0xf
  40a1df:	push   es
  40a1e0:	rol    dh,cl
  40a1e2:	or     BYTE PTR [edx],bh
  40a1e4:	mov    edx,0x3b1100b9
  40a1e9:	test   DWORD PTR ds:0xfcbef636,esi
  40a1ef:	lods   eax,DWORD PTR ds:[esi]
  40a1f0:	jp     0x40a194
  40a1f2:	div    BYTE PTR [esi+esi*4-0x33]
  40a1f6:	(bad)  
  40a1f7:	push   ds
  40a1f8:	xchg   BYTE PTR [edi],bl
  40a1fa:	hlt    
  40a1fb:	jp     0x40a265
  40a1fd:	(bad)  
  40a1fe:	loopne 0x40a1e5
  40a200:	push   0xffffffcf
  40a202:	push   ecx
  40a203:	and    ch,ah
  40a205:	ret    
  40a206:	adc    BYTE PTR [eax+0x71900237],dl
  40a20c:	aaa    
  40a20d:	out    0xd1,eax
  40a20f:	cmp    ecx,DWORD PTR [ecx+edi*4+0xc]
  40a213:	ss jmp 0x9b84:0x9764de0c
  40a21b:	sbb    al,0xc7
  40a21d:	xchg   DWORD PTR [eax-0x5b],edi
  40a220:	mov    ebx,0x17510790
  40a225:	ja     0x40a29e
  40a227:	mov    ds:0x610ef0ec,eax
  40a22c:	cmp    edi,DWORD PTR es:[ecx-0x473416fd]
  40a233:	pop    ds
  40a234:	mov    WORD PTR [edx],fs
  40a236:	pop    ecx
  40a237:	jmp    0xb028:0xce6a1b9b
  40a23e:	dec    ebp
  40a23f:	mov    bh,0x18
  40a241:	dec    edi
  40a242:	inc    edx
  40a243:	fidiv  WORD PTR [edx-0x67]
  40a246:	es mov al,0x26
  40a249:	call   0x68b7d1f1
  40a24e:	sbb    al,0xa6
  40a250:	data16 jb 0x40a232
  40a253:	pop    ebx
  40a254:	jp     0x40a20f
  40a256:	imul   edi,esp,0xd3971165
  40a25c:	call   0x587c8048
  40a261:	push   es
  40a262:	aas    
  40a263:	gs sbb eax,0x25b5cea4
  40a269:	cdq    
  40a26a:	xor    bh,0x2f
  40a26d:	jbe    0x40a2c5
  40a26f:	pop    ds
  40a270:	xor    ebx,DWORD PTR [ebx+0x59]
  40a273:	rcr    BYTE PTR [edx-0x29],cl
  40a276:	inc    esi
  40a277:	mov    eax,0xbe6ad5a8
  40a27c:	lods   eax,DWORD PTR ds:[esi]
  40a27d:	push   ss
  40a27e:	ins    DWORD PTR es:[edi],dx
  40a27f:	mov    ds:0x4eb133f5,al
  40a284:	inc    DWORD PTR [ebx+eiz*2+0x6607c8d2]
  40a28b:	lods   eax,DWORD PTR ds:[esi]
  40a28c:	xlat   BYTE PTR ds:[ebx]
  40a28d:	ror    DWORD PTR [edi+0x36],cl
  40a290:	sbb    DWORD PTR ds:0xbf9081df,0x34
  40a297:	mov    al,ds:0x70a8d720
  40a29c:	jns    0x40a24c
  40a29e:	test   al,0x9f
  40a2a0:	inc    esi
  40a2a1:	mov    ch,0x72
  40a2a3:	mov    ebp,DWORD PTR [esi-0x6a]
  40a2a6:	les    eax,FWORD PTR [eax]
  40a2a8:	inc    eax
  40a2a9:	inc    edx
  40a2aa:	sahf   
  40a2ab:	xor    al,0x32
  40a2ad:	nop
  40a2ae:	loope  0x40a31c
  40a2b0:	stos   BYTE PTR es:[edi],al
  40a2b1:	cld    
  40a2b2:	mov    al,ds:0xe6eb5797
  40a2b7:	xchg   BYTE PTR [edi-0x7f],al
  40a2ba:	xchg   ebp,eax
  40a2bb:	call   0xf231e5fb
  40a2c0:	stos   BYTE PTR es:[edi],al
  40a2c1:	leave  
  40a2c2:	jnp    0x40a331
  40a2c4:	ins    BYTE PTR es:[edi],dx
  40a2c5:	xor    cl,ch
  40a2c7:	xor    ecx,DWORD PTR [edx-0x6fa5f571]
  40a2cd:	mov    dh,cl
  40a2cf:	xor    BYTE PTR [edi],ah
  40a2d1:	loop   0x40a30f
  40a2d3:	push   ebp
  40a2d4:	mov    WORD PTR [edi+0x2e],ds
  40a2d7:	fwait
  40a2d8:	and    esi,DWORD PTR [edi]
  40a2da:	mov    edi,0x5539ac43
  40a2df:	test   al,0x9b
  40a2e1:	ret    
  40a2e2:	lahf   
  40a2e3:	xor    bh,BYTE PTR [edx+0x46d65b22]
  40a2e9:	push   ds
  40a2ea:	pop    ebp
  40a2eb:	ins    BYTE PTR es:[edi],dx
  40a2ec:	fistp  QWORD PTR [esi]
  40a2ee:	enter  0xadb3,0x99
  40a2f2:	rcr    BYTE PTR [edx-0xba2195e],1
  40a2f8:	repnz adc ah,BYTE PTR [eax+0x9]
  40a2fc:	pusha  
  40a2fd:	adc    BYTE PTR [edi-0x68],al
  40a300:	mov    esi,0x8bd13bc1
  40a305:	out    0x49,eax
  40a307:	mov    al,0xc4
  40a309:	xor    al,BYTE PTR [edx]
  40a30b:	inc    edx
  40a30c:	jmp    0x13bb:0x5af0289a
  40a313:	repz push edi
  40a315:	add    edx,edx
  40a317:	jbe    0x40a379
  40a319:	ds aam 0xfd
  40a31c:	push   0xf4b8fdef
  40a321:	daa    
  40a322:	out    0xaa,al
  40a324:	lods   eax,DWORD PTR ds:[esi]
  40a325:	pop    eax
  40a326:	or     BYTE PTR [edx+0x6b],bh
  40a329:	(bad)  [esi]
  40a32b:	push   cs
  40a32c:	xlat   BYTE PTR ds:[ebx]
  40a32d:	sbb    bh,ah
  40a32f:	data16 outs dx,BYTE PTR ds:[esi]
  40a331:	push   0x3b
  40a333:	inc    eax
  40a334:	mov    ebp,0xca97b461
  40a339:	or     al,0xa8
  40a33b:	jmp    0x40a349
  40a33d:	not    ebx
  40a33f:	add    bl,dh
  40a341:	pop    ebp
  40a342:	neg    BYTE PTR [eax-0x7d7dadce]
  40a348:	add    al,0x2a
  40a34a:	mov    esp,0xb5c09405
  40a34f:	mov    al,ds:0xa3bc5d78
  40a354:	dec    esi
  40a355:	cwde   
  40a356:	cdq    
  40a357:	ffree  st(1)
  40a359:	in     al,dx
  40a35a:	adc    al,0x6
  40a35c:	mov    ds,WORD PTR [ebp-0xd]
  40a35f:	or     dl,dh
  40a361:	cmp    al,0x5e
  40a363:	sti    
  40a364:	inc    esp
  40a365:	fist   WORD PTR [ecx+0x3fd6f3e5]
  40a36b:	push   edx
  40a36c:	add    BYTE PTR [eax],0x81
  40a36f:	xchg   dl,bh
  40a371:	xchg   edi,eax
  40a372:	xchg   DWORD PTR [ebp+0x57],edx
  40a375:	inc    ebp
  40a376:	std    
  40a377:	xchg   esi,eax
  40a378:	inc    ebp
  40a379:	inc    esp
  40a37a:	test   al,0xa9
  40a37c:	xlat   BYTE PTR ds:[ebx]
  40a37d:	jo     0x40a358
  40a37f:	std    
  40a380:	and    ch,BYTE PTR [ebx+eax*4]
  40a383:	push   edi
  40a384:	pop    ds
  40a385:	push   cs
  40a386:	and    edi,0x77
  40a389:	pop    eax
  40a38a:	fst    DWORD PTR [esi-0x1c8ca022]
  40a390:	hlt    
  40a391:	and    eax,0x71301f13
  40a396:	fsub   st,st(0)
  40a398:	into   
  40a399:	daa    
  40a39a:	or     esi,DWORD PTR [ecx+eax*4-0x3ce04abe]
  40a3a1:	mov    fs,WORD PTR [edx]
  40a3a3:	add    ebp,DWORD PTR [edi]
  40a3a5:	stos   BYTE PTR es:[edi],al
  40a3a6:	not    DWORD PTR [ebx+0x108d2dff]
  40a3ac:	mov    edi,0xb3a2182e
  40a3b1:	sub    al,0x57
  40a3b3:	adc    eax,0x1eaea015
  40a3b8:	inc    DWORD PTR [esi-0x5edd86dc]
  40a3be:	jae    0x40a3f4
  40a3c0:	pop    ecx
  40a3c1:	inc    ecx
  40a3c2:	call   0x8b3efa38
  40a3c7:	dec    ebx
  40a3c8:	imul   ebx,DWORD PTR [edx+0x35454bb7],0x7f
  40a3cf:	(bad)  
  40a3d0:	out    dx,eax
  40a3d1:	push   eax
  40a3d2:	jne    0x40a40d
  40a3d4:	xchg   BYTE PTR [edi],ch
  40a3d6:	out    dx,eax
  40a3d7:	jae    0x40a39d
  40a3d9:	cmp    edx,DWORD PTR [esi]
  40a3db:	pop    edi
  40a3dc:	cmc    
  40a3dd:	fucom  st(2)
  40a3df:	popa   
  40a3e0:	push   edx
  40a3e1:	fistp  WORD PTR [edx+0x6dd32d0f]
  40a3e7:	adc    eax,0x1ca060d2
  40a3ec:	push   ss
  40a3ed:	mov    edi,0x24617c26
  40a3f2:	or     ah,BYTE PTR [ecx-0x22ba2fd3]
  40a3f8:	lock fwait
  40a3fa:	mov    DWORD PTR [ecx+0x3ba52317],edi
  40a400:	push   ds
  40a401:	mov    ds:0x904785e8,al
  40a406:	clc    
  40a407:	lods   al,BYTE PTR ds:[esi]
  40a408:	mov    esi,eax
  40a40a:	fnstenv [edi-0x5e]
  40a40d:	cli    
  40a40e:	mov    gs,esp
  40a410:	test   al,0xa8
  40a412:	add    bh,al
  40a414:	push   ds
  40a415:	mov    dh,0xb5
  40a417:	add    esi,eax
  40a419:	xor    al,BYTE PTR [ebx+0x43]
  40a41c:	jbe    0x40a3bc
  40a41e:	jb     0x40a3e4
  40a420:	jmp    0x330b66f
  40a425:	fnstcw WORD PTR [esi+eax*1-0x7]
  40a429:	adc    al,0xf
  40a42b:	mov    bl,cl
  40a42d:	adc    DWORD PTR [ecx],edx
  40a42f:	imul   ebp,DWORD PTR [ebx-0xa1d4bbd],0xffffffc1
  40a436:	lock mov al,ds:0x90b4a9ff
  40a43c:	mov    bh,bl
  40a43e:	out    0x4c,al
  40a440:	dec    edx
  40a441:	and    DWORD PTR [ebx+0x46],0x15dc6e15
  40a448:	aaa    
  40a449:	push   edi
  40a44a:	repz mov ch,0x27
  40a44d:	fmul   QWORD PTR [ecx+0x3377dbdf]
  40a453:	sbb    BYTE PTR [edx+ebp*1+0x4],dh
  40a457:	fs mov ecx,0x92406fde
  40a45d:	cmp    al,0x1d
  40a45f:	sbb    ah,BYTE PTR [edx+ecx*4]
  40a462:	rcr    BYTE PTR [edi+esi*1],1
  40a465:	sub    cl,BYTE PTR [ebx]
  40a467:	jl     0x40a49e
  40a469:	mov    eax,ds:0x17066384
  40a46e:	cdq    
  40a46f:	in     al,0x99
  40a471:	or     al,0x98
  40a473:	loopne 0x40a43e
  40a475:	sbb    DWORD PTR [esi-0x7f],edx
  40a478:	test   al,0x75
  40a47a:	adc    edx,DWORD PTR [esi+0x593a6b7d]
  40a480:	out    dx,al
  40a481:	mov    al,0x47
  40a483:	xchg   DWORD PTR [esi-0x47],esp
  40a486:	sti    
  40a487:	jno    0x40a4a9
  40a489:	in     eax,dx
  40a48a:	dec    esp
  40a48b:	(bad)
  40a490:	and    al,0x4e
  40a492:	es pop ebp
  40a494:	xor    BYTE PTR [esi+ebp*2],0x6b
  40a498:	std    
  40a499:	repz and eax,DWORD PTR [eax-0x51]
  40a49d:	mov    ds:0x66891d37,eax
  40a4a2:	repz jmp 0xe5f83c34
  40a4a8:	jnp    0x40a47c
  40a4aa:	xchg   ebp,eax
  40a4ab:	jno    0x40a4e5
  40a4ad:	clc    
  40a4ae:	xlat   BYTE PTR ds:[ebx]
  40a4af:	(bad)  
  40a4b0:	push   ecx
  40a4b1:	push   edx
  40a4b2:	loopne 0x40a520
  40a4b4:	jp     0x40a4dd
  40a4b6:	inc    ebp
  40a4b7:	mov    cl,0x3b
  40a4b9:	shr    BYTE PTR [edi],0xf4
  40a4bc:	cs jns 0x40a455
  40a4bf:	js     0x40a4f7
  40a4c1:	and    eax,0x30e4d31b
  40a4c6:	lock aam 0x9d
  40a4c9:	mov    ds:0x5b4766b9,eax
  40a4ce:	lods   eax,DWORD PTR ds:[esi]
  40a4cf:	cmp    eax,0x6ca2d664
  40a4d4:	pop    es
  40a4d5:	fdivr  st(2),st
  40a4d7:	or     DWORD PTR [edx],eax
  40a4d9:	lods   al,BYTE PTR ds:[esi]
  40a4da:	and    DWORD PTR [ebx+0x45],esi
  40a4dd:	idiv   BYTE PTR [ecx-0x5f6965a7]
  40a4e3:	adc    DWORD PTR [eax+0x54ab2d0b],ebx
  40a4e9:	ficomp DWORD PTR [eax+0x65]
  40a4ec:	lds    ebx,FWORD PTR [ecx]
  40a4ee:	jmp    0x72a0:0xc5b8c297
  40a4f5:	jmp    0x8b23:0xe663c57d
  40a4fc:	(bad)  
  40a4fd:	xor    BYTE PTR [ebx+0x4c7b3cba],al
  40a503:	adc    DWORD PTR [edi],0x4bc31032
  40a509:	mov    bl,0xd2
  40a50b:	xchg   edx,eax
  40a50c:	and    dl,BYTE PTR [ebx+0x7d601f43]
  40a512:	inc    edx
  40a513:	xchg   edx,eax
  40a514:	pop    esp
  40a515:	pusha  
  40a516:	sub    DWORD PTR [esi+0x1740e910],ebp
  40a51c:	lea    edi,[ecx]
  40a51e:	lds    eax,FWORD PTR [edx]
  40a520:	cdq    
  40a521:	pop    ebx
  40a522:	jae    0x40a579
  40a524:	mov    esp,DWORD PTR [edi]
  40a526:	daa    
  40a527:	jg     0x40a50f
  40a529:	or     eax,0x5deb3768
  40a52e:	jne    0x40a52c
  40a530:	dec    ebp
  40a531:	dec    ebp
  40a532:	cli    
  40a533:	sbb    al,cl
  40a535:	aam    0x1e
  40a537:	repz gs mov ebp,0x7272fd13
  40a53e:	sahf   
  40a53f:	xchg   ecx,eax
  40a540:	jne    0x40a520
  40a542:	jbe    0x40a524
  40a544:	inc    esp
  40a545:	ficom  DWORD PTR [ecx-0x4]
  40a548:	(bad)  
  40a549:	xlat   BYTE PTR ds:[ebx]
  40a54a:	xlat   BYTE PTR ds:[ebx]
  40a54b:	nop
  40a54c:	stc    
  40a54d:	sbb    BYTE PTR [edx+0x3c],dl
  40a550:	jbe    0x40a5a9
  40a552:	aas    
  40a553:	jnp    0x40a5b3
  40a555:	(bad)
  40a558:	xchg   esp,eax
  40a559:	stos   BYTE PTR es:[edi],al
  40a55a:	and    al,0x10
  40a55c:	aam    0xa4
  40a55e:	dec    ebx
  40a55f:	inc    edx
  40a560:	repnz add DWORD PTR [ebp+0x19b4ebcb],edi
  40a567:	jmp    0xaa91:0xa49bd0e6
  40a56e:	push   ebp
  40a56f:	scas   al,BYTE PTR es:[edi]
  40a570:	sbb    edx,ecx
  40a572:	in     al,dx
  40a573:	test   al,0xbb
  40a575:	push   eax
  40a576:	in     al,0xfb
  40a578:	add    al,0x7d
  40a57a:	sbb    eax,0x2bd9cf66
  40a57f:	mov    ds:0x1ebca1cb,al
  40a584:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a585:	cdq    
  40a586:	inc    eax
  40a587:	int    0xe6
  40a589:	add    eax,0xa390bd99
  40a58e:	push   edx
  40a58f:	jbe    0x40a531
  40a591:	cli    
  40a592:	push   es
  40a593:	loopne 0x40a5ef
  40a595:	les    ebx,FWORD PTR [edx+eiz*1]
  40a598:	mov    al,0x54
  40a59a:	xchg   edx,eax
  40a59b:	aad    0x79
  40a59d:	jle    0x40a551
  40a59f:	retf   
  40a5a0:	stos   DWORD PTR es:[edi],eax
  40a5a1:	push   ecx
  40a5a2:	cmc    
  40a5a3:	mov    edx,0x428baa9b
  40a5a8:	sub    eax,0x32112978
  40a5ad:	or     BYTE PTR [ebp+0xc47befc],ah
  40a5b3:	sbb    al,0x87
  40a5b5:	xchg   ecx,eax
  40a5b6:	or     esp,DWORD PTR [ebp+0x57]
  40a5b9:	ret    0x2e9c
  40a5bc:	sub    al,bh
  40a5be:	cwde   
  40a5bf:	xlat   BYTE PTR ds:[ebx]
  40a5c0:	inc    ebp
  40a5c1:	jo     0x40a575
  40a5c3:	sbb    ebp,ebp
  40a5c5:	out    0x94,eax
  40a5c7:	int3   
  40a5c8:	pop    ss
  40a5c9:	mov    ds:0x21527403,eax
  40a5ce:	fs jns 0x40a55d
  40a5d1:	cwde   
  40a5d2:	cmp    dh,BYTE PTR [ebp-0x48]
  40a5d5:	imul   ebx,DWORD PTR [ebp-0x66],0xfffffffb
  40a5d9:	dec    esi
  40a5da:	pop    edi
  40a5db:	pop    ebp
  40a5dc:	cli    
  40a5dd:	dec    edi
  40a5de:	rcr    BYTE PTR ds:0xf1f2578f,0xf6
  40a5e5:	cld    
  40a5e6:	sub    DWORD PTR [bp+si+0x35],esi
  40a5ea:	jo     0x40a617
  40a5ec:	xlat   BYTE PTR ds:[ebx]
  40a5ed:	cwde   
  40a5ee:	xchg   esp,eax
  40a5ef:	mov    eax,0x28fad366
  40a5f4:	push   es
  40a5f5:	test   DWORD PTR [ebx+edx*1-0x1e],0x25e34498
  40a5fd:	fnsave [ebx+eax*4-0x9fe16b9]
  40a604:	dec    esi
  40a605:	inc    esi
  40a606:	sbb    DWORD PTR [edi],ecx
  40a608:	bound  esi,QWORD PTR [edx+0x33fa2543]
  40a60e:	scas   al,BYTE PTR es:[edi]
  40a60f:	sub    ch,BYTE PTR [ebp+0x242cefde]
  40a615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a616:	js     0x8ffe93e6
  40a61c:	mov    edx,0xa54fd08
  40a621:	mov    edx,0x80e5ed6a
  40a626:	jae    0x40a5eb
  40a628:	outs   dx,BYTE PTR ds:[esi]
  40a629:	shl    BYTE PTR [esi+edi*1],cl
  40a62c:	adc    ecx,DWORD PTR [edi+ebx*1-0x51]
  40a630:	clc    
  40a631:	add    al,0x4b
  40a633:	pop    ecx
  40a634:	push   ebp
  40a635:	addr16 jmp 0x40a5d2
  40a638:	xchg   edi,eax
  40a639:	stos   DWORD PTR es:[edi],eax
  40a63a:	repnz dec esp
  40a63c:	std    
  40a63d:	fs sahf 
  40a63f:	mov    esp,0xb9d02bc7
  40a644:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a645:	(bad)  
  40a646:	popf   
  40a647:	sub    al,0x32
  40a649:	int    0x1e
  40a64b:	outs   dx,BYTE PTR ds:[esi]
  40a64c:	cmp    al,0xd6
  40a64e:	stos   DWORD PTR es:[edi],eax
  40a64f:	push   ds
  40a650:	sub    BYTE PTR [esi],ah
  40a652:	push   es
  40a653:	gs dec ecx
  40a655:	jg     0x40a6a7
  40a657:	adc    DWORD PTR [edi+0x691a53c2],edi
  40a65d:	adc    al,bl
  40a65f:	and    eax,0x77472a7f
  40a664:	scas   eax,DWORD PTR es:[edi]
  40a665:	adc    al,0xc0
  40a667:	int3   
  40a668:	push   0xffffffd8
  40a66a:	mov    ebx,0xb1ff69be
  40a66f:	inc    esi
  40a670:	jmp    0xa784:0x6eeeddf2
  40a677:	lds    ecx,FWORD PTR [ebx+0x78637a48]
  40a67d:	mov    bl,0x47
  40a67f:	loope  0x40a607
  40a681:	add    BYTE PTR [ebx+ebp*8],bh
  40a684:	test   DWORD PTR [edx+esi*4],ecx
  40a687:	or     DWORD PTR [ecx+0x50f29d4b],ecx
  40a68d:	xchg   edx,eax
  40a68e:	inc    DWORD PTR [ebp-0x58c0c20]
  40a694:	jg     0x40a710
  40a696:	sub    DWORD PTR [esi+0x6d47122c],ebp
  40a69c:	cld    
  40a69d:	and    BYTE PTR [ebp+esi*1-0x4cabadba],dh
  40a6a4:	les    esi,FWORD PTR [edi+0x3aeab064]
  40a6aa:	push   ds
  40a6ab:	bound  edx,QWORD PTR [eax+0x73]
  40a6ae:	iret   
  40a6af:	cmp    DWORD PTR [edi-0x704516d1],ecx
  40a6b5:	ret    0x58d9
  40a6b8:	lea    edi,[edx-0x59]
  40a6bb:	(bad)  [eax+ebx*4-0x3]
  40a6bf:	mov    esp,0x9ec2934f
  40a6c4:	xor    dl,BYTE PTR [edx+ebx*2-0x4c081f5d]
  40a6cb:	in     eax,0xd9
  40a6cd:	mov    ecx,0x7ff5c265
  40a6d2:	cli    
  40a6d3:	test   DWORD PTR [ebx],0xf774fe92
  40a6d9:	(bad)  
  40a6da:	jbe    0x40a6a6
  40a6dc:	outs   dx,BYTE PTR ds:[esi]
  40a6dd:	aam    0x9f
  40a6df:	adc    BYTE PTR [edi+0x2d],ah
  40a6e2:	in     eax,dx
  40a6e3:	daa    
  40a6e4:	push   edx
  40a6e5:	add    al,0xbb
  40a6e7:	jno    0x40a6c4
  40a6e9:	and    eax,0xf695a182
  40a6ee:	mov    ah,0x1f
  40a6f0:	inc    esi
  40a6f1:	pop    edx
  40a6f2:	fdiv   DWORD PTR [ecx+0x5d]
  40a6f5:	xchg   edi,eax
  40a6f6:	pop    es
  40a6f7:	stc    
  40a6f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6f9:	jae    0x40a6ae
  40a6fb:	dec    eax
  40a6fc:	ret    
  40a6fd:	dec    esp
  40a6fe:	dec    esp
  40a6ff:	mov    edx,0x83c785e6
  40a704:	add    eax,0x2eb7b816
  40a709:	icebp  
  40a70a:	mov    edx,0xc1e8bb77
  40a70f:	jb     0x40a711
  40a711:	leave  
  40a712:	mov    edi,DWORD PTR [esp+eiz*4]
  40a715:	retf   0x2fd6
  40a718:	in     eax,dx
  40a719:	push   ebp
  40a71a:	jl     0x40a75e
  40a71c:	sti    
  40a71d:	js     0x40a783
  40a71f:	fimul  WORD PTR [ebp+0x768ac09a]
  40a725:	outs   dx,BYTE PTR ds:[esi]
  40a726:	xor    eax,0xf8911f2d
  40a72b:	push   ss
  40a72c:	mov    dl,BYTE PTR [edi+0x241de333]
  40a732:	sub    esp,DWORD PTR [ecx]
  40a734:	jb     0x40a79a
  40a736:	mov    eax,0x91de5754
  40a73b:	xchg   ecx,eax
  40a73c:	sbb    ecx,DWORD PTR [edi+0x41]
  40a73f:	pushf  
  40a740:	lds    edx,FWORD PTR [edx+0x6a]
  40a743:	imul   ebx,DWORD PTR [edi],0x26
  40a746:	leave  
  40a747:	push   0x525e3128
  40a74c:	jmp    0x40a7b1
  40a74e:	data16 or al,0xae
  40a751:	mov    al,ds:0x2ccf67f8
  40a756:	fs push esi
  40a758:	push   es
  40a759:	jne    0x40a6ea
  40a75b:	pop    edx
  40a75c:	out    0xf7,al
  40a75e:	ss (bad) 
  40a760:	mov    eax,0x2a000f82
  40a765:	rcl    DWORD PTR [esi+ecx*2],0xe7
  40a769:	push   0x9f443a62
  40a76e:	sbb    cl,BYTE PTR [edi+0x3110c2a3]
  40a774:	pop    ecx
  40a775:	mov    ebp,0xeefa1353
  40a77a:	jmp    0x40a79a
  40a77c:	or     eax,0x5b8bcded
  40a781:	push   eax
  40a782:	xchg   ebp,eax
  40a783:	push   ecx
  40a784:	sbb    DWORD PTR [ebx+eax*1],0xffffff8c
  40a788:	sahf   
  40a789:	mov    eax,ds:0x3252db85
  40a78e:	xchg   bh,ch
  40a790:	aad    0x37
  40a792:	icebp  
  40a793:	push   edx
  40a794:	adc    ch,al
  40a796:	push   0xffffffe7
  40a798:	pop    ss
  40a799:	jne    0x40a7c0
  40a79b:	cli    
  40a79c:	mov    ah,0xe1
  40a79e:	data16 das 
  40a7a0:	push   edx
  40a7a1:	add    eax,0x57d2c1ee
  40a7a6:	adc    al,0xc1
  40a7a8:	fwait
  40a7a9:	inc    ebp
  40a7aa:	retf   0xefc5
  40a7ad:	into   
  40a7ae:	sub    eax,0x5802790c
  40a7b3:	adc    cl,BYTE PTR [esi-0x4d]
  40a7b6:	inc    ebx
  40a7b7:	pop    ss
  40a7b8:	fadd   QWORD PTR [ebp+0x32e6e373]
  40a7be:	xchg   ebp,eax
  40a7bf:	pop    esp
  40a7c0:	adc    BYTE PTR [edx],dl
  40a7c2:	je     0x40a7d9
  40a7c4:	enter  0x414b,0x95
  40a7c8:	push   edi
  40a7c9:	imul   edx,ecx,0xe86441eb
  40a7cf:	(bad)  
  40a7d0:	jnp    0x40a7a3
  40a7d2:	mov    ah,BYTE PTR [eax-0x4930d694]
  40a7d8:	(bad)  [ecx]
  40a7da:	pop    es
  40a7db:	cmc    
  40a7dc:	inc    edi
  40a7dd:	mov    ebx,0x1e7feb2a
  40a7e2:	mov    ebx,0xbb6cef85
  40a7e7:	and    BYTE PTR [esi+eiz*8],ch
  40a7ea:	push   cs
  40a7eb:	mov    BYTE PTR [edi-0x3f],0x8
  40a7ef:	xchg   cl,bl
  40a7f1:	outs   dx,BYTE PTR ds:[esi]
  40a7f2:	es adc ebp,ecx
  40a7f5:	sar    esp,cl
  40a7f7:	(bad)  [edi]
  40a7f9:	mov    ecx,ecx
  40a7fb:	in     eax,0x6a
  40a7fd:	jl     0x40a81d
  40a7ff:	jns    0x40a7e9
  40a801:	sbb    ecx,ecx
  40a803:	xor    eax,0xffffffaf
  40a806:	je     0x40a79b
  40a808:	add    DWORD PTR [esi-0x7ddd06e8],ecx
  40a80e:	mov    eax,ds:0xfa6ac2d1
  40a813:	push   ebx
  40a814:	loop   0x40a7f1
  40a816:	inc    edx
  40a817:	sub    eax,ecx
  40a819:	cmp    al,0x76
  40a81b:	imul   ecx,DWORD PTR [edx+ebx*1],0xffffffd1
  40a81f:	call   DWORD PTR [ebx-0x10ffdc76]
  40a825:	mov    eax,0xb0eda545
  40a82a:	mov    ebx,ds
  40a82c:	cld    
  40a82d:	ja     0x40a870
  40a82f:	xor    BYTE PTR [ebx+edx*8+0x343f8a82],bl
  40a836:	ss mov esi,esi
  40a839:	jge    0x40a831
  40a83b:	mov    ch,0x7a
  40a83d:	jns    0x40a7fe
  40a83f:	xchg   esi,eax
  40a840:	mov    ds:0x4e18cfe2,eax
  40a845:	lods   al,BYTE PTR ds:[esi]
  40a846:	cmp    eax,0x91443eb5
  40a84b:	dec    edi
  40a84c:	cmp    DWORD PTR [eax+0x3b88a89b],ebx
  40a852:	fwait
  40a853:	cs and ebx,ebp
  40a856:	(bad)  [edi]
  40a858:	movzx  ebp,dl
  40a85b:	ficom  DWORD PTR [edx-0x4bab726b]
  40a861:	repz or esi,DWORD PTR [edi+0x6257a7ca]
  40a868:	inc    ebx
  40a869:	dec    ebx
  40a86a:	and    ch,BYTE PTR [edx]
  40a86c:	xlat   BYTE PTR ds:[ebx]
  40a86d:	inc    DWORD PTR [ebp+0x376a9a]
  40a873:	adc    al,BYTE PTR [ebp+0xcfc3bbf]
  40a879:	fistp  DWORD PTR [ecx+eax*8]
  40a87c:	out    0x5,eax
  40a87e:	popa   
  40a87f:	outs   dx,DWORD PTR ds:[esi]
  40a880:	sub    BYTE PTR [edi+edi*4+0x5806184a],ah
  40a887:	adc    cl,bh
  40a889:	out    dx,eax
  40a88a:	push   fs
  40a88c:	frstor ds:[esi+0x35189aba]
  40a893:	out    0xb5,al
  40a895:	mov    dl,0xfd
  40a897:	ins    BYTE PTR es:[edi],dx
  40a898:	mov    ds:0x6645ebff,al
  40a89d:	rcl    BYTE PTR [edi-0x54],cl
  40a8a0:	dec    edx
  40a8a1:	and    eax,0x4e0eeeb2
  40a8a6:	pop    ebx
  40a8a7:	add    BYTE PTR [ebx-0x23],ch
  40a8aa:	fst    QWORD PTR [ebx+0x523acb18]
  40a8b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8b1:	shl    BYTE PTR ds:0xbfaca1d1,0xa9
  40a8b8:	add    al,0x96
  40a8ba:	mov    al,0xa4
  40a8bc:	mov    dh,0x7c
  40a8be:	outs   dx,DWORD PTR ds:[esi]
  40a8bf:	cmp    ah,al
  40a8c1:	sub    DWORD PTR [ebx+esi*8-0x548c3fd6],ebp
  40a8c8:	push   ss
  40a8c9:	enter  0xc93a,0x2c
  40a8cd:	out    0x6,al
  40a8cf:	out    dx,al
  40a8d0:	mov    ecx,0x41ef0c52
  40a8d5:	xchg   ebx,eax
  40a8d6:	dec    edi
  40a8d7:	push   0xff4b9b17
  40a8dc:	inc    esp
  40a8dd:	rcl    BYTE PTR [edx+eiz*1],cl
  40a8e0:	rol    BYTE PTR [edi+0xfe0db64],1
  40a8e6:	xchg   DWORD PTR [esi*4-0x1683d75f],esi
  40a8ed:	stc    
  40a8ee:	(bad)  
  40a8ef:	fstp   QWORD PTR [edi]
  40a8f1:	jns    0x40a8f1
  40a8f3:	in     al,dx
  40a8f4:	dec    edx
  40a8f5:	push   edx
  40a8f6:	sbb    dl,BYTE PTR [edx-0x6a]
  40a8f9:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40a8fb:	push   es
  40a8fc:	fdiv   st(7),st
  40a8fe:	rcr    ebp,0x1
  40a901:	jecxz  0x40a89f
  40a903:	test   DWORD PTR [ecx+0x70835940],ecx
  40a909:	aad    0x79
  40a90b:	ja     0x40a8de
  40a90d:	(bad)  
  40a90e:	adc    DWORD PTR [esi],edi
  40a910:	cld    
  40a911:	addr16 aam 0x9f
  40a914:	xor    eax,0xb688af85
  40a919:	sbb    al,0xaf
  40a91b:	imul   esi,DWORD PTR [ebx-0x4afea260],0xa
  40a922:	arpl   WORD PTR [eax+0x5413137e],cx
  40a928:	mov    ds:0x9101470d,al
  40a92d:	(bad)  
  40a92e:	out    dx,al
  40a92f:	or     ah,BYTE PTR [edi]
  40a931:	xchg   ebp,eax
  40a932:	aaa    
  40a933:	jns    0x40a920
  40a935:	and    BYTE PTR [edi],bh
  40a937:	adc    BYTE PTR [ebp+0x43],bh
  40a93a:	push   ecx
  40a93b:	mov    DWORD PTR [esi+0x6f516fbe],ebx
  40a941:	inc    eax
  40a942:	aad    0xe5
  40a944:	jno    0x40a8e1
  40a946:	or     bl,BYTE PTR [ecx+edi*2]
  40a949:	xlat   BYTE PTR ds:[ebx]
  40a94a:	adc    BYTE PTR [ebx+0x39bc0a42],bh
  40a950:	and    edi,DWORD PTR [ebp-0xfc93511]
  40a956:	ins    DWORD PTR es:[edi],dx
  40a957:	cmp    eax,0x2e86d10d
  40a95c:	xchg   DWORD PTR [ebx+0x6d],esp
  40a95f:	pop    ebx
  40a960:	repnz dec edx
  40a962:	sbb    eax,0x603aeedf
  40a967:	ss dec ebp
  40a969:	(bad)  
  40a96a:	retf   0x4528
  40a96d:	push   es
  40a96e:	imul   edi,ecx,0xbe720a94
  40a974:	xchg   ebp,eax
  40a975:	stos   BYTE PTR es:[edi],al
  40a976:	dec    ebx
  40a977:	add    BYTE PTR [edi+0x7b],ah
  40a97a:	xchg   edx,eax
  40a97b:	inc    ebp
  40a97c:	push   ebx
  40a97d:	pop    edx
  40a97e:	pop    ds
  40a97f:	adc    al,0xe3
  40a981:	pushf  
  40a982:	aam    0xa2
  40a984:	xchg   edx,eax
  40a985:	xor    DWORD PTR [ebx+0x74],edi
  40a988:	ss mov bl,0xc5
  40a98b:	push   0x67
  40a98d:	mov    ah,0x29
  40a98f:	add    dl,BYTE PTR [eax+eiz*4]
  40a992:	push   ebp
  40a993:	xor    esp,ecx
  40a995:	mov    ch,0x89
  40a997:	bound  ecx,QWORD PTR [eax+0x41d27771]
  40a99d:	addr16 mov ebp,0xcd107dc9
  40a9a3:	xchg   esp,eax
  40a9a4:	jnp    0x40a9a2
  40a9a6:	mov    al,0x9a
  40a9a8:	xchg   BYTE PTR [edx+0x67b36cee],cl
  40a9ae:	outs   dx,BYTE PTR ds:[esi]
  40a9af:	bt     DWORD PTR [edi],ecx
  40a9b2:	and    BYTE PTR [edi+0x7204d8d9],0x46
  40a9b9:	aaa    
  40a9ba:	sub    esp,DWORD PTR [ebp+esi*1-0x26]
  40a9be:	xchg   edx,eax
  40a9bf:	(bad)  
  40a9c0:	repnz fcomp QWORD PTR [edx+0x39788d89]
  40a9c7:	(bad)  
  40a9c8:	jmp    0xfe32fd9b
  40a9cd:	inc    ebx
  40a9ce:	inc    ecx
  40a9cf:	call   0x87fc:0xd749e6c8
  40a9d6:	pop    edi
  40a9d7:	test   DWORD PTR ds:0x92837fe1,ebx
  40a9dd:	jns    0x40aa36
  40a9df:	xlat   BYTE PTR ds:[ebx]
  40a9e0:	das    
  40a9e1:	or     eax,DWORD PTR [ebx]
  40a9e3:	inc    ebx
  40a9e4:	adc    eax,0x2ce8fe14
  40a9e9:	xor    bh,BYTE PTR [ecx+0x6f]
  40a9ec:	ror    BYTE PTR [esi+0x2ca71da1],1
  40a9f2:	loopne 0x40aa29
  40a9f4:	mov    cl,0xc9
  40a9f6:	pop    edx
  40a9f7:	aad    0xa6
  40a9f9:	inc    ebx
  40a9fa:	arpl   WORD PTR [edi+0x7e4d69ca],di
  40aa00:	popa   
  40aa01:	je     0x40a99f
  40aa03:	jb     0x40a9d1
  40aa05:	call   0x12d67136
  40aa0a:	retf   0xdd9b
  40aa0d:	mov    gs,WORD PTR [eax+0x4c]
  40aa10:	in     eax,dx
  40aa11:	add    BYTE PTR [eax+eiz*2+0x2e],ah
  40aa15:	(bad)  
  40aa16:	scas   eax,DWORD PTR es:[edi]
  40aa17:	push   0xc
  40aa19:	adc    esi,ebp
  40aa1b:	push   edx
  40aa1c:	pop    edx
  40aa1d:	adc    DWORD PTR [esi],eax
  40aa1f:	cld    
  40aa20:	xor    BYTE PTR [ecx-0x64470fe4],ah
  40aa26:	xor    eax,0x9a728c2d
  40aa2b:	add    al,0xff
  40aa2d:	adc    eax,0x425014
  40aa32:	push   0x97898797
  40aa37:	or     DWORD PTR ds:0x42a008,0x42d008
  40aa41:	call   DWORD PTR ds:0x425004
  40aa47:	and    DWORD PTR ds:0x42c01c,0x0
  40aa51:	mov    ebx,DWORD PTR ds:0x42c01c
  40aa57:	inc    ebx
  40aa58:	mov    DWORD PTR ds:0x42c01c,ebx
  40aa5e:	cmp    DWORD PTR ds:0x42c01c,0x5
  40aa65:	jne    0x40aa76
  40aa6b:	push   0x57f5
  40aa70:	call   DWORD PTR ds:0x42504c
  40aa76:	cmp    DWORD PTR ds:0x42c01c,0x4
  40aa7d:	jne    0x40aa92
  40aa83:	xor    ebx,ebx
  40aa85:	xor    ebx,DWORD PTR ds:0x42c01c
  40aa8b:	inc    ebx
  40aa8c:	mov    DWORD PTR ds:0x42c01c,ebx
  40aa92:	cmp    DWORD PTR ds:0x42c01c,0x10
  40aa99:	jb     0x40aa51
  40aa9f:	xor    eax,eax
  40aaa1:	xor    eax,DWORD PTR ds:0x42a014
  40aaa7:	xor    DWORD PTR ds:0x42d018,eax
  40aaad:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  40aab4:	or     ecx,DWORD PTR ds:0x42d008
  40aaba:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40aac1:	mov    ecx,DWORD PTR [ebp-0x4]
  40aac4:	or     DWORD PTR ds:0x42b014,edi
  40aaca:	mov    ebx,0x7510893
  40aacf:	xor    eax,eax
  40aad1:	or     eax,DWORD PTR ds:0x423e60
  40aad7:	mov    eax,DWORD PTR [eax]
  40aad9:	or     DWORD PTR ds:0x42d018,eax
  40aadf:	xor    ecx,ebx
  40aae1:	not    eax
  40aae3:	mov    eax,0x3272db
  40aae8:	or     DWORD PTR ds:0x42c010,0x42900c
  40aaf2:	add    ecx,eax
  40aaf4:	mov    DWORD PTR [ebp-0x1c],ecx
  40aaf7:	mov    DWORD PTR ds:0x42c014,0x14
  40ab01:	cmp    DWORD PTR ds:0x42c014,0x0
  40ab08:	je     0x40aba7
  40ab0e:	cmp    DWORD PTR ds:0x42c014,0x2
  40ab15:	jne    0x40ab29
  40ab1b:	push   DWORD PTR [ebp-0x28]
  40ab1e:	push   0x42456e
  40ab23:	call   DWORD PTR ds:0x425010
  40ab29:	cmp    DWORD PTR ds:0x42c014,0x3
  40ab30:	jne    0x40ab43
  40ab36:	mov    ecx,DWORD PTR ds:0x42c014
  40ab3c:	dec    ecx
  40ab3d:	mov    DWORD PTR ds:0x42c014,ecx
  40ab43:	mov    ecx,DWORD PTR ds:0x42c014
  40ab49:	dec    ecx
  40ab4a:	mov    DWORD PTR ds:0x42c014,ecx
  40ab50:	jmp    0x40ab01
  40ab55:	mov    DWORD PTR ds:0x42a018,0x12
  40ab5f:	cmp    DWORD PTR ds:0x42a018,0x0
  40ab66:	je     0x40aba7
  40ab6c:	cmp    DWORD PTR ds:0x42a018,0x1a
  40ab73:	jne    0x40ab85
  40ab79:	push   DWORD PTR [ebp-0x1c]
  40ab7c:	push   DWORD PTR [ebp-0x18]
  40ab7f:	call   DWORD PTR ds:0x425018
  40ab85:	mov    ecx,DWORD PTR ds:0x42a018
  40ab8b:	dec    ecx
  40ab8c:	mov    DWORD PTR ds:0x42a018,ecx
  40ab92:	jmp    0x40ab5f
  40ab97:	xor    ecx,ecx
  40ab99:	xor    ecx,DWORD PTR ds:0x4245d7
  40ab9f:	mov    ecx,DWORD PTR [ecx]
  40aba1:	sbb    DWORD PTR ds:0x42a00c,ecx
  40aba7:	mov    ecx,DWORD PTR [ebp+0x14]
  40abaa:	test   ecx,ecx
  40abac:	je     0x40ac29
  40abb2:	and    DWORD PTR ds:0x42c014,edi
  40abb8:	mov    ecx,DWORD PTR [ebp+0x14]
  40abbb:	mov    DWORD PTR ds:0x42c014,0x11
  40abc5:	cmp    DWORD PTR ds:0x42c014,0x0
  40abcc:	je     0x40ac1e
  40abd2:	cmp    DWORD PTR ds:0x42c014,0x5
  40abd9:	jne    0x40abf2
  40abdf:	push   0x429028
  40abe4:	push   DWORD PTR [ebp-0x20]
  40abe7:	push   0x4243e2
  40abec:	call   DWORD PTR ds:0x42501c
  40abf2:	cmp    DWORD PTR ds:0x42c014,0x6
  40abf9:	jne    0x40ac0c
  40abff:	mov    edi,DWORD PTR ds:0x42c014
  40ac05:	dec    edi
  40ac06:	mov    DWORD PTR ds:0x42c014,edi
  40ac0c:	mov    edi,DWORD PTR ds:0x42c014
  40ac12:	dec    edi
  40ac13:	mov    DWORD PTR ds:0x42c014,edi
  40ac19:	jmp    0x40abc5
  40ac1e:	mov    ecx,DWORD PTR [ecx]
  40ac20:	xor    DWORD PTR ds:0x42a018,ecx
  40ac26:	mov    DWORD PTR [ebp-0x1c],ecx
  40ac29:	adc    DWORD PTR ds:0x429024,edi
  40ac2f:	mov    ecx,0x7665
  40ac34:	imul   edx,eax
  40ac37:	mov    DWORD PTR ds:0x42d00c,0x1b
  40ac41:	cmp    DWORD PTR ds:0x42d00c,0x0
  40ac48:	je     0x40ac9b
  40ac4e:	cmp    DWORD PTR ds:0x42d00c,0x4
  40ac55:	jne    0x40ac69
  40ac5b:	push   0x429020
  40ac60:	push   DWORD PTR [ebp-0x1c]
  40ac63:	call   DWORD PTR ds:0x425020
  40ac69:	cmp    DWORD PTR ds:0x42d00c,0x5
  40ac70:	jne    0x40ac83
  40ac76:	mov    edi,DWORD PTR ds:0x42d00c
  40ac7c:	dec    edi
  40ac7d:	mov    DWORD PTR ds:0x42d00c,edi
  40ac83:	mov    edi,DWORD PTR ds:0x42d00c
  40ac89:	dec    edi
  40ac8a:	mov    DWORD PTR ds:0x42d00c,edi
  40ac90:	jmp    0x40ac41
  40ac95:	xor    DWORD PTR ds:0x42b010,edi
  40ac9b:	mov    esi,0x76532
  40aca0:	add    edx,ecx
  40aca2:	xchg   esi,ecx
  40aca4:	or     edi,esi
  40aca6:	mov    edi,0x54354
  40acab:	movzx  ecx,BYTE PTR ds:0x42901c
  40acb2:	sbb    DWORD PTR ds:0x429000,ecx
  40acb8:	sub    edx,edi
  40acba:	mov    ecx,DWORD PTR [ebp-0x4]
  40acbd:	sbb    DWORD PTR ds:0x429028,0x4a48
  40acc7:	xor    ecx,ebx
  40acc9:	and    esi,DWORD PTR ds:0x42900c
  40accf:	add    ecx,eax
  40acd1:	mov    DWORD PTR [ebp-0x8],ecx
  40acd4:	mov    DWORD PTR ds:0x42b014,0x169
  40acde:	mov    ecx,DWORD PTR [ebp-0x14]
  40ace1:	add    esi,DWORD PTR ds:0x42b000
  40ace7:	xor    ecx,ebx
  40ace9:	add    DWORD PTR ds:0x42d00c,0x42d004
  40acf3:	add    ecx,eax
  40acf5:	mov    DWORD PTR [ebp-0x24],ecx
  40acf8:	and    esi,esi
  40acfa:	mov    ecx,DWORD PTR [ebp-0x4]
  40acfd:	and    DWORD PTR ds:0x42b000,0x0
  40ad07:	jmp    0x40ad19
  40ad0c:	mov    esi,DWORD PTR ds:0x42b000
  40ad12:	inc    esi
  40ad13:	mov    DWORD PTR ds:0x42b000,esi
  40ad19:	cmp    DWORD PTR ds:0x42b000,0x10
  40ad20:	jae    0x40ad70
  40ad26:	cmp    DWORD PTR ds:0x42b000,0x4
  40ad2d:	jne    0x40ad3e
  40ad33:	push   0x8810
  40ad38:	call   DWORD PTR ds:0x425028
  40ad3e:	cmp    DWORD PTR ds:0x42b000,0x3
  40ad45:	jne    0x40ad58
  40ad4b:	mov    esi,DWORD PTR ds:0x42b000
  40ad51:	inc    esi
  40ad52:	mov    DWORD PTR ds:0x42b000,esi
  40ad58:	jmp    0x40ad0c
  40ad5d:	movzx  esi,WORD PTR ds:0x42d00c
  40ad64:	adc    esi,DWORD PTR ds:0x42b018
  40ad6a:	mov    DWORD PTR ds:0x42d00c,esi
  40ad70:	xor    ecx,ebx
  40ad72:	add    ecx,eax
  40ad74:	add    esi,0x75ba
  40ad7a:	mov    DWORD PTR [ebp-0x30],ecx
  40ad7d:	or     ecx,DWORD PTR ds:0x42c010
  40ad83:	mov    esi,DWORD PTR [ebp-0x4]
  40ad86:	inc    ecx
  40ad87:	xor    esi,ebx
  40ad89:	mov    ecx,DWORD PTR ds:0x4245bf
  40ad8f:	mov    ecx,DWORD PTR [ecx]
  40ad91:	adc    DWORD PTR ds:0x429020,ecx
  40ad97:	add    esi,eax
  40ad99:	mov    ecx,DWORD PTR [ebp-0x24]
  40ad9c:	sub    DWORD PTR ds:0x42c010,0x42c004
  40ada6:	sub    ecx,eax
  40ada8:	lea    edx,[esi-0x3272db]
  40adae:	xor    DWORD PTR ds:0x42a004,0x429028
  40adb8:	xor    ecx,ebx
  40adba:	xor    edx,ebx
  40adbc:	mov    DWORD PTR ds:0x42b00c,0x3cf6
  40adc6:	cmp    edx,ecx
  40adc8:	mov    DWORD PTR ds:0x42a008,0x130c
  40add2:	je     0x40afdf
  40add8:	sub    ecx,0x2467
  40adde:	mov    ecx,DWORD PTR [ebp-0x4]
  40ade1:	and    DWORD PTR ds:0x42c00c,0x42d01c
  40adeb:	xor    ecx,ebx
  40aded:	add    DWORD PTR ds:0x42b018,0x2ea9
  40adf7:	add    ecx,eax
  40adf9:	mov    DWORD PTR ds:0x42b000,0x737d
  40ae03:	cmp    esi,ecx
  40ae05:	mov    DWORD PTR ds:0x42b018,0x3d4e
  40ae0f:	jne    0x40afbc
  40ae15:	push   DWORD PTR [ebp+0x8]
  40ae18:	call   0x423be6
  40ae1d:	mov    DWORD PTR [ebp-0x18],eax
  40ae20:	mov    eax,DWORD PTR [ebp-0x4]
  40ae23:	xor    edi,ecx
  40ae25:	mov    ecx,DWORD PTR [ebp-0x18]
  40ae28:	xor    eax,ebx
  40ae2a:	and    DWORD PTR ds:0x42901c,0x0
  40ae34:	jmp    0x40ae46
  40ae39:	mov    edi,DWORD PTR ds:0x42901c
  40ae3f:	inc    edi
  40ae40:	mov    DWORD PTR ds:0x42901c,edi
  40ae46:	cmp    DWORD PTR ds:0x42901c,0x1d
  40ae4d:	jae    0x40ae90
  40ae53:	cmp    DWORD PTR ds:0x42901c,0x2c
  40ae5a:	jne    0x40ae85
  40ae60:	push   0x61ef
  40ae65:	push   0x288b
  40ae6a:	push   0x42d018
  40ae6f:	push   DWORD PTR [ebp-0x28]
  40ae72:	push   0x2975
  40ae77:	push   DWORD PTR [ebp-0x24]
  40ae7a:	push   0x26ce
  40ae7f:	call   DWORD PTR ds:0x42502c
  40ae85:	jmp    0x40ae39
  40ae8a:	or     DWORD PTR ds:0x42c010,ebx
  40ae90:	mov    edi,0x3272db
  40ae95:	add    eax,edi
  40ae97:	mov    DWORD PTR ds:0x42901c,0x5f35
  40aea1:	cmp    ecx,eax
  40aea3:	mov    DWORD PTR ds:0x42c018,0x19df
  40aead:	je     0x40b04f
  40aeb3:	sub    DWORD PTR ds:0x42d018,0x5f9c
  40aebd:	push   DWORD PTR [ebp-0x18]
  40aec0:	and    DWORD PTR ds:0x42b018,0x42b000
  40aeca:	push   DWORD PTR [ebp+0x8]
  40aecd:	dec    DWORD PTR ds:0x42a00c
  40aed3:	call   0x423cc5
  40aed8:	or     DWORD PTR ds:0x42a014,0x42a00c
  40aee2:	mov    DWORD PTR [ebp-0x18],eax
  40aee5:	mov    eax,DWORD PTR [ebp-0x4]
  40aee8:	sbb    DWORD PTR ds:0x42a010,0x3b6d
  40aef2:	mov    ecx,DWORD PTR [ebp-0x18]
  40aef5:	xor    eax,ebx
  40aef7:	add    DWORD PTR ds:0x429004,0x42d004
  40af01:	add    eax,edi
  40af03:	mov    DWORD PTR ds:0x42a018,0x317f
  40af0d:	cmp    ecx,eax
  40af0f:	je     0x40b04f
  40af15:	mov    eax,DWORD PTR [ebp-0x18]
  40af18:	mov    eax,DWORD PTR [eax+0x18]
  40af1b:	mov    ecx,DWORD PTR ds:0x42d000
  40af21:	xor    DWORD PTR ds:0x42a014,ecx
  40af27:	mov    DWORD PTR [ebp-0x24],eax
  40af2a:	mov    eax,DWORD PTR [ebp-0x18]
  40af2d:	and    DWORD PTR ds:0x42b018,0x0
  40af37:	jmp    0x40af49
  40af3c:	mov    ecx,DWORD PTR ds:0x42b018
  40af42:	inc    ecx
  40af43:	mov    DWORD PTR ds:0x42b018,ecx
  40af49:	cmp    DWORD PTR ds:0x42b018,0x16
  40af50:	jae    0x40af77
  40af56:	cmp    DWORD PTR ds:0x42b018,0x20
  40af5d:	jne    0x40af6c
  40af63:	push   DWORD PTR [ebp-0x28]
  40af66:	call   DWORD PTR ds:0x425030
  40af6c:	jmp    0x40af3c
  40af71:	xor    ecx,DWORD PTR ds:0x42b01c
  40af77:	mov    ecx,DWORD PTR [ebp+0x8]
  40af7a:	add    ecx,DWORD PTR [eax+0x20]
  40af7d:	sub    eax,DWORD PTR ds:0x429024
  40af83:	mov    DWORD PTR [ebp-0x2c],ecx
  40af86:	mov    eax,DWORD PTR [ebp-0x18]
  40af89:	inc    ecx
  40af8a:	mov    ecx,DWORD PTR [ebp+0x8]
  40af8d:	add    ecx,DWORD PTR [eax+0x24]
  40af90:	mov    DWORD PTR [ebp-0x34],ecx
  40af93:	xor    DWORD PTR ds:0x42a004,edi
  40af99:	mov    eax,DWORD PTR [ebp-0x18]
  40af9c:	or     DWORD PTR ds:0x42a000,ebx
  40afa2:	mov    ecx,DWORD PTR [ebp+0x8]
  40afa5:	or     DWORD PTR ds:0x42a008,0x109d
  40afaf:	add    ecx,DWORD PTR [eax+0x1c]
  40afb2:	mov    eax,edi
  40afb4:	mov    DWORD PTR [ebp-0x18],ecx
  40afb7:	jmp    0x40b017
  40afbc:	mov    ecx,DWORD PTR [ebp-0x2c]
  40afbf:	mov    edx,DWORD PTR [ebp+0x8]
  40afc2:	add    edx,DWORD PTR [ecx+esi*4]
  40afc5:	mov    DWORD PTR [ebp-0x28],edx
  40afc8:	mov    ecx,DWORD PTR [ebp-0x4]
  40afcb:	mov    edx,DWORD PTR [ebp-0x28]
  40afce:	xor    ecx,ebx
  40afd0:	add    ecx,eax
  40afd2:	cmp    edx,ecx
  40afd4:	je     0x40b017
  40afda:	jmp    0x40b003
  40afdf:	mov    ecx,DWORD PTR [ebp-0x4]
  40afe2:	mov    edx,DWORD PTR [ebp-0x8]
  40afe5:	xor    ecx,ebx
  40afe7:	add    ecx,eax
  40afe9:	cmp    edx,ecx
  40afeb:	je     0x40b05b
  40aff1:	mov    ecx,DWORD PTR [ebp-0x4]
  40aff4:	mov    edx,DWORD PTR [ebp-0x30]
  40aff7:	xor    ecx,ebx
  40aff9:	add    ecx,eax
  40affb:	cmp    edx,ecx
  40affd:	je     0x40b06a
  40b003:	lea    eax,[ebp-0x8]
  40b006:	push   eax
  40b007:	push   DWORD PTR [ebp-0x28]
  40b00a:	push   DWORD PTR [ebp+0xc]
  40b00d:	call   0x401058
  40b012:	mov    eax,0x3272db
  40b017:	mov    ecx,DWORD PTR [ebp-0x4]
  40b01a:	mov    edx,DWORD PTR [ebp-0x8]
  40b01d:	xor    ecx,ebx
  40b01f:	add    ecx,eax
  40b021:	cmp    edx,ecx
  40b023:	je     0x40b03e
  40b029:	mov    ecx,DWORD PTR [ebp-0x34]
  40b02c:	movzx  ecx,WORD PTR [ecx+esi*2]
  40b030:	mov    edx,DWORD PTR [ebp-0x18]
  40b033:	mov    ecx,DWORD PTR [edx+ecx*4]
  40b036:	mov    DWORD PTR [ebp-0x38],ecx
  40b039:	jmp    0x40afdf
  40b03e:	mov    ecx,DWORD PTR [ebp-0x14]
  40b041:	xor    ecx,ebx
  40b043:	lea    esi,[esi+ecx*1+0x3272db]
  40b04a:	jmp    0x40ad99
  40b04f:	mov    eax,DWORD PTR [ebp-0x4]
  40b052:	xor    eax,ebx
  40b054:	add    eax,edi
  40b056:	jmp    0x40f898
  40b05b:	mov    eax,DWORD PTR [ebp-0x4]
  40b05e:	xor    eax,ebx
  40b060:	add    eax,0x3272db
  40b065:	jmp    0x40f898
  40b06a:	mov    ecx,DWORD PTR [ebp-0x38]
  40b06d:	add    ecx,DWORD PTR [ebp+0x8]
  40b070:	mov    DWORD PTR [ebp-0x10],ecx
  40b073:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b076:	test   ecx,ecx
  40b078:	je     0x40d4be
  40b07e:	mov    DWORD PTR [ebp-0x20],0x0
  40b085:	push   0x3
  40b087:	xor    edx,edx
  40b089:	pop    edx
  40b08a:	add    edx,0x8
  40b08d:	push   edx
  40b08e:	pop    ecx
  40b08f:	push   0x6
  40b091:	dec    ecx
  40b092:	pop    ebx
  40b093:	dec    ebx
  40b094:	xchg   ebx,ecx
  40b096:	sub    ebx,ecx
  40b098:	xchg   ebx,ecx
  40b09a:	dec    ecx
  40b09b:	mov    eax,DWORD PTR [ebp-0x1c]
  40b09e:	imul   eax,ecx
  40b0a1:	sub    esp,eax
  40b0a3:	mov    DWORD PTR [ebp-0x20],esp
  40b0a6:	mov    eax,DWORD PTR [ebp-0x4]
  40b0a9:	mov    ecx,0x7510893
  40b0ae:	xor    eax,ecx
  40b0b0:	mov    edx,0x3272db
  40b0b5:	add    eax,edx
  40b0b7:	mov    DWORD PTR [ebp+0x8],eax
  40b0ba:	mov    eax,DWORD PTR [ebp-0x14]
  40b0bd:	xor    eax,ecx
  40b0bf:	add    eax,edx
  40b0c1:	mov    edx,DWORD PTR [ebp+0x14]
  40b0c4:	jmp    0x40d429
  40b0c9:	fidiv  DWORD PTR [ecx+0x21]
  40b0cc:	jb     0x40b137
  40b0ce:	xor    ch,BYTE PTR [ecx-0x57]
  40b0d1:	ss pop es
  40b0d3:	add    eax,0xe298a59b
  40b0d8:	aaa    
  40b0d9:	call   0x3aa313d3
  40b0de:	pop    edi
  40b0df:	bound  esp,QWORD PTR [edx-0x18]
  40b0e2:	ret    0xa020
  40b0e5:	pcmpgtw mm2,QWORD PTR [ebx+0x4c]
  40b0e9:	mov    al,ds:0x698d8ea
  40b0ee:	inc    esi
  40b0ef:	int3   
  40b0f0:	test   DWORD PTR [edx+0x361aaf18],edi
  40b0f6:	int    0x71
  40b0f8:	inc    esp
  40b0f9:	lahf   
  40b0fa:	mov    dl,0xd5
  40b0fc:	jmp    0x5b38:0xeecc1841
  40b103:	xchg   edi,eax
  40b104:	pushf  
  40b105:	ss xor eax,0x37399006
  40b10b:	rcr    dl,1
  40b10d:	gs sub al,0xaa
  40b110:	pop    ebx
  40b111:	aas    
  40b112:	jp     0x40b0ca
  40b114:	popa   
  40b115:	xor    al,0xfc
  40b117:	and    BYTE PTR [edi+0x790b92de],dl
  40b11d:	lahf   
  40b11e:	out    0x30,al
  40b120:	repnz sub BYTE PTR [edi-0x79158ff2],0x99
  40b128:	cwde   
  40b129:	add    eax,0xa07d6344
  40b12e:	das    
  40b12f:	pop    ecx
  40b130:	scas   al,BYTE PTR es:[edi]
  40b131:	pop    ss
  40b132:	add    DWORD PTR [ebx],eax
  40b134:	shl    ebx,1
  40b136:	sar    BYTE PTR [ebp+0x4a],cl
  40b139:	add    eax,eax
  40b13b:	and    ch,BYTE PTR [esi+0x55]
  40b13e:	(bad)  
  40b13f:	shr    BYTE PTR [ebp+0x61],0xf0
  40b143:	or     eax,0xc3c2485d
  40b148:	sbb    eax,0x4b6c6830
  40b14d:	repz fnstcw WORD PTR [eax]
  40b150:	adc    al,0xce
  40b152:	fsub   st,st(6)
  40b154:	out    0xad,eax
  40b156:	icebp  
  40b157:	xor    DWORD PTR [ecx+0x62],eax
  40b15a:	mov    ds:0xc52954bf,al
  40b15f:	add    al,0xe7
  40b161:	enter  0x6b7b,0x78
  40b165:	clc    
  40b166:	mov    si,0xb4e7
  40b16a:	imul   ebp,DWORD PTR [ebx+0x386786c6],0x11f94ad8
  40b174:	mov    ecx,0x2e7d6b2b
  40b179:	sbb    DWORD PTR [ecx],0x31d2bea9
  40b17f:	rcl    BYTE PTR [edi+0x62],1
  40b182:	loopne 0x40b1c4
  40b184:	addr16 pop es
  40b186:	inc    esp
  40b187:	dec    dl
  40b189:	out    dx,al
  40b18a:	mov    ecx,0x522385e8
  40b18f:	push   es
  40b190:	sub    BYTE PTR [ebx+edi*1+0x65d7facd],dl
  40b197:	and    edx,DWORD PTR [ebp-0x39]
  40b19a:	adc    al,0x4c
  40b19c:	inc    ecx
  40b19d:	mov    ah,0x6e
  40b19f:	jg     0x40b1c5
  40b1a1:	mov    ebp,0x12dc89c9
  40b1a6:	fwait
  40b1a7:	inc    esi
  40b1a8:	neg    BYTE PTR [edx-0xb6ef74e]
  40b1ae:	mov    esp,0xf33c71cd
  40b1b3:	pushf  
  40b1b4:	lock or DWORD PTR [ebp+0x1721bc69],ebx
  40b1bb:	cmp    BYTE PTR [edi+edx*8+0x18],dh
  40b1bf:	mov    DWORD PTR [edx+0x5b276760],eax
  40b1c5:	mov    dh,0x52
  40b1c7:	or     dl,BYTE PTR [esi]
  40b1c9:	ins    BYTE PTR es:[edi],dx
  40b1ca:	jnp    0x40b1d1
  40b1cc:	push   esi
  40b1cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1ce:	rcl    BYTE PTR [eax],0x94
  40b1d1:	std    
  40b1d2:	fwait
  40b1d3:	xchg   DWORD PTR [ecx+0x4bac55b6],ecx
  40b1d9:	xor    eax,0xaac2f1f0
  40b1de:	pop    esp
  40b1df:	in     al,0x98
  40b1e1:	mov    BYTE PTR [esi+ebp*4],cl
  40b1e4:	pop    es
  40b1e5:	inc    ecx
  40b1e6:	rol    dl,cl
  40b1e8:	enter  0x298f,0xb9
  40b1ec:	cmp    eax,DWORD PTR [esi-0xc229345]
  40b1f2:	mov    dh,0xef
  40b1f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1f5:	rcr    esi,1
  40b1f7:	nop
  40b1f8:	pushf  
  40b1f9:	test   DWORD PTR [esp+eax*8+0x7fd64d3d],0x5a27640b
  40b204:	(bad)  
  40b205:	pop    eax
  40b206:	jbe    0x40b226
  40b208:	mov    ah,0xc3
  40b20a:	mov    cl,0x1c
  40b20c:	xchg   edi,eax
  40b20d:	test   al,0x29
  40b20f:	sar    DWORD PTR [ebp+0x628ff9a1],0xaa
  40b216:	enter  0xa27a,0xa6
  40b21a:	lods   al,BYTE PTR ds:[esi]
  40b21b:	stc    
  40b21c:	sahf   
  40b21d:	add    al,0x7b
  40b21f:	addr16 mov eax,ds:0x1a87
  40b223:	cli    
  40b224:	jp     0x40b24e
  40b226:	jmp    0x40b298
  40b228:	mov    al,ds:0x1479e877
  40b22d:	jge    0x40b217
  40b22f:	(bad)  
  40b230:	push   esi
  40b231:	jmp    FWORD PTR [ebx+0x1d5560e2]
  40b237:	out    dx,eax
  40b238:	jge    0x40b254
  40b23a:	push   DWORD PTR [esi-0xc]
  40b23d:	inc    ebx
  40b23e:	jg     0x40b26d
  40b240:	pusha  
  40b241:	mov    ds,ebx
  40b243:	fnstcw WORD PTR [esi]
  40b245:	dec    esp
  40b246:	jns    0x40b258
  40b248:	push   es
  40b249:	mov    ah,0x13
  40b24b:	sub    dh,BYTE PTR [edx+0x2b68514]
  40b251:	push   esi
  40b252:	xchg   ecx,eax
  40b253:	cdq    
  40b254:	jno    0x40b289
  40b256:	mov    edi,edx
  40b258:	mov    esi,0x9daf31cf
  40b25d:	mov    edi,0x7bbecde2
  40b262:	nop
  40b263:	hlt    
  40b264:	mov    esp,0xe25cf369
  40b269:	sbb    bl,dh
  40b26b:	jo     0x40b22c
  40b26d:	dec    ecx
  40b26e:	(bad)  
  40b26f:	sbb    BYTE PTR [ebp-0x381fdec0],bh
  40b275:	test   al,0x92
  40b277:	sub    al,0x90
  40b279:	pop    esp
  40b27a:	retf   0x90fe
  40b27d:	sub    DWORD PTR [ecx],edx
  40b27f:	add    eax,0x2cb88f17
  40b284:	fnstsw WORD PTR [edi-0x31]
  40b287:	mov    ch,0x19
  40b289:	sub    ebx,DWORD PTR [edi-0x1e]
  40b28c:	pop    esp
  40b28d:	test   eax,0x1c747646
  40b292:	push   DWORD PTR [esi+0x4489b417]
  40b298:	jno    0x40b298
  40b29a:	mov    ds:0x42914804,al
  40b29f:	add    BYTE PTR [esi+edi*1+0x50],al
  40b2a3:	mov    DWORD PTR [esi],ebp
  40b2a5:	mov    esp,0xb4f55a7e
  40b2aa:	mov    cl,BYTE PTR [esi]
  40b2ac:	repz pop eax
  40b2ae:	sub    esi,DWORD PTR [esi-0x3fdf1877]
  40b2b4:	out    0xb,al
  40b2b6:	or     DWORD PTR [eax],0x73
  40b2b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2ba:	in     al,0xb6
  40b2bc:	jnp    0x40b288
  40b2be:	imul   esi,DWORD PTR [ecx+0x22],0x8c64f62e
  40b2c5:	loop   0x40b2a5
  40b2c7:	inc    edx
  40b2c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2c9:	jno    0x40b32e
  40b2cb:	dec    esp
  40b2cc:	adc    edi,0xcca7fb09
  40b2d2:	imul   esp,DWORD PTR [edi],0x1e
  40b2d5:	and    eax,0x9e93b926
  40b2da:	cmp    al,0x9d
  40b2dc:	and    ebx,ebp
  40b2de:	push   ebp
  40b2df:	lods   al,BYTE PTR ds:[esi]
  40b2e0:	fistp  DWORD PTR ds:0x6db6d1fa
  40b2e6:	dec    DWORD PTR [eax]
  40b2e8:	fidivr WORD PTR [ebx-0x3a]
  40b2eb:	fnstenv [ecx+0x4d]
  40b2ee:	inc    ebp
  40b2ef:	aad    0xb8
  40b2f1:	mov    al,ds:0xafe1a788
  40b2f6:	sub    BYTE PTR ds:0x260f8a76,ch
  40b2fc:	and    ebx,ebx
  40b2fe:	adc    ch,BYTE PTR [edx]
  40b300:	add    BYTE PTR [edi+0x58],cl
  40b303:	pop    edi
  40b304:	jge    0x40b2f5
  40b306:	jmp    FWORD PTR [edx-0x2f]
  40b309:	mov    ebp,0xd0cc31d7
  40b30e:	jmp    0x6424:0x5ef454ca
  40b315:	lock (bad) 
  40b317:	or     ebp,DWORD PTR [ebx-0x6957e0a0]
  40b31d:	jl     0x40b2bf
  40b31f:	adc    al,0xe3
  40b321:	sbb    DWORD PTR [ecx],ebx
  40b323:	cdq    
  40b324:	retf   0xb132
  40b327:	pusha  
  40b328:	inc    ebp
  40b329:	or     eax,DWORD PTR [esi-0x6a]
  40b32c:	addr16 or al,0xf1
  40b32f:	dec    ebx
  40b330:	sbb    BYTE PTR [esi+0x29],0xf7
  40b334:	mov    al,0xea
  40b336:	loope  0x40b326
  40b338:	in     eax,dx
  40b339:	dec    edi
  40b33a:	repz inc esp
  40b33c:	lahf   
  40b33d:	ds push es
  40b33f:	xor    eax,0x26f1728a
  40b344:	add    eax,ebp
  40b346:	in     al,dx
  40b347:	sub    al,0x3d
  40b349:	ins    BYTE PTR es:[edi],dx
  40b34a:	xchg   edi,eax
  40b34b:	loopne 0x40b2ff
  40b34d:	adc    eax,0xf7735a70
  40b352:	adc    edx,ecx
  40b354:	xchg   esp,eax
  40b355:	sub    eax,0x5b9722c3
  40b35a:	fld    DWORD PTR [ebp-0x7d]
  40b35d:	inc    ecx
  40b35f:	xchg   BYTE PTR [ecx-0x689756b1],bl
  40b365:	enter  0x97e2,0xa2
  40b369:	jae    0x40b38d
  40b36b:	mov    cs,WORD PTR [ebp+0x53e7da04]
  40b371:	jl     0x40b370
  40b373:	dec    eax
  40b374:	in     al,dx
  40b375:	pop    ss
  40b376:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b377:	xor    ecx,edx
  40b379:	jge    0x40b300
  40b37b:	cmp    al,cl
  40b37d:	arpl   WORD PTR [ebp-0x18],dx
  40b380:	add    dl,bh
  40b382:	xor    bh,bh
  40b384:	mov    eax,ds:0xc38bd3b9
  40b389:	shr    DWORD PTR [edx+0x30],1
  40b38c:	in     al,0x9
  40b38e:	xchg   ebx,eax
  40b38f:	inc    ebx
  40b390:	cmp    bl,cl
  40b392:	xchg   ebx,eax
  40b393:	jb     0x40b3ae
  40b395:	jne    0x40b3f1
  40b397:	cwde   
  40b398:	jmp    0x31d2:0x4fcf62b0
  40b39f:	mov    ebx,0x2b75176b
  40b3a4:	cmp    ebp,DWORD PTR [ebp-0x58]
  40b3a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3a8:	push   esp
  40b3a9:	push   edx
  40b3aa:	sub    DWORD PTR [ecx+0x18be3859],ebx
  40b3b0:	xor    DWORD PTR [ebx],0xffffff83
  40b3b3:	or     al,0xfd
  40b3b5:	add    BYTE PTR [ebp+0x2d],0xf4
  40b3b9:	mov    cl,0xff
  40b3bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3bc:	mov    esp,0x19bcba00
  40b3c1:	scas   eax,DWORD PTR es:[edi]
  40b3c2:	mov    edx,0x26f50050
  40b3c7:	js     0x40b3f9
  40b3c9:	mov    ds:0x8da58e24,al
  40b3ce:	add    dl,bl
  40b3d0:	cdq    
  40b3d1:	mov    ebx,0x4a4c4c75
  40b3d6:	or     al,0x69
  40b3d8:	adc    bh,dl
  40b3da:	sbb    DWORD PTR ds:0xf6801c19,edi
  40b3e0:	mov    dl,dh
  40b3e2:	mov    dh,BYTE PTR [ebx-0x5a67ec67]
  40b3e8:	dec    esp
  40b3e9:	std    
  40b3ea:	mov    WORD PTR [ecx-0x66],?
  40b3ed:	jne    0x40b45e
  40b3ef:	in     al,dx
  40b3f0:	add    eax,0x5b54d75b
  40b3f6:	jmp    0x7d93:0x9bca930d
  40b3fd:	sbb    DWORD PTR [esi-0xf],ebx
  40b400:	jmp    0x40b455
  40b402:	out    dx,al
  40b403:	stos   DWORD PTR es:[edi],eax
  40b404:	aam    0x72
  40b406:	cld    
  40b407:	and    BYTE PTR [edi-0x53],dl
  40b40a:	stos   DWORD PTR es:[edi],eax
  40b40b:	sbb    DWORD PTR [esi],0xffffffc7
  40b40e:	adc    BYTE PTR [edx],al
  40b410:	inc    esi
  40b411:	cmp    eax,0x46b72cde
  40b416:	adc    DWORD PTR [eax-0x583efa2f],ebx
  40b41c:	xchg   edi,eax
  40b41d:	test   DWORD PTR [edx+0x4cbb7cfd],esi
  40b423:	jge    0x40b47b
  40b425:	sub    eax,0x98fcb066
  40b42a:	stc    
  40b42b:	das    
  40b42c:	pop    ebx
  40b42d:	out    0x78,eax
  40b42f:	addr16 into 
  40b431:	dec    esi
  40b432:	mov    ds:0x8d333cb9,eax
  40b437:	add    DWORD PTR [esi-0x7b8b6631],edi
  40b43d:	cli    
  40b43e:	push   ds
  40b43f:	push   0xed69522
  40b444:	cld    
  40b445:	(bad)  
  40b446:	fistp  DWORD PTR [edi-0x30c92510]
  40b44c:	loope  0x40b454
  40b44e:	mov    WORD PTR [edx],es
  40b450:	sbb    ecx,DWORD PTR [ebp+0xc]
  40b453:	out    0x4a,al
  40b455:	icebp  
  40b456:	pop    es
  40b457:	mov    esp,0xa10890ca
  40b45c:	cdq    
  40b45d:	or     eax,0x141ac872
  40b462:	or     eax,0xb856beb8
  40b467:	test   eax,0xfe4ab069
  40b46c:	retf   0xa52c
  40b46f:	mov    dh,0x80
  40b471:	pop    es
  40b472:	cld    
  40b473:	jl     0x40b458
  40b475:	dec    esi
  40b476:	fstp   QWORD PTR [esi-0x1b]
  40b479:	lds    eax,FWORD PTR [edx+0x36]
  40b47c:	push   eax
  40b47d:	mov    edi,0xbcee5afe
  40b482:	test   DWORD PTR [ebp+0x4f786eaf],0xa1c35909
  40b48c:	sub    bh,bh
  40b48e:	jns    0x40b50c
  40b490:	retf   0xdb7c
  40b493:	sub    eax,0x1482dfc6
  40b498:	js     0x40b44c
  40b49a:	hlt    
  40b49b:	xor    al,0x1c
  40b49d:	lods   al,BYTE PTR ds:[esi]
  40b49e:	and    ah,dl
  40b4a0:	inc    esi
  40b4a1:	pop    fs
  40b4a3:	xlat   BYTE PTR ds:[ebx]
  40b4a4:	dec    eax
  40b4a5:	add    eax,0x9ea40639
  40b4aa:	mov    bl,0x6a
  40b4ac:	pop    edx
  40b4ad:	shl    DWORD PTR [esi+esi*4-0x1d],1
  40b4b1:	xchg   DWORD PTR [ecx-0x56],edx
  40b4b4:	mov    dl,0xe0
  40b4b6:	outs   dx,BYTE PTR ds:[esi]
  40b4b7:	out    0x8c,eax
  40b4b9:	mov    eax,ds:0xbb7e7771
  40b4be:	les    esi,FWORD PTR [ecx+esi*1+0x43]
  40b4c2:	push   ebx
  40b4c3:	jae    0x40b49e
  40b4c5:	add    esp,DWORD PTR [eax+edx*2+0x2b]
  40b4c9:	scas   al,BYTE PTR es:[edi]
  40b4ca:	test   eax,0x96b799f8
  40b4cf:	in     al,dx
  40b4d0:	mov    ah,al
  40b4d2:	(bad)  [eax-0x1e1de29c]
  40b4d8:	pusha  
  40b4d9:	push   0x49
  40b4db:	or     al,0x71
  40b4dd:	icebp  
  40b4de:	mov    eax,ds:0xcff88a9
  40b4e3:	jno    0x40b54f
  40b4e5:	mov    esi,0x58822c7c
  40b4ea:	jnp    0x40b4a5
  40b4ec:	out    0xd6,al
  40b4ee:	pop    ecx
  40b4ef:	jns    0x40b50c
  40b4f1:	sbb    BYTE PTR [esi-0x354b3a54],bl
  40b4f7:	in     al,0x83
  40b4f9:	cld    
  40b4fa:	push   edi
  40b4fb:	mov    esp,0xfae01c9f
  40b500:	dec    esp
  40b501:	stc    
  40b502:	sahf   
  40b503:	or     eax,0x809869ac
  40b508:	div    BYTE PTR [ebp+0x1]
  40b50b:	sbb    BYTE PTR [edx-0x459459b8],bh
  40b511:	retf   
  40b512:	and    cl,BYTE PTR [ebx-0x76]
  40b515:	xchg   ebp,eax
  40b516:	push   esi
  40b517:	cmp    al,0x11
  40b519:	sub    esp,DWORD PTR [esi+ebp*2+0x1679ac10]
  40b520:	sub    DWORD PTR [ebp+0x6094bed0],0xffffffbc
  40b527:	inc    ebx
  40b528:	cld    
  40b529:	add    al,0x16
  40b52b:	scas   eax,DWORD PTR es:[edi]
  40b52c:	push   edi
  40b52d:	adc    DWORD PTR [esi+0x3c],ecx
  40b530:	cld    
  40b531:	xor    DWORD PTR [edx+0x13],esp
  40b534:	pop    ecx
  40b535:	adc    ch,BYTE PTR [edi-0x28ff15f3]
  40b53b:	push   ecx
  40b53c:	jl     0x40b57d
  40b53e:	inc    edx
  40b53f:	iret   
  40b540:	mov    ss,ecx
  40b542:	pushf  
  40b543:	push   0xffffffc6
  40b545:	push   eax
  40b546:	mov    eax,ds:0xede0d82
  40b54b:	cmp    BYTE PTR [edx+ebp*2-0x25],dh
  40b54f:	scas   eax,DWORD PTR es:[edi]
  40b550:	mov    bh,0xbb
  40b552:	mov    ds:0x4b6c7c00,eax
  40b558:	test   al,0xa4
  40b55a:	xor    dh,BYTE PTR [esi-0x4]
  40b55d:	rol    ecx,1
  40b55f:	addr16 cwde 
  40b561:	mov    al,0xc2
  40b563:	fstp   st(0)
  40b565:	push   DWORD PTR [esi]
  40b567:	lahf   
  40b568:	inc    eax
  40b569:	lea    ebx,[ebp-0x6d]
  40b56c:	fsubr  QWORD PTR [ebp+0x59]
  40b56f:	cs mov esi,0xb4e8d76f
  40b575:	arpl   WORD PTR [ebx],bx
  40b577:	add    eax,0x23c333e
  40b57c:	iret   
  40b57d:	adc    cl,BYTE PTR [edx+0x62]
  40b580:	fdiv   QWORD PTR [edi]
  40b582:	push   ds
  40b583:	adc    dl,dh
  40b585:	ficomp WORD PTR [eax-0x79]
  40b588:	call   0x2768fc45
  40b58d:	data16 out dx,al
  40b58f:	xor    esi,ebp
  40b591:	out    0xf0,al
  40b593:	jp     0x40b613
  40b595:	mov    edi,0x2d7c2947
  40b59a:	jmp    0x5b46:0x9ada6fa
  40b5a1:	or     ah,BYTE PTR [edx]
  40b5a3:	sub    eax,0x526c394e
  40b5a8:	wrmsr  
  40b5aa:	fisub  WORD PTR [ebx-0x567faa2c]
  40b5b0:	aas    
  40b5b1:	mov    ecx,0x34a01ed3
  40b5b6:	or     esp,DWORD PTR [edi+0x23]
  40b5b9:	fs mov edi,0x3745f30
  40b5bf:	and    al,0x26
  40b5c1:	sub    eax,DWORD PTR [eax-0x38124dfd]
  40b5c7:	cmp    bl,BYTE PTR [edx-0x52d6653f]
  40b5cd:	(bad)  
  40b5cf:	pop    ebp
  40b5d0:	jl     0x40b568
  40b5d2:	add    ecx,DWORD PTR [esi]
  40b5d4:	mov    esp,edx
  40b5d6:	arpl   bp,di
  40b5d8:	mov    ecx,0x6320ff28
  40b5dd:	repnz dec ebx
  40b5df:	mov    eax,0x492a14f3
  40b5e4:	dec    ebx
  40b5e5:	shr    bl,0x9d
  40b5e8:	adc    eax,0xba83d886
  40b5ed:	add    DWORD PTR [ecx],edi
  40b5ef:	cmp    bh,dl
  40b5f1:	inc    ebx
  40b5f2:	jmp    0x80fd50b1
  40b5f7:	(bad)  
  40b5f8:	out    dx,eax
  40b5f9:	rol    esp,0xe0
  40b5fc:	mov    BYTE PTR ds:0xf536d34b,dl
  40b602:	inc    eax
  40b603:	dec    edx
  40b604:	pop    edx
  40b605:	clc    
  40b606:	stos   DWORD PTR es:[edi],eax
  40b607:	jo     0x40b687
  40b609:	dec    esi
  40b60a:	adc    esi,DWORD PTR [eax-0x5e]
  40b60d:	mov    edx,0x5d99b265
  40b612:	sub    ch,bh
  40b614:	mov    ebx,0xf093644f
  40b619:	dec    ebx
  40b61a:	leave  
  40b61b:	inc    edx
  40b61c:	data16 mov ah,0x68
  40b61f:	hlt    
  40b620:	or     eax,0x537a729d
  40b625:	add    eax,0x1eebb691
  40b62b:	jbe    0x40b68a
  40b62d:	addr16 mov esi,0x7965ddbb
  40b633:	cmp    BYTE PTR [eax],dl
  40b635:	pop    ebx
  40b636:	sbb    eax,0xf26e8752
  40b63b:	sub    BYTE PTR [esi-0x61],al
  40b63e:	or     ebp,DWORD PTR [edx+0x76]
  40b641:	sub    eax,0xc2c4c0b1
  40b646:	mov    ?,WORD PTR [ebx+edi*2]
  40b649:	clc    
  40b64a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b64b:	cmp    al,BYTE PTR [ebx]
  40b64d:	js     0x40b63d
  40b64f:	sub    cl,0x94
  40b652:	xor    esp,DWORD PTR [esp-0x66]
  40b656:	push   ecx
  40b657:	cmp    BYTE PTR [esi],0xf5
  40b65a:	in     al,dx
  40b65b:	lahf   
  40b65c:	mov    al,ds:0xf4faac72
  40b661:	xlat   BYTE PTR ds:[ebx]
  40b662:	pop    ebx
  40b663:	shl    DWORD PTR [edx+0x7e529830],cl
  40b669:	or     al,0xeb
  40b66b:	and    esp,DWORD PTR [ecx-0x32ef2b95]
  40b671:	scas   al,BYTE PTR es:[edi]
  40b672:	int    0x97
  40b674:	fisub  DWORD PTR [ecx]
  40b676:	or     edx,DWORD PTR [esi+0x1294f011]
  40b67c:	xor    eax,0x120301c4
  40b681:	mov    eax,ds:0xa1cd854b
  40b686:	xchg   ebp,eax
  40b687:	or     ecx,DWORD PTR [eax-0x57]
  40b68a:	dec    edi
  40b68b:	mov    ebp,0xb5fedc14
  40b690:	and    al,0xb6
  40b692:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b693:	push   edx
  40b694:	aas    
  40b695:	das    
  40b696:	(bad)  
  40b697:	shl    BYTE PTR ss:[edi+0x42],1
  40b69b:	in     eax,dx
  40b69c:	(bad)  
  40b69d:	sahf   
  40b69e:	dec    DWORD PTR [edx-0x80ab705]
  40b6a4:	mov    dl,BYTE PTR [edx-0x3d]
  40b6a7:	test   DWORD PTR [edx-0x767eaac],edi
  40b6ad:	dec    ebx
  40b6ae:	inc    ebp
  40b6af:	jbe    0x40b67a
  40b6b1:	imul   ecx,DWORD PTR [edi+0x3e],0x50047e5c
  40b6b8:	loopne 0x40b69b
  40b6ba:	ror    DWORD PTR [ebx],cl
  40b6bc:	pop    edx
  40b6bd:	push   ebx
  40b6be:	and    ebp,esi
  40b6c0:	pop    ss
  40b6c1:	xor    eax,0x620e7f0b
  40b6c6:	enter  0xbdad,0x25
  40b6ca:	xor    ecx,DWORD PTR [eax]
  40b6cc:	cmp    al,0xb0
  40b6ce:	xchg   edi,eax
  40b6cf:	pop    ebp
  40b6d0:	cwde   
  40b6d1:	dec    ecx
  40b6d2:	dec    edi
  40b6d3:	pop    ebx
  40b6d4:	sbb    eax,0xd6bb4683
  40b6d9:	xchg   ebx,eax
  40b6da:	sbb    al,BYTE PTR [edx+0x77f4345e]
  40b6e0:	loopne 0x40b6b5
  40b6e2:	inc    edi
  40b6e3:	bound  edi,QWORD PTR ds:0x868b6140
  40b6e9:	lea    edi,[edx+0x381d2fce]
  40b6ef:	push   ebp
  40b6f0:	mov    fs,WORD PTR [ecx-0x15]
  40b6f3:	fadd   QWORD PTR [esi+0x1da00df1]
  40b6f9:	retf   0xf0c4
  40b6fc:	loopne 0x40b6a7
  40b6fe:	inc    ecx
  40b6ff:	ins    BYTE PTR es:[edi],dx
  40b700:	es mov dl,0xce
  40b703:	jno    0x40b68c
  40b705:	iret   
  40b706:	cmp    al,0xc6
  40b708:	(bad)  
  40b709:	cld    
  40b70a:	and    DWORD PTR ds:0xa2ed2294,0xffffff8c
  40b711:	scas   al,BYTE PTR es:[edi]
  40b712:	das    
  40b713:	ucomiss xmm2,DWORD PTR [esi]
  40b716:	rcl    BYTE PTR [edx+0x68b7a5b9],0x44
  40b71d:	rcl    DWORD PTR [ebx],0x4e
  40b720:	jl     0x40b743
  40b722:	fadd   DWORD PTR [ecx+0x5e]
  40b725:	and    cl,bl
  40b727:	jl     0x40b6dc
  40b729:	pop    es
  40b72a:	scas   al,BYTE PTR es:[edi]
  40b72b:	and    dl,ah
  40b72d:	inc    esp
  40b72e:	icebp  
  40b72f:	into   
  40b730:	clc    
  40b731:	addr16 pushf 
  40b733:	push   ecx
  40b734:	xchg   esp,eax
  40b735:	arpl   WORD PTR [esi+0xcb8f6f7],di
  40b73b:	dec    eax
  40b73c:	jl     0x40b7a0
  40b73e:	add    edi,DWORD PTR [ebp+0x12e10c51]
  40b744:	and    al,0x79
  40b746:	scas   al,BYTE PTR es:[edi]
  40b747:	dec    esp
  40b748:	and    al,0xe4
  40b74a:	jecxz  0x40b721
  40b74c:	mov    ah,0xec
  40b74e:	fldln2 
  40b750:	int    0x59
  40b752:	stc    
  40b753:	add    eax,0xeddde580
  40b758:	retf   0xeac2
  40b75b:	sub    eax,edi
  40b75d:	test   bl,0x5f
  40b760:	ins    DWORD PTR es:[edi],dx
  40b761:	dec    ebx
  40b762:	xchg   esp,eax
  40b763:	popf   
  40b764:	test   al,0xf
  40b766:	mov    ecx,0xe85ef21e
  40b76b:	xadd   DWORD PTR [ecx-0x27c6d8d8],edx
  40b772:	xchg   ebx,eax
  40b773:	dec    ecx
  40b774:	retf   
  40b775:	fwait
  40b776:	out    0x5a,al
  40b778:	out    dx,eax
  40b779:	add    eax,0x2a00ed14
  40b77e:	fwait
  40b77f:	mov    ds:0xf15e4d05,eax
  40b784:	mov    eax,0xfd155b47
  40b789:	xor    DWORD PTR [ecx],ebp
  40b78b:	adc    al,0x71
  40b78d:	xchg   ebx,eax
  40b78e:	stc    
  40b78f:	sbb    ebx,DWORD PTR [eax]
  40b791:	cmp    al,0xc
  40b793:	sub    bh,0xbc
  40b796:	mov    ebp,0x9125d94e
  40b79b:	mov    bh,0xd5
  40b79d:	dec    ebx
  40b79e:	gs lds edx,FWORD PTR fs:0x192d4fd5
  40b7a6:	cmp    eax,edi
  40b7a8:	ret    
  40b7a9:	and    BYTE PTR [edi],ah
  40b7ab:	inc    ecx
  40b7ac:	adc    eax,0x961b3057
  40b7b1:	push   edi
  40b7b2:	xchg   ecx,eax
  40b7b3:	test   DWORD PTR [ebp-0x79467aa4],esp
  40b7b9:	icebp  
  40b7ba:	ds in  eax,dx
  40b7bc:	xchg   bl,bl
  40b7be:	jae    0x40b7f2
  40b7c0:	out    0x51,al
  40b7c2:	jp     0x40b752
  40b7c4:	push   ebp
  40b7c5:	pusha  
  40b7c6:	xchg   esi,eax
  40b7c7:	mov    bh,dl
  40b7c9:	mov    ds:0xe0f0bb7d,al
  40b7ce:	loop   0x40b785
  40b7d0:	mov    dh,0xbc
  40b7d2:	out    dx,eax
  40b7d3:	mov    bh,BYTE PTR [ebp-0x3b]
  40b7d6:	cs pusha 
  40b7d8:	aam    0x59
  40b7da:	or     edx,DWORD PTR ss:[esi*2-0x182a3b6]
  40b7e2:	in     eax,dx
  40b7e3:	xchg   ebx,eax
  40b7e4:	imul   esp,DWORD PTR [esi+edi*4-0x6b5951aa],0xe19a2305
  40b7ef:	imul   ecx,DWORD PTR [ebx-0x43916429],0xf475230f
  40b7f9:	add    dh,BYTE PTR [edx-0x6d]
  40b7fc:	cdq    
  40b7fd:	xchg   DWORD PTR [eax-0x40cf535f],edi
  40b803:	and    DWORD PTR [ecx+0x24],ebp
  40b806:	fisub  DWORD PTR [eax]
  40b808:	sub    esi,0x21
  40b80b:	stos   BYTE PTR es:[edi],al
  40b80c:	(bad)  
  40b80d:	cmp    DWORD PTR [ecx+0x37],eax
  40b810:	xor    BYTE PTR ds:0x1b8cfb41,dh
  40b816:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b817:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b818:	rcl    DWORD PTR [edi+0x22b79a66],1
  40b81e:	pxor   mm5,QWORD PTR [ebx+0x46]
  40b822:	arpl   WORD PTR [ecx-0x37],bx
  40b825:	scas   eax,DWORD PTR es:[edi]
  40b826:	ret    0x55ef
  40b829:	mov    edi,DWORD PTR [ecx+0xe973ab9]
  40b82f:	cmp    ecx,edi
  40b831:	mov    esp,0xe9f1522b
  40b836:	push   ebx
  40b837:	jno    0x40b86e
  40b839:	pop    ebp
  40b83a:	(bad)  
  40b83b:	imul   ebx,ebx,0xffffffc8
  40b83e:	xchg   ebx,eax
  40b83f:	mov    fs,WORD PTR [ecx+0x36]
  40b842:	mov    esi,0x51b9a297
  40b847:	xor    DWORD PTR [edx+esi*8],0x26
  40b84b:	repnz dec edx
  40b84d:	nop
  40b84e:	or     BYTE PTR [edi],cl
  40b850:	jno    0x40b847
  40b852:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b853:	in     eax,dx
  40b854:	lods   eax,DWORD PTR ds:[esi]
  40b855:	daa    
  40b856:	adc    esp,ebp
  40b858:	(bad)  
  40b859:	inc    ebp
  40b85a:	cwde   
  40b85b:	aas    
  40b85c:	push   ebp
  40b85d:	jge    0x40b8b4
  40b85f:	jge    0x40b87a
  40b861:	xchg   ebp,eax
  40b862:	inc    ebx
  40b863:	pop    ebx
  40b864:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b865:	in     al,dx
  40b866:	pop    es
  40b867:	cmp    edi,DWORD PTR [esi-0x10]
  40b86a:	or     DWORD PTR [esi+ebp*4-0x33],0x7ea1ab46
  40b872:	aad    0x31
  40b874:	les    esi,FWORD PTR [esi]
  40b876:	push   0x509e5394
  40b87b:	pop    ebp
  40b87c:	mov    cl,0x4
  40b87e:	sbb    al,dl
  40b880:	gs inc ebp
  40b882:	neg    edi
  40b884:	(bad)  
  40b885:	fcomp  st(0)
  40b887:	dec    ecx
  40b888:	inc    esp
  40b889:	and    dl,0x63
  40b88c:	mov    al,0x73
  40b88e:	xchg   edx,eax
  40b88f:	or     bh,BYTE PTR [eax+eax*2-0x3061372d]
  40b896:	jmp    0xd709:0xb87c2a03
  40b89d:	jmp    0x137c:0xbf3a73e
  40b8a4:	cmp    ebp,DWORD PTR [esi+0x2a]
  40b8a7:	jb     0x40b891
  40b8a9:	push   0x7091fd71
  40b8ae:	in     al,dx
  40b8af:	dec    edi
  40b8b0:	iret   
  40b8b1:	and    BYTE PTR [eax-0x48],dl
  40b8b4:	mov    ebx,0x94ed698d
  40b8b9:	test   eax,0xbbbd676c
  40b8be:	sbb    DWORD PTR [ecx-0x3b],0x2c
  40b8c2:	leave  
  40b8c3:	or     eax,0xa53ffa0
  40b8c8:	sbb    edi,DWORD PTR [edx-0x2c1eec7b]
  40b8ce:	mov    esp,0xa4773086
  40b8d3:	pushf  
  40b8d4:	mov    ebp,0x8d5b9b97
  40b8d9:	stos   BYTE PTR es:[edi],al
  40b8da:	push   0x1d
  40b8dc:	cmp    edi,DWORD PTR [ecx+0x7119c147]
  40b8e2:	hlt    
  40b8e3:	out    dx,al
  40b8e4:	xor    bh,BYTE PTR [ebp+0x56]
  40b8e7:	popf   
  40b8e8:	push   esp
  40b8e9:	repnz (bad) 
  40b8eb:	(bad)  
  40b8ec:	mov    al,ds:0xb31fea3
  40b8f1:	data16 mov WORD PTR [esi],?
  40b8f4:	pop    edx
  40b8f5:	xor    al,0xa3
  40b8f7:	pop    eax
  40b8f8:	clc    
  40b8f9:	mov    ebx,0x746b6cb1
  40b8fe:	xlat   BYTE PTR ds:[ebx]
  40b8ff:	icebp  
  40b900:	pop    esi
  40b901:	mov    cl,0x66
  40b903:	push   edx
  40b904:	pushf  
  40b905:	sbb    esp,DWORD PTR [edx-0x54]
  40b908:	cmp    ecx,ebp
  40b90a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b90b:	inc    edi
  40b90c:	inc    edx
  40b90d:	mov    al,BYTE PTR [edi-0x1a4e14cc]
  40b913:	push   edx
  40b914:	mov    al,0x26
  40b916:	retf   
  40b917:	jmp    0x40b944
  40b919:	test   dh,dh
  40b91b:	sbb    eax,0x2bad240d
  40b920:	mov    edx,0xef2280e4
  40b925:	add    al,0x97
  40b927:	adc    edx,DWORD PTR [eax-0x5772e6ce]
  40b92d:	dec    eax
  40b92e:	outs   dx,BYTE PTR ds:[esi]
  40b92f:	loop   0x40b972
  40b931:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b932:	sbb    esi,DWORD PTR ds:0xc804d066
  40b938:	rol    BYTE PTR [ebx+0x65],cl
  40b93b:	jecxz  0x40b96e
  40b93d:	pop    edi
  40b93e:	arpl   WORD PTR [ecx-0x60],sp
  40b941:	pop    eax
  40b942:	push   es
  40b943:	mov    ecx,0x87c4199
  40b948:	cmp    dl,BYTE PTR [ebp+0x500c3d9b]
  40b94e:	jns    0x40b9bf
  40b950:	add    DWORD PTR [esi],esi
  40b952:	adc    BYTE PTR [ebx-0x4],0x64
  40b956:	push   ecx
  40b957:	mov    edi,0x45dd4f2d
  40b95c:	adc    DWORD PTR [ebp+0x6af3863b],ecx
  40b962:	push   0x50
  40b964:	push   ss
  40b965:	hlt    
  40b966:	clc    
  40b967:	icebp  
  40b968:	pop    ds
  40b969:	jmp    0xba95:0xd6599a19
  40b970:	in     al,dx
  40b971:	xor    WORD PTR [esi],sp
  40b974:	add    cx,WORD PTR [ebx+0x5372858d]
  40b97b:	xor    bh,al
  40b97d:	fxam   
  40b97f:	jecxz  0x40b909
  40b981:	inc    edi
  40b982:	push   cs
  40b983:	in     al,dx
  40b984:	xchg   ebx,eax
  40b985:	pop    esp
  40b986:	mov    es:0x503382cb,eax
  40b98c:	jnp    0x40b912
  40b98e:	xor    DWORD PTR [ebp+0x36],eax
  40b991:	jecxz  0x40b98c
  40b993:	adc    DWORD PTR [ebx],eax
  40b995:	jne    0x40b992
  40b997:	add    DWORD PTR [edi-0x71],ecx
  40b99a:	arpl   WORD PTR [esi-0x196fa99c],sp
  40b9a0:	dec    ebx
  40b9a1:	addr16 fninit 
  40b9a4:	popa   
  40b9a5:	ret    0x7e70
  40b9a8:	sbb    BYTE PTR [edx+0x25],al
  40b9ab:	push   edi
  40b9ac:	pusha  
  40b9ad:	jmp    0xa89a:0x49d6776d
  40b9b4:	mov    ebx,edx
  40b9b6:	dec    eax
  40b9b7:	ins    DWORD PTR es:[edi],dx
  40b9b8:	inc    edi
  40b9b9:	les    ebx,FWORD PTR [edx-0x151a74b2]
  40b9bf:	jo     0x40ba0b
  40b9c1:	adc    al,0x30
  40b9c3:	jb     0x40b94a
  40b9c5:	data16 sbb al,0x74
  40b9c8:	loopne 0x40b9c2
  40b9ca:	mov    al,0xad
  40b9cc:	lahf   
  40b9cd:	sub    BYTE PTR [ecx+0x3bc23789],bh
  40b9d3:	xor    al,0x81
  40b9d5:	jp     0x40ba3d
  40b9d7:	sub    BYTE PTR [ebx],0xc0
  40b9da:	push   ecx
  40b9db:	outs   dx,DWORD PTR ds:[esi]
  40b9dc:	sub    bl,bh
  40b9de:	sar    BYTE PTR [eax],1
  40b9e0:	in     al,0xc1
  40b9e2:	inc    ebp
  40b9e3:	lods   al,BYTE PTR ds:[esi]
  40b9e4:	iret   
  40b9e5:	push   edi
  40b9e6:	push   0x8a02212a
  40b9eb:	jno    0x40b9aa
  40b9ed:	leave  
  40b9ee:	sub    DWORD PTR [ecx-0x5943c289],0xffffffa2
  40b9f5:	push   edx
  40b9f6:	arpl   WORD PTR [edx+0x539a7416],bx
  40b9fc:	xor    cl,dh
  40b9fe:	dec    edx
  40b9ff:	sub    ch,cl
  40ba01:	pop    ecx
  40ba02:	add    al,0xfe
  40ba04:	int    0xc6
  40ba06:	das    
  40ba07:	mov    bh,0x58
  40ba09:	push   ss
  40ba0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba0b:	out    0x22,eax
  40ba0d:	inc    esp
  40ba0e:	mov    BYTE PTR [edx+0x32],al
  40ba11:	int    0xc0
  40ba13:	loop   0x40b9ff
  40ba15:	cmp    al,cl
  40ba17:	ror    BYTE PTR [eax-0x35baf5aa],cl
  40ba1d:	test   al,0x28
  40ba1f:	and    DWORD PTR [eax],eax
  40ba21:	mov    al,0x84
  40ba23:	mov    cl,0x62
  40ba25:	pop    ss
  40ba26:	jmp    0xe2dd55f0
  40ba2b:	into   
  40ba2c:	mov    edx,0xcc3263f0
  40ba31:	sbb    esi,DWORD PTR [ebp-0x23]
  40ba34:	mov    ebp,0x72d1c5fb
  40ba39:	dec    ebx
  40ba3a:	(bad)  
  40ba3b:	jmp    0xfc0d:0x6e79afb5
  40ba42:	das    
  40ba43:	ss test al,0x5f
  40ba46:	xchg   esi,eax
  40ba47:	fdivr  QWORD PTR [ebx-0x76]
  40ba4a:	inc    ebp
  40ba4b:	je     0x40ba0e
  40ba4d:	push   ebp
  40ba4e:	fcmovnu st,st(2)
  40ba50:	fcom   DWORD PTR [esi-0x5f]
  40ba53:	pusha  
  40ba54:	cmp    esi,DWORD PTR [ecx-0x495bac11]
  40ba5a:	outs   dx,BYTE PTR ds:[esi]
  40ba5b:	aaa    
  40ba5c:	or     BYTE PTR [esi+0x2d],bl
  40ba5f:	fs loope 0x40ba08
  40ba62:	push   edx
  40ba63:	iret   
  40ba64:	pop    esi
  40ba65:	jo     0x40b9f9
  40ba67:	fcomip st,st(2)
  40ba69:	cmp    al,0xd3
  40ba6b:	std    
  40ba6c:	and    eax,0x77388b66
  40ba71:	sbb    edi,esi
  40ba73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba74:	es fstp st(7)
  40ba77:	les    ebx,FWORD PTR [ebx+0x37]
  40ba7a:	xor    al,0xc2
  40ba7c:	add    eax,0x936a3547
  40ba81:	imul   eax,DWORD PTR [esi-0x17],0xffffffee
  40ba85:	ins    DWORD PTR es:[edi],dx
  40ba86:	mov    WORD PTR [ecx],es
  40ba88:	xchg   ebx,eax
  40ba89:	mov    esi,0xf10873f5
  40ba8e:	pop    ebp
  40ba8f:	mul    DWORD PTR [edx]
  40ba91:	clc    
  40ba92:	dec    esp
  40ba93:	or     DWORD PTR [eax+eiz*4-0x5c],esp
  40ba97:	lods   eax,DWORD PTR ds:[esi]
  40ba98:	hlt    
  40ba99:	rcl    BYTE PTR [eax+0x16],0xf2
  40ba9d:	and    ch,0x5e
  40baa0:	call   0xfd64:0x94443245
  40baa7:	add    al,0x55
  40baa9:	pop    ecx
  40baaa:	xor    BYTE PTR [ebx],bl
  40baac:	push   ss
  40baad:	xchg   edi,eax
  40baae:	scas   al,BYTE PTR es:[edi]
  40baaf:	ror    ebp,1
  40bab1:	aas    
  40bab2:	sub    BYTE PTR [eax+0x47bcc934],bh
  40bab8:	call   0xfb4c:0xa585fa1b
  40babf:	in     al,0x72
  40bac1:	mov    cl,0x1d
  40bac3:	js     0x40bab8
  40bac5:	cmp    bh,BYTE PTR [ecx-0x71b6503e]
  40bacb:	dec    edi
  40bacc:	add    al,0x74
  40bace:	aas    
  40bacf:	rol    DWORD PTR [edx+0xb],0xe7
  40bad3:	xchg   ebx,eax
  40bad4:	push   eax
  40bad5:	fiadd  WORD PTR [ecx+0x22]
  40bad8:	rcr    bh,1
  40bada:	or     DWORD PTR [edx+0x6f68d8a6],ebx
  40bae0:	cwde   
  40bae1:	scas   al,BYTE PTR es:[edi]
  40bae2:	xchg   edx,eax
  40bae3:	test   al,0x17
  40bae5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bae6:	adc    bl,bh
  40bae8:	push   ebx
  40bae9:	and    BYTE PTR [ebx-0x61],cl
  40baec:	scas   eax,DWORD PTR es:[edi]
  40baed:	into   
  40baee:	lock scas al,BYTE PTR es:[edi]
  40baf0:	xchg   esi,eax
  40baf1:	push   ecx
  40baf2:	push   ds
  40baf3:	jb     0x40bacd
  40baf5:	iret   
  40baf6:	push   cs
  40baf7:	dec    ebx
  40baf8:	inc    ecx
  40baf9:	xlat   BYTE PTR ds:[ebx]
  40bafa:	mov    eax,ds:0x817de932
  40baff:	(bad)  
  40bb00:	hlt    
  40bb01:	mov    esp,0x4222afe6
  40bb06:	jae    0x40baa3
  40bb08:	mov    eax,0x105a07cf
  40bb0d:	je     0x40bb5d
  40bb0f:	dec    ecx
  40bb10:	mov    eax,ds:0x24c5177e
  40bb15:	fwait
  40bb16:	out    0x5a,al
  40bb18:	leave  
  40bb19:	mov    dh,0x44
  40bb1b:	jne    0x40bab6
  40bb1d:	inc    ecx
  40bb1e:	cwde   
  40bb1f:	iret   
  40bb20:	jbe    0x40bab1
  40bb22:	ror    BYTE PTR [edi-0x32],0x62
  40bb26:	js     0x40bb24
  40bb28:	aaa    
  40bb29:	push   esi
  40bb2a:	inc    esp
  40bb2b:	(bad)  
  40bb2c:	arpl   WORD PTR [edi-0x2e],ax
  40bb2f:	dec    ecx
  40bb30:	or     DWORD PTR [ebx+0x20a150e3],edx
  40bb36:	ror    DWORD PTR [ebp-0x5b],1
  40bb39:	mov    bh,0x2c
  40bb3b:	pop    es
  40bb3c:	fwait
  40bb3d:	cmp    DWORD PTR [ecx-0x2e9d1603],0x8a56add
  40bb47:	pop    edx
  40bb48:	cdq    
  40bb49:	cs jne 0x40bb2b
  40bb4c:	hlt    
  40bb4d:	fisttp QWORD PTR [ebx+ebp*4+0x12]
  40bb51:	cld    
  40bb52:	pop    edi
  40bb53:	adc    BYTE PTR [edi+0x1136dcd8],bh
  40bb59:	push   cs
  40bb5a:	cmp    esi,0xf86e7c91
  40bb60:	fdiv   QWORD PTR [eax-0x16]
  40bb63:	repz jp 0x40bb7c
  40bb66:	loop   0x40bba9
  40bb68:	add    bh,ch
  40bb6a:	lods   eax,DWORD PTR ds:[esi]
  40bb6b:	jbe    0x40bb0f
  40bb6d:	jnp    0x40bbb0
  40bb6f:	iret   
  40bb70:	ficomp WORD PTR [ecx-0x4d]
  40bb73:	jge    0x40bb97
  40bb75:	pop    ebx
  40bb76:	mov    esp,0xc3e90f43
  40bb7b:	int    0x72
  40bb7d:	jns    0x40bbe3
  40bb7f:	adc    edi,ecx
  40bb81:	push   edi
  40bb82:	pop    ss
  40bb83:	inc    esp
  40bb84:	adc    ebp,DWORD PTR [edx-0x78]
  40bb87:	fidivr DWORD PTR ds:0x344c28e5
  40bb8d:	sbb    eax,0xb06bf046
  40bb92:	cmp    esp,DWORD PTR [eax+0x3c0c67fe]
  40bb98:	jne    0x40bbed
  40bb9a:	pusha  
  40bb9b:	cli    
  40bb9c:	rol    ebp,cl
  40bb9e:	jo     0x40bb55
  40bba0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bba1:	daa    
  40bba2:	cmp    BYTE PTR [ecx+0x12],0x56
  40bba6:	dec    edx
  40bba7:	in     al,0x21
  40bba9:	outs   dx,DWORD PTR ds:[esi]
  40bbaa:	stos   BYTE PTR es:[edi],al
  40bbab:	fdivr  DWORD PTR [edi-0x71]
  40bbae:	aaa    
  40bbaf:	mov    eax,DWORD PTR ds:0xc3a49b2d
  40bbb5:	stos   BYTE PTR es:[edi],al
  40bbb6:	mov    esi,0x84373953
  40bbbb:	imul   edx,DWORD PTR [esi-0x2],0xffffffb1
  40bbbf:	js     0x40bb7d
  40bbc1:	aam    0xdd
  40bbc3:	and    BYTE PTR [eax+0x780315c1],cl
  40bbc9:	xchg   edi,eax
  40bbca:	test   BYTE PTR [ecx],ah
  40bbcc:	pop    ecx
  40bbcd:	mov    BYTE PTR [ebx-0x570d081f],ah
  40bbd3:	adc    cl,BYTE PTR [edx+0x43]
  40bbd6:	aam    0x7c
  40bbd8:	dec    esi
  40bbd9:	bnd jl 0x40bbb6
  40bbdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbdd:	pop    ds
  40bbde:	sbb    ebp,ebx
  40bbe0:	in     al,0x26
  40bbe2:	mov    dl,0x31
  40bbe4:	enter  0xf953,0x7b
  40bbe8:	pop    edi
  40bbe9:	scas   eax,DWORD PTR es:[edi]
  40bbea:	rol    BYTE PTR [ebx+0x65],1
  40bbed:	jbe    0x40bbc9
  40bbef:	cwde   
  40bbf0:	xor    BYTE PTR [edx],dl
  40bbf2:	jmp    0x40bb8c
  40bbf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbf5:	add    eax,edx
  40bbf7:	mov    BYTE PTR [edx],al
  40bbf9:	push   edx
  40bbfa:	imul   esi,DWORD PTR [esi+eax*4+0x1ea4bb3c],0xbb8dcc7f
  40bc05:	sub    DWORD PTR [eax],ecx
  40bc07:	push   0x84d820a8
  40bc0c:	mov    bl,0xd7
  40bc0e:	add    eax,0x90b8a85e
  40bc13:	nop
  40bc14:	dec    eax
  40bc15:	add    esi,eax
  40bc17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc18:	push   ebp
  40bc19:	cmp    al,0x82
  40bc1b:	jo     0x40bc96
  40bc1d:	icebp  
  40bc1e:	inc    edx
  40bc1f:	adc    eax,0x5d575f63
  40bc24:	xchg   edx,eax
  40bc25:	aam    0xb3
  40bc27:	daa    
  40bc28:	mov    al,ds:0xc9ef909f
  40bc2d:	enter  0x6f61,0xe4
  40bc31:	xchg   DWORD PTR [ecx-0x41],eax
  40bc34:	or     eax,ebp
  40bc36:	pop    edi
  40bc37:	fadd   DWORD PTR [edi]
  40bc39:	pop    edx
  40bc3a:	mov    eax,ecx
  40bc3c:	add    BYTE PTR [eax+0x54],0x11
  40bc40:	adc    eax,0x7e7eac04
  40bc45:	jb     0x40bc55
  40bc47:	in     al,dx
  40bc48:	outs   dx,DWORD PTR ds:[esi]
  40bc49:	out    0xb1,al
  40bc4b:	sbb    eax,0x203880ae
  40bc50:	pop    ds
  40bc51:	out    0x33,al
  40bc53:	jp     0x40bca1
  40bc55:	cmp    edi,esi
  40bc57:	pop    eax
  40bc58:	bound  edx,QWORD PTR [edi-0x780bd68]
  40bc5e:	mov    bl,BYTE PTR [edi+eiz*8-0x263edde2]
  40bc65:	(bad)  
  40bc66:	dec    ebx
  40bc67:	sbb    bl,BYTE PTR [edx-0x46]
  40bc6a:	jno    0x40bc63
  40bc6c:	outs   dx,BYTE PTR ds:[esi]
  40bc6d:	jo     0x40bcd4
  40bc6f:	push   0x53
  40bc71:	enter  0xbc48,0x1e
  40bc75:	shl    BYTE PTR [ecx],1
  40bc77:	(bad)  
  40bc78:	aad    0xcf
  40bc7a:	stc    
  40bc7b:	add    bh,al
  40bc7d:	mov    esi,0xb6cdff98
  40bc82:	fdiv   QWORD PTR [esi+ecx*8+0x912c783]
  40bc89:	sbb    DWORD PTR [eax+0x132c659b],0x224837bf
  40bc93:	inc    esi
  40bc94:	retf   
  40bc95:	sti    
  40bc96:	lock lahf 
  40bc98:	clc    
  40bc99:	ret    0xe1dc
  40bc9c:	adc    eax,0xae168f99
  40bca1:	jp     0x40bc68
  40bca3:	adc    cl,bh
  40bca5:	pusha  
  40bca6:	pusha  
  40bca7:	push   ebx
  40bca8:	lods   eax,DWORD PTR ds:[esi]
  40bca9:	cs popa 
  40bcab:	sti    
  40bcac:	add    al,BYTE PTR [esi+0xa]
  40bcaf:	mov    edx,0xdefd2420
  40bcb4:	sub    al,0x5f
  40bcb6:	daa    
  40bcb7:	popa   
  40bcb8:	js     0x40bceb
  40bcba:	call   0xc229e8a2
  40bcbf:	adc    esp,ebp
  40bcc1:	das    
  40bcc2:	pusha  
  40bcc3:	cmp    eax,0xc59b9097
  40bcc8:	mov    ah,0x7e
  40bcca:	dec    esp
  40bccb:	xlat   BYTE PTR ds:[ebx]
  40bccc:	outs   dx,BYTE PTR ds:[esi]
  40bccd:	add    DWORD PTR [ebx-0xb],0xffffffd2
  40bcd1:	cmp    BYTE PTR [edx+0x11],0xfc
  40bcd5:	(bad)  
  40bcd6:	not    BYTE PTR [ecx+0x8ddf7b4]
  40bcdc:	or     BYTE PTR [edi-0x4b],bl
  40bcdf:	jae    0x40bd25
  40bce1:	mov    dh,BYTE PTR [ecx]
  40bce3:	sub    edi,DWORD PTR [esi+ebx*4-0x506029ec]
  40bcea:	pop    esp
  40bceb:	arpl   WORD PTR [ecx+0x23fe9cf2],bp
  40bcf1:	leave  
  40bcf2:	sbb    DWORD PTR [edx],eax
  40bcf4:	xor    DWORD PTR [ebx],ebp
  40bcf6:	push   ss
  40bcf7:	bound  ecx,QWORD PTR [eax+0x27990aa5]
  40bcfd:	aas    
  40bcfe:	cld    
  40bcff:	mov    eax,0x45b60b03
  40bd04:	daa    
  40bd05:	lds    edx,FWORD PTR [edx+0x3143ce4]
  40bd0b:	mov    dh,cl
  40bd0d:	fisttp QWORD PTR [edi]
  40bd0f:	pop    ecx
  40bd10:	cmp    BYTE PTR [edi+edi*1-0x6a],0xc6
  40bd15:	data16 aad 0x6
  40bd18:	aad    0xd6
  40bd1a:	scas   al,BYTE PTR es:[edi]
  40bd1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd1c:	jmp    0x35c6:0x2d076556
  40bd23:	rdtsc  
  40bd25:	leave  
  40bd26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd27:	xor    esp,ebx
  40bd29:	mov    esi,0x59e23330
  40bd2e:	in     al,0xd1
  40bd30:	data16 jle 0x40bd22
  40bd33:	inc    ebx
  40bd34:	sbb    dl,cl
  40bd36:	or     edx,ebx
  40bd38:	pop    esp
  40bd39:	mov    bl,0x46
  40bd3b:	sbb    edx,DWORD PTR [edx]
  40bd3d:	mov    ch,0x96
  40bd3f:	cs out dx,al
  40bd41:	or     eax,0x475d1478
  40bd46:	jne    0x40bd83
  40bd48:	push   edx
  40bd49:	aam    0x3e
  40bd4b:	mov    al,0x98
  40bd4d:	xor    DWORD PTR [esp+eiz*8],eax
  40bd50:	xchg   esp,eax
  40bd51:	ja     0x40bcf5
  40bd53:	pop    es
  40bd54:	lea    edi,[edx-0x58]
  40bd57:	in     al,dx
  40bd58:	pop    esi
  40bd59:	icebp  
  40bd5a:	sbb    ebp,DWORD PTR gs:[eax]
  40bd5d:	aaa    
  40bd5e:	outs   dx,BYTE PTR ds:[esi]
  40bd5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd60:	add    eax,0xfc35694
  40bd65:	mov    ecx,0x794317cb
  40bd6a:	pop    ds
  40bd6b:	sbb    dl,BYTE PTR [eax+0xeed8d14]
  40bd71:	xlat   BYTE PTR ds:[ebx]
  40bd72:	push   edx
  40bd73:	dec    edi
  40bd74:	pop    eax
  40bd75:	push   ds
  40bd76:	sub    edi,ecx
  40bd78:	(bad)
  40bd7c:	lahf   
  40bd7d:	je     0x40bdc9
  40bd7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd80:	repz push cs
  40bd82:	lahf   
  40bd83:	dec    BYTE PTR [edi-0x590553c5]
  40bd89:	mov    esp,0xd6bfa1fa
  40bd8e:	xor    DWORD PTR [ecx],esi
  40bd90:	lds    ecx,FWORD PTR [ebx-0x6959c15f]
  40bd96:	and    esp,DWORD PTR ds:0x8ff27542
  40bd9c:	loop   0x40bd9c
  40bd9e:	xchg   edx,eax
  40bd9f:	pop    ds
  40bda0:	pop    esp
  40bda1:	lock lods eax,DWORD PTR ds:[esi]
  40bda3:	or     ebp,DWORD PTR [esi-0x38dc7521]
  40bda9:	pop    ecx
  40bdaa:	xor    BYTE PTR [edi],0x50
  40bdad:	sahf   
  40bdae:	inc    ebp
  40bdaf:	cdq    
  40bdb0:	dec    esi
  40bdb1:	test   eax,0x47f6fdbd
  40bdb6:	int3   
  40bdb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdb8:	mov    edi,0x654902b0
  40bdbd:	scas   eax,DWORD PTR es:[edi]
  40bdbe:	inc    edi
  40bdbf:	js     0x40bdd4
  40bdc1:	shr    esi,1
  40bdc3:	retf   
  40bdc4:	and    BYTE PTR [edx-0x4b],bh
  40bdc7:	out    dx,al
  40bdc8:	xlat   BYTE PTR ds:[ebx]
  40bdc9:	push   edx
  40bdca:	frstor [eax-0x1b]
  40bdcd:	ror    DWORD PTR [eax-0x7f09cddb],0xe
  40bdd4:	and    DWORD PTR [edi],edi
  40bdd6:	aam    0x7f
  40bdd8:	pop    edx
  40bdd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bddb:	fbstp  TBYTE PTR [ecx-0x17]
  40bdde:	sbb    al,0xb7
  40bde0:	cmp    bl,bl
  40bde2:	(bad)  
  40bde3:	outs   dx,DWORD PTR ds:[esi]
  40bde4:	fs ds push cs
  40bde7:	stos   BYTE PTR es:[edi],al
  40bde8:	jg     0x40be36
  40bdea:	les    esi,FWORD PTR [ecx+0x2]
  40bded:	iret   
  40bdee:	add    DWORD PTR [eax],esp
  40bdf0:	popf   
  40bdf1:	repz (bad) 
  40bdf3:	jmp    0xd06a:0x60507f6b
  40bdfa:	ret    0xbc5c
  40bdfd:	xchg   DWORD PTR [esi+0x31],ebx
  40be00:	mov    BYTE PTR [edx-0x5eba79ab],dh
  40be06:	dec    BYTE PTR [edi-0x40]
  40be09:	gs push ebp
  40be0b:	jg     0x40bdcf
  40be0d:	mov    ds:0x687972c4,eax
  40be12:	div    ebx
  40be14:	xchg   bl,ah
  40be16:	int3   
  40be17:	ret    0x74d7
  40be1a:	lock add BYTE PTR [ecx+edx*1-0x6e],dl
  40be1f:	inc    eax
  40be20:	mov    al,ds:0xf0806b7b
  40be25:	jmp    0xe2c9:0xefb9df13
  40be2c:	adc    al,0x75
  40be2e:	dec    esi
  40be2f:	(bad)  [edi-0x29d82d22]
  40be35:	test   al,0x7a
  40be37:	mov    DWORD PTR [ebx],0xb75db2d4
  40be3d:	out    0xbc,eax
  40be3f:	lea    ebx,[ecx]
  40be41:	or     eax,0x4d658014
  40be46:	pop    eax
  40be47:	std    
  40be48:	loopne 0x40beb2
  40be4a:	mov    ch,0xb9
  40be4c:	pop    edi
  40be4d:	cmp    BYTE PTR [ebp-0x1f],0x27
  40be51:	lahf   
  40be52:	adc    edx,ebx
  40be54:	xlat   BYTE PTR ds:[ebx]
  40be55:	mov    ebp,0x47c2dab2
  40be5a:	sbb    DWORD PTR [eax-0x51],ebx
  40be5d:	sbb    al,0xab
  40be5f:	jle    0x40be24
  40be61:	enter  0xbf28,0x32
  40be65:	jns    0x40bec7
  40be67:	addr16 or al,0x59
  40be6a:	xchg   edx,eax
  40be6b:	iret   
  40be6c:	push   ds
  40be6d:	and    al,0x30
  40be6f:	enter  0x5f02,0xf0
  40be73:	mov    cs,WORD PTR [ebp+0x7784770c]
  40be79:	cmp    DWORD PTR [edx+ebp*4],ebx
  40be7c:	bound  edx,QWORD PTR [edi]
  40be7e:	into   
  40be7f:	sbb    al,0x50
  40be81:	mov    ah,0x16
  40be83:	mov    bl,0x64
  40be85:	xor    dh,al
  40be87:	mov    DWORD PTR [ebp+0x5d75ec23],ebp
  40be8d:	std    
  40be8e:	push   0xa1bc6768
  40be93:	ss mov ebp,0xa12473b2
  40be99:	data16 and ah,dh
  40be9c:	ret    
  40be9d:	adc    DWORD PTR [ecx-0x59],edx
  40bea0:	xor    eax,0xa03a6de7
  40bea5:	ret    
  40bea6:	push   ss
  40bea7:	enter  0x60aa,0x99
  40beab:	push   ebx
  40beac:	dec    esi
  40bead:	jmp    0xdabc3e71
  40beb2:	mov    ebp,edx
  40beb4:	push   edi
  40beb5:	test   eax,0x3f1ee0f8
  40beba:	popf   
  40bebb:	cmp    BYTE PTR [ecx+0x6ad280a1],ah
  40bec1:	in     eax,dx
  40bec2:	jg     0x40be71
  40bec4:	jp     0x40be72
  40bec6:	jnp    0x40bea4
  40bec8:	push   ds
  40bec9:	xbegin 0xb533c5cc
  40becf:	(bad)  
  40bed0:	sti    
  40bed1:	lock sahf 
  40bed3:	into   
  40bed4:	popf   
  40bed5:	or     al,0x6
  40bed7:	xor    DWORD PTR ds:0x14ba5e71,0xb56eec17
  40bee2:	jns    0x40bf32
  40bee4:	daa    
  40bee5:	(bad)  
  40bee6:	call   0x72c2:0x22f877d1
  40beed:	(bad)  [esi+0x6017b8b2]
  40bef3:	daa    
  40bef4:	iret   
  40bef5:	dec    edi
  40bef6:	or     al,0x84
  40bef8:	bound  esi,QWORD PTR [ecx+0x4d]
  40befb:	pop    eax
  40befc:	jle    0x40bf59
  40befe:	(bad)  
  40beff:	xchg   esp,eax
  40bf00:	push   edx
  40bf01:	stos   DWORD PTR es:[edi],eax
  40bf02:	sub    eax,0xf648ec43
  40bf07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf08:	jns    0x40bf34
  40bf0a:	mov    bh,BYTE PTR [edi+0x7e]
  40bf0d:	es data16 jge 0x40be9a
  40bf11:	aas    
  40bf12:	aad    0x48
  40bf14:	out    dx,al
  40bf15:	out    dx,eax
  40bf16:	mov    esp,0x5ed2a30c
  40bf1b:	mov    ah,dh
  40bf1d:	scas   eax,DWORD PTR es:[edi]
  40bf1e:	mov    edx,0xc0c2b3d0
  40bf23:	out    dx,eax
  40bf24:	in     al,dx
  40bf25:	int3   
  40bf26:	je     0x40bf02
  40bf28:	jmp    0xfe62:0xadca1cd1
  40bf2f:	mov    ah,0x34
  40bf31:	(bad)  
  40bf33:	xor    edi,DWORD PTR [eax+ecx*2]
  40bf36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf37:	push   ebp
  40bf38:	arpl   WORD PTR [ebx-0x5e848b77],si
  40bf3e:	cmc    
  40bf3f:	sar    BYTE PTR [ebp+0x4c],1
  40bf42:	cmc    
  40bf43:	sbb    BYTE PTR [eax-0x3ba2e715],dh
  40bf49:	dec    ebx
  40bf4a:	pop    ss
  40bf4b:	cmp    edi,DWORD PTR [eax]
  40bf4d:	mov    dl,0x60
  40bf4f:	aam    0xba
  40bf51:	fidiv  WORD PTR [esp+ecx*1+0x30f671f5]
  40bf58:	mov    edx,edx
  40bf5a:	and    al,0xb6
  40bf5c:	mov    edi,0x4d5e567c
  40bf61:	add    al,0x6e
  40bf63:	pop    edx
  40bf64:	xchg   DWORD PTR [esi+0x4c],eax
  40bf67:	stos   DWORD PTR es:[edi],eax
  40bf68:	and    al,0x3
  40bf6a:	cmc    
  40bf6b:	dec    edx
  40bf6c:	inc    ch
  40bf6e:	mov    bh,0x70
  40bf70:	xchg   ebx,eax
  40bf71:	in     eax,0x7a
  40bf73:	xor    ebx,ebx
  40bf75:	jne    0x40bf29
  40bf77:	test   al,0x1
  40bf79:	enter  0x1987,0xf9
  40bf7d:	push   ebp
  40bf7e:	cld    
  40bf7f:	mov    edi,0x91e4bc38
  40bf84:	pop    esp
  40bf85:	xchg   ecx,eax
  40bf86:	(bad)  
  40bf87:	std    
  40bf88:	test   DWORD PTR [ebx-0x3ec9627e],esp
  40bf8e:	sbb    al,0x36
  40bf90:	dec    ebp
  40bf91:	push   esi
  40bf92:	xor    dh,BYTE PTR [esi+0x588dd20c]
  40bf98:	adc    al,0xd0
  40bf9a:	push   cs
  40bf9b:	in     eax,dx
  40bf9c:	les    eax,FWORD PTR [ecx-0x2321f7e3]
  40bfa2:	mov    WORD PTR [edi-0x77],cs
  40bfa5:	mov    esp,0x39b8db00
  40bfaa:	lods   eax,DWORD PTR ds:[esi]
  40bfab:	mov    al,0x52
  40bfad:	dec    eax
  40bfae:	cmp    ch,ch
  40bfb0:	leave  
  40bfb1:	mov    al,ds:0xa691f36b
  40bfb6:	iret   
  40bfb7:	xchg   ebp,eax
  40bfb8:	jno    0x40bfaa
  40bfba:	sub    BYTE PTR ss:[ebx-0x530b6e4],dl
  40bfc1:	mov    cl,0xd0
  40bfc3:	in     eax,dx
  40bfc4:	in     eax,dx
  40bfc5:	xchg   ebx,eax
  40bfc6:	or     ebx,DWORD PTR [ebx-0x29]
  40bfc9:	std    
  40bfca:	jmp    0x40c00e
  40bfcc:	xchg   edi,eax
  40bfcd:	cli    
  40bfce:	inc    esp
  40bfcf:	push   edx
  40bfd0:	adc    ebp,DWORD PTR [ecx]
  40bfd2:	push   ebx
  40bfd3:	inc    esp
  40bfd4:	jnp    0x40c01c
  40bfd6:	cmp    DWORD PTR [ebp+0x3b507bf6],edx
  40bfdc:	jno    0x40bf69
  40bfde:	ss xchg ecx,eax
  40bfe0:	shl    ebp,0xd9
  40bfe3:	fisttp DWORD PTR [edx+0x64]
  40bfe6:	inc    eax
  40bfe7:	push   cs
  40bfe8:	cld    
  40bfe9:	scas   eax,DWORD PTR es:[edi]
  40bfea:	test   al,0xa0
  40bfec:	mov    ds:0x876d0a38,al
  40bff1:	adc    BYTE PTR [ebp+0x51185d6f],dh
  40bff7:	outs   dx,DWORD PTR ds:[esi]
  40bff8:	cmp    al,0x14
  40bffa:	(bad)  
  40bffc:	into   
  40bffd:	jmp    0x40c03e
  40bfff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c000:	(bad)  
  40c002:	bound  ebp,QWORD PTR [edi+0x51636ab0]
  40c008:	mov    fs,WORD PTR [edx+0x7534e4c9]
  40c00e:	cli    
  40c00f:	je     0x40bfc9
  40c011:	clc    
  40c012:	adc    esp,edi
  40c014:	mov    ah,0xf7
  40c016:	add    cl,dh
  40c018:	or     esi,DWORD PTR [eax+0x5d739417]
  40c01e:	loope  0x40c03c
  40c020:	imul   ebx,DWORD PTR [esi-0x49],0x33932405
  40c027:	sub    ebp,DWORD PTR [ecx]
  40c029:	and    BYTE PTR [ecx+0x409f563c],0xef
  40c030:	push   edx
  40c031:	call   esp
  40c033:	loope  0x40c00d
  40c035:	in     eax,0x18
  40c037:	lods   al,BYTE PTR ds:[esi]
  40c038:	dec    edx
  40c039:	mov    ch,0x82
  40c03b:	loopne 0x40c0ab
  40c03d:	adc    edx,esi
  40c03f:	popa   
  40c040:	sub    BYTE PTR [edx+0x5d],bl
  40c043:	fbld   TBYTE PTR [edx]
  40c045:	push   eax
  40c046:	in     eax,0xb1
  40c048:	cli    
  40c049:	iret   
  40c04a:	jmp    0x39c0fc3a
  40c04f:	jb     0x40bfe3
  40c051:	or     dh,BYTE PTR [ecx-0x18c1a4dc]
  40c057:	(bad)  
  40c058:	mov    ds:0xef3d26a6,eax
  40c05d:	icebp  
  40c05e:	xchg   edi,eax
  40c05f:	add    DWORD PTR [ebx-0x5a],esp
  40c062:	fistp  QWORD PTR [esp+ecx*4+0x3fe2f19d]
  40c069:	in     al,0x47
  40c06b:	daa    
  40c06c:	push   esi
  40c06e:	push   ss
  40c06f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c070:	sbb    eax,esi
  40c072:	shl    eax,1
  40c074:	repnz fs adc al,0xbb
  40c078:	das    
  40c079:	add    eax,0xae53fd1e
  40c07e:	nop
  40c07f:	call   0xddacd485
  40c084:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c085:	inc    ebx
  40c086:	lods   al,BYTE PTR ds:[esi]
  40c087:	or     eax,0xa4061c44
  40c08c:	repnz aaa 
  40c08e:	out    dx,eax
  40c08f:	xor    al,0x99
  40c091:	call   0xaae2:0x81ea0e97
  40c098:	jmp    0x2fb8c8e4
  40c09d:	lds    ebp,FWORD PTR [eax+0x13]
  40c0a0:	cli    
  40c0a1:	sbb    al,0x4c
  40c0a3:	fidivr WORD PTR [ecx+eax*8+0x15e04765]
  40c0aa:	cmp    bl,BYTE PTR [eax-0x6d9e1bc6]
  40c0b0:	rcl    BYTE PTR ss:[esi-0x260be294],0xb4
  40c0b8:	iret   
  40c0b9:	xor    ah,0xdd
  40c0bc:	in     eax,dx
  40c0bd:	je     0x40c070
  40c0bf:	ret    0xda4d
  40c0c2:	jg     0x40c135
  40c0c4:	mov    al,dh
  40c0c6:	(bad)  
  40c0c7:	cmp    eax,0x540730bb
  40c0cc:	adc    al,0x19
  40c0ce:	les    edi,FWORD PTR [ebx+0x6d]
  40c0d1:	cmp    BYTE PTR [eax-0x48],dl
  40c0d4:	fistp  WORD PTR [eax]
  40c0d6:	bound  esi,QWORD PTR [ebp+0x1e]
  40c0d9:	inc    edi
  40c0da:	or     BYTE PTR [ebx-0x2e6f6750],ch
  40c0e0:	pop    ebx
  40c0e1:	in     eax,0x60
  40c0e3:	mov    ds:0x1a9479d0,al
  40c0e8:	sbb    bl,bl
  40c0ea:	add    ebx,ebx
  40c0ec:	sbb    BYTE PTR [edi+ebx*4-0x5a],dh
  40c0f0:	pop    esi
  40c0f1:	rcr    BYTE PTR [esi-0xf0c5587],0x75
  40c0f8:	and    BYTE PTR ds:0xa5841b99,bl
  40c0fe:	and    dh,BYTE PTR [eax+0x60fb96d3]
  40c104:	dec    edi
  40c105:	jg     0x40c10b
  40c107:	jb     0x40c145
  40c109:	out    dx,al
  40c10a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c10b:	div    DWORD PTR [eax]
  40c10d:	mov    DWORD PTR [ebx+0x78],0x899d3270
  40c114:	adc    BYTE PTR [ebp-0x72278d28],dl
  40c11a:	pop    ds
  40c11b:	test   al,0x63
  40c11d:	enter  0x67c,0xc7
  40c121:	add    edi,DWORD PTR [ebx+eiz*1-0xa]
  40c125:	pop    edx
  40c126:	jl     0x40c0fc
  40c128:	jb     0x40c192
  40c12a:	dec    ebp
  40c12b:	cmovns edi,DWORD PTR [ebx+eiz*8]
  40c12f:	sub    dh,BYTE PTR [eax+0x2]
  40c132:	push   es
  40c133:	mov    edi,0xe4f1a25d
  40c138:	sub    DWORD PTR ds:0x93bdcbbe,ebp
  40c13e:	mov    al,0xf4
  40c140:	inc    ebx
  40c141:	pop    edx
  40c142:	test   BYTE PTR [esi+0x7bbe59ec],dl
  40c148:	cmp    al,0x67
  40c14a:	mov    ebx,0xfd1b452b
  40c14f:	out    0x2a,al
  40c151:	mov    esp,edi
  40c153:	xchg   edi,eax
  40c154:	mov    cl,0x9e
  40c156:	mov    bh,0xe4
  40c158:	jcxz   0x40c145
  40c15b:	and    ebp,eax
  40c15d:	test   eax,0xe7c5f744
  40c162:	mov    dh,BYTE PTR [edi]
  40c164:	and    al,0xa5
  40c166:	test   eax,0xe7bb422a
  40c16b:	sti    
  40c16c:	inc    BYTE PTR [edx]
  40c16e:	inc    ebp
  40c16f:	mov    WORD PTR [ecx-0x62],ds
  40c172:	into   
  40c173:	cdq    
  40c174:	fbld   TBYTE PTR [esi+edi*4]
  40c177:	mov    dl,0xac
  40c179:	retf   
  40c17a:	dec    eax
  40c17b:	shl    eax,cl
  40c17d:	xor    edx,DWORD PTR [ecx]
  40c17f:	rcr    dh,cl
  40c181:	cmp    BYTE PTR [edx+0x47],ch
  40c184:	xchg   BYTE PTR [ecx-0x7e],bl
  40c187:	repnz and edi,0x26
  40c18b:	std    
  40c18c:	arpl   WORD PTR [esi],dx
  40c18e:	bound  edi,QWORD PTR [esi+0x12]
  40c191:	cmp    al,0xd2
  40c193:	or     al,BYTE PTR ds:0x5189ff72
  40c199:	jno    0x40c152
  40c19b:	jmp    0x40c13a
  40c19d:	arpl   si,sp
  40c19f:	pop    esi
  40c1a0:	mov    edx,0x74c8077e
  40c1a5:	dec    edx
  40c1a6:	adc    eax,0x150bbd99
  40c1ab:	int3   
  40c1ac:	add    al,0x82
  40c1ae:	call   esi
  40c1b0:	jmp    0x5e061bd
  40c1b5:	mov    ecx,ebx
  40c1b7:	jle    0x40c1ba
  40c1b9:	retw   
  40c1bb:	scas   al,BYTE PTR es:[edi]
  40c1bc:	jp     0x40c18a
  40c1be:	adc    DWORD PTR [ecx-0x61],ebx
  40c1c1:	(bad)  
  40c1c2:	pop    ebx
  40c1c3:	in     al,0x97
  40c1c5:	stc    
  40c1c6:	add    BYTE PTR [esp+ebx*1],dh
  40c1c9:	fs mov edi,0xb5205e09
  40c1cf:	fnsave [ebx]
  40c1d1:	pop    edi
  40c1d2:	pop    ebx
  40c1d3:	inc    edi
  40c1d4:	stos   DWORD PTR es:[edi],eax
  40c1d5:	addr16 cmp eax,0x84254d69
  40c1db:	addr16 add eax,0x5a55e467
  40c1e1:	test   al,0xa
  40c1e3:	popa   
  40c1e4:	jge    0x40c1ec
  40c1e6:	fldenv [ecx+0x6]
  40c1e9:	inc    edx
  40c1ea:	mov    edx,0xf38508b3
  40c1ef:	push   ebx
  40c1f0:	retf   
  40c1f1:	inc    esp
  40c1f2:	sbb    eax,0x6e90fb18
  40c1f7:	call   DWORD PTR [edx]
  40c1f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1fa:	jbe    0x40c267
  40c1fc:	and    DWORD PTR [edx+0xf],ebx
  40c1ff:	icebp  
  40c200:	jo     0x40c214
  40c202:	jmp    0xa3c2748a
  40c207:	cs push ebp
  40c209:	imul   esi,DWORD PTR [si],0x78
  40c20d:	ficom  WORD PTR cs:[ebp+0x7e85c4f7]
  40c214:	add    al,0xdf
  40c216:	and    al,BYTE PTR [ecx]
  40c218:	or     eax,0x43fadafe
  40c21d:	jg     0x40c1a9
  40c21f:	dec    edx
  40c220:	fdiv   DWORD PTR [edi-0x48]
  40c223:	adc    bl,dl
  40c225:	and    ebp,DWORD PTR [edi+0x71c8b5]
  40c22b:	jnp    0x40c2ac
  40c22d:	bts    DWORD PTR [esi+0x48acf5d1],eax
  40c234:	ins    BYTE PTR es:[edi],dx
  40c235:	or     al,0xa2
  40c237:	cmp    dl,BYTE PTR [ebp-0x1e89c12f]
  40c23d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c23e:	daa    
  40c23f:	bound  esp,QWORD PTR [edi]
  40c241:	mov    ch,dl
  40c243:	or     esp,DWORD PTR [edx+0xeebc687]
  40c249:	adc    ebx,esi
  40c24b:	inc    esi
  40c24c:	mov    al,ds:0xc85c9033
  40c251:	and    DWORD PTR [edx+0x14ce08b9],ebx
  40c257:	ret    0x1e9f
  40c25a:	nop
  40c25b:	retf   0xa490
  40c25e:	mov    ecx,0xbe56b12
  40c263:	fwait
  40c264:	jmp    0x40c213
  40c266:	push   eax
  40c267:	xor    edi,DWORD PTR [ecx+0x2f]
  40c26a:	ret    0x7807
  40c26d:	mov    ecx,0x28b18e60
  40c272:	icebp  
  40c273:	cmp    BYTE PTR [ebx+0xa],0x90
  40c277:	sahf   
  40c278:	push   esp
  40c279:	iret   
  40c27a:	lods   al,BYTE PTR ds:[esi]
  40c27b:	cmp    ah,BYTE PTR [ecx]
  40c27d:	stc    
  40c27e:	jae    0x40c207
  40c280:	je     0x40c2e0
  40c282:	cmp    DWORD PTR [edx-0x75],esp
  40c285:	sub    edx,0x4c775640
  40c28b:	mov    ch,0x6e
  40c28d:	xchg   ebp,eax
  40c28e:	xor    dh,BYTE PTR [ebx-0x380f8982]
  40c294:	mov    esi,0xd15a4617
  40c299:	ja     0x40c24b
  40c29b:	adc    eax,0x836a38
  40c2a0:	xor    edx,ebp
  40c2a2:	inc    esi
  40c2a3:	push   es
  40c2a4:	sub    eax,0x40fad944
  40c2a9:	cmp    bl,BYTE PTR [esi+ebx*1+0x52]
  40c2ad:	cli    
  40c2ae:	add    edx,DWORD PTR [ebp-0x21]
  40c2b1:	mov    ?,WORD PTR [eax+0x26]
  40c2b4:	sbb    DWORD PTR [edx+0x1eb1de8a],ebp
  40c2ba:	mov    WORD PTR [ecx],es
  40c2bc:	inc    eax
  40c2bd:	xlat   BYTE PTR ds:[ebx]
  40c2be:	sbb    eax,DWORD PTR [eax+ebx*1+0x27d94452]
  40c2c5:	inc    edi
  40c2c6:	js     0x40c29f
  40c2c8:	pop    es
  40c2c9:	jae    0x40c2fb
  40c2cb:	ror    ah,0x5c
  40c2ce:	pop    eax
  40c2cf:	ss (bad) 
  40c2d3:	lea    esp,[ebp+0x2f]
  40c2d6:	sub    al,0x96
  40c2d8:	fst    QWORD PTR [eax]
  40c2da:	or     edx,ecx
  40c2dc:	(bad)  
  40c2dd:	leave  
  40c2de:	dec    edi
  40c2df:	pop    ds
  40c2e0:	ja     0x40c345
  40c2e2:	mov    bl,0xac
  40c2e4:	pop    esi
  40c2e5:	add    BYTE PTR [esi+0x9],bl
  40c2e8:	mov    DWORD PTR [edx+0x1470f2de],eax
  40c2ee:	xchg   edi,eax
  40c2ef:	loop   0x40c29e
  40c2f1:	mov    esp,0x3b489e08
  40c2f6:	add    BYTE PTR [ebp+0x45e6269c],ah
  40c2fc:	cwde   
  40c2fd:	test   al,0xfc
  40c2ff:	(bad)  
  40c300:	pop    ss
  40c301:	not    edi
  40c303:	icebp  
  40c304:	lods   eax,DWORD PTR ds:[esi]
  40c305:	mov    ah,dh
  40c307:	mov    dl,0xa1
  40c309:	mov    ds:0xd9fac190,eax
  40c30e:	push   esp
  40c30f:	inc    ebp
  40c310:	je     0x40c34f
  40c312:	inc    eax
  40c313:	retf   
  40c314:	cdq    
  40c315:	shl    DWORD PTR [esi],0x2a
  40c318:	jl     0x40c2b2
  40c31a:	mov    esi,0xc8b2cfce
  40c31f:	pop    ss
  40c320:	sbb    bl,BYTE PTR [ebx]
  40c322:	sub    ah,BYTE PTR [ebx]
  40c324:	les    ecx,FWORD PTR [esi]
  40c326:	add    ah,BYTE PTR [eax]
  40c328:	adc    al,0x60
  40c32a:	jmp    0xc052:0x28f4149d
  40c331:	dec    ebp
  40c332:	scas   al,BYTE PTR es:[edi]
  40c333:	xchg   DWORD PTR [ecx],ebp
  40c335:	xchg   edx,eax
  40c336:	pop    ebp
  40c337:	gs cmp edx,ebp
  40c33a:	out    dx,eax
  40c33b:	inc    ebx
  40c33c:	pop    edx
  40c33d:	int3   
  40c33e:	cld    
  40c33f:	jne    0x40c31f
  40c341:	xor    DWORD PTR [ebx],ecx
  40c343:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c344:	out    0xbb,eax
  40c346:	pop    esi
  40c347:	fisubr DWORD PTR [ebp-0x6115349e]
  40c34d:	push   eax
  40c34e:	rol    BYTE PTR [edi+0x591c160f],1
  40c354:	mov    ebp,0x9d1c2ae2
  40c359:	rcr    DWORD PTR [ecx-0x6e],1
  40c35c:	sub    BYTE PTR [ecx+0x597ebb5c],al
  40c362:	shl    BYTE PTR [ecx],1
  40c364:	test   al,0xfe
  40c366:	(bad)  
  40c367:	into   
  40c368:	lds    esp,FWORD PTR ds:0x89caa921
  40c36e:	mov    ah,0xc7
  40c370:	aam    0xbc
  40c372:	jmp    0xa843:0x3db2bf54
  40c379:	xchg   edi,eax
  40c37a:	sbb    bh,BYTE PTR [ebp-0x21]
  40c37d:	js     0x40c3f6
  40c37f:	mov    DWORD PTR [ecx+0x63b54b44],eax
  40c385:	mov    edi,0x4d39d08
  40c38a:	clc    
  40c38b:	sbb    eax,0x66dab4b5
  40c390:	data16 jl 0x40c372
  40c393:	xchg   DWORD PTR [edi],ebp
  40c395:	pop    ss
  40c396:	ins    BYTE PTR es:[edi],dx
  40c397:	jns    0x40c347
  40c399:	jmp    0x8c6206ea
  40c39e:	mov    dl,0x67
  40c3a0:	push   ecx
  40c3a1:	mov    ds:0xcdfc2b41,eax
  40c3a6:	imul   ebx,ebx,0x7b
  40c3a9:	push   ecx
  40c3aa:	and    BYTE PTR [ebx-0x5efa2436],bl
  40c3b0:	or     cl,0xb6
  40c3b3:	outs   dx,DWORD PTR ds:[esi]
  40c3b4:	mov    DWORD PTR [edx+0x8],edx
  40c3b7:	nop
  40c3b8:	mov    DWORD PTR [ecx],esp
  40c3ba:	mov    esi,0x60c3a20c
  40c3bf:	inc    edx
  40c3c0:	jo     0x40c355
  40c3c2:	ficomp WORD PTR [esi-0x69]
  40c3c5:	cwde   
  40c3c6:	xor    ah,BYTE PTR [esi]
  40c3c8:	dec    ecx
  40c3c9:	sub    BYTE PTR [ebx+0x3f],ch
  40c3cc:	mov    ch,BYTE PTR [edx+0x2b5fbe8c]
  40c3d2:	push   eax
  40c3d3:	in     eax,dx
  40c3d4:	or     ah,BYTE PTR [edx-0x2fbdfddf]
  40c3da:	test   BYTE PTR [eax+eiz*2],bh
  40c3dd:	xchg   esi,eax
  40c3de:	cmp    al,0x52
  40c3e0:	lods   al,BYTE PTR ds:[esi]
  40c3e1:	mov    al,0x89
  40c3e3:	in     eax,dx
  40c3e4:	lods   al,BYTE PTR ds:[esi]
  40c3e5:	fmul   st(6),st
  40c3e7:	fs sahf 
  40c3e9:	mov    bh,0x38
  40c3eb:	das    
  40c3ec:	gs inc ebp
  40c3ee:	dec    ecx
  40c3ef:	(bad)  
  40c3f0:	pop    ebp
  40c3f1:	jo     0x40c388
  40c3f3:	sahf   
  40c3f4:	jne    0x40c407
  40c3f6:	mov    BYTE PTR [edi],cl
  40c3f8:	test   dl,bh
  40c3fa:	push   ss
  40c3fb:	adc    eax,0x8dabef35
  40c400:	and    eax,0x250bb82d
  40c405:	jg     0x40c453
  40c407:	mov    DWORD PTR [ebx-0x28e972fe],edi
  40c40d:	jg     0x40c3b3
  40c40f:	xor    esi,esp
  40c411:	out    0x9c,al
  40c413:	push   esp
  40c414:	imul   ebx,DWORD PTR [edi-0x37],0x77
  40c418:	sbb    DWORD PTR [esi-0x9e1a9c2],esi
  40c41e:	mov    eax,ds:0x61dda559
  40c423:	jns    0x40c428
  40c425:	inc    ecx
  40c426:	popf   
  40c427:	sub    dl,0x41
  40c42a:	xor    BYTE PTR [edx+0x4a],ch
  40c42d:	cmp    BYTE PTR [ecx+0xee5c703],ah
  40c433:	inc    esp
  40c434:	stos   DWORD PTR es:[edi],eax
  40c435:	ins    DWORD PTR es:[edi],dx
  40c436:	(bad)  
  40c437:	js     0x40c419
  40c439:	xchg   edi,eax
  40c43a:	iret   
  40c43b:	dec    esp
  40c43c:	add    ch,bh
  40c43e:	fisubr WORD PTR ds:0xd25e5cec
  40c444:	in     eax,dx
  40c445:	sbb    eax,0x8c6a81df
  40c44a:	push   esi
  40c44b:	out    dx,al
  40c44c:	jno    0x40c47c
  40c44e:	mov    edx,0x501e1f01
  40c453:	mov    esi,0xd4f1d1fd
  40c458:	or     eax,0x197e7ae1
  40c45d:	and    DWORD PTR [esi-0x7f],esp
  40c460:	lods   al,BYTE PTR ds:[esi]
  40c461:	data16 (bad) 
  40c464:	out    0x8c,al
  40c466:	jmp    0x40c4e6
  40c468:	mov    edx,0xcccdeeb8
  40c46d:	mov    al,0xa2
  40c46f:	dec    edi
  40c470:	hlt    
  40c471:	jmp    0x40c4e4
  40c473:	test   DWORD PTR [esi-0x5aaf799d],edi
  40c479:	lods   al,BYTE PTR ds:[esi]
  40c47a:	mov    eax,ds:0x55fc5a43
  40c47f:	iret   
  40c480:	popa   
  40c481:	es pushf 
  40c483:	pop    es
  40c484:	mov    eax,DWORD PTR [edx]
  40c486:	pop    ebp
  40c487:	mov    al,0x1d
  40c489:	enter  0xe7d3,0x88
  40c48d:	sbb    ebx,DWORD PTR [ebx-0x4027605c]
  40c493:	retf   0xaec0
  40c496:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c497:	adc    eax,0x6a24b629
  40c49c:	add    BYTE PTR [edx-0x66c681e3],cl
  40c4a2:	push   edx
  40c4a3:	and    BYTE PTR [ecx+0x2391b898],bl
  40c4a9:	add    ecx,DWORD PTR [ebp-0x577aa727]
  40c4af:	xchg   edx,eax
  40c4b0:	ficom  WORD PTR [edi-0x3a843fe9]
  40c4b6:	pop    es
  40c4b7:	cli    
  40c4b8:	push   ecx
  40c4b9:	push   cs
  40c4ba:	mov    esp,0xd30f8419
  40c4bf:	sub    eax,eax
  40c4c1:	jmp    0x7117:0x825bd4a9
  40c4c8:	stos   BYTE PTR es:[edi],al
  40c4c9:	inc    esp
  40c4ca:	out    0xe4,eax
  40c4cc:	xchg   ecx,eax
  40c4cd:	stc    
  40c4ce:	mov    ch,0x65
  40c4d0:	pusha  
  40c4d1:	xchg   ebx,eax
  40c4d2:	mov    al,0x42
  40c4d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4d5:	fcmove st,st(3)
  40c4d7:	pop    edx
  40c4d8:	xor    eax,0x8e1c11e9
  40c4dd:	push   esp
  40c4de:	sub    eax,0xf253909a
  40c4e3:	pop    esi
  40c4e4:	jne    0x40c53b
  40c4e6:	je     0x40c546
  40c4e8:	and    bh,BYTE PTR [eax+ecx*1+0x293e07e]
  40c4ef:	ins    BYTE PTR es:[edi],dx
  40c4f0:	ss pop ds
  40c4f2:	adc    ch,dh
  40c4f4:	mov    eax,ds:0xb17133b3
  40c4f9:	or     ebp,DWORD PTR [esi-0x13]
  40c4fc:	icebp  
  40c4fd:	xchg   esi,eax
  40c4fe:	sub    al,BYTE PTR [edx]
  40c500:	push   esi
  40c501:	xchg   edi,eax
  40c502:	in     al,dx
  40c503:	mov    ch,bl
  40c505:	mov    dh,0x78
  40c507:	retf   0x90c7
  40c50a:	dec    edx
  40c50b:	popa   
  40c50c:	jl     0x40c52b
  40c50e:	sbb    BYTE PTR [ebp-0x9],0xf3
  40c512:	xchg   edx,eax
  40c513:	dec    ecx
  40c514:	push   ds
  40c515:	jno    0x40c52c
  40c517:	jb     0x40c57e
  40c519:	add    edi,DWORD PTR [esi-0x69b37bd0]
  40c51f:	pop    eax
  40c520:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c521:	mov    esp,0x7a6798de
  40c526:	mov    DWORD PTR [ecx+0x1bbff2be],esi
  40c52c:	into   
  40c52d:	mov    cl,dh
  40c52f:	imul   esp,DWORD PTR [esi+0x71],0xffffff9b
  40c533:	enter  0x62a2,0x33
  40c537:	pop    edx
  40c538:	ins    BYTE PTR es:[edi],dx
  40c539:	adc    bl,BYTE PTR [ebx+edx*8]
  40c53c:	pop    edx
  40c53d:	pop    es
  40c53e:	(bad)  
  40c540:	mov    edi,DWORD PTR [ecx-0x450b946c]
  40c546:	xlat   BYTE PTR ds:[ebx]
  40c547:	or     BYTE PTR [esi],dl
  40c549:	ret    
  40c54a:	push   edx
  40c54b:	ja     0x40c566
  40c54d:	or     al,0x8d
  40c54f:	pusha  
  40c550:	cs ficom WORD PTR gs:[eax-0xd78ac6e]
  40c558:	cmp    al,0xca
  40c55a:	lock stos BYTE PTR es:[edi],al
  40c55c:	push   eax
  40c55d:	or     BYTE PTR [ecx+0x27],bl
  40c560:	and    edx,DWORD PTR [ebx]
  40c562:	and    eax,0x47f3fce0
  40c567:	xor    al,0x16
  40c569:	lds    edx,FWORD PTR [edi]
  40c56b:	add    bh,dh
  40c56d:	cld    
  40c56e:	add    edi,esp
  40c570:	je     0x40c55c
  40c572:	dec    esi
  40c573:	lock scas al,BYTE PTR es:[edi]
  40c575:	push   cs
  40c576:	adc    BYTE PTR [ecx+0x71e930c6],cl
  40c57c:	adc    esi,DWORD PTR [eax]
  40c57e:	inc    ecx
  40c57f:	ds push edx
  40c581:	adc    dh,BYTE PTR [eax]
  40c583:	xchg   esp,eax
  40c584:	dec    edx
  40c585:	test   eax,0xb1590671
  40c58a:	xor    esp,0xf22b44f3
  40c590:	test   al,0x1f
  40c592:	push   ebp
  40c593:	jb     0x40c529
  40c595:	push   ebx
  40c596:	sub    DWORD PTR ds:0x92f21ad,ebx
  40c59c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c59d:	or     al,0x60
  40c59f:	icebp  
  40c5a0:	ret    
  40c5a1:	mov    BYTE PTR [ebp-0x4eb5e7a0],al
  40c5a7:	outs   dx,BYTE PTR ds:[esi]
  40c5a8:	icebp  
  40c5a9:	pop    ecx
  40c5aa:	mov    esi,0x2c79c4ab
  40c5af:	or     al,0xac
  40c5b1:	shr    BYTE PTR [ecx+eax*4],cl
  40c5b4:	(bad)  
  40c5b5:	pop    ecx
  40c5b6:	sbb    al,BYTE PTR [eax+0x6c]
  40c5b9:	push   ss
  40c5ba:	call   0xb86d61d8
  40c5bf:	xchg   esp,eax
  40c5c0:	in     al,dx
  40c5c1:	add    al,0x78
  40c5c3:	mov    ecx,0xf04db411
  40c5c8:	add    al,0xe2
  40c5ca:	inc    ebx
  40c5cb:	mov    ebp,0x5ada801e
  40c5d0:	cmp    eax,0x5a1a65b5
  40c5d5:	lods   al,BYTE PTR ds:[esi]
  40c5d6:	cmp    eax,0xfe7e7db5
  40c5db:	sbb    DWORD PTR [ecx+0x6c20ca0e],ecx
  40c5e1:	xor    BYTE PTR [ecx],bh
  40c5e3:	ins    BYTE PTR es:[edi],dx
  40c5e4:	xchg   BYTE PTR [edx+0x49088e0a],al
  40c5ea:	adc    al,0x85
  40c5ec:	es adc eax,0x75777af0
  40c5f2:	loop   0x40c593
  40c5f4:	movaps XMMWORD PTR [ebx-0x504f13cb],xmm3
  40c5fb:	daa    
  40c5fc:	not    DWORD PTR ds:0xf43f082d
  40c602:	adc    bl,BYTE PTR [edx+0x619b98d]
  40c608:	add    eax,edi
  40c60a:	pop    ebx
  40c60b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c60c:	scas   eax,DWORD PTR es:[edi]
  40c60d:	imul   ebx,esp,0xedb14e8a
  40c613:	scas   eax,DWORD PTR es:[edi]
  40c614:	sub    eax,0xcf185f7
  40c619:	pop    ds
  40c61a:	add    al,0xa8
  40c61c:	mov    al,0xe3
  40c61e:	enter  0x5fa,0x92
  40c622:	(bad)  
  40c623:	fldl2t 
  40c625:	jp     0x40c66f
  40c627:	fiadd  DWORD PTR [eax]
  40c629:	xchg   DWORD PTR [edi+0x39],eax
  40c62c:	pop    ecx
  40c62d:	push   edx
  40c62e:	lods   eax,DWORD PTR ds:[esi]
  40c62f:	mov    edi,0x46a02ad5
  40c634:	and    ecx,DWORD PTR [eax+0x7b271c4d]
  40c63a:	pop    edx
  40c63b:	push   ebp
  40c63c:	jo     0x40c5c1
  40c63e:	inc    ebp
  40c63f:	add    DWORD PTR ds:0x240ce2b1,esi
  40c645:	iret   
  40c646:	push   eax
  40c647:	xor    BYTE PTR [esi+0x4ae7cb09],bh
  40c64d:	inc    edx
  40c64e:	mov    dl,0x2c
  40c650:	retf   0x70ac
  40c653:	nop
  40c654:	or     eax,0xb553b731
  40c659:	or     al,0x2d
  40c65b:	jns    0x146d8f89
  40c661:	sahf   
  40c662:	js     0x40c691
  40c664:	(bad)  
  40c665:	int    0x19
  40c667:	(bad)  
  40c669:	adc    ecx,esp
  40c66b:	dec    eax
  40c66c:	mov    esi,0x4be41940
  40c671:	and    DWORD PTR [edi-0xe30fc81],esi
  40c677:	cmc    
  40c678:	stos   BYTE PTR es:[edi],al
  40c679:	pop    ecx
  40c67a:	mov    al,ds:0xde2d0e35
  40c67f:	mov    edx,0xbeed1ca
  40c684:	sbb    DWORD PTR [edi],esp
  40c686:	mov    ch,0x9b
  40c688:	pop    es
  40c689:	mov    bh,BYTE PTR [edx-0x36]
  40c68c:	repz adc al,0x36
  40c68f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c690:	xchg   edx,eax
  40c691:	cmp    al,0x15
  40c693:	bound  eax,QWORD PTR [esi]
  40c695:	push   edx
  40c696:	ret    0xae4f
  40c699:	dec    ebx
  40c69a:	aam    0xee
  40c69c:	repz mov ch,0x84
  40c69f:	(bad)  
  40c6a1:	xor    BYTE PTR [esi],0xb2
  40c6a4:	in     eax,0x15
  40c6a6:	(bad)  
  40c6a7:	(bad)  
  40c6a9:	pop    ecx
  40c6aa:	nop
  40c6ab:	ds jg  0x40c689
  40c6ae:	in     eax,dx
  40c6af:	push   esi
  40c6b0:	fisttp WORD PTR [esi+0x5f0691a4]
  40c6b6:	stc    
  40c6b7:	call   0xf1fb4435
  40c6bc:	or     eax,0x26d72837
  40c6c1:	mov    esi,0x667c74f1
  40c6c6:	fs push 0x662a509c
  40c6cc:	cli    
  40c6cd:	cwde   
  40c6ce:	es sub eax,0x2
  40c6d2:	pop    ecx
  40c6d3:	ret    0x8c00
  40c6d6:	inc    edi
  40c6d7:	retf   0xcdf1
  40c6da:	mov    ds:0xd22f749b,al
  40c6df:	xchg   esp,eax
  40c6e0:	(bad)  
  40c6e1:	arpl   di,sp
  40c6e3:	aaa    
  40c6e4:	mov    al,ds:0x8d447a88
  40c6e9:	or     ch,ah
  40c6eb:	xor    eax,DWORD PTR ds:0xff66de40
  40c6f1:	ins    BYTE PTR es:[edi],dx
  40c6f2:	loope  0x40c6f2
  40c6f4:	out    0xf2,eax
  40c6f6:	clc    
  40c6f7:	inc    esi
  40c6f8:	test   BYTE PTR [eax+0x79],dh
  40c6fb:	inc    esp
  40c6fc:	add    dl,ah
  40c6fe:	fmul   DWORD PTR [esi-0x27ea4c10]
  40c704:	dec    edi
  40c705:	jp     0x40c74b
  40c707:	inc    ebp
  40c708:	fcmovbe st,st(3)
  40c70a:	(bad)  
  40c70b:	loope  0x40c75b
  40c70d:	pop    edx
  40c70e:	icebp  
  40c70f:	rol    cl,1
  40c711:	pop    ebp
  40c712:	mov    WORD PTR [esp+eiz*4],es
  40c715:	cdq    
  40c716:	or     DWORD PTR [eax],eax
  40c718:	sub    ebx,ebp
  40c71a:	xchg   esi,eax
  40c71b:	adc    edi,DWORD PTR [esi-0x1831b95e]
  40c721:	jns    0x40c70d
  40c723:	adc    DWORD PTR [eax+0x7d13242c],edi
  40c729:	push   edx
  40c72a:	xchg   ecx,eax
  40c72b:	cs pop esp
  40c72d:	and    BYTE PTR [edi+0x2cdca92e],ch
  40c733:	xor    BYTE PTR [eax],bh
  40c735:	sub    BYTE PTR [eax-0x33ab5e46],bl
  40c73b:	rol    BYTE PTR [esi+0x5b8d1ccb],cl
  40c741:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c742:	push   edi
  40c743:	mov    esi,cs
  40c745:	adc    DWORD PTR [edi-0x52],edi
  40c748:	jg     0x40c783
  40c74a:	pop    edi
  40c74b:	push   0xb2371e48
  40c750:	in     al,0xd0
  40c752:	mov    ah,0xf3
  40c754:	jle    0x40c6eb
  40c756:	jb     0x40c72d
  40c758:	scas   eax,DWORD PTR es:[edi]
  40c759:	neg    ebp
  40c75b:	lds    edi,FWORD PTR [ebp+0x70bac4fc]
  40c761:	outs   dx,BYTE PTR ds:[esi]
  40c762:	mov    dh,0x7e
  40c764:	retf   
  40c765:	pop    esi
  40c766:	or     DWORD PTR [edx-0x2d],ebp
  40c769:	sub    BYTE PTR [ebx+0x7099d38d],0x72
  40c770:	xchg   edi,eax
  40c771:	dec    esp
  40c772:	out    0xe7,eax
  40c774:	cld    
  40c775:	adc    edi,ebp
  40c777:	jg     0x40c714
  40c779:	sbb    bl,BYTE PTR [edx]
  40c77b:	pop    ebx
  40c77c:	rol    ecx,0xc9
  40c77f:	xchg   ecx,eax
  40c780:	push   edx
  40c781:	in     eax,0x85
  40c783:	out    dx,eax
  40c784:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c785:	cmp    al,BYTE PTR [edx-0x78]
  40c788:	pop    ebx
  40c789:	mov    dh,0xd2
  40c78b:	clc    
  40c78c:	jns    0x40c7e2
  40c78e:	inc    ebx
  40c78f:	mov    ds:0x9f955a11,eax
  40c794:	push   esi
  40c795:	mov    esp,0x4a802f73
  40c79a:	push   edx
  40c79b:	jl     0x40c71e
  40c79d:	push   ebx
  40c79e:	push   0x30f5a835
  40c7a3:	add    ch,BYTE PTR [eax+0x7f]
  40c7a6:	(bad)  
  40c7a7:	push   ebx
  40c7a8:	jge    0x40c746
  40c7aa:	cdq    
  40c7ab:	sub    eax,0xc688e521
  40c7b0:	pop    esp
  40c7b1:	push   ebp
  40c7b2:	(bad)  
  40c7b4:	push   esi
  40c7b5:	stc    
  40c7b6:	dec    edx
  40c7b7:	lods   al,BYTE PTR ds:[esi]
  40c7b8:	fst    QWORD PTR ds:0xc3d7c1ea
  40c7be:	and    DWORD PTR [ebx-0x46e8d463],0xdea168fe
  40c7c8:	push   cs
  40c7c9:	xor    DWORD PTR [ebx+0x279d91aa],ebx
  40c7cf:	cmp    eax,0x112f778b
  40c7d4:	mov    eax,ds:0xa456dfb6
  40c7d9:	pop    ds
  40c7da:	sbb    DWORD PTR [edi],ecx
  40c7dc:	jne    0x40c75e
  40c7de:	dec    edx
  40c7df:	arpl   WORD PTR [esi-0x2d7d894a],bx
  40c7e5:	arpl   WORD PTR [edx+eax*8-0x690416e6],bx
  40c7ec:	jbe    0x40c7dc
  40c7ee:	push   edi
  40c7ef:	(bad)  
  40c7f0:	icebp  
  40c7f1:	mov    ah,0x77
  40c7f3:	inc    ecx
  40c7f4:	ror    BYTE PTR [esi],1
  40c7f6:	or     eax,0x6b6ace
  40c7fb:	mov    ds:0xbfbcdb88,al
  40c800:	out    dx,al
  40c801:	sti    
  40c802:	pop    ebx
  40c803:	add    eax,0x39302149
  40c808:	mov    esi,0x4e6cade7
  40c80d:	push   ebx
  40c80e:	sub    ebp,0x29
  40c811:	std    
  40c812:	les    esi,FWORD PTR [esi-0x27e87147]
  40c818:	lea    esp,[ecx-0x4563abbd]
  40c81e:	clc    
  40c81f:	xchg   DWORD PTR ds:0x4733092b,ebp
  40c825:	cld    
  40c826:	cli    
  40c827:	sbb    BYTE PTR [edx-0x77],ah
  40c82a:	and    BYTE PTR [eax],dl
  40c82c:	retf   
  40c82d:	cs pop esp
  40c82f:	mov    BYTE PTR [ebx+0x10],bh
  40c832:	jbe    0x40c815
  40c834:	call   0x97a00eca
  40c839:	and    al,0x67
  40c83b:	enter  0xcc58,0x81
  40c83f:	jg     0x40c88a
  40c841:	in     al,dx
  40c842:	xor    al,0x42
  40c844:	add    BYTE PTR [ebx-0x4d],0x2b
  40c848:	or     ebx,DWORD PTR [ebx+eiz*2]
  40c84b:	cmp    ch,BYTE PTR [edi+0x21fdf835]
  40c851:	mov    dh,0x8f
  40c853:	jbe    0x40c7ea
  40c855:	arpl   WORD PTR [ebx-0x5d],di
  40c858:	iret   
  40c859:	daa    
  40c85a:	cmp    al,0xce
  40c85c:	and    eax,0xda720875
  40c861:	jb     0x40c809
  40c863:	out    dx,eax
  40c864:	mov    ch,0x32
  40c866:	inc    ebp
  40c867:	push   0x400cd316
  40c86c:	imul   ecx,esi,0x1667f0c8
  40c872:	sbb    bl,BYTE PTR [eax+0x6a]
  40c875:	mov    bh,0x9e
  40c877:	ss and al,0x7a
  40c87a:	in     al,0xb9
  40c87c:	add    al,0xf2
  40c87e:	mov    ds:0x636a2b30,eax
  40c883:	dec    eax
  40c884:	sub    BYTE PTR [edi+0x778cac48],0x50
  40c88b:	nop
  40c88c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c88d:	sbb    ch,BYTE PTR [edx+0x5b3a2667]
  40c893:	xor    al,ah
  40c895:	ret    0xdbc5
  40c898:	mov    ch,0x9d
  40c89a:	sahf   
  40c89b:	sar    DWORD PTR [ecx+0x4d97b92e],0xf0
  40c8a2:	cdq    
  40c8a3:	icebp  
  40c8a4:	mov    dl,ch
  40c8a6:	fldenv [esi]
  40c8a8:	bound  edi,QWORD PTR [edi-0x6be8983f]
  40c8ae:	sti    
  40c8af:	leave  
  40c8b0:	int    0x8
  40c8b2:	xchg   edi,eax
  40c8b3:	mov    esp,0x96c22f9d
  40c8b8:	lahf   
  40c8b9:	cmp    esp,DWORD PTR [esi-0x69]
  40c8bc:	jecxz  0x40c935
  40c8be:	or     ecx,DWORD PTR [ecx+ebp*1]
  40c8c1:	mov    ah,0xad
  40c8c3:	(bad)  
  40c8c4:	fwait
  40c8c5:	pusha  
  40c8c6:	fnsave [eax]
  40c8c8:	mov    bh,0x57
  40c8ca:	dec    esi
  40c8cb:	sahf   
  40c8cc:	jge    0x40c896
  40c8ce:	retf   
  40c8cf:	mov    ch,0xfb
  40c8d1:	shl    bl,1
  40c8d3:	stos   DWORD PTR es:[edi],eax
  40c8d4:	ins    DWORD PTR es:[edi],dx
  40c8d5:	arpl   bx,sp
  40c8d7:	pop    esp
  40c8d8:	adc    DWORD PTR [esi-0x1e7904e3],esp
  40c8de:	pop    ebp
  40c8df:	mov    bh,0xc1
  40c8e1:	jo     0x40c8ac
  40c8e3:	cmc    
  40c8e4:	mov    bh,al
  40c8e6:	rol    DWORD PTR [ebx+0x7c],1
  40c8e9:	inc    eax
  40c8ea:	fcomip st,st(5)
  40c8ec:	sahf   
  40c8ed:	ins    DWORD PTR es:[edi],dx
  40c8ee:	fldcw  WORD PTR [edx+0x5d2be27c]
  40c8f4:	mov    esi,esp
  40c8f6:	jo     0x40c89c
  40c8f8:	add    DWORD PTR [edx+0x79f74b35],edi
  40c8fe:	adc    edi,DWORD PTR [esi+0x645d1b7]
  40c904:	fsub   QWORD PTR [ebx]
  40c906:	nop
  40c907:	ja     0x40c953
  40c909:	dec    edx
  40c90a:	push   esp
  40c90b:	gs enter 0x90ee,0x2a
  40c910:	sbb    DWORD PTR [ecx+0x53],edi
  40c913:	int3   
  40c914:	xchg   BYTE PTR [edi],bl
  40c916:	xchg   edi,eax
  40c917:	daa    
  40c918:	mov    ch,0x98
  40c91a:	lock loope 0x40c8bb
  40c91d:	sbb    eax,0xcb080bc
  40c922:	adc    esi,eax
  40c924:	add    cl,BYTE PTR [esi]
  40c926:	fbstp  TBYTE PTR [esi]
  40c928:	sub    edi,DWORD PTR [esi-0x6c25581f]
  40c92e:	xchg   edx,eax
  40c92f:	xor    BYTE PTR [ebp-0x2a],0x26
  40c933:	aad    0xa
  40c935:	xchg   ebp,eax
  40c936:	lock es cmp ebx,edx
  40c93a:	adc    ebx,eax
  40c93c:	inc    edx
  40c93d:	fcmovu st,st(2)
  40c93f:	push   ds
  40c940:	mov    ecx,0xfa72a366
  40c945:	cmp    DWORD PTR [eax+0x1202afc6],ecx
  40c94b:	outs   dx,BYTE PTR ds:[esi]
  40c94c:	(bad)  
  40c94d:	xchg   ebp,eax
  40c94e:	inc    esi
  40c94f:	and    al,0xc4
  40c951:	fsubr  st(4),st
  40c953:	push   es
  40c954:	mov    eax,ds:0xc61cd8d5
  40c959:	imul   ecx,DWORD PTR [ebp+edx*2-0x7ef3fb81],0x73
  40c961:	dec    esi
  40c962:	push   edx
  40c963:	imul   edi,DWORD PTR [ecx+0x4024199b],0x3e5a5b61
  40c96d:	inc    edi
  40c96e:	loopne 0x40c94e
  40c970:	xor    BYTE PTR [edx-0x76e81d75],al
  40c976:	add    DWORD PTR [edi],ebx
  40c978:	in     al,dx
  40c979:	xor    al,0xcf
  40c97b:	jae    0x40c902
  40c97d:	call   0x2d8ed93e
  40c982:	ffree  st(6)
  40c984:	fcomp  QWORD PTR [ebx+0x7d]
  40c987:	pop    ecx
  40c988:	inc    edi
  40c989:	pop    ss
  40c98a:	cmp    BYTE PTR [eax],bh
  40c98c:	test   al,0x2
  40c98e:	rcr    BYTE PTR [edx],0x2f
  40c991:	in     eax,0xbc
  40c993:	addr16 dec esi
  40c995:	dec    esi
  40c996:	sub    eax,0x1699b66d
  40c99b:	mov    cl,0xc7
  40c99d:	add    DWORD PTR [ebp+0x3eabd4ee],ecx
  40c9a3:	cli    
  40c9a4:	inc    edx
  40c9a5:	shl    edx,cl
  40c9a7:	add    cl,BYTE PTR [edx]
  40c9a9:	cmp    esp,edi
  40c9ab:	push   es
  40c9ac:	jno    0x40c9d8
  40c9ae:	(bad)  
  40c9af:	repz xlat BYTE PTR ds:[ebx]
  40c9b1:	fisttp QWORD PTR [ebx+0x15a8e8ef]
  40c9b7:	arpl   WORD PTR [eax],bx
  40c9b9:	retf   
  40c9ba:	cmp    DWORD PTR [ecx-0x51],eax
  40c9bd:	jnp    0x40c9df
  40c9bf:	cmc    
  40c9c0:	ins    DWORD PTR es:[edi],dx
  40c9c1:	sub    bl,dh
  40c9c3:	repz sub ch,BYTE PTR [ebx-0x7c419bb9]
  40c9ca:	jmp    0xcfd32eb9
  40c9cf:	rol    BYTE PTR [edx],1
  40c9d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9d2:	jmp    0x40c9b9
  40c9d4:	jmp    0x40ca51
  40c9d6:	ret    
  40c9d7:	inc    eax
  40c9d8:	add    DWORD PTR ds:0x81889c86,ebp
  40c9de:	sub    eax,0xd85b3225
  40c9e3:	or     al,0x3b
  40c9e5:	int    0x39
  40c9e7:	and    al,0x79
  40c9e9:	xor    BYTE PTR [esi],0x79
  40c9ec:	(bad)  
  40c9ed:	jno    0x40c9d7
  40c9ef:	fcmovnbe st,st(4)
  40c9f1:	mov    cl,0xd2
  40c9f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9f4:	retf   
  40c9f5:	pop    ds
  40c9f6:	in     al,0x91
  40c9f8:	pop    edx
  40c9f9:	int    0xf5
  40c9fb:	push   edi
  40c9fc:	xchg   eax,esp
  40c9fe:	out    0xc8,al
  40ca00:	xchg   ecx,eax
  40ca01:	in     al,dx
  40ca02:	(bad)
  40ca05:	lahf   
  40ca06:	pop    edi
  40ca07:	mov    bh,0xca
  40ca09:	into   
  40ca0a:	lahf   
  40ca0b:	xor    eax,0xf33d5b0e
  40ca10:	and    BYTE PTR [eax-0x1e],dh
  40ca13:	jge    0x40ca42
  40ca15:	inc    esi
  40ca16:	mov    WORD PTR [eax+esi*4-0x4c],?
  40ca1a:	loope  0x40c9f9
  40ca1c:	aaa    
  40ca1d:	ja     0x40c9ae
  40ca1f:	pusha  
  40ca20:	call   0xc18b935f
  40ca25:	jge    0x40c9d1
  40ca27:	or     eax,0x893487b2
  40ca2c:	inc    edi
  40ca2d:	dec    ebx
  40ca2e:	js     0x40caa0
  40ca30:	xchg   ebp,eax
  40ca31:	jmp    0x40caaa
  40ca33:	clc    
  40ca34:	stos   DWORD PTR es:[edi],eax
  40ca35:	das    
  40ca36:	js     0x40ca61
  40ca38:	ds push es
  40ca3a:	adc    DWORD PTR [edx-0x6ef34861],ebp
  40ca40:	mov    ds:0x9fc5e27c,al
  40ca45:	pop    ecx
  40ca46:	sahf   
  40ca47:	and    al,0xc3
  40ca49:	inc    ebp
  40ca4a:	push   esi
  40ca4b:	in     eax,dx
  40ca4c:	dec    edx
  40ca4d:	ins    BYTE PTR es:[edi],dx
  40ca4e:	jle    0x40ca4c
  40ca50:	mov    ebp,DWORD PTR [ebx]
  40ca52:	es push es
  40ca54:	pop    edx
  40ca55:	lahf   
  40ca56:	cmp    eax,0x1677d27b
  40ca5b:	sub    DWORD PTR [edi],edi
  40ca5d:	gs (bad) 
  40ca60:	outs   dx,DWORD PTR ds:[esi]
  40ca61:	xor    ebp,DWORD PTR [esi+0x52]
  40ca64:	lods   eax,DWORD PTR ds:[esi]
  40ca65:	mov    ch,0xfc
  40ca67:	push   es
  40ca68:	cwde   
  40ca69:	push   eax
  40ca6a:	loope  0x40ca01
  40ca6c:	ss cdq 
  40ca6e:	fsub   QWORD PTR [ebx+0x14]
  40ca71:	pusha  
  40ca72:	iret   
  40ca73:	add    al,BYTE PTR [esi+0x43f8c89f]
  40ca79:	mov    ds:0xc13fa37a,al
  40ca7e:	and    eax,0x868abed5
  40ca83:	aas    
  40ca84:	push   es
  40ca85:	xchg   esp,eax
  40ca86:	mov    ebx,0x77507e63
  40ca8b:	inc    esi
  40ca8c:	dec    ecx
  40ca8d:	mov    BYTE PTR [edi],al
  40ca8f:	leave  
  40ca90:	cmp    dl,BYTE PTR [edx+0x46]
  40ca93:	push   es
  40ca94:	aam    0x14
  40ca96:	dec    esp
  40ca97:	cld    
  40ca98:	pop    eax
  40ca99:	sar    BYTE PTR gs:[ebx],cl
  40ca9c:	pop    ecx
  40ca9d:	or     ah,BYTE PTR [edx]
  40ca9f:	(bad)  
  40caa0:	sub    ecx,DWORD PTR [ebx+0x2d6d932d]
  40caa6:	push   esp
  40caa7:	leave  
  40caa8:	mov    edx,0xf1b64585
  40caad:	leave  
  40caae:	je     0x40cb24
  40cab0:	mov    DWORD PTR [ebp+0x7a],esp
  40cab3:	ret    
  40cab4:	dec    eax
  40cab5:	neg    DWORD PTR [esi]
  40cab7:	out    dx,al
  40cab8:	jbe    0x40cac9
  40caba:	sub    DWORD PTR [ebp+ebx*1+0x56],0xffffffa5
  40cabf:	adc    DWORD PTR [ecx-0xdea0ed9],esp
  40cac5:	or     eax,0x5d7907e7
  40caca:	push   ss
  40cacb:	push   es
  40cacc:	add    eax,0xbb6a506
  40cad1:	ficom  WORD PTR [edi+0x1f745d19]
  40cad7:	jo     0x40cb40
  40cad9:	add    bl,ah
  40cadb:	nop
  40cadc:	call   0x8e3b:0x6788fd68
  40cae3:	test   DWORD PTR [edx],edi
  40cae5:	clc    
  40cae6:	sahf   
  40cae7:	jnp    0x40ca79
  40cae9:	int    0x2d
  40caeb:	jmp    FWORD PTR [edx+edx*8+0x30bd730]
  40caf2:	aaa    
  40caf3:	stos   DWORD PTR es:[edi],eax
  40caf4:	inc    ebx
  40caf5:	fdivp  st(5),st
  40caf7:	ins    BYTE PTR es:[edi],dx
  40caf8:	inc    ebp
  40caf9:	test   eax,0x2bca545a
  40cafe:	jb     0x40cb2a
  40cb00:	test   ecx,ebx
  40cb02:	jmp    0x1916:0x89cce1c2
  40cb09:	mov    ds:0xf90384e8,eax
  40cb0e:	xor    eax,0xdda5e29a
  40cb13:	sub    eax,0x19834273
  40cb18:	add    edi,edi
  40cb1a:	(bad)  
  40cb1b:	fwait
  40cb1c:	jno    0x40cb52
  40cb1e:	sti    
  40cb1f:	push   ebp
  40cb20:	arpl   WORD PTR [ebx+0x4],bx
  40cb23:	(bad)  
  40cb25:	mov    dh,0x20
  40cb27:	sub    ah,BYTE PTR [edx+0x734a07a9]
  40cb2d:	rcl    ah,0x87
  40cb30:	aas    
  40cb31:	add    eax,0x60a80879
  40cb36:	pusha  
  40cb37:	mov    ch,0xc
  40cb39:	fmul   DWORD PTR [ebx-0x3d54ad76]
  40cb3f:	pushf  
  40cb40:	cmp    WORD PTR [ecx+0x70],cx
  40cb44:	inc    eax
  40cb45:	scas   al,BYTE PTR es:[edi]
  40cb46:	inc    BYTE PTR [ecx-0x6]
  40cb49:	lock popf 
  40cb4b:	loop   0x40cbcc
  40cb4d:	rcr    ch,cl
  40cb4f:	jmp    0x5837:0x2dcedcb3
  40cb56:	mov    esp,0xf3936135
  40cb5b:	sub    ah,BYTE PTR [edi+edi*1-0x71]
  40cb5f:	or     dh,BYTE PTR [edi-0x15]
  40cb62:	or     BYTE PTR [ecx+0x10],dh
  40cb65:	sub    al,0x7f
  40cb67:	(bad)  
  40cb68:	in     eax,0xef
  40cb6a:	dec    edx
  40cb6b:	call   0x8a3f4479
  40cb70:	aaa    
  40cb71:	sub    dh,BYTE PTR [eax-0x3b232ae1]
  40cb77:	jecxz  0x40cb48
  40cb79:	je     0x40cb91
  40cb7b:	js     0x40cb64
  40cb7d:	outs   dx,DWORD PTR ds:[esi]
  40cb7e:	fld    TBYTE PTR [ebp+eiz*8-0x16]
  40cb82:	inc    ecx
  40cb83:	adc    al,0xe
  40cb85:	loopne 0x40cb78
  40cb87:	pushf  
  40cb88:	arpl   WORD PTR [edi],sp
  40cb8a:	mov    ebp,0xdca659c9
  40cb8f:	cmp    DWORD PTR [ecx+0x2ccb779d],ebx
  40cb95:	sub    ah,dh
  40cb97:	iret   
  40cb98:	frstor [ebx+0x68]
  40cb9b:	pop    es
  40cb9c:	jp     0x40cb56
  40cb9e:	jg     0x40cb37
  40cba0:	sbb    dl,BYTE PTR [ecx-0x33]
  40cba3:	sub    dl,BYTE PTR cs:[esi]
  40cba6:	or     cl,al
  40cba8:	pop    esi
  40cba9:	fadd   DWORD PTR [ecx+esi*1]
  40cbac:	repnz cdq 
  40cbae:	jbe    0x40cbd2
  40cbb0:	xchg   edi,eax
  40cbb1:	or     BYTE PTR [edx+0x4f],bh
  40cbb4:	xor    BYTE PTR [esi+0x25],bh
  40cbb7:	imul   ebx,DWORD PTR [edx],0xffffffd5
  40cbba:	stos   DWORD PTR es:[edi],eax
  40cbbb:	test   BYTE PTR [esi],0x75
  40cbbe:	addr16 mov edx,0x21435ca0
  40cbc4:	sar    BYTE PTR [esi-0x5b],cl
  40cbc7:	mov    DWORD PTR [esi+0x22],esp
  40cbca:	push   ds
  40cbcb:	xor    eax,0xb5009aa5
  40cbd0:	pop    ds
  40cbd1:	push   0x6f
  40cbd3:	stos   BYTE PTR es:[edi],al
  40cbd4:	(bad)  
  40cbd5:	fstp   st(4)
  40cbd7:	pop    ebp
  40cbd8:	xchg   ecx,eax
  40cbd9:	push   ds
  40cbda:	cld    
  40cbdb:	or     DWORD PTR [ecx+0x40def2c9],ebx
  40cbe1:	push   ebx
  40cbe2:	and    ch,ah
  40cbe4:	sbb    cl,bh
  40cbe6:	jg     0x40cc4f
  40cbe8:	or     eax,DWORD PTR [ebp+edi*8-0x42c35e37]
  40cbef:	and    eax,0xfa3696cb
  40cbf4:	adc    al,0x9
  40cbf6:	pop    edi
  40cbf7:	dec    eax
  40cbf8:	ret    
  40cbf9:	add    cl,BYTE PTR [ecx+ecx*1]
  40cbfc:	push   edx
  40cbfd:	jmp    0x40cc39
  40cbff:	dec    esp
  40cc00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc01:	pop    ecx
  40cc02:	aad    0x18
  40cc04:	mov    dh,0x7e
  40cc06:	outs   dx,BYTE PTR ds:[esi]
  40cc07:	aad    0x40
  40cc09:	xchg   edx,eax
  40cc0a:	xchg   edi,eax
  40cc0b:	sbb    dh,0xbb
  40cc0e:	aas    
  40cc0f:	das    
  40cc10:	inc    ebx
  40cc11:	fcomp  QWORD PTR [ecx-0x78e4566b]
  40cc17:	ret    
  40cc18:	adc    dl,ch
  40cc1a:	xor    eax,0x971db89e
  40cc1f:	out    dx,al
  40cc20:	pop    DWORD PTR [eax+0x690b7ee7]
  40cc26:	add    al,0x7d
  40cc28:	call   0x5b0d:0xd741a0a7
  40cc2f:	stos   DWORD PTR es:[edi],eax
  40cc30:	xchg   esi,eax
  40cc31:	sub    eax,0x450c79c2
  40cc36:	pop    edi
  40cc37:	daa    
  40cc38:	(bad)  
  40cc3a:	inc    eax
  40cc3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc3c:	cmp    BYTE PTR [edi+0x6b],al
  40cc3f:	sar    BYTE PTR [ebx],1
  40cc41:	rol    bh,cl
  40cc43:	or     DWORD PTR [ecx+0x42],esp
  40cc46:	push   0x3b9a77ed
  40cc4b:	aaa    
  40cc4c:	je     0x40cbfc
  40cc4e:	ins    BYTE PTR es:[edi],dx
  40cc4f:	sbb    eax,0x84b398ae
  40cc54:	xlat   BYTE PTR ds:[ebx]
  40cc55:	outs   dx,DWORD PTR ds:[esi]
  40cc56:	lds    edx,FWORD PTR [eax]
  40cc58:	push   ds
  40cc59:	mov    al,0x66
  40cc5b:	pop    ss
  40cc5c:	xor    DWORD PTR [edi-0x62],esp
  40cc5f:	ficomp WORD PTR [eax+0x5d]
  40cc62:	dec    ecx
  40cc63:	je     0x40cc64
  40cc65:	add    al,0x58
  40cc67:	jmp    0x7c5:0x707b1043
  40cc6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc70:	or     DWORD PTR [esi-0x5],0xacb8d6dc
  40cc77:	retf   0x1adf
  40cc7a:	push   edi
  40cc7b:	test   BYTE PTR [ecx],bl
  40cc7d:	fst    QWORD PTR [edi]
  40cc7f:	arpl   WORD PTR [edx],cx
  40cc81:	inc    eax
  40cc82:	mov    ah,0x37
  40cc84:	push   es
  40cc85:	sar    DWORD PTR [edx+0x4d],cl
  40cc88:	pop    ebp
  40cc89:	pop    ebp
  40cc8a:	fldenv [ebx+0x1f716b86]
  40cc90:	cmovno esp,esp
  40cc93:	jmp    0x2daf00a6
  40cc98:	mov    dh,0xbb
  40cc9a:	lods   eax,DWORD PTR ds:[esi]
  40cc9b:	fwait
  40cc9c:	push   cs
  40cc9d:	jnp    0x40cc29
  40cc9f:	adc    BYTE PTR [edi+edx*8-0x350961d1],dl
  40cca6:	(bad)  
  40cca7:	sbb    cl,ah
  40cca9:	jns    0x40cc2c
  40ccab:	push   esi
  40ccac:	cwde   
  40ccad:	shl    edi,0xef
  40ccb0:	jno    0x40cd2a
  40ccb2:	cmp    BYTE PTR [ebp-0x57],ah
  40ccb5:	ins    DWORD PTR es:[di],dx
  40ccb7:	lock dec ebx
  40ccb9:	pusha  
  40ccba:	jbe    0x40ccc7
  40ccbc:	test   BYTE PTR [edi+eiz*4],ah
  40ccbf:	fwait
  40ccc0:	mov    bl,0x95
  40ccc2:	sbb    ch,BYTE PTR [esi+0x16]
  40ccc5:	jge    0x40cd1a
  40ccc7:	or     BYTE PTR [esi],0xb0
  40ccca:	cwde   
  40cccb:	sar    DWORD PTR [eax],cl
  40cccd:	sar    BYTE PTR [edx+0x7a],cl
  40ccd0:	mov    eax,0x6088c740
  40ccd5:	dec    ebx
  40ccd6:	and    al,0x4c
  40ccd8:	push   cs
  40ccd9:	push   ds
  40ccda:	icebp  
  40ccdb:	jp     0x40ccb1
  40ccdd:	inc    ebx
  40ccde:	daa    
  40ccdf:	mov    cl,0x1e
  40cce1:	retf   0xbca9
  40cce4:	add    BYTE PTR [edi],dl
  40cce6:	mov    eax,?
  40cce8:	sbb    eax,0x4d772dd6
  40cced:	stc    
  40ccee:	xchg   esi,eax
  40ccef:	ins    DWORD PTR es:[edi],dx
  40ccf0:	popa   
  40ccf1:	(bad)  
  40ccf2:	mov    edx,0x3a58fc58
  40ccf7:	push   ebp
  40ccf8:	(bad)  
  40ccf9:	jmp    0x7a43:0x473a557
  40cd00:	stc    
  40cd01:	fist   WORD PTR [edi]
  40cd03:	adc    al,0x33
  40cd05:	push   ebx
  40cd06:	in     eax,0x6e
  40cd08:	shl    DWORD PTR [esp+edx*8-0x52011469],0x1b
  40cd10:	sbb    al,0xed
  40cd12:	cwde   
  40cd13:	lock mov bl,0x8f
  40cd16:	fbld   TBYTE PTR [edx]
  40cd18:	inc    DWORD PTR [ecx+0x3663b111]
  40cd1e:	aaa    
  40cd1f:	ret    
  40cd20:	fwait
  40cd21:	push   cs
  40cd22:	jae    0x40cce7
  40cd24:	rol    DWORD PTR [ebp*4-0x25cd384c],0x57
  40cd2c:	outs   dx,BYTE PTR ds:[esi]
  40cd2d:	and    eax,0xcfec7d80
  40cd32:	pop    ecx
  40cd33:	jge    0x40cd3d
  40cd35:	mov    BYTE PTR [ecx+eax*1],dl
  40cd38:	shl    esp,cl
  40cd3a:	cwde   
  40cd3b:	retf   0x1a9f
  40cd3e:	or     ebp,DWORD PTR [edx-0x3d]
  40cd41:	out    0x32,al
  40cd43:	test   DWORD PTR [esi],ebp
  40cd45:	mov    ah,0x71
  40cd47:	iret   
  40cd48:	xor    al,0x90
  40cd4a:	dec    eax
  40cd4b:	std    
  40cd4c:	and    ah,dl
  40cd4e:	xlat   BYTE PTR ds:[ebx]
  40cd4f:	dec    esi
  40cd50:	lods   al,BYTE PTR ds:[esi]
  40cd51:	das    
  40cd52:	arpl   WORD PTR [eax-0x44fc007b],sp
  40cd58:	pop    esi
  40cd59:	fist   WORD PTR [ebx-0x20a5e3e1]
  40cd5f:	mov    ebp,0xc399e97b
  40cd64:	adc    eax,0xde12d393
  40cd69:	sub    esp,DWORD PTR [ebx+0x11]
  40cd6c:	dec    ecx
  40cd6d:	out    dx,al
  40cd6e:	lds    ebp,FWORD PTR [eax-0x37]
  40cd71:	mov    ah,0x59
  40cd73:	lahf   
  40cd74:	out    dx,eax
  40cd75:	enter  0x1066,0xc3
  40cd79:	arpl   WORD PTR [ecx+eiz*8+0xd],di
  40cd7d:	xchg   eax,esp
  40cd7f:	test   al,0x9c
  40cd81:	clc    
  40cd82:	dec    ebp
  40cd83:	dec    edi
  40cd84:	cmp    eax,edx
  40cd86:	push   es
  40cd87:	(bad)
  40cd8a:	push   0x30
  40cd8c:	push   0x1bdaafa2
  40cd91:	pop    eax
  40cd92:	push   ebp
  40cd93:	(bad)  
  40cd95:	out    dx,al
  40cd96:	sti    
  40cd97:	lds    ebp,FWORD PTR [ebp-0x53]
  40cd9a:	leave  
  40cd9b:	lods   eax,DWORD PTR ds:[esi]
  40cd9c:	push   ecx
  40cd9d:	push   ss
  40cd9e:	cmc    
  40cd9f:	or     BYTE PTR [ebp+0x36],bl
  40cda2:	push   ebx
  40cda3:	push   ebx
  40cda4:	push   ds
  40cda5:	shld   ecx,eax,cl
  40cda8:	add    ch,BYTE PTR [ebx-0x5df6c02c]
  40cdae:	aad    0xfd
  40cdb0:	mov    cs,WORD PTR [ebp-0x6413821c]
  40cdb6:	xor    ah,bl
  40cdb8:	jmp    0x31fc:0x62987069
  40cdbf:	icebp  
  40cdc0:	xchg   edx,eax
  40cdc1:	pop    esi
  40cdc2:	jg     0x40ce40
  40cdc4:	push   ds
  40cdc5:	lods   eax,DWORD PTR ds:[esi]
  40cdc6:	push   ebp
  40cdc7:	jg     0x40cd87
  40cdc9:	fcmovnu st,st(7)
  40cdcb:	in     eax,dx
  40cdcc:	dec    eax
  40cdcd:	pop    eax
  40cdce:	adc    eax,0xe7342563
  40cdd3:	jle    0x40cd90
  40cdd5:	sar    BYTE PTR [esi+0x5b],1
  40cdd8:	daa    
  40cdd9:	cmp    BYTE PTR [esi-0x36a1571c],bl
  40cddf:	sti    
  40cde0:	dec    esi
  40cde1:	or     eax,0x97c33c33
  40cde6:	cmp    edi,DWORD PTR ds:0x7c553653
  40cdec:	adc    DWORD PTR [edi-0x7e230035],ebx
  40cdf2:	in     al,0xef
  40cdf4:	sahf   
  40cdf5:	sub    DWORD PTR cs:[esi-0x40105a1d],0x30
  40cdfd:	cmp    al,0x7f
  40cdff:	sti    
  40ce00:	ficomp DWORD PTR [ecx]
  40ce02:	adc    BYTE PTR [edi],ah
  40ce04:	and    cl,bl
  40ce06:	(bad)  
  40ce07:	xlat   BYTE PTR ds:[ebx]
  40ce08:	mov    al,ds:0x5e2fb180
  40ce0d:	(bad)  
  40ce0e:	pop    ebp
  40ce0f:	sub    cl,al
  40ce11:	push   ecx
  40ce12:	dec    edx
  40ce13:	push   0x901c1fb8
  40ce18:	mov    cl,0x56
  40ce1a:	sbb    DWORD PTR [ecx],edi
  40ce1c:	loopne 0x40ce5a
  40ce1e:	mov    ds:0x7ef241e5,eax
  40ce23:	xor    eax,DWORD PTR [ebx-0x6a]
  40ce26:	out    dx,eax
  40ce27:	push   0xffffffca
  40ce29:	popa   
  40ce2a:	mov    al,ds:0x7511be4c
  40ce2f:	in     al,0xa8
  40ce31:	pop    esp
  40ce32:	pop    ecx
  40ce33:	test   DWORD PTR [esi+edi*1-0x246566cb],esp
  40ce3a:	mov    bl,0xce
  40ce3c:	jmp    0xea2b:0xf4692c1
  40ce43:	xchg   ebp,eax
  40ce44:	and    esp,DWORD PTR ds:0x9850ed45
  40ce4a:	mov    ch,0x92
  40ce4c:	sbb    al,BYTE PTR [edx+0x28beb0dd]
  40ce52:	push   ecx
  40ce53:	cs and al,0x48
  40ce56:	das    
  40ce57:	inc    ebx
  40ce58:	lahf   
  40ce59:	fisub  DWORD PTR [ecx+0x651d55e6]
  40ce5f:	sar    BYTE PTR ds:0x5cc22c04,0xb0
  40ce66:	imul   eax,DWORD PTR [edi+0x23353f1b],0x7eb994d4
  40ce70:	sahf   
  40ce71:	fst    st(4)
  40ce73:	retf   0x3b3b
  40ce76:	test   eax,0xad63c860
  40ce7b:	cmp    eax,DWORD PTR [ecx]
  40ce7d:	ror    DWORD PTR [ebx+ecx*2+0x57],cl
  40ce81:	iret   
  40ce82:	aad    0xd2
  40ce84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce85:	cli    
  40ce86:	add    al,0x43
  40ce89:	sbb    DWORD PTR [ecx-0x3d],esi
  40ce8c:	mov    ah,0xdc
  40ce8e:	mov    eax,ds:0x441246ad
  40ce93:	adc    DWORD PTR [edi+0x706a19df],esp
  40ce99:	call   0x1826b769
  40ce9e:	xchg   ebx,eax
  40ce9f:	cmp    eax,0x6a34d130
  40cea4:	mov    ecx,0x6584d6d1
  40cea9:	(bad)  
  40ceab:	sbb    BYTE PTR [edx+esi*4+0x0],dl
  40ceaf:	icebp  
  40ceb0:	stc    
  40ceb1:	ja     0x40ce9a
  40ceb3:	adc    ah,BYTE PTR [esi]
  40ceb5:	leave  
  40ceb6:	out    dx,eax
  40ceb7:	dec    esi
  40ceb8:	enter  0x727b,0xc6
  40cebc:	outs   dx,DWORD PTR ds:[esi]
  40cebd:	adc    al,0x56
  40cebf:	in     eax,dx
  40cec0:	test   BYTE PTR [esi],0xd2
  40cec3:	lahf   
  40cec4:	ins    DWORD PTR es:[edi],dx
  40cec5:	retf   
  40cec6:	cli    
  40cec7:	out    0xc0,eax
  40cec9:	mov    ch,0x88
  40cecb:	lea    ebx,[ebx-0x6bfa5316]
  40ced1:	inc    ebp
  40ced2:	popa   
  40ced3:	and    bl,0xa
  40ced6:	push   edx
  40ced7:	repnz mov bl,0x21
  40ceda:	inc    ecx
  40cedb:	mov    DWORD PTR [ebx-0x3cc57dcb],edi
  40cee1:	sahf   
  40cee2:	xor    cl,cl
  40cee4:	mov    eax,?
  40cee6:	mov    esp,ebx
  40cee8:	in     al,dx
  40cee9:	mov    DWORD PTR [ebx],ebx
  40ceeb:	cs popf 
  40ceed:	idiv   DWORD PTR [esi+0x35]
  40cef0:	jmp    0x28dc:0xd128311
  40cef7:	es sti 
  40cef9:	and    ebp,DWORD PTR [ecx+ebp*2]
  40cefc:	lods   eax,DWORD PTR ds:[esi]
  40cefd:	stos   DWORD PTR es:[edi],eax
  40cefe:	push   ecx
  40ceff:	ud2    
  40cf01:	lods   eax,DWORD PTR ds:[esi]
  40cf02:	or     al,BYTE PTR [ebx]
  40cf04:	mov    ds:0x6e6eaeb,al
  40cf09:	test   BYTE PTR [edx-0x3ca9deb9],ch
  40cf0f:	mov    edi,0x110184fb
  40cf14:	ins    DWORD PTR es:[edi],dx
  40cf15:	je     0x40cee0
  40cf17:	cmp    edx,edi
  40cf19:	test   eax,0x32837dcf
  40cf1e:	xchg   edx,eax
  40cf1f:	mov    esp,0x98542549
  40cf24:	mov    al,0x8c
  40cf26:	xchg   ebx,eax
  40cf27:	and    esi,DWORD PTR [eax-0x6802a577]
  40cf2d:	lods   al,BYTE PTR ds:[esi]
  40cf2e:	inc    esi
  40cf2f:	aam    0x47
  40cf31:	shl    al,1
  40cf33:	or     al,0xb5
  40cf35:	xchg   ebp,eax
  40cf36:	dec    esp
  40cf37:	lock jl 0x40cf11
  40cf3a:	sbb    BYTE PTR [edi],dl
  40cf3c:	mov    dh,0x5d
  40cf3e:	pushf  
  40cf3f:	sbb    al,0xc0
  40cf41:	xor    al,0x13
  40cf43:	mov    dh,0x36
  40cf45:	inc    eax
  40cf46:	xchg   ecx,eax
  40cf47:	stos   DWORD PTR es:[edi],eax
  40cf48:	sub    eax,0x3e977637
  40cf4d:	ror    DWORD PTR [eax-0x691873a7],cl
  40cf53:	outs   dx,DWORD PTR ds:[esi]
  40cf54:	repz mov ds:0x2109a600,eax
  40cf5a:	jp     0x40cf27
  40cf5c:	add    edx,DWORD PTR [edx-0x215d72f7]
  40cf62:	dec    ebx
  40cf63:	adc    DWORD PTR ds:0xcb52cc1c,0xf
  40cf6a:	inc    edx
  40cf6b:	outs   dx,DWORD PTR ds:[esi]
  40cf6c:	outs   dx,BYTE PTR ds:[esi]
  40cf6d:	mov    ebp,0x6dbe03a8
  40cf72:	jnp    0x40cf1d
  40cf74:	xchg   edx,eax
  40cf75:	adc    eax,DWORD PTR [ecx+0x650cdfd7]
  40cf7b:	lock sub bl,BYTE PTR [ebp-0x21]
  40cf7f:	fldcw  WORD PTR [ebx]
  40cf81:	nop
  40cf82:	in     al,dx
  40cf83:	js     0x40d002
  40cf85:	icebp  
  40cf86:	out    dx,al
  40cf87:	or     dl,dh
  40cf89:	mov    ds:0xadfa3dab,eax
  40cf8e:	jnp    0x40cf9c
  40cf90:	mov    esp,0x43613a43
  40cf95:	jnp    0x40cf76
  40cf97:	jnp    0x40cfa4
  40cf99:	sub    eax,0xfe14130a
  40cf9e:	ficomp WORD PTR [ebx+0x2ce25206]
  40cfa4:	in     eax,0x1
  40cfa6:	test   ch,0x99
  40cfa9:	mov    ecx,0x4d5589e1
  40cfae:	scas   eax,DWORD PTR es:[edi]
  40cfaf:	inc    ebx
  40cfb0:	jo     0x40cfa8
  40cfb2:	mov    edi,0x63c30c2e
  40cfb7:	test   BYTE PTR [edx-0x20],dl
  40cfba:	and    BYTE PTR ds:0xf72a984b,al
  40cfc0:	outs   dx,BYTE PTR ds:[esi]
  40cfc1:	sub    ebx,DWORD PTR [eax+0x4a43cdec]
  40cfc7:	nop
  40cfc8:	fstp   DWORD PTR [esi+0x2be8446a]
  40cfce:	jmp    0xbad3f4ff
  40cfd3:	popf   
  40cfd4:	cmp    dh,BYTE PTR [eax-0x44]
  40cfd7:	and    edi,DWORD PTR [ecx-0x23c538db]
  40cfdd:	fwait
  40cfde:	cs iret 
  40cfe0:	in     eax,dx
  40cfe1:	dec    esp
  40cfe2:	jae    0x40d055
  40cfe4:	call   0x727b:0x38311472
  40cfeb:	sbb    BYTE PTR [eax+0x5b],bl
  40cfee:	mov    al,ds:0xb566c9e8
  40cff3:	xchg   esp,eax
  40cff4:	adc    al,0xf7
  40cff6:	pop    eax
  40cff7:	arpl   sp,di
  40cff9:	xlat   BYTE PTR ds:[ebx]
  40cffa:	add    ecx,eax
  40cffc:	nop
  40cffd:	enter  0x4afe,0x60
  40d001:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d002:	sbb    BYTE PTR [edx+0x3b],ch
  40d005:	sbb    BYTE PTR [ebx],0xcf
  40d008:	call   0xc70c:0xd4db8c32
  40d00f:	cdq    
  40d010:	sti    
  40d011:	mov    dl,0x32
  40d013:	sub    bl,dl
  40d015:	sub    bl,BYTE PTR [esi+0x1c]
  40d018:	imul   esp,DWORD PTR [edi],0x44
  40d01b:	jne    0x40d01a
  40d01d:	outs   dx,BYTE PTR ds:[esi]
  40d01e:	mov    ebx,0x929baac
  40d023:	mov    ah,0xd1
  40d025:	aaa    
  40d026:	sub    bl,BYTE PTR [eax-0x3bf35fdd]
  40d02c:	(bad)  
  40d02e:	fst    QWORD PTR [ebx+0x22]
  40d031:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d032:	inc    edx
  40d033:	xchg   esp,eax
  40d034:	(bad)  
  40d035:	mov    DWORD PTR [ecx-0x5b],esp
  40d038:	and    ch,BYTE PTR [ebx-0x73]
  40d03b:	push   esi
  40d03c:	xor    al,0x4d
  40d03e:	popw   es
  40d040:	mov    WORD PTR [edi+0x73],ds
  40d043:	(bad)  
  40d044:	jmp    0x40cfd3
  40d046:	or     BYTE PTR [eax],dh
  40d048:	dec    edx
  40d049:	test   DWORD PTR [ecx+eiz*4-0x8f6c222],ecx
  40d050:	cmp    al,0x20
  40d052:	idiv   BYTE PTR [eax]
  40d054:	jno    0x40d022
  40d056:	fs out dx,al
  40d058:	in     eax,0x8e
  40d05a:	(bad)  
  40d05b:	sub    DWORD PTR [eax+ebp*2+0x4d],ebp
  40d05f:	shl    DWORD PTR [edx+eiz*1-0x68],1
  40d063:	call   FWORD PTR [esi]
  40d065:	fs jle 0x40d02c
  40d068:	xor    eax,0x255075f8
  40d06d:	dec    edx
  40d06e:	cmp    BYTE PTR [ecx-0x48146962],0xdb
  40d075:	jb     0x40d097
  40d077:	mov    ebx,0x9ce5a4ac
  40d07c:	scas   al,BYTE PTR es:[edi]
  40d07d:	inc    edi
  40d07e:	pop    edx
  40d07f:	(bad)  
  40d080:	push   ds
  40d081:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d082:	out    dx,al
  40d083:	mov    cl,0xd9
  40d085:	scas   eax,DWORD PTR es:[edi]
  40d086:	pop    edi
  40d087:	xchg   ebx,eax
  40d088:	push   0x4e6ce58b
  40d08d:	jnp    0x40d109
  40d08f:	shr    BYTE PTR [ebx-0x4c],0x53
  40d093:	pop    ss
  40d094:	cmp    DWORD PTR [edi],ebx
  40d096:	ins    BYTE PTR es:[edi],dx
  40d097:	pop    ebp
  40d098:	pushf  
  40d099:	scas   eax,DWORD PTR es:[edi]
  40d09a:	fwait
  40d09b:	les    ebp,FWORD PTR [ebx]
  40d09d:	add    al,0xeb
  40d09f:	pop    edi
  40d0a0:	fadd   st(2),st
  40d0a2:	aad    0xea
  40d0a4:	cli    
  40d0a5:	sbb    bl,BYTE PTR [edx+0x6a1d3f66]
  40d0ab:	jae    0x40d125
  40d0ad:	mov    ds:0x3f1b5ef2,al
  40d0b2:	adc    al,0x98
  40d0b4:	mov    ds:0xa1550443,eax
  40d0b9:	xchg   esi,eax
  40d0ba:	inc    edx
  40d0bb:	imul   BYTE PTR [eax+ebx*1]
  40d0be:	sbb    DWORD PTR [ecx],ebx
  40d0c0:	inc    ecx
  40d0c1:	jbe    0x40d077
  40d0c3:	xchg   ecx,eax
  40d0c4:	call   FWORD PTR [esi]
  40d0c6:	pop    esi
  40d0c7:	add    BYTE PTR [ecx+0x47674f1a],bl
  40d0cd:	clc    
  40d0ce:	mov    ah,0x9c
  40d0d0:	sbb    DWORD PTR [ecx],edi
  40d0d2:	inc    edi
  40d0d3:	ins    BYTE PTR es:[edi],dx
  40d0d4:	data16 stos BYTE PTR es:[edi],al
  40d0d6:	mov    eax,0xbb52e19a
  40d0db:	mov    al,0xaf
  40d0dd:	add    BYTE PTR [ebx],bh
  40d0df:	aad    0x24
  40d0e1:	fs push ss
  40d0e3:	adc    eax,0xae596b34
  40d0e8:	push   esp
  40d0e9:	push   edx
  40d0ea:	call   0xc1dd15dd
  40d0ef:	dec    ebx
  40d0f0:	das    
  40d0f1:	ret    0x4a37
  40d0f4:	xor    al,0x5f
  40d0f6:	jle    0x40d08f
  40d0f8:	push   ebx
  40d0f9:	cdq    
  40d0fa:	mov    ebx,0xf670be7e
  40d0ff:	rol    BYTE PTR [eax+0x3570310a],cl
  40d105:	mov    bl,0xe8
  40d107:	mov    ebp,0xe5538328
  40d10c:	xchg   DWORD PTR [esp+ecx*8],edi
  40d10f:	cmovne edx,DWORD PTR [edx+0x4feaede8]
  40d116:	push   es
  40d117:	sbb    eax,0x65325c2a
  40d11c:	aaa    
  40d11d:	add    edi,ebx
  40d11f:	jecxz  0x40d12a
  40d121:	adc    dl,BYTE PTR [ebx]
  40d123:	das    
  40d124:	outs   dx,DWORD PTR ds:[esi]
  40d125:	loopne 0x40d0a8
  40d127:	in     eax,0xfa
  40d129:	or     al,0x5a
  40d12b:	out    0xb6,al
  40d12d:	add    DWORD PTR [edx],esp
  40d12f:	mov    esi,DWORD PTR [edi-0x5936d1ca]
  40d135:	fiadd  WORD PTR ds:0xb3757b2c
  40d13b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d13c:	sbb    esi,ecx
  40d13e:	adc    bl,BYTE PTR [eax-0x5f019788]
  40d144:	aas    
  40d145:	xor    esp,DWORD PTR [ebp-0x2ec69fb2]
  40d14b:	add    edx,DWORD PTR [edi+0x75ea8e1b]
  40d151:	pop    eax
  40d152:	adc    eax,0xcf1507fb
  40d157:	sub    eax,0x944905b0
  40d15c:	inc    esp
  40d15d:	pusha  
  40d15e:	xchg   esi,eax
  40d15f:	mov    BYTE PTR [esi],dh
  40d161:	not    dh
  40d163:	test   DWORD PTR [eax+0x68],0x6870dfeb
  40d16a:	pop    ecx
  40d16b:	sub    cl,BYTE PTR [ebx-0x6c7fb1c4]
  40d171:	(bad)  [edx-0x3f]
  40d174:	jae    0x40d10e
  40d176:	in     al,0xfc
  40d178:	xchg   esp,eax
  40d179:	fnstsw WORD PTR [ebp+ebx*1-0x609e2048]
  40d180:	dec    ebp
  40d181:	inc    edx
  40d182:	into   
  40d183:	sub    eax,0x908e71b5
  40d188:	vshufps ymm5,ymm1,YMMWORD PTR [esi],0x79
  40d18d:	fcom   QWORD PTR [ebx+eax*1+0x1d]
  40d191:	pusha  
  40d192:	jmp    0x811c:0x8f3481e5
  40d199:	pop    ds
  40d19a:	adc    ch,BYTE PTR [eax]
  40d19c:	dec    ecx
  40d19d:	cmp    al,0x66
  40d19f:	push   ss
  40d1a0:	out    0xe2,eax
  40d1a2:	and    DWORD PTR [ebx-0x36],eax
  40d1a5:	adc    bp,WORD PTR cs:0x6c781bd1
  40d1ad:	push   cs
  40d1ae:	xchg   esi,eax
  40d1af:	mov    BYTE PTR [ecx+eiz*8-0x12d2f6ff],bl
  40d1b6:	xchg   esp,eax
  40d1b7:	mov    edx,0xe79f694c
  40d1bc:	xchg   edi,eax
  40d1bd:	mov    fs,WORD PTR [ecx-0xd]
  40d1c0:	sub    DWORD PTR [ebx],ebp
  40d1c2:	js     0x40d20e
  40d1c4:	and    al,0x6a
  40d1c6:	mov    BYTE PTR [esi-0x437dbb77],al
  40d1cc:	bound  ecx,QWORD PTR [esi]
  40d1ce:	shl    BYTE PTR [ebp+0x6c4c3c33],0x82
  40d1d5:	and    BYTE PTR [ebp+0x53],ch
  40d1d8:	inc    edi
  40d1d9:	cdq    
  40d1da:	jge    0x40d227
  40d1dc:	mov    ebp,0x723a1912
  40d1e1:	shl    ch,cl
  40d1e3:	add    eax,0x40dd9fcd
  40d1e8:	fild   WORD PTR [esi+0x368de68d]
  40d1ee:	adc    ebx,DWORD PTR [esi]
  40d1f0:	nop
  40d1f1:	mov    eax,DWORD PTR [ebp-0xb85e852]
  40d1f7:	add    DWORD PTR [esi],ecx
  40d1f9:	out    0x1f,al
  40d1fb:	push   edx
  40d1fc:	addr16 (bad) 
  40d1fe:	fistp  WORD PTR [edi+0x2e]
  40d201:	mov    WORD PTR [ecx+0x7b],ss
  40d204:	sub    esp,eax
  40d206:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d207:	icebp  
  40d208:	aas    
  40d209:	xor    edx,DWORD PTR [eax]
  40d20b:	jne    0x40d203
  40d20d:	or     al,0x99
  40d20f:	cmp    bh,BYTE PTR [ebx+0x79]
  40d212:	inc    esp
  40d213:	sbb    cl,cl
  40d215:	jp     0x40d22a
  40d217:	mov    ds:0xa1f69dc5,eax
  40d21c:	xor    DWORD PTR [ebx+0x6e61b663],0xffffffa7
  40d223:	ret    
  40d224:	test   DWORD PTR [ecx+0x7ee6aaf3],ebp
  40d22a:	pop    esi
  40d22b:	cs gs in al,dx
  40d22e:	shl    DWORD PTR [esi],0xe6
  40d231:	push   0x35
  40d233:	inc    ebx
  40d234:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d235:	cli    
  40d236:	xchg   ebp,eax
  40d237:	(bad)  [edx+0x71]
  40d23a:	ins    DWORD PTR es:[edi],dx
  40d23b:	and    al,0x9e
  40d23d:	sbb    DWORD PTR [eax],esi
  40d23f:	push   ss
  40d240:	stc    
  40d241:	inc    eax
  40d242:	lea    eax,[ebp+0x3b]
  40d245:	rol    BYTE PTR [edi],0xa5
  40d248:	jg     0x40d1f7
  40d24a:	pop    edx
  40d24b:	lea    esp,[ebp-0x281a8145]
  40d251:	aas    
  40d252:	test   al,0xff
  40d254:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d255:	test   al,0x62
  40d257:	cmp    BYTE PTR [ecx+ebx*2+0x30],0x72
  40d25c:	cld    
  40d25d:	pop    esi
  40d25e:	push   esi
  40d25f:	push   ebx
  40d260:	inc    esp
  40d261:	in     al,0x30
  40d263:	xchg   edx,ecx
  40d265:	ror    DWORD PTR [ecx],0x5e
  40d268:	cmp    BYTE PTR [eax+eiz*8-0x38f48b6a],dh
  40d26f:	and    eax,0x71295a64
  40d274:	icebp  
  40d275:	in     eax,dx
  40d276:	sub    eax,0xbf5f9ca8
  40d27b:	fstp   DWORD PTR [edi+eax*2+0x43]
  40d27f:	fild   DWORD PTR ds:0xb4766155
  40d285:	popa   
  40d286:	loopne 0x40d2e9
  40d288:	in     eax,dx
  40d289:	ins    DWORD PTR es:[edi],dx
  40d28a:	cwde   
  40d28b:	mov    esp,esp
  40d28d:	xor    ch,BYTE PTR [ebp+0x17]
  40d290:	add    BYTE PTR [eax],0x61
  40d293:	add    ah,ch
  40d295:	dec    esi
  40d296:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d297:	out    0x2b,eax
  40d299:	push   ebx
  40d29a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d29b:	mul    BYTE PTR [esp+edx*2]
  40d29e:	push   0x63
  40d2a0:	cli    
  40d2a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2a2:	(bad)  
  40d2a3:	jo     0x40d271
  40d2a5:	xchg   esp,eax
  40d2a6:	or     BYTE PTR [ecx],ch
  40d2a8:	cmp    DWORD PTR [eax+esi*2],ecx
  40d2ab:	into   
  40d2ac:	or     edx,DWORD PTR [edi+0x5]
  40d2af:	sub    al,0xac
  40d2b1:	mov    esp,0xd8ff16d8
  40d2b6:	jecxz  0x40d2cc
  40d2b8:	cmp    dh,BYTE PTR [edx-0x3a]
  40d2bb:	fdiv   DWORD PTR [ebx-0x19]
  40d2be:	test   DWORD PTR [edx+eiz*1+0x6281b89e],0x2405a4ad
  40d2c9:	xchg   BYTE PTR [edi-0x4d634fa1],dl
  40d2cf:	outs   dx,BYTE PTR ds:[esi]
  40d2d0:	xor    BYTE PTR [ecx-0x1f],0xda
  40d2d4:	fs push esp
  40d2d6:	adc    ebp,DWORD PTR [ebx]
  40d2d8:	out    dx,eax
  40d2d9:	imul   ebp,DWORD PTR [ecx-0x51],0xffffffae
  40d2dd:	add    BYTE PTR [eax+0x33791f1a],ah
  40d2e3:	cmp    eax,DWORD PTR [bp+si-0x7d]
  40d2e7:	call   0x2d78:0xbb1a6888
  40d2ee:	rcl    edx,1
  40d2f0:	les    ecx,FWORD PTR [esi]
  40d2f2:	int    0x22
  40d2f4:	pop    eax
  40d2f5:	or     DWORD PTR [ebx],eax
  40d2f7:	jnp    0x40d35d
  40d2f9:	mov    ds:0xd078d5f4,eax
  40d2fe:	sbb    DWORD PTR [esi+0xe],edi
  40d301:	gs cmp eax,0x5ea88074
  40d307:	scas   eax,DWORD PTR es:[edi]
  40d308:	je     0x40d2f2
  40d30a:	inc    esi
  40d30b:	mov    bh,0xcb
  40d30d:	mov    esi,0x670a81c3
  40d312:	sub    bh,BYTE PTR [edi-0xe]
  40d315:	fadd   st(6),st
  40d317:	das    
  40d318:	adc    eax,0xbaa98346
  40d31d:	outs   dx,DWORD PTR ds:[esi]
  40d31e:	or     eax,0xc244831c
  40d323:	enter  0xa49e,0x3b
  40d327:	pop    ds
  40d328:	inc    edx
  40d329:	sub    ah,dl
  40d32b:	repz and eax,0x9a41ad2
  40d331:	dec    ebx
  40d332:	dec    edx
  40d333:	push   es
  40d334:	test   ebp,esp
  40d336:	ds es fwait
  40d339:	add    al,0xa2
  40d33b:	mov    ah,0x20
  40d33d:	(bad)  
  40d33e:	out    dx,eax
  40d33f:	push   eax
  40d340:	ja     0x40d308
  40d342:	test   al,0x77
  40d344:	xchg   ebx,eax
  40d345:	add    dl,BYTE PTR [edi+0x7e88a48]
  40d34b:	mov    dh,0xbc
  40d34d:	mov    al,ds:0x2edd9ce0
  40d352:	sub    al,0xe7
  40d354:	add    DWORD PTR [ebx],edx
  40d356:	jne    0x40d3be
  40d358:	shl    esp,cl
  40d35a:	stos   DWORD PTR es:[edi],eax
  40d35b:	sub    ebp,esi
  40d35d:	lock or ch,BYTE PTR [ecx+0x7fdf060]
  40d364:	in     eax,dx
  40d365:	ficom  WORD PTR [eax+0x67]
  40d368:	inc    edx
  40d369:	mov    ebp,0xb84f949e
  40d36e:	(bad)
  40d371:	adc    al,0xb2
  40d373:	nop
  40d374:	pop    esp
  40d375:	outs   dx,BYTE PTR ds:[esi]
  40d376:	out    dx,al
  40d377:	xor    DWORD PTR [ebx],ecx
  40d379:	xor    DWORD PTR [eax+ecx*4-0x68],0x73
  40d37e:	xchg   ecx,eax
  40d37f:	mov    ds:0x239365fa,eax
  40d384:	adc    al,BYTE PTR [edi-0x64]
  40d387:	or     edx,eax
  40d389:	rcl    BYTE PTR [edx],0x1c
  40d38c:	xchg   edi,eax
  40d38d:	jns    0x40d370
  40d38f:	cdq    
  40d390:	shl    BYTE PTR [edi+0x2c8a381],cl
  40d396:	pop    esp
  40d397:	shl    DWORD PTR [esi-0x767fc971],cl
  40d39d:	pop    eax
  40d39e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d39f:	imul   esi,esi,0xf24f151f
  40d3a5:	cld    
  40d3a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3a7:	stos   BYTE PTR es:[edi],al
  40d3a8:	(bad)
  40d3ac:	retf   0xcfa7
  40d3af:	cmc    
  40d3b0:	outs   dx,BYTE PTR ds:[esi]
  40d3b1:	cdq    
  40d3b2:	mov    eax,0xfafc4d22
  40d3b7:	div    DWORD PTR [eax-0x34f4af00]
  40d3bd:	(bad)  
  40d3be:	cwde   
  40d3bf:	lock xchg edx,eax
  40d3c1:	push   cs
  40d3c2:	outs   dx,DWORD PTR ds:[esi]
  40d3c3:	inc    ecx
  40d3c4:	mov    cl,0xa6
  40d3c6:	gs out 0xa4,eax
  40d3c9:	push   eax
  40d3ca:	std    
  40d3cb:	and    BYTE PTR [ebx-0x17],cl
  40d3ce:	popa   
  40d3cf:	jo     0x40d413
  40d3d1:	int3   
  40d3d2:	cli    
  40d3d3:	dec    ebp
  40d3d4:	add    eax,0xb51628c6
  40d3d9:	in     eax,0xba
  40d3db:	inc    esp
  40d3dc:	frstpm(287 only) 
  40d3de:	clc    
  40d3df:	sbb    esp,esi
  40d3e1:	cmp    DWORD PTR [eax-0x2d],edi
  40d3e4:	jmp    FWORD PTR [edx]
  40d3e6:	pop    es
  40d3e7:	xor    al,0x23
  40d3e9:	xchg   ecx,eax
  40d3ea:	sbb    ebp,esi
  40d3ec:	dec    esi
  40d3ed:	and    BYTE PTR [ecx+0x516a10e],bh
  40d3f3:	addr16 ret 0x5d0e
  40d3f7:	cmp    BYTE PTR [ecx+0x6e7577e2],al
  40d3fd:	ror    BYTE PTR [ebx+eiz*4],1
  40d400:	sar    al,0xa6
  40d403:	repnz inc esp
  40d405:	out    dx,al
  40d406:	shr    dh,cl
  40d408:	inc    ebp
  40d409:	shr    bl,0xb7
  40d40c:	in     al,0xa1
  40d40e:	pop    eax
  40d40f:	inc    eax
  40d410:	jae    0x40d461
  40d412:	xor    BYTE PTR [edi-0x68],ah
  40d415:	lods   eax,DWORD PTR ds:[esi]
  40d416:	mov    ds:0x15a5cc6b,eax
  40d41b:	inc    edx
  40d41c:	sbb    DWORD PTR [ebp-0x6],ebx
  40d41f:	movaps xmm0,XMMWORD PTR [ecx+edx*8-0x709e8140]
  40d427:	into   
  40d428:	pop    edx
  40d429:	imul   eax,DWORD PTR [edx]
  40d42c:	mov    edx,DWORD PTR [ebp-0x4]
  40d42f:	xor    edx,ecx
  40d431:	mov    ecx,DWORD PTR [ebp+0x8]
  40d434:	lea    ecx,[edx+ecx*1+0x3272db]
  40d43b:	cmp    ecx,eax
  40d43d:	je     0x40d4b4
  40d443:	mov    edi,DWORD PTR [ebp-0x14]
  40d446:	mov    eax,DWORD PTR [ebp+0x8]
  40d449:	mov    edx,DWORD PTR [ebp+0x14]
  40d44c:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d450:	mov    ecx,0x7510893
  40d455:	xor    edx,edx
  40d457:	xor    edi,ecx
  40d459:	mov    esi,0x3272db
  40d45e:	add    edi,esi
  40d460:	div    edi
  40d462:	mov    edx,DWORD PTR [ebp-0x4]
  40d465:	xor    edx,ecx
  40d467:	lea    eax,[edx+eax*1+0x3272db]
  40d46e:	mov    edx,DWORD PTR [ebp+0x8]
  40d471:	mov    edi,DWORD PTR [ebp-0x20]
  40d474:	mov    DWORD PTR [edi+edx*4],eax
  40d477:	mov    eax,DWORD PTR [ebp-0x14]
  40d47a:	mov    edx,DWORD PTR [ebp+0x8]
  40d47d:	xor    eax,ecx
  40d47f:	lea    eax,[eax+edx*1+0x3272db]
  40d486:	mov    DWORD PTR [ebp+0x8],eax
  40d489:	mov    eax,DWORD PTR [ebp-0x14]
  40d48c:	mov    edx,DWORD PTR [ebp+0x14]
  40d48f:	xor    eax,ecx
  40d491:	add    eax,esi
  40d493:	imul   eax,DWORD PTR [edx]
  40d496:	mov    edx,DWORD PTR [ebp-0x4]
  40d499:	xor    edx,ecx
  40d49b:	mov    ecx,DWORD PTR [ebp+0x8]
  40d49e:	lea    ecx,[edx+ecx*1+0x3272db]
  40d4a5:	cmp    ecx,eax
  40d4a7:	jne    0x40d443
  40d4ad:	mov    eax,esi
  40d4af:	jmp    0x40d4b9
  40d4b4:	mov    eax,0x3272db
  40d4b9:	mov    ebx,0x7510893
  40d4be:	mov    ecx,DWORD PTR [ebp-0x4]
  40d4c1:	xor    ecx,ebx
  40d4c3:	add    ecx,eax
  40d4c5:	mov    DWORD PTR [ebp-0xc],ecx
  40d4c8:	mov    ebx,0x65655
  40d4cd:	add    ebx,0x3234
  40d4d3:	xchg   ebx,esi
  40d4d5:	xor    ebx,ebx
  40d4d7:	push   esi
  40d4d8:	mov    esi,ebx
  40d4da:	pop    ebx
  40d4db:	mov    edx,esi
  40d4dd:	add    ebx,0x1002
  40d4e3:	lea    eax,[ebp-0x10]
  40d4e6:	add    edx,eax
  40d4e8:	add    edx,0x5
  40d4eb:	push   edx
  40d4ec:	inc    esi
  40d4ed:	pop    ecx
  40d4ee:	dec    ecx
  40d4ef:	jmp    0x40f854
  40d4f4:	jl     0x40d532
  40d4f6:	pop    es
  40d4f7:	call   0xe49cb803
  40d4fc:	and    BYTE PTR [edi+0x259a4edd],0xeb
  40d503:	(bad)  
  40d504:	mov    al,ds:0x3a6262d2
  40d509:	pop    edi
  40d50a:	bound  esp,QWORD PTR [edx-0x6]
  40d50d:	mov    dh,0x1d
  40d50f:	push   cs
  40d510:	pop    edi
  40d511:	popa   
  40d512:	jl     0x40d558
  40d514:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d516:	cmp    cl,BYTE PTR [ecx-0x745d5e4f]
  40d51c:	xor    ebx,DWORD PTR [edx-0x158aa4ef]
  40d522:	out    0x9,eax
  40d524:	dec    ebx
  40d525:	nop
  40d526:	lock dec esp
  40d528:	sbb    eax,DWORD PTR [eax+eiz*4+0x3098006a]
  40d52f:	pop    ds
  40d530:	dec    edx
  40d531:	icebp  
  40d532:	sbb    al,0x7e
  40d534:	out    0xc5,ax
  40d537:	mov    esi,cs
  40d539:	ret    0x52f5
  40d53c:	(bad)  
  40d53d:	sahf   
  40d53e:	mov    cl,0xc5
  40d540:	ret    0xc6c4
  40d543:	stos   DWORD PTR es:[edi],eax
  40d544:	jb     0x40d509
  40d546:	in     al,0x1f
  40d548:	pushf  
  40d549:	push   edi
  40d54a:	and    dh,BYTE PTR [ebx]
  40d54c:	jns    0x40d562
  40d54e:	and    BYTE PTR ds:0x502722f2,0x9f
  40d555:	or     edi,ebp
  40d557:	sar    DWORD PTR [edi+0x643e0450],cl
  40d55d:	in     al,dx
  40d55e:	sub    al,0x52
  40d560:	ins    BYTE PTR es:[edi],dx
  40d561:	jecxz  0x40d55c
  40d563:	popf   
  40d564:	test   esi,ebp
  40d566:	sbb    al,0x24
  40d568:	xor    eax,0xe59e3a48
  40d56d:	mov    bl,0x9d
  40d56f:	xor    dh,dh
  40d571:	add    DWORD PTR [eax-0x66fb71a3],ebx
  40d577:	sbb    eax,0xe16a06b7
  40d57c:	lahf   
  40d57d:	pop    ebp
  40d57e:	shl    BYTE PTR [ecx+0x2],1
  40d581:	push   edi
  40d582:	jecxz  0x40d51f
  40d584:	imul   eax,DWORD PTR [ebx+eax*4-0x278a0560],0x55
  40d58c:	dec    ebx
  40d58d:	mov    eax,0x5588d2fe
  40d592:	scas   eax,DWORD PTR es:[edi]
  40d593:	stos   BYTE PTR es:[edi],al
  40d594:	cwde   
  40d595:	add    bh,bl
  40d597:	cmp    eax,0x77f82860
  40d59c:	mov    esi,0x57252355
  40d5a1:	test   edx,0x8a30e931
  40d5a7:	jmp    0x3a0eac09
  40d5ac:	push   DWORD PTR [edi+0x7f]
  40d5af:	dec    edi
  40d5b0:	popa   
  40d5b1:	fiadd  WORD PTR [edi-0xac650ba]
  40d5b7:	pop    edx
  40d5b8:	mov    ah,0x47
  40d5ba:	xor    DWORD PTR [edx+ecx*8-0x39949a85],esi
  40d5c1:	fist   WORD PTR [esi+0x70]
  40d5c4:	(bad)  
  40d5c5:	mov    ss,edi
  40d5c7:	bnd js 0x40d62f
  40d5ca:	cdq    
  40d5cb:	xchg   ecx,eax
  40d5cc:	inc    edi
  40d5cd:	leave  
  40d5ce:	(bad)  
  40d5cf:	sbb    ch,bl
  40d5d1:	imul   ebp,edi,0xb2170f97
  40d5d7:	dec    ebp
  40d5d8:	xchg   ecx,eax
  40d5d9:	pushf  
  40d5da:	adc    eax,0xdccf10fd
  40d5df:	lock inc esp
  40d5e1:	icebp  
  40d5e2:	repnz popa 
  40d5e4:	retf   
  40d5e5:	or     ah,BYTE PTR [ecx]
  40d5e7:	sub    eax,0x64e6ed7b
  40d5ec:	les    ebx,FWORD PTR [edi-0x364fd9fb]
  40d5f2:	loopne 0x40d5b5
  40d5f4:	mov    al,ds:0xd03134a0
  40d5f9:	jg     0x40d5ca
  40d5fb:	xor    ch,BYTE PTR [ecx]
  40d5fd:	xchg   edx,eax
  40d5fe:	cmp    ch,BYTE PTR [ebp+0x2e]
  40d601:	(bad)  
  40d602:	fstp   st(5)
  40d604:	cmp    dh,BYTE PTR [edx-0x32]
  40d607:	es ja  0x40d674
  40d60a:	xchg   ebp,eax
  40d60b:	pop    edx
  40d60c:	sub    eax,0xd6d2dce
  40d611:	test   eax,0x665d8c32
  40d616:	std    
  40d617:	gs mov ah,0xbe
  40d61a:	push   esp
  40d61b:	pop    edi
  40d61c:	daa    
  40d61d:	sub    ch,BYTE PTR [ecx-0x1fc46ac2]
  40d623:	icebp  
  40d624:	sbb    al,0x1f
  40d626:	add    ecx,DWORD PTR [ebx+0x42b131df]
  40d62c:	cli    
  40d62d:	in     al,0x78
  40d62f:	sub    eax,DWORD PTR [esi]
  40d631:	iret   
  40d632:	push   cs
  40d633:	fidivr DWORD PTR [ebp+0x63]
  40d636:	aas    
  40d637:	jbe    0x40d5c0
  40d639:	fdiv   st(7),st
  40d63b:	xor    BYTE PTR [esi],ah
  40d63d:	pop    ecx
  40d63e:	stc    
  40d63f:	jecxz  0x40d699
  40d641:	or     al,0xb3
  40d643:	cwde   
  40d644:	jnp    0x40d6a6
  40d646:	aaa    
  40d647:	jge    0x40d64f
  40d649:	cmp    sp,WORD PTR [ecx+0x17]
  40d64d:	loop   0x40d64d
  40d64f:	stc    
  40d650:	frstor [eax+ecx*8+0x6f]
  40d654:	jno    0x40d605
  40d656:	shr    BYTE PTR [ebp+0x48],0x23
  40d65a:	jle    0x40d656
  40d65c:	mov    dh,0x7d
  40d65e:	fisttp WORD PTR ds:[edx+0x769e7029]
  40d665:	mov    ch,0xc7
  40d667:	js     0x40d68e
  40d669:	sub    DWORD PTR [eax-0x1306b6aa],eax
  40d66f:	(bad)  
  40d670:	mov    ch,0xe5
  40d672:	mov    dl,0x2
  40d674:	adc    eax,0x573be8a
  40d679:	adc    DWORD PTR [edi],0x43
  40d67c:	mov    bl,0x6c
  40d67e:	inc    edi
  40d67f:	pop    eax
  40d680:	(bad)  
  40d681:	out    dx,eax
  40d682:	jmp    0x2588:0x6377307c
  40d689:	out    0x85,eax
  40d68b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d68c:	fcom   QWORD PTR [esi-0xba6966e]
  40d692:	scas   al,BYTE PTR es:[edi]
  40d693:	cmp    BYTE PTR [esi+0x18],0xa6
  40d697:	scas   eax,DWORD PTR es:[edi]
  40d698:	xchg   ebp,eax
  40d699:	(bad)  
  40d69a:	mov    al,ds:0x5777df18
  40d69f:	pop    ebx
  40d6a0:	ss mov cl,0x78
  40d6a3:	adc    DWORD PTR [ebp+0x4c],0x4f
  40d6a7:	sub    dh,BYTE PTR [ecx-0x63]
  40d6aa:	adc    BYTE PTR [esi],dh
  40d6ac:	xchg   edx,eax
  40d6ad:	push   0x1a
  40d6af:	rcl    DWORD PTR [edi+0x42],cl
  40d6b2:	mov    ecx,0x84244f10
  40d6b7:	out    0x2a,al
  40d6b9:	adc    DWORD PTR [ecx-0x7d],esi
  40d6bc:	jnp    0x40d648
  40d6be:	shr    DWORD PTR [ebx+esi*2+0x6f8af3eb],cl
  40d6c5:	add    DWORD PTR [ecx],eax
  40d6c7:	mov    bh,0xbf
  40d6c9:	cmp    BYTE PTR ds:0x56b74b71,dl
  40d6cf:	pop    eax
  40d6d0:	ja     0x40d6bd
  40d6d2:	popa   
  40d6d3:	or     eax,0xe4dec118
  40d6d8:	sub    eax,0xae161598
  40d6dd:	inc    esp
  40d6de:	and    ebp,DWORD PTR [ebx]
  40d6e0:	pushf  
  40d6e1:	fnstenv [eax+0x19]
  40d6e4:	pop    edx
  40d6e5:	popf   
  40d6e6:	pop    eax
  40d6e7:	and    edi,DWORD PTR [edx-0x16]
  40d6ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6eb:	mov    al,ds:0x954c5634
  40d6f0:	shl    BYTE PTR [ebx+0x2f],cl
  40d6f3:	add    cl,BYTE PTR [ecx]
  40d6f5:	test   eax,0xdf402db6
  40d6fa:	nop
  40d6fb:	inc    edi
  40d6fc:	inc    esp
  40d6fd:	outs   dx,BYTE PTR ds:[esi]
  40d6fe:	xlat   BYTE PTR ds:[ebx]
  40d6ff:	or     al,BYTE PTR [edx]
  40d701:	pop    ebp
  40d702:	mov    ebp,0xd6c9f9b9
  40d707:	into   
  40d708:	push   ds
  40d709:	push   ecx
  40d70a:	stc    
  40d70b:	fs sti 
  40d70d:	and    BYTE PTR [edx],dh
  40d70f:	xchg   BYTE PTR [eax-0x3d],cl
  40d712:	xchg   edi,eax
  40d713:	pop    edi
  40d714:	mov    DWORD PTR ss:[ebp-0x46],esi
  40d718:	push   0xac12e5bc
  40d71d:	jbe    0x40d703
  40d71f:	xchg   ebx,eax
  40d720:	dec    ebp
  40d721:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d722:	xchg   ebx,eax
  40d723:	inc    edx
  40d724:	and    eax,0xa936a327
  40d729:	cmp    DWORD PTR [esi+0x1503770],edx
  40d72f:	shr    BYTE PTR [eax],cl
  40d731:	jo     0x40d6e9
  40d733:	lods   eax,DWORD PTR ds:[esi]
  40d734:	imul   esp,DWORD PTR [eax],0x6fc4e37
  40d73a:	mov    edi,0xa7ef35d6
  40d73f:	lods   eax,DWORD PTR ds:[esi]
  40d740:	fisttp QWORD PTR [eax]
  40d742:	repz shr DWORD PTR [ebp+ebp*4-0x7d5df603],1
  40d74a:	lock hlt 
  40d74c:	int    0x2
  40d74e:	push   edi
  40d74f:	xlat   BYTE PTR ds:[ebx]
  40d750:	add    BYTE PTR ds:[ecx+edx*1-0x5a],0x81
  40d756:	sbb    BYTE PTR [esi+0x65041aa8],dh
  40d75c:	(bad)  
  40d75d:	jmp    0x77a141f6
  40d762:	xchg   ebx,eax
  40d763:	popf   
  40d764:	popa   
  40d765:	cli    
  40d766:	fcom   DWORD PTR [esi-0x28cc7741]
  40d76c:	pop    eax
  40d76d:	sahf   
  40d76e:	in     eax,dx
  40d76f:	jmp    0xff5b:0x130cd377
  40d776:	sub    al,0x43
  40d778:	mov    ds:0xf5a4adf3,eax
  40d77d:	mov    ch,0xef
  40d77f:	mov    eax,0x4b95b83a
  40d784:	es xchg esp,eax
  40d786:	adc    al,0xed
  40d788:	rol    DWORD PTR [edx],1
  40d78a:	pop    eax
  40d78b:	inc    edx
  40d78c:	adc    esi,DWORD PTR [eax+eiz*4-0x4ab0e36b]
  40d793:	jbe    0x40d7a2
  40d795:	xchg   ebx,eax
  40d796:	ds mov edi,0x29a71275
  40d79c:	(bad)  
  40d79d:	mov    eax,0xfaa487c2
  40d7a2:	scas   al,BYTE PTR es:[edi]
  40d7a3:	xchg   BYTE PTR [ecx-0x5162b143],dl
  40d7a9:	stc    
  40d7aa:	out    0xeb,eax
  40d7ac:	adc    eax,0xad85f744
  40d7b1:	mov    cl,BYTE PTR [edi+0xf380956]
  40d7b7:	cmp    al,BYTE PTR [edi]
  40d7b9:	cmp    al,0x8d
  40d7bb:	jge    0x40d742
  40d7bd:	and    eax,0xaf859ef4
  40d7c2:	push   0xe35976d1
  40d7c7:	(bad)  
  40d7c9:	jno    0x40d7ae
  40d7cb:	rcl    DWORD PTR [edi-0x81f226c],cl
  40d7d1:	mov    ebp,0x199a38ce
  40d7d6:	xchg   ebx,eax
  40d7d7:	rcl    BYTE PTR [bx+0x51],cl
  40d7db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7dc:	outs   dx,DWORD PTR ds:[esi]
  40d7dd:	repnz or bl,BYTE PTR [ecx+0x3489e6d5]
  40d7e4:	in     al,dx
  40d7e5:	jmp    0x3427cc42
  40d7ea:	pop    ebx
  40d7eb:	xchg   ebx,eax
  40d7ec:	inc    ecx
  40d7ed:	stos   DWORD PTR es:[edi],eax
  40d7ee:	push   ds
  40d7ef:	inc    edx
  40d7f0:	fisubr DWORD PTR [ebp+0x3d6f1109]
  40d7f6:	js     0x40d7d6
  40d7f8:	rcl    DWORD PTR [edx-0x27],cl
  40d7fb:	jle    0x40d7ca
  40d7fd:	xchg   edx,eax
  40d7fe:	push   esi
  40d7ff:	sub    al,BYTE PTR [esi-0x6a]
  40d802:	pop    ecx
  40d803:	push   0x199dae38
  40d808:	shr    BYTE PTR [ecx+0x70],0xbc
  40d80c:	test   eax,0xf85d2f11
  40d811:	dec    esi
  40d812:	xchg   esp,eax
  40d813:	daa    
  40d814:	lahf   
  40d815:	(bad)  
  40d816:	leave  
  40d817:	pop    ss
  40d818:	and    bl,BYTE PTR [ebp-0x47]
  40d81b:	jge    0x40d860
  40d81d:	dec    eax
  40d81e:	es rol ah,0x7b
  40d822:	cmp    bl,BYTE PTR [ecx+ebx*1-0x780d223c]
  40d829:	mov    ah,0x1e
  40d82b:	xchg   ecx,eax
  40d82c:	aad    0x59
  40d82e:	out    0x4c,al
  40d830:	pop    ss
  40d831:	sub    al,0x10
  40d833:	push   ebp
  40d834:	pop    ebp
  40d835:	fucomp st(2)
  40d837:	cmp    eax,0xfc08e33c
  40d83c:	icebp  
  40d83d:	js     0x40d860
  40d83f:	stos   DWORD PTR es:[edi],eax
  40d840:	mov    eax,ds:0x4b5a1fad
  40d845:	jno    0x40d89a
  40d847:	out    0x64,eax
  40d849:	fsub   DWORD PTR [ebx+0x3a]
  40d84c:	xchg   edx,eax
  40d84d:	xchg   edx,eax
  40d84e:	out    dx,eax
  40d84f:	adc    eax,0x5ecabe79
  40d854:	sti    
  40d855:	xor    BYTE PTR [ecx-0x246f2657],cl
  40d85b:	push   0x5dfffd2
  40d860:	loop   0x40d7ea
  40d862:	sti    
  40d863:	test   DWORD PTR [eax-0x21],esp
  40d866:	add    ebx,DWORD PTR [edi+ebp*1-0x4fba0f13]
  40d86d:	retf   0x19dc
  40d870:	jle    0x40d815
  40d872:	or     DWORD PTR [ecx],0xa7e8b4f5
  40d878:	pop    ss
  40d879:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d87a:	mov    al,ds:0xf6573e14
  40d87f:	addr16 mov al,0xe8
  40d882:	mov    ds:0xc232c350,eax
  40d887:	adc    ebp,DWORD PTR [ebx+ecx*4-0x64bf78cc]
  40d88e:	pop    es
  40d88f:	xchg   dl,ah
  40d891:	push   eax
  40d892:	mov    edx,0xf76dedd8
  40d897:	rcr    BYTE PTR [esi],0x8c
  40d89a:	rol    BYTE PTR [eax],cl
  40d89c:	xor    ch,bl
  40d89e:	popa   
  40d89f:	test   DWORD PTR [edx],0x21a9e95a
  40d8a5:	mov    al,ds:0xc760df73
  40d8aa:	lods   eax,DWORD PTR ds:[esi]
  40d8ab:	into   
  40d8ac:	sbb    eax,0x9817bce3
  40d8b1:	dec    eax
  40d8b2:	call   0x6a48:0x59dd5526
  40d8b9:	jl     0x40d88b
  40d8bb:	mov    ch,0xb0
  40d8bd:	out    dx,eax
  40d8be:	inc    eax
  40d8bf:	ds cmc 
  40d8c1:	xchg   esi,eax
  40d8c2:	in     eax,0x4a
  40d8c4:	iret   
  40d8c5:	daa    
  40d8c6:	in     eax,0x55
  40d8c8:	pushf  
  40d8c9:	ja     0x40d873
  40d8cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8cc:	mov    ebx,0x51df97eb
  40d8d1:	(bad)  
  40d8d2:	cmc    
  40d8d3:	jns    0x40d92c
  40d8d5:	pop    edi
  40d8d6:	punpckhbw mm6,QWORD PTR [ecx]
  40d8d9:	in     al,0x6b
  40d8db:	add    BYTE PTR [ebx+eax*4-0x25cdcf9e],0xe2
  40d8e3:	std    
  40d8e4:	mov    ds:0x19cd2d74,eax
  40d8e9:	rol    DWORD PTR [edx-0x128af8f6],cl
  40d8ef:	mov    esp,0x8ef41a06
  40d8f4:	retf   
  40d8f5:	sub    BYTE PTR [ebx-0x1514d1c8],bh
  40d8fb:	jo     0x40d8f9
  40d8fd:	fmul   st,st(1)
  40d8ff:	movlps xmm6,QWORD PTR [ebp-0x3b]
  40d903:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d904:	cli    
  40d905:	(bad)  
  40d907:	sar    DWORD PTR [edi],cl
  40d909:	xchg   edx,eax
  40d90a:	and    eax,0x2d11ecec
  40d90f:	cmp    edx,DWORD PTR [edi]
  40d911:	test   BYTE PTR [eax],0x47
  40d914:	pop    es
  40d915:	shl    BYTE PTR [ebx],1
  40d917:	les    ebx,FWORD PTR [ecx]
  40d919:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d91a:	std    
  40d91b:	fistp  DWORD PTR [ebx]
  40d91d:	(bad)  
  40d91e:	out    dx,eax
  40d91f:	jmp    0x23a9:0xb507ae81
  40d926:	jecxz  0x40d949
  40d928:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d929:	pop    ebp
  40d92a:	int    0xe0
  40d92c:	jg     0x40d908
  40d92e:	jae    0x40d94f
  40d930:	xor    dl,ch
  40d932:	cmp    eax,0x21df3250
  40d937:	sbb    ch,dl
  40d939:	loope  0x40d96c
  40d93b:	mov    ss,WORD PTR [ebx+esi*2-0x4b]
  40d93f:	dec    edi
  40d940:	xchg   DWORD PTR [ecx],esi
  40d942:	stc    
  40d943:	and    cl,BYTE PTR [ebp+0x16]
  40d946:	pop    esi
  40d947:	adc    DWORD PTR [edx],ebp
  40d949:	push   0xffffffe5
  40d94b:	push   ss
  40d94c:	pop    eax
  40d94d:	sub    BYTE PTR [ecx-0x48252869],cl
  40d953:	out    0xdc,al
  40d955:	call   0xc5eb:0x9a569985
  40d95c:	push   ss
  40d95d:	imul   DWORD PTR [eax]
  40d95f:	xchg   esi,eax
  40d960:	addr16 (bad) 
  40d962:	lods   eax,DWORD PTR ds:[esi]
  40d963:	ds push ebp
  40d965:	add    ah,ah
  40d967:	mov    eax,ds:0xee0c0eaa
  40d96c:	xlat   BYTE PTR ds:[ebx]
  40d96d:	ins    BYTE PTR es:[edi],dx
  40d96e:	jae    0x40d969
  40d970:	repnz das 
  40d972:	ins    DWORD PTR es:[edi],dx
  40d973:	test   al,0x1f
  40d975:	test   BYTE PTR [eax+0x52310680],ah
  40d97b:	stos   BYTE PTR es:[edi],al
  40d97c:	sbb    DWORD PTR [esi-0x35e9e5bb],ecx
  40d982:	fcomp  DWORD PTR [esi]
  40d984:	pop    esp
  40d985:	mov    al,0xa8
  40d987:	fucomp st(1)
  40d989:	dec    esp
  40d98a:	popa   
  40d98b:	mov    bl,0xf1
  40d98d:	icebp  
  40d98e:	pop    ebp
  40d98f:	(bad)  [bp+di+0x3f]
  40d993:	adc    eax,0x83e52b94
  40d998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d999:	xchg   ebp,edx
  40d99b:	adc    esp,DWORD PTR [ebx]
  40d99d:	sub    BYTE PTR [ebp+edi*2+0x1],bh
  40d9a1:	cmc    
  40d9a2:	mov    eax,0x96460e2b
  40d9a7:	sub    al,0x20
  40d9a9:	in     al,0xec
  40d9ab:	sbb    bh,BYTE PTR [edi+eiz*4-0x4f]
  40d9af:	xchg   ebp,eax
  40d9b0:	mov    bl,0xec
  40d9b2:	int    0xdb
  40d9b4:	xchg   esi,eax
  40d9b5:	cs cli 
  40d9b7:	add    al,0x42
  40d9b9:	push   edx
  40d9ba:	loop   0x40d9dd
  40d9bc:	dec    edi
  40d9bd:	(bad)  
  40d9be:	loope  0x40d994
  40d9c0:	ja     0x40d9dd
  40d9c2:	or     al,0x20
  40d9c4:	test   BYTE PTR gs:[esi-0xe024b1d],bh
  40d9cb:	xlat   BYTE PTR ds:[ebx]
  40d9cc:	fs inc esi
  40d9ce:	(bad)  
  40d9cf:	cs arpl cx,dx
  40d9d2:	gs cmp eax,0xa4850108
  40d9d8:	arpl   ax,cx
  40d9da:	pop    edi
  40d9db:	mov    ebx,0xe1cbd2fb
  40d9e0:	xchg   ebp,eax
  40d9e1:	test   DWORD PTR [ebx],ecx
  40d9e3:	jno    0x40d9f7
  40d9e5:	outs   dx,BYTE PTR ds:[esi]
  40d9e6:	jg     0x40da63
  40d9e8:	dec    esp
  40d9e9:	pop    ss
  40d9ea:	mov    eax,0xb8470561
  40d9ef:	iret   
  40d9f0:	jb     0x40d999
  40d9f2:	mov    ebx,0x8065c73b
  40d9f7:	fs jp  0x40d9cb
  40d9fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9fb:	inc    ecx
  40d9fc:	in     al,0x48
  40d9fe:	lea    esi,[esi-0xcfce599]
  40da04:	xchg   ebp,eax
  40da05:	push   eax
  40da06:	adc    ch,ah
  40da08:	(bad)  
  40da0a:	and    dl,ch
  40da0c:	in     al,0xe7
  40da0e:	mov    eax,0x94781662
  40da13:	mov    bl,0x86
  40da15:	rcl    DWORD PTR [ecx+0x30],1
  40da18:	je     0x40d9bd
  40da1a:	xor    dh,dl
  40da1c:	push   es
  40da1d:	sbb    BYTE PTR [eax],bl
  40da1f:	lock lds esp,FWORD PTR [edx]
  40da22:	fdivr  QWORD PTR [ebx+0x1a]
  40da25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da26:	loope  0x40da65
  40da28:	idiv   ebp
  40da2a:	mov    eax,ds:0x5b92868e
  40da2f:	leave  
  40da30:	popa   
  40da31:	rcl    bl,1
  40da33:	push   0xffffffaf
  40da35:	jbe    0x40da6b
  40da37:	pop    edi
  40da38:	push   ecx
  40da39:	mov    ah,0xb4
  40da3b:	adc    al,0xa8
  40da3d:	call   0x6d12c78
  40da42:	adc    al,0x33
  40da44:	mov    BYTE PTR [ecx],al
  40da46:	inc    esp
  40da47:	loop   0x40d9e5
  40da49:	int    0xb7
  40da4b:	mov    eax,ds:0x8a75f8a
  40da50:	mov    dh,0x89
  40da52:	mov    esi,0x8c134030
  40da57:	pushf  
  40da58:	xlat   BYTE PTR ds:[ebx]
  40da59:	mov    ah,0xf
  40da5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da5c:	div    DWORD PTR [ecx+0x476b7bf9]
  40da62:	mov    al,0xc
  40da64:	in     eax,dx
  40da65:	cmp    bh,BYTE PTR [esi-0x3d]
  40da68:	(bad)
  40da6c:	and    esp,0x94b3f310
  40da72:	adc    BYTE PTR [eax+edi*1],dl
  40da75:	inc    edi
  40da76:	sbb    BYTE PTR [eax+0x1de291c3],ah
  40da7c:	mov    ecx,0xbf168e5d
  40da81:	sar    BYTE PTR [ebx-0x2126ecf1],cl
  40da87:	fsub   st,st(1)
  40da89:	retf   
  40da8a:	and    al,0xc5
  40da8c:	dec    ebp
  40da8d:	cmp    esi,esi
  40da8f:	pushf  
  40da90:	(bad)  
  40da91:	push   eax
  40da92:	cwde   
  40da93:	(bad)  
  40da94:	out    dx,al
  40da95:	push   ds
  40da96:	xchg   BYTE PTR [ecx+0x5c],ch
  40da99:	mov    eax,0xb335f8c
  40da9e:	xor    al,0x78
  40daa0:	jge    0x40dae8
  40daa2:	or     edi,DWORD PTR [esi-0x62aa6bcc]
  40daa8:	es inc esp
  40daaa:	pop    ebp
  40daab:	lahf   
  40daac:	rol    DWORD PTR [ecx],cl
  40daae:	mov    al,ds:0xc3292074
  40dab3:	inc    eax
  40dab4:	pusha  
  40dab5:	push   esp
  40dab6:	xor    bh,BYTE PTR [esi-0x31dd68e2]
  40dabc:	aad    0x31
  40dabe:	inc    dx
  40dac0:	into   
  40dac1:	outs   dx,DWORD PTR ds:[esi]
  40dac2:	push   es
  40dac3:	out    0x5,al
  40dac5:	inc    ecx
  40dac6:	mov    ss,WORD PTR [eax]
  40dac8:	push   esi
  40dac9:	inc    edx
  40daca:	push   edx
  40dacb:	je     0x40dab4
  40dacd:	cli    
  40dace:	mov    eax,0x33ed9952
  40dad3:	loope  0x40dade
  40dad5:	jb     0x40da71
  40dad7:	fist   DWORD PTR [esi+ecx*2-0x55a4081b]
  40dade:	cmp    eax,0x9beb7bab
  40dae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dae4:	inc    ecx
  40dae5:	mov    eax,0x94c1424c
  40daea:	popf   
  40daeb:	adc    edx,DWORD PTR [edx]
  40daed:	jge    0x40da7b
  40daef:	and    DWORD PTR [eax],esi
  40daf1:	mov    ah,BYTE PTR [edi-0x62]
  40daf4:	not    ebx
  40daf6:	mov    ds:0x3a573971,eax
  40dafb:	repnz xlat BYTE PTR ds:[ebx]
  40dafd:	cdq    
  40dafe:	push   esp
  40daff:	mov    esp,0x1b7121a1
  40db04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db05:	sub    BYTE PTR [ecx-0x7d5a5f35],dl
  40db0b:	pop    ebx
  40db0c:	aam    0xef
  40db0e:	and    DWORD PTR [ebx-0x2a],edi
  40db11:	xchg   edx,eax
  40db12:	push   esp
  40db13:	xor    bh,BYTE PTR [ecx-0x4b]
  40db16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db17:	dec    esp
  40db18:	enter  0x2d95,0xc1
  40db1c:	shl    BYTE PTR [edi+ebx*1-0x6b8dec6d],1
  40db23:	mov    ch,0x74
  40db25:	mov    es,WORD PTR [esi+eax*8-0x75af5d1e]
  40db2c:	test   al,0xd1
  40db2e:	or     dl,dh
  40db30:	or     BYTE PTR [ebp-0x25],ah
  40db33:	mov    edx,0xfb178e96
  40db38:	shl    DWORD PTR ds:0x889f1f23,0x2e
  40db3f:	adc    eax,0xda03bb5d
  40db44:	pop    eax
  40db45:	ret    0x9c2
  40db48:	mov    DWORD PTR [ecx+eiz*4+0x35],ebp
  40db4c:	inc    edx
  40db4d:	push   ss
  40db4e:	xchg   ebx,eax
  40db4f:	or     eax,0xdb300fb5
  40db54:	xchg   ecx,eax
  40db55:	loope  0x40dbc3
  40db57:	ja     0x40dba7
  40db59:	lock lods al,BYTE PTR ds:[esi]
  40db5b:	add    dh,al
  40db5d:	shl    DWORD PTR [eax+0x3184a062],1
  40db63:	xor    DWORD PTR [esi],esp
  40db65:	pop    eax
  40db66:	dec    esp
  40db67:	dec    edi
  40db68:	inc    ecx
  40db69:	cmp    ah,BYTE PTR [ebx]
  40db6b:	cmp    eax,0xd3fea030
  40db70:	adc    BYTE PTR [ebx-0x7b],dh
  40db73:	add    BYTE PTR [ebp+0x111e0de6],ch
  40db79:	sar    DWORD PTR [ecx-0x16],cl
  40db7c:	inc    edx
  40db7d:	inc    esi
  40db7e:	imul   esp,DWORD PTR [ecx],0xffffffc7
  40db81:	int    0x44
  40db83:	jne    0x40db15
  40db85:	int    0xa9
  40db87:	loope  0x40dbd9
  40db89:	mov    edx,edi
  40db8b:	mov    ebp,0xdb7c07d7
  40db90:	mov    esi,0xcebfc55d
  40db95:	pop    esp
  40db96:	pop    esi
  40db97:	fdivr  QWORD PTR [ebp-0x70]
  40db9a:	call   0x77c5:0xbbd9700a
  40dba1:	(bad)  
  40dba2:	cld    
  40dba3:	and    ecx,DWORD PTR [edx+0x44]
  40dba6:	xchg   esp,eax
  40dba7:	mov    DWORD PTR [eax],ebp
  40dba9:	push   eax
  40dbaa:	mov    dl,bh
  40dbac:	dec    edi
  40dbad:	mov    ds:0x2a07b50b,al
  40dbb2:	in     eax,dx
  40dbb3:	stc    
  40dbb4:	mov    ecx,fs
  40dbb6:	sbb    al,0x22
  40dbb8:	xor    DWORD PTR [bx],ecx
  40dbbb:	push   cs
  40dbbc:	xor    eax,0xa6b85984
  40dbc1:	mov    dl,0xee
  40dbc3:	mov    dl,0x5d
  40dbc5:	add    BYTE PTR [ebx],dh
  40dbc7:	jne    0x40dbfc
  40dbc9:	jmp    0x40dc00
  40dbcb:	les    esi,FWORD PTR [edx+ebx*2+0x3]
  40dbcf:	push   esp
  40dbd0:	mov    eax,0x1f3740f7
  40dbd5:	ins    DWORD PTR es:[edi],dx
  40dbd6:	add    BYTE PTR [esi-0x62],dh
  40dbd9:	pop    es
  40dbda:	xchg   esp,eax
  40dbdb:	call   0x924e:0x4e61ce4c
  40dbe2:	sahf   
  40dbe3:	ror    BYTE PTR [ebx+0x28],0x5a
  40dbe7:	pushf  
  40dbe8:	xor    DWORD PTR ds:0x11d71077,0x1a3709df
  40dbf2:	iret   
  40dbf3:	retf   0x4f3a
  40dbf6:	push   esi
  40dbf7:	jnp    0x40dbdc
  40dbf9:	xchg   DWORD PTR [ebx],esi
  40dbfb:	jno    0x40db86
  40dbfd:	mov    dl,0x91
  40dbff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc00:	or     ah,dh
  40dc02:	outs   dx,DWORD PTR ds:[esi]
  40dc03:	xchg   ebp,eax
  40dc04:	rcr    DWORD PTR [ebx+0x369fc28a],0xf5
  40dc0b:	cli    
  40dc0c:	push   0x9
  40dc0e:	inc    ecx
  40dc0f:	jae    0x40dc7d
  40dc11:	mov    esp,0xa316145f
  40dc16:	aam    0x67
  40dc18:	mov    cl,0x62
  40dc1a:	fmulp  st(0),st
  40dc1c:	(bad)  
  40dc1d:	add    ecx,edx
  40dc1f:	pop    ebp
  40dc20:	jns    0x40dbe6
  40dc22:	cmp    ah,bl
  40dc24:	mov    eax,0x309e374f
  40dc29:	mov    bl,0x61
  40dc2b:	outs   dx,BYTE PTR ds:[esi]
  40dc2c:	lods   al,BYTE PTR ds:[esi]
  40dc2d:	jns    0x40dc84
  40dc2f:	shr    BYTE PTR [ebx+0x38],cl
  40dc32:	mov    ebp,DWORD PTR [edi]
  40dc34:	pushf  
  40dc35:	dec    eax
  40dc36:	mov    ah,0xe
  40dc38:	mov    cl,0xa
  40dc3a:	jecxz  0x40dc60
  40dc3c:	mov    dh,0xbf
  40dc3e:	frndint 
  40dc40:	sub    eax,0xc1e62879
  40dc45:	mov    ds:0x89933517,eax
  40dc4a:	sub    bh,0xe6
  40dc4d:	sbb    bl,BYTE PTR [esp+eiz*2+0x2f]
  40dc51:	out    dx,al
  40dc52:	popf   
  40dc53:	aad    0x1f
  40dc55:	lea    ebp,[ebx+0x2472d0d0]
  40dc5b:	inc    esi
  40dc5c:	fdivp  st(7),st
  40dc5e:	fidiv  DWORD PTR [esi-0x6d]
  40dc61:	xor    BYTE PTR [edi-0x4],ah
  40dc64:	lds    edi,FWORD PTR [ebp+esi*1-0x77c00a2d]
  40dc6b:	outs   dx,DWORD PTR ds:[esi]
  40dc6c:	lea    edi,[esi+0x69]
  40dc6f:	mov    bh,0x5e
  40dc71:	nop
  40dc72:	xchg   ebp,ebx
  40dc74:	sbb    DWORD PTR [edi-0x10],edx
  40dc77:	and    eax,0xf6e5395
  40dc7c:	bound  esi,QWORD PTR [eax]
  40dc7e:	mov    cl,0x82
  40dc80:	dec    ebp
  40dc81:	dec    esp
  40dc82:	mov    edx,0xf5fce49
  40dc87:	aaa    
  40dc88:	outs   dx,DWORD PTR ds:[esi]
  40dc89:	in     al,0xa8
  40dc8b:	stos   BYTE PTR es:[edi],al
  40dc8c:	std    
  40dc8d:	pop    esp
  40dc8e:	imul   edx,edi,0x695e3d32
  40dc94:	iret   
  40dc95:	mov    ds:0x7fc74b23,al
  40dc9a:	je     0x40dc86
  40dc9c:	and    DWORD PTR [edx-0x30],0x1ee8d88c
  40dca3:	(bad)
  40dca7:	or     eax,DWORD PTR [ecx+0x3e4897f7]
  40dcad:	push   edi
  40dcae:	xchg   ebp,eax
  40dcaf:	adc    DWORD PTR [ecx],esi
  40dcb1:	(bad)  
  40dcb2:	pop    esp
  40dcb3:	pop    ebp
  40dcb4:	mov    ebp,0xbda001a2
  40dcb9:	sub    dl,0x95
  40dcbc:	pop    esp
  40dcbd:	call   0xa741:0x27798858
  40dcc4:	mov    al,0xeb
  40dcc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcc7:	jno    0x40dcfa
  40dcc9:	and    BYTE PTR [ecx-0x3cdc0e27],al
  40dccf:	mov    esp,0xe2e5d9ac
  40dcd4:	pop    esi
  40dcd5:	and    ch,BYTE PTR [ecx-0x5feee45]
  40dcdb:	loopne 0x40dd09
  40dcdd:	cmc    
  40dcde:	in     eax,dx
  40dcdf:	sbb    eax,edx
  40dce1:	fwait
  40dce2:	jp     0x40dcd0
  40dce4:	(bad)  
  40dce5:	xor    eax,0x8e2de770
  40dcea:	ss push ebx
  40dcec:	jbe    0x40dc82
  40dcee:	add    al,0xe8
  40dcf0:	mov    ecx,0x460a36e4
  40dcf5:	mov    ebx,0x4a417b23
  40dcfa:	ins    BYTE PTR es:[edi],dx
  40dcfb:	sbb    dl,BYTE PTR [edx]
  40dcfd:	push   edi
  40dcfe:	mov    eax,ds:0xf7dd8623
  40dd03:	mov    BYTE PTR [edx-0x60],cl
  40dd06:	or     esp,ecx
  40dd08:	cdq    
  40dd09:	int    0x66
  40dd0b:	cwde   
  40dd0c:	pusha  
  40dd0d:	in     eax,0x31
  40dd0f:	mov    bh,bh
  40dd11:	inc    eax
  40dd12:	std    
  40dd13:	or     dh,BYTE PTR [ecx]
  40dd15:	jmp    0xc652:0x4ce70561
  40dd1c:	int3   
  40dd1d:	cmc    
  40dd1e:	(bad)  
  40dd20:	dec    eax
  40dd21:	push   ss
  40dd22:	cld    
  40dd23:	mov    dl,0xc4
  40dd25:	test   DWORD PTR [esi+ebx*1],edx
  40dd28:	add    esi,DWORD PTR [eax-0x1f]
  40dd2b:	add    cl,bl
  40dd2d:	in     al,dx
  40dd2e:	ficom  WORD PTR [edx]
  40dd30:	push   ds
  40dd31:	in     al,0xcc
  40dd33:	mul    esp
  40dd35:	push   esi
  40dd36:	hlt    
  40dd37:	ins    DWORD PTR es:[edi],dx
  40dd38:	lock adc bp,ax
  40dd3c:	les    eax,FWORD PTR [ebx+0x4f9edde]
  40dd42:	pop    esp
  40dd43:	and    eax,0xad40ca4e
  40dd48:	sbb    al,0xcb
  40dd4a:	hlt    
  40dd4b:	jl     0x40dd7d
  40dd4d:	push   ss
  40dd4e:	int    0x35
  40dd50:	rcr    edx,1
  40dd52:	test   al,0x44
  40dd54:	in     eax,dx
  40dd55:	neg    DWORD PTR [esi+0x50]
  40dd58:	je     0x40dd8e
  40dd5a:	sbb    ch,ch
  40dd5c:	inc    ebx
  40dd5d:	mov    bl,BYTE PTR [edi+ecx*1]
  40dd60:	addr16 fdiv st,st(4)
  40dd63:	mov    eax,ss
  40dd65:	and    DWORD PTR [ebx-0x4c527c95],ebp
  40dd6b:	jmp    0x388:0x4b0f4657
  40dd72:	pop    es
  40dd73:	cmp    BYTE PTR [ebx+eax*4-0x5c],ah
  40dd77:	mov    esi,ebp
  40dd79:	shl    BYTE PTR [eax+0x69],cl
  40dd7c:	add    ah,ch
  40dd7e:	mov    bh,0xa5
  40dd80:	sub    BYTE PTR [eax-0x41],dl
  40dd83:	cwde   
  40dd84:	jmp    0xf010d973
  40dd89:	and    BYTE PTR [eax],cl
  40dd8b:	test   DWORD PTR [eax-0x220edf6b],0xd2e00594
  40dd95:	fsubr  DWORD PTR [edi]
  40dd97:	pop    edi
  40dd98:	in     eax,0x5f
  40dd9a:	pop    esp
  40dd9b:	call   0xcf07:0x3d66e65a
  40dda2:	je     0x40de21
  40dda4:	jge    0x40ddf0
  40dda6:	mov    ebp,0x5d98a4ab
  40ddab:	loopne 0x40dd67
  40ddad:	call   0x6dd7:0x1ea3e1d1
  40ddb4:	call   0x977:0xd28b40f8
  40ddbb:	inc    edx
  40ddbc:	push   ss
  40ddbd:	leave  
  40ddbe:	mov    ecx,0x71c1ee15
  40ddc3:	mov    ebp,0x7c8d430d
  40ddc8:	cmp    al,0xa5
  40ddca:	mov    BYTE PTR ds:0x57f400e9,bh
  40ddd0:	xchg   eax,esi
  40ddd2:	fisttp QWORD PTR [ebp-0x4f]
  40ddd5:	pop    ss
  40ddd6:	xor    al,0xdd
  40ddd8:	ins    BYTE PTR es:[edi],dx
  40ddd9:	sar    eax,0x8e
  40dddc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dddd:	enter  0x8b7f,0xdf
  40dde1:	or     dl,BYTE PTR [esi-0x5561d9b5]
  40dde7:	mov    al,ds:0xdaff956e
  40ddec:	mov    ds,WORD PTR [ebp+0x27]
  40ddef:	in     eax,0x5a
  40ddf1:	aam    0x43
  40ddf3:	adc    eax,0xc1342829
  40ddf8:	xchg   ebp,eax
  40ddf9:	xchg   ebx,eax
  40ddfa:	outs   dx,DWORD PTR ds:[esi]
  40ddfb:	mov    al,ds:0x1f2aea44
  40de00:	dec    ebp
  40de01:	outs   dx,DWORD PTR ds:[esi]
  40de02:	js     0x40dda5
  40de04:	outs   dx,BYTE PTR ds:[esi]
  40de05:	lods   al,BYTE PTR ds:[esi]
  40de06:	sbb    DWORD PTR [ebp-0x65dd9b45],0x5e
  40de0d:	lds    edi,FWORD PTR [ecx+0x4bbc35fe]
  40de13:	xchg   esi,eax
  40de14:	fxam   
  40de16:	and    al,BYTE PTR [eax]
  40de18:	ret    
  40de19:	mov    ds:0x6d1b4ac2,eax
  40de1e:	sbb    eax,0x62338cb1
  40de23:	push   es
  40de24:	mov    DWORD PTR [edi+0x30],ecx
  40de27:	das    
  40de28:	daa    
  40de29:	dec    esi
  40de2a:	das    
  40de2b:	jnp    0x40de80
  40de2d:	icebp  
  40de2e:	inc    ebp
  40de2f:	mov    es,WORD PTR [esi+ebx*2-0x34]
  40de33:	test   ebp,eax
  40de35:	or     eax,0xf94fab3c
  40de3a:	frstor [ebx+0x44be17a6]
  40de40:	sbb    eax,0x35724052
  40de45:	inc    edi
  40de46:	repz and BYTE PTR [esi-0xe682e6c],bh
  40de4d:	cmp    ebp,DWORD PTR ds:0xad935ef9
  40de53:	inc    ebx
  40de54:	cmp    al,cl
  40de56:	adc    esi,0x3c6877be
  40de5c:	je     0x40de88
  40de5e:	fld    DWORD PTR [edx-0x3b]
  40de61:	outs   dx,DWORD PTR ds:[esi]
  40de62:	test   al,0x28
  40de64:	cmp    DWORD PTR [eax],esp
  40de66:	ror    DWORD PTR ds:[ebx+ecx*4+0x57bc05db],cl
  40de6e:	cli    
  40de6f:	inc    ebp
  40de70:	adc    al,0xde
  40de72:	pop    ss
  40de73:	push   es
  40de74:	(bad)  
  40de75:	inc    ecx
  40de76:	(bad)  
  40de77:	scas   al,BYTE PTR es:[edi]
  40de78:	imul   eax,DWORD PTR [esi-0x7b7ef61f],0xffffff87
  40de7f:	sbb    DWORD PTR [ecx+eax*2-0x3d86f520],0x14ff3ebd
  40de8a:	gs jno 0x40df03
  40de8d:	ins    DWORD PTR es:[edi],dx
  40de8e:	leave  
  40de8f:	fistp  WORD PTR [edi-0x3]
  40de92:	or     eax,0xc30c067f
  40de97:	sbb    al,0x93
  40de99:	add    BYTE PTR [esi],cl
  40de9b:	cmc    
  40de9c:	paddq  mm2,mm7
  40de9f:	enter  0x5fd5,0x15
  40dea3:	push   cs
  40dea4:	sar    BYTE PTR [ebp+0x4170d275],1
  40deaa:	outs   dx,BYTE PTR ds:[esi]
  40deab:	ss ret 
  40dead:	test   DWORD PTR [edx+0x25],eax
  40deb0:	mov    BYTE PTR [edx-0x49e74006],ah
  40deb6:	(bad)  
  40deb8:	mov    ecx,0x4d95edee
  40debd:	cmp    BYTE PTR [ebp-0x140f01f5],al
  40dec3:	cwde   
  40dec4:	loop   0x40ded5
  40dec6:	adc    edx,eax
  40dec8:	xchg   esp,eax
  40dec9:	inc    edx
  40deca:	das    
  40decb:	fxch   st(0)
  40decd:	pusha  
  40dece:	xor    DWORD PTR [edi+0x1d],0xb6f656d2
  40ded5:	icebp  
  40ded6:	mov    BYTE PTR [eax],ah
  40ded8:	xchg   esp,eax
  40ded9:	in     al,dx
  40deda:	inc    edi
  40dedb:	pop    es
  40dedc:	dec    edi
  40dedd:	mov    ah,0x86
  40dedf:	fwait
  40dee0:	push   eax
  40dee1:	mov    ah,0x8a
  40dee3:	push   0xffffffb6
  40dee5:	scas   al,BYTE PTR es:[edi]
  40dee6:	xchg   edi,eax
  40dee7:	arpl   bp,cx
  40dee9:	fidiv  WORD PTR [esi+0x2b]
  40deec:	test   al,0x9e
  40deee:	jne    0x40de9a
  40def0:	cmp    ch,cl
  40def2:	and    bl,BYTE PTR [edx-0x1]
  40def5:	cs inc ebp
  40def7:	(bad)  
  40def8:	sub    al,BYTE PTR [edx]
  40defa:	int    0x7a
  40defc:	jecxz  0x40dec1
  40defe:	cld    
  40deff:	ja     0x40de99
  40df01:	and    eax,edi
  40df03:	ins    WORD PTR es:[edi],dx
  40df05:	push   eax
  40df06:	imul   eax,edx,0x727d644f
  40df0c:	rcr    BYTE PTR [ebp+0x2b],0x43
  40df10:	jns    0x40ded3
  40df12:	sar    DWORD PTR ds:0x6a8139b9,1
  40df18:	dec    edi
  40df19:	sahf   
  40df1a:	inc    ebp
  40df1b:	push   eax
  40df1c:	mov    al,ds:0x73116021
  40df21:	and    ch,ah
  40df23:	iret   
  40df24:	pop    esp
  40df25:	jmp    0x6219:0xe1957fa3
  40df2c:	mov    ebx,0xb9db6043
  40df31:	sub    eax,0x6e26d72
  40df36:	int    0xa3
  40df38:	or     bh,BYTE PTR [edi+0xe4a47a1]
  40df3e:	and    BYTE PTR [esi+0x1ebb97de],cl
  40df44:	test   DWORD PTR [eax-0x78],esi
  40df47:	cmp    eax,0x752d5d60
  40df4c:	and    edi,DWORD PTR [edi]
  40df4e:	and    cl,BYTE PTR [ebx-0x23]
  40df51:	mov    ch,0xf0
  40df53:	jb     0x40df8b
  40df55:	inc    eax
  40df56:	fwait
  40df57:	push   ecx
  40df58:	aad    0x89
  40df5a:	mov    esi,0x9e8ecd0a
  40df5f:	push   eax
  40df60:	mov    ebx,0xd8eef9e8
  40df65:	ds and ebx,ecx
  40df68:	jb     0x40def9
  40df6a:	push   ss
  40df6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df6c:	cmp    BYTE PTR [eax],cl
  40df6e:	inc    ebp
  40df6f:	loope  0x40defa
  40df71:	ins    DWORD PTR es:[edi],dx
  40df72:	xchg   edx,eax
  40df73:	iret   
  40df74:	rcl    DWORD PTR [esi],cl
  40df76:	dec    ebp
  40df77:	les    ebp,FWORD PTR [esi+0x3a]
  40df7a:	cwde   
  40df7b:	add    eax,0x45f99bde
  40df80:	out    0x8a,al
  40df82:	das    
  40df83:	fstp   QWORD PTR [ebp+0x4a2f7016]
  40df89:	dec    eax
  40df8a:	inc    ebp
  40df8b:	push   ebp
  40df8c:	push   cs
  40df8d:	add    al,0x39
  40df8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df90:	ffreep st(0)
  40df92:	div    ecx
  40df94:	arpl   WORD PTR [edi+0x507f6fa7],bx
  40df9a:	push   ebp
  40df9b:	push   esi
  40df9c:	popa   
  40df9d:	inc    esp
  40df9e:	(bad)  
  40df9f:	jle    0x40df87
  40dfa1:	fsubr  QWORD PTR [eax+0x71]
  40dfa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfa5:	jecxz  0x40e00e
  40dfa7:	mov    BYTE PTR [eax+0x37],0xec
  40dfab:	aas    
  40dfac:	add    BYTE PTR [edx-0x363b0e8c],dh
  40dfb2:	ficom  WORD PTR [esi-0x58daf9e2]
  40dfb8:	repnz bound eax,QWORD PTR [eax-0x1a]
  40dfbc:	adc    eax,0x2f660267
  40dfc1:	cmc    
  40dfc2:	and    dh,dl
  40dfc4:	dec    ebp
  40dfc5:	mov    dl,0xee
  40dfc7:	fiadd  DWORD PTR [ecx-0x506912e5]
  40dfcd:	inc    eax
  40dfce:	fsub   QWORD PTR [edi-0x5]
  40dfd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfd2:	repz pop ebp
  40dfd4:	jl     0x40df97
  40dfd6:	scas   eax,DWORD PTR es:[edi]
  40dfd7:	lods   al,BYTE PTR ds:[esi]
  40dfd8:	push   ebp
  40dfd9:	int    0x76
  40dfdb:	loope  0x40e01e
  40dfdd:	cdq    
  40dfde:	add    al,BYTE PTR [ecx-0x2fdf1d97]
  40dfe4:	push   esi
  40dfe5:	mov    ch,0x10
  40dfe7:	adc    eax,0x8286f942
  40dfec:	push   edi
  40dfed:	mov    ds:0xd2ffa914,eax
  40dff2:	cli    
  40dff3:	pop    ecx
  40dff4:	xchg   edi,eax
  40dff5:	xchg   edx,eax
  40dff6:	push   edi
  40dff7:	jnp    0x40e045
  40dff9:	jle    0x40e01f
  40dffb:	xor    eax,0x6c20e59b
  40e000:	int3   
  40e001:	stos   DWORD PTR es:[edi],eax
  40e002:	sbb    al,0x8
  40e004:	xchg   ebx,eax
  40e005:	push   ecx
  40e006:	rcl    DWORD PTR [eax+eax*2+0x66e815dd],1
  40e00d:	loope  0x40e08a
  40e00f:	inc    ebp
  40e010:	dec    ebx
  40e011:	test   BYTE PTR [bx],bh
  40e014:	data16 jp 0x40dfe3
  40e017:	in     eax,0x79
  40e019:	dec    eax
  40e01a:	in     eax,dx
  40e01b:	fstp   DWORD PTR [edx]
  40e01d:	sub    eax,0x84be06f3
  40e022:	retf   0x52c0
  40e025:	pushf  
  40e026:	mov    ebx,0x8a6f5654
  40e02b:	mov    bl,0xe0
  40e02d:	in     eax,dx
  40e02e:	sub    al,BYTE PTR [esi+0x23]
  40e031:	sar    BYTE PTR [edx-0x5d831e19],1
  40e037:	jge    0x40e015
  40e039:	jg     0x40e064
  40e03b:	retf   0x9e18
  40e03e:	pop    esi
  40e03f:	xor    dh,BYTE PTR [eax-0x1c]
  40e042:	cmp    al,0x2f
  40e044:	jns    0x40e07f
  40e046:	xchg   ebp,eax
  40e047:	dec    edx
  40e048:	adc    eax,0x9f30c4d
  40e04d:	or     BYTE PTR [eax],bl
  40e04f:	jnp    0x40e0a5
  40e051:	retf   0x76a6
  40e054:	test   BYTE PTR [esi-0x536f9de1],ch
  40e05a:	mov    cl,0xc1
  40e05c:	fisttp DWORD PTR [eax+esi*4]
  40e05f:	and    edi,DWORD PTR [ebx]
  40e061:	cdq    
  40e062:	mov    BYTE PTR [edi+0x65],ah
  40e065:	pop    esp
  40e066:	call   0x76d1f70c
  40e06b:	pusha  
  40e06c:	aaa    
  40e06d:	cmp    al,0x27
  40e06f:	push   cs
  40e070:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e071:	xor    DWORD PTR [ebx+ebx*4],edi
  40e074:	fiadd  DWORD PTR ds:0xfbf416d2
  40e07a:	popa   
  40e07b:	iret   
  40e07c:	fdivr  DWORD PTR [ecx]
  40e07e:	out    dx,eax
  40e07f:	sti    
  40e080:	or     eax,0x90beced0
  40e085:	mov    dh,0x4
  40e087:	cmp    dh,BYTE PTR [ecx-0x27]
  40e08a:	sub    eax,0xe0a0cf3a
  40e08f:	frstor [edx+0x4595b10]
  40e095:	call   0x8bc5:0xad19b51e
  40e09c:	mov    cl,0xd3
  40e09e:	test   DWORD PTR [edx-0x7a],esi
  40e0a1:	xchg   edx,eax
  40e0a3:	mov    dl,0x15
  40e0a5:	xor    al,0x21
  40e0a7:	mov    eax,0x829b8de9
  40e0ac:	pop    ebp
  40e0ad:	mov    eax,ds:0x86def8d
  40e0b2:	imul   ebp,DWORD PTR [ecx-0x32af59b6],0xffffff95
  40e0b9:	inc    esp
  40e0ba:	cmp    DWORD PTR [ebp-0x6ab40949],edx
  40e0c0:	out    dx,al
  40e0c1:	jmp    0x4fddcb90
  40e0c6:	int3   
  40e0c7:	arpl   WORD PTR [ecx+0x6b4eb117],ax
  40e0cd:	icebp  
  40e0ce:	mov    WORD PTR [ecx+0x5],?
  40e0d1:	pop    ebx
  40e0d2:	push   0x66
  40e0d4:	out    0x47,al
  40e0d6:	cmp    BYTE PTR [ecx+0x31],bh
  40e0d9:	test   eax,0x38dc3f1c
  40e0de:	imul   ebp,DWORD PTR [edx],0x97ebe171
  40e0e4:	or     eax,0x3c405acf
  40e0e9:	aaa    
  40e0ea:	mov    al,ds:0xeeafa376
  40e0ef:	sub    eax,0x83e926b8
  40e0f4:	dec    ebx
  40e0f5:	xchg   esi,eax
  40e0f6:	add    DWORD PTR [esi],esp
  40e0f8:	fs data16 aaa 
  40e0fb:	ret    0x2ba1
  40e0fe:	xchg   ebx,eax
  40e0ff:	es inc ebp
  40e101:	and    dl,dh
  40e103:	pop    edi
  40e104:	mov    ah,0x2d
  40e106:	pop    esi
  40e107:	lahf   
  40e108:	push   cs
  40e109:	mov    ah,0xce
  40e10b:	rol    BYTE PTR [ebx],0xdb
  40e10e:	pop    esp
  40e10f:	mov    BYTE PTR [edx+0x33],ch
  40e112:	and    esi,DWORD PTR [ebx-0x1d8b5a54]
  40e118:	xlat   BYTE PTR ds:[ebx]
  40e119:	into   
  40e11a:	cmc    
  40e11b:	shl    BYTE PTR [ebx-0x30a9b6a8],1
  40e121:	mov    esp,0xc1a3404d
  40e126:	sbb    ecx,ebp
  40e128:	and    al,0xe6
  40e12a:	int    0x15
  40e12c:	out    0xcb,eax
  40e12e:	inc    edx
  40e12f:	mov    esp,0x468fb904
  40e134:	inc    esi
  40e135:	push   0x7e
  40e137:	push   ds
  40e138:	scas   eax,DWORD PTR es:[edi]
  40e139:	hlt    
  40e13a:	enter  0x15f9,0x6c
  40e13e:	mov    WORD PTR [ebx-0x29e71e10],gs
  40e144:	in     al,dx
  40e145:	out    dx,al
  40e146:	pop    ebp
  40e147:	or     BYTE PTR [edx],dl
  40e149:	and    BYTE PTR [ebp-0x2e],bl
  40e14c:	loopne 0x40e174
  40e14e:	inc    ebp
  40e14f:	mov    dh,0x7d
  40e151:	lods   eax,DWORD PTR ds:[esi]
  40e152:	jne    0x40e10f
  40e154:	mov    ecx,0x956af123
  40e159:	arpl   di,bx
  40e15b:	out    dx,al
  40e15c:	mov    ds,WORD PTR [edx-0x42c3a8b6]
  40e162:	test   BYTE PTR [edi],bl
  40e164:	cmp    al,0x17
  40e166:	pop    esp
  40e167:	ret    
  40e168:	imul   edx,DWORD PTR [edx-0x1e819657],0xda54c452
  40e172:	sbb    BYTE PTR [eax-0x78aecb49],0x94
  40e179:	mov    ds:0x72028370,eax
  40e17e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e17f:	and    al,0x81
  40e181:	jb     0x40e1a8
  40e183:	ja     0x40e119
  40e185:	sub    DWORD PTR [eax],0xc5d9f699
  40e18b:	mov    ebx,0x5aec5340
  40e190:	outs   dx,DWORD PTR ds:[esi]
  40e191:	mov    eax,ds:0x43a7acb9
  40e196:	mov    bh,0xff
  40e198:	aad    0xaa
  40e19a:	fst    QWORD PTR [edx-0xa]
  40e19d:	or     al,0x31
  40e19f:	xchg   ecx,eax
  40e1a0:	mov    ds,WORD PTR [ecx+0x2b]
  40e1a3:	out    dx,eax
  40e1a4:	or     cl,BYTE PTR [esi-0x45]
  40e1a7:	nop    DWORD PTR [ebx+0x59]
  40e1ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1ac:	pop    eax
  40e1ad:	(bad)  
  40e1ae:	sbb    ebx,edx
  40e1b0:	dec    ebx
  40e1b1:	lahf   
  40e1b2:	or     eax,0x9fb23131
  40e1b7:	(bad)  
  40e1b8:	sub    al,0xe1
  40e1ba:	sbb    cl,BYTE PTR [ebx+0x14]
  40e1bd:	and    BYTE PTR [esi-0xc],bl
  40e1c0:	mov    DWORD PTR [edi],0x843e25dd
  40e1c6:	call   DWORD PTR [esi]
  40e1c8:	mov    ch,0xb
  40e1ca:	mov    bh,0x62
  40e1cc:	jmp    0xcc19:0x5a1a8f02
  40e1d3:	jl     0x40e22a
  40e1d5:	pop    DWORD PTR [edi-0x2e]
  40e1d8:	or     edi,ecx
  40e1da:	aaa    
  40e1db:	rcl    BYTE PTR [ecx+0x7f6d113d],cl
  40e1e1:	or     DWORD PTR [ecx],0x17
  40e1e4:	jmp    0xf31e:0x67dd24a3
  40e1eb:	dec    edx
  40e1ec:	xor    al,0xe8
  40e1ee:	test   BYTE PTR [ebx-0x61],cl
  40e1f1:	repz or BYTE PTR [eax+0x5d918bed],0xf9
  40e1f9:	outs   dx,DWORD PTR ds:[esi]
  40e1fa:	in     al,0x50
  40e1fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1fd:	mov    bl,0xe3
  40e1ff:	ret    
  40e200:	or     ebp,edx
  40e202:	icebp  
  40e203:	sub    al,BYTE PTR [ebp+edi*8-0x4ae9973b]
  40e20a:	leave  
  40e20b:	rol    BYTE PTR [ebp+ecx*2+0x5be8b02e],0xb5
  40e213:	mov    ah,0xc8
  40e215:	adc    bh,BYTE PTR [edx+0x5]
  40e218:	addr16 sub bl,bh
  40e21b:	add    ebx,DWORD PTR [esi-0x12]
  40e21e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e21f:	or     edx,DWORD PTR fs:[ebp+0x4ae2d701]
  40e226:	mov    ah,0xf9
  40e228:	ret    
  40e229:	imul   eax,ebx,0xd
  40e22c:	stc    
  40e22d:	add    DWORD PTR [edi-0x6e],eax
  40e230:	das    
  40e231:	leave  
  40e232:	fs aam 0x84
  40e235:	retf   0x5da6
  40e238:	jmp    0x40e217
  40e23a:	sqrtps xmm5,XMMWORD PTR [edx-0x30]
  40e23e:	addr16 ss push edx
  40e241:	addr16 loopne 0x40e247
  40e244:	(bad)  
  40e245:	dec    ecx
  40e246:	mov    ch,0x32
  40e248:	repz jo 0x40e216
  40e24b:	sub    al,0x35
  40e24d:	add    eax,DWORD PTR ds:0x2c376267
  40e253:	dec    esp
  40e254:	cmc    
  40e255:	sbb    edx,DWORD PTR [edx+eax*1]
  40e258:	jbe    0x40e28f
  40e25a:	icebp  
  40e25b:	jmp    0x40e26b
  40e25d:	aam    0x14
  40e25f:	rol    bh,1
  40e261:	enter  0x9d1f,0xc3
  40e265:	or     BYTE PTR ds:0x6d8d9ddc,dh
  40e26b:	loopne 0x40e2ec
  40e26d:	xor    DWORD PTR [esi],0x7e
  40e270:	out    0x23,al
  40e272:	fcomi  st,st(2)
  40e274:	mov    ebp,DWORD PTR [edx]
  40e276:	cs jmp 0xcd4f:0xc0ce78b4
  40e27e:	sub    DWORD PTR [ecx-0x6e561b7c],eax
  40e284:	pusha  
  40e285:	jno    0x40e2e8
  40e287:	pop    edi
  40e288:	sbb    ah,dl
  40e28a:	inc    cx
  40e28c:	cmp    esi,edi
  40e28e:	sbb    BYTE PTR [ebp+0x5cdc606b],ch
  40e294:	push   ebp
  40e295:	out    dx,eax
  40e296:	mov    eax,ds:0xe03ea43e
  40e29b:	fisttp WORD PTR [esi-0x13]
  40e29e:	ins    BYTE PTR es:[edi],dx
  40e29f:	iret   
  40e2a0:	or     eax,0x654654cd
  40e2a5:	out    dx,al
  40e2a6:	and    DWORD PTR [ebp-0x48],edx
  40e2a9:	push   ecx
  40e2aa:	neg    BYTE PTR [edi-0x6c0731c6]
  40e2b0:	jl     0x40e272
  40e2b2:	sbb    al,0x6a
  40e2b4:	cmp    BYTE PTR [edx+0x18],0xe
  40e2b8:	retf   0x3783
  40e2bb:	mov    dl,0xd5
  40e2bd:	mov    edx,0xa2393a6f
  40e2c2:	add    dh,BYTE PTR [esp+edi*2+0x66]
  40e2c6:	jno    0x40e2e3
  40e2c8:	xor    bl,ah
  40e2ca:	outs   dx,DWORD PTR ds:[esi]
  40e2cb:	fld    st(5)
  40e2cd:	xchg   ecx,eax
  40e2cf:	or     edi,eax
  40e2d1:	rcl    ch,1
  40e2d3:	(bad)  
  40e2d4:	push   edi
  40e2d5:	and    BYTE PTR [edx+0x28],cl
  40e2d8:	fadd   DWORD PTR [edx]
  40e2da:	scas   al,BYTE PTR es:[edi]
  40e2db:	inc    eax
  40e2dc:	jg     0x40e321
  40e2de:	ss sub dh,0x2e
  40e2e2:	adc    eax,0xdd6a6c59
  40e2e7:	mov    DWORD PTR fs:[ecx+ebp*2-0x2b],esp
  40e2ec:	lods   eax,DWORD PTR ds:[esi]
  40e2ed:	mov    edi,0x77a90a69
  40e2f2:	add    al,0xe9
  40e2f5:	retf   0x7818
  40e2f8:	pop    ss
  40e2f9:	retf   
  40e2fa:	jle    0x40e280
  40e2fc:	sbb    eax,0x4eb77996
  40e301:	into   
  40e302:	not    BYTE PTR [ecx+0x36]
  40e305:	sbb    al,0x1e
  40e307:	cmp    BYTE PTR [esp+eax*4],0xd7
  40e30b:	sti    
  40e30c:	and    eax,0xeac2b2c7
  40e311:	inc    eax
  40e312:	mov    cl,0xac
  40e314:	mov    al,ds:0x4074a054
  40e319:	mov    dh,0xf0
  40e31b:	jo     0x40e391
  40e31d:	inc    ecx
  40e31e:	xor    DWORD PTR [edi+edi*2+0x77dd1cb0],ebp
  40e325:	arpl   di,bx
  40e327:	scas   eax,DWORD PTR es:[edi]
  40e328:	ret    
  40e329:	inc    ebx
  40e32a:	scas   al,BYTE PTR es:[edi]
  40e32b:	or     al,dh
  40e32d:	fistp  WORD PTR [edi]
  40e32f:	xchg   esp,eax
  40e330:	sar    BYTE PTR [edx+0x73],0x4c
  40e334:	outs   dx,DWORD PTR ds:[esi]
  40e335:	mov    ebp,DWORD PTR ds:0x853af820
  40e33b:	dec    edx
  40e33c:	out    0x0,eax
  40e33e:	cmp    al,0xb7
  40e340:	and    dl,bh
  40e342:	lea    ebp,[edx+0x41]
  40e345:	pop    eax
  40e346:	jecxz  0x40e392
  40e348:	arpl   cx,bp
  40e34a:	ins    BYTE PTR es:[edi],dx
  40e34b:	jmp    FWORD PTR [edx+ebp*4+0x40]
  40e34f:	in     al,dx
  40e350:	test   BYTE PTR [edx+0x1382f735],al
  40e356:	repz repz fisubr DWORD PTR [edi+ecx*2]
  40e35b:	pop    ds
  40e35c:	fldcw  WORD PTR [ebx]
  40e35e:	fstp   TBYTE PTR [ecx]
  40e360:	iret   
  40e361:	xor    al,0xac
  40e363:	loope  0x40e383
  40e365:	ret    
  40e366:	push   0xffffff8b
  40e368:	sbb    ah,BYTE PTR [edi+0x3b1fa208]
  40e36e:	inc    DWORD PTR [esi-0xe85b8e]
  40e374:	ror    BYTE PTR [ecx-0xd97e968],1
  40e37a:	aas    
  40e37b:	retf   0xeb89
  40e37e:	js     0x40e325
  40e380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e381:	sub    ecx,eax
  40e383:	add    ebp,DWORD PTR es:0x7f100cf6
  40e38a:	scas   al,BYTE PTR es:[edi]
  40e38b:	call   0x1f90:0xc218d53a
  40e392:	xor    ecx,esp
  40e394:	maskmovq mm7,(bad)
  40e395:	idiv   DWORD PTR [ecx-0x784a51d8]
  40e39b:	clc    
  40e39c:	sbb    bl,BYTE PTR [ebp-0x3ee6f74d]
  40e3a2:	pop    es
  40e3a3:	ins    DWORD PTR es:[edi],dx
  40e3a4:	pop    edx
  40e3a5:	(bad)  
  40e3a6:	cmp    ebp,DWORD PTR [ecx]
  40e3a8:	test   BYTE PTR [esi],ch
  40e3aa:	push   ebp
  40e3ab:	in     al,dx
  40e3ac:	in     eax,dx
  40e3ad:	test   al,0x8b
  40e3af:	fsubr  QWORD PTR ds:0xcee05982
  40e3b5:	and    eax,0x7648945e
  40e3ba:	jg     0x40e41c
  40e3bc:	dec    ebx
  40e3bd:	adc    BYTE PTR [ebx-0x5b],al
  40e3c0:	popf   
  40e3c1:	fild   QWORD PTR [eax]
  40e3c3:	and    BYTE PTR [edi],dl
  40e3c5:	hlt    
  40e3c6:	xlat   BYTE PTR ds:[ebx]
  40e3c7:	test   al,0x82
  40e3c9:	pushf  
  40e3ca:	sbb    al,0xfb
  40e3cc:	fisttp DWORD PTR [ebx+0x23f20d9a]
  40e3d2:	jbe    0x40e3cb
  40e3d4:	mov    edi,0xcb005240
  40e3d9:	mov    bl,0xc6
  40e3db:	or     BYTE PTR [esi],0x3f
  40e3de:	mov    dl,0x68
  40e3e0:	cmc    
  40e3e1:	jle    0x40e3d9
  40e3e3:	shr    ch,cl
  40e3e5:	or     DWORD PTR [edx*1-0x1fba9f72],edi
  40e3ec:	ds shl al,1
  40e3ef:	jmp    0x9f906e64
  40e3f4:	js     0x40e410
  40e3f6:	jmp    0x40e3b3
  40e3f8:	sub    ebp,esi
  40e3fa:	pop    ds
  40e3fb:	cmp    ebp,DWORD PTR [edi]
  40e3fd:	call   0x8ef4:0xeb52a403
  40e404:	shl    DWORD PTR [ebp+0x5d],1
  40e407:	push   0x68
  40e409:	pop    ds
  40e40a:	or     al,BYTE PTR [ebx*8+0x390e964a]
  40e411:	ss retf 0x7473
  40e415:	and    al,0x9e
  40e417:	adc    al,0x85
  40e419:	or     dl,cl
  40e41b:	lods   al,BYTE PTR ds:[esi]
  40e41c:	jnp    0x40e3a3
  40e41e:	jp     0x40e3f3
  40e420:	xchg   al,bl
  40e422:	lods   al,BYTE PTR ds:[esi]
  40e423:	ja     0x40e454
  40e425:	std    
  40e426:	inc    esi
  40e427:	dec    eax
  40e428:	shl    DWORD PTR [ecx+0x7e87a4f2],0x1f
  40e42f:	hlt    
  40e430:	retf   
  40e431:	dec    ebx
  40e432:	scas   eax,DWORD PTR es:[edi]
  40e433:	outs   dx,BYTE PTR ds:[esi]
  40e434:	ja     0x40e430
  40e436:	ret    
  40e437:	inc    eax
  40e438:	int    0xbe
  40e43a:	test   ebp,ebp
  40e43c:	outs   dx,DWORD PTR ds:[esi]
  40e43d:	inc    eax
  40e43e:	or     BYTE PTR [ecx-0xf],dh
  40e441:	retf   
  40e442:	lods   eax,DWORD PTR ds:[esi]
  40e443:	jg     0x40e436
  40e445:	jmp    0x40e4a5
  40e447:	enter  0x4302,0x87
  40e44b:	pop    ebx
  40e44c:	arpl   WORD PTR [ebx-0x46],dx
  40e44f:	or     edx,edx
  40e451:	or     dh,bl
  40e453:	push   ecx
  40e454:	repnz test DWORD PTR [edx],ecx
  40e457:	cmp    al,0xb
  40e459:	push   esi
  40e45a:	push   eax
  40e45b:	or     BYTE PTR [ebp-0xe],ch
  40e45e:	cli    
  40e45f:	out    dx,eax
  40e460:	cmp    al,BYTE PTR [eax+0x41]
  40e463:	(bad)  
  40e464:	call   0xd4622e17
  40e469:	(bad)  
  40e46a:	(bad)  
  40e46b:	lods   eax,DWORD PTR ds:[esi]
  40e46c:	push   cs
  40e46d:	rcl    BYTE PTR [eax-0xd],1
  40e470:	ficom  DWORD PTR [esi-0x40b421a8]
  40e476:	add    ebp,DWORD PTR [ebp+0xd]
  40e479:	mov    WORD PTR [edi-0x1aed2fd9],?
  40e47f:	mov    eax,0x36ff5226
  40e484:	lds    ebx,FWORD PTR [edx-0x16bfc752]
  40e48a:	and    DWORD PTR [ebp+0x64280464],ebx
  40e490:	leave  
  40e491:	or     eax,DWORD PTR [ebx+0x33]
  40e494:	push   ss
  40e495:	arpl   WORD PTR fs:[edx],ax
  40e498:	loope  0x40e466
  40e49a:	daa    
  40e49b:	inc    esi
  40e49c:	add    eax,0x69ad524d
  40e4a1:	adc    DWORD PTR [esp+eax*1-0x2d96bc57],esp
  40e4a8:	lea    edi,[eax]
  40e4aa:	fwait
  40e4ab:	iret   
  40e4ac:	in     eax,0x5b
  40e4ae:	es int 0xf3
  40e4b1:	push   ds
  40e4b2:	cli    
  40e4b3:	in     eax,dx
  40e4b4:	popf   
  40e4b5:	dec    edi
  40e4b6:	fdivr  st,st(2)
  40e4b8:	xchg   esi,eax
  40e4b9:	jp     0x40e527
  40e4bb:	ror    eax,cl
  40e4bd:	(bad)  
  40e4be:	or     eax,0x77cdbede
  40e4c3:	xchg   edi,eax
  40e4c4:	in     eax,0xc7
  40e4c6:	jb     0x40e515
  40e4c8:	pop    ss
  40e4c9:	sbb    al,0xd1
  40e4cb:	mov    edi,0xba86771e
  40e4d0:	sub    eax,eax
  40e4d2:	sub    ecx,ecx
  40e4d4:	and    BYTE PTR [ebx+0x21],bh
  40e4d7:	or     eax,0x508adbe8
  40e4dc:	addr16 pop esi
  40e4de:	dec    ecx
  40e4df:	and    eax,0x74d94d11
  40e4e4:	pop    ecx
  40e4e5:	dec    edi
  40e4e6:	sbb    edx,eax
  40e4e8:	sahf   
  40e4e9:	fsubr  st(1),st
  40e4eb:	bound  esp,QWORD PTR ss:[ebp+0x5a]
  40e4ef:	add    DWORD PTR [ecx+0x5b],ecx
  40e4f2:	adc    bl,ah
  40e4f4:	adc    DWORD PTR [edi-0x6ad33e02],ebx
  40e4fa:	ret    0x14de
  40e4fd:	stos   BYTE PTR es:[edi],al
  40e4fe:	call   0x2960c5a3
  40e503:	push   eax
  40e504:	fwait
  40e505:	mov    dl,0x13
  40e507:	scas   al,BYTE PTR es:[edi]
  40e508:	sahf   
  40e509:	loop   0x40e4c6
  40e50b:	sbb    bl,BYTE PTR [edi]
  40e50d:	mov    ds:0x9564cad8,al
  40e512:	jae    0x40e505
  40e514:	data16 (bad) 
  40e517:	test   BYTE PTR [esi+0x1ff65b02],bh
  40e51d:	mov    ss,WORD PTR [edx+0x2]
  40e520:	pusha  
  40e521:	in     al,dx
  40e522:	fisub  WORD PTR [edi+edi*2+0x3f7e4093]
  40e529:	enter  0xb781,0xcc
  40e52d:	xchg   ebp,eax
  40e52e:	dec    edi
  40e52f:	push   esi
  40e530:	jb     0x40e520
  40e532:	enter  0x5444,0xf4
  40e536:	fs retf 0xf3aa
  40e53a:	(bad)  
  40e53b:	rcl    DWORD PTR [esi],0x57
  40e53e:	shr    DWORD PTR [ebp-0x2f],cl
  40e541:	sbb    al,BYTE PTR [eax-0x33]
  40e544:	int3   
  40e545:	fdiv   QWORD PTR [edi-0x3]
  40e548:	test   eax,0xf5f933ba
  40e54d:	ins    DWORD PTR es:[edi],dx
  40e54e:	pop    edi
  40e54f:	add    DWORD PTR [ebx+0x47],esi
  40e552:	gs add eax,0x1952c705
  40e558:	das    
  40e559:	retf   0x7fc0
  40e55c:	sbb    ebx,DWORD PTR [edx-0xc]
  40e55f:	sub    al,0xcc
  40e561:	rcl    DWORD PTR [ebx-0x58],1
  40e564:	fsub   DWORD PTR [edi]
  40e566:	daa    
  40e567:	shr    BYTE PTR [edx+edx*4-0x6f8ef097],0x9f
  40e56f:	or     al,0xe7
  40e571:	cmp    bh,BYTE PTR [ecx+0x5c2c673b]
  40e577:	jmp    0x16308f97
  40e57c:	aad    0xa7
  40e57e:	imul   esp,DWORD PTR [ebp+0x59],0x8b759192
  40e585:	mov    ds:0xf06d1868,eax
  40e58a:	fiadd  DWORD PTR [esi+0x276bb4f5]
  40e590:	ss loop 0x40e55b
  40e593:	es shl ebx,1
  40e596:	test   DWORD PTR [edi],ebp
  40e598:	add    edx,DWORD PTR [eax]
  40e59a:	mov    ebx,0x172ee07a
  40e59f:	into   
  40e5a0:	cmc    
  40e5a1:	xchg   ecx,eax
  40e5a2:	(bad)  
  40e5a4:	das    
  40e5a5:	xor    eax,0xd858157b
  40e5aa:	(bad)  [ebp-0x53b83983]
  40e5b0:	stos   BYTE PTR es:[edi],al
  40e5b1:	outs   dx,DWORD PTR ds:[esi]
  40e5b2:	shr    eax,cl
  40e5b4:	xor    al,ch
  40e5b6:	and    BYTE PTR [edi],0x19
  40e5b9:	sbb    BYTE PTR [eax],cl
  40e5bb:	mov    ecx,0xd287c802
  40e5c0:	mov    bh,0x89
  40e5c2:	(bad)  
  40e5c3:	and    DWORD PTR [eax-0x3b3b9727],eax
  40e5c9:	sbb    esp,DWORD PTR [ebp-0x6587653]
  40e5cf:	mov    cl,0x13
  40e5d1:	mov    al,0x63
  40e5d3:	xchg   edi,eax
  40e5d5:	pushf  
  40e5d6:	sbb    al,0xf3
  40e5d8:	or     al,BYTE PTR [edx+0x173d6a8]
  40e5de:	daa    
  40e5df:	push   eax
  40e5e0:	bound  ebp,QWORD PTR [edi-0x296ce139]
  40e5e6:	sbb    dl,BYTE PTR [edx-0x4578a3a6]
  40e5ec:	inc    ebp
  40e5ed:	xchg   edx,eax
  40e5ee:	and    BYTE PTR [ebx+0x7d],al
  40e5f1:	mov    esp,0xe57650a9
  40e5f6:	push   esi
  40e5f7:	push   ebx
  40e5f8:	xor    al,0x60
  40e5fa:	rcr    BYTE PTR [esi+0x6c],cl
  40e5fd:	hlt    
  40e5fe:	push   edi
  40e5ff:	in     eax,0xc
  40e601:	ja     0x40e633
  40e603:	push   eax
  40e604:	mov    ebx,0x9510fb1
  40e609:	pop    es
  40e60a:	mov    ecx,0x8f790bd9
  40e60f:	push   cs
  40e610:	mov    esi,0x28f4725a
  40e615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e616:	mov    ebp,0xbcf6e677
  40e61b:	push   cs
  40e61c:	ins    DWORD PTR es:[edi],dx
  40e61d:	jge    0x40e680
  40e61f:	pusha  
  40e620:	pop    ebp
  40e621:	adc    al,0xb
  40e623:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40e625:	cmc    
  40e626:	fnstsw WORD PTR [ecx-0x60f1081b]
  40e62c:	pusha  
  40e62d:	dec    esi
  40e62e:	sbb    BYTE PTR [ebx+0x7f91e7bc],0x8a
  40e635:	(bad)  
  40e636:	mov    dl,0x9b
  40e638:	fst    DWORD PTR ds:0x44b91963
  40e63e:	and    BYTE PTR [bx+si-0x65],dh
  40e642:	mov    bh,0x7e
  40e644:	mov    dh,0xe0
  40e646:	mov    dh,0x64
  40e648:	(bad)  
  40e649:	jo     0x40e645
  40e64b:	loop   0x40e644
  40e64d:	xor    eax,0x932ea36f
  40e652:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e653:	push   ecx
  40e654:	call   0xfb34:0x6d6dc749
  40e65b:	xchg   esp,eax
  40e65c:	fist   DWORD PTR [ebx]
  40e65e:	sbb    ch,BYTE PTR [ebx+0x5b]
  40e661:	outs   dx,BYTE PTR ds:[esi]
  40e662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e663:	jb     0x40e661
  40e665:	fstp   TBYTE PTR [eax-0x4a]
  40e668:	in     eax,dx
  40e669:	dec    ebp
  40e66a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e66b:	out    0xad,eax
  40e66d:	push   ds
  40e66e:	pusha  
  40e66f:	add    dl,BYTE PTR [ecx-0x7a]
  40e672:	stos   BYTE PTR es:[edi],al
  40e673:	test   eax,0x1a0fc12d
  40e678:	pop    ds
  40e679:	inc    ebp
  40e67a:	adc    al,0x45
  40e67c:	add    eax,0xea3b3771
  40e681:	xor    edi,edi
  40e683:	fisubr DWORD PTR [eax]
  40e685:	cli    
  40e686:	ins    DWORD PTR es:[edi],dx
  40e687:	fisub  DWORD PTR [ebp+0x59d6b0be]
  40e68d:	mov    esp,0x60ca846e
  40e692:	in     al,0x2f
  40e694:	ror    BYTE PTR [edx],1
  40e696:	dec    esp
  40e697:	jo     0x40e6c3
  40e699:	lea    esi,[eax+0x13]
  40e69c:	pop    ds
  40e69d:	and    al,0xb5
  40e69f:	xor    dh,dl
  40e6a1:	ins    BYTE PTR es:[edi],dx
  40e6a2:	hlt    
  40e6a3:	mul    DWORD PTR [edi+edx*1-0x40]
  40e6a7:	test   al,0x3
  40e6a9:	inc    edx
  40e6aa:	pop    ecx
  40e6ab:	dec    eax
  40e6ac:	and    esp,DWORD PTR [edi]
  40e6ae:	cld    
  40e6af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6b0:	fstp   DWORD PTR [eax-0x2965791b]
  40e6b6:	push   edi
  40e6b7:	pop    ebx
  40e6b8:	rdpmc  
  40e6ba:	xchg   ecx,eax
  40e6bb:	scas   al,BYTE PTR es:[edi]
  40e6bc:	pop    ecx
  40e6bd:	fwait
  40e6be:	cwde   
  40e6bf:	jecxz  0x40e68c
  40e6c1:	push   edi
  40e6c2:	out    0x1a,eax
  40e6c4:	imul   eax,DWORD PTR [edx+0x49083235],0xeed42bd4
  40e6ce:	sbb    BYTE PTR [edx],cl
  40e6d0:	mov    dh,0xc5
  40e6d2:	gs dec ecx
  40e6d4:	sbb    al,0x6b
  40e6d6:	ds int3 
  40e6d8:	xchg   ebx,eax
  40e6d9:	jbe    0x40e662
  40e6db:	fisttp DWORD PTR [edi]
  40e6dd:	leave  
  40e6de:	add    eax,0xc99cbad6
  40e6e3:	xchg   BYTE PTR [eax],ah
  40e6e5:	in     al,dx
  40e6e6:	dec    esp
  40e6e7:	dec    ecx
  40e6e8:	inc    ecx
  40e6e9:	cmp    BYTE PTR [ebx+0x4e740a8],dh
  40e6ef:	sahf   
  40e6f0:	inc    esi
  40e6f1:	or     esp,ebx
  40e6f3:	(bad)  [eax+0x502b252c]
  40e6f9:	push   ss
  40e6fa:	call   0x8d92:0x48b1943c
  40e701:	(bad)  
  40e702:	mov    es,WORD PTR [ecx+0x44e94964]
  40e708:	lods   eax,DWORD PTR ds:[esi]
  40e709:	inc    edx
  40e70a:	rcl    BYTE PTR [ecx+ebp*4-0x6e],1
  40e70e:	mov    ah,0x3a
  40e710:	in     eax,dx
  40e711:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40e713:	xchg   ecx,eax
  40e714:	inc    edx
  40e715:	(bad)  
  40e717:	and    DWORD PTR [esi+0x266d84c4],0x65
  40e71e:	test   al,0xc6
  40e720:	xlat   BYTE PTR ds:[ebx]
  40e721:	outs   dx,DWORD PTR ds:[esi]
  40e722:	sub    eax,0x480eda89
  40e727:	xchg   ebx,eax
  40e728:	ja     0x40e73e
  40e72a:	mov    eax,0xd9bd5263
  40e72f:	dec    esp
  40e730:	xchg   BYTE PTR [ebx-0x1b85256c],al
  40e736:	xor    DWORD PTR [ebp+esi*2-0x4a],edi
  40e73a:	and    esi,ebp
  40e73c:	je     0x40e755
  40e73e:	dec    esi
  40e73f:	rol    BYTE PTR [edi+ecx*2],1
  40e742:	mov    ds:0x8bc471b0,al
  40e747:	xchg   esi,eax
  40e748:	fmul   st(5),st
  40e74a:	mov    ch,ch
  40e74c:	xchg   edi,eax
  40e74d:	xor    bh,BYTE PTR [edx-0x2e90e253]
  40e753:	mov    bl,0x52
  40e755:	mov    cl,0xd1
  40e757:	and    eax,DWORD PTR [esi]
  40e759:	sbb    DWORD PTR [ebx-0x65],ebx
  40e75c:	les    edx,FWORD PTR [edi+0x26044944]
  40e762:	mov    bh,0x50
  40e764:	xor    ah,BYTE PTR [ebx+ebp*4-0x5b0588bc]
  40e76b:	loop   0x40e763
  40e76d:	in     al,dx
  40e76e:	cmp    eax,0x9867c304
  40e773:	stc    
  40e774:	(bad)  
  40e775:	and    bl,BYTE PTR [eax+ecx*1]
  40e778:	sub    ecx,esi
  40e77a:	jb     0x40e7c6
  40e77c:	bound  eax,QWORD PTR [edi+0x789b40fd]
  40e782:	in     eax,0xcc
  40e784:	or     DWORD PTR [ebx],ecx
  40e786:	mov    ebx,DWORD PTR [edi+0x7d]
  40e789:	and    al,0x2f
  40e78b:	inc    edx
  40e78c:	xor    ebx,DWORD PTR [edi+0x37]
  40e78f:	jmp    0x70c628fc
  40e794:	rcl    BYTE PTR [esp+ecx*4+0x3a],cl
  40e798:	fst    DWORD PTR [edi]
  40e79a:	fs push ss
  40e79c:	lds    esi,FWORD PTR [edi-0xd55ce67]
  40e7a2:	out    dx,al
  40e7a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7a4:	aas    
  40e7a5:	test   DWORD PTR [edi+0x5d],0x6afeff16
  40e7ac:	fbstp  TBYTE PTR [edi]
  40e7ae:	mov    BYTE PTR [ebx+0x31],cl
  40e7b1:	shl    DWORD PTR [ebp-0x56634d79],1
  40e7b7:	popf   
  40e7b8:	mov    ebp,ebp
  40e7ba:	xchg   edi,eax
  40e7bb:	hlt    
  40e7bc:	jne    0x40e7d3
  40e7be:	call   0xf584:0x2c462a23
  40e7c5:	inc    ebp
  40e7c6:	and    DWORD PTR [ebp-0x2ee5bb1c],edi
  40e7cc:	arpl   ax,bx
  40e7ce:	xchg   ebx,eax
  40e7cf:	ja     0x40e752
  40e7d1:	fucomp st(2)
  40e7d3:	popf   
  40e7d4:	das    
  40e7d5:	stos   BYTE PTR es:[edi],al
  40e7d6:	push   0xffffffcf
  40e7d8:	std    
  40e7d9:	mov    DWORD PTR [edx+0x24],esp
  40e7dc:	in     eax,0x9a
  40e7de:	inc    esp
  40e7df:	sbb    al,0xab
  40e7e1:	cwde   
  40e7e2:	cmp    DWORD PTR [ebx],eax
  40e7e4:	jb     0x40e786
  40e7e6:	sti    
  40e7e7:	scas   eax,DWORD PTR es:[edi]
  40e7e8:	dec    esp
  40e7e9:	cld    
  40e7ea:	adc    al,0x3d
  40e7ec:	lods   al,BYTE PTR ds:[esi]
  40e7ed:	loop   0x40e862
  40e7ef:	stos   BYTE PTR es:[edi],al
  40e7f0:	loope  0x40e801
  40e7f2:	imul   eax,DWORD PTR [edi],0xffffffb6
  40e7f5:	push   edx
  40e7f6:	pop    es
  40e7f7:	adc    edi,DWORD PTR [eax+0x5b]
  40e7fa:	repz jae 0x40e7b7
  40e7fd:	cli    
  40e7fe:	bound  esi,QWORD PTR [edx+0x287724a5]
  40e804:	lds    edx,FWORD PTR cs:[edi]
  40e807:	(bad)  [edi-0xde4c2b0]
  40e80d:	dec    esi
  40e80e:	pop    ebx
  40e80f:	call   0xaecbf89
  40e814:	fcmovnb st,st(1)
  40e816:	loopne 0x40e851
  40e818:	push   eax
  40e819:	loopne 0x40e7b3
  40e81b:	bnd ret 0x1be0
  40e81f:	inc    edi
  40e820:	sahf   
  40e821:	cmp    bh,cl
  40e823:	add    al,0x33
  40e825:	(bad)  
  40e826:	leave  
  40e827:	into   
  40e828:	fcomip st,st(7)
  40e82a:	and    DWORD PTR es:[ebx+0x7613acb3],edx
  40e831:	popa   
  40e832:	and    eax,0xec0e685f
  40e837:	setbe  BYTE PTR ss:[ebx-0x1a]
  40e83c:	jecxz  0x40e7ee
  40e83e:	sub    DWORD PTR [edi+0x65],ecx
  40e841:	arpl   WORD PTR [esi+edx*2-0xd1e9d81],di
  40e848:	jmp    0xb55e:0x6a747a8c
  40e84f:	ins    DWORD PTR es:[edi],dx
  40e850:	push   ss
  40e851:	jg     0x40e854
  40e853:	xchg   edx,eax
  40e854:	adc    al,0xa6
  40e856:	mov    ch,0xfd
  40e858:	mov    ch,0xd8
  40e85a:	lds    ecx,FWORD PTR [edx]
  40e85c:	sar    BYTE PTR [edx],0x46
  40e85f:	cwde   
  40e860:	lods   al,BYTE PTR ds:[esi]
  40e861:	addr16 lahf 
  40e863:	pop    ds
  40e864:	or     BYTE PTR [ecx+0x1f15b993],0x53
  40e86b:	add    eax,0x1b828b30
  40e870:	mov    ds:0x29184c8c,eax
  40e875:	dec    eax
  40e876:	call   DWORD PTR [esi+0x74]
  40e879:	sbb    eax,0xa4eea5ed
  40e87e:	out    dx,al
  40e87f:	mov    bh,0xc0
  40e881:	outs   dx,DWORD PTR ds:[esi]
  40e882:	add    bl,ch
  40e884:	sbb    edx,DWORD PTR [ebx-0x34]
  40e887:	fcmovu st,st(6)
  40e889:	mov    DWORD PTR [ebx+edi*2],eax
  40e88c:	aaa    
  40e88d:	sbb    ebx,esp
  40e88f:	cmp    al,0x9a
  40e891:	xor    BYTE PTR [ebx-0x19],0xb1
  40e895:	inc    edx
  40e896:	dec    ecx
  40e897:	mov    ds:0xca0842bc,al
  40e89c:	or     BYTE PTR [esi],bl
  40e89e:	and    dh,cl
  40e8a0:	pusha  
  40e8a1:	inc    ebp
  40e8a2:	dec    ecx
  40e8a3:	stc    
  40e8a4:	sub    eax,0x21914b7
  40e8a9:	les    edx,FWORD PTR [esi+0x51]
  40e8ac:	pop    ds
  40e8ad:	mov    dh,0xd2
  40e8af:	sub    esp,DWORD PTR [ebp+0x139282e2]
  40e8b5:	xchg   esi,eax
  40e8b6:	pop    ecx
  40e8b7:	aam    0x67
  40e8b9:	outs   dx,DWORD PTR ds:[esi]
  40e8ba:	das    
  40e8bb:	js     0x40e92b
  40e8bd:	adc    DWORD PTR [edi],0xb4f63ef9
  40e8c3:	in     al,0x5a
  40e8c5:	cs call 0x6830:0xdfe24e9d
  40e8cd:	stos   DWORD PTR es:[edi],eax
  40e8ce:	mov    esi,0xb1b4896e
  40e8d3:	inc    eax
  40e8d4:	or     DWORD PTR [edi],esp
  40e8d6:	cdq    
  40e8d7:	sbb    al,0x8a
  40e8d9:	xchg   BYTE PTR [ebp+esi*4+0x6a],dl
  40e8dd:	or     edi,DWORD PTR [esi+esi*2]
  40e8e0:	std    
  40e8e1:	cwde   
  40e8e2:	les    edi,FWORD PTR [edx+0x13e46a8c]
  40e8e8:	and    BYTE PTR [edi-0x5e],0xfe
  40e8ec:	or     al,0x10
  40e8ee:	sub    esp,DWORD PTR [edi]
  40e8f0:	cmc    
  40e8f1:	(bad)  
  40e8f2:	push   ebp
  40e8f3:	int    0x8c
  40e8f5:	dec    eax
  40e8f6:	or     al,0x73
  40e8f8:	dec    esp
  40e8f9:	int3   
  40e8fa:	mov    BYTE PTR [eax-0x4],bl
  40e8fd:	xor    eax,0xb836d7
  40e902:	pop    es
  40e903:	mov    bl,0xa4
  40e905:	(bad)  
  40e906:	pop    ss
  40e907:	dec    ebx
  40e908:	aam    0x6d
  40e90a:	cmp    cl,dh
  40e90c:	mov    BYTE PTR [edi+edi*1],dh
  40e90f:	clc    
  40e910:	lods   eax,DWORD PTR ds:[esi]
  40e911:	sub    al,0xc4
  40e913:	sbb    DWORD PTR [esi+0x39d295aa],esi
  40e919:	cmp    eax,0x74fe6405
  40e91e:	push   ebp
  40e91f:	into   
  40e920:	ins    BYTE PTR es:[edi],dx
  40e921:	push   esi
  40e922:	clc    
  40e923:	addr16 push 0xffffffa6
  40e926:	pop    esp
  40e927:	out    dx,eax
  40e928:	push   es
  40e929:	xchg   ebx,eax
  40e92a:	jno    0x40e8ad
  40e92c:	dec    esi
  40e92d:	mov    ebp,0xa2fc68a5
  40e932:	call   0x1428:0xd814ae5d
  40e939:	mov    bh,0xcf
  40e93b:	ja     0x40e965
  40e93d:	lds    edi,FWORD PTR [ebx+0x15]
  40e940:	aad    0xcc
  40e942:	inc    esp
  40e943:	jecxz  0x40e9a9
  40e945:	or     bh,BYTE PTR [eax+0x32724990]
  40e94b:	ror    edx,0x35
  40e94e:	test   al,0x9f
  40e950:	push   ecx
  40e951:	nop
  40e952:	cmp    dl,BYTE PTR [edx-0x21]
  40e955:	mov    eax,0x39870fe4
  40e95a:	sbb    eax,0x1815f254
  40e95f:	pop    ss
  40e960:	push   esp
  40e961:	xor    DWORD PTR [ebp-0x11],ebp
  40e964:	clc    
  40e965:	adc    ebx,DWORD PTR ds:0x3a7f0557
  40e96b:	mov    DWORD PTR [edi],ebx
  40e96d:	dec    esp
  40e96e:	ins    BYTE PTR es:[edi],dx
  40e96f:	rol    DWORD PTR [eax-0x31303d68],0x56
  40e976:	sub    BYTE PTR [ebx+esi*2],cl
  40e979:	inc    edx
  40e97a:	outs   dx,BYTE PTR ds:[esi]
  40e97b:	aad    0xb1
  40e97d:	xor    eax,0x59084e98
  40e982:	add    al,0x3e
  40e984:	(bad)  
  40e985:	loopne 0x40e99a
  40e987:	sub    BYTE PTR [ecx],ch
  40e989:	dec    edi
  40e98a:	sbb    eax,0x6cb3d7ab
  40e98f:	int    0xc6
  40e991:	or     BYTE PTR [ebx-0x60cfd40e],bl
  40e997:	inc    esi
  40e998:	pop    ss
  40e999:	dec    ebp
  40e99a:	fbld   TBYTE PTR [ebx-0x3d]
  40e99d:	add    BYTE PTR [esi],0x51
  40e9a0:	jae    0x40ea08
  40e9a2:	(bad)  
  40e9a4:	mov    cl,0x72
  40e9a6:	sahf   
  40e9a7:	adc    al,al
  40e9a9:	addr16 ret 
  40e9ab:	and    eax,0x224d4190
  40e9b0:	mov    cl,0xfb
  40e9b2:	jmp    0xefef:0xa97dd104
  40e9b9:	push   edx
  40e9ba:	fdivr  QWORD PTR [edi+0x76]
  40e9bd:	cmp    BYTE PTR [eax],0x71
  40e9c0:	pusha  
  40e9c1:	imul   ebx,DWORD PTR [esp+edx*1+0x4d38898b],0xb12c845
  40e9cc:	ret    
  40e9cd:	sub    DWORD PTR [esi-0x5],esp
  40e9d0:	push   edi
  40e9d1:	in     eax,0x95
  40e9d3:	pop    ds
  40e9d4:	jmp    0x4411:0x20eb4229
  40e9db:	sub    edx,DWORD PTR ds:0xa98b165e
  40e9e1:	in     al,0x5d
  40e9e3:	lods   eax,DWORD PTR ds:[esi]
  40e9e4:	outs   dx,BYTE PTR ds:[esi]
  40e9e5:	scas   eax,DWORD PTR es:[edi]
  40e9e6:	not    DWORD PTR [edi]
  40e9e8:	mov    dh,0x22
  40e9ea:	retf   0xfa5
  40e9ed:	dec    ebp
  40e9ee:	fiadd  DWORD PTR [edx]
  40e9f0:	data16 jge 0x40e9c4
  40e9f3:	mov    al,0xa9
  40e9f5:	popf   
  40e9f6:	mov    edi,0x7375b7e4
  40e9fb:	xor    al,0x76
  40e9fd:	inc    ebp
  40e9fe:	push   0xffffffdc
  40ea00:	adc    esi,DWORD PTR [ecx]
  40ea02:	retf   0x8d95
  40ea05:	sbb    BYTE PTR [edi-0x5db8f4c7],cl
  40ea0b:	retf   0x7f4b
  40ea0e:	in     al,dx
  40ea0f:	sbb    ebp,DWORD PTR [ebp+0x34eb1559]
  40ea15:	dec    ecx
  40ea16:	mov    bh,0xf9
  40ea18:	cmp    DWORD PTR [eax+eiz*1-0xa],ebx
  40ea1c:	mov    dl,al
  40ea1e:	push   eax
  40ea1f:	in     al,dx
  40ea20:	sub    bh,BYTE PTR [esi+0x50]
  40ea23:	dec    BYTE PTR [ebp-0x50]
  40ea26:	mov    edx,0x3a86c00c
  40ea2b:	inc    ebp
  40ea2c:	ss shl eax,1
  40ea2f:	out    0x56,al
  40ea31:	dec    ecx
  40ea32:	in     al,0x9c
  40ea34:	dec    ebx
  40ea35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea36:	adc    esp,esi
  40ea38:	out    dx,al
  40ea39:	or     ebx,edx
  40ea3b:	ret    0x46ab
  40ea3e:	js     0x40eab7
  40ea40:	out    dx,eax
  40ea41:	xor    eax,0xff0e7f7c
  40ea46:	shr    BYTE PTR [eax],0x59
  40ea49:	push   ds
  40ea4a:	mov    ebx,0xce1df977
  40ea4f:	or     bl,0x73
  40ea52:	mov    edi,0x5010dc16
  40ea57:	gs pop si
  40ea5a:	(bad)  
  40ea5b:	jge    0x40e9e7
  40ea5d:	or     ecx,DWORD PTR [esi]
  40ea5f:	mul    BYTE PTR [ecx-0x4c]
  40ea62:	iret   
  40ea63:	mov    bl,0xed
  40ea65:	pop    eax
  40ea66:	jg     0x40ea83
  40ea68:	jbe    0x40ea9d
  40ea6a:	rcr    BYTE PTR [eax],0xce
  40ea6d:	(bad)  
  40ea6e:	mov    ebx,0x9a4c5d7d
  40ea73:	in     eax,dx
  40ea74:	cmp    eax,0x77af1b84
  40ea79:	inc    esp
  40ea7a:	xchg   ebp,eax
  40ea7b:	dec    edi
  40ea7c:	adc    dh,BYTE PTR [edi-0x3f41206f]
  40ea82:	mov    ah,0xd4
  40ea84:	retf   0x4715
  40ea87:	shl    DWORD PTR [ebx+0x4eace08c],cl
  40ea8d:	or     al,0x7e
  40ea8f:	pop    ebx
  40ea90:	scas   eax,DWORD PTR es:[edi]
  40ea91:	lock and al,0xd5
  40ea94:	in     eax,dx
  40ea95:	mov    bl,0x70
  40ea97:	call   0xe1d0:0x9615b31e
  40ea9e:	shl    BYTE PTR [ecx+0x30],cl
  40eaa1:	mov    ah,BYTE PTR [edi]
  40eaa3:	les    ebx,FWORD PTR [edi+0x26d35657]
  40eaa9:	jge    0x40ead9
  40eaab:	jecxz  0x40ea7b
  40eaad:	inc    ebp
  40eaae:	inc    eax
  40eaaf:	inc    ebx
  40eab0:	jae    0x40eac4
  40eab2:	add    BYTE PTR [edi-0x49],dl
  40eab5:	add    al,0x1d
  40eab7:	ins    BYTE PTR es:[edi],dx
  40eab8:	js     0x40eafb
  40eaba:	lods   eax,DWORD PTR ds:[esi]
  40eabb:	call   0xc27753e8
  40eac0:	cdq    
  40eac1:	scas   al,BYTE PTR es:[edi]
  40eac2:	ror    DWORD PTR [ebx+edi*4+0x65],cl
  40eac6:	scas   eax,DWORD PTR es:[edi]
  40eac7:	push   ss
  40eac8:	clc    
  40eac9:	cmp    DWORD PTR [ecx-0x2b],0xffffffb4
  40eacd:	pusha  
  40eace:	leave  
  40eacf:	mov    ds:0xbd40741f,al
  40ead4:	out    dx,eax
  40ead5:	aaa    
  40ead6:	mov    dl,0xad
  40ead8:	jmp    0x40eb0a
  40eada:	and    eax,0x693a6868
  40eadf:	div    BYTE PTR [edi-0x61670413]
  40eae5:	into   
  40eae6:	in     eax,0x2
  40eae8:	lea    edi,[ecx-0x44]
  40eaeb:	pushf  
  40eaec:	es mov esi,0xeaab177c
  40eaf2:	mov    ecx,0xa9091a79
  40eaf7:	fxch   st(2)
  40eaf9:	cmp    dh,ah
  40eafb:	hlt    
  40eafc:	dec    ecx
  40eafd:	xor    esi,DWORD PTR [edi+0x78a9e4e4]
  40eb03:	inc    ecx
  40eb04:	mov    al,0x64
  40eb06:	mov    cl,0x42
  40eb08:	sub    esp,DWORD PTR [ecx+0x3ea862d0]
  40eb0e:	pushf  
  40eb0f:	xchg   ebp,eax
  40eb10:	cmc    
  40eb11:	nop
  40eb12:	nop
  40eb13:	sub    BYTE PTR [ebx],dh
  40eb15:	pop    esp
  40eb16:	stos   DWORD PTR es:[edi],eax
  40eb17:	call   0x1c1a:0x5caf3f66
  40eb1e:	mov    BYTE PTR [ecx+edx*8],cl
  40eb21:	sbb    eax,0xd5614e7a
  40eb26:	sbb    DWORD PTR [esi+ecx*4+0x3c],0xdcce12ed
  40eb2e:	hlt    
  40eb2f:	pop    eax
  40eb30:	mov    dl,0xf7
  40eb32:	cmp    DWORD PTR ds:0xdd047033,eax
  40eb38:	cmp    eax,0xf4341bb1
  40eb3d:	adc    esi,eax
  40eb3f:	mov    esp,0x39208b68
  40eb44:	(bad)  
  40eb45:	adc    BYTE PTR [ebp-0x58155ff7],dh
  40eb4b:	sub    DWORD PTR [edx+0x2],edi
  40eb4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb4f:	jnp    0x40eb6c
  40eb51:	mov    esp,0xf6ca76ae
  40eb56:	jbe    0x40ebd1
  40eb58:	fwait
  40eb59:	cdq    
  40eb5a:	sbb    eax,0xf16f5fce
  40eb5f:	mov    dl,0x45
  40eb61:	inc    eax
  40eb62:	stos   BYTE PTR es:[edi],al
  40eb63:	mov    edi,0xed75ff87
  40eb68:	xchg   ebx,eax
  40eb69:	cmp    ah,BYTE PTR [edx]
  40eb6b:	fprem1 
  40eb6d:	cld    
  40eb6e:	jmp    0x558:0x53a6a75a
  40eb75:	xchg   esi,eax
  40eb76:	in     al,dx
  40eb77:	mov    dl,0xe6
  40eb79:	jg     0x40eb67
  40eb7b:	dec    ebx
  40eb7c:	mov    ebx,0x5693e841
  40eb81:	jnp    0x40eb19
  40eb83:	cmc    
  40eb84:	add    esp,DWORD PTR [ebx+edi*4]
  40eb87:	imul   esp,DWORD PTR [esi],0xffffffb8
  40eb8a:	out    0xb8,eax
  40eb8c:	jo     0x40ebcb
  40eb8e:	inc    esp
  40eb8f:	and    al,0x31
  40eb91:	neg    BYTE PTR [ebp+0x73]
  40eb94:	xchg   bh,ch
  40eb96:	mov    ebp,0xa9512a1e
  40eb9b:	enter  0x6ef7,0x35
  40eb9f:	mov    eax,ds:0xb5f5dc12
  40eba4:	inc    esp
  40eba5:	mov    al,ds:0xe373d150
  40ebaa:	push   ds
  40ebab:	shl    BYTE PTR [esi-0x704e786],1
  40ebb1:	shl    DWORD PTR [di-0x6a0a],1
  40ebb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebb7:	cwde   
  40ebb8:	rol    DWORD PTR [edx+0x1c],cl
  40ebbb:	sub    BYTE PTR [esi-0x729f9c5],bl
  40ebc1:	jne    0x40ebee
  40ebc3:	jae    0x40ebf0
  40ebc5:	adc    eax,0x4460bd76
  40ebca:	in     al,0x4e
  40ebcc:	out    dx,eax
  40ebcd:	xchg   ebx,eax
  40ebce:	test   al,0x9
  40ebd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebd1:	xchg   DWORD PTR [edi],edx
  40ebd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebd4:	fisttp DWORD PTR [ebx+ecx*4]
  40ebd7:	or     BYTE PTR [ecx+eax*1],cl
  40ebda:	aas    
  40ebdb:	mov    edi,DWORD PTR [edi+ebx*2-0x54]
  40ebdf:	or     BYTE PTR [ecx+0x7c],0x7
  40ebe3:	mov    bh,0x48
  40ebe5:	inc    ecx
  40ebe6:	adc    dh,BYTE PTR [edx]
  40ebe8:	imul   edx,DWORD PTR [ebp-0x50],0x52f41d6b
  40ebef:	xchg   ecx,eax
  40ebf0:	(bad)  
  40ebf1:	dec    ebp
  40ebf2:	outs   dx,WORD PTR ds:[esi]
  40ebf4:	sbb    eax,0x93cf00a7
  40ebf9:	pusha  
  40ebfa:	and    eax,0xfc0d3d13
  40ebff:	jo     0x40ec59
  40ec01:	dec    ebp
  40ec02:	dec    eax
  40ec03:	sbb    DWORD PTR [eax+0x2b],ebp
  40ec06:	jae    0x40ec49
  40ec08:	cwde   
  40ec09:	jle    0x40ec67
  40ec0b:	push   ecx
  40ec0c:	add    DWORD PTR [ebp-0x3555eee1],edi
  40ec12:	sti    
  40ec13:	mov    bh,0xc
  40ec15:	fild   WORD PTR [eax+edx*8-0x3dcef005]
  40ec1c:	fisub  WORD PTR [ecx-0x1c46fc97]
  40ec22:	inc    esi
  40ec23:	in     al,0x4a
  40ec25:	retf   0x7eff
  40ec28:	popa   
  40ec29:	jmp    DWORD PTR [edx+0x6702ba72]
  40ec2f:	rol    ch,cl
  40ec31:	popf   
  40ec32:	popa   
  40ec33:	add    al,0x6e
  40ec35:	ja     0x40ecb4
  40ec37:	inc    ebp
  40ec38:	in     al,dx
  40ec39:	xchg   ecx,eax
  40ec3a:	xchg   ecx,eax
  40ec3b:	or     edx,DWORD PTR [ecx+eiz*4]
  40ec3e:	ja     0x40ec21
  40ec40:	(bad)  
  40ec41:	fisubr DWORD PTR [edi-0x7a]
  40ec44:	int    0x4a
  40ec46:	call   0x187aafb1
  40ec4b:	emms   
  40ec4d:	jge    0x40ecac
  40ec4f:	jne    0x40ec62
  40ec51:	jmp    0x499a1df4
  40ec56:	and    ebp,esp
  40ec58:	ja     0x40ebed
  40ec5a:	sar    BYTE PTR [ebp-0x5c1a0902],1
  40ec60:	pop    ds
  40ec61:	xchg   edx,eax
  40ec62:	xchg   esp,eax
  40ec63:	mov    dh,0xe7
  40ec65:	pop    ebp
  40ec66:	icebp  
  40ec67:	inc    eax
  40ec68:	xor    DWORD PTR [ebx+0xf],esp
  40ec6b:	pop    es
  40ec6c:	arpl   WORD PTR [edx-0x1b],dx
  40ec6f:	xchg   ecx,eax
  40ec70:	shl    BYTE PTR [ecx-0x48],cl
  40ec73:	retf   
  40ec74:	dec    edi
  40ec75:	or     al,BYTE PTR [ecx-0x3eddbf7c]
  40ec7b:	sub    bh,cl
  40ec7d:	and    BYTE PTR [ebp-0x5f],ch
  40ec80:	mov    DWORD PTR [ebp-0x63],ebp
  40ec83:	dec    eax
  40ec84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec85:	jo     0x40ec14
  40ec87:	dec    edx
  40ec88:	sbb    BYTE PTR [eax],ah
  40ec8a:	mov    ebp,0x8d403e99
  40ec8f:	out    dx,eax
  40ec90:	aad    0xac
  40ec92:	enter  0x7623,0xa1
  40ec96:	test   BYTE PTR [edx],bl
  40ec98:	mov    dh,0xb7
  40ec9a:	push   0xffffffc5
  40ec9c:	adc    edi,edx
  40ec9e:	test   eax,0xc6897ec8
  40eca3:	sbb    eax,0x6d3b659b
  40eca8:	sbb    DWORD PTR [esp+ebx*1+0x69a23d4c],eax
  40ecaf:	sbb    DWORD PTR [eax+0x554e71d4],eax
  40ecb5:	cmp    al,0x1f
  40ecb7:	mov    eax,0x710a5298
  40ecbc:	jecxz  0x40ecad
  40ecbe:	inc    esp
  40ecbf:	adc    al,0x61
  40ecc1:	bound  ebp,QWORD PTR [edi+0x6f]
  40ecc4:	xchg   edi,eax
  40ecc5:	dec    edi
  40ecc6:	push   es
  40ecc7:	mov    cl,0xc6
  40ecc9:	outs   dx,DWORD PTR ds:[esi]
  40ecca:	cmp    ebp,DWORD PTR [eax]
  40eccc:	dec    ebx
  40ecce:	not    bl
  40ecd0:	mov    WORD PTR [edx+eax*4+0x6b],es
  40ecd4:	aaa    
  40ecd5:	pusha  
  40ecd6:	mov    ebx,cr0
  40ecd9:	ins    DWORD PTR es:[edi],dx
  40ecda:	inc    edx
  40ecdb:	pop    ss
  40ecdc:	jecxz  0x40ed0b
  40ecde:	jbe    0x40ed56
  40ece0:	cwde   
  40ece1:	(bad)  
  40ece2:	or     esp,esi
  40ece4:	hlt    
  40ece5:	enter  0x6d6a,0x6b
  40ece9:	bound  ecx,QWORD PTR ds:0x8c9afeed
  40ecef:	pop    edx
  40ecf0:	cmp    BYTE PTR [edi-0x24],dl
  40ecf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecf4:	push   edi
  40ecf5:	mov    edx,0xbc57c060
  40ecfa:	fadd   st,st(7)
  40ecfc:	lock data16 sti 
  40ecff:	(bad)  
  40ed00:	clc    
  40ed01:	lock stos DWORD PTR es:[edi],eax
  40ed03:	in     eax,dx
  40ed04:	sub    BYTE PTR [ecx+0x27d28d4d],ah
  40ed0a:	cmp    al,0xd8
  40ed0c:	or     DWORD PTR [edx],0x97e16126
  40ed12:	xchg   esi,eax
  40ed13:	fmul   QWORD PTR [edx-0x11]
  40ed16:	xor    DWORD PTR [eax-0x64],esp
  40ed19:	xor    ah,BYTE PTR [ebx]
  40ed1b:	push   0x7c
  40ed1d:	adc    cl,dl
  40ed1f:	into   
  40ed20:	sub    esp,esi
  40ed22:	leave  
  40ed23:	cmp    DWORD PTR [edi+0x537f1017],esp
  40ed29:	xor    DWORD PTR [eax],edx
  40ed2b:	pop    esp
  40ed2c:	leave  
  40ed2d:	mov    BYTE PTR [ecx],bl
  40ed2f:	and    BYTE PTR [ecx-0x1e],cl
  40ed32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed33:	loopne 0x40ed6e
  40ed35:	xor    BYTE PTR [ebx-0x6a98f9af],ah
  40ed3b:	mov    ds:0xe48b44b9,eax
  40ed40:	or     esi,edx
  40ed42:	lods   eax,DWORD PTR ds:[esi]
  40ed43:	mov    ebp,0x77d1bcdf
  40ed48:	jecxz  0x40edbc
  40ed4a:	inc    edx
  40ed4b:	jae    0x40ed23
  40ed4d:	mov    ebx,0x1526ec62
  40ed52:	or     al,0xd8
  40ed54:	pop    ebp
  40ed55:	test   DWORD PTR [esp+eax*8+0x236ba021],ebp
  40ed5c:	lahf   
  40ed5d:	(bad)  
  40ed5e:	jnp    0x40ed66
  40ed60:	aad    0xf1
  40ed62:	and    ebx,edx
  40ed64:	popf   
  40ed65:	int    0x33
  40ed67:	(bad)  
  40ed68:	outs   dx,DWORD PTR ds:[esi]
  40ed69:	fnstenv [edi+0x31]
  40ed6c:	pop    edx
  40ed6d:	fist   WORD PTR [ecx+0x10483f78]
  40ed73:	sbb    eax,0x941a770f
  40ed78:	adc    esi,DWORD PTR [ecx-0x701b62ab]
  40ed7e:	std    
  40ed7f:	inc    edx
  40ed80:	scas   al,BYTE PTR es:[edi]
  40ed81:	in     al,0xbe
  40ed83:	fld    TBYTE PTR [ebp+0x0]
  40ed86:	shr    al,1
  40ed88:	mov    esp,0xf1d1d377
  40ed8d:	mov    DWORD PTR [esi],edi
  40ed8f:	test   ch,ah
  40ed91:	inc    edi
  40ed92:	sahf   
  40ed93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed94:	mov    WORD PTR [edx+0xa],cs
  40ed97:	sub    DWORD PTR [esi],edi
  40ed99:	mov    bl,0xfd
  40ed9b:	pop    esp
  40ed9c:	adc    BYTE PTR [ebx],0x77
  40ed9f:	lds    ebp,FWORD PTR [ebp+ecx*1-0x18a22e2a]
  40eda6:	(bad)
  40eda9:	lods   eax,DWORD PTR ds:[esi]
  40edaa:	aaa    
  40edab:	rcl    BYTE PTR [ebp+0x84fd24b],cl
  40edb1:	cmp    eax,0x46903b02
  40edb6:	adc    cl,BYTE PTR [ebp+0x64]
  40edb9:	in     al,0x8d
  40edbb:	and    DWORD PTR [eax+eiz*4+0x67],edx
  40edbf:	leave  
  40edc0:	pop    ebp
  40edc1:	dec    ebx
  40edc2:	rol    bl,0xa4
  40edc5:	ret    
  40edc6:	sub    bl,ch
  40edc8:	pop    ebp
  40edc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edca:	jecxz  0x40edd2
  40edcc:	or     dh,cl
  40edce:	push   edx
  40edcf:	sbb    bh,BYTE PTR [ecx]
  40edd1:	xor    ax,0xfe26
  40edd5:	jmp    0xb61d1be
  40edda:	call   0xd89564f2
  40eddf:	adc    DWORD PTR [eax-0x446cfd8e],esp
  40ede5:	fadd   st,st(3)
  40ede7:	sbb    eax,0x95111aff
  40edec:	stc    
  40eded:	add    DWORD PTR ds:0x2a27f91d,ebp
  40edf3:	mov    ebx,0xdffe185f
  40edf8:	xor    ecx,eax
  40edfa:	add    DWORD PTR [edi+0x54b3ddc],edx
  40ee00:	call   0x8aeb4852
  40ee05:	call   DWORD PTR [eax+0x4d4a650b]
  40ee0b:	out    dx,al
  40ee0c:	jne    0x40edfc
  40ee0e:	jg     0x40ee7d
  40ee10:	and    ah,dh
  40ee12:	mov    ds:0xeb62cb98,al
  40ee17:	mov    ebx,0xd7f6e77d
  40ee1c:	es add cl,ch
  40ee1f:	pop    eax
  40ee20:	cld    
  40ee21:	int3   
  40ee22:	add    DWORD PTR [edi+edi*1+0x3e],esi
  40ee26:	ins    BYTE PTR es:[edi],dx
  40ee27:	sub    al,0xa0
  40ee29:	test   BYTE PTR [eiz*2+0x1aaa13ab],bh
  40ee30:	test   BYTE PTR [esi-0x2456befb],bh
  40ee36:	sub    cl,ch
  40ee38:	inc    ebp
  40ee39:	push   0xffffffe0
  40ee3b:	cwde   
  40ee3c:	mov    ds:0x992a36d9,eax
  40ee41:	mul    esp
  40ee43:	cmc    
  40ee44:	daa    
  40ee45:	outs   dx,DWORD PTR ds:[esi]
  40ee46:	jmp    0x40ee60
  40ee48:	fxch   st(6)
  40ee4a:	mov    ebp,0xb43cdf0c
  40ee4f:	loopne 0x40ee01
  40ee51:	push   cs
  40ee52:	(bad)  
  40ee53:	mov    eax,ds:0x59527d4f
  40ee58:	sahf   
  40ee59:	xchg   esi,eax
  40ee5a:	adc    DWORD PTR [edx+0x52],0x26
  40ee5e:	cmp    ch,cl
  40ee60:	int    0x15
  40ee62:	aam    0x47
  40ee64:	popf   
  40ee65:	xchg   edx,eax
  40ee66:	sar    BYTE PTR [ebx-0x33],0xd3
  40ee6a:	cld    
  40ee6b:	xor    eax,0xc9265d72
  40ee70:	jae    0x40ee76
  40ee72:	ins    DWORD PTR es:[edi],dx
  40ee73:	mov    dh,0x32
  40ee75:	test   DWORD PTR [edi],ebx
  40ee77:	int3   
  40ee78:	in     eax,dx
  40ee79:	mov    DWORD PTR [edx],edi
  40ee7b:	pop    ebp
  40ee7c:	xchg   esi,eax
  40ee7d:	adc    BYTE PTR [edx],al
  40ee7f:	xchg   ecx,eax
  40ee80:	loope  0x40ee6c
  40ee82:	ret    
  40ee83:	jg     0x40ee5c
  40ee85:	mov    esp,0xacd60f66
  40ee8a:	sbb    BYTE PTR [esi],0xa9
  40ee8d:	xchg   BYTE PTR [ebp+0x66],bl
  40ee90:	or     BYTE PTR [ecx],dh
  40ee92:	out    0x9b,eax
  40ee94:	fist   DWORD PTR [ebx-0x47079315]
  40ee9a:	outs   dx,BYTE PTR ds:[si]
  40ee9c:	jae    0x40ee2e
  40ee9e:	xor    al,0xbb
  40eea0:	neg    DWORD PTR [ecx+0x5b]
  40eea3:	or     DWORD PTR [ecx-0x74],0xffffffbe
  40eea7:	sbb    DWORD PTR [esi+0x7a],ecx
  40eeaa:	cmp    BYTE PTR [ecx],al
  40eeac:	enter  0x7528,0xee
  40eeb0:	shr    esi,cl
  40eeb2:	jmp    0x7df6:0x6c19e338
  40eeb9:	mov    cl,0xc5
  40eebb:	or     al,0xad
  40eebd:	inc    edx
  40eebe:	push   edx
  40eebf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eec0:	in     al,dx
  40eec1:	in     eax,0x7c
  40eec3:	div    BYTE PTR [eax]
  40eec5:	cmp    al,0xf3
  40eec7:	(bad)  
  40eec8:	sbb    eax,DWORD PTR [eax+0x4b]
  40eecb:	scas   al,BYTE PTR es:[edi]
  40eecc:	cld    
  40eecd:	stos   BYTE PTR es:[edi],al
  40eece:	lea    ecx,[esi]
  40eed0:	retf   
  40eed1:	daa    
  40eed2:	add    al,0x21
  40eed4:	lea    edx,[ebx]
  40eed6:	sti    
  40eed7:	jmp    0x40eeea
  40eed9:	fild   QWORD PTR [edi]
  40eedb:	sub    ah,bh
  40eedd:	retf   0xb69b
  40eee0:	(bad)  
  40eee1:	in     eax,0x44
  40eee3:	inc    ecx
  40eee4:	adc    al,0x2e
  40eee6:	scas   al,BYTE PTR es:[edi]
  40eee7:	retf   
  40eee8:	(bad)  
  40eee9:	aaa    
  40eeea:	out    0xff,al
  40eeec:	sbb    eax,0x6970d4c8
  40eef1:	repnz add eax,0x1b5d69de
  40eef7:	dec    ebp
  40eef8:	inc    ebx
  40eef9:	aas    
  40eefa:	push   ecx
  40eefb:	xchg   edi,eax
  40eefc:	fwait
  40eefd:	sbb    esi,DWORD PTR [ebx+0x52103803]
  40ef03:	sbb    BYTE PTR [edi],ah
  40ef05:	push   es
  40ef06:	inc    ebx
  40ef07:	adc    ecx,ebx
  40ef09:	mov    bl,0x3
  40ef0b:	mov    eax,DWORD PTR [edx]
  40ef0d:	dec    edi
  40ef0e:	jp     0x40ef39
  40ef10:	dec    ebp
  40ef11:	mov    al,ds:0x87108af1
  40ef16:	cmp    bl,BYTE PTR [eax+0x70bd0370]
  40ef1c:	scas   eax,DWORD PTR es:[edi]
  40ef1d:	xchg   esp,eax
  40ef1e:	retf   0x9df4
  40ef21:	lahf   
  40ef22:	shl    BYTE PTR [eax-0x2],0xf0
  40ef26:	jno    0x40ef2e
  40ef28:	cs sbb al,0xe8
  40ef2b:	imul   edi,DWORD PTR [ebp+0x36],0x3fe02bf4
  40ef32:	pusha  
  40ef33:	int    0x75
  40ef35:	or     ebx,ebx
  40ef37:	fisubr WORD PTR [edi+0x7cea5342]
  40ef3d:	jae    0x40ef2c
  40ef3f:	lods   eax,DWORD PTR ds:[esi]
  40ef40:	call   0x9cbf:0xb52c9de0
  40ef47:	push   ebp
  40ef48:	ret    
  40ef49:	or     al,0xa3
  40ef4b:	inc    eax
  40ef4c:	add    edi,eax
  40ef4e:	xor    DWORD PTR [ebx],ebp
  40ef50:	adc    ch,BYTE PTR [eax-0x36cf55b5]
  40ef56:	add    cl,BYTE PTR [ecx+0x54]
  40ef59:	bound  ebx,QWORD PTR [edi+0x45]
  40ef5c:	js     0x40eefd
  40ef5e:	aaa    
  40ef5f:	rol    BYTE PTR [esi-0x3964d019],1
  40ef65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef66:	xor    dl,ah
  40ef68:	push   0xffffffab
  40ef6a:	cwde   
  40ef6b:	xchg   esi,ecx
  40ef6d:	inc    esp
  40ef6e:	pop    ecx
  40ef6f:	pop    ebx
  40ef70:	daa    
  40ef71:	cwde   
  40ef72:	sub    al,0x9c
  40ef74:	xchg   ecx,eax
  40ef75:	push   esp
  40ef76:	jle    0x40efe5
  40ef78:	push   cs
  40ef79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef7a:	inc    ebp
  40ef7b:	test   DWORD PTR [edx-0x50f194a3],0x3be72adb
  40ef85:	xor    al,0xb9
  40ef87:	xchg   edx,eax
  40ef88:	mov    bh,0x5d
  40ef8a:	sti    
  40ef8b:	sub    al,0x4a
  40ef8d:	add    dl,BYTE PTR [bx]
  40ef90:	dec    esp
  40ef91:	test   al,0xb2
  40ef93:	xlat   BYTE PTR ds:[ebx]
  40ef94:	gs xor al,0x80
  40ef97:	dec    ebp
  40ef98:	enter  0xf4d9,0xff
  40ef9c:	or     al,0x31
  40ef9e:	(bad)  
  40ef9f:	das    
  40efa0:	scas   al,BYTE PTR es:[edi]
  40efa1:	std    
  40efa2:	retf   
  40efa3:	mov    cl,0xe9
  40efa5:	paddd  mm0,QWORD PTR [ecx+0x1d]
  40efa9:	stc    
  40efaa:	clc    
  40efab:	and    BYTE PTR [edx],bl
  40efad:	push   ecx
  40efae:	jbe    0x40eff1
  40efb0:	mov    eax,0x111ca06d
  40efb5:	gs les ebp,FWORD PTR cs:[ecx-0x648706cb]
  40efbd:	test   BYTE PTR [esi],0x8d
  40efc0:	inc    esi
  40efc1:	loopne 0x40ef8d
  40efc3:	sbb    eax,0xa7ff8ac6
  40efc8:	mov    ebx,0xa079759f
  40efcd:	ins    BYTE PTR es:[edi],dx
  40efce:	aad    0xd2
  40efd0:	jge    0x40ef64
  40efd2:	or     al,0xcb
  40efd4:	es dec esp
  40efd6:	enter  0x3e6,0x3b
  40efda:	sahf   
  40efdb:	imul   esi,DWORD PTR es:[edx-0x60],0xffffffa6
  40efe0:	clc    
  40efe1:	dec    eax
  40efe2:	adc    eax,0xae16d683
  40efe7:	movzx  esi,WORD PTR [eax]
  40efea:	lds    ebp,FWORD PTR [eax-0x5c6e986e]
  40eff0:	pop    esp
  40eff1:	mov    esp,0x8c294c1b
  40eff6:	jmp    0x40efb8
  40eff8:	rcl    DWORD PTR [eax+0x67],1
  40effb:	push   eax
  40effc:	cdq    
  40effd:	mov    ebp,0xad3a27c7
  40f002:	add    al,0xd8
  40f004:	mov    edx,0xcf9cf35f
  40f009:	(bad)  
  40f00b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f00c:	dec    ebx
  40f00d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f00e:	jle    0x40efbe
  40f010:	cmp    bh,dh
  40f012:	adc    ebx,edx
  40f014:	(bad)  
  40f015:	(bad)  
  40f016:	call   DWORD PTR ds:0x2e8fe167
  40f01c:	int    0x1d
  40f01e:	mov    al,ds:0x4382e1f5
  40f023:	(bad)  
  40f024:	sti    
  40f025:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f026:	mov    cl,0x28
  40f028:	sbb    bl,BYTE PTR [ecx+0x75e30c7f]
  40f02e:	add    eax,0xbc93d839
  40f033:	sbb    eax,0x3077a36e
  40f038:	cmp    al,0xd4
  40f03a:	mov    bh,0x2d
  40f03c:	mov    ch,0x9b
  40f03e:	and    ah,BYTE PTR [esi-0x4e]
  40f041:	jmp    0x40f00e
  40f043:	lods   eax,DWORD PTR ds:[esi]
  40f044:	and    al,0xbf
  40f046:	dec    ecx
  40f047:	ret    0x47c9
  40f04a:	sbb    al,0x5
  40f04c:	loopne 0x40f00b
  40f04e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f04f:	int3   
  40f050:	adc    ebp,esp
  40f052:	pop    es
  40f053:	ret    
  40f054:	and    esp,DWORD PTR [esi+0x2c]
  40f057:	jbe    0x40f024
  40f059:	pop    edx
  40f05a:	mov    ch,0x7f
  40f05c:	push   0x16
  40f05e:	cs mov bl,0xb
  40f061:	xchg   ebx,eax
  40f062:	lods   al,BYTE PTR ds:[esi]
  40f063:	mov    eax,ds:0xe948c1cc
  40f068:	push   ebp
  40f069:	cmp    BYTE PTR [edx+edx*4],cl
  40f06c:	jmp    0x40f010
  40f06e:	mov    edi,0xb94cf9b5
  40f073:	mov    ds:0xab9e3998,al
  40f078:	pop    edi
  40f079:	mov    esp,0x66556479
  40f07e:	xchg   ebx,eax
  40f07f:	cmp    ax,WORD PTR ds:0x5761524f
  40f086:	push   eax
  40f087:	sbb    BYTE PTR [ecx-0x2026a241],bl
  40f08d:	cmp    esp,eax
  40f08f:	stos   BYTE PTR es:[edi],al
  40f090:	mov    al,ds:0x7ed02335
  40f095:	idiv   DWORD PTR [ebx]
  40f097:	mov    dl,0x92
  40f099:	adc    eax,0x665e8924
  40f09e:	add    bl,BYTE PTR [eax+0xd]
  40f0a1:	pop    edi
  40f0a2:	je     0x40f056
  40f0a4:	inc    ebp
  40f0a5:	pop    esp
  40f0a6:	mov    edi,0xd1371661
  40f0ab:	imul   esp
  40f0ad:	hlt    
  40f0ae:	test   DWORD PTR [edx+ebp*1],eax
  40f0b1:	pop    es
  40f0b2:	sbb    BYTE PTR [ebx-0x1e],ah
  40f0b5:	xchg   esp,eax
  40f0b6:	lahf   
  40f0b7:	ins    DWORD PTR es:[edi],dx
  40f0b8:	mov    al,BYTE PTR [esi+eax*8+0x34e6467c]
  40f0bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0c0:	cs (bad) 
  40f0c2:	(bad)  
  40f0c4:	pop    edi
  40f0c5:	add    BYTE PTR [edi+0x17f6e93f],0x4
  40f0cc:	in     eax,0x57
  40f0ce:	repnz imul esp,eax,0x4682ceff
  40f0d5:	mov    ah,BYTE PTR [esi+edx*4]
  40f0d8:	mov    bl,0x7e
  40f0da:	out    dx,eax
  40f0db:	out    0xc3,al
  40f0dd:	ret    0xa942
  40f0e0:	lock cli 
  40f0e2:	dec    eax
  40f0e3:	inc    edi
  40f0e4:	outs   dx,BYTE PTR ds:[esi]
  40f0e5:	mov    ebp,0x274dd8af
  40f0ea:	pop    ebp
  40f0eb:	xchg   edi,eax
  40f0ec:	in     eax,dx
  40f0ed:	fist   WORD PTR [edx+eiz*1]
  40f0f0:	int3   
  40f0f1:	es aas 
  40f0f3:	imul   esp,DWORD PTR [edi-0x6fefa77d],0xca519a05
  40f0fd:	mov    ebx,0xc6fe6011
  40f102:	mov    ch,al
  40f104:	loope  0x40f0e7
  40f106:	aas    
  40f107:	popa   
  40f108:	mov    dh,BYTE PTR [eax-0x6a]
  40f10b:	mov    eax,DWORD PTR [eax]
  40f10d:	ja     0x40f173
  40f10f:	mov    esp,0x6ea534d0
  40f114:	sbb    ebp,DWORD PTR [ecx+eiz*1-0xd4eb6d1]
  40f11b:	sahf   
  40f11c:	xchg   esp,eax
  40f11d:	ins    DWORD PTR es:[edi],dx
  40f11e:	sbb    eax,0x5ed2356a
  40f123:	mov    ebp,DWORD PTR [esi+0xf]
  40f126:	and    al,0xac
  40f128:	les    edi,FWORD PTR [ecx-0x45938c59]
  40f12e:	rcl    eax,1
  40f130:	push   ecx
  40f131:	in     eax,0x5a
  40f133:	bound  esi,QWORD PTR [ecx]
  40f135:	sbb    al,0x28
  40f137:	call   0x5e779723
  40f13c:	dec    edx
  40f13d:	pop    es
  40f13e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f13f:	inc    ebx
  40f140:	test   DWORD PTR [edi-0x7ae44201],edi
  40f146:	pop    ebx
  40f147:	jae    0x40f10a
  40f149:	sub    DWORD PTR [edx+edi*2],edi
  40f14c:	(bad)  
  40f14d:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40f14f:	lods   eax,DWORD PTR ds:[esi]
  40f150:	pushf  
  40f151:	not    DWORD PTR [edi-0x5670dfd9]
  40f157:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f158:	mov    ebx,0xb19eb780
  40f15d:	cmp    al,0x82
  40f15f:	sbb    DWORD PTR ds:0xb5c40bb5,ebx
  40f165:	pop    edx
  40f166:	ins    BYTE PTR es:[edi],dx
  40f167:	je     0x40f186
  40f169:	scas   al,BYTE PTR es:[edi]
  40f16a:	popf   
  40f16b:	lods   al,BYTE PTR ds:[esi]
  40f16c:	imul   ecx,DWORD PTR [edi-0x37ced4a5],0xb81f538d
  40f176:	cmp    dl,bl
  40f178:	sub    dh,BYTE PTR [edi-0x6c]
  40f17b:	and    ecx,DWORD PTR [eax+ebx*2-0x7fc61063]
  40f182:	ins    DWORD PTR es:[edi],dx
  40f183:	push   ds
  40f184:	adc    dl,ah
  40f186:	and    ebx,ebp
  40f188:	mov    ebx,0xaa93f7c
  40f18d:	in     eax,dx
  40f18e:	retf   
  40f18f:	xchg   esp,eax
  40f190:	mov    DWORD PTR [ecx],esi
  40f192:	sahf   
  40f193:	adc    ebx,DWORD PTR [edi+0x612baaa]
  40f199:	out    0x31,al
  40f19b:	js     0x40f206
  40f19d:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f19f:	xor    BYTE PTR [ecx],bl
  40f1a1:	je     0x40f13b
  40f1a3:	xor    eax,0x8f34ebc9
  40f1a8:	stos   BYTE PTR es:[edi],al
  40f1a9:	jae    0x40f1ce
  40f1ab:	fldcw  WORD PTR [ecx+esi*1+0x1abda9c8]
  40f1b2:	inc    edx
  40f1b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1b4:	ror    BYTE PTR ds:0x22ab14cb,1
  40f1ba:	inc    edi
  40f1bb:	fild   WORD PTR [ecx+0x576fd155]
  40f1c1:	xchg   edx,eax
  40f1c2:	pop    esp
  40f1c3:	stc    
  40f1c4:	loop   0x40f167
  40f1c6:	jp     0x40f170
  40f1c8:	repz jle 0x40f19b
  40f1cb:	retf   0x98b8
  40f1ce:	xor    eax,0x7a932d5d
  40f1d3:	mov    WORD PTR [edx],?
  40f1d5:	cmp    esi,DWORD PTR [ebp+0x66]
  40f1d8:	out    0x57,al
  40f1da:	scas   al,BYTE PTR es:[edi]
  40f1db:	loope  0x40f21a
  40f1dd:	es mov al,bl
  40f1e0:	fadd   st,st(0)
  40f1e2:	pop    esi
  40f1e3:	pcmpeqw mm4,mm4
  40f1e6:	shr    edx,cl
  40f1e8:	sub    bl,BYTE PTR [esi-0x1cfe2333]
  40f1ee:	mov    ds:0x89201332,al
  40f1f3:	aaa    
  40f1f4:	retf   
  40f1f5:	sahf   
  40f1f6:	arpl   WORD PTR [ebp-0x5c10c323],si
  40f1fc:	xor    BYTE PTR [edi+0x760d2abe],dh
  40f202:	adc    al,BYTE PTR [edx]
  40f204:	hlt    
  40f205:	xchg   ecx,eax
  40f206:	mov    BYTE PTR [ebx-0xd0e8491],al
  40f20c:	pop    ss
  40f20d:	(bad)  
  40f20e:	cmp    eax,DWORD PTR [esi+0x13767b28]
  40f214:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f215:	stc    
  40f216:	jl     0x40f287
  40f218:	and    DWORD PTR [si+0x2aa0],ebp
  40f21d:	jno    0x40f1bb
  40f21f:	inc    eax
  40f220:	pusha  
  40f221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f222:	push   0xa2052407
  40f227:	leave  
  40f228:	pop    ds
  40f229:	fstp   QWORD PTR [edi+esi*1+0x3447426e]
  40f230:	push   es
  40f231:	aas    
  40f232:	adc    esp,DWORD PTR [esi+edi*1]
  40f235:	mov    DWORD PTR [ebx],0xb2dcfeb7
  40f23b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f23c:	add    DWORD PTR [edx-0x53],edi
  40f23f:	jne    0x40f238
  40f241:	and    eax,0xebddd31c
  40f246:	in     al,0x42
  40f248:	jo     0x40f297
  40f24a:	retf   
  40f24b:	push   ebx
  40f24c:	sbb    eax,DWORD PTR [ecx]
  40f24e:	pop    ecx
  40f24f:	jmp    0x73:0xe743423d
  40f256:	lds    esi,FWORD PTR [ecx]
  40f258:	(bad)  
  40f259:	rcr    DWORD PTR [ebp-0x35],1
  40f25c:	scas   eax,DWORD PTR es:[edi]
  40f25d:	dec    ebp
  40f25e:	jno    0x40f2d7
  40f260:	jb     0x40f285
  40f262:	aaa    
  40f263:	jg     0x40f21c
  40f265:	(bad)  
  40f266:	cli    
  40f267:	std    
  40f268:	or     al,0x13
  40f26a:	repz push esi
  40f26c:	fild   QWORD PTR [ebx+ebx*8+0x21]
  40f270:	push   0xfffffff2
  40f272:	gs jmp 0x40f2cf
  40f275:	(bad)  
  40f276:	push   ss
  40f277:	jmp    0x446a:0x1da51bd
  40f27e:	dec    eax
  40f27f:	jns    0x40f2a1
  40f281:	cs loope 0x40f266
  40f284:	and    edx,DWORD PTR [ebx-0x7a]
  40f287:	(bad)  
  40f288:	cmc    
  40f289:	std    
  40f28a:	in     al,dx
  40f28b:	ds ds mov cl,0xa0
  40f28f:	jmp    0x40f2ba
  40f291:	or     BYTE PTR [esi+0x425b30d7],dl
  40f297:	mov    edi,0x3d7ad76b
  40f29c:	pop    eax
  40f29d:	pop    esp
  40f29e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f29f:	fs icebp 
  40f2a1:	sbb    al,0xfe
  40f2a3:	xchg   edi,eax
  40f2a4:	or     dh,BYTE PTR [ecx-0x1ed5cef9]
  40f2aa:	fucomip st,st(3)
  40f2ac:	cmc    
  40f2ad:	stc    
  40f2ae:	push   0x52e0a1b9
  40f2b3:	cmovnp esi,ebx
  40f2b6:	jecxz  0x40f2df
  40f2b8:	xchg   ecx,eax
  40f2b9:	or     eax,0x7efb842d
  40f2be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2bf:	(bad)  
  40f2c0:	enter  0x2b34,0x7a
  40f2c4:	xchg   edi,eax
  40f2c5:	mov    bh,al
  40f2c7:	pop    edx
  40f2c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2c9:	jb     0x40f305
  40f2cb:	jb     0x40f342
  40f2cd:	imul   ebx,DWORD PTR [ecx-0x32],0xffffffba
  40f2d1:	or     eax,0x13a77221
  40f2d6:	dec    esi
  40f2d7:	mov    bl,0x83
  40f2d9:	popa   
  40f2da:	and    bl,BYTE PTR [eax-0x6e90e32c]
  40f2e0:	fs scas al,BYTE PTR es:[edi]
  40f2e2:	jnp    0x40f2a7
  40f2e4:	push   ecx
  40f2e5:	mov    dh,0x12
  40f2e7:	and    ah,al
  40f2e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2ea:	or     esi,esp
  40f2ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2ed:	sub    dh,BYTE PTR [edx-0x15]
  40f2f0:	les    ecx,FWORD PTR [esi]
  40f2f2:	push   ds
  40f2f3:	scas   eax,DWORD PTR es:[edi]
  40f2f4:	hlt    
  40f2f5:	dec    esi
  40f2f6:	xchg   esp,eax
  40f2f7:	jge    0x40f290
  40f2f9:	out    dx,eax
  40f2fa:	and    eax,eax
  40f2fc:	int3   
  40f2fd:	jb     0x40f314
  40f2ff:	shl    DWORD PTR [esi],0x1a
  40f302:	jle    0x40f301
  40f304:	pop    esi
  40f305:	clc    
  40f306:	jecxz  0x40f305
  40f308:	xor    dl,BYTE PTR [eax]
  40f30a:	xor    edi,edx
  40f30c:	icebp  
  40f30d:	mov    edi,esi
  40f30f:	adc    eax,0xca2e3a55
  40f314:	xor    DWORD PTR [ebx+0x35a6119b],ebp
  40f31a:	fcomp  QWORD PTR [edi]
  40f31c:	cdq    
  40f31d:	(bad)  ds:0x42eda677
  40f323:	call   0xd0dd541c
  40f328:	mov    esi,0xf1241ecf
  40f32d:	adc    al,0x72
  40f32f:	xor    cl,BYTE PTR [edi+ecx*2]
  40f332:	test   eax,0xdcb157e8
  40f337:	ret    0xe1f4
  40f33a:	imul   eax,DWORD PTR fs:[eax+0x4],0x727155ee
  40f342:	cdq    
  40f343:	cmp    DWORD PTR [edx-0x79810fc0],0x8091cdac
  40f34d:	or     ch,BYTE PTR [eax-0x4f]
  40f350:	jnp    0x40f323
  40f352:	popf   
  40f353:	les    ecx,FWORD PTR [ecx+eiz*2-0x607d0cfd]
  40f35a:	dec    esp
  40f35b:	xchg   ebp,eax
  40f35c:	push   edi
  40f35d:	daa    
  40f35e:	mov    edi,0x6bab685f
  40f363:	popa   
  40f364:	xchg   esi,eax
  40f365:	jae    0x40f38b
  40f367:	pusha  
  40f368:	jae    0x40f3d8
  40f36a:	sub    eax,0x35fe120b
  40f36f:	into   
  40f370:	jmp    0x40f3d4
  40f372:	int3   
  40f373:	cmp    eax,DWORD PTR [ebp+0x5ebb282e]
  40f379:	xchg   edx,eax
  40f37a:	repz sub bl,dl
  40f37d:	cmp    dl,bl
  40f37f:	(bad)  
  40f381:	(bad)  
  40f382:	das    
  40f383:	repnz dec ecx
  40f385:	jmp    DWORD PTR [edx+edi*2-0x59d943bb]
  40f38c:	jae    0x40f316
  40f38e:	outs   dx,BYTE PTR ds:[esi]
  40f38f:	cwde   
  40f390:	retf   0xdcab
  40f393:	ret    0xa97c
  40f396:	jp     0x40f40b
  40f398:	rol    bl,cl
  40f39a:	jl     0x40f385
  40f39c:	rcr    DWORD PTR [edx+0x28e76166],0xe8
  40f3a3:	add    DWORD PTR [edx+0x94a4ac3],ecx
  40f3a9:	cmc    
  40f3aa:	enter  0x4699,0x1a
  40f3ae:	or     cl,ch
  40f3b0:	in     al,0x8d
  40f3b2:	fdivp  st(4),st
  40f3b4:	or     al,0xb4
  40f3b6:	daa    
  40f3b7:	push   edi
  40f3b8:	cli    
  40f3b9:	aas    
  40f3ba:	xchg   ecx,eax
  40f3bb:	loope  0x40f3c4
  40f3bd:	dec    edi
  40f3be:	sub    al,0xca
  40f3c0:	mov    ds:0xd2f6ef5c,eax
  40f3c5:	cmp    eax,0xbc2618fc
  40f3ca:	cmp    eax,0x29fcd2a8
  40f3cf:	add    ecx,DWORD PTR [eax+0x17]
  40f3d2:	icebp  
  40f3d3:	jle    0x40f356
  40f3d5:	inc    esi
  40f3d6:	in     al,0xd
  40f3d8:	cmp    BYTE PTR [edx+0x59],cl
  40f3db:	in     eax,dx
  40f3dc:	data16 jbe 0x40f43b
  40f3df:	mov    esp,0x9f62e57f
  40f3e4:	jae    0x40f396
  40f3e6:	aas    
  40f3e7:	(bad)  
  40f3e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3e9:	mov    dl,0x4
  40f3eb:	add    esp,DWORD PTR [edx]
  40f3ed:	retf   
  40f3ee:	call   0xa86c95b2
  40f3f3:	cmp    eax,esi
  40f3f5:	push   ecx
  40f3f6:	push   0xe78ec1b9
  40f3fb:	dec    esp
  40f3fc:	mov    al,ds:0xe0dfe332
  40f401:	push   ecx
  40f402:	hlt    
  40f403:	sahf   
  40f404:	mov    DWORD PTR [ebx],esi
  40f406:	cmp    edx,DWORD PTR [ebx]
  40f408:	pusha  
  40f409:	pop    eax
  40f40a:	in     al,0x6d
  40f40c:	mov    al,ds:0xf33ef135
  40f411:	in     al,dx
  40f412:	(bad)  
  40f414:	and    DWORD PTR ds:0xbf6dc8ce,0xc577f493
  40f41e:	rol    BYTE PTR [edi-0x776c6e38],0xd2
  40f425:	scas   al,BYTE PTR es:[edi]
  40f426:	call   0xf382:0x9dcce453
  40f42d:	pusha  
  40f42e:	add    BYTE PTR [eax+edi*8-0x7f],0x24
  40f433:	pop    ss
  40f434:	inc    eax
  40f435:	inc    ebp
  40f436:	push   eax
  40f437:	jb     0x40f45a
  40f439:	fcom   QWORD PTR [ecx+0x614041ea]
  40f43f:	shr    BYTE PTR [edx-0x27ead3f4],1
  40f445:	xor    ebx,ebp
  40f447:	retf   0x7de8
  40f44a:	inc    ecx
  40f44b:	sub    BYTE PTR [eax+eax*2+0x25],cl
  40f44f:	into   
  40f450:	scas   eax,DWORD PTR es:[edi]
  40f451:	clc    
  40f452:	jle    0x40f411
  40f454:	push   edi
  40f455:	xchg   ebp,eax
  40f456:	sub    ebp,ebx
  40f458:	and    BYTE PTR [edi-0x4cb97603],ch
  40f45e:	mov    cl,0xd3
  40f460:	enter  0x838f,0x8d
  40f464:	and    al,0x93
  40f466:	les    ecx,FWORD PTR [ecx+ebx*2-0x6b]
  40f46a:	jb     0x40f48b
  40f46c:	loope  0x40f46d
  40f46e:	pop    ebx
  40f46f:	push   ebx
  40f470:	mov    eax,0xee4e8d4f
  40f475:	ret    0x2272
  40f478:	and    ebx,ebx
  40f47a:	dec    ebp
  40f47b:	and    bl,BYTE PTR [esi+0x66d182e8]
  40f481:	imul   ebp,ecx,0x582df4ce
  40f487:	or     eax,0x2383dc94
  40f48c:	into   
  40f48d:	jo     0x40f413
  40f48f:	int    0x40
  40f491:	push   es
  40f492:	mov    ch,0xae
  40f494:	bound  esp,QWORD PTR cs:[edi+ebp*4-0x500e5272]
  40f49c:	call   0x441d:0x87e474e6
  40f4a3:	mov    es,WORD PTR [eax+0x48d6afca]
  40f4a9:	or     ebx,ecx
  40f4ab:	cmp    al,0xa7
  40f4ad:	out    0x6e,eax
  40f4af:	pop    edx
  40f4b0:	xchg   ebx,eax
  40f4b1:	cmp    DWORD PTR [ebx],esi
  40f4b3:	call   0xf285b23c
  40f4b8:	mov    eax,ds:0xbce546aa
  40f4bd:	push   es
  40f4be:	std    
  40f4bf:	inc    ecx
  40f4c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4c1:	scas   eax,DWORD PTR es:[edi]
  40f4c2:	sbb    edx,edi
  40f4c4:	shl    BYTE PTR [eax],1
  40f4c6:	cmp    DWORD PTR [edi-0x32],edx
  40f4c9:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40f4cb:	fbstp  TBYTE PTR [edi+0x3f7dbc14]
  40f4d1:	mov    eax,ds:0xbc032da7
  40f4d6:	sbb    ebx,ecx
  40f4d8:	mov    bh,0x8d
  40f4da:	jle    0x40f50d
  40f4dc:	pushf  
  40f4dd:	mov    esp,0x743d0951
  40f4e2:	loope  0x40f4a7
  40f4e4:	cmp    dh,BYTE PTR [ebx]
  40f4e6:	mov    eax,ds:0xd2b319ff
  40f4eb:	dec    ecx
  40f4ec:	(bad)  
  40f4ed:	fcom   st(3)
  40f4ef:	sbb    al,BYTE PTR [edx]
  40f4f1:	dec    edx
  40f4f2:	and    al,0xd
  40f4f4:	push   edx
  40f4f5:	pop    es
  40f4f6:	mov    edi,0xb9fcb4d5
  40f4fb:	mov    ebp,0xf4229222
  40f500:	push   0x6f
  40f502:	mov    cl,0xa5
  40f504:	push   ss
  40f505:	bound  ebx,QWORD PTR [edi]
  40f507:	imul   ebx,DWORD PTR [edx],0xffffffac
  40f50a:	lea    edx,[eax+0x76]
  40f50d:	fnstenv [ecx-0x46]
  40f510:	fmul   st,st(5)
  40f512:	and    al,0x81
  40f514:	cld    
  40f515:	out    0x14,eax
  40f517:	sub    BYTE PTR [esi+eax*1],0x97
  40f51b:	ror    DWORD PTR [edi],cl
  40f51d:	hlt    
  40f51e:	cmp    eax,0x954c4940
  40f523:	jecxz  0x40f503
  40f525:	adc    eax,0x1e982648
  40f52a:	pop    edx
  40f52b:	icebp  
  40f52c:	mov    esp,0x402e2688
  40f531:	or     dh,ah
  40f533:	lahf   
  40f534:	bnd call 0xf5b8c1e5
  40f53a:	xor    cl,dh
  40f53c:	mov    bl,0x13
  40f53e:	icebp  
  40f53f:	and    ecx,0x12835e02
  40f545:	aad    0x5d
  40f547:	or     ch,BYTE PTR [esp+ebx*1+0x42]
  40f54b:	(bad)  
  40f54d:	(bad)  
  40f54e:	(bad)  
  40f54f:	sar    BYTE PTR [eax+eax*8-0x73],cl
  40f553:	pushf  
  40f554:	imul   esp,ebx,0x70
  40f557:	lods   eax,DWORD PTR ds:[esi]
  40f558:	scas   eax,DWORD PTR es:[edi]
  40f559:	cmp    BYTE PTR [esi+0x61ea9086],dl
  40f55f:	dec    ebp
  40f560:	cmc    
  40f561:	jno    0x40f5a8
  40f563:	mov    ds:0x2b65ee8a,eax
  40f568:	jmp    DWORD PTR [ebx-0x2]
  40f56b:	and    esp,DWORD PTR [esi-0x70]
  40f56e:	pop    esi
  40f56f:	(bad)  
  40f571:	ja     0x40f5da
  40f573:	nop
  40f574:	and    eax,0xf6ca0bbe
  40f579:	pusha  
  40f57a:	fild   QWORD PTR [ebp-0x2b457c9f]
  40f580:	cmp    bh,bh
  40f582:	bound  esp,QWORD PTR [edx+eax*2]
  40f585:	sbb    al,0xe1
  40f587:	int    0x5f
  40f589:	shr    bl,0xf8
  40f58c:	xchg   esi,eax
  40f58d:	push   edx
  40f58e:	out    0xba,al
  40f590:	xchg   ebp,eax
  40f591:	call   DWORD PTR [edx+0x41fda322]
  40f597:	dec    edi
  40f599:	xchg   ebp,eax
  40f59a:	hlt    
  40f59b:	test   bl,bl
  40f59d:	in     al,0xfe
  40f59f:	push   es
  40f5a0:	pusha  
  40f5a1:	sub    dl,dl
  40f5a3:	cs jb  0x40f541
  40f5a6:	cli    
  40f5a7:	aas    
  40f5a8:	push   eax
  40f5a9:	not    BYTE PTR [eax+0x783035e7]
  40f5af:	xor    dh,0x93
  40f5b2:	adc    BYTE PTR [ebx*1+0x6ca19c11],ah
  40f5b9:	adc    cl,BYTE PTR [esi+0x125f85e5]
  40f5bf:	jmp    0x17b598df
  40f5c4:	in     al,0x8b
  40f5c6:	xchg   ebp,eax
  40f5c7:	jno    0x40f5b0
  40f5c9:	push   es
  40f5ca:	push   eax
  40f5cb:	mov    al,0x14
  40f5cd:	inc    edx
  40f5ce:	inc    ecx
  40f5cf:	xchg   ebp,eax
  40f5d0:	into   
  40f5d1:	test   al,0x81
  40f5d3:	pop    esp
  40f5d4:	and    DWORD PTR cs:[esp+ebx*2+0x7b],ebp
  40f5d9:	jb     0x40f566
  40f5db:	xchg   esp,eax
  40f5dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5dd:	jns    0x40f57a
  40f5df:	inc    ecx
  40f5e0:	cld    
  40f5e1:	push   es
  40f5e2:	jns    0x40f5af
  40f5e4:	sub    eax,0xef42acef
  40f5e9:	and    BYTE PTR [ebp+0x22],al
  40f5ec:	addr16 push ebp
  40f5ee:	and    DWORD PTR [ecx-0x45],ecx
  40f5f1:	int    0xde
  40f5f3:	xor    eax,0x16be3595
  40f5f8:	aad    0xc9
  40f5fa:	inc    esi
  40f5fb:	(bad)  
  40f5fc:	aas    
  40f5fd:	push   es
  40f5fe:	cmp    al,0xab
  40f600:	loop   0x40f637
  40f602:	dec    edx
  40f603:	add    DWORD PTR [eax],0xffffffc8
  40f606:	pop    ecx
  40f607:	(bad)  
  40f608:	popf   
  40f609:	xor    DWORD PTR [ebx-0x72],0x5b
  40f60d:	sub    al,dl
  40f60f:	xchg   BYTE PTR [edi-0x1e6d2aa9],bh
  40f615:	or     BYTE PTR [eax],dl
  40f617:	mov    edx,0x57d9e276
  40f61c:	mov    dh,0x4c
  40f61e:	fs jae 0x40f60e
  40f621:	dec    edi
  40f622:	enter  0xc7c5,0xfe
  40f626:	jecxz  0x40f601
  40f628:	add    esi,DWORD PTR [ebx-0x3b101e71]
  40f62e:	or     BYTE PTR cs:[edi+edi*8-0x64],dl
  40f633:	es jecxz 0x40f5e8
  40f636:	psrlw  mm3,0xb7
  40f63a:	and    ecx,DWORD PTR [ecx]
  40f63c:	fwait
  40f63d:	(bad)  
  40f63f:	fistp  DWORD PTR [edx+0x67]
  40f642:	jmp    0xe7b57a79
  40f647:	sbb    edx,DWORD PTR [esi+0x44938318]
  40f64d:	mov    bh,0x62
  40f64f:	add    eax,0x99f74979
  40f654:	push   esi
  40f655:	test   eax,0xf0af533b
  40f65a:	mov    eax,esi
  40f65c:	pop    ss
  40f65d:	nop
  40f65e:	dec    edx
  40f660:	ret    
  40f661:	sahf   
  40f662:	test   DWORD PTR [edi-0x23c2a67c],ecx
  40f668:	rcr    BYTE PTR [esi+0x24],0x9f
  40f66c:	xchg   DWORD PTR [eax-0x32],esi
  40f66f:	fiadd  DWORD PTR [ebx]
  40f671:	dec    eax
  40f672:	or     eax,0x832705f1
  40f677:	xchg   esp,eax
  40f678:	fidiv  WORD PTR [ecx-0x3a]
  40f67b:	mov    esp,0x31e7fdc9
  40f680:	adc    BYTE PTR [edx-0x6f07c71d],ah
  40f686:	inc    esi
  40f687:	mov    WORD PTR [ebx-0x30007086],es
  40f68d:	(bad)  
  40f68e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f68f:	push   ss
  40f690:	(bad)  
  40f691:	repz push eax
  40f693:	mov    ch,0x58
  40f695:	mov    esp,0xc4de6821
  40f69a:	ins    DWORD PTR es:[edi],dx
  40f69b:	or     DWORD PTR [ebx+0x6d],esp
  40f69e:	xlat   BYTE PTR ds:[ebx]
  40f69f:	xchg   edx,eax
  40f6a0:	jns    0x40f659
  40f6a2:	jmp    0xcc4a6fb0
  40f6a7:	inc    ebp
  40f6a8:	add    dl,BYTE PTR [ebx+0x7a0f591d]
  40f6ae:	enter  0x70a3,0xaf
  40f6b2:	pop    ecx
  40f6b3:	dec    esi
  40f6b4:	ja     0x40f71c
  40f6b6:	jl     0x40f6af
  40f6b8:	pop    ebp
  40f6b9:	sbb    eax,0x9845e4d3
  40f6be:	xor    al,0x4c
  40f6c0:	xor    eax,0x70637a9a
  40f6c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6c6:	dec    eax
  40f6c7:	push   ecx
  40f6c8:	push   edi
  40f6c9:	pusha  
  40f6ca:	je     0x40f663
  40f6cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6cd:	sub    ch,bl
  40f6cf:	mov    ch,0x2e
  40f6d1:	mov    al,ds:0xad9233fb
  40f6d6:	gs mov dl,0xeb
  40f6d9:	sub    al,0x4b
  40f6db:	aas    
  40f6dc:	mov    edx,0xe3a510bf
  40f6e1:	mov    eax,ds:0xe3a34672
  40f6e6:	ds dec ecx
  40f6e8:	xchg   ebp,eax
  40f6e9:	mov    dl,BYTE PTR [ebx-0x9]
  40f6ec:	add    al,0x14
  40f6ee:	or     eax,DWORD PTR [esi-0x7]
  40f6f1:	in     eax,dx
  40f6f2:	mov    ss,WORD PTR [edi]
  40f6f4:	pop    ebp
  40f6f5:	and    eax,0x15a9eb9b
  40f6fa:	int    0xd8
  40f6fc:	shl    BYTE PTR [edi],1
  40f6fe:	fst    DWORD PTR [edx+0x4a]
  40f701:	jmp    0x7c9:0xcefb2573
  40f708:	add    al,0x55
  40f70a:	jns    0x40f68d
  40f70c:	iret   
  40f70d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f70e:	xor    cl,bh
  40f710:	nop
  40f711:	mov    edx,DWORD PTR [edx]
  40f713:	cli    
  40f714:	dec    edx
  40f715:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f716:	mov    edi,0x5b188172
  40f71b:	out    dx,eax
  40f71c:	pop    ds
  40f71d:	sti    
  40f71e:	add    ch,BYTE PTR [ebx]
  40f720:	test   eax,0x8a18e141
  40f725:	sub    edi,ebp
  40f727:	in     eax,0xc
  40f729:	xchg   edx,eax
  40f72a:	or     al,0x8e
  40f72c:	jmp    0x40f6f5
  40f72e:	adc    eax,0x379d7996
  40f733:	fbld   TBYTE PTR [edx+ecx*2+0x3d]
  40f737:	arpl   WORD PTR fs:[ebx+eiz*8+0x1f],cx
  40f73c:	adc    al,0xad
  40f73e:	cmp    ebx,eax
  40f740:	popa   
  40f741:	dec    ecx
  40f742:	test   DWORD PTR [edi-0x2618c955],esi
  40f748:	adc    al,ch
  40f74a:	stos   DWORD PTR es:[edi],eax
  40f74b:	push   0xc27508fa
  40f750:	mov    ch,0x57
  40f752:	imul   edi,DWORD PTR [edi],0x64
  40f755:	repnz lahf 
  40f757:	cmp    eax,0x38bd5240
  40f75c:	es xchg esi,eax
  40f75e:	mov    BYTE PTR [esi],0x13
  40f761:	mov    ds:0x67e27bc2,eax
  40f766:	xchg   ebx,eax
  40f767:	retf   0x2dca
  40f76a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f76b:	cdq    
  40f76c:	or     DWORD PTR [edi],eax
  40f76e:	clc    
  40f76f:	jo     0x40f70f
  40f771:	or     esi,0xac00f5e2
  40f777:	outs   dx,DWORD PTR ds:[esi]
  40f778:	dec    esi
  40f779:	add    al,0x4e
  40f77b:	cli    
  40f77c:	out    0x65,eax
  40f77e:	mov    esi,0xa4c37455
  40f783:	repz pop ebp
  40f785:	dec    ebx
  40f786:	ror    BYTE PTR ds:0x760fcfae,0xa1
  40f78d:	dec    ecx
  40f78e:	sub    eax,0x51ddc2ab
  40f793:	rcl    DWORD PTR [edx],1
  40f795:	xor    al,dh
  40f797:	xchg   esp,eax
  40f798:	mov    esp,0x8f3da43d
  40f79d:	xor    ecx,esp
  40f79f:	inc    esp
  40f7a0:	mov    eax,0x2b94926f
  40f7a5:	dec    eax
  40f7a6:	pop    ebp
  40f7a7:	fs mov ch,0xeb
  40f7aa:	inc    esp
  40f7ab:	shl    BYTE PTR [edi-0x2a],cl
  40f7ae:	sub    DWORD PTR ds:[edx+edi*1],edx
  40f7b2:	ret    0x6893
  40f7b5:	mov    gs,ebp
  40f7b7:	sub    eax,0x47686248
  40f7bc:	mov    ecx,0xc54eeef5
  40f7c1:	cmp    bl,BYTE PTR [esi+edx*8]
  40f7c4:	rol    DWORD PTR [edx+0x22],1
  40f7c7:	jmp    0xcbb2fbcf
  40f7cc:	movaps XMMWORD PTR [eax+0x53123f47],xmm5
  40f7d3:	sub    dl,BYTE PTR ds:0x9b9c0442
  40f7d9:	stos   BYTE PTR es:[edi],al
  40f7da:	icebp  
  40f7db:	xchg   ecx,eax
  40f7dc:	(bad)  
  40f7dd:	out    dx,eax
  40f7de:	xchg   ebx,eax
  40f7df:	xchg   DWORD PTR [eax+0x3d16c888],edx
  40f7e5:	data16 or bh,BYTE PTR [eax+0x64]
  40f7e9:	xor    BYTE PTR [ebx+0x29],dh
  40f7ec:	lds    ecx,FWORD PTR [ebx]
  40f7ee:	mov    al,0xad
  40f7f0:	jp     0x40f7e9
  40f7f2:	xor    edx,0x9c7809fc
  40f7f8:	jo     0x40f85b
  40f7fa:	xchg   edi,eax
  40f7fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7fc:	jmp    0x40f7b1
  40f7fe:	mov    ds:0x8542bd7d,eax
  40f803:	bound  edx,QWORD PTR [edx+0x37ed29a6]
  40f809:	scas   al,BYTE PTR es:[edi]
  40f80a:	add    eax,0x32cee83a
  40f80f:	call   0xfb873e64
  40f814:	clc    
  40f815:	in     al,dx
  40f816:	push   ebp
  40f817:	mov    DWORD PTR [edi-0x52428637],ebx
  40f81d:	lds    ebx,FWORD PTR [edx-0x2e]
  40f820:	and    BYTE PTR [ebp-0x40],ch
  40f823:	inc    esi
  40f824:	pop    ecx
  40f825:	inc    eax
  40f826:	mov    bl,0x7e
  40f828:	jecxz  0x40f7f5
  40f82a:	inc    esp
  40f82b:	and    DWORD PTR [ebp-0x18519f26],esi
  40f831:	jno    0x40f825
  40f833:	lods   eax,DWORD PTR ds:[esi]
  40f834:	es add eax,0x16fb2ba4
  40f83a:	jl     0x40f7c3
  40f83c:	cli    
  40f83d:	cli    
  40f83e:	out    dx,al
  40f83f:	ja     0x40f841
  40f841:	or     edx,eax
  40f843:	inc    ebp
  40f844:	retf   
  40f845:	(bad)  
  40f846:	cmp    DWORD PTR [edi],ebp
  40f848:	out    dx,eax
  40f849:	mov    ebx,0xe1176e6d
  40f84e:	ds jp  0x40f84b
  40f851:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f852:	(bad)  
  40f853:	retf   0x4891
  40f856:	xchg   ecx,eax
  40f857:	dec    ecx
  40f858:	xchg   ecx,edx
  40f85a:	dec    edx
  40f85b:	push   edx
  40f85c:	mov    edx,ebx
  40f85e:	pop    ebx
  40f85f:	dec    ebx
  40f860:	call   DWORD PTR [ebx]
  40f862:	cmp    DWORD PTR [ebp+0x10],esi
  40f865:	je     0x40f884
  40f86b:	xchg   edx,eax
  40f86c:	push   0xb
  40f86e:	pop    ecx
  40f86f:	push   0x4
  40f871:	pop    ebx
  40f872:	inc    ebx
  40f873:	xchg   ebx,ecx
  40f875:	sub    ebx,ecx
  40f877:	xchg   ebx,ecx
  40f879:	dec    ecx
  40f87a:	dec    ecx
  40f87b:	mov    eax,DWORD PTR [ebp-0x1c]
  40f87e:	imul   eax,ecx
  40f881:	add    esp,eax
  40f883:	xchg   edx,eax
  40f884:	push   eax
  40f885:	xor    ebx,ebx
  40f887:	mov    edx,esp
  40f889:	dec    edx
  40f88a:	inc    ebx
  40f88b:	add    ebx,DWORD PTR [edx+ebx*1]
  40f88e:	dec    ebx
  40f88f:	xor    edx,edx
  40f891:	add    DWORD PTR [ebp-0xc],ebx
  40f894:	pop    ebx
  40f895:	mov    eax,DWORD PTR [ebp-0xc]
  40f898:	pop    edi
  40f899:	pop    esi
  40f89a:	pop    ebx
  40f89b:	leave  
  40f89c:	ret    0x10
  40f89f:	push   ebp
  40f8a0:	mov    ebp,esp
  40f8a2:	push   ecx
  40f8a3:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  40f8aa:	add    DWORD PTR ds:0x42c010,0x33e6
  40f8b4:	mov    eax,DWORD PTR [ebp-0x4]
  40f8b7:	or     edx,ecx
  40f8b9:	mov    edx,DWORD PTR [ebp+0x10]
  40f8bc:	mov    ecx,0x7510893
  40f8c1:	xor    eax,ecx
  40f8c3:	and    DWORD PTR ds:0x42d008,0x1b89
  40f8cd:	add    eax,0x3272db
  40f8d2:	or     DWORD PTR ds:0x42a01c,0x429008
  40f8dc:	mov    DWORD PTR [edx],eax
  40f8de:	and    DWORD PTR ds:0x42c01c,0x0
  40f8e8:	xor    eax,eax
  40f8ea:	add    eax,DWORD PTR ds:0x42c01c
  40f8f0:	inc    eax
  40f8f1:	mov    ds:0x42c01c,eax
  40f8f6:	cmp    DWORD PTR ds:0x42c01c,0x28
  40f8fd:	jne    0x40f90f
  40f903:	push   DWORD PTR [ebp-0x20]
  40f906:	push   DWORD PTR [ebp-0x20]
  40f909:	call   DWORD PTR ds:0x425034
  40f90f:	cmp    DWORD PTR ds:0x42c01c,0x1d
  40f916:	jb     0x40f8e8
  40f91c:	and    DWORD PTR ds:0x42d01c,0x0
  40f926:	jmp    0x40f938
  40f92b:	mov    edx,DWORD PTR ds:0x42d01c
  40f931:	inc    edx
  40f932:	mov    DWORD PTR ds:0x42d01c,edx
  40f938:	cmp    DWORD PTR ds:0x42d01c,0x1b
  40f93f:	jae    0x40f96c
  40f945:	cmp    DWORD PTR ds:0x42d01c,0x1d
  40f94c:	jne    0x40f967
  40f952:	push   0x42456e
  40f957:	push   0x42451e
  40f95c:	push   0x42c7
  40f961:	call   DWORD PTR ds:0x42503c
  40f967:	jmp    0x40f92b
  40f96c:	mov    eax,DWORD PTR [ebp+0xc]
  40f96f:	xor    eax,ecx
  40f971:	push   esi
  40f972:	mov    esi,DWORD PTR [ebp+0x10]
  40f975:	mov    edx,0x3272db
  40f97a:	add    eax,edx
  40f97c:	mov    DWORD PTR [esi+0x4],eax
  40f97f:	mov    eax,DWORD PTR [ebp+0x14]
  40f982:	mov    esi,DWORD PTR [ebp+0x10]
  40f985:	mov    DWORD PTR [esi+0x8],eax
  40f988:	mov    eax,DWORD PTR [ebp+0x18]
  40f98b:	mov    esi,DWORD PTR [ebp+0x10]
  40f98e:	mov    DWORD PTR [esi+0xc],eax
  40f991:	mov    eax,DWORD PTR [ebp+0x1c]
  40f994:	mov    esi,DWORD PTR [ebp+0x10]
  40f997:	mov    DWORD PTR [esi+0x10],eax
  40f99a:	mov    eax,DWORD PTR [ebp+0x8]
  40f99d:	xor    eax,ecx
  40f99f:	add    eax,edx
  40f9a1:	pop    esi
  40f9a2:	leave  
  40f9a3:	ret    0x18
  40f9a6:	push   ebp
  40f9a7:	mov    ebp,esp
  40f9a9:	mov    eax,ds:0x424014
  40f9ae:	mov    eax,DWORD PTR [eax+0x1c8]
  40f9b4:	mov    eax,DWORD PTR [eax]
  40f9b6:	movzx  ecx,BYTE PTR ds:0x429000
  40f9bd:	and    DWORD PTR ds:0x42d010,ecx
  40f9c3:	cdq    
  40f9c4:	push   ebx
  40f9c5:	add    DWORD PTR ds:0x42a008,0x429020
  40f9cf:	mov    ecx,0xfabdbef1
  40f9d4:	add    eax,ecx
  40f9d6:	mov    DWORD PTR ds:0x42d008,0x7e66
  40f9e0:	adc    edx,0xffffffff
  40f9e3:	or     DWORD PTR ds:0x42a014,edi
  40f9e9:	push   esi
  40f9ea:	push   edi
  40f9eb:	and    DWORD PTR ds:0x42a00c,0x0
  40f9f5:	jmp    0x40fa09
  40f9fa:	xor    ebx,ebx
  40f9fc:	or     ebx,DWORD PTR ds:0x42a00c
  40fa02:	inc    ebx
  40fa03:	mov    DWORD PTR ds:0x42a00c,ebx
  40fa09:	cmp    DWORD PTR ds:0x42a00c,0x1b
  40fa10:	jae    0x40fa41
  40fa16:	cmp    DWORD PTR ds:0x42a00c,0x26
  40fa1d:	jne    0x40fa36
  40fa23:	push   0x7619
  40fa28:	push   0x3c20
  40fa2d:	push   DWORD PTR [ebp-0x18]
  40fa30:	call   DWORD PTR ds:0x425040
  40fa36:	jmp    0x40f9fa
  40fa3b:	adc    ebx,DWORD PTR ds:0x42d018
  40fa41:	mov    edi,edx
  40fa43:	mov    edx,DWORD PTR [ebp+0x8]
  40fa46:	mov    DWORD PTR ds:0x42c000,0x5718
  40fa50:	mov    ebx,eax
  40fa52:	and    DWORD PTR ds:0x42c004,0x67ab
  40fa5c:	mov    eax,0x8a29a123
  40fa61:	xor    esi,esi
  40fa63:	or     DWORD PTR ds:0x429024,0x42d014
  40fa6d:	xor    ebx,eax
  40fa6f:	or     DWORD PTR ds:0x42d000,0x42a014
  40fa79:	xor    edi,0x0
  40fa7c:	and    DWORD PTR ds:0x42d000,0x42a00c
  40fa86:	add    edx,ecx
  40fa88:	adc    esi,0xffffffff
  40fa8b:	xor    edx,eax
  40fa8d:	or     DWORD PTR ds:0x42c010,0x42b010
  40fa97:	jmp    0x411e4e
  40fa9c:	mov    WORD PTR [ebx+0x6643964b],?
  40faa2:	arpl   WORD PTR [ebx+0x42],sp
  40faa5:	jno    0x40fa92
  40faa7:	shl    ch,cl
  40faa9:	jg     0x40fa3c
  40faab:	icebp  
  40faac:	js     0x40fa3c
  40faae:	bound  esp,QWORD PTR [edx-0x38]
  40fab1:	pop    edi
  40fab2:	bound  esp,QWORD PTR [edx+0x2a]
  40fab5:	mov    bh,0x6e
  40fab7:	jge    0x40faf7
  40fab9:	add    DWORD PTR [esi-0x69],0x7c1268d4
  40fac0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fac1:	push   0x50
  40fac3:	popa   
  40fac4:	xchg   ebx,eax
  40fac5:	jo     0x40fad3
  40fac7:	lea    ebx,[ebp+0x455c6c8]
  40facd:	sbb    eax,0x14ec9ae
  40fad2:	mov    esi,0x92757753
  40fad7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fad8:	lock sub BYTE PTR ds:0xa34f3f98,ah
  40fadf:	cmp    esi,eax
  40fae1:	mov    ds:0x2d211b47,eax
  40fae6:	pushf  
  40fae7:	pop    es
  40fae8:	sub    DWORD PTR [eax+0xc6e71ad],ebp
  40faee:	sbb    ebp,DWORD PTR [edi]
  40faf0:	mov    BYTE PTR [edi+0x1a],bl
  40faf3:	loopne 0x40fabb
  40faf5:	pop    edi
  40faf6:	jge    0x40fad1
  40faf8:	jmp    0x40faa5
  40fafa:	ja     0x40fb0d
  40fafc:	hlt    
  40fafd:	mov    esp,0x11f4e40a
  40fb02:	mov    ds:0x2922dcc8,eax
  40fb07:	pop    ebp
  40fb08:	or     eax,0x86ca4e9d
  40fb0d:	loope  0x40fb4e
  40fb0f:	cld    
  40fb10:	stos   BYTE PTR es:[edi],al
  40fb11:	push   eax
  40fb12:	adc    al,bl
  40fb14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb15:	sub    bh,BYTE PTR ds:[eax-0x63423bd6]
  40fb1c:	jmp    0x5be6:0x187699d0
  40fb23:	or     dh,dh
  40fb25:	xchg   edi,eax
  40fb26:	(bad)  
  40fb27:	lea    edx,[ecx-0x23cec65a]
  40fb2d:	sahf   
  40fb2e:	xchg   edi,eax
  40fb2f:	int    0xc8
  40fb31:	mov    BYTE PTR [ebx-0x15],dl
  40fb34:	popf   
  40fb35:	xchg   esi,eax
  40fb36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb37:	scas   eax,DWORD PTR es:[edi]
  40fb38:	retf   
  40fb39:	sub    al,0x83
  40fb3b:	pop    DWORD PTR [eax]
  40fb3d:	push   ds
  40fb3e:	dec    edx
  40fb3f:	jle    0x40fb1e
  40fb41:	push   edi
  40fb42:	push   0xffffff8e
  40fb44:	cwde   
  40fb45:	fisubr DWORD PTR [edi]
  40fb47:	fwait
  40fb48:	aad    0x7c
  40fb4a:	dec    edx
  40fb4b:	sub    al,bh
  40fb4d:	xor    eax,0xa58db7ac
  40fb52:	daa    
  40fb53:	test   eax,0xeeb39a42
  40fb58:	(bad)  
  40fb5a:	mov    al,ds:0x9460794b
  40fb5f:	add    al,BYTE PTR [esi+ecx*1-0x19b779b0]
  40fb66:	push   ss
  40fb67:	mov    bl,BYTE PTR [edi+0x100fe82c]
  40fb6d:	mov    bl,0x1e
  40fb6f:	pop    edx
  40fb70:	(bad)  
  40fb71:	test   eax,0x2a0c26b1
  40fb76:	repnz and DWORD PTR [esp+eax*8],eax
  40fb7a:	cwde   
  40fb7b:	dec    ecx
  40fb7c:	push   eax
  40fb7d:	xor    esi,ecx
  40fb7f:	(bad)  
  40fb80:	cwde   
  40fb81:	in     eax,0x83
  40fb83:	rol    DWORD PTR [edx+edx*2],0xaf
  40fb87:	mov    al,0x1
  40fb89:	repnz add DWORD PTR [edi],0x43
  40fb8d:	pop    ecx
  40fb8e:	enter  0x2e28,0xa7
  40fb92:	fwait
  40fb93:	pop    esp
  40fb94:	jmp    0xfc10c026
  40fb99:	mov    ds:0xd5ebc0cd,al
  40fb9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb9f:	test   al,0x2c
  40fba1:	or     BYTE PTR ds:0x65e6d752,dh
  40fba7:	fnstcw WORD PTR [esi+0x61e914a]
  40fbad:	cmp    eax,0x4595937d
  40fbb2:	ret    
  40fbb3:	(bad)  fs:[ebp+0x66]
  40fbb7:	mov    bl,BYTE PTR [esp+ebx*2-0x3f]
  40fbbb:	mov    edi,0xba2a615e
  40fbc0:	repnz shl BYTE PTR [ecx+0x46],cl
  40fbc4:	sub    esi,DWORD PTR [ecx-0x58fb37e2]
  40fbca:	call   0x5459:0xfb07b92e
  40fbd1:	mov    al,ds:0x33fa6f75
  40fbd6:	test   eax,0x3b1d9057
  40fbdb:	inc    eax
  40fbdc:	adc    al,0xdd
  40fbde:	jb     0x40fc54
  40fbe0:	xor    ah,BYTE PTR [eax]
  40fbe2:	jno    0x40fbc7
  40fbe4:	mov    ds:0x4091509c,eax
  40fbe9:	data16 stos BYTE PTR es:[edi],al
  40fbeb:	jle    0x40fbb6
  40fbed:	lahf   
  40fbee:	push   esp
  40fbef:	sub    eax,0xbeaabf4e
  40fbf4:	inc    eax
  40fbf5:	adc    DWORD PTR [ecx-0x2a],eax
  40fbf8:	iret   
  40fbf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbfa:	jg     0x40fc4c
  40fbfc:	pop    edi
  40fbfd:	jp     0x40fbca
  40fbff:	mov    edx,0x619212c9
  40fc04:	pop    ecx
  40fc05:	adc    dh,BYTE PTR [esi]
  40fc07:	sbb    DWORD PTR [edx],ecx
  40fc09:	push   es
  40fc0a:	and    esp,DWORD PTR [ebp+0x60514dbf]
  40fc10:	jb     0x40fc2a
  40fc12:	push   edi
  40fc13:	imul   esp,DWORD PTR [ecx],0xf5f1e637
  40fc19:	outs   dx,BYTE PTR ds:[esi]
  40fc1a:	lea    edi,[eax+eiz*8-0x5b21d9bf]
  40fc21:	test   al,0x4d
  40fc23:	nop
  40fc24:	and    bl,BYTE PTR [ebp-0xc]
  40fc27:	int3   
  40fc28:	fist   WORD PTR [ebx-0x1a0d6509]
  40fc2f:	dec    ebp
  40fc30:	xchg   ebp,eax
  40fc31:	adc    eax,eax
  40fc33:	(bad)  
  40fc34:	popf   
  40fc35:	add    eax,0x4c11c3d1
  40fc3a:	test   BYTE PTR [edx-0x1b89d7ed],bl
  40fc40:	loopne 0x40fc38
  40fc42:	mov    ebp,ebp
  40fc44:	jne    0x40fc72
  40fc46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc47:	mov    cl,0xfc
  40fc49:	(bad)  
  40fc4a:	jns    0x40fcb4
  40fc4c:	popf   
  40fc4d:	add    DWORD PTR [esi+0x26],eax
  40fc50:	cs mov al,ch
  40fc53:	jp     0x40fc15
  40fc55:	and    edx,DWORD PTR [edx]
  40fc57:	jb     0x40fcc7
  40fc59:	mov    esp,0x3a9ec1cc
  40fc5e:	mov    eax,ds:0x2879abd0
  40fc63:	fld    DWORD PTR [esi]
  40fc65:	jb     0x40fc68
  40fc67:	dec    edi
  40fc68:	xor    DWORD PTR [edi],ecx
  40fc6a:	cmp    ecx,DWORD PTR [edi+eiz*8+0x36]
  40fc6e:	push   0xa507c4e6
  40fc73:	mov    ch,0x4c
  40fc75:	jb     0x40fc1a
  40fc77:	ret    0x7c20
  40fc7a:	dec    ecx
  40fc7b:	xlat   BYTE PTR ds:[ebx]
  40fc7c:	arpl   WORD PTR [ecx+ecx*2+0x4bfd0887],cx
  40fc83:	mov    edi,0xb45d4eed
  40fc88:	sub    eax,0x8489cd94
  40fc8d:	pop    ebp
  40fc8e:	loopne 0x40fcce
  40fc90:	jge    0x40fcc4
  40fc92:	xchg   ecx,eax
  40fc93:	pop    edx
  40fc94:	test   al,0xc2
  40fc96:	stc    
  40fc97:	cmp    al,0x5
  40fc99:	or     BYTE PTR [edx+0x45],bl
  40fc9c:	scas   al,BYTE PTR es:[edi]
  40fc9d:	adc    al,0xb7
  40fc9f:	fimul  WORD PTR [esp+ebx*4-0x19e2e1c8]
  40fca6:	aaa    
  40fca7:	mov    ebx,DWORD PTR [eax-0x55]
  40fcaa:	fsubr  QWORD PTR [edi+eax*1]
  40fcad:	pop    edi
  40fcae:	and    ch,cl
  40fcb0:	sub    BYTE PTR [bx+0x31a1],bh
  40fcb5:	sahf   
  40fcb6:	mov    dh,0x4c
  40fcb8:	dec    ebx
  40fcb9:	stc    
  40fcba:	shl    BYTE PTR [ebp-0x42d36a4a],cl
  40fcc0:	aam    0xca
  40fcc2:	sti    
  40fcc3:	outs   dx,BYTE PTR ds:[esi]
  40fcc4:	xchg   ecx,eax
  40fcc5:	mov    ch,0xbc
  40fcc7:	(bad)  
  40fcc8:	rcl    BYTE PTR [ebx-0x78],1
  40fccb:	aam    0xce
  40fccd:	imul   esi,DWORD PTR [ecx],0x6f
  40fcd0:	call   0xb1e8:0x1e09f41c
  40fcd7:	jmp    0x40fd20
  40fcd9:	cwde   
  40fcda:	(bad)  
  40fcdb:	out    dx,eax
  40fcdc:	sub    esp,ebx
  40fcde:	loop   0x40fd0a
  40fce0:	sub    DWORD PTR [eax-0x53],edx
  40fce3:	sub    eax,0x103b0ee2
  40fce8:	sbb    DWORD PTR [eax+esi*8+0x11dc5d6c],ebp
  40fcef:	xor    ecx,ebx
  40fcf1:	mov    BYTE PTR [edx-0x2],bl
  40fcf4:	popa   
  40fcf5:	cs (bad) 
  40fcf8:	hlt    
  40fcf9:	xchg   ebx,eax
  40fcfa:	in     eax,0x5d
  40fcfc:	add    DWORD PTR [esi-0x53],0x3eb3f6f
  40fd03:	pop    ecx
  40fd04:	lods   al,BYTE PTR ds:[esi]
  40fd05:	(bad)
  40fd08:	imul   edi,DWORD PTR [edi],0xffffffed
  40fd0b:	inc    esi
  40fd0c:	popf   
  40fd0d:	push   ebx
  40fd0e:	sbb    eax,0x49d4afe5
  40fd13:	xor    ch,dh
  40fd15:	xchg   ebp,eax
  40fd16:	mov    bl,0xd7
  40fd18:	repnz xchg ch,cl
  40fd1b:	gs pushf 
  40fd1d:	sbb    eax,DWORD PTR [eax+ebx*8-0x28a6cfc9]
  40fd24:	sub    al,0xf0
  40fd26:	int    0xa3
  40fd28:	push   0xffffff92
  40fd2a:	test   DWORD PTR [eax-0x633f43d0],ecx
  40fd30:	push   ebx
  40fd31:	fnstsw WORD PTR [ecx+0x28]
  40fd34:	ret    
  40fd35:	mov    al,ds:0x562e669e
  40fd3a:	lahf   
  40fd3b:	and    dl,dl
  40fd3d:	add    ch,BYTE PTR ds:0xf82ca8fa
  40fd43:	jo     0x40fd83
  40fd45:	mov    al,ds:0x63489c8
  40fd4a:	shr    DWORD PTR [edi+0x4829dccc],cl
  40fd50:	loope  0x40fd3f
  40fd52:	mov    al,0x31
  40fd54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd55:	dec    ebx
  40fd56:	add    DWORD PTR [edx+edx*8],esi
  40fd59:	dec    ebx
  40fd5a:	les    edx,FWORD PTR [edi]
  40fd5c:	mov    ?,WORD PTR ds:[ebx-0x2c4c7f54]
  40fd63:	xchg   BYTE PTR [ebp-0xb],dh
  40fd66:	scas   eax,DWORD PTR es:[edi]
  40fd67:	and    dh,BYTE PTR [eax-0x1d99c1b8]
  40fd6d:	ins    BYTE PTR es:[edi],dx
  40fd6e:	repz or ah,BYTE PTR [ecx+0x4cfdd16c]
  40fd75:	in     al,0x2c
  40fd77:	cmp    eax,0x29b66a3f
  40fd7c:	out    dx,al
  40fd7d:	xchg   ebp,eax
  40fd7e:	mov    edi,0x45cba86d
  40fd83:	jp     0x40fd78
  40fd85:	jnp    0x40fdc7
  40fd87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd88:	ficom  WORD PTR [edi+0x78a5221a]
  40fd8e:	push   0x31
  40fd90:	pop    ds
  40fd91:	lods   eax,DWORD PTR ds:[esi]
  40fd92:	in     al,dx
  40fd93:	imul   DWORD PTR [ebp+0x1a]
  40fd96:	and    esp,DWORD PTR [ebx+eax*4]
  40fd99:	jecxz  0x40fd5b
  40fd9b:	sbb    BYTE PTR [ebx+0x61],0xbf
  40fd9f:	bound  ebp,QWORD PTR [edi]
  40fda1:	cmp    al,0x4c
  40fda3:	xor    cl,BYTE PTR [ebx+0xc]
  40fda6:	mov    ch,0x15
  40fda8:	xor    cl,ch
  40fdaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdab:	adc    eax,0x3f2d13ff
  40fdb0:	in     eax,dx
  40fdb1:	out    dx,al
  40fdb2:	pop    esi
  40fdb3:	jecxz  0x40fe30
  40fdb5:	les    edi,FWORD PTR [eax-0x72]
  40fdb8:	jge    0x40fe12
  40fdba:	fsub   QWORD PTR [ecx+edi*2+0x95bb1e4]
  40fdc1:	dec    esi
  40fdc2:	shl    al,0xb6
  40fdc5:	test   al,0xbc
  40fdc7:	add    esi,DWORD PTR [ebp-0x24]
  40fdca:	sub    DWORD PTR [esp+eiz*2-0x32],esp
  40fdce:	inc    edi
  40fdcf:	bnd jno 0x40fe2c
  40fdd2:	ret    
  40fdd3:	das    
  40fdd4:	out    0x55,eax
  40fdd6:	outs   dx,BYTE PTR ds:[esi]
  40fdd7:	daa    
  40fdd8:	adc    al,0xd6
  40fdda:	add    eax,0x8fe450eb
  40fddf:	pop    ebp
  40fde0:	dec    ebx
  40fde1:	call   0x2e628511
  40fde6:	xor    al,0x1f
  40fde8:	pop    ecx
  40fde9:	mov    dx,0xa115
  40fded:	sub    DWORD PTR [edx],0xba5d6492
  40fdf3:	xor    DWORD PTR [ebp+0x1b],ecx
  40fdf6:	jle    0x40fe56
  40fdf8:	pop    edi
  40fdf9:	pusha  
  40fdfa:	jg     0x40fe29
  40fdfc:	int3   
  40fdfd:	fcomp  st(4)
  40fdff:	sub    ah,bl
  40fe01:	adc    al,0x28
  40fe03:	int3   
  40fe04:	sbb    di,WORD PTR [eax-0x33]
  40fe08:	jns    0x40fdab
  40fe0a:	movhps QWORD PTR [edx-0x42ab432a],xmm6
  40fe11:	test   BYTE PTR [ecx],ch
  40fe13:	in     eax,0x7a
  40fe15:	das    
  40fe16:	cmp    al,0x64
  40fe18:	sub    BYTE PTR [ebx-0x2],bl
  40fe1b:	xchg   ecx,eax
  40fe1c:	dec    esp
  40fe1d:	xchg   ebx,eax
  40fe1e:	jmp    0x40fdef
  40fe20:	out    0xe9,al
  40fe22:	clc    
  40fe23:	xchg   ebx,eax
  40fe24:	jle    0x40fe43
  40fe26:	enter  0x985e,0x85
  40fe2a:	push   edx
  40fe2b:	enter  0x82f1,0xff
  40fe2f:	nop
  40fe30:	xchg   ebp,eax
  40fe31:	outs   dx,BYTE PTR ds:[esi]
  40fe32:	mov    cl,0x96
  40fe34:	mov    ah,0x36
  40fe36:	shr    BYTE PTR [edi+0x628ce6d],1
  40fe3c:	xor    BYTE PTR [edx-0x22],ch
  40fe3f:	daa    
  40fe40:	repz xor DWORD PTR [edx+ebp*8+0x10],eax
  40fe45:	push   ebp
  40fe46:	cmp    al,0x72
  40fe48:	mov    ebx,DWORD PTR [ecx+0x6ecc03b5]
  40fe4e:	dec    esp
  40fe4f:	mov    al,ds:0x6c892bef
  40fe54:	or     dl,dh
  40fe56:	sub    eax,0x1e6575b8
  40fe5b:	xlat   BYTE PTR ds:[ebx]
  40fe5c:	cli    
  40fe5d:	inc    esp
  40fe5e:	test   BYTE PTR [ebx+0x68ae4efd],bl
  40fe64:	ins    BYTE PTR es:[edi],dx
  40fe65:	es push cs
  40fe67:	mov    DWORD PTR [ebx+0x55e4bce2],0xec5f40b7
  40fe71:	fsubr  DWORD PTR [ecx-0x78]
  40fe74:	fldenv [ecx+ebx*2+0x3adbef20]
  40fe7b:	rcr    DWORD PTR [ebp+0xafb2ca9],0x15
  40fe82:	mov    ss,WORD PTR [edi]
  40fe84:	fild   WORD PTR [esi-0x1299fe99]
  40fe8a:	int3   
  40fe8b:	into   
  40fe8c:	xor    eax,0xeafe2989
  40fe91:	jl     0x40fe2d
  40fe93:	das    
  40fe94:	icebp  
  40fe95:	jmp    0x40fe60
  40fe97:	or     dh,cl
  40fe99:	or     bh,BYTE PTR [edx+0x34bbedaa]
  40fe9f:	xchg   DWORD PTR [ebx],eax
  40fea1:	and    ebp,DWORD PTR [esi]
  40fea3:	add    al,0xdb
  40fea5:	jge    0x40fea3
  40fea7:	loop   0x40fe7c
  40fea9:	or     eax,0x3ce620b5
  40feae:	or     BYTE PTR [ecx-0x5f1b1db6],al
  40feb4:	sub    eax,0x650f7c1b
  40feb9:	cmc    
  40feba:	repz mov WORD PTR [esi+0x7efb0fe5],es
  40fec1:	jne    0x40fefd
  40fec3:	aas    
  40fec4:	idiv   BYTE PTR [ecx+eax*2+0xa]
  40fec8:	(bad)  
  40feca:	pop    eax
  40fecb:	mov    eax,0x15ceea01
  40fed0:	(bad)  
  40fed1:	loop   0x40fe67
  40fed3:	repnz mov al,ds:0x2444ad6f
  40fed9:	or     BYTE PTR [esi-0x18],0x26
  40fedd:	push   edx
  40fede:	fs addr16 das 
  40fee1:	and    edi,esp
  40fee3:	xchg   edx,eax
  40fee4:	jbe    0x40fedb
  40fee6:	and    edx,esi
  40fee8:	sub    BYTE PTR [eax-0x3b],ah
  40feeb:	sti    
  40feec:	popa   
  40feed:	es aam 0x6f
  40fef0:	inc    esp
  40fef1:	and    esi,DWORD PTR [ebp-0x51]
  40fef4:	pop    es
  40fef5:	xchg   BYTE PTR [ebp-0x7],ah
  40fef8:	push   ecx
  40fef9:	icebp  
  40fefa:	inc    ecx
  40fefb:	xlat   BYTE PTR ds:[ebx]
  40fefc:	or     dl,dh
  40fefe:	popf   
  40feff:	sub    al,0xe3
  40ff01:	fdivr  QWORD PTR [ebp-0x3435d514]
  40ff07:	dec    edi
  40ff08:	mov    bl,0x24
  40ff0b:	das    
  40ff0c:	daa    
  40ff0d:	into   
  40ff0e:	and    eax,0x1a347157
  40ff14:	xchg   BYTE PTR [esi+0xb1953a9],bl
  40ff1a:	lock mov dh,0x1f
  40ff1d:	mov    ds:0x4034fdfc,eax
  40ff22:	cwde   
  40ff23:	fcomp  st(5)
  40ff25:	cmp    al,0x99
  40ff27:	fist   DWORD PTR [ebx-0x4e]
  40ff2a:	mov    BYTE PTR [edx+esi*4],cl
  40ff2d:	je     0x40ffad
  40ff2f:	lds    edi,FWORD PTR [eax-0x795e6241]
  40ff35:	pop    edx
  40ff36:	cmp    bl,0xe7
  40ff39:	xchg   esi,eax
  40ff3a:	or     eax,0x1b412c1
  40ff3f:	mov    ds:0x41ce6560,eax
  40ff44:	dec    ebx
  40ff45:	lods   eax,DWORD PTR ds:[esi]
  40ff46:	ja     0x40fee5
  40ff48:	pop    esp
  40ff49:	push   ds
  40ff4a:	in     eax,dx
  40ff4b:	cmp    al,0x9
  40ff4d:	repnz push esp
  40ff4f:	cmc    
  40ff50:	push   esi
  40ff51:	in     eax,0xaf
  40ff53:	(bad)  
  40ff55:	pop    ds
  40ff56:	pushf  
  40ff57:	out    0x53,al
  40ff59:	out    0xaf,al
  40ff5b:	aad    0xe1
  40ff5d:	dec    ebx
  40ff5e:	or     DWORD PTR [eax-0x4f378671],ebp
  40ff64:	dec    ebx
  40ff65:	addr16 das 
  40ff67:	shl    DWORD PTR [esi],cl
  40ff69:	push   cs
  40ff6a:	jnp    0x40ffe9
  40ff6c:	ror    BYTE PTR [edi-0x4a],1
  40ff6f:	das    
  40ff70:	jmp    0x5225:0x2448d404
  40ff77:	push   edi
  40ff78:	xchg   edx,eax
  40ff79:	mov    esp,0xb26fa74b
  40ff7e:	pop    ds
  40ff7f:	xchg   edx,eax
  40ff80:	lahf   
  40ff81:	pop    esp
  40ff82:	jo     0x40ff79
  40ff84:	js     0x40ff0e
  40ff86:	mov    edx,0x779d4b7e
  40ff8b:	push   es
  40ff8c:	jecxz  0x41000b
  40ff8e:	or     bl,BYTE PTR [eax+0x16]
  40ff91:	loope  0x40ffda
  40ff93:	mov    ebx,0x9f3d0745
  40ff98:	ss jno 0x41000e
  40ff9b:	or     al,0xf9
  40ff9d:	lods   eax,DWORD PTR ds:[esi]
  40ff9e:	dec    esp
  40ff9f:	lods   al,BYTE PTR ds:[esi]
  40ffa0:	scas   eax,DWORD PTR es:[edi]
  40ffa1:	retf   0x564d
  40ffa4:	imul   esi,DWORD PTR [esi+0x2c5a054],0xffffffaf
  40ffab:	inc    esp
  40ffac:	mov    esi,DWORD PTR [edx+0x35]
  40ffaf:	loope  0x410003
  40ffb1:	imul   ecx,DWORD PTR [eax],0x53e681ba
  40ffb7:	sbb    eax,0x86c8ea3b
  40ffbc:	inc    eax
  40ffbd:	mov    DWORD PTR [edi+0x21e7bbd1],ebp
  40ffc3:	or     al,0x2
  40ffc5:	sub    ebp,edx
  40ffc7:	mov    ebx,0xc87db04d
  40ffcc:	sub    eax,DWORD PTR [edi]
  40ffce:	rcl    BYTE PTR [edx+0x7a19348f],1
  40ffd4:	add    al,0x83
  40ffd6:	or     ecx,ecx
  40ffd8:	mov    cl,BYTE PTR [edi+eax*2-0x3c6d75df]
  40ffdf:	or     DWORD PTR [eax+0x76],edx
  40ffe2:	retf   
  40ffe3:	ins    DWORD PTR es:[edi],dx
  40ffe4:	xchg   esp,eax
  40ffe5:	pop    ebp
  40ffe6:	je     0x40ffd9
  40ffe8:	jae    0x40ff6e
  40ffea:	js     0x40fffa
  40ffec:	adc    eax,0x13619d50
  40fff1:	adc    eax,0x58aaffed
  40fff6:	xchg   ebx,eax
  40fff7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fff8:	and    al,0x5d
  40fffa:	es sti 
  40fffc:	popa   
  40fffd:	mov    ds:0x7a580d36,al
  410002:	lods   eax,DWORD PTR ds:[esi]
  410003:	stos   DWORD PTR es:[edi],eax
  410004:	rcl    BYTE PTR [edi-0x2f],1
  410007:	jnp    0x41001c
  410009:	sub    eax,0x8b46014e
  41000e:	into   
  41000f:	and    edi,DWORD PTR [ecx-0x19e9be5]
  410015:	scas   al,BYTE PTR es:[edi]
  410016:	ret    
  410017:	je     0x41001c
  410019:	sti    
  41001a:	rol    DWORD PTR [ebp-0x3c5ec83a],0x87
  410021:	adc    al,0x69
  410023:	cli    
  410024:	or     eax,0xc91427c4
  410029:	shl    DWORD PTR [edx+ebp*1-0x56],0x2c
  41002e:	stos   BYTE PTR es:[edi],al
  41002f:	sub    eax,ebp
  410031:	shl    BYTE PTR [edi+0x54cf2f8a],cl
  410037:	mov    ax,ds:0x218e1cfb
  41003d:	loope  0x4100ac
  41003f:	dec    ecx
  410040:	mov    eax,gs:0xc44cf76a
  410046:	lea    esp,[edx+0x29]
  410049:	pop    ecx
  41004a:	loop   0x40ffdd
  41004c:	mov    dh,0xd7
  41004e:	or     edx,ecx
  410050:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410051:	push   es
  410052:	sbb    BYTE PTR [esi-0x78],ch
  410055:	ss xchg esi,eax
  410057:	out    dx,al
  410058:	jne    0x410055
  41005a:	xor    edx,DWORD PTR [ecx-0x43b925ab]
  410060:	in     al,0x4b
  410062:	ds push 0x31ed6cf6
  410068:	test   BYTE PTR [ecx],ah
  41006a:	test   ch,0x8c
  41006d:	(bad)
  410071:	(bad)  
  410073:	iret   
  410074:	mov    edi,0x2876a209
  410079:	mov    dl,0xdf
  41007b:	or     al,0x60
  41007d:	add    esi,esp
  41007f:	addr16 dec edx
  410081:	xchg   ebp,eax
  410082:	sar    DWORD PTR [ebp-0x13],cl
  410085:	xor    al,0x97
  410087:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410088:	mov    ds:0x2f6edb06,al
  41008d:	jmp    0x410095
  41008f:	in     al,0x2e
  410091:	and    DWORD PTR [edx+ebx*8+0xd],ebx
  410095:	pop    ebx
  410096:	call   0x427c1c57
  41009b:	nop
  41009c:	cmp    cl,bh
  41009e:	loope  0x410087
  4100a0:	and    ebp,DWORD PTR [esi]
  4100a2:	int    0x58
  4100a4:	push   ebx
  4100a5:	pop    ds
  4100a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100a7:	gs sbb ch,bh
  4100aa:	jmp    0x9984:0x56ac68eb
  4100b1:	jg     0x41009e
  4100b3:	addr16 (bad) 
  4100b5:	jecxz  0x41005d
  4100b7:	sar    DWORD PTR [ebx],0xcb
  4100ba:	mov    ds:0xd1dd9319,al
  4100bf:	push   0xf23036d2
  4100c4:	inc    ecx
  4100c5:	mov    cl,0x6e
  4100c7:	mov    eax,ds:0x4eb7cc1f
  4100cc:	mov    ah,0xb2
  4100ce:	aas    
  4100cf:	lods   eax,DWORD PTR ds:[esi]
  4100d0:	rcl    esp,0xbf
  4100d3:	fistp  QWORD PTR [ebx-0x56a66dc4]
  4100d9:	sub    eax,edx
  4100db:	std    
  4100dc:	or     BYTE PTR [ecx],ah
  4100de:	cmc    
  4100df:	cmp    al,0xe6
  4100e1:	loopne 0x410091
  4100e3:	adc    ebx,0x3cdb401e
  4100e9:	outs   dx,DWORD PTR ds:[esi]
  4100ea:	(bad)  
  4100eb:	jae    0x4100f7
  4100ed:	mov    WORD PTR [eax+0x52685d2],fs
  4100f3:	pop    ebx
  4100f4:	mov    ss,WORD PTR [esi+0x779e3b08]
  4100fa:	test   eax,0x6e0988df
  4100ff:	loope  0x41008c
  410101:	xchg   eax,edx
  410103:	test   ecx,0x391342b7
  410109:	pop    ecx
  41010a:	sbb    BYTE PTR [eax+edx*2+0x2339b0c8],dh
  410111:	mov    DWORD PTR [edi+ebp*2-0x1c04d34b],edx
  410118:	push   edi
  410119:	mov    ch,0x5
  41011b:	push   ds
  41011c:	inc    ecx
  41011d:	daa    
  41011e:	(bad)  
  41011f:	out    0x6b,eax
  410121:	sbb    BYTE PTR [ebx-0x31],ah
  410124:	sub    esp,DWORD PTR [edi]
  410126:	xor    DWORD PTR [ebp+0x27140e15],eax
  41012c:	daa    
  41012d:	clc    
  41012e:	test   BYTE PTR [esi-0x141de1f7],ch
  410134:	push   0x3886a6c9
  410139:	cmp    BYTE PTR [esi+0x5a],0x8d
  41013d:	test   DWORD PTR [ebp+0x1deacb3],esp
  410143:	jns    0x41010f
  410145:	add    al,bl
  410147:	or     dh,BYTE PTR [ebx-0x69]
  41014a:	sidtd  [ecx-0x930d920]
  410151:	pop    es
  410152:	xchg   ebx,eax
  410153:	fs arpl cx,si
  410156:	cmp    al,0xe3
  410158:	push   0xfffffffe
  41015a:	xchg   ebp,eax
  41015b:	popa   
  41015c:	mov    esp,DWORD PTR [esi-0x2bd773c4]
  410162:	int3   
  410163:	popf   
  410164:	dec    edx
  410165:	clts   
  410167:	and    dh,BYTE PTR [edx+0x56]
  41016a:	mov    bh,0x2e
  41016c:	in     eax,0x3b
  41016e:	inc    esp
  41016f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410170:	xor    ecx,esp
  410172:	pop    esp
  410173:	leave  
  410174:	fnstcw WORD PTR [esi]
  410176:	jmp    0x41019f
  410178:	loope  0x4101dd
  41017a:	or     al,0x4a
  41017c:	adc    al,0xab
  41017e:	and    bh,bl
  410180:	inc    eax
  410181:	dec    esi
  410182:	or     DWORD PTR [eax+0x1afabe7b],esi
  410188:	jb     0x41010c
  41018a:	cmp    BYTE PTR [esi-0x37],al
  41018d:	push   0x32
  41018f:	jl     0x4101bc
  410191:	call   0x20d2:0x6c81b3c1
  410198:	out    dx,eax
  410199:	bound  ebx,QWORD PTR [edx+0x611575f4]
  41019f:	hlt    
  4101a0:	jg     0x410198
  4101a2:	rol    BYTE PTR [edx+edx*1+0x58],0x96
  4101a7:	outs   dx,BYTE PTR ds:[esi]
  4101a8:	mov    al,0x89
  4101aa:	mov    edi,0x14746c83
  4101af:	mov    eax,ds:0x3a9df996
  4101b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101b5:	fdiv   QWORD PTR [edi]
  4101b7:	xor    eax,0xfc53a46e
  4101bc:	adc    DWORD PTR [edi+0x1e],esp
  4101bf:	inc    edx
  4101c0:	xor    ebp,DWORD PTR [edx+0x7e]
  4101c3:	and    al,0xdb
  4101c5:	mov    ebp,DWORD PTR [eax+0x4f]
  4101c8:	iret   
  4101c9:	xor    eax,0x517d2647
  4101ce:	shr    edi,cl
  4101d0:	dec    ebx
  4101d1:	cmp    BYTE PTR fs:[edi+0x50],bh
  4101d5:	(bad)  
  4101d6:	test   BYTE PTR [ebp+0x3f],ch
  4101d9:	test   eax,0x9f75cfb2
  4101de:	sti    
  4101df:	(bad)  
  4101e0:	ds popa 
  4101e2:	aaa    
  4101e3:	outs   dx,BYTE PTR ds:[esi]
  4101e4:	xor    BYTE PTR [edi-0x246aa6e1],ch
  4101ea:	xchg   edi,eax
  4101eb:	(bad)  
  4101ed:	test   DWORD PTR [ebx],edx
  4101ef:	cmp    BYTE PTR ds:0x510e5aa2,cl
  4101f5:	mov    ah,0x4
  4101f7:	add    cl,0x85
  4101fa:	jne    0x41023f
  4101fc:	jp     0x410183
  4101fe:	sub    eax,0xdd838dfb
  410203:	sub    BYTE PTR [esi+0x2fb90881],ch
  410209:	inc    eax
  41020a:	dec    ecx
  41020b:	shl    BYTE PTR [eax+0x24],cl
  41020e:	aam    0x20
  410210:	out    dx,eax
  410211:	xchg   ebp,eax
  410212:	mov    ds:0x62f5bc10,eax
  410217:	mov    esp,0x23562a02
  41021c:	dec    ebx
  41021d:	fidivr WORD PTR [ebx+0x7905638e]
  410223:	mov    dl,0xce
  410225:	add    al,0x25
  410227:	inc    esp
  410228:	mov    bl,0xdd
  41022a:	popa   
  41022b:	dec    edi
  41022c:	mov    BYTE PTR [eax+0x6c],ah
  41022f:	iret   
  410230:	add    eax,0x6eafdb17
  410235:	dec    esi
  410236:	or     dl,BYTE PTR [edx+0x14eaef01]
  41023c:	nop
  41023d:	clc    
  41023e:	ret    0x8a0b
  410241:	or     BYTE PTR [ecx],0xde
  410244:	or     al,0x5a
  410246:	pop    eax
  410247:	xor    eax,0xdcedc559
  41024c:	jg     0x410216
  41024e:	iret   
  41024f:	cmp    DWORD PTR [edi-0x17f66dff],0xe11a00c
  410259:	aas    
  41025a:	mov    ebp,0x80e63040
  41025f:	mov    WORD PTR [edi],?
  410261:	enter  0x9466,0xc5
  410265:	push   edx
  410266:	push   ebp
  410267:	xchg   edi,eax
  410268:	out    dx,al
  410269:	sbb    al,0x66
  41026b:	add    eax,0x9ed11dd3
  410270:	mov    WORD PTR [ebx],cs
  410272:	cld    
  410273:	call   0xb009:0xd248e5e4
  41027a:	out    0x89,eax
  41027c:	les    eax,FWORD PTR [eax]
  41027e:	jl     0x4102bc
  410280:	xor    al,0xa1
  410282:	push   0xffffffa1
  410284:	repnz jmp 0x9e4:0xdb885edc
  41028c:	mov    eax,0x406ef049
  410291:	int3   
  410292:	sahf   
  410293:	or     eax,0x2cb532fd
  410298:	add    dh,BYTE PTR [ebx+0x5e3289bd]
  41029e:	fsubp  st(1),st
  4102a0:	jge    0x41031d
  4102a2:	jns    0x410275
  4102a4:	cmp    bl,BYTE PTR [ebp-0x79]
  4102a7:	xor    al,BYTE PTR [edx+0x25]
  4102aa:	clc    
  4102ab:	arpl   WORD PTR [ecx-0x60055f88],ax
  4102b1:	mov    dh,0x71
  4102b3:	pop    ecx
  4102b4:	adc    DWORD PTR [esp+ebx*2+0x67],edi
  4102b8:	push   cs
  4102b9:	mov    edi,0x32034e54
  4102be:	mov    edi,0xfffffcef
  4102c3:	push   ebp
  4102c4:	cdq    
  4102c5:	or     DWORD PTR [esi-0x3fac2c20],esp
  4102cb:	xchg   esi,eax
  4102cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102cd:	out    0xbd,al
  4102cf:	(bad)  ds:0x78c31de5
  4102d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102d6:	lea    ebx,[ebx+0x56]
  4102d9:	iret   
  4102da:	adc    al,0x38
  4102dc:	ja     0x410314
  4102de:	jmp    FWORD PTR [ecx+0x15]
  4102e1:	dec    edi
  4102e2:	jne    0x410298
  4102e4:	fsubr  QWORD PTR [ebx-0x12]
  4102e7:	or     DWORD PTR [esi-0x2f1db2b0],esp
  4102ed:	test   al,0x60
  4102ef:	idiv   ebp
  4102f1:	out    dx,al
  4102f2:	fmul   DWORD PTR [eax+0x1f]
  4102f5:	push   0xa26bcf20
  4102fa:	jle    0x410339
  4102fc:	adc    edi,DWORD PTR [esi+0xa]
  4102ff:	mov    DWORD PTR ds:0x2b840c14,ebp
  410305:	(bad)  
  410306:	aam    0x9a
  410308:	les    esp,FWORD PTR [ecx+0x19]
  41030b:	sub    DWORD PTR [ebx],eax
  41030d:	or     esp,esp
  41030f:	aaa    
  410310:	loop   0x410322
  410312:	add    bh,BYTE PTR [ebp-0x73bc8737]
  410318:	test   BYTE PTR [eax+0x4781110d],bl
  41031e:	mov    ebx,ebp
  410320:	mov    eax,0xec01cea1
  410325:	push   cs
  410326:	jae    0x4102f8
  410328:	(bad)  
  41032a:	rep movs DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41032d:	dec    edx
  41032e:	fisubr DWORD PTR [ebp-0x50]
  410331:	xchg   esp,eax
  410332:	inc    esi
  410333:	lahf   
  410334:	xchg   esp,eax
  410335:	mov    dh,0xbd
  410337:	push   cs
  410338:	or     DWORD PTR [edi-0x3fd9543b],eax
  41033e:	jge    0x410309
  410340:	pop    ebp
  410341:	push   ecx
  410342:	inc    eax
  410343:	pusha  
  410344:	cmp    DWORD PTR [esi+esi*4-0x76],ebp
  410348:	aaa    
  410349:	mov    esi,0xe68425e9
  41034e:	xor    BYTE PTR [ebp+0x371eb38d],dh
  410354:	jecxz  0x41038a
  410356:	rcl    DWORD PTR [eax+eax*2],1
  410359:	xchg   ebx,eax
  41035a:	es rol ah,1
  41035d:	add    cl,BYTE PTR [eax]
  41035f:	test   DWORD PTR [edi+0x31],ecx
  410362:	cli    
  410363:	adc    eax,0xd380a7a6
  410368:	cwde   
  410369:	aad    0xc3
  41036b:	sbb    BYTE PTR [ebp-0x254c4d75],ah
  410371:	gs and al,0x78
  410374:	out    dx,al
  410375:	pusha  
  410376:	add    BYTE PTR [edx-0x8b86598],bl
  41037c:	dec    eax
  41037d:	cs loop 0x4103a1
  410380:	sar    DWORD PTR [ebp+0x4e],cl
  410383:	jp     0x410352
  410385:	les    esp,FWORD PTR [ecx-0x13ee7f3e]
  41038b:	aad    0xee
  41038d:	scas   al,BYTE PTR es:[edi]
  41038e:	add    bh,dh
  410390:	jge    0x4103db
  410392:	sbb    ebp,DWORD PTR [esi]
  410394:	mov    ss,edx
  410396:	xor    eax,DWORD PTR [ebp+0x5100a6fd]
  41039c:	adc    BYTE PTR [eax],ch
  41039e:	mov    ecx,0x454fb3f8
  4103a3:	enter  0xb35e,0x57
  4103a7:	add    BYTE PTR [ebx],bh
  4103a9:	in     eax,0x9
  4103ab:	loop   0x4103b6
  4103ad:	pop    ebx
  4103ae:	push   ebx
  4103af:	scas   al,BYTE PTR es:[edi]
  4103b0:	les    ebx,FWORD PTR [ebx+ebx*1+0x6c17b1f9]
  4103b7:	out    dx,al
  4103b8:	jmp    0x4103fb
  4103ba:	push   ecx
  4103bb:	das    
  4103bc:	jo     0x4103bb
  4103be:	add    bh,cl
  4103c0:	jg     0x410358
  4103c2:	or     ah,BYTE PTR ds:0x66111311
  4103c8:	pop    edx
  4103c9:	aas    
  4103ca:	(bad)  
  4103cb:	bound  ebp,QWORD PTR [ecx-0x33]
  4103ce:	fwait
  4103cf:	mov    al,0x4d
  4103d1:	mov    edx,0x40db41f2
  4103d6:	jne    0x4103fd
  4103d8:	jne    0x41043e
  4103da:	sbb    eax,ecx
  4103dc:	push   edi
  4103dd:	rcr    BYTE PTR [ebx+edi*8],cl
  4103e0:	loopne 0x41038a
  4103e2:	ror    edx,0xc3
  4103e5:	js     0x4103ff
  4103e7:	pop    ebp
  4103e8:	pop    ds
  4103e9:	xchg   ebx,eax
  4103ea:	mov    eax,0xa0180ab2
  4103ef:	inc    esp
  4103f0:	xchg   edx,eax
  4103f1:	dec    eax
  4103f2:	ins    DWORD PTR es:[edi],dx
  4103f3:	push   cs
  4103f4:	fwait
  4103f5:	pop    ds
  4103f6:	arpl   WORD PTR [ebp-0xd92d443],bx
  4103fc:	dec    esp
  4103fd:	cmc    
  4103fe:	cmp    eax,DWORD PTR [eax]
  410400:	pop    ecx
  410401:	js     0x410421
  410403:	sub    DWORD PTR [ebp-0x1799f0f4],edx
  410409:	popa   
  41040a:	ret    0xde0
  41040d:	fild   QWORD PTR [ebp+0x66]
  410410:	mov    esi,0x960c220
  410415:	pop    ebp
  410416:	ja     0x4103f5
  410418:	(bad)  
  410419:	ror    BYTE PTR ds:0xb2a9162f,1
  41041f:	xchg   BYTE PTR [edi-0x66c5feaa],bl
  410425:	xchg   ebp,eax
  410426:	shl    al,cl
  410428:	and    eax,0x61552c54
  41042d:	dec    eax
  41042e:	mov    ds:0xc116d457,eax
  410433:	shl    DWORD PTR [ecx],1
  410435:	or     DWORD PTR [edx+0x78],ebp
  410438:	fild   QWORD PTR [ecx+0x7]
  41043b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41043c:	and    dl,BYTE PTR [esi]
  41043e:	xchg   ecx,eax
  41043f:	aaa    
  410440:	pop    edx
  410441:	jecxz  0x4103cb
  410443:	out    0x44,al
  410445:	jle    0x4103dd
  410447:	ja     0x4103ed
  410449:	sbb    BYTE PTR [esi+ecx*1+0x1535fbd4],ch
  410450:	pusha  
  410451:	and    eax,0x748115f7
  410456:	retf   0x166b
  410459:	xor    dh,BYTE PTR [ebx+edi*4+0x71232cb5]
  410460:	pop    ecx
  410461:	push   ecx
  410462:	aad    0x14
  410464:	aad    0xe5
  410466:	jno    0x41042b
  410468:	dec    esp
  410469:	cmp    DWORD PTR [eax],eax
  41046b:	push   0xffffffdc
  41046d:	xchg   ecx,eax
  41046e:	icebp  
  41046f:	push   ebp
  410470:	scas   al,BYTE PTR es:[edi]
  410471:	fdiv   DWORD PTR [eax-0x62c6f4a1]
  410477:	scas   eax,DWORD PTR es:[edi]
  410478:	das    
  410479:	dec    ecx
  41047a:	mov    ds:0x564a69b7,eax
  41047f:	arpl   WORD PTR [ebx],bx
  410481:	cmp    al,0x42
  410483:	cmp    eax,0x36268d5a
  410488:	stc    
  410489:	out    dx,al
  41048a:	pop    esp
  41048b:	int    0x62
  41048d:	iret   
  41048e:	fdiv   QWORD PTR [eax]
  410490:	in     al,0x37
  410492:	jns    0x4104e6
  410494:	or     DWORD PTR [edi+0xe],esi
  410497:	loopne 0x4104bc
  410499:	addr16 retf 
  41049b:	mov    al,ch
  41049d:	cmp    bl,BYTE PTR ds:0x8ba28f38
  4104a3:	fdivr  QWORD PTR [edi+0x7ff51829]
  4104a9:	cmp    DWORD PTR [ebx-0x16842e99],edi
  4104af:	repnz imul ebp,edi,0xb96a671c
  4104b6:	dec    ecx
  4104b7:	mov    esi,DWORD PTR [ebp+0x64]
  4104ba:	js     0x4104d2
  4104bc:	mov    ds:0x2576b1f9,al
  4104c1:	push   eax
  4104c2:	hlt    
  4104c3:	bound  esi,QWORD PTR [esi+0x45e89fb7]
  4104c9:	mov    al,0x46
  4104cb:	xlat   BYTE PTR ds:[ebx]
  4104cc:	and    BYTE PTR [esi-0x7bf399db],ah
  4104d2:	pop    ebp
  4104d3:	xor    ah,BYTE PTR [edx+esi*4]
  4104d6:	cmp    edx,ebx
  4104d8:	fsub   QWORD PTR [ebx+0x33]
  4104db:	out    0xc4,al
  4104dd:	ins    BYTE PTR es:[edi],dx
  4104de:	test   BYTE PTR [ecx-0x292f3adf],dh
  4104e4:	mov    ds:0x8c8e4f83,eax
  4104e9:	cs das 
  4104eb:	aas    
  4104ec:	or     al,0xe7
  4104ee:	fprem  
  4104f0:	xor    edx,edx
  4104f2:	xor    al,0x32
  4104f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104f5:	sub    al,0x58
  4104f7:	mov    ch,0x9b
  4104f9:	out    0x5d,eax
  4104fb:	and    DWORD PTR [ecx+0x3],ebx
  4104fe:	xchg   dh,ch
  410500:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410501:	es mov eax,0x50f7fe4f
  410507:	xchg   edx,eax
  410508:	leave  
  410509:	(bad)  
  41050b:	sub    dl,BYTE PTR [ebp+0x7af37b90]
  410511:	adc    al,BYTE PTR gs:[edx+esi*1+0x64]
  410516:	mov    ch,0x0
  410518:	sbb    eax,0x7d8f0c37
  41051d:	out    dx,al
  41051e:	inc    edi
  41051f:	or     esi,ebx
  410521:	add    al,0x47
  410523:	gs jne 0x410575
  410526:	in     al,0xa9
  410528:	and    eax,0xa64aa83f
  41052d:	je     0x4105a9
  41052f:	dec    esi
  410530:	fisub  WORD PTR [edi]
  410532:	mov    ebx,0xd3cc0455
  410537:	lods   al,BYTE PTR ds:[esi]
  410538:	xor    BYTE PTR [ebx+0x3c],cl
  41053b:	xor    BYTE PTR [eax],ah
  41053d:	cmp    al,0xc2
  41053f:	mov    dh,0x84
  410541:	jge    0x41052d
  410543:	shr    bh,cl
  410545:	ja     0x41051e
  410547:	pop    ss
  410548:	jno    0x410574
  41054a:	sahf   
  41054b:	jne    0x4104f1
  41054d:	xor    eax,0xde143627
  410552:	sar    BYTE PTR [ecx-0x1f],cl
  410555:	fstp   DWORD PTR [eax+0x9]
  410558:	and    al,0x8a
  41055a:	sub    edi,edx
  41055c:	retf   
  41055d:	(bad)  
  41055e:	mov    DWORD PTR [ebp-0x1d],edx
  410561:	jle    0x41055e
  410563:	mov    al,0x3a
  410565:	and    dl,BYTE PTR [edx-0x6d8b5ac1]
  41056b:	pop    edx
  41056c:	mov    esi,0xc5a0ae2e
  410571:	or     DWORD PTR [edi+0x2e99b635],esi
  410577:	out    0x35,al
  410579:	test   al,0x3b
  41057b:	jle    0x4105ad
  41057d:	or     DWORD PTR [ebp+0x79a83b63],0x6c402e01
  410587:	add    bh,BYTE PTR [eax+0x72e6386f]
  41058d:	push   esi
  41058e:	clc    
  41058f:	mov    esp,0x947243a3
  410594:	std    
  410595:	mov    ecx,ebx
  410597:	test   al,0x57
  410599:	xor    al,0x80
  41059b:	aaa    
  41059c:	xchg   eax,ebp
  41059e:	or     cl,BYTE PTR [edi-0x37e0ed61]
  4105a4:	mov    ds:0x6ad3181f,eax
  4105a9:	(bad)  
  4105aa:	hlt    
  4105ab:	cmp    BYTE PTR [ecx+0x7d],ch
  4105ae:	std    
  4105af:	sbb    eax,0x6b4ba19c
  4105b4:	cmp    eax,0x997f4c43
  4105b9:	jmp    0x41059c
  4105bb:	xchg   DWORD PTR ds:0x799fef18,eax
  4105c1:	and    al,0x8d
  4105c3:	inc    esp
  4105c4:	mov    esi,0x374e854a
  4105c9:	call   0xab9c72ed
  4105ce:	cld    
  4105cf:	mov    ss,WORD PTR [esi]
  4105d1:	das    
  4105d2:	sub    esp,DWORD PTR [esi]
  4105d4:	dec    edi
  4105d5:	or     dh,BYTE PTR [eax-0x7]
  4105d8:	mov    al,ds:0xdb77d050
  4105dd:	cli    
  4105de:	cmp    DWORD PTR [esi],eax
  4105e0:	or     dh,BYTE PTR [esi+0x25]
  4105e3:	jecxz  0x41064e
  4105e5:	fld    TBYTE PTR [esp+eax*2-0x1e]
  4105e9:	stc    
  4105ea:	repz ror esp,1
  4105ed:	push   eax
  4105ee:	dec    esp
  4105ef:	mov    edx,0xe0121e8f
  4105f4:	stos   BYTE PTR es:[edi],al
  4105f5:	mov    ds:0x25ae93e8,eax
  4105fa:	cwde   
  4105fb:	xchg   edi,eax
  4105fc:	sahf   
  4105fd:	and    al,0x82
  4105ff:	sub    eax,0x65fcabb9
  410604:	sub    BYTE PTR [ecx-0x27c259fa],bh
  41060a:	dec    edx
  41060b:	add    BYTE PTR [eax-0x29],dh
  41060e:	out    0xbb,al
  410610:	pusha  
  410611:	popf   
  410612:	cdq    
  410613:	aad    0xd9
  410615:	xor    dh,BYTE PTR [eax-0x369f20c8]
  41061b:	cdq    
  41061c:	adc    ah,BYTE PTR [ecx]
  41061e:	mov    ebx,0x8a60aafc
  410623:	mov    dh,0xeb
  410625:	xchg   edi,eax
  410626:	mov    bl,0x93
  410628:	dec    ecx
  410629:	sub    dh,bh
  41062b:	add    ecx,DWORD PTR [esi+0x2e]
  41062e:	mov    bh,0x19
  410630:	add    BYTE PTR [ebp-0x2f],ah
  410633:	xchg   DWORD PTR [ecx],eax
  410635:	or     al,0x5b
  410637:	pmuludq mm1,QWORD PTR [edx-0x664dab8d]
  41063e:	push   ss
  41063f:	inc    edx
  410640:	adc    ebx,DWORD PTR [esi]
  410642:	cmp    al,0xcc
  410644:	pop    ebx
  410645:	(bad)  
  410646:	cdq    
  410647:	in     eax,0x65
  410649:	shl    DWORD PTR [edi+0x4a834073],1
  41064f:	xor    dl,cl
  410651:	jge    0x410600
  410653:	gs in  al,dx
  410655:	in     al,0x8c
  410657:	cmp    BYTE PTR [esi],al
  410659:	jg     0x41065e
  41065b:	ins    DWORD PTR es:[edi],dx
  41065c:	in     al,0x1b
  41065e:	and    DWORD PTR [eax],esi
  410660:	daa    
  410661:	fadd   DWORD PTR [edx]
  410664:	add    al,0x46
  410666:	mov    bl,BYTE PTR [ebp+0x670b0335]
  41066c:	repz lea ebx,[ecx+0x3f3ef907]
  410673:	or     ebx,DWORD PTR [edi+0xdfc8eff]
  410679:	xchg   esp,eax
  41067a:	fist   DWORD PTR [edx-0x7f]
  41067d:	add    edi,0x851b1e55
  410683:	retf   
  410684:	(bad)  
  410685:	rcr    BYTE PTR [ebp+ebp*4+0x29],1
  410689:	lods   al,BYTE PTR ds:[esi]
  41068a:	gs xor al,0xc7
  41068d:	imul   esp,DWORD PTR [ebx+ecx*8+0x1266635b],0x78
  410695:	jmp    0x4106db
  410697:	imul   ebx,DWORD PTR cs:[eax-0x141f3758],0x9b36baa8
  4106a2:	xor    eax,0x65ac564d
  4106a7:	xor    ecx,DWORD PTR [ebx-0x5d]
  4106aa:	or     DWORD PTR [eax+0x71],esi
  4106ad:	and    eax,0xa68b5a67
  4106b2:	xor    DWORD PTR [ebx-0x7acf3ac3],ebx
  4106b8:	add    BYTE PTR [ebp+0x2e9bbb7],bh
  4106be:	add    BYTE PTR [edi+0x673122c5],cl
  4106c4:	scas   eax,DWORD PTR es:[edi]
  4106c5:	sti    
  4106c6:	fs std 
  4106c8:	xchg   ecx,eax
  4106c9:	lock pop eax
  4106cb:	push   ebp
  4106cc:	and    DWORD PTR [edx-0x79],ecx
  4106cf:	fmul   DWORD PTR [edi]
  4106d1:	fs popf 
  4106d3:	pop    eax
  4106d4:	inc    ebx
  4106d5:	out    dx,al
  4106d6:	cmp    ecx,DWORD PTR [edx-0x21]
  4106d9:	in     al,dx
  4106da:	mov    edx,0xd25ea1f4
  4106df:	inc    ebp
  4106e0:	jecxz  0x4106d2
  4106e2:	leave  
  4106e3:	mov    ecx,0x427bc33
  4106e8:	add    dh,BYTE PTR [eax+0x19]
  4106eb:	xor    BYTE PTR [ebx+0x1d],al
  4106ee:	xchg   BYTE PTR [edi],ah
  4106f0:	in     al,dx
  4106f1:	stos   BYTE PTR es:[edi],al
  4106f2:	and    DWORD PTR [ebx],0x47
  4106f5:	popa   
  4106f6:	xchg   ebp,eax
  4106f7:	lahf   
  4106f8:	retf   0xacd
  4106fb:	sbb    BYTE PTR [esi+0x2a967aef],dl
  410701:	test   al,0xca
  410703:	add    esp,ebp
  410705:	cmc    
  410706:	and    ebp,esi
  410708:	frstor [eax]
  41070a:	std    
  41070b:	les    ebp,FWORD PTR [ecx-0x35b6d387]
  410711:	inc    ecx
  410712:	xchg   BYTE PTR [esp+edi*2-0x3c],ah
  410716:	mov    cl,0x32
  410718:	unpcklps xmm2,XMMWORD PTR [ebx-0x2a]
  41071c:	sub    al,dl
  41071e:	lods   eax,DWORD PTR ds:[esi]
  41071f:	stc    
  410720:	mov    ecx,0x9bed6c7
  410725:	out    0x50,al
  410727:	scas   eax,DWORD PTR es:[edi]
  410728:	and    ch,BYTE PTR es:[edx+0x6b923511]
  41072f:	xchg   edx,eax
  410730:	push   ecx
  410731:	inc    edx
  410732:	mov    ecx,0xa936f81
  410737:	push   es
  410738:	xor    al,0x45
  41073a:	or     BYTE PTR [edi-0x51],cl
  41073d:	test   BYTE PTR [ebx],0xd7
  410740:	sbb    dl,BYTE PTR [ebx+0x5a]
  410743:	jl     0x4106e4
  410745:	inc    esi
  410746:	pop    eax
  410747:	fwait
  410748:	aaa    
  410749:	fs xchg esi,eax
  41074b:	mov    DWORD PTR [ecx-0x205ac9b2],esp
  410751:	fisttp DWORD PTR [edi+ebp*4-0x18a47392]
  410758:	mov    edx,0xa3525218
  41075d:	xor    BYTE PTR [eax-0x1a],0xd1
  410761:	fsubr  DWORD PTR [edi]
  410763:	add    al,0x65
  410765:	sbb    al,0x98
  410768:	dec    esp
  410769:	sub    bh,dh
  41076b:	push   edx
  41076c:	sub    BYTE PTR [esi+0x49],al
  41076f:	pushf  
  410770:	js     0x41076c
  410772:	pop    ebp
  410773:	icebp  
  410774:	pop    ecx
  410775:	fadd   QWORD PTR [esi+0x7a]
  410778:	xchg   ecx,eax
  410779:	pop    ebp
  41077a:	cmp    eax,0xe0ef83ba
  41077f:	ret    0x9ef9
  410782:	dec    esp
  410783:	not    DWORD PTR [eax+0x5c2b0579]
  410789:	push   esp
  41078a:	in     al,0xb9
  41078c:	in     eax,dx
  41078d:	or     bp,WORD PTR [ecx-0xa]
  410791:	mov    ah,0xec
  410793:	cmp    dh,BYTE PTR [edi+0x4e]
  410796:	mov    eax,ds:0x56230df0
  41079b:	xchg   esi,eax
  41079c:	push   esi
  41079d:	nop
  41079e:	enter  0x9284,0x46
  4107a2:	adc    BYTE PTR [eax-0x7a5f0e3b],bh
  4107a8:	fild   DWORD PTR [eax+0x7f]
  4107ab:	and    ecx,edx
  4107ad:	inc    esi
  4107ae:	retf   0xd852
  4107b1:	xor    edi,esi
  4107b3:	and    DWORD PTR [ecx-0x19],0xd6f6dce
  4107ba:	fisub  WORD PTR [ebp+0x2d359c8a]
  4107c0:	mov    ds:0x298bfa8a,eax
  4107c5:	std    
  4107c6:	jnp    0x4107f0
  4107c8:	popf   
  4107c9:	rcl    BYTE PTR [edx+0x7c],0x4d
  4107cd:	cdq    
  4107ce:	mov    ds:0xb4390e01,al
  4107d3:	mov    WORD PTR [esi+esi*1],?
  4107d6:	mov    al,0x5e
  4107d8:	int    0x1c
  4107da:	pusha  
  4107db:	inc    eax
  4107dc:	jl     0x410855
  4107de:	add    dl,BYTE PTR [edi+0x2a]
  4107e1:	and    esp,ebp
  4107e3:	dec    ecx
  4107e4:	rol    esi,0x72
  4107e7:	mov    ebp,0x7fbb344a
  4107ec:	imul   edi,edi,0xa4e64456
  4107f2:	push   esi
  4107f3:	enter  0x762d,0x94
  4107f7:	adc    BYTE PTR [ebx-0x2b],ch
  4107fa:	neg    DWORD PTR [edi+0xeda30d8]
  410800:	adc    dh,BYTE PTR [esp+ebp*4+0x28a663e0]
  410807:	popa   
  410808:	mov    eax,ds:0x6644451c
  41080d:	add    WORD PTR [edi+0x65],sp
  410811:	(bad)  
  410813:	push   cs
  410814:	popa   
  410815:	pop    es
  410816:	pcmpgtw mm0,QWORD PTR [edx]
  410819:	jmp    0xf37c819a
  41081e:	xlat   BYTE PTR ds:[ebx]
  41081f:	mov    al,0xc8
  410821:	mov    BYTE PTR [eax+0x35],bl
  410824:	ins    DWORD PTR es:[edi],dx
  410825:	cmp    edx,DWORD PTR [ecx]
  410827:	nop
  410828:	mov    ebx,0xd7c1c9cd
  41082d:	or     ecx,esp
  41082f:	mov    al,ds:0xd150aca1
  410834:	mov    bl,0x93
  410836:	xor    DWORD PTR [edx],0xffffffdc
  410839:	pop    ecx
  41083a:	lds    edi,FWORD PTR [edx-0x57]
  41083d:	pop    edi
  41083e:	sub    ah,bl
  410840:	les    ebx,FWORD PTR [edx+0x39ef0c53]
  410846:	or     esi,0x992d4fd5
  41084c:	adc    dl,BYTE PTR [esi]
  41084e:	js     0x4107d9
  410850:	or     eax,0x769f3022
  410855:	cli    
  410856:	mov    edx,0xe9f891eb
  41085b:	jl     0x4108b9
  41085d:	add    BYTE PTR [edx+0x7b],bl
  410860:	scas   eax,DWORD PTR es:[edi]
  410861:	leave  
  410862:	(bad)  
  410864:	mov    al,0xfd
  410866:	cwde   
  410867:	cli    
  410868:	ds or  bh,0xca
  41086c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41086d:	dec    ecx
  41086e:	mov    ebx,0xb6131d
  410873:	pushf  
  410874:	mov    edx,fs
  410876:	mov    eax,0xd3f47ee7
  41087b:	ret    
  41087c:	inc    esp
  41087d:	in     eax,dx
  41087e:	pushf  
  41087f:	mov    ebx,0x774329de
  410884:	fcomip st,st(7)
  410886:	and    ebp,edi
  410888:	not    BYTE PTR [ebx+edx*1+0x1d1c9269]
  41088f:	(bad)  
  410890:	sbb    BYTE PTR [ebx+0x3b2816cb],bl
  410896:	pop    ds
  410897:	sub    BYTE PTR [ecx+0x47],bl
  41089a:	out    dx,al
  41089b:	(bad)  
  41089d:	hlt    
  41089e:	jae    0x410881
  4108a0:	dec    edx
  4108a1:	popf   
  4108a2:	or     dh,al
  4108a4:	(bad)
  4108a8:	xor    eax,0xacd46cd0
  4108ad:	retf   
  4108ae:	inc    esi
  4108af:	push   ebp
  4108b0:	call   0xd3f4:0x150e13f
  4108b7:	sub    cl,BYTE PTR ds:[eax+0x6453199a]
  4108be:	call   0x48e1:0xa5836696
  4108c5:	mov    cl,0xb4
  4108c7:	test   esi,ecx
  4108c9:	imul   ebx,DWORD PTR [ebp-0x52fb8a05],0xffffffae
  4108d0:	fucomip st,st(6)
  4108d2:	shr    ebp,0xba
  4108d5:	(bad)  
  4108d6:	xchg   ebx,eax
  4108d7:	mov    ds:0xa2a7db68,eax
  4108dc:	lahf   
  4108dd:	adc    eax,0xe0a3b122
  4108e2:	inc    eax
  4108e3:	xchg   edi,eax
  4108e4:	sbb    ebp,esi
  4108e6:	fs and al,0x1b
  4108e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108ea:	repnz and eax,0x5d489008
  4108f0:	mov    DWORD PTR [eax+0x53],esp
  4108f3:	inc    edi
  4108f4:	lahf   
  4108f5:	fbld   TBYTE PTR [ecx]
  4108f7:	(bad)  
  4108f8:	ja     0x4108da
  4108fa:	loopne 0x4108fd
  4108fc:	arpl   si,bp
  4108fe:	cmp    ebp,DWORD PTR [esi-0x6597f8f8]
  410904:	popa   
  410905:	xor    dl,BYTE PTR [edi]
  410907:	dec    ebp
  410908:	icebp  
  410909:	(bad)  [bx+si]
  41090c:	frstor [ebx]
  41090e:	fidivr DWORD PTR [ecx-0x2b]
  410911:	dec    edi
  410912:	fsub   DWORD PTR [eax+eiz*8+0x72724b45]
  410919:	adc    esi,edi
  41091b:	mov    ebx,0x48ffeac8
  410920:	loop   0x4108cc
  410922:	ins    BYTE PTR es:[edi],dx
  410923:	mov    bh,0x57
  410925:	jno    0x41095e
  410927:	cmc    
  410928:	and    edx,esi
  41092a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41092b:	push   esp
  41092c:	shr    BYTE PTR [ecx-0x11],0xa5
  410930:	mov    bh,0xd2
  410932:	inc    edx
  410933:	add    eax,0xaa3b34cd
  410938:	aas    
  410939:	xor    BYTE PTR [edx+0x5e76d72f],bl
  41093f:	repz mov esp,0x3f896319
  410945:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410946:	in     eax,dx
  410947:	enter  0xa551,0x53
  41094b:	or     eax,0xc06b4e32
  410950:	mov    dl,0x46
  410952:	aas    
  410953:	mov    ds:0x5d0c6c29,eax
  410958:	mov    DWORD PTR [esi],edi
  41095a:	push   ecx
  41095b:	in     al,dx
  41095c:	popa   
  41095d:	sub    al,0x42
  41095f:	mov    esi,0x4cf0a58d
  410964:	dec    ebx
  410965:	pop    ss
  410966:	cmp    eax,0xdc0744ad
  41096b:	mov    esi,0xa065ea03
  410970:	and    eax,0xa90371e2
  410975:	ins    BYTE PTR es:[edi],dx
  410976:	mov    WORD PTR cs:[esi+eiz*2],?
  41097a:	imul   esp,DWORD PTR [ebp+0x69],0xfffffffb
  41097e:	jmp    0xfb1c0af5
  410983:	xchg   edi,eax
  410984:	jecxz  0x4109c3
  410986:	xchg   edx,eax
  410987:	push   ecx
  410988:	sub    al,0xe1
  41098a:	mov    bh,0x75
  41098c:	int    0x79
  41098e:	and    esi,0x1e
  410991:	loop   0x410931
  410993:	inc    ebx
  410994:	adc    DWORD PTR [ecx],esi
  410996:	scas   eax,DWORD PTR es:[edi]
  410997:	loope  0x410966
  410999:	loop   0x4109a8
  41099b:	lea    edi,[ebx+0x11]
  41099e:	fwait
  41099f:	addr16 aam 0x3a
  4109a2:	fist   DWORD PTR [esi-0x3b]
  4109a5:	xor    edi,edx
  4109a7:	aad    0xf
  4109a9:	jecxz  0x4109ee
  4109ab:	into   
  4109ac:	adc    BYTE PTR [ebp-0x3d],0x18
  4109b0:	mov    cl,0xfb
  4109b2:	sub    edi,DWORD PTR [esi]
  4109b4:	outs   dx,BYTE PTR ds:[esi]
  4109b5:	jns    0x410a00
  4109b7:	loopne 0x410989
  4109b9:	shl    DWORD PTR [ebp+edx*2+0x2e],cl
  4109bd:	adc    al,0x27
  4109bf:	adc    esp,DWORD PTR [ebx-0x28b5877d]
  4109c5:	fsubr  DWORD PTR [ebx]
  4109c7:	jle    0x410a1d
  4109c9:	sub    ah,BYTE PTR [eax-0x5cd89293]
  4109cf:	lods   al,BYTE PTR ds:[esi]
  4109d0:	retf   
  4109d1:	push   0xfffffff4
  4109d3:	inc    edx
  4109d4:	inc    edi
  4109d5:	sub    ch,BYTE PTR [edx]
  4109d7:	add    cl,BYTE PTR ss:[ebx+0x48]
  4109db:	push   esp
  4109dc:	push   edx
  4109dd:	add    eax,0xaabd22fe
  4109e2:	mov    ds:0xcbc18ffe,al
  4109e7:	cld    
  4109e8:	ret    
  4109e9:	test   BYTE PTR [ecx],dl
  4109eb:	repz arpl bx,si
  4109ee:	fisttp QWORD PTR [edi-0x4]
  4109f1:	cdq    
  4109f2:	cmp    bl,ch
  4109f4:	ins    BYTE PTR es:[edi],dx
  4109f5:	outs   dx,BYTE PTR ds:[esi]
  4109f6:	add    esp,ecx
  4109f8:	les    ebp,FWORD PTR [ecx-0x14652e11]
  4109fe:	add    eax,0x25ce09e3
  410a03:	sbb    edx,DWORD PTR [edx]
  410a05:	ja     0x410a39
  410a07:	pop    ebp
  410a08:	scas   eax,DWORD PTR es:[edi]
  410a09:	sbb    DWORD PTR [esi+0x13],0x57
  410a0d:	xchg   ebx,eax
  410a0e:	jge    0x410a03
  410a10:	jbe    0x4109ed
  410a12:	call   0xb3388cbf
  410a17:	in     al,dx
  410a18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a19:	xor    eax,0x64c65acc
  410a1e:	mov    ebp,0x8aae3c08
  410a23:	aam    0xe6
  410a25:	scas   eax,DWORD PTR es:[edi]
  410a26:	push   esp
  410a27:	jmp    0xd9ca491
  410a2c:	int    0xca
  410a2e:	sti    
  410a2f:	std    
  410a30:	dec    edx
  410a31:	cld    
  410a32:	mov    al,BYTE PTR [edi+0x208056b2]
  410a38:	(bad)  
  410a39:	push   0x62a33225
  410a3e:	sbb    eax,0x12b4bd95
  410a43:	mov    ds:0x1ef0158f,eax
  410a48:	inc    ebx
  410a49:	mov    al,ds:0xf049d5b2
  410a4e:	popa   
  410a4f:	data16 mov WORD PTR [eax+edi*2-0x163c4b55],gs
  410a57:	dec    ebp
  410a58:	jg     0x410a1d
  410a5a:	in     al,dx
  410a5b:	imul   eax,esp,0xffffff98
  410a5e:	fld    TBYTE PTR [eax]
  410a60:	sbb    ebp,DWORD PTR [eax+0x33f583d]
  410a66:	push   edi
  410a67:	or     BYTE PTR [ecx-0x70],ch
  410a6a:	adc    al,0x29
  410a6c:	call   FWORD PTR [eax-0x495d18a7]
  410a72:	sbb    al,0x5c
  410a74:	dec    ecx
  410a75:	out    0x38,al
  410a77:	in     eax,0xc6
  410a79:	mul    BYTE PTR [edi]
  410a7b:	xchg   BYTE PTR [ecx+0x3e5004a1],dh
  410a81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a82:	xsha256 (bad)
  410a83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a84:	adc    ebx,edx
  410a86:	sub    esp,eax
  410a88:	and    ebp,ecx
  410a8a:	inc    edx
  410a8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a8c:	inc    edi
  410a8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a8e:	xor    BYTE PTR [edx+ebp*1-0x49046c15],0xa
  410a96:	push   ecx
  410a97:	add    bl,BYTE PTR [ebx+0x45]
  410a9a:	push   edi
  410a9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a9c:	add    ebx,DWORD PTR [eax-0x1]
  410a9f:	outs   dx,DWORD PTR es:[esi]
  410aa1:	pushf  
  410aa2:	test   BYTE PTR [ebp+0x67],bl
  410aa5:	stc    
  410aa6:	(bad)  
  410aa7:	or     edi,DWORD PTR [ecx+0x6cf5b8a9]
  410aad:	out    dx,al
  410aae:	outs   dx,BYTE PTR ds:[esi]
  410aaf:	daa    
  410ab0:	mov    ebp,0x1544b9aa
  410ab5:	jno    0x410b1c
  410ab7:	mov    fs,WORD PTR [ebp+esi*8+0x1033642b]
  410abe:	cmp    bl,dh
  410ac0:	stos   BYTE PTR es:[edi],al
  410ac1:	stos   DWORD PTR es:[edi],eax
  410ac2:	cmc    
  410ac3:	fcom   QWORD PTR [esi]
  410ac5:	and    BYTE PTR [ebx-0x530d34b6],0x3a
  410acc:	pop    esi
  410acd:	inc    esp
  410ace:	adc    BYTE PTR [ecx],cl
  410ad0:	xor    BYTE PTR [esi-0x38],0xc0
  410ad4:	(bad)
  410ad7:	inc    edi
  410ad8:	pop    ss
  410ad9:	push   0xb735e156
  410ade:	iret   
  410adf:	das    
  410ae0:	out    0x24,eax
  410ae2:	test   BYTE PTR [esi-0x69bfe359],bl
  410ae8:	ret    
  410ae9:	bsf    eax,DWORD PTR [ecx-0x239ecdee]
  410af0:	sbb    al,0x39
  410af2:	mov    dl,0x57
  410af4:	jp     0x410b25
  410af6:	(bad)  
  410af7:	stos   DWORD PTR es:[edi],eax
  410af8:	mov    cl,BYTE PTR ds:0xf3a3
  410afd:	jmp    0x410acc
  410aff:	push   eax
  410b00:	popf   
  410b01:	sub    esi,DWORD PTR [ecx+edi*8-0x79]
  410b05:	pop    esi
  410b06:	mov    gs,edi
  410b08:	out    0x4,al
  410b0a:	sbb    eax,0xf004cf2f
  410b0f:	shl    BYTE PTR [esi],0x93
  410b12:	mov    ebp,0xf0893d58
  410b17:	data16 aam 0xd3
  410b1a:	shl    DWORD PTR [eax-0x6],1
  410b1d:	aam    0x95
  410b1f:	dec    edx
  410b20:	mov    ds:0x44e124be,al
  410b25:	mov    ebx,0xe8b7d312
  410b2a:	sub    BYTE PTR [ebp-0x5f26eada],0x64
  410b31:	and    bh,0x12
  410b34:	add    al,0x92
  410b36:	cmp    bh,BYTE PTR [bp+di+0x7]
  410b3a:	jnp    0x410b12
  410b3c:	xchg   ebp,eax
  410b3d:	inc    ebp
  410b3e:	popa   
  410b3f:	push   ss
  410b40:	packsswb mm3,mm5
  410b43:	pop    es
  410b44:	and    al,0xc1
  410b46:	call   0x2ca8:0xe40b95e8
  410b4d:	shl    BYTE PTR [edx-0x2],0xb0
  410b51:	add    al,0x79
  410b53:	aam    0xf3
  410b55:	mov    cl,0xa1
  410b57:	xchg   ebx,eax
  410b58:	(bad)  
  410b59:	aam    0xe1
  410b5b:	sbb    eax,0x81edb2bd
  410b60:	lahf   
  410b61:	pop    esp
  410b63:	repz xchg ebx,eax
  410b65:	mov    ch,0x0
  410b67:	push   eax
  410b68:	add    dh,dh
  410b6a:	fnstsw WORD PTR [ecx+0x31eb45b9]
  410b70:	inc    edx
  410b71:	rcr    edi,cl
  410b73:	sbb    eax,DWORD PTR [edx-0x5038d7e4]
  410b79:	cmp    BYTE PTR [edi+edi*4-0x395237b5],ah
  410b80:	jle    0x410bde
  410b82:	jno    0x410b8b
  410b84:	nop
  410b85:	(bad)  
  410b86:	rcr    DWORD PTR [edx],1
  410b88:	imul   esi,DWORD PTR [edx-0x3000de1b],0x58
  410b8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b90:	add    bl,BYTE PTR [eax-0x3e670017]
  410b96:	xchg   BYTE PTR ds:0x83feabdb,bh
  410b9c:	mov    ds:0xd72a6970,eax
  410ba1:	enter  0xd2,0x74
  410ba5:	jno    0x410be3
  410ba7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ba8:	scas   al,BYTE PTR es:[edi]
  410ba9:	ja     0x410ba4
  410bab:	fucomi st,st(1)
  410bad:	stc    
  410bae:	(bad)  [edi+edx*1]
  410bb1:	add    eax,0x9e40db10
  410bb6:	or     eax,0xbd5a2f94
  410bbb:	mov    ebp,0xc6008fd8
  410bc0:	pop    ebp
  410bc1:	std    
  410bc2:	cld    
  410bc3:	and    cl,BYTE PTR [ecx-0x603cdfc6]
  410bc9:	xchg   esi,eax
  410bca:	xchg   esp,eax
  410bcb:	sbb    eax,0xbb4ba764
  410bd0:	stos   DWORD PTR es:[edi],eax
  410bd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bd2:	or     DWORD PTR [ebx+0x2],esi
  410bd5:	inc    esp
  410bd6:	push   edx
  410bd7:	mov    bl,0xbc
  410bd9:	cdq    
  410bda:	std    
  410bdb:	add    al,0x21
  410bdd:	xchg   edi,eax
  410bde:	(bad)  
  410bdf:	mov    dl,0x6
  410be1:	mov    ah,0xab
  410be3:	mov    ch,0xbe
  410be5:	jecxz  0x410b78
  410be7:	lods   eax,DWORD PTR ds:[esi]
  410be8:	daa    
  410be9:	xor    eax,0xd81867bb
  410bee:	aas    
  410bef:	and    eax,0xaef2d3e3
  410bf4:	jmp    0x74a2:0x9df0079c
  410bfb:	or     eax,0x681a0fd9
  410c00:	push   esi
  410c01:	shr    dl,0x93
  410c04:	repz out dx,eax
  410c06:	push   0x54
  410c08:	loope  0x410be7
  410c0a:	mov    eax,es
  410c0c:	mov    dh,BYTE PTR [edx]
  410c0e:	pushf  
  410c0f:	not    BYTE PTR [edx+0x38]
  410c12:	xor    al,0xc3
  410c14:	aaa    
  410c15:	mov    WORD PTR [edi-0x52],es
  410c18:	pop    edx
  410c19:	sbb    al,0x33
  410c1b:	xor    BYTE PTR [edx+eiz*8+0x1e],ah
  410c1f:	outs   dx,BYTE PTR ds:[esi]
  410c20:	cwde   
  410c21:	sub    eax,0x52c41d28
  410c26:	cld    
  410c27:	jle    0x410bb2
  410c29:	gs inc esi
  410c2b:	(bad)  
  410c2c:	adc    eax,0x6a0ada9c
  410c31:	jp     0x410c2d
  410c33:	adc    cl,BYTE PTR [ebx+edi*2]
  410c36:	mov    ch,0x61
  410c38:	ins    DWORD PTR es:[edi],dx
  410c39:	shl    BYTE PTR [ebp+0xa936a22],cl
  410c3f:	cmp    DWORD PTR [ebx+edi*1],0xffffff9b
  410c43:	lock ss inc esp
  410c46:	imul   ebp,DWORD PTR [ebp+0x6cd1f2f4],0x7d7d6f06
  410c50:	xor    DWORD PTR [eax-0x14],eax
  410c53:	mov    dl,0x97
  410c55:	cli    
  410c56:	test   BYTE PTR [eax],bl
  410c58:	ins    BYTE PTR es:[edi],dx
  410c59:	sbb    DWORD PTR [esi+0x77],edi
  410c5c:	adc    eax,0x7280ac08
  410c61:	mov    ah,0x50
  410c63:	pop    edi
  410c64:	pop    ecx
  410c65:	rcl    ah,cl
  410c67:	add    cl,ch
  410c69:	mov    al,ds:0xfa47c8f5
  410c6e:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c70:	aam    0xf8
  410c72:	sbb    BYTE PTR [ebx],bh
  410c74:	pop    ss
  410c75:	mov    ecx,0xd8b34786
  410c7a:	push   0x36f62336
  410c7f:	das    
  410c80:	test   eax,0x7006b90c
  410c85:	add    ebx,esp
  410c87:	loop   0x410ceb
  410c89:	test   BYTE PTR [edi],dl
  410c8b:	adc    DWORD PTR [edi-0x4b],esp
  410c8e:	mov    bl,0xb5
  410c90:	jg     0x410c14
  410c92:	mov    cl,0x2e
  410c94:	push   ebx
  410c95:	xchg   ebx,eax
  410c96:	into   
  410c97:	and    edx,DWORD PTR [ecx+esi*8]
  410c9a:	adc    eax,0x56e30604
  410c9f:	fist   DWORD PTR [edi]
  410ca1:	adc    ebx,DWORD PTR [edx]
  410ca3:	push   ss
  410ca4:	sub    DWORD PTR [ebp-0x1d],esp
  410ca7:	push   ds
  410ca8:	xor    edx,DWORD PTR [edx-0x27]
  410cab:	jp     0x410cd3
  410cad:	push   edx
  410cae:	popf   
  410caf:	mov    esp,0x8e95e625
  410cb4:	repnz cli 
  410cb6:	enter  0x97b7,0xa7
  410cba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cbb:	inc    ebp
  410cbc:	mov    DWORD PTR [edx+0x37af1e5f],ebx
  410cc2:	dec    ebx
  410cc3:	mov    edi,0xf20762e9
  410cc8:	and    eax,0xb5f5ac15
  410ccd:	cli    
  410cce:	push   edx
  410ccf:	mov    gs,WORD PTR [esi]
  410cd1:	inc    esp
  410cd2:	mov    ecx,0xa6c15b6d
  410cd7:	sbb    ch,BYTE PTR [edx-0x19]
  410cda:	mov    bl,0x2d
  410cdc:	jo     0x410cdd
  410cde:	cli    
  410cdf:	xor    ebx,DWORD PTR [ebp+0x36]
  410ce2:	jp     0x410cc4
  410ce4:	inc    esp
  410ce5:	push   ebx
  410ce6:	lock mov bh,0xe0
  410ce9:	scas   al,BYTE PTR es:[edi]
  410cea:	enter  0xf069,0xb5
  410cee:	sub    eax,0x2695187
  410cf3:	dec    edx
  410cf4:	iret   
  410cf5:	pop    esp
  410cf6:	lahf   
  410cf7:	mov    ch,0x30
  410cf9:	dec    esp
  410cfa:	in     al,0x90
  410cfc:	nop
  410cfd:	(bad)  
  410d00:	cmp    dl,BYTE PTR [edx]
  410d02:	jbe    0x410d70
  410d04:	imul   DWORD PTR [ebx-0x70]
  410d07:	mov    ebp,0xde886a98
  410d0c:	push   esi
  410d0d:	sub    ebp,DWORD PTR [ebp+eax*1-0x477f98df]
  410d14:	adc    ebx,DWORD PTR [ebp+esi*4-0x63200457]
  410d1b:	retf   
  410d1c:	mov    BYTE PTR ds:0xffa939e2,al
  410d22:	hlt    
  410d23:	aaa    
  410d24:	int    0x3f
  410d26:	mov    eax,0xe85b648c
  410d2b:	cwde   
  410d2c:	cmc    
  410d2d:	not    dh
  410d2f:	pop    ebx
  410d30:	test   eax,0xc64961b4
  410d35:	scas   al,BYTE PTR es:[edi]
  410d36:	add    eax,DWORD PTR [esi-0x2e]
  410d39:	int3   
  410d3a:	shl    ah,cl
  410d3c:	retf   
  410d3d:	xchg   edi,eax
  410d3e:	or     eax,0xfdd208e3
  410d43:	retf   0x109
  410d46:	mov    dh,dh
  410d48:	pop    ds
  410d49:	push   0xffffffed
  410d4b:	mov    ecx,0xe8f7704e
  410d50:	fistp  QWORD PTR [edx]
  410d52:	pop    ds
  410d53:	inc    ebp
  410d54:	pop    edx
  410d55:	sub    BYTE PTR [ebx+ebx*1+0x6b],ah
  410d59:	sbb    al,0xdd
  410d5b:	mov    dl,0x57
  410d5d:	hlt    
  410d5e:	test   eax,0x2e63c3f0
  410d63:	pop    esp
  410d64:	add    DWORD PTR [edx-0x35ba0af6],0xffffff87
  410d6b:	cdq    
  410d6c:	sbb    esi,DWORD PTR [edi+ebx*8+0x10]
  410d70:	cmp    eax,0xd2f47400
  410d75:	mov    bh,0x5e
  410d77:	mov    ecx,0x7c6588b1
  410d7c:	int    0x15
  410d7e:	lods   eax,DWORD PTR ds:[esi]
  410d7f:	cmp    edi,DWORD PTR [ecx+0x35f5c11e]
  410d85:	mov    ch,0x18
  410d87:	ret    0xcb78
  410d8a:	add    eax,0x884f4ae9
  410d8f:	(bad)  [ebx+0x59]
  410d92:	cmp    BYTE PTR [ebx],0x3
  410d95:	mov    esp,0xc659548
  410d9a:	push   0x61
  410d9c:	sbb    esp,DWORD PTR [ecx-0x47]
  410d9f:	add    esp,0x35
  410da2:	dec    edi
  410da3:	jg     0x410dbd
  410da5:	leave  
  410da6:	mov    ebp,0x6692f333
  410dab:	sub    BYTE PTR [edx-0x53e46045],ch
  410db1:	mov    esp,0x23c1f744
  410db6:	mov    eax,ds:0x5db18c15
  410dbb:	test   BYTE PTR [esi-0x11dd39aa],cl
  410dc1:	jge    0x410d88
  410dc3:	xchg   ebp,eax
  410dc4:	sbb    eax,0xf7416939
  410dc9:	push   ecx
  410dca:	iret   
  410dcb:	out    dx,eax
  410dcc:	push   esp
  410dcd:	mov    ds:0x34d5cb29,eax
  410dd2:	in     eax,0x21
  410dd4:	retf   0x5562
  410dd7:	mov    fs,WORD PTR [ecx+0x2879e9d5]
  410ddd:	push   0x26
  410ddf:	adc    esi,edi
  410de1:	lock and eax,0xc0cbf1ba
  410de7:	int3   
  410de8:	mov    eax,ds:0x767a6c5c
  410ded:	jmp    0x70d4843e
  410df2:	jp     0x410db0
  410df4:	xchg   ecx,eax
  410df5:	cwde   
  410df6:	xchg   edx,eax
  410df7:	mov    edx,0xba51e4bc
  410dfc:	mov    ds:0xe0833ac,al
  410e01:	clc    
  410e02:	jg     0x410df8
  410e04:	jle    0x410e81
  410e06:	fcomp  QWORD PTR [eax+0x6c]
  410e09:	cmp    bh,BYTE PTR [edi+edi*8+0x6a20da21]
  410e10:	ffree  st(0)
  410e12:	int3   
  410e13:	sar    DWORD PTR [ebx-0x43d65ac6],cl
  410e19:	inc    eax
  410e1a:	rol    BYTE PTR [ecx],1
  410e1c:	icebp  
  410e1d:	xchg   ebx,eax
  410e1e:	cvtps2pi mm5,QWORD PTR [ecx+0x7c]
  410e22:	sar    DWORD PTR [edx],0x0
  410e25:	loope  0x410e3c
  410e27:	lods   al,BYTE PTR ds:[esi]
  410e28:	imul   BYTE PTR [ecx-0x1cc9ac40]
  410e2e:	fwait
  410e2f:	cmovp  esi,DWORD PTR [eax]
  410e32:	xchg   esp,eax
  410e33:	xchg   edi,eax
  410e34:	(bad)  
  410e35:	fld    TBYTE PTR [ebx+0x39]
  410e38:	mov    ah,0xea
  410e3a:	jl     0x410e8a
  410e3c:	or     BYTE PTR [esi],bl
  410e3e:	stos   DWORD PTR es:[edi],eax
  410e3f:	mov    dl,BYTE PTR [eax+0xf]
  410e42:	clc    
  410e43:	mov    fs:0x708ae0a8,eax
  410e49:	enter  0x550c,0x5a
  410e4d:	dec    edx
  410e4e:	cs pop ss
  410e50:	mov    ch,0xfd
  410e52:	out    dx,al
  410e53:	adc    DWORD PTR [edx-0x4485ccb9],ecx
  410e59:	and    BYTE PTR [ebx-0x20],dh
  410e5c:	into   
  410e5d:	ins    BYTE PTR es:[edi],dx
  410e5e:	push   ebp
  410e5f:	pushf  
  410e60:	addr16 xchg esi,eax
  410e62:	test   DWORD PTR [ebx],ecx
  410e64:	pop    esp
  410e65:	dec    ebx
  410e66:	sti    
  410e67:	fiadd  WORD PTR [edi]
  410e69:	mov    esi,0xf259342a
  410e6e:	push   ebp
  410e6f:	inc    ebp
  410e70:	cmp    ch,BYTE PTR [esi]
  410e72:	retf   
  410e73:	cmp    eax,DWORD PTR [esi]
  410e75:	sbb    al,0x55
  410e77:	rol    DWORD PTR [edi-0x43ff45ef],cl
  410e7d:	push   esp
  410e7e:	mov    bh,0x64
  410e80:	jmp    0x368d9b54
  410e85:	or     DWORD PTR [edx],ebp
  410e87:	sbb    eax,0x309b746
  410e8c:	push   0xcd0febdd
  410e91:	mov    ebx,0x3d616438
  410e96:	fild   WORD PTR [esi+ebx*8-0x3593c792]
  410e9d:	rol    ecx,cl
  410e9f:	push   ebp
  410ea0:	sub    BYTE PTR [edi+0x4b],cl
  410ea3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ea4:	lods   eax,DWORD PTR ds:[esi]
  410ea5:	pop    edx
  410ea6:	xor    BYTE PTR [edi+0x5f7f1137],al
  410eac:	loopne 0x410e2e
  410eae:	scas   eax,DWORD PTR es:[edi]
  410eaf:	out    dx,eax
  410eb0:	repz sub eax,0x3533bd79
  410eb6:	leave  
  410eb7:	mov    ebp,0xb71d52b7
  410ebc:	pusha  
  410ebd:	xchg   ebx,eax
  410ebe:	mov    esp,0xd1b5c90b
  410ec3:	cli    
  410ec4:	shr    bl,0x7
  410ec7:	cvtdq2ps xmm2,xmm4
  410eca:	sbb    ecx,DWORD PTR ds:[eax+0x735d9753]
  410ed1:	in     al,dx
  410ed2:	out    dx,eax
  410ed3:	aaa    
  410ed4:	push   esi
  410ed5:	pop    ebx
  410ed6:	ficomp WORD PTR [ebx-0xb7fa70f]
  410edc:	add    al,0xe4
  410ede:	fld    st(1)
  410ee0:	push   0x425535f3
  410ee5:	in     eax,0x20
  410ee7:	das    
  410ee8:	stc    
  410ee9:	addr16 pop ebp
  410eeb:	cwde   
  410eec:	inc    eax
  410eed:	scas   eax,DWORD PTR es:[edi]
  410eee:	xchg   esi,eax
  410eef:	mov    ?,WORD PTR [ecx-0x88b14ad]
  410ef5:	pop    edi
  410ef6:	jge    0x410e9d
  410ef8:	cmp    eax,0xcb042247
  410efd:	jmp    0xff42469e
  410f02:	leave  
  410f03:	cmp    BYTE PTR [ebx-0x322d5958],ch
  410f09:	push   cs
  410f0a:	mov    ds:0xef57a908,al
  410f0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f10:	arpl   WORD PTR [esi+eax*2],dx
  410f13:	mov    ebx,0xee704aaa
  410f18:	mov    al,ds:0xd420bcd0
  410f1d:	mov    al,0x42
  410f1f:	jmp    FWORD PTR [ecx-0x5b]
  410f22:	adc    DWORD PTR [ebx-0xc],0x1daf8e
  410f29:	test   BYTE PTR [ecx-0x7cb1a8ca],al
  410f2f:	dec    ecx
  410f30:	(bad)  
  410f31:	enter  0x1762,0x3d
  410f35:	sub    esi,ebp
  410f37:	push   esi
  410f38:	jmp    0x6071:0x6cca4efd
  410f3f:	xor    dl,bl
  410f41:	sbb    DWORD PTR [edx+edi*1-0x20],esp
  410f45:	jbe    0x410f9e
  410f47:	leave  
  410f48:	in     al,0x55
  410f4a:	pop    ecx
  410f4b:	and    bl,BYTE PTR [ebx+0xb]
  410f4e:	xor    DWORD PTR [edi+0x66],edi
  410f51:	xlat   BYTE PTR ds:[ebx]
  410f52:	xchg   BYTE PTR [edx-0x12],al
  410f55:	dec    edi
  410f56:	add    eax,0xcdff9c04
  410f5b:	xor    BYTE PTR [ebx+0x3fd351bf],ch
  410f61:	xchg   esi,eax
  410f62:	cmp    ch,BYTE PTR [eax+0x40230eeb]
  410f68:	inc    ecx
  410f69:	xor    al,0xe4
  410f6b:	pop    ss
  410f6c:	add    eax,0xab9a4313
  410f71:	stos   DWORD PTR es:[edi],eax
  410f72:	pop    edx
  410f73:	dec    esp
  410f74:	xchg   ebp,eax
  410f75:	jl     0x410fe8
  410f77:	cmovno ebx,DWORD PTR [ebp-0xd]
  410f7b:	sbb    dl,dl
  410f7d:	data16 out dx,al
  410f7f:	in     al,dx
  410f80:	push   esp
  410f81:	in     eax,dx
  410f82:	mov    ah,0x9
  410f84:	iret   
  410f85:	jmp    0x9943680f
  410f8a:	out    0x94,eax
  410f8c:	arpl   cx,dx
  410f8e:	mov    edx,0x15581f11
  410f93:	inc    ebp
  410f94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f95:	aaa    
  410f96:	(bad)  
  410f97:	sahf   
  410f98:	cmp    eax,DWORD PTR [ebp+0x229caf86]
  410f9e:	inc    esp
  410f9f:	sbb    cl,BYTE PTR ds:0xb73578fb
  410fa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fa6:	loopne 0x410f46
  410fa8:	fisttp DWORD PTR [edi]
  410faa:	or     cl,BYTE PTR [edx+0x3]
  410fad:	jae    0x410f7b
  410faf:	jnp    0x411004
  410fb1:	sub    BYTE PTR [edx],al
  410fb3:	dec    eax
  410fb4:	inc    eax
  410fb5:	stos   BYTE PTR es:[edi],al
  410fb6:	sub    al,0x2c
  410fb8:	dec    edx
  410fb9:	add    DWORD PTR [esi],esi
  410fbb:	xor    ebx,DWORD PTR [edi-0x31fa2ad0]
  410fc1:	in     al,dx
  410fc2:	cmc    
  410fc3:	xchg   ebp,eax
  410fc4:	xchg   ebp,eax
  410fc5:	cmp    al,0xd9
  410fc7:	pop    ss
  410fc8:	ins    DWORD PTR es:[edi],dx
  410fc9:	rcr    DWORD PTR [edx+0x6f],0xf7
  410fcd:	into   
  410fce:	xchg   DWORD PTR [ebx+esi*2+0x7bd426ef],edi
  410fd5:	push   eax
  410fd6:	in     al,0x97
  410fd8:	jmp    0x410fdb
  410fda:	lods   eax,DWORD PTR ds:[esi]
  410fdb:	mov    esp,0xe743beb6
  410fe0:	or     edx,DWORD PTR [edx+0x38b798b0]
  410fe6:	outs   dx,BYTE PTR ds:[esi]
  410fe7:	jmp    0xd82d3d62
  410fec:	lods   eax,DWORD PTR ds:[esi]
  410fed:	mov    bh,ah
  410fef:	div    DWORD PTR [edi+0x34d0f422]
  410ff5:	xchg   edx,eax
  410ff6:	test   BYTE PTR cs:[edi+0x35],cl
  410ffa:	in     eax,0xfa
  410ffc:	stos   DWORD PTR es:[edi],eax
  410ffd:	or     ch,BYTE PTR [edi]
  410fff:	pop    ebx
  411000:	les    ebx,FWORD PTR [eax]
  411002:	test   BYTE PTR [edi-0x28],al
  411005:	and    ch,BYTE PTR [eax+ecx*8+0x6132f10c]
  41100c:	jmp    0x8bfe:0x4c9942a0
  411013:	inc    ecx
  411014:	xor    DWORD PTR [ebx],ebx
  411016:	lock dec edi
  411018:	or     BYTE PTR [esi-0x53ec24bc],dl
  41101e:	sub    DWORD PTR [esi+0x18548711],edi
  411024:	inc    ecx
  411025:	outs   dx,BYTE PTR ds:[esi]
  411026:	or     DWORD PTR [edx-0x30065935],0x91f8deda
  411030:	outs   dx,DWORD PTR ds:[esi]
  411031:	outs   dx,DWORD PTR ds:[esi]
  411032:	mov    WORD PTR [eax+0x5],ss
  411035:	mov    esp,DWORD PTR [eax]
  411037:	enter  0x7bdb,0x33
  41103b:	js     0x411006
  41103d:	add    al,0x6c
  41103f:	jne    0x41106c
  411041:	adc    al,BYTE PTR [esi+0x4f4ca1ad]
  411047:	hlt    
  411048:	fcmovnb st,st(4)
  41104a:	push   0x779d60a7
  41104f:	iret   
  411050:	fwait
  411051:	jno    0x41100e
  411053:	cli    
  411054:	cmp    dl,0xe6
  411057:	cmc    
  411058:	pop    es
  411059:	leave  
  41105a:	scas   al,BYTE PTR es:[edi]
  41105b:	xchg   ecx,eax
  41105c:	mov    eax,ds:0x2539e001
  411061:	push   eax
  411062:	xor    cl,cl
  411064:	jge    0x4110d6
  411066:	fcmovnbe st,st(0)
  411068:	pop    ebx
  411069:	cs ret 0x3b00
  41106d:	das    
  41106e:	(bad)  
  41106f:	mov    cl,0xd3
  411071:	out    dx,eax
  411072:	ror    DWORD PTR [ecx+0xc],0x2e
  411076:	loop   0x411044
  411078:	mov    dl,0x52
  41107a:	xchg   ebp,eax
  41107b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41107c:	repz loop 0x411058
  41107f:	lea    ebx,[esi+0x68f3641b]
  411085:	enter  0xb3df,0xd5
  411089:	ds scas eax,DWORD PTR es:[edi]
  41108b:	call   0x7ddd:0xacab
  411091:	dec    ebp
  411092:	jg     0x41105f
  411094:	mov    BYTE PTR [ecx+eiz*8+0xb6fc49],dh
  41109b:	xchg   dl,bl
  41109d:	add    BYTE PTR [esi+0x2b],0x43
  4110a1:	in     eax,dx
  4110a2:	js     0x41104c
  4110a4:	es fwait
  4110a6:	sar    cl,1
  4110a8:	push   esp
  4110a9:	scas   al,BYTE PTR es:[edi]
  4110aa:	stos   BYTE PTR es:[edi],al
  4110ab:	out    0x2d,al
  4110ad:	int3   
  4110ae:	adc    BYTE PTR [edi+0x6c],0xa
  4110b2:	call   0x20462993
  4110b7:	and    BYTE PTR [edx-0xaf7dd32],dh
  4110bd:	xor    DWORD PTR [edi-0x5f],eax
  4110c0:	pop    ebp
  4110c1:	push   0x7e
  4110c3:	sub    BYTE PTR [ebx+0x1e28094b],al
  4110c9:	push   ebx
  4110ca:	dec    ebp
  4110cb:	das    
  4110cc:	repz fcom QWORD PTR [edi+0xf]
  4110d1:	leave  
  4110d2:	aad    0x9
  4110d4:	mov    WORD PTR [edi-0x32318f20],?
  4110da:	sub    edi,DWORD PTR [edx]
  4110dc:	mov    ds:0x6bb5d253,al
  4110e1:	test   eax,0xc3f5bd5a
  4110e6:	sbb    al,0x53
  4110e8:	adc    DWORD PTR [edx],0xffffffc6
  4110eb:	mov    ebp,0xa5e4da0e
  4110f0:	sub    ecx,DWORD PTR [eax+0x1133d652]
  4110f6:	or     BYTE PTR [ebp+0x1c],0x3c
  4110fa:	xlat   BYTE PTR ds:[ebx]
  4110fb:	jns    0x4110ae
  4110fd:	clc    
  4110fe:	inc    ebp
  4110ff:	lea    esp,[ebx+0x30]
  411102:	js     0x411148
  411104:	arpl   cx,sp
  411106:	repnz iret 
  411108:	push   edi
  411109:	mov    dh,0x61
  41110b:	mov    ah,BYTE PTR [edi+eiz*4-0x15]
  41110f:	test   eax,0x8acdc9ec
  411114:	dec    edi
  411115:	inc    esi
  411116:	push   eax
  411117:	inc    esp
  411118:	add    dl,BYTE PTR ds:0xf9d77a9d
  41111e:	aaa    
  41111f:	sub    dh,BYTE PTR ds:[ebx]
  411122:	dec    ebp
  411123:	xor    eax,0xf10c801a
  411128:	push   esp
  411129:	sbb    bl,dh
  41112b:	repnz (bad) 
  41112d:	mov    eax,ds:0x8159a099
  411132:	mov    cl,ah
  411134:	into   
  411135:	pusha  
  411136:	out    0x3c,eax
  411138:	cmp    al,0x3c
  41113a:	and    ebp,DWORD PTR [eax+0x3f]
  41113d:	jecxz  0x411124
  41113f:	loop   0x41111a
  411141:	push   ecx
  411142:	rcr    DWORD PTR [esi],cl
  411144:	sbb    BYTE PTR [eax-0x41bced11],ah
  41114a:	(bad)  
  41114b:	mov    bl,0x15
  41114d:	jb     0x411163
  41114f:	arpl   si,bp
  411151:	jg     0x4110d9
  411153:	frstor [ecx-0x62fde175]
  411159:	mov    ds:0xdcf581b4,eax
  41115e:	mov    DWORD PTR [ecx+0x25543ea4],edx
  411164:	daa    
  411165:	push   es
  411166:	outs   dx,BYTE PTR ds:[esi]
  411167:	jae    0x411179
  411169:	scas   eax,DWORD PTR es:[edi]
  41116a:	stc    
  41116b:	sub    ecx,DWORD PTR [esi-0x6f]
  41116e:	sub    ch,cl
  411170:	sub    cl,BYTE PTR [ebx+0x2a197fb1]
  411176:	jbe    0x411101
  411178:	xchg   BYTE PTR [eax+0x59],bl
  41117b:	leave  
  41117c:	push   0x25
  41117e:	mov    DWORD PTR [ebx],esi
  411180:	xchg   ecx,eax
  411181:	ds aad 0x18
  411184:	jl     0x4111ec
  411186:	push   ebp
  411187:	mov    ecx,0x8c72a801
  41118c:	into   
  41118d:	jp     0x4111bb
  41118f:	mov    esi,0x54ad3d54
  411194:	cld    
  411195:	out    dx,eax
  411196:	mov    bl,0x0
  411198:	loope  0x4111cb
  41119a:	loope  0x411152
  41119c:	addr16 inc ebp
  41119e:	xchg   ebx,eax
  41119f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111a0:	adc    al,BYTE PTR [edx]
  4111a2:	jns    0x4111e9
  4111a4:	ficom  DWORD PTR [esi-0x6e6147e5]
  4111aa:	call   0xa12d:0x657bf5ad
  4111b1:	or     DWORD PTR [edi-0x22bad4da],edx
  4111b7:	mov    ebp,0xf259d722
  4111bc:	jge    0x411238
  4111be:	clc    
  4111bf:	stos   DWORD PTR es:[edi],eax
  4111c0:	dec    esi
  4111c1:	xor    eax,0x87c6c0ca
  4111c6:	and    DWORD PTR [ebp-0x427d7056],eax
  4111cc:	sti    
  4111cd:	out    dx,eax
  4111ce:	ds push eax
  4111d0:	sar    ch,cl
  4111d2:	jg     0x41120c
  4111d4:	into   
  4111d5:	pop    ebx
  4111d6:	jl     0x411161
  4111d8:	aaa    
  4111d9:	jp     0x4111d7
  4111db:	jg     0x4111bb
  4111dd:	mov    esp,0xbc684a90
  4111e2:	jl     0x411175
  4111e4:	jbe    0x411241
  4111e6:	mov    fs,WORD PTR [edi+0x19]
  4111e9:	inc    ebx
  4111ea:	stc    
  4111eb:	cmp    bh,BYTE PTR [eax+0x573ad130]
  4111f1:	add    eax,0x73e8d9a0
  4111f6:	sub    BYTE PTR [ebx+0x76],dl
  4111f9:	loope  0x411198
  4111fb:	xchg   ebp,eax
  4111fc:	rcr    DWORD PTR [esi-0x28],cl
  4111ff:	aaa    
  411200:	mov    esp,0x4d86d12b
  411205:	ficom  DWORD PTR [edx+ecx*1]
  411208:	or     BYTE PTR [esi+eax*4],dh
  41120b:	jge    0x4111bb
  41120d:	sbb    edi,edi
  41120f:	fcomp  DWORD PTR [edi+0x1]
  411212:	div    dh
  411214:	mov    edi,0xd889b09d
  411219:	dec    ebp
  41121a:	fst    QWORD PTR [ecx-0x23]
  41121d:	adc    ch,BYTE PTR [ebx]
  41121f:	push   edx
  411220:	inc    eax
  411221:	inc    esp
  411222:	imul   ecx,DWORD PTR [edx+0x33],0x76
  411226:	cmp    al,0x3e
  411228:	cmc    
  411229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41122a:	test   al,0x60
  41122c:	push   ebx
  41122d:	pushf  
  41122e:	(bad)  
  41122f:	mov    ah,BYTE PTR [esp+ebp*1+0x5c]
  411233:	mov    ch,0x7e
  411235:	pop    ebp
  411236:	or     BYTE PTR [ebp+0x3],ah
  411239:	or     DWORD PTR [ebx+ecx*1-0x6d],eax
  41123d:	hlt    
  41123e:	pop    esi
  41123f:	pop    ecx
  411240:	lock sub al,0x69
  411243:	aam    0x15
  411245:	stos   DWORD PTR es:[edi],eax
  411246:	and    BYTE PTR [ebp+0x18],bh
  411249:	adc    edi,edx
  41124b:	ds daa 
  41124d:	or     BYTE PTR [ecx+0x1b],dh
  411250:	aaa    
  411251:	ret    0x1d47
  411254:	mov    ch,BYTE PTR [ebx]
  411256:	cdq    
  411257:	and    ecx,DWORD PTR [ebp+0x6829e509]
  41125d:	and    cl,BYTE PTR [ebx-0x1]
  411260:	pop    ss
  411261:	pop    edi
  411262:	jp     0x4112b2
  411264:	fild   WORD PTR [edx-0x1babf83c]
  41126a:	inc    edi
  41126b:	cli    
  41126c:	jp     0x4112b4
  41126e:	sahf   
  41126f:	xchg   ebx,eax
  411270:	jecxz  0x411269
  411272:	imul   eax,DWORD PTR [ebx-0x71],0xaec49b69
  411279:	sbb    DWORD PTR [eax-0x7f],esi
  41127c:	jmp    0x41124b
  41127e:	inc    esp
  41127f:	pop    ds
  411280:	shl    ah,1
  411282:	fld    DWORD PTR [eax]
  411284:	push   eax
  411285:	push   edx
  411286:	retf   0x135a
  411289:	and    ebx,DWORD PTR [edi]
  41128b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41128c:	jne    0x411282
  41128e:	sahf   
  41128f:	aaa    
  411290:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411291:	popf   
  411292:	ins    BYTE PTR es:[edi],dx
  411293:	adc    BYTE PTR [ebx-0x3f6fae7a],bh
  411299:	pop    ecx
  41129a:	sub    BYTE PTR [ebx-0x5c951bc2],ch
  4112a0:	inc    esi
  4112a1:	int    0xe
  4112a3:	mov    dh,0xf6
  4112a5:	rol    ebp,cl
  4112a7:	daa    
  4112a8:	cmc    
  4112a9:	outs   dx,BYTE PTR ds:[esi]
  4112aa:	push   0xdc4e1be0
  4112af:	adc    DWORD PTR es:[edx-0x799de672],esp
  4112b6:	(bad)  [edx-0x2070dfd6]
  4112bc:	(bad)  [eax-0x1d0fb76e]
  4112c2:	loope  0x4112d3
  4112c4:	data16 jae 0x411265
  4112c7:	hlt    
  4112c8:	fadd   st,st(7)
  4112ca:	inc    DWORD PTR [esi]
  4112cc:	rol    ebx,0x72
  4112cf:	mov    ebp,0xb129d146
  4112d4:	lock fmul QWORD PTR [eax]
  4112d7:	mov    edi,0x7b295e8d
  4112dc:	or     BYTE PTR [eax-0x51caf789],dl
  4112e2:	cmp    ebp,eax
  4112e4:	dec    edx
  4112e5:	sbb    ch,bh
  4112e7:	rol    BYTE PTR [eax-0x45],1
  4112ea:	outs   dx,BYTE PTR ds:[esi]
  4112eb:	pop    ss
  4112ec:	cli    
  4112ed:	dec    ecx
  4112ee:	scas   eax,DWORD PTR es:[edi]
  4112ef:	adc    eax,0xfd3e2cd8
  4112f4:	add    BYTE PTR [eax],bh
  4112f6:	loop   0x41133d
  4112f8:	lds    esi,FWORD PTR [edx]
  4112fa:	(bad)  
  4112fb:	push   ebp
  4112fd:	(bad)
  411300:	in     al,0xd8
  411302:	jne    0x41136c
  411304:	fst    QWORD PTR [edx-0x7ac4a368]
  41130a:	pop    edx
  41130b:	push   0xd44b36bb
  411310:	fnop   
  411312:	xor    ah,dl
  411314:	lods   eax,DWORD PTR ds:[esi]
  411315:	repz lock jbe 0x4112e9
  411319:	retf   0x9c37
  41131c:	daa    
  41131d:	lock neg eax
  411320:	loopne 0x4112f6
  411322:	push   esi
  411323:	retf   
  411324:	rol    DWORD PTR [ecx-0x649f3952],cl
  41132a:	mov    ecx,0x3bccd59b
  41132f:	lods   al,BYTE PTR ds:[esi]
  411330:	push   ebp
  411331:	(bad)  
  411332:	call   0x2460:0x472084bd
  411339:	mov    edx,0xe95beee6
  41133e:	jae    0x4113a1
  411340:	mov    edx,0xc3828168
  411345:	mov    ah,0x2b
  411347:	inc    eax
  411348:	js     0x411380
  41134a:	jle    0x4113c3
  41134c:	iret   
  41134d:	xor    eax,0x674ddf35
  411352:	mov    edx,0x89c26f50
  411357:	jae    0x41138c
  411359:	push   cs
  41135a:	and    DWORD PTR [ecx],ebx
  41135c:	cmp    ecx,DWORD PTR ds:0x24783d29
  411362:	daa    
  411363:	jp     0x4113e0
  411365:	mov    ecx,0x24898893
  41136a:	out    0x71,al
  41136c:	dec    ecx
  41136d:	push   0xffffffdb
  41136f:	mov    edx,0xc3387ad2
  411374:	cld    
  411375:	jmp    0xa2d5:0x38d8d424
  41137c:	sub    dl,BYTE PTR [edx]
  41137e:	mov    ds:0x5e9a880b,al
  411383:	bound  edx,QWORD PTR [ecx+0x23]
  411386:	or     eax,0x77a24485
  41138b:	bound  ebp,QWORD PTR [esi+0x531d47bf]
  411391:	push   cs
  411392:	and    BYTE PTR [ebx-0x33],dh
  411395:	xor    al,0xff
  411397:	shr    bh,0x9f
  41139a:	inc    ebp
  41139b:	aaa    
  41139c:	outs   dx,BYTE PTR ds:[esi]
  41139d:	(bad)  [edi+0x56]
  4113a0:	sbb    esp,DWORD PTR [eax]
  4113a2:	int3   
  4113a3:	mov    dh,BYTE PTR [ecx+0xd76c97b]
  4113a9:	xor    al,0x3
  4113ab:	nop
  4113ac:	cwde   
  4113ad:	shl    BYTE PTR [edi-0x579bdd51],0xb4
  4113b4:	pop    ds
  4113b5:	or     al,0x97
  4113b7:	fdivr  QWORD PTR [esi+edx*4]
  4113ba:	add    al,0xb7
  4113bc:	sbb    BYTE PTR [ebp-0x67],dl
  4113bf:	lock push ss
  4113c1:	cmp    ebp,DWORD PTR [edx+0xe6facb]
  4113c7:	mov    DWORD PTR [ebx],edx
  4113c9:	pop    edx
  4113ca:	mov    esp,0x82e30382
  4113cf:	inc    eax
  4113d0:	and    bh,ah
  4113d2:	xchg   DWORD PTR [ebx-0x52],ebp
  4113d5:	outs   dx,DWORD PTR ds:[esi]
  4113d6:	shr    DWORD PTR [ecx+0x2a3a9012],0x51
  4113dd:	sub    eax,0x238ea964
  4113e2:	retf   
  4113e3:	pop    esi
  4113e4:	add    al,BYTE PTR ds:0xb3d6e50a
  4113ea:	xor    ah,BYTE PTR [eax+0x4c36c8f5]
  4113f0:	mov    ds:0x966161ae,eax
  4113f5:	pand   mm3,mm3
  4113f8:	push   ds
  4113f9:	xor    BYTE PTR [ecx+0x1753f686],dl
  4113ff:	xor    BYTE PTR [ecx-0x11],bl
  411402:	xor    edi,DWORD PTR [edx+0x36]
  411405:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411406:	enter  0x393e,0xbc
  41140a:	sub    ebp,DWORD PTR [edx+0x58e1c775]
  411410:	sbb    eax,0xba079d72
  411415:	lds    edi,FWORD PTR [ecx-0x2e]
  411418:	stos   DWORD PTR es:[edi],eax
  411419:	xor    DWORD PTR [eax],esi
  41141b:	or     eax,DWORD PTR [esi]
  41141d:	pop    ss
  41141e:	js     0x4113d7
  411420:	fs inc ebx
  411422:	nop
  411423:	xchg   ebp,eax
  411424:	sar    DWORD PTR ds:0x28e2ff2e,0xd4
  41142b:	adc    esi,DWORD PTR [edi+0x18]
  41142e:	rol    BYTE PTR [esi+0x3b],1
  411431:	enter  0x2be7,0xdd
  411435:	jmp    0x5ff2d156
  41143a:	mov    edi,0xbd1ed9c
  41143f:	and    BYTE PTR [edx+eiz*1-0x7617a90c],0xfc
  411447:	add    ebx,DWORD PTR [edx+0x4e]
  41144a:	sub    bl,BYTE PTR ds:0x9f474f3a
  411450:	js     0x41148b
  411452:	xor    eax,0xedf3c71e
  411457:	mov    esp,0x47d3a126
  41145c:	sbb    dl,BYTE PTR [edi+0x6de8c361]
  411462:	cdq    
  411463:	add    bl,BYTE PTR [ebx+0x25]
  411466:	jmp    0x4113ed
  411468:	adc    DWORD PTR ds:0xecac6167,esp
  41146e:	and    al,BYTE PTR [edx]
  411470:	adc    BYTE PTR [ecx-0x1714697f],dl
  411476:	or     al,0xcf
  411478:	or     BYTE PTR [ebx],bl
  41147a:	fwait
  41147b:	push   edi
  41147c:	or     DWORD PTR ds:0x848b9c65,ecx
  411482:	outs   dx,BYTE PTR ds:[esi]
  411483:	or     al,BYTE PTR [ecx+0x64]
  411486:	sbb    eax,0x6a4732f0
  41148b:	jnp    0x411486
  41148d:	hlt    
  41148e:	xchg   edx,eax
  41148f:	sbb    eax,0xe29637c8
  411494:	jns    0x411487
  411496:	jns    0x4114a0
  411498:	add    al,0x6c
  41149a:	mov    eax,ds:0x532f740b
  41149f:	popa   
  4114a0:	inc    DWORD PTR [ebx+0x6a50851f]
  4114a6:	rcr    BYTE PTR [esi-0x4aeee082],cl
  4114ac:	inc    eax
  4114ad:	data16 jbe 0x411479
  4114b0:	sub    dl,BYTE PTR [edx]
  4114b2:	push   ss
  4114b3:	ret    0x39fa
  4114b6:	shl    BYTE PTR [ebx+0x7f],1
  4114b9:	cmp    BYTE PTR [ecx+0x4cf30539],cl
  4114bf:	xchg   esi,eax
  4114c0:	ins    BYTE PTR es:[edi],dx
  4114c1:	mov    ebx,DWORD PTR [esi+0x1feaa501]
  4114c7:	dec    ebp
  4114c8:	mov    cl,BYTE PTR [ebp+eax*1-0x6]
  4114cc:	and    DWORD PTR [ebx+0x6c],ebp
  4114cf:	xor    ecx,DWORD PTR [esi-0x291e093b]
  4114d5:	xlat   BYTE PTR ds:[ebx]
  4114d6:	outs   dx,DWORD PTR ds:[esi]
  4114d7:	icebp  
  4114d8:	cmp    ch,BYTE PTR [ebx*2-0x6d545d43]
  4114df:	aad    0x1c
  4114e1:	sbb    BYTE PTR [ecx-0x78],bh
  4114e4:	ret    
  4114e5:	mov    BYTE PTR [ebp+esi*1+0x68be9f4f],cl
  4114ec:	mov    ah,0x8d
  4114ee:	std    
  4114ef:	bound  ecx,QWORD PTR [edx]
  4114f1:	bswap  esi
  4114f3:	jp     0x4114c1
  4114f5:	cmp    bh,BYTE PTR [ebp+edx*2-0x44ef2b55]
  4114fc:	pushf  
  4114fd:	call   0xbdf7:0xdc585a2d
  411504:	mov    WORD PTR [ebx+0x1d],gs
  411507:	jno    0x411551
  411509:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41150a:	fistp  QWORD PTR [bp+di+0x12]
  41150f:	dec    ecx
  411510:	xchg   esi,eax
  411511:	(bad)  [edx]
  411513:	pusha  
  411514:	pop    edi
  411515:	test   DWORD PTR [ecx],0xcb02604d
  41151b:	pop    ss
  41151c:	ins    BYTE PTR es:[edi],dx
  41151d:	(bad)  [ebx]
  41151f:	push   edx
  411520:	je     0x4114ca
  411522:	fild   WORD PTR [esi]
  411524:	rcr    BYTE PTR [ebx-0x41],1
  411527:	sub    al,0x43
  411529:	dec    eax
  41152a:	adc    DWORD PTR [edx-0x3a],ebp
  41152d:	fsubr  DWORD PTR [edx-0x76]
  411530:	or     BYTE PTR [ebp+0xa28150b],dh
  411536:	mov    dh,0xf7
  411538:	std    
  411539:	in     al,dx
  41153a:	ret    
  41153b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41153c:	jns    0x411554
  41153e:	push   edi
  41153f:	gs jne 0x4115b4
  411542:	add    ebp,DWORD PTR [ebx+0xf]
  411545:	mov    esi,DWORD PTR [esi+esi*2]
  411548:	adc    al,0xeb
  41154a:	dec    eax
  41154b:	dec    esi
  41154c:	or     ch,BYTE PTR [esi]
  41154e:	cmp    DWORD PTR [edx+0xcd947b0],ebx
  411554:	pop    edi
  411555:	ss push ss
  411557:	lock or al,0x8
  41155a:	cmp    DWORD PTR ds:0x98bd6cfe,ebp
  411560:	dec    edi
  411561:	rcl    DWORD PTR [edi-0x9],0xb5
  411565:	push   edi
  411566:	mov    eax,0xd89aa9e9
  41156b:	add    al,0x7c
  41156d:	les    esp,FWORD PTR [esi-0x351aa574]
  411573:	add    DWORD PTR [ebx+esi*1-0x6ba041aa],ebx
  41157a:	jbe    0x41152c
  41157c:	mov    edx,DWORD PTR [ebp-0x3e]
  41157f:	jae    0x411596
  411581:	fisubr WORD PTR [ebx-0xd]
  411584:	mov    dh,0x6f
  411586:	enter  0xa3a4,0x7b
  41158a:	gs sub esp,ecx
  41158d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41158e:	test   eax,0x35f0aa6e
  411593:	cs cmc 
  411595:	pop    esp
  411596:	jno    0x41153d
  411598:	cmp    dl,bl
  41159a:	fldcw  WORD PTR [ecx*2-0xc3b4df]
  4115a1:	arpl   WORD PTR [ebx+0x11dc69bc],di
  4115a7:	jnp    0x4115e2
  4115a9:	fiadd  DWORD PTR [esi+0x27]
  4115ac:	mov    ds,WORD PTR [esi]
  4115ae:	sbb    ch,bh
  4115b0:	rcpps  xmm6,XMMWORD PTR [edi-0x66]
  4115b4:	jbe    0x411556
  4115b6:	jnp    0x411566
  4115b8:	xor    BYTE PTR [ebp+0x2f0b1081],ah
  4115be:	cmp    edx,DWORD PTR [edi+0x6e]
  4115c1:	retf   0x50e5
  4115c4:	pop    ebx
  4115c5:	jae    0x41163f
  4115c7:	in     al,0x2a
  4115c9:	out    dx,al
  4115ca:	cmp    ah,BYTE PTR [edx-0x7c]
  4115cd:	sub    al,0xae
  4115cf:	push   0xdfe1729
  4115d4:	call   0xef3ccbb0
  4115d9:	les    esp,FWORD PTR [ebp+0x7a]
  4115dc:	jb     0x411636
  4115de:	jnp    0x4115e1
  4115e0:	or     al,0xb0
  4115e2:	add    bl,bl
  4115e4:	ja     0x4115e5
  4115e6:	sub    BYTE PTR [edx-0x72846f34],dl
  4115ec:	cmp    DWORD PTR [esi+ecx*8-0x1a],eax
  4115f0:	cmp    eax,0x265cd0b2
  4115f5:	(bad)  
  4115f6:	iret   
  4115f7:	jge    0x411615
  4115f9:	lods   al,BYTE PTR ds:[esi]
  4115fa:	(bad)  
  4115fb:	sar    DWORD PTR [esi-0x1b],1
  4115fe:	out    0xbf,al
  411600:	mov    WORD PTR [ebp+0x35],?
  411603:	inc    ecx
  411604:	call   0x52e01972
  411609:	add    dh,BYTE PTR [eax+0x7bd28f97]
  41160f:	sahf   
  411610:	jmp    0x216ae36d
  411615:	or     BYTE PTR [ecx-0x5e],cl
  411618:	or     bl,BYTE PTR [edi-0x518a096d]
  41161e:	inc    ecx
  41161f:	jo     0x4115d7
  411621:	mov    eax,ds:0xe6ba826f
  411626:	int    0x77
  411628:	cmp    BYTE PTR [edi],0x92
  41162b:	cmc    
  41162c:	sbb    al,BYTE PTR [ebx]
  41162e:	sub    bl,BYTE PTR [edx+0x71]
  411631:	hlt    
  411632:	mov    al,ds:0xa43270f9
  411637:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411638:	pop    ebp
  411639:	jp     0x41163c
  41163b:	xor    bh,BYTE PTR [esi-0x3494a744]
  411641:	dec    esi
  411642:	int3   
  411643:	xchg   edx,eax
  411644:	lods   al,BYTE PTR ds:[esi]
  411645:	in     al,dx
  411646:	push   eax
  411647:	push   ss
  411648:	jae    0x41163c
  41164a:	mov    DWORD PTR [ecx+0x6cd30383],eax
  411650:	maxps  xmm7,xmm0
  411653:	repnz in al,0xf8
  411656:	adc    al,0x8
  411658:	xchg   DWORD PTR [ebx],edi
  41165a:	mov    ecx,0xf6c625ba
  41165f:	and    edi,DWORD PTR [ebp-0x3ce08933]
  411665:	es xchg esi,eax
  411667:	xlat   BYTE PTR ds:[ebx]
  411668:	fwait
  411669:	push   ebp
  41166a:	add    cl,BYTE PTR [ebx-0x6e]
  41166d:	push   eax
  41166e:	mov    edi,0xf5cd7716
  411673:	(bad)  
  411674:	cmp    BYTE PTR [eax+0x3c],ch
  411677:	cmc    
  411678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411679:	fcom   QWORD PTR [ebx+0x14137776]
  41167f:	scas   eax,DWORD PTR es:[edi]
  411680:	xor    DWORD PTR [esi+0x59736b1],esi
  411686:	(bad)
  411689:	xchg   edi,eax
  41168a:	sbb    BYTE PTR [edi-0x45],dl
  41168d:	or     eax,0xf26f0b9f
  411692:	push   edx
  411693:	xchg   DWORD PTR [ecx-0x8065874],edi
  411699:	out    dx,al
  41169a:	loopne 0x4116f9
  41169c:	retf   
  41169d:	mov    ds:0xb794ac1,al
  4116a2:	cmp    DWORD PTR [esi],eax
  4116a4:	shl    al,0xd1
  4116a7:	sti    
  4116a8:	addr16 out dx,al
  4116aa:	mov    eax,ds:0x7a1936b0
  4116af:	mov    cl,0x97
  4116b1:	jbe    0x411701
  4116b3:	call   0x689b:0x88bcc565
  4116ba:	outs   dx,BYTE PTR ss:[esi]
  4116bc:	jo     0x4116ac
  4116be:	call   0x2bb65124
  4116c3:	inc    ebx
  4116c4:	and    cl,BYTE PTR [esi-0x149e57c3]
  4116ca:	adc    DWORD PTR [ecx],edi
  4116cc:	nop
  4116cd:	sub    eax,0x7fa595c6
  4116d2:	fisttp QWORD PTR [esi+0x3f]
  4116d5:	cmp    DWORD PTR [eax],edi
  4116d7:	sbb    BYTE PTR [eax-0x62],dl
  4116da:	stos   BYTE PTR es:[edi],al
  4116db:	lahf   
  4116dc:	outs   dx,DWORD PTR ds:[esi]
  4116dd:	mov    ch,0xfa
  4116df:	popf   
  4116e0:	and    ebp,ebx
  4116e2:	xor    dh,BYTE PTR [eax-0x5d19c68f]
  4116e8:	js     0x4116a6
  4116ea:	aam    0x6b
  4116ec:	je     0x4116ba
  4116ee:	mov    al,BYTE PTR [eax+0x2c]
  4116f1:	popf   
  4116f2:	inc    edi
  4116f3:	inc    edi
  4116f4:	(bad)  
  4116f5:	loopne 0x411757
  4116f7:	pop    ecx
  4116f8:	adc    eax,0x16da2a7d
  4116fd:	mov    ds:0xeba918b9,al
  411702:	xchg   edx,eax
  411703:	jns    0x4116de
  411705:	dec    ebp
  411706:	cdq    
  411707:	outs   dx,DWORD PTR ds:[esi]
  411708:	rcr    ch,cl
  41170a:	call   0x572a5c52
  41170f:	dec    esi
  411710:	loope  0x41175c
  411712:	arpl   bx,dx
  411714:	or     bl,BYTE PTR [eax-0x26e06d60]
  41171a:	mov    eax,ds:0xaf891fa6
  41171f:	std    
  411720:	fwait
  411721:	retf   
  411722:	popa   
  411723:	and    BYTE PTR [ebx+0x62e6c7eb],dl
  411729:	sar    cl,0xc1
  41172c:	adc    ecx,DWORD PTR [eax+0x68]
  41172f:	xchg   ecx,eax
  411730:	dec    ecx
  411731:	and    BYTE PTR [eax-0x7c],0xf3
  411735:	cld    
  411736:	dec    esp
  411737:	aaa    
  411738:	xor    ebx,DWORD PTR [ebx-0x45]
  41173b:	les    esi,FWORD PTR [esi+0x1d3b59d0]
  411741:	sbb    ecx,DWORD PTR [edx]
  411743:	push   0xf573d1e2
  411748:	push   ss
  411749:	mov    ah,0xb2
  41174b:	(bad)  
  41174c:	rol    DWORD PTR ds:0x3c95bab0,0xb3
  411753:	mov    WORD PTR [edi+0x6960f174],ds
  411759:	mov    WORD PTR [eax+0x6f],ss
  41175c:	leave  
  41175d:	sub    bl,BYTE PTR [eax+edx*8]
  411760:	enter  0x5c02,0x92
  411764:	xor    al,BYTE PTR ds:0x5bc2c05d
  41176a:	mov    edx,0x3b68b4a
  41176f:	xchg   ecx,eax
  411770:	fisttp DWORD PTR [ecx+0x6b]
  411773:	sets   ah
  411776:	push   esi
  411777:	fstp   TBYTE PTR [edx]
  411779:	add    al,ah
  41177b:	ins    DWORD PTR es:[edi],dx
  41177c:	scas   al,BYTE PTR es:[edi]
  41177d:	or     al,0x79
  41177f:	ret    0xa95
  411782:	mov    DWORD PTR [edi],ebp
  411784:	adc    eax,0x2f720f51
  411789:	fcomp  QWORD PTR [ecx+0x18]
  41178c:	into   
  41178d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41178e:	xchg   ebp,eax
  41178f:	int3   
  411790:	and    DWORD PTR [ebx+0x490ed969],edi
  411796:	push   0xffffffe5
  411798:	call   0xb4ff:0x9de506b3
  41179f:	add    eax,0xf630a89a
  4117a4:	outs   dx,DWORD PTR ds:[esi]
  4117a5:	test   cl,cl
  4117a7:	jae    0x4117c7
  4117a9:	xchg   DWORD PTR [ebx-0x26],edx
  4117ac:	pop    ebp
  4117ad:	inc    edi
  4117ae:	xchg   ebx,eax
  4117af:	sub    BYTE PTR [edi+ebp*1+0x3c],bh
  4117b3:	popa   
  4117b4:	mov    bh,0x53
  4117b6:	cmp    BYTE PTR [ebx+ebx*8-0x45cab3b8],bh
  4117bd:	(bad)  
  4117bf:	shr    DWORD PTR [esi-0x61],cl
  4117c2:	dec    esp
  4117c3:	repz mov ebx,0x129c8a67
  4117c9:	push   ds
  4117ca:	rcl    BYTE PTR [ecx],1
  4117cc:	fld    QWORD PTR [edi-0x71]
  4117cf:	jg     0x41180d
  4117d1:	scas   eax,DWORD PTR es:[edi]
  4117d2:	inc    esp
  4117d3:	shl    DWORD PTR [esi-0x390301f2],0x8c
  4117da:	xor    edi,DWORD PTR [ebp+0x52]
  4117dd:	xchg   BYTE PTR [edx],bl
  4117df:	iret   
  4117e0:	cmp    al,0xed
  4117e2:	scas   al,BYTE PTR es:[edi]
  4117e3:	mov    al,0x1a
  4117e5:	add    cl,BYTE PTR [edx-0x4a82573e]
  4117eb:	(bad)  
  4117ec:	and    DWORD PTR [ecx-0x5],edi
  4117ef:	and    al,0x96
  4117f1:	push   ebp
  4117f2:	inc    esi
  4117f3:	addr16 push ds
  4117f5:	lock stc 
  4117f7:	shl    dl,0x26
  4117fa:	(bad)  
  4117fb:	xlat   BYTE PTR ds:[ebx]
  4117fc:	aaa    
  4117fd:	in     al,dx
  4117fe:	jne    0x4117a2
  411800:	ficom  DWORD PTR fs:[ecx+0x318164fb]
  411807:	adc    DWORD PTR [esi],edi
  411809:	in     eax,0xea
  41180b:	pop    ebx
  41180c:	dec    ebp
  41180d:	mov    esi,0x339af21f
  411812:	or     ch,cl
  411814:	pusha  
  411815:	sbb    cl,al
  411817:	cdq    
  411818:	cmp    eax,0x40312fa2
  41181d:	and    BYTE PTR [edi],cl
  41181f:	mov    WORD PTR [ecx],ds
  411821:	pop    ebp
  411822:	sub    DWORD PTR [edi+0x4d],esp
  411825:	jmp    0xf247:0x2abd2364
  41182c:	cwde   
  41182d:	xchg   ecx,eax
  41182e:	mov    al,0x8b
  411830:	scas   al,BYTE PTR es:[edi]
  411831:	push   ds
  411832:	sub    edx,DWORD PTR [edi-0x46]
  411835:	pusha  
  411836:	mov    eax,ds:0xc5063c2b
  41183b:	push   es
  41183c:	or     al,0x39
  41183e:	sbb    BYTE PTR [ebp-0x40],dh
  411841:	push   ecx
  411842:	adc    DWORD PTR [edx],0x88e91148
  411848:	push   ebx
  411849:	jmp    0x1a4c:0xb215cc6d
  411850:	dec    edx
  411851:	sbb    al,0xcb
  411853:	xlat   BYTE PTR ds:[ebx]
  411854:	mov    ch,0xf
  411856:	in     eax,dx
  411857:	retf   0xdf03
  41185a:	ror    ah,cl
  41185c:	fld    TBYTE PTR [esi-0x3d]
  41185f:	adc    BYTE PTR [edi-0x1a4a8d6e],0x1a
  411866:	add    ah,cl
  411868:	push   ds
  411869:	pop    es
  41186a:	int    0xad
  41186c:	xchg   BYTE PTR [ebp+0x9],bl
  41186f:	ins    BYTE PTR es:[edi],dx
  411870:	jbe    0x411864
  411872:	icebp  
  411873:	inc    esi
  411874:	mov    ch,0xab
  411876:	loope  0x4118bc
  411878:	cdq    
  411879:	add    eax,0x117c0718
  41187e:	mov    dl,0xd2
  411880:	and    BYTE PTR [esi],dh
  411882:	xchg   edx,eax
  411883:	push   ecx
  411884:	arpl   WORD PTR [eax-0x7d],dx
  411887:	adc    dh,ah
  411889:	mov    ds:0xebb6a049,al
  41188e:	sbb    eax,DWORD PTR [ebx+edi*2+0x31]
  411892:	fs sbb eax,0xb90a8ee9
  411898:	cs retf 
  41189a:	jno    0x411869
  41189c:	icebp  
  41189d:	fwait
  41189e:	or     DWORD PTR [ecx+0x63058c1c],esi
  4118a4:	pop    ss
  4118a5:	daa    
  4118a6:	test   DWORD PTR [eax-0x625285f5],esp
  4118ac:	mov    esp,0xd5164ef6
  4118b1:	sti    
  4118b2:	frstpm(287 only) 
  4118b4:	in     al,dx
  4118b5:	xor    eax,0x7553871e
  4118ba:	push   es
  4118bb:	lods   al,BYTE PTR ds:[esi]
  4118bc:	pop    esp
  4118bd:	jo     0x411852
  4118bf:	pop    es
  4118c0:	jl     0x411856
  4118c2:	sahf   
  4118c3:	idiv   DWORD PTR [ecx-0x4401b606]
  4118c9:	mov    bh,0xcc
  4118cb:	sub    edx,DWORD PTR [ecx+0x73]
  4118ce:	out    dx,eax
  4118cf:	stos   DWORD PTR es:[edi],eax
  4118d0:	and    DWORD PTR [edi*8+0xf76619e],esp
  4118d7:	xchg   dh,bl
  4118d9:	cmp    ch,BYTE PTR [edx]
  4118db:	pop    eax
  4118dc:	pop    ebx
  4118dd:	cmp    eax,0x6ea6f0c4
  4118e2:	pop    ebx
  4118e3:	push   edx
  4118e4:	pusha  
  4118e5:	das    
  4118e6:	stos   BYTE PTR es:[edi],al
  4118e7:	or     eax,0x150e8bf5
  4118ec:	ds sbb ch,cl
  4118ef:	(bad)  
  4118f0:	data16 sub dx,WORD PTR [eax]
  4118f4:	bound  ebp,QWORD PTR [ebx]
  4118f6:	adc    edi,0x6b506f7
  4118fc:	inc    edx
  4118fd:	dec    eax
  4118fe:	hlt    
  4118ff:	or     edx,DWORD PTR [eax+0x4c]
  411902:	add    eax,0x6b3c569d
  411907:	adc    DWORD PTR [edi-0x21],ecx
  41190a:	pop    ebx
  41190b:	inc    eax
  41190c:	push   0xffffffd9
  41190e:	rol    BYTE PTR [edi-0x1a0a2e9d],cl
  411914:	add    DWORD PTR [ecx],ecx
  411916:	into   
  411917:	(bad)  
  41191a:	mov    edx,0xa7b21a28
  41191f:	in     eax,dx
  411920:	pop    ecx
  411921:	dec    edi
  411922:	test   al,0xa4
  411924:	mov    esi,eax
  411926:	cmp    al,0x20
  411928:	cli    
  411929:	add    DWORD PTR [ebx-0x43985f8],0x94ce74d4
  411933:	dec    DWORD PTR [esp+eax*2+0x6aeea1a1]
  41193a:	inc    ebp
  41193b:	xlat   BYTE PTR ds:[ebx]
  41193c:	add    eax,ebp
  41193e:	adc    BYTE PTR [edi-0x4e],al
  411941:	or     ah,bl
  411943:	fwait
  411944:	shr    DWORD PTR [eax],1
  411946:	inc    ebp
  411947:	scas   al,BYTE PTR es:[edi]
  411948:	xchg   BYTE PTR [eax+0x473fc620],bl
  41194e:	xor    bh,BYTE PTR [ebp-0xba17d06]
  411954:	shr    bl,1
  411956:	int    0x86
  411958:	mov    ch,0x23
  41195a:	push   cs
  41195b:	hlt    
  41195c:	ins    DWORD PTR es:[edi],dx
  41195d:	sbb    eax,0x7af52b33
  411962:	mov    DWORD PTR [ebp+0x4b],eax
  411965:	push   ebx
  411966:	jmp    0x6b2:0xe32899e3
  41196d:	fistp  QWORD PTR ds:0x6b5d82cc
  411973:	push   cs
  411974:	sbb    al,0x83
  411976:	mov    cl,0x74
  411978:	sub    BYTE PTR [edx-0x43b366b3],cl
  41197e:	pop    ecx
  41197f:	popf   
  411980:	dec    eax
  411981:	loope  0x4119ef
  411983:	fwait
  411984:	lods   al,BYTE PTR ds:[esi]
  411985:	xor    BYTE PTR [edi+0x616b871f],ch
  41198b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41198c:	xchg   esp,eax
  41198d:	fild   QWORD PTR [edi-0x7b]
  411990:	sbb    cl,ch
  411992:	daa    
  411993:	sub    DWORD PTR [edi+0x36],ecx
  411996:	retf   0x329
  411999:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41199a:	adc    ebp,DWORD PTR [eax+ecx*4]
  41199d:	inc    ebp
  41199e:	jnp    0x4119ff
  4119a0:	clc    
  4119a1:	push   ebx
  4119a2:	xor    eax,0x2d68517e
  4119a7:	bound  esp,QWORD PTR [eax]
  4119a9:	inc    ecx
  4119aa:	sbb    BYTE PTR [edx+0x7f],bh
  4119ad:	lahf   
  4119ae:	fnstcw WORD PTR [edi+0x42af3950]
  4119b4:	in     eax,dx
  4119b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119b6:	add    edx,esp
  4119b8:	and    al,cl
  4119ba:	lds    ebp,FWORD PTR [ebx+0x7525d95]
  4119c0:	fild   WORD PTR [edi-0x1]
  4119c3:	clc    
  4119c4:	add    DWORD PTR [ecx],esp
  4119c6:	mov    ds:0x7bb7a353,al
  4119cb:	(bad)  
  4119cc:	cdq    
  4119cd:	adc    edi,ecx
  4119cf:	dec    esp
  4119d0:	and    eax,0xaa5fe2b6
  4119d5:	mov    esi,0xd3e03aa1
  4119da:	push   ebp
  4119db:	retf   
  4119dc:	or     bl,BYTE PTR [ecx-0x6f]
  4119df:	jns    0x411a52
  4119e1:	(bad)  
  4119e3:	fisttp WORD PTR [ecx]
  4119e5:	and    BYTE PTR [di-0x6d9b],0x15
  4119eb:	mov    bh,0x28
  4119ed:	cs pushf 
  4119ef:	addr16 xchg esi,eax
  4119f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119f2:	dec    esp
  4119f3:	cmc    
  4119f4:	sbb    ebp,DWORD PTR [edi+0x6802c91b]
  4119fa:	xor    al,0x2a
  4119fc:	adc    eax,0x1c34094
  411a01:	push   ebx
  411a02:	not    bh
  411a04:	das    
  411a05:	aad    0xfb
  411a07:	mov    edi,0xf72609c5
  411a0c:	mov    ds:0xf5b64380,al
  411a11:	mov    dl,al
  411a13:	sbb    DWORD PTR [esi],ebx
  411a15:	push   cs
  411a16:	stos   BYTE PTR es:[edi],al
  411a17:	adc    cl,ah
  411a19:	ins    DWORD PTR es:[edi],dx
  411a1a:	stc    
  411a1b:	int3   
  411a1c:	frstor [ebx+0x774a8985]
  411a22:	outs   dx,BYTE PTR ds:[esi]
  411a23:	jle    0x4119e6
  411a25:	push   edx
  411a26:	shl    DWORD PTR [esi],cl
  411a28:	or     al,0xa0
  411a2a:	in     eax,0x70
  411a2c:	mov    bh,0x8d
  411a2e:	sub    BYTE PTR [ecx],ah
  411a30:	bound  esp,QWORD PTR [esp+ecx*1+0x46]
  411a34:	aam    0xf1
  411a36:	mov    esi,0x46fe167
  411a3b:	ret    0xade6
  411a3e:	rcl    edi,1
  411a40:	pop    edx
  411a41:	fdivr  QWORD PTR ds:0xf64b40dc
  411a47:	push   edx
  411a48:	inc    ebx
  411a49:	sar    BYTE PTR [ebx],0x8a
  411a4c:	shl    DWORD PTR [esi-0x276fcd5e],1
  411a52:	outs   dx,BYTE PTR ds:[esi]
  411a53:	fisttp QWORD PTR [ebx]
  411a55:	sahf   
  411a56:	jnp    0x411a8e
  411a58:	mov    edx,0x124cb77d
  411a5d:	(bad)  
  411a5e:	stc    
  411a5f:	loopne 0x411aba
  411a61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a62:	jl     0x411ada
  411a64:	jne    0x4119fa
  411a66:	int    0xb2
  411a68:	push   0x44
  411a6a:	aaa    
  411a6b:	shl    BYTE PTR [edi],cl
  411a6d:	mov    ah,0x1c
  411a6f:	out    0x16,eax
  411a71:	mov    edx,DWORD PTR [edi]
  411a73:	jle    0x411aac
  411a75:	in     al,0x51
  411a77:	(bad)  
  411a78:	pusha  
  411a79:	outs   dx,BYTE PTR ds:[esi]
  411a7a:	adc    BYTE PTR [ebx+eax*4],dl
  411a7d:	sbb    dh,BYTE PTR [ebx+0x4455ab9]
  411a83:	data16 daa 
  411a85:	add    ch,BYTE PTR [edi]
  411a87:	sub    al,ah
  411a89:	pop    ss
  411a8a:	adc    edx,DWORD PTR [edx+0x2a]
  411a8d:	fcom   DWORD PTR [eax+0x1d61bb4a]
  411a93:	sub    ch,bl
  411a95:	jge    0x411b0d
  411a97:	jecxz  0x411b08
  411a99:	mov    ch,0xf0
  411a9b:	fwait
  411a9c:	xchg   edx,eax
  411a9d:	fistp  WORD PTR [edi+0x51]
  411aa0:	mov    esp,0x402cc953
  411aa5:	inc    edi
  411aa6:	xchg   DWORD PTR [ebx],ebp
  411aa8:	arpl   WORD PTR [esi+eiz*8],sp
  411aab:	push   edx
  411aac:	jmp    0x7c51:0x42376fe4
  411ab3:	out    dx,eax
  411ab4:	out    dx,eax
  411ab5:	cmp    BYTE PTR [edi-0x63],dh
  411ab8:	and    bh,BYTE PTR [ebx+ebx*4-0x1]
  411abc:	mov    edx,0x3960b4ef
  411ac1:	lods   eax,DWORD PTR ds:[esi]
  411ac2:	fidiv  DWORD PTR [esi]
  411ac4:	push   es
  411ac5:	stos   BYTE PTR es:[edi],al
  411ac6:	mov    ebp,0x1107f086
  411acb:	pop    esp
  411acc:	stos   BYTE PTR es:[edi],al
  411acd:	push   ss
  411ace:	push   edi
  411acf:	jecxz  0x411ab0
  411ad1:	sbb    dh,BYTE PTR [edi+eiz*1+0x4a]
  411ad5:	aam    0xcf
  411ad7:	and    dh,BYTE PTR [esi-0x4c3e4d69]
  411add:	retf   
  411ade:	enter  0xed82,0x2c
  411ae2:	inc    ebp
  411ae3:	(bad)  
  411ae4:	fbld   TBYTE PTR [ecx-0x655ae3bd]
  411aea:	pop    edx
  411aeb:	push   esp
  411aec:	sub    eax,0x5c7e1b20
  411af1:	jb     0x411a96
  411af3:	mov    ds:0x7a505496,al
  411af8:	sahf   
  411af9:	mov    esp,0x5a3013df
  411afe:	test   DWORD PTR [ebx],0xd5987023
  411b04:	or     bl,ch
  411b06:	push   ss
  411b07:	jp     0x411b49
  411b09:	leave  
  411b0a:	(bad)  
  411b0b:	rcr    DWORD PTR [ebx],1
  411b0d:	fnstcw WORD PTR [ecx]
  411b0f:	jmp    0x411b1d
  411b11:	(bad)  
  411b12:	cld    
  411b13:	ret    
  411b14:	outs   dx,BYTE PTR ds:[esi]
  411b15:	mov    dh,0x92
  411b17:	jle    0x411ac2
  411b19:	push   ss
  411b1a:	or     eax,0x62bee4ae
  411b1f:	fild   WORD PTR [esi]
  411b21:	ret    
  411b22:	shl    DWORD PTR [esi-0x7c],0xd8
  411b26:	sub    DWORD PTR [eax+0x5660e4b6],ebx
  411b2c:	jbe    0x411ab0
  411b2e:	repz mov ecx,?
  411b31:	gs hlt 
  411b33:	push   edx
  411b34:	sbb    ebp,DWORD PTR [ecx]
  411b36:	ret    
  411b37:	pop    DWORD PTR [edx+0x2bbed188]
  411b3d:	cs out dx,al
  411b3f:	jae    0x411b10
  411b41:	daa    
  411b42:	hlt    
  411b43:	aaa    
  411b44:	or     bl,0x77
  411b47:	jmp    0x411b70
  411b49:	sub    al,0x1d
  411b4b:	jmp    0x3862:0x7d97ea18
  411b52:	fucomip st,st(6)
  411b54:	(bad)  
  411b55:	or     BYTE PTR [ebx-0x3],dl
  411b58:	xchg   esi,eax
  411b59:	mov    cl,0x7b
  411b5b:	pop    edx
  411b5c:	or     ebp,DWORD PTR [ebx-0xe]
  411b5f:	fs mov esi,ebp
  411b62:	pop    ecx
  411b63:	adc    BYTE PTR [edi-0xdeed787],ah
  411b69:	fisttp DWORD PTR [eax]
  411b6b:	push   cs
  411b6c:	fs inc esi
  411b6e:	cmp    al,0x65
  411b70:	ja     0x411b5b
  411b72:	pop    esi
  411b73:	or     eax,0xefe98856
  411b78:	mov    dl,0x49
  411b7a:	retf   0xaf31
  411b7d:	mov    ebp,0x2e31ac2e
  411b82:	mov    edx,edx
  411b84:	out    dx,eax
  411b85:	nop
  411b86:	fisttp QWORD PTR [esi+0x2d]
  411b89:	and    bl,BYTE PTR [edx+ecx*2+0x521ace8e]
  411b90:	ret    
  411b91:	imul   esp,DWORD PTR [esp+ebx*2-0x89f5cd6],0x13b66d3a
  411b9c:	fnstsw WORD PTR [edx-0x181e668a]
  411ba2:	mov    ah,0xfb
  411ba4:	(bad)  
  411ba5:	out    dx,al
  411ba6:	data16 je 0x411bb9
  411ba9:	pop    ebx
  411baa:	xchg   edx,eax
  411bab:	or     eax,0xc62be3a7
  411bb0:	call   0x8875a5c9
  411bb5:	retf   
  411bb6:	scas   eax,DWORD PTR es:[edi]
  411bb7:	adc    BYTE PTR [ebx+ebx*2+0x6e2353f1],0x46
  411bbf:	lahf   
  411bc0:	sahf   
  411bc1:	sub    eax,0xf9b29cc3
  411bc6:	dec    esp
  411bc7:	mov    cl,0xbb
  411bc9:	push   cs
  411bca:	dec    ecx
  411bcb:	adc    ecx,eax
  411bcd:	pop    ecx
  411bce:	mov    bh,0x79
  411bd0:	xor    BYTE PTR ss:[esi+0x6d],0x18
  411bd5:	mov    ds:0xfe45e7f9,al
  411bda:	jecxz  0x411bb5
  411bdc:	cld    
  411bdd:	fiadd  WORD PTR [edx]
  411bdf:	arpl   WORD PTR [ebx],si
  411be1:	loop   0x411be6
  411be3:	mov    ds:0xc216fa3d,al
  411be8:	repz cld 
  411bea:	xor    cl,BYTE PTR [ebp*8+0x145f8851]
  411bf1:	std    
  411bf2:	adc    DWORD PTR [edi],0xcf4ba8ff
  411bf8:	test   DWORD PTR ds:0x737cd549,edi
  411bfe:	mov    ds:0xbee41b24,al
  411c03:	jb     0x411b95
  411c05:	(bad)  
  411c06:	popf   
  411c07:	aaa    
  411c08:	cmc    
  411c09:	sahf   
  411c0a:	adc    ch,BYTE PTR [esi+0x3f]
  411c0d:	push   edx
  411c0e:	inc    ebx
  411c0f:	aaa    
  411c10:	mov    dh,0xfc
  411c12:	ror    esp,0xe2
  411c15:	mov    ebx,0x52a85e98
  411c1a:	or     DWORD PTR [eax+0xf55a2ee],0x1be71155
  411c24:	js     0x411c71
  411c26:	dec    esi
  411c27:	pop    esi
  411c28:	dec    edx
  411c29:	adc    eax,0x4c2a7092
  411c2e:	sub    al,0x21
  411c30:	dec    ebx
  411c31:	into   
  411c32:	adc    eax,0xc7b86b5a
  411c37:	mov    cl,0x6e
  411c39:	retf   0x6dbf
  411c3c:	leave  
  411c3d:	(bad)  
  411c3e:	push   0x4a01a265
  411c43:	lods   eax,DWORD PTR ds:[esi]
  411c44:	gs pop ebp
  411c46:	inc    eax
  411c47:	lahf   
  411c48:	mov    ecx,0xdc32ba50
  411c4d:	sub    BYTE PTR [edx+0x29],bh
  411c50:	outs   dx,DWORD PTR ds:[esi]
  411c51:	inc    esi
  411c52:	jge    0x411c44
  411c54:	shl    eax,cl
  411c56:	popf   
  411c57:	push   0xffffffc2
  411c59:	push   ebp
  411c5a:	fnstsw WORD PTR [edi]
  411c5c:	mov    al,ds:0xdf9cdeb1
  411c61:	mov    dl,0xca
  411c63:	test   al,0x99
  411c65:	mov    bl,0x69
  411c67:	xor    BYTE PTR [edx+edi*8+0x75],0xb
  411c6c:	fsubr  DWORD PTR [edx-0x66]
  411c6f:	loope  0x411c30
  411c71:	jbe    0x411c78
  411c73:	jmp    0x411c3b
  411c75:	jne    0x411c66
  411c77:	mov    dh,0xe0
  411c79:	push   cs
  411c7a:	mov    ds:0x31bc9f87,eax
  411c7f:	pop    ecx
  411c80:	dec    esi
  411c81:	popf   
  411c82:	xor    al,0x41
  411c84:	mov    ah,0xf5
  411c86:	cmp    eax,0xb7901331
  411c8b:	xchg   ebx,eax
  411c8c:	retf   
  411c8d:	inc    ebp
  411c8e:	adc    bh,dl
  411c90:	repz sbb ebx,DWORD PTR [esi+0x32a3c2c9]
  411c97:	push   ds
  411c98:	mov    ah,0x96
  411c9a:	mov    ds:0x4e0aa2c9,eax
  411c9f:	mov    ebp,0xeb7f754b
  411ca4:	out    dx,al
  411ca5:	sub    ebp,eax
  411ca7:	and    al,0xc8
  411ca9:	dec    ebp
  411caa:	inc    edi
  411cab:	aad    0x54
  411cad:	jns    0x411c30
  411caf:	add    DWORD PTR [edi],eax
  411cb1:	adc    esp,esp
  411cb3:	xchg   ebp,eax
  411cb4:	sbb    BYTE PTR [esi+eax*8-0x798661cc],dh
  411cbb:	push   0xecae3c1b
  411cc0:	data16 mov bl,0x7
  411cc3:	and    DWORD PTR [eax],esp
  411cc5:	sbb    eax,0x5bbe7592
  411cca:	cdq    
  411ccb:	imul   ecx,DWORD PTR [edx-0x7cfe934],0x1f3a7b1f
  411cd5:	call   0x555c:0xb3413350
  411cdc:	mov    bl,0x35
  411cde:	bound  ebp,QWORD PTR [edi]
  411ce0:	xor    bl,BYTE PTR [ecx+0x468f780e]
  411ce6:	mov    bl,BYTE PTR [eax+0x9]
  411ce9:	push   ds
  411cea:	pop    esp
  411ceb:	sub    al,0x93
  411ced:	pop    edx
  411cee:	mov    ah,0xf7
  411cf0:	mov    bh,0x62
  411cf2:	rcl    BYTE PTR [esp+eax*8],1
  411cf5:	cdq    
  411cf6:	jecxz  0x411d42
  411cf8:	mov    bl,0x10
  411cfa:	imul   esp,DWORD PTR [esi+0x698571e4],0xffffffa3
  411d01:	push   es
  411d02:	(bad)  
  411d03:	(bad)  
  411d04:	cmp    cl,bl
  411d06:	pushf  
  411d07:	imul   ebx,DWORD PTR [ebp+0x71],0xffffffa0
  411d0b:	mov    esi,0xfc316a73
  411d10:	cmp    al,0xb0
  411d12:	mov    WORD PTR [edi+0x3dbc4497],?
  411d18:	sbb    al,0x8d
  411d1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d1b:	inc    eax
  411d1c:	rcr    DWORD PTR [ebx],0x6d
  411d1f:	jp     0x411cba
  411d21:	scas   al,BYTE PTR es:[edi]
  411d22:	pop    ebp
  411d23:	mov    al,ds:0x2fa6f7bf
  411d28:	inc    ecx
  411d29:	add    eax,0x3318dda7
  411d2e:	out    dx,eax
  411d2f:	and    dl,BYTE PTR ds:0xf51164eb
  411d35:	dec    esi
  411d36:	push   es
  411d37:	mov    es,WORD PTR [esp+ebx*2]
  411d3a:	imul   eax,DWORD PTR [esi],0x17
  411d3d:	popa   
  411d3e:	and    cl,ah
  411d40:	rol    BYTE PTR [eax+0x2ab98d66],0x35
  411d47:	test   al,0xa9
  411d49:	dec    ebp
  411d4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d4b:	jae    0x411d0c
  411d4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d4e:	popa   
  411d4f:	adc    DWORD PTR [edi],ebx
  411d51:	jge    0x411d30
  411d53:	mov    esi,DWORD PTR [edx+0x6c]
  411d56:	jle    0x411d79
  411d58:	sbb    edi,DWORD PTR [edx]
  411d5a:	aad    0x4d
  411d5c:	into   
  411d5d:	aam    0xc
  411d5f:	dec    esp
  411d60:	ins    BYTE PTR es:[edi],dx
  411d61:	push   esi
  411d62:	pop    ecx
  411d63:	jl     0x411cf6
  411d65:	cmp    eax,0x41fe7fd9
  411d6a:	popa   
  411d6b:	inc    ebp
  411d6c:	inc    edx
  411d6d:	das    
  411d6e:	mov    cl,0xdf
  411d70:	(bad)  
  411d71:	shr    ah,1
  411d73:	dec    esp
  411d74:	daa    
  411d75:	aad    0x4f
  411d77:	aaa    
  411d78:	lock add DWORD PTR [edi+0x4bd8f500],ebx
  411d7f:	push   cs
  411d80:	int    0x8f
  411d82:	push   esp
  411d83:	or     ah,BYTE PTR [ebx]
  411d85:	aam    0xbd
  411d87:	sub    edi,eax
  411d89:	pusha  
  411d8a:	aam    0xff
  411d8c:	outs   dx,DWORD PTR ds:[esi]
  411d8d:	cli    
  411d8e:	push   0x47
  411d90:	add    edx,DWORD PTR [ecx+0xa8e42bb]
  411d96:	js     0x411d43
  411d98:	push   0xd24a0693
  411d9d:	add    BYTE PTR [edi+0x16],cl
  411da0:	daa    
  411da1:	jmp    0x3dc30c93
  411da6:	adc    edi,DWORD PTR [eax]
  411da8:	dec    esi
  411da9:	dec    edx
  411daa:	lds    eax,FWORD PTR [edi]
  411dac:	ret    0xf168
  411daf:	leave  
  411db0:	popf   
  411db1:	xor    DWORD PTR [ebp-0x76],ebp
  411db4:	add    edi,DWORD PTR [eax]
  411db6:	dec    eax
  411db7:	inc    eax
  411db8:	daa    
  411db9:	adc    eax,0xd8b1a357
  411dbe:	inc    esi
  411dbf:	addr16 sub eax,0x6148e91b
  411dc5:	push   esi
  411dc6:	cmp    DWORD PTR ds:0xcae7edb,ebp
  411dcc:	(bad)  
  411dcd:	jo     0x411e07
  411dcf:	int3   
  411dd0:	enter  0x1e94,0xbe
  411dd4:	sar    BYTE PTR [ebp+0x527b0e71],0x94
  411ddb:	int3   
  411ddc:	mov    DWORD PTR [esi-0x4f],0xb59b0960
  411de3:	adc    al,0x25
  411de5:	or     eax,0xec64036b
  411dea:	(bad)  
  411deb:	xchg   esp,eax
  411dec:	test   esp,0xe7469bee
  411df2:	pop    ebp
  411df3:	cmp    esp,esp
  411df5:	fnstenv [esi-0x2ae9ca6b]
  411dfb:	sti    
  411dfc:	xchg   ch,dh
  411dfe:	lahf   
  411dff:	sbb    BYTE PTR [ebp-0x64],dl
  411e02:	popa   
  411e03:	push   edi
  411e04:	mov    ds:0xce0268cf,eax
  411e09:	and    BYTE PTR [ebx-0x28d811ef],ch
  411e0f:	mov    cl,0x8a
  411e11:	inc    esp
  411e12:	repz mov cl,0x67
  411e15:	hlt    
  411e16:	xchg   edi,eax
  411e17:	sahf   
  411e18:	imul   esi,DWORD PTR [esi+esi*8-0x6],0x7a47b2aa
  411e20:	and    ebx,DWORD PTR [esi]
  411e22:	out    0x1b,al
  411e24:	rcl    esp,1
  411e26:	and    edx,DWORD PTR [edi-0x2d]
  411e29:	xor    dh,ah
  411e2b:	into   
  411e2c:	out    0x6c,eax
  411e2e:	xor    bh,BYTE PTR [ebx-0x31]
  411e31:	popa   
  411e32:	jl     0x411e82
  411e34:	cmc    
  411e35:	or     ah,al
  411e37:	lock adc bh,ah
  411e3a:	jmp    0x411e74
  411e3c:	xor    al,0x5f
  411e3e:	push   es
  411e3f:	jns    0x411e79
  411e41:	jp     0x411de3
  411e43:	mov    bl,0xc7
  411e45:	pop    esp
  411e46:	adc    BYTE PTR [esi+0x78eea08],bl
  411e4c:	sbb    esi,DWORD PTR [ecx]
  411e4e:	xor    esi,0x0
  411e51:	cmp    edx,ebx
  411e53:	jne    0x411e75
  411e59:	mov    DWORD PTR ds:0x42900c,0x30b0
  411e63:	cmp    esi,edi
  411e65:	mov    DWORD PTR ds:0x42d000,0x643
  411e6f:	je     0x411edc
  411e75:	sub    edx,0x6beb
  411e7b:	mov    edx,DWORD PTR ds:0x424014
  411e81:	mov    edx,DWORD PTR [edx+0x1c0]
  411e87:	mov    edx,DWORD PTR [edx]
  411e89:	sub    DWORD PTR ds:0x42c018,0x42901c
  411e93:	xor    esi,esi
  411e95:	add    edx,ecx
  411e97:	adc    esi,0xffffffff
  411e9a:	xor    edx,eax
  411e9c:	and    DWORD PTR ds:0x42d010,0x4e39
  411ea6:	xor    esi,0x0
  411ea9:	mov    DWORD PTR ds:0x42a018,0x6a83
  411eb3:	cmp    edx,0x70941fd1
  411eb9:	mov    DWORD PTR ds:0x42d014,0x6414
  411ec3:	jne    0x411f46
  411ec9:	mov    DWORD PTR ds:0x42b000,0x2399
  411ed3:	cmp    esi,0xffffffff
  411ed6:	jne    0x411f46
  411edc:	mov    edx,DWORD PTR ds:0x424098
  411ee2:	mov    esi,DWORD PTR ds:0x424090
  411ee8:	xor    edx,esi
  411eea:	mov    DWORD PTR ds:0x424090,edx
  411ef0:	mov    edx,DWORD PTR [ebp+0xc]
  411ef3:	mov    edx,DWORD PTR [edx]
  411ef5:	mov    edx,DWORD PTR [edx]
  411ef7:	mov    esi,DWORD PTR ds:0x424090
  411efd:	add    DWORD PTR [edx],esi
  411eff:	mov    esi,DWORD PTR [ebp+0x8]
  411f02:	mov    edx,DWORD PTR ds:0x424090
  411f08:	xor    esi,0x7510893
  411f0e:	add    esi,0x3272db
  411f14:	xor    ebx,ebx
  411f16:	add    esi,ecx
  411f18:	adc    ebx,0xffffffff
  411f1b:	xor    edi,edi
  411f1d:	xor    esi,eax
  411f1f:	xor    ebx,0x0
  411f22:	add    edx,ecx
  411f24:	adc    edi,0xffffffff
  411f27:	xor    edx,eax
  411f29:	xor    edi,0x0
  411f2c:	cmp    edx,esi
  411f2e:	jne    0x411f46
  411f34:	cmp    edi,ebx
  411f36:	jne    0x411f46
  411f3c:	mov    eax,ds:0x424090
  411f41:	mov    ds:0x424098,eax
  411f46:	pop    edi
  411f47:	pop    esi
  411f48:	pop    ebx
  411f49:	pop    ebp
  411f4a:	ret    0x8
  411f4d:	push   ebp
  411f4e:	mov    ebp,esp
  411f50:	sub    esp,0x90
  411f56:	add    DWORD PTR ds:0x42a01c,0x734d
  411f60:	push   esi
  411f61:	xor    ecx,0xb67
  411f67:	push   edi
  411f68:	xor    eax,DWORD PTR ds:0x42a018
  411f6e:	mov    eax,ds:0x424014
  411f73:	add    esi,0x4c8c
  411f79:	mov    DWORD PTR [ebp-0x2c],eax
  411f7c:	xor    ecx,0x3033
  411f82:	mov    eax,ds:0x424120
  411f87:	and    DWORD PTR ds:0x42a010,0x0
  411f91:	mov    esi,DWORD PTR ds:0x42a010
  411f97:	inc    esi
  411f98:	mov    DWORD PTR ds:0x42a010,esi
  411f9e:	cmp    DWORD PTR ds:0x42a010,0xd
  411fa5:	jne    0x411fbe
  411fab:	push   0x1106
  411fb0:	push   DWORD PTR [ebp-0xc]
  411fb3:	push   0x571c
  411fb8:	call   DWORD PTR ds:0x425044
  411fbe:	cmp    DWORD PTR ds:0x42a010,0xc
  411fc5:	jne    0x411fda
  411fcb:	xor    esi,esi
  411fcd:	add    esi,DWORD PTR ds:0x42a010
  411fd3:	inc    esi
  411fd4:	mov    DWORD PTR ds:0x42a010,esi
  411fda:	cmp    DWORD PTR ds:0x42a010,0x14
  411fe1:	jb     0x411f91
  411fe7:	mov    DWORD PTR [ebp-0x3c],eax
  411fea:	and    DWORD PTR ds:0x42b004,edx
  411ff0:	and    DWORD PTR [ebp-0x34],0x0
  411ff4:	xor    ecx,DWORD PTR ds:0x42d010
  411ffa:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  412001:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  412008:	and    edi,DWORD PTR ds:0x42b018
  41200e:	mov    eax,DWORD PTR [ebp-0x1c]
  412011:	mov    ecx,DWORD PTR [ebp-0x1c]
  412014:	xor    edi,DWORD PTR ds:0x42b004
  41201a:	xor    eax,ecx
  41201c:	add    DWORD PTR ds:0x429018,ecx
  412022:	mov    DWORD PTR [ebp-0x1c],eax
  412025:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  41202c:	sub    ecx,esi
  41202e:	mov    eax,DWORD PTR [ebp-0x28]
  412031:	mov    DWORD PTR ds:0x42a010,0x1d
  41203b:	cmp    DWORD PTR ds:0x42a010,0x0
  412042:	je     0x4120a2
  412048:	cmp    DWORD PTR ds:0x42a010,0x4
  41204f:	jne    0x412069
  412055:	push   DWORD PTR [ebp-0x1c]
  412058:	push   0x61a2
  41205d:	push   DWORD PTR [ebp-0x1c]
  412060:	push   DWORD PTR [ebp-0x18]
  412063:	call   DWORD PTR ds:0x425048
  412069:	cmp    DWORD PTR ds:0x42a010,0x5
  412070:	jne    0x412083
  412076:	mov    ecx,DWORD PTR ds:0x42a010
  41207c:	dec    ecx
  41207d:	mov    DWORD PTR ds:0x42a010,ecx
  412083:	mov    ecx,DWORD PTR ds:0x42a010
  412089:	dec    ecx
  41208a:	mov    DWORD PTR ds:0x42a010,ecx
  412090:	jmp    0x41203b
  412095:	movzx  esi,BYTE PTR ds:0x42b010
  41209c:	sub    DWORD PTR ds:0x42c008,esi
  4120a2:	mov    ecx,DWORD PTR [ebp-0x28]
  4120a5:	sub    edi,esi
  4120a7:	xor    eax,ecx
  4120a9:	mov    DWORD PTR [ebp-0x28],eax
  4120ac:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  4120b3:	and    DWORD PTR ds:0x42b000,0x0
  4120bd:	mov    eax,ds:0x42b000
  4120c2:	inc    eax
  4120c3:	mov    ds:0x42b000,eax
  4120c8:	cmp    DWORD PTR ds:0x42b000,0x1d
  4120cf:	jne    0x4120de
  4120d5:	push   DWORD PTR [ebp-0x10]
  4120d8:	call   DWORD PTR ds:0x42504c
  4120de:	cmp    DWORD PTR ds:0x42b000,0x16
  4120e5:	jb     0x4120bd
  4120eb:	mov    DWORD PTR ds:0x429018,0x1a
  4120f5:	cmp    DWORD PTR ds:0x429018,0x0
  4120fc:	je     0x412149
  412102:	cmp    DWORD PTR ds:0x429018,0x9
  412109:	jne    0x41211d
  41210f:	push   DWORD PTR [ebp-0x10]
  412112:	push   0x4244c4
  412117:	call   DWORD PTR ds:0x425010
  41211d:	cmp    DWORD PTR ds:0x429018,0xa
  412124:	jne    0x412137
  41212a:	mov    ecx,DWORD PTR ds:0x429018
  412130:	dec    ecx
  412131:	mov    DWORD PTR ds:0x429018,ecx
  412137:	mov    ecx,DWORD PTR ds:0x429018
  41213d:	dec    ecx
  41213e:	mov    DWORD PTR ds:0x429018,ecx
  412144:	jmp    0x4120f5
  412149:	mov    eax,DWORD PTR [ebp-0x18]
  41214c:	adc    ecx,esi
  41214e:	mov    ecx,DWORD PTR [ebp-0x18]
  412151:	xor    eax,ecx
  412153:	xor    esi,esi
  412155:	xor    esi,DWORD PTR ds:0x429028
  41215b:	sbb    DWORD PTR ds:0x429014,esi
  412161:	mov    DWORD PTR [ebp-0x18],eax
  412164:	mov    ecx,DWORD PTR ds:0x423e20
  41216a:	mov    eax,ds:0x424383
  41216f:	sub    ecx,eax
  412171:	imul   ecx,DWORD PTR [ecx+eax*1]
  412175:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  41217c:	mov    DWORD PTR ds:0x42a018,0x18
  412186:	cmp    DWORD PTR ds:0x42a018,0x0
  41218d:	je     0x4121c0
  412193:	cmp    DWORD PTR ds:0x42a018,0x1b
  41219a:	jne    0x4121ac
  4121a0:	push   DWORD PTR [ebp-0x1c]
  4121a3:	push   DWORD PTR [ebp-0x18]
  4121a6:	call   DWORD PTR ds:0x425018
  4121ac:	xor    esi,esi
  4121ae:	or     esi,DWORD PTR ds:0x42a018
  4121b4:	dec    esi
  4121b5:	mov    DWORD PTR ds:0x42a018,esi
  4121bb:	jmp    0x412186
  4121c0:	mov    eax,DWORD PTR [ebp-0x24]
  4121c3:	or     DWORD PTR ds:0x429014,0x2eb5
  4121cd:	mov    ecx,DWORD PTR [ebp-0x24]
  4121d0:	mov    DWORD PTR ds:0x429000,0x1b
  4121da:	cmp    DWORD PTR ds:0x429000,0x0
  4121e1:	je     0x412218
  4121e7:	cmp    DWORD PTR ds:0x429000,0x2a
  4121ee:	jne    0x412206
  4121f4:	push   0x42901c
  4121f9:	push   0x0
  4121fb:	push   0x4243b2
  412200:	call   DWORD PTR ds:0x42501c
  412206:	mov    esi,DWORD PTR ds:0x429000
  41220c:	dec    esi
  41220d:	mov    DWORD PTR ds:0x429000,esi
  412213:	jmp    0x4121da
  412218:	xor    eax,ecx
  41221a:	mov    DWORD PTR [ebp-0x24],eax
  41221d:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  412224:	sbb    eax,DWORD PTR ds:0x429004
  41222a:	mov    eax,DWORD PTR [ebp-0x14]
  41222d:	sub    DWORD PTR ds:0x429018,ecx
  412233:	mov    ecx,DWORD PTR [ebp-0x14]
  412236:	and    DWORD PTR ds:0x42d014,0x19f0
  412240:	xor    eax,ecx
  412242:	mov    DWORD PTR [ebp-0x14],eax
  412245:	mov    eax,DWORD PTR [ebp-0x20]
  412248:	mov    ecx,DWORD PTR [ebp-0x14]
  41224b:	dec    esi
  41224c:	mov    esi,0x7510893
  412251:	and    DWORD PTR ds:0x42a01c,0x5143
  41225b:	xor    eax,esi
  41225d:	and    DWORD PTR ds:0x42a004,0x0
  412267:	jmp    0x41227b
  41226c:	xor    edi,edi
  41226e:	add    edi,DWORD PTR ds:0x42a004
  412274:	inc    edi
  412275:	mov    DWORD PTR ds:0x42a004,edi
  41227b:	cmp    DWORD PTR ds:0x42a004,0x15
  412282:	jae    0x4122c2
  412288:	cmp    DWORD PTR ds:0x42a004,0x5
  41228f:	jne    0x4122a3
  412295:	push   0x42c018
  41229a:	push   DWORD PTR [ebp-0x24]
  41229d:	call   DWORD PTR ds:0x425020
  4122a3:	cmp    DWORD PTR ds:0x42a004,0x4
  4122aa:	jne    0x4122bd
  4122b0:	mov    edi,DWORD PTR ds:0x42a004
  4122b6:	inc    edi
  4122b7:	mov    DWORD PTR ds:0x42a004,edi
  4122bd:	jmp    0x41226c
  4122c2:	mov    edi,0x3272db
  4122c7:	add    eax,edi
  4122c9:	xor    eax,ecx
  4122cb:	mov    DWORD PTR [ebp-0x14],eax
  4122ce:	mov    eax,DWORD PTR [ebp-0x10]
  4122d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4122d4:	sub    eax,ecx
  4122d6:	mov    DWORD PTR [ebp-0x10],eax
  4122d9:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4122e0:	mov    al,BYTE PTR [ebp-0x1]
  4122e3:	movzx  ecx,BYTE PTR [ebp-0x1]
  4122e7:	movzx  eax,al
  4122ea:	sub    ecx,eax
  4122ec:	mov    BYTE PTR [ebp-0x1],cl
  4122ef:	movzx  eax,BYTE PTR [ebp-0x1]
  4122f3:	xor    eax,0xffffff99
  4122f6:	mov    BYTE PTR [ebp-0x1],al
  4122f9:	mov    eax,DWORD PTR [ebp-0x20]
  4122fc:	xor    eax,esi
  4122fe:	add    eax,edi
  412300:	mov    DWORD PTR [ebp-0x14],eax
  412303:	lea    eax,[ebp-0x40]
  412306:	mov    DWORD PTR [ebp-0x38],eax
  412309:	lea    eax,[ebp-0x38]
  41230c:	mov    DWORD PTR [ebp-0x44],eax
  41230f:	lea    eax,[ebp-0x44]
  412312:	mov    DWORD PTR [ebp-0x8],eax
  412315:	lea    eax,[ebp-0x8]
  412318:	mov    DWORD PTR [ebp-0x48],eax
  41231b:	mov    eax,DWORD PTR [ebp-0x18]
  41231e:	jmp    0x41466d
  412323:	test   cl,dl
  412325:	icebp  
  412326:	arpl   WORD PTR gs:[ebp+0x64],sp
  41232a:	scas   eax,DWORD PTR es:[edi]
  41232b:	push   0x44f94cc8
  412330:	dec    eax
  412331:	xchg   esi,eax
  412332:	fisubr WORD PTR ss:[ebx+0x62]
  412336:	bound  edx,QWORD PTR [eax+0x5f]
  412339:	bound  esp,QWORD PTR [edx-0x6b]
  41233c:	pusha  
  41233d:	nop
  41233e:	mov    esp,0x87f15012
  412343:	mov    ds,WORD PTR [ecx-0x4621614f]
  412349:	mov    edi,0x9cb4a5f5
  41234e:	or     BYTE PTR [ecx+edx*4+0x5a],ch
  412352:	popa   
  412353:	and    DWORD PTR [edx],edi
  412355:	test   al,0x82
  412357:	fsub   st,st(2)
  412359:	and    eax,DWORD PTR [ebp-0x4cbf70dd]
  41235f:	sbb    ah,BYTE PTR [edx+0x1e]
  412362:	ret    
  412363:	mov    ebp,0x5cfeaff
  412368:	std    
  412369:	cld    
  41236a:	sub    DWORD PTR [edi],ecx
  41236c:	or     ecx,esp
  41236e:	(bad)  
  41236f:	stc    
  412370:	retf   0x4287
  412373:	mov    bh,0x82
  412375:	adc    DWORD PTR [ecx+ebp*1-0x1c50ce82],0xeeaea1a9
  412380:	stc    
  412381:	ret    
  412382:	sbb    esi,DWORD PTR [esi+ebp*4]
  412385:	dec    esp
  412386:	ins    DWORD PTR es:[edi],dx
  412387:	and    BYTE PTR [esp+edx*8+0xf23512c],ch
  41238e:	sub    ecx,edx
  412390:	dec    esi
  412391:	cmp    ebp,DWORD PTR [eax]
  412393:	push   ebx
  412394:	sbb    ebp,ebp
  412396:	and    eax,0x4bcf7ed4
  41239b:	cmp    bh,al
  41239d:	add    BYTE PTR [eax],0xc
  4123a0:	push   eax
  4123a1:	cdq    
  4123a2:	jo     0x41238e
  4123a4:	clc    
  4123a5:	push   esp
  4123a6:	jg     0x412336
  4123a8:	(bad)  
  4123a9:	push   ecx
  4123aa:	dec    esp
  4123ab:	dec    edx
  4123ac:	dec    ebp
  4123ad:	push   esp
  4123ae:	add    DWORD PTR [edi-0x79],ebx
  4123b1:	cs ja  0x412381
  4123b4:	sbb    al,0x8b
  4123b6:	jbe    0x4123ff
  4123b8:	sar    al,1
  4123ba:	cld    
  4123bb:	lock (bad) 
  4123bd:	mov    al,0xf0
  4123bf:	sar    eax,1
  4123c1:	scas   al,BYTE PTR es:[edi]
  4123c2:	sub    ch,BYTE PTR [edi]
  4123c4:	add    al,0x8e
  4123c6:	jle    0x41235b
  4123c8:	int3   
  4123c9:	kaddb  k0,k0,k5
  4123cd:	jmp    0x87d4:0x9aa78f2
  4123d4:	enter  0x1e3e,0x7
  4123d8:	mov    ebx,0x9a9c3d5d
  4123dd:	addr16 push es
  4123df:	inc    esi
  4123e0:	sbb    al,0x1b
  4123e2:	adc    bl,BYTE PTR [ecx+edi*4+0x4dc5470c]
  4123e9:	push   esi
  4123ea:	push   ecx
  4123eb:	retf   
  4123ec:	dec    esp
  4123ed:	outs   dx,DWORD PTR ds:[esi]
  4123ee:	jl     0x4123d7
  4123f0:	cli    
  4123f1:	adc    bl,dh
  4123f3:	jmp    0xe6979249
  4123f8:	adc    bl,BYTE PTR [ebp+0x42]
  4123fb:	push   ecx
  4123fc:	adc    DWORD PTR [edx+ecx*8],esi
  4123ff:	ins    DWORD PTR es:[edi],dx
  412400:	lahf   
  412401:	popf   
  412402:	(bad)  
  412403:	fcom   DWORD PTR [eax]
  412405:	and    ebx,ebp
  412407:	dec    edx
  412408:	(bad)  
  412409:	mov    ecx,0xbe22a9ee
  41240e:	mov    bl,0xf0
  412410:	sbb    eax,0x2f529869
  412415:	and    cl,BYTE PTR [edx-0x11]
  412418:	mov    ss,WORD PTR [eax]
  41241a:	cmc    
  41241b:	jp     0x412436
  41241d:	popf   
  41241e:	ja     0x412479
  412420:	sbb    eax,0x5cba0016
  412425:	lods   al,BYTE PTR ds:[esi]
  412426:	jp     0x4123a8
  412428:	xor    BYTE PTR [ebx],dh
  41242a:	mov    eax,ebp
  41242c:	and    bl,BYTE PTR [ecx-0x78]
  41242f:	push   ebx
  412430:	fisttp DWORD PTR [ecx+0x13abb07a]
  412436:	dec    ebx
  412437:	sbb    al,0x90
  412439:	inc    ecx
  41243a:	int    0x7c
  41243c:	pop    ds
  41243d:	imul   edi,DWORD PTR [edx],0xffffffcf
  412440:	pop    edi
  412441:	xchg   ebp,eax
  412442:	mov    ch,0xc6
  412444:	sbb    edx,DWORD PTR [ecx+0x55c40798]
  41244a:	jmp    0xdf35:0x6967da28
  412451:	lds    ecx,FWORD PTR [ebp-0xfbd5091]
  412457:	cmp    bh,BYTE PTR ds:0x2aa6b3e1
  41245d:	std    
  41245e:	xchg   edx,eax
  41245f:	sbb    ch,BYTE PTR [esi-0x9e7092d]
  412465:	(bad)  
  412467:	inc    edi
  412468:	std    
  412469:	and    al,0x42
  41246b:	push   eax
  41246c:	pop    esp
  41246d:	addr16 mov ebp,eax
  412470:	sbb    cl,BYTE PTR [esi+0x7c]
  412473:	mov    BYTE PTR [eax],ah
  412475:	mov    DWORD PTR [esi],esi
  412477:	push   esp
  412478:	cs pushf 
  41247a:	int3   
  41247b:	fisubr WORD PTR [edx+0x17]
  41247e:	(bad)  
  412480:	test   DWORD PTR [ecx+0x59],esi
  412483:	and    bh,BYTE PTR [edi]
  412485:	nop
  412486:	dec    ebx
  412487:	xor    BYTE PTR ds:0x69307312,0x5f
  41248e:	outs   dx,BYTE PTR ds:[esi]
  41248f:	jge    0x41250b
  412491:	cmp    ebx,edi
  412493:	in     eax,0xd6
  412495:	(bad)  
  412496:	jae    0x4124b6
  412498:	jmp    0x4124ae
  41249a:	test   DWORD PTR ss:[ebx-0x6d838100],esi
  4124a1:	int3   
  4124a2:	push   ss
  4124a3:	mov    al,ds:0x2efbeec3
  4124a8:	mov    eax,ds:0xb017922c
  4124ad:	adc    edx,DWORD PTR [ebx-0x1e91ef0d]
  4124b3:	mov    bl,0x4c
  4124b5:	sbb    DWORD PTR [ecx+edx*2+0x6438e2f2],ecx
  4124bc:	mov    cl,0xd5
  4124be:	into   
  4124bf:	rcr    DWORD PTR [esi],1
  4124c1:	(bad)  
  4124c2:	fistp  DWORD PTR [ecx+0x35503830]
  4124c8:	sbb    eax,0x30bd8f99
  4124cd:	in     al,0x3a
  4124cf:	push   eax
  4124d0:	outs   dx,DWORD PTR ds:[esi]
  4124d1:	sti    
  4124d2:	mov    ds:0x9701271f,eax
  4124d7:	sbb    al,BYTE PTR [ecx]
  4124d9:	dec    esi
  4124da:	retf   
  4124db:	push   edi
  4124dc:	fadd   st(2),st
  4124de:	jecxz  0x412477
  4124e0:	ror    DWORD PTR [ebx],1
  4124e2:	dec    ebx
  4124e3:	sbb    dh,BYTE PTR [ecx+0x70]
  4124e6:	mov    BYTE PTR [ebp+0x45e9fc96],dh
  4124ec:	rol    BYTE PTR [ebx+0x7e],cl
  4124ef:	ins    BYTE PTR es:[edi],dx
  4124f0:	inc    edx
  4124f1:	pop    ebp
  4124f2:	inc    esi
  4124f3:	jecxz  0x412521
  4124f5:	ret    0xd061
  4124f8:	or     DWORD PTR [ecx],esi
  4124fa:	push   es
  4124fb:	cmp    esi,ebp
  4124fd:	test   BYTE PTR [esi+0x1e341b5f],ch
  412503:	jno    0x4124a7
  412505:	xor    WORD PTR [ebp-0x63430645],bp
  41250c:	int    0x9
  41250e:	leave  
  41250f:	(bad)  
  412510:	jns    0x412533
  412512:	rcr    BYTE PTR [ebx+0x27],cl
  412515:	push   esp
  412516:	push   0xffffffa8
  412518:	ror    BYTE PTR [bx+si-0x50e1],0x2f
  41251e:	pop    ss
  41251f:	bound  edi,QWORD PTR [ebx-0x1e67a2dc]
  412525:	data16 mov bh,0x54
  412528:	aam    0x58
  41252a:	adc    DWORD PTR [ebx+0x7e],ebp
  41252d:	sub    al,0x24
  41252f:	pop    esp
  412530:	rcr    BYTE PTR es:[eax],0x5a
  412534:	sbb    eax,0x4247f154
  412539:	jae    0x41253c
  41253b:	enterw 0xb33a,0x5
  412540:	jb     0x4124d6
  412542:	(bad)  
  412544:	and    bl,BYTE PTR [edi]
  412546:	(bad)  
  412547:	push   0x22
  412549:	dec    edx
  41254a:	and    eax,0x26f8dced
  41254f:	adc    al,cl
  412551:	cmp    BYTE PTR [esi-0x7fa9246a],cl
  412557:	adc    al,0x8a
  412559:	adc    al,0x62
  41255b:	aas    
  41255c:	retf   0xa7d1
  41255f:	xchg   edi,eax
  412560:	and    al,0x80
  412562:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412563:	repz popf 
  412565:	mov    ebx,0x49181a6e
  41256a:	shl    DWORD PTR fs:[eax],1
  41256d:	push   0x35527770
  412572:	pushf  
  412573:	add    ch,BYTE PTR [esi]
  412575:	imul   eax,DWORD PTR [edi],0x4
  412578:	fstp   DWORD PTR [eax]
  41257a:	arpl   WORD PTR [esi],ax
  41257c:	popa   
  41257d:	dec    ecx
  41257e:	mov    dl,0xd4
  412580:	dec    BYTE PTR [edi+0x17]
  412583:	sbb    edi,eax
  412585:	(bad)  
  412586:	aam    0xdd
  412588:	es pusha 
  41258a:	hlt    
  41258b:	cmc    
  41258c:	pop    ecx
  41258d:	iret   
  41258e:	and    DWORD PTR [edx+0x3a],0xffffffd9
  412592:	ins    BYTE PTR es:[edi],dx
  412593:	or     ebp,DWORD PTR ds:0xd7cd5785
  412599:	xlat   BYTE PTR ds:[ebx]
  41259a:	retf   
  41259b:	or     DWORD PTR [ebx+0x5c3ef7c1],ecx
  4125a1:	push   edx
  4125a2:	mov    WORD PTR [edx+ebp*1-0x16],?
  4125a6:	xor    DWORD PTR [esi+0x3d],ecx
  4125a9:	dec    edi
  4125aa:	mov    ch,dl
  4125ac:	push   ebx
  4125ae:	fs iret 
  4125b0:	mov    al,ds:0xb578e792
  4125b5:	inc    esi
  4125b6:	ja     0x41255b
  4125b8:	std    
  4125b9:	addr16 aam 0xbf
  4125bc:	dec    edx
  4125bd:	iret   
  4125be:	pop    edx
  4125bf:	arpl   WORD PTR [edi+0x2c],dx
  4125c2:	test   al,0xc9
  4125c4:	call   0x3e1a17a8
  4125c9:	pop    ecx
  4125ca:	mov    ds:0x482b9394,eax
  4125cf:	ret    0x3a92
  4125d2:	push   ecx
  4125d3:	mov    BYTE PTR [ecx+0x6c],dh
  4125d6:	aad    0xf2
  4125d8:	dec    eax
  4125d9:	add    esp,DWORD PTR [esi]
  4125db:	sub    dl,0x1b
  4125de:	ret    0xb1dc
  4125e1:	daa    
  4125e2:	scas   al,BYTE PTR es:[edi]
  4125e3:	xchg   DWORD PTR [edx+esi*4],edi
  4125e6:	xor    al,0xfa
  4125e8:	xchg   edi,ebp
  4125ea:	lahf   
  4125eb:	jmp    0xd27aedea
  4125f0:	adc    ch,0xd2
  4125f3:	or     esi,DWORD PTR [ecx+0x13]
  4125f6:	pop    edi
  4125f7:	pop    edx
  4125f8:	fucomip st,st(1)
  4125fa:	mov    eax,0x3c910eb8
  4125ff:	call   0x5856b4fb
  412604:	jmp    0x91d62bdd
  412609:	call   0xeef:0xbd77d34d
  412610:	out    dx,al
  412611:	int3   
  412612:	jb     0x4125b7
  412614:	add    BYTE PTR [esi],0xb9
  412617:	inc    ebx
  412618:	shl    DWORD PTR [esp+ecx*8+0x59],0x11
  41261d:	sbb    DWORD PTR [ecx-0x7fb18496],eax
  412623:	mov    dh,BYTE PTR [edi]
  412625:	sbb    edi,DWORD PTR [ecx+0x33]
  412628:	mov    eax,ds:0x25b39afc
  41262d:	push   esi
  41262e:	xchg   DWORD PTR [esi],edi
  412630:	popf   
  412631:	jmp    0x5606c042
  412636:	mov    BYTE PTR [esi+0x2fa38936],cl
  41263c:	cmp    ah,BYTE PTR [edi-0x70ee9cd0]
  412642:	xchg   ecx,eax
  412643:	add    ecx,DWORD PTR [ecx]
  412645:	aas    
  412646:	call   0x6919c96d
  41264b:	sub    eax,0x91553f65
  412650:	adc    ebp,DWORD PTR [ebx]
  412652:	fwait
  412653:	lds    esi,FWORD PTR [edi]
  412655:	sti    
  412656:	pop    ebx
  412657:	shl    BYTE PTR [esi+0x22],1
  41265a:	aas    
  41265b:	adc    ecx,esp
  41265d:	push   cs
  41265e:	out    dx,al
  41265f:	(bad)  [eax*1-0x5df5e8b9]
  412666:	mov    dl,0xc3
  412668:	adc    esp,edx
  41266a:	shl    esp,cl
  41266c:	mov    ah,0x64
  41266e:	add    DWORD PTR [esi],eax
  412670:	stos   BYTE PTR es:[edi],al
  412671:	xchg   ecx,eax
  412672:	push   es
  412673:	bound  ecx,QWORD PTR [esi]
  412675:	cmp    al,0xc4
  412677:	jae    0x412669
  412679:	call   0x41b:0xd40be14
  412680:	push   edx
  412681:	push   edi
  412682:	ror    BYTE PTR ds:0xd784063f,1
  412688:	or     al,0xc5
  41268a:	jle    0x4126d2
  41268c:	imul   edx,DWORD PTR [ebp+0x125875f0],0x32
  412693:	cmp    eax,esp
  412695:	mov    ds:0xaaea5205,eax
  41269a:	call   0xb6afbf38
  41269f:	sar    BYTE PTR [esp+esi*4-0x4f],cl
  4126a3:	fisttp QWORD PTR ss:[esi+0x5e]
  4126a7:	mov    edi,0x39a2d018
  4126ac:	fcmovne st,st(6)
  4126ae:	(bad)  
  4126af:	out    0xa4,al
  4126b1:	ds fdivr st,st(7)
  4126b4:	into   
  4126b5:	xor    al,BYTE PTR [edi]
  4126b7:	lock cmp edx,esp
  4126ba:	ins    DWORD PTR es:[edi],dx
  4126bb:	not    bh
  4126bd:	fsub   DWORD PTR [eax+0x5f]
  4126c0:	cmp    cl,BYTE PTR [ecx+0x76134919]
  4126c6:	lock adc bh,al
  4126c9:	repz inc edx
  4126cb:	push   ss
  4126cc:	add    bh,BYTE PTR [eax-0x74]
  4126cf:	pop    esi
  4126d0:	jecxz  0x4126db
  4126d2:	call   DWORD PTR [edx-0x1a]
  4126d5:	jmp    0x4126c6
  4126d7:	push   edi
  4126d8:	test   WORD PTR [edx-0x40],si
  4126dc:	sub    ebp,esp
  4126de:	pop    esi
  4126df:	pop    ebx
  4126e0:	adc    DWORD PTR [ebx+edx*8-0x5c],eax
  4126e4:	mov    bl,0xb4
  4126e6:	and    DWORD PTR [ebx-0x4daa0297],esi
  4126ec:	mov    eax,0xa3f08214
  4126f1:	jge    0x41270b
  4126f3:	dec    BYTE PTR [ebp-0x65]
  4126f6:	in     al,0x35
  4126f8:	xlat   BYTE PTR ds:[ebx]
  4126f9:	in     eax,dx
  4126fa:	and    al,0x5a
  4126fc:	ss fdiv st,st(3)
  4126ff:	loope  0x41272a
  412701:	test   al,0xae
  412703:	jne    0x41270c
  412705:	ins    BYTE PTR es:[edi],dx
  412706:	xchg   esi,eax
  412707:	or     dh,ah
  412709:	mov    bl,0x5f
  41270b:	mov    bl,0xa7
  41270d:	jno    0x41275e
  41270f:	xchg   ebx,eax
  412710:	pop    ss
  412711:	stc    
  412712:	and    eax,0x84768d6c
  412717:	cmc    
  412718:	int3   
  412719:	cwde   
  41271a:	daa    
  41271b:	mov    fs,WORD PTR [ebp+0x30c2f558]
  412721:	ja     0x4126b9
  412723:	push   eax
  412724:	add    ecx,DWORD PTR [edi]
  412726:	enter  0x598a,0x97
  41272a:	sbb    eax,0xbd15c936
  41272f:	int    0x72
  412731:	cmp    edi,DWORD PTR [eax+0x24]
  412734:	or     al,0x1b
  412736:	jbe    0x41271b
  412738:	xor    dl,cl
  41273a:	pushf  
  41273b:	lds    edx,FWORD PTR [edi]
  41273d:	rcl    ebx,0x1e
  412740:	sbb    DWORD PTR [esi-0x31],esp
  412743:	jne    0x412780
  412745:	push   0x5f
  412747:	hlt    
  412748:	sub    DWORD PTR [ebp+0x65f58fba],esi
  41274e:	add    ecx,ebx
  412750:	arpl   WORD PTR [eax+0x54],bp
  412753:	pop    ecx
  412754:	mov    ds:0x9c98789a,al
  412759:	(bad)  
  41275a:	stos   DWORD PTR es:[edi],eax
  41275b:	je     0x412769
  41275d:	cmp    eax,0xdedeec5c
  412762:	popf   
  412763:	sub    BYTE PTR [ecx+0x56],dh
  412766:	or     BYTE PTR [eax-0x4e77dcc6],0xb8
  41276d:	nop
  41276e:	aaa    
  41276f:	xor    DWORD PTR [edi+0x730bab13],ecx
  412775:	inc    edi
  412776:	imul   edx,esp,0x2ddd1583
  41277c:	or     BYTE PTR [edx-0x20],bl
  41277f:	lods   eax,DWORD PTR ds:[esi]
  412780:	jbe    0x4127dd
  412782:	jle    0x412755
  412784:	hlt    
  412785:	pop    es
  412786:	inc    ebp
  412787:	mov    dh,0xb1
  412789:	jp     0x4127d2
  41278b:	loop   0x4127c8
  41278d:	mov    cl,0x56
  41278f:	or     esp,DWORD PTR [ebx+0x4b842c5a]
  412795:	jmp    0x4127ee
  412797:	mov    al,ds:0x31dc26fa
  41279c:	js     0x41272a
  41279e:	jge    0x41279d
  4127a0:	das    
  4127a1:	or     bl,ah
  4127a3:	(bad)  
  4127a4:	gs sbb eax,0xaf7769bc
  4127aa:	pop    ebx
  4127ab:	mov    dh,0xf7
  4127ad:	cmp    edi,edi
  4127af:	jae    0x412798
  4127b1:	stc    
  4127b2:	cmp    al,0x50
  4127b4:	stos   BYTE PTR es:[edi],al
  4127b5:	addr16 stc 
  4127b7:	xor    dh,BYTE PTR [edx+0x3a]
  4127ba:	repnz into 
  4127bc:	xor    DWORD PTR [eax],esi
  4127be:	fadd   DWORD PTR ds:0x4874cfde
  4127c4:	mov    edi,0x66de3ccc
  4127c9:	popf   
  4127ca:	pop    ds
  4127cb:	mov    dl,0x4b
  4127cd:	push   es
  4127ce:	pop    edi
  4127cf:	cmp    al,0xce
  4127d1:	fisttp WORD PTR ds:0xf02ddf9d
  4127d7:	clc    
  4127d8:	ds push ds
  4127da:	lock stc 
  4127dc:	cmp    BYTE PTR [ebx+0x37],al
  4127df:	pop    esi
  4127e0:	push   cs
  4127e1:	mov    ds:0xe6741ff3,al
  4127e6:	xchg   ebx,eax
  4127e7:	stos   DWORD PTR es:[edi],eax
  4127e8:	pop    ebp
  4127e9:	fsubp  st(2),st
  4127eb:	ret    0x9b24
  4127ee:	dec    ecx
  4127ef:	out    0x42,eax
  4127f1:	clc    
  4127f2:	fsubr  QWORD PTR [esi+0x10]
  4127f5:	sbb    eax,0xcf1905e6
  4127fa:	ja     0x4127df
  4127fc:	popa   
  4127fd:	shl    eax,1
  4127ff:	(bad)  
  412800:	fmul   DWORD PTR ds:0xcee32da3
  412806:	stc    
  412807:	pop    ebx
  412808:	push   esp
  412809:	cdq    
  41280a:	test   DWORD PTR [esi-0x4a58b369],esp
  412810:	pop    ebx
  412811:	jge    0x4127bf
  412813:	jno    0x412841
  412815:	xchg   esp,eax
  412816:	jmp    0x4127ef
  412818:	mov    ds:0xc2f77c9,eax
  41281d:	add    BYTE PTR [ebp+eiz*2+0x9],0xd3
  412822:	sbb    eax,0x98544a30
  412827:	jp     0x4127b8
  412829:	adc    ebp,0x3b2f3593
  41282f:	push   esi
  412830:	repz fcomp QWORD PTR [eax-0x3d3e5950]
  412837:	or     al,bh
  412839:	loope  0x41284b
  41283b:	sbb    BYTE PTR [eax],0xbf
  41283e:	mov    eax,0x18a9f67c
  412843:	ffree  st(0)
  412845:	dec    eax
  412846:	js     0x4127fc
  412848:	sbb    al,0xb5
  41284a:	pop    esp
  41284b:	js     0x41285c
  41284d:	jle    0x4127dc
  41284f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412850:	push   ebp
  412851:	stos   BYTE PTR es:[edi],al
  412852:	xor    BYTE PTR [ecx+0x55],cl
  412855:	es dec esp
  412857:	jb     0x412835
  412859:	push   ds
  41285a:	mov    ebp,DWORD PTR [ebx]
  41285c:	add    esp,ebp
  41285e:	or     al,0x86
  412860:	std    
  412861:	fwait
  412862:	xchg   BYTE PTR [edi+0x15],bh
  412865:	pop    ds
  412866:	cli    
  412867:	(bad)  
  412869:	mov    ecx,0x8256d5fe
  41286e:	int    0xf1
  412870:	loopne 0x41282c
  412872:	dec    ebp
  412873:	stos   DWORD PTR es:[edi],eax
  412874:	neg    al
  412876:	cld    
  412877:	jo     0x41287d
  412879:	fisub  WORD PTR ds:0xbcbb993d
  41287f:	adc    al,0x78
  412881:	loop   0x41288e
  412883:	dec    edx
  412884:	inc    eax
  412885:	and    ecx,edi
  412887:	cdq    
  412888:	pmovmskb eax,mm7
  41288b:	xchg   edx,eax
  41288c:	jnp    0x4128b1
  41288e:	cmp    WORD PTR [edx-0x78],0xfffe
  412893:	ds jl  0x4128d0
  412896:	clc    
  412897:	xchg   ebx,eax
  412898:	(bad)  
  412899:	xor    al,0x92
  41289b:	jl     0x41287e
  41289d:	aaa    
  41289e:	pop    esi
  41289f:	and    DWORD PTR [di],0x9cdf2698
  4128a6:	mov    ds:0xa3f10a24,al
  4128ab:	xor    ah,BYTE PTR [edx+0x69162383]
  4128b1:	push   ss
  4128b2:	aad    0xd6
  4128b4:	into   
  4128b5:	pop    DWORD PTR [ebp-0x1b4eddde]
  4128bb:	rcl    BYTE PTR [edx-0x70],1
  4128be:	sar    BYTE PTR [ebp+0x278ec22b],cl
  4128c4:	jno    0x41286d
  4128c6:	mov    cl,0x1b
  4128c8:	or     eax,esi
  4128ca:	sub    DWORD PTR [eax],esi
  4128cc:	pop    ebp
  4128cd:	test   al,0x9d
  4128cf:	and    eax,0xe3e6d171
  4128d4:	cwde   
  4128d5:	and    DWORD PTR [edi-0x5cfb1bac],ecx
  4128db:	xchg   edi,eax
  4128dc:	repnz scas al,BYTE PTR es:[edi]
  4128de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128df:	or     DWORD PTR [edi-0x21],eax
  4128e2:	ret    0x23f1
  4128e5:	repnz sbb al,0x92
  4128e8:	xor    DWORD PTR ds:0x52445dfa,eax
  4128ee:	push   0x6c2564cb
  4128f3:	ins    DWORD PTR es:[edi],dx
  4128f4:	sub    BYTE PTR [ecx+0x22b6ba54],cl
  4128fa:	push   ds
  4128fb:	xor    BYTE PTR [esi-0x12],0xa7
  4128ff:	jb     0x412951
  412901:	lea    ecx,[ebp-0x172e704a]
  412907:	loop   0x4128ed
  412909:	mov    al,0xd4
  41290b:	mov    eax,0x61ca0c8e
  412910:	sub    BYTE PTR ss:[edi+0x17],dl
  412914:	sub    al,0x76
  412916:	retf   0xca26
  412919:	repnz call 0x9958:0x47287441
  412921:	cwde   
  412922:	cmp    al,ch
  412924:	fwait
  412925:	sbb    dl,BYTE PTR [esi-0x79cd27e]
  41292b:	retf   0xba5a
  41292e:	xchg   edx,eax
  41292f:	push   edx
  412930:	sahf   
  412931:	js     0x4128e1
  412933:	ret    0x9e95
  412936:	mov    ds:0x7cbc2820,al
  41293b:	mov    ebx,DWORD PTR [ecx-0x1]
  41293e:	jle    0x4128f6
  412940:	pop    eax
  412941:	pop    edi
  412942:	rcl    DWORD PTR [eax-0x1e],cl
  412945:	sahf   
  412946:	sub    ch,BYTE PTR [esi-0x68c61c32]
  41294c:	xchg   DWORD PTR [edi+0x41],edx
  41294f:	outs   dx,BYTE PTR ds:[esi]
  412950:	lods   eax,DWORD PTR ds:[esi]
  412951:	fdivr  DWORD PTR [edx+0x7e]
  412954:	mov    BYTE PTR [ebx+0x3f9c0aa5],bh
  41295a:	push   0xffffffea
  41295c:	jmp    0x71a2:0x6e7e056
  412963:	jns    0x4129e1
  412965:	sub    BYTE PTR [edx+0x16df3cd9],0x2b
  41296c:	repz jp 0x4129b0
  41296f:	xchg   esp,eax
  412970:	jb     0x41292f
  412972:	cli    
  412973:	add    eax,0x202554f2
  412978:	test   al,0xb6
  41297a:	test   DWORD PTR [eax+0x61365165],esi
  412980:	xor    bh,cl
  412982:	imul   edx,edi,0x3db495f7
  412988:	adc    dh,BYTE PTR ds:0xe09b5d33
  41298e:	loop   0x4129b7
  412990:	add    al,BYTE PTR [eax-0x4db93df3]
  412996:	push   ebp
  412997:	pop    ebx
  412998:	out    dx,al
  412999:	cmc    
  41299a:	in     al,dx
  41299b:	inc    edx
  41299c:	sbb    eax,0x20d9728c
  4129a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129a2:	mov    dh,0x5a
  4129a4:	sbb    DWORD PTR [ecx],edi
  4129a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129a7:	enter  0x7991,0xc6
  4129ab:	outs   dx,BYTE PTR cs:[esi]
  4129ad:	jne    0x4129db
  4129af:	retf   
  4129b0:	cmovns edx,DWORD PTR [eax-0x54]
  4129b4:	sub    DWORD PTR [esi+0x2a],ebp
  4129b7:	xchg   edx,eax
  4129b8:	push   es
  4129b9:	pop    eax
  4129ba:	mov    gs,edi
  4129bc:	inc    esi
  4129bd:	adc    BYTE PTR [edi+0x31],al
  4129c0:	add    al,0x94
  4129c2:	test   DWORD PTR [eax+ecx*8-0x4e97b9b8],edx
  4129c9:	(bad)  
  4129ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129cb:	pusha  
  4129cc:	pop    ds
  4129cd:	imul   edi,DWORD PTR [esi],0x5fb12071
  4129d3:	lock mov ds:0xedcb9bad,al
  4129d9:	std    
  4129da:	popa   
  4129db:	into   
  4129dc:	sbb    eax,0x7277cab1
  4129e1:	out    dx,eax
  4129e2:	jecxz  0x41296d
  4129e4:	dec    ebx
  4129e5:	test   al,0x70
  4129e7:	push   ss
  4129e8:	and    DWORD PTR [ebx+0x70],0x27
  4129ec:	and    BYTE PTR [edx],0x9b
  4129ef:	jbe    0x4129b2
  4129f1:	cmc    
  4129f2:	fisubr DWORD PTR ds:0xd9a2cf8
  4129f8:	out    0x8,eax
  4129fa:	call   0x3b743114
  4129ff:	and    eax,0x89eefafc
  412a04:	int3   
  412a05:	adc    dl,al
  412a07:	cmp    eax,0x440236d8
  412a0c:	or     ebx,DWORD PTR [esi]
  412a0e:	or     dl,BYTE PTR [edx+0x41]
  412a11:	test   al,0xd5
  412a13:	ja     0x412a74
  412a15:	cwde   
  412a16:	das    
  412a17:	out    dx,eax
  412a18:	inc    esi
  412a19:	jns    0x4129b1
  412a1b:	inc    ebp
  412a1c:	add    ebp,esp
  412a1e:	cmp    esp,DWORD PTR [ebp-0x27]
  412a21:	out    0x26,eax
  412a23:	outs   dx,BYTE PTR ds:[esi]
  412a24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a26:	inc    edi
  412a27:	std    
  412a28:	int3   
  412a29:	repz imul ebx,DWORD PTR [esi+0x7b333cd1],0x8e66a761
  412a34:	jmp    0x4129c2
  412a36:	stos   BYTE PTR es:[edi],al
  412a37:	shr    BYTE PTR [edi],1
  412a39:	cmp    eax,0x4e73ac4b
  412a3e:	cs jl  0x412a59
  412a41:	div    BYTE PTR [esp+eax*8]
  412a44:	add    ebx,ebx
  412a46:	out    dx,al
  412a47:	mov    ah,0x33
  412a49:	add    al,0x7c
  412a4b:	add    cl,ah
  412a4d:	dec    eax
  412a4e:	out    0x49,al
  412a50:	and    ebp,DWORD PTR [edx+0x4e875e4b]
  412a56:	adc    al,0x61
  412a58:	or     al,0x48
  412a5a:	fist   WORD PTR [ebx+0x1bfe6231]
  412a60:	test   al,0xef
  412a62:	in     al,dx
  412a63:	ins    BYTE PTR es:[edi],dx
  412a64:	cmc    
  412a65:	pop    es
  412a66:	or     dl,ah
  412a68:	bound  ecx,QWORD PTR [esi+0x7d]
  412a6b:	add    al,0x9b
  412a6d:	push   0x74
  412a6f:	sub    bl,bh
  412a71:	pop    ss
  412a72:	(bad)  
  412a73:	and    eax,0xaea94e93
  412a78:	adc    ebx,DWORD PTR [ebp-0x1d502ed7]
  412a7e:	jno    0x412afe
  412a80:	xchg   esp,eax
  412a81:	inc    edi
  412a82:	xchg   ebp,eax
  412a83:	push   ds
  412a84:	test   BYTE PTR [esi-0x1a],ah
  412a87:	retf   0x7136
  412a8a:	stc    
  412a8b:	fmul   st,st(0)
  412a8d:	int    0x24
  412a8f:	inc    ebx
  412a90:	loopne 0x412a9d
  412a92:	cmp    BYTE PTR [ebp+eax*4-0x680154c],cl
  412a99:	push   cs
  412a9a:	dec    eax
  412a9b:	xchg   DWORD PTR [edx-0x13488036],edx
  412aa1:	(bad)  
  412aa2:	jge    0x412a2b
  412aa4:	out    0x1,al
  412aa6:	stos   DWORD PTR es:[edi],eax
  412aa7:	pop    eax
  412aa8:	lahf   
  412aa9:	jne    0xf9a71907
  412aaf:	jne    0x412a80
  412ab1:	pop    esp
  412ab2:	into   
  412ab3:	arpl   WORD PTR [eax-0x44a7df55],dx
  412ab9:	lock jbe 0x412b17
  412abc:	mov    ch,0x11
  412abe:	and    ah,BYTE PTR [ebp+0x4e08d395]
  412ac4:	fist   DWORD PTR [ecx-0x2]
  412ac7:	sbb    esi,DWORD PTR [ebx+esi*2-0x31]
  412acb:	mov    esi,0x6da39fdc
  412ad0:	cli    
  412ad1:	cmp    eax,0xec8dd755
  412ad6:	and    ebp,edx
  412ad8:	popf   
  412ad9:	jbe    0x412aec
  412adb:	in     al,0xfb
  412add:	and    eax,0xe46c1508
  412ae2:	pusha  
  412ae3:	cmp    al,0xa0
  412ae5:	or     BYTE PTR [eiz*8+0x3701a234],bh
  412aec:	pop    ss
  412aed:	std    
  412aee:	push   cs
  412aef:	lods   al,BYTE PTR ds:[esi]
  412af0:	ds (bad) 
  412af3:	xchg   DWORD PTR [ebx],ebx
  412af5:	cmp    eax,0xfa3b03d4
  412afa:	mov    ebx,DWORD PTR [ebx+0x8]
  412afd:	sub    BYTE PTR [esi+0x23b3d0a7],bl
  412b03:	inc    esp
  412b04:	add    BYTE PTR [edi],ah
  412b06:	mov    ch,0x74
  412b08:	sub    DWORD PTR [edx-0x25577d65],esp
  412b0e:	sbb    bh,BYTE PTR [ecx+esi*4-0x7d]
  412b12:	mov    ecx,0xd77b5ef6
  412b17:	js     0x412b82
  412b19:	push   0x3a
  412b1b:	ret    
  412b1c:	daa    
  412b1d:	or     dl,BYTE PTR [ebx+0x68]
  412b20:	jge    0x412b8a
  412b22:	addr16 pusha 
  412b24:	mov    cl,0x48
  412b26:	in     eax,0xc3
  412b28:	mov    ebx,DWORD PTR [edx-0x414e3ea5]
  412b2e:	jbe    0x412b69
  412b30:	xchg   esp,eax
  412b31:	inc    edi
  412b32:	sbb    BYTE PTR ds:0xc4c7fcf8,ah
  412b38:	jno    0x412b7b
  412b3a:	sub    al,bl
  412b3c:	cmp    eax,0x842e00a5
  412b41:	js     0x412b36
  412b43:	ja     0x412b91
  412b45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b46:	(bad)  
  412b47:	mov    esp,0xb0965048
  412b4c:	push   ebp
  412b4d:	out    0xc3,eax
  412b4f:	cmp    ebx,DWORD PTR [eax]
  412b51:	test   eax,0x8b56c86f
  412b56:	lock out dx,al
  412b58:	pusha  
  412b59:	mov    WORD PTR [ecx-0x60],ss
  412b5c:	jo     0x412b10
  412b5e:	cdq    
  412b5f:	test   edx,ecx
  412b61:	and    al,0xb1
  412b63:	(bad)  
  412b64:	fisub  DWORD PTR [esi]
  412b66:	cwde   
  412b67:	add    BYTE PTR gs:[edi+ebx*1],bh
  412b6b:	inc    edi
  412b6c:	jge    0x412b7e
  412b6e:	je     0x412bdf
  412b70:	add    BYTE PTR [edi+0x17],cl
  412b73:	push   cs
  412b74:	adc    DWORD PTR [edx+0x6e1b2bbb],ebp
  412b7a:	fs push ds
  412b7c:	jmp    0xb908:0x9f8048aa
  412b83:	inc    esp
  412b84:	add    al,0xac
  412b86:	mov    cl,0x4e
  412b88:	repnz in eax,dx
  412b8a:	and    ebp,0x83ec6bd8
  412b90:	push   es
  412b91:	jl     0x412b6c
  412b93:	std    
  412b94:	push   eax
  412b95:	jmp    0xf43b:0x407381db
  412b9c:	dec    eax
  412b9d:	xchg   ebx,eax
  412b9e:	xor    bh,BYTE PTR [eax]
  412ba0:	inc    ebx
  412ba1:	stos   BYTE PTR es:[edi],al
  412ba2:	push   ecx
  412ba3:	ds mov ecx,0xd2349144
  412ba9:	dec    esi
  412baa:	icebp  
  412bab:	jecxz  0x412c22
  412bad:	ins    DWORD PTR es:[edi],dx
  412bae:	dec    ecx
  412baf:	or     al,BYTE PTR [ebx]
  412bb1:	or     eax,0x657a1272
  412bb6:	jg     0x412b87
  412bb8:	pop    ebx
  412bb9:	iret   
  412bba:	lds    eax,FWORD PTR [ecx-0x6a]
  412bbd:	dec    ebx
  412bbe:	mov    DWORD PTR [edx+0x7c],ebp
  412bc1:	pop    ss
  412bc2:	jae    0x412b52
  412bc4:	mov    dh,0x60
  412bc6:	sbb    BYTE PTR [edi],0xa2
  412bc9:	(bad)  
  412bca:	or     al,0x62
  412bcc:	jae    0x412c1c
  412bce:	shrd   eax,ebp,0xba
  412bd2:	xlat   BYTE PTR ds:[ebx]
  412bd3:	mov    edx,0xe6621746
  412bd8:	xchg   esi,eax
  412bd9:	adc    eax,0xc581563
  412bde:	mov    cl,0xbe
  412be0:	xchg   DWORD PTR [esi+eax*2-0x50],esi
  412be4:	push   0xd2f9d81
  412be9:	adc    edi,DWORD PTR [edi+0x7a47e5f4]
  412bef:	sub    edi,esi
  412bf1:	jmp    0x3a35d8f2
  412bf6:	mov    ds:0x47422638,eax
  412bfb:	test   al,0xf2
  412bfd:	(bad)  
  412bfe:	pop    esp
  412bff:	inc    ebp
  412c00:	push   ecx
  412c01:	jecxz  0x412c0d
  412c03:	neg    DWORD PTR [esi-0x2b5cd3a2]
  412c09:	cmp    eax,0x53459383
  412c0e:	push   eax
  412c0f:	repz add BYTE PTR [ebx-0xe],ch
  412c13:	inc    esi
  412c14:	sahf   
  412c15:	or     esi,DWORD PTR [esi+0x76]
  412c18:	clc    
  412c19:	push   cs
  412c1a:	stc    
  412c1b:	jmp    0x412c32
  412c1d:	repnz pop ebx
  412c1f:	sbb    BYTE PTR [esi+0x5684194a],ch
  412c25:	xor    eax,0x53fbe18a
  412c2a:	pushf  
  412c2b:	shr    ecx,cl
  412c2d:	xor    dh,BYTE PTR [bp+si+0x30dc]
  412c32:	icebp  
  412c33:	jmp    0x20b3:0x6b6adce3
  412c3a:	mov    ebp,0xf42aa19b
  412c3f:	std    
  412c40:	cmp    al,0x1d
  412c42:	das    
  412c43:	(bad)  
  412c44:	dec    ebp
  412c45:	outs   dx,DWORD PTR ds:[esi]
  412c46:	or     BYTE PTR [edx+0x7c4a3e69],ah
  412c4c:	bound  eax,QWORD PTR [edx]
  412c4e:	leave  
  412c4f:	adc    DWORD PTR ds:0x6e64bfd5,ebx
  412c55:	xor    eax,0x38
  412c58:	dec    eax
  412c59:	call   0x17a93d38
  412c5e:	and    DWORD PTR [esp+ecx*2],esi
  412c61:	push   0x62
  412c63:	pop    ebp
  412c64:	xlat   BYTE PTR ds:[ebx]
  412c65:	fwait
  412c66:	inc    ebx
  412c67:	sbb    DWORD PTR [edi+0x4d],0xfffffff5
  412c6b:	or     dh,BYTE PTR [edx]
  412c6d:	data16 fwait
  412c6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c70:	stos   BYTE PTR es:[edi],al
  412c71:	jbe    0x412c8d
  412c73:	xchg   esp,eax
  412c74:	and    al,0xff
  412c76:	sub    eax,0xf08819ee
  412c7b:	jp     0x412c8f
  412c7d:	dec    BYTE PTR [ebx+0x46]
  412c80:	pop    ebx
  412c81:	xchg   ebp,eax
  412c82:	push   edi
  412c83:	sbb    BYTE PTR [ecx],cl
  412c85:	add    DWORD PTR [edx],ecx
  412c87:	pop    es
  412c88:	lock dec esi
  412c8a:	push   esp
  412c8b:	cmp    dl,bh
  412c8d:	in     eax,0xc7
  412c8f:	dec    esp
  412c90:	jl     0x412c8c
  412c92:	ins    DWORD PTR es:[edi],dx
  412c93:	shl    DWORD PTR [ebx+0x70d331a3],0x27
  412c9a:	xchg   esp,eax
  412c9b:	xchg   ebx,eax
  412c9c:	adc    eax,0x8770ce0e
  412ca1:	cdq    
  412ca2:	cwde   
  412ca3:	inc    ebp
  412ca4:	push   ebx
  412ca5:	out    dx,eax
  412ca6:	addr16 (bad) 
  412ca8:	push   cs
  412ca9:	sti    
  412caa:	pushf  
  412cab:	mov    cl,0x83
  412cad:	aam    0x15
  412caf:	loope  0x412cb7
  412cb1:	(bad)  
  412cb2:	mov    ebx,ss
  412cb4:	xor    DWORD PTR [eax+eiz*2-0x78],0x1
  412cb9:	ret    0xe6da
  412cbc:	fadd   DWORD PTR [edx]
  412cbe:	rol    cl,cl
  412cc0:	retf   0x5e74
  412cc3:	test   eax,0x20805be2
  412cc8:	gs pop edi
  412cca:	imul   BYTE PTR [ebx+0x1cf138fd]
  412cd0:	shl    bl,1
  412cd2:	std    
  412cd3:	xchg   edi,eax
  412cd4:	push   ebx
  412cd5:	xor    DWORD PTR [edi],ecx
  412cd7:	out    dx,al
  412cd8:	out    0x16,al
  412cda:	push   ebx
  412cdb:	pop    ds
  412cdc:	gs pop esi
  412cde:	jns    0x412d19
  412ce0:	sti    
  412ce1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ce2:	sub    eax,0x8a21601c
  412ce7:	push   cs
  412ce8:	jecxz  0x412ccc
  412cea:	leave  
  412ceb:	(bad)  
  412cec:	nop
  412ced:	das    
  412cee:	bound  ebp,QWORD PTR [ecx-0x1]
  412cf1:	imul   edi,DWORD PTR [esi-0x23],0x2f611d32
  412cf8:	cpuid  
  412cfa:	dec    ecx
  412cfb:	jbe    0x412d75
  412cfd:	add    esp,DWORD PTR [edi]
  412cff:	dec    edx
  412d00:	mov    dh,0x6d
  412d02:	dec    esi
  412d03:	dec    ecx
  412d04:	pop    esi
  412d05:	cs sbb al,0xee
  412d08:	je     0x412d55
  412d0a:	pop    ds
  412d0b:	add    DWORD PTR [edx],edx
  412d0d:	jg     0x412cf7
  412d0f:	mov    ecx,eax
  412d11:	or     eax,0xe97e2f3d
  412d16:	push   ebx
  412d17:	retf   0xd4a8
  412d1a:	mov    bl,0x51
  412d1c:	test   DWORD PTR [esi+0x68f3086a],ecx
  412d22:	jg     0x412cc7
  412d24:	popf   
  412d25:	sti    
  412d26:	lods   eax,DWORD PTR ds:[esi]
  412d27:	push   ecx
  412d28:	lahf   
  412d29:	sub    BYTE PTR [eax-0x2bc4794b],bh
  412d2f:	or     ah,BYTE PTR [esi*4+0x69972785]
  412d36:	(bad)  
  412d37:	stos   DWORD PTR es:[edi],eax
  412d38:	shl    DWORD PTR [eax-0x70],0x94
  412d3c:	(bad)  
  412d3d:	mov    dl,0xde
  412d3f:	and    al,0x16
  412d41:	inc    ebx
  412d42:	pop    esp
  412d43:	jne    0x412d25
  412d45:	int    0x8a
  412d47:	out    dx,al
  412d48:	out    dx,al
  412d49:	nop
  412d4a:	neg    BYTE PTR [ebx-0x25151045]
  412d50:	sub    ebp,DWORD PTR [edi+0x4f]
  412d53:	scas   al,BYTE PTR es:[edi]
  412d54:	xor    eax,0xbf35a7df
  412d59:	inc    esp
  412d5a:	mov    bl,0x39
  412d5c:	jmp    0x412d44
  412d5e:	test   DWORD PTR [eax],eax
  412d60:	dec    esp
  412d61:	adc    eax,0xab55af0c
  412d66:	push   eax
  412d67:	pop    eax
  412d68:	add    BYTE PTR ds:0x9ad2b6fb,bl
  412d6e:	test   BYTE PTR [ecx],ah
  412d70:	xchg   edi,eax
  412d71:	sbb    DWORD PTR [ecx-0x5b],ecx
  412d74:	mov    dl,0xa7
  412d76:	pusha  
  412d77:	mov    ecx,0xf9b6f8a8
  412d7c:	(bad)  
  412d7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d7e:	jge    0x412d86
  412d80:	lods   al,BYTE PTR ds:[esi]
  412d81:	add    ecx,DWORD PTR [ebx]
  412d83:	imul   BYTE PTR [eax+ebx*8+0x29]
  412d87:	pop    edx
  412d88:	cmc    
  412d89:	pop    ecx
  412d8a:	icebp  
  412d8b:	inc    ebp
  412d8c:	aad    0x79
  412d8e:	aaa    
  412d8f:	pop    es
  412d90:	xor    DWORD PTR [edi],eax
  412d92:	xchg   esi,eax
  412d93:	rol    bl,0x3f
  412d96:	jae    0x412de2
  412d98:	(bad)  [ebx]
  412d9a:	popf   
  412d9b:	push   ebx
  412d9c:	jae    0x412def
  412d9e:	lods   eax,DWORD PTR ds:[esi]
  412d9f:	lods   al,BYTE PTR ds:[esi]
  412da0:	cmc    
  412da1:	mov    cl,0xb4
  412da3:	pop    ebx
  412da4:	retf   
  412da5:	jb     0x412d8a
  412da7:	push   ds
  412da8:	lahf   
  412da9:	pushf  
  412daa:	dec    bp
  412dac:	and    edi,eax
  412dae:	xchg   BYTE PTR [edx-0x2e],cl
  412db1:	add    BYTE PTR ds:0x8a8583bc,dl
  412db7:	idiv   BYTE PTR [ebx+edi*4-0x361bfb30]
  412dbe:	mov    ebp,0x84ff309c
  412dc3:	adc    BYTE PTR [edi+0x32],ah
  412dc6:	imul   edx,DWORD PTR [ebx+edi*2-0x45],0xffffffb9
  412dcb:	mov    eax,ds:0x9f289bc5
  412dd0:	outs   dx,BYTE PTR ds:[esi]
  412dd1:	inc    ebp
  412dd2:	push   ds
  412dd3:	data16 aaa 
  412dd5:	repnz mov al,0xee
  412dd8:	call   0xde18ef66
  412ddd:	aam    0xe9
  412ddf:	jo     0x412e4f
  412de1:	inc    eax
  412de2:	call   0xc2da:0x4b7b9e3b
  412de9:	in     al,0x1
  412deb:	xchg   edi,eax
  412dec:	push   ecx
  412ded:	test   ebp,ebx
  412def:	in     al,dx
  412df0:	les    esi,FWORD PTR [ebp-0x16]
  412df3:	(bad)  
  412df4:	es cmp al,0x8
  412df7:	or     BYTE PTR [ecx-0x5b],al
  412dfa:	loop   0x412e6c
  412dfc:	jle    0x412df0
  412dfe:	(bad)  
  412dff:	xor    al,BYTE PTR [edx+0xc]
  412e02:	and    BYTE PTR fs:[ecx+0x3d],0xab
  412e07:	fwait
  412e08:	xlat   BYTE PTR ds:[ebx]
  412e09:	jne    0x412ddb
  412e0b:	mov    ah,dl
  412e0d:	or     ebx,ebp
  412e0f:	mov    esp,0x1038ef31
  412e14:	mov    esi,DWORD PTR [ebx+eiz*2+0x6f2f0221]
  412e1b:	pop    ss
  412e1c:	sub    al,0x48
  412e1e:	xor    eax,0xca2e5783
  412e23:	leave  
  412e24:	push   cs
  412e25:	xor    DWORD PTR ds:[esi],ebp
  412e28:	dec    ecx
  412e29:	add    DWORD PTR [ecx],ecx
  412e2b:	aam    0x89
  412e2d:	and    DWORD PTR [edx-0x274c160d],0x398f7302
  412e37:	or     cl,al
  412e39:	std    
  412e3a:	and    eax,DWORD PTR [eax]
  412e3c:	inc    esi
  412e3d:	or     BYTE PTR [edi+0xf],bh
  412e40:	inc    edi
  412e41:	inc    ecx
  412e42:	dec    edi
  412e43:	jge    0x412e5f
  412e45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e46:	cld    
  412e47:	jnp    0x412eb8
  412e49:	or     al,0x1c
  412e4b:	jb     0x412ec8
  412e4d:	mov    cl,0xd
  412e4f:	or     bl,ah
  412e51:	std    
  412e52:	fld    TBYTE PTR [ebp-0x47]
  412e55:	int3   
  412e56:	push   eax
  412e57:	loopne 0x412eb3
  412e59:	mov    esp,DWORD PTR [edi]
  412e5b:	loop   0x412ea2
  412e5d:	mov    dh,0xd4
  412e5f:	inc    ebp
  412e60:	popf   
  412e61:	jnp    0x412e16
  412e63:	add    BYTE PTR [esi-0x64],ah
  412e66:	mov    esi,0x7998a16e
  412e6b:	xchg   ebp,eax
  412e6c:	mov    bl,0xbf
  412e6e:	xchg   edi,eax
  412e6f:	sbb    DWORD PTR [edx+0x47d7c968],esi
  412e75:	fidivr WORD PTR [ebp+0x74]
  412e78:	add    DWORD PTR [ebx-0x5c],ebx
  412e7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e7c:	push   0xaaecdf89
  412e81:	add    ecx,esp
  412e83:	inc    eax
  412e84:	cmp    BYTE PTR [edi+0x2123b65e],0xcd
  412e8b:	fld    TBYTE PTR [ebp+0x1720076]
  412e91:	sub    BYTE PTR [esi-0x3],0x31
  412e95:	jns    0x412e54
  412e97:	clc    
  412e98:	test   DWORD PTR [edi+0x0],esi
  412e9b:	push   cs
  412e9c:	jmp    0xfe7:0x7767f637
  412ea3:	xchg   ebx,eax
  412ea4:	imul   esi,edi,0x629d135b
  412eaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412eab:	inc    ecx
  412eac:	(bad)  
  412ead:	pop    edi
  412eae:	outs   dx,BYTE PTR ds:[esi]
  412eaf:	push   ds
  412eb0:	test   BYTE PTR ds:0xc4df5341,bh
  412eb6:	cmp    ebp,DWORD PTR [edx+eax*8-0x1d]
  412eba:	mov    ecx,0xb403b86d
  412ebf:	ins    BYTE PTR es:[edi],dx
  412ec0:	aas    
  412ec1:	adc    al,0xb6
  412ec3:	xor    BYTE PTR [eax],ah
  412ec5:	mov    ecx,0x42ebf176
  412eca:	or     ebx,DWORD PTR [ebx]
  412ecc:	push   ss
  412ecd:	rcl    BYTE PTR [eax-0x54],0x66
  412ed1:	mov    edi,0x5f6c5883
  412ed6:	jl     0x412f4f
  412ed8:	ret    0x396c
  412edb:	lds    edx,FWORD PTR [ebx-0x4f]
  412ede:	xchg   ebx,eax
  412edf:	sbb    edx,DWORD PTR [eax-0x702f9f53]
  412ee5:	cmp    eax,0x3f6889fb
  412eea:	scas   eax,DWORD PTR es:[edi]
  412eeb:	fistp  DWORD PTR [eax-0x14]
  412eee:	leave  
  412eef:	lea    ebx,[ecx-0x14]
  412ef2:	sbb    esp,DWORD PTR [ebp+0x1772f293]
  412ef8:	mov    ch,0x4f
  412efa:	push   esp
  412efb:	stos   DWORD PTR es:[edi],eax
  412efc:	sbb    al,0x1b
  412efe:	fcomip st,st(4)
  412f00:	aas    
  412f01:	aas    
  412f02:	cwde   
  412f03:	pop    ecx
  412f04:	hlt    
  412f05:	outs   dx,DWORD PTR ds:[esi]
  412f06:	popf   
  412f07:	into   
  412f08:	stos   DWORD PTR es:[edi],eax
  412f09:	out    0x41,al
  412f0b:	lods   eax,DWORD PTR ds:[esi]
  412f0c:	call   0xa470ee7c
  412f11:	mov    ah,0x87
  412f13:	mov    ecx,0xd2a6bba8
  412f18:	das    
  412f19:	rcr    DWORD PTR [edi],0x55
  412f1c:	loope  0x412f37
  412f1e:	daa    
  412f1f:	fdiv   QWORD PTR [ebp+0x5823205c]
  412f25:	dec    ecx
  412f26:	xor    ch,dh
  412f28:	je     0x412ed1
  412f2a:	lock and DWORD PTR [esi+0x41],0x3bc65f06
  412f32:	push   0xffffff94
  412f34:	mov    edx,0x62e497d0
  412f39:	enter  0xe3b6,0xa
  412f3d:	pusha  
  412f3e:	xchg   edi,eax
  412f3f:	leave  
  412f40:	cmc    
  412f41:	jg     0x412ee6
  412f43:	adc    eax,0x79aba019
  412f48:	or     eax,0x585488c1
  412f4d:	int    0x3e
  412f4f:	mov    esp,0xa91d1827
  412f54:	and    eax,0x57ab6071
  412f59:	push   0xfffffff8
  412f5b:	and    al,BYTE PTR [ebp+0x18b78e35]
  412f61:	clc    
  412f62:	out    dx,al
  412f63:	and    eax,0x1740427b
  412f68:	mov    esp,edi
  412f6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f6b:	call   0xe3b66ea4
  412f70:	in     eax,0xd3
  412f72:	fsubr  QWORD PTR [eax]
  412f74:	jp     0x412f6e
  412f76:	sub    al,0x26
  412f78:	push   ebp
  412f79:	xchg   ecx,eax
  412f7a:	mov    BYTE PTR [esi+0x62],ah
  412f7d:	repz jp 0x412ffc
  412f80:	mov    ds:0xf85f351d,al
  412f85:	enter  0x670d,0x60
  412f89:	jbe    0x412f7e
  412f8b:	or     edi,DWORD PTR [ebx]
  412f8d:	fist   WORD PTR [eax-0xfa1d45]
  412f93:	mov    al,0x38
  412f95:	dec    ebp
  412f96:	fwait
  412f97:	xchg   esp,esp
  412f99:	ds ins BYTE PTR es:[edi],dx
  412f9b:	test   BYTE PTR ss:[ecx],bl
  412f9e:	push   ebp
  412f9f:	pop    es
  412fa0:	ret    0x8853
  412fa3:	xlat   BYTE PTR ds:[ebx]
  412fa4:	lods   al,BYTE PTR ds:[esi]
  412fa5:	cmc    
  412fa6:	xchg   ecx,eax
  412fa7:	mov    DWORD PTR [edi+esi*2-0x4e62ea2c],esp
  412fae:	and    al,0xf3
  412fb0:	jg     0x412f69
  412fb2:	les    ecx,FWORD PTR [eax-0x28bba5a6]
  412fb8:	cmp    ah,BYTE PTR ds:0x216dee0
  412fbe:	cmp    ah,BYTE PTR [edi+0x23f0c1ce]
  412fc4:	xlat   BYTE PTR ds:[ebx]
  412fc5:	sub    BYTE PTR [esp+eiz*2+0x27],ah
  412fc9:	jb     0x412fd3
  412fcb:	dec    ecx
  412fcc:	(bad)  
  412fcd:	xchg   edx,eax
  412fce:	retf   0x641f
  412fd1:	adc    eax,0x3bbfbb26
  412fd6:	adc    esi,DWORD PTR [ecx-0x67]
  412fd9:	aas    
  412fda:	adc    bh,BYTE PTR [esi]
  412fdc:	jns    0x412ff5
  412fde:	es aam 0x82
  412fe1:	in     eax,dx
  412fe2:	sbb    al,0xac
  412fe4:	imul   ecx,DWORD PTR [ebp+ebp*2-0x28c73b54],0xffffff83
  412fec:	dec    esp
  412fed:	xor    al,0xee
  412fef:	inc    edi
  412ff0:	xchg   edx,eax
  412ff1:	stos   DWORD PTR es:[edi],eax
  412ff2:	jne    0x413021
  412ff4:	sub    BYTE PTR [ebx],dh
  412ff6:	mov    ecx,0xc140d1dd
  412ffb:	fs retf 
  412ffd:	in     eax,dx
  412ffe:	outs   dx,DWORD PTR ds:[esi]
  412fff:	inc    edx
  413000:	fadd   DWORD PTR [eax]
  413002:	mov    ebx,0x78bbdec
  413007:	aaa    
  413008:	push   ebx
  413009:	arpl   WORD PTR [eiz*4-0x14cfe7b8],cx
  413010:	inc    ebp
  413011:	mov    ds:0x1c783ca,eax
  413016:	(bad)  
  413018:	mov    esp,0x1e5bb651
  41301d:	push   edx
  41301e:	and    BYTE PTR [ecx+0x24],0x7a
  413022:	mov    ch,0x2c
  413024:	mov    ebx,0x48a98811
  413029:	sar    edi,1
  41302b:	xchg   edx,eax
  41302c:	or     eax,0x5a25d14f
  413031:	mov    DWORD PTR [ebp+eiz*4+0x6d48559a],edi
  413038:	(bad)  
  413039:	jno    0x412fd9
  41303b:	and    al,0x8d
  41303d:	adc    BYTE PTR [edi],ch
  41303f:	jns    0x413075
  413041:	or     DWORD PTR [edi],eax
  413043:	(bad)  
  413044:	push   ebx
  413045:	dec    ebp
  413046:	cmp    al,0x42
  413048:	in     al,0xd4
  41304a:	scas   eax,DWORD PTR es:[edi]
  41304b:	push   0xe1386eb7
  413050:	inc    ecx
  413051:	pop    eax
  413052:	pop    ebx
  413053:	pop    ebx
  413054:	test   DWORD PTR cs:[edx-0xf],esp
  413058:	adc    bh,bh
  41305a:	imul   ebx,ebp,0x78
  41305d:	adc    ebp,DWORD PTR [esi+0x65c97826]
  413063:	ret    0xfa09
  413066:	jne    0x4130ce
  413068:	xor    al,0x1c
  41306a:	aaa    
  41306b:	into   
  41306c:	loop   0x41308b
  41306e:	inc    edi
  41306f:	mov    ds:0xfebc9d70,al
  413074:	jl     0x4130b5
  413076:	dec    ecx
  413077:	adc    DWORD PTR [ebx],ebp
  413079:	or     eax,0xcfe12a2f
  41307e:	std    
  41307f:	cmp    dl,BYTE PTR [ebx-0x43]
  413082:	mov    ds:0xdecd51e8,al
  413087:	pop    ss
  413088:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413089:	and    BYTE PTR [esi+ecx*1+0x3d],0x76
  41308e:	ror    ch,cl
  413090:	hlt    
  413091:	enter  0xcb24,0x6b
  413095:	scas   eax,DWORD PTR es:[edi]
  413096:	out    dx,al
  413097:	push   ss
  413098:	adc    al,0x10
  41309a:	pop    ds
  41309b:	jne    0x4130f2
  41309d:	xor    al,0x67
  41309f:	dec    eax
  4130a0:	sbb    ah,BYTE PTR [ebp+0x3f7c22da]
  4130a6:	push   cs
  4130a7:	jle    0x4130ee
  4130a9:	out    dx,eax
  4130aa:	dec    edi
  4130ab:	mov    esi,0x5196cea8
  4130b0:	retf   0x1a73
  4130b3:	cdq    
  4130b4:	in     eax,dx
  4130b5:	ror    ecx,1
  4130b7:	inc    edx
  4130b8:	adc    bl,BYTE PTR [edx]
  4130ba:	je     0x413074
  4130bc:	push   esi
  4130bd:	jae    0x41311c
  4130bf:	(bad)  
  4130c0:	pop    ecx
  4130c1:	fcomip st,st(2)
  4130c3:	mov    ?,WORD PTR [ecx+0x68]
  4130c6:	mov    eax,ds:0xd8477b7e
  4130cb:	mov    ebp,0x9e0e4619
  4130d0:	adc    eax,0xc93139c9
  4130d5:	bound  ebx,QWORD PTR [eax+0x30]
  4130d8:	pop    edx
  4130d9:	xor    ebp,edi
  4130db:	add    eax,0x8f74738f
  4130e0:	push   ss
  4130e1:	or     eax,0xcc4da80b
  4130e6:	jno    0x41307b
  4130e8:	add    esp,edi
  4130ea:	mov    edi,0x28f97534
  4130ef:	cmp    al,0xfc
  4130f1:	inc    esi
  4130f2:	daa    
  4130f3:	pop    ss
  4130f4:	adc    cl,BYTE PTR [ebx]
  4130f6:	pop    ds
  4130f7:	pop    ss
  4130f8:	in     al,0xf0
  4130fa:	pop    esp
  4130fb:	pop    ss
  4130fc:	adc    bh,BYTE PTR [ecx+ebx*1]
  4130ff:	aad    0x50
  413101:	repz adc esi,DWORD PTR [esi+ebp*2+0x6e677f46]
  413109:	test   dl,ah
  41310b:	sahf   
  41310c:	inc    ecx
  41310d:	jp     0x4130fe
  41310f:	int    0x13
  413111:	mov    esp,0x519b6b94
  413116:	jbe    0x413176
  413118:	cmp    eax,0x1b72bdee
  41311d:	sub    BYTE PTR [edx],ah
  41311f:	xchg   ebx,eax
  413120:	sub    edx,edx
  413122:	xor    al,0x38
  413124:	sub    ah,dl
  413126:	push   esi
  413127:	gs mov edx,0x30e4596d
  41312d:	or     eax,0x7d9fa46d
  413132:	inc    ecx
  413133:	fisttp WORD PTR [ebp+0x28]
  413136:	vmovmskpd eax,ymm1
  41313a:	aad    0x59
  41313c:	jb     0x4130e5
  41313e:	hlt    
  41313f:	inc    ebx
  413140:	inc    edi
  413141:	dec    eax
  413142:	out    dx,al
  413143:	into   
  413144:	or     esi,DWORD PTR [ecx+ebp*8+0x4d69ac48]
  41314b:	test   BYTE PTR [esi-0x65df7e6c],bl
  413151:	js     0x41313f
  413153:	fldcw  WORD PTR [ebp-0x2d081920]
  413159:	or     ebp,DWORD PTR [ecx+0x1494e146]
  41315f:	jno    0x413186
  413161:	aaa    
  413162:	pop    edx
  413163:	jl     0x413111
  413165:	(bad)  
  413166:	dec    edi
  413167:	jnp    0x4131bc
  413169:	scas   eax,DWORD PTR es:[edi]
  41316a:	add    BYTE PTR [edi],bl
  41316c:	inc    esp
  41316d:	mov    al,0x16
  41316f:	and    BYTE PTR [eax],ch
  413171:	data16 icebp 
  413173:	mov    bh,0x41
  413175:	cmc    
  413176:	push   cs
  413177:	loopne 0x41319b
  413179:	push   es
  41317a:	loop   0x4131e1
  41317c:	cli    
  41317d:	lods   al,BYTE PTR ds:[esi]
  41317e:	enter  0x1046,0x3f
  413182:	push   ebx
  413183:	sbb    DWORD PTR [esi+0x4f],esi
  413186:	je     0x41310a
  413188:	arpl   WORD PTR [ecx],ax
  41318a:	jecxz  0x41312f
  41318c:	lea    eax,ds:0xdbdc5d01
  413192:	xor    DWORD PTR [ecx+0x2d],esi
  413195:	pop    ds
  413196:	test   eax,0x9fa2e700
  41319b:	in     eax,dx
  41319c:	test   al,0xaf
  41319e:	inc    esi
  41319f:	and    ah,bl
  4131a1:	je     0x4131b8
  4131a3:	add    al,0xa3
  4131a5:	mul    ebp
  4131a7:	inc    edi
  4131a8:	push   esp
  4131a9:	add    edi,ebp
  4131ab:	rcl    DWORD PTR [ecx+0x5e],1
  4131ae:	stos   DWORD PTR es:[edi],eax
  4131af:	mov    ah,BYTE PTR [eax+0x20]
  4131b2:	in     al,dx
  4131b3:	jae    0x4131fe
  4131b5:	push   ss
  4131b6:	mov    edx,0xf0c1be1f
  4131bb:	fdivr  st(5),st
  4131bd:	sbb    BYTE PTR gs:[edi+0x2b],al
  4131c1:	xchg   BYTE PTR [ebp+0x20],ah
  4131c4:	push   es
  4131c5:	push   eax
  4131c6:	(bad)  
  4131c7:	mov    ch,0xdb
  4131c9:	add    ch,BYTE PTR [eax-0x38]
  4131cc:	push   esi
  4131cd:	xor    DWORD PTR [eax],ebp
  4131cf:	fwait
  4131d0:	pop    es
  4131d1:	push   cs
  4131d2:	or     cl,BYTE PTR [ebx-0x6d]
  4131d5:	jo     0x413216
  4131d7:	std    
  4131d8:	xor    ebp,esp
  4131da:	or     eax,0x8cd1fa45
  4131df:	call   0xf3a699b9
  4131e4:	pop    edx
  4131e5:	xor    BYTE PTR [ecx],cl
  4131e7:	(bad)  
  4131e8:	adc    ebx,esi
  4131ea:	fwait
  4131eb:	xchg   esp,eax
  4131ec:	pushf  
  4131ed:	push   esp
  4131ee:	sbb    eax,0x513d65b6
  4131f3:	outs   dx,DWORD PTR ds:[esi]
  4131f4:	mov    eax,ds:0x91bb0bdb
  4131f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131fa:	addr16 pop es
  4131fc:	sar    esi,cl
  4131fe:	in     eax,0x5
  413200:	pop    esi
  413201:	(bad)  
  413202:	lods   al,BYTE PTR ds:[esi]
  413203:	fisubr WORD PTR [ebx]
  413205:	pop    ecx
  413206:	mov    ds:0x6565fece,al
  41320b:	xchg   edi,eax
  41320c:	xor    eax,0xa212c236
  413211:	repz pushf 
  413213:	out    dx,al
  413214:	neg    BYTE PTR [edx+0x710ef864]
  41321a:	call   0xb078:0x46637557
  413221:	(bad)
  413225:	div    DWORD PTR [edx]
  413227:	jg     0x413249
  413229:	bound  esp,QWORD PTR [edi]
  41322b:	xchg   edx,eax
  41322c:	adc    edi,edi
  41322e:	mov    dl,0xd0
  413230:	lahf   
  413231:	popf   
  413232:	fcom   DWORD PTR [eax]
  413234:	ret    
  413235:	lods   al,BYTE PTR ds:[esi]
  413236:	cmp    al,0x68
  413238:	xchg   esi,eax
  413239:	and    ah,bl
  41323b:	retf   
  41323c:	or     esp,esp
  41323e:	mov    al,0x25
  413240:	push   edi
  413241:	outs   dx,BYTE PTR ds:[esi]
  413242:	mov    edi,esp
  413244:	jne    0x413230
  413246:	or     BYTE PTR [edi+ebp*1],cl
  413249:	xchg   esp,eax
  41324a:	inc    ebp
  41324b:	sbb    ebx,DWORD PTR [ebx]
  41324d:	loopne 0x413217
  41324f:	jne    0x4131e0
  413251:	pop    ebp
  413252:	and    BYTE PTR [eax+0xb01a4cf],bh
  413258:	adc    eax,0xa62428d8
  41325d:	mov    ch,0xc4
  41325f:	xchg   bl,cl
  413261:	xlat   BYTE PTR ds:[ebx]
  413262:	aaa    
  413263:	sub    ebx,DWORD PTR [ebp+0x7c]
  413266:	ret    0xa355
  413269:	rcr    cl,cl
  41326b:	and    al,0xb1
  41326d:	js     0x41321e
  41326f:	ins    DWORD PTR es:[edi],dx
  413270:	pop    ss
  413271:	and    BYTE PTR [edi],dh
  413273:	jle    0x41321b
  413275:	or     ebp,ebx
  413277:	push   ebp
  413278:	sbb    eax,0x337ba807
  41327d:	lods   al,BYTE PTR ds:[esi]
  41327e:	cld    
  41327f:	bnd jno 0x41323d
  413282:	mov    eax,0x63c4acd5
  413287:	push   edx
  413288:	(bad)  
  413289:	jp     0x413221
  41328b:	imul   esi,DWORD PTR [edx-0x1a],0xd8a2b739
  413292:	dec    ebx
  413293:	mov    edx,0xcfce33fc
  413298:	inc    edx
  413299:	and    al,bl
  41329b:	push   ebp
  41329c:	sbb    ebx,DWORD PTR [ebx+ebp*1+0x6]
  4132a0:	xchg   DWORD PTR [eax+0x2f],esp
  4132a3:	jno    0x413237
  4132a5:	add    eax,0xd0e83a5d
  4132aa:	mov    al,0x61
  4132ac:	xor    bl,BYTE PTR [eax]
  4132ae:	sar    ebx,0xdb
  4132b1:	int3   
  4132b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132b3:	push   edi
  4132b4:	jge    0x41327f
  4132b6:	push   0x3e
  4132b8:	add    DWORD PTR [edi],0xc
  4132bb:	cmc    
  4132bc:	or     bh,al
  4132be:	imul   esi,DWORD PTR [edi+0x47],0x22ce7f9c
  4132c5:	mov    ss,WORD PTR [esi-0x6e]
  4132c8:	ja     0x413349
  4132ca:	inc    ecx
  4132cb:	xor    eax,eax
  4132cd:	pop    edx
  4132ce:	cwde   
  4132cf:	sub    eax,0x36b83fd1
  4132d4:	sub    ebp,edi
  4132d6:	xchg   BYTE PTR [ebp+eiz*1+0x3cbb8887],al
  4132dd:	outs   dx,DWORD PTR ds:[esi]
  4132de:	sub    BYTE PTR [ebp-0x45],cl
  4132e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132e2:	add    BYTE PTR [edx],bl
  4132e4:	in     eax,dx
  4132e5:	in     eax,dx
  4132e6:	mov    esp,0x16d83dd
  4132eb:	pop    ebp
  4132ec:	int    0xcf
  4132ee:	mov    ds:0xf75e9658,eax
  4132f3:	test   DWORD PTR [eax],edx
  4132f5:	dec    eax
  4132f6:	mov    eax,ds:0x739309fd
  4132fb:	xchg   edx,eax
  4132fc:	push   cs
  4132fd:	retf   0x649c
  413300:	nop
  413301:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413302:	pusha  
  413303:	iret   
  413304:	pop    ecx
  413305:	into   
  413306:	push   ecx
  413307:	and    esp,DWORD PTR [eax+0x32]
  41330a:	pop    es
  41330b:	xchg   edi,eax
  41330c:	(bad)  
  41330d:	daa    
  41330e:	cmp    dl,bl
  413310:	push   cs
  413311:	std    
  413312:	adc    eax,0x30ebeb61
  413317:	ds addr16 push edx
  41331a:	pusha  
  41331b:	adc    al,0xff
  41331d:	dec    BYTE PTR [ebx+eiz*4+0x6f7ff6be]
  413324:	sbb    ecx,DWORD PTR [ebx+0x5d736a59]
  41332a:	jno    0x4132b3
  41332c:	push   esi
  41332d:	push   0x2df071b0
  413332:	pop    ss
  413333:	jg     0x4133a0
  413335:	imul   edx,DWORD PTR [ebx-0xd76d316],0xa534a90f
  41333f:	jmp    0x9ec1:0x73599ab5
  413346:	or     esi,DWORD PTR [edx]
  413348:	pop    esi
  413349:	xchg   edi,eax
  41334a:	scas   eax,DWORD PTR es:[edi]
  41334b:	aaa    
  41334c:	pop    eax
  41334d:	or     ebp,DWORD PTR [ecx+0x6b5b6a0a]
  413353:	shl    DWORD PTR [ebx+ebx*1-0x2a],0x9f
  413358:	or     BYTE PTR [ecx+0x28],ah
  41335b:	push   ebp
  41335c:	jb     0x413373
  41335e:	lea    edi,[eax+0x2631cbdd]
  413364:	sar    eax,0xfe
  413367:	je     0x413389
  413369:	mov    cs,WORD PTR [bp-0x5571]
  41336e:	dec    BYTE PTR [ebp+0x59d506ba]
  413374:	retf   
  413375:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413376:	mov    esp,0xbd8b5b6f
  41337b:	iret   
  41337c:	fwait
  41337d:	lock test BYTE PTR [edx+eiz*8],bl
  413381:	jmp    FWORD PTR [edx+ebx*2+0x62ce05e9]
  413388:	push   0x5e
  41338a:	push   ecx
  41338b:	xchg   ecx,eax
  41338c:	ror    bl,cl
  41338e:	jnp    0x4133a0
  413390:	cmp    dl,BYTE PTR [esi+edi*8+0x44]
  413394:	xor    al,0x4b
  413396:	ins    BYTE PTR es:[edi],dx
  413397:	xchg   ebp,eax
  413398:	cmc    
  413399:	in     eax,dx
  41339a:	sub    DWORD PTR [ecx+0x16],eax
  41339d:	loop   0x4133d4
  41339f:	ret    0x4a61
  4133a2:	xor    eax,0x7e431d98
  4133a7:	sub    eax,0xcf5e9f70
  4133ac:	ret    0x5d0c
  4133af:	cmp    eax,DWORD PTR [esi-0x22]
  4133b2:	sbb    edx,DWORD PTR [edi]
  4133b4:	mov    al,ds:0x32f78119
  4133b9:	stos   BYTE PTR es:[edi],al
  4133ba:	aad    0x69
  4133bc:	inc    edi
  4133bd:	in     eax,0x50
  4133bf:	mov    al,0x93
  4133c1:	mov    ch,0xff
  4133c3:	imul   esi,DWORD PTR [ebp-0x249f0c2f],0xa5645e53
  4133cd:	mov    esi,ebx
  4133cf:	or     BYTE PTR ds:0x7595494e,al
  4133d5:	cmp    bh,BYTE PTR [ebp-0x7a96c997]
  4133db:	or     eax,0x24f8008c
  4133e0:	lods   eax,DWORD PTR ds:[esi]
  4133e1:	xchg   esp,eax
  4133e2:	jg     0x4133a0
  4133e4:	stos   DWORD PTR es:[edi],eax
  4133e5:	clc    
  4133e6:	scas   al,BYTE PTR es:[edi]
  4133e7:	xor    ebp,ebx
  4133e9:	pop    edx
  4133ea:	pop    ecx
  4133eb:	mul    DWORD PTR [eax]
  4133ed:	mov    ebp,0x10384985
  4133f2:	push   ds
  4133f3:	retf   
  4133f4:	rcl    BYTE PTR [edx-0x36],1
  4133f7:	cld    
  4133f8:	aas    
  4133f9:	hlt    
  4133fa:	push   ebp
  4133fb:	jns    0x4133a9
  4133fd:	das    
  4133fe:	xchg   edx,eax
  4133ff:	loopne 0x4133fc
  413401:	push   edx
  413402:	ja     0x413413
  413404:	push   edx
  413405:	mov    esi,0x7b065228
  41340a:	xor    al,0x82
  41340c:	fcomp  DWORD PTR [ecx+0x7c3f41be]
  413412:	pop    esi
  413413:	ficom  DWORD PTR [ebp-0x1c]
  413416:	sti    
  413417:	push   ds
  413418:	pop    edx
  413419:	pop    eax
  41341a:	jp     0x4133bc
  41341c:	sti    
  41341d:	in     al,dx
  41341e:	mov    WORD PTR [ebx-0xcd76ee],?
  413424:	or     al,0xc5
  413426:	jbe    0x4133ab
  413428:	fisubr DWORD PTR [edi-0x3d666105]
  41342e:	repnz fsub DWORD PTR [ecx]
  413431:	ret    0x3517
  413434:	in     eax,dx
  413435:	fwait
  413436:	sbb    BYTE PTR [edi-0x7c8de8ce],al
  41343c:	mov    ebp,?
  41343e:	mov    dl,0x41
  413440:	dec    ebp
  413441:	xchg   ebx,eax
  413442:	loop   0x41342f
  413444:	popf   
  413445:	dec    edx
  413446:	jnp    0x41347e
  413448:	into   
  413449:	sbb    eax,0xc8430e97
  41344e:	pop    es
  41344f:	nop
  413450:	outs   dx,DWORD PTR ds:[esi]
  413451:	test   BYTE PTR [esi+0x7c],bh
  413454:	add    DWORD PTR [ecx-0x6747b144],edx
  41345a:	sub    BYTE PTR [ebx-0x721494ca],bh
  413460:	or     bh,BYTE PTR [esi-0x16b13ca5]
  413466:	test   eax,0x6b89121a
  41346b:	pushf  
  41346c:	mov    cl,BYTE PTR [ebx+esi*1]
  41346f:	mov    esi,0x9fca287d
  413474:	cs dec ecx
  413476:	jae    0x4134f7
  413478:	add    al,0x28
  41347a:	dec    BYTE PTR [esi-0x52f80cc7]
  413480:	mov    bh,BYTE PTR [eax]
  413482:	fst    DWORD PTR [edi+0x7963088a]
  413488:	ret    0xc8d1
  41348b:	int3   
  41348c:	loopne 0x413506
  41348e:	cmp    al,0x2c
  413490:	jae    0x41346f
  413492:	mov    BYTE PTR [edx+0x18],dl
  413495:	mov    ebp,DWORD PTR [edx+0x3f]
  413498:	jge    0x413500
  41349a:	aam    0x0
  41349c:	xchg   DWORD PTR [eax+0x328b0a20],edx
  4134a2:	xor    eax,0x15931841
  4134a7:	jne    0x4134e1
  4134a9:	iret   
  4134aa:	inc    edi
  4134ab:	aam    0xb5
  4134ad:	gs test eax,0x6bfb4797
  4134b3:	retf   
  4134b4:	mov    edi,0xa4325c72
  4134b9:	jp     0x413444
  4134bb:	daa    
  4134bc:	pop    ebp
  4134bd:	cld    
  4134be:	mov    edi,0xcd97125c
  4134c3:	cwde   
  4134c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134c5:	arpl   si,sp
  4134c7:	sahf   
  4134c8:	pop    ss
  4134c9:	push   ebx
  4134ca:	and    si,dx
  4134cd:	xchg   edx,eax
  4134ce:	leave  
  4134cf:	xor    dh,BYTE PTR [edi]
  4134d1:	mov    esp,0x514e4748
  4134d6:	das    
  4134d7:	xor    edx,DWORD PTR [edi+0x13]
  4134da:	ret    0xda73
  4134dd:	lods   eax,DWORD PTR ds:[esi]
  4134de:	add    esp,DWORD PTR [edi+0x3]
  4134e1:	or     edi,esp
  4134e3:	ret    
  4134e4:	mov    al,ds:0x660bbc2f
  4134e9:	and    eax,0xce34097e
  4134ee:	ja     0x41353b
  4134f0:	aad    0xd1
  4134f2:	dec    edi
  4134f3:	arpl   WORD PTR [esp+eiz*4+0x23],sp
  4134f7:	pop    ecx
  4134f8:	inc    edi
  4134f9:	pop    edi
  4134fa:	cli    
  4134fb:	push   ds
  4134fc:	repnz scas eax,DWORD PTR es:[edi]
  4134fe:	mov    edi,0x9c309f7e
  413503:	jl     0x41352f
  413505:	dec    esp
  413506:	mov    eax,ds:0x505fa350
  41350b:	mov    WORD PTR [eax],cs
  41350d:	dec    edx
  41350e:	and    DWORD PTR [edx+edi*2+0x4],edi
  413512:	mov    eax,0x46dcffe6
  413517:	ret    
  413518:	sub    dh,BYTE PTR [ebp-0x47e5baf3]
  41351e:	retf   
  41351f:	mov    al,BYTE PTR [ebx]
  413521:	xchg   ebp,eax
  413522:	cdq    
  413523:	in     al,dx
  413524:	add    eax,0xf993a088
  413529:	jns    0x41359d
  41352b:	adc    DWORD PTR [ebx+0x63c24d91],0xffffffa6
  413532:	fsub   QWORD PTR [esp+eax*8-0x1109c524]
  413539:	in     al,0x50
  41353b:	push   ds
  41353c:	jecxz  0x4135b6
  41353e:	jp     0x4134df
  413540:	jle    0x413554
  413542:	lahf   
  413543:	add    edi,DWORD PTR [edx+0x61]
  413546:	push   ebx
  413547:	arpl   WORD PTR [ecx],sp
  413549:	add    al,0xb7
  41354b:	stc    
  41354c:	push   ebp
  41354d:	out    dx,eax
  41354e:	add    al,BYTE PTR [eax-0x78b6825b]
  413554:	call   0xf543304f
  413559:	adc    ah,ch
  41355b:	mov    ecx,0xf5f50d17
  413560:	fsubr  QWORD PTR [eax]
  413562:	and    BYTE PTR [esi+0x3e],bl
  413565:	pop    edi
  413566:	push   ds
  413567:	mov    cs,WORD PTR [eax-0x4a2ef090]
  41356d:	loopne 0x413525
  41356f:	in     eax,dx
  413570:	or     eax,esi
  413572:	fmul   DWORD PTR [eax+0x3c281958]
  413578:	dec    esp
  413579:	add    al,0x9e
  41357b:	(bad)  
  41357c:	xlat   BYTE PTR ds:[ebx]
  41357d:	pop    esi
  41357e:	sub    BYTE PTR [eax+0x1dd7d28d],dl
  413584:	cmp    DWORD PTR [edi+0x10572d2a],ecx
  41358a:	and    ch,ch
  41358c:	push   ebp
  41358d:	push   ds
  41358e:	mov    ebp,0xe8be6c4a
  413593:	mov    BYTE PTR [ebp+0x2667d6c],ch
  413599:	das    
  41359a:	push   ecx
  41359b:	sbb    esi,DWORD PTR gs:[eax-0x7235647f]
  4135a2:	sbb    edi,DWORD PTR [esi-0x48eab5ba]
  4135a8:	push   ecx
  4135a9:	ret    0x3532
  4135ac:	lds    edi,FWORD PTR [ebx]
  4135ae:	fistp  WORD PTR [ebx+0x2818019e]
  4135b4:	stc    
  4135b5:	mov    edx,0x4580af51
  4135ba:	pop    eax
  4135bb:	mov    ah,0x52
  4135bd:	xchg   esp,eax
  4135be:	icebp  
  4135bf:	and    BYTE PTR [edx+0x1345fdc],dh
  4135c5:	add    bh,BYTE PTR [ebx]
  4135c7:	mov    edx,0x36cc62
  4135cc:	mov    cl,ah
  4135ce:	mov    esi,0x96c187b1
  4135d3:	cmp    eax,0x6af9a269
  4135d8:	dec    edi
  4135d9:	adc    bl,BYTE PTR [ecx]
  4135db:	push   ss
  4135dc:	push   ebp
  4135dd:	mov    ecx,0x8192b0d5
  4135e2:	imul   esi,DWORD PTR [ebp+0x5cdae6f7],0x51ee71a1
  4135ec:	test   eax,0x75f931bd
  4135f1:	sbb    BYTE PTR [ebp+0x3f],bl
  4135f4:	or     DWORD PTR [ecx+0x41d30bb],0xd1cbe6ea
  4135fe:	cmc    
  4135ff:	repnz sub dl,BYTE PTR [esi+0x87462be]
  413606:	sub    eax,0x6e7e1d5d
  41360b:	call   0x36018356
  413610:	lock sub al,0x2f
  413613:	ror    DWORD PTR [esi+0x3ada404a],cl
  413619:	push   ebx
  41361a:	popf   
  41361b:	lea    ebp,[ebx+0x1d8a219]
  413621:	jne    0x413663
  413623:	je     0x41360a
  413625:	mov    eax,0xb2793b06
  41362a:	fmul   QWORD PTR [ebp-0x54]
  41362d:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41362f:	(bad)  
  413630:	or     eax,edx
  413632:	mov    bh,0x17
  413634:	stc    
  413635:	xchg   DWORD PTR [edx+0x6d12c0fc],ebx
  41363b:	in     eax,dx
  41363c:	rcl    DWORD PTR [esi-0x61fdbe53],0x3b
  413643:	nop
  413644:	(bad)
  413649:	jmp    0x902e7120
  41364e:	ret    0xd3c9
  413651:	out    0x12,al
  413653:	nop
  413654:	lds    esi,FWORD PTR [ecx+0x19639d54]
  41365a:	push   esi
  41365b:	xor    eax,0x657727b2
  413660:	lock fistp DWORD PTR [eax-0xb697539]
  413667:	mov    dl,0x16
  413669:	sar    dl,0xd
  41366c:	rcr    DWORD PTR [ebp+0xc110745],1
  413672:	outs   dx,DWORD PTR ds:[esi]
  413673:	dec    ecx
  413674:	popf   
  413675:	sub    dh,cl
  413677:	pop    esi
  413678:	retf   
  413679:	inc    ebp
  41367a:	sub    cl,al
  41367c:	stc    
  41367d:	pushf  
  41367e:	retf   0x3660
  413681:	les    esi,FWORD PTR [esp+ecx*8-0x5bf80879]
  413688:	fisubr WORD PTR [ecx+esi*4+0x53476f03]
  41368f:	lds    esi,FWORD PTR [ebx+0x7]
  413692:	popf   
  413693:	je     0x41364e
  413695:	lahf   
  413696:	or     BYTE PTR [esp+edx*2],0x25
  41369a:	pop    ebx
  41369b:	sbb    ebp,0xffffff8f
  41369e:	gs in  al,0x5f
  4136a1:	fiadd  DWORD PTR [esi-0x26667539]
  4136a7:	cmc    
  4136a8:	adc    DWORD PTR [ecx],0xae33bda5
  4136ae:	sub    al,0xcd
  4136b0:	xchg   ebp,ecx
  4136b2:	add    bh,dh
  4136b4:	pop    ds
  4136b5:	xor    dh,BYTE PTR ds:0x1cfe6ad7
  4136bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136bc:	sub    eax,DWORD PTR [esi+0x30]
  4136bf:	dec    eax
  4136c0:	icebp  
  4136c1:	cld    
  4136c2:	popa   
  4136c3:	(bad)  
  4136c4:	cwde   
  4136c5:	mov    eax,ds:0x51771809
  4136ca:	(bad)  [edi+0x15]
  4136cd:	mov    esp,0xa812339f
  4136d2:	daa    
  4136d3:	retf   
  4136d4:	(bad)  
  4136d5:	inc    ecx
  4136d6:	mov    DWORD PTR [edi+0x11],esi
  4136d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136da:	pushf  
  4136db:	rcr    DWORD PTR [eax+edi*2],0x70
  4136df:	xor    DWORD PTR [esi-0x4f1ab4f5],esi
  4136e5:	sbb    ebx,DWORD PTR [ebx+0x3e5fd21f]
  4136eb:	and    ebp,DWORD PTR [ebx-0x3e3f50c6]
  4136f1:	cwde   
  4136f2:	dec    ecx
  4136f3:	or     al,0x5d
  4136f5:	pop    ecx
  4136f6:	sub    BYTE PTR [edi],0x36
  4136f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136fa:	je     0x413736
  4136fc:	cdq    
  4136fd:	retf   
  4136fe:	mov    ds:0x709f3047,eax
  413703:	xor    ebp,DWORD PTR [edi-0x1b]
  413706:	sub    DWORD PTR [esi+0x29],edi
  413709:	scas   al,BYTE PTR es:[edi]
  41370a:	sbb    ecx,edi
  41370c:	dec    ecx
  41370d:	sbb    al,0x84
  41370f:	jmp    0xa878:0x790a80e8
  413716:	cld    
  413717:	(bad)  
  413718:	clc    
  413719:	lea    esi,[ebx]
  41371b:	push   esp
  41371c:	in     eax,0x83
  41371e:	push   edx
  41371f:	pop    esp
  413720:	jg     0x413746
  413722:	jl     0x4136d9
  413724:	jge    0x41370e
  413726:	mov    bl,0x15
  413728:	mov    esi,0x340eec52
  41372d:	in     eax,dx
  41372e:	and    ch,ah
  413730:	std    
  413731:	xor    ebp,eax
  413733:	xchg   edi,eax
  413734:	sub    al,dh
  413736:	or     DWORD PTR [eax+0x7ae58019],edx
  41373c:	rcr    DWORD PTR [edi-0x3c42d192],0x1d
  413743:	push   esi
  413744:	fstp   QWORD PTR [ebp+0x7d]
  413747:	push   esp
  413748:	push   ebx
  413749:	jmp    0x413791
  41374b:	xchg   ebp,eax
  41374c:	daa    
  41374d:	xor    al,0x2f
  41374f:	iret   
  413750:	xchg   ecx,eax
  413751:	imul   esp,DWORD PTR [edx+0x14e618de],0x82af4c20
  41375b:	in     eax,0x1d
  41375d:	pop    esi
  41375e:	push   eax
  41375f:	pop    eax
  413760:	in     eax,dx
  413761:	lods   eax,DWORD PTR ds:[esi]
  413762:	imul   eax,edi,0xbc12f2b
  413768:	pop    ebx
  413769:	repz inc ecx
  41376b:	out    dx,al
  41376c:	(bad)  
  41376d:	aaa    
  41376e:	dec    ebp
  41376f:	dec    edx
  413770:	sbb    al,BYTE PTR [ecx]
  413772:	sti    
  413773:	out    dx,al
  413774:	inc    edx
  413775:	test   eax,0x39b19404
  41377a:	jb     0x41374c
  41377c:	or     eax,0xf97069f2
  413781:	push   ebx
  413782:	iret   
  413783:	jmp    0x413781
  413785:	xlat   BYTE PTR ds:[ebx]
  413786:	fwait
  413787:	out    dx,al
  413788:	adc    DWORD PTR [ebx-0x3],ebp
  41378b:	pop    es
  41378c:	mov    edi,0x440b17f9
  413791:	sbb    eax,0x76cc80b7
  413796:	push   ecx
  413797:	shl    BYTE PTR [eax*2+0x1c895ef2],cl
  41379e:	mov    esp,0xdade7ddc
  4137a3:	mov    gs,edi
  4137a5:	(bad)  
  4137a6:	or     al,0x2c
  4137a8:	mov    ch,0x39
  4137aa:	imul   ebp,ecx,0xffffff96
  4137ad:	pop    ecx
  4137ae:	stos   BYTE PTR es:[edi],al
  4137af:	xor    ch,bh
  4137b1:	mov    ch,0x2c
  4137b3:	and    DWORD PTR [esi+0x28],eax
  4137b6:	lds    ebp,FWORD PTR [eax]
  4137b8:	mov    ch,BYTE PTR [eax]
  4137ba:	in     al,0xeb
  4137bc:	inc    eax
  4137bd:	and    edi,DWORD PTR [esp+edx*2-0x195d00db]
  4137c4:	(bad)  
  4137c5:	xchg   esp,eax
  4137c6:	data16 and dl,BYTE PTR [eax-0x2f]
  4137ca:	sub    eax,DWORD PTR [ebp+0x28]
  4137cd:	call   0x5b8090b2
  4137d2:	data16 fld TBYTE PTR [edx+ebx*4-0x3f2af40a]
  4137da:	ffreep st(2)
  4137dc:	in     eax,0xea
  4137de:	mov    ah,0xad
  4137e0:	sbb    eax,0xa53b83ad
  4137e5:	xchg   ecx,eax
  4137e6:	push   es
  4137e7:	mov    bh,0x47
  4137e9:	hlt    
  4137ea:	out    0xf4,eax
  4137ec:	xor    al,0x42
  4137ee:	int3   
  4137ef:	push   ss
  4137f0:	cmp    bh,BYTE PTR [ebx+eiz*4+0x3]
  4137f4:	xchg   edi,eax
  4137f5:	dec    eax
  4137f6:	jns    0x41382a
  4137f8:	fidivr WORD PTR ds:0xe95b42c6
  4137fe:	(bad)  
  4137ff:	aam    0xb4
  413801:	ja     0x413801
  413803:	sub    ah,BYTE PTR [ecx+0x0]
  413806:	int    0x42
  413808:	inc    eax
  413809:	cli    
  41380a:	rol    dl,cl
  41380c:	dec    edx
  41380d:	adc    eax,0xb4e49ea
  413812:	iret   
  413813:	dec    esi
  413814:	xchg   esi,eax
  413815:	leave  
  413816:	out    dx,eax
  413817:	test   BYTE PTR [esi+eax*1+0x13],dl
  41381b:	in     al,0x6a
  41381d:	mov    edx,0x1bdfb153
  413822:	jbe    0x41382f
  413824:	xor    ebp,DWORD PTR [ebp+0x678bb565]
  41382a:	sub    ecx,edi
  41382c:	adc    DWORD PTR ds:[eax-0x17],edx
  413830:	cdq    
  413831:	jmp    0xdea0:0xbaf1cab3
  413838:	cwde   
  413839:	push   ebx
  41383a:	or     BYTE PTR [edi+esi*4],ah
  41383d:	shl    DWORD PTR [ecx+0x5f],1
  413840:	(bad)  
  413841:	cmp    bh,0x19
  413844:	retf   
  413845:	mov    WORD PTR [eax+0x3343f22c],ds
  41384b:	mov    dh,0x14
  41384d:	cmp    al,BYTE PTR [edi]
  41384f:	cmp    BYTE PTR [ebp+0x5cd74525],cl
  413855:	mov    esi,DWORD PTR [ecx]
  413857:	ss jg  0x41387c
  41385a:	in     al,dx
  41385b:	adc    al,0x41
  41385d:	jno    0x41381c
  41385f:	mov    ah,0xe1
  413861:	adc    edx,DWORD PTR [edi]
  413863:	fdivr  DWORD PTR ds:0x704a2c06
  413869:	jae    0x4138a3
  41386b:	outs   dx,DWORD PTR ds:[esi]
  41386c:	aad    0xa4
  41386e:	jmp    0x39568b5e
  413873:	in     eax,0x39
  413875:	retf   0x32c9
  413878:	sub    ah,BYTE PTR [ebp-0x12]
  41387b:	stos   DWORD PTR es:[edi],eax
  41387c:	out    dx,eax
  41387d:	sbb    edi,edi
  41387f:	push   0xffffff99
  413881:	rcr    ebx,cl
  413883:	push   0xffffffb4
  413885:	jb     0x413807
  413887:	mov    al,0xef
  413889:	sbb    ecx,edx
  41388b:	or     al,0xac
  41388d:	or     al,0x6f
  41388f:	test   BYTE PTR [ebx+0x42feb4d4],ah
  413895:	mov    ebp,0xa8e2eca0
  41389a:	mov    WORD PTR [eax+0x74],es
  41389d:	lds    esp,FWORD PTR [eax]
  41389f:	add    DWORD PTR [edi+0xf3922cf],0x12
  4138a6:	jp     0x41388a
  4138a8:	and    esi,DWORD PTR [edi-0x6e]
  4138ab:	xor    ecx,DWORD PTR [ebx-0xf]
  4138ae:	repz enter 0xb92c,0xe0
  4138b3:	(bad)  
  4138b4:	push   edx
  4138b5:	xchg   esp,eax
  4138b6:	jbe    0x413903
  4138b8:	lods   al,BYTE PTR ds:[esi]
  4138b9:	dec    eax
  4138ba:	inc    DWORD PTR [esi-0x44]
  4138bd:	ja     0x413925
  4138bf:	xchg   edx,eax
  4138c0:	and    dl,BYTE PTR [esi]
  4138c2:	aam    0x2b
  4138c4:	jnp    0x413877
  4138c6:	(bad)  
  4138c7:	mov    DWORD PTR [ebx],0x2a2746dd
  4138cd:	jle    0x4138c0
  4138cf:	cdq    
  4138d0:	enter  0x8aff,0xd9
  4138d4:	fbld   TBYTE PTR [esi]
  4138d6:	clc    
  4138d7:	mov    ecx,DWORD PTR [ecx-0x11da7943]
  4138dd:	sub    al,0x84
  4138df:	je     0x41394c
  4138e1:	pop    ds
  4138e2:	stc    
  4138e3:	ret    
  4138e4:	stos   BYTE PTR es:[edi],al
  4138e5:	retf   0x89db
  4138e8:	mov    ebp,0x3cb8db8a
  4138ed:	cmovne esp,DWORD PTR [esi]
  4138f0:	std    
  4138f1:	in     eax,0x9
  4138f3:	test   ebx,edi
  4138f5:	push   esi
  4138f6:	dec    esp
  4138f7:	mov    esi,0x376d4d2c
  4138fc:	ds sbb al,0x29
  4138ff:	call   0x513cd3c3
  413904:	dec    ebp
  413905:	cmp    BYTE PTR [esi],cl
  413907:	xchg   esi,eax
  413908:	sbb    al,0xcf
  41390a:	xchg   ebx,eax
  41390b:	xchg   al,bl
  41390d:	(bad)  
  41390e:	loop   0x4138b1
  413910:	push   edx
  413911:	mov    ds:0xb0b5213e,al
  413916:	pop    esi
  413917:	cwde   
  413918:	aas    
  413919:	mov    bh,dl
  41391b:	or     DWORD PTR [esi+0x23ef1a4c],ebx
  413921:	cwde   
  413922:	call   FWORD PTR [edx-0x12ae5e6b]
  413928:	push   esi
  413929:	pop    eax
  41392a:	test   DWORD PTR [ebp-0x5c],edi
  41392d:	or     eax,DWORD PTR [ebx+0x4a]
  413930:	mov    esp,0xf65876db
  413935:	xchg   edi,eax
  413936:	sar    DWORD PTR [ecx-0x1c],0xbc
  41393a:	jecxz  0x41394f
  41393c:	jae    0x4138f1
  41393e:	cmp    DWORD PTR [edx+esi*1-0x7ee65f67],edi
  413945:	(bad)  
  413946:	sbb    eax,0xd7759508
  41394b:	retf   0x1468
  41394e:	cdq    
  41394f:	push   0xffffffef
  413951:	test   DWORD PTR [edi-0x5c455c33],ebx
  413957:	and    dl,BYTE PTR [ecx+ecx*4+0x15272229]
  41395e:	mov    dl,0x1d
  413960:	push   cs
  413961:	in     al,0x2c
  413963:	adc    edi,eax
  413965:	push   ds
  413966:	mov    al,ds:0x3df33098
  41396b:	and    al,0xc
  41396d:	and    eax,DWORD PTR [ebp+0x5b]
  413970:	pop    esp
  413971:	enter  0x5130,0x44
  413975:	cld    
  413976:	hlt    
  413977:	push   0x4f69222b
  41397c:	aaa    
  41397d:	ficom  DWORD PTR [ecx-0x42]
  413980:	call   0xaea7b387
  413985:	(bad)  
  413986:	cmc    
  413987:	into   
  413988:	mov    eax,ds:0xab8dd425
  41398d:	xor    al,0x37
  41398f:	mov    dl,0x4
  413991:	xor    al,0x94
  413993:	test   eax,0xc1169243
  413998:	int3   
  413999:	stos   DWORD PTR es:[edi],eax
  41399a:	and    edi,esp
  41399c:	jle    0x41399d
  41399e:	add    edi,esp
  4139a0:	jo     0x413984
  4139a2:	sub    bl,BYTE PTR [edi-0xf15635c]
  4139a8:	xchg   esp,eax
  4139a9:	(bad)  
  4139aa:	pop    ebx
  4139ab:	scas   al,BYTE PTR es:[edi]
  4139ac:	cmp    al,0xbf
  4139ae:	sub    al,0xf1
  4139b0:	sub    al,0xa3
  4139b2:	ins    DWORD PTR es:[edi],dx
  4139b3:	pop    edi
  4139b4:	dec    esp
  4139b5:	jb     0x4139e7
  4139b7:	xchg   ebx,eax
  4139b8:	mov    ds:0x52b22d96,eax
  4139bd:	in     eax,dx
  4139be:	and    DWORD PTR [ebx-0x17aa70d],edx
  4139c4:	iret   
  4139c5:	and    eax,0x6da2842
  4139ca:	shl    BYTE PTR [edx+0x7e556078],cl
  4139d0:	add    al,0xa0
  4139d2:	mov    esp,0xec6657e1
  4139d7:	cs mov edi,0x61a676e9
  4139dd:	mov    al,0x83
  4139df:	out    0xda,al
  4139e1:	inc    ebx
  4139e2:	and    bl,BYTE PTR [ecx+0x76230d0]
  4139e8:	cmc    
  4139e9:	sub    eax,ebx
  4139eb:	sub    eax,0x44c8ed2d
  4139f0:	pop    eax
  4139f1:	ds call 0x5033:0x2f1d979d
  4139f9:	push   eax
  4139fa:	test   eax,0xb17904d5
  4139ff:	bound  ebx,QWORD PTR [esi-0x263f7269]
  413a05:	imul   edi,ebp,0x59b00d6b
  413a0b:	inc    ecx
  413a0c:	std    
  413a0d:	mov    dh,0xd7
  413a0f:	and    BYTE PTR [ebx-0x5c746f1],dl
  413a15:	jge    0x413a77
  413a17:	sbb    al,0x31
  413a19:	test   BYTE PTR [ebp-0x4b311f49],0xe2
  413a20:	push   0xe47da69c
  413a25:	xchg   ebp,eax
  413a26:	mov    DWORD PTR [esi+0x17],esi
  413a29:	rol    ebx,1
  413a2b:	mov    al,0xe0
  413a2d:	push   ebx
  413a2e:	dec    ebx
  413a2f:	pop    ds
  413a30:	test   DWORD PTR [esi-0x51],0xe821fd48
  413a37:	xchg   esp,eax
  413a38:	stos   DWORD PTR es:[edi],eax
  413a39:	xchg   ecx,eax
  413a3a:	jno    0x4139f2
  413a3c:	ror    BYTE PTR [ebx],1
  413a3e:	jb     0x4139fa
  413a40:	push   cs
  413a41:	and    BYTE PTR [ebx+0x36464d9],al
  413a47:	stos   DWORD PTR es:[edi],eax
  413a48:	push   0x6245042b
  413a4d:	mov    al,ds:0xde7f27a3
  413a52:	out    dx,eax
  413a53:	jae    0x4139d9
  413a55:	rcl    BYTE PTR gs:[edi],0x22
  413a59:	call   0x9271:0xbb03af7
  413a60:	dec    esp
  413a61:	jne    0x413a71
  413a63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a64:	push   esp
  413a65:	icebp  
  413a66:	mov    ecx,0xe319af14
  413a6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a6c:	scas   al,BYTE PTR es:[edi]
  413a6d:	arpl   WORD PTR [ebp-0x7d],di
  413a70:	in     eax,dx
  413a71:	adc    ch,bh
  413a73:	cmp    al,BYTE PTR [edx-0x61]
  413a76:	add    edx,DWORD PTR [esi+eax*4]
  413a79:	in     al,0x79
  413a7b:	shr    BYTE PTR [edx-0x7d972387],0x68
  413a82:	(bad)  
  413a83:	mov    al,ds:0x88382d4e
  413a88:	out    dx,al
  413a89:	sti    
  413a8a:	sbb    eax,0xffabf31e
  413a8f:	dec    eax
  413a90:	xor    BYTE PTR ds:0xff6a417b,bl
  413a96:	mov    edx,eax
  413a98:	cmp    dh,BYTE PTR [ecx+0x1]
  413a9b:	cmp    eax,0xc4896a53
  413aa0:	ret    0x9da
  413aa3:	lds    ebx,FWORD PTR [edx+0xd]
  413aa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413aa7:	pop    edx
  413aa8:	xlat   BYTE PTR fs:[ebx]
  413aaa:	sub    al,0x52
  413aac:	(bad)  [ecx]
  413aae:	mov    ebp,0x109e53da
  413ab3:	xor    esi,DWORD PTR [eax]
  413ab5:	cmp    al,0x30
  413ab7:	push   0x74
  413ab9:	jnp    0x413ab6
  413abb:	sbb    DWORD PTR [ebp+ebx*4-0x4e921577],esp
  413ac2:	aad    0x68
  413ac4:	pop    ecx
  413ac5:	cwde   
  413ac6:	or     bh,cl
  413ac8:	add    BYTE PTR [ecx],ah
  413aca:	jbe    0x413b02
  413acc:	test   BYTE PTR [edi-0x55],bh
  413acf:	or     ch,BYTE PTR [ebx-0x42]
  413ad2:	mov    ecx,0xdb0a59f2
  413ad7:	cdq    
  413ad8:	sahf   
  413ad9:	mov    al,0x4a
  413adb:	pop    edx
  413adc:	in     al,0x7b
  413ade:	das    
  413adf:	lds    edx,FWORD PTR [ebx-0x25fadff5]
  413ae5:	push   edx
  413ae6:	outs   dx,DWORD PTR ds:[esi]
  413ae7:	call   0x5ea1f71f
  413aec:	and    al,bl
  413aee:	scas   al,BYTE PTR es:[edi]
  413aef:	aaa    
  413af0:	cwde   
  413af1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413af2:	xchg   ebp,eax
  413af3:	inc    esp
  413af4:	dec    ebx
  413af5:	cli    
  413af6:	jnp    0x413a92
  413af8:	add    ah,0xcd
  413afb:	sbb    DWORD PTR [ecx-0x6b],ecx
  413afe:	ja     0x413a8d
  413b00:	loope  0x413aa7
  413b02:	test   BYTE PTR [esi-0x65b380cd],bl
  413b08:	sbb    bh,bh
  413b0a:	mov    eax,0xf43e38b2
  413b0f:	jge    0x413a9d
  413b11:	dec    DWORD PTR [ebp-0x7a]
  413b14:	aad    0xbe
  413b16:	cmp    eax,0xa3383283
  413b1b:	jo     0x413b96
  413b1d:	mov    ds:0x1b1e6b3c,eax
  413b22:	sub    dl,BYTE PTR [esi-0x45]
  413b25:	test   BYTE PTR [ebx+ecx*2],bl
  413b28:	jmp    0x413ba1
  413b2a:	pop    edx
  413b2b:	ins    BYTE PTR es:[edi],dx
  413b2c:	xchg   ebx,eax
  413b2d:	push   cs
  413b2e:	lods   eax,DWORD PTR ds:[esi]
  413b2f:	lods   eax,DWORD PTR ds:[esi]
  413b30:	add    BYTE PTR [esi+0x2a],ah
  413b33:	ret    
  413b34:	dec    ecx
  413b35:	sub    ah,BYTE PTR [ebp+0x6ca4c72c]
  413b3b:	sbb    eax,0xa33f5b92
  413b40:	and    DWORD PTR [ecx+0x33],edx
  413b43:	mov    edi,0xf2631d44
  413b48:	pop    ss
  413b49:	stc    
  413b4a:	dec    eax
  413b4b:	adc    ch,BYTE PTR [ecx+0x18145206]
  413b51:	pop    esp
  413b52:	mov    ds:0x5f0a17cc,al
  413b57:	sar    DWORD PTR [edi],0xe5
  413b5a:	call   0x50ea8414
  413b5f:	sbb    BYTE PTR [ebp+0x76],0x4a
  413b63:	cdq    
  413b64:	test   al,ah
  413b66:	rol    DWORD PTR [ebp-0x1],cl
  413b69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b6a:	xor    eax,0x22cdde0f
  413b6f:	retf   0x5612
  413b72:	mov    dh,0x5f
  413b74:	pop    eax
  413b75:	xchg   sp,ax
  413b77:	imul   dh
  413b79:	sub    al,al
  413b7b:	in     al,dx
  413b7c:	mov    dh,dl
  413b7e:	dec    ecx
  413b7f:	or     eax,0xeb02aa4e
  413b84:	push   eax
  413b85:	call   0x7ec1:0xd6413422
  413b8c:	div    eax
  413b8e:	outs   dx,BYTE PTR ds:[esi]
  413b8f:	in     eax,dx
  413b90:	ss dec esp
  413b92:	push   edi
  413b93:	jg     0x413b65
  413b95:	dec    edi
  413b96:	jg     0x413ba9
  413b98:	call   0x8afabd1a
  413b9d:	sbb    eax,0xfced5b98
  413ba2:	jle    0x413ba8
  413ba4:	and    dh,al
  413ba6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ba7:	mov    ebx,0xd65b0177
  413bac:	nop
  413bad:	cmp    al,0x2c
  413baf:	jo     0x413bf7
  413bb1:	test   ch,dh
  413bb3:	mov    edi,0x32cd8f07
  413bb8:	dec    ecx
  413bb9:	dec    esi
  413bba:	xor    eax,0x4f68f4e8
  413bbf:	int    0x1a
  413bc1:	inc    edx
  413bc2:	lods   eax,DWORD PTR ds:[esi]
  413bc3:	adc    al,bh
  413bc5:	in     eax,dx
  413bc6:	mov    bh,bh
  413bc8:	jmp    0x92a:0xc0975132
  413bcf:	aas    
  413bd0:	pop    esp
  413bd1:	bound  esp,QWORD PTR [eax+eax*2]
  413bd4:	aad    0xda
  413bd6:	mov    cs,eax
  413bd8:	dec    ah
  413bda:	xchg   esi,eax
  413bdb:	add    eax,0x42ab7808
  413be0:	pusha  
  413be1:	inc    ebp
  413be2:	pop    ds
  413be3:	push   ss
  413be4:	adc    DWORD PTR [ebp+0x3951216],esi
  413bea:	adc    al,0x80
  413bec:	dec    eax
  413bed:	jp     0x413c43
  413bef:	fistp  WORD PTR [edi+0x315572d4]
  413bf5:	ror    BYTE PTR [eax-0x539d4f1],0x72
  413bfc:	ficom  DWORD PTR [esi+edi*8+0x5a]
  413c00:	test   eax,0xf47cfc56
  413c05:	pop    esp
  413c06:	sbb    ebp,DWORD PTR [ebx+0x4307ed18]
  413c0c:	fbld   TBYTE PTR [ebx-0x1a392ae7]
  413c12:	pushf  
  413c13:	test   al,0xde
  413c15:	clc    
  413c16:	adc    edx,DWORD PTR [ebx-0x4694a51a]
  413c1c:	retf   
  413c1d:	bound  ebx,QWORD PTR [ebx+eiz*8]
  413c20:	jns    0x413bda
  413c22:	scas   eax,DWORD PTR es:[edi]
  413c23:	push   eax
  413c24:	ss mov edi,0xf72aa8d7
  413c2a:	pushf  
  413c2b:	adc    BYTE PTR [ecx-0x32],al
  413c2e:	call   0x952b:0xf0635d30
  413c35:	fiadd  WORD PTR [esi]
  413c37:	fidivr WORD PTR [edx-0x11]
  413c3a:	jmp    0x792e8153
  413c3f:	and    DWORD PTR [ebx+0xb999f],edi
  413c45:	clc    
  413c46:	adc    bh,al
  413c48:	int    0x47
  413c4a:	xchg   edi,eax
  413c4b:	pop    ecx
  413c4c:	shl    edi,1
  413c4e:	sub    edi,DWORD PTR [ebp+0x205e419f]
  413c54:	hlt    
  413c55:	ja     0x413be0
  413c57:	mul    DWORD PTR [esi+0x235f1104]
  413c5d:	mov    dl,0x30
  413c5f:	mov    BYTE PTR [ecx+0xa],al
  413c62:	fist   DWORD PTR [ebp-0x4a]
  413c65:	in     al,0xd2
  413c67:	cmp    al,dh
  413c69:	loopne 0x413cba
  413c6b:	xchg   esi,ebx
  413c6d:	fld    QWORD PTR [ebx]
  413c6f:	pop    eax
  413c70:	in     al,0x43
  413c72:	(bad)  
  413c73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c74:	pop    ds
  413c75:	aaa    
  413c76:	pop    ds
  413c77:	sbb    dl,BYTE PTR [ebx]
  413c79:	ins    BYTE PTR es:[edi],dx
  413c7a:	xor    dh,al
  413c7c:	test   eax,0x2924f587
  413c81:	and    DWORD PTR [edi+0x37],edi
  413c84:	je     0x413cbf
  413c86:	lods   al,BYTE PTR ds:[esi]
  413c87:	scas   eax,DWORD PTR es:[edi]
  413c88:	pop    ebx
  413c89:	mov    bl,BYTE PTR ds:0x95be0331
  413c8f:	pop    ebp
  413c90:	cli    
  413c91:	adc    eax,0x26586e12
  413c96:	std    
  413c97:	fstp   DWORD PTR [edi+0x38]
  413c9a:	sub    al,0xe0
  413c9c:	pop    edi
  413c9d:	mov    al,al
  413c9f:	add    ebx,DWORD PTR [esi]
  413ca1:	xlat   BYTE PTR ds:[ebx]
  413ca2:	cmp    al,0x62
  413ca4:	repz jmp 0x6e71:0x17740ae2
  413cac:	mov    bl,BYTE PTR [eax-0xb2ffa6]
  413cb2:	xor    esi,DWORD PTR [esi+0x1c2c0a90]
  413cb8:	or     al,BYTE PTR [esi-0x4ae4b7fb]
  413cbe:	mov    dh,0x6e
  413cc0:	mov    ecx,0x6dde7d49
  413cc5:	in     al,dx
  413cc6:	in     al,dx
  413cc7:	add    BYTE PTR [ecx+ebx*2+0x40],bl
  413ccb:	int3   
  413ccc:	mov    ds:0x8a9afd47,eax
  413cd1:	sti    
  413cd2:	pop    ss
  413cd3:	outs   dx,BYTE PTR ds:[esi]
  413cd4:	sti    
  413cd5:	cli    
  413cd6:	pop    ebx
  413cd7:	sbb    ch,ah
  413cd9:	jmp    0xc8bb:0x1f6acab9
  413ce0:	je     0x413cb4
  413ce2:	lods   eax,DWORD PTR ds:[esi]
  413ce3:	pop    ds
  413ce4:	clc    
  413ce5:	adc    DWORD PTR [esi-0x57],ecx
  413ce8:	mov    dh,0x25
  413cea:	adc    al,0x20
  413cec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ced:	or     eax,0xfec47112
  413cf2:	sbb    ebp,DWORD PTR [edx]
  413cf4:	rol    BYTE PTR [edi+0x7a9703c1],cl
  413cfa:	stc    
  413cfb:	fsubr  DWORD PTR [ebp-0x74c8641e]
  413d01:	test   BYTE PTR [ebx+0x3e],0xcd
  413d05:	pop    esp
  413d06:	aas    
  413d07:	not    DWORD PTR [edx+0x440bbc1f]
  413d0d:	aam    0x99
  413d0f:	sub    al,BYTE PTR [eax+ebp*4+0x7d]
  413d13:	cmp    DWORD PTR ds:0xbaf3aa94,edx
  413d19:	inc    esi
  413d1a:	pop    ecx
  413d1b:	fidiv  DWORD PTR [edx]
  413d1d:	cmp    DWORD PTR [eax-0x316a8670],esi
  413d23:	sub    edi,DWORD PTR [ecx]
  413d25:	pop    ss
  413d26:	repnz icebp 
  413d28:	push   bx
  413d2a:	cmp    eax,0xe50407d3
  413d2f:	sti    
  413d30:	leave  
  413d31:	jns    0x413cd6
  413d33:	mov    dl,0xc8
  413d35:	shl    BYTE PTR [ecx],cl
  413d37:	push   es
  413d38:	mov    esi,0x3a537862
  413d3d:	jge    0x413d9a
  413d3f:	mov    bl,0x57
  413d41:	mov    ecx,0xe99d8cad
  413d46:	xor    eax,0x5f7f5022
  413d4b:	mov    edi,0x5f9f8eb
  413d50:	pop    eax
  413d51:	pop    esp
  413d52:	pusha  
  413d53:	jmp    0xbf0d5165
  413d58:	xchg   edi,eax
  413d59:	mov    ch,0xbd
  413d5b:	jge    0x413d3b
  413d5d:	cmp    dh,al
  413d5f:	or     ah,BYTE PTR [edx-0x25da07e9]
  413d65:	loopne 0x413d1f
  413d67:	out    dx,al
  413d68:	lods   al,BYTE PTR ds:[esi]
  413d69:	adc    eax,0x58817014
  413d6e:	adc    eax,0xc43ea481
  413d73:	cwde   
  413d74:	(bad)  
  413d76:	pop    ds
  413d77:	in     eax,0xa1
  413d79:	xor    eax,0x627944b4
  413d7e:	shr    BYTE PTR [eax],1
  413d80:	minps  xmm0,XMMWORD PTR [ecx+0x4f]
  413d84:	push   cs
  413d85:	mov    ebx,0x5386ec90
  413d8a:	and    dl,BYTE PTR [ebx]
  413d8c:	mov    ebp,0x7cc4d0ca
  413d91:	mov    BYTE PTR [edx-0x74],ch
  413d94:	retf   
  413d95:	popf   
  413d96:	add    dl,BYTE PTR [edi+0x46fcea99]
  413d9c:	add    eax,0xa5e40dfe
  413da1:	add    al,BYTE PTR [esp+ebp*1+0x69]
  413da5:	rol    BYTE PTR [edx],1
  413da7:	xor    eax,0xda1922fb
  413dac:	jmp    0x7e34:0xd1ea24e9
  413db3:	mov    ds:0x1db8307a,eax
  413db8:	pop    ebp
  413db9:	push   ss
  413dba:	cmp    DWORD PTR [edx-0x33],esi
  413dbd:	ror    DWORD PTR [ebp-0x155f9eef],0xea
  413dc4:	js     0x413e20
  413dc6:	enter  0x945c,0x1d
  413dca:	test   BYTE PTR [ebx+eax*2],cl
  413dcd:	jae    0x413df9
  413dcf:	sub    edi,DWORD PTR [ecx]
  413dd1:	pop    ebp
  413dd2:	(bad)
  413dd5:	ret    
  413dd6:	call   0x6979:0x8af51bd2
  413ddd:	imul   ebp,DWORD PTR [ebx+0x6a418d3d],0x2e42199a
  413de7:	mov    ds:0x905b3b82,al
  413dec:	inc    edx
  413ded:	stc    
  413dee:	pop    es
  413def:	shl    al,1
  413df1:	lea    ebx,[edi]
  413df3:	js     0x413d9f
  413df5:	inc    edx
  413df6:	fistp  DWORD PTR [ecx-0x4e]
  413df9:	push   eax
  413dfa:	shr    DWORD PTR [eax],0xf6
  413dfd:	test   al,0x64
  413dff:	retf   0x3960
  413e02:	retf   0x1b21
  413e05:	imul   edi,DWORD PTR [ebp-0x46],0xfffffff3
  413e09:	inc    ecx
  413e0a:	jp     0x413d98
  413e0c:	xor    DWORD PTR [esi-0x53d99119],edi
  413e12:	imul   ecx,DWORD PTR [ebx+0xc1eb298],0xffffffcb
  413e19:	mov    al,ds:0x40187707
  413e1e:	(bad)  [edi]
  413e20:	test   eax,0x8bd35e80
  413e25:	repz jg 0x413e91
  413e28:	sub    al,0xb9
  413e2a:	arpl   WORD PTR [edx-0x1d],ax
  413e2d:	sbb    DWORD PTR [eax+0x6e],0x731d2c81
  413e34:	xchg   ecx,eax
  413e35:	sbb    BYTE PTR [eax+0x5b],dl
  413e38:	mov    ds:0x50bf1819,al
  413e3d:	(bad)  
  413e3e:	ror    DWORD PTR [ebx],cl
  413e40:	mov    edi,0xf4fa4804
  413e45:	mov    esp,ecx
  413e47:	ret    0x9ec1
  413e4a:	div    ah
  413e4c:	push   edi
  413e4d:	loope  0x413e0f
  413e4f:	es pop ss
  413e51:	stos   BYTE PTR es:[di],al
  413e53:	xor    BYTE PTR [ecx-0x9],0x6b
  413e57:	(bad)  
  413e58:	sbb    al,0x4a
  413e5a:	sti    
  413e5b:	xchg   ebx,eax
  413e5c:	push   edx
  413e5d:	mov    esi,0x8e14a421
  413e62:	shr    al,0x0
  413e65:	mov    ebp,?
  413e67:	lock fdivr st,st(3)
  413e6a:	and    BYTE PTR [esi-0x2c],bh
  413e6d:	jg     0x413ebf
  413e6f:	sbb    eax,0xc8d6095b
  413e74:	xchg   BYTE PTR [ecx+edi*1-0x1b46786a],al
  413e7b:	sub    BYTE PTR [bx+si-0x3a],dl
  413e7f:	push   ebx
  413e80:	ins    BYTE PTR es:[edi],dx
  413e81:	mov    dl,0x89
  413e83:	or     al,0x5c
  413e85:	test   eax,0x979229b1
  413e8a:	dec    esp
  413e8b:	jle    0x413e2c
  413e8d:	inc    ebx
  413e8e:	mov    ch,0xba
  413e90:	aas    
  413e91:	xchg   ecx,eax
  413e92:	sub    DWORD PTR [eax+esi*8],0xfffffff4
  413e96:	and    esp,DWORD PTR [eax]
  413e98:	aas    
  413e99:	(bad)  
  413e9a:	cli    
  413e9b:	cld    
  413e9c:	xlat   BYTE PTR ds:[ebx]
  413e9d:	push   cs
  413e9e:	daa    
  413e9f:	jmp    0x413e32
  413ea1:	xchg   esp,eax
  413ea2:	popf   
  413ea3:	adc    al,0x3
  413ea5:	pop    eax
  413ea6:	out    dx,eax
  413ea7:	adc    edi,ebx
  413ea9:	sbb    dl,BYTE PTR [eax-0x62]
  413eac:	pop    es
  413ead:	push   ecx
  413eae:	xchg   edi,eax
  413eaf:	inc    edi
  413eb0:	ja     0x413eb8
  413eb2:	jle    0x413ee3
  413eb4:	(bad)  
  413eb5:	mov    ecx,0x227574ff
  413eba:	inc    edi
  413ebb:	push   edx
  413ebc:	inc    esi
  413ebd:	xor    ah,bh
  413ebf:	xor    esi,DWORD PTR cs:[ebx]
  413ec2:	out    dx,eax
  413ec3:	stos   DWORD PTR es:[edi],eax
  413ec4:	mov    esi,0xf41d93f9
  413ec9:	mov    bl,0x26
  413ecb:	inc    DWORD PTR [eax-0xb]
  413ece:	test   DWORD PTR [edi-0x57],edx
  413ed1:	add    cl,BYTE PTR [ebp-0x4b]
  413ed4:	fdivr  QWORD PTR [esi]
  413ed6:	int3   
  413ed7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ed8:	nop
  413ed9:	mov    bl,BYTE PTR [esi+0xe47ed2f]
  413edf:	hlt    
  413ee0:	dec    edx
  413ee1:	xchg   edx,eax
  413ee2:	out    0x7c,eax
  413ee4:	lahf   
  413ee5:	in     al,0x72
  413ee7:	add    ebx,DWORD PTR [edx-0x12]
  413eea:	cld    
  413eeb:	jae    0x413f01
  413eed:	xchg   edi,eax
  413eee:	sub    al,0x74
  413ef0:	push   cs
  413ef1:	mov    al,0x8e
  413ef3:	sub    esp,edi
  413ef5:	or     ecx,DWORD PTR [ebx+0xfc928d0]
  413efb:	jno    0x413ef4
  413efd:	in     eax,0xc3
  413eff:	stos   DWORD PTR es:[edi],eax
  413f00:	stos   DWORD PTR es:[edi],eax
  413f01:	aad    0x9b
  413f03:	mov    edx,0xf14242a7
  413f08:	mov    dh,0xb8
  413f0a:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  413f0c:	or     al,0xa4
  413f0e:	popf   
  413f0f:	and    al,0x5d
  413f11:	mov    cl,0xb3
  413f13:	xchg   ecx,eax
  413f14:	sbb    al,0xdd
  413f16:	inc    esp
  413f17:	in     eax,0x35
  413f19:	icebp  
  413f1a:	xchg   ebx,eax
  413f1b:	int3   
  413f1c:	jbe    0x413ed0
  413f1e:	ds (bad) 
  413f20:	rcl    eax,cl
  413f22:	loop   0x413efa
  413f24:	adc    DWORD PTR [ebx],edi
  413f26:	push   cs
  413f27:	add    eax,0x3eee26cd
  413f2c:	daa    
  413f2d:	pop    ebp
  413f2e:	stc    
  413f2f:	add    DWORD PTR [esi],edi
  413f31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f32:	les    edi,FWORD PTR [edi]
  413f34:	or     eax,0xaf142746
  413f39:	ret    0x3df6
  413f3c:	shr    DWORD PTR ds:[ebx],0xdb
  413f40:	mov    edi,0x8a7e68a2
  413f45:	cwde   
  413f46:	aam    0x80
  413f48:	lock or DWORD PTR [edi],ebx
  413f4b:	das    
  413f4c:	dec    esp
  413f4d:	int3   
  413f4e:	sar    BYTE PTR ds:0xca5bf0c0,cl
  413f54:	fimul  WORD PTR [ecx]
  413f56:	fidivr DWORD PTR [ecx-0x77]
  413f59:	aaa    
  413f5a:	lods   al,BYTE PTR ds:[esi]
  413f5b:	cmp    dl,bl
  413f5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f5f:	rol    ch,1
  413f61:	loopne 0x413fa5
  413f63:	mov    ch,0xc9
  413f65:	stos   DWORD PTR es:[edi],eax
  413f66:	(bad)
  413f69:	inc    dx
  413f6b:	test   BYTE PTR [edx+esi*8-0x38],cl
  413f6f:	sti    
  413f70:	popa   
  413f71:	push   eax
  413f72:	cli    
  413f73:	mov    ebp,0x93c383df
  413f78:	loopne 0x413feb
  413f7a:	(bad)  
  413f7c:	mov    ecx,0xfe15ebae
  413f81:	fisubr WORD PTR [eax+0x5a]
  413f84:	mov    WORD PTR [ecx-0x5f9bede2],?
  413f8a:	les    esp,FWORD PTR [ebp+0x4644b0d1]
  413f90:	sub    DWORD PTR [ebx],esi
  413f92:	pusha  
  413f93:	xchg   BYTE PTR [edi-0x12],ch
  413f96:	fld    st(2)
  413f98:	mov    dl,0xdc
  413f9a:	mov    dl,0x8f
  413f9c:	adc    BYTE PTR [eax-0x4a],dh
  413f9f:	int    0xc2
  413fa1:	hlt    
  413fa2:	out    dx,al
  413fa3:	mov    cl,0xed
  413fa5:	pop    ecx
  413fa6:	test   al,0x83
  413fa8:	aad    0x6e
  413faa:	mov    esi,0xfba1ee28
  413faf:	call   0x47de5769
  413fb4:	scas   eax,DWORD PTR es:[edi]
  413fb5:	xor    al,0xb4
  413fb7:	daa    
  413fb8:	xor    al,0xb7
  413fba:	xchg   DWORD PTR [eax],ebx
  413fbc:	jle    0x413ffa
  413fbe:	popa   
  413fbf:	add    DWORD PTR [eax],ebp
  413fc1:	sub    eax,0x22196bb6
  413fc6:	stc    
  413fc7:	data16 jp 0x413f8e
  413fca:	(bad)  
  413fcb:	out    0x5b,al
  413fcd:	mov    ah,BYTE PTR [esi-0x30]
  413fd0:	push   es
  413fd1:	aas    
  413fd2:	js     0x413fda
  413fd4:	jo     0x413fc7
  413fd6:	dec    esp
  413fd7:	hlt    
  413fd8:	or     ch,dh
  413fda:	jae    0x413ffa
  413fdc:	(bad)  
  413fdd:	cmc    
  413fde:	mov    ds:0xbc9a38ee,eax
  413fe3:	push   eax
  413fe4:	rol    BYTE PTR [eax+0x6b],1
  413fe7:	ret    
  413fe8:	pop    ss
  413fe9:	pushf  
  413fea:	dec    esi
  413feb:	add    BYTE PTR [ebp+0x2cca91ee],cl
  413ff1:	(bad)  
  413ff2:	stc    
  413ff3:	dec    ebp
  413ff4:	ficom  DWORD PTR [ecx]
  413ff6:	cli    
  413ff7:	loopne 0x413f7c
  413ff9:	fnstenv [edx+0x270ead67]
  413fff:	cli    
  414000:	into   
  414001:	imul   ebp,ebx,0x7a
  414004:	(bad)
  414007:	nop
  414008:	xor    eax,0xef2cf056
  41400d:	push   esi
  41400e:	adc    DWORD PTR [ecx+0x4a],ecx
  414011:	sti    
  414012:	inc    ecx
  414013:	or     ecx,eax
  414015:	add    eax,0xf912bf13
  41401a:	fidivr WORD PTR [edi]
  41401c:	push   ss
  41401d:	mov    dh,0x57
  41401f:	mov    ds:0x39a5d4f9,al
  414024:	fisttp DWORD PTR [edx]
  414026:	pop    eax
  414027:	pop    ds
  414028:	xchg   BYTE PTR [ecx+0x53096869],ch
  41402e:	push   es
  41402f:	push   esp
  414030:	or     esp,eax
  414032:	add    bh,al
  414034:	inc    ebx
  414035:	jbe    0x41402d
  414037:	aas    
  414038:	leave  
  414039:	std    
  41403a:	lahf   
  41403b:	aam    0x69
  41403d:	into   
  41403e:	stos   DWORD PTR es:[edi],eax
  41403f:	sbb    DWORD PTR [edi],esi
  414041:	inc    eax
  414042:	je     0x41404a
  414044:	inc    ebp
  414045:	xor    dh,BYTE PTR [ebx+0x12437c45]
  41404b:	leave  
  41404c:	push   eax
  41404d:	fs mov ebx,0x8b7b60ca
  414053:	sti    
  414054:	rcr    BYTE PTR [ecx-0x2312d67c],1
  41405a:	adc    ecx,DWORD PTR [ebp+0x72a74a42]
  414060:	(bad)  
  414061:	jge    0x4140a3
  414063:	in     eax,0xd4
  414065:	xchg   DWORD PTR [ebx+0x5efc2edf],esi
  41406b:	ror    BYTE PTR [eax+0x31],cl
  41406e:	jnp    0x414048
  414070:	lahf   
  414071:	fsubrp st(2),st
  414073:	scas   eax,DWORD PTR es:[edi]
  414074:	fs mov esp,0x6f3c8910
  41407a:	frstor [edi]
  41407c:	loopne 0x41402f
  41407e:	mov    esi,0xf7b876dd
  414083:	sbb    eax,0xa01a9cdb
  414088:	jp     0x4140a3
  41408a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41408b:	mov    al,0xca
  41408d:	push   edi
  41408e:	pop    ds
  41408f:	inc    edx
  414090:	imul   ebp,edi,0x39a2d250
  414096:	aad    0x54
  414098:	leave  
  414099:	fdiv   DWORD PTR [ebx]
  41409b:	ss sti 
  41409d:	not    BYTE PTR [edx+0x72]
  4140a0:	jmp    0x414033
  4140a2:	add    DWORD PTR [ecx-0x44737f8b],0xffffff89
  4140a9:	mov    ss,WORD PTR [bp+si+0x67]
  4140ad:	pop    ebp
  4140ae:	ja     0x414097
  4140b0:	inc    ebx
  4140b1:	sub    BYTE PTR gs:[edx+0x452c8784],ah
  4140b8:	sbb    BYTE PTR [ebx],dh
  4140ba:	dec    esp
  4140bb:	adc    bl,al
  4140bd:	xor    al,0x22
  4140bf:	pop    ebx
  4140c0:	inc    esi
  4140c1:	js     0x4140bf
  4140c3:	or     DWORD PTR [esi-0x3d],ebp
  4140c6:	and    al,0x6f
  4140c8:	jle    0x41412c
  4140ca:	xor    eax,0xe6a9ef03
  4140cf:	jnp    0x414064
  4140d1:	xor    eax,DWORD PTR [ebx+eiz*8]
  4140d4:	mov    dl,0x7b
  4140d6:	inc    esp
  4140d7:	add    DWORD PTR [esp+eax*2+0x21738b83],0x48
  4140df:	or     dh,al
  4140e1:	cld    
  4140e2:	rcr    BYTE PTR [ebp+0x53965f5e],0xf1
  4140e9:	xchg   edx,eax
  4140ea:	jbe    0x4140a4
  4140ec:	or     al,0x9
  4140ee:	jg     0x4140fa
  4140f0:	out    dx,eax
  4140f1:	not    eax
  4140f3:	icebp  
  4140f4:	xchg   ebp,ebp
  4140f6:	adc    esp,DWORD PTR [esi]
  4140f8:	jne    0x414123
  4140fa:	(bad)  
  4140fb:	jne    0x414162
  4140fd:	daa    
  4140fe:	stc    
  4140ff:	pop    eax
  414100:	es mov eax,DWORD PTR fs:[ebx+ebp*8+0xd33c954]
  414109:	xchg   esp,eax
  41410a:	retf   0x647f
  41410d:	ins    WORD PTR es:[edi],dx
  41410f:	mov    dl,0xc4
  414111:	adc    DWORD PTR [edi-0x47],esp
  414114:	outs   dx,BYTE PTR ds:[esi]
  414115:	js     0x414152
  414117:	repz in al,dx
  414119:	ret    0x4c8a
  41411c:	fwait
  41411d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41411e:	lods   al,BYTE PTR ds:[esi]
  41411f:	inc    ecx
  414120:	sub    DWORD PTR [esi+0x6],0xc7ff5fbe
  414127:	push   eax
  414128:	clc    
  414129:	popa   
  41412a:	arpl   WORD PTR [eax+ebp*1-0x4f51dbbd],sp
  414131:	(bad)  
  414132:	in     al,dx
  414133:	sub    al,0x78
  414135:	pop    ebx
  414136:	scas   al,BYTE PTR es:[edi]
  414137:	mov    esp,0x6f7c990d
  41413c:	push   esp
  41413d:	sub    DWORD PTR [edi-0x62fbfb91],ebp
  414143:	xor    BYTE PTR [ebp+0x14],bl
  414146:	(bad)  
  414147:	push   ebp
  414148:	lock pminub mm5,QWORD PTR [edi+0x2a96f432]
  414150:	xchg   esi,eax
  414151:	aad    0xe7
  414153:	push   cs
  414154:	jns    0x41410d
  414156:	call   0x96a4:0x119a22b3
  41415d:	pop    esi
  41415e:	cs fdiv st,st(6)
  414161:	stos   BYTE PTR es:[edi],al
  414162:	jle    0x4141e1
  414164:	and    DWORD PTR [edx],ebp
  414166:	aaa    
  414167:	leave  
  414168:	mov    ah,0x48
  41416a:	mov    al,ds:0xf555562f
  41416f:	sahf   
  414170:	iret   
  414171:	xlat   BYTE PTR ds:[ebx]
  414172:	mov    ds:0x5a8f44b1,al
  414177:	or     esi,ebx
  414179:	cmp    BYTE PTR ds:0x1c62b98e,bh
  41417f:	dec    eax
  414180:	add    DWORD PTR ds:0x5d71b7da,esp
  414186:	adc    BYTE PTR [eax+0x20d12591],bh
  41418c:	aam    0xc
  41418e:	xchg   DWORD PTR [ecx-0x39963f94],edi
  414194:	inc    esi
  414195:	sbb    BYTE PTR [ebp-0x305c7606],0x6e
  41419c:	cs add al,0x15
  41419f:	mov    cl,BYTE PTR [edi]
  4141a1:	and    bh,BYTE PTR [edx+edx*8+0xe6f0036]
  4141a8:	pop    edi
  4141a9:	or     edi,ecx
  4141ab:	test   DWORD PTR [esi-0x54e2c8dd],edx
  4141b1:	int3   
  4141b2:	sub    ebx,DWORD PTR [ebp+0xe]
  4141b5:	mov    cl,0xee
  4141b7:	adc    esp,DWORD PTR [ebx+0x36]
  4141ba:	sti    
  4141bb:	hlt    
  4141bc:	lds    esp,FWORD PTR [ecx+0x40635103]
  4141c2:	fisttp WORD PTR [edi-0x362c4f88]
  4141c8:	out    dx,al
  4141c9:	leave  
  4141ca:	lods   al,BYTE PTR ds:[esi]
  4141cb:	and    ah,bh
  4141cd:	push   esi
  4141ce:	test   BYTE PTR [esi+0x27],dh
  4141d1:	rcr    BYTE PTR [edx+ecx*8+0x2d],cl
  4141d5:	xchg   DWORD PTR [ebp+0x2a],esp
  4141d8:	(bad)  
  4141d9:	cmp    eax,0xad0673a7
  4141de:	das    
  4141df:	les    esi,FWORD PTR [edx-0x78]
  4141e2:	(bad)  
  4141e3:	ds lock arpl cx,sp
  4141e7:	dec    DWORD PTR [eax+0x7908dffe]
  4141ed:	outs   dx,DWORD PTR ds:[esi]
  4141ee:	adc    eax,0x63b10cb2
  4141f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141f4:	inc    edi
  4141f5:	push   0xef5ee306
  4141fa:	fist   DWORD PTR [eax-0xc]
  4141fd:	fnsave [eax]
  4141ff:	jmp    0x41427b
  414201:	lods   eax,DWORD PTR ds:[esi]
  414202:	adc    DWORD PTR [esi],esi
  414204:	or     ecx,0x7c
  414207:	addr16 bnd jle 0x4141ee
  41420b:	clc    
  41420c:	shl    BYTE PTR [esi+0x44b1f4c9],cl
  414212:	pushf  
  414213:	das    
  414214:	lock sbb DWORD PTR [ebp-0x56],ebp
  414218:	neg    BYTE PTR [ecx-0x58]
  41421b:	sub    edi,DWORD PTR [ebx+0x7ece4947]
  414221:	daa    
  414222:	add    bh,BYTE PTR [eax+0x5a7fa04d]
  414228:	int    0xb9
  41422a:	sti    
  41422b:	xor    al,0xe7
  41422d:	icebp  
  41422e:	xor    DWORD PTR [edx+0x7e],edx
  414231:	lods   eax,DWORD PTR ds:[esi]
  414232:	mov    edx,0xc2266b2f
  414237:	cld    
  414238:	(bad)  
  414239:	into   
  41423a:	jl     0x4141c7
  41423c:	test   eax,0xeb1e6515
  414241:	push   edx
  414242:	test   al,0xbf
  414244:	sbb    ah,bl
  414246:	shl    esp,1
  414248:	sbb    BYTE PTR [eax+0x48fb69fd],dl
  41424e:	(bad)  
  41424f:	adc    eax,0xba6ea57d
  414254:	xchg   esp,eax
  414255:	aad    0x79
  414257:	cwde   
  414258:	xor    al,0xa0
  41425a:	(bad)  
  41425b:	stos   DWORD PTR es:[edi],eax
  41425c:	add    dl,BYTE PTR [ecx+0x2604568f]
  414262:	aas    
  414263:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414265:	stc    
  414266:	enter  0x730d,0x20
  41426a:	jl     0x41429a
  41426c:	iret   
  41426d:	pop    eax
  41426e:	cmp    esi,0x160e50dc
  414274:	shr    dl,1
  414276:	add    DWORD PTR [eax-0x469dcd85],edx
  41427c:	jb     0x4142c7
  41427e:	mov    al,0xf2
  414280:	cwde   
  414281:	and    ebp,DWORD PTR [ebx+0x7f]
  414284:	jo     0x414260
  414286:	pop    ss
  414287:	pop    esi
  414288:	dec    esp
  414289:	pop    ss
  41428a:	imul   esp,DWORD PTR [esi],0x5d
  41428d:	jg     0x4142a4
  41428f:	mov    bh,0xd4
  414291:	mov    dh,0x18
  414293:	inc    edi
  414294:	sbb    al,0xfb
  414296:	lahf   
  414297:	or     eax,DWORD PTR [eax+0x47]
  41429a:	mov    eax,0x52454bd
  41429f:	push   esi
  4142a0:	xchg   esi,eax
  4142a1:	fiadd  WORD PTR [esi-0x1c]
  4142a4:	clc    
  4142a5:	and    edx,DWORD PTR [eax+0x6d17e6ba]
  4142ab:	sbb    DWORD PTR [edx+0x4c],ebp
  4142ae:	xor    DWORD PTR [edi-0x4953df75],ebx
  4142b4:	push   0xffffff87
  4142b6:	rol    eax,cl
  4142b8:	hlt    
  4142b9:	in     al,dx
  4142ba:	mov    ch,0xc6
  4142bc:	add    DWORD PTR [ecx-0x5d],ebp
  4142bf:	xchg   edi,eax
  4142c0:	retf   0xb81d
  4142c3:	pop    ebp
  4142c4:	and    edx,esp
  4142c6:	mov    ss,WORD PTR [eax]
  4142c8:	mov    ds:0x78a1dd9,eax
  4142cd:	(bad)  
  4142ce:	iret   
  4142cf:	cmp    eax,DWORD PTR [ebx-0x7b]
  4142d2:	or     eax,0x70626142
  4142d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142d8:	scas   al,BYTE PTR es:[edi]
  4142d9:	mov    ds:0xbb87e1e7,al
  4142de:	xchg   esi,eax
  4142df:	aad    0x8d
  4142e1:	out    dx,eax
  4142e2:	das    
  4142e3:	dec    eax
  4142e4:	aam    0xae
  4142e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142e7:	scas   al,BYTE PTR es:[edi]
  4142e8:	addr16 retf 0xeb2f
  4142ec:	in     eax,0x8
  4142ee:	(bad)  
  4142ef:	call   0xe0be0c4b
  4142f4:	into   
  4142f5:	jnp    0x414318
  4142f7:	dec    eax
  4142f8:	mov    bh,0x96
  4142fa:	inc    edi
  4142fb:	pop    eax
  4142fc:	xor    dh,BYTE PTR [ecx-0x359ab525]
  414302:	sub    BYTE PTR [esi+0x1d],ah
  414305:	stos   DWORD PTR es:[edi],eax
  414306:	xchg   esp,eax
  414307:	push   ds
  414308:	pop    ecx
  414309:	push   edx
  41430a:	aas    
  41430b:	and    DWORD PTR [esi],0xffffff84
  41430e:	cmp    dl,BYTE PTR [ecx-0x6e5706df]
  414314:	add    BYTE PTR [ecx-0x57e5dacf],bl
  41431a:	outs   dx,BYTE PTR ds:[esi]
  41431b:	xchg   BYTE PTR [eax*4+0x2dad2188],cl
  414322:	and    esi,esi
  414324:	test   eax,0x58b4bb7c
  414329:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41432a:	xor    al,0x91
  41432c:	ins    DWORD PTR es:[edi],dx
  41432d:	das    
  41432e:	rol    DWORD PTR [ebx+0x21e00a4c],1
  414334:	sub    dh,BYTE PTR ds:0xcd9c590
  41433a:	ret    0x117d
  41433d:	aad    0x78
  41433f:	aam    0xd4
  414341:	rep lods eax,DWORD PTR ds:[esi]
  414343:	test   BYTE PTR [edx+0xf],dh
  414346:	lods   al,BYTE PTR ds:[esi]
  414347:	cwde   
  414348:	not    DWORD PTR [edx+0x0]
  41434b:	xchg   esi,eax
  41434c:	sbb    eax,ecx
  41434e:	sub    al,0x8a
  414350:	ret    
  414351:	xlat   BYTE PTR ds:[ebx]
  414352:	sbb    ecx,DWORD PTR [edx]
  414354:	lahf   
  414355:	test   DWORD PTR [edx+edi*8-0x41bb2eea],ebx
  41435c:	fst    QWORD PTR [ebp-0x77bad365]
  414362:	js     0x4142e6
  414364:	mov    esi,0xc1ce5e5d
  414369:	cwde   
  41436a:	fcmovnb st,st(4)
  41436c:	inc    esi
  41436d:	out    dx,eax
  41436e:	jmp    0x4143ea
  414370:	out    0x7,al
  414372:	or     DWORD PTR ds:0xbc42b49f,esp
  414378:	pandn  mm7,QWORD PTR [edx-0x55]
  41437c:	jae    0x414325
  41437e:	aad    0xce
  414380:	(bad)  
  414381:	and    ebx,ebp
  414383:	mov    eax,0x73ab276a
  414388:	xchg   ecx,eax
  414389:	inc    ebx
  41438a:	jbe    0x41431b
  41438c:	sbb    edx,ecx
  41438e:	shr    DWORD PTR [ebp-0x51f735c9],1
  414394:	pop    ebp
  414395:	mov    esp,0xab483be7
  41439a:	pop    eax
  41439b:	and    BYTE PTR [eax+0x75],0x3a
  41439f:	mov    eax,ds:0x26b13707
  4143a4:	cdq    
  4143a5:	repnz xor eax,0xc7b50668
  4143ab:	sbb    BYTE PTR ds:0x3ad11785,bh
  4143b1:	mov    ah,BYTE PTR [edi+esi*4+0x4d]
  4143b5:	jmp    0x5224610d
  4143ba:	enter  0x539b,0x29
  4143be:	adc    eax,0x5dfeb2af
  4143c3:	push   ebx
  4143c4:	xor    eax,0xdf76e3b9
  4143c9:	in     eax,dx
  4143ca:	cmp    esi,esp
  4143cc:	rcr    BYTE PTR [eax+0x556320a4],cl
  4143d2:	push   esi
  4143d3:	pop    ds
  4143d4:	dec    edx
  4143d5:	mov    WORD PTR [ebx-0x140336ba],fs
  4143db:	rcr    eax,0xd3
  4143de:	add    eax,0x850f64c
  4143e3:	push   0x3b316774
  4143e8:	sub    al,0xf8
  4143ea:	retf   0xc6dd
  4143ed:	into   
  4143ee:	out    dx,al
  4143ef:	sbb    BYTE PTR [esi+edx*2+0x50],0xeb
  4143f4:	inc    eax
  4143f5:	inc    dl
  4143f7:	push   edi
  4143f8:	adc    ecx,DWORD PTR [ebx-0x56]
  4143fb:	repz iret 
  4143fd:	pmaddwd mm5,QWORD PTR [edx+esi*4-0x64abb356]
  414405:	leave  
  414406:	or     eax,0x188dedbf
  41440b:	or     al,0x5a
  41440d:	jns    0x4143b2
  41440f:	mov    DWORD PTR ss:[ebp+0x3b7fe1fb],esi
  414416:	pop    eax
  414417:	dec    eax
  414418:	outs   dx,DWORD PTR gs:[esi]
  41441a:	lahf   
  41441b:	add    edi,esp
  41441d:	test   eax,0xe1bffc46
  414422:	aam    0xf4
  414424:	imul   DWORD PTR [ebp-0x208ef2e8]
  41442a:	push   ss
  41442b:	sub    al,0x75
  41442d:	mov    dl,0xa
  41442f:	ret    
  414430:	(bad)  
  414431:	out    dx,eax
  414432:	push   ss
  414433:	add    DWORD PTR [esi+0x15],edi
  414436:	inc    esp
  414437:	jne    0x41442c
  414439:	mov    cl,0xb4
  41443b:	pop    esp
  41443c:	fistp  WORD PTR [edx]
  41443e:	push   DWORD PTR [edi+0x7f]
  414441:	jmp    0xa147:0xaba8a986
  414448:	adc    ebp,DWORD PTR [ecx+ebp*2+0x4f2163ff]
  41444f:	xlat   BYTE PTR ds:[ebx]
  414450:	adc    DWORD PTR [edi],ecx
  414452:	push   0x2380c978
  414457:	mov    cl,BYTE PTR [ebx]
  414459:	mov    esi,0x9edce71a
  41445e:	or     ebx,DWORD PTR [edi+0x2c22a9b9]
  414464:	push   0x69
  414466:	xor    eax,0xc405f0c7
  41446b:	(bad)  
  41446c:	(bad)  [ecx-0x59dbc2f4]
  414472:	sub    al,0x73
  414474:	xchg   BYTE PTR [edi],dh
  414476:	lods   al,BYTE PTR ds:[esi]
  414477:	loope  0x414432
  414479:	outs   dx,DWORD PTR ds:[esi]
  41447a:	sub    DWORD PTR [ecx],esp
  41447c:	std    
  41447d:	sbb    BYTE PTR [esi+0x3e0960ee],0x52
  414484:	in     al,0x55
  414486:	fwait
  414487:	(bad)  
  414488:	jb     0x4144b3
  41448a:	add    al,0x53
  41448c:	xchg   ebp,eax
  41448d:	jge    0x41450c
  41448f:	push   ebx
  414490:	add    BYTE PTR [eax-0x3b],cl
  414493:	jae    0x41449b
  414495:	call   0x25fe:0xdbdbc455
  41449c:	retf   
  41449d:	lock xor ch,al
  4144a0:	jbe    0x4144c4
  4144a2:	in     eax,dx
  4144a3:	or     bl,BYTE PTR [esi+0x22]
  4144a6:	push   edx
  4144a7:	ins    DWORD PTR es:[edi],dx
  4144a8:	out    0x30,al
  4144aa:	xchg   DWORD PTR [ecx+0x77],edx
  4144ad:	cmc    
  4144ae:	in     eax,0xf9
  4144b0:	pop    edi
  4144b1:	push   esp
  4144b2:	repnz mov bl,0x6d
  4144b5:	pop    esi
  4144b6:	(bad)  
  4144b7:	cld    
  4144b8:	sub    eax,DWORD PTR [ebx]
  4144ba:	dec    esp
  4144bb:	jno    0x4144e9
  4144bd:	cmp    ecx,DWORD PTR [ebx-0x592eb492]
  4144c3:	call   0x1c0f:0x2eaf8131
  4144ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144cb:	pop    ss
  4144cc:	add    eax,DWORD PTR [ecx-0x67]
  4144cf:	cmp    al,0x9c
  4144d1:	ror    ah,0x13
  4144d4:	xor    edi,DWORD PTR [eax]
  4144d6:	data16 mov al,ds:0xb3450b
  4144dc:	mov    eax,ds:0x8345850c
  4144e1:	test   eax,0x22fef121
  4144e6:	push   eax
  4144e7:	icebp  
  4144e8:	test   BYTE PTR [eax-0x24],dh
  4144eb:	(bad)  
  4144ec:	(bad)  
  4144ed:	cld    
  4144ee:	or     bh,BYTE PTR [edi-0x29]
  4144f1:	mov    al,ds:0xc8e38412
  4144f6:	dec    edx
  4144f7:	jp     0x4144b8
  4144f9:	sub    al,0xd0
  4144fb:	push   esp
  4144fc:	add    eax,0x1ed08632
  414501:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414502:	les    edx,FWORD PTR [ebx-0x52]
  414505:	lds    ebp,FWORD PTR [edx+0x68]
  414508:	add    esp,ecx
  41450a:	cmp    BYTE PTR [edx+0x24b476c5],cl
  414510:	js     0x414500
  414512:	repz push ecx
  414514:	popa   
  414515:	xor    ecx,DWORD PTR [edi]
  414517:	out    0x47,al
  414519:	dec    esp
  41451a:	loop   0x41454c
  41451c:	cdq    
  41451d:	mov    dh,BYTE PTR [edi]
  41451f:	jmp    0x1783:0xd3cdba22
  414526:	leave  
  414527:	pop    eax
  414528:	mov    edi,0xc2e7baec
  41452d:	test   DWORD PTR ss:[esi],eax
  414530:	cmp    esi,esi
  414532:	ja     0x414532
  414534:	push   eax
  414535:	pop    ds
  414536:	xchg   DWORD PTR [eax-0x351359a7],esp
  41453c:	out    0x7d,eax
  41453e:	loope  0x414513
  414540:	arpl   WORD PTR [esi+ecx*8],bx
  414543:	push   0x56
  414545:	hlt    
  414546:	push   esp
  414547:	ret    0xbab1
  41454a:	push   ebp
  41454b:	loop   0x4144f2
  41454d:	mov    ebx,0xf8227929
  414552:	xchg   esp,eax
  414553:	iret   
  414554:	sbb    eax,0x205d0abd
  414559:	cmp    al,0xa7
  41455b:	mov    esp,0xa5eaa5ab
  414560:	mov    bl,0x5f
  414562:	and    BYTE PTR [ebp-0x431346d6],bh
  414568:	fdiv   DWORD PTR [ebp-0x2bffe0df]
  41456e:	xchg   bx,ax
  414570:	stos   DWORD PTR es:[edi],eax
  414571:	sub    eax,0x877c82a5
  414576:	jae    0x4145d5
  414578:	mov    bh,0x9a
  41457a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41457b:	retf   0xc725
  41457e:	lock push 0xffffffef
  414581:	inc    eax
  414582:	mov    dl,0x2
  414584:	jl     0x41459c
  414586:	add    al,0x13
  414588:	mov    ds:0x1b64af8a,al
  41458d:	aas    
  41458e:	sub    DWORD PTR [edi+0x38],edx
  414591:	int3   
  414592:	mov    al,0x72
  414594:	call   0x7620:0xd64a9df2
  41459b:	jmp    0x4145c1
  41459d:	mov    WORD PTR [eax+0x7a],cs
  4145a0:	dec    ecx
  4145a1:	mov    es,WORD PTR [eax+0x48]
  4145a4:	pushf  
  4145a5:	sahf   
  4145a6:	mov    DWORD PTR [ecx-0x688533d9],edi
  4145ac:	lods   eax,DWORD PTR ds:[esi]
  4145ad:	les    ebx,FWORD PTR [edi+0x4b59b7d9]
  4145b3:	ror    BYTE PTR [ecx],0x6e
  4145b6:	push   ebp
  4145b7:	mov    ebx,0x56c0884d
  4145bc:	imul   ebx,DWORD PTR [edi],0xfffffff3
  4145bf:	loopne 0x4145b9
  4145c1:	in     al,dx
  4145c2:	outs   dx,BYTE PTR ds:[esi]
  4145c3:	pop    ebx
  4145c4:	inc    edx
  4145c5:	call   DWORD PTR [ebp-0x77f6d676]
  4145cb:	cs push 0xa
  4145ce:	and    ah,BYTE PTR [edx+0x44]
  4145d1:	scas   al,BYTE PTR es:[edi]
  4145d2:	mov    ecx,0xeaed804
  4145d7:	je     0x414610
  4145d9:	sbb    esp,DWORD PTR [eax+edx*8]
  4145dc:	mov    al,0x6
  4145de:	xor    al,0xe9
  4145e0:	inc    esi
  4145e1:	sti    
  4145e2:	fcom   QWORD PTR [eax+esi*2+0x4ebc0f5a]
  4145e9:	test   al,0x4
  4145eb:	retf   
  4145ec:	sbb    DWORD PTR [edi+0x37],ecx
  4145ef:	in     al,0xe2
  4145f1:	loop   0x414624
  4145f3:	aaa    
  4145f4:	jb     0x414579
  4145f6:	fsubp  st(5),st
  4145f8:	or     al,0xd5
  4145fa:	sbb    BYTE PTR [edi+0x261d3ef9],al
  414600:	push   esi
  414601:	mov    cl,0x3f
  414603:	inc    esp
  414604:	jge    0x4145fe
  414606:	pop    es
  414607:	add    DWORD PTR [esi-0x7076d89c],esp
  41460d:	push   0x36
  41460f:	sub    DWORD PTR gs:[ebp-0x4f],0x3a9a63ee
  414617:	fcomp  QWORD PTR [ebx+0x14f9c082]
  41461d:	outs   dx,DWORD PTR ds:[esi]
  41461e:	(bad)  
  41461f:	sbb    al,0x99
  414621:	pop    ebp
  414622:	or     ecx,edx
  414624:	sbb    dl,bh
  414626:	or     eax,0xd45f5ce4
  41462b:	cmp    DWORD PTR [esi],edi
  41462d:	inc    esi
  41462e:	ja     0x414606
  414630:	(bad)  [eax-0xd3fb5fe]
  414636:	fidivr DWORD PTR ds:0xc7d0c3e1
  41463c:	push   eax
  41463d:	inc    eax
  41463e:	xor    eax,0xc0acf7d7
  414643:	sub    DWORD PTR [edx-0x4009b5a2],edx
  414649:	shl    BYTE PTR [eax-0x3e],cl
  41464c:	jg     0x414657
  41464e:	(bad)  
  41464f:	popf   
  414650:	pop    ecx
  414651:	mov    ebp,edi
  414653:	sbb    edi,DWORD PTR [ecx+0x4f10b37c]
  414659:	mov    eax,0xd3f48af0
  41465e:	cwde   
  41465f:	push   ds
  414660:	ds out 0x4e,eax
  414663:	push   esp
  414664:	repz scas al,BYTE PTR es:[edi]
  414666:	push   ebx
  414667:	push   0x3b
  414669:	mov    ch,0x43
  41466b:	jno    0x414618
  41466d:	xor    eax,esi
  41466f:	add    eax,edi
  414671:	push   eax
  414672:	mov    eax,DWORD PTR [ebp-0x1c]
  414675:	xor    eax,esi
  414677:	add    eax,edi
  414679:	push   eax
  41467a:	mov    eax,DWORD PTR [ebp-0x10]
  41467d:	xor    eax,esi
  41467f:	add    eax,edi
  414681:	push   eax
  414682:	lea    eax,[ebp-0x90]
  414688:	push   eax
  414689:	push   DWORD PTR [ebp-0x20]
  41468c:	push   DWORD PTR [ebp-0x30]
  41468f:	call   0x40f89f
  414694:	test   eax,eax
  414696:	je     0x4146c7
  41469c:	lea    eax,[ebp-0x90]
  4146a2:	push   eax
  4146a3:	mov    eax,DWORD PTR [ebp-0x30]
  4146a6:	xor    eax,esi
  4146a8:	add    eax,edi
  4146aa:	push   eax
  4146ab:	mov    eax,DWORD PTR [ebp-0x2c]
  4146ae:	add    eax,0xaa
  4146b3:	push   eax
  4146b4:	mov    eax,DWORD PTR [ebp-0x2c]
  4146b7:	mov    eax,DWORD PTR [eax+0x198]
  4146bd:	push   DWORD PTR [eax]
  4146bf:	call   0x40867e
  4146c4:	mov    DWORD PTR [ebp-0x40],eax
  4146c7:	lea    eax,[ebp+0x4]
  4146ca:	mov    DWORD PTR [ebp-0x34],eax
  4146cd:	mov    eax,DWORD PTR [ebp-0x8]
  4146d0:	mov    eax,DWORD PTR [eax]
  4146d2:	mov    eax,DWORD PTR [eax]
  4146d4:	mov    eax,DWORD PTR [eax]
  4146d6:	test   eax,eax
  4146d8:	je     0x416aa8
  4146de:	lea    eax,[ebp-0xc]
  4146e1:	mov    DWORD PTR [ebp-0x4c],eax
  4146e4:	mov    eax,DWORD PTR [ebp-0x3c]
  4146e7:	mov    DWORD PTR [ebp-0xc],eax
  4146ea:	mov    eax,DWORD PTR [ebp-0x8]
  4146ed:	mov    eax,DWORD PTR [eax]
  4146ef:	mov    eax,DWORD PTR [eax]
  4146f1:	mov    eax,DWORD PTR [eax]
  4146f3:	sub    DWORD PTR [ebp-0xc],eax
  4146f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4146f9:	xor    ecx,esi
  4146fb:	mov    eax,0xffcd8d25
  414700:	sub    eax,ecx
  414702:	add    DWORD PTR [ebp-0xc],eax
  414705:	mov    eax,DWORD PTR [ebp-0xc]
  414708:	mov    ecx,DWORD PTR [ebp-0x8]
  41470b:	mov    ecx,DWORD PTR [ecx]
  41470d:	mov    ecx,DWORD PTR [ecx]
  41470f:	mov    ecx,DWORD PTR [ecx]
  414711:	mov    DWORD PTR [ecx+0x1],eax
  414714:	mov    al,BYTE PTR [ebp-0x1]
  414717:	mov    ecx,DWORD PTR [ebp-0x8]
  41471a:	mov    ecx,DWORD PTR [ecx]
  41471c:	mov    ecx,DWORD PTR [ecx]
  41471e:	mov    ecx,DWORD PTR [ecx]
  414720:	push   DWORD PTR [ebp-0x2c]
  414723:	xor    al,0x6f
  414725:	sub    al,0xd
  414727:	mov    BYTE PTR [ecx],al
  414729:	mov    eax,ds:0x423e90
  41472e:	push   DWORD PTR [eax]
  414730:	push   DWORD PTR ds:0x4240ec
  414736:	push   DWORD PTR ds:0x423e98
  41473c:	push   DWORD PTR ds:0x4240cc
  414742:	push   DWORD PTR ds:0x424154
  414748:	push   DWORD PTR [ebp-0x30]
  41474b:	jmp    0x416a9a
  414750:	jp     0x414751
  414752:	int    0x35
  414754:	ret    
  414755:	add    ecx,DWORD PTR [edx-0x41938645]
  41475b:	pop    ss
  41475c:	jl     0x414733
  41475e:	out    dx,eax
  41475f:	sub    cl,BYTE PTR [eax+ecx*2+0x5f506261]
  414766:	bound  esp,QWORD PTR [edx+0x7d]
  414769:	push   ebx
  41476a:	jmp    0x40852f58
  41476f:	sub    cl,dh
  414771:	push   ecx
  414772:	xor    al,0x93
  414774:	cwde   
  414775:	loope  0x414796
  414777:	jbe    0x41479a
  414779:	sbb    DWORD PTR [ebx+0x151c9ff7],edi
  41477f:	pop    bx
  414781:	sti    
  414782:	xchg   BYTE PTR ds:0x906ebdf9,ah
  414788:	push   0xc8f69f75
  41478d:	test   BYTE PTR [edi+0x14],al
  414790:	hlt    
  414791:	inc    edx
  414792:	jmp    0x4147ec
  414794:	out    dx,al
  414795:	imul   eax,DWORD PTR [eax],0xffffff8a
  414798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414799:	add    eax,0xd8cac05c
  41479e:	xchg   ebp,eax
  41479f:	pop    edi
  4147a0:	nop
  4147a1:	cwde   
  4147a2:	push   ss
  4147a3:	sub    eax,0x83550f8
  4147a8:	repz cmp eax,edx
  4147ab:	or     eax,0x6695b920
  4147b0:	mov    eax,0x9876ea72
  4147b5:	ja     0x4147d3
  4147b7:	add    bh,BYTE PTR [eax-0xc9e7e99]
  4147bd:	push   0x892ec17f
  4147c2:	dec    ecx
  4147c3:	mov    edi,0x8af361c9
  4147c8:	test   eax,0x50afeb11
  4147cd:	jge    0x414794
  4147cf:	lahf   
  4147d0:	ror    DWORD PTR [esi-0x4b],0xc
  4147d4:	cmp    edx,DWORD PTR [esi+0x3c]
  4147d7:	stos   DWORD PTR es:[edi],eax
  4147d8:	not    ah
  4147da:	inc    edx
  4147db:	jo     0x414842
  4147dd:	adc    esi,DWORD PTR [esi-0x61]
  4147e0:	jl     0x41485c
  4147e2:	and    eax,0x64fc6dae
  4147e7:	push   0xffffffaf
  4147e9:	sbb    bh,BYTE PTR [ebx]
  4147eb:	dec    esi
  4147ec:	in     eax,0xaa
  4147ee:	jge    0x4147e5
  4147f0:	hlt    
  4147f1:	pop    ebx
  4147f2:	adc    dl,bl
  4147f4:	out    dx,al
  4147f5:	inc    eax
  4147f6:	sahf   
  4147f7:	std    
  4147f8:	fs sbb ch,bl
  4147fb:	push   esi
  4147fc:	sub    DWORD PTR [ecx-0x33],eax
  4147ff:	jge    0x414857
  414801:	mov    edi,DWORD PTR [edx]
  414803:	(bad)  
  414805:	cmp    BYTE PTR [eax+0x60],ch
  414808:	mov    esp,0x42cb4afe
  41480d:	cld    
  41480e:	in     al,dx
  41480f:	int    0x59
  414811:	shl    DWORD PTR [ebp-0x7c],cl
  414814:	cmp    cl,BYTE PTR [ecx+0x24]
  414817:	cld    
  414818:	add    cl,dh
  41481a:	fwait
  41481b:	mov    al,0x70
  41481d:	(bad)  
  41481f:	jmp    0x414897
  414821:	(bad)  
  414822:	push   edx
  414823:	jecxz  0x414817
  414825:	cmp    eax,0x5e89685e
  41482a:	jo     0x4147c5
  41482c:	pop    ecx
  41482d:	ins    DWORD PTR es:[edi],dx
  41482e:	stc    
  41482f:	ficomp WORD PTR [ebp+0x45]
  414832:	ins    DWORD PTR es:[edi],dx
  414833:	lea    ecx,[ebx]
  414835:	outs   dx,BYTE PTR ds:[esi]
  414836:	fist   WORD PTR [edi-0x7a]
  414839:	rcl    DWORD PTR [eax],1
  41483b:	adc    al,0xe6
  41483d:	sub    esp,ebx
  41483f:	les    esp,FWORD PTR [edi-0x3fae72d0]
  414845:	mov    esi,0x331906c
  41484a:	add    BYTE PTR [edx-0x5dcd2c5c],dl
  414850:	mov    dh,0xe7
  414852:	sub    ebp,esi
  414854:	sahf   
  414855:	sub    eax,0x59333a23
  41485a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41485b:	pop    ebx
  41485c:	(bad)  [ecx]
  41485e:	mov    eax,ds:0x3ae61902
  414863:	adc    BYTE PTR [edi+0x26],dl
  414866:	lds    esp,FWORD PTR [edx+0x43413e1e]
  41486c:	mov    ds:0xaedd243f,eax
  414871:	dec    ebp
  414872:	fadd   DWORD PTR [ebp+0x45]
  414875:	mov    DWORD PTR ds:0xd0a6222,edi
  41487b:	jo     0x4148b3
  41487d:	ja     0x4148b9
  41487f:	out    0xc9,al
  414881:	ss pop esp
  414883:	sti    
  414884:	pop    ebp
  414885:	stc    
  414886:	enter  0x1c75,0x54
  41488a:	retf   0x1453
  41488d:	ds loopne 0x4148d6
  414890:	xor    DWORD PTR [edi+0x655b3852],0x247cd5c9
  41489a:	sti    
  41489b:	mov    eax,0x77259ddd
  4148a0:	je     0x41488c
  4148a2:	xchg   esi,eax
  4148a3:	push   eax
  4148a4:	mov    WORD PTR [edi],ss
  4148a6:	test   al,0x4a
  4148a8:	sbb    BYTE PTR [edx+0x1e],cl
  4148ab:	repnz cmovnp ecx,DWORD PTR [ebp+0x64]
  4148b0:	jg     0x414914
  4148b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148b3:	mov    dh,0x44
  4148b5:	push   edx
  4148b6:	shl    BYTE PTR [edi-0x24],0xda
  4148ba:	xor    al,0x9b
  4148bc:	mov    bl,0x6f
  4148be:	xchg   ebx,eax
  4148bf:	push   edi
  4148c0:	adc    dh,BYTE PTR [ecx+0x34a5039c]
  4148c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148c7:	sbb    bl,dh
  4148c9:	jno    0x414939
  4148cb:	jno    0x4148ce
  4148cd:	leave  
  4148ce:	pop    eax
  4148cf:	mov    edx,0x42ccb546
  4148d4:	mov    DWORD PTR [edi],edi
  4148d6:	and    ah,ch
  4148d8:	mov    eax,ds:0xda5369eb
  4148dd:	std    
  4148de:	shl    BYTE PTR [edi-0x447d936f],1
  4148e4:	imul   al
  4148e6:	in     al,dx
  4148e7:	int3   
  4148e8:	xor    eax,edx
  4148ea:	push   eax
  4148eb:	push   ss
  4148ec:	fild   DWORD PTR [eax+0x1b728128]
  4148f2:	jecxz  0x41492d
  4148f4:	mov    bh,0xcc
  4148f6:	inc    ebp
  4148f7:	ins    BYTE PTR es:[edi],dx
  4148f8:	sahf   
  4148f9:	push   0x75
  4148fb:	aam    0xb0
  4148fd:	das    
  4148fe:	and    DWORD PTR [eax-0x2e9e58d],0x3f0d2d1e
  414908:	pop    eax
  414909:	pusha  
  41490a:	mov    BYTE PTR [edi-0x666618c5],dh
  414910:	sub    ch,bl
  414912:	js     0x41491c
  414914:	out    0xb6,al
  414916:	outs   dx,BYTE PTR ds:[esi]
  414917:	sti    
  414918:	pop    ebx
  414919:	mov    al,ds:0x2d5025a7
  41491e:	and    BYTE PTR [ebx+0x5b],cl
  414921:	xchg   ebx,eax
  414922:	test   al,0xe4
  414924:	mov    cs,esp
  414926:	xchg   ecx,eax
  414927:	stos   BYTE PTR es:[edi],al
  414928:	icebp  
  414929:	dec    edi
  41492a:	test   eax,0x6cf12c8e
  41492f:	sub    DWORD PTR [esi],ebx
  414931:	stos   BYTE PTR es:[edi],al
  414932:	aad    0x8a
  414934:	daa    
  414935:	add    ebp,DWORD PTR [esi]
  414937:	xor    al,0x22
  414939:	cwde   
  41493a:	xor    eax,0xae93abc2
  41493f:	retf   
  414940:	dec    ebx
  414941:	adc    BYTE PTR [eax+edi*8],al
  414944:	out    dx,al
  414945:	inc    ebx
  414946:	sbb    al,0xb5
  414948:	xchg   BYTE PTR [ebx+ebp*2+0x140e32a8],cl
  41494f:	mov    al,0x90
  414951:	aaa    
  414952:	push   edx
  414953:	loopne 0x41498b
  414955:	loop   0x41490c
  414957:	push   ss
  414958:	jb     0x4148fc
  41495a:	(bad)  
  41495b:	pop    eax
  41495c:	imul   ecx,DWORD PTR [esi-0x3aa418b2],0x66037b5f
  414966:	xor    ah,BYTE PTR [esi]
  414968:	jl     0x4149d8
  41496a:	repz xor bh,BYTE PTR [esi-0x7c]
  41496e:	cmp    eax,DWORD PTR ds:0x61702d05
  414974:	retf   0x5c8d
  414977:	push   cs
  414978:	out    0xb6,al
  41497a:	adc    esp,DWORD PTR [ecx]
  41497c:	xor    esi,edx
  41497e:	cwde   
  41497f:	and    al,ah
  414981:	cmp    eax,0xf1c4cce
  414986:	push   cs
  414987:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414988:	ret    0x3d1b
  41498b:	mov    ss:0xa89a3941,eax
  414991:	shr    eax,0x25
  414994:	push   esp
  414995:	or     BYTE PTR [ebp-0x80],0xf4
  414999:	cld    
  41499a:	(bad)  
  41499b:	repz cmp eax,esi
  41499e:	test   bl,0x99
  4149a1:	push   0x20
  4149a3:	inc    eax
  4149a4:	mov    edx,edx
  4149a6:	mov    al,0xbf
  4149a8:	sbb    DWORD PTR [edi],0x74812463
  4149ae:	imul   esp,ecx,0x60
  4149b1:	(bad)  
  4149b2:	scas   eax,DWORD PTR es:[edi]
  4149b3:	js     0x4149cd
  4149b5:	std    
  4149b6:	jmp    0xe3dc:0xa3731570
  4149bd:	pop    ds
  4149be:	cwde   
  4149bf:	push   esi
  4149c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149c1:	stos   BYTE PTR es:[edi],al
  4149c2:	mov    bh,0xec
  4149c4:	loope  0x414960
  4149c6:	sbb    al,BYTE PTR [edx-0x4b]
  4149c9:	adc    eax,edi
  4149cb:	or     edi,ebx
  4149cd:	mov    al,0x38
  4149cf:	js     0x414a27
  4149d1:	mov    bl,0xb2
  4149d3:	xchg   ecx,eax
  4149d4:	sub    DWORD PTR [edi+0x6],eax
  4149d7:	xchg   ebx,eax
  4149d8:	les    eax,FWORD PTR [ecx+0x70af58bc]
  4149de:	retf   
  4149df:	das    
  4149e0:	and    ecx,DWORD PTR [ecx]
  4149e2:	mov    ch,0x42
  4149e4:	cs mov bh,0x5b
  4149e7:	xchg   ecx,eax
  4149e8:	mov    dh,0x1c
  4149ea:	lods   eax,DWORD PTR ds:[esi]
  4149eb:	and    bh,BYTE PTR [esi]
  4149ed:	jnp    0x414a4b
  4149ef:	sbb    eax,0xa786f8d9
  4149f4:	out    0x52,eax
  4149f6:	adc    ecx,DWORD PTR [edi-0x5a]
  4149f9:	jb     0x414a27
  4149fb:	xchg   edx,edx
  4149fd:	loopne 0x414a3b
  4149ff:	add    DWORD PTR ds:0x7ea677ef,esi
  414a05:	mov    al,0x7c
  414a07:	lods   eax,DWORD PTR ds:[esi]
  414a08:	and    al,0xcf
  414a0a:	(bad)  
  414a0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a0d:	(bad)  
  414a0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a10:	adc    BYTE PTR [edx+0x57],bh
  414a13:	sbb    eax,0xc5507ff9
  414a18:	dec    ecx
  414a19:	xor    al,0x32
  414a1b:	mov    fs,eax
  414a1d:	fisubr WORD PTR [eax+0x6a]
  414a20:	hlt    
  414a21:	fild   DWORD PTR [ebx-0x649b9828]
  414a27:	lock xor cl,BYTE PTR [ebx-0x5]
  414a2b:	ss jnp 0x414a9b
  414a2e:	cmp    DWORD PTR [ebp+eiz*1+0x65],esi
  414a32:	es leave 
  414a34:	pop    esi
  414a35:	mov    bl,0xb4
  414a37:	fidiv  WORD PTR [bp+di]
  414a3a:	stos   BYTE PTR es:[edi],al
  414a3b:	sbb    ecx,esi
  414a3d:	xchg   DWORD PTR [ebx],ebp
  414a3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a40:	cmp    al,0x65
  414a42:	pop    esp
  414a43:	es into 
  414a45:	xchg   cl,cl
  414a47:	cwde   
  414a48:	lds    edx,FWORD PTR [esi+0x273bd5c7]
  414a4e:	add    ah,bh
  414a50:	outs   dx,BYTE PTR ds:[esi]
  414a51:	pop    esp
  414a52:	repnz mov BYTE PTR [bx+di-0x7a],cl
  414a57:	xor    al,0x89
  414a59:	loopne 0x414a91
  414a5b:	cwde   
  414a5c:	mov    esi,0xc4efbd96
  414a61:	cmp    dl,BYTE PTR [eax+0x66b34ee8]
  414a67:	(bad)  
  414a68:	fdivr  QWORD PTR [eax+0x571cf898]
  414a6e:	and    edi,DWORD PTR [edx-0x40]
  414a71:	aad    0x6e
  414a73:	clc    
  414a74:	xchg   ebp,edi
  414a76:	and    al,0x71
  414a78:	and    ebx,DWORD PTR [ebx-0x35]
  414a7b:	enter  0x363c,0x4
  414a7f:	and    ah,bh
  414a81:	out    dx,eax
  414a82:	imul   eax,esi,0xffffffc2
  414a85:	ss icebp 
  414a87:	mov    bh,0x8d
  414a89:	mov    edi,0xfb5f8974
  414a8e:	fistp  DWORD PTR [ebx+0x79]
  414a91:	aas    
  414a92:	dec    eax
  414a93:	hlt    
  414a94:	fistp  WORD PTR [edi-0xd4b19e1]
  414a9a:	sbb    eax,0xd2c4092b
  414a9f:	fcomp  QWORD PTR [ebp-0x20]
  414aa2:	and    DWORD PTR [ebx-0x2da750bd],esi
  414aa8:	or     eax,0xe0df86f4
  414aad:	add    eax,0xb2cb597
  414ab2:	adc    dl,ch
  414ab4:	bound  eax,QWORD PTR gs:[esp-0xc]
  414ab9:	pop    ds
  414aba:	jge    0x414a3c
  414abc:	mov    eax,0xe59f40a8
  414ac1:	mov    ds:0x725f0a53,al
  414ac6:	cdq    
  414ac7:	jge    0x414aff
  414ac9:	rol    DWORD PTR [esi-0x494ee76c],cl
  414acf:	mov    eax,0x6c6ea948
  414ad4:	cld    
  414ad5:	stos   DWORD PTR es:[edi],eax
  414ad6:	(bad)  [edx+edi*2+0x70b1af52]
  414add:	cdq    
  414ade:	retf   
  414adf:	xor    BYTE PTR [ecx-0x13],bl
  414ae2:	mov    ds:0xdfc65659,al
  414ae7:	mov    al,ds:0xca838d79
  414aec:	fwait
  414aed:	push   ebp
  414aee:	in     al,dx
  414aef:	and    BYTE PTR [edx+edi*2],dl
  414af2:	outs   dx,BYTE PTR ds:[esi]
  414af3:	push   edx
  414af4:	in     al,dx
  414af5:	push   ss
  414af6:	mov    WORD PTR [esi],ss
  414af8:	mov    ah,0x37
  414afa:	out    0x84,eax
  414afc:	shr    DWORD PTR [edi+ebp*2+0x6a3fcf24],cl
  414b03:	mov    WORD PTR [ebx+esi*1+0x6ea69a16],fs
  414b0a:	ins    DWORD PTR es:[edi],dx
  414b0b:	imul   esi,DWORD PTR [ebp-0xf14b29d],0x59
  414b12:	sbb    eax,0x5533772a
  414b17:	out    dx,al
  414b18:	or     edx,DWORD PTR [edx]
  414b1a:	fadd   st,st(5)
  414b1c:	stos   DWORD PTR es:[edi],eax
  414b1d:	into   
  414b1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b1f:	mov    dl,0xfe
  414b21:	in     al,0x99
  414b23:	clc    
  414b24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b25:	sbb    al,0xd
  414b27:	mov    esp,0x3db134f3
  414b2c:	call   0x91c6:0x12355474
  414b33:	std    
  414b34:	pushf  
  414b35:	repnz push 0x2cfca1bd
  414b3b:	jle    0x414b95
  414b3d:	jmp    0x414b71
  414b3f:	mov    ah,0x13
  414b41:	jge    0x414b06
  414b43:	pop    ds
  414b44:	pop    edi
  414b45:	stos   DWORD PTR es:[edi],eax
  414b46:	call   0xd3f93687
  414b4b:	aaa    
  414b4c:	ss pushf 
  414b4e:	retf   
  414b4f:	pusha  
  414b50:	mov    cl,0xba
  414b52:	dec    edi
  414b53:	sbb    edx,edi
  414b55:	fwait
  414b56:	loopne 0x414ae9
  414b58:	in     eax,0xd4
  414b5a:	jnp    0x414b37
  414b5c:	add    esi,DWORD PTR [ebp-0x36]
  414b5f:	popf   
  414b60:	jae    0x414bab
  414b62:	mov    bh,0xe3
  414b65:	int3   
  414b66:	or     al,0x0
  414b68:	mov    eax,ds:0x981b290e
  414b6d:	pop    es
  414b6e:	adc    al,0xb0
  414b70:	mov    bl,0x82
  414b72:	sahf   
  414b73:	rcl    bh,0x88
  414b76:	or     BYTE PTR [ecx],ch
  414b78:	iret   
  414b79:	mov    esi,0xc3546ee3
  414b7e:	stos   BYTE PTR es:[edi],al
  414b7f:	mov    ds:0x3083013b,eax
  414b84:	sub    cl,ch
  414b86:	enter  0xb4b4,0x47
  414b8a:	aam    0x33
  414b8c:	mov    ah,0x26
  414b8e:	jo     0x414bd6
  414b90:	xchg   edi,eax
  414b91:	dec    ebp
  414b92:	popa   
  414b93:	add    ebp,ebp
  414b95:	inc    eax
  414b96:	fwait
  414b97:	stos   DWORD PTR es:[edi],eax
  414b98:	shr    DWORD PTR [edi-0x1c8c8edb],0x34
  414b9f:	xchg   ebp,eax
  414ba0:	dec    esi
  414ba1:	sahf   
  414ba2:	loop   0x414bed
  414ba4:	icebp  
  414ba5:	xor    BYTE PTR [ecx+0x74],al
  414ba8:	ds aas 
  414baa:	jmp    0xdcdc:0x51926646
  414bb1:	sub    eax,0x1ab7cd1a
  414bb6:	ds pushf 
  414bb8:	int    0x78
  414bba:	add    BYTE PTR [edx],ah
  414bbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bbd:	(bad)  
  414bbe:	fnstsw WORD PTR ds:0xf0421b5b
  414bc4:	mov    ecx,0xbd4c4b98
  414bc9:	pop    ecx
  414bca:	jnp    0x414c44
  414bcc:	add    esi,DWORD PTR [esi-0x6a]
  414bcf:	push   0xfa020def
  414bd4:	or     DWORD PTR [eax+ebp*4-0xf98c7ed],ebp
  414bdb:	(bad)  
  414bdc:	mov    al,0x8
  414bde:	cmp    esi,DWORD PTR [eax+0x2dfc6157]
  414be4:	push   edx
  414be5:	sub    edi,DWORD PTR [esp+ebp*4]
  414be8:	and    BYTE PTR [edi-0x3d747d47],ah
  414bee:	lods   al,BYTE PTR ds:[esi]
  414bef:	leave  
  414bf0:	xchg   edx,eax
  414bf1:	sub    eax,0xcb14db1d
  414bf6:	xor    edi,DWORD PTR [ebx+0x7ab5f887]
  414bfc:	cmp    dl,BYTE PTR ds:0xaa9d8eb7
  414c02:	rcl    DWORD PTR [esi+0xf945f84],cl
  414c08:	pop    edi
  414c09:	in     al,dx
  414c0a:	mov    ebp,DWORD PTR [edx+eax*8+0xa]
  414c0e:	and    al,0x33
  414c10:	pop    eax
  414c11:	jle    0x414bb5
  414c13:	in     eax,dx
  414c14:	sub    edx,ebx
  414c16:	dec    esi
  414c17:	xchg   ebp,eax
  414c18:	mov    DWORD PTR [ebx+0x39985878],esp
  414c1e:	xchg   esp,eax
  414c1f:	fwait
  414c20:	jae    0x414c99
  414c22:	(bad)  
  414c23:	cmp    al,0xa6
  414c25:	dec    esi
  414c26:	repnz popa 
  414c28:	arpl   WORD PTR [eax-0x7a],dx
  414c2b:	adc    DWORD PTR [ecx-0xe194009],ecx
  414c31:	and    al,0xf5
  414c33:	and    DWORD PTR [edi+ebp*8+0x746db4ad],esi
  414c3a:	inc    ebp
  414c3b:	sub    eax,0x2f0cfc5
  414c40:	enter  0xbe8b,0x8c
  414c44:	aad    0x7b
  414c46:	mov    ebp,0xa8dead22
  414c4b:	imul   DWORD PTR [edi+eax*1+0x62411f86]
  414c52:	add    dh,0x3c
  414c55:	mov    eax,ds:0xa1d8cf24
  414c5a:	dec    esi
  414c5b:	pop    esp
  414c5c:	push   ebp
  414c5d:	cmp    al,0x52
  414c5f:	retf   0xf790
  414c62:	test   eax,0xcac96a8e
  414c67:	mov    dl,0x5f
  414c69:	cmp    DWORD PTR [esi+0x55ab9b63],ecx
  414c6f:	test   eax,0xef6834c9
  414c74:	jns    0x414c5f
  414c76:	jne    0x414c70
  414c78:	fs scas al,BYTE PTR es:[edi]
  414c7a:	or     BYTE PTR [edx],cl
  414c7c:	dec    ebx
  414c7d:	scas   eax,DWORD PTR es:[edi]
  414c7e:	mov    ecx,0xe492c212
  414c83:	push   edx
  414c84:	cpuid  
  414c86:	pushf  
  414c87:	rcl    dl,1
  414c89:	or     edx,DWORD PTR [edi-0x6e]
  414c8c:	mov    ds:0x76ed67b2,al
  414c91:	std    
  414c92:	outs   dx,BYTE PTR ds:[esi]
  414c93:	sub    BYTE PTR [ebx-0x70],ah
  414c96:	xchg   DWORD PTR [ecx+0x0],eax
  414c99:	mov    esi,0xe3ad284e
  414c9e:	(bad)  
  414c9f:	and    ah,BYTE PTR [ecx+ecx*8+0x7bc188be]
  414ca6:	jns    0x414ce7
  414ca8:	sub    dl,BYTE PTR [ebp-0x6759dbcf]
  414cae:	and    dl,bl
  414cb0:	dec    ecx
  414cb1:	leave  
  414cb2:	inc    ebp
  414cb3:	push   esi
  414cb4:	and    al,0x4f
  414cb6:	push   0x2c
  414cb8:	or     eax,0x682aec2b
  414cbd:	icebp  
  414cbe:	inc    ebp
  414cbf:	cmp    DWORD PTR [esi],0x6b6a2f11
  414cc5:	mov    bl,0x59
  414cc7:	jmp    0x2aac5287
  414ccc:	xor    ah,BYTE PTR [esi-0x7dad3707]
  414cd2:	dec    ebx
  414cd3:	jge    0x414c9a
  414cd5:	call   0x8c81776c
  414cda:	ret    0xf09a
  414cdd:	xor    bh,ch
  414cdf:	les    eax,FWORD PTR [edx+0x46]
  414ce2:	pop    ecx
  414ce3:	rcl    DWORD PTR [edi+0x67d20858],0xbd
  414cea:	mov    ds:0x261d5984,al
  414cef:	dec    ebx
  414cf0:	fnstsw WORD PTR es:[edi+edi*2-0x44]
  414cf5:	inc    ebx
  414cf6:	test   dl,cl
  414cf8:	repnz push ecx
  414cfa:	test   BYTE PTR [ebx-0x589fcc25],ch
  414d00:	xor    cl,BYTE PTR [edi+0x7]
  414d03:	mov    al,ds:0xebb4d1a3
  414d08:	lock lea ebx,ds:0x2e5c651c
  414d0f:	jmp    0x414ce5
  414d11:	xor    dl,al
  414d13:	ret    
  414d14:	or     BYTE PTR [ebp+0x5a0d7c97],bl
  414d1a:	outs   dx,DWORD PTR ds:[esi]
  414d1b:	mov    esp,0x715a1dd7
  414d20:	pop    esp
  414d21:	aaa    
  414d22:	ds push es
  414d24:	cmp    eax,0x7da21acb
  414d29:	xlat   BYTE PTR ds:[ebx]
  414d2a:	inc    esp
  414d2b:	ins    DWORD PTR es:[edi],dx
  414d2c:	mov    bl,0x92
  414d2e:	sub    cl,BYTE PTR [ebp-0x58088379]
  414d34:	es inc ebx
  414d36:	mov    esp,0x7499e5d1
  414d3b:	xor    ah,bh
  414d3d:	xchg   ebx,eax
  414d3e:	aam    0x7c
  414d40:	retf   0xed4d
  414d43:	cmp    al,0xf3
  414d45:	fmul   st(4),st
  414d47:	mov    ch,0xf3
  414d49:	in     al,dx
  414d4a:	jg     0x414cd7
  414d4c:	test   BYTE PTR [ebx-0x50efff8d],cl
  414d52:	(bad)  
  414d54:	fld    TBYTE PTR [edx-0x64]
  414d57:	pop    edx
  414d58:	mov    al,0xd6
  414d5a:	jge    0x414d58
  414d5c:	sub    eax,0xde35b2c5
  414d61:	push   ebx
  414d62:	retf   0xe871
  414d65:	int    0xff
  414d67:	xchg   esi,eax
  414d68:	retf   
  414d69:	sbb    BYTE PTR [eax],ch
  414d6b:	iret   
  414d6c:	push   0xffffffd2
  414d6e:	mov    edi,0x6928b1aa
  414d73:	outs   dx,DWORD PTR ds:[esi]
  414d74:	ret    
  414d75:	mov    esp,esp
  414d77:	rcr    DWORD PTR [esi-0x1b900ac5],1
  414d7d:	lock shr ebp,0x93
  414d81:	data16 not BYTE PTR [ebp+0x16]
  414d85:	mov    al,0x5d
  414d87:	cli    
  414d88:	pop    ds
  414d89:	xor    bh,BYTE PTR [edi]
  414d8b:	and    eax,0xf0a79f12
  414d90:	inc    esp
  414d91:	aas    
  414d92:	ins    BYTE PTR es:[edi],dx
  414d93:	dec    esp
  414d94:	lods   al,BYTE PTR ds:[esi]
  414d95:	jmp    0xa76db687
  414d9a:	pop    edx
  414d9b:	repz push 0x62
  414d9e:	aas    
  414d9f:	mov    ebx,0x7b68fd4a
  414da4:	xchg   ecx,eax
  414da5:	xlat   BYTE PTR ds:[ebx]
  414da6:	adc    DWORD PTR [esi-0x7d],ebx
  414da9:	jae    0x414dd6
  414dab:	out    0xbb,eax
  414dad:	sub    DWORD PTR ds:0xd487ba3e,esp
  414db3:	rcl    BYTE PTR [ebx+0x75],cl
  414db6:	mov    es,WORD PTR [edi+eax*2]
  414db9:	(bad)  
  414dba:	hlt    
  414dbb:	mov    ah,0xf2
  414dbd:	lock pusha 
  414dbf:	or     DWORD PTR [esi],esp
  414dc1:	fcomip st,st(1)
  414dc3:	add    eax,0xc77af78f
  414dc8:	jle    0x414e15
  414dca:	fsub   DWORD PTR [ecx+0x4329f66f]
  414dd0:	adc    esi,esi
  414dd2:	sbb    BYTE PTR [edx+0x7e],dl
  414dd5:	ss mov edx,0x2ad112da
  414ddb:	xor    ch,BYTE PTR [edx+0x219c2c54]
  414de1:	enter  0xce9c,0xfa
  414de5:	push   ebp
  414de6:	test   ebx,0x92649baa
  414dec:	push   ss
  414ded:	data16 cmp dh,dl
  414df0:	aas    
  414df1:	fnsave [ecx+0x4bcdfd19]
  414df7:	ficom  WORD PTR [esi-0x2a]
  414dfa:	cmp    edx,edx
  414dfc:	xor    BYTE PTR ds:0xf6d803b,0x7
  414e03:	jp     0x414d9c
  414e05:	fsub   DWORD PTR [eax-0x3d4dffb3]
  414e0b:	loope  0x414d90
  414e0d:	inc    edi
  414e0e:	pop    esi
  414e0f:	cmc    
  414e10:	mov    esp,0xd9b64b86
  414e15:	fist   WORD PTR [ebx]
  414e17:	and    eax,0xdbeb4b86
  414e1c:	imul   esi,DWORD PTR [eax+0x26417ce7],0xb46fbe53
  414e26:	addr16 mov bh,0xc4
  414e29:	xor    ah,BYTE PTR [eax-0x3b833caf]
  414e2f:	sbb    al,0x2c
  414e31:	mov    dl,0x75
  414e33:	test   DWORD PTR [edi+0x50],ebp
  414e36:	inc    esi
  414e37:	push   ss
  414e38:	add    eax,0xf3441882
  414e3d:	mov    eax,0x30f4646
  414e42:	adc    ch,bh
  414e44:	sbb    DWORD PTR [ebx-0x2e],0x2ac89d26
  414e4b:	mov    bl,0x34
  414e4d:	pusha  
  414e4e:	push   0x38000e38
  414e53:	loop   0x414e72
  414e55:	shl    BYTE PTR [eax],1
  414e57:	stos   BYTE PTR es:[edi],al
  414e58:	sbb    eax,0x71fbc6b7
  414e5d:	out    dx,eax
  414e5e:	push   es
  414e5f:	push   esi
  414e60:	push   ebp
  414e61:	mov    cl,0x88
  414e63:	mov    edx,0x3e9c6f9a
  414e68:	lds    eax,FWORD PTR [edi]
  414e6a:	imul   ebp,esp,0xffffffd1
  414e6d:	sahf   
  414e6e:	xchg   BYTE PTR [edi-0x26],bh
  414e71:	mov    eax,0xf80d1cb5
  414e76:	std    
  414e77:	add    al,0x99
  414e79:	jecxz  0x414eae
  414e7b:	repnz inc ecx
  414e7d:	push   ebx
  414e7e:	push   eax
  414e7f:	test   ah,0xc2
  414e82:	adc    eax,0xe26ef465
  414e87:	punpckldq mm3,mm3
  414e8a:	int3   
  414e8b:	ret    
  414e8c:	loope  0x414e5f
  414e8e:	dec    ecx
  414e8f:	or     BYTE PTR [edx],cl
  414e91:	arpl   WORD PTR [ebx],di
  414e93:	mov    ecx,DWORD PTR ds:0x3b60413d
  414e99:	inc    eax
  414e9a:	jae    0x414ecb
  414e9c:	pop    ebx
  414e9d:	xchg   BYTE PTR [ecx+edi*2-0x3f],bh
  414ea1:	sti    
  414ea2:	xor    eax,0x178e881f
  414ea7:	dec    esp
  414ea8:	shl    dl,0xea
  414eab:	icebp  
  414eac:	cs sub ch,ah
  414eaf:	inc    esp
  414eb1:	add    BYTE PTR [ebx-0x7b],al
  414eb4:	(bad)  
  414eb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414eb6:	and    ch,BYTE PTR [ebp+0x11]
  414eb9:	push   ebx
  414eba:	and    eax,0x6301b527
  414ebf:	mov    esi,0xe501002
  414ec4:	in     eax,0x75
  414ec6:	shl    BYTE PTR [edi+0x2e9edbb2],cl
  414ecc:	fwait
  414ecd:	pop    ss
  414ece:	je     0x414f33
  414ed0:	loop   0x414ee8
  414ed2:	xchg   ebx,eax
  414ed3:	repnz push esp
  414ed5:	imul   ecx,DWORD PTR [ecx+0x1e17a9b3],0x6a
  414edc:	adc    al,0x5f
  414ede:	jb     0x414f09
  414ee0:	cmp    al,BYTE PTR [edx-0x1d]
  414ee3:	jae    0x414e76
  414ee5:	push   ss
  414ee6:	mov    edi,edx
  414ee8:	stos   BYTE PTR es:[edi],al
  414ee9:	push   cs
  414eea:	call   0xbf79:0x8154412e
  414ef1:	push   eax
  414ef2:	mov    DWORD PTR [ecx],esp
  414ef4:	adc    al,0x6
  414ef6:	jb     0x414ec3
  414ef8:	sub    DWORD PTR [ecx+0x7a3cfdb6],ecx
  414efe:	cli    
  414eff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f00:	xor    eax,0x6fac4a43
  414f05:	jmp    0x72dd9a76
  414f0a:	not    BYTE PTR [ebx-0x41]
  414f0d:	scas   al,BYTE PTR es:[edi]
  414f0e:	push   0x141c657e
  414f13:	sbb    eax,0x661bbe91
  414f18:	(bad)  
  414f19:	out    0x29,eax
  414f1b:	jns    0x414f9c
  414f1d:	lods   al,BYTE PTR ds:[esi]
  414f1e:	xchg   edi,eax
  414f1f:	dec    esi
  414f20:	and    ebp,esi
  414f22:	scas   eax,DWORD PTR es:[edi]
  414f23:	sahf   
  414f24:	std    
  414f25:	xor    ebx,DWORD PTR [edi-0x2b]
  414f28:	inc    esp
  414f29:	call   0x628e:0x51c0c8fe
  414f30:	rcr    DWORD PTR [edx-0x48],cl
  414f33:	sbb    eax,0xd6ab44e
  414f38:	ficom  DWORD PTR [eax+0x40]
  414f3b:	add    eax,0xc7e37bf0
  414f40:	mov    edi,DWORD PTR [eax]
  414f42:	mov    ebx,0xe4a59bef
  414f47:	xchg   esi,eax
  414f48:	mov    ah,0x92
  414f4a:	sbb    BYTE PTR [ebx+0xe],ah
  414f4d:	inc    eax
  414f4e:	dec    edx
  414f4f:	and    BYTE PTR [edx],al
  414f51:	pushf  
  414f52:	sub    BYTE PTR ds:0x65ca4c30,dl
  414f58:	xrelease xchg BYTE PTR [esi+0x5a002a51],dl
  414f5f:	cwde   
  414f60:	mov    ebp,0xa3a072aa
  414f65:	bound  edx,QWORD PTR [ecx+0x24]
  414f68:	pushf  
  414f69:	sbb    BYTE PTR [eax-0x2f73be58],0x50
  414f70:	adc    ah,BYTE PTR [ecx-0x78]
  414f73:	mov    edi,es
  414f75:	xchg   ebx,eax
  414f76:	inc    ebx
  414f77:	xor    eax,0xf14f76db
  414f7c:	add    DWORD PTR [ecx],edi
  414f7e:	xchg   DWORD PTR [edx],eax
  414f80:	push   ds
  414f81:	mov    ebp,0x94fa4636
  414f86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f87:	imul   dl
  414f89:	test   DWORD PTR [esi],0xf817f727
  414f8f:	mov    edx,0xc909a541
  414f94:	call   0xe315:0x5704ad37
  414f9b:	xor    dh,BYTE PTR cs:[esi+0x13a14d51]
  414fa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fa3:	into   
  414fa4:	inc    esp
  414fa5:	pop    ds
  414fa6:	out    dx,al
  414fa7:	xor    eax,0xe386ca02
  414fac:	jb     0x414fae
  414fae:	and    al,0x13
  414fb0:	lahf   
  414fb1:	outs   dx,BYTE PTR ds:[esi]
  414fb2:	mov    ecx,0xe1473a52
  414fb7:	test   eax,eax
  414fb9:	int3   
  414fba:	test   DWORD PTR [ecx],ebx
  414fbc:	xchg   ch,ch
  414fbe:	push   es
  414fbf:	and    al,0x1b
  414fc1:	aaa    
  414fc2:	jae    0x414f4e
  414fc4:	das    
  414fc5:	jl     0x414f52
  414fc7:	scas   al,BYTE PTR es:[edi]
  414fc8:	fadd   QWORD PTR ds:0x702980ef
  414fce:	mov    esp,0x7b4784
  414fd3:	scas   al,BYTE PTR es:[edi]
  414fd4:	and    eax,0x24c552ed
  414fd9:	push   esi
  414fda:	xor    BYTE PTR [esi+0x19],dh
  414fdd:	aaa    
  414fde:	mov    ch,BYTE PTR [edi-0x4514ec38]
  414fe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fe5:	idiv   BYTE PTR [edx]
  414fe7:	scas   al,BYTE PTR es:[edi]
  414fe8:	gs stos DWORD PTR es:[edi],eax
  414fea:	adc    eax,0x5139c2a6
  414fef:	imul   ebp,edx,0x503d8dc7
  414ff5:	ret    0x408b
  414ff8:	addr16 dec ebp
  414ffa:	push   esp
  414ffb:	sti    
  414ffc:	ss popa 
  414ffe:	fbld   TBYTE PTR [esi]
  415000:	sbb    BYTE PTR [edi+0x3608a63e],bh
  415006:	scas   eax,DWORD PTR es:[edi]
  415007:	dec    edi
  415008:	adc    ebp,eax
  41500a:	fsubr  QWORD PTR ss:[edx+0x3c1a5f79]
  415011:	sub    BYTE PTR [eax-0x31],al
  415014:	pop    ebp
  415015:	and    eax,0x47d49571
  41501a:	adc    ecx,DWORD PTR [esi+0x1653db75]
  415020:	mov    bh,0x3c
  415022:	ja     0x415019
  415024:	jmp    0x414fc6
  415026:	sub    eax,0x38a36252
  41502b:	cmp    al,0x3d
  41502d:	or     al,0x6b
  41502f:	fst    QWORD PTR [eax*4-0x6a8801f2]
  415036:	xchg   esp,eax
  415037:	xchg   ecx,eax
  415038:	test   dl,ah
  41503a:	mov    eax,0x5f2bb91
  41503f:	out    0xd5,eax
  415041:	add    al,BYTE PTR [esi+0x28]
  415044:	sub    dh,BYTE PTR [edi+0x31dcf427]
  41504a:	std    
  41504b:	popf   
  41504c:	mov    ebx,0x886e4a7
  415051:	xor    BYTE PTR [ecx],dl
  415053:	lahf   
  415054:	ins    BYTE PTR es:[edi],dx
  415055:	dec    ebx
  415056:	sub    eax,esp
  415058:	mov    WORD PTR [ebx],gs
  41505a:	xchg   DWORD PTR [ebx+0x1],ebp
  41505d:	lods   al,BYTE PTR ds:[esi]
  41505e:	mov    DWORD PTR [eax],0x210bc854
  415064:	addr16 jno 0x41503f
  415067:	pop    esi
  415068:	cmovo  ebp,DWORD PTR [edx+0x227020d2]
  41506f:	dec    edi
  415070:	test   BYTE PTR [edx-0x7bb9f6bb],0xe6
  415077:	sti    
  415078:	mov    ah,0xb6
  41507a:	aad    0xee
  41507c:	push   es
  41507d:	pop    ebx
  41507e:	mov    dh,0x49
  415080:	scas   al,BYTE PTR es:[edi]
  415081:	cli    
  415082:	loopne 0x4150de
  415084:	int    0x6b
  415086:	adc    eax,DWORD PTR [ecx-0x6e02df0d]
  41508c:	ret    
  41508d:	sahf   
  41508e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41508f:	arpl   WORD PTR [edx],cx
  415091:	push   es
  415092:	ins    BYTE PTR es:[edi],dx
  415093:	lahf   
  415094:	mov    ebx,0x370a0ba3
  415099:	ret    
  41509a:	inc    ebx
  41509b:	aaa    
  41509c:	outs   dx,DWORD PTR ds:[esi]
  41509d:	mov    bh,0x9
  41509f:	cmp    ah,BYTE PTR [esi-0x4f587c7e]
  4150a5:	xchg   ebx,eax
  4150a6:	lock neg BYTE PTR [ebx+0x3]
  4150aa:	push   ebx
  4150ab:	frndint 
  4150ad:	mov    edx,0x581c2533
  4150b2:	inc    edx
  4150b3:	jbe    0x415036
  4150b5:	repz jle 0x415051
  4150b8:	lea    esi,[ebp-0xc4d0383]
  4150be:	(bad)  
  4150bf:	in     al,dx
  4150c0:	call   0xf70e7074
  4150c5:	sub    esi,DWORD PTR [ebx+0x49d814fb]
  4150cb:	add    ebx,ebp
  4150cd:	lods   eax,DWORD PTR ds:[esi]
  4150ce:	cmp    DWORD PTR [esi-0x3],ecx
  4150d1:	ror    BYTE PTR [edx],0x16
  4150d4:	das    
  4150d5:	rol    BYTE PTR [eax],1
  4150d7:	(bad)  
  4150d8:	push   ebp
  4150d9:	jno    0x415079
  4150db:	leave  
  4150dc:	pushf  
  4150dd:	mov    ebx,0x44aea99d
  4150e2:	pop    es
  4150e3:	sub    bh,BYTE PTR [ecx-0x68]
  4150e6:	test   al,0xb9
  4150e8:	push   esp
  4150e9:	mov    WORD PTR [edi-0x40d499f1],?
  4150ef:	std    
  4150f0:	std    
  4150f1:	pop    ebx
  4150f2:	mov    esp,0x4f06f3e3
  4150f7:	pop    eax
  4150f8:	fs loop 0x41511f
  4150fb:	lods   eax,DWORD PTR ds:[esi]
  4150fc:	pushf  
  4150fd:	in     eax,dx
  4150fe:	or     eax,0x40272695
  415103:	push   edi
  415104:	iret   
  415105:	adc    BYTE PTR [ebx],ch
  415107:	daa    
  415108:	imul   esi,DWORD PTR [ecx+0x43],0x63970376
  41510f:	mov    DWORD PTR ds:0x621,edi
  415114:	mov    ch,0x4a
  415116:	dec    ecx
  415117:	pop    edi
  415118:	ja     0x415118
  41511a:	ds dec esp
  41511c:	cmp    BYTE PTR [esi],cl
  41511e:	jns    0x415165
  415120:	loopne 0x415146
  415122:	es push eax
  415124:	xchg   esi,eax
  415125:	sbb    DWORD PTR [ebx],ecx
  415127:	stos   BYTE PTR es:[edi],al
  415128:	rcr    DWORD PTR [eax+0x3e],1
  41512b:	stc    
  41512c:	cmp    al,dl
  41512e:	or     DWORD PTR [eax+0x26],ebp
  415131:	aas    
  415132:	push   edx
  415133:	rcl    BYTE PTR [ecx-0x17],0x8
  415137:	leave  
  415138:	ins    BYTE PTR es:[edi],dx
  415139:	(bad)  
  41513a:	pusha  
  41513b:	xor    ch,ah
  41513d:	inc    ecx
  41513e:	fsub   st,st(4)
  415140:	daa    
  415141:	das    
  415142:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415143:	mov    ecx,0xb99c9694
  415148:	(bad)  
  415149:	sbb    BYTE PTR [ebx-0x2c42db5a],bl
  41514f:	stos   BYTE PTR es:[edi],al
  415150:	mov    bh,0xf3
  415152:	add    al,0x1c
  415154:	cmp    edx,DWORD PTR [edi]
  415156:	hlt    
  415157:	adc    DWORD PTR [esi-0x2b],esi
  41515a:	sahf   
  41515b:	push   es
  41515c:	pop    ecx
  41515d:	out    0x38,eax
  41515f:	push   ebx
  415160:	daa    
  415161:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415162:	lahf   
  415163:	push   esp
  415164:	add    edi,DWORD PTR [edi]
  415166:	imul   ecx,DWORD PTR [ebx-0x27],0x1c62b3d9
  41516d:	and    esi,ebx
  41516f:	push   0xffffff82
  415171:	and    al,BYTE PTR [esi+0x1e93ec14]
  415177:	jge    0x415151
  415179:	test   eax,0x7febca93
  41517e:	fdiv   QWORD PTR [esi+eax*4]
  415181:	add    ebp,DWORD PTR [edi-0x6aba5947]
  415187:	add    BYTE PTR [ebp-0x4e],bh
  41518a:	ret    0xe630
  41518d:	cld    
  41518e:	sub    al,BYTE PTR [esi+ebp*4]
  415191:	mov    ecx,0x45fa5d28
  415196:	cmp    esi,ebx
  415198:	sti    
  415199:	sbb    DWORD PTR [ecx+0xd],0xb5e8047c
  4151a0:	leave  
  4151a1:	js     0x4151bb
  4151a3:	cs dec edx
  4151a5:	fimul  DWORD PTR [ecx]
  4151a7:	xchg   edx,eax
  4151a8:	jo     0x41515d
  4151aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151ab:	ret    
  4151ac:	arpl   WORD PTR [edx+0x7b2647b2],si
  4151b2:	(bad)  
  4151b3:	sub    al,0xd7
  4151b5:	dec    ebx
  4151b6:	sbb    ah,BYTE PTR [ebx+edi*1-0x29210971]
  4151bd:	(bad)  
  4151be:	mov    edx,0x38e8a31b
  4151c3:	into   
  4151c4:	add    BYTE PTR [eax+esi*4-0x234bd9f0],0xed
  4151cc:	pushf  
  4151cd:	mov    cl,0x1a
  4151cf:	push   ecx
  4151d0:	pop    edx
  4151d1:	mov    ds:0x9cb1bf06,al
  4151d6:	push   ebp
  4151d7:	mov    edi,DWORD PTR [ebx-0x63]
  4151da:	jmp    0x415251
  4151dc:	sub    bh,0xd1
  4151df:	xchg   ecx,eax
  4151e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151e1:	add    al,0x15
  4151e3:	fistp  QWORD PTR [esi]
  4151e5:	cmp    cl,BYTE PTR [edi+0x5]
  4151e8:	cdq    
  4151e9:	sti    
  4151ea:	mov    DWORD PTR [ebx+0x19],edi
  4151ed:	adc    bh,al
  4151ef:	ss iret 
  4151f1:	call   0x8aab:0x4472e22c
  4151f8:	xchg   BYTE PTR [edi-0x100c46aa],bl
  4151fe:	int3   
  4151ff:	xchg   ecx,eax
  415200:	inc    ecx
  415201:	pop    esp
  415202:	sti    
  415203:	addr16 mov ah,0xc3
  415206:	imul   edx,DWORD PTR [edx+eax*2],0xe250386c
  41520d:	cld    
  41520e:	mov    ds,WORD PTR ds:0x7503727
  415214:	je     0x4151c0
  415216:	jns    0x41522a
  415218:	cmp    esi,DWORD PTR [edi]
  41521a:	(bad)  
  41521b:	test   BYTE PTR ds:[ecx-0x74],al
  41521f:	cmp    ah,ch
  415221:	les    ebx,FWORD PTR [edx+0x7847e90f]
  415227:	int    0xb0
  415229:	ss (bad) 
  41522c:	cmp    ecx,DWORD PTR [ecx]
  41522e:	stc    
  41522f:	into   
  415230:	dec    esp
  415231:	mov    DWORD PTR [ecx],esi
  415233:	jb     0x4151bd
  415235:	mov    ?,esp
  415237:	in     eax,dx
  415238:	pushf  
  415239:	jp     0x415238
  41523b:	mov    ds:0xae97d5e,eax
  415240:	sbb    al,BYTE PTR ds:[esi]
  415243:	lds    esi,FWORD PTR [edi-0x4]
  415246:	and    dh,BYTE PTR [ebp+0x1]
  415249:	fsubr  QWORD PTR [ebx]
  41524b:	jmp    0x61e2922a
  415250:	inc    edx
  415251:	jne    0x415241
  415253:	push   edx
  415254:	rcr    bh,0xa
  415257:	icebp  
  415258:	inc    esp
  415259:	es mov ebx,0xd6dd4c6
  41525f:	mov    edx,0x787cf0b
  415264:	dec    esp
  415265:	xor    dl,BYTE PTR [edi+0x69]
  415268:	inc    edx
  415269:	adc    DWORD PTR [edi],eax
  41526b:	jecxz  0x41522f
  41526d:	dec    esi
  41526e:	aad    0x4a
  415270:	js     0x41522e
  415272:	jne    0x415231
  415274:	popa   
  415275:	in     eax,0xda
  415277:	mov    dl,0x57
  415279:	jnp    0x4152d2
  41527b:	mov    ah,0x23
  41527d:	in     eax,dx
  41527e:	pushf  
  41527f:	pop    edx
  415280:	cmp    ebx,DWORD PTR [esi]
  415282:	or     DWORD PTR [eax],ebp
  415284:	pop    esp
  415285:	retf   0x29f
  415288:	xor    al,0x83
  41528a:	mov    dl,0x8d
  41528c:	test   edi,edi
  41528e:	ds add esp,0x2d
  415292:	mov    edi,0x4772a493
  415297:	mov    WORD PTR [ebx],?
  415299:	fsubr  QWORD PTR [ebx]
  41529b:	lock shl DWORD PTR [edx+0x323a8180],1
  4152a2:	jo     0x41531a
  4152a4:	leave  
  4152a5:	push   es
  4152a6:	adc    eax,0x67f0271f
  4152ab:	in     eax,dx
  4152ac:	(bad)
  4152b0:	call   0x2e25:0x99154f69
  4152b7:	sub    al,0xc
  4152b9:	icebp  
  4152ba:	in     eax,dx
  4152bb:	push   eax
  4152bc:	mul    DWORD PTR [ecx+ebx*8+0x2285d2e7]
  4152c3:	jg     0x415340
  4152c5:	fadd   QWORD PTR [ecx+0x54fab894]
  4152cb:	aad    0x72
  4152cd:	sbb    al,0x19
  4152cf:	mov    bl,0x98
  4152d1:	push   ss
  4152d2:	imul   esp,esi,0x4a
  4152d5:	out    dx,eax
  4152d6:	sub    ebx,edi
  4152d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152d9:	clc    
  4152da:	ss xchg esi,eax
  4152dc:	imul   ebx,DWORD PTR [eax-0x2b0e5719],0x41
  4152e3:	fsub   QWORD PTR [eax]
  4152e5:	in     al,0xb9
  4152e7:	outs   dx,DWORD PTR ds:[esi]
  4152e8:	ds out 0x6d,al
  4152eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152ec:	sbb    DWORD PTR ds:[ebp+0x3140ac16],0xffffff83
  4152f4:	out    dx,eax
  4152f5:	fldenv [ebp-0x78]
  4152f8:	lock xchg ecx,eax
  4152fa:	xchg   ecx,eax
  4152fb:	inc    eax
  4152fc:	mov    ch,0x49
  4152fe:	add    BYTE PTR [ebx],ch
  415300:	mov    esi,0x40cb4de8
  415305:	or     DWORD PTR [ebx+0x6acba445],ebp
  41530b:	inc    ebx
  41530c:	mov    cl,0x22
  41530e:	adc    DWORD PTR [edx+0x6a019714],esi
  415314:	sar    DWORD PTR [eax],1
  415316:	mul    BYTE PTR [eax]
  415318:	mov    ds:0x3cb8c4c0,al
  41531d:	jge    0x415307
  41531f:	sbb    dh,BYTE PTR [ecx-0x4219fc9c]
  415325:	fucom  st(0)
  415327:	into   
  415328:	pop    ebp
  415329:	push   ebx
  41532a:	mov    ecx,0x65b6039f
  41532f:	jmp    0xf719:0x58d04a99
  415336:	aam    0xb1
  415338:	jo     0x4152cb
  41533a:	cwde   
  41533b:	es js  0x41538e
  41533e:	sub    al,BYTE PTR [ecx-0xc58796f]
  415344:	aas    
  415345:	or     ah,BYTE PTR [eax-0x52f00a4c]
  41534b:	aam    0xcf
  41534d:	sbb    eax,0x50c3bcf
  415352:	(bad)  
  415353:	ror    ah,1
  415355:	and    al,0x4a
  415357:	les    esp,FWORD PTR [edi+esi*1]
  41535a:	repnz xor al,0x38
  41535d:	jp     0x4153a1
  41535f:	inc    esp
  415360:	out    dx,al
  415361:	(bad)  
  415362:	sbb    eax,0xcf60e4e
  415367:	and    DWORD PTR [edx-0x193c69a1],edx
  41536d:	pop    ebp
  41536e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41536f:	push   ss
  415370:	cwde   
  415371:	enter  0x664e,0x94
  415375:	mov    ebp,0xa884de15
  41537a:	ins    DWORD PTR es:[edi],dx
  41537b:	fst    QWORD PTR [ebx+0x64]
  41537e:	ror    DWORD PTR [ebp-0x44],1
  415381:	and    DWORD PTR [ebx-0x4],edi
  415384:	pop    esp
  415385:	test   DWORD PTR ds:0xf8397df6,edi
  41538b:	push   ebp
  41538c:	out    0xd1,eax
  41538e:	test   eax,0xd34ee832
  415393:	pop    ss
  415394:	je     0x415375
  415396:	out    0x3b,eax
  415398:	shr    BYTE PTR [ecx+0x66],cl
  41539b:	push   cs
  41539c:	pushf  
  41539d:	cmp    DWORD PTR ds:0x348d08af,edx
  4153a3:	cmc    
  4153a4:	inc    edx
  4153a5:	leave  
  4153a6:	xor    dh,BYTE PTR [edi]
  4153a8:	cmp    eax,0x26
  4153ab:	rol    esi,1
  4153ad:	int    0x7c
  4153af:	mov    esi,0x17b17d2e
  4153b4:	das    
  4153b5:	jns    0x415435
  4153b7:	mov    ch,0x90
  4153b9:	jge    0x4153ae
  4153bb:	test   al,0xc7
  4153bd:	sub    DWORD PTR fs:[edi+edi*8+0x505a601a],ecx
  4153c5:	mov    esi,0x203db3a6
  4153ca:	std    
  4153cb:	dec    edi
  4153cc:	jge    0x4153d6
  4153ce:	(bad)  
  4153cf:	xor    BYTE PTR [ebp-0x7b],ah
  4153d2:	(bad)  
  4153d3:	loop   0x4153ed
  4153d5:	call   0x5bdd5afc
  4153da:	jnp    0x4153dc
  4153dc:	(bad)  [eax]
  4153de:	xchg   dh,al
  4153e0:	xchg   ebp,eax
  4153e1:	xchg   edx,eax
  4153e2:	icebp  
  4153e3:	push   ss
  4153e4:	loope  0x415430
  4153e6:	mov    fs,WORD PTR [eax+0x2b99d964]
  4153ec:	call   0x60698b8e
  4153f1:	jge    0x4153cc
  4153f3:	mov    ds:0x35aadbc,al
  4153f8:	adc    eax,0x52f2646e
  4153fd:	inc    DWORD PTR [edx+ebx*1-0x4b]
  415401:	mov    dh,0x48
  415403:	mov    ecx,eax
  415405:	lock push ds
  415407:	neg    BYTE PTR [edx*8-0x252f460d]
  41540e:	and    al,0x1b
  415410:	mov    ebx,0xa84607e
  415415:	cwde   
  415416:	arpl   WORD PTR [edx+0x58cf28c2],bx
  41541c:	(bad)  
  41541e:	loop   0x41547a
  415420:	mov    edx,0xae2f4001
  415425:	cld    
  415426:	push   esi
  415427:	cmp    eax,0x3aa720d8
  41542c:	pop    ecx
  41542d:	sbb    eax,0xd1075c8f
  415432:	push   es
  415433:	aaa    
  415434:	pop    eax
  415435:	jae    0x415469
  415437:	and    bl,BYTE PTR [ebp+0x33]
  41543a:	mov    ch,0xfb
  41543c:	xor    ebp,eax
  41543e:	scas   eax,DWORD PTR es:[edi]
  41543f:	rol    esi,1
  415441:	mov    dh,0x25
  415443:	(bad)  
  415444:	outs   dx,BYTE PTR ds:[esi]
  415445:	push   esp
  415446:	not    ebp
  415448:	out    0x84,eax
  41544a:	into   
  41544b:	jp     0x415432
  41544d:	ins    BYTE PTR es:[edi],dx
  41544e:	(bad)  
  415450:	iret   
  415451:	xchg   edi,eax
  415452:	mov    ah,0xc1
  415454:	push   esp
  415455:	mov    ebx,0xfcfaec96
  41545a:	fstp   DWORD PTR [edi]
  41545c:	getsec 
  41545e:	(bad)  [edi+ecx*1-0x1bfd9c5c]
  415465:	jp     0x415447
  415467:	inc    edi
  415468:	iret   
  415469:	adc    BYTE PTR [ecx-0x2f],0xa0
  41546d:	push   0x9dac46b5
  415472:	aam    0x44
  415474:	test   al,0xf8
  415476:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415477:	xor    eax,0xa5a310dd
  41547c:	pusha  
  41547d:	xchg   ebp,eax
  41547e:	fst    DWORD PTR [edx+0x181f3f58]
  415484:	jmp    0x6a9b:0xe5974fdc
  41548b:	loop   0x415488
  41548d:	sbb    edi,DWORD PTR [esi+eax*2]
  415490:	xchg   DWORD PTR [edx],edi
  415492:	sar    DWORD PTR [esi-0x36],0xdc
  415496:	pop    ebp
  415497:	mov    ebx,0xbcb3f5d5
  41549c:	(bad)  
  41549d:	or     DWORD PTR [ebp-0x1a8378b4],edi
  4154a3:	xor    al,0xcf
  4154a5:	cmp    eax,DWORD PTR [edx]
  4154a7:	scas   eax,DWORD PTR es:[edi]
  4154a8:	add    DWORD PTR [ebp+0x62],ecx
  4154ab:	sti    
  4154ac:	pop    eax
  4154ad:	addr16 test eax,0x3c395015
  4154b3:	inc    esi
  4154b4:	sahf   
  4154b5:	mov    ch,0x8f
  4154b7:	sub    eax,0xc31bd4d2
  4154bc:	out    dx,al
  4154bd:	cmp    dl,BYTE PTR [eax-0x154a1141]
  4154c3:	mov    ecx,0x51007e4
  4154c8:	cld    
  4154c9:	inc    eax
  4154ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154cb:	addr16 lahf 
  4154cd:	stos   BYTE PTR es:[edi],al
  4154ce:	clc    
  4154cf:	push   cs
  4154d0:	pop    es
  4154d1:	pop    ds
  4154d2:	pop    ebx
  4154d3:	je     0x4154ed
  4154d5:	sbb    al,0xf2
  4154d7:	cmc    
  4154d8:	ins    BYTE PTR es:[edi],dx
  4154d9:	lods   al,BYTE PTR ds:[esi]
  4154da:	push   es
  4154db:	repz scas eax,DWORD PTR es:[edi]
  4154dd:	in     al,0x64
  4154df:	ror    ebx,1
  4154e1:	jecxz  0x41549b
  4154e3:	inc    edi
  4154e4:	mov    bl,0xae
  4154e6:	xchg   edx,eax
  4154e7:	ror    DWORD PTR gs:[esi+0x91305aa],cl
  4154ee:	test   DWORD PTR [eax],eax
  4154f0:	mov    ebp,0xd6782eb5
  4154f5:	hlt    
  4154f6:	(bad)  
  4154f7:	lea    edi,[edx-0x704a5057]
  4154fd:	xor    DWORD PTR [esp+ecx*2],0x24
  415501:	lahf   
  415502:	sahf   
  415503:	xchg   esp,eax
  415504:	xchg   ebx,eax
  415505:	sub    ebx,DWORD PTR [ecx-0x14dafc02]
  41550b:	sbb    ebp,edi
  41550d:	shld   DWORD PTR [edi+eax*4],ecx,cl
  415511:	retf   
  415512:	lock push cs
  415514:	fldln2 
  415516:	out    0x12,eax
  415518:	mov    es,WORD PTR [edi+0x2eb16256]
  41551e:	mov    eax,0xdf08f6ec
  415523:	inc    eax
  415524:	imul   ecx,DWORD PTR [ecx+ecx*4],0xffffffb8
  415528:	dec    edi
  415529:	dec    eax
  41552a:	sub    ah,cl
  41552c:	ret    0xa8b3
  41552f:	ja     0x415559
  415531:	push   ecx
  415532:	fsub   QWORD PTR [ebx+0xd]
  415535:	push   es
  415536:	test   dl,0x1a
  415539:	shl    BYTE PTR [ebx],0x1
  41553c:	cmp    ebp,DWORD PTR [ebx]
  41553e:	les    ebx,FWORD PTR [ebp+0x2295820d]
  415544:	in     eax,dx
  415545:	outs   dx,BYTE PTR ds:[esi]
  415546:	sub    esi,DWORD PTR [esi+0x3ed50a18]
  41554c:	div    DWORD PTR [ecx-0x69ed8509]
  415552:	mov    ecx,gs
  415554:	sbb    al,0x64
  415556:	jns    0x415533
  415558:	mov    ecx,0x5550bf93
  41555d:	dec    edx
  41555e:	mov    edi,0x1450517c
  415563:	xchg   esi,eax
  415564:	pop    edi
  415565:	mov    DWORD PTR [ebx+0x6b358b01],ecx
  41556b:	push   edx
  41556c:	int3   
  41556d:	jl     0x415551
  41556f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415570:	test   al,0xf2
  415572:	sbb    al,0x46
  415574:	aam    0xd5
  415576:	pusha  
  415577:	and    ah,BYTE PTR [edi]
  415579:	mov    ebp,DWORD PTR [edx+0x6cd1b518]
  41557f:	dec    ecx
  415580:	add    eax,0x4d35bed0
  415585:	(bad)  
  415586:	fstp   TBYTE PTR [edi+0x73]
  415589:	mov    al,0xbb
  41558b:	cwde   
  41558c:	and    ch,BYTE PTR [eax+0x28]
  41558f:	stos   DWORD PTR es:[edi],eax
  415590:	into   
  415591:	and    DWORD PTR [ecx],esi
  415593:	fldpi  
  415595:	push   ss
  415596:	mov    ah,0x6
  415598:	or     al,dh
  41559a:	fdivp  st(6),st
  41559c:	mov    ch,0xbd
  41559e:	pop    esp
  41559f:	aam    0x9e
  4155a1:	shl    DWORD PTR ds:0x43eda8e4,0xf5
  4155a8:	mov    dl,0xbc
  4155aa:	pop    ebp
  4155ab:	outs   dx,DWORD PTR ds:[esi]
  4155ac:	loop   0x415566
  4155ae:	lods   eax,DWORD PTR ds:[esi]
  4155af:	lahf   
  4155b0:	rcl    DWORD PTR [edx+0x6b01b46],0xed
  4155b7:	outs   dx,DWORD PTR ds:[esi]
  4155b8:	add    ah,ah
  4155ba:	stos   BYTE PTR es:[edi],al
  4155bb:	mov    edx,0xfefa1817
  4155c0:	inc    ebx
  4155c1:	sbb    ch,bh
  4155c3:	(bad)  
  4155c4:	out    dx,eax
  4155c5:	icebp  
  4155c6:	xchg   esi,eax
  4155c7:	cdq    
  4155c8:	arpl   WORD PTR [esi+0xea379fe],bp
  4155ce:	push   ebp
  4155cf:	int3   
  4155d0:	test   eax,0x73af5c74
  4155d5:	clc    
  4155d6:	fsubr  st,st(1)
  4155d8:	data16 mov ch,0x85
  4155db:	fs dec ebx
  4155dd:	fist   WORD PTR [ebp+0x7a061245]
  4155e3:	lahf   
  4155e4:	data16 into 
  4155e6:	add    edx,ebx
  4155e8:	cwde   
  4155e9:	xlat   BYTE PTR ds:[ebx]
  4155ea:	and    cl,cl
  4155ec:	dec    eax
  4155ed:	inc    ecx
  4155ee:	or     edi,DWORD PTR [esi+0x1dbf0084]
  4155f4:	mov    DWORD PTR [ecx+ecx*2-0x4a0675ed],ecx
  4155fb:	pop    ebx
  4155fc:	aad    0xb3
  4155fe:	push   es
  4155ff:	push   ds
  415600:	sbb    BYTE PTR [edi],dl
  415602:	pop    edi
  415603:	sahf   
  415604:	mov    esp,0xbff82bb0
  415609:	stos   BYTE PTR es:[edi],al
  41560a:	loope  0x41559b
  41560c:	mov    esp,esi
  41560e:	ffree  st(2)
  415610:	fild   WORD PTR [esi+ebx*1+0x351d115c]
  415617:	cmp    BYTE PTR [edi-0x2dae5300],ah
  41561d:	lods   eax,DWORD PTR gs:[esi]
  41561f:	mov    dl,0xb1
  415621:	inc    esi
  415622:	inc    edi
  415623:	cmp    cl,dh
  415625:	es out 0xb8,al
  415628:	addr16 enter 0x49a7,0xf5
  41562d:	xchg   ebp,eax
  41562e:	int    0xe3
  415630:	push   esi
  415631:	sub    ebp,0xffffffe6
  415634:	pop    ss
  415635:	adc    al,0xb7
  415637:	xchg   bl,ah
  415639:	fdivp  st(5),st
  41563b:	test   DWORD PTR [ecx+eiz*1-0x79],ebp
  41563f:	add    eax,0x3a491e8
  415644:	jmp    0x72690920
  415649:	push   ebp
  41564a:	shr    DWORD PTR [ebx],1
  41564c:	call   0x9434:0xe48b117c
  415653:	mov    ds:0x2f330310,eax
  415658:	sbb    DWORD PTR [ecx+0x90324b3],ebx
  41565e:	in     eax,dx
  41565f:	repz in eax,dx
  415661:	inc    ebp
  415662:	in     al,0xc7
  415664:	iret   
  415665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415666:	adc    BYTE PTR [edx+esi*4-0x2a],cl
  41566a:	push   esp
  41566b:	mov    esp,0xe3adc2ea
  415670:	(bad)  
  415671:	mov    ebp,0xb3ee1acd
  415676:	icebp  
  415677:	cmc    
  415678:	pop    ecx
  415679:	xchg   BYTE PTR [esi+0x6f],cl
  41567c:	icebp  
  41567d:	js     0x415635
  41567f:	cdq    
  415680:	inc    ecx
  415681:	add    DWORD PTR [ebp-0x6],esp
  415684:	pop    ds
  415685:	mov    eax,0xa8d1e99
  41568a:	popa   
  41568b:	in     eax,dx
  41568c:	ss (bad) 
  41568e:	jl     0x415633
  415690:	out    dx,eax
  415691:	jns    0x415653
  415693:	and    eax,0xf76612fa
  415698:	mov    eax,0x942f8bca
  41569d:	stc    
  41569e:	jbe    0x4156c1
  4156a0:	mov    al,ds:0xa30c1b88
  4156a5:	sub    ch,0xc4
  4156a8:	or     al,0xe9
  4156aa:	fwait
  4156ab:	or     ch,dh
  4156ad:	rol    bh,0x8f
  4156b0:	stos   DWORD PTR es:[edi],eax
  4156b1:	stos   BYTE PTR es:[edi],al
  4156b2:	icebp  
  4156b3:	mov    esp,0xa430da27
  4156b8:	sub    DWORD PTR [ecx],ebx
  4156ba:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4156bc:	addr16 je 0x41571b
  4156bf:	dec    ecx
  4156c0:	jp     0x41572d
  4156c2:	inc    edx
  4156c3:	inc    esp
  4156c4:	cs dec esp
  4156c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156c7:	adc    cl,al
  4156c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156ca:	cmp    BYTE PTR [edx+0x38],dh
  4156cd:	mov    ds:0x254883f2,eax
  4156d2:	cmp    eax,0x6cac5550
  4156d7:	std    
  4156d8:	mov    ch,BYTE PTR es:[eax-0x74]
  4156dc:	lahf   
  4156dd:	inc    ecx
  4156de:	ins    DWORD PTR es:[edi],dx
  4156df:	sbb    BYTE PTR [edi-0x53c260f6],al
  4156e5:	ds adc eax,0x602b073e
  4156eb:	and    eax,0x75192fa
  4156f0:	pop    esi
  4156f1:	fwait
  4156f2:	(bad)  
  4156f3:	cmp    ebp,eax
  4156f5:	iret   
  4156f6:	cld    
  4156f7:	(bad)  
  4156f8:	mov    dh,0xf0
  4156fa:	test   al,0x6b
  4156fc:	push   eax
  4156fd:	cdq    
  4156fe:	enter  0x6811,0x1e
  415702:	jb     0x4156cc
  415704:	call   FWORD PTR [edx+ebx*1]
  415707:	inc    esi
  415708:	cld    
  415709:	inc    esi
  41570a:	(bad)  
  41570b:	into   
  41570c:	xchg   BYTE PTR [ebx],bh
  41570e:	rcr    BYTE PTR [ecx-0x563979e2],cl
  415714:	cmp    ch,al
  415716:	dec    eax
  415717:	dec    ebp
  415718:	nop
  415719:	gs aad 0x19
  41571c:	add    DWORD PTR [ebx],edx
  41571e:	lea    ecx,[edx-0x7149c46d]
  415724:	adc    eax,0xa4bec489
  415729:	pop    ebp
  41572a:	pop    es
  41572b:	cmp    DWORD PTR [ecx-0x31],edx
  41572e:	add    eax,0x349b6a26
  415733:	push   edx
  415734:	dec    ebp
  415735:	pop    ecx
  415736:	or     esi,DWORD PTR [edi-0x17ea9bcc]
  41573c:	sbb    eax,0xb5d299dd
  415741:	pop    ebx
  415742:	mov    ah,0x9f
  415744:	nop
  415745:	mov    DWORD PTR cs:[ecx-0x20],eax
  415749:	and    al,0x9a
  41574b:	and    BYTE PTR [esi],ch
  41574d:	imul   ebx,DWORD PTR [esi],0x20
  415750:	or     eax,0xc32061a7
  415755:	arpl   WORD PTR [ecx],sp
  415757:	dec    eax
  415758:	mov    edx,0x3e1cfe2c
  41575d:	clc    
  41575e:	loope  0x4157da
  415760:	jp     0x415782
  415762:	cli    
  415763:	push   es
  415764:	pushf  
  415765:	adc    edi,0xffffff93
  415768:	mov    bl,0x87
  41576a:	hlt    
  41576b:	test   DWORD PTR [ebx+0x7fcc12f9],eax
  415771:	cmp    DWORD PTR [eax-0x32],ebx
  415774:	or     al,0x42
  415776:	push   0xffffff8c
  415778:	mov    al,0xeb
  41577a:	enter  0xaaa6,0xb4
  41577e:	je     0x4157bf
  415780:	mov    ds:0xa27419d5,al
  415785:	adc    ebp,0xeb486cea
  41578b:	scas   eax,DWORD PTR es:[edi]
  41578c:	daa    
  41578d:	add    DWORD PTR [ecx-0x40],edi
  415790:	in     eax,dx
  415791:	xchg   esi,eax
  415792:	psllq  mm2,0x4b
  415796:	or     BYTE PTR [esi],0x1b
  415799:	adc    DWORD PTR [ebp-0x2b],edx
  41579c:	(bad)  
  41579e:	popa   
  41579f:	loop   0x41580c
  4157a1:	jae    0x415809
  4157a3:	jne    0x4157cf
  4157a5:	or     dh,BYTE PTR [esi-0x4b]
  4157a8:	dec    ah
  4157aa:	shl    BYTE PTR [esi-0x54],0x2a
  4157ae:	enter  0xcf66,0x7
  4157b2:	xchg   esp,eax
  4157b3:	sbb    BYTE PTR [esi],bl
  4157b5:	adc    esi,DWORD PTR [edx-0x6a19a222]
  4157bb:	fs dec ecx
  4157bd:	je     0x41574c
  4157bf:	iret   
  4157c0:	cdq    
  4157c1:	dec    ebx
  4157c2:	aam    0xef
  4157c4:	rcr    bh,1
  4157c6:	out    dx,eax
  4157c7:	cmc    
  4157c8:	pop    ebx
  4157c9:	js     0x415825
  4157cb:	cli    
  4157cc:	dec    ecx
  4157cd:	push   cs
  4157ce:	jo     0x4157d8
  4157d0:	adc    edx,esp
  4157d2:	mov    al,0xfe
  4157d4:	sti    
  4157d5:	out    0xb3,eax
  4157d7:	and    esi,eax
  4157d9:	std    
  4157da:	or     edi,DWORD PTR [esi-0x7b9732e5]
  4157e0:	ret    0x1e68
  4157e3:	out    dx,eax
  4157e4:	mov    bh,BYTE PTR [ebx+0x2e]
  4157e7:	cmp    ebp,DWORD PTR ds:0x3a87ecbb
  4157ed:	jmp    0x41579b
  4157ef:	jg     0x4157f4
  4157f1:	popf   
  4157f2:	arpl   WORD PTR [esi+0x1e33d157],sp
  4157f8:	(bad)  
  4157f9:	cmp    al,0xa5
  4157fb:	loopne 0x415782
  4157fd:	xchg   esp,eax
  4157fe:	mov    edx,0x55fd6344
  415803:	aad    0x75
  415805:	pop    edx
  415806:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415807:	icebp  
  415808:	sub    edx,DWORD PTR [esi+edi*2-0x5]
  41580c:	(bad)  
  41580d:	fst    DWORD PTR [ebx+0x63]
  415810:	repz adc ecx,ecx
  415813:	push   ss
  415814:	mov    ebp,ebx
  415816:	dec    eax
  415817:	jecxz  0x415869
  415819:	add    eax,DWORD PTR [ecx+0x4c]
  41581c:	add    DWORD PTR [ebx],0xffffffc2
  41581f:	fs sahf 
  415821:	xchg   esi,eax
  415822:	cmp    ecx,DWORD PTR [edx+edx*8+0x3e]
  415826:	xchg   eax,esp
  415828:	ret    
  415829:	test   al,0xc0
  41582b:	repz (bad) 
  41582d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41582e:	cdq    
  41582f:	call   0x507e55ff
  415834:	lods   eax,DWORD PTR ds:[esi]
  415835:	push   esi
  415836:	dec    ecx
  415837:	loop   0x4157c8
  415839:	mov    edx,0x1f922e01
  41583e:	inc    esp
  41583f:	in     al,dx
  415840:	inc    ebp
  415841:	or     eax,0xf7f8b456
  415846:	cmp    dh,BYTE PTR [esi+0x1963153d]
  41584c:	arpl   bp,si
  41584e:	add    BYTE PTR [ecx-0x73],ch
  415851:	aas    
  415852:	cdq    
  415853:	jo     0x415846
  415855:	shr    BYTE PTR [edi+ebp*8-0xc],1
  415859:	pop    ecx
  41585a:	mov    ebx,0x181595fa
  41585f:	mov    al,ds:0xcc65a84
  415864:	sub    eax,0xe991faa8
  415869:	out    dx,al
  41586a:	push   ebx
  41586b:	ret    
  41586c:	in     al,0xed
  41586e:	push   cs
  41586f:	sbb    esp,ecx
  415871:	xor    bl,BYTE PTR [eax-0x25ddb18d]
  415877:	add    BYTE PTR [eax+0x23],dl
  41587a:	adc    eax,DWORD PTR [eax]
  41587c:	loopne 0x41585d
  41587e:	loope  0x4158cc
  415880:	xor    eax,0x54dcc3aa
  415885:	test   BYTE PTR [esi],cl
  415887:	dec    ebx
  415888:	(bad)  
  415889:	inc    esi
  41588a:	or     eax,0xc8a8ef2b
  41588f:	cmp    ch,BYTE PTR [ebp+edx*8-0x57]
  415893:	cwde   
  415894:	mov    ebx,DWORD PTR [edi]
  415896:	loope  0x415838
  415898:	stc    
  415899:	push   edi
  41589a:	inc    ecx
  41589b:	repnz sub BYTE PTR [ebp-0x3b31a08f],ah
  4158a2:	dec    edi
  4158a3:	push   ecx
  4158a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158a5:	cld    
  4158a6:	push   0x57bbd8c3
  4158ab:	daa    
  4158ac:	dec    ecx
  4158ad:	repz pop ecx
  4158af:	cli    
  4158b0:	cmp    edi,DWORD PTR [ecx-0x148b8150]
  4158b6:	pop    ebx
  4158b7:	repz popa 
  4158b9:	in     eax,dx
  4158ba:	mov    WORD PTR [ebp+0x68],cs
  4158bd:	xchg   BYTE PTR [esi],bh
  4158bf:	xchg   edx,eax
  4158c0:	xor    DWORD PTR [edx+0xd],esp
  4158c3:	popa   
  4158c4:	bound  edi,QWORD PTR [ebx]
  4158c6:	scas   al,BYTE PTR es:[edi]
  4158c7:	int3   
  4158c8:	into   
  4158c9:	in     eax,dx
  4158ca:	jmp    0xbacce466
  4158cf:	(bad)  
  4158d0:	ds push esp
  4158d2:	dec    edi
  4158d3:	adc    DWORD PTR [eax-0x20],ebx
  4158d6:	jb     0x4158d0
  4158d8:	sub    BYTE PTR [edi],0xcd
  4158db:	fistp  WORD PTR [esi+0x69dcb1d]
  4158e1:	popf   
  4158e2:	rcr    cl,0x64
  4158e5:	(bad)  
  4158e6:	cmp    dh,dh
  4158e8:	pop    ecx
  4158e9:	xor    ah,0x8d
  4158ec:	and    al,0x3f
  4158ee:	dec    eax
  4158ef:	xor    BYTE PTR [edi+0x4c],ah
  4158f2:	cmp    eax,0xc49a3fb6
  4158f7:	jnp    0x415912
  4158f9:	sar    BYTE PTR [edi+ebp*2-0x53],0x5d
  4158fe:	mov    cl,0xfe
  415900:	pop    edi
  415901:	inc    edi
  415902:	scas   al,BYTE PTR es:[edi]
  415903:	outs   dx,DWORD PTR ds:[esi]
  415904:	dec    eax
  415905:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415906:	and    WORD PTR [edi+0x57b79951],si
  41590d:	adc    DWORD PTR [edx-0x64],0xffffffc8
  415911:	sbb    ebx,DWORD PTR [ebx]
  415913:	(bad)  [edi+0x44]
  415916:	mov    BYTE PTR [edx],0xf4
  415919:	lock retf 
  41591b:	icebp  
  41591c:	jmp    DWORD PTR [edx+eiz*8-0x77]
  415920:	gs pop ss
  415922:	adc    eax,0x41d3b9ab
  415927:	loopne 0x415926
  415929:	test   BYTE PTR [eax-0x4c],al
  41592c:	out    dx,al
  41592d:	jecxz  0x4158f4
  41592f:	imul   ecx,ecx,0x4c98f699
  415935:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415936:	inc    edi
  415937:	outs   dx,DWORD PTR ds:[esi]
  415938:	sbb    al,0xb
  41593a:	shl    DWORD PTR [edx-0x5960945c],0xbf
  415941:	sub    bl,BYTE PTR ds:0xe2d4a472
  415947:	arpl   WORD PTR [ecx+0x67],di
  41594a:	int    0xa8
  41594c:	inc    ecx
  41594d:	jb     0x415950
  41594f:	jns    0x41591b
  415951:	xor    eax,0xc0ff406c
  415956:	mov    esi,0x1913d964
  41595b:	jbe    0x415991
  41595d:	fist   WORD PTR [edi+0x22a300fb]
  415963:	push   eax
  415964:	fld    TBYTE PTR [ebx-0x64080ab7]
  41596a:	push   esp
  41596b:	inc    eax
  41596c:	fwait
  41596d:	call   0x247d:0x44f3179e
  415974:	jbe    0x4159ac
  415976:	or     al,0x6d
  415979:	addr16 repnz cs enter 0x78dc,0x22
  415980:	sti    
  415981:	mov    ds:0xb9586519,eax
  415986:	lds    esp,FWORD PTR [edi+edx*2+0x511957d4]
  41598d:	add    DWORD PTR ds:0x5730a3c0,0xffffff95
  415994:	(bad)  
  415995:	loope  0x41595a
  415997:	jle    0xac20cce8
  41599d:	jg     0x4159be
  41599f:	pop    es
  4159a0:	cmp    edi,DWORD PTR ds:0xe64da6b9
  4159a6:	dec    edi
  4159a7:	arpl   sp,bp
  4159a9:	push   cs
  4159aa:	add    edi,DWORD PTR [ebx]
  4159ac:	jp     0x4159e5
  4159ae:	cld    
  4159af:	jb     0x415a2b
  4159b1:	addr16 mov edx,0x83f989ab
  4159b7:	inc    ebp
  4159b8:	scas   al,BYTE PTR es:[edi]
  4159b9:	push   0x18500ed1
  4159be:	mov    edi,0x97a92824
  4159c3:	hlt    
  4159c4:	cmp    bh,bl
  4159c6:	push   edi
  4159c7:	leave  
  4159c8:	mov    esi,0x28992059
  4159cd:	(bad)  
  4159ce:	(bad)  
  4159cf:	rcl    DWORD PTR [ebp+0x79],1
  4159d2:	mov    ds:0x6e0fb5d7,eax
  4159d7:	xor    BYTE PTR [edx],dl
  4159d9:	mov    ecx,0x3df7b798
  4159de:	push   cs
  4159df:	or     edx,ebx
  4159e1:	ret    
  4159e2:	lfs    ebx,FWORD PTR [ebp+0x7a]
  4159e6:	shl    BYTE PTR [ebp-0x6d],cl
  4159e9:	ja     0x4159c2
  4159eb:	(bad)  
  4159ed:	jg     0x415a39
  4159ef:	stos   BYTE PTR es:[edi],al
  4159f0:	and    ebx,eax
  4159f2:	es sbb esp,edx
  4159f5:	push   es
  4159f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159f7:	fwait
  4159f8:	outs   dx,DWORD PTR ds:[esi]
  4159f9:	or     DWORD PTR [ebx-0x49c7462d],0x68064c1e
  415a03:	inc    ebx
  415a04:	enter  0x6c8,0x5b
  415a08:	add    BYTE PTR [ecx],0xa8
  415a0b:	mov    DWORD PTR [eax],ebp
  415a0d:	xchg   DWORD PTR [ebp+0x45],edx
  415a10:	and    edi,DWORD PTR [esi+0x50]
  415a13:	dec    edi
  415a14:	test   al,0x95
  415a16:	out    dx,eax
  415a17:	mov    bh,0xdc
  415a19:	ror    ebx,1
  415a1b:	sub    BYTE PTR [ebp-0xd0fb8db],al
  415a21:	ret    
  415a22:	mov    al,0x53
  415a24:	shr    cl,cl
  415a26:	and    ebx,ecx
  415a28:	ss out 0x34,eax
  415a2b:	cmp    al,0xb0
  415a2d:	pop    ds
  415a2e:	mov    eax,ds:0x18e762f6
  415a33:	ins    BYTE PTR es:[edi],dx
  415a34:	imul   eax,ecx,0xffffff91
  415a37:	ja     0x415a19
  415a39:	add    ebx,edi
  415a3b:	in     eax,dx
  415a3c:	fsave  [esi+0x71]
  415a40:	int3   
  415a41:	xor    esi,DWORD PTR [esi]
  415a43:	dec    edi
  415a44:	stc    
  415a45:	mov    bl,0x2c
  415a47:	popf   
  415a48:	shl    BYTE PTR [ebx-0x54c14a15],1
  415a4e:	push   cs
  415a4f:	add    eax,0xad548620
  415a54:	std    
  415a55:	cmp    bh,bh
  415a57:	loope  0x415aca
  415a59:	push   eax
  415a5a:	fucomip st,st(5)
  415a5c:	and    al,0x61
  415a5e:	adc    BYTE PTR [ebp+esi*2-0x55ef73c6],0xfd
  415a66:	call   0x3c0e:0x4df09a31
  415a6d:	pop    ebx
  415a6e:	imul   BYTE PTR [esi]
  415a70:	lahf   
  415a71:	cmc    
  415a72:	fldenv ds:0x97121b67
  415a78:	sti    
  415a79:	call   0xa846:0x694f2dec
  415a80:	mov    al,ds:0x39226b92
  415a85:	add    esp,DWORD PTR [eax-0x3a]
  415a88:	scas   eax,DWORD PTR es:[edi]
  415a89:	mov    ds:0x8c76576c,al
  415a8e:	sahf   
  415a8f:	cmp    DWORD PTR [edi+0x3f0d40cf],ebx
  415a95:	jle    0x415a3a
  415a97:	scas   al,BYTE PTR es:[edi]
  415a98:	das    
  415a99:	fbstp  TBYTE PTR [eax-0x6ee147d3]
  415a9f:	mov    bh,0xff
  415aa1:	fiadd  WORD PTR [eax]
  415aa3:	test   al,0x5b
  415aa5:	cli    
  415aa6:	outs   dx,DWORD PTR ds:[esi]
  415aa7:	(bad)  
  415aa8:	ss push ebx
  415aaa:	test   al,0xfa
  415aac:	sbb    al,0x48
  415aae:	xchg   edx,eax
  415aaf:	fsub   DWORD PTR [edx]
  415ab1:	xlat   BYTE PTR ds:[ebx]
  415ab2:	test   DWORD PTR [eax+0x3],edi
  415ab5:	sub    DWORD PTR [edx-0x34ffaf81],esp
  415abb:	test   BYTE PTR [edi-0x5c],bh
  415abe:	pop    ebx
  415abf:	out    dx,al
  415ac0:	mov    eax,ds:0x6a66765d
  415ac5:	sti    
  415ac6:	das    
  415ac7:	jbe    0x415a9c
  415ac9:	popa   
  415aca:	push   ebp
  415acb:	fdivr  st(6),st
  415acd:	out    dx,al
  415ace:	cmc    
  415acf:	(bad)  
  415ad1:	jg     0x415afc
  415ad3:	fisttp QWORD PTR [ecx]
  415ad5:	add    DWORD PTR [edx],0x297ad260
  415adb:	mov    WORD PTR [eax],es
  415add:	sub    BYTE PTR [ebx],dl
  415adf:	outs   dx,DWORD PTR ds:[esi]
  415ae0:	jno    0x415afd
  415ae2:	cmp    al,0x8d
  415ae4:	add    al,BYTE PTR [ebx+0x7ad4c1a6]
  415aea:	mov    esp,0x3acb3a3
  415aef:	out    dx,al
  415af0:	or     al,0x4
  415af2:	jmp    0x8f76fef1
  415af7:	in     eax,dx
  415af8:	dec    esi
  415af9:	iret   
  415afa:	jmp    0xa336:0xcc3e9892
  415b01:	aam    0x35
  415b03:	or     BYTE PTR ds:[edx],dh
  415b06:	popf   
  415b07:	nop
  415b08:	pop    edx
  415b09:	mov    ah,0xf7
  415b0b:	sbb    eax,0xb60e225a
  415b10:	jb     0x415ab5
  415b12:	cmp    BYTE PTR [ecx-0x74],bh
  415b15:	mov    ecx,edi
  415b17:	into   
  415b18:	cdq    
  415b19:	lock rcr BYTE PTR [eax],0x3e
  415b1d:	xchg   BYTE PTR ds:0xb9b1e742,cl
  415b23:	adc    al,0x21
  415b25:	fs mov al,0x9c
  415b28:	add    eax,0xba319ef8
  415b2d:	or     eax,0xcd33bd6c
  415b32:	inc    edi
  415b33:	xchg   esi,eax
  415b34:	sub    DWORD PTR [bx+di-0x4],edx
  415b38:	popf   
  415b39:	sub    al,0xe9
  415b3b:	jnp    0x415b96
  415b3d:	bound  edx,QWORD PTR [edi+0x4938dff6]
  415b43:	xchg   esp,esi
  415b45:	push   esp
  415b46:	sub    al,0x57
  415b48:	jmp    0x42ce7ab
  415b4d:	cmp    BYTE PTR [eax-0x51],ah
  415b50:	cmc    
  415b51:	test   BYTE PTR [ecx],al
  415b53:	xor    eax,0xda1a95c2
  415b58:	mov    DWORD PTR [esi-0x49],ebx
  415b5b:	ret    
  415b5c:	sti    
  415b5d:	mov    eax,0x3c582f18
  415b62:	nop
  415b63:	repnz xchg edx,eax
  415b65:	adc    dh,BYTE PTR [ebx-0x22]
  415b68:	jmp    0x558c:0x4949a2e3
  415b6f:	outs   dx,DWORD PTR ds:[esi]
  415b70:	add    al,0xc8
  415b72:	and    BYTE PTR [edx],0xcd
  415b75:	in     eax,dx
  415b76:	dec    ecx
  415b77:	fcmovbe st,st(2)
  415b79:	sbb    eax,0x28cdb404
  415b7e:	clc    
  415b7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b80:	sti    
  415b81:	shl    DWORD PTR [ebp+0x269da03f],cl
  415b87:	inc    edi
  415b88:	and    edx,esi
  415b8a:	jecxz  0x415b48
  415b8c:	or     al,0x8
  415b8e:	and    eax,0x60a3ab7b
  415b93:	xchg   edx,eax
  415b94:	lds    ebp,FWORD PTR [esi-0x7add57f2]
  415b9a:	mov    eax,ds:0xcaa371b4
  415b9f:	and    al,0x39
  415ba1:	mov    bh,0x30
  415ba3:	ror    DWORD PTR [edi+0x67],0x8a
  415ba7:	or     DWORD PTR [eax-0x23],edi
  415baa:	es sbb al,0xde
  415bad:	aaa    
  415bae:	in     eax,dx
  415baf:	push   ds
  415bb0:	xchg   ebx,eax
  415bb1:	leave  
  415bb2:	jmp    0x415b9b
  415bb4:	sub    dh,BYTE PTR [esi]
  415bb6:	das    
  415bb7:	daa    
  415bb8:	or     BYTE PTR [ebx+0x8],0x70
  415bbc:	sub    eax,0xb73b83fd
  415bc1:	std    
  415bc2:	cwde   
  415bc3:	loop   0x415c2f
  415bc5:	cld    
  415bc6:	or     ch,ah
  415bc8:	mov    ch,0x1c
  415bca:	fdivrp st(4),st
  415bcc:	mov    eax,0x329dc9c7
  415bd1:	jp     0x415bf3
  415bd3:	mov    edx,0x98938fc
  415bd8:	bound  si,DWORD PTR [ebx]
  415bdb:	fisubr DWORD PTR [esi-0x310b4e3b]
  415be1:	mov    cs,WORD PTR [ebp-0xd]
  415be4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415be5:	(bad)  
  415be6:	into   
  415be7:	jo     0x415c5a
  415be9:	int3   
  415bea:	mov    ah,BYTE PTR [edx+ebx*1-0x6b]
  415bee:	lea    esp,[ebx+edx*8]
  415bf1:	dec    eax
  415bf2:	xchg   esp,eax
  415bf3:	fwait
  415bf4:	mov    esi,0x1c76530e
  415bf9:	push   edi
  415bfa:	(bad)
  415bfd:	xor    edi,DWORD PTR [esi-0x6e19e85c]
  415c03:	xchg   esp,eax
  415c04:	lahf   
  415c05:	fiadd  DWORD PTR [esi+0x7c]
  415c08:	retf   0x4408
  415c0b:	iret   
  415c0c:	jnp    0x415be1
  415c0e:	sbb    edx,DWORD PTR [ecx+ecx*8+0x426b2782]
  415c15:	pushf  
  415c16:	or     al,0xd5
  415c18:	xchg   esp,eax
  415c19:	or     al,0xdc
  415c1b:	jbe    0x415c48
  415c1d:	mov    ah,0x5e
  415c1f:	xchg   ebx,eax
  415c20:	lahf   
  415c21:	(bad)  
  415c22:	or     al,BYTE PTR [eax+0x7ee053f2]
  415c28:	push   esi
  415c29:	push   edi
  415c2a:	mov    eax,0x80abc2ad
  415c2f:	repnz pop ecx
  415c31:	cli    
  415c32:	das    
  415c33:	fdiv   QWORD PTR [edi+0x536c5e43]
  415c39:	jns    0x415c65
  415c3b:	pop    ecx
  415c3c:	sub    DWORD PTR ds:0x1e2258a1,ebx
  415c42:	icebp  
  415c43:	pop    edx
  415c44:	dec    eax
  415c45:	and    DWORD PTR [eax],edi
  415c47:	pop    edx
  415c48:	push   esp
  415c49:	or     al,0xf7
  415c4b:	adc    ah,BYTE PTR [ecx]
  415c4d:	inc    ecx
  415c4e:	xchg   ebx,eax
  415c4f:	adc    BYTE PTR [ebx+ebp*2],0x6a
  415c53:	cmovb  edx,esi
  415c56:	dec    edx
  415c57:	and    ah,al
  415c59:	push   edx
  415c5a:	pop    es
  415c5b:	add    al,0xe9
  415c5d:	pop    ss
  415c5e:	cdq    
  415c5f:	mov    bl,0x9d
  415c61:	mov    dl,0x14
  415c63:	cdq    
  415c64:	xor    eax,0x7bf49535
  415c69:	mov    eax,0x6130e74d
  415c6e:	repz sub eax,0x8efeda4d
  415c74:	sbb    BYTE PTR [esi-0x4393006f],cl
  415c7a:	ds pop es
  415c7c:	in     eax,0xd5
  415c7e:	add    BYTE PTR [eax],bh
  415c80:	stos   DWORD PTR es:[edi],eax
  415c81:	pop    ss
  415c82:	dec    ebx
  415c83:	dec    esi
  415c84:	rcr    DWORD PTR [ebx],cl
  415c86:	inc    edi
  415c87:	retf   0x9d5a
  415c8a:	xchg   ebp,eax
  415c8b:	inc    esi
  415c8c:	jle    0x415c9b
  415c8e:	test   al,0x2b
  415c90:	not    BYTE PTR [ecx-0x59]
  415c93:	or     BYTE PTR [edx-0x26110d08],dl
  415c99:	xor    eax,0x623a025c
  415c9e:	pop    es
  415c9f:	pop    ss
  415ca0:	push   ebp
  415ca1:	push   0x42
  415ca3:	ret    0x3118
  415ca6:	adc    al,ah
  415ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ca9:	dec    ebx
  415caa:	test   DWORD PTR [ebx+0x7a],edx
  415cad:	jno    0x415c95
  415caf:	loopne 0x415c36
  415cb1:	scas   eax,DWORD PTR es:[edi]
  415cb2:	retf   0x3b48
  415cb5:	jmp    0xb60dd5da
  415cba:	jbe    0x415ccc
  415cbc:	stos   DWORD PTR es:[edi],eax
  415cbd:	sti    
  415cbe:	mov    ebp,0xf63a8943
  415cc3:	mov    bl,0xf3
  415cc6:	xor    DWORD PTR [edx+0x3f],ebp
  415cc9:	jae    0x415c71
  415ccb:	mov    bl,0xc8
  415ccd:	sub    edx,DWORD PTR [ebx+0xbfe216d]
  415cd3:	adc    bl,bh
  415cd5:	stc    
  415cd6:	fcomp  QWORD PTR [eax]
  415cd8:	jle    0x415d19
  415cda:	(bad)  
  415cdb:	dec    ebx
  415cdc:	jns    0x415c7e
  415cde:	xor    bh,al
  415ce0:	es adc al,cl
  415ce3:	outs   dx,DWORD PTR ds:[esi]
  415ce4:	dec    ebx
  415ce5:	fwait
  415ce6:	jbe    0x415d44
  415ce8:	add    al,0x52
  415cea:	dec    ebx
  415ceb:	sbb    BYTE PTR es:[eax],0xc2
  415cef:	shr    DWORD PTR [eax-0x13],cl
  415cf2:	mov    bh,BYTE PTR ds:0xddcc271d
  415cf8:	test   al,0x2c
  415cfa:	stos   DWORD PTR es:[edi],eax
  415cfb:	mov    dl,0xc0
  415cfd:	dec    edx
  415cfe:	push   cs
  415cff:	(bad)  
  415d00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d01:	push   cs
  415d02:	jl     0x415cc0
  415d04:	call   0x36a94ef3
  415d09:	dec    ebx
  415d0a:	and    al,0x7f
  415d0c:	lahf   
  415d0d:	(bad)  
  415d0e:	out    dx,eax
  415d0f:	adc    BYTE PTR [esi],cl
  415d11:	out    dx,eax
  415d12:	mov    DWORD PTR [ecx],ebp
  415d14:	xchg   ecx,eax
  415d15:	hlt    
  415d16:	or     ebp,DWORD PTR [eax]
  415d18:	out    0x9,eax
  415d1a:	xchg   BYTE PTR [ebx+0x56],ch
  415d1d:	int    0x43
  415d1f:	pop    esi
  415d20:	jecxz  0x415cf4
  415d22:	or     eax,0x3390dcc8
  415d27:	clc    
  415d28:	std    
  415d29:	push   es
  415d2a:	push   ss
  415d2b:	mov    BYTE PTR [edi+0x532ea699],0x8d
  415d32:	jl     0x415ceb
  415d34:	or     edx,ebx
  415d36:	jp     0x415d1b
  415d38:	cmp    eax,0x97511bd0
  415d3d:	xor    BYTE PTR [ebp-0x1b35e7ac],al
  415d43:	push   0xe853ec18
  415d48:	xor    al,0xa4
  415d4a:	xor    BYTE PTR [edi+0x65],dh
  415d4d:	adc    bl,BYTE PTR [edi]
  415d4f:	addr16 in al,dx
  415d51:	outs   dx,BYTE PTR ds:[esi]
  415d52:	loopne 0x415db6
  415d54:	push   0x228f8c70
  415d59:	test   BYTE PTR [ebp+0x5a65aa97],dl
  415d5f:	lods   eax,DWORD PTR ds:[esi]
  415d60:	aam    0x48
  415d62:	iret   
  415d63:	mov    ah,0x76
  415d65:	bound  esp,QWORD PTR [eax]
  415d67:	and    BYTE PTR [ebp+0x47],0x63
  415d6b:	or     al,0xc
  415d6d:	xchg   ecx,eax
  415d6e:	sub    DWORD PTR [eax],ebx
  415d70:	sub    DWORD PTR [edi-0x146d84a0],esi
  415d76:	test   DWORD PTR [eax+0xa281f9f],esp
  415d7c:	out    0x7b,eax
  415d7e:	out    0x69,al
  415d80:	push   es
  415d81:	or     cl,BYTE PTR [ecx]
  415d83:	push   0xffffffbe
  415d85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d86:	cmc    
  415d87:	push   ebp
  415d88:	mov    al,ds:0x689c23e4
  415d8d:	dec    esi
  415d8e:	xchg   BYTE PTR [edi-0x7b],cl
  415d91:	das    
  415d92:	imul   ebx,DWORD PTR ds:0x89fa3046,0x50
  415d99:	(bad)  
  415d9b:	stc    
  415d9c:	out    0x7d,al
  415d9e:	(bad)  [ecx+0x5bc7c8a1]
  415da4:	mov    ds:0xc704affa,eax
  415da9:	add    DWORD PTR [ebx+0x47],0xffffff8a
  415dad:	lods   al,BYTE PTR ds:[esi]
  415dae:	mov    eax,0x5aa2cdff
  415db3:	mov    dh,0xdf
  415db5:	mov    WORD PTR [ebp+0x12905469],?
  415dbb:	jp     0x415d70
  415dbd:	(bad)  
  415dbe:	or     al,0x32
  415dc0:	stos   BYTE PTR es:[edi],al
  415dc1:	jae    0x415e02
  415dc3:	loope  0x415ddd
  415dc5:	pop    ebx
  415dc6:	outs   dx,BYTE PTR ds:[esi]
  415dc7:	sbb    ah,BYTE PTR [edx+edi*4-0x46afe86f]
  415dce:	ret    
  415dcf:	adc    al,0xdc
  415dd1:	(bad)  
  415dd2:	popa   
  415dd3:	inc    ebp
  415dd4:	push   esi
  415dd5:	or     ecx,DWORD PTR [ebx]
  415dd7:	xchg   ebp,eax
  415dd8:	ficom  WORD PTR [esi-0x6b]
  415ddb:	push   ecx
  415ddc:	data16 sub al,0x90
  415ddf:	adc    DWORD PTR [ebx+0x28],esi
  415de2:	push   ds
  415de3:	int3   
  415de4:	dec    ebp
  415de5:	jecxz  0x415e00
  415de7:	and    ah,BYTE PTR [ebp+0x7a]
  415dea:	jae    0x415ded
  415dec:	cmp    al,0x58
  415dee:	mov    ebp,0xed4be028
  415df3:	mov    eax,0xd60ba236
  415df8:	mov    ah,0xec
  415dfa:	inc    esi
  415dfb:	jo     0x415e2c
  415dfd:	mov    al,0xc2
  415dff:	addr16 popa 
  415e01:	test   BYTE PTR ds:0xcc9f4e28,ah
  415e07:	mov    edi,0x7da94934
  415e0c:	js     0x415e05
  415e0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e0f:	jae    0x415dce
  415e11:	call   0xd5eb:0xf7ca3a
  415e18:	in     eax,dx
  415e19:	mov    BYTE PTR [ecx],ch
  415e1b:	dec    eax
  415e1c:	stc    
  415e1d:	call   0xee42d60e
  415e22:	ja     0x415e4f
  415e24:	or     bl,ah
  415e26:	and    bl,BYTE PTR [ebp-0x301229aa]
  415e2c:	in     al,0xaa
  415e2e:	or     BYTE PTR [edi+0x65900934],0x30
  415e35:	xor    al,0x70
  415e37:	and    ah,BYTE PTR [ebx+0x27e49953]
  415e3d:	cmp    BYTE PTR [ebx+0x30],dl
  415e40:	sub    eax,0xb5fe7fee
  415e45:	jns    0x415e76
  415e47:	or     esi,DWORD PTR [esi]
  415e49:	into   
  415e4a:	in     al,dx
  415e4b:	(bad)  
  415e4c:	pushf  
  415e4d:	sub    edi,DWORD PTR [edi]
  415e4f:	imul   ebx,DWORD PTR fs:[eax+0x22061b6b],0x41347a34
  415e5a:	cs popa 
  415e5c:	mov    dl,0x73
  415e5e:	inc    eax
  415e5f:	scas   al,BYTE PTR es:[edi]
  415e60:	mov    DWORD PTR [eax-0x5b],ebx
  415e63:	cmp    eax,0xecd14c67
  415e68:	sbb    DWORD PTR [ecx+eax*2],esi
  415e6b:	xor    al,0xd6
  415e6d:	lods   al,BYTE PTR ds:[esi]
  415e6e:	mov    ah,0xe5
  415e70:	mov    ds:0xa5ae512e,eax
  415e75:	ins    BYTE PTR es:[edi],dx
  415e76:	cmp    eax,ebx
  415e78:	outs   dx,DWORD PTR ds:[esi]
  415e79:	xchg   DWORD PTR [ebp+0x1b4f0d41],ebx
  415e7f:	pop    es
  415e80:	add    eax,0xc1b00353
  415e85:	scas   al,BYTE PTR es:[edi]
  415e86:	mov    bl,0x17
  415e88:	mov    ebp,0x42db3455
  415e8d:	dec    edx
  415e8e:	mov    dh,0x96
  415e90:	jae    0x415f0a
  415e92:	les    esp,FWORD PTR [ebx+ebx*2]
  415e95:	cld    
  415e96:	dec    ebx
  415e97:	jns    0x415ea1
  415e99:	pop    ebx
  415e9a:	mov    ds:0xdd49a840,al
  415e9f:	xchg   ebp,eax
  415ea0:	adc    bl,bh
  415ea2:	inc    ebx
  415ea3:	dec    esi
  415ea4:	jb     0x415e58
  415ea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ea7:	mov    DWORD PTR ds:0xdedcddb8,ebp
  415ead:	xor    eax,0xda561ff6
  415eb2:	iret   
  415eb3:	pop    ebp
  415eb4:	inc    ebx
  415eb5:	push   ebp
  415eb6:	ror    BYTE PTR [ebx-0x2f574e58],cl
  415ebc:	inc    ebp
  415ebd:	adc    bl,BYTE PTR [edx]
  415ebf:	popf   
  415ec0:	(bad)
  415ec4:	aaa    
  415ec5:	out    dx,al
  415ec6:	xor    DWORD PTR [edi+0x4e],0x2a3d12fe
  415ecd:	pop    eax
  415ece:	push   ds
  415ecf:	retf   0xbd57
  415ed2:	ins    BYTE PTR es:[edi],dx
  415ed3:	(bad)
  415ed7:	push   ds
  415ed8:	sbb    al,0xa4
  415eda:	and    edi,edx
  415edc:	in     eax,0x1f
  415ede:	push   ebx
  415edf:	test   al,0x78
  415ee1:	jnp    0x415f52
  415ee3:	mov    esp,0x78c9d4ee
  415ee8:	sbb    al,0x56
  415eea:	ins    BYTE PTR es:[edi],dx
  415eeb:	mov    edx,0x97f8d51e
  415ef0:	mov    ds:0x7118080,al
  415ef5:	fwait
  415ef6:	dec    ecx
  415ef7:	pop    esp
  415ef8:	test   BYTE PTR [esi+0x26],ch
  415efb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415efc:	jnp    0x415f1c
  415efe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415eff:	inc    esp
  415f00:	cmp    al,0xe2
  415f02:	fimul  DWORD PTR [esi]
  415f04:	fdivrp st(3),st
  415f06:	outs   dx,DWORD PTR ds:[esi]
  415f07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f08:	(bad)  
  415f0a:	fwait
  415f0b:	in     eax,0x8e
  415f0d:	imul   eax,DWORD PTR [ecx],0x42ddebe2
  415f13:	adc    ebp,ebx
  415f15:	push   edx
  415f16:	mov    bl,BYTE PTR [esp+ebp*8]
  415f19:	mov    bl,0x87
  415f1b:	in     eax,dx
  415f1c:	or     eax,0xc3f712
  415f21:	scas   al,BYTE PTR es:[edi]
  415f22:	and    DWORD PTR [edx+0x2d2ad94c],edx
  415f28:	cs mov bh,0xe0
  415f2b:	xor    BYTE PTR [ebx+0x1c],dh
  415f2e:	jo     0x415efa
  415f30:	call   0xfb8c:0x4810f685
  415f37:	(bad)  
  415f38:	sbb    al,0xd8
  415f3a:	ja     0x415f41
  415f3c:	scas   eax,DWORD PTR es:[edi]
  415f3d:	xor    al,0x2e
  415f3f:	cmp    eax,0x8f84860e
  415f44:	outs   dx,DWORD PTR ds:[esi]
  415f45:	pop    esp
  415f46:	loope  0x415fab
  415f48:	fwait
  415f49:	loope  0x415ef7
  415f4b:	jg     0x415f57
  415f4d:	test   ebp,edx
  415f4f:	jg     0x415f5a
  415f51:	sbb    DWORD PTR [eax],ebp
  415f53:	mov    edx,0x1c2c0c6d
  415f58:	in     al,0xdb
  415f5a:	dec    edi
  415f5b:	mov    eax,0x7713b1c0
  415f60:	adc    ch,0x61
  415f63:	sub    bl,BYTE PTR [esi+ecx*1+0x6fc253bc]
  415f6a:	and    BYTE PTR [eax],0x73
  415f6d:	mov    edi,0xe398de34
  415f72:	mov    al,0xe0
  415f74:	shr    BYTE PTR [ebp-0x2b],0x39
  415f78:	lea    ebx,[ebx]
  415f7a:	mov    ds:0x4aa4b37c,al
  415f7f:	mov    DWORD PTR [ebx-0x785b1086],ebx
  415f85:	fsub   st,st(7)
  415f87:	outs   dx,DWORD PTR ds:[esi]
  415f88:	sbb    al,0xef
  415f8a:	(bad)  
  415f8b:	cli    
  415f8c:	inc    edx
  415f8d:	xor    ah,BYTE PTR [ebp+0x63]
  415f90:	mov    dl,0x58
  415f92:	sub    al,0x88
  415f94:	add    dh,dl
  415f96:	jns    0x415fb3
  415f98:	loope  0x415fe0
  415f9a:	pop    ebp
  415f9b:	sub    esp,ebx
  415f9d:	mov    ecx,0xe690dfde
  415fa2:	jmp    0xee3e:0xea4b2252
  415fa9:	outs   dx,BYTE PTR ds:[esi]
  415faa:	mov    dl,0xb1
  415fac:	xchg   edx,eax
  415fad:	mov    ebp,0x2cc6daea
  415fb2:	es xchg esi,eax
  415fb4:	push   ds
  415fb5:	and    al,0xe2
  415fb7:	out    dx,eax
  415fb8:	or     edx,DWORD PTR [ebx-0x3aa42cb6]
  415fbe:	jb     0x415ff4
  415fc0:	pop    ss
  415fc1:	fndisi(8087 only) 
  415fc3:	and    ebp,0xffffff93
  415fc6:	jns    0x415f77
  415fc8:	aad    0xaf
  415fca:	iret   
  415fcb:	out    dx,al
  415fcc:	fcmovnbe st,st(5)
  415fce:	jbe    0x415fab
  415fd0:	cmp    BYTE PTR [edi+0x71],bh
  415fd3:	push   cs
  415fd4:	mov    cl,0x47
  415fd6:	stos   DWORD PTR es:[edi],eax
  415fd7:	inc    edi
  415fd8:	inc    esp
  415fd9:	outs   dx,BYTE PTR ds:[esi]
  415fda:	ret    
  415fdb:	pop    edx
  415fdc:	jecxz  0x415f72
  415fde:	or     cl,BYTE PTR [ecx+0x7e]
  415fe1:	dec    ebp
  415fe2:	jae    0x415fd3
  415fe4:	add    esi,DWORD PTR [esi]
  415fe6:	sbb    ah,BYTE PTR [ebp-0x316154a1]
  415fec:	push   esp
  415fed:	dec    edx
  415fee:	jne    0x415f95
  415ff0:	in     eax,0x20
  415ff2:	mov    dl,0x41
  415ff4:	arpl   WORD PTR [edi-0x46],ax
  415ff7:	add    BYTE PTR [edx+0x44ccfa21],0xaa
  415ffe:	push   esi
  415fff:	(bad)  
  416000:	sti    
  416001:	mov    al,ds:0x2fba0b63
  416006:	call   0xe0ed:0x2f466a4
  41600d:	mov    edx,0x6161276
  416012:	dec    sp
  416014:	rcr    DWORD PTR [eax-0x31b8e33a],0x45
  41601b:	pop    ds
  41601c:	adc    eax,0x7f6e51fa
  416021:	ffreep st(3)
  416024:	or     eax,0xefb87945
  416029:	adc    eax,0x60fcd846
  41602e:	(bad)  
  41602f:	mov    ebp,0x2593f8b7
  416034:	shl    BYTE PTR [ecx-0x5df015d7],1
  41603a:	pop    esi
  41603b:	test   bl,dh
  41603d:	outs   dx,BYTE PTR ds:[esi]
  41603e:	nop
  41603f:	into   
  416040:	fild   DWORD PTR [ecx]
  416042:	aam    0xd9
  416044:	xchg   dh,cl
  416046:	jo     0x4160a6
  416048:	ja     0x4160c7
  41604a:	push   cs
  41604b:	sbb    dh,dh
  41604d:	daa    
  41604e:	dec    ebp
  41604f:	fist   DWORD PTR [ebx+edx*8+0x5d4d09c5]
  416056:	jle    0x4160ae
  416058:	scas   al,BYTE PTR es:[edi]
  416059:	inc    ecx
  41605a:	addr16 mov ecx,0xff48907f
  416060:	lds    edi,FWORD PTR [ecx]
  416062:	sub    DWORD PTR [eax+edi*8+0x35],edi
  416066:	not    DWORD PTR [ebp-0x22928d66]
  41606c:	mov    DWORD PTR [ebp+edx*1+0x4bff40db],edx
  416073:	(bad)  
  416074:	sbb    BYTE PTR [edx],bh
  416076:	aas    
  416077:	mov    dh,BYTE PTR [ebx+0x6bf02af0]
  41607d:	pop    ebx
  41607e:	add    DWORD PTR [ecx-0x26],ecx
  416081:	lea    ecx,[eax]
  416083:	fld    DWORD PTR fs:[edi]
  416086:	outs   dx,DWORD PTR ds:[esi]
  416087:	ret    0xb051
  41608a:	mov    ebp,0x912e0b3b
  41608f:	test   al,0xd2
  416091:	sahf   
  416092:	das    
  416093:	add    ebp,edx
  416095:	push   ebx
  416096:	in     eax,0xd0
  416098:	dec    ebx
  416099:	mov    esi,0xf155316f
  41609e:	jg     0x416028
  4160a0:	xor    eax,0x48fcd558
  4160a5:	add    DWORD PTR [ecx+ecx*2+0x0],ebx
  4160a9:	pop    ebp
  4160aa:	rcl    DWORD PTR [edi-0x26],cl
  4160ad:	retf   0x1afc
  4160b0:	push   esi
  4160b1:	inc    eax
  4160b2:	xor    al,0x55
  4160b4:	(bad)  
  4160b5:	jmp    0x4160f4
  4160b7:	into   
  4160b8:	xor    ah,BYTE PTR [esi]
  4160ba:	js     0x416119
  4160bc:	sbb    eax,0x8db80d91
  4160c1:	sub    BYTE PTR ds:0x37d9d4e3,bl
  4160c7:	push   ss
  4160c8:	jmp    0x3df7:0x46deed45
  4160cf:	xor    bl,BYTE PTR [eax-0x5b]
  4160d2:	sahf   
  4160d3:	dec    edx
  4160d4:	(bad)  
  4160d5:	pop    ebx
  4160d6:	xor    BYTE PTR [esi+0x54],0x1b
  4160da:	mov    esi,DWORD PTR [esi+eiz*1-0x5f2005d3]
  4160e1:	mul    dh
  4160e3:	fs stos DWORD PTR es:[edi],eax
  4160e5:	push   eax
  4160e6:	rcr    edi,0xb8
  4160e9:	clc    
  4160ea:	or     cl,bh
  4160ec:	js     0x4160c1
  4160ee:	out    0xe8,eax
  4160f0:	outs   dx,DWORD PTR ds:[esi]
  4160f1:	(bad)  
  4160f2:	sbb    ecx,DWORD PTR [ecx-0x5a]
  4160f5:	add    al,0x76
  4160f7:	bound  esi,QWORD PTR [edx-0x5856e9e0]
  4160fd:	(bad)  
  4160ff:	rol    BYTE PTR [eax],cl
  416101:	jbe    0x4160fa
  416103:	aam    0xbd
  416105:	inc    edi
  416106:	imul   cl
  416108:	push   esp
  416109:	inc    eax
  41610a:	outs   dx,BYTE PTR ds:[esi]
  41610b:	adc    ah,BYTE PTR [ecx-0x236ad402]
  416111:	xor    DWORD PTR [edx],edx
  416113:	cmp    DWORD PTR [esp+eiz*8-0x5c],ebx
  416117:	add    DWORD PTR [edx+0x5a3569a5],ecx
  41611d:	(bad)  
  41611f:	and    al,0x1b
  416121:	cmp    BYTE PTR [ebp-0x55],bl
  416124:	mov    esi,0x5183e3b7
  416129:	outs   dx,DWORD PTR ds:[esi]
  41612a:	loopne 0x41614c
  41612c:	xchg   edx,eax
  41612d:	loopne 0x4160c3
  41612f:	add    BYTE PTR [eax+edi*1-0xe],0x78
  416134:	frstor [ebx+0x77]
  416137:	xchg   esi,eax
  416138:	das    
  416139:	call   0x12d2:0xa0c04a5b
  416140:	fdivr  QWORD PTR [ecx]
  416142:	sbb    ebp,eax
  416144:	je     0x41619b
  416146:	push   ss
  416147:	adc    eax,DWORD PTR [esp+eax*4]
  41614a:	xor    ebp,ebp
  41614c:	cmp    BYTE PTR [ebp-0x26df2bd8],bl
  416152:	mov    ch,0xb
  416154:	leave  
  416155:	pop    ebp
  416156:	push   ebx
  416157:	stos   BYTE PTR es:[edi],al
  416158:	aas    
  416159:	inc    edi
  41615a:	mov    ds:0xb99d512a,eax
  41615f:	sub    esp,ebx
  416161:	stos   DWORD PTR es:[edi],eax
  416162:	and    BYTE PTR [edx-0x2e],bl
  416165:	push   ds
  416166:	push   edx
  416167:	aas    
  416168:	push   esi
  416169:	ret    0xe09a
  41616c:	sbb    al,0x4
  41616e:	mov    ds:0xf75f611,eax
  416173:	adc    DWORD PTR [ebx-0x49673671],eax
  416179:	and    BYTE PTR [eax],dl
  41617b:	inc    esi
  41617c:	sub    DWORD PTR ds:0xfe9eff72,esp
  416182:	test   al,0x5
  416184:	pop    ebx
  416185:	(bad)  
  416187:	pop    edi
  416188:	call   0x99f6:0xf48224e9
  41618f:	stc    
  416190:	or     dh,ch
  416192:	mov    ecx,0x8b15246
  416197:	add    eax,0xd891fc76
  41619c:	mov    edx,0xbe1522ef
  4161a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161a2:	and    eax,0xf99f4dc6
  4161a7:	pop    edx
  4161a8:	ret    
  4161a9:	cmp    bh,BYTE PTR [edx-0x11]
  4161ac:	dec    esi
  4161ad:	sbb    ebp,eax
  4161af:	popf   
  4161b0:	aaa    
  4161b1:	push   edi
  4161b2:	mov    BYTE PTR [ecx],bh
  4161b4:	sbb    cl,BYTE PTR [ecx]
  4161b6:	pop    ss
  4161b7:	rcl    DWORD PTR ds:0x4dd43d2c,cl
  4161bd:	mov    ebx,0x3c56b616
  4161c2:	in     al,dx
  4161c3:	(bad)  
  4161c4:	fidiv  DWORD PTR [ecx-0x7d4f37eb]
  4161ca:	sub    BYTE PTR [edi+0x539d72f2],bl
  4161d0:	cdq    
  4161d1:	push   esp
  4161d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161d3:	and    ecx,DWORD PTR [esp+edx*4+0x7dab9fe2]
  4161da:	int    0xbf
  4161dc:	mov    ch,0x24
  4161de:	pop    ds
  4161df:	xchg   ecx,eax
  4161e0:	xchg   ecx,eax
  4161e1:	dec    ecx
  4161e2:	loopne 0x416214
  4161e4:	inc    esp
  4161e5:	out    dx,al
  4161e6:	push   es
  4161e7:	cli    
  4161e8:	ins    DWORD PTR es:[edi],dx
  4161e9:	jns    0x4161d4
  4161eb:	cmp    al,0x94
  4161ed:	cmp    al,0xfe
  4161ef:	and    al,0x86
  4161f1:	pop    edi
  4161f2:	outs   dx,BYTE PTR ds:[esi]
  4161f3:	jns    0x4161d5
  4161f5:	rcr    edi,0xfc
  4161f8:	and    cl,BYTE PTR [esi+0x5c02329b]
  4161fe:	shl    DWORD PTR [edx],0x25
  416201:	aaa    
  416202:	mov    eax,DWORD PTR [ecx+eiz*2-0x36]
  416206:	sbb    eax,0x4b61e42
  41620b:	or     al,0x77
  41620d:	ja     0x41622c
  41620f:	les    edx,FWORD PTR [ebx+0x19]
  416212:	xchg   esp,eax
  416213:	jp     0x416236
  416215:	pop    esp
  416216:	xor    al,0xfa
  416218:	dec    eax
  416219:	les    ebp,FWORD PTR ss:[edx]
  41621c:	mov    bl,0xfd
  41621e:	inc    ecx
  41621f:	mov    al,0x91
  416221:	out    0xf9,eax
  416223:	hlt    
  416224:	inc    ebx
  416225:	sub    dl,BYTE PTR [edi-0x1331b689]
  41622b:	sub    DWORD PTR [ebp-0x4183637e],ecx
  416231:	(bad)  
  416232:	xchg   DWORD PTR [edx],edx
  416234:	pop    ds
  416235:	or     ah,ch
  416237:	and    al,0x0
  416239:	mov    dl,0xcf
  41623b:	or     dh,al
  41623d:	ja     0x41626e
  41623f:	sub    dl,BYTE PTR [ebp+0x7]
  416242:	adc    DWORD PTR [eax-0x5d9e28c2],0x4ed35c3d
  41624c:	test   BYTE PTR [ebp-0x7c],cl
  41624f:	rcr    DWORD PTR [edi-0x379a806e],1
  416255:	fimul  WORD PTR [edx+0x4]
  416258:	out    0x6d,al
  41625a:	and    edi,DWORD PTR [edx+0x0]
  41625d:	daa    
  41625e:	push   0x3a80d55
  416263:	mov    WORD PTR [ecx],cs
  416265:	add    BYTE PTR [edx+0x2d],al
  416268:	add    al,0x6e
  41626a:	out    0x57,eax
  41626c:	mov    esi,0xfe67e1d5
  416271:	(bad)  
  416272:	lock xor eax,0x80ef4d23
  416278:	leave  
  416279:	rcl    DWORD PTR [ebp-0x50],0x70
  41627d:	loop   0x41620c
  41627f:	xchg   ecx,eax
  416280:	call   0x4374:0x47125281
  416287:	stos   DWORD PTR es:[edi],eax
  416288:	loop   0x41627e
  41628a:	adc    ebx,DWORD PTR [edi-0x6f6d8419]
  416290:	cmp    edi,edi
  416292:	fs jmp 0x4162b1
  416295:	xor    al,0xe3
  416297:	sub    bl,BYTE PTR [ebx+0x65bff4c9]
  41629d:	ror    DWORD PTR [esi-0x28],1
  4162a0:	lock in al,dx
  4162a2:	fcmovne st,st(5)
  4162a4:	sub    edx,DWORD PTR [esp+ecx*1+0x1ce62ae0]
  4162ab:	js     0x416283
  4162ad:	aad    0x71
  4162af:	into   
  4162b0:	int    0xa1
  4162b2:	dec    edi
  4162b3:	fild   WORD PTR [eax-0x3fb98392]
  4162b9:	mov    WORD PTR [ecx+eiz*2],?
  4162bc:	push   esi
  4162bd:	jg     0x416320
  4162bf:	cmp    DWORD PTR [edx-0x1df4024c],esi
  4162c5:	clc    
  4162c6:	(bad)  
  4162c7:	cmp    al,0x29
  4162c9:	aas    
  4162ca:	xor    ch,bh
  4162cc:	ja     0x4162fa
  4162ce:	adc    esp,DWORD PTR [eax+0x67]
  4162d1:	inc    esi
  4162d2:	push   edi
  4162d3:	sbb    ebp,eax
  4162d5:	(bad)  
  4162d6:	adc    DWORD PTR [ebp+ecx*2-0x4d],0x9ebf6063
  4162de:	push   0x6e
  4162e0:	inc    edx
  4162e1:	or     DWORD PTR [edx+ecx*8],edx
  4162e4:	or     DWORD PTR [edx+esi*4-0x48555710],ebx
  4162eb:	mov    esp,0x54d3ce90
  4162f0:	dec    edi
  4162f1:	imul   esi,DWORD PTR [ebx-0x4a],0xffffff93
  4162f5:	pop    es
  4162f6:	pop    esp
  4162f7:	test   ebp,ebp
  4162f9:	pop    edi
  4162fa:	fsub   QWORD PTR [ebp-0x50]
  4162fd:	adc    BYTE PTR [edi+0x54],dh
  416300:	xlat   BYTE PTR ds:[ebx]
  416301:	neg    DWORD PTR [eax]
  416303:	(bad)
  416306:	ror    DWORD PTR [ebp-0x26],cl
  416309:	mov    edi,?
  41630b:	jge    0x41633e
  41630d:	aam    0x41
  41630f:	and    BYTE PTR [esi+0x4a],bl
  416312:	das    
  416313:	add    esi,DWORD PTR [edx+esi*2-0x79]
  416317:	imul   esi,DWORD PTR [eax-0x593df0e5],0xffffffb9
  41631e:	out    0xd,al
  416320:	cli    
  416321:	jl     0x41637d
  416323:	std    
  416324:	(bad)  
  416326:	inc    ecx
  416327:	call   0x31ca:0xb21f6e0a
  41632e:	sub    bh,dl
  416330:	pop    ecx
  416331:	sub    DWORD PTR [esi+0x16],edi
  416334:	int3   
  416335:	int    0x4d
  416337:	mov    ah,0xe7
  416339:	stc    
  41633a:	mov    edx,0x15147b12
  41633f:	dec    edi
  416340:	(bad)  
  416341:	call   0xdd163ad3
  416346:	addr16 jle 0x41630d
  416349:	xchg   ah,bh
  41634b:	mov    ecx,0xb6c70565
  416350:	mov    dl,0xa2
  416352:	lock cmp al,0x71
  416355:	mov    bh,0x1a
  416357:	sub    al,al
  416359:	jne    0x4162df
  41635b:	nop
  41635c:	mov    ds:0x85501f8b,al
  416361:	call   FWORD PTR [ecx-0x7de8b476]
  416367:	push   ss
  416368:	and    ebp,edx
  41636a:	jnp    0x41635f
  41636c:	dec    ecx
  41636e:	ud2    
  416370:	mov    dl,0x3
  416372:	dec    ecx
  416373:	mov    ecx,0x75e0572c
  416378:	in     eax,dx
  416379:	mov    edx,edi
  41637b:	sti    
  41637c:	pusha  
  41637d:	retf   0x5859
  416380:	xchg   edi,eax
  416381:	sub    BYTE PTR [ebx-0x3bdc2439],bl
  416387:	adc    dh,bl
  416389:	sbb    ebx,ebx
  41638b:	out    dx,al
  41638c:	pop    edx
  41638d:	jmp    0xf432:0x55c2d979
  416394:	test   DWORD PTR [edi+0x22],eax
  416397:	or     eax,0x1cc4189f
  41639c:	or     DWORD PTR [edi],ebx
  41639e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41639f:	or     esp,ecx
  4163a1:	call   ebx
  4163a3:	jmp    0x41640c
  4163a5:	das    
  4163a6:	cmp    BYTE PTR [esi-0x2f59a58a],dl
  4163ac:	(bad)  
  4163ad:	scas   al,BYTE PTR es:[edi]
  4163ae:	nop
  4163af:	imul   ecx,DWORD PTR [eax],0xffffffb4
  4163b2:	mov    eax,0x949ed47d
  4163b7:	sub    DWORD PTR [ebp+0x2757eea6],ebp
  4163bd:	cmp    ecx,DWORD PTR [esi-0x658646f9]
  4163c3:	je     0x416398
  4163c5:	xor    bl,BYTE PTR [edi+0x14]
  4163c8:	clc    
  4163c9:	scas   al,BYTE PTR es:[edi]
  4163ca:	sub    DWORD PTR [esi],esi
  4163cc:	sub    dh,0xc1
  4163cf:	ss jmp 0x1c290135
  4163d5:	adc    al,0xe8
  4163d7:	adc    edi,DWORD PTR [ebx+0x3a]
  4163da:	ins    DWORD PTR es:[edi],dx
  4163db:	inc    edx
  4163dc:	inc    ebx
  4163dd:	jb     0x4163a7
  4163df:	add    DWORD PTR [esi],ebp
  4163e1:	gs or  eax,0xc637aad9
  4163e7:	(bad)  [edi]
  4163e9:	pushf  
  4163ea:	mov    esp,DWORD PTR [edi+esi*2+0x78]
  4163ee:	inc    edi
  4163ef:	adc    eax,0x6f9e33f5
  4163f4:	inc    eax
  4163f5:	les    ebp,FWORD PTR [esp+ebp*1]
  4163f8:	std    
  4163f9:	jo     0x416473
  4163fb:	(bad)  
  4163fc:	aaa    
  4163fd:	dec    DWORD PTR [ecx]
  4163ff:	jb     0x4163c1
  416401:	es fdivp st(5),st
  416404:	push   ecx
  416405:	jecxz  0x416480
  416407:	mov    edi,esi
  416409:	lock adc BYTE PTR [ebp-0x56],dh
  41640d:	jb     0x416399
  41640f:	or     DWORD PTR [ebx],ebp
  416411:	push   es
  416412:	dec    ebp
  416413:	(bad)  
  416414:	clc    
  416415:	mov    ss,WORD PTR [edi-0x24]
  416418:	add    edx,DWORD PTR [ebx+edi*1-0x4cfc9d90]
  41641f:	iret   
  416420:	cmp    eax,0x716e7558
  416425:	xor    al,0x2d
  416427:	je     0x416490
  416429:	cmp    eax,0xb237410b
  41642e:	mov    ds:0xa866eab6,eax
  416433:	js     0x41644b
  416435:	ds ss pop edi
  416438:	jl     0x41645c
  41643a:	push   esi
  41643b:	mov    ecx,DWORD PTR [esi]
  41643d:	ss loopne 0x4163e0
  416440:	sub    BYTE PTR [esi],ch
  416442:	inc    esi
  416443:	retf   0xe966
  416446:	add    cl,BYTE PTR [edi]
  416448:	jl     0x4164b1
  41644a:	lods   al,BYTE PTR ds:[esi]
  41644b:	add    BYTE PTR [eax+0x35],0x1a
  41644f:	mov    eax,ds:0x9e77a6a0
  416454:	pop    esp
  416455:	sbb    esp,DWORD PTR [edi]
  416457:	ss loope 0x4164a6
  41645a:	test   edx,eax
  41645c:	mov    esi,DWORD PTR [esi+0x2]
  41645f:	jle    0x41643f
  416461:	imul   BYTE PTR [ebp-0x5fc44ce5]
  416467:	push   0xf2144558
  41646c:	xchg   esp,eax
  41646d:	inc    edi
  41646f:	test   eax,0xeea06598
  416474:	int    0xa4
  416476:	cmc    
  416477:	imul   esp,DWORD PTR [edi+0x5c02236],0x85a57511
  416481:	in     al,dx
  416482:	popa   
  416483:	and    bh,BYTE PTR [ecx-0x13]
  416486:	mov    edx,0xe6bff30a
  41648b:	mov    al,0xd3
  41648d:	jb     0x4164a8
  41648f:	sub    eax,0x56353d53
  416494:	jae    0x4164f1
  416496:	dec    ecx
  416497:	loopne 0x4164ce
  416499:	dec    edx
  41649a:	sub    al,0x2c
  41649d:	fdiv   st,st(1)
  41649f:	int    0xb7
  4164a1:	cmp    dl,cl
  4164a3:	dec    ebx
  4164a4:	dec    ebp
  4164a5:	pop    ebx
  4164a6:	sbb    al,0xbb
  4164a8:	mov    esp,0xaa809164
  4164ad:	jo     0x4164b9
  4164af:	adc    al,0x44
  4164b1:	push   edi
  4164b2:	cmp    DWORD PTR [ebp+ebp*2-0x27],0x54240e29
  4164ba:	div    BYTE PTR [esi]
  4164bc:	shr    edi,0x9
  4164bf:	push   edx
  4164c0:	and    bl,ch
  4164c2:	jmp    FWORD PTR [esi-0x43eddc72]
  4164c8:	pop    ss
  4164c9:	and    BYTE PTR [ebp-0xa],dh
  4164cc:	mov    bl,0x8d
  4164ce:	imul   eax,DWORD PTR [edi],0x581f6ab7
  4164d4:	push   edi
  4164d5:	aaa    
  4164d6:	or     edi,0x5e
  4164d9:	repz add BYTE PTR [ecx+0x9983d14],cl
  4164e0:	fimul  WORD PTR [ecx+0x58]
  4164e3:	data16 fdiv DWORD PTR [edx+eiz*8+0x628c355e]
  4164eb:	out    0x54,al
  4164ed:	jnp    0x41647e
  4164ef:	loop   0x4164df
  4164f1:	or     al,0x56
  4164f3:	push   ebx
  4164f4:	add    al,0x4d
  4164f6:	mov    eax,ds:0x1de0062d
  4164fb:	(bad)  
  4164fc:	mov    esp,0xa0314911
  416501:	je     0x4164d8
  416503:	mov    BYTE PTR [edi],bl
  416505:	shr    DWORD PTR [ebx+eiz*4],cl
  416508:	dec    esp
  416509:	mov    cl,0x4a
  41650b:	jnp    0x416568
  41650d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41650e:	int3   
  41650f:	jno    0x416571
  416511:	mov    eax,ds:0xed02ff22
  416516:	loop   0x416502
  416518:	adc    dl,0xb5
  41651b:	pop    edx
  41651c:	dec    ecx
  41651d:	aas    
  41651e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41651f:	imul   ecx,DWORD PTR [edx],0x42
  416522:	adc    al,0x2d
  416524:	lock pop ecx
  416526:	mov    ecx,0x9f24a350
  41652b:	ss test al,0xee
  41652e:	test   al,cl
  416530:	adc    al,0xe2
  416532:	cmp    BYTE PTR [ecx+0x7b],bl
  416535:	nop
  416536:	outs   dx,DWORD PTR ds:[esi]
  416537:	lods   eax,DWORD PTR ds:[esi]
  416538:	js     0x4164fd
  41653a:	mov    cl,0xd0
  41653c:	std    
  41653d:	aam    0xc1
  41653f:	ret    0x73d2
  416542:	xchg   ecx,eax
  416543:	fdivr  QWORD PTR [esp+edx*2]
  416546:	jecxz  0x41652c
  416548:	cmp    bl,bl
  41654a:	cmp    al,0x27
  41654c:	dec    eax
  41654d:	rcr    ah,0x42
  416550:	ja     0x41655d
  416552:	arpl   ax,dx
  416554:	push   esp
  416555:	add    ah,BYTE PTR [ebx+0x870bf19]
  41655b:	mov    eax,ds:0x3403e305
  416560:	into   
  416561:	add    esi,eax
  416563:	inc    ebp
  416564:	daa    
  416565:	out    dx,al
  416566:	popa   
  416567:	call   0x738d:0xcf5ba9b
  41656e:	push   edi
  41656f:	inc    ecx
  416570:	push   eax
  416571:	cli    
  416572:	fnstsw WORD PTR [esi]
  416574:	retf   
  416575:	test   DWORD PTR [esi+0x53],eax
  416578:	dec    ebx
  416579:	nop
  41657a:	js     0x41653b
  41657c:	(bad)
  416580:	cmp    cl,ah
  416582:	adc    ch,ch
  416584:	scas   al,BYTE PTR es:[edi]
  416585:	and    al,0x8d
  416587:	leave  
  416588:	pop    es
  416589:	pop    ss
  41658a:	lds    edx,FWORD PTR [ebp-0x66]
  41658d:	fdiv   DWORD PTR [ebx]
  41658f:	(bad)  
  416590:	cmp    edi,DWORD PTR [ebx]
  416592:	adc    al,bl
  416594:	fcmovnbe st,st(3)
  416596:	ret    0xd4f9
  416599:	lods   eax,DWORD PTR cs:[esi]
  41659b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41659c:	call   0x8201:0x95677664
  4165a3:	jmp    0x416600
  4165a5:	inc    esp
  4165a6:	ds retf 
  4165a8:	out    dx,al
  4165a9:	(bad)  
  4165aa:	xor    ebx,DWORD PTR ds:0xc73cd5ee
  4165b0:	xchg   esi,eax
  4165b1:	mov    BYTE PTR [ebx-0x5c],dh
  4165b4:	sahf   
  4165b5:	imul   esi,DWORD PTR [edi+0xeb1d739],0xb0f11da
  4165bf:	push   cs
  4165c0:	scas   eax,DWORD PTR es:[edi]
  4165c1:	test   DWORD PTR ds:0x26d99117,ecx
  4165c7:	inc    ebp
  4165c8:	mov    esp,0xfecb45cb
  4165cd:	(bad)  
  4165ce:	sbb    al,BYTE PTR cs:[ecx+0x462c5f5e]
  4165d5:	adc    DWORD PTR [edi],0xa740ee16
  4165db:	call   FWORD PTR [eax-0x12519447]
  4165e1:	mov    DWORD PTR [edx+0x4ac2e557],ecx
  4165e7:	push   esp
  4165e8:	jns    0x416594
  4165ea:	dec    eax
  4165eb:	jnp    0x4165f1
  4165ed:	dec    edi
  4165ee:	jo     0x416664
  4165f0:	jge    0x416654
  4165f2:	dec    edx
  4165f3:	xor    edi,DWORD PTR [esi-0x65]
  4165f6:	stc    
  4165f7:	mov    eax,0x38796123
  4165fc:	xchg   edx,eax
  4165fd:	es push edx
  4165ff:	or     ch,BYTE PTR [eax+ecx*8-0x119af368]
  416606:	jge    0x416637
  416608:	dec    esp
  416609:	mov    DWORD PTR [ebp-0x68],esi
  41660c:	sub    al,0x2b
  41660e:	lahf   
  41660f:	es (bad) 
  416611:	xlat   BYTE PTR ds:[ebx]
  416612:	sti    
  416613:	adc    BYTE PTR [ebx],bh
  416615:	test   BYTE PTR [edi-0x18],bh
  416618:	push   eax
  416619:	test   BYTE PTR [ebp-0x4c502291],0x3b
  416620:	adc    al,BYTE PTR [ebx]
  416622:	scas   al,BYTE PTR es:[edi]
  416623:	femms  
  416625:	jbe    0x41668d
  416627:	retf   0x27eb
  41662a:	int    0x10
  41662c:	push   0x7d
  41662e:	sub    eax,0x6531db0e
  416633:	jl     0x41660e
  416635:	ds ins DWORD PTR es:[edi],dx
  416637:	adc    BYTE PTR [edi+0x61c225f0],dl
  41663d:	dec    edx
  41663e:	mov    BYTE PTR [esi-0x233fe769],dl
  416644:	mov    ebp,DWORD PTR [ecx-0x2cf723b7]
  41664a:	or     eax,0x5c227752
  41664f:	jae    0x416687
  416651:	cmc    
  416652:	mov    edi,0x59cf3f55
  416657:	call   0xdbb2:0x230c6359
  41665e:	outs   dx,DWORD PTR ds:[esi]
  41665f:	int    0xb8
  416661:	dec    edx
  416662:	sbb    BYTE PTR [ebp+0x1],dl
  416665:	jmp    0xa83a:0x3039aa4e
  41666c:	pop    es
  41666d:	les    eax,FWORD PTR ds:0x468b1b8b
  416673:	test   BYTE PTR [esi+0x71],bl
  416676:	and    al,0xb2
  416678:	dec    ebp
  416679:	push   edi
  41667a:	ret    
  41667b:	jb     0x416698
  41667d:	jg     0x416602
  41667f:	in     al,dx
  416680:	je     0x416613
  416682:	and    DWORD PTR [eax-0x2f],ebx
  416685:	ror    al,1
  416687:	mov    ds:0x574eb1a0,eax
  41668c:	aaa    
  41668d:	js     0x41661f
  41668f:	inc    edi
  416690:	(bad)  
  416691:	iret   
  416692:	push   ecx
  416693:	or     al,0xf3
  416695:	rol    dh,0x62
  416698:	push   edi
  416699:	lods   al,BYTE PTR ds:[esi]
  41669a:	enter  0xc560,0xb
  41669e:	cdq    
  41669f:	sub    al,0xc6
  4166a1:	std    
  4166a2:	popf   
  4166a3:	mov    esi,ebp
  4166a5:	push   eax
  4166a6:	daa    
  4166a7:	fnsave [eax]
  4166a9:	xchg   BYTE PTR [ebp+0x2f],dh
  4166ac:	mov    ebx,0x203ab999
  4166b1:	and    eax,0xa690c71e
  4166b6:	mov    al,BYTE PTR [ecx+0x45]
  4166b9:	outs   dx,BYTE PTR ds:[esi]
  4166ba:	inc    edx
  4166bb:	out    0x72,al
  4166bd:	scas   al,BYTE PTR es:[edi]
  4166be:	test   BYTE PTR [esi],0x30
  4166c1:	xor    eax,0xbdf5483b
  4166c6:	int3   
  4166c7:	ins    BYTE PTR es:[edi],dx
  4166c8:	sub    DWORD PTR [ebx],edi
  4166ca:	pop    edi
  4166cb:	in     al,0xbf
  4166cd:	loopne 0x4166f6
  4166cf:	inc    edi
  4166d0:	push   esi
  4166d1:	xchg   BYTE PTR [edx+edi*8],bh
  4166d4:	pop    esi
  4166d5:	push   ecx
  4166d6:	pop    ebx
  4166d7:	push   ebp
  4166d8:	mov    ss,WORD PTR [esi+0x55c57946]
  4166de:	mov    ds:0x654a6886,al
  4166e3:	xchg   ebx,eax
  4166e4:	xchg   DWORD PTR [ebp+ecx*8+0x60],edi
  4166e8:	leave  
  4166e9:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166eb:	mov    esp,esp
  4166ed:	and    ebx,DWORD PTR [ebp+0x2b676f2d]
  4166f3:	jo     0x4166cb
  4166f5:	(bad)  
  4166f6:	pop    edi
  4166f7:	sub    al,0x91
  4166f9:	fstp   DWORD PTR [eax]
  4166fb:	add    al,0x31
  4166fd:	xor    BYTE PTR [eax],al
  4166ff:	je     0x41668a
  416701:	je     0x416690
  416703:	lods   al,BYTE PTR ds:[esi]
  416704:	add    BYTE PTR [esi-0x8],ch
  416707:	call   0xf6394d97
  41670c:	xchg   BYTE PTR [edi+0x5e],cl
  41670f:	ret    
  416710:	bound  esi,QWORD PTR [edi+0x65]
  416713:	sbb    al,0xdc
  416715:	mov    al,ds:0xbbc8387
  41671a:	xor    eax,0x925628f0
  41671f:	div    dh
  416721:	xor    BYTE PTR [esi+0x72],dh
  416724:	jg     0x41678e
  416726:	(bad)  
  416727:	(bad)  
  416728:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416729:	fist   WORD PTR [eax-0x7be9cbd8]
  41672f:	fisttp WORD PTR [eax]
  416731:	mov    esp,0xbfd3b86f
  416736:	inc    esi
  416737:	jle    0x41677d
  416739:	sbb    ch,BYTE PTR [eax-0x33]
  41673c:	je     0x4166eb
  41673e:	and    ecx,esi
  416740:	xor    DWORD PTR [eax+0x127f3008],ebx
  416746:	inc    ebx
  416747:	imul   eax,DWORD PTR [eax],0xffffff9e
  41674a:	sub    ah,BYTE PTR [edx]
  41674c:	in     al,0x19
  41674e:	pusha  
  41674f:	call   0xb6b09428
  416754:	fiadd  WORD PTR [esi+eiz*2+0x26b7bc22]
  41675b:	bound  ebx,QWORD PTR [edx+0x1b34443e]
  416761:	mov    ebp,0x3d2ba54d
  416766:	ss xor eax,0xe348dcd3
  41676c:	test   DWORD PTR [edx],esp
  41676e:	ss pop edx
  416770:	mov    edi,DWORD PTR [eax]
  416772:	lock imul DWORD PTR [ecx+0x2059987c]
  416779:	or     eax,0x246f3857
  41677e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41677f:	xor    BYTE PTR [ebx-0x46],0x7f
  416783:	popf   
  416784:	jae    0x416718
  416786:	jns    0x416797
  416788:	rep ins BYTE PTR es:[edi],dx
  41678a:	pop    ebp
  41678b:	jg     0x416718
  41678d:	in     al,dx
  41678e:	jp     0x4167c2
  416790:	js     0x4167c9
  416792:	mov    ecx,0x55671f25
  416797:	xor    DWORD PTR [ebx-0x24],edx
  41679a:	imul   eax,edx,0xaed2bdfe
  4167a0:	push   cs
  4167a1:	fidivr DWORD PTR [ecx+ebp*8-0xf]
  4167a5:	pop    eax
  4167a6:	inc    eax
  4167a7:	pop    edi
  4167a8:	cwde   
  4167a9:	lods   al,BYTE PTR ds:[esi]
  4167aa:	out    0x9d,al
  4167ac:	daa    
  4167ad:	add    ah,ah
  4167af:	lahf   
  4167b0:	mov    dl,0x6d
  4167b2:	out    0x1c,eax
  4167b4:	add    DWORD PTR [edx-0x74ad8e3f],eax
  4167ba:	inc    edx
  4167bb:	cmp    BYTE PTR [edi],cl
  4167bd:	sub    al,0x31
  4167bf:	xchg   edi,eax
  4167c0:	and    al,0x12
  4167c2:	inc    esp
  4167c3:	(bad)  
  4167c4:	mov    eax,0x5764ec15
  4167c9:	in     al,0xc5
  4167cb:	push   es
  4167cc:	cwde   
  4167cd:	test   BYTE PTR [ebp+0x68],dl
  4167d0:	cli    
  4167d1:	mov    edi,0x4cdc903f
  4167d6:	adc    dl,0xef
  4167d9:	frstor [eax-0x6c]
  4167dc:	inc    edx
  4167dd:	addr16 or eax,0x4f89d547
  4167e3:	test   DWORD PTR ds:0x72033ef0,0x760ac720
  4167ed:	in     eax,0xfa
  4167ef:	sub    BYTE PTR [ebp+0x76],al
  4167f2:	repz mov al,0xe7
  4167f5:	jp     0x41683b
  4167f7:	retf   
  4167f8:	mov    esp,0x6353e02a
  4167fd:	cmc    
  4167fe:	mov    eax,0x94c80fa5
  416803:	in     al,0x5a
  416805:	rcl    BYTE PTR [eax+edi*4],0x26
  416809:	sti    
  41680a:	push   es
  41680b:	sbb    edx,DWORD PTR [eax]
  41680d:	mov    ecx,0xc4f28a83
  416812:	jge    0x41682d
  416814:	shl    BYTE PTR [ebp-0x28],cl
  416817:	xchg   esi,eax
  416818:	(bad)  
  416819:	dec    esi
  41681a:	or     DWORD PTR [esi+0x3ed89550],edx
  416820:	repz sbb al,0xf
  416823:	pop    es
  416824:	cwde   
  416825:	imul   ebp
  416827:	xor    al,dl
  416829:	cmp    WORD PTR [ebx+eiz*2],0xdbae
  41682f:	(bad)  
  416830:	stc    
  416831:	jmp    ecx
  416833:	and    DWORD PTR [edx-0x143d79b0],ebp
  416839:	mov    gs,WORD PTR [edx]
  41683b:	ficom  DWORD PTR [esi-0x24]
  41683e:	jnp    0x4167cb
  416840:	data16 (bad) 
  416842:	sahf   
  416843:	push   cs
  416844:	mov    BYTE PTR [esi+0xb],bh
  416847:	xchg   esp,eax
  416848:	outs   dx,DWORD PTR ds:[esi]
  416849:	es push ss
  41684b:	in     eax,0xe9
  41684d:	pop    ds
  41684e:	push   esi
  41684f:	inc    ecx
  416850:	icebp  
  416851:	popa   
  416852:	dec    esi
  416853:	aam    0x1b
  416855:	scas   al,BYTE PTR es:[edi]
  416856:	jmp    0x416808
  416858:	test   BYTE PTR [esi+0x2a7f748a],0xf9
  41685f:	pop    edx
  416860:	dec    ebp
  416861:	or     al,ch
  416863:	inc    ecx
  416864:	push   ebp
  416865:	in     al,0x22
  416867:	cmp    al,0x1a
  416869:	das    
  41686a:	test   DWORD PTR [ecx+esi*4],0x6a1ea2ce
  416871:	cmp    bh,BYTE PTR cs:[ebx+0x37]
  416875:	pop    edx
  416876:	jae    0x41680c
  416878:	xchg   esp,eax
  416879:	pushf  
  41687a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41687b:	xor    ch,cl
  41687d:	or     dh,dl
  41687f:	mov    esp,0x836342cb
  416884:	test   DWORD PTR [eax+ebp*2-0x32d27027],esi
  41688b:	(bad)  
  41688c:	mov    esi,0xaf8111ca
  416891:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416892:	push   ds
  416893:	in     eax,0xc4
  416895:	adc    ebx,DWORD PTR [ecx-0x28]
  416898:	xchg   ebp,eax
  416899:	stos   BYTE PTR es:[edi],al
  41689a:	or     dh,al
  41689c:	mov    ds:0xc904df0b,eax
  4168a1:	xchg   BYTE PTR [esi+edx*8-0x5874170b],al
  4168a8:	rol    BYTE PTR [esi+0x68],cl
  4168ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168ac:	outs   dx,BYTE PTR ds:[esi]
  4168ad:	cwde   
  4168ae:	mov    ecx,0x6578b858
  4168b3:	ret    0x5491
  4168b6:	ret    0xbd66
  4168b9:	and    eax,0xfd158056
  4168be:	sbb    DWORD PTR [edx+0x6],ecx
  4168c1:	pop    ds
  4168c2:	out    dx,eax
  4168c3:	fs (bad) 
  4168c6:	push   ebx
  4168c7:	shl    BYTE PTR [ebx-0x1e],1
  4168ca:	jbe    0x4168ea
  4168cc:	push   esp
  4168cd:	mov    bl,0x8
  4168cf:	jb     0x416888
  4168d1:	pop    es
  4168d2:	inc    edi
  4168d3:	mov    BYTE PTR [edx-0x2e47bb8b],bh
  4168d9:	push   es
  4168da:	ret    0xa8f
  4168dd:	lds    eax,FWORD PTR [edx]
  4168df:	sti    
  4168e0:	push   eax
  4168e1:	mov    edx,0x8f9ef60c
  4168e6:	cmp    al,0x5b
  4168e8:	test   DWORD PTR [ebp-0x6faa99f9],esp
  4168ee:	sar    DWORD PTR [ebx],0x4b
  4168f1:	or     edi,ecx
  4168f3:	and    eax,0x7631b1ab
  4168f8:	xchg   esi,eax
  4168f9:	iret   
  4168fa:	sbb    bl,BYTE PTR [ecx+0x63]
  4168fd:	js     0x4168c5
  4168ff:	xchg   edi,eax
  416900:	push   esi
  416901:	or     al,0x62
  416903:	mov    WORD PTR [esi-0x1e],fs
  416906:	cmc    
  416907:	add    eax,0x786f526f
  41690c:	into   
  41690d:	sub    eax,DWORD PTR [esi+0xfd1c7e5]
  416913:	push   0x66
  416915:	sbb    BYTE PTR [esi+0x73],ah
  416918:	out    dx,eax
  416919:	dec    edi
  41691a:	xchg   edx,eax
  41691b:	cmp    cl,ch
  41691d:	jl     0x41696f
  41691f:	sub    al,BYTE PTR [eax+0x4]
  416922:	rcl    DWORD PTR [ebp+0x2c8c2967],0x7d
  416929:	fnsave [ebx-0x2]
  41692c:	or     BYTE PTR [ecx+edx*8],0xe8
  416930:	mov    edi,0x300926bd
  416935:	add    DWORD PTR [ecx+0x70ef4e59],ebx
  41693b:	adc    eax,0xeee04e5a
  416940:	repnz mov esp,0xe83ddc59
  416946:	(bad)  
  416947:	aaa    
  416948:	fist   DWORD PTR [eax-0x37]
  41694b:	shl    DWORD PTR [ecx+esi*8+0x64],0x74
  416950:	xadd   DWORD PTR [edx],esp
  416953:	scas   al,BYTE PTR es:[edi]
  416954:	in     eax,dx
  416955:	cmp    eax,0x22072b9c
  41695a:	mov    ebp,0x2f13673a
  41695f:	iret   
  416960:	stos   DWORD PTR es:[edi],eax
  416961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416962:	(bad)  
  416963:	adc    eax,0xf494f19a
  416968:	js     0x4169c0
  41696a:	xchg   ebp,eax
  41696b:	pop    edi
  41696c:	popa   
  41696d:	test   eax,0xed2303a4
  416972:	mul    BYTE PTR [edx]
  416974:	mov    dh,BYTE PTR [esi-0x2899026a]
  41697a:	sbb    al,cl
  41697c:	hlt    
  41697d:	cmc    
  41697e:	(bad)
  416981:	sbb    edi,DWORD PTR [ecx-0x12]
  416984:	xchg   edx,eax
  416985:	or     BYTE PTR [ebx+0x3c],bh
  416988:	xor    al,0x9
  41698a:	cli    
  41698b:	loop   0x4169d3
  41698d:	fimul  WORD PTR [edi+esi*8]
  416990:	inc    ebx
  416991:	or     esi,ecx
  416993:	and    bl,ch
  416995:	repnz sub eax,0x2609046d
  41699b:	pop    bp
  41699d:	xor    al,0x20
  41699f:	sbb    dh,BYTE PTR [ebx+ecx*8-0x3b]
  4169a3:	jb     0x4169ea
  4169a5:	sbb    BYTE PTR [esi+0x1],cl
  4169a8:	jns    0x416a1c
  4169aa:	cmovne esp,ebx
  4169ad:	lock xor DWORD PTR [eax+0x76],0xb77e341b
  4169b5:	inc    eax
  4169b6:	and    al,BYTE PTR [eax+0x3398ad7e]
  4169bc:	in     al,dx
  4169bd:	sbb    dl,BYTE PTR [edi]
  4169bf:	jmp    0xd8f:0x49d1818c
  4169c6:	pop    edi
  4169c7:	dec    ecx
  4169c8:	push   edi
  4169c9:	mov    ds:0x6563a392,eax
  4169ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169cf:	leave  
  4169d0:	outs   dx,DWORD PTR ds:[esi]
  4169d1:	sbb    ebx,edi
  4169d3:	test   eax,0xcdef58b1
  4169d8:	cmc    
  4169d9:	xchg   esi,eax
  4169da:	dec    ebp
  4169db:	push   eax
  4169dc:	lods   eax,DWORD PTR ds:[esi]
  4169dd:	cmp    edx,edi
  4169df:	ror    DWORD PTR [ecx],1
  4169e1:	stc    
  4169e2:	cmp    esp,DWORD PTR [esi-0xc]
  4169e5:	xchg   ebx,ebp
  4169e7:	call   DWORD PTR [ebp+0x6240a410]
  4169ed:	neg    DWORD PTR [eax]
  4169ef:	xor    eax,0xfed070ff
  4169f4:	xor    DWORD PTR [ecx],eax
  4169f6:	inc    esi
  4169f7:	and    ebx,DWORD PTR [ebx-0x79]
  4169fa:	or     BYTE PTR [ebx+eiz*1+0x73],bl
  4169fe:	call   0xbaa8:0x5ec86a0b
  416a05:	add    ch,bh
  416a07:	inc    edx
  416a08:	jmp    0x416a3f
  416a0a:	imul   eax,esi,0x10
  416a0d:	into   
  416a0e:	cmp    al,0xaf
  416a10:	rcl    DWORD PTR [ebx],1
  416a12:	inc    eax
  416a13:	test   al,0xb
  416a15:	pusha  
  416a16:	mov    dl,0xa2
  416a18:	mov    BYTE PTR [edi+0x1a],dl
  416a1b:	xchg   ebp,eax
  416a1c:	rol    edx,cl
  416a1e:	cld    
  416a1f:	popa   
  416a20:	mov    dl,0x9d
  416a22:	cmp    BYTE PTR [ebx+0x7d],0x87
  416a26:	retf   
  416a27:	push   0x70
  416a29:	stos   BYTE PTR es:[edi],al
  416a2a:	jb     0x416a64
  416a2c:	sbb    al,0x5c
  416a2e:	xor    ebx,ebx
  416a30:	pop    ecx
  416a31:	addr16 or esi,eax
  416a34:	popf   
  416a35:	and    BYTE PTR [eax],0x3b
  416a38:	test   BYTE PTR [edi+0x5efdcb05],dh
  416a3e:	je     0x4169de
  416a40:	pop    ss
  416a41:	stc    
  416a42:	dec    esi
  416a43:	lods   eax,DWORD PTR ds:[esi]
  416a44:	lahf   
  416a45:	aam    0xd4
  416a47:	pop    ds
  416a48:	int3   
  416a49:	and    esi,edx
  416a4b:	clc    
  416a4c:	mov    bh,0x9f
  416a4e:	inc    ecx
  416a4f:	push   ss
  416a50:	inc    esi
  416a51:	inc    ebx
  416a52:	push   ecx
  416a53:	inc    esp
  416a54:	jle    0x416a3f
  416a56:	je     0x416a11
  416a58:	add    eax,0x54d424b1
  416a5d:	inc    esp
  416a5e:	sbb    edx,DWORD PTR [ebp-0x5d75766f]
  416a64:	pop    esi
  416a65:	ficomp WORD PTR [esi-0x7b974e91]
  416a6b:	xor    ch,BYTE PTR [edx]
  416a6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a6e:	jp     0x416aee
  416a70:	loope  0x4169fa
  416a72:	out    dx,eax
  416a73:	cmp    bl,dl
  416a75:	cmp    al,0x1a
  416a77:	adc    esp,DWORD PTR [edi+0x49]
  416a7a:	arpl   WORD PTR [ebx-0x4db21e70],cx
  416a80:	mov    esi,0xdbc7b9d9
  416a85:	fucomi st,st(4)
  416a87:	inc    esp
  416a88:	jo     0x416ada
  416a8a:	jo     0x416ac5
  416a8c:	(bad)  
  416a8e:	xor    ah,ah
  416a90:	cmp    DWORD PTR [ecx-0x7ede140a],eax
  416a96:	xchg   esi,eax
  416a97:	in     eax,dx
  416a98:	add    bl,BYTE PTR [ebx-0x1]
  416a9b:	jne    0x416a7d
  416a9d:	mov    eax,DWORD PTR [ebp-0x8]
  416aa0:	mov    eax,DWORD PTR [eax]
  416aa2:	mov    eax,DWORD PTR [eax]
  416aa4:	mov    eax,DWORD PTR [eax]
  416aa6:	call   eax
  416aa8:	mov    eax,DWORD PTR [ebp-0x34]
  416aab:	mov    ecx,DWORD PTR ds:0x424090
  416ab1:	add    DWORD PTR [eax],ecx
  416ab3:	pop    edi
  416ab4:	pop    esi
  416ab5:	leave  
  416ab6:	ret    
  416ab7:	push   ebp
  416ab8:	mov    ebp,esp
  416aba:	sub    esp,0x18
  416abd:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  416ac4:	lea    eax,[ebp+0x14]
  416ac7:	mov    edx,DWORD PTR ds:0x42c00c
  416acd:	sub    DWORD PTR ds:0x42c01c,edx
  416ad3:	mov    DWORD PTR [ebp-0x4],eax
  416ad6:	and    DWORD PTR ds:0x42c01c,ebx
  416adc:	push   esi
  416add:	sub    ecx,esi
  416adf:	mov    esi,0xf89c85b6
  416ae4:	sub    ecx,ecx
  416ae6:	mov    DWORD PTR [ebp-0xc],esi
  416ae9:	or     DWORD PTR ds:0x42b000,0x59c6
  416af3:	lea    eax,[ebp-0xc]
  416af6:	sub    DWORD PTR ds:0x42b014,0x4110
  416b00:	mov    DWORD PTR [ebp-0x14],eax
  416b03:	add    ecx,ecx
  416b05:	mov    eax,DWORD PTR [ebp-0xc]
  416b08:	mov    edx,DWORD PTR [ebp-0x14]
  416b0b:	adc    DWORD PTR ds:0x429014,0x59c
  416b15:	mov    ecx,0x7510893
  416b1a:	xor    eax,ecx
  416b1c:	sub    DWORD PTR ds:0x42b014,0x42b004
  416b26:	add    eax,0x3272db
  416b2b:	mov    DWORD PTR [edx],eax
  416b2d:	mov    edx,DWORD PTR ds:0x42a004
  416b33:	add    DWORD PTR ds:0x429000,edx
  416b39:	mov    eax,ds:0x423e8c
  416b3e:	mov    edx,DWORD PTR ds:0x42901c
  416b44:	add    DWORD PTR ds:0x429000,edx
  416b4a:	mov    edx,DWORD PTR [ebp-0x4]
  416b4d:	sub    DWORD PTR ds:0x42d000,0x780c
  416b57:	mov    eax,DWORD PTR [eax]
  416b59:	add    eax,DWORD PTR [edx]
  416b5b:	add    DWORD PTR ds:0x42900c,ecx
  416b61:	push   edi
  416b62:	and    DWORD PTR ds:0x429020,0x0
  416b6c:	mov    edx,DWORD PTR ds:0x429020
  416b72:	inc    edx
  416b73:	mov    DWORD PTR ds:0x429020,edx
  416b79:	cmp    DWORD PTR ds:0x429020,0x25
  416b80:	jne    0x416b8f
  416b86:	push   DWORD PTR [ebp-0x20]
  416b89:	call   DWORD PTR ds:0x425028
  416b8f:	cmp    DWORD PTR ds:0x429020,0x19
  416b96:	jb     0x416b6c
  416b9c:	add    DWORD PTR ds:0x42c01c,0x73bd
  416ba6:	mov    DWORD PTR [ebp-0x8],eax
  416ba9:	adc    DWORD PTR ds:0x42d00c,ecx
  416baf:	mov    edi,DWORD PTR [ebp+0x8]
  416bb2:	sbb    DWORD PTR ds:0x42d018,0x1580
  416bbc:	mov    eax,ds:0x424014
  416bc1:	and    DWORD PTR ds:0x42b01c,0x0
  416bcb:	jmp    0x416bdd
  416bd0:	mov    edx,DWORD PTR ds:0x42b01c
  416bd6:	inc    edx
  416bd7:	mov    DWORD PTR ds:0x42b01c,edx
  416bdd:	cmp    DWORD PTR ds:0x42b01c,0x1a
  416be4:	jae    0x416c47
  416bea:	cmp    DWORD PTR ds:0x42b01c,0x10
  416bf1:	jne    0x416c1c
  416bf7:	push   0x2d19
  416bfc:	push   DWORD PTR [ebp-0x10]
  416bff:	push   0x42d014
  416c04:	push   0x14d6
  416c09:	push   0x3bac
  416c0e:	push   0x6779
  416c13:	push   DWORD PTR [ebp-0xc]
  416c16:	call   DWORD PTR ds:0x42502c
  416c1c:	cmp    DWORD PTR ds:0x42b01c,0xf
  416c23:	jne    0x416c38
  416c29:	xor    edx,edx
  416c2b:	add    edx,DWORD PTR ds:0x42b01c
  416c31:	inc    edx
  416c32:	mov    DWORD PTR ds:0x42b01c,edx
  416c38:	jmp    0x416bd0
  416c3d:	adc    DWORD PTR ds:0x429028,0x58d4
  416c47:	mov    eax,DWORD PTR [eax+0x198]
  416c4d:	mov    edx,DWORD PTR ds:0x424397
  416c53:	mov    edx,DWORD PTR [edx]
  416c55:	add    DWORD PTR ds:0x42d008,edx
  416c5b:	xor    edi,ecx
  416c5d:	or     edx,0x793e
  416c63:	jmp    0x41901b
  416c68:	paddsw mm6,QWORD PTR es:[eax+0x63a36ce3]
  416c70:	mov    eax,0xb0e19036
  416c75:	lahf   
  416c76:	stc    
  416c77:	aaa    
  416c78:	jp     0x416c9e
  416c7a:	popa   
  416c7b:	(bad)  
  416c7c:	(bad)  
  416c7d:	pop    edi
  416c7e:	bound  esp,QWORD PTR [edx-0x3a]
  416c81:	sub    esi,DWORD PTR [ecx-0x7f]
  416c84:	cmp    dl,BYTE PTR [ebp-0x1b]
  416c87:	shl    bh,0xd0
  416c8a:	stc    
  416c8b:	test   BYTE PTR [ebx],0xc6
  416c8e:	lock adc bl,BYTE PTR [ecx+0x31dd4e25]
  416c95:	stc    
  416c96:	ret    
  416c97:	or     eax,DWORD PTR [edi-0x30cfa9d7]
  416c9d:	inc    ecx
  416c9e:	add    eax,0x8e2e8ec6
  416ca3:	mov    al,ds:0xb595329a
  416ca8:	push   esi
  416ca9:	(bad)  
  416caa:	(bad)  
  416cab:	cmp    dh,BYTE PTR [ebx-0xb]
  416cae:	xor    WORD PTR [ebx],bp
  416cb1:	fs clc 
  416cb3:	shl    DWORD PTR [ebp+ebx*8-0x35],0xe9
  416cb8:	mov    BYTE PTR [esi+ecx*2],ah
  416cbb:	mov    al,ds:0x8082b85c
  416cc0:	lods   eax,DWORD PTR ds:[esi]
  416cc1:	lea    ebx,[ebp-0x6]
  416cc4:	inc    edi
  416cc5:	lods   al,BYTE PTR ds:[esi]
  416cc6:	mov    ah,BYTE PTR [ecx+edi*1]
  416cc9:	mov    ebp,0xec1d20f2
  416cce:	mov    bl,0x6c
  416cd0:	dec    eax
  416cd1:	mov    BYTE PTR [eax+eiz*8],cl
  416cd4:	leave  
  416cd5:	add    eax,DWORD PTR [edx-0x3f9e28c5]
  416cdb:	adc    BYTE PTR [ebp*1-0x68af6799],bh
  416ce2:	xor    edi,DWORD PTR [eax-0x59]
  416ce5:	jbe    0x416cc3
  416ce7:	mov    bl,ch
  416ce9:	repnz adc al,0xe6
  416cec:	les    eax,FWORD PTR [eax-0x1921b98f]
  416cf2:	jg     0x416c75
  416cf4:	ret    0xb5c5
  416cf7:	push   ss
  416cf8:	rcl    al,cl
  416cfa:	mov    bl,0xd7
  416cfc:	cwde   
  416cfd:	gs jp  0x416d3b
  416d00:	add    ebp,DWORD PTR [esi+0x6e83d167]
  416d06:	mov    dh,0xf8
  416d08:	and    bh,al
  416d0a:	push   DWORD PTR [eax]
  416d0c:	inc    edx
  416d0d:	sbb    ah,dl
  416d0f:	xchg   edx,eax
  416d10:	sub    al,0x6f
  416d12:	jmp    0x416c9a
  416d14:	jl     0x416d0b
  416d16:	xchg   esi,eax
  416d17:	mov    DWORD PTR [edx],ebp
  416d19:	jae    0x416d07
  416d1b:	mov    ecx,0xd4462f89
  416d20:	xchg   esp,eax
  416d21:	jl     0x416d21
  416d23:	jae    0x416cdd
  416d25:	stos   DWORD PTR es:[edi],eax
  416d26:	inc    edx
  416d27:	cdq    
  416d28:	mov    dh,BYTE PTR [ecx+0x3]
  416d2b:	pop    es
  416d2c:	data16 fcomp QWORD PTR [ebx+0x73]
  416d30:	mov    BYTE PTR [esi+0x65],ch
  416d33:	push   ebx
  416d34:	popf   
  416d35:	out    0x42,eax
  416d37:	ror    BYTE PTR [ecx+0x3f0347a3],0x3b
  416d3e:	mov    ebx,0xbfef31db
  416d43:	xchg   ebx,eax
  416d44:	cli    
  416d45:	daa    
  416d46:	jae    0x416d27
  416d48:	lock mov ah,0x5
  416d4b:	repnz test DWORD PTR [ecx+0x3c],esp
  416d4f:	sti    
  416d50:	(bad)  
  416d51:	fistp  DWORD PTR [ecx+ebp*2-0x3f9dc932]
  416d58:	repnz loope 0x416d91
  416d5b:	dec    eax
  416d5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d5d:	mov    esp,0x6c8a1c10
  416d62:	and    BYTE PTR [edx+0x4e],dh
  416d65:	push   eax
  416d66:	sub    ch,BYTE PTR [edi+0x7a]
  416d69:	dec    ebx
  416d6a:	ror    BYTE PTR ds:0x26699306,cl
  416d70:	dec    edx
  416d71:	bnd jge 0x416d66
  416d74:	fsub   QWORD PTR [eax+0x245474b2]
  416d7a:	pop    edi
  416d7b:	aaa    
  416d7c:	int    0xd0
  416d7e:	gs inc edx
  416d80:	pop    edi
  416d81:	nop
  416d82:	ret    
  416d83:	jnp    0x416dc5
  416d85:	adc    DWORD PTR [ecx+ecx*4-0x3b],edi
  416d89:	in     eax,dx
  416d8a:	push   cs
  416d8b:	addr16 ja 0x416d50
  416d8e:	dec    ebx
  416d8f:	test   BYTE PTR [eax+0x2f],bh
  416d92:	(bad)  
  416d93:	pop    ebx
  416d94:	leave  
  416d95:	outs   dx,DWORD PTR ds:[esi]
  416d96:	sti    
  416d97:	and    BYTE PTR ds:0x875d77e3,al
  416d9d:	sbb    ax,WORD PTR [edi+esi*8+0x65]
  416da2:	into   
  416da3:	xchg   ebx,eax
  416da4:	aad    0x9
  416da6:	pushw  ss
  416da8:	(bad)  
  416da9:	push   0xffffffa7
  416dab:	rol    BYTE PTR [edi+0x56ca739b],1
  416db1:	pop    eax
  416db2:	cmp    eax,0x4ccdaf01
  416db7:	add    DWORD PTR ds:0x6ccfd552,eax
  416dbd:	mov    dl,BYTE PTR [edx]
  416dbf:	icebp  
  416dc0:	lea    esp,[esi]
  416dc2:	add    esi,DWORD PTR [eax-0x4c]
  416dc5:	not    BYTE PTR fs:[esi+0x77]
  416dc9:	or     eax,0xa9782f02
  416dce:	bound  esi,QWORD PTR [ebp+esi*2-0x76]
  416dd2:	mov    ebp,DWORD PTR [ebx]
  416dd4:	fstp   TBYTE PTR ds:0x5723c582
  416dda:	pop    eax
  416ddb:	sub    ecx,edi
  416ddd:	je     0x416d7b
  416ddf:	cdq    
  416de0:	out    0x1c,eax
  416de2:	(bad)  
  416de4:	cmp    eax,DWORD PTR [edx+0x33]
  416de7:	clc    
  416de8:	sbb    eax,0xd1b8cd81
  416ded:	(bad)  
  416dee:	jl     0x416d76
  416df0:	dec    ecx
  416df1:	je     0x416e4b
  416df3:	mov    esi,0xc71fa290
  416df8:	fnstsw WORD PTR [ecx+0x474f6a99]
  416dfe:	pop    ebp
  416dff:	and    eax,0x65511306
  416e04:	aas    
  416e05:	mov    edx,0x36954438
  416e0a:	cmp    eax,0x804b8154
  416e0f:	daa    
  416e10:	retf   0x3348
  416e13:	push   edi
  416e14:	xor    BYTE PTR [ebx],ch
  416e16:	into   
  416e17:	test   DWORD PTR [ebp+0x23],ebx
  416e1a:	xchg   edx,eax
  416e1b:	addr16 in al,dx
  416e1d:	add    DWORD PTR [esi-0x66],ecx
  416e20:	pop    esi
  416e21:	jne    0x416e26
  416e23:	mov    al,ds:0xe30eec78
  416e28:	and    ebx,DWORD PTR [ecx-0x3a]
  416e2b:	inc    edx
  416e2c:	sbb    DWORD PTR [ebx],eax
  416e2e:	jmp    0x416ea5
  416e30:	or     ebx,ebx
  416e32:	pop    ecx
  416e33:	inc    edx
  416e34:	or     ebp,DWORD PTR [esi-0x7c879102]
  416e3a:	ror    edi,0xdf
  416e3d:	jg     0x416e69
  416e3f:	int3   
  416e40:	test   DWORD PTR [eax-0x11ba59ed],ebp
  416e46:	(bad)  
  416e47:	jnp    0x416dd7
  416e49:	rol    DWORD PTR [edi+0x74],0x87
  416e4d:	inc    edi
  416e4e:	cli    
  416e4f:	test   al,0x6
  416e51:	loopne 0x416e39
  416e53:	test   eax,0x634c9432
  416e58:	adc    al,0xad
  416e5a:	mov    ds:0x7c7335e8,al
  416e5f:	shl    BYTE PTR [edx+0x52],cl
  416e62:	je     0x416e94
  416e64:	inc    esi
  416e65:	std    
  416e66:	or     eax,0x70beb279
  416e6b:	out    0x27,eax
  416e6d:	add    al,0x2c
  416e6f:	stos   BYTE PTR es:[edi],al
  416e70:	sbb    eax,0x321faad4
  416e75:	pop    esi
  416e76:	mov    dh,BYTE PTR [ebx-0x68b59cc7]
  416e7c:	(bad)  
  416e7d:	neg    BYTE PTR [edi+0x4ed44dc]
  416e83:	cmp    eax,0x21d96620
  416e88:	add    al,0x65
  416e8a:	push   ds
  416e8b:	fadd   DWORD PTR [edi+esi*2-0x3]
  416e8f:	scas   al,BYTE PTR es:[edi]
  416e90:	(bad)  
  416e91:	sbb    BYTE PTR [ebp*2+0x7b152db7],dh
  416e98:	mov    ecx,0xc4616815
  416e9d:	retf   
  416e9e:	retf   
  416e9f:	xchg   esp,eax
  416ea0:	das    
  416ea1:	mul    BYTE PTR [ebx]
  416ea3:	jecxz  0x416ecb
  416ea5:	xor    bh,BYTE PTR [ebx-0x69fb04eb]
  416eab:	sbb    BYTE PTR [esi+0x8],ch
  416eae:	jmp    0xf069b1da
  416eb3:	dec    eax
  416eb4:	rol    DWORD PTR cs:[ecx+0x27],1
  416eb8:	inc    esp
  416eb9:	sub    al,0x7a
  416ebb:	jecxz  0x416eba
  416ebd:	xchg   ebp,eax
  416ebe:	loope  0x416efa
  416ec0:	push   cs
  416ec1:	push   ebp
  416ec2:	xor    bh,ah
  416ec4:	ucomiss xmm5,DWORD PTR [ebp-0x51]
  416ec8:	jmp    FWORD PTR [ebx-0x39f2c046]
  416ece:	xor    BYTE PTR [esi+0x79920a10],bl
  416ed4:	iret   
  416ed5:	ret    0x9621
  416ed8:	hlt    
  416ed9:	in     al,dx
  416eda:	icebp  
  416edb:	sbb    BYTE PTR [ebx],bl
  416edd:	xadd   dl,bl
  416ee0:	push   esp
  416ee1:	sahf   
  416ee2:	jg     0x416e65
  416ee4:	cli    
  416ee5:	add    bh,BYTE PTR [edi-0x7c]
  416ee8:	retf   
  416ee9:	in     al,0x63
  416eeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416eec:	cmp    ecx,DWORD PTR [ecx+esi*1]
  416eef:	out    dx,eax
  416ef0:	xor    dh,dh
  416ef2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ef3:	fs xchg edx,eax
  416ef5:	mov    al,cl
  416ef7:	mov    ecx,DWORD PTR [ebp-0x19]
  416efa:	add    ebp,edi
  416efc:	mov    esp,0x1405d1bd
  416f01:	cmp    al,0xab
  416f03:	clc    
  416f04:	mov    esp,esi
  416f06:	mov    al,ds:0xe2814769
  416f0b:	cmp    eax,0x8b835a25
  416f10:	int    0xac
  416f12:	add    al,0x7f
  416f14:	sbb    al,ch
  416f16:	inc    esi
  416f17:	dec    eax
  416f18:	in     al,dx
  416f19:	rcl    BYTE PTR [edx],1
  416f1b:	xchg   esi,eax
  416f1c:	int    0x2a
  416f1e:	fdiv   QWORD PTR [esi+0x10]
  416f21:	mov    WORD PTR [esi],fs
  416f23:	mov    ah,0xbf
  416f25:	je     0x416f09
  416f27:	arpl   WORD PTR [edi+0x5e],sp
  416f2a:	add    BYTE PTR [edx+0x5af780ab],cl
  416f30:	jae    0x416f4a
  416f32:	cwde   
  416f33:	xchg   edi,eax
  416f34:	mov    ecx,0xdcddcdc1
  416f39:	aas    
  416f3a:	popf   
  416f3b:	scas   al,BYTE PTR es:[edi]
  416f3c:	stos   DWORD PTR es:[edi],eax
  416f3d:	rcl    DWORD PTR [esi+0x3e],1
  416f40:	cld    
  416f41:	xchg   edi,eax
  416f42:	aam    0x7f
  416f44:	or     BYTE PTR [esi],ch
  416f46:	test   BYTE PTR [ecx],bl
  416f48:	cdq    
  416f49:	fwait
  416f4a:	aad    0x51
  416f4c:	mov    al,0x49
  416f4e:	sbb    ch,BYTE PTR [ebx-0x12]
  416f51:	xlat   BYTE PTR ds:[ebx]
  416f52:	(bad)
  416f57:	imul   ebp,DWORD PTR [edx],0x4b
  416f5a:	dec    ebx
  416f5b:	inc    esi
  416f5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f5d:	in     eax,0x90
  416f5f:	mov    bh,0xea
  416f61:	xchg   edi,eax
  416f62:	inc    ecx
  416f63:	pop    esp
  416f64:	and    eax,0xa3f280b7
  416f69:	inc    edi
  416f6a:	sar    BYTE PTR [edi-0x34abe0d5],0x1c
  416f71:	adc    ah,BYTE PTR [ebx-0x18]
  416f74:	cmp    ah,BYTE PTR [eax]
  416f76:	push   0xc17c66b9
  416f7b:	xchg   edi,eax
  416f7c:	mov    bh,BYTE PTR [edi+0x6c]
  416f7f:	loopne 0x416f1c
  416f81:	jmp    0x5015:0x80c854cf
  416f88:	and    bl,cl
  416f8a:	retf   
  416f8b:	or     BYTE PTR [ecx+0x11d35805],dh
  416f91:	sub    BYTE PTR [ebp+0x392af81f],dl
  416f97:	imul   eax,DWORD PTR [ebp-0x2d03f1ec],0x57228941
  416fa1:	xchg   ecx,eax
  416fa2:	imul   edi,DWORD PTR [ebp+0x4dc722ff],0x90160a29
  416fac:	and    ah,BYTE PTR [ecx+eiz*2+0x3a955284]
  416fb3:	push   edx
  416fb4:	or     BYTE PTR [ebx-0x55],ch
  416fb7:	call   0x5b2b:0x221f20fa
  416fbe:	gs jecxz 0x416f44
  416fc1:	push   eax
  416fc2:	sbb    DWORD PTR [eax+eax*2],ebx
  416fc5:	adc    esi,DWORD PTR [ecx+edi*8]
  416fc8:	jnp    0x416fd8
  416fca:	inc    ecx
  416fcb:	outs   dx,DWORD PTR ds:[esi]
  416fcc:	jl     0x416fd9
  416fce:	test   BYTE PTR [ebp+ebp*1+0x6d],bh
  416fd2:	adc    cl,BYTE PTR [ebp-0x589d23a4]
  416fd8:	adc    al,0x60
  416fda:	pop    esi
  416fdb:	jno    0x416ffd
  416fdd:	inc    ebx
  416fde:	mov    dh,0xbd
  416fe0:	cmp    DWORD PTR [ebx],esi
  416fe2:	lahf   
  416fe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fe4:	inc    ebp
  416fe5:	clc    
  416fe6:	dec    ecx
  416fe7:	or     al,0x62
  416fe9:	push   ss
  416fea:	sbb    esp,0xbfd72b71
  416ff0:	jecxz  0x416fec
  416ff2:	sbb    DWORD PTR [edx+ecx*1],ecx
  416ff5:	mov    esp,0x4413cac9
  416ffa:	outs   dx,DWORD PTR ds:[esi]
  416ffb:	add    DWORD PTR [eax-0x335e4a42],ebp
  417001:	fwait
  417002:	les    ebx,FWORD PTR [eax+0x5c]
  417005:	mov    dl,0xb7
  417007:	mov    cl,0xf7
  417009:	fild   DWORD PTR [ecx]
  41700b:	icebp  
  41700c:	inc    ebp
  41700d:	pop    es
  41700e:	xor    cl,dl
  417010:	out    dx,eax
  417011:	addr16 push cs
  417013:	(bad)  
  417014:	loopne 0x41703b
  417016:	mov    al,0x29
  417018:	cs (bad) 
  41701a:	icebp  
  41701b:	rcl    BYTE PTR ds:0x82727f88,1
  417021:	fisttp QWORD PTR [eax-0x8c67e16]
  417027:	and    eax,0xdace6cda
  41702c:	mov    DWORD PTR [ecx],edi
  41702e:	mov    al,ds:0xb220986f
  417033:	out    dx,al
  417034:	mov    bh,0x13
  417036:	aas    
  417037:	jno    0x4170aa
  417039:	mov    esp,0x48fd8a36
  41703e:	cmc    
  41703f:	cmp    DWORD PTR [ebp+0x7d],0x1bbb0ebd
  417046:	call   0x23c4:0xef09ea13
  41704d:	cli    
  41704e:	scas   eax,DWORD PTR es:[edi]
  41704f:	into   
  417050:	add    al,0x21
  417052:	call   0x4619a2b7
  417057:	(bad)  
  417058:	out    0x4,eax
  41705a:	sub    ch,ah
  41705c:	rol    edx,0x7a
  41705f:	fdiv   DWORD PTR [edi+0x5fd2f9d9]
  417065:	test   eax,0x4b113e6e
  41706a:	and    BYTE PTR [edi-0x49f9703],dh
  417070:	ror    BYTE PTR [ecx-0x284f5369],0xfa
  417077:	fstp   TBYTE PTR [ecx-0x45aa8fbd]
  41707d:	or     BYTE PTR [ebx-0x3d],0x87
  417081:	pop    es
  417082:	and    BYTE PTR [eax+0x49],bl
  417085:	cmp    DWORD PTR [edi-0x4065666],0xb4dde7ee
  41708f:	adc    ebx,DWORD PTR [ebp+0x6d890484]
  417095:	push   0x3868be15
  41709a:	fild   QWORD PTR [ebp+0x2e131043]
  4170a0:	inc    edi
  4170a1:	mov    bh,0x8d
  4170a3:	sahf   
  4170a4:	ds pop esi
  4170a6:	test   dh,ah
  4170a8:	cli    
  4170a9:	pusha  
  4170aa:	lods   al,BYTE PTR ds:[esi]
  4170ab:	or     eax,0xe8826f5
  4170b0:	and    edx,DWORD PTR [edx]
  4170b2:	mov    esp,0xa0bab6db
  4170b7:	ds inc ebp
  4170b9:	xchg   ebx,eax
  4170ba:	ret    
  4170bb:	cli    
  4170bc:	inc    eax
  4170bd:	jne    0x417118
  4170bf:	outs   dx,BYTE PTR ds:[esi]
  4170c0:	or     eax,0xf7d0e49c
  4170c5:	dec    ecx
  4170c6:	xchg   esi,eax
  4170c7:	fild   QWORD PTR [ebx]
  4170c9:	sbb    bh,BYTE PTR [ebx+ebx*8]
  4170cc:	dec    esi
  4170cd:	sbb    al,0xa0
  4170cf:	imul   ecx,DWORD PTR [ebx-0x17],0x42
  4170d3:	mov    dl,BYTE PTR [ebx+0x19ad625d]
  4170d9:	mov    eax,ds:0x5d4ac5
  4170de:	dec    edi
  4170df:	push   edi
  4170e0:	ja     0x417100
  4170e2:	mov    ch,0xc1
  4170e4:	mov    al,ds:0xb9839d5b
  4170e9:	jae    0x4170dc
  4170eb:	xor    eax,0x413bb5d8
  4170f0:	sbb    al,0xd7
  4170f2:	test   ebx,ecx
  4170f4:	rcl    BYTE PTR [ebx+0x1b],0xe1
  4170f8:	out    0x1d,eax
  4170fa:	jne    0x41711b
  4170fc:	pusha  
  4170fd:	shl    ch,1
  4170ff:	mov    eax,0xc11a71c8
  417104:	inc    ebp
  417105:	jb     0x41711d
  417107:	dec    ebp
  417108:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417109:	pop    es
  41710a:	repz mov ds:0x67d61c63,eax
  417110:	and    esi,eax
  417112:	sbb    DWORD PTR [ebp-0x2c],esi
  417115:	stos   BYTE PTR es:[edi],al
  417116:	fstp   TBYTE PTR [esi-0x177c88ab]
  41711c:	cs push esi
  41711e:	xor    eax,DWORD PTR [esp+edx*2-0x2fd56873]
  417125:	xchg   edi,eax
  417126:	lock idiv DWORD PTR [edx]
  417129:	push   edx
  41712a:	scas   eax,DWORD PTR es:[edi]
  41712b:	inc    esi
  41712c:	gs jo  0x41716b
  41712f:	lock xor eax,0xba239df3
  417135:	pop    edx
  417136:	ror    ecx,1
  417138:	ret    
  417139:	mov    cl,0x37
  41713b:	fsubp  st(5),st
  41713d:	lods   eax,DWORD PTR ds:[esi]
  41713e:	enter  0x63b9,0x65
  417142:	mov    ds:0xbb0224b4,eax
  417147:	aam    0xab
  417149:	push   ebx
  41714a:	call   0x1f903f36
  41714f:	or     eax,0xc97e902
  417154:	xchg   DWORD PTR [ebx-0x2e],esp
  417157:	leave  
  417158:	pop    ebp
  417159:	rcr    BYTE PTR [esi-0x7a],cl
  41715c:	pusha  
  41715d:	les    ebp,FWORD PTR [ebx-0x20]
  417160:	pusha  
  417161:	rcl    BYTE PTR [edx+0x4c],cl
  417164:	popa   
  417165:	inc    ecx
  417166:	out    dx,al
  417167:	out    0x26,eax
  417169:	not    BYTE PTR [edx-0x75]
  41716c:	scas   eax,DWORD PTR es:[edi]
  41716d:	fst    QWORD PTR [ebx]
  41716f:	push   DWORD PTR [edi]
  417171:	popa   
  417172:	call   FWORD PTR [ebx-0x68e3f102]
  417178:	xchg   edi,eax
  417179:	jp     0x417188
  41717b:	adc    al,BYTE PTR [ecx-0x67c0f277]
  417181:	jecxz  0x41716d
  417183:	mov    esi,0x6188113e
  417188:	(bad)  
  417189:	inc    esi
  41718a:	sub    al,0xe8
  41718c:	dec    ecx
  41718d:	and    al,0xed
  41718f:	test   al,0x2f
  417191:	add    eax,0xb9ee72f8
  417196:	add    esp,ebx
  417198:	les    esp,FWORD PTR [edi-0x71fd2d4c]
  41719e:	in     al,dx
  41719f:	inc    esi
  4171a0:	shl    BYTE PTR [ebp+0x24],1
  4171a3:	xchg   ecx,eax
  4171a4:	retf   0xdcd2
  4171a7:	push   ebx
  4171a8:	xor    eax,0x360906d4
  4171ad:	mov    ah,0xc1
  4171af:	mov    cl,0xd4
  4171b1:	pop    ebp
  4171b2:	aas    
  4171b3:	scas   al,BYTE PTR es:[edi]
  4171b4:	inc    ecx
  4171b5:	sub    bl,BYTE PTR [esp+edx*4-0x6]
  4171b9:	mov    bh,bl
  4171bb:	adc    eax,0xbc81bfe0
  4171c0:	rcl    BYTE PTR [ebp+eiz*2-0x31],0x94
  4171c5:	outs   dx,BYTE PTR ds:[esi]
  4171c6:	cmp    BYTE PTR [edx-0x18756735],bh
  4171cc:	nop
  4171cd:	mov    ah,0x3d
  4171cf:	fchs   
  4171d1:	cmp    eax,0x39b0f3ba
  4171d6:	xor    cl,BYTE PTR [ecx-0x4366e5a8]
  4171dc:	mov    ds:0xb62127b6,eax
  4171e1:	xor    DWORD PTR [esi+0x58],eax
  4171e4:	pop    edi
  4171e5:	jno    0x417223
  4171e7:	(bad)  
  4171e9:	add    bl,cl
  4171eb:	xchg   ecx,eax
  4171ec:	pop    ebx
  4171ed:	test   BYTE PTR [esi-0xa2921c],dl
  4171f3:	jmp    0x41725f
  4171f5:	and    DWORD PTR [ecx+edx*4],ebp
  4171f8:	sti    
  4171f9:	cmp    edx,DWORD PTR [ebx-0x3d]
  4171fc:	mov    dl,0xbe
  4171ff:	(bad)  
  417200:	(bad)  
  417202:	and    dl,ah
  417204:	inc    eax
  417205:	push   ss
  417206:	dec    esi
  417207:	test   DWORD PTR [esi+0x7c],0x60d30e48
  41720e:	out    0x93,al
  417210:	lahf   
  417211:	ret    0x4e1c
  417214:	xchg   edx,eax
  417215:	rcr    DWORD PTR [ebx],0x3a
  417218:	sbb    eax,0x7a56a500
  41721d:	or     al,0xe5
  41721f:	ja     0x417253
  417221:	mov    ecx,fs
  417223:	bound  esp,QWORD PTR [esi+0x23857ed2]
  417229:	fs push cs
  41722b:	mov    ecx,fs
  41722d:	and    BYTE PTR [eax*2-0x11a578f4],0xea
  417235:	jge    0x417268
  417237:	push   cs
  417238:	add    BYTE PTR ds:0xe20b8ffd,dh
  41723e:	pop    ebp
  41723f:	repnz icebp 
  417241:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417242:	enter  0x1c79,0xd2
  417246:	push   esi
  417247:	add    BYTE PTR [ebp-0xe251e29],dl
  41724d:	sub    ebx,DWORD PTR [eax+0x60]
  417250:	or     bl,bl
  417252:	xchg   edi,eax
  417253:	lds    esi,FWORD PTR [eax-0xc]
  417256:	int3   
  417257:	mov    bh,BYTE PTR [edx]
  417259:	mov    al,0x59
  41725b:	push   cs
  41725c:	and    ecx,0x66
  41725f:	fsubr  QWORD PTR [ebx-0x487a9e04]
  417265:	xlat   BYTE PTR ds:[ebx]
  417266:	call   DWORD PTR [esi-0x72]
  417269:	lea    ebx,[esi+0x7c2744a1]
  41726f:	ret    0xb399
  417272:	push   eax
  417273:	sbb    BYTE PTR [eax],ah
  417275:	mov    ch,0x45
  417277:	cmp    eax,0x740a3c6
  41727c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41727d:	jle    0x417214
  41727f:	mov    ds:0x6e0c9ea2,eax
  417284:	and    ebx,ecx
  417286:	popa   
  417287:	dec    ebx
  417288:	xor    eax,0x849499e8
  41728d:	jmp    FWORD PTR [esi]
  41728f:	in     al,dx
  417290:	shl    DWORD PTR [ebx+0x1ec9975],0xe6
  417297:	pop    ebx
  417298:	adc    al,0xbc
  41729a:	cs pop ebx
  41729c:	aaa    
  41729d:	ins    DWORD PTR es:[edi],dx
  41729e:	jp     0x4172ea
  4172a0:	xchg   esi,eax
  4172a1:	push   ss
  4172a2:	out    0x9b,al
  4172a4:	jns    0x417307
  4172a6:	rcl    DWORD PTR [ecx+0x5b],0x6d
  4172aa:	in     eax,0x6
  4172ac:	repnz add bh,dl
  4172af:	ins    BYTE PTR es:[edi],dx
  4172b0:	iret   
  4172b1:	cmp    DWORD PTR [edi],edi
  4172b3:	cmp    edx,ecx
  4172b5:	popa   
  4172b6:	stos   BYTE PTR es:[edi],al
  4172b7:	dec    edx
  4172b8:	or     DWORD PTR [ebp-0x17],0x62
  4172bc:	lods   al,BYTE PTR ds:[esi]
  4172bd:	fadd   QWORD PTR [ebx-0x6f]
  4172c0:	mov    ebp,0xb6b5fc86
  4172c5:	icebp  
  4172c6:	dec    ebp
  4172c7:	js     0x4172fd
  4172c9:	aam    0x5c
  4172cb:	jb     0x417308
  4172cd:	data16 int3 
  4172cf:	mov    ds:0x6337875c,al
  4172d4:	mov    ebx,0xd2d1a598
  4172d9:	or     esp,DWORD PTR [ebx]
  4172db:	add    bl,bl
  4172dd:	rcr    DWORD PTR [ecx],1
  4172df:	or     DWORD PTR [ebx-0xb11dae4],eax
  4172e5:	xlat   BYTE PTR ds:[ebx]
  4172e6:	je     0x417292
  4172e8:	xchg   DWORD PTR [edi],ebp
  4172ea:	push   edx
  4172eb:	mov    ecx,0xa47b7cbc
  4172f0:	xlat   BYTE PTR ds:[ebx]
  4172f1:	dec    edi
  4172f2:	inc    ebx
  4172f3:	repz das 
  4172f5:	cdq    
  4172f6:	inc    esi
  4172f7:	xchg   BYTE PTR [esi+edi*2+0x1a],bl
  4172fb:	push   ebx
  4172fc:	stos   BYTE PTR es:[edi],al
  4172fd:	loop   0x4172c1
  4172ff:	cmp    bh,bl
  417301:	push   0xffffffb9
  417303:	dec    edx
  417304:	inc    ebp
  417305:	mov    edx,0x1a845b79
  41730a:	movd   DWORD PTR [ebp+0x10],mm4
  41730e:	add    DWORD PTR [ecx-0x5bbd5e3a],eax
  417314:	mov    cl,al
  417316:	mov    eax,ds:0x18f88c50
  41731b:	jg     0x41734c
  41731d:	sbb    esi,DWORD PTR [eax+esi*8+0x50]
  417321:	fld    st(1)
  417323:	and    BYTE PTR [edi],0x23
  417326:	mov    ebx,0x62e3120c
  41732b:	ins    DWORD PTR es:[edi],dx
  41732c:	pop    ds
  41732d:	adc    ch,BYTE PTR [esi+0x7795dc0b]
  417333:	or     BYTE PTR [esi+ebx*8+0x6f3be357],ch
  41733a:	iret   
  41733b:	call   0x96a5a121
  417340:	adc    ebx,edi
  417342:	inc    eax
  417343:	jl     0x4173b0
  417345:	popf   
  417346:	repnz mov DWORD PTR [esi-0x30501a4f],0x9a2c9a64
  417351:	lods   eax,DWORD PTR ds:[esi]
  417352:	lods   al,BYTE PTR ds:[esi]
  417353:	lea    ebp,[edx+edx*2]
  417356:	xor    BYTE PTR [esi-0x1],dl
  417359:	stc    
  41735a:	mov    bl,0xed
  41735c:	xchg   esi,eax
  41735d:	or     DWORD PTR [esi-0x52e2607a],ebx
  417363:	sar    DWORD PTR [ebp+0x1ea56000],1
  417369:	in     eax,dx
  41736a:	jge    0x4172fd
  41736c:	sub    eax,0xc3efc7a9
  417371:	pop    edi
  417372:	call   0xdb1e0034
  417377:	xchg   edi,eax
  417378:	jge    0x4173d5
  41737a:	lea    edx,[ecx+0x6]
  41737d:	mul    DWORD PTR [ebx]
  41737f:	lock call 0x9cd07e9a
  417385:	sahf   
  417386:	jle    0x417329
  417388:	xchg   ebp,eax
  417389:	outs   dx,DWORD PTR ds:[esi]
  41738a:	push   0xe84f08b6
  41738f:	aam    0x95
  417391:	aam    0xd
  417393:	std    
  417394:	dec    edi
  417395:	xor    ebp,DWORD PTR [eax]
  417397:	mov    esp,0x1bdb8729
  41739c:	push   ebx
  41739d:	sbb    DWORD PTR [ebx-0x7dd7806a],edi
  4173a3:	loopne 0x4173a2
  4173a5:	inc    eax
  4173a6:	aad    0x8a
  4173a8:	scas   al,BYTE PTR es:[edi]
  4173a9:	iret   
  4173aa:	add    ebx,DWORD PTR [eax-0x38]
  4173ad:	in     eax,0x99
  4173af:	int3   
  4173b0:	or     DWORD PTR [esi+0x36],esp
  4173b3:	call   0xd55dbc5c
  4173b8:	xchg   ebx,eax
  4173b9:	push   ss
  4173ba:	sbb    eax,ebx
  4173bc:	addr16 push ecx
  4173be:	sub    eax,0xd999963b
  4173c3:	inc    eax
  4173c4:	rcl    DWORD PTR [ebp+0x4c],1
  4173c7:	out    0x8d,eax
  4173c9:	int3   
  4173ca:	pusha  
  4173cb:	sub    DWORD PTR [edi+edi*2+0x31],edx
  4173cf:	jb     0x4173ef
  4173d1:	push   ss
  4173d2:	sub    al,0xfb
  4173d4:	scas   eax,DWORD PTR es:[edi]
  4173d5:	jmp    0x81cd:0x9b918ecc
  4173dc:	int    0x96
  4173de:	adc    bl,BYTE PTR [ebx+0x41]
  4173e1:	xor    DWORD PTR [esi+0x4d],0x4c826f74
  4173e8:	mov    ch,BYTE PTR [edx+0x9930ff1]
  4173ee:	das    
  4173ef:	and    al,0x93
  4173f1:	add    cl,BYTE PTR [edx+0x2490c177]
  4173f7:	add    al,0xe7
  4173f9:	in     eax,dx
  4173fa:	cmovge esp,DWORD PTR [ebp+0x488b2ac0]
  417401:	mov    BYTE PTR [ecx+edx*4+0x65f4bab7],ah
  417408:	mov    DWORD PTR [esi],ecx
  41740a:	xchg   DWORD PTR [edi],ecx
  41740c:	cmp    bl,bh
  41740e:	jl     0x4173d1
  417410:	retf   
  417411:	xchg   ebp,eax
  417412:	aad    0x32
  417414:	xchg   ecx,eax
  417415:	mov    cl,0xe0
  417417:	sub    BYTE PTR [edi-0x42],al
  41741a:	jb     0x417486
  41741c:	xor    BYTE PTR [eax],ch
  41741e:	sub    ecx,DWORD PTR [edx+0x4e87bae1]
  417424:	arpl   cx,cx
  417426:	add    esp,ebx
  417428:	rcl    edx,1
  41742a:	lahf   
  41742b:	dec    edx
  41742c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41742d:	sub    eax,0xde9ddc92
  417432:	fidivr WORD PTR [ebp-0x6f58c2c9]
  417438:	mov    cl,0xfe
  41743a:	and    dl,BYTE PTR [eax]
  41743c:	cmp    al,0x93
  41743e:	aas    
  41743f:	xchg   BYTE PTR [edi+0x16],dh
  417442:	orps   xmm7,XMMWORD PTR [esi+0x4]
  417446:	add    BYTE PTR ds:0xde921951,al
  41744c:	dec    ebx
  41744d:	out    0x61,al
  41744f:	jge    0x417492
  417451:	jle    0x417413
  417453:	push   esi
  417454:	push   ebx
  417455:	shl    DWORD PTR [edi-0x419cdd2],1
  41745b:	(bad)  
  41745d:	sbb    BYTE PTR [ebp+0x2c],cl
  417460:	mov    eax,eax
  417462:	fwait
  417463:	pop    ebp
  417464:	fadd   st(4),st
  417466:	jge    0x417459
  417468:	xor    BYTE PTR [ecx+ecx*1+0x212ab5d6],0xe1
  417470:	mul    BYTE PTR [ebp+0x23af4403]
  417476:	or     DWORD PTR [ebx],ebx
  417478:	fst    QWORD PTR [ebx-0x154e9b4f]
  41747e:	aam    0x5d
  417480:	mov    BYTE PTR [ebx-0x50abc5b6],ah
  417486:	call   0x75d24c64
  41748b:	(bad)  
  41748c:	aad    0xcb
  41748e:	bound  esi,QWORD PTR [esi-0x7b32a332]
  417494:	cvtpi2ps xmm0,QWORD PTR [esi+0x67]
  417498:	bound  edx,QWORD PTR [eax-0x60]
  41749b:	aad    0xbf
  41749d:	test   BYTE PTR [edi+ebp*1-0x2],dh
  4174a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174a2:	outs   dx,BYTE PTR ds:[esi]
  4174a3:	jmp    0xb82d:0xa80cf270
  4174aa:	jno    0x4174f2
  4174ac:	cli    
  4174ad:	xchg   BYTE PTR [ebx-0xc],al
  4174b0:	adc    esp,DWORD PTR [edi]
  4174b2:	jns    0x417467
  4174b4:	in     eax,0x3f
  4174b6:	mov    dh,0x92
  4174b8:	inc    esi
  4174b9:	sysret 
  4174bb:	mov    edi,0x324d9900
  4174c0:	icebp  
  4174c1:	fs jnp 0x4174b3
  4174c4:	mov    ds:0x153a8f4d,al
  4174c9:	push   ecx
  4174ca:	rcl    DWORD PTR [edx-0x28],cl
  4174cd:	into   
  4174ce:	jns    0x72275743
  4174d4:	mov    ds:0x24b6169b,eax
  4174d9:	popa   
  4174da:	mov    ds:0xaef2ff14,eax
  4174df:	mov    edi,0xe95642c
  4174e4:	shr    BYTE PTR [ebx-0xb],1
  4174e7:	xlat   BYTE PTR ds:[ebx]
  4174e8:	imul   eax,edx,0xccf3797c
  4174ee:	jae    0x417518
  4174f0:	lds    edx,FWORD PTR [ebx+0x44c6712f]
  4174f6:	aad    0x68
  4174f8:	popf   
  4174f9:	outs   dx,BYTE PTR ds:[esi]
  4174fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174fb:	std    
  4174fc:	fs pop esp
  4174fe:	(bad)  
  4174ff:	jne    0x4174e9
  417501:	std    
  417502:	mov    edx,esi
  417504:	aas    
  417505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417506:	jp     0x4174f0
  417508:	push   ss
  417509:	mov    cl,0x98
  41750b:	outs   dx,BYTE PTR ds:[esi]
  41750c:	loope  0x41752b
  41750e:	loope  0x41757d
  417510:	daa    
  417511:	arpl   WORD PTR [eax+0x71860066],sp
  417517:	(bad)  
  417518:	int    0x60
  41751a:	pop    ds
  41751b:	sbb    DWORD PTR [edi],edx
  41751d:	into   
  41751e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41751f:	lods   al,BYTE PTR ds:[esi]
  417520:	pushf  
  417521:	adc    DWORD PTR [edi+0x36136c48],0x3b
  417528:	enterw 0x69db,0x2a
  41752d:	jle    0x4174cd
  41752f:	(bad)  
  417530:	or     cl,al
  417532:	test   BYTE PTR [edx+0x3d],al
  417535:	pop    ebp
  417536:	in     al,0x86
  417538:	(bad)  
  417539:	int    0xfa
  41753b:	inc    edi
  41753c:	xor    eax,0x7cca0984
  417541:	dec    ecx
  417542:	pop    es
  417543:	cmp    al,0x42
  417545:	or     ebp,DWORD PTR [esi]
  417547:	jmp    0x63da:0x3c9ef2d9
  41754e:	pop    esp
  41754f:	clc    
  417550:	or     DWORD PTR [ebx],edx
  417552:	and    al,0x41
  417554:	sub    DWORD PTR [eax],edi
  417556:	jle    0x4174f4
  417558:	xchg   esi,eax
  417559:	leave  
  41755a:	lds    eax,FWORD PTR [eax+0x13]
  41755d:	ret    
  41755e:	jb     0x4175dd
  417560:	or     bl,al
  417562:	adc    edi,DWORD PTR [ebp-0x57]
  417565:	mov    eax,0xa73defec
  41756a:	imul   ebp,DWORD PTR [esi],0xab04ef60
  417570:	mov    ecx,0x75eb33ad
  417575:	hlt    
  417576:	call   0x24281b14
  41757b:	sub    al,0x22
  41757d:	push   0x67d44f5f
  417582:	mov    BYTE PTR [ecx+0x63],ch
  417585:	sbb    DWORD PTR [ebx+0x4c],eax
  417588:	inc    ecx
  417589:	mov    dh,0xbf
  41758b:	and    BYTE PTR [edi],dl
  41758d:	mov    eax,0x4634fe38
  417592:	sbb    eax,0xa1f783f
  417597:	xor    bh,BYTE PTR [esi-0x24]
  41759a:	jno    0x4175c8
  41759c:	sub    eax,0x8717ef2c
  4175a1:	inc    ebx
  4175a2:	shl    al,0xb4
  4175a5:	mov    BYTE PTR [edi+0x6927dd3b],bh
  4175ab:	cmc    
  4175ac:	pop    ebp
  4175ad:	or     DWORD PTR [ecx-0x6a],esp
  4175b0:	cmp    ecx,DWORD PTR [edi]
  4175b2:	pop    ecx
  4175b3:	xchg   esi,eax
  4175b4:	sub    al,0x1
  4175b6:	jmp    0x1d13e80e
  4175bb:	jns    0x4175c8
  4175bd:	outs   dx,DWORD PTR ds:[esi]
  4175be:	and    BYTE PTR [ebx-0x2d775e00],0x16
  4175c5:	mov    ch,0x62
  4175c7:	lahf   
  4175c8:	xor    DWORD PTR [edx],esp
  4175ca:	xor    bh,bh
  4175cc:	xor    DWORD PTR [eax-0x7c],ebp
  4175cf:	and    esp,DWORD PTR [edx+0x63]
  4175d2:	cs pusha 
  4175d4:	in     eax,dx
  4175d5:	in     eax,0xef
  4175d7:	and    al,0x43
  4175d9:	out    0x64,al
  4175db:	imul   ecx,DWORD PTR [esi+eax*8+0x115bcec6],0x4bba2f61
  4175e6:	stos   BYTE PTR es:[edi],al
  4175e7:	lock mov eax,0xf8466847
  4175ed:	push   0xffffffdb
  4175ef:	mov    bl,0x34
  4175f1:	ja     0x41762e
  4175f3:	jle    0x4175e8
  4175f5:	(bad)  [ebp+0x74]
  4175f8:	push   ebx
  4175f9:	popa   
  4175fa:	andps  xmm6,XMMWORD PTR [ecx]
  4175fd:	mov    al,ds:0xe86d12da
  417602:	sbb    ebp,DWORD PTR [edi]
  417604:	shl    BYTE PTR [ebp+0x2c],1
  417607:	dec    eax
  417608:	in     eax,dx
  417609:	adc    DWORD PTR [ebx+0x747f704e],esi
  41760f:	adc    eax,0x24f23e9d
  417614:	je     0x417612
  417616:	pop    edi
  417617:	adc    al,0xd7
  417619:	ss std 
  41761b:	repz sbb eax,0x7c43ee83
  417621:	jnp    0x417621
  417623:	sbb    al,bl
  417625:	(bad)  
  417626:	or     esi,0x62
  417629:	(bad)  
  41762a:	fistp  WORD PTR [edx-0x42]
  41762d:	and    eax,0x237538
  417632:	test   eax,0xfc0f8303
  417637:	dec    ecx
  417638:	and    esi,DWORD PTR [edi+0x4d]
  41763b:	out    0x8e,al
  41763d:	cld    
  41763e:	aas    
  41763f:	mov    cs,WORD PTR [edx]
  417641:	add    eax,DWORD PTR [ebx-0x1d]
  417644:	pop    ebx
  417645:	mov    esi,0x2fdd33f9
  41764a:	and    dl,BYTE PTR [edi]
  41764c:	test   al,0x2b
  41764e:	sbb    dh,ch
  417650:	mov    edx,0x6c841ffd
  417655:	mov    bh,0x4f
  417657:	lock into 
  417659:	dec    esp
  41765a:	ss inc ebp
  41765c:	sbb    bh,dh
  41765e:	hlt    
  41765f:	and    esp,eax
  417661:	dec    esi
  417663:	pop    ds
  417664:	adc    bl,0x59
  417667:	outs   dx,BYTE PTR ds:[esi]
  417668:	and    bl,BYTE PTR [edi+0x7e7bcbc1]
  41766e:	je     0x4176d4
  417670:	pusha  
  417671:	add    esi,edx
  417673:	push   edx
  417674:	xlat   BYTE PTR ds:[ebx]
  417675:	mov    edi,0x3163beca
  41767a:	or     DWORD PTR [esi+0x56],esi
  41767d:	scas   al,BYTE PTR es:[edi]
  41767e:	sub    esp,esp
  417680:	(bad)
  417683:	mov    ch,0xf1
  417685:	test   eax,0xf1833248
  41768a:	jmp    FWORD PTR [esi]
  41768c:	(bad)  
  41768e:	adc    ah,BYTE PTR [ecx+esi*8-0xdeadf42]
  417695:	inc    ebp
  417696:	jp     0x417657
  417698:	fdivr  DWORD PTR [ebp+0x28fdf3]
  41769e:	push   0x62
  4176a0:	pop    ecx
  4176a1:	sub    edi,DWORD PTR [ebx+0x7a12863c]
  4176a7:	fimul  WORD PTR [eax+0x53afa913]
  4176ad:	push   ebx
  4176ae:	rcr    BYTE PTR cs:[ecx-0x71],cl
  4176b2:	iret   
  4176b3:	ret    
  4176b4:	fwait
  4176b5:	scas   al,BYTE PTR es:[edi]
  4176b6:	cli    
  4176b7:	aas    
  4176b8:	or     ch,ch
  4176ba:	inc    edx
  4176bb:	loop   0x4176bd
  4176bd:	je     0x41772b
  4176bf:	test   DWORD PTR [esi],edi
  4176c1:	stos   DWORD PTR es:[edi],eax
  4176c2:	jecxz  0x4176c3
  4176c4:	adc    ah,BYTE PTR [esi-0x28172abe]
  4176ca:	stos   BYTE PTR es:[edi],al
  4176cb:	scas   al,BYTE PTR es:[edi]
  4176cc:	les    esp,FWORD PTR [ebx+0x15cad607]
  4176d2:	lods   al,BYTE PTR ds:[esi]
  4176d3:	xlat   BYTE PTR ds:[ebx]
  4176d4:	sub    eax,0xa2a7a03a
  4176d9:	mov    ebx,0x59231d6b
  4176de:	inc    ebx
  4176df:	outs   dx,BYTE PTR ds:[esi]
  4176e0:	dec    esp
  4176e1:	(bad)  
  4176e2:	popa   
  4176e3:	in     eax,dx
  4176e4:	popa   
  4176e5:	fwait
  4176e6:	xchg   ecx,eax
  4176e7:	arpl   WORD PTR [edi+0x2c],bx
  4176ea:	xchg   esp,eax
  4176eb:	adc    DWORD PTR [ecx-0x5673745d],eax
  4176f1:	cli    
  4176f2:	inc    eax
  4176f3:	mov    ch,0x1d
  4176f5:	inc    eax
  4176f6:	int3   
  4176f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176f8:	mov    esp,0x828b5cb
  4176fd:	dec    esp
  4176fe:	add    ch,cl
  417700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417701:	sbb    DWORD PTR [ebp+eax*8+0x54a6517e],0xffffffde
  417709:	mov    bh,BYTE PTR [ebp+0x24]
  41770c:	lds    esp,FWORD PTR [esp+edi*4]
  41770f:	adc    edx,DWORD PTR [edx+ebp*1-0xc0c4165]
  417716:	pusha  
  417717:	push   esp
  417718:	ret    0xba15
  41771b:	pop    ebp
  41771c:	push   esp
  41771d:	iret   
  41771e:	icebp  
  41771f:	test   edi,esi
  417721:	pop    edx
  417722:	pop    edi
  417723:	ret    
  417724:	retf   0xd04f
  417727:	(bad)  
  417728:	or     al,0x16
  41772a:	mov    eax,0x54d7e579
  41772f:	cli    
  417730:	add    eax,0xa343e38c
  417735:	push   0xa61501d
  41773a:	xchg   edi,eax
  41773b:	arpl   WORD PTR [ebx+0x5fcd698b],di
  417741:	mov    al,ds:0xcc77a1ca
  417746:	adc    ebp,DWORD PTR [esi+0x73]
  417749:	retf   
  41774a:	(bad)  [eax+0x34]
  41774d:	add    al,0xb
  41774f:	(bad)
  417753:	sar    DWORD PTR [edi+0x729e6e8b],1
  417759:	popa   
  41775a:	sub    dh,BYTE PTR [eax+eiz*8+0xb1913b6]
  417761:	std    
  417762:	pop    esp
  417763:	cmp    ch,BYTE PTR [ebx+0x5f]
  417766:	mov    BYTE PTR [edi],ch
  417768:	jmp    0x77ed:0x5a99b575
  41776f:	in     eax,dx
  417770:	mov    al,0x16
  417772:	dec    ebx
  417773:	cmp    DWORD PTR [edi],ebx
  417775:	xchg   DWORD PTR [esi+0x1a],esi
  417778:	inc    esi
  417779:	jb     0x41773c
  41777b:	mov    esi,DWORD PTR [eax+0x1eb99974]
  417781:	pop    esi
  417782:	xchg   ebp,eax
  417783:	cld    
  417784:	add    al,0xf9
  417786:	jns    0x417731
  417788:	mov    al,ds:0x2a72dae3
  41778d:	jno    0x41778d
  41778f:	ins    DWORD PTR es:[edi],dx
  417790:	xchg   DWORD PTR [edi+edi*2-0x1d],edx
  417794:	dec    ebp
  417795:	std    
  417796:	pushf  
  417797:	inc    ebx
  417798:	add    ah,BYTE PTR [edi]
  41779a:	in     al,dx
  41779b:	cmp    dh,ah
  41779d:	in     al,0x1f
  41779f:	into   
  4177a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177a1:	in     al,0x33
  4177a3:	jmp    0x7214b804
  4177a8:	mov    ebx,0xe365a051
  4177ad:	mov    bh,0x20
  4177af:	mov    bh,0x22
  4177b1:	das    
  4177b2:	mov    edx,esi
  4177b4:	pusha  
  4177b5:	ins    DWORD PTR es:[edi],dx
  4177b6:	pop    ebp
  4177b7:	test   al,0x60
  4177b9:	add    DWORD PTR [ecx+esi*4+0x43],edi
  4177bd:	dec    ebx
  4177be:	mov    gs,WORD PTR [eax-0x179a0dbb]
  4177c4:	int3   
  4177c5:	loope  0x417792
  4177c7:	test   al,0xdf
  4177c9:	idiv   DWORD PTR [eax+0x40]
  4177cc:	lds    edi,FWORD PTR [eax]
  4177ce:	mov    edi,ds
  4177d0:	cdq    
  4177d1:	sub    al,0x88
  4177d3:	into   
  4177d4:	dec    edi
  4177d5:	xchg   ebp,eax
  4177d6:	dec    eax
  4177d7:	xlat   BYTE PTR ds:[ebx]
  4177d8:	test   DWORD PTR [ebp-0x13],ebp
  4177db:	xchg   ecx,eax
  4177dc:	and    al,0xcb
  4177de:	sub    ah,BYTE PTR [eax+eiz*4]
  4177e1:	dec    esi
  4177e2:	stos   BYTE PTR es:[edi],al
  4177e3:	jmp    0x417800
  4177e5:	jmp    0x41779e
  4177e7:	test   BYTE PTR [eax],bl
  4177e9:	push   ebx
  4177ea:	fwait
  4177eb:	jno    0x4177e4
  4177ed:	mov    al,0x24
  4177ef:	pusha  
  4177f0:	mov    ah,0xb6
  4177f2:	dec    edx
  4177f3:	jmp    0x5343:0x3b6cd926
  4177fa:	push   edx
  4177fb:	fild   WORD PTR [edx]
  4177fd:	fisttp WORD PTR [ecx+0x54]
  417800:	scas   eax,DWORD PTR es:[edi]
  417801:	gs int 0xb
  417804:	pop    es
  417805:	in     eax,0x20
  417807:	imul   esi,DWORD PTR ds:0xc2e92cad,0xa89b2284
  417811:	in     eax,dx
  417812:	xor    BYTE PTR [esi-0x76],0x18
  417816:	je     0x4177dc
  417818:	mov    al,ds:0xffacb28
  41781d:	ja     0x41783a
  41781f:	inc    ebp
  417820:	dec    ebx
  417821:	jnp    0x417865
  417823:	mov    edx,0x88dd56d8
  417828:	pop    edi
  417829:	aaa    
  41782a:	imul   eax,DWORD PTR [ebp-0x21],0x216483b5
  417831:	push   0x2f
  417833:	or     BYTE PTR [edx],ch
  417835:	out    0x75,eax
  417837:	jno    0x417893
  417839:	jno    0x4178b9
  41783b:	rol    BYTE PTR [ebx-0x6e],cl
  41783e:	sub    eax,0xa850932f
  417843:	xor    al,0x9e
  417845:	idiv   DWORD PTR [edx+0x3e3833a7]
  41784b:	jnp    0x4177db
  41784d:	aam    0xc6
  41784f:	xchg   esi,eax
  417850:	nop
  417851:	inc    edi
  417852:	xchg   edi,eax
  417853:	jae    0x41787b
  417855:	add    ch,BYTE PTR [esi]
  417857:	push   ss
  417858:	or     dl,BYTE PTR [ebx+0x7503b84d]
  41785e:	adc    al,bl
  417860:	add    cl,BYTE PTR [edx-0x44fa19f8]
  417866:	and    al,0x5d
  417868:	stos   DWORD PTR es:[edi],eax
  417869:	sbb    al,0x1f
  41786b:	jbe    0x4178e5
  41786d:	inc    edx
  41786e:	mov    ds:0xfcf9f077,al
  417873:	add    eax,0x353371ec
  417878:	pop    ebp
  417879:	dec    esi
  41787a:	dec    eax
  41787b:	jns    0x417883
  41787d:	enter  0x2de0,0x17
  417881:	push   eax
  417882:	mov    cl,0x57
  417884:	xlat   BYTE PTR ds:[ebx]
  417885:	push   ebp
  417886:	ins    BYTE PTR es:[edi],dx
  417887:	or     bh,dl
  417889:	adc    esi,DWORD PTR [esi]
  41788b:	les    edx,FWORD PTR [ebp+eiz*4-0x4e]
  41788f:	gs dec esp
  417891:	into   
  417892:	out    dx,al
  417893:	pop    esp
  417894:	in     al,dx
  417895:	jle    0x417892
  417897:	loope  0x4178e0
  417899:	sub    bh,dh
  41789b:	jb     0x41784f
  41789d:	cs pop ss
  41789f:	mov    dl,0xca
  4178a1:	or     edx,DWORD PTR [esi+0x358bd133]
  4178a7:	loop   0x417903
  4178a9:	es mov ah,0x44
  4178ac:	or     al,BYTE PTR [esi-0x62f2be4a]
  4178b2:	xchg   esi,eax
  4178b3:	and    edi,DWORD PTR [eax]
  4178b5:	xchg   ebx,eax
  4178b6:	es out dx,eax
  4178b8:	push   edx
  4178b9:	das    
  4178ba:	and    esp,DWORD PTR [eax]
  4178bc:	jmp    0x4178cf
  4178be:	inc    eax
  4178bf:	test   eax,0x9ec30772
  4178c4:	fstp   QWORD PTR [edi]
  4178c6:	jae    0x4178d4
  4178c8:	sub    DWORD PTR [edi-0x53],edx
  4178cb:	pop    ecx
  4178cc:	pop    esp
  4178cd:	push   ax
  4178cf:	dec    ecx
  4178d0:	stos   BYTE PTR es:[edi],al
  4178d1:	xchg   ah,cl
  4178d3:	out    0xc0,eax
  4178d5:	inc    esi
  4178d6:	and    edx,DWORD PTR [edi]
  4178d8:	pop    ebp
  4178d9:	pop    edx
  4178da:	mov    dh,0x3a
  4178dc:	cs cld 
  4178de:	jno    0x4178b8
  4178e0:	sub    eax,0x4f155a6
  4178e5:	mov    dh,0x8a
  4178e7:	mov    ebp,0xd473da1c
  4178ec:	mov    bl,0xfb
  4178ee:	imul   esp,DWORD PTR [ecx+0x672774cb],0x1abe5596
  4178f8:	mov    ebx,0x9a931848
  4178fd:	add    BYTE PTR [ebx+edi*4+0x76],ah
  417901:	xlat   BYTE PTR ds:[ebx]
  417902:	pop    edx
  417903:	pushf  
  417904:	bound  eax,QWORD PTR [edx-0x6a]
  417907:	lods   eax,DWORD PTR ds:[esi]
  417908:	into   
  417909:	test   eax,0x79152c07
  41790e:	retf   
  41790f:	mov    bl,0x36
  417911:	dec    ebp
  417912:	lock pop ss
  417914:	retf   
  417915:	retf   
  417916:	pusha  
  417917:	and    ebp,DWORD PTR [ebp+0x5e]
  41791a:	imul   esp,eax,0xc45cdb0
  417920:	arpl   WORD PTR [ebx+eax*4+0x3c],bp
  417924:	(bad)  
  417925:	push   ecx
  417926:	scas   eax,DWORD PTR es:[edi]
  417927:	call   0x8f58:0xad1209c6
  41792e:	xor    esi,ebx
  417930:	sbb    ebx,DWORD PTR [edx]
  417932:	mov    esi,0x4b9ac54b
  417937:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  417939:	neg    DWORD PTR [edi-0x64925ee9]
  41793f:	out    0xd7,eax
  417941:	or     esp,DWORD PTR [edx+0x6d]
  417944:	mov    al,ds:0xefc2340d
  417949:	popa   
  41794a:	xchg   DWORD PTR [ebp+eax*1+0x15c2ac8c],esi
  417951:	bswap  edx
  417953:	aas    
  417954:	mov    ecx,0xb43dadc2
  417959:	imul   edi,DWORD PTR [ecx+0x5a77a8b9],0x47edb8ec
  417963:	cmp    al,0x8
  417965:	mov    ds:0x4492a489,al
  41796a:	or     eax,0xcb2bde21
  41796f:	lock mov bl,0x72
  417972:	push   0x2e
  417974:	xor    eax,0x6e405113
  417979:	mov    ss,eax
  41797b:	les    ebp,FWORD PTR [ecx-0x6e]
  41797e:	popa   
  41797f:	in     eax,0x5d
  417981:	dec    ecx
  417982:	xor    bl,BYTE PTR [edi+0x5d1fe4e5]
  417988:	ds sbb eax,0x79544597
  41798e:	adc    ch,dl
  417990:	sub    eax,0xae80ffde
  417995:	mov    edi,0xdb05ece2
  41799a:	mov    dh,0xdf
  41799c:	movlps xmm4,QWORD PTR [esp+eax*2]
  4179a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179a1:	xor    ecx,DWORD PTR es:[edx-0x2fd29000]
  4179a8:	stc    
  4179a9:	into   
  4179aa:	out    dx,eax
  4179ab:	frstor [ebp+esi*2+0x72371b8f]
  4179b2:	cmp    esp,DWORD PTR [ecx+ecx*8-0x26]
  4179b6:	pmulhuw mm1,mm2
  4179b9:	cmp    eax,0x4e55cd02
  4179be:	or     DWORD PTR [edi],edx
  4179c0:	gs dec ecx
  4179c2:	(bad)  
  4179c3:	dec    ebp
  4179c4:	lods   al,BYTE PTR ds:[esi]
  4179c5:	jle    0x41796e
  4179c7:	push   eax
  4179c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179c9:	loopne 0x417980
  4179cb:	cmp    DWORD PTR [edx-0x70d27172],edi
  4179d1:	aad    0x8
  4179d3:	repnz out dx,eax
  4179d5:	repnz push es
  4179d7:	clc    
  4179d8:	in     al,0xf8
  4179da:	test   DWORD PTR [edi],edx
  4179dc:	xchg   ebp,eax
  4179dd:	scas   al,BYTE PTR es:[edi]
  4179de:	ret    
  4179df:	xchg   edx,eax
  4179e0:	sub    eax,0x41
  4179e3:	xor    eax,0x7e4faee7
  4179e8:	popf   
  4179e9:	jo     0x417a43
  4179eb:	sbb    edi,DWORD PTR ds:0x4a232972
  4179f1:	push   ss
  4179f2:	shr    BYTE PTR [ecx+0x23],cl
  4179f5:	xor    esi,DWORD PTR [edx]
  4179f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179f8:	jo     0x417a6f
  4179fa:	add    DWORD PTR [eax+0x7b],esp
  4179fd:	dec    ecx
  4179fe:	aam    0x2
  417a00:	and    BYTE PTR [edi+edi*1],dh
  417a03:	sub    edx,DWORD PTR [ecx+0x38c2cd6b]
  417a09:	push   edx
  417a0a:	mov    ecx,edx
  417a0c:	stos   BYTE PTR es:[edi],al
  417a0d:	mov    eax,ds:0x371aaa01
  417a12:	outs   dx,DWORD PTR ds:[esi]
  417a13:	jp     0x417a52
  417a15:	mov    eax,ds:0x35f3a4f5
  417a1a:	icebp  
  417a1b:	les    esi,FWORD PTR [edx-0x7f]
  417a1e:	or     eax,0x8054f361
  417a23:	sub    DWORD PTR [ebx],edi
  417a25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a26:	pop    es
  417a27:	add    BYTE PTR [ecx],ah
  417a29:	push   ds
  417a2a:	push   0x1e
  417a2c:	rcr    BYTE PTR [ebx],1
  417a2e:	neg    DWORD PTR [eax+0x100869b7]
  417a34:	rcr    bl,0xdc
  417a37:	add    eax,0x8d12c3f8
  417a3c:	add    ch,BYTE PTR [ebp-0x47]
  417a3f:	add    BYTE PTR [esi-0x18],0xcc
  417a43:	jmp    0x74b28404
  417a48:	cld    
  417a49:	call   0x73fa:0x95cb612a
  417a50:	data16 jnp 0x417a17
  417a53:	(bad)  
  417a55:	iret   
  417a56:	test   esi,ecx
  417a58:	or     DWORD PTR [ecx-0x5c],edi
  417a5b:	fistp  WORD PTR [edx+0xf]
  417a5e:	ret    0x3dca
  417a61:	stc    
  417a62:	aad    0x54
  417a64:	call   0x889410bc
  417a69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a6a:	cld    
  417a6b:	cs retf 
  417a6d:	(bad)  
  417a6e:	retf   
  417a6f:	sahf   
  417a70:	push   0x6b1b3a53
  417a75:	jnp    0x417aa2
  417a77:	xchg   esi,eax
  417a78:	(bad)  
  417a79:	add    DWORD PTR ds:[ebp-0x44],0xffffffa4
  417a7e:	pop    ds
  417a7f:	push   0x750141b1
  417a84:	sub    ebx,DWORD PTR [ecx-0x33]
  417a87:	cmp    DWORD PTR ds:0xe775c018,eax
  417a8d:	mov    ch,0x43
  417a8f:	sbb    al,0xe8
  417a91:	cld    
  417a92:	sbb    bl,BYTE PTR [esi-0x146b441]
  417a98:	mov    ah,0x9e
  417a9a:	ss jmp 0xd8bf:0x1945ee0a
  417aa2:	adc    edi,DWORD PTR [ebx+0x1ac55f64]
  417aa8:	dec    ecx
  417aa9:	xchg   DWORD PTR [eax],esi
  417aab:	sbb    bh,BYTE PTR [edx+0x1880beb8]
  417ab1:	or     BYTE PTR [esi-0x6],0x66
  417ab5:	mov    dl,0x88
  417ab7:	jge    0x417aed
  417ab9:	sahf   
  417aba:	mov    WORD PTR [esi+0x54],es
  417abd:	loope  0x417a61
  417abf:	mov    BYTE PTR [edi-0x3469ebb8],0x67
  417ac6:	mov    ebx,0xc4b108be
  417acb:	mov    eax,0x882e93da
  417ad0:	fbstp  TBYTE PTR [ebp+eax*2-0x5e]
  417ad4:	std    
  417ad5:	test   al,0x18
  417ad7:	mov    ebp,0x4ecb5193
  417adc:	add    eax,0x1465e598
  417ae1:	mov    ebx,0x950dbe0c
  417ae6:	or     DWORD PTR [edx],eax
  417ae8:	mov    al,0xf4
  417aea:	(bad)  
  417aeb:	and    esi,DWORD PTR [esi+0x44839ed3]
  417af1:	sahf   
  417af2:	fs enter 0xa0e6,0xd1
  417af7:	test   eax,0x6493688a
  417afc:	es mov cl,0xa1
  417aff:	dec    esi
  417b00:	xchg   esi,eax
  417b01:	test   BYTE PTR [edx+eax*1-0x7be892e5],0xce
  417b09:	xchg   al,bl
  417b0b:	or     cl,BYTE PTR [ecx]
  417b0d:	mov    WORD PTR [eax],?
  417b0f:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b11:	cmp    BYTE PTR [ecx-0x77983b3e],bl
  417b17:	dec    ebp
  417b18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b19:	adc    edx,DWORD PTR [edx+0x41]
  417b1c:	out    dx,al
  417b1d:	retf   0xe04f
  417b20:	sub    eax,0x3b7f235d
  417b25:	retf   0xf9f7
  417b28:	fwait
  417b29:	jg     0x417b88
  417b2b:	mov    edx,0x405c54fb
  417b30:	and    BYTE PTR [eax],cl
  417b32:	inc    edx
  417b33:	mov    dh,0x1e
  417b35:	jle    0x417b4d
  417b37:	pop    eax
  417b38:	lea    edi,[esi+0x6c41fbb0]
  417b3e:	mov    gs,WORD PTR [eax-0x17]
  417b41:	xor    ecx,esp
  417b43:	dec    ecx
  417b44:	out    0x52,eax
  417b46:	outs   dx,BYTE PTR ds:[esi]
  417b47:	push   esp
  417b48:	leave  
  417b49:	idiv   ch
  417b4b:	sub    eax,0xb73cadb1
  417b50:	stos   BYTE PTR es:[edi],al
  417b51:	repz bound esi,QWORD PTR [esi]
  417b54:	adc    BYTE PTR [eax+0x2a78fea6],bh
  417b5a:	leave  
  417b5b:	stos   BYTE PTR es:[edi],al
  417b5c:	pop    es
  417b5d:	dec    ebp
  417b5e:	addr16 add eax,0x2f355df5
  417b64:	jl     0x417b70
  417b66:	aad    0x0
  417b68:	mov    dh,0x83
  417b6a:	loop   0x417b67
  417b6c:	jae    0x417b43
  417b6e:	jg     0x417b4d
  417b70:	sub    esp,DWORD PTR [ecx]
  417b72:	sbb    esi,DWORD PTR [ecx-0x1e2c5deb]
  417b78:	mov    ebp,0xb064bc7
  417b7d:	xchg   esi,ebp
  417b7f:	xor    eax,0xde65127b
  417b84:	frstor [ebx]
  417b86:	dec    DWORD PTR [ecx+0x1b]
  417b89:	fidiv  WORD PTR [ebx+0x6b9beb85]
  417b8f:	inc    eax
  417b90:	push   ecx
  417b91:	mov    bh,0x93
  417b93:	push   ebx
  417b94:	jno    0x417bdd
  417b96:	pop    esi
  417b97:	ja     0x417b4e
  417b99:	(bad)  
  417b9a:	xlat   BYTE PTR ds:[ebx]
  417b9b:	dec    eax
  417b9c:	sbb    BYTE PTR [eax-0x25c04092],dh
  417ba2:	adc    DWORD PTR [ecx],ebp
  417ba4:	sahf   
  417ba5:	lods   al,BYTE PTR ds:[esi]
  417ba6:	imul   esi,DWORD PTR [edx-0x13],0x9dcfa0b5
  417bad:	jo     0x417bcd
  417baf:	in     eax,0x72
  417bb1:	mov    esp,cs
  417bb3:	leave  
  417bb4:	nop
  417bb5:	add    bl,BYTE PTR [esi]
  417bb7:	aaa    
  417bb8:	and    eax,0x752811d
  417bbd:	inc    esi
  417bbe:	jecxz  0x417b6b
  417bc0:	aam    0xd1
  417bc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bc3:	in     eax,0xa6
  417bc5:	xchg   ecx,eax
  417bc6:	int3   
  417bc7:	data16 mov BYTE PTR [eax],ch
  417bca:	sub    ebp,DWORD PTR [ebx+0x44]
  417bcd:	xchg   edi,eax
  417bce:	jmp    0xaf3e429b
  417bd3:	repz mov ds,WORD PTR [edx+ecx*1]
  417bd7:	mov    edx,0xeace0d00
  417bdc:	jno    0x417c1b
  417bde:	mov    edx,0xc64180e6
  417be3:	jecxz  0x417c4c
  417be5:	pop    eax
  417be6:	dec    edi
  417be7:	arpl   WORD PTR [edx+0x591f9a3b],dx
  417bed:	sti    
  417bee:	xchg   ebx,eax
  417bef:	xchg   ebx,eax
  417bf0:	pop    esi
  417bf1:	xchg   edi,eax
  417bf2:	je     0x417b75
  417bf4:	in     al,0xcd
  417bf6:	lock in eax,dx
  417bf8:	cmp    eax,0x7429a598
  417bfd:	cmp    ecx,esp
  417bff:	pop    edi
  417c00:	mov    cl,bl
  417c02:	sti    
  417c03:	iret   
  417c04:	es jae 0x417bff
  417c07:	jmp    0x417b96
  417c09:	fiadd  DWORD PTR [ebp+edx*1+0x4c]
  417c0d:	sbb    dh,ah
  417c0f:	ins    DWORD PTR es:[edi],dx
  417c10:	out    0x1a,eax
  417c12:	adc    bh,BYTE PTR [eax+0x2e]
  417c15:	cmp    al,0x64
  417c17:	cmp    eax,0x917ebe3d
  417c1c:	sub    DWORD PTR [esi-0x793c2992],edi
  417c22:	mov    ds:0x5d6a360a,eax
  417c27:	ret    
  417c28:	push   ds
  417c29:	pushf  
  417c2a:	mov    ch,0x4c
  417c2c:	ss in  eax,0xfc
  417c2f:	scas   eax,DWORD PTR es:[edi]
  417c30:	push   ds
  417c31:	add    DWORD PTR [esi-0xb],ebp
  417c34:	xchg   al,bh
  417c36:	mov    ebx,0xd5ed1e02
  417c3b:	jb     0x417c5e
  417c3d:	jl     0x417c70
  417c3f:	mov    al,ds:0xc8541825
  417c44:	dec    eax
  417c45:	call   0x89a5d2bd
  417c4a:	sahf   
  417c4b:	push   edx
  417c4c:	add    dh,ch
  417c4e:	add    bl,ch
  417c50:	fcomp  QWORD PTR [eax-0x39]
  417c53:	and    BYTE PTR [ebp-0xd],cl
  417c56:	push   edx
  417c57:	xor    ecx,DWORD PTR [ecx-0x79d71c23]
  417c5d:	add    eax,DWORD PTR [ebx]
  417c5f:	stc    
  417c60:	rcr    dl,1
  417c62:	push   0x72
  417c64:	std    
  417c65:	dec    edx
  417c66:	outs   dx,BYTE PTR ds:[esi]
  417c67:	pop    esp
  417c68:	das    
  417c69:	sbb    al,0x55
  417c6b:	jp     0x417c51
  417c6d:	loop   0x417c43
  417c6f:	sub    BYTE PTR [edi-0x55],ch
  417c72:	xchg   esp,eax
  417c73:	jbe    0x417cbe
  417c75:	push   edx
  417c76:	or     al,0x6b
  417c78:	loope  0x417c64
  417c7a:	cmp    BYTE PTR [ebp+ecx*2-0x7ae84e36],cl
  417c81:	mov    DWORD PTR [edx+0x5c50afa2],ecx
  417c87:	lahf   
  417c88:	leave  
  417c89:	mov    DWORD PTR [ebp+0x3f515575],edx
  417c8f:	mov    edi,0x9ffa995a
  417c94:	aam    0x91
  417c96:	jl     0x417d09
  417c98:	pop    ebx
  417c99:	dec    ebx
  417c9a:	ds mov al,0xd0
  417c9d:	popf   
  417c9e:	xchg   bl,bh
  417ca0:	jno    0x417cd6
  417ca2:	jg     0x417cf9
  417ca4:	xchg   edx,eax
  417ca5:	add    dl,dl
  417ca7:	push   edi
  417ca8:	push   esp
  417ca9:	sar    BYTE PTR [esi],cl
  417cab:	cdq    
  417cac:	mov    bl,0x3c
  417cae:	cdq    
  417caf:	mov    ds:0xec4d4741,al
  417cb4:	adc    esi,DWORD PTR [ecx]
  417cb6:	dec    eax
  417cb7:	fdiv   DWORD PTR [esi+0x1a4655c7]
  417cbd:	dec    ebx
  417cbe:	xor    ah,ah
  417cc0:	arpl   WORD PTR [esp+ebp*8-0x2b921a6a],bx
  417cc7:	cld    
  417cc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cc9:	(bad)  
  417cca:	pop    ebx
  417ccb:	sbb    al,0x7b
  417ccd:	mov    edx,0x3c928865
  417cd2:	or     BYTE PTR [ebx-0x6eb17f2c],cl
  417cd8:	xchg   ecx,eax
  417cd9:	pop    edx
  417cda:	xor    BYTE PTR ds:0x1e7e4f28,ch
  417ce0:	push   ebp
  417ce1:	push   0xf
  417ce3:	out    0x19,eax
  417ce5:	jmp    0xba29e756
  417cea:	fild   WORD PTR [ebx-0x18ed7794]
  417cf0:	aad    0xb1
  417cf2:	push   cs
  417cf3:	les    ebx,FWORD PTR [eax]
  417cf5:	ftst   
  417cf7:	arpl   WORD PTR [ebp-0x71],ax
  417cfa:	daa    
  417cfb:	daa    
  417cfc:	repnz loop 0x417d18
  417cff:	mov    ebp,0x21ea3eae
  417d04:	stos   DWORD PTR es:[edi],eax
  417d05:	push   ds
  417d06:	fsub   QWORD PTR [esi]
  417d08:	leave  
  417d09:	adc    DWORD PTR [eax+0x5242d13f],esi
  417d0f:	iret   
  417d10:	ret    
  417d11:	cmp    dl,BYTE PTR [ebx-0x50]
  417d14:	mov    eax,0x2ee32ade
  417d19:	icebp  
  417d1a:	mov    ebp,0x3761145a
  417d1f:	adc    al,0x3c
  417d21:	xchg   BYTE PTR [edi-0xe],dl
  417d24:	xchg   esp,eax
  417d25:	push   ds
  417d26:	fsubr  QWORD PTR [edx-0x635871]
  417d2c:	lods   eax,DWORD PTR ds:[esi]
  417d2d:	push   0x5d6c4e0
  417d32:	jle    0x417cf5
  417d34:	sbb    ah,BYTE PTR [edx+0x1f]
  417d37:	mov    eax,ds:0x381249e1
  417d3c:	cs scas eax,DWORD PTR es:[edi]
  417d3e:	fdiv   DWORD PTR [ebx+0x3]
  417d41:	sbb    al,0x65
  417d43:	fld    QWORD PTR [ecx]
  417d45:	xor    al,BYTE PTR [edx-0x254d08df]
  417d4b:	lea    ebx,[edx]
  417d4d:	xor    bh,BYTE PTR [ebp+0x62427b6f]
  417d53:	repnz mov dh,0x3a
  417d56:	dec    ecx
  417d57:	lds    ecx,FWORD PTR [edx+0x1e]
  417d5a:	jecxz  0x417dc0
  417d5c:	inc    edi
  417d5d:	xchg   BYTE PTR [eax],al
  417d5f:	adc    ah,BYTE PTR ds:0xf3604c8c
  417d65:	imul   ecx,DWORD PTR [ebx-0x2eb5e27c],0x69
  417d6c:	(bad)  
  417d6d:	leave  
  417d6e:	arpl   WORD PTR [ebx+0xc6059fa],si
  417d74:	mov    eax,0xcc271293
  417d79:	imul   ebp,esp,0xed49692
  417d7f:	popa   
  417d80:	jae    0x417d08
  417d82:	imul   ecx,DWORD PTR [ecx],0x7e
  417d85:	mov    eax,ds:0xfcb3b797
  417d8a:	in     al,dx
  417d8b:	sbb    eax,0xb345fb98
  417d90:	adc    al,dh
  417d92:	pop    eax
  417d93:	jb     0x417d61
  417d95:	out    0xb,al
  417d97:	outs   dx,BYTE PTR ds:[esi]
  417d98:	sbb    BYTE PTR [ecx-0x293c8ffa],ch
  417d9e:	pop    esp
  417d9f:	mov    DWORD PTR [ebx+ebx*2-0x3b],eax
  417da3:	ror    BYTE PTR [edx-0x10cec27b],0x72
  417daa:	cmp    DWORD PTR [esi],ecx
  417dac:	es jne 0x417e07
  417daf:	js     0x417d68
  417db1:	lods   eax,DWORD PTR ds:[esi]
  417db2:	mov    dh,0x98
  417db4:	cmp    al,0xcd
  417db6:	(bad)  
  417db7:	ss sub ah,ah
  417dba:	test   eax,0xc0bfc234
  417dbf:	cmp    eax,0xc9c6b4f0
  417dc4:	jne    0x417dd0
  417dc6:	ds pop ebp
  417dc8:	jecxz  0x417d8f
  417dca:	or     esp,DWORD PTR [esi-0x7b]
  417dcd:	mov    al,dl
  417dcf:	fisttp WORD PTR [eax]
  417dd1:	mov    edi,0xe15774c
  417dd6:	jmp    0x70f0:0x508c009
  417ddd:	jb     0x417d9e
  417ddf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417de0:	ja     0x417e0a
  417de2:	jge    0x417dc9
  417de4:	dec    ebx
  417de5:	mov    ch,0x34
  417de7:	cmp    eax,0x565cec53
  417dec:	mov    al,0x13
  417dee:	add    BYTE PTR [eax-0x50],ch
  417df1:	add    esi,DWORD PTR [edi-0x5c]
  417df4:	(bad)  
  417df5:	adc    ch,bl
  417df7:	xchg   esi,eax
  417df8:	adc    dh,BYTE PTR [ebx-0xbce5eb0]
  417dfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417dff:	mov    cs,WORD PTR [ebx+ebx*1]
  417e02:	push   esp
  417e03:	ror    DWORD PTR [edi+0x11b0b5fc],1
  417e09:	scas   eax,DWORD PTR es:[edi]
  417e0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e0b:	std    
  417e0c:	cmc    
  417e0d:	mov    ds:0x8885b6bc,eax
  417e12:	test   DWORD PTR [edi-0x6f],ebp
  417e15:	mov    eax,0xc0511a6c
  417e1a:	and    DWORD PTR [edi+0x1e],ecx
  417e1d:	out    0x8,eax
  417e1f:	mov    ch,0x31
  417e21:	adc    ebx,0x8d2834d0
  417e27:	xor    BYTE PTR [esi+0x78],dh
  417e2a:	xchg   BYTE PTR [edx+0x15],ah
  417e2d:	push   eax
  417e2e:	in     eax,dx
  417e2f:	mov    esi,0x740982b3
  417e34:	jecxz  0x417e55
  417e36:	xchg   DWORD PTR [edx+ebx*8+0x3336a2a1],edx
  417e3d:	sti    
  417e3e:	loopne 0x417e40
  417e40:	arpl   dx,cx
  417e42:	jnp    0x417e39
  417e44:	inc    esp
  417e45:	rcr    BYTE PTR [edi],1
  417e47:	sbb    BYTE PTR [ebp-0x71],dl
  417e4a:	inc    esi
  417e4b:	jne    0x417dd1
  417e4d:	cli    
  417e4e:	lock xchg esi,eax
  417e50:	jge    0x417e32
  417e52:	aas    
  417e53:	dec    ecx
  417e54:	pop    edi
  417e55:	and    eax,0x20e530ce
  417e5a:	dec    ebx
  417e5b:	pop    edx
  417e5c:	into   
  417e5d:	icebp  
  417e5e:	or     DWORD PTR [ebp*1-0x316a81af],ebp
  417e65:	push   esp
  417e66:	mov    ds:0x4a8fdf25,eax
  417e6b:	lock mov ds,WORD PTR [edx+0x46ee010b]
  417e72:	clc    
  417e73:	add    ecx,ebx
  417e75:	sbb    bl,ch
  417e77:	and    eax,0xdbe190f7
  417e7c:	sti    
  417e7d:	fnstsw WORD PTR [edx]
  417e7f:	mov    dh,0x17
  417e81:	push   ecx
  417e82:	add    al,0x1c
  417e84:	dec    ebx
  417e85:	stc    
  417e86:	cmp    bh,BYTE PTR [ecx+0x20223ac2]
  417e8c:	in     eax,0xea
  417e8e:	dec    ebp
  417e8f:	loop   0x417e79
  417e91:	add    BYTE PTR [esi+0x3c],bl
  417e94:	mov    dl,0x2a
  417e96:	xchg   edx,eax
  417e97:	mov    cs,eax
  417e99:	push   0xb79acbe9
  417e9e:	fcom   st(7)
  417ea0:	push   0xc8dfbbd2
  417ea5:	or     cl,BYTE PTR [ebp+0x44]
  417ea8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ea9:	mov    bl,0x21
  417eab:	dec    edx
  417eac:	test   DWORD PTR [edx+0x7af6dd],edi
  417eb2:	bound  ebx,QWORD PTR ds:0xb084e581
  417eb8:	mov    ch,0x7f
  417eba:	fiadd  DWORD PTR [ecx+0x191b4814]
  417ec0:	shr    DWORD PTR [ecx+esi*1],0x77
  417ec4:	mov    cl,0x3e
  417ec6:	iret   
  417ec7:	lea    ebp,[edi]
  417ec9:	xchg   BYTE PTR [eax-0x43223258],ah
  417ecf:	(bad)  
  417ed0:	int3   
  417ed1:	sahf   
  417ed2:	call   0xad38ca1c
  417ed7:	and    eax,0xa71cc248
  417edc:	and    al,0xf3
  417ede:	push   esp
  417edf:	pop    edi
  417ee0:	dec    edx
  417ee1:	ins    DWORD PTR es:[edi],dx
  417ee2:	pop    edi
  417ee3:	xor    bh,0xf3
  417ee6:	and    esp,DWORD PTR [edi-0x698aea92]
  417eec:	add    bl,BYTE PTR [esi+0x12]
  417eef:	arpl   WORD PTR [edx],si
  417ef1:	repnz adc ah,BYTE PTR [esi]
  417ef4:	cdq    
  417ef5:	ja     0x417eab
  417ef7:	int    0xe1
  417ef9:	push   cs
  417efa:	push   0x279cd0ad
  417eff:	das    
  417f00:	test   dl,bl
  417f02:	push   ebx
  417f03:	jp     0x417ed9
  417f05:	mov    WORD PTR [eax+ebx*2],fs
  417f08:	or     al,0x16
  417f0a:	ds mov ecx,ss
  417f0d:	mov    BYTE PTR [esi+0xfadec37],al
  417f13:	push   esp
  417f14:	ss inc esp
  417f16:	and    al,0xd6
  417f18:	push   ds
  417f19:	adc    esi,edi
  417f1b:	sar    DWORD PTR [ebp+0x7a],0x53
  417f1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f21:	rcl    DWORD PTR ds:[ebx+0x789b9317],cl
  417f28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f29:	dec    ebp
  417f2a:	inc    esi
  417f2b:	les    esi,FWORD PTR [ebp-0x48]
  417f2e:	(bad)  
  417f2f:	in     al,dx
  417f30:	cmp    ebp,DWORD PTR [eax+0x58f435a3]
  417f36:	daa    
  417f37:	xor    ebp,DWORD PTR [ebx+0x7d4ad15b]
  417f3d:	in     al,dx
  417f3e:	jnp    0x417f14
  417f40:	adc    BYTE PTR ds:0x8ae69cc3,bh
  417f46:	cld    
  417f47:	popf   
  417f48:	xchg   edi,eax
  417f49:	sbb    BYTE PTR [esi],bl
  417f4b:	loopne 0x417fa7
  417f4d:	test   DWORD PTR [edi+0x73],edi
  417f50:	cmp    BYTE PTR [ebx-0x3a],0xa4
  417f54:	dec    esi
  417f55:	daa    
  417f56:	in     al,0x84
  417f58:	jle    0x417f64
  417f5a:	mov    esp,0xc073330c
  417f5f:	cs pop ecx
  417f61:	mov    al,ds:0x862202ef
  417f66:	stos   BYTE PTR es:[edi],al
  417f67:	cmc    
  417f68:	mov    dh,0xbf
  417f6a:	xor    ecx,eax
  417f6c:	stos   DWORD PTR es:[edi],eax
  417f6d:	jne    0x417f3c
  417f6f:	pop    ebp
  417f70:	retf   0x3000
  417f73:	mov    dl,0xe3
  417f75:	mov    dh,0x15
  417f77:	stc    
  417f78:	fwait
  417f79:	or     DWORD PTR [ebp-0xc],0x2a
  417f7d:	js     0x417f6b
  417f7f:	jnp    0x417fc3
  417f81:	stc    
  417f82:	jne    0x417fe2
  417f84:	sub    ch,BYTE PTR [ebp-0x56c26f4f]
  417f8a:	jecxz  0x417fd4
  417f8c:	and    eax,DWORD PTR [esi]
  417f8e:	loope  0x417f89
  417f90:	pop    esp
  417f91:	adc    dl,BYTE PTR [eax-0x10]
  417f94:	adc    BYTE PTR [ecx],dh
  417f96:	jo     0x418010
  417f98:	xchg   esp,eax
  417f99:	jmp    0xa4cb3106
  417f9e:	cmp    BYTE PTR [esi],bh
  417fa0:	jecxz  0x41801f
  417fa2:	popf   
  417fa3:	xor    ch,dl
  417fa5:	mov    bh,0x26
  417fa7:	mov    cl,dl
  417fa9:	mov    bl,BYTE PTR [ecx+0x3db34da2]
  417faf:	push   esp
  417fb0:	inc    ebx
  417fb1:	mov    ds:0x6b7c09b0,eax
  417fb6:	sbb    eax,0x94b60fff
  417fbb:	pop    ecx
  417fbc:	xor    bl,BYTE PTR [ebp+0x75]
  417fbf:	repnz push edi
  417fc1:	jb     0x417f6c
  417fc3:	xor    esi,DWORD PTR [ecx+0x3bf66e83]
  417fc9:	arpl   WORD PTR [ebp+esi*8-0xe9d81b9],di
  417fd0:	push   esp
  417fd1:	imul   edi,DWORD PTR [edx+0x224e49e9],0x98286440
  417fdb:	mov    dl,al
  417fdd:	mov    edx,DWORD PTR [edi+eax*4-0x6e66b3bd]
  417fe4:	jl     0x418053
  417fe6:	mov    ch,0x61
  417fe8:	inc    eax
  417fe9:	push   es
  417fea:	jnp    0x417f70
  417fec:	sbb    DWORD PTR [ebp-0x68],esi
  417fef:	pop    esp
  417ff0:	fisub  WORD PTR [edi+ebp*1]
  417ff3:	mov    dl,BYTE PTR [eax*2+0x5b2bb468]
  417ffa:	das    
  417ffb:	sbb    DWORD PTR [esp+eiz*4-0x72],0xebe5346a
  418003:	ret    
  418004:	loopne 0x418065
  418006:	sti    
  418007:	mov    ds:0x61181762,eax
  41800c:	aam    0xd1
  41800e:	xor    BYTE PTR [ebp+0x4ba6e6fa],dl
  418014:	icebp  
  418015:	xchg   ebx,eax
  418016:	ss xchg ebx,eax
  418018:	add    ecx,DWORD PTR [edi]
  41801a:	std    
  41801b:	fistp  WORD PTR [ebx+ebx*1+0x1a1b284c]
  418022:	pop    ecx
  418023:	das    
  418024:	(bad)  
  418025:	mov    ebx,0xa7f6c098
  41802a:	cmp    edi,DWORD PTR ds:0x760db7d1
  418030:	sub    al,0x4e
  418032:	sub    edx,DWORD PTR [ecx]
  418034:	shl    BYTE PTR [ecx+0x38],1
  418037:	pop    esp
  418038:	aas    
  418039:	push   ebx
  41803a:	test   DWORD PTR [edi+ebp*1+0x41],esp
  41803e:	sub    BYTE PTR [edx],0x16
  418041:	jle    0x4180a5
  418043:	sti    
  418044:	sti    
  418045:	xlat   BYTE PTR ds:[ebx]
  418046:	jno    0x417fcf
  418048:	and    BYTE PTR [ebx-0x24],bl
  41804b:	call   0x2cbf321b
  418050:	ror    BYTE PTR [ebp+0x18b8c044],cl
  418056:	mov    eax,0x702d535
  41805b:	fwait
  41805c:	test   BYTE PTR [eax],dl
  41805e:	neg    eax
  418060:	std    
  418061:	push   ds
  418062:	sbb    cl,BYTE PTR [esp+eax*8]
  418065:	sub    DWORD PTR [ecx+esi*8+0x31],0xccb239a6
  41806d:	test   BYTE PTR [eax-0x729d43d1],dh
  418073:	rol    BYTE PTR [eax+0x3b],cl
  418076:	sti    
  418077:	mov    eax,0xf6b21a7b
  41807c:	lods   al,BYTE PTR ds:[esi]
  41807d:	xchg   ebp,eax
  41807e:	int    0x28
  418080:	ret    
  418081:	arpl   bx,di
  418083:	add    al,0x6a
  418085:	push   ss
  418086:	sbb    ebx,DWORD PTR [esi]
  418088:	je     0x41800e
  41808a:	jb     0x4180f4
  41808c:	pop    eax
  41808d:	jg     0x418048
  41808f:	sbb    eax,0x404f35a1
  418094:	shl    bh,cl
  418096:	mov    eax,ds:0xffca316b
  41809b:	cmp    eax,0xa7ae4c65
  4180a0:	jb     0x4180bc
  4180a2:	push   ds
  4180a3:	pop    ecx
  4180a4:	lahf   
  4180a5:	inc    esi
  4180a6:	xor    ebx,esp
  4180a8:	mov    cl,0x73
  4180aa:	or     ah,BYTE PTR [edx-0x11788398]
  4180b0:	mov    ss,WORD PTR [edi]
  4180b2:	jge    0x4180e7
  4180b4:	jg     0x418128
  4180b6:	sub    DWORD PTR [esi-0x29720f72],0xe86bf47
  4180c0:	je     0x418119
  4180c2:	dec    ebp
  4180c3:	in     eax,0x11
  4180c5:	inc    edi
  4180c6:	inc    edi
  4180c7:	dec    ecx
  4180c8:	pop    ds
  4180c9:	adc    esp,0xc4264fa2
  4180cf:	(bad)  
  4180d0:	jns    0x4180e7
  4180d2:	pop    es
  4180d3:	scas   al,BYTE PTR es:[edi]
  4180d4:	inc    ebx
  4180d5:	adc    al,0x16
  4180d7:	mov    eax,0xdc3fc3d7
  4180dc:	and    DWORD PTR [esi],ecx
  4180de:	xchg   ebp,eax
  4180df:	daa    
  4180e0:	push   esi
  4180e1:	add    edi,ebp
  4180e3:	aam    0x82
  4180e5:	dec    edx
  4180e6:	jb     0x418143
  4180e8:	out    dx,al
  4180e9:	mov    bl,0xa4
  4180eb:	fild   DWORD PTR [edi-0x4d09d888]
  4180f1:	daa    
  4180f2:	ror    DWORD PTR [edx+eiz*1-0x5ba0f275],1
  4180f9:	jbe    0x418115
  4180fb:	mov    ah,0x33
  4180fd:	add    ebp,DWORD PTR [ebx+esi*1]
  418100:	cwde   
  418101:	add    al,0x70
  418103:	pushf  
  418104:	enter  0xbaa1,0xd8
  418108:	cmp    BYTE PTR [ebx+0x46b1d346],al
  41810e:	icebp  
  41810f:	fidivr WORD PTR [ebp-0x7a04fcd0]
  418115:	mov    esi,0x801d1f7b
  41811a:	pushf  
  41811b:	pop    edx
  41811c:	test   DWORD PTR [esi+0x2786df06],esp
  418122:	pop    ecx
  418123:	fmul   QWORD PTR [edx]
  418125:	sbb    cl,bh
  418127:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418128:	xlat   BYTE PTR ds:[ebx]
  418129:	push   0x96428d71
  41812e:	lgs    esp,FWORD PTR [edi-0x56]
  418132:	mov    ch,0x3d
  418134:	sahf   
  418135:	sub    ah,BYTE PTR [ebx-0x60]
  418138:	push   esi
  418139:	push   edi
  41813a:	mov    ds:0x11adf21,al
  41813f:	push   ds
  418140:	add    al,0xda
  418142:	pop    ds
  418143:	in     eax,0x7c
  418145:	inc    ecx
  418146:	out    dx,al
  418147:	call   0x5f65:0xfb813e3c
  41814e:	in     eax,0x1f
  418150:	(bad)  
  418151:	loop   0x418196
  418153:	pop    eax
  418154:	adc    bh,BYTE PTR [edi+0x35]
  418157:	mov    cl,0x4f
  418159:	loop   0x4181cf
  41815b:	mov    ebp,DWORD PTR [eax-0x7]
  41815e:	repz leave 
  418160:	mov    bl,0x56
  418162:	mov    BYTE PTR [eax-0x17],0x23
  418166:	test   eax,0x97f5554a
  41816b:	idiv   DWORD PTR [esi+0x65]
  41816e:	push   edi
  41816f:	and    eax,0xe80e2dca
  418174:	popf   
  418175:	(bad)  
  418176:	shr    DWORD PTR [ecx+0x1e],cl
  418179:	sbb    eax,0xe7e7cbcc
  41817e:	cli    
  41817f:	fnstcw WORD PTR [ebx]
  418181:	push   cs
  418182:	xor    eax,0x418fbb82
  418187:	mov    dl,0xd8
  418189:	adc    eax,0x7bb816e4
  41818e:	imul   ebx,DWORD PTR [eax],0x65
  418191:	jne    0x4181a9
  418193:	ds das 
  418195:	clc    
  418196:	mov    bl,0xd1
  418198:	sub    al,0x49
  41819a:	out    dx,eax
  41819b:	cwde   
  41819c:	sti    
  41819d:	imul   ecx,DWORD PTR [ecx+0x51af9844],0x524034c6
  4181a7:	push   esi
  4181a8:	jae    0x418144
  4181aa:	retf   0xd6a5
  4181ad:	shl    ah,1
  4181af:	mov    al,dl
  4181b1:	dec    ebx
  4181b2:	gs rol ebx,1
  4181b5:	jecxz  0x4181ba
  4181b7:	mov    ds:0x48a20161,al
  4181bc:	add    DWORD PTR [ecx],eax
  4181be:	jb     0x4181ef
  4181c0:	push   ebx
  4181c1:	test   dh,bl
  4181c3:	mov    BYTE PTR [edx+0x87aa5c4],al
  4181c9:	fs push ebp
  4181cb:	cmp    DWORD PTR [esp+eax*2-0x1f],ebp
  4181cf:	enter  0x6134,0xa0
  4181d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181d4:	jbe    0x4181f2
  4181d6:	iret   
  4181d7:	adc    BYTE PTR [esi],al
  4181d9:	pop    ds
  4181da:	loop   0x41824c
  4181dc:	or     ebx,eax
  4181de:	adc    eax,0x744c8b74
  4181e3:	call   0x3280:0x33599389
  4181ea:	dec    esi
  4181eb:	cmp    DWORD PTR [edx],ecx
  4181ed:	jno    0x418247
  4181ef:	mov    DWORD PTR [eax+0x0],0x3e0076f3
  4181f6:	cdq    
  4181f7:	and    al,bh
  4181f9:	inc    ebx
  4181fa:	mov    edi,0x6f1ffb15
  4181ff:	mov    esi,0x482153ed
  418204:	test   edx,esi
  418206:	adc    eax,0xd577dc37
  41820b:	mov    dh,0x5b
  41820d:	int3   
  41820e:	outs   dx,BYTE PTR ds:[esi]
  41820f:	scas   eax,DWORD PTR es:[edi]
  418210:	inc    esi
  418211:	sti    
  418212:	loop   0x41820f
  418214:	popf   
  418215:	cmp    al,0x6
  418217:	and    dh,BYTE PTR [ebx+ebp*1-0x423694aa]
  41821e:	cmp    eax,0xc25c3537
  418223:	xor    al,0xbb
  418225:	pop    ecx
  418226:	dec    edx
  418227:	ror    BYTE PTR [eax-0x64b1a5de],0x1
  41822e:	arpl   WORD PTR ds:0x57d06df5,si
  418234:	push   esi
  418235:	adc    eax,0xd1f7885f
  41823a:	xor    ebp,ebx
  41823c:	push   edx
  41823d:	jmp    0xd1507432
  418242:	daa    
  418243:	sbb    eax,0x20ef4d2f
  418248:	xlat   BYTE PTR ds:[ebx]
  418249:	sub    DWORD PTR ds:0x527247c9,edx
  41824f:	cmp    eax,0xdc196acd
  418254:	fnsave [edi+0x4]
  418257:	mov    eax,ds:0x8d327566
  41825c:	and    al,cl
  41825e:	sbb    eax,0x7031110c
  418263:	mov    al,0x4f
  418265:	add    bh,dh
  418267:	fnstsw WORD PTR [eax]
  418269:	jp     0x4182a0
  41826b:	xchg   ebp,eax
  41826c:	test   esi,edx
  41826e:	lea    esp,[eax-0x3e]
  418271:	xchg   edx,eax
  418272:	lods   al,BYTE PTR ds:[esi]
  418273:	and    bh,BYTE PTR [eax-0x7d]
  418276:	sti    
  418277:	cmc    
  418278:	cli    
  418279:	iret   
  41827a:	scas   eax,DWORD PTR es:[edi]
  41827b:	dec    esp
  41827c:	pusha  
  41827d:	mov    bl,ah
  41827f:	arpl   ax,si
  418281:	pop    es
  418282:	retf   0xd677
  418285:	sbb    al,0x91
  418287:	pop    esp
  418288:	push   cs
  418289:	sub    DWORD PTR [ebx-0x35],ebp
  41828c:	inc    edx
  41828d:	fnstsw WORD PTR [ebp+0x43]
  418290:	mov    edx,0x70be57c7
  418295:	jmp    0x418297
  418297:	jbe    0x418246
  418299:	lock cmp esp,DWORD PTR [eax+ebp*1+0x2858bc70]
  4182a1:	jns    0x4182a5
  4182a3:	dec    ecx
  4182a4:	xor    DWORD PTR [edx+0x16],eax
  4182a7:	jge    0x418245
  4182a9:	or     al,0xf7
  4182ab:	sbb    eax,0xb20fb9e1
  4182b0:	aad    0x86
  4182b2:	mov    edi,0x39d407d9
  4182b7:	cmc    
  4182b8:	es pop ebp
  4182ba:	or     al,0x1a
  4182bc:	adc    DWORD PTR [eax+0x80fb78b],eax
  4182c2:	adc    eax,0x615d827b
  4182c7:	clc    
  4182c8:	das    
  4182c9:	icebp  
  4182ca:	push   es
  4182cb:	dec    eax
  4182cc:	cs loope 0x4182c7
  4182cf:	sub    BYTE PTR [eax],0x37
  4182d2:	pop    ebp
  4182d3:	mov    ds:0xe44fb44,eax
  4182d8:	loop   0x418312
  4182da:	sbb    edi,DWORD PTR [esi-0x5c]
  4182dd:	xor    BYTE PTR [esi+0x31a5a07b],ch
  4182e3:	push   ecx
  4182e4:	add    BYTE PTR [ebx-0x612bc9d8],dh
  4182ea:	int    0xa2
  4182ec:	and    esi,DWORD PTR [ebx-0x9]
  4182ef:	and    DWORD PTR [edi],edi
  4182f1:	cmc    
  4182f2:	xor    ebp,DWORD PTR [ebp-0x2b]
  4182f5:	repnz mov eax,ds:0x1072674c
  4182fb:	(bad)  
  4182fc:	aaa    
  4182fd:	test   DWORD PTR [edx+0x62],edi
  418300:	sbb    DWORD PTR [eax+edx*8-0x6d],eax
  418304:	fcmovnu st,st(2)
  418306:	aam    0xc8
  418308:	shl    DWORD PTR [ebx-0x46],0x8c
  41830c:	fisttp WORD PTR [edi-0x51]
  41830f:	outs   dx,BYTE PTR ds:[esi]
  418310:	mov    bl,bh
  418312:	dec    esp
  418313:	dec    eax
  418314:	hlt    
  418315:	js     0x4182ff
  418317:	mov    eax,DWORD PTR [ebp+ebx*2+0x49]
  41831b:	adc    DWORD PTR [esi-0x6b63b9f4],eax
  418321:	jb     0x4182f6
  418323:	mov    edx,0x7ff6d237
  418328:	popf   
  418329:	div    edx
  41832b:	mov    eax,0xf04bb5d8
  418330:	leave  
  418331:	imul   ebx,eax,0x69a87210
  418337:	data16 jp 0x418338
  41833a:	sub    ch,ah
  41833c:	lods   al,BYTE PTR ds:[esi]
  41833d:	jge    0x4183be
  41833f:	jl     0x41836c
  418341:	sbb    al,0x58
  418343:	fcomp  DWORD PTR [esi+0x66a6d831]
  418349:	xor    cl,BYTE PTR [eax]
  41834b:	mov    eax,ds:0x27729e2a
  418350:	sbb    eax,DWORD PTR [edx+0x43]
  418353:	xor    cl,BYTE PTR ds:0x27a696aa
  418359:	jb     0x418360
  41835b:	jp     0x4183bd
  41835d:	adc    DWORD PTR [eax-0x5152ffb5],edi
  418363:	ret    0xb521
  418366:	call   FWORD PTR [edx]
  418368:	inc    esp
  418369:	and    ebx,DWORD PTR [eax]
  41836b:	xor    BYTE PTR [ebp+0x53ea514a],dh
  418371:	cmp    DWORD PTR [ebx],eax
  418373:	or     eax,0xf6e2db35
  418378:	retf   0xfcef
  41837b:	mov    al,ds:0xa976f3fd
  418380:	add    BYTE PTR [ebx-0x66],bh
  418383:	mov    WORD PTR [ecx-0x304e7ac5],ss
  418389:	call   0x9116861
  41838e:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418390:	pop    esi
  418391:	push   edx
  418392:	loope  0x418404
  418394:	mov    bh,0x5b
  418396:	test   eax,0xa7722c88
  41839b:	cs loope 0x41840f
  41839e:	xlat   BYTE PTR ds:[ebx]
  41839f:	(bad)  
  4183a0:	in     eax,dx
  4183a1:	jno    0x4183ba
  4183a3:	jb     0x41841f
  4183a5:	sub    ah,ch
  4183a7:	out    0xda,al
  4183a9:	in     eax,0xea
  4183ab:	mov    ebx,0xe47e94e8
  4183b0:	mov    al,0x3a
  4183b2:	inc    edi
  4183b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183b4:	sub    al,0x52
  4183b6:	push   ebp
  4183b7:	dec    edx
  4183b8:	(bad)  
  4183b9:	jle    0x418350
  4183bb:	or     BYTE PTR [ecx],dl
  4183bd:	jmp    0xb23f:0x56b3c775
  4183c4:	pusha  
  4183c5:	fisubr DWORD PTR [ebx+0x37]
  4183c8:	sub    esp,edx
  4183ca:	mov    eax,ds:0x8350f61e
  4183cf:	int3   
  4183d0:	out    0xef,al
  4183d2:	cmc    
  4183d3:	pop    esp
  4183d4:	jns    0x41835d
  4183d6:	pusha  
  4183d7:	ss pop ebp
  4183d9:	sub    BYTE PTR [ecx+0x528bd48],ch
  4183df:	lds    esi,FWORD PTR [edi-0x1f9d49d]
  4183e5:	pop    ds
  4183e6:	mov    ds:0x41ca3bbd,al
  4183eb:	lods   al,BYTE PTR ds:[esi]
  4183ec:	(bad)  
  4183ed:	sbb    cl,ch
  4183ef:	in     al,0x2a
  4183f1:	retf   0x2fcf
  4183f4:	out    dx,al
  4183f5:	jnp    0x4183bd
  4183f7:	mov    esi,0xebbba933
  4183fc:	mov    ebx,0x8370e95a
  418401:	enter  0x4cc7,0x94
  418405:	jmp    0x418424
  418407:	mov    esp,0x47648bf
  41840c:	mov    ds:0x1f861da7,eax
  418411:	outs   dx,BYTE PTR ds:[esi]
  418412:	loopne 0x418412
  418414:	push   0xf83b7676
  418419:	cmp    eax,0x59d93e01
  41841e:	push   es
  41841f:	adc    cl,ch
  418421:	mov    ah,0x4f
  418423:	rcr    BYTE PTR [eax+esi*4+0x9],cl
  418427:	rcr    esi,1
  418429:	push   eax
  41842a:	int3   
  41842b:	lds    edx,FWORD PTR [ebx-0x1be2494]
  418431:	or     dl,0xe7
  418434:	shl    DWORD PTR ss:[eax-0x1f],1
  418438:	jb     0x418425
  41843a:	add    BYTE PTR [ebp-0x74da7c29],bh
  418440:	lods   al,BYTE PTR ds:[esi]
  418441:	mov    ecx,0x743a00d0
  418446:	pop    eax
  418447:	xor    eax,0xa730a41a
  41844c:	nop
  41844d:	jb     0x4183db
  41844f:	add    ch,cl
  418451:	mov    ebx,ecx
  418453:	pop    edi
  418454:	ret    0xf0ef
  418457:	dec    edx
  418458:	(bad)  
  418459:	data16 adc dl,BYTE PTR [edi-0x63]
  41845d:	jb     0x4184da
  41845f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418460:	add    al,0xcb
  418462:	int    0x73
  418464:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418465:	test   eax,0xd5761d11
  41846a:	pop    ecx
  41846b:	dec    esi
  41846d:	ds loope 0x4184e2
  418470:	push   eax
  418471:	xchg   DWORD PTR [ebx],ebp
  418473:	les    esp,FWORD PTR [ebx+edx*4+0x7a860e2f]
  41847a:	pop    ecx
  41847b:	outs   dx,DWORD PTR ds:[esi]
  41847c:	mov    bl,0xf0
  41847e:	into   
  41847f:	xchg   BYTE PTR [edx+0x67368ebb],bl
  418485:	pop    esp
  418486:	cs push esi
  418488:	xor    eax,DWORD PTR [ecx]
  41848a:	sti    
  41848b:	inc    edi
  41848c:	mov    ds:0x1e147d2f,eax
  418491:	or     ebp,DWORD PTR [ebp-0x12]
  418494:	test   al,0xd8
  418496:	sbb    eax,0x88b23f41
  41849b:	mov    ebp,0xba203779
  4184a0:	jbe    0x4184cc
  4184a2:	jne    0x4184d9
  4184a4:	add    eax,0x244355f8
  4184a9:	xor    al,0x9f
  4184ab:	daa    
  4184ac:	mov    ah,0x5
  4184ae:	(bad)  
  4184af:	cmp    bh,BYTE PTR [eax-0x34]
  4184b2:	inc    ebp
  4184b3:	mov    esp,0x6db7ee1c
  4184b8:	cmp    eax,0x987d7ec6
  4184bd:	jmp    0xece3e130
  4184c2:	mov    BYTE PTR [esi],ch
  4184c4:	(bad)  
  4184c5:	push   ebx
  4184c6:	fcmovnb st,st(3)
  4184c8:	dec    ebp
  4184c9:	jbe    0x41848d
  4184cb:	jmp    0x590a:0xa1d9aa7c
  4184d2:	push   ebx
  4184d3:	mov    WORD PTR [esi+0x25],ss
  4184d6:	mov    bl,0x41
  4184d8:	sar    DWORD PTR [ebp+0x54614eee],1
  4184de:	loop   0x418487
  4184e0:	sbb    eax,0xa68d5c16
  4184e5:	adc    dh,cl
  4184e7:	ja     0x418481
  4184e9:	mov    ecx,0xe20c14df
  4184ee:	nop
  4184ef:	or     DWORD PTR [esi-0x26],0x3c
  4184f3:	dec    ecx
  4184f4:	dec    edx
  4184f5:	pusha  
  4184f6:	and    BYTE PTR [edi-0x44a436f5],bh
  4184fc:	jmp    0x4184a1
  4184fe:	lods   eax,DWORD PTR ds:[esi]
  4184ff:	mov    esi,0xef5a7625
  418504:	bound  edi,QWORD PTR [ecx-0x6a]
  418507:	out    0x4a,al
  418509:	sbb    eax,DWORD PTR [ecx]
  41850b:	loope  0x41854d
  41850d:	and    al,bh
  41850f:	call   0x217f:0x852b4d49
  418516:	xchg   DWORD PTR [edi],eax
  418518:	stos   DWORD PTR es:[edi],eax
  418519:	retf   0xdf3a
  41851c:	mov    cl,0xf3
  41851e:	out    0xbf,eax
  418520:	mov    dl,0xbd
  418522:	out    dx,eax
  418523:	jecxz  0x4184e4
  418525:	(bad)  
  418526:	pop    ds
  418527:	mov    BYTE PTR [ebp*8-0x3b7156bd],dh
  41852e:	sub    ebp,DWORD PTR [ebx+0x14]
  418531:	retf   
  418532:	mov    bh,0xc9
  418534:	jmp    0x3341:0x4b6aff00
  41853b:	xlat   BYTE PTR ds:[ebx]
  41853c:	imul   edi,DWORD PTR [eax],0x786118f1
  418542:	add    edx,ebp
  418544:	jle    0x4184d7
  418546:	enter  0x20ff,0x1a
  41854a:	mov    ebx,0x1ca4d102
  41854f:	fnsave [eax-0x273d2ab8]
  418555:	xlat   BYTE PTR ds:[ebx]
  418556:	pop    edx
  418557:	pushf  
  418558:	mov    ebp,0x561ae163
  41855d:	jnp    0x418519
  41855f:	sub    dl,BYTE PTR cs:[eax-0x6bcd037a]
  418566:	mov    al,ds:0xf3c8dd02
  41856b:	clc    
  41856c:	xchg   ebp,eax
  41856d:	imul   edx,DWORD PTR [eax+0x1f8e3668],0xffffffaf
  418574:	add    al,0xd
  418576:	cmp    DWORD PTR [edi],edi
  418578:	mov    BYTE PTR [ecx-0x6b],cl
  41857b:	fiadd  DWORD PTR ds:0xac2c3e32
  418581:	mov    dh,0x1
  418583:	mov    ds:0xb9d8da32,al
  418588:	fwait
  418589:	mov    BYTE PTR cs:[edi+esi*8],cl
  41858d:	jg     0x4185fa
  41858f:	aas    
  418590:	add    DWORD PTR [ecx+0x1fb0339b],esp
  418596:	stos   BYTE PTR es:[edi],al
  418597:	int3   
  418598:	test   DWORD PTR [ecx],eax
  41859a:	pusha  
  41859b:	cld    
  41859c:	cmp    al,0xac
  41859e:	pusha  
  41859f:	imul   esi,ebx,0xffffff8a
  4185a2:	sub    eax,0x5bc902bc
  4185a7:	xchg   edx,eax
  4185a8:	inc    di
  4185aa:	sub    eax,0x37852c30
  4185af:	xor    BYTE PTR [ecx+0x3badadd6],al
  4185b5:	xchg   ebp,eax
  4185b6:	push   edx
  4185b7:	and    al,BYTE PTR [ebp*8-0xca5f1f4]
  4185be:	adc    DWORD PTR [edi+0x16121643],ebp
  4185c4:	mov    cl,0x97
  4185c6:	xor    al,0xb3
  4185c8:	mov    ch,0x98
  4185ca:	(bad)  
  4185cb:	and    eax,0x6b54e95
  4185d0:	adc    eax,0x46623c78
  4185d5:	adc    al,0xc
  4185d7:	test   BYTE PTR [esi-0x37],dh
  4185da:	mov    edi,0x966c13f9
  4185df:	pop    ebp
  4185e0:	mov    dl,0x7b
  4185e2:	adc    esi,edi
  4185e4:	adc    BYTE PTR [ecx-0x2ec7ec13],0x16
  4185eb:	loope  0x4185a8
  4185ed:	ds push eax
  4185ef:	xchg   esi,eax
  4185f0:	mov    DWORD PTR [ecx],eax
  4185f2:	mov    edi,0xc4bd669c
  4185f7:	shl    sp,0x22
  4185fb:	je     0x418661
  4185fd:	aaa    
  4185fe:	dec    esp
  4185ff:	sbb    dl,dl
  418601:	fisub  WORD PTR [edx-0x5912dc47]
  418607:	push   ecx
  418608:	adc    DWORD PTR [edx-0x3fcc4090],ebp
  41860e:	ud2    
  418610:	mov    ebx,DWORD PTR [esi+edx*2-0x43782028]
  418617:	bound  edx,QWORD PTR [edx-0x42]
  41861a:	cmp    eax,0x220fe282
  41861f:	punpckhwd mm1,mm7
  418622:	stos   BYTE PTR es:[edi],al
  418623:	cmp    eax,0x675577ce
  418628:	test   al,0x90
  41862a:	scas   al,BYTE PTR es:[edi]
  41862b:	ds (bad) 
  41862d:	adc    al,0xad
  41862f:	loop   0x4185db
  418631:	or     BYTE PTR ds:0x7a8fb8e9,dh
  418637:	jae    0x4185be
  418639:	pop    ecx
  41863a:	xchg   BYTE PTR [ecx-0x11],ch
  41863d:	(bad)
  418640:	or     ecx,DWORD PTR [ebp+edi*4-0x39]
  418644:	and    ch,al
  418646:	jle    0x418687
  418648:	stos   DWORD PTR es:[edi],eax
  418649:	outs   dx,BYTE PTR ds:[esi]
  41864a:	xor    eax,0x595fb2b1
  41864f:	in     al,dx
  418650:	inc    edi
  418651:	jne    0x4185dd
  418653:	dec    ebp
  418654:	jns    0x418658
  418656:	mov    ebp,DWORD PTR ds:0x89cb5f31
  41865c:	in     al,0x4
  41865e:	out    0xce,eax
  418660:	xchg   ebx,eax
  418661:	cmp    DWORD PTR [edx-0xaf4bbe9],eax
  418667:	lds    edx,FWORD PTR [esi+0x5eba00ae]
  41866d:	gs push 0x9ec67920
  418673:	retf   0xab67
  418676:	lds    eax,FWORD PTR [ebx+0xf]
  418679:	nop
  41867a:	xlat   BYTE PTR ds:[ebx]
  41867b:	mov    bh,0x23
  41867d:	jle    0x418637
  41867f:	push   ss
  418680:	jge    0x4186e3
  418682:	mov    eax,0x5f9b71a1
  418687:	push   ebx
  418688:	inc    ebx
  418689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41868a:	rol    DWORD PTR [esp+eiz*8],cl
  41868d:	fstp   QWORD PTR [eax]
  41868f:	xchg   esi,eax
  418690:	add    eax,0x6c9aa828
  418695:	repz mov esp,0x4cfa69e7
  41869b:	cdq    
  41869c:	xor    eax,0xdb0d2a6d
  4186a1:	pop    ss
  4186a2:	dec    ebp
  4186a3:	es inc ebp
  4186a5:	jmp    0x71787e2
  4186aa:	mov    ecx,0x1a6955cb
  4186af:	adc    BYTE PTR [esi],cl
  4186b1:	(bad)  
  4186b2:	fdiv   DWORD PTR [edi]
  4186b4:	sbb    DWORD PTR [ebp+ebx*2+0x20],ebx
  4186b8:	jge    0x4186b7
  4186ba:	fsubrp st(6),st
  4186bc:	or     DWORD PTR [ecx+0x20],edi
  4186bf:	sub    BYTE PTR [esi-0x61],dh
  4186c2:	push   0x74
  4186c4:	push   0xffffffee
  4186c6:	add    edx,DWORD PTR [ebp+0x6dd4ab3f]
  4186cc:	outs   dx,BYTE PTR ds:[esi]
  4186cd:	and    cl,ch
  4186cf:	pop    edx
  4186d0:	sbb    cl,dl
  4186d2:	push   esp
  4186d3:	xor    dl,BYTE PTR [esi]
  4186d5:	std    
  4186d6:	mov    al,bl
  4186d8:	pop    DWORD PTR [edx+0x67]
  4186db:	adc    BYTE PTR [edi],cl
  4186dd:	xchg   esi,eax
  4186de:	ins    BYTE PTR es:[edi],dx
  4186df:	xchg   ecx,eax
  4186e0:	jle    0x4186e5
  4186e2:	push   esp
  4186e3:	xlat   BYTE PTR ds:[ebx]
  4186e4:	push   edx
  4186e5:	or     BYTE PTR [edx+ecx*2],bl
  4186e8:	ins    DWORD PTR es:[edi],dx
  4186e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186ea:	addr16 sahf 
  4186ec:	hlt    
  4186ed:	cmp    eax,0x6d8849fd
  4186f2:	or     eax,DWORD PTR [edi]
  4186f4:	add    eax,0x8aba50ba
  4186f9:	xchg   DWORD PTR [edx+0xf7b843a],edi
  4186ff:	push   es
  418700:	sub    al,0xe5
  418702:	popa   
  418703:	xchg   ebp,eax
  418704:	inc    DWORD PTR [edx+0x10]
  418707:	add    ebp,ebx
  418709:	aaa    
  41870a:	jno    0x418751
  41870c:	cli    
  41870d:	mov    dl,BYTE PTR [edx]
  41870f:	sahf   
  418710:	pop    edi
  418711:	aam    0xf7
  418713:	jmp    0xa269:0xe2dc29ba
  41871a:	or     DWORD PTR [eax+esi*8],0xef3c4aba
  418721:	pop    eax
  418722:	adc    edx,DWORD PTR [edx-0x2f]
  418725:	xor    eax,0xafc2939f
  41872a:	or     al,0x3f
  41872c:	mov    ecx,DWORD PTR [ecx+0x74]
  41872f:	mov    cl,0x8a
  418731:	mov    DWORD PTR [ebx+0x7918301c],ebx
  418737:	fcmovne st,st(1)
  418739:	mov    bh,0x56
  41873b:	fwait
  41873c:	or     dl,BYTE PTR [edx]
  41873e:	call   0x8491:0xee2d90c4
  418745:	int    0x40
  418747:	push   0xecca0200
  41874c:	mov    ecx,0x7b208c84
  418751:	and    dl,BYTE PTR [edx-0x79]
  418754:	mul    DWORD PTR [esi+0x7c]
  418757:	inc    esp
  418758:	push   ebx
  418759:	out    0x9d,eax
  41875b:	mov    ebx,0x9b86b84e
  418760:	push   ebp
  418761:	sub    ah,0x74
  418764:	lock scas al,BYTE PTR es:[edi]
  418766:	jae    0x41877a
  418768:	and    DWORD PTR [ecx+0x4efc4c5],eax
  41876e:	je     0x4187ec
  418770:	mov    dl,0xfc
  418772:	sbb    eax,esi
  418774:	stos   DWORD PTR es:[edi],eax
  418775:	leave  
  418776:	inc    edi
  418777:	jnp    0x41874e
  418779:	(bad)  
  41877a:	imul   esi,DWORD PTR [esi-0x138cf120],0xa5696c2a
  418784:	rcr    BYTE PTR [edx-0x4fc01be5],1
  41878a:	mov    eax,ds:0x9e2f9e37
  41878f:	jno    0x4187c3
  418791:	mov    edx,0x11cf4b9f
  418796:	pop    ebx
  418797:	pop    esp
  418798:	jne    0x4187b7
  41879a:	ror    esp,0x80
  41879d:	jl     0x418804
  41879f:	sbb    al,0x2a
  4187a1:	mov    al,ds:0xe35c71eb
  4187a6:	call   0xae41:0xc611b91c
  4187ad:	cmp    esi,ebx
  4187af:	scas   al,BYTE PTR es:[edi]
  4187b0:	pusha  
  4187b1:	sti    
  4187b2:	ret    0xc61b
  4187b5:	push   0xffffffb9
  4187b7:	shr    BYTE PTR [esi+eiz*2-0x11],0xde
  4187bc:	loop   0x4187e7
  4187be:	fldcw  WORD PTR ds:0x8be035ec
  4187c4:	div    BYTE PTR [eax]
  4187c6:	mov    dh,0xb9
  4187c8:	in     al,dx
  4187c9:	jmp    0x8438:0x58ac167b
  4187d0:	xchg   DWORD PTR [esi-0x66],edi
  4187d3:	inc    esi
  4187d4:	or     al,ah
  4187d6:	sbb    ecx,esi
  4187d8:	ret    
  4187d9:	push   cs
  4187da:	xchg   ecx,eax
  4187db:	xor    al,0x11
  4187dd:	xor    ecx,DWORD PTR [esi]
  4187df:	and    al,0x3c
  4187e1:	sub    al,0x5
  4187e3:	stos   WORD PTR es:[edi],ax
  4187e5:	test   ah,0xd0
  4187e8:	loope  0x418842
  4187ea:	mov    bh,0x9a
  4187ec:	mov    edx,0x334467c2
  4187f1:	sub    ah,BYTE PTR [ecx+0x62]
  4187f4:	dec    ecx
  4187f5:	adc    esi,DWORD PTR [ebp+ebp*1-0xe48d088]
  4187fc:	repz scas al,BYTE PTR es:[edi]
  4187fe:	and    ah,BYTE PTR [ecx+esi*4+0x2d5c8687]
  418805:	fnclex 
  418807:	test   eax,0x4ef2b169
  41880c:	dec    esp
  41880d:	and    ch,BYTE PTR [esi]
  41880f:	adc    DWORD PTR [ebp-0x67],esi
  418812:	(bad)  [ecx-0x3b982f7a]
  418818:	jle    0x41883a
  41881a:	xor    ah,BYTE PTR [ebx]
  41881c:	xor    eax,0x870ddde5
  418821:	test   al,0x7a
  418823:	iret   
  418824:	mov    ch,0x2c
  418826:	int3   
  418827:	fwait
  418828:	or     bh,dl
  41882a:	adc    BYTE PTR [esi+0x4e7f09b],al
  418830:	retf   
  418831:	cmp    bh,al
  418833:	cmp    DWORD PTR [esi+0x4b19af79],edx
  418839:	xlat   BYTE PTR ds:[ebx]
  41883a:	push   ebx
  41883b:	stos   DWORD PTR es:[edi],eax
  41883c:	push   esi
  41883d:	out    0x79,eax
  41883f:	popf   
  418840:	jno    0x418849
  418842:	jnp    0x418819
  418844:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418845:	(bad)
  418848:	mov    edi,0x489e6f8f
  41884d:	mov    eax,0x3216b56c
  418852:	mov    al,0x8f
  418854:	frstor [ebp-0xb]
  418857:	mov    ebp,0x6c6c8a74
  41885c:	push   ecx
  41885d:	imul   esp,DWORD PTR [ebx-0x5],0xffffffef
  418861:	cmp    eax,0x1bc92f53
  418866:	test   al,0x88
  418868:	inc    ebp
  418869:	lds    edx,FWORD PTR [edx+0x7dd7bbdf]
  41886f:	enter  0xe274,0xf7
  418873:	lods   al,BYTE PTR ds:[esi]
  418874:	pushf  
  418875:	xchg   esp,eax
  418876:	or     al,0x24
  418878:	adc    al,0x66
  41887a:	mov    edi,DWORD PTR [ebx+0x1f7899f]
  418880:	rol    BYTE PTR [edi+0x554246e7],0xd1
  418887:	in     eax,0x54
  418889:	test   DWORD PTR [edx-0x10],edx
  41888c:	ja     0x418880
  41888e:	out    dx,al
  41888f:	in     al,dx
  418890:	pop    ebx
  418891:	jge    0x418831
  418893:	inc    ecx
  418894:	imul   BYTE PTR [ebx-0x50]
  418897:	add    ah,bl
  418899:	inc    esp
  41889a:	(bad)  
  41889b:	loop   0x41882b
  41889d:	in     eax,0x22
  41889f:	sbb    eax,0x43c68ab9
  4188a4:	pop    ebx
  4188a5:	ins    DWORD PTR es:[edi],dx
  4188a6:	adc    al,BYTE PTR [edx]
  4188a8:	xchg   edx,eax
  4188a9:	pop    eax
  4188aa:	xor    ch,ah
  4188ac:	xchg   edi,eax
  4188ad:	add    DWORD PTR [ecx+0x1bdfdc12],esp
  4188b3:	mov    edx,0x7f5128c7
  4188b8:	mov    ebx,0x9971b2d6
  4188bd:	out    0xe6,al
  4188bf:	jge    0x418929
  4188c1:	jle    0x41888f
  4188c3:	inc    esi
  4188c4:	mov    DWORD PTR [eax+0x13afc93c],ebp
  4188ca:	fsub   QWORD PTR [edi]
  4188cc:	scas   al,BYTE PTR es:[edi]
  4188cd:	mov    ds:0x1e348de9,eax
  4188d2:	mov    DWORD PTR [edi+ebp*8],ebp
  4188d5:	pop    esp
  4188d6:	pop    edi
  4188d7:	inc    edx
  4188d8:	adc    BYTE PTR [eax],bl
  4188da:	ror    BYTE PTR fs:[edx+0x57b46527],0x86
  4188e2:	mov    eax,0x26555eb0
  4188e7:	(bad)  
  4188e9:	leave  
  4188ea:	pop    edi
  4188eb:	or     al,0x4f
  4188ed:	loopne 0x4188e9
  4188ef:	jo     0x4188b5
  4188f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188f2:	mov    ecx,ebx
  4188f4:	jbe    0x418890
  4188f6:	popf   
  4188f7:	cmp    BYTE PTR [edx],cl
  4188f9:	gs ret 0x9890
  4188fd:	mov    dl,cl
  4188ff:	inc    ebx
  418900:	aas    
  418901:	mov    edx,0xbe582c0f
  418906:	into   
  418907:	imul   ebp,ebp,0x89923e55
  41890d:	pop    edx
  41890e:	xor    BYTE PTR ds:0xaebbe9f7,bh
  418914:	xor    DWORD PTR [edi],ebx
  418916:	(bad)  
  418917:	xor    al,0x2
  418919:	cmp    eax,0x54cebc51
  41891e:	mov    ah,0x71
  418920:	inc    esi
  418921:	pop    ecx
  418922:	stos   BYTE PTR es:[edi],al
  418923:	test   BYTE PTR [ebp+0x7156bfea],ch
  418929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41892a:	adc    edx,DWORD PTR [eax+0x60809866]
  418930:	test   eax,0x17c50e9c
  418935:	ret    0x46ea
  418938:	xor    bh,BYTE PTR [edx]
  41893a:	xchg   esp,eax
  41893b:	xlat   BYTE PTR ds:[ebx]
  41893c:	inc    ecx
  41893d:	push   edx
  41893e:	push   cs
  41893f:	pop    edi
  418940:	leave  
  418941:	test   eax,0xb068728a
  418946:	mov    eax,0xa25d4b96
  41894b:	int    0x56
  41894d:	cmp    DWORD PTR [edi-0x6abac949],0xd78c58ce
  418957:	iret   
  418958:	mov    cl,0xd3
  41895a:	mov    ah,0x64
  41895c:	push   0xc523b30a
  418961:	fist   DWORD PTR [edi-0x621e4f2f]
  418967:	fmul   DWORD PTR [edx-0x1b]
  41896a:	add    ebx,eax
  41896c:	push   cs
  41896d:	adc    al,0x54
  41896f:	mov    bh,0x2b
  418971:	shl    BYTE PTR [esi],1
  418973:	popa   
  418974:	add    DWORD PTR [ebx+edi*4],ecx
  418977:	sbb    bl,BYTE PTR [ebx+0x0]
  41897a:	and    ecx,DWORD PTR [esi]
  41897c:	push   0xf0c89db0
  418981:	cmp    ebx,DWORD PTR [esi]
  418983:	or     eax,0xdb3d61fc
  418988:	xchg   edx,eax
  418989:	out    0xdf,al
  41898b:	adc    ah,dl
  41898d:	cmp    dl,BYTE PTR [edx]
  41898f:	sbb    ebp,DWORD PTR es:[edi+0x7331f02b]
  418996:	mov    DWORD PTR [ebp+0x6c071924],edx
  41899c:	cmc    
  41899d:	adc    ecx,DWORD PTR ds:0xe215a880
  4189a3:	fisubr WORD PTR [ebx+0x2bfb58ad]
  4189a9:	mov    dl,0xde
  4189ab:	pop    esp
  4189ac:	cmp    al,0x85
  4189ae:	xchg   ebp,eax
  4189af:	test   BYTE PTR [ecx+0x54ede29e],bh
  4189b5:	adc    al,0xea
  4189b7:	mov    ecx,0xfbd07133
  4189bc:	xor    BYTE PTR [ebx-0x24],dh
  4189bf:	xchg   ebp,eax
  4189c0:	hlt    
  4189c1:	mov    eax,ds:0xb3d4b81c
  4189c6:	dec    eax
  4189c7:	and    BYTE PTR [ebx],bh
  4189c9:	and    BYTE PTR [edi+0x29],0x74
  4189cd:	lds    ebx,FWORD PTR [esi]
  4189cf:	out    0x69,al
  4189d1:	mov    dl,0x79
  4189d3:	mov    DWORD PTR [edi-0x3ec6a42b],edx
  4189d9:	sti    
  4189da:	sub    BYTE PTR [ebx-0x7650f327],al
  4189e0:	(bad)  
  4189e2:	sub    al,0xde
  4189e4:	mov    esp,0x7b5ffa7
  4189e9:	push   cs
  4189ea:	sbb    DWORD PTR [ebp-0x20],ebx
  4189ed:	leave  
  4189ee:	nop
  4189ef:	mov    eax,0x632d6e99
  4189f4:	pop    edx
  4189f5:	inc    esi
  4189f6:	test   bl,ah
  4189f8:	jmp    0xbd4a6cfa
  4189fd:	sub    edi,DWORD PTR [esi]
  4189ff:	js     0x418a5c
  418a01:	xor    al,0x9
  418a03:	xchg   BYTE PTR [ebx-0x10],dl
  418a06:	call   0xff6f194c
  418a0b:	sbb    DWORD PTR [edx+0x3cae1848],ebx
  418a11:	jns    0x4189ba
  418a13:	sbb    ecx,edi
  418a15:	push   ds
  418a16:	push   esi
  418a17:	or     al,BYTE PTR [esp+eax*8]
  418a1a:	mov    bl,0x9c
  418a1c:	add    DWORD PTR [eax+eax*8+0x67a2d030],edx
  418a23:	pop    ebp
  418a24:	pop    ebx
  418a25:	xlat   BYTE PTR ds:[ebx]
  418a26:	push   ds
  418a27:	pop    edx
  418a28:	(bad)  
  418a29:	retf   0x188e
  418a2c:	xor    BYTE PTR [esi+0x61b1ffe6],bl
  418a32:	bnd ja 0x418a79
  418a35:	fcmovne st,st(6)
  418a37:	popf   
  418a38:	or     eax,0x8cb9f6be
  418a3d:	scas   al,BYTE PTR es:[edi]
  418a3e:	jae    0x418a9f
  418a40:	les    eax,FWORD PTR [eax+0x2d]
  418a43:	dec    eax
  418a44:	mov    esi,ds
  418a46:	and    DWORD PTR [edi],edx
  418a48:	xchg   ecx,eax
  418a49:	push   0x1fed5e4d
  418a4e:	mov    al,ds:0xca3e2941
  418a53:	dec    ebp
  418a54:	loop   0x418a13
  418a56:	pop    es
  418a57:	leave  
  418a58:	ja     0x418a07
  418a5a:	adc    BYTE PTR [esi+0x6a],ch
  418a5d:	pop    ebp
  418a5e:	out    dx,al
  418a5f:	pushf  
  418a60:	ret    
  418a61:	sahf   
  418a62:	sbb    BYTE PTR [edx-0x5f],0xf3
  418a66:	ficomp WORD PTR [edx+0x1fc98606]
  418a6c:	fcom   DWORD PTR [eiz*1+0x7e5d9e54]
  418a73:	ror    DWORD PTR [ecx-0x3],1
  418a76:	or     DWORD PTR [ebx-0x43],ebp
  418a79:	cmp    bh,BYTE PTR [eax]
  418a7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a7c:	cs pop ecx
  418a7e:	add    BYTE PTR [esi+0x3657b4a0],ah
  418a84:	add    edx,eax
  418a86:	mov    ?,WORD PTR [ebx+0x17]
  418a89:	into   
  418a8a:	sub    eax,DWORD PTR [ebx]
  418a8c:	or     edx,ebp
  418a8e:	xchg   ecx,eax
  418a8f:	inc    esp
  418a90:	sar    DWORD PTR [esi-0x8],1
  418a93:	mov    edx,0xec7ac482
  418a98:	test   al,0xe5
  418a9a:	push   0x162fd901
  418a9f:	dec    esp
  418aa0:	xchg   ebp,eax
  418aa1:	sub    DWORD PTR [eax-0x19],0xe7c491c2
  418aa8:	xor    edx,DWORD PTR ds:0x31ac408e
  418aae:	add    DWORD PTR [esi-0x6b6030f1],ebp
  418ab4:	sbb    dl,BYTE PTR [edi-0x98756e8]
  418aba:	push   es
  418abb:	sbb    bl,bh
  418abd:	jns    0x418a89
  418abf:	loopne 0x418adc
  418ac1:	and    esi,eax
  418ac3:	xchg   edx,eax
  418ac4:	add    DWORD PTR [eax+ebx*8],eax
  418ac7:	mov    dh,0xdf
  418ac9:	and    eax,DWORD PTR ds:0x4e6e5e42
  418acf:	xor    DWORD PTR [esi+0x1e29cf40],esp
  418ad5:	popa   
  418ad6:	mov    edx,0x8895a725
  418adb:	or     al,0x8
  418add:	jno    0x418b48
  418adf:	in     al,dx
  418ae0:	(bad)  
  418ae1:	sub    eax,0xb571b3a
  418ae6:	jecxz  0x418b06
  418ae8:	cmc    
  418ae9:	cmp    eax,0xce292dc5
  418aee:	inc    edx
  418aef:	out    0xdb,eax
  418af1:	dec    eax
  418af2:	cmp    DWORD PTR [esi+esi*2+0x32a41e6c],0x76583ae
  418afd:	test   DWORD PTR [esi],esp
  418aff:	ret    0xc201
  418b02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b03:	mov    bl,0xc9
  418b05:	dec    esi
  418b06:	xor    BYTE PTR [esi],0x28
  418b09:	jmp    0x418b5b
  418b0b:	and    ch,BYTE PTR [eax+0x6926b403]
  418b11:	jmp    0x222:0xe32939cc
  418b18:	inc    ecx
  418b19:	js     0x418b8e
  418b1b:	retf   0x9b6d
  418b1e:	mov    cl,0x2d
  418b20:	xchg   ebx,eax
  418b21:	aaa    
  418b22:	mov    ecx,0x93d3155
  418b27:	jecxz  0x418b42
  418b29:	sti    
  418b2a:	xchg   esp,eax
  418b2b:	ret    0x264d
  418b2e:	aam    0x9c
  418b30:	not    DWORD PTR [eax]
  418b32:	pusha  
  418b33:	push   esp
  418b34:	cs jns 0x418ad6
  418b37:	mov    ?,WORD PTR [esi]
  418b39:	(bad)  
  418b3d:	xchg   edx,eax
  418b3e:	mov    eax,0xfdf45fd0
  418b43:	and    bl,cl
  418b45:	inc    ebp
  418b46:	cmp    bl,BYTE PTR [ebx]
  418b48:	jno    0x418b52
  418b4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b4b:	arpl   WORD PTR [edx],si
  418b4d:	stos   BYTE PTR es:[edi],al
  418b4e:	js     0x418b47
  418b50:	add    BYTE PTR [edi],0x4a
  418b53:	add    BYTE PTR [eax-0x44],dh
  418b56:	mov    ebp,0x68851e44
  418b5b:	or     DWORD PTR [edx+0x1ad3a019],ecx
  418b61:	lods   eax,DWORD PTR ds:[esi]
  418b62:	mov    edi,0xc8e9c70a
  418b67:	mov    ss,WORD PTR [ebx]
  418b69:	mov    BYTE PTR [ecx-0x6341d94d],bl
  418b6f:	ret    
  418b70:	je     0x418b74
  418b72:	aaa    
  418b73:	outs   dx,BYTE PTR ds:[esi]
  418b74:	inc    edx
  418b75:	test   ebp,edi
  418b77:	in     eax,0x15
  418b79:	dec    esi
  418b7a:	push   ecx
  418b7b:	popa   
  418b7c:	(bad)  
  418b7d:	or     al,0x76
  418b7f:	ret    
  418b80:	dec    eax
  418b81:	pop    esi
  418b82:	xor    edx,DWORD PTR [esi-0x7b]
  418b85:	push   edi
  418b86:	shl    DWORD PTR [eax-0xe],0xbd
  418b8a:	dec    edi
  418b8b:	lea    ebp,[eax-0x25b504c2]
  418b91:	sub    eax,0xcd669d2a
  418b97:	test   bh,0x81
  418b9a:	lahf   
  418b9b:	std    
  418b9c:	in     al,0xcf
  418b9e:	jp     0x418b7e
  418ba0:	adc    esp,DWORD PTR [edx+0x6677834a]
  418ba6:	jmp    0x418b4f
  418ba8:	mov    ecx,DWORD PTR [ebx-0x47]
  418bab:	arpl   dx,si
  418bad:	aaa    
  418bae:	jp     0x418bbe
  418bb0:	je     0x418c16
  418bb2:	add    eax,0xc941e69a
  418bb7:	mov    WORD PTR ds:0xd9fd925f,?
  418bbd:	and    BYTE PTR [eax+0xd],bl
  418bc0:	je     0x418c2e
  418bc2:	jp     0x418b5d
  418bc4:	dec    eax
  418bc5:	adc    ecx,eax
  418bc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bc8:	leave  
  418bc9:	repz adc eax,0x5d89b890
  418bcf:	sub    DWORD PTR [esi+esi*1],esp
  418bd2:	push   eax
  418bd3:	loope  0x418b96
  418bd5:	shl    esp,0xbe
  418bd8:	(bad)  
  418bd9:	mov    al,0x89
  418bdb:	test   al,0x47
  418bdd:	jnp    0x418bac
  418bdf:	mov    cs,WORD PTR [edi]
  418be1:	outs   dx,DWORD PTR ds:[esi]
  418be2:	int    0x60
  418be4:	mov    ebx,esp
  418be6:	scas   eax,DWORD PTR es:[edi]
  418be7:	dec    edx
  418be8:	sub    DWORD PTR [ebp+eiz*2+0x49],ebp
  418bec:	mov    ebp,0x4e6412ae
  418bf1:	(bad)  
  418bf2:	into   
  418bf3:	(bad)  
  418bf5:	sub    BYTE PTR [esi-0x7022477b],al
  418bfb:	ret    
  418bfc:	pop    ebx
  418bfd:	pop    edi
  418bfe:	and    BYTE PTR [ebx+0x49],ch
  418c01:	ror    DWORD PTR [ecx],cl
  418c03:	leave  
  418c04:	loop   0x418bbf
  418c06:	ret    
  418c07:	inc    edi
  418c08:	push   ebx
  418c09:	outs   dx,DWORD PTR ds:[esi]
  418c0a:	stc    
  418c0b:	sub    dl,bh
  418c0d:	aas    
  418c0e:	dec    edx
  418c0f:	push   esp
  418c10:	mov    ebp,0x103a4f1c
  418c15:	push   esp
  418c16:	fwait
  418c17:	jbe    0x418bb4
  418c19:	xor    ch,0x89
  418c1c:	arpl   WORD PTR [ebp-0x15],dx
  418c1f:	jmp    0x344b416b
  418c24:	into   
  418c25:	xchg   edi,eax
  418c26:	inc    eax
  418c27:	popa   
  418c28:	sbb    eax,0x34f1f061
  418c2d:	sub    al,0x5c
  418c2f:	mov    DWORD PTR [edx],esp
  418c31:	sbb    DWORD PTR [ebx-0x563ab7d4],ebp
  418c37:	push   esi
  418c38:	xor    dh,BYTE PTR [eax-0x43527e19]
  418c3e:	push   edx
  418c3f:	mov    edi,0xc93e72a1
  418c44:	sub    eax,0x64670ff9
  418c49:	mov    ah,cl
  418c4b:	and    esp,DWORD PTR [ebx]
  418c4d:	and    bl,BYTE PTR [ebx]
  418c4f:	call   0x9184:0x273508c9
  418c56:	sub    edi,DWORD PTR ds:0x4a37331b
  418c5c:	sbb    ah,bh
  418c5e:	xchg   ebx,edi
  418c60:	ins    BYTE PTR es:[edi],dx
  418c61:	inc    esp
  418c62:	iret   
  418c63:	imul   ebp,DWORD PTR [esi+0x21],0x45a802a9
  418c6a:	jo     0x418c17
  418c6c:	sub    al,0xfe
  418c6e:	push   0x1a1f80d9
  418c73:	dec    ebx
  418c74:	stc    
  418c75:	inc    edi
  418c76:	ja     0x418c84
  418c78:	sbb    BYTE PTR [esi+0x66],bl
  418c7b:	es je  0x418cb6
  418c7e:	xor    BYTE PTR ds:0xda845a52,bl
  418c84:	dec    ebp
  418c85:	ds fs mov bh,0x11
  418c89:	xchg   ebp,eax
  418c8a:	mov    ch,0xed
  418c8c:	int3   
  418c8d:	or     edi,DWORD PTR [edi-0x71]
  418c90:	adc    BYTE PTR [esi-0x49f7834b],dl
  418c96:	sub    cl,BYTE PTR [ebx-0x3a]
  418c99:	test   DWORD PTR [ecx+0x7a],esi
  418c9c:	fcom   QWORD PTR [edx-0x23f95322]
  418ca2:	jmp    0x12180d23
  418ca7:	test   BYTE PTR ds:0xd08a013e,0xb2
  418cae:	ins    BYTE PTR es:[edi],dx
  418caf:	pop    edx
  418cb0:	add    dl,bl
  418cb2:	imul   ecx,DWORD PTR [esi+0x5a],0x62
  418cb6:	mov    ah,bl
  418cb8:	scas   eax,DWORD PTR es:[edi]
  418cb9:	repnz out dx,eax
  418cbb:	inc    ebp
  418cbc:	aaa    
  418cbd:	pushf  
  418cbe:	xor    eax,0xe92e443c
  418cc3:	stos   BYTE PTR es:[edi],al
  418cc4:	add    BYTE PTR [ecx-0x5e],ch
  418cc7:	mov    BYTE PTR [eax],cl
  418cc9:	icebp  
  418cca:	out    0x9a,eax
  418ccc:	int3   
  418ccd:	sti    
  418cce:	test   eax,0xe26c40fc
  418cd3:	retf   0xf3bf
  418cd6:	pushf  
  418cd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cd8:	jl     0x418c80
  418cda:	fadd   QWORD PTR ds:0x2000d3c6
  418ce0:	in     al,0xc7
  418ce2:	add    esp,edx
  418ce4:	lods   eax,DWORD PTR ds:[esi]
  418ce5:	cli    
  418ce6:	clc    
  418ce7:	and    al,0xe3
  418ce9:	js     0x418d4c
  418ceb:	mov    bl,dl
  418ced:	fs cmp cl,ah
  418cf0:	test   DWORD PTR [eax-0x22c162dc],0x118e4946
  418cfa:	retf   
  418cfb:	rcr    ecx,1
  418cfd:	popa   
  418cfe:	retf   0xa671
  418d01:	(bad)  
  418d02:	cli    
  418d03:	xchg   DWORD PTR ds:0x6c0f68ae,edi
  418d09:	adc    DWORD PTR [edx],edx
  418d0b:	test   al,0xf8
  418d0d:	add    esi,edi
  418d0f:	dec    edi
  418d10:	mov    ah,0xaa
  418d12:	inc    edi
  418d13:	sub    edi,DWORD PTR [esi]
  418d15:	xchg   edx,eax
  418d16:	jno    0x418ce2
  418d18:	shl    DWORD PTR [eax-0x1db43409],1
  418d1e:	loopne 0x418ced
  418d20:	jp     0x418cae
  418d22:	mov    al,0x86
  418d24:	push   ds
  418d25:	xchg   esp,eax
  418d26:	xor    ah,BYTE PTR [ebx-0x13]
  418d29:	jb     0x418d7a
  418d2b:	mov    BYTE PTR [edi-0x107ebb02],bl
  418d31:	push   ds
  418d32:	sub    eax,0x1005d6e2
  418d37:	pop    ebp
  418d38:	fnclex 
  418d3a:	arpl   dx,cx
  418d3c:	sub    eax,0x7117ce06
  418d41:	or     BYTE PTR [edx-0x45],ch
  418d44:	xchg   ebx,eax
  418d45:	adc    eax,0xc00cccb7
  418d4a:	xchg   ecx,eax
  418d4b:	daa    
  418d4c:	mov    ebp,0xab9af235
  418d51:	and    al,0x1d
  418d53:	mov    ch,0xff
  418d55:	add    BYTE PTR [ebp-0x5d],al
  418d58:	and    al,0x7b
  418d5a:	sub    DWORD PTR [edx+0x38daae63],ebp
  418d60:	and    ch,ah
  418d62:	xchg   esp,eax
  418d63:	push   cs
  418d64:	mov    eax,0x5b6188e2
  418d69:	(bad)  [esi+0x288eed0a]
  418d6f:	in     al,0x30
  418d71:	cmp    al,0xb3
  418d73:	xchg   edx,eax
  418d74:	jb     0x418d2d
  418d76:	pushf  
  418d77:	lods   al,BYTE PTR ds:[esi]
  418d78:	mov    esp,0x6c69dea6
  418d7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d7e:	xchg   ebx,eax
  418d7f:	mov    ebp,0x872ea5c5
  418d84:	ret    0x69d0
  418d87:	cmp    eax,0xc71a3d1f
  418d8c:	dec    edi
  418d8d:	push   ecx
  418d8e:	add    DWORD PTR [ecx-0x15],esp
  418d91:	pop    ebp
  418d92:	sub    bh,BYTE PTR [edi-0x4e]
  418d95:	ins    BYTE PTR es:[edi],dx
  418d96:	push   ss
  418d97:	pop    esi
  418d98:	loop   0x418df3
  418d9a:	ret    
  418d9b:	(bad)  
  418d9c:	mov    al,ds:0x112a070c
  418da1:	mov    edi,0x5f9e9d5c
  418da6:	shl    BYTE PTR [ebp+ebx*4+0x79],1
  418daa:	sub    eax,0xebf403fa
  418daf:	out    dx,eax
  418db0:	mov    bh,0x7e
  418db2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418db3:	addr16 out dx,eax
  418db5:	fwait
  418db6:	xor    DWORD PTR [esi],eax
  418db8:	into   
  418db9:	fisub  DWORD PTR [edi+0x36f470a0]
  418dbf:	shl    DWORD PTR [ebp+esi*8-0x4c139a4d],1
  418dc6:	push   edi
  418dc7:	push   ebx
  418dc8:	or     BYTE PTR [ecx-0x58],0x27
  418dcc:	mov    BYTE PTR [ecx-0x325efd77],cl
  418dd2:	out    dx,eax
  418dd3:	cwde   
  418dd4:	xchg   esp,eax
  418dd5:	fsub   DWORD PTR [ebp-0x3f]
  418dd8:	stos   BYTE PTR es:[edi],al
  418dd9:	repnz or DWORD PTR gs:[ecx+0x7b6908f5],edx
  418de1:	pop    edx
  418de3:	jl     0x418e31
  418de5:	(bad)
  418de9:	icebp  
  418dea:	adc    BYTE PTR [eax],dl
  418dec:	loopne 0x418da7
  418dee:	cli    
  418def:	mov    bh,BYTE PTR [ebx]
  418df1:	push   esi
  418df2:	sbb    esp,ebp
  418df4:	xor    DWORD PTR [ebp-0x3],ebx
  418df7:	adc    dl,BYTE PTR [ebx-0x36cedb3d]
  418dfd:	push   ss
  418dfe:	xchg   edi,eax
  418dff:	inc    esi
  418e00:	repnz pop edx
  418e02:	ret    
  418e03:	out    0x9a,al
  418e05:	scas   eax,DWORD PTR es:[edi]
  418e06:	xor    eax,0x934423f4
  418e0b:	setb   BYTE PTR [ebx+0x3c]
  418e0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e10:	dec    edx
  418e11:	sub    al,0xf6
  418e13:	jbe    0x418e35
  418e15:	out    0xc7,al
  418e17:	icebp  
  418e18:	loope  0x418e35
  418e1a:	stos   BYTE PTR es:[edi],al
  418e1b:	int3   
  418e1c:	in     eax,dx
  418e1d:	push   esi
  418e1e:	or     eax,0xfbabf153
  418e23:	jns    0x418e81
  418e25:	lahf   
  418e26:	inc    BYTE PTR [edx-0x2f]
  418e29:	fcom   DWORD PTR [ebx-0x74d785ac]
  418e2f:	mov    ah,0x6b
  418e31:	sub    esp,DWORD PTR ds:0x2662c07b
  418e37:	push   ecx
  418e38:	push   0x2c25ee3f
  418e3d:	mov    ch,0x22
  418e3f:	adc    ah,BYTE PTR [edi+0x2fcd755e]
  418e45:	in     eax,dx
  418e46:	aam    0x5b
  418e48:	mov    cl,0xc2
  418e4a:	sbb    bl,bh
  418e4c:	sti    
  418e4d:	xchg   ecx,eax
  418e4e:	xor    ebp,edx
  418e50:	jmp    0x418e27
  418e52:	jmp    0x418e3e
  418e54:	std    
  418e55:	mov    ecx,0xcb3c7839
  418e5a:	fisttp WORD PTR [ebx+0x11556c9b]
  418e60:	ja     0x418e26
  418e62:	(bad)  
  418e63:	call   0xc123bcfc
  418e68:	cli    
  418e69:	mov    dh,0x23
  418e6b:	push   eax
  418e6c:	arpl   WORD PTR [ebp-0x14],sp
  418e6f:	(bad)  
  418e71:	adc    edi,DWORD PTR [edx]
  418e73:	fild   QWORD PTR [esi]
  418e75:	js     0x418e92
  418e77:	mul    BYTE PTR [ecx-0x5e]
  418e7a:	mov    bh,0x3f
  418e7c:	xor    al,0xb1
  418e7e:	pop    ebx
  418e7f:	add    al,dh
  418e81:	push   cs
  418e82:	repnz add BYTE PTR [ebx+0x47],al
  418e86:	jns    0x418ec3
  418e88:	pop    esp
  418e89:	addr16 fwait
  418e8b:	inc    eax
  418e8c:	imul   eax,DWORD PTR [esi+0x66],0x75
  418e90:	(bad)  
  418e91:	jmp    0x1619:0xe81b1117
  418e98:	push   edx
  418e99:	je     0x418ea4
  418e9b:	or     al,0x90
  418e9d:	push   ecx
  418e9e:	push   edi
  418e9f:	outs   dx,DWORD PTR ds:[esi]
  418ea0:	sar    esi,0x63
  418ea3:	test   BYTE PTR [edi+0x6526fc7b],ch
  418ea9:	bound  eax,QWORD PTR [eax+0x12]
  418eac:	es repz pop ecx
  418eaf:	or     BYTE PTR [ecx-0xf],cl
  418eb2:	ror    DWORD PTR [ecx-0x71],1
  418eb5:	(bad)  
  418eb6:	imul   ebx,DWORD PTR [ebp+0x1ed2080d],0x273829b
  418ec0:	xchg   esp,eax
  418ec1:	jo     0x418e9f
  418ec3:	jo     0x418ee7
  418ec5:	add    eax,0xc25e5d6a
  418eca:	aad    0x76
  418ecc:	fcomp  DWORD PTR [edi]
  418ece:	adc    DWORD PTR [ebx+0x60312ebe],eax
  418ed4:	std    
  418ed5:	dec    eax
  418ed6:	jbe    0x418edf
  418ed8:	xchg   edx,eax
  418ed9:	fsubr  QWORD PTR [edx]
  418edb:	stos   BYTE PTR es:[edi],al
  418edc:	cld    
  418edd:	(bad)  
  418ede:	cmp    dl,BYTE PTR [ebx+0x27e56371]
  418ee4:	sbb    BYTE PTR [ecx+0x781fd72f],bl
  418eea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418eeb:	pop    eax
  418eec:	sbb    eax,DWORD PTR [edi+0x7b]
  418eef:	ret    
  418ef0:	in     al,0x80
  418ef2:	pop    ds
  418ef3:	pop    ds
  418ef4:	mov    WORD PTR [esi],cs
  418ef6:	jp     0x418eec
  418ef8:	repnz std 
  418efa:	jmp    0x418e86
  418efc:	mov    ebp,0xde623ea8
  418f01:	addr16 push esp
  418f03:	add    BYTE PTR [ebx+0x11],bh
  418f06:	push   edx
  418f07:	pop    es
  418f08:	sub    DWORD PTR [ebx+0x443e55e3],edx
  418f0e:	push   ss
  418f0f:	(bad)  
  418f10:	jle    0x418ead
  418f12:	mov    al,ss:0x6f694b29
  418f18:	inc    esi
  418f19:	inc    ebp
  418f1a:	xchg   DWORD PTR [ebx+0x7c],ebp
  418f1d:	pop    ebx
  418f1e:	sbb    BYTE PTR [esi+esi*8-0x36c51f25],ch
  418f25:	in     eax,0x2c
  418f27:	or     al,0x5
  418f29:	dec    ebp
  418f2a:	adc    BYTE PTR [ebp-0x1e],0x19
  418f2e:	adc    ecx,esp
  418f30:	cs adc ebp,esi
  418f33:	mov    eax,0x7ca9ecb2
  418f38:	xchg   edx,eax
  418f39:	call   0x487dc824
  418f3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f40:	fbld   TBYTE PTR [edi-0x49da389f]
  418f46:	jns    0x418f68
  418f48:	not    BYTE PTR [edx-0x43]
  418f4b:	mov    esp,0x9c5430c4
  418f50:	sbb    DWORD PTR [ebx+0x62],esp
  418f53:	iret   
  418f54:	test   bl,0x22
  418f57:	sbb    al,0x71
  418f59:	in     eax,dx
  418f5a:	pop    esp
  418f5b:	xor    ecx,DWORD PTR [edx-0xbd01988]
  418f61:	fwait
  418f62:	(bad)  
  418f63:	jbe    0x418fc3
  418f65:	mov    edx,0xbbb18d1a
  418f6a:	inc    esi
  418f6b:	mov    eax,0xd0e84c99
  418f70:	stos   BYTE PTR es:[edi],al
  418f71:	dec    edi
  418f72:	push   ebp
  418f73:	fxtract 
  418f75:	pushf  
  418f76:	pushf  
  418f77:	mov    edx,0xfb67a74d
  418f7c:	fistp  DWORD PTR [ecx+0x61]
  418f7f:	data16 xor ch,BYTE PTR [edi+0x1]
  418f83:	mov    esi,0x756c66df
  418f88:	push   es
  418f89:	adc    BYTE PTR cs:[ebx],al
  418f8c:	sbb    esp,DWORD PTR es:0x7bb9c55c
  418f93:	xchg   esi,eax
  418f94:	outs   dx,DWORD PTR ds:[esi]
  418f95:	lods   eax,DWORD PTR ds:[esi]
  418f96:	sub    BYTE PTR [ebx+0x4bcaf317],ah
  418f9c:	sbb    ah,al
  418f9e:	mov    ebx,0xfccba9f1
  418fa3:	mov    bl,0x5a
  418fa5:	sub    al,BYTE PTR [esi]
  418fa7:	es loopne 0x419005
  418faa:	sub    ah,BYTE PTR [ecx+edx*2+0x1b0830c8]
  418fb1:	dec    esp
  418fb2:	jge    0x785db2a2
  418fb8:	jns    0x418f7a
  418fba:	mov    BYTE PTR ds:0x123ecf63,dh
  418fc0:	sub    eax,0x38737df3
  418fc5:	daa    
  418fc6:	scas   al,BYTE PTR es:[edi]
  418fc7:	imul   edi,DWORD PTR [eax+0x56],0x9ee9f44f
  418fce:	cmp    al,0xff
  418fd0:	test   BYTE PTR [esi+0x3efd2189],bl
  418fd6:	out    dx,al
  418fd7:	stc    
  418fd8:	jge    0x418f91
  418fda:	push   cs
  418fdb:	sub    BYTE PTR [edi-0x20886f85],bl
  418fe1:	mov    ah,0xc5
  418fe3:	iret   
  418fe4:	inc    ebx
  418fe5:	ja     0x418fb2
  418fe7:	and    BYTE PTR [esi-0x60ce3fe8],dh
  418fed:	pop    eax
  418fee:	mov    ebp,DWORD PTR [ecx-0x183fe861]
  418ff4:	cmp    eax,0xcd33d6be
  418ff9:	add    eax,0xeaca4f2f
  418ffe:	das    
  418fff:	add    ebx,DWORD PTR [eax+0x50]
  419002:	or     bl,BYTE PTR [ecx-0x549fc3c8]
  419008:	mov    esi,0xd3169ee
  41900d:	aas    
  41900e:	dec    ebx
  41900f:	adc    eax,0x47d89917
  419014:	ds aas 
  419016:	adc    al,0x64
  419019:	xchg   DWORD PTR [ecx-0x46],ebp
  41901c:	(bad)  [edx+0x32]
  41901f:	add    BYTE PTR [ecx+0x42a00805],al
  419025:	add    BYTE PTR [eax+0x5e],dl
  419028:	add    BYTE PTR [eax],al
  41902a:	add    edi,edx
  41902c:	mov    DWORD PTR ds:0x42a000,0x7626
  419036:	cmp    DWORD PTR [eax],edi
  419038:	je     0x419045
  41903e:	mov    eax,DWORD PTR [eax]
  419040:	jmp    0x41b79b
  419045:	mov    eax,DWORD PTR [ebp+0x18]
  419048:	mov    DWORD PTR ds:0x42b004,0x29bc
  419052:	cmp    eax,esi
  419054:	jne    0x41906e
  41905a:	push   0xf89c85b5
  41905f:	mov    DWORD PTR ds:0x42a018,0x6618
  419069:	jmp    0x41b78a
  41906e:	mov    esi,DWORD PTR [ebp+0x18]
  419071:	mov    eax,0xf89c85b4
  419076:	mov    DWORD PTR ds:0x42a010,0x8ff
  419080:	cmp    esi,eax
  419082:	mov    DWORD PTR ds:0x42d010,0x7cdb
  41908c:	jne    0x41b77a
  419092:	mov    eax,DWORD PTR [ebp+0x10]
  419095:	xor    esi,esi
  419097:	add    esi,DWORD PTR ds:0x423e44
  41909d:	mov    esi,DWORD PTR [esi]
  41909f:	and    DWORD PTR ds:0x42a010,esi
  4190a5:	xor    eax,ecx
  4190a7:	mov    DWORD PTR ds:0x42c01c,0x15
  4190b1:	cmp    DWORD PTR ds:0x42c01c,0x0
  4190b8:	je     0x419106
  4190be:	cmp    DWORD PTR ds:0x42c01c,0x7
  4190c5:	jne    0x4190d4
  4190cb:	push   DWORD PTR [ebp-0xc]
  4190ce:	call   DWORD PTR ds:0x425030
  4190d4:	cmp    DWORD PTR ds:0x42c01c,0x8
  4190db:	jne    0x4190ee
  4190e1:	mov    esi,DWORD PTR ds:0x42c01c
  4190e7:	dec    esi
  4190e8:	mov    DWORD PTR ds:0x42c01c,esi
  4190ee:	mov    esi,DWORD PTR ds:0x42c01c
  4190f4:	dec    esi
  4190f5:	mov    DWORD PTR ds:0x42c01c,esi
  4190fb:	jmp    0x4190b1
  419100:	neg    DWORD PTR ds:0x42b00c
  419106:	add    eax,edx
  419108:	and    DWORD PTR ds:0x42b004,0x0
  419112:	mov    esi,DWORD PTR ds:0x42b004
  419118:	inc    esi
  419119:	mov    DWORD PTR ds:0x42b004,esi
  41911f:	cmp    DWORD PTR ds:0x42b004,0x4
  419126:	jne    0x41913c
  41912c:	push   0x6d2e
  419131:	push   0x438c
  419136:	call   DWORD PTR ds:0x425034
  41913c:	cmp    DWORD PTR ds:0x42b004,0x3
  419143:	jne    0x419156
  419149:	mov    esi,DWORD PTR ds:0x42b004
  41914f:	inc    esi
  419150:	mov    DWORD PTR ds:0x42b004,esi
  419156:	cmp    DWORD PTR ds:0x42b004,0x10
  41915d:	jb     0x419112
  419163:	mov    DWORD PTR [ebp-0x18],eax
  419166:	and    DWORD PTR ds:0x42d014,0x0
  419170:	mov    eax,ds:0x42d014
  419175:	inc    eax
  419176:	mov    ds:0x42d014,eax
  41917b:	cmp    DWORD PTR ds:0x42d014,0x1a
  419182:	jne    0x41919d
  419188:	push   0x424558
  41918d:	push   0x42451e
  419192:	push   0x87a6
  419197:	call   DWORD PTR ds:0x42503c
  41919d:	cmp    DWORD PTR ds:0x42d014,0x15
  4191a4:	jb     0x419170
  4191aa:	inc    esi
  4191ab:	mov    eax,DWORD PTR [ebp+0xc]
  4191ae:	mov    DWORD PTR ds:0x42c000,0x10
  4191b8:	cmp    DWORD PTR ds:0x42c000,0x0
  4191bf:	je     0x419213
  4191c5:	cmp    DWORD PTR ds:0x42c000,0x5
  4191cc:	jne    0x4191e5
  4191d2:	push   DWORD PTR [ebp-0x14]
  4191d5:	push   0x594c
  4191da:	push   0x7c33
  4191df:	call   DWORD PTR ds:0x425040
  4191e5:	cmp    DWORD PTR ds:0x42c000,0x6
  4191ec:	jne    0x4191ff
  4191f2:	mov    esi,DWORD PTR ds:0x42c000
  4191f8:	dec    esi
  4191f9:	mov    DWORD PTR ds:0x42c000,esi
  4191ff:	xor    esi,esi
  419201:	add    esi,DWORD PTR ds:0x42c000
  419207:	dec    esi
  419208:	mov    DWORD PTR ds:0x42c000,esi
  41920e:	jmp    0x4191b8
  419213:	mov    esi,DWORD PTR [ebp-0x8]
  419216:	and    DWORD PTR ds:0x429020,0x232c
  419220:	xor    eax,ecx
  419222:	inc    DWORD PTR ds:0x429028
  419228:	add    eax,edx
  41922a:	and    DWORD PTR ds:0x42a008,0x32e2
  419234:	imul   eax,DWORD PTR [esi]
  419237:	mov    esi,DWORD PTR [ebp+0x8]
  41923a:	xor    esi,ecx
  41923c:	add    esi,edx
  41923e:	cmp    esi,eax
  419240:	mov    eax,DWORD PTR [ebp-0x4]
  419243:	push   ebx
  419244:	je     0x419263
  41924a:	mov    esi,DWORD PTR [ebp-0x18]
  41924d:	add    DWORD PTR [eax],esi
  41924f:	mov    eax,DWORD PTR [ebp-0x4]
  419252:	mov    esi,DWORD PTR [ebp+0xc]
  419255:	xor    esi,ecx
  419257:	add    esi,edx
  419259:	imul   esi,DWORD PTR [eax]
  41925c:	mov    DWORD PTR [eax],esi
  41925e:	jmp    0x419268
  419263:	mov    esi,DWORD PTR [ebp+0x14]
  419266:	xor    DWORD PTR [eax],esi
  419268:	mov    eax,DWORD PTR [ebp-0x4]
  41926b:	mov    edi,DWORD PTR [ebp+0x10]
  41926e:	xor    edi,ecx
  419270:	mov    esi,0xffcd8d25
  419275:	mov    ebx,esi
  419277:	sub    ebx,edi
  419279:	add    DWORD PTR [eax],ebx
  41927b:	mov    eax,DWORD PTR [ebp-0x4]
  41927e:	mov    edi,DWORD PTR [ebp-0x8]
  419281:	add    edi,DWORD PTR [eax]
  419283:	mov    DWORD PTR [ebp-0x8],edi
  419286:	mov    eax,DWORD PTR [ebp+0xc]
  419289:	mov    edi,DWORD PTR [ebp+0xc]
  41928c:	xor    edi,ecx
  41928e:	xor    eax,ecx
  419290:	lea    eax,[eax+edi*1+0x64e5b6]
  419297:	mov    edi,DWORD PTR [ebp+0xc]
  41929a:	xor    edi,ecx
  41929c:	add    edi,edx
  41929e:	imul   eax,edi
  4192a1:	mov    edi,DWORD PTR [ebp+0xc]
  4192a4:	xor    edi,ecx
  4192a6:	sub    edi,eax
  4192a8:	mov    eax,DWORD PTR [ebp-0x4]
  4192ab:	add    edi,edx
  4192ad:	cmp    DWORD PTR [eax],edi
  4192af:	mov    eax,DWORD PTR [ebp-0x4]
  4192b2:	mov    edi,DWORD PTR [ebp+0x10]
  4192b5:	jg     0x4192c8
  4192bb:	xor    edi,ecx
  4192bd:	mov    ebx,esi
  4192bf:	sub    ebx,edi
  4192c1:	add    DWORD PTR [eax],ebx
  4192c3:	jmp    0x4192ce
  4192c8:	xor    edi,ecx
  4192ca:	add    edi,edx
  4192cc:	add    DWORD PTR [eax],edi
  4192ce:	mov    eax,DWORD PTR [ebp-0x8]
  4192d1:	mov    edi,DWORD PTR [ebp-0x10]
  4192d4:	mov    eax,DWORD PTR [eax]
  4192d6:	xor    edi,ecx
  4192d8:	add    edi,0x3272da
  4192de:	not    edi
  4192e0:	and    eax,edi
  4192e2:	movsx  di,BYTE PTR [eax+0x1]
  4192e7:	mov    ebx,0x3b4b
  4192ec:	sub    di,bx
  4192ef:	mov    ebx,0x8a85
  4192f4:	xor    di,bx
  4192f7:	mov    ebx,0x4f8a
  4192fc:	cmp    di,bx
  4192ff:	jne    0x419327
  419305:	movsx  di,BYTE PTR [eax]
  419309:	mov    ebx,0x3b4b
  41930e:	sub    di,bx
  419311:	mov    ebx,0x8a85
  419316:	xor    di,bx
  419319:	mov    ebx,0x4f87
  41931e:	cmp    di,bx
  419321:	je     0x419337
  419327:	mov    edi,DWORD PTR [ebp-0x10]
  41932a:	xor    edi,ecx
  41932c:	mov    ebx,esi
  41932e:	sub    ebx,edi
  419330:	add    eax,ebx
  419332:	jmp    0x4192e2
  419337:	mov    esi,DWORD PTR [ebp-0x14]
  41933a:	mov    esi,DWORD PTR [esi]
  41933c:	mov    edi,DWORD PTR [eax+0x3c]
  41933f:	lea    esi,[edi+esi*8+0x78]
  419343:	mov    esi,DWORD PTR [esi+eax*1]
  419346:	mov    DWORD PTR [ebp-0x8],esi
  419349:	mov    esi,DWORD PTR [ebp+0x8]
  41934c:	xor    esi,ecx
  41934e:	add    esi,edx
  419350:	mov    DWORD PTR [ebp-0x14],esi
  419353:	mov    esi,DWORD PTR [ebp+0x8]
  419356:	mov    edi,DWORD PTR [ebp-0x8]
  419359:	xor    esi,ecx
  41935b:	add    esi,edx
  41935d:	pop    ebx
  41935e:	cmp    edi,esi
  419360:	jne    0x41937e
  419366:	mov    eax,DWORD PTR [ebp+0xc]
  419369:	xor    eax,ecx
  41936b:	mov    ecx,DWORD PTR [ebp-0x8]
  41936e:	add    eax,edx
  419370:	imul   eax,ecx
  419373:	mov    DWORD PTR [ebp-0x8],eax
  419376:	push   DWORD PTR [ebp+0x18]
  419379:	jmp    0x41b78a
  41937e:	mov    ecx,DWORD PTR [ebp-0x8]
  419381:	add    ecx,eax
  419383:	jmp    0x41b73b
  419388:	dec    ebx
  419389:	cmp    al,0x60
  41938b:	or     DWORD PTR [edi],0x426c6b9d
  419391:	push   cs
  419392:	mov    ch,BYTE PTR [ebp+edx*8-0x76]
  419396:	jnp    0x419348
  419398:	fild   WORD PTR [ecx]
  41939a:	popa   
  41939b:	(bad)  
  41939c:	(bad)  
  41939d:	pop    edi
  41939e:	bound  esp,QWORD PTR [edx-0x49]
  4193a1:	jg     0x4193ce
  4193a3:	xor    BYTE PTR [ecx-0x530e64d4],dh
  4193a9:	dec    edi
  4193aa:	inc    ebx
  4193ab:	repnz pop ecx
  4193ad:	shr    BYTE PTR [edi-0x7b],0xb6
  4193b1:	mov    al,ds:0xbc954eea
  4193b6:	fbstp  TBYTE PTR [edi+ebp*2+0x3f]
  4193ba:	popa   
  4193bb:	ror    BYTE PTR [edx-0x80],cl
  4193be:	shl    BYTE PTR [edx],0x57
  4193c1:	fist   DWORD PTR [ebp+edi*2+0x3e]
  4193c5:	sub    dl,BYTE PTR [ecx+0x4e38aadc]
  4193cb:	into   
  4193cc:	outs   dx,BYTE PTR ds:[esi]
  4193cd:	mov    dh,0xb7
  4193cf:	jle    0x4193dd
  4193d1:	push   es
  4193d2:	and    BYTE PTR [esi+0x76121006],ah
  4193d8:	into   
  4193d9:	xor    al,BYTE PTR [ebp+0x24]
  4193dc:	xor    dl,BYTE PTR [ebp-0x6b348689]
  4193e2:	cmp    DWORD PTR [esi+0x45],0xb
  4193e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193e7:	lods   al,BYTE PTR ds:[esi]
  4193e8:	xor    al,0x3c
  4193ea:	dec    ebp
  4193eb:	inc    edx
  4193ec:	(bad)  
  4193ed:	stos   DWORD PTR es:[edi],eax
  4193ee:	ja     0x4193ea
  4193f0:	repz adc eax,0x96cf26ab
  4193f6:	pop    ebp
  4193f7:	pop    ebp
  4193f8:	mov    esp,0xae517422
  4193fd:	ins    BYTE PTR es:[edi],dx
  4193fe:	loopne 0x4193b8
  419400:	loope  0x4193bf
  419402:	pop    edx
  419403:	mov    WORD PTR [ebx-0x54d85252],?
  419409:	mov    dh,0x81
  41940b:	fimul  WORD PTR [esi]
  41940d:	ret    0xa90
  419410:	ss hlt 
  419412:	add    eax,0xeeb80960
  419417:	jp     0x41941b
  419419:	repz and eax,0x1980e64e
  41941f:	sub    DWORD PTR [ebx],0xffffffe0
  419422:	push   es
  419423:	das    
  419424:	dec    eax
  419425:	ss dec ecx
  419427:	jp     0x4193e0
  419429:	aaa    
  41942a:	push   cs
  41942b:	fbstp  TBYTE PTR [esi-0x5191fae1]
  419431:	popf   
  419432:	(bad)  
  419433:	sbb    BYTE PTR [edx+ecx*4-0x306d5454],dh
  41943a:	out    0xda,eax
  41943c:	jmp    0x41941e
  41943e:	adc    esi,0xa1c464a9
  419444:	das    
  419445:	fwait
  419446:	jmp    0x202c6cf5
  41944b:	and    edx,DWORD PTR [edx]
  41944d:	leave  
  41944e:	inc    edx
  41944f:	mov    esi,DWORD PTR [edx]
  419451:	dec    edx
  419453:	addr16 push edi
  419455:	xchg   esp,eax
  419456:	iret   
  419457:	int3   
  419458:	inc    ecx
  419459:	and    ebx,ebp
  41945b:	mov    cl,0x11
  41945d:	popf   
  41945e:	pop    ebx
  41945f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419460:	icebp  
  419461:	lahf   
  419462:	arpl   WORD PTR [ebx+0x49acac53],si
  419468:	sub    BYTE PTR [eax+0x6a],ah
  41946b:	scas   al,BYTE PTR es:[edi]
  41946c:	xor    eax,0x34395cf8
  419471:	push   ecx
  419472:	push   ebp
  419473:	(bad)  
  419474:	and    BYTE PTR [ebx+0x63],ch
  419477:	xchg   BYTE PTR [ebp-0x17],ah
  41947a:	pop    eax
  41947b:	inc    edi
  41947c:	xor    edx,DWORD PTR [edx+0x18]
  41947f:	mov    esp,ebp
  419481:	daa    
  419482:	ret    
  419483:	(bad)  [edi]
  419485:	jecxz  0x4194d1
  419487:	ins    BYTE PTR es:[edi],dx
  419488:	adc    ebx,DWORD PTR [edi+eiz*4]
  41948b:	push   edi
  41948c:	pop    ecx
  41948d:	das    
  41948e:	outs   dx,BYTE PTR ds:[esi]
  41948f:	das    
  419490:	push   esp
  419491:	test   BYTE PTR [eax+0x725ddadc],bl
  419497:	add    eax,0x34e99e2a
  41949c:	cmp    BYTE PTR [esi-0x263699bd],dh
  4194a2:	xlat   BYTE PTR ds:[ebx]
  4194a3:	(bad)  
  4194a4:	imul   edx,esp,0xffffffd2
  4194a7:	fisubr WORD PTR [ebx+0x45]
  4194aa:	inc    esp
  4194ab:	ds in  al,dx
  4194ad:	xchg   BYTE PTR [edx+ebx*8+0x59b8a265],dl
  4194b4:	pop    edi
  4194b5:	jle    0x419468
  4194b7:	cmp    DWORD PTR [edi-0x2c9950bb],edx
  4194bd:	leave  
  4194be:	add    eax,0x4f33ed6b
  4194c3:	dec    ebp
  4194c4:	lods   eax,DWORD PTR ds:[esi]
  4194c5:	pop    edi
  4194c6:	sbb    DWORD PTR [ebx+0x1e],0xffffffa2
  4194ca:	into   
  4194cb:	mov    dl,0x90
  4194cd:	rcl    BYTE PTR [edx],cl
  4194cf:	adc    eax,0x837dbee9
  4194d4:	add    eax,0x853343b7
  4194d9:	sbb    al,0x7e
  4194db:	adc    BYTE PTR [esi-0x306bd2bc],bl
  4194e1:	adc    BYTE PTR [edi+eiz*1],dl
  4194e4:	sub    al,0xfd
  4194e6:	push   ds
  4194e7:	idiv   DWORD PTR [edi+0x6b43998]
  4194ed:	popa   
  4194ee:	loop   0x419544
  4194f0:	add    dh,ah
  4194f2:	aad    0xdf
  4194f4:	jb     0x41955a
  4194f6:	in     al,0xa1
  4194f8:	sbb    eax,0xb90fc55
  4194fd:	fild   DWORD PTR [ebx]
  4194ff:	stos   DWORD PTR es:[edi],eax
  419500:	adc    esi,esp
  419502:	xor    BYTE PTR [ebp+0x333456b3],bh
  419508:	sbb    edx,DWORD PTR [ecx]
  41950a:	jecxz  0x419559
  41950c:	push   ecx
  41950d:	mov    ecx,DWORD PTR [edx]
  41950f:	dec    edi
  419510:	icebp  
  419511:	std    
  419512:	lock lahf 
  419514:	mov    ecx,0x62eaa3fb
  419519:	pop    ss
  41951a:	sbb    ebx,eax
  41951c:	jno    0x4194f6
  41951e:	adc    ebp,edx
  419520:	imul   esi,DWORD PTR [edi-0x5fa1f634],0xffffffab
  419527:	push   es
  419528:	pop    edx
  419529:	push   edx
  41952a:	fscale 
  41952c:	jo     0x419513
  41952e:	pop    edx
  41952f:	adc    bh,BYTE PTR [edi+0x5a]
  419532:	sahf   
  419533:	test   al,0x37
  419535:	and    BYTE PTR [ebx],al
  419537:	aam    0x25
  419539:	pop    edx
  41953a:	mov    esp,0x3f2dda2d
  41953f:	pop    ecx
  419540:	adc    BYTE PTR [ebx],0x2
  419543:	pop    edx
  419544:	addr16 mov bl,0x7d
  419547:	ins    BYTE PTR es:[edi],dx
  419548:	js     0x41950f
  41954a:	repz rcl DWORD PTR [esi+0x4e],1
  41954e:	jne    0x4194d3
  419550:	imul   ebx,DWORD PTR [edx],0x7facabf7
  419556:	ffreep st(1)
  419558:	inc    eax
  419559:	in     eax,dx
  41955a:	outs   dx,BYTE PTR ds:[esi]
  41955b:	daa    
  41955c:	in     eax,0x4e
  41955e:	inc    ecx
  41955f:	and    BYTE PTR [edi-0x32],bl
  419562:	push   0x6
  419564:	es pop ebx
  419566:	stos   BYTE PTR es:[edi],al
  419567:	xor    BYTE PTR ds:0xb01fa868,ch
  41956d:	aaa    
  41956e:	dec    eax
  41956f:	imul   dh
  419571:	xchg   ebx,eax
  419572:	jmp    0xe5da2e8e
  419577:	mov    bl,0x35
  419579:	xchg   ebx,eax
  41957a:	jl     0x4195b2
  41957c:	xchg   esp,eax
  41957d:	inc    eax
  41957e:	enter  0x58fa,0x62
  419582:	out    0x9c,eax
  419584:	jl     0x4195a6
  419586:	push   0xffffffcd
  419588:	fsub   QWORD PTR [esi-0x7a]
  41958b:	push   esp
  41958c:	pop    edx
  41958d:	xchg   ebx,eax
  41958e:	adc    ebx,esp
  419590:	scas   al,BYTE PTR es:[edi]
  419591:	xor    bl,BYTE PTR [eax]
  419593:	ss jns 0x4195e4
  419596:	aam    0xd5
  419598:	pop    ds
  419599:	pop    ds
  41959a:	xor    BYTE PTR [edx],0x8d
  41959d:	in     eax,dx
  41959e:	lahf   
  41959f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195a0:	hlt    
  4195a1:	hlt    
  4195a2:	in     eax,0xf8
  4195a4:	outs   dx,DWORD PTR ds:[esi]
  4195a5:	jnp    0x4195e5
  4195a7:	push   cs
  4195a8:	mov    ch,0x26
  4195aa:	lods   al,BYTE PTR ds:[esi]
  4195ab:	rol    BYTE PTR [edi+0x5dd83c80],0x2f
  4195b2:	pop    ds
  4195b3:	push   ds
  4195b4:	mov    esp,0x4281941f
  4195b9:	leave  
  4195ba:	call   0xe5754ef1
  4195bf:	dec    edi
  4195c0:	scas   eax,DWORD PTR es:[edi]
  4195c1:	inc    esi
  4195c2:	not    BYTE PTR [eax-0x4c5a440d]
  4195c8:	(bad)  
  4195c9:	pop    es
  4195ca:	push   cs
  4195cb:	fwait
  4195cc:	(bad)  
  4195cd:	aas    
  4195ce:	icebp  
  4195cf:	retf   
  4195d0:	fs jns 0x419575
  4195d3:	mov    cl,0xc9
  4195d5:	fsubr  DWORD PTR [ecx+eiz*1]
  4195d8:	dec    ebp
  4195d9:	je     0x419613
  4195db:	mov    ah,bl
  4195dd:	push   eax
  4195de:	int3   
  4195df:	lods   al,BYTE PTR ds:[esi]
  4195e0:	cmp    ch,BYTE PTR [esi+0x10]
  4195e3:	xchg   BYTE PTR [eax-0x65fc4863],ah
  4195e9:	ins    DWORD PTR es:[edi],dx
  4195ea:	dec    ecx
  4195eb:	mov    ?,WORD PTR [eax+0x53]
  4195ee:	pop    eax
  4195ef:	pusha  
  4195f0:	call   0xa197:0x9e864dc9
  4195f7:	push   es
  4195f8:	addr16 pop ebx
  4195fa:	das    
  4195fb:	aad    0x7e
  4195fd:	xor    esp,ebx
  4195ff:	call   0x9d6a0e7
  419604:	out    0x8b,eax
  419606:	je     0x4195b9
  419608:	into   
  419609:	inc    ecx
  41960a:	push   es
  41960b:	ins    DWORD PTR es:[edi],dx
  41960c:	sbb    edi,ecx
  41960e:	hlt    
  41960f:	rcl    BYTE PTR [ebx-0x6f],0x7e
  419613:	cdq    
  419614:	push   ecx
  419615:	jecxz  0x419617
  419617:	std    
  419618:	iret   
  419619:	mov    WORD PTR [ecx],gs
  41961b:	popf   
  41961c:	(bad)  
  41961d:	fcmove st,st(1)
  41961f:	fs cmp eax,0xb4e391b9
  419625:	cli    
  419626:	loopne 0x419622
  419628:	loope  0x41964c
  41962a:	aad    0x70
  41962c:	iret   
  41962d:	inc    eax
  41962e:	mov    DWORD PTR [esi+0x25],0x32a5f5b3
  419635:	test   al,al
  419637:	cwde   
  419638:	push   esi
  419639:	scas   al,BYTE PTR es:[edi]
  41963a:	sub    al,BYTE PTR cs:[edi]
  41963d:	inc    ebx
  41963e:	mov    cl,dh
  419640:	cmp    DWORD PTR [eax+eiz*8-0x1795b305],ebp
  419647:	out    0x8b,al
  419649:	(bad)  
  41964a:	dec    ecx
  41964b:	(bad)  
  41964c:	xor    esi,DWORD PTR [edx]
  41964e:	lock cmp al,0xdb
  419651:	fs (bad) 
  419653:	jmp    0xab42910d
  419658:	sbb    al,0xc
  41965a:	sti    
  41965b:	cmp    eax,0x28af51e9
  419660:	popf   
  419661:	sub    eax,0xcea64c16
  419666:	push   ecx
  419667:	retf   
  419668:	mov    ch,BYTE PTR [bx+di+0x45]
  41966c:	mov    DWORD PTR [edx],ebp
  41966e:	inc    eax
  41966f:	sar    DWORD PTR [ebp-0x6964fd0d],1
  419675:	sbb    ch,BYTE PTR [ebp-0x59]
  419678:	jne    0x4195fb
  41967a:	mov    bh,0xf8
  41967c:	cmp    bl,cl
  41967e:	mov    bh,0xf3
  419680:	inc    ebp
  419681:	dec    ecx
  419682:	inc    eax
  419684:	ret    
  419685:	lahf   
  419686:	pop    edi
  419687:	je     0x419614
  419689:	scas   eax,DWORD PTR es:[edi]
  41968a:	addr16 out 0x3,al
  41968d:	sub    al,BYTE PTR [edi]
  41968f:	or     DWORD PTR [edx-0x18d6d4e2],ebx
  419695:	jo     0x419638
  419697:	sahf   
  419698:	or     dl,BYTE PTR [edx-0x30]
  41969b:	push   0x42982fdf
  4196a0:	jecxz  0x419632
  4196a2:	add    cl,BYTE PTR [edi-0x9]
  4196a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196a6:	sbb    ah,ah
  4196a8:	xchg   DWORD PTR [esi+0x5b250f21],esp
  4196ae:	fdiv   DWORD PTR [eax]
  4196b0:	or     BYTE PTR [eax+0x73a4247f],cl
  4196b6:	jp     0x4196dd
  4196b8:	adc    esi,ebx
  4196ba:	call   0x3730dacb
  4196bf:	jmp    0x62a5:0x6841928
  4196c6:	cmc    
  4196c7:	adc    ebx,esi
  4196c9:	ds adc al,0xb1
  4196cc:	xchg   edx,eax
  4196cd:	popa   
  4196ce:	adc    al,0x9c
  4196d0:	repnz dec ecx
  4196d2:	sbb    ah,0xae
  4196d5:	fs sbb eax,0xfd2565b3
  4196db:	mov    bl,0x90
  4196dd:	jb     0x419740
  4196df:	inc    edx
  4196e0:	aas    
  4196e1:	retf   
  4196e2:	paddd  mm3,QWORD PTR ss:0x556d22fa
  4196ea:	and    DWORD PTR [ecx+0x677c5d33],esp
  4196f0:	in     al,dx
  4196f1:	push   eax
  4196f2:	cmp    dh,BYTE PTR [ebx]
  4196f4:	xor    al,0xe9
  4196f6:	jne    0x41968c
  4196f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196f9:	test   DWORD PTR [edi],ebp
  4196fb:	shl    BYTE PTR [edi],1
  4196fd:	dec    ebx
  4196fe:	std    
  4196ff:	(bad)
  419703:	dec    edx
  419704:	pop    esp
  419705:	jo     0x4196c6
  419707:	push   0x3a1269ee
  41970c:	mov    dl,BYTE PTR [eax]
  41970e:	push   edx
  41970f:	add    dh,BYTE PTR [ebp-0x44]
  419712:	inc    ecx
  419713:	lods   eax,DWORD PTR ds:[esi]
  419714:	mov    eax,ds:0x8fce26a0
  419719:	mov    esp,0x85f4b92a
  41971e:	sti    
  41971f:	test   DWORD PTR ds:0x873a0e85,0xb9130137
  419729:	mov    ds:0x7fd6e68f,eax
  41972e:	xchg   esi,eax
  41972f:	fst    DWORD PTR [edi+0x34afd5f]
  419735:	iret   
  419736:	dec    ebx
  419737:	dec    edi
  419738:	pop    esp
  419739:	xor    eax,0xf83e038b
  41973e:	cmp    DWORD PTR [edx+0x32],ebp
  419741:	sti    
  419742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419743:	fs or  eax,0x647a29bd
  419749:	mov    bl,0xfb
  41974b:	iret   
  41974c:	mov    ebp,0xec675e4
  419751:	push   edi
  419752:	jl     0x4196ea
  419754:	test   DWORD PTR ds:[edi+0x5baa5769],eax
  41975b:	push   esp
  41975c:	lds    eax,FWORD PTR [esi]
  41975e:	xchg   edi,eax
  41975f:	test   BYTE PTR [eax],bh
  419761:	sar    BYTE PTR [edi],1
  419763:	cmc    
  419764:	(bad)  
  419765:	lock test al,0x6c
  419768:	xor    DWORD PTR [esi+ebx*4-0x54028c96],esi
  41976f:	lea    ebx,[ecx-0x41]
  419772:	mov    ebp,0x18739bbf
  419777:	lods   eax,DWORD PTR ds:[esi]
  419778:	inc    ebp
  419779:	push   eax
  41977a:	push   ds
  41977b:	jae    0x4197de
  41977d:	or     BYTE PTR [esi],ah
  41977f:	test   al,0xd4
  419781:	repz loopne 0x419765
  419784:	jecxz  0x4197df
  419786:	retf   0xb702
  419789:	and    ch,BYTE PTR [esi+0x51c424e]
  41978f:	sbb    BYTE PTR ds:0xf2f3181b,0xb2
  419796:	hlt    
  419797:	push   es
  419798:	push   ecx
  419799:	ror    DWORD PTR [eax-0x5d],0x96
  41979d:	or     ch,BYTE PTR [edx-0x34c4d539]
  4197a3:	pop    ss
  4197a4:	lock add al,0x66
  4197a7:	outs   dx,DWORD PTR ds:[esi]
  4197a8:	pop    ecx
  4197a9:	das    
  4197aa:	daa    
  4197ab:	mov    esp,0xa8030132
  4197b0:	(bad)  
  4197b1:	cli    
  4197b2:	adc    al,0xf6
  4197b4:	pmaxsw mm3,QWORD PTR [edx]
  4197b7:	out    0xa4,eax
  4197b9:	aas    
  4197ba:	fst    DWORD PTR [ecx]
  4197bc:	or     eax,0x835f6ed5
  4197c1:	mov    WORD PTR [ecx],cs
  4197c3:	scas   eax,DWORD PTR es:[edi]
  4197c4:	ret    0x7bcb
  4197c7:	pop    es
  4197c8:	add    al,0x12
  4197ca:	sub    al,0xcf
  4197cc:	sbb    edi,DWORD PTR ds:0xffea89f7
  4197d2:	and    DWORD PTR [ebp-0x2e],0x36ac7dde
  4197d9:	sbb    ch,dl
  4197db:	mov    es,ebx
  4197dd:	ins    BYTE PTR es:[edi],dx
  4197de:	mov    cs,WORD PTR [ebp-0x60]
  4197e1:	pop    edx
  4197e2:	fwait
  4197e3:	dec    ebp
  4197e4:	mov    dh,0x40
  4197e6:	mov    ds:0xa8636c5d,al
  4197eb:	and    DWORD PTR [ecx-0x60],ecx
  4197ee:	and    BYTE PTR [ecx+0x4f28fda0],al
  4197f4:	push   esp
  4197f5:	fwait
  4197f6:	xchg   ebp,eax
  4197f7:	in     al,0xcd
  4197f9:	jo     0x4197d5
  4197fb:	in     al,dx
  4197fc:	sbb    DWORD PTR [eax-0x789fdd1c],ecx
  419802:	rol    ch,cl
  419804:	in     eax,dx
  419805:	add    dh,BYTE PTR ds:0xd2fd7e41
  41980b:	mov    dh,0x1
  41980d:	shl    DWORD PTR [ecx+edx*2+0x643d977f],cl
  419814:	mov    al,0x1a
  419816:	inc    ebp
  419817:	pop    esi
  419818:	aam    0xa6
  41981a:	fadd   DWORD PTR [edi+0x3eccbf12]
  419820:	pop    edx
  419821:	inc    edx
  419822:	mov    ah,0xbb
  419824:	sub    DWORD PTR [ecx],esi
  419826:	xor    BYTE PTR [edx+0x4744e9c4],dl
  41982c:	out    dx,eax
  41982d:	push   ecx
  41982e:	fdiv   st,st(4)
  419830:	jge    0x419836
  419832:	enter  0x3d02,0xf6
  419836:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419837:	sub    eax,0x5e4d7743
  41983c:	loope  0x419885
  41983e:	xchg   edi,eax
  41983f:	mov    eax,0x11c688a1
  419844:	stos   BYTE PTR es:[edi],al
  419845:	icebp  
  419846:	js     0x4198b8
  419848:	jb     0x4197d4
  41984a:	add    DWORD PTR ss:[eax],edi
  41984d:	in     eax,dx
  41984e:	xchg   esp,eax
  41984f:	arpl   WORD PTR [edi+0x2b01c49e],sp
  419855:	mov    esi,DWORD PTR [edx+0x28]
  419858:	(bad)  
  419859:	cmc    
  41985a:	jo     0x419849
  41985c:	cmp    eax,0xc20fa729
  419861:	xchg   ecx,eax
  419862:	test   ch,dl
  419864:	loope  0x4198b1
  419866:	xor    eax,0x6dc02ab8
  41986b:	dec    edi
  41986c:	sub    dl,BYTE PTR [ebp+0x7af85f3]
  419872:	loopne 0x4198db
  419874:	add    DWORD PTR [ecx+eiz*8],edi
  419877:	mov    ebp,ecx
  419879:	cmp    ah,bl
  41987b:	test   ecx,ebx
  41987d:	mov    bl,0xf0
  41987f:	loopne 0x41984a
  419881:	adc    DWORD PTR [eax+0x7d],edx
  419884:	mov    al,ds:0xf3f168fe
  419889:	lea    esi,[eax]
  41988b:	outs   dx,DWORD PTR ds:[esi]
  41988c:	arpl   WORD PTR [ebx-0x29],dx
  41988f:	cmp    eax,0x42b24154
  419894:	fcomp  DWORD PTR [edi-0x73]
  419897:	pop    edx
  419898:	or     bl,dh
  41989a:	mov    al,0xe
  41989c:	lock mov ds:0x6fbb73c9,eax
  4198a2:	ror    DWORD PTR [ebx],cl
  4198a4:	repnz mov bh,0xa2
  4198a7:	adc    al,0xee
  4198a9:	push   cs
  4198aa:	xchg   ebx,eax
  4198ab:	cmp    al,0xe9
  4198ad:	xchg   edx,eax
  4198ae:	not    BYTE PTR [eax]
  4198b0:	cmp    bh,BYTE PTR [edx+0x45]
  4198b3:	mov    esi,0x771ec12b
  4198b8:	jg     0x419917
  4198ba:	jae    0x41989f
  4198bc:	inc    esp
  4198bd:	push   edx
  4198be:	sbb    cl,BYTE PTR [edx-0x53]
  4198c1:	or     dl,BYTE PTR [ebx-0x1523473d]
  4198c7:	jb     0x419929
  4198c9:	pop    ss
  4198ca:	not    DWORD PTR ds:0x1f88bf8b
  4198d0:	cdq    
  4198d1:	stos   BYTE PTR es:[edi],al
  4198d2:	or     BYTE PTR [edx+0x341f6bb6],al
  4198d8:	dec    eax
  4198d9:	mov    al,ds:0x1ad1a910
  4198de:	call   DWORD PTR [ebx]
  4198e0:	xor    eax,0x44fd01aa
  4198e5:	loop   0x419891
  4198e7:	int    0xe1
  4198e9:	lea    edx,[edx-0x239ddfbd]
  4198ef:	xchg   ebx,ebp
  4198f1:	(bad)  
  4198f2:	rol    DWORD PTR [ebp-0x42],cl
  4198f5:	fsubr  QWORD PTR [edx+0x2c]
  4198f8:	bound  ebx,QWORD PTR [ebx-0x690c953d]
  4198fe:	call   0x62fe7666
  419903:	rcl    BYTE PTR [edx+0x1fb278fc],1
  419909:	ficomp DWORD PTR ds:0x333bae66
  41990f:	mov    ebp,0xaa373862
  419914:	int    0xeb
  419916:	(bad)  
  419917:	je     0x419978
  419919:	mov    al,0xe9
  41991b:	cs push cs
  41991d:	rol    esp,0x88
  419920:	sub    ah,BYTE PTR [ecx-0x49e8d185]
  419926:	push   edi
  419927:	sbb    eax,0x9f282f51
  41992c:	mov    ds:0xe0c732fc,al
  419931:	fsubr  st,st(5)
  419933:	sti    
  419934:	mov    eax,0x4c99c3e1
  419939:	xchg   ebp,eax
  41993a:	test   eax,0xda16ad86
  41993f:	adc    ebx,ecx
  419941:	arpl   WORD PTR [ebp-0x562f00bf],sp
  419947:	sub    DWORD PTR [edi],ebp
  419949:	adc    al,0x6d
  41994b:	and    ah,BYTE PTR [ecx-0x3c]
  41994e:	xlat   BYTE PTR ds:[ebx]
  41994f:	jae    0x419985
  419951:	lea    ebx,[esi+0x3c]
  419954:	pop    es
  419955:	pop    ds
  419956:	dec    ebx
  419957:	jge    0x41998f
  419959:	push   ss
  41995a:	pop    esi
  41995b:	mov    ebx,0x3ac7261
  419960:	cmp    al,0xea
  419962:	daa    
  419963:	outs   dx,BYTE PTR ds:[esi]
  419964:	xchg   edi,eax
  419965:	popa   
  419966:	push   eax
  419967:	pushf  
  419968:	into   
  419969:	cld    
  41996a:	fs push eax
  41996c:	gs cwde 
  41996e:	dec    ebx
  41996f:	and    BYTE PTR [edx],ah
  419971:	xor    BYTE PTR [ebp-0x89402a5],bl
  419977:	add    al,0xae
  419979:	lods   al,BYTE PTR ds:[esi]
  41997a:	stos   BYTE PTR es:[edi],al
  41997b:	dec    ebp
  41997c:	idiv   BYTE PTR [edx-0x29]
  41997f:	mov    dl,0x63
  419981:	pop    edx
  419982:	push   esp
  419983:	sbb    bh,0xfe
  419986:	ficomp DWORD PTR [ebp-0x22050432]
  41998c:	adc    ch,BYTE PTR [esi]
  41998e:	mov    BYTE PTR [eax-0x64],bh
  419991:	shl    eax,cl
  419993:	mov    DWORD PTR [ecx-0x7f69ea74],edi
  419999:	and    eax,0x782736d4
  41999e:	pusha  
  41999f:	out    0x27,al
  4199a1:	shr    ch,0xe9
  4199a4:	sub    eax,DWORD PTR [esp+ebp*2]
  4199a7:	fild   QWORD PTR [edx+0x74712e56]
  4199ad:	dec    edi
  4199ae:	cmc    
  4199af:	adc    eax,0xa12721b5
  4199b4:	lods   al,BYTE PTR ds:[esi]
  4199b5:	lock sbb BYTE PTR [ebp+0x6d],ah
  4199b9:	arpl   sp,di
  4199bb:	test   DWORD PTR [ecx+0x68b1b6b9],edi
  4199c1:	mov    bh,0x98
  4199c3:	sbb    BYTE PTR [eax-0x5b],cl
  4199c6:	jge    0x419a31
  4199c8:	loope  0x4199ae
  4199ca:	cmovnp esi,ecx
  4199cd:	es jbe 0x419a3f
  4199d0:	add    eax,0xe99475cd
  4199d5:	pushf  
  4199d6:	mov    edi,DWORD PTR [esi-0xa]
  4199d9:	ja     0x419969
  4199db:	pop    eax
  4199dc:	xchg   esp,eax
  4199dd:	mov    al,ds:0x9d41ee17
  4199e2:	lods   al,BYTE PTR ds:[esi]
  4199e4:	lahf   
  4199e5:	ret    0x9712
  4199e8:	add    ah,BYTE PTR [ebx-0x263c0427]
  4199ee:	jmp    0x4611:0x545c855
  4199f5:	bound  esp,QWORD PTR [esi+edx*2+0x34b00194]
  4199fc:	xchg   esp,eax
  4199fd:	out    dx,eax
  4199fe:	icebp  
  4199ff:	jae    0x4199e4
  419a01:	iret   
  419a02:	and    dl,ch
  419a04:	mov    ebp,0x905761b8
  419a09:	gs jno 0x419a7b
  419a0c:	jg     0x419a3b
  419a0e:	jecxz  0x4199ff
  419a10:	push   ebx
  419a11:	adc    bh,BYTE PTR [esp+ebx*4]
  419a14:	adc    DWORD PTR [edi+0x35],ebp
  419a17:	dec    esp
  419a18:	test   DWORD PTR [eax+0x7671501],esi
  419a1e:	xchg   DWORD PTR [ebp-0x4f],esp
  419a21:	in     al,dx
  419a22:	xchg   esp,eax
  419a23:	mov    ch,0x58
  419a25:	xor    eax,0x2da2da9
  419a2a:	enter  0x6e6c,0x76
  419a2e:	sbb    DWORD PTR [esi-0x39033221],0xc95620e0
  419a38:	mov    eax,ds:0xb778d8ea
  419a3d:	fild   WORD PTR [ebp+0x5a7d0777]
  419a43:	or     DWORD PTR [ebx+0x7c],esi
  419a46:	arpl   WORD PTR [ebx-0x5a],sp
  419a49:	lahf   
  419a4a:	aas    
  419a4b:	mov    esp,DWORD PTR [edx-0x20]
  419a4e:	into   
  419a4f:	xor    bl,dl
  419a51:	mov    al,ds:0x98fdbbeb
  419a56:	enter  0xe9ea,0xd2
  419a5a:	jmp    0x8f84f2c8
  419a5f:	pop    edi
  419a60:	push   edi
  419a61:	daa    
  419a62:	push   ss
  419a63:	push   eax
  419a64:	stos   BYTE PTR es:[edi],al
  419a65:	test   eax,0xd54d3a1d
  419a6a:	mov    edx,0xbec6c48a
  419a6f:	jo     0x419a86
  419a71:	jo     0x419aa6
  419a73:	retf   0x974f
  419a76:	mov    edx,0x60b51c3
  419a7b:	cs out 0x12,al
  419a7e:	(bad)  
  419a7f:	shr    BYTE PTR ds:0xdaef8310,1
  419a85:	dec    ecx
  419a86:	mov    eax,esi
  419a88:	push   eax
  419a89:	and    eax,DWORD PTR [esp+edi*8+0x60570f34]
  419a90:	lods   eax,DWORD PTR ds:[esi]
  419a91:	sbb    DWORD PTR [ecx+ebp*1-0x4],0x63
  419a96:	les    esi,FWORD PTR [ebp+0x5631a4d2]
  419a9c:	cli    
  419a9d:	clc    
  419a9e:	or     eax,DWORD PTR [edi+0x1f]
  419aa1:	mov    dl,0xb2
  419aa3:	jle    0x419ad5
  419aa5:	jo     0x419a6b
  419aa7:	div    bh
  419aa9:	and    eax,0xf1b0b7e5
  419aae:	xchg   esi,eax
  419aaf:	xchg   DWORD PTR [edi+0x3c],esi
  419ab2:	jb     0x419aae
  419ab4:	pop    es
  419ab5:	enter  0x4593,0x5b
  419ab9:	inc    edi
  419aba:	stc    
  419abb:	xor    BYTE PTR [ebp-0x73639e9f],cl
  419ac1:	mov    edi,0x4b5fe999
  419ac6:	repz out dx,al
  419ac8:	mov    ebx,0xb27529a4
  419acd:	and    BYTE PTR [edi-0x4901d725],cl
  419ad3:	into   
  419ad4:	pop    edi
  419ad5:	jmp    0x419abb
  419ad7:	test   BYTE PTR [ebp-0x39],ch
  419ada:	sahf   
  419adb:	out    dx,eax
  419adc:	xchg   eax,ebp
  419ade:	arpl   di,bx
  419ae0:	stos   DWORD PTR es:[edi],eax
  419ae1:	sbb    eax,0x61cee2b1
  419ae6:	inc    ecx
  419ae7:	dec    ebx
  419ae8:	jge    0x419b1f
  419aea:	aam    0xe2
  419aec:	pop    ds
  419aed:	xchg   edi,eax
  419aee:	add    eax,0x486ed360
  419af3:	shl    DWORD PTR [esi],0xdb
  419af6:	ss lock stos DWORD PTR es:[edi],eax
  419af9:	test   eax,0xfd3471bf
  419afe:	pop    ebp
  419aff:	pop    edi
  419b00:	dec    edi
  419b01:	neg    BYTE PTR [edi+0x65]
  419b04:	mov    ds:0x57ac449b,al
  419b09:	xor    eax,0x50f6f375
  419b0e:	xor    ch,al
  419b10:	xchg   ebp,eax
  419b11:	xor    esi,DWORD PTR cs:[edi]
  419b14:	mov    ebp,0xf2efdfaf
  419b19:	push   ebx
  419b1a:	in     eax,dx
  419b1b:	lea    eax,[ecx+0x3bbc6c8b]
  419b21:	fnstcw WORD PTR [edx+0x2b]
  419b24:	mov    esi,0xdd4e1d4f
  419b29:	mov    esp,ebp
  419b2b:	(bad)  
  419b2c:	call   0xb5432c3c
  419b31:	sbb    al,bh
  419b33:	push   ebx
  419b34:	loopne 0x419b26
  419b36:	jge    0x419b5f
  419b38:	pushf  
  419b39:	fbstp  TBYTE PTR [edx]
  419b3b:	es jg  0x419b70
  419b3e:	(bad)  [ebx-0x18]
  419b41:	aad    0x1b
  419b43:	mov    ebp,0x84ddafae
  419b48:	scas   eax,DWORD PTR es:[edi]
  419b49:	mov    ds:0x502b00c9,eax
  419b4e:	mov    edi,DWORD PTR [ebx]
  419b50:	push   ss
  419b51:	iret   
  419b52:	mov    esp,0x2144e573
  419b57:	dec    ch
  419b59:	int3   
  419b5a:	(bad)  
  419b5b:	lahf   
  419b5c:	xchg   edx,eax
  419b5d:	add    ebx,DWORD PTR [ecx-0x2a32781b]
  419b63:	mov    ds:0x89b9b8c9,eax
  419b68:	push   eax
  419b69:	xlat   BYTE PTR ds:[ebx]
  419b6a:	test   esp,eax
  419b6c:	not    dh
  419b6e:	fstp   QWORD PTR [edx]
  419b70:	mov    bh,0x98
  419b72:	mov    ah,0xbc
  419b74:	data16 int 0xb6
  419b77:	and    bl,BYTE PTR [esi]
  419b79:	loope  0x419b68
  419b7b:	dec    edi
  419b7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b7d:	mov    esp,0xc65f3d4a
  419b82:	mov    bl,BYTE PTR [eax-0x557d6c64]
  419b88:	jmp    0x419b2d
  419b8a:	in     al,0x33
  419b8c:	iret   
  419b8d:	fcomp  DWORD PTR [edx-0x7b]
  419b90:	push   ss
  419b91:	in     eax,dx
  419b92:	out    0x75,al
  419b94:	adc    eax,0x3d816490
  419b99:	add    al,0x70
  419b9b:	inc    ecx
  419b9c:	or     esp,DWORD PTR [edx-0x6d]
  419b9f:	xchg   BYTE PTR [edi+0x74],bl
  419ba2:	sti    
  419ba3:	mov    dl,0xc8
  419ba5:	sub    ah,BYTE PTR [edx+edi*4]
  419ba8:	adc    DWORD PTR [ebx-0x29885af5],eax
  419bae:	xor    DWORD PTR ds:[esi],edi
  419bb1:	mov    dl,0x11
  419bb3:	(bad)  
  419bb4:	dec    edx
  419bb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bb6:	sahf   
  419bb7:	test   al,0x31
  419bb9:	fbld   TBYTE PTR [ebx-0x6b]
  419bbc:	lods   al,BYTE PTR ds:[esi]
  419bbd:	cld    
  419bbe:	sar    edi,0x91
  419bc1:	test   eax,0xc2ffa743
  419bc6:	sti    
  419bc7:	sti    
  419bc8:	pusha  
  419bc9:	out    0x5a,eax
  419bcb:	cs pushf 
  419bcd:	sbb    bh,BYTE PTR [edx]
  419bcf:	add    al,0x5b
  419bd1:	mov    al,0x81
  419bd3:	repz ret 0x8b69
  419bd7:	repz shl DWORD PTR [esi-0x27435786],cl
  419bde:	xor    DWORD PTR [eax],0x28934ff1
  419be4:	xchg   DWORD PTR [eax+0x3358a20b],edx
  419bea:	imul   ecx,esp,0x7
  419bed:	mov    DWORD PTR [eax+0x5508554f],ecx
  419bf3:	jb     0x419bd3
  419bf5:	dec    edx
  419bf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bf7:	mov    eax,ds:0x9832ca6b
  419bfc:	jo     0x419c1e
  419bfe:	mov    ebx,0xe98c0752
  419c03:	and    DWORD PTR [ebx],ebp
  419c05:	rcl    ah,cl
  419c07:	ins    DWORD PTR es:[edi],dx
  419c08:	frstor [esi-0x4e]
  419c0b:	sbb    al,0xec
  419c0d:	(bad)  
  419c0f:	fldenv [ecx+eiz*2]
  419c12:	and    ch,BYTE PTR [ecx-0x45]
  419c15:	mov    ch,0x7d
  419c17:	lahf   
  419c18:	jl     0x419c61
  419c1a:	or     ebx,DWORD PTR [ebx]
  419c1c:	rcl    BYTE PTR [ebx+0x62b242ef],cl
  419c22:	pop    ebp
  419c23:	hlt    
  419c24:	xchg   ebx,eax
  419c25:	mov    al,ds:0x20ac1903
  419c2a:	cmp    eax,0x1fa57ae1
  419c2f:	mov    dh,BYTE PTR [ecx-0xf]
  419c32:	sub    al,0x6e
  419c34:	imul   esp,edx,0x13eef78e
  419c3a:	out    0x60,eax
  419c3c:	mov    BYTE PTR [edx-0x7b],0x7f
  419c40:	shr    DWORD PTR [edx],cl
  419c42:	and    al,BYTE PTR [edi-0x2fad52ac]
  419c48:	mov    al,ds:0xc8e9a0fe
  419c4d:	sub    al,0x2b
  419c4f:	pop    ecx
  419c50:	test   eax,0x6d07b242
  419c55:	xor    ecx,ecx
  419c57:	popf   
  419c58:	add    cl,BYTE PTR [eax-0x6e69fc54]
  419c5e:	xchg   edx,eax
  419c5f:	inc    esi
  419c60:	dec    esi
  419c61:	bound  esp,QWORD PTR [ecx+esi*8-0x785ff54d]
  419c68:	sbb    DWORD PTR [ebx+ebp*4+0x20decd56],edi
  419c6f:	push   cs
  419c70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c71:	shr    BYTE PTR [edi-0x6613f4bd],0x7f
  419c78:	or     eax,0x91e20b1a
  419c7d:	push   eax
  419c7e:	xchg   ebp,eax
  419c7f:	mov    WORD PTR [eax+0x52982027],ss
  419c85:	in     eax,dx
  419c86:	lock jg 0x419c93
  419c89:	add    BYTE PTR [esi],al
  419c8b:	test   al,0x1e
  419c8d:	dec    ecx
  419c8e:	popa   
  419c8f:	(bad)  
  419c90:	shl    DWORD PTR [eax+0x44bf08bd],1
  419c96:	shr    BYTE PTR [edi+eiz*8],cl
  419c99:	dec    edi
  419c9a:	iret   
  419c9b:	outs   dx,DWORD PTR ds:[esi]
  419c9c:	out    dx,al
  419c9d:	sub    eax,0x80ca760f
  419ca2:	adc    esp,edx
  419ca4:	in     al,0x56
  419ca6:	(bad)
  419ca9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419caa:	xor    BYTE PTR [ecx],ah
  419cac:	int    0x93
  419cae:	mov    esi,0xcc21011e
  419cb3:	mov    dh,ah
  419cb5:	ins    DWORD PTR es:[edi],dx
  419cb6:	cmc    
  419cb7:	jns    0x419c43
  419cb9:	aas    
  419cba:	retf   0x9e28
  419cbd:	xor    BYTE PTR [ebx+0x47],0x66
  419cc1:	xor    al,0xaf
  419cc3:	int3   
  419cc4:	(bad)  
  419cc5:	mov    al,0xff
  419cc7:	into   
  419cc8:	mov    ecx,0xeadf0c24
  419ccd:	(bad)  
  419cce:	ror    ebx,1
  419cd0:	mov    WORD PTR [ebx],ds
  419cd2:	or     bh,bl
  419cd4:	jnp    0x419d27
  419cd6:	jge    0x419cc3
  419cd8:	loop   0x419d44
  419cda:	mov    bl,0x24
  419cdc:	scas   al,BYTE PTR es:[edi]
  419cdd:	sub    ebx,DWORD PTR [esi]
  419cdf:	push   0x64c14bf9
  419ce4:	push   es
  419ce5:	mov    BYTE PTR fs:[edi],ah
  419ce8:	jle    0x419ccf
  419cea:	and    al,BYTE PTR [ebx*8+0x7ad2d68f]
  419cf1:	call   0x2842:0x3495545a
  419cf8:	inc    edi
  419cf9:	jb     0x419d55
  419cfb:	test   al,0x24
  419cfd:	sub    eax,0x2b10659f
  419d02:	sub    BYTE PTR [ebx],ah
  419d04:	test   BYTE PTR [ecx+0x633546a5],al
  419d0a:	inc    ecx
  419d0b:	mov    ebp,0x6fff65c7
  419d10:	push   0x1bcd0551
  419d15:	pop    ds
  419d16:	sbb    bl,bl
  419d18:	in     eax,0xea
  419d1a:	sti    
  419d1b:	mov    cl,0xcf
  419d1d:	push   ecx
  419d1e:	dec    ecx
  419d1f:	mov    gs,WORD PTR [esi+0x696551e0]
  419d25:	lea    ebp,[ecx]
  419d27:	adc    ch,BYTE PTR [ebx-0x2bdef8e]
  419d2d:	imul   esp,DWORD PTR [ebp-0x2147f3be],0xffffff9c
  419d34:	in     al,dx
  419d35:	jb     0x419d88
  419d37:	xchg   esi,eax
  419d38:	pop    ebp
  419d39:	adc    edi,DWORD PTR [ebx]
  419d3b:	push   edx
  419d3c:	mov    eax,0x8feed055
  419d41:	xlat   BYTE PTR ds:[ebx]
  419d42:	in     al,dx
  419d43:	jle    0x419d1b
  419d45:	ins    BYTE PTR es:[edi],dx
  419d46:	jecxz  0x419d94
  419d48:	cmp    BYTE PTR [ebp+esi*1+0x36],0x67
  419d4d:	sub    edi,eax
  419d4f:	push   edx
  419d50:	and    ch,BYTE PTR [edx]
  419d52:	arpl   bp,cx
  419d54:	inc    eax
  419d55:	test   esi,edi
  419d57:	test   esp,ebx
  419d59:	adc    DWORD PTR [eax+0x10],ebp
  419d5c:	mov    eax,ds:0x289d0d10
  419d61:	mov    ebx,es
  419d63:	xor    esi,DWORD PTR [eax]
  419d65:	std    
  419d66:	pop    es
  419d67:	sub    DWORD PTR [edx],edi
  419d69:	inc    ebx
  419d6a:	hlt    
  419d6b:	(bad)  
  419d6c:	(bad)  
  419d6d:	icebp  
  419d6e:	cmp    al,0x80
  419d70:	pop    esi
  419d71:	sbb    al,0x84
  419d73:	sbb    ebp,esp
  419d75:	cld    
  419d76:	and    al,dh
  419d78:	int3   
  419d79:	in     eax,dx
  419d7a:	jnp    0x419d61
  419d7c:	outs   dx,DWORD PTR ds:[esi]
  419d7d:	es xchg ecx,eax
  419d7f:	xchg   DWORD PTR [ecx-0x23f31c34],esp
  419d85:	pushf  
  419d86:	xchg   ebx,eax
  419d87:	std    
  419d88:	out    0x46,eax
  419d8a:	push   edi
  419d8b:	xor    BYTE PTR [edx],0xa4
  419d8e:	int3   
  419d8f:	rcl    BYTE PTR [edx],0x63
  419d92:	and    dl,dh
  419d94:	adc    bl,BYTE PTR [ecx-0xdbd2e4d]
  419d9a:	test   DWORD PTR [ebx-0x60],esi
  419d9d:	push   ecx
  419d9e:	pop    ecx
  419d9f:	outs   dx,BYTE PTR ds:[esi]
  419da0:	mov    DWORD PTR [esi+0x58],ecx
  419da3:	frstor [esp+esi*8+0x43a54e1d]
  419daa:	gs aam 0xb0
  419dad:	mov    ds:0x9aa5c5f2,eax
  419db2:	call   FWORD PTR [esi-0x32]
  419db5:	mov    DWORD PTR [edi-0x31b5d3a5],edx
  419dbb:	popf   
  419dbc:	enter  0xba6f,0xad
  419dc0:	sub    BYTE PTR [edi+0x54],bh
  419dc3:	and    BYTE PTR [edx],ah
  419dc5:	mov    ds:0x6cd6c251,al
  419dca:	mov    ebx,0xd941dd90
  419dcf:	int    0xcf
  419dd1:	outs   dx,DWORD PTR ds:[esi]
  419dd2:	mov    esp,0x165603ec
  419dd7:	push   ss
  419dd8:	iret   
  419dd9:	fsubr  QWORD PTR [eax+ebx*1]
  419ddc:	stos   BYTE PTR es:[edi],al
  419ddd:	jo     0x419dd0
  419ddf:	xor    al,0xf2
  419de2:	jge    0x419e39
  419de4:	pop    ds
  419de5:	repz call 0xc5fb:0xba089536
  419ded:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dee:	lods   al,BYTE PTR ds:[esi]
  419def:	lea    esi,[esi]
  419df1:	scas   al,BYTE PTR es:[edi]
  419df2:	pusha  
  419df3:	xor    edx,edi
  419df5:	jnp    0x419e1e
  419df7:	(bad)  
  419df8:	xchg   ecx,eax
  419df9:	add    BYTE PTR [edx-0x67],0x8d
  419dfd:	jnp    0x419dc4
  419dff:	dec    edx
  419e00:	pop    edx
  419e01:	leave  
  419e02:	aas    
  419e03:	inc    eax
  419e04:	xor    BYTE PTR ds:0xd83805e8,dl
  419e0a:	repz cdq 
  419e0c:	fucom  st(5)
  419e0e:	div    BYTE PTR [ebx]
  419e10:	popa   
  419e11:	cld    
  419e12:	outs   dx,DWORD PTR ds:[esi]
  419e13:	mov    ebp,0xfac20f45
  419e18:	outs   dx,BYTE PTR ds:[esi]
  419e19:	dec    edx
  419e1a:	(bad)  
  419e1b:	jle    0x419de6
  419e1d:	into   
  419e1e:	aad    0x54
  419e20:	jns    0x419dba
  419e22:	ficomp WORD PTR [eax]
  419e24:	cmp    al,BYTE PTR ds:0x48bee584
  419e2a:	dec    ebp
  419e2b:	(bad)
  419e2e:	jmp    0xa25e:0x9db49208
  419e35:	sahf   
  419e36:	mov    bh,0x90
  419e38:	call   0x982755c1
  419e3d:	dec    esp
  419e3e:	cmp    ebp,esp
  419e40:	and    esp,DWORD PTR [ecx+0x55]
  419e43:	sbb    ch,BYTE PTR [edi-0x796f62b0]
  419e49:	push   ds
  419e4a:	icebp  
  419e4b:	push   0x369114a
  419e50:	mov    ds:0xb47f6a7a,al
  419e55:	aaa    
  419e56:	sbb    al,0x62
  419e58:	js     0x419ea5
  419e5a:	add    ebp,esi
  419e5c:	push   ebx
  419e5d:	ds fwait
  419e5f:	xchg   ebp,eax
  419e60:	add    eax,DWORD PTR [esi+0x48]
  419e63:	dec    edx
  419e64:	inc    edi
  419e65:	sbb    ebp,DWORD PTR [edx-0x5b5fc260]
  419e6b:	dec    edi
  419e6c:	xchg   ecx,eax
  419e6d:	push   cs
  419e6e:	imul   ecx,DWORD PTR [ebx-0x72],0x2226c5fe
  419e75:	pop    edx
  419e76:	clc    
  419e77:	mov    edi,0x2788e4f1
  419e7c:	cmp    BYTE PTR [ecx],bl
  419e7e:	add    DWORD PTR [edx],0xffffffc3
  419e81:	adc    al,0x9a
  419e83:	adc    al,BYTE PTR [edx]
  419e85:	fld    DWORD PTR [ebx-0x5e]
  419e88:	jp     0x419eb0
  419e8a:	cdq    
  419e8b:	add    BYTE PTR [esi],bl
  419e8d:	call   0xcb79e9af
  419e92:	(bad)  
  419e93:	iret   
  419e94:	xor    edx,DWORD PTR [esi-0x6a6eb40a]
  419e9a:	shr    BYTE PTR [ebx+0x2d],1
  419e9d:	and    DWORD PTR ds:0x6d3bf2f2,esi
  419ea3:	jbe    0x419e48
  419ea5:	(bad)  
  419ea6:	push   esp
  419ea7:	and    BYTE PTR [edx+eax*8+0x8],0x77
  419eac:	std    
  419ead:	fwait
  419eae:	or     DWORD PTR [edi],esi
  419eb0:	mov    ds:0xb9746730,al
  419eb5:	out    0x35,al
  419eb7:	mov    eax,0x11b9b254
  419ebc:	push   ecx
  419ebd:	mov    BYTE PTR [ecx+eax*1-0x30],dl
  419ec1:	add    eax,0xf9592391
  419ec6:	mov    DWORD PTR [esi+0x6d],ecx
  419ec9:	ins    DWORD PTR es:[edi],dx
  419eca:	fs das 
  419ecc:	pop    ecx
  419ecd:	xor    esp,DWORD PTR [ecx-0x49]
  419ed0:	shr    ecx,1
  419ed2:	ins    BYTE PTR es:[edi],dx
  419ed3:	lods   al,BYTE PTR ds:[esi]
  419ed4:	les    esi,FWORD PTR [eax]
  419ed6:	adc    eax,0x25354715
  419edb:	inc    ebp
  419edc:	or     edx,ecx
  419ede:	mov    bl,0x72
  419ee0:	adc    BYTE PTR [edx-0x25],ch
  419ee3:	and    edi,eax
  419ee5:	outs   dx,DWORD PTR ds:[esi]
  419ee6:	add    DWORD PTR [edi-0x32],0x6dcccb4
  419eed:	in     al,dx
  419eee:	adc    ch,BYTE PTR [ecx+0x732f009b]
  419ef4:	xor    ebp,DWORD PTR [edx+0x7bc681e2]
  419efa:	push   ebp
  419efb:	mov    cl,0xd9
  419efd:	call   0xadb4151b
  419f02:	pop    edi
  419f03:	mov    esp,0xc324f77c
  419f08:	js     0x419f6e
  419f0a:	dec    esp
  419f0b:	inc    ebx
  419f0c:	fld    TBYTE PTR [edx+0x3c021f13]
  419f12:	sbb    eax,DWORD PTR [edx+0x3a]
  419f15:	push   eax
  419f16:	addr16 mov ch,0x1e
  419f19:	sub    edx,DWORD PTR [ecx-0x61]
  419f1c:	scas   eax,DWORD PTR es:[edi]
  419f1d:	sbb    ebx,eax
  419f1f:	(bad)  
  419f20:	outs   dx,DWORD PTR ds:[esi]
  419f21:	clc    
  419f22:	dec    edi
  419f23:	jno    0x419f90
  419f25:	cs inc edx
  419f27:	mov    WORD PTR [ebx],?
  419f29:	pop    edi
  419f2a:	lods   eax,DWORD PTR ds:[esi]
  419f2b:	or     DWORD PTR [esi-0x4d],ecx
  419f2e:	mov    cl,0x7a
  419f30:	sar    DWORD PTR [edx-0x4a],1
  419f33:	shl    BYTE PTR [eax-0x42],1
  419f36:	xor    eax,0x599c878f
  419f3b:	mov    ebp,0xa312890d
  419f40:	std    
  419f41:	ret    
  419f42:	rcr    BYTE PTR [eax+0x17],0x11
  419f46:	lock and BYTE PTR [eax+ebx*4+0x71336063],cl
  419f4e:	in     eax,0xff
  419f50:	and    al,BYTE PTR [esi+0x27]
  419f53:	jp     0x419f9d
  419f55:	push   0xffffffcb
  419f57:	inc    esi
  419f58:	test   BYTE PTR [ecx-0x5baff226],0x7f
  419f5f:	test   eax,0x221dd6f7
  419f64:	cmp    BYTE PTR es:[esi-0x41],0x1a
  419f69:	in     eax,0xa4
  419f6b:	cs jo  0x419f1d
  419f6e:	out    0x91,al
  419f70:	sbb    al,bl
  419f72:	mov    ch,0xf3
  419f74:	cmp    eax,0xbbeb3c80
  419f79:	dec    ebp
  419f7a:	pop    esi
  419f7b:	add    BYTE PTR [ebp+0x23f0424f],cl
  419f81:	pop    edx
  419f82:	pop    ss
  419f83:	pop    ebp
  419f84:	jne    0x419fb3
  419f86:	xor    al,0xc6
  419f88:	xlat   BYTE PTR ds:[ebx]
  419f89:	cs scas al,BYTE PTR es:[edi]
  419f8b:	cs es ret 0x9400
  419f90:	ds dec ebp
  419f92:	adc    bl,dh
  419f94:	es xor ebp,ecx
  419f97:	sub    al,0x3
  419f9a:	sub    DWORD PTR [ebx+0x2e],eax
  419f9d:	fmul   QWORD PTR [edi]
  419f9f:	sbb    al,0x28
  419fa2:	add    ebp,edi
  419fa4:	icebp  
  419fa5:	add    ebp,DWORD PTR [eax+0x1f]
  419fa8:	push   esi
  419fa9:	bound  ecx,QWORD PTR [esi+0x6f909bcc]
  419faf:	out    0x1b,eax
  419fb1:	cmp    BYTE PTR [ebx+0x5fc8c2ab],0x48
  419fb8:	sub    edx,edi
  419fba:	cmp    edx,DWORD PTR [ebp+0x40]
  419fbd:	mov    esi,0x65d47a55
  419fc2:	clc    
  419fc3:	pop    edi
  419fc4:	daa    
  419fc5:	or     eax,0x5af2f82e
  419fca:	pop    ds
  419fcb:	out    0xc6,al
  419fcd:	daa    
  419fce:	es push edi
  419fd0:	jmp    0x2b4f:0xffd2b16
  419fd7:	xadd   BYTE PTR [ecx-0x2c],bh
  419fdb:	adc    DWORD PTR [edx-0x4f577c7e],0xe051c1e6
  419fe5:	and    BYTE PTR [ebx],cl
  419fe7:	(bad)  
  419fe8:	jg     0x41a009
  419fea:	ror    DWORD PTR [edx+0x230313ae],0x89
  419ff1:	and    eax,0xa884a052
  419ff6:	mov    ebp,0xae834e2f
  419ffb:	cmp    ecx,DWORD PTR [edx+ebx*8-0x50]
  419fff:	sti    
  41a000:	retf   
  41a001:	fdivp  st(0),st
  41a003:	jbe    0x419ff4
  41a005:	mov    ebp,0x6dee79f1
  41a00a:	pop    es
  41a00b:	fdiv   DWORD PTR [edi+0x24]
  41a00e:	arpl   di,si
  41a010:	neg    BYTE PTR [ecx]
  41a012:	mov    ch,0x2f
  41a014:	xchg   esi,eax
  41a015:	js     0x41a05a
  41a017:	fist   WORD PTR [ebp+0x3a]
  41a01a:	stc    
  41a01b:	lods   eax,DWORD PTR ds:[esi]
  41a01c:	test   al,0xbf
  41a01e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a01f:	ret    0xa0af
  41a022:	stos   BYTE PTR es:[edi],al
  41a023:	jmp    0xde7:0x7798826e
  41a02a:	popf   
  41a02b:	out    0x2,al
  41a02d:	cmp    bl,cl
  41a02f:	dec    edx
  41a030:	mov    ecx,0x13a0aba6
  41a035:	sub    BYTE PTR [edx-0x44d9c425],dh
  41a03b:	imul   ecx,edi,0x770cec7a
  41a041:	outs   dx,BYTE PTR ds:[esi]
  41a042:	dec    esp
  41a043:	outs   dx,DWORD PTR ds:[esi]
  41a044:	and    BYTE PTR [esi],cl
  41a046:	cmp    eax,edx
  41a048:	sbb    eax,0xf6141d6a
  41a04d:	fdivr  QWORD PTR [edx-0x7124556c]
  41a053:	pop    ds
  41a054:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a055:	out    0xda,al
  41a057:	xor    al,0xf5
  41a059:	pop    ds
  41a05a:	push   ebp
  41a05b:	xchg   edi,eax
  41a05c:	mov    dh,0xcb
  41a05e:	fcomp  QWORD PTR [eax]
  41a060:	sub    DWORD PTR [ebp-0x28],esp
  41a063:	mov    cl,0x71
  41a065:	cmp    esi,DWORD PTR [bx+si-0x4b2d]
  41a06a:	xchg   edi,eax
  41a06b:	xchg   edx,eax
  41a06c:	(bad)
  41a06f:	mov    edi,0xc6f9190b
  41a074:	pop    ss
  41a075:	inc    ebp
  41a076:	jbe    0x41a002
  41a078:	cmp    al,0x7e
  41a07a:	push   ss
  41a07b:	fs es dec ecx
  41a07e:	in     eax,dx
  41a07f:	rcl    ebx,0xce
  41a082:	inc    edi
  41a083:	popf   
  41a084:	out    0xda,al
  41a086:	and    DWORD PTR [ecx-0x77],ecx
  41a089:	call   0xeeb1fd0f
  41a08e:	xchg   DWORD PTR [ebx+0x9],edi
  41a091:	sbb    bl,dl
  41a093:	sub    DWORD PTR [ebp-0x24],eax
  41a096:	cmp    ah,BYTE PTR [edx]
  41a098:	mov    edx,0xe5f8140
  41a09d:	cmp    eax,0xa5ddac4a
  41a0a2:	xor    eax,0xb3936dfe
  41a0a7:	popf   
  41a0a8:	(bad)  
  41a0a9:	sbb    dh,ch
  41a0ab:	xlat   BYTE PTR ds:[ebx]
  41a0ac:	mov    eax,0x5fcdcc90
  41a0b1:	dec    esp
  41a0b2:	mov    ch,0x20
  41a0b4:	(bad)  
  41a0b5:	lock mov esp,0xe8bcd91f
  41a0bb:	mov    ds:0x5547f1be,eax
  41a0c0:	push   0x12
  41a0c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0c3:	push   esi
  41a0c4:	pop    esi
  41a0c5:	inc    esp
  41a0c6:	pop    edx
  41a0c7:	jmp    0x41a122
  41a0c9:	and    DWORD PTR [edi-0x1a],ecx
  41a0cc:	lock mov edi,0x9cfc041d
  41a0d2:	daa    
  41a0d3:	xor    al,0x5d
  41a0d5:	dec    ebx
  41a0d6:	sbb    al,0x68
  41a0d8:	outs   dx,BYTE PTR ds:[esi]
  41a0d9:	cmp    esi,DWORD PTR [esi-0x31]
  41a0dc:	mov    ch,0x92
  41a0de:	mov    eax,ds:0x3cc23b61
  41a0e3:	iret   
  41a0e4:	and    DWORD PTR [eax+ebp*2],edx
  41a0e7:	aam    0x5a
  41a0e9:	loop   0x41a0f2
  41a0eb:	(bad)  
  41a0ec:	out    dx,eax
  41a0ed:	cmp    bh,ah
  41a0ef:	xchg   esi,eax
  41a0f0:	add    ah,BYTE PTR [ebx+0x7c]
  41a0f3:	stc    
  41a0f4:	jno    0x41a080
  41a0f6:	ret    0x2416
  41a0f9:	xchg   edi,eax
  41a0fa:	rol    al,0x66
  41a0fd:	jle    0x41a0cb
  41a0ff:	call   0x1f427896
  41a104:	fdiv   st(2),st
  41a106:	dec    ebp
  41a107:	repnz in al,0x81
  41a10a:	fdivr  DWORD PTR [edx]
  41a10c:	dec    al
  41a10e:	jmp    0x593bcfe8
  41a113:	or     eax,0x73f19d40
  41a118:	and    eax,0xc2b6e689
  41a11d:	pop    esi
  41a11e:	add    edx,DWORD PTR [ebp+0x961c5fb]
  41a124:	pop    esi
  41a125:	scas   al,BYTE PTR es:[edi]
  41a126:	mov    bl,0x6d
  41a128:	jae    0x41a1a4
  41a12a:	mov    ebx,0x58da01c7
  41a12f:	cli    
  41a130:	dec    ebp
  41a131:	sbb    eax,esi
  41a133:	mov    ds:0x6906ae06,al
  41a138:	mov    edx,0x41f881ef
  41a13d:	cld    
  41a13e:	(bad)  
  41a13f:	out    dx,eax
  41a140:	mov    edx,0xc3d91dd0
  41a145:	inc    edi
  41a146:	fldenv [eax-0x34]
  41a149:	mov    esi,0x86350d8a
  41a14e:	cs dec edi
  41a150:	mov    bl,0x9
  41a152:	mov    BYTE PTR ds:0x2a928fc8,cl
  41a158:	mov    ds:0x23821f12,eax
  41a15d:	jns    0x41a154
  41a15f:	xor    al,0x6e
  41a161:	in     eax,0x80
  41a163:	iret   
  41a164:	dec    esi
  41a165:	pop    esi
  41a166:	pop    ebp
  41a167:	and    eax,DWORD PTR [edx]
  41a169:	div    BYTE PTR [ebp+0x5]
  41a16c:	icebp  
  41a16d:	imul   edx,DWORD PTR ds:0x78272b9d,0x7caabddf
  41a177:	dec    ecx
  41a178:	pop    edi
  41a179:	push   ebp
  41a17a:	xchg   BYTE PTR [ecx+0x40430090],cl
  41a180:	clc    
  41a181:	outs   dx,BYTE PTR ds:[esi]
  41a182:	or     BYTE PTR [ebx-0x370fa790],bl
  41a188:	push   es
  41a189:	into   
  41a18a:	pop    edx
  41a18b:	cli    
  41a18c:	and    esp,eax
  41a18e:	lds    edx,FWORD PTR [ebp-0x194a8f4d]
  41a194:	ins    DWORD PTR es:[edi],dx
  41a195:	in     eax,dx
  41a196:	mov    WORD PTR [ecx+0x56a5188f],ds
  41a19c:	xor    DWORD PTR [ebp+0x7],0x21
  41a1a0:	cwde   
  41a1a1:	ficomp DWORD PTR [edi-0xf]
  41a1a4:	sti    
  41a1a5:	in     eax,0x22
  41a1a7:	pop    ecx
  41a1a8:	mov    ds:0x596793f3,al
  41a1ad:	mov    WORD PTR [eax],ss
  41a1af:	call   0x1b0f:0xa080e486
  41a1b6:	dec    ebp
  41a1b7:	or     al,0xe8
  41a1b9:	adc    DWORD PTR [esi-0x310a7abb],edx
  41a1bf:	dec    ecx
  41a1c0:	test   DWORD PTR [ebp-0x12d11c7c],eax
  41a1c6:	pop    si
  41a1c8:	repnz and DWORD PTR [edi],edx
  41a1cb:	into   
  41a1cc:	nop
  41a1cd:	push   eax
  41a1ce:	and    cl,BYTE PTR [edx+0x4c]
  41a1d1:	lds    esp,FWORD PTR [ecx-0x28d189f1]
  41a1d7:	pop    es
  41a1d8:	cdq    
  41a1d9:	xchg   BYTE PTR ds:0x73ff1eda,ch
  41a1df:	fwait
  41a1e0:	imul   BYTE PTR cs:[eax]
  41a1e3:	pop    ecx
  41a1e4:	sbb    eax,0x1573920f
  41a1e9:	dec    edi
  41a1ea:	shr    DWORD PTR [edi],cl
  41a1ec:	stos   BYTE PTR es:[edi],al
  41a1ed:	mov    ecx,DWORD PTR [ecx+0x41f7ba79]
  41a1f3:	fld    DWORD PTR [edi]
  41a1f5:	lods   al,BYTE PTR ds:[esi]
  41a1f6:	jae    0x41a252
  41a1f8:	and    BYTE PTR [ebp+0x4d],cl
  41a1fb:	xchg   esi,eax
  41a1fc:	inc    edi
  41a1fd:	cmp    ch,BYTE PTR [eax]
  41a1ff:	lods   al,BYTE PTR ds:[esi]
  41a200:	dec    esp
  41a201:	pop    ss
  41a202:	dec    ecx
  41a203:	push   cs
  41a204:	stc    
  41a205:	cmp    al,0x37
  41a207:	or     DWORD PTR [esi+0x67],0x1e53d131
  41a20e:	ins    BYTE PTR es:[edi],dx
  41a20f:	push   0x3a
  41a211:	sub    eax,DWORD PTR [ecx-0x69]
  41a214:	push   cs
  41a215:	mov    esi,0x7a201afc
  41a21a:	sbb    BYTE PTR [esi+0x3a],0x16
  41a21e:	push   eax
  41a21f:	stos   BYTE PTR es:[edi],al
  41a220:	add    eax,0x24935dc8
  41a225:	bound  ebp,QWORD PTR [ecx-0x1e]
  41a228:	mov    ecx,0x5df27228
  41a22d:	scas   eax,DWORD PTR es:[edi]
  41a22e:	xor    eax,DWORD PTR [edi]
  41a230:	fisubr WORD PTR [ecx+0x6fe47dee]
  41a236:	out    0xda,al
  41a238:	pop    eax
  41a239:	jp     0x41a29d
  41a23b:	mov    eax,ds:0x9677a61e
  41a240:	mov    ah,0xae
  41a242:	dec    ebp
  41a243:	push   edx
  41a244:	popa   
  41a245:	lods   eax,DWORD PTR ds:[esi]
  41a246:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a247:	mov    ch,0xc5
  41a249:	out    0xd6,al
  41a24b:	adc    eax,0x199b3c50
  41a250:	inc    edx
  41a251:	dec    edx
  41a252:	lods   al,BYTE PTR ds:[esi]
  41a253:	enter  0x93b3,0x5b
  41a257:	add    BYTE PTR [esi],dh
  41a259:	dec    ebx
  41a25a:	fwait
  41a25b:	popa   
  41a25c:	loop   0x41a292
  41a25e:	push   ecx
  41a25f:	shl    DWORD PTR [edi+0x79c385ae],cl
  41a265:	test   BYTE PTR [edx],ah
  41a267:	lea    eax,[ebp-0x7f]
  41a26a:	retf   
  41a26b:	aad    0xc4
  41a26d:	data16 sti 
  41a26f:	iret   
  41a270:	push   0x72f6a3eb
  41a275:	sbb    ebx,eax
  41a277:	sub    BYTE PTR [ebx+eax*2+0x4d],dh
  41a27b:	xchg   ebp,eax
  41a27c:	ins    DWORD PTR es:[edi],dx
  41a27d:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a27f:	dec    edx
  41a280:	lds    edx,FWORD PTR [ecx]
  41a282:	pop    es
  41a283:	xlat   BYTE PTR ds:[ebx]
  41a284:	mov    DWORD PTR [ecx+0x31c50ef1],edx
  41a28a:	retf   
  41a28b:	dec    esi
  41a28c:	mov    esi,0xbd85c92b
  41a291:	cmp    BYTE PTR [edi-0x2bfcb480],dh
  41a297:	inc    ebp
  41a298:	push   edi
  41a299:	mov    ds,WORD PTR ds:0xb2fbefec
  41a29f:	xchg   ah,dl
  41a2a1:	loopne 0x41a237
  41a2a3:	loope  0x41a317
  41a2a5:	xor    eax,0xaf838ad5
  41a2aa:	cmp    ah,BYTE PTR [eax-0x33]
  41a2ad:	pop    es
  41a2ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2af:	(bad)
  41a2b3:	pop    edi
  41a2b4:	ins    BYTE PTR es:[edi],dx
  41a2b5:	jmp    0x56bf:0x2911c803
  41a2bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2bd:	and    eax,DWORD PTR [edi-0x18]
  41a2c0:	sub    ecx,DWORD PTR [ecx+0x1be8ac45]
  41a2c6:	ror    DWORD PTR [ebx],cl
  41a2c8:	mov    edx,0xd2772f17
  41a2cd:	fld    st(0)
  41a2cf:	mov    edx,0x95695f71
  41a2d4:	test   bh,cl
  41a2d6:	jmp    0x7edd:0x459df580
  41a2dd:	mov    eax,ds:0xb2b72663
  41a2e2:	repz mov al,0x36
  41a2e5:	jno    0x41a2c4
  41a2e7:	out    0xb0,al
  41a2e9:	arpl   ax,sp
  41a2eb:	xor    bh,bl
  41a2ed:	pop    es
  41a2ee:	outs   dx,BYTE PTR ds:[esi]
  41a2ef:	aas    
  41a2f0:	out    dx,eax
  41a2f1:	mov    ecx,0x8bb081f0
  41a2f6:	fild   DWORD PTR [esi+0x5100407e]
  41a2fc:	imul   ebp,DWORD PTR [eax+0x208c24c1],0xfafad435
  41a306:	sbb    al,0x92
  41a308:	mul    esi
  41a30a:	cli    
  41a30b:	xchg   edx,eax
  41a30c:	pop    ss
  41a30d:	cmp    bl,BYTE PTR ds:0x22a2d840
  41a313:	push   cs
  41a314:	imul   ecx,DWORD PTR [edi-0x7f1ebdb4],0xffffffb2
  41a31b:	dec    ebp
  41a31c:	fsub   DWORD PTR [eax-0x368977ac]
  41a322:	add    esp,edx
  41a324:	out    dx,al
  41a325:	add    ah,BYTE PTR [ebx-0x19666d52]
  41a32b:	jo     0x41a2e3
  41a32d:	push   es
  41a32e:	push   ebp
  41a32f:	mov    ds:0x37ffacc2,eax
  41a334:	sbb    esp,0xffffffce
  41a337:	out    0x68,al
  41a339:	jb     0x41a3ad
  41a33b:	not    DWORD PTR [edi]
  41a33d:	xlat   BYTE PTR ds:[ebx]
  41a33e:	pop    ds
  41a33f:	or     BYTE PTR ds:0x62a91530,bh
  41a345:	dec    edx
  41a346:	out    0x25,al
  41a348:	retf   0x2dc7
  41a34b:	or     al,0xf6
  41a34d:	and    dh,BYTE PTR [edx-0x4c]
  41a350:	add    ah,al
  41a352:	push   dx
  41a354:	outs   dx,DWORD PTR ds:[esi]
  41a355:	sbb    ebx,DWORD PTR [ecx]
  41a357:	scas   eax,DWORD PTR es:[edi]
  41a358:	dec    edx
  41a359:	out    0x52,al
  41a35b:	or     eax,0x4e1d90a6
  41a360:	xchg   edi,eax
  41a361:	cmp    BYTE PTR [ebx+0x6b],cl
  41a364:	je     0x41a3aa
  41a366:	mov    dh,0x76
  41a368:	(bad)  
  41a369:	adc    cl,BYTE PTR [esi+eax*8-0x7d]
  41a36d:	push   0x703b0f0c
  41a372:	iret   
  41a373:	xchg   edi,eax
  41a374:	ret    
  41a375:	sahf   
  41a376:	imul   eax,DWORD PTR [edx+0x12806f4f],0xc18151a6
  41a380:	(bad)  
  41a382:	daa    
  41a383:	inc    ecx
  41a384:	fist   WORD PTR [ecx]
  41a386:	dec    eax
  41a387:	out    dx,eax
  41a388:	gs iret 
  41a38a:	outs   dx,DWORD PTR ds:[esi]
  41a38b:	mov    esp,0x5b57fb16
  41a390:	mov    dh,0x80
  41a392:	mov    ds:0x330a1f93,al
  41a397:	shr    BYTE PTR [edx-0x3f7a89f2],0x86
  41a39e:	sub    edx,DWORD PTR [ebx]
  41a3a0:	mul    BYTE PTR [ecx]
  41a3a2:	xchg   DWORD PTR [ebp-0x2b],esp
  41a3a5:	mov    ah,0xaa
  41a3a7:	aas    
  41a3a8:	ss fcomi st,st(2)
  41a3ab:	(bad)  
  41a3ac:	std    
  41a3ad:	je     0x41a367
  41a3af:	dec    ebp
  41a3b0:	mov    edi,0xa982b20e
  41a3b5:	pop    edi
  41a3b6:	test   esi,edx
  41a3b8:	cli    
  41a3b9:	sub    BYTE PTR [eax+0xa],al
  41a3bc:	sbb    eax,DWORD PTR [ebx+0x79508fe7]
  41a3c2:	push   es
  41a3c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3c5:	jge    0x41a3e8
  41a3c7:	cld    
  41a3c8:	xchg   ebx,eax
  41a3c9:	popa   
  41a3ca:	inc    ebp
  41a3cb:	sub    DWORD PTR [ebp-0x6e],esi
  41a3ce:	outs   dx,DWORD PTR ds:[esi]
  41a3cf:	and    eax,ebx
  41a3d1:	add    DWORD PTR [ebp-0xdd5e58e],ebx
  41a3d7:	idiv   BYTE PTR [ebp+0x59]
  41a3da:	data16 hlt 
  41a3dc:	xchg   edx,eax
  41a3dd:	mov    DWORD PTR [ebp-0x16d2363a],ecx
  41a3e3:	out    0x8a,al
  41a3e5:	inc    edx
  41a3e6:	mov    eax,ds:0xb27e8b2e
  41a3eb:	pop    edi
  41a3ec:	(bad)  
  41a3ed:	clc    
  41a3ee:	inc    ebx
  41a3ef:	inc    eax
  41a3f0:	mov    edx,0xdeb6cad1
  41a3f5:	out    0xd7,eax
  41a3f7:	fs pushf 
  41a3f9:	mov    ah,0x18
  41a3fb:	xchg   BYTE PTR ds:0xa29021f4,dh
  41a401:	(bad)  
  41a402:	jle    0x41a403
  41a404:	in     al,0xa8
  41a406:	mov    ah,0x40
  41a408:	ss call 0x60cc7dda
  41a40e:	add    cl,BYTE PTR [ebx+eax*2]
  41a411:	adc    DWORD PTR [edi+eax*8-0x346663ec],ebp
  41a418:	add    dh,BYTE PTR [edi]
  41a41a:	mov    dl,0x7e
  41a41c:	jl     0x41a48a
  41a41e:	das    
  41a41f:	jmp    0xfa4d:0x7311ba46
  41a426:	ret    0x479e
  41a429:	in     al,0x84
  41a42b:	xchg   ecx,esi
  41a42d:	scas   al,BYTE PTR es:[edi]
  41a42e:	mov    ch,0xe
  41a430:	push   0xc49e8959
  41a435:	mov    bl,0xe
  41a437:	dec    ecx
  41a438:	inc    dh
  41a43a:	aam    0x4d
  41a43c:	and    edx,eax
  41a43e:	aaa    
  41a43f:	loopne 0x41a3c4
  41a441:	hlt    
  41a442:	cmp    al,0xc3
  41a444:	cmp    eax,DWORD PTR [edx+edx*2-0x6472e7b3]
  41a44b:	sub    BYTE PTR [eax+edx*1+0x3b],dh
  41a44f:	mov    bh,0x42
  41a451:	xor    edx,DWORD PTR [ebp+0xffa0254]
  41a457:	iret   
  41a458:	xor    al,0x5d
  41a45a:	push   0x69112aaa
  41a45f:	leave  
  41a460:	push   eax
  41a461:	inc    ecx
  41a462:	and    DWORD PTR [edi],ebp
  41a464:	push   ss
  41a465:	cmp    al,0xbb
  41a467:	seto   dl
  41a46a:	cmp    WORD PTR [eax+ecx*2-0x14f5fe0b],sp
  41a472:	add    al,0x57
  41a474:	test   BYTE PTR [esi-0x7dafdb49],al
  41a47a:	xchg   ebx,eax
  41a47b:	(bad)  
  41a47c:	(bad)  
  41a47d:	leave  
  41a47e:	cld    
  41a47f:	mov    dh,0x96
  41a481:	ja     0x41a444
  41a483:	(bad)  
  41a484:	das    
  41a485:	push   0x22871165
  41a48a:	push   eax
  41a48b:	dec    edi
  41a48c:	dec    edx
  41a48d:	cmc    
  41a48e:	(bad)  [edi-0x13420bad]
  41a494:	mov    ?,ebx
  41a496:	mov    dh,0x9d
  41a498:	adc    BYTE PTR [esi],bl
  41a49a:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41a49c:	push   eax
  41a49d:	sbb    DWORD PTR [ebx+0x33],ebp
  41a4a0:	(bad)  
  41a4a1:	pop    edi
  41a4a2:	mov    bl,0x13
  41a4a4:	push   ecx
  41a4a5:	dec    edi
  41a4a6:	adc    edi,edx
  41a4a8:	xor    bl,0xfe
  41a4ab:	jmp    0x7783be9f
  41a4b0:	add    al,0xc0
  41a4b2:	ficomp DWORD PTR [ebx+0x21]
  41a4b5:	lock shl ebp,0xfc
  41a4b9:	and    eax,0xdc8c696f
  41a4bf:	push   eax
  41a4c0:	clc    
  41a4c1:	test   al,0x44
  41a4c3:	xchg   edi,eax
  41a4c4:	jno    0x41a44b
  41a4c6:	call   0xc76e:0x1d7127cc
  41a4cd:	in     eax,dx
  41a4ce:	mov    DWORD PTR [edi],ebx
  41a4d0:	sbb    eax,0x817897b7
  41a4d5:	je     0x41a4cb
  41a4d7:	or     BYTE PTR [ecx+0x4e],0x39
  41a4db:	xor    DWORD PTR ds:0x35670abb,0xfffffff2
  41a4e2:	mul    BYTE PTR [ecx]
  41a4e4:	or     DWORD PTR [edx],esi
  41a4e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4e7:	sbb    al,0xe7
  41a4e9:	pop    ecx
  41a4ea:	retf   
  41a4eb:	mov    al,ds:0x55ed594
  41a4f0:	and    eax,0xdd6ca7a2
  41a4f5:	or     al,0x96
  41a4f7:	xchg   ecx,eax
  41a4f8:	pushf  
  41a4f9:	sar    BYTE PTR [esi-0x2494dcc3],1
  41a4ff:	repz or eax,DWORD PTR [edx]
  41a502:	lahf   
  41a503:	cdq    
  41a504:	dec    edi
  41a505:	and    al,0x3c
  41a507:	repz leave 
  41a509:	or     al,0x69
  41a50b:	ret    
  41a50c:	lods   al,BYTE PTR ds:[esi]
  41a50d:	jo     0x41a54a
  41a50f:	out    dx,al
  41a510:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a511:	enter  0x4861,0xb0
  41a515:	dec    DWORD PTR [edi]
  41a517:	aam    0xc8
  41a519:	mov    gs,WORD PTR [ecx-0x3]
  41a51c:	or     eax,0x676164d
  41a521:	xchg   DWORD PTR [edx+0x69],esi
  41a524:	jae    0x41a4ec
  41a526:	addr16 loop 0x41a59d
  41a529:	test   eax,0xdfeff335
  41a52e:	and    al,0xb2
  41a530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a531:	dec    esi
  41a532:	mov    ch,BYTE PTR ds:0xdba4338b
  41a538:	out    dx,al
  41a539:	shr    BYTE PTR [ecx],cl
  41a53b:	in     eax,0x13
  41a53d:	adc    bl,BYTE PTR [ebp-0x658a95f1]
  41a543:	call   0x2da93cc9
  41a548:	(bad)
  41a54b:	int    0x7
  41a54d:	into   
  41a54e:	xchg   DWORD PTR [edi+0x66],esp
  41a551:	fmul   DWORD PTR [edi-0x49f997cb]
  41a557:	icebp  
  41a558:	fisubr DWORD PTR [ebp+0x27a6ff08]
  41a55e:	aaa    
  41a55f:	xchg   ecx,esi
  41a561:	mov    edi,0xd5eb968
  41a566:	add    DWORD PTR [esi+0xd7c5136],0x1f67fbfd
  41a570:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a571:	jmp    0x41a4f6
  41a573:	and    eax,0xac68245
  41a578:	xchg   edx,ecx
  41a57a:	dec    eax
  41a57b:	mov    edx,0xed3fa2d5
  41a580:	jl     0x41a5ac
  41a582:	mov    eax,0x84039815
  41a587:	ret    
  41a588:	xor    edx,DWORD PTR [edi+0x47e5f421]
  41a58e:	push   0xf673714
  41a593:	sub    esp,DWORD PTR [esi+0x7d]
  41a596:	sub    al,0x74
  41a598:	adc    eax,0xf2dc8c5
  41a59d:	test   eax,0x1d7c9a07
  41a5a2:	sub    ebx,eax
  41a5a4:	pop    ebp
  41a5a5:	jg     0x41a5ff
  41a5a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5a8:	xchg   al,dh
  41a5aa:	(bad)  
  41a5ab:	aam    0xed
  41a5ad:	adc    esp,ecx
  41a5af:	pop    edx
  41a5b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5b1:	scas   eax,DWORD PTR es:[edi]
  41a5b2:	popf   
  41a5b3:	test   BYTE PTR [eax+0x1],ch
  41a5b6:	shr    BYTE PTR [esi-0x65],1
  41a5b9:	xchg   BYTE PTR [esi],ah
  41a5bb:	rol    dl,cl
  41a5bd:	out    0xb9,al
  41a5bf:	shl    dh,1
  41a5c1:	mov    cl,0x41
  41a5c3:	pop    edx
  41a5c4:	dec    ebx
  41a5c5:	mov    cs,eax
  41a5c7:	sbb    al,0xb0
  41a5c9:	dec    edx
  41a5ca:	mov    esp,0xe7bb2591
  41a5cf:	and    cl,BYTE PTR [ebp+0x12]
  41a5d2:	mov    cl,0xe8
  41a5d4:	or     ebp,DWORD PTR [edi]
  41a5d6:	icebp  
  41a5d7:	and    eax,0x527f77c2
  41a5dc:	mov    ecx,0x625b9a11
  41a5e1:	out    0xe0,al
  41a5e3:	mov    ah,0xa1
  41a5e5:	cli    
  41a5e6:	cmc    
  41a5e7:	es popa 
  41a5e9:	stc    
  41a5ea:	or     DWORD PTR [eax+ebp*4+0x4],eax
  41a5ee:	mov    ch,0x42
  41a5f0:	and    al,0x99
  41a5f2:	inc    esi
  41a5f3:	call   0xf9c31a0d
  41a5f8:	imul   esi,DWORD PTR ds:0x2fdc20d0,0x61
  41a5ff:	lock xor al,0x74
  41a602:	repz iret 
  41a604:	mov    DWORD PTR [eax],ebp
  41a606:	iret   
  41a607:	push   cs
  41a608:	mov    dh,0xff
  41a60a:	rol    BYTE PTR gs:[edx],1
  41a60d:	xchg   edi,eax
  41a60e:	fs (bad) 
  41a610:	lahf   
  41a611:	mov    esp,0x9b77c84b
  41a616:	iret   
  41a617:	ja     0x41a615
  41a619:	xchg   edi,ebx
  41a61b:	je     0x41a5ce
  41a61d:	sar    BYTE PTR [edx],0x4c
  41a620:	sbb    eax,0xdb1b4b3
  41a625:	in     al,dx
  41a626:	test   BYTE PTR [edi-0x55b999e8],al
  41a62c:	adc    al,0xaf
  41a62e:	xchg   edi,eax
  41a62f:	outs   dx,DWORD PTR ds:[esi]
  41a630:	xchg   edi,eax
  41a631:	mov    ah,0x1c
  41a633:	sbb    al,0xa
  41a635:	ret    0xae5c
  41a638:	nop
  41a639:	cli    
  41a63a:	aas    
  41a63b:	or     esi,DWORD PTR [eax+0x51]
  41a63e:	aas    
  41a63f:	mov    dh,0xf2
  41a641:	pusha  
  41a642:	leave  
  41a643:	sub    al,0x84
  41a645:	inc    esi
  41a646:	push   eax
  41a647:	mov    ds:0xa0bd0daa,eax
  41a64c:	stos   DWORD PTR es:[edi],eax
  41a64d:	mov    al,ah
  41a64f:	fstp   DWORD PTR [edi-0x23]
  41a652:	mov    dh,0x9a
  41a654:	xor    al,0xe7
  41a656:	xor    al,0x46
  41a658:	push   es
  41a659:	adc    al,0x9a
  41a65b:	pop    ebp
  41a65c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a65d:	js     0x41a663
  41a65f:	test   DWORD PTR [ebx-0x3299cdda],ecx
  41a665:	xsha1  (bad)
  41a666:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a667:	int    0x37
  41a669:	cmp    bh,BYTE PTR [esi-0x16]
  41a66c:	scas   al,BYTE PTR es:[edi]
  41a66d:	pushf  
  41a66e:	dec    ebp
  41a66f:	(bad)  
  41a670:	ret    0xce8d
  41a673:	popa   
  41a674:	mov    eax,0xcab1d7cf
  41a679:	sub    eax,0x9a83a5c
  41a67e:	rcr    DWORD PTR fs:[esi+0x7f],1
  41a682:	adc    ch,BYTE PTR [ebp+0x6da544a5]
  41a688:	and    al,0x8
  41a68a:	stos   DWORD PTR es:[edi],eax
  41a68b:	mov    WORD PTR [esi-0x7],fs
  41a68e:	shr    DWORD PTR [edi],1
  41a690:	jecxz  0x41a64e
  41a692:	dec    edi
  41a693:	in     eax,0xa
  41a695:	mov    edx,0xf9ebbafd
  41a69a:	inc    edx
  41a69b:	mov    cl,0xd6
  41a69d:	adc    BYTE PTR [esi],dl
  41a69f:	icebp  
  41a6a0:	cmc    
  41a6a1:	jmp    0x494c:0xa100be09
  41a6a8:	jecxz  0x41a632
  41a6aa:	in     al,dx
  41a6ab:	fs into 
  41a6ad:	(bad)  
  41a6ae:	pop    ecx
  41a6af:	adc    DWORD PTR [ebx],esi
  41a6b1:	sbb    ecx,DWORD PTR [ecx+0x3b4b02f4]
  41a6b7:	pop    esi
  41a6b8:	repz jne 0x41a6f4
  41a6bb:	(bad)  
  41a6bc:	aaa    
  41a6bd:	sub    al,0x76
  41a6bf:	outs   dx,BYTE PTR ds:[esi]
  41a6c0:	cmp    bl,BYTE PTR [edx-0x68]
  41a6c3:	sar    DWORD PTR [eax-0x1ac2b9da],1
  41a6c9:	push   esp
  41a6ca:	xor    ebx,DWORD PTR [edi-0x5b]
  41a6cd:	xor    BYTE PTR [eax],dh
  41a6cf:	pop    edx
  41a6d0:	cmp    BYTE PTR [ecx],ch
  41a6d2:	fidiv  WORD PTR [ebx-0x14024162]
  41a6d8:	xchg   ebx,esp
  41a6da:	push   esi
  41a6db:	sub    dh,BYTE PTR [edi+0x9]
  41a6de:	lds    ebx,FWORD PTR [edx+0x43]
  41a6e1:	add    ebp,DWORD PTR [eax+0x7b]
  41a6e4:	cwde   
  41a6e5:	dec    ebp
  41a6e6:	(bad)  
  41a6e7:	cmp    al,0xb2
  41a6e9:	mov    esp,0xc242d705
  41a6ee:	sti    
  41a6ef:	popa   
  41a6f0:	repz add al,0xe0
  41a6f3:	lea    ecx,[ebp+eax*2+0x2]
  41a6f7:	pop    ss
  41a6f8:	xchg   ecx,eax
  41a6f9:	mov    ah,0x19
  41a6fb:	jl     0x41a6ac
  41a6fd:	dec    eax
  41a6fe:	mov    dl,0xd0
  41a700:	jno    0x41a74f
  41a702:	push   edi
  41a703:	shr    DWORD PTR [edx+ebx*1-0x59],1
  41a707:	aam    0x19
  41a709:	dec    eax
  41a70a:	mul    DWORD PTR [eax]
  41a70c:	jns    0x41a6e7
  41a70e:	adc    ebx,DWORD PTR [ecx-0x33]
  41a711:	jg     0x41a78c
  41a713:	scas   eax,DWORD PTR es:[edi]
  41a714:	cwde   
  41a715:	in     al,0xe7
  41a717:	adc    al,0x48
  41a719:	out    0x5d,eax
  41a71b:	mov    cl,0x29
  41a71d:	pop    ebx
  41a71e:	or     BYTE PTR [esi+0x503280ef],al
  41a724:	test   eax,0x3307afca
  41a729:	cld    
  41a72a:	xor    esi,DWORD PTR [ecx]
  41a72c:	stos   DWORD PTR es:[edi],eax
  41a72d:	out    dx,eax
  41a72e:	and    eax,0xb0a6f97a
  41a733:	scas   al,BYTE PTR es:[edi]
  41a734:	xor    bl,dl
  41a736:	daa    
  41a737:	push   ecx
  41a738:	xchg   ebx,eax
  41a739:	push   es
  41a73a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a73b:	or     ebx,ecx
  41a73d:	fscale 
  41a73f:	leave  
  41a740:	xor    eax,0xde9d31c1
  41a745:	stos   DWORD PTR es:[edi],eax
  41a746:	dec    esi
  41a747:	outs   dx,DWORD PTR ds:[esi]
  41a748:	daa    
  41a749:	(bad)  
  41a74b:	mov    ecx,0xf6f9756e
  41a750:	ss test eax,0x12586fd5
  41a756:	sub    al,0xba
  41a758:	in     eax,0xd
  41a75a:	pop    esi
  41a75b:	cmp    BYTE PTR [esi+0x1a34f9a2],ah
  41a761:	out    dx,eax
  41a762:	rcr    DWORD PTR [esi-0x22],0xe3
  41a766:	sub    al,BYTE PTR [edx-0x2e]
  41a769:	test   eax,0xee409af1
  41a76e:	cli    
  41a76f:	xor    ch,BYTE PTR [edx]
  41a771:	mov    bh,0xec
  41a773:	aaa    
  41a774:	push   0x28
  41a776:	lods   eax,DWORD PTR ds:[esi]
  41a777:	stos   BYTE PTR es:[edi],al
  41a778:	fmul   QWORD PTR [edx+0x4]
  41a77b:	enter  0x2d3c,0xb0
  41a77f:	lds    edx,FWORD PTR [ebp+0x374cf67d]
  41a785:	rcr    DWORD PTR [ebp-0x75],1
  41a788:	mov    ebx,0x92843d11
  41a78d:	push   edx
  41a78e:	stc    
  41a78f:	(bad)  
  41a790:	mov    dh,0x74
  41a792:	das    
  41a793:	sbb    al,0xe7
  41a795:	ins    BYTE PTR es:[edi],dx
  41a796:	jb     0x41a73c
  41a798:	gs or  eax,0x26adc229
  41a79e:	jle    0x41a747
  41a7a0:	mov    eax,0xbf29871a
  41a7a5:	or     al,0xe8
  41a7a7:	cmp    DWORD PTR [ecx],ecx
  41a7a9:	dec    ecx
  41a7aa:	sub    BYTE PTR [ebx-0x1d],0x1e
  41a7ae:	add    ah,BYTE PTR [edi+esi*1]
  41a7b1:	lods   al,BYTE PTR ds:[esi]
  41a7b2:	stc    
  41a7b3:	imul   edx,DWORD PTR [esi+edx*8],0xd11d46a0
  41a7ba:	mov    dh,0xb0
  41a7bc:	stos   BYTE PTR es:[edi],al
  41a7bd:	aad    0x7d
  41a7bf:	mov    edi,DWORD PTR [eax+0x3e]
  41a7c2:	sub    al,0x7a
  41a7c4:	push   eax
  41a7c5:	call   0xa3ac864e
  41a7ca:	lods   al,BYTE PTR ds:[esi]
  41a7cb:	call   0xb040:0xeb0f7792
  41a7d2:	jae    0x41a7f1
  41a7d4:	inc    esi
  41a7d5:	push   esi
  41a7d6:	(bad)  
  41a7d8:	push   ebx
  41a7d9:	ss jmp 0x4f33e180
  41a7df:	and    DWORD PTR [edx-0x76b40d24],ebp
  41a7e5:	mov    cl,0x57
  41a7e7:	shl    BYTE PTR [edi],0xba
  41a7ea:	mov    eax,ds:0xe49739f2
  41a7ef:	xlat   BYTE PTR ds:[ebx]
  41a7f0:	add    bl,BYTE PTR [edx]
  41a7f2:	jp     0x41a820
  41a7f4:	pusha  
  41a7f5:	inc    ebx
  41a7f6:	cwde   
  41a7f7:	fst    DWORD PTR [esi]
  41a7f9:	addr16 iret 
  41a7fb:	add    eax,0xd5780c05
  41a800:	jmp    0x41a7b5
  41a802:	loopne 0x41a7a6
  41a804:	int    0x94
  41a806:	in     eax,dx
  41a807:	jns    0x41a7d1
  41a809:	sbb    al,0xc7
  41a80b:	and    edx,DWORD PTR [edi-0x2a]
  41a80e:	inc    esp
  41a80f:	aas    
  41a810:	(bad)  
  41a811:	retf   
  41a812:	loope  0x41a7e6
  41a814:	pop    esi
  41a815:	mov    edi,0x4700a7e2
  41a81a:	cmp    esp,DWORD PTR ds:0xd5eb706b
  41a820:	loopne 0x41a7e9
  41a822:	mov    bl,0xdb
  41a824:	test   al,0x42
  41a826:	mov    cl,0x68
  41a828:	jbe    0x41a882
  41a82a:	or     al,0x16
  41a82c:	xchg   ecx,eax
  41a82d:	fs mov al,0x75
  41a830:	rcl    cl,cl
  41a832:	mov    ds:0x8020ec90,eax
  41a837:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a838:	mov    BYTE PTR [ebx+0x393525ab],bh
  41a83e:	push   edi
  41a83f:	cmp    BYTE PTR [ebp-0x2e5af6a6],0xa2
  41a846:	aam    0x3f
  41a848:	iret   
  41a849:	add    BYTE PTR [esi-0x26e9dfbc],al
  41a84f:	mov    al,0x81
  41a851:	ror    BYTE PTR [esi+0xa],0xe
  41a855:	mov    ds,edx
  41a857:	dec    edi
  41a858:	das    
  41a859:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a85a:	popf   
  41a85b:	xlat   BYTE PTR ds:[ebx]
  41a85c:	loop   0x41a804
  41a85e:	mov    ds:0x40eda20c,eax
  41a863:	sub    al,BYTE PTR [edi+0x66]
  41a866:	aam    0xf4
  41a868:	out    dx,al
  41a869:	or     ecx,DWORD PTR [eax+0x70]
  41a86c:	sbb    al,0xdc
  41a86e:	cmp    DWORD PTR [ebp+0xad916b2],edi
  41a874:	or     eax,0x802a07b4
  41a879:	push   edi
  41a87a:	in     al,0x9e
  41a87c:	mov    dl,0x31
  41a87e:	addr16 stc 
  41a880:	aad    0x8d
  41a882:	ret    
  41a883:	jns    0x41a82b
  41a885:	hlt    
  41a886:	and    ah,0x2d
  41a889:	sub    al,0xac
  41a88b:	adc    eax,0x1ce98cb0
  41a890:	adc    eax,0xa5c67893
  41a895:	les    edi,FWORD PTR [eax-0xe81e9c9]
  41a89b:	(bad)  
  41a89c:	aas    
  41a89d:	push   edx
  41a89e:	mov    BYTE PTR [edi],dl
  41a8a0:	add    eax,0x9ed889ef
  41a8a5:	mov    ebx,edi
  41a8a7:	data16 fwait
  41a8a9:	adc    eax,0xe003547d
  41a8ae:	jl     0x41a8fc
  41a8b0:	and    esp,DWORD PTR [eax+esi*2-0x13]
  41a8b4:	aad    0x52
  41a8b6:	gs or  eax,edi
  41a8b9:	popa   
  41a8ba:	out    0xff,al
  41a8bc:	cmp    DWORD PTR [edx-0x59553541],edi
  41a8c2:	loopne 0x41a900
  41a8c4:	xor    edx,DWORD PTR [ebx-0x8457159]
  41a8ca:	call   0x1e02:0x50805eb5
  41a8d1:	xlat   BYTE PTR ds:[ebx]
  41a8d2:	sbb    bh,ch
  41a8d4:	and    ah,BYTE PTR [edi+0x8043fe0]
  41a8da:	test   DWORD PTR [ebx+ebp*4-0x5c],ebx
  41a8de:	aaa    
  41a8df:	xchg   BYTE PTR [edi+0x68],al
  41a8e2:	push   ebp
  41a8e3:	xor    esp,DWORD PTR [eax]
  41a8e5:	retf   0x125b
  41a8e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8e9:	jb     0x41a8f2
  41a8eb:	and    al,0x32
  41a8ed:	and    eax,0x4181a804
  41a8f2:	xchg   ecx,ebp
  41a8f4:	loopne 0x41a8bb
  41a8f6:	aad    0x9d
  41a8f8:	jp     0x41a8c5
  41a8fa:	(bad)  
  41a8fb:	enter  0xdfea,0x9
  41a8ff:	adc    DWORD PTR [ecx],esp
  41a901:	cmp    eax,0x866b07aa
  41a906:	loope  0x41a8ea
  41a908:	enter  0xffbf,0x2d
  41a90c:	pusha  
  41a90d:	(bad)  
  41a90e:	pusha  
  41a90f:	adc    BYTE PTR [ecx+0x67],cl
  41a912:	cli    
  41a913:	push   cx
  41a915:	(bad)  
  41a916:	out    dx,eax
  41a917:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a918:	mov    ecx,0x1faeea14
  41a91d:	stos   DWORD PTR es:[edi],eax
  41a91e:	ins    BYTE PTR es:[edi],dx
  41a91f:	fadd   QWORD PTR [ebp-0x14]
  41a922:	sbb    cl,al
  41a924:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a925:	in     al,dx
  41a926:	imul   esp,DWORD PTR [esi-0x37],0x53
  41a92a:	out    0x63,al
  41a92c:	dec    ecx
  41a92d:	push   DWORD PTR [edx-0x68]
  41a930:	mov    esp,DWORD PTR [esi]
  41a932:	stos   BYTE PTR es:[edi],al
  41a933:	loop   0x41a9ae
  41a935:	push   ds
  41a936:	pop    edi
  41a937:	push   eax
  41a938:	nop
  41a939:	and    eax,0xc32b916c
  41a93e:	ret    
  41a93f:	dec    ebp
  41a940:	push   eax
  41a941:	push   ds
  41a942:	xchg   esp,ebp
  41a944:	pop    ds
  41a945:	inc    ecx
  41a946:	mov    dl,0xf0
  41a948:	sub    ch,BYTE PTR ds:0x46d1fba7
  41a94e:	mov    edi,0x68e4d2a9
  41a953:	clc    
  41a954:	adc    esp,edi
  41a956:	aaa    
  41a957:	cmp    ebp,edi
  41a959:	mov    bh,0x20
  41a95b:	cmp    bl,BYTE PTR [edx]
  41a95d:	nop
  41a95e:	add    ecx,esi
  41a960:	scas   eax,DWORD PTR es:[edi]
  41a961:	mov    ebx,0x89859ff5
  41a966:	cmp    al,0xb9
  41a968:	ud0    edx,DWORD PTR ds:0xd9ac9fe9
  41a96f:	jno    0x41a915
  41a971:	and    al,0x13
  41a973:	dec    edx
  41a974:	add    DWORD PTR [edx+esi*1],edx
  41a977:	(bad)  
  41a978:	push   edx
  41a979:	mov    esi,0x6a9d197e
  41a97e:	sbb    al,0xbb
  41a980:	cmp    esp,DWORD PTR [esi-0x73]
  41a983:	sbb    cl,bh
  41a985:	xchg   edi,eax
  41a986:	rcr    BYTE PTR [edi+0x48],1
  41a989:	or     DWORD PTR [edi-0x6],ebp
  41a98c:	dec    esp
  41a98d:	adc    eax,DWORD PTR [edi+0x4a]
  41a990:	in     al,0x99
  41a992:	icebp  
  41a993:	aam    0x5e
  41a995:	mov    eax,0x91e690a8
  41a99a:	jecxz  0x41a96e
  41a99c:	ret    0xdc6f
  41a99f:	gs popa 
  41a9a1:	mov    ch,0xf5
  41a9a3:	adc    al,0xf3
  41a9a5:	into   
  41a9a6:	sub    eax,0x1823b9ed
  41a9ab:	retf   
  41a9ac:	iret   
  41a9ad:	cli    
  41a9ae:	ret    
  41a9af:	mov    ch,0xc2
  41a9b1:	nop
  41a9b2:	(bad)
  41a9b5:	clc    
  41a9b6:	and    DWORD PTR [edx+0x6e6fccd7],esi
  41a9bc:	sub    ecx,DWORD PTR [ecx]
  41a9be:	int3   
  41a9bf:	fmulp  st(5),st
  41a9c1:	push   ebp
  41a9c2:	sub    eax,0x7f82c8f
  41a9c7:	mov    esi,0x7334cc73
  41a9cc:	arpl   WORD PTR [ecx+esi*4],dx
  41a9cf:	add    bl,al
  41a9d1:	or     ah,BYTE PTR [edi-0xbf55930]
  41a9d7:	in     eax,0x60
  41a9d9:	jmp    FWORD PTR [ebx+0x17]
  41a9dc:	imul   eax,esi,0xede9d78f
  41a9e2:	lds    edi,FWORD PTR [eax-0x19]
  41a9e5:	fimul  WORD PTR [eax+0x34]
  41a9e8:	mov    bh,0x99
  41a9ea:	or     eax,0xe9734da6
  41a9ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9f0:	inc    esi
  41a9f1:	jbe    0x41aa6b
  41a9f3:	stos   DWORD PTR es:[edi],eax
  41a9f4:	pop    esp
  41a9f5:	mov    WORD PTR [edx+ebp*1-0x2a],ds
  41a9f9:	and    edx,DWORD PTR [edi+ecx*1]
  41a9fc:	ds inc ecx
  41a9fe:	xor    BYTE PTR [eax+0x39c4521b],dl
  41aa04:	ds arpl di,cx
  41aa07:	and    DWORD PTR [ebx-0x79],ebp
  41aa0a:	sub    BYTE PTR [ebp-0x5d],ch
  41aa0d:	adc    eax,0x509a3e2b
  41aa12:	(bad)  
  41aa14:	repz push ecx
  41aa16:	xlat   BYTE PTR ds:[ebx]
  41aa17:	sub    eax,0xc7c2843d
  41aa1c:	iret   
  41aa1d:	ret    0xab3d
  41aa20:	scas   eax,DWORD PTR es:[edi]
  41aa21:	(bad)  
  41aa23:	je     0x41a9d4
  41aa25:	dec    eax
  41aa26:	sahf   
  41aa27:	cdq    
  41aa28:	jmp    0x31754dba
  41aa2d:	pop    ecx
  41aa2e:	mov    esi,0x8935a0a
  41aa33:	into   
  41aa34:	add    eax,0x604ff617
  41aa39:	pop    ecx
  41aa3a:	or     ecx,DWORD PTR [ebp-0x29eb1459]
  41aa40:	ret    0xdf49
  41aa43:	data16 add al,0xc8
  41aa46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa47:	push   esp
  41aa48:	addr16 jl 0x41aa4d
  41aa4b:	adc    ebx,DWORD PTR [ecx+0x5adee2f4]
  41aa51:	fdivr  DWORD PTR [ebx+ecx*4]
  41aa54:	stos   DWORD PTR es:[edi],eax
  41aa55:	aas    
  41aa56:	fwait
  41aa57:	mov    esi,0x62d5fa3f
  41aa5c:	lods   al,BYTE PTR ds:[esi]
  41aa5d:	dec    edi
  41aa5e:	jmp    0x46bc57d0
  41aa63:	retf   
  41aa64:	imul   ebx,DWORD PTR [ebx],0x22dfb79e
  41aa6a:	pop    ecx
  41aa6b:	xchg   esi,eax
  41aa6c:	cmp    eax,0xdc84b4fd
  41aa71:	adc    DWORD PTR [esi-0x78dff94a],0xffffff96
  41aa78:	xor    al,0xa2
  41aa7a:	hlt    
  41aa7b:	mov    esi,DWORD PTR [esi-0x554684e9]
  41aa81:	inc    esp
  41aa82:	mov    bl,0x4d
  41aa84:	mov    edx,DWORD PTR [edx-0x17e130a8]
  41aa8a:	jle    0x41aa4c
  41aa8c:	inc    edx
  41aa8d:	mov    eax,ds:0xf8afa7c4
  41aa92:	jno    0x41ab0c
  41aa94:	push   esi
  41aa95:	popf   
  41aa96:	fsubr  DWORD PTR [eax-0x1d]
  41aa99:	adc    dl,dh
  41aa9b:	out    0xf2,al
  41aa9d:	pop    edi
  41aa9e:	adc    DWORD PTR [esi+0x26],ebx
  41aaa1:	cdq    
  41aaa2:	xchg   ebx,eax
  41aaa3:	mov    ecx,edx
  41aaa5:	push   0x1e0da0fe
  41aaaa:	fild   DWORD PTR [edx+0x30]
  41aaad:	sbb    esp,DWORD PTR [ebx-0x14]
  41aab0:	call   0x49c39438
  41aab5:	std    
  41aab6:	mov    ds:0x601b9b7f,eax
  41aabb:	adc    al,0xd7
  41aabd:	push   esi
  41aabe:	fwait
  41aabf:	add    BYTE PTR [ebx-0x62f0f503],0x68
  41aac6:	out    dx,al
  41aac7:	xchg   BYTE PTR [ebp+0xa],ah
  41aaca:	xor    dl,ch
  41aacc:	clc    
  41aacd:	xchg   esp,eax
  41aace:	push   ebx
  41aacf:	xor    BYTE PTR [ebx+0x69],dl
  41aad2:	mov    ebp,0x354ef974
  41aad7:	das    
  41aad8:	in     al,dx
  41aad9:	in     al,0x28
  41aadb:	jns    0x41ab3e
  41aadd:	pop    esp
  41aade:	dec    ebx
  41aadf:	lods   al,BYTE PTR ds:[esi]
  41aae0:	mov    bh,0xd6
  41aae2:	sub    edi,DWORD PTR [ecx-0x5b7d980]
  41aae8:	adc    al,BYTE PTR [ecx-0x47]
  41aaeb:	push   cs
  41aaec:	push   ebx
  41aaed:	repz test esp,0x9e619eb5
  41aaf4:	cmc    
  41aaf5:	mov    dh,0x6b
  41aaf7:	das    
  41aaf8:	and    eax,0xbc734c4
  41aafd:	xchg   DWORD PTR [ebp-0x8],ebp
  41ab00:	repz sub eax,0x1f308327
  41ab06:	stos   BYTE PTR es:[edi],al
  41ab07:	cmp    al,0x7c
  41ab09:	push   ecx
  41ab0a:	cmp    bh,BYTE PTR [ebp+ebp*8-0x17]
  41ab0e:	mov    esi,0xf530c417
  41ab13:	jmp    0xf84f:0xf8ba729d
  41ab1a:	in     al,dx
  41ab1b:	inc    edx
  41ab1c:	retf   
  41ab1d:	push   edx
  41ab1e:	call   0xd30eab67
  41ab23:	push   cs
  41ab24:	and    ebx,ebx
  41ab26:	bound  eax,QWORD PTR [edi]
  41ab28:	data16 cmp ah,BYTE PTR [edx]
  41ab2b:	scas   al,BYTE PTR es:[edi]
  41ab2c:	jp     0x41aaed
  41ab2e:	int3   
  41ab2f:	cmp    DWORD PTR [ebx],esi
  41ab31:	in     al,0x3b
  41ab33:	sbb    bl,BYTE PTR [ebx]
  41ab35:	xor    ah,0xbb
  41ab38:	imul   esi,esi,0xfffffffe
  41ab3b:	dec    eax
  41ab3c:	test   al,0x54
  41ab3e:	mov    bl,0x85
  41ab40:	pushf  
  41ab41:	inc    ebp
  41ab42:	sbb    dl,BYTE PTR [edi]
  41ab44:	lahf   
  41ab45:	sub    eax,0xa72bb298
  41ab4a:	iret   
  41ab4b:	jno    0x41aafa
  41ab4d:	jns    0x41ab5f
  41ab4f:	add    edi,DWORD PTR [edi]
  41ab51:	test   eax,0xa7b63dcb
  41ab56:	dec    ebx
  41ab57:	in     eax,dx
  41ab58:	jle    0x41abd0
  41ab5a:	lods   al,BYTE PTR ds:[esi]
  41ab5b:	jae    0x41abd8
  41ab5d:	out    0x3b,eax
  41ab5f:	xchg   edx,eax
  41ab60:	xchg   esi,eax
  41ab61:	push   ecx
  41ab62:	fnsave [ecx]
  41ab64:	scas   al,BYTE PTR es:[edi]
  41ab65:	pop    edi
  41ab66:	add    BYTE PTR [ebp-0x79],ah
  41ab69:	fnstsw WORD PTR ds:0x872cf388
  41ab6f:	pop    edi
  41ab70:	mov    al,0xcb
  41ab72:	shr    DWORD PTR [ebp-0x30aefde4],0xe0
  41ab79:	mov    WORD PTR [esi],ss
  41ab7b:	stc    
  41ab7c:	ins    BYTE PTR es:[edi],dx
  41ab7d:	inc    esi
  41ab7e:	dec    DWORD PTR [edi+0x2c]
  41ab81:	fld    QWORD PTR [esi-0x52]
  41ab84:	inc    ebp
  41ab85:	aam    0xaa
  41ab87:	add    edx,DWORD PTR [eax+0x3f]
  41ab8a:	adc    DWORD PTR [esi-0x57c04e3d],0x21
  41ab91:	in     al,0xca
  41ab93:	mov    eax,0xc15b6d2b
  41ab98:	(bad)  
  41ab99:	adc    ch,BYTE PTR [eax-0x6adcbe58]
  41ab9f:	aaa    
  41aba0:	mov    al,0x4f
  41aba2:	ret    
  41aba3:	sbb    al,0x5a
  41aba5:	nop/reserved BYTE PTR ds:0xc7790ec7
  41abac:	xor    BYTE PTR [esp+ecx*8],cl
  41abaf:	(bad)  
  41abb0:	push   ds
  41abb1:	iret   
  41abb2:	cmp    esi,DWORD PTR [eax]
  41abb4:	lahf   
  41abb5:	daa    
  41abb6:	femms  
  41abb8:	inc    ecx
  41abb9:	mov    dl,0x13
  41abbb:	push   es
  41abbc:	and    edi,DWORD PTR [ecx-0x3cd9926c]
  41abc2:	pusha  
  41abc3:	test   cl,0xba
  41abc6:	inc    edx
  41abc7:	aas    
  41abc8:	pushf  
  41abc9:	enter  0x3f44,0x1
  41abcd:	inc    ecx
  41abce:	pop    ebx
  41abcf:	xchg   esp,eax
  41abd0:	sbb    esi,DWORD PTR gs:[edx-0x727437a5]
  41abd7:	lahf   
  41abd8:	sahf   
  41abd9:	rcr    DWORD PTR [eax+0x6d],cl
  41abdc:	push   cs
  41abdd:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41abdf:	enter  0xd83c,0x74
  41abe3:	inc    esi
  41abe4:	mov    BYTE PTR [edi-0x92727b8],ah
  41abea:	mov    DWORD PTR [edx-0x70],edx
  41abed:	arpl   WORD PTR [edi],di
  41abef:	mov    bl,0xbf
  41abf1:	sbb    BYTE PTR [edi-0x12],al
  41abf4:	xchg   esi,eax
  41abf5:	ja     0x41abac
  41abf7:	jae    0x41abcc
  41abf9:	add    eax,0xb38fe07b
  41abfe:	ficomp WORD PTR [eax]
  41ac00:	popa   
  41ac01:	mov    eax,0x1b6e8520
  41ac06:	pop    edx
  41ac07:	popa   
  41ac08:	xchg   edx,eax
  41ac09:	cmp    DWORD PTR [edi+0x7f702ef4],ebp
  41ac0f:	mov    cs,WORD PTR [edi+0x3a]
  41ac12:	sub    BYTE PTR [edx-0x1aa51fb4],bl
  41ac18:	hlt    
  41ac19:	and    eax,0x6dabe0f3
  41ac1e:	xchg   esp,eax
  41ac1f:	jne    0x41abdb
  41ac21:	cmp    al,0x28
  41ac23:	test   al,0x57
  41ac25:	sub    al,BYTE PTR ds:[eax-0x71]
  41ac29:	sti    
  41ac2a:	inc    ebp
  41ac2b:	arpl   WORD PTR [edx+0x66cf6400],bx
  41ac31:	push   es
  41ac32:	push   0x56
  41ac34:	adc    ecx,ebp
  41ac36:	jecxz  0x41ac91
  41ac38:	mov    al,0xfd
  41ac3a:	retf   0x4c9f
  41ac3d:	sub    al,0xb9
  41ac3f:	out    dx,al
  41ac40:	call   0x37de:0x317fb1b
  41ac47:	pop    ebp
  41ac48:	jno    0x41ac48
  41ac4a:	adc    eax,0x74d19212
  41ac4f:	jl     0x41acb5
  41ac51:	and    bh,BYTE PTR [ebp+0x1e0aa95]
  41ac57:	cmp    DWORD PTR [edx-0x1b5ca93e],ebp
  41ac5d:	and    bl,BYTE PTR [ebx]
  41ac5f:	cmp    DWORD PTR [edx+0x1ef98830],edx
  41ac65:	jmp    0xcb076a76
  41ac6a:	enter  0x256d,0x6b
  41ac6e:	pop    esp
  41ac6f:	pop    eax
  41ac70:	lods   eax,DWORD PTR ds:[esi]
  41ac71:	loope  0x41acbe
  41ac73:	xchg   esi,eax
  41ac74:	test   eax,ebx
  41ac76:	sbb    eax,DWORD PTR [eax]
  41ac78:	jne    0x41ac8b
  41ac7a:	jle    0x41acf9
  41ac7c:	pop    ds
  41ac7d:	imul   ecx,DWORD PTR [ecx+0x79b8b78a],0xfffffff5
  41ac84:	add    DWORD PTR [esi+ecx*2+0xd7a1a8d],ebp
  41ac8b:	or     BYTE PTR [edx-0xeef9257],0x22
  41ac92:	mov    ebx,0xfb348641
  41ac97:	ins    BYTE PTR es:[edi],dx
  41ac98:	aaa    
  41ac99:	stc    
  41ac9a:	inc    edi
  41ac9b:	and    eax,0x40297fc8
  41aca0:	inc    ecx
  41aca1:	push   esi
  41aca2:	lahf   
  41aca3:	lds    ebx,FWORD PTR cs:[ebx+0x3]
  41aca7:	imul   edx,DWORD PTR [edi],0xffffffe0
  41acaa:	not    BYTE PTR [edx+0x4f]
  41acad:	mov    dl,0x33
  41acaf:	push   ebx
  41acb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acb1:	sti    
  41acb2:	jg     0x41ac81
  41acb4:	mov    dl,0x9d
  41acb6:	sbb    BYTE PTR [esi+0x4fcae807],al
  41acbc:	stos   DWORD PTR es:[edi],eax
  41acbd:	push   edx
  41acbe:	inc    esi
  41acbf:	in     al,dx
  41acc0:	push   ss
  41acc1:	(bad)  
  41acc2:	or     bh,BYTE PTR [edi]
  41acc4:	hlt    
  41acc5:	clc    
  41acc6:	jle    0x41ace5
  41acc8:	inc    ebx
  41acc9:	or     eax,0xf61c58d6
  41acce:	cmp    dl,ch
  41acd0:	mov    DWORD PTR [edi+0x4e1f0f17],edx
  41acd6:	push   ds
  41acd7:	mov    edi,0x4fdcc3c2
  41acdc:	or     al,BYTE PTR [ecx-0x439c4b38]
  41ace2:	out    0x5,eax
  41ace4:	pop    esi
  41ace5:	adc    al,0x18
  41ace7:	fisub  DWORD PTR [ebp+0x6d8da2a4]
  41aced:	pop    es
  41acee:	test   al,0xdb
  41acf0:	out    dx,eax
  41acf1:	cmp    al,0x5d
  41acf3:	push   0x19
  41acf5:	test   eax,0x9de5696e
  41acfa:	in     al,dx
  41acfb:	dec    ecx
  41acfc:	jae    0x41ac82
  41acfe:	xlat   BYTE PTR ds:[ebx]
  41acff:	int3   
  41ad00:	xchg   ebp,eax
  41ad01:	and    al,0xe0
  41ad03:	dec    edx
  41ad04:	mov    ds:0xc452552e,eax
  41ad09:	or     ch,bl
  41ad0b:	fs js  0x41ad6b
  41ad0e:	ins    DWORD PTR es:[edi],dx
  41ad0f:	push   edx
  41ad10:	and    ah,BYTE PTR [esi+0x62]
  41ad13:	aam    0x47
  41ad15:	lea    esp,[edx+0x8a4263d]
  41ad1b:	nop
  41ad1c:	jne    0x41ad8a
  41ad1e:	lods   eax,DWORD PTR ds:[esi]
  41ad1f:	and    eax,0x963f8dd2
  41ad24:	mov    ds:0x8396b998,al
  41ad29:	mov    ebx,DWORD PTR [esi+0x6fc8b4a7]
  41ad2f:	mov    bh,0xd2
  41ad31:	jmp    0xeb334066
  41ad36:	adc    esi,DWORD PTR [ebp-0x22b1568c]
  41ad3c:	ret    
  41ad3d:	dec    eax
  41ad3e:	mov    ch,0x57
  41ad40:	and    al,0x9d
  41ad42:	adc    BYTE PTR [edi+0x12],bl
  41ad45:	sbb    DWORD PTR [eax-0x1959b5be],eax
  41ad4b:	pop    eax
  41ad4c:	add    BYTE PTR [esi],dl
  41ad4e:	popa   
  41ad4f:	mov    al,ds:0x5e29128b
  41ad54:	mov    dl,0xbb
  41ad56:	cmp    bl,BYTE PTR [esi+0x48be7c54]
  41ad5c:	(bad)  
  41ad5d:	int    0x62
  41ad5f:	adc    eax,0xad3478ec
  41ad64:	dec    ebp
  41ad65:	mov    ds:0x80d8f4c6,eax
  41ad6a:	xchg   ebx,eax
  41ad6b:	mov    edx,0xf2c2da6
  41ad70:	ror    edx,1
  41ad72:	push   ss
  41ad73:	dec    esp
  41ad74:	in     eax,dx
  41ad75:	mov    dl,0x5e
  41ad77:	sub    BYTE PTR [ebx+esi*8-0x29962b4f],bh
  41ad7e:	jns    0x41ad6c
  41ad80:	jne    0x41adbb
  41ad82:	mov    WORD PTR [ebp+0x6b],ss
  41ad85:	or     esp,DWORD PTR [esi+0x17097d91]
  41ad8b:	test   eax,0x37b7cb49
  41ad90:	cwde   
  41ad91:	fst    QWORD PTR [eax]
  41ad93:	mov    bh,0x3c
  41ad95:	jns    0x41adb7
  41ad97:	aas    
  41ad98:	sbb    edx,esp
  41ad9a:	push   eax
  41ad9b:	mov    cl,0xae
  41ad9d:	jne    0x41ad1f
  41ad9f:	js     0x41add4
  41ada1:	mov    esp,0xd57dad85
  41ada6:	push   esp
  41ada7:	xor    eax,DWORD PTR [esi-0x6c]
  41adaa:	and    DWORD PTR [esi-0x2c38cd82],esp
  41adb0:	inc    eax
  41adb1:	sti    
  41adb2:	into   
  41adb3:	mov    eax,0xb88b6c3b
  41adb8:	addr16 nop
  41adba:	adc    ecx,esp
  41adbc:	inc    ebp
  41adbd:	gs jmp 0xbef52513
  41adc3:	add    BYTE PTR [ebx],bh
  41adc5:	sbb    BYTE PTR fs:[edx+0x79f33548],ch
  41adcc:	jg     0x41ad9e
  41adce:	pop    edi
  41adcf:	adc    eax,DWORD PTR [eax]
  41add1:	xchg   edi,eax
  41add2:	daa    
  41add3:	jmp    0x41ae0e
  41add5:	mov    dl,0xb1
  41add7:	and    al,0x64
  41add9:	adc    ecx,DWORD PTR [ecx+0x49dcf153]
  41addf:	xchg   esi,eax
  41ade0:	mov    ds:0x3a1c9475,eax
  41ade5:	push   ds
  41ade6:	popf   
  41ade7:	dec    edi
  41ade8:	mov    ah,0xa2
  41adea:	lahf   
  41adeb:	ret    0x124a
  41adee:	cs dec ebp
  41adf0:	jmp    0x41ae54
  41adf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adf3:	fcmovnu st,st(2)
  41adf5:	or     BYTE PTR [ecx+0x7da480a8],cl
  41adfb:	int    0xac
  41adfd:	hlt    
  41adfe:	shr    BYTE PTR [edx+eax*8+0x4a],1
  41ae02:	xchg   ebp,eax
  41ae03:	jns    0x41ae44
  41ae05:	or     al,0x26
  41ae07:	mov    dh,0xea
  41ae09:	aaa    
  41ae0a:	cmp    BYTE PTR [eax+ecx*8],0x51
  41ae0e:	push   ds
  41ae0f:	pop    ds
  41ae10:	ss retf 0x6930
  41ae14:	(bad)  
  41ae15:	hlt    
  41ae16:	xor    dl,ah
  41ae18:	std    
  41ae19:	jnp    0x41adbd
  41ae1b:	push   ebp
  41ae1c:	dec    eax
  41ae1d:	sub    esi,DWORD PTR [edi+edx*4+0x6e]
  41ae21:	loop   0x41adef
  41ae23:	mov    ebx,DWORD PTR [ecx+0x263b78d3]
  41ae29:	cmp    bh,BYTE PTR [edi-0x1a92bb24]
  41ae2f:	push   edx
  41ae30:	or     al,BYTE PTR [eax]
  41ae32:	ret    
  41ae33:	cs jae 0x41ae39
  41ae36:	pop    eax
  41ae37:	(bad)  
  41ae38:	fwait
  41ae39:	mov    ds:0x295a0691,eax
  41ae3e:	pop    ss
  41ae3f:	jg     0x41ae5e
  41ae41:	or     al,0xb1
  41ae43:	or     eax,0xd06d0ff
  41ae48:	sub    BYTE PTR [eax+esi*4],ah
  41ae4b:	cwde   
  41ae4c:	jb     0x41ae3c
  41ae4e:	xor    al,0xb9
  41ae50:	fidiv  DWORD PTR [esi]
  41ae52:	push   esi
  41ae53:	rol    DWORD PTR [esi],0x7f
  41ae56:	int    0x68
  41ae58:	js     0x41ae2f
  41ae5a:	push   ecx
  41ae5b:	fwait
  41ae5c:	mov    ds:0x6a4df064,al
  41ae61:	jbe    0x41ae7e
  41ae63:	imul   edi,eax,0x8a0f37b1
  41ae69:	(bad)  
  41ae6a:	je     0x41ae21
  41ae6c:	rcr    BYTE PTR [ecx+eiz*1-0x4b3fe4c3],1
  41ae73:	sbb    ebp,esp
  41ae75:	xchg   esi,eax
  41ae76:	jp     0x41aebf
  41ae78:	jbe    0x41ae8d
  41ae7a:	jge    0x41aebd
  41ae7c:	ss jmp 0x41ae78
  41ae7f:	fdivr  QWORD PTR [edi-0x57]
  41ae82:	adc    BYTE PTR [esi-0x59],dl
  41ae85:	adc    eax,0xf00bf466
  41ae8a:	sub    dl,bh
  41ae8c:	xchg   esp,eax
  41ae8d:	and    BYTE PTR [edx-0x1f768e2],ch
  41ae93:	sbb    DWORD PTR [edi],ecx
  41ae95:	scas   eax,DWORD PTR es:[edi]
  41ae96:	and    ah,BYTE PTR [edx]
  41ae98:	mov    ah,0xef
  41ae9a:	or     edx,ecx
  41ae9c:	jmp    0x41ae29
  41ae9e:	aam    0x86
  41aea0:	and    eax,0x17292d64
  41aea5:	mov    ah,0x3f
  41aea7:	pcmpgtd mm2,QWORD PTR [ecx+eiz*8-0x6a8804]
  41aeaf:	shl    DWORD PTR [esi],cl
  41aeb1:	fcom   QWORD PTR [ecx-0x3e]
  41aeb4:	and    BYTE PTR cs:[ebp+0x41],ah
  41aeb8:	out    0xd3,eax
  41aeba:	jns    0x41ae3e
  41aebc:	mov    BYTE PTR [edx],bl
  41aebe:	jp     0x41aeff
  41aec0:	mov    BYTE PTR [esi+0x78],dl
  41aec3:	adc    al,0x85
  41aec5:	pop    ebp
  41aec6:	inc    esi
  41aec7:	lock fsub DWORD PTR [esi-0x33]
  41aecb:	push   ds
  41aecc:	call   0xb82c:0x21d5dcd0
  41aed3:	bt     DWORD PTR [esi-0x7cc781a5],edx
  41aeda:	(bad)  
  41aedb:	out    0x8d,eax
  41aedd:	lds    ecx,FWORD PTR [ebp-0x7a]
  41aee0:	pushf  
  41aee1:	bound  esi,QWORD PTR [esi+0x68]
  41aee4:	xor    dl,bl
  41aee6:	nop
  41aee7:	(bad)  
  41aee8:	jmp    0x41aeda
  41aeea:	push   ss
  41aeeb:	dec    edi
  41aeec:	or     al,0x57
  41aeee:	sub    al,0xe9
  41aef0:	test   DWORD PTR [eax+0x50575810],esi
  41aef6:	lea    edi,[edi+0x7f11a7a0]
  41aefc:	push   eax
  41aefd:	enter  0xa46a,0x2a
  41af01:	cld    
  41af02:	mov    cs,ecx
  41af04:	call   0xfe28a5f0
  41af09:	mov    ecx,0x183cebee
  41af0e:	pop    edx
  41af0f:	cmp    cl,BYTE PTR [esi]
  41af11:	add    al,0x36
  41af13:	pop    ebx
  41af14:	clc    
  41af15:	xor    DWORD PTR [ebx],esi
  41af17:	(bad)  
  41af19:	ss dec edx
  41af1b:	inc    ebp
  41af1c:	test   esp,eax
  41af1e:	mov    DWORD PTR [esi-0x6f2fbeea],esp
  41af24:	ss ds out 0x91,al
  41af28:	inc    ebx
  41af29:	int    0x5f
  41af2b:	adc    al,0x2d
  41af2d:	inc    esi
  41af2e:	mov    ah,0x38
  41af30:	hlt    
  41af31:	lods   eax,DWORD PTR ds:[esi]
  41af32:	imul   BYTE PTR [eax+0x4d]
  41af35:	aas    
  41af36:	jmp    0x221e4a8e
  41af3b:	out    dx,eax
  41af3c:	mov    ecx,0x96511d77
  41af41:	mov    esi,0xf1db2445
  41af46:	push   esp
  41af47:	lahf   
  41af48:	dec    eax
  41af49:	mov    edi,0x1b8c6084
  41af4e:	test   eax,0x5efc58f1
  41af53:	stc    
  41af54:	xor    al,0x6
  41af56:	icebp  
  41af57:	jbe    0x41af52
  41af59:	scas   eax,DWORD PTR es:[edi]
  41af5a:	mov    eax,ds:0xe727afe2
  41af5f:	or     ebp,DWORD PTR [ebp+eax*8-0x71]
  41af63:	mov    BYTE PTR [eax],bh
  41af65:	inc    ebp
  41af66:	aas    
  41af67:	inc    ecx
  41af68:	js     0x41af7d
  41af6a:	lods   eax,DWORD PTR ds:[esi]
  41af6b:	jne    0x41af93
  41af6d:	or     esi,DWORD PTR [eax-0x3]
  41af70:	aas    
  41af71:	pop    ds
  41af72:	xor    al,0x7e
  41af74:	cmc    
  41af75:	jae    0x41aff5
  41af77:	jo     0x41af39
  41af79:	dec    ebx
  41af7a:	popf   
  41af7b:	into   
  41af7c:	leave  
  41af7d:	pop    ebx
  41af7e:	mov    edx,0xc557d6a6
  41af83:	xchg   BYTE PTR [ebx],ah
  41af85:	push   ebx
  41af86:	adc    cl,ah
  41af88:	add    eax,0xda3a3c69
  41af8d:	xchg   ebp,eax
  41af8e:	iret   
  41af8f:	inc    ebp
  41af90:	clc    
  41af91:	loopne 0x41af41
  41af93:	cmp    al,0x12
  41af95:	cmp    BYTE PTR [edi-0x45],al
  41af98:	and    dh,BYTE PTR fs:[ebp-0x50812915]
  41af9f:	dec    eax
  41afa0:	or     esp,DWORD PTR [edx]
  41afa2:	sub    eax,ecx
  41afa4:	pop    ds
  41afa5:	push   esi
  41afa6:	js     0x41af60
  41afa8:	dec    ebx
  41afa9:	jge    0x41b01b
  41afab:	xchg   DWORD PTR [esi-0x7b],ebp
  41afae:	in     al,0x94
  41afb0:	sbb    eax,edx
  41afb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afb3:	mov    bl,0x90
  41afb5:	pop    esp
  41afb6:	push   cs
  41afb7:	jge    0x41b010
  41afb9:	push   edi
  41afba:	adc    ah,BYTE PTR [esi-0x37f0f0bd]
  41afc0:	mov    cl,0x2c
  41afc2:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afc4:	inc    eax
  41afc5:	add    dl,BYTE PTR [ebp+ebx*8-0x7f]
  41afc9:	cld    
  41afca:	jg     0x41afc6
  41afcc:	mov    edx,0x6b8c690
  41afd1:	sub    edx,DWORD PTR [edx+0x5237f88a]
  41afd7:	test   eax,0xfccea8e7
  41afdc:	addr16 retf 
  41afde:	mov    dl,0x7
  41afe0:	pop    es
  41afe1:	and    DWORD PTR [eax+eiz*4+0x17b2cfd6],esi
  41afe8:	dec    esp
  41afe9:	test   DWORD PTR [ecx+0x41b33d12],ecx
  41afef:	nop
  41aff0:	push   eax
  41aff1:	xchg   esi,eax
  41aff2:	push   es
  41aff3:	test   DWORD PTR [edi],eax
  41aff5:	mov    DWORD PTR [edi-0x4],0xd72b29b1
  41affc:	and    DWORD PTR [ebx-0x4b38ac6],0x6b
  41b003:	mov    ds:0xb55f0a84,al
  41b008:	pusha  
  41b009:	and    ch,BYTE PTR [ecx+edx*8]
  41b00c:	jne    0x41afd4
  41b00e:	arpl   WORD PTR [edi-0x49],cx
  41b011:	sbb    eax,0xedcd79ee
  41b016:	loopne 0x41afb4
  41b018:	jns    0x41b045
  41b01a:	cld    
  41b01b:	lahf   
  41b01c:	out    0x27,al
  41b01e:	cmp    al,0x35
  41b020:	call   0x33442536
  41b025:	lahf   
  41b026:	out    dx,eax
  41b027:	jg     0x41b07c
  41b029:	test   al,0xe2
  41b02b:	retf   0x2100
  41b02e:	push   ebx
  41b02f:	mov    bl,0xab
  41b031:	fnstsw WORD PTR [ebx-0x70b787e7]
  41b037:	and    ebx,eax
  41b039:	jnp    0x41b06c
  41b03b:	xor    edx,ebx
  41b03d:	es in  al,dx
  41b03f:	adc    eax,0x6e603cb0
  41b044:	retf   
  41b045:	popa   
  41b046:	mov    ch,BYTE PTR [edx-0x2b]
  41b049:	sbb    eax,0x9242b3c9
  41b04f:	sbb    BYTE PTR [edx],al
  41b051:	out    0xcd,eax
  41b053:	jns    0x41aff7
  41b055:	jo     0x41b05b
  41b057:	daa    
  41b058:	push   ds
  41b059:	mov    dh,0x70
  41b05b:	in     al,dx
  41b05c:	aaa    
  41b05d:	loopne 0x41b03f
  41b05f:	xchg   ecx,eax
  41b060:	mov    esi,DWORD PTR [eax-0x1979dc9e]
  41b066:	and    cl,al
  41b068:	xchg   DWORD PTR [ebp-0x3c],ebx
  41b06b:	jge    0x41b054
  41b06d:	mov    ebp,0x1cce7a2a
  41b072:	adc    ch,cl
  41b074:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b075:	mov    al,BYTE PTR [edi]
  41b077:	in     eax,dx
  41b078:	not    DWORD PTR [esi+0x76]
  41b07b:	in     eax,0xd9
  41b07d:	mov    al,ch
  41b07f:	jmp    0x4b76267
  41b084:	jmp    0x2bb90aa9
  41b089:	jmp    0x41b0d2
  41b08b:	and    DWORD PTR [eax+0x5de40c0],ebx
  41b091:	rol    BYTE PTR [edi],0xda
  41b094:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b095:	adc    al,0xe6
  41b097:	adc    esi,DWORD PTR [edi-0x6b53c0a0]
  41b09d:	push   ebp
  41b09e:	dec    edx
  41b09f:	add    DWORD PTR [esi+0x6],edi
  41b0a2:	xchg   ebp,eax
  41b0a3:	cmp    DWORD PTR cs:[ecx],esi
  41b0a6:	imul   ebx,DWORD PTR [esi+0x2197815e],0x2f
  41b0ad:	jge    0x41b08e
  41b0af:	sub    ebp,edx
  41b0b1:	sbb    ch,bl
  41b0b3:	mov    dh,dh
  41b0b5:	and    DWORD PTR [ecx+0xf1c2d8e],esi
  41b0bb:	fcom   DWORD PTR [esi+0x570d7fd2]
  41b0c1:	mov    al,0x47
  41b0c3:	mov    esp,0xb3c5ab89
  41b0c8:	in     al,dx
  41b0c9:	and    eax,0x2868bdfc
  41b0ce:	sub    eax,0xdc6fd63c
  41b0d3:	pop    ds
  41b0d4:	fld    DWORD PTR [ebp+0x37]
  41b0d7:	nop
  41b0d8:	mov    ch,0x47
  41b0da:	int3   
  41b0db:	ret    
  41b0dc:	aas    
  41b0dd:	add    esp,DWORD PTR [eax-0x68805513]
  41b0e3:	mov    al,ds:0x2d64623
  41b0e8:	scas   al,BYTE PTR es:[edi]
  41b0e9:	stos   DWORD PTR es:[edi],eax
  41b0ea:	fs or  bh,ah
  41b0ed:	push   eax
  41b0ee:	cwde   
  41b0ef:	aas    
  41b0f0:	jb     0x41b096
  41b0f2:	nop
  41b0f3:	cmp    dh,ch
  41b0f5:	(bad)  
  41b0f6:	jp     0x41b09c
  41b0f8:	sbb    eax,ebp
  41b0fa:	mov    eax,0x942d0cd5
  41b0ff:	cmp    eax,0xe1829a0c
  41b105:	pop    DWORD PTR [ecx+ebp*2+0x419b972f]
  41b10c:	loope  0x41b0be
  41b10e:	mov    ebx,0xf1207391
  41b113:	leave  
  41b114:	mov    edi,0x61468caf
  41b119:	mov    ebx,esp
  41b11b:	inc    esi
  41b11c:	mov    bl,0xd
  41b11e:	sbb    esi,edx
  41b120:	push   0xcca91fcf
  41b125:	loop   0x41b156
  41b127:	sub    ebp,DWORD PTR [ecx+edi*8+0x22]
  41b12b:	arpl   WORD PTR [edi+ebp*8-0x3f],cx
  41b12f:	push   esi
  41b130:	cmp    DWORD PTR [ebp+0x58b39dfc],0x58
  41b137:	mov    edx,0xac485bac
  41b13c:	(bad)  
  41b13d:	or     eax,0xa5aa39a7
  41b142:	xchg   esp,eax
  41b143:	loopne 0x41b0cf
  41b145:	(bad)
  41b148:	sub    eax,0xc503b778
  41b14d:	rol    ah,cl
  41b14f:	into   
  41b150:	sahf   
  41b151:	jge    0x41b18c
  41b153:	leave  
  41b154:	das    
  41b155:	shr    DWORD PTR [edi],1
  41b157:	aaa    
  41b158:	fimul  DWORD PTR [esi]
  41b15a:	dec    edi
  41b15b:	jmp    0x41b13d
  41b15d:	sub    eax,0x291f40c4
  41b162:	out    dx,eax
  41b163:	mov    eax,0xfbf90e81
  41b168:	sub    eax,0xf2ba76f2
  41b16d:	pop    edi
  41b16e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b16f:	jg     0x41b147
  41b171:	sti    
  41b172:	jmp    0x41b13c
  41b174:	sub    ch,cl
  41b176:	dec    esi
  41b177:	out    0xcc,al
  41b179:	pop    edx
  41b17a:	ins    BYTE PTR es:[edi],dx
  41b17b:	sbb    bh,dl
  41b17d:	and    DWORD PTR [eax],ecx
  41b17f:	xlat   BYTE PTR ds:[ebx]
  41b180:	int3   
  41b181:	adc    DWORD PTR [ebp+0x65],ecx
  41b184:	mov    edx,DWORD PTR [ebp-0x5b145aad]
  41b18a:	stos   DWORD PTR es:[edi],eax
  41b18b:	inc    ebp
  41b18c:	dec    esp
  41b18d:	test   BYTE PTR [ebx+0x32ee06ef],al
  41b193:	ins    BYTE PTR es:[edi],dx
  41b194:	jb     0x41b1e0
  41b196:	pop    edx
  41b197:	sbb    BYTE PTR [edi+edi*8],dh
  41b19a:	jle    0x41b180
  41b19c:	int    0x77
  41b19e:	mov    al,0x99
  41b1a0:	fbld   TBYTE PTR [edi]
  41b1a2:	push   es
  41b1a3:	jb     0x41b1a4
  41b1a5:	fs mov eax,ebx
  41b1a8:	test   BYTE PTR [edx-0x72],0xb9
  41b1ac:	scas   eax,DWORD PTR es:[edi]
  41b1ad:	nop
  41b1ae:	jp     0x41b15f
  41b1b0:	frstor [ebx]
  41b1b2:	call   0xc852:0x4968c3cb
  41b1b9:	mov    ds:0x8292a889,al
  41b1be:	inc    esi
  41b1bf:	sahf   
  41b1c0:	xchg   esi,eax
  41b1c1:	addr16 call 0x9986a428
  41b1c7:	push   DWORD PTR [esi]
  41b1c9:	dec    esp
  41b1ca:	stc    
  41b1cb:	mov    al,0xb6
  41b1cd:	ds aam 0x25
  41b1d0:	mov    ds:0x20e4bedf,eax
  41b1d5:	ins    DWORD PTR es:[edi],dx
  41b1d6:	inc    BYTE PTR [eax-0x746429f]
  41b1dc:	and    al,0x9e
  41b1de:	adc    al,0x5c
  41b1e0:	ins    DWORD PTR es:[edi],dx
  41b1e1:	and    al,0xa
  41b1e3:	lds    ebp,FWORD PTR [ebx+0x56]
  41b1e6:	scas   al,BYTE PTR es:[edi]
  41b1e7:	add    DWORD PTR [ebp-0x5ffb680],ebp
  41b1ed:	inc    ebp
  41b1ee:	adc    al,0x78
  41b1f0:	lea    ecx,[eax-0x41]
  41b1f3:	xor    esp,DWORD PTR [ebx-0x38]
  41b1f6:	dec    ebp
  41b1f7:	inc    ebx
  41b1f8:	cdq    
  41b1f9:	and    dh,BYTE PTR [ebp-0x52]
  41b1fc:	into   
  41b1fd:	xchg   esi,eax
  41b1fe:	mov    edx,0xe70d8444
  41b203:	jo     0x41b23e
  41b205:	adc    BYTE PTR [edx],dh
  41b207:	dec    esi
  41b208:	inc    edx
  41b209:	mov    edi,0xa760b1fd
  41b20e:	outs   dx,DWORD PTR ds:[esi]
  41b20f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b210:	mov    ch,0xa6
  41b212:	inc    ecx
  41b213:	fstp   st(6)
  41b215:	fsubrp st(4),st
  41b217:	jl     0x41b1bc
  41b219:	jl     0x41b1d7
  41b21b:	(bad)  
  41b21c:	clc    
  41b21d:	test   DWORD PTR [ebp-0x711dfdbd],ebx
  41b223:	mov    al,0x7c
  41b225:	je     0x41b211
  41b227:	ret    
  41b228:	in     al,dx
  41b229:	out    0xc,eax
  41b22b:	loope  0x41b1c8
  41b22d:	dec    ebp
  41b22e:	jmp    0x4e0d:0xbb75b72e
  41b235:	mov    edx,0xb996d73f
  41b23a:	pushf  
  41b23b:	js     0x41b25c
  41b23d:	pusha  
  41b23e:	and    esp,0x7c59a587
  41b244:	xlat   BYTE PTR ds:[ebx]
  41b245:	inc    edi
  41b246:	fild   WORD PTR [ebp+0x1e]
  41b249:	sub    BYTE PTR [edx-0x54],ah
  41b24c:	jnp    0x41b1f0
  41b24e:	pop    eax
  41b24f:	mov    cl,BYTE PTR [ecx]
  41b251:	mov    ah,BYTE PTR [ecx-0x23]
  41b254:	sbb    eax,0x99505e62
  41b259:	loop   0x41b24e
  41b25b:	xor    eax,0xd411e7fa
  41b260:	add    al,0x45
  41b262:	add    eax,0x7da2ed8a
  41b267:	pop    esp
  41b268:	ins    DWORD PTR es:[edi],dx
  41b269:	jae    0x41b2ea
  41b26b:	push   esp
  41b26c:	cmp    BYTE PTR [edx-0x3ea083bd],0x3e
  41b273:	mov    dl,0xbd
  41b275:	imul   esp,DWORD PTR ds:0xbb9a36aa,0xffffffe7
  41b27c:	rcr    BYTE PTR [esp+ecx*8],cl
  41b27f:	inc    eax
  41b280:	sbb    al,0xd8
  41b282:	jo     0x41b24e
  41b284:	cmc    
  41b285:	imul   edi,DWORD PTR [ebp+0x16],0x3509bdc6
  41b28c:	mov    esp,0x4373765f
  41b291:	fs loop 0x41b231
  41b294:	adc    DWORD PTR [ebx+0x35],eax
  41b297:	inc    eax
  41b298:	popa   
  41b299:	fisttp DWORD PTR [ebp-0x5214b0c0]
  41b29f:	sbb    DWORD PTR [ecx-0x1b0fd1a9],0x974d9313
  41b2a9:	outs   dx,DWORD PTR ds:[esi]
  41b2aa:	xchg   ebp,eax
  41b2ab:	pusha  
  41b2ac:	test   eax,0x9d738925
  41b2b1:	sbb    DWORD PTR [ebp-0x23],eax
  41b2b4:	sub    al,bl
  41b2b6:	inc    BYTE PTR [eax+0x2a]
  41b2b9:	ds mov cl,0x38
  41b2bc:	outs   dx,BYTE PTR ds:[esi]
  41b2bd:	xchg   DWORD PTR [edx+0x58338dd4],ecx
  41b2c3:	mov    eax,ds:0xdcbc862c
  41b2c8:	sahf   
  41b2c9:	jl     0x41b27c
  41b2cb:	and    BYTE PTR [edx-0x4fc41428],al
  41b2d1:	ror    DWORD PTR [edi],1
  41b2d3:	and    cl,ah
  41b2d5:	out    dx,eax
  41b2d6:	pop    ebx
  41b2d7:	or     eax,0x3ba0106c
  41b2dc:	arpl   WORD PTR [ecx],si
  41b2de:	sub    eax,0x505fa8d2
  41b2e3:	xchg   ebp,eax
  41b2e4:	push   edx
  41b2e5:	or     al,0x1c
  41b2e7:	int    0x2b
  41b2e9:	sahf   
  41b2ea:	sbb    BYTE PTR [ebp+0x68],0x25
  41b2ee:	sbb    al,0x5c
  41b2f0:	jmp    0x41b333
  41b2f2:	loope  0x41b327
  41b2f4:	sub    ecx,DWORD PTR [edi+eiz*4+0x3c]
  41b2f8:	mov    esi,0xf1814a63
  41b2fd:	aaa    
  41b2fe:	fdivr  DWORD PTR [ebp-0x2666ba21]
  41b304:	sbb    ecx,ebp
  41b306:	enter  0x6a7e,0x7d
  41b30a:	mov    edi,0xdb044124
  41b30f:	xchg   esi,eax
  41b310:	push   eax
  41b311:	ins    BYTE PTR es:[edi],dx
  41b312:	ins    DWORD PTR es:[edi],dx
  41b313:	xor    esi,0xffffff99
  41b316:	jnp    0x41b309
  41b318:	scas   al,BYTE PTR es:[edi]
  41b319:	fstp   TBYTE PTR [edx]
  41b31b:	add    ebp,DWORD PTR [ebx]
  41b31d:	sbb    al,0x5d
  41b31f:	add    eax,0x3227dbfd
  41b324:	repnz dec ebp
  41b326:	jg     0x41b2af
  41b328:	retf   0xcbb3
  41b32b:	inc    ebx
  41b32c:	cmp    al,BYTE PTR gs:[ebp-0x2d]
  41b330:	std    
  41b331:	push   0x39
  41b333:	ror    DWORD PTR [edx+0x50696277],cl
  41b339:	dec    ecx
  41b33a:	fdivr  QWORD PTR [esi-0x3b]
  41b33d:	inc    ebp
  41b33e:	out    0x77,al
  41b340:	pop    edi
  41b341:	test   BYTE PTR [esi+ebp*8],bh
  41b344:	push   0x44
  41b346:	xor    eax,0xf4ab69f7
  41b34b:	inc    esp
  41b34c:	mov    dl,BYTE PTR [esi+0x1b]
  41b34f:	out    0x21,al
  41b351:	dec    edi
  41b352:	cdq    
  41b353:	cmp    dl,bl
  41b355:	and    cx,WORD PTR [ebp+0x61]
  41b359:	cs daa 
  41b35b:	or     eax,0x6409dba6
  41b360:	push   ecx
  41b361:	stc    
  41b362:	inc    ecx
  41b363:	mov    esp,ebx
  41b365:	mov    esi,0x6e2f498a
  41b36a:	add    BYTE PTR [esi-0xd33b6d9],bh
  41b370:	jns    0x41b388
  41b372:	scas   al,BYTE PTR es:[edi]
  41b373:	repz test DWORD PTR [edi-0x29],ebp
  41b377:	mov    esi,0x2f8124d5
  41b37d:	or     ebx,DWORD PTR [ecx+0x6e]
  41b380:	stos   DWORD PTR es:[edi],eax
  41b381:	out    dx,eax
  41b382:	inc    esp
  41b383:	popa   
  41b384:	aam    0x71
  41b386:	push   eax
  41b387:	and    DWORD PTR [edx],edi
  41b389:	std    
  41b38a:	mov    dl,0x78
  41b38c:	jmp    0x41b360
  41b38e:	and    ebp,DWORD PTR [esi+0x59]
  41b391:	repnz fisttp DWORD PTR [eax+0x7c]
  41b395:	js     0x41b3e9
  41b397:	and    BYTE PTR [ecx-0x12],ch
  41b39a:	int3   
  41b39b:	mov    esp,0x9584c612
  41b3a0:	mov    ah,0x51
  41b3a2:	outs   dx,BYTE PTR ds:[esi]
  41b3a3:	popa   
  41b3a4:	ins    BYTE PTR es:[edi],dx
  41b3a5:	aas    
  41b3a6:	gs jmp 0x41b425
  41b3a9:	rol    DWORD PTR [edx+eiz*1+0x1dec71fe],0x1c
  41b3b1:	call   0xd5b:0x8afb2139
  41b3b8:	nop
  41b3b9:	pusha  
  41b3ba:	outs   dx,DWORD PTR ds:[esi]
  41b3bb:	retf   
  41b3bc:	mov    BYTE PTR [ebp+0x2c],bh
  41b3bf:	push   es
  41b3c0:	(bad)  
  41b3c2:	mov    ?,WORD PTR [eax+0x55]
  41b3c5:	mov    bh,0x2b
  41b3c7:	fcom   st(6)
  41b3c9:	jae    0x41b370
  41b3cb:	arpl   ax,cx
  41b3cd:	jecxz  0x41b432
  41b3cf:	shl    BYTE PTR [edx+0x5d],0x53
  41b3d3:	jbe    0x41b418
  41b3d5:	out    0x57,al
  41b3d7:	jbe    0x41b372
  41b3d9:	bound  ecx,QWORD PTR [edi-0x16]
  41b3dc:	das    
  41b3dd:	jg     0x41b428
  41b3df:	mov    ebp,0x44ecb5e2
  41b3e4:	stos   BYTE PTR es:[edi],al
  41b3e5:	jo     0x41b383
  41b3e7:	in     eax,0x32
  41b3e9:	imul   eax,DWORD PTR [eax],0x16f278ca
  41b3ef:	xchg   edx,eax
  41b3f0:	sub    edi,eax
  41b3f2:	dec    esi
  41b3f3:	mov    esi,0x7313d335
  41b3f8:	push   eax
  41b3f9:	test   BYTE PTR [ecx+0x5d9d012a],bl
  41b3ff:	sbb    al,al
  41b401:	pop    edx
  41b402:	fcom   QWORD PTR [ebp-0x22a31540]
  41b408:	and    al,0x70
  41b40a:	xor    BYTE PTR [esi],bh
  41b40c:	jbe    0x41b466
  41b40e:	xor    ebx,DWORD PTR [eax+0x59]
  41b411:	popf   
  41b412:	mov    dl,0x4b
  41b414:	adc    DWORD PTR [ecx-0xb],ebx
  41b417:	(bad)  
  41b418:	lock adc ecx,DWORD PTR [esi-0x66]
  41b41c:	out    dx,al
  41b41d:	into   
  41b41e:	mov    edi,0xf7d07d23
  41b423:	add    esi,DWORD PTR [ecx+esi*8]
  41b426:	or     eax,0x3d7950e8
  41b42b:	dec    edi
  41b42c:	mov    ds:0xbc547a07,al
  41b431:	mov    esp,0xc4b72e67
  41b436:	pop    esi
  41b437:	sbb    dl,BYTE PTR [ebx-0x449ef740]
  41b43d:	jecxz  0x41b4b7
  41b43f:	mov    cl,0x54
  41b441:	jg     0x41b3f6
  41b443:	imul   DWORD PTR [edi]
  41b445:	daa    
  41b446:	xchg   BYTE PTR [ebx-0x5ba09645],ch
  41b44c:	or     edx,DWORD PTR [edx+0x4d926395]
  41b452:	cmp    eax,0x2aa91330
  41b457:	adc    eax,0x8c68bcf7
  41b45c:	jg     0x41b4b8
  41b45e:	dec    edx
  41b45f:	xor    ah,BYTE PTR [ebp+0x15]
  41b462:	(bad)  
  41b463:	arpl   WORD PTR [edx],cx
  41b465:	push   ebx
  41b466:	shl    BYTE PTR [eax+0x68dfc1ba],0x7a
  41b46d:	xlat   BYTE PTR ds:[bx]
  41b46f:	or     ecx,ebx
  41b471:	cmp    DWORD PTR [esi],edx
  41b473:	mov    ebp,DWORD PTR es:[ebx]
  41b476:	add    eax,0xe40f1ffc
  41b47b:	sbb    eax,0x364c6050
  41b480:	inc    esp
  41b481:	xchg   edx,eax
  41b482:	mov    eax,ds:0xfdbd5919
  41b487:	mov    dh,0x96
  41b489:	mov    ds:0xa90b41a4,al
  41b48e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b48f:	(bad)  
  41b490:	xor    DWORD PTR [eax+eax*2+0x65],ebp
  41b494:	add    al,0x89
  41b496:	in     eax,dx
  41b497:	std    
  41b498:	test   BYTE PTR [eax+0x4a26ecb0],dl
  41b49e:	xchg   BYTE PTR [ebx+esi*8+0x3c909d22],bh
  41b4a5:	or     cl,cl
  41b4a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4a8:	add    edx,edi
  41b4aa:	mov    dl,0x96
  41b4ac:	fistp  DWORD PTR ds:0x5b94d6
  41b4b2:	mov    al,0xb
  41b4b4:	neg    ah
  41b4b6:	pop    ebx
  41b4b7:	mov    ds:0x9683e336,eax
  41b4bc:	mov    ah,0xe4
  41b4be:	aam    0x78
  41b4c0:	sub    BYTE PTR [edi+0x73701960],ch
  41b4c6:	mov    bl,0xbc
  41b4c8:	and    BYTE PTR [eax-0x46],0xc2
  41b4cc:	xchg   DWORD PTR [ebx+eax*4],ebx
  41b4cf:	loop   0x41b4fe
  41b4d1:	mov    esi,DWORD PTR [esi-0x561653e5]
  41b4d7:	xchg   edx,eax
  41b4d8:	enter  0xdc00,0xe0
  41b4dc:	sub    eax,DWORD PTR [ecx+eiz*4]
  41b4df:	lds    esi,FWORD PTR [edi-0xb]
  41b4e2:	retf   0xae5
  41b4e5:	ret    0x37a3
  41b4e8:	add    eax,0x8cf48af5
  41b4ed:	add    DWORD PTR [edi-0x71],edx
  41b4f0:	adc    DWORD PTR [ebp-0x31],ebp
  41b4f3:	xor    eax,0x32f5d9a0
  41b4f8:	dec    esp
  41b4f9:	cs mov esi,0x6680fbee
  41b4ff:	cwde   
  41b500:	rol    DWORD PTR [ecx-0x7],0xb7
  41b504:	inc    esi
  41b505:	lods   eax,DWORD PTR ds:[esi]
  41b506:	adc    bl,BYTE PTR [edx+0x68ac49af]
  41b50c:	mov    dl,0xad
  41b50e:	mov    BYTE PTR [edx],ah
  41b510:	(bad)
  41b513:	inc    ecx
  41b514:	and    al,0x9
  41b516:	sub    al,0x4d
  41b518:	pop    ebx
  41b519:	and    DWORD PTR [ecx-0x102212b6],eax
  41b51f:	xchg   esp,eax
  41b520:	lock or DWORD PTR [esi-0x5],ecx
  41b524:	add    eax,0x72d3e1b9
  41b529:	xchg   ebx,eax
  41b52a:	push   ebp
  41b52b:	push   ebx
  41b52c:	loopne 0x41b51f
  41b52e:	add    eax,0x4a815cd5
  41b533:	lds    ebp,FWORD PTR [esp+edi*2-0x3bd6e45]
  41b53a:	dec    esp
  41b53b:	xor    ebx,DWORD PTR [esi]
  41b53d:	jecxz  0x41b5af
  41b53f:	dec    ebx
  41b540:	loope  0x41b535
  41b542:	pop    ss
  41b543:	call   FWORD PTR [edi]
  41b545:	jne    0x41b4e3
  41b547:	in     eax,0x1
  41b549:	(bad)  [esi-0x2e137de2]
  41b54f:	in     al,0x31
  41b551:	mov    eax,ds:0x12c9c3fe
  41b556:	and    cl,BYTE PTR [edx-0x753a3ff]
  41b55c:	cld    
  41b55d:	pop    eax
  41b55e:	mov    BYTE PTR [ecx+0x49],dh
  41b561:	and    al,0x4f
  41b563:	jmp    0xe009:0x5fba21c7
  41b56a:	(bad)  
  41b56b:	hlt    
  41b56c:	sub    BYTE PTR [eax+ebx*8],cl
  41b56f:	sub    BYTE PTR [edx-0x2a1c2c56],ah
  41b575:	arpl   WORD PTR [ecx-0xf732b6b],si
  41b57b:	mov    ebp,0x73e0e8df
  41b580:	and    al,0x49
  41b582:	sub    al,0x64
  41b584:	cld    
  41b585:	pop    esp
  41b586:	outs   dx,BYTE PTR ds:[esi]
  41b587:	enter  0x6952,0xd6
  41b58b:	daa    
  41b58c:	int3   
  41b58d:	cwde   
  41b58e:	adc    al,0x69
  41b590:	fidiv  DWORD PTR [eax+0x1c]
  41b593:	push   ebp
  41b594:	push   edx
  41b595:	inc    edx
  41b596:	mov    dh,0x9d
  41b598:	std    
  41b599:	cmp    ecx,ebp
  41b59b:	add    al,0x95
  41b59d:	fmul   QWORD PTR [eax+0x1674d41d]
  41b5a3:	dec    eax
  41b5a4:	into   
  41b5a5:	jns    0x41b5e0
  41b5a7:	mov    ds:0xfc05721a,eax
  41b5ac:	out    0x89,al
  41b5ae:	xor    al,0x2e
  41b5b0:	xchg   edi,eax
  41b5b1:	lahf   
  41b5b2:	arpl   WORD PTR [edx+edx*2-0x33],ax
  41b5b6:	push   ebx
  41b5b7:	jle    0x41b551
  41b5b9:	push   ss
  41b5ba:	sbb    eax,0xe8c2603d
  41b5bf:	fwait
  41b5c0:	mov    esi,0xac97010b
  41b5c5:	adc    al,0xb1
  41b5c7:	(bad)  
  41b5c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5ca:	enter  0xc2a0,0x11
  41b5ce:	ins    BYTE PTR es:[edi],dx
  41b5cf:	(bad)  
  41b5d0:	test   al,0xc5
  41b5d2:	dec    edx
  41b5d3:	repnz push ebp
  41b5d5:	dec    ebx
  41b5d6:	mov    esp,0x198a41b
  41b5db:	push   ebx
  41b5dc:	mov    eax,ds:0xcce791f2
  41b5e1:	aaa    
  41b5e2:	das    
  41b5e3:	fidiv  DWORD PTR [esi+0x52]
  41b5e6:	(bad)  
  41b5e7:	clc    
  41b5e8:	or     eax,DWORD PTR [esi]
  41b5ea:	test   eax,0x444f4b89
  41b5ef:	dec    esi
  41b5f0:	dec    edx
  41b5f1:	add    BYTE PTR [ecx+0x7d40d049],cl
  41b5f7:	(bad)  
  41b5f8:	mov    esp,0x2a2223b1
  41b5fd:	bound  esp,QWORD PTR [ebx+0x69]
  41b600:	mov    edx,0x541d0f1f
  41b605:	and    al,0x9a
  41b607:	inc    ebx
  41b608:	pop    ecx
  41b609:	mov    ds:0x7ce80beb,al
  41b60e:	fmul   st(1),st
  41b610:	in     al,0xa9
  41b612:	or     edi,ebp
  41b614:	retf   0xc11e
  41b617:	ss es icebp 
  41b61a:	pop    edx
  41b61b:	call   0x7e09:0xfe6bae87
  41b622:	loope  0x41b63d
  41b624:	add    edx,DWORD PTR gs:[eax-0x712c646e]
  41b62b:	inc    eax
  41b62c:	or     dh,BYTE PTR [ebp+0x19]
  41b62f:	call   0xa0ed:0xe059bb3e
  41b636:	or     DWORD PTR [ebp-0x4f2c0442],edi
  41b63c:	popa   
  41b63d:	loopne 0x41b672
  41b63f:	test   cl,bl
  41b641:	cld    
  41b642:	out    dx,eax
  41b643:	(bad)  
  41b644:	cmp    edi,DWORD PTR [edx-0x30bea550]
  41b64a:	and    DWORD PTR [edi],ebp
  41b64c:	sub    al,dh
  41b64e:	ss repz cs mov ebx,0xa85f8da2
  41b656:	clc    
  41b657:	test   eax,0x53c05e0b
  41b65c:	call   0x18aa7c91
  41b661:	sbb    BYTE PTR [edx+0x4397c676],dh
  41b667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b668:	push   ecx
  41b669:	ins    BYTE PTR es:[edi],dx
  41b66a:	adc    BYTE PTR [esi-0x4fe35f59],bl
  41b670:	pop    edx
  41b671:	jge    0x41b634
  41b673:	mov    ebx,0xe5646c6e
  41b678:	retf   
  41b679:	xchg   ebp,eax
  41b67a:	das    
  41b67b:	add    al,0xc9
  41b67d:	test   al,0x1b
  41b67f:	mov    al,ds:0xf95064dd
  41b684:	xchg   ecx,eax
  41b685:	pushf  
  41b686:	mov    ecx,0x300c0563
  41b68b:	pop    edi
  41b68c:	mov    dh,0x24
  41b68e:	mov    dh,al
  41b690:	mov    ds:0x6c323c0c,al
  41b695:	mov    edx,0x78c001fa
  41b69a:	xor    bl,BYTE PTR [ebx+ebx*1+0x5f]
  41b69e:	jmp    0x41b66f
  41b6a0:	jmp    0x2cc6:0xa287a523
  41b6a7:	xor    eax,0x52852e30
  41b6ac:	and    ch,0xaf
  41b6af:	hlt    
  41b6b0:	enter  0xf966,0xe0
  41b6b4:	jb     0x41b656
  41b6b6:	into   
  41b6b7:	in     al,dx
  41b6b8:	ret    0x4bd1
  41b6bb:	lock add eax,0x55dd03a5
  41b6c1:	fild   QWORD PTR [ebx-0x10]
  41b6c4:	push   edx
  41b6c5:	mov    cl,0x67
  41b6c7:	cmp    DWORD PTR [eax],esi
  41b6c9:	dec    esp
  41b6ca:	(bad)  
  41b6cb:	push   ds
  41b6cc:	data16 hlt 
  41b6ce:	mov    esi,0x61e4f5df
  41b6d3:	mov    edx,0x8d5267c3
  41b6d8:	jp     0x41b6a2
  41b6da:	test   BYTE PTR [esi+0x1f],dl
  41b6dd:	and    eax,0x4834aca6
  41b6e2:	cmp    BYTE PTR [edi],0x14
  41b6e5:	dec    ebp
  41b6e6:	mov    fs,WORD PTR [edi+0x1e289b25]
  41b6ec:	cmp    al,0xe0
  41b6ee:	dec    ebp
  41b6ef:	fistp  DWORD PTR [ebp+0x7b9334f0]
  41b6f5:	and    DWORD PTR [esi+0x827fca5],0x621820ed
  41b6ff:	or     edi,edx
  41b701:	mov    esi,DWORD PTR [edi-0x2c]
  41b704:	cmp    eax,0x5cf10f89
  41b709:	sub    edi,DWORD PTR [ebx+0xbb5b9f]
  41b70f:	std    
  41b710:	fsub   QWORD PTR ds:0x4a3216b9
  41b716:	test   eax,0xc12a5966
  41b71b:	je     0x41b795
  41b71d:	add    esp,DWORD PTR [eax-0x5a]
  41b720:	xchg   edi,eax
  41b721:	cmp    eax,0xcd9cca42
  41b726:	(bad)  
  41b727:	cmc    
  41b728:	mov    bl,0x72
  41b72a:	rol    DWORD PTR [edi],cl
  41b72c:	in     al,0x91
  41b72e:	pop    ds
  41b72f:	jp     0x41b783
  41b731:	das    
  41b732:	test   BYTE PTR ds:0x8b1d8df7,ah
  41b738:	jnp    0x41b6be
  41b73a:	sti    
  41b73b:	mov    DWORD PTR [ebp-0x14],ecx
  41b73e:	mov    ecx,DWORD PTR [ebp-0x14]
  41b741:	mov    ecx,DWORD PTR [ecx+0xc]
  41b744:	movsx  cx,BYTE PTR [ecx+eax*1]
  41b749:	mov    edx,0x3b4b
  41b74e:	sub    cx,dx
  41b751:	mov    edx,0x8a85
  41b756:	xor    cx,dx
  41b759:	mov    edx,0x4f85
  41b75e:	cmp    cx,dx
  41b761:	jne    0x419376
  41b767:	mov    ecx,DWORD PTR ds:0x424014
  41b76d:	mov    ecx,DWORD PTR [ecx+0x198]
  41b773:	mov    DWORD PTR [ecx],eax
  41b775:	jmp    0x41b79b
  41b77a:	mov    ecx,DWORD PTR [ebp+0x18]
  41b77d:	cmp    ecx,0xf89c85b5
  41b783:	jne    0x41b79b
  41b789:	push   eax
  41b78a:	push   DWORD PTR [ebp+0x14]
  41b78d:	push   DWORD PTR [ebp+0x10]
  41b790:	push   DWORD PTR [ebp+0xc]
  41b793:	push   DWORD PTR [ebp+0x8]
  41b796:	call   0x416ab7
  41b79b:	pop    edi
  41b79c:	pop    esi
  41b79d:	leave  
  41b79e:	ret    0x14
  41b7a1:	push   ebp
  41b7a2:	mov    ebp,esp
  41b7a4:	sub    esp,0x48
  41b7a7:	push   ebx
  41b7a8:	movzx  eax,BYTE PTR ds:0x42901c
  41b7af:	sub    DWORD PTR ds:0x429010,eax
  41b7b5:	push   esi
  41b7b6:	adc    DWORD PTR ds:0x429000,0x3a05
  41b7c0:	push   edi
  41b7c1:	xor    edi,0x559a
  41b7c7:	xor    esi,esi
  41b7c9:	mov    DWORD PTR [ebp-0x20],esi
  41b7cc:	sub    eax,0x6d46
  41b7d1:	mov    eax,DWORD PTR [ebp-0xc]
  41b7d4:	push   0x5
  41b7d6:	and    DWORD PTR ds:0x42b010,0x0
  41b7e0:	mov    edi,DWORD PTR ds:0x42b010
  41b7e6:	inc    edi
  41b7e7:	mov    DWORD PTR ds:0x42b010,edi
  41b7ed:	cmp    DWORD PTR ds:0x42b010,0x1e
  41b7f4:	jne    0x41b80f
  41b7fa:	push   0x4aeb
  41b7ff:	push   0x362c
  41b804:	push   0x611c
  41b809:	call   DWORD PTR ds:0x425044
  41b80f:	cmp    DWORD PTR ds:0x42b010,0x11
  41b816:	jb     0x41b7e0
  41b81c:	and    DWORD PTR ds:0x429020,0x0
  41b826:	jmp    0x41b838
  41b82b:	mov    edi,DWORD PTR ds:0x429020
  41b831:	inc    edi
  41b832:	mov    DWORD PTR ds:0x429020,edi
  41b838:	cmp    DWORD PTR ds:0x429020,0x1b
  41b83f:	jae    0x41b8d2
  41b845:	cmp    DWORD PTR ds:0x429020,0x5
  41b84c:	jne    0x41b86a
  41b852:	push   0x6d5d
  41b857:	push   0x6bd3
  41b85c:	push   0x2a83
  41b861:	push   DWORD PTR [ebp-0x20]
  41b864:	call   DWORD PTR ds:0x425048
  41b86a:	cmp    DWORD PTR ds:0x429020,0x4
  41b871:	jne    0x41b884
  41b877:	mov    edi,DWORD PTR ds:0x429020
  41b87d:	inc    edi
  41b87e:	mov    DWORD PTR ds:0x429020,edi
  41b884:	jmp    0x41b82b
  41b889:	mov    DWORD PTR ds:0x42901c,0x1a
  41b893:	cmp    DWORD PTR ds:0x42901c,0x0
  41b89a:	je     0x41b8d2
  41b8a0:	cmp    DWORD PTR ds:0x42901c,0x29
  41b8a7:	jne    0x41b8b8
  41b8ad:	push   0x3b9c
  41b8b2:	call   DWORD PTR ds:0x42504c
  41b8b8:	xor    edi,edi
  41b8ba:	or     edi,DWORD PTR ds:0x42901c
  41b8c0:	dec    edi
  41b8c1:	mov    DWORD PTR ds:0x42901c,edi
  41b8c7:	jmp    0x41b893
  41b8cc:	sub    DWORD PTR ds:0x429008,ecx
  41b8d2:	mov    DWORD PTR [ebp-0xc],eax
  41b8d5:	and    DWORD PTR ds:0x42d01c,0x0
  41b8df:	mov    edi,DWORD PTR ds:0x42d01c
  41b8e5:	inc    edi
  41b8e6:	mov    DWORD PTR ds:0x42d01c,edi
  41b8ec:	cmp    DWORD PTR ds:0x42d01c,0x13
  41b8f3:	jne    0x41b909
  41b8f9:	push   0x8e10
  41b8fe:	push   0x42451e
  41b903:	call   DWORD PTR ds:0x425010
  41b909:	cmp    DWORD PTR ds:0x42d01c,0x11
  41b910:	jb     0x41b8df
  41b916:	pop    edi
  41b917:	push   0x424128
  41b91c:	sub    DWORD PTR ds:0x42a018,0x42b000
  41b926:	call   DWORD PTR ds:0x425024
  41b92c:	adc    DWORD PTR ds:0x42c014,0x59ac
  41b936:	push   esi
  41b937:	xor    DWORD PTR ds:0x42d018,0x57bc
  41b941:	push   0x2
  41b943:	add    DWORD PTR ds:0x42a014,0x11b6
  41b94d:	push   0x1
  41b94f:	push   0x2
  41b951:	and    DWORD PTR ds:0x42d004,0x42a01c
  41b95b:	push   0x1
  41b95d:	and    DWORD PTR ds:0x42a004,0x42b014
  41b967:	push   0x8678768
  41b96c:	sbb    DWORD PTR ds:0x42901c,0x42c014
  41b976:	push   0x87676776
  41b97b:	sub    DWORD PTR ds:0x42a008,0x42c014
  41b985:	call   DWORD PTR ds:0x425000
  41b98b:	push   esi
  41b98c:	push   0x68
  41b98e:	push   0xd
  41b990:	push   0x5
  41b992:	push   0x3
  41b994:	push   0x5468787
  41b999:	sub    DWORD PTR ds:0x429014,0x2577
  41b9a3:	call   DWORD PTR ds:0x425008
  41b9a9:	xor    DWORD PTR ds:0x42c00c,0x43e8
  41b9b3:	dec    edi
  41b9b4:	mov    DWORD PTR ds:0x42d008,0x724a
  41b9be:	jne    0x41b917
  41b9c4:	push   0x42413c
  41b9c9:	push   esi
  41b9ca:	push   esi
  41b9cb:	call   DWORD PTR ds:0x425038
  41b9d1:	or     DWORD PTR ds:0x42b004,0x42b00c
  41b9db:	test   eax,eax
  41b9dd:	je     0x41ba3c
  41b9e3:	add    DWORD PTR ds:0x429008,edx
  41b9e9:	mov    eax,ds:0x75687681
  41b9ee:	and    DWORD PTR ds:0x429024,0x0
  41b9f8:	mov    ebx,DWORD PTR ds:0x429024
  41b9fe:	inc    ebx
  41b9ff:	mov    DWORD PTR ds:0x429024,ebx
  41ba05:	cmp    DWORD PTR ds:0x429024,0x24
  41ba0c:	jne    0x41ba1e
  41ba12:	push   DWORD PTR [ebp-0x24]
  41ba15:	push   DWORD PTR [ebp-0x18]
  41ba18:	call   DWORD PTR ds:0x425018
  41ba1e:	cmp    DWORD PTR ds:0x429024,0x1e
  41ba25:	jb     0x41b9f8
  41ba2b:	add    DWORD PTR ds:0x42d000,ebx
  41ba31:	imul   eax,eax,0x5463da19
  41ba37:	mov    ds:0x75687681,eax
  41ba3c:	not    eax
  41ba3e:	mov    eax,DWORD PTR [ebp-0xc]
  41ba41:	mov    ebx,DWORD PTR ds:0x42b010
  41ba47:	mov    ebx,0xf89c85b6
  41ba4c:	cmp    eax,ebx
  41ba4e:	mov    DWORD PTR ds:0x42d01c,0x2eca
  41ba58:	jne    0x41baa0
  41ba5e:	add    DWORD PTR ds:0x429018,0x42a018
  41ba68:	mov    DWORD PTR ds:0x424124,0xf89c85b5
  41ba72:	or     DWORD PTR ds:0x42b01c,0x42c010
  41ba7c:	push   DWORD PTR [ebp+0x10]
  41ba7f:	push   DWORD PTR [ebp+0xc]
  41ba82:	push   DWORD PTR [ebp+0x8]
  41ba85:	call   0x408413
  41ba8a:	adc    edi,edi
  41ba8c:	mov    ecx,DWORD PTR ds:0x424014
  41ba92:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41ba98:	sbb    esi,0x7064
  41ba9e:	mov    DWORD PTR [ecx],eax
  41baa0:	mov    DWORD PTR [ebp-0x4],ebx
  41baa3:	add    esi,0x7033
  41baa9:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41bab0:	and    DWORD PTR ds:0x42d000,0x0
  41baba:	jmp    0x41bace
  41babf:	xor    ecx,ecx
  41bac1:	add    ecx,DWORD PTR ds:0x42d000
  41bac7:	inc    ecx
  41bac8:	mov    DWORD PTR ds:0x42d000,ecx
  41bace:	cmp    DWORD PTR ds:0x42d000,0x1d
  41bad5:	jae    0x41bb24
  41badb:	cmp    DWORD PTR ds:0x42d000,0x9
  41bae2:	jne    0x41bafb
  41bae8:	push   0x42b01c
  41baed:	push   DWORD PTR [ebp-0x1c]
  41baf0:	push   0x42442a
  41baf5:	call   DWORD PTR ds:0x42501c
  41bafb:	cmp    DWORD PTR ds:0x42d000,0x8
  41bb02:	jne    0x41bb15
  41bb08:	mov    ecx,DWORD PTR ds:0x42d000
  41bb0e:	inc    ecx
  41bb0f:	mov    DWORD PTR ds:0x42d000,ecx
  41bb15:	jmp    0x41babf
  41bb1a:	mov    DWORD PTR ds:0x42a01c,0x231b
  41bb24:	lea    eax,[ebp-0x28]
  41bb27:	and    DWORD PTR ds:0x42c008,0x0
  41bb31:	mov    edi,DWORD PTR ds:0x42c008
  41bb37:	inc    edi
  41bb38:	mov    DWORD PTR ds:0x42c008,edi
  41bb3e:	cmp    DWORD PTR ds:0x42c008,0x17
  41bb45:	jne    0x41bb59
  41bb4b:	push   0x42a00c
  41bb50:	push   DWORD PTR [ebp-0x18]
  41bb53:	call   DWORD PTR ds:0x425020
  41bb59:	cmp    DWORD PTR ds:0x42c008,0x10
  41bb60:	jb     0x41bb31
  41bb66:	and    DWORD PTR ds:0x42900c,0x0
  41bb70:	jmp    0x41bb84
  41bb75:	xor    ecx,ecx
  41bb77:	or     ecx,DWORD PTR ds:0x42900c
  41bb7d:	inc    ecx
  41bb7e:	mov    DWORD PTR ds:0x42900c,ecx
  41bb84:	cmp    DWORD PTR ds:0x42900c,0x1b
  41bb8b:	jae    0x41bc1f
  41bb91:	cmp    DWORD PTR ds:0x42900c,0x20
  41bb98:	jne    0x41bba7
  41bb9e:	push   DWORD PTR [ebp-0x14]
  41bba1:	call   DWORD PTR ds:0x425028
  41bba7:	jmp    0x41bb75
  41bbac:	mov    DWORD PTR ds:0x42b00c,0x15
  41bbb6:	cmp    DWORD PTR ds:0x42b00c,0x0
  41bbbd:	je     0x41bc1f
  41bbc3:	cmp    DWORD PTR ds:0x42b00c,0x4
  41bbca:	jne    0x41bbf1
  41bbd0:	push   0x6080
  41bbd5:	push   DWORD PTR [ebp-0x20]
  41bbd8:	push   0x42d004
  41bbdd:	push   0x710d
  41bbe2:	push   DWORD PTR [ebp-0x10]
  41bbe5:	push   DWORD PTR [ebp-0x14]
  41bbe8:	push   DWORD PTR [ebp-0x24]
  41bbeb:	call   DWORD PTR ds:0x42502c
  41bbf1:	cmp    DWORD PTR ds:0x42b00c,0x5
  41bbf8:	jne    0x41bc0d
  41bbfe:	xor    edi,edi
  41bc00:	add    edi,DWORD PTR ds:0x42b00c
  41bc06:	dec    edi
  41bc07:	mov    DWORD PTR ds:0x42b00c,edi
  41bc0d:	mov    edi,DWORD PTR ds:0x42b00c
  41bc13:	dec    edi
  41bc14:	mov    DWORD PTR ds:0x42b00c,edi
  41bc1a:	jmp    0x41bbb6
  41bc1f:	mov    DWORD PTR [ebp-0x20],eax
  41bc22:	movzx  ecx,BYTE PTR ds:0x429028
  41bc29:	xor    ecx,DWORD PTR ds:0x42c00c
  41bc2f:	mov    DWORD PTR ds:0x429028,ecx
  41bc35:	lea    eax,[ebp-0x2c]
  41bc38:	and    DWORD PTR ds:0x429004,0x0
  41bc42:	jmp    0x41bc54
  41bc47:	mov    esi,DWORD PTR ds:0x429004
  41bc4d:	inc    esi
  41bc4e:	mov    DWORD PTR ds:0x429004,esi
  41bc54:	cmp    DWORD PTR ds:0x429004,0x1e
  41bc5b:	jae    0x41bcfb
  41bc61:	cmp    DWORD PTR ds:0x429004,0x7
  41bc68:	jne    0x41bc79
  41bc6e:	push   0x5e54
  41bc73:	call   DWORD PTR ds:0x425030
  41bc79:	cmp    DWORD PTR ds:0x429004,0x6
  41bc80:	jne    0x41bc95
  41bc86:	xor    esi,esi
  41bc88:	xor    esi,DWORD PTR ds:0x429004
  41bc8e:	inc    esi
  41bc8f:	mov    DWORD PTR ds:0x429004,esi
  41bc95:	jmp    0x41bc47
  41bc9a:	and    DWORD PTR ds:0x42b00c,0x0
  41bca4:	jmp    0x41bcb6
  41bca9:	mov    esi,DWORD PTR ds:0x42b00c
  41bcaf:	inc    esi
  41bcb0:	mov    DWORD PTR ds:0x42b00c,esi
  41bcb6:	cmp    DWORD PTR ds:0x42b00c,0x12
  41bcbd:	jae    0x41bcfb
  41bcc3:	cmp    DWORD PTR ds:0x42b00c,0xc
  41bcca:	jne    0x41bcdc
  41bcd0:	push   DWORD PTR [ebp-0x10]
  41bcd3:	push   DWORD PTR [ebp-0x28]
  41bcd6:	call   DWORD PTR ds:0x425034
  41bcdc:	cmp    DWORD PTR ds:0x42b00c,0xb
  41bce3:	jne    0x41bcf6
  41bce9:	mov    esi,DWORD PTR ds:0x42b00c
  41bcef:	inc    esi
  41bcf0:	mov    DWORD PTR ds:0x42b00c,esi
  41bcf6:	jmp    0x41bca9
  41bcfb:	mov    DWORD PTR [ebp-0x1c],eax
  41bcfe:	mov    eax,ds:0x424014
  41bd03:	mov    eax,DWORD PTR [eax+0x1c8]
  41bd09:	mov    eax,DWORD PTR [eax]
  41bd0b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bd0e:	mov    esi,0x7510893
  41bd13:	xor    eax,esi
  41bd15:	mov    edi,0x3272db
  41bd1a:	add    eax,edi
  41bd1c:	mov    DWORD PTR [ecx],eax
  41bd1e:	mov    eax,ds:0x424224
  41bd23:	cmp    eax,0x301ac8f5
  41bd28:	jne    0x41bd4f
  41bd2e:	mov    eax,DWORD PTR [ebp-0x4]
  41bd31:	mov    ecx,DWORD PTR ds:0x424014
  41bd37:	mov    ecx,DWORD PTR [ecx+0x198]
  41bd3d:	xor    eax,esi
  41bd3f:	add    eax,edi
  41bd41:	mov    DWORD PTR [ecx],eax
  41bd43:	mov    eax,DWORD PTR [ebp-0x4]
  41bd46:	xor    eax,esi
  41bd48:	add    eax,edi
  41bd4a:	mov    ds:0x424224,eax
  41bd4f:	mov    eax,ds:0x424014
  41bd54:	mov    eax,DWORD PTR [eax+0x18c]
  41bd5a:	mov    eax,DWORD PTR [eax]
  41bd5c:	mov    DWORD PTR [ebp-0x30],eax
  41bd5f:	mov    eax,0xf89c85ba
  41bd64:	mov    DWORD PTR [ebp-0x1c],eax
  41bd67:	mov    DWORD PTR [ebp-0x1c],eax
  41bd6a:	mov    DWORD PTR [ebp-0x1c],eax
  41bd6d:	mov    DWORD PTR [ebp-0x1c],ebx
  41bd70:	mov    DWORD PTR [ebp-0x38],eax
  41bd73:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  41bd7a:	mov    ebx,DWORD PTR [ebp-0x4]
  41bd7d:	mov    ecx,DWORD PTR [ebp-0x8]
  41bd80:	mov    edx,DWORD PTR [ebp-0x8]
  41bd83:	xor    edx,esi
  41bd85:	xor    ecx,esi
  41bd87:	add    ecx,edx
  41bd89:	mov    edx,DWORD PTR [ebp-0x8]
  41bd8c:	xor    ebx,esi
  41bd8e:	xor    edx,esi
  41bd90:	add    ebx,edi
  41bd92:	lea    ecx,[ecx+edx*1+0x975891]
  41bd99:	cmp    ebx,ecx
  41bd9b:	ja     0x41bdfc
  41bda1:	mov    eax,DWORD PTR [ebp-0x8]
  41bda4:	xor    eax,esi
  41bda6:	lea    eax,[eax+ebx*1+0x3272db]
  41bdad:	push   eax
  41bdae:	mov    eax,DWORD PTR [ebp-0x1c]
  41bdb1:	xor    eax,esi
  41bdb3:	lea    eax,[ebp+eax*1+0x3272e3]
  41bdba:	push   eax
  41bdbb:	mov    eax,ds:0x424014
  41bdc0:	push   DWORD PTR [eax+0x1bc]
  41bdc6:	call   0x40843e
  41bdcb:	mov    eax,DWORD PTR [ebp-0x8]
  41bdce:	xor    eax,esi
  41bdd0:	lea    ebx,[ebx+eax*1+0x3272db]
  41bdd7:	mov    eax,DWORD PTR [ebp-0x8]
  41bdda:	mov    ecx,DWORD PTR [ebp-0x8]
  41bddd:	xor    ecx,esi
  41bddf:	xor    eax,esi
  41bde1:	add    eax,ecx
  41bde3:	mov    ecx,DWORD PTR [ebp-0x8]
  41bde6:	xor    ecx,esi
  41bde8:	lea    eax,[eax+ecx*1+0x975891]
  41bdef:	cmp    ebx,eax
  41bdf1:	jbe    0x41bda1
  41bdf7:	mov    eax,0xf89c85ba
  41bdfc:	mov    ecx,DWORD PTR [ebp+0xc]
  41bdff:	mov    DWORD PTR ds:0x423e98,ecx
  41be05:	mov    ecx,DWORD PTR [ebp+0x10]
  41be08:	mov    DWORD PTR ds:0x4240ec,ecx
  41be0e:	mov    ecx,DWORD PTR ds:0x423e98
  41be14:	mov    edx,DWORD PTR [ebp-0x20]
  41be17:	sub    ecx,edi
  41be19:	xor    ecx,esi
  41be1b:	mov    DWORD PTR [edx],ecx
  41be1d:	mov    edx,DWORD PTR [ebp-0xc]
  41be20:	mov    ecx,0xf89c85b6
  41be25:	cmp    edx,ecx
  41be27:	jne    0x41be52
  41be2d:	lea    eax,[ebp-0x14]
  41be30:	mov    DWORD PTR [ebp-0x24],eax
  41be33:	lea    eax,[ebp+0x4]
  41be36:	mov    DWORD PTR [ebp-0x14],eax
  41be39:	mov    eax,DWORD PTR [ebp-0x14]
  41be3c:	test   eax,eax
  41be3e:	je     0x41bf67
  41be44:	mov    eax,DWORD PTR [ebp-0x10]
  41be47:	mov    eax,DWORD PTR [ebp-0x8]
  41be4a:	lea    eax,[ebp-0x24]
  41be4d:	jmp    0x41bf5e
  41be52:	mov    edx,DWORD PTR [ebp-0x28]
  41be55:	cmp    edx,0xf89c85b5
  41be5b:	je     0x41beb8
  41be61:	mov    edx,DWORD PTR [ebp-0x4]
  41be64:	mov    ebx,DWORD PTR [ebp-0x2c]
  41be67:	xor    edx,esi
  41be69:	add    edx,edi
  41be6b:	cmp    edx,ebx
  41be6d:	je     0x41beb8
  41be73:	mov    eax,ds:0x424014
  41be78:	mov    eax,DWORD PTR [eax+0x194]
  41be7e:	mov    ecx,DWORD PTR [eax]
  41be80:	mov    eax,DWORD PTR [ecx+0x3c]
  41be83:	push   DWORD PTR ds:0x4240ec
  41be89:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41be8d:	push   DWORD PTR ds:0x423e98
  41be93:	add    eax,ecx
  41be95:	mov    ecx,DWORD PTR ds:0x424014
  41be9b:	mov    ecx,DWORD PTR [ecx+0x194]
  41bea1:	push   DWORD PTR [ecx]
  41bea3:	call   eax
  41bea5:	mov    ecx,DWORD PTR ds:0x424014
  41beab:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41beb1:	mov    DWORD PTR [ecx],eax
  41beb3:	jmp    0x41bf67
  41beb8:	mov    edx,DWORD PTR [ebp-0x4]
  41bebb:	mov    ebx,DWORD PTR [ebp-0x30]
  41bebe:	xor    edx,esi
  41bec0:	add    edx,edi
  41bec2:	cmp    edx,ebx
  41bec4:	jne    0x41bf1d
  41beca:	mov    edx,DWORD PTR [ebp-0x4]
  41becd:	mov    ebx,DWORD PTR ds:0x424014
  41bed3:	mov    ebx,DWORD PTR [ebx+0x198]
  41bed9:	xor    edx,esi
  41bedb:	add    edx,edi
  41bedd:	cmp    edx,DWORD PTR [ebx]
  41bedf:	jne    0x41befa
  41bee5:	push   ecx
  41bee6:	mov    ecx,DWORD PTR [ebp-0x4]
  41bee9:	xor    ecx,esi
  41beeb:	add    ecx,edi
  41beed:	push   ecx
  41beee:	push   eax
  41beef:	push   DWORD PTR [ebp-0x8]
  41bef2:	push   DWORD PTR [ebp-0x4]
  41bef5:	call   0x416ab7
  41befa:	push   DWORD PTR [ebp-0x8]
  41befd:	push   DWORD PTR [ebp-0x4]
  41bf00:	call   0x41bf89
  41bf05:	mov    eax,DWORD PTR [ebp-0x4]
  41bf08:	xor    eax,esi
  41bf0a:	add    eax,edi
  41bf0c:	mov    ds:0x424098,eax
  41bf11:	mov    eax,DWORD PTR [ebp-0x4]
  41bf14:	xor    eax,esi
  41bf16:	add    eax,edi
  41bf18:	mov    ds:0x424090,eax
  41bf1d:	lea    eax,[ebp-0x18]
  41bf20:	mov    DWORD PTR [ebp-0x34],eax
  41bf23:	lea    eax,[ebp+0x4]
  41bf26:	mov    DWORD PTR [ebp-0x18],eax
  41bf29:	mov    eax,DWORD PTR [ebp-0x18]
  41bf2c:	test   eax,eax
  41bf2e:	je     0x41bf67
  41bf34:	mov    DWORD PTR [ebp-0x3c],0xf152c3d
  41bf3b:	mov    DWORD PTR [ebp-0x40],0x712ed08
  41bf42:	mov    DWORD PTR [ebp-0x44],0x373fc2e
  41bf49:	mov    DWORD PTR [ebp-0x48],0x72670a1e
  41bf50:	call   0x411f4d
  41bf55:	mov    eax,DWORD PTR [ebp-0x10]
  41bf58:	mov    eax,DWORD PTR [ebp-0x8]
  41bf5b:	lea    eax,[ebp-0x34]
  41bf5e:	push   eax
  41bf5f:	push   DWORD PTR [ebp-0x4]
  41bf62:	call   0x40f9a6
  41bf67:	mov    eax,ds:0x424014
  41bf6c:	push   0x4
  41bf6e:	add    eax,0x1cc
  41bf73:	push   eax
  41bf74:	lea    eax,[ebp-0x10]
  41bf77:	push   eax
  41bf78:	call   0x40843e
  41bf7d:	mov    eax,DWORD PTR [ebp-0x10]
  41bf80:	mov    eax,DWORD PTR [eax]
  41bf82:	pop    edi
  41bf83:	pop    esi
  41bf84:	pop    ebx
  41bf85:	leave  
  41bf86:	ret    0xc
  41bf89:	push   ebp
  41bf8a:	mov    ebp,esp
  41bf8c:	sub    esp,0x98
  41bf92:	mov    eax,DWORD PTR [ebp+0x8]
  41bf95:	inc    ecx
  41bf96:	push   ebx
  41bf97:	sbb    DWORD PTR ds:0x42a014,edx
  41bf9d:	push   esi
  41bf9e:	add    esi,esi
  41bfa0:	push   edi
  41bfa1:	and    DWORD PTR ds:0x42c014,0x0
  41bfab:	jmp    0x41bfbd
  41bfb0:	mov    edi,DWORD PTR ds:0x42c014
  41bfb6:	inc    edi
  41bfb7:	mov    DWORD PTR ds:0x42c014,edi
  41bfbd:	cmp    DWORD PTR ds:0x42c014,0x1f
  41bfc4:	jae    0x41c01b
  41bfca:	cmp    DWORD PTR ds:0x42c014,0xb
  41bfd1:	jne    0x41bfea
  41bfd7:	push   0x42456e
  41bfdc:	push   0x424500
  41bfe1:	push   DWORD PTR [ebp-0x1c]
  41bfe4:	call   DWORD PTR ds:0x42503c
  41bfea:	cmp    DWORD PTR ds:0x42c014,0xa
  41bff1:	jne    0x41c004
  41bff7:	mov    edi,DWORD PTR ds:0x42c014
  41bffd:	inc    edi
  41bffe:	mov    DWORD PTR ds:0x42c014,edi
  41c004:	jmp    0x41bfb0
  41c009:	mov    esi,DWORD PTR ds:0x42c000
  41c00f:	or     esi,DWORD PTR ds:0x42a000
  41c015:	mov    DWORD PTR ds:0x42c000,esi
  41c01b:	mov    esi,0x7510893
  41c020:	xor    eax,esi
  41c022:	mov    edi,DWORD PTR ds:0x423e44
  41c028:	mov    ecx,DWORD PTR ds:0x423e60
  41c02e:	sub    edi,ecx
  41c030:	sub    edi,DWORD PTR [edi+ecx*1]
  41c033:	mov    edi,0x3272db
  41c038:	add    eax,edi
  41c03a:	xor    ecx,0x38ef
  41c040:	mov    DWORD PTR [ebp-0x30],eax
  41c043:	mov    eax,ds:0x423e94
  41c048:	mov    DWORD PTR ds:0x429010,0x1f
  41c052:	cmp    DWORD PTR ds:0x429010,0x0
  41c059:	je     0x41c0ad
  41c05f:	cmp    DWORD PTR ds:0x429010,0xf
  41c066:	jne    0x41c081
  41c06c:	push   0x82e0
  41c071:	push   0x7826
  41c076:	push   0x30a6
  41c07b:	call   DWORD PTR ds:0x425040
  41c081:	cmp    DWORD PTR ds:0x429010,0x10
  41c088:	jne    0x41c09b
  41c08e:	mov    ecx,DWORD PTR ds:0x429010
  41c094:	dec    ecx
  41c095:	mov    DWORD PTR ds:0x429010,ecx
  41c09b:	mov    ecx,DWORD PTR ds:0x429010
  41c0a1:	dec    ecx
  41c0a2:	mov    DWORD PTR ds:0x429010,ecx
  41c0a8:	jmp    0x41c052
  41c0ad:	mov    eax,DWORD PTR [eax]
  41c0af:	add    ecx,DWORD PTR ds:0x42a01c
  41c0b5:	jmp    0x41e403
  41c0ba:	icebp  
  41c0bb:	push   ecx
  41c0bc:	inc    edi
  41c0bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0bf:	mov    ds:0x413825ab,eax
  41c0c4:	aaa    
  41c0c5:	and    al,0x37
  41c0c7:	imul   esp,ebx,0x61fd249e
  41c0cd:	bound  edx,QWORD PTR [ecx+0x5f]
  41c0d0:	bound  esp,QWORD PTR [edx+0x7]
  41c0d3:	shl    BYTE PTR [ebx+0x29],cl
  41c0d6:	sub    DWORD PTR [ebp-0x3965cabb],edi
  41c0dc:	lods   eax,DWORD PTR ds:[esi]
  41c0dd:	xor    eax,0x3df08d0e
  41c0e2:	xor    al,0x42
  41c0e4:	cld    
  41c0e5:	or     al,0x6a
  41c0e7:	lahf   
  41c0e8:	outs   dx,BYTE PTR ds:[esi]
  41c0e9:	imul   ebx,DWORD PTR [esi-0x10cc3af1],0xffffffcf
  41c0f0:	inc    esi
  41c0f1:	or     BYTE PTR [edi],bh
  41c0f3:	mov    edx,0x92595717
  41c0f8:	int    0xac
  41c0fa:	inc    ebx
  41c0fb:	rcl    BYTE PTR [esi],0x82
  41c0fe:	and    BYTE PTR [ebp+edx*4-0x9],bh
  41c102:	pop    ebp
  41c103:	push   ds
  41c104:	dec    esp
  41c105:	cmp    eax,0x992d6819
  41c10a:	sbb    bh,BYTE PTR [esi+0x6c]
  41c10d:	in     eax,0x8a
  41c10f:	aam    0xf8
  41c111:	aaa    
  41c112:	mov    ds:0xdebaedf8,al
  41c117:	xchg   ebx,eax
  41c118:	scas   al,BYTE PTR es:[edi]
  41c119:	cmp    eax,0x7af6fae6
  41c11e:	and    dl,BYTE PTR [esp+edi*8+0x2d]
  41c122:	or     eax,0x113acece
  41c127:	lds    edx,FWORD PTR [esi]
  41c129:	arpl   cx,bp
  41c12b:	jle    0x41c0da
  41c12d:	mov    eax,0x9df4405c
  41c132:	xor    edi,DWORD PTR [eax-0x6d]
  41c135:	dec    esi
  41c136:	push   0xd
  41c138:	inc    edi
  41c139:	mov    ecx,DWORD PTR [esi-0x43d1a8e6]
  41c13f:	repnz mov es,WORD PTR [ecx+0x443ce423]
  41c146:	out    dx,eax
  41c147:	int3   
  41c148:	test   al,0xe0
  41c14a:	mov    ds:0x933504af,eax
  41c14f:	add    cl,0x9d
  41c152:	fs scas eax,DWORD PTR es:[edi]
  41c154:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c155:	dec    edi
  41c156:	(bad)  
  41c157:	sub    ch,BYTE PTR ds:0xa69f537f
  41c15d:	xchg   ecx,eax
  41c15e:	add    BYTE PTR [edi+0x0],bh
  41c161:	jmp    0x8c17:0x6d338d20
  41c168:	enter  0x7a05,0x5a
  41c16c:	xor    eax,0x82e0a40a
  41c171:	xor    bh,bl
  41c173:	mov    BYTE PTR ds:0x7967ff13,cl
  41c179:	aas    
  41c17a:	(bad)  
  41c17b:	fninit 
  41c17d:	cli    
  41c17e:	adc    DWORD PTR [esi+0x2a64abc8],edi
  41c184:	shl    DWORD PTR [edi],0x8d
  41c187:	push   0x19acea6d
  41c18c:	mov    al,ds:0x1fecb127
  41c191:	and    esi,esp
  41c193:	icebp  
  41c194:	mov    ds:0x91744133,al
  41c199:	mov    eax,0xf87300e9
  41c19e:	xchg   ecx,eax
  41c19f:	and    eax,0xd55494ff
  41c1a4:	enter  0x2414,0x7f
  41c1a8:	jmp    FWORD PTR [ebx-0x77]
  41c1ab:	fld    st(3)
  41c1ad:	call   0xc7e4:0x26b382d0
  41c1b4:	and    al,0x6a
  41c1b6:	inc    edx
  41c1b7:	inc    ebp
  41c1b8:	or     BYTE PTR [ecx-0x68],0x73
  41c1bc:	int    0xe4
  41c1be:	cld    
  41c1bf:	jecxz  0x41c1e8
  41c1c1:	imul   BYTE PTR [ecx-0x1241c611]
  41c1c7:	jb     0x41c245
  41c1c9:	push   ebx
  41c1ca:	cs aaa 
  41c1cc:	push   0x74415780
  41c1d1:	mov    bl,0x1c
  41c1d3:	fsub   DWORD PTR [eax]
  41c1d5:	or     eax,esi
  41c1d7:	push   edx
  41c1d8:	cmp    al,0x8b
  41c1da:	pop    ss
  41c1db:	in     al,dx
  41c1dc:	in     al,0xc
  41c1de:	lock es out dx,eax
  41c1e1:	pop    ebp
  41c1e2:	scas   al,BYTE PTR es:[edi]
  41c1e3:	stos   BYTE PTR es:[edi],al
  41c1e4:	(bad)  
  41c1e5:	dec    edi
  41c1e6:	inc    ebx
  41c1e7:	sub    eax,0xc00326d3
  41c1ec:	dec    edx
  41c1ed:	imul   edi,DWORD PTR [edx],0xffffffb8
  41c1f0:	je     0x41c19e
  41c1f2:	outs   dx,BYTE PTR ds:[esi]
  41c1f3:	pop    ecx
  41c1f4:	jns    0x41c190
  41c1f6:	mov    es,ecx
  41c1f8:	imul   edi,DWORD PTR [edx],0x33448a65
  41c1fe:	scas   al,BYTE PTR es:[edi]
  41c1ff:	push   ebp
  41c200:	add    BYTE PTR [edx+ecx*4+0x1a],bh
  41c204:	lds    ecx,FWORD PTR [ebp+0x525152ac]
  41c20a:	(bad)  
  41c20b:	sbb    DWORD PTR [eax+0x535ca75a],eax
  41c211:	enter  0xc7fe,0x49
  41c215:	das    
  41c216:	scas   al,BYTE PTR es:[edi]
  41c217:	pushf  
  41c218:	jb     0x41c24d
  41c21a:	sahf   
  41c21b:	in     al,dx
  41c21c:	scas   eax,DWORD PTR es:[edi]
  41c21d:	leave  
  41c21e:	pop    ecx
  41c21f:	sub    DWORD PTR [esi],0x5f3e75fe
  41c225:	test   DWORD PTR [esi-0x3c],esi
  41c228:	fistp  WORD PTR [ebp-0x23]
  41c22b:	test   al,0x83
  41c22d:	call   0xbd8d:0x69277d9d
  41c234:	stos   DWORD PTR es:[edi],eax
  41c235:	mov    ebp,0x6935b0fa
  41c23a:	aad    0xc4
  41c23c:	jg     0x41c237
  41c23e:	arpl   WORD PTR [ebp-0x108a17d9],dx
  41c244:	fbld   TBYTE PTR [edx-0x392cbe97]
  41c24a:	inc    esi
  41c24b:	(bad)  
  41c24c:	mov    ch,0x3
  41c24e:	or     ch,BYTE PTR [edx]
  41c250:	jb     0x41c240
  41c252:	mov    esp,DWORD PTR [ebp-0x1184e715]
  41c258:	dec    edi
  41c259:	and    ebp,ecx
  41c25b:	dec    ecx
  41c25c:	out    dx,eax
  41c25d:	dec    ecx
  41c25e:	and    al,0x76
  41c260:	xor    DWORD PTR [edx-0x18b515e8],esp
  41c266:	outs   dx,DWORD PTR ds:[esi]
  41c267:	sub    DWORD PTR [edi-0x39],eax
  41c26a:	repz es pop ecx
  41c26d:	mov    ebp,0x8c8fa873
  41c272:	mov    ch,0x85
  41c274:	cdq    
  41c275:	xchg   esi,eax
  41c276:	lahf   
  41c277:	nop
  41c278:	jmp    0x279c:0x5eb9c6e8
  41c27f:	in     eax,0xbb
  41c281:	ss pop ecx
  41c283:	xchg   edi,eax
  41c284:	ss push 0xbd6d7bff
  41c28a:	addr16 jb 0x41c2d1
  41c28d:	popa   
  41c28e:	push   cs
  41c28f:	lds    ecx,FWORD PTR [ebx+0x715ee46c]
  41c295:	xor    edi,DWORD PTR [eax]
  41c297:	repnz adc al,0xd0
  41c29a:	popf   
  41c29b:	mov    dl,0x1
  41c29d:	test   al,0x8
  41c2a0:	push   edx
  41c2a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2a2:	std    
  41c2a3:	in     eax,0x18
  41c2a5:	xchg   DWORD PTR [eax+0x1de42f90],ebx
  41c2ab:	pop    ebx
  41c2ac:	fld    TBYTE PTR [esi+ebp*8]
  41c2af:	aam    0x2
  41c2b1:	and    al,BYTE PTR [esi+0x428241cb]
  41c2b7:	mov    eax,0xf2ce0462
  41c2bc:	leave  
  41c2bd:	mov    dh,0xfc
  41c2bf:	jge    0x41c312
  41c2c1:	daa    
  41c2c2:	push   edx
  41c2c3:	push   ecx
  41c2c4:	inc    edi
  41c2c5:	sub    ch,bh
  41c2c7:	je     0x41c283
  41c2c9:	aaa    
  41c2ca:	dec    ebx
  41c2cb:	mov    ds:0x870bb19d,al
  41c2d0:	addr16 icebp 
  41c2d2:	rcr    ah,cl
  41c2d4:	loopne 0x41c29f
  41c2d6:	pop    esp
  41c2d7:	pop    edi
  41c2d8:	xchg   edi,eax
  41c2d9:	aas    
  41c2da:	dec    edi
  41c2db:	aam    0xc4
  41c2dd:	popa   
  41c2de:	aad    0x5e
  41c2e0:	jb     0x41c320
  41c2e2:	stos   BYTE PTR es:[edi],al
  41c2e3:	cmp    esp,DWORD PTR [edi+0x4129e1ef]
  41c2e9:	pop    ebp
  41c2ea:	imul   edx,DWORD PTR [esi-0xb],0xda71397a
  41c2f1:	sub    eax,0xcfeffef0
  41c2f6:	and    cl,BYTE PTR [ebx-0x53f4e337]
  41c2fc:	push   eax
  41c2fd:	call   0x4d01:0x7ecd9439
  41c304:	outs   dx,BYTE PTR ds:[esi]
  41c305:	fcmovnu st,st(5)
  41c307:	mov    ah,ah
  41c309:	in     eax,dx
  41c30a:	fs push esi
  41c30c:	in     eax,dx
  41c30d:	pop    ecx
  41c30e:	and    al,0xf2
  41c310:	and    ebx,DWORD PTR [edx+0x6ef13710]
  41c316:	sbb    al,0x16
  41c318:	jle    0x41c2a0
  41c31a:	aaa    
  41c31b:	xor    eax,0x4ef074fb
  41c320:	jae    0x41c3a0
  41c322:	loopne 0x41c2be
  41c324:	pop    ecx
  41c325:	mov    BYTE PTR [eax+0x4bc9fcbe],cl
  41c32b:	int    0xce
  41c32d:	das    
  41c32e:	daa    
  41c32f:	ss ins BYTE PTR es:[edi],dx
  41c331:	mov    esp,0x6aab8eb4
  41c336:	jmp    0x955e:0x96eaaea
  41c33d:	dec    esp
  41c33e:	xchg   edx,eax
  41c33f:	pop    eax
  41c340:	and    eax,0x3001d17d
  41c345:	loop   0x41c3a0
  41c347:	adc    al,0x74
  41c349:	cmp    BYTE PTR [edi-0xf],0xd
  41c34d:	in     al,0xb1
  41c34f:	loop   0x41c3ac
  41c351:	scas   eax,DWORD PTR es:[edi]
  41c352:	dec    eax
  41c353:	xchg   edx,eax
  41c354:	sbb    eax,0x31d9d1bb
  41c359:	loop   0x41c365
  41c35b:	shr    DWORD PTR [ebp-0x21],1
  41c35e:	aam    0x9
  41c360:	sub    DWORD PTR [esi+0x42eaa9b7],eax
  41c366:	add    al,0xad
  41c368:	sbb    al,BYTE PTR [ecx]
  41c36a:	fdivr  st(7),st
  41c36c:	or     al,0x6f
  41c36e:	shr    DWORD PTR [ecx],0xd0
  41c371:	das    
  41c372:	fdivr  st,st(3)
  41c374:	push   ds
  41c375:	popf   
  41c376:	popa   
  41c377:	int3   
  41c378:	js     0x41c32a
  41c37a:	faddp  st(7),st
  41c37c:	pushf  
  41c37d:	(bad)  
  41c37e:	repnz sbb al,ah
  41c381:	or     eax,eax
  41c383:	xchg   esi,eax
  41c384:	pop    ds
  41c385:	nop
  41c386:	stos   BYTE PTR es:[edi],al
  41c387:	lea    esi,[ebp+esi*1-0x78]
  41c38b:	add    al,dl
  41c38d:	jne    0x41c320
  41c38f:	mov    bh,BYTE PTR [edi+0x1cfad73]
  41c395:	inc    eax
  41c396:	push   0xffffff93
  41c398:	xchg   esp,eax
  41c399:	mov    edx,0x9ce77368
  41c39e:	mov    ch,0xbc
  41c3a0:	pusha  
  41c3a1:	cmp    al,0x3d
  41c3a3:	push   ecx
  41c3a4:	aam    0x5b
  41c3a6:	data16 je 0x41c39f
  41c3a9:	mov    ah,0xf6
  41c3ab:	cmp    DWORD PTR [eax-0x5b8711d7],esi
  41c3b1:	cld    
  41c3b2:	stc    
  41c3b3:	xchg   ebp,eax
  41c3b4:	mov    WORD PTR [ebx-0x1b39367f],ds
  41c3ba:	mov    bh,0xb6
  41c3bc:	enter  0x8457,0x40
  41c3c0:	add    BYTE PTR [esi],ch
  41c3c2:	es hlt 
  41c3c4:	mov    bl,0xca
  41c3c6:	lahf   
  41c3c7:	or     BYTE PTR [edx],dl
  41c3c9:	and    DWORD PTR [edx+0x327a7aa7],ecx
  41c3cf:	retf   
  41c3d0:	adc    dh,BYTE PTR [eax-0x56]
  41c3d3:	mov    eax,ds:0xb58ec6ac
  41c3d8:	(bad)  [ebx-0xc]
  41c3db:	jmp    0xe930:0xbc2ceefd
  41c3e2:	jmp    0xee81713b
  41c3e7:	call   DWORD PTR [ebx+0x4f]
  41c3ea:	adc    eax,ebp
  41c3ec:	jae    0x41c42d
  41c3ee:	add    DWORD PTR [ebx+0x3c],0x7d0031c6
  41c3f5:	lds    edx,FWORD PTR [ebx]
  41c3f7:	mov    edx,eax
  41c3f9:	in     eax,dx
  41c3fa:	enter  0xc55f,0x90
  41c3fe:	outs   dx,DWORD PTR ds:[esi]
  41c3ff:	ins    DWORD PTR es:[edi],dx
  41c400:	popa   
  41c401:	add    DWORD PTR [eax-0x43],0xffffff87
  41c405:	dec    ebx
  41c406:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c407:	mov    al,ds:0x27cc91b0
  41c40c:	mov    BYTE PTR [edi+esi*2-0x77],dh
  41c410:	and    ah,BYTE PTR [esi-0x51b14d20]
  41c416:	jbe    0x41c470
  41c418:	pop    esp
  41c419:	shr    DWORD PTR [edi+0x60a7759e],1
  41c41f:	retf   0xf2e5
  41c422:	cmp    ch,BYTE PTR [ecx+0x6dda3cd5]
  41c428:	xor    BYTE PTR [eax+esi*1],cl
  41c42b:	cmp    eax,ebx
  41c42d:	imul   eax,DWORD PTR [edx+0x39ad85f5],0xd797dbc1
  41c437:	adc    DWORD PTR [ecx+0xf],edx
  41c43a:	std    
  41c43b:	sub    bl,cl
  41c43d:	and    BYTE PTR [esi-0x3bc715cb],dh
  41c443:	int3   
  41c444:	cmp    BYTE PTR [esi+0x6c6e9a94],0x1d
  41c44b:	sub    DWORD PTR [ebp-0x31135e03],0x0
  41c452:	add    BYTE PTR [esi+0x18a0a133],0x65
  41c459:	mov    bh,0xff
  41c45b:	push   ecx
  41c45c:	(bad)  
  41c45d:	mov    WORD PTR [edi+0x4a848796],cs
  41c463:	repnz inc ebp
  41c465:	jmp    0x8134:0x2e78d1e7
  41c46c:	jno    0x41c45e
  41c46e:	jmp    0x9e64d016
  41c473:	pop    ebp
  41c474:	popf   
  41c475:	pop    esi
  41c476:	stos   DWORD PTR es:[edi],eax
  41c477:	add    edi,DWORD PTR ds:0xdff4ac28
  41c47d:	pop    esp
  41c47e:	xchg   edi,eax
  41c47f:	xor    al,0x22
  41c481:	jae    0x41c4a0
  41c483:	sbb    DWORD PTR [edi+0x72ec0496],edi
  41c489:	or     cl,BYTE PTR [ebx]
  41c48b:	icebp  
  41c48c:	jecxz  0x41c45b
  41c48e:	loope  0x41c459
  41c490:	inc    ecx
  41c491:	push   ebp
  41c492:	adc    eax,0xd365dc56
  41c497:	lock ja 0x41c4a2
  41c49a:	fucomi st,st(0)
  41c49c:	add    bh,BYTE PTR [ecx]
  41c49e:	arpl   cx,bp
  41c4a0:	and    eax,0x2f0e73a3
  41c4a5:	enter  0xee30,0x25
  41c4a9:	or     edi,DWORD PTR [ebx-0x2e3a9ba5]
  41c4af:	cmp    DWORD PTR [ecx],eax
  41c4b1:	jae    0x41c44c
  41c4b3:	pop    ecx
  41c4b4:	mov    eax,ds:0x312f8fbb
  41c4b9:	fcomp  DWORD PTR [edi]
  41c4bb:	and    ebp,ebx
  41c4bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4be:	sub    edx,edi
  41c4c0:	ret    
  41c4c1:	sti    
  41c4c2:	scas   al,BYTE PTR es:[edi]
  41c4c3:	cmp    bl,cl
  41c4c5:	les    ebp,FWORD PTR [eax+0x1b]
  41c4c8:	out    0xdd,al
  41c4ca:	je     0x41c45a
  41c4cc:	xchg   ecx,eax
  41c4cd:	bound  edi,QWORD PTR [ecx-0x47]
  41c4d0:	jl     0x41c467
  41c4d2:	mov    cl,BYTE PTR [edx+ecx*4+0x67f8618e]
  41c4d9:	jl     0x41c46b
  41c4db:	add    eax,0x785697a0
  41c4e0:	mov    eax,ds:0xf8ce2f50
  41c4e5:	inc    eax
  41c4e6:	ds sbb al,cl
  41c4e9:	push   ds
  41c4ea:	inc    ebx
  41c4eb:	sbb    eax,0x491c3d15
  41c4f0:	fidiv  WORD PTR [ecx-0x58]
  41c4f3:	cwde   
  41c4f4:	sti    
  41c4f5:	push   0xffffffde
  41c4f7:	inc    ebp
  41c4f8:	push   edx
  41c4f9:	js     0x41c525
  41c4fb:	mov    bl,0x18
  41c4fd:	ja     0x41c4a8
  41c4ff:	retf   
  41c500:	jecxz  0x41c580
  41c502:	aas    
  41c503:	mov    edx,0x9d4e6b6f
  41c508:	and    al,0x61
  41c50a:	mov    ch,0xcd
  41c50c:	xchg   BYTE PTR [esi-0x17],ah
  41c50f:	loope  0x41c579
  41c511:	int3   
  41c512:	cli    
  41c513:	loopne 0x41c539
  41c515:	adc    BYTE PTR [ecx-0x7f],cl
  41c518:	add    DWORD PTR [eax+0x25],ebx
  41c51b:	hlt    
  41c51c:	jp     0x41c587
  41c51e:	fcmovu st,st(2)
  41c520:	inc    esi
  41c521:	push   0xa
  41c523:	and    BYTE PTR [edx-0x62cfe9f3],0xc4
  41c52a:	jle    0x41c53e
  41c52c:	and    eax,0x5ca6317b
  41c531:	adc    al,0x84
  41c533:	pop    es
  41c534:	adc    eax,0x19b7bf82
  41c539:	(bad)  
  41c53a:	jne    0x41c52a
  41c53c:	loop   0x41c583
  41c53e:	lock imul dl
  41c541:	jmp    0x41c4d4
  41c543:	cmp    BYTE PTR [eax+ebx*8+0x78],dh
  41c547:	rcr    ecx,1
  41c549:	or     BYTE PTR [ebx-0x266d7592],ch
  41c54f:	sbb    edi,eax
  41c551:	idiv   DWORD PTR [edi-0x36220f]
  41c557:	pop    sp
  41c559:	adc    BYTE PTR [edi-0x51250ff],0x8e
  41c560:	popf   
  41c561:	pop    eax
  41c562:	stos   DWORD PTR es:[edi],eax
  41c563:	imul   ebp,ebp,0x4
  41c566:	repnz xor DWORD PTR [edx-0x14805ed2],ebp
  41c56d:	repz test al,0xce
  41c570:	mov    esi,0xfec740ca
  41c575:	mov    ebx,0x413b12eb
  41c57a:	nop
  41c57b:	xor    eax,DWORD PTR [eax]
  41c57d:	jno    0x41c5c4
  41c57f:	jo     0x41c592
  41c581:	mov    ebx,DWORD PTR [edx-0x68c952da]
  41c587:	adc    al,bl
  41c589:	shl    edi,0x81
  41c58c:	leave  
  41c58d:	imul   esp,eax,0x52
  41c590:	fsubr  QWORD PTR [ecx-0x3]
  41c593:	xor    bh,dh
  41c595:	push   edi
  41c596:	not    DWORD PTR [ebp+0x18f813fb]
  41c59c:	push   cs
  41c59d:	call   0x77de:0x5462b3d3
  41c5a4:	lds    esi,FWORD PTR [esi]
  41c5a6:	loop   0x41c621
  41c5a8:	mov    fs,WORD PTR [ebx+0x1]
  41c5ab:	xchg   ebp,eax
  41c5ac:	push   es
  41c5ad:	(bad)  
  41c5ae:	out    0x6c,al
  41c5b0:	loop   0x41c593
  41c5b2:	std    
  41c5b3:	inc    eax
  41c5b4:	ja     0x41c585
  41c5b6:	faddp  st(5),st
  41c5b8:	sar    BYTE PTR [esi-0x32a36919],cl
  41c5be:	in     eax,0xa2
  41c5c0:	dec    eax
  41c5c1:	sub    al,0xfa
  41c5c3:	adc    eax,0xfab663f9
  41c5c8:	mov    ch,0xbc
  41c5ca:	popf   
  41c5cb:	xchg   ebx,edx
  41c5cd:	cmp    ecx,DWORD PTR [ebx+0x7bc89302]
  41c5d3:	xor    BYTE PTR [ebx],cl
  41c5d5:	arpl   WORD PTR [edx+eiz*1+0x40651701],dx
  41c5dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5de:	imul   ebx,DWORD PTR [edi+0x75dd2928],0x54978f17
  41c5e8:	mov    esi,0xc1bad2aa
  41c5ed:	stos   DWORD PTR es:[edi],eax
  41c5ee:	stc    
  41c5ef:	and    dl,cl
  41c5f1:	jge    0x41c630
  41c5f3:	dec    eax
  41c5f4:	ja     0x41c64f
  41c5f6:	push   cs
  41c5f7:	pusha  
  41c5f8:	retf   
  41c5f9:	jp     0x41c62e
  41c5fb:	es (bad) 
  41c5fd:	sub    al,0xf4
  41c5ff:	mov    ah,0x5e
  41c601:	inc    edx
  41c602:	repz out 0xfb,al
  41c605:	out    0x38,eax
  41c607:	push   cs
  41c608:	je     0x41c5c1
  41c60a:	mov    edi,0xeb7ab0f9
  41c60f:	rol    DWORD PTR [esp+ecx*2],0xd2
  41c613:	lock add BYTE PTR [ecx+0x17918779],bl
  41c61a:	sub    DWORD PTR [eax],ebp
  41c61c:	add    cl,bh
  41c61e:	mov    cl,BYTE PTR [esi]
  41c620:	rcl    ebp,1
  41c622:	pop    esp
  41c623:	adc    BYTE PTR [esp+ebp*1+0xa],cl
  41c627:	mov    ch,0x7f
  41c629:	dec    edi
  41c62a:	cdq    
  41c62b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c62c:	mov    dl,0x45
  41c62e:	inc    ebp
  41c62f:	cmp    edi,ebp
  41c631:	ret    
  41c632:	sahf   
  41c633:	and    DWORD PTR [edi+0x1ea23166],0x24ffb25b
  41c63d:	add    bl,dl
  41c63f:	push   ebp
  41c640:	fimul  WORD PTR [eax-0x2ffe44d8]
  41c646:	push   ebp
  41c647:	sbb    bh,bh
  41c649:	retf   0x15ee
  41c64c:	leave  
  41c64d:	sbb    edi,DWORD PTR [edi+0x5abef7fe]
  41c653:	fdivr  DWORD PTR [esi-0x19]
  41c656:	mov    ah,dl
  41c658:	das    
  41c659:	std    
  41c65a:	adc    dl,BYTE PTR [edx-0x2d9041ab]
  41c660:	int    0xe5
  41c662:	jb     0x41c69f
  41c664:	push   ss
  41c665:	out    dx,al
  41c666:	push   es
  41c667:	(bad)  
  41c668:	arpl   WORD PTR [esi+ecx*2-0x6b],bp
  41c66c:	cmp    DWORD PTR [ebp+0x7f36c363],esp
  41c672:	out    0x41,eax
  41c674:	sub    esi,DWORD PTR [edi-0x25]
  41c677:	ja     0x41c6c4
  41c679:	xor    eax,0x888a49d8
  41c67e:	addr16 mov ebp,0x6376825e
  41c684:	loope  0x41c6ae
  41c686:	jg     0x41c671
  41c688:	hlt    
  41c689:	dec    ecx
  41c68a:	inc    ecx
  41c68b:	dec    edx
  41c68c:	mov    eax,ds:0x7f4314be
  41c691:	xchg   edx,eax
  41c692:	(bad)  
  41c693:	in     al,dx
  41c694:	xchg   ch,bh
  41c696:	shr    BYTE PTR [ebx+0x31],cl
  41c699:	rcl    ah,1
  41c69b:	cdq    
  41c69c:	adc    DWORD PTR [eax-0x11],0x6bed0689
  41c6a3:	or     ch,0xcb
  41c6a6:	xchg   esp,eax
  41c6a7:	loop   0x41c6d6
  41c6a9:	cmp    BYTE PTR [eax-0x5e],al
  41c6ac:	leave  
  41c6ad:	dec    ebp
  41c6ae:	mov    al,0x29
  41c6b0:	jg     0x41c6c0
  41c6b2:	dec    edx
  41c6b3:	xlat   BYTE PTR ds:[ebx]
  41c6b4:	test   ecx,edx
  41c6b6:	out    0x1f,al
  41c6b8:	sbb    DWORD PTR [ecx+0x16bf06e7],0xffffffe0
  41c6bf:	sbb    ch,ch
  41c6c1:	clc    
  41c6c2:	cdq    
  41c6c3:	aas    
  41c6c4:	repnz dec esi
  41c6c6:	stos   BYTE PTR es:[edi],al
  41c6c7:	icebp  
  41c6c8:	dec    ebp
  41c6c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6ca:	inc    eax
  41c6cb:	test   al,0x1f
  41c6cd:	cmovbe ecx,DWORD PTR [eax+0x71]
  41c6d1:	mov    ah,0x3f
  41c6d3:	inc    edi
  41c6d4:	push   edi
  41c6d5:	jnp    0x41c6af
  41c6d7:	cmp    bl,BYTE PTR [edi]
  41c6d9:	sahf   
  41c6da:	dec    esp
  41c6db:	clc    
  41c6dc:	pop    ds
  41c6dd:	stc    
  41c6de:	gs push edi
  41c6e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6e1:	jg     0x41c6e8
  41c6e3:	stc    
  41c6e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6e5:	xchg   DWORD PTR [esi-0x610f4fab],eax
  41c6eb:	(bad)
  41c6ef:	loop   0x41c701
  41c6f1:	jmp    0x41c739
  41c6f3:	push   edx
  41c6f4:	into   
  41c6f5:	sub    bh,bl
  41c6f7:	fimul  DWORD PTR [esi+eax*1-0x47]
  41c6fb:	lahf   
  41c6fc:	ret    
  41c6fd:	jmp    0x41c73d
  41c6ff:	add    ebx,DWORD PTR [edi+0x58]
  41c702:	pop    edx
  41c703:	add    eax,0xb9588727
  41c708:	mov    BYTE PTR [esi+0x50],bl
  41c70b:	lock dec eax
  41c70d:	ins    BYTE PTR es:[edi],dx
  41c70e:	es hlt 
  41c710:	adc    ebx,ecx
  41c712:	test   ecx,ebx
  41c714:	push   0x4e
  41c716:	push   ecx
  41c717:	sub    al,0xad
  41c719:	add    dh,ah
  41c71b:	xor    dl,BYTE PTR [eax-0x4b]
  41c71e:	inc    edi
  41c71f:	xor    ebx,DWORD PTR [ebx]
  41c721:	leave  
  41c722:	push   esp
  41c723:	or     eax,0x2340c3a7
  41c728:	mov    edx,0xf47158e5
  41c72d:	push   ds
  41c72e:	mov    edi,0xd2a19255
  41c733:	sub    ecx,DWORD PTR [edi]
  41c735:	or     ecx,edi
  41c737:	mov    edi,0x2462789d
  41c73c:	xchg   ecx,eax
  41c73d:	fld    TBYTE PTR [ecx]
  41c73f:	in     al,dx
  41c740:	inc    ebp
  41c741:	mov    al,fs:0x1b9d59bf
  41c747:	aas    
  41c748:	fidiv  DWORD PTR [ecx]
  41c74a:	xchg   esi,eax
  41c74b:	xor    BYTE PTR [edi+0x56fc2a84],al
  41c751:	frstor [edx+0x124153b7]
  41c757:	daa    
  41c758:	je     0x41c6f9
  41c75a:	jmp    0x39d98c9c
  41c75f:	dec    edx
  41c760:	dec    eax
  41c761:	inc    edi
  41c762:	push   eax
  41c763:	jo     0x41c7e2
  41c765:	jmp    0xa17ee01e
  41c76a:	sub    edx,DWORD PTR [ebx+0x26]
  41c76d:	fs retf 0x4651
  41c771:	test   DWORD PTR [ebx+0x26e790d2],0xed9bab4f
  41c77b:	xchg   esp,eax
  41c77c:	out    0xcc,al
  41c77e:	daa    
  41c77f:	shl    DWORD PTR [ebx+0x17],0x13
  41c783:	inc    esp
  41c784:	or     eax,0x5b8987fd
  41c789:	xor    eax,0x72f3a28d
  41c78e:	popf   
  41c78f:	outs   dx,BYTE PTR ds:[esi]
  41c790:	rol    DWORD PTR [esi-0x80],0x96
  41c794:	adc    DWORD PTR [ebx+0x1c1b0aa],esi
  41c79a:	ds fwait
  41c79c:	pop    edx
  41c79d:	popa   
  41c79e:	pop    ds
  41c79f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7a0:	es add al,0x5b
  41c7a3:	jg     0x41c794
  41c7a5:	dec    edi
  41c7a6:	mov    bh,0xa
  41c7a8:	gs jmp 0x41c744
  41c7ab:	(bad)  
  41c7ac:	sbb    al,BYTE PTR [ebp+edi*8-0x2214327d]
  41c7b3:	cpuid  
  41c7b5:	pop    ds
  41c7b6:	out    dx,eax
  41c7b7:	into   
  41c7b8:	add    al,0xf6
  41c7ba:	pop    edi
  41c7bb:	pop    ebp
  41c7bc:	cli    
  41c7bd:	ret    0xec16
  41c7c0:	cmp    ah,BYTE PTR [edi-0x1b0a10f7]
  41c7c6:	xchg   esi,eax
  41c7c7:	stc    
  41c7c8:	rcl    BYTE PTR [ecx-0xb025769],cl
  41c7ce:	daa    
  41c7cf:	add    al,0xf1
  41c7d1:	xchg   ebx,eax
  41c7d2:	mov    esi,DWORD PTR [ebx]
  41c7d4:	jecxz  0x41c84c
  41c7d6:	dec    edi
  41c7d7:	pop    edi
  41c7d8:	test   DWORD PTR [ebx-0x4a],0x2e4e9a93
  41c7df:	push   0xffffffd7
  41c7e1:	lahf   
  41c7e2:	add    BYTE PTR [edx-0x20],ah
  41c7e5:	dec    esp
  41c7e6:	dec    esp
  41c7e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7e8:	xchg   esp,eax
  41c7e9:	jb     0x41c790
  41c7eb:	test   al,0x4a
  41c7ed:	cs pop eax
  41c7ef:	fisttp DWORD PTR [esi-0x1c]
  41c7f2:	inc    esp
  41c7f3:	aaa    
  41c7f4:	xchg   BYTE PTR [ebx+0x63],dh
  41c7f7:	mov    esi,0x5b88b2a6
  41c7fc:	jge    0x41c77e
  41c7fe:	(bad)
  41c803:	fsub   DWORD PTR [ebp-0x3188828d]
  41c809:	fisub  WORD PTR [ebx]
  41c80b:	or     eax,0x69aa9ead
  41c810:	clc    
  41c811:	ins    DWORD PTR es:[edi],dx
  41c812:	cdq    
  41c813:	sub    BYTE PTR [ebx-0x5abe33e3],cl
  41c819:	pop    ecx
  41c81a:	mov    eax,0x926646a2
  41c81f:	push   ss
  41c820:	xor    DWORD PTR [eax+0x4303a028],edi
  41c826:	cld    
  41c827:	and    eax,0xe5b207fd
  41c82c:	xor    al,0x7b
  41c82e:	xor    eax,0x95c5f626
  41c833:	jp     0x41c80d
  41c835:	in     al,dx
  41c836:	cmp    edx,DWORD PTR [ecx]
  41c838:	test   al,0xec
  41c83a:	inc    edi
  41c83b:	sub    edi,DWORD PTR [eax+0x41]
  41c83e:	imul   edi,DWORD PTR [ebp-0x236cf1b9],0x56
  41c845:	xor    DWORD PTR [edx+ebx*1],0xffffffb6
  41c849:	sbb    BYTE PTR [eax-0x23],dl
  41c84c:	push   edx
  41c84d:	fidivr DWORD PTR fs:[ebx-0x23]
  41c851:	jl     0x41c8c2
  41c853:	outs   dx,DWORD PTR ds:[esi]
  41c854:	pop    edx
  41c855:	xchg   edx,eax
  41c856:	push   ds
  41c857:	and    edi,DWORD PTR [eax]
  41c859:	repnz test eax,0xac610ebf
  41c85f:	or     al,BYTE PTR [edi+edx*1]
  41c862:	push   ebp
  41c863:	mov    bh,BYTE PTR [edx+0x5b81c50b]
  41c869:	mov    ah,0x22
  41c86b:	mov    ebx,0x70cab329
  41c870:	pop    es
  41c871:	or     BYTE PTR [ecx+ebp*4-0x7],dh
  41c875:	xchg   DWORD PTR [edx+0x5ec8cfb1],edx
  41c87b:	addr16 dec edi
  41c87d:	xor    eax,0x34863e98
  41c882:	push   ds
  41c883:	neg    BYTE PTR [eax+0x5dd6553]
  41c889:	out    dx,eax
  41c88a:	xrelease xchg DWORD PTR [ecx],ecx
  41c88d:	xor    al,0x3a
  41c88f:	int3   
  41c890:	sahf   
  41c891:	sub    bl,BYTE PTR [eax-0x1a30b901]
  41c897:	and    ah,ah
  41c899:	pusha  
  41c89a:	das    
  41c89b:	pop    ss
  41c89c:	dec    ebx
  41c89d:	out    0x3c,al
  41c89f:	mov    dh,ch
  41c8a1:	xor    BYTE PTR [ecx+0x45608f07],dl
  41c8a7:	das    
  41c8a8:	into   
  41c8a9:	pusha  
  41c8aa:	ins    BYTE PTR es:[edi],dx
  41c8ab:	addr16 in al,dx
  41c8ad:	lahf   
  41c8ae:	sub    BYTE PTR [edi-0x520ed28b],cl
  41c8b4:	xlat   BYTE PTR ds:[ebx]
  41c8b5:	sub    eax,0xc4bbf139
  41c8ba:	fucomip st,st(6)
  41c8bc:	mov    ebx,eax
  41c8be:	(bad)  
  41c8bf:	xor    al,0xd7
  41c8c1:	shr    ebx,0x49
  41c8c4:	ror    ecx,0x21
  41c8c7:	mov    DWORD PTR [ebp-0x2b8f3842],0xe50b9d9
  41c8d1:	nop
  41c8d2:	or     ebx,DWORD PTR [esi-0x336a8168]
  41c8d8:	mov    esi,0x81950902
  41c8dd:	sbb    DWORD PTR [ecx+0xf],esi
  41c8e0:	sahf   
  41c8e1:	pop    ebp
  41c8e2:	outs   dx,BYTE PTR ds:[esi]
  41c8e3:	icebp  
  41c8e4:	pop    es
  41c8e5:	cmc    
  41c8e6:	je     0x41c8d9
  41c8e8:	mov    bl,BYTE PTR [eax+0x3d]
  41c8eb:	xchg   edi,eax
  41c8ec:	inc    esi
  41c8ed:	test   eax,0x2df66e37
  41c8f2:	dec    esi
  41c8f3:	push   edx
  41c8f4:	dec    eax
  41c8f5:	in     eax,0xd5
  41c8f7:	push   ecx
  41c8f8:	add    dh,cl
  41c8fa:	xchg   ebx,eax
  41c8fb:	es daa 
  41c8fd:	ret    
  41c8fe:	jne    0x41c8e1
  41c900:	ret    0xbef4
  41c903:	dec    ebx
  41c904:	jecxz  0x41c95f
  41c906:	repz fcom QWORD PTR [esi-0x581bf20d]
  41c90d:	pushf  
  41c90e:	aam    0x3f
  41c910:	push   eax
  41c911:	rcr    DWORD PTR [ecx],cl
  41c913:	test   al,0xa1
  41c915:	pop    ecx
  41c916:	das    
  41c917:	jnp    0x41c965
  41c919:	lea    ecx,[ecx-0x35b6675b]
  41c91f:	mov    bh,0x5
  41c921:	xchg   edi,eax
  41c922:	or     bl,BYTE PTR [ebp+0x48ddca34]
  41c928:	dec    ebx
  41c929:	sbb    al,BYTE PTR [ebp+0x519b75c2]
  41c92f:	scas   eax,DWORD PTR es:[edi]
  41c930:	add    ah,BYTE PTR [ebx+0x298eb70b]
  41c936:	fcmovbe st,st(0)
  41c938:	cwde   
  41c939:	cli    
  41c93a:	xor    ch,BYTE PTR ds:0x462be34
  41c940:	nop
  41c941:	xchg   ebp,eax
  41c942:	xor    bl,dl
  41c944:	jne    0x41c95d
  41c946:	mov    esi,ecx
  41c948:	or     cl,BYTE PTR [ecx-0x21]
  41c94b:	pop    edi
  41c94c:	jecxz  0x41c958
  41c94e:	or     al,0x4
  41c950:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c951:	mov    cl,0xce
  41c953:	ja     0x41c983
  41c955:	scas   al,BYTE PTR es:[edi]
  41c956:	push   edx
  41c957:	mov    ebp,0x546309d9
  41c95c:	lock pop ebp
  41c95e:	sbb    cl,BYTE PTR [edx-0x73]
  41c961:	(bad)  
  41c962:	pop    esi
  41c963:	rcl    DWORD PTR [eax],0xb8
  41c966:	mov    edx,DWORD PTR [esi]
  41c968:	les    edx,FWORD PTR [edi-0x464304d0]
  41c96e:	out    dx,al
  41c96f:	fdiv   QWORD PTR [ecx+0x54a2a227]
  41c975:	(bad)  
  41c977:	adc    BYTE PTR [edx],ah
  41c979:	fistp  QWORD PTR [esi+0x1b69a94e]
  41c97f:	pusha  
  41c980:	daa    
  41c981:	sbb    eax,0x742d4e0a
  41c986:	jb     0x41c9c6
  41c988:	dec    esi
  41c989:	sbb    eax,0xd7553c27
  41c98e:	icebp  
  41c98f:	fisttp WORD PTR [ebp+0x5a99323]
  41c995:	add    bh,bl
  41c997:	clc    
  41c998:	fwait
  41c999:	out    0xb7,eax
  41c99b:	xor    eax,DWORD PTR [ebp-0x7c56ebe9]
  41c9a1:	repz mov ch,0x30
  41c9a4:	test   eax,0xa8717120
  41c9a9:	push   0xcc0cef2f
  41c9ae:	push   ds
  41c9af:	or     edx,DWORD PTR gs:[edi]
  41c9b2:	jecxz  0x41c959
  41c9b4:	retf   
  41c9b5:	test   DWORD PTR [edx+0xf],edx
  41c9b8:	push   cs
  41c9b9:	add    al,0x4a
  41c9bb:	ret    0xdac7
  41c9be:	push   0xfffffff9
  41c9c0:	pop    eax
  41c9c1:	gs enter 0x477e,0xd1
  41c9c6:	cmp    esp,ecx
  41c9c8:	mov    ah,0x21
  41c9ca:	nop
  41c9cb:	div    BYTE PTR [ebp-0x25]
  41c9ce:	lods   al,BYTE PTR ds:[esi]
  41c9cf:	sbb    DWORD PTR [ebp+0x45da1ddc],edi
  41c9d5:	mov    cl,0xdd
  41c9d7:	mov    ch,0x1a
  41c9d9:	fimul  DWORD PTR [ebp-0x7d]
  41c9dc:	dec    edx
  41c9dd:	xor    eax,0x7c566413
  41c9e2:	xchg   edi,eax
  41c9e3:	repz adc al,0x1f
  41c9e6:	jae    0x41c9ba
  41c9e8:	stos   BYTE PTR es:[edi],al
  41c9e9:	hlt    
  41c9ea:	nop
  41c9eb:	imul   ecx,DWORD PTR [ebp+0x59],0xffffffa4
  41c9ef:	fcomp  DWORD PTR [edi+0x37b1e15c]
  41c9f5:	jle    0x41c9b0
  41c9f7:	push   0x10
  41c9f9:	stos   BYTE PTR es:[edi],al
  41c9fa:	jecxz  0x41ca4f
  41c9fc:	sbb    BYTE PTR es:[ebx],bh
  41c9ff:	leave  
  41ca00:	sub    dl,BYTE PTR [edi]
  41ca02:	test   BYTE PTR [ebx],dl
  41ca04:	aaa    
  41ca05:	mov    ecx,0x5eef08c7
  41ca0a:	xor    esp,DWORD PTR [esi-0x3c]
  41ca0d:	pop    esp
  41ca0e:	pop    es
  41ca0f:	ret    0x6473
  41ca12:	or     ah,BYTE PTR [ecx-0x7]
  41ca15:	xchg   edx,eax
  41ca16:	scas   al,BYTE PTR es:[edi]
  41ca17:	popa   
  41ca18:	push   esi
  41ca19:	jbe    0x41ca1d
  41ca1b:	jb     0x41ca0a
  41ca1d:	lea    edi,[ebx+0x33]
  41ca20:	lahf   
  41ca21:	in     eax,dx
  41ca22:	(bad)  
  41ca23:	cli    
  41ca24:	js     0x41c9c7
  41ca26:	(bad)  
  41ca27:	jo     0x41ca7a
  41ca29:	add    al,BYTE PTR [edx]
  41ca2b:	sbb    al,0x24
  41ca2d:	dec    esp
  41ca2e:	sbb    al,0xc3
  41ca30:	dec    ebp
  41ca31:	test   al,0xd
  41ca33:	cmp    DWORD PTR [esi],edx
  41ca35:	or     edi,DWORD PTR [esp+ecx*8-0x49]
  41ca39:	stos   DWORD PTR es:[edi],eax
  41ca3a:	js     0x41cab7
  41ca3c:	or     dl,BYTE PTR [ecx-0x54]
  41ca3f:	inc    ebp
  41ca40:	shl    BYTE PTR [esi],0xf6
  41ca43:	push   esi
  41ca44:	fsubr  st(2),st
  41ca46:	add    bh,BYTE PTR [edi-0x72]
  41ca49:	jns    0x41ca7e
  41ca4b:	std    
  41ca4c:	mov    ebp,0x70aed57d
  41ca51:	outs   dx,BYTE PTR ds:[esi]
  41ca52:	cdq    
  41ca53:	or     eax,0x9f3e589a
  41ca58:	pop    ds
  41ca59:	pushf  
  41ca5a:	outs   dx,BYTE PTR ds:[esi]
  41ca5b:	xor    BYTE PTR [edx-0x78e14449],al
  41ca61:	or     eax,ebx
  41ca63:	into   
  41ca64:	sub    BYTE PTR [ebx],ch
  41ca66:	push   eax
  41ca67:	hlt    
  41ca68:	mov    bh,0xae
  41ca6a:	dec    ebp
  41ca6b:	pushf  
  41ca6c:	leave  
  41ca6d:	shl    BYTE PTR [ebp-0x6a16ba59],1
  41ca73:	test   BYTE PTR [edx],ch
  41ca75:	cmp    al,0xc4
  41ca77:	add    ecx,0xc3d4a5a0
  41ca7d:	mov    ds:0x2db111eb,al
  41ca82:	add    cl,BYTE PTR [edi]
  41ca84:	js     0x41ca59
  41ca86:	shr    BYTE PTR [ecx],cl
  41ca88:	pop    ds
  41ca89:	repz mov ds:0x90d98a5,al
  41ca8f:	push   cs
  41ca90:	shl    DWORD PTR [edi+esi*2],cl
  41ca93:	mov    ss,WORD PTR [ecx+0x1eea775d]
  41ca99:	mov    eax,ds
  41ca9b:	adc    eax,0x5e09f271
  41caa0:	les    ebx,FWORD PTR [ebp-0x6d6e89bf]
  41caa6:	enter  0x52bf,0xcb
  41caaa:	mov    dh,0x30
  41caac:	mov    eax,0xde73db05
  41cab1:	dec    eax
  41cab2:	push   es
  41cab3:	imul   BYTE PTR [edi+0x13]
  41cab6:	pop    ds
  41cab7:	out    0xf8,eax
  41cab9:	stos   BYTE PTR es:[edi],al
  41caba:	shl    BYTE PTR [edi+edi*2-0x4abffc44],0x46
  41cac2:	push   esp
  41cac3:	call   0x9132:0x4aa15c6e
  41caca:	pop    es
  41cacb:	fs sbb ch,dl
  41cace:	out    0xc6,eax
  41cad0:	inc    esp
  41cad1:	std    
  41cad2:	xchg   ebp,eax
  41cad3:	aad    0x5b
  41cad5:	retf   0x316a
  41cad8:	call   0xb261f69c
  41cadd:	and    al,0x62
  41cadf:	dec    esp
  41cae0:	rcl    al,cl
  41cae2:	pushf  
  41cae3:	adc    BYTE PTR [esi+esi*8+0x26],0x2f
  41cae8:	jb     0x41caec
  41caea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41caeb:	and    dh,BYTE PTR [eax-0x7aa2e55]
  41caf1:	push   ebx
  41caf2:	push   es
  41caf3:	test   al,ah
  41caf5:	xor    eax,0x62abe720
  41cafa:	sub    DWORD PTR es:[eax+0x515d5f4],esp
  41cb01:	scas   al,BYTE PTR es:[edi]
  41cb02:	mov    DWORD PTR [eax+0x77838b4f],ecx
  41cb08:	aas    
  41cb09:	sbb    esi,ebp
  41cb0b:	leave  
  41cb0c:	out    dx,al
  41cb0d:	hlt    
  41cb0e:	jle    0x41ca9a
  41cb10:	mov    dl,0x27
  41cb12:	fstp   TBYTE PTR [edx+0x6ff048]
  41cb18:	sub    edi,DWORD PTR [ecx]
  41cb1a:	std    
  41cb1b:	mov    eax,0xfdc40ed6
  41cb20:	in     eax,0x3e
  41cb22:	scas   eax,DWORD PTR es:[edi]
  41cb23:	mov    ds:0xe251a705,eax
  41cb28:	(bad)  
  41cb2a:	pop    ss
  41cb2b:	bound  edi,QWORD PTR ds:[ebp-0x1bf1a87f]
  41cb32:	(bad)  
  41cb34:	dec    ebx
  41cb35:	push   ebp
  41cb36:	jno    0x41cacf
  41cb38:	bound  esi,QWORD PTR ds:0x3f377551
  41cb3e:	cmp    eax,0x22f63e32
  41cb43:	jnp    0x41caee
  41cb45:	inc    edi
  41cb46:	lds    edi,FWORD PTR [ecx+0x63]
  41cb49:	xor    DWORD PTR [esi+ebp*4],0xffffff8f
  41cb4d:	xchg   ecx,eax
  41cb4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb4f:	mov    ecx,0x87ff7bc3
  41cb54:	cmp    eax,0xdda5dfb9
  41cb59:	xlat   BYTE PTR ds:[ebx]
  41cb5a:	sub    al,0x48
  41cb5c:	inc    ebp
  41cb5d:	jg     0x41cba2
  41cb5f:	xor    BYTE PTR [ebx+edx*4-0x276ab72d],cl
  41cb66:	jo     0x41cbdf
  41cb68:	in     al,0x58
  41cb6a:	and    bh,0x85
  41cb6d:	add    bl,dh
  41cb6f:	cmp    bh,BYTE PTR [eax+0x62]
  41cb72:	aaa    
  41cb73:	xor    edi,edi
  41cb75:	lods   eax,DWORD PTR ds:[esi]
  41cb76:	enter  0x26c9,0x37
  41cb7a:	mov    bl,0x4f
  41cb7c:	pop    eax
  41cb7d:	pop    ebp
  41cb7e:	push   cs
  41cb7f:	jnp    0x41cb96
  41cb81:	push   0xffffffa7
  41cb83:	pop    esp
  41cb84:	xor    eax,0x28eadff6
  41cb89:	xlat   BYTE PTR gs:[ebx]
  41cb8b:	fdivr  QWORD PTR [ecx-0x1e]
  41cb8e:	pop    esi
  41cb8f:	cdq    
  41cb90:	xchg   BYTE PTR [eax+0x19aa80a5],cl
  41cb96:	jmp    0xd3b3:0x8cb2c6a3
  41cb9d:	mov    BYTE PTR [esi+0x10],0xd7
  41cba1:	cmp    al,0x37
  41cba3:	lea    ebx,[esi+0x6ac291b2]
  41cba9:	pop    ebx
  41cbaa:	ins    DWORD PTR es:[edi],dx
  41cbab:	fcom   DWORD PTR [ebx]
  41cbad:	cmc    
  41cbae:	test   al,0xbb
  41cbb0:	clc    
  41cbb1:	mov    cl,0x64
  41cbb3:	jl     0x41cbd1
  41cbb5:	xor    cl,BYTE PTR [ecx+0x28ad901c]
  41cbbb:	fmul   st,st(2)
  41cbbd:	fistp  DWORD PTR [eax+esi*4]
  41cbc0:	fistp  WORD PTR fs:[ecx+0xa67e4b7]
  41cbc7:	std    
  41cbc8:	loopne 0x41cb5d
  41cbca:	push   ebx
  41cbcb:	sbb    al,0x23
  41cbcd:	aad    0x9b
  41cbcf:	lods   eax,DWORD PTR ds:[esi]
  41cbd0:	pop    esi
  41cbd1:	add    esp,0x5b
  41cbd4:	xchg   esi,eax
  41cbd5:	xchg   edi,eax
  41cbd6:	sub    al,0x87
  41cbd8:	mov    ebx,0x1be3814b
  41cbdd:	gs out 0x9f,al
  41cbe0:	es jno 0x41cbf6
  41cbe3:	jmp    0x41cc5e
  41cbe5:	retf   
  41cbe6:	mov    edi,0x2002c3f5
  41cbeb:	jnp    0x41cc09
  41cbed:	cmp    eax,0x3b01a2c
  41cbf2:	pushf  
  41cbf3:	inc    esi
  41cbf4:	outs   dx,DWORD PTR ds:[esi]
  41cbf5:	cmp    al,0x8c
  41cbf7:	call   0x6303:0x9f1dc68e
  41cbfe:	jno    0x41cbcc
  41cc00:	pushf  
  41cc01:	mov    bl,0x95
  41cc03:	in     eax,dx
  41cc04:	and    ah,dh
  41cc06:	jp     0x41cbfb
  41cc08:	xchg   esp,eax
  41cc09:	into   
  41cc0a:	jno    0x41cc23
  41cc0c:	jbe    0x41cb8f
  41cc0e:	mul    BYTE PTR [ebp+0x660e9633]
  41cc14:	(bad)  
  41cc15:	sub    bl,dh
  41cc17:	loope  0x41cbbc
  41cc19:	jmp    0x41cbd3
  41cc1b:	(bad)  
  41cc1c:	push   0xbeb4fee2
  41cc21:	out    dx,eax
  41cc22:	data16 sub al,0x59
  41cc25:	clc    
  41cc26:	arpl   WORD PTR [edi-0x456c79a5],sp
  41cc2c:	outs   dx,BYTE PTR ds:[esi]
  41cc2d:	fwait
  41cc2e:	(bad)  
  41cc2f:	fimul  WORD PTR [edi-0x3fcb9a0f]
  41cc35:	jl     0x41cc7f
  41cc37:	dec    ebp
  41cc38:	ret    
  41cc39:	or     eax,0xfe8e65d5
  41cc3e:	adc    ebx,edx
  41cc40:	jmp    0x41cc6e
  41cc42:	or     eax,edx
  41cc44:	sub    DWORD PTR [ebx],esp
  41cc46:	dec    esi
  41cc47:	test   al,0x16
  41cc49:	test   al,0x1e
  41cc4b:	arpl   WORD PTR [edi],si
  41cc4d:	xor    eax,0xebbabf22
  41cc52:	(bad)  
  41cc53:	outs   dx,BYTE PTR ds:[esi]
  41cc54:	fist   DWORD PTR [eax]
  41cc56:	iret   
  41cc57:	pop    es
  41cc58:	sub    DWORD PTR [edi+ebp*4-0x58f25856],ebp
  41cc5f:	xor    edx,DWORD PTR [eax-0x69]
  41cc62:	pop    edi
  41cc63:	addr16 cmp edi,ecx
  41cc66:	ror    BYTE PTR [esi+0x68],1
  41cc69:	inc    ebp
  41cc6a:	jnp    0x41cc33
  41cc6c:	stos   DWORD PTR es:[edi],eax
  41cc6d:	pop    edi
  41cc6e:	scas   al,BYTE PTR es:[edi]
  41cc6f:	(bad)  
  41cc70:	hlt    
  41cc71:	mov    dh,0x7f
  41cc73:	inc    edx
  41cc74:	daa    
  41cc75:	xchg   edx,eax
  41cc76:	jnp    0x41ccc4
  41cc78:	xor    dh,ah
  41cc7a:	in     eax,0x85
  41cc7c:	scas   eax,DWORD PTR es:[edi]
  41cc7d:	outs   dx,BYTE PTR ds:[esi]
  41cc7e:	retf   
  41cc7f:	out    dx,al
  41cc80:	les    ebx,FWORD PTR [ebp-0x3e0c90ac]
  41cc86:	add    al,0x11
  41cc88:	inc    BYTE PTR [eax]
  41cc8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc8b:	push   eax
  41cc8c:	lds    ebp,FWORD PTR [edi-0x5f40f762]
  41cc92:	inc    esi
  41cc93:	jns    0x41ccf9
  41cc95:	outs   dx,DWORD PTR ds:[esi]
  41cc96:	mov    eax,0xe85ccec3
  41cc9b:	inc    edx
  41cc9c:	adc    eax,0x41455ea5
  41cca1:	stc    
  41cca2:	pop    ebx
  41cca3:	(bad)  
  41cca4:	jge    0x41cd14
  41cca6:	cmp    esp,DWORD PTR [edi-0x7f99a5db]
  41ccac:	sub    DWORD PTR gs:[edx-0x6c],edi
  41ccb0:	ja     0x41cc40
  41ccb2:	imul   edi,DWORD PTR [ecx-0x70],0xffffffcc
  41ccb6:	ins    DWORD PTR es:[edi],dx
  41ccb7:	sbb    ecx,DWORD PTR [edi+eiz*1+0x317e674e]
  41ccbe:	pop    es
  41ccbf:	mov    bl,0xdf
  41ccc1:	and    ch,al
  41ccc3:	pop    eax
  41ccc4:	div    BYTE PTR [edx+0xe4bd6e2]
  41ccca:	gs gs mov ecx,0x61e8214
  41ccd1:	lahf   
  41ccd2:	sub    ch,cl
  41ccd4:	mov    al,ds:0x75f1d883
  41ccd9:	add    bh,BYTE PTR [edi-0x5bebbe7f]
  41ccdf:	ins    BYTE PTR es:[edi],dx
  41cce0:	repz gs fwait
  41cce3:	jg     0x41ccbb
  41cce5:	pop    ds
  41cce6:	aad    0x8c
  41cce8:	retf   
  41cce9:	xchg   esi,eax
  41ccea:	rcr    DWORD PTR [ebx-0x3b79e428],0x4f
  41ccf1:	pop    ebx
  41ccf2:	lahf   
  41ccf3:	pop    esi
  41ccf4:	mov    cl,0xdb
  41ccf6:	mov    al,ds:0xdb5dbd25
  41ccfb:	sub    al,0xde
  41ccfd:	xchg   DWORD PTR [esi-0x31],esp
  41cd00:	push   esi
  41cd01:	jmp    0xa3b5:0x7b7056f2
  41cd08:	ins    BYTE PTR es:[edi],dx
  41cd09:	mov    cs,WORD PTR [edi]
  41cd0b:	adc    esp,DWORD PTR [ebx]
  41cd0d:	mov    dh,0x6c
  41cd0f:	inc    edi
  41cd10:	sub    al,0x25
  41cd12:	cli    
  41cd13:	test   eax,0x1339fcd3
  41cd18:	xchg   edx,eax
  41cd19:	pop    ds
  41cd1a:	sub    BYTE PTR [edi+0x2a],al
  41cd1d:	sbb    edx,DWORD PTR [edx]
  41cd1f:	jg     0x41cd57
  41cd21:	sbb    eax,0xce4828bb
  41cd26:	cmp    al,0x0
  41cd28:	push   esp
  41cd29:	jge    0x41cd12
  41cd2b:	dec    edx
  41cd2c:	xor    al,0x12
  41cd2e:	das    
  41cd2f:	pop    ebx
  41cd30:	xor    edx,DWORD PTR [edx+0x378231d0]
  41cd36:	ins    DWORD PTR es:[edi],dx
  41cd37:	xchg   BYTE PTR [ecx+0x1fe18e3f],bl
  41cd3d:	ins    DWORD PTR es:[edi],dx
  41cd3e:	jno    0x41cd69
  41cd40:	neg    BYTE PTR [esi]
  41cd42:	jecxz  0x41cd66
  41cd44:	mov    bl,0x71
  41cd46:	xchg   edi,eax
  41cd47:	aam    0xbb
  41cd49:	mov    ebx,DWORD PTR [ecx+0x5dae2c1c]
  41cd4f:	and    al,ch
  41cd51:	xchg   esp,esi
  41cd53:	cmovs  ebx,DWORD PTR [edx]
  41cd56:	scas   eax,DWORD PTR es:[edi]
  41cd57:	xchg   ebp,eax
  41cd58:	push   ebx
  41cd59:	jmp    0x9ab64825
  41cd5e:	cmp    DWORD PTR [edx-0x5b],edx
  41cd61:	aam    0x35
  41cd63:	cmp    eax,0xd987823e
  41cd68:	pop    ebx
  41cd69:	lods   al,BYTE PTR ds:[esi]
  41cd6a:	or     dl,dh
  41cd6c:	pop    esp
  41cd6d:	mov    ss,WORD PTR [edi+eiz*2-0x4c14c69]
  41cd74:	sbb    eax,0xc80a86e6
  41cd79:	sub    esp,DWORD PTR [edi+0x9f23bba]
  41cd7f:	adc    eax,0xbc05332
  41cd84:	call   FWORD PTR [ebp+0x18]
  41cd87:	mov    WORD PTR [eax-0x6],ss
  41cd8a:	ja     0x48cb8df6
  41cd90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd91:	add    esp,ebx
  41cd93:	jo     0x41cdfa
  41cd95:	and    eax,esi
  41cd97:	and    al,dl
  41cd99:	add    al,BYTE PTR [edi+eiz*2-0x6a]
  41cd9d:	loope  0x41cdcb
  41cd9f:	stos   DWORD PTR es:[edi],eax
  41cda0:	sar    DWORD PTR [edi-0x16],cl
  41cda3:	stos   BYTE PTR es:[edi],al
  41cda4:	sbb    BYTE PTR [ebp-0x1],dl
  41cda7:	in     eax,0xad
  41cda9:	or     al,0xbb
  41cdab:	mov    bl,0xb
  41cdad:	mov    DWORD PTR [ebp-0x13],ecx
  41cdb0:	mov    bl,bl
  41cdb2:	xchg   esp,eax
  41cdb3:	imul   eax,DWORD PTR ds:0x92cd37b7,0x28
  41cdba:	iret   
  41cdbb:	call   0x6d:0x1f1c67b0
  41cdc2:	sbb    ebx,ecx
  41cdc4:	scas   eax,DWORD PTR es:[edi]
  41cdc5:	ds sub eax,0xc83de5d4
  41cdcb:	jo     0x41ce33
  41cdcd:	push   esp
  41cdce:	pop    eax
  41cdcf:	and    BYTE PTR [ecx-0x43],0xa2
  41cdd3:	leave  
  41cdd4:	mov    bl,0x13
  41cdd6:	mov    cl,0x95
  41cdd8:	sahf   
  41cdd9:	sub    al,0x9f
  41cddb:	loopne 0x41cdca
  41cddd:	inc    eax
  41cdde:	je     0x41cddc
  41cde0:	dec    esi
  41cde1:	jmp    0x7cc0480d
  41cde6:	adc    DWORD PTR [eax],0x51
  41cde9:	add    dh,BYTE PTR [ecx-0x80]
  41cdec:	out    dx,eax
  41cded:	xor    eax,0x7f7605eb
  41cdf2:	inc    ecx
  41cdf3:	aas    
  41cdf4:	or     bl,bh
  41cdf6:	retf   0x7140
  41cdf9:	sbb    al,0xef
  41cdfb:	push   es
  41cdfc:	jb     0x41cd86
  41cdfe:	fs xor esi,ebp
  41ce01:	adc    eax,0xb9f59bd
  41ce06:	and    esp,ecx
  41ce08:	jge    0x41ce1f
  41ce0a:	ror    BYTE PTR [eax+0x6],0x79
  41ce0e:	cmp    al,BYTE PTR [ebx-0x1436f49c]
  41ce14:	pop    esi
  41ce15:	bound  esp,QWORD PTR [ebx]
  41ce17:	ror    DWORD PTR [edi],1
  41ce19:	pop    eax
  41ce1a:	sub    ch,BYTE PTR [ebp+0x5f543b08]
  41ce20:	adc    dl,dh
  41ce22:	mov    DWORD PTR [ecx+0x78605ad4],eax
  41ce28:	add    eax,0x2aa42bd9
  41ce2d:	xlat   BYTE PTR ds:[ebx]
  41ce2e:	xchg   esi,eax
  41ce2f:	shl    ecx,cl
  41ce31:	dec    ecx
  41ce32:	push   edx
  41ce33:	and    al,0x4c
  41ce35:	popa   
  41ce36:	in     eax,0x91
  41ce38:	jno    0x41ceb1
  41ce3a:	cmp    ebp,ebp
  41ce3c:	xchg   esi,eax
  41ce3d:	push   ss
  41ce3e:	inc    ebx
  41ce3f:	pop    esp
  41ce40:	mov    ds:0xdb464013,eax
  41ce45:	xor    ecx,ebp
  41ce47:	jmp    0x6260ce16
  41ce4c:	retf   
  41ce4d:	lods   al,BYTE PTR ds:[esi]
  41ce4e:	mov    eax,ds:0x4008aa76
  41ce53:	fmul   DWORD PTR [edx+0x358de00b]
  41ce59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce5a:	daa    
  41ce5b:	sub    dl,bl
  41ce5d:	dec    eax
  41ce5e:	inc    edx
  41ce5f:	ja     0x41cdf2
  41ce61:	xor    eax,0xdbc6c1f5
  41ce66:	dec    edi
  41ce67:	mov    edi,ecx
  41ce69:	rcr    BYTE PTR [eax+0x1a69298a],1
  41ce6f:	add    BYTE PTR [esi-0x9d91958],dl
  41ce75:	test   DWORD PTR [edi+0x2d67c4ef],0x11f73dc1
  41ce7f:	fsub   QWORD PTR [ebx]
  41ce81:	adc    ebp,DWORD PTR [ecx+0x75e71c5e]
  41ce87:	inc    ebp
  41ce88:	aas    
  41ce89:	pop    ebp
  41ce8a:	pmullw mm7,QWORD PTR [ecx]
  41ce8d:	ret    
  41ce8e:	pop    eax
  41ce8f:	lds    esi,FWORD PTR [ecx]
  41ce91:	jle    0x41ce81
  41ce93:	add    eax,0x9c171785
  41ce98:	jb     0x41ce39
  41ce9a:	mov    al,0x6d
  41ce9c:	jp     0x41cef1
  41ce9e:	imul   edi,DWORD PTR [esi+ecx*2],0x1647a563
  41cea5:	pop    ss
  41cea6:	push   0x29
  41cea8:	repz mov ds:0x4b256e8b,al
  41ceae:	popa   
  41ceaf:	iret   
  41ceb0:	xlat   BYTE PTR es:[ebx]
  41ceb2:	sbb    DWORD PTR [edi+edi*4+0xc],ecx
  41ceb6:	xor    al,0x9c
  41ceb8:	ja     0x41ceea
  41ceba:	inc    ebp
  41cebb:	push   esp
  41cebc:	xchg   esi,eax
  41cebd:	nop
  41cebe:	cmp    eax,0xd14132f
  41cec3:	sub    eax,0x573d1ae
  41cec8:	sti    
  41cec9:	retf   
  41ceca:	mov    ds:0x377f5719,al
  41cecf:	icebp  
  41ced0:	xchg   esp,eax
  41ced1:	add    DWORD PTR [edi+0x446d68ce],esp
  41ced7:	fs jb  0x41cecd
  41ceda:	mov    ebx,0x36fc7f1
  41cedf:	xlat   BYTE PTR ds:[ebx]
  41cee0:	xchg   ebx,ecx
  41cee2:	add    al,0x72
  41cee4:	adc    BYTE PTR [ebx+0x5ab550a8],ah
  41ceea:	std    
  41ceeb:	imul   ecx,DWORD PTR [eax],0x5
  41ceee:	jns    0x41cf46
  41cef0:	enter  0x4bab,0x7f
  41cef4:	inc    esp
  41cef5:	test   BYTE PTR [ebx],ah
  41cef7:	int3   
  41cef8:	cs das 
  41cefa:	scas   eax,DWORD PTR es:[edi]
  41cefb:	test   BYTE PTR [edi+0xb6ff7e],dh
  41cf01:	push   eax
  41cf02:	mov    eax,?
  41cf04:	dec    edx
  41cf05:	or     al,0xc2
  41cf07:	fdecstp 
  41cf09:	jge    0x41ce9f
  41cf0b:	pop    ebx
  41cf0c:	(bad)  
  41cf0d:	add    dl,cl
  41cf0f:	lods   eax,DWORD PTR es:[esi]
  41cf11:	je     0x41ceef
  41cf13:	(bad)  
  41cf14:	stc    
  41cf15:	pop    eax
  41cf16:	test   al,0x2
  41cf18:	and    esi,DWORD PTR [esp+ebp*8+0x5f09a7a9]
  41cf1f:	mov    ds:0xb96c27c8,al
  41cf24:	xchg   ecx,eax
  41cf25:	xchg   ebx,eax
  41cf26:	(bad)  
  41cf27:	xchg   edi,eax
  41cf28:	jp     0x41cf0d
  41cf2a:	mov    ebp,0x32e85559
  41cf2f:	lods   al,BYTE PTR ds:[esi]
  41cf30:	push   eax
  41cf31:	mov    esp,0x6b97a744
  41cf36:	test   BYTE PTR [ebx-0x52],al
  41cf39:	dec    ecx
  41cf3a:	shl    BYTE PTR [esi-0x6c],0x8f
  41cf3e:	add    esp,DWORD PTR [eax]
  41cf40:	(bad)  
  41cf42:	push   ebx
  41cf43:	xor    DWORD PTR [esi],0xe
  41cf46:	(bad)  
  41cf47:	sahf   
  41cf48:	fldcw  WORD PTR [ebp+0x498f933e]
  41cf4e:	fs ss daa 
  41cf51:	call   0x53be7aa6
  41cf56:	sub    eax,0x5c2d6768
  41cf5b:	mov    esp,0x152ede5d
  41cf60:	dec    esp
  41cf61:	adc    esi,DWORD PTR [edi+0x2c]
  41cf64:	rcr    esp,cl
  41cf66:	xchg   edi,eax
  41cf67:	cwde   
  41cf68:	pop    es
  41cf69:	fild   WORD PTR [eax-0x62]
  41cf6c:	push   es
  41cf6d:	push   0x67
  41cf6f:	mov    cr0,eax
  41cf72:	test   al,0x4c
  41cf74:	dec    ecx
  41cf75:	xor    eax,0x750b5857
  41cf7a:	sti    
  41cf7b:	loope  0x41cfaa
  41cf7d:	ds xchg ebp,eax
  41cf7f:	xlat   BYTE PTR ds:[ebx]
  41cf80:	adc    eax,0x6c65c7dd
  41cf85:	inc    esp
  41cf86:	or     BYTE PTR [esi],bl
  41cf88:	cmp    eax,0x68e58bf6
  41cf8d:	cmc    
  41cf8e:	bound  edx,QWORD PTR [ecx-0x146ef839]
  41cf94:	sub    dl,dl
  41cf96:	out    dx,al
  41cf97:	adc    BYTE PTR [edi],bh
  41cf99:	into   
  41cf9a:	test   BYTE PTR [ebx+0x2b],0x12
  41cf9e:	retf   0x299a
  41cfa1:	cmp    al,0xd7
  41cfa3:	jns    0x41cf97
  41cfa5:	dec    esi
  41cfa6:	jg     0x41cfe0
  41cfa8:	sbb    eax,DWORD PTR [ecx-0x74]
  41cfab:	mov    WORD PTR [ecx-0x25f29a3f],ss
  41cfb1:	mov    ?,WORD PTR [edx+0x21]
  41cfb4:	pop    esp
  41cfb5:	pop    edi
  41cfb6:	repnz fsub DWORD PTR [ecx+0x55]
  41cfba:	(bad)  
  41cfbb:	cld    
  41cfbc:	xor    dh,bl
  41cfbe:	push   edx
  41cfbf:	leave  
  41cfc0:	adc    ecx,DWORD PTR [edx+0x64]
  41cfc3:	jp     0x41d016
  41cfc5:	dec    edx
  41cfc6:	lods   eax,DWORD PTR ds:[esi]
  41cfc7:	repz (bad) 
  41cfc9:	sub    al,0x7b
  41cfcb:	pop    ecx
  41cfcc:	ficom  DWORD PTR [ecx-0x7301a458]
  41cfd2:	inc    esi
  41cfd3:	shl    DWORD PTR [edx],0x51
  41cfd6:	call   0xe56088de
  41cfdb:	push   esi
  41cfdc:	into   
  41cfdd:	inc    esi
  41cfde:	jg     0x41d01d
  41cfe0:	jmp    0x1f6d:0xa65e979c
  41cfe7:	cmp    BYTE PTR [edx-0x26132a80],bh
  41cfed:	in     al,0x3e
  41cfef:	lods   eax,DWORD PTR ds:[esi]
  41cff0:	mov    bl,0x80
  41cff2:	das    
  41cff3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cff4:	bound  ebx,QWORD PTR ds:0x8f8fe447
  41cffa:	hlt    
  41cffb:	shl    bh,cl
  41cffd:	popa   
  41cffe:	cdq    
  41cfff:	enter  0x7632,0xbb
  41d003:	inc    ebp
  41d004:	and    DWORD PTR [esi+0x8725f55],eax
  41d00a:	loop   0x41cfa4
  41d00c:	xor    BYTE PTR [eax+0x656ad43d],dl
  41d012:	mov    ch,bl
  41d014:	retf   0xe7f8
  41d017:	push   ds
  41d018:	test   al,0x54
  41d01a:	add    BYTE PTR [eax+ebx*8+0x36],0x9c
  41d01f:	in     eax,dx
  41d020:	or     eax,0x63505ced
  41d025:	jo     0x41d040
  41d027:	in     eax,dx
  41d028:	es jle 0x41d08f
  41d02b:	adc    BYTE PTR [edx-0x170c3cc7],0xf8
  41d032:	inc    ecx
  41d033:	xchg   BYTE PTR [edx],bl
  41d035:	sub    DWORD PTR [edi+0x47304cb9],esp
  41d03b:	jmp    0xe7687cf8
  41d040:	xor    DWORD PTR [edx-0x3d],esp
  41d043:	in     eax,0x6c
  41d045:	cmp    cl,BYTE PTR [ecx-0x31]
  41d048:	loop   0x41d057
  41d04a:	jle    0x41cfd5
  41d04c:	push   ss
  41d04d:	mov    ds:0x1afe3251,al
  41d052:	xor    DWORD PTR [esi],0xffffffa4
  41d055:	and    al,0xf7
  41d057:	fisub  DWORD PTR [ebp+0x711d675d]
  41d05d:	ss push esi
  41d05f:	push   0x5c08eb3
  41d064:	or     eax,0xbec8fd8d
  41d069:	jo     0x41d0b1
  41d06b:	jp     0x41d065
  41d06d:	push   0x2c94d6e0
  41d072:	adc    BYTE PTR [eax],cl
  41d074:	cmc    
  41d075:	mov    eax,0x998ca20f
  41d07a:	je     0x41d079
  41d07c:	pop    eax
  41d07d:	cmp    DWORD PTR [edx+ecx*2+0x71a16c0c],ecx
  41d084:	inc    ecx
  41d085:	push   edx
  41d086:	mov    ebp,0xf3ccee62
  41d08b:	or     DWORD PTR [ecx+0x5b6a1a56],esp
  41d091:	fidiv  DWORD PTR [ebx-0x2255fd9a]
  41d097:	and    eax,0x5a952ea0
  41d09c:	pop    ds
  41d09d:	sub    DWORD PTR [edi],0x121fbfa5
  41d0a3:	xor    eax,0x931b9f3
  41d0a8:	inc    edi
  41d0a9:	sbb    BYTE PTR [edx+0x1e4a79d],ah
  41d0af:	xchg   ecx,eax
  41d0b0:	mov    al,ds:0x5c64c11c
  41d0b5:	test   BYTE PTR [ecx+0x6],dh
  41d0b8:	xchg   dh,bl
  41d0ba:	int    0x9e
  41d0bc:	cld    
  41d0bd:	xor    DWORD PTR [esi],edi
  41d0bf:	sbb    ebp,ebx
  41d0c1:	cs push esp
  41d0c3:	xchg   esi,eax
  41d0c4:	jp     0x41d085
  41d0c6:	lahf   
  41d0c7:	cmp    dl,ah
  41d0c9:	dec    eax
  41d0ca:	xchg   esi,eax
  41d0cb:	icebp  
  41d0cc:	xchg   esp,eax
  41d0cd:	push   es
  41d0ce:	push   edx
  41d0cf:	and    bh,BYTE PTR [ecx]
  41d0d1:	aas    
  41d0d2:	sbb    dh,BYTE PTR [eax+ecx*1]
  41d0d5:	pop    edi
  41d0d6:	aas    
  41d0d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0d8:	jle    0x41d06d
  41d0da:	push   edi
  41d0db:	cld    
  41d0dc:	pop    es
  41d0dd:	lods   eax,DWORD PTR ds:[esi]
  41d0de:	loopne 0x41d0c9
  41d0e0:	inc    edx
  41d0e1:	and    eax,0x1fa4c9a4
  41d0e6:	dec    esi
  41d0e7:	mov    ch,0x7
  41d0e9:	cmp    esi,edi
  41d0eb:	in     al,0x14
  41d0ed:	adc    DWORD PTR [edx+edi*4+0x5d],edx
  41d0f1:	(bad)  
  41d0f2:	dec    esp
  41d0f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0f4:	mov    ah,0xfe
  41d0f6:	jno    0x41d11a
  41d0f8:	(bad)  
  41d0f9:	fstp   QWORD PTR [edi-0x5ab20fc2]
  41d0ff:	not    DWORD PTR [edi-0x4258279b]
  41d105:	jmp    0x224a9d44
  41d10a:	sbb    DWORD PTR ds:0xde9e27f9,0x1f
  41d111:	(bad)  
  41d113:	mov    WORD PTR [ecx],ss
  41d115:	pop    eax
  41d116:	sar    DWORD PTR [ecx+0x2e5b935e],1
  41d11c:	inc    ebp
  41d11d:	fbstp  TBYTE PTR [ecx]
  41d11f:	sub    eax,0xffc6e3d7
  41d124:	mov    cl,0x19
  41d126:	sub    al,0x95
  41d128:	repz jecxz 0x41d0d2
  41d12b:	aad    0xfa
  41d12d:	xor    BYTE PTR [esi],bl
  41d12f:	or     al,0xfe
  41d131:	je     0x41d0e4
  41d133:	cmp    ch,BYTE PTR [edx-0x6e]
  41d136:	sbb    BYTE PTR [esi+0x4a],al
  41d139:	call   DWORD PTR [ecx]
  41d13b:	shl    BYTE PTR [eax+0x47b743e7],1
  41d141:	cmp    al,BYTE PTR [edi+0x1ab8f3be]
  41d147:	xor    al,bh
  41d149:	xchg   esp,eax
  41d14a:	pop    ds
  41d14b:	and    eax,0x6b95a6f0
  41d150:	inc    ebx
  41d151:	pop    ss
  41d152:	sub    BYTE PTR [eax],bh
  41d154:	mov    bh,0x89
  41d156:	(bad)  
  41d157:	nop
  41d158:	scas   al,BYTE PTR es:[edi]
  41d159:	pusha  
  41d15a:	adc    esi,ebx
  41d15c:	arpl   WORD PTR [eax+0x62fb5de0],bp
  41d162:	data16 sar BYTE PTR [ecx-0x76],1
  41d166:	nop
  41d167:	jb     0x41d158
  41d169:	(bad)  
  41d16a:	shl    BYTE PTR [edx+0x2bf97094],0xe5
  41d171:	test   al,0x91
  41d173:	adc    al,0x3b
  41d175:	xor    ebp,DWORD PTR [eax-0x3c1a6776]
  41d17b:	fist   DWORD PTR [ebp-0x51]
  41d17e:	xchg   ebp,eax
  41d17f:	add    DWORD PTR [ebp+0x63],esp
  41d182:	das    
  41d183:	out    0x8,al
  41d185:	mov    ecx,0xec0a5dec
  41d18a:	xchg   esp,eax
  41d18b:	adc    esi,ebp
  41d18d:	jl     0x41d1ce
  41d18f:	mov    bh,0xcb
  41d191:	sub    bh,ch
  41d193:	(bad)  
  41d194:	mov    ebp,0x9171886f
  41d199:	xchg   edx,eax
  41d19a:	inc    edi
  41d19b:	jge    0x41d181
  41d19d:	xor    eax,0xf16753df
  41d1a2:	push   ss
  41d1a3:	mov    al,0x91
  41d1a5:	in     eax,0x2c
  41d1a7:	pop    esi
  41d1a8:	lods   al,BYTE PTR ss:[esi]
  41d1aa:	jns    0x41d225
  41d1ac:	data16 lods al,BYTE PTR ds:[esi]
  41d1ae:	mov    edx,0xaaafd989
  41d1b3:	mov    ds:0xc4e5a54a,al
  41d1b8:	push   edi
  41d1b9:	jne    0x41d1fb
  41d1bb:	xor    al,0x39
  41d1bd:	pop    esi
  41d1be:	mov    al,ch
  41d1c0:	and    eax,0x16f77aa4
  41d1c5:	mov    dl,0x9c
  41d1c7:	mov    ds:0xfb9d6879,eax
  41d1cc:	xor    esp,ecx
  41d1ce:	loope  0x41d1be
  41d1d0:	out    dx,eax
  41d1d1:	jle    0x41d1f6
  41d1d3:	adc    DWORD PTR [edi+ebp*4-0x30],ecx
  41d1d7:	cs mul ecx
  41d1da:	mov    dh,0xe6
  41d1dc:	scas   al,BYTE PTR es:[edi]
  41d1dd:	(bad)  
  41d1de:	cwde   
  41d1df:	add    dh,0x7
  41d1e2:	into   
  41d1e3:	cmp    cl,BYTE PTR [esi]
  41d1e5:	sbb    al,0xa8
  41d1e7:	cmp    ah,dl
  41d1e9:	xchg   esi,eax
  41d1ea:	xor    DWORD PTR [ecx-0x38],eax
  41d1ed:	(bad)
  41d1f1:	sti    
  41d1f2:	(bad)  
  41d1f3:	popf   
  41d1f4:	xor    dl,BYTE PTR [edi+edi*8+0x1c]
  41d1f8:	mov    dh,0x97
  41d1fa:	add    ah,BYTE PTR [ecx+ebx*8+0x7b]
  41d1fe:	jbe    0x41d1bd
  41d200:	jp     0x41d241
  41d202:	mov    al,0xa5
  41d204:	and    al,BYTE PTR [eax-0x3f0e340b]
  41d20a:	mov    eax,0x2d2ea9ff
  41d20f:	push   ebp
  41d210:	sub    al,0xaa
  41d212:	pop    ebp
  41d213:	loop   0x41d213
  41d215:	idiv   DWORD PTR [eax+0x79]
  41d218:	repz mov ebp,0xc55ccad3
  41d21e:	outs   dx,BYTE PTR ds:[esi]
  41d21f:	aam    0xee
  41d221:	sub    al,0xfb
  41d223:	lds    eax,FWORD PTR [edx]
  41d225:	mov    DWORD PTR [eax+0x3510eeb3],ecx
  41d22b:	push   edi
  41d22c:	jb     0x41d278
  41d22e:	test   al,0x3f
  41d230:	xchg   ecx,eax
  41d231:	sub    DWORD PTR [esi],ebx
  41d233:	repz add eax,0x2dd50f33
  41d239:	cld    
  41d23a:	retf   0x71c8
  41d23d:	jecxz  0x41d227
  41d23f:	sbb    eax,0x5c0c6ed4
  41d244:	dec    edi
  41d245:	add    al,0xec
  41d247:	sti    
  41d248:	adc    esp,ebp
  41d24a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d24b:	rol    ebp,1
  41d24d:	cli    
  41d24e:	cmp    dl,BYTE PTR [ecx]
  41d250:	xor    al,0xcf
  41d252:	cmc    
  41d253:	test   BYTE PTR [ecx],bl
  41d255:	jmp    0x41d1ff
  41d257:	es std 
  41d259:	mov    bl,0xb5
  41d25b:	adc    BYTE PTR [ebx-0x24e55288],ch
  41d261:	push   edx
  41d262:	call   0x336e:0x841afe36
  41d269:	bnd jbe 0x41d294
  41d26c:	jge    0x41d1fa
  41d26e:	arpl   WORD PTR [ecx],dx
  41d270:	mov    edx,eax
  41d272:	mov    al,ds:0xc4d75a8
  41d277:	inc    edx
  41d278:	inc    esi
  41d279:	cmp    DWORD PTR [eax-0x1a],esp
  41d27c:	xchg   BYTE PTR [eax-0x44],ch
  41d27f:	xchg   esi,eax
  41d280:	mov    es,WORD PTR [ecx+ebx*1]
  41d283:	and    eax,0xf48ad565
  41d288:	xchg   esi,eax
  41d289:	repz xor BYTE PTR [bx+si-0x7c],ch
  41d28e:	dec    edi
  41d28f:	ss aas 
  41d291:	and    DWORD PTR [ebp+0x2d],eax
  41d294:	daa    
  41d295:	arpl   WORD PTR [ebx],bp
  41d297:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d298:	dec    esi
  41d299:	pop    ss
  41d29a:	mov    esi,0xf2de751d
  41d29f:	push   0x675bd4f0
  41d2a4:	mov    ebp,0x65b0f558
  41d2a9:	push   edx
  41d2aa:	xor    ch,BYTE PTR [eax+0x3b]
  41d2ad:	std    
  41d2ae:	mov    eax,0x1f4f2164
  41d2b3:	cdq    
  41d2b4:	test   eax,0x2aee752
  41d2b9:	mov    BYTE PTR [ebx+0xe],dh
  41d2bc:	cwde   
  41d2bd:	jp     0x41d301
  41d2bf:	inc    esi
  41d2c0:	xor    DWORD PTR [edx+0x17da7693],0x1745e8fa
  41d2ca:	or     eax,0xe46d3751
  41d2cf:	sahf   
  41d2d0:	jae    0x41d301
  41d2d2:	sti    
  41d2d3:	(bad)  
  41d2d4:	xchg   ebp,eax
  41d2d5:	mov    ds:0x70202834,eax
  41d2da:	fistp  DWORD PTR [bp+si]
  41d2dd:	jecxz  0x41d2e8
  41d2df:	mov    BYTE PTR [ecx+0x48],bl
  41d2e2:	iret   
  41d2e3:	repnz adc al,0xf
  41d2e6:	into   
  41d2e7:	iret   
  41d2e8:	push   eax
  41d2e9:	add    DWORD PTR [ebx+0x32fbe5f7],ecx
  41d2ef:	adc    BYTE PTR [edx],al
  41d2f1:	retf   0xcc68
  41d2f4:	hlt    
  41d2f5:	xor    DWORD PTR [edx+eax*4+0x24eec478],ebp
  41d2fc:	test   ebx,edx
  41d2fe:	std    
  41d2ff:	dec    ecx
  41d300:	test   al,0x46
  41d302:	in     eax,dx
  41d303:	mov    dh,cl
  41d305:	jbe    0x41d381
  41d307:	in     al,0x37
  41d309:	inc    esi
  41d30a:	int3   
  41d30b:	dec    ebx
  41d30c:	pusha  
  41d30d:	out    dx,eax
  41d30e:	mov    ebx,0xc5972ff8
  41d313:	add    BYTE PTR [edi+0x797401f1],bh
  41d319:	jmp    0x41d38f
  41d31b:	mov    ecx,0x55f62cbd
  41d320:	adc    BYTE PTR [edi-0x629ae02b],cl
  41d326:	popa   
  41d327:	fwait
  41d328:	les    ebp,FWORD PTR [eax+0x6e]
  41d32b:	mov    dl,0x6f
  41d32d:	mov    edx,0xde38ccff
  41d332:	stos   DWORD PTR es:[edi],eax
  41d333:	mov    ecx,0x364455f6
  41d338:	jo     0x41d35b
  41d33a:	mov    ah,0xe4
  41d33c:	ss call 0x668b9bee
  41d342:	or     al,0x83
  41d344:	std    
  41d345:	loop   0x41d36b
  41d347:	adc    BYTE PTR [edi-0x466a0a25],dh
  41d34d:	and    al,0x26
  41d34f:	mov    ebx,0x71d234c3
  41d354:	xchg   edi,eax
  41d355:	jle    0x41d2fe
  41d357:	hlt    
  41d358:	xchg   edx,ebx
  41d35a:	sub    eax,0xb9bd238f
  41d35f:	mov    edx,0x6abb32b7
  41d364:	inc    edx
  41d365:	dec    ebx
  41d366:	or     esi,ebp
  41d368:	lods   al,BYTE PTR ds:[esi]
  41d369:	hlt    
  41d36a:	cmp    dh,cl
  41d36c:	mov    cl,0xf7
  41d36e:	retf   0x80e7
  41d371:	xor    esi,DWORD PTR [esi+0x43]
  41d374:	xor    al,0xc6
  41d376:	mov    cl,0x21
  41d378:	in     eax,dx
  41d379:	sub    BYTE PTR [edx+0x4b0675d4],al
  41d37f:	mov    esi,0x435ea5db
  41d384:	inc    edi
  41d385:	cs pop ebx
  41d387:	rcr    DWORD PTR [edi],0xcf
  41d38a:	mov    esi,0xcc552e4b
  41d38f:	mov    dh,0x14
  41d391:	fs repnz mov dh,0x53
  41d395:	sub    DWORD PTR [edi+0x36728c18],edi
  41d39b:	and    BYTE PTR [edx+0x29259290],cl
  41d3a1:	ror    DWORD PTR [esi],1
  41d3a3:	gs mov eax,0xbd33d748
  41d3a9:	push   0x12
  41d3ab:	int3   
  41d3ac:	push   ds
  41d3ad:	rcl    dl,1
  41d3af:	outs   dx,DWORD PTR ds:[esi]
  41d3b0:	pushf  
  41d3b1:	cmp    eax,0xc2e9668a
  41d3b6:	push   ebx
  41d3b7:	retf   0xf023
  41d3ba:	jmp    0x41d3b5
  41d3bc:	jl     0x41d40b
  41d3be:	je     0x41d383
  41d3c0:	cmp    BYTE PTR [ecx+0x52],cl
  41d3c3:	movsx  esi,WORD PTR [edx+0x22]
  41d3c7:	(bad)  
  41d3c9:	ins    BYTE PTR es:[edi],dx
  41d3ca:	addr16 leave 
  41d3cc:	ret    
  41d3cd:	adc    edx,DWORD PTR [ecx-0x74]
  41d3d0:	dec    eax
  41d3d1:	jge    0x41d40a
  41d3d3:	ds stos BYTE PTR es:[edi],al
  41d3d5:	bound  esp,QWORD PTR [ebx+0x275f1f05]
  41d3db:	ss (bad) 
  41d3dd:	sub    eax,0x29adb75
  41d3e2:	inc    ebx
  41d3e3:	loope  0x41d376
  41d3e5:	push   eax
  41d3e6:	dec    eax
  41d3e7:	mov    ebp,0x302029f4
  41d3ec:	inc    eax
  41d3ed:	loope  0x41d462
  41d3ef:	(bad)  
  41d3f1:	sti    
  41d3f2:	jecxz  0x41d43b
  41d3f4:	jns    0x41d459
  41d3f6:	std    
  41d3f7:	mov    ?,WORD PTR [ebx+0x74]
  41d3fa:	aad    0xe3
  41d3fc:	(bad)  
  41d3fd:	retf   
  41d3fe:	fsub   DWORD PTR [eax+0x76ae5eae]
  41d404:	adc    esi,0x3
  41d407:	das    
  41d408:	mov    eax,0x1536f339
  41d40d:	sub    BYTE PTR [edx-0x25b00a2c],0x66
  41d414:	(bad)  
  41d415:	sahf   
  41d416:	es out 0xe7,eax
  41d419:	jo     0x41d3a9
  41d41b:	int    0x2c
  41d41d:	data16 pushw ss
  41d420:	xchg   BYTE PTR ds:0x1159fe12,dl
  41d426:	iret   
  41d427:	inc    esi
  41d428:	pop    ebx
  41d429:	test   BYTE PTR [ecx],0xb0
  41d42c:	dec    eax
  41d42d:	frstor [edi]
  41d42f:	mov    cl,dl
  41d431:	cmp    eax,0x981d16bd
  41d436:	cmc    
  41d437:	or     al,0xcb
  41d439:	retf   0x63c5
  41d43c:	sbb    esp,ebx
  41d43e:	jmp    0xb84d:0x8cbebc3b
  41d445:	int    0x46
  41d447:	arpl   bp,ax
  41d449:	adc    eax,0x77324dd8
  41d44e:	dec    esp
  41d44f:	loope  0x41d400
  41d451:	gs xor al,0x5f
  41d454:	test   DWORD PTR [esi+eax*1-0x4b],ecx
  41d458:	aaa    
  41d459:	jl     0x41d48d
  41d45b:	js     0x41d45e
  41d45d:	lock xor al,BYTE PTR ds:0xaeaa9b22
  41d464:	and    eax,0xc9984213
  41d469:	push   eax
  41d46a:	mov    DWORD PTR [edx],0x3d382c29
  41d470:	dec    ebx
  41d471:	xor    DWORD PTR ds:0x4d487b8b,eax
  41d477:	call   0xb93feae4
  41d47c:	and    eax,DWORD PTR [ebx+0x25eb5025]
  41d482:	ret    
  41d483:	out    0x6c,al
  41d485:	mov    es,WORD PTR [esp+eiz*8-0x1e]
  41d489:	mov    cl,0x60
  41d48b:	jne    0x41d4a6
  41d48d:	jmp    0xf14e:0xf36f70d4
  41d494:	int    0x47
  41d496:	xchg   esp,eax
  41d497:	imul   edi,DWORD PTR [esi-0x778605da],0x32
  41d49e:	bound  ebx,QWORD PTR [esi+0x53cbafca]
  41d4a4:	les    edi,FWORD PTR [edi+0xfca2c1]
  41d4aa:	add    BYTE PTR [edx+0x4768cd94],0x28
  41d4b1:	stos   DWORD PTR es:[edi],eax
  41d4b2:	jp     0x41d438
  41d4b4:	jmp    0xdbcc9434
  41d4b9:	dec    ebx
  41d4ba:	in     al,dx
  41d4bb:	nop
  41d4bc:	xor    al,0x1e
  41d4be:	leave  
  41d4bf:	dec    ebx
  41d4c0:	inc    edi
  41d4c1:	jg     0x41d4e4
  41d4c3:	inc    ecx
  41d4c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4c5:	fldenv [ebx]
  41d4c7:	jle    0x41d516
  41d4c9:	and    al,0x89
  41d4cb:	fsubp  st(1),st
  41d4cd:	in     eax,0xe6
  41d4cf:	(bad)  
  41d4d0:	cld    
  41d4d1:	js     0x41d518
  41d4d3:	scas   al,BYTE PTR es:[edi]
  41d4d4:	lahf   
  41d4d5:	into   
  41d4d6:	call   0x4d14:0x8d03c67d
  41d4dd:	jle    0x41d4e8
  41d4df:	stos   DWORD PTR es:[edi],eax
  41d4e0:	fwait
  41d4e1:	adc    DWORD PTR [edx+0xa9d6cb5],edi
  41d4e7:	and    eax,eax
  41d4e9:	nop
  41d4ea:	mov    ah,BYTE PTR [ebx]
  41d4ec:	(bad)  
  41d4ed:	cld    
  41d4ee:	test   BYTE PTR [esi-0x5e419e5d],al
  41d4f4:	neg    ebp
  41d4f6:	aad    0xe2
  41d4f8:	aaa    
  41d4f9:	repnz lods al,BYTE PTR ds:[esi]
  41d4fb:	ins    BYTE PTR es:[edi],dx
  41d4fc:	sbb    al,0x21
  41d4fe:	outs   dx,BYTE PTR ds:[esi]
  41d4ff:	jl     0x41d492
  41d501:	jb     0x41d4ce
  41d503:	mov    dl,0xdb
  41d505:	shr    DWORD PTR [ecx+0x6658904d],1
  41d50b:	mov    eax,ds:0x7a69f701
  41d510:	cmp    al,0xa9
  41d512:	push   edx
  41d513:	daa    
  41d514:	mov    eax,0xce39a591
  41d519:	xor    BYTE PTR [edi],ch
  41d51b:	or     cl,bh
  41d51d:	jp     0x41d4a1
  41d51f:	add    al,0xb5
  41d521:	test   dh,ch
  41d523:	sub    al,0x18
  41d525:	xchg   esi,eax
  41d526:	jb     0x41d582
  41d528:	std    
  41d529:	fcmovb st,st(6)
  41d52b:	bound  esp,QWORD PTR [eax+0x59]
  41d52e:	cmp    esi,DWORD PTR [ebx+0x507acf97]
  41d534:	fadd   QWORD PTR [edx-0x73cff228]
  41d53a:	pushf  
  41d53b:	jnp    0x41d50f
  41d53d:	dec    DWORD PTR [esi]
  41d53f:	mov    ebx,0x65d74afb
  41d544:	int    0xfb
  41d546:	aaa    
  41d547:	test   bh,ah
  41d549:	(bad)  
  41d54a:	cmp    eax,0x192db4b1
  41d54f:	in     eax,dx
  41d550:	mov    bl,0xfa
  41d552:	push   esp
  41d553:	pop    ds
  41d554:	inc    ebx
  41d555:	cmp    BYTE PTR [eax+0x43],al
  41d558:	jbe    0x41d55f
  41d55a:	sub    ebx,DWORD PTR [esp+edx*1]
  41d55d:	push   ebx
  41d55e:	push   cs
  41d55f:	push   esp
  41d560:	dec    eax
  41d561:	out    0x16,eax
  41d563:	loopne 0x41d4f2
  41d565:	call   0x5d89ff38
  41d56a:	(bad)  
  41d56b:	shr    dl,0x43
  41d56e:	xor    esp,DWORD PTR [ecx]
  41d570:	stc    
  41d571:	xchg   ebp,eax
  41d572:	ins    BYTE PTR es:[edi],dx
  41d573:	xor    DWORD PTR [esp+eax*4+0x779c2e3a],edi
  41d57a:	data16 out 0x20,al
  41d57d:	or     BYTE PTR ss:[eax+0x72],bl
  41d581:	jne    0x41d5e3
  41d583:	test   BYTE PTR [edx+ebp*4],al
  41d586:	stos   DWORD PTR es:[edi],eax
  41d587:	pusha  
  41d588:	jae    0x41d5a8
  41d58a:	ds inc ebp
  41d58c:	mov    esi,0x5701051d
  41d591:	add    al,0xf1
  41d593:	cmp    DWORD PTR [edx-0x7fcb3789],ecx
  41d599:	scas   al,BYTE PTR es:[edi]
  41d59a:	or     al,dh
  41d59c:	cs push ss
  41d59e:	sub    al,0xeb
  41d5a0:	mov    esi,0x97cf0b73
  41d5a5:	out    0xd3,eax
  41d5a7:	jne    0x41d550
  41d5a9:	outs   dx,BYTE PTR ds:[esi]
  41d5aa:	adc    BYTE PTR [edx-0x7e953fd5],al
  41d5b0:	pop    edi
  41d5b1:	push   edi
  41d5b2:	out    0xea,eax
  41d5b4:	adc    BYTE PTR [esi+0x9dce6b],dl
  41d5ba:	test   BYTE PTR [ecx],cl
  41d5bc:	pop    eax
  41d5bd:	bound  ebx,QWORD PTR [edi]
  41d5bf:	stos   DWORD PTR es:[edi],eax
  41d5c0:	dec    eax
  41d5c1:	sbb    cl,dh
  41d5c3:	and    BYTE PTR [esi+0x7e],0xa4
  41d5c7:	mov    eax,ds:0xc6c3ad14
  41d5cc:	xor    eax,0xae8ac850
  41d5d1:	fist   WORD PTR [esp+edi*2]
  41d5d4:	mov    cl,0x4b
  41d5d6:	call   0x33ee7469
  41d5db:	ds jg  0x41d624
  41d5de:	pop    ss
  41d5df:	(bad)  
  41d5e0:	fnstcw WORD PTR [ebx+0x1f907cdc]
  41d5e6:	jp     0x41d5f0
  41d5e8:	fdivr  DWORD PTR [ebp-0x1ef66b02]
  41d5ee:	xchg   BYTE PTR [edx+0x3b8e3db1],cl
  41d5f4:	cmp    dl,ch
  41d5f6:	jmp    0x55faeded
  41d5fb:	mov    WORD PTR [ecx+0x47],?
  41d5fe:	test   DWORD PTR [ebx+eax*8+0x30ab72f4],edi
  41d605:	xor    DWORD PTR cs:[edi-0x77],ebx
  41d609:	mov    es,WORD PTR [esi-0x14334623]
  41d60f:	xor    al,cl
  41d611:	shl    DWORD PTR [ebp+0x75706512],cl
  41d617:	sbb    esp,esp
  41d619:	pop    ecx
  41d61a:	pop    ebp
  41d61b:	bound  ebp,QWORD PTR [ebx+0x8]
  41d61e:	and    ecx,DWORD PTR [edi+0x2c41bea6]
  41d624:	jb     0x41d653
  41d626:	pop    edi
  41d627:	and    ecx,DWORD PTR [ebp+ebx*4+0x18]
  41d62b:	cmp    DWORD PTR [ebx+0x5843501d],ebp
  41d631:	dec    ebp
  41d632:	jae    0x41d694
  41d634:	call   0xd534:0x110b83d7
  41d63b:	stc    
  41d63c:	xor    eax,0x505a24a0
  41d641:	jmp    0x818c:0xe402a654
  41d648:	pop    eax
  41d649:	neg    BYTE PTR [ecx-0x591a4131]
  41d64f:	jecxz  0x41d6c4
  41d651:	std    
  41d652:	mov    ebx,0x15a536c9
  41d657:	cmp    DWORD PTR [ebx-0x40],ebx
  41d65a:	mov    al,ds:0xd982d301
  41d65f:	jns    0x41d659
  41d661:	jns    0x41d60c
  41d663:	dec    edi
  41d664:	adc    al,0x14
  41d666:	(bad)  
  41d667:	loopne 0x41d6ab
  41d669:	out    0x54,al
  41d66b:	enter  0xcec9,0x99
  41d66f:	lods   al,BYTE PTR ds:[esi]
  41d670:	mov    edi,DWORD PTR [edi+0xc]
  41d673:	fisub  DWORD PTR [esi-0x55]
  41d676:	fwait
  41d677:	adc    eax,0x5f31dd63
  41d67c:	add    esp,DWORD PTR [esi+0x40]
  41d67f:	push   0xab79cb9b
  41d684:	cmp    al,0x9
  41d686:	cmp    ah,BYTE PTR cs:[edi+esi*2]
  41d68a:	xchg   DWORD PTR [eax],esi
  41d68c:	jecxz  0x41d6e1
  41d68e:	scas   eax,DWORD PTR es:[edi]
  41d68f:	fbld   TBYTE PTR [ebx-0x4a7a485b]
  41d695:	enter  0xfc0d,0xea
  41d699:	xchg   esi,eax
  41d69a:	aas    
  41d69b:	je     0x41d695
  41d69d:	imul   ecx
  41d69f:	ret    0x8bc
  41d6a2:	test   al,0x2
  41d6a4:	push   es
  41d6a5:	ins    DWORD PTR es:[edi],dx
  41d6a6:	push   ebp
  41d6a7:	inc    edi
  41d6a8:	ret    0x4083
  41d6ab:	mov    esi,0xcc021602
  41d6b0:	shl    BYTE PTR [ebx],1
  41d6b2:	sbb    eax,0xf3a3e670
  41d6b7:	int3   
  41d6b8:	lods   eax,DWORD PTR ds:[esi]
  41d6b9:	pusha  
  41d6ba:	lock pusha 
  41d6bc:	mov    edx,0x13f87720
  41d6c1:	and    ebp,DWORD PTR [ecx+0x6409012f]
  41d6c7:	adc    eax,0x62912a30
  41d6cc:	pushf  
  41d6cd:	sub    bh,ch
  41d6cf:	ficomp DWORD PTR [ecx-0x4c]
  41d6d2:	mov    ch,0x75
  41d6d4:	mov    bh,0xc0
  41d6d6:	mov    ch,0x30
  41d6d8:	stos   DWORD PTR es:[edi],eax
  41d6d9:	jbe    0x41d6c4
  41d6db:	dec    edi
  41d6dc:	jecxz  0x41d739
  41d6de:	test   ebx,edx
  41d6e0:	mov    DWORD PTR [edx+ebp*8+0x16],edi
  41d6e4:	(bad)  
  41d6e5:	adc    cl,BYTE PTR [esi+0xa042a5a]
  41d6eb:	scas   al,BYTE PTR es:[edi]
  41d6ec:	mov    al,ds:0xa31b463c
  41d6f1:	add    edx,DWORD PTR ds:0xd74c54e5
  41d6f7:	xchg   ebx,eax
  41d6f8:	test   BYTE PTR [ecx],0x85
  41d6fb:	rcl    BYTE PTR [edi-0x2e],cl
  41d6fe:	test   eax,0xb06c1169
  41d703:	test   bh,0x9f
  41d706:	(bad)  
  41d707:	and    DWORD PTR [edi],esi
  41d709:	retf   
  41d70a:	or     bh,0xc4
  41d70d:	xlat   BYTE PTR ds:[ebx]
  41d70e:	addr16 mov esp,0xd97da2b0
  41d714:	imul   ecx,ebp,0xffffff82
  41d717:	or     DWORD PTR ds:0x99e4e13b,ebx
  41d71d:	in     eax,0x4a
  41d71f:	and    eax,0x8249197e
  41d724:	ja     0x41d707
  41d726:	mov    ebx,0x50e745a0
  41d72b:	imul   edi,ebp,0xffffffb5
  41d72e:	int3   
  41d72f:	pushf  
  41d730:	mov    cl,0x6d
  41d732:	(bad)  
  41d733:	shr    DWORD PTR [edi-0x7065b9e5],cl
  41d739:	es leave 
  41d73b:	dec    ebx
  41d73c:	fadd   DWORD PTR [edx-0x44]
  41d73f:	pushf  
  41d740:	shl    BYTE PTR [ebx],0xad
  41d743:	add    ch,BYTE PTR [esi-0x50eee0e3]
  41d749:	(bad)
  41d74c:	lock daa 
  41d74e:	mov    ecx,0xc0a1888d
  41d754:	and    al,0x3d
  41d756:	push   edi
  41d757:	inc    eax
  41d758:	sbb    BYTE PTR [ebx-0x46],0x1f
  41d75c:	xchg   DWORD PTR [ebx-0x42],ebx
  41d75f:	ret    
  41d760:	or     BYTE PTR [edi],bl
  41d762:	sbb    DWORD PTR [ebx],0x3b85ea82
  41d768:	pusha  
  41d769:	ret    0xde9e
  41d76c:	and    DWORD PTR [edi-0x4e33c0e1],esi
  41d772:	push   edx
  41d773:	ror    DWORD PTR [ecx+ebp*2+0x5],1
  41d777:	jmp    0x41d764
  41d779:	mov    al,ds:0x85bd6970
  41d77e:	out    0x1b,eax
  41d780:	mov    al,ds:0xad951ed8
  41d785:	mov    al,0x9b
  41d787:	pop    eax
  41d788:	mul    DWORD PTR [eax]
  41d78a:	sbb    dh,BYTE PTR [ecx+0x2d]
  41d78d:	data16 cli 
  41d78f:	sti    
  41d790:	bound  ecx,QWORD PTR [ebp-0x6d6311aa]
  41d796:	pop    eax
  41d797:	test   eax,0x9458d963
  41d79c:	add    dl,BYTE PTR [ecx+edi*2+0x57]
  41d7a0:	rcr    DWORD PTR [ebx],1
  41d7a2:	scas   al,BYTE PTR es:[edi]
  41d7a3:	into   
  41d7a4:	sub    ebx,ebp
  41d7a6:	ret    
  41d7a7:	jle    0x41d7d2
  41d7a9:	add    al,0x51
  41d7ab:	jbe    0x41d7c1
  41d7ad:	ins    DWORD PTR es:[edi],dx
  41d7ae:	sbb    DWORD PTR [ebp+ecx*4+0x76],ebp
  41d7b2:	out    dx,al
  41d7b3:	mov    ebx,0x48885b36
  41d7b8:	xchg   edi,eax
  41d7b9:	push   cs
  41d7ba:	retf   0x1f85
  41d7bd:	push   0x23
  41d7bf:	stc    
  41d7c0:	sar    bh,1
  41d7c2:	fbstp  TBYTE PTR [esi-0x5eee9534]
  41d7c8:	adc    bl,cl
  41d7ca:	mov    ecx,0xe8195184
  41d7cf:	xchg   ebp,eax
  41d7d0:	inc    esi
  41d7d1:	(bad)  
  41d7d2:	lock sub esi,esi
  41d7d5:	lds    ebx,FWORD PTR ds:0xf405fe64
  41d7db:	daa    
  41d7dc:	cs inc esp
  41d7de:	rcr    dh,1
  41d7e0:	mov    ds:0xf7056eae,eax
  41d7e5:	jo     0x41d79f
  41d7e7:	ret    0xd770
  41d7ea:	sub    eax,0xb18220
  41d7ef:	add    BYTE PTR [esi+0x7b],ch
  41d7f2:	ins    BYTE PTR es:[edi],dx
  41d7f3:	sbb    eax,0xe55a0a6b
  41d7f8:	in     al,0x94
  41d7fa:	xlat   BYTE PTR ds:[ebx]
  41d7fb:	jp     0x41d7be
  41d7fd:	addr16 ss (bad) 
  41d800:	sub    ebp,ebp
  41d802:	(bad)  
  41d803:	(bad)  
  41d805:	mov    ecx,0xdb9f3949
  41d80a:	pop    es
  41d80b:	mov    eax,ds:0x84374fbc
  41d810:	rcl    BYTE PTR [edi+0x7bf7bd2c],1
  41d816:	cmp    BYTE PTR [eax+0x40f6765d],ah
  41d81c:	fs stos DWORD PTR es:[edi],eax
  41d81e:	lahf   
  41d81f:	(bad)  ds:0x6e675aff
  41d825:	ret    
  41d826:	jbe    0x41d846
  41d828:	mov    edx,0x2a98293
  41d82d:	jb     0x41d88d
  41d82f:	pop    ebp
  41d830:	push   edi
  41d831:	mov    ebx,0x746176b2
  41d836:	sub    esp,ebx
  41d838:	and    DWORD PTR [ebx+0x3d],ebx
  41d83b:	jg     0x41d871
  41d83d:	push   0xfffffff6
  41d83f:	mov    ds:0x9a70aedc,eax
  41d844:	in     eax,dx
  41d845:	fsubr  DWORD PTR [esp+ebp*4]
  41d848:	mov    DWORD PTR [ecx+0x6375be3e],esp
  41d84e:	cli    
  41d84f:	push   ebp
  41d850:	cmp    eax,0xfb1d9c93
  41d855:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d856:	mov    ah,BYTE PTR ds:[edx+ebx*4+0x547b86fd]
  41d85e:	jmp    0x1a39a415
  41d863:	jbe    0x41d80b
  41d865:	(bad)  
  41d866:	inc    edx
  41d867:	(bad)  
  41d868:	shl    esi,cl
  41d86a:	and    DWORD PTR [ebp-0x582cca5c],ecx
  41d870:	aas    
  41d871:	jle    0x41d89e
  41d873:	lahf   
  41d874:	aaa    
  41d875:	rcl    BYTE PTR [ebx+ecx*1],cl
  41d878:	scas   al,BYTE PTR es:[edi]
  41d879:	and    BYTE PTR [ecx],0x4e
  41d87c:	jmp    0x41d8d2
  41d87e:	sti    
  41d87f:	mov    BYTE PTR [ecx-0x73],bl
  41d882:	xchg   BYTE PTR [ebx+0x5f],al
  41d885:	scas   eax,DWORD PTR es:[edi]
  41d886:	mov    bh,0xd
  41d888:	sbb    edx,DWORD PTR [ebp-0x7d]
  41d88b:	or     al,0xe1
  41d88d:	int3   
  41d88e:	mov    edx,0xcaefc502
  41d893:	out    0xf2,eax
  41d895:	xor    bl,BYTE PTR [edx+0x47257119]
  41d89b:	loopne 0x41d867
  41d89d:	pushf  
  41d89e:	mov    al,0xa2
  41d8a0:	(bad)  
  41d8a1:	push   ebx
  41d8a2:	add    al,BYTE PTR [edi-0x45]
  41d8a5:	mov    fs,WORD PTR [ecx-0x39ddb21d]
  41d8ab:	mov    bh,0xd7
  41d8ad:	ss loope 0x41d91a
  41d8b0:	lock push ebx
  41d8b2:	ja     0x41d912
  41d8b4:	xchg   BYTE PTR [ebx+0x4668002f],cl
  41d8ba:	xor    cl,BYTE PTR [edi+edx*2-0xf6540ba]
  41d8c1:	sbb    eax,ecx
  41d8c3:	dec    esp
  41d8c4:	cmp    BYTE PTR [eax+ecx*2],al
  41d8c7:	push   0xfffffff9
  41d8c9:	into   
  41d8ca:	add    eax,0x69f12a32
  41d8cf:	xchg   edx,eax
  41d8d0:	sbb    BYTE PTR [esi+0x320e205c],bh
  41d8d6:	dec    ebp
  41d8d7:	in     eax,0xeb
  41d8d9:	fwait
  41d8da:	adc    edx,DWORD PTR [edx]
  41d8dc:	mov    ebx,DWORD PTR [ebx+0xc]
  41d8df:	test   al,0x9
  41d8e1:	inc    eax
  41d8e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8e3:	les    eax,FWORD PTR [edx+0x514570eb]
  41d8e9:	mov    ?,WORD PTR [eax-0x44]
  41d8ec:	es lock loope 0x41d8b1
  41d8f0:	dec    dx
  41d8f2:	daa    
  41d8f3:	ss mov ecx,0x288ebef7
  41d8f9:	ja     0x41d93e
  41d8fb:	jl     0x41d885
  41d8fd:	mov    ds:0x4dd48216,al
  41d902:	xchg   edx,eax
  41d903:	sti    
  41d904:	mov    bh,0x69
  41d906:	add    esi,ebx
  41d908:	push   cs
  41d909:	cs pop eax
  41d90b:	lods   al,BYTE PTR ds:[esi]
  41d90c:	or     BYTE PTR [eax],dl
  41d90e:	sar    DWORD PTR [edi+0x4a430f8b],0x6e
  41d915:	xchg   esi,eax
  41d916:	sub    BYTE PTR [ecx+edi*8-0x78e60072],ch
  41d91d:	lods   eax,DWORD PTR ds:[esi]
  41d91e:	and    ah,al
  41d920:	jmp    0x41d968
  41d922:	aad    0x65
  41d924:	xor    eax,0x26d5feb
  41d929:	sbb    ecx,DWORD PTR [edx]
  41d92b:	xor    eax,0x7ca0ae46
  41d930:	cld    
  41d931:	clc    
  41d932:	xor    edi,DWORD PTR [edx-0x41]
  41d935:	int    0x1b
  41d937:	mov    ebp,0x1a134408
  41d93c:	out    dx,al
  41d93d:	retf   
  41d93e:	pop    eax
  41d93f:	stos   BYTE PTR es:[edi],al
  41d940:	lods   al,BYTE PTR ds:[esi]
  41d941:	push   ebx
  41d942:	dec    ecx
  41d943:	test   al,0xe6
  41d945:	push   cs
  41d946:	cmp    al,0xd8
  41d948:	stos   DWORD PTR es:[edi],eax
  41d949:	ret    
  41d94a:	stc    
  41d94b:	adc    al,0xcb
  41d94d:	mov    bl,0x43
  41d94f:	push   ebx
  41d950:	sbb    eax,0xba25c527
  41d955:	cmp    esp,edx
  41d957:	scas   al,BYTE PTR es:[edi]
  41d958:	xor    dl,BYTE PTR [esi+0x52]
  41d95b:	push   edi
  41d95c:	(bad)  
  41d95d:	jmp    0x9708:0x760d3481
  41d964:	mov    bl,0x85
  41d966:	and    eax,0xf7f4c4e8
  41d96b:	adc    DWORD PTR [edi],eax
  41d96d:	(bad)  
  41d96e:	jmp    0x41d94f
  41d970:	pop    eax
  41d971:	outs   dx,DWORD PTR ds:[esi]
  41d972:	xor    BYTE PTR [edi-0x52],0x7f
  41d976:	addps  xmm3,xmm1
  41d979:	or     cl,bh
  41d97b:	add    edi,DWORD PTR [edi+eiz*4-0x70]
  41d97f:	or     al,0x8d
  41d981:	ins    BYTE PTR es:[edi],dx
  41d982:	mov    dh,0xf4
  41d984:	clc    
  41d985:	xor    al,0x42
  41d987:	aaa    
  41d988:	push   ds
  41d989:	imul   edi,DWORD PTR [eax],0xffffffb1
  41d98c:	jns    0x41d991
  41d98e:	and    edx,esi
  41d990:	fmul   QWORD PTR [ebx-0x2]
  41d993:	sub    eax,0x42f6d32d
  41d998:	mov    eax,ds:0xd2de18d0
  41d99d:	lea    esi,[ebp+eax*1-0x4bebd848]
  41d9a4:	ret    
  41d9a5:	sub    BYTE PTR [edi-0x67],ch
  41d9a8:	or     eax,0xe87d0a77
  41d9ad:	inc    eax
  41d9ae:	scas   al,BYTE PTR es:[edi]
  41d9af:	in     al,dx
  41d9b0:	pop    esi
  41d9b1:	lods   al,BYTE PTR ds:[esi]
  41d9b2:	xor    al,0xdd
  41d9b4:	add    BYTE PTR [ebp-0x78],0x21
  41d9b8:	jns    0x41d95d
  41d9ba:	xor    eax,0x33f1198e
  41d9bf:	xchg   esp,eax
  41d9c0:	cmc    
  41d9c1:	lock jecxz 0x41da41
  41d9c4:	ret    
  41d9c5:	aaa    
  41d9c6:	setnp  BYTE PTR [edi+eax*1]
  41d9ca:	or     eax,0x54f839d3
  41d9cf:	call   0xef0d3a8e
  41d9d4:	mov    ds:0x401ae6cb,eax
  41d9d9:	inc    ebx
  41d9da:	fdiv   QWORD PTR [esi]
  41d9dc:	sbb    BYTE PTR [edi],ch
  41d9de:	imul   edi,DWORD PTR [esi+edx*2],0x17ca00b
  41d9e5:	pop    eax
  41d9e6:	mov    edi,fs
  41d9e8:	inc    esi
  41d9e9:	sub    BYTE PTR [esi-0x62fd0db7],0x90
  41d9f0:	fbld   TBYTE PTR [ecx+eiz*2-0x2ea02c77]
  41d9f7:	add    eax,0xd52610a8
  41d9fc:	cmc    
  41d9fd:	pushf  
  41d9fe:	sub    eax,ecx
  41da00:	imul   ebx,DWORD PTR [esi+0x76b6df73],0xffffff9f
  41da07:	sbb    dl,bh
  41da09:	loopne 0x41d9ca
  41da0b:	xor    eax,0x30abbc92
  41da10:	mov    DWORD PTR [ebx+0x46effbc4],esp
  41da16:	dec    ebx
  41da17:	xchg   ecx,eax
  41da18:	sub    al,0x7c
  41da1a:	xchg   ebx,eax
  41da1b:	ins    DWORD PTR es:[edi],dx
  41da1c:	outs   dx,BYTE PTR ds:[esi]
  41da1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da1e:	stos   BYTE PTR es:[edi],al
  41da1f:	test   eax,0xd0e980b1
  41da24:	mov    al,0x1d
  41da26:	lock cmp al,0x10
  41da29:	aas    
  41da2a:	stos   DWORD PTR es:[edi],eax
  41da2b:	(bad)  
  41da2c:	outs   dx,BYTE PTR ds:[esi]
  41da2d:	test   eax,0xc13184bf
  41da32:	mov    WORD PTR gs:[eax-0x15],fs
  41da36:	or     BYTE PTR [ebx],dl
  41da38:	fmul   DWORD PTR [ebp+0x7a640995]
  41da3e:	or     ecx,esi
  41da40:	gs fwait
  41da42:	and    ebx,ebx
  41da44:	or     BYTE PTR [esi],dl
  41da46:	mov    ecx,0xde7eede3
  41da4b:	mov    ebp,0x6851a88f
  41da50:	fimul  WORD PTR [edi+0x58c94894]
  41da56:	imul   DWORD PTR [esp+ebx*8+0x45a0840]
  41da5d:	(bad)  
  41da5e:	jbe    0x41dad1
  41da60:	adc    ah,dl
  41da62:	dec    eax
  41da63:	push   0x58
  41da65:	xor    edx,DWORD PTR [edi+0xb766d52]
  41da6b:	fidivr WORD PTR [ecx]
  41da6d:	push   esi
  41da6e:	or     BYTE PTR [esi-0x6],bh
  41da71:	xchg   ecx,eax
  41da72:	xchg   edi,eax
  41da73:	mov    ebx,0x64209ef9
  41da78:	fcmovb st,st(7)
  41da7a:	inc    eax
  41da7b:	leave  
  41da7c:	ret    
  41da7d:	dec    ebp
  41da7e:	in     al,0x95
  41da80:	mov    esi,0x8b66c0a7
  41da85:	xor    DWORD PTR [ebx+0x4b],0x3a16b47
  41da8c:	fist   DWORD PTR ds:0xf4650bac
  41da92:	ins    BYTE PTR es:[edi],dx
  41da93:	sahf   
  41da94:	xor    DWORD PTR [edx-0x26],0x20945c38
  41da9b:	xlat   BYTE PTR ds:[ebx]
  41da9c:	in     al,dx
  41da9d:	stos   DWORD PTR es:[edi],eax
  41da9e:	jo     0x41da68
  41daa0:	inc    ecx
  41daa1:	and    BYTE PTR [eax+0x12851b37],bl
  41daa7:	scas   al,BYTE PTR es:[edi]
  41daa8:	mov    ds:0x9b2722e4,eax
  41daad:	outs   dx,BYTE PTR ds:[esi]
  41daae:	and    dl,BYTE PTR [ecx+eiz*4+0x25]
  41dab2:	or     eax,eax
  41dab4:	ret    0xb460
  41dab7:	inc    edx
  41dab8:	mov    bh,0x9
  41daba:	aaa    
  41dabb:	imul   edx,DWORD PTR [ebx],0x5d
  41dabe:	jg     0x41dac5
  41dac0:	rol    DWORD PTR [eax],1
  41dac2:	sbb    eax,0x4e78e3de
  41dac7:	jp     0x41db40
  41dac9:	sbb    al,0x9b
  41dacc:	mov    ds:0xf222bbb7,al
  41dad1:	xchg   esp,eax
  41dad2:	cmp    eax,0x9b48f2ed
  41dad7:	xchg   edi,eax
  41dad8:	xor    BYTE PTR [edx],0xc5
  41dadb:	inc    edx
  41dadc:	les    ebp,FWORD PTR [ecx+0x5950e7fa]
  41dae2:	cwde   
  41dae3:	or     ebp,esi
  41dae5:	fdiv   QWORD PTR [ebx+0x1e]
  41dae8:	cwde   
  41dae9:	mov    al,0x55
  41daeb:	mov    ebp,0x58aac3e8
  41daf0:	(bad)  
  41daf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41daf2:	sti    
  41daf3:	ja     0x41dad0
  41daf5:	sub    BYTE PTR ds:0x61f9e7d,0x5f
  41dafc:	dec    ecx
  41dafd:	push   es
  41dafe:	bound  ecx,QWORD PTR [edi-0x1423e038]
  41db04:	retf   0xbb8d
  41db07:	xchg   esi,eax
  41db08:	push   cs
  41db09:	std    
  41db0a:	add    DWORD PTR [eax-0x50],esi
  41db0d:	xchg   esi,eax
  41db0e:	jmp    0x5d8278a5
  41db13:	ror    BYTE PTR [edx],cl
  41db15:	int    0x6c
  41db17:	mov    cl,0x72
  41db19:	jb     0x41dadb
  41db1b:	xchg   edx,eax
  41db1c:	scas   al,BYTE PTR es:[edi]
  41db1d:	jo     0x41db97
  41db1f:	sub    eax,0x7ade152f
  41db24:	xchg   esi,eax
  41db25:	jg     0x41db48
  41db27:	xchg   BYTE PTR [esi],cl
  41db29:	fsubr  QWORD PTR [ecx+ebp*8-0x1]
  41db2d:	mov    al,0xe
  41db2f:	test   eax,0xe93ecaf8
  41db34:	jl     0x41db6b
  41db36:	out    0x34,eax
  41db38:	loop   0x41dafc
  41db3a:	cli    
  41db3b:	inc    esp
  41db3c:	call   0x36b8:0xfddce48e
  41db43:	mov    cl,0xec
  41db45:	rcr    BYTE PTR [edi-0x7ac876e],cl
  41db4b:	daa    
  41db4c:	(bad)  
  41db4e:	sub    al,0x5e
  41db50:	shl    BYTE PTR [ecx],1
  41db52:	shl    DWORD PTR [eax],0x6
  41db55:	or     BYTE PTR [esi+0x6f],0xa8
  41db59:	mov    dh,0x8a
  41db5b:	jmp    0x41db20
  41db5d:	pop    ds
  41db5e:	aaa    
  41db5f:	cs dec ebx
  41db61:	mov    eax,0x5189ea12
  41db66:	adc    edx,DWORD PTR [esp+edi*4]
  41db69:	xor    al,0x8e
  41db6b:	stos   BYTE PTR es:[edi],al
  41db6c:	aam    0x74
  41db6e:	sbb    ebx,DWORD PTR [eax-0x7a]
  41db71:	daa    
  41db72:	icebp  
  41db73:	pop    eax
  41db74:	int    0xac
  41db76:	int    0xc2
  41db78:	push   ebx
  41db79:	sahf   
  41db7a:	and    edi,DWORD PTR [eax]
  41db7c:	(bad)  
  41db7d:	sbb    ebx,DWORD PTR [eax]
  41db7f:	mov    ecx,0xb5a2b5df
  41db84:	fcmovbe st,st(3)
  41db86:	lahf   
  41db87:	call   0x1da422a4
  41db8c:	ficom  DWORD PTR [ebx-0x4138c8e9]
  41db92:	pop    ebp
  41db93:	pop    edx
  41db94:	rcl    BYTE PTR [esi+0x441d50f4],cl
  41db9a:	mov    ecx,0x85e3d71a
  41db9f:	and    eax,0xc1935e24
  41dba4:	xor    DWORD PTR [edi-0x11a3b5a],edx
  41dbaa:	into   
  41dbab:	push   0x2ac3752d
  41dbb0:	inc    ebp
  41dbb1:	test   eax,0xcf74e72c
  41dbb6:	sbb    DWORD PTR [edi+0x3e95afb6],ecx
  41dbbc:	and    al,0x8d
  41dbbe:	mov    bh,0x5f
  41dbc0:	sub    DWORD PTR [edx],edx
  41dbc2:	fwait
  41dbc3:	jno    0x41dbc0
  41dbc5:	cdq    
  41dbc6:	inc    esi
  41dbc7:	xchg   ecx,eax
  41dbc8:	push   edx
  41dbc9:	call   0x5cbc12a1
  41dbce:	xlat   BYTE PTR ds:[ebx]
  41dbcf:	push   edi
  41dbd0:	rcr    DWORD PTR [esi],cl
  41dbd2:	xchg   ebp,eax
  41dbd3:	out    0x1e,al
  41dbd5:	lds    eax,FWORD PTR [edi+ebp*1]
  41dbd8:	inc    ecx
  41dbd9:	icebp  
  41dbda:	dec    esi
  41dbdb:	adc    DWORD PTR [esi+edi*1+0x5b],ebx
  41dbdf:	enter  0xcc41,0x5e
  41dbe3:	inc    ebx
  41dbe4:	jmp    0x9c493a01
  41dbe9:	mov    bh,0x2c
  41dbeb:	cmp    edi,edi
  41dbed:	mov    edx,DWORD PTR [ecx-0x15]
  41dbf0:	ror    BYTE PTR [esi+ebp*4-0x4d],1
  41dbf4:	dec    esp
  41dbf5:	pop    eax
  41dbf6:	jp     0x41dc5f
  41dbf8:	xchg   ebp,eax
  41dbf9:	jecxz  0x41dbc9
  41dbfb:	sub    eax,0xa90f8c7b
  41dc00:	mov    esi,0x97d28f4b
  41dc05:	ret    
  41dc06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc07:	div    BYTE PTR [eax+0x165b1a34]
  41dc0d:	cmp    bl,BYTE PTR [esi+0x656ff4c1]
  41dc13:	add    ch,al
  41dc15:	retf   
  41dc16:	xor    dh,bl
  41dc18:	(bad)  
  41dc1a:	outs   dx,BYTE PTR ds:[esi]
  41dc1b:	dec    edx
  41dc1c:	enter  0x5187,0xf8
  41dc20:	js     0x41dc03
  41dc22:	and    DWORD PTR [esi-0x79244c86],ebx
  41dc28:	inc    ebx
  41dc29:	lds    ebx,FWORD PTR [edi]
  41dc2b:	outs   dx,DWORD PTR ds:[esi]
  41dc2c:	fldenv [esi+ebp*2]
  41dc2f:	lea    ecx,[edi-0x66]
  41dc32:	outs   dx,DWORD PTR ds:[esi]
  41dc33:	loop   0x41dc8c
  41dc35:	lods   al,BYTE PTR ds:[esi]
  41dc36:	sbb    al,0xa2
  41dc38:	inc    edx
  41dc39:	call   DWORD PTR [ecx+0x7f]
  41dc3c:	cs int 0x63
  41dc3f:	outs   dx,BYTE PTR ds:[esi]
  41dc40:	sbb    eax,0x6921c64
  41dc45:	cmp    ch,BYTE PTR [ebp+0x72]
  41dc48:	or     BYTE PTR [edx-0x22d6d06d],bl
  41dc4e:	add    DWORD PTR [edx-0x69],ecx
  41dc51:	sti    
  41dc52:	inc    ebp
  41dc53:	inc    esi
  41dc54:	cmp    esp,ecx
  41dc56:	in     al,0x49
  41dc58:	xchg   edi,eax
  41dc59:	xchg   ebp,eax
  41dc5a:	dec    esi
  41dc5b:	inc    edi
  41dc5c:	add    eax,0xc4fdd3f1
  41dc61:	dec    esi
  41dc62:	xor    edx,edx
  41dc64:	enter  0x78a2,0x61
  41dc68:	(bad)  
  41dc69:	dec    ebx
  41dc6a:	int3   
  41dc6b:	push   es
  41dc6c:	and    eax,DWORD PTR [edx+0x7c]
  41dc6f:	ins    DWORD PTR es:[edi],dx
  41dc70:	das    
  41dc71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc72:	std    
  41dc73:	push   ds
  41dc74:	or     BYTE PTR [eax],al
  41dc76:	sbb    ebp,DWORD PTR [esi+0x59f50e53]
  41dc7c:	or     ch,BYTE PTR [eax]
  41dc7e:	add    cl,dl
  41dc80:	adc    eax,0x8b19ca85
  41dc85:	bound  edx,QWORD PTR [eax-0x27]
  41dc88:	adc    al,0x61
  41dc8a:	sbb    al,0x7d
  41dc8c:	jbe    0x41dc2f
  41dc8e:	or     esi,DWORD PTR [eax+0xf]
  41dc91:	jb     0x41dc7b
  41dc93:	jg     0x41dcd3
  41dc95:	retf   0xdae
  41dc98:	adc    ebx,esp
  41dc9a:	popa   
  41dc9b:	add    al,BYTE PTR [esi-0x4a9dc9a9]
  41dca1:	stos   BYTE PTR es:[edi],al
  41dca2:	retf   
  41dca3:	leave  
  41dca4:	adc    DWORD PTR [ebx],esi
  41dca6:	scas   eax,DWORD PTR es:[edi]
  41dca7:	es xchg esp,eax
  41dca9:	or     ebx,esi
  41dcab:	mov    ds:0x57fe158,al
  41dcb0:	pop    esp
  41dcb1:	std    
  41dcb2:	sbb    ecx,eax
  41dcb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcb5:	push   ecx
  41dcb6:	imul   ebp,ecx
  41dcb9:	sub    al,0xc5
  41dcbb:	retf   0x3801
  41dcbe:	dec    edi
  41dcbf:	jbe    0x41dca0
  41dcc1:	mov    esi,0xe4a45afd
  41dcc6:	pop    ecx
  41dcc7:	ins    BYTE PTR es:[edi],dx
  41dcc8:	int    0xbe
  41dcca:	mov    esi,0xd2a52a37
  41dccf:	push   edx
  41dcd0:	out    0x7,al
  41dcd2:	sti    
  41dcd3:	xor    ecx,DWORD PTR [edx]
  41dcd5:	sbb    BYTE PTR [ebp-0x56],bh
  41dcd8:	rcr    BYTE PTR ds:0x50f552f7,1
  41dcde:	imul   BYTE PTR [ebx+0x4de501d6]
  41dce4:	and    ecx,DWORD PTR [ebp+0x1385d3d7]
  41dcea:	les    edi,FWORD PTR [ebx]
  41dcec:	ror    BYTE PTR [ebx-0x14068443],1
  41dcf2:	pop    ecx
  41dcf3:	jge    0x41dca5
  41dcf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcf6:	jle    0x41dd2b
  41dcf8:	fsub   QWORD PTR [edx+ecx*8+0x1467c7c3]
  41dcff:	xchg   si,ax
  41dd01:	xchg   ebx,eax
  41dd02:	(bad)  
  41dd03:	sub    eax,0xb17a6a8
  41dd08:	dec    edx
  41dd09:	push   es
  41dd0a:	xor    BYTE PTR [edi+eiz*8+0x6a693497],ah
  41dd11:	pusha  
  41dd12:	test   eax,0xf38ceb0d
  41dd17:	jmp    0x41dd0e
  41dd19:	dec    eax
  41dd1a:	add    DWORD PTR [ebp-0x3b],0x40
  41dd1e:	daa    
  41dd1f:	cld    
  41dd20:	push   esp
  41dd21:	or     BYTE PTR es:[edi-0x3bc127bf],ah
  41dd28:	mov    eax,ds:0x30c244e
  41dd2d:	je     0x41dda8
  41dd2f:	sub    DWORD PTR [esi-0x2bf9b819],edx
  41dd35:	aaa    
  41dd36:	mov    edi,0xe0931156
  41dd3b:	repz push ss
  41dd3d:	adc    DWORD PTR [edi],ecx
  41dd3f:	mov    eax,0x5182e273
  41dd45:	jo     0x41ddb6
  41dd47:	(bad)  
  41dd49:	add    ecx,DWORD PTR [ecx-0x6239e312]
  41dd4f:	xor    ah,BYTE PTR [ecx-0x9]
  41dd52:	mov    ecx,0x415480a6
  41dd57:	pop    edi
  41dd58:	loopne 0x41dd08
  41dd5a:	mov    ebx,0x84a7382a
  41dd5f:	jb     0x41dd30
  41dd61:	sti    
  41dd62:	mov    bl,bl
  41dd64:	mov    ds:0x5ce38dea,al
  41dd69:	or     eax,0x6e583e18
  41dd6e:	aad    0x19
  41dd70:	loop   0x41dd88
  41dd72:	xor    al,0x84
  41dd74:	loopne 0x41ddcd
  41dd76:	push   ebx
  41dd77:	xchg   edx,eax
  41dd78:	pop    esp
  41dd79:	addr16 es push cs
  41dd7c:	test   al,0x93
  41dd7e:	in     al,0xa4
  41dd80:	stos   DWORD PTR es:[edi],eax
  41dd81:	pop    ds
  41dd82:	jecxz  0x41ddb9
  41dd84:	ds es cli 
  41dd87:	icebp  
  41dd88:	jmp    0x2652a4c5
  41dd8d:	sahf   
  41dd8e:	sub    BYTE PTR [edx],bl
  41dd90:	cmp    eax,0x2ae5d7d3
  41dd95:	pop    edx
  41dd96:	fisub  DWORD PTR [edi]
  41dd98:	sub    BYTE PTR [esi+0x77],dl
  41dd9b:	(bad)  
  41dd9c:	push   cs
  41dd9d:	inc    ebx
  41dd9e:	call   0x4aa9:0xefffd841
  41dda5:	pop    edx
  41dda6:	test   al,0x7a
  41dda8:	fmul   st(6),st
  41ddaa:	ins    DWORD PTR es:[edi],dx
  41ddab:	loope  0x41dd6a
  41ddad:	adc    BYTE PTR [edx],dh
  41ddaf:	or     eax,0x968f5684
  41ddb4:	adc    al,0xfb
  41ddb6:	adc    BYTE PTR [edi-0x6],dh
  41ddb9:	outs   dx,BYTE PTR ds:[esi]
  41ddba:	fnstsw WORD PTR [edx+0x29]
  41ddbd:	push   cs
  41ddbe:	add    dh,BYTE PTR [edi+0x359525da]
  41ddc4:	or     DWORD PTR [esi],ecx
  41ddc6:	aaa    
  41ddc7:	push   ss
  41ddc8:	dec    edi
  41ddc9:	test   al,0xfa
  41ddcb:	sub    ah,BYTE PTR [edx-0x4c]
  41ddce:	mov    al,0xb
  41ddd0:	mov    esp,0x788ae82b
  41ddd5:	neg    DWORD PTR [edi-0x22]
  41ddd8:	and    cl,BYTE PTR [esi]
  41ddda:	or     eax,0xa7e882d6
  41dddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dde0:	pop    edi
  41dde1:	mov    ah,0x7e
  41dde3:	repz sbb eax,0xff44cc10
  41dde9:	cs mov bh,0x4e
  41ddec:	frstor [ebx-0x71]
  41ddef:	repnz mov eax,0x1a428089
  41ddf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ddf6:	xor    al,0x2c
  41ddf8:	fdiv   DWORD PTR [edx]
  41ddfa:	or     bl,0x9c
  41ddfd:	mov    ebx,0x8f2273f8
  41de02:	fld    DWORD PTR [eax]
  41de04:	jb     0x41de37
  41de06:	popf   
  41de07:	pop    es
  41de08:	fnstsw ax
  41de0a:	jbe    0x41dda1
  41de0c:	pusha  
  41de0d:	in     eax,dx
  41de0e:	pushw  0x444b
  41de12:	xor    edi,edi
  41de14:	mov    edx,0x3d0e136a
  41de19:	mov    ebx,0x19d5ab33
  41de1e:	jo     0x41de06
  41de20:	jmp    0xc922:0x30b786b5
  41de27:	mov    ebp,0x67f0a577
  41de2c:	int    0xfc
  41de2e:	leave  
  41de2f:	or     eax,0x1de9824c
  41de34:	(bad)  
  41de35:	xchg   ebp,eax
  41de36:	lods   al,BYTE PTR ds:[esi]
  41de37:	popa   
  41de38:	in     al,0x47
  41de3a:	lods   eax,DWORD PTR ds:[esi]
  41de3b:	jne    0x41de7e
  41de3d:	sub    edx,DWORD PTR [ecx+0x20]
  41de40:	ja     0x41dea3
  41de42:	dec    esp
  41de43:	inc    eax
  41de44:	test   DWORD PTR ds:0xd7933606,ebp
  41de4a:	pop    ebx
  41de4b:	cmp    DWORD PTR [ebp+0x1b],0xe9b74c7
  41de52:	imul   sp,WORD PTR [ebx+edx*8],0x1926
  41de58:	jnp    0x41dea7
  41de5a:	sbb    al,0xf9
  41de5c:	jg     0x41de1f
  41de5e:	pop    es
  41de5f:	mov    ah,0xeb
  41de62:	sar    BYTE PTR [edx+edi*1],1
  41de65:	push   esp
  41de66:	xchg   ebx,eax
  41de67:	inc    edi
  41de68:	cmp    ebp,DWORD PTR [edi-0x76]
  41de6b:	mov    cl,ah
  41de6d:	mov    al,ds:0x8c24aff3
  41de72:	hlt    
  41de73:	sti    
  41de74:	(bad)  
  41de75:	aad    0x1
  41de77:	fcmovbe st,st(3)
  41de79:	fnstsw WORD PTR [eax-0x6b]
  41de7c:	pop    ebx
  41de7d:	das    
  41de7e:	or     ebx,ebx
  41de80:	nop
  41de81:	add    eax,DWORD PTR [ebp-0x43761b21]
  41de87:	and    BYTE PTR [eax],cl
  41de89:	add    BYTE PTR [edi],0xf9
  41de8c:	int3   
  41de8d:	add    eax,0x9b844e69
  41de92:	mov    cs:0x188e0f4d,al
  41de98:	mov    ds:0x8c5a07c6,eax
  41de9d:	fnstcw WORD PTR [edi]
  41de9f:	test   BYTE PTR [eax],bh
  41dea1:	in     al,dx
  41dea2:	push   ebp
  41dea3:	and    eax,0x1314cd13
  41dea8:	xchg   ebx,eax
  41dea9:	ss pop esi
  41deab:	rol    esi,0x2b
  41deae:	enter  0xc35a,0x9a
  41deb2:	mov    al,0x63
  41deb4:	repnz push cs
  41deb6:	mov    ds,WORD PTR [esi+0x36941496]
  41debc:	shr    ch,0x3e
  41debf:	pop    ecx
  41dec0:	mov    ebx,0xbdaf4175
  41dec5:	shr    BYTE PTR [ecx+edi*1+0x55050c25],1
  41decc:	xor    eax,edx
  41dece:	mov    bl,0x28
  41ded0:	mov    ecx,0x98cbf4b1
  41ded5:	mov    al,ds:0x805ab56e
  41deda:	bound  esp,QWORD PTR [ebp-0x26]
  41dedd:	add    al,0x45
  41dedf:	mov    ds:0xa60077dd,al
  41dee4:	push   ebx
  41dee5:	sbb    esi,DWORD PTR [ecx+0x5b]
  41dee8:	sbb    BYTE PTR [ecx+0x31420f49],0x5c
  41deef:	sub    eax,0x6fd2793b
  41def4:	adc    esp,ebx
  41def6:	call   FWORD PTR [edi+0x1fcd5363]
  41defc:	mov    ds:0x40a34077,al
  41df01:	icebp  
  41df02:	icebp  
  41df03:	iret   
  41df04:	popf   
  41df05:	pop    ss
  41df06:	lock sub ah,BYTE PTR [ebx]
  41df09:	jne    0x41dea1
  41df0b:	retf   0x98d7
  41df0e:	test   al,0x45
  41df10:	(bad)  
  41df11:	lahf   
  41df12:	cld    
  41df13:	dec    edi
  41df14:	jge    0x41df0c
  41df16:	scas   al,BYTE PTR es:[edi]
  41df17:	or     eax,0xc49664bd
  41df1c:	jle    0x41df60
  41df1e:	inc    ebp
  41df1f:	mov    cl,0xba
  41df21:	and    BYTE PTR [ecx-0x4d],bh
  41df24:	mov    dl,ch
  41df26:	cmp    al,BYTE PTR [edx]
  41df28:	dec    eax
  41df29:	repz int 0x34
  41df2c:	in     eax,0x2d
  41df2e:	mov    ds:0x56feda4b,al
  41df33:	stc    
  41df34:	mov    fs,WORD PTR [esi+0x16]
  41df37:	ret    0x5684
  41df3a:	mov    ebx,0xf3b56c9e
  41df3f:	imul   ecx,eax,0xffffffe0
  41df42:	inc    esp
  41df43:	inc    edi
  41df44:	and    al,BYTE PTR [edx-0x617a0d7d]
  41df4a:	sub    edx,esi
  41df4c:	sbb    DWORD PTR [ebx+0x2e],0x48
  41df50:	inc    esp
  41df51:	sub    DWORD PTR [edx-0x2d44b73f],eax
  41df57:	pop    ecx
  41df58:	(bad)  [edi+0x63ad1bf2]
  41df5e:	jb     0x41df0f
  41df60:	inc    esp
  41df61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df62:	inc    ebp
  41df63:	pop    eax
  41df64:	(bad)  
  41df65:	pop    esp
  41df66:	fnstenv [ebp+ecx*8+0x10a95a37]
  41df6d:	and    eax,0xf9cd4938
  41df72:	pusha  
  41df73:	sbb    BYTE PTR [ebp-0x51],al
  41df76:	mov    ah,0x41
  41df78:	clc    
  41df79:	inc    esi
  41df7a:	cmp    al,0xe4
  41df7c:	push   ebx
  41df7d:	xor    eax,0xda3d6f9e
  41df82:	aam    0x61
  41df84:	pop    ebp
  41df85:	nop
  41df86:	call   0x2c43:0x34ccb6ff
  41df8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df8e:	fcmovbe st,st(0)
  41df90:	ds es push esp
  41df94:	sbb    al,0x97
  41df96:	inc    eax
  41df97:	adc    ebp,ebx
  41df99:	(bad)  [ecx+esi*1+0x36a08aeb]
  41dfa0:	into   
  41dfa1:	sub    BYTE PTR [eax],dh
  41dfa3:	cs mov ebp,0x10633266
  41dfa9:	test   BYTE PTR [ebx-0x170f872f],ah
  41dfaf:	inc    esi
  41dfb0:	sbb    ch,BYTE PTR ds:0x3964c862
  41dfb6:	xor    BYTE PTR [ebx],dl
  41dfb8:	dec    ebp
  41dfb9:	scas   eax,DWORD PTR es:[edi]
  41dfba:	ret    0x49ef
  41dfbd:	aam    0xa3
  41dfbf:	sbb    eax,0x60fa3b91
  41dfc4:	add    eax,0xb8706970
  41dfc9:	pop    ss
  41dfca:	mov    cl,0xe5
  41dfcc:	gs mov bh,0x7f
  41dfcf:	xor    DWORD PTR [ecx+0x60],esi
  41dfd2:	test   esi,ecx
  41dfd4:	dec    esp
  41dfd5:	xchg   ebx,eax
  41dfd6:	jg     0x41dfa9
  41dfd8:	lods   al,BYTE PTR ds:[esi]
  41dfd9:	adc    DWORD PTR [ebx-0x17],ebp
  41dfdc:	jmp    0xff80:0x271fddda
  41dfe3:	sub    DWORD PTR [eax-0x7a],esi
  41dfe6:	pop    esi
  41dfe7:	xchg   ecx,eax
  41dfe8:	pop    ds
  41dfe9:	sbb    ecx,0xffffffa7
  41dfec:	xor    eax,0xedfc9a65
  41dff1:	sub    esi,DWORD PTR ds:0x36e83501
  41dff7:	adc    DWORD PTR [edi],0xffffffd2
  41dffa:	cdq    
  41dffb:	or     al,0xe0
  41dffd:	xor    DWORD PTR [eax-0x76],edx
  41e000:	ret    
  41e001:	(bad)  
  41e002:	aam    0xa6
  41e004:	mov    dh,BYTE PTR [esi-0x6d04e2c0]
  41e00a:	icebp  
  41e00b:	fidivr DWORD PTR [edx+0xb5d7ae6]
  41e011:	mov    bl,0x4
  41e013:	scas   eax,DWORD PTR es:[edi]
  41e014:	inc    edx
  41e015:	mov    BYTE PTR [esi+0x1eb194c2],bh
  41e01b:	mov    ebx,0xbea2442e
  41e020:	rol    DWORD PTR [ecx-0x7d],cl
  41e023:	int3   
  41e024:	sub    edx,DWORD PTR [eax]
  41e026:	mov    edx,0x9b5bea7a
  41e02b:	mov    ecx,0x3acf0844
  41e030:	sub    al,0x82
  41e032:	ds int 0x63
  41e035:	dec    edx
  41e036:	call   0x7d933109
  41e03b:	test   eax,0xa4bdafad
  41e040:	cwde   
  41e041:	ss pop esi
  41e043:	(bad)  
  41e045:	std    
  41e046:	mov    ecx,0xc5fe11ca
  41e04b:	js     0x41e01e
  41e04d:	fwait
  41e04e:	or     BYTE PTR [esp+ebp*2],al
  41e051:	push   ss
  41e052:	cmp    BYTE PTR [ebp+0x6d],al
  41e055:	fdivr  DWORD PTR [ebp+0x7c]
  41e058:	jae    0x41e055
  41e05a:	adc    ch,ah
  41e05c:	loopne 0x41e089
  41e05e:	cld    
  41e05f:	lea    ebp,[ecx-0x799b711a]
  41e065:	add    al,0x83
  41e067:	cmp    al,0xe6
  41e069:	adc    BYTE PTR [edi+0x9],al
  41e06c:	fiadd  DWORD PTR [esi]
  41e06e:	xchg   DWORD PTR [ebx-0xe555e8d],esi
  41e074:	retf   0x63a1
  41e077:	dec    edi
  41e078:	pop    ss
  41e079:	mov    dl,0x7a
  41e07b:	cmp    bl,BYTE PTR [eax-0x8f11060]
  41e081:	push   0x81b0f1d
  41e086:	lods   al,BYTE PTR ds:[esi]
  41e087:	pop    esi
  41e088:	jno    0x41e08d
  41e08a:	jecxz  0x41e0d3
  41e08c:	and    al,0xf9
  41e08e:	sbb    dl,BYTE PTR [edx+0x695927e6]
  41e094:	push   edi
  41e095:	movzx  esi,BYTE PTR [esi+0x17845eda]
  41e09c:	jne    0x41e118
  41e09e:	push   edx
  41e09f:	cmc    
  41e0a0:	xor    DWORD PTR [ecx+eax*2],esi
  41e0a3:	add    BYTE PTR [esi+0x76e09d33],ah
  41e0a9:	scas   eax,DWORD PTR es:[edi]
  41e0aa:	jae    0x41e0d0
  41e0ac:	inc    edi
  41e0ad:	mov    esi,0x8dc3fcae
  41e0b2:	cmp    al,0x67
  41e0b4:	pop    ebx
  41e0b5:	js     0x41e0cb
  41e0b7:	pushf  
  41e0b8:	(bad)  
  41e0b9:	jecxz  0x41e0c5
  41e0bb:	push   ebx
  41e0bc:	fld    QWORD PTR ss:[ebx]
  41e0bf:	fcmovne st,st(4)
  41e0c1:	cmp    eax,0x4ba2b3f7
  41e0c6:	fstp   QWORD PTR [eax-0x28]
  41e0c9:	(bad)  
  41e0cb:	sbb    BYTE PTR [edx-0x10],0xf1
  41e0cf:	call   0xaa2c:0x69384658
  41e0d6:	and    BYTE PTR [ebp-0x4f8b188],0x20
  41e0dd:	push   ebp
  41e0de:	mov    esp,0x7b787666
  41e0e3:	jle    0x41e0d8
  41e0e5:	daa    
  41e0e6:	mov    esi,0x371a4259
  41e0eb:	fld    QWORD PTR [edi+0x3e]
  41e0ee:	add    BYTE PTR [edi],0xbc
  41e0f1:	jns    0x41e119
  41e0f3:	into   
  41e0f4:	mov    dl,BYTE PTR [edi+0x36]
  41e0f7:	out    0xac,eax
  41e0f9:	loop   0x41e0b8
  41e0fb:	stos   BYTE PTR es:[edi],al
  41e0fc:	xor    eax,0x5f5870a8
  41e101:	popa   
  41e102:	imul   esp,DWORD PTR [ecx],0xffffff8f
  41e105:	fs pop esi
  41e107:	lahf   
  41e108:	jbe    0x41e0dc
  41e10a:	sub    eax,0xd66d1757
  41e10f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e110:	jle    0x41e17f
  41e112:	inc    edx
  41e113:	aad    0x78
  41e115:	ds mov dl,0x1f
  41e118:	fimul  WORD PTR [eax]
  41e11a:	xor    al,0x64
  41e11c:	jae    0x41e17b
  41e11e:	in     eax,dx
  41e11f:	popa   
  41e120:	pop    edi
  41e121:	or     cl,0xf7
  41e124:	sbb    BYTE PTR [edx+0x2e],0xac
  41e128:	adc    dh,BYTE PTR [eax+0x4a2414e]
  41e12e:	dec    edx
  41e12f:	xchg   esi,eax
  41e130:	mov    ss,WORD PTR [eax+eax*1]
  41e133:	add    al,0xcb
  41e135:	ficomp WORD PTR [eax-0x6f]
  41e138:	dec    esp
  41e139:	loopne 0x41e163
  41e13b:	or     eax,0x7ceafe54
  41e140:	jns    0x41e160
  41e142:	xor    DWORD PTR [ecx-0x136f975c],ebx
  41e148:	xchg   ebx,eax
  41e149:	std    
  41e14a:	adc    BYTE PTR [ecx],al
  41e14c:	daa    
  41e14d:	js     0x41e1ac
  41e14f:	and    al,0xa0
  41e151:	mov    ebx,0xac896d8b
  41e156:	cmp    DWORD PTR [ebx-0x38],0xa78b43a2
  41e15d:	dec    eax
  41e15e:	popf   
  41e15f:	mov    esp,0xfe381298
  41e164:	(bad)  
  41e165:	aas    
  41e166:	in     al,0xd5
  41e168:	cmp    DWORD PTR [esi+eiz*8+0x104bd2d],0xe3f2ab90
  41e173:	mov    dl,0xe6
  41e175:	call   0x6f9d10cf
  41e17a:	test   eax,0x1e43648c
  41e17f:	push   ecx
  41e180:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e181:	inc    ebp
  41e182:	sbb    al,0xeb
  41e184:	sbb    al,BYTE PTR es:[esi-0x12486942]
  41e18b:	jg     0x41e1ae
  41e18d:	jmp    0xd4d68a73
  41e192:	cmc    
  41e193:	and    DWORD PTR [ecx+ecx*4+0x397928eb],edx
  41e19a:	push   ecx
  41e19b:	jnp    0x41e1d8
  41e19d:	leave  
  41e19e:	(bad)  
  41e19f:	pushf  
  41e1a0:	fisubr WORD PTR [edi]
  41e1a2:	sub    DWORD PTR [ebx-0x6c02d0b5],esp
  41e1a8:	push   edi
  41e1a9:	clc    
  41e1aa:	retf   0x62c9
  41e1ad:	lahf   
  41e1ae:	mov    ch,0x1e
  41e1b0:	push   cs
  41e1b1:	jmp    0x50e7:0xc7f5e59b
  41e1b8:	stc    
  41e1b9:	mov    al,0xd
  41e1bb:	jnp    0x41e1f3
  41e1bd:	(bad)  
  41e1bf:	(bad)  
  41e1c0:	lods   eax,DWORD PTR ds:[esi]
  41e1c1:	bnd je 0x41e156
  41e1c4:	adc    al,0x17
  41e1c6:	lds    ecx,FWORD PTR [ebx+0x1b62060]
  41e1cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1cd:	xchg   DWORD PTR [ecx+ebp*4+0x7dcfdb18],ebx
  41e1d4:	cmp    BYTE PTR [ebx-0x3aa0a765],bl
  41e1da:	test   BYTE PTR ds:0x10766f97,0xaf
  41e1e1:	cmc    
  41e1e2:	mov    ecx,fs
  41e1e4:	ret    0xe37
  41e1e7:	inc    ebp
  41e1e8:	(bad)
  41e1ec:	add    eax,0xe3f396b5
  41e1f1:	fcomi  st,st(4)
  41e1f3:	neg    esi
  41e1f5:	pop    edx
  41e1f6:	ret    
  41e1f7:	cmp    BYTE PTR [ebp+0x73],bl
  41e1fa:	push   ebp
  41e1fb:	enter  0x223b,0xf1
  41e1ff:	and    ch,al
  41e201:	ficomp WORD PTR [edx]
  41e203:	lock fdiv QWORD PTR ds:0x4aa6a395
  41e20a:	int3   
  41e20b:	and    BYTE PTR [edi+0x598680b1],dl
  41e211:	mov    ebx,0x12f4db63
  41e216:	stos   DWORD PTR es:[edi],eax
  41e217:	pop    ebp
  41e218:	xor    BYTE PTR [ebp+0x187768e],0xd8
  41e21f:	push   esp
  41e220:	les    ebp,FWORD PTR [ecx]
  41e222:	cmp    al,0x18
  41e224:	add    al,0x35
  41e226:	imul   edi,DWORD PTR [esi+0x50feaf2c],0xed6f40d5
  41e230:	push   eax
  41e231:	in     eax,dx
  41e232:	jo     0x41e1c7
  41e234:	lods   eax,DWORD PTR ds:[esi]
  41e235:	(bad)  
  41e236:	out    dx,eax
  41e237:	mov    al,ds:0xb282a96b
  41e23c:	pop    edx
  41e23d:	push   ecx
  41e23e:	out    0x83,al
  41e240:	inc    ebp
  41e241:	scas   al,BYTE PTR es:[edi]
  41e242:	and    eax,0x5b2e3408
  41e247:	jl     0x41e2af
  41e249:	push   edx
  41e24a:	aas    
  41e24b:	mov    bl,bl
  41e24d:	or     dl,bl
  41e24f:	rol    edx,0xfd
  41e252:	pop    esi
  41e253:	repnz or al,0xec
  41e256:	dec    edi
  41e257:	mov    ch,0x89
  41e259:	sbb    DWORD PTR [ecx],ebx
  41e25b:	retf   0x7c32
  41e25e:	mov    eax,0x4b906bc
  41e263:	or     BYTE PTR [esi+eiz*4-0x71c594db],dl
  41e26a:	test   al,0x81
  41e26c:	xchg   BYTE PTR [ebp+eax*4+0x61],bl
  41e270:	and    BYTE PTR [ebx-0x438e2ee9],dl
  41e276:	adc    DWORD PTR [eax],edi
  41e278:	mov    dl,0x91
  41e27a:	sub    ebp,DWORD PTR [edi]
  41e27c:	cli    
  41e27d:	cmp    al,0x83
  41e27f:	ret    0x3d47
  41e282:	or     eax,DWORD PTR [ebp-0x7c]
  41e285:	call   0x263f:0x71812fdc
  41e28c:	xchg   esi,eax
  41e28d:	jp     0x41e2a2
  41e28f:	or     eax,0x3fa9d958
  41e294:	(bad)  
  41e295:	shl    BYTE PTR [ebx-0x18],0x1f
  41e299:	pop    ebx
  41e29a:	mov    ah,0x62
  41e29c:	sahf   
  41e29d:	mov    ebx,edi
  41e29f:	sahf   
  41e2a0:	mov    esp,0xc3962356
  41e2a5:	imul   ecx,DWORD PTR [edx+0x48],0x66
  41e2a9:	lods   eax,DWORD PTR ds:[esi]
  41e2aa:	out    0x3b,eax
  41e2ac:	fisub  WORD PTR [eax+ebp*8]
  41e2af:	imul   edx,DWORD PTR [edi+0x205be011],0x3b
  41e2b6:	dec    edi
  41e2b7:	retf   0xfa0c
  41e2ba:	fs mov cx,0xf857
  41e2bf:	or     al,0x3f
  41e2c1:	shl    DWORD PTR [edi-0x60173c91],cl
  41e2c7:	aas    
  41e2c8:	leave  
  41e2c9:	test   al,0x31
  41e2cb:	push   ds
  41e2cc:	push   es
  41e2cd:	je     0x41e2a7
  41e2cf:	jbe    0x41e31a
  41e2d1:	cwde   
  41e2d2:	add    BYTE PTR ds:0x6a2cdcbf,bl
  41e2d8:	fidiv  DWORD PTR [edi+0x72bb1e07]
  41e2de:	loopne 0x41e323
  41e2e0:	xor    BYTE PTR [edx+eiz*1+0xf72d774],bh
  41e2e7:	pop    ss
  41e2e8:	cmp    BYTE PTR [esi],ah
  41e2ea:	in     eax,dx
  41e2eb:	jp     0x41e2d1
  41e2ed:	popa   
  41e2ee:	push   edi
  41e2ef:	jg     0x41e319
  41e2f1:	(bad)
  41e2f5:	in     al,0x5
  41e2f7:	out    dx,eax
  41e2f8:	dec    esp
  41e2f9:	test   al,0x73
  41e2fb:	mov    dl,0xc
  41e2fd:	pop    ds
  41e2fe:	inc    edx
  41e2ff:	mov    dl,0xeb
  41e301:	fidivr WORD PTR [edi-0x15b73de2]
  41e307:	adc    eax,0x2651d5d4
  41e30c:	or     eax,DWORD PTR [ebx]
  41e30e:	mov    edi,0xfff707b7
  41e313:	push   eax
  41e314:	xchg   BYTE PTR [eax],ch
  41e316:	jle    0x41e366
  41e318:	stos   DWORD PTR es:[edi],eax
  41e319:	arpl   WORD PTR [ecx+0x29b06eb8],si
  41e31f:	adc    eax,0xb6e44a64
  41e324:	cmp    eax,0xde17b97f
  41e329:	out    0x67,eax
  41e32b:	mov    ch,0x1e
  41e32d:	xor    BYTE PTR [ebx-0xa63b59c],al
  41e333:	inc    BYTE PTR [eax+edx*8+0xee3e53c]
  41e33a:	xchg   edi,eax
  41e33b:	dec    edx
  41e33c:	jmp    0xb1c1:0x638a8df
  41e343:	inc    eax
  41e344:	cmc    
  41e345:	gs adc al,0x9f
  41e348:	adc    esi,DWORD PTR [esi-0x5fffad1c]
  41e34e:	hlt    
  41e34f:	fsubrp st(0),st
  41e351:	or     ebp,DWORD PTR [ebp+0x27]
  41e354:	stos   DWORD PTR es:[edi],eax
  41e355:	sbb    eax,0x40574ca6
  41e35a:	sub    bl,BYTE PTR [edi]
  41e35c:	xchg   DWORD PTR [ebp-0x60e0888a],ebx
  41e362:	in     eax,0xe4
  41e364:	adc    al,0x7
  41e366:	pop    edi
  41e367:	test   eax,0x2bf013a7
  41e36c:	and    cl,BYTE PTR [edx]
  41e36e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e36f:	add    ch,BYTE PTR [ecx-0x43b5ea3]
  41e375:	pop    edi
  41e376:	jmp    0x7cf1ccd4
  41e37b:	push   esp
  41e37c:	or     eax,0xa3858ee2
  41e381:	adc    BYTE PTR [edx],0x74
  41e384:	xchg   edi,eax
  41e385:	aas    
  41e386:	sar    BYTE PTR [eax],cl
  41e388:	mov    edx,0x483d9b7a
  41e38d:	pop    edi
  41e38e:	xor    ebp,edx
  41e390:	aam    0x95
  41e392:	int    0xff
  41e394:	test   DWORD PTR [ecx-0xc64cef3],0xb241fd5e
  41e39e:	inc    esi
  41e39f:	sbb    dh,BYTE PTR [edx-0x39695850]
  41e3a5:	scas   al,BYTE PTR es:[edi]
  41e3a6:	mov    ch,0xf0
  41e3a8:	(bad)  
  41e3a9:	and    bl,0x43
  41e3ac:	es push ds
  41e3ae:	inc    esp
  41e3af:	js     0x41e37f
  41e3b1:	pop    eax
  41e3b2:	(bad)  
  41e3b3:	pop    edi
  41e3b4:	into   
  41e3b5:	ins    DWORD PTR es:[edi],dx
  41e3b6:	xor    esp,DWORD PTR [edi]
  41e3b8:	dec    esi
  41e3b9:	pop    ecx
  41e3ba:	clc    
  41e3bb:	out    dx,eax
  41e3bc:	add    cl,BYTE PTR [ebp-0x67b3e292]
  41e3c2:	test   DWORD PTR ds:0x5262851d,ebx
  41e3c8:	pop    edi
  41e3c9:	repz jle 0x41e369
  41e3cc:	test   DWORD PTR [ecx+0x4e],0xc5321583
  41e3d3:	(bad)  
  41e3d4:	test   DWORD PTR [ecx+0x5f6c83e3],esi
  41e3da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3db:	arpl   WORD PTR ds:0x9e257def,bp
  41e3e1:	test   al,dh
  41e3e3:	out    0xdb,eax
  41e3e5:	adc    dh,ah
  41e3e7:	xchg   edx,eax
  41e3e8:	xchg   ebp,eax
  41e3e9:	(bad)  
  41e3eb:	in     al,dx
  41e3ec:	aad    0x72
  41e3ee:	out    dx,al
  41e3ef:	push   esi
  41e3f0:	pop    ecx
  41e3f1:	enter  0x97d8,0x2b
  41e3f5:	mov    cl,0xe1
  41e3f7:	adc    eax,0xf1cf65ee
  41e3fc:	and    bh,bl
  41e3fe:	stos   BYTE PTR es:[edi],al
  41e3ff:	xchg   ebp,eax
  41e400:	pop    ecx
  41e402:	inc    eax
  41e403:	mov    DWORD PTR [ebp-0x20],eax
  41e406:	mov    DWORD PTR ds:0x429028,0x1e
  41e410:	cmp    DWORD PTR ds:0x429028,0x0
  41e417:	je     0x41e45f
  41e41d:	cmp    DWORD PTR ds:0x429028,0x2e
  41e424:	jne    0x41e43f
  41e42a:	push   0x88e3
  41e42f:	push   0x5900
  41e434:	push   0x6949
  41e439:	call   DWORD PTR ds:0x425044
  41e43f:	mov    eax,ds:0x429028
  41e444:	dec    eax
  41e445:	mov    ds:0x429028,eax
  41e44a:	jmp    0x41e410
  41e44f:	mov    eax,ds:0x4245c3
  41e454:	mov    ecx,DWORD PTR ds:0x423e60
  41e45a:	sub    ecx,eax
  41e45c:	or     eax,DWORD PTR [eax+ecx*1]
  41e45f:	mov    eax,ds:0x42409c
  41e464:	mov    eax,DWORD PTR [eax]
  41e466:	mov    DWORD PTR [ebp-0x28],eax
  41e469:	mov    DWORD PTR [ebp-0x38],0xf89c87b6
  41e470:	mov    eax,DWORD PTR [ebp-0x38]
  41e473:	mov    DWORD PTR ds:0x42b004,0x13
  41e47d:	cmp    DWORD PTR ds:0x42b004,0x0
  41e484:	je     0x41e4fb
  41e48a:	cmp    DWORD PTR ds:0x42b004,0x19
  41e491:	jne    0x41e4ad
  41e497:	push   0x8602
  41e49c:	push   DWORD PTR [ebp-0x28]
  41e49f:	push   DWORD PTR [ebp-0x18]
  41e4a2:	push   0x5ed1
  41e4a7:	call   DWORD PTR ds:0x425048
  41e4ad:	mov    ecx,DWORD PTR ds:0x42b004
  41e4b3:	dec    ecx
  41e4b4:	mov    DWORD PTR ds:0x42b004,ecx
  41e4ba:	jmp    0x41e47d
  41e4bf:	and    DWORD PTR ds:0x42d010,0x0
  41e4c9:	mov    ecx,DWORD PTR ds:0x42d010
  41e4cf:	inc    ecx
  41e4d0:	mov    DWORD PTR ds:0x42d010,ecx
  41e4d6:	cmp    DWORD PTR ds:0x42d010,0x1d
  41e4dd:	jne    0x41e4ee
  41e4e3:	push   0x7e2c
  41e4e8:	call   DWORD PTR ds:0x42504c
  41e4ee:	cmp    DWORD PTR ds:0x42d010,0x1c
  41e4f5:	jb     0x41e4c9
  41e4fb:	xor    eax,esi
  41e4fd:	and    DWORD PTR ds:0x429008,0x0
  41e507:	jmp    0x41e519
  41e50c:	mov    ecx,DWORD PTR ds:0x429008
  41e512:	inc    ecx
  41e513:	mov    DWORD PTR ds:0x429008,ecx
  41e519:	cmp    DWORD PTR ds:0x429008,0x14
  41e520:	jae    0x41e568
  41e526:	cmp    DWORD PTR ds:0x429008,0xb
  41e52d:	jne    0x41e543
  41e533:	push   0x3d49
  41e538:	push   0x4243a3
  41e53d:	call   DWORD PTR ds:0x425010
  41e543:	cmp    DWORD PTR ds:0x429008,0xa
  41e54a:	jne    0x41e55d
  41e550:	mov    ecx,DWORD PTR ds:0x429008
  41e556:	inc    ecx
  41e557:	mov    DWORD PTR ds:0x429008,ecx
  41e55d:	jmp    0x41e50c
  41e562:	and    ecx,0x72e7
  41e568:	add    eax,edi
  41e56a:	xor    DWORD PTR ds:0x42c010,0x649e
  41e574:	mov    DWORD PTR [ebp-0x30],eax
  41e577:	mov    ecx,DWORD PTR ds:0x429028
  41e57d:	xor    DWORD PTR ds:0x42b018,ecx
  41e583:	mov    eax,ds:0x424014
  41e588:	sbb    ecx,0x5dc9
  41e58e:	mov    DWORD PTR [ebp-0x30],eax
  41e591:	sub    eax,eax
  41e593:	mov    eax,DWORD PTR [ebp-0x20]
  41e596:	mov    DWORD PTR [ebp-0x14],eax
  41e599:	mov    eax,DWORD PTR [ebp-0x14]
  41e59c:	push   0x4
  41e59e:	not    ecx
  41e5a0:	pop    ecx
  41e5a1:	adc    DWORD PTR ds:0x42a004,0x37d1
  41e5ab:	sub    ecx,eax
  41e5ad:	add    ecx,DWORD PTR [ebp-0x28]
  41e5b0:	mov    eax,ds:0x429024
  41e5b5:	or     DWORD PTR ds:0x42a008,eax
  41e5bb:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  41e5c2:	mov    DWORD PTR ds:0x42a008,0x13
  41e5cc:	cmp    DWORD PTR ds:0x42a008,0x0
  41e5d3:	je     0x41e627
  41e5d9:	cmp    DWORD PTR ds:0x42a008,0x9
  41e5e0:	jne    0x41e5f6
  41e5e6:	push   0x665a
  41e5eb:	push   0x4c85
  41e5f0:	call   DWORD PTR ds:0x425018
  41e5f6:	cmp    DWORD PTR ds:0x42a008,0xa
  41e5fd:	jne    0x41e60e
  41e603:	mov    eax,ds:0x42a008
  41e608:	dec    eax
  41e609:	mov    ds:0x42a008,eax
  41e60e:	xor    eax,eax
  41e610:	xor    eax,DWORD PTR ds:0x42a008
  41e616:	dec    eax
  41e617:	mov    ds:0x42a008,eax
  41e61c:	jmp    0x41e5cc
  41e621:	and    DWORD PTR ds:0x42c018,edi
  41e627:	mov    DWORD PTR [ebp-0x24],ecx
  41e62a:	and    DWORD PTR ds:0x42b000,0x4083
  41e634:	mov    DWORD PTR [ebp-0x98],0xf89c85ba
  41e63e:	mov    eax,DWORD PTR [ebp-0x14]
  41e641:	sub    DWORD PTR ds:0x429028,0x42c00c
  41e64b:	mov    DWORD PTR [ebp-0x94],eax
  41e651:	mov    DWORD PTR ds:0x429018,0x60a2
  41e65b:	mov    eax,DWORD PTR [ebp-0x24]
  41e65e:	mov    DWORD PTR [ebp-0x90],eax
  41e664:	sub    eax,0x1a7d
  41e669:	mov    eax,DWORD PTR [ebp-0x2c]
  41e66c:	add    DWORD PTR ds:0x429014,0x42b010
  41e676:	xor    eax,esi
  41e678:	add    eax,edi
  41e67a:	or     DWORD PTR ds:0x42a01c,0xdce
  41e684:	mov    DWORD PTR [ebp-0x8c],eax
  41e68a:	xor    DWORD PTR ds:0x42d004,0x42a000
  41e694:	lea    eax,[ebp-0x50]
  41e697:	sub    DWORD PTR ds:0x429020,0x429004
  41e6a1:	mov    DWORD PTR [ebp-0x88],eax
  41e6a7:	sub    DWORD PTR ds:0x429028,0x1657
  41e6b1:	mov    eax,DWORD PTR [ebp-0x98]
  41e6b7:	xor    eax,esi
  41e6b9:	sub    DWORD PTR ds:0x42c01c,0x42d010
  41e6c3:	add    eax,edi
  41e6c5:	mov    DWORD PTR [ebp-0x98],eax
  41e6cb:	and    DWORD PTR ds:0x42d004,0x42b004
  41e6d5:	lea    eax,[ebp-0x98]
  41e6db:	sbb    DWORD PTR ds:0x42d008,0x429018
  41e6e5:	push   eax
  41e6e6:	and    DWORD PTR ds:0x42c004,edi
  41e6ec:	mov    eax,DWORD PTR [ebp+0xc]
  41e6ef:	sub    DWORD PTR ds:0x42b014,0x42a01c
  41e6f9:	xor    eax,esi
  41e6fb:	add    eax,edi
  41e6fd:	sbb    DWORD PTR ds:0x429024,0x42c01c
  41e707:	push   eax
  41e708:	and    eax,DWORD PTR ds:0x42c018
  41e70e:	mov    eax,ds:0x424034
  41e713:	adc    DWORD PTR ds:0x429004,0x7be0
  41e71d:	push   0x423f8a
  41e722:	and    DWORD PTR ds:0x429000,0x42b018
  41e72c:	push   DWORD PTR [eax]
  41e72e:	xor    DWORD PTR ds:0x42c014,0x72b4
  41e738:	call   0x40867e
  41e73d:	inc    eax
  41e73e:	mov    eax,DWORD PTR [ebp-0x14]
  41e741:	add    ecx,DWORD PTR ds:0x42b00c
  41e747:	mov    ecx,DWORD PTR [ebp-0x24]
  41e74a:	mov    DWORD PTR [ebp-0x4c],ecx
  41e74d:	mov    ecx,DWORD PTR [ebp+0x8]
  41e750:	xor    DWORD PTR ds:0x429020,0x42a008
  41e75a:	xor    ecx,esi
  41e75c:	mov    DWORD PTR [ebp-0x38],eax
  41e75f:	xor    DWORD PTR ds:0x42c014,0x42a014
  41e769:	add    ecx,edi
  41e76b:	jmp    0x423b94
  41e770:	adc    ebx,DWORD PTR ds:0x429018
  41e776:	lea    edx,[ecx+eax*1]
  41e779:	mov    DWORD PTR ds:0x42d000,0x1d
  41e783:	cmp    DWORD PTR ds:0x42d000,0x0
  41e78a:	je     0x41e7ca
  41e790:	cmp    DWORD PTR ds:0x42d000,0x24
  41e797:	jne    0x41e7b0
  41e79d:	push   0x42a008
  41e7a2:	push   DWORD PTR [ebp-0x14]
  41e7a5:	push   0x4243bf
  41e7aa:	call   DWORD PTR ds:0x42501c
  41e7b0:	xor    ebx,ebx
  41e7b2:	add    ebx,DWORD PTR ds:0x42d000
  41e7b8:	dec    ebx
  41e7b9:	mov    DWORD PTR ds:0x42d000,ebx
  41e7bf:	jmp    0x41e783
  41e7c4:	and    DWORD PTR ds:0x42c010,ecx
  41e7ca:	mov    DWORD PTR [ebp-0x28],edx
  41e7cd:	sub    edx,ebx
  41e7cf:	mov    edx,DWORD PTR [ebp-0x4c]
  41e7d2:	and    DWORD PTR ds:0x42d00c,0x0
  41e7dc:	jmp    0x41e7ee
  41e7e1:	mov    ebx,DWORD PTR ds:0x42d00c
  41e7e7:	inc    ebx
  41e7e8:	mov    DWORD PTR ds:0x42d00c,ebx
  41e7ee:	cmp    DWORD PTR ds:0x42d00c,0x19
  41e7f5:	jae    0x41e843
  41e7fb:	cmp    DWORD PTR ds:0x42d00c,0xe
  41e802:	jne    0x41e818
  41e808:	push   0x42901c
  41e80d:	push   0x4df2
  41e812:	call   DWORD PTR ds:0x425020
  41e818:	cmp    DWORD PTR ds:0x42d00c,0xd
  41e81f:	jne    0x41e834
  41e825:	xor    ebx,ebx
  41e827:	xor    ebx,DWORD PTR ds:0x42d00c
  41e82d:	inc    ebx
  41e82e:	mov    DWORD PTR ds:0x42d00c,ebx
  41e834:	jmp    0x41e7e1
  41e839:	sbb    DWORD PTR ds:0x42d00c,0x42a014
  41e843:	sub    edx,ecx
  41e845:	sbb    DWORD PTR ds:0x429014,ebx
  41e84b:	mov    DWORD PTR [ebp-0x20],edx
  41e84e:	and    DWORD PTR ds:0x42d01c,0x0
  41e858:	mov    edx,DWORD PTR ds:0x42d01c
  41e85e:	inc    edx
  41e85f:	mov    DWORD PTR ds:0x42d01c,edx
  41e865:	cmp    DWORD PTR ds:0x42d01c,0x8
  41e86c:	jne    0x41e87b
  41e872:	push   DWORD PTR [ebp-0x10]
  41e875:	call   DWORD PTR ds:0x425028
  41e87b:	cmp    DWORD PTR ds:0x42d01c,0x7
  41e882:	jne    0x41e897
  41e888:	xor    edx,edx
  41e88a:	or     edx,DWORD PTR ds:0x42d01c
  41e890:	inc    edx
  41e891:	mov    DWORD PTR ds:0x42d01c,edx
  41e897:	cmp    DWORD PTR ds:0x42d01c,0x11
  41e89e:	jb     0x41e858
  41e8a4:	mov    edx,DWORD PTR [ebp-0x20]
  41e8a7:	mov    DWORD PTR [ebp-0x14],edx
  41e8aa:	mov    edx,DWORD PTR [ebp-0x28]
  41e8ad:	mov    DWORD PTR [ebp-0x34],0xf89c85b6
  41e8b4:	mov    DWORD PTR [ebp-0x44],edx
  41e8b7:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  41e8be:	mov    edx,DWORD PTR [ebp-0x34]
  41e8c1:	xor    edx,esi
  41e8c3:	add    edx,edi
  41e8c5:	mov    DWORD PTR [ebp-0x10],edx
  41e8c8:	mov    edx,DWORD PTR [ebp-0x34]
  41e8cb:	xor    edx,esi
  41e8cd:	add    edx,edi
  41e8cf:	mov    DWORD PTR [ebp-0x8],edx
  41e8d2:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41e8d9:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  41e8e0:	mov    edx,DWORD PTR [ebp-0x34]
  41e8e3:	mov    ebx,DWORD PTR [ebp-0x14]
  41e8e6:	xor    edx,esi
  41e8e8:	add    edx,edi
  41e8ea:	cmp    ebx,edx
  41e8ec:	je     0x423b88
  41e8f2:	mov    eax,DWORD PTR [ebp-0x18]
  41e8f5:	xor    eax,esi
  41e8f7:	mov    edx,0xffcd8d25
  41e8fc:	sub    edx,eax
  41e8fe:	add    edx,DWORD PTR [ebp-0x14]
  41e901:	mov    eax,DWORD PTR [ebp-0x18]
  41e904:	mov    ebx,DWORD PTR [ebp-0x10]
  41e907:	xor    eax,esi
  41e909:	add    eax,edi
  41e90b:	imul   eax,ebx
  41e90e:	cmp    eax,edx
  41e910:	ja     0x423b85
  41e916:	mov    edx,DWORD PTR [ebp-0x10]
  41e919:	mov    eax,DWORD PTR [ebp-0x14]
  41e91c:	mov    ebx,DWORD PTR [ebp-0x28]
  41e91f:	sub    eax,edx
  41e921:	xor    ebx,esi
  41e923:	xor    edx,edx
  41e925:	add    ebx,edi
  41e927:	div    ebx
  41e929:	mov    DWORD PTR [ebp-0x8],eax
  41e92c:	mov    eax,DWORD PTR [ebp-0x2c]
  41e92f:	mov    edx,DWORD PTR [ebp-0x8]
  41e932:	xor    eax,esi
  41e934:	add    eax,edi
  41e936:	cmp    edx,eax
  41e938:	jbe    0x41e948
  41e93e:	mov    eax,DWORD PTR [ebp-0x2c]
  41e941:	xor    eax,esi
  41e943:	add    eax,edi
  41e945:	mov    DWORD PTR [ebp-0x8],eax
  41e948:	mov    eax,DWORD PTR [ebp-0x28]
  41e94b:	mov    edx,DWORD PTR [ebp-0x8]
  41e94e:	xor    eax,esi
  41e950:	add    eax,edi
  41e952:	imul   eax,edx
  41e955:	mov    DWORD PTR [ebp-0x8],eax
  41e958:	mov    eax,DWORD PTR [ebp-0x34]
  41e95b:	mov    edx,DWORD PTR [ebp-0x8]
  41e95e:	xor    eax,esi
  41e960:	add    eax,edi
  41e962:	cmp    edx,eax
  41e964:	je     0x423b6e
  41e96a:	mov    eax,DWORD PTR [ebp-0x8]
  41e96d:	mov    DWORD PTR [ebp-0x24],eax
  41e970:	mov    eax,DWORD PTR [ebp-0x10]
  41e973:	add    eax,DWORD PTR [ebp-0x44]
  41e976:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  41e97d:	mov    DWORD PTR [ebp-0x8],eax
  41e980:	mov    eax,0xf89c85b5
  41e985:	mov    DWORD PTR [ebp-0x3c],eax
  41e988:	mov    DWORD PTR [ebp-0x40],0xf89c85b4
  41e98f:	mov    DWORD PTR [ebp-0x30],0xf89c85bb
  41e996:	mov    DWORD PTR [ebp-0x1c],eax
  41e999:	mov    eax,DWORD PTR [ebp-0x20]
  41e99c:	xor    eax,esi
  41e99e:	add    eax,edi
  41e9a0:	jmp    0x423b2a
  41e9a5:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41e9ac:	mov    eax,DWORD PTR [ebp-0x1c]
  41e9af:	mov    edx,DWORD PTR [ebp-0xc]
  41e9b2:	xor    eax,esi
  41e9b4:	add    eax,edi
  41e9b6:	imul   eax,edx
  41e9b9:	mov    edx,DWORD PTR [ebp-0x8]
  41e9bc:	mov    al,BYTE PTR [eax+edx*1]
  41e9bf:	mov    BYTE PTR [ebp-0x1],al
  41e9c2:	mov    eax,DWORD PTR [ebp-0x1c]
  41e9c5:	mov    edx,DWORD PTR [ebp-0xc]
  41e9c8:	xor    eax,esi
  41e9ca:	add    eax,edi
  41e9cc:	imul   eax,edx
  41e9cf:	mov    edx,DWORD PTR [ebp-0x40]
  41e9d2:	xor    edx,esi
  41e9d4:	add    eax,edx
  41e9d6:	mov    edx,DWORD PTR [ebp-0x8]
  41e9d9:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  41e9e1:	jmp    0x420d2f
  41e9e6:	iret   
  41e9e7:	and    edi,DWORD PTR [esi+0x59]
  41e9ea:	(bad)  
  41e9eb:	daa    
  41e9ec:	mov    ds:0x1c7877a3,eax
  41e9f1:	jle    0x41ea67
  41e9f3:	sub    al,0xcd
  41e9f5:	mov    WORD PTR [ebx],ss
  41e9f7:	fisub  DWORD PTR [ecx+0x62]
  41e9fa:	push   ecx
  41e9fb:	pop    edi
  41e9fc:	bound  esp,QWORD PTR [edx-0x3]
  41e9ff:	dec    esp
  41ea00:	lods   al,BYTE PTR ds:[esi]
  41ea01:	std    
  41ea02:	arpl   WORD PTR [edi+ebp*2-0x171d93ac],bx
  41ea09:	scas   eax,DWORD PTR es:[edi]
  41ea0a:	or     eax,0x5e575491
  41ea0f:	fimul  DWORD PTR [ecx-0x222e42d]
  41ea15:	lods   eax,DWORD PTR ds:[esi]
  41ea16:	mov    dh,0x9b
  41ea18:	pop    edx
  41ea19:	pop    ecx
  41ea1a:	pop    ss
  41ea1b:	and    ebp,ebp
  41ea1d:	ins    DWORD PTR es:[edi],dx
  41ea1e:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41ea20:	into   
  41ea21:	sub    BYTE PTR [edi+0x34],0x61
  41ea25:	or     al,0x6d
  41ea27:	dec    edi
  41ea28:	and    BYTE PTR [eax],al
  41ea2a:	inc    edx
  41ea2b:	dec    ecx
  41ea2c:	(bad)  
  41ea2d:	stos   DWORD PTR es:[edi],eax
  41ea2e:	adc    eax,0x3a27be6
  41ea33:	add    al,0x45
  41ea35:	mov    ds:0x87cdcf33,eax
  41ea3a:	popa   
  41ea3b:	xor    esi,DWORD PTR [ebp-0x19]
  41ea3e:	and    DWORD PTR [esi+0x3],0x74
  41ea42:	inc    esi
  41ea43:	fs (bad) 
  41ea47:	(bad)  
  41ea48:	fnsetpm(287 only) 
  41ea4a:	call   0xab8ed8d5
  41ea4f:	mov    ds:0xf31db93d,eax
  41ea54:	in     al,0xca
  41ea56:	ins    BYTE PTR es:[edi],dx
  41ea57:	mov    dh,cl
  41ea59:	mov    bl,0x40
  41ea5b:	(bad)  
  41ea5c:	adc    edx,DWORD PTR [eax+0xc]
  41ea5f:	mov    ch,0x96
  41ea61:	test   BYTE PTR [ebx+0x622abfd],ah
  41ea67:	cmp    dl,BYTE PTR [ecx]
  41ea69:	sub    eax,0x6172724e
  41ea6e:	pop    ebp
  41ea6f:	xor    cl,BYTE PTR [ebx]
  41ea71:	sti    
  41ea72:	mov    dl,0x6d
  41ea74:	jmp    0x20014fb2
  41ea79:	jmp    0x3258c4d6
  41ea7e:	call   0x2f9c:0x91b20d47
  41ea85:	std    
  41ea86:	aad    0xcc
  41ea88:	repz dec esi
  41ea8a:	outs   dx,BYTE PTR ds:[esi]
  41ea8b:	xchg   ebx,eax
  41ea8c:	mov    al,0xd1
  41ea8e:	mov    esi,0xc047cafc
  41ea93:	pop    eax
  41ea94:	fst    DWORD PTR [edi+0x268b1d35]
  41ea9a:	pop    ebp
  41ea9b:	pop    eax
  41ea9c:	adc    al,0x4a
  41ea9e:	adc    BYTE PTR [edx-0x55],dl
  41eaa1:	jo     0x41eaca
  41eaa3:	(bad)  
  41eaa4:	sbb    ebx,DWORD PTR [edi-0x28]
  41eaa7:	mov    ch,0x60
  41eaa9:	jmp    0xba03:0x6e27ab3a
  41eab0:	clc    
  41eab1:	fild   WORD PTR [ecx]
  41eab3:	je     0x41ead6
  41eab5:	mov    DWORD PTR ss:0xa176c5f1,edi
  41eabc:	fisubr DWORD PTR [edi+ebx*4-0x62]
  41eac0:	inc    ecx
  41eac1:	call   FWORD PTR [edi+eax*1+0x69eb98a1]
  41eac8:	popa   
  41eac9:	inc    esp
  41eaca:	xor    DWORD PTR [ebx+0x9],esp
  41eacd:	stos   BYTE PTR es:[edi],al
  41eace:	pmulhw mm7,QWORD PTR [ecx]
  41ead1:	push   ebx
  41ead2:	xor    eax,0x4037980c
  41ead7:	iret   
  41ead8:	daa    
  41ead9:	nop
  41eada:	inc    edi
  41eadb:	sub    al,0x37
  41eadd:	jl     0x41eb3f
  41eadf:	sahf   
  41eae0:	enter  0xf17e,0xce
  41eae4:	mov    DWORD PTR [ebp+0x75],ebx
  41eae7:	mov    al,ds:0xa718af4c
  41eaec:	pop    ss
  41eaed:	test   DWORD PTR [ebp-0x5727b87],eax
  41eaf3:	into   
  41eaf4:	mov    DWORD PTR [edi],edi
  41eaf6:	pop    ds
  41eaf7:	sub    al,0xd6
  41eaf9:	(bad)  
  41eafa:	stc    
  41eafb:	add    edi,edx
  41eafd:	fs mov ebx,0x8e04028e
  41eb03:	xor    DWORD PTR [ecx+0x1d47571],ebx
  41eb09:	int3   
  41eb0a:	mov    esp,ecx
  41eb0c:	fldenv [esi-0x6c]
  41eb0f:	xchg   esi,eax
  41eb10:	outs   dx,DWORD PTR ds:[esi]
  41eb11:	mov    es,WORD PTR [ebx]
  41eb13:	pushf  
  41eb14:	loop   0x41eb6a
  41eb16:	test   eax,0x18f88373
  41eb1b:	fdiv   DWORD PTR [edx+0x7c0d6033]
  41eb21:	mov    ebp,0x2f3f9de1
  41eb26:	into   
  41eb27:	push   0x74ec0fe4
  41eb2c:	aam    0x52
  41eb2e:	sub    esi,DWORD PTR [eax]
  41eb30:	sub    bl,BYTE PTR [ecx-0x79]
  41eb33:	enter  0x2eb5,0xb3
  41eb37:	sbb    al,cl
  41eb39:	pop    ebp
  41eb3a:	sbb    eax,0x9aa374cb
  41eb3f:	test   eax,0xd3b63aa5
  41eb44:	rcr    DWORD PTR gs:[edi],cl
  41eb47:	xchg   esp,eax
  41eb48:	sub    DWORD PTR [edi+eiz*4],edx
  41eb4b:	or     BYTE PTR [eax+esi*8],al
  41eb4e:	xor    esi,edi
  41eb50:	scas   al,BYTE PTR es:[edi]
  41eb51:	aaa    
  41eb52:	rol    DWORD PTR [edi+0xc],cl
  41eb55:	dec    ecx
  41eb56:	js     0x41eb3c
  41eb58:	jg     0x41eb73
  41eb5a:	add    ecx,ebx
  41eb5c:	cld    
  41eb5d:	mov    ch,0x2
  41eb5f:	(bad)  [ecx]
  41eb61:	mov    eax,ds:0xa2babfab
  41eb66:	adc    DWORD PTR [esi-0xe84f862],esi
  41eb6c:	and    DWORD PTR [eax],eax
  41eb6e:	or     edx,DWORD PTR [edi+ecx*4-0x5bfdb19d]
  41eb75:	fs sahf 
  41eb77:	(bad)  
  41eb78:	mov    bh,0xf6
  41eb7a:	push   DWORD PTR [ebp-0x60]
  41eb7d:	inc    eax
  41eb7e:	push   cs
  41eb7f:	jmp    DWORD PTR ds:0xb557f67c
  41eb85:	iret   
  41eb86:	mov    eax,ds:0x38657f32
  41eb8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb8c:	xor    bl,al
  41eb8e:	or     al,0x90
  41eb90:	jbe    0x41eba0
  41eb92:	les    esi,FWORD PTR [esi]
  41eb94:	pop    ebx
  41eb95:	jno    0x41eb8a
  41eb97:	add    BYTE PTR [esi-0x49],dl
  41eb9a:	sub    edx,DWORD PTR es:[esi+0x5b8d3cfc]
  41eba1:	adc    dh,BYTE PTR [ebx+0x296e3481]
  41eba7:	data16 test BYTE PTR ds:0x5b0ada3,dh
  41ebae:	pop    ebp
  41ebaf:	push   ebx
  41ebb0:	pop    ebx
  41ebb1:	xlat   BYTE PTR ds:[ebx]
  41ebb2:	mov    ch,ch
  41ebb4:	pop    ebx
  41ebb5:	fist   WORD PTR [ebx-0x47]
  41ebb8:	stos   DWORD PTR es:[edi],eax
  41ebb9:	cmp    BYTE PTR [ebx-0x3b],dh
  41ebbc:	push   ds
  41ebbd:	xchg   ebp,eax
  41ebbe:	ja     0x41ec39
  41ebc0:	sahf   
  41ebc1:	push   cs
  41ebc2:	inc    ecx
  41ebc3:	jae    0x41ebc0
  41ebc5:	jl     0x41eb4b
  41ebc7:	sbb    eax,0x601650f8
  41ebcc:	ins    DWORD PTR es:[edi],dx
  41ebcd:	fist   WORD PTR [ebx]
  41ebcf:	inc    edx
  41ebd0:	cmp    DWORD PTR [edx],esp
  41ebd2:	inc    esi
  41ebd3:	shl    esp,cl
  41ebd5:	and    ch,BYTE PTR [edi]
  41ebd7:	pop    ebx
  41ebd8:	push   esi
  41ebd9:	fst    DWORD PTR [ebp+0x55]
  41ebdc:	mov    al,ds:0x48a1192a
  41ebe1:	mov    es,ebp
  41ebe3:	(bad)  
  41ebe5:	je     0x41ebfc
  41ebe7:	mov    edi,0x39fbf756
  41ebec:	sti    
  41ebed:	or     eax,0xbfebd96a
  41ebf2:	and    DWORD PTR [ecx],ecx
  41ebf4:	or     eax,0x5c990353
  41ebf9:	call   0x47196ce2
  41ebfe:	ins    DWORD PTR es:[edi],dx
  41ebff:	leave  
  41ec00:	xchg   BYTE PTR [ecx-0x3f],dh
  41ec03:	cmp    al,bh
  41ec05:	add    BYTE PTR ds:0x8c2cbb8f,bl
  41ec0b:	and    DWORD PTR [edx-0x6b0ea1dc],edx
  41ec11:	sub    eax,0x1228e692
  41ec16:	js     0x41ebca
  41ec18:	fcomp  QWORD PTR [edi]
  41ec1a:	inc    edi
  41ec1b:	jnp    0x41ec6e
  41ec1d:	xchg   ebp,eax
  41ec1e:	xchg   esp,eax
  41ec1f:	in     al,dx
  41ec20:	push   0x28087239
  41ec25:	lock push esi
  41ec27:	jne    0x41ebe2
  41ec29:	add    ch,BYTE PTR [edi+0x4890e42c]
  41ec2f:	iret   
  41ec30:	arpl   cx,dx
  41ec32:	push   ebp
  41ec33:	sbb    edi,DWORD PTR [edx]
  41ec35:	ror    BYTE PTR [esi+0x6a],1
  41ec38:	push   esi
  41ec39:	mov    al,0x7f
  41ec3b:	jle    0x41ebcf
  41ec3d:	and    BYTE PTR [edx-0x6fcb4d3a],bl
  41ec43:	ja     0x41ec93
  41ec45:	xchg   BYTE PTR [edx],bl
  41ec47:	dec    ebx
  41ec48:	retf   
  41ec49:	(bad)  
  41ec4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec4b:	jmp    0x41ecab
  41ec4d:	pop    edi
  41ec4e:	jbe    0x994c2598
  41ec54:	xor    eax,0x68c36103
  41ec59:	pop    esi
  41ec5a:	sub    ebp,DWORD PTR [eax+ecx*1-0x38]
  41ec5e:	cmp    eax,0xba27f170
  41ec63:	jle    0x41ebf1
  41ec65:	mov    ds:0x12ee6403,al
  41ec6a:	cli    
  41ec6b:	(bad)  [esi+0x49e673bb]
  41ec71:	adc    BYTE PTR [edi+0x34],bl
  41ec74:	push   ebp
  41ec75:	cmp    ecx,0x71
  41ec78:	mov    ecx,?
  41ec7a:	ds mov edi,0x9c04d2ef
  41ec80:	idiv   DWORD PTR [eax+0x71]
  41ec83:	repnz or DWORD PTR [ebp-0xf64caf5],0xc8500e77
  41ec8e:	les    ebx,FWORD PTR ds:0xf20b0b61
  41ec94:	add    BYTE PTR [ebx+0x47],0x8b
  41ec98:	dec    ecx
  41ec99:	ins    BYTE PTR es:[edi],dx
  41ec9a:	push   0xd7efe24b
  41ec9f:	adc    al,0x5b
  41eca1:	shl    DWORD PTR [edx-0x293d21a5],cl
  41eca7:	jle    0x41ed1e
  41eca9:	scas   eax,DWORD PTR es:[edi]
  41ecaa:	sti    
  41ecab:	jnp    0x41ecb9
  41ecad:	xchg   esi,eax
  41ecae:	jmp    0x41ec88
  41ecb0:	push   cs
  41ecb1:	mov    eax,0x423345
  41ecb6:	and    eax,0x377dfc72
  41ecbb:	sti    
  41ecbc:	addr16 xor eax,0x4e708c69
  41ecc2:	mov    dh,BYTE PTR [eax-0x1d]
  41ecc5:	add    ah,bl
  41ecc7:	ret    
  41ecc8:	fs or  esi,edx
  41eccb:	jmp    0x41ec98
  41eccd:	jo     0x41ed30
  41eccf:	sub    DWORD PTR gs:[edi+esi*8],0x46
  41ecd4:	or     al,0x3a
  41ecd6:	retf   
  41ecd7:	int3   
  41ecd8:	dec    ebx
  41ecd9:	idiv   DWORD PTR [edx]
  41ecdb:	pop    ss
  41ecdc:	inc    esi
  41ecdd:	mov    dl,0x29
  41ecdf:	adc    DWORD PTR [ebx],edi
  41ece1:	jg     0x41eccf
  41ece3:	mov    eax,ds:0x2e727843
  41ece8:	enter  0x2a48,0x5
  41ecec:	imul   ebp,DWORD PTR [ebp-0x1a3d109b],0xc99bf437
  41ecf6:	aam    0x8f
  41ecf8:	imul   edi,DWORD PTR [ebx-0x2992c50],0xeb8bc4a3
  41ed02:	xor    ch,BYTE PTR [ecx+esi*1-0x66]
  41ed06:	jge    0x41ed77
  41ed08:	out    0xc0,al
  41ed0a:	mov    ecx,0xa5b5e62f
  41ed0f:	mov    ebp,0xcb1bfd90
  41ed14:	jb     0x41ecc3
  41ed16:	stos   BYTE PTR es:[edi],al
  41ed17:	ja     0x41ecb3
  41ed19:	xor    eax,0xf05e4739
  41ed1e:	rcl    BYTE PTR [esi+ebx*2],1
  41ed21:	adc    ebx,DWORD PTR [eax+0x1c]
  41ed24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed25:	pop    edi
  41ed26:	mov    ds:0x9d6f4600,al
  41ed2b:	and    ch,BYTE PTR [ebx-0x26817032]
  41ed31:	mov    ds:0x5d1fa70b,eax
  41ed36:	dec    eax
  41ed37:	push   edx
  41ed38:	sbb    BYTE PTR [ecx],0x83
  41ed3b:	leave  
  41ed3c:	inc    edx
  41ed3d:	inc    edi
  41ed3e:	cdq    
  41ed3f:	(bad)  
  41ed40:	and    eax,0x11ba3a23
  41ed45:	cmp    dh,0xe9
  41ed48:	cmp    cl,BYTE PTR [esi+edx*2]
  41ed4b:	jge    0x41edb1
  41ed4d:	dec    ecx
  41ed4e:	pop    ebx
  41ed4f:	mov    esp,0xc2bd114f
  41ed54:	mov    BYTE PTR [esi-0x5b6ab203],bh
  41ed5a:	mov    eax,ds:0x9123a0ae
  41ed60:	dec    ebp
  41ed61:	xchg   BYTE PTR [ebx+0x6ae24bbc],al
  41ed67:	outs   dx,BYTE PTR ds:[esi]
  41ed68:	lea    ebx,[ecx]
  41ed6a:	lods   eax,DWORD PTR ds:[esi]
  41ed6b:	in     al,dx
  41ed6c:	in     eax,dx
  41ed6d:	mov    esi,0x348d6b53
  41ed72:	jp     0x41ed05
  41ed74:	add    BYTE PTR [ebp+ecx*1-0x36],cl
  41ed78:	dec    ecx
  41ed79:	xor    esi,esp
  41ed7b:	ja     0x41ede9
  41ed7d:	aas    
  41ed7e:	retf   
  41ed7f:	leave  
  41ed80:	cmc    
  41ed81:	subps  xmm4,xmm0
  41ed84:	and    bl,BYTE PTR ds:[ecx+0x465083cb]
  41ed8b:	ja     0x41ed52
  41ed8d:	test   al,0x95
  41ed8f:	mov    esi,0xab3612dc
  41ed94:	daa    
  41ed95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed96:	mov    ebp,0xdc57efba
  41ed9b:	bswap  ebp
  41ed9d:	gs nop
  41ed9f:	pop    ebp
  41eda0:	xchg   DWORD PTR [eax-0x647ca370],esp
  41eda6:	jae    0x41ed2d
  41eda8:	shl    BYTE PTR [ebp+0x71da2bc7],0xb7
  41edaf:	xor    eax,0xf2638184
  41edb4:	sub    BYTE PTR [ecx],0xf1
  41edb7:	fdiv   QWORD PTR [edi]
  41edb9:	inc    edx
  41edba:	fst    QWORD PTR [ebx]
  41edbc:	das    
  41edbd:	fimul  WORD PTR [eax]
  41edbf:	out    0x9a,al
  41edc1:	out    dx,eax
  41edc2:	push   ebx
  41edc3:	dec    esp
  41edc4:	xchg   ecx,eax
  41edc5:	sbb    dh,BYTE PTR [eax]
  41edc7:	mov    bl,0xe4
  41edc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edca:	in     al,dx
  41edcb:	jl     0x41edf7
  41edcd:	push   edx
  41edce:	lahf   
  41edcf:	out    dx,eax
  41edd0:	call   0x6351:0x3ef9f6c6
  41edd7:	retf   0x840d
  41edda:	lea    ebp,fs:[bp+0x1e]
  41eddf:	xchg   ebp,eax
  41ede0:	fistp  DWORD PTR [edi+0x1f]
  41ede3:	jne    0x41edc8
  41ede5:	mov    ch,0x7e
  41ede7:	mov    bl,0xe0
  41ede9:	mov    ds:0xb3335573,al
  41edee:	add    ch,bh
  41edf0:	sahf   
  41edf1:	mov    eax,0x84cb58a
  41edf6:	stos   BYTE PTR es:[edi],al
  41edf7:	mov    al,0xd3
  41edf9:	add    al,0xfb
  41edfb:	mov    edi,0xd57a361d
  41ee00:	and    eax,0xd534f131
  41ee05:	xchg   ebp,eax
  41ee06:	shl    edi,1
  41ee08:	inc    eax
  41ee09:	pop    ecx
  41ee0a:	daa    
  41ee0b:	(bad)  
  41ee0c:	sbb    BYTE PTR [ecx-0x6eaad6a6],ah
  41ee12:	(bad)  [ebx-0x3f]
  41ee15:	jne    0x41eda0
  41ee17:	push   ecx
  41ee18:	add    DWORD PTR [esi+0x33],eax
  41ee1b:	mov    WORD PTR [esi+esi*4+0x3c],fs
  41ee1f:	aas    
  41ee20:	mov    ah,0x65
  41ee22:	ins    BYTE PTR es:[edi],dx
  41ee23:	jecxz  0x41ee41
  41ee25:	ss jmp 0x7dd6:0xfd609ced
  41ee2d:	mov    esp,0x8aa048bc
  41ee32:	sti    
  41ee33:	(bad)  
  41ee35:	add    al,0xdc
  41ee37:	dec    eax
  41ee38:	ins    DWORD PTR es:[edi],dx
  41ee39:	xchg   esp,eax
  41ee3a:	repnz pop ebx
  41ee3c:	inc    ecx
  41ee3d:	pop    eax
  41ee3e:	inc    esi
  41ee3f:	push   ss
  41ee40:	jecxz  0x41edda
  41ee42:	xor    al,0xc0
  41ee44:	outs   dx,DWORD PTR ds:[esi]
  41ee45:	sub    al,0x1f
  41ee47:	stos   DWORD PTR es:[edi],eax
  41ee48:	loopne 0x41ee86
  41ee4a:	push   ebp
  41ee4b:	pop    ss
  41ee4c:	mov    eax,0x9afb7b04
  41ee51:	jmp    0x59cb:0xfbf4db49
  41ee58:	pop    esi
  41ee59:	data16 jae 0x41ede5
  41ee5c:	fcmovbe st,st(4)
  41ee5e:	aas    
  41ee5f:	sti    
  41ee60:	(bad)  
  41ee61:	int    0x5c
  41ee63:	push   0x57128d0
  41ee68:	jne    0x41eedf
  41ee6a:	mov    dl,0xce
  41ee6c:	adc    DWORD PTR [esi+0x63],edx
  41ee6f:	xchg   esi,eax
  41ee70:	fistp  WORD PTR [esp+esi*4+0x69]
  41ee74:	gs stos DWORD PTR es:[edi],eax
  41ee76:	pushf  
  41ee77:	bound  edi,QWORD PTR [ecx]
  41ee79:	loop   0x41ee64
  41ee7b:	jb     0x41ee23
  41ee7d:	nop
  41ee7e:	leave  
  41ee7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee80:	xor    DWORD PTR [esi],esp
  41ee82:	shl    ch,0xcd
  41ee85:	mov    bl,0xc
  41ee87:	sbb    DWORD PTR [edx-0x74],esi
  41ee8a:	jmp    0x207:0xcfd1658
  41ee91:	out    dx,eax
  41ee92:	inc    esp
  41ee93:	imul   ebx,DWORD PTR [edx],0x56bb6115
  41ee99:	popa   
  41ee9a:	(bad)  
  41ee9b:	jge    0x41ee45
  41ee9d:	sbb    dl,ch
  41ee9f:	mov    ebx,0x3f673e73
  41eea4:	fnstcw WORD PTR [ecx+0x50]
  41eea7:	push   esi
  41eea8:	jp     0x41ee4d
  41eeaa:	sub    eax,DWORD PTR [edx-0x1cfeabee]
  41eeb0:	dec    esi
  41eeb1:	idiv   BYTE PTR [edx+0x783e4d38]
  41eeb7:	push   0x76d7eebe
  41eebc:	inc    ebx
  41eebd:	mov    ebp,0xa7d50cea
  41eec2:	fdiv   DWORD PTR [ecx]
  41eec4:	adc    al,0x44
  41eec6:	ror    DWORD PTR [eax+0x73],1
  41eec9:	jbe    0x41ee55
  41eecb:	out    dx,al
  41eecc:	lods   eax,DWORD PTR ds:[esi]
  41eecd:	pop    ds
  41eece:	dec    edx
  41eecf:	ret    
  41eed0:	out    dx,eax
  41eed1:	fwait
  41eed2:	pop    edi
  41eed3:	and    BYTE PTR [esi-0x57152889],ch
  41eed9:	out    dx,eax
  41eeda:	cmc    
  41eedb:	and    DWORD PTR [edi+0x61d05f8c],ecx
  41eee1:	into   
  41eee2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eee3:	aas    
  41eee4:	aad    0xa7
  41eee6:	stos   BYTE PTR es:[edi],al
  41eee7:	pushf  
  41eee8:	mov    dh,0x9b
  41eeea:	icebp  
  41eeeb:	cwde   
  41eeec:	jle    0x41eec9
  41eeee:	xchg   esp,eax
  41eeef:	js     0x41ef1a
  41eef1:	dec    ebp
  41eef2:	mov    esi,0x926fa935
  41eef7:	sbb    ebx,DWORD PTR [eax]
  41eef9:	and    eax,0x77654aea
  41eefe:	xor    BYTE PTR [edi-0x1f],al
  41ef01:	stc    
  41ef02:	jbe    0x41ee99
  41ef04:	fwait
  41ef05:	cmp    DWORD PTR [edx+0x2a56bf9],ecx
  41ef0b:	add    al,0x1f
  41ef0d:	cdq    
  41ef0e:	scas   eax,DWORD PTR es:[edi]
  41ef0f:	scas   eax,DWORD PTR es:[edi]
  41ef10:	pop    edx
  41ef11:	loop   0x41ef4d
  41ef13:	lea    edx,[ecx]
  41ef15:	mov    BYTE PTR [eax-0x50],al
  41ef18:	xchg   edi,eax
  41ef19:	test   DWORD PTR [ecx-0x3e49dfc],edi
  41ef1f:	enter  0x1a1f,0xc7
  41ef23:	out    0xc,eax
  41ef25:	and    BYTE PTR ds:[edi-0x1b5b3fe7],dl
  41ef2c:	xchg   ebp,eax
  41ef2d:	div    DWORD PTR [ebx-0x3b]
  41ef30:	ud2    
  41ef32:	sti    
  41ef33:	mov    ds:0xfda2d718,eax
  41ef38:	cwde   
  41ef39:	xchg   ecx,eax
  41ef3a:	iret   
  41ef3b:	push   ebx
  41ef3c:	lea    edi,[ecx+ebx*2]
  41ef3f:	adc    ecx,edi
  41ef41:	mov    eax,0xe55a83f0
  41ef46:	mul    BYTE PTR [edi+ecx*4]
  41ef49:	les    ebx,FWORD PTR [ecx]
  41ef4b:	sbb    ah,BYTE PTR [esi]
  41ef4d:	imul   ecx,DWORD PTR [edi+eax*4],0xffffffc2
  41ef51:	adc    ebp,esp
  41ef53:	pop    es
  41ef54:	jp     0x41ef6e
  41ef56:	push   esi
  41ef57:	dec    esi
  41ef58:	aaa    
  41ef59:	sub    eax,ebp
  41ef5b:	in     eax,dx
  41ef5c:	cmp    eax,0x21f9fd42
  41ef61:	das    
  41ef62:	push   eax
  41ef63:	pop    edi
  41ef64:	pop    esi
  41ef65:	mov    ecx,0x1055efbe
  41ef6a:	push   ebp
  41ef6b:	or     ax,0x1a7c
  41ef6f:	pop    ss
  41ef70:	add    BYTE PTR [edi],cl
  41ef72:	imul   ebp,DWORD PTR [ebp+0x14],0x590b4bd1
  41ef79:	mov    esp,0x4ffffab5
  41ef7e:	push   0x28
  41ef80:	aas    
  41ef81:	repz fs xchg esp,eax
  41ef84:	inc    ebx
  41ef85:	inc    edi
  41ef86:	pop    ebx
  41ef87:	ror    DWORD PTR ds:0x4d46feb3,1
  41ef8d:	sub    al,0x75
  41ef8f:	jecxz  0x41ef77
  41ef91:	mov    bh,0xb4
  41ef93:	test   DWORD PTR [ecx-0x1d],esi
  41ef96:	dec    edi
  41ef97:	pop    ebx
  41ef98:	das    
  41ef99:	pop    edi
  41ef9a:	out    dx,al
  41ef9b:	ins    DWORD PTR es:[edi],dx
  41ef9c:	out    0x7,al
  41ef9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef9f:	sahf   
  41efa0:	leave  
  41efa1:	sti    
  41efa2:	es retf 
  41efa4:	and    al,0x6b
  41efa6:	sub    dl,BYTE PTR [esp+ecx*2+0x11955491]
  41efad:	aam    0x75
  41efaf:	pusha  
  41efb0:	mov    cs,WORD PTR [ecx+0x29]
  41efb3:	or     cl,ch
  41efb5:	gs aam 0x41
  41efb8:	mov    bl,0x18
  41efba:	into   
  41efbb:	(bad)  
  41efbd:	sbb    DWORD PTR [ecx],0x33
  41efc0:	outs   dx,BYTE PTR ds:[esi]
  41efc1:	lahf   
  41efc2:	rol    al,1
  41efc4:	inc    ebp
  41efc5:	pop    ds
  41efc6:	mov    ds:0xf96de8d9,eax
  41efcb:	(bad)  
  41efcc:	jp     0x41ef90
  41efce:	xor    al,0x75
  41efd0:	xchg   DWORD PTR [ecx+0x8],ebx
  41efd3:	jp     0x41ef77
  41efd5:	xor    ah,ah
  41efd7:	lods   al,BYTE PTR ds:[esi]
  41efd8:	jnp    0x41ef78
  41efda:	push   0xc0c30533
  41efdf:	push   0x50
  41efe1:	adc    eax,0x4adcd2d6
  41efe6:	call   0x9d8e:0xf3ab5b91
  41efed:	es retf 
  41efef:	mov    ds,eax
  41eff1:	pop    ebp
  41eff2:	sbb    BYTE PTR [edx+0x3a2e0fba],0x39
  41eff9:	adc    al,BYTE PTR [edx+ebp*8-0x7c]
  41effd:	push   ecx
  41effe:	call   DWORD PTR ds:0xdca05bb4
  41f004:	mov    eax,DWORD PTR [ecx-0x5e]
  41f007:	call   0x9a558a29
  41f00c:	mov    ebx,0x3e086ae
  41f011:	fiadd  DWORD PTR [ebx]
  41f013:	xchg   BYTE PTR [edx+0x4d],bl
  41f016:	loopne 0x41f00d
  41f018:	in     al,0x9d
  41f01a:	out    dx,al
  41f01b:	sbb    ch,BYTE PTR [edx+0x1ba1d03e]
  41f021:	jmp    0x41f07e
  41f023:	mov    BYTE PTR [eax+0x60],al
  41f026:	xchg   BYTE PTR [edx],dl
  41f028:	test   DWORD PTR [ecx],esp
  41f02a:	cdq    
  41f02b:	in     al,dx
  41f02c:	push   ss
  41f02d:	xor    ebp,DWORD PTR [edx+0x74]
  41f030:	or     al,BYTE PTR [edx-0x22a44466]
  41f036:	mov    edi,0xd532dc66
  41f03b:	pusha  
  41f03c:	add    al,0x29
  41f03e:	mov    ecx,DWORD PTR [edi-0x5d]
  41f041:	scas   eax,DWORD PTR es:[edi]
  41f042:	jno    0x41f01f
  41f044:	int    0xa0
  41f046:	mov    ecx,ecx
  41f048:	scas   eax,DWORD PTR es:[edi]
  41f049:	inc    ebx
  41f04a:	in     al,0xa8
  41f04c:	jmp    0x41eff4
  41f04e:	jb     0x41f042
  41f050:	sbb    BYTE PTR [edi-0x1e],al
  41f053:	and    BYTE PTR [ebp+0x53],bl
  41f056:	pop    esp
  41f057:	pop    ebp
  41f058:	inc    edx
  41f059:	sbb    al,0xaf
  41f05b:	jg     0x41eff9
  41f05d:	sub    al,0xcb
  41f05f:	add    BYTE PTR ds:0xe0184a9,bh
  41f065:	xchg   BYTE PTR [edi+0xc],bh
  41f068:	dec    edx
  41f069:	sahf   
  41f06a:	scas   al,BYTE PTR es:[edi]
  41f06b:	sar    ah,1
  41f06d:	icebp  
  41f06e:	push   esi
  41f06f:	mov    fs,WORD PTR [esi-0x76c40237]
  41f075:	out    dx,al
  41f076:	cmp    esi,esp
  41f078:	xor    eax,0x3c55c20
  41f07d:	push   ebx
  41f07e:	add    eax,0xac3d1011
  41f083:	add    BYTE PTR [ebx],ch
  41f085:	frstor [eax+ebx*2]
  41f088:	dec    esi
  41f089:	out    dx,eax
  41f08a:	aas    
  41f08b:	loopne 0x41f051
  41f08d:	add    dh,bl
  41f08f:	mov    DWORD PTR [edx],edi
  41f091:	sub    al,ah
  41f093:	test   eax,0x34fff76f
  41f098:	add    BYTE PTR [eax-0x61],al
  41f09b:	aad    0x4d
  41f09d:	dec    ecx
  41f09e:	inc    ecx
  41f09f:	and    eax,0x33d3af8f
  41f0a4:	fs (bad) 
  41f0a7:	mov    bh,0xaa
  41f0a9:	add    DWORD PTR [edi],ebx
  41f0ab:	mov    ecx,0x961c1338
  41f0b0:	aaa    
  41f0b1:	lds    ebp,FWORD PTR [esi+0x1d08cda6]
  41f0b7:	inc    ebp
  41f0b8:	mov    esp,0x3e68cac2
  41f0bd:	xchg   ebp,eax
  41f0be:	jno    0x41f0df
  41f0c0:	(bad)  
  41f0c1:	arpl   cx,sp
  41f0c3:	cs inc eax
  41f0c5:	push   DWORD PTR [edi+0x134aecb3]
  41f0cb:	ja     0x41f0f5
  41f0cd:	push   ebx
  41f0ce:	mov    eax,ds:0x20f489ff
  41f0d3:	push   0xfe9929b6
  41f0d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0d9:	packssdw mm0,QWORD PTR [ebx-0x23]
  41f0dd:	or     eax,0x5ae2a9ba
  41f0e2:	push   ebx
  41f0e3:	mov    esp,DWORD PTR [edx]
  41f0e5:	outs   dx,BYTE PTR ds:[esi]
  41f0e6:	dec    esi
  41f0e7:	mov    eax,ds:0x4dcce315
  41f0ec:	jnp    0x41f123
  41f0ee:	movaps XMMWORD PTR [edx+0x57ec337a],xmm0
  41f0f5:	fbstp  TBYTE PTR [ebx+0x10]
  41f0f8:	lods   eax,DWORD PTR ds:[esi]
  41f0f9:	sub    ecx,DWORD PTR [eax+0x30]
  41f0fc:	iret   
  41f0fd:	in     al,dx
  41f0fe:	sub    bl,al
  41f100:	iret   
  41f101:	add    al,0x72
  41f103:	inc    edx
  41f104:	int3   
  41f105:	mov    ch,0x2b
  41f107:	pop    eax
  41f108:	push   ebp
  41f109:	pop    edx
  41f10a:	cmp    eax,0xb81817f
  41f10f:	push   esi
  41f110:	sahf   
  41f111:	loope  0x41f0f2
  41f113:	mov    dl,0xf8
  41f115:	push   es
  41f116:	shr    esp,1
  41f118:	adc    ebx,DWORD PTR [ebp+0x63ecbe4d]
  41f11e:	lds    ecx,FWORD PTR [eax+esi*2-0x46]
  41f122:	retf   
  41f123:	fcom   DWORD PTR [edi-0x26169198]
  41f129:	and    edx,esi
  41f12b:	sbb    esp,DWORD PTR [ebp+0x4d]
  41f12e:	cmp    ch,ch
  41f130:	mov    BYTE PTR [ebp-0x74],bh
  41f133:	fwait
  41f134:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f135:	in     al,0x94
  41f137:	imul   edi,eax,0xe53a6a79
  41f13d:	sbb    eax,0x576c9220
  41f142:	or     eax,0xc8c0e319
  41f147:	(bad)  
  41f148:	and    eax,0x74d2f35a
  41f14d:	adc    al,0x56
  41f14f:	xchg   ebp,eax
  41f150:	jmp    0x41f134
  41f152:	pop    esp
  41f153:	lds    esp,FWORD PTR [edi]
  41f155:	test   DWORD PTR [edx+0x3767a9dc],eax
  41f15b:	and    al,0x79
  41f15d:	xchg   ebp,eax
  41f15e:	or     eax,0x5578e480
  41f163:	or     eax,0x793d2632
  41f168:	fwait
  41f169:	or     eax,0xabcc8af7
  41f16e:	mov    ch,0x9c
  41f170:	in     al,0xc6
  41f172:	mov    edx,0x495f51aa
  41f177:	pop    edx
  41f178:	xor    eax,0x3c04a7bc
  41f17d:	mov    ebp,0xf12db8bb
  41f182:	call   DWORD PTR [eax+0x6c]
  41f185:	ret    
  41f186:	mov    ebx,0x87470d95
  41f18b:	xchg   edx,eax
  41f18c:	imul   esp,DWORD PTR [edx+0x32],0xb6b244b4
  41f193:	mov    ecx,0x76957f05
  41f198:	sub    DWORD PTR [ebp+eiz*1+0x70],edi
  41f19c:	dec    edi
  41f19d:	mov    dl,0xae
  41f19f:	sub    BYTE PTR ds:0x7c1da29,cl
  41f1a5:	sbb    BYTE PTR [ebp-0x2],dh
  41f1a8:	add    DWORD PTR [edx],esp
  41f1aa:	popa   
  41f1ab:	fisttp WORD PTR [ecx-0x13f77356]
  41f1b1:	mul    BYTE PTR [edi+0x3ad695d7]
  41f1b7:	push   eax
  41f1b8:	(bad)  
  41f1b9:	mov    al,0x3e
  41f1bb:	mov    ebx,0x3dd349c8
  41f1c0:	stos   BYTE PTR es:[edi],al
  41f1c1:	das    
  41f1c2:	add    BYTE PTR [ebp-0xff19bb5],bh
  41f1c8:	add    eax,0x31e5bc82
  41f1cd:	or     BYTE PTR [edx+0x6c629ed4],ch
  41f1d3:	mov    eax,0x9fe8aca9
  41f1d8:	fsub   st,st(5)
  41f1da:	inc    esi
  41f1db:	xchg   edi,eax
  41f1dc:	mov    ebx,0x1d59724
  41f1e1:	push   esp
  41f1e2:	sbb    eax,0x9570817
  41f1e7:	xchg   ebx,eax
  41f1e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1e9:	pop    ecx
  41f1ea:	jo     0x41f222
  41f1ec:	xor    eax,0x9e9c6bcf
  41f1f1:	mov    eax,ds:0xe604c9e2
  41f1f6:	push   0x31beb800
  41f1fb:	pop    ebx
  41f1fc:	call   0x8cae912f
  41f201:	xor    ebx,0x701b282
  41f207:	loope  0x41f1b0
  41f209:	mov    ebx,0xfec7b2c5
  41f20e:	test   al,0x93
  41f210:	sti    
  41f211:	dec    eax
  41f212:	addr16 or dh,cl
  41f215:	bound  eax,QWORD PTR [edx+0x27]
  41f218:	popa   
  41f219:	jle    0x41f1d5
  41f21b:	fst    st(2)
  41f21d:	add    DWORD PTR [esi+eax*2-0x19fc5734],0xe39edbef
  41f228:	mov    eax,ds:0x72e16ced
  41f22d:	pop    ss
  41f22e:	sbb    eax,0x63d3587f
  41f233:	cmc    
  41f234:	or     BYTE PTR [ebx+0x7b],dl
  41f237:	outs   dx,BYTE PTR ds:[esi]
  41f238:	gs sahf 
  41f23a:	pop    ds
  41f23b:	aam    0x80
  41f23d:	xor    al,0x2
  41f23f:	inc    edi
  41f240:	jle    0x41f239
  41f242:	or     DWORD PTR [eax+0x70],eax
  41f245:	lds    ecx,FWORD PTR [esi-0x7f9bd286]
  41f24b:	lods   al,BYTE PTR ds:[esi]
  41f24c:	jo     0x41f291
  41f24e:	sbb    esp,DWORD PTR [ebx+0x64]
  41f251:	fild   QWORD PTR [esi+0x1c4de776]
  41f257:	scas   eax,DWORD PTR es:[edi]
  41f258:	aad    0x57
  41f25a:	lods   al,BYTE PTR ds:[esi]
  41f25b:	sahf   
  41f25c:	test   al,0xed
  41f25e:	leave  
  41f25f:	push   0xe24c5522
  41f264:	mov    ebx,0x18c5e68a
  41f269:	pop    edi
  41f26a:	(bad)  
  41f26b:	retf   0x4640
  41f26e:	in     al,dx
  41f26f:	dec    edx
  41f270:	sub    ah,ah
  41f272:	loope  0x41f206
  41f274:	fs push edi
  41f276:	mov    ah,0x7e
  41f278:	popf   
  41f279:	pop    ebx
  41f27a:	mov    ebp,0x3f52e46a
  41f27f:	or     ebp,DWORD PTR [ecx+0x7f63589c]
  41f285:	and    BYTE PTR [eax],ah
  41f287:	jnp    0x41f24e
  41f289:	ja     0x41f2c6
  41f28b:	icebp  
  41f28c:	jb     0x41f2d2
  41f28e:	mov    al,ds:0xab2c0379
  41f293:	pop    esp
  41f294:	popf   
  41f295:	mov    edi,0x880a8178
  41f29a:	pusha  
  41f29b:	push   eax
  41f29c:	ss aam 0x6e
  41f29f:	retf   
  41f2a0:	in     al,dx
  41f2a1:	xor    dh,BYTE PTR [edx+0x78164ea2]
  41f2a7:	lods   eax,DWORD PTR ds:[esi]
  41f2a8:	push   edx
  41f2a9:	ret    
  41f2aa:	mov    al,ds:0xee6bd3f8
  41f2af:	mov    gs,ebp
  41f2b1:	mov    bh,0x1b
  41f2b3:	jge    0x41f2c0
  41f2b5:	mov    ecx,0x6fc156c8
  41f2ba:	lock sbb BYTE PTR [ebx],bh
  41f2bd:	jae    0x41f335
  41f2bf:	es sti 
  41f2c1:	test   al,0x69
  41f2c3:	shl    BYTE PTR [edx-0x64],0xe5
  41f2c7:	into   
  41f2c8:	shr    DWORD PTR [edi+0x669c3470],cl
  41f2ce:	loope  0x41f2b9
  41f2d0:	scas   eax,DWORD PTR es:[edi]
  41f2d1:	adc    ebp,ecx
  41f2d3:	adc    edi,DWORD PTR [eax+0x5a]
  41f2d6:	adc    al,0x98
  41f2d8:	xchg   edi,eax
  41f2d9:	fdivr  DWORD PTR [edx-0x3a18bdc2]
  41f2df:	dec    ebx
  41f2e0:	mov    ebx,eax
  41f2e2:	les    ebp,FWORD PTR [edx]
  41f2e4:	xchg   BYTE PTR [ebp+0x1a],bl
  41f2e7:	and    DWORD PTR [esi],esi
  41f2e9:	xor    DWORD PTR [ecx],eax
  41f2eb:	pop    ebp
  41f2ec:	inc    esi
  41f2ed:	dec    DWORD PTR [edx]
  41f2ef:	(bad)  
  41f2f0:	jg     0x41f2a8
  41f2f2:	(bad)  
  41f2f4:	jae    0x41f2a4
  41f2f6:	aaa    
  41f2f7:	jmp    0x20177155
  41f2fc:	xchg   esp,eax
  41f2fd:	sub    edx,DWORD PTR [ebp+ebx*4+0x4e]
  41f301:	xchg   BYTE PTR [edi],dh
  41f303:	pusha  
  41f304:	ror    BYTE PTR [ecx],cl
  41f306:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f307:	sub    al,dh
  41f309:	mov    esi,0x3b64bde
  41f30e:	jb     0x41f320
  41f310:	mov    ds:0x443582ff,eax
  41f315:	and    bl,BYTE PTR [esi+0x19e9fb1e]
  41f31b:	and    ch,BYTE PTR [ecx-0x6f92e212]
  41f321:	jmp    0x41f2a9
  41f323:	outs   dx,BYTE PTR ds:[esi]
  41f324:	pop    eax
  41f325:	cmp    DWORD PTR [esi+eiz*4-0x1f],eax
  41f329:	mov    al,bl
  41f32b:	dec    eax
  41f32c:	mov    ah,0x57
  41f32e:	adc    eax,0x8a0fc3ec
  41f333:	dec    ebx
  41f334:	mov    WORD PTR [esi-0x5d],es
  41f337:	in     eax,dx
  41f338:	fmul   st,st(0)
  41f33a:	fisub  WORD PTR [ecx-0x3850e1a0]
  41f340:	xor    bh,BYTE PTR [ecx-0x35]
  41f343:	mov    bh,0x63
  41f345:	rcl    dl,0xf6
  41f348:	pop    esp
  41f349:	pop    ebp
  41f34a:	dec    ebx
  41f34b:	sahf   
  41f34c:	mov    ebx,DWORD PTR ds:0x5fffa33
  41f352:	test   DWORD PTR [eax],esp
  41f354:	outs   dx,BYTE PTR ds:[esi]
  41f355:	cmp    ebp,ecx
  41f357:	pop    es
  41f358:	cwde   
  41f359:	xchg   ebx,eax
  41f35a:	sti    
  41f35b:	lods   eax,DWORD PTR ds:[esi]
  41f35c:	pop    ds
  41f35d:	xor    al,0xa7
  41f35f:	and    al,0x6a
  41f361:	or     DWORD PTR [edi-0x71],0xf5383e06
  41f368:	(bad)  
  41f369:	xchg   esp,eax
  41f36a:	ret    
  41f36b:	sbb    eax,0x6b4673d2
  41f370:	cld    
  41f371:	sub    bh,al
  41f373:	inc    edi
  41f374:	or     al,0x21
  41f376:	xchg   esp,eax
  41f377:	rcr    DWORD PTR [ecx+0x34],0x6e
  41f37b:	or     BYTE PTR [ebp-0x29],dh
  41f37e:	ds into 
  41f380:	or     al,0xff
  41f382:	sub    bl,BYTE PTR [eax-0x19]
  41f385:	lea    ebp,[ebp-0x75f3f5cf]
  41f38b:	retf   0x830f
  41f38e:	ror    DWORD PTR [ebp-0x1c005417],0xc9
  41f395:	and    al,0xf2
  41f397:	xchg   esp,eax
  41f398:	or     DWORD PTR [esi+edi*4-0xc8c7f82],ebp
  41f39f:	jge    0x41f333
  41f3a1:	push   eax
  41f3a2:	clc    
  41f3a3:	out    dx,eax
  41f3a4:	cvttps2pi mm4,QWORD PTR [edi+esi*8]
  41f3a8:	xor    eax,0x222800c8
  41f3ad:	xor    al,0x4b
  41f3af:	(bad)  
  41f3b0:	mov    eax,0x8c197229
  41f3b5:	mov    bl,0x18
  41f3b7:	js     0x41f350
  41f3b9:	jge    0x41f373
  41f3bb:	dec    ebx
  41f3bc:	repz mov WORD PTR [ecx+0x463416a3],ss
  41f3c3:	pop    edi
  41f3c4:	stos   BYTE PTR es:[edi],al
  41f3c5:	mov    cl,0xdf
  41f3c7:	inc    ecx
  41f3c8:	dec    edx
  41f3c9:	xor    DWORD PTR [esi],esp
  41f3cb:	(bad)  
  41f3cc:	push   ds
  41f3cd:	scas   al,BYTE PTR es:[edi]
  41f3ce:	mov    DWORD PTR [ebp+edi*8+0x4],esp
  41f3d2:	test   eax,0x6e2ff210
  41f3d7:	dec    ecx
  41f3d8:	sub    al,dh
  41f3da:	or     edi,edi
  41f3dc:	push   0xf031c478
  41f3e1:	cmp    eax,esp
  41f3e3:	jmp    0x41f440
  41f3e5:	or     eax,0x8c574def
  41f3ea:	mov    esp,fs
  41f3ec:	loopne 0x41f453
  41f3ee:	mov    bh,0xf6
  41f3f0:	pushf  
  41f3f1:	cmp    eax,0x641958f8
  41f3f6:	int3   
  41f3f7:	xchg   ebx,eax
  41f3f8:	mov    al,BYTE PTR [esi-0x60af4e46]
  41f3fe:	add    ecx,DWORD PTR [eax+0x72]
  41f401:	jmp    0x41f3e1
  41f403:	pop    esi
  41f404:	sahf   
  41f405:	pusha  
  41f406:	clc    
  41f407:	push   edx
  41f408:	ds ins BYTE PTR es:[edi],dx
  41f40a:	xlat   BYTE PTR ds:[ebx]
  41f40b:	xchg   esp,eax
  41f40c:	jmp    0x41f488
  41f40e:	xor    al,0x2d
  41f410:	leave  
  41f411:	stc    
  41f412:	sti    
  41f413:	dec    edx
  41f414:	xchg   ebx,eax
  41f415:	icebp  
  41f416:	mov    bl,BYTE PTR [esi-0xc]
  41f419:	adc    eax,0x7c7b1276
  41f41e:	int3   
  41f41f:	pop    ebx
  41f420:	push   edi
  41f421:	aam    0x56
  41f423:	(bad)  
  41f424:	out    0xb2,al
  41f426:	pop    esp
  41f427:	mov    esi,0x3b14ec97
  41f42c:	les    esp,FWORD PTR [edx-0x3f]
  41f42f:	mov    dl,0x43
  41f431:	mov    cl,0xb9
  41f433:	inc    esp
  41f434:	jmp    0x171:0x8472fa1d
  41f43b:	aas    
  41f43c:	inc    esi
  41f43d:	or     cl,0x2f
  41f440:	sar    DWORD PTR [esi-0x6a4f5938],0x41
  41f447:	mov    DWORD PTR ss:[ebx],esp
  41f44a:	dec    eax
  41f44b:	add    ah,0xe5
  41f44e:	in     al,0x1f
  41f450:	jmp    0x41f4b9
  41f452:	es mov ecx,0x48d192d5
  41f458:	xor    cl,BYTE PTR [ebx]
  41f45a:	xlat   BYTE PTR ds:[ebx]
  41f45b:	daa    
  41f45c:	aad    0x47
  41f45e:	dec    eax
  41f45f:	aas    
  41f460:	sub    BYTE PTR [esi],al
  41f462:	retf   
  41f463:	imul   esp,DWORD PTR [eax+0x16],0xbb55ce03
  41f46a:	jl     0x41f4d4
  41f46c:	jge    0x41f494
  41f46e:	fisttp WORD PTR [edx+edi*4]
  41f471:	imul   ebp,DWORD PTR [esi],0xffffffa1
  41f474:	xchg   ecx,eax
  41f475:	xchg   edx,eax
  41f476:	push   ebx
  41f477:	mov    edi,0x13e48d50
  41f47c:	cmp    ebx,DWORD PTR [edi]
  41f47e:	jg     0x41f44f
  41f480:	cld    
  41f481:	loope  0x41f43a
  41f483:	xor    BYTE PTR [edx-0x212f9ee],bl
  41f489:	stos   DWORD PTR es:[edi],eax
  41f48a:	hlt    
  41f48b:	ret    
  41f48c:	sbb    al,BYTE PTR [esi+0x36]
  41f48f:	or     eax,0x559fdbbc
  41f494:	dec    edi
  41f495:	push   0x921c1de7
  41f49a:	daa    
  41f49b:	jmp    0x41f45a
  41f49d:	push   ebx
  41f49e:	xlat   BYTE PTR ds:[ebx]
  41f49f:	push   esp
  41f4a0:	pop    esi
  41f4a1:	cmp    BYTE PTR ds:0x2904760d,dh
  41f4a7:	pop    ds
  41f4a8:	mov    ebx,0xca83dc9a
  41f4ad:	fidivr WORD PTR [ebx]
  41f4af:	mov    ah,0xb8
  41f4b1:	push   ds
  41f4b2:	std    
  41f4b3:	cmp    BYTE PTR [edi+0x0],cl
  41f4b6:	and    cl,ah
  41f4b8:	sub    eax,0xb2835fb2
  41f4bd:	mov    dh,0x23
  41f4bf:	das    
  41f4c0:	stc    
  41f4c1:	add    BYTE PTR [esi-0x28],dl
  41f4c4:	or     eax,0x4d9adc50
  41f4c9:	xchg   BYTE PTR [esi],cl
  41f4cb:	call   0x5634156f
  41f4d0:	shl    BYTE PTR [ebx+0x705545bf],1
  41f4d6:	out    dx,al
  41f4d7:	or     edx,DWORD PTR [eax-0x5b]
  41f4da:	imul   BYTE PTR [ebx+0x7f6d286a]
  41f4e0:	cmp    DWORD PTR [ebx-0x100575f4],ebp
  41f4e6:	adc    esp,edx
  41f4e8:	pop    ss
  41f4e9:	mov    dh,0x8a
  41f4eb:	(bad)  
  41f4ec:	hlt    
  41f4ed:	imul   edi,ecx,0x4ba1f43f
  41f4f3:	outs   dx,DWORD PTR ds:[esi]
  41f4f4:	mov    ds:0x30558f5b,al
  41f4f9:	push   edi
  41f4fa:	xor    BYTE PTR [ebx],bh
  41f4fc:	dec    edx
  41f4fd:	xchg   edx,eax
  41f4fe:	mov    esi,0x35dc15bd
  41f503:	jmp    0x8e5d:0xb75185ad
  41f50a:	push   ecx
  41f50b:	push   ebp
  41f50c:	sar    DWORD PTR [eax+0x6a],cl
  41f50f:	test   cl,bh
  41f511:	sub    ecx,DWORD PTR [esi+0x4ae58629]
  41f517:	(bad)  
  41f518:	lahf   
  41f519:	jle    0x41f4ee
  41f51b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f51c:	jecxz  0x41f4b8
  41f51e:	push   ecx
  41f51f:	stos   BYTE PTR es:[edi],al
  41f520:	jo     0x41f4c2
  41f522:	adc    BYTE PTR ds:0xab3d953,dl
  41f528:	out    0x4e,eax
  41f52a:	pop    ds
  41f52b:	stc    
  41f52c:	rcl    BYTE PTR [ecx-0x7a],1
  41f52f:	pop    edx
  41f530:	dec    DWORD PTR [ebx-0x51]
  41f533:	popa   
  41f534:	ds ret 
  41f536:	imul   edi,ebx,0x5a
  41f539:	and    al,BYTE PTR [ecx]
  41f53b:	jb     0x41f4e8
  41f53d:	ret    0xb463
  41f540:	repnz sar BYTE PTR [ecx],0x5b
  41f544:	cmp    cl,BYTE PTR [esi]
  41f546:	ss ret 0x65fd
  41f54a:	or     eax,0x9f93d6c
  41f54f:	mov    ?,WORD PTR [eax+0x4c2318f8]
  41f555:	leave  
  41f556:	cdq    
  41f557:	(bad)  
  41f558:	or     eax,0x1b6dfa35
  41f55d:	push   esi
  41f55e:	call   0x9e7:0x2252de8f
  41f565:	lock jl 0x41f4f0
  41f568:	xchg   ch,ah
  41f56a:	inc    esi
  41f56b:	imul   ecx
  41f56d:	into   
  41f56e:	in     al,0x4c
  41f570:	cli    
  41f571:	sbb    ecx,0x3d
  41f574:	push   edx
  41f575:	sub    DWORD PTR [edi],edx
  41f577:	nop
  41f578:	mov    eax,ds:0x44c5278b
  41f57d:	xchg   BYTE PTR [edx+edi*2],bl
  41f580:	xchg   edi,eax
  41f581:	test   BYTE PTR [edi],dh
  41f583:	(bad)  
  41f584:	cmp    al,0xd7
  41f586:	icebp  
  41f587:	and    DWORD PTR [ecx+0x37582643],edx
  41f58d:	lahf   
  41f58e:	inc    esi
  41f58f:	icebp  
  41f590:	jno    0x41f5ab
  41f592:	(bad)  
  41f593:	xchg   edx,eax
  41f594:	jl     0x41f540
  41f596:	xchg   edi,eax
  41f597:	sbb    ch,BYTE PTR [esi+0x3a]
  41f59a:	sbb    BYTE PTR [edi+0x6a1d3832],ah
  41f5a0:	enter  0xc574,0x82
  41f5a4:	xlat   BYTE PTR ds:[ebx]
  41f5a5:	sbb    al,0x67
  41f5a7:	push   edx
  41f5a8:	jo     0x41f5b7
  41f5aa:	push   gs
  41f5ac:	xor    BYTE PTR [esi+eiz*2-0x5d],cl
  41f5b0:	jg     0x41f62f
  41f5b2:	lock dec ecx
  41f5b4:	pop    esi
  41f5b5:	or     BYTE PTR [edi+0x1a],0x36
  41f5b9:	xchg   ecx,eax
  41f5ba:	add    al,0xf3
  41f5bc:	cmp    al,0x64
  41f5be:	clc    
  41f5bf:	loopne 0x41f567
  41f5c1:	sub    eax,DWORD PTR [ebx]
  41f5c3:	and    al,0x27
  41f5c5:	mov    bh,0xfa
  41f5c7:	and    al,0x29
  41f5c9:	dec    edx
  41f5ca:	out    dx,eax
  41f5cb:	mov    edi,0x88e3a1d5
  41f5d0:	lods   al,BYTE PTR ds:[esi]
  41f5d1:	in     eax,0x71
  41f5d3:	inc    esp
  41f5d4:	xor    edi,DWORD PTR [edi+edi*2-0x3664d9d1]
  41f5db:	xor    edx,DWORD PTR [ebx+0x7f53e21a]
  41f5e1:	pop    es
  41f5e2:	test   BYTE PTR [esi+0x4843d669],bl
  41f5e8:	sahf   
  41f5e9:	ins    BYTE PTR es:[edi],dx
  41f5ea:	(bad)  
  41f5eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5ec:	jmp    0x412:0xf2039cd1
  41f5f3:	mov    ds:0x8aa2dc67,al
  41f5f8:	pop    esi
  41f5f9:	cli    
  41f5fa:	xor    eax,0x2eef45f7
  41f5ff:	add    DWORD PTR [ecx],ecx
  41f601:	and    eax,0xd227bc35
  41f606:	je     0x41f665
  41f608:	es xor bh,ah
  41f60b:	add    al,0xc9
  41f60d:	sbb    BYTE PTR [edi+0x505b6059],bl
  41f613:	enter  0xcdcf,0x26
  41f617:	ret    0x14e8
  41f61a:	mov    cl,0xc3
  41f61c:	cmp    al,0x1
  41f61e:	adc    al,0xd3
  41f620:	leave  
  41f621:	xlat   BYTE PTR ds:[ebx]
  41f622:	xchg   esp,eax
  41f623:	fwait
  41f624:	mov    ah,0x1b
  41f626:	sub    BYTE PTR [ebx+eiz*1+0x4f791077],dl
  41f62d:	lods   al,BYTE PTR ds:[esi]
  41f62e:	int3   
  41f62f:	push   0xf481be23
  41f634:	les    ebx,FWORD PTR [edx+0x200209d2]
  41f63a:	in     al,dx
  41f63b:	cmp    dh,ah
  41f63d:	loope  0x41f696
  41f63f:	xchg   esp,edi
  41f641:	outs   dx,BYTE PTR ds:[esi]
  41f642:	out    0x14,eax
  41f644:	int    0xde
  41f646:	sti    
  41f647:	clc    
  41f648:	repnz and DWORD PTR [esi],ecx
  41f64b:	out    0x77,eax
  41f64d:	dec    esi
  41f64e:	jp     0x41f6bd
  41f650:	cvtps2pi mm3,QWORD PTR [edx]
  41f653:	pop    es
  41f654:	jp     0x41f641
  41f656:	scas   al,BYTE PTR es:[edi]
  41f657:	cmc    
  41f658:	sbb    al,0x91
  41f65a:	arpl   WORD PTR [ebx-0x6224966e],ax
  41f660:	xchg   esp,eax
  41f661:	sbb    al,0xa
  41f663:	hlt    
  41f664:	test   eax,0x6c9b6e
  41f669:	js     0x41f627
  41f66b:	daa    
  41f66c:	inc    ecx
  41f66d:	xchg   ebp,eax
  41f66e:	pop    DWORD PTR [esi-0x25921402]
  41f674:	pop    edx
  41f675:	or     BYTE PTR [ebx],0x72
  41f678:	mov    edi,0xddcc0451
  41f67d:	pushf  
  41f67e:	push   esp
  41f67f:	adc    ah,BYTE PTR [ebp+0x75]
  41f682:	cmp    BYTE PTR [esp+eax*2],ch
  41f685:	jg     0x41f683
  41f687:	lds    ebx,FWORD PTR [edi+0x5c]
  41f68a:	lds    esi,FWORD PTR [ecx-0x25]
  41f68d:	add    al,0x9c
  41f68f:	pop    edi
  41f690:	mov    ecx,0x973ea527
  41f695:	push   ebx
  41f696:	add    eax,0x68a30bf3
  41f69b:	shl    esi,1
  41f69d:	push   eax
  41f69e:	cmp    esi,DWORD PTR [esi-0x1d]
  41f6a1:	daa    
  41f6a2:	lods   al,BYTE PTR ds:[esi]
  41f6a3:	push   0x2d2c5ed
  41f6a8:	lods   al,BYTE PTR ds:[esi]
  41f6a9:	xor    eax,0x42a6f714
  41f6ae:	gs jno 0x41f6e7
  41f6b1:	cmp    al,0x3e
  41f6b3:	lock sub DWORD PTR [eax-0x1d],ecx
  41f6b7:	add    BYTE PTR [ecx-0x427e7b94],cl
  41f6bd:	fnstsw WORD PTR [ecx+0x26eb061c]
  41f6c3:	pop    ebx
  41f6c4:	mov    edi,0x6d6372ab
  41f6c9:	test   ebx,0x4cb77595
  41f6cf:	and    esp,0xfffffffe
  41f6d2:	enter  0x79c9,0xb
  41f6d6:	jnp    0x41f744
  41f6d8:	xor    BYTE PTR [edi-0x41],dh
  41f6db:	push   0xffffffa5
  41f6dd:	fisttp QWORD PTR [ebx-0x717e084e]
  41f6e3:	sbb    al,0xe
  41f6e5:	mov    eax,ds:0x4e3bc7a8
  41f6ea:	ret    
  41f6eb:	sbb    DWORD PTR ds:0x80b6ba07,ecx
  41f6f1:	mov    ecx,0xf57e794e
  41f6f6:	sub    ebx,ebx
  41f6f8:	push   0x14
  41f6fa:	jp     0x41f75f
  41f6fc:	mov    eax,0x1da478db
  41f701:	nop
  41f702:	dec    eax
  41f703:	dec    esp
  41f704:	xor    ebp,ecx
  41f706:	dec    edi
  41f707:	xchg   esp,eax
  41f708:	fwait
  41f709:	cmp    al,0x4a
  41f70b:	cmp    al,0x96
  41f70d:	push   edx
  41f70e:	or     dl,BYTE PTR [edi]
  41f710:	fidivr WORD PTR [ebx+0x65]
  41f713:	cmp    esi,DWORD PTR [eax+0x45c4dee9]
  41f719:	jecxz  0x41f727
  41f71b:	(bad)  
  41f71c:	(bad)  
  41f71d:	adc    al,0xbb
  41f71f:	ror    DWORD PTR [edi-0x52cc29fc],1
  41f725:	out    dx,eax
  41f726:	mov    al,ds:0x174594d
  41f72b:	cmp    al,0x8c
  41f72d:	adc    eax,0xde30a077
  41f732:	xor    eax,DWORD PTR [edi+esi*2+0x3]
  41f736:	pop    edi
  41f737:	fsubr  QWORD PTR [esi+0x18]
  41f73a:	jae    0x41f6f1
  41f73c:	pop    ebx
  41f73d:	add    DWORD PTR [eax-0x3a69bf49],0xffffff86
  41f744:	std    
  41f745:	sbb    esi,DWORD PTR es:[ecx-0x7ec6222]
  41f74c:	inc    edi
  41f74d:	jle    0x41f75f
  41f74f:	or     BYTE PTR [edi-0x55c5e6d4],cl
  41f755:	(bad)  
  41f756:	push   0xb92d695e
  41f75b:	scas   al,BYTE PTR es:[edi]
  41f75c:	fsub   QWORD PTR [edi-0x7c]
  41f75f:	mov    ebp,0xc9af1aba
  41f764:	or     eax,0x29678988
  41f769:	icebp  
  41f76a:	pop    esi
  41f76b:	push   edx
  41f76c:	mov    ebp,0x4b26038a
  41f771:	bnd jno 0x41f75a
  41f774:	leave  
  41f775:	je     0x41f781
  41f777:	sbb    bl,BYTE PTR [ecx+0xc]
  41f77a:	outs   dx,DWORD PTR ds:[esi]
  41f77b:	or     DWORD PTR [edi-0x65],edi
  41f77e:	mov    eax,ds:0xb182d799
  41f783:	lock mov edx,0x3b0ea1bf
  41f789:	aam    0x1b
  41f78b:	fistp  DWORD PTR fs:[eax+edx*1-0x26]
  41f790:	nop
  41f791:	inc    ecx
  41f792:	sbb    eax,0xd194ff2
  41f797:	push   ss
  41f798:	mov    bh,0x98
  41f79a:	fwait
  41f79b:	shl    BYTE PTR [edi+0xe],0x8e
  41f79f:	repz sub esp,edx
  41f7a2:	xor    dh,al
  41f7a4:	fcomip st,st(2)
  41f7a6:	sub    eax,0xe5d034d5
  41f7ab:	ins    DWORD PTR es:[edi],dx
  41f7ac:	stos   BYTE PTR es:[edi],al
  41f7ad:	(bad)  
  41f7ae:	cld    
  41f7af:	iret   
  41f7b0:	aam    0xc3
  41f7b2:	or     BYTE PTR [eax-0x6767527b],bh
  41f7b8:	jns    0x41f76f
  41f7ba:	lahf   
  41f7bb:	pop    esi
  41f7bc:	scas   eax,DWORD PTR es:[edi]
  41f7bd:	adc    cl,BYTE PTR [eax+0x67]
  41f7c0:	inc    edx
  41f7c1:	call   0x1fa472cb
  41f7c6:	and    cl,bh
  41f7c8:	or     al,0x98
  41f7ca:	mov    bh,0xf7
  41f7cc:	imul   esp,DWORD PTR [ebx+0x70],0x4328766a
  41f7d3:	cwde   
  41f7d4:	jecxz  0x41f818
  41f7d6:	and    BYTE PTR [eax-0x4ca1bf56],al
  41f7dc:	push   esp
  41f7dd:	faddp  st(5),st
  41f7df:	mov    ecx,ds
  41f7e1:	in     al,0xfc
  41f7e3:	push   edx
  41f7e4:	inc    ebp
  41f7e5:	xor    eax,0xaf76d4d6
  41f7ea:	fldenv [edx+0x5ac8f7dd]
  41f7f0:	mov    dh,0xd0
  41f7f2:	xchg   esp,eax
  41f7f3:	push   eax
  41f7f4:	jecxz  0x41f86d
  41f7f6:	sbb    ch,BYTE PTR [ecx+0x24825a98]
  41f7fc:	inc    ebx
  41f7fd:	ins    BYTE PTR es:[edi],dx
  41f7fe:	mov    dl,0xb9
  41f800:	or     al,BYTE PTR [edx]
  41f802:	xor    DWORD PTR [edx],edx
  41f804:	push   edx
  41f805:	push   0xffffffa2
  41f807:	ja     0x41f856
  41f809:	push   esi
  41f80a:	loop   0x41f82e
  41f80c:	outs   dx,BYTE PTR ds:[esi]
  41f80d:	popf   
  41f80e:	(bad)  
  41f80f:	pushf  
  41f810:	pop    ss
  41f811:	or     eax,ecx
  41f813:	movlps xmm4,QWORD PTR [eax+ecx*1-0x19]
  41f818:	dec    ebx
  41f819:	(bad)  
  41f81a:	cmp    DWORD PTR ds:0x28de00b,ebx
  41f820:	cmp    BYTE PTR [ebp-0x1eb06501],ch
  41f826:	push   0xffffffd3
  41f828:	pop    esi
  41f829:	js     0x41f84b
  41f82b:	(bad)  
  41f82c:	call   0x4268:0xad9c18f1
  41f833:	shl    DWORD PTR [ebx-0x6eb2212e],0x90
  41f83a:	xchg   ebp,ecx
  41f83c:	(bad)  
  41f83d:	or     eax,0xe576d18a
  41f842:	adc    DWORD PTR [ebp+esi*2-0x75],ebp
  41f846:	call   0x5f24d538
  41f84b:	sti    
  41f84c:	pop    es
  41f84d:	mov    eax,ds:0xd237d560
  41f852:	push   esi
  41f853:	popa   
  41f854:	mov    bl,0xf0
  41f856:	(bad)  
  41f857:	pop    ebx
  41f858:	shl    BYTE PTR [ecx+0x2a],cl
  41f85b:	push   esp
  41f85c:	inc    esp
  41f85d:	lods   al,BYTE PTR ds:[esi]
  41f85e:	test   eax,0xc2ff1fac
  41f863:	mov    ecx,DWORD PTR [esi+0x76]
  41f866:	sub    eax,0x3c48d2ad
  41f86b:	test   al,0xec
  41f86d:	inc    edx
  41f86e:	hlt    
  41f86f:	mov    cl,0x81
  41f871:	into   
  41f872:	push   es
  41f873:	mov    al,ds:0x31c821ad
  41f878:	call   0x33a8:0x8f5be224
  41f87f:	jb     0x41f83e
  41f881:	jl     0x41f822
  41f883:	mov    al,gs:0xee70ccf0
  41f889:	or     al,dl
  41f88b:	pop    eax
  41f88c:	fsub   DWORD PTR [esp+edx*8+0x77a5ac3e]
  41f893:	jge    0x41f88e
  41f895:	xchg   esi,eax
  41f896:	adc    al,0xa6
  41f898:	push   0xa64366b
  41f89d:	inc    ecx
  41f89e:	pop    edi
  41f89f:	(bad)  
  41f8a0:	in     al,0x82
  41f8a2:	add    edi,eax
  41f8a4:	sbb    DWORD PTR [eax+0x1478494b],edi
  41f8aa:	pop    ebx
  41f8ab:	out    0xb4,eax
  41f8ad:	aas    
  41f8ae:	jmp    0x41f8a7
  41f8b0:	ud1    ecx,DWORD PTR [ecx+0x325c836f]
  41f8b7:	xchg   esi,eax
  41f8b8:	sbb    DWORD PTR [eax-0x70],ebp
  41f8bb:	push   esp
  41f8bc:	repnz xchg ebp,eax
  41f8be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8bf:	pop    ecx
  41f8c0:	adc    DWORD PTR [edx+0x3c3907],esp
  41f8c6:	mov    dl,0x7d
  41f8c8:	sbb    ebp,DWORD PTR ds:[ecx+0x5b]
  41f8cc:	push   ecx
  41f8cd:	jb     0x41f8f8
  41f8cf:	mov    ds:0x1e32b38b,al
  41f8d4:	(bad)  
  41f8d5:	mov    esi,0x3e3816d3
  41f8da:	adc    edx,DWORD PTR [ebx]
  41f8dc:	add    DWORD PTR [esi-0xd],ebp
  41f8df:	scas   eax,DWORD PTR es:[edi]
  41f8e0:	add    al,0x71
  41f8e2:	dec    edi
  41f8e3:	pop    ds
  41f8e4:	xchg   edx,eax
  41f8e5:	stc    
  41f8e6:	call   0x231f731d
  41f8eb:	and    BYTE PTR [eax],bl
  41f8ed:	pushf  
  41f8ee:	dec    eax
  41f8ef:	sub    DWORD PTR [ecx],edi
  41f8f1:	add    BYTE PTR [edx],0x62
  41f8f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8f5:	mov    WORD PTR gs:[esi],bp
  41f8f9:	cwde   
  41f8fa:	mov    edi,0xd7d2f3ca
  41f8ff:	cmp    BYTE PTR [ebx+0x845fb68],ch
  41f905:	and    DWORD PTR [ebx],eax
  41f907:	aam    0x9c
  41f909:	ret    0x78f0
  41f90c:	enter  0xf062,0x28
  41f910:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f911:	stos   DWORD PTR es:[edi],eax
  41f912:	mov    DWORD PTR [edx+eax*4-0x5777ef81],ebx
  41f919:	jmp    0x43fa:0x22f03685
  41f920:	jge    0x41f96d
  41f922:	aad    0x2b
  41f924:	xchg   ebp,eax
  41f925:	xchg   ebx,eax
  41f926:	jne    0x41f988
  41f928:	adc    DWORD PTR [esi-0x23b883a3],ebp
  41f92e:	xor    eax,0x3978912b
  41f933:	push   eax
  41f934:	dec    esi
  41f935:	mov    ebx,0xba064f9d
  41f93a:	iret   
  41f93b:	adc    BYTE PTR [ecx],ch
  41f93d:	lods   eax,DWORD PTR ds:[esi]
  41f93e:	cmp    eax,DWORD PTR [esp+edi*2+0x5f]
  41f942:	(bad)  
  41f943:	sbb    bh,BYTE PTR [ebx-0x403e1b8]
  41f949:	cwde   
  41f94a:	es cld 
  41f94c:	lock mov ebp,0xcd9bda9d
  41f952:	fbld   TBYTE PTR [ecx+0x2d301041]
  41f958:	fs push edx
  41f95a:	enter  0x6699,0x40
  41f95e:	call   0xa592:0x4106461b
  41f965:	push   esi
  41f966:	sub    eax,DWORD PTR [esi-0x6]
  41f969:	mov    eax,0x53059129
  41f96e:	dec    edx
  41f96f:	xchg   BYTE PTR [ecx+0x30acb1db],bl
  41f975:	dec    BYTE PTR [ebx+esi*8]
  41f978:	in     eax,0x79
  41f97a:	in     al,0x98
  41f97c:	xor    ch,dl
  41f97e:	and    cl,bl
  41f980:	cmp    eax,0xba55eea8
  41f985:	adc    eax,0x6164020f
  41f98a:	(bad)  
  41f98b:	fimul  WORD PTR [ebx]
  41f98d:	mov    bl,0x73
  41f98f:	in     al,dx
  41f990:	test   DWORD PTR [ecx-0x47014e20],edi
  41f996:	jecxz  0x41f9a4
  41f998:	int3   
  41f999:	rcr    edx,1
  41f99b:	jge    0x41f947
  41f99d:	gs scas al,BYTE PTR es:[edi]
  41f99f:	pop    ss
  41f9a0:	es stc 
  41f9a2:	faddp  st(2),st
  41f9a4:	push   esp
  41f9a5:	sub    edi,eax
  41f9a7:	add    DWORD PTR [ecx],ebx
  41f9a9:	shl    BYTE PTR [esi+0x5d],0x48
  41f9ad:	mov    ebp,0x93befcea
  41f9b2:	cwde   
  41f9b3:	jp     0x41fa26
  41f9b5:	add    BYTE PTR [esi],0x1a
  41f9b8:	fmul   QWORD PTR [edx-0x6cc163b4]
  41f9be:	ins    DWORD PTR es:[edi],dx
  41f9bf:	xor    DWORD PTR [edi],0x41
  41f9c2:	inc    esi
  41f9c3:	aaa    
  41f9c4:	inc    ebx
  41f9c5:	sub    eax,0xd6c50f24
  41f9ca:	scas   al,BYTE PTR es:[edi]
  41f9cb:	jns    0x41f9f6
  41f9cd:	nop
  41f9ce:	adc    BYTE PTR ds:0x3fa7489b,0xf6
  41f9d5:	cmp    BYTE PTR [esi-0x7e],0xc
  41f9d9:	sar    ecx,0xd4
  41f9dc:	test   DWORD PTR [ebp-0x5],ebx
  41f9df:	pusha  
  41f9e0:	test   eax,0x51da74e0
  41f9e5:	add    BYTE PTR [ecx+esi*4+0x3507ae0],ch
  41f9ec:	mov    ch,0x85
  41f9ee:	pop    esi
  41f9ef:	mov    dl,0x29
  41f9f1:	cmp    al,0xe4
  41f9f3:	ret    
  41f9f4:	fisttp QWORD PTR [ebp-0x4]
  41f9f7:	and    al,0xb6
  41f9f9:	pop    esp
  41f9fa:	retfw  
  41f9fc:	shl    ch,0xf
  41f9ff:	or     DWORD PTR [edi-0x28e2eb00],0xe665cf7b
  41fa09:	retf   
  41fa0a:	dec    ebp
  41fa0b:	and    dl,ah
  41fa0d:	ror    BYTE PTR [ecx],cl
  41fa0f:	loope  0x41f9cb
  41fa11:	jmp    0xdf58:0xd900827e
  41fa18:	pop    esi
  41fa19:	imul   esp,edx,0x1e226787
  41fa1f:	pusha  
  41fa20:	dec    ebx
  41fa21:	fdiv   QWORD PTR [esi]
  41fa23:	xchg   edx,eax
  41fa24:	add    edi,edx
  41fa26:	add    edi,eax
  41fa28:	mov    edx,0xb5d9886c
  41fa2d:	nop
  41fa2e:	repnz xor BYTE PTR [esi],bh
  41fa31:	dec    esi
  41fa32:	test   al,0xb6
  41fa34:	pop    ds
  41fa35:	inc    edx
  41fa36:	inc    esp
  41fa37:	(bad)  
  41fa39:	or     bl,bl
  41fa3b:	rcl    BYTE PTR [esi+0x4b],cl
  41fa3e:	sbb    DWORD PTR [eax+ecx*2+0x73],0x5ca71b4a
  41fa46:	call   0x733effc8
  41fa4b:	es push esi
  41fa4d:	pop    ss
  41fa4e:	scas   al,BYTE PTR es:[edi]
  41fa4f:	sbb    esi,DWORD PTR [ecx]
  41fa51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa52:	mov    eax,DWORD PTR [edx-0x13]
  41fa55:	arpl   WORD PTR [esi+0x23],cx
  41fa58:	mov    ah,0x5
  41fa5a:	adc    BYTE PTR [esi+0x2d0b6b9a],dl
  41fa60:	sub    ebx,DWORD PTR [edx-0x55]
  41fa63:	repz or esp,DWORD PTR [edi+0x5238f02d]
  41fa6a:	push   esp
  41fa6b:	xchg   edi,eax
  41fa6c:	xchg   ecx,eax
  41fa6d:	sbb    eax,0x1c90ab34
  41fa72:	bound  esi,QWORD PTR [eax+ebp*4-0x716696bf]
  41fa79:	push   cs
  41fa7a:	addr16 sti 
  41fa7c:	addr16 cli 
  41fa7e:	retf   0x90e5
  41fa81:	in     al,dx
  41fa82:	aas    
  41fa83:	push   edx
  41fa84:	es repnz scas eax,DWORD PTR es:[edi]
  41fa87:	add    eax,0x46a6a3d9
  41fa8c:	dec    ebp
  41fa8d:	xchg   ecx,eax
  41fa8e:	jae    0x41fa65
  41fa90:	mov    dh,0x96
  41fa92:	retf   
  41fa93:	jmp    0x7d1f3164
  41fa98:	xor    dl,0x72
  41fa9b:	inc    esi
  41fa9c:	pop    ebx
  41fa9d:	and    DWORD PTR fs:[edx+0xa],0x67
  41faa2:	sbb    bh,BYTE PTR [ebp+0x4ca44834]
  41faa8:	leave  
  41faa9:	daa    
  41faaa:	sar    edi,0x91
  41faad:	fimul  WORD PTR [ebp+eax*1+0x410882d1]
  41fab4:	push   ecx
  41fab5:	(bad)  
  41fab6:	out    dx,eax
  41fab7:	fmul   st(1),st
  41fab9:	mov    bh,0xa
  41fabb:	rcr    dl,0x8c
  41fabe:	in     eax,0x21
  41fac0:	mov    eax,0x5040192b
  41fac5:	push   es
  41fac6:	mov    cl,0xee
  41fac8:	dec    ebx
  41fac9:	and    eax,0x82464d64
  41face:	add    BYTE PTR [eax],dh
  41fad0:	mov    DWORD PTR [ebp-0x78d8d8b5],esp
  41fad6:	inc    ecx
  41fad7:	arpl   WORD PTR [edx-0x4d],bp
  41fada:	pop    esi
  41fadb:	test   DWORD PTR [ebp+edi*4+0x7797e4d7],edi
  41fae2:	into   
  41fae3:	mov    ecx,0xa76257f6
  41fae8:	mov    edi,0xc748027e
  41faed:	push   0x79215bee
  41faf2:	arpl   ax,bx
  41faf4:	inc    ecx
  41faf5:	xchg   BYTE PTR [ebx+0x2f],ch
  41faf8:	sar    DWORD PTR [edi-0x5c],0x9c
  41fafc:	loop   0x41fb10
  41fafe:	jle    0x41fb23
  41fb00:	std    
  41fb01:	adc    edi,DWORD PTR [edx+0x73ee4a1d]
  41fb07:	into   
  41fb08:	je     0x41fb22
  41fb0a:	jge    0x41fb77
  41fb0c:	and    ebx,DWORD PTR [ebx+eiz*4-0x31d55079]
  41fb13:	scas   eax,DWORD PTR es:[edi]
  41fb14:	cwde   
  41fb15:	mov    al,ds:0x17a2674e
  41fb1a:	push   esi
  41fb1b:	push   ds
  41fb1c:	out    0x82,al
  41fb1e:	test   BYTE PTR [esp+edx*2],al
  41fb21:	and    cl,BYTE PTR [edx]
  41fb23:	cmp    eax,0x97250c1d
  41fb28:	mov    ebp,0x1cfc6c99
  41fb2d:	fiadd  WORD PTR [edi+0x75]
  41fb30:	or     eax,0x442fe699
  41fb35:	retf   0x987e
  41fb38:	mov    edx,0x8d849b61
  41fb3d:	sub    esi,eax
  41fb3f:	pop    esi
  41fb40:	mov    eax,0x979b01a3
  41fb45:	test   al,ah
  41fb47:	push   0x59
  41fb49:	pop    esi
  41fb4a:	iret   
  41fb4b:	jmp    0x9728:0x4fc6075a
  41fb52:	cmp    eax,0x9500f04e
  41fb57:	mov    ds:0x5da2f01a,eax
  41fb5c:	stc    
  41fb5d:	arpl   WORD PTR [edi+0x5e],si
  41fb60:	mov    DWORD PTR [ebp-0x4e],ecx
  41fb63:	pop    ebx
  41fb64:	clc    
  41fb65:	(bad)  
  41fb66:	enter  0xc82b,0x13
  41fb6a:	dec    edx
  41fb6b:	add    ebx,DWORD PTR [edx]
  41fb6d:	ficom  WORD PTR [ecx-0x43]
  41fb70:	mov    ch,0xac
  41fb72:	jb     0x41fb21
  41fb74:	inc    edx
  41fb75:	jne    0x41fb8f
  41fb77:	mov    ds:0x10eb855b,eax
  41fb7c:	mov    ebp,0xa71becb
  41fb81:	je     0x41fbdf
  41fb83:	mov    cl,0x54
  41fb85:	cld    
  41fb86:	xlat   BYTE PTR ds:[ebx]
  41fb87:	xchg   ebp,eax
  41fb88:	(bad)  
  41fb89:	jp     0x41fbe9
  41fb8b:	mov    esp,0xe66ea5d1
  41fb90:	sub    al,0x6e
  41fb92:	addr16 push ebp
  41fb94:	or     DWORD PTR [eax+0x61],eax
  41fb97:	xchg   esi,eax
  41fb98:	jle    0x41fb91
  41fb9a:	and    al,0xb6
  41fb9c:	push   ebp
  41fb9d:	xor    DWORD PTR [eax],0xffffffc0
  41fba0:	jo     0x41fb3b
  41fba2:	(bad)  
  41fba3:	jne    0x41fb4f
  41fba5:	cwde   
  41fba6:	push   ss
  41fba7:	inc    edx
  41fba8:	push   0x14
  41fbaa:	xchg   ch,dh
  41fbac:	and    ah,BYTE PTR [edx-0x3c]
  41fbaf:	iret   
  41fbb0:	mov    WORD PTR [edi+0x7c],fs
  41fbb3:	into   
  41fbb4:	inc    esi
  41fbb5:	push   ecx
  41fbb6:	jmp    0xd01d:0xdda54545
  41fbbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbbe:	xchg   BYTE PTR [ebx],al
  41fbc0:	mov    ch,dl
  41fbc2:	pop    ss
  41fbc3:	and    eax,0xb41e67f0
  41fbc8:	mov    eax,ds:0x92d52a29
  41fbcd:	test   al,0xea
  41fbcf:	mov    ds:0x4152d706,eax
  41fbd4:	fst    st(0)
  41fbd6:	mov    ah,0x52
  41fbd8:	and    bh,dl
  41fbda:	mov    WORD PTR [ecx+0x3735dbeb],?
  41fbe0:	(bad)  
  41fbe1:	das    
  41fbe2:	or     al,0xdc
  41fbe4:	push   0x7
  41fbe6:	inc    ebx
  41fbe7:	out    dx,eax
  41fbe8:	xchg   BYTE PTR [ebp+0x5d],bh
  41fbeb:	call   0xaedceb75
  41fbf0:	adc    dh,0xd5
  41fbf3:	leave  
  41fbf4:	pop    es
  41fbf5:	lods   eax,DWORD PTR ds:[esi]
  41fbf6:	outs   dx,DWORD PTR ds:[esi]
  41fbf7:	aad    0x24
  41fbf9:	(bad)  
  41fbfa:	shr    bh,cl
  41fbfc:	popf   
  41fbfd:	xor    eax,0x51e3fef8
  41fc02:	(bad)  
  41fc03:	pop    edi
  41fc04:	mov    bl,0xb7
  41fc06:	mov    bh,0xec
  41fc08:	scas   al,BYTE PTR es:[edi]
  41fc09:	rcl    DWORD PTR [edi],0xd7
  41fc0c:	push   ds
  41fc0d:	xchg   edi,eax
  41fc0e:	mov    dh,0x6c
  41fc10:	push   ebx
  41fc11:	mov    BYTE PTR [esi+0x37070500],bl
  41fc17:	inc    edi
  41fc18:	push   esp
  41fc19:	xchg   esi,eax
  41fc1a:	test   al,0x8b
  41fc1c:	mov    ecx,?
  41fc1e:	rcl    BYTE PTR [ebx+eiz*1],0x82
  41fc22:	dec    eax
  41fc23:	inc    edi
  41fc24:	pop    eax
  41fc25:	xor    esi,DWORD PTR [edx+ebp*1-0x37]
  41fc29:	ds jle 0x41fc2b
  41fc2c:	fidiv  WORD PTR [ecx+0x45fe8db1]
  41fc32:	out    0x25,eax
  41fc34:	push   cs
  41fc35:	clc    
  41fc36:	mov    eax,ds:0x5302a051
  41fc3b:	pop    esp
  41fc3c:	adc    dl,BYTE PTR [ebx+0x64]
  41fc3f:	sbb    edx,DWORD PTR [esi+0x30d2222d]
  41fc45:	mov    ds:0xa09528f,eax
  41fc4a:	(bad)  
  41fc4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc4c:	pavgw  mm1,mm5
  41fc4f:	fwait
  41fc50:	mov    dh,0x13
  41fc52:	mov    dl,0xa0
  41fc54:	sahf   
  41fc55:	sub    DWORD PTR [ecx+ecx*4-0x721af81c],ebx
  41fc5c:	lahf   
  41fc5d:	xor    al,0xfd
  41fc5f:	(bad)  
  41fc60:	mov    esp,esi
  41fc62:	dec    esi
  41fc63:	pop    ebx
  41fc64:	jno    0x41fbe8
  41fc66:	xor    BYTE PTR [eax+0x4d],0x6d
  41fc6a:	mov    eax,ds:0xdd5dbb71
  41fc6f:	mov    ebx,DWORD PTR [eax+0x77baed18]
  41fc75:	dec    esi
  41fc76:	daa    
  41fc77:	pop    ebp
  41fc78:	mov    ah,bl
  41fc7a:	adc    eax,0xd1409ca
  41fc7f:	in     eax,0x49
  41fc81:	mov    cl,0x16
  41fc83:	pop    edi
  41fc84:	dec    esi
  41fc85:	ja     0x41fc41
  41fc87:	push   0x69135757
  41fc8c:	lea    ebx,[esi+ebx*8+0x8]
  41fc90:	inc    edx
  41fc91:	out    0x9b,eax
  41fc93:	jno    0x41fc3d
  41fc95:	cmp    DWORD PTR [esp+eiz*2-0x42],esi
  41fc99:	cmp    eax,0x6276a97d
  41fc9e:	sub    al,0x58
  41fca0:	pop    es
  41fca1:	cld    
  41fca2:	frstor [ebp+0x3461cd4d]
  41fca8:	(bad)  
  41fca9:	pop    edx
  41fcaa:	loop   0x41fc54
  41fcac:	inc    esi
  41fcad:	or     edi,DWORD PTR [eax]
  41fcaf:	push   cs
  41fcb0:	in     eax,dx
  41fcb1:	out    0x6e,eax
  41fcb3:	icebp  
  41fcb4:	xchg   ebx,eax
  41fcb5:	mov    al,ds:0xf93db9d2
  41fcba:	xchg   edx,eax
  41fcbb:	xchg   edi,eax
  41fcbc:	imul   esi,edx,0xffffffa4
  41fcbf:	jbe    0x41fcce
  41fcc1:	push   0x55
  41fcc3:	dec    eax
  41fcc4:	cs push eax
  41fcc6:	xor    BYTE PTR [eax+ebp*4+0x4b506198],0x27
  41fcce:	push   esp
  41fccf:	into   
  41fcd0:	xchg   esi,eax
  41fcd1:	fadd   QWORD PTR [edi-0x3f]
  41fcd4:	jo     0x41fcab
  41fcd6:	mov    eax,0xf372d8d0
  41fcdb:	stc    
  41fcdc:	jecxz  0x41fcb5
  41fcde:	ror    dh,1
  41fce0:	xor    esi,DWORD PTR [edi+ebp*4]
  41fce3:	add    al,0x7
  41fce5:	adc    bl,BYTE PTR [ebx+0x7a0defbe]
  41fceb:	xchg   ebp,eax
  41fcec:	and    al,0x11
  41fcee:	sub    BYTE PTR [eax-0x2a089bf7],0x54
  41fcf5:	mov    edx,edx
  41fcf7:	ficom  DWORD PTR [ecx-0x4bf2ca85]
  41fcfd:	(bad)  
  41fcfe:	iret   
  41fcff:	jg     0x41fd75
  41fd01:	cmp    cl,BYTE PTR [esi]
  41fd03:	sub    bl,ah
  41fd05:	lea    eax,[esi]
  41fd07:	outs   dx,BYTE PTR cs:[esi]
  41fd09:	jmp    0xdedce793
  41fd0e:	sub    BYTE PTR [edi+0x72b57624],0x21
  41fd15:	aas    
  41fd16:	mov    edi,0xccbd9b46
  41fd1b:	inc    ecx
  41fd1c:	and    DWORD PTR [eax+0x70109b9b],esp
  41fd22:	mov    ecx,0xcd8b6c03
  41fd27:	dec    edx
  41fd28:	neg    BYTE PTR [ebx]
  41fd2a:	sub    al,0xae
  41fd2c:	mov    ah,0x95
  41fd2e:	in     al,0xd3
  41fd30:	push   edx
  41fd31:	scas   al,BYTE PTR es:[edi]
  41fd32:	bndstx [esp+eiz*2-0x14],bnd1
  41fd37:	adc    bl,al
  41fd39:	xchg   edx,ebp
  41fd3b:	fist   WORD PTR [esi]
  41fd3d:	mov    ebp,ebx
  41fd3f:	sbb    DWORD PTR [ecx],0xffffff8b
  41fd42:	ja     0x41fd90
  41fd44:	pop    ax
  41fd46:	dec    ebp
  41fd47:	js     0x41fd27
  41fd49:	jno    0x41fd5f
  41fd4b:	into   
  41fd4c:	hlt    
  41fd4d:	(bad)  
  41fd4e:	jmp    0xfc8:0x32caf96
  41fd55:	sar    bh,0x67
  41fd58:	inc    eax
  41fd59:	pop    es
  41fd5a:	inc    ebp
  41fd5b:	mov    ecx,0x1981732d
  41fd60:	push   ss
  41fd61:	add    eax,0xdc307ed
  41fd66:	ror    bh,0x4b
  41fd69:	xchg   ecx,eax
  41fd6a:	push   ecx
  41fd6b:	or     ebx,DWORD PTR [ebp+0x1e]
  41fd6e:	add    al,bl
  41fd70:	or     bl,BYTE PTR [edi+ecx*1+0x7b7be0f6]
  41fd77:	push   0xf397a4b0
  41fd7c:	mov    bl,0xd3
  41fd7e:	and    al,0x16
  41fd80:	fadd   QWORD PTR [edx-0x46]
  41fd83:	hlt    
  41fd84:	cmp    bl,BYTE PTR [ebx]
  41fd86:	je     0x41fe05
  41fd88:	pop    edx
  41fd89:	inc    edx
  41fd8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd8b:	jno    0x41fdf3
  41fd8d:	sub    cl,al
  41fd8f:	pop    eax
  41fd90:	dec    ecx
  41fd91:	shl    edi,0x1f
  41fd94:	pop    ebx
  41fd95:	push   esi
  41fd96:	sahf   
  41fd97:	adc    cl,BYTE PTR [ebx+eax*8]
  41fd9a:	outs   dx,DWORD PTR ds:[esi]
  41fd9b:	shl    DWORD PTR [ebx-0x76],cl
  41fd9e:	adc    eax,0xf0eb329
  41fda3:	leave  
  41fda4:	enter  0x1d9c,0xfb
  41fda8:	ret    0xba90
  41fdab:	jge    0x41fd75
  41fdad:	aam    0x6a
  41fdaf:	adc    BYTE PTR [edi+eax*1-0x58fa5527],bh
  41fdb6:	in     al,dx
  41fdb7:	mov    eax,ds:0x8b3cbff0
  41fdbc:	mov    DWORD PTR [esi+0x5901d9],edx
  41fdc2:	and    al,0xa1
  41fdc4:	and    DWORD PTR [ecx+0x6dc1a1a1],edi
  41fdca:	inc    ebx
  41fdcb:	inc    eax
  41fdcc:	xchg   edx,eax
  41fdcd:	sbb    dl,bh
  41fdcf:	push   esi
  41fdd0:	loopne 0x41fdac
  41fdd2:	repz push 0xf6353198
  41fdd8:	loopne 0x41fde5
  41fdda:	adc    DWORD PTR [edi+0x77387b7f],ecx
  41fde0:	dec    ebx
  41fde1:	in     eax,0x1c
  41fde3:	arpl   WORD PTR [ecx+0x5],dx
  41fde6:	xchg   ebp,eax
  41fde7:	add    al,0x6
  41fde9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdea:	jbe    0x41fdfe
  41fdec:	sub    ecx,eax
  41fdee:	test   al,0xe3
  41fdf0:	pop    eax
  41fdf1:	fld    QWORD PTR [ecx+0x1fe3070f]
  41fdf7:	xchg   esi,eax
  41fdf8:	mov    ds:0xa35123b9,al
  41fdfd:	repz push 0xffffff92
  41fe00:	pop    edx
  41fe01:	sar    al,0x16
  41fe04:	pop    esp
  41fe05:	jp     0x41fdc1
  41fe07:	dec    eax
  41fe08:	int    0x54
  41fe0a:	sbb    eax,0xd7ab6343
  41fe0f:	mov    dh,0x35
  41fe11:	sahf   
  41fe12:	xor    BYTE PTR [eax],al
  41fe14:	jmp    DWORD PTR [ecx+0x53]
  41fe17:	shl    BYTE PTR [edx-0x18],1
  41fe1a:	and    ah,BYTE PTR [ecx+0x70]
  41fe1d:	dec    ebx
  41fe1e:	in     eax,dx
  41fe1f:	sar    DWORD PTR [esi-0xa],0x7c
  41fe23:	mov    eax,DWORD PTR [ecx]
  41fe25:	or     al,0xcc
  41fe27:	adc    cl,BYTE PTR gs:[edx+0x25]
  41fe2b:	sub    eax,0x6225a333
  41fe30:	out    0x54,eax
  41fe32:	ins    DWORD PTR es:[edi],dx
  41fe33:	or     eax,0x2b6f58e8
  41fe38:	sub    eax,0xa1405117
  41fe3d:	std    
  41fe3e:	mov    bh,0x41
  41fe40:	ffreep st(5)
  41fe42:	mov    DWORD PTR [esi-0xb63d1be],ecx
  41fe48:	repz mov dl,0x83
  41fe4b:	pmullw mm5,QWORD PTR [esi-0x75]
  41fe4f:	adc    eax,0xe623e88c
  41fe54:	dec    edi
  41fe55:	mov    eax,ds:0x40f92404
  41fe5a:	mov    esi,0x2a7c3d72
  41fe5f:	sub    al,0xa0
  41fe61:	cld    
  41fe62:	jl     0x41fe90
  41fe64:	fisttp WORD PTR [edi-0x49]
  41fe67:	aam    0xb5
  41fe69:	jl     0x41fedf
  41fe6b:	xchg   ebp,eax
  41fe6c:	jg     0x41fe77
  41fe6e:	(bad)  
  41fe70:	dec    esi
  41fe71:	inc    eax
  41fe72:	mov    ah,0x68
  41fe74:	imul   ecx,DWORD PTR [ebp+0x14],0x92c361dc
  41fe7b:	push   edx
  41fe7c:	mov    WORD PTR [eax],gs
  41fe7e:	xor    bl,cl
  41fe80:	fdivr  DWORD PTR [edi]
  41fe82:	push   es
  41fe83:	clc    
  41fe84:	jno    0x41fe29
  41fe86:	mov    ?,WORD PTR [ebp-0x61]
  41fe89:	lahf   
  41fe8a:	jge    0x41feca
  41fe8c:	xor    ah,BYTE PTR [esi-0x10]
  41fe8f:	lds    ebp,FWORD PTR [bx+si-0x43ce]
  41fe94:	or     ah,BYTE PTR [edi-0x45876a]
  41fe9a:	pop    ds
  41fe9b:	cmp    ebx,DWORD PTR [ecx+0x2fea4285]
  41fea1:	retf   0xd1c2
  41fea4:	adc    eax,DWORD PTR [edi-0x3b]
  41fea7:	fsubr  st(1),st
  41fea9:	mov    eax,ds:0xd5d23a1b
  41feae:	or     al,0xd8
  41feb0:	aas    
  41feb1:	adc    al,0xb4
  41feb3:	dec    ebx
  41feb4:	call   0x53e601f4
  41feb9:	pusha  
  41feba:	test   eax,0xbdb40b07
  41febf:	jmp    0x41ff17
  41fec1:	mov    dh,0xe0
  41fec3:	add    eax,0xbe17db35
  41fec8:	popa   
  41fec9:	mov    ebp,0xa1e933ee
  41fece:	jbe    0x41fe54
  41fed0:	fiadd  WORD PTR [ecx+esi*4]
  41fed3:	sbb    BYTE PTR [edi],bl
  41fed5:	(bad)  
  41fed6:	mov    edx,0xad0202a5
  41fedb:	fnstcw WORD PTR ds:0x8de3641d
  41fee1:	loop   0x41fe7a
  41fee3:	lea    ebp,[ebx+0x1c2e8b07]
  41fee9:	stos   BYTE PTR es:[edi],al
  41feea:	es test al,0x74
  41feed:	xor    al,0xac
  41feef:	iret   
  41fef0:	cmc    
  41fef1:	out    dx,al
  41fef2:	push   0x49
  41fef4:	lds    esi,FWORD PTR ds:0x59a805d9
  41fefa:	imul   DWORD PTR [ebp+0x68]
  41fefd:	(bad)  
  41fefe:	loopne 0x41ff5a
  41ff00:	lds    ecx,FWORD PTR [edi+0x72]
  41ff03:	and    DWORD PTR [ebx+0x5f5ba12a],esi
  41ff09:	loopne 0x41fe9d
  41ff0b:	inc    ecx
  41ff0c:	fcomp  QWORD PTR [ecx-0x5e3049d4]
  41ff12:	aam    0x25
  41ff14:	es cmp eax,0x103b6c42
  41ff1a:	cmp    ecx,esp
  41ff1c:	icebp  
  41ff1d:	test   DWORD PTR ds:0xba9bbe85,esp
  41ff23:	or     eax,0x6f83a49b
  41ff28:	jo     0x41ff58
  41ff2a:	rol    DWORD PTR [ebp-0x11],cl
  41ff2d:	hlt    
  41ff2e:	hlt    
  41ff2f:	int    0xe7
  41ff31:	dec    edi
  41ff32:	data16 xor al,0xe3
  41ff35:	les    edi,FWORD PTR [ecx]
  41ff37:	mov    esi,0xb456021c
  41ff3c:	pop    ebp
  41ff3d:	add    BYTE PTR [ebp+0x7491086],dl
  41ff43:	lea    esi,[ecx-0x331b09e9]
  41ff49:	daa    
  41ff4a:	add    ebp,eax
  41ff4c:	aaa    
  41ff4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff4e:	add    eax,DWORD PTR [edi+edi*2+0x1]
  41ff52:	and    bl,BYTE PTR [esp+ecx*8-0x74]
  41ff56:	cmp    al,0x85
  41ff58:	push   ecx
  41ff59:	(bad)
  41ff5d:	adc    bl,bl
  41ff5f:	sub    eax,0x7ad23e0d
  41ff64:	add    dl,BYTE PTR [eax+edi*1+0x2767049d]
  41ff6b:	pop    ds
  41ff6c:	cmp    esi,DWORD PTR [ebp-0x65]
  41ff6f:	jge    0x41ff5e
  41ff71:	pop    es
  41ff72:	push   ebx
  41ff73:	(bad)  
  41ff74:	nop
  41ff75:	adc    esp,DWORD PTR [edx+eiz*4]
  41ff78:	push   edx
  41ff79:	jns    0x41ff72
  41ff7b:	dec    ecx
  41ff7c:	mov    ds:0xc7c00e3a,eax
  41ff81:	jmp    0xca70:0x602d7094
  41ff88:	scas   al,BYTE PTR es:[edi]
  41ff89:	inc    cx
  41ff8b:	retf   0x5b18
  41ff8e:	cli    
  41ff8f:	or     esi,edx
  41ff91:	ds retf 0xeb39
  41ff95:	sbb    DWORD PTR [edx],0x972063d9
  41ff9b:	jp     0x41ffad
  41ff9d:	mov    ebp,0x83ab936e
  41ffa2:	sub    DWORD PTR [ebx-0x50e15bbc],ebp
  41ffa8:	jns    0x42001c
  41ffaa:	out    0xb0,al
  41ffac:	add    al,0xc6
  41ffae:	jp     0x41ff6b
  41ffb0:	sbb    bh,BYTE PTR [eax-0x36]
  41ffb3:	and    al,0xf6
  41ffb5:	mov    BYTE PTR [ecx+0x8b04453],bh
  41ffbb:	pusha  
  41ffbc:	inc    esi
  41ffbd:	lds    ebp,FWORD PTR [edx]
  41ffbf:	xchg   ebx,eax
  41ffc0:	lods   al,BYTE PTR ds:[esi]
  41ffc1:	fs push edi
  41ffc3:	add    al,ah
  41ffc5:	cmp    DWORD PTR [ebx+0x68ef805b],0x7f
  41ffcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffce:	dec    esi
  41ffcf:	push   ss
  41ffd0:	sbb    eax,0xfa70c513
  41ffd5:	fdivr  DWORD PTR [eax-0x568d0974]
  41ffdb:	hlt    
  41ffdc:	dec    eax
  41ffdd:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffdf:	outs   dx,DWORD PTR ds:[esi]
  41ffe1:	inc    ebx
  41ffe2:	inc    ebp
  41ffe3:	adc    cl,BYTE PTR es:[edx+0x6b]
  41ffe7:	ret    0xe125
  41ffea:	sahf   
  41ffeb:	dec    ecx
  41ffec:	into   
  41ffed:	mov    edx,0x147428f8
  41fff2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fff3:	pop    esi
  41fff4:	jbe    0x41ffe8
  41fff6:	(bad)  
  41fff7:	retf   
  41fff8:	(bad)  
  41fff9:	mov    ebx,0x13bce861
  41fffe:	dec    ecx
  41ffff:	adc    al,0xa7
  420001:	ins    DWORD PTR es:[edi],dx
  420002:	sar    DWORD PTR [edx+0xd],1
  420005:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  420007:	xchg   esp,eax
  420008:	cmp    eax,0x335a7300
  42000d:	test   al,0x0
  42000f:	push   ecx
  420010:	mov    esp,0xa60d953a
  420015:	xor    ah,BYTE PTR [ecx]
  420017:	push   ebp
  420018:	dec    esi
  420019:	sar    BYTE PTR [edi+edi*8+0x6f81158],1
  420020:	inc    ecx
  420021:	mov    dl,BYTE PTR [esi+0x591ded9f]
  420027:	push   edi
  420028:	pop    ds
  420029:	aas    
  42002a:	stc    
  42002b:	fst    DWORD PTR [ebx-0x51ca6e5c]
  420031:	ins    BYTE PTR es:[edi],dx
  420032:	mov    esp,0xab5ce066
  420037:	test   DWORD PTR [ecx+0x5],esp
  42003a:	es push edi
  42003c:	jecxz  0x41ffef
  42003e:	sahf   
  42003f:	cmc    
  420040:	and    BYTE PTR [eax-0x22befed],al
  420046:	mov    edi,0x8f788abe
  42004b:	and    edi,DWORD PTR [ebx+0x30]
  42004e:	pop    ds
  42004f:	loope  0x4200ad
  420051:	pop    ds
  420052:	push   esi
  420053:	test   eax,0x6f396724
  420058:	jmp    0xc546436a
  42005d:	inc    esp
  42005e:	out    0x36,eax
  420060:	imul   ebx,DWORD PTR ds:0x23fbf9e7,0x98335252
  42006a:	pop    edx
  42006b:	mov    cl,0xe3
  42006d:	aad    0xf6
  42006f:	ss sub esi,esp
  420072:	cmp    eax,0xb9d95a0b
  420077:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420078:	mov    ds,esi
  42007a:	lea    esi,[ecx]
  42007c:	cmp    eax,0xa9ba52be
  420081:	sub    ax,0x78cb
  420085:	sar    BYTE PTR [ecx-0x368356a6],0x28
  42008c:	sub    eax,0x6ce38a1d
  420091:	sbb    edi,ebx
  420093:	in     al,0x8c
  420095:	in     eax,0xf1
  420097:	aas    
  420098:	into   
  420099:	(bad)  
  42009a:	imul   ebx,DWORD PTR [ebp-0x33165b88],0xe81780b2
  4200a4:	jecxz  0x4200be
  4200a6:	jbe    0x420066
  4200a8:	cmp    DWORD PTR [ecx],esi
  4200aa:	std    
  4200ab:	ror    DWORD PTR [edi-0x5a],cl
  4200ae:	out    0x31,al
  4200b0:	pop    es
  4200b1:	push   eax
  4200b2:	(bad)
  4200b5:	int    0x4d
  4200b7:	mov    esi,DWORD PTR [eax]
  4200b9:	(bad)  
  4200ba:	mov    dl,0xda
  4200bc:	enter  0x934b,0x18
  4200c0:	mov    cl,0x67
  4200c2:	bound  eax,QWORD PTR [ebp+0x33]
  4200c5:	sub    ecx,DWORD PTR [edi]
  4200c7:	ror    dl,cl
  4200c9:	in     al,dx
  4200ca:	mov    dl,0x7
  4200cc:	mov    eax,ds:0x3f5f3ff7
  4200d1:	jbe    0x42012b
  4200d3:	pop    esi
  4200d4:	loopne 0x4200d3
  4200d6:	jo     0x420061
  4200d8:	aad    0x65
  4200da:	inc    ebx
  4200db:	and    al,BYTE PTR [edx+0x6d]
  4200de:	dec    esi
  4200df:	imul   ecx,DWORD PTR [edi],0xffffffd8
  4200e2:	int3   
  4200e3:	add    bh,0xad
  4200e6:	outs   dx,BYTE PTR ds:[esi]
  4200e7:	arpl   WORD PTR [eax],sp
  4200e9:	mov    WORD PTR [edx],ss
  4200eb:	mov    BYTE PTR [esi+0x6f],bl
  4200ee:	inc    esi
  4200ef:	outs   dx,DWORD PTR ds:[esi]
  4200f0:	cmp    ecx,DWORD PTR [ebx+ebx*4-0x2bd06d0e]
  4200f7:	test   dl,0x2c
  4200fa:	(bad)  
  4200fb:	in     al,0x74
  4200fd:	mov    esi,DWORD PTR [eax+0x10]
  420100:	and    eax,DWORD PTR [esi-0x79bfae44]
  420106:	add    DWORD PTR [edi],ebx
  420108:	inc    esi
  420109:	inc    ebx
  42010a:	xor    esp,ebx
  42010c:	rcl    eax,0xea
  42010f:	xchg   DWORD PTR [ebp+0x53],ecx
  420112:	pop    eax
  420113:	(bad)  
  420114:	pop    edx
  420115:	pop    eax
  420116:	in     al,dx
  420117:	test   DWORD PTR [edx+0x35],ebx
  42011a:	add    BYTE PTR [eax],bh
  42011c:	jb     0x4200d5
  42011e:	fstp   QWORD PTR ds:0x337773a4
  420124:	arpl   WORD PTR [edx+esi*2+0x33],bp
  420128:	sbb    al,0x49
  42012a:	rcr    DWORD PTR [ebx],0x84
  42012d:	fdiv   DWORD PTR [esi+0x7be081bd]
  420133:	push   esp
  420134:	aas    
  420135:	lahf   
  420136:	popf   
  420137:	pop    esp
  420138:	in     eax,dx
  420139:	push   ecx
  42013a:	mov    ecx,0xc24d4d39
  42013f:	mov    edx,0xe0312cb7
  420144:	fistp  WORD PTR [edx]
  420146:	push   0x77
  420148:	inc    esi
  420149:	mov    edi,0x6638ef45
  42014e:	pop    ebx
  42014f:	cmp    al,0xdf
  420151:	mov    BYTE PTR [esi+0x76f756c],0x34
  420158:	cmp    al,BYTE PTR [edi+0x34]
  42015b:	shl    dl,0x93
  42015e:	or     ecx,DWORD PTR [edi]
  420160:	push   es
  420161:	mov    DWORD PTR [edi+0x49fa1f59],0xa28d2918
  42016b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42016c:	mov    esp,eax
  42016e:	cmp    BYTE PTR [edx],bl
  420170:	adc    ebx,edx
  420172:	(bad)  
  420173:	in     eax,dx
  420174:	xchg   edi,eax
  420175:	and    BYTE PTR [edx],ch
  420177:	shr    DWORD PTR [ebx-0x55],0x7b
  42017b:	cli    
  42017c:	add    esi,DWORD PTR ds:0x76b4c010
  420182:	fist   DWORD PTR [si]
  420185:	jne    0x4201b7
  420187:	xor    al,0x3b
  420189:	xor    al,0xba
  42018b:	stos   DWORD PTR es:[edi],eax
  42018c:	xor    BYTE PTR [ecx],ah
  42018e:	jecxz  0x420117
  420190:	loop   0x420145
  420192:	and    ebp,DWORD PTR [esi-0x66a99c28]
  420198:	(bad)  
  420199:	cld    
  42019a:	adc    bh,BYTE PTR [edx-0x6844ac90]
  4201a0:	xor    eax,DWORD PTR [ebx+0x54]
  4201a3:	dec    ch
  4201a5:	rcr    bh,cl
  4201a7:	sub    dl,bh
  4201a9:	adc    esi,0xb1a0c4d1
  4201af:	dec    esi
  4201b1:	add    al,0x7d
  4201b3:	and    ebx,esp
  4201b5:	mov    ah,0x88
  4201b7:	mov    eax,ds:0x6b649ac3
  4201bc:	pop    sp
  4201be:	ins    BYTE PTR es:[edi],dx
  4201bf:	push   ecx
  4201c0:	mov    DWORD PTR [esi-0x73c1c4f1],eax
  4201c6:	out    dx,eax
  4201c7:	std    
  4201c8:	cwde   
  4201c9:	test   eax,0x6d925661
  4201ce:	pop    edx
  4201cf:	pop    eax
  4201d0:	dec    edx
  4201d1:	stos   DWORD PTR es:[edi],eax
  4201d2:	cld    
  4201d3:	repz inc edi
  4201d5:	inc    esp
  4201d6:	enter  0xa893,0x24
  4201da:	push   esp
  4201db:	shr    edi,cl
  4201dd:	push   ecx
  4201de:	in     al,0xec
  4201e0:	in     eax,0x74
  4201e2:	or     cl,bh
  4201e4:	ret    
  4201e5:	push   esi
  4201e6:	outs   dx,BYTE PTR ds:[esi]
  4201e7:	mov    al,ds:0xf23743e6
  4201ec:	je     0x42023c
  4201ee:	jo     0x420247
  4201f0:	sub    DWORD PTR ds:0x88511104,0x62
  4201f7:	inc    ebp
  4201f8:	cmp    al,0xf9
  4201fa:	add    ebp,DWORD PTR [ecx+eax*1-0x2de6ed85]
  420201:	adc    ebp,DWORD PTR [esi+0x36c5e8e2]
  420207:	inc    esp
  420208:	cmp    eax,0x1427be7c
  42020d:	cmp    eax,0xe5659f5e
  420212:	dec    esi
  420213:	mov    esp,0xdc298b15
  420218:	pop    esp
  420219:	test   eax,0x2c5489a6
  42021e:	test   al,0xce
  420220:	ins    BYTE PTR es:[edi],dx
  420221:	push   ss
  420222:	call   0x4630f3c7
  420227:	push   es
  420228:	repnz rol eax,0x96
  42022c:	mov    ebp,0x7508e3af
  420231:	pop    esi
  420232:	ins    DWORD PTR es:[edi],dx
  420233:	xchg   BYTE PTR [esi+0x7c946e7b],bh
  420239:	(bad)  
  42023a:	sub    eax,0xd8fc45c3
  42023f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420240:	push   ds
  420241:	dec    eax
  420242:	loope  0x420265
  420244:	not    BYTE PTR [ecx-0x6f4a470c]
  42024a:	pop    ds
  42024b:	adc    al,0x5f
  42024d:	or     DWORD PTR [esi-0x61],0x48944198
  420254:	add    al,0x4d
  420256:	mov    ecx,0xe6b78861
  42025b:	and    bh,cl
  42025d:	and    al,0xad
  42025f:	adc    ebx,DWORD PTR [ecx+0x46]
  420262:	mov    edx,0xec91c6b3
  420267:	adc    eax,0x74ee5287
  42026c:	addr16 xchg ecx,eax
  42026e:	std    
  42026f:	mov    eax,0x5842a836
  420274:	mov    edi,0x291a0087
  420279:	addr16 pusha 
  42027b:	adc    DWORD PTR [ecx+0x202684a4],ecx
  420281:	add    BYTE PTR [esi+edi*1-0xc],dl
  420285:	add    dl,cl
  420287:	jmp    0x7bb09f3d
  42028c:	test   al,0xb
  42028e:	mov    al,0x6a
  420290:	pop    ds
  420291:	sbb    al,0x58
  420293:	adc    DWORD PTR [ecx+ecx*8-0x26],edx
  420297:	inc    ebx
  420298:	pushf  
  420299:	cdq    
  42029a:	leave  
  42029b:	xchg   esi,eax
  42029c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42029d:	mov    dh,0x3a
  42029f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202a0:	pop    ecx
  4202a1:	adc    BYTE PTR [edi],0xf0
  4202a4:	fnstsw WORD PTR [edi-0x70]
  4202a7:	lea    ebp,[edi]
  4202a9:	arpl   WORD PTR ds:[eax+0x66954709],cx
  4202b0:	pop    ebp
  4202b1:	pop    ebp
  4202b2:	pop    ebp
  4202b3:	inc    esi
  4202b4:	fwait
  4202b5:	pop    edx
  4202b6:	push   ss
  4202b7:	jmp    0x42025f
  4202b9:	inc    ecx
  4202ba:	es loop 0x420276
  4202bd:	cld    
  4202be:	pop    ebx
  4202bf:	add    DWORD PTR [edx+0x66],0xb0dcac10
  4202c6:	mov    edx,0x7fd8e829
  4202cb:	sub    eax,0x78ca6c2
  4202d0:	cmp    ch,BYTE PTR [esi]
  4202d2:	jne    0x42028c
  4202d4:	fcmovnb st,st(6)
  4202d6:	add    edi,edx
  4202d8:	out    dx,al
  4202d9:	out    dx,eax
  4202da:	push   cs
  4202db:	out    0x11,al
  4202dd:	sbb    ah,bh
  4202df:	ret    0x828e
  4202e2:	lods   al,BYTE PTR ds:[esi]
  4202e3:	call   0xd578:0xeaca13d2
  4202ea:	xor    DWORD PTR [edx+0x50],ebp
  4202ed:	test   eax,0xe988ed8d
  4202f2:	outs   dx,DWORD PTR ds:[esi]
  4202f3:	mov    bh,0xbf
  4202f5:	mov    bh,0x37
  4202f7:	and    ecx,DWORD PTR [ecx+0x6ac7fc19]
  4202fd:	pop    ebp
  4202fe:	mov    ds:0xa773ab5b,al
  420303:	add    bh,BYTE PTR [edx]
  420305:	fidivr DWORD PTR [edx-0x1e212c7a]
  42030b:	sub    BYTE PTR [eax],0x59
  42030e:	sar    DWORD PTR [edi+0x4],cl
  420311:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420312:	xor    BYTE PTR [ecx-0x36],cl
  420315:	push   es
  420316:	mov    dl,0xe8
  420318:	add    DWORD PTR [ebx-0x14],eax
  42031b:	mov    eax,ds:0x778d5678
  420320:	(bad)  
  420321:	xlat   BYTE PTR ds:[ebx]
  420322:	xor    eax,0x13745685
  420327:	mov    esp,0xf505db50
  42032c:	or     bl,BYTE PTR [esi]
  42032e:	shl    DWORD PTR [edx-0x1ee439d4],cl
  420334:	mov    eax,0x860e0806
  420339:	fsubr  QWORD PTR [ebx]
  42033b:	jp     0x42035b
  42033d:	outs   dx,DWORD PTR ds:[esi]
  42033e:	dec    ecx
  42033f:	in     eax,dx
  420340:	out    dx,al
  420341:	jp     0x420340
  420343:	jle    0x420317
  420345:	mov    dl,0xc3
  420347:	mov    al,ds:0xcfbe9826
  42034c:	outs   dx,BYTE PTR ds:[esi]
  42034d:	and    bh,BYTE PTR [edx]
  42034f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420350:	add    cl,BYTE PTR [eax+0x79b76fb6]
  420356:	sub    al,0x24
  420358:	call   ebp
  42035a:	or     eax,0x8137d5fd
  42035f:	popf   
  420360:	adc    al,BYTE PTR [ebp-0x1]
  420363:	mov    dh,0xa0
  420365:	and    al,0x92
  420367:	xchg   esp,eax
  420368:	clc    
  420369:	inc    esi
  42036a:	arpl   bx,bp
  42036c:	fdivr  st(0),st
  42036e:	mov    ah,BYTE PTR [esp+ebp*8]
  420371:	sub    eax,0x30ba81b8
  420376:	pop    esp
  420377:	dec    edi
  420378:	or     eax,0x6ed13d2a
  42037d:	sbb    eax,0xbc246c68
  420382:	mov    edi,0x677a35fe
  420387:	dec    edx
  420388:	out    dx,eax
  420389:	sahf   
  42038a:	sahf   
  42038b:	pop    ds
  42038c:	mov    BYTE PTR [ecx+0x2f],cl
  42038f:	mov    edi,0x81af7500
  420394:	xchg   ebx,eax
  420395:	inc    ebx
  420396:	inc    edx
  420397:	cwde   
  420398:	mov    eax,ds:0x743a593b
  42039d:	mov    bl,0xb0
  42039f:	repnz in al,dx
  4203a1:	push   esi
  4203a2:	ins    BYTE PTR es:[edi],dx
  4203a3:	fsubr  DWORD PTR [esi+eax*2-0xf8d814b]
  4203aa:	(bad)  
  4203ab:	out    0xea,eax
  4203ad:	pop    edx
  4203ae:	scas   al,BYTE PTR es:[edi]
  4203af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203b0:	repnz das 
  4203b2:	jmp    0x7052:0x645b4a14
  4203b9:	lahf   
  4203ba:	sbb    ah,BYTE PTR [esi]
  4203bc:	mov    BYTE PTR [esi],ah
  4203be:	aaa    
  4203bf:	and    BYTE PTR [eax-0x55],al
  4203c2:	in     eax,0xe6
  4203c4:	dec    edi
  4203c5:	xor    al,ah
  4203c7:	les    edi,FWORD PTR [eax+0x17]
  4203ca:	mov    al,cl
  4203cc:	test   BYTE PTR [edi],dh
  4203ce:	pop    edx
  4203cf:	dec    eax
  4203d0:	mov    eax,ds:0x54052476
  4203d5:	cdq    
  4203d6:	lahf   
  4203d7:	loope  0x420423
  4203d9:	dec    edi
  4203da:	xchg   ecx,eax
  4203db:	sbb    bl,dl
  4203dd:	adc    ebp,DWORD PTR [ebp-0x19]
  4203e0:	repz fldcw WORD PTR [edx]
  4203e3:	jbe    0x420376
  4203e5:	rcl    ah,1
  4203e7:	xchg   ecx,eax
  4203e8:	sbb    BYTE PTR [eax],bl
  4203ea:	jb     0x42038e
  4203ec:	in     eax,dx
  4203ed:	mov    bl,0x93
  4203ef:	or     edi,esi
  4203f1:	cdq    
  4203f2:	adc    eax,0x1b424c93
  4203f7:	aas    
  4203f8:	sub    DWORD PTR [ecx-0x5d],ebx
  4203fb:	sbb    cl,BYTE PTR [eax-0x5af0aa2b]
  420401:	cmp    ebx,ebx
  420403:	ins    DWORD PTR es:[edi],dx
  420404:	scas   eax,DWORD PTR es:[edi]
  420405:	(bad)  
  420406:	xor    al,0x1
  420408:	xor    BYTE PTR [eax],dh
  42040a:	fcmovnb st,st(4)
  42040c:	loop   0x4203f8
  42040e:	retf   
  42040f:	fild   QWORD PTR [ebp+0x59]
  420412:	fdiv   st(6),st
  420414:	test   DWORD PTR [ecx+0x13],ecx
  420417:	retf   
  420418:	clc    
  420419:	jmp    0x90f9:0xd71ef3ee
  420420:	mov    al,ds:0xf04d2a6a
  420425:	bound  edx,QWORD PTR [edi+0xde15932]
  42042b:	push   ebp
  42042c:	leave  
  42042d:	mov    edi,0xa93367cb
  420432:	aad    0x70
  420434:	cmp    DWORD PTR [edi+0x59],eax
  420437:	push   ebp
  420438:	cmp    eax,0x6fad81ee
  42043d:	pop    ds
  42043e:	add    DWORD PTR [ebp-0x3b8cca8d],edx
  420444:	in     al,dx
  420445:	pop    ds
  420446:	icebp  
  420447:	repnz or esi,esp
  42044a:	repz std 
  42044c:	add    ch,BYTE PTR ds:0x21361efd
  420452:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420453:	mov    esi,0xaca9d96
  420458:	jmp    0xd171e2eb
  42045d:	out    dx,eax
  42045e:	ss mov dl,0x8d
  420461:	cmp    bh,BYTE PTR [esi+0x6]
  420464:	push   es
  420465:	lds    eax,FWORD PTR [esi-0x7f]
  420468:	pop    esi
  420469:	loopne 0x4204dd
  42046b:	test   cl,bh
  42046d:	inc    edx
  42046e:	stos   BYTE PTR es:[edi],al
  42046f:	or     ecx,esp
  420471:	aaa    
  420472:	xchg   ebx,eax
  420473:	scas   al,BYTE PTR es:[edi]
  420474:	xchg   edx,eax
  420475:	add    BYTE PTR [ebp-0x1e],ah
  420478:	add    edx,ebp
  42047a:	sub    eax,0xb655d61f
  42047f:	dec    ecx
  420480:	sub    al,0xae
  420482:	jle    0x420496
  420484:	ret    0x1937
  420487:	mov    dh,0x4a
  420489:	fnstsw WORD PTR [edx+eiz*8]
  42048c:	adc    edx,DWORD PTR [ecx+0x65681a1b]
  420492:	push   cs
  420493:	pop    edi
  420494:	sar    BYTE PTR [ebx],0xce
  420497:	xchg   edx,eax
  420498:	je     0x420447
  42049a:	push   ebx
  42049b:	xchg   DWORD PTR [eax-0x54cc897b],esi
  4204a1:	sub    BYTE PTR [ebx+edx*4+0x4b],dh
  4204a5:	and    edi,DWORD PTR [ebx+0x164c7bb5]
  4204ab:	aas    
  4204ac:	iret   
  4204ad:	gs jg  0x42048b
  4204b0:	pusha  
  4204b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204b2:	and    al,0x7a
  4204b4:	jmp    0xb3b7e025
  4204b9:	mov    ebx,0x1b2a9ea0
  4204be:	xor    al,0x4
  4204c0:	outs   dx,BYTE PTR ds:[esi]
  4204c1:	mov    eax,ds:0xb7b1ec1d
  4204c6:	lods   al,BYTE PTR ds:[esi]
  4204c7:	jg     0x420528
  4204c9:	xor    DWORD PTR [edx-0x66c9b899],esi
  4204cf:	inc    eax
  4204d0:	xor    DWORD PTR [ecx+edi*2-0x1b265127],esi
  4204d7:	or     esp,DWORD PTR [edx]
  4204d9:	rol    DWORD PTR [edi+eiz*8-0x6a0d78da],1
  4204e0:	or     eax,0xd277b99e
  4204e5:	(bad)  
  4204e7:	inc    esi
  4204e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204e9:	fcmovu st,st(2)
  4204eb:	sub    BYTE PTR [esi+0x40],ah
  4204ee:	adc    BYTE PTR [edi+0x1fb38322],ch
  4204f4:	mov    dh,BYTE PTR [eax+0xb]
  4204f7:	(bad)  
  4204f8:	sbb    ebp,edi
  4204fa:	jo     0x420575
  4204fc:	push   0xfffffffd
  4204fe:	pop    ss
  4204ff:	leave  
  420500:	sbb    ah,ah
  420502:	fs mov edi,0x9f193a91
  420508:	outs   dx,BYTE PTR ds:[esi]
  420509:	xchg   DWORD PTR [ebp-0x4a],ecx
  42050c:	push   0xea3dc8ef
  420511:	aaa    
  420512:	ds dec ebx
  420514:	mov    DWORD PTR [esp+ecx*1-0x18],edi
  420518:	push   0x380aac4f
  42051d:	sub    DWORD PTR [ecx],0x4b
  420520:	dec    esi
  420521:	mov    eax,0x2da5dc86
  420526:	jl     0x420502
  420528:	push   ebp
  420529:	jl     0x420568
  42052b:	popf   
  42052c:	xchg   edx,eax
  42052d:	je     0x42055b
  42052f:	test   eax,0x46c797a
  420534:	repz or eax,0x70684de8
  42053a:	sub    BYTE PTR [ebp+0x23],dl
  42053d:	mov    ebx,0xfbbbe35a
  420542:	mov    ah,0xdf
  420544:	add    ecx,esp
  420546:	int3   
  420547:	es repz xchg edi,ebp
  42054b:	sbb    DWORD PTR [edx-0x30],esp
  42054e:	and    eax,0xd9fe1614
  420553:	add    edx,DWORD PTR [ebx]
  420555:	ins    BYTE PTR es:[edi],dx
  420556:	sbb    eax,0x1127371d
  42055b:	in     al,dx
  42055c:	sub    esi,edx
  42055e:	(bad)  
  42055f:	in     eax,dx
  420560:	ins    BYTE PTR es:[edi],dx
  420561:	(bad)  
  420563:	add    al,0x3f
  420565:	leave  
  420566:	and    eax,0xaa3e5560
  42056b:	repnz mov eax,ds:0xfd81b438
  420571:	mov    ebx,0x301758bb
  420576:	cwde   
  420577:	inc    eax
  420578:	jp     0x420548
  42057a:	sbb    al,bl
  42057c:	jge    0x420565
  42057e:	push   ebx
  42057f:	and    al,dh
  420581:	or     dh,bl
  420583:	dec    ebp
  420584:	pop    ss
  420585:	(bad)  
  420586:	push   ebp
  420587:	fucomp st(3)
  420589:	cmp    edx,DWORD PTR [edx+0x7]
  42058c:	push   esp
  42058d:	outs   dx,DWORD PTR ds:[esi]
  42058e:	pop    ds
  42058f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420590:	cwde   
  420591:	cmp    al,BYTE PTR [ebx]
  420593:	jge    0x420547
  420595:	push   es
  420596:	adc    eax,0xe051a16
  42059b:	xchg   edi,eax
  42059c:	jecxz  0x42059f
  42059e:	pop    esi
  42059f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205a0:	mov    ebx,0xd83ddd44
  4205a5:	push   0x76
  4205a7:	hlt    
  4205a8:	mov    WORD PTR [edx-0x514c1b39],ss
  4205ae:	enter  0x8d60,0x2e
  4205b2:	push   ss
  4205b3:	test   al,0xb9
  4205b5:	xchg   esi,eax
  4205b6:	je     0x42059b
  4205b8:	leave  
  4205b9:	sar    bh,cl
  4205bb:	out    dx,eax
  4205bc:	push   edi
  4205bd:	sbb    ch,0x6
  4205c0:	push   esi
  4205c1:	daa    
  4205c2:	xchg   ebp,eax
  4205c3:	(bad)  
  4205c4:	push   eax
  4205c5:	neg    DWORD PTR [eax-0x6d4d905f]
  4205cb:	fwait
  4205cc:	dec    ebp
  4205cd:	(bad)  
  4205ce:	mov    ebp,0xa9f960cc
  4205d3:	cwde   
  4205d4:	sub    ch,0xb5
  4205d7:	mov    WORD PTR [ecx+0x2e6f7d2e],fs
  4205dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205de:	pop    ebx
  4205df:	scas   eax,DWORD PTR es:[edi]
  4205e0:	dec    ecx
  4205e1:	or     edi,DWORD PTR [ebx+edi*1+0x54fd1e09]
  4205e8:	jmp    0xee6f:0xd959db6b
  4205ef:	and    DWORD PTR [esi],edx
  4205f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205f2:	sbb    BYTE PTR [edi+0xfbc5282],0xa5
  4205f9:	and    al,0xf4
  4205fb:	push   eax
  4205fc:	dec    esp
  4205fd:	imul   al
  4205ff:	cli    
  420600:	pop    ebx
  420601:	cmp    eax,0x2c59e568
  420606:	(bad)  [edx+0xe]
  420609:	pop    ebx
  42060a:	pop    es
  42060b:	and    dl,cl
  42060d:	fisub  DWORD PTR [edx+0x295fd505]
  420613:	push   ebx
  420614:	pop    ecx
  420615:	shl    DWORD PTR [edi+ebx*2-0x7e],0xb4
  42061a:	addr16 push 0xce0c02d7
  420620:	inc    ebp
  420621:	sub    al,0xb0
  420623:	push   eax
  420624:	xchg   ecx,eax
  420625:	pushf  
  420626:	aas    
  420627:	jl     0x420635
  420629:	aas    
  42062a:	sub    BYTE PTR [edx],al
  42062c:	jnp    0x42060c
  42062e:	ins    DWORD PTR es:[edi],dx
  42062f:	stc    
  420630:	fcmove st,st(4)
  420632:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420633:	adc    cl,BYTE PTR [si+0x91f]
  420638:	mov    ?,WORD PTR [eax+0x5b]
  42063b:	rcr    DWORD PTR gs:[eax],0xce
  42063f:	inc    ebp
  420640:	adc    DWORD PTR [edi+ebp*2],eax
  420643:	scas   al,BYTE PTR es:[edi]
  420644:	jle    0x4205ec
  420646:	in     eax,0xc5
  420648:	icebp  
  420649:	xor    eax,eax
  42064b:	push   0x1a
  42064d:	popf   
  42064e:	retf   
  42064f:	std    
  420650:	xlat   BYTE PTR ds:[ebx]
  420651:	fwait
  420652:	jno    0x4206c3
  420654:	por    mm1,QWORD PTR [ecx-0x7e]
  420658:	xchg   ecx,eax
  420659:	mov    esp,0x6b86187a
  42065e:	push   ss
  42065f:	push   cs
  420660:	rcr    dl,cl
  420662:	loop   0x420648
  420664:	ins    DWORD PTR es:[edi],dx
  420665:	pop    esi
  420666:	sbb    BYTE PTR [edx-0x637bc918],dl
  42066c:	xchg   ebp,eax
  42066d:	mov    ecx,DWORD PTR [ecx-0x8835048]
  420673:	add    al,0x9
  420675:	stos   DWORD PTR es:[edi],eax
  420676:	pop    ds
  420677:	call   0x7056:0xdfaa515a
  42067e:	nop
  42067f:	pop    edi
  420680:	retf   
  420681:	jne    0x42065c
  420683:	stos   BYTE PTR es:[edi],al
  420684:	mov    ds:0x79ec1ef3,al
  420689:	pusha  
  42068a:	sbb    eax,0x5441f954
  42068f:	ret    
  420690:	push   edx
  420691:	ds into 
  420693:	outs   dx,DWORD PTR ds:[esi]
  420694:	stos   DWORD PTR es:[edi],eax
  420695:	pop    esi
  420696:	stos   DWORD PTR es:[edi],eax
  420697:	aas    
  420698:	xor    al,0x4c
  42069a:	add    BYTE PTR [ebx],ah
  42069c:	loop   0x4206f3
  42069e:	adc    al,0xea
  4206a0:	arpl   WORD PTR [edi-0x25521ea],dx
  4206a6:	imul   eax,DWORD PTR [edx],0xd59a5934
  4206ac:	push   eax
  4206ad:	add    BYTE PTR [edi],0xad
  4206b0:	mov    dh,0xd7
  4206b2:	in     eax,dx
  4206b3:	xchg   ebx,eax
  4206b4:	xor    edi,DWORD PTR [edx]
  4206b6:	dec    ebp
  4206b7:	jae    0x420683
  4206b9:	int3   
  4206ba:	out    dx,eax
  4206bb:	sbb    ah,BYTE PTR [edi]
  4206bd:	pusha  
  4206be:	dec    eax
  4206bf:	clc    
  4206c0:	xchg   edx,eax
  4206c1:	xchg   ecx,eax
  4206c2:	mov    cl,0x55
  4206c4:	jne    0x42073c
  4206c6:	xor    BYTE PTR fs:[edx-0x1b],ch
  4206ca:	lods   eax,DWORD PTR gs:[esi]
  4206cc:	add    al,0xb3
  4206ce:	outs   dx,DWORD PTR ds:[esi]
  4206cf:	(bad)  
  4206d0:	addr16 retf 
  4206d2:	repnz shl DWORD PTR cs:[ebx],cl
  4206d6:	fistp  QWORD PTR [ebx-0x10474789]
  4206dc:	fs dec eax
  4206de:	xor    al,0xe7
  4206e0:	fwait
  4206e1:	and    eax,0x3b39b457
  4206e6:	pop    edx
  4206e7:	imul   edx,DWORD PTR [edi],0xbd056697
  4206ed:	cmp    esp,DWORD PTR [edx-0xb4ecce2]
  4206f3:	pusha  
  4206f4:	xchg   esp,eax
  4206f5:	xchg   ecx,eax
  4206f6:	cmp    DWORD PTR [edx-0xa60ce3c],0xffffffb8
  4206fd:	jnp    0x42071a
  4206ff:	inc    ebx
  420700:	push   edi
  420701:	(bad)  
  420702:	int3   
  420703:	pop    esi
  420704:	(bad)  
  420705:	lds    esi,FWORD PTR [esi+ebx*8]
  420708:	push   edx
  420709:	aam    0x3d
  42070b:	(bad)  
  42070c:	cmp    bh,BYTE PTR [esi]
  42070e:	fdivr  DWORD PTR [ebx]
  420710:	or     dl,BYTE PTR [ebx+edx*4]
  420713:	mov    esi,0x67ba8c3d
  420718:	stos   DWORD PTR es:[edi],eax
  420719:	pusha  
  42071a:	clc    
  42071b:	(bad)  
  42071d:	sbb    BYTE PTR [edi],0xa
  420720:	mov    DWORD PTR [ebp+0x60],ecx
  420723:	jno    0x420761
  420725:	adc    eax,0xdbd03c82
  42072a:	inc    ebp
  42072b:	xchg   DWORD PTR [edi],esi
  42072d:	mov    esp,edi
  42072f:	ss (bad) 
  420732:	test   al,0x1f
  420734:	jo     0x4207a3
  420736:	add    al,0xc3
  420738:	or     DWORD PTR [ebx-0x1],esi
  42073b:	test   eax,0x521e26b2
  420740:	imul   eax,ebx,0x34
  420743:	call   0xb2b83951
  420748:	adc    eax,0xd6e4b8f3
  42074d:	test   esi,ebp
  42074f:	mov    bl,BYTE PTR [ebx+0x11]
  420752:	bound  ebp,QWORD PTR [eax+0x7a]
  420755:	imul   eax,esi,0x47
  420758:	sbb    BYTE PTR [esi+0x74],0x59
  42075c:	out    0x78,eax
  42075e:	mov    ds:0xf4981784,al
  420763:	push   0x2d
  420765:	push   ebp
  420766:	outs   dx,BYTE PTR ds:[esi]
  420767:	loopne 0x4206f1
  420769:	rcl    BYTE PTR [esi-0x3c],1
  42076c:	xchg   edi,eax
  42076d:	in     eax,dx
  42076e:	adc    BYTE PTR [eax+ebp*4+0x7a],bl
  420772:	mov    DWORD PTR [ebp+0x42f46208],edx
  420778:	call   0xdcd9:0x67919c00
  42077f:	mov    esp,0x102cb3b3
  420784:	retf   0xb8c1
  420787:	xchg   ecx,eax
  420788:	sti    
  420789:	cmp    esi,DWORD PTR [eax]
  42078b:	push   ebx
  42078c:	rol    BYTE PTR [edx+0x8],1
  42078f:	jne    0x420745
  420791:	stos   DWORD PTR es:[edi],eax
  420792:	jne    0x4207ce
  420794:	xchg   ebx,eax
  420795:	cmp    ebp,edi
  420797:	add    ch,BYTE PTR [ecx+0x71]
  42079a:	mov    ah,0xe5
  42079c:	mov    al,0xea
  42079e:	and    ah,cl
  4207a0:	inc    edi
  4207a1:	enter  0xad7b,0x2d
  4207a5:	mov    ch,0x1e
  4207a7:	ret    
  4207a8:	test   ebp,esp
  4207aa:	mov    esi,0xa5950904
  4207af:	into   
  4207b0:	xchg   edi,eax
  4207b1:	xchg   ebp,eax
  4207b2:	jle    0x4207bf
  4207b4:	cmp    BYTE PTR [ebx+0x225b4779],0x51
  4207bb:	push   ds
  4207bc:	je     0x420782
  4207be:	test   al,0xca
  4207c0:	inc    edx
  4207c1:	jle    0x42077e
  4207c3:	rcl    DWORD PTR [ebp+0x39a392c4],0x82
  4207ca:	popa   
  4207cb:	mov    ah,0xf9
  4207cd:	xor    esp,DWORD PTR [edi]
  4207cf:	shr    DWORD PTR [ebx-0x7d6c0c69],1
  4207d5:	ret    0xc1d0
  4207d8:	xor    ebp,edi
  4207da:	jne    0x420833
  4207dc:	inc    esi
  4207dd:	mov    al,0xa0
  4207df:	jmp    0xf456d342
  4207e4:	pop    es
  4207e5:	mov    edx,0xcff5338b
  4207ea:	sbb    BYTE PTR [ebx],cl
  4207ec:	or     eax,0xa16430a7
  4207f1:	int3   
  4207f2:	shl    BYTE PTR ds:0xa52209af,0xb5
  4207f9:	or     edx,DWORD PTR [edi]
  4207fb:	lods   al,BYTE PTR ds:[esi]
  4207fc:	sar    edi,cl
  4207fe:	int    0x96
  420800:	adc    edi,esi
  420802:	push   es
  420803:	jno    0x42078b
  420805:	mov    dh,0x78
  420807:	and    cl,BYTE PTR [edi]
  420809:	mov    edx,0x37bd0649
  42080e:	addr16 gs retf 0xa411
  420813:	mov    gs,WORD PTR [edi-0x6a]
  420816:	aad    0x80
  420818:	ret    0x586d
  42081b:	pop    edi
  42081c:	lods   eax,DWORD PTR ds:[esi]
  42081d:	cld    
  42081e:	mov    ebx,esp
  420820:	ins    BYTE PTR es:[edi],dx
  420821:	jns    0x420847
  420823:	inc    edi
  420824:	dec    ecx
  420825:	mov    ds:0xcee9ba4,al
  42082a:	adc    esp,DWORD PTR [ebx+0x2d]
  42082d:	dec    esi
  42082e:	gs dec esp
  420830:	std    
  420831:	cmp    eax,0x1bda40e7
  420836:	inc    ebx
  420837:	mov    WORD PTR [ecx+0x62962ece],es
  42083d:	mov    al,ds:0x732c2397
  420842:	or     edi,DWORD PTR [eax-0x5ced7682]
  420848:	xchg   esi,eax
  420849:	fcomp  QWORD PTR [ecx]
  42084b:	xchg   ebp,eax
  42084c:	icebp  
  42084d:	aad    0xa8
  42084f:	rcl    DWORD PTR [ebp-0x57],0x6b
  420853:	pushf  
  420854:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420855:	cmc    
  420856:	scas   al,BYTE PTR es:[edi]
  420857:	fwait
  420858:	and    eax,0xb90a23b6
  42085d:	cmp    DWORD PTR [eax],edi
  42085f:	in     al,dx
  420860:	inc    ebx
  420861:	jge    0x420896
  420863:	aam    0xf
  420865:	fsub   QWORD PTR fs:[eax+edx*4+0x3a]
  42086a:	add    BYTE PTR [edx+edx*2],bh
  42086d:	lds    ecx,FWORD PTR [edx+0x3d89d791]
  420873:	sub    DWORD PTR ds:0xb5f4b9ae,edi
  420879:	and    eax,0x930a045c
  42087e:	lods   al,BYTE PTR ds:[si]
  420880:	push   ss
  420881:	pop    eax
  420882:	leave  
  420883:	stc    
  420884:	adc    eax,DWORD PTR [ebx]
  420886:	xchg   esi,eax
  420887:	push   ecx
  420888:	sti    
  420889:	sub    eax,0x581b59c5
  42088e:	inc    edi
  42088f:	xor    DWORD PTR [eax-0x20],ebx
  420892:	mov    bh,BYTE PTR [eax+0x42]
  420895:	pop    esp
  420896:	shl    BYTE PTR [ecx],0xc
  420899:	push   es
  42089a:	xchg   bl,bh
  42089c:	loop   0x420901
  42089e:	or     eax,0x2f1a85db
  4208a3:	js     0x420914
  4208a5:	sbb    ebx,DWORD PTR [eax+0x56570909]
  4208ab:	(bad)  
  4208ac:	jmp    0x3d4c9503
  4208b1:	mov    al,ds:0xa9d624d
  4208b6:	jb     0x420861
  4208b8:	stos   BYTE PTR es:[edi],al
  4208b9:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208bb:	dec    edi
  4208bc:	lock imul ebx,DWORD PTR [esi+0x38087b7],0x2b
  4208c4:	ret    0xac88
  4208c7:	loope  0x420874
  4208c9:	enter  0x1dd,0x9f
  4208cd:	add    eax,DWORD PTR [edx+ecx*2]
  4208d0:	add    eax,0xc68904d2
  4208d5:	sbb    BYTE PTR [ecx-0xc],dh
  4208d8:	jae    0x4208fd
  4208da:	cmp    eax,0x9d22f03e
  4208df:	mov    al,ds:0x569513b7
  4208e4:	mov    WORD PTR [ebx+0x27f6fbe2],?
  4208ea:	xchg   BYTE PTR [eax+0x1a2686b3],dl
  4208f0:	push   ds
  4208f1:	push   ebx
  4208f2:	add    eax,0x3fa3eed2
  4208f7:	add    al,BYTE PTR [ecx+0x36]
  4208fa:	lahf   
  4208fb:	add    al,0x10
  4208fd:	(bad)  
  4208fe:	ficom  WORD PTR [edi+0x57ea27bc]
  420904:	(bad)  
  420905:	loop   0x4208be
  420907:	outs   dx,BYTE PTR ds:[esi]
  420908:	jl     0x4208c5
  42090a:	sbb    bl,dh
  42090c:	rep stos DWORD PTR es:[edi],eax
  42090e:	mov    dh,0x28
  420910:	jl     0x420966
  420912:	out    0xc3,al
  420914:	jl     0x4208ac
  420916:	mov    edi,0xd9c68f5b
  42091b:	pop    ebx
  42091c:	mov    dh,dl
  42091e:	inc    esp
  42091f:	lods   eax,DWORD PTR ds:[esi]
  420920:	cmp    al,0x23
  420922:	test   BYTE PTR [esi],bl
  420924:	or     al,0xbc
  420926:	sbb    dh,BYTE PTR [edi+0xc]
  420929:	mov    al,ds:0x18ca2dae
  42092e:	mov    bl,0xd0
  420930:	dec    esi
  420931:	dec    ebx
  420932:	sub    ebp,ebp
  420934:	test   al,0x9b
  420936:	out    0x6c,eax
  420938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420939:	ds jno 0x42091e
  42093c:	loope  0x4208de
  42093e:	dec    ebp
  42093f:	rcl    DWORD PTR [ecx+0x71eb38f0],1
  420945:	pop    esp
  420946:	arpl   dx,dx
  420948:	cs and esp,ebp
  42094b:	and    DWORD PTR [ebp-0x461d3e92],eax
  420951:	std    
  420952:	push   es
  420953:	xchg   esi,eax
  420954:	imul   ecx,DWORD PTR [esi],0xc5ccda51
  42095a:	fldenv [ecx+0x25]
  42095d:	mov    bl,0x45
  42095f:	mov    ebx,0x863e8b8f
  420964:	(bad)  
  420965:	aam    0xf3
  420967:	jg     0x4209c0
  420969:	push   ecx
  42096a:	aam    0x20
  42096c:	call   0xb3b6e143
  420971:	dec    esi
  420972:	fcom   DWORD PTR [ebx-0x5e409051]
  420978:	xor    al,0xd3
  42097a:	inc    eax
  42097b:	xor    eax,0x594ba283
  420980:	xor    ah,dh
  420982:	icebp  
  420983:	mov    BYTE PTR [ebx+ecx*8-0x3daa4fe2],bl
  42098a:	std    
  42098b:	int    0x41
  42098d:	jno    0x4209da
  42098f:	pushf  
  420990:	xchg   esp,eax
  420991:	sub    ch,BYTE PTR [ebp+0x57a3288e]
  420997:	jns    0x4209c8
  420999:	in     al,0x60
  42099b:	cmp    eax,DWORD PTR [ebx+eiz*2+0x17702689]
  4209a2:	jb     0x4209a0
  4209a4:	jae    0x4209a6
  4209a6:	push   ss
  4209a7:	jb     0x42098e
  4209a9:	xlat   BYTE PTR ds:[ebx]
  4209aa:	push   ds
  4209ab:	push   ebp
  4209ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209ad:	adc    ah,BYTE PTR [ebp*2-0x1046e563]
  4209b4:	adc    al,0x8e
  4209b6:	jno    0x63b2c221
  4209bc:	out    0xc2,al
  4209be:	mov    eax,0x491a13ab
  4209c3:	popa   
  4209c4:	int3   
  4209c5:	or     BYTE PTR [edi+ebp*4-0x129cba73],0x2a
  4209cd:	std    
  4209ce:	adc    BYTE PTR [ecx],dl
  4209d0:	scas   eax,DWORD PTR es:[edi]
  4209d1:	stos   DWORD PTR es:[edi],eax
  4209d2:	(bad)  
  4209d3:	js     0x420a15
  4209d5:	mov    eax,ds:0x2c24d298
  4209da:	inc    edi
  4209db:	jbe    0x4209b1
  4209dd:	or     eax,0xc5c5fbe2
  4209e2:	pop    es
  4209e3:	faddp  st(6),st
  4209e5:	sub    BYTE PTR [ecx+ecx*2],bl
  4209e8:	ins    DWORD PTR es:[edi],dx
  4209e9:	jg     0x4209e5
  4209eb:	js     0x420a0d
  4209ed:	push   esi
  4209ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209ef:	les    eax,FWORD PTR [ebp+0x2f]
  4209f2:	or     edi,esp
  4209f4:	cmp    edi,DWORD PTR [esi]
  4209f6:	xchg   edx,eax
  4209f7:	loop   0x42099f
  4209f9:	jge    0x420a1f
  4209fb:	sub    al,0xef
  4209fd:	mov    dh,0x8b
  4209ff:	jnp    0x420a39
  420a01:	ffreep st(6)
  420a03:	add    esp,DWORD PTR [ebp-0x2a5202d]
  420a09:	inc    edi
  420a0a:	sub    DWORD PTR [ebp+0x3227aa3e],eax
  420a10:	xor    eax,0xcb898b56
  420a15:	into   
  420a16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a17:	je     0x420a12
  420a19:	jnp    0x420a03
  420a1b:	add    esp,esp
  420a1d:	mov    BYTE PTR [edi],al
  420a1f:	retf   
  420a20:	xchg   esp,eax
  420a21:	push   esp
  420a22:	push   ebp
  420a23:	push   0xffffffc3
  420a25:	mov    edi,0xe4f945b2
  420a2a:	push   ds
  420a2b:	js     0x420a47
  420a2d:	in     eax,0x34
  420a2f:	pop    edi
  420a30:	jge    0x420a13
  420a32:	mov    edx,0x1dc81c21
  420a37:	fstp   DWORD PTR [ebx]
  420a39:	es push cs
  420a3b:	fwait
  420a3c:	dec    ecx
  420a3d:	push   edx
  420a3e:	addr16 dec eax
  420a40:	jmp    0x19eeef1b
  420a45:	or     eax,0x305941a5
  420a4a:	je     0x420aa6
  420a4c:	push   ecx
  420a4d:	mov    DWORD PTR [ebp+0x4d],esp
  420a50:	push   edx
  420a51:	inc    eax
  420a52:	pop    ss
  420a53:	sub    al,0x97
  420a55:	mov    dh,0x65
  420a57:	stos   BYTE PTR es:[edi],al
  420a58:	dec    edx
  420a59:	mov    bh,0xb9
  420a5b:	and    DWORD PTR [ebx+0xa],0xc2feaece
  420a62:	push   esi
  420a63:	mov    dh,BYTE PTR [esi]
  420a65:	add    al,0xd0
  420a67:	mov    al,ds:0x331a7eb8
  420a6c:	push   ds
  420a6d:	outs   dx,BYTE PTR ds:[esi]
  420a6e:	xor    BYTE PTR [ebp-0x78],ah
  420a71:	xlat   BYTE PTR ds:[ebx]
  420a72:	std    
  420a73:	xor    al,0xdf
  420a75:	test   al,0xea
  420a77:	imul   DWORD PTR [edi+0x36]
  420a7a:	push   0x4b
  420a7c:	add    BYTE PTR [esi+0x176d584f],bh
  420a82:	fadd   DWORD PTR [eax]
  420a84:	cmp    edx,eax
  420a86:	cs jne 0x420af2
  420a89:	ret    0xaf1
  420a8c:	mov    ds:0x4ff3cfd6,al
  420a91:	mov    ebp,0x4f4da364
  420a96:	hlt    
  420a97:	in     eax,0x29
  420a99:	fiadd  WORD PTR [edx]
  420a9b:	and    al,0xba
  420a9d:	push   edi
  420a9e:	rcl    ebp,cl
  420aa0:	sub    eax,0xef90a4a2
  420aa5:	out    dx,al
  420aa6:	jmp    0x1b704c7
  420aab:	daa    
  420aac:	xor    edi,DWORD PTR [esi]
  420aae:	push   ss
  420aaf:	stc    
  420ab0:	push   esp
  420ab1:	cwde   
  420ab2:	inc    edx
  420ab3:	mov    eax,0xb91a8559
  420ab8:	shl    bl,1
  420aba:	(bad)  [edx+0x51]
  420abd:	inc    ebx
  420abe:	cmp    al,0x80
  420ac0:	cld    
  420ac1:	jne    0x420a59
  420ac3:	sub    eax,esi
  420ac5:	cmp    bh,BYTE PTR [edi-0x1c]
  420ac8:	fisttp QWORD PTR [ecx-0x63088c00]
  420ace:	or     al,0xe9
  420ad0:	pop    ecx
  420ad1:	fcom   st(7)
  420ad3:	mov    ebx,0x37287464
  420ad8:	add    eax,0xf9847fed
  420add:	cld    
  420ade:	inc    ecx
  420adf:	adc    al,0x1c
  420ae1:	ficomp WORD PTR [esi-0x76]
  420ae4:	(bad)
  420ae8:	dec    ebp
  420ae9:	mov    ch,0xd9
  420aeb:	jne    0x420b0d
  420aed:	mov    ds:0x284978b5,eax
  420af2:	imul   eax,DWORD PTR [ebp-0x19685a91],0xffffffc3
  420af9:	push   0xffffffea
  420afb:	inc    ebp
  420afc:	jmp    0x13603c8
  420b01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b02:	call   0x261916ea
  420b07:	sbb    ah,dh
  420b09:	mov    bl,0x7e
  420b0b:	jnp    0x420ab5
  420b0d:	mov    cl,0xa0
  420b0f:	enter  0x9b3b,0x38
  420b13:	jnp    0x420ab4
  420b15:	addr16 cmp al,0xb7
  420b18:	jge    0x420b48
  420b1a:	xchg   ebp,eax
  420b1b:	xchg   edi,eax
  420b1c:	or     eax,0x329f4e64
  420b21:	fwait
  420b22:	icebp  
  420b23:	retf   
  420b24:	addr16 (bad) 
  420b26:	cmp    DWORD PTR [eax+eax*4-0x49],edi
  420b2a:	add    DWORD PTR [esi-0x1],ecx
  420b2d:	ret    0x3497
  420b30:	xchg   ebp,eax
  420b31:	aaa    
  420b32:	mov    dh,0xf7
  420b34:	xchg   ecx,eax
  420b35:	fwait
  420b36:	leave  
  420b37:	mov    ecx,0x18d28881
  420b3c:	add    ebx,DWORD PTR [ecx+ecx*1+0x1599cc95]
  420b43:	jl     0x420b4a
  420b45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b46:	add    dh,dh
  420b48:	sahf   
  420b49:	xchg   ecx,eax
  420b4a:	aaa    
  420b4b:	pop    edx
  420b4c:	cdq    
  420b4d:	xchg   ebx,eax
  420b4e:	ja     0x420bcb
  420b50:	dec    esp
  420b51:	inc    ebx
  420b52:	adc    DWORD PTR [edx+0x6689705f],esp
  420b58:	(bad)  
  420b59:	xlat   BYTE PTR ds:[ebx]
  420b5a:	icebp  
  420b5b:	in     eax,dx
  420b5c:	lock je 0x420bc5
  420b5f:	js     0x420b25
  420b61:	out    0x13,eax
  420b63:	sbb    al,0x4e
  420b65:	push   ebp
  420b66:	cmp    eax,0xba752953
  420b6b:	stos   DWORD PTR es:[edi],eax
  420b6c:	dec    esp
  420b6d:	aaa    
  420b6e:	mov    ah,0x25
  420b70:	jnp    0x420b3a
  420b72:	into   
  420b73:	mov    eax,ds:0x8cecb75d
  420b78:	loop   0x420ba9
  420b7a:	cmc    
  420b7b:	(bad)  
  420b7c:	jle    0x420b72
  420b7e:	cmp    DWORD PTR [edi+0x300336f7],ebp
  420b84:	je     0x420bd1
  420b86:	dec    edi
  420b87:	mov    dl,0xce
  420b89:	lea    esi,[edx+ebp*8-0x5880567a]
  420b90:	or     esi,ebp
  420b92:	mov    bh,0xc5
  420b94:	mov    eax,ds:0x98be3908
  420b99:	mov    bl,0x0
  420b9b:	(bad)  
  420b9c:	jb     0x420b38
  420b9e:	test   al,0x95
  420ba0:	mov    DWORD PTR [edx+ecx*4+0x37087e8],edi
  420ba7:	mov    edx,edi
  420ba9:	pop    edx
  420baa:	pop    ebp
  420bab:	sub    DWORD PTR [esi-0x4f],eax
  420bae:	mov    ebx,0xfc9d1045
  420bb3:	loope  0x420c1e
  420bb5:	jno    0x420c2e
  420bb7:	and    al,cl
  420bb9:	outs   dx,DWORD PTR ds:[esi]
  420bba:	jnp    0x420bd8
  420bbc:	icebp  
  420bbd:	cmp    DWORD PTR [eax+edx*2],0xffffff89
  420bc1:	or     ah,dh
  420bc3:	(bad)  
  420bc4:	idiv   BYTE PTR [ecx-0x11cbab54]
  420bca:	popa   
  420bcb:	leave  
  420bcc:	nop
  420bcd:	inc    edi
  420bce:	inc    ecx
  420bcf:	add    DWORD PTR [esi+0x47],ebx
  420bd2:	pop    esp
  420bd3:	in     al,0x7e
  420bd5:	std    
  420bd6:	dec    esi
  420bd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bd8:	pop    edi
  420bd9:	jbe    0x420b93
  420bdb:	lahf   
  420bdc:	cmp    DWORD PTR [esi],ebx
  420bde:	mul    BYTE PTR [ecx-0x165b6a1b]
  420be4:	nop
  420be5:	lea    esp,[edx+0x735c1634]
  420beb:	in     eax,dx
  420bec:	fcmovne st,st(7)
  420bee:	loope  0x420c0f
  420bf0:	adc    al,0xed
  420bf2:	xchg   ebp,eax
  420bf3:	lock push ebx
  420bf5:	mov    edx,0x9e36aabc
  420bfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bfb:	gs jo  0x420bb0
  420bfe:	int3   
  420bff:	lods   eax,DWORD PTR ds:[esi]
  420c00:	pusha  
  420c01:	ret    0x106f
  420c04:	aaa    
  420c05:	test   DWORD PTR [eax+0x4c170ec2],ebx
  420c0b:	in     eax,dx
  420c0c:	dec    ecx
  420c0d:	arpl   WORD PTR [esi-0x25b80602],bp
  420c13:	pop    esi
  420c14:	jecxz  0x420c95
  420c16:	pop    es
  420c17:	pop    es
  420c18:	rol    BYTE PTR [eax-0x63c630ff],1
  420c1e:	ret    
  420c1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c20:	xchg   esp,eax
  420c21:	mov    edi,0x6988ca58
  420c26:	ret    0x4e03
  420c29:	sahf   
  420c2a:	lea    ecx,[edx-0x6b]
  420c2d:	pop    ecx
  420c2e:	call   eax
  420c30:	jno    0x420bf4
  420c32:	sub    DWORD PTR [ecx+0x4b166241],0x60
  420c39:	jnp    0x420c40
  420c3b:	cmp    BYTE PTR [esi-0x5ac610d9],bh
  420c41:	or     esp,DWORD PTR [esi+0x10]
  420c44:	loope  0x420c3d
  420c46:	cmp    bl,BYTE PTR [ebp+0x72]
  420c49:	in     eax,dx
  420c4a:	fdivr  QWORD PTR [edi+0x3df77eb9]
  420c50:	pop    eax
  420c51:	xchg   BYTE PTR [ebx-0x4d],cl
  420c54:	jge    0x420c7a
  420c56:	call   0xe19aa62a
  420c5b:	jl     0x420bfd
  420c5d:	or     dh,BYTE PTR [edx+0xbb076ff]
  420c63:	aaa    
  420c64:	sub    dh,bl
  420c66:	aad    0xe2
  420c68:	adc    ch,BYTE PTR [ebx]
  420c6a:	stc    
  420c6b:	mov    edi,0x35d6fb5a
  420c70:	jge    0x420c35
  420c72:	sar    DWORD PTR [esi+0x30],1
  420c75:	mov    ds:0x5cde309f,eax
  420c7a:	js     0x420c5d
  420c7c:	popa   
  420c7d:	push   ecx
  420c7e:	lods   eax,DWORD PTR ds:[esi]
  420c7f:	jle    0x420c69
  420c81:	test   BYTE PTR [ecx+0x2a],dl
  420c84:	push   0xffffff87
  420c86:	or     BYTE PTR [bx+di-0x680e],cl
  420c8b:	pop    es
  420c8c:	mov    WORD PTR [esi+0xc],ds
  420c8f:	mov    dl,0x37
  420c91:	inc    esp
  420c92:	imul   edi,DWORD PTR [ecx+0x38bc7539],0x5
  420c99:	pop    ebx
  420c9a:	scas   al,BYTE PTR es:[edi]
  420c9b:	adc    esi,DWORD PTR [ebx-0x3c353a45]
  420ca1:	cwde   
  420ca2:	inc    esi
  420ca3:	dec    ecx
  420ca4:	jno    0x420ca3
  420ca6:	xchg   edi,eax
  420ca7:	shl    BYTE PTR [edi],cl
  420ca9:	inc    ebp
  420caa:	ss sub al,0x9d
  420cad:	sub    ebp,DWORD PTR [ecx-0x37c53dcc]
  420cb3:	mov    ds:0x7a401938,al
  420cb8:	ficom  WORD PTR [ebp+0x32ebc655]
  420cbe:	ins    DWORD PTR es:[edi],dx
  420cbf:	test   eax,0x69127a4a
  420cc4:	test   al,0x48
  420cc6:	dec    eax
  420cc7:	js     0x420cd6
  420cc9:	arpl   WORD PTR ds:0x7d9b9fd8,ax
  420ccf:	out    0x43,eax
  420cd1:	gs xchg ebx,eax
  420cd3:	daa    
  420cd4:	repnz stc 
  420cd6:	(bad)  
  420cd7:	(bad)  
  420cd8:	fwait
  420cd9:	outs   dx,BYTE PTR ds:[esi]
  420cda:	sbb    esp,ebx
  420cdc:	sahf   
  420cdd:	loopne 0x420c7b
  420cdf:	adc    BYTE PTR [esi+ecx*2+0x389daf85],bl
  420ce6:	test   al,0x13
  420ce8:	aam    0x42
  420cea:	test   eax,0xd6b5d18c
  420cef:	push   ebx
  420cf0:	bnd jo 0x420d23
  420cf3:	jns    0x420d1c
  420cf5:	add    edx,DWORD PTR [edx+0x7f]
  420cf8:	sub    al,0xd4
  420cfa:	mov    eax,0xe63ba20
  420cff:	(bad)  
  420d00:	jae    0x420d00
  420d02:	loope  0x420ce9
  420d04:	call   FWORD PTR [ebp+0x456196d9]
  420d0a:	js     0x420cc7
  420d0c:	push   ds
  420d0d:	mov    bl,0x99
  420d0f:	pusha  
  420d10:	push   edi
  420d11:	jns    0x420cf4
  420d13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d14:	mov    ah,0x84
  420d16:	push   es
  420d17:	test   BYTE PTR [ecx],bh
  420d19:	imul   esi,ebx,0xffffffb0
  420d1c:	std    
  420d1d:	jmp    0x9486:0x5100bea
  420d24:	xchg   esp,eax
  420d25:	js     0x420d2b
  420d27:	pop    edx
  420d28:	xchg   BYTE PTR [edi-0x149a582f],ah
  420d2e:	mov    BYTE PTR [ebx+0x49e9b855],cl
  420d34:	and    eax,DWORD PTR [eax]
  420d36:	add    BYTE PTR ds:0xe7c03733,ch
  420d3c:	fsub   QWORD PTR [ebp-0x7d]
  420d3f:	(bad)  [esi-0x53]
  420d42:	jle    0x420d9f
  420d44:	mov    esp,0xb7c2f59e
  420d49:	popa   
  420d4a:	bound  edx,QWORD PTR [ecx+0x5f]
  420d4d:	bound  esp,QWORD PTR [edx+0x15]
  420d50:	sbb    edx,0xaaf10b70
  420d56:	mov    eax,ds:0x7a4b1af3
  420d5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d5c:	mov    bh,0x7c
  420d5e:	cmp    DWORD PTR [esi-0x25],ebp
  420d61:	pop    esp
  420d62:	imul   edx,DWORD PTR [ebx],0xffffffe5
  420d65:	sbb    eax,0x9e5eee28
  420d6a:	nop
  420d6b:	or     cl,BYTE PTR gs:[edi+0x33b133ed]
  420d72:	sbb    esi,edi
  420d74:	or     ebp,eax
  420d76:	mov    al,0x86
  420d78:	inc    ebx
  420d79:	push   ebx
  420d7a:	push   0x2c
  420d7c:	imul   ebp,DWORD PTR [edx-0x2c90b42b],0xffffff88
  420d83:	mov    al,ds:0x5018c1c
  420d88:	inc    edi
  420d89:	sbb    eax,DWORD PTR ds:0x24095731
  420d8f:	pusha  
  420d90:	adc    ecx,esp
  420d92:	or     al,BYTE PTR [edx]
  420d94:	xor    DWORD PTR ds:0xfe1205de,0xfffffff0
  420d9b:	pop    eax
  420d9c:	jg     0x420db5
  420d9e:	outs   dx,BYTE PTR ds:[esi]
  420d9f:	sbb    al,0xe3
  420da1:	popf   
  420da2:	push   ebx
  420da3:	sti    
  420da4:	cmp    BYTE PTR [esi-0x38],ah
  420da7:	fisubr DWORD PTR [edi+0x65]
  420daa:	test   al,0x29
  420dac:	cs int 0x7a
  420daf:	pop    ebx
  420db0:	fstp   DWORD PTR [eax-0x16ee7715]
  420db6:	ret    
  420db7:	cs pop eax
  420db9:	sbb    al,0x56
  420dbb:	scas   al,BYTE PTR es:[edi]
  420dbc:	clc    
  420dbd:	or     al,0xb8
  420dbf:	xlat   BYTE PTR ds:[ebx]
  420dc0:	jmp    0x95678dc8
  420dc5:	sub    edx,ebx
  420dc7:	adc    DWORD PTR [ecx],ecx
  420dc9:	std    
  420dca:	cmp    ebp,DWORD PTR [ecx-0x2c]
  420dcd:	mov    eax,ds:0x28882eeb
  420dd2:	mov    bl,0x35
  420dd4:	lods   al,BYTE PTR ds:[esi]
  420dd5:	nop
  420dd6:	pop    ds
  420dd7:	push   ebx
  420dd8:	xor    edx,esp
  420dda:	fsub   st(4),st
  420ddc:	xor    eax,0x623a1446
  420de1:	fcomi  st,st(2)
  420de3:	mov    esp,DWORD PTR [esi-0x6481935]
  420de9:	jno    0x420def
  420deb:	or     ch,bl
  420ded:	int    0xd9
  420def:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420df0:	fcomp  DWORD PTR [edx+0x54]
  420df3:	call   0xda22:0x3e9fa479
  420dfa:	into   
  420dfb:	dec    edi
  420dfc:	scas   eax,DWORD PTR es:[edi]
  420dfd:	or     al,0xb6
  420dff:	in     eax,dx
  420e00:	add    bl,BYTE PTR [ecx]
  420e02:	mov    cl,0x74
  420e04:	popf   
  420e05:	les    eax,FWORD PTR [ecx+0x69e27b80]
  420e0b:	adc    BYTE PTR [ecx-0x46],al
  420e0e:	dec    esi
  420e0f:	mov    ecx,0xe108d37b
  420e14:	xor    ah,dh
  420e16:	aaa    
  420e17:	pop    ss
  420e18:	push   eax
  420e19:	sbb    ch,ch
  420e1b:	mov    ch,0xc8
  420e1d:	fwait
  420e1e:	loop   0x420e7d
  420e20:	mov    cl,0x33
  420e22:	inc    ebp
  420e23:	ficomp DWORD PTR [eax-0x7ea160cf]
  420e29:	fcomp  st(6)
  420e2b:	cmp    esp,DWORD PTR [esi]
  420e2d:	add    eax,0xef33468e
  420e32:	xor    al,0x21
  420e34:	int3   
  420e35:	ror    DWORD PTR [edi+0x2a4eb1f8],1
  420e3b:	mov    dl,0x19
  420e3d:	test   al,0x97
  420e3f:	aaa    
  420e40:	and    BYTE PTR [ebp-0x794be232],0xf7
  420e47:	leave  
  420e48:	shl    ecx,cl
  420e4a:	mov    dl,dl
  420e4c:	jg     0x420e31
  420e4e:	punpckldq mm5,DWORD PTR [eax-0x7aa4a639]
  420e55:	push   esi
  420e56:	or     BYTE PTR [edi+0x18],dl
  420e59:	adc    eax,0x23eb41e3
  420e5e:	fiadd  WORD PTR [edi+0x4a505caa]
  420e64:	cwde   
  420e65:	shl    BYTE PTR [eax+ebp*4+0x32],1
  420e69:	ror    WORD PTR [edx-0x1d],cl
  420e6d:	je     0x420e2e
  420e6f:	push   es
  420e70:	or     esp,0xffffffb7
  420e73:	into   
  420e74:	sbb    DWORD PTR [ebp*8-0x6f6c54aa],0x5f
  420e7c:	inc    edi
  420e7d:	inc    edi
  420e7e:	push   ebp
  420e7f:	repz mov esi,DWORD PTR [edi+0x6a65a57c]
  420e86:	lds    ebx,FWORD PTR [esp+esi*4-0x42656f5]
  420e8d:	push   ss
  420e8e:	and    al,bh
  420e90:	mov    bh,BYTE PTR [edx-0x6697b9e3]
  420e96:	in     eax,dx
  420e97:	sbb    dl,BYTE PTR [edx+0x76e0dbb4]
  420e9d:	icebp  
  420e9e:	mov    ecx,0x7a0d3eb0
  420ea3:	mov    al,0x23
  420ea5:	push   esi
  420ea6:	ret    
  420ea7:	dec    eax
  420ea8:	and    al,0x6a
  420eaa:	fs jecxz 0x420e7c
  420ead:	fucomip st,st(5)
  420eaf:	je     0x420ef8
  420eb1:	std    
  420eb2:	test   DWORD PTR [ecx],esp
  420eb4:	or     dl,BYTE PTR [ebx]
  420eb6:	xchg   DWORD PTR [esi+0x6e185c5a],esp
  420ebc:	pop    esp
  420ebd:	not    DWORD PTR [esi-0x7c85200a]
  420ec3:	loop   0x420e6e
  420ec5:	icebp  
  420ec6:	dec    bp
  420ec8:	inc    ebp
  420ec9:	push   ss
  420eca:	clts   
  420ecc:	hlt    
  420ecd:	ror    DWORD PTR [ebp+edi*8-0x6f],1
  420ed1:	jbe    0x420f44
  420ed3:	push   0xe4df53b4
  420ed8:	pop    esp
  420ed9:	and    ecx,DWORD PTR [ecx-0x24974611]
  420edf:	add    BYTE PTR [esi+0x870a3f3],dh
  420ee5:	mov    ds:0xad7675d9,eax
  420eea:	lods   eax,DWORD PTR ds:[esi]
  420eeb:	mov    esi,0xd023a880
  420ef0:	jle    0x420ed5
  420ef2:	sbb    DWORD PTR [edx+ecx*4-0x1e],ecx
  420ef6:	fcomp  QWORD PTR [ecx+edi*4-0x6e6ca25b]
  420efd:	or     esi,DWORD PTR [edi-0x7c78fc0b]
  420f03:	push   ebp
  420f04:	pusha  
  420f05:	sbb    BYTE PTR [ebp-0x36],0x1d
  420f09:	test   eax,0xa0504558
  420f0e:	punpckldq mm1,DWORD PTR [ebx+0x31177e53]
  420f15:	xor    BYTE PTR [esi-0x69],ah
  420f18:	pop    eax
  420f19:	enter  0x7349,0x48
  420f1d:	inc    eax
  420f1e:	sti    
  420f1f:	(bad)  
  420f20:	stos   DWORD PTR es:[edi],eax
  420f21:	adc    al,0x96
  420f23:	jb     0x420ec2
  420f25:	(bad)  
  420f26:	mov    cl,0xd9
  420f28:	lods   eax,DWORD PTR ds:[esi]
  420f29:	out    dx,al
  420f2a:	ret    
  420f2b:	mov    ds:0x6a805703,eax
  420f30:	stos   BYTE PTR es:[edi],al
  420f31:	mov    eax,0xcd077a5
  420f36:	aaa    
  420f37:	dec    edi
  420f38:	push   esi
  420f39:	push   ebp
  420f3a:	adc    al,0xc9
  420f3c:	imul   esi,DWORD PTR [ebx+0x27997344],0xffffffea
  420f43:	scas   eax,DWORD PTR es:[edi]
  420f44:	popa   
  420f45:	int3   
  420f46:	test   DWORD PTR ds:0x1b125842,ecx
  420f4c:	mov    dh,0x42
  420f4e:	jmp    0xa09f944a
  420f53:	mov    edx,0x418e67d5
  420f58:	add    DWORD PTR [ecx-0x267a31cb],edi
  420f5e:	dec    edx
  420f5f:	dec    ecx
  420f60:	loop   0x420fbf
  420f62:	cmp    BYTE PTR [ebp+0x7d],0x71
  420f66:	inc    ebx
  420f67:	or     BYTE PTR [esp+edi*1],bh
  420f6a:	xchg   DWORD PTR [ebx],ebx
  420f6c:	lahf   
  420f6d:	pop    edi
  420f6e:	loopne 0x420f9f
  420f70:	imul   ebx,DWORD PTR [esi-0x525fcd21],0x22dddb9a
  420f7a:	adc    DWORD PTR [edi-0x79],eax
  420f7d:	xchg   esi,eax
  420f7e:	popa   
  420f7f:	shr    DWORD PTR [ecx],1
  420f81:	jbe    0x420f17
  420f83:	into   
  420f84:	add    ebx,esi
  420f86:	mov    al,0xca
  420f88:	ins    DWORD PTR es:[edi],dx
  420f89:	xor    DWORD PTR [edi+0x3d1d33ec],esp
  420f8f:	and    dl,bl
  420f91:	xchg   ecx,eax
  420f92:	mul    BYTE PTR [edi-0x5a]
  420f95:	mov    dh,0x2
  420f97:	stc    
  420f98:	in     al,dx
  420f99:	les    edx,FWORD PTR [edi-0x6d29a4ef]
  420f9f:	mov    ds,WORD PTR [edi-0x34]
  420fa2:	hlt    
  420fa3:	add    eax,0xde177cc4
  420fa8:	gs push ebx
  420faa:	cmp    ch,dh
  420fac:	sar    BYTE PTR [edi-0x35ebe97],1
  420fb2:	pop    edi
  420fb3:	and    al,0xee
  420fb5:	mov    eax,ds:0x6d82af8d
  420fba:	call   0xe00d66a6
  420fbf:	scas   al,BYTE PTR es:[edi]
  420fc0:	in     eax,dx
  420fc1:	adc    ebx,edi
  420fc3:	mov    ch,0xd7
  420fc5:	scas   al,BYTE PTR es:[edi]
  420fc6:	pop    ds
  420fc7:	fistp  QWORD PTR ds:0x2d868949
  420fcd:	cwde   
  420fce:	mov    edx,0x9678ec3d
  420fd3:	out    dx,eax
  420fd4:	fmul   DWORD PTR [ebx*4-0x4a88d042]
  420fdb:	jmp    0xacae:0x9d46e376
  420fe2:	push   esi
  420fe3:	add    al,0xe8
  420fe5:	xchg   ebx,eax
  420fe6:	sbb    DWORD PTR [eax+eax*1],ebx
  420fe9:	fwait
  420fea:	cmp    ah,BYTE PTR [esi]
  420fec:	aas    
  420fed:	xor    cl,dh
  420fef:	inc    ecx
  420ff0:	xor    BYTE PTR [esi+0x46],ch
  420ff3:	jmp    0xdae761b4
  420ff8:	pop    ss
  420ff9:	es mov ebp,0x6a9f12d0
  420fff:	sub    al,dl
  421001:	bound  esp,QWORD PTR [eax+0x51]
  421004:	loop   0x421048
  421006:	sbb    BYTE PTR [edx],ah
  421008:	fidivr WORD PTR [ecx]
  42100a:	sub    dh,dh
  42100c:	inc    ebp
  42100d:	mov    WORD PTR [ebx-0x5],ds
  421010:	sub    eax,0x27ef0184
  421015:	outs   dx,BYTE PTR ds:[esi]
  421016:	ins    DWORD PTR es:[edi],dx
  421017:	adc    al,0xf1
  421019:	and    DWORD PTR [ebp-0x67],edi
  42101c:	mov    al,ds:0x74ecd790
  421021:	loopne 0x421037
  421023:	or     bl,dl
  421025:	jo     0x42100a
  421027:	and    edx,DWORD PTR fs:[edi]
  42102a:	neg    BYTE PTR [ebp+0x785ecf98]
  421030:	stc    
  421031:	dec    ebx
  421032:	bnd ret 0xbbb5
  421036:	push   eax
  421037:	xor    eax,esp
  421039:	mov    edx,0x5033a3af
  42103e:	aas    
  42103f:	ins    BYTE PTR es:[edi],dx
  421040:	(bad)  
  421041:	dec    ecx
  421042:	xchg   esp,eax
  421043:	out    dx,al
  421044:	loopne 0x42105b
  421046:	push   esp
  421047:	rcl    ebp,1
  421049:	popa   
  42104a:	imul   BYTE PTR [edx-0x26]
  42104d:	shl    DWORD PTR [esi+0x74],cl
  421050:	je     0x420fe6
  421052:	jmp    FWORD PTR [ebx]
  421054:	add    al,BYTE PTR [edx+0x7c5675a1]
  42105a:	out    dx,al
  42105b:	sti    
  42105c:	sub    al,0xc1
  42105e:	jmp    0x907c0b0d
  421063:	adc    dh,cl
  421065:	fisttp DWORD PTR [ecx+0x45]
  421068:	push   edx
  421069:	fnstcw WORD PTR [esi-0x18]
  42106c:	mov    esp,0xeeeddc63
  421071:	mov    dl,0x9f
  421073:	fdivr  DWORD PTR [esi]
  421075:	clc    
  421076:	xchg   ebx,eax
  421077:	(bad)  
  421078:	mov    esp,0x6325b79f
  42107d:	hlt    
  42107e:	mov    WORD PTR [edx+0x77784f8d],ss
  421084:	and    dl,BYTE PTR [ebx+0x60ae8b03]
  42108a:	je     0x421058
  42108c:	push   0xffffffc0
  42108e:	adc    al,dl
  421090:	pop    edi
  421091:	addr16 mov edi,0x83382c51
  421097:	shl    edx,cl
  421099:	stos   BYTE PTR es:[edi],al
  42109a:	push   0x1f
  42109c:	cmp    edx,edx
  42109e:	sub    eax,0x4ef0528f
  4210a3:	loope  0x4210f9
  4210a5:	lea    eax,[ebx+0x44]
  4210a8:	jmp    0x16b4:0x93ee5277
  4210af:	fst    st(7)
  4210b1:	cdq    
  4210b2:	retf   
  4210b3:	push   edx
  4210b4:	or     BYTE PTR [edx],cl
  4210b6:	out    dx,al
  4210b7:	add    BYTE PTR [ebp-0x5184e947],bl
  4210bd:	mov    esp,gs
  4210bf:	mov    cl,0xce
  4210c1:	es fs mov eax,ds
  4210c5:	and    DWORD PTR [edx],0xffffff89
  4210c8:	mov    ebp,DWORD PTR [esi+0x5e3daf5]
  4210ce:	test   cl,bl
  4210d0:	fs mov esi,0x10857bc0
  4210d6:	jmp    0xd574:0xb54d5f2e
  4210dd:	cmp    DWORD PTR [edi],edx
  4210df:	sub    DWORD PTR [esi+0x5e],ebp
  4210e2:	pop    ss
  4210e3:	nop
  4210e4:	stos   BYTE PTR es:[edi],al
  4210e5:	xor    eax,0x5025f83c
  4210ea:	ins    DWORD PTR es:[edi],dx
  4210eb:	inc    edi
  4210ec:	das    
  4210ed:	push   esi
  4210ee:	mov    edx,0x46ac3c91
  4210f3:	aam    0x58
  4210f5:	push   eax
  4210f6:	mov    cl,0x44
  4210f8:	sbb    esi,DWORD PTR [eax]
  4210fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210fb:	and    BYTE PTR [ecx-0x5],bh
  4210fe:	aas    
  4210ff:	test   al,0x31
  421101:	out    0xff,al
  421103:	(bad)  
  421104:	pop    ds
  421105:	jne    0x4210a5
  421107:	mov    eax,ds:0x47cbc68a
  42110c:	push   ebx
  42110d:	sbb    DWORD PTR [ebx],eax
  42110f:	pop    ebx
  421110:	cwde   
  421111:	xchg   ebp,eax
  421112:	ds ins BYTE PTR es:[edi],dx
  421114:	fsub   DWORD PTR [edi+0x5b]
  421117:	dec    esp
  421118:	xchg   esi,eax
  421119:	sahf   
  42111a:	jg     0x4210d5
  42111c:	jmp    DWORD PTR [ecx+eiz*2]
  42111f:	xchg   DWORD PTR [ecx+edx*2-0x2c5ab21],ebp
  421126:	sub    DWORD PTR cs:[esi],esi
  421129:	mov    esp,0xc10937f6
  42112e:	or     DWORD PTR [edi],ecx
  421130:	add    ecx,0xfae64786
  421136:	sbb    DWORD PTR [ebx],0x3a
  421139:	ins    BYTE PTR es:[edi],dx
  42113a:	mov    ds:0xde02637d,eax
  42113f:	or     ebp,DWORD PTR [esi+0x51]
  421142:	bound  eax,QWORD PTR [esp+ebx*8]
  421145:	or     esp,edi
  421147:	test   al,0x3c
  421149:	rcl    DWORD PTR [esi+eiz*8],1
  42114c:	ret    0xd85b
  42114f:	mov    eax,0xbdeeba24
  421154:	stos   BYTE PTR es:[edi],al
  421155:	lods   al,BYTE PTR ds:[esi]
  421156:	adc    ebx,DWORD PTR [edx]
  421158:	add    BYTE PTR [esi+0x1f3032d4],bh
  42115e:	and    al,0x9
  421160:	(bad)  
  421161:	push   esi
  421162:	(bad)  
  421164:	dec    eax
  421165:	jbe    0x421137
  421167:	fmul   QWORD PTR [ebx]
  421169:	mov    DWORD PTR [esi],esp
  42116b:	pop    ss
  42116c:	cmc    
  42116d:	xor    edx,DWORD PTR [esi+ebp*1]
  421170:	jns    0x4211c0
  421172:	jp     0x4211a9
  421174:	inc    ecx
  421175:	push   cs
  421176:	clc    
  421177:	pusha  
  421178:	push   ds
  421179:	cld    
  42117a:	jnp    0x421175
  42117c:	pusha  
  42117d:	je     0x4211c6
  42117f:	inc    esp
  421180:	sbb    al,0x77
  421182:	(bad)
  421185:	push   eax
  421186:	(bad)  
  421187:	mov    ss,WORD PTR [edx+0x6b]
  42118a:	adc    bh,BYTE PTR [ebx]
  42118c:	(bad)  
  42118d:	adc    eax,0xe59c790e
  421192:	mov    ebp,DWORD PTR [eax]
  421194:	push   esp
  421195:	aas    
  421196:	rol    ecx,0x6
  421199:	xor    ah,BYTE PTR [esi+0x39]
  42119c:	xchg   edx,eax
  42119d:	cmp    DWORD PTR [esi+0x2c21ca3e],esi
  4211a3:	fild   QWORD PTR [edx-0x203fede8]
  4211a9:	pop    edi
  4211aa:	lods   al,BYTE PTR ds:[esi]
  4211ab:	fisub  WORD PTR [esi-0x20]
  4211ae:	adc    BYTE PTR [edx+0x2c741583],ch
  4211b4:	xchg   DWORD PTR [eax],eax
  4211b6:	mov    dh,0xc4
  4211b8:	jne    0x42113e
  4211ba:	pop    edi
  4211bb:	cmp    ch,BYTE PTR [esi]
  4211bd:	dec    esp
  4211be:	inc    ebp
  4211bf:	cwde   
  4211c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211c1:	in     eax,0xe4
  4211c3:	inc    edi
  4211c4:	test   al,0xa8
  4211c6:	aad    0x2
  4211c8:	mov    ds:0xf9c379c8,eax
  4211cd:	imul   eax,DWORD PTR ds:0x81f57b86,0xe58d7a9d
  4211d7:	test   DWORD PTR [edx+0x44ab7664],ebx
  4211dd:	fwait
  4211de:	ds push cs
  4211e0:	aad    0x64
  4211e2:	jmp    0x421175
  4211e4:	ret    
  4211e5:	fmul   DWORD PTR [esi]
  4211e7:	(bad)  
  4211e8:	ins    BYTE PTR es:[edi],dx
  4211e9:	aaa    
  4211ea:	loopne 0x421258
  4211ec:	imul   ebp,ebp,0x180bee86
  4211f2:	cmp    cl,bh
  4211f4:	ins    BYTE PTR es:[edi],dx
  4211f5:	(bad)  
  4211f6:	in     eax,0x2
  4211f8:	(bad)  
  4211fa:	or     eax,0xd4d5c2e0
  4211ff:	cmp    DWORD PTR ds:0xc8bc280b,edx
  421205:	xor    DWORD PTR [ebp-0x147ffbba],0x563656a1
  42120f:	xor    al,0x36
  421211:	imul   ecx,DWORD PTR ds:0xc8b274f7,0xf01ec555
  42121b:	popf   
  42121c:	pop    edi
  42121d:	dec    ebx
  42121e:	loop   0x4211b4
  421220:	shl    ch,cl
  421222:	jae    0x42122b
  421224:	adc    al,0xa2
  421226:	lods   eax,DWORD PTR ds:[esi]
  421227:	push   esp
  421228:	call   0x52ac:0xf36de6a4
  42122f:	loop   0x4211f6
  421231:	mov    esp,0x8463ef03
  421236:	dec    edx
  421237:	rcl    esp,1
  421239:	cmp    bl,BYTE PTR [ecx]
  42123b:	leave  
  42123c:	mov    ss,WORD PTR [eax]
  42123e:	add    al,0xba
  421240:	addr16 xor al,0x51
  421243:	popa   
  421244:	cmc    
  421245:	arpl   WORD PTR [esi],di
  421247:	das    
  421248:	mov    edi,ecx
  42124a:	push   ebp
  42124b:	push   ecx
  42124c:	mov    ecx,0xbcc04124
  421251:	adc    eax,0xce65b36
  421256:	into   
  421257:	js     0x421247
  421259:	inc    edx
  42125a:	mov    edx,DWORD PTR [edx+0x23e94e84]
  421260:	pop    es
  421261:	and    al,0x5b
  421263:	icebp  
  421264:	loopne 0x42120d
  421266:	popf   
  421267:	push   esi
  421268:	popa   
  421269:	jbe    0x421255
  42126b:	out    dx,eax
  42126c:	(bad)  
  42126e:	adc    bh,dl
  421270:	arpl   WORD PTR [ecx],bp
  421272:	ins    DWORD PTR es:[edi],dx
  421273:	js     0x42121f
  421275:	neg    bh
  421277:	mov    dl,al
  421279:	mov    cl,0x90
  42127b:	sub    dh,al
  42127d:	out    0xb0,eax
  42127f:	add    al,BYTE PTR [edi-0x749ee4ad]
  421285:	mov    WORD PTR [edx+0x442e4c03],cs
  42128b:	cmc    
  42128c:	fidiv  DWORD PTR [edx+0x73833289]
  421292:	call   0xf5d64565
  421297:	test   eax,0x3d28e2f2
  42129c:	mov    ebp,0x1d23ee13
  4212a1:	add    BYTE PTR [esp+ebp*1-0x34d28b17],al
  4212a8:	add    eax,0x908f88cc
  4212ad:	scas   eax,DWORD PTR es:[edi]
  4212ae:	mov    edi,0x82585dff
  4212b3:	je     0x42129a
  4212b5:	das    
  4212b6:	sbb    ebx,0x62
  4212b9:	or     DWORD PTR [ecx-0x304ba985],ebx
  4212bf:	call   0xff59:0x5e1f3ebf
  4212c6:	jle    0x4212f0
  4212c8:	ja     0x4212a9
  4212ca:	cmc    
  4212cb:	inc    esp
  4212cc:	mov    bh,0xcb
  4212ce:	loopne 0x421263
  4212d0:	in     al,0x18
  4212d2:	push   ebx
  4212d3:	push   edx
  4212d4:	or     ch,BYTE PTR [ecx+0x3]
  4212d7:	push   ebp
  4212d8:	lahf   
  4212d9:	jbe    0x42127e
  4212db:	push   edx
  4212dc:	out    0x1f,eax
  4212de:	cmp    al,al
  4212e0:	inc    ecx
  4212e1:	push   ebp
  4212e2:	adc    DWORD PTR [ecx-0x4751a70f],ebx
  4212e8:	mov    eax,DWORD PTR [esi-0x31]
  4212eb:	push   ss
  4212ec:	fbstp  TBYTE PTR [edi+0x74]
  4212ef:	mov    eax,0x9390acd8
  4212f4:	shr    BYTE PTR [edx],1
  4212f6:	and    eax,0x9a8eb104
  4212fb:	sub    bl,BYTE PTR [edi-0xa2a294e]
  421301:	ror    DWORD PTR [edi-0x31],0x7a
  421305:	pop    esi
  421306:	or     DWORD PTR [eax],0x6358abec
  42130c:	push   ss
  42130d:	add    eax,0x78749445
  421312:	dec    edx
  421313:	push   ebx
  421314:	scas   eax,DWORD PTR es:[edi]
  421315:	mov    edx,0xaff72e6f
  42131a:	add    ebx,DWORD PTR [ebx+0x7b672825]
  421320:	mov    ebp,ebx
  421322:	aam    0xe3
  421324:	stc    
  421325:	(bad)  
  421326:	dec    esi
  421327:	inc    esp
  421328:	cli    
  421329:	jl     0x42134d
  42132b:	jge    0x4213a7
  42132d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42132e:	hlt    
  42132f:	es xor al,0xfc
  421332:	push   cs
  421333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421334:	loope  0x421315
  421336:	mov    eax,ds:0xc480988b
  42133b:	add    DWORD PTR [esi],eax
  42133d:	jns    0x42139e
  42133f:	jp     0x42135e
  421341:	jne    0x42133d
  421343:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421344:	aas    
  421345:	loope  0x4212ff
  421347:	fadd   QWORD PTR [edx]
  421349:	sbb    DWORD PTR ds:0x1621f553,0xffffff83
  421350:	sar    DWORD PTR [esp+ebx*8-0x76],1
  421354:	pop    eax
  421355:	jl     0x42134a
  421357:	(bad)  
  421358:	or     bh,BYTE PTR [edi-0x446ec7bf]
  42135e:	jns    0x4213a0
  421360:	sahf   
  421361:	push   esp
  421362:	je     0x421362
  421364:	jge    0x421388
  421366:	psubb  mm3,QWORD PTR [edx-0x57c1bd0e]
  42136d:	jg     0x421338
  42136f:	xor    eax,0x75e09cc9
  421374:	cmp    dl,BYTE PTR [eax+0x5e91d252]
  42137a:	mov    ds:0x476c8276,al
  42137f:	adc    al,0xd3
  421381:	in     al,dx
  421382:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421383:	mov    esp,0xcbf88235
  421388:	xchg   edx,eax
  421389:	sub    al,0x40
  42138b:	outs   dx,DWORD PTR ds:[esi]
  42138c:	mov    ecx,DWORD PTR [ecx+0x56]
  42138f:	(bad)
  421393:	cmp    BYTE PTR [ecx],ah
  421395:	push   esi
  421396:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421397:	(bad)  
  421398:	popf   
  421399:	jmp    0x3e10:0x1bc16689
  4213a0:	mov    WORD PTR [esi+edx*2+0x26],ds
  4213a4:	and    eax,0x3e120d4c
  4213a9:	adc    al,0x1d
  4213ab:	dec    edi
  4213ac:	push   ds
  4213ad:	aam    0x4
  4213af:	jnp    0x4213e1
  4213b1:	mov    esi,0xc5be3b4d
  4213b6:	jge    0x42142a
  4213b8:	popa   
  4213b9:	inc    esp
  4213ba:	scas   al,BYTE PTR es:[edi]
  4213bb:	xchg   ebp,eax
  4213bc:	sub    eax,0x5e5f01ad
  4213c1:	adc    al,0xd0
  4213c3:	or     al,0x35
  4213c5:	mov    al,0x86
  4213c7:	imul   esi
  4213c9:	add    eax,0xa78c5d13
  4213ce:	out    dx,eax
  4213cf:	jb     0x42144c
  4213d1:	jge    0x4213ef
  4213d3:	inc    ebx
  4213d4:	(bad)  
  4213d5:	jo     0x421437
  4213d7:	add    eax,0xd680fc6f
  4213dc:	addr16 dec eax
  4213de:	repz inc ebp
  4213e0:	sbb    eax,0x78a2697
  4213e5:	inc    ebp
  4213e6:	jp     0x4213aa
  4213e8:	stos   BYTE PTR es:[edi],al
  4213e9:	inc    ebp
  4213ea:	add    BYTE PTR [esi-0x3fbe3eff],cl
  4213f0:	xchg   esi,eax
  4213f1:	pop    es
  4213f2:	inc    ebx
  4213f3:	gs jp  0x421417
  4213f6:	std    
  4213f7:	jns    0x421427
  4213f9:	adc    DWORD PTR cs:[edi-0x6a],ecx
  4213fd:	lock and edx,eax
  421400:	scas   al,BYTE PTR es:[edi]
  421401:	rcr    DWORD PTR [edx+0x18],0x2e
  421405:	sub    eax,0x99dff7db
  42140a:	mov    ch,BYTE PTR ss:[edi-0x34]
  42140e:	jne    0x42140a
  421410:	adc    al,0xb0
  421412:	outs   dx,BYTE PTR ds:[esi]
  421413:	jno    0x421474
  421415:	ficomp DWORD PTR [ecx]
  421417:	dec    esp
  421418:	and    al,0x91
  42141a:	sub    ebp,esp
  42141c:	shr    DWORD PTR [eax-0x26eb28da],cl
  421422:	sub    ah,dl
  421424:	push   ss
  421425:	xor    al,BYTE PTR [ebx-0x1044b30c]
  42142b:	popa   
  42142c:	add    DWORD PTR [edi+0x4b],0xffffffc4
  421430:	jnp    0x421408
  421432:	jno    0x421488
  421434:	xchg   edx,eax
  421435:	xchg   ebx,eax
  421436:	(bad)  
  421437:	pop    esp
  421438:	js     0x421493
  42143a:	lods   eax,DWORD PTR ds:[esi]
  42143b:	dec    esi
  42143c:	(bad)  
  42143f:	push   es
  421440:	push   es
  421441:	cwde   
  421442:	ret    0x879c
  421445:	jns    0x42142b
  421447:	or     eax,0x2bb4aa27
  42144c:	sub    DWORD PTR [esi+0x4a],ecx
  42144f:	dec    edx
  421450:	cli    
  421451:	imul   ebx,DWORD PTR ds:0x5b159d53,0xe594587e
  42145b:	(bad)  
  42145c:	outs   dx,DWORD PTR ds:[esi]
  42145d:	in     al,0xf3
  42145f:	add    al,0xc3
  421461:	fdiv   DWORD PTR [ebx+0x7c]
  421464:	loope  0x421442
  421466:	lahf   
  421467:	push   esi
  421468:	mov    al,ds:0x39c6f065
  42146d:	sub    DWORD PTR [ecx+esi*4],eax
  421470:	jbe    0x4214bd
  421472:	stc    
  421473:	sahf   
  421474:	sub    ch,BYTE PTR [esi+0x1e]
  421477:	nop
  421478:	(bad)  [esi]
  42147a:	int    0x4f
  42147c:	xchg   esi,eax
  42147d:	jo     0x421448
  42147f:	ins    DWORD PTR es:[edi],dx
  421480:	ret    
  421481:	dec    eax
  421482:	push   ebp
  421483:	mov    BYTE PTR [ecx+0x1085fb2d],0xf4
  42148a:	or     BYTE PTR [ebp-0x6c824a23],0x42
  421491:	test   al,0x2c
  421493:	cdq    
  421494:	fwait
  421495:	jp     0x4214f7
  421497:	into   
  421498:	push   ds
  421499:	xchg   edi,eax
  42149a:	ret    0x2e26
  42149d:	ret    
  42149e:	mov    ah,0x94
  4214a0:	mov    ecx,0x6ed24e3b
  4214a5:	inc    esi
  4214a6:	jg     0x4214ed
  4214a8:	cmp    al,0x42
  4214aa:	push   ebp
  4214ab:	out    dx,al
  4214ac:	cmp    esp,edx
  4214ae:	mov    cs,WORD PTR [ebp-0x77]
  4214b1:	test   ax,0xf19c
  4214b5:	ficom  WORD PTR [edx]
  4214b7:	and    ebp,esp
  4214b9:	sbb    BYTE PTR [esi+0x43],0x54
  4214bd:	inc    ecx
  4214be:	mov    ch,0xc
  4214c0:	sub    BYTE PTR [eax+0x77],al
  4214c3:	enter  0xfe,0x2b
  4214c7:	mov    al,ds:0xfda9abc
  4214cc:	mov    ch,0xd2
  4214ce:	jb     0x4214db
  4214d0:	add    eax,0xa158df6d
  4214d5:	add    dh,BYTE PTR [esi+0x307d26c0]
  4214db:	fisub  DWORD PTR [ebp+0x3109f12e]
  4214e1:	push   ebx
  4214e2:	shl    ch,0x48
  4214e5:	aas    
  4214e6:	or     eax,0x48b54b38
  4214eb:	and    al,BYTE PTR [edi]
  4214ed:	ins    BYTE PTR es:[edi],dx
  4214ee:	out    dx,eax
  4214ef:	(bad)  
  4214f0:	test   BYTE PTR ds:0xb5125eda,0xde
  4214f7:	pushf  
  4214f8:	mov    ch,0x8a
  4214fa:	inc    ebp
  4214fb:	dec    eax
  4214fc:	pop    ebp
  4214fd:	inc    edi
  4214fe:	mov    al,0xeb
  421500:	xor    DWORD PTR [ebx],esp
  421502:	mov    WORD PTR [eax-0x6],cs
  421505:	cmp    al,0x97
  421507:	push   ecx
  421508:	mov    bl,0x70
  42150a:	cmp    BYTE PTR [esi-0xd],0x34
  42150e:	lods   al,BYTE PTR ds:[esi]
  42150f:	repz std 
  421511:	call   0xd5901cb1
  421516:	repnz sub bl,BYTE PTR [edi+edi*2-0x3d]
  42151b:	pop    esp
  42151c:	lahf   
  42151d:	push   ecx
  42151e:	add    ecx,eax
  421520:	mov    esi,0x2ce2bf1
  421525:	test   ebp,ebx
  421527:	lods   eax,DWORD PTR ds:[esi]
  421528:	lock arpl WORD PTR [ebp+0x2f714a60],bp
  42152f:	mov    ch,0x1a
  421531:	(bad)  
  421532:	cmp    al,0x1d
  421534:	pop    ebx
  421535:	popf   
  421536:	xchg   edx,eax
  421537:	and    al,0x70
  421539:	xchg   ebp,edi
  42153b:	and    BYTE PTR [ebx+0xd0b5ac4],dl
  421541:	inc    ebp
  421542:	clc    
  421543:	std    
  421544:	mov    ?,WORD PTR [ecx+eiz*4+0x27]
  421548:	mov    ds:0xba738ff8,al
  42154d:	and    BYTE PTR [edi-0x3667a381],bl
  421553:	arpl   WORD PTR [ecx+0x7381c771],bx
  421559:	je     0x421516
  42155b:	or     al,0x2c
  42155d:	stos   DWORD PTR es:[edi],eax
  42155e:	pop    ecx
  42155f:	sbb    BYTE PTR [esi],ch
  421561:	xchg   ebx,eax
  421562:	sbb    al,0xca
  421564:	pop    ecx
  421565:	(bad)  
  421566:	mov    edx,0xff5c0fcb
  42156b:	das    
  42156c:	jmp    0xd91b:0x9cb5a05c
  421573:	mov    edx,0xfe51d8b
  421578:	outs   dx,BYTE PTR ds:[esi]
  421579:	out    0xb2,eax
  42157b:	pop    ecx
  42157c:	jnp    0x42158f
  42157e:	icebp  
  42157f:	xor    DWORD PTR [edi-0x5a91f157],0x15
  421586:	push   eax
  421587:	jmp    0xb67d:0xfc08df04
  42158e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42158f:	inc    ebp
  421590:	fidiv  DWORD PTR [esi]
  421592:	shl    cl,cl
  421594:	mov    eax,0x6da98f35
  421599:	xchg   esi,eax
  42159a:	dec    ebx
  42159b:	imul   ecx,DWORD PTR ds:0x7c3355e5,0xffffff9a
  4215a2:	xor    edx,DWORD PTR [eax+ebx*2+0x3]
  4215a6:	push   0xc4defa7f
  4215ab:	add    BYTE PTR [ebx+0x40],bh
  4215ae:	sbb    al,0xfa
  4215b0:	arpl   di,si
  4215b2:	cmp    al,0x49
  4215b4:	ret    
  4215b5:	pop    edx
  4215b6:	mov    esi,0x147a0c82
  4215bb:	push   edx
  4215bc:	std    
  4215bd:	js     0x421609
  4215bf:	mov    dl,0xa9
  4215c1:	mov    ?,WORD PTR [edi]
  4215c3:	inc    ebx
  4215c4:	xchg   DWORD PTR [esi],edi
  4215c6:	jmp    FWORD PTR [esp+esi*8-0x24]
  4215ca:	(bad)  
  4215cb:	ss int3 
  4215cd:	clc    
  4215ce:	int    0x54
  4215d0:	jne    0x421589
  4215d2:	test   DWORD PTR [eax],0xecea076a
  4215d8:	mov    bl,0x8e
  4215da:	cmp    BYTE PTR [edx],cl
  4215dc:	(bad)  
  4215dd:	mov    ch,0x8f
  4215df:	push   esi
  4215e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215e1:	or     BYTE PTR [eax-0x16b1b76c],0xc0
  4215e8:	lods   eax,DWORD PTR ds:[esi]
  4215e9:	arpl   WORD PTR [esi-0x2734aeff],bx
  4215ef:	sub    eax,0x6eb1d4bd
  4215f4:	push   ss
  4215f5:	pusha  
  4215f6:	(bad)  
  4215f7:	push   eax
  4215f8:	jge    0x4215b6
  4215fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215fb:	je     0x421639
  4215fd:	lock stos DWORD PTR es:[edi],eax
  4215ff:	add    bl,0x11
  421602:	loope  0x4215c7
  421604:	loop   0x4215f8
  421606:	ret    
  421607:	xlat   BYTE PTR ds:[ebx]
  421608:	lods   al,BYTE PTR ds:[esi]
  421609:	pop    ecx
  42160a:	neg    DWORD PTR [eax]
  42160c:	mov    bh,0xaf
  42160e:	xor    edi,DWORD PTR [esi-0x2472261c]
  421614:	push   edi
  421615:	(bad)  
  421616:	jbe    0x421606
  421618:	in     eax,dx
  421619:	add    bl,BYTE PTR [ebx]
  42161b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42161c:	jmp    0x421637
  42161e:	mov    ecx,0x4bebf43a
  421623:	fbld   TBYTE PTR ds:0x6a09c605
  421629:	push   edx
  42162a:	aad    0xab
  42162c:	mov    BYTE PTR [eax],dh
  42162e:	std    
  42162f:	enter  0x7399,0x20
  421633:	push   edx
  421634:	or     eax,0xf66a4d3b
  421639:	inc    ebx
  42163a:	out    dx,al
  42163b:	into   
  42163c:	lods   eax,DWORD PTR ds:[esi]
  42163d:	pop    esp
  42163e:	adc    al,cl
  421640:	adc    al,0xa0
  421642:	dec    edx
  421643:	in     eax,dx
  421644:	sub    eax,0x3db948b7
  421649:	ror    DWORD PTR [edi+0xdd6c34c],1
  42164f:	sbb    al,0xfc
  421651:	inc    edi
  421652:	rcl    dl,cl
  421654:	add    DWORD PTR [esp+esi*1],eax
  421657:	arpl   WORD PTR [ecx-0x23cf6790],ax
  42165d:	mov    esi,0x755524b1
  421662:	lea    edx,[ebp-0x6b]
  421665:	inc    ebx
  421666:	test   al,0x33
  421668:	popa   
  421669:	pop    ds
  42166a:	outs   dx,DWORD PTR ds:[esi]
  42166b:	add    ebx,DWORD PTR [edx+0x3e]
  42166e:	out    dx,eax
  42166f:	mov    ss:0x421df865,al
  421675:	lahf   
  421676:	aas    
  421677:	push   edx
  421678:	inc    ebx
  421679:	cmp    DWORD PTR [ebp+0x39888a6d],0x53
  421680:	in     al,dx
  421681:	sbb    ebx,DWORD PTR [edx-0x70f1471a]
  421687:	sub    eax,DWORD PTR [ecx-0x49c444d1]
  42168d:	mov    ds:0xc0987e7c,eax
  421692:	add    al,0xa7
  421694:	std    
  421695:	push   edx
  421696:	pop    ebx
  421697:	repnz (bad)
  42169a:	mov    edi,0x5f4a7f95
  42169f:	xor    BYTE PTR [eax+0x62c84bac],ah
  4216a5:	mov    ds:0xd45157d5,eax
  4216aa:	mov    al,ds:0xfef18756
  4216af:	jecxz  0x4216f8
  4216b1:	cmp    al,0x4e
  4216b3:	inc    eax
  4216b4:	or     DWORD PTR [edi-0x52],esp
  4216b7:	(bad)  
  4216b8:	cmp    eax,0x703bbf6e
  4216bd:	in     al,dx
  4216be:	push   eax
  4216bf:	add    bh,dh
  4216c1:	cld    
  4216c2:	xchg   DWORD PTR [ebp-0x7d],ebp
  4216c5:	clc    
  4216c6:	or     ah,dh
  4216c8:	push   edx
  4216c9:	jne    0x4216b7
  4216cb:	jbe    0x421673
  4216cd:	scas   eax,DWORD PTR es:[edi]
  4216ce:	ss (bad) 
  4216d0:	mov    ebp,0x70369c0f
  4216d5:	jne    0x421741
  4216d7:	dec    ebp
  4216d8:	scas   eax,DWORD PTR es:[edi]
  4216d9:	jmp    0x4216ca
  4216db:	ds push 0xffffffe7
  4216de:	mov    bh,0x2b
  4216e0:	std    
  4216e1:	fs (bad) 
  4216e4:	in     al,dx
  4216e5:	push   edx
  4216e6:	or     al,0xa9
  4216e8:	xchg   bx,ax
  4216ea:	push   ss
  4216eb:	sbb    eax,0x8066b010
  4216f0:	xor    BYTE PTR [eax],ah
  4216f2:	xchg   ecx,eax
  4216f3:	or     DWORD PTR ds:0x108f3893,ebx
  4216f9:	das    
  4216fa:	into   
  4216fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216fc:	sbb    BYTE PTR [ecx-0x3c],dl
  4216ff:	leave  
  421700:	sar    DWORD PTR [edx-0x2],0x7b
  421704:	xor    BYTE PTR [esi],ah
  421706:	stos   BYTE PTR es:[edi],al
  421707:	nop/reserved BYTE PTR [esi-0x53f614ac]
  42170e:	loop   0x4216e0
  421710:	cmp    DWORD PTR [eax],0xcf2f0e73
  421716:	leave  
  421717:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421718:	add    esi,DWORD PTR [esi-0x1ead545e]
  42171e:	ret    
  42171f:	sbb    ch,BYTE PTR [edi+0x72]
  421722:	sahf   
  421723:	dec    ebp
  421724:	xchg   edi,eax
  421725:	xchg   ebx,eax
  421726:	or     edx,ecx
  421728:	mov    bh,0xee
  42172a:	aas    
  42172b:	mov    al,0xb8
  42172d:	xchg   edx,eax
  42172e:	or     dh,BYTE PTR ds:0x716c4b14
  421734:	sar    DWORD PTR [edi+0x5d],0x31
  421738:	xlat   BYTE PTR ds:[ebx]
  421739:	mov    eax,ds:0xccfd98da
  42173e:	cmp    esp,DWORD PTR [ecx+0x26d3c17]
  421744:	pop    ss
  421745:	fdivr  DWORD PTR [ebp+0x3641f69d]
  42174b:	push   ss
  42174c:	in     al,0x4e
  42174e:	mov    bh,BYTE PTR [ecx-0x2690a8a4]
  421754:	or     eax,0x22a2c039
  421759:	push   ds
  42175a:	push   esp
  42175b:	jo     0x4217ad
  42175d:	das    
  42175e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42175f:	xchg   esi,eax
  421760:	push   ebp
  421761:	test   DWORD PTR [edx-0x72c1b658],eax
  421767:	push   es
  421768:	(bad)  
  421769:	aam    0xe
  42176b:	push   ds
  42176c:	mov    ah,0x10
  42176e:	int3   
  42176f:	xor    al,0x54
  421771:	sahf   
  421772:	jno    0x42179b
  421774:	sti    
  421775:	push   ebx
  421776:	inc    esp
  421777:	mov    al,0xdc
  421779:	mov    ds:0x784a8217,eax
  42177e:	mov    cs,WORD PTR [eax-0x2348d68a]
  421784:	inc    esp
  421785:	ret    0x63c
  421788:	adc    esi,ebx
  42178a:	stos   BYTE PTR es:[edi],al
  42178b:	imul   esp,ebp,0xffffffa7
  42178e:	shl    edx,0xa
  421791:	mov    edx,0xe7626da
  421796:	je     0x421779
  421798:	and    al,0x6e
  42179a:	dec    edx
  42179b:	jp     0x421774
  42179d:	(bad)  
  42179f:	ffree  st(3)
  4217a1:	(bad)  
  4217a3:	out    0xa2,al
  4217a5:	sbb    eax,0xe79303f9
  4217aa:	dec    edx
  4217ab:	test   al,0x39
  4217ad:	mov    eax,ds:0x384e97d1
  4217b2:	repz push cs
  4217b4:	test   DWORD PTR [esi-0x72],eax
  4217b7:	stos   DWORD PTR es:[edi],eax
  4217b8:	ss sti 
  4217ba:	xchg   edx,eax
  4217bb:	add    al,0xd0
  4217bd:	inc    ebx
  4217be:	push   esi
  4217bf:	sahf   
  4217c0:	jae    0x421820
  4217c2:	icebp  
  4217c3:	aam    0x9c
  4217c5:	jns    0x42180a
  4217c7:	pushf  
  4217c8:	test   al,0x40
  4217ca:	rcl    esi,0x53
  4217cd:	mov    fs,ebx
  4217cf:	scas   al,BYTE PTR es:[edi]
  4217d0:	ds test esp,edi
  4217d3:	lds    edx,FWORD PTR [edi]
  4217d5:	mov    al,0x7c
  4217d7:	push   esi
  4217d8:	ins    BYTE PTR es:[edi],dx
  4217d9:	jnp    0x421814
  4217db:	std    
  4217dc:	mov    al,ds:0xda9f25d1
  4217e1:	imul   edi,ebp,0xffffff81
  4217e4:	mov    ebp,0x8ec092e
  4217e9:	sbb    eax,0x3f217a08
  4217ee:	lahf   
  4217ef:	lods   eax,DWORD PTR ds:[esi]
  4217f0:	arpl   cx,bp
  4217f2:	fdivr  DWORD PTR [ecx]
  4217f4:	in     eax,dx
  4217f5:	repnz push ebp
  4217f7:	sbb    al,0xc6
  4217f9:	jne    0x42185d
  4217fb:	adc    esi,DWORD PTR [ebp+0x361d5638]
  421801:	adc    BYTE PTR [ecx],cl
  421803:	xchg   ebp,eax
  421804:	cmp    DWORD PTR [edx+0x2f0580ed],eax
  42180a:	test   eax,0x13196a67
  42180f:	sbb    DWORD PTR [ebx],edi
  421811:	jl     0x421822
  421813:	out    dx,al
  421814:	es ins DWORD PTR es:[edi],dx
  421816:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  421818:	dec    ebx
  421819:	neg    BYTE PTR [eax]
  42181b:	dec    edi
  42181c:	pop    ss
  42181d:	std    
  42181e:	nop
  42181f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421820:	mov    ah,0xec
  421822:	add    al,0x0
  421824:	cmp    edx,edi
  421826:	fmul   st(3),st
  421828:	out    dx,eax
  421829:	add    cl,BYTE PTR [eax-0x58d983ae]
  42182f:	adc    ch,cl
  421831:	(bad)  
  421832:	std    
  421833:	and    esp,esi
  421835:	inc    eax
  421836:	out    0xf3,eax
  421838:	das    
  421839:	out    dx,al
  42183a:	fldcw  WORD PTR [esi]
  42183c:	sbb    eax,0x14e326e2
  421841:	mov    ah,cl
  421843:	sbb    al,0x7d
  421845:	jle    0x4218c5
  421847:	jge    0x4217ee
  421849:	retf   0x76e0
  42184c:	mov    ds:0xf094913b,al
  421851:	jp     0x4217e5
  421853:	or     DWORD PTR [eax],ebx
  421855:	and    BYTE PTR [esi],cl
  421857:	add    ecx,ecx
  421859:	sub    al,0xcf
  42185b:	sbb    al,0xf8
  42185d:	pop    es
  42185e:	bsr    ebx,DWORD PTR [ecx]
  421861:	fmul   DWORD PTR ds:0xef920f22
  421867:	cmc    
  421868:	mov    fs,WORD PTR ds:0x7d77ec4c
  42186e:	sbb    eax,0xa423f72e
  421873:	xchg   esp,eax
  421874:	xor    BYTE PTR [ecx+0x7c510e5],0xbe
  42187b:	gs test al,0x59
  42187e:	(bad)  
  42187f:	and    BYTE PTR [esi],al
  421881:	lea    ebp,[edx]
  421883:	loopne 0x4218cb
  421885:	out    dx,eax
  421886:	loopne 0x4218fc
  421888:	pop    ecx
  421889:	inc    esi
  42188a:	push   ebp
  42188b:	ficom  WORD PTR [ebp+ebx*1+0x53e4a1f9]
  421892:	or     BYTE PTR [edi],bl
  421894:	fucomp st(0)
  421896:	jbe    0x421850
  421898:	xchg   ebx,eax
  421899:	hlt    
  42189a:	fucomp st(4)
  42189c:	outs   dx,DWORD PTR ds:[esi]
  42189d:	jns    0x421858
  42189f:	sub    eax,0x2bcc6611
  4218a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218a5:	(bad)  
  4218a6:	imul   edx,DWORD PTR [esi-0xa],0xffffffcc
  4218aa:	jecxz  0x421859
  4218ac:	in     eax,dx
  4218ad:	aad    0xd9
  4218af:	fmul   QWORD PTR [edi]
  4218b1:	jno    0x4218d0
  4218b3:	jecxz  0x42188f
  4218b5:	fwait
  4218b6:	mov    esp,esi
  4218b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218b9:	and    eax,DWORD PTR [ebp+eiz*1-0x28]
  4218bd:	mov    edi,0x8c06d3ad
  4218c2:	fisttp DWORD PTR [eax+0x7fae471f]
  4218c8:	and    al,0xde
  4218ca:	jg     0x4218b4
  4218cc:	lahf   
  4218cd:	sub    edi,DWORD PTR [edx-0x22c7e1a5]
  4218d3:	push   es
  4218d4:	mov    ebx,0xd38606c0
  4218d9:	dec    edi
  4218da:	add    dl,BYTE PTR [ebx-0x37]
  4218dd:	addr16 pop edx
  4218df:	pop    es
  4218e0:	add    BYTE PTR [ecx],0x2d
  4218e3:	les    eax,FWORD PTR [ebp-0x5578b9fa]
  4218e9:	sub    DWORD PTR [eax],esi
  4218eb:	(bad)  
  4218ed:	dec    ebx
  4218ee:	scas   al,BYTE PTR es:[edi]
  4218ef:	lock pop ebx
  4218f1:	(bad)  
  4218f2:	cmp    eax,0x9118a51e
  4218f7:	jnp    0x421940
  4218f9:	jl     0x4218bb
  4218fb:	jmp    0x81a334ef
  421900:	retf   0x87fa
  421903:	std    
  421904:	xor    BYTE PTR [edx+0x68],cl
  421907:	cmc    
  421908:	jno    0x421959
  42190a:	outs   dx,BYTE PTR ds:[esi]
  42190b:	imul   ecx,ecx,0xa496e27b
  421911:	or     ch,dl
  421913:	es jmp 0xfac8ec67
  421919:	imul   ecx,DWORD PTR [eax-0x6c],0x72eaeb2d
  421920:	(bad)  
  421921:	mov    ds:0xf3ff3259,al
  421926:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421927:	jp     0x421974
  421929:	ret    
  42192a:	addr16 xchg edi,eax
  42192c:	popf   
  42192d:	ja     0x421968
  42192f:	outs   dx,DWORD PTR ds:[esi]
  421930:	and    dl,BYTE PTR [ebp-0x2843a5f6]
  421936:	jmp    0x2783:0xe7abdc7d
  42193d:	sbb    eax,0x1597c33b
  421942:	and    ah,BYTE PTR ds:0xc5d9842
  421948:	sar    esp,1
  42194a:	pop    edi
  42194b:	retf   
  42194c:	test   DWORD PTR [eax],ebp
  42194e:	cdq    
  42194f:	jb     0x421964
  421951:	lods   al,BYTE PTR ds:[esi]
  421952:	pop    esp
  421953:	jnp    0x42190e
  421955:	push   0x82be73d0
  42195a:	cmp    al,0x4e
  42195c:	adc    edi,edx
  42195e:	in     al,0x20
  421960:	ror    BYTE PTR [ecx-0x28cbd274],0xd6
  421967:	adc    dl,dl
  421969:	stos   DWORD PTR es:[edi],eax
  42196a:	mov    edi,0x57f0fb9b
  42196f:	fcmove st,st(4)
  421971:	sbb    BYTE PTR [ebx+0xc],0xc6
  421975:	out    dx,al
  421976:	or     DWORD PTR [edi+0x71],esi
  421979:	stos   DWORD PTR es:[edi],eax
  42197a:	add    eax,0xe84e4f4e
  42197f:	lods   al,BYTE PTR ds:[esi]
  421980:	pop    edi
  421981:	in     al,dx
  421982:	enter  0x6ec4,0x7f
  421986:	mov    DWORD PTR [edx-0x41c95662],ecx
  42198c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42198d:	nop
  42198e:	xor    ecx,eax
  421990:	mov    edi,0xe59f2eb
  421995:	mov    al,0x6b
  421997:	push   ss
  421998:	cmp    eax,0x9dc69b38
  42199d:	mov    al,ds:0x8b89e0fb
  4219a2:	out    0xcc,al
  4219a4:	loopne 0x421967
  4219a6:	lock push edx
  4219a8:	inc    ebx
  4219a9:	inc    edx
  4219aa:	fimul  WORD PTR [eax+0x3523d139]
  4219b0:	retf   
  4219b1:	sbb    BYTE PTR [edi+0x9],dh
  4219b4:	daa    
  4219b5:	and    DWORD PTR [ebx+ebx*4],edx
  4219b8:	arpl   WORD PTR ds:0xbbd65c24,bx
  4219be:	pop    edi
  4219bf:	cmp    eax,0x18b0e5e7
  4219c4:	fisttp QWORD PTR [ecx]
  4219c6:	xchg   edi,eax
  4219c7:	push   esi
  4219c8:	xchg   edx,eax
  4219c9:	dec    esi
  4219ca:	repz fmul st(1),st
  4219cd:	sbb    ebp,ebx
  4219cf:	push   esp
  4219d0:	ror    BYTE PTR [ecx],cl
  4219d2:	sub    BYTE PTR [edi+0x2e],dh
  4219d5:	sbb    ebp,DWORD PTR [edx+edx*2]
  4219d8:	jo     0x421a4b
  4219da:	les    edi,FWORD PTR es:[esi]
  4219dd:	stos   DWORD PTR es:[edi],eax
  4219de:	push   ss
  4219df:	dec    ebx
  4219e0:	lods   al,BYTE PTR ds:[esi]
  4219e1:	mov    dl,0x11
  4219e3:	pop    es
  4219e4:	aam    0x21
  4219e6:	std    
  4219e7:	ja     0x4219ce
  4219e9:	ret    
  4219ea:	pop    ds
  4219eb:	fwait
  4219ec:	cmp    BYTE PTR [eax-0x13828b6e],bh
  4219f2:	shl    DWORD PTR [ebx],0x1
  4219f5:	jg     0x4219a5
  4219f7:	and    eax,0xd20f32fc
  4219fc:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4219fe:	fiadd  DWORD PTR [ebx+0x7a]
  421a01:	retf   
  421a02:	(bad)  
  421a03:	out    0x39,eax
  421a05:	xchg   bl,bl
  421a07:	pop    ss
  421a08:	(bad)  
  421a09:	leave  
  421a0a:	scas   eax,DWORD PTR es:[edi]
  421a0b:	std    
  421a0c:	cmp    eax,DWORD PTR [esi-0x69458b02]
  421a12:	pop    ds
  421a13:	ret    
  421a14:	daa    
  421a15:	cmp    DWORD PTR [ebp-0x2a],0xea754082
  421a1c:	cmp    DWORD PTR [ebx],ecx
  421a1e:	push   edi
  421a1f:	jl     0x4219a3
  421a21:	enter  0x967,0xd8
  421a25:	jmp    0xcd65b72d
  421a2a:	pop    esp
  421a2b:	dec    edi
  421a2c:	mov    edx,0xf8a0fc32
  421a31:	mov    ecx,0x4245389a
  421a36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a37:	push   ds
  421a38:	aas    
  421a39:	and    eax,0x806c36fc
  421a3e:	leave  
  421a3f:	cmp    al,0x12
  421a41:	cs addr16 and eax,0x7c261749
  421a48:	test   DWORD PTR [ebx+0x5bf64122],ecx
  421a4e:	pop    eax
  421a4f:	pop    ebp
  421a50:	aam    0x7c
  421a52:	out    dx,al
  421a53:	push   cs
  421a54:	ins    DWORD PTR es:[edi],dx
  421a55:	sub    DWORD PTR [edx],eax
  421a57:	leave  
  421a58:	push   es
  421a59:	cmp    eax,0xb9fa6a21
  421a5e:	or     DWORD PTR ds:0xd6d4b2df,esi
  421a64:	xchg   bh,dl
  421a66:	sub    eax,0x51c432b2
  421a6b:	test   al,0x47
  421a6d:	sar    DWORD PTR [ecx],cl
  421a6f:	or     eax,0x4634f8ba
  421a74:	sbb    al,0x6a
  421a76:	fistp  DWORD PTR [ecx-0x1a]
  421a79:	aas    
  421a7a:	(bad)  
  421a7b:	into   
  421a7c:	mov    bl,0xab
  421a7e:	mov    ch,0x1c
  421a80:	cmp    edx,ecx
  421a82:	enter  0x3077,0x91
  421a86:	xlat   BYTE PTR ds:[ebx]
  421a87:	into   
  421a88:	mov    ch,BYTE PTR [eax+0x67df0784]
  421a8e:	int    0x23
  421a90:	bound  edx,QWORD PTR [edi+0x1f]
  421a93:	add    eax,0x2d7681ce
  421a98:	or     bh,BYTE PTR [ecx+0x52]
  421a9b:	mov    esi,0x31e1526e
  421aa0:	lock lds edi,FWORD PTR [ecx]
  421aa3:	scas   eax,DWORD PTR es:[edi]
  421aa4:	call   0xb851:0x9ff4e959
  421aab:	aam    0x34
  421aad:	mov    esp,0xb13456cc
  421ab2:	push   eax
  421ab3:	jl     0x421b31
  421ab5:	in     eax,dx
  421ab6:	xchg   BYTE PTR ds:0xcbf3ca15,al
  421abc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421abd:	stc    
  421abe:	add    ebp,DWORD PTR [edi+edi*8]
  421ac1:	and    al,0x8d
  421ac3:	add    DWORD PTR [ebx-0x24dd0167],0x22b1b7ab
  421acd:	imul   ebp,DWORD PTR [ebx],0xffffff93
  421ad0:	out    0x8d,al
  421ad2:	fild   QWORD PTR [edx+ecx*8-0x13e14e0c]
  421ad9:	mov    esi,0xec83fb1
  421ade:	repnz cmp DWORD PTR [ebp+edi*2-0x2e040079],eax
  421ae6:	mov    ch,0x9e
  421ae8:	mov    dh,BYTE PTR [eax+0x5e25ce68]
  421aee:	mov    edi,0x6207f01f
  421af3:	inc    ebp
  421af4:	in     al,dx
  421af5:	scas   eax,DWORD PTR es:[edi]
  421af6:	cmp    eax,0x6442accb
  421afb:	mov    ebp,0xcf60c270
  421b00:	std    
  421b01:	dec    esi
  421b02:	sbb    DWORD PTR [edi+0x39a572fd],edx
  421b08:	inc    edx
  421b09:	stos   DWORD PTR es:[edi],eax
  421b0a:	add    BYTE PTR [ebx+0x74],cl
  421b0d:	sub    DWORD PTR [ebx+0x3],esi
  421b10:	loop   0x421b2a
  421b12:	and    eax,0xf5572158
  421b17:	mov    ds:0xe73d0c69,al
  421b1c:	xor    eax,DWORD PTR [edi]
  421b1e:	mov    ecx,0x1257b019
  421b23:	popf   
  421b24:	mov    BYTE PTR [ecx+esi*2-0x20],0x3f
  421b29:	(bad)  
  421b2a:	hlt    
  421b2b:	mov    ecx,0x27e7811e
  421b30:	jno    0x421b92
  421b32:	(bad)  
  421b33:	sahf   
  421b34:	xchg   ecx,eax
  421b35:	add    BYTE PTR [edi+edx*4],dh
  421b38:	jmp    0x421ac0
  421b3a:	xchg   BYTE PTR [ebp-0x4f],ch
  421b3d:	jecxz  0x421b2c
  421b3f:	push   eax
  421b40:	add    cl,BYTE PTR [ebp+0x4e]
  421b43:	sbb    esp,DWORD PTR [edi+0x3f]
  421b46:	ins    DWORD PTR es:[edi],dx
  421b47:	mov    ds:0xcd6721c8,eax
  421b4c:	pop    edx
  421b4d:	shr    BYTE PTR [ebx+eax*1-0x7bb4a18b],0x75
  421b55:	test   BYTE PTR [edi+0x26],bh
  421b58:	test   BYTE PTR [ebx+0x1c],bl
  421b5b:	imul   edx,ebp,0x41531f5
  421b61:	sbb    al,0xe3
  421b63:	jecxz  0x421b05
  421b65:	cmp    al,0x6
  421b67:	mov    ebp,ecx
  421b69:	mov    eax,0x5d0c6c18
  421b6e:	inc    edi
  421b6f:	sbb    BYTE PTR [eax],ch
  421b71:	aas    
  421b72:	(bad)  
  421b74:	jmp    0x6709b2a7
  421b79:	jbe    0x421b80
  421b7b:	sbb    al,0xe2
  421b7d:	sbb    eax,0xeb9b1ef5
  421b82:	push   edi
  421b83:	int    0x24
  421b85:	stos   DWORD PTR es:[edi],eax
  421b86:	cmc    
  421b87:	scas   eax,DWORD PTR es:[edi]
  421b88:	mov    eax,ds:0xaf5f16e3
  421b8d:	stos   BYTE PTR es:[edi],al
  421b8e:	stos   DWORD PTR es:[edi],eax
  421b8f:	jno    0x421b50
  421b91:	(bad)  
  421b92:	jl     0x421b7c
  421b94:	cmp    eax,ecx
  421b96:	jge    0x421bb5
  421b98:	stos   BYTE PTR es:[edi],al
  421b99:	aam    0xf8
  421b9b:	pop    es
  421b9c:	lods   eax,DWORD PTR ds:[esi]
  421b9d:	aam    0x2b
  421b9f:	in     eax,dx
  421ba0:	out    0xd9,al
  421ba2:	push   esp
  421ba3:	ins    BYTE PTR es:[edi],dx
  421ba4:	outs   dx,BYTE PTR ds:[esi]
  421ba5:	mov    dl,0xd
  421ba7:	xor    eax,0x493a1eae
  421bac:	daa    
  421bad:	outs   dx,BYTE PTR ds:[esi]
  421bae:	stos   DWORD PTR es:[edi],eax
  421baf:	stc    
  421bb0:	repz dec esi
  421bb2:	(bad)  
  421bb3:	mov    edi,DWORD PTR [eax-0x7d]
  421bb6:	adc    ah,BYTE PTR [eax-0xa]
  421bb9:	mov    ebx,0x4b23b6cf
  421bbe:	jbe    0x421b7e
  421bc0:	cmp    BYTE PTR [eax-0xf],dl
  421bc3:	push   es
  421bc4:	dec    esi
  421bc5:	popa   
  421bc6:	cmp    eax,0xb88eec72
  421bcb:	enter  0x231d,0xdd
  421bcf:	test   dh,ah
  421bd1:	jmp    0x421b80
  421bd3:	inc    DWORD PTR [ebx+0x52dd10bb]
  421bd9:	jg     0x421bce
  421bdb:	popa   
  421bdc:	jo     0x421b7a
  421bde:	xchg   ebx,eax
  421bdf:	ds mov dh,0x7a
  421be2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421be3:	scas   al,BYTE PTR es:[edi]
  421be4:	push   DWORD PTR [ecx-0x172f5045]
  421bea:	repnz xor DWORD PTR [edx],edi
  421bed:	sbb    edx,0xffffffbe
  421bf0:	les    edx,FWORD PTR [esi+edi*4]
  421bf3:	pop    DWORD PTR [edi]
  421bf5:	(bad)  [esi]
  421bf7:	and    al,0x91
  421bf9:	test   eax,0x4a22b3b7
  421bfe:	pop    ss
  421bff:	xchg   esp,eax
  421c00:	(bad)  
  421c01:	cmp    ah,ch
  421c03:	les    ecx,FWORD PTR [edx+0x162d18d1]
  421c09:	mov    dh,0x87
  421c0b:	leave  
  421c0c:	sub    eax,0xaa115fc2
  421c11:	rcl    DWORD PTR [eax],0x93
  421c14:	and    dh,BYTE PTR [eax]
  421c16:	sbb    eax,0xa770bbeb
  421c1b:	mov    eax,0x1d359210
  421c20:	fisub  DWORD PTR [esi+edx*1-0x63fd36d1]
  421c27:	ds je  0x421c3f
  421c2a:	or     edx,DWORD PTR [ebp+0x6cf85c65]
  421c30:	push   edx
  421c31:	in     eax,0xb1
  421c33:	les    eax,FWORD PTR [ebp+edi*1-0x71afa2db]
  421c3a:	loopne 0x421c64
  421c3c:	pop    ebp
  421c3d:	cmp    eax,edx
  421c3f:	add    DWORD PTR [esp+esi*4],0xc3e11f1c
  421c46:	sti    
  421c47:	imul   ebx,DWORD PTR [edx+0x31],0xa6a6b8c
  421c4e:	(bad)  
  421c4f:	in     eax,0xcf
  421c51:	dec    ecx
  421c52:	pop    esi
  421c53:	jmp    0x421c83
  421c55:	(bad)  
  421c56:	ficomp DWORD PTR [edi]
  421c58:	xor    ch,dl
  421c5a:	xchg   DWORD PTR [eax+0x12],edx
  421c5d:	iret   
  421c5e:	stc    
  421c5f:	lahf   
  421c60:	dec    edx
  421c61:	pop    ebp
  421c62:	in     eax,0x8
  421c64:	and    bl,BYTE PTR [edx-0x39]
  421c67:	call   0xcf65:0xffb16116
  421c6e:	rcr    BYTE PTR [ebx],0x85
  421c71:	xor    eax,0x6762b721
  421c76:	pop    esp
  421c77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c78:	push   esi
  421c79:	push   ebp
  421c7a:	imul   edx,DWORD PTR [esi+0x2a869006],0xc9dc0d26
  421c84:	enter  0xbe6d,0x5d
  421c88:	stos   BYTE PTR es:[edi],al
  421c89:	and    DWORD PTR [ebp+0x17e35d4c],0xffffffe4
  421c90:	(bad)  
  421c91:	jbe    0x421d06
  421c93:	inc    BYTE PTR [edx-0xb]
  421c96:	cmp    bl,BYTE PTR [ebx-0x1d]
  421c99:	or     DWORD PTR [ecx],esp
  421c9b:	and    cl,dl
  421c9d:	ja     0x421ce1
  421c9f:	xchg   edi,eax
  421ca0:	aad    0xe8
  421ca2:	jge    0x421c79
  421ca4:	scas   al,BYTE PTR es:[edi]
  421ca5:	out    0x8a,eax
  421ca7:	or     BYTE PTR [esi+edi*4-0x17],dl
  421cab:	cwde   
  421cac:	ins    DWORD PTR es:[edi],dx
  421cad:	dec    esi
  421cae:	adc    DWORD PTR [eax+eiz*2-0x60],edx
  421cb2:	xor    cl,dh
  421cb4:	xor    ah,BYTE PTR [edx+0x2a1956a]
  421cba:	into   
  421cbb:	ret    0x9d57
  421cbe:	ret    
  421cbf:	lock adc ah,bl
  421cc2:	(bad)  [edx+0x2a]
  421cc5:	sbb    esi,DWORD PTR [ecx+0x75c793af]
  421ccb:	xchg   ecx,eax
  421ccc:	loopne 0x421ccb
  421cce:	xor    al,0xe
  421cd0:	mov    esi,0x99a3dc3e
  421cd5:	bswap  edi
  421cd7:	inc    edi
  421cd8:	push   ebx
  421cd9:	or     DWORD PTR [edi+0x50e52f4],esi
  421cdf:	dec    esi
  421ce0:	inc    edx
  421ce1:	jmp    0x635c0a12
  421ce6:	push   0x65d5caa2
  421ceb:	xchg   DWORD PTR [eax],edx
  421ced:	(bad)  
  421cee:	ins    BYTE PTR es:[edi],dx
  421cef:	lods   al,BYTE PTR ds:[esi]
  421cf0:	sub    bl,bh
  421cf2:	push   ecx
  421cf3:	test   eax,0xdaaa6647
  421cf8:	xor    ebx,DWORD PTR [ecx+0x7d83a3ff]
  421cfe:	sub    BYTE PTR [edi+0x71278653],ah
  421d04:	xchg   ah,bl
  421d06:	push   cs
  421d07:	cmc    
  421d08:	and    BYTE PTR [esi-0x17e9933b],ch
  421d0e:	mov    esi,DWORD PTR [edx+edx*8-0xf83e755]
  421d15:	jb     0x421d80
  421d17:	cmp    eax,0xbca2fa70
  421d1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d1d:	fbld   TBYTE PTR [eax-0x34]
  421d20:	outs   dx,DWORD PTR ds:[esi]
  421d21:	cmp    esi,ebp
  421d23:	out    dx,al
  421d24:	ficomp DWORD PTR [edi]
  421d26:	mov    ds:0x14c7aa8f,eax
  421d2b:	or     eax,0xf79c3f5a
  421d30:	pop    eax
  421d31:	rol    DWORD PTR [ecx],1
  421d33:	fs jp  0x421d37
  421d36:	sbb    BYTE PTR [edx+ebx*2+0x66],ch
  421d3a:	lahf   
  421d3b:	rcl    DWORD PTR [esi-0x4d],0x8
  421d3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d40:	cmp    eax,0x6eb801de
  421d45:	jbe    0x421d4e
  421d47:	dec    ebx
  421d48:	add    ebp,ebx
  421d4a:	adc    eax,0xb194c9b7
  421d4f:	mov    al,0xd3
  421d51:	dec    esi
  421d52:	cmp    al,0xe5
  421d54:	mov    ecx,0x455a73f3
  421d59:	xchg   edi,eax
  421d5a:	inc    ebp
  421d5b:	addr16 mov dl,0x7d
  421d5e:	mov    esp,0x88c794e0
  421d63:	xor    al,0x79
  421d66:	jns    0x421d1f
  421d68:	and    edx,ebx
  421d6a:	cmp    DWORD PTR [edx-0x75af0cb3],eax
  421d70:	retf   
  421d71:	jg     0x421d4f
  421d73:	cmp    BYTE PTR [esi],bh
  421d75:	dec    ebx
  421d76:	jge    0x421deb
  421d78:	jmp    0x421d90
  421d7a:	vaddss xmm6,xmm3,DWORD PTR [eax*2+0x2302b5d2]
  421d83:	scas   eax,DWORD PTR es:[edi]
  421d84:	mov    al,0xe3
  421d86:	adc    BYTE PTR [ebx],0xaf
  421d89:	daa    
  421d8a:	sbb    al,ch
  421d8c:	and    DWORD PTR [ebp-0x8],esi
  421d8f:	shl    DWORD PTR [edx-0x13daeb86],1
  421d95:	out    0x63,al
  421d97:	adc    bl,BYTE PTR [ebp-0x2908290d]
  421d9d:	push   0xffffffa9
  421d9f:	rcl    BYTE PTR [edi],0x35
  421da2:	cmp    edx,esp
  421da4:	push   ecx
  421da5:	jns    0x421dc8
  421da7:	lahf   
  421da8:	popf   
  421da9:	or     BYTE PTR [eax],bl
  421dab:	scas   al,BYTE PTR es:[edi]
  421dac:	lods   al,BYTE PTR ds:[esi]
  421dad:	stos   BYTE PTR es:[edi],al
  421dae:	rol    BYTE PTR [ecx-0x61],0x89
  421db2:	das    
  421db3:	cmp    eax,0x353dd955
  421db8:	das    
  421db9:	(bad)  [esi-0x51]
  421dbc:	outs   dx,BYTE PTR ds:[esi]
  421dbd:	sar    bh,0xe9
  421dc0:	sub    DWORD PTR [eax],edi
  421dc2:	iret   
  421dc3:	ret    0x2136
  421dc6:	out    dx,eax
  421dc7:	xor    BYTE PTR [ecx],ah
  421dc9:	inc    edx
  421dca:	hlt    
  421dcb:	(bad)  
  421dcc:	xchg   ecx,eax
  421dcd:	sbb    al,al
  421dcf:	in     al,0x24
  421dd1:	(bad)  
  421dd2:	or     al,0x41
  421dd4:	repnz lods eax,DWORD PTR ds:[esi]
  421dd6:	sbb    DWORD PTR [ebx-0x2bdbbab],0xca1f49a8
  421de0:	fimul  WORD PTR [esi-0x74]
  421de3:	ds pop ebp
  421de5:	loopne 0x421e10
  421de7:	and    eax,0x5e8a0ff1
  421dec:	imul   ebx,DWORD PTR [ecx+edx*1],0x2b77f22f
  421df3:	mov    cl,0xee
  421df5:	cmp    eax,0x19582fe0
  421dfa:	jge    0x421e1d
  421dfc:	loopne 0x421dc3
  421dfe:	aas    
  421dff:	out    dx,eax
  421e00:	xor    DWORD PTR [eax],edx
  421e02:	cmc    
  421e03:	sti    
  421e04:	push   es
  421e05:	or     eax,0x42826f2d
  421e0a:	addr16 iret 
  421e0c:	or     BYTE PTR [edi+0x6f3a49e8],dl
  421e12:	pop    esi
  421e13:	shr    BYTE PTR [edx-0x1a],1
  421e16:	fstenv [edx-0x51]
  421e1a:	sbb    edx,DWORD PTR [edi+edi*2+0x43]
  421e1e:	aam    0xa7
  421e20:	not    DWORD PTR [ebx-0x34]
  421e23:	adc    eax,0x214540d1
  421e28:	call   DWORD PTR [edx+0x17077cf3]
  421e2e:	xchg   esi,eax
  421e2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e30:	and    edx,DWORD PTR [edx+esi*1+0x6bc27c69]
  421e37:	xor    al,0x20
  421e39:	inc    eax
  421e3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e3b:	mov    ebp,0x339a274a
  421e40:	retf   0x1951
  421e43:	je     0x421e73
  421e45:	icebp  
  421e46:	test   ecx,ecx
  421e48:	mov    fs,WORD PTR ds:0xed1bcc76
  421e4e:	(bad)  
  421e50:	sub    DWORD PTR [edi+eax*8],ebx
  421e53:	ja     0x421dd7
  421e55:	mov    ah,BYTE PTR [edx+0x25]
  421e58:	int3   
  421e59:	or     esi,edi
  421e5b:	int3   
  421e5c:	into   
  421e5d:	jecxz  0x421e04
  421e5f:	test   DWORD PTR [ebp-0x3a5d3aff],edx
  421e65:	pop    eax
  421e66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e67:	mov    eax,ecx
  421e69:	push   ss
  421e6a:	sbb    ebp,DWORD PTR [ecx]
  421e6c:	push   edi
  421e6d:	mov    al,0xa1
  421e6f:	test   ecx,esi
  421e71:	add    eax,0xbef5326e
  421e76:	add    BYTE PTR fs:[edx],bh
  421e79:	dec    eax
  421e7a:	int    0xa2
  421e7c:	and    DWORD PTR [ecx+0x4dbc2665],eax
  421e82:	and    ecx,ebx
  421e84:	aam    0x7d
  421e86:	cmp    DWORD PTR [eax-0x7ee558be],0xffffffa8
  421e8d:	add    dh,bh
  421e8f:	dec    ebp
  421e90:	jmp    0x421e96
  421e92:	in     al,dx
  421e93:	imul   eax,eax,0xffffff9e
  421e96:	mov    eax,0xb454af4b
  421e9b:	jmp    0x7f8d:0xcd6d88d0
  421ea2:	in     eax,0xdd
  421ea4:	pop    ebp
  421ea5:	pop    es
  421ea6:	and    ecx,DWORD PTR [ecx]
  421ea8:	push   0x17f912de
  421ead:	jae    0x421edd
  421eaf:	aas    
  421eb0:	push   0x2
  421eb2:	ret    0x19ac
  421eb5:	test   BYTE PTR [edx-0x33],dl
  421eb8:	or     edi,ebx
  421eba:	push   ds
  421ebb:	shr    DWORD PTR [edi-0x12],0xe0
  421ebf:	cmp    eax,0x203d085e
  421ec4:	lods   eax,DWORD PTR ds:[esi]
  421ec5:	mov    al,ds:0x3c7b8039
  421eca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ecb:	push   edx
  421ecc:	rol    edi,cl
  421ece:	inc    ebx
  421ecf:	xchg   edx,eax
  421ed1:	std    
  421ed2:	in     eax,0x57
  421ed4:	add    eax,0x2e44d8b6
  421ed9:	or     esi,ecx
  421edb:	jp     0x421e5f
  421edd:	jg     0x421f3f
  421edf:	test   eax,0x347f30f3
  421ee4:	pop    esp
  421ee5:	jbe    0x421efe
  421ee7:	inc    esp
  421ee8:	xlat   BYTE PTR ds:[ebx]
  421ee9:	shr    BYTE PTR [ecx-0x3cb68ce1],1
  421eef:	fsubr  DWORD PTR [ecx+0x5a08e612]
  421ef5:	icebp  
  421ef6:	adc    BYTE PTR [ebp+0x1],ah
  421ef9:	inc    esp
  421efa:	cmp    dh,BYTE PTR [ecx]
  421efc:	xchg   edi,eax
  421efd:	pop    eax
  421efe:	jno    0x421ee9
  421f00:	dec    esp
  421f01:	jnp    0x421eee
  421f03:	or     edi,ecx
  421f05:	push   edi
  421f06:	cmp    eax,0xcf2230d3
  421f0b:	nop
  421f0c:	fstp   TBYTE PTR [esi-0x17]
  421f0f:	data16 cmp cl,BYTE PTR es:[ecx]
  421f13:	test   BYTE PTR [eax+edx*4],0xd9
  421f17:	mov    eax,ds:0xcc08f6f5
  421f1c:	jns    0xb0c88cb1
  421f22:	jle    0x421f0c
  421f24:	icebp  
  421f25:	into   
  421f26:	add    esi,DWORD PTR [edx+ecx*4+0x5451abc5]
  421f2d:	inc    esp
  421f2e:	jle    0x421eb8
  421f30:	sbb    eax,esi
  421f32:	hlt    
  421f33:	popf   
  421f34:	retf   0x1a56
  421f37:	jle    0x421f46
  421f39:	punpckhwd mm3,QWORD PTR [ecx+0x3f748d54]
  421f40:	or     dl,dh
  421f42:	xchg   BYTE PTR [esi],bl
  421f44:	daa    
  421f45:	(bad)  
  421f46:	stc    
  421f47:	jle    0x421eca
  421f49:	(bad)  
  421f4a:	call   0xd94d1d4d
  421f4f:	sub    eax,0x768ab051
  421f54:	jne    0x421fa6
  421f56:	arpl   WORD PTR [ebp+ecx*4-0x6c07afed],bx
  421f5d:	scas   al,BYTE PTR es:[edi]
  421f5e:	das    
  421f5f:	arpl   WORD PTR [ebx],ax
  421f61:	mov    bl,0xbc
  421f63:	loop   0x421f29
  421f65:	adc    dh,BYTE PTR [esp+eax*4+0x7ded3398]
  421f6c:	mov    ch,0x9c
  421f6e:	mov    bh,0x59
  421f70:	jle    0x421f15
  421f72:	add    esp,esp
  421f74:	push   0xd0ea257a
  421f79:	jl     0x421ff0
  421f7b:	and    DWORD PTR [ecx],edx
  421f7d:	add    eax,0x7adfa98c
  421f82:	es mov cl,0x15
  421f85:	iret   
  421f86:	sub    BYTE PTR [esi-0xb25b996],bh
  421f8c:	pop    esp
  421f8d:	shr    dl,cl
  421f8f:	daa    
  421f90:	lods   eax,DWORD PTR ds:[esi]
  421f91:	enter  0x394c,0x7f
  421f95:	jbe    0x421f57
  421f97:	dec    DWORD PTR [edi]
  421f99:	mov    ah,0x67
  421f9b:	pop    ebx
  421f9c:	inc    edx
  421f9e:	scas   al,BYTE PTR es:[edi]
  421f9f:	push   0xfffffffb
  421fa1:	adc    DWORD PTR [eax],eax
  421fa3:	je     0x42200f
  421fa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fa6:	jmp    0x421ffb
  421fa8:	cli    
  421fa9:	and    eax,0x60149b46
  421fae:	leave  
  421faf:	jmp    0x6ffd:0x3e24bd04
  421fb6:	(bad)  
  421fb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fb8:	jl     0x421f9c
  421fba:	mov    dh,0x2c
  421fbc:	jne    0x421fdf
  421fbe:	pop    ecx
  421fbf:	cmp    al,0x22
  421fc1:	mov    eax,es
  421fc3:	cmp    DWORD PTR [esi-0x48],eax
  421fc6:	xor    BYTE PTR [ecx],al
  421fc8:	pop    edx
  421fc9:	sub    eax,edi
  421fcb:	shl    DWORD PTR ds:[edi],cl
  421fce:	pop    ecx
  421fcf:	arpl   WORD PTR [edi],bp
  421fd1:	loope  0x421fc5
  421fd3:	cmp    edi,DWORD PTR [edx+0x68a1ba84]
  421fd9:	ins    BYTE PTR es:[edi],dx
  421fda:	(bad)  
  421fdb:	stos   BYTE PTR es:[edi],al
  421fdc:	outs   dx,DWORD PTR ds:[esi]
  421fdd:	cmp    edx,DWORD PTR [esi-0x6f872446]
  421fe3:	pop    esp
  421fe4:	jecxz  0x421f83
  421fe6:	stos   BYTE PTR es:[edi],al
  421fe7:	not    DWORD PTR [edi]
  421fe9:	xchg   BYTE PTR gs:0xcb88747e,dh
  421ff0:	clc    
  421ff1:	ror    DWORD PTR [ebx+0x7e5437fc],0x6
  421ff8:	inc    esi
  421ff9:	mov    edi,0x45ae50ca
  421ffe:	repnz xor BYTE PTR [ecx-0x725e1964],cl
  422005:	push   cs
  422006:	test   eax,0x632a206d
  42200b:	pop    ds
  42200c:	xor    eax,0xa30982dd
  422011:	shr    BYTE PTR [ebx],1
  422013:	push   ss
  422014:	scas   eax,DWORD PTR es:[edi]
  422015:	mov    ecx,0x7fd76c48
  42201a:	lea    edi,[eax+0x4833cc8d]
  422020:	dec    esp
  422021:	lock test al,0xc1
  422024:	xchg   edi,eax
  422025:	inc    esi
  422026:	rcr    ebp,cl
  422028:	or     al,0x6
  42202a:	cmc    
  42202b:	call   0x219e:0xced27851
  422032:	xor    DWORD PTR [ecx+0xff20d98],0xffffffc5
  422039:	(bad)  
  42203a:	stc    
  42203b:	cmp    ecx,DWORD PTR [eax-0x4c61a1fb]
  422041:	aaa    
  422042:	or     BYTE PTR [ebx+0x2bef463f],0x15
  422049:	enter  0x857b,0xfa
  42204d:	js     0x421ff3
  42204f:	test   eax,0x2eecf2bc
  422054:	std    
  422055:	sub    BYTE PTR [edi],al
  422057:	jl     0x4220d7
  422059:	(bad)  
  42205a:	(bad)  
  42205b:	das    
  42205c:	mov    al,0x43
  42205e:	fild   WORD PTR [ebx-0x3a67c92b]
  422064:	lds    edx,FWORD PTR [esi-0x15]
  422067:	jl     0x422059
  422069:	out    0x5c,al
  42206b:	sbb    eax,0x2d2c51c3
  422070:	not    bh
  422072:	scas   al,BYTE PTR es:[edi]
  422073:	xor    DWORD PTR [eax-0x72],esp
  422076:	sbb    DWORD PTR [ebx+0x37],eax
  422079:	xchg   ebp,eax
  42207a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42207b:	xlat   BYTE PTR ds:[ebx]
  42207c:	cs mov edi,0xb9c593bd
  422082:	ja     0x4220d5
  422084:	mov    ebp,DWORD PTR [ebp+0x13]
  422087:	push   edi
  422088:	add    al,0x80
  42208a:	addr16 imul edx,edi,0x2d
  42208e:	and    bh,0x93
  422091:	sar    edx,cl
  422093:	lds    esi,FWORD PTR [edx-0x32]
  422096:	and    eax,0x99d25b21
  42209b:	ja     0x422110
  42209d:	cmp    BYTE PTR [esi-0x40],bh
  4220a0:	mov    ds:0x1263b32b,eax
  4220a5:	sar    DWORD PTR [edx],cl
  4220a7:	(bad)  
  4220a8:	mov    edi,0x3f8c47e2
  4220ad:	stos   DWORD PTR es:[edi],eax
  4220ae:	(bad)  
  4220af:	popfw  
  4220b1:	jg     0x422059
  4220b3:	sbb    al,0xc4
  4220b5:	dec    esp
  4220b6:	xor    eax,0x7eb85c31
  4220bb:	dec    ebx
  4220bc:	xchg   ebp,eax
  4220bd:	inc    esp
  4220be:	test   al,0x3c
  4220c0:	(bad)  
  4220c1:	push   edi
  4220c2:	js     0x422070
  4220c4:	cld    
  4220c5:	cvttps2pi mm6,xmm2
  4220c8:	shr    cl,0x76
  4220cb:	(bad)  
  4220cc:	pop    ebp
  4220cd:	fldcw  WORD PTR [ecx+0x6ff8c0c8]
  4220d3:	je     0x4220fb
  4220d5:	rcr    ebx,1
  4220d7:	jmp    0x1bba38fd
  4220dc:	xchg   esi,eax
  4220dd:	retf   0x174c
  4220e0:	mov    BYTE PTR [edi+0x3ccf4fbf],cl
  4220e6:	test   eax,0x7073d627
  4220eb:	add    eax,0x6855314a
  4220f0:	xchg   ebp,eax
  4220f1:	mov    cl,0xe2
  4220f3:	pop    ecx
  4220f4:	xchg   ecx,eax
  4220f5:	frstor [eax-0x61]
  4220f8:	mov    al,ds:0xe4c07822
  4220fe:	inc    ecx
  4220ff:	das    
  422100:	pop    ss
  422101:	cwde   
  422102:	xlat   BYTE PTR ds:[ebx]
  422103:	mov    dl,0x9f
  422105:	jo     0x422177
  422107:	pop    es
  422108:	and    al,0xdf
  42210a:	cmp    bh,BYTE PTR ds:0x5f01ff0c
  422110:	mov    DWORD PTR [ecx-0x10],esi
  422113:	jmp    0x925c:0x62aafef8
  42211a:	scas   eax,DWORD PTR es:[edi]
  42211b:	dec    esi
  42211c:	jmp    0xd5c:0x8d4231b4
  422123:	loope  0x4220e4
  422125:	push   edi
  422126:	enter  0x19aa,0xd2
  42212a:	dec    ecx
  42212b:	mov    dh,0x3e
  42212d:	inc    edi
  42212e:	and    al,0xd8
  422130:	xor    DWORD PTR [ecx+0x69],0x6c032b21
  422137:	stos   DWORD PTR es:[edi],eax
  422138:	fisttp DWORD PTR [ecx+0x33ee937f]
  42213e:	test   bh,dl
  422140:	jnp    0x4220e3
  422142:	pop    edi
  422143:	adc    esp,DWORD PTR [ebp-0x241750b]
  422149:	push   ebx
  42214a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42214b:	cwde   
  42214c:	daa    
  42214d:	addr16 aad 0x98
  422150:	ret    
  422151:	mov    esp,0xc413b258
  422156:	int    0xbb
  422158:	inc    esi
  422159:	pop    edx
  42215a:	jnp    0x422111
  42215c:	js     0x422169
  42215e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42215f:	mov    ebp,0x613f7634
  422164:	test   al,0xc2
  422166:	jg     0x4221d6
  422168:	xchg   ebp,eax
  422169:	mov    ds:0x2d668ffc,al
  42216e:	cmc    
  42216f:	enter  0xa72d,0xa1
  422173:	sbb    al,0x48
  422175:	ror    BYTE PTR [edx+0x7b],1
  422178:	(bad)  
  422179:	out    0xf8,eax
  42217b:	retf   0xbd79
  42217e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42217f:	scas   eax,DWORD PTR es:[edi]
  422180:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422181:	cmp    eax,0x305ad63b
  422186:	fsub   DWORD PTR [eax-0x3f]
  422189:	mov    ebx,0xd5f1bd95
  42218e:	loope  0x422131
  422190:	or     bl,dl
  422192:	and    DWORD PTR [edi-0x5d5ca18d],ebp
  422198:	popf   
  422199:	adc    bh,BYTE PTR [esp+eax*8+0x35b5f467]
  4221a0:	ss daa 
  4221a2:	push   ebx
  4221a3:	xchg   ebp,eax
  4221a4:	and    dl,BYTE PTR [edi]
  4221a6:	mov    ah,0xac
  4221a8:	jp     0x422153
  4221aa:	xor    DWORD PTR [edi+edi*1-0x38e45be0],esi
  4221b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221b2:	in     eax,0x9c
  4221b4:	sub    eax,esp
  4221b6:	jmp    0x2bb2e7cc
  4221bb:	sbb    eax,0x6098369c
  4221c0:	fidiv  WORD PTR [edi]
  4221c2:	push   esp
  4221c3:	xchg   esp,eax
  4221c4:	mov    edx,0xaf849839
  4221c9:	lock test eax,0x678148f1
  4221cf:	mov    ah,BYTE PTR [ebx]
  4221d1:	mov    ebp,DWORD PTR [edi]
  4221d3:	xor    eax,0x369b0606
  4221d8:	sub    edi,DWORD PTR [esi+0x5]
  4221db:	dec    ecx
  4221dc:	ror    ah,0x8f
  4221df:	jp     0x4221f6
  4221e1:	pop    edx
  4221e2:	(bad)  
  4221e3:	pop    ds
  4221e4:	ja     0x422170
  4221e6:	pop    eax
  4221e7:	shl    BYTE PTR [edi-0x69],cl
  4221ea:	jmp    0x8425ccfe
  4221ef:	les    eax,FWORD PTR [ecx-0x34e38129]
  4221f5:	enter  0x7417,0x26
  4221f9:	mov    ecx,0x826082bf
  4221fe:	sub    DWORD PTR [ebx+0x75],0x49c2fb0f
  422205:	jmp    0x4624b168
  42220a:	jle    0x4221d9
  42220c:	xlat   BYTE PTR ds:[ebx]
  42220d:	shl    DWORD PTR [eax+0x27],cl
  422210:	ss loopne 0x422270
  422213:	cmp    eax,0x90b515c6
  422218:	and    DWORD PTR [ebp-0x50],esi
  42221b:	add    ch,BYTE PTR [esp+0x11e75aaa]
  422222:	daa    
  422223:	loop   0x4221a9
  422225:	sub    al,0x13
  422227:	repz test DWORD PTR [edx+0x3b],eax
  42222b:	push   ecx
  42222c:	arpl   WORD PTR [edi],ax
  42222e:	mov    ch,0xcc
  422230:	int3   
  422231:	jg     0x4221ea
  422233:	das    
  422234:	ins    DWORD PTR es:[edi],dx
  422235:	inc    edi
  422236:	push   ebp
  422237:	idiv   DWORD PTR [bx+si]
  42223a:	sti    
  42223b:	inc    esp
  42223c:	or     al,dl
  42223e:	sbb    eax,0x6b19cf82
  422243:	pop    ss
  422244:	nop
  422245:	cmp    bl,BYTE PTR [ecx-0x59c14e16]
  42224b:	cmp    eax,0x8d59a40d
  422250:	call   0x4b2fa129
  422255:	out    dx,eax
  422256:	into   
  422257:	dec    esi
  422258:	jge    0x4221fc
  42225a:	hlt    
  42225b:	mov    WORD PTR [esi-0x2b],gs
  42225e:	repnz ins DWORD PTR es:[edi],dx
  422260:	dec    esi
  422261:	leave  
  422262:	adc    bl,bl
  422264:	push   0x12
  422266:	int3   
  422267:	seta   BYTE PTR [ecx+0x63]
  42226b:	jns    0x422252
  42226d:	ret    
  42226e:	mov    dl,0xe9
  422270:	xor    DWORD PTR [edx-0x65805e7f],esp
  422276:	sub    bh,ch
  422278:	xor    eax,0xe9c5c933
  42227d:	cdq    
  42227e:	mov    ds:0x78161e25,al
  422283:	jp     0x4222b1
  422285:	gs lahf 
  422287:	gs test al,0x1e
  42228a:	gs add ebx,ecx
  42228d:	test   edi,ecx
  42228f:	fnsave [edi+ecx*2-0x2eb9791b]
  422296:	xchg   BYTE PTR [edi],bl
  422298:	(bad)  
  422299:	mov    BYTE PTR [edi-0x1693783],dh
  42229f:	or     DWORD PTR [edx+edx*2-0x61aa777a],ebp
  4222a6:	in     eax,dx
  4222a7:	shr    DWORD PTR [edi-0xb],0x65
  4222ab:	jecxz  0x4222e5
  4222ad:	mov    BYTE PTR [edi+ebx*4-0x3d],bl
  4222b1:	pop    eax
  4222b2:	es repz dec ebx
  4222b5:	fcmovu st,st(6)
  4222b7:	mov    ds:0xa8bf0420,eax
  4222bc:	shl    BYTE PTR [esi],1
  4222be:	mov    eax,0x1f9bd3
  4222c3:	and    cl,bl
  4222c5:	push   ebx
  4222c6:	pop    eax
  4222c7:	or     eax,0x18a5d0a6
  4222cc:	mov    ds:0xf26dae62,al
  4222d1:	lahf   
  4222d2:	lock xchg BYTE PTR [ecx+eax*8+0x470adeff],ch
  4222da:	sbb    BYTE PTR [eax+0x78],bh
  4222dd:	jmp    0x7812acdb
  4222e2:	adc    bh,cl
  4222e4:	sub    al,0xb6
  4222e6:	mov    esp,DWORD PTR [eax-0x31]
  4222e9:	sub    al,0x96
  4222eb:	in     al,dx
  4222ec:	mov    ecx,ss
  4222ee:	scas   al,BYTE PTR es:[edi]
  4222ef:	xchg   esi,eax
  4222f0:	cmc    
  4222f1:	clc    
  4222f2:	mov    DWORD PTR [ecx+0x7a],edx
  4222f5:	fistp  QWORD PTR [ebx]
  4222f7:	xor    al,0xd3
  4222f9:	hlt    
  4222fa:	fxtract 
  4222fc:	and    esp,esi
  4222fe:	xchg   edi,eax
  4222ff:	out    0x8e,eax
  422301:	test   DWORD PTR [eax+0x48],esi
  422304:	bound  eax,QWORD PTR [ecx-0x592b85aa]
  42230a:	push   ebx
  42230b:	or     esi,ebp
  42230d:	jno    0x4222cf
  42230f:	mov    BYTE PTR [ebp-0x5764514b],bh
  422315:	stc    
  422316:	int3   
  422317:	or     eax,0x8a985745
  42231c:	add    al,0xc3
  42231e:	dec    ecx
  42231f:	ja     0x4222c1
  422321:	ins    BYTE PTR es:[edi],dx
  422322:	cmp    eax,0x45d477a1
  422327:	aas    
  422328:	pop    eax
  422329:	lods   al,BYTE PTR ds:[esi]
  42232a:	pop    edx
  42232b:	sbb    DWORD PTR [esi+0x6457bb5b],edx
  422331:	mov    esi,0x47a75696
  422336:	dec    ebx
  422337:	(bad)  
  422338:	push   edi
  422339:	inc    edx
  42233a:	imul   esp,DWORD PTR [edx-0x44],0xec5d7d9f
  422341:	iret   
  422342:	iret   
  422343:	mov    DWORD PTR [edi],esi
  422345:	in     al,0x2a
  422347:	enter  0x9dfa,0x1b
  42234b:	mov    esi,0xf80fcbe
  422350:	adc    dl,BYTE PTR [ebx+0x30]
  422353:	mov    edi,0x8f11f184
  422358:	mov    edi,0xc4eda970
  42235d:	xor    DWORD PTR [eax+0x15],esi
  422360:	(bad)  
  422362:	lea    ecx,[ebx-0x48a4862b]
  422368:	adc    eax,0xf38d677
  42236d:	cmp    DWORD PTR [edx],ecx
  42236f:	pop    ss
  422370:	stos   BYTE PTR es:[edi],al
  422371:	dec    esi
  422372:	aad    0xd6
  422374:	cdq    
  422375:	sbb    eax,0x49fc2323
  42237a:	mov    bh,0xc2
  42237c:	outs   dx,BYTE PTR ss:[esi]
  42237e:	addr16 gs fcmovnu st,st(1)
  422382:	adc    dh,BYTE PTR [ebp-0x49d99fdc]
  422388:	adc    eax,0xa1511884
  42238d:	jge    0x4223c3
  42238f:	(bad)  
  422390:	or     eax,0xc8d3b7ff
  422395:	cld    
  422396:	or     dl,BYTE PTR [eax]
  422398:	out    0xe8,al
  42239a:	icebp  
  42239b:	das    
  42239c:	ror    ebx,0x6
  42239f:	or     eax,0x87aa4c73
  4223a4:	or     BYTE PTR [ebx-0x43],dl
  4223a7:	leave  
  4223a8:	out    dx,eax
  4223a9:	add    DWORD PTR [ecx+0x3067aaa1],0x54092b48
  4223b3:	sbb    edx,esi
  4223b5:	fdivr  QWORD PTR [edx]
  4223b7:	je     0x42242f
  4223b9:	pop    esp
  4223ba:	sti    
  4223bb:	pop    ss
  4223bc:	sub    ebx,ebp
  4223be:	adc    al,0xad
  4223c0:	or     eax,0x6def41a0
  4223c5:	rol    DWORD PTR [eax+0x72ad7f27],1
  4223cb:	mov    edx,0xcbc80bd1
  4223d0:	sub    al,BYTE PTR [edx]
  4223d2:	ret    0x9382
  4223d5:	pop    ebx
  4223d6:	in     eax,dx
  4223d7:	iret   
  4223d8:	pop    eax
  4223d9:	push   ebp
  4223da:	and    al,0x1c
  4223dc:	scas   eax,DWORD PTR es:[edi]
  4223dd:	adc    DWORD PTR [esi],edi
  4223df:	xor    dh,cl
  4223e1:	xor    bh,BYTE PTR [edi]
  4223e3:	jl     0x4223d0
  4223e5:	fstp   QWORD PTR [ebx+0xd]
  4223e8:	ins    BYTE PTR es:[edi],dx
  4223e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223ea:	or     edi,esp
  4223ec:	sbb    esp,ebp
  4223ee:	stos   BYTE PTR es:[edi],al
  4223ef:	sahf   
  4223f0:	jno    0x4223ba
  4223f2:	(bad)  
  4223f3:	out    0xf2,eax
  4223f5:	jno    0x42239d
  4223f7:	jge    0x4223ba
  4223f9:	ins    BYTE PTR es:[edi],dx
  4223fa:	sub    eax,0x222353a6
  4223ff:	out    0xde,al
  422401:	mov    BYTE PTR [edi+edi*8-0x66cf5820],cl
  422408:	xchg   ecx,eax
  422409:	push   ebp
  42240a:	jle    0x4223b8
  42240c:	mov    ch,0xc1
  42240e:	int    0xec
  422410:	ins    DWORD PTR es:[edi],dx
  422411:	add    ch,bl
  422413:	stc    
  422414:	push   esp
  422415:	sbb    ebx,ebp
  422417:	dec    eax
  422418:	and    cl,dh
  42241a:	or     BYTE PTR [edi+0x2a],cl
  42241d:	cmp    DWORD PTR [eax+0x4c],0x4e234c18
  422424:	(bad)  
  422425:	sub    al,0xb9
  422427:	jmp    0x4223b6
  422429:	mov    bl,0xeb
  42242b:	mov    bl,0x59
  42242d:	neg    BYTE PTR fs:[edx]
  422430:	jecxz  0x422476
  422432:	das    
  422433:	xchg   esp,eax
  422434:	rcl    BYTE PTR [esp+eiz*8+0x47],cl
  422438:	fs mov ecx,es
  42243b:	loop   0x42244b
  42243d:	or     ebx,DWORD PTR [ebp+0x66d39dea]
  422443:	cdq    
  422444:	cmp    eax,0xd83681cd
  422449:	es das 
  42244b:	mov    ebx,cs
  42244d:	ja     0x422404
  42244f:	stos   DWORD PTR es:[edi],eax
  422450:	retf   0xec81
  422453:	xchg   DWORD PTR [ebx],ebx
  422455:	sub    dh,bh
  422457:	dec    ebx
  422458:	mov    esp,0x644acaaa
  42245d:	rcr    DWORD PTR [edi],1
  42245f:	jo     0x4224a8
  422461:	cmp    al,0x77
  422463:	push   0x1d
  422465:	and    ah,al
  422467:	mov    dl,0x6d
  422469:	loop   0x422494
  42246b:	loope  0x4224dd
  42246d:	dec    esp
  42246e:	adc    DWORD PTR [edx],esp
  422470:	ds popf 
  422472:	jg     0x4224a1
  422474:	push   ebp
  422475:	jg     0x42249c
  422477:	inc    ebx
  422478:	adc    BYTE PTR [eax+eiz*2+0x7b],dl
  42247c:	sub    al,0x60
  42247e:	in     al,0x46
  422480:	scas   al,BYTE PTR es:[edi]
  422481:	and    dh,BYTE PTR [ebx-0x6]
  422484:	mov    eax,0xdd849860
  422489:	mul    DWORD PTR [esi+0x1f]
  42248c:	clc    
  42248d:	mov    dh,0x95
  42248f:	jp     0x422488
  422491:	dec    ecx
  422492:	rcl    DWORD PTR [ebx],1
  422494:	inc    eax
  422495:	fs test eax,0x8a76a4c7
  42249b:	and    ebp,esi
  42249d:	dec    edx
  42249e:	hlt    
  42249f:	or     dl,BYTE PTR [edx-0x6be40c85]
  4224a5:	idiv   DWORD PTR [ebp+eiz*1-0xd256945]
  4224ac:	jno    0x422434
  4224ae:	lahf   
  4224af:	jnp    0x4224c8
  4224b1:	and    edx,DWORD PTR [ebx]
  4224b3:	addr16 push esi
  4224b5:	jne    0x4224c0
  4224b7:	jae    0x422489
  4224b9:	or     BYTE PTR [ecx],ch
  4224bb:	jp     0x4224bf
  4224bd:	and    esp,DWORD PTR [edi]
  4224bf:	mov    bh,0x8f
  4224c1:	add    bh,ch
  4224c3:	push   esp
  4224c4:	imul   eax,DWORD PTR [eax-0x2abd31b5],0xc112c646
  4224ce:	cmp    BYTE PTR [ebp+0x62aa31df],ch
  4224d4:	cld    
  4224d5:	mov    dl,0x51
  4224d7:	fs in  eax,0x7f
  4224da:	fistp  WORD PTR [eax]
  4224dc:	rcr    BYTE PTR [eax],1
  4224de:	push   esp
  4224df:	or     eax,0x3a81b8b2
  4224e4:	or     BYTE PTR [ebx],cl
  4224e6:	loopne 0x4224b5
  4224e8:	push   edx
  4224e9:	pop    edi
  4224ea:	(bad)  
  4224eb:	and    BYTE PTR [ebx+ecx*2],ah
  4224ee:	mov    ebp,0x48d99df
  4224f3:	jp     0x4224d7
  4224f5:	mov    eax,cs
  4224f7:	push   ecx
  4224f8:	fstp   QWORD PTR [edx+0x63dc7557]
  4224fe:	leave  
  4224ff:	adc    eax,0xec379b80
  422504:	mov    esi,DWORD PTR [eax-0x48]
  422507:	and    eax,0x773c6f4f
  42250c:	fld    TBYTE PTR [edi]
  42250e:	clc    
  42250f:	jg     0x422522
  422511:	cld    
  422512:	mov    bh,BYTE PTR [ecx-0x2]
  422515:	mul    esp
  422517:	cmp    al,0x79
  422519:	aam    0xa6
  42251b:	sbb    BYTE PTR [ebp+0x69],cl
  42251e:	stc    
  42251f:	and    ah,BYTE PTR [esi-0xf]
  422522:	repz push edx
  422524:	cs push ebx
  422526:	hlt    
  422527:	mov    edx,0xf3fe6a8f
  42252c:	imul   esi,DWORD PTR [ebp-0x16],0xffffffbb
  422530:	and    cl,0x22
  422533:	add    DWORD PTR [ebp+0x44],esp
  422536:	std    
  422537:	popf   
  422538:	pop    ss
  422539:	and    DWORD PTR [esi+0x38],edi
  42253c:	fcomp  DWORD PTR [edi+0x77]
  42253f:	or     dl,bh
  422541:	add    al,0x4b
  422543:	ins    BYTE PTR es:[edi],dx
  422544:	(bad)  
  422545:	ins    BYTE PTR es:[edi],dx
  422546:	test   eax,0x993fa43a
  42254b:	aaa    
  42254c:	sahf   
  42254d:	sbb    eax,0xfaad476e
  422552:	pop    ds
  422553:	xor    DWORD PTR [ebp+0x5fc96ad9],edx
  422559:	sbb    eax,0xe5d9407
  42255e:	icebp  
  42255f:	gs pop eax
  422561:	rcr    BYTE PTR [edx],1
  422563:	push   0x75b35c73
  422568:	jbe    0x422598
  42256a:	shl    BYTE PTR [edi+0x46],1
  42256d:	or     edi,DWORD PTR [eax]
  42256f:	aaa    
  422570:	(bad)  
  422571:	cmp    edi,DWORD PTR [ebx]
  422573:	clc    
  422574:	int3   
  422575:	mov    esp,0xccc2f38d
  42257a:	xchg   BYTE PTR [esi+0x3a],al
  42257d:	sahf   
  42257e:	mov    BYTE PTR [ebx-0x2c],bl
  422581:	nop
  422582:	outs   dx,BYTE PTR ds:[esi]
  422583:	or     cl,BYTE PTR [esp+ebx*8-0x387c9c89]
  42258a:	mov    ch,BYTE PTR [edi]
  42258c:	out    dx,eax
  42258d:	dec    esi
  42258e:	leave  
  42258f:	sub    DWORD PTR [edi-0x3d],eax
  422592:	(bad)  
  422593:	mov    esi,0x730ee0cc
  422598:	enter  0x7cf2,0xeb
  42259c:	cmp    cl,BYTE PTR ds:0xdc13fc50
  4225a2:	cmp    al,0x1c
  4225a4:	shl    BYTE PTR [esi+0x13123116],cl
  4225aa:	adc    edx,ebx
  4225ac:	cmp    dh,BYTE PTR [esi+edi*1-0x5baa9f69]
  4225b3:	aas    
  4225b4:	lahf   
  4225b5:	das    
  4225b6:	inc    ecx
  4225b7:	cmc    
  4225b8:	jp     0x42256b
  4225ba:	xor    al,0xd9
  4225bc:	pop    esi
  4225bd:	pop    edx
  4225be:	ret    0xbce5
  4225c1:	mov    ecx,0xf01c8c14
  4225c6:	fmul   st(1),st
  4225c8:	fisub  DWORD PTR [edi+0x2f]
  4225cb:	jmp    0x4225b3
  4225cd:	out    dx,eax
  4225ce:	lods   eax,DWORD PTR ds:[esi]
  4225cf:	repnz inc esp
  4225d1:	fmul   st,st(4)
  4225d3:	aam    0x82
  4225d5:	push   edi
  4225d6:	and    ch,BYTE PTR [edi-0x461865d7]
  4225dc:	mov    esi,0xf189b513
  4225e1:	inc    ecx
  4225e2:	das    
  4225e3:	mov    bl,al
  4225e5:	sti    
  4225e6:	es and al,0x51
  4225e9:	mov    esp,0x483e8adc
  4225ee:	jo     0x42258b
  4225f0:	xlat   BYTE PTR ds:[ebx]
  4225f1:	mov    ch,0xa4
  4225f3:	adc    DWORD PTR [ecx],ebx
  4225f5:	dec    ebp
  4225f6:	fdiv   DWORD PTR [ebp+edx*8-0x6ee1c1ae]
  4225fd:	jecxz  0x4225fe
  4225ff:	(bad)  [ebx-0x3a28ed41]
  422605:	push   cs
  422606:	fwait
  422607:	stc    
  422608:	xor    BYTE PTR [eax-0x32],al
  42260b:	mov    edx,0xc1597d8
  422610:	dec    esp
  422611:	mov    cl,0xc0
  422613:	loope  0x42261e
  422615:	dec    esp
  422616:	mov    edx,0xc91ebac8
  42261b:	jnp    0x422672
  42261d:	jmp    0x3a49:0xe857d313
  422624:	test   eax,0xd9a2e11
  422629:	lahf   
  42262a:	cmp    DWORD PTR [esi-0x5bdc85a0],eax
  422630:	pop    esp
  422631:	sahf   
  422632:	xor    ebx,edi
  422634:	ret    0x75aa
  422637:	cli    
  422638:	fcomp  QWORD PTR [esi+0x114d389b]
  42263e:	push   cs
  42263f:	ror    BYTE PTR [eax-0x483c9ed],cl
  422645:	jmp    0x701f:0xa980489b
  42264c:	pop    eax
  42264d:	or     dl,BYTE PTR [edx-0x2c]
  422650:	pusha  
  422651:	mov    ss,WORD PTR [ebx+ecx*1-0x21]
  422655:	mov    edi,0xe5fda9b1
  42265a:	shl    DWORD PTR [ebx-0xd88550e],cl
  422660:	mov    eax,ds:0x4035a7c7
  422665:	mov    ss,ecx
  422667:	cwde   
  422668:	outs   dx,BYTE PTR ds:[esi]
  422669:	jmp    0x4226e4
  42266b:	fsub   QWORD PTR [ecx]
  42266d:	sub    BYTE PTR [ebx+0x16],0xfb
  422671:	and    ecx,DWORD PTR [edi]
  422673:	nop
  422674:	dec    edi
  422675:	pop    ds
  422676:	and    al,0x1a
  422678:	pop    eax
  422679:	out    dx,al
  42267a:	adc    ecx,edx
  42267c:	push   ebp
  42267d:	sub    BYTE PTR [ecx-0x59],0x7f
  422681:	int    0x10
  422683:	inc    eax
  422684:	dec    ebx
  422685:	clc    
  422686:	fdivrp st(7),st
  422688:	mov    dl,0x23
  42268a:	cmp    DWORD PTR [ecx],ebx
  42268c:	rsqrtps xmm3,XMMWORD PTR [ecx-0xd224c03]
  422693:	in     al,0xa2
  422695:	mov    ebp,0x39851a39
  42269a:	repz scas al,BYTE PTR es:[edi]
  42269c:	ins    DWORD PTR es:[edi],dx
  42269d:	lds    eax,FWORD PTR [edi-0x1d]
  4226a0:	push   edi
  4226a1:	fidiv  WORD PTR [ebp-0x5bca8432]
  4226a7:	(bad)  
  4226a8:	adc    BYTE PTR [ebx+0x24cd5f93],ah
  4226ae:	xchg   esp,ebx
  4226b0:	add    al,0x43
  4226b2:	outs   dx,DWORD PTR ds:[esi]
  4226b3:	imul   eax,edi,0x408316c7
  4226b9:	and    edi,0xc16ae70
  4226bf:	adc    ch,BYTE PTR [ecx+0x75]
  4226c2:	dec    ecx
  4226c3:	sub    edx,DWORD PTR [eax-0x7f]
  4226c6:	in     eax,0x1d
  4226c8:	add    al,0xd0
  4226ca:	sub    esi,ebp
  4226cc:	mov    edi,0xece43194
  4226d1:	jg     0x422667
  4226d3:	stc    
  4226d4:	fistp  DWORD PTR [eax+ebp*2-0x21]
  4226d8:	adc    esp,DWORD PTR [esi]
  4226da:	sbb    DWORD PTR [ecx+0x37],ebp
  4226dd:	or     ecx,ebx
  4226df:	repz mov bl,0x34
  4226e2:	adc    BYTE PTR [edx],bl
  4226e4:	add    al,0x25
  4226e6:	repnz fcom DWORD PTR [ecx]
  4226e9:	mov    ah,0x61
  4226eb:	mov    edi,0xd292aded
  4226f0:	neg    DWORD PTR [ebx-0x5f]
  4226f3:	fdiv   st,st(7)
  4226f5:	dec    eax
  4226f6:	inc    eax
  4226f7:	cmc    
  4226f8:	jo     0x422696
  4226fa:	dec    esi
  4226fb:	sub    esp,ebx
  4226fd:	lods   eax,DWORD PTR ds:[esi]
  4226fe:	iret   
  4226ff:	lods   eax,DWORD PTR ds:[esi]
  422700:	mov    esp,0xdcc7d4c4
  422705:	sub    eax,0xc00f35b6
  42270a:	jb     0x422694
  42270c:	xor    ch,bh
  42270e:	andps  xmm7,XMMWORD PTR [esi+0x4cce139b]
  422715:	mov    es:0xf0457005,eax
  42271b:	add    al,0xa0
  42271d:	sahf   
  42271e:	sahf   
  42271f:	ins    DWORD PTR es:[edi],dx
  422720:	push   es
  422721:	jg     0x42278c
  422723:	aas    
  422724:	call   0xc3db0514
  422729:	retf   0xa917
  42272c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42272d:	sbb    DWORD PTR [esi-0x1a134bfa],0xffffffed
  422734:	and    DWORD PTR [eax],eax
  422736:	pop    ss
  422737:	cli    
  422738:	or     DWORD PTR [ebp-0x77],ebp
  42273b:	fcmovnbe st,st(1)
  42273d:	frstor [esi-0x16]
  422740:	xchg   edi,eax
  422741:	fdiv   QWORD PTR [edi-0x7c127cb3]
  422747:	les    edi,FWORD PTR [edi-0x2a]
  42274a:	pop    edi
  42274b:	sub    al,0x4f
  42274d:	mov    eax,0x8ebbd60e
  422752:	inc    ebx
  422753:	dec    esi
  422754:	outs   dx,DWORD PTR ds:[esi]
  422755:	inc    edx
  422756:	xchg   BYTE PTR [edx+0x5c],dh
  422759:	mov    bh,BYTE PTR [ecx]
  42275b:	fist   DWORD PTR [eax-0x81fe4a0]
  422761:	icebp  
  422762:	hlt    
  422763:	cmp    ebp,DWORD PTR [esi+0x50]
  422766:	sbb    BYTE PTR [ebx-0x9],ah
  422769:	mov    eax,0x132e55f0
  42276e:	jle    0x4227b8
  422770:	mov    edx,0xba595a5e
  422775:	fs retf 0xeb78
  422779:	bound  ebp,QWORD PTR [eax-0x2]
  42277c:	inc    ecx
  42277d:	test   eax,0x9367b8cc
  422782:	dec    edi
  422783:	jecxz  0x422755
  422785:	in     al,dx
  422786:	clc    
  422787:	jnp    0x42277a
  422789:	repnz pop edi
  42278b:	cli    
  42278c:	sub    BYTE PTR [edi],bh
  42278e:	mov    ebx,0xd7753491
  422793:	test   al,0x38
  422795:	sub    ch,BYTE PTR [ebp+0x377f646]
  42279b:	adc    ebp,DWORD PTR [ecx-0x1838e33a]
  4227a1:	in     al,dx
  4227a2:	stc    
  4227a3:	arpl   WORD PTR ds:0xabb8bbb6,bx
  4227a9:	xor    eax,0xa43521ed
  4227ae:	ja     0x4227e7
  4227b0:	mov    dl,0x58
  4227b2:	aad    0x5e
  4227b4:	or     eax,DWORD PTR [esi+0x16bbbf9a]
  4227ba:	inc    eax
  4227bb:	in     al,dx
  4227bc:	out    dx,eax
  4227bd:	xchg   ebx,eax
  4227be:	jl     0x42283f
  4227c0:	add    ebx,edx
  4227c2:	stc    
  4227c3:	cmp    DWORD PTR [edx-0x6e],0x11
  4227c7:	rcl    DWORD PTR [ecx],cl
  4227c9:	mov    al,0x13
  4227cb:	stos   BYTE PTR es:[edi],al
  4227cc:	call   0xe31c:0x38c1680b
  4227d3:	jmp    0x5e6b:0x851f4671
  4227da:	push   0xeb925687
  4227df:	push   es
  4227e0:	in     eax,dx
  4227e1:	jle    0x422768
  4227e3:	into   
  4227e4:	outs   dx,BYTE PTR ds:[esi]
  4227e5:	ds in  al,dx
  4227e7:	or     al,0xa2
  4227e9:	inc    ebx
  4227ea:	dec    eax
  4227eb:	imul   esp,esp,0xbf2d02fa
  4227f1:	pop    ds
  4227f2:	dec    edx
  4227f3:	sahf   
  4227f4:	sub    al,0xfb
  4227f6:	push   cs
  4227f7:	or     edx,esi
  4227f9:	test   ecx,ebx
  4227fb:	jecxz  0x4227ff
  4227fd:	inc    eax
  4227fe:	test   DWORD PTR [ecx+0x7991ab1e],edi
  422804:	ss pop ecx
  422806:	jnp    0x4227b3
  422808:	pop    ebx
  422809:	sbb    ecx,DWORD PTR [ebx+edi*8]
  42280c:	cli    
  42280d:	fild   DWORD PTR [ebx-0x7c]
  422810:	retf   
  422811:	jp     0x4227f8
  422813:	ficomp DWORD PTR [esi]
  422815:	mov    esi,0xcf0f1e75
  42281a:	sbb    al,0xa
  42281c:	das    
  42281d:	mov    esi,0x909989c2
  422822:	mov    eax,ds:0x50508027
  422827:	mov    cl,0x1
  422829:	xlat   BYTE PTR ds:[ebx]
  42282a:	int    0xa6
  42282c:	add    al,0xfe
  42282e:	pushf  
  42282f:	mov    dl,0xa9
  422831:	jo     0x422815
  422833:	addr16 push ebx
  422835:	ret    0x360c
  422838:	add    al,BYTE PTR [edx-0x45b9a501]
  42283e:	repz fidiv WORD PTR [esi+0x25]
  422842:	pop    esi
  422843:	pop    ebx
  422844:	push   ebx
  422845:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422846:	(bad)  
  422848:	pop    esi
  422849:	dec    edi
  42284a:	xchg   dl,ah
  42284c:	xchg   ebx,eax
  42284d:	add    ecx,esp
  42284f:	push   ebp
  422850:	out    0xbc,eax
  422852:	or     al,0xdf
  422854:	mov    ecx,0x9609fa5e
  422859:	mov    gs,WORD PTR [ebx]
  42285b:	lds    ecx,FWORD PTR [edx]
  42285d:	outs   dx,DWORD PTR ds:[esi]
  42285e:	jo     0x422849
  422860:	pop    esp
  422861:	test   eax,0xbcd45fe7
  422866:	xor    DWORD PTR [esi],edi
  422868:	dec    ebx
  422869:	ret    
  42286a:	daa    
  42286b:	bound  ebx,QWORD PTR ds:0xfafd88a3
  422871:	jno    0x422830
  422873:	stos   DWORD PTR es:[edi],eax
  422874:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422875:	(bad)  
  422876:	jmp    0xf50e1bc5
  42287b:	aam    0x58
  42287d:	inc    edi
  42287e:	mov    edi,0x48514e80
  422883:	shr    DWORD PTR [ecx-0x7e8ebcf3],0x11
  42288a:	nop    eax
  42288d:	jbe    0x42283e
  42288f:	lods   eax,DWORD PTR ds:[esi]
  422890:	stos   BYTE PTR es:[edi],al
  422891:	aad    0x44
  422893:	ja     0x4228f7
  422895:	mov    edx,DWORD PTR [eax-0x2f]
  422898:	xchg   ecx,eax
  422899:	lods   eax,DWORD PTR ds:[esi]
  42289a:	dec    esi
  42289b:	cdq    
  42289c:	adc    bh,BYTE PTR [edi]
  42289e:	(bad)  
  42289f:	mov    esp,0xa5d3f7c5
  4228a4:	rcr    edi,cl
  4228a6:	push   ecx
  4228a7:	jle    0x422848
  4228a9:	mov    ch,0xfe
  4228ab:	std    
  4228ac:	repnz ficomp WORD PTR [ebx]
  4228af:	in     eax,0xce
  4228b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228b2:	(bad)  
  4228b3:	fldenv [eax+0x3e]
  4228b6:	fdivr  st(7),st
  4228b8:	adc    al,0xb
  4228ba:	in     al,dx
  4228bb:	fist   WORD PTR [ebx+0x65b57042]
  4228c1:	js     0x422889
  4228c3:	mov    cl,0xc7
  4228c5:	mov    bh,0xb0
  4228c7:	fs push ecx
  4228c9:	stc    
  4228ca:	sub    eax,0x10cc72dc
  4228cf:	sbb    ch,0x14
  4228d2:	dec    edi
  4228d3:	dec    edi
  4228d4:	inc    ebx
  4228d5:	sar    DWORD PTR [esi+0x47be279f],cl
  4228db:	lds    ebp,FWORD PTR [ebx]
  4228dd:	push   0xcd5e646e
  4228e2:	jne    0xd806fbac
  4228e8:	mov    cl,0x7d
  4228ea:	inc    ecx
  4228eb:	mov    al,0xbc
  4228ed:	inc    ecx
  4228ee:	add    cl,cl
  4228f0:	add    eax,0x800485a3
  4228f5:	(bad)  
  4228f7:	mov    dh,0xef
  4228f9:	sahf   
  4228fa:	lds    eax,FWORD PTR [ebx*8+0x163b75bd]
  422901:	push   ecx
  422902:	sub    eax,0xa3f92380
  422907:	je     0x422917
  422909:	jae    0x422968
  42290b:	mov    ch,0x1d
  42290d:	out    dx,al
  42290e:	inc    eax
  42290f:	stc    
  422910:	fisubr DWORD PTR [esi-0x57c5b226]
  422916:	sar    DWORD PTR [edi],cl
  422918:	clc    
  422919:	mov    edx,0x4e79a503
  42291e:	jno    0x422969
  422920:	ss push cs
  422922:	leave  
  422923:	js     0x42298d
  422925:	cmp    eax,0x4aeb303c
  42292a:	dec    esi
  42292b:	jns    0x42297a
  42292d:	in     eax,0x7
  42292f:	sub    al,0xdc
  422931:	mov    dh,0x14
  422933:	pop    edx
  422934:	add    eax,0x57bf6d25
  422939:	mov    BYTE PTR [ebp+0x33775ec2],0xe4
  422940:	cdq    
  422941:	or     edx,DWORD PTR [eax+0x400d05fb]
  422947:	rcl    cl,1
  422949:	mov    ebp,0x61f9efd1
  42294e:	pop    ebp
  42294f:	(bad)  
  422950:	pop    ds
  422951:	sti    
  422952:	retf   0x6c4e
  422955:	stos   DWORD PTR es:[edi],eax
  422956:	mov    ds:0x174a9030,eax
  42295b:	sub    ch,BYTE PTR es:[edi+ecx*8+0x3d]
  422960:	jl     0x422969
  422962:	jne    0x422908
  422964:	hlt    
  422965:	scas   eax,DWORD PTR es:[edi]
  422966:	mov    BYTE PTR [edx-0x6e1afdd8],dh
  42296c:	inc    esp
  42296d:	in     al,0x45
  42296f:	ins    DWORD PTR es:[edi],dx
  422970:	les    esp,FWORD PTR [ecx]
  422972:	sti    
  422973:	dec    edi
  422974:	jae    0x42295b
  422976:	les    edi,FWORD PTR [ebp+edx*4+0x4cf55fad]
  42297d:	test   DWORD PTR [eax+edx*8+0x5687ad6b],eax
  422984:	mov    bh,0x30
  422986:	out    0x69,eax
  422988:	call   0x9a38af67
  42298d:	in     eax,dx
  42298e:	add    ebp,ecx
  422990:	xchg   ebp,eax
  422991:	xor    bl,BYTE PTR ds:0xf923ad57
  422997:	push   esp
  422998:	sub    BYTE PTR [eax],al
  42299a:	or     edi,DWORD PTR [esp+edi*4]
  42299d:	or     DWORD PTR [ecx-0x3fdb5d7c],esi
  4229a3:	(bad)  
  4229a4:	cli    
  4229a5:	je     0x422991
  4229a7:	pop    esp
  4229a8:	add    ah,dh
  4229aa:	xlat   BYTE PTR ds:[ebx]
  4229ab:	pop    edi
  4229ac:	mov    dl,0xb4
  4229ae:	and    ebp,DWORD PTR [ebx+esi*4-0x11]
  4229b2:	push   es
  4229b3:	fwait
  4229b4:	leave  
  4229b5:	aad    0xaa
  4229b7:	xor    al,0xde
  4229b9:	and    ebp,DWORD PTR [eax+0x25]
  4229bc:	jns    0x422991
  4229be:	adc    al,0x17
  4229c0:	xor    eax,0x96a661de
  4229c5:	adc    BYTE PTR [edi+eax*4-0x73],dl
  4229c9:	repz mov ds:0xbfa19d0f,eax
  4229cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229d0:	dec    ebx
  4229d1:	push   0x75715d34
  4229d6:	sub    eax,0xc9f52ad4
  4229db:	ret    0x914
  4229de:	mov    edi,0x9431dbcb
  4229e3:	sub    DWORD PTR [esp+eiz*4],edx
  4229e6:	lds    ebx,FWORD PTR [eax+eax*4-0x28]
  4229ea:	add    al,0x99
  4229ec:	lods   al,BYTE PTR ds:[esi]
  4229ed:	out    0x9c,eax
  4229ef:	pushf  
  4229f0:	xchg   ecx,eax
  4229f1:	(bad)  
  4229f3:	pushf  
  4229f4:	or     BYTE PTR [ecx+0x6d597cf5],al
  4229fa:	sahf   
  4229fb:	(bad)  
  4229fc:	lods   eax,DWORD PTR ds:[esi]
  4229fd:	adc    esp,DWORD PTR [ebp+0x12eff8f1]
  422a03:	add    eax,0xc3833b03
  422a08:	mov    DWORD PTR gs:[edx+ebp*2],esi
  422a0c:	xor    ebx,ebx
  422a0e:	jp     0x4229ed
  422a10:	pop    esi
  422a11:	jnp    0x422a21
  422a13:	cwde   
  422a14:	sbb    edi,ebx
  422a16:	lock fld DWORD PTR [ebp-0x2]
  422a1a:	ds stc 
  422a1c:	and    esi,ebx
  422a1e:	sbb    edi,DWORD PTR [ecx]
  422a20:	and    eax,0x4b8af0df
  422a25:	xchg   edx,eax
  422a26:	jae    0x4229b2
  422a28:	je     0x422a89
  422a2a:	stos   BYTE PTR es:[edi],al
  422a2b:	xchg   BYTE PTR [edx+0x1a8dde46],bh
  422a31:	in     al,0x43
  422a33:	dec    eax
  422a34:	std    
  422a35:	jmp    0x13a7:0xc09a9f18
  422a3c:	shl    BYTE PTR [ebx],1
  422a3e:	mov    ebx,0xc8e5ff20
  422a43:	add    ebx,DWORD PTR [ebp+0x46]
  422a46:	mov    edi,0x7cb9cf70
  422a4b:	push   0x935e9790
  422a50:	ds pusha 
  422a52:	and    ecx,ecx
  422a54:	jge    0x422ace
  422a56:	stos   DWORD PTR es:[edi],eax
  422a57:	retf   
  422a58:	mov    ds:0x72e13f06,eax
  422a5d:	cli    
  422a5e:	fs mov ebx,0x737f4ef2
  422a64:	std    
  422a65:	cmp    ecx,esi
  422a67:	sbb    eax,0xcd5f6e8b
  422a6c:	adc    esi,edx
  422a6e:	jo     0x422aaa
  422a70:	stc    
  422a71:	fiadd  DWORD PTR [edx-0x75]
  422a74:	idiv   BYTE PTR [ecx+0x5c]
  422a77:	aas    
  422a78:	ror    BYTE PTR [edx-0x49d05e8b],1
  422a7e:	mov    DWORD PTR [esi+0x1b],edi
  422a81:	jbe    0x422abc
  422a83:	pop    es
  422a84:	push   cs
  422a85:	or     bh,BYTE PTR [edx]
  422a87:	mov    WORD PTR [eax-0x175ae7e7],ss
  422a8d:	jg     0x422a5d
  422a8f:	and    BYTE PTR [esi+eiz*8+0x61367e47],al
  422a96:	cmp    bl,bh
  422a98:	clc    
  422a99:	ins    DWORD PTR es:[edi],dx
  422a9a:	dec    ebx
  422a9b:	adc    DWORD PTR [esi-0x1a],ebp
  422a9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a9f:	mov    ds:0x5d73ee16,al
  422aa4:	adc    eax,DWORD PTR ds:0x52596339
  422aaa:	jns    0x422a31
  422aac:	pusha  
  422aad:	cld    
  422aae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422aaf:	adc    dl,al
  422ab1:	dec    ecx
  422ab2:	sbb    al,BYTE PTR ds:0xeb1e
  422ab7:	xor    cl,al
  422ab9:	lea    ebx,[edi]
  422abb:	inc    ebx
  422abc:	jb     0x422a96
  422abe:	outs   dx,DWORD PTR ds:[esi]
  422abf:	sahf   
  422ac0:	pop    ebx
  422ac1:	out    dx,eax
  422ac2:	jle    0x422b30
  422ac4:	xor    DWORD PTR [edi-0x78],esp
  422ac7:	or     al,0xfd
  422ac9:	ja     0x422a73
  422acb:	ins    DWORD PTR es:[edi],dx
  422acc:	leave  
  422acd:	mov    dh,0xbe
  422acf:	xor    al,ch
  422ad1:	and    al,0xb4
  422ad3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ad4:	fcomp  DWORD PTR [eax+0x11]
  422ad7:	mov    bl,0x92
  422ad9:	or     al,0xf5
  422adb:	fsub   QWORD PTR [ebx]
  422add:	push   0x7c
  422adf:	retf   0xea51
  422ae2:	pop    ds
  422ae3:	shl    esi,1
  422ae5:	stos   DWORD PTR es:[edi],eax
  422ae6:	push   ecx
  422ae7:	push   ebp
  422ae8:	sub    ebx,DWORD PTR [eax-0x3]
  422aeb:	in     eax,dx
  422aec:	cmp    eax,0xa099e32e
  422af1:	rol    DWORD PTR [ecx],cl
  422af3:	add    esi,edx
  422af5:	call   0xdbfb:0xc861ff17
  422afc:	fpatan 
  422afe:	xchg   ebx,eax
  422aff:	idiv   DWORD PTR [esi+0x4dd681ac]
  422b05:	mov    bh,0x4d
  422b07:	es stc 
  422b09:	or     esp,ebp
  422b0b:	adc    eax,0x42a3ae5f
  422b10:	daa    
  422b11:	cmp    eax,0xa7bcb49e
  422b16:	ss popa 
  422b18:	hlt    
  422b19:	aam    0x41
  422b1b:	mov    eax,ds:0x3440998f
  422b20:	and    cl,BYTE PTR [ebp+edx*1+0x65]
  422b24:	mov    ds:0x4823283a,al
  422b29:	out    dx,eax
  422b2a:	(bad)  
  422b2c:	push   ebx
  422b2d:	f2xm1  
  422b2f:	sbb    esi,esi
  422b31:	mov    al,0x7b
  422b33:	dec    ebp
  422b34:	dec    edx
  422b35:	mov    ecx,0xef747849
  422b3a:	inc    edx
  422b3b:	jns    0x422acb
  422b3d:	fisttp DWORD PTR [ebx-0x38d72f50]
  422b43:	pusha  
  422b44:	ss pop es
  422b46:	fst    st(2)
  422b48:	popf   
  422b49:	loop   0x422b38
  422b4b:	or     BYTE PTR [eax],bh
  422b4d:	retf   
  422b4e:	jnp    0x422b78
  422b50:	leave  
  422b51:	or     al,0x8f
  422b53:	or     DWORD PTR [eax-0x5a],edx
  422b56:	in     al,0xaf
  422b58:	add    esi,DWORD PTR [ebx-0x6f66fcb6]
  422b5e:	pop    esp
  422b5f:	js     0x422b0c
  422b61:	ret    0xa487
  422b64:	pusha  
  422b65:	rol    BYTE PTR [ebp+edi*1+0x5d],cl
  422b69:	fisub  WORD PTR es:[eax-0x41]
  422b6d:	pop    esi
  422b6e:	dec    esi
  422b6f:	pop    ss
  422b70:	jmp    0x422b31
  422b72:	fdivp  st(7),st
  422b74:	inc    esp
  422b75:	jbe    0x422bc1
  422b77:	enter  0xa35c,0x5e
  422b7b:	mov    ds:0xb133bf9,eax
  422b80:	xor    DWORD PTR ss:[ecx-0x62],0xb89a6d73
  422b88:	das    
  422b89:	(bad)  
  422b8c:	xchg   esp,eax
  422b8d:	int    0x91
  422b8f:	sub    eax,0x671fc7a8
  422b94:	push   0xffffffbc
  422b96:	inc    ebp
  422b97:	jo     0x422b80
  422b99:	adc    ah,BYTE PTR [eax-0xd3a2678]
  422b9f:	mov    esi,0x3793b1f
  422ba4:	outs   dx,DWORD PTR ds:[esi]
  422ba5:	sbb    ah,BYTE PTR [eax-0x2a108f0e]
  422bab:	add    ah,BYTE PTR [ecx+0x1e]
  422bae:	push   ebx
  422baf:	arpl   WORD PTR [ecx-0x5f],si
  422bb2:	mov    WORD PTR [edi-0x60],ss
  422bb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422bb6:	out    dx,al
  422bb7:	popa   
  422bb8:	jmp    0x422bb5
  422bba:	lock jae 0x422c06
  422bbd:	(bad)  
  422bbe:	out    dx,al
  422bbf:	popa   
  422bc0:	sbb    eax,ecx
  422bc2:	pop    ecx
  422bc3:	aaa    
  422bc4:	fldenv [ecx+edx*2]
  422bc7:	ret    
  422bc8:	sbb    bl,BYTE PTR [edi+0x1e20d415]
  422bce:	mov    WORD PTR [esi-0x77],ss
  422bd1:	loope  0x422c34
  422bd3:	cmp    dh,ch
  422bd5:	sub    al,0x2c
  422bd7:	or     ebx,ecx
  422bd9:	rol    DWORD PTR [edi+0x629621bb],cl
  422bdf:	pushf  
  422be0:	aad    0x6e
  422be2:	fwait
  422be3:	mov    dl,BYTE PTR [eax+0x10f68d06]
  422be9:	add    BYTE PTR [esi+0x6b],cl
  422bec:	clc    
  422bed:	jp     0x4b09629c
  422bf3:	sahf   
  422bf4:	enter  0x57b7,0x28
  422bf8:	jg     0x422c26
  422bfa:	fistp  DWORD PTR [edx-0x1ead526d]
  422c00:	aaa    
  422c01:	fwait
  422c02:	xchg   esi,eax
  422c03:	loope  0x422c22
  422c05:	and    al,bh
  422c07:	repnz in al,dx
  422c09:	out    dx,al
  422c0a:	xor    dh,BYTE PTR [edx]
  422c0c:	mov    eax,DWORD PTR [ecx+0x7155034e]
  422c12:	pop    ds
  422c13:	fld    QWORD PTR [esi+eax*4]
  422c16:	in     eax,dx
  422c17:	cmp    eax,0xf8a6aca4
  422c1c:	xor    DWORD PTR [eax-0x7],edi
  422c1f:	pop    ebx
  422c20:	adc    ebp,ebp
  422c22:	xchg   esp,eax
  422c23:	or     al,0xd7
  422c25:	xchg   edx,eax
  422c26:	sbb    esi,DWORD PTR [edi+ebp*8+0x7]
  422c2a:	aam    0x6e
  422c2c:	inc    eax
  422c2d:	mov    eax,DWORD PTR [edx]
  422c2f:	in     al,0x80
  422c31:	jl     0x422bd4
  422c33:	scas   eax,DWORD PTR es:[edi]
  422c34:	out    dx,al
  422c35:	retf   
  422c36:	arpl   WORD PTR [ebx+0x44f65541],bp
  422c3c:	mov    ah,0x39
  422c3e:	mov    DWORD PTR [esi+ebx*2+0x11],ebp
  422c42:	push   eax
  422c43:	xor    bh,bh
  422c45:	pop    esi
  422c46:	dec    eax
  422c47:	fcom   DWORD PTR [esi+0x2e]
  422c4a:	push   ebx
  422c4b:	add    edx,ebp
  422c4d:	inc    ebx
  422c4e:	adc    dl,BYTE PTR [ebx]
  422c50:	jbe    0x422cb8
  422c52:	cmp    al,0x1
  422c54:	call   0x4d94:0xaea6fb9
  422c5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c5c:	sub    bl,ch
  422c5e:	es rol BYTE PTR gs:[esi],1
  422c62:	(bad)  
  422c63:	and    edi,esi
  422c65:	or     BYTE PTR [eax],bh
  422c67:	jmp    0x6a4f:0xa5860b18
  422c6e:	xor    DWORD PTR ds:0x2ec0b76c,0xffffffe3
  422c75:	cli    
  422c76:	sub    ebx,eax
  422c78:	inc    eax
  422c79:	test   DWORD PTR [edx-0x7b267a6b],esp
  422c7f:	ins    DWORD PTR es:[edi],dx
  422c80:	and    esp,ecx
  422c82:	cli    
  422c83:	xchg   ebx,eax
  422c84:	lahf   
  422c85:	push   ss
  422c86:	outs   dx,BYTE PTR ds:[esi]
  422c87:	mov    ebx,0xb5c5ed20
  422c8c:	adc    eax,0xbf25f305
  422c91:	push   ebx
  422c92:	jne    0x422c78
  422c94:	and    al,0xd7
  422c96:	out    dx,al
  422c97:	mov    eax,0x5a48ded6
  422c9c:	dec    ebp
  422c9d:	scas   al,BYTE PTR es:[edi]
  422c9e:	adc    esi,DWORD PTR [esi]
  422ca0:	cmc    
  422ca1:	sub    al,0x86
  422ca3:	rdmsr  
  422ca5:	out    dx,al
  422ca6:	cmp    DWORD PTR [eax],edx
  422ca8:	sbb    eax,edi
  422caa:	mov    BYTE PTR [eax+0x1e],bl
  422cad:	mov    esi,0xeff35592
  422cb2:	fisttp DWORD PTR [edi-0x7268f8fc]
  422cb8:	dec    edx
  422cb9:	mov    bh,0xb0
  422cbb:	mov    bh,0x87
  422cbd:	sahf   
  422cbe:	test   BYTE PTR [edx],ch
  422cc0:	push   eax
  422cc1:	mov    bl,0x3b
  422cc3:	bound  ebp,QWORD PTR [ecx-0x8bb4dd6]
  422cc9:	sub    bl,ah
  422ccb:	add    eax,0x27671093
  422cd0:	imul   eax,eax,0x57
  422cd3:	cmc    
  422cd4:	or     DWORD PTR ds:[ebx+0x1f],0x34
  422cd9:	and    eax,0x59158309
  422cde:	data16 (bad) 
  422ce0:	adc    edx,ebx
  422ce2:	xchg   edx,eax
  422ce3:	push   cs
  422ce4:	xor    DWORD PTR [ebx-0x711ce1f2],ecx
  422cea:	inc    ebp
  422ceb:	repz inc ebx
  422ced:	mul    DWORD PTR [esi-0x7b]
  422cf0:	(bad)
  422cf3:	mov    DWORD PTR [ecx],0xfa59f57
  422cf9:	dec    esp
  422cfa:	sub    bl,dh
  422cfc:	in     al,0x77
  422cfe:	out    dx,al
  422cff:	add    ecx,ecx
  422d01:	inc    ecx
  422d02:	pop    ss
  422d03:	mov    ebx,0x65478ad5
  422d08:	fisub  DWORD PTR [ebp+0x54]
  422d0b:	inc    eax
  422d0c:	je     0x422d1d
  422d0e:	call   0x80d3b834
  422d13:	push   0xffffffa0
  422d15:	jne    0x422cd5
  422d17:	push   edx
  422d18:	xchg   ebp,eax
  422d19:	mov    ebx,0x41af3fdd
  422d1e:	mov    ds:0x710a1f2e,eax
  422d23:	fisttp QWORD PTR [eax]
  422d25:	xor    eax,0xe3850f01
  422d2a:	push   DWORD PTR [edi+0x61f76063]
  422d30:	test   DWORD PTR [edi-0x59a6a3b2],esp
  422d36:	mov    bl,0x6c
  422d38:	lahf   
  422d39:	lahf   
  422d3a:	xchg   esi,eax
  422d3b:	push   0xffffff92
  422d3d:	sub    eax,0x81651c32
  422d42:	(bad)  
  422d43:	neg    DWORD PTR [esi+0x6a44cc94]
  422d49:	lds    edi,FWORD PTR ds:0x23b79497
  422d4f:	cli    
  422d50:	adc    al,0x70
  422d52:	add    al,BYTE PTR [edx+eiz*2]
  422d55:	sub    eax,0x9fb186fd
  422d5a:	(bad)  [ecx]
  422d5c:	pop    ss
  422d5d:	or     al,0x95
  422d5f:	shl    DWORD PTR [ecx+0x61105053],0xd
  422d66:	cld    
  422d67:	lods   eax,DWORD PTR ds:[esi]
  422d68:	arpl   WORD PTR ds:0x2fe082ad,ax
  422d6e:	dec    esi
  422d6f:	jl     0x422d25
  422d71:	scas   eax,DWORD PTR es:[edi]
  422d72:	fidiv  DWORD PTR [ebp+0x7b]
  422d75:	lahf   
  422d76:	adc    eax,0xc293eb6b
  422d7b:	dec    ebp
  422d7c:	sbb    al,0xfd
  422d7e:	mov    ecx,0xf0da0235
  422d83:	adc    dh,BYTE PTR [eax]
  422d85:	add    al,0xbc
  422d87:	mov    eax,0x693a2f2a
  422d8c:	dec    ebp
  422d8d:	sub    eax,0xd5b9e9d
  422d92:	pop    esi
  422d93:	add    esi,DWORD PTR [edx+0x1e]
  422d96:	mov    ecx,0xafd8be3d
  422d9b:	xchg   ecx,eax
  422d9c:	mov    ds:0x45be4d8e,eax
  422da1:	add    dh,BYTE PTR [ecx-0x26]
  422da4:	xor    BYTE PTR [ecx+esi*8+0x3405b64d],bl
  422dab:	or     BYTE PTR [edi+0x40],dh
  422dae:	pop    edi
  422daf:	fstp   QWORD PTR [eax+0x7fa8356]
  422db5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422db6:	pop    es
  422db7:	mov    esi,0xe9f71e6f
  422dbc:	rcl    edi,1
  422dbe:	cmp    bl,ah
  422dc0:	scas   eax,DWORD PTR es:[edi]
  422dc1:	jmp    0x422ded
  422dc3:	push   cs
  422dc4:	test   al,0xa1
  422dc6:	(bad)  
  422dc7:	dec    eax
  422dc8:	out    0x42,al
  422dca:	loopne 0x422e0b
  422dcc:	push   es
  422dcd:	cld    
  422dce:	jl     0x422df7
  422dd0:	je     0x422e30
  422dd2:	repnz arpl WORD PTR [eax+0x7b],di
  422dd6:	push   ecx
  422dd7:	push   esp
  422dd8:	xchg   edi,eax
  422dd9:	inc    ebp
  422dda:	mov    ebp,0xad43763f
  422ddf:	mov    ecx,0xf67fcc05
  422de4:	int    0x7e
  422de6:	cdq    
  422de7:	add    eax,0xdcd5f283
  422ded:	jmp    0x6019:0xaa8aa43f
  422df4:	stos   BYTE PTR es:[edi],al
  422df5:	fsub   QWORD PTR [ebx+0x2a]
  422df8:	les    esp,FWORD PTR [ebx]
  422dfa:	or     esp,esp
  422dfc:	pop    ss
  422dfd:	sar    BYTE PTR [esi],0xef
  422e00:	sbb    eax,0xf7be8a04
  422e05:	cdq    
  422e06:	and    esp,esi
  422e08:	mov    si,0xcc2e
  422e0c:	inc    ebx
  422e0d:	xor    edx,DWORD PTR [esi+0x795cffe]
  422e13:	cmp    eax,0xa54a759f
  422e18:	bound  esi,QWORD PTR ds:0x9044775c
  422e1e:	daa    
  422e1f:	imul   DWORD PTR [ebx]
  422e21:	jo     0x422dfc
  422e23:	ins    DWORD PTR es:[edi],dx
  422e24:	(bad)  
  422e26:	rol    DWORD PTR [edx],0x8a
  422e29:	add    DWORD PTR [edi-0x5c],0x50e2d1f3
  422e30:	pop    edi
  422e31:	outs   dx,BYTE PTR ds:[esi]
  422e32:	inc    ebx
  422e33:	hlt    
  422e34:	das    
  422e35:	add    BYTE PTR [ecx+0x20],ch
  422e38:	hlt    
  422e39:	out    dx,al
  422e3a:	sbb    DWORD PTR [ebx-0x493321ab],0xffffffc4
  422e41:	mov    dl,BYTE PTR [eax-0x3041ab97]
  422e47:	dec    eax
  422e48:	out    dx,al
  422e49:	sti    
  422e4a:	ss retf 0x456b
  422e4e:	enter  0x9b3d,0x19
  422e52:	js     0x422de7
  422e54:	and    dl,BYTE PTR [ecx+ebp*2]
  422e57:	jecxz  0x422ea9
  422e59:	ins    DWORD PTR es:[edi],dx
  422e5a:	jno    0x422e57
  422e5c:	cmp    edi,ebp
  422e5e:	jp     0x422e74
  422e60:	jecxz  0x422edc
  422e62:	jl     0x422e76
  422e64:	xor    BYTE PTR [ecx-0x4629a79d],bl
  422e6a:	dec    ebx
  422e6b:	test   eax,0xc809fc2e
  422e70:	mov    bh,0x8e
  422e72:	pop    esi
  422e73:	sar    ebx,0xe
  422e76:	jae    0x422e64
  422e78:	pop    ecx
  422e79:	pop    es
  422e7a:	jne    0x422eeb
  422e7c:	aaa    
  422e7d:	xchg   esi,eax
  422e7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e7f:	cli    
  422e80:	cld    
  422e81:	dec    ecx
  422e82:	das    
  422e83:	adc    al,BYTE PTR [esp+edx*1-0x31]
  422e87:	jo     0x422e67
  422e89:	int    0xe4
  422e8b:	mov    ebx,0xf2d691e6
  422e90:	clc    
  422e91:	jae    0x422ef1
  422e93:	and    al,0xa8
  422e95:	mul    ebx
  422e97:	sub    eax,0x97309dc5
  422e9c:	xor    eax,0x3475f441
  422ea1:	in     eax,0x26
  422ea3:	dec    esp
  422ea4:	fstp   TBYTE PTR [ebp+0x9dc1251]
  422eaa:	popf   
  422eab:	enter  0xc9fc,0x19
  422eaf:	fild   DWORD PTR [eax]
  422eb1:	mov    ch,0x6d
  422eb3:	hlt    
  422eb4:	dec    ebx
  422eb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422eb6:	leave  
  422eb7:	dec    ebp
  422eb8:	ss xchg ecx,eax
  422eba:	adc    eax,DWORD PTR [ebx-0x5487e1cd]
  422ec0:	(bad)  
  422ec1:	mov    al,ds:0x58c2f275
  422ec6:	adc    BYTE PTR [ecx-0x50ef17db],0x1c
  422ecd:	jecxz  0x422f3e
  422ecf:	jg     0x422eec
  422ed1:	adc    esp,0x70
  422ed4:	dec    eax
  422ed5:	xor    BYTE PTR [ebx-0x27],bh
  422ed8:	pop    esi
  422ed9:	dec    edx
  422eda:	dec    edx
  422edb:	adc    DWORD PTR [ebx],ebp
  422edd:	cdq    
  422ede:	pusha  
  422edf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ee0:	fist   WORD PTR [ecx+0x3dcbc7da]
  422ee6:	dec    ebx
  422ee7:	mov    ch,0x55
  422ee9:	and    DWORD PTR [ebx-0x14],esp
  422eec:	jbe    0x422e78
  422eee:	out    0x59,al
  422ef0:	mov    edi,0x8eba8d89
  422ef5:	or     esp,ebp
  422ef7:	mov    ah,0xb5
  422ef9:	mov    esi,DWORD PTR [edx]
  422efb:	adc    ebx,0x0
  422efe:	std    
  422eff:	inc    ebp
  422f00:	jnp    0x422f1c
  422f02:	out    dx,eax
  422f03:	mov    ebp,DWORD PTR [ecx+0x1d]
  422f06:	int    0x6e
  422f08:	add    BYTE PTR [eax-0x49f38e1e],bh
  422f0e:	push   ebx
  422f0f:	adc    eax,0x3ce89b67
  422f14:	mov    bh,0x7c
  422f16:	dec    edi
  422f17:	aam    0xaf
  422f19:	scas   al,BYTE PTR es:[edi]
  422f1a:	sbb    al,0x1
  422f1c:	in     eax,dx
  422f1d:	xchg   ecx,eax
  422f1e:	mov    BYTE PTR [edi+0x66e9b682],bl
  422f24:	popf   
  422f25:	inc    esi
  422f27:	dec    bl
  422f29:	jmp    0x422ebb
  422f2b:	dec    edx
  422f2c:	add    ebx,esp
  422f2e:	mov    edx,0xd95d3588
  422f33:	lods   al,BYTE PTR ds:[esi]
  422f34:	imul   edi,DWORD PTR [eax+0x35432e0d],0xffffffbf
  422f3b:	pop    es
  422f3c:	fsub   st(7),st
  422f3e:	test   DWORD PTR [edx+0x48],ecx
  422f41:	push   0xffffff9b
  422f43:	inc    eax
  422f44:	sbb    esp,DWORD PTR [esi]
  422f46:	std    
  422f47:	fwait
  422f48:	test   eax,0x564b667c
  422f4d:	jl     0x422f85
  422f4f:	mov    edi,0x16d6e417
  422f54:	adc    al,0x12
  422f56:	(bad)
  422f5a:	arpl   WORD PTR [eax],sp
  422f5c:	test   DWORD PTR [eax+ebp*1-0x6067a5b0],0x3dcb835c
  422f67:	(bad)  
  422f69:	sub    BYTE PTR [esi],0xd2
  422f6c:	retf   0xaa3
  422f6f:	scas   al,BYTE PTR es:[edi]
  422f70:	int    0x70
  422f72:	push   ds
  422f73:	repz loopne 0x422f9d
  422f76:	sahf   
  422f77:	mov    al,ds:0x23e276fc
  422f7c:	mov    ch,0x39
  422f7e:	sub    eax,0xc9603cdf
  422f83:	jae    0x422f53
  422f85:	push   ds
  422f86:	aam    0xe5
  422f88:	iret   
  422f89:	in     eax,dx
  422f8a:	loope  0x422fa9
  422f8c:	and    DWORD PTR [edx+0x75],ebp
  422f8f:	test   al,0xf4
  422f91:	mov    eax,ds:0xc7252d86
  422f96:	mov    ecx,0x2d578683
  422f9b:	dec    eax
  422f9c:	mov    bl,0xc3
  422f9e:	fdiv   QWORD PTR [ebp+0x4f336166]
  422fa4:	fld    st(7)
  422fa6:	push   ebp
  422fa7:	(bad)  
  422fa8:	test   BYTE PTR [esi-0x34868faa],0xa0
  422faf:	or     al,0xfa
  422fb1:	into   
  422fb2:	sub    BYTE PTR [edx],0x13
  422fb5:	add    BYTE PTR [edx],cl
  422fb7:	clc    
  422fb8:	jbe    0x422fcd
  422fba:	lock bound esi,QWORD PTR [esi+0x6b347aca]
  422fc1:	mov    eax,ds:0x9de2a689
  422fc6:	sar    BYTE PTR ds:0xcff1343a,0x9a
  422fcd:	cli    
  422fce:	jle    0x42301e
  422fd0:	in     eax,0x2f
  422fd2:	js     0x422f75
  422fd4:	loopne 0x422f62
  422fd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422fd7:	mov    al,0xb
  422fd9:	not    BYTE PTR [ecx+edx*4+0x27cab9e9]
  422fe0:	into   
  422fe1:	jnp    0x422fe5
  422fe3:	bound  ebp,QWORD PTR [eax-0x57c6a718]
  422fe9:	dec    ebx
  422fea:	aas    
  422feb:	idiv   cl
  422fed:	lods   eax,DWORD PTR ds:[esi]
  422fee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422fef:	das    
  422ff0:	call   0x8c3c:0x4c8f3347
  422ff7:	dec    esp
  422ff8:	mov    ds:0xb7c9d2da,al
  422ffd:	pop    ss
  422ffe:	push   ebx
  422fff:	jp     0x422fe8
  423001:	mov    bh,0x7d
  423003:	mov    dl,0xcd
  423005:	loop   0x422ffc
  423007:	xor    al,0x7d
  423009:	jae    0x42302f
  42300b:	ret    
  42300c:	pop    edi
  42300d:	push   esi
  42300e:	fadd   st(1),st
  423010:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423011:	xchg   DWORD PTR [ecx],ebp
  423013:	(bad)  
  423014:	int    0x12
  423016:	jecxz  0x423047
  423018:	in     eax,0x5f
  42301a:	cmp    BYTE PTR [esi],bh
  42301c:	pushf  
  42301d:	ficom  DWORD PTR [edi]
  42301f:	in     al,dx
  423020:	enter  0xc32b,0x82
  423024:	xchg   ecx,eax
  423025:	lahf   
  423026:	out    0x9,eax
  423028:	in     eax,dx
  423029:	ds xchg ebp,eax
  42302b:	add    eax,0x24117b7c
  423030:	arpl   WORD PTR [edx+0x43],sp
  423033:	cmc    
  423034:	jnp    0x423030
  423036:	cwde   
  423037:	test   eax,0x2a9d3da5
  42303c:	gs ds test ch,0xd4
  423041:	inc    esp
  423042:	jns    0x423003
  423044:	xchg   esp,eax
  423045:	fld    DWORD PTR [ebx-0x50]
  423048:	xor    eax,0x4d7089c
  42304d:	cmp    DWORD PTR [eax-0x3cb4e1bf],0x76
  423054:	mov    edx,0xd2faafde
  423059:	enter  0x10dd,0x86
  42305d:	xchg   edi,eax
  42305e:	adc    BYTE PTR [ebp+0x40],cl
  423061:	(bad)  
  423062:	in     eax,0x4d
  423064:	inc    esi
  423065:	sub    al,0xe4
  423067:	adc    esp,ebp
  423069:	mov    WORD PTR [esi],?
  42306b:	sbb    DWORD PTR [eax+0x1],edi
  42306e:	iret   
  42306f:	inc    esp
  423070:	pop    esi
  423071:	aas    
  423072:	sahf   
  423073:	add    DWORD PTR [edi-0x7b70abb0],ebp
  423079:	inc    ecx
  42307a:	jnp    0x423046
  42307c:	cld    
  42307d:	int    0x4
  42307f:	call   0x84d006b7
  423084:	add    bl,bl
  423086:	jb     0x4230ba
  423088:	add    BYTE PTR [edi],cl
  42308a:	mov    dh,0x55
  42308c:	push   DWORD PTR [ebx]
  42308e:	ror    BYTE PTR [eax+0x458aff55],1
  423094:	dec    DWORD PTR [ebx+0x5d8be455]
  42309a:	hlt    
  42309b:	xor    edx,esi
  42309d:	add    edx,edi
  42309f:	imul   edx,ebx
  4230a2:	mov    ebx,DWORD PTR [ebp-0x8]
  4230a5:	mov    BYTE PTR [edx+ebx*1],al
  4230a8:	mov    eax,DWORD PTR [ebp-0x1c]
  4230ab:	mov    edx,DWORD PTR [ebp-0xc]
  4230ae:	xor    eax,esi
  4230b0:	add    eax,edi
  4230b2:	imul   eax,edx
  4230b5:	mov    edx,DWORD PTR [ebp-0x8]
  4230b8:	mov    al,BYTE PTR [eax+edx*1]
  4230bb:	mov    BYTE PTR [ebp-0x1],al
  4230be:	mov    eax,DWORD PTR [ebp-0x1c]
  4230c1:	mov    edx,DWORD PTR [ebp-0xc]
  4230c4:	xor    eax,esi
  4230c6:	add    eax,edi
  4230c8:	imul   eax,edx
  4230cb:	mov    edx,DWORD PTR [ebp-0x3c]
  4230ce:	xor    edx,esi
  4230d0:	add    eax,edx
  4230d2:	jmp    0x423ae0
  4230d7:	mov    ds:0x985c80eb,eax
  4230dc:	stos   DWORD PTR es:[edi],eax
  4230dd:	arpl   WORD PTR [ebx-0x7e],sp
  4230e0:	jg     0x4230ad
  4230e2:	xchg   BYTE PTR [eax],bl
  4230e4:	adc    eax,eax
  4230e6:	push   edi
  4230e7:	mov    cl,0x94
  4230e9:	popa   
  4230ea:	bound  edx,QWORD PTR [ecx-0x149d9d87]
  4230f0:	pop    es
  4230f1:	test   al,0x61
  4230f3:	fdiv   st(1),st
  4230f5:	mov    eax,0x6bf78954
  4230fa:	xchg   ah,ch
  4230fc:	inc    edi
  4230fd:	jge    0x4230d4
  4230ff:	xchg   ebx,eax
  423100:	sbb    eax,0x1813c054
  423105:	out    0xb1,eax
  423107:	ds (bad) 
  423109:	pusha  
  42310a:	clc    
  42310b:	cld    
  42310c:	dec    eax
  42310d:	push   esi
  42310e:	jge    0x42313a
  423110:	xor    edi,esi
  423112:	sbb    al,0x11
  423114:	stos   DWORD PTR es:[edi],eax
  423115:	inc    edx
  423116:	jne    0x423115
  423118:	xor    al,0x2a
  42311a:	enter  0xc1ad,0x11
  42311e:	pushf  
  42311f:	mov    DWORD PTR [eax],esp
  423121:	pop    ds
  423122:	cmp    al,0x67
  423124:	sbb    DWORD PTR [edi+ebp*8+0x256971ee],ecx
  42312b:	sub    edx,DWORD PTR [ecx-0x21f04af2]
  423131:	ds pop es
  423133:	push   ecx
  423134:	(bad)  
  423135:	push   esp
  423136:	(bad)  
  423137:	cwde   
  423138:	retf   0xc8a8
  42313b:	xchg   ebx,eax
  42313c:	sbb    al,0x13
  42313e:	sub    ebp,edi
  423140:	and    al,0x8f
  423142:	push   edx
  423143:	pushf  
  423144:	imul   bh
  423146:	mov    bh,0xfc
  423148:	inc    ebx
  423149:	es test eax,0x6baaf6d4
  42314f:	xchg   esp,eax
  423150:	test   DWORD PTR [ecx+0xefaceb5],edi
  423156:	adc    edx,DWORD PTR [edx+0x102693bf]
  42315c:	and    eax,0xfb9ad34f
  423161:	cdq    
  423162:	fcmovu st,st(3)
  423164:	int3   
  423165:	out    dx,eax
  423166:	dec    edi
  423167:	jae    0x423126
  423169:	inc    ebx
  42316a:	jnp    0x42314a
  42316c:	jo     0x423106
  42316e:	or     dl,BYTE PTR [ebx]
  423170:	arpl   WORD PTR [edi],dx
  423172:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423173:	or     dh,ah
  423175:	sub    ecx,DWORD PTR [eax-0x2a]
  423178:	arpl   WORD PTR [edx],si
  42317a:	nop
  42317b:	pusha  
  42317c:	inc    eax
  42317d:	xor    eax,0xa4f094d4
  423182:	ja     0x423203
  423184:	inc    esp
  423185:	fild   WORD PTR [eax-0x1ffe74d6]
  42318b:	mov    edx,0x8ced524
  423190:	cmc    
  423191:	push   ds
  423192:	addr16 imul esi,ebx,0xc5616faf
  423199:	das    
  42319a:	adc    ebp,DWORD PTR [eax+eax*8]
  42319d:	ins    BYTE PTR es:[edi],dx
  42319e:	push   cs
  42319f:	inc    DWORD PTR [ecx+0x6d]
  4231a2:	repnz cmp DWORD PTR [ecx-0x45f5aee3],0xffffffa3
  4231aa:	stos   DWORD PTR es:[edi],eax
  4231ab:	cmp    BYTE PTR [esi-0x6be9d0a3],dh
  4231b1:	cmp    ebx,DWORD PTR [esi+ebx*1-0x75]
  4231b5:	retf   0x6fe8
  4231b8:	into   
  4231b9:	adc    al,0x89
  4231bb:	fmul   QWORD PTR [ebx-0x54]
  4231be:	lea    esi,[esi+0x3edbbcb7]
  4231c4:	sbb    eax,DWORD PTR [esi]
  4231c6:	sbb    al,0x2b
  4231c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4231c9:	lea    ebp,[ecx+0x7db80016]
  4231cf:	cdq    
  4231d0:	push   0xc62ba67c
  4231d5:	scas   al,BYTE PTR es:[edi]
  4231d6:	das    
  4231d7:	add    ecx,edi
  4231d9:	sub    bh,BYTE PTR [eax]
  4231db:	mov    dl,0x92
  4231dd:	shr    edi,0x5d
  4231e0:	fst    QWORD PTR [edi]
  4231e2:	push   eax
  4231e3:	sbb    BYTE PTR [ecx],dh
  4231e5:	repnz xchg esp,eax
  4231e7:	jo     0x423169
  4231e9:	mov    dl,0x10
  4231eb:	dec    esi
  4231ec:	xor    bh,dh
  4231ee:	dec    ebx
  4231ef:	rcr    BYTE PTR [edx],cl
  4231f1:	jmp    0x7272:0xb392ad1c
  4231f8:	lods   al,BYTE PTR ds:[esi]
  4231f9:	inc    eax
  4231fa:	xor    DWORD PTR [esi],edi
  4231fc:	push   eax
  4231fd:	fcmove st,st(0)
  4231ff:	fcomp  DWORD PTR [ebx]
  423201:	cmp    DWORD PTR [ebx+0x75885094],0xb4c5165
  42320b:	loop   0x42318f
  42320d:	stos   DWORD PTR es:[edi],eax
  42320e:	xchg   DWORD PTR [eax],eax
  423210:	fdivr  st,st(7)
  423212:	(bad)  
  423213:	icebp  
  423214:	stc    
  423215:	inc    edx
  423216:	inc    esp
  423217:	xor    eax,0x8d2bdc1f
  42321c:	popa   
  42321d:	sub    ah,BYTE PTR [ebx+esi*2-0x2037d805]
  423224:	aam    0xf5
  423226:	mov    ch,0x7f
  423228:	enter  0xf779,0xfb
  42322c:	push   esi
  42322d:	xchg   ebp,eax
  42322e:	stos   DWORD PTR es:[edi],eax
  42322f:	lds    eax,FWORD PTR [ecx+0x54a9957f]
  423235:	fcomp  DWORD PTR [edx]
  423237:	int3   
  423238:	fadd   QWORD PTR [eax+0x7d52e0d3]
  42323e:	test   eax,0x78220cec
  423243:	(bad)  
  423244:	xor    dh,BYTE PTR [eax]
  423246:	jb     0x4232b0
  423248:	mov    bh,0xba
  42324a:	push   esi
  42324b:	or     eax,0x9784b06c
  423250:	ja     0x4231eb
  423252:	je     0x4231fc
  423254:	sbb    edx,ecx
  423256:	jae    0x42322e
  423258:	pop    ebp
  423259:	xchg   ebp,eax
  42325a:	add    DWORD PTR [esi+0x9],ecx
  42325d:	xor    bh,0x4b
  423260:	and    esp,DWORD PTR [ecx+0x58]
  423263:	cld    
  423264:	jns    0x42326a
  423266:	test   al,0xdf
  423268:	mov    eax,0x23928e58
  42326d:	sbb    edx,edx
  42326f:	xchg   ebx,eax
  423270:	stc    
  423271:	adc    dh,BYTE PTR [esi-0x194c3453]
  423277:	fild   QWORD PTR [ebp+eax*8+0x73]
  42327b:	or     dh,BYTE PTR [ebx-0x17ecd9de]
  423281:	cmc    
  423282:	ins    DWORD PTR es:[edi],dx
  423283:	test   eax,0x16d1fc1b
  423288:	inc    esp
  423289:	das    
  42328a:	add    DWORD PTR [esi-0x6a46d90f],eax
  423290:	add    al,0x44
  423292:	scas   al,BYTE PTR es:[edi]
  423293:	mov    WORD PTR [ebx+0x44],?
  423296:	cmp    dl,BYTE PTR fs:[edx+0x731695a4]
  42329d:	daa    
  42329e:	test   eax,0x4606cf3a
  4232a3:	(bad)  
  4232a4:	lahf   
  4232a5:	add    esi,DWORD PTR [ebp+0x653cdc1c]
  4232ab:	gs out 0xab,eax
  4232ae:	inc    edx
  4232af:	(bad)  
  4232b0:	rcr    BYTE PTR [ebp-0x4d480c49],0xfa
  4232b7:	icebp  
  4232b8:	or     BYTE PTR [edx+0x3fa8a833],ch
  4232be:	idiv   ebp
  4232c0:	push   0x2b837cfc
  4232c5:	xchg   BYTE PTR [esi],al
  4232c7:	imul   edx,DWORD PTR [edx-0x68139aec],0x43
  4232ce:	mov    esi,0x8d8ea30d
  4232d3:	(bad)  
  4232d5:	sub    al,0x53
  4232d7:	stos   DWORD PTR es:[edi],eax
  4232d8:	cmp    esp,edi
  4232da:	leave  
  4232db:	es call 0xf38f:0x83aa51a9
  4232e3:	in     eax,0xf5
  4232e5:	shr    DWORD PTR [esi-0x3d],1
  4232e8:	mov    ecx,0xe5766160
  4232ed:	or     BYTE PTR [ebx+edi*8],cl
  4232f0:	aaa    
  4232f1:	ret    0x1a9a
  4232f4:	adc    esp,0x4b4b9fac
  4232fa:	dec    edx
  4232fb:	addr16 out 0x45,al
  4232fe:	push   ecx
  4232ff:	rcl    DWORD PTR [edx-0xd1ed1ff],1
  423305:	in     eax,0xa7
  423307:	mul    DWORD PTR [ecx-0x11]
  42330a:	and    edx,DWORD PTR [ecx+0x6c]
  42330d:	xor    ecx,DWORD PTR [eax]
  42330f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423310:	dec    ecx
  423311:	es test eax,0xc7d26a4c
  423317:	into   
  423318:	xchg   esp,eax
  423319:	cmp    eax,esi
  42331b:	ins    BYTE PTR es:[edi],dx
  42331c:	test   BYTE PTR [eax-0x35],bl
  42331f:	aad    0x6a
  423321:	shl    esp,0x8c
  423324:	gs dec eax
  423326:	mov    al,0xa5
  423328:	add    dh,ah
  42332a:	adc    DWORD PTR [ecx-0x70c4ce9],0x7652782b
  423334:	(bad)  
  423335:	jle    0x4232d7
  423337:	dec    edi
  423338:	mov    bh,0x59
  42333a:	adc    al,BYTE PTR [ebx+0x1a4d6766]
  423340:	mov    esp,0x4d96df05
  423345:	push   eax
  423346:	dec    edi
  423347:	or     bh,BYTE PTR ds:0x9dcf34d9
  42334d:	out    0x90,eax
  42334f:	mov    ds:0x3b183a7a,eax
  423354:	push   ss
  423355:	or     al,0xfb
  423357:	iret   
  423358:	and    bl,BYTE PTR [ebx]
  42335a:	mov    bl,0x9e
  42335c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42335d:	stos   DWORD PTR es:[edi],eax
  42335e:	ja     0x423314
  423360:	addr16 sbb eax,0x5e04cd4
  423366:	das    
  423367:	(bad)  
  423368:	xor    al,BYTE PTR [ebx]
  42336a:	test   BYTE PTR [eax+eax*2],0x24
  42336e:	sub    edx,DWORD PTR [esi+0x502f4b26]
  423374:	icebp  
  423375:	ret    0xba92
  423378:	adc    eax,0x643f436a
  42337d:	add    al,0xee
  42337f:	mov    dl,0x76
  423381:	ret    0x8f13
  423384:	xadd   BYTE PTR [esi],dl
  423387:	jmp    ecx
  423389:	cmp    BYTE PTR ds:0x43363d1e,dl
  42338f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423390:	pushf  
  423391:	mov    ebx,0x90d18c54
  423396:	mov    ds:0x6c20d07a,al
  42339b:	in     eax,0xec
  42339d:	lods   eax,DWORD PTR ds:[esi]
  42339e:	popa   
  42339f:	mov    ebp,0x315ce8bc
  4233a4:	(bad)  
  4233a5:	jnp    0x42336b
  4233a7:	pop    edx
  4233a8:	and    eax,0xcff99785
  4233ad:	inc    ebx
  4233ae:	pop    edi
  4233af:	cmp    esp,DWORD PTR [edx+0x20]
  4233b2:	inc    ebp
  4233b3:	in     al,dx
  4233b4:	sbb    cl,al
  4233b6:	xchg   esi,eax
  4233b7:	outs   dx,BYTE PTR ds:[esi]
  4233b8:	mov    esp,0x463400fc
  4233bd:	adc    dl,BYTE PTR [edi]
  4233bf:	js     0x423362
  4233c1:	stos   BYTE PTR es:[edi],al
  4233c2:	dec    ebp
  4233c3:	push   es
  4233c4:	mov    ch,0x96
  4233c6:	add    al,0xae
  4233c8:	fild   QWORD PTR [edi]
  4233ca:	dec    ebp
  4233cb:	jo     0x4233b7
  4233cd:	pop    esp
  4233ce:	fdivr  DWORD PTR [ebp+0x7f]
  4233d1:	rcr    cl,1
  4233d3:	(bad)  
  4233d4:	push   ecx
  4233d5:	mov    bl,0xc7
  4233d7:	mov    esi,0x43b03904
  4233dc:	stc    
  4233dd:	pop    edi
  4233de:	imul   ebp,DWORD PTR [eax],0xfffffffd
  4233e1:	pop    ss
  4233e2:	or     al,0xb
  4233e4:	push   edi
  4233e5:	fadd   QWORD PTR [eax]
  4233e7:	xchg   esp,eax
  4233e8:	dec    eax
  4233e9:	dec    edi
  4233ea:	fs jle 0x423373
  4233ed:	rol    BYTE PTR [esi+0xf],0x4b
  4233f1:	add    eax,0xf164a91b
  4233f6:	leave  
  4233f7:	cli    
  4233f8:	mov    ch,0xe6
  4233fa:	out    dx,al
  4233fb:	push   es
  4233fc:	jmp    0x423454
  4233fe:	mov    ebx,0x416da688
  423404:	xchg   ecx,eax
  423405:	mov    ?,WORD PTR [ebx+0x13aa1626]
  42340b:	popf   
  42340c:	std    
  42340d:	and    bh,al
  42340f:	xor    bh,bh
  423411:	adc    BYTE PTR [ebp+0x2e],dl
  423414:	mov    esi,0x488ffaa0
  423419:	mov    eax,ds:0x71637559
  42341e:	cmp    DWORD PTR [ecx+0x29a1349],edi
  423424:	in     al,0x16
  423426:	or     dl,BYTE PTR [eax+0x14]
  423429:	das    
  42342a:	push   0xffffff9c
  42342c:	ficom  WORD PTR [ebp+0x61]
  42342f:	xlat   BYTE PTR ds:[ebx]
  423430:	loope  0x423476
  423432:	or     cl,BYTE PTR [ebx+0x7409f69b]
  423438:	lea    edx,[ecx-0x27]
  42343b:	push   ds
  42343c:	popa   
  42343d:	call   0xa50d9bd1
  423442:	sub    esp,esi
  423444:	pop    ds
  423445:	jl     0x4233c8
  423447:	arpl   WORD PTR [edi],si
  423449:	lods   al,BYTE PTR ds:[esi]
  42344a:	mov    eax,0x3a83a713
  42344f:	dec    ecx
  423450:	dec    esi
  423451:	mov    cl,0x78
  423453:	pop    edi
  423454:	mov    edx,0x4b8888ca
  423459:	dec    ecx
  42345a:	mov    BYTE PTR [eax],0x70
  42345d:	cmp    al,0x7b
  42345f:	rcr    BYTE PTR [ebx+0x42fcf74a],0xeb
  423466:	ficomp WORD PTR ds:0x5fd23f45
  42346c:	inc    ecx
  42346d:	xor    dl,al
  42346f:	out    dx,al
  423470:	inc    ecx
  423471:	xchg   eax,edi
  423473:	mov    dl,0x4b
  423475:	fs out 0x26,eax
  423478:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423479:	fstp   DWORD PTR [ebp+0x35]
  42347c:	repnz xor al,0xea
  42347f:	jle    0x4234c0
  423481:	rol    DWORD PTR [ebx+0x6daf8c8d],1
  423487:	pop    ds
  423488:	or     BYTE PTR [ecx+ebp*4-0x29],0xde
  42348d:	adc    dl,BYTE PTR [eax+ecx*4-0x79]
  423491:	pop    eax
  423492:	(bad)  
  423493:	cld    
  423494:	pusha  
  423495:	in     al,0x37
  423497:	iret   
  423498:	sbb    BYTE PTR [ebp+0x4c826b76],bl
  42349e:	mov    ecx,0x661bfb05
  4234a3:	dec    edx
  4234a4:	cmp    eax,0x1da35538
  4234a9:	mov    ebx,0x4b34417a
  4234ae:	cmc    
  4234af:	sar    DWORD PTR [ecx-0x61383a63],0x74
  4234b6:	sbb    al,BYTE PTR ds:[edx+0x46e19546]
  4234bd:	nop
  4234be:	jnp    0x4234a5
  4234c0:	push   esp
  4234c1:	push   0xffffff80
  4234c3:	mul    BYTE PTR [ecx]
  4234c5:	(bad)  es:[edx]
  4234c8:	jns    0x4234f6
  4234ca:	test   DWORD PTR [ebp+0x4f3df71a],esi
  4234d0:	test   edx,0xd1f9913b
  4234d6:	mov    ds:0x2f1b78df,al
  4234db:	xchg   BYTE PTR [ebx-0x33617d03],bl
  4234e1:	enter  0xd50c,0x35
  4234e5:	mov    es,ecx
  4234e7:	and    bl,BYTE PTR [edi-0x6c2be766]
  4234ed:	push   0x63
  4234ef:	adc    edi,DWORD PTR [ecx-0x2d]
  4234f2:	aaa    
  4234f3:	iret   
  4234f4:	adc    bl,cl
  4234f6:	xor    edx,DWORD PTR [edx]
  4234f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234f9:	push   es
  4234fa:	mov    al,BYTE PTR [esi+edi*4]
  4234fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234fe:	loop   0x42353a
  423500:	jge    0x423550
  423502:	jecxz  0x42348f
  423504:	shl    BYTE PTR [esi-0x22f4085c],cl
  42350a:	into   
  42350b:	or     eax,0x93cdc67b
  423510:	push   0xa863bb84
  423515:	aaa    
  423516:	pop    ds
  423517:	xor    ecx,DWORD PTR [edx-0x3e264930]
  42351d:	or     eax,0x8f46c960
  423522:	mov    ebx,0x5246337b
  423527:	lea    edi,[ebp-0x4d2a05a]
  42352d:	push   0xffffff91
  42352f:	(bad)  
  423530:	aad    0x93
  423532:	std    
  423533:	pop    es
  423534:	lods   eax,DWORD PTR ds:[esi]
  423535:	mov    eax,0x3d20d020
  42353a:	push   cs
  42353b:	call   0x565b:0x748cf8c9
  423542:	std    
  423543:	dec    ebx
  423544:	jae    0x423527
  423546:	call   0x72e4:0x200c88f8
  42354d:	ret    0x973a
  423550:	test   al,0x6
  423552:	cmp    esp,esp
  423554:	cmpps  xmm2,XMMWORD PTR [ebx],0x10
  423558:	xor    al,0x83
  42355a:	outs   dx,BYTE PTR ds:[esi]
  42355b:	add    eax,0x1bc0fa12
  423560:	fs mov esi,0x24750469
  423566:	test   bh,cl
  423568:	adc    eax,DWORD PTR [eax]
  42356a:	sti    
  42356b:	mov    DWORD PTR [edi],eax
  42356d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42356e:	sub    eax,0x5c01c801
  423573:	int    0x23
  423575:	lahf   
  423576:	mov    al,0xfb
  423578:	push   0x9a90b128
  42357d:	inc    edi
  42357e:	xor    esi,DWORD PTR [esi-0x22bf8fdd]
  423584:	inc    edi
  423585:	cli    
  423586:	rol    cl,1
  423588:	inc    edx
  423589:	les    ecx,FWORD PTR [ecx-0x14ef79dd]
  42358f:	jnp    0x4235ea
  423591:	test   al,0x49
  423593:	xchg   BYTE PTR [edx-0x13],cl
  423596:	sbb    DWORD PTR [eax],0x76
  423599:	push   ecx
  42359a:	sar    dl,1
  42359c:	mov    cl,0xc3
  42359e:	out    dx,al
  42359f:	icebp  
  4235a0:	sbb    DWORD PTR [esi+0x79],ecx
  4235a3:	and    BYTE PTR [edi+0x46],ah
  4235a6:	mov    ebp,0x7c128267
  4235ab:	ret    
  4235ac:	daa    
  4235ad:	and    bl,bl
  4235af:	push   es
  4235b0:	xor    esi,ebx
  4235b2:	xchg   DWORD PTR [eax+0x14f4576a],esi
  4235b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235b9:	and    esp,DWORD PTR [ecx+0x496722af]
  4235bf:	or     DWORD PTR [edx-0x59],esp
  4235c2:	dec    ebp
  4235c3:	retf   
  4235c4:	jmp    0x4235cc
  4235c6:	mov    edx,?
  4235c8:	sti    
  4235c9:	mov    cl,0xff
  4235cb:	cmp    sp,si
  4235ce:	out    0x5,eax
  4235d0:	pop    esp
  4235d1:	hlt    
  4235d2:	or     al,0x37
  4235d4:	(bad)  [esi+0x11e20dab]
  4235da:	aam    0xad
  4235dc:	es mov dl,0x9e
  4235df:	push   ebx
  4235e0:	add    BYTE PTR [esi+0x13],cl
  4235e3:	jg     0x4235e5
  4235e5:	das    
  4235e6:	cmc    
  4235e7:	jp     0x4235d5
  4235e9:	nop
  4235ea:	jle    0x4235b0
  4235ec:	and    esi,0x4
  4235ef:	or     eax,0x53568161
  4235f4:	xchg   edx,eax
  4235f5:	jmp    0x423666
  4235f7:	xor    DWORD PTR [esp+ebx*8],edx
  4235fa:	(bad)  
  4235fb:	mov    ?,esi
  4235fd:	imul   esi,DWORD PTR [ebx],0xffffffba
  423600:	push   ebx
  423601:	fwait
  423602:	outs   dx,DWORD PTR ds:[esi]
  423603:	vcvtsi2sd xmm5,xmm4,DWORD PTR [esi+0x2c]
  423608:	xchg   edx,eax
  423609:	jmp    0x42360b
  42360b:	or     eax,0xd75c9fcc
  423610:	push   ecx
  423611:	fs ss jg 0x423622
  423615:	inc    edi
  423616:	test   eax,0xf200aaaf
  42361b:	and    bh,al
  42361d:	fs int 0x8f
  423620:	cmp    ecx,DWORD PTR [ebp-0x22]
  423623:	lods   al,BYTE PTR ds:[esi]
  423624:	sub    edi,edx
  423626:	dec    eax
  423627:	mov    gs,WORD PTR [edx]
  423629:	xor    eax,0x41103da6
  42362e:	ja     0x4236ac
  423630:	xor    DWORD PTR [ebx+0x57d8642a],edx
  423636:	ja     0x423675
  423638:	and    BYTE PTR [ebx+0x70],dh
  42363b:	imul   ebp,DWORD PTR [ebp+0x65327995],0x78444d1
  423645:	push   esi
  423646:	aam    0x7b
  423648:	and    al,0x36
  42364a:	push   esi
  42364b:	data16 loop 0x42368d
  42364e:	pop    esi
  42364f:	fild   QWORD PTR [eax+edx*2]
  423652:	jle    0x4235e1
  423654:	mov    edi,0x5221d188
  423659:	sbb    al,0x5e
  42365b:	cld    
  42365c:	(bad)  
  42365d:	pop    eax
  42365e:	sbb    ch,cl
  423660:	ins    BYTE PTR es:[edi],dx
  423661:	dec    ebp
  423662:	mov    ah,0x93
  423664:	sbb    dh,ch
  423666:	iret   
  423667:	leave  
  423668:	push   ss
  423669:	push   cs
  42366a:	mov    edi,0x90053ae8
  42366f:	int3   
  423670:	or     ecx,ecx
  423672:	and    BYTE PTR [eax+0x4],al
  423675:	adc    BYTE PTR [edx-0x5a],bh
  423678:	retf   0xe70e
  42367b:	test   eax,0xb3d415fc
  423680:	adc    ch,cl
  423682:	dec    ebp
  423683:	test   BYTE PTR [ecx-0x4c5d56e7],dl
  423689:	lahf   
  42368a:	xor    al,bh
  42368c:	int3   
  42368d:	jecxz  0x423611
  42368f:	or     eax,0xd26ee5fa
  423694:	mov    ecx,0xcdff22a3
  423699:	xchg   DWORD PTR [ebp+0x77],edx
  42369c:	sub    BYTE PTR [esi+0x51bef195],cl
  4236a2:	mov    al,0x92
  4236a4:	in     eax,0xb2
  4236a6:	sbb    eax,0xa52ded00
  4236ab:	adc    ah,BYTE PTR [esi]
  4236ad:	cld    
  4236ae:	jnp    0x42363e
  4236b0:	(bad)  
  4236b1:	cmp    eax,0x6dcc6cd7
  4236b6:	js     0x4236b1
  4236b8:	int3   
  4236b9:	imul   esp,DWORD PTR [ecx-0x7c],0x39
  4236bd:	xor    eax,0x75cdf7ad
  4236c2:	mov    esi,DWORD PTR [ecx+0x34dfe1cd]
  4236c8:	jp     0x42373b
  4236ca:	daa    
  4236cb:	push   eax
  4236cc:	and    eax,0xfc99bd60
  4236d1:	lock jg 0x42370d
  4236d4:	call   0x2ff5:0xc068ce9b
  4236db:	or     bh,BYTE PTR [edi]
  4236dd:	adc    al,0xcd
  4236df:	mov    ah,0x31
  4236e1:	cmc    
  4236e2:	dec    esp
  4236e3:	sub    esp,edi
  4236e5:	fwait
  4236e6:	xor    al,0x1d
  4236e8:	scas   eax,DWORD PTR es:[edi]
  4236e9:	jno    0x423688
  4236eb:	jns    0x423743
  4236ed:	jbe    0x42373f
  4236ef:	(bad)  
  4236f1:	mov    ebx,0x8fa0ec2f
  4236f6:	inc    ebx
  4236f7:	xchg   esi,eax
  4236f8:	fadd   DWORD PTR [eax+0x68]
  4236fb:	cmp    edx,esi
  4236fd:	stc    
  4236fe:	push   ecx
  4236ff:	mov    al,0xed
  423701:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423702:	add    al,0x55
  423704:	xchg   DWORD PTR [esi-0x1d],edx
  423707:	rcr    DWORD PTR [eax],0x55
  42370a:	in     eax,0x3a
  42370c:	lods   al,BYTE PTR ds:[esi]
  42370d:	setnp  BYTE PTR [edi]
  423710:	mov    bh,0xfc
  423712:	xor    DWORD PTR [ecx-0x343d5eda],edx
  423718:	loope  0x4236b3
  42371a:	inc    edi
  42371b:	mov    al,0xb9
  42371d:	adc    al,0xab
  42371f:	push   es
  423720:	stos   BYTE PTR es:[edi],al
  423721:	(bad)  
  423722:	push   esi
  423723:	dec    edi
  423724:	pop    ds
  423725:	pop    edx
  423726:	sbb    al,bl
  423728:	lds    edi,FWORD PTR [eax]
  42372a:	sbb    dh,ah
  42372c:	add    bl,BYTE PTR [edi-0x3cc7c823]
  423732:	xor    ecx,edx
  423734:	add    al,0xb
  423736:	mov    bh,0xdc
  423738:	shl    bl,cl
  42373a:	pop    ds
  42373b:	inc    ecx
  42373c:	neg    BYTE PTR [ecx+0x1518371a]
  423742:	dec    esi
  423743:	scas   eax,DWORD PTR es:[edi]
  423744:	fist   DWORD PTR [ecx+0x5a]
  423747:	retf   0xa1a4
  42374a:	aaa    
  42374b:	mov    al,ds:0x588e01e8
  423750:	pop    ss
  423751:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423754:	push   esp
  423755:	lahf   
  423756:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423757:	fsubr  DWORD PTR [edx-0x48a7eaf9]
  42375d:	sub    cl,bl
  42375f:	sbb    BYTE PTR [eax-0x4585daa5],al
  423765:	scas   eax,DWORD PTR es:[edi]
  423766:	rcl    DWORD PTR [edi],cl
  423768:	ds ret 0x28be
  42376c:	out    dx,al
  42376d:	lods   eax,DWORD PTR ds:[esi]
  42376e:	sbb    al,0x39
  423770:	add    BYTE PTR [ecx],0xc5
  423773:	aad    0xa2
  423775:	inc    edi
  423776:	xchg   DWORD PTR [eax],ecx
  423778:	xchg   DWORD PTR [ebx+ebx*2+0x36],ebx
  42377c:	jl     0x423747
  42377e:	cmp    eax,0x9916a6aa
  423783:	out    dx,al
  423784:	and    ch,BYTE PTR [esi+0x7b]
  423787:	not    BYTE PTR [ecx+0x1e]
  42378a:	mov    cl,0xd2
  42378c:	daa    
  42378d:	mov    eax,ds:0x9fa7ec73
  423792:	push   cs
  423793:	je     0x423754
  423795:	mov    eax,ds:0xba2d5253
  42379a:	push   ebx
  42379b:	inc    ebp
  42379c:	js     0x42380b
  42379e:	adc    dl,al
  4237a0:	adc    bl,BYTE PTR [esi]
  4237a2:	pop    edi
  4237a3:	pop    ebx
  4237a4:	xchg   ebx,eax
  4237a5:	lds    eax,FWORD PTR [eax]
  4237a7:	scas   al,BYTE PTR es:[edi]
  4237a8:	push   eax
  4237a9:	cdq    
  4237aa:	lahf   
  4237ab:	adc    cl,bl
  4237ad:	pop    ecx
  4237ae:	xor    BYTE PTR [ebx-0x41d49cf4],bl
  4237b4:	pop    edx
  4237b5:	inc    esi
  4237b6:	fs call 0xc029:0x7f5f1a85
  4237be:	clc    
  4237bf:	jmp    0x423777
  4237c1:	mov    BYTE PTR [ebx+0x3e65a765],ch
  4237c7:	adc    ecx,DWORD PTR [ecx]
  4237c9:	fdivr  QWORD PTR [edi-0x3711b8b]
  4237cf:	jle    0x4237a4
  4237d1:	ret    0x520c
  4237d4:	mov    ecx,0xc4a33d19
  4237d9:	ret    
  4237da:	popa   
  4237db:	sbb    dl,bh
  4237dd:	scas   al,BYTE PTR es:[edi]
  4237de:	scas   eax,DWORD PTR es:[edi]
  4237df:	mov    ds:0x9d557bbc,eax
  4237e4:	sbb    edi,DWORD PTR [esi+ebx*8-0x3cb59f08]
  4237eb:	sahf   
  4237ec:	dec    esi
  4237ed:	mov    ch,BYTE PTR [esi+0x3239659c]
  4237f3:	and    edx,DWORD PTR [esi]
  4237f5:	scas   eax,DWORD PTR es:[edi]
  4237f6:	ins    BYTE PTR es:[edi],dx
  4237f7:	push   es
  4237f8:	cmp    esi,DWORD PTR [edx+0x64513315]
  4237fe:	or     BYTE PTR [edi+0x545cd376],cl
  423804:	dec    esi
  423805:	mov    ds:0x390d9a1a,al
  42380a:	lods   al,BYTE PTR ds:[esi]
  42380b:	push   cs
  42380c:	cld    
  42380d:	les    ecx,FWORD PTR [ebx+0xa]
  423810:	dec    DWORD PTR [ebx-0x66]
  423813:	push   0xb11a4112
  423818:	add    eax,0x5dd03e34
  42381d:	test   DWORD PTR [esi],eax
  42381f:	pop    ds
  423820:	shl    BYTE PTR [esi+0x44],1
  423823:	les    ebx,FWORD PTR [esi-0x62]
  423826:	push   edi
  423827:	and    al,al
  423829:	loope  0x42388a
  42382b:	outs   dx,BYTE PTR ds:[esi]
  42382c:	xchg   esi,eax
  42382d:	pop    eax
  42382e:	loop   0x423888
  423830:	mov    ds:0xe58d03bf,al
  423835:	inc    esp
  423836:	je     0x4237eb
  423838:	and    DWORD PTR [edx-0x72],eax
  42383b:	outs   dx,DWORD PTR ds:[esi]
  42383c:	mov    bh,BYTE PTR [edx]
  42383e:	pop    ds
  42383f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423840:	test   al,dl
  423842:	and    BYTE PTR [ebp-0xc6492b5],ah
  423848:	xchg   DWORD PTR [edx+0x62],ecx
  42384b:	pusha  
  42384c:	xor    cl,dh
  42384e:	mov    al,BYTE PTR [esi-0x2778f8e6]
  423854:	aam    0xf9
  423856:	mov    ecx,0xfeb1ff90
  42385b:	sbb    bl,al
  42385d:	aam    0x7a
  42385f:	daa    
  423860:	or     eax,0xdf5d729e
  423865:	jns    0x42383b
  423867:	adc    ebx,esp
  423869:	retf   
  42386a:	dec    DWORD PTR fs:[edi+0x39]
  42386e:	cmp    edi,DWORD PTR [eax+0x68767bae]
  423874:	push   esp
  423875:	fld    QWORD PTR [ebp-0x5fe2910e]
  42387b:	out    0xd0,al
  42387d:	sbb    DWORD PTR [ebx],0xfffffffb
  423880:	xchg   edi,eax
  423881:	jl     0x423878
  423883:	adc    eax,0x50e53204
  423888:	lock adc al,0x24
  42388b:	and    BYTE PTR [ecx],dl
  42388d:	data16 fsubr QWORD PTR [ebp+ebp*8-0x6d]
  423892:	add    esi,eax
  423894:	adc    al,0x5a
  423896:	xchg   ebx,eax
  423897:	dec    edi
  423898:	and    eax,0xa578a6bf
  42389d:	add    edx,DWORD PTR [ecx]
  42389f:	popf   
  4238a0:	mov    esp,DWORD PTR [esi+0x1b7d3da8]
  4238a6:	test   DWORD PTR [eax+esi*8+0x5b94f944],esi
  4238ad:	push   ecx
  4238ae:	xchg   esi,eax
  4238af:	push   edx
  4238b0:	mov    esi,0x64fc1b31
  4238b5:	xor    bl,0xa7
  4238b8:	ss cdq 
  4238ba:	aad    0xf7
  4238bc:	add    DWORD PTR ds:0x3890fd4a,0x23
  4238c3:	lock test eax,0x7b6eda5d
  4238c9:	and    eax,0x42980f5e
  4238ce:	and    ebp,eax
  4238d0:	sbb    BYTE PTR [edx+0x79],cl
  4238d3:	pop    esi
  4238d4:	mov    al,BYTE PTR [ecx-0x67]
  4238d7:	jo     0x42392e
  4238d9:	loopne 0x4238ea
  4238db:	repnz cmp eax,0x718c4012
  4238e1:	jne    0x42388d
  4238e3:	in     eax,dx
  4238e4:	pop    ebx
  4238e5:	aaa    
  4238e6:	jl     0x42390b
  4238e8:	ficom  DWORD PTR [ecx+0x59]
  4238eb:	jo     0x4238c9
  4238ed:	push   0x23bc24f4
  4238f2:	cmp    DWORD PTR ds:0x33e47b06,ebx
  4238f8:	cmp    al,0xa6
  4238fa:	(bad)  
  4238fc:	ds inc ebp
  4238fe:	call   0xa0b1:0x5b65e256
  423905:	add    ah,BYTE PTR [edi-0x12]
  423908:	xchg   esi,eax
  423909:	xchg   esi,eax
  42390a:	xchg   esi,eax
  42390b:	std    
  42390c:	retf   0x4e2a
  42390f:	cmp    ah,BYTE PTR [eax]
  423911:	jmp    0x850f8725
  423916:	fld    TBYTE PTR [edi-0x31]
  423919:	cmp    eax,eax
  42391b:	inc    esp
  42391c:	pop    ecx
  42391d:	push   esp
  42391e:	scas   eax,DWORD PTR es:[edi]
  42391f:	mov    cl,0x83
  423921:	push   0x52f75f82
  423926:	nop
  423927:	pushf  
  423928:	xchg   ebx,eax
  423929:	cs test al,0xf8
  42392c:	dec    ecx
  42392d:	mov    ds:0xcd8b16f7,eax
  423932:	jl     0x42393c
  423934:	mov    ch,al
  423936:	cmc    
  423937:	mov    dh,0xb7
  423939:	lods   eax,DWORD PTR ds:[esi]
  42393a:	dec    edi
  42393b:	and    eax,0x462e48f9
  423940:	dec    esi
  423941:	pushf  
  423942:	aas    
  423943:	call   0x4934:0xcee01d43
  42394a:	imul   ebx,DWORD PTR [ebx-0x41],0x2a
  42394e:	or     BYTE PTR [ebx+0x69],0x82
  423952:	sbb    bl,ch
  423954:	xchg   cl,cl
  423956:	adc    eax,0xb0f7ad1c
  42395b:	cwde   
  42395c:	jmp    0x4ac5:0x42dc002a
  423963:	popa   
  423964:	adc    DWORD PTR cs:[edx-0x1c],edx
  423968:	xchg   esi,eax
  423969:	jmp    0x711e9e79
  42396e:	or     eax,0x7b0c9798
  423973:	repz mov ecx,0xed1629cd
  423979:	je     0x423930
  42397b:	ins    DWORD PTR es:[edi],dx
  42397c:	add    DWORD PTR [ebp+0x4456f645],esp
  423982:	add    eax,0x7e3bd1a0
  423987:	ins    DWORD PTR es:[edi],dx
  423988:	shl    BYTE PTR [eax+0x789a3e0c],1
  42398e:	(bad)  
  42398f:	dec    edi
  423990:	xor    DWORD PTR [edi+0x66fdd1c1],ebx
  423996:	mov    ebx,0x443c09cd
  42399b:	test   cl,cl
  42399d:	mov    esi,0xe44fe88e
  4239a2:	in     eax,dx
  4239a3:	fstp   TBYTE PTR [esp+edx*2-0x79cebfb4]
  4239aa:	dec    edi
  4239ab:	xchg   esi,eax
  4239ac:	fld    QWORD PTR [eax+ebx*1]
  4239af:	adc    BYTE PTR [ebp+ebp*8+0x156d11c9],0x7c
  4239b7:	fldcw  WORD PTR [edi+0x77]
  4239ba:	in     eax,dx
  4239bb:	xlat   BYTE PTR ds:[ebx]
  4239bc:	iret   
  4239bd:	add    edi,ecx
  4239bf:	mov    ds:0x3c5a700a,al
  4239c4:	fst    QWORD PTR [eax-0x13]
  4239c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239c8:	add    ebp,DWORD PTR [esi-0x77]
  4239cb:	jo     0x423a03
  4239cd:	inc    esp
  4239ce:	cmp    al,0xf5
  4239d0:	and    ch,BYTE PTR [esi]
  4239d2:	ror    DWORD PTR ds:0xdbd4fdbc,0x1b
  4239d9:	cdq    
  4239da:	xor    bl,BYTE PTR [edx-0x66]
  4239dd:	paddd  mm7,QWORD PTR [ebx+0x24]
  4239e1:	lea    esi,[edx+0x58]
  4239e4:	pop    ds
  4239e5:	mov    dh,0x29
  4239e7:	inc    esi
  4239e8:	jne    0x423972
  4239ea:	sbb    BYTE PTR [edx+0x260a8444],al
  4239f0:	mov    edx,0xe8e62c6c
  4239f5:	xchg   esp,eax
  4239f6:	fcmovb st,st(3)
  4239f8:	push   es
  4239f9:	jno    0x4239af
  4239fb:	rcr    BYTE PTR [eax-0x6c],1
  4239fe:	scas   al,BYTE PTR es:[edi]
  4239ff:	pop    eax
  423a00:	pop    ss
  423a01:	adc    eax,0xa5ada3e5
  423a06:	ins    BYTE PTR es:[edi],dx
  423a07:	dec    ebx
  423a08:	jge    0x423a46
  423a0a:	in     eax,dx
  423a0b:	in     al,dx
  423a0c:	and    eax,0x83120225
  423a11:	leave  
  423a12:	fwait
  423a13:	xchg   ebp,eax
  423a14:	mov    DWORD PTR [edi],edx
  423a16:	and    al,0x79
  423a18:	fiadd  WORD PTR [ebx]
  423a1a:	push   edi
  423a1b:	mov    ecx,0xf0bed4d9
  423a20:	mov    WORD PTR [ebp-0x4d170f59],gs
  423a26:	shl    DWORD PTR [esi-0x6b],1
  423a29:	dec    ecx
  423a2a:	rcr    DWORD PTR ds:0xc9211957,1
  423a30:	test   BYTE PTR [ebx+eiz*2-0x30c724de],0x8d
  423a38:	cmc    
  423a39:	sub    BYTE PTR [edi-0x4c],dh
  423a3c:	mov    bl,0xd7
  423a3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a3f:	mov    ecx,0xd99b69bc
  423a44:	imul   ecx,DWORD PTR [esi+0x12],0x7b479c4d
  423a4b:	loope  0x4239fd
  423a4d:	jecxz  0x423a2a
  423a4f:	push   edx
  423a50:	daa    
  423a51:	inc    eax
  423a52:	sub    bl,BYTE PTR [esi-0x23]
  423a55:	jge    0x423a91
  423a57:	mov    edi,0xd9fdfca2
  423a5c:	cmc    
  423a5d:	mov    ebp,0x1d0894b2
  423a62:	dec    DWORD PTR [ecx+0x21a5a27d]
  423a68:	gs push esi
  423a6a:	rcr    BYTE PTR [edi-0x48],cl
  423a6d:	test   eax,0x7a3de9d6
  423a72:	out    dx,al
  423a73:	sub    al,bh
  423a75:	rcl    ebp,1
  423a77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a78:	out    0x82,al
  423a7a:	fstp   TBYTE PTR [ebp-0x7f]
  423a7d:	ss pop ebp
  423a7f:	(bad)  
  423a80:	out    dx,eax
  423a81:	call   0xf5203214
  423a86:	adc    cl,dh
  423a88:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  423a8a:	or     edx,ebx
  423a8c:	sahf   
  423a8d:	ret    
  423a8e:	mov    dh,0x59
  423a90:	dec    ecx
  423a91:	mov    al,ds:0xdbabc0ac
  423a96:	(bad)  [ebx]
  423a98:	loope  0x423a5b
  423a9a:	cmc    
  423a9b:	repnz mov cs,ebx
  423a9e:	(bad)  
  423a9f:	fisttp DWORD PTR [edx+ecx*1+0x52]
  423aa3:	inc    DWORD PTR [edi+0x1203945]
  423aa9:	cdq    
  423aaa:	fmul   DWORD PTR [edi]
  423aac:	cwde   
  423aad:	inc    ebp
  423aae:	mov    ds:0x31a83327,eax
  423ab3:	call   0xe0d4:0xbab09805
  423aba:	sbb    al,dh
  423abc:	inc    ebp
  423abd:	js     0x423adb
  423abf:	mov    bl,0x4c
  423ac1:	lahf   
  423ac2:	dec    ebx
  423ac3:	jnp    0x423a80
  423ac5:	loope  0x423a76
  423ac7:	rol    DWORD PTR [esp+edx*4+0x33],0x45
  423acc:	and    esp,DWORD PTR [ebx]
  423ace:	stc    
  423acf:	mov    ecx,0xe239efd8
  423ad4:	inc    esp
  423ad5:	mov    al,ds:0x40a1eee
  423ada:	mov    ecx,0x1874eea8
  423adf:	pusha  
  423ae0:	mov    edx,DWORD PTR [ebp-0x8]
  423ae3:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  423aeb:	mov    edx,DWORD PTR [ebp-0x54]
  423aee:	xor    edx,esi
  423af0:	lea    eax,[edx+eax*1+0x3272db]
  423af7:	movzx  edx,BYTE PTR [ebp-0x1]
  423afb:	xor    edx,eax
  423afd:	mov    BYTE PTR [ebp-0x1],dl
  423b00:	mov    al,BYTE PTR [ebp-0x1]
  423b03:	mov    edx,DWORD PTR [ebp-0x1c]
  423b06:	mov    ebx,DWORD PTR [ebp-0xc]
  423b09:	xor    edx,esi
  423b0b:	add    edx,edi
  423b0d:	imul   edx,ebx
  423b10:	mov    ebx,DWORD PTR [ebp-0x8]
  423b13:	mov    BYTE PTR [edx+ebx*1],al
  423b16:	mov    eax,DWORD PTR [ebp-0x30]
  423b19:	mov    edx,DWORD PTR [ebp-0x3c]
  423b1c:	xor    eax,esi
  423b1e:	xor    edx,esi
  423b20:	add    eax,edi
  423b22:	add    edx,edi
  423b24:	imul   eax,edx
  423b27:	add    eax,DWORD PTR [ebp-0xc]
  423b2a:	mov    DWORD PTR [ebp-0xc],eax
  423b2d:	mov    eax,DWORD PTR [ebp-0xc]
  423b30:	mov    edx,DWORD PTR [ebp-0x24]
  423b33:	cmp    edx,eax
  423b35:	jb     0x41e9a5
  423b3b:	mov    eax,DWORD PTR [ebp-0x3c]
  423b3e:	mov    edx,DWORD PTR [ebp-0x24]
  423b41:	xor    eax,esi
  423b43:	add    eax,edi
  423b45:	imul   eax,edx
  423b48:	mov    edx,DWORD PTR [ebp-0x20]
  423b4b:	xor    edx,esi
  423b4d:	add    edx,edi
  423b4f:	or     eax,edx
  423b51:	mov    edx,DWORD PTR [ebp-0x18]
  423b54:	xor    edx,esi
  423b56:	add    eax,edx
  423b58:	mov    edx,DWORD PTR [ebp-0x18]
  423b5b:	xor    edx,esi
  423b5d:	add    eax,edx
  423b5f:	mov    edx,DWORD PTR [ebp-0x10]
  423b62:	lea    eax,[eax+edx*1+0x64e5b6]
  423b69:	jmp    0x423b7d
  423b6e:	mov    eax,DWORD PTR [ebp-0x18]
  423b71:	mov    edx,DWORD PTR [ebp-0x10]
  423b74:	xor    eax,esi
  423b76:	lea    eax,[eax+edx*1+0x3272db]
  423b7d:	mov    DWORD PTR [ebp-0x10],eax
  423b80:	jmp    0x41e8f2
  423b85:	mov    eax,DWORD PTR [ebp-0x38]
  423b88:	mov    edx,DWORD PTR [ebp+0xc]
  423b8b:	xor    edx,esi
  423b8d:	lea    ecx,[ecx+edx*1+0x3272db]
  423b94:	lea    edx,[ecx-0x3272db]
  423b9a:	xor    edx,esi
  423b9c:	cmp    edx,0xf89c95b6
  423ba2:	jne    0x41e770
  423ba8:	mov    ecx,DWORD PTR [ebp+0x8]
  423bab:	mov    edx,DWORD PTR [ebp+0xc]
  423bae:	mov    ebx,DWORD PTR [ebp+0x8]
  423bb1:	xor    edx,esi
  423bb3:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  423bba:	xor    ecx,esi
  423bbc:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  423bc3:	xor    ebx,esi
  423bc5:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  423bcc:	mov    edx,DWORD PTR [ebp+0xc]
  423bcf:	xor    edx,esi
  423bd1:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  423bd8:	mov    eax,DWORD PTR [ebp+0xc]
  423bdb:	xor    eax,esi
  423bdd:	add    eax,edi
  423bdf:	pop    edi
  423be0:	pop    esi
  423be1:	pop    ebx
  423be2:	leave  
  423be3:	ret    0x8
  423be6:	push   ebp
  423be7:	mov    ebp,esp
  423be9:	push   ecx
  423bea:	mov    eax,ds:0x42c008
  423bef:	xor    DWORD PTR ds:0x42c000,eax
  423bf5:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  423bfc:	mov    eax,DWORD PTR [ebp+0x8]
  423bff:	sbb    DWORD PTR ds:0x42d010,0x5f50
  423c09:	mov    al,BYTE PTR [eax]
  423c0b:	add    DWORD PTR ds:0x429020,0x42b018
  423c15:	add    al,0xd
  423c17:	xor    DWORD PTR ds:0x42901c,0x429000
  423c21:	xor    al,0x6f
  423c23:	mov    DWORD PTR ds:0x42d008,0x56e
  423c2d:	cmp    al,0x35
  423c2f:	mov    DWORD PTR ds:0x42c000,0x518
  423c39:	jne    0x423cb4
  423c3f:	mov    eax,DWORD PTR [ebp+0x8]
  423c42:	mov    edx,DWORD PTR ds:0x429014
  423c48:	or     DWORD PTR ds:0x429010,edx
  423c4e:	mov    ecx,DWORD PTR [ebp+0x8]
  423c51:	add    ecx,DWORD PTR [eax+0x3c]
  423c54:	mov    edx,0x7510893
  423c59:	adc    eax,DWORD PTR ds:0x42c01c
  423c5f:	mov    DWORD PTR [ebp+0x8],ecx
  423c62:	mov    eax,DWORD PTR [ebp-0x4]
  423c65:	xor    eax,edx
  423c67:	adc    ecx,0x2aad
  423c6d:	push   esi
  423c6e:	add    DWORD PTR ds:0x42d01c,0x22ba
  423c78:	mov    esi,DWORD PTR [ebp+0x8]
  423c7b:	xor    ecx,ecx
  423c7d:	xor    ecx,DWORD PTR ds:0x42901c
  423c83:	xor    ecx,DWORD PTR ds:0x42a010
  423c89:	mov    DWORD PTR ds:0x42901c,ecx
  423c8f:	mov    ecx,0x3272db
  423c94:	add    eax,ecx
  423c96:	cmp    DWORD PTR [esi+0x54],eax
  423c99:	pop    esi
  423c9a:	je     0x423ca8
  423ca0:	mov    eax,DWORD PTR [ebp+0x8]
  423ca3:	jmp    0x423cc1
  423ca8:	mov    eax,DWORD PTR [ebp-0x4]
  423cab:	xor    eax,edx
  423cad:	add    eax,ecx
  423caf:	jmp    0x423cc1
  423cb4:	mov    eax,DWORD PTR [ebp-0x4]
  423cb7:	xor    eax,0x7510893
  423cbc:	add    eax,0x3272db
  423cc1:	leave  
  423cc2:	ret    0x4
  423cc5:	push   ebp
  423cc6:	mov    ebp,esp
  423cc8:	push   ecx
  423cc9:	sub    DWORD PTR ds:0x42d010,0x2dcc
  423cd3:	push   ecx
  423cd4:	and    DWORD PTR ds:0x42d014,0x0
  423cde:	jmp    0x423cf2
  423ce3:	xor    edx,edx
  423ce5:	add    edx,DWORD PTR ds:0x42d014
  423ceb:	inc    edx
  423cec:	mov    DWORD PTR ds:0x42d014,edx
  423cf2:	cmp    DWORD PTR ds:0x42d014,0x1d
  423cf9:	jae    0x423d30
  423cff:	cmp    DWORD PTR ds:0x42d014,0x26
  423d06:	jne    0x423d2b
  423d0c:	push   0x643f
  423d11:	push   DWORD PTR [ebp-0x24]
  423d14:	push   0x42a010
  423d19:	push   DWORD PTR [ebp-0xc]
  423d1c:	push   DWORD PTR [ebp-0x10]
  423d1f:	push   DWORD PTR [ebp-0x10]
  423d22:	push   DWORD PTR [ebp-0x28]
  423d25:	call   DWORD PTR ds:0x42502c
  423d2b:	jmp    0x423ce3
  423d30:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  423d37:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  423d3e:	dec    eax
  423d3f:	mov    eax,DWORD PTR [ebp-0x4]
  423d42:	add    edx,0x6ccb
  423d48:	push   esi
  423d49:	mov    esi,DWORD PTR [ebp-0x8]
  423d4c:	adc    DWORD PTR ds:0x42a00c,ebx
  423d52:	mov    edx,0x7510893
  423d57:	sbb    DWORD PTR ds:0x42c018,0x5978
  423d61:	xor    eax,edx
  423d63:	sbb    DWORD PTR ds:0x42901c,0x3646
  423d6d:	xor    esi,edx
  423d6f:	sub    DWORD PTR ds:0x429014,0x4430
  423d79:	mov    ecx,0x3272db
  423d7e:	sbb    DWORD PTR ds:0x42d01c,0x42900c
  423d88:	add    esi,ecx
  423d8a:	mov    DWORD PTR ds:0x42a010,0x31b3
  423d94:	add    eax,ecx
  423d96:	inc    DWORD PTR ds:0x42c01c
  423d9c:	imul   eax,esi
  423d9f:	mov    esi,DWORD PTR [ebp+0xc]
  423da2:	mov    DWORD PTR ds:0x429028,0xd41
  423dac:	cmp    esi,eax
  423dae:	jne    0x423dcc
  423db4:	and    esi,eax
  423db6:	mov    eax,DWORD PTR [ebp-0x4]
  423db9:	mov    esi,DWORD PTR [ebp-0x8]
  423dbc:	xor    eax,edx
  423dbe:	xor    esi,edx
  423dc0:	add    eax,ecx
  423dc2:	add    esi,ecx
  423dc4:	imul   eax,esi
  423dc7:	jmp    0x423e07
  423dcc:	mov    eax,DWORD PTR [ebp+0xc]
  423dcf:	mov    eax,DWORD PTR [eax+0x78]
  423dd2:	mov    DWORD PTR [ebp+0xc],eax
  423dd5:	mov    eax,DWORD PTR [ebp-0x4]
  423dd8:	mov    esi,DWORD PTR [ebp-0x8]
  423ddb:	xor    eax,edx
  423ddd:	xor    esi,edx
  423ddf:	add    eax,ecx
  423de1:	add    esi,ecx
  423de3:	imul   eax,esi
  423de6:	mov    esi,DWORD PTR [ebp+0xc]
  423de9:	cmp    esi,eax
  423deb:	mov    eax,DWORD PTR [ebp-0x4]
  423dee:	je     0x423db9
  423df4:	xor    eax,edx
  423df6:	add    eax,ecx
  423df8:	mov    ecx,DWORD PTR [ebp+0xc]
  423dfb:	imul   eax,ecx
  423dfe:	add    eax,DWORD PTR [ebp+0x8]
  423e01:	mov    DWORD PTR [ebp+0xc],eax
  423e04:	mov    eax,DWORD PTR [ebp+0xc]
  423e07:	pop    esi
  423e08:	leave  
  423e09:	ret    0x8
  423e0c:	add    BYTE PTR [eax-0x5ffbffbe],ah
  423e12:	inc    edx
  423e13:	add    BYTE PTR [eax],cl
  423e15:	mov    al,ds:0xa00c0042
  423e1a:	inc    edx
  423e1b:	add    BYTE PTR [eax],dl
  423e1d:	mov    al,ds:0xa0140042
  423e22:	inc    edx
  423e23:	add    BYTE PTR [eax],bl
  423e25:	mov    al,ds:0xa01c0042
  423e2a:	inc    edx
  423e2b:	add    BYTE PTR [eax],al
  423e2d:	mov    al,0x42
  423e2f:	add    BYTE PTR [eax+esi*4],al
  423e32:	inc    edx
  423e33:	add    BYTE PTR [eax],cl
  423e35:	mov    al,0x42
  423e37:	add    BYTE PTR [eax+esi*4],cl
  423e3a:	inc    edx
  423e3b:	add    BYTE PTR [eax],dl
  423e3d:	mov    al,0x42
  423e3f:	add    BYTE PTR [eax+esi*4],dl
  423e42:	inc    edx
  423e43:	add    BYTE PTR [eax],bl
  423e45:	mov    al,0x42
  423e47:	add    BYTE PTR [eax+esi*4],bl
  423e4a:	inc    edx
  423e4b:	add    BYTE PTR [eax],al
  423e4d:	rol    BYTE PTR [edx+0x0],0x4
  423e51:	rol    BYTE PTR [edx+0x0],0x8
  423e55:	rol    BYTE PTR [edx+0x0],0xc
  423e59:	rol    BYTE PTR [edx+0x0],0x10
  423e5d:	rol    BYTE PTR [edx+0x0],0x14
  423e61:	rol    BYTE PTR [edx+0x0],0x18
  423e65:	rol    BYTE PTR [edx+0x0],0x1c
  423e69:	rol    BYTE PTR [edx+0x0],0x75
  423e6d:	ins    DWORD PTR es:[edi],dx
  423e6e:	push   ecx
  423e6f:	push   eax
  423e70:	jo     0x423eec
  423e72:	addr16 jo 0x423ecb
  423e75:	pop    eax
  423e76:	inc    ebp
  423e77:	push   edx
  423e78:	jb     0x423eee
  423e7a:	inc    esi
  423e7b:	je     0x423ec4
  423e7d:	gs ins BYTE PTR es:[edi],dx
  423e7f:	dec    esp
  423e80:	js     0x423eea
  423e82:	inc    edx
  423e83:	js     0x423ecb
  423e85:	arpl   WORD PTR [edx+0x66],ax
  423e88:	inc    ebx
  423e89:	push   ebp
  423e8a:	jno    0x423f02
  423e8c:	sub    BYTE PTR [edx+0x42],al
  423e8f:	add    BYTE PTR [eax],dh
  423e91:	inc    edx
  423e92:	inc    edx
  423e93:	add    ah,dl
  423e95:	inc    eax
  423e96:	inc    edx
  423e97:	add    bh,ch
  423e99:	or     esi,DWORD PTR [edx+0x304e790e]
  423e9f:	dec    esi
  423ea0:	xchg   DWORD PTR [edi+0x3d],ecx
  423ea3:	dec    esi
  423ea4:	scas   eax,DWORD PTR es:[edi]
  423ea5:	dec    edi
  423ea6:	ds dec esi
  423ea8:	js     0x423ef8
  423eaa:	cmp    ecx,DWORD PTR [esi-0x64]
  423ead:	dec    edi
  423eae:	inc    esp
  423eaf:	dec    esi
  423eb0:	jae    0x423f00
  423eb2:	inc    ecx
  423eb3:	dec    esi
  423eb4:	xor    BYTE PTR [esi+0x40],cl
  423eb7:	dec    esi
  423eb8:	pop    esp
  423eb9:	pop    ebp
  423eba:	pop    edi
  423ebb:	push   edx
  423ebc:	cmp    DWORD PTR [esi+0x79],ecx
  423ebf:	dec    esi
  423ec0:	xor    BYTE PTR [esi-0x79],cl
  423ec3:	dec    edi
  423ec4:	cmp    eax,0x3e4faf4e
  423ec9:	dec    esi
  423eca:	js     0x423f1a
  423ecc:	cmp    ecx,DWORD PTR [esi-0x64]
  423ecf:	dec    edi
  423ed0:	inc    esp
  423ed1:	dec    esi
  423ed2:	mov    DWORD PTR [edi+0x41],ecx
  423ed5:	dec    esi
  423ed6:	xor    BYTE PTR [esi+0x40],cl
  423ed9:	dec    esi
  423eda:	pop    esp
  423edb:	ins    DWORD PTR es:[edi],dx
  423edc:	pop    edi
  423edd:	bound  edi,QWORD PTR [ecx]
  423edf:	dec    esi
  423ee0:	jns    0x423f30
  423ee2:	xor    BYTE PTR [esi-0x80],cl
  423ee5:	dec    edi
  423ee6:	cmp    eax,0x394e734e
  423eeb:	dec    esi
  423eec:	mov    ds:0x304e3a4f,al
  423ef1:	dec    esi
  423ef2:	inc    esi
  423ef3:	dec    esi
  423ef4:	pop    esp
  423ef5:	jge    0x423f56
  423ef7:	jb     0x423f68
  423ef9:	sub    BYTE PTR [esi-0x7d],0x7e
  423efd:	xchg   ebx,eax
  423efe:	jns    0x423e90
  423f00:	aas    
  423f01:	dec    esi
  423f02:	test   BYTE PTR [edi+0x30],cl
  423f05:	dec    esi
  423f06:	test   BYTE PTR [edi+0x3c],cl
  423f09:	dec    esi
  423f0a:	mov    ds:0x734e394f,al
  423f0f:	dec    esi
  423f10:	inc    ebp
  423f11:	dec    esi
  423f12:	xor    BYTE PTR [esi+0x44],cl
  423f15:	dec    esi
  423f16:	pop    esp
  423f17:	lea    ebx,[edi-0x7e]
  423f1a:	outs   dx,DWORD PTR ds:[esi]
  423f1b:	xchg   edx,eax
  423f1c:	outs   dx,BYTE PTR ds:[esi]
  423f1d:	xchg   ebx,eax
  423f1e:	jle    0x423ec3
  423f20:	jns    0x423ec2
  423f22:	aas    
  423f23:	dec    esi
  423f24:	test   BYTE PTR [edi+0x30],cl
  423f27:	dec    esi
  423f28:	test   BYTE PTR [edi+0x3c],cl
  423f2b:	dec    esi
  423f2c:	mov    ds:0x894e394f,al
  423f31:	dec    edi
  423f32:	inc    ebp
  423f33:	dec    esi
  423f34:	xor    BYTE PTR [esi+0x44],cl
  423f37:	dec    esi
  423f38:	pop    esp
  423f39:	popf   
  423f3a:	pop    edi
  423f3b:	xchg   edx,eax
  423f3c:	outs   dx,DWORD PTR ds:[esi]
  423f3d:	mov    ds:0xb37ea36e,al
  423f42:	jns    0x423ef4
  423f44:	aas    
  423f45:	dec    esi
  423f46:	mov    cs,WORD PTR [edi+0x30]
  423f49:	dec    esi
  423f4a:	lods   al,BYTE PTR ds:[esi]
  423f4b:	dec    edi
  423f4c:	cmp    eax,0x394e734e
  423f51:	dec    esi
  423f52:	mov    eax,ds:0x304e3a4f
  423f57:	dec    esi
  423f58:	inc    esp
  423f59:	dec    esi
  423f5a:	pop    esp
  423f5b:	lods   eax,DWORD PTR ds:[esi]
  423f5c:	pop    edi
  423f5d:	mov    ds:0xb36eb26f,al
  423f62:	jle    0x423f27
  423f64:	jns    0x423f26
  423f66:	aas    
  423f67:	dec    esi
  423f68:	mov    cs,WORD PTR [edi+0x30]
  423f6b:	dec    esi
  423f6c:	lods   al,BYTE PTR ds:[esi]
  423f6d:	dec    edi
  423f6e:	cmp    eax,0x394e7e4e
  423f73:	dec    esi
  423f74:	lahf   
  423f75:	dec    edi
  423f76:	cmp    ecx,DWORD PTR [esi+0x30]
  423f79:	dec    esi
  423f7a:	inc    ebp
  423f7b:	dec    esi
  423f7c:	pop    esp
  423f7d:	mov    ebp,0xc26fb25f
  423f82:	outs   dx,BYTE PTR ds:[esi]
  423f83:	ret    
  423f84:	jle    0x423f59
  423f86:	jns    0x423f58
  423f88:	aas    
  423f89:	dec    esi
  423f8a:	mov    cs,WORD PTR [edi+0x30]
  423f8d:	dec    esi
  423f8e:	lods   al,BYTE PTR ds:[esi]
  423f8f:	dec    edi
  423f90:	cmp    eax,0x394f804e
  423f95:	dec    esi
  423f96:	lods   al,BYTE PTR ds:[esi]
  423f97:	dec    edi
  423f98:	cmp    cl,BYTE PTR [esi+0x30]
  423f9b:	dec    esi
  423f9c:	inc    esi
  423f9d:	dec    esi
  423f9e:	pop    esp
  423f9f:	int    0x5f
  423fa1:	ret    0xd26f
  423fa4:	outs   dx,BYTE PTR ds:[esi]
  423fa5:	sar    DWORD PTR [esi-0x1d],cl
  423fa8:	jns    0x423f8a
  423faa:	aas    
  423fab:	dec    esi
  423fac:	mov    cs,WORD PTR [edi+0x30]
  423faf:	dec    esi
  423fb0:	lods   al,BYTE PTR ds:[esi]
  423fb1:	dec    edi
  423fb2:	cmp    eax,0x394f834e
  423fb7:	dec    esi
  423fb8:	mov    ds:0x304e3a4f,al
  423fbd:	dec    esi
  423fbe:	inc    esp
  423fbf:	dec    esi
  423fc0:	pop    esp
  423fc1:	fstp   QWORD PTR [edi-0x2e]
  423fc4:	outs   dx,DWORD PTR ds:[esi]
  423fc5:	loop   0x424035
  423fc7:	jecxz  0x424047
  423fc9:	repz jns 0x423fbc
  423fcc:	aas    
  423fcd:	dec    esi
  423fce:	lea    ecx,[edi+0x30]
  423fd1:	dec    esi
  423fd2:	lahf   
  423fd3:	dec    edi
  423fd4:	cmp    eax,0x3c4fa04e
  423fd9:	dec    esi
  423fda:	xor    BYTE PTR [esi+0x3f],cl
  423fdd:	dec    esi
  423fde:	pop    esp
  423fdf:	in     eax,dx
  423fe0:	pop    edi
  423fe1:	loop   0x424052
  423fe3:	repnz outs dx,BYTE PTR ds:[esi]
  423fe5:	repz jle 0x423feb
  423fe8:	jns    0x423fea
  423fea:	jle    0x423fff
  423fec:	jns    0x423ffe
  423fee:	cmp    al,0x4e
  423ff0:	jg     0x424040
  423ff2:	xor    BYTE PTR [esi-0x65],cl
  423ff5:	dec    edi
  423ff6:	xor    cl,BYTE PTR [esi-0x80]
  423ff9:	dec    edi
  423ffa:	cmp    al,0x4e
  423ffc:	lods   eax,DWORD PTR ds:[esi]
  423ffd:	dec    edi
  423ffe:	cmp    ecx,DWORD PTR [esi+0x30]
  424001:	dec    esi
  424002:	inc    ebp
  424003:	dec    esi
  424004:	pop    esp
  424005:	or     eax,0x126f025f
  42400a:	outs   dx,BYTE PTR ds:[esi]
  42400b:	adc    edi,DWORD PTR [esi+0x23]
  42400e:	jns    0x424030
  424010:	aas    
  424011:	dec    esi
  424012:	add    BYTE PTR [eax],al
  424014:	pushf  
  424015:	ds inc edx
  424017:	add    BYTE PTR [eax-0x67ffbdc0],dl
  42401d:	inc    eax
  42401e:	inc    edx
  42401f:	add    BYTE PTR [edx+eax*2],dh
  424022:	inc    edx
  424023:	add    BYTE PTR [ecx+eax*2+0x42240042],bl
  42402a:	inc    edx
  42402b:	add    BYTE PTR [eax+0x40],bh
  42402e:	inc    edx
  42402f:	add    BYTE PTR [eax+eax*2+0x42],bh
  424033:	add    BYTE PTR [eax],ah
  424035:	inc    edx
  424036:	inc    edx
  424037:	add    al,ah
  424039:	inc    eax
  42403a:	inc    edx
  42403b:	add    BYTE PTR ds:0x36f89ca9,cl
  424041:	mov    edx,0x4094f89c
  424046:	inc    edx
  424047:	add    BYTE PTR [eax+0x41],bl
  42404a:	inc    edx
  42404b:	add    BYTE PTR [ecx+eax*2+0x42],ch
  42404f:	add    BYTE PTR [eax+0x41],bh
  424052:	inc    edx
  424053:	add    BYTE PTR [eax-0x33ffbdbf],cl
  424059:	inc    eax
  42405a:	inc    edx
  42405b:	add    BYTE PTR [eax-0x13ffbdc2],bl
  424061:	inc    eax
  424062:	inc    edx
  424063:	add    ah,bl
  424065:	inc    eax
  424066:	inc    edx
  424067:	add    BYTE PTR [eax],bh
  424069:	inc    edx
  42406a:	inc    edx
  42406b:	add    BYTE PTR [esi+0x19f89c85],dh
  424071:	or     edx,DWORD PTR [edi]
  424073:	and    DWORD PTR [eax+0x14004240],0x881161c
  42407d:	or     eax,0x705
  424082:	inc    eax
  424083:	add    BYTE PTR [edx],bh
  424085:	inc    edx
  424086:	ds ds mov edx,0x6d004287
  42408d:	push   ebp
  42408e:	inc    esp
  42408f:	imul   ecx,DWORD PTR [eax],0x86275fa
  424095:	in     eax,dx
  424096:	inc    BYTE PTR [edi]
  424098:	aas    
  424099:	cli    
  42409a:	mov    ds:0x42408805,eax
  42409f:	add    BYTE PTR [ebp-0x4a07636b],dh
  4240a5:	xchg   esi,eax
  4240a6:	pushf  
  4240a7:	clc    
  4240a8:	mov    ah,0x95
  4240aa:	pushf  
  4240ab:	clc    
  4240ac:	mov    ebx,0xbaf89c95
  4240b1:	xchg   ebp,eax
  4240b2:	pushf  
  4240b3:	clc    
  4240b4:	mov    ecx,0xb8f89c95
  4240b9:	xchg   ebp,eax
  4240ba:	pushf  
  4240bb:	clc    
  4240bc:	mov    edi,0xbef89c95
  4240c1:	xchg   ebp,eax
  4240c2:	pushf  
  4240c3:	clc    
  4240c4:	mov    ebp,0xa6f89c95
  4240c9:	xchg   ebp,eax
  4240ca:	pushf  
  4240cb:	clc    
  4240cc:	jmp    0x423e:0x906003f9
  4240d3:	add    BYTE PTR [eax+edx*2+0x42],bh
  4240d7:	add    BYTE PTR [ebx+0x77],dl
  4240da:	jbe    0x42412c
  4240dc:	mov    dh,0x85
  4240de:	pushf  
  4240df:	clc    
  4240e0:	sbb    ecx,ebp
  4240e2:	push   eax
  4240e3:	pop    es
  4240e4:	in     eax,0x7
  4240e6:	add    BYTE PTR [eax],al
  4240e8:	mov    WORD PTR [esi],?
  4240ea:	inc    edx
  4240eb:	add    BYTE PTR [ebx],bl
  4240ed:	or     eax,DWORD PTR [esi+ecx*1]
	...
  424120:	jl     0x424172
  424122:	inc    edx
  424123:	add    BYTE PTR [esi+0x68f89c85],dh
  424129:	jne    0x4241a4
  42412b:	je     0x4241a2
  42412d:	jns    0x4241a3
  42412f:	jb     0x424199
  424131:	addr16 pushw 0x68
  424135:	imul   esp,DWORD PTR [bx+0x68],0x0
  42413a:	add    BYTE PTR [eax],al
  42413c:	addr16 pushw 0x68
  424140:	addr16 push 0x67
  424143:	pushw  0x6b6a
  424147:	push   0x676b67
	...
  424154:	jle    0x4240dc
  424156:	inc    eax
  424157:	add    BYTE PTR [ebp-0x5db060b1],ah
  42415d:	dec    edi
  42415e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42415f:	dec    edi
  424160:	lahf   
  424161:	dec    edi
  424162:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424163:	dec    edi
  424164:	ins    DWORD PTR es:[edi],dx
  424165:	dec    esi
  424166:	bound  ecx,QWORD PTR [esi+0x30]
  424169:	dec    esi
  42416a:	add    BYTE PTR [eax],al
  42416c:	cdq    
  42416d:	dec    edi
  42416e:	pushf  
  42416f:	dec    edi
  424170:	fwait
  424171:	dec    edi
  424172:	ins    DWORD PTR es:[edi],dx
  424173:	dec    esi
  424174:	bound  ecx,QWORD PTR [esi+0x30]
  424177:	dec    esi
  424178:	scas   eax,DWORD PTR es:[edi]
  424179:	dec    edi
  42417a:	lods   eax,DWORD PTR ds:[esi]
  42417b:	dec    edi
  42417c:	lahf   
  42417d:	dec    edi
  42417e:	mov    ds:0x624e6d4f,al
  424183:	dec    esi
  424184:	xor    BYTE PTR [esi+0x0],cl
  424187:	add    BYTE PTR [ebp-0x5bb067b1],ch
  42418d:	dec    edi
  42418e:	test   eax,0xa04f934f
  424193:	dec    edi
  424194:	fwait
  424195:	dec    edi
  424196:	xor    BYTE PTR [esi+0x0],cl
  424199:	add    BYTE PTR [eax],al
  42419b:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  4241a2:	mov    WORD PTR [ebp-0x32734274],gs
  4241a8:	mov    ebp,ds
  4241aa:	mov    ebp,gs
  4241ac:	mov    ebp,?
  4241ae:	mov    WORD PTR ds:0x2d8c1d8c,cs
  4241b4:	mov    WORD PTR ds:0x6d8c5d8c,?
  4241ba:	mov    WORD PTR [edx-0x74],?
  4241bd:	jae    0x42414b
  4241bf:	jo     0x42414d
  4241c1:	jno    0x42414f
  4241c3:	jbe    0x424151
  4241c5:	ja     0x424153
  4241c7:	je     0x424155
  4241c9:	jne    0x424157
  4241cb:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  4241d2:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  4241d8:	lods   al,BYTE PTR ds:[esi]
  4241d9:	jge    0x424197
  4241db:	jge    0x42417b
  4241dd:	(bad)  
  4241de:	jns    0x424253
  4241e0:	mov    ecx,0x7d738cb1
  4241e5:	ins    DWORD PTR es:[edi],dx
  4241e6:	enter  0x9fc6,0x26
  4241ea:	jb     0x4241ef
  4241ec:	test   eax,0xb956bb17
  4241f1:	hlt    
  4241f2:	test   al,0x37
  4241f4:	test   al,0x7e
  4241f6:	fnstenv [ecx-0x6a]
  4241f9:	mov    cl,0x6a
  4241fb:	push   0xffffffce
  4241fd:	or     BYTE PTR [edx],bl
  4241ff:	xlat   BYTE PTR ds:[ebx]
  424200:	out    dx,eax
  424201:	add    eax,0x9321d7aa
  424206:	scas   al,BYTE PTR es:[edi]
  424207:	adc    DWORD PTR [esi],esp
  424209:	jge    0x42422e
  42420b:	fidiv  WORD PTR [edi]
  42420d:	leave  
  42420e:	hlt    
  42420f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424210:	cmp    ax,0x1fc8
  424214:	mov    dh,cl
  424216:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424217:	(bad)  
  424218:	and    DWORD PTR [eax],ebx
  42421a:	and    DWORD PTR [ecx+0x0],esi
  42421d:	add    BYTE PTR [eax],al
  42421f:	add    al,ch
  424221:	(bad)  [ebx+0x7]
  424224:	cmc    
  424225:	enter  0x301a,0x10
  424229:	push   eax
  42422a:	inc    edx
  42422b:	add    BYTE PTR [ecx+0x66],dh
  42422e:	jp     0x42429e
  424230:	add    BYTE PTR [eax+0x42],0x0
  424234:	in     al,0x40
  424236:	inc    edx
  424237:	add    BYTE PTR [eax],cl
  424239:	in     eax,dx
  42423a:	adc    al,BYTE PTR [edi]
  42423c:	pop    ecx
  42423d:	inc    ebx
  42423e:	inc    edx
  42423f:	outs   dx,BYTE PTR ds:[esi]
  424240:	popa   
  424241:	imul   eax,DWORD PTR [edx+0x61],0x6b
  424245:	jne    0x4242b5
  424247:	dec    ebx
  424248:	je     0x4242ad
  42424a:	bound  esp,QWORD PTR [edi+0x78]
  42424d:	dec    eax
  42424e:	bound  edx,QWORD PTR [ebx+0x53]
  424251:	inc    ebx
  424252:	push   ebp
  424253:	push   eax
  424254:	ja     0x4242d0
  424256:	jp     0x4242a5
  424258:	push   esi
  424259:	arpl   WORD PTR gs:[ecx+0x45],si
  42425d:	dec    edx
  42425e:	dec    esi
  42425f:	data16 ja 0x4242b0
  424262:	imul   ebp,DWORD PTR [eax+0x0],0x0
	...
  424275:	add    BYTE PTR [eax],al
  424277:	add    BYTE PTR [edi+0x6c],ch
  42427a:	push   0x49657557
  42427f:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  424285:	push   edi
  424286:	je     0x4242fd
  424288:	push   0x66
  42428a:	jbe    0x4242ce
  42428c:	jo     0x4242d7
  42428e:	dec    ebp
  42428f:	dec    ebp
  424290:	pop    edx
  424291:	jp     0x4242ed
  424293:	jbe    0x4242db
  424295:	pop    ecx
  424296:	jo     0x424310
  424298:	push   edi
  424299:	jbe    0x4242e2
  42429b:	ja     0x4242e0
  42429d:	js     0x4242e7
  42429f:	jno    0x4242e9
  4242a1:	inc    ebp
  4242a2:	inc    esp
  4242a3:	inc    esp
  4242a4:	push   ecx
  4242a5:	dec    edx
  4242a6:	ins    BYTE PTR es:[edi],dx
  4242a7:	dec    ebx
  4242a8:	jbe    0x424318
  4242aa:	pop    eax
  4242ab:	jbe    0x4242ad
  4242ad:	add    BYTE PTR [ecx+0x46],al
  4242b0:	jae    0x424328
  4242b2:	dec    ebx
  4242b3:	gs js  0x42431c
  4242b6:	ins    BYTE PTR es:[edi],dx
  4242b7:	jp     0x4242b9
  4242b9:	add    BYTE PTR [ebx+0x41],cl
  4242bc:	fs gs jno 0x42432d
  4242c0:	push   ebx
  4242c1:	inc    ecx
  4242c2:	inc    ebx
  4242c3:	outs   dx,BYTE PTR ds:[esi]
  4242c4:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  4242c8:	push   edx
  4242c9:	push   ecx
  4242ca:	push   0x43000064
  4242cf:	pop    eax
  4242d0:	outs   dx,DWORD PTR ds:[esi]
  4242d1:	push   0x66694355
  4242d6:	dec    edi
  4242d7:	je     0x424325
  4242d9:	jo     0x4242db
  4242db:	add    BYTE PTR [ebx+0x6f],dl
  4242de:	inc    edi
  4242df:	dec    esi
  4242e0:	outs   dx,DWORD PTR ds:[esi]
  4242e1:	pop    ecx
  4242e2:	inc    edi
  4242e3:	jb     0x42432c
  4242e5:	jns    0x42435d
  4242e7:	inc    ecx
  4242e8:	pop    eax
  4242e9:	add    BYTE PTR [edi+0x67],dh
  4242ec:	dec    edi
  4242ed:	dec    esp
  4242ee:	dec    ebp
  4242ef:	inc    edx
  4242f0:	jno    0x424363
  4242f2:	jae    0x424347
  4242f4:	push   eax
  4242f5:	arpl   WORD PTR [eax],ax
  4242f7:	add    BYTE PTR [ecx+edi*2+0x45],cl
  4242fb:	bound  ebp,QWORD PTR [ecx+0x46]
  4242fe:	dec    ecx
  4242ff:	ja     0x424346
  424301:	dec    eax
  424302:	inc    ebp
  424303:	inc    edx
  424304:	push   ebx
  424305:	push   ecx
  424306:	add    BYTE PTR [eax],al
  424308:	outs   dx,BYTE PTR ds:[esi]
  424309:	dec    eax
  42430a:	jno    0x424365
  42430c:	jbe    0x42435a
  42430e:	ins    BYTE PTR es:[edi],dx
  42430f:	inc    edx
  424310:	push   0x73
  424315:	add    BYTE PTR [eax],al
  424317:	add    BYTE PTR [eax],al
  424319:	add    BYTE PTR [eax],al
  42431b:	add    BYTE PTR [edx+0x44],bl
  42431e:	jbe    0x424369
  424320:	imul   ecx,DWORD PTR [esi+0x6e],0x66
  424324:	ins    DWORD PTR es:[di],dx
  424326:	je     0x42436f
  424328:	ins    BYTE PTR es:[edi],dx
  424329:	jae    0x424395
  42432b:	inc    esi
  42432c:	ins    DWORD PTR es:[edi],dx
  42432d:	je     0x424385
  42432f:	push   0x56584178
  424334:	push   ebx
  424335:	addr16 dec edx
  424337:	jo     0x4243ab
  424339:	js     0x4243aa
  42433b:	pop    eax
  42433c:	dec    ebx
  42433d:	push   esp
  42433e:	dec    esp
  42433f:	jns    0x42438c
  424341:	js     0x4243bb
  424343:	outs   dx,BYTE PTR ds:[esi]
  424344:	pop    ecx
  424345:	jae    0x4243b5
  424347:	push   0x43644448
  42434c:	arpl   WORD PTR [edx+0x55],sp
  42434f:	push   0x42504e67
  424354:	push   ebp
  424355:	je     0x4243cc
  424357:	addr16 dec edi
  424359:	dec    esp
  42435a:	inc    edx
  42435b:	ins    DWORD PTR es:[edi],dx
  42435c:	inc    esi
  42435d:	inc    esi
  42435e:	inc    esi
  42435f:	arpl   WORD PTR [edx+0x47],bx
  424362:	push   ebp
  424363:	inc    ebx
  424364:	popa   
  424365:	push   edx
  424366:	dec    esp
  424367:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  42436e:	push   ecx
  42436f:	push   ebx
  424370:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  424377:	dec    edx
  424378:	jns    0x4243e3
  42437a:	push   edx
  42437b:	inc    ebx
  42437c:	jo     0x4243f3
  42437e:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  424382:	fs add al,dl
  424385:	inc    edx
  424386:	add    BYTE PTR [eax+edx*8],al
  424389:	inc    edx
  42438a:	add    BYTE PTR [eax],cl
  42438c:	rol    BYTE PTR [edx+0x0],1
  42438f:	or     al,0xd0
  424391:	inc    edx
  424392:	add    BYTE PTR [eax],dl
  424394:	rol    BYTE PTR [edx+0x0],1
  424397:	adc    al,0xd0
  424399:	inc    edx
  42439a:	add    BYTE PTR [eax],bl
  42439c:	rol    BYTE PTR [edx+0x0],1
  42439f:	sbb    al,0xd0
  4243a1:	inc    edx
  4243a2:	add    BYTE PTR [edi+0x37],al
  4243a5:	cmp    BYTE PTR [edi+0x4b],bl
  4243a8:	inc    ecx
  4243a9:	aaa    
  4243aa:	dec    ecx
  4243ab:	ss pop edi
  4243ad:	xor    BYTE PTR [eax+0x35],dl
  4243b0:	dec    esi
  4243b1:	add    BYTE PTR [eax+0x49],cl
  4243b4:	xor    al,0x5f
  4243b6:	dec    esp
  4243b7:	inc    esp
  4243b8:	dec    esp
  4243b9:	xor    bl,BYTE PTR [edi+0x35]
  4243bc:	dec    eax
  4243bd:	xor    BYTE PTR [eax],al
  4243bf:	dec    esp
  4243c0:	inc    ecx
  4243c1:	xor    al,0x5f
  4243c3:	dec    ebx
  4243c4:	pop    edx
  4243c5:	xor    esi,DWORD PTR [ebx]
  4243c7:	dec    ebp
  4243c8:	pop    edi
  4243c9:	xor    al,0x0
  4243cb:	pop    ecx
  4243cc:	inc    esi
  4243cd:	push   eax
  4243ce:	aaa    
  4243cf:	xor    DWORD PTR [edx],esi
  4243d1:	pop    edi
  4243d2:	cmp    DWORD PTR [eax+eax*1+0x45],ecx
  4243d6:	xor    eax,0x33595f41
  4243db:	aaa    
  4243dc:	push   edx
  4243dd:	xor    bl,BYTE PTR [edi+0x4c]
  4243e0:	pop    edx
  4243e1:	add    BYTE PTR [edx+0x45],cl
  4243e4:	push   ebx
  4243e5:	xor    DWORD PTR [edi+0x43],ebx
  4243e8:	dec    esp
  4243e9:	inc    esi
  4243ea:	add    BYTE PTR [eax+0x58],bl
  4243ed:	xor    eax,0x444e515f
  4243f2:	xor    eax,0x4300425f
  4243f7:	inc    ecx
  4243f8:	dec    ebx
  4243f9:	cmp    DWORD PTR ds:0x365f3939,esi
  4243ff:	xor    al,0x42
  424401:	pop    edi
  424402:	pop    eax
  424403:	push   edi
  424404:	add    BYTE PTR [ebx+0x45],cl
  424407:	cmp    DWORD PTR ss:[edi+0x56],ebx
  42440b:	xor    eax,DWORD PTR [esi+0x4c]
  42440e:	add    BYTE PTR [ebp+0x53],cl
  424411:	dec    edi
  424412:	pop    edi
  424413:	push   ebx
  424414:	inc    ebx
  424415:	xor    al,0x5f
  424417:	inc    ebx
  424418:	push   ebp
  424419:	xor    eax,DWORD PTR [ecx+0x0]
  42441c:	dec    esi
  42441d:	inc    esi
  42441e:	xor    eax,0x494f345f
  424423:	xor    ecx,DWORD PTR [esi+0x5f]
  424426:	push   esp
  424427:	cmp    BYTE PTR [esi+0x0],dl
  42442a:	pop    edx
  42442b:	xor    esi,DWORD PTR [esi]
  42442d:	aaa    
  42442e:	pop    edi
  42442f:	xor    eax,0x5f363437
  424434:	push   edi
  424435:	add    BYTE PTR [ebp+0x4a],cl
  424438:	push   edx
  424439:	pop    edi
  42443a:	xor    DWORD PTR [edx],esi
  42443c:	inc    ebp
  42443d:	inc    edx
  42443e:	ss pop edi
  424440:	inc    ecx
  424441:	dec    ebx
  424442:	add    BYTE PTR [edx+0x54],cl
  424445:	dec    edi
  424446:	pop    edi
  424447:	push   esp
  424448:	cmp    BYTE PTR [eax],dh
  42444a:	inc    edi
  42444b:	add    BYTE PTR [ecx+esi*1+0x4d],al
  42444f:	pop    edi
  424450:	xor    DWORD PTR [ebp+0x57],eax
  424453:	pop    edx
  424454:	cmp    BYTE PTR ss:[edi+0x38],bl
  424458:	inc    ebp
  424459:	dec    edi
  42445a:	add    BYTE PTR [eax+0x53],cl
  42445d:	xor    DWORD PTR [ecx],edi
  42445f:	pop    edi
  424460:	dec    ebx
  424461:	inc    edx
  424462:	push   esp
  424463:	pop    edi
  424464:	push   esi
  424465:	add    BYTE PTR [ecx+0x49],al
  424468:	dec    edx
  424469:	pop    edi
  42446a:	xor    eax,0x33344d4d
  42446f:	pop    edi
  424470:	push   ecx
  424471:	inc    esi
  424472:	inc    edi
  424473:	dec    edi
  424474:	add    BYTE PTR [esi+0x4b],dl
  424477:	push   edx
  424478:	pop    edi
  424479:	inc    ebx
  42447a:	pop    ecx
  42447b:	xor    ebx,DWORD PTR [edi+0x35]
  42447e:	inc    edi
  42447f:	dec    eax
  424480:	xor    BYTE PTR [edx+0x0],al
  424483:	push   esi
  424484:	xor    eax,0x315f3452
  424489:	ss inc esp
  42448b:	xor    eax,0x5956004a
  424490:	inc    ecx
  424491:	pop    edi
  424492:	push   esi
  424493:	push   ebp
  424494:	inc    ebp
  424495:	pop    edi
  424496:	xor    BYTE PTR [ecx],dh
  424498:	add    BYTE PTR [edi+0x58],al
  42449b:	dec    edx
  42449c:	pop    edi
  42449d:	inc    edi
  42449e:	inc    esi
  42449f:	push   esi
  4244a0:	dec    esp
  4244a1:	push   edi
  4244a2:	add    BYTE PTR [edi+0x35],al
  4244a5:	dec    ebx
  4244a6:	pop    edi
  4244a7:	ss dec ebx
  4244a9:	xor    esi,DWORD PTR ds:0x33005600
  4244af:	add    BYTE PTR [edi+0x0],dl
  4244b2:	xor    eax,0x5f003600
  4244b7:	add    BYTE PTR [ecx+0x0],bl
  4244ba:	dec    eax
  4244bb:	add    BYTE PTR [ecx+0x0],bl
  4244be:	inc    ebp
  4244bf:	add    BYTE PTR [eax+0x0],cl
  4244c2:	add    BYTE PTR [eax],al
  4244c4:	push   eax
  4244c5:	add    BYTE PTR [eax],dh
  4244c7:	add    BYTE PTR [ecx+0x0],bl
  4244ca:	pop    edi
  4244cb:	add    BYTE PTR [ecx+0x0],bl
  4244ce:	xor    al,BYTE PTR [eax]
  4244d0:	dec    edi
  4244d1:	add    BYTE PTR [ebx],dh
  4244d3:	add    BYTE PTR [edi+0x0],dl
  4244d6:	pop    edi
  4244d7:	add    BYTE PTR [eax+eax*1+0x4f],al
  4244db:	add    BYTE PTR [ebx+0x0],dl
  4244de:	add    BYTE PTR [eax],al
  4244e0:	dec    ebp
  4244e1:	add    BYTE PTR [esi+0x0],dl
  4244e4:	push   esp
  4244e5:	add    BYTE PTR [edi+0x0],bl
  4244e8:	inc    edx
  4244e9:	add    BYTE PTR [edx+0x0],dl
  4244ec:	xor    al,0x0
  4244ee:	pop    edi
  4244ef:	add    BYTE PTR [ecx+0x0],al
  4244f2:	push   esp
  4244f3:	add    BYTE PTR [edx+0x0],dl
  4244f6:	pop    edi
  4244f7:	add    BYTE PTR [edi+0x0],cl
  4244fa:	xor    eax,DWORD PTR [eax]
  4244fc:	inc    edx
  4244fd:	add    BYTE PTR [eax],al
  4244ff:	add    BYTE PTR [esi+0x0],cl
  424502:	cmp    BYTE PTR [eax],al
  424504:	push   eax
  424505:	add    BYTE PTR [eax],dh
  424507:	add    BYTE PTR [edi+0x0],bl
  42450a:	push   edx
  42450b:	add    BYTE PTR [edi+0x0],al
  42450e:	inc    edx
  42450f:	add    BYTE PTR [eax],bh
  424511:	add    BYTE PTR [eax+eax*1],dh
  424514:	pop    edi
  424515:	add    BYTE PTR [edi+0x0],cl
  424518:	push   eax
  424519:	add    BYTE PTR [esi],dh
  42451b:	add    BYTE PTR [eax],al
  42451d:	add    BYTE PTR [edx+0x0],bl
  424520:	pop    eax
  424521:	add    BYTE PTR [ecx],dh
  424523:	add    BYTE PTR [eax],bh
  424525:	add    BYTE PTR [edi+0x0],bl
  424528:	push   edi
  424529:	add    BYTE PTR [edx+0x0],dl
  42452c:	dec    ebx
  42452d:	add    BYTE PTR [edi+0x0],bl
  424530:	inc    esp
  424531:	add    BYTE PTR [esi],dh
  424533:	add    BYTE PTR [ecx],bh
  424535:	add    BYTE PTR [esi],dh
  424537:	add    BYTE PTR [esi+0x0],dl
  42453a:	add    BYTE PTR [eax],al
  42453c:	push   ebp
  42453d:	add    BYTE PTR [eax],dh
  42453f:	add    BYTE PTR [eax+eax*1+0x5f],al
  424543:	add    BYTE PTR [edx+0x0],dl
  424546:	dec    ecx
  424547:	add    BYTE PTR [edi+0x0],cl
  42454a:	xor    eax,DWORD PTR [eax]
  42454c:	xor    eax,0x34005f00
  424551:	add    BYTE PTR [edi+0x0],cl
  424554:	pop    ecx
  424555:	add    BYTE PTR [eax],al
  424557:	add    BYTE PTR [eax+eax*1+0x31],cl
  42455b:	add    BYTE PTR [esi+0x0],al
  42455e:	pop    edi
  42455f:	add    BYTE PTR [ebp+0x0],cl
  424562:	dec    ebp
  424563:	add    BYTE PTR [eax],bh
  424565:	add    BYTE PTR [esi],dh
  424567:	add    BYTE PTR [edx+0x0],al
  42456a:	dec    esp
  42456b:	add    BYTE PTR [eax],al
  42456d:	add    BYTE PTR [edx+0x0],al
  424570:	xor    eax,0x5f003500
  424575:	add    BYTE PTR [eax+0x0],bl
  424578:	inc    esp
  424579:	add    BYTE PTR [edi+0x0],cl
  42457c:	inc    ecx
  42457d:	add    BYTE PTR [eax+eax*1],dh
  424580:	add    BYTE PTR [eax],al
  424582:	push   ecx
  424583:	add    BYTE PTR [eax],bh
  424585:	add    BYTE PTR [ecx+0x0],dl
  424588:	pop    edi
  424589:	add    BYTE PTR [eax+eax*1+0x31],dl
  42458d:	add    BYTE PTR [ecx],dh
  42458f:	add    BYTE PTR [eax],bh
  424591:	add    BYTE PTR [edi+0x0],bl
  424594:	aaa    
  424595:	add    BYTE PTR [edx+0x0],al
  424598:	add    BYTE PTR [eax],al
  42459a:	push   edx
  42459b:	add    BYTE PTR [ecx],bh
  42459d:	add    BYTE PTR [esi+0x0],dl
  4245a0:	pop    edi
  4245a1:	add    BYTE PTR [eax+eax*1],dh
  4245a4:	push   edx
  4245a5:	add    BYTE PTR [ecx+0x0],bl
  4245a8:	pop    edi
  4245a9:	add    BYTE PTR [eax],bh
  4245ab:	add    BYTE PTR [eax],dh
  4245ad:	add    BYTE PTR [edx+0x0],bl
  4245b0:	add    BYTE PTR [eax],al
  4245b2:	add    BYTE PTR [eax],al
  4245b4:	nop
  4245b5:	inc    edx
  4245b6:	add    BYTE PTR [eax+edx*4],al
  4245b9:	inc    edx
  4245ba:	add    BYTE PTR [eax],cl
  4245bc:	nop
  4245bd:	inc    edx
  4245be:	add    BYTE PTR [eax+edx*4],cl
  4245c1:	inc    edx
  4245c2:	add    BYTE PTR [eax],dl
  4245c4:	nop
  4245c5:	inc    edx
  4245c6:	add    BYTE PTR [eax+edx*4],dl
  4245c9:	inc    edx
  4245ca:	add    BYTE PTR [eax],bl
  4245cc:	nop
  4245cd:	inc    edx
  4245ce:	add    BYTE PTR [eax+edx*4],bl
  4245d1:	inc    edx
  4245d2:	add    BYTE PTR [eax],ah
  4245d4:	nop
  4245d5:	inc    edx
  4245d6:	add    BYTE PTR [eax+edx*4],ah
  4245d9:	inc    edx
  4245da:	add    BYTE PTR [eax],ch
  4245dc:	nop
  4245dd:	inc    edx
	...
