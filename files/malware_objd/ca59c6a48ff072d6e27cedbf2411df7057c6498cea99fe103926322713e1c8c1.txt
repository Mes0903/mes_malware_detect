
ca59c6a48ff072d6e27cedbf2411df7057c6498cea99fe103926322713e1c8c1.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x80
  401009:	mov    eax,DWORD PTR [ebp+0x8]
  40100c:	mov    ecx,DWORD PTR ds:0x428657
  401012:	and    DWORD PTR ds:0x428647,ecx
  401018:	push   ebx
  401019:	movzx  ecx,BYTE PTR ds:0x42862f
  401020:	add    DWORD PTR ds:0x4285cf,ecx
  401026:	push   esi
  401027:	and    DWORD PTR ds:0x42867b,0x0
  401031:	jmp    0x401043
  401036:	mov    esi,DWORD PTR ds:0x42867b
  40103c:	inc    esi
  40103d:	mov    DWORD PTR ds:0x42867b,esi
  401043:	cmp    DWORD PTR ds:0x42867b,0x17
  40104a:	jae    0x401084
  401050:	cmp    DWORD PTR ds:0x42867b,0x24
  401057:	jb     0x401084
  40105d:	jmp    0x40107f
  401062:	push   0x312f
  401067:	push   0x3b66
  40106c:	push   0x8bcc
  401071:	push   DWORD PTR [ebp-0x14]
  401074:	push   0x61c9
  401079:	call   DWORD PTR ds:0x42879f
  40107f:	jmp    0x401036
  401084:	push   edi
  401085:	and    DWORD PTR ds:0x4285e3,0x0
  40108f:	mov    esi,DWORD PTR ds:0x4285e3
  401095:	inc    esi
  401096:	mov    DWORD PTR ds:0x4285e3,esi
  40109c:	cmp    DWORD PTR ds:0x4285e3,0x20
  4010a3:	jbe    0x4010c4
  4010a9:	jmp    0x4010b7
  4010ae:	push   DWORD PTR [ebp-0x18]
  4010b1:	call   DWORD PTR ds:0x4287a3
  4010b7:	cmp    DWORD PTR ds:0x4285e3,0x1f
  4010be:	jb     0x40108f
  4010c4:	mov    esi,0x75108a4
  4010c9:	inc    ecx
  4010ca:	xor    eax,esi
  4010cc:	mov    edi,0x3272ec
  4010d1:	add    eax,edi
  4010d3:	mov    DWORD PTR [ebp-0x28],eax
  4010d6:	and    eax,eax
  4010d8:	mov    eax,ds:0x42816f
  4010dd:	xor    ecx,DWORD PTR ds:0x4285cf
  4010e3:	mov    eax,DWORD PTR [eax]
  4010e5:	sub    DWORD PTR ds:0x42861b,ecx
  4010eb:	mov    DWORD PTR [ebp-0x20],eax
  4010ee:	adc    DWORD PTR ds:0x42862b,edi
  4010f4:	mov    eax,ds:0x428377
  4010f9:	xor    DWORD PTR ds:0x428603,ebx
  4010ff:	mov    eax,DWORD PTR [eax]
  401101:	neg    ecx
  401103:	mov    DWORD PTR [ebp-0x18],eax
  401106:	sbb    DWORD PTR ds:0x428643,ecx
  40110c:	mov    DWORD PTR [ebp-0x24],0xf89c87b0
  401113:	and    DWORD PTR ds:0x42866b,ecx
  401119:	mov    eax,DWORD PTR [ebp-0x24]
  40111c:	mov    ecx,DWORD PTR ds:0x4286a7
  401122:	mov    ecx,DWORD PTR [ecx]
  401124:	sbb    DWORD PTR ds:0x428633,ecx
  40112a:	xor    eax,esi
  40112c:	and    DWORD PTR ds:0x428657,0x0
  401136:	mov    ecx,DWORD PTR ds:0x428657
  40113c:	inc    ecx
  40113d:	mov    DWORD PTR ds:0x428657,ecx
  401143:	cmp    DWORD PTR ds:0x428657,0x15
  40114a:	jg     0x401170
  401150:	jmp    0x401163
  401155:	push   DWORD PTR [ebp-0x20]
  401158:	push   0x428097
  40115d:	call   DWORD PTR ds:0x4287a7
  401163:	cmp    DWORD PTR ds:0x428657,0x13
  40116a:	jb     0x401136
  401170:	add    eax,edi
  401172:	mov    DWORD PTR [ebp-0x28],eax
  401175:	adc    DWORD PTR ds:0x428603,0x6a9
  40117f:	mov    eax,ds:0x4282ef
  401184:	sub    ecx,DWORD PTR ds:0x428647
  40118a:	mov    DWORD PTR [ebp-0x28],eax
  40118d:	mov    DWORD PTR ds:0x4285eb,0x1e
  401197:	cmp    DWORD PTR ds:0x4285eb,0x0
  40119e:	je     0x4011d9
  4011a4:	cmp    DWORD PTR ds:0x4285eb,0x2b
  4011ab:	jg     0x4011d9
  4011b1:	jmp    0x4011c7
  4011b6:	push   0x4280ae
  4011bb:	push   DWORD PTR [ebp-0x18]
  4011be:	push   DWORD PTR [ebp-0xc]
  4011c1:	call   DWORD PTR ds:0x4287ab
  4011c7:	mov    ecx,DWORD PTR ds:0x4285eb
  4011cd:	dec    ecx
  4011ce:	mov    DWORD PTR ds:0x4285eb,ecx
  4011d4:	jmp    0x401197
  4011d9:	mov    eax,DWORD PTR [ebp-0x20]
  4011dc:	mov    DWORD PTR ds:0x4285db,0x1c
  4011e6:	cmp    DWORD PTR ds:0x4285db,0x0
  4011ed:	je     0x401222
  4011f3:	cmp    DWORD PTR ds:0x4285db,0x28
  4011fa:	jbe    0x401222
  401200:	jmp    0x401210
  401205:	push   0x428042
  40120a:	call   DWORD PTR ds:0x4287af
  401210:	mov    ecx,DWORD PTR ds:0x4285db
  401216:	dec    ecx
  401217:	mov    DWORD PTR ds:0x4285db,ecx
  40121d:	jmp    0x4011e6
  401222:	mov    DWORD PTR [ebp-0x10],eax
  401225:	and    DWORD PTR ds:0x428627,0x0
  40122f:	jmp    0x40123f
  401234:	mov    eax,ds:0x428627
  401239:	inc    eax
  40123a:	mov    ds:0x428627,eax
  40123f:	cmp    DWORD PTR ds:0x428627,0x1e
  401246:	jae    0x40128e
  40124c:	cmp    DWORD PTR ds:0x428627,0xa
  401253:	jge    0x40128e
  401259:	jmp    0x40126e
  40125e:	push   0x6cd8
  401263:	push   0x4285eb
  401268:	call   DWORD PTR ds:0x4287b3
  40126e:	cmp    DWORD PTR ds:0x428627,0x9
  401275:	jne    0x401289
  40127b:	xor    eax,eax
  40127d:	add    eax,DWORD PTR ds:0x428627
  401283:	inc    eax
  401284:	mov    ds:0x428627,eax
  401289:	jmp    0x401234
  40128e:	mov    eax,DWORD PTR [ebp-0x10]
  401291:	and    DWORD PTR ds:0x4285ff,0x0
  40129b:	mov    ecx,DWORD PTR ds:0x4285ff
  4012a1:	inc    ecx
  4012a2:	mov    DWORD PTR ds:0x4285ff,ecx
  4012a8:	cmp    DWORD PTR ds:0x4285ff,0x5
  4012af:	jl     0x4012e7
  4012b5:	jmp    0x4012c0
  4012ba:	call   DWORD PTR ds:0x4287b7
  4012c0:	cmp    DWORD PTR ds:0x4285ff,0x4
  4012c7:	jne    0x4012da
  4012cd:	mov    ecx,DWORD PTR ds:0x4285ff
  4012d3:	inc    ecx
  4012d4:	mov    DWORD PTR ds:0x4285ff,ecx
  4012da:	cmp    DWORD PTR ds:0x4285ff,0x18
  4012e1:	jb     0x40129b
  4012e7:	push   0x4
  4012e9:	xor    ecx,ecx
  4012eb:	or     ecx,DWORD PTR ds:0x42864b
  4012f1:	sub    DWORD PTR ds:0x4285d3,ecx
  4012f7:	pop    ecx
  4012f8:	or     DWORD PTR ds:0x4285eb,0x6baf
  401302:	sub    ecx,eax
  401304:	and    DWORD PTR ds:0x4285ff,0x0
  40130e:	mov    eax,ds:0x4285ff
  401313:	inc    eax
  401314:	mov    ds:0x4285ff,eax
  401319:	cmp    DWORD PTR ds:0x4285ff,0x1c
  401320:	jg     0x401343
  401326:	jmp    0x401336
  40132b:	push   0x6245
  401330:	call   DWORD PTR ds:0x4287bb
  401336:	cmp    DWORD PTR ds:0x4285ff,0x17
  40133d:	jb     0x40130e
  401343:	add    ecx,DWORD PTR [ebp-0x18]
  401346:	sub    DWORD PTR ds:0x42867b,ecx
  40134c:	mov    DWORD PTR [ebp-0xc],0xf89c85f0
  401353:	mov    DWORD PTR [ebp-0x14],ecx
  401356:	mov    DWORD PTR [ebp-0x80],0xf89c85bc
  40135d:	adc    eax,0x2a9e
  401362:	mov    eax,DWORD PTR [ebp-0x10]
  401365:	mov    DWORD PTR [ebp-0x7c],eax
  401368:	and    DWORD PTR ds:0x42865b,0x0
  401372:	jmp    0x401382
  401377:	mov    eax,ds:0x42865b
  40137c:	inc    eax
  40137d:	mov    ds:0x42865b,eax
  401382:	cmp    DWORD PTR ds:0x42865b,0x14
  401389:	jae    0x4013e1
  40138f:	cmp    DWORD PTR ds:0x42865b,0xd
  401396:	jle    0x4013e1
  40139c:	jmp    0x4013c1
  4013a1:	push   0x5c8c
  4013a6:	push   0x42800b
  4013ab:	push   DWORD PTR [ebp-0x18]
  4013ae:	push   0x42800b
  4013b3:	push   0x513b
  4013b8:	push   DWORD PTR [ebp-0xc]
  4013bb:	call   DWORD PTR ds:0x4287bf
  4013c1:	cmp    DWORD PTR ds:0x42865b,0xc
  4013c8:	jne    0x4013dc
  4013ce:	xor    eax,eax
  4013d0:	add    eax,DWORD PTR ds:0x42865b
  4013d6:	inc    eax
  4013d7:	mov    ds:0x42865b,eax
  4013dc:	jmp    0x401377
  4013e1:	mov    eax,DWORD PTR [ebp-0x14]
  4013e4:	adc    DWORD PTR ds:0x42860f,0x676
  4013ee:	mov    DWORD PTR [ebp-0x78],eax
  4013f1:	mov    eax,DWORD PTR [ebp-0xc]
  4013f4:	sbb    DWORD PTR ds:0x4285db,0x428663
  4013fe:	xor    eax,esi
  401400:	add    eax,edi
  401402:	mov    DWORD PTR [ebp-0x74],eax
  401405:	lea    eax,[ebp-0x1c]
  401408:	mov    DWORD PTR [ebp-0x70],eax
  40140b:	mov    eax,DWORD PTR [ebp-0x80]
  40140e:	jmp    0x4037cc
  401413:	mov    eax,0x80deee36
  401418:	xchg   BYTE PTR [eax-0x320ea8e8],bh
  40141e:	pop    ebx
  40141f:	mov    BYTE PTR [esi-0x40],ah
  401422:	in     al,dx
  401423:	jp     0x40149f
  401425:	jp     0x4014a1
  401427:	fstp   QWORD PTR [edi+0x7a]
  40142a:	jp     0x401451
  40142c:	sub    al,0x27
  40142e:	xor    DWORD PTR [ecx],ebx
  401430:	xor    eax,0x42752f1b
  401435:	imul   esi,DWORD PTR [esi-0x38],0x6d6a6a7f
  40143c:	inc    edx
  40143d:	aad    0xdc
  40143f:	icebp  
  401440:	pusha  
  401441:	dec    eax
  401442:	imul   esi,DWORD PTR [ecx+0x5b],0xffffffa0
  401446:	jo     0x4014b5
  401448:	pop    ecx
  401449:	iret   
  40144a:	pop    ebp
  40144b:	dec    edx
  40144c:	xor    BYTE PTR [edx+edi*8+0x4d678697],cl
  401453:	jg     0x40149c
  401455:	xor    BYTE PTR [esi+0x3bb2b07f],0x2c
  40145c:	push   DWORD PTR [esi-0x24]
  40145f:	cli    
  401460:	arpl   WORD PTR [edi+0x1e],di
  401463:	in     eax,dx
  401464:	cmp    ebp,ecx
  401466:	mov    edx,0xde2397ed
  40146b:	mov    ebp,DWORD PTR [ecx]
  40146d:	mulps  xmm5,XMMWORD PTR [ebx+0x6d07d48a]
  401474:	fst    QWORD PTR [esp+eiz*8]
  401477:	push   cs
  401478:	cli    
  401479:	sbb    BYTE PTR ss:[eax+0xc],cl
  40147d:	imul   ebp,DWORD PTR ss:[eax-0x47],0xffffffaf
  401482:	and    edx,DWORD PTR [ecx+0x15]
  401485:	mov    dh,0xff
  401487:	jmp    0x42c43fd5
  40148c:	enter  0xf95b,0x1a
  401490:	cli    
  401491:	js     0x401444
  401493:	jae    0x401472
  401495:	cwde   
  401496:	pop    edi
  401497:	mov    esi,DWORD PTR [ecx+0x41922417]
  40149d:	add    ebx,DWORD PTR [esi+0xb83823c]
  4014a3:	fisubr DWORD PTR ds:0x43448d62
  4014a9:	fs repz iret 
  4014ac:	mov    ch,BYTE PTR [ecx]
  4014ae:	mov    eax,eax
  4014b0:	(bad)  
  4014b1:	int3   
  4014b2:	mov    BYTE PTR [ecx-0xc],ah
  4014b5:	push   ebp
  4014b6:	bound  ecx,QWORD PTR [esp+ecx*1+0x3e]
  4014ba:	add    eax,DWORD PTR [esi+0x13]
  4014bd:	lods   eax,DWORD PTR ds:[esi]
  4014be:	dec    ebx
  4014bf:	retf   0x40b7
  4014c2:	rcl    BYTE PTR [esi+eiz*2],1
  4014c5:	std    
  4014c6:	bound  esp,QWORD PTR [esi-0x4b]
  4014c9:	stc    
  4014ca:	push   0x2652f8bf
  4014cf:	fidiv  WORD PTR [edi+0x4d]
  4014d2:	xchg   edx,eax
  4014d3:	and    eax,0x6d1538a0
  4014d8:	shl    DWORD PTR [ebp-0x39e458f9],cl
  4014de:	and    al,bh
  4014e0:	push   ebp
  4014e1:	push   ds
  4014e2:	xchg   edx,eax
  4014e3:	ja     0x4014d4
  4014e5:	sahf   
  4014e6:	jge    0x401554
  4014e8:	in     eax,0x9a
  4014ea:	mov    bl,0xa6
  4014ec:	(bad)  
  4014ed:	and    ebx,esp
  4014ef:	cmp    BYTE PTR [edi+0xa],cl
  4014f2:	arpl   WORD PTR [ecx-0x69df06e3],sp
  4014f8:	cmp    ecx,DWORD PTR [eax+edi*4+0x2f]
  4014fc:	pop    eax
  4014fd:	pop    ebx
  4014fe:	iret   
  4014ff:	mov    cl,ah
  401501:	call   0xa063:0xcb8beff9
  401508:	outs   dx,DWORD PTR ds:[esi]
  401509:	js     0x401505
  40150b:	push   esp
  40150c:	pop    ecx
  40150d:	int    0x70
  40150f:	cmp    DWORD PTR [ecx+0x25],edi
  401512:	lds    esp,FWORD PTR ds:0x37c81374
  401518:	jmp    0x401513
  40151a:	push   edi
  40151b:	aaa    
  40151c:	enter  0x5db7,0xa4
  401520:	cdq    
  401521:	lods   eax,DWORD PTR ds:[esi]
  401522:	test   dl,dl
  401524:	das    
  401525:	and    BYTE PTR [esi+0x70],bl
  401528:	sbb    BYTE PTR [ebp+0x18],cl
  40152b:	bound  ecx,QWORD PTR [eax]
  40152d:	out    dx,eax
  40152e:	mov    al,0x85
  401530:	ror    DWORD PTR [edx+0x36],cl
  401533:	fdivr  DWORD PTR [eax+0x6c]
  401536:	pop    ebx
  401537:	fsub   QWORD PTR [edi-0xdd274b4]
  40153d:	mov    cl,0xbf
  40153f:	shr    DWORD PTR [esp+ecx*4-0x1784ff05],0xba
  401547:	mov    ecx,0x9df3e3b
  40154c:	in     al,0xab
  40154e:	hlt    
  40154f:	pop    ds
  401550:	iret   
  401551:	xor    al,0xe1
  401553:	or     al,0xc6
  401555:	mov    edi,0xde67c66a
  40155a:	pop    eax
  40155b:	outs   dx,BYTE PTR ds:[esi]
  40155c:	adc    eax,DWORD PTR ds:0xc4bedb6a
  401562:	inc    esp
  401563:	pop    es
  401564:	iret   
  401565:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401566:	sbb    eax,0xe0e15c19
  40156b:	aam    0x9d
  40156d:	xor    BYTE PTR [ebp+0x7a],dl
  401570:	fdiv   DWORD PTR [ecx-0x95fd37a]
  401576:	dec    ebx
  401577:	adc    BYTE PTR [edx],dh
  401579:	adc    BYTE PTR [edx-0x37],ah
  40157c:	fidiv  DWORD PTR [edx-0x44aac688]
  401582:	jl     0x40151e
  401584:	mov    edx,0xbede61ff
  401589:	fwait
  40158a:	imul   edi,DWORD PTR es:[ecx],0xcf2bd8ce
  401591:	add    ecx,DWORD PTR [ebx]
  401593:	mov    eax,0x540b90af
  401598:	dec    ecx
  401599:	fidiv  WORD PTR [esi]
  40159b:	push   eax
  40159c:	cmc    
  40159d:	pop    es
  40159e:	lea    esi,[ebx-0x4e9d69ac]
  4015a4:	jl     0x401584
  4015a6:	and    bl,BYTE PTR [ecx+eax*8+0x4b2118f0]
  4015ad:	sub    edx,DWORD PTR [ecx+0x6b]
  4015b0:	fdivp  st(1),st
  4015b2:	fdiv   st,st(1)
  4015b4:	cmp    DWORD PTR [eax],ebp
  4015b6:	std    
  4015b7:	hlt    
  4015b8:	mov    bh,0xad
  4015ba:	pop    edx
  4015bb:	sub    dl,BYTE PTR [edx+0x664fd9b0]
  4015c1:	push   esp
  4015c2:	sub    eax,0x49117a20
  4015c7:	test   eax,0xcb1bc883
  4015cc:	or     eax,0x95d95141
  4015d1:	sti    
  4015d2:	inc    eax
  4015d3:	in     eax,dx
  4015d4:	out    0xba,eax
  4015d6:	xor    edx,eax
  4015d8:	mov    eax,es:0x4d9669ca
  4015de:	bound  ebp,QWORD PTR [ebx-0x5eb5db44]
  4015e4:	repz sti 
  4015e6:	jmp    0x401633
  4015e8:	adc    eax,DWORD PTR [esi+0x42]
  4015eb:	and    BYTE PTR [edi+edx*4],bl
  4015ee:	pop    ds
  4015ef:	ror    BYTE PTR [edi-0xc],cl
  4015f2:	clc    
  4015f3:	cmc    
  4015f4:	dec    edi
  4015f5:	pop    edx
  4015f6:	dec    esi
  4015f7:	mov    bh,0x4f
  4015f9:	mov    bl,bh
  4015fb:	jno    0x4015df
  4015fd:	pop    esi
  4015fe:	jecxz  0x401663
  401600:	cld    
  401601:	fistp  DWORD PTR [ecx+0x17]
  401604:	mov    ebx,0xae0db35e
  401609:	adc    al,0x2f
  40160b:	and    DWORD PTR [ecx+edi*2-0x46],0xfe04fd3f
  401613:	push   0x1b88e612
  401618:	cmp    eax,0x6a9c7d74
  40161d:	or     DWORD PTR [edx],edx
  40161f:	jecxz  0x401672
  401621:	hlt    
  401622:	inc    esi
  401623:	mov    ebp,0x3087163b
  401628:	push   esp
  401629:	mov    al,0xed
  40162b:	sbb    eax,0xd700a6f
  401630:	mov    eax,ds:0x8e06de7d
  401635:	jecxz  0x401680
  401637:	inc    esp
  401638:	sub    esp,DWORD PTR [esi+0x74]
  40163b:	cmp    eax,0xa7774dbe
  401640:	outs   dx,BYTE PTR ds:[esi]
  401641:	dec    DWORD PTR [edx+eax*2]
  401644:	sub    BYTE PTR [eax],dl
  401646:	jb     0x401649
  401648:	fstp   DWORD PTR [eax+0x5713001e]
  40164e:	pop    ss
  40164f:	int3   
  401650:	cmp    dh,cl
  401652:	or     DWORD PTR [ecx],eax
  401654:	mov    ss,WORD PTR [ecx+edx*8]
  401657:	fnstenv [eax]
  401659:	mov    WORD PTR [esi],cs
  40165b:	mov    al,ds:0x145b8036
  401660:	and    DWORD PTR [ebp+0x6e],ebx
  401663:	je     0x4016b3
  401665:	lea    ebp,gs:[ebx+eiz*4-0x469f8253]
  40166d:	inc    eax
  40166e:	jge    0x401607
  401670:	mov    ecx,0xf86d841d
  401675:	mov    ch,0x5d
  401677:	daa    
  401678:	stc    
  401679:	cli    
  40167a:	dec    esp
  40167b:	mov    esi,0x146b3a82
  401680:	ja     0x401648
  401682:	leave  
  401683:	jmp    0x34aa:0x1513a82e
  40168a:	add    eax,0x5a0fe777
  40168f:	adc    BYTE PTR [ecx-0x41],dl
  401692:	sub    edi,DWORD PTR [edx-0x5f8bdc2a]
  401698:	pop    eax
  401699:	aas    
  40169a:	push   0xd2d180d7
  40169f:	jmp    0xc867:0x552e009c
  4016a6:	shl    DWORD PTR [edx-0x68],0x95
  4016aa:	sbb    BYTE PTR [ebx-0x319b9ca2],cl
  4016b0:	jb     0x401708
  4016b2:	jp     0x40165e
  4016b4:	or     ebx,DWORD PTR [edi]
  4016b6:	ror    BYTE PTR [eax],0x4c
  4016b9:	outs   dx,DWORD PTR ds:[esi]
  4016ba:	(bad)  
  4016bb:	mul    BYTE PTR [edx-0x57de184a]
  4016c1:	xchg   ebp,eax
  4016c2:	sahf   
  4016c3:	(bad)  
  4016c4:	push   eax
  4016c5:	fcmove st,st(7)
  4016c7:	jg     0x40172e
  4016c9:	icebp  
  4016ca:	outs   dx,BYTE PTR ds:[esi]
  4016cb:	in     al,0x9d
  4016cd:	mov    BYTE PTR ds:0xcf2c,dl
  4016d2:	and    DWORD PTR [eax+0x69],eax
  4016d5:	fdivr  st(0),st
  4016d7:	ja     0x4016d6
  4016d9:	stc    
  4016da:	jp     0x401711
  4016dc:	jb     0x40170e
  4016de:	ds popa 
  4016e0:	rcr    BYTE PTR [ebx-0x46],0x15
  4016e4:	mov    ch,0xc4
  4016e6:	js     0x4016f0
  4016e8:	repnz xor eax,0xd6b64ead
  4016ee:	inc    edx
  4016ef:	test   BYTE PTR [ecx+0x49],0xf9
  4016f3:	jl     0x4016f6
  4016f5:	rcl    BYTE PTR [ebx+esi*4+0x660a6477],cl
  4016fc:	fbld   TBYTE PTR [ebx-0x359ffb49]
  401702:	xchg   edi,eax
  401703:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  401705:	mov    ds:0x2af5167a,al
  40170a:	je     0x401744
  40170c:	loopne 0x40169a
  40170e:	imul   ebx,DWORD PTR [esi+edx*1],0x5d
  401712:	std    
  401713:	mov    esp,0x30dc7b6
  401718:	out    0xd1,eax
  40171a:	inc    ebx
  40171b:	push   ds
  40171c:	xor    eax,0x4fccc81a
  401721:	pusha  
  401722:	dec    esp
  401723:	outs   dx,DWORD PTR ds:[esi]
  401724:	iret   
  401725:	or     eax,0xe5f5e922
  40172a:	scas   eax,DWORD PTR es:[edi]
  40172b:	sub    eax,0x5d787773
  401730:	cmp    al,0xa5
  401732:	mov    esp,DWORD PTR [ecx+0x4f2b6bf6]
  401738:	enter  0xa5de,0x1f
  40173c:	dec    ebx
  40173d:	sbb    BYTE PTR [ecx],bh
  40173f:	call   0xb0c74ae9
  401744:	jo     0x401793
  401746:	push   ebx
  401747:	shl    esi,0xf7
  40174a:	pop    ebp
  40174b:	(bad)  
  40174c:	and    ecx,edi
  40174e:	inc    ebp
  40174f:	pop    ss
  401750:	test   DWORD PTR [edx],ecx
  401752:	shl    BYTE PTR [edi-0x4774ac3c],0x56
  401759:	jmp    0x7922:0x76065a03
  401760:	in     eax,0x6f
  401762:	jno    0x40171e
  401764:	jb     0x401751
  401766:	xchg   esp,ecx
  401768:	add    ebp,edi
  40176a:	retf   0xeae
  40176d:	mov    BYTE PTR [eax-0x61],dh
  401770:	pop    esp
  401771:	push   ebp
  401772:	mov    ecx,0xe8ae95d0
  401777:	mov    esp,0x10fad3ff
  40177c:	mov    ebx,0x14bb1b5f
  401781:	int    0x9a
  401783:	loop   0x4017a6
  401785:	and    BYTE PTR [ecx],bl
  401787:	ret    0xfab5
  40178a:	arpl   WORD PTR [ebx+0x2fb6ea08],ax
  401790:	jnp    0x4017e5
  401792:	in     eax,0xea
  401794:	fidiv  DWORD PTR [edi+0x4d6e6150]
  40179a:	xor    eax,0x2bca847f
  40179f:	sub    al,BYTE PTR [ecx+0x64]
  4017a2:	fwait
  4017a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017a4:	cmp    BYTE PTR [ecx+eax*2-0x42],al
  4017a8:	js     0x4017b3
  4017aa:	add    al,0xbf
  4017ac:	and    DWORD PTR [ebx],esp
  4017ae:	dec    esi
  4017af:	cs add eax,0x6c8741e1
  4017b5:	xchg   ebp,eax
  4017b6:	daa    
  4017b7:	adc    al,0xc4
  4017b9:	add    DWORD PTR ds:0xa5def54,0x9764671d
  4017c3:	jo     0x40174d
  4017c5:	repnz add DWORD PTR [ebp-0x55473cae],0x92861974
  4017d0:	dec    eax
  4017d1:	call   0x16bcf529
  4017d6:	sbb    BYTE PTR cs:[edx-0x34],0x96
  4017db:	push   ds
  4017dc:	push   edi
  4017dd:	inc    edx
  4017de:	cmp    DWORD PTR [edi+0x1435cb91],edx
  4017e4:	sbb    ecx,DWORD PTR [edi+0x35]
  4017e7:	out    dx,eax
  4017e8:	in     eax,dx
  4017e9:	xor    dh,BYTE PTR [ebx]
  4017eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017ec:	mov    DWORD PTR [edi],esi
  4017ee:	test   eax,0x5ae1164e
  4017f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017f4:	loop   0x401807
  4017f6:	dec    ebp
  4017f7:	ret    
  4017f8:	xor    DWORD PTR [edx+edi*1-0x2c],ebx
  4017fc:	sbb    ecx,ecx
  4017fe:	call   0x8d8:0xf926c53b
  401805:	scas   eax,DWORD PTR es:[edi]
  401806:	jle    0x4017d6
  401808:	test   al,0xb0
  40180a:	shr    DWORD PTR [ecx+0x70491a7e],0xb7
  401811:	pop    esp
  401812:	rcr    DWORD PTR [ecx],0x41
  401815:	or     al,0xaa
  401817:	loop   0x401836
  401819:	jne    0x4017b5
  40181b:	add    bh,BYTE PTR [edi+0x27b240d4]
  401821:	mov    esp,0x7981f6a8
  401826:	daa    
  401827:	loopne 0x401821
  401829:	push   ebp
  40182a:	jl     0x4017d0
  40182c:	and    bh,BYTE PTR [edx]
  40182e:	pop    eax
  40182f:	and    BYTE PTR [edx],al
  401831:	mov    bh,0x78
  401833:	adc    eax,0xe4bfbe06
  401838:	retf   0x2e12
  40183b:	mov    ch,0x65
  40183d:	inc    ebx
  40183e:	daa    
  40183f:	push   ss
  401840:	cld    
  401841:	push   ds
  401842:	repnz mov DWORD PTR [ebx-0x10185fab],edx
  401849:	jl     0x401860
  40184b:	ins    BYTE PTR es:[edi],dx
  40184c:	lds    ebx,FWORD PTR ss:0xbeeaf7f
  401853:	mov    bh,0xdb
  401855:	mov    ebp,0x1586d34
  40185a:	scas   eax,DWORD PTR es:[edi]
  40185b:	lock xchg edx,eax
  40185d:	outs   dx,BYTE PTR ds:[esi]
  40185e:	shr    BYTE PTR [edx-0x46],cl
  401861:	ss xchg ebp,eax
  401863:	push   ss
  401864:	out    0x7b,al
  401866:	pop    edi
  401867:	in     al,0xe8
  401869:	dec    edx
  40186a:	xor    eax,0x2f46a36c
  40186f:	sbb    DWORD PTR [ebp+0x7458bd11],0x76
  401876:	push   ebp
  401877:	jb     0x4018ca
  401879:	pop    ss
  40187a:	push   0x54999c18
  40187f:	xor    DWORD PTR [edi],edx
  401881:	cmc    
  401882:	(bad)  
  401883:	outs   dx,BYTE PTR ds:[esi]
  401884:	das    
  401885:	xchg   edx,eax
  401886:	pop    es
  401887:	mov    DWORD PTR [edi+0x1595209],ecx
  40188d:	mov    ds:0xb9331ed,eax
  401892:	xor    ebp,edx
  401894:	cld    
  401895:	cmp    DWORD PTR [eax+0x37],0x45605b6c
  40189c:	inc    edi
  40189d:	push   esp
  40189e:	nop
  40189f:	adc    ebp,DWORD PTR [edx+0x66]
  4018a2:	ds out dx,eax
  4018a4:	lods   eax,DWORD PTR ds:[esi]
  4018a5:	mov    bh,0x96
  4018a7:	das    
  4018a8:	and    al,0x5a
  4018aa:	shr    al,cl
  4018ac:	and    BYTE PTR [ecx-0x5a],ah
  4018af:	fist   WORD PTR [edx+0x5f]
  4018b2:	mov    ebp,0xbbaf8074
  4018b7:	inc    ecx
  4018b8:	test   eax,0x9368c3ca
  4018bd:	js     0x4018f1
  4018bf:	(bad)  
  4018c1:	dec    esp
  4018c2:	shl    DWORD PTR [ebp+0x300b07e9],1
  4018c8:	add    al,0xf4
  4018ca:	and    DWORD PTR [edx-0x551eb4f5],esi
  4018d0:	sub    DWORD PTR [ebp-0x1c],ecx
  4018d3:	scas   al,BYTE PTR es:[edi]
  4018d4:	mov    eax,ds:0x4285fe93
  4018d9:	mov    dh,0x96
  4018db:	std    
  4018dc:	into   
  4018dd:	push   eax
  4018de:	(bad)  
  4018df:	scas   al,BYTE PTR es:[edi]
  4018e0:	mov    esp,DWORD PTR [esi-0x68]
  4018e3:	add    edx,DWORD PTR [ebx+0x5d]
  4018e6:	inc    eax
  4018e7:	push   0x34
  4018e9:	mov    ebx,0x69809e4d
  4018ee:	arpl   cx,dx
  4018f0:	stos   BYTE PTR es:[edi],al
  4018f1:	je     0x401964
  4018f3:	inc    esp
  4018f4:	(bad)  
  4018f5:	ret    
  4018f6:	adc    BYTE PTR [ebp-0x10],al
  4018f9:	out    dx,al
  4018fa:	add    bh,BYTE PTR ds:0x2cfa3cd6
  401900:	jno    0x4018bc
  401902:	es jo  0x4018c8
  401905:	xchg   ebp,eax
  401906:	mov    ds:0xbda3487d,al
  40190b:	int3   
  40190c:	add    DWORD PTR [eax],esp
  40190e:	loopne 0x40193c
  401910:	cld    
  401911:	add    BYTE PTR [ecx-0x40],al
  401914:	dec    ebp
  401915:	add    al,BYTE PTR [edi+edx*1]
  401918:	icebp  
  401919:	xor    bl,BYTE PTR [eax+0xad367e7]
  40191f:	xchg   edx,eax
  401920:	aas    
  401921:	xor    al,0xf4
  401923:	loopne 0x401969
  401925:	inc    esi
  401926:	mov    esi,0x860ef40
  40192b:	aam    0x24
  40192d:	ret    
  40192e:	xor    dl,BYTE PTR [ecx-0x1e]
  401931:	rcr    BYTE PTR [ebx],0x42
  401934:	(bad)  
  401935:	push   0xc8d1524
  40193a:	in     ax,0x23
  40193d:	add    eax,0xb765ae1b
  401942:	cli    
  401943:	cmc    
  401944:	xchg   esp,eax
  401945:	leave  
  401946:	sahf   
  401947:	test   ch,ah
  401949:	clc    
  40194a:	shl    BYTE PTR [esi-0x1a5ae127],0x73
  401951:	ret    
  401952:	push   0xffffffb1
  401954:	lds    ebp,FWORD PTR [eax+0x75]
  401957:	lods   eax,DWORD PTR ds:[esi]
  401958:	inc    esp
  401959:	test   eax,0x92daecf7
  40195e:	mov    al,ds:0xec31ee16
  401963:	iret   
  401964:	dec    ebp
  401965:	nop
  401966:	call   0xa10915ed
  40196b:	mov    ah,0x86
  40196d:	or     eax,0xec61b44a
  401972:	pop    edi
  401973:	scas   al,BYTE PTR es:[edi]
  401974:	jno    0x40193d
  401976:	jbe    0x4019f5
  401978:	cmp    BYTE PTR [edi],0xcd
  40197b:	loop   0x40194d
  40197d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40197e:	dec    BYTE PTR [ebx-0x2752137e]
  401984:	dec    ebp
  401985:	pop    es
  401986:	or     edx,DWORD PTR [eax+0x6d]
  401989:	adc    eax,0x17558a67
  40198e:	mov    ebp,DWORD PTR [edi]
  401990:	cdq    
  401991:	jmp    0x99fd43e8
  401996:	lahf   
  401997:	dec    ebx
  401998:	mov    bl,0xf8
  40199a:	dec    edi
  40199b:	cmc    
  40199c:	hlt    
  40199d:	fdiv   st,st(6)
  40199f:	mov    esp,0x6e21e94e
  4019a4:	fsubr  QWORD PTR [esi+0x7f805043]
  4019aa:	jmp    FWORD PTR [si]
  4019ad:	outs   dx,DWORD PTR ds:[esi]
  4019ae:	jno    0x401a1f
  4019b0:	mov    ah,0x8c
  4019b2:	ror    DWORD PTR [ebx-0x72],0x19
  4019b6:	mov    ebx,DWORD PTR [ebx+0x3ef1923d]
  4019bc:	pop    esp
  4019bd:	rol    DWORD PTR [ebp-0x55],0x66
  4019c1:	das    
  4019c2:	out    0x5b,al
  4019c4:	outs   dx,BYTE PTR ds:[esi]
  4019c5:	inc    esp
  4019c6:	xchg   ebx,eax
  4019c7:	pushf  
  4019c8:	out    dx,eax
  4019c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019ca:	out    0xce,eax
  4019cc:	jp     0x4019c2
  4019ce:	mov    ds:0x9f694b1,eax
  4019d3:	inc    edi
  4019d4:	or     cl,dh
  4019d6:	add    DWORD PTR [edi+0x3d98e60b],ebx
  4019dc:	scas   al,BYTE PTR es:[edi]
  4019dd:	jo     0x4019bc
  4019df:	nop
  4019e0:	fcom   QWORD PTR [edi+eax*8-0x25]
  4019e4:	mov    edx,0x5288f2fc
  4019e9:	jle    0x401a56
  4019eb:	cmc    
  4019ec:	pop    ebp
  4019ed:	scas   al,BYTE PTR es:[edi]
  4019ee:	pop    ds
  4019ef:	jns    0x40197d
  4019f1:	xchg   edx,eax
  4019f2:	sub    eax,0xee95d4c1
  4019f7:	push   ebx
  4019f8:	or     bl,al
  4019fa:	mov    al,0x4
  4019fc:	fld    st(4)
  4019fe:	repnz xor eax,0x5d0cdcc5
  401a04:	sub    al,0x7f
  401a06:	push   cs
  401a07:	stc    
  401a08:	int    0xdc
  401a0a:	adc    BYTE PTR [esi-0x478eb7b1],bh
  401a10:	mov    dh,0x27
  401a12:	inc    esi
  401a13:	popa   
  401a14:	sar    BYTE PTR ss:[edi-0xc],1
  401a18:	mul    DWORD PTR ds:0x425373f1
  401a1e:	ins    BYTE PTR es:[edi],dx
  401a1f:	xor    al,0x91
  401a21:	test   al,0xa4
  401a23:	pop    ecx
  401a24:	sub    eax,DWORD PTR [ecx]
  401a26:	in     eax,0x95
  401a28:	into   
  401a29:	(bad)  
  401a2a:	icebp  
  401a2b:	ja     0x401a69
  401a2d:	loop   0x401a8e
  401a2f:	lods   al,BYTE PTR ds:[esi]
  401a30:	inc    ebp
  401a31:	call   0x191f:0x3c289cd
  401a38:	jns    0x401a2a
  401a3a:	(bad)  [edi]
  401a3c:	push   ecx
  401a3d:	sbb    eax,DWORD PTR [eax-0x1444f37b]
  401a43:	cmc    
  401a44:	data16 adc al,0x56
  401a47:	jmp    0x401aa8
  401a49:	mov    ebx,0xed7ea8d3
  401a4e:	sahf   
  401a4f:	mov    dh,BYTE PTR ss:[esi-0x36c8c518]
  401a56:	cwde   
  401a57:	inc    ecx
  401a58:	pop    ebx
  401a59:	lahf   
  401a5a:	shr    DWORD PTR [esi],1
  401a5c:	push   edx
  401a5d:	aaa    
  401a5e:	loopne 0x401a27
  401a60:	xchg   BYTE PTR [eax+0x6d25c07],ch
  401a66:	xor    al,0x64
  401a68:	push   edi
  401a69:	std    
  401a6a:	inc    edx
  401a6b:	mov    eax,ds:0x64bc3468
  401a70:	inc    ebx
  401a71:	sub    DWORD PTR [ebx-0x72fc4581],esi
  401a77:	mov    eax,0x4b9bfbf3
  401a7c:	pushf  
  401a7d:	ins    DWORD PTR es:[edi],dx
  401a7e:	pop    edi
  401a7f:	and    DWORD PTR [esi],ebx
  401a81:	jge    0x401a58
  401a83:	ficomp WORD PTR [esi+eax*4-0x1d]
  401a87:	js     0x401a31
  401a89:	out    dx,al
  401a8a:	pextrw edi,mm4,0xbf
  401a8e:	mov    al,BYTE PTR [eax+0x4c]
  401a91:	fimul  DWORD PTR [ebx-0x2d]
  401a94:	mov    eax,0xc460f9e0
  401a99:	mov    bl,0x73
  401a9b:	fisubr DWORD PTR [ebx-0x3b]
  401a9e:	jae    0x401b05
  401aa0:	and    BYTE PTR [edi+0x21],ah
  401aa3:	in     al,0x9b
  401aa5:	fsubr  QWORD PTR [edi]
  401aa7:	ins    DWORD PTR es:[edi],dx
  401aa8:	call   0x5e347c5c
  401aad:	iret   
  401aae:	pushf  
  401aaf:	retf   
  401ab0:	popf   
  401ab1:	test   BYTE PTR [ecx+0x60d3428f],dl
  401ab7:	fsub   DWORD PTR ds:0x1a776b47
  401abd:	and    al,BYTE PTR [esi]
  401abf:	adc    BYTE PTR [edx-0x70],dl
  401ac2:	sahf   
  401ac3:	jnp    0x401b44
  401ac5:	pop    ecx
  401ac6:	and    ecx,esi
  401ac8:	rcr    DWORD PTR [esi-0x648b72ea],0x1d
  401acf:	mov    WORD PTR [esi+0x72],fs
  401ad2:	jo     0x401aa2
  401ad4:	ins    BYTE PTR es:[edi],dx
  401ad5:	jge    0x401adf
  401ad7:	jno    0x401b19
  401ad9:	push   ebx
  401ada:	mov    eax,ds:0x2c148271
  401adf:	xor    bl,cl
  401ae1:	hlt    
  401ae2:	sub    ch,BYTE PTR [eax]
  401ae4:	dec    edx
  401ae5:	push   edx
  401ae6:	cmp    al,0xd1
  401ae8:	dec    ebx
  401ae9:	pop    edi
  401aea:	and    ah,bh
  401aec:	aaa    
  401aed:	adc    al,0xbf
  401aef:	ret    0x7b92
  401af2:	hlt    
  401af3:	dec    ecx
  401af4:	or     esp,0xbfd1e746
  401afa:	jnp    0x401b51
  401afc:	fadd   QWORD PTR [ebx+0x30]
  401aff:	dec    edx
  401b00:	imul   BYTE PTR [ebp+0x617e1e0f]
  401b06:	lods   al,BYTE PTR ds:[esi]
  401b07:	inc    edx
  401b08:	cmp    esp,DWORD PTR [ebx+0x15c5dd27]
  401b0e:	push   ebp
  401b0f:	xor    al,0xff
  401b11:	jmp    0x401b67
  401b13:	dec    ecx
  401b14:	xchg   BYTE PTR [ebx],bl
  401b16:	adc    ecx,esi
  401b18:	jnp    0x401b24
  401b1a:	cmp    ebp,DWORD PTR [ecx+esi*2+0x28]
  401b1e:	lahf   
  401b1f:	adc    DWORD PTR [esi],0x8d6fa94b
  401b25:	xchg   edx,eax
  401b26:	(bad)  
  401b27:	(bad)  
  401b28:	or     bl,al
  401b2a:	fistp  DWORD PTR [ecx-0x4f]
  401b2d:	daa    
  401b2e:	mov    dh,0xd7
  401b30:	ins    DWORD PTR es:[edi],dx
  401b31:	pop    ss
  401b32:	shld   DWORD PTR [eax],ebx,cl
  401b35:	xlat   BYTE PTR ds:[ebx]
  401b36:	pop    ecx
  401b37:	dec    edi
  401b38:	or     bl,dh
  401b3a:	push   ebp
  401b3b:	mov    ss,WORD PTR [ecx]
  401b3d:	stos   BYTE PTR es:[edi],al
  401b3e:	lea    edx,[esi]
  401b40:	sbb    ebx,DWORD PTR [ebx]
  401b42:	lods   eax,DWORD PTR ds:[esi]
  401b43:	mov    esi,0xad6a9380
  401b48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b49:	test   ebp,ebp
  401b4b:	das    
  401b4c:	xor    esp,edx
  401b4e:	es pop eax
  401b50:	ss adc eax,0xe1e9c367
  401b56:	ds hlt 
  401b58:	adc    bh,bl
  401b5a:	fsub   QWORD PTR [edx+0x52]
  401b5d:	mov    dl,0x8
  401b5f:	inc    edi
  401b60:	mov    esi,DWORD PTR [edx+0x78e845c2]
  401b66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b67:	popa   
  401b68:	cmc    
  401b69:	stos   BYTE PTR es:[edi],al
  401b6a:	fcmove st,st(0)
  401b6c:	rcl    DWORD PTR [ebp+0xfedf4ab],0xf0
  401b73:	pop    ebp
  401b74:	fisub  DWORD PTR [ecx]
  401b76:	inc    edx
  401b77:	out    0xb0,eax
  401b79:	mov    eax,ds:0x9d8418ed
  401b7e:	cs fucomi st,st(2)
  401b81:	cs mov eax,0x1e78be
  401b87:	xor    DWORD PTR [esi+0xa355cdb],esi
  401b8d:	or     ah,ah
  401b8f:	and    BYTE PTR [ecx],0xb8
  401b92:	lea    esp,[edx-0x5c]
  401b95:	xchg   ebp,eax
  401b96:	call   0xbc2582ac
  401b9b:	adc    bl,cl
  401b9d:	add    ah,BYTE PTR [ecx-0xd]
  401ba0:	sbb    eax,ecx
  401ba2:	sbb    ebx,DWORD PTR [esi+0x11]
  401ba5:	pop    edi
  401ba6:	daa    
  401ba7:	inc    esi
  401ba8:	adc    DWORD PTR [ecx-0x2eda76e5],esp
  401bae:	pop    ds
  401baf:	inc    edi
  401bb0:	jge    0x401b55
  401bb2:	call   0xf3cdb94e
  401bb7:	mov    bh,0x58
  401bb9:	pop    ss
  401bba:	xor    eax,0x5ef5a70d
  401bbf:	retf   0x62fc
  401bc2:	aas    
  401bc3:	ret    0xfd7d
  401bc6:	xor    DWORD PTR [edi-0x74],0xffffffbb
  401bca:	or     DWORD PTR [ebx-0xe],0x51
  401bce:	pop    DWORD PTR [edx+eiz*4+0x709d93c1]
  401bd5:	shl    ah,0x5
  401bd8:	(bad)
  401bdc:	in     eax,0x31
  401bde:	sti    
  401bdf:	and    DWORD PTR [edi-0x6f7ab16c],edi
  401be5:	mul    BYTE PTR ds:0x82f223c6
  401beb:	ins    DWORD PTR es:[edi],dx
  401bec:	stos   BYTE PTR es:[edi],al
  401bed:	pop    edi
  401bee:	les    ebp,FWORD PTR [edi]
  401bf0:	mov    ebp,DWORD PTR [ecx-0xbde5b58]
  401bf6:	xchg   esp,eax
  401bf7:	mov    edi,0x3e709704
  401bfc:	push   ebx
  401bfd:	push   DWORD PTR [ecx+0x5a707c88]
  401c03:	add    ebp,DWORD PTR [eax-0x34]
  401c06:	mov    dh,0x88
  401c08:	ds ror ch,0x6f
  401c0c:	xchg   ecx,eax
  401c0d:	mov    dh,cl
  401c0f:	shl    edi,cl
  401c11:	cmp    eax,0x37689240
  401c16:	cld    
  401c17:	push   esi
  401c18:	pop    es
  401c19:	mov    ebp,0xad7300f8
  401c1e:	push   ecx
  401c1f:	adc    al,BYTE PTR [ecx+0x6c]
  401c22:	mov    ah,0x87
  401c24:	(bad)  
  401c25:	aas    
  401c26:	push   ebx
  401c27:	inc    ebx
  401c28:	ret    0xf131
  401c2b:	nop
  401c2c:	mov    bl,0x12
  401c2e:	inc    ebx
  401c2f:	mov    dh,0xaa
  401c31:	out    dx,eax
  401c32:	dec    ebp
  401c33:	outs   dx,DWORD PTR ds:[esi]
  401c34:	idiv   BYTE PTR [esi+edi*8-0x25]
  401c38:	xchg   BYTE PTR [ecx],bl
  401c3a:	mov    eax,0xd81f8bc8
  401c3f:	mov    BYTE PTR [eax],0x4f
  401c42:	std    
  401c43:	mov    ecx,0x3efd008a
  401c48:	mov    WORD PTR [edi-0x42],ds
  401c4b:	repnz mov bh,0x9a
  401c4e:	call   0xfbffc125
  401c53:	rcr    esi,cl
  401c55:	das    
  401c56:	mov    ds:0x58856e0a,al
  401c5b:	or     eax,0x651ffa36
  401c60:	out    dx,eax
  401c61:	loop   0x401c99
  401c63:	mov    bh,0x12
  401c65:	push   cs
  401c66:	js     0x401bfd
  401c68:	jns    0x401cd6
  401c6a:	aas    
  401c6b:	fwait
  401c6c:	push   ss
  401c6d:	lahf   
  401c6e:	push   edi
  401c6f:	xchg   esp,eax
  401c70:	or     al,0xe4
  401c72:	imul   BYTE PTR fs:[ecx+0x1e]
  401c76:	inc    esi
  401c77:	cdq    
  401c78:	dec    eax
  401c79:	and    BYTE PTR [edi-0x34945894],al
  401c7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c80:	adc    DWORD PTR [edx-0x4faaebc2],ebp
  401c86:	sbb    esp,esp
  401c88:	inc    esi
  401c89:	jne    0x401c87
  401c8b:	rol    DWORD PTR ds:0x2301e667,cl
  401c91:	(bad)  
  401c92:	call   FWORD PTR ds:0xb7216b6d
  401c98:	je     0x401ce4
  401c9a:	xchg   ecx,eax
  401c9b:	in     al,0xe
  401c9d:	scas   eax,DWORD PTR es:[edi]
  401c9e:	int3   
  401c9f:	sub    esi,DWORD PTR [eax-0x4bd2248b]
  401ca5:	or     bl,BYTE PTR [ebp+0x268d066]
  401cab:	adc    BYTE PTR [esi+esi*8],0x69
  401caf:	jl     0x401cc4
  401cb1:	push   ebx
  401cb2:	into   
  401cb3:	ret    0x8e56
  401cb6:	jno    0x401ca1
  401cb8:	or     BYTE PTR [esi-0x5c],bl
  401cbb:	adc    al,0x64
  401cbd:	test   BYTE PTR [ebx-0x1b],dl
  401cc0:	mov    bl,0xda
  401cc2:	mov    ds:0x66e0535d,al
  401cc7:	pusha  
  401cc8:	in     al,dx
  401cc9:	mov    ds:0xc62510dc,al
  401cce:	inc    esp
  401ccf:	retf   0xacb8
  401cd2:	jb     0x401c5d
  401cd4:	jle    0x401ca1
  401cd6:	bound  esi,QWORD PTR [ecx]
  401cd8:	jmp    0x613:0xb28f12bb
  401cdf:	mov    ebp,0xc73f12fe
  401ce4:	mov    ecx,0xa2f8e24a
  401ce9:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  401ceb:	mov    edi,0x418e4d90
  401cf0:	int    0x4d
  401cf2:	jle    0x401c74
  401cf4:	pop    ebp
  401cf5:	jg     0x401cf7
  401cf7:	icebp  
  401cf8:	fdiv   DWORD PTR [eax]
  401cfa:	cli    
  401cfb:	pop    esi
  401cfc:	push   edx
  401cfd:	cmp    DWORD PTR [edx-0x2dd6cfe],esi
  401d03:	xor    BYTE PTR [eax],0xe6
  401d06:	push   0xfffffff0
  401d08:	icebp  
  401d09:	mov    dl,BYTE PTR [ebx]
  401d0b:	retf   0x8a72
  401d0e:	add    al,0x37
  401d10:	dec    edx
  401d11:	loope  0x401cab
  401d13:	mov    ah,0x3e
  401d15:	sub    DWORD PTR [esp+edx*2],edx
  401d18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d19:	xchg   ebx,eax
  401d1a:	out    0x87,al
  401d1c:	pop    ecx
  401d1d:	inc    esi
  401d1e:	mov    al,ds:0x762299f6
  401d23:	sub    eax,0xd06723fd
  401d28:	clc    
  401d29:	xchg   esp,eax
  401d2a:	mov    ch,0xe1
  401d2c:	add    al,BYTE PTR [edi-0x76]
  401d2f:	xchg   BYTE PTR [ebx+ebp*2+0x50],bh
  401d33:	sub    eax,0xe3b2c35a
  401d38:	sub    bh,ch
  401d3a:	or     bl,dh
  401d3c:	sbb    al,0x66
  401d3e:	(bad)  [edx+edi*8]
  401d41:	xor    DWORD PTR [eax+ecx*4-0x5f],esp
  401d45:	push   0xffffffda
  401d47:	iret   
  401d48:	mov    ecx,0xcbec9f0e
  401d4d:	(bad)  
  401d4e:	mov    cl,0x1a
  401d50:	ss pusha 
  401d52:	or     DWORD PTR [ecx+edi*8+0x3b],esp
  401d56:	push   esp
  401d57:	aam    0x12
  401d59:	jecxz  0x401d24
  401d5b:	inc    ecx
  401d5c:	mov    al,0x2b
  401d5e:	call   0xca3:0x97914700
  401d65:	add    BYTE PTR ds:[ebp+0x393a9166],ah
  401d6c:	mov    ds:0x6d19e9f6,eax
  401d71:	hlt    
  401d72:	jb     0x401db3
  401d74:	scas   eax,DWORD PTR es:[edi]
  401d75:	push   edi
  401d76:	(bad)  
  401d77:	ins    BYTE PTR es:[edi],dx
  401d78:	pop    ss
  401d79:	pop    ss
  401d7a:	test   eax,0xf5665c06
  401d7f:	ror    BYTE PTR [esi+0x4a],cl
  401d82:	test   BYTE PTR [esi-0x12],0x75
  401d86:	jb     0x401d97
  401d88:	jmp    0xc29c7218
  401d8d:	jge    0x401d9b
  401d8f:	js     0x401dc2
  401d91:	inc    eax
  401d92:	and    BYTE PTR [ecx+0x2d],bh
  401d95:	stos   DWORD PTR es:[edi],eax
  401d96:	mov    WORD PTR [edx+0x15],gs
  401d99:	dec    esp
  401d9a:	or     eax,0xd5f22b56
  401d9f:	push   esi
  401da0:	dec    ebx
  401da1:	jmp    0x8375a21c
  401da6:	add    cl,bl
  401da8:	pop    edx
  401da9:	add    BYTE PTR [esi],bl
  401dab:	pop    es
  401dac:	rcl    DWORD PTR [edi+0x18a34719],cl
  401db2:	ss adc al,0x88
  401db5:	push   esi
  401db6:	fnstcw WORD PTR [esi]
  401db8:	jne    0x401d95
  401dba:	xchg   BYTE PTR [eax+0x15],ah
  401dbd:	add    eax,ebx
  401dbf:	mov    edx,0xb2ef5e3b
  401dc4:	adc    al,0x27
  401dc7:	xlat   BYTE PTR ds:[ebx]
  401dc8:	arpl   bp,bx
  401dca:	(bad)  
  401dcb:	sar    BYTE PTR [eax-0x7d3435e2],cl
  401dd1:	mov    dh,0x7
  401dd3:	ficomp DWORD PTR [esi-0x6647164b]
  401dd9:	mov    bh,BYTE PTR [ecx]
  401ddb:	test   esi,edi
  401ddd:	lods   eax,DWORD PTR ds:[esi]
  401dde:	xchg   edx,eax
  401ddf:	push   ebx
  401de0:	stos   BYTE PTR es:[edi],al
  401de1:	push   esp
  401de2:	rol    cl,1
  401de4:	mov    ebp,0x3926f364
  401de9:	inc    ecx
  401dea:	lods   eax,DWORD PTR ds:[esi]
  401deb:	sub    eax,0x952b834f
  401df0:	outs   dx,DWORD PTR ds:[esi]
  401df1:	push   cs
  401df2:	inc    ebx
  401df3:	add    al,0x86
  401df5:	push   ds
  401df6:	mov    edx,es
  401df8:	xchg   BYTE PTR [ecx+0x8cd42fc],ah
  401dfe:	mov    ds,edi
  401e00:	jmp    0x401e16
  401e02:	nop
  401e03:	fistp  DWORD PTR [edx-0x3e495a0d]
  401e09:	pop    ebx
  401e0a:	dec    edi
  401e0b:	test   esp,esi
  401e0d:	cmp    bl,BYTE PTR [ebp-0x38]
  401e10:	in     al,dx
  401e11:	fnstenv [edi-0x75062f7f]
  401e17:	adc    esi,DWORD PTR [ecx-0x2]
  401e1a:	pop    edx
  401e1b:	pop    ds
  401e1c:	push   0xa6f4c93e
  401e21:	jle    0x401db9
  401e23:	cmp    DWORD PTR [eax+0x22],edi
  401e26:	or     dl,BYTE PTR [ebp+ebx*2+0x69]
  401e2a:	ficomp DWORD PTR gs:[ebp-0x6e]
  401e2e:	sub    DWORD PTR [esi+0x5e570e0b],esi
  401e34:	jo     0x401e60
  401e36:	push   ss
  401e37:	mov    ds:0xe5eba602,eax
  401e3c:	mov    BYTE PTR [eax-0x3626618a],dh
  401e42:	jnp    0x401e42
  401e44:	enter  0x986b,0xca
  401e48:	adc    BYTE PTR ds:0x5de9b888,ch
  401e4e:	mov    ds:0x89401031,eax
  401e53:	push   es
  401e54:	pop    ss
  401e55:	mov    esp,0xcd578f8a
  401e5a:	out    0xbd,al
  401e5c:	stos   BYTE PTR es:[edi],al
  401e5d:	sbb    DWORD PTR [esi],edx
  401e5f:	and    ah,dh
  401e61:	jg     0x401e38
  401e63:	(bad)  
  401e64:	addr16 sub al,0x95
  401e67:	outs   dx,BYTE PTR ds:[esi]
  401e68:	loopne 0x401e32
  401e6a:	push   es
  401e6b:	dec    ebp
  401e6c:	cmp    BYTE PTR [eax+ebx*8],bh
  401e6f:	dec    esi
  401e70:	lods   al,BYTE PTR ds:[esi]
  401e71:	add    eax,0xa3f6df34
  401e77:	aad    0xa
  401e79:	push   edx
  401e7a:	jbe    0x401e7f
  401e7c:	fucomp st(5)
  401e7e:	(bad)  
  401e80:	cli    
  401e81:	add    al,0x99
  401e83:	sbb    BYTE PTR [edi],ah
  401e85:	add    BYTE PTR [edx+0x2fca5270],ch
  401e8b:	inc    edx
  401e8c:	pop    ecx
  401e8d:	pop    ss
  401e8e:	aad    0x89
  401e90:	push   esp
  401e91:	into   
  401e92:	sub    esp,DWORD PTR [edi+0x35d5243d]
  401e98:	or     edx,DWORD PTR [ebp-0x55f8d468]
  401e9e:	pop    ecx
  401e9f:	in     al,0x25
  401ea1:	fcmovb st,st(1)
  401ea3:	and    al,0x6b
  401ea5:	ds retf 0xb802
  401ea9:	test   BYTE PTR [esi+0x365e2072],bl
  401eaf:	je     0x401ed5
  401eb1:	and    al,0x65
  401eb3:	mov    DWORD PTR [edi],edi
  401eb5:	div    dl
  401eb7:	mov    dh,0x3f
  401eb9:	mov    esp,0x833dd45d
  401ebe:	lods   eax,DWORD PTR ds:[esi]
  401ebf:	pop    esi
  401ec0:	mov    bh,0x1
  401ec2:	jmp    0x4993:0xdc986695
  401ec9:	std    
  401eca:	jg     0x401f41
  401ecc:	ins    BYTE PTR es:[edi],dx
  401ecd:	inc    edi
  401ece:	pop    edx
  401ecf:	test   DWORD PTR [edi-0x267363da],ecx
  401ed5:	add    ah,BYTE PTR [eax+0x39]
  401ed8:	xchg   esi,eax
  401ed9:	daa    
  401eda:	mov    esp,0xf5d06280
  401edf:	mov    ebx,0x32d6115e
  401ee4:	idiv   BYTE PTR [ebx]
  401ee6:	pusha  
  401ee7:	xor    esp,edx
  401ee9:	lods   eax,DWORD PTR ds:[esi]
  401eea:	lock cmp DWORD PTR [esi],esi
  401eed:	loop   0x401ebf
  401eef:	jmp    0x401f38
  401ef1:	(bad)  
  401ef2:	jnp    0x401e82
  401ef4:	sub    BYTE PTR [edi+0x24],bh
  401ef7:	xor    dl,BYTE PTR [ecx+0x500dca15]
  401efd:	pop    ecx
  401efe:	mov    esi,0xa6f1830e
  401f03:	push   ebx
  401f04:	icebp  
  401f05:	jmp    0x9a636b7e
  401f0a:	dec    esp
  401f0b:	dec    esp
  401f0c:	and    BYTE PTR [edi],0xd4
  401f0f:	scas   eax,DWORD PTR es:[edi]
  401f10:	fimul  DWORD PTR [edi+0x56ccb3f0]
  401f16:	outs   dx,DWORD PTR ds:[esi]
  401f17:	dec    ebx
  401f18:	fs push edx
  401f1a:	scas   al,BYTE PTR es:[edi]
  401f1b:	fadd   DWORD PTR [ebx*8+0x75751829]
  401f23:	rcr    DWORD PTR [edi+0x1f],cl
  401f26:	sbb    esp,DWORD PTR [ebp+0x39]
  401f29:	loope  0x401f65
  401f2b:	sahf   
  401f2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f2d:	pop    esp
  401f2e:	inc    esp
  401f2f:	mul    BYTE PTR [edx+0x55]
  401f32:	xchg   ecx,eax
  401f33:	daa    
  401f34:	xor    BYTE PTR [esi+edx*8+0x52e1f8b6],cl
  401f3b:	mov    ds:0x774e3e59,al
  401f40:	sar    eax,1
  401f42:	add    BYTE PTR [edx],cl
  401f44:	add    BYTE PTR [eax+0x2a72e27b],ch
  401f4a:	mov    ds:0xb471ac42,eax
  401f4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f50:	sbb    al,0xbf
  401f52:	jge    0x401ed7
  401f54:	pop    ecx
  401f55:	in     al,0x17
  401f57:	es iret 
  401f59:	jmp    0x783e14ae
  401f5e:	nop
  401f5f:	add    DWORD PTR [ebx+ecx*1-0x3],0xffffff91
  401f64:	inc    esi
  401f65:	mov    ebp,0x5d6be482
  401f6a:	gs mov edi,0x365adb41
  401f70:	push   esp
  401f71:	icebp  
  401f72:	fimul  WORD PTR [ebp+0x1b]
  401f75:	fstp   st(4)
  401f77:	pop    edi
  401f78:	mov    WORD PTR [ecx+0x6223867a],cs
  401f7e:	je     0x401ff1
  401f80:	push   ebp
  401f81:	mov    fs,WORD PTR [edx]
  401f83:	loopne 0x401f58
  401f85:	cmp    DWORD PTR [eax],0x8af801bf
  401f8b:	mov    bh,0xab
  401f8d:	pop    ss
  401f8e:	xchg   ebx,eax
  401f8f:	sub    esp,DWORD PTR [ebp-0x6b202ef]
  401f95:	stos   DWORD PTR es:[edi],eax
  401f96:	pushf  
  401f97:	clc    
  401f98:	fs sbb cl,bl
  401f9b:	je     0x401f76
  401f9d:	mov    esp,0x49433f4f
  401fa2:	mov    bl,0x4b
  401fa4:	and    ah,BYTE PTR [eax-0x39d191af]
  401faa:	mov    es,WORD PTR [ebp+0x464a20c8]
  401fb0:	(bad)  
  401fb1:	mov    dh,0xb0
  401fb3:	xchg   esi,eax
  401fb4:	inc    edi
  401fb5:	imul   eax,DWORD PTR [edi-0xf],0xa7748e63
  401fbc:	aad    0x5d
  401fbe:	sub    DWORD PTR [ecx-0x3b],eax
  401fc1:	pop    esi
  401fc2:	inc    ebx
  401fc3:	jp     0x401f7c
  401fc5:	hlt    
  401fc6:	shr    DWORD PTR [eax-0xfdb4c0c],0x35
  401fcd:	cwde   
  401fce:	cmp    eax,0x78750341
  401fd3:	xchg   edx,eax
  401fd4:	in     al,dx
  401fd5:	xor    BYTE PTR [edi],al
  401fd7:	dec    esi
  401fd8:	add    DWORD PTR [edx+0x4b3b8bb3],0x5f
  401fdf:	dec    edi
  401fe0:	jge    0x401f7b
  401fe2:	popw   es
  401fe4:	pop    esp
  401fe5:	xlat   BYTE PTR ds:[ebx]
  401fe6:	xor    esp,DWORD PTR [esi+0x7c]
  401fe9:	pop    eax
  401fea:	iret   
  401feb:	not    BYTE PTR [ebx+0x25d9de74]
  401ff1:	pop    es
  401ff2:	jae    0x401fae
  401ff4:	rcl    DWORD PTR [ebx-0x3c],cl
  401ff7:	mov    ch,0xf9
  401ff9:	xchg   ebx,eax
  401ffa:	daa    
  401ffb:	or     BYTE PTR [edx],0xcd
  401ffe:	mov    dh,0x14
  402000:	push   ds
  402001:	mov    dh,0xb1
  402003:	or     DWORD PTR [edi+eiz*8-0x58],esi
  402007:	int    0x99
  402009:	popa   
  40200a:	shl    BYTE PTR [ecx+0x5900b4e4],0x44
  402011:	test   al,0xb9
  402013:	inc    esp
  402014:	and    edx,DWORD PTR [edi+0x56]
  402017:	push   edi
  402018:	sub    ebp,DWORD PTR [esp+edi*1-0x78dd902d]
  40201f:	pop    edi
  402021:	in     eax,dx
  402022:	lahf   
  402023:	aam    0xfc
  402025:	int    0xf4
  402027:	popa   
  402028:	aaa    
  402029:	dec    ecx
  40202a:	inc    BYTE PTR [esi]
  40202c:	imul   eax,DWORD PTR [edx+0x31],0xcfc8640f
  402033:	in     al,dx
  402034:	test   al,0x87
  402036:	cdq    
  402037:	or     ebp,ecx
  402039:	or     al,BYTE PTR [ebx]
  40203b:	add    DWORD PTR [edi],edi
  40203d:	sub    al,BYTE PTR [edi+eiz*2]
  402040:	sbb    eax,0x976bd178
  402045:	mov    ds:0x3c7a1082,al
  40204a:	les    eax,FWORD PTR [edi-0x2290d946]
  402050:	stc    
  402051:	add    dl,BYTE PTR [ecx+0x57b53f93]
  402057:	xor    al,0x5e
  402059:	cld    
  40205a:	fild   QWORD PTR [eax-0x3d]
  40205d:	(bad)  
  40205e:	mov    ds:0x8761899a,al
  402063:	pop    ebx
  402064:	mov    esp,0x36b03547
  402069:	jl     0x401fec
  40206b:	mov    esi,ebp
  40206d:	dec    edi
  40206e:	adc    eax,0x7e2118b6
  402073:	fst    st(1)
  402075:	xchg   esp,eax
  402076:	xchg   esi,eax
  402077:	xchg   DWORD PTR [eax+0x4b6329a9],esp
  40207d:	in     al,0xd9
  40207f:	pop    ecx
  402080:	dec    eax
  402081:	and    DWORD PTR [ebp-0x3e],eax
  402084:	sub    eax,0xc126d36c
  402089:	sub    al,0xf9
  40208b:	adc    eax,0x5c4c8117
  402090:	cwde   
  402091:	call   0xcbd0b536
  402096:	push   ss
  402097:	inc    esi
  402098:	sbb    DWORD PTR [esi],0xfa335c07
  40209e:	jl     0x4020fc
  4020a0:	mov    eax,0xc5e3710a
  4020a5:	push   ebp
  4020a6:	cwde   
  4020a7:	pop    eax
  4020a8:	and    DWORD PTR [edx-0x70],edx
  4020ab:	lods   al,BYTE PTR ds:[esi]
  4020ac:	fidivr DWORD PTR [eax+ebx*4]
  4020af:	add    dl,al
  4020b1:	mov    ds:0xf7defe2,eax
  4020b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020b7:	jb     0x402138
  4020b9:	(bad)  
  4020ba:	hlt    
  4020bb:	jecxz  0x4020b5
  4020bd:	scas   eax,DWORD PTR es:[edi]
  4020be:	mov    al,BYTE PTR [ebx-0x2a]
  4020c1:	mov    cl,0x72
  4020c3:	mov    edx,0xee5a9874
  4020c8:	es test eax,0x97d7cb9b
  4020ce:	cs stos DWORD PTR es:[edi],eax
  4020d0:	or     eax,0xd689e5a4
  4020d5:	and    BYTE PTR [eax+0x6c],al
  4020d8:	stc    
  4020d9:	test   eax,0xd464a87b
  4020de:	or     eax,0xb66a933d
  4020e3:	mov    al,ds:0x38a2b0cd
  4020e8:	xchg   BYTE PTR [eax],dh
  4020ea:	enter  0x85b0,0xcd
  4020ee:	and    ecx,DWORD PTR [edx-0x68]
  4020f1:	xlat   BYTE PTR ds:[ebx]
  4020f2:	in     al,dx
  4020f3:	pusha  
  4020f4:	pop    es
  4020f5:	loope  0x4020de
  4020f7:	dec    esp
  4020f8:	push   0xe34b1560
  4020fd:	cmp    DWORD PTR [ebp-0x7310f0c2],0xb39a931d
  402107:	ror    DWORD PTR ds:0x79d37538,0x94
  40210e:	pushf  
  40210f:	(bad)  
  402110:	js     0x4020d1
  402112:	ror    ebx,0x3b
  402115:	sbb    DWORD PTR [edx],edi
  402117:	inc    ebx
  402118:	xor    bl,dl
  40211a:	sub    cl,ah
  40211c:	push   ebx
  40211d:	fdivr  QWORD PTR [ecx-0x6e180fbe]
  402123:	pavgw  mm6,QWORD PTR [ebx]
  402126:	int3   
  402127:	pushf  
  402128:	push   esi
  402129:	and    eax,DWORD PTR [edi]
  40212b:	and    DWORD PTR [ebp+0x73],esp
  40212e:	inc    esi
  40212f:	test   DWORD PTR ds:0x1fd7b03b,ebx
  402135:	(bad)  
  402136:	ror    DWORD PTR [esi-0x60],cl
  402139:	mov    ebx,0x47a53bfb
  40213e:	add    dl,BYTE PTR [edx]
  402140:	in     eax,0xd2
  402142:	jmp    0x3c1d36f1
  402147:	mov    eax,ds:0xd2d7d5df
  40214c:	mov    eax,ds:0x9de20971
  402151:	pop    eax
  402152:	bound  ebp,QWORD PTR [ebx]
  402154:	and    eax,0xb050f33c
  402159:	aas    
  40215a:	mov    al,ds:0x28f0bdfe
  40215f:	out    dx,al
  402160:	daa    
  402161:	dec    ecx
  402162:	je     0x4021c4
  402164:	inc    ebp
  402165:	push   ebp
  402166:	jecxz  0x402120
  402168:	lods   al,BYTE PTR ds:[esi]
  402169:	pop    ss
  40216a:	cmovno ebp,DWORD PTR ds:0x531af4f9
  402171:	loopne 0x402148
  402173:	push   edi
  402174:	pop    eax
  402175:	mov    ds:0xdeb9a91e,al
  40217a:	push   ss
  40217b:	adc    bh,al
  40217d:	lods   eax,DWORD PTR ds:[esi]
  40217e:	leave  
  40217f:	inc    esp
  402180:	push   edx
  402181:	es dec edx
  402183:	or     eax,0xb2db5236
  402188:	ins    DWORD PTR es:[edi],dx
  402189:	jg     0x402189
  40218b:	out    dx,al
  40218c:	pop    ds
  40218d:	sahf   
  40218e:	arpl   di,bp
  402190:	daa    
  402191:	(bad)  
  402192:	sub    edi,ecx
  402194:	sub    dh,dl
  402196:	mov    eax,ds:0xcbbd3f11
  40219b:	add    dl,BYTE PTR [eax]
  40219d:	mov    gs,esi
  40219f:	pop    edx
  4021a0:	mov    ecx,0x398c6d7
  4021a5:	xor    DWORD PTR [esi-0x4f],0x6d
  4021a9:	pushf  
  4021aa:	push   ebx
  4021ab:	inc    esp
  4021ac:	or     DWORD PTR [eax+0x39b26275],0xfffffff1
  4021b3:	popa   
  4021b4:	ret    0x7e35
  4021b7:	sub    dh,BYTE PTR [edx+0x27e52f18]
  4021bd:	sbb    eax,0x3ee37ebd
  4021c2:	aaa    
  4021c3:	and    al,0xb6
  4021c5:	sub    edi,DWORD PTR [ebx+0x5ea20dc7]
  4021cb:	outs   dx,BYTE PTR ds:[esi]
  4021cc:	je     0x402225
  4021ce:	test   al,0x2
  4021d0:	sbb    BYTE PTR [edx-0x41],bh
  4021d3:	fisttp WORD PTR [esi]
  4021d5:	mov    eax,0xc2775825
  4021da:	rcl    BYTE PTR [ebx],0xd7
  4021dd:	ja     0x40216c
  4021df:	(bad)  
  4021e0:	int    0xb2
  4021e2:	push   0xf14ccb81
  4021e7:	jo     0x402196
  4021e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021ea:	aaa    
  4021eb:	dec    BYTE PTR [edx]
  4021ed:	push   ecx
  4021ee:	(bad)
  4021f1:	cvtdq2ps xmm3,XMMWORD PTR [edx-0x5d]
  4021f5:	lock dec ebp
  4021f7:	mov    bl,0x36
  4021f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021fa:	jmp    0x1888:0x2b9e5a5d
  402201:	fdiv   QWORD PTR [ebx+esi*2+0x59f9496a]
  402208:	sar    DWORD PTR [edx],1
  40220a:	mov    BYTE PTR [esi-0x6de5b95d],ch
  402210:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402211:	outs   dx,DWORD PTR ds:[esi]
  402212:	jnp    0x40219e
  402214:	outs   dx,BYTE PTR ds:[esi]
  402215:	and    eax,0x40deafc8
  40221a:	in     eax,0x9e
  40221c:	sub    BYTE PTR [ebx],dh
  40221e:	mov    BYTE PTR [ebp-0x41],bl
  402221:	sub    eax,0xb25692a8
  402226:	pop    ebx
  402227:	xchg   ecx,eax
  402228:	jo     0x402279
  40222a:	add    bh,BYTE PTR [esi]
  40222c:	and    BYTE PTR [esi],bl
  40222e:	pop    edi
  40222f:	mov    ds:0xcb50bda3,eax
  402234:	xor    bh,BYTE PTR [edi]
  402236:	inc    ecx
  402237:	mov    ebp,0x230b3df1
  40223c:	jp     0x40224a
  40223e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40223f:	or     eax,0x3c57fefc
  402244:	cld    
  402245:	push   edx
  402246:	pop    ebp
  402247:	xchg   esp,eax
  402248:	sub    BYTE PTR ds:0x85b045cd,bh
  40224e:	jae    0x402212
  402250:	push   ebp
  402251:	push   ecx
  402252:	repnz or BYTE PTR [edx+0x6c],ah
  402256:	inc    ecx
  402257:	out    0x72,eax
  402259:	cmp    cl,BYTE PTR [ecx+eax*4+0x2c8d6eee]
  402260:	fcmovbe st,st(0)
  402263:	adc    al,0x96
  402265:	je     0x40222a
  402267:	sub    al,0x4c
  402269:	jbe    0x402296
  40226b:	xor    al,0x20
  40226d:	sahf   
  40226e:	test   al,0x88
  402270:	out    dx,al
  402271:	jmp    0x402275
  402273:	sub    BYTE PTR [esp+edi*2-0x21],cl
  402277:	push   0x993ac007
  40227c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40227d:	add    dh,0x84
  402280:	cmp    BYTE PTR [ebp+0x75],dh
  402283:	pop    esp
  402284:	fist   WORD PTR [eax+0x61]
  402287:	sti    
  402288:	push   ds
  402289:	fdivr  QWORD PTR [ebx-0x3]
  40228c:	cwde   
  40228d:	mov    edx,0xb4fa9158
  402292:	mov    es,eax
  402294:	ins    BYTE PTR es:[edi],dx
  402295:	push   0x73
  402297:	js     0x4022c2
  402299:	mov    dh,0x4e
  40229b:	fld    TBYTE PTR [edi+0x48]
  40229e:	pop    edi
  40229f:	inc    edi
  4022a0:	push   esp
  4022a1:	pushf  
  4022a2:	les    esi,FWORD PTR [eax-0x7be7dbcc]
  4022a8:	or     eax,0x8e6dac67
  4022ad:	adc    DWORD PTR [esi-0x6f1b027f],0x2f
  4022b4:	xor    eax,0xa87797fa
  4022b9:	sar    BYTE PTR [eax],0xe1
  4022bc:	pop    edx
  4022bd:	hlt    
  4022be:	test   al,0x78
  4022c0:	xlat   BYTE PTR ds:[ebx]
  4022c1:	xchg   esi,eax
  4022c2:	nop
  4022c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022c4:	adc    al,0xc0
  4022c6:	xor    DWORD PTR [ecx-0x2640a954],0xffffffdf
  4022cd:	sbb    bl,bh
  4022cf:	push   0xffffffe5
  4022d1:	ret    
  4022d2:	stc    
  4022d3:	mov    edi,0x3362257f
  4022d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022d9:	jns    0x402343
  4022db:	adc    BYTE PTR [edx+eiz*1+0x15944e8f],ch
  4022e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022e3:	adc    DWORD PTR [eax+0x2641e43e],eax
  4022e9:	sti    
  4022ea:	sbb    al,0xf5
  4022ec:	jns    0x4022ec
  4022ee:	(bad)  [edx+0x58]
  4022f1:	cs xchg bh,dl
  4022f4:	or     dl,dl
  4022f6:	fdivrp st(2),st
  4022f8:	mov    dh,0x1a
  4022fa:	jne    0x4022c8
  4022fc:	push   edi
  4022fd:	xchg   edi,eax
  4022fe:	jne    0x402364
  402300:	mov    eax,0x3f99fc9f
  402305:	pop    edi
  402306:	mov    edi,0x2bb9b6d3
  40230b:	xor    ah,ch
  40230d:	mov    al,ds:0xd8bcea82
  402312:	out    dx,al
  402313:	adc    ebp,DWORD PTR [ebx-0x45]
  402316:	xor    al,0xdc
  402318:	nop
  402319:	mov    ch,bh
  40231b:	sti    
  40231c:	sti    
  40231d:	xlat   BYTE PTR ds:[ebx]
  40231e:	mov    ds:0xc91bbf12,eax
  402323:	(bad)
  402326:	mov    WORD PTR [ebx+edx*8+0x78],gs
  40232a:	(bad)
  40232d:	add    bl,BYTE PTR [ebx]
  40232f:	int    0x54
  402331:	inc    edi
  402332:	adc    BYTE PTR [ebp+0x60],0x53
  402336:	or     WORD PTR [edi],cx
  402339:	xor    ebx,DWORD PTR [ebp+0x48]
  40233c:	push   edx
  40233d:	push   ecx
  40233e:	pop    eax
  40233f:	popa   
  402340:	sbb    esp,DWORD PTR [eax]
  402342:	loop   0x402396
  402344:	cmp    dh,BYTE PTR [edx+edx*2+0x5a758403]
  40234b:	push   ss
  40234c:	cmp    eax,0xec32a93
  402351:	or     al,0xaf
  402353:	lock inc eax
  402355:	adc    al,0x4f
  402357:	and    DWORD PTR [ebp-0x6d6fdf49],0x34
  40235e:	xchg   ebx,eax
  40235f:	scas   eax,DWORD PTR es:[edi]
  402360:	cmp    DWORD PTR [ecx-0x3],edi
  402363:	sbb    DWORD PTR [edx-0x40eee780],ebp
  402369:	(bad)  
  40236a:	jge    0x402332
  40236c:	mov    edi,0x2cab5df4
  402371:	(bad)  
  402372:	dec    ebp
  402373:	add    al,0xcc
  402375:	xchg   BYTE PTR [edi],dh
  402377:	sbb    ecx,DWORD PTR [esi+0x47]
  40237a:	jmp    ebp
  40237c:	enter  0xb03e,0xe4
  402380:	xchg   ebx,eax
  402381:	sub    eax,eax
  402383:	out    0x7e,eax
  402385:	lods   al,BYTE PTR ds:[esi]
  402386:	loop   0x402311
  402388:	pushf  
  402389:	inc    eax
  40238a:	xor    BYTE PTR [edi],0xb7
  40238d:	iret   
  40238e:	and    esp,ecx
  402390:	fistp  DWORD PTR [ecx-0x7a]
  402393:	in     al,dx
  402394:	mov    ebp,esp
  402396:	mov    eax,ds:0xef8c1281
  40239b:	dec    ebp
  40239c:	lods   eax,DWORD PTR ds:[esi]
  40239d:	stos   DWORD PTR es:[edi],eax
  40239e:	fiadd  DWORD PTR [edx+0x207a1cac]
  4023a4:	mov    dl,0x21
  4023a6:	xchg   edi,eax
  4023a7:	pop    ss
  4023a8:	lss    edi,FWORD PTR [ebp+edi*4-0x7dd564fb]
  4023b0:	or     ebx,edx
  4023b2:	sbb    DWORD PTR [edi],eax
  4023b4:	clc    
  4023b5:	dec    DWORD PTR [eax+0x74]
  4023b8:	lea    edi,[ecx+0x1447321f]
  4023be:	ins    DWORD PTR es:[edi],dx
  4023bf:	clc    
  4023c0:	add    BYTE PTR [edx+0x43],al
  4023c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023c4:	ins    DWORD PTR es:[edi],dx
  4023c5:	cli    
  4023c6:	push   ebx
  4023c7:	mov    al,ds:0x3aa2614b
  4023cc:	adc    BYTE PTR [ebp+0x7af58869],al
  4023d2:	mov    BYTE PTR [edi-0x5dfc9ab3],cl
  4023d8:	out    0x4a,eax
  4023da:	add    eax,0x5de667d8
  4023df:	mov    ds:0x20f9ab08,eax
  4023e4:	or     BYTE PTR [esp+eiz*8+0x70269b67],0xfd
  4023ec:	mov    BYTE PTR [ecx-0x68],0xe6
  4023f0:	pop    esi
  4023f1:	mov    WORD PTR [edi-0x2],?
  4023f4:	es ja  0x4023cf
  4023f7:	jno    0x40241e
  4023f9:	retf   0x4915
  4023fc:	xor    edi,ebx
  4023fe:	add    BYTE PTR [ecx],ah
  402400:	jb     0x402415
  402402:	adc    ah,cl
  402404:	sub    dh,BYTE PTR [edx-0x6c9de421]
  40240a:	or     DWORD PTR [esi+0x1d],ebx
  40240d:	mov    al,0x47
  40240f:	push   esp
  402410:	dec    ebp
  402411:	pop    ecx
  402412:	dec    eax
  402413:	ror    DWORD PTR [ecx+0x4d],0x16
  402417:	sub    ebx,DWORD PTR [edx]
  402419:	stc    
  40241a:	test   BYTE PTR [esi-0x33d09307],0x48
  402421:	enter  0x4e96,0xdd
  402425:	push   ebx
  402426:	sub    eax,0x43fb40bf
  40242b:	sub    DWORD PTR [esi+ecx*1-0x3e1b140a],edx
  402432:	fwait
  402433:	sub    edi,DWORD PTR [esi-0x17]
  402436:	cmp    eax,DWORD PTR [edi]
  402438:	jle    0x402479
  40243a:	ds mov esp,esp
  40243d:	inc    eax
  40243e:	mov    dh,0xef
  402440:	xor    edx,eax
  402442:	mov    ebx,0x6701b407
  402447:	xor    DWORD PTR [edx-0x68],edi
  40244a:	and    BYTE PTR [edi-0x61cd3aa0],al
  402450:	push   edi
  402451:	data16 cmp bl,BYTE PTR [edi+esi*2]
  402455:	jb     0x40242d
  402457:	stos   BYTE PTR es:[edi],al
  402458:	iret   
  402459:	mov    dh,0x2d
  40245b:	(bad)  
  40245d:	pop    esp
  40245e:	rol    DWORD PTR ds:[eax],1
  402461:	jnp    0x402415
  402463:	and    DWORD PTR [esi-0x3],esi
  402466:	test   DWORD PTR [edi+0x1d],edi
  402469:	jbe    0x402499
  40246b:	dec    esp
  40246c:	cli    
  40246d:	(bad)  
  40246e:	into   
  40246f:	popa   
  402470:	mov    bh,0xbd
  402472:	mov    eax,0x29912d4d
  402477:	xchg   edi,eax
  402478:	jl     0x402416
  40247a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40247b:	mov    esi,esp
  40247d:	push   0xf88723ad
  402482:	jo     0x402479
  402484:	aad    0x9d
  402486:	div    DWORD PTR [esi-0x4476f6ce]
  40248c:	shl    DWORD PTR [edx-0x1bbc8e32],0x7c
  402493:	gs (bad) 
  402496:	jmp    0x5fb1:0x6a7dce4b
  40249d:	xchg   BYTE PTR [edi+0x6b36faa0],bl
  4024a3:	dec    eax
  4024a4:	(bad)  
  4024a5:	xchg   ecx,eax
  4024a6:	inc    ecx
  4024a7:	cmp    eax,0x8387b141
  4024ac:	mov    ah,0xe1
  4024ae:	cdq    
  4024af:	clc    
  4024b0:	dec    ebp
  4024b1:	dec    eax
  4024b2:	mov    esp,0xfec803e2
  4024b7:	xchg   esp,eax
  4024b8:	jnp    0x402482
  4024ba:	mov    WORD PTR [eax],ss
  4024bc:	enter  0xcc8f,0x56
  4024c0:	cmp    al,0xe2
  4024c2:	mov    es:0x38ee0888,eax
  4024c8:	add    DWORD PTR [eax],edx
  4024ca:	xchg   ebp,eax
  4024cb:	and    DWORD PTR [edx],ebx
  4024cd:	hlt    
  4024ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024cf:	mov    al,ds:0xfbd5a6fc
  4024d4:	dec    eax
  4024d5:	call   0x4895:0x97c6a947
  4024dc:	mov    dh,0xe3
  4024de:	sbb    dh,BYTE PTR [eax]
  4024e0:	xchg   ebx,eax
  4024e1:	js     0x402470
  4024e3:	mov    al,0x21
  4024e5:	fisttp QWORD PTR [edi]
  4024e7:	(bad)  
  4024e8:	push   ss
  4024e9:	clc    
  4024ea:	icebp  
  4024eb:	pop    es
  4024ec:	mov    edx,0x25735af1
  4024f1:	fnsave [eax+ebx*2]
  4024f4:	les    ecx,FWORD PTR [ecx-0x57]
  4024f7:	add    edx,esi
  4024f9:	pop    DWORD PTR [edi]
  4024fb:	std    
  4024fc:	dec    ecx
  4024fd:	ins    BYTE PTR es:[edi],dx
  4024fe:	mov    eax,ds:0x692c396a
  402503:	je     0x40249d
  402505:	pusha  
  402506:	mov    es,WORD PTR [ebx]
  402508:	imul   esi,DWORD PTR [edi-0x70],0x1ceb99d5
  40250f:	call   FWORD PTR [esi]
  402511:	push   ecx
  402512:	mov    dl,0xae
  402514:	das    
  402515:	jecxz  0x402520
  402517:	jecxz  0x4024ed
  402519:	xorps  xmm7,XMMWORD PTR [edx-0x53139233]
  402520:	scas   al,BYTE PTR es:[edi]
  402521:	sti    
  402522:	push   es
  402523:	push   es
  402524:	mov    dl,0xb8
  402526:	adc    ch,ch
  402528:	mov    edx,0x6cc4f1f4
  40252d:	inc    esp
  40252e:	jb     0x402513
  402530:	scas   al,BYTE PTR es:[edi]
  402531:	sbb    al,BYTE PTR [edx]
  402533:	xchg   BYTE PTR [ecx],bl
  402535:	loop   0x402585
  402537:	dec    esi
  402538:	and    esp,esi
  40253a:	int    0x25
  40253c:	repnz mov ds:0x1d9f0c2a,eax
  402542:	les    ecx,FWORD PTR [edi+edx*2-0x6]
  402546:	or     al,0x5c
  402548:	push   ecx
  402549:	mov    dh,BYTE PTR [edx+ebx*4]
  40254c:	enter  0xc58c,0xf6
  402550:	dec    esi
  402551:	mov    bh,0x8a
  402553:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402554:	push   ebp
  402555:	in     al,0x2d
  402557:	adc    BYTE PTR [edx],bh
  402559:	adc    bh,cl
  40255b:	frstor [edx-0x18de80b2]
  402561:	adc    BYTE PTR [edx],al
  402563:	jle    0x402564
  402565:	and    DWORD PTR [ecx-0x18],0x43
  402569:	sbb    eax,edi
  40256b:	mov    esi,0xeaf4ca81
  402570:	or     DWORD PTR [ebp+0x5b],edx
  402573:	test   BYTE PTR [eax],cl
  402575:	sub    ecx,eax
  402577:	jge    0x4025ec
  402579:	int    0xa6
  40257b:	cmp    BYTE PTR [esi+0x33732b2f],dl
  402581:	push   ds
  402582:	rcr    DWORD PTR [edi+0xa8a6eab],1
  402588:	rcr    DWORD PTR [edx+0x4],0xeb
  40258c:	add    al,bl
  40258e:	or     eax,0xa8e54aca
  402593:	es xor al,0xe5
  402596:	fidivr DWORD PTR [edx-0x2d8839d4]
  40259c:	sar    DWORD PTR [ebx+0x60],cl
  40259f:	idiv   DWORD PTR [ecx-0x4ffb9d1b]
  4025a5:	in     eax,0xd4
  4025a7:	cmp    al,0x71
  4025a9:	xchg   ebp,eax
  4025aa:	imul   edi,ecx,0x21
  4025ad:	out    0xc1,al
  4025af:	cmp    ebx,ebx
  4025b1:	fst    DWORD PTR [ecx-0x2bb64024]
  4025b7:	mov    eax,0xa60bbd1
  4025bc:	mov    WORD PTR [eax+0x17],ss
  4025bf:	and    ecx,DWORD PTR [ebx-0x7a]
  4025c2:	popa   
  4025c3:	into   
  4025c4:	pusha  
  4025c5:	and    BYTE PTR [edx-0x6c],dh
  4025c8:	push   ds
  4025c9:	push   esp
  4025ca:	mov    cs:0x5edbff5d,al
  4025d0:	dec    ebx
  4025d1:	add    DWORD PTR [edx],0x39
  4025d4:	(bad)  
  4025d5:	scas   al,BYTE PTR es:[edi]
  4025d6:	pop    edx
  4025d7:	xor    eax,0xe765540e
  4025dc:	sbb    eax,0xc88a186c
  4025e1:	out    0x5a,eax
  4025e3:	and    cl,BYTE PTR [edi-0x3c]
  4025e6:	cmp    al,0x56
  4025e8:	test   DWORD PTR [edx],edx
  4025ea:	dec    ebp
  4025eb:	sub    BYTE PTR [eax-0x550d585a],al
  4025f1:	lods   eax,DWORD PTR ds:[esi]
  4025f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025f3:	push   edx
  4025f4:	dec    ebx
  4025f5:	retf   
  4025f6:	das    
  4025f7:	dec    eax
  4025f8:	sub    edi,DWORD PTR [ebx-0x22]
  4025fb:	rol    DWORD PTR [esi-0x6716c509],cl
  402601:	or     cl,ch
  402603:	xchg   edx,eax
  402604:	sub    DWORD PTR [ecx+0x5d245a73],0x32067353
  40260e:	inc    ebx
  40260f:	aas    
  402610:	mov    WORD PTR [esi+0x734ec479],?
  402616:	add    eax,0xf29f5d13
  40261b:	push   esi
  40261c:	daa    
  40261d:	frstor [ebp-0x7]
  402620:	pop    edx
  402621:	scas   eax,DWORD PTR es:[edi]
  402622:	icebp  
  402623:	jae    0x402601
  402625:	cs push edx
  402627:	js     0x40267c
  402629:	add    bl,BYTE PTR [ecx]
  40262b:	stc    
  40262c:	dec    esi
  40262d:	lahf   
  40262e:	add    al,BYTE PTR [ebx]
  402630:	jbe    0x4025e7
  402632:	push   esp
  402633:	(bad)
  402636:	mov    al,0x5e
  402638:	xchg   edi,eax
  402639:	dec    edi
  40263a:	jne    0x4025bd
  40263c:	fstp   QWORD PTR [ecx+0x5eca9c25]
  402642:	add    DWORD PTR [ecx],ebx
  402644:	gs gs mov ecx,0x90321989
  40264b:	or     al,0x16
  40264d:	popa   
  40264e:	in     eax,0xa
  402650:	(bad)  
  402651:	adc    al,BYTE PTR ds:0x327cca2e
  402657:	adc    BYTE PTR [edi+0x491f3bf5],0xf0
  40265e:	add    eax,0x46e2bcbe
  402663:	rcl    ebp,1
  402665:	inc    esi
  402666:	aam    0x6a
  402668:	popa   
  402669:	stc    
  40266a:	sbb    esp,esi
  40266c:	shufps xmm3,XMMWORD PTR [esi],0x1e
  402670:	and    DWORD PTR [ebx+0x9],ebp
  402673:	clc    
  402674:	cdq    
  402675:	dec    esi
  402676:	fwait
  402677:	mov    ds:0x91c67b68,eax
  40267c:	mov    ds:0x8136ab68,al
  402681:	dec    edx
  402682:	xor    BYTE PTR [ebp+0x59],bl
  402685:	dec    ebx
  402686:	lods   eax,DWORD PTR ds:[esi]
  402687:	xor    DWORD PTR [esi],esp
  402689:	push   ebx
  40268a:	cmp    BYTE PTR [edx+0x18],dl
  40268d:	and    edx,DWORD PTR [esi-0x4cf3f8c7]
  402693:	jnp    0x40270e
  402695:	sub    bl,cl
  402697:	mov    db6,ebp
  40269a:	mov    BYTE PTR [eax+eax*2],bh
  40269d:	xchg   ebx,eax
  40269e:	mov    eax,0x6d57235
  4026a3:	xor    al,0xef
  4026a5:	sbb    ch,cl
  4026a7:	add    esi,DWORD PTR [ebx-0x794bd866]
  4026ad:	jp     0x402693
  4026af:	push   ebp
  4026b0:	ins    BYTE PTR es:[edi],dx
  4026b1:	out    0x74,eax
  4026b3:	add    BYTE PTR ss:[ecx+ecx*4],ah
  4026b7:	jge    0x4026cb
  4026b9:	dec    edx
  4026ba:	cld    
  4026bb:	fmul   st(0),st
  4026bd:	xchg   edx,eax
  4026be:	in     al,dx
  4026bf:	inc    ebp
  4026c0:	jno    0x4026af
  4026c2:	adc    al,0xcf
  4026c4:	inc    eax
  4026c5:	sub    DWORD PTR [esi-0xd859e78],0x3
  4026cc:	ss dec esi
  4026ce:	je     0x4026df
  4026d0:	and    DWORD PTR [edi+eiz*4+0x5ab1e026],edi
  4026d7:	psubsb mm4,mm4
  4026da:	sub    eax,DWORD PTR [ecx]
  4026dc:	ret    0x1e03
  4026df:	stos   DWORD PTR es:[edi],eax
  4026e0:	stos   DWORD PTR es:[edi],eax
  4026e1:	pop    ebp
  4026e2:	cmp    DWORD PTR [ecx],ebp
  4026e4:	push   0x74425f57
  4026e9:	cmp    DWORD PTR [esp+eiz*2-0x61a5c29b],eax
  4026f0:	jae    0x402732
  4026f2:	and    BYTE PTR [ebp-0x41626da3],bh
  4026f8:	fwait
  4026f9:	lods   al,BYTE PTR ds:[esi]
  4026fa:	xchg   ecx,eax
  4026fb:	mov    bl,0xb8
  4026fd:	lds    ebp,FWORD PTR [ebp+0x2f]
  402700:	ret    
  402701:	inc    ebp
  402702:	jge    0x402697
  402704:	sub    DWORD PTR [edi+edi*1+0x11acdd8a],edi
  40270b:	iret   
  40270c:	int    0xb1
  40270e:	mov    ds:0xd9a7b89,al
  402713:	add    BYTE PTR [edi+0x641ea6bf],ah
  402719:	push   ebx
  40271a:	xchg   DWORD PTR [edi-0x69368d4e],ebp
  402720:	mov    bl,0x19
  402722:	xchg   esi,eax
  402723:	rcl    dh,1
  402725:	out    dx,eax
  402726:	retf   
  402727:	mov    WORD PTR [eax],ss
  402729:	mov    ch,0x18
  40272b:	(bad)  
  40272c:	adc    bl,BYTE PTR [ebx]
  40272e:	cli    
  40272f:	ds push 0x27ee36f3
  402735:	in     al,dx
  402736:	loopne 0x40273a
  402738:	sub    ebp,edx
  40273a:	sbb    al,0x40
  40273c:	les    eax,FWORD PTR [ebp-0x4d]
  40273f:	mov    ah,0x35
  402741:	push   edx
  402742:	add    eax,DWORD PTR [eax]
  402744:	xor    cl,dh
  402746:	mov    BYTE PTR [edx-0x45],bh
  402749:	call   0x5b70:0x8a7d9aee
  402750:	jecxz  0x4026e2
  402752:	ror    BYTE PTR [ecx-0x61],0x61
  402756:	gs fadd st(0),st
  402759:	loopne 0x40276a
  40275b:	inc    esp
  40275c:	imul   ecx,DWORD PTR [ebp-0x58307ab1],0xeac56d98
  402766:	out    dx,eax
  402767:	sbb    dh,BYTE PTR [eax+esi*1]
  40276a:	or     esp,edx
  40276c:	mov    DWORD PTR ds:0xdf51ef3e,ebx
  402772:	dec    eax
  402773:	mov    edx,0x1d09da8
  402778:	ror    BYTE PTR [ebp-0x4a],1
  40277b:	fnsave [ecx+0x646a6dcb]
  402781:	shl    BYTE PTR [edi-0x38],1
  402784:	pop    edi
  402785:	aam    0xb6
  402787:	sbb    al,0xdd
  402789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40278a:	add    eax,0x923805b6
  40278f:	pushf  
  402790:	pop    ds
  402791:	or     dh,BYTE PTR [ebx]
  402793:	div    DWORD PTR [edi+ebx*4+0xba2f38f]
  40279a:	bound  ecx,QWORD PTR [esi-0x4f]
  40279d:	inc    ebx
  40279e:	and    ch,bl
  4027a0:	int3   
  4027a1:	push   esp
  4027a2:	jge    0x402754
  4027a4:	xchg   ebx,eax
  4027a5:	imul   BYTE PTR [eax]
  4027a7:	nop
  4027a8:	ins    BYTE PTR es:[edi],dx
  4027a9:	sbb    edi,DWORD PTR [ebp+0x50]
  4027ac:	call   0xc135:0xd5c0c3c7
  4027b3:	inc    esi
  4027b4:	in     al,dx
  4027b5:	lea    edx,[edx-0x4b]
  4027b8:	mov    DWORD PTR [ecx-0x417cfb63],ecx
  4027be:	popf   
  4027bf:	jg     0x40282e
  4027c1:	lahf   
  4027c2:	sti    
  4027c3:	shr    dl,cl
  4027c5:	push   esi
  4027c6:	test   ecx,edi
  4027c8:	sti    
  4027c9:	adc    edx,DWORD PTR [ecx+0x74]
  4027cc:	pop    edi
  4027cd:	dec    edi
  4027ce:	aaa    
  4027cf:	mov    al,0xaa
  4027d1:	push   edi
  4027d2:	dec    esp
  4027d3:	jle    0x402770
  4027d5:	pop    ebx
  4027d6:	add    al,0xd
  4027d8:	mov    edx,0x248ff227
  4027dd:	or     DWORD PTR [edx+eax*2],esi
  4027e0:	imul   ecx,DWORD PTR [edi-0x3a3d27f9],0xdd2dc2c6
  4027ea:	hlt    
  4027eb:	sub    edi,DWORD PTR [eax]
  4027ed:	pop    esp
  4027ee:	jl     0x4027ee
  4027f0:	in     al,dx
  4027f1:	pop    ss
  4027f2:	clc    
  4027f3:	adc    DWORD PTR [eax],0x4a
  4027f6:	cmp    eax,0x2fb06e10
  4027fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027fc:	adc    ah,BYTE PTR [ebp+0x6ab5e1b6]
  402802:	cs pop es
  402804:	daa    
  402805:	sub    DWORD PTR ds:0x7e312343,ebx
  40280b:	ds cdq 
  40280d:	pushf  
  40280e:	push   edi
  40280f:	lahf   
  402810:	loop   0x4027c5
  402812:	enter  0xd173,0xa4
  402816:	in     al,0xd1
  402818:	lock or BYTE PTR [edx],bl
  40281b:	sub    edx,edi
  40281d:	(bad)  
  40281e:	push   ecx
  40281f:	jg     0x4027e2
  402821:	mov    bl,0x90
  402823:	fwait
  402824:	test   eax,0xa6ece1b4
  402829:	push   eax
  40282a:	daa    
  40282b:	in     eax,dx
  40282c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40282d:	jmp    0x402872
  40282f:	test   eax,0xef225e23
  402835:	pusha  
  402836:	inc    ebp
  402837:	and    bl,BYTE PTR [esi+0x68]
  40283a:	xchg   edx,ecx
  40283c:	(bad)  
  40283d:	mov    eax,0x6b40cf93
  402842:	in     eax,0xbf
  402844:	dec    ebx
  402845:	pushf  
  402846:	cli    
  402847:	popa   
  402848:	or     ebx,esp
  40284a:	out    dx,al
  40284b:	inc    DWORD PTR [ecx]
  40284d:	jmp    0xef75:0x31496625
  402854:	(bad)  
  402855:	sub    al,0x62
  402857:	out    0xec,al
  402859:	mov    WORD PTR [edi-0x15],fs
  40285c:	push   esi
  40285d:	push   ds
  40285e:	add    eax,0x4fab809b
  402863:	mov    ?,WORD PTR [ebx+0x55525b7e]
  402869:	xchg   esi,eax
  40286a:	mov    ah,0xd4
  40286c:	dec    ebp
  40286d:	and    al,0xf7
  40286f:	or     DWORD PTR [edi-0x1340f124],ebx
  402875:	mov    DWORD PTR [ecx],esi
  402877:	sar    ch,cl
  402879:	sti    
  40287a:	outs   dx,BYTE PTR ds:[esi]
  40287b:	lds    ebp,FWORD PTR [ebx+0x73]
  40287e:	inc    edi
  40287f:	and    al,0x49
  402881:	dec    eax
  402882:	fs cmp al,0x6e
  402885:	pop    edx
  402886:	repz mov al,0x42
  402889:	push   edx
  40288a:	sub    al,0x54
  40288c:	pop    edi
  40288d:	mov    BYTE PTR [ebx],bl
  40288f:	out    dx,al
  402890:	xchg   edi,eax
  402891:	sbb    DWORD PTR [ecx+0x360501ef],0x5dc68eeb
  40289b:	add    eax,0xb3464d26
  4028a0:	inc    esi
  4028a1:	out    0x85,al
  4028a3:	outs   dx,DWORD PTR ds:[esi]
  4028a4:	pop    edx
  4028a5:	pop    edx
  4028a6:	mov    ecx,0xfbcc6300
  4028ab:	icebp  
  4028ac:	xchg   edi,eax
  4028ad:	shl    DWORD PTR [esp+edi*8],0x24
  4028b1:	jmp    0x40286a
  4028b3:	mov    eax,eax
  4028b5:	dec    ecx
  4028b6:	and    eax,0x67b8223f
  4028bb:	xchg   edi,eax
  4028bc:	or     al,0x78
  4028be:	lds    edi,FWORD PTR [eax+0x38f305d8]
  4028c4:	sbb    eax,0xe48bf163
  4028c9:	mov    bl,0x43
  4028cb:	popf   
  4028cc:	adc    eax,0x209cb798
  4028d1:	fild   DWORD PTR [edi-0x43]
  4028d4:	sub    DWORD PTR [ebp+0xe],edx
  4028d7:	adc    ebp,ebp
  4028d9:	test   DWORD PTR [ebp*2+0x4a3db923],0xb6b819a6
  4028e4:	or     esp,ebx
  4028e6:	or     al,0xb7
  4028e8:	dec    eax
  4028e9:	or     BYTE PTR [esi],0xc9
  4028ec:	(bad)  
  4028ee:	mov    esp,0xa859baac
  4028f3:	push   ss
  4028f4:	xchg   esi,eax
  4028f5:	sub    al,0xc9
  4028f7:	dec    ecx
  4028f8:	sub    edi,ebx
  4028fa:	add    BYTE PTR [edi+0x62],ch
  4028fd:	fidiv  DWORD PTR [edi]
  4028ff:	xchg   ebp,eax
  402900:	xchg   edx,eax
  402901:	cmp    DWORD PTR [ebx+0x3e9094c8],esp
  402907:	arpl   WORD PTR [eax-0x28],cx
  40290a:	cld    
  40290b:	cmp    BYTE PTR [eax-0x6c],dl
  40290e:	push   es
  40290f:	jecxz  0x4028ff
  402911:	test   al,0x6a
  402913:	mov    dl,cl
  402915:	ins    BYTE PTR es:[edi],dx
  402916:	cmp    DWORD PTR [ecx-0x7],ebx
  402919:	add    ebx,eax
  40291b:	lock pop edi
  40291d:	outs   dx,BYTE PTR ds:[esi]
  40291e:	mov    al,ds:0xdae2dde7
  402923:	fbld   TBYTE PTR [ebp+0x54]
  402926:	fdivr  DWORD PTR [esi-0x69c8873c]
  40292c:	test   BYTE PTR [ecx+edx*4],ah
  40292f:	xchg   esp,eax
  402930:	push   ebp
  402931:	sbb    al,0x21
  402933:	add    DWORD PTR [ebx-0x1b],eax
  402936:	call   0x41f1:0xe7f086a1
  40293d:	push   edi
  40293e:	mov    bh,0x49
  402940:	xchg   ebx,eax
  402941:	leave  
  402942:	addr16 popa 
  402944:	dec    edi
  402945:	xchg   esp,eax
  402946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402947:	lahf   
  402948:	push   edi
  402949:	repz xchg ebx,eax
  40294b:	jae    0x4029bf
  40294d:	pop    ss
  40294e:	jns    0x402997
  402950:	shl    DWORD PTR ds:[edi-0x696d3fd5],cl
  402957:	rcr    BYTE PTR [ecx-0x13],cl
  40295a:	(bad)  
  40295b:	in     al,0x2c
  40295d:	and    edi,DWORD PTR [ecx+0x52]
  402960:	lahf   
  402961:	std    
  402962:	inc    edx
  402963:	or     DWORD PTR [edx+0x68092a51],edi
  402969:	adc    DWORD PTR [ecx-0x49],0x97399287
  402970:	mov    ebx,gs
  402972:	jb     0x4029b6
  402974:	(bad)  
  402975:	xchg   esp,eax
  402976:	cmc    
  402977:	inc    esi
  402978:	add    ecx,DWORD PTR [edi-0x7af5c875]
  40297e:	cli    
  40297f:	shl    BYTE PTR [eax],cl
  402981:	sar    BYTE PTR [edx-0xc],0x51
  402985:	jecxz  0x402980
  402987:	mov    ds:0x69d45e80,al
  40298c:	inc    edi
  40298d:	xchg   esp,eax
  40298e:	out    dx,al
  40298f:	stos   BYTE PTR es:[edi],al
  402990:	xor    eax,0x6d189e59
  402995:	ss push edi
  402997:	cdq    
  402998:	dec    edx
  402999:	add    al,0x30
  40299b:	arpl   WORD PTR [eax-0x5a],dx
  40299e:	call   0xc6a6:0x38832bca
  4029a5:	test   DWORD PTR [edx],edi
  4029a7:	std    
  4029a8:	call   0x1d1b:0xa599cc64
  4029af:	or     al,BYTE PTR ds:0x75b1df1c
  4029b5:	(bad)  
  4029b6:	call   0x2314:0xe2b79b2b
  4029bd:	rcl    bl,0x15
  4029c0:	adc    eax,0x2b554a5b
  4029c5:	in     al,dx
  4029c6:	test   BYTE PTR [ecx+0x4a],ah
  4029c9:	sbb    cl,ah
  4029cb:	cmc    
  4029cc:	pop    edx
  4029cd:	cmp    bh,cl
  4029cf:	push   esi
  4029d0:	inc    esi
  4029d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029d2:	in     eax,dx
  4029d3:	cmp    cl,ah
  4029d5:	and    DWORD PTR [edx-0x5c1797aa],ebx
  4029db:	add    ah,BYTE PTR [ebp+0x3b]
  4029de:	push   cs
  4029df:	and    BYTE PTR [ebx-0x60],bh
  4029e2:	push   0x28
  4029e4:	push   0xffffff8e
  4029e6:	daa    
  4029e7:	fisub  WORD PTR [ecx]
  4029e9:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4029eb:	add    ch,bh
  4029ed:	jle    0x402a0d
  4029ef:	data16 inc cx
  4029f2:	add    dh,0xa1
  4029f5:	pop    ss
  4029f6:	jle    0x402a59
  4029f8:	mov    bl,0x33
  4029fa:	enter  0xbb97,0x7a
  4029fe:	sar    al,cl
  402a00:	jl     0x4029a5
  402a02:	(bad)  
  402a03:	pop    eax
  402a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a06:	mov    cl,0x8c
  402a08:	and    BYTE PTR [ecx-0xf],ch
  402a0b:	cwde   
  402a0c:	call   0x8aea:0xcfbed069
  402a13:	fcomp  QWORD PTR [ebp+0x51]
  402a16:	lods   eax,DWORD PTR ds:[esi]
  402a17:	sub    esp,DWORD PTR [ebp+0x2c]
  402a1a:	dec    ecx
  402a1b:	pop    ss
  402a1c:	loop   0x4029ca
  402a1e:	xor    cl,BYTE PTR [eax]
  402a20:	cmp    al,0xca
  402a22:	mov    edi,0xf3bb1813
  402a27:	mov    BYTE PTR gs:[edi-0x350bba63],cl
  402a2e:	fnstcw WORD PTR [esi]
  402a30:	imul   BYTE PTR [eax-0x3051cdde]
  402a36:	push   ebp
  402a37:	into   
  402a38:	inc    esi
  402a39:	fnstsw WORD PTR [edx]
  402a3b:	mov    edi,0xb2c38923
  402a40:	test   BYTE PTR [eax-0x3f1cc5e7],dh
  402a46:	xchg   si,ax
  402a48:	inc    ebp
  402a49:	lods   eax,DWORD PTR ds:[esi]
  402a4a:	test   al,0x2c
  402a4c:	out    dx,eax
  402a4d:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  402a4f:	leave  
  402a50:	fistp  QWORD PTR [edx-0x1a73404f]
  402a56:	pop    edi
  402a57:	inc    ebp
  402a58:	inc    ecx
  402a59:	sub    eax,0x45c9f5f5
  402a5e:	ficom  WORD PTR [ebx-0x56185943]
  402a64:	lods   al,BYTE PTR ds:[esi]
  402a65:	stc    
  402a66:	adc    ecx,DWORD PTR [eax+0x6c]
  402a69:	fwait
  402a6a:	je     0x402a1c
  402a6c:	cmp    al,0x7b
  402a6e:	dec    edx
  402a6f:	popf   
  402a70:	mov    esi,0xc8ea164c
  402a75:	dec    edx
  402a76:	or     al,0xd5
  402a78:	cmp    ch,ah
  402a7a:	aad    0xdc
  402a7c:	push   ebp
  402a7d:	mov    eax,0xa7001600
  402a82:	xchg   ebp,eax
  402a83:	loopne 0x402a89
  402a85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a86:	rol    DWORD PTR [ebx-0x40],1
  402a89:	xor    eax,0x4040444e
  402a8e:	cli    
  402a8f:	sbb    DWORD PTR [ecx+0x388748d8],ebp
  402a95:	xlat   BYTE PTR ds:[ebx]
  402a96:	mov    ebx,0x5755f53a
  402a9b:	mov    ecx,0x1fcf3e25
  402aa0:	dec    esi
  402aa1:	mov    ds,WORD PTR [edi+0x799b5494]
  402aa7:	dec    edx
  402aa8:	repnz rol dh,1
  402aab:	aas    
  402aac:	data16 neg BYTE PTR [eax]
  402aaf:	sub    al,0x78
  402ab1:	rol    DWORD PTR [esi+0x53b7854a],1
  402ab7:	xor    BYTE PTR [edx],dh
  402ab9:	js     0x402b01
  402abb:	and    edi,esi
  402abd:	imul   bh
  402abf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ac0:	leave  
  402ac1:	cmc    
  402ac2:	retf   
  402ac3:	xchg   edi,eax
  402ac4:	das    
  402ac5:	ins    BYTE PTR es:[edi],dx
  402ac6:	ja     0x402b18
  402ac8:	data16 sti 
  402aca:	(bad)  
  402acb:	enter  0x943,0x9f
  402acf:	mov    ebp,0xa18e6785
  402ad4:	fiadd  DWORD PTR [esi+0x67300f7f]
  402ada:	shr    ch,1
  402adc:	pop    es
  402add:	add    dl,BYTE PTR [ecx+ebx*2-0x1d61c823]
  402ae4:	dec    ecx
  402ae5:	mov    dh,BYTE PTR [ecx-0x3d]
  402ae8:	push   ecx
  402ae9:	gs daa 
  402aeb:	stc    
  402aec:	xchg   ecx,eax
  402aed:	iret   
  402aee:	push   esi
  402aef:	mov    edi,0xc0155ee7
  402af4:	in     al,dx
  402af5:	es xchg ebp,eax
  402af7:	mov    bl,dl
  402af9:	add    BYTE PTR [edi+edi*4+0x6998ca5a],0xd3
  402b01:	mov    al,0xc8
  402b03:	(bad)  
  402b04:	pop    ecx
  402b05:	leave  
  402b06:	sbb    eax,ebp
  402b08:	jp     0x402b01
  402b0a:	dec    esp
  402b0b:	jp     0x402b51
  402b0d:	mov    edx,0xec3d2a6e
  402b12:	push   ds
  402b13:	lods   al,BYTE PTR ds:[esi]
  402b14:	pop    ebx
  402b15:	or     DWORD PTR [esi],ebx
  402b17:	adc    al,0xfa
  402b19:	pop    DWORD PTR [edi]
  402b1b:	stos   DWORD PTR es:[edi],eax
  402b1c:	cmp    DWORD PTR [esp+ebx*8+0xae41be8],ecx
  402b23:	push   cs
  402b24:	fcom   st(7)
  402b26:	inc    ecx
  402b27:	mov    bl,0xd8
  402b29:	push   esp
  402b2a:	rcr    BYTE PTR ds:0x96da9cc4,cl
  402b30:	sbb    al,0xa3
  402b32:	jmp    0x402ba2
  402b34:	btr    DWORD PTR [ecx],eax
  402b37:	and    esp,DWORD PTR [edx+0x5a6d58ae]
  402b3d:	or     cl,BYTE PTR [edx-0x4c47e4f7]
  402b43:	jg     0x402ba2
  402b45:	repz icebp 
  402b47:	ins    BYTE PTR es:[edi],dx
  402b48:	ret    0xa47b
  402b4b:	xor    al,0x65
  402b4d:	rcl    DWORD PTR [esi-0x374776d],cl
  402b53:	add    ah,bl
  402b55:	addps  xmm0,XMMWORD PTR [edi-0x3b1aec92]
  402b5c:	fadd   st,st(3)
  402b5e:	jnp    0x402ae9
  402b60:	in     al,dx
  402b61:	jmp    0x87bb:0x2af65dee
  402b68:	mov    dl,0xa4
  402b6a:	xchg   edi,eax
  402b6b:	gs out 0xf0,al
  402b6e:	or     bl,BYTE PTR [eax+0x57]
  402b71:	mov    esi,0xc14f0a22
  402b76:	mul    BYTE PTR [ebx+ecx*8-0x1a]
  402b7a:	ret    0x9283
  402b7d:	outs   dx,DWORD PTR ds:[esi]
  402b7e:	popf   
  402b7f:	and    BYTE PTR [esi],0xa4
  402b82:	shl    BYTE PTR [ecx-0x46],1
  402b85:	out    dx,al
  402b86:	inc    eax
  402b87:	pop    ds
  402b88:	mov    cl,0x1b
  402b8a:	sbb    ebp,0xffffff87
  402b8d:	push   edx
  402b8e:	sbb    DWORD PTR [esi-0x24],esp
  402b91:	dec    edx
  402b92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b93:	mov    WORD PTR [ebp+0x1ffa515e],?
  402b99:	ins    BYTE PTR es:[edi],dx
  402b9a:	rol    BYTE PTR [ebp-0x4d],1
  402b9d:	(bad)  
  402b9e:	je     0x402bde
  402ba0:	mov    ebx,0x9ce222bd
  402ba5:	dec    ecx
  402ba6:	and    ebx,DWORD PTR [ecx]
  402ba8:	and    BYTE PTR ds:0x1fc6cd8,ah
  402bae:	cmp    eax,0x8b780a7e
  402bb3:	add    ah,cl
  402bb5:	adc    esp,DWORD PTR [ecx]
  402bb7:	mov    BYTE PTR es:[ebx+0x3f],dh
  402bbb:	ret    0x9a18
  402bbe:	xchg   BYTE PTR [ecx+0x3c],dl
  402bc1:	or     al,0x93
  402bc3:	js     0x402bb1
  402bc5:	add    bh,al
  402bc7:	pop    edx
  402bc8:	mov    ds,WORD PTR [ebx+0x659a811e]
  402bce:	in     al,0xa2
  402bd0:	xor    eax,0x2994fc27
  402bd5:	ins    BYTE PTR es:[edi],dx
  402bd6:	ins    DWORD PTR es:[edi],dx
  402bd7:	fmul   DWORD PTR [eax]
  402bd9:	sub    BYTE PTR [ebp-0x6d],0xbf
  402bdd:	add    DWORD PTR [ecx+0x64],edx
  402be0:	pop    esp
  402be1:	sub    ecx,DWORD PTR [ebx+0x71f2f70b]
  402be7:	into   
  402be8:	(bad)  
  402be9:	adc    edi,ebx
  402beb:	inc    edi
  402bec:	call   0x4d04:0xa82b689
  402bf3:	aas    
  402bf4:	rcr    bl,0x90
  402bf7:	cmp    DWORD PTR [ecx],edx
  402bf9:	outs   dx,DWORD PTR ds:[esi]
  402bfa:	mov    esi,0x8c26ae4c
  402bff:	jne    0x402b8f
  402c01:	in     al,0xdf
  402c03:	add    dh,BYTE PTR [esi+0x1a]
  402c06:	mov    WORD PTR [ebx+0x77],?
  402c09:	in     eax,dx
  402c0a:	call   DWORD PTR [ebx+edx*1]
  402c0d:	push   es
  402c0e:	jmp    0xe56c:0xd904ae1b
  402c15:	cmp    esp,eax
  402c17:	sub    BYTE PTR [edx+0x24],al
  402c1a:	and    BYTE PTR [esi],bh
  402c1c:	rcr    BYTE PTR [ebp+edi*1+0x72e15d30],1
  402c23:	dec    edx
  402c24:	sahf   
  402c25:	popa   
  402c26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c27:	push   esi
  402c28:	jmp    0xdb4b:0x4ffe7fcc
  402c2f:	inc    esp
  402c30:	fcom   QWORD PTR [ecx]
  402c32:	and    DWORD PTR [eax+0x1492b10d],eax
  402c38:	jl     0x402c2d
  402c3a:	sub    DWORD PTR [edx],esp
  402c3c:	cdq    
  402c3d:	add    DWORD PTR [eax],ebp
  402c3f:	(bad)  
  402c40:	and    ch,BYTE PTR [edx+0x6773a375]
  402c46:	pop    ds
  402c47:	(bad)  
  402c48:	cwde   
  402c49:	icebp  
  402c4a:	cs loope 0x402c7b
  402c4d:	daa    
  402c4e:	in     al,0xe1
  402c50:	icebp  
  402c51:	sbb    bh,dl
  402c53:	(bad)  
  402c54:	cmp    DWORD PTR [edx-0x63],edi
  402c57:	retf   0x1eeb
  402c5a:	cmc    
  402c5b:	sbb    DWORD PTR [edx],eax
  402c5d:	scas   eax,DWORD PTR es:[edi]
  402c5e:	dec    edx
  402c5f:	xor    edi,DWORD PTR [edx]
  402c61:	sar    BYTE PTR [eax+0x641be041],cl
  402c67:	push   edi
  402c68:	push   ebp
  402c69:	ins    DWORD PTR es:[edi],dx
  402c6a:	cmp    ah,BYTE PTR [ebp+esi*2+0x2f2e6214]
  402c71:	mov    dl,0x69
  402c73:	and    BYTE PTR [esi-0x678a468c],0xad
  402c7a:	stos   DWORD PTR es:[edi],eax
  402c7b:	loop   0x402cd6
  402c7d:	add    al,0x7b
  402c7f:	jae    0x402cfd
  402c81:	sbb    ecx,DWORD PTR [edi-0x74]
  402c84:	jno    0xdd4c4e05
  402c8a:	pop    ds
  402c8b:	cmc    
  402c8c:	push   esi
  402c8d:	ror    ebx,0x4d
  402c90:	iret   
  402c91:	loope  0x402d09
  402c93:	push   ebx
  402c94:	gs leave 
  402c96:	test   eax,0x75aadff4
  402c9b:	popf   
  402c9c:	mov    ds:0x425769f3,al
  402ca1:	mov    WORD PTR [eax+eiz*2],es
  402ca4:	push   es
  402ca5:	in     al,dx
  402ca6:	pop    es
  402ca7:	xchg   ebx,eax
  402ca8:	xor    BYTE PTR [edx+0x26437680],ch
  402cae:	int    0xb5
  402cb0:	inc    esi
  402cb1:	dec    esi
  402cb2:	push   cs
  402cb3:	lahf   
  402cb4:	sub    ebx,DWORD PTR [esp+eiz*2]
  402cb7:	cmp    al,0x73
  402cb9:	pop    ebx
  402cba:	cmp    edx,DWORD PTR [ecx]
  402cbc:	shl    DWORD PTR [ebx+0x6158ca8c],cl
  402cc2:	dec    eax
  402cc3:	and    eax,0x54eae520
  402cc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cc9:	mov    ebp,0x6ebebdbf
  402cce:	jmp    0x36b01fd7
  402cd3:	mov    ds,ebx
  402cd5:	jno    0x402cfc
  402cd7:	mov    eax,0x4935f26a
  402cdc:	pusha  
  402cdd:	jns    0x402d27
  402cdf:	test   al,0xb9
  402ce1:	mov    edi,0x2aea9f9e
  402ce6:	cdq    
  402ce7:	mov    edx,0xf4e51820
  402cec:	mov    bl,0x24
  402cee:	jne    0x402cad
  402cf0:	div    ah
  402cf2:	ss js  0x402d40
  402cf5:	push   eax
  402cf6:	iret   
  402cf7:	js     0x402ca9
  402cf9:	in     eax,dx
  402cfa:	and    ah,BYTE PTR [edx]
  402cfc:	sub    DWORD PTR [ebp-0x3e],eax
  402cff:	inc    esp
  402d00:	sbb    BYTE PTR [ebx+0x63],dh
  402d03:	mov    bl,0xf2
  402d05:	cmc    
  402d06:	icebp  
  402d07:	rcr    DWORD PTR [esi-0x2],0x30
  402d0b:	mov    ds,WORD PTR [esi-0xf47207a]
  402d11:	int    0x1e
  402d13:	std    
  402d14:	mov    esp,0xc83d9a40
  402d19:	mov    ds:0x70af4335,eax
  402d1e:	test   al,0x9a
  402d20:	rcr    DWORD PTR [edx+0x36],0xa9
  402d24:	fdiv   st(5),st
  402d26:	lods   eax,DWORD PTR ds:[esi]
  402d27:	xchg   ebx,eax
  402d28:	int3   
  402d29:	(bad)  
  402d2b:	inc    ebp
  402d2c:	outs   dx,DWORD PTR ds:[esi]
  402d2d:	inc    ebx
  402d2e:	sbb    al,0x42
  402d30:	mov    edx,0x73d86d8d
  402d35:	out    0xd9,al
  402d37:	mov    ebx,edx
  402d39:	xchg   ecx,eax
  402d3a:	(bad)
  402d3e:	daa    
  402d3f:	xchg   ebx,eax
  402d40:	dec    edi
  402d41:	ins    BYTE PTR es:[edi],dx
  402d42:	dec    esp
  402d43:	cmp    al,0x1
  402d45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d46:	sub    bh,bl
  402d48:	and    eax,0xdce9c103
  402d4d:	mov    dl,0x65
  402d4f:	(bad)  
  402d50:	loopne 0x402cea
  402d52:	pop    ss
  402d53:	std    
  402d54:	mov    al,0x76
  402d56:	aas    
  402d57:	hlt    
  402d58:	test   esi,ebp
  402d5a:	fs ret 
  402d5c:	shl    ch,cl
  402d5e:	dec    ecx
  402d5f:	test   BYTE PTR ds:0x7da3360f,dl
  402d65:	out    0xbb,eax
  402d67:	pop    ebx
  402d68:	or     al,0x1b
  402d6a:	pop    ecx
  402d6b:	(bad)  
  402d6c:	mov    esi,0xf7aefb97
  402d71:	mov    al,ds:0x822c5e43
  402d76:	(bad)  
  402d77:	(bad)
  402d7a:	pusha  
  402d7b:	aaa    
  402d7c:	mov    eax,ds:0xb0e2378f
  402d81:	ret    0x398b
  402d84:	sbb    dl,ch
  402d86:	xor    eax,0x1bf13b77
  402d8b:	retf   
  402d8c:	cmp    al,0x53
  402d8e:	fwait
  402d8f:	xor    ah,BYTE PTR ds:0x714e585f
  402d95:	je     0x402da2
  402d97:	push   ss
  402d98:	scas   al,BYTE PTR es:[edi]
  402d99:	pop    esi
  402d9a:	inc    edi
  402d9b:	(bad)  
  402d9c:	pop    ss
  402d9d:	iret   
  402d9e:	add    al,BYTE PTR [ebp-0x24]
  402da1:	push   0x1e
  402da3:	inc    edx
  402da4:	add    eax,0x42f0f994
  402da9:	sbb    ebp,DWORD PTR [edx+eiz*1]
  402dac:	push   0x5
  402dae:	mov    ah,0xe
  402db0:	fs jns 0x402d5c
  402db3:	jl     0x402d3c
  402db5:	lods   al,BYTE PTR ds:[esi]
  402db6:	or     esp,edx
  402db8:	lock lea eax,[ebx+eax*1-0x15e423]
  402dc0:	mov    esi,0x4b474074
  402dc5:	xor    eax,0xa3b1d8d8
  402dca:	cld    
  402dcb:	clc    
  402dcc:	dec    eax
  402dcd:	push   0x1d
  402dcf:	push   0xffffffc8
  402dd1:	mov    ds:0xe057f8be,eax
  402dd6:	jp     0x402e2a
  402dd8:	outs   dx,BYTE PTR ds:[esi]
  402dd9:	mov    esp,0x3d8101f9
  402dde:	cmp    al,BYTE PTR [esi]
  402de0:	cmp    eax,0x4ca8e463
  402de5:	mov    eax,ds:0x5f36f672
  402dea:	call   DWORD PTR [ebx-0x177dd2f0]
  402df0:	or     BYTE PTR [edi+0x27be9460],bl
  402df6:	xchg   ebp,eax
  402df7:	inc    esp
  402df8:	add    BYTE PTR [edi-0x1ff4c4d7],0xf
  402dff:	in     al,dx
  402e00:	xchg   ecx,eax
  402e01:	mov    dh,0xc3
  402e03:	dec    edx
  402e04:	inc    ebp
  402e05:	inc    edi
  402e06:	xchg   esp,eax
  402e07:	mov    ecx,0x4517285
  402e0c:	jg     0x402dfd
  402e0e:	(bad)  
  402e0f:	push   ss
  402e10:	mov    dh,0x20
  402e12:	lds    ecx,FWORD PTR [esi+0x66]
  402e15:	or     DWORD PTR ss:[esi],0x6eb4e708
  402e1c:	and    ch,BYTE PTR [eax+ebx*2]
  402e1f:	push   ebx
  402e20:	push   0xffffffb8
  402e22:	mov    ds:0xc586f8e9,al
  402e27:	into   
  402e28:	pop    esp
  402e29:	sbb    esi,DWORD PTR [eax]
  402e2b:	add    BYTE PTR [eax-0x14c0bea9],cl
  402e31:	jns    0x402e79
  402e33:	enter  0x1591,0x37
  402e37:	cmp    eax,0x454d91f4
  402e3c:	xchg   dh,dl
  402e3e:	rcr    DWORD PTR [edi-0x17],cl
  402e41:	(bad)  
  402e42:	enter  0x8fab,0x66
  402e46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e47:	rcl    DWORD PTR [ebp-0x62af7fc0],1
  402e4d:	hlt    
  402e4e:	cdq    
  402e4f:	pop    es
  402e50:	xor    BYTE PTR [ebx-0x55],ch
  402e53:	shl    BYTE PTR [edi+0x40],1
  402e56:	xor    DWORD PTR [ecx-0x6c94a444],ecx
  402e5c:	xor    DWORD PTR [edx+0x17],ebp
  402e5f:	aam    0x97
  402e61:	nop
  402e62:	lds    ebx,FWORD PTR [ebp-0x57]
  402e65:	addr16 call 0x244c5a9a
  402e6b:	sbb    al,0xb7
  402e6d:	sub    BYTE PTR [edx],al
  402e6f:	ror    DWORD PTR [edi-0x520e1d3c],1
  402e75:	cmp    eax,DWORD PTR [esi]
  402e77:	mov    eax,0x5d180c03
  402e7c:	ror    DWORD PTR [ecx+eax*1],cl
  402e7f:	in     eax,0xe8
  402e81:	inc    eax
  402e82:	jns    0x402e85
  402e84:	ret    
  402e85:	ffreep st(2)
  402e87:	or     dl,BYTE PTR [eax]
  402e89:	ins    BYTE PTR es:[edi],dx
  402e8a:	pop    ecx
  402e8b:	dec    eax
  402e8c:	mov    cl,0x8a
  402e8e:	xor    al,0xce
  402e90:	mov    ds:0xe8f225f2,eax
  402e95:	mov    cl,0xc2
  402e97:	int3   
  402e98:	mov    al,ds:0x109e7f78
  402e9d:	xchg   DWORD PTR [edi+eax*8-0x398353e4],esp
  402ea4:	cli    
  402ea5:	mov    ds:0xab5bf7fb,al
  402eaa:	inc    edi
  402eab:	pop    edi
  402eac:	jnp    0x402f12
  402eae:	std    
  402eaf:	call   0x2f28407a
  402eb4:	sub    DWORD PTR [ebx+ecx*8-0x20a31b97],esp
  402ebb:	aas    
  402ebc:	cdq    
  402ebd:	mov    ds:0x5b2850f4,eax
  402ec2:	and    BYTE PTR [ecx-0x2d],al
  402ec5:	test   bl,cl
  402ec7:	fadd   DWORD PTR [esi-0x3423440]
  402ecd:	xlat   BYTE PTR ds:[ebx]
  402ece:	gs into 
  402ed0:	xor    BYTE PTR [esi-0x75],ch
  402ed3:	and    al,0x58
  402ed5:	fwait
  402ed6:	mov    DWORD PTR [edx+ebp*4-0x32],esp
  402eda:	fst    DWORD PTR [edi-0x68]
  402edd:	call   0x31792604
  402ee2:	xchg   BYTE PTR [edi+0x6d2f81c],bh
  402ee8:	jmp    0x402f68
  402eea:	les    eax,FWORD PTR [eax+edi*4+0x5e]
  402eee:	and    DWORD PTR [esi-0x1b],edi
  402ef1:	nop
  402ef2:	adc    DWORD PTR [esp+eax*2],eax
  402ef5:	jle    0x402f14
  402ef7:	add    BYTE PTR [edx-0x32],dl
  402efa:	loope  0x402ee4
  402efc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402efd:	test   BYTE PTR [ecx+0x2c543d5],0xf7
  402f04:	fnstcw WORD PTR [edi-0x1d]
  402f07:	les    esi,FWORD PTR [edi-0x40]
  402f0a:	jae    0x402f1e
  402f0c:	jne    0x402efe
  402f0e:	xchg   esi,eax
  402f0f:	or     ah,BYTE PTR [ebp+0x6684e9ef]
  402f15:	ficom  WORD PTR [ebp-0x581cb361]
  402f1b:	mov    BYTE PTR [edx+0x123285fd],al
  402f21:	outs   dx,DWORD PTR ds:[esi]
  402f22:	fadd   QWORD PTR [edx*1-0x6f09c3bb]
  402f29:	adc    dl,dh
  402f2b:	retf   0x2400
  402f2e:	call   0x74b98063
  402f33:	fisttp WORD PTR [edx+0x147f6da6]
  402f39:	js     0x402f02
  402f3b:	mov    dh,0xfd
  402f3d:	inc    eax
  402f3e:	fsub   st,st(2)
  402f40:	or     ah,BYTE PTR [ebx]
  402f42:	sar    DWORD PTR [ecx+ecx*2-0x1b],cl
  402f46:	lods   al,BYTE PTR ds:[esi]
  402f47:	mov    ecx,0x21c2a2bb
  402f4c:	pop    edi
  402f4d:	fist   WORD PTR [eax-0x434b4c67]
  402f53:	call   0x4e335f1
  402f58:	inc    eax
  402f59:	pop    ecx
  402f5a:	leave  
  402f5b:	je     0x402f30
  402f5d:	push   bx
  402f5f:	cdq    
  402f60:	xor    ebp,esp
  402f62:	cmp    ebx,esp
  402f64:	and    eax,DWORD PTR [esi]
  402f66:	in     al,0x43
  402f68:	add    edx,DWORD PTR [esi]
  402f6a:	sub    BYTE PTR [edi],al
  402f6c:	test   BYTE PTR [ecx],bh
  402f6e:	jp     0x402fd3
  402f70:	xchg   ebp,eax
  402f71:	les    esi,FWORD PTR [edi-0x5]
  402f74:	ins    DWORD PTR es:[edi],dx
  402f75:	dec    eax
  402f76:	cmp    edx,DWORD PTR [esi]
  402f78:	rol    BYTE PTR [ecx],0x4b
  402f7b:	jbe    0x402f56
  402f7d:	lahf   
  402f7e:	aas    
  402f7f:	sbb    BYTE PTR [edx+ebx*4],bl
  402f82:	xchg   ebx,eax
  402f83:	add    eax,0x9b1a3dde
  402f88:	jno    0x402fba
  402f8a:	(bad)  
  402f8b:	jbe    0x402fbf
  402f8d:	push   0x9073a969
  402f92:	bound  edx,QWORD PTR [ebp+0x26]
  402f95:	push   ebp
  402f96:	enter  0x5edc,0xb0
  402f9a:	pop    es
  402f9b:	iret   
  402f9c:	pop    ss
  402f9d:	je     0x402ffd
  402f9f:	add    esi,DWORD PTR [edx]
  402fa1:	jmp    0x2af4f8a1
  402fa6:	lock and cl,ah
  402fa9:	imul   eax,DWORD PTR [edi+0x60d8ea4c],0x58
  402fb0:	test   DWORD PTR [edi-0x3e417e01],esp
  402fb6:	in     eax,0xd3
  402fb8:	ins    DWORD PTR es:[edi],dx
  402fb9:	test   eax,0xb7975143
  402fbe:	shr    DWORD PTR [ecx+0x12],cl
  402fc1:	push   esi
  402fc2:	les    ebp,FWORD PTR [eax+0x72]
  402fc5:	popf   
  402fc6:	scas   eax,DWORD PTR es:[edi]
  402fc7:	adc    DWORD PTR [ecx-0x6c84d578],ebx
  402fcd:	and    eax,0x9ef7e3dc
  402fd2:	add    ch,BYTE PTR [edx]
  402fd4:	ret    0xc89d
  402fd7:	scas   eax,DWORD PTR es:[edi]
  402fd8:	adc    ebp,DWORD PTR [esi+0x6]
  402fdb:	jmp    0x402fcc
  402fdd:	out    0x3f,eax
  402fdf:	je     0x402f6f
  402fe1:	lods   eax,DWORD PTR ds:[esi]
  402fe2:	inc    esp
  402fe3:	xor    eax,DWORD PTR [ecx]
  402fe5:	repnz mov ah,0x5
  402fe8:	popf   
  402fe9:	and    eax,0x2a424b7
  402fee:	ret    0x9e65
  402ff1:	jns    0x402fde
  402ff3:	lea    esi,[ebx+0x5a0166dc]
  402ff9:	icebp  
  402ffa:	out    0xc8,al
  402ffc:	test   ah,cl
  402ffe:	or     edx,DWORD PTR [edi-0x17]
  403001:	aam    0x21
  403003:	lods   eax,DWORD PTR ds:[esi]
  403004:	dec    eax
  403005:	mov    ch,0x98
  403007:	xor    dl,BYTE PTR [edi]
  403009:	or     ah,bl
  40300b:	out    dx,al
  40300c:	aaa    
  40300d:	mov    dl,0xdd
  40300f:	mov    bh,0x18
  403011:	jmp    0x14e4441f
  403016:	mov    dl,0x6
  403018:	outs   dx,DWORD PTR ds:[esi]
  403019:	mov    ds:0xb4b6a546,al
  40301e:	pushf  
  40301f:	div    al
  403021:	js     0x402fac
  403023:	adc    DWORD PTR [esi],0xffffff9d
  403026:	retf   0x84e2
  403029:	push   edx
  40302a:	in     eax,0x14
  40302c:	pop    eax
  40302d:	jmp    0x403000
  40302f:	rcr    al,cl
  403031:	stos   DWORD PTR es:[edi],eax
  403032:	jmp    0x7c6a:0x6f696695
  403039:	sub    cl,BYTE PTR [edi]
  40303b:	and    esp,ebx
  40303d:	jmp    0x447e:0x194329d8
  403044:	adc    al,0x3e
  403046:	aad    0x7d
  403048:	(bad)  
  40304a:	pop    esi
  40304b:	aas    
  40304c:	cwde   
  40304d:	pop    edi
  40304e:	in     al,dx
  40304f:	jle    0x403046
  403051:	push   0x66
  403053:	jge    0x403003
  403055:	test   BYTE PTR [eax],bh
  403057:	adc    eax,0x86a2b9c4
  40305c:	out    0xc0,eax
  40305e:	adc    al,0x27
  403060:	retf   
  403061:	popf   
  403062:	pop    edx
  403063:	(bad)  
  403064:	sub    ecx,edi
  403066:	loope  0x403025
  403068:	and    ch,BYTE PTR ds:[ebx]
  40306b:	xchg   esi,eax
  40306c:	test   eax,0xafd22358
  403071:	xabort 0x11
  403074:	aad    0xb8
  403076:	(bad)  
  403077:	call   0x123ef7d4
  40307c:	shr    BYTE PTR [esi-0x6e],cl
  40307f:	xchg   esi,eax
  403080:	or     al,0xa4
  403082:	pushf  
  403083:	jg     0x403011
  403085:	or     DWORD PTR [ebx+ecx*1],0xbf739353
  40308c:	ret    
  40308d:	nop
  40308e:	repnz pusha 
  403090:	or     eax,0xf7e17b86
  403095:	add    al,dl
  403097:	xor    edx,DWORD PTR [edx-0x6]
  40309a:	inc    ebx
  40309b:	or     ebx,DWORD PTR [esi-0x416093e5]
  4030a1:	jecxz  0x403079
  4030a3:	xor    cx,0xffdd
  4030a7:	aaa    
  4030a8:	pop    edx
  4030a9:	cmp    al,0x21
  4030ab:	pop    ebx
  4030ac:	inc    edi
  4030ad:	lock pushf 
  4030af:	pop    es
  4030b0:	lods   eax,DWORD PTR ds:[esi]
  4030b1:	in     eax,dx
  4030b2:	adc    dh,BYTE PTR [edi+0x767c2f14]
  4030b8:	imul   esi,DWORD PTR [ebp+0x79957281],0x67b97ce3
  4030c2:	xchg   esp,eax
  4030c3:	and    DWORD PTR [eax+0x71],ebp
  4030c6:	loope  0x4030ac
  4030c8:	fwait
  4030c9:	add    DWORD PTR [ecx+0x5f87b8ac],0xffffff8d
  4030d0:	cmp    BYTE PTR [eax+0x75],dl
  4030d3:	fs in  al,dx
  4030d5:	ss call 0xf05d:0xe9c56b91
  4030dd:	xor    ecx,edi
  4030df:	xchg   ecx,eax
  4030e0:	xchg   edx,eax
  4030e1:	retf   0xd9e1
  4030e4:	inc    edx
  4030e5:	mov    WORD PTR [edx+esi*4-0x2f],es
  4030e9:	mov    ds:0x18af1849,eax
  4030ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030ef:	fst    QWORD PTR [eax-0x3c]
  4030f2:	push   ss
  4030f3:	stc    
  4030f4:	inc    esp
  4030f5:	xchg   ecx,eax
  4030f6:	inc    ebp
  4030f8:	inc    esp
  4030f9:	cmp    esi,esp
  4030fb:	cmp    DWORD PTR ds:0x7484747,ebx
  403101:	scas   al,BYTE PTR es:[edi]
  403102:	imul   ebp,ecx,0x2d08c8ea
  403108:	lods   eax,DWORD PTR ds:[esi]
  403109:	xlat   BYTE PTR ds:[ebx]
  40310a:	sti    
  40310b:	lahf   
  40310c:	xor    eax,ebp
  40310e:	cmp    ebp,esp
  403110:	inc    esi
  403111:	mov    ds:0x6a916196,eax
  403116:	xor    al,0x2c
  403118:	sbb    dl,BYTE PTR [ecx-0x6549bc4a]
  40311e:	add    BYTE PTR [ecx-0x5d581a92],cl
  403124:	xor    DWORD PTR [ecx+0x26f59fee],ebp
  40312a:	inc    ecx
  40312b:	mov    al,0x16
  40312d:	mov    eax,0xe9c190e
  403132:	loop   0x403111
  403134:	or     eax,0xf62f19b9
  40313a:	or     bl,BYTE PTR [ebx]
  40313c:	dec    esi
  40313d:	icebp  
  40313e:	in     eax,dx
  40313f:	(bad)  
  403142:	sar    DWORD PTR [ebx+0x301156d5],1
  403148:	dec    ecx
  403149:	rol    DWORD PTR [edi],0x93
  40314c:	mov    bh,0x5f
  40314e:	shl    BYTE PTR ds:0x486f1f32,cl
  403154:	or     BYTE PTR [edi+0x6d11cb20],ch
  40315a:	jle    0x4031bf
  40315c:	mov    ecx,0xaf9e863
  403161:	jmp    0x403188
  403163:	iret   
  403164:	and    DWORD PTR [edx-0x43],esi
  403167:	inc    esp
  403168:	sub    al,0xe9
  40316a:	repz and ecx,DWORD PTR [ebx-0x2eda0e52]
  403171:	ss pop ecx
  403173:	data16 icebp 
  403175:	and    BYTE PTR [eax+0x66],cl
  403178:	mov    dh,0xb0
  40317a:	in     al,dx
  40317b:	push   edi
  40317c:	aas    
  40317d:	iret   
  40317e:	xor    al,0x88
  403180:	fucomip st,st(2)
  403182:	jns    0x4031e2
  403184:	mov    dl,BYTE PTR [ebx]
  403186:	xor    DWORD PTR [eax-0x68],eax
  403189:	ror    BYTE PTR [ebp+0x0],0xe8
  40318d:	inc    bl
  40318f:	inc    bh
  403191:	adc    cl,bl
  403193:	mov    bl,0x4
  403195:	push   ecx
  403196:	inc    edi
  403197:	lds    eax,FWORD PTR [edi+0x2e661ae8]
  40319d:	stc    
  40319e:	cdq    
  40319f:	les    esp,FWORD PTR [esi]
  4031a1:	push   es
  4031a2:	mov    esp,0xc5844d53
  4031a7:	loope  0x4031fe
  4031a9:	das    
  4031aa:	sub    esp,DWORD PTR [edx+ebx*8+0x0]
  4031ae:	in     eax,dx
  4031af:	test   DWORD PTR [edi],esp
  4031b1:	inc    esp
  4031b2:	das    
  4031b3:	popa   
  4031b4:	js     0x403137
  4031b6:	xchg   ebp,eax
  4031b7:	cmp    bh,BYTE PTR [ecx]
  4031b9:	bound  edx,QWORD PTR [esi-0x38]
  4031bc:	js     0x403195
  4031be:	lds    ecx,FWORD PTR [edx+0x37]
  4031c1:	xchg   DWORD PTR [ebx-0x49b2f699],edi
  4031c7:	clc    
  4031c8:	(bad)  
  4031c9:	retf   
  4031ca:	sub    bh,cl
  4031cc:	sar    DWORD PTR [ebp-0x41],0xe1
  4031d0:	mov    WORD PTR [ebp+0x27],ss
  4031d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031d4:	xchg   esi,eax
  4031d5:	repz mov ch,0x77
  4031d8:	xor    al,0xa
  4031da:	inc    esi
  4031db:	dec    esi
  4031dc:	sub    ebp,DWORD PTR [ebx-0xd]
  4031df:	(bad)  
  4031e0:	cs pop ecx
  4031e2:	or     eax,0xddac9e65
  4031e7:	shr    BYTE PTR [ebp-0x771dc461],0xd
  4031ee:	add    al,ah
  4031f0:	adc    eax,0x60f5d843
  4031f5:	(bad)  
  4031f6:	jle    0x403257
  4031f8:	aad    0xdf
  4031fa:	iret   
  4031fb:	pop    ebx
  4031fc:	sub    eax,0x70c3c121
  403201:	ret    
  403202:	jl     0x4031cd
  403204:	cld    
  403205:	or     al,0xd2
  403207:	sbb    BYTE PTR ds:0xa4d53a5f,bh
  40320d:	mov    esp,eax
  40320f:	fisubr WORD PTR [eax-0x8]
  403212:	sahf   
  403213:	lock xchg esp,eax
  403215:	stos   DWORD PTR es:[edi],eax
  403216:	and    eax,0x49c8f777
  40321b:	dec    esi
  40321c:	stc    
  40321d:	push   ebp
  40321e:	pop    esp
  40321f:	div    DWORD PTR [ebx]
  403221:	imul   edi,DWORD PTR ds:0xd82d14b2,0xdd6e0189
  40322b:	pop    ecx
  40322c:	mul    edi
  40322e:	js     0x4031d1
  403230:	xchg   ebx,eax
  403231:	outs   dx,DWORD PTR ds:[esi]
  403232:	test   DWORD PTR [ebx+0x50],ebp
  403235:	js     0x40324b
  403237:	fstp   QWORD PTR [ecx+0x6e]
  40323a:	jl     0x40325f
  40323c:	or     DWORD PTR [edx+0x51],esp
  40323f:	pop    ebp
  403240:	mov    ds:0x87728847,eax
  403245:	clc    
  403246:	or     BYTE PTR [esi],bh
  403248:	test   eax,0xfad97cc1
  40324d:	push   ebx
  40324e:	push   ss
  40324f:	imul   ebx,DWORD PTR ds:0xf8562c2,0x2
  403256:	iret   
  403257:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403258:	push   ss
  403259:	xchg   esi,eax
  40325a:	dec    ebx
  40325b:	xor    ch,dh
  40325d:	dec    ecx
  40325e:	call   DWORD PTR [esi+0x28]
  403261:	(bad)  
  403262:	fidiv  WORD PTR [edx+0x73116947]
  403268:	cmp    eax,0x2602a1fa
  40326d:	data16 or al,0x10
  403270:	lds    edx,FWORD PTR [edx-0x54b66f99]
  403276:	inc    edx
  403277:	sbb    al,0xc4
  403279:	jo     0x40322c
  40327b:	scas   eax,DWORD PTR es:[edi]
  40327c:	in     eax,0x2a
  40327e:	inc    esp
  40327f:	push   ds
  403280:	and    DWORD PTR [esi],edi
  403282:	mov    cl,0x50
  403284:	jb     0x4032f4
  403286:	mov    cl,0xdc
  403288:	push   0x78
  40328a:	cwde   
  40328b:	scas   al,BYTE PTR es:[edi]
  40328c:	pop    esi
  40328d:	imul   edx,DWORD PTR [edi],0x3c
  403290:	jmp    0x4cb5:0x2cef0282
  403297:	out    dx,eax
  403298:	dec    eax
  403299:	es ins BYTE PTR es:[edi],dx
  40329b:	mov    ah,0x52
  40329d:	iret   
  40329e:	and    DWORD PTR [edi+0x31],0xd89e21fb
  4032a5:	mov    dl,BYTE PTR [edx*2-0x6f71fae9]
  4032ac:	dec    edi
  4032ad:	cmp    ah,ch
  4032af:	lods   eax,DWORD PTR ds:[esi]
  4032b0:	shl    BYTE PTR [ecx+ebx*2],0x5d
  4032b4:	push   edx
  4032b5:	fisub  DWORD PTR [edx+0xa]
  4032b8:	add    esp,DWORD PTR [edx+0x39]
  4032bb:	sub    ecx,DWORD PTR [edx+0x3dff1dcc]
  4032c1:	sbb    BYTE PTR [ebx+ecx*8-0xa],bl
  4032c5:	xchg   edi,eax
  4032c6:	fst    DWORD PTR [ebx-0x43]
  4032c9:	inc    esp
  4032ca:	aam    0xb
  4032cc:	cmp    bh,0xc8
  4032cf:	scas   al,BYTE PTR es:[edi]
  4032d0:	or     BYTE PTR [esi+0x20a3e7ab],0xd4
  4032d7:	push   esi
  4032d8:	xor    DWORD PTR ds:0x803a1348,esi
  4032de:	mov    esi,0x71ab73e1
  4032e3:	(bad)  [eax-0x694d2ec0]
  4032e9:	push   es
  4032ea:	fmul   QWORD PTR [eax-0x31]
  4032ed:	in     al,dx
  4032ee:	sahf   
  4032ef:	retf   
  4032f0:	mov    al,0xce
  4032f2:	sahf   
  4032f3:	imul   ebx,DWORD PTR [eax-0x1b],0xffffffaf
  4032f7:	pop    ds
  4032f8:	inc    esi
  4032f9:	out    dx,al
  4032fa:	fcomp  QWORD PTR [ebp+0x5a5b160b]
  403300:	out    0x6a,eax
  403302:	retf   
  403303:	pusha  
  403304:	push   edi
  403305:	scas   al,BYTE PTR es:[edi]
  403306:	lahf   
  403307:	inc    edx
  403308:	dec    esp
  403309:	mov    bh,0xc2
  40330b:	test   BYTE PTR [edi],cl
  40330d:	xchg   ebx,eax
  40330e:	xor    al,0x32
  403310:	stos   DWORD PTR es:[edi],eax
  403311:	sub    eax,DWORD PTR ds:0x9d500dd1
  403317:	mov    dl,0x1e
  403319:	call   0x529c:0x372e53b9
  403320:	stc    
  403321:	jmp    0x1878e88f
  403326:	imul   esp,esp,0xacf3afbe
  40332c:	test   DWORD PTR [esi+0x36],eax
  40332f:	push   ss
  403330:	jecxz  0x4032e5
  403332:	outs   dx,DWORD PTR ds:[esi]
  403333:	sti    
  403334:	mov    cl,0x7f
  403336:	cld    
  403337:	dec    ecx
  403338:	repnz rol DWORD PTR [edx-0x46bc83f4],1
  40333f:	sub    al,0xe2
  403341:	sub    BYTE PTR cs:[ebp+0x4d],dh
  403345:	sbb    dh,cl
  403347:	stos   BYTE PTR es:[edi],al
  403348:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403349:	xchg   edi,eax
  40334a:	mov    edx,0xcc5ee505
  40334f:	or     al,0xf5
  403351:	pop    es
  403352:	and    BYTE PTR [eax+ebp*2+0x25978fbd],ch
  403359:	cdq    
  40335a:	xor    eax,0x2d37b3bf
  40335f:	xchg   edi,eax
  403360:	enter  0x62,0xed
  403364:	dec    ebp
  403365:	(bad)  
  403367:	xchg   edx,eax
  403368:	jmp    0x40331e
  40336a:	push   0x29d96e7a
  40336f:	sub    eax,0x7e252121
  403374:	out    0xf8,eax
  403376:	clc    
  403377:	ret    
  403378:	xchg   di,ax
  40337a:	rcr    DWORD PTR [edi-0x55],cl
  40337d:	mul    BYTE PTR [edx+eiz*2+0x17]
  403381:	imul   ebp,DWORD PTR [ebx+0x5e],0xffffffd6
  403385:	mov    edx,0x4d0a8b69
  40338a:	push   0x20
  40338c:	mov    eax,0x6de3414
  403391:	push   0x7a
  403393:	pop    esp
  403394:	push   0xffffffab
  403396:	push   edx
  403397:	mov    edi,0xc2e8aaac
  40339c:	gs out dx,eax
  40339e:	xchg   bh,dh
  4033a0:	pop    eax
  4033a1:	call   0xcba18ec7
  4033a6:	je     0x4033a7
  4033a8:	retf   0x5b0d
  4033ab:	and    edx,DWORD PTR [edi+0x14d560d0]
  4033b1:	and    al,0x74
  4033b3:	push   ebx
  4033b4:	xchg   edi,eax
  4033b5:	(bad)  
  4033b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033b7:	lahf   
  4033b8:	pop    eax
  4033b9:	test   ecx,0xab7bd889
  4033bf:	scas   al,BYTE PTR es:[edi]
  4033c0:	inc    ebp
  4033c1:	pop    ds
  4033c2:	mov    bh,0x44
  4033c4:	in     eax,0xdd
  4033c6:	les    ebp,FWORD PTR [ebx+0x5194d4d2]
  4033cc:	xchg   esi,eax
  4033cd:	xor    eax,0x1623891c
  4033d2:	mov    DWORD PTR [ebx],edx
  4033d4:	push   0x53
  4033d6:	push   ss
  4033d7:	mov    BYTE PTR [eax],dl
  4033d9:	aam    0xb3
  4033db:	rcr    DWORD PTR [edx],1
  4033dd:	hlt    
  4033de:	xor    eax,DWORD PTR es:[edx]
  4033e1:	adc    esi,DWORD PTR [ebx-0x7711af46]
  4033e7:	inc    ebx
  4033e8:	pop    es
  4033e9:	cwde   
  4033ea:	push   ds
  4033eb:	nop
  4033ec:	fs mov cl,ch
  4033ef:	mov    ds:0x3e141d5e,al
  4033f4:	addr16 add eax,0x7a70c326
  4033fa:	dec    ecx
  4033fb:	cmp    eax,0x292e4ffa
  403400:	cmc    
  403401:	xor    edx,esi
  403403:	dec    esi
  403404:	fwait
  403405:	ret    0xe407
  403408:	adc    ecx,ebx
  40340a:	popf   
  40340b:	add    ebp,DWORD PTR [esp-0x47]
  40340f:	cmp    BYTE PTR [esi],0x29
  403412:	test   BYTE PTR [esi],cl
  403414:	ficomp DWORD PTR [esi-0x34]
  403417:	xchg   esp,eax
  403418:	imul   esi,DWORD PTR [ecx-0x26b498c7],0xffffff98
  40341f:	fcmovnbe st,st(3)
  403421:	push   0xb288fa5b
  403426:	push   edi
  403427:	mov    dl,bl
  403429:	loope  0x4034a7
  40342b:	hlt    
  40342c:	ins    BYTE PTR es:[edi],dx
  40342d:	stos   BYTE PTR es:[edi],al
  40342e:	das    
  40342f:	mov    esi,0x8fd720a3
  403434:	jmp    0x2bba4ef8
  403439:	mov    eax,ds:0x98ed43d5
  40343e:	xchg   ebx,eax
  40343f:	xor    BYTE PTR [edi],bl
  403441:	retf   0x249e
  403444:	sub    DWORD PTR [ecx+0x2d],esp
  403447:	pop    ecx
  403448:	push   0x5d1fe2a2
  40344d:	dec    ebp
  40344e:	jno    0x40348a
  403450:	(bad)  
  403451:	in     al,dx
  403452:	stos   DWORD PTR es:[edi],eax
  403453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403454:	fimul  DWORD PTR [ebx]
  403456:	pop    eax
  403457:	jge    0x40346e
  403459:	int3   
  40345a:	xor    esp,0x11
  40345d:	push   ds
  40345e:	xchg   ebp,eax
  40345f:	ins    DWORD PTR es:[edi],dx
  403460:	shl    BYTE PTR [ecx+0x4ad98401],0x49
  403467:	mov    edi,0xb0f1f711
  40346c:	push   0x6b32ecb2
  403471:	retf   
  403472:	je     0x4034c5
  403474:	mov    edx,DWORD PTR [esi+ebx*8+0x44328c2a]
  40347b:	mov    BYTE PTR ds:0x8f48434f,bh
  403481:	aaa    
  403482:	pop    esi
  403483:	pop    ss
  403484:	push   ss
  403485:	push   cs
  403486:	jb     0x40341c
  403488:	pop    esp
  403489:	js     0x4034d3
  40348b:	std    
  40348c:	sub    cl,BYTE PTR ds:0x73b701cb
  403492:	add    eax,0x9e0fcc95
  403497:	jl     0x4034d8
  403499:	sub    DWORD PTR [ebp-0x21f9acde],eax
  40349f:	call   0xa04c:0xdd5e55f4
  4034a6:	sahf   
  4034a7:	cmp    eax,0x904fa6f8
  4034ad:	dec    ebp
  4034ae:	imul   ebp,DWORD PTR [ecx+0x69d72c45],0x5
  4034b5:	sbb    dh,BYTE PTR ds:0xd1aca68b
  4034bb:	or     al,0x37
  4034bd:	push   ds
  4034be:	test   eax,0x7377f8dd
  4034c3:	inc    DWORD PTR [ecx+0x3a516efc]
  4034c9:	mov    al,ds:0x2a935532
  4034ce:	adc    BYTE PTR [eax*8-0x1065d9f4],0x8e
  4034d6:	enter  0x313d,0xbd
  4034da:	fdiv   QWORD PTR [ebp-0x97ecbab]
  4034e0:	sbb    DWORD PTR [eax+0x7cfcba7e],0xffffff95
  4034e7:	cmp    DWORD PTR [eax-0x3e],edx
  4034ea:	addr16 push 0x2
  4034ed:	(bad)  [esi+ecx*8+0x1d7e61f0]
  4034f4:	popf   
  4034f5:	(bad)  [edx-0x226f5ff5]
  4034fb:	inc    ebx
  4034fc:	mov    DWORD PTR [ebx+0x4761b362],esi
  403502:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403503:	push   ds
  403504:	inc    ecx
  403505:	push   edx
  403506:	stos   DWORD PTR es:[edi],eax
  403507:	adc    al,ch
  403509:	jle    0x403500
  40350b:	mov    ah,0x51
  40350d:	pop    eax
  40350e:	dec    esi
  40350f:	out    0xe4,al
  403511:	fnstcw WORD PTR [ebx]
  403513:	adc    al,0x70
  403515:	mov    cl,0xd7
  403517:	jmp    0x68ff:0x854f4bbc
  40351e:	add    DWORD PTR [edi],ebx
  403520:	jl     0x403530
  403522:	jmp    0x403571
  403524:	enter  0xe08c,0x27
  403528:	mov    ch,0x5f
  40352a:	mov    cl,0x18
  40352c:	jg     0x40356c
  40352e:	push   0x2df38fe4
  403533:	cwde   
  403534:	int3   
  403535:	js     0x403524
  403537:	(bad)  
  403538:	mov    bl,0x27
  40353a:	fisttp WORD PTR [ebp-0x7b2466b0]
  403540:	shr    DWORD PTR [esi+eiz*4+0x66c0e147],0xfa
  403548:	push   ebp
  403549:	push   0xffffffef
  40354b:	imul   eax,ebp,0x45
  40354e:	add    edx,DWORD PTR [ebp+0x36]
  403551:	and    DWORD PTR [ecx-0x35493359],edi
  403557:	and    DWORD PTR [ecx],ebp
  403559:	enter  0xace,0xf4
  40355d:	jmp    0x40351b
  40355f:	jg     0x403533
  403561:	aas    
  403562:	test   DWORD PTR [ebx+eax*8-0x64aa901f],edi
  403569:	pop    ebx
  40356a:	xor    BYTE PTR [edx],bl
  40356c:	mov    dh,0xe6
  40356e:	adc    BYTE PTR [edx+ebp*1],al
  403571:	dec    ebp
  403572:	add    al,0xce
  403574:	stos   DWORD PTR es:[edi],eax
  403575:	cmp    al,0x40
  403577:	mov    ebp,DWORD PTR [ecx]
  403579:	aad    0xcf
  40357b:	cmp    esp,DWORD PTR [esi+0x78276e16]
  403581:	jns    0x4035bb
  403583:	call   0x6b42f01
  403588:	mov    gs,edx
  40358a:	push   edi
  40358b:	push   0x37
  40358d:	rol    DWORD PTR [esp+ebx*2-0x13],1
  403591:	and    al,0xb7
  403593:	div    eax
  403595:	mov    esp,0xe45a568f
  40359a:	mov    BYTE PTR [ebp+0x53],0x41
  40359e:	or     BYTE PTR [edi],al
  4035a0:	loope  0x403597
  4035a2:	mov    DWORD PTR [ebx+0xb3924ff],0x99dbb863
  4035ac:	(bad)
  4035b0:	xor    edi,eax
  4035b2:	pop    ebp
  4035b3:	pop    esp
  4035b4:	ret    0xd59a
  4035b7:	ror    DWORD PTR ss:[edx+0x99b5e89],cl
  4035be:	lods   al,BYTE PTR ds:[esi]
  4035bf:	or     ecx,DWORD PTR [ebp+0x18c08aa2]
  4035c5:	pop    ecx
  4035c6:	pop    esp
  4035c7:	mov    esi,0xb04f03a5
  4035cc:	sbb    ecx,DWORD PTR [edi]
  4035ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035cf:	je     0x403572
  4035d1:	xor    DWORD PTR cs:[ebx-0x52fc193a],esp
  4035d8:	sbb    edx,edi
  4035da:	cdq    
  4035db:	icebp  
  4035dc:	xchg   DWORD PTR [ebx],ebx
  4035de:	cmp    BYTE PTR [edi-0x7e39d979],bl
  4035e4:	mov    ebp,DWORD PTR [edi+ebp*4]
  4035e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035e8:	scas   al,BYTE PTR es:[edi]
  4035e9:	xor    al,0xa1
  4035eb:	fsub   DWORD PTR [ebp+0x40d1aa30]
  4035f1:	mov    edx,0x648d37ad
  4035f6:	jecxz  0x4035c2
  4035f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035f9:	pop    ss
  4035fa:	test   DWORD PTR [eax+0x5a],edi
  4035fd:	inc    ebp
  4035fe:	fld    TBYTE PTR [ecx]
  403600:	pop    esp
  403601:	jl     0x4035ee
  403603:	ins    DWORD PTR es:[edi],dx
  403604:	(bad)  
  403605:	fdivr  st(0),st
  403607:	dec    esp
  403608:	adc    eax,0x6ebc4925
  40360d:	adc    al,0x93
  40360f:	xchg   BYTE PTR [esi+ebp*1+0x1a],al
  403613:	int3   
  403614:	imul   esp,DWORD PTR [ebp+0x7a],0x33
  403618:	leave  
  403619:	sbb    eax,0x93edf69e
  40361e:	cld    
  40361f:	xchg   al,bh
  403621:	ins    BYTE PTR es:[edi],dx
  403622:	aas    
  403623:	shl    ecx,0x8
  403626:	pop    ds
  403627:	mov    DWORD PTR [edi],0x2cab9143
  40362d:	or     esi,DWORD PTR fs:[ecx]
  403630:	cmp    eax,0xbfec98ac
  403635:	retf   0x2e17
  403638:	(bad)  
  403639:	idiv   eax
  40363b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40363c:	adc    al,0x7e
  40363e:	(bad)  
  40363f:	cmp    eax,0xa3eb1c34
  403644:	push   ebp
  403645:	aas    
  403646:	adc    al,0x5
  403649:	sub    bh,al
  40364b:	fidiv  WORD PTR [ebp-0x73]
  40364e:	and    dl,bl
  403650:	out    0x50,al
  403652:	push   cs
  403653:	(bad)  
  403654:	out    0xcc,al
  403656:	in     eax,0x49
  403658:	sub    BYTE PTR [edi+0x73e871d9],al
  40365e:	(bad)  
  40365f:	ins    DWORD PTR es:[edi],dx
  403660:	repz (bad) 
  403662:	xchg   edi,eax
  403663:	lea    ebx,[eax-0x52855e92]
  403669:	xchg   edi,eax
  40366a:	(bad)  
  40366b:	in     al,0x53
  40366d:	loopne 0x40360f
  40366f:	cmp    al,0x76
  403671:	retf   
  403672:	pop    ss
  403673:	jno    0x40367a
  403675:	neg    cl
  403677:	cld    
  403678:	jae    0x40364d
  40367a:	add    DWORD PTR [esi+0x4],ebx
  40367d:	xchg   DWORD PTR [edx],ebx
  40367f:	sbb    BYTE PTR [esi-0x25f54086],dl
  403685:	(bad)  
  403686:	cld    
  403687:	mov    ch,0x33
  403689:	xor    al,0xac
  40368b:	stc    
  40368c:	jns    0x4036c1
  40368e:	inc    eax
  403690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403691:	mov    edi,0xbca734
  403696:	lods   al,BYTE PTR ds:[esi]
  403697:	neg    DWORD PTR [ebx+0xb1ab139]
  40369d:	or     eax,0x5050c597
  4036a2:	stc    
  4036a3:	sub    ecx,DWORD PTR [esi-0x73]
  4036a6:	aad    0xec
  4036a8:	sbb    cl,BYTE PTR [edx+eiz*8]
  4036ab:	outs   dx,DWORD PTR ds:[esi]
  4036ac:	fadd   DWORD PTR [ecx]
  4036ae:	sbb    BYTE PTR [ecx-0x59],bl
  4036b1:	dec    edx
  4036b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036b3:	mov    ebp,0x6cf985d3
  4036b8:	mov    ah,0x88
  4036ba:	adc    al,0xeb
  4036bc:	in     eax,dx
  4036bd:	mov    DWORD PTR [ebx],ebx
  4036bf:	jns    0x4036f6
  4036c1:	es mov bl,0xa4
  4036c4:	sub    ecx,DWORD PTR [edi]
  4036c6:	jbe    0x4036bf
  4036c8:	mov    esi,0xbbd7fc2a
  4036cd:	pop    ds
  4036ce:	mov    cl,0xb1
  4036d0:	mov    ds:0x7464beb5,eax
  4036d5:	daa    
  4036d6:	xor    dl,BYTE PTR [edx+0x32]
  4036d9:	jmp    0x4036f6
  4036db:	mov    eax,0xe6af516f
  4036e0:	addr16 mov ch,0x84
  4036e3:	stos   DWORD PTR es:[edi],eax
  4036e4:	jp     0x403713
  4036e6:	cmp    DWORD PTR [esi],ebx
  4036e8:	dec    ebx
  4036e9:	sar    BYTE PTR [eax-0x5ae166f3],cl
  4036ef:	and    eax,0xd10e3c4d
  4036f4:	loope  0x403763
  4036f6:	sbb    DWORD PTR [eax+0x3db23661],ebp
  4036fc:	(bad)  
  4036fd:	mov    bl,0x68
  4036ff:	mov    edi,0x305d6d52
  403704:	and    al,0x35
  403706:	into   
  403707:	mov    BYTE PTR [edx],al
  403709:	jnp    0x403745
  40370b:	ret    0x55c0
  40370e:	xchg   esp,eax
  40370f:	lea    eax,[edx]
  403711:	xchg   edi,eax
  403712:	mov    ebp,0x3152fd37
  403717:	push   eax
  403718:	sbb    bl,ah
  40371a:	pop    ebx
  40371b:	std    
  40371c:	gs daa 
  40371e:	call   0xc258:0xf90f2200
  403725:	and    al,0x57
  403727:	ror    edx,0xa1
  40372a:	inc    edi
  40372b:	dec    ebx
  40372c:	pusha  
  40372d:	scas   al,BYTE PTR es:[edi]
  40372e:	call   0x58a2:0x12861df1
  403735:	sbb    DWORD PTR [edx+eax*4],esi
  403738:	push   ss
  403739:	ss push ebp
  40373b:	xchg   esp,eax
  40373c:	in     eax,0x1b
  40373e:	inc    ebp
  40373f:	sub    al,0xc5
  403741:	push   es
  403742:	mov    ebx,0x2168a61b
  403747:	pusha  
  403748:	pop    es
  403749:	dec    esp
  40374a:	ins    DWORD PTR es:[edi],dx
  40374b:	sbb    cl,ah
  40374d:	jno    0x403714
  40374f:	or     BYTE PTR [ebp-0x61061e4],ah
  403755:	push   edx
  403756:	cwde   
  403757:	lea    ecx,[ecx+ebx*4-0x37]
  40375b:	and    cl,dl
  40375d:	jno    0x403767
  40375f:	aad    0xe6
  403761:	push   cs
  403762:	jmp    0x403700
  403764:	sar    DWORD PTR [ecx-0x4d],cl
  403767:	cmp    BYTE PTR [eax+0x3c],ch
  40376a:	xchg   ebp,eax
  40376b:	retf   0x25e2
  40376e:	dec    ebp
  40376f:	xchg   ebx,eax
  403770:	push   0x6b
  403772:	lods   al,BYTE PTR ds:[esi]
  403773:	pop    DWORD PTR [ebp-0x34]
  403776:	mov    dl,0xf6
  403778:	in     eax,dx
  403779:	pop    ds
  40377a:	es pop ebx
  40377c:	mov    ebp,0x5a68f670
  403781:	test   al,bl
  403783:	popa   
  403784:	mov    esp,0xb21c9f5f
  403789:	adc    edx,DWORD PTR [eax+ebp*4+0x44]
  40378d:	or     al,0x36
  40378f:	ficom  DWORD PTR [ebp+0x263e9ef6]
  403795:	jmp    0xd6eab7c4
  40379a:	inc    esi
  40379b:	test   BYTE PTR [eax+ebx*1],dh
  40379e:	jns    0x403815
  4037a0:	fcmove st,st(4)
  4037a2:	loop   0x4037a0
  4037a4:	out    0xa2,al
  4037a6:	or     ebp,esp
  4037a8:	hlt    
  4037a9:	or     DWORD PTR [edi+0x70e11d76],edx
  4037af:	xchg   ecx,eax
  4037b0:	mov    ecx,0x78dffc2f
  4037b5:	fiadd  DWORD PTR [ebp+0x0]
  4037b8:	es jle 0x40374a
  4037bb:	inc    esp
  4037bc:	loop   0x403833
  4037be:	mov    ah,0x88
  4037c0:	jg     0x4037e3
  4037c2:	adc    eax,0x6d98466a
  4037c7:	jle    0x4037a7
  4037c9:	pop    edx
  4037ca:	and    esp,DWORD PTR [ebx]
  4037cc:	xor    eax,esi
  4037ce:	add    eax,edi
  4037d0:	mov    DWORD PTR [ebp-0x80],eax
  4037d3:	lea    eax,[ebp-0x80]
  4037d6:	push   eax
  4037d7:	mov    eax,DWORD PTR [ebp+0xc]
  4037da:	xor    eax,esi
  4037dc:	add    eax,edi
  4037de:	push   eax
  4037df:	mov    eax,ds:0x42830f
  4037e4:	push   0x428265
  4037e9:	push   DWORD PTR [eax]
  4037eb:	call   0x4236a9
  4037f0:	mov    ecx,DWORD PTR [ebp-0x10]
  4037f3:	mov    eax,DWORD PTR [ebp-0x14]
  4037f6:	mov    DWORD PTR [ebp-0x28],eax
  4037f9:	mov    DWORD PTR [ebp-0x20],0xf89c8533
  403800:	mov    edx,0xf89c85b1
  403805:	mov    DWORD PTR [ebp-0x20],edx
  403808:	lea    eax,[edx-0x1]
  40380b:	mov    DWORD PTR [ebp-0x20],eax
  40380e:	mov    DWORD PTR [ebp-0x8],edx
  403811:	mov    DWORD PTR [ebp-0x10],0xf89c85b2
  403818:	mov    edx,DWORD PTR [ebp-0x8]
  40381b:	xor    edx,esi
  40381d:	mov    ebx,0xffcd8f14
  403822:	sub    ebx,edx
  403824:	mov    DWORD PTR [ebp-0xc],ebx
  403827:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  40382e:	mov    edx,DWORD PTR [ebp-0x10]
  403831:	mov    DWORD PTR [ebp-0x24],ecx
  403834:	cmp    edx,eax
  403836:	je     0x4080be
  40383c:	mov    eax,DWORD PTR [ebp-0x8]
  40383f:	mov    edx,DWORD PTR [ebp-0x8]
  403842:	xor    eax,esi
  403844:	xor    edx,esi
  403846:	lea    ebx,[eax+edx*1+0x64e5d8]
  40384d:	mov    eax,DWORD PTR [ebp-0xc]
  403850:	xor    edx,edx
  403852:	div    ebx
  403854:	mov    eax,DWORD PTR [ebp-0x10]
  403857:	mov    ebx,DWORD PTR [ebp-0x8]
  40385a:	xor    eax,esi
  40385c:	xor    ebx,esi
  40385e:	jmp    0x405c1c
  403863:	mov    edi,0x41446183
  403868:	test   BYTE PTR [ebx-0x196ad685],cl
  40386e:	call   0x5fdd:0x6034a931
  403875:	jp     0x4038f1
  403877:	fstp   QWORD PTR [edi+0x7a]
  40387a:	jp     0x40384d
  40387c:	mov    al,ds:0xf4d1d541
  403881:	or     ecx,DWORD PTR [edx-0x32c96fb1]
  403887:	mov    edx,0xe4b48ca2
  40388c:	repz fild DWORD PTR [ebx-0x2a]
  403890:	mov    ecx,0x63804d32
  403895:	or     BYTE PTR [esp+edi*8-0x5db8f6f3],ah
  40389c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40389d:	mov    BYTE PTR [eax-0x6b],ah
  4038a0:	icebp  
  4038a1:	in     al,0xa6
  4038a3:	cs int3 
  4038a5:	push   edx
  4038a6:	shl    BYTE PTR [ebp-0x65],cl
  4038a9:	stos   DWORD PTR es:[edi],eax
  4038aa:	or     esp,esp
  4038ac:	inc    eax
  4038ad:	jae    0x40386f
  4038af:	and    BYTE PTR [edi],ch
  4038b1:	rcl    bh,cl
  4038b3:	mov    dl,0xa9
  4038b5:	jle    0x4038c4
  4038b7:	adc    BYTE PTR [eax+0x5],al
  4038ba:	adc    eax,0xca58c8fb
  4038bf:	and    DWORD PTR [ebx-0xf],ebp
  4038c2:	pop    esi
  4038c3:	adc    BYTE PTR [ebp+0x77],al
  4038c6:	inc    esp
  4038c7:	aam    0x72
  4038c9:	sahf   
  4038ca:	xchg   BYTE PTR [edx+0xe],al
  4038cd:	sbb    BYTE PTR [ebx-0xe],bh
  4038d0:	div    DWORD PTR [edx+0x12]
  4038d3:	push   0xf50a9862
  4038d8:	xchg   ebp,eax
  4038d9:	out    dx,eax
  4038da:	mov    ds:0xc40bc461,al
  4038df:	repz das 
  4038e1:	xchg   ebp,eax
  4038e2:	ret    0x8adb
  4038e5:	mov    BYTE PTR [edx],0xf7
  4038e8:	sar    DWORD PTR [ecx],1
  4038ea:	test   DWORD PTR [edx+0x21],esi
  4038ed:	loope  0x4038bd
  4038ef:	lahf   
  4038f0:	and    DWORD PTR [ebx+0x2c358832],edx
  4038f6:	test   eax,0x9ce789b0
  4038fb:	shl    DWORD PTR [esi+edx*2-0x7b264be4],cl
  403902:	(bad)  
  403903:	mov    eax,ds:0xadab8964
  403908:	(bad)  
  40390a:	into   
  40390b:	mov    cl,0xe3
  40390d:	add    eax,0x24ee4c22
  403912:	fwait
  403913:	mov    al,ds:0x8bc546e7
  403918:	or     DWORD PTR [edx],edi
  40391a:	out    0x60,eax
  40391c:	das    
  40391d:	fld    TBYTE PTR [edi+0x7b]
  403920:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403921:	dec    ecx
  403922:	int    0x86
  403924:	and    BYTE PTR [ebx],cl
  403926:	jle    0x4038b5
  403928:	outs   dx,DWORD PTR ds:[esi]
  403929:	lea    edi,[ebp-0x4279dd6]
  40392f:	cmc    
  403930:	cs out dx,eax
  403932:	enter  0x973b,0x42
  403936:	(bad)  
  403938:	cmc    
  403939:	(bad)  
  40393a:	push   esp
  40393b:	sub    al,0xd4
  40393d:	stc    
  40393e:	(bad)  
  403940:	outs   dx,DWORD PTR ds:[esi]
  403941:	mov    eax,ds:0xe5ffe6a9
  403946:	in     eax,dx
  403947:	inc    ebp
  403948:	inc    esi
  403949:	sub    BYTE PTR [ebp+0x583f76e4],bl
  40394f:	ins    BYTE PTR es:[edi],dx
  403950:	fiadd  WORD PTR [ebx]
  403952:	xchg   DWORD PTR [eax-0x4a],eax
  403955:	sar    BYTE PTR [ebp-0x708db7b3],1
  40395b:	sub    al,0xf3
  40395d:	xchg   ebp,eax
  40395e:	cmc    
  40395f:	into   
  403960:	xchg   edi,eax
  403961:	ror    ch,1
  403963:	mov    eax,0x5e482e3e
  403968:	adc    bh,BYTE PTR [ebx-0x64]
  40396b:	cli    
  40396c:	gs xor esp,ecx
  40396f:	lock or BYTE PTR [bp+si-0x13bd],dl
  403975:	push   es
  403976:	out    0xc9,eax
  403978:	arpl   WORD PTR [esi-0x18],cx
  40397b:	clc    
  40397c:	aam    0xab
  40397e:	jnp    0x40395b
  403980:	sar    BYTE PTR [ebx],1
  403982:	xchg   edi,eax
  403983:	imul   edx,eax,0x8ae2eb8f
  403989:	(bad)  
  40398a:	retf   0x784a
  40398d:	mov    al,ds:0x8c9b2936
  403992:	cmp    BYTE PTR ds:0x11186554,dl
  403998:	lahf   
  403999:	and    eax,0x9ad91da
  40399e:	jno    0x40393a
  4039a0:	jle    0x4039d1
  4039a2:	shl    BYTE PTR ds:0x2d6b1ec2,0x58
  4039a9:	jne    0x403a13
  4039ab:	mov    al,0x21
  4039ad:	push   0x457ae036
  4039b2:	jae    0x403991
  4039b4:	push   esi
  4039b5:	into   
  4039b6:	adc    bl,ah
  4039b8:	daa    
  4039b9:	jb     0x4039fc
  4039bb:	mov    ds:0xe7b0b43e,eax
  4039c0:	into   
  4039c1:	ret    
  4039c2:	xchg   ecx,eax
  4039c3:	pop    es
  4039c4:	nop
  4039c5:	fstp   TBYTE PTR [edx]
  4039c7:	sbb    eax,0xcb680b4f
  4039cc:	out    dx,al
  4039cd:	add    cl,cl
  4039cf:	nop
  4039d0:	cmp    BYTE PTR [eax-0x51],dh
  4039d3:	sub    ebx,DWORD PTR [edx+ecx*4]
  4039d6:	pop    esi
  4039d7:	lock int3 
  4039d9:	cmp    bl,ah
  4039db:	push   ebp
  4039dc:	and    eax,0xca4f52fc
  4039e1:	xchg   DWORD PTR [esi-0x47],ecx
  4039e4:	fisttp WORD PTR [edi]
  4039e6:	inc    ebx
  4039e7:	stc    
  4039e8:	sub    BYTE PTR [esi+0x3bc4eb1f],dl
  4039ee:	iret   
  4039ef:	mov    al,ds:0x235d18c1
  4039f4:	shr    DWORD PTR [edi+0x75],1
  4039f7:	sbb    al,0x8d
  4039f9:	sub    DWORD PTR [edx],ebp
  4039fb:	or     al,0x17
  4039fd:	add    esi,ebp
  4039ff:	add    edx,ecx
  403a01:	sbb    al,0x1a
  403a03:	mov    eax,0x3d7b935e
  403a08:	xor    al,0xa8
  403a0a:	and    eax,0x3dab3fbb
  403a0f:	das    
  403a10:	(bad)  
  403a12:	mov    al,0xc3
  403a14:	push   ecx
  403a15:	and    DWORD PTR [edi],ebp
  403a17:	stos   DWORD PTR es:[edi],eax
  403a18:	dec    esp
  403a19:	jae    0x4039a8
  403a1b:	iret   
  403a1c:	daa    
  403a1d:	fldl2e 
  403a1f:	fs fucomip st,st(4)
  403a22:	pop    es
  403a23:	nop
  403a24:	pop    eax
  403a25:	xor    DWORD PTR [ebx],esi
  403a27:	xor    eax,0x28213e8
  403a2c:	adc    bl,dl
  403a2e:	push   ebx
  403a2f:	dec    edi
  403a30:	inc    ebx
  403a31:	jo     0x4039c0
  403a33:	xlat   BYTE PTR ds:[ebx]
  403a34:	aaa    
  403a35:	(bad)  
  403a36:	cmp    al,0xa1
  403a38:	jnp    0x4039fa
  403a3a:	mov    bh,0x31
  403a3c:	arpl   WORD PTR [esi+0x622ca395],dx
  403a42:	xchg   edx,eax
  403a43:	not    DWORD PTR [esi-0x30536c88]
  403a49:	gs jae 0x403a83
  403a4c:	xor    ebx,ebp
  403a4e:	xor    cl,BYTE PTR [eax+0xe]
  403a51:	jge    0x4039e7
  403a53:	int3   
  403a54:	lahf   
  403a55:	imul   BYTE PTR [ecx]
  403a57:	sbb    ecx,DWORD PTR [edi+eax*1-0x6e]
  403a5b:	out    0x5,eax
  403a5d:	fs jnp 0x403a44
  403a60:	cmc    
  403a61:	leavew 
  403a63:	inc    edi
  403a64:	sar    edi,0xe5
  403a67:	jp     0x403a6d
  403a69:	cmp    DWORD PTR [ecx-0x1d],esp
  403a6c:	stc    
  403a6d:	sub    al,0x73
  403a6f:	cs push edx
  403a71:	cli    
  403a72:	cli    
  403a73:	rcl    esi,cl
  403a75:	sar    DWORD PTR [ebx-0x5b],cl
  403a78:	popa   
  403a79:	retf   
  403a7a:	or     al,0x15
  403a7c:	sar    DWORD PTR [edi],0xa1
  403a7f:	test   eax,0xfa32e308
  403a84:	stos   DWORD PTR es:[edi],eax
  403a85:	mov    esi,0x1bb63171
  403a8a:	push   0xb531ed80
  403a8f:	outs   dx,DWORD PTR ds:[esi]
  403a90:	push   ds
  403a91:	xchg   esp,eax
  403a92:	fnstenv [ecx+0x2b]
  403a95:	cdq    
  403a96:	in     al,dx
  403a97:	in     al,dx
  403a98:	mov    ebx,0x1446e4f4
  403a9d:	push   esi
  403a9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a9f:	call   0x1ea2c8e1
  403aa4:	inc    eax
  403aa5:	iret   
  403aa6:	outs   dx,BYTE PTR ds:[esi]
  403aa7:	enter  0xfa36,0x0
  403aab:	lea    edi,[edx+0x14e772cb]
  403ab1:	inc    edx
  403ab2:	mov    cl,0x51
  403ab4:	dec    eax
  403ab5:	adc    DWORD PTR [ecx+0x472cbb10],esp
  403abb:	xlat   BYTE PTR ds:[ebx]
  403abc:	clc    
  403abd:	xor    esp,DWORD PTR [bp-0x2e4c]
  403ac2:	aas    
  403ac3:	mov    esp,0xe6078388
  403ac8:	adc    ecx,DWORD PTR [esi+0x71bbc4ce]
  403ace:	lods   eax,DWORD PTR ds:[esi]
  403acf:	push   eax
  403ad0:	cs xchg esp,eax
  403ad2:	adc    eax,0x97772932
  403ad7:	cli    
  403ad8:	or     eax,0x7a6c22d3
  403add:	adc    BYTE PTR [ecx-0x3785d2e1],cl
  403ae3:	add    al,ah
  403ae5:	push   esp
  403ae6:	stos   BYTE PTR es:[edi],al
  403ae7:	in     al,0x9b
  403ae9:	mov    ecx,0x9df92ae3
  403aee:	inc    edx
  403aef:	mov    edx,0x720f6442
  403af4:	mov    ebx,0x7b6ba3dc
  403af9:	mov    eax,0x730ea70c
  403afe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403aff:	int3   
  403b00:	loop   0x403a98
  403b02:	icebp  
  403b03:	adc    al,0x6f
  403b05:	jecxz  0x403b19
  403b07:	jo     0x403b59
  403b09:	mov    ebp,0xe5b33043
  403b0e:	cmp    BYTE PTR [esi+ebp*8],al
  403b11:	xchg   ebx,eax
  403b12:	inc    esp
  403b13:	call   0xb783cd7d
  403b18:	loop   0x403b1f
  403b1a:	mov    ?,WORD PTR [edx]
  403b1c:	sub    esi,DWORD PTR ds:0x148f75ab
  403b22:	mov    DWORD PTR ds:0x2db21b3,esp
  403b28:	das    
  403b29:	test   al,0x81
  403b2b:	and    DWORD PTR [ecx+0x43],ecx
  403b2e:	jmp    0x403ad3
  403b30:	popa   
  403b31:	sbb    ah,BYTE PTR [ebx+0x199a5cb3]
  403b37:	mov    WORD PTR [esi],gs
  403b39:	sub    BYTE PTR [edx+esi*2+0x2f],0xc7
  403b3e:	jae    0x403b98
  403b40:	sti    
  403b41:	test   BYTE PTR [edx-0x5a],bh
  403b44:	mov    cl,0x1c
  403b46:	mov    esi,0x75b5d67b
  403b4b:	adc    ebx,DWORD PTR [edx-0x17d65cf6]
  403b51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b52:	mov    ecx,0x53c49080
  403b57:	xchg   esi,eax
  403b58:	jmp    0x8716:0x9c83092
  403b5f:	sbb    ch,dl
  403b61:	push   ebp
  403b62:	out    0x18,eax
  403b64:	cmp    al,0xf9
  403b66:	mov    ebx,0xe846e238
  403b6b:	sbb    al,0x79
  403b6d:	sbb    eax,0x4526917f
  403b72:	inc    cl
  403b74:	add    ebx,DWORD PTR [edi-0x4a]
  403b77:	mov    esi,0x8452835c
  403b7c:	test   al,0xd0
  403b7e:	ins    BYTE PTR es:[edi],dx
  403b7f:	leave  
  403b80:	dec    edx
  403b81:	or     al,0x51
  403b83:	cli    
  403b84:	daa    
  403b85:	fdivr  QWORD PTR [ebp+0x1d]
  403b88:	(bad)  
  403b89:	arpl   dx,di
  403b8b:	adc    ecx,esi
  403b8d:	cmp    al,0x39
  403b8f:	and    eax,0x51fe0925
  403b94:	or     ecx,0x1e
  403b97:	cmp    ah,bh
  403b99:	xchg   esi,eax
  403b9a:	lock mov bh,0x40
  403b9d:	ficom  WORD PTR [eax]
  403b9f:	inc    ebx
  403ba0:	cmp    ecx,esp
  403ba2:	sbb    eax,ecx
  403ba4:	loop   0x403b79
  403ba6:	xchg   esi,eax
  403ba7:	jns    0x403b68
  403ba9:	lahf   
  403baa:	jmp    0x403b70
  403bac:	mov    WORD PTR [edi+ebx*4],ds
  403baf:	daa    
  403bb0:	xrelease mov BYTE PTR [ebx],bl
  403bb3:	adc    BYTE PTR [ecx+0x36e8a6f5],dl
  403bb9:	mov    cl,BYTE PTR [ebx-0x57]
  403bbc:	jp     0x403be7
  403bbe:	(bad)  
  403bbf:	and    BYTE PTR ds:0x53bacaba,ah
  403bc5:	pop    esp
  403bc6:	xchg   edx,eax
  403bc7:	jmp    0xbb08:0x4cac25ec
  403bce:	push   ss
  403bcf:	outs   dx,BYTE PTR ds:[esi]
  403bd0:	push   ss
  403bd1:	mov    ah,0x18
  403bd3:	inc    esi
  403bd4:	mov    al,0x26
  403bd6:	ror    DWORD PTR [edi+esi*1],cl
  403bd9:	in     eax,0x57
  403bdb:	aas    
  403bdc:	sbb    eax,0x276ec877
  403be1:	int    0x30
  403be3:	push   ebp
  403be4:	inc    edi
  403be5:	add    al,0xa9
  403be7:	pop    ecx
  403be8:	xchg   ebx,eax
  403be9:	imul   ebp,DWORD PTR [ebx-0x1b],0xead4573e
  403bf0:	xlat   BYTE PTR ds:[ebx]
  403bf1:	jo     0x403b94
  403bf3:	in     eax,0x68
  403bf5:	sahf   
  403bf6:	fmul   QWORD PTR [esp+ebp*8-0x44708e9b]
  403bfd:	push   es
  403bfe:	xchg   ecx,eax
  403bff:	dec    esi
  403c00:	pop    ds
  403c01:	push   edx
  403c02:	push   cs
  403c03:	and    al,BYTE PTR [eax]
  403c05:	repnz inc ebp
  403c07:	push   edi
  403c08:	dec    ecx
  403c09:	shl    esi,0x17
  403c0c:	mov    al,ds:0xfc60b0e3
  403c11:	pushf  
  403c12:	aaa    
  403c13:	mov    bl,0x1e
  403c15:	lock sbb bh,BYTE PTR [eax-0x466252b1]
  403c1c:	push   ss
  403c1d:	data16 adc BYTE PTR [eax-0x3531f6c9],dh
  403c24:	outs   dx,BYTE PTR ds:[esi]
  403c25:	mov    al,ss:0xb0351f5c
  403c2b:	adc    DWORD PTR [edi],ebp
  403c2d:	out    dx,al
  403c2e:	dec    esi
  403c2f:	sub    BYTE PTR [ebp+0x1e],dh
  403c32:	stc    
  403c33:	mov    WORD PTR [ebx-0x6f],ds
  403c36:	loop   0x403bef
  403c38:	(bad)  
  403c39:	stos   DWORD PTR es:[edi],eax
  403c3a:	fcomp  DWORD PTR [ebx+0x23]
  403c3d:	pcmpgtd mm7,mm3
  403c40:	xchg   edx,eax
  403c41:	pop    ss
  403c42:	mov    ch,0x27
  403c44:	test   BYTE PTR [edx-0x1eade051],0x45
  403c4b:	inc    edi
  403c4c:	dec    edi
  403c4d:	push   esi
  403c4e:	dec    edx
  403c4f:	cwde   
  403c50:	xchg   edx,eax
  403c51:	dec    eax
  403c52:	test   BYTE PTR [ecx+edx*2+0x671d6fbf],bh
  403c59:	cdq    
  403c5a:	(bad)  
  403c5d:	jnp    0x403c8b
  403c5f:	ins    DWORD PTR es:[edi],dx
  403c60:	retf   
  403c61:	sbb    ah,BYTE PTR gs:[ecx]
  403c64:	push   cs
  403c65:	repnz loop 0x403cbb
  403c68:	cdq    
  403c69:	out    dx,al
  403c6a:	aam    0xae
  403c6c:	outs   dx,BYTE PTR ds:[esi]
  403c6d:	fsub   DWORD PTR [ecx+0x0]
  403c70:	mov    ch,0x4c
  403c72:	scas   eax,DWORD PTR es:[edi]
  403c73:	add    DWORD PTR [eax+0x75c3c97e],edi
  403c79:	mov    ?,WORD PTR [ebp-0x34]
  403c7c:	xchg   esi,eax
  403c7d:	pop    esi
  403c7e:	push   ebx
  403c7f:	mov    ch,0xea
  403c81:	shr    BYTE PTR [eax-0x2f],1
  403c84:	repnz stc 
  403c86:	mov    ecx,0xf582e5cb
  403c8b:	dec    edi
  403c8c:	in     al,0xbe
  403c8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c8f:	aas    
  403c90:	retf   
  403c91:	dec    edi
  403c92:	mov    ds:0x558a675d,eax
  403c97:	dec    eax
  403c98:	mov    ebx,0x4411329d
  403c9d:	out    dx,al
  403c9e:	sbb    DWORD PTR [esi],edx
  403ca0:	xchg   edi,eax
  403ca1:	dec    ecx
  403ca2:	stos   DWORD PTR es:[edi],eax
  403ca3:	mov    dl,BYTE PTR [ebp-0x47184080]
  403ca9:	mov    edi,0xd0bbdcc8
  403cae:	aas    
  403caf:	sbb    ebp,DWORD PTR [edi]
  403cb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cb2:	adc    ch,BYTE PTR [edi+eiz*4]
  403cb5:	(bad)  
  403cb7:	shl    DWORD PTR [ebx],0x3a
  403cba:	(bad)  
  403cbb:	lods   al,BYTE PTR ds:[esi]
  403cbc:	ss mov ebx,0x2bdcc108
  403cc2:	stc    
  403cc3:	jno    0x403d20
  403cc5:	push   0x304639ce
  403cca:	mov    eax,ds:0x3ef98200
  403ccf:	sbb    al,0xcb
  403cd1:	or     eax,0x7cf839d7
  403cd6:	in     al,0xd1
  403cd8:	or     BYTE PTR [edi-0x4b394d9],dh
  403cde:	mov    ecx,0xb92bbc52
  403ce3:	xor    DWORD PTR [edi-0x1e],eax
  403ce6:	mov    dh,0xf2
  403ce8:	and    bh,dl
  403cea:	mov    ah,0xff
  403cec:	xchg   edi,eax
  403ced:	pusha  
  403cee:	adc    ch,BYTE PTR [ecx-0x4c]
  403cf1:	in     eax,0x3c
  403cf3:	pop    edi
  403cf4:	adc    BYTE PTR [ecx-0x25ec9225],ah
  403cfa:	jg     0x403d2d
  403cfc:	pop    ss
  403cfd:	inc    ecx
  403cfe:	dec    edi
  403cff:	stos   BYTE PTR es:[edi],al
  403d00:	adc    bh,BYTE PTR [esi+0x78]
  403d03:	loopne 0x403d2d
  403d05:	mov    DWORD PTR [esi],eax
  403d07:	fbld   TBYTE PTR [edx]
  403d09:	push   0x11dcbf49
  403d0e:	imul   esp,esp,0xdd543b1a
  403d14:	add    BYTE PTR [edi-0x26],al
  403d17:	or     esp,DWORD PTR [ebx]
  403d19:	dec    ebx
  403d1a:	call   0x578c3e73
  403d1f:	mov    eax,ds:0x275a52bd
  403d24:	pop    es
  403d25:	xchg   ebp,eax
  403d26:	dec    edx
  403d27:	sti    
  403d28:	push   edx
  403d29:	fwait
  403d2a:	mov    edx,0x30ccb44b
  403d2f:	scas   al,BYTE PTR es:[edi]
  403d30:	sub    DWORD PTR [eax+edi*4],0x1d114855
  403d37:	test   DWORD PTR [edx+0x3a],esi
  403d3a:	inc    esp
  403d3b:	inc    eax
  403d3c:	add    eax,0xd7d1a9fe
  403d41:	rcr    BYTE PTR [ebx+0x7392cdc4],cl
  403d47:	push   ds
  403d48:	in     eax,0x61
  403d4a:	pop    ss
  403d4b:	xchg   ecx,eax
  403d4c:	jge    0x403d44
  403d4e:	mov    ebx,0x948b2114
  403d53:	scas   al,BYTE PTR es:[edi]
  403d54:	adc    DWORD PTR [edx-0x22],eax
  403d57:	mov    edx,0x12967a7b
  403d5c:	scas   al,BYTE PTR es:[edi]
  403d5d:	arpl   WORD PTR [eax+esi*8],sp
  403d60:	pusha  
  403d61:	es jmp 0x195dd58d
  403d67:	sub    eax,0x90d75d19
  403d6c:	cdq    
  403d6d:	jb     0x403d95
  403d6f:	and    BYTE PTR [eax+ecx*4-0x2fa48258],dl
  403d76:	sti    
  403d77:	pop    eax
  403d78:	mov    al,ds:0xeee27794
  403d7d:	pop    edi
  403d7e:	sti    
  403d7f:	mov    esp,0xb105787d
  403d84:	shr    bl,1
  403d86:	std    
  403d87:	or     ch,BYTE PTR [esi+0x40]
  403d8a:	idiv   DWORD PTR [edi-0x60]
  403d8d:	add    ebp,0xfffffffe
  403d90:	mov    ebx,0x4263cd0e
  403d95:	dec    ecx
  403d96:	push   0x73
  403d98:	out    dx,eax
  403d99:	aam    0xe0
  403d9b:	push   ebx
  403d9c:	inc    esi
  403d9d:	and    ebp,0x11998163
  403da3:	out    dx,eax
  403da4:	push   edx
  403da5:	pop    esi
  403da6:	mov    ah,0xdf
  403da8:	shr    BYTE PTR [ebp-0x5e22689d],0x45
  403daf:	push   0xdab6e472
  403db4:	adc    edx,ecx
  403db6:	shl    bh,1
  403db8:	sbb    al,0xc2
  403dba:	mov    eax,0xff1fcae3
  403dbf:	mov    dh,0x84
  403dc1:	into   
  403dc2:	loop   0x403e0d
  403dc4:	std    
  403dc5:	cmc    
  403dc6:	ja     0x403d93
  403dc8:	(bad)  
  403dc9:	arpl   WORD PTR [ebx+0x7],ax
  403dcc:	(bad)  
  403dcd:	jo     0x403e23
  403dcf:	sti    
  403dd0:	sar    DWORD PTR [edx],cl
  403dd2:	repz mov edx,0xc1641aa5
  403dd8:	bnd jmp 0x403dbd
  403ddb:	jmp    0x5f5f:0xc06b81ff
  403de2:	lods   eax,DWORD PTR ds:[esi]
  403de3:	and    al,0xb
  403de5:	ins    DWORD PTR es:[edi],dx
  403de6:	int    0x69
  403de8:	and    edx,esi
  403dea:	xchg   ecx,eax
  403deb:	sbb    BYTE PTR [esi-0x75],bh
  403dee:	sbb    bh,bh
  403df0:	adc    esi,DWORD PTR [eax]
  403df2:	xor    bl,BYTE PTR [ebx+0x73b5011b]
  403df8:	mov    edx,0xef94f4ee
  403dfd:	mov    ebx,eax
  403dff:	setle  BYTE PTR [edi]
  403e02:	push   ds
  403e03:	pop    ebx
  403e04:	sbb    eax,DWORD PTR [ebx-0x5983d983]
  403e0a:	test   DWORD PTR [esi-0x47901285],ebx
  403e10:	jbe    0x403e4a
  403e12:	bound  esp,QWORD PTR [ecx-0x2d25ad49]
  403e18:	lahf   
  403e19:	div    BYTE PTR [eax-0x68368869]
  403e1f:	lds    edi,FWORD PTR [ebx-0x53f7d780]
  403e25:	cld    
  403e26:	adc    ch,0x3b
  403e29:	fnsave [eax-0x8]
  403e2c:	imul   edx,ecx,0xffffffca
  403e2f:	and    dh,ch
  403e31:	outs   dx,DWORD PTR ds:[esi]
  403e32:	(bad)  
  403e33:	cmpxchg BYTE PTR [edx+0x2a316c0e],bh
  403e3a:	xchg   BYTE PTR [edi-0xa551e15],bh
  403e40:	stc    
  403e41:	push   ebx
  403e42:	xchg   edx,eax
  403e43:	out    0x22,eax
  403e45:	dec    edi
  403e46:	xchg   ebp,eax
  403e47:	shl    bl,0x36
  403e4a:	add    al,0xf9
  403e4c:	xchg   ecx,eax
  403e4d:	ja     0x403eb1
  403e4f:	retf   0x7b4c
  403e52:	mov    ah,BYTE PTR [edi+0x2bebe4ba]
  403e58:	cmp    bl,dh
  403e5a:	stc    
  403e5b:	pop    ebp
  403e5c:	dec    esi
  403e5d:	repz not BYTE PTR ss:[ecx]
  403e61:	lods   eax,DWORD PTR ds:[esi]
  403e62:	cwde   
  403e63:	add    al,0x28
  403e65:	jmp    0x403dfb
  403e67:	push   0xffffff80
  403e69:	or     eax,0x9f1a2a03
  403e6e:	ja     0x403e81
  403e70:	push   edi
  403e71:	int    0x9
  403e73:	mov    al,ds:0xae14c9d1
  403e78:	adc    eax,0x722ecd07
  403e7d:	mov    dh,0x73
  403e7f:	cmp    ch,BYTE PTR [ebx-0x33]
  403e82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e83:	sub    esi,esi
  403e85:	fxch   st(2)
  403e87:	adc    bh,bh
  403e89:	shl    esp,0x79
  403e8c:	int    0x4f
  403e8e:	xor    dh,BYTE PTR [edi+ecx*1-0x19]
  403e92:	retf   0x1864
  403e95:	loope  0x403e5b
  403e97:	sbb    al,0x70
  403e99:	inc    ecx
  403e9a:	cmp    edi,DWORD PTR [eax*8-0x639ca7e5]
  403ea1:	add    ebp,ebp
  403ea3:	push   eax
  403ea4:	ficomp DWORD PTR [ebx+edx*1-0x4b]
  403ea8:	mov    dl,BYTE PTR [edi]
  403eaa:	push   ebp
  403eab:	ins    DWORD PTR es:[edi],dx
  403eac:	add    DWORD PTR [esi],0xa3862174
  403eb2:	cmp    al,0xa2
  403eb4:	rcl    BYTE PTR [ebp-0x25],cl
  403eb7:	mov    BYTE PTR [esi+0x46],ch
  403eba:	imul   eax,DWORD PTR [edx-0x73],0x2f
  403ebe:	pushf  
  403ebf:	popf   
  403ec0:	rcl    BYTE PTR [edx+ebp*4],1
  403ec3:	or     ch,BYTE PTR [ecx-0x4bf3abf]
  403ec9:	repnz inc edx
  403ecb:	jecxz  0x403f33
  403ecd:	retf   0xa0d7
  403ed0:	call   FWORD PTR [edx-0x25]
  403ed3:	or     al,0xb4
  403ed5:	xlat   BYTE PTR ds:[ebx]
  403ed6:	jns    0x403ea9
  403ed8:	mov    esi,0xc8fdc89b
  403edd:	push   cs
  403ede:	sbb    cl,bh
  403ee0:	or     eax,0xc88771f6
  403ee5:	fwait
  403ee6:	push   ebx
  403ee7:	add    DWORD PTR [esi+edx*2-0x6],eax
  403eeb:	mov    ebp,0x83db083f
  403ef0:	cmp    dl,al
  403ef2:	dec    ebx
  403ef3:	fmulp  st(1),st
  403ef5:	sbb    ebp,0x6c4421e
  403efb:	fmul   DWORD PTR [eax]
  403efd:	xchg   edi,eax
  403efe:	jecxz  0x403ea1
  403f00:	(bad)  
  403f02:	push   0xffffffbb
  403f04:	lock push esp
  403f06:	out    0xc1,al
  403f08:	test   eax,0x3519dc73
  403f0d:	pop    eax
  403f0e:	and    bl,BYTE PTR [ebx+0x37d86753]
  403f14:	outs   dx,DWORD PTR ds:[esi]
  403f15:	jecxz  0x403f60
  403f17:	xchg   DWORD PTR [eax+0x1eb4e32],esp
  403f1d:	mov    ebx,0xac9c49ef
  403f22:	sbb    BYTE PTR [esi],bh
  403f24:	sub    ah,BYTE PTR [esi-0x79]
  403f27:	ss jb  0x403ec0
  403f2a:	xor    al,0xea
  403f2c:	iret   
  403f2d:	add    al,0x3d
  403f2f:	enter  0x5e9e,0x5
  403f33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f34:	mov    ch,bh
  403f36:	nop
  403f37:	adc    DWORD PTR [esi+esi*4],edx
  403f3a:	lds    ecx,FWORD PTR ds:0x5f67407
  403f40:	jp     0x403faf
  403f42:	cdq    
  403f43:	dec    eax
  403f44:	lea    ecx,[ecx+0x4c]
  403f47:	jae    0x403efa
  403f49:	pop    edx
  403f4a:	or     esi,esi
  403f4c:	mov    edi,0xf9774878
  403f51:	imul   esp,DWORD PTR [edx+eiz*8+0x6bcce776],0xecbbb244
  403f5c:	mov    esi,0xdb44cc9f
  403f61:	or     BYTE PTR [esi],bh
  403f63:	imul   ebp,DWORD PTR [ecx],0xf2b74691
  403f69:	xor    BYTE PTR [ebp-0x80],bl
  403f6c:	pop    dx
  403f6e:	gs xchg edx,eax
  403f70:	daa    
  403f71:	xor    al,0xcb
  403f73:	lods   eax,DWORD PTR ds:[esi]
  403f74:	mov    ds:0x7e975885,eax
  403f79:	mov    eax,ds:0x731ceadd
  403f7e:	add    edi,DWORD PTR [edi-0x8]
  403f81:	in     eax,dx
  403f82:	int3   
  403f83:	cmc    
  403f84:	outs   dx,BYTE PTR ds:[esi]
  403f85:	adc    BYTE PTR [ecx+esi*1],al
  403f88:	imul   esi,DWORD PTR ds:[ebp+0x5d],0x3c2b15d3
  403f90:	aas    
  403f91:	sub    al,0x4b
  403f93:	xchg   edi,eax
  403f94:	push   edx
  403f95:	out    dx,al
  403f96:	add    BYTE PTR [edi-0x5ab5a32d],ch
  403f9c:	xchg   ecx,eax
  403f9d:	sbb    al,0x14
  403f9f:	mov    ss,WORD PTR [esi-0x7a]
  403fa2:	lock adc ah,dh
  403fa5:	mov    dl,0x8a
  403fa7:	xlat   BYTE PTR ds:[ebx]
  403fa8:	(bad)  
  403fa9:	xor    ecx,DWORD PTR [edi-0x75dddb2f]
  403faf:	out    dx,al
  403fb0:	push   cs
  403fb1:	push   edi
  403fb2:	in     eax,dx
  403fb3:	sub    dh,ah
  403fb5:	iret   
  403fb6:	cmc    
  403fb7:	xchg   DWORD PTR [eax-0x4d],eax
  403fba:	fwait
  403fbb:	ins    BYTE PTR es:[edi],dx
  403fbc:	add    eax,0xb930eafc
  403fc1:	xchg   si,ax
  403fc3:	(bad)  
  403fc4:	scas   al,BYTE PTR es:[edi]
  403fc5:	iret   
  403fc6:	mov    ebx,0x83b02233
  403fcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fcc:	push   esi
  403fcd:	pop    eax
  403fce:	cmc    
  403fcf:	sbb    DWORD PTR [edx-0x19f4eb62],0xffffffcb
  403fd6:	xchg   ebp,eax
  403fd7:	stc    
  403fd8:	jo     0x403f66
  403fda:	sbb    ah,BYTE PTR [edx+0x30]
  403fdd:	out    dx,eax
  403fde:	pusha  
  403fdf:	bound  edx,QWORD PTR [ecx-0x5b]
  403fe2:	xor    ebp,DWORD PTR [esi+edi*1-0x78770c9]
  403fe9:	mov    eax,ds:0xd0456751
  403fee:	int3   
  403fef:	push   ebx
  403ff0:	push   ds
  403ff1:	jbe    0x40401a
  403ff3:	ja     0x403f80
  403ff5:	gs add al,0x22
  403ff8:	xor    esp,DWORD PTR [edx-0x435fa442]
  403ffe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fff:	int3   
  404000:	xchg   ebp,eax
  404001:	add    BYTE PTR [edx+edx*1+0x76b26650],cl
  404008:	(bad)  
  404009:	(bad)
  40400d:	(bad)
  404010:	ret    0xe5ba
  404013:	jns    0x403f96
  404015:	std    
  404016:	mov    BYTE PTR [edi],ah
  404018:	mov    cl,BYTE PTR [eax-0x426d2c68]
  40401e:	inc    edi
  40401f:	stc    
  404020:	push   edx
  404021:	fidiv  DWORD PTR [ebp-0x6eeb045b]
  404027:	scas   eax,DWORD PTR es:[edi]
  404028:	fmul   QWORD PTR [ebx-0x72]
  40402b:	jl     0x403feb
  40402d:	inc    edx
  40402e:	test   eax,0x6c5174c4
  404033:	ds mov ch,0xfb
  404036:	jmp    0xecfb6a5f
  40403b:	or     ch,BYTE PTR [eax]
  40403d:	aad    0x8c
  40403f:	xchg   esp,eax
  404040:	ret    
  404041:	adc    DWORD PTR [ebx-0x18f5b18c],edi
  404047:	addr16 pop edx
  404049:	dec    ebp
  40404a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40404b:	jl     0xf6363a07
  404051:	iret   
  404052:	pop    es
  404053:	iret   
  404054:	xor    DWORD PTR [edi],eax
  404056:	push   ecx
  404057:	xchg   esi,eax
  404058:	lods   eax,DWORD PTR ds:[esi]
  404059:	lds    eax,FWORD PTR [esi-0x11]
  40405c:	cs add al,0x96
  40405f:	or     BYTE PTR [ecx+0x3e],cl
  404062:	adc    bl,BYTE PTR [ebp+0x5a795db]
  404068:	mov    ss,WORD PTR [ebx+0x6acf90d6]
  40406e:	or     BYTE PTR [edi+ebp*1],ah
  404071:	pop    edi
  404072:	jg     0x4040ec
  404074:	mov    bl,0xf
  404076:	sar    eax,0xb
  404079:	test   BYTE PTR [esi+0x63d9eba5],ch
  40407f:	out    dx,eax
  404080:	xor    ch,BYTE PTR ds:0x4c60d5a6
  404086:	mov    al,0x1f
  404088:	sub    BYTE PTR [ebx+0x16a5fe17],cl
  40408e:	fwait
  40408f:	push   ds
  404090:	sub    esp,DWORD PTR [ebx-0x1b]
  404093:	shl    DWORD PTR [ecx+0x26],cl
  404096:	xchg   edx,eax
  404097:	shl    BYTE PTR [ebp+0x35],cl
  40409a:	test   DWORD PTR [esi+0x46],edi
  40409d:	xchg   ecx,eax
  40409e:	aas    
  40409f:	test   BYTE PTR [ecx],cl
  4040a1:	clc    
  4040a2:	ja     0x404077
  4040a4:	ds or  dh,dh
  4040a7:	call   0x1f51:0x7e36b9e
  4040ae:	cdq    
  4040af:	loop   0x4040d8
  4040b1:	(bad)  
  4040b3:	xor    ah,BYTE PTR [ebx+0x5a]
  4040b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040b7:	adc    eax,0xaef42055
  4040bc:	or     eax,0xf562200
  4040c1:	dec    esi
  4040c2:	adc    eax,0xeb9a62e0
  4040c7:	push   0xffffffe0
  4040c9:	or     dh,BYTE PTR [edi+0x5bb61f77]
  4040cf:	shl    al,0xbd
  4040d2:	jmp    0x4040cb
  4040d4:	inc    ecx
  4040d5:	mov    ebp,ss
  4040d7:	sbb    DWORD PTR [ebx],ebp
  4040d9:	cs inc eax
  4040db:	cwde   
  4040dc:	mov    ch,0x34
  4040de:	imul   DWORD PTR es:[edx+0x6ff494b3]
  4040e5:	std    
  4040e6:	add    DWORD PTR [edx],esi
  4040e8:	sti    
  4040e9:	mov    ds:0xe765b87b,eax
  4040ee:	dec    eax
  4040ef:	sbb    bl,BYTE PTR [edi]
  4040f1:	dec    esi
  4040f2:	fs inc ebp
  4040f4:	es (bad) 
  4040f6:	stc    
  4040f7:	icebp  
  4040f8:	pop    ds
  4040f9:	mov    eax,0x146d1f62
  4040fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040ff:	or     BYTE PTR [ebp-0x177dd4ee],ah
  404105:	and    ebx,esp
  404107:	sbb    BYTE PTR [eax],dl
  404109:	adc    bh,dh
  40410b:	cli    
  40410c:	mov    WORD PTR [edx+0x57],gs
  40410f:	sti    
  404110:	or     DWORD PTR [edx+0x4b],esp
  404113:	ja     0x4040db
  404115:	xor    BYTE PTR [esi+0x6ad57a3],cl
  40411b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40411c:	in     eax,dx
  40411d:	dec    esi
  40411e:	cmp    BYTE PTR [esi+0x0],al
  404121:	jb     0x40416c
  404123:	ds ret 
  404125:	js     0x404186
  404127:	out    dx,al
  404128:	data16 jo 0x40412f
  40412b:	adc    BYTE PTR [esi+0x18],0xda
  40412f:	sahf   
  404130:	pop    esi
  404131:	call   0x69339064
  404136:	cmp    al,0x3c
  404138:	add    edx,DWORD PTR [ebx]
  40413a:	push   edx
  40413b:	push   ds
  40413c:	dec    eax
  40413d:	lds    esp,FWORD PTR [edi]
  40413f:	xchg   edi,eax
  404140:	aaa    
  404141:	fsub   DWORD PTR [edi-0xb]
  404144:	sbb    eax,0xcce7ab57
  404149:	rcr    DWORD PTR [edi+0x35],0xbe
  40414d:	ins    BYTE PTR es:[edi],dx
  40414e:	out    0xd3,eax
  404150:	sub    cl,BYTE PTR [edi+0x79]
  404153:	das    
  404154:	xchg   ebx,eax
  404155:	jl     0x404148
  404157:	pusha  
  404158:	mov    DWORD PTR [ebp-0x58],ecx
  40415b:	or     bl,ch
  40415d:	lea    eax,[ecx-0x70696892]
  404163:	out    dx,eax
  404164:	inc    ebp
  404165:	cmp    bh,bh
  404167:	pusha  
  404168:	xchg   edi,eax
  404169:	cmp    bh,bh
  40416b:	mov    eax,ds:0xf004b08b
  404170:	imul   ecx,ecx,0x3db1abac
  404176:	shr    BYTE PTR ds:0xca134d98,cl
  40417c:	inc    esi
  40417d:	mov    ebx,0x97100b85
  404182:	out    dx,eax
  404183:	cmp    al,0x90
  404185:	mov    al,ds:0xb4f44ced
  40418a:	inc    ebx
  40418b:	push   edx
  40418c:	int    0x7
  40418e:	mov    edx,0x78f4e31
  404193:	loopne 0x404155
  404195:	cmp    edx,ebx
  404197:	out    0x9d,al
  404199:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40419a:	and    al,0x8a
  40419c:	cmp    al,0x9
  40419e:	cmp    DWORD PTR [edi+0x71a9e2dc],ebp
  4041a4:	test   DWORD PTR [ecx-0x53],0x908e0395
  4041ab:	adc    esi,eax
  4041ad:	es (bad) 
  4041af:	jge    0x404204
  4041b1:	fbstp  TBYTE PTR [edi+edx*2-0x43]
  4041b5:	outs   dx,DWORD PTR ds:[esi]
  4041b6:	fdiv   DWORD PTR [edx]
  4041b8:	cmp    BYTE PTR [edi+0x3a666a02],al
  4041be:	xchg   DWORD PTR [esi+edi*2+0x5],eax
  4041c2:	xor    edx,DWORD PTR [ecx+eiz*1-0x5b]
  4041c6:	dec    ebx
  4041c7:	shrd   esp,ebx,0x48
  4041cb:	arpl   WORD PTR [esi],sp
  4041cd:	add    eax,0x4578bc62
  4041d2:	mov    ebp,0x511b3ec8
  4041d7:	add    BYTE PTR [esi+edx*8],al
  4041da:	rcl    BYTE PTR [edi-0x58],cl
  4041dd:	mov    ah,0xa8
  4041df:	loop   0x404258
  4041e1:	lods   eax,DWORD PTR ds:[esi]
  4041e2:	mov    al,ds:0x6b9a8993
  4041e7:	int    0x3a
  4041e9:	mov    eax,0x52546d91
  4041ee:	sbb    esi,DWORD PTR [ebx]
  4041f0:	mov    ds:0xae0e6924,eax
  4041f5:	out    0x9a,eax
  4041f7:	xor    eax,0x8279324c
  4041fc:	jnp    0x40427a
  4041fe:	popa   
  4041ff:	add    edx,DWORD PTR [edx]
  404201:	cld    
  404202:	pop    edi
  404203:	fcmovnbe st,st(7)
  404205:	scas   eax,DWORD PTR es:[edi]
  404206:	loop   0x40419e
  404208:	dec    eax
  404209:	adc    edi,DWORD PTR [ecx]
  40420b:	or     DWORD PTR [ebx+0xa],ecx
  40420e:	jecxz  0x404269
  404210:	jb     0x4041f7
  404212:	or     eax,0x4941905f
  404217:	xor    al,0xca
  404219:	or     esi,DWORD PTR [eax-0x15ff9e2b]
  40421f:	jg     0x40422f
  404221:	ret    
  404222:	icebp  
  404223:	sbb    eax,0x92b10760
  404228:	mov    edx,0x3659b25a
  40422d:	sub    al,al
  40422f:	dec    esp
  404230:	jne    0x40421f
  404232:	ja     0x404253
  404234:	pop    edi
  404235:	xor    bl,dl
  404237:	push   0xffffffa0
  404239:	cwde   
  40423a:	sbb    DWORD PTR [edx+0x52],esp
  40423d:	sti    
  40423e:	(bad)  
  40423f:	sbb    edx,DWORD PTR [edi]
  404241:	outs   dx,BYTE PTR ds:[esi]
  404242:	cmp    esi,ebx
  404244:	pushf  
  404245:	or     al,0xe3
  404247:	gs js  0x404264
  40424a:	in     al,dx
  40424b:	dec    esp
  40424c:	aad    0x33
  40424e:	rol    bl,1
  404250:	test   eax,0x6a57062a
  404255:	xor    cl,ch
  404257:	test   dh,bh
  404259:	jmp    0x404250
  40425b:	arpl   WORD PTR [edi-0x10cbcc4a],ax
  404261:	jmp    0xe0622f3b
  404266:	mov    eax,0xbeedeb8f
  40426b:	adc    esp,ebp
  40426d:	pop    ds
  40426e:	and    al,0xaa
  404270:	cld    
  404271:	iret   
  404272:	mov    esi,0x4446f4c0
  404277:	or     al,0x57
  404279:	jmp    0xcc1f:0x8b7add2b
  404280:	jl     0x4042af
  404282:	mov    esp,0xd0d8009
  404287:	pop    ds
  404288:	ret    0x3c05
  40428b:	in     eax,dx
  40428c:	(bad)  
  40428d:	jmp    0x93271c1b
  404292:	fsub   st(6),st
  404294:	nop
  404295:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404296:	pop    ecx
  404297:	cmp    esi,esp
  404299:	pop    esp
  40429a:	fwait
  40429b:	es jbe 0x40424b
  40429e:	lahf   
  40429f:	push   edi
  4042a0:	retf   
  4042a1:	mov    BYTE PTR [ebp-0x735c4d09],0x8d
  4042a8:	cmp    al,0xe9
  4042aa:	dec    esi
  4042ab:	push   ss
  4042ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042ad:	mov    eax,fs
  4042af:	dec    esp
  4042b0:	push   eax
  4042b1:	lds    edi,FWORD PTR [esi-0x62]
  4042b4:	mov    ds:0xdacf1fa0,eax
  4042b9:	push   ebx
  4042ba:	loope  0x404288
  4042bc:	sub    al,0x6a
  4042be:	jnp    0x40425f
  4042c0:	shr    bh,1
  4042c2:	push   cs
  4042c3:	mov    ds:0xaa2aa96,eax
  4042c8:	out    dx,al
  4042c9:	int3   
  4042ca:	arpl   WORD PTR [edi],si
  4042cc:	sbb    BYTE PTR [edx+0x75],cl
  4042cf:	dec    edx
  4042d0:	cs jb  0x404342
  4042d3:	add    BYTE PTR [edi-0x2d],dl
  4042d6:	jmp    0x5b8393af
  4042db:	dec    ebp
  4042dc:	push   edi
  4042dd:	sub    edx,DWORD PTR [ecx+0x22e2a2af]
  4042e3:	repnz mov eax,ds:0x58a51cc
  4042e9:	mov    al,ds:0x3f2f13fb
  4042ee:	push   0x1fdacc3c
  4042f3:	cmp    esi,DWORD PTR [esi+edi*8]
  4042f6:	cmp    BYTE PTR [ebp-0x43f029ad],bh
  4042fc:	test   eax,0x3c88ecb6
  404301:	dec    esi
  404302:	cmp    eax,0xb506d59e
  404307:	sub    bh,BYTE PTR [ebx]
  404309:	sub    BYTE PTR [ecx],dl
  40430b:	es out dx,al
  40430d:	aas    
  40430e:	sbb    eax,0x92e7a1d0
  404313:	add    DWORD PTR [edi+0x98d600d],edi
  404319:	inc    BYTE PTR [esi]
  40431b:	inc    eax
  40431c:	xor    DWORD PTR [esi],ecx
  40431e:	jp     0x4042dd
  404320:	adc    eax,0x5eb76c2f
  404325:	xor    al,0xf8
  404327:	inc    edx
  404328:	cli    
  404329:	or     BYTE PTR [ebp+0x56bdc995],dl
  40432f:	sti    
  404330:	mov    ah,0x22
  404332:	jne    0x404311
  404334:	sub    dl,BYTE PTR [ebx]
  404336:	xchg   edi,eax
  404337:	push   ds
  404338:	mov    bl,0xb1
  40433a:	add    eax,0x3289d5ca
  40433f:	mov    WORD PTR [ebx+0x27],ss
  404342:	cmp    bl,BYTE PTR [ebx]
  404344:	jae    0x4043a7
  404346:	jl     0x4043a0
  404348:	mov    bl,0x15
  40434a:	ror    BYTE PTR [eax+0x31],cl
  40434d:	xlat   BYTE PTR ds:[ebx]
  40434e:	stos   DWORD PTR es:[edi],eax
  40434f:	pop    esp
  404350:	fld    TBYTE PTR [esi+0x38a3622b]
  404356:	jno    0x404399
  404358:	mov    eax,edx
  40435a:	stos   DWORD PTR es:[edi],eax
  40435b:	push   ecx
  40435c:	cdq    
  40435d:	cld    
  40435e:	cmp    edx,eax
  404360:	icebp  
  404361:	mov    bh,0x62
  404363:	stc    
  404364:	mov    cl,BYTE PTR [esi+0x72a4f300]
  40436a:	jmp    0x26e0:0x9da749d9
  404371:	inc    edi
  404372:	das    
  404373:	stos   DWORD PTR es:[edi],eax
  404374:	retf   
  404375:	push   cs
  404376:	push   es
  404377:	add    eax,0x3923b21b
  40437c:	(bad)  
  40437d:	in     eax,0x42
  40437f:	sbb    al,0x7b
  404381:	xor    cl,bl
  404383:	leave  
  404384:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404385:	pop    esp
  404386:	pushf  
  404387:	sub    ah,BYTE PTR [edi-0x35]
  40438a:	jge    0x404364
  40438c:	sbb    ecx,0x16014c93
  404392:	pop    es
  404393:	in     al,dx
  404394:	and    al,0x79
  404396:	xchg   esi,eax
  404397:	xor    al,BYTE PTR [esi+0x5b10f5fe]
  40439d:	lea    ebx,[esi+ecx*2-0x4a]
  4043a1:	lea    ecx,[ecx]
  4043a3:	pushf  
  4043a4:	enter  0x93c3,0xd3
  4043a8:	scas   eax,DWORD PTR es:[edi]
  4043a9:	xor    dl,BYTE PTR [ebp+0x2965a8c0]
  4043af:	stc    
  4043b0:	xor    DWORD PTR [edi],0x3e8b4ff9
  4043b6:	pop    ss
  4043b7:	jl     0x4043fc
  4043b9:	sbb    eax,0x2e8bd7c4
  4043be:	icebp  
  4043bf:	jecxz  0x404377
  4043c1:	ret    0x5e69
  4043c4:	(bad)  
  4043c5:	call   0xd3cee093
  4043ca:	cmp    al,0x85
  4043cc:	sbb    ch,bl
  4043ce:	not    eax
  4043d0:	mov    ebp,0x8577d80e
  4043d5:	xor    BYTE PTR [ebx+0x3f],ch
  4043d8:	mov    dh,0x5d
  4043da:	call   0x1270e0d0
  4043df:	sbb    DWORD PTR [ebp+ecx*8+0x344dfae2],edx
  4043e6:	mov    cl,0x5a
  4043e8:	mov    BYTE PTR [ebx+0x5a],dl
  4043eb:	and    dl,al
  4043ed:	or     al,0xc9
  4043ef:	cmp    DWORD PTR [esi-0x6b],ebx
  4043f2:	lods   al,BYTE PTR ds:[esi]
  4043f3:	push   ss
  4043f4:	ja     0x404409
  4043f6:	mov    DWORD PTR [eax+eiz*8-0x179109c2],edx
  4043fd:	and    ah,dl
  4043ff:	cli    
  404400:	cli    
  404401:	ins    DWORD PTR es:[edi],dx
  404402:	push   edx
  404403:	in     al,0x3a
  404405:	jns    0x4043a1
  404407:	clc    
  404408:	cmc    
  404409:	scas   eax,DWORD PTR es:[edi]
  40440a:	imul   ebp,DWORD PTR [ebp+esi*8-0x12],0xffffffba
  40440f:	jle    0x404430
  404411:	(bad)  
  404412:	jo     0x404462
  404414:	in     al,0x3e
  404416:	sti    
  404417:	je     0x4043ff
  404419:	sub    ebp,DWORD PTR [edi]
  40441b:	mov    esi,0x80830254
  404420:	repz sbb al,0x54
  404423:	xchg   BYTE PTR [ecx-0x2fa5af52],dh
  404429:	pop    ds
  40442a:	leave  
  40442b:	mov    DWORD PTR [ebx-0x178668fd],ebx
  404431:	shr    DWORD PTR [edi+esi*2+0xa8ae2f5],0x51
  404439:	jmp    0x4043f8
  40443b:	rol    BYTE PTR [eax],0x53
  40443e:	xchg   ebx,eax
  40443f:	loop   0x4043c4
  404441:	ret    
  404442:	(bad)  
  404443:	sti    
  404444:	xor    al,0x37
  404446:	lds    ebp,FWORD PTR [eax+0x2e02f638]
  40444c:	clc    
  40444d:	outs   dx,BYTE PTR ds:[esi]
  40444e:	rcr    cl,1
  404450:	push   esp
  404451:	push   ecx
  404452:	daa    
  404453:	push   cs
  404454:	cmp    eax,0x8a8f549a
  404459:	das    
  40445a:	cmc    
  40445b:	(bad)  
  40445c:	lahf   
  40445d:	aad    0x19
  40445f:	test   DWORD PTR [esi-0x77a90544],eax
  404465:	adc    edi,edi
  404467:	and    BYTE PTR gs:[eax+0x4f],dh
  40446b:	pushf  
  40446c:	(bad)  
  40446d:	xor    al,BYTE PTR [ebx-0x2d]
  404470:	and    ebx,ebp
  404472:	loope  0x404451
  404474:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404475:	retf   
  404476:	add    DWORD PTR [ebp+eax*2-0x29b4cd50],eax
  40447d:	leave  
  40447e:	rcl    ch,1
  404480:	xchg   ebp,eax
  404481:	push   0x4b9e33a1
  404486:	adc    al,0x95
  404488:	and    cl,BYTE PTR [ebx+ebp*4-0x1b322a1e]
  40448f:	loope  0x404439
  404491:	sbb    al,0x89
  404493:	pop    esp
  404494:	xchg   BYTE PTR [esi-0x5f],al
  404497:	and    eax,0xbab24219
  40449c:	sbb    eax,0x41b0cd63
  4044a1:	lods   eax,DWORD PTR ds:[esi]
  4044a2:	clc    
  4044a3:	aam    0x68
  4044a5:	mov    eax,edi
  4044a7:	pop    ss
  4044a8:	inc    ecx
  4044a9:	xchg   esp,eax
  4044aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044ab:	inc    esi
  4044ac:	jp     0x404460
  4044ae:	mov    WORD PTR [ebp-0x51],?
  4044b1:	jbe    0x40448d
  4044b3:	outs   dx,DWORD PTR ds:[esi]
  4044b4:	sbb    eax,0xf00b4bc4
  4044b9:	fs xchg bp,ax
  4044bc:	test   eax,0xf6a2ead5
  4044c1:	inc    esi
  4044c2:	test   DWORD PTR [ebp+0x22],eax
  4044c5:	mov    gs,WORD PTR [eax+0x57d06210]
  4044cb:	rcr    DWORD PTR [ebx+esi*2-0x55],0x61
  4044d0:	aas    
  4044d1:	lea    edi,[edi+0x50]
  4044d4:	xor    BYTE PTR [eax],0x14
  4044d7:	sti    
  4044d8:	mov    edi,0x347e56d3
  4044dd:	dec    edi
  4044de:	cmp    bh,dl
  4044e0:	push   ss
  4044e1:	inc    eax
  4044e2:	ds push edx
  4044e4:	jp     0x404519
  4044e6:	xchg   ecx,eax
  4044e7:	mov    dl,0x3d
  4044e9:	fist   DWORD PTR [ebx+0x7d777e11]
  4044ef:	and    ch,ah
  4044f1:	push   ss
  4044f2:	pop    ds
  4044f3:	test   bh,0x1e
  4044f6:	sahf   
  4044f7:	jge    0x4044ea
  4044f9:	mov    ebx,0x8969e2f0
  4044fe:	daa    
  4044ff:	clc    
  404500:	fidiv  WORD PTR [edi+eiz*2]
  404503:	sub    BYTE PTR [ebx-0x49],bl
  404506:	test   DWORD PTR [edx],ebx
  404508:	push   eax
  404509:	(bad)  
  40450b:	mov    al,0xaa
  40450d:	mov    ds:0x8eb0e713,eax
  404512:	aaa    
  404513:	or     dl,BYTE PTR [esi+0x40]
  404516:	js     0x4044a5
  404518:	fild   WORD PTR ds:[eax-0x7b]
  40451c:	dec    ecx
  40451d:	es mov eax,0x90335043
  404523:	push   0x51677412
  404528:	dec    DWORD PTR [edx+0x5adb78cc]
  40452e:	cmp    edi,DWORD PTR [eax]
  404530:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404531:	ret    
  404532:	fisttp QWORD PTR [ebp-0x7b233646]
  404538:	pop    esp
  404539:	test   dl,bh
  40453b:	out    dx,al
  40453c:	(bad)  
  40453e:	pop    edx
  40453f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404540:	xlat   BYTE PTR ds:[ebx]
  404541:	sahf   
  404542:	in     al,dx
  404543:	fs fs call 0x5a9e:0x941c6cf8
  40454c:	inc    ecx
  40454d:	scas   al,BYTE PTR es:[edi]
  40454e:	lea    edi,[eax+0x32b93465]
  404554:	into   
  404555:	mov    dh,0xef
  404557:	cmp    al,0xae
  404559:	call   0xc3721ea4
  40455e:	add    DWORD PTR [ebx],0xffffffb6
  404561:	sbb    DWORD PTR [eax],ebx
  404563:	adc    eax,0x3cc47223
  404568:	arpl   ax,bx
  40456a:	push   ecx
  40456b:	cmp    eax,0x60b2cab0
  404570:	(bad)  
  404571:	dec    BYTE PTR [edx-0x4bb366e9]
  404577:	pop    edx
  404578:	adc    dl,ah
  40457a:	inc    ebx
  40457b:	xor    eax,0xbbb35905
  404580:	sbb    dl,BYTE PTR [ebx-0x1e]
  404583:	nop
  404584:	aas    
  404585:	and    DWORD PTR [ebx],0x76
  404588:	or     BYTE PTR [esi],bh
  40458a:	in     eax,dx
  40458b:	xchg   esi,eax
  40458c:	jno    0x404557
  40458e:	(bad)  
  40458f:	fist   DWORD PTR [ebx+esi*2]
  404592:	push   0xffffff99
  404594:	ins    BYTE PTR es:[edi],dx
  404595:	inc    ecx
  404596:	les    ebp,FWORD PTR [ebp-0x4a23ccea]
  40459c:	out    0xce,eax
  40459e:	pop    es
  40459f:	ja     0x4045cc
  4045a1:	xor    bh,BYTE PTR ds:0x2e04d9cf
  4045a7:	cld    
  4045a8:	xchg   ebx,eax
  4045a9:	(bad)  
  4045aa:	pop    edx
  4045ac:	inc    ebx
  4045ad:	inc    esi
  4045ae:	jnp    0x40459d
  4045b0:	cmp    DWORD PTR [esi],ebp
  4045b2:	sbb    eax,0x26da3bf1
  4045b8:	loope  0x404588
  4045ba:	popf   
  4045bb:	nop
  4045bc:	popf   
  4045bd:	push   eax
  4045be:	adc    BYTE PTR [ebx+0x315540ca],0x89
  4045c5:	in     eax,dx
  4045c6:	dec    edi
  4045c7:	add    eax,0xee6a160d
  4045cc:	cli    
  4045cd:	clc    
  4045ce:	push   ebp
  4045cf:	out    0x79,eax
  4045d1:	xor    dh,BYTE PTR [edx]
  4045d3:	and    esi,DWORD PTR [edx]
  4045d5:	ficomp WORD PTR [ebp-0x14]
  4045d8:	jns    0x4045c2
  4045da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045db:	jo     0x40464e
  4045dd:	outs   dx,BYTE PTR ds:[esi]
  4045de:	js     0x404577
  4045e0:	cmp    al,0xdb
  4045e2:	sbb    DWORD PTR [ebp-0x1797a7],0x97a8b2c6
  4045ec:	jp     0x40463e
  4045ee:	sbb    DWORD PTR [eax+0x1d600ee2],ebx
  4045f4:	ret    0x7be
  4045f7:	or     eax,0x1ab2d603
  4045fc:	out    dx,eax
  4045fd:	inc    esi
  4045fe:	in     al,dx
  4045ff:	xchg   ecx,eax
  404600:	adc    BYTE PTR [edi],bl
  404602:	pop    esp
  404603:	stc    
  404604:	jle    0x40460d
  404606:	mov    ecx,0xfe0cdf74
  40460b:	jne    0x40463a
  40460d:	lahf   
  40460e:	cs pslld mm6,mm2
  404612:	arpl   WORD PTR [eax+0x60],bp
  404615:	fsubr  st(6),st
  404617:	push   esi
  404618:	jne    0x404612
  40461a:	les    ebp,FWORD PTR [ebp-0x3469b8b]
  404620:	cdq    
  404621:	aam    0x19
  404623:	cli    
  404624:	js     0x4045ec
  404626:	sub    cl,bl
  404628:	pop    ebp
  404629:	jp     0x40468d
  40462b:	sub    eax,DWORD PTR [ebx]
  40462d:	add    al,0x28
  40462f:	into   
  404630:	jnp    0x404687
  404632:	push   esi
  404633:	push   esi
  404634:	adc    al,0x8e
  404636:	test   DWORD PTR [ebp+0x0],esi
  404639:	inc    ebx
  40463a:	in     al,0x40
  40463c:	adc    al,0x94
  40463e:	add    al,0xd4
  404640:	sbb    DWORD PTR [edx+0x32],ebp
  404643:	(bad)  [esi-0x757fa5c8]
  404649:	fs pop ecx
  40464b:	rcl    BYTE PTR [edi-0x74],1
  40464e:	jns    0x404610
  404650:	mov    dl,0x28
  404652:	in     eax,0x0
  404654:	pop    ss
  404655:	jnp    0x4046bb
  404657:	adc    BYTE PTR [ecx+0x3c],0xc4
  40465b:	cmp    DWORD PTR [ebp+0x3d],edx
  40465e:	inc    esi
  40465f:	outs   dx,DWORD PTR ds:[esi]
  404660:	push   0x4
  404662:	leave  
  404663:	sti    
  404664:	retf   0x2a3e
  404667:	inc    edx
  404668:	lods   al,BYTE PTR ds:[esi]
  404669:	dec    eax
  40466a:	and    BYTE PTR [ecx+eiz*8],ch
  40466d:	(bad)  
  40466e:	jg     0x40465e
  404670:	push   0xd9a110ea
  404675:	cld    
  404676:	pop    esi
  404677:	data16 mov al,ds:0x35f02eed
  40467d:	outs   dx,DWORD PTR ds:[esi]
  40467e:	mov    esp,0x2f7f6555
  404683:	mov    ebp,0xc54d1577
  404688:	inc    eax
  404689:	push   esp
  40468a:	push   edx
  40468b:	lahf   
  40468c:	cli    
  40468d:	mov    ebx,0x542bab58
  404692:	(bad)  
  404693:	dec    ecx
  404694:	sbb    BYTE PTR [ebp-0x7954155a],0xc2
  40469b:	add    eax,DWORD PTR [edi]
  40469d:	pop    edx
  40469e:	dec    esi
  40469f:	inc    BYTE PTR [ebx]
  4046a1:	idiv   DWORD PTR [eax+0x3c]
  4046a4:	fadd   QWORD PTR [edx+eiz*4-0x15]
  4046a8:	imul   edx,DWORD PTR [eiz*8-0x3bb8a4aa],0x5d022cea
  4046b3:	pop    edi
  4046b4:	outs   dx,DWORD PTR ds:[esi]
  4046b5:	or     eax,0x192a80a1
  4046ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046bb:	jns    0x40464c
  4046bd:	inc    esi
  4046be:	sahf   
  4046bf:	in     al,dx
  4046c0:	xor    DWORD PTR [edi-0x76],eax
  4046c3:	adc    eax,0x31f610d8
  4046c8:	je     0x4046ab
  4046ca:	or     al,0xff
  4046cc:	loopne 0x4046ec
  4046ce:	jne    0x40465a
  4046d0:	fstp   TBYTE PTR [ebx+ebp*2+0x2c]
  4046d4:	in     al,0xc9
  4046d6:	fs adc al,cl
  4046d9:	mov    WORD PTR [eax],?
  4046db:	aas    
  4046dc:	js     0x4046c0
  4046de:	repnz mov eax,ds:0xded4df8b
  4046e4:	(bad)  
  4046e5:	(bad)  
  4046e6:	cmp    ebx,DWORD PTR [esi]
  4046e8:	mov    esi,0x9155aaf2
  4046ed:	xor    al,0xc1
  4046ef:	add    al,0x4f
  4046f1:	add    BYTE PTR [edx+0xb],cl
  4046f4:	dec    esi
  4046f5:	dec    edi
  4046f6:	lds    esi,FWORD PTR [edx+0x1c9ac481]
  4046fc:	mov    ah,0x2
  4046fe:	hlt    
  4046ff:	hlt    
  404700:	dec    ecx
  404701:	xchg   ebx,eax
  404702:	enter  0x1335,0x28
  404706:	mov    eax,ds:0x81257624
  40470b:	inc    eax
  40470c:	stc    
  40470d:	mov    al,0xf8
  40470f:	push   ebp
  404710:	(bad)  
  404711:	fiadd  WORD PTR [ebp+0x1d]
  404714:	pop    DWORD PTR [eax-0x14]
  404717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404718:	scas   al,BYTE PTR es:[edi]
  404719:	and    DWORD PTR [edx+ebx*4-0x80],ebx
  40471d:	xor    al,0xf4
  40471f:	aas    
  404720:	jle    0x4046bb
  404722:	adc    bl,bh
  404724:	call   0xb8fe:0xbe0aa85a
  40472b:	out    dx,al
  40472c:	imul   esp,edx,0x6c
  40472f:	scas   eax,DWORD PTR es:[edi]
  404730:	out    0x34,al
  404732:	push   esp
  404733:	leave  
  404734:	loop   0x4047a7
  404736:	pop    ecx
  404737:	ficom  DWORD PTR [eax]
  404739:	ret    0xba5f
  40473c:	xchg   ecx,eax
  40473d:	jp     0x404773
  40473f:	mov    dl,0x11
  404741:	icebp  
  404742:	adc    al,0x96
  404744:	daa    
  404745:	sbb    BYTE PTR [edi+0x7248ac26],0xe0
  40474c:	aam    0xbf
  40474e:	push   edi
  40474f:	adc    dl,dl
  404751:	pop    ds
  404752:	dec    ebx
  404753:	mov    eax,ds:0xf15a7a9a
  404758:	fiadd  DWORD PTR [ebx+0x7d]
  40475b:	pop    ss
  40475c:	pop    esp
  40475d:	push   0x4bd0005a
  404762:	and    eax,0x210be6d0
  404767:	inc    edi
  404768:	fs jnp 0x404729
  40476b:	add    DWORD PTR [esi],edi
  40476d:	push   0x58103a20
  404772:	outs   dx,BYTE PTR ds:[esi]
  404773:	pop    ss
  404774:	imul   ebp,DWORD PTR ds:0x6c41ffc3,0x5c94d858
  40477e:	in     eax,0x88
  404780:	mov    cl,0xc6
  404782:	mov    esi,DWORD PTR [esi+0x1c]
  404785:	stos   DWORD PTR es:[edi],eax
  404786:	push   0x6e971acb
  40478b:	ja     0x4047c8
  40478d:	sbb    BYTE PTR ds:0xeb5ffdfa,ch
  404793:	fidivr DWORD PTR [ebp-0x64cffdeb]
  404799:	dec    esi
  40479a:	ins    DWORD PTR es:[edi],dx
  40479b:	and    dh,BYTE PTR [eax+0x4d2a2f30]
  4047a1:	push   es
  4047a2:	inc    BYTE PTR [eax+0x7d2e4ba]
  4047a8:	jp     0x4047e8
  4047aa:	jnp    0x40480b
  4047ac:	cmp    BYTE PTR [eax],0xa6
  4047af:	popa   
  4047b0:	imul   ebp,DWORD PTR [eax+esi*1+0x73],0x959c970a
  4047b8:	ds loop 0x404744
  4047bb:	es push cs
  4047bd:	sbb    ah,bl
  4047bf:	sub    BYTE PTR [esi-0x7],bh
  4047c2:	test   dl,0x7c
  4047c5:	push   esp
  4047c6:	or     ch,cl
  4047c8:	mov    esp,0x66812a29
  4047cd:	push   0xbfe6820e
  4047d2:	stc    
  4047d3:	xchg   ebp,eax
  4047d4:	sbb    eax,0xfe6939ba
  4047d9:	xor    BYTE PTR [edx+0xb9526df],dh
  4047df:	(bad)  
  4047e0:	push   edx
  4047e1:	adc    eax,0xe273391
  4047e6:	fld    QWORD PTR [edi]
  4047e8:	into   
  4047e9:	icebp  
  4047ea:	in     eax,dx
  4047eb:	xlat   BYTE PTR ds:[ebx]
  4047ec:	xchg   ecx,eax
  4047ed:	pop    edx
  4047ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047ef:	push   esp
  4047f0:	pop    ss
  4047f1:	clc    
  4047f2:	push   eax
  4047f3:	(bad)  
  4047f4:	in     eax,0x44
  4047f6:	(bad)  
  4047f7:	mov    eax,0x5774a5f5
  4047fc:	imul   edx
  4047fe:	or     al,0x8b
  404800:	inc    edx
  404801:	sbb    eax,0x7f807163
  404806:	js     0x4047ce
  404808:	and    cl,BYTE PTR [ebx-0x442cb508]
  40480e:	fucom  st(2)
  404810:	add    ebp,DWORD PTR [esi-0x6502074b]
  404816:	adc    esi,DWORD PTR [edx-0x5f]
  404819:	leave  
  40481a:	test   al,0x5a
  40481c:	lods   al,BYTE PTR ds:[esi]
  40481d:	cs out dx,al
  40481f:	cwde   
  404820:	add    DWORD PTR [eax-0x7e],esp
  404823:	push   edi
  404824:	outs   dx,DWORD PTR ds:[esi]
  404825:	stos   DWORD PTR es:[edi],eax
  404826:	sbb    ah,BYTE PTR ds:0x311e450a
  40482c:	call   0x3dae:0xa4d2b249
  404833:	dec    eax
  404834:	mov    bh,0xdd
  404836:	pusha  
  404837:	aas    
  404838:	mov    eax,0x5309b949
  40483d:	and    eax,0x355e06d7
  404842:	jg     0x404836
  404844:	xchg   ebx,eax
  404845:	out    dx,al
  404846:	push   0x4ae8c52
  40484b:	or     al,0xcd
  40484d:	out    dx,eax
  40484e:	xlat   BYTE PTR ds:[ebx]
  40484f:	sbb    dl,BYTE PTR [ebp-0x7a]
  404852:	pop    ebp
  404853:	gs jmp 0x4047e3
  404856:	mov    BYTE PTR ds:0xee779fd0,cl
  40485c:	sub    eax,0x378cef68
  404861:	aas    
  404862:	out    dx,al
  404863:	loopne 0x4048b0
  404865:	imul   ebx,DWORD PTR [eax-0x56],0x50510aff
  40486c:	push   ecx
  40486d:	mov    dh,0xfc
  40486f:	les    ebx,FWORD PTR [edx-0x6aaa8f3e]
  404875:	and    bl,0x77
  404878:	test   DWORD PTR [esi+eax*8+0x27],eax
  40487c:	inc    esi
  40487d:	fwait
  40487e:	sub    DWORD PTR [edi+0x6555f790],edx
  404884:	(bad)  
  404885:	test   BYTE PTR ds:0x3c4f5c96,dh
  40488b:	sbb    dl,ah
  40488d:	sbb    eax,0x6c807169
  404892:	or     esp,DWORD PTR [edx+0x2bde6839]
  404898:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404899:	repz inc ebp
  40489b:	xor    DWORD PTR [esi],ecx
  40489d:	mov    dl,0x69
  40489f:	pop    edi
  4048a0:	cmp    eax,0xe05dfb3
  4048a5:	in     al,dx
  4048a6:	mov    al,0x13
  4048a8:	in     eax,0x78
  4048aa:	adc    ecx,DWORD PTR [ecx+0x351db37b]
  4048b0:	arpl   WORD PTR [ebx+edx*8+0x6e],ax
  4048b4:	leave  
  4048b5:	out    dx,eax
  4048b6:	sub    ebx,DWORD PTR [ecx-0x61f4d033]
  4048bc:	or     DWORD PTR [edi+0x1e],esi
  4048bf:	pop    edx
  4048c0:	popa   
  4048c1:	lahf   
  4048c2:	add    BYTE PTR [ebx],al
  4048c4:	aad    0xa0
  4048c6:	nop
  4048c7:	clc    
  4048c8:	push   0xcea20e36
  4048cd:	mov    ebx,0xc030f054
  4048d2:	sbb    DWORD PTR [edi],edx
  4048d4:	loop   0x404873
  4048d6:	sub    DWORD PTR [ebp-0x43225747],0xffffffeb
  4048dd:	ins    DWORD PTR es:[edi],dx
  4048de:	js     0x4048c8
  4048e0:	sub    dh,cl
  4048e2:	or     al,0x2e
  4048e4:	cmp    eax,0x9f071395
  4048e9:	mov    ah,0xd
  4048eb:	xor    BYTE PTR [edx+0x47],cl
  4048ee:	xor    BYTE PTR [edx+0x1bb5cfad],bl
  4048f4:	outs   dx,DWORD PTR ds:[esi]
  4048f5:	data16 cmp al,0xfa
  4048f8:	push   edi
  4048f9:	jg     0x4048e1
  4048fb:	ficom  WORD PTR fs:[ebp+0x50be0759]
  404902:	dec    ecx
  404903:	retf   0x6463
  404906:	lar    edi,WORD PTR [ebx-0x4]
  40490a:	dec    esp
  40490b:	jle    0x404938
  40490d:	push   esi
  40490e:	mov    esp,0x3119b6a8
  404913:	jbe    0x404946
  404915:	or     esp,edi
  404917:	nop
  404918:	pop    eax
  404919:	ret    
  40491a:	fild   DWORD PTR [edi+esi*1-0x761bc80e]
  404921:	sbb    DWORD PTR [eax-0x69fd65fc],0xffffffb3
  404928:	inc    ecx
  404929:	and    eax,0x5c63bd21
  40492e:	pop    esi
  40492f:	test   dh,0xe9
  404932:	hlt    
  404933:	mov    ebp,0xcad6644a
  404938:	es dec edx
  40493a:	dec    edi
  40493b:	add    esp,DWORD PTR [edi+ecx*8+0x352e982a]
  404942:	mov    ah,0xe7
  404944:	xor    al,0x3f
  404946:	fsubr  st(3),st
  404948:	and    bl,BYTE PTR [ebp+0x1d]
  40494b:	mov    dh,0x19
  40494d:	int3   
  40494e:	mov    eax,ds:0xa788b975
  404953:	inc    ebp
  404954:	in     eax,dx
  404955:	test   DWORD PTR [edx],esi
  404957:	or     ah,BYTE PTR [esi-0x5f]
  40495a:	cs pop eax
  40495c:	xchg   ebp,eax
  40495d:	(bad)  
  40495e:	in     eax,0x8e
  404960:	or     DWORD PTR [ebx-0x40b650d3],esp
  404966:	push   ebx
  404967:	(bad)  
  404968:	idiv   DWORD PTR [eax+0x3c]
  40496b:	ins    DWORD PTR es:[edi],dx
  40496c:	sar    BYTE PTR [edi+0x2ebef63c],cl
  404972:	xor    DWORD PTR [esp+edi*8],ebx
  404975:	pop    ebx
  404976:	adc    al,al
  404978:	(bad)  
  404979:	repnz xlat BYTE PTR ds:[ebx]
  40497b:	mov    ds:0x97d00c42,al
  404980:	mov    ebx,0x6ee2a95a
  404985:	scas   eax,DWORD PTR es:[edi]
  404986:	pop    edx
  404987:	mov    ch,bl
  404989:	mov    bl,0x76
  40498b:	cmc    
  40498c:	js     0x4049f1
  40498e:	cs popa 
  404990:	data16 lahf 
  404992:	fs push eax
  404994:	push   es
  404995:	add    BYTE PTR [ecx+0xe],dh
  404998:	push   es
  404999:	sbb    esi,DWORD PTR ds:0xd574654
  40499f:	xchg   edx,eax
  4049a0:	fs retf 0xb3ed
  4049a4:	out    0xe1,eax
  4049a6:	push   cs
  4049a7:	push   ebp
  4049a8:	xchg   esp,eax
  4049a9:	aas    
  4049aa:	xchg   edi,eax
  4049ab:	jno    0x4049da
  4049ad:	and    dl,BYTE PTR [esi]
  4049af:	jne    0x4049b6
  4049b1:	sub    DWORD PTR [ecx-0x70],ebp
  4049b4:	mov    esp,0xf1d137b2
  4049b9:	push   edi
  4049ba:	repz push ebp
  4049bc:	sub    ch,BYTE PTR [edi+0x23]
  4049bf:	int3   
  4049c0:	push   edx
  4049c1:	dec    edx
  4049c2:	shl    dl,1
  4049c4:	fstp   QWORD PTR [ebx-0x6b]
  4049c7:	outs   dx,DWORD PTR ds:[esi]
  4049c8:	pop    eax
  4049c9:	shl    BYTE PTR [eax],cl
  4049cb:	dec    esi
  4049cc:	mov    DWORD PTR [ecx-0x7a],ebp
  4049cf:	inc    edx
  4049d0:	xchg   esp,eax
  4049d1:	cmp    BYTE PTR [edi-0x27e7dd73],bh
  4049d7:	je     0x404a42
  4049d9:	jns    0x4049af
  4049db:	sub    edi,DWORD PTR [edi-0x6a2f8cf9]
  4049e1:	out    0xef,al
  4049e3:	sahf   
  4049e4:	inc    ebx
  4049e5:	mov    eax,DWORD PTR [esi+eiz*4-0x4e869c74]
  4049ec:	gs and al,0x69
  4049ef:	in     al,0xec
  4049f1:	fs cld 
  4049f3:	xlat   BYTE PTR ds:[ebx]
  4049f4:	ficomp DWORD PTR [edx-0x45]
  4049f7:	fimul  DWORD PTR [esi+0x22]
  4049fa:	inc    esi
  4049fb:	and    esp,DWORD PTR [ecx]
  4049fd:	pop    ss
  4049fe:	dec    ebp
  4049ff:	ds jb  0x404a06
  404a02:	adc    cl,BYTE PTR [edx-0x74d08316]
  404a08:	sahf   
  404a09:	dec    esi
  404a0a:	or     al,0x80
  404a0c:	shr    DWORD PTR [ebx+0x7ea6536],0xac
  404a13:	mov    al,0x25
  404a15:	push   eax
  404a16:	das    
  404a17:	sub    eax,0x337873e9
  404a1c:	leave  
  404a1d:	push   ebp
  404a1e:	xchg   edx,eax
  404a1f:	adc    BYTE PTR [esp+edi*8],dh
  404a22:	jae    0x404a7b
  404a24:	mov    esp,0x65d3308f
  404a29:	add    DWORD PTR [ebp-0x1b],ebx
  404a2c:	xchg   edi,eax
  404a2d:	jmp    0x88c8fb08
  404a32:	daa    
  404a33:	and    DWORD PTR [edi-0x20d8b4c],esi
  404a39:	ja     0x404a45
  404a3b:	pop    ebx
  404a3c:	and    BYTE PTR [esi+ebx*1],al
  404a3f:	add    al,0xd5
  404a41:	add    al,ah
  404a43:	mov    WORD PTR [ebp-0x6],?
  404a46:	sbb    eax,0x68013de4
  404a4b:	stos   BYTE PTR es:[edi],al
  404a4c:	pop    ebp
  404a4d:	test   eax,0xf9d3c367
  404a52:	test   eax,0x3241a8cf
  404a57:	push   ss
  404a58:	pop    ecx
  404a59:	mov    dh,0x90
  404a5b:	leave  
  404a5c:	push   eax
  404a5d:	jns    0x404aac
  404a5f:	xor    DWORD PTR [ebp+0x3],ebp
  404a62:	mov    eax,ds:0x94032f8a
  404a67:	sbb    eax,0x2be8658
  404a6c:	dec    ecx
  404a6d:	push   ds
  404a6e:	cmp    al,0x85
  404a70:	xchg   edi,eax
  404a71:	jne    0x404ac1
  404a73:	shl    ebx,1
  404a75:	jb     0x404a1f
  404a77:	nop
  404a78:	jb     0x404a82
  404a7a:	mov    WORD PTR [ebx+esi*2+0x972cc4e],ds
  404a81:	cmp    al,0x41
  404a83:	scas   al,BYTE PTR es:[edi]
  404a84:	dec    esi
  404a85:	fldenv [edi]
  404a87:	rol    DWORD PTR [edx],0xc3
  404a8a:	mov    esi,0xd9261041
  404a8f:	xchg   BYTE PTR [esi],ah
  404a91:	push   esp
  404a92:	mov    ds:0x68467924,al
  404a97:	mov    ah,0x32
  404a99:	sar    esp,0x0
  404a9c:	xchg   ebx,eax
  404a9d:	adc    DWORD PTR [edx+0x67],0x812a6705
  404aa4:	addr16 mov cl,0x6d
  404aa7:	xchg   DWORD PTR [edi+edx*8],edx
  404aaa:	sub    eax,0x3138418d
  404aaf:	xchg   ecx,eax
  404ab0:	mov    dh,0x3c
  404ab2:	or     bl,bh
  404ab4:	sub    edx,ebp
  404ab6:	fs push cs
  404ab8:	sub    al,0x53
  404abb:	jne    0x404ab0
  404abd:	fs mov eax,es:0xe7003843
  404ac4:	je     0x404a85
  404ac6:	sub    BYTE PTR ds:0x4addd26f,bl
  404acc:	mov    ebp,0x9f7d8378
  404ad1:	(bad)  
  404ad4:	out    0xbd,eax
  404ad6:	adc    al,0x32
  404ad8:	push   edi
  404ad9:	or     ah,al
  404adb:	jmp    0xaa1d2487
  404ae0:	pop    ebx
  404ae1:	out    0x40,al
  404ae3:	xor    DWORD PTR [ebx+eax*8],ebp
  404ae6:	gs in  eax,0x7c
  404ae9:	fcom   DWORD PTR [ecx]
  404aeb:	mov    WORD PTR [ebx+eax*8-0x5ced001c],ss
  404af2:	test   BYTE PTR [ecx+0x4d701122],0xde
  404af9:	cmp    al,0x72
  404afb:	dec    ebp
  404afc:	call   0xaab3cb63
  404b01:	push   0xc336ae3c
  404b06:	sub    bh,0x2b
  404b09:	xor    DWORD PTR [edi+eiz*2],edx
  404b0c:	leave  
  404b0d:	dec    edi
  404b0e:	in     eax,0xde
  404b10:	int3   
  404b11:	pushf  
  404b12:	sub    ebp,DWORD PTR [ebx-0x2c468e93]
  404b18:	fidivr DWORD PTR [ebp+0x57d9072f]
  404b1e:	jle    0x404b17
  404b20:	or     BYTE PTR [eax-0x6422e0d1],bh
  404b26:	jg     0x404b45
  404b28:	cmp    bh,bh
  404b2a:	mov    ebx,0x84037df
  404b2f:	shl    ecx,cl
  404b31:	ins    DWORD PTR es:[edi],dx
  404b32:	dec    ecx
  404b33:	mov    WORD PTR [eax+edi*2+0x30],cs
  404b37:	jle    0x404ad8
  404b39:	ds push ecx
  404b3b:	jbe    0x404ae2
  404b3d:	inc    ebx
  404b3e:	lods   al,BYTE PTR ds:[esi]
  404b3f:	mov    eax,0xc569ea50
  404b44:	in     eax,0xb8
  404b46:	dec    eax
  404b48:	aaa    
  404b49:	push   ebx
  404b4a:	into   
  404b4b:	(bad)  
  404b4d:	nop
  404b4e:	dec    edx
  404b4f:	pop    ds
  404b50:	mov    al,ds:0xeea96a89
  404b55:	sub    al,BYTE PTR [eax]
  404b57:	imul   edx,ecx,0x1d44f3b4
  404b5d:	fmul   DWORD PTR [ebx+0x474bc15c]
  404b63:	sub    DWORD PTR [esi],eax
  404b65:	adc    al,0xbb
  404b67:	(bad)  
  404b68:	mov    ch,0xfd
  404b6a:	ss shl bl,0xe4
  404b6e:	fistp  DWORD PTR ds:0x26e90d58
  404b74:	jle    0x404bbf
  404b76:	push   edx
  404b77:	xor    DWORD PTR [edi],esi
  404b79:	jmp    0x5ce4:0xe1f7212e
  404b80:	mov    es,WORD PTR [edi]
  404b82:	xchg   ecx,eax
  404b83:	mov    bl,0x78
  404b85:	mov    ds:0xac4ba928,eax
  404b8a:	cld    
  404b8b:	jne    0x404bb2
  404b8d:	pop    ss
  404b8e:	xchg   edi,eax
  404b8f:	jmp    0x404b59
  404b91:	add    ecx,DWORD PTR [edi+eax*8+0x400e551d]
  404b98:	adc    ah,0x8c
  404b9b:	sub    DWORD PTR [edx+0xff2684b],ebx
  404ba1:	dec    esi
  404ba2:	loope  0x404bed
  404ba4:	inc    esi
  404ba5:	xor    al,0x60
  404ba7:	mov    ah,0x2c
  404ba9:	sub    ebp,DWORD PTR [edi-0x53]
  404bac:	xor    DWORD PTR [esi-0x3006017b],esi
  404bb2:	aas    
  404bb3:	pop    ebp
  404bb4:	sti    
  404bb5:	out    dx,al
  404bb6:	hlt    
  404bb7:	mov    dh,0xb7
  404bb9:	xchg   BYTE PTR [esi-0x77],ah
  404bbc:	mov    ebp,0x115e66d9
  404bc1:	mov    ds:0xf5978723,al
  404bc6:	popaw  
  404bc8:	cs jnp 0x404c27
  404bcb:	xchg   edi,eax
  404bcc:	retf   
  404bcd:	push   0x2087c09c
  404bd2:	or     BYTE PTR [esi],ch
  404bd4:	clc    
  404bd5:	xchg   esp,eax
  404bd6:	cmp    BYTE PTR [ebx+edi*1],bh
  404bd9:	mov    BYTE PTR [eax+0x34],ah
  404bdc:	push   ss
  404bdd:	and    BYTE PTR [esi],ch
  404bdf:	or     eax,0x43657648
  404be4:	ror    DWORD PTR [ebp+0x30170f34],cl
  404bea:	fwait
  404beb:	aam    0xbd
  404bed:	inc    ecx
  404bee:	lds    edx,FWORD PTR [edi-0x4]
  404bf1:	sub    DWORD PTR [ebp-0x441a8c6e],edi
  404bf7:	out    dx,eax
  404bf8:	ins    DWORD PTR es:[edi],dx
  404bf9:	int3   
  404bfa:	cmc    
  404bfb:	scas   eax,DWORD PTR es:[edi]
  404bfc:	push   edi
  404bfd:	dec    edx
  404bfe:	cld    
  404bff:	mov    WORD PTR [edi],?
  404c01:	std    
  404c02:	or     al,0x50
  404c04:	dec    esp
  404c05:	mov    eax,ds:0xde55f569
  404c0a:	sahf   
  404c0b:	xchg   edx,eax
  404c0c:	outs   dx,BYTE PTR ds:[esi]
  404c0d:	fwait
  404c0e:	es jp  0x404b94
  404c11:	mov    ds:0x7158d112,al
  404c16:	pop    ecx
  404c17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c18:	sbb    bl,BYTE PTR [esi-0x17]
  404c1b:	adc    ecx,esi
  404c1d:	jg     0x404bc5
  404c1f:	ficomp DWORD PTR [ecx+0x590aeb24]
  404c25:	fs call 0xe480:0x7f5fbbeb
  404c2d:	add    eax,esp
  404c2f:	jp     0x404bdc
  404c31:	sbb    BYTE PTR [edx-0x650a8e16],bl
  404c37:	lock out 0x27,eax
  404c3a:	xchg   DWORD PTR [edi-0x71],edi
  404c3d:	aaa    
  404c3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c3f:	push   0x46ca6e0
  404c44:	fbstp  TBYTE PTR [edi-0x3a01b879]
  404c4a:	rcr    BYTE PTR [ebx+ecx*8-0x2b],cl
  404c4e:	fimul  WORD PTR [ebx]
  404c50:	xor    DWORD PTR [ecx+eax*1+0x71bc8993],esp
  404c57:	pusha  
  404c58:	mov    ch,0xf9
  404c5a:	stos   BYTE PTR es:[edi],al
  404c5b:	pushf  
  404c5c:	(bad)  
  404c5e:	mov    al,ds:0x5f02cb70
  404c63:	or     al,0xb5
  404c65:	dec    ebp
  404c66:	jno    0x404cd4
  404c68:	test   eax,0xa261379
  404c6d:	or     ch,al
  404c6f:	test   BYTE PTR [eax-0x2dd11de3],0xa9
  404c76:	cmp    cl,BYTE PTR [edx]
  404c78:	out    dx,eax
  404c79:	sbb    ah,BYTE PTR [esi-0x36]
  404c7c:	fwait
  404c7d:	pop    ds
  404c7e:	test   al,0x87
  404c80:	test   DWORD PTR [ecx+0x5155c712],eax
  404c86:	mov    bl,0x62
  404c88:	js     0x404cdf
  404c8a:	in     al,0x66
  404c8c:	stos   BYTE PTR es:[edi],al
  404c8d:	pop    ebx
  404c8e:	mov    eax,ds:0x71e41a33
  404c93:	mov    dl,0x2c
  404c95:	inc    esi
  404c96:	cmp    edi,ecx
  404c98:	pop    ss
  404c99:	or     dl,BYTE PTR [edx]
  404c9b:	sar    BYTE PTR [edx],1
  404c9d:	mov    esp,esp
  404c9f:	arpl   sp,ax
  404ca1:	pop    ds
  404ca2:	aam    0xa3
  404ca4:	pop    ebp
  404ca5:	mov    ah,0xb0
  404ca7:	std    
  404ca8:	(bad)  [esi-0x18]
  404cab:	ins    DWORD PTR es:[edi],dx
  404cac:	fsub   DWORD PTR [ebx+0x1a]
  404caf:	ja     0x404c98
  404cb1:	int3   
  404cb2:	cs mov edx,0x299b234b
  404cb8:	mov    ds:0x240dbee2,eax
  404cbd:	fwait
  404cbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cbf:	es push ebp
  404cc1:	enter  0x4d4f,0x50
  404cc5:	sub    DWORD PTR [edx],ebx
  404cc7:	and    esi,DWORD PTR [edx+0x49]
  404cca:	out    0x5f,al
  404ccc:	sub    DWORD PTR [edi-0x2a],esi
  404ccf:	imul   eax,DWORD PTR [ebx],0xffffff9e
  404cd2:	xchg   ebx,eax
  404cd3:	push   0xbf632180
  404cd8:	fisub  WORD PTR [eax]
  404cda:	mov    dl,0xcd
  404cdc:	mov    esp,0x145fcb14
  404ce1:	sub    dh,bh
  404ce3:	add    ebp,DWORD PTR [eax+0x2681b79]
  404ce9:	or     eax,0x487335e4
  404cee:	and    eax,0xb21af58c
  404cf3:	mov    ebx,0x887f3e1e
  404cf8:	test   eax,0x214b6290
  404cfd:	stc    
  404cfe:	sbb    al,0xb8
  404d00:	daa    
  404d01:	data16 adc BYTE PTR [eax-0x6a77485e],al
  404d08:	mov    ah,0x5d
  404d0a:	je     0x404d76
  404d0c:	sbb    ebp,DWORD PTR [edi-0x6f]
  404d0f:	dec    ebx
  404d10:	lds    edi,FWORD PTR [ecx-0x549b7f19]
  404d16:	lds    ebp,FWORD PTR [ebx-0x4]
  404d19:	imul   eax,ebp,0xffffffce
  404d1c:	sbb    esi,edx
  404d1e:	jl     0x404cf0
  404d20:	loopne 0x404ccc
  404d22:	out    dx,al
  404d23:	push   0xffffff9a
  404d25:	(bad)  [edx-0x738ff7e9]
  404d2b:	inc    ecx
  404d2c:	or     dl,BYTE PTR [edx+0x18]
  404d2f:	fadd   st(7),st
  404d31:	mov    dh,0x61
  404d33:	repnz sti 
  404d35:	pop    eax
  404d36:	hlt    
  404d37:	mov    edi,0x27375f62
  404d3c:	(bad)
  404d40:	dec    eax
  404d41:	and    BYTE PTR [ebp+0x5e],bl
  404d44:	add    BYTE PTR [edi],al
  404d46:	(bad)  [ebp+0x7bcff42f]
  404d4c:	stc    
  404d4d:	bound  edi,QWORD PTR [edx-0x21]
  404d50:	(bad)  
  404d52:	scas   al,BYTE PTR es:[edi]
  404d53:	sbb    al,0x71
  404d55:	sub    eax,0x1bc8da4d
  404d5a:	adc    BYTE PTR [edx+edi*1+0x624a9b35],bl
  404d61:	js     0x404d7b
  404d63:	jmp    0x404d27
  404d65:	call   FWORD PTR [esi]
  404d67:	inc    esi
  404d68:	and    eax,ebx
  404d6a:	aad    0x36
  404d6c:	out    dx,eax
  404d6d:	shl    DWORD PTR [ecx+ecx*8+0x1e5d1b1b],1
  404d74:	neg    DWORD PTR [edx+0x77]
  404d77:	icebp  
  404d78:	ds pop ebp
  404d7a:	push   cs
  404d7b:	jmp    0xe157373d
  404d80:	pop    eax
  404d81:	xchg   esi,eax
  404d82:	repz push ss
  404d84:	adc    BYTE PTR [edx-0x2bf886c6],dh
  404d8a:	clc    
  404d8b:	(bad)  
  404d8c:	xchg   ebp,eax
  404d8d:	push   cs
  404d8e:	push   eax
  404d8f:	out    dx,al
  404d90:	ret    
  404d91:	clc    
  404d92:	push   ss
  404d93:	outs   dx,BYTE PTR ds:[esi]
  404d94:	mov    eax,ds:0x6843075f
  404d99:	inc    edi
  404d9a:	shr    BYTE PTR [edi+0x5d],cl
  404d9d:	push   es
  404d9e:	aam    0x6d
  404da0:	pop    esi
  404da1:	and    ebx,edx
  404da3:	adc    esi,esp
  404da5:	aas    
  404da6:	pop    ds
  404da7:	and    dl,BYTE PTR [bp+di]
  404daa:	xchg   BYTE PTR [esi],dh
  404dac:	mov    bl,0x94
  404dae:	mov    esp,0x988d0de
  404db3:	icebp  
  404db4:	mov    edi,0x4430fea0
  404db9:	popf   
  404dba:	xchg   esp,eax
  404dbb:	mov    edx,0xab5ac4
  404dc0:	xchg   esp,eax
  404dc1:	jno    0x404d60
  404dc3:	cmp    eax,0x80a03ef3
  404dc8:	ins    BYTE PTR es:[edi],dx
  404dc9:	jecxz  0x404d6d
  404dcb:	popa   
  404dcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404dcd:	xchg   ecx,eax
  404dce:	inc    edi
  404dcf:	data16 or bl,0xfc
  404dd3:	cmp    eax,0x6eefe0cf
  404dd8:	div    DWORD PTR [edi+0x145c4754]
  404dde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ddf:	out    dx,eax
  404de0:	sbb    BYTE PTR [ebp-0x2f],0x58
  404de4:	test   BYTE PTR [ecx+ebx*2-0x7a6c51e1],ah
  404deb:	mov    bl,al
  404ded:	sbb    dh,BYTE PTR [esi-0x413eb86d]
  404df3:	and    cl,BYTE PTR [edx-0x71]
  404df6:	ror    BYTE PTR [ecx+0x1b953f2d],0x79
  404dfd:	ss jno 0x404e33
  404e00:	and    DWORD PTR [ecx],ebp
  404e02:	mov    al,ds:0x8eda8cd4
  404e07:	xchg   esp,eax
  404e08:	pop    es
  404e09:	cmp    al,0xba
  404e0b:	fisttp WORD PTR [eax]
  404e0d:	cs mov esp,0x1d2699b4
  404e13:	push   ss
  404e14:	sub    al,0x4d
  404e16:	pop    ecx
  404e17:	fwait
  404e18:	jo     0x404dd8
  404e1a:	retf   
  404e1b:	aad    0xae
  404e1d:	jmp    0xb040:0x185a43cd
  404e24:	outs   dx,BYTE PTR ds:[esi]
  404e25:	dec    eax
  404e26:	inc    ebx
  404e27:	popa   
  404e28:	daa    
  404e29:	jmp    0x7209a29d
  404e2e:	mov    al,ds:0xd24591b2
  404e33:	je     0x404e6f
  404e35:	mov    esi,0x426eb6a2
  404e3a:	mov    ah,0xa8
  404e3c:	fwait
  404e3d:	and    al,0xce
  404e3f:	push   cs
  404e40:	leave  
  404e41:	adc    bl,BYTE PTR [ecx-0xd]
  404e44:	cmp    ebx,DWORD PTR [ebx+0x3a]
  404e47:	push   ebp
  404e48:	dec    esi
  404e49:	push   ss
  404e4a:	sbb    BYTE PTR [ebx+0x3a],dl
  404e4d:	sbb    eax,0xdfd45fad
  404e52:	popf   
  404e53:	sbb    ecx,DWORD PTR [edx+edi*2+0x4841ea80]
  404e5a:	retf   0x4bfd
  404e5d:	and    dh,al
  404e5f:	fild   WORD PTR [eax]
  404e61:	stos   BYTE PTR es:[edi],al
  404e62:	lods   al,BYTE PTR ds:[esi]
  404e63:	(bad)  
  404e64:	in     al,dx
  404e65:	std    
  404e66:	in     eax,0x8e
  404e68:	cmp    bl,BYTE PTR [edi]
  404e6a:	pop    ebx
  404e6b:	mov    edx,0x89387fb8
  404e70:	test   al,0x1b
  404e72:	pop    ebx
  404e73:	scas   eax,DWORD PTR es:[edi]
  404e74:	cmc    
  404e75:	or     cl,BYTE PTR [edi]
  404e77:	out    dx,eax
  404e78:	fwait
  404e79:	or     BYTE PTR [eax+edx*4-0x21e6a215],ch
  404e80:	dec    esi
  404e81:	adc    al,0xe2
  404e83:	dec    edi
  404e84:	push   0x910fab7c
  404e89:	jl     0x404ea3
  404e8b:	mov    esp,0xfecee034
  404e90:	lods   eax,DWORD PTR ds:[esi]
  404e91:	ins    BYTE PTR es:[edi],dx
  404e92:	bound  esp,QWORD PTR ds:0x3a0272ac
  404e98:	cmc    
  404e99:	fwait
  404e9a:	pmulhuw mm0,mm2
  404e9d:	popa   
  404e9e:	mov    ds:0xd3858725,al
  404ea3:	lock or esp,0x7f
  404ea7:	ret    0xe1d8
  404eaa:	xlat   BYTE PTR ds:[ebx]
  404eab:	mov    ds:0x265a8e7c,al
  404eb0:	stc    
  404eb1:	stc    
  404eb2:	pushf  
  404eb3:	sahf   
  404eb4:	rcr    DWORD PTR [ecx-0x18],cl
  404eb7:	xchg   ecx,eax
  404eb8:	pop    ebp
  404eb9:	inc    esp
  404eba:	inc    ecx
  404ebb:	adc    BYTE PTR ds:0x5256fffb,ah
  404ec1:	push   ds
  404ec2:	sti    
  404ec3:	sub    eax,0x638fcfc6
  404ec8:	sti    
  404ec9:	jp     0x404eb1
  404ecb:	cmp    DWORD PTR [eax-0x25f4c14b],0x35
  404ed2:	lods   eax,DWORD PTR ds:[esi]
  404ed3:	xchg   ebp,eax
  404ed4:	xor    bl,BYTE PTR [esi+0x14]
  404ed7:	mov    cl,0xb1
  404ed9:	fs xchg esi,eax
  404edb:	cmp    BYTE PTR [eax+0x21],al
  404ede:	cwde   
  404edf:	test   BYTE PTR [ecx],bh
  404ee1:	sbb    esi,ebx
  404ee3:	or     dh,BYTE PTR [ebp+0x5ec8b3c2]
  404ee9:	xor    bl,BYTE PTR [eax-0x5a25a375]
  404eef:	mov    esi,0xd22fc963
  404ef4:	lods   eax,DWORD PTR ds:[esi]
  404ef5:	mov    eax,DWORD PTR [edx-0x28]
  404ef8:	scas   al,BYTE PTR es:[edi]
  404ef9:	add    eax,0x9524e6c5
  404efe:	mov    BYTE PTR [eax-0x5c],0x1f
  404f02:	lods   eax,DWORD PTR ds:[esi]
  404f03:	repnz mov bh,0xef
  404f06:	retf   
  404f07:	mov    ebx,0xa44b4f6a
  404f0c:	sbb    bl,BYTE PTR [ebx-0x54f1c576]
  404f12:	jmp    0x46242f73
  404f17:	inc    ecx
  404f18:	or     bl,BYTE PTR [esi+0x2fcfa789]
  404f1e:	fisubr WORD PTR [ebp+eiz*1+0x58a881f9]
  404f25:	dec    eax
  404f26:	inc    ebp
  404f27:	dec    edi
  404f28:	in     eax,dx
  404f29:	cmp    eax,DWORD PTR [edx]
  404f2b:	xor    esp,edx
  404f2d:	xchg   BYTE PTR [ebp+0x27a8dc5e],al
  404f33:	xlat   BYTE PTR ss:[ebx]
  404f35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f36:	mov    ecx,DWORD PTR [ebx+edx*4]
  404f39:	pop    esi
  404f3a:	cmp    edi,DWORD PTR [edi+0x2]
  404f3d:	iret   
  404f3e:	mov    dh,0xb5
  404f40:	std    
  404f41:	inc    eax
  404f42:	and    eax,0xc4b2a411
  404f47:	jb     0x404f89
  404f49:	shr    BYTE PTR [edi-0x4f5129bd],cl
  404f4f:	sbb    DWORD PTR [esi-0x11],eax
  404f52:	jge    0x404efd
  404f54:	sub    DWORD PTR ds:0x11d681e4,edi
  404f5a:	mov    esi,0xca2ee913
  404f5f:	add    edx,DWORD PTR [ecx-0x4]
  404f62:	shl    BYTE PTR [ebx],1
  404f64:	pop    ebp
  404f65:	add    edx,DWORD PTR [edx]
  404f67:	fisub  DWORD PTR [eax]
  404f69:	push   es
  404f6a:	out    0x9b,eax
  404f6c:	pop    eax
  404f6d:	push   ecx
  404f6e:	cmp    bl,bl
  404f70:	add    BYTE PTR [ecx-0x7b],ah
  404f73:	sbb    DWORD PTR ds:0xcb437b43,0x7d
  404f7a:	xchg   esi,ebx
  404f7c:	xor    esi,DWORD PTR [esp+eax*8+0x7b709dc2]
  404f83:	sub    ch,BYTE PTR [ebx-0x2cc382ec]
  404f89:	leave  
  404f8a:	fld    DWORD PTR [edx+0x0]
  404f8d:	push   esp
  404f8e:	es fwait
  404f90:	call   0x6c1bc6e5
  404f95:	mov    edi,cs
  404f97:	push   edi
  404f98:	jnp    0x404f45
  404f9a:	std    
  404f9b:	arpl   WORD PTR [esi+0x24],dx
  404f9e:	push   ss
  404f9f:	lods   al,BYTE PTR fs:[esi]
  404fa1:	add    al,0x95
  404fa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fa4:	xchg   ebp,eax
  404fa5:	test   al,0xdf
  404fa7:	data16 fild WORD PTR [ebx+eax*2+0x63]
  404fac:	lods   al,BYTE PTR ds:[esi]
  404fad:	mov    al,ds:0xa7c12e17
  404fb2:	pop    ecx
  404fb3:	std    
  404fb4:	test   DWORD PTR [esi+ebp*4+0x23ee6e94],eax
  404fbb:	dec    esi
  404fbc:	xchg   edx,eax
  404fbd:	or     BYTE PTR [esi+0x24],0x4
  404fc1:	inc    eax
  404fc2:	clc    
  404fc3:	arpl   WORD PTR [edx+edx*8-0x6afde7b1],sp
  404fca:	xchg   edi,eax
  404fcb:	inc    eax
  404fcc:	push   ebp
  404fcd:	push   0xd7d50d2d
  404fd2:	mov    al,ds:0x1700fd14
  404fd7:	add    dh,BYTE PTR [edi+0x50]
  404fda:	or     eax,0x932adb0e
  404fdf:	out    dx,al
  404fe0:	mov    ebx,0x3c5972af
  404fe5:	ficom  DWORD PTR [ecx+ebp*1]
  404fe8:	cli    
  404fe9:	das    
  404fea:	push   0x6c
  404fec:	add    BYTE PTR [esi],bh
  404fee:	jns    0x405022
  404ff0:	mov    esp,0xb1d2bb51
  404ff5:	shr    esp,cl
  404ff7:	pavgb  mm1,QWORD PTR [esi]
  404ffa:	stos   DWORD PTR es:[edi],eax
  404ffb:	(bad)  
  404ffc:	in     al,dx
  404ffd:	adc    al,0x10
  404fff:	lods   eax,DWORD PTR ds:[esi]
  405000:	push   es
  405001:	fist   DWORD PTR [ebx]
  405003:	or     ah,BYTE PTR [esi-0x36]
  405006:	jae    0x40505d
  405008:	or     cl,BYTE PTR ds:0x47eb19c8
  40500e:	cli    
  40500f:	outs   dx,DWORD PTR ds:[esi]
  405010:	jne    0x405074
  405012:	out    0x49,eax
  405014:	dec    esi
  405015:	(bad)  
  405018:	neg    BYTE PTR [ebx]
  40501a:	push   cs
  40501b:	and    DWORD PTR [ecx+0x29340390],eax
  405021:	fdiv   QWORD PTR [esi-0x10]
  405024:	sti    
  405025:	jle    0x40503b
  405027:	loope  0x405088
  405029:	imul   eax,DWORD PTR [ebp-0x6235e46c],0xffffffd0
  405030:	mul    BYTE PTR [ecx]
  405032:	adc    BYTE PTR fs:[eax],al
  405035:	add    ah,BYTE PTR [esi]
  405037:	dec    eax
  405038:	in     eax,dx
  405039:	dec    ebx
  40503a:	sub    DWORD PTR [ebx],ebp
  40503c:	push   edi
  40503d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40503e:	or     al,0xc1
  405040:	ret    0x43ed
  405043:	out    0x81,al
  405045:	out    dx,al
  405046:	sbb    al,0x83
  405048:	pop    DWORD PTR [edx+0x76c68223]
  40504e:	xchg   ecx,eax
  40504f:	cmp    bl,BYTE PTR ds:0x86fe074a
  405055:	jl     0x405073
  405057:	jmp    0x532c6eac
  40505c:	scas   eax,DWORD PTR es:[edi]
  40505d:	mov    fs,WORD PTR [eax]
  40505f:	mov    ecx,0xcdebe05e
  405064:	mov    ecx,0x332c601d
  405069:	nop
  40506a:	inc    eax
  40506b:	jmp    0x5bdf997a
  405070:	aad    0xd5
  405072:	test   DWORD PTR [edx],esp
  405074:	daa    
  405075:	add    al,ch
  405077:	outs   dx,DWORD PTR ds:[esi]
  405078:	add    DWORD PTR [ebx],edi
  40507a:	in     al,0x9b
  40507c:	in     al,0x61
  40507e:	test   eax,0xc2ffed5e
  405083:	push   edx
  405084:	sbb    eax,0xcde14a4e
  405089:	(bad)  
  40508a:	xchg   edi,eax
  40508b:	cmp    ecx,DWORD PTR [ebp-0x420c9147]
  405091:	sbb    al,0x6c
  405093:	mov    esi,0x81b3e096
  405098:	and    DWORD PTR [edx+eiz*4],edx
  40509b:	mov    ebp,edi
  40509d:	push   edx
  40509e:	pop    ebx
  40509f:	adc    edx,ecx
  4050a1:	sub    al,0x88
  4050a3:	pop    ecx
  4050a4:	pop    es
  4050a5:	ret    
  4050a6:	add    bl,BYTE PTR [edx+0x635b199d]
  4050ac:	shl    DWORD PTR [ebx+0xbbc603b],0xd2
  4050b3:	(bad)  
  4050b4:	in     al,dx
  4050b5:	mov    ecx,0x4cd3e61e
  4050ba:	fwait
  4050bb:	dec    edi
  4050bc:	push   es
  4050bd:	sti    
  4050be:	inc    ecx
  4050bf:	fbld   TBYTE PTR [edi]
  4050c1:	sets   BYTE PTR [esi-0x58]
  4050c5:	cmp    BYTE PTR [edi+0x53],bl
  4050c8:	or     al,0x9d
  4050ca:	retf   
  4050cb:	mov    bh,0xd
  4050cd:	leave  
  4050ce:	and    eax,0x6b4f13a9
  4050d3:	sbb    ah,BYTE PTR [eax+eiz*4-0x57]
  4050d7:	not    BYTE PTR [ebx]
  4050d9:	add    BYTE PTR [eax+0x44],0x51
  4050dd:	jle    0x405156
  4050df:	xchg   ebx,eax
  4050e0:	cli    
  4050e1:	aaa    
  4050e2:	ror    esp,1
  4050e4:	adc    dl,0x62
  4050e7:	lea    edi,[ebx-0x43]
  4050ea:	adc    ch,BYTE PTR [esi]
  4050ec:	and    BYTE PTR [edi],bh
  4050ee:	(bad)  
  4050ef:	mov    eax,ds:0xcfa79877
  4050f4:	push   edi
  4050f5:	test   dl,ch
  4050f7:	arpl   WORD PTR [edx+0x4c],dx
  4050fa:	test   al,0xeb
  4050fc:	mov    al,ds:0x72dd802e
  405101:	xchg   ebx,eax
  405102:	repz mov ebp,0x54d32076
  405108:	sub    dl,dh
  40510a:	jno    0x405165
  40510c:	jl     0x40510d
  40510e:	pop    es
  40510f:	std    
  405110:	(bad)  
  405111:	and    BYTE PTR [ecx+0x258b80dc],dl
  405117:	adc    edi,DWORD PTR [edi]
  405119:	mov    edi,0x665a396e
  40511e:	pop    ebx
  40511f:	dec    edi
  405120:	xchg   DWORD PTR [esp+edx*1],esp
  405123:	mov    BYTE PTR [ebp+0x582e9a74],bh
  405129:	pop    ss
  40512a:	push   0x55
  40512c:	icebp  
  40512d:	or     DWORD PTR [esi+esi*8-0x4e89af82],esi
  405134:	push   esp
  405135:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405136:	test   BYTE PTR [esi+0x1e],al
  405139:	into   
  40513a:	ja     0x405197
  40513c:	aaa    
  40513d:	add    edi,DWORD PTR [ebx+0xe9eaeb7]
  405143:	dec    edi
  405144:	dec    ecx
  405145:	es push esi
  405147:	arpl   WORD PTR [eax],bp
  405149:	pop    esi
  40514a:	lea    edx,[ebx+0x1d]
  40514d:	jmp    0x4050fb
  40514f:	jo     0x405146
  405151:	mov    bl,0xbc
  405153:	inc    esi
  405154:	inc    ebx
  405155:	ds inc ecx
  405157:	in     al,dx
  405158:	ss ja  0x4050ea
  40515b:	(bad)  
  40515d:	sub    DWORD PTR [edi+0xc],ebp
  405160:	or     bh,BYTE PTR [esi-0x63]
  405163:	mov    WORD PTR [edx+edx*8-0x9],fs
  405167:	jecxz  0x4051a2
  405169:	or     dl,BYTE PTR ds:0x816658a1
  40516f:	jb     0x405169
  405171:	jl     0x4050f5
  405173:	clc    
  405174:	pop    es
  405175:	push   edi
  405176:	ins    BYTE PTR es:[edi],dx
  405177:	mov    edx,0x77beef2b
  40517c:	aam    0x2
  40517e:	(bad)  
  40517f:	xor    DWORD PTR ds:0xcc41ec29,eax
  405185:	inc    ebp
  405186:	cmp    DWORD PTR [edi-0x1],0xffffffb3
  40518a:	mov    al,ds:0x7d357f83
  40518f:	outs   dx,BYTE PTR ds:[esi]
  405190:	pop    ebx
  405191:	ret    
  405192:	inc    ecx
  405193:	in     al,dx
  405194:	iret   
  405195:	(bad)  
  405197:	adc    ch,BYTE PTR [eax+0x10]
  40519a:	xor    DWORD PTR [edi+ebx*1-0x34f6137c],edi
  4051a1:	fadd   QWORD PTR [eax+esi*4-0x13]
  4051a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051a6:	(bad)  
  4051a8:	sbb    eax,0x98b43444
  4051ad:	(bad)  
  4051ae:	nop
  4051af:	inc    edi
  4051b0:	push   ebp
  4051b1:	clc    
  4051b2:	jns    0x405228
  4051b4:	(bad)  
  4051b5:	pusha  
  4051b6:	mov    al,0xdb
  4051b8:	mov    edi,0xaf033b0c
  4051bd:	sub    DWORD PTR [eax+0x534440b0],ebx
  4051c3:	std    
  4051c4:	out    dx,al
  4051c5:	xchg   esi,eax
  4051c6:	dec    esi
  4051c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051c8:	data16 aad 0xda
  4051cb:	sbb    cl,BYTE PTR [ebx+0x19]
  4051ce:	iret   
  4051cf:	push   0xffffffec
  4051d1:	adc    cl,BYTE PTR [ebp+0x7e1ab48d]
  4051d7:	out    0xa8,eax
  4051d9:	mov    es,eax
  4051db:	ds call 0x125ef15b
  4051e1:	out    0x1e,eax
  4051e3:	lds    esi,FWORD PTR [edi+edi*2+0x4a42ac97]
  4051ea:	pop    ebp
  4051eb:	into   
  4051ec:	outs   dx,DWORD PTR ds:[esi]
  4051ed:	and    BYTE PTR [ecx+eiz*2+0x76480c85],dl
  4051f4:	dec    ecx
  4051f5:	lods   eax,DWORD PTR ds:[esi]
  4051f6:	sahf   
  4051f7:	imul   edi,ebp,0xffffffa4
  4051fa:	mov    WORD PTR [eax+ebp*2],fs
  4051fd:	xor    DWORD PTR [ebx+0x3f3e915f],0xffffff98
  405204:	or     eax,0xc56e8b5e
  405209:	jmp    0x1b8d:0xfc2427
  405210:	int    0x75
  405212:	or     eax,0xde4c9775
  405217:	jl     0x40524a
  405219:	xchg   eax,edx
  40521b:	pop    ecx
  40521c:	ins    BYTE PTR es:[edi],dx
  40521d:	and    esi,eax
  40521f:	cmp    eax,0xd2b0c52f
  405224:	dec    eax
  405225:	mov    ch,0x2c
  405227:	dec    edx
  405228:	push   ecx
  405229:	cld    
  40522a:	or     BYTE PTR [esi],dh
  40522c:	fidiv  WORD PTR [esi+0x6d]
  40522f:	arpl   cx,bx
  405231:	popa   
  405232:	cdq    
  405233:	xor    bl,dh
  405235:	loopne 0x40522e
  405237:	jle    0x405291
  405239:	dec    ebp
  40523a:	or     al,BYTE PTR [ecx-0x37e24b60]
  405240:	pop    ebp
  405241:	dec    edx
  405242:	nop
  405243:	add    al,0x5e
  405245:	jmp    0x405252
  405247:	cdq    
  405248:	test   al,0x0
  40524a:	addr16 mov al,0x59
  40524d:	stos   BYTE PTR es:[edi],al
  40524e:	jl     0x40523b
  405250:	popf   
  405251:	dec    esi
  405252:	mov    al,BYTE PTR [eax-0x26]
  405255:	in     al,0x12
  405257:	aas    
  405258:	loopne 0x40524e
  40525a:	out    0x8e,al
  40525c:	and    al,BYTE PTR [edx+0x20]
  40525f:	xchg   eax,edx
  405261:	jnp    0x405248
  405263:	stc    
  405264:	inc    ebp
  405265:	in     eax,dx
  405266:	sbb    ebx,ecx
  405268:	mov    dl,BYTE PTR [ebx+0x26]
  40526b:	xchg   ebp,eax
  40526c:	inc    esp
  40526d:	inc    eax
  40526e:	dec    esp
  40526f:	push   es
  405270:	push   esp
  405271:	rcl    DWORD PTR [esp-0x23767b9b],0xbc
  405279:	xchg   edx,ebx
  40527b:	je     0x405260
  40527d:	dec    edi
  40527e:	in     eax,dx
  40527f:	xchg   DWORD PTR [edi],ecx
  405281:	jmp    0x606:0x2b6397c0
  405288:	shl    esi,cl
  40528a:	jmp    0xdd4d:0x6c0344b8
  405291:	cmp    DWORD PTR [esi],0x1fb1395a
  405297:	xchg   edi,eax
  405298:	std    
  405299:	mov    edx,0x19840de2
  40529e:	xchg   DWORD PTR [ebp+0x21a6921a],edx
  4052a4:	out    0x26,al
  4052a6:	jb     0x4052c4
  4052a8:	xchg   ecx,eax
  4052a9:	pop    ds
  4052aa:	push   cs
  4052ab:	call   0x1475:0xf4ab77a
  4052b2:	mov    bl,0xc8
  4052b4:	mov    DWORD PTR [eax],esp
  4052b6:	pop    esi
  4052b7:	hlt    
  4052b8:	inc    ebx
  4052b9:	sar    BYTE PTR [edx-0xcdd7313],cl
  4052bf:	shl    DWORD PTR [edi+0x335b15a7],cl
  4052c5:	repnz leave 
  4052c7:	inc    edi
  4052c8:	pushf  
  4052c9:	adc    BYTE PTR cs:[ebp+0x77958950],0x52
  4052d1:	push   esp
  4052d2:	mov    DWORD PTR [edx+0x71],ebp
  4052d5:	and    al,0x3f
  4052d7:	push   ds
  4052d8:	std    
  4052d9:	add    DWORD PTR [esi+0x477ae0c3],0x1791c009
  4052e3:	fcomi  st,st(1)
  4052e5:	(bad)  
  4052e6:	repnz das 
  4052e8:	dec    esi
  4052e9:	in     al,0x45
  4052eb:	shr    BYTE PTR [ebp+0x5d426410],cl
  4052f1:	enter  0x98da,0x83
  4052f5:	cdq    
  4052f6:	(bad)  
  4052f7:	in     eax,0xd9
  4052f9:	ds pusha 
  4052fb:	push   cs
  4052fc:	stos   BYTE PTR es:[edi],al
  4052fd:	sbb    dl,ch
  4052ff:	aad    0xf7
  405301:	fs (bad) 
  405303:	jl     0x4052d2
  405305:	pop    edi
  405306:	or     eax,0x86dd5010
  40530b:	test   DWORD PTR [edx+0x31],edx
  40530e:	jmp    0x165:0x97907606
  405315:	dec    ecx
  405316:	pop    es
  405317:	push   ecx
  405318:	dec    ecx
  405319:	mov    ebx,0x37465e64
  40531e:	into   
  40531f:	mov    edi,DWORD PTR [edx+0x76]
  405322:	inc    dl
  405324:	test   eax,0xf0584951
  405329:	mov    dl,0x84
  40532b:	xlat   BYTE PTR ds:[ebx]
  40532c:	jns    0x4052d8
  40532e:	into   
  40532f:	pop    edx
  405330:	push   ebx
  405331:	(bad)  
  405333:	int3   
  405334:	aas    
  405335:	inc    eax
  405336:	inc    esi
  405337:	arpl   si,ax
  405339:	xchg   dh,ch
  40533b:	aam    0x1b
  40533d:	sub    dl,0x39
  405340:	add    eax,DWORD PTR [ebp+0x4e1cccd]
  405346:	cvtps2pi mm2,xmm5
  405349:	mov    BYTE PTR [esi+ecx*2+0x422a317c],dl
  405350:	add    eax,0x30f7a5ea
  405355:	ficom  WORD PTR [ecx]
  405357:	xor    dl,dl
  405359:	pop    esi
  40535a:	adc    BYTE PTR [edx-0x2c23e51d],ch
  405360:	jb     0x405347
  405362:	loope  0x4053b8
  405364:	lock arpl WORD PTR [edi+0x596a1246],si
  40536b:	sbb    DWORD PTR fs:[ecx],0xea1b5ae8
  405372:	in     al,dx
  405373:	(bad)  
  405374:	ins    BYTE PTR es:[edi],dx
  405375:	xchg   BYTE PTR ds:0xe63da493,bl
  40537b:	cmc    
  40537c:	sbb    eax,0x11b39785
  405381:	loope  0x4053d3
  405383:	push   ebp
  405384:	pop    eax
  405385:	xchg   ecx,eax
  405386:	imul   BYTE PTR [edi+0x2a0f213b]
  40538c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40538d:	in     al,dx
  40538e:	fwait
  40538f:	cmp    BYTE PTR [esi+0x49dd8eaf],dl
  405395:	bound  ebp,QWORD PTR [eax-0x8456a51]
  40539b:	cwde   
  40539c:	loopne 0x40535d
  40539e:	ret    
  40539f:	lods   eax,DWORD PTR ds:[esi]
  4053a0:	and    al,0xfe
  4053a2:	jo     0x4053fa
  4053a4:	test   BYTE PTR [eax+esi*8-0x40be45e8],bl
  4053ab:	pop    ss
  4053ac:	push   es
  4053ad:	pop    ss
  4053ae:	add    edx,ebp
  4053b0:	ret    0x21be
  4053b3:	aas    
  4053b4:	cmp    al,0xf3
  4053b6:	daa    
  4053b7:	mov    dh,BYTE PTR [eax-0x76d6cc9d]
  4053bd:	stos   DWORD PTR es:[edi],eax
  4053be:	jmp    0x405384
  4053c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053c1:	pop    ebp
  4053c2:	aad    0xe8
  4053c4:	pop    ds
  4053c5:	mov    dl,al
  4053c7:	(bad)  
  4053c8:	loope  0x40541c
  4053ca:	cmp    DWORD PTR [ebx-0x2ee529c6],ecx
  4053d0:	mov    al,ds:0xa9afe6dc
  4053d5:	xor    BYTE PTR ds:0x73cf600b,bh
  4053db:	and    edi,DWORD PTR [edx]
  4053dd:	(bad)  
  4053de:	fnstcw WORD PTR [ebp+0x64354f26]
  4053e4:	les    ecx,FWORD PTR [edi+0x32fd5af8]
  4053ea:	jmp    0x9b8490a2
  4053ef:	push   edi
  4053f0:	imul   edx,DWORD PTR [edx-0x5e2e36fc],0x57
  4053f7:	adc    BYTE PTR [esi+ecx*1-0x12],al
  4053fb:	leave  
  4053fc:	inc    esp
  4053fd:	pusha  
  4053fe:	repz xchg ebx,eax
  405400:	test   BYTE PTR [ecx-0x49],al
  405403:	or     bl,BYTE PTR [edx]
  405405:	inc    BYTE PTR [edi-0x5131d0ac]
  40540b:	lock jno 0x405413
  40540e:	mov    bl,0xac
  405410:	into   
  405411:	cmp    BYTE PTR [ebx-0x17588a03],0x0
  405418:	add    eax,0xc1255c63
  40541d:	dec    esp
  40541e:	xchg   edx,edx
  405420:	jmp    0x405486
  405422:	test   al,0x4b
  405424:	xchg   ecx,eax
  405425:	mov    edx,edi
  405427:	shl    DWORD PTR [ebx-0x24be2c0a],0x42
  40542e:	push   esi
  40542f:	jbe    0x405474
  405431:	jmp    0x1f97:0x549b3445
  405438:	pop    ebp
  405439:	imul   esp,eax,0xd093707d
  40543f:	inc    ecx
  405440:	fistp  QWORD PTR [edx]
  405442:	xor    ah,BYTE PTR [esi-0x50c6eae2]
  405448:	and    ebp,DWORD PTR [esi]
  40544a:	rol    BYTE PTR [ecx],1
  40544c:	adc    BYTE PTR [ebx+0x51],bl
  40544f:	lods   al,BYTE PTR ds:[esi]
  405450:	adc    BYTE PTR ds:0x93a60650,ah
  405456:	adc    bh,BYTE PTR [edi+0x18547a70]
  40545c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40545d:	(bad)  [esi+0x41eebd34]
  405463:	adc    edx,edx
  405465:	fiadd  WORD PTR [ebx]
  405467:	aaa    
  405468:	fidiv  WORD PTR [edx+0xbc15411]
  40546e:	(bad)  
  40546f:	push   ds
  405470:	test   DWORD PTR [ebp+0x1658f469],ebp
  405476:	in     eax,dx
  405477:	mov    BYTE PTR [ebx+0x2051fc5],cl
  40547d:	and    ecx,edx
  40547f:	and    eax,0xafea2e99
  405484:	or     eax,0x2c67fa90
  405489:	sub    DWORD PTR ds:0xf3dadd7e,eax
  40548f:	mov    bl,0xf
  405491:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405492:	hlt    
  405493:	retf   0x76f8
  405496:	jo     0x4054fe
  405498:	jb     0x40550e
  40549a:	or     BYTE PTR [ebp-0xf],dl
  40549d:	or     ebp,DWORD PTR gs:[eax+0x86e87a]
  4054a4:	call   0x78c4:0x16ce850e
  4054ab:	scas   eax,DWORD PTR es:[edi]
  4054ac:	sub    eax,0xad3cdc89
  4054b1:	mov    dl,0xd0
  4054b3:	xchg   ebx,eax
  4054b4:	inc    esi
  4054b5:	jl     0x405466
  4054b7:	aas    
  4054b8:	pop    ecx
  4054b9:	imul   ebp,DWORD PTR fs:[edx+0x4fadb9ac],0x1
  4054c1:	mov    ebp,DWORD PTR [ebx]
  4054c3:	mov    DWORD PTR ds:0xebc5168c,ebp
  4054c9:	mov    edi,0x1fb212f5
  4054ce:	dec    esp
  4054cf:	int    0x26
  4054d1:	sbb    DWORD PTR [eax+ebx*8-0x6b930481],esi
  4054d8:	dec    BYTE PTR [ecx+0x45d9557a]
  4054de:	out    dx,al
  4054df:	psrlq  mm2,QWORD PTR [ebx+0x32bb2c5]
  4054e6:	loop   0x4054c8
  4054e8:	mov    bl,0x17
  4054ea:	fcom   DWORD PTR [ebx+0x66]
  4054ed:	dec    ebx
  4054ee:	out    dx,eax
  4054ef:	sub    ebx,DWORD PTR [eax]
  4054f1:	cld    
  4054f2:	push   es
  4054f3:	add    BYTE PTR [edi],cl
  4054f5:	xchg   esi,eax
  4054f6:	sub    dh,ch
  4054f8:	adc    bh,BYTE PTR [ecx-0x6b5d014b]
  4054fe:	icebp  
  4054ff:	or     al,0xf0
  405501:	dec    ebx
  405502:	stos   BYTE PTR es:[edi],al
  405503:	push   ebx
  405504:	xchg   DWORD PTR [edx+0x4d6baa85],esi
  40550a:	jnp    0x4054e5
  40550c:	lock jmp FWORD PTR [edx-0x7e457725]
  405513:	out    0x10,eax
  405515:	dec    edx
  405516:	add    WORD PTR [edx],di
  405519:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40551a:	loopne 0x4054f6
  40551c:	sbb    BYTE PTR [edx+0x6e],bl
  40551f:	and    DWORD PTR [esi],0xc72f7559
  405525:	mov    cl,0x23
  405527:	jnp    0x405553
  405529:	sub    BYTE PTR [eax],0x4c
  40552c:	xchg   ebp,eax
  40552d:	retf   
  40552e:	aas    
  40552f:	fistp  WORD PTR [ebx]
  405531:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405532:	scas   al,BYTE PTR es:[edi]
  405533:	push   ss
  405534:	clc    
  405535:	or     eax,0x9b9afe31
  40553a:	dec    ebx
  40553b:	xchg   DWORD PTR [ebp-0x444815bb],ebp
  405541:	mov    ch,0x3a
  405543:	xchg   BYTE PTR [edi],bh
  405545:	into   
  405546:	mov    ah,0xc7
  405548:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40554a:	sub    al,0xe3
  40554c:	mov    bl,0xd3
  40554e:	push   eax
  40554f:	add    dh,BYTE PTR [ebx]
  405551:	push   cs
  405552:	inc    edx
  405553:	push   ebx
  405554:	add    eax,0xceece91f
  405559:	mov    eax,ds:0x723f9876
  40555e:	and    bl,BYTE PTR [ebx]
  405560:	inc    ebp
  405561:	call   0xa3be4833
  405566:	scas   al,BYTE PTR es:[edi]
  405567:	fimul  DWORD PTR [eax-0x6b62ae6b]
  40556d:	retf   0xd65b
  405570:	mov    ds:0xbdc97b3d,eax
  405575:	iret   
  405576:	sub    DWORD PTR ds:0x54c69409,ebx
  40557c:	fwait
  40557d:	jg     0x4055ef
  40557f:	es xor al,0x76
  405582:	add    ah,BYTE PTR [ecx]
  405584:	and    eax,0x197aacf5
  405589:	xor    ebx,DWORD PTR [esi+esi*2]
  40558c:	sbb    eax,0x9491a028
  405591:	loop   0x4055b7
  405593:	mov    eax,ds:0xff7a151a
  405598:	adc    eax,edx
  40559a:	es pop ebp
  40559c:	cld    
  40559d:	add    ebx,DWORD PTR [ebx]
  40559f:	(bad)  
  4055a0:	or     al,0x4e
  4055a2:	je     0x405584
  4055a4:	test   ebp,esi
  4055a6:	cmp    edx,DWORD PTR [ecx-0x15]
  4055a9:	(bad)  
  4055aa:	mov    ah,BYTE PTR [edi+0x2]
  4055ad:	sbb    BYTE PTR ss:[eax+0x3b],bh
  4055b1:	push   cs
  4055b2:	add    BYTE PTR [edx+0x79b1c9fa],0x88
  4055b9:	dec    ebp
  4055ba:	cdq    
  4055bb:	leave  
  4055bc:	jp     0x405605
  4055be:	leave  
  4055bf:	push   edx
  4055c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055c1:	mov    ah,0xfd
  4055c3:	ret    0x83e0
  4055c6:	stos   DWORD PTR es:[edi],eax
  4055c7:	popf   
  4055c8:	adc    DWORD PTR [eax+esi*2-0x9],edx
  4055cc:	mov    edi,0x33205b6e
  4055d1:	sub    al,0xb7
  4055d3:	xor    ebx,DWORD PTR [ecx-0x26]
  4055d6:	test   eax,0x47141505
  4055db:	sbb    DWORD PTR [edx+ebp*1],ebx
  4055de:	std    
  4055df:	mov    edx,edi
  4055e1:	sub    eax,0xb3f0b06a
  4055e6:	rol    eax,1
  4055e8:	out    0x33,al
  4055ea:	pop    ebp
  4055eb:	aaa    
  4055ec:	mul    DWORD PTR [ebx]
  4055ee:	loopne 0x405632
  4055f0:	sbb    al,0xb7
  4055f2:	daa    
  4055f3:	xchg   ecx,eax
  4055f4:	pop    ecx
  4055f5:	(bad)  
  4055f6:	aas    
  4055f7:	mov    BYTE PTR [ebx],cl
  4055f9:	xor    BYTE PTR [esi],bl
  4055fb:	mov    gs,WORD PTR [ebx+0x42]
  4055fe:	or     DWORD PTR [esi+0x6c],ecx
  405601:	sub    BYTE PTR [ecx],0x21
  405604:	imul   ebp,DWORD PTR ds:0xd66563af,0xffffffc7
  40560b:	pushf  
  40560c:	push   0x2f217776
  405611:	push   ebp
  405612:	dec    ecx
  405613:	jnp    0x4055ef
  405615:	jae    0x405649
  405617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405618:	push   ebx
  405619:	ror    DWORD PTR [ebx],cl
  40561b:	mov    WORD PTR [esi],?
  40561d:	out    0xf2,al
  40561f:	mov    BYTE PTR [edx+edi*1],dh
  405622:	mov    ds:0xc8fa1f4b,al
  405627:	cmp    bh,ah
  405629:	xor    edi,edi
  40562b:	stos   BYTE PTR es:[edi],al
  40562c:	or     DWORD PTR [ebx+edi*8+0x71],ecx
  405630:	xchg   edx,eax
  405631:	call   FWORD PTR [edx-0x59fd3434]
  405637:	dec    ebp
  405638:	jecxz  0x405608
  40563a:	xor    ebx,DWORD PTR [ecx+0x50f3dc3b]
  405640:	xor    eax,0xfb22752a
  405645:	clc    
  405646:	mov    ch,0x85
  405648:	xchg   edi,ebp
  40564a:	cmp    eax,0x153ce05a
  40564f:	sahf   
  405650:	cmp    cl,BYTE PTR [ecx+0x71]
  405653:	mov    esp,0xd9b41a3d
  405658:	xchg   ecx,eax
  405659:	in     eax,0xe6
  40565b:	retf   
  40565c:	cdq    
  40565d:	div    DWORD PTR [ebx+eax*8+0x68c200b7]
  405664:	pop    ebx
  405665:	pop    ecx
  405666:	pop    eax
  405667:	sbb    al,0xad
  405669:	add    eax,eax
  40566b:	and    eax,0xa236c894
  405670:	add    BYTE PTR [ebp+0x61],bl
  405673:	mov    cl,0xa5
  405675:	push   esi
  405676:	sbb    ah,al
  405678:	scas   al,BYTE PTR es:[edi]
  405679:	sahf   
  40567a:	mov    edi,0xe54d6a2d
  40567f:	cli    
  405680:	jg     0x40564c
  405682:	or     eax,DWORD PTR [esi-0x48]
  405685:	push   ecx
  405686:	add    DWORD PTR [edi],esp
  405688:	cdq    
  405689:	and    eax,0xdefbf697
  40568e:	push   esp
  40568f:	ja     0x4056ca
  405691:	test   al,0x54
  405693:	xchg   ebx,eax
  405694:	scas   eax,DWORD PTR es:[edi]
  405695:	sbb    DWORD PTR [eax],ecx
  405697:	xchg   BYTE PTR ds:0xadede22e,al
  40569d:	add    esi,DWORD PTR [ebx]
  40569f:	int3   
  4056a0:	and    edi,esp
  4056a2:	arpl   dx,sp
  4056a4:	imul   ebx,eax,0x59
  4056a7:	adc    esp,eax
  4056a9:	pop    ss
  4056aa:	ins    DWORD PTR es:[edi],dx
  4056ab:	dec    esi
  4056ac:	cmp    ah,al
  4056ae:	inc    esp
  4056af:	add    dl,BYTE PTR [esi]
  4056b1:	or     DWORD PTR [edi+0x3c],eax
  4056b4:	ret    0x80c5
  4056b7:	dec    edx
  4056b8:	je     0x4056bd
  4056ba:	aas    
  4056bb:	dec    ecx
  4056bc:	stc    
  4056bd:	and    edi,ebx
  4056bf:	(bad)  
  4056c0:	popf   
  4056c1:	ret    0x4a30
  4056c4:	inc    edx
  4056c5:	mov    eax,ds:0xce32dfb7
  4056ca:	mov    BYTE PTR [ebp+0x10],cl
  4056cd:	or     ebp,DWORD PTR [edx]
  4056cf:	call   0x561ee68c
  4056d4:	pop    ecx
  4056d5:	fwait
  4056d6:	mov    ebp,0x9011821b
  4056db:	mov    cl,0xe7
  4056dd:	pusha  
  4056de:	test   al,0x9a
  4056e0:	xchg   ecx,eax
  4056e1:	adc    DWORD PTR ds:0xb2a3c12e,esp
  4056e7:	xchg   ebp,eax
  4056e8:	aas    
  4056e9:	mov    BYTE PTR [esi+0x51b0c247],dh
  4056ef:	loopne 0x40575c
  4056f1:	es inc esp
  4056f3:	dec    ebp
  4056f4:	pop    edi
  4056f5:	mov    ds:0xc49fb882,eax
  4056fa:	call   0xbe77:0x6371b17e
  405701:	les    esi,FWORD PTR [ebp-0x3b]
  405704:	js     0x4056d7
  405706:	dec    edi
  405707:	mov    WORD PTR [ecx-0x7b],?
  40570a:	lods   eax,DWORD PTR ds:[esi]
  40570b:	jno    0x4056f3
  40570d:	enter  0xdb5b,0x51
  405711:	mov    ecx,0x5c90cd37
  405716:	imul   esp,edi,0xa8ba68d6
  40571c:	je     0x405768
  40571e:	jb     0x4056fb
  405720:	sbb    DWORD PTR [esi+0x77b8a26d],edi
  405726:	mov    al,0x52
  405728:	mov    cl,BYTE PTR [ecx]
  40572a:	sub    DWORD PTR [ecx],edi
  40572c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40572d:	icebp  
  40572e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40572f:	xor    dh,BYTE PTR cs:[ecx+edi*2]
  405733:	inc    esi
  405734:	cmp    al,0x48
  405736:	test   BYTE PTR [ecx+0x4f],bl
  405739:	adc    DWORD PTR [esi+0x62],ecx
  40573c:	adc    DWORD PTR [ebp+0x2a790abf],esi
  405742:	call   0x405d6c5e
  405747:	aaa    
  405748:	shr    ecx,cl
  40574a:	ja     0x405775
  40574c:	pop    DWORD PTR [ebx-0xe38cd6e]
  405752:	pop    eax
  405753:	xchg   BYTE PTR [ecx],bl
  405755:	into   
  405756:	jno    0x4057cb
  405758:	data16 ja 0x405703
  40575b:	icebp  
  40575c:	out    dx,eax
  40575d:	cmp    al,0x60
  40575f:	inc    ebx
  405760:	and    DWORD PTR [ebx-0x10],0x42663808
  405767:	bound  esi,QWORD PTR [eax]
  405769:	(bad)  
  40576c:	into   
  40576d:	ret    
  40576e:	inc    edi
  40576f:	mov    WORD PTR [esi+0x7],ss
  405772:	lods   al,BYTE PTR ds:[esi]
  405773:	xor    BYTE PTR [edx+0x7942b348],ch
  405779:	arpl   WORD PTR [ebx+0x7808d636],dx
  40577f:	in     al,dx
  405780:	shl    edx,0xf2
  405783:	out    0x3b,eax
  405785:	push   ss
  405786:	in     eax,0xef
  405788:	pop    eax
  405789:	and    al,0x20
  40578b:	aaa    
  40578c:	rcr    BYTE PTR [edi-0x566a793b],0xc5
  405793:	push   ss
  405794:	test   eax,0x9e61e456
  405799:	jno    0x4057b5
  40579b:	and    DWORD PTR [eax],eax
  40579d:	dec    edx
  40579e:	lock mov esp,DWORD PTR [ebp-0x80]
  4057a2:	les    esi,FWORD PTR [edi+0x7c]
  4057a5:	mov    ebx,DWORD PTR [eax]
  4057a7:	jl     0x40579f
  4057a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057aa:	ret    
  4057ab:	and    ch,ch
  4057ad:	jmp    0x83ac:0xe81e7980
  4057b4:	test   DWORD PTR [eax+0x37d15111],ebx
  4057ba:	push   ss
  4057bb:	mov    ds:0x6638b123,al
  4057c0:	mov    ebp,0xccdad806
  4057c5:	bound  edi,QWORD PTR [edi+eax*2]
  4057c8:	dec    eax
  4057c9:	div    DWORD PTR [edi-0x76]
  4057cc:	fnsave [ecx]
  4057ce:	call   0x8d90:0xbbc943d4
  4057d5:	push   0x586ea3c2
  4057da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057db:	mov    eax,DWORD PTR [edi]
  4057dd:	sbb    ch,al
  4057df:	rol    BYTE PTR [esi+0x19918b03],cl
  4057e5:	add    ah,BYTE PTR [edi-0x71c9697]
  4057eb:	sub    BYTE PTR [edx-0x80],0x60
  4057ef:	ret    0x4006
  4057f2:	lock aas 
  4057f4:	adc    al,0xca
  4057f6:	push   ecx
  4057f7:	adc    ebp,ecx
  4057f9:	nop
  4057fa:	xchg   BYTE PTR [esi+ecx*4-0x4a583c34],cl
  405801:	mov    ds,WORD PTR [eax-0x71cbcfd6]
  405807:	cmp    al,0xbc
  405809:	aam    0x59
  40580b:	addr16 mov ds:0x8d67,eax
  40580f:	cmp    ecx,DWORD PTR [edx-0x33c2a8d5]
  405815:	cmp    DWORD PTR [esi-0x24220b0b],eax
  40581b:	mov    edi,0xe7e45642
  405820:	jp     0x4057aa
  405822:	xchg   edx,eax
  405823:	xchg   esi,eax
  405824:	dec    ebp
  405825:	pushf  
  405826:	jb     0x405827
  405828:	aam    0x15
  40582a:	mov    al,0x5f
  40582c:	ja     0x4057c0
  40582e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40582f:	sbb    ebx,DWORD PTR [esp+0x33]
  405833:	mov    al,ds:0xcad49bb4
  405838:	std    
  405839:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40583a:	mov    dl,0x5a
  40583c:	scas   eax,DWORD PTR es:[edi]
  40583d:	std    
  40583e:	inc    ebx
  40583f:	jp     0x40588a
  405841:	loope  0x405866
  405843:	rcr    DWORD PTR ds:0xcf3cdbfb,cl
  405849:	pop    esp
  40584a:	sub    edx,DWORD PTR [ebx+0x5f97c956]
  405850:	cmp    ch,BYTE PTR [edi+ebp*4]
  405853:	stos   BYTE PTR es:[edi],al
  405854:	sub    eax,0x6e7c2195
  405859:	sahf   
  40585a:	mov    dh,0x73
  40585c:	imul   ch
  40585e:	cmp    DWORD PTR [edi-0x20bee635],ebp
  405864:	nop
  405865:	out    0x55,eax
  405867:	(bad)  
  405868:	call   0x6c65:0xeb592820
  40586f:	xor    eax,0xb648f510
  405874:	pop    ds
  405875:	mov    eax,0xc4f52e9a
  40587a:	sete   BYTE PTR [edx-0x6d9cbfd6]
  405881:	push   ebp
  405882:	xchg   BYTE PTR [eax+0x1a],dh
  405885:	pop    ss
  405886:	cmc    
  405887:	repnz aad 0x51
  40588a:	mov    dl,0x4
  40588c:	jno    0x405902
  40588e:	or     al,0x8c
  405890:	pop    ebp
  405891:	push   edi
  405892:	jmp    0x95a54331
  405897:	sbb    DWORD PTR [ecx],ebp
  405899:	ss xchg edx,eax
  40589b:	mov    edx,0xaf3d3ec2
  4058a0:	dec    eax
  4058a1:	mov    ch,0xb2
  4058a3:	mov    ebx,0x90530e9c
  4058a8:	jmp    0xf9532da
  4058ad:	das    
  4058ae:	ficomp DWORD PTR [eax-0x2c]
  4058b1:	pushf  
  4058b2:	xlat   BYTE PTR ds:[ebx]
  4058b3:	test   BYTE PTR [ecx],ah
  4058b5:	cmp    ch,BYTE PTR [eax-0x287a9fe2]
  4058bb:	or     eax,0x88379e9a
  4058c0:	rcl    WORD PTR [eax],0x5f
  4058c4:	shl    al,0x89
  4058c7:	into   
  4058c8:	or     bh,BYTE PTR [edi+0x694925db]
  4058ce:	inc    ebp
  4058cf:	push   esi
  4058d0:	mov    bh,0x5c
  4058d2:	test   eax,ecx
  4058d4:	xor    BYTE PTR [edx+0x21],ah
  4058d7:	adc    edi,DWORD PTR [edi]
  4058d9:	stos   DWORD PTR es:[edi],eax
  4058da:	(bad)  
  4058db:	dec    ebp
  4058dc:	sar    BYTE PTR [eax],0xf2
  4058df:	out    dx,al
  4058e0:	xchg   esi,eax
  4058e1:	ja     0x405869
  4058e3:	hlt    
  4058e4:	xor    esp,DWORD PTR [ecx-0xb]
  4058e7:	in     al,0x69
  4058e9:	jb     0x4058da
  4058eb:	pop    ecx
  4058ec:	lahf   
  4058ed:	mov    ah,0x16
  4058ef:	jno    0x4058b4
  4058f1:	push   cs
  4058f2:	int    0x32
  4058f4:	sub    al,0x24
  4058f6:	(bad)  
  4058f7:	pushf  
  4058f8:	cmp    DWORD PTR [edi+0x18],ebx
  4058fb:	fdiv   DWORD PTR ds:0xb4dc69c
  405901:	inc    dx
  405903:	fdivr  QWORD PTR ds:0x5714e668
  405909:	test   ecx,ebp
  40590b:	lock xor BYTE PTR [edx],0x28
  40590f:	je     0x4058c8
  405911:	mov    dl,0x7b
  405913:	mov    dh,0x2c
  405915:	add    DWORD PTR [edx-0x2a],eax
  405918:	mov    DWORD PTR [ebp+edx*4+0x7f2fb6b2],ecx
  40591f:	popa   
  405920:	in     eax,0xe2
  405922:	dec    ebx
  405923:	ja     0x4059a1
  405925:	popa   
  405926:	shl    eax,1
  405928:	xchg   ebp,eax
  405929:	ret    0xc5f4
  40592c:	(bad)  
  40592d:	cs jmp 0x3b125529
  405933:	mov    ebx,0x33f95618
  405938:	or     bh,BYTE PTR [ebx+eax*4]
  40593b:	dec    edi
  40593c:	shl    DWORD PTR [ebp+0x4f],0xb
  405940:	jle    0x40598b
  405942:	das    
  405943:	add    eax,0xe67b9c5f
  405948:	xchg   DWORD PTR [edi+0x72],esp
  40594b:	cmp    ebx,DWORD PTR [eax]
  40594d:	ja     0x4059c6
  40594f:	jmp    0x405936
  405951:	jno    0x4058de
  405953:	int3   
  405954:	mov    cl,0xbd
  405956:	nop
  405957:	psadbw mm3,QWORD PTR [ebp+0x60]
  40595b:	adc    al,0x6f
  40595d:	mov    ch,0xf6
  40595f:	sbb    bl,BYTE PTR [ebx]
  405961:	and    ch,BYTE PTR [ecx-0x1113d782]
  405967:	addr16 pop ss
  405969:	popa   
  40596a:	ret    
  40596b:	or     DWORD PTR [ecx+eax*4],eax
  40596e:	sub    BYTE PTR [edx],ah
  405970:	xchg   esi,eax
  405971:	stos   BYTE PTR es:[edi],al
  405972:	repz repz jae 0x40599e
  405976:	call   0x1b5b:0xe1b73b8d
  40597d:	mov    al,0x53
  40597f:	and    eax,0xd9b38fa2
  405984:	push   edx
  405985:	cli    
  405986:	xchg   esp,eax
  405987:	sbb    BYTE PTR [edi],ah
  405989:	out    dx,eax
  40598a:	xor    DWORD PTR [ecx],ebx
  40598c:	push   eax
  40598d:	ss retf 0x7aab
  405991:	or     al,0xeb
  405993:	jp     0x405984
  405995:	retf   0x3836
  405998:	test   al,0x2a
  40599a:	push   ds
  40599b:	ja     0x405988
  40599d:	arpl   WORD PTR [eax+edi*1-0x2d],bx
  4059a1:	cmp    al,0xc7
  4059a3:	jecxz  0x4059fd
  4059a5:	(bad)  
  4059a6:	imul   eax,ecx,0x6b
  4059a9:	push   ebp
  4059aa:	(bad)  
  4059ab:	aas    
  4059ac:	push   cs
  4059ad:	xor    al,0x7c
  4059af:	cli    
  4059b0:	(bad)  
  4059b1:	aam    0x7
  4059b3:	push   esp
  4059b4:	dec    eax
  4059b5:	out    dx,al
  4059b6:	fcmovnb st,st(0)
  4059b8:	push   esp
  4059b9:	ja     0x40596a
  4059bb:	call   DWORD PTR [edi+0x74]
  4059be:	stos   DWORD PTR es:[edi],eax
  4059bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059c0:	mov    ebp,0x9fc4b650
  4059c5:	cmp    BYTE PTR [eax],dh
  4059c7:	imul   dl
  4059c9:	jg     0x40598c
  4059cb:	jle    0x405a04
  4059cd:	in     eax,0xe3
  4059cf:	ins    DWORD PTR es:[edi],dx
  4059d0:	int    0x23
  4059d2:	sub    ah,BYTE PTR [edi-0x47553dcc]
  4059d8:	inc    ebp
  4059d9:	mov    al,ds:0xf8db9ca5
  4059de:	iret   
  4059df:	xchg   esi,eax
  4059e0:	(bad)  
  4059e1:	rol    DWORD PTR [ebx+0x4e6b3781],1
  4059e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059e8:	cld    
  4059e9:	xchg   DWORD PTR [ecx-0x2842a2bb],edi
  4059ef:	popa   
  4059f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059f1:	ss retf 
  4059f3:	mov    esi,0x3cb31120
  4059f8:	inc    ecx
  4059f9:	popf   
  4059fa:	jle    0x405a1c
  4059fc:	imul   esi,ecx,0x4a
  4059ff:	std    
  405a00:	pop    edi
  405a01:	mov    esp,0x10f34536
  405a06:	mov    edi,0xea8fa374
  405a0b:	adc    DWORD PTR [edx+0x7c],esp
  405a0e:	iret   
  405a0f:	sbb    al,0xab
  405a11:	popf   
  405a12:	in     eax,0x0
  405a14:	ret    
  405a15:	aam    0x94
  405a17:	in     eax,0xd8
  405a19:	push   eax
  405a1a:	je     0x405a2e
  405a1c:	inc    edx
  405a1d:	pop    ebp
  405a1e:	add    BYTE PTR [esi-0x655f1e47],al
  405a24:	or     cl,BYTE PTR [edx]
  405a26:	stos   DWORD PTR es:[edi],eax
  405a27:	xchg   edi,eax
  405a28:	adc    ebp,DWORD PTR [ebx-0xc]
  405a2b:	or     al,0xd5
  405a2e:	mov    ds:0x219446b9,eax
  405a33:	push   es
  405a34:	popf   
  405a35:	adc    al,BYTE PTR [ecx]
  405a37:	mov    bl,BYTE PTR [edx+eax*8+0x69]
  405a3b:	sub    cl,ch
  405a3d:	lock ss dec ebx
  405a40:	lds    esi,FWORD PTR [ebp+0x54]
  405a43:	push   esp
  405a44:	jae    0x405a31
  405a46:	rcl    BYTE PTR [ebx],0xc1
  405a49:	xor    eax,0x5ac6ad3b
  405a4e:	fmul   QWORD PTR [eax-0x1299a600]
  405a54:	or     bl,BYTE PTR [edi]
  405a56:	xchg   ebx,eax
  405a57:	xor    ecx,DWORD PTR [edx-0x1f]
  405a5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a5b:	mov    ebp,0x5be4acc2
  405a60:	and    al,BYTE PTR [ebx+ebp*2]
  405a63:	mov    ecx,0xddc13875
  405a68:	dec    ecx
  405a69:	mov    dh,0xc5
  405a6b:	sub    BYTE PTR [ebp-0x5dfa3035],ah
  405a71:	call   0x8c71cf3
  405a76:	pop    edx
  405a77:	jecxz  0x405a70
  405a79:	dec    ebx
  405a7a:	or     cl,dl
  405a7c:	sbb    ebp,DWORD PTR ds:0xacfa726c
  405a82:	jg     0x405a93
  405a84:	outs   dx,DWORD PTR ds:[esi]
  405a85:	sbb    eax,0x8be1d53
  405a8a:	(bad)  
  405a8b:	mov    ds:0x246eff16,al
  405a90:	sub    al,0x41
  405a92:	mov    esp,0x8d7afea9
  405a97:	or     eax,0x9df3a092
  405a9c:	pop    ebp
  405a9d:	adc    al,0xff
  405a9f:	add    eax,ebx
  405aa1:	das    
  405aa2:	out    dx,al
  405aa3:	clc    
  405aa4:	mov    bh,0x98
  405aa6:	ins    BYTE PTR es:[edi],dx
  405aa7:	mov    dh,0xfa
  405aa9:	ror    edi,1
  405aab:	loop   0x405a85
  405aad:	sbb    al,0x5d
  405aaf:	jne    0x405a80
  405ab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ab2:	int    0x78
  405ab4:	lahf   
  405ab5:	jno    0x405ae8
  405ab7:	jnp    0x405adc
  405ab9:	int3   
  405aba:	stos   BYTE PTR es:[edi],al
  405abb:	cmp    esi,DWORD PTR [edi]
  405abd:	and    dh,BYTE PTR [ebp-0x336a48df]
  405ac3:	xor    DWORD PTR [ebx],0x622db825
  405ac9:	push   edi
  405aca:	lea    ebx,[edx]
  405acc:	cmp    al,0x94
  405ace:	mov    bl,0x44
  405ad0:	pusha  
  405ad1:	popf   
  405ad2:	es xor eax,0xc98d6121
  405ad8:	pop    edi
  405ad9:	cmp    al,0x32
  405adb:	dec    ebp
  405adc:	mov    ebx,0x6da6b25d
  405ae1:	mov    esi,0x560e011e
  405ae6:	or     DWORD PTR [ebx+0x60],edx
  405ae9:	push   edi
  405aea:	sub    al,0xef
  405aec:	rcl    BYTE PTR [ebx],0x61
  405aef:	jno    0x405b12
  405af1:	push   cs
  405af2:	cmp    al,0x40
  405af4:	inc    ebx
  405af5:	shr    DWORD PTR [ebx+0x12],0xae
  405af9:	push   edx
  405afa:	mov    cl,0x79
  405afc:	xor    DWORD PTR [ecx+0x2d0e17da],ebx
  405b02:	ins    BYTE PTR es:[edi],dx
  405b03:	cmp    DWORD PTR [ebx],esi
  405b05:	ret    
  405b06:	or     dh,al
  405b08:	adc    eax,0xf0886e62
  405b0d:	aam    0x9c
  405b0f:	pop    edx
  405b10:	mov    bl,0xb8
  405b12:	cmc    
  405b13:	pop    ecx
  405b14:	(bad)  
  405b16:	cmc    
  405b17:	sbb    edi,eax
  405b19:	outs   dx,BYTE PTR ds:[esi]
  405b1a:	xchg   esi,eax
  405b1b:	mov    ?,ebx
  405b1d:	popf   
  405b1e:	cmc    
  405b1f:	push   edi
  405b20:	sbb    esp,ecx
  405b22:	cmp    DWORD PTR [ecx+0x1db5fcb7],esi
  405b28:	(bad)  
  405b29:	shl    DWORD PTR [ecx-0xe],cl
  405b2c:	(bad)  
  405b2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b2e:	mov    BYTE PTR [ebx],bh
  405b30:	add    al,0xff
  405b32:	pop    edi
  405b33:	xor    edx,DWORD PTR [edx]
  405b35:	jb     0x405bb6
  405b37:	les    esp,FWORD PTR [edi-0x7065e823]
  405b3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b3e:	jle    0x405af0
  405b40:	mov    esi,0x318c59f1
  405b45:	add    bh,BYTE PTR [esi+0x43cc6d94]
  405b4b:	sbb    esp,DWORD PTR [edx]
  405b4d:	mov    edx,0x8abcd153
  405b52:	or     ah,BYTE PTR [edx+0x54e97ae5]
  405b58:	ret    0xdeca
  405b5b:	div    BYTE PTR [ebx]
  405b5d:	mov    bl,0x9b
  405b5f:	out    dx,eax
  405b60:	outs   dx,DWORD PTR gs:[esi]
  405b62:	add    al,0x9e
  405b64:	sub    al,0x2b
  405b66:	cdq    
  405b67:	mov    dl,BYTE PTR [ecx-0x6e]
  405b6a:	dec    edx
  405b6b:	xchg   esi,eax
  405b6c:	into   
  405b6d:	arpl   WORD PTR [esi+0x1e33bab2],cx
  405b73:	in     eax,dx
  405b74:	push   esi
  405b75:	rcl    dl,1
  405b77:	lahf   
  405b78:	ret    0xead2
  405b7b:	pop    es
  405b7c:	test   al,0x8d
  405b7e:	or     ah,BYTE PTR [esi-0x7526063]
  405b84:	sbb    bl,ah
  405b86:	lods   eax,DWORD PTR ds:[esi]
  405b87:	mov    al,ds:0x8d6082ed
  405b8c:	paddusw mm7,QWORD PTR [eax-0x72c288ad]
  405b93:	int3   
  405b94:	outs   dx,DWORD PTR ds:[esi]
  405b95:	call   0x822eb6c
  405b9a:	leave  
  405b9b:	jge    0x405bb8
  405b9d:	jnp    0x405b42
  405b9f:	das    
  405ba0:	xchg   esp,eax
  405ba1:	or     DWORD PTR [esi+0x5101b50f],ebx
  405ba7:	sbb    DWORD PTR [esi],edx
  405ba9:	push   ebx
  405baa:	sub    al,BYTE PTR [edx]
  405bac:	fs loopne 0x405b89
  405baf:	fwait
  405bb0:	dec    ebp
  405bb1:	xlat   BYTE PTR ds:[ebx]
  405bb2:	jge    0x405c0c
  405bb4:	mov    ecx,0xd0b49af0
  405bb9:	dec    edi
  405bba:	in     al,dx
  405bbb:	jno    0x405c36
  405bbd:	or     al,0x2a
  405bbf:	mov    bh,0x97
  405bc1:	cmp    al,0xb4
  405bc3:	push   eax
  405bc4:	pushf  
  405bc5:	or     ebx,ecx
  405bc7:	and    DWORD PTR [ecx],esi
  405bc9:	dec    eax
  405bca:	add    ah,BYTE PTR [esi+0x8]
  405bcd:	scas   al,BYTE PTR es:[edi]
  405bce:	loopne 0x405c23
  405bd0:	retf   
  405bd1:	push   es
  405bd2:	push   ds
  405bd3:	es in  eax,0x15
  405bd6:	mov    ds:0x6dff3acb,al
  405bdb:	sahf   
  405bdc:	push   ds
  405bdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bde:	imul   edx,ebx,0x74
  405be1:	jl     0x405b9b
  405be3:	mov    cl,0xde
  405be5:	mov    WORD PTR [esi-0x10],cs
  405be8:	pusha  
  405be9:	icebp  
  405bea:	call   FWORD PTR [edx-0x5dca1ea]
  405bf0:	adc    BYTE PTR [esi-0xa],cl
  405bf3:	xchg   edx,eax
  405bf4:	je     0x405c26
  405bf6:	mov    ebp,0x14846874
  405bfb:	inc    eax
  405bfc:	repnz add al,0xe5
  405bff:	sub    dh,BYTE PTR ds:0xe19a5da0
  405c05:	into   
  405c06:	sahf   
  405c07:	pusha  
  405c08:	and    DWORD PTR [ecx+0x8fe95a6],0x9dae14bd
  405c12:	mov    bh,0x74
  405c14:	mov    edx,0x80d20c0d
  405c19:	mov    eax,ds:0xc32bc99b
  405c1e:	cmp    edx,eax
  405c20:	jne    0x405caa
  405c26:	mov    eax,DWORD PTR [ebp-0xc]
  405c29:	mov    dl,BYTE PTR [eax+ecx*1+0x801]
  405c30:	mov    eax,DWORD PTR [ebp-0x20]
  405c33:	mov    ebx,DWORD PTR [ebp-0x18]
  405c36:	xor    eax,esi
  405c38:	xor    ebx,esi
  405c3a:	add    eax,edi
  405c3c:	add    ebx,edi
  405c3e:	mov    BYTE PTR [ebp-0x1],dl
  405c41:	cmp    eax,ebx
  405c43:	jae    0x405c98
  405c49:	lea    edx,[eax-0x3272ec]
  405c4f:	mov    DWORD PTR [ebp-0x14],edx
  405c52:	mov    ebx,DWORD PTR [ebp-0x14]
  405c55:	xor    ebx,esi
  405c57:	add    ebx,0x7f55d8f2
  405c5d:	lea    edx,[ebp+eax*4-0x3c]
  405c61:	mov    DWORD PTR [edx],ebx
  405c63:	mov    ebx,DWORD PTR [edx]
  405c65:	cmp    ebx,0x244ecb93
  405c6b:	jbe    0x405c7c
  405c71:	add    DWORD PTR [edx],0x405fcdc
  405c77:	jmp    0x405c82
  405c7c:	add    DWORD PTR [edx],0xfdaf4324
  405c82:	mov    edx,DWORD PTR [ebp-0x18]
  405c85:	xor    edx,esi
  405c87:	inc    eax
  405c88:	inc    DWORD PTR [ebp-0x14]
  405c8b:	add    edx,edi
  405c8d:	cmp    eax,edx
  405c8f:	jb     0x405c52
  405c95:	mov    dl,BYTE PTR [ebp-0x1]
  405c98:	xor    dl,0x79
  405c9b:	sub    dl,0x3
  405c9e:	xor    eax,eax
  405ca0:	mov    eax,DWORD PTR [ebp-0xc]
  405ca3:	mov    BYTE PTR [eax+ecx*1+0x801],dl
  405caa:	mov    eax,DWORD PTR [ebp-0xc]
  405cad:	mov    edx,DWORD PTR [ebp-0x20]
  405cb0:	sub    eax,edi
  405cb2:	xor    eax,esi
  405cb4:	cmp    eax,edx
  405cb6:	jne    0x40809e
  405cbc:	mov    eax,DWORD PTR [ebp-0x10]
  405cbf:	mov    edx,DWORD PTR [ebp-0x8]
  405cc2:	xor    eax,esi
  405cc4:	xor    edx,esi
  405cc6:	sub    eax,edx
  405cc8:	sub    eax,edi
  405cca:	xor    eax,esi
  405ccc:	mov    DWORD PTR [ebp-0x10],eax
  405ccf:	mov    eax,DWORD PTR [ebp-0x8]
  405cd2:	jmp    0x408090
  405cd7:	mov    eax,ds:0x7b519088
  405cdc:	dec    ecx
  405cdd:	mov    ds:0xeab98a78,eax
  405ce2:	fisubr WORD PTR ds:0x3c3e0628
  405ce8:	xor    edi,DWORD PTR [edx+0x7a]
  405ceb:	fstp   QWORD PTR [edi+0x7a]
  405cee:	jp     0x405d25
  405cf0:	or     ecx,0xc3aef465
  405cf6:	aaa    
  405cf7:	(bad)  
  405cf8:	mov    edi,0xbfcf5fdf
  405cfd:	out    0x18,al
  405cff:	sbb    esi,ecx
  405d01:	sar    ebp,cl
  405d03:	push   ebx
  405d04:	test   al,0x45
  405d06:	fcmovb st,st(1)
  405d08:	push   eax
  405d09:	mov    cl,BYTE PTR [ebp-0x26]
  405d0c:	fwait
  405d0d:	stos   DWORD PTR es:[edi],eax
  405d0e:	jnp    0x405d3f
  405d10:	aaa    
  405d11:	or     BYTE PTR [edi-0x35],al
  405d14:	cmp    esp,0x17
  405d17:	mov    DWORD PTR [edi+0x325fa9b6],ecx
  405d1d:	outs   dx,DWORD PTR ds:[esi]
  405d1e:	jne    0x405d89
  405d20:	pop    esp
  405d21:	xor    bh,BYTE PTR [ebx-0x506f7aa9]
  405d27:	nop
  405d28:	neg    BYTE PTR [ecx+0x175a0859]
  405d2e:	cmp    bl,al
  405d30:	xor    DWORD PTR ds:0x82363f59,edi
  405d36:	stos   BYTE PTR es:[edi],al
  405d37:	xchg   edx,eax
  405d38:	mov    ebp,edi
  405d3a:	and    ch,BYTE PTR [ecx-0x2ab9dab0]
  405d40:	in     eax,0x46
  405d42:	and    dl,BYTE PTR ds:0x30213499
  405d48:	stos   BYTE PTR es:[edi],al
  405d49:	mov    eax,ds:0xead2a801
  405d4e:	push   esi
  405d4f:	std    
  405d50:	pop    ebx
  405d51:	repnz inc ecx
  405d53:	ss loope 0x405dc2
  405d56:	out    dx,al
  405d57:	or     eax,0xb5f7027a
  405d5c:	or     al,0xd4
  405d5e:	push   es
  405d5f:	nop
  405d60:	push   ebx
  405d61:	cwde   
  405d62:	scas   eax,DWORD PTR es:[edi]
  405d63:	js     0x405dd0
  405d65:	push   ds
  405d66:	mov    eax,ds:0x5dc5142f
  405d6b:	add    DWORD PTR [ebp-0x3],edi
  405d6e:	xchg   DWORD PTR [esi-0x2b8b1d08],ebx
  405d74:	dec    ecx
  405d75:	adc    ebp,0xfa6620a1
  405d7b:	fld    TBYTE PTR [ebx+0x17]
  405d7e:	outs   dx,DWORD PTR ds:[esi]
  405d7f:	mov    ecx,0x4dc0c54e
  405d84:	aad    0x58
  405d86:	push   ds
  405d87:	repnz imul ebx,DWORD PTR [eax+0x51],0x894655d2
  405d8f:	and    BYTE PTR [eax+0x11],dh
  405d92:	hlt    
  405d93:	push   ss
  405d94:	push   eax
  405d95:	dec    ecx
  405d96:	repnz fdiv st(7),st
  405d99:	jbe    0x405d72
  405d9b:	icebp  
  405d9c:	das    
  405d9d:	mov    eax,ds:0x324bf745
  405da2:	and    BYTE PTR [edi+0x27],ch
  405da5:	cmp    DWORD PTR [ecx],edx
  405da7:	retf   0x9493
  405daa:	jge    0x405d7b
  405dac:	xchg   ebx,eax
  405dad:	rol    DWORD PTR [edi-0x27],cl
  405db0:	dec    ecx
  405db1:	sub    al,cl
  405db3:	and    al,0x91
  405db5:	outs   dx,BYTE PTR ds:[esi]
  405db6:	cmc    
  405db7:	sub    DWORD PTR [esi],esp
  405db9:	movsx  edi,WORD PTR [edi+0x3d]
  405dbd:	inc    ebp
  405dbe:	push   esp
  405dbf:	dec    edi
  405dc0:	and    bh,al
  405dc2:	imul   ebp,DWORD PTR [ecx-0x4],0x19294a4e
  405dc9:	cmp    eax,ebx
  405dcb:	fwait
  405dcc:	cmp    BYTE PTR ds:0x16b14f13,bh
  405dd2:	dec    esp
  405dd3:	pop    ds
  405dd4:	push   esp
  405dd5:	push   ecx
  405dd6:	jo     0x405e47
  405dd8:	inc    edx
  405dd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405dda:	cld    
  405ddb:	sub    DWORD PTR [edx-0x44],ecx
  405dde:	fcmovnb st,st(2)
  405de0:	(bad)  
  405de1:	mov    al,ds:0xa59aa3cc
  405de6:	or     al,0xe1
  405de8:	or     BYTE PTR [ebx-0x45],0x26
  405dec:	aas    
  405ded:	jbe    0x405e3a
  405def:	sub    dh,BYTE PTR [edx]
  405df1:	or     bh,BYTE PTR [eax+0x3863aade]
  405df7:	daa    
  405df8:	cmp    ebx,edx
  405dfa:	out    dx,eax
  405dfb:	xchg   esi,eax
  405dfc:	adc    al,0x69
  405dfe:	jbe    0x405e3e
  405e00:	jno    0x405e08
  405e02:	call   DWORD PTR [bx+0x4d]
  405e06:	int    0x66
  405e08:	cli    
  405e09:	es leave 
  405e0b:	xlat   BYTE PTR ds:[ebx]
  405e0c:	jl     0x405e2a
  405e0e:	push   esp
  405e0f:	dec    eax
  405e10:	pop    ebx
  405e11:	cld    
  405e12:	pop    es
  405e13:	fdiv   DWORD PTR [edi-0x50]
  405e16:	daa    
  405e17:	ret    
  405e18:	in     al,0x54
  405e1a:	in     eax,dx
  405e1b:	lock nop
  405e1d:	fwait
  405e1e:	in     al,0x83
  405e20:	aas    
  405e21:	sub    DWORD PTR [edx-0x67],eax
  405e24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e25:	iret   
  405e26:	(bad)  
  405e27:	pop    ebx
  405e28:	mov    cl,0x5b
  405e2a:	mov    eax,ds:0x1481dbbf
  405e2f:	or     ah,0x2c
  405e32:	mov    bh,0x7f
  405e34:	dec    ecx
  405e35:	test   DWORD PTR [ecx-0x3aaa14c4],ebp
  405e3b:	std    
  405e3c:	inc    esi
  405e3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e3e:	inc    ebp
  405e3f:	fistp  WORD PTR [ecx-0x1e3075b9]
  405e45:	(bad)  
  405e46:	push   eax
  405e47:	int    0xb
  405e49:	sub    edi,DWORD PTR [ecx+0x42]
  405e4c:	or     ebp,DWORD PTR [edx+eax*1]
  405e4f:	mov    DWORD PTR [eax-0x740cd93d],ebx
  405e55:	pop    ebp
  405e56:	push   esp
  405e57:	sub    esp,eax
  405e59:	push   edx
  405e5a:	sub    ecx,DWORD PTR [edx]
  405e5c:	mov    ah,0x47
  405e5e:	mov    ah,BYTE PTR [eax+0x6b]
  405e61:	jno    0x405eca
  405e63:	push   esp
  405e64:	icebp  
  405e65:	mov    BYTE PTR [edx+0x34],al
  405e68:	mov    bh,0x8
  405e6a:	cmp    bl,al
  405e6c:	(bad)  
  405e6e:	push   eax
  405e6f:	mov    al,ds:0xc2b73178
  405e74:	nop
  405e75:	xor    dh,dh
  405e77:	(bad)  
  405e78:	sbb    DWORD PTR [eax-0x16],edi
  405e7b:	int3   
  405e7c:	pop    edi
  405e7d:	dec    esi
  405e7e:	lods   eax,DWORD PTR ds:[esi]
  405e7f:	leave  
  405e80:	cmp    DWORD PTR [edi],ecx
  405e82:	adc    eax,0xf5207fe7
  405e87:	fist   WORD PTR [ebx-0x5191e5d6]
  405e8d:	mov    ebx,DWORD PTR ds:0xfa4965bc
  405e93:	or     ah,dl
  405e95:	imul   BYTE PTR [edx+0x20a48062]
  405e9b:	dec    esp
  405e9c:	inc    ecx
  405e9d:	jmp    0xd6f44a5e
  405ea2:	mov    bl,0x43
  405ea4:	hlt    
  405ea5:	xchg   esi,eax
  405ea6:	loope  0x405e4f
  405ea8:	bound  ebx,QWORD PTR [ebx+ecx*2]
  405eab:	shl    DWORD PTR [eax],0x1e
  405eae:	adc    BYTE PTR [edx+0x48],dh
  405eb1:	jno    0x405f1d
  405eb3:	dec    edi
  405eb4:	or     esi,ebp
  405eb6:	adc    DWORD PTR [ecx],edi
  405eb8:	push   es
  405eb9:	idiv   DWORD PTR [esi-0x4761c2ed]
  405ebf:	cli    
  405ec0:	inc    edx
  405ec1:	jle    0x405ebc
  405ec3:	jg     0x405ef7
  405ec5:	loopne 0x405efe
  405ec7:	in     al,dx
  405ec8:	cs pusha 
  405eca:	or     eax,0xca9336cb
  405ecf:	jb     0x405eea
  405ed1:	arpl   WORD PTR [eax+0x39],cx
  405ed4:	push   cs
  405ed5:	push   eax
  405ed6:	and    BYTE PTR [eax],dh
  405ed8:	stos   BYTE PTR es:[edi],al
  405ed9:	int    0x45
  405edb:	push   ds
  405edc:	out    0x3a,eax
  405ede:	mov    edx,0x163640e6
  405ee3:	inc    ebx
  405ee4:	xor    DWORD PTR [esi-0x7e],ebp
  405ee7:	mov    edx,esi
  405ee9:	dec    eax
  405eea:	xor    eax,0xdc10d7c7
  405eef:	inc    edx
  405ef0:	adc    BYTE PTR [ecx+ebx*1],bl
  405ef3:	push   esp
  405ef4:	mov    BYTE PTR [ebx-0x2c9052de],ch
  405efa:	push   ds
  405efb:	jns    0x405f4d
  405efd:	sub    eax,0x42437f74
  405f02:	sbb    al,0x85
  405f04:	daa    
  405f05:	test   eax,0x1b9b6a62
  405f0a:	popf   
  405f0b:	sub    BYTE PTR [eax+0x74],0xfd
  405f0f:	dec    ecx
  405f10:	int3   
  405f11:	pop    ebx
  405f12:	test   eax,0x87cbd474
  405f17:	pop    eax
  405f18:	adc    esi,edx
  405f1a:	sti    
  405f1b:	test   eax,0xe73cffa
  405f20:	xor    al,0x23
  405f22:	dec    ecx
  405f23:	sbb    DWORD PTR [ecx+0x4c],esp
  405f26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f28:	inc    ecx
  405f29:	(bad)  
  405f2b:	dec    eax
  405f2c:	xchg   DWORD PTR [edx],edx
  405f2e:	std    
  405f2f:	jae    0x405ee4
  405f31:	iret   
  405f32:	sub    eax,0xd79841d7
  405f37:	inc    esp
  405f38:	aaa    
  405f39:	ret    0xd49b
  405f3c:	out    0x89,eax
  405f3e:	out    dx,eax
  405f3f:	xor    al,0x88
  405f41:	pusha  
  405f42:	xchg   esp,eax
  405f43:	pop    ebx
  405f44:	pop    ebp
  405f45:	sar    DWORD PTR [eax+0x50],1
  405f48:	mov    edx,0xba4fcff0
  405f4d:	inc    edx
  405f4e:	pop    edx
  405f4f:	(bad)  
  405f50:	mov    al,ds:0xd949ebfd
  405f55:	(bad)  [esi]
  405f57:	(bad)  
  405f58:	int3   
  405f59:	aaa    
  405f5a:	cmp    dh,ah
  405f5c:	mov    bl,0xa4
  405f5e:	test   eax,0x727c23c3
  405f63:	test   BYTE PTR [edi+0x13],cl
  405f66:	xchg   DWORD PTR [ecx],ecx
  405f68:	dec    eax
  405f69:	inc    esp
  405f6a:	pop    ss
  405f6b:	mov    edx,0x26d6e69b
  405f70:	ins    DWORD PTR es:[edi],dx
  405f71:	jmp    0xe58c8d65
  405f76:	ja     0x405fc9
  405f78:	test   BYTE PTR [esi],0x8f
  405f7b:	xor    ebp,DWORD PTR es:[ebx-0x5eee93fb]
  405f82:	cmp    DWORD PTR [edx+edi*4-0xa],esi
  405f86:	les    esi,FWORD PTR es:[edi]
  405f89:	inc    ebx
  405f8a:	dec    esi
  405f8b:	inc    esi
  405f8c:	dec    eax
  405f8d:	jmp    0x1f3a4238
  405f92:	shr    DWORD PTR [edx+0x6bc283ef],0xf5
  405f99:	mov    ebp,0x57acd4c0
  405f9e:	in     al,0x8
  405fa0:	pop    edx
  405fa1:	in     al,0x6b
  405fa3:	pop    edx
  405fa4:	adc    al,0x77
  405fa6:	adc    ax,WORD PTR [ebp-0x171c4227]
  405fad:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  405faf:	xlat   BYTE PTR ds:[ebx]
  405fb0:	leave  
  405fb1:	add    esp,ebx
  405fb3:	pop    esp
  405fb4:	jne    0x405f7c
  405fb6:	loopne 0x405fbe
  405fb8:	data16 and BYTE PTR [ebp+0xfb6a5f8],bh
  405fbf:	add    ebx,DWORD PTR [edi-0x4ffb0924]
  405fc5:	retfw  
  405fc7:	imul   ebx,DWORD PTR [esi+0x4b2c0d0],0xc8b0a6a4
  405fd1:	(bad)  
  405fd2:	rcl    ebp,cl
  405fd4:	adc    esp,DWORD PTR [eax+0x12]
  405fd7:	xor    BYTE PTR [ebp+0x5000be38],ch
  405fdd:	add    BYTE PTR [edi+0x7c5b6295],al
  405fe3:	std    
  405fe4:	arpl   WORD PTR [ebx],bx
  405fe6:	and    DWORD PTR [edi+0x6],esp
  405fe9:	mov    ch,0x6f
  405feb:	sbb    eax,0x260729d
  405ff0:	mov    ebp,0x988aef05
  405ff5:	cwde   
  405ff6:	or     eax,DWORD PTR [ebx+0x9]
  405ff9:	pushf  
  405ffa:	add    ebx,edi
  405ffc:	sub    DWORD PTR [eax+0x10c63cb],ebx
  406002:	push   cs
  406003:	dec    eax
  406004:	xor    ebx,ebx
  406006:	adc    cl,BYTE PTR [edi+0x1b1c1cf8]
  40600c:	xor    eax,0x5e5ffe9e
  406011:	dec    ebp
  406012:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406013:	push   ss
  406014:	add    BYTE PTR [ebp-0x5e496587],0x4c
  40601b:	push   ebp
  40601c:	adc    eax,0xc01dbc4d
  406021:	rol    DWORD PTR [edi-0x26],cl
  406024:	mov    ah,cl
  406026:	imul   esp,DWORD PTR [edx+0x1c],0x59bd5a54
  40602d:	scas   al,BYTE PTR es:[edi]
  40602e:	addr16 sti 
  406030:	push   eax
  406031:	jns    0x40608c
  406033:	rcr    DWORD PTR [eax],1
  406035:	adc    DWORD PTR [ebx+0xf8536d8],edx
  40603b:	and    DWORD PTR [edx],0x5f37b678
  406041:	xor    BYTE PTR [edi],0x2e
  406044:	clc    
  406045:	imul   ebp,DWORD PTR [eax+edi*1],0xfffffff8
  406049:	inc    edx
  40604a:	and    ebp,DWORD PTR [edx-0x1b]
  40604d:	sub    dl,BYTE PTR [ecx]
  40604f:	push   es
  406050:	inc    edi
  406051:	cmp    BYTE PTR [edx+0x1279d7ad],ch
  406057:	adc    cl,ch
  406059:	jnp    0x406033
  40605b:	dec    ebx
  40605c:	in     al,dx
  40605d:	retf   0xe52f
  406060:	outs   dx,DWORD PTR ds:[esi]
  406061:	(bad)  
  406063:	mov    ecx,0x262a38be
  406068:	push   esi
  406069:	jmp    0x1d05c637
  40606e:	mov    WORD PTR cs:[edi],fs
  406071:	(bad)  
  406072:	mov    edx,0xccd8123b
  406077:	mov    ds:0x3ad58f62,eax
  40607c:	mov    dh,0x11
  40607e:	fst    DWORD PTR [edi-0x7a]
  406081:	push   ebx
  406082:	mov    ah,0xe5
  406084:	jnp    0x406050
  406086:	loope  0x4060c3
  406088:	repnz add ch,bl
  40608b:	call   0xc7009a3c
  406090:	in     al,0xd3
  406092:	xor    edi,edi
  406094:	and    DWORD PTR [esi+eax*4+0x64],edx
  406098:	inc    ebp
  406099:	cwde   
  40609a:	pusha  
  40609b:	mov    eax,0x60991035
  4060a0:	sub    edx,DWORD PTR [ebx-0x3a]
  4060a3:	out    dx,al
  4060a4:	cld    
  4060a5:	cmp    edi,DWORD PTR [esp+ebp*8+0x34]
  4060a9:	out    dx,al
  4060aa:	scas   al,BYTE PTR es:[edi]
  4060ab:	test   DWORD PTR [eax],edi
  4060ad:	dec    esp
  4060ae:	jg     0x4060ac
  4060b0:	pop    esp
  4060b1:	push   esp
  4060b2:	dec    esi
  4060b3:	mov    eax,ds:0x625cc715
  4060b8:	sub    DWORD PTR [ebx],edx
  4060ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060bb:	xchg   BYTE PTR [ecx-0x4f],bh
  4060be:	xchg   ecx,eax
  4060bf:	repnz mov ch,0x2e
  4060c2:	and    BYTE PTR [edx],dh
  4060c4:	stc    
  4060c5:	cmp    BYTE PTR [edi],bh
  4060c7:	mov    ds:0xb863ac45,eax
  4060cc:	add    al,dl
  4060ce:	and    BYTE PTR [edx+0x33],ah
  4060d1:	js     0x4060f8
  4060d3:	test   ecx,ebx
  4060d5:	cmc    
  4060d6:	mov    eax,0x91cc3346
  4060db:	add    bl,BYTE PTR [ecx]
  4060dd:	sub    edx,DWORD PTR [esi-0x3b9af114]
  4060e3:	push   ebx
  4060e4:	jb     0x406081
  4060e6:	sar    DWORD PTR [edx],cl
  4060e8:	ror    BYTE PTR [ebx+0x4f809002],1
  4060ee:	out    dx,eax
  4060ef:	daa    
  4060f0:	fadd   DWORD PTR [esi+0x62]
  4060f3:	in     al,dx
  4060f4:	push   ecx
  4060f5:	std    
  4060f6:	sahf   
  4060f7:	test   bl,ch
  4060f9:	fistp  QWORD PTR [eax]
  4060fb:	es jmp 0x1939:0xc67bdd7b
  406103:	xchg   edi,eax
  406104:	ficomp WORD PTR [ecx-0x28e3a6a7]
  40610a:	(bad)  
  40610b:	fadd   QWORD PTR [edx+0x20]
  40610e:	call   0xaeb8f296
  406113:	jecxz  0x406177
  406115:	push   ebp
  406116:	fs dec ebx
  406118:	(bad)  
  406119:	iret   
  40611a:	inc    ebp
  40611b:	loope  0x406105
  40611d:	lds    ebx,FWORD PTR [esi-0x46]
  406120:	cmp    al,0xa4
  406122:	mov    al,0xb0
  406124:	fs scas al,BYTE PTR es:[edi]
  406126:	ins    DWORD PTR es:[edi],dx
  406127:	lea    esi,[eax]
  406129:	jae    0x406158
  40612b:	dec    eax
  40612c:	inc    edi
  40612d:	push   cs
  40612e:	add    DWORD PTR ds:0xaa32ed72,ebp
  406134:	xor    al,0x16
  406136:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406137:	push   esp
  406138:	adc    al,0xa7
  40613a:	mov    ebx,0x92433831
  40613f:	xchg   ebx,eax
  406140:	call   0xf015dadc
  406145:	mov    eax,ds:0xac57caa2
  40614a:	ja     0x40614b
  40614c:	inc    ebp
  40614d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40614e:	pop    es
  40614f:	mov    eax,ds:0x27dd53c3
  406154:	retf   0x1e70
  406157:	or     DWORD PTR [eax+0x146c0070],ebp
  40615d:	or     al,0x54
  40615f:	push   ds
  406160:	popf   
  406161:	test   BYTE PTR [esi-0x6bdaab06],ch
  406167:	mov    ebp,0x4ca4e6a3
  40616c:	in     al,0x41
  40616e:	gs inc edi
  406170:	add    esi,DWORD PTR [ecx+0x9]
  406173:	inc    ecx
  406174:	bound  esp,QWORD PTR [edi]
  406176:	das    
  406177:	sub    eax,DWORD PTR [edx-0x177f1f11]
  40617d:	les    edx,FWORD PTR [edx-0x60c933b4]
  406183:	sub    DWORD PTR [ebx+0x27],ebx
  406186:	mov    bl,0x4d
  406188:	add    al,0x66
  40618a:	jmp    0x406185
  40618c:	nop
  40618d:	mov    cl,0x2d
  40618f:	mov    esi,0xe71de740
  406194:	xchg   ecx,eax
  406195:	fwait
  406196:	ror    DWORD PTR [eax+edx*2],0xdc
  40619a:	inc    esi
  40619b:	out    0x97,al
  40619d:	inc    ebx
  40619e:	inc    edx
  40619f:	pop    ebp
  4061a0:	pop    es
  4061a1:	jne    0x406216
  4061a3:	or     ch,BYTE PTR [ecx-0x22090ac8]
  4061a9:	xor    edx,DWORD PTR [edx-0x5]
  4061ac:	adc    bh,BYTE PTR [esi]
  4061ae:	test   eax,0xa85bce59
  4061b3:	pop    ds
  4061b4:	cwde   
  4061b5:	shr    BYTE PTR [edi+0x3e],1
  4061b8:	push   eax
  4061b9:	pop    ss
  4061ba:	call   0x6b96:0xaa1cf7b5
  4061c1:	iret   
  4061c2:	inc    eax
  4061c3:	mov    DWORD PTR [ebx-0x28],esi
  4061c6:	mov    fs,WORD PTR [eax+0x12844eee]
  4061cc:	sub    eax,0x6b96573f
  4061d1:	pop    ebp
  4061d2:	inc    ebx
  4061d3:	xchg   DWORD PTR [ebx-0x5971a2cd],ebp
  4061d9:	sub    eax,0x28b17c71
  4061de:	mov    ds:0xc7351c60,al
  4061e3:	fucomi st,st(5)
  4061e5:	(bad)  
  4061e6:	dec    esi
  4061e7:	fwait
  4061e8:	adc    BYTE PTR [ebx+0x3b],dl
  4061eb:	sub    DWORD PTR [esi+eax*8],ebx
  4061ee:	jne    0x406204
  4061f0:	mov    dl,0x8e
  4061f2:	pop    ss
  4061f3:	mov    bl,0xa3
  4061f5:	pop    esp
  4061f6:	loope  0x406198
  4061f8:	add    al,0x12
  4061fa:	pop    ecx
  4061fb:	and    esp,ebx
  4061fd:	push   esp
  4061fe:	push   edx
  4061ff:	fcomp  DWORD PTR [ebp-0x2f]
  406202:	mov    ah,BYTE PTR [eax+edi*8-0x70]
  406206:	in     al,dx
  406207:	jmp    0xc5a5620e
  40620c:	inc    eax
  40620d:	es xchg esi,eax
  40620f:	and    ch,BYTE PTR ds:0xacfadc88
  406215:	pop    ebp
  406216:	sahf   
  406217:	cli    
  406218:	test   DWORD PTR [ebx],0x88cc1b9c
  40621e:	ins    BYTE PTR es:[edi],dx
  40621f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406220:	pusha  
  406221:	and    eax,0xfe525f15
  406226:	(bad)  
  406228:	mov    ecx,0x281c4200
  40622d:	mov    cl,0x2a
  40622f:	mov    ch,0xa6
  406231:	loopne 0x4061b5
  406233:	int3   
  406234:	sti    
  406235:	mov    ebx,0x7deb7387
  40623a:	push   ss
  40623b:	imul   ebp,DWORD PTR [edx],0xcd1713a7
  406241:	(bad)
  406246:	dec    ebx
  406247:	ins    BYTE PTR es:[edi],dx
  406248:	xor    cl,bh
  40624a:	cmp    eax,0xd64e8ec6
  40624f:	mov    eax,ds:0x919edeb8
  406254:	jae    0x4062a5
  406256:	push   edi
  406257:	lods   ax,WORD PTR ds:[esi]
  406259:	sub    ch,bl
  40625b:	loope  0x406271
  40625d:	pop    ebp
  40625e:	mov    cl,0xad
  406260:	xchg   ebp,eax
  406261:	int3   
  406262:	xor    ah,ch
  406264:	jno    0x406204
  406266:	jae    0x406268
  406268:	(bad)  
  406269:	in     eax,0xaf
  40626b:	mov    BYTE PTR [ebp-0x3f],al
  40626e:	stc    
  40626f:	int    0x2c
  406271:	pop    ds
  406272:	jge    0x406281
  406274:	inc    edi
  406276:	inc    BYTE PTR [ebp+0x61]
  406279:	sub    BYTE PTR [ecx+ecx*2-0x5d5974fe],ch
  406280:	outs   dx,DWORD PTR ds:[esi]
  406281:	jo     0x40623d
  406283:	mov    ebp,0xd29aab76
  406288:	mov    eax,0x84fb3c7a
  40628d:	sahf   
  40628e:	lea    esi,[ebx+0x462a0a8e]
  406294:	mov    dh,0x5a
  406296:	inc    ebx
  406297:	jbe    0x4062e6
  406299:	mov    bh,0x80
  40629b:	fidiv  WORD PTR [edi-0x3d400552]
  4062a1:	in     al,dx
  4062a2:	push   edx
  4062a3:	cmp    al,BYTE PTR [ebp-0x77134726]
  4062a9:	or     al,0x7e
  4062ab:	mov    ds:0xc710195f,eax
  4062b0:	jbe    0x4062bc
  4062b2:	xchg   esi,eax
  4062b3:	sti    
  4062b4:	dec    ebx
  4062b5:	or     BYTE PTR [ebx],bh
  4062b7:	into   
  4062b8:	out    0x63,al
  4062ba:	enter  0xfdf6,0xe4
  4062be:	adc    eax,0xb4c4f52f
  4062c3:	or     eax,0x54ff1eea
  4062c8:	int3   
  4062c9:	sub    eax,0xc375aff2
  4062ce:	in     eax,dx
  4062cf:	push   edx
  4062d0:	jge    0x4062cc
  4062d2:	pop    ebx
  4062d3:	mov    cl,0x75
  4062d5:	aas    
  4062d6:	mov    al,0xfb
  4062d8:	sbb    DWORD PTR [ecx],esp
  4062da:	or     dh,BYTE PTR [eax-0x53]
  4062dd:	cdq    
  4062de:	add    DWORD PTR [ecx+0xae7bff9],0xffffff9b
  4062e5:	mov    eax,0x6665c4c2
  4062ea:	mov    bh,0xc7
  4062ec:	jbe    0x40635e
  4062ee:	jle    0x4062f8
  4062f0:	fxch   st(2)
  4062f2:	jg     0x40632f
  4062f4:	cmp    BYTE PTR [ecx],ah
  4062f6:	xchg   ebx,eax
  4062f7:	out    0x76,eax
  4062f9:	outs   dx,DWORD PTR ds:[esi]
  4062fa:	xchg   ebp,eax
  4062fb:	popa   
  4062fc:	stos   BYTE PTR es:[edi],al
  4062fd:	jno    0x40633c
  4062ff:	je     0x406285
  406301:	ds sbb ebp,esi
  406304:	shl    DWORD PTR [ebp+0x6a148991],0x29
  40630b:	inc    eax
  40630c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40630d:	adc    esp,DWORD PTR [ebp-0x255035ce]
  406313:	sbb    eax,0xffffffc0
  406316:	rol    ecx,cl
  406318:	les    ebp,FWORD PTR [esi-0x63a0012f]
  40631e:	stos   DWORD PTR es:[edi],eax
  40631f:	ror    BYTE PTR ss:[eax],cl
  406322:	pop    ebx
  406323:	xor    BYTE PTR [edi+0x2a],al
  406326:	jecxz  0x40636e
  406328:	or     BYTE PTR [eax+0x21],0x23
  40632c:	sbb    ah,cl
  40632e:	test   dh,al
  406330:	dec    esp
  406331:	dec    esi
  406332:	mov    ebp,0x918534ff
  406337:	repz jbe 0x406302
  40633a:	(bad)  
  40633b:	test   DWORD PTR [edx+0x19ecb4e9],0x367da2c6
  406345:	cld    
  406346:	inc    eax
  406347:	fnstcw WORD PTR [ecx]
  406349:	aaa    
  40634a:	xchg   esi,eax
  40634b:	ficom  WORD PTR [ebp+0x3a7db76d]
  406351:	xor    ch,cl
  406353:	jl     0x406319
  406355:	aaa    
  406356:	test   eax,0x1283cc21
  40635b:	mov    dh,0x7
  40635d:	(bad)  
  40635f:	ja     0x406351
  406361:	dec    ecx
  406362:	fcmove st,st(0)
  406364:	xchg   edx,eax
  406365:	(bad)  [ecx]
  406367:	lahf   
  406368:	push   ecx
  406369:	sti    
  40636a:	or     dl,bl
  40636c:	fidiv  WORD PTR [edi]
  40636e:	sbb    edi,esp
  406370:	sbb    DWORD PTR [eax],ebx
  406372:	arpl   WORD PTR [eax+0x4b],cx
  406375:	iret   
  406376:	sbb    eax,0x30b926a0
  40637b:	into   
  40637c:	inc    ebx
  40637d:	xor    ah,bh
  40637f:	dec    eax
  406380:	popf   
  406381:	inc    eax
  406382:	jbe    0x40630e
  406384:	ds call 0x11230b7f
  40638a:	sub    al,0x4e
  40638c:	xor    DWORD PTR [esi+esi*2-0x45904f65],eax
  406393:	push   ecx
  406394:	ret    0x3576
  406397:	sahf   
  406398:	mov    edx,0x2ad0497c
  40639d:	jg     0x4063ca
  40639f:	xchg   ecx,eax
  4063a0:	inc    ebp
  4063a1:	fcom   st(2)
  4063a3:	mov    al,ds:0x1a517696
  4063a8:	bound  ecx,QWORD PTR [edx-0x43]
  4063ab:	mov    ebp,0x387002b2
  4063b0:	(bad)  
  4063b1:	mov    edi,0xbde0fd7
  4063b6:	xchg   BYTE PTR ds:0xffb4611,ch
  4063bc:	shl    edi,cl
  4063be:	retf   
  4063bf:	dec    esp
  4063c0:	mov    ebp,0xc0c2ddee
  4063c5:	test   eax,0xf9fc399e
  4063ca:	sbb    ecx,edi
  4063cc:	out    0x9,al
  4063ce:	or     BYTE PTR [edx+0x36],ah
  4063d1:	xor    eax,0xe6a5e577
  4063d6:	inc    bp
  4063d8:	rcr    DWORD PTR [ebx+0x50],cl
  4063db:	or     eax,0x94e12f7b
  4063e0:	not    BYTE PTR ds:0x3d39ef20
  4063e6:	push   ss
  4063e7:	sub    DWORD PTR [edx-0x681b6f81],esi
  4063ed:	sub    edx,DWORD PTR [edx]
  4063ef:	jmp    0xdabd6b78
  4063f4:	push   ecx
  4063f5:	in     al,0x22
  4063f7:	call   0x6237:0x3428c474
  4063fe:	popa   
  4063ff:	sti    
  406400:	push   ebx
  406401:	fisttp WORD PTR [eax-0x384ad0f9]
  406407:	ret    0x8c38
  40640a:	aaa    
  40640b:	cs shl BYTE PTR cs:[edi+0x2a76fdf9],0x6f
  406414:	ror    ah,0x67
  406417:	fadd   st(3),st
  406419:	ret    0x3969
  40641c:	out    0xc8,al
  40641e:	hlt    
  40641f:	mov    ecx,DWORD PTR [ecx-0x49]
  406422:	je     0x406476
  406424:	dec    ecx
  406425:	aam    0x2
  406427:	shr    BYTE PTR [eax+0x63],1
  40642a:	jb     0x4063e8
  40642c:	inc    edi
  40642d:	jmp    0xbac1:0xef656142
  406434:	inc    ecx
  406436:	fistp  QWORD PTR [ecx+0x27ebc246]
  40643c:	pop    esp
  40643d:	js     0x4063cd
  40643f:	lds    ebx,FWORD PTR fs:[esi+0x3e]
  406443:	and    ch,BYTE PTR [esi+0x50662b09]
  406449:	and    BYTE PTR [esi+0x45],bl
  40644c:	push   ebp
  40644d:	mov    ah,0xd8
  40644f:	cmc    
  406450:	sbb    al,0x8a
  406452:	jb     0x4063ee
  406454:	pop    eax
  406455:	popf   
  406456:	lods   al,BYTE PTR ds:[esi]
  406457:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406458:	jne    0x4064a9
  40645a:	or     esp,DWORD PTR [eax-0x712e671a]
  406460:	jp     0x406487
  406462:	xchg   ebx,eax
  406463:	pop    ebx
  406464:	inc    eax
  406465:	shl    BYTE PTR [ebp-0x2b2eac52],cl
  40646b:	daa    
  40646c:	cdq    
  40646d:	mov    ah,BYTE PTR [eax-0x54000a4a]
  406473:	out    dx,al
  406474:	repnz inc ecx
  406476:	inc    edi
  406477:	push   0xc294c4dd
  40647c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40647d:	push   es
  40647e:	push   ds
  40647f:	jnp    0x406430
  406481:	xor    DWORD PTR [edi+0x5a1b6d1d],esi
  406487:	mov    ah,0xca
  406489:	mov    ebp,DWORD PTR ds:0x82149b1d
  40648f:	ror    BYTE PTR ds:0xf0958e7,cl
  406495:	adc    BYTE PTR [esi],bl
  406497:	mov    dl,0xbf
  406499:	mov    DWORD PTR ds:0x7a1f7910,ebp
  40649f:	mov    edi,0x99df0894
  4064a4:	stos   BYTE PTR es:[edi],al
  4064a5:	ja     0x40643a
  4064a7:	add    DWORD PTR [edi],ebp
  4064a9:	dec    BYTE PTR [ebp-0x23]
  4064ac:	mov    esi,0x4b4b7247
  4064b1:	loopne 0x4064d2
  4064b3:	mov    edx,0x5d8b1a06
  4064b8:	(bad)  
  4064b9:	sbb    al,0x4d
  4064bb:	sbb    cl,BYTE PTR ds:0xc4678801
  4064c1:	test   eax,0xee970fb3
  4064c6:	rcr    ebx,0x37
  4064c9:	(bad)  
  4064ca:	fstp   st(7)
  4064cc:	lahf   
  4064cd:	inc    esp
  4064ce:	test   eax,0xf8e185ae
  4064d3:	pop    es
  4064d4:	jns    0x406519
  4064d6:	loop   0x4064ee
  4064d8:	sqrtps xmm4,xmm6
  4064db:	cwde   
  4064dc:	pop    edx
  4064dd:	mov    es,WORD PTR [edi]
  4064df:	sti    
  4064e0:	les    esi,FWORD PTR [eax-0x70bee5f9]
  4064e6:	lods   al,BYTE PTR ds:[esi]
  4064e7:	add    eax,0xe45fea15
  4064ec:	fadd   DWORD PTR [ebp-0x4ef79a35]
  4064f2:	mov    ds:0xf4d1ed7f,eax
  4064f7:	xchg   ecx,eax
  4064f8:	call   0xe5dc3cc1
  4064fd:	lock dec edi
  4064ff:	xlat   BYTE PTR ds:[ebx]
  406500:	xor    eax,0xa23a46bf
  406505:	pop    esi
  406506:	or     DWORD PTR [ebp+eax*1-0x6d],0x9b9aed2f
  40650e:	mov    ds:0xdea6992e,al
  406513:	in     al,dx
  406514:	push   ebx
  406515:	lods   al,BYTE PTR ds:[esi]
  406516:	jo     0x40656b
  406518:	inc    ebx
  406519:	sbb    BYTE PTR [ebx+ebp*8],dl
  40651c:	ss push ebx
  40651e:	out    0xf8,al
  406520:	mov    eax,0x8af84f
  406525:	and    BYTE PTR [ebx+0x3da78ed6],dh
  40652b:	jl     0x406537
  40652d:	mov    al,0xd2
  40652f:	fwait
  406530:	sub    ebp,DWORD PTR [esi]
  406532:	outs   dx,BYTE PTR ds:[esi]
  406533:	in     al,0xb6
  406535:	repnz test DWORD PTR [ecx+0x5e],0x4af07d4e
  40653d:	adc    BYTE PTR [eax-0x1bb3d947],dh
  406543:	mov    WORD PTR [eax-0x2b],fs
  406546:	fwait
  406547:	test   eax,0x1e7a2148
  40654c:	xchg   DWORD PTR [ecx+0x6a2c422a],ebx
  406552:	je     0x406550
  406554:	adc    esp,DWORD PTR [ecx+ecx*8]
  406557:	sbb    BYTE PTR [ecx+0xbcb9284],al
  40655d:	enter  0x493d,0x81
  406561:	mov    dl,0x32
  406563:	icebp  
  406564:	dec    esp
  406565:	(bad)  
  406566:	fisub  WORD PTR [edx+0x4378a989]
  40656c:	cmp    eax,DWORD PTR [ecx-0x47a548ce]
  406572:	and    ebp,DWORD PTR [edx+ebx*2+0x32e0370c]
  406579:	or     DWORD PTR [ebx+0x2b],ebp
  40657c:	dec    edi
  40657d:	cmp    ah,ch
  40657f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406580:	aam    0xf0
  406582:	inc    BYTE PTR [edx+0x54357abe]
  406588:	scas   al,BYTE PTR es:[edi]
  406589:	jmp    0x88b9d2dd
  40658e:	mov    esp,0x122c1f55
  406593:	call   FWORD PTR [ecx-0xe]
  406596:	jecxz  0x406530
  406598:	xchg   ebp,eax
  406599:	adc    al,0x59
  40659b:	or     ah,BYTE PTR [edx]
  40659d:	push   ss
  40659e:	inc    ecx
  40659f:	add    eax,0x1565f574
  4065a4:	imul   edi,DWORD PTR [esp+edx*4],0xffffffe8
  4065a8:	mov    al,ds:0x9337174f
  4065ad:	inc    ebp
  4065ae:	inc    eax
  4065af:	dec    ecx
  4065b0:	inc    eax
  4065b1:	hlt    
  4065b2:	fisttp QWORD PTR [ecx]
  4065b4:	mov    dh,0x91
  4065b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065b7:	cdq    
  4065b8:	loopne 0x406543
  4065ba:	scas   eax,DWORD PTR es:[edi]
  4065bb:	mov    al,0xec
  4065bd:	icebp  
  4065be:	ror    BYTE PTR [edx+0x560c0e1e],cl
  4065c4:	out    dx,eax
  4065c5:	adc    al,0x89
  4065c7:	ins    DWORD PTR es:[edi],dx
  4065c8:	jmp    0x5504:0x8dd35402
  4065cf:	or     ebx,DWORD PTR [eax]
  4065d1:	mov    al,0xee
  4065d3:	sub    dl,BYTE PTR [edi+ebx*2+0x42]
  4065d7:	out    dx,al
  4065d8:	sub    dh,BYTE PTR [esi+0x75c25dce]
  4065de:	ds sub cl,ch
  4065e1:	xor    al,0x52
  4065e3:	in     al,0x84
  4065e5:	shl    cl,1
  4065e7:	scas   al,BYTE PTR es:[edi]
  4065e8:	retf   0x5693
  4065eb:	push   cs
  4065ec:	xor    DWORD PTR ds:0x980d9522,esp
  4065f2:	vprotw ymm11,xmm6,[edx+0x28db84f6]
  4065fb:	sub    DWORD PTR [ebp-0x2],0xffffffdc
  4065ff:	sar    bh,1
  406601:	inc    eax
  406602:	shr    BYTE PTR [ecx],0xac
  406605:	mov    ds:0xdbc80e0a,eax
  40660a:	clc    
  40660b:	xlat   BYTE PTR ds:[ebx]
  40660c:	out    dx,al
  40660d:	inc    edi
  40660e:	fisttp DWORD PTR [eax]
  406610:	pop    esi
  406611:	xchg   esi,eax
  406612:	(bad)  
  406614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406615:	lea    ebp,[eax+0x1ee3916b]
  40661b:	lds    esi,FWORD PTR [esi+0x3a3739cd]
  406621:	xchg   BYTE PTR [edx+0x1c],al
  406624:	cmp    ebx,0xfffffff4
  406627:	mov    al,ds:0xb890a3d3
  40662c:	jmp    0xa713:0x98bdbf9
  406633:	jmp    0x406649
  406635:	xor    al,0x28
  406637:	push   ecx
  406638:	std    
  406639:	mul    ah
  40663b:	fnstsw WORD PTR [ebx+0x7872646]
  406641:	sub    ecx,DWORD PTR [edi-0x150ae6c8]
  406647:	jns    0x406602
  406649:	mov    eax,0xb42cc6a3
  40664e:	mov    al,ds:0xf577469b
  406653:	mov    edi,0xe3b46325
  406658:	sub    ecx,0xbbae9751
  40665e:	push   ss
  40665f:	cmp    al,0x7f
  406661:	mov    ebp,0x615e502d
  406666:	add    BYTE PTR gs:[esi+0xe4f751],cl
  40666d:	adc    ebx,DWORD PTR [edx+0x63]
  406670:	call   0x3b60b0b3
  406675:	aad    0xa4
  406677:	pop    edx
  406678:	fwait
  406679:	mov    cl,bl
  40667b:	ror    BYTE PTR [esi+0x3e],0xf2
  40667f:	push   es
  406680:	sub    dh,BYTE PTR [eax-0x7a4f53db]
  406686:	aad    0xe
  406688:	or     eax,0x868b8933
  40668d:	mov    edx,0x5d442eb1
  406692:	gs xor esi,0xe6b172ee
  406699:	push   0xd0f56810
  40669e:	fwait
  40669f:	jp     0x4066d3
  4066a1:	cmp    BYTE PTR [edx],0x1b
  4066a4:	adc    BYTE PTR [edi],al
  4066a6:	add    ecx,DWORD PTR [ebx+0x539eface]
  4066ac:	xchg   edi,eax
  4066ad:	icebp  
  4066ae:	rcl    edi,0x89
  4066b1:	dec    ebp
  4066b2:	rol    DWORD PTR [edx],cl
  4066b4:	(bad)
  4066b7:	call   0xae8d:0x98565516
  4066be:	test   eax,0x40967097
  4066c3:	cwde   
  4066c4:	jle    0x4066d5
  4066c6:	cmp    bh,BYTE PTR [ebx]
  4066c8:	lock adc esi,DWORD PTR [esi+eax*2]
  4066cc:	jle    0x406680
  4066ce:	repz shl DWORD PTR [eax],cl
  4066d1:	call   0x97f2040c
  4066d6:	lahf   
  4066d7:	imul   edx,DWORD PTR [eax+edi*2-0x3ca49992],0x70
  4066df:	es sahf 
  4066e1:	mov    eax,0x31c8f18f
  4066e6:	cmc    
  4066e7:	es in  eax,dx
  4066e9:	ins    DWORD PTR es:[edi],dx
  4066ea:	mov    ds:0x1e6b58db,al
  4066ef:	cmp    dh,dl
  4066f1:	xchg   edx,eax
  4066f2:	stos   BYTE PTR es:[edi],al
  4066f3:	pop    ecx
  4066f4:	cli    
  4066f5:	adc    eax,DWORD PTR [eax+0x7b457f51]
  4066fb:	cdq    
  4066fc:	int3   
  4066fd:	jo     0x40669c
  4066ff:	sbb    al,0x93
  406701:	dec    edx
  406702:	adc    esi,DWORD PTR [eax]
  406704:	(bad)  
  406705:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406706:	fild   QWORD PTR [ecx+0x67]
  406709:	stos   BYTE PTR es:[edi],al
  40670a:	jmp    0x4ae0621f
  40670f:	pop    es
  406710:	or     al,0x81
  406712:	icebp  
  406713:	dec    ebx
  406714:	cmp    BYTE PTR [esi+0x4f],cl
  406717:	sbb    al,0xd6
  406719:	popf   
  40671a:	xor    eax,0x2193c725
  40671f:	push   ecx
  406720:	les    ecx,FWORD PTR [edi+0x12]
  406723:	leave  
  406724:	mov    ecx,0x7c46301f
  406729:	shl    DWORD PTR [esi],1
  40672b:	sar    bl,0x28
  40672e:	or     DWORD PTR [ebp-0x54],ecx
  406731:	popf   
  406732:	cwde   
  406733:	adc    ecx,DWORD PTR [esi]
  406735:	jmp    0x5369:0x19ef1c3f
  40673c:	jmp    0xddda:0xa684b219
  406743:	mov    ds:0x56a2233a,eax
  406748:	ficomp DWORD PTR [ecx]
  40674a:	daa    
  40674b:	pop    ds
  40674c:	test   eax,0x689752bf
  406751:	call   0x68ae4c4
  406756:	std    
  406757:	call   0x9dee5355
  40675c:	in     al,dx
  40675d:	push   esi
  40675e:	cmp    al,0xd2
  406760:	test   BYTE PTR [ebx],0x9d
  406763:	js     0x40677b
  406765:	xor    ch,bh
  406767:	ds sub eax,0x857a08c3
  40676d:	jmp    0xb803:0x40f8e3bc
  406774:	call   0xb9a5:0xeec5d4a4
  40677b:	sbb    al,0xcd
  40677d:	xchg   esi,eax
  40677e:	imul   ebx,ebx,0xfffffff1
  406781:	ds std 
  406783:	ss iret 
  406785:	icebp  
  406786:	and    cl,BYTE PTR [ecx]
  406788:	mov    cl,0xf0
  40678a:	adc    ecx,DWORD PTR [eax]
  40678c:	jg     0x4067c4
  40678e:	icebp  
  40678f:	push   edx
  406790:	or     eax,0x3451a38b
  406795:	out    0xbf,eax
  406797:	ret    0x9ab1
  40679a:	outs   dx,BYTE PTR ds:[esi]
  40679b:	mov    ch,0xc3
  40679d:	test   DWORD PTR [ecx-0x51de9e2],esp
  4067a3:	pushf  
  4067a4:	mov    ds:0x393b6630,eax
  4067a9:	pusha  
  4067aa:	fild   QWORD PTR [ebx-0x5cb09fe]
  4067b0:	hlt    
  4067b1:	cmp    ebx,DWORD PTR es:[eax+0x17c1ffe0]
  4067b8:	push   esi
  4067b9:	mov    cl,0x5
  4067bb:	pop    es
  4067bc:	frstor [ecx+0x78]
  4067bf:	pop    ecx
  4067c0:	fucomip st,st(6)
  4067c2:	mov    ss:0xf0bd69b6,eax
  4067c8:	jmp    0xfda9:0x74844c54
  4067cf:	addr16 das 
  4067d1:	ss pop ds
  4067d3:	xchg   edx,eax
  4067d4:	xchg   ebx,eax
  4067d5:	mov    BYTE PTR [esi-0x3d],cl
  4067d8:	pop    ds
  4067d9:	inc    esp
  4067da:	test   eax,0x554dbc5d
  4067e0:	loop   0x406853
  4067e2:	mov    eax,0x1671fb09
  4067e7:	cmp    ch,BYTE PTR [eax+0x30]
  4067ea:	xor    eax,eax
  4067ec:	pop    ebp
  4067ed:	in     al,0x2e
  4067ef:	inc    eax
  4067f0:	in     al,0x58
  4067f2:	in     al,dx
  4067f3:	xchg   esi,eax
  4067f4:	adc    eax,0x7f9e0cc6
  4067f9:	jle    0x4067da
  4067fb:	mov    cl,0xad
  4067fd:	js     0x406830
  4067ff:	jmp    0xdb2c:0x11e4b876
  406806:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406807:	pop    eax
  406808:	push   esp
  406809:	arpl   WORD PTR [edx-0x3d],si
  40680c:	ins    BYTE PTR es:[edi],dx
  40680d:	push   esi
  40680e:	mov    dl,0x29
  406810:	add    eax,0xdf020af6
  406815:	cmp    al,0xa5
  406817:	cmp    eax,0x96268c4e
  40681c:	inc    ecx
  40681d:	int3   
  40681e:	jns    0x406896
  406820:	clc    
  406821:	addr16 inc ebx
  406823:	xor    bh,BYTE PTR [eax-0x656a7b10]
  406829:	outs   dx,BYTE PTR ds:[esi]
  40682b:	mov    al,0x59
  40682d:	sbb    ebx,DWORD PTR ds:0x864eb130
  406833:	mov    dh,0xa8
  406835:	mov    ds:0x39ff9dc3,eax
  40683a:	mov    cl,0x9c
  40683c:	in     al,0x1f
  40683e:	out    dx,eax
  40683f:	cli    
  406840:	inc    ebp
  406841:	fisubr WORD PTR [ebx-0x1e]
  406844:	adc    al,0xea
  406846:	fwait
  406847:	cmp    DWORD PTR ds:0x8bf36d9b,0xad562cac
  406851:	inc    esi
  406852:	lahf   
  406853:	int    0xea
  406855:	inc    edx
  406856:	lods   al,BYTE PTR ds:[esi]
  406857:	bswap  esi
  406859:	bound  ebp,QWORD PTR [eax-0x7c]
  40685c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40685d:	nop
  40685e:	in     al,0x39
  406860:	adc    eax,0x8898ccf9
  406865:	shl    esi,cl
  406867:	into   
  406868:	in     eax,0x98
  40686a:	ja     0x406801
  40686c:	xchg   esi,eax
  40686d:	mov    eax,0x2ea6f264
  406872:	repnz fsubr QWORD PTR [edi+0x37]
  406876:	test   BYTE PTR [ecx],dh
  406878:	mov    bh,BYTE PTR [esi+edx*1]
  40687b:	sbb    dl,dl
  40687d:	out    dx,al
  40687e:	(bad)  
  40687f:	in     eax,dx
  406880:	push   ss
  406881:	sbb    al,0xbb
  406883:	(bad)  
  406884:	fsubr  QWORD PTR [edx]
  406886:	fisub  WORD PTR [ebx]
  406888:	es sub ebx,edx
  40688b:	and    dh,bl
  40688d:	call   0xe46:0x78912c51
  406894:	(bad)  
  406895:	not    cl
  406897:	sbb    BYTE PTR cs:[ebx+eax*8-0x10],bl
  40689c:	ins    DWORD PTR es:[edi],dx
  40689d:	and    eax,0xcaefc2eb
  4068a2:	xchg   edi,eax
  4068a3:	inc    ebp
  4068a4:	adc    BYTE PTR [edi-0x4c],bh
  4068a7:	push   edx
  4068a8:	jo     0x406888
  4068aa:	addr16 (bad) 
  4068ac:	into   
  4068ad:	sub    ebx,esi
  4068af:	into   
  4068b0:	inc    esp
  4068b1:	std    
  4068b2:	fdiv   QWORD PTR [edi+ebx*4]
  4068b5:	nop
  4068b6:	push   edi
  4068b7:	or     esp,eax
  4068b9:	jbe    0x406890
  4068bb:	and    DWORD PTR [ebx],ecx
  4068bd:	mov    bh,0x2d
  4068bf:	cmp    eax,0x25549958
  4068c4:	sahf   
  4068c5:	fs or  eax,0xacc9baea
  4068cb:	xchg   ebp,eax
  4068cc:	inc    ebp
  4068cd:	xchg   esi,eax
  4068ce:	pop    ebx
  4068cf:	sub    edi,eax
  4068d1:	add    eax,0xf2aa850e
  4068d6:	ds aad 0xdc
  4068d9:	popa   
  4068da:	mov    eax,ds:0xeb4936c2
  4068df:	gs in  eax,0xd8
  4068e2:	idiv   esi
  4068e4:	cmp    bh,BYTE PTR [esp+eax*8]
  4068e7:	shl    DWORD PTR [ecx-0x44],0x9
  4068eb:	cld    
  4068ec:	mov    ds:0x64e03f21,al
  4068f1:	sub    ebx,DWORD PTR [esp+eiz*8-0x36]
  4068f5:	mov    bh,0x64
  4068f7:	or     eax,0x22eaea37
  4068fc:	pop    edx
  4068fd:	add    edx,DWORD PTR [ebp+0x1e]
  406900:	enter  0x54d3,0x48
  406904:	in     eax,dx
  406905:	jmp    0x4068b5
  406907:	adc    ecx,DWORD PTR [ebp+0x47]
  40690a:	xchg   esp,eax
  40690b:	adc    BYTE PTR [ebp+0xe819552],ch
  406911:	sub    ch,0x76
  406914:	das    
  406915:	adc    DWORD PTR [esi+ecx*1+0x5671cd0d],0xd16cbbab
  406920:	xchg   ebx,edi
  406922:	scas   eax,DWORD PTR es:[edi]
  406923:	dec    ebx
  406924:	shl    BYTE PTR ds:[esi-0x797c651e],1
  40692b:	pop    ebp
  40692c:	fcmove st,st(5)
  40692e:	mov    dl,0x30
  406930:	push   0x35
  406932:	sub    al,0x82
  406934:	jecxz  0x406901
  406936:	pop    es
  406937:	(bad)  
  406938:	mov    eax,ds:0x1ce80ebb
  40693d:	jl     0x4068fe
  40693f:	mov    BYTE PTR ss:[edx-0x1cc59e4b],ch
  406946:	dec    eax
  406947:	je     0x406925
  406949:	mov    ds:0xf886d853,eax
  40694e:	test   al,al
  406950:	stos   BYTE PTR es:[edi],al
  406951:	mov    ch,0x91
  406953:	jnp    0x406998
  406955:	pushf  
  406956:	popa   
  406957:	sbb    eax,0xd2e246bf
  40695c:	xchg   edx,eax
  40695d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40695e:	mov    edx,0xf5166855
  406963:	out    0x6,eax
  406965:	push   cs
  406966:	inc    edx
  406967:	jecxz  0x4069ab
  406969:	mov    bl,0x2e
  40696b:	adc    eax,0x82bcc3d0
  406970:	jecxz  0x406902
  406972:	dec    ebp
  406973:	and    al,BYTE PTR [edi]
  406975:	loope  0x40699d
  406977:	(bad)  
  406978:	out    0x7,al
  40697a:	jne    0x4069a2
  40697c:	in     al,0xc8
  40697e:	mov    al,ds:0xf7c60c60
  406983:	sub    bl,BYTE PTR [edx-0x11346931]
  406989:	imul   DWORD PTR [ecx-0x71]
  40698c:	cmp    ch,ah
  40698e:	in     al,0xd8
  406990:	retf   
  406991:	std    
  406992:	repz es push edx
  406995:	dec    edi
  406996:	cmp    BYTE PTR [edx+0x48],dl
  406999:	jmp    0xde34d324
  40699e:	xor    al,0xf8
  4069a0:	sbb    al,0x65
  4069a2:	inc    edi
  4069a3:	fcomip st,st(1)
  4069a5:	jmp    0x7bd7:0xe7b3
  4069ab:	xchg   ebx,eax
  4069ac:	je     0x40696f
  4069ae:	add    eax,0x39c4a52c
  4069b3:	pop    ebx
  4069b4:	(bad)  
  4069b5:	pop    ebp
  4069b6:	push   es
  4069b7:	xor    eax,DWORD PTR [esi-0x67]
  4069ba:	cmp    BYTE PTR ss:[esi+0x46f819ff],dl
  4069c1:	xor    eax,0x75b1973a
  4069c6:	cmp    dh,BYTE PTR [esi]
  4069c8:	mov    eax,0x94ac8814
  4069cd:	cmp    DWORD PTR [ecx-0x67],eax
  4069d0:	xchg   esp,eax
  4069d1:	cld    
  4069d2:	pusha  
  4069d3:	js     0x406a06
  4069d5:	jp     0x406a2c
  4069d7:	les    ebx,FWORD PTR [ecx+eiz*1-0x58]
  4069db:	sub    bl,dl
  4069dd:	jl     0x4069d5
  4069df:	aaa    
  4069e0:	push   ss
  4069e1:	int    0xf9
  4069e3:	xor    eax,0x7d5000ba
  4069e8:	imul   BYTE PTR [eax+eiz*4+0x51]
  4069ec:	dec    edi
  4069ed:	dec    esi
  4069ee:	dec    ebx
  4069ef:	out    0xa8,al
  4069f1:	dec    ebx
  4069f2:	es leave 
  4069f4:	jne    0x4069ab
  4069f6:	test   eax,0x2c206ebf
  4069fb:	or     al,BYTE PTR [ebx-0x8296629]
  406a01:	jp     0x406a3c
  406a03:	lock rcl ch,0xdc
  406a07:	dec    esp
  406a08:	ja     0x4069e8
  406a0a:	outs   dx,BYTE PTR ds:[esi]
  406a0b:	mov    esi,0xcf363a97
  406a10:	xor    DWORD PTR [edx-0x19],edi
  406a13:	sti    
  406a14:	outs   dx,DWORD PTR ds:[esi]
  406a15:	loop   0x4069fd
  406a17:	test   eax,esi
  406a19:	pop    eax
  406a1a:	into   
  406a1b:	or     eax,0x156a241f
  406a20:	add    eax,0xcdcfc8d5
  406a25:	repz rcr ah,0x1a
  406a29:	leave  
  406a2a:	and    DWORD PTR [esi+edx*1+0x32],eax
  406a2e:	mov    cl,0xb4
  406a30:	in     al,0xef
  406a32:	test   DWORD PTR [eax-0xcf4f93e],ecx
  406a38:	inc    eax
  406a39:	stc    
  406a3a:	inc    eax
  406a3b:	dec    ebx
  406a3c:	jno    0x406a66
  406a3e:	aas    
  406a3f:	scas   eax,DWORD PTR es:[edi]
  406a40:	mov    ds:0x6694542d,al
  406a45:	jo     0x406a03
  406a47:	jmp    0xe597:0x22924cc5
  406a4e:	mov    ds:0xeb58b509,eax
  406a53:	ins    DWORD PTR es:[edi],dx
  406a54:	and    esp,DWORD PTR [ebx+0x7098d3ac]
  406a5a:	imul   BYTE PTR [eax+0x143e34f]
  406a60:	push   ebx
  406a61:	xor    al,0x0
  406a63:	ret    
  406a64:	call   0xc69ebc8b
  406a69:	hlt    
  406a6a:	in     eax,0x49
  406a6c:	mul    BYTE PTR [eax-0x5e0bae72]
  406a72:	test   eax,edi
  406a74:	fistp  QWORD PTR [ecx+0x7]
  406a77:	ins    BYTE PTR es:[edi],dx
  406a78:	and    BYTE PTR [ebx-0x569c394c],ch
  406a7e:	aad    0xc2
  406a80:	xlat   BYTE PTR ds:[ebx]
  406a81:	int3   
  406a82:	shr    DWORD PTR [esi-0x3d],1
  406a85:	mov    eax,0x999d9bcd
  406a8a:	and    eax,0x76fcba9d
  406a8f:	adc    BYTE PTR [ebx],bl
  406a91:	dec    edx
  406a92:	fwait
  406a93:	cmp    DWORD PTR [eax+0x165d2469],edi
  406a99:	std    
  406a9a:	outs   dx,BYTE PTR ds:[esi]
  406a9b:	inc    edi
  406a9c:	pop    eax
  406a9d:	dec    edx
  406a9e:	xchg   BYTE PTR [edx-0x74],bl
  406aa1:	outs   dx,BYTE PTR ds:[esi]
  406aa2:	sub    DWORD PTR [ebx+0x1f60c3d7],esp
  406aa8:	rcr    DWORD PTR [ecx-0x64f0c761],cl
  406aae:	je     0x406b2a
  406ab0:	iret   
  406ab1:	in     eax,dx
  406ab2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ab3:	cli    
  406ab4:	popf   
  406ab5:	mov    ah,0xbb
  406ab7:	es adc cl,bh
  406aba:	ss sbb al,0x59
  406abd:	mov    ds:0xb26ce0fd,eax
  406ac2:	mov    esp,0xad23cddb
  406ac7:	add    al,0x95
  406ac9:	push   cs
  406aca:	jl     0x406b2f
  406acc:	pop    ds
  406acd:	pop    ecx
  406ace:	(bad)  
  406acf:	adc    BYTE PTR [esi],dh
  406ad1:	mov    dh,0xa1
  406ad3:	dec    edx
  406ad4:	inc    edi
  406ad5:	fsub   st,st(7)
  406ad7:	std    
  406ad8:	inc    ecx
  406ad9:	aas    
  406ada:	je     0x406a7e
  406adc:	jo     0x406a7f
  406ade:	pop    esp
  406adf:	jp     0x406b24
  406ae1:	xchg   esp,eax
  406ae2:	ficom  WORD PTR [edi+0x20e3ea32]
  406ae8:	lods   al,BYTE PTR ds:[esi]
  406ae9:	cdq    
  406aea:	sub    esi,0x57
  406aed:	es leave 
  406aef:	in     eax,0x75
  406af1:	sub    eax,0x1139b677
  406af6:	mov    esi,0x96abcde1
  406afb:	fld    st(7)
  406afd:	fldcw  WORD PTR [eax]
  406aff:	ffreep st(3)
  406b01:	mov    bh,0x78
  406b03:	mov    bl,0x4a
  406b05:	inc    esp
  406b06:	mov    DWORD PTR [edi+edi*8],edi
  406b09:	bound  edx,QWORD PTR [ecx+0x64d00f71]
  406b0f:	loopne 0x406b5d
  406b11:	scas   eax,DWORD PTR es:[edi]
  406b12:	jne    0x406ac6
  406b14:	mov    bl,BYTE PTR [ebx+0x29c85030]
  406b1a:	xlat   BYTE PTR ds:[ebx]
  406b1b:	xor    cl,BYTE PTR [edx-0x40]
  406b1e:	mov    ecx,0xacf4cdf2
  406b23:	inc    ebp
  406b24:	enter  0x670a,0x4b
  406b28:	pop    eax
  406b29:	clc    
  406b2a:	dec    esi
  406b2b:	adc    eax,0x81ed52de
  406b30:	(bad)  
  406b31:	push   ebx
  406b32:	jae    0x406afc
  406b34:	mov    edi,0x64753930
  406b3a:	add    al,0xff
  406b3c:	rcl    BYTE PTR [bp+di+0xd],1
  406b41:	sahf   
  406b42:	jae    0x406b07
  406b44:	in     al,dx
  406b45:	pop    ecx
  406b46:	dec    ebp
  406b47:	push   eax
  406b48:	mov    eax,ds:0xf314d638
  406b4d:	xchg   edi,eax
  406b4e:	fbstp  TBYTE PTR [esi+0x7c227f18]
  406b54:	and    ecx,0x4d
  406b57:	(bad)  
  406b58:	sub    BYTE PTR [esi+ecx*1+0x59],cl
  406b5c:	push   edi
  406b5d:	push   ebp
  406b5e:	inc    edi
  406b5f:	or     BYTE PTR [ecx+ebx*4+0x2b],0x3
  406b64:	mov    cl,0x26
  406b66:	aam    0xac
  406b68:	pop    edx
  406b69:	push   es
  406b6a:	xor    eax,0x73a6c4d
  406b6f:	mov    cl,0x90
  406b71:	push   es
  406b72:	cwde   
  406b73:	int3   
  406b74:	jne    0x406b33
  406b76:	rep stos DWORD PTR es:[edi],eax
  406b78:	dec    ebx
  406b79:	les    ebx,FWORD PTR [ebx-0x6ab21ee9]
  406b7f:	add    ch,BYTE PTR [edi+eiz*2-0x6397010]
  406b86:	rcr    BYTE PTR [edi],1
  406b88:	push   cs
  406b89:	inc    eax
  406b8a:	sbb    eax,0xdf8d60fb
  406b8f:	ins    DWORD PTR es:[edi],dx
  406b90:	(bad)  
  406b91:	add    al,0x92
  406b93:	dec    esp
  406b94:	mov    ebx,0x3e83caef
  406b99:	(bad)  
  406b9b:	sbb    eax,0x44eff694
  406ba0:	cmp    ah,BYTE PTR [esi+0x12948293]
  406ba6:	jge    0x406b4b
  406ba8:	push   ss
  406ba9:	inc    esp
  406baa:	retf   0x9319
  406bad:	xchg   BYTE PTR [ecx+0x2a],ch
  406bb0:	xchg   ebp,ecx
  406bb2:	add    DWORD PTR fs:0x1a33fd57,esi
  406bb9:	cld    
  406bba:	or     al,0xd2
  406bbc:	cmp    edx,ebp
  406bbe:	xor    al,0x87
  406bc0:	sti    
  406bc1:	mov    esi,0xd99b97f3
  406bc6:	or     al,0x34
  406bc8:	pop    es
  406bc9:	mov    ds:0x6278fd44,al
  406bce:	xchg   ebp,eax
  406bcf:	push   cs
  406bd0:	push   esi
  406bd1:	adc    eax,0x92e1fe97
  406bd6:	cwde   
  406bd7:	xchg   esi,esp
  406bd9:	jns    0x406b7b
  406bdb:	jp     0x406c55
  406bdd:	push   ebx
  406bde:	ret    0xb5eb
  406be1:	xor    ecx,DWORD PTR [edx-0x3a]
  406be4:	adc    BYTE PTR [esi-0x46],cl
  406be7:	js     0x406c04
  406be9:	mov    DWORD PTR [esp+eax*1],esi
  406bec:	mov    ah,0xd3
  406bee:	mov    bh,0xb5
  406bf0:	inc    esi
  406bf1:	and    al,0x44
  406bf3:	pop    ebx
  406bf4:	xchg   esi,eax
  406bf5:	cmc    
  406bf6:	or     eax,0xaaad65be
  406bfb:	bound  ebx,QWORD PTR [eax+0x3b]
  406bfe:	xor    al,0x44
  406c00:	imul   eax,DWORD PTR [eax+0x679e35eb],0x66
  406c07:	jle    0x406bc3
  406c09:	inc    ebx
  406c0a:	icebp  
  406c0b:	dec    ebp
  406c0c:	inc    esp
  406c0d:	sbb    BYTE PTR [edx],bh
  406c0f:	xchg   ebx,eax
  406c10:	pop    edx
  406c11:	(bad)  
  406c12:	xchg   esi,eax
  406c13:	jg     0x406bfa
  406c15:	leave  
  406c16:	xchg   esp,eax
  406c17:	mov    dh,0x32
  406c19:	not    dl
  406c1b:	imul   eax,DWORD PTR [ecx+0x68758f59],0x58caa698
  406c25:	gs aaa 
  406c27:	sub    eax,0xc9c9b980
  406c2c:	xchg   BYTE PTR [esi],al
  406c2e:	mov    edx,0x7905547
  406c33:	fdiv   DWORD PTR [esi-0x17]
  406c36:	xchg   ecx,eax
  406c37:	mov    edi,0x7b8f3eb2
  406c3c:	mov    bh,0x13
  406c3e:	aad    0x6f
  406c40:	sub    dl,ah
  406c42:	or     edx,ecx
  406c44:	arpl   sp,di
  406c46:	mov    edi,0xbd3704d8
  406c4b:	mov    esi,0x4e3f0157
  406c50:	loopne 0x406ccc
  406c52:	and    ecx,ebx
  406c54:	fwait
  406c55:	xor    BYTE PTR [ebp-0x5c],cl
  406c58:	ja     0x406c2b
  406c5a:	sub    BYTE PTR [eax+esi*2],ah
  406c5d:	je     0x406cab
  406c5f:	or     DWORD PTR [edi],0xffffff97
  406c62:	dec    edx
  406c63:	loopne 0x406c09
  406c65:	test   DWORD PTR [ebp-0x2697a2dd],ebp
  406c6b:	mov    ebp,0x40d7c39a
  406c70:	cwde   
  406c71:	or     eax,0x4a22dc95
  406c76:	enter  0x4bf5,0x2
  406c7a:	rol    BYTE PTR [edi-0x8],0xca
  406c7e:	call   0x98f1a7e1
  406c83:	pusha  
  406c84:	xchg   BYTE PTR [eax-0x462346c8],al
  406c8a:	xor    dh,BYTE PTR [esi-0x28]
  406c8d:	sbb    dh,0xd
  406c90:	stos   DWORD PTR es:[edi],eax
  406c91:	sti    
  406c92:	fs nop
  406c94:	pop    ds
  406c95:	fdivr  st,st(5)
  406c97:	bound  edi,QWORD PTR [esi]
  406c99:	sbb    BYTE PTR [edi-0x6b],bl
  406c9c:	push   ebp
  406c9d:	sub    BYTE PTR [edx+0x26af3460],bh
  406ca3:	inc    esi
  406ca4:	xchg   DWORD PTR [eax-0x395fd32],ecx
  406caa:	add    eax,DWORD PTR [edx-0x1ff0e62]
  406cb0:	fistp  QWORD PTR [ebx+0x52]
  406cb3:	addr16 inc ebp
  406cb5:	jmp    0x48b2:0x3a50b1aa
  406cbc:	xchg   edi,eax
  406cbd:	sbb    DWORD PTR [ecx+ebp*8+0x794a3784],esi
  406cc4:	mov    ebp,0x4aa66ceb
  406cc9:	aad    0x5a
  406ccb:	fdivr  QWORD PTR [edi+0x61]
  406cce:	cs out dx,eax
  406cd0:	inc    esi
  406cd1:	or     ecx,DWORD PTR [ecx]
  406cd3:	cmp    DWORD PTR [eax-0x57],ebx
  406cd6:	xor    BYTE PTR [edi-0x36ac9b18],0x45
  406cdd:	test   BYTE PTR [edi+0x37],dl
  406ce0:	push   ss
  406ce1:	int3   
  406ce2:	fimul  DWORD PTR [ebx-0x22]
  406ce5:	je     0x406d28
  406ce7:	jmp    0x1fbe:0x549f446e
  406cee:	jl     0x406c75
  406cf0:	mov    BYTE PTR [esi+0x30],bh
  406cf3:	and    ah,al
  406cf5:	mov    bh,0x4d
  406cf7:	imul   edi,DWORD PTR ds:0x5839a25e,0x3e6736bd
  406d01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d02:	sub    bh,BYTE PTR ds:0x534670f0
  406d08:	and    eax,0xfd6feab5
  406d0d:	iret   
  406d0e:	ret    
  406d0f:	inc    ebx
  406d10:	mov    ax,0x262c
  406d14:	mov    ah,0xd
  406d16:	int3   
  406d17:	push   ecx
  406d18:	lahf   
  406d19:	stos   DWORD PTR es:[edi],eax
  406d1a:	adc    DWORD PTR [ebp+0x59],edx
  406d1d:	mov    al,ds:0xcfc19a13
  406d22:	xchg   esp,eax
  406d23:	pop    edi
  406d24:	inc    ecx
  406d25:	(bad)  
  406d26:	jmp    0x406d68
  406d28:	or     BYTE PTR gs:[esp+edi*4+0x5012c82f],al
  406d30:	push   ebp
  406d31:	sub    cl,BYTE PTR [eax]
  406d33:	adc    DWORD PTR [ecx+0x1],edi
  406d36:	imul   DWORD PTR [ecx]
  406d38:	sbb    eax,0x66088188
  406d3d:	adc    BYTE PTR [ebx+0x49],bh
  406d40:	in     al,dx
  406d41:	adc    al,0x40
  406d43:	push   eax
  406d44:	(bad)  
  406d45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d46:	cmc    
  406d47:	loope  0x406d74
  406d49:	sub    eax,0x59f580d
  406d4e:	loop   0x406d63
  406d50:	fcom   DWORD PTR [edx]
  406d52:	mov    ah,0x5f
  406d54:	mov    cl,0x1a
  406d56:	cmp    al,0x44
  406d58:	test   DWORD PTR [eax+0x8],ecx
  406d5b:	outs   dx,BYTE PTR ds:[esi]
  406d5c:	push   esp
  406d5d:	sub    bl,BYTE PTR [esi-0x73492e2b]
  406d63:	sbb    dh,BYTE PTR [edi-0x6]
  406d66:	cmp    edx,edx
  406d68:	and    DWORD PTR [edx+0x673f226e],ebx
  406d6e:	gs sub ah,al
  406d71:	xor    eax,0x2694d896
  406d76:	call   0xda82a785
  406d7b:	das    
  406d7c:	and    al,0x4d
  406d7e:	push   0x7823b0f1
  406d83:	pop    esi
  406d84:	(bad)  
  406d85:	push   edx
  406d86:	xchg   ecx,eax
  406d87:	push   0x86159bcc
  406d8c:	stos   BYTE PTR es:[edi],al
  406d8d:	xor    DWORD PTR [eax-0x48],ebp
  406d90:	in     eax,dx
  406d91:	mov    al,cl
  406d93:	scas   ax,WORD PTR es:[edi]
  406d95:	push   esi
  406d96:	es pop eax
  406d98:	mov    dh,0xf2
  406d9a:	nop
  406d9b:	sub    eax,DWORD PTR [eax+0x69]
  406d9e:	int3   
  406d9f:	repnz ss sub dh,bl
  406da3:	xchg   esp,eax
  406da4:	out    0xb3,eax
  406da6:	mov    BYTE PTR [ebx],bh
  406da8:	enter  0x2115,0x3c
  406dac:	pop    ss
  406dad:	pop    es
  406dae:	mov    bl,0xf1
  406db0:	push   cs
  406db1:	shl    BYTE PTR [esi+0xb],0x6b
  406db5:	dec    edx
  406db6:	lea    eax,[edi]
  406db8:	iret   
  406db9:	dec    edx
  406dba:	add    eax,0x5caae818
  406dbf:	push   edi
  406dc0:	push   0x10
  406dc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dc3:	fisttp WORD PTR [esi-0x76f70454]
  406dc9:	sbb    al,0xcf
  406dcb:	xchg   esi,eax
  406dcc:	xchg   esp,eax
  406dcd:	mov    al,ds:0x86ad2518
  406dd2:	sbb    ecx,DWORD PTR [esi-0x61]
  406dd5:	fs (bad) 
  406dd8:	repnz (bad) 
  406dda:	ja     0x406e25
  406ddc:	clc    
  406ddd:	rcl    DWORD PTR [esi+0x43a407c5],cl
  406de3:	pop    ebp
  406de4:	cwde   
  406de5:	scas   eax,DWORD PTR es:[edi]
  406de6:	jo     0x406dfa
  406de8:	test   BYTE PTR [eax],al
  406dea:	test   DWORD PTR gs:[ebp-0x72],edx
  406dee:	rcl    DWORD PTR [edx+eiz*2+0x78bbec02],1
  406df5:	out    0xd3,eax
  406df7:	inc    esp
  406df8:	fild   WORD PTR [ecx-0x2b]
  406dfb:	fwait
  406dfc:	push   esi
  406dfd:	lahf   
  406dfe:	leave  
  406dff:	add    ebx,DWORD PTR [ebp+0xe]
  406e02:	fwait
  406e03:	push   ds
  406e04:	push   es
  406e05:	xor    eax,0xed26e675
  406e0a:	pop    ebx
  406e0b:	pop    ecx
  406e0c:	jmp    0xe7d4553f
  406e11:	mov    eax,ds:0xf3422cb3
  406e16:	call   0x1fae:0xcaa41599
  406e1d:	jmp    0x406e94
  406e1f:	rcr    DWORD PTR [ecx+0x79],1
  406e22:	cmp    esi,edx
  406e24:	jae    0x406dcc
  406e26:	in     eax,dx
  406e27:	jle    0x406e3b
  406e29:	dec    ebx
  406e2a:	adc    eax,0x2567ea18
  406e2f:	fadd   st,st(0)
  406e31:	jge    0x406e00
  406e33:	sub    BYTE PTR [esi+0x1311ef2b],al
  406e39:	mov    cl,0x43
  406e3b:	ja     0x406dce
  406e3d:	lods   al,BYTE PTR ds:[esi]
  406e3e:	js     0x406e1e
  406e40:	pop    esi
  406e41:	jmpw   0xbc9d
  406e45:	push   0x9e5a03e0
  406e4a:	out    dx,al
  406e4b:	lds    esp,FWORD PTR [eax]
  406e4d:	ret    
  406e4e:	js     0x406ecb
  406e50:	jle    0x406ea0
  406e52:	push   0xffffffd7
  406e54:	jnp    0x406ea8
  406e56:	in     al,dx
  406e57:	jns    0x406e26
  406e59:	lahf   
  406e5a:	out    dx,al
  406e5b:	nop
  406e5c:	push   0x109b7e2
  406e61:	or     BYTE PTR [esi+edi*8+0x4d],dl
  406e65:	and    esp,DWORD PTR [ebp-0x80]
  406e68:	inc    esi
  406e69:	cs and al,0xc7
  406e6c:	adc    eax,0x6b0f73dd
  406e71:	xchg   bh,ch
  406e73:	por    mm4,QWORD PTR [ebp-0x22397d9b]
  406e7a:	xchg   ebp,eax
  406e7b:	jmp    0x1f786c3d
  406e80:	fwait
  406e81:	mov    ebx,0x7581f190
  406e86:	lods   al,BYTE PTR ds:[esi]
  406e87:	in     eax,0x24
  406e89:	lahf   
  406e8a:	cmp    al,0x2b
  406e8c:	push   0xffffff8c
  406e8e:	jo     0x406e4d
  406e90:	cmp    eax,0xa1a184d8
  406e95:	cwde   
  406e96:	imul   esp,DWORD PTR [eax+0x36a0a48d],0xe4067d3
  406ea0:	add    edx,DWORD PTR [ecx]
  406ea2:	int    0xbb
  406ea4:	(bad)  
  406ea5:	or     eax,0xf8b91a5
  406eaa:	int    0xad
  406eac:	add    ah,dh
  406eae:	push   edx
  406eaf:	push   eax
  406eb0:	in     eax,dx
  406eb1:	add    BYTE PTR [ecx],0xfc
  406eb4:	pop    esp
  406eb5:	xchg   BYTE PTR [esp+ecx*4+0x5],bh
  406eb9:	adc    eax,0x11a9615
  406ebe:	lahf   
  406ebf:	out    0x56,eax
  406ec1:	mov    bh,0x55
  406ec3:	out    0x17,eax
  406ec5:	out    dx,al
  406ec6:	in     al,0x58
  406ec8:	jecxz  0x406e76
  406eca:	xor    al,0x2
  406ecc:	dec    ecx
  406ecd:	pop    edx
  406ece:	test   eax,0xab5715d0
  406ed3:	xchg   ebx,eax
  406ed4:	fisub  WORD PTR [ebp-0xb68ad84]
  406eda:	mov    ebx,0x4ee1122a
  406edf:	jmp    0x23f9:0x5b03773e
  406ee6:	add    ecx,0x28
  406ee9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406eea:	inc    ebx
  406eeb:	dec    edx
  406eec:	or     BYTE PTR [ebp+0x156a8dfb],dl
  406ef2:	jge    0x406f45
  406ef4:	adc    eax,DWORD PTR [eax-0x75d205b6]
  406efa:	(bad)  
  406efb:	pop    edi
  406efc:	mov    edi,0x24384b94
  406f01:	or     DWORD PTR [ebp-0x2],0x0
  406f05:	xchg   ebx,eax
  406f06:	jge    0x406e8e
  406f08:	into   
  406f09:	pop    ebx
  406f0a:	loopne 0x406ef2
  406f0c:	xor    eax,0x965da946
  406f11:	cmp    al,BYTE PTR [edx-0x495f6043]
  406f17:	xor    al,0xdb
  406f19:	dec    ebx
  406f1a:	push   ecx
  406f1b:	mov    dl,0x68
  406f1d:	cmp    DWORD PTR [ebp+0x15],eax
  406f20:	icebp  
  406f21:	std    
  406f22:	and    al,BYTE PTR [ebx-0xabc7526]
  406f28:	stc    
  406f29:	or     esp,DWORD PTR [edx-0x63c45c42]
  406f2f:	jo     0x406ee8
  406f31:	pop    edx
  406f32:	(bad)  
  406f33:	in     al,dx
  406f34:	sub    ecx,esp
  406f36:	loopne 0x406f4d
  406f38:	lock popf 
  406f3a:	jg     0x406f96
  406f3c:	sbb    al,0x5e
  406f3e:	ja     0x406f24
  406f40:	xchg   ebx,eax
  406f41:	and    al,0x67
  406f43:	mov    esp,0x574fa6bb
  406f48:	jp     0x406f6d
  406f4a:	push   ss
  406f4b:	add    BYTE PTR [ebx+0x737b4cf2],cl
  406f51:	xor    esp,DWORD PTR [edi-0x270b88a8]
  406f57:	repz mov cs,WORD PTR [edx+0x16]
  406f5b:	and    ecx,esi
  406f5d:	in     eax,dx
  406f5e:	jg     0x406fc0
  406f60:	lods   eax,DWORD PTR ds:[esi]
  406f61:	mov    dl,BYTE PTR [edx-0x4addb9bc]
  406f67:	lock mov al,ds:0xed082196
  406f6d:	fnstcw WORD PTR [eax+0x58]
  406f70:	mov    bh,0x58
  406f72:	inc    esi
  406f73:	je     0x406f39
  406f75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f76:	mul    BYTE PTR [edi+0x0]
  406f79:	fistp  WORD PTR ds:0x211002c2
  406f7f:	mov    dh,0xb4
  406f81:	dec    ecx
  406f82:	js     0x406f21
  406f84:	mov    BYTE PTR [ebp-0x237ba50a],bl
  406f8a:	push   edx
  406f8b:	or     DWORD PTR [eax-0x65d0f9a9],edx
  406f91:	test   eax,0x9fa2e7a7
  406f96:	out    0xd2,al
  406f98:	dec    ebx
  406f99:	rcl    DWORD PTR [eax-0x6b],cl
  406f9c:	add    BYTE PTR [ecx-0x4e],al
  406f9f:	add    cl,BYTE PTR [edx]
  406fa1:	lds    ecx,FWORD PTR [eax-0x49]
  406fa4:	xor    al,0xee
  406fa6:	outs   dx,BYTE PTR ds:[esi]
  406fa7:	imul   ebx,DWORD PTR [esi+0x1f],0x1ae4b874
  406fae:	jl     0x406fdc
  406fb0:	daa    
  406fb1:	and    dh,0x7
  406fb4:	icebp  
  406fb5:	push   es
  406fb6:	sub    ebx,DWORD PTR [ebx-0x22]
  406fb9:	mov    WORD PTR [esi-0x8],?
  406fbc:	dec    DWORD PTR [ebp+ebx*1+0x7c]
  406fc0:	mov    eax,ds:0xaf7e689f
  406fc5:	jl     0x406fb7
  406fc7:	sbb    al,0x83
  406fc9:	jae    0x407030
  406fcb:	das    
  406fcc:	adc    ebp,DWORD PTR [edx+0x2db5171f]
  406fd2:	sar    BYTE PTR [eax+0x5a03aa2],0x82
  406fd9:	xchg   esi,eax
  406fda:	xlat   BYTE PTR ds:[ebx]
  406fdb:	mov    al,0xfb
  406fdd:	jne    0x406fd7
  406fdf:	and    DWORD PTR [ecx-0x17d974c3],edx
  406fe5:	xchg   esi,eax
  406fe6:	pop    ds
  406fe7:	mov    al,ds:0x859487fd
  406fec:	call   0x7b5c0564
  406ff1:	cmp    eax,0x34273a69
  406ff6:	xor    eax,0xc64fd4a9
  406ffb:	retf   
  406ffc:	outs   dx,BYTE PTR ds:[esi]
  406ffd:	mov    al,0xa3
  406fff:	mov    esp,0xe31f9306
  407004:	mov    dl,0x34
  407006:	mov    ah,0xe
  407008:	cs hlt 
  40700a:	int    0xe0
  40700c:	dec    edi
  40700d:	fidivr WORD PTR [ecx+edx*2]
  407010:	pop    edi
  407011:	pop    es
  407012:	repz in al,dx
  407014:	xchg   esp,eax
  407015:	jb     0x407078
  407017:	cdq    
  407018:	mov    al,0x96
  40701a:	xor    al,dh
  40701c:	jecxz  0x407096
  40701e:	xor    dl,BYTE PTR [ebx+0x2c]
  407021:	cs stos DWORD PTR es:[edi],eax
  407023:	shr    DWORD PTR [eax-0x718e3eea],1
  407029:	jmp    0x86ff:0x4791f271
  407030:	test   dl,dl
  407032:	mov    al,0x9
  407034:	pop    eax
  407035:	pop    edx
  407036:	or     eax,0xf1d21399
  40703b:	fsub   st(1),st
  40703d:	aaa    
  40703e:	pop    eax
  40703f:	pop    eax
  407040:	inc    ebp
  407041:	and    eax,0xe664834c
  407046:	mov    BYTE PTR [ebp-0x36f60593],dh
  40704c:	dec    edi
  40704d:	addr16 pop ecx
  40704f:	cmp    al,BYTE PTR [ecx-0x2c3cc937]
  407055:	faddp  st(6),st
  407057:	push   edi
  407058:	mov    esp,0x9683d5a6
  40705d:	popa   
  40705e:	mov    fs,WORD PTR [esi+0x234ffc6c]
  407064:	mov    eax,ds:0xaccdef0e
  407069:	push   edx
  40706a:	cmp    eax,0x15308d7
  40706f:	xchg   edx,eax
  407070:	into   
  407071:	and    BYTE PTR [bx+si+0x31ee],0x3b
  407077:	jae    0x407052
  407079:	jae    0x40701e
  40707b:	jnp    0x40700f
  40707d:	in     al,dx
  40707e:	cmp    ebx,DWORD PTR [edi+0x70]
  407081:	inc    esp
  407082:	js     0x4070ed
  407084:	(bad)  
  407085:	or     DWORD PTR [edi+0x1735f96d],esi
  40708b:	and    bh,0x10
  40708e:	cwde   
  40708f:	fld    QWORD PTR [ebx-0x7974df77]
  407095:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407096:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407097:	xor    bl,BYTE PTR [ecx]
  407099:	rol    DWORD PTR [edi-0x6b],0x10
  40709d:	dec    esi
  40709e:	sahf   
  40709f:	cs stc 
  4070a1:	mov    ah,0xf6
  4070a3:	lahf   
  4070a4:	sbb    BYTE PTR [ecx+0x31990943],bl
  4070aa:	dec    esi
  4070ab:	mov    edi,0x27781c56
  4070b0:	mov    dh,al
  4070b2:	pop    edx
  4070b3:	xchg   ecx,eax
  4070b4:	pmullw mm5,QWORD PTR [ecx]
  4070b7:	push   0x35
  4070b9:	cmc    
  4070ba:	push   eax
  4070bb:	and    eax,0x9132cfb8
  4070c0:	push   esi
  4070c1:	lock jmp 0x6dad8d9a
  4070c7:	jo     0x4070ce
  4070c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070ca:	pop    ebx
  4070cb:	xchg   esi,eax
  4070cc:	(bad)  
  4070cd:	std    
  4070ce:	or     ah,BYTE PTR [esi+0x3a751385]
  4070d4:	pop    ebx
  4070d5:	add    eax,0x9e99b443
  4070da:	or     DWORD PTR ds:0xf41b06d1,0x3112d82d
  4070e4:	sti    
  4070e5:	xor    eax,0x2f86434b
  4070ea:	lahf   
  4070eb:	je     0x40708b
  4070ed:	bound  edx,QWORD PTR [eax]
  4070ef:	in     al,dx
  4070f0:	jns    0x40714c
  4070f2:	jne    0x40714e
  4070f4:	fwait
  4070f5:	pop    esp
  4070f6:	push   ds
  4070f7:	out    dx,eax
  4070f8:	cdq    
  4070f9:	and    ch,ch
  4070fb:	or     DWORD PTR [eax],ecx
  4070fd:	nop
  4070fe:	(bad)  
  4070ff:	ror    DWORD PTR [edi],cl
  407101:	test   BYTE PTR [ecx-0x33],dl
  407104:	xor    bh,dh
  407106:	shl    BYTE PTR [edi-0xb],0x4f
  40710a:	cmp    esi,DWORD PTR [ebx-0x39]
  40710d:	add    al,al
  40710f:	imul   eax,DWORD PTR ds:0xeff80f0e,0xb0d486fc
  407119:	or     eax,0xdc34a394
  40711e:	inc    ebp
  40711f:	dec    edi
  407120:	fwait
  407121:	aaa    
  407122:	adc    DWORD PTR [edi-0x4a],0x23
  407126:	sub    al,0x10
  407128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407129:	xchg   ecx,eax
  40712a:	aam    0x72
  40712c:	popf   
  40712d:	push   es
  40712e:	arpl   WORD PTR [esi],si
  407130:	ror    BYTE PTR [edi-0x2ab766f7],1
  407136:	(bad)  
  407137:	sbb    dl,ch
  407139:	jge    0x40712b
  40713b:	sub    BYTE PTR [edx-0x3c7102e6],al
  407141:	mov    ds:0x278f95fc,al
  407146:	lds    ebp,FWORD PTR ds:0x3e5337e0
  40714c:	jae    0x40714d
  40714e:	add    DWORD PTR [ebx],esi
  407150:	data16 add al,0xa1
  407153:	out    0xa2,al
  407155:	lahf   
  407156:	aam    0xdd
  407158:	xchg   edi,eax
  407159:	icebp  
  40715a:	sbb    BYTE PTR [eax+esi*8+0x1f54b453],bl
  407161:	in     eax,dx
  407162:	fucomp st(1)
  407164:	scas   al,BYTE PTR es:[edi]
  407165:	sbb    ah,0x21
  407168:	pop    es
  407169:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40716a:	xor    esi,DWORD PTR ds:0x6c25e294
  407170:	xchg   ebp,eax
  407171:	xor    ah,ch
  407173:	stos   DWORD PTR es:[edi],eax
  407174:	jecxz  0x4071a9
  407176:	jno    0x4071e2
  407178:	imul   ebx,esp,0xdb579bc8
  40717e:	(bad)  
  407180:	adc    al,0x26
  407182:	inc    edi
  407183:	pop    ebp
  407184:	sub    bl,BYTE PTR [ebx+0x470ce5a6]
  40718a:	jb     0x40714d
  40718c:	mov    ah,0x41
  40718e:	rcl    DWORD PTR [ecx+0x7a],0xb6
  407192:	mov    dh,0x51
  407194:	xlat   BYTE PTR ds:[ebx]
  407195:	and    al,ch
  407197:	mov    al,0x39
  407199:	dec    esp
  40719a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40719b:	mov    ds:0x93281f26,eax
  4071a0:	push   edi
  4071a1:	and    esp,esi
  4071a3:	jmp    0xb991:0x92a02438
  4071aa:	inc    esi
  4071ab:	orps   xmm0,XMMWORD PTR [eax-0x6b]
  4071af:	inc    eax
  4071b0:	cmp    DWORD PTR [ecx+0x4f8abe5],edx
  4071b6:	iret   
  4071b7:	mov    ds:0xb0433d2c,eax
  4071bc:	jno    0x40719b
  4071be:	sbb    DWORD PTR [esi+0x2ddf4d64],esi
  4071c4:	pop    edi
  4071c5:	adc    al,0x30
  4071c7:	cs scas eax,DWORD PTR es:[edi]
  4071c9:	shl    bl,1
  4071cb:	jl     0x407247
  4071cd:	push   ss
  4071ce:	sbb    eax,0x8fd77209
  4071d3:	adc    edx,DWORD PTR [esi-0x68c487e1]
  4071d9:	mov    WORD PTR [eax+0x5d33936e],bx
  4071e0:	out    0x1c,al
  4071e2:	sahf   
  4071e3:	das    
  4071e4:	cmp    cl,BYTE PTR [ecx-0x77]
  4071e7:	in     al,dx
  4071e8:	scas   eax,DWORD PTR es:[edi]
  4071e9:	mov    dh,0xfb
  4071eb:	call   0xf470a548
  4071f0:	stc    
  4071f1:	cmp    BYTE PTR [ecx+esi*1],bh
  4071f4:	mov    WORD PTR [esi+esi*4],cs
  4071f7:	mov    eax,DWORD PTR [ebp+0x62]
  4071fa:	lea    esp,[ebp-0x48]
  4071fd:	dec    ebp
  4071fe:	dec    ebx
  4071ff:	cmp    eax,0x32a95c4c
  407204:	jmp    0x4071cc
  407206:	xchg   esi,eax
  407207:	pop    esi
  407208:	mov    dl,0x5e
  40720a:	push   cs
  40720b:	mov    dl,0x71
  40720d:	xor    edx,DWORD PTR [eax-0x5b915a8e]
  407213:	retf   
  407214:	fisttp WORD PTR [edi-0x3d]
  407217:	inc    esi
  407218:	sti    
  407219:	mov    ebx,0x8930b565
  40721e:	mov    ebp,0x8d5fb9df
  407223:	sbb    DWORD PTR [esi],esi
  407225:	mov    ebp,0xb6c25b02
  40722a:	pop    edi
  40722b:	popa   
  40722c:	pop    eax
  40722d:	push   esi
  40722e:	ds pop ebx
  407230:	add    dl,BYTE PTR [eax]
  407232:	lods   al,BYTE PTR ds:[esi]
  407233:	xchg   ecx,eax
  407234:	lea    eax,[ecx-0x5]
  407237:	adc    eax,0x6bccf0f2
  40723c:	int    0xbc
  40723e:	enter  0xe4fb,0x13
  407242:	inc    ebp
  407243:	dec    esi
  407244:	pop    ebp
  407245:	mov    esi,0xe67b7ac7
  40724a:	xor    al,0x13
  40724c:	push   eax
  40724d:	lods   al,BYTE PTR ds:[esi]
  40724e:	dec    ebx
  40724f:	add    ch,bl
  407251:	or     eax,DWORD PTR [edx+0x32851ffd]
  407257:	xor    al,dl
  407259:	shr    ebp,1
  40725b:	or     eax,0x9d927643
  407260:	sar    BYTE PTR [edx-0x43],cl
  407263:	shl    DWORD PTR [esi-0x37],0x81
  407267:	mov    BYTE PTR [edx+0x73],bh
  40726a:	ret    
  40726b:	fsubr  st(2),st
  40726d:	cmp    al,BYTE PTR [eax]
  40726f:	dec    eax
  407270:	sbb    DWORD PTR [esi],edx
  407272:	gs mov ?,eax
  407275:	xor    DWORD PTR [edx+0x4f],ebp
  407278:	mov    al,0xc2
  40727a:	aad    0xe2
  40727c:	cld    
  40727d:	aam    0x2c
  40727f:	loope  0x407204
  407281:	mov    esi,0x14f4c4be
  407286:	cmp    DWORD PTR [edx+ecx*1+0x4a],ebx
  40728a:	add    esi,DWORD PTR [ebp+0x43928d4b]
  407290:	mov    esp,DWORD PTR [ecx+0x273df79]
  407296:	mov    esi,DWORD PTR [edx-0x2ffad22c]
  40729c:	aam    0xfa
  40729e:	scas   eax,DWORD PTR es:[edi]
  40729f:	dec    ecx
  4072a0:	or     eax,edi
  4072a2:	(bad)  
  4072a3:	mov    ds:0x85d5565d,eax
  4072a8:	call   DWORD PTR [eax+eiz*2]
  4072ab:	sbb    eax,0xe2be5c23
  4072b0:	cmp    BYTE PTR [edx+0x11],ah
  4072b3:	(bad)  
  4072b4:	int3   
  4072b5:	jg     0x4072c0
  4072b7:	aas    
  4072b8:	jl     0x4072bb
  4072ba:	jb     0x4072ac
  4072bc:	repz (bad) 
  4072bf:	fsub   QWORD PTR [esp+edx*8]
  4072c2:	stos   BYTE PTR es:[edi],al
  4072c3:	mov    esi,0x31d6a901
  4072c8:	jmp    0x407314
  4072ca:	ss gs push ds
  4072cd:	sub    ch,bl
  4072cf:	mov    edi,0x6b5d57f7
  4072d4:	adc    esi,ecx
  4072d6:	inc    ebx
  4072d7:	inc    esi
  4072d8:	fist   DWORD PTR [eax+0x434e9f15]
  4072de:	mov    esp,0x7bd23ecd
  4072e3:	mov    edx,0x7eadff31
  4072e8:	in     al,0x13
  4072ea:	xchg   esi,eax
  4072eb:	cmp    al,0xe5
  4072ed:	mov    edx,0x44127f10
  4072f2:	test   BYTE PTR [esi+0x40],cl
  4072f5:	add    DWORD PTR [edx+0x1f],esp
  4072f8:	mov    ds:0x1563d162,al
  4072fd:	cli    
  4072fe:	mov    dh,ah
  407300:	mov    ecx,0xbde9341b
  407305:	iret   
  407306:	not    edx
  407308:	in     al,dx
  407309:	ret    0xb388
  40730c:	cmp    bl,BYTE PTR [ebp-0x2817f8a9]
  407312:	scas   al,BYTE PTR es:[edi]
  407313:	(bad)
  407317:	iret   
  407318:	sbb    BYTE PTR [esp+eiz*4+0x4a],0x6
  40731d:	jo     0x4072b5
  40731f:	pop    ebp
  407320:	and    edx,DWORD PTR [esi+ebp*4-0x472e550f]
  407327:	(bad)  
  407328:	or     DWORD PTR [ebx],0x33d86658
  40732e:	sti    
  40732f:	or     esi,0xffffff98
  407332:	mov    WORD PTR [eax-0xb],?
  407335:	in     al,0x17
  407337:	test   BYTE PTR [esi-0x269ad0cc],bl
  40733d:	push   0x5b
  40733f:	dec    eax
  407340:	mov    edx,0x2630ecfc
  407346:	cmc    
  407347:	inc    ebp
  407348:	xchg   ebx,eax
  407349:	adc    ah,cl
  40734b:	and    BYTE PTR [edx+edi*8+0x26a01d91],ah
  407352:	jl     0x4072f7
  407354:	pop    ebp
  407355:	or     bh,BYTE PTR [eax+esi*4]
  407358:	pop    esp
  407359:	mov    edx,cs
  40735b:	xchg   edx,eax
  40735c:	cmc    
  40735d:	arpl   WORD PTR [edi-0x4f],sp
  407360:	xchg   BYTE PTR [eax+0x3e],al
  407363:	sub    BYTE PTR [edi+0x15],bh
  407366:	push   ecx
  407367:	adc    eax,0x9f8b0006
  40736c:	mov    ebp,0x136f5420
  407371:	daa    
  407372:	out    0xe5,al
  407374:	je     0x407383
  407376:	lea    eax,[esi]
  407378:	icebp  
  407379:	es call 0x563d1a0b
  40737f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407380:	push   cs
  407381:	repz push ds
  407383:	add    BYTE PTR [eax+ebp*4+0x496126aa],bh
  40738a:	cmp    ebx,DWORD PTR [esi+0x6f5eb5d5]
  407390:	jnp    0x407388
  407392:	cmp    edi,DWORD PTR [edi]
  407394:	mov    edx,0xd9a71994
  407399:	fs xchg ebp,edi
  40739c:	jg     0x407338
  40739e:	mov    al,ds:0x1da775dc
  4073a3:	add    edi,eax
  4073a5:	fnstenv [eax+ebp*8]
  4073a8:	jnp    0x4073b3
  4073aa:	(bad)
  4073ad:	push   0x68039785
  4073b2:	cmp    DWORD PTR [edi],0xfffffff5
  4073b5:	mov    ecx,0xa902ae7c
  4073ba:	in     eax,dx
  4073bb:	mov    esp,DWORD PTR [edx-0x59240afa]
  4073c1:	aaa    
  4073c2:	push   es
  4073c3:	mov    ah,0xff
  4073c5:	or     esp,DWORD PTR [edi]
  4073c7:	push   edx
  4073c8:	pusha  
  4073c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073ca:	sbb    cl,BYTE PTR [edi+0x5c8935c9]
  4073d0:	icebp  
  4073d1:	push   edi
  4073d2:	lods   al,BYTE PTR ds:[esi]
  4073d3:	or     eax,0x8e471814
  4073d8:	call   0xec00:0x17ec2564
  4073df:	xchg   BYTE PTR [ecx-0x62a9bcdf],ah
  4073e5:	hlt    
  4073e6:	add    al,0xaa
  4073e8:	fistp  QWORD PTR ss:[esi+0x1f]
  4073ec:	mov    BYTE PTR [edi+0x34bbc9ed],ch
  4073f2:	jns    0x407394
  4073f4:	mov    DWORD PTR [esi],ebx
  4073f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073f7:	pop    di
  4073f9:	jbe    0x4073a5
  4073fb:	lods   al,BYTE PTR ds:[esi]
  4073fc:	sbb    esp,DWORD PTR [ebx]
  4073fe:	iret   
  4073ff:	or     BYTE PTR [edx],bh
  407401:	lods   al,BYTE PTR ds:[esi]
  407402:	mov    WORD PTR [edi+ebx*8+0x5a],gs
  407406:	stc    
  407407:	xchg   esi,eax
  407408:	cmp    ah,dh
  40740a:	je     0x407437
  40740c:	outs   dx,BYTE PTR ds:[esi]
  40740d:	pop    ebp
  40740e:	push   0x1b
  407410:	gs int3 
  407412:	or     eax,0xf39fe166
  407417:	loop   0x40748e
  407419:	lea    ebp,[eax-0x553a688a]
  40741f:	rcl    DWORD PTR [ebx],1
  407421:	into   
  407422:	mov    bh,al
  407424:	rcr    ebx,cl
  407426:	gs fdivr st,st(0)
  407429:	bound  ecx,QWORD PTR [edi+edi*8]
  40742c:	mov    BYTE PTR [ecx+0x249fba77],bh
  407432:	pop    ds
  407433:	sub    eax,0xf182a2e1
  407438:	xchg   edx,eax
  407439:	ror    ah,0xd5
  40743c:	gs out 0x3a,al
  40743f:	or     al,0x64
  407441:	fwait
  407442:	pop    es
  407443:	mov    ds:0xcbc8dc1b,al
  407448:	jo     0x407465
  40744a:	test   BYTE PTR gs:[ebp-0x3a1e30a7],dh
  407451:	inc    edx
  407452:	mov    esp,DWORD PTR [eax+esi*2]
  407455:	jge    0x4074c7
  407457:	stos   DWORD PTR es:[edi],eax
  407458:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407459:	fidivr WORD PTR [ebp+0x59]
  40745c:	lock shl BYTE PTR [esp+ecx*2-0x1465973d],cl
  407464:	sub    al,0x43
  407466:	test   eax,0x8e9b2fa9
  40746b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40746c:	inc    ebp
  40746d:	pop    ebp
  40746e:	outs   dx,DWORD PTR ds:[esi]
  40746f:	xchg   edi,eax
  407470:	rcl    bl,0xf1
  407473:	mov    al,ds:0x2e131496
  407478:	xchg   ecx,eax
  407479:	adc    dh,BYTE PTR [ebx]
  40747b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40747c:	sti    
  40747d:	mov    DWORD PTR [ecx+ebx*2-0xf6efe3a],ecx
  407484:	add    BYTE PTR [edi-0x5],cl
  407487:	pushf  
  407488:	daa    
  407489:	stos   DWORD PTR es:[edi],eax
  40748a:	fld    TBYTE PTR [edi-0x5edb3ad6]
  407490:	xor    DWORD PTR [ebx],ecx
  407492:	in     eax,dx
  407493:	cmp    BYTE PTR [ecx+0x28d2180c],dl
  407499:	adc    DWORD PTR [eax+eiz*8-0x176802fb],0x129ccfed
  4074a4:	aad    0x81
  4074a6:	loopne 0x407465
  4074a8:	or     DWORD PTR [ebp+0x41e424b9],ebp
  4074ae:	adc    al,0x14
  4074b0:	inc    ecx
  4074b1:	cmp    eax,0x41154c78
  4074b6:	sbb    DWORD PTR [edx],esi
  4074b8:	adc    BYTE PTR [ebx+edi*2+0x1e],dl
  4074bc:	mov    bl,0x5b
  4074be:	(bad)
  4074c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074c3:	mov    fs,ebp
  4074c5:	cwde   
  4074c6:	ficom  DWORD PTR [ebx-0x17]
  4074c9:	fwait
  4074ca:	loopne 0x4074e8
  4074cc:	aas    
  4074cd:	xchg   esp,eax
  4074ce:	and    eax,0x3007ae73
  4074d3:	mov    ebx,0x1667db2f
  4074d8:	dec    esi
  4074d9:	(bad)
  4074dc:	sub    cl,BYTE PTR [ebx+0x59]
  4074df:	and    al,0x0
  4074e1:	cmp    DWORD PTR [eax],ecx
  4074e3:	test   al,0xdb
  4074e5:	mov    ecx,0x1acab2ce
  4074ea:	adc    DWORD PTR ds:0x1780e115,ecx
  4074f0:	cli    
  4074f1:	xor    BYTE PTR ds:0x7db17016,al
  4074f7:	mov    dl,BYTE PTR [edi-0x75d07b75]
  4074fd:	fbstp  TBYTE PTR [ebp+0xf]
  407500:	(bad)  
  407501:	int3   
  407502:	cli    
  407503:	stos   DWORD PTR es:[edi],eax
  407504:	add    ch,BYTE PTR [edx-0x19c7e01]
  40750a:	outs   dx,BYTE PTR ds:[esi]
  40750b:	ret    0xe07a
  40750e:	(bad)  
  407510:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407511:	es inc ecx
  407513:	pusha  
  407514:	aad    0x8b
  407516:	mov    ebp,0x95b6fe5b
  40751b:	jl     0x40756b
  40751d:	jle    0x4074d8
  40751f:	adc    BYTE PTR [edi+0x2c783a60],dl
  407525:	lds    edx,FWORD PTR [ebx+0x5b]
  407528:	push   ss
  407529:	test   eax,0x805e6cc5
  40752e:	es ins BYTE PTR es:[edi],dx
  407530:	xchg   edi,eax
  407531:	sar    DWORD PTR [edx-0x617f083f],1
  407537:	sub    ebx,ecx
  407539:	push   0xf14856df
  40753e:	mov    cl,0x58
  407540:	and    al,0xb3
  407542:	int    0xba
  407544:	adc    eax,0xe7497b54
  407549:	stos   DWORD PTR es:[edi],eax
  40754a:	mov    cl,BYTE PTR [esi]
  40754c:	mov    bh,0xbd
  40754e:	popf   
  40754f:	in     eax,dx
  407550:	add    ecx,DWORD PTR [ecx-0x3361fd19]
  407556:	xchg   esi,eax
  407557:	add    dl,al
  407559:	mov    ah,0x33
  40755b:	mov    bl,0xf8
  40755d:	push   ds
  40755e:	mov    dh,0x7b
  407560:	sub    ebx,DWORD PTR [ecx-0x2522aace]
  407566:	out    0x8d,eax
  407568:	repz aaa 
  40756a:	mov    ebp,0xbf5e90dd
  40756f:	retf   0x5b0e
  407572:	in     al,dx
  407573:	out    dx,al
  407574:	pop    esi
  407575:	call   0xb2c1:0x1ad2e69
  40757c:	add    DWORD PTR [ecx+0x6b],0xf58780f7
  407583:	adc    ah,BYTE PTR [edx]
  407585:	xchg   edi,eax
  407586:	sub    ebx,0xffffffe3
  407589:	mov    eax,ds:0xe14fdfe4
  40758e:	shl    DWORD PTR [edi],0xc5
  407591:	int    0x50
  407593:	mov    edi,0x850a88f
  407598:	push   ebp
  407599:	mov    ds,ebx
  40759b:	xor    dl,bl
  40759d:	repz and ecx,DWORD PTR [edx+0x12e5238d]
  4075a4:	pusha  
  4075a5:	ret    
  4075a6:	out    0x32,eax
  4075a8:	sub    eax,DWORD PTR [ebx]
  4075aa:	mov    ebx,0xbc377b0c
  4075af:	(bad)  
  4075b0:	(bad)  
  4075b1:	jae    0x4075ec
  4075b3:	mov    esp,0x8efefb45
  4075b8:	xchg   esp,eax
  4075b9:	push   ecx
  4075ba:	call   0x4dbc:0xa3e35fcf
  4075c1:	adc    al,al
  4075c3:	and    bl,BYTE PTR [edi]
  4075c5:	push   ebp
  4075c6:	and    al,BYTE PTR [ecx-0x5db68c4]
  4075cc:	test   DWORD PTR [ecx+0x30c6a514],esi
  4075d2:	xchg   BYTE PTR ds:0x18e64994,cl
  4075d8:	cwde   
  4075d9:	pop    esp
  4075da:	dec    eax
  4075db:	aaa    
  4075dc:	stos   BYTE PTR es:[edi],al
  4075dd:	call   0x9373:0xe7b0845f
  4075e4:	mov    edi,eax
  4075e6:	ins    BYTE PTR es:[edi],dx
  4075e7:	cmp    eax,0x6cbdb0cb
  4075ec:	(bad)  
  4075ed:	cdq    
  4075ee:	dec    edi
  4075ef:	out    0xbb,eax
  4075f1:	mov    ds:0x694aefed,al
  4075f6:	dec    edx
  4075f7:	es xor eax,0xf9d87e2e
  4075fd:	mov    ss,WORD PTR [eax]
  4075ff:	jbe    0x40760d
  407601:	js     0x40759d
  407603:	enter  0xa9fb,0x92
  407607:	repnz mov edi,0x614dfd5a
  40760d:	sub    DWORD PTR [esi+0x6490c1ae],esp
  407613:	popa   
  407614:	jmp    0x407617
  407616:	stos   DWORD PTR es:[edi],eax
  407617:	in     al,dx
  407618:	xor    eax,0x9ce90c8
  40761d:	ret    0x8e00
  407620:	fadd   DWORD PTR [ebx]
  407622:	and    al,0x39
  407624:	imul   edx,DWORD PTR [esi+0x5c],0x16
  407628:	xchg   DWORD PTR [ecx-0x7ff24119],ebx
  40762e:	push   ebx
  40762f:	sub    al,0x62
  407631:	(bad)  [esi*1-0xfa36ec6]
  407638:	push   esp
  407639:	cmp    dh,bh
  40763b:	repnz mov ?,WORD PTR [edx-0x32]
  40763f:	mov    ah,0x86
  407641:	aad    0x76
  407643:	mov    cl,0xa8
  407645:	push   eax
  407646:	int3   
  407647:	ffree  st(0)
  407649:	stos   BYTE PTR es:[edi],al
  40764a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40764b:	mov    cl,0x22
  40764d:	inc    eax
  40764e:	ds cmc 
  407650:	push   ss
  407651:	test   al,0xc3
  407653:	hlt    
  407654:	sub    BYTE PTR [edx],dh
  407656:	imul   eax,DWORD PTR [ebx+0x28a8519],0xffffffb0
  40765d:	cmp    bh,BYTE PTR [ebp+0xe82465e]
  407663:	xor    ecx,edx
  407665:	and    BYTE PTR [edx],dl
  407667:	leave  
  407668:	or     al,0x74
  40766a:	cmp    eax,0xda4db07b
  40766f:	mov    dh,0x7a
  407671:	stc    
  407672:	fwait
  407673:	push   edx
  407674:	jno    0x4076f1
  407676:	sbb    bl,BYTE PTR [eax]
  407678:	pop    eax
  407679:	int3   
  40767a:	call   0x7348:0xe383fe6
  407681:	xor    eax,0x91b1525b
  407686:	mov    ebp,DWORD PTR [eax+0x1f]
  407689:	xchg   esi,eax
  40768a:	pop    ss
  40768b:	in     eax,0xc6
  40768d:	mov    al,0x50
  40768f:	inc    esi
  407690:	pop    edi
  407691:	dec    ecx
  407692:	add    eax,0xdd9c1a06
  407697:	das    
  407698:	mov    ebp,0xff7bf2d6
  40769d:	in     eax,dx
  40769e:	pop    ecx
  40769f:	hlt    
  4076a0:	test   al,0xed
  4076a2:	icebp  
  4076a3:	int    0x4d
  4076a5:	das    
  4076a6:	(bad)  
  4076a7:	xchg   esi,eax
  4076a8:	es hlt 
  4076aa:	xchg   ebx,eax
  4076ab:	ins    DWORD PTR es:[edi],dx
  4076ac:	fwait
  4076ad:	adc    ch,BYTE PTR [esi+0x4d]
  4076b0:	shl    DWORD PTR [ecx+0x719e690d],cl
  4076b6:	and    eax,0x2020bcfc
  4076bb:	push   ebp
  4076bc:	inc    esi
  4076bd:	scas   al,BYTE PTR es:[edi]
  4076be:	rcr    BYTE PTR [eax-0x6f],1
  4076c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076c2:	sbb    DWORD PTR [edx-0x18],esp
  4076c5:	and    cl,BYTE PTR [eax]
  4076c7:	xchg   edx,eax
  4076c8:	dec    esp
  4076c9:	imul   ebp,DWORD PTR [ebp-0xb],0x9945c338
  4076d0:	dec    ecx
  4076d1:	push   0x71026618
  4076d6:	fcom   QWORD PTR [ebx+0x7a]
  4076d9:	adc    ah,BYTE PTR ds:0xfdbd3b66
  4076df:	sahf   
  4076e0:	js     0x4076ba
  4076e2:	dec    eax
  4076e3:	xchg   ebp,eax
  4076e4:	inc    ecx
  4076e5:	test   edi,esp
  4076e7:	mov    edi,0x24d248f
  4076ec:	jmp    0xb745:0x6e580c63
  4076f3:	jae    0x4076ef
  4076f5:	cmp    DWORD PTR ds:0x6689679d,ebp
  4076fb:	sbb    eax,0xb035c8a1
  407700:	cmp    al,0xa7
  407702:	mov    eax,0x57b573b2
  407707:	pop    ebx
  407708:	xchg   esp,eax
  407709:	(bad)  
  40770a:	mov    dh,0x76
  40770c:	jmp    0x5f67f880
  407711:	add    eax,0xeb244bb4
  407716:	jbe    0x4076cc
  407718:	lds    ecx,FWORD PTR [edi+edx*1]
  40771b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40771c:	xchg   ecx,eax
  40771d:	jbe    0x4076a9
  40771f:	sti    
  407720:	in     eax,0x94
  407722:	xlat   BYTE PTR ds:[ebx]
  407723:	pop    ebx
  407724:	jns    0x40774a
  407726:	add    ebp,DWORD PTR [eax]
  407728:	stc    
  407729:	sub    al,0x36
  40772b:	or     dh,BYTE PTR [ecx-0x73]
  40772e:	mov    al,BYTE PTR [ecx]
  407730:	pop    ebx
  407731:	pop    edi
  407732:	adc    DWORD PTR [ecx+eax*8],ebp
  407735:	jg     0x4076c4
  407737:	cdq    
  407738:	repz inc ebx
  40773a:	ret    0x564d
  40773d:	xchg   esp,edx
  40773f:	mov    dh,0x26
  407741:	mov    ecx,0xb25296bd
  407746:	cmp    eax,ecx
  407748:	icebp  
  407749:	cmc    
  40774a:	imul   edi,DWORD PTR [edx+0x7f5e0de],0xfffffffd
  407751:	call   0x7c907c68
  407756:	or     eax,0x73937a41
  40775b:	bound  eax,QWORD PTR [ebx]
  40775d:	pop    ebx
  40775e:	xlat   BYTE PTR ds:[ebx]
  40775f:	xlat   BYTE PTR ds:[ebx]
  407760:	add    DWORD PTR [edx],eax
  407762:	fmul   st,st(1)
  407764:	and    eax,0xa84a9a6b
  407769:	fs jo  0x4077e3
  40776c:	pop    ds
  40776d:	xor    ecx,DWORD PTR [ecx-0x39]
  407770:	pusha  
  407771:	jecxz  0x407786
  407773:	ja     0x40778e
  407775:	adc    eax,0xa3c608c2
  40777a:	jae    0x4077e8
  40777c:	cli    
  40777d:	icebp  
  40777e:	aas    
  40777f:	add    al,0xe1
  407781:	in     al,0xe1
  407783:	and    eax,0x2dde734d
  407788:	push   cs
  407789:	inc    ecx
  40778a:	sbb    BYTE PTR [ebp+0x143fa2cf],0x16
  407791:	adc    cl,BYTE PTR [eax+0x43]
  407794:	dec    ecx
  407795:	mov    al,0xe9
  407797:	jmp    0x563dcb44
  40779c:	dec    ebp
  40779d:	sbb    DWORD PTR [esi],edi
  40779f:	pop    esi
  4077a0:	adc    al,0x5a
  4077a2:	jbe    0x4077a0
  4077a4:	test   eax,0xea7ce1d9
  4077a9:	push   0x2e35c8a5
  4077ae:	mov    edx,0xa828a9ec
  4077b3:	sar    BYTE PTR [ebp+eax*4-0x5c076584],1
  4077ba:	inc    esi
  4077bb:	(bad)  
  4077bc:	aas    
  4077bd:	inc    ebp
  4077be:	dec    edi
  4077bf:	jo     0x40774d
  4077c1:	sub    eax,esp
  4077c3:	push   ebp
  4077c4:	push   0xfc564ee3
  4077c9:	mov    eax,0xbae7f028
  4077ce:	inc    esp
  4077cf:	imul   ebp,DWORD PTR [ebx],0xffffffa7
  4077d2:	mov    bl,BYTE PTR [esi+ebx*8]
  4077d5:	cmc    
  4077d6:	outs   dx,DWORD PTR ds:[esi]
  4077d7:	cwde   
  4077d8:	sti    
  4077d9:	(bad)  
  4077da:	ja     0x4077b5
  4077dc:	(bad)  
  4077dd:	out    0xb9,eax
  4077df:	sbb    al,0x92
  4077e1:	into   
  4077e2:	lahf   
  4077e3:	sub    eax,0x4cf4c233
  4077e8:	sub    al,0xd
  4077ea:	ins    DWORD PTR es:[edi],dx
  4077eb:	and    cl,al
  4077ed:	mov    ds:0x4b52920e,eax
  4077f2:	or     eax,0x46c99f17
  4077f7:	sbb    eax,0xc1d55aa2
  4077fc:	mov    DWORD PTR [esi+ebx*8+0x688a0001],edx
  407803:	push   0x92c16b51
  407808:	xor    DWORD PTR [edi],0x21
  40780b:	sbb    BYTE PTR [ebx-0x14],dh
  40780e:	(bad)  
  40780f:	xlat   BYTE PTR ds:[ebx]
  407810:	add    DWORD PTR [eax+0x2d094b3d],ecx
  407816:	pop    esp
  407817:	cli    
  407818:	jle    0x407805
  40781a:	and    dl,bl
  40781c:	jp     0x40782d
  40781e:	imul   eax,DWORD PTR [si],0xec0ddc8
  407825:	je     0x40786a
  407827:	adc    al,0x18
  407829:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40782a:	addr16 dec edi
  40782c:	pushf  
  40782d:	mov    al,0xeb
  40782f:	or     dh,BYTE PTR [edx-0x4c]
  407832:	pop    esp
  407833:	mov    ah,0x45
  407835:	push   0x7a
  407837:	inc    edx
  407838:	jge    0x4078b1
  40783a:	xchg   DWORD PTR [ebx-0x42],ecx
  40783d:	ror    al,1
  40783f:	call   0x1767:0xa040a514
  407846:	popa   
  407847:	in     al,0x76
  407849:	mov    edi,0xb0ad1f19
  40784e:	stc    
  40784f:	adc    BYTE PTR [edi-0x62],dh
  407852:	sbb    al,0xe4
  407854:	jl     0x4077e3
  407856:	xchg   ebx,eax
  407857:	jecxz  0x407877
  407859:	dec    ecx
  40785a:	fs inc ebp
  40785c:	test   al,0xbd
  40785e:	pop    es
  40785f:	retf   0x5fe1
  407862:	cmp    ebp,DWORD PTR [edx+0x59]
  407865:	add    eax,0x4c59fc21
  40786a:	es out dx,al
  40786c:	ins    BYTE PTR es:[edi],dx
  40786d:	and    eax,DWORD PTR [edi+eiz*8+0x62]
  407871:	addr16 jg 0x407823
  407874:	dec    esp
  407875:	pop    ebx
  407876:	popa   
  407877:	inc    edx
  407878:	xor    DWORD PTR [esp+eax*8+0x38],edi
  40787c:	mov    eax,DWORD PTR [eax+0x3c53f042]
  407882:	inc    edi
  407883:	xchg   edx,eax
  407884:	jne    0x84e0440c
  40788a:	test   edx,esi
  40788c:	jo     0x4078ad
  40788e:	stos   BYTE PTR es:[edi],al
  40788f:	outs   dx,DWORD PTR ds:[esi]
  407890:	in     al,dx
  407891:	adc    al,0xe2
  407893:	sti    
  407894:	(bad)  
  407895:	add    dl,BYTE PTR [eax]
  407897:	in     eax,dx
  407898:	nop
  407899:	pop    ebp
  40789a:	jp     0x4078f5
  40789c:	xchg   ebp,eax
  40789d:	push   es
  40789e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40789f:	mov    esi,0x1ce5c737
  4078a4:	lea    ebx,cs:[eax+ebx*8]
  4078a8:	ret    0xf1c6
  4078ab:	add    eax,0xc96f2697
  4078b0:	shr    DWORD PTR [ebp-0x51],cl
  4078b3:	stc    
  4078b4:	int3   
  4078b5:	xlat   BYTE PTR ds:[ebx]
  4078b6:	enter  0x4001,0xd4
  4078ba:	shr    DWORD PTR [esi+0x47],0xb
  4078be:	int    0x86
  4078c0:	adc    cl,BYTE PTR [edi+0x6f]
  4078c3:	sbb    esi,DWORD PTR [ebp+0x186e6bb9]
  4078c9:	imul   edx,edx,0xb8a846d3
  4078cf:	test   ebp,edx
  4078d1:	adc    DWORD PTR ds:0x2ef965be,0xac2730b9
  4078db:	and    al,0xb9
  4078dd:	out    dx,eax
  4078de:	cmp    bh,dh
  4078e0:	addr16 xor ch,dl
  4078e3:	fwait
  4078e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078e5:	adc    esp,DWORD PTR [edi-0x55]
  4078e8:	push   0xffffffbd
  4078ea:	and    BYTE PTR [edx-0x6c18ccab],dh
  4078f0:	iret   
  4078f1:	jo     0x4078ee
  4078f3:	imul   ecx,DWORD PTR [ebp-0x7],0xffffff8f
  4078f7:	push   ss
  4078f8:	pop    es
  4078f9:	hlt    
  4078fa:	mov    ebp,0x5b80b59a
  4078ff:	push   edi
  407900:	in     al,0xd9
  407902:	pusha  
  407903:	cmc    
  407904:	fs rol bh,1
  407907:	sub    eax,0x3941d11f
  40790c:	cmp    ebx,DWORD PTR [ebx]
  40790e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40790f:	lds    esi,FWORD PTR [edx]
  407911:	add    al,0x74
  407913:	dec    eax
  407914:	xchg   ebp,eax
  407915:	daa    
  407916:	jmp    0xfd0d8610
  40791b:	int    0xbd
  40791d:	lds    eax,FWORD PTR [ecx+eiz*2]
  407920:	lods   al,BYTE PTR ds:[esi]
  407921:	cmp    eax,0xd063a540
  407926:	fcom   DWORD PTR [esi-0x1c]
  407929:	dec    ebx
  40792a:	rcl    DWORD PTR [ebp-0x67],1
  40792d:	cs inc edi
  40792f:	scas   eax,DWORD PTR es:[edi]
  407930:	fistp  DWORD PTR [esi+0x53de4c8c]
  407936:	adc    esp,ebp
  407938:	mov    esp,0x18d6f0f5
  40793d:	adc    eax,0x720f0910
  407942:	push   ss
  407943:	jmp    FWORD PTR [ecx+0x7e3b8db5]
  407949:	js     0x40792c
  40794b:	push   0xa9d8a0d7
  407950:	or     esi,0xb5040785
  407956:	sbb    BYTE PTR [eax+0x1eb64c18],ch
  40795c:	in     al,0xd3
  40795e:	mov    cl,0xb6
  407960:	mov    esi,ecx
  407962:	pop    ebp
  407963:	(bad)
  407966:	xchg   edi,eax
  407967:	and    cl,BYTE PTR [edi+0x3b]
  40796a:	repz mov edi,0x9d4fbb23
  407970:	cdq    
  407971:	scas   eax,DWORD PTR es:[edi]
  407972:	sbb    eax,0xacd39ecd
  407977:	xor    eax,0xfaae2db3
  40797c:	ror    DWORD PTR [ebx+ebx*8-0x56cf0002],0x4
  407984:	push   es
  407985:	pop    esi
  407986:	fsubr  DWORD PTR [edi+0x26b09e51]
  40798c:	into   
  40798d:	pop    ebp
  40798e:	outs   dx,DWORD PTR ds:[esi]
  40798f:	sub    DWORD PTR [eax-0x6b],ebx
  407992:	mov    WORD PTR [edi],?
  407994:	int3   
  407995:	imul   esi,DWORD PTR [ecx],0x9425ecec
  40799b:	cmp    ebx,ecx
  40799d:	xchg   ebx,eax
  40799e:	dec    esp
  40799f:	mov    esi,0xed9ddaae
  4079a4:	adc    eax,0xb210b4c3
  4079a9:	in     al,0xe8
  4079ab:	fnsave [ebp+0x78]
  4079ae:	mov    ebx,0x536858c5
  4079b3:	jecxz  0x4079aa
  4079b5:	push   esi
  4079b6:	mov    esi,esp
  4079b8:	jmp    0xcbff5786
  4079bd:	sub    edx,DWORD PTR [ebx]
  4079bf:	repnz stos DWORD PTR es:[edi],eax
  4079c1:	dec    eax
  4079c2:	hlt    
  4079c3:	dec    ebx
  4079c4:	and    BYTE PTR [esi+0x76527d84],ah
  4079ca:	sub    BYTE PTR [ecx+0x2e441eaa],0xd8
  4079d1:	pop    es
  4079d2:	jmp    0x24da55ad
  4079d7:	dec    edi
  4079d8:	aam    0xe6
  4079da:	jno    0x4079d5
  4079dc:	outs   dx,BYTE PTR ds:[esi]
  4079dd:	pop    ebp
  4079de:	pop    ebx
  4079df:	mov    edx,0x68edc511
  4079e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079e5:	(bad)  
  4079e7:	dec    ebx
  4079e8:	mov    ds:0xa45e3383,eax
  4079ed:	js     0x4079c1
  4079ef:	cmp    ebp,DWORD PTR [esi-0x213c915a]
  4079f5:	in     al,dx
  4079f6:	mov    edx,0x2543989d
  4079fb:	inc    ebx
  4079fc:	shl    BYTE PTR [esi+0x7d834b1e],cl
  407a02:	mov    bh,0x50
  407a04:	repz aam 0xb5
  407a07:	and    BYTE PTR [ebx],dl
  407a09:	ja     0x407a55
  407a0b:	ins    DWORD PTR es:[edi],dx
  407a0c:	pop    ebx
  407a0d:	sub    BYTE PTR [edx-0x78],bl
  407a10:	xchg   edi,eax
  407a11:	inc    esp
  407a12:	fist   DWORD PTR [ebp+eiz*4+0xc8f6b3f]
  407a19:	sub    esi,DWORD PTR [ecx-0x79]
  407a1c:	outs   dx,DWORD PTR ds:[esi]
  407a1d:	pop    ebx
  407a1e:	jmp    0x407a13
  407a20:	dec    edx
  407a21:	cli    
  407a22:	sub    al,0xe7
  407a24:	dec    eax
  407a25:	and    eax,0x66a5b9df
  407a2a:	jmp    0x6ba7:0x46af9606
  407a31:	in     eax,0x4f
  407a33:	icebp  
  407a34:	sbb    dh,dh
  407a36:	mov    ecx,0x89d310fd
  407a3b:	shl    DWORD PTR [ebp+0x7e],cl
  407a3e:	sbb    dl,dh
  407a40:	adc    BYTE PTR [edi+0x1e],dl
  407a43:	inc    ecx
  407a44:	das    
  407a45:	push   ecx
  407a46:	daa    
  407a47:	and    DWORD PTR [edx-0x36],edx
  407a4a:	adc    DWORD PTR [esi-0x6],edx
  407a4d:	(bad)  
  407a4e:	xchg   esp,eax
  407a4f:	or     dl,BYTE PTR [edx]
  407a51:	mov    ebx,0xcdb9fae5
  407a56:	dec    edx
  407a57:	bound  ebp,QWORD PTR [edi+edx*2]
  407a5a:	pop    ds
  407a5b:	aaa    
  407a5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a5d:	scas   al,BYTE PTR es:[edi]
  407a5e:	adc    al,0xe0
  407a60:	fimul  WORD PTR [ebp-0x12]
  407a63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a64:	popa   
  407a65:	in     eax,0x23
  407a67:	cmp    BYTE PTR [ecx],ch
  407a69:	fdiv   st,st(6)
  407a6b:	(bad)  
  407a6c:	shl    al,1
  407a6e:	js     0x407a75
  407a70:	cli    
  407a71:	pop    ss
  407a72:	je     0x407a4b
  407a74:	out    0x79,eax
  407a76:	sub    ch,bl
  407a78:	ficom  WORD PTR [edi-0x7c]
  407a7b:	dec    ebx
  407a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a7d:	test   al,0xec
  407a7f:	push   esp
  407a80:	loope  0x407a25
  407a82:	mov    bh,0x8f
  407a84:	outs   dx,DWORD PTR ds:[esi]
  407a85:	push   ecx
  407a86:	clc    
  407a87:	int3   
  407a88:	fst    st(6)
  407a8a:	xor    BYTE PTR [ecx-0x13],0x1
  407a8e:	icebp  
  407a8f:	inc    ecx
  407a90:	mov    edi,0x909ce9b8
  407a95:	xchg   ecx,eax
  407a96:	cli    
  407a97:	push   ecx
  407a98:	mov    dl,0xf5
  407a9a:	fnsave [ecx-0x7a]
  407a9d:	xchg   DWORD PTR [ebx+0x2c],esi
  407aa0:	xchg   esp,eax
  407aa1:	push   eax
  407aa2:	sub    BYTE PTR [esi+esi*8-0x32],ah
  407aa6:	(bad)  
  407aa7:	mov    ebp,0xc5cfc718
  407aac:	lods   al,BYTE PTR ds:[esi]
  407aad:	lock popf 
  407aaf:	ffreep st(6)
  407ab1:	lods   eax,DWORD PTR ds:[esi]
  407ab2:	mov    eax,ds:0x3769c9e6
  407ab7:	imul   ebx,DWORD PTR [ecx-0x4f0f65c7],0x64dede7
  407ac1:	sub    ebp,DWORD PTR [edi-0x38c519a8]
  407ac7:	jb     0x407b38
  407ac9:	jno    0x407a9c
  407acb:	adc    DWORD PTR [esi],ebx
  407acd:	inc    edx
  407ace:	fnsave [edx]
  407ad0:	in     eax,0xcb
  407ad2:	pop    edx
  407ad3:	je     0x407b40
  407ad5:	addr16 repnz out 0x0,eax
  407ad9:	sbb    eax,DWORD PTR [esi+eiz*8]
  407adc:	jecxz  0x407ab4
  407ade:	imul   eax,DWORD PTR [edx+0x58a32e06],0xffffff88
  407ae5:	sahf   
  407ae6:	stos   BYTE PTR es:[edi],al
  407ae7:	xchg   esi,eax
  407ae8:	retf   0x9e13
  407aeb:	mov    dl,0xec
  407aed:	lock adc eax,0x9f7e9295
  407af3:	inc    esp
  407af4:	test   eax,0xbe907560
  407af9:	mov    al,0x67
  407afb:	stc    
  407afc:	adc    al,0x51
  407afe:	ja     0x407a8c
  407b00:	adc    edi,DWORD PTR [ecx+0x76]
  407b03:	aam    0x22
  407b05:	cmp    cl,BYTE PTR [edx+0x23]
  407b08:	mov    ecx,0x5d854ebb
  407b0d:	into   
  407b0e:	cmp    al,0x94
  407b10:	(bad)
  407b13:	sub    dl,al
  407b15:	fist   DWORD PTR [esp+esi*8]
  407b18:	lock fs in eax,0x47
  407b1c:	call   0x182a:0xdb58cdff
  407b23:	mov    eax,0xe65ef8c9
  407b28:	pop    eax
  407b29:	dec    esi
  407b2a:	mov    ecx,0x5bed0ede
  407b2f:	and    BYTE PTR [edi+eiz*1-0x5d5b96b3],ch
  407b36:	into   
  407b37:	push   ss
  407b38:	push   0x7c8a03d5
  407b3d:	sub    bh,BYTE PTR [edx]
  407b3f:	idiv   DWORD PTR [edi]
  407b41:	ins    DWORD PTR es:[edi],dx
  407b42:	jle    0x407ad7
  407b44:	mov    eax,ds:0x25985ad4
  407b49:	sbb    BYTE PTR [ecx],0x6e
  407b4c:	mov    WORD PTR [ecx-0x691ae43d],?
  407b52:	jbe    0x407b4c
  407b54:	inc    ebx
  407b55:	repnz fs das 
  407b58:	inc    ebp
  407b59:	(bad)  
  407b5a:	xchg   ebp,eax
  407b5b:	std    
  407b5c:	cli    
  407b5d:	adc    al,0x66
  407b5f:	xlat   BYTE PTR ds:[ebx]
  407b60:	(bad)  
  407b62:	(bad)  
  407b63:	lock ins DWORD PTR es:[edi],dx
  407b65:	cmp    al,0xc6
  407b67:	(bad)  
  407b68:	jp     0x407b73
  407b6a:	inc    ecx
  407b6b:	fs add al,0x4b
  407b6e:	or     cl,BYTE PTR [edx+0x79fc4f31]
  407b74:	das    
  407b75:	pop    esp
  407b76:	pop    edx
  407b77:	and    eax,0xf26cd33b
  407b7c:	inc    esi
  407b7d:	pop    eax
  407b7e:	and    DWORD PTR [edi+0x2b],esi
  407b81:	popa   
  407b82:	sub    DWORD PTR [edx+0x4c],edi
  407b85:	dec    ebp
  407b86:	or     esi,0x1dea169f
  407b8c:	jl     0x407bd6
  407b8e:	lods   eax,DWORD PTR ds:[esi]
  407b8f:	test   eax,0x32e150aa
  407b94:	lea    ebx,[ebx+0x37ce9716]
  407b9a:	clc    
  407b9b:	pop    es
  407b9c:	mov    eax,0xb01ff048
  407ba1:	fnstsw ax
  407ba3:	jle    0x407beb
  407ba5:	add    esi,DWORD PTR [edx-0x5d]
  407ba8:	inc    ebp
  407ba9:	stos   DWORD PTR es:[edi],eax
  407baa:	sbb    al,dl
  407bac:	into   
  407bad:	mov    es,WORD PTR [eax-0x65]
  407bb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bb1:	jnp    0x407b57
  407bb3:	repnz daa 
  407bb5:	xor    al,0xfb
  407bb7:	mov    dh,BYTE PTR ds:0x9dcb869
  407bbd:	cmp    eax,0x199a6b0b
  407bc2:	inc    ebp
  407bc3:	out    0x85,al
  407bc5:	inc    esi
  407bc6:	test   al,0x57
  407bc8:	push   ecx
  407bc9:	cli    
  407bca:	(bad)  
  407bcb:	pushf  
  407bcc:	and    eax,0x95b37b9
  407bd1:	or     esi,DWORD PTR [eax+0x1c]
  407bd4:	xor    ebp,DWORD PTR [ecx]
  407bd6:	mov    edx,0x9d6e1b7f
  407bdb:	pop    esp
  407bdc:	inc    ebx
  407bdd:	xlat   BYTE PTR ds:[ebx]
  407bde:	repnz jecxz 0x407b74
  407be1:	dec    ecx
  407be2:	jmp    0x407b8a
  407be4:	sbb    bl,BYTE PTR [ecx-0x57]
  407be7:	push   esp
  407be8:	xor    BYTE PTR ds:0xc38209ed,ah
  407bee:	inc    eax
  407bef:	xchg   esi,eax
  407bf0:	adc    DWORD PTR [ebp+ecx*8+0x3ce16fd7],0xbc9d858f
  407bfb:	xor    eax,0x9522fb1b
  407c00:	pop    ss
  407c01:	adc    eax,0x9a357098
  407c06:	cli    
  407c07:	mov    ecx,0x3efa0bab
  407c0c:	outs   dx,BYTE PTR ds:[esi]
  407c0d:	test   BYTE PTR [eax+0x27],bl
  407c10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c11:	not    DWORD PTR [edi+eiz*8+0x34]
  407c15:	mov    al,0x21
  407c17:	loop   0x407c90
  407c19:	inc    ebp
  407c1a:	(bad)  
  407c1b:	mov    esp,0xb53fe311
  407c20:	cmp    al,0xbf
  407c22:	ror    DWORD PTR [eax-0x6],cl
  407c25:	push   0xffffff96
  407c27:	jl     0x407c65
  407c29:	in     eax,dx
  407c2a:	jl     0x407c95
  407c2c:	xor    BYTE PTR [ecx+0x7dacc815],al
  407c32:	loop   0x407ca1
  407c34:	xor    BYTE PTR [esp+ebx*2+0x65],cl
  407c38:	inc    esi
  407c39:	ficom  WORD PTR [ebx+edi*1]
  407c3c:	test   al,dl
  407c3e:	and    ch,BYTE PTR es:[ebx+ecx*4+0x19d7272f]
  407c46:	hlt    
  407c47:	cmp    al,0x6c
  407c49:	jecxz  0x407c0c
  407c4b:	or     eax,0x7f259ea9
  407c50:	mov    al,BYTE PTR [esi*1+0xf92464b]
  407c57:	je     0x407c0a
  407c59:	aaa    
  407c5a:	int3   
  407c5b:	pop    ss
  407c5c:	ins    DWORD PTR es:[edi],dx
  407c5d:	clc    
  407c5e:	xchg   edx,eax
  407c5f:	jno    0x407c8c
  407c61:	inc    ebp
  407c62:	mov    dl,0x21
  407c64:	icebp  
  407c65:	xchg   edx,eax
  407c66:	jp     0x407c1d
  407c68:	pop    ebx
  407c69:	stos   BYTE PTR es:[edi],al
  407c6a:	imul   edx,DWORD PTR [edi+0x74],0x576e1f89
  407c71:	mov    esp,0x2d6b05c
  407c76:	out    0xce,al
  407c78:	fsubrp st(6),st
  407c7a:	imul   esi,DWORD PTR [eax+edi*4-0x56],0x95dc01bc
  407c82:	adc    al,0x5d
  407c84:	stos   BYTE PTR es:[edi],al
  407c85:	mov    dh,0x40
  407c87:	and    dl,cl
  407c89:	lock call 0x59ffef43
  407c8f:	sti    
  407c90:	ret    0x4216
  407c93:	jp     0x407c96
  407c95:	sahf   
  407c96:	ret    
  407c97:	ficomp WORD PTR [esi]
  407c99:	(bad)  
  407c9a:	cld    
  407c9b:	xchg   edx,eax
  407c9c:	or     eax,DWORD PTR [edx+0xe1f1522]
  407ca2:	mov    ss,WORD PTR [edi+0x4a]
  407ca5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ca6:	adc    BYTE PTR [edx],cl
  407ca8:	pop    ecx
  407ca9:	cwde   
  407caa:	xchg   ebp,eax
  407cab:	push   esp
  407cac:	in     ax,dx
  407cae:	xor    eax,0x26b6db68
  407cb3:	sbb    DWORD PTR [edx-0x11b36562],0x1266e618
  407cbd:	cwde   
  407cbe:	clc    
  407cbf:	cmp    edx,DWORD PTR [esi+esi*2+0x7c]
  407cc3:	fisubr DWORD PTR [ecx-0x6b]
  407cc6:	stos   BYTE PTR es:[edi],al
  407cc7:	xor    eax,0xe99c7e71
  407ccc:	pop    esi
  407ccd:	jns    0x407c66
  407ccf:	repz sar BYTE PTR [ebx+0xca0f553],0x5b
  407cd7:	push   ss
  407cd8:	lods   eax,DWORD PTR ds:[esi]
  407cda:	cmc    
  407cdb:	retf   0xf563
  407cde:	aaa    
  407cdf:	(bad)  
  407ce0:	sbb    ch,BYTE PTR [ecx]
  407ce2:	add    BYTE PTR [edi],bh
  407ce4:	sbb    eax,0x790f1ac4
  407ce9:	fucomip st,st(7)
  407ceb:	fstp   QWORD PTR [eax-0x7d]
  407cee:	mov    ecx,0x4a68c91f
  407cf3:	neg    DWORD PTR [ebx]
  407cf5:	xor    ah,BYTE PTR [eax+eax*8]
  407cf8:	sub    al,0x3f
  407cfa:	mov    cl,0xb0
  407cfc:	test   eax,0x9c769ab3
  407d01:	lahf   
  407d02:	adc    eax,0x31cd9904
  407d07:	pop    ss
  407d08:	out    dx,eax
  407d09:	hlt    
  407d0a:	ins    DWORD PTR es:[edi],dx
  407d0b:	mov    eax,DWORD PTR ds:0x4ceac152
  407d11:	cmp    eax,0x4c9d0b51
  407d16:	retf   0x2f09
  407d19:	sti    
  407d1a:	arpl   WORD PTR [eax+0x5d],di
  407d1d:	adc    edi,DWORD PTR [ebp-0x2]
  407d20:	or     BYTE PTR [eax],bh
  407d22:	jae    0x407d75
  407d24:	test   dh,0xb4
  407d27:	push   0x1ced3069
  407d2c:	pop    ebx
  407d2d:	add    eax,edi
  407d2f:	or     eax,0x30449115
  407d34:	aam    0xc9
  407d36:	mov    ds,ebp
  407d38:	mov    ds:0xe7aff713,eax
  407d3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d3e:	scas   al,BYTE PTR es:[edi]
  407d3f:	ret    0x3a7b
  407d42:	xchg   ebp,eax
  407d43:	repnz mov dl,0x4e
  407d46:	xchg   DWORD PTR [edi+ecx*8],esp
  407d49:	jb     0x407d09
  407d4b:	test   esp,ebx
  407d4d:	gs jae 0x407d21
  407d50:	popa   
  407d51:	jo     0x407d9f
  407d53:	mov    ds:0xd95a90e,al
  407d58:	mov    esi,0xdc48bd5a
  407d5d:	sbb    DWORD PTR [ebp+0x2330cd9f],eax
  407d63:	mov    ecx,DWORD PTR [ebx+0x4b66bca3]
  407d69:	sbb    edi,DWORD PTR [eax+0x31]
  407d6c:	ret    
  407d6d:	and    ah,dh
  407d6f:	ret    
  407d70:	std    
  407d71:	call   0xbcd1b263
  407d76:	rcl    DWORD PTR [edx-0x29f448aa],0xca
  407d7d:	mov    al,ds:0xb43eb963
  407d82:	aam    0x65
  407d84:	sub    BYTE PTR [ecx-0x29f05583],ch
  407d8a:	les    ecx,FWORD PTR [edx-0x30]
  407d8d:	jb     0x407d3d
  407d8f:	out    dx,al
  407d90:	mov    bl,0xc7
  407d92:	dec    edx
  407d93:	shr    DWORD PTR [ebp-0x61dab6ed],0xc0
  407d9a:	push   0x59fbecbd
  407d9f:	int    0xcc
  407da1:	cld    
  407da2:	jmp    DWORD PTR [esi+ecx*4]
  407da5:	adc    eax,0x46458d61
  407daa:	cld    
  407dab:	mov    ecx,0xd23f9c83
  407db0:	pop    edi
  407db1:	pop    esi
  407db2:	enter  0xbc5c,0x88
  407db6:	pop    ebp
  407db7:	adc    edx,DWORD PTR [ecx-0x68]
  407dba:	out    0x75,al
  407dbc:	fcomp  QWORD PTR [edi]
  407dbe:	push   0x74
  407dc0:	or     eax,0x184073e7
  407dc5:	dec    esi
  407dc6:	sbb    cl,BYTE PTR [ecx+0x42]
  407dc9:	out    dx,al
  407dca:	mov    al,ds:0xdbdbbc1e
  407dcf:	(bad)  
  407dd1:	shr    DWORD PTR [ebx],cl
  407dd3:	(bad)  
  407dd4:	jb     0x407dfa
  407dd6:	out    dx,al
  407dd7:	cmc    
  407dd8:	jnp    0x407d6b
  407dda:	stos   DWORD PTR es:[edi],eax
  407ddb:	call   0x6a82b9ee
  407de0:	nop
  407de1:	cmp    edx,0x37fcdbbe
  407de7:	xor    al,0xf0
  407de9:	not    BYTE PTR [ebp+0x73]
  407dec:	mov    edi,0xbdc7a218
  407df1:	lahf   
  407df2:	loop   0x407e3e
  407df4:	mov    ecx,0xf4863aca
  407df9:	cli    
  407dfa:	push   edx
  407dfb:	inc    ebx
  407dfc:	sbb    ah,BYTE PTR [ecx]
  407dfe:	dec    esp
  407dff:	pop    eax
  407e00:	jmp    DWORD PTR [ebp+0x1a]
  407e03:	in     al,dx
  407e04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e05:	mov    eax,0xf94100bf
  407e0a:	push   es
  407e0b:	sar    DWORD PTR [ecx+0x5d],cl
  407e0e:	push   ds
  407e0f:	in     eax,0x3e
  407e11:	(bad)  [edi-0x33]
  407e14:	inc    esi
  407e15:	inc    ecx
  407e16:	ja     0x407e8b
  407e18:	cmp    BYTE PTR [ecx+eiz*8],ah
  407e1b:	jmp    0xc699:0xed3288c2
  407e22:	pop    ebx
  407e23:	xor    eax,0xe8031c77
  407e28:	in     eax,dx
  407e29:	aaa    
  407e2a:	pop    ds
  407e2b:	xor    edi,0x7feaf033
  407e31:	retf   
  407e32:	je     0x407e85
  407e34:	nop
  407e35:	loop   0x407e96
  407e37:	inc    esi
  407e38:	test   DWORD PTR [edi],edx
  407e3a:	adc    eax,0xd0984ed3
  407e3f:	xchg   BYTE PTR [ecx-0x5e8d2ed7],al
  407e45:	xchg   ebx,eax
  407e46:	pop    edi
  407e47:	mov    ebx,0xa6212f41
  407e4c:	stc    
  407e4d:	out    0xda,al
  407e4f:	push   ebx
  407e50:	xchg   BYTE PTR [edi],ch
  407e52:	cmp    bl,BYTE PTR [edx]
  407e54:	inc    edi
  407e55:	and    DWORD PTR [edi+0x13],edx
  407e58:	ret    
  407e59:	and    al,0x1f
  407e5b:	cli    
  407e5c:	icebp  
  407e5d:	cld    
  407e5e:	(bad)  
  407e5f:	daa    
  407e60:	inc    edi
  407e61:	dec    ebp
  407e62:	lahf   
  407e63:	ret    0xd57b
  407e66:	pop    ecx
  407e67:	pop    es
  407e68:	int    0x2e
  407e6a:	arpl   sp,bp
  407e6c:	(bad)  
  407e6d:	clc    
  407e6e:	aad    0xd7
  407e70:	inc    esi
  407e71:	or     al,0xf6
  407e73:	and    eax,0x4806dec9
  407e78:	ins    BYTE PTR es:[edi],dx
  407e79:	jg     0x407eb8
  407e7b:	mov    dh,0x14
  407e7d:	fisub  DWORD PTR [ebx]
  407e7f:	jp     0x407e25
  407e81:	sbb    al,0x3e
  407e83:	retf   
  407e84:	mov    bh,0x6e
  407e86:	sti    
  407e87:	test   al,0x81
  407e89:	dec    edi
  407e8a:	ret    0x172f
  407e8d:	push   eax
  407e8e:	stos   DWORD PTR es:[edi],eax
  407e8f:	sbb    al,BYTE PTR [edi-0x6d9189a3]
  407e95:	xchg   edi,eax
  407e96:	popa   
  407e97:	pushf  
  407e98:	jle    0x407eaf
  407e9a:	call   0xef05e170
  407e9f:	add    BYTE PTR [ebx+0x621d8f57],0x16
  407ea6:	(bad)  
  407ea7:	ret    0x7814
  407eaa:	pop    esi
  407eab:	arpl   WORD PTR [esi+0x3ec5230e],di
  407eb1:	rol    DWORD PTR [ecx+0x48],0x15
  407eb5:	mov    edx,0x69a4d633
  407eba:	mov    dh,0xd5
  407ebc:	adc    dl,dl
  407ebe:	aam    0xfe
  407ec0:	mov    ds:0x2feb3e51,al
  407ec5:	out    dx,al
  407ec6:	sahf   
  407ec7:	aas    
  407ec8:	add    DWORD PTR [ebp-0x167ffbae],0xffffffd8
  407ecf:	clc    
  407ed0:	push   ss
  407ed1:	aam    0xe8
  407ed3:	dec    esi
  407ed4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ed5:	adc    BYTE PTR [edi+eiz*2],al
  407ed8:	into   
  407ed9:	shr    BYTE PTR [edx-0x36],0x24
  407edd:	fsub   QWORD PTR [esi+0x111278ed]
  407ee3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ee4:	fnstenv [esi-0x46]
  407ee7:	lods   al,BYTE PTR ds:[esi]
  407ee8:	and    eax,0x90f00bc6
  407eed:	sbb    BYTE PTR [di+0x79],dh
  407ef1:	inc    ebx
  407ef2:	mov    ebx,cs
  407ef4:	cwde   
  407ef5:	cld    
  407ef6:	stos   BYTE PTR es:[edi],al
  407ef7:	mov    dh,0xd3
  407ef9:	mov    ah,0xdf
  407efb:	loope  0x407ee3
  407efd:	push   es
  407efe:	(bad)  
  407eff:	out    dx,al
  407f00:	nop
  407f01:	xchg   edi,eax
  407f02:	mov    dl,0xff
  407f04:	out    dx,eax
  407f05:	mov    ebp,0x3614a6a8
  407f0a:	dec    ecx
  407f0b:	in     al,dx
  407f0c:	xchg   ebx,eax
  407f0d:	xor    bh,BYTE PTR [ebx+0x741f9f2]
  407f13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f14:	mov    ds:0xb121c99e,al
  407f19:	inc    edx
  407f1a:	into   
  407f1b:	fs push esp
  407f1d:	test   DWORD PTR [esi],0x492ae8ec
  407f23:	dec    ecx
  407f24:	mov    esi,0xdc8c951a
  407f29:	mov    esp,0x1ccbc188
  407f2e:	sub    al,0x1e
  407f30:	(bad)  
  407f31:	lea    esp,[eax+0x6079a7e]
  407f37:	sahf   
  407f38:	jecxz  0x407f1f
  407f3a:	inc    esp
  407f3b:	mov    WORD PTR [edx+ecx*2],ds
  407f3e:	ins    BYTE PTR es:[edi],dx
  407f3f:	das    
  407f40:	or     eax,0x337fb574
  407f45:	inc    esp
  407f46:	add    bl,dh
  407f48:	(bad)  
  407f49:	scas   eax,DWORD PTR es:[edi]
  407f4a:	fld    DWORD PTR [edi]
  407f4c:	in     eax,0x5
  407f4e:	jmp    DWORD PTR [ecx]
  407f50:	shr    DWORD PTR [edx+0x26324e23],1
  407f56:	scas   eax,DWORD PTR es:[edi]
  407f57:	lea    eax,[eax+eiz*4]
  407f5a:	ja     0x407f74
  407f5c:	xor    DWORD PTR [edi+0x5f658e55],ebp
  407f62:	pusha  
  407f63:	mov    dh,0x8c
  407f65:	mov    esp,0xf040904c
  407f6a:	loopne 0x407fb4
  407f6c:	out    dx,eax
  407f6d:	add    BYTE PTR [edx],bh
  407f6f:	out    0x44,al
  407f71:	mov    edx,0x3c89befd
  407f76:	pop    ebp
  407f77:	inc    ebp
  407f78:	jg     0x407f74
  407f7a:	jecxz  0x407f58
  407f7c:	or     ebp,DWORD PTR [esi-0x50]
  407f7f:	je     0x407fb7
  407f81:	xchg   edx,eax
  407f82:	aad    0x8d
  407f84:	fisubr DWORD PTR [esi]
  407f86:	sbb    DWORD PTR [eax],0xb5833f50
  407f8c:	(bad)  
  407f8d:	cwde   
  407f8e:	jnp    0x407f64
  407f90:	sbb    eax,edi
  407f92:	ficomp DWORD PTR [ecx+esi*4]
  407f95:	xor    al,0x5b
  407f97:	ror    esp,1
  407f99:	fidivr DWORD PTR [ebp+edi*1+0x3d025a3e]
  407fa0:	retf   
  407fa1:	out    0x83,eax
  407fa3:	mov    ch,0x37
  407fa5:	add    DWORD PTR [ebx-0x1863105d],esp
  407fab:	jl     0x407f93
  407fad:	daa    
  407fae:	bound  ebx,QWORD PTR [edi-0x4e043a7c]
  407fb4:	sub    DWORD PTR [eax+eax*1-0x7276e294],ebx
  407fbb:	cmp    BYTE PTR [ebp+0x4aec9c59],dh
  407fc1:	aaa    
  407fc2:	inc    edi
  407fc3:	mov    al,ds:0x66001ef
  407fc8:	and    al,0x88
  407fca:	jge    0x407fa0
  407fcc:	xor    eax,0xbb079fe5
  407fd1:	add    BYTE PTR [eax-0x7a44242c],cl
  407fd7:	idiv   esi
  407fd9:	pop    edi
  407fda:	int    0x6d
  407fdc:	out    dx,eax
  407fdd:	cs dec edi
  407fdf:	int3   
  407fe0:	pop    ecx
  407fe1:	js     0x407f90
  407fe3:	jmp    0xea10c34f
  407fe8:	js     0x407fe7
  407fea:	fcmovne st,st(0)
  407fec:	idiv   DWORD PTR [edi]
  407fee:	sbb    dl,BYTE PTR [ebp-0x21]
  407ff1:	xchg   edi,eax
  407ff2:	(bad)  
  407ff3:	repnz lods eax,DWORD PTR ds:[esi]
  407ff5:	jg     0x408060
  407ff7:	push   ecx
  407ff8:	mul    DWORD PTR [ecx+eax*1+0xc]
  407ffc:	jle    0x40803d
  407ffe:	sub    eax,0x60473cc3
  408003:	pop    ecx
  408004:	inc    ecx
  408005:	sar    BYTE PTR [esp+edx*1],1
  408008:	std    
  408009:	iret   
  40800a:	mov    dh,0xab
  40800c:	ror    DWORD PTR [eax-0x186795bd],cl
  408012:	sbb    bh,BYTE PTR [ebx]
  408014:	mov    BYTE PTR [esp+eiz*8+0x58],ch
  408018:	jno    0x407fbc
  40801a:	(bad)  [edx+esi*2]
  40801d:	jp     0x407fa2
  40801f:	loop   0x407fbf
  408021:	mov    eax,0x94f88839
  408026:	adc    eax,0xe8ce482d
  40802b:	add    eax,0x38cbd6fb
  408030:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408031:	jae    0x40809b
  408033:	outs   dx,BYTE PTR ds:[esi]
  408034:	pop    es
  408035:	add    eax,0xa966f7d
  40803a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40803b:	and    bh,BYTE PTR ds:[edi+0x25]
  40803f:	or     DWORD PTR [ebx-0x1f218fb3],ebx
  408045:	das    
  408046:	sbb    al,0x84
  408048:	sti    
  408049:	mov    dh,BYTE PTR [esi-0x73]
  40804c:	mov    WORD PTR [ebp-0x7a],gs
  40804f:	leave  
  408050:	enter  0x4adb,0x3f
  408054:	fwait
  408055:	cmp    DWORD PTR [esi-0x1f416f9f],ecx
  40805b:	xchg   ebx,eax
  40805c:	or     eax,0xe4437282
  408061:	mov    edx,esi
  408063:	mov    ebp,0x7bffb25b
  408068:	fisttp QWORD PTR [ecx-0x28]
  40806b:	xchg   esi,eax
  40806c:	jmp    FWORD PTR [ebx+0x16]
  40806f:	mov    ds:0x906cd674,al
  408074:	or     edi,DWORD PTR [esi]
  408076:	les    edi,FWORD PTR [ebx]
  408078:	test   BYTE PTR [esi+0x67],bl
  40807b:	inc    edi
  40807c:	jno    0x40806f
  40807e:	sbb    dl,BYTE PTR [ecx+0x6c]
  408081:	pop    es
  408082:	push   es
  408083:	adc    BYTE PTR [ecx+esi*4+0x43],ch
  408087:	mov    al,ds:0xfec33a36
  40808c:	or     DWORD PTR [eax],edi
  40808e:	mov    al,0x79
  408090:	xor    eax,esi
  408092:	mov    edx,0xffcd8f14
  408097:	sub    edx,eax
  408099:	jmp    0x4080ad
  40809e:	mov    eax,DWORD PTR [ebp-0x8]
  4080a1:	xor    eax,esi
  4080a3:	mov    edx,0xffcd8d14
  4080a8:	sub    edx,eax
  4080aa:	add    edx,DWORD PTR [ebp-0xc]
  4080ad:	mov    DWORD PTR [ebp-0xc],edx
  4080b0:	mov    eax,DWORD PTR [ebp-0x10]
  4080b3:	cmp    eax,0xf89c85b0
  4080b8:	jne    0x40383c
  4080be:	mov    DWORD PTR [ebp-0x20],0xa
  4080c5:	mov    ebx,DWORD PTR [ebp+0x8]
  4080c8:	xor    ebx,esi
  4080ca:	add    ebx,edi
  4080cc:	lea    eax,[ebx-0x3272ec]
  4080d2:	xor    eax,esi
  4080d4:	cmp    eax,0xf89c95b0
  4080d9:	je     0x40810c
  4080df:	lea    eax,[ebx+ecx*1]
  4080e2:	mov    DWORD PTR [ebp-0x14],eax
  4080e5:	mov    eax,DWORD PTR [ebp-0x28]
  4080e8:	sub    eax,ebx
  4080ea:	mov    DWORD PTR [ebp-0x18],eax
  4080ed:	push   DWORD PTR [ebp-0x18]
  4080f0:	push   DWORD PTR [ebp-0x14]
  4080f3:	call   0x408153
  4080f8:	mov    eax,DWORD PTR [ebp+0xc]
  4080fb:	mov    ecx,DWORD PTR [ebp-0x24]
  4080fe:	xor    eax,esi
  408100:	lea    ebx,[ebx+eax*1+0x3272ec]
  408107:	jmp    0x4080cc
  40810c:	dec    DWORD PTR [ebp-0x20]
  40810f:	jne    0x4080c5
  408115:	mov    eax,DWORD PTR [ebp+0x8]
  408118:	mov    edx,DWORD PTR [ebp+0xc]
  40811b:	mov    ebx,DWORD PTR [ebp+0x8]
  40811e:	xor    edx,esi
  408120:	mov    dl,BYTE PTR [edx+ecx*1+0x3272ec]
  408127:	xor    eax,esi
  408129:	mov    al,BYTE PTR [eax+ecx*1+0x3272ec]
  408130:	xor    ebx,esi
  408132:	mov    BYTE PTR [ebx+ecx*1+0x3272ec],dl
  408139:	mov    edx,DWORD PTR [ebp+0xc]
  40813c:	xor    edx,esi
  40813e:	mov    BYTE PTR [edx+ecx*1+0x3272ec],al
  408145:	mov    eax,DWORD PTR [ebp+0xc]
  408148:	xor    eax,esi
  40814a:	add    eax,edi
  40814c:	pop    edi
  40814d:	pop    esi
  40814e:	pop    ebx
  40814f:	leave  
  408150:	ret    0x8
  408153:	push   ebp
  408154:	mov    ebp,esp
  408156:	sub    esp,0x40
  408159:	add    edx,edx
  40815b:	mov    eax,DWORD PTR [ebp+0xc]
  40815e:	mov    DWORD PTR [ebp-0x18],eax
  408161:	mov    DWORD PTR ds:0x428663,0x712d
  40816b:	mov    eax,DWORD PTR [ebp+0x8]
  40816e:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  408175:	mov    DWORD PTR ds:0x428613,0x5be4
  40817f:	mov    DWORD PTR [ebp-0x30],eax
  408182:	sub    DWORD PTR ds:0x428667,ebx
  408188:	push   esi
  408189:	xor    DWORD PTR ds:0x42867b,0x42861b
  408193:	push   edi
  408194:	movzx  edi,WORD PTR ds:0x428647
  40819b:	add    DWORD PTR ds:0x428603,edi
  4081a1:	mov    edi,0xf89c85b1
  4081a6:	mov    DWORD PTR ds:0x428653,0x19
  4081b0:	cmp    DWORD PTR ds:0x428653,0x0
  4081b7:	je     0x408208
  4081bd:	cmp    DWORD PTR ds:0x428653,0x7
  4081c4:	jg     0x408208
  4081ca:	jmp    0x4081da
  4081cf:	push   0x428097
  4081d4:	call   DWORD PTR ds:0x4287c3
  4081da:	cmp    DWORD PTR ds:0x428653,0x8
  4081e1:	jne    0x4081f4
  4081e7:	mov    edx,DWORD PTR ds:0x428653
  4081ed:	dec    edx
  4081ee:	mov    DWORD PTR ds:0x428653,edx
  4081f4:	xor    edx,edx
  4081f6:	or     edx,DWORD PTR ds:0x428653
  4081fc:	dec    edx
  4081fd:	mov    DWORD PTR ds:0x428653,edx
  408203:	jmp    0x4081b0
  408208:	mov    DWORD PTR [ebp-0x8],edi
  40820b:	sbb    ecx,0x4b70
  408211:	mov    eax,DWORD PTR [ebp-0x14]
  408214:	mov    edx,DWORD PTR ds:0x4285cf
  40821a:	xor    DWORD PTR ds:0x4285e7,edx
  408220:	mov    ecx,0x75108a4
  408225:	or     DWORD PTR ds:0x4285ef,ecx
  40822b:	xor    eax,ecx
  40822d:	mov    esi,0x3272ec
  408232:	adc    DWORD PTR ds:0x4285db,edi
  408238:	add    eax,esi
  40823a:	mov    DWORD PTR [ebp-0x4],eax
  40823d:	mov    DWORD PTR ds:0x428667,0x1d
  408247:	cmp    DWORD PTR ds:0x428667,0x0
  40824e:	je     0x408296
  408254:	cmp    DWORD PTR ds:0x428667,0x28
  40825b:	jg     0x408296
  408261:	jmp    0x408284
  408266:	push   0x428633
  40826b:	push   DWORD PTR [ebp-0x10]
  40826e:	push   0x7f16
  408273:	push   0x6682
  408278:	push   DWORD PTR [ebp-0x20]
  40827b:	push   DWORD PTR [ebp-0x20]
  40827e:	call   DWORD PTR ds:0x4287c7
  408284:	mov    edx,DWORD PTR ds:0x428667
  40828a:	dec    edx
  40828b:	mov    DWORD PTR ds:0x428667,edx
  408291:	jmp    0x408247
  408296:	mov    eax,DWORD PTR [ebp-0x14]
  408299:	xor    eax,ecx
  40829b:	add    eax,esi
  40829d:	mov    DWORD PTR [ebp+0x8],eax
  4082a0:	mov    DWORD PTR [ebp-0x28],0xf89c8590
  4082a7:	xor    eax,DWORD PTR ds:0x428623
  4082ad:	mov    DWORD PTR [ebp-0x24],0xf89c85bf
  4082b4:	mov    eax,ds:0x4286d7
  4082b9:	mov    edx,DWORD PTR ds:0x4286eb
  4082bf:	sub    eax,edx
  4082c1:	xor    eax,DWORD PTR [eax+edx*1]
  4082c4:	mov    eax,DWORD PTR [ebp-0x14]
  4082c7:	mov    edx,DWORD PTR [ebp-0x18]
  4082ca:	xor    eax,ecx
  4082cc:	sbb    DWORD PTR ds:0x428677,0x289b
  4082d6:	add    eax,esi
  4082d8:	mov    DWORD PTR ds:0x428653,0x7663
  4082e2:	cmp    edx,eax
  4082e4:	je     0x40aa55
  4082ea:	mov    DWORD PTR ds:0x42861f,0x1f7b
  4082f4:	push   ebx
  4082f5:	jmp    0x40aa30
  4082fa:	mov    eax,ds:0x428607
  4082ff:	add    DWORD PTR ds:0x42865b,eax
  408305:	mov    edx,DWORD PTR [ebp-0x4]
  408308:	dec    eax
  408309:	mov    eax,DWORD PTR [ebp-0x18]
  40830c:	and    DWORD PTR ds:0x4285ef,0x33ad
  408316:	mov    ebx,DWORD PTR [ebp-0x28]
  408319:	sub    eax,edx
  40831b:	xor    ebx,ecx
  40831d:	adc    DWORD PTR ds:0x42863f,0x20c9
  408327:	xor    edx,edx
  408329:	add    ebx,esi
  40832b:	sub    DWORD PTR ds:0x428603,0x441d
  408335:	div    ebx
  408337:	xor    edx,DWORD PTR ds:0x42863b
  40833d:	jmp    0x40a6e1
  408342:	sbb    ecx,DWORD PTR [esi+0x78d7a47c]
  408348:	fwait
  408349:	and    esi,0xb516ec02
  40834f:	cwde   
  408350:	or     DWORD PTR [ecx-0x61],ecx
  408353:	adc    al,0x7a
  408355:	jp     0x40834a
  408357:	pop    edi
  408358:	jp     0x4083d4
  40835a:	pop    ebx
  40835b:	mov    al,ds:0x3a325a2f
  408360:	sbb    cl,BYTE PTR [esi]
  408362:	xchg   DWORD PTR [ebx+0x42],edi
  408365:	mov    eax,0x6a229ef2
  40836a:	scas   al,BYTE PTR es:[edi]
  40836b:	push   ebp
  40836c:	inc    edx
  40836d:	adc    eax,0x85880e5c
  408372:	fdivr  st(7),st
  408374:	es std 
  408376:	stc    
  408377:	jp     0x408307
  408379:	xchg   esp,eax
  40837a:	not    DWORD PTR [ebp+edx*2-0x7b]
  40837e:	fwait
  40837f:	pop    edx
  408380:	mov    BYTE PTR [ebp+0x7c],ch
  408383:	fcomp  DWORD PTR ds:0x43ecc7d1
  408389:	jno    0x408332
  40838b:	xchg   BYTE PTR [ebp-0x59],ah
  40838e:	mov    eax,ds:0x3c28ab05
  408393:	xchg   esi,eax
  408394:	int    0xb7
  408396:	inc    esp
  408397:	and    cl,bl
  408399:	leave  
  40839a:	jmp    0x648f:0xd3a2532b
  4083a1:	mov    eax,ds:0xce92b0c9
  4083a6:	hlt    
  4083a7:	add    BYTE PTR [ecx-0x59d52a7a],ah
  4083ad:	jo     0x408416
  4083af:	jbe    0x40839f
  4083b1:	mov    BYTE PTR [eax],bl
  4083b3:	enter  0x49e,0xc3
  4083b7:	xchg   ecx,eax
  4083b8:	pop    eax
  4083b9:	or     DWORD PTR [eax-0x129618ae],ebx
  4083bf:	and    eax,0x20e42eed
  4083c4:	mov    cl,0x87
  4083c6:	add    BYTE PTR [edx-0x6713984f],bh
  4083cc:	xor    ah,bl
  4083ce:	pop    ebx
  4083cf:	sahf   
  4083d0:	jbe    0x40840b
  4083d2:	es loop 0x40841a
  4083d5:	mov    ds:0x9092145c,al
  4083da:	push   edi
  4083db:	and    DWORD PTR [ebx-0xbdb9d7b],ebx
  4083e1:	mov    ch,0x19
  4083e3:	mov    edx,0x3d63bbcb
  4083e8:	mov    eax,0x8cf4d46
  4083ed:	or     bl,BYTE PTR gs:[eax+edx*1]
  4083f1:	pop    ebx
  4083f2:	push   0x37
  4083f4:	ss cld 
  4083f6:	aaa    
  4083f7:	aam    0x20
  4083f9:	sbb    BYTE PTR [ebp-0x14e9ec2b],al
  4083ff:	outs   dx,DWORD PTR ds:[esi]
  408400:	sub    eax,0xb9d340f6
  408405:	or     BYTE PTR [esi+0x14],cl
  408408:	sub    eax,0xe2f70fbe
  40840d:	in     eax,dx
  40840e:	stos   DWORD PTR es:[edi],eax
  40840f:	jecxz  0x40843e
  408411:	arpl   si,cx
  408413:	jle    0x4083bf
  408415:	jb     0x40845e
  408417:	arpl   WORD PTR [edx+eiz*4-0x2c],bp
  40841b:	jne    0x4083ff
  40841d:	enter  0xe9c9,0x51
  408421:	add    bl,bl
  408423:	imul   ebx,ecx,0xffffffbc
  408426:	into   
  408427:	shl    DWORD PTR [ecx+0x24],cl
  40842a:	mov    cl,0xdd
  40842c:	push   cs
  40842d:	retf   
  40842e:	das    
  40842f:	push   ss
  408430:	xchg   esi,eax
  408431:	inc    eax
  408432:	call   0x6452:0x619b2b55
  408439:	cli    
  40843a:	jne    0x4083fb
  40843c:	lea    ebp,[ebp+0x328f0bc2]
  408442:	retf   0xc626
  408445:	mov    esi,0xcf91e835
  40844a:	xor    al,0xde
  40844c:	lahf   
  40844d:	pusha  
  40844e:	pop    edi
  40844f:	sub    DWORD PTR [ecx+esi*2-0x2b525c10],esi
  408456:	jns    0x4084b9
  408458:	stc    
  408459:	cwde   
  40845a:	mov    dl,0x43
  40845c:	cmp    dl,bh
  40845e:	cmp    esi,ecx
  408460:	sub    al,0x70
  408462:	jbe    0x408428
  408464:	or     al,0x6a
  408466:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408467:	cmp    bl,BYTE PTR [ebp+0x41]
  40846a:	lods   al,BYTE PTR ds:[esi]
  40846b:	jo     0x40840a
  40846d:	mov    ebp,0xd100c125
  408472:	push   ebp
  408473:	push   edi
  408474:	mov    bl,0xda
  408476:	lock mov bh,0x6c
  408479:	xchg   edi,eax
  40847a:	push   ebp
  40847b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40847c:	sub    al,0x2e
  40847e:	shl    BYTE PTR [edi-0x111baa65],0x59
  408485:	mov    al,ds:0xc8c11266
  40848a:	jns    0x408418
  40848c:	ret    
  40848d:	rcl    ebx,cl
  40848f:	jns    0x40845b
  408491:	loopne 0x408456
  408493:	xchg   esp,eax
  408494:	call   0x7220780d
  408499:	mov    gs,WORD PTR [eax]
  40849b:	xchg   ecx,eax
  40849c:	sub    ah,BYTE PTR [esi-0x12]
  40849f:	cmp    edx,DWORD PTR [eax]
  4084a1:	push   es
  4084a2:	fistp  QWORD PTR [ebx+edx*8+0x728f15cf]
  4084a9:	retf   0x41eb
  4084ac:	ds jns 0x408527
  4084af:	dec    ecx
  4084b0:	adc    al,0x1b
  4084b2:	outs   dx,BYTE PTR ds:[esi]
  4084b3:	sbb    ebx,DWORD PTR [ecx-0x39427849]
  4084b9:	daa    
  4084ba:	xor    edi,ebx
  4084bc:	push   eax
  4084bd:	cmp    al,0x52
  4084bf:	mov    esi,es
  4084c1:	jne    0x4084cb
  4084c3:	inc    eax
  4084c4:	mov    edi,0xce22e767
  4084c9:	inc    eax
  4084ca:	data16 mov gs,WORD PTR [esi+0x41f727ee]
  4084d1:	push   ebx
  4084d2:	test   al,0x17
  4084d4:	mov    al,0x74
  4084d6:	mov    edx,es
  4084d8:	sbb    DWORD PTR [eax+0x45],eax
  4084db:	push   0xffffffbf
  4084dd:	cmp    eax,0x67a7758f
  4084e2:	or     eax,0xe940fe5c
  4084e7:	cdq    
  4084e8:	fcmovu st,st(2)
  4084ea:	dec    ebx
  4084eb:	retf   
  4084ec:	push   esi
  4084ed:	adc    ecx,DWORD PTR [eax+0x30a2f6f5]
  4084f3:	in     eax,dx
  4084f4:	sub    al,0xff
  4084f6:	ja     0x4084b6
  4084f8:	rcr    DWORD PTR [ebx-0x67e8425b],cl
  4084fe:	lock hlt 
  408500:	mov    ecx,0x8b9133b1
  408505:	jmp    0xd2fc:0x2f050990
  40850c:	sbb    eax,0x216effcb
  408511:	or     eax,0x99bdc2b0
  408516:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408517:	cmc    
  408518:	pop    ecx
  408519:	push   edi
  40851a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40851b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40851c:	or     DWORD PTR [edx-0x3b],0x81479989
  408523:	sub    BYTE PTR [eax+0x713f2b83],0x78
  40852a:	ss push edx
  40852c:	xchg   ebx,eax
  40852d:	mov    al,ds:0xd4a702ba
  408532:	fsub   DWORD PTR [ecx+0x3edfaa5f]
  408538:	mov    ebp,0x6d49e80
  40853d:	cmp    al,0x6a
  40853f:	cld    
  408540:	imul   ecx,DWORD PTR ds:[edi],0xfffffffc
  408544:	dec    ecx
  408545:	clc    
  408546:	and    al,0xf0
  408548:	gs retf 0x9c69
  40854c:	xchg   ecx,eax
  40854d:	cld    
  40854e:	sbb    eax,DWORD PTR [esi-0x25]
  408551:	xchg   edx,eax
  408552:	inc    ebx
  408553:	jecxz  0x4084dd
  408555:	adc    BYTE PTR [ecx+0x72f0ad0d],dh
  40855b:	xchg   esp,esp
  40855d:	dec    edx
  40855e:	into   
  40855f:	xchg   ecx,eax
  408560:	jo     0x408541
  408562:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408563:	and    BYTE PTR [esi],ch
  408565:	scas   eax,DWORD PTR es:[edi]
  408566:	inc    ebx
  408567:	je     0x4085ac
  408569:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40856a:	ds xchg esi,eax
  40856c:	ins    BYTE PTR es:[edi],dx
  40856d:	mov    dh,0x37
  40856f:	and    al,BYTE PTR [esp+ebp*8-0x511b2012]
  408576:	repz mov dl,0x74
  408579:	aaa    
  40857a:	scas   eax,DWORD PTR es:[edi]
  40857b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40857c:	inc    esp
  40857d:	sub    eax,DWORD PTR [edx]
  40857f:	cmp    BYTE PTR [esi],0x1d
  408582:	repnz loopne 0x4085f3
  408585:	inc    esp
  408586:	imul   edi,edx,0xffffff89
  408589:	push   0xe3e33950
  40858e:	lods   eax,DWORD PTR ds:[esi]
  40858f:	cmp    eax,0x38949285
  408594:	pop    ss
  408595:	retf   
  408596:	pop    ecx
  408597:	cmp    eax,0xdd634c88
  40859c:	pop    ss
  40859d:	pop    esi
  40859e:	adc    DWORD PTR [ecx],edi
  4085a0:	pop    ecx
  4085a1:	js     0x4085bc
  4085a3:	mov    al,0x62
  4085a5:	test   eax,0x7f16bf8c
  4085aa:	xor    dh,BYTE PTR [edi+0x3b517586]
  4085b0:	cmp    DWORD PTR [ecx+0x5ebbbbf4],ecx
  4085b6:	adc    bl,BYTE PTR [edi]
  4085b8:	xchg   BYTE PTR [eax],dh
  4085ba:	scas   eax,DWORD PTR es:[edi]
  4085bb:	dec    edi
  4085bc:	scas   al,BYTE PTR es:[edi]
  4085bd:	inc    eax
  4085be:	loope  0x4085af
  4085c0:	shr    DWORD PTR [ecx-0xb],1
  4085c3:	data16 push bx
  4085c6:	mov    bl,BYTE PTR [edi+0x4d1b9446]
  4085cc:	cmp    eax,0x7f6b2890
  4085d1:	jno    0x4085a5
  4085d3:	in     eax,0x37
  4085d5:	pop    es
  4085d6:	mov    WORD PTR ds:0x8fb6eed2,es
  4085dc:	xchg   ebx,eax
  4085dd:	call   0xf464416
  4085e2:	jl     0x408629
  4085e4:	add    al,0xf4
  4085e6:	sub    ebx,DWORD PTR [edi]
  4085e8:	fcmovb st,st(3)
  4085ea:	lods   eax,DWORD PTR ds:[esi]
  4085eb:	sub    esp,eax
  4085ed:	push   ecx
  4085ee:	fs loope 0x40862c
  4085f1:	add    BYTE PTR [esi],bl
  4085f3:	sbb    bl,bl
  4085f5:	in     eax,0xfd
  4085f7:	(bad)  
  4085f8:	cmp    eax,0x6adf8ca4
  4085fd:	out    0x9d,eax
  4085ff:	out    0x54,eax
  408601:	cdq    
  408602:	sbb    ch,ch
  408604:	ret    0x4562
  408607:	mov    al,ds:0xcae8d776
  40860c:	jmp    0x4085f3
  40860e:	hlt    
  40860f:	scas   eax,DWORD PTR es:[edi]
  408610:	or     BYTE PTR [ecx],ch
  408612:	xchg   ecx,eax
  408613:	ins    BYTE PTR es:[edi],dx
  408614:	loopne 0x408675
  408616:	sub    al,0x44
  408618:	outs   dx,BYTE PTR ds:[esi]
  408619:	jg     0x4085f0
  40861b:	cli    
  40861c:	push   0xfffffff6
  40861e:	push   edx
  40861f:	scas   eax,DWORD PTR es:[edi]
  408620:	ror    DWORD PTR [ebx*8+0x1a228a46],1
  408627:	icebp  
  408628:	or     bh,BYTE PTR ds:0xa9518fac
  40862e:	sbb    eax,0x40ba235f
  408633:	mov    eax,ecx
  408635:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408636:	(bad)  
  408637:	jg     0x408638
  408639:	xchg   esi,eax
  40863a:	into   
  40863b:	cdq    
  40863c:	js     0x40864d
  40863e:	pop    esp
  40863f:	int3   
  408640:	ja     0x4085cc
  408642:	cs xchg edx,edx
  408645:	pop    ebp
  408646:	into   
  408647:	xchg   edi,eax
  408648:	in     al,0x3f
  40864a:	dec    edx
  40864b:	or     dh,bh
  40864d:	pop    edx
  40864e:	popa   
  40864f:	and    BYTE PTR [ebx+edx*2-0x74],0x96
  408654:	retf   
  408655:	ret    
  408656:	and    eax,ecx
  408658:	call   0xd7dd82b9
  40865d:	(bad)  
  40865e:	pop    eax
  40865f:	test   eax,0xf911ff79
  408664:	cmp    ah,BYTE PTR [esi+0x18]
  408667:	cmp    al,0x39
  408669:	dec    ebx
  40866a:	leave  
  40866b:	sbb    eax,0x9dd3ddf
  408670:	jns    0x4085fc
  408672:	jnp    0x4086e5
  408674:	fiadd  WORD PTR [ecx+0x24]
  408677:	xor    dl,ah
  408679:	sbb    al,0xb8
  40867b:	adc    DWORD PTR [esi+0x3e947113],esi
  408681:	lahf   
  408682:	in     al,dx
  408683:	adc    ebx,DWORD PTR [edx*8+0x3b510fd6]
  40868a:	ss out dx,eax
  40868c:	outs   dx,DWORD PTR ds:[esi]
  40868d:	jg     0x408664
  40868f:	jge    0x408686
  408691:	pop    ds
  408692:	sub    al,0x38
  408694:	xchg   ebp,eax
  408695:	fnstsw WORD PTR es:[bx+di]
  408699:	or     eax,0x67485ec5
  40869e:	ins    BYTE PTR es:[edi],dx
  40869f:	leave  
  4086a0:	das    
  4086a1:	mov    ds:0xa4943d9c,al
  4086a6:	inc    esi
  4086a7:	call   0x94e9:0x8b70353b
  4086ae:	test   dh,ch
  4086b0:	pop    es
  4086b1:	outs   dx,BYTE PTR ds:[esi]
  4086b2:	xchg   edx,eax
  4086b3:	bound  edx,QWORD PTR [edi-0x10]
  4086b6:	shl    ecx,1
  4086b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086b9:	mov    al,ds:0xd6955553
  4086be:	sbb    ecx,DWORD PTR ds:0x5fb5a085
  4086c4:	(bad)  
  4086c5:	aaa    
  4086c6:	xor    al,0x3d
  4086c8:	push   0x4b723617
  4086cd:	jae    0x4086d9
  4086cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086d0:	inc    eax
  4086d1:	or     DWORD PTR [ecx+0x6e],ebx
  4086d4:	iret   
  4086d5:	xor    al,0x74
  4086d7:	inc    ecx
  4086d8:	dec    edi
  4086d9:	and    eax,0x60682cbe
  4086de:	add    eax,0xd7f5f7b9
  4086e3:	jns    0x408749
  4086e5:	xchg   esp,ebp
  4086e7:	lock dec ebx
  4086e9:	ins    DWORD PTR es:[edi],dx
  4086ea:	popa   
  4086eb:	pop    ecx
  4086ec:	repz das 
  4086ee:	cmp    dh,ah
  4086f0:	stos   BYTE PTR es:[edi],al
  4086f1:	not    dl
  4086f3:	or     ecx,DWORD PTR [ebp-0xc4d5f37]
  4086f9:	arpl   cx,bp
  4086fb:	cld    
  4086fc:	xor    DWORD PTR [esi+0x6af4b8e0],esp
  408702:	dec    ecx
  408703:	pop    es
  408704:	call   0x1cd8:0x403cb38c
  40870b:	cli    
  40870c:	scas   eax,DWORD PTR es:[edi]
  40870d:	ficom  DWORD PTR [ebp-0xa]
  408710:	xchg   ebp,eax
  408711:	dec    ebp
  408712:	add    edi,ebp
  408714:	mov    edi,0x8c74a9a5
  408719:	repnz add dh,al
  40871c:	mov    edi,0x9e364a9f
  408721:	icebp  
  408722:	sar    DWORD PTR [ebx+esi*2-0x6e055227],1
  408729:	pop    ds
  40872a:	or     dl,0x1f
  40872d:	pop    ss
  40872e:	mov    eax,0xe1887932
  408733:	aam    0x68
  408735:	pushf  
  408736:	sti    
  408737:	ins    DWORD PTR es:[edi],dx
  408738:	adc    esi,ebp
  40873a:	dec    esi
  40873b:	push   ecx
  40873c:	cli    
  40873d:	into   
  40873e:	sbb    DWORD PTR [edx+0x67],eax
  408741:	imul   ebx,eax,0x77143979
  408747:	add    BYTE PTR [ebx+0x456a8ecc],al
  40874d:	inc    eax
  40874e:	fwait
  40874f:	mov    ah,0xc6
  408751:	into   
  408752:	xor    edi,ecx
  408754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408755:	xor    BYTE PTR [esi-0x37ade206],dl
  40875b:	xor    BYTE PTR [ebp+0x4c],al
  40875e:	jnp    0x4087c5
  408760:	mov    WORD PTR [eax+0x39],es
  408763:	fbld   TBYTE PTR [eax-0x59e7483e]
  408769:	mov    ecx,DWORD PTR [edi]
  40876b:	nop
  40876c:	cmp    ecx,DWORD PTR [edi]
  40876e:	jle    0x408757
  408770:	mov    ds,ecx
  408772:	inc    ebx
  408773:	(bad)  
  408774:	or     eax,0x21dd381b
  408779:	pop    ecx
  40877a:	jns    0x408734
  40877c:	ret    0x78c8
  40877f:	xor    esp,DWORD PTR [eax]
  408781:	ret    
  408782:	sti    
  408783:	push   ebp
  408784:	jns    0x4087e3
  408786:	retf   
  408787:	adc    eax,0x1cba0b84
  40878c:	inc    edi
  40878d:	test   al,0x19
  40878f:	imul   edi,DWORD PTR [edi],0x37d9cbc6
  408795:	mov    ebx,0xd695d6f2
  40879a:	mul    DWORD PTR [ecx+0x10163cfc]
  4087a0:	and    al,0xa
  4087a2:	mov    ds:0x57efc1ca,eax
  4087a7:	rol    DWORD PTR [ebx-0x69],cl
  4087aa:	jmp    0xca76:0x24e3144e
  4087b1:	shl    BYTE PTR [ebx-0x4bc6434a],cl
  4087b7:	xlat   BYTE PTR ds:[ebx]
  4087b8:	test   BYTE PTR [ebp+0xc],bl
  4087bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087bc:	xchg   edx,eax
  4087bd:	xchg   BYTE PTR [ebx-0x58],ah
  4087c0:	mov    bl,0x7e
  4087c2:	fadd   DWORD PTR [eax]
  4087c4:	pushf  
  4087c5:	sti    
  4087c6:	out    0xe8,eax
  4087c8:	push   ss
  4087c9:	cmp    BYTE PTR [eax+0x5515914e],bl
  4087cf:	stc    
  4087d0:	in     al,dx
  4087d1:	test   DWORD PTR [edx+0x62d63cb8],ecx
  4087d7:	sbb    eax,0xae7134b3
  4087dc:	out    dx,al
  4087dd:	jnp    0x40876c
  4087df:	cs call 0x9b3:0xdb240265
  4087e7:	xor    al,0x19
  4087e9:	push   esi
  4087ea:	mov    ebp,esp
  4087ec:	adc    eax,0xf6dbe200
  4087f1:	jo     0x408807
  4087f3:	push   esi
  4087f4:	mov    esi,0x3a1586a0
  4087f9:	jns    0x4087bd
  4087fb:	jg     0x408783
  4087fd:	push   0x5c8feb50
  408802:	inc    esp
  408803:	mov    ebx,0xc89f403c
  408808:	jb     0x4087c1
  40880a:	(bad)  
  40880c:	mov    ah,0x26
  40880e:	jmp    0x9a32:0xccc9c6f3
  408815:	xchg   edi,eax
  408816:	jae    0x408858
  408818:	test   BYTE PTR [edx*8+0x3d05ce],cl
  40881f:	jecxz  0x4087d9
  408821:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408822:	inc    edi
  408823:	xchg   ebx,eax
  408824:	mov    ecx,0xbb3582c1
  408829:	xor    al,0x8e
  40882b:	popf   
  40882c:	inc    esp
  40882d:	xchg   edi,eax
  40882e:	xchg   DWORD PTR [eax],ecx
  408830:	test   BYTE PTR [eax+0x55fd100],ch
  408836:	xchg   esp,eax
  408837:	mov    dl,0x29
  408839:	stos   BYTE PTR es:[edi],al
  40883a:	and    ebx,DWORD PTR ds:0x8e8b7103
  408840:	push   es
  408841:	popf   
  408842:	sbb    DWORD PTR [eax+0x62206cfa],esi
  408848:	cmc    
  408849:	mov    edx,0x770fdbff
  40884e:	sub    al,0x97
  408850:	mov    bl,0xf1
  408852:	loop   0x40884c
  408854:	and    eax,0x53f7f0f5
  408859:	push   0x5a78c75e
  40885e:	retf   0xe4b
  408861:	jno    0x4088b5
  408863:	mov    dl,0xba
  408865:	mov    eax,DWORD PTR [eax-0x3d]
  408868:	imul   eax,DWORD PTR [edi-0x5b],0xce29ca11
  40886f:	fwait
  408870:	cmc    
  408871:	retf   
  408872:	sub    al,0x64
  408874:	pop    ebx
  408875:	cs push eax
  408877:	fidiv  WORD PTR [edi+0x13e237ce]
  40887d:	rcr    DWORD PTR [ebp+0x27],1
  408880:	jo     0x408844
  408882:	adc    eax,0xd4090639
  408887:	sub    al,dh
  408889:	(bad)  
  40888a:	mov    dl,0x18
  40888c:	sub    ebp,DWORD PTR [edx-0x40]
  40888f:	jo     0x408872
  408891:	mov    eax,ds:0x15c05317
  408896:	pop    es
  408897:	into   
  408898:	retf   
  408899:	test   DWORD PTR [esi-0x58f095a1],edx
  40889f:	lahf   
  4088a0:	add    BYTE PTR [esi-0xc4ebf1f],dh
  4088a6:	int    0x94
  4088a8:	ins    BYTE PTR es:[edi],dx
  4088a9:	or     al,0x76
  4088ab:	stc    
  4088ac:	lods   al,BYTE PTR ds:[esi]
  4088ad:	(bad)  
  4088ae:	je     0x4088d9
  4088b0:	pop    edi
  4088b1:	lea    edi,[edx+eiz*1+0x4449c3e1]
  4088b8:	rol    eax,cl
  4088ba:	ja     0x40886c
  4088bc:	mov    bh,0x53
  4088be:	fsub   st,st(1)
  4088c0:	repnz retf 
  4088c2:	push   edi
  4088c3:	jns    0x4088ab
  4088c5:	xchg   edx,ebp
  4088c7:	mov    cl,0xfa
  4088c9:	dec    eax
  4088ca:	push   esp
  4088cb:	gs push esi
  4088cd:	add    DWORD PTR [edi+0x36],eax
  4088d0:	mov    al,0xc1
  4088d2:	outs   dx,DWORD PTR ds:[esi]
  4088d3:	into   
  4088d4:	inc    edx
  4088d5:	jnp    0x4088f4
  4088d7:	dec    esi
  4088d8:	rcl    DWORD PTR [ebx-0x79],cl
  4088db:	addr16 pop ebx
  4088dd:	and    esp,edx
  4088df:	ja     0x4088d0
  4088e1:	xchg   esp,eax
  4088e2:	dec    ebp
  4088e3:	fdiv   DWORD PTR [ebp-0x315686e]
  4088e9:	mov    ds:0xd89bdf85,eax
  4088ee:	pop    edi
  4088ef:	jns    0x40892c
  4088f1:	into   
  4088f2:	fld    TBYTE PTR ds:0x6f4d577c
  4088f8:	lods   al,BYTE PTR ds:[esi]
  4088f9:	data16 cmc 
  4088fb:	hlt    
  4088fc:	int3   
  4088fd:	loop   0x40897c
  4088ff:	jne    0x40896d
  408901:	out    0xa0,eax
  408903:	cmc    
  408904:	or     eax,0x4614dc58
  408909:	paddq  mm7,QWORD PTR [edi-0x3517d855]
  408910:	sub    eax,0x16cba1b2
  408915:	sub    BYTE PTR [esi-0x22],ah
  408918:	xlat   BYTE PTR ds:[ebx]
  408919:	(bad)  
  40891a:	in     al,0xbc
  40891c:	or     BYTE PTR [ecx+0x7],ah
  40891f:	test   al,0xdc
  408921:	xlat   BYTE PTR ds:[ebx]
  408922:	add    BYTE PTR [ebp-0xc],al
  408925:	shl    DWORD PTR [edi+eiz*2],0xcc
  408929:	xchg   BYTE PTR [esi],ah
  40892b:	inc    ebx
  40892c:	jns    0x40898a
  40892e:	iret   
  40892f:	mov    bl,0x30
  408931:	sub    al,0xe
  408933:	mov    dh,0x94
  408935:	sbb    al,0x3e
  408937:	add    esi,ebp
  408939:	in     eax,dx
  40893a:	aam    0xaf
  40893c:	sahf   
  40893d:	push   es
  40893e:	stos   DWORD PTR es:[edi],eax
  40893f:	sbb    eax,0x560d8cb8
  408944:	mov    esi,DWORD PTR [ebx+eiz*2-0x67f67698]
  40894b:	sahf   
  40894c:	mov    BYTE PTR [eax+0xf],0x2d
  408950:	add    bl,BYTE PTR [ebx-0x23335ef7]
  408956:	(bad)  
  408957:	fist   DWORD PTR [ecx]
  408959:	ins    BYTE PTR es:[edi],dx
  40895a:	sub    DWORD PTR cs:0xf9070b4,edx
  408961:	test   al,0xaf
  408963:	or     BYTE PTR [esi+0x53],cl
  408966:	xchg   ebp,eax
  408967:	lods   eax,DWORD PTR ds:[esi]
  408968:	ins    BYTE PTR es:[edi],dx
  408969:	cli    
  40896a:	iret   
  40896b:	mov    eax,0x7c8364d4
  408970:	popa   
  408971:	cwde   
  408972:	push   edi
  408973:	daa    
  408974:	mov    eax,ds:0xcca80bff
  408979:	mov    DWORD PTR [ecx+0x3c],esp
  40897c:	or     al,0xb5
  40897e:	ficom  DWORD PTR [ebx-0xe]
  408981:	add    DWORD PTR [esi+0x48],ebp
  408984:	inc    esp
  408985:	jo     0x40891e
  408987:	(bad)  
  408988:	pop    esp
  408989:	mov    eax,0xda6cb952
  40898e:	cs loopne 0x408924
  408991:	iret   
  408992:	cmp    dh,bl
  408994:	or     esi,DWORD PTR [eax+0x2a]
  408997:	and    al,0xc1
  408999:	push   ds
  40899a:	arpl   WORD PTR [edx+0x6eff41a],si
  4089a0:	stos   BYTE PTR es:[edi],al
  4089a1:	mov    bh,0x7c
  4089a3:	jae    0x4089cd
  4089a5:	out    0x79,al
  4089a7:	adc    BYTE PTR [ebp-0x32],dh
  4089aa:	js     0x408a19
  4089ac:	push   ss
  4089ad:	adc    al,0xe3
  4089af:	sub    DWORD PTR [ecx-0x2a],ebp
  4089b2:	sbb    eax,0x90575243
  4089b7:	and    ecx,DWORD PTR [eax-0xd]
  4089ba:	cmp    BYTE PTR [ebp+0xf],bl
  4089bd:	sbb    eax,0xf83438d0
  4089c2:	into   
  4089c3:	in     eax,0x8b
  4089c5:	dec    edx
  4089c6:	into   
  4089c7:	outs   dx,DWORD PTR ds:[esi]
  4089c8:	inc    ebx
  4089c9:	inc    ebx
  4089ca:	mov    esi,0x4fda91d5
  4089cf:	mov    edi,0x124c07be
  4089d4:	jl     0x408a3d
  4089d6:	test   bl,ch
  4089d8:	dec    esi
  4089d9:	jp     0x408a10
  4089db:	ret    
  4089dc:	dec    esi
  4089dd:	stc    
  4089de:	mov    esp,DWORD PTR [esi]
  4089e0:	(bad)  [esi+0x771ad8f7]
  4089e6:	gs stc 
  4089e8:	adc    bl,BYTE PTR [edi+0x21544944]
  4089ee:	ins    BYTE PTR es:[edi],dx
  4089ef:	dec    esi
  4089f0:	mov    bh,0x7f
  4089f2:	sbb    DWORD PTR [esi+0x3a01692b],ebp
  4089f8:	sub    eax,0x6277439e
  4089fd:	neg    BYTE PTR [ecx-0x17]
  408a00:	stos   DWORD PTR es:[edi],eax
  408a01:	clc    
  408a02:	pop    eax
  408a03:	in     al,dx
  408a04:	pop    esi
  408a05:	daa    
  408a06:	lds    edi,FWORD PTR [edi]
  408a08:	push   ebp
  408a09:	or     al,0x20
  408a0b:	add    BYTE PTR [eax+eax*1-0x5a],ah
  408a0f:	js     0x408a62
  408a11:	cmp    DWORD PTR [edx],0xae754b7e
  408a17:	push   esp
  408a18:	mov    esi,0x98663169
  408a1d:	jb     0x408a44
  408a1f:	out    0x4a,al
  408a21:	call   0x9258d078
  408a26:	fs dec ebx
  408a28:	and    bh,BYTE PTR [edi-0x1c9af2ac]
  408a2e:	mov    eax,0x24fb89c7
  408a33:	fcomp  DWORD PTR [eax-0x2f]
  408a36:	mov    ah,0xf8
  408a38:	cmp    BYTE PTR [esi],0x1e
  408a3b:	es push cs
  408a3d:	add    edi,DWORD PTR [esi+0x550f861]
  408a43:	ins    BYTE PTR es:[edi],dx
  408a44:	ins    BYTE PTR es:[edi],dx
  408a45:	fidiv  DWORD PTR [eax+0x33]
  408a48:	int    0xb2
  408a4a:	jl     0x408a4d
  408a4c:	lods   al,BYTE PTR ds:[esi]
  408a4d:	in     al,dx
  408a4e:	retf   0x196f
  408a51:	push   esi
  408a52:	bound  esi,QWORD PTR [ebx]
  408a54:	pop    ecx
  408a55:	mov    ebp,0x238114cc
  408a5a:	fiadd  DWORD PTR [edx-0x73d04c75]
  408a60:	cmp    edi,ebp
  408a62:	mov    BYTE PTR [ecx],al
  408a64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a65:	and    ch,BYTE PTR [ebp-0x68c8e27a]
  408a6b:	sub    eax,0x2dc0649
  408a70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a71:	leave  
  408a72:	or     BYTE PTR [ebp+0x78],dl
  408a75:	dec    edx
  408a76:	imul   ecx,DWORD PTR [eax],0xa0f9d3fd
  408a7c:	outs   dx,BYTE PTR ds:[esi]
  408a7d:	sub    BYTE PTR ds:0x4d9bbcb9,ch
  408a83:	loop   0x408aa1
  408a85:	jb     0x408a7e
  408a87:	mov    ebp,0x8a02921a
  408a8c:	push   esi
  408a8d:	outs   dx,DWORD PTR ds:[esi]
  408a8e:	(bad)  
  408a90:	outs   dx,BYTE PTR ds:[esi]
  408a91:	or     BYTE PTR [edx],0xa3
  408a94:	in     eax,0x5d
  408a96:	jg     0x408a4f
  408a98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a99:	push   edi
  408a9a:	and    bl,cl
  408a9c:	and    ch,BYTE PTR [ebx]
  408a9e:	mov    cl,0x7d
  408aa0:	cmp    dl,BYTE PTR [edx-0x1a0cc6fe]
  408aa6:	fsub   st,st(5)
  408aa8:	mov    edx,0x2449c937
  408aad:	inc    edi
  408aae:	shr    BYTE PTR [ecx],cl
  408ab0:	pusha  
  408ab1:	or     al,0x71
  408ab3:	jecxz  0x408a6e
  408ab5:	push   ds
  408ab6:	pusha  
  408ab7:	(bad)  
  408ab8:	pop    ss
  408ab9:	or     eax,0x5e7ccc57
  408abe:	daa    
  408abf:	aas    
  408ac0:	sub    ecx,ecx
  408ac2:	pop    esp
  408ac3:	sub    al,0x2c
  408ac5:	test   DWORD PTR [esi+0x58],edx
  408ac8:	jmp    0x21bb:0x4d450081
  408acf:	or     eax,0x376b019d
  408ad4:	hlt    
  408ad5:	cmc    
  408ad6:	adc    cl,BYTE PTR [edi-0x60daecbc]
  408adc:	ds jmp 0xef1b:0x8177b1ff
  408ae4:	sub    edi,DWORD PTR [edi-0x53]
  408ae7:	xchg   esp,eax
  408ae8:	lods   al,BYTE PTR ds:[esi]
  408ae9:	or     al,bh
  408aeb:	pop    ebp
  408aec:	xor    al,0x6
  408aee:	push   esp
  408aef:	pop    ds
  408af0:	pop    ss
  408af1:	fiadd  DWORD PTR [edi+0x3d9d5df8]
  408af7:	jp     0x408aaf
  408af9:	mov    ds:0x6d343b3a,eax
  408afe:	or     ecx,esp
  408b00:	fxch   st(3)
  408b02:	(bad)  
  408b03:	pop    esi
  408b04:	retf   0x963
  408b07:	mov    ds:0xc234ec44,eax
  408b0c:	clc    
  408b0d:	les    sp,DWORD PTR [ecx+0x5b09bb8e]
  408b14:	pop    ss
  408b15:	sbb    DWORD PTR [eax-0x4e],ebp
  408b18:	dec    edx
  408b19:	ret    
  408b1a:	fwait
  408b1b:	in     eax,dx
  408b1c:	cmp    BYTE PTR [eax+edx*8-0x2a216ef5],al
  408b23:	push   cs
  408b24:	pop    ss
  408b25:	cs dec esp
  408b27:	or     ebx,edx
  408b29:	xchg   edi,eax
  408b2a:	int3   
  408b2b:	sub    dl,ah
  408b2d:	inc    ebx
  408b2e:	loop   0x408af9
  408b30:	iret   
  408b31:	mov    cl,0x87
  408b33:	cwde   
  408b34:	dec    ecx
  408b35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b36:	fisubr DWORD PTR [ebx+eiz*2-0x4a]
  408b3a:	(bad)  
  408b3b:	jmp    0x87d3e7b6
  408b40:	inc    DWORD PTR fs:[eax+0x3]
  408b44:	es cwde 
  408b46:	xor    al,BYTE PTR [ecx]
  408b48:	sub    DWORD PTR [eax+esi*1+0x19],ecx
  408b4c:	shr    BYTE PTR [esi],1
  408b4e:	ret    0x9768
  408b51:	imul   ecx,DWORD PTR [esi],0x1b
  408b54:	out    0x66,eax
  408b56:	(bad)  
  408b59:	or     ecx,esp
  408b5b:	jge    0x408b41
  408b5d:	sar    dh,cl
  408b5f:	pop    edi
  408b60:	into   
  408b61:	inc    esi
  408b62:	mov    dl,0x77
  408b64:	call   DWORD PTR [edi+ebp*4-0x1c6bf977]
  408b6b:	sbb    BYTE PTR [ebx],bl
  408b6d:	push   esi
  408b6e:	jg     0x408af4
  408b70:	xor    esi,0xffffffa0
  408b73:	repz xor bl,bl
  408b76:	jnp    0x408b76
  408b78:	mov    cl,0x3e
  408b7a:	inc    edi
  408b7b:	aam    0x9b
  408b7d:	cmp    BYTE PTR [eax+0x6a],bh
  408b80:	je     0x408b3d
  408b82:	stos   DWORD PTR es:[edi],eax
  408b83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b85:	aam    0xaf
  408b87:	and    al,0x3f
  408b89:	mov    ebp,esp
  408b8b:	imul   edi,DWORD PTR [ebx+edx*4+0x41042156],0xffffffd7
  408b93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b94:	das    
  408b95:	call   FWORD PTR [eax]
  408b97:	ins    DWORD PTR es:[edi],dx
  408b98:	xchg   ecx,eax
  408b99:	mov    ds:0x6940b5e5,al
  408b9f:	dec    ebp
  408ba0:	jmp    0x71de:0x67f59a66
  408ba7:	mov    edi,0x4cefb119
  408bac:	xchg   edx,eax
  408bad:	cld    
  408bae:	mov    DWORD PTR [ebx+0x3],edx
  408bb1:	mov    ah,0x85
  408bb3:	xchg   esi,eax
  408bb4:	xchg   esi,eax
  408bb5:	dec    BYTE PTR [edi]
  408bb7:	xor    al,0x32
  408bb9:	call   DWORD PTR ds:0x5521400f
  408bbf:	jns    0x408b73
  408bc1:	inc    edi
  408bc2:	and    eax,0x4ef15174
  408bc7:	sti    
  408bc8:	arpl   WORD PTR [eax+0x7c],sp
  408bcb:	xchg   edi,eax
  408bcc:	daa    
  408bcd:	repz and DWORD PTR [eax-0x25],0x66da6dff
  408bd5:	jae    0x408b98
  408bd7:	inc    esp
  408bd8:	dec    eax
  408bd9:	fild   WORD PTR [edx-0x79]
  408bdc:	(bad)  
  408bdd:	xchg   edi,eax
  408bde:	sbb    BYTE PTR [edx],ch
  408be0:	dec    ebx
  408be1:	dec    esp
  408be2:	xchg   ebx,eax
  408be3:	lahf   
  408be4:	mov    es,WORD PTR [edi-0x2cd32b43]
  408bea:	dec    ecx
  408beb:	aaa    
  408bec:	popf   
  408bed:	repz std 
  408bef:	mov    esi,0x9d65ca14
  408bf4:	scas   eax,DWORD PTR es:[edi]
  408bf5:	jge    0x408c1a
  408bf7:	sbb    BYTE PTR [ecx-0x3ec8df4c],ah
  408bfd:	and    al,0xb4
  408bff:	out    dx,al
  408c00:	or     DWORD PTR [eax-0x693b52d5],0xef754ce2
  408c0a:	mov    al,0xe8
  408c0c:	or     al,0x6c
  408c0e:	mov    al,ds:0x50678116
  408c13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c14:	push   ebx
  408c15:	shr    dh,cl
  408c17:	mov    edx,0x59455c4
  408c1c:	in     eax,dx
  408c1d:	mov    DWORD PTR [eax],edi
  408c1f:	out    0x5e,eax
  408c21:	call   0x7c2c:0x3a66e82e
  408c28:	jp     0x408c66
  408c2a:	sub    eax,0xe58e306b
  408c2f:	shl    DWORD PTR ds:0xae0061d7,0x96
  408c36:	xlat   BYTE PTR ds:[ebx]
  408c37:	push   0x17
  408c39:	push   es
  408c3a:	loopne 0x408c27
  408c3c:	fcmovbe st,st(3)
  408c3e:	leave  
  408c3f:	lods   eax,DWORD PTR ds:[esi]
  408c40:	ss sahf 
  408c42:	jb     0x408c04
  408c44:	in     eax,dx
  408c45:	std    
  408c46:	pop    ds
  408c47:	fisttp DWORD PTR ds:0xdcf48336
  408c4d:	mov    ah,0x18
  408c4f:	add    ecx,DWORD PTR [edx+edx*8]
  408c52:	mov    eax,0xe8f970c1
  408c57:	mov    bh,0x87
  408c59:	enter  0x2463,0xc9
  408c5d:	pop    ds
  408c5e:	sbb    eax,0x8d73b02c
  408c63:	test   BYTE PTR [ebp+0x14f0404d],dh
  408c69:	add    esp,DWORD PTR [edx-0x4f48006]
  408c6f:	and    al,0xa9
  408c71:	mov    esi,0xb4d3ef5d
  408c76:	lods   al,BYTE PTR ds:[esi]
  408c77:	mov    es,WORD PTR [edx+0x4d]
  408c7a:	fist   WORD PTR ds:0xb00f270a
  408c80:	fbstp  TBYTE PTR [edi]
  408c82:	or     ebp,DWORD PTR [ecx]
  408c84:	cmp    bl,BYTE PTR [edx-0x440ed8d8]
  408c8a:	cmp    WORD PTR [esi+0x48f1fc7],sp
  408c91:	sub    BYTE PTR [ebx+ebp*2-0x21cd3377],ch
  408c98:	call   0x45b3:0x3f0678f9
  408c9f:	imul   ebx,DWORD PTR [esi],0x7767c163
  408ca5:	(bad)  
  408ca7:	mov    dh,BYTE PTR [ebx+0x27]
  408caa:	sbb    al,0x5f
  408cac:	mov    bl,0xd2
  408cae:	loopne 0x408cc8
  408cb0:	ins    DWORD PTR es:[edi],dx
  408cb1:	pop    ebp
  408cb2:	inc    ebp
  408cb3:	adc    al,0x74
  408cb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cb6:	xor    bl,BYTE PTR ds:0x5023c593
  408cbc:	push   es
  408cbd:	leave  
  408cbe:	lahf   
  408cbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cc0:	sub    esp,DWORD PTR [ecx+eax*2-0x234aba7d]
  408cc7:	mov    esp,DWORD PTR [ebx-0xd514d08]
  408ccd:	stos   BYTE PTR es:[edi],al
  408cce:	mov    eax,0x3009665d
  408cd3:	or     BYTE PTR [edx-0x4575d38e],0x73
  408cda:	or     edi,DWORD PTR [ecx+ebp*4-0x637873ef]
  408ce1:	add    al,0xf7
  408ce3:	xor    eax,0x3883fa1
  408ce8:	mov    esi,?
  408cea:	in     eax,0x35
  408cec:	mov    BYTE PTR [edx],bl
  408cee:	cmp    esp,DWORD PTR [edx+0x1e5bc667]
  408cf4:	and    DWORD PTR [ecx+0x10],ebx
  408cf7:	test   DWORD PTR [edi-0x3],ecx
  408cfa:	xchg   edi,eax
  408cfb:	jo     0x408d7a
  408cfd:	jp     0x408d4f
  408cff:	jno    0x408c83
  408d01:	xor    DWORD PTR [ebx+ebx*4],0x7d
  408d05:	sbb    dl,dl
  408d07:	mov    esp,0xcf5311ef
  408d0c:	dec    ebx
  408d0d:	mov    ah,0x40
  408d0f:	stos   BYTE PTR es:[edi],al
  408d10:	dec    ebp
  408d11:	pop    esi
  408d12:	outs   dx,BYTE PTR ds:[esi]
  408d13:	jno    0x408ca1
  408d15:	jb     0x408ce9
  408d17:	imul   esp,ebp,0x48
  408d1a:	lock (bad) 
  408d1c:	or     ah,BYTE PTR [ebp-0x190b15cb]
  408d22:	(bad)  
  408d23:	sub    DWORD PTR [esi+0x1f],0x5f3b8908
  408d2a:	(bad)  
  408d2b:	ins    DWORD PTR es:[edi],dx
  408d2c:	fist   DWORD PTR [ebp-0x69b251c6]
  408d32:	mov    ds:0x4f68b251,eax
  408d37:	pushf  
  408d38:	shl    ch,1
  408d3a:	stos   DWORD PTR es:[edi],eax
  408d3b:	cwde   
  408d3c:	jmp    0x6c8f:0x44167b16
  408d43:	gs pusha 
  408d45:	adc    ebx,esp
  408d47:	inc    eax
  408d48:	or     bh,BYTE PTR [eax+edx*4-0x64]
  408d4c:	and    esp,DWORD PTR ds:0x1b2877b7
  408d52:	int3   
  408d53:	enter  0x3da6,0xa7
  408d57:	gs and eax,0xd7c478df
  408d5d:	retf   0xc23b
  408d60:	scas   eax,DWORD PTR es:[edi]
  408d61:	sbb    al,al
  408d63:	or     ch,BYTE PTR [esp+eiz*8]
  408d66:	aaa    
  408d67:	xchg   esi,eax
  408d68:	push   edi
  408d69:	adc    dl,BYTE PTR [ecx-0x5cbdff2c]
  408d6f:	test   ch,0x49
  408d72:	loopne 0x408dc2
  408d74:	sar    ebx,1
  408d76:	(bad)  
  408d77:	and    al,0x6
  408d79:	rcr    BYTE PTR [esi-0x3f],1
  408d7c:	in     eax,0xa5
  408d7e:	(bad)  
  408d7f:	jmp    0x408d98
  408d81:	out    0x4f,al
  408d83:	ss scas al,BYTE PTR es:[edi]
  408d85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d86:	je     0x408db0
  408d88:	mov    cl,0xd7
  408d8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d8c:	mov    ?,eax
  408d8e:	lods   al,BYTE PTR ds:[esi]
  408d8f:	cmp    edx,0xffffff94
  408d92:	outs   dx,DWORD PTR ds:[esi]
  408d93:	es int 0x4b
  408d96:	ins    BYTE PTR es:[edi],dx
  408d97:	push   ss
  408d98:	jae    0x408d53
  408d9a:	jl     0x408de9
  408d9c:	sub    ebp,DWORD PTR [edi]
  408d9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d9f:	sbb    esi,edi
  408da1:	adc    cl,BYTE PTR [ebx-0x2e4de54e]
  408da7:	xor    BYTE PTR [edx-0x5c],bh
  408daa:	iret   
  408dab:	pop    ss
  408dac:	dec    esp
  408dad:	test   DWORD PTR [edi+0x7ecf45eb],0x4039af92
  408db7:	cmp    DWORD PTR [edi],eax
  408db9:	add    bh,al
  408dbb:	push   edi
  408dbc:	(bad)  
  408dbd:	adc    esp,DWORD PTR [edx-0x8786d]
  408dc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408dc4:	outs   dx,BYTE PTR ds:[esi]
  408dc5:	(bad)  
  408dc6:	outs   dx,DWORD PTR ds:[esi]
  408dc7:	jne    0x408e11
  408dc9:	cmp    esp,DWORD PTR [ebx-0x43838261]
  408dcf:	rcl    DWORD PTR [esi],1
  408dd1:	ror    DWORD PTR [edx+0x3d],1
  408dd4:	pushf  
  408dd5:	pop    esi
  408dd6:	pop    ds
  408dd7:	inc    BYTE PTR [ebp-0x5c]
  408dda:	dec    edi
  408ddb:	mov    DWORD PTR [ebp+0x5b9a8bfd],edi
  408de1:	sti    
  408de2:	pop    ds
  408de3:	lahf   
  408de4:	sbb    DWORD PTR [eax+0xd],0x6d4e374d
  408deb:	mov    dl,0x80
  408ded:	and    BYTE PTR [eax-0x5],bl
  408df0:	xor    edx,DWORD PTR [ebx]
  408df2:	sahf   
  408df3:	adc    al,0x15
  408df5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408df6:	fisubr WORD PTR [eax+0x2e]
  408df9:	icebp  
  408dfa:	loop   0x408e63
  408dfc:	pop    ss
  408dfd:	shl    BYTE PTR [edx+eiz*8+0x13],0x63
  408e02:	push   edx
  408e03:	or     al,0xe2
  408e05:	xor    ebp,DWORD PTR [edx]
  408e07:	fs fsubrp st(3),st
  408e0a:	inc    ebx
  408e0b:	dec    edx
  408e0c:	mov    WORD PTR [esi],ss
  408e0e:	je     0x408e5b
  408e10:	adc    BYTE PTR [ebp+0x8],0x47
  408e14:	lods   al,BYTE PTR ds:[esi]
  408e15:	jp     0x408dd6
  408e17:	ja     0x408dd8
  408e19:	push   0x78429eef
  408e1e:	cmp    esp,esi
  408e20:	(bad)  
  408e21:	pop    ss
  408e22:	in     al,0xef
  408e24:	push   ds
  408e25:	inc    esp
  408e26:	push   0x3cf3fea9
  408e2b:	sar    BYTE PTR [edx],cl
  408e2d:	pop    es
  408e2e:	icebp  
  408e2f:	sub    al,0xf3
  408e31:	retf   0xdfca
  408e34:	lock push es
  408e36:	jo     0x408dbd
  408e38:	retf   
  408e39:	aad    0xb3
  408e3b:	mov    eax,0xc49c01ec
  408e40:	icebp  
  408e41:	mov    WORD PTR [ebx-0x606c4261],ss
  408e47:	out    0xa,eax
  408e49:	jae    0x408e22
  408e4b:	test   al,0x9c
  408e4e:	mov    es,WORD PTR [eax+0x4c]
  408e51:	xchg   ebp,eax
  408e52:	inc    edi
  408e53:	in     eax,0x44
  408e55:	loopne 0x408e46
  408e57:	cmp    eax,0x4151eb89
  408e5c:	xchg   edi,eax
  408e5d:	clc    
  408e5e:	push   0xbe830273
  408e63:	sbb    eax,0x34371d17
  408e68:	jl     0x408ee7
  408e6a:	and    dh,0xa4
  408e6d:	and    esp,DWORD PTR [eax+0x16c69382]
  408e73:	cdq    
  408e74:	jb     0x408e01
  408e76:	cmp    DWORD PTR [ecx+ecx*4],eax
  408e79:	xchg   esi,eax
  408e7a:	sub    eax,0x2e9e0948
  408e7f:	push   esp
  408e80:	xchg   ebp,eax
  408e81:	fdiv   DWORD PTR [ecx+0x2c]
  408e84:	test   ecx,edi
  408e86:	push   esp
  408e87:	mov    bl,0x78
  408e89:	sbb    cl,cl
  408e8b:	add    ecx,esi
  408e8d:	sub    BYTE PTR ds:0xc7a1ff8d,ch
  408e93:	(bad)  
  408e94:	call   0xb82a:0x98b9d954
  408e9b:	lods   al,BYTE PTR ds:[esi]
  408e9c:	jge    0x408ed6
  408e9e:	vmread DWORD PTR [ebx+0x4c7823f4],ebx
  408ea5:	loopne 0x408f0e
  408ea7:	push   edi
  408ea8:	mov    ah,0xe
  408eaa:	call   DWORD PTR [esi-0x4a]
  408ead:	mov    ch,0x63
  408eaf:	data16 add BYTE PTR [eax+0x39],cl
  408eb3:	push   es
  408eb4:	arpl   WORD PTR [ebx+0x70],ax
  408eb7:	(bad)
  408ebb:	push   ds
  408ebc:	mov    ah,0x77
  408ebe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ebf:	test   eax,0x53d9b534
  408ec4:	dec    eax
  408ec5:	add    cl,0x84
  408ec8:	mov    al,BYTE PTR [edi-0x2d]
  408ecb:	retf   0xe15a
  408ece:	jmp    0x18b1:0x93a80495
  408ed5:	call   0xc919ee43
  408eda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408edb:	mov    dl,0xab
  408edd:	ins    DWORD PTR es:[edi],dx
  408ede:	dec    esp
  408edf:	xchg   ebx,eax
  408ee0:	add    eax,0x40b99003
  408ee5:	stos   BYTE PTR es:[edi],al
  408ee6:	out    dx,al
  408ee7:	loopne 0x408e83
  408ee9:	gs das 
  408eeb:	push   cs
  408eec:	test   BYTE PTR [edx-0x2e2ce9b9],bl
  408ef2:	int3   
  408ef3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ef4:	cli    
  408ef5:	inc    ecx
  408ef6:	in     eax,dx
  408ef7:	scas   al,BYTE PTR es:[edi]
  408ef8:	jmp    0x408ecb
  408efa:	inc    ecx
  408efb:	mov    ds:0xcd7e0f2,eax
  408f00:	jbe    0x408f19
  408f02:	stos   BYTE PTR es:[edi],al
  408f03:	ins    BYTE PTR es:[edi],dx
  408f04:	push   ss
  408f05:	push   ss
  408f06:	xabort 0x93
  408f09:	and    DWORD PTR [eax+0x52],edi
  408f0c:	add    al,BYTE PTR [ebp-0x66bb3d69]
  408f12:	neg    DWORD PTR [ebp+edx*2-0x7c]
  408f16:	sbb    DWORD PTR es:[ebx+0x50],esp
  408f1a:	jne    0x408eda
  408f1c:	js     0x408f3d
  408f1e:	in     al,dx
  408f1f:	(bad)  
  408f20:	sub    BYTE PTR [ebx-0x13fd2a4f],dl
  408f26:	fbstp  TBYTE PTR [ebp-0x7eba56f9]
  408f2c:	dec    esp
  408f2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f2e:	jns    0x1780bb8e
  408f34:	mov    ebx,0x8b144e06
  408f39:	(bad)  [ebp-0x26]
  408f3c:	ins    BYTE PTR es:[edi],dx
  408f3d:	test   al,0xfe
  408f3f:	js     0x408f52
  408f41:	and    eax,0x6e5d58d2
  408f46:	fisttp QWORD PTR [edx-0x48]
  408f49:	test   DWORD PTR [ecx+0x3d],edx
  408f4c:	xor    ah,BYTE PTR [edi+0x2f]
  408f4f:	push   esi
  408f50:	add    eax,0x1b2d5e40
  408f55:	aam    0xc7
  408f57:	aam    0x3c
  408f59:	jmp    0x1c3fe70f
  408f5e:	xor    BYTE PTR [eax],0x45
  408f61:	jae    0x408fbf
  408f63:	sub    al,0xd8
  408f65:	jmp    0xde6fa43f
  408f6a:	call   0x93ea3a4
  408f6f:	in     eax,dx
  408f70:	aad    0x26
  408f72:	jnp    0x408fef
  408f74:	ins    BYTE PTR es:[edi],dx
  408f75:	stos   BYTE PTR es:[edi],al
  408f76:	ret    
  408f77:	add    BYTE PTR [ebx],cl
  408f79:	adc    eax,0x241fabd0
  408f7e:	jb     0x408f2b
  408f80:	pop    edi
  408f81:	mov    edi,0xdcddbc54
  408f86:	jne    0x408f9f
  408f88:	pop    edi
  408f89:	mov    edx,DWORD PTR [ebp+0x2b56116d]
  408f8f:	cmp    cl,BYTE PTR [ebx-0x7ef9347f]
  408f95:	cmp    al,0x5a
  408f97:	pop    ds
  408f98:	jl     0x408fa3
  408f9a:	or     DWORD PTR [ecx-0x22],ecx
  408f9d:	scas   al,BYTE PTR es:[edi]
  408f9e:	mov    bh,0x1b
  408fa0:	dec    edx
  408fa1:	push   ecx
  408fa2:	and    BYTE PTR [ecx+0x3],0x26
  408fa6:	iret   
  408fa7:	into   
  408fa8:	das    
  408fa9:	cld    
  408faa:	mov    dl,ah
  408fac:	add    BYTE PTR [edx-0x4],dh
  408faf:	dec    edi
  408fb0:	adc    eax,0x2e3110d9
  408fb5:	int3   
  408fb6:	mov    bh,0xf3
  408fb8:	into   
  408fb9:	icebp  
  408fba:	xchg   edx,eax
  408fbb:	pushf  
  408fbc:	cmp    BYTE PTR [edx+0x466c7eb5],bh
  408fc2:	into   
  408fc3:	jmp    0x81df3b86
  408fc8:	add    BYTE PTR [ecx],dh
  408fca:	dec    esi
  408fcb:	xchg   esp,eax
  408fcc:	shl    dl,cl
  408fce:	in     eax,0x6a
  408fd0:	xor    al,0x9d
  408fd2:	add    DWORD PTR [edx+0x2ac2244d],esi
  408fd8:	or     al,0x3c
  408fda:	cmp    esi,DWORD PTR [ebx+0x18]
  408fdd:	mov    esp,0x2079088a
  408fe2:	mov    bh,0x94
  408fe4:	or     BYTE PTR ds:0xce3501e9,0xf0
  408feb:	sbb    cl,BYTE PTR [edi-0x3e]
  408fee:	in     al,0x79
  408ff0:	bound  edi,QWORD PTR [edx]
  408ff2:	xchg   BYTE PTR [ebp-0x6cef295f],bh
  408ff8:	sbb    eax,0x51efe04c
  408ffd:	shr    BYTE PTR [eax-0x39],cl
  409000:	mov    BYTE PTR [ecx+0xd],dl
  409003:	xchg   bh,dh
  409005:	jl     0x408f88
  409007:	jno    0x409017
  409009:	pop    ecx
  40900a:	cmp    BYTE PTR [ecx+0x42d288cf],al
  409010:	mov    ch,ah
  409012:	lea    eax,[edi-0x40]
  409015:	imul   ebx,DWORD PTR [eax+0x21db33da],0x17
  40901c:	shl    cl,0xa4
  40901f:	lock psubsb mm7,QWORD PTR [eax-0x65]
  409024:	fadd   QWORD PTR [edi-0x4c]
  409027:	mul    BYTE PTR [edi+0x43]
  40902a:	fidivr WORD PTR [ebx]
  40902c:	iret   
  40902d:	cmp    ch,cl
  40902f:	sbb    BYTE PTR [esi+ebp*8],dh
  409032:	xchg   ecx,eax
  409033:	fmul   st,st(6)
  409035:	bound  ebp,QWORD PTR [eax-0x4a]
  409038:	rol    edx,cl
  40903a:	in     al,0x72
  40903c:	(bad)  
  40903d:	or     eax,0x24fbf60a
  409042:	icebp  
  409043:	iret   
  409044:	scas   al,BYTE PTR es:[edi]
  409045:	add    eax,DWORD PTR [eax-0x765247f3]
  40904b:	pop    ecx
  40904c:	fmulp  st(7),st
  40904e:	fisubr DWORD PTR [edi+eiz*1]
  409051:	fadd   st,st(2)
  409053:	adc    al,0x2a
  409055:	inc    ebp
  409056:	pop    ebx
  409057:	jge    0x4090d5
  409059:	sbb    al,0xdc
  40905b:	mov    ch,0xfc
  40905e:	mov    WORD PTR [ebx],cs
  409060:	mov    bl,bh
  409062:	xchg   edx,eax
  409063:	pop    ebx
  409064:	add    bl,BYTE PTR [edi]
  409066:	dec    edx
  409067:	add    BYTE PTR [edi],dh
  409069:	jb     0x4090a7
  40906b:	dec    esp
  40906c:	stos   DWORD PTR es:[edi],eax
  40906d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40906e:	pop    esi
  40906f:	cmp    al,0x27
  409071:	xchg   edi,eax
  409072:	mov    WORD PTR [eax],cs
  409074:	(bad)
  409078:	sub    bh,bl
  40907a:	aad    0x20
  40907c:	mov    ?,WORD PTR [esi]
  40907e:	adc    ebx,esi
  409080:	sub    al,0xac
  409082:	sbb    al,0xf6
  409084:	add    eax,0xdca0d2ca
  409089:	test   dh,al
  40908b:	cmp    esp,DWORD PTR [ebp-0x7e]
  40908e:	sahf   
  40908f:	mov    esi,0xb3bb3bae
  409094:	inc    ebx
  409095:	jae    0x40904d
  409097:	push   edx
  409098:	fidiv  WORD PTR [eax+0x3f5234e0]
  40909e:	int3   
  40909f:	push   ebx
  4090a0:	add    edx,DWORD PTR [ecx+0x57455d01]
  4090a6:	(bad)  [edx+0x107f7dad]
  4090ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090ad:	mov    ebp,0x9f7c6222
  4090b2:	adc    DWORD PTR [ebx+0x79],ebx
  4090b5:	and    eax,DWORD PTR [edx]
  4090b7:	xchg   BYTE PTR [esi-0x37489d4a],ch
  4090bd:	adc    al,0x6a
  4090bf:	xor    DWORD PTR [ecx],esp
  4090c1:	addr16 sahf 
  4090c3:	rcr    BYTE PTR [edi+0x501ab884],cl
  4090c9:	xchg   edi,eax
  4090ca:	push   esp
  4090cb:	or     al,0xab
  4090cd:	pop    eax
  4090ce:	retf   
  4090cf:	inc    ebx
  4090d0:	sub    BYTE PTR [esi],ch
  4090d2:	lock enter 0x92eb,0x57
  4090d7:	mov    edi,0xff2ce660
  4090dc:	xchg   edi,eax
  4090dd:	pop    ebx
  4090de:	sub    ah,BYTE PTR [ebx+0x4feea14e]
  4090e4:	mov    edx,0x6153a8e1
  4090e9:	in     eax,dx
  4090ea:	loope  0x4090df
  4090ec:	push   ecx
  4090ed:	mov    ecx,0xbd55be91
  4090f2:	cmp    DWORD PTR [edi+0x4aec5835],eax
  4090f8:	loope  0x409107
  4090fa:	aaa    
  4090fb:	mov    bh,0xd6
  4090fd:	or     al,0xae
  4090ff:	adc    eax,0xf584c710
  409104:	pusha  
  409105:	xor    BYTE PTR [ecx-0x7301208c],dl
  40910b:	add    eax,0x52bd3150
  409110:	ins    BYTE PTR es:[edi],dx
  409111:	add    ecx,ebx
  409113:	push   esp
  409114:	jecxz  0x4090a5
  409116:	add    eax,0xa8b86b5a
  40911b:	enter  0x1faa,0x3d
  40911f:	lahf   
  409120:	fsubr  QWORD PTR [eax+esi*4-0x7b8f4156]
  409127:	xor    al,0x7a
  409129:	fidiv  WORD PTR [ecx+0x20]
  40912c:	push   cs
  40912d:	in     al,0x7f
  40912f:	sub    BYTE PTR [edx-0x69b83a73],0x8b
  409136:	mov    cs,WORD PTR [ecx]
  409138:	ins    DWORD PTR es:[edi],dx
  409139:	cmp    ch,BYTE PTR [edx+0x2c]
  40913c:	mov    esi,0x49b68da5
  409141:	jno    0x4091b4
  409143:	repz int3 
  409145:	dec    esp
  409146:	xor    ecx,esp
  409148:	std    
  409149:	sub    esi,DWORD PTR [ecx-0x55]
  40914c:	ss mov cl,0x4d
  40914f:	pusha  
  409150:	dec    ebx
  409151:	jns    0x4090e0
  409153:	mov    bl,0x62
  409155:	adc    ebp,DWORD PTR [eax]
  409157:	(bad)  
  409158:	outs   dx,DWORD PTR ds:[esi]
  409159:	and    eax,0xdf846bf3
  40915e:	in     eax,dx
  40915f:	xchg   edi,eax
  409160:	stos   DWORD PTR es:[edi],eax
  409161:	loopne 0x409113
  409163:	lds    esi,FWORD PTR ds:[esi+0x1c]
  409167:	sbb    ecx,edx
  409169:	xchg   ecx,eax
  40916a:	add    eax,ebx
  40916c:	sbb    al,BYTE PTR [esi]
  40916e:	push   esp
  40916f:	dec    ebp
  409170:	imul   eax,DWORD PTR ds:[eax+0x5d93d7a2],0x94c82ecc
  40917b:	fisttp DWORD PTR [edi]
  40917d:	push   0x4f
  40917f:	ins    DWORD PTR es:[edi],dx
  409180:	lods   al,BYTE PTR ds:[esi]
  409181:	test   eax,0xb9a9f7f3
  409186:	retf   0x396b
  409189:	xlat   BYTE PTR ds:[ebx]
  40918a:	leave  
  40918b:	xchg   ebp,eax
  40918c:	inc    BYTE PTR [eax-0x628038c2]
  409192:	stos   DWORD PTR es:[edi],eax
  409193:	cs sbb eax,0xac283616
  409199:	mov    ebp,0x3aac6bc6
  40919e:	sahf   
  40919f:	data16 jae 0x40913c
  4091a2:	je     0x409184
  4091a4:	mov    eax,0x770920b4
  4091a9:	mov    al,ds:0xef402519
  4091ae:	cs mov ebp,cs
  4091b1:	outs   dx,DWORD PTR ds:[esi]
  4091b2:	push   cs
  4091b3:	fadd   DWORD PTR [edi-0xf9b1e59]
  4091b9:	lds    ebp,FWORD PTR [edx+esi*4+0x1b]
  4091bd:	arpl   WORD PTR [ebx+0xd],ax
  4091c0:	mov    ah,0xb9
  4091c2:	jge    0x409222
  4091c4:	scas   al,BYTE PTR es:[edi]
  4091c5:	and    eax,0x27d619f1
  4091ca:	xor    dh,ah
  4091cc:	jge    0x409228
  4091ce:	pop    ecx
  4091cf:	add    ch,ch
  4091d1:	mov    DWORD PTR [edi+0x12b1d46b],0xbf57baa7
  4091db:	mov    esi,DWORD PTR [edx-0x70]
  4091de:	xor    al,0xd2
  4091e0:	mul    DWORD PTR [esp+edi*4]
  4091e3:	sub    eax,0x27153665
  4091e8:	stc    
  4091e9:	aam    0x6c
  4091eb:	jne    0x4091be
  4091ed:	arpl   bx,dx
  4091ef:	or     BYTE PTR [ecx-0x1977aa41],ah
  4091f5:	cmp    cl,BYTE PTR [edi-0x1b2c5354]
  4091fb:	mov    bl,0xb7
  4091fd:	bound  ebp,QWORD PTR [edx+0x6a978de7]
  409203:	inc    ecx
  409204:	aad    0x24
  409206:	pop    ds
  409207:	aas    
  409208:	data16 jno 0x409271
  40920b:	push   ebx
  40920c:	les    edi,FWORD PTR [eax+0x1f931480]
  409212:	jmp    0x12c17744
  409217:	mov    eax,ds:0x3218fc37
  40921c:	and    DWORD PTR [ecx],edi
  40921e:	inc    ebx
  40921f:	inc    esp
  409220:	fwait
  409221:	xor    BYTE PTR [ecx-0x7aeccf35],0x0
  409228:	xlat   BYTE PTR ds:[ebx]
  409229:	adc    bl,cl
  40922b:	xchg   ebp,eax
  40922c:	mov    ebp,es
  40922e:	adc    eax,DWORD PTR ds:0xd5a6ccbc
  409234:	xchg   ebp,eax
  409235:	and    bl,dl
  409237:	mov    bl,0xa7
  409239:	cmp    ch,BYTE PTR [esi]
  40923b:	nop
  40923c:	push   eax
  40923d:	jle    0x4091df
  40923f:	nop
  409240:	outs   dx,DWORD PTR ds:[esi]
  409241:	loop   0x4091e2
  409243:	ret    0xc070
  409246:	jno    0x409272
  409248:	fs popa 
  40924a:	and    ebx,DWORD PTR [esi]
  40924c:	pushf  
  40924d:	sub    eax,0x65331ca9
  409252:	sar    DWORD PTR ds:0x4894ed2e,cl
  409258:	add    DWORD PTR [esi+esi*2+0x2e],0xfffffffa
  40925d:	psubusb mm3,QWORD PTR [esi-0x7d]
  409261:	cmp    al,0xb7
  409263:	lods   eax,DWORD PTR ds:[esi]
  409264:	ret    0x3cc9
  409267:	ds sti 
  409269:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40926a:	pop    ecx
  40926b:	jo     0x4091f1
  40926d:	cli    
  40926e:	test   al,0xd1
  409270:	out    0xcb,eax
  409272:	stos   BYTE PTR es:[edi],al
  409273:	jle    0x409264
  409275:	adc    cl,BYTE PTR [ebx+0x3e5f4950]
  40927b:	and    BYTE PTR [esp+ebp*4-0x69],cl
  40927f:	imul   edi,DWORD PTR [eax],0x6655257f
  409285:	push   ss
  409286:	jp     0x409208
  409288:	stc    
  409289:	mov    ebx,DWORD PTR ds:0xbffb8a2d
  40928f:	add    BYTE PTR [eax+0x1591490c],al
  409295:	ficomp WORD PTR [esi]
  409297:	pop    edx
  409298:	inc    ebx
  409299:	cld    
  40929a:	pop    ecx
  40929b:	xor    dh,dh
  40929d:	inc    ecx
  40929e:	dec    esi
  40929f:	pop    eax
  4092a0:	mov    ecx,0x3921f7a6
  4092a5:	mov    ah,0x9f
  4092a7:	sbb    bl,BYTE PTR [esi]
  4092a9:	(bad)  
  4092aa:	fimul  DWORD PTR [eax+eiz*1-0x2f]
  4092ae:	push   esi
  4092af:	xor    al,0xd7
  4092b1:	sub    dl,BYTE PTR [edi-0x12]
  4092b4:	pop    ebp
  4092b5:	(bad)  
  4092b6:	mov    ?,WORD PTR [esi+0x77]
  4092b9:	mov    WORD PTR [esi-0x57f7aec9],es
  4092bf:	sub    al,0xe
  4092c1:	(bad)
  4092c4:	icebp  
  4092c5:	add    BYTE PTR [esp+ecx*1+0x293a04ba],ah
  4092cc:	lods   al,BYTE PTR ds:[esi]
  4092cd:	fdiv   st,st(0)
  4092cf:	mov    bl,BYTE PTR [ebp-0x34342c5d]
  4092d5:	test   al,0xb1
  4092d7:	adc    al,0x8c
  4092d9:	scas   eax,DWORD PTR es:[edi]
  4092da:	retf   
  4092db:	xlat   BYTE PTR ds:[ebx]
  4092dc:	pop    eax
  4092dd:	jmp    0x40929f
  4092df:	dec    edi
  4092e0:	mov    al,ds:0x975776dc
  4092e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092e6:	sbb    BYTE PTR [ebx+0x4d09a31e],0x3f
  4092ed:	rcl    DWORD PTR [ecx+0x6dd24c7d],0x23
  4092f4:	inc    esi
  4092f5:	inc    esi
  4092f6:	or     DWORD PTR [ecx+edi*4+0x6c8d94e0],eax
  4092fd:	cmp    edi,DWORD PTR [esp+esi*4-0x646a9a22]
  409304:	in     al,0x84
  409306:	out    dx,al
  409307:	dec    edi
  409308:	jae    0x40931c
  40930a:	(bad)  
  40930b:	int3   
  40930c:	jmp    0x4092ac
  40930e:	nop
  40930f:	call   0x63b1f89f
  409314:	mov    ebp,0x79b3db83
  409319:	(bad)  
  40931a:	clc    
  40931b:	ja     0x40938c
  40931d:	xchg   ch,dh
  40931f:	ds jnp 0x4092d0
  409322:	fadd   QWORD PTR [ecx]
  409324:	retf   
  409325:	stc    
  409326:	hlt    
  409327:	push   cs
  409328:	and    eax,0xf4d794b3
  40932d:	nop
  40932e:	jae    0x40938c
  409330:	ins    DWORD PTR es:[edi],dx
  409331:	jns    0x409300
  409333:	je     0x40934a
  409335:	mov    eax,ds:0x86537b4c
  40933a:	jl     0x409368
  40933c:	push   esp
  40933d:	loopne 0x409346
  40933f:	mov    al,0x9f
  409341:	and    dh,BYTE PTR [ebp-0x17]
  409344:	or     al,0xbe
  409346:	(bad)  
  409347:	cwde   
  409348:	and    BYTE PTR [ecx+0x63],al
  40934b:	aam    0x47
  40934d:	adc    dl,0x62
  409350:	aam    0x75
  409352:	or     dl,bh
  409354:	stc    
  409355:	stos   DWORD PTR es:[di],eax
  409357:	jbe    0x4092db
  409359:	ret    
  40935a:	scas   al,BYTE PTR es:[edi]
  40935b:	imul   ecx,DWORD PTR [edx-0x21],0x24
  40935f:	repz mov al,ds:0x5d2151db
  409365:	mov    ch,0x75
  409367:	cmp    eax,0x6e66fbad
  40936c:	lods   eax,DWORD PTR ds:[esi]
  40936d:	mov    ?,ebx
  40936f:	clc    
  409370:	mov    cl,0xf3
  409372:	daa    
  409373:	call   0x7ba2b057
  409378:	push   cs
  409379:	and    dh,dh
  40937b:	adc    ah,BYTE PTR [esi-0x1a]
  40937e:	aaa    
  40937f:	push   ebx
  409380:	inc    eax
  409381:	cmp    BYTE PTR [eax-0xd3796c4],bh
  409387:	loopne 0x4093a9
  409389:	jge    0x409342
  40938b:	dec    ebp
  40938c:	adc    dl,BYTE PTR [ecx-0x35]
  40938f:	pop    ebx
  409390:	jg     0x4093fa
  409392:	int3   
  409393:	xor    dh,dl
  409395:	pop    es
  409396:	out    dx,eax
  409397:	adc    al,0xce
  409399:	mov    ds:0x3432d958,al
  40939e:	mov    ebx,0xcfd94fe1
  4093a3:	push   ebp
  4093a4:	addr16 nop
  4093a6:	in     al,0x93
  4093a8:	or     eax,DWORD PTR [ecx-0x18316862]
  4093ae:	cmp    bh,dh
  4093b0:	mov    DWORD PTR [ebp+0x305237c],eax
  4093b6:	sub    BYTE PTR [eax-0x6c],cl
  4093b9:	or     edx,DWORD PTR ds:0x14c02f7f
  4093bf:	sub    DWORD PTR [eax],ebp
  4093c1:	int    0x9b
  4093c3:	sub    DWORD PTR [edi],0x2238ba4f
  4093c9:	cmp    BYTE PTR [eax+0x4a],al
  4093cc:	inc    edx
  4093cd:	jecxz  0x409416
  4093cf:	jecxz  0x409352
  4093d1:	adc    eax,0xa95be554
  4093d6:	mov    esi,0x91c93ace
  4093db:	mov    eax,ds:0x50621198
  4093e0:	fldenv [esi]
  4093e2:	sbb    eax,0xf1cd1bc2
  4093e7:	jmp    FWORD PTR [edi-0x46]
  4093ea:	stos   DWORD PTR es:[edi],eax
  4093eb:	sub    cl,dl
  4093ed:	cmp    al,0x4e
  4093ef:	inc    ebx
  4093f0:	je     0x40942f
  4093f2:	stos   DWORD PTR es:[edi],eax
  4093f3:	pushf  
  4093f4:	sub    dl,BYTE PTR [edi-0x2feed4bb]
  4093fa:	mov    esp,0x1fd891f1
  4093ff:	or     edx,ecx
  409401:	rol    edi,cl
  409403:	sahf   
  409404:	test   eax,0x2f46b276
  409409:	out    0xda,eax
  40940b:	int    0x78
  40940d:	mov    cl,0xd8
  40940f:	push   esi
  409410:	popf   
  409411:	adc    bl,BYTE PTR [edi-0x14]
  409414:	mov    DWORD PTR [eax+0x4],eax
  409417:	mov    dl,0xbd
  409419:	mov    esp,0x5cc11c6e
  40941e:	adc    BYTE PTR [ebx],al
  409420:	mov    edx,0xbb07fd49
  409425:	inc    esp
  409426:	mov    bl,al
  409428:	inc    esp
  409429:	pop    esi
  40942a:	addr16 jg 0x4093d5
  40942d:	out    dx,eax
  40942e:	adc    DWORD PTR [ebx+0x3c562e02],esp
  409434:	stos   DWORD PTR es:[edi],eax
  409435:	adc    edi,eax
  409437:	lock mov esp,ebx
  40943a:	xchg   esi,eax
  40943b:	daa    
  40943c:	mov    ?,WORD PTR [edx+0x6401296]
  409442:	shr    ecx,1
  409444:	inc    ebp
  409445:	add    al,0x8d
  409447:	cmp    DWORD PTR [eax],ebp
  409449:	(bad)  
  40944a:	std    
  40944b:	mov    edi,0xc7ce058f
  409450:	imul   edi,DWORD PTR [edi],0x22
  409453:	lods   al,BYTE PTR ds:[esi]
  409454:	test   al,0x4e
  409456:	push   esi
  409457:	pop    edi
  409458:	js     0x40949c
  40945a:	loop   0x40940e
  40945c:	aaa    
  40945d:	pop    ebp
  40945e:	xor    DWORD PTR [edx],ecx
  409460:	mov    bh,0x25
  409462:	test   bl,cl
  409464:	xor    eax,0xc741b4fa
  409469:	pop    es
  40946a:	ja     0x4093f6
  40946c:	cmc    
  40946d:	xchg   DWORD PTR [ebp+edi*8-0x7850d34e],edx
  409474:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409475:	cmp    BYTE PTR [ecx],bh
  409477:	aas    
  409478:	mov    ds:0xa03359d4,al
  40947d:	jb     0x4094ab
  40947f:	or     bh,0x2f
  409482:	rcr    BYTE PTR [edi],1
  409484:	xchg   edx,eax
  409485:	(bad)  
  409486:	mov    ecx,0xb0113977
  40948b:	mov    ch,0xd2
  40948d:	cmc    
  40948e:	xchg   ecx,eax
  40948f:	sub    al,0x33
  409491:	mov    edx,DWORD PTR [eax-0x27]
  409494:	aam    0xe7
  409496:	(bad)  
  409497:	mov    dh,0x8e
  409499:	pop    edx
  40949a:	mov    bl,0x94
  40949c:	aas    
  40949d:	fild   WORD PTR [edx]
  40949f:	shr    DWORD PTR [ebx+0x2c6aff2a],1
  4094a5:	aad    0x28
  4094a7:	test   eax,0x5540b3d7
  4094ac:	xor    al,0x86
  4094ae:	bnd jmp 0x54f95c97
  4094b4:	leave  
  4094b5:	mov    cl,0xed
  4094b7:	jmp    0x2540:0xfa8e1830
  4094be:	mov    dl,0x1c
  4094c0:	fist   WORD PTR [edx-0x5e]
  4094c3:	mov    bl,0x1f
  4094c5:	xor    al,0x5e
  4094c7:	int    0x14
  4094c9:	mov    ds:0x8a9dfb1f,eax
  4094ce:	or     dh,BYTE PTR [edx]
  4094d0:	into   
  4094d1:	and    ch,BYTE PTR [edx]
  4094d3:	pop    edi
  4094d4:	push   DWORD PTR [esi+0x634afeec]
  4094da:	push   ecx
  4094db:	xchg   esi,eax
  4094dc:	inc    edi
  4094dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094de:	jl     0x409506
  4094e0:	inc    ebp
  4094e1:	daa    
  4094e2:	push   ds
  4094e3:	sbb    BYTE PTR [edx-0x55a9c313],ah
  4094e9:	pop    edx
  4094ea:	inc    edi
  4094eb:	call   0xb1507621
  4094f0:	neg    DWORD PTR [esi+0x4]
  4094f3:	(bad)  
  4094f4:	in     al,0xcd
  4094f6:	or     BYTE PTR [edx-0x79],al
  4094f9:	popf   
  4094fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094fb:	jl     0x4094fa
  4094fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094fe:	out    0x14,eax
  409500:	in     al,0xb6
  409502:	aaa    
  409503:	aad    0x93
  409505:	(bad)  
  409507:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409508:	dec    ebx
  409509:	sub    eax,0x7d3fbb36
  40950e:	hlt    
  40950f:	into   
  409510:	je     0x409497
  409512:	jmp    0x14b3d5bd
  409517:	push   esi
  409518:	push   es
  409519:	and    BYTE PTR [ebx+0x1c],bl
  40951c:	ss xor eax,0xa7f8f22d
  409522:	push   edi
  409523:	push   cs
  409524:	add    eax,DWORD PTR [ecx]
  409526:	sbb    al,0xe5
  409528:	cli    
  409529:	data16 arpl si,si
  40952c:	xor    al,0xcf
  40952e:	add    ah,BYTE PTR [ebp+eiz*8-0x38]
  409532:	leave  
  409533:	jecxz  0x40951d
  409535:	mov    esp,0xe03e8190
  40953a:	jmp    0x3d43efdd
  40953f:	jecxz  0x4095bb
  409541:	mov    dl,0xc5
  409543:	ds dec edx
  409545:	sub    eax,0x96536dec
  40954a:	mov    edx,0x7573c2ba
  40954f:	cmp    al,0xfb
  409551:	fs data16 mov ah,0x52
  409555:	xchg   edx,eax
  409556:	(bad)  
  409557:	pop    edi
  409558:	pop    ebp
  409559:	addr16 pop ss
  40955b:	test   ebx,0xeb329c92
  409561:	xchg   ebp,eax
  409562:	cmp    eax,0x259ad478
  409567:	xor    al,0x99
  409569:	pop    ds
  40956a:	sahf   
  40956b:	mov    bh,0xbe
  40956d:	adc    eax,0xe89c68f8
  409572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409574:	inc    ebp
  409575:	mov    ds:0xc5de2fa5,al
  40957a:	call   0x8f7d2381
  40957f:	xchg   ecx,eax
  409580:	jne    0x4095a0
  409582:	inc    edi
  409583:	mov    ds:0x537aef29,eax
  409588:	push   esp
  409589:	rcr    ecx,1
  40958b:	repnz sub cl,cl
  40958e:	mov    ecx,0xe225f885
  409593:	(bad)  
  409594:	shl    DWORD PTR [ebp-0x39],1
  409597:	imul   esi,DWORD PTR [edx],0xffffffd0
  40959a:	jmp    0x4095f7
  40959c:	adc    esi,ebx
  40959e:	ins    BYTE PTR es:[edi],dx
  40959f:	cwde   
  4095a0:	jmp    0x7ac:0xa8d2832f
  4095a7:	cmp    al,BYTE PTR [eax]
  4095a9:	sbb    eax,0xf35196c4
  4095ae:	inc    ebx
  4095b0:	repz cmp DWORD PTR [ecx+0x2b],0xffffff88
  4095b5:	outs   dx,BYTE PTR ds:[esi]
  4095b6:	sbb    al,0x43
  4095b8:	inc    edx
  4095b9:	lahf   
  4095ba:	dec    eax
  4095bb:	sbb    eax,ebx
  4095bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095be:	test   al,0x98
  4095c0:	shr    BYTE PTR [edx-0x3117660],cl
  4095c6:	dec    esp
  4095c7:	idiv   bl
  4095c9:	mov    ds:0x621c53e9,eax
  4095ce:	xchg   ecx,eax
  4095cf:	(bad)  
  4095d0:	gs jmp 0xde71b1b3
  4095d6:	add    eax,0x681275d3
  4095db:	push   es
  4095dc:	push   ds
  4095dd:	in     eax,dx
  4095de:	xcrypt-ecb (bad)
  4095df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095e0:	mov    edx,edx
  4095e2:	pop    ebx
  4095e3:	mov    bl,0x97
  4095e5:	ss jo  0x4095e1
  4095e8:	mov    ecx,edi
  4095ea:	xor    BYTE PTR [ebp-0x312299ff],ah
  4095f0:	les    esp,FWORD PTR ds:0x714bcef2
  4095f6:	cmp    BYTE PTR [esi],ch
  4095f8:	jbe    0x409614
  4095fa:	dec    esi
  4095fb:	ficomp WORD PTR [esi-0x630c3576]
  409601:	lods   eax,DWORD PTR ds:[esi]
  409602:	call   DWORD PTR [edi-0x42f88662]
  409608:	sbb    al,0x36
  40960a:	xchg   edi,eax
  40960b:	xchg   edi,eax
  40960c:	cmp    edi,edi
  40960e:	fwait
  40960f:	jl     0x4095d7
  409611:	xor    al,0x54
  409613:	test   al,0xe3
  409615:	mov    ds:0x68efd7fd,eax
  40961a:	dec    esp
  40961b:	or     eax,0x19aa0872
  409620:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409621:	pop    esi
  409622:	rcr    ebp,1
  409624:	sti    
  409625:	fidivr DWORD PTR [edx]
  409627:	arpl   WORD PTR [esi+0x59],bx
  40962a:	or     DWORD PTR [ebx-0x65],edx
  40962d:	xchg   DWORD PTR [ebx],esp
  40962f:	pop    eax
  409630:	add    eax,DWORD PTR [esi]
  409632:	rol    BYTE PTR [ecx],0x7e
  409635:	jg     0x4095ff
  409637:	push   edi
  409638:	xor    eax,0x50763d85
  40963d:	jns    0x40967a
  40963f:	mov    eax,ds:0x43942195
  409644:	xchg   ebp,eax
  409645:	mov    ds:0x75a7847,al
  40964a:	(bad)  
  40964b:	scas   al,BYTE PTR es:[edi]
  40964c:	jnp    0x409661
  40964e:	cmp    edx,ebp
  409650:	push   edi
  409651:	nop
  409652:	jns    0x4096c8
  409654:	jecxz  0x40966e
  409656:	std    
  409657:	je     0x4095e6
  409659:	and    DWORD PTR [ebx+ebp*1-0x3335dc37],esp
  409660:	adc    al,0x94
  409662:	push   edx
  409663:	inc    ebp
  409664:	sub    esi,DWORD PTR [esi+esi*1+0x19]
  409668:	jecxz  0x40964d
  40966a:	jo     0x4095f3
  40966c:	pop    eax
  40966d:	popf   
  40966e:	div    BYTE PTR [ecx]
  409670:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409671:	add    ah,BYTE PTR [edi+0x14]
  409674:	xchg   edx,eax
  409675:	xchg   ebp,eax
  409676:	pushf  
  409677:	jle    0x4096b0
  409679:	sub    al,BYTE PTR ds:0x6bd9a496
  40967f:	push   cs
  409680:	pushf  
  409681:	frstor [edi-0x55]
  409684:	mov    ecx,0xb153d460
  409689:	jne    0x409630
  40968b:	pop    edi
  40968c:	sub    BYTE PTR [ebx+0x1d5f6461],bl
  409692:	xchg   DWORD PTR [ebp+0x1c],esp
  409695:	in     al,dx
  409696:	mov    edx,0xda1c4173
  40969b:	inc    ebp
  40969c:	dec    edx
  40969d:	xchg   DWORD PTR [ecx+0x26],esp
  4096a0:	add    DWORD PTR [esi],edx
  4096a2:	les    edx,FWORD PTR [ebx+0x69]
  4096a5:	add    al,0x36
  4096a7:	dec    ebx
  4096a8:	lea    ecx,[edx+0x7618d768]
  4096ae:	and    dh,BYTE PTR [ebx-0x19231393]
  4096b4:	(bad)
  4096b9:	dec    ecx
  4096ba:	or     DWORD PTR [ecx-0x69],edx
  4096bd:	dec    esp
  4096be:	fs loope 0x409699
  4096c1:	call   0x73e71fd0
  4096c6:	lea    esi,[ecx+0x5d]
  4096c9:	mov    esi,0xaacac2b9
  4096ce:	dec    esp
  4096cf:	out    0xb5,eax
  4096d1:	jmp    0x628:0x59909697
  4096d8:	loop   0x40969d
  4096da:	sub    eax,0xe94e00bf
  4096df:	test   al,0x9e
  4096e1:	das    
  4096e2:	into   
  4096e3:	jmp    0xebe533cf
  4096e8:	push   ebp
  4096e9:	or     al,0x9d
  4096eb:	and    edi,DWORD PTR [edx]
  4096ed:	out    dx,al
  4096ee:	stc    
  4096ef:	xor    eax,0x18f182f5
  4096f4:	and    eax,0x88df4c68
  4096f9:	es cmp eax,0x60084fbc
  4096ff:	imul   ebp,DWORD PTR [ebp+0x3d],0xffffffb0
  409703:	ret    
  409704:	call   0xe430:0x5cfa9529
  40970b:	out    dx,eax
  40970c:	jno    0x4096cf
  40970e:	cmp    al,0x13
  409710:	and    ah,BYTE PTR [ebx+0x767c1616]
  409716:	or     DWORD PTR [eax+0x7],eax
  409719:	mul    BYTE PTR [edi+0x114f4b05]
  40971f:	out    dx,al
  409720:	push   ds
  409721:	push   edi
  409722:	ins    DWORD PTR es:[edi],dx
  409723:	rcr    BYTE PTR [ecx],0xc9
  409726:	mov    WORD PTR [edi+ecx*1],?
  409729:	daa    
  40972a:	daa    
  40972b:	js     0x4096d0
  40972d:	stos   DWORD PTR es:[edi],eax
  40972e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40972f:	jae    0x409755
  409731:	in     al,dx
  409732:	cmc    
  409733:	dec    ebp
  409734:	push   ecx
  409735:	imul   ecx,DWORD PTR [esi+0x1f],0xffffffa6
  409739:	addr16 (bad) 
  40973c:	jl     0x4096cd
  40973e:	inc    eax
  40973f:	sbb    al,0x7f
  409741:	pop    esp
  409742:	dec    ecx
  409743:	push   ss
  409744:	dec    ebx
  409745:	pop    edi
  409746:	and    bl,0xe3
  409749:	mov    ah,0x8c
  40974b:	cmc    
  40974c:	lods   al,BYTE PTR ds:[esi]
  40974d:	push   ds
  40974e:	dec    ebp
  40974f:	cld    
  409750:	sbb    al,0x41
  409752:	and    eax,0x817a4c34
  409757:	ss cmp al,0xd7
  40975a:	mov    esi,0x77aeb888
  40975f:	sub    ecx,ecx
  409761:	call   0xb48c:0x9b96027f
  409768:	dec    ebp
  409769:	fiadd  WORD PTR [eax+ebx*2-0x7f]
  40976d:	inc    ecx
  40976e:	jno    0x409734
  409770:	mov    al,0x73
  409772:	inc    ebx
  409773:	imul   ebp,DWORD PTR [esi-0x5e],0xffffff8c
  409777:	dec    ebx
  409778:	shr    DWORD PTR [ecx],cl
  40977a:	in     eax,dx
  40977b:	ins    BYTE PTR es:[edi],dx
  40977c:	in     eax,0xf9
  40977e:	pop    ss
  40977f:	ja     0x4097c7
  409781:	push   0x30
  409783:	pushf  
  409784:	(bad)  
  409785:	mov    ecx,0x74b63737
  40978a:	sub    eax,0xfa5f55c3
  40978f:	inc    ebx
  409790:	int    0xb1
  409792:	jle    0x409744
  409794:	out    dx,eax
  409795:	loop   0x409804
  409797:	jmp    0x409749
  409799:	and    DWORD PTR [edx-0x6],0xffffffd4
  40979d:	out    0x8f,eax
  40979f:	retf   
  4097a0:	push   edx
  4097a1:	lods   al,BYTE PTR ds:[esi]
  4097a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097a3:	retf   0xe8da
  4097a6:	mov    ebp,DWORD PTR [edi+0x7f]
  4097a9:	mov    dl,0xd4
  4097ab:	lods   eax,DWORD PTR ds:[esi]
  4097ac:	push   edx
  4097ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097ae:	inc    esp
  4097af:	aas    
  4097b0:	sbb    DWORD PTR [edx-0x61],0x5e
  4097b4:	mov    ecx,0x3a18c37a
  4097b9:	daa    
  4097ba:	xor    al,0x3
  4097bc:	push   esi
  4097bd:	lods   al,BYTE PTR ds:[esi]
  4097be:	push   0x6c
  4097c0:	cli    
  4097c1:	out    0xcc,eax
  4097c3:	int3   
  4097c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097c5:	adc    ch,BYTE PTR [ebx]
  4097c7:	lds    ebx,FWORD PTR [esi]
  4097c9:	sub    BYTE PTR ds:0x3845d774,al
  4097cf:	arpl   bp,cx
  4097d1:	add    esi,ecx
  4097d3:	scas   eax,DWORD PTR es:[edi]
  4097d4:	dec    edi
  4097d5:	std    
  4097d6:	pop    ss
  4097d7:	jge    0x409834
  4097d9:	jb     0x4097e6
  4097db:	ret    
  4097dc:	push   es
  4097dd:	mov    ah,0xe2
  4097df:	aas    
  4097e0:	retf   0xabe8
  4097e3:	jno    0x4097be
  4097e5:	punpcklbw mm0,DWORD PTR [edx-0x36]
  4097e9:	push   ss
  4097ea:	lea    ebx,[esi+0x6f1d4784]
  4097f0:	scas   eax,DWORD PTR es:[edi]
  4097f1:	loop   0x409816
  4097f3:	ret    
  4097f4:	mov    bl,0x3
  4097f6:	imul   esi,DWORD PTR [eax+0x5a8884b7],0xffffff88
  4097fd:	xor    dl,BYTE PTR [ecx]
  4097ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409800:	mov    al,ds:0x2a957474
  409805:	sbb    al,BYTE PTR [esi]
  409807:	stos   DWORD PTR es:[edi],eax
  409808:	arpl   WORD PTR [edx-0x36],sp
  40980b:	hlt    
  40980c:	mov    ebx,0x459fe7b9
  409811:	(bad)  
  409812:	bound  eax,QWORD PTR ds:0xd4706512
  409818:	add    eax,0xb0cf5270
  40981d:	pop    ebp
  40981e:	inc    eax
  40981f:	test   BYTE PTR [edx+0x5b],0xc
  409823:	add    ah,BYTE PTR [esi-0x47f1a328]
  409829:	ret    
  40982a:	mov    ah,0x8d
  40982c:	adc    al,0x20
  40982e:	shr    DWORD PTR [ebx+0xc45f6b5],1
  409834:	test   BYTE PTR [eax-0x6d],bh
  409837:	cmp    eax,0x4db51ffd
  40983c:	nop
  40983d:	mov    bl,0xd0
  40983f:	and    ebx,DWORD PTR [edi+0x73d50f0c]
  409845:	stos   DWORD PTR es:[edi],eax
  409846:	fadd   QWORD PTR [ebp+edi*1-0x7f527c66]
  40984d:	xor    BYTE PTR [eax+edx*2+0x585b2e1b],ch
  409854:	and    eax,0x3fe23a17
  409859:	mov    ebx,0x14f228ef
  40985e:	pop    edi
  40985f:	in     eax,dx
  409860:	pusha  
  409861:	sbb    DWORD PTR [ebp-0x3877c6c6],ebx
  409867:	cwde   
  409868:	daa    
  409869:	mov    eax,0xfc34676c
  40986e:	in     al,0x66
  409870:	int    0x31
  409872:	retf   0x797e
  409875:	js     0x409875
  409877:	mov    al,ds:0xec4c4bcf
  40987c:	nop
  40987d:	(bad)  
  40987e:	imul   eax,DWORD PTR [ecx+0x62b72968],0xffffffa0
  409885:	aaa    
  409886:	mov    dl,BYTE PTR [ebx]
  409888:	scas   eax,DWORD PTR es:[edi]
  409889:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40988a:	jnp    0x409817
  40988c:	fwait
  40988d:	xchg   dl,bl
  40988f:	xchg   ebp,eax
  409890:	ficomp WORD PTR [esi+0x6f]
  409893:	cmc    
  409894:	pop    ebx
  409895:	mov    cl,BYTE PTR [ebp+0x4e]
  409898:	(bad)  
  409899:	je     0x4098bd
  40989b:	xor    DWORD PTR [edi-0x2accb58f],esp
  4098a1:	stos   BYTE PTR es:[edi],al
  4098a2:	mov    ebp,0x48d6ab24
  4098a7:	push   0x13
  4098a9:	aas    
  4098aa:	pop    eax
  4098ab:	fld    DWORD PTR [edi+eiz*1+0x3d]
  4098af:	dec    ebp
  4098b0:	test   eax,0xecb834bf
  4098b5:	mov    WORD PTR [esi],es
  4098b7:	and    al,0x5
  4098b9:	or     eax,0x77a4908f
  4098be:	pop    edi
  4098bf:	pop    ebx
  4098c0:	mov    WORD PTR [ebx-0x44],cs
  4098c3:	rcl    ch,1
  4098c5:	cdq    
  4098c6:	adc    BYTE PTR [esi+edx*8-0x53],bh
  4098ca:	lea    edx,[edx-0x338ae1a8]
  4098d0:	es cmp ecx,edi
  4098d3:	in     al,0x74
  4098d5:	xchg   edx,eax
  4098d6:	dec    esi
  4098d7:	pop    esi
  4098d8:	xchg   BYTE PTR [edi],dh
  4098da:	jbe    0x4098d7
  4098dc:	rcr    esi,0x66
  4098df:	xor    DWORD PTR [ebx+edi*4-0x6a],edi
  4098e3:	addr16 pop esp
  4098e5:	sub    al,0x7b
  4098e7:	adc    dl,bh
  4098e9:	mov    ah,0xa0
  4098eb:	and    esi,DWORD PTR ds:0xb5e3adce
  4098f1:	(bad)  
  4098f2:	lock mov al,0xbf
  4098f5:	nop
  4098f6:	mov    eax,ds:0xc601ddd4
  4098fb:	in     al,0xdf
  4098fd:	rcr    edi,cl
  4098ff:	sub    al,0x3a
  409901:	gs lahf 
  409903:	mov    esi,0xd3448b77
  409908:	inc    eax
  409909:	xchg   ebp,eax
  40990a:	pop    es
  40990b:	mov    BYTE PTR [edx+ebp*2-0x2b],ah
  40990f:	inc    esi
  409910:	std    
  409911:	inc    eax
  409912:	and    eax,0x17508dbc
  409917:	int3   
  409918:	les    eax,FWORD PTR [esi+ecx*8-0x5]
  40991c:	repz jg 0x4098cf
  40991f:	and    DWORD PTR [eax+0x3966078e],eax
  409925:	mov    esi,0xe91f6c92
  40992a:	mov    esp,0x266d7851
  40992f:	push   0x71b088d6
  409934:	js     0x40997d
  409936:	data16 mov ds:0x3641b252,al
  40993c:	add    DWORD PTR [ecx-0x1453b055],esi
  409942:	pusha  
  409943:	out    dx,eax
  409944:	je     0x4098db
  409946:	pop    ecx
  409947:	push   ebx
  409948:	bound  ebp,QWORD PTR [ebp+0x29]
  40994b:	mov    ebp,0x45aba506
  409950:	loopne 0x409919
  409952:	(bad)  
  409953:	out    dx,al
  409954:	out    0x24,al
  409956:	clc    
  409957:	inc    edx
  409958:	cmp    DWORD PTR [ecx],edi
  40995a:	dec    esi
  40995b:	popa   
  40995c:	adc    esp,DWORD PTR [edi]
  40995e:	and    esi,DWORD PTR [edx+0x134c3719]
  409964:	xlat   BYTE PTR ds:[ebx]
  409965:	dec    ebx
  409966:	xchg   ecx,eax
  409967:	jae    0x40993a
  409969:	sbb    eax,0x7a802096
  40996e:	jbe    0x40990d
  409970:	cwde   
  409971:	mov    ebx,0xfcf635f7
  409976:	xchg   BYTE PTR [ebp+0x33a484f9],ch
  40997c:	fsubr  DWORD PTR [ebp+0x78efd516]
  409982:	ucomiss xmm1,DWORD PTR ds:0xb0598271
  409989:	(bad)  
  40998a:	cmc    
  40998b:	stc    
  40998c:	imul   al
  40998e:	mov    al,ds:0x89af1759
  409993:	push   cs
  409994:	dec    eax
  409995:	dec    eax
  409996:	mov    ds:0xec31d637,eax
  40999b:	adc    ecx,DWORD PTR [esi+eiz*2+0x4]
  40999f:	lods   eax,DWORD PTR ds:[esi]
  4099a0:	or     DWORD PTR [esi],esi
  4099a2:	pop    edx
  4099a3:	sar    bl,0xdd
  4099a6:	loope  0x4099c8
  4099a8:	enter  0x34a3,0xae
  4099ac:	jo     0x4099cf
  4099ae:	inc    ebp
  4099af:	dec    eax
  4099b0:	call   0x575a1cdc
  4099b5:	mov    ch,0xb7
  4099b7:	adc    ch,BYTE PTR [esi+0x46]
  4099ba:	jnp    0x40999c
  4099bc:	jp     0x409952
  4099be:	stc    
  4099bf:	repnz sti 
  4099c1:	jge    0x4099ef
  4099c3:	fbld   TBYTE PTR [ebx]
  4099c5:	dec    DWORD PTR [edx-0x5b]
  4099c8:	push   ebx
  4099c9:	cmp    al,0xd
  4099cb:	enter  0x906b,0x39
  4099cf:	aam    0xc6
  4099d1:	adc    ebx,eax
  4099d3:	outs   dx,BYTE PTR ds:[esi]
  4099d4:	jmp    0x1552ef2
  4099d9:	fs popf 
  4099db:	push   eax
  4099dc:	in     eax,0x16
  4099de:	mov    esi,0x7399cb91
  4099e3:	sub    dh,bl
  4099e5:	add    DWORD PTR [edi+0x17],ebp
  4099e8:	pop    edi
  4099e9:	mov    dl,0x10
  4099eb:	call   0xf901c9d9
  4099f0:	adc    eax,0xa6d36f96
  4099f5:	push   esi
  4099f6:	into   
  4099f7:	popa   
  4099f8:	out    0xa,eax
  4099fa:	neg    DWORD PTR [eax-0x5572b00]
  409a00:	in     al,dx
  409a01:	xlat   BYTE PTR ds:[ebx]
  409a02:	xchg   ecx,eax
  409a03:	xor    eax,0x733f171
  409a08:	and    eax,0x4192b78d
  409a0d:	aam    0x91
  409a0f:	lods   eax,DWORD PTR ds:[esi]
  409a10:	adc    eax,0xaa56762c
  409a15:	xor    ah,bh
  409a17:	(bad)  
  409a18:	xchg   edi,eax
  409a19:	push   0xffffff89
  409a1b:	pushf  
  409a1c:	cmp    esp,0x9913deda
  409a22:	imul   ecx,DWORD PTR [ebp+0x904ea50],0x5a
  409a29:	ret    0x518c
  409a2c:	xchg   DWORD PTR [edi-0x3d],edx
  409a2f:	stc    
  409a30:	into   
  409a31:	es xchg esi,eax
  409a33:	mov    ah,0xaf
  409a35:	test   bl,dh
  409a37:	mov    ebx,0x1ced96c6
  409a3c:	enter  0x3212,0xab
  409a40:	out    dx,eax
  409a41:	dec    esp
  409a42:	loop   0x4099e0
  409a44:	pushf  
  409a45:	jp     0x409aa6
  409a47:	push   ecx
  409a48:	addr16 add bl,0x73
  409a4c:	out    0xd2,eax
  409a4e:	retf   0x5fff
  409a51:	dec    esi
  409a52:	xchg   edx,eax
  409a53:	addr16 int3 
  409a55:	sub    al,0x35
  409a57:	clc    
  409a58:	or     DWORD PTR [edi-0x12],0xd1fe450
  409a5f:	test   eax,0x9d48ee05
  409a64:	sub    ecx,DWORD PTR [eax-0x5a]
  409a67:	pop    es
  409a68:	jns    0x409a0d
  409a6a:	jg     0x409a12
  409a6c:	fbld   TBYTE PTR [esi+0xc]
  409a6f:	aam    0x79
  409a71:	jecxz  0x409a65
  409a73:	loop   0x409a06
  409a75:	(bad)  
  409a76:	jg     0x409a86
  409a78:	jmp    0x409aca
  409a7a:	dec    BYTE PTR [edi+0x44b862af]
  409a80:	mov    al,ds:0xae83a9c4
  409a85:	cdq    
  409a86:	lahf   
  409a87:	neg    DWORD PTR [ebx]
  409a89:	ret    0x3cf8
  409a8c:	inc    ebx
  409a8d:	mov    esi,0x7cc670b3
  409a92:	not    DWORD PTR [edi+0x35c44253]
  409a98:	add    BYTE PTR [ebx+0x200c3592],al
  409a9e:	or     edx,DWORD PTR [edi]
  409aa0:	sbb    ecx,0xffffffe2
  409aa3:	fwait
  409aa4:	enter  0xe318,0x4a
  409aa8:	pop    es
  409aa9:	jp     0x3945253b
  409aaf:	mov    edi,0xc396cbe3
  409ab4:	and    dl,BYTE PTR [esi+eiz*8-0x2]
  409ab8:	out    0xf2,al
  409aba:	cld    
  409abb:	je     0x409a6a
  409abd:	sub    edx,ebx
  409abf:	dec    ebp
  409ac0:	lds    edx,FWORD PTR [esi+0x31]
  409ac3:	sbb    al,0x12
  409ac5:	mov    esi,0x751f68d7
  409aca:	out    dx,eax
  409acb:	ss mov gs:0x67fbd87f,eax
  409ad2:	xlat   BYTE PTR ds:[ebx]
  409ad3:	ins    BYTE PTR es:[edi],dx
  409ad4:	adc    eax,0x3e48b26a
  409ad9:	dec    esi
  409ada:	xchg   esp,eax
  409adb:	dec    ecx
  409adc:	(bad)  
  409add:	inc    ebp
  409ade:	stos   BYTE PTR es:[edi],al
  409adf:	ret    0xb512
  409ae2:	int3   
  409ae3:	lock iret 
  409ae5:	push   ebx
  409ae6:	(bad)
  409ae9:	into   
  409aea:	outs   dx,BYTE PTR ds:[esi]
  409aeb:	call   0xf84a6bf2
  409af0:	jmp    edx
  409af2:	ret    0x3c84
  409af5:	data16 hlt 
  409af7:	push   es
  409af8:	mov    ds:0xf8e9f184,eax
  409afd:	loope  0x409a90
  409aff:	mov    eax,ds:0x226b6ebe
  409b04:	add    dh,BYTE PTR ds:0x25062b74
  409b0a:	inc    esi
  409b0b:	or     ebx,edi
  409b0d:	add    DWORD PTR [ecx+0x4710faf4],ebx
  409b13:	xchg   edx,eax
  409b14:	dec    eax
  409b15:	adc    DWORD PTR ds:0x7091a1c4,esi
  409b1b:	xor    esp,DWORD PTR [edx]
  409b1d:	imul   ecx,DWORD PTR [esi+eiz*8-0x25],0xf99036b7
  409b25:	loope  0x409b3c
  409b27:	push   edx
  409b28:	sbb    al,0x9a
  409b2a:	lahf   
  409b2b:	lea    edx,[edi-0x71f72833]
  409b31:	rol    BYTE PTR [esi],0xfc
  409b34:	add    al,0x13
  409b36:	mov    ds:0xc94f6927,al
  409b3b:	add    esp,DWORD PTR [edi+0x22c4aec4]
  409b41:	sub    al,0xab
  409b43:	sub    bh,ah
  409b45:	pop    edi
  409b46:	sub    DWORD PTR ds:0xad86bec0,edi
  409b4c:	(bad)  
  409b4d:	sub    dl,BYTE PTR [esi-0x5fb452d8]
  409b53:	scas   eax,DWORD PTR es:[edi]
  409b54:	mov    edi,DWORD PTR [esi]
  409b56:	sbb    eax,0xb91629eb
  409b5b:	mov    ecx,0xb007f362
  409b60:	jno    0x409baf
  409b62:	(bad)  
  409b63:	rcr    DWORD PTR [ebp-0x22b3262c],0x38
  409b6a:	mov    al,ds:0xffb3c63b
  409b6f:	adc    esi,edi
  409b71:	les    ebp,FWORD PTR [edx-0x2b57b0b9]
  409b77:	jno    0x409b9f
  409b79:	push   ss
  409b7a:	and    DWORD PTR [edx+eax*2-0xe33c901],esp
  409b81:	test   BYTE PTR [eax],bh
  409b83:	jne    0x409bca
  409b85:	imul   esi,eax,0x5a
  409b88:	cdq    
  409b89:	shl    ebp,cl
  409b8b:	aas    
  409b8c:	aaa    
  409b8d:	pop    ebp
  409b8e:	add    BYTE PTR [edi],al
  409b90:	push   0xffffffa3
  409b92:	fild   QWORD PTR [ebx+0xbac8faf]
  409b98:	lods   al,BYTE PTR ds:[esi]
  409b99:	xor    BYTE PTR [edi],0xf4
  409b9c:	loopne 0x409b45
  409b9e:	or     eax,0xfc79b47d
  409ba3:	imul   eax,DWORD PTR [esi-0x5b651883],0xffffffae
  409baa:	popf   
  409bab:	push   edi
  409bac:	in     al,dx
  409bad:	js     0x409b8e
  409baf:	mov    dh,0x14
  409bb1:	sub    dl,0xb5
  409bb4:	mov    ah,0x6d
  409bb6:	(bad)  
  409bb7:	scas   eax,DWORD PTR es:[edi]
  409bb8:	sti    
  409bb9:	mov    al,0x2
  409bbb:	push   cs
  409bbc:	and    al,0xad
  409bbe:	retf   0x396d
  409bc1:	call   0x3903:0x9b964a4f
  409bc8:	les    esi,FWORD PTR [edi-0x7b011f95]
  409bce:	mov    WORD PTR [ebp+0x2fd88e8],es
  409bd4:	mov    ch,BYTE PTR [ecx+0x8]
  409bd7:	js     0x409bbc
  409bd9:	cli    
  409bda:	(bad)  
  409bdc:	jns    0x409c12
  409bde:	push   ecx
  409bdf:	cdq    
  409be0:	dec    ecx
  409be1:	push   0x67ce6132
  409be6:	sbb    BYTE PTR [esi],ch
  409be8:	jecxz  0x409b6d
  409bea:	jg     0x409c57
  409bec:	ins    DWORD PTR es:[edi],dx
  409bed:	(bad)  
  409bee:	jp     0x409be6
  409bf0:	stos   DWORD PTR es:[edi],eax
  409bf1:	inc    edi
  409bf2:	(bad)  
  409bf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bf4:	dec    ebp
  409bf5:	in     eax,0xc6
  409bf7:	mov    ds:0x536de06c,eax
  409bfc:	jl     0x409bf7
  409bfe:	sahf   
  409bff:	mov    esi,0x15f3a1ea
  409c04:	cld    
  409c05:	add    eax,0xc67350e9
  409c0a:	mul    DWORD PTR ds:0xd3f37a36
  409c10:	imul   ebx,DWORD PTR [ebx],0x8b5d80c3
  409c16:	popa   
  409c17:	jmp    0x409bb4
  409c19:	dec    eax
  409c1a:	fisubr WORD PTR [ebp-0x24]
  409c1d:	xchg   edx,eax
  409c1e:	or     BYTE PTR [ebx-0x4609d31],0x11
  409c25:	(bad)  
  409c26:	xchg   esi,eax
  409c27:	inc    esp
  409c28:	cdq    
  409c29:	inc    eax
  409c2a:	push   ebp
  409c2b:	popa   
  409c2c:	xor    DWORD PTR [edx-0x4b],eax
  409c2f:	addr16 dec eax
  409c31:	and    ebp,DWORD PTR [esi+edi*2]
  409c34:	bound  ebp,QWORD PTR [ecx]
  409c36:	jne    0x409ca7
  409c38:	bound  ebx,QWORD PTR [esi+0x2cff2e5c]
  409c3e:	je     0x409be7
  409c40:	popf   
  409c41:	ret    
  409c42:	mov    esp,0x8d93c4a2
  409c47:	ret    
  409c48:	mov    eax,0xd4fd9875
  409c4d:	pop    ebx
  409c4e:	mov    BYTE PTR [ebp+0x46],bl
  409c51:	sub    DWORD PTR [edx-0xb],0x76a12633
  409c58:	fdivr  DWORD PTR [ebx+0x60228259]
  409c5e:	sti    
  409c5f:	test   DWORD PTR [edi+0x40d87067],eax
  409c65:	xor    dl,dl
  409c67:	xor    DWORD PTR [edi+0x31],0xb07b9368
  409c6e:	xchg   DWORD PTR [ebx],esi
  409c70:	xchg   esp,eax
  409c71:	loop   0x409c59
  409c73:	xchg   DWORD PTR [edi-0x51],esp
  409c76:	sbb    al,0xb6
  409c78:	cmc    
  409c79:	jg     0x409c66
  409c7b:	mov    esp,DWORD PTR ds:0x21345dae
  409c81:	ror    ecx,cl
  409c83:	pop    ss
  409c84:	bound  eax,QWORD PTR [eax]
  409c86:	sbb    BYTE PTR [edi],0xec
  409c89:	lea    eax,[edx+0x5839b2e6]
  409c8f:	xor    DWORD PTR [eax+0xf],ebx
  409c92:	dec    eax
  409c93:	mov    ebp,0x2c3c4262
  409c98:	neg    DWORD PTR [edi]
  409c9a:	jg     0x409d17
  409c9c:	xor    BYTE PTR [ebx+0x5cc2714c],al
  409ca2:	jb     0x409d17
  409ca4:	stos   DWORD PTR es:[edi],eax
  409ca5:	cmp    DWORD PTR [esi+eiz*1],ebx
  409ca8:	mov    ebx,edx
  409caa:	push   cs
  409cab:	push   es
  409cac:	add    DWORD PTR [edx],ebx
  409cae:	cmp    BYTE PTR [edi-0x76f24356],bh
  409cb4:	mov    al,0x38
  409cb6:	and    DWORD PTR [ecx+ebp*2-0x79],0xffffffe9
  409cbb:	int3   
  409cbc:	lock int3 
  409cbe:	out    0xa7,al
  409cc0:	fs push edx
  409cc2:	mov    eax,ds:0x6b08469d
  409cc7:	xor    al,BYTE PTR [ebp-0x49]
  409cca:	mov    ebx,0x604cc205
  409ccf:	fimul  DWORD PTR [ebx-0x7]
  409cd2:	mov    cl,0xcc
  409cd4:	aam    0xd5
  409cd6:	inc    ebx
  409cd7:	push   esp
  409cd8:	popf   
  409cd9:	pop    eax
  409cda:	neg    edi
  409cdc:	mov    al,BYTE PTR [edx-0x37470c4b]
  409ce2:	push   esi
  409ce3:	sub    eax,0xb3603d41
  409ce8:	mov    al,al
  409cea:	shr    BYTE PTR [ebx-0x7768eb45],cl
  409cf0:	lods   al,BYTE PTR ds:[esi]
  409cf1:	or     al,0x62
  409cf3:	repz or DWORD PTR [esi],esi
  409cf6:	(bad)  
  409cf7:	rcl    BYTE PTR [ecx+ebp*2+0x66],1
  409cfb:	ficom  DWORD PTR ds:0xeac16857
  409d01:	dec    ebp
  409d02:	int    0x16
  409d04:	add    eax,0x122978b8
  409d09:	jg     0x409d10
  409d0b:	and    edi,DWORD PTR [edi+0x5c24840]
  409d11:	ja     0x409ce7
  409d13:	fsub   DWORD PTR [esp+ebp*8]
  409d16:	stos   BYTE PTR es:[edi],al
  409d17:	mov    ds:0x574f239d,al
  409d1c:	pop    DWORD PTR [ebx]
  409d1e:	cwde   
  409d1f:	jno    0x409d45
  409d21:	push   esi
  409d22:	icebp  
  409d23:	(bad)  
  409d24:	scas   eax,DWORD PTR es:[edi]
  409d25:	xor    dl,BYTE PTR [eax]
  409d27:	push   esp
  409d28:	jmp    0x34cc58ff
  409d2d:	rcl    DWORD PTR [ebx],0x51
  409d30:	daa    
  409d31:	in     eax,0x1b
  409d33:	mov    ecx,0x1adefa77
  409d38:	lods   eax,DWORD PTR ds:[esi]
  409d39:	and    ebp,ecx
  409d3b:	xchg   ebx,eax
  409d3c:	cmc    
  409d3d:	push   ebp
  409d3e:	dec    edi
  409d3f:	push   DWORD PTR [edi+0x20dfc5b]
  409d45:	dec    ecx
  409d46:	pop    ds
  409d47:	call   0x281c24f3
  409d4c:	mov    cl,0x4
  409d4e:	js     0x409cf4
  409d50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d51:	outs   dx,BYTE PTR ds:[esi]
  409d52:	sahf   
  409d53:	fisub  WORD PTR [esi+0x4b]
  409d56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d57:	jecxz  0x409d59
  409d59:	xchg   DWORD PTR [ebx],eax
  409d5b:	mov    bl,0xce
  409d5d:	nop
  409d5e:	(bad)  
  409d5f:	dec    edi
  409d60:	fistp  DWORD PTR [ecx]
  409d62:	xchg   ecx,eax
  409d63:	and    DWORD PTR [eax+0x5b],eax
  409d66:	xchg   edx,eax
  409d67:	xchg   edi,eax
  409d68:	sub    al,ch
  409d6a:	jb     0x409d1c
  409d6c:	mov    edx,0x3c300586
  409d71:	js     0x409d68
  409d73:	mov    dh,BYTE PTR [edi]
  409d75:	popa   
  409d76:	test   al,0xfa
  409d78:	adc    edx,DWORD PTR [esi-0x60]
  409d7b:	dec    ecx
  409d7c:	das    
  409d7d:	call   0xf685:0x8c57f365
  409d84:	nop
  409d85:	mov    WORD PTR fs:[eax-0x48],?
  409d89:	rcl    BYTE PTR ds:0x795c50ea,0x5
  409d90:	int    0xeb
  409d92:	das    
  409d93:	sub    eax,DWORD PTR [edx+0x3d]
  409d96:	sbb    DWORD PTR [ebx],esp
  409d98:	mov    al,0x16
  409d9a:	sbb    ecx,edx
  409d9c:	and    eax,0xd750828d
  409da1:	scas   eax,DWORD PTR es:[edi]
  409da2:	int3   
  409da3:	outs   dx,DWORD PTR ds:[esi]
  409da4:	and    BYTE PTR [edi],bl
  409da6:	test   al,0xb
  409da8:	nop
  409da9:	add    BYTE PTR [esi+ebx*1],0x55
  409dad:	jmp    0xa9f7:0xc125e983
  409db4:	sbb    edx,ebp
  409db6:	add    eax,0x773c7862
  409dbb:	mov    BYTE PTR [edx-0x18],dl
  409dbe:	adc    al,0x84
  409dc0:	xchg   esi,eax
  409dc1:	cmp    eax,0x2b3c100e
  409dc6:	and    eax,0xac0a6371
  409dcb:	pop    edi
  409dcc:	add    bh,BYTE PTR [ecx+eiz*8+0x46139b9e]
  409dd3:	mov    bl,ch
  409dd5:	dec    ebx
  409dd6:	jge    0x409d68
  409dd8:	sub    DWORD PTR [esi+edi*4-0x63d24d2a],ebp
  409ddf:	mov    BYTE PTR [eax+0x74],ch
  409de2:	adc    al,0x3e
  409de4:	xchg   edx,eax
  409de5:	cdq    
  409de6:	std    
  409de7:	(bad)  
  409de8:	cmc    
  409de9:	add    BYTE PTR [ebp+0x716170d6],ch
  409def:	pop    ds
  409df0:	sbb    dl,BYTE PTR [ebp-0x27]
  409df3:	sub    al,0x3c
  409df5:	into   
  409df6:	push   0x27
  409df8:	gs push ecx
  409dfa:	icebp  
  409dfb:	popf   
  409dfc:	aaa    
  409dfd:	jg     0x409e24
  409dff:	imul   ecx,DWORD PTR [edi],0xffffffc6
  409e02:	mov    WORD PTR [ebp+0x3abdcab7],ds
  409e08:	push   edx
  409e09:	jle    0x409db0
  409e0b:	rcl    BYTE PTR [ecx+0x61],cl
  409e0e:	mov    al,0x95
  409e10:	stos   DWORD PTR es:[edi],eax
  409e11:	fwait
  409e12:	es xchg esp,eax
  409e14:	xchg   BYTE PTR [edx+0x7f],al
  409e17:	mov    DWORD PTR [eax+0x55],ebx
  409e1a:	das    
  409e1b:	mov    ebx,DWORD PTR [ecx+0x1b]
  409e1e:	mov    eax,0xb6f64528
  409e23:	imul   ecx,DWORD PTR [ebp-0x2a],0xf248ce98
  409e2a:	repnz out dx,al
  409e2c:	icebp  
  409e2d:	push   esp
  409e2e:	dec    eax
  409e2f:	mov    esp,0xd10a1515
  409e34:	ja     0x409e4f
  409e36:	ins    DWORD PTR es:[edi],dx
  409e37:	aas    
  409e38:	bound  edx,QWORD PTR [edx]
  409e3a:	xchg   ecx,eax
  409e3b:	ror    DWORD PTR [esi-0x7ae6ad0],1
  409e41:	dec    esp
  409e42:	push   ss
  409e43:	and    BYTE PTR ds:0x59d25985,dl
  409e49:	xchg   ebp,eax
  409e4a:	sub    DWORD PTR [edi],edx
  409e4c:	in     al,dx
  409e4d:	sbb    bl,BYTE PTR [ecx-0x1c]
  409e50:	mov    esi,DWORD PTR [edx+0x58]
  409e53:	aad    0x1a
  409e55:	xor    eax,0x9f50cb18
  409e5a:	dec    esi
  409e5b:	mov    bh,0xab
  409e5d:	cld    
  409e5e:	dec    ecx
  409e5f:	dec    eax
  409e60:	mov    DWORD PTR cs:[edx],edx
  409e63:	pcmpgtb mm6,QWORD PTR [esi]
  409e66:	pop    ds
  409e67:	retf   
  409e68:	call   0x7a74710b
  409e6d:	xchg   ecx,eax
  409e6e:	cmp    al,0xc7
  409e70:	and    DWORD PTR [edi-0x57bc137f],ebx
  409e76:	push   esi
  409e77:	test   al,0x44
  409e79:	push   edx
  409e7a:	out    0x46,eax
  409e7c:	mov    esi,0x1d2eaee
  409e81:	imul   BYTE PTR [esi+0x75cc181]
  409e87:	outs   dx,DWORD PTR ds:[esi]
  409e88:	test   al,0xfd
  409e8a:	dec    ecx
  409e8b:	sbb    BYTE PTR [ebx-0x636385fb],dl
  409e91:	push   edx
  409e92:	dec    eax
  409e93:	and    ebx,DWORD PTR [edi*1+0x26bcb528]
  409e9a:	mov    ds:0x2e18c32a,al
  409e9f:	icebp  
  409ea0:	mov    ch,0x54
  409ea2:	pop    ecx
  409ea3:	iret   
  409ea4:	xchg   esi,eax
  409ea5:	icebp  
  409ea6:	ficomp WORD PTR [ebp-0x1fc3ef34]
  409eac:	mov    al,ds:0xfe827abb
  409eb1:	fimul  DWORD PTR [ebx-0xc]
  409eb4:	and    dl,bl
  409eb6:	sub    eax,0xefe3470
  409ebb:	sub    eax,0x754d88f4
  409ec0:	(bad)  
  409ec1:	fnstenv [ebp-0x65d8a61d]
  409ec7:	call   0xbd5d555b
  409ecc:	sub    al,0x2c
  409ece:	dec    edx
  409ecf:	pop    ecx
  409ed0:	loope  0x409eda
  409ed2:	inc    ecx
  409ed3:	imul   ecx,edx,0xffffff9e
  409ed6:	scas   eax,DWORD PTR es:[edi]
  409ed7:	push   0xd72c62a6
  409edc:	test   BYTE PTR [ebp+0x24],cl
  409edf:	push   edx
  409ee0:	or     DWORD PTR [edi-0x56],0xffffff8c
  409ee4:	pop    esi
  409ee5:	mov    DWORD PTR [edx+edi*8+0x205188f0],edx
  409eec:	aaa    
  409eed:	adc    eax,esp
  409eef:	cmp    eax,0xceaa57ee
  409ef4:	dec    eax
  409ef5:	repz fdivr QWORD PTR [ecx-0x58]
  409ef9:	adc    DWORD PTR [ebx+esi*1+0x39b280e5],0xd4d54812
  409f04:	imul   ecx,DWORD PTR [edi-0x44],0x91449790
  409f0b:	inc    eax
  409f0c:	mov    eax,0x6cb4cc98
  409f11:	shl    DWORD PTR ds:0xbbef5dae,1
  409f17:	les    ecx,FWORD PTR [esp+ecx*8-0x33d38d3f]
  409f1e:	call   0x7e4a3e48
  409f23:	arpl   WORD PTR [edi+0x17],bx
  409f26:	xor    eax,0xc05f548e
  409f2b:	into   
  409f2c:	dec    ebp
  409f2d:	jbe    0x409f30
  409f2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f30:	cwde   
  409f31:	rcl    BYTE PTR [ebp+0x4eabbcb0],1
  409f37:	and    al,BYTE PTR [ebp-0x474317f3]
  409f3d:	xor    al,0x15
  409f3f:	out    0xfa,eax
  409f41:	xchg   esi,eax
  409f42:	xchg   dl,dh
  409f44:	mov    esi,eax
  409f46:	ds or  eax,0x996a0976
  409f4c:	xchg   ebx,eax
  409f4d:	(bad)  
  409f4e:	lock cmp al,0x74
  409f51:	bnd ja 0x409f83
  409f54:	inc    edi
  409f55:	jnp    0x409fb8
  409f57:	pop    esp
  409f58:	not    esi
  409f5a:	mov    edx,0x4ad536fd
  409f5f:	or     eax,0xa7c168b
  409f64:	stos   DWORD PTR es:[edi],eax
  409f65:	sbb    al,0x78
  409f67:	out    dx,al
  409f68:	xor    DWORD PTR [ebx+0x42],edi
  409f6b:	xor    eax,0xbdd35d92
  409f70:	sbb    ebp,0xe2e915ce
  409f76:	xor    eax,0xaedcba7c
  409f7b:	in     eax,0x2
  409f7d:	(bad)  
  409f7e:	jno    0x409f41
  409f80:	pushf  
  409f81:	lods   al,BYTE PTR ds:[esi]
  409f82:	add    dl,BYTE PTR [edi]
  409f84:	xlat   BYTE PTR ds:[ebx]
  409f85:	xchg   ecx,eax
  409f86:	shr    eax,cl
  409f88:	mov    ecx,0xd42a618b
  409f8d:	adc    cl,BYTE PTR [ecx+0x4e]
  409f90:	lea    edi,[ebx]
  409f92:	mov    DWORD PTR [edx+0x26],edi
  409f95:	add    bh,bl
  409f97:	ss in  al,0x26
  409f9a:	sub    cl,BYTE PTR [edi+0x7e]
  409f9d:	sbb    ch,bh
  409f9f:	outs   dx,DWORD PTR ds:[esi]
  409fa0:	mov    eax,0x3a473173
  409fa5:	mov    ebp,0xa421ce11
  409faa:	mov    ebp,0xe05f1585
  409faf:	fcmovnb st,st(1)
  409fb1:	pusha  
  409fb2:	xor    ah,BYTE PTR ds:0x7803386a
  409fb8:	jge    0x40a002
  409fba:	cdq    
  409fbb:	sub    al,0x13
  409fbd:	cmp    DWORD PTR [eax],esi
  409fbf:	add    ah,BYTE PTR [edx]
  409fc1:	stos   BYTE PTR es:[edi],al
  409fc2:	sub    al,0xf2
  409fc4:	in     eax,dx
  409fc5:	push   edx
  409fc6:	sub    al,0x76
  409fc8:	outs   dx,DWORD PTR ds:[esi]
  409fc9:	int3   
  409fca:	or     esi,edi
  409fcc:	adc    BYTE PTR [esi+0x3],ah
  409fcf:	inc    esi
  409fd0:	push   es
  409fd1:	shr    bh,1
  409fd3:	mov    ds:0xfede381e,al
  409fd8:	neg    BYTE PTR [edi-0x3c]
  409fdb:	ret    0xbcfd
  409fde:	sbb    edi,DWORD PTR [edx+0x4c]
  409fe1:	jecxz  0x409fcf
  409fe3:	jne    0x409fa9
  409fe5:	je     0x40a01d
  409fe7:	mov    edi,0xa3d961db
  409fec:	push   ebx
  409fed:	sbb    DWORD PTR es:[edi-0x50],edi
  409ff1:	push   es
  409ff2:	leave  
  409ff3:	mov    ebx,0xaea70a42
  409ff8:	daa    
  409ff9:	fiadd  WORD PTR [edx+0x6018a159]
  409fff:	stos   BYTE PTR es:[edi],al
  40a000:	jne    0x409fe6
  40a002:	mov    DWORD PTR [edx],eax
  40a004:	cmp    DWORD PTR ds:0x292a2712,ecx
  40a00a:	adc    DWORD PTR [ecx],eax
  40a00c:	cld    
  40a00d:	stc    
  40a00e:	pop    edx
  40a00f:	sub    dl,BYTE PTR [edi-0x317c8a67]
  40a015:	mov    WORD PTR [esi+0x15],gs
  40a018:	sti    
  40a019:	pop    eax
  40a01a:	fs lock jmp 0xb278af29
  40a021:	pop    ebx
  40a022:	scas   eax,DWORD PTR es:[edi]
  40a023:	sahf   
  40a024:	mov    esp,0xd16fc70d
  40a029:	mul    BYTE PTR [ecx+0x37]
  40a02c:	inc    ecx
  40a02d:	add    DWORD PTR [ecx-0x3a220e2c],ebx
  40a033:	cmp    eax,eax
  40a035:	dec    ebp
  40a036:	(bad)  
  40a038:	jnp    0x409fde
  40a03a:	sbb    esp,DWORD PTR [esi]
  40a03c:	pop    es
  40a03d:	mov    edi,0x83f28fa7
  40a042:	into   
  40a043:	push   es
  40a044:	aaa    
  40a045:	jl     0x40a02b
  40a047:	add    DWORD PTR [edi+eax*2+0x270fa4f0],0xffffffae
  40a04f:	outs   dx,BYTE PTR ds:[esi]
  40a050:	jbe    0x40a0af
  40a052:	mov    dl,0x16
  40a054:	and    ah,BYTE PTR [eax]
  40a056:	push   ecx
  40a057:	inc    ebp
  40a058:	jp     0x40a044
  40a05a:	add    eax,0x3f448235
  40a05f:	push   0xffffffc1
  40a061:	nop
  40a062:	xchg   BYTE PTR [ecx+edi*8+0x69],bh
  40a066:	clc    
  40a067:	repz add eax,0x7726137
  40a06d:	test   BYTE PTR [esp+ebx*4-0x3f],bl
  40a071:	inc    esi
  40a072:	jns    0x40a054
  40a074:	aam    0x82
  40a076:	aad    0x4a
  40a078:	mov    esi,0x814c0787
  40a07d:	test   BYTE PTR [ebp+0x3bd3e84d],dl
  40a083:	out    dx,eax
  40a084:	jmp    0x40a07c
  40a086:	sub    al,0x1d
  40a088:	dec    ebp
  40a089:	and    al,0xac
  40a08b:	test   al,0x8
  40a08d:	outs   dx,DWORD PTR ds:[esi]
  40a08e:	clc    
  40a08f:	dec    esi
  40a090:	or     eax,0x1191be5a
  40a095:	and    edi,DWORD PTR [esi+0x5a]
  40a098:	cdq    
  40a099:	cmc    
  40a09a:	pop    ebp
  40a09b:	xor    ebp,DWORD PTR [esi]
  40a09d:	ja     0x40a090
  40a09f:	adc    al,0x63
  40a0a1:	loop   0x40a10c
  40a0a3:	mov    eax,DWORD PTR [esi]
  40a0a5:	(bad)  
  40a0a6:	push   ebp
  40a0a7:	bound  ebx,QWORD PTR [edx-0x37]
  40a0aa:	dec    esi
  40a0ab:	(bad)  
  40a0ac:	sti    
  40a0ad:	xchg   esp,eax
  40a0ae:	out    0xa2,al
  40a0b0:	mov    BYTE PTR [edi-0x7c012323],ah
  40a0b6:	dec    esi
  40a0b7:	mov    esi,0xe3596112
  40a0bc:	or     DWORD PTR [esi-0x65],edx
  40a0bf:	mov    bl,0x5c
  40a0c1:	pushf  
  40a0c2:	sbb    eax,0x80529f1
  40a0c7:	(bad)  
  40a0c8:	fwait
  40a0c9:	lock or BYTE PTR [eax-0x6a],al
  40a0cd:	js     0x40a115
  40a0cf:	fst    DWORD PTR [ecx+0x4a9335f7]
  40a0d5:	es popf 
  40a0d7:	mov    eax,0x663fefed
  40a0dc:	scas   eax,DWORD PTR es:[edi]
  40a0dd:	cmp    eax,DWORD PTR [eax]
  40a0df:	mov    eax,0x9a892c32
  40a0e4:	mov    esp,0xd4863445
  40a0e9:	add    al,0xa5
  40a0eb:	cld    
  40a0ec:	(bad)  
  40a0ed:	xchg   ebp,eax
  40a0ee:	push   ecx
  40a0ef:	add    ecx,esp
  40a0f1:	cs xlat BYTE PTR es:[ebx]
  40a0f4:	lods   eax,DWORD PTR ds:[esi]
  40a0f5:	mov    ecx,0xc7c5499f
  40a0fa:	and    ah,BYTE PTR [ecx]
  40a0fc:	mov    eax,ds:0x370b4193
  40a101:	test   DWORD PTR [eax-0x3f7019d4],0xe421a888
  40a10b:	push   eax
  40a10c:	test   al,0xbe
  40a10e:	or     dh,cl
  40a110:	jmp    0x25ee00a8
  40a115:	jg     0x40a14d
  40a117:	loope  0x40a193
  40a119:	in     al,0xbc
  40a11b:	sub    al,0xc0
  40a11d:	inc    esp
  40a11e:	ret    
  40a11f:	pop    eax
  40a120:	iret   
  40a121:	jp     0x40a113
  40a123:	bound  ecx,QWORD PTR [edx+ebp*4-0x747b247c]
  40a12a:	pop    ebx
  40a12b:	ret    
  40a12c:	ins    BYTE PTR es:[edi],dx
  40a12d:	jbe    0x40a0b8
  40a12f:	repz (bad) 
  40a131:	fsubp  st(7),st
  40a133:	jmp    0x40a19b
  40a135:	mov    dh,0x4d
  40a137:	in     al,dx
  40a138:	out    dx,al
  40a139:	adc    DWORD PTR [eax+esi*2],edi
  40a13c:	push   eax
  40a13d:	iret   
  40a13e:	les    ecx,FWORD PTR ds:[edx]
  40a141:	shr    BYTE PTR [ecx],0x10
  40a144:	out    dx,al
  40a145:	aas    
  40a146:	loope  0x40a136
  40a148:	adc    DWORD PTR [edx+0x72],edx
  40a14b:	rep stos BYTE PTR es:[edi],al
  40a14d:	mov    al,ds:0x607033d5
  40a152:	inc    eax
  40a153:	push   ebx
  40a154:	les    ebx,FWORD PTR [edx+0x186db702]
  40a15a:	push   ebp
  40a15b:	sahf   
  40a15c:	fnsave [esi+0x8933c15]
  40a162:	jmp    0x40a19b
  40a164:	sahf   
  40a165:	out    dx,eax
  40a166:	mov    esp,0x39a0a817
  40a16b:	pop    ecx
  40a16c:	mov    cl,0x7f
  40a16e:	xor    al,0x42
  40a170:	sbb    BYTE PTR [eax-0x56126778],bl
  40a176:	fcomp  DWORD PTR [edi+0x7e]
  40a179:	sub    BYTE PTR [ebp-0x3b],al
  40a17c:	mov    eax,0x68843555
  40a181:	and    eax,0xe146afea
  40a186:	sbb    dh,cl
  40a188:	or     BYTE PTR [ecx-0x1a4dccbb],bh
  40a18e:	push   ss
  40a18f:	scas   al,BYTE PTR es:[edi]
  40a190:	jg     0x40a1a3
  40a192:	jo     0x40a1dd
  40a194:	fmulp  st(5),st
  40a196:	rcr    ebp,1
  40a198:	xchg   ebx,eax
  40a199:	inc    esi
  40a19a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a19b:	or     dh,bh
  40a19d:	push   cs
  40a19e:	shl    edx,cl
  40a1a0:	(bad)  
  40a1a1:	jle    0x40a17a
  40a1a3:	test   DWORD PTR [eax+0x55],edx
  40a1a6:	add    eax,0x478c7846
  40a1ab:	jl     0x40a1fb
  40a1ad:	inc    edx
  40a1ae:	mov    dl,0x36
  40a1b0:	mov    WORD PTR [esp+edi*4],gs
  40a1b3:	sbb    ebx,ecx
  40a1b5:	mov    cl,0x9f
  40a1b7:	add    cl,BYTE PTR [edx+0x2896a503]
  40a1bd:	cmp    bh,ah
  40a1bf:	mov    ebp,0x62955f07
  40a1c4:	aaa    
  40a1c5:	neg    dh
  40a1c7:	push   0x8f557f55
  40a1cc:	pop    esp
  40a1cd:	push   ebx
  40a1ce:	dec    esp
  40a1cf:	outs   dx,DWORD PTR ss:[esi]
  40a1d1:	sub    ecx,DWORD PTR [ebp-0x4a]
  40a1d4:	jmp    0x365d:0x97acfc39
  40a1db:	cdq    
  40a1dc:	xchg   dl,cl
  40a1de:	push   cs
  40a1df:	hlt    
  40a1e0:	sbb    BYTE PTR [eax+0x2b843b46],dh
  40a1e6:	cmp    al,BYTE PTR [edx+0x7b]
  40a1e9:	push   esp
  40a1ea:	aaa    
  40a1eb:	lods   al,BYTE PTR ds:[esi]
  40a1ec:	push   edi
  40a1ed:	sub    BYTE PTR [edi],dl
  40a1ef:	cmc    
  40a1f0:	mov    ch,0x38
  40a1f2:	inc    ebx
  40a1f3:	pop    edi
  40a1f5:	ja     0x40a242
  40a1f7:	push   esp
  40a1f8:	sbb    al,BYTE PTR [ecx]
  40a1fa:	pop    esi
  40a1fb:	das    
  40a1fc:	sbb    edx,ebx
  40a1fe:	out    dx,al
  40a1ff:	inc    ebx
  40a200:	sbb    esp,DWORD PTR [edx]
  40a202:	inc    edx
  40a203:	pop    ebp
  40a204:	popf   
  40a205:	cmp    dh,BYTE PTR [edi]
  40a207:	(bad)
  40a20b:	shr    DWORD PTR [ecx-0x49],cl
  40a20e:	sbb    BYTE PTR [edi+0x6d],0x2
  40a212:	push   eax
  40a213:	cmp    al,BYTE PTR [eax]
  40a215:	inc    ebp
  40a216:	clc    
  40a217:	icebp  
  40a218:	push   ecx
  40a219:	rol    DWORD PTR [ecx+0x49fe8718],cl
  40a21f:	push   edi
  40a220:	aaa    
  40a221:	lea    edx,[eax]
  40a223:	xchg   DWORD PTR [edi+0x19945c5f],ecx
  40a229:	scas   al,BYTE PTR es:[edi]
  40a22a:	jbe    0x40a1cd
  40a22c:	int    0xf8
  40a22e:	ret    
  40a22f:	test   DWORD PTR [edx],0x3eca160a
  40a235:	lahf   
  40a236:	inc    eax
  40a237:	pop    edx
  40a238:	cld    
  40a239:	jae    0x40a265
  40a23b:	scas   al,BYTE PTR es:[edi]
  40a23c:	loop   0x40a2b6
  40a23e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a23f:	fcomip st,st(2)
  40a241:	pop    eax
  40a242:	aam    0x33
  40a244:	and    bl,BYTE PTR [eax+0x2a]
  40a247:	gs xchg esp,eax
  40a249:	inc    esi
  40a24a:	shl    ebx,0x82
  40a24d:	dec    eax
  40a24e:	mov    ch,0xdd
  40a250:	mov    ch,BYTE PTR [eax]
  40a252:	in     eax,0x5e
  40a254:	outs   dx,DWORD PTR ds:[esi]
  40a255:	(bad)  
  40a256:	test   al,0xc7
  40a258:	jmp    0x88ae:0xbc42ca48
  40a25f:	cmp    BYTE PTR [edi-0x23],bl
  40a262:	in     eax,0x77
  40a264:	lea    ecx,[esp+eiz*2-0x1b547714]
  40a26b:	adc    DWORD PTR [ecx],0x1423ea45
  40a271:	xchg   esi,eax
  40a272:	int    0xdb
  40a274:	inc    eax
  40a275:	mov    DWORD PTR ds:0x3cc886d,edx
  40a27b:	jbe    0x40a255
  40a27d:	mov    edx,0x6ee5ed2d
  40a282:	sar    ah,cl
  40a284:	dec    eax
  40a285:	mov    al,0x32
  40a287:	adc    dl,BYTE PTR [eax+0x34d62ca4]
  40a28d:	adc    dl,BYTE PTR [esi]
  40a28f:	push   edi
  40a290:	mov    ch,0x61
  40a292:	or     bh,BYTE PTR [esi-0x2d]
  40a295:	xor    edi,esi
  40a297:	dec    eax
  40a298:	leave  
  40a299:	xchg   ecx,eax
  40a29a:	add    bl,BYTE PTR [edi+0x5367b758]
  40a2a0:	push   0x42
  40a2a2:	sub    DWORD PTR [ebx],esp
  40a2a4:	in     al,dx
  40a2a5:	or     DWORD PTR [ebx+0x36765df4],0xd5d3cd5d
  40a2af:	mov    ah,0x4b
  40a2b1:	jae    0x40a26d
  40a2b3:	sahf   
  40a2b4:	mov    cl,0x8e
  40a2b6:	sbb    edx,esp
  40a2b8:	(bad)
  40a2bb:	push   0xffffffa2
  40a2bd:	clc    
  40a2be:	mov    ebp,0x33b51819
  40a2c3:	xchg   BYTE PTR [ecx-0x40],al
  40a2c6:	lock mov edi,0xb2a263d4
  40a2cc:	pop    edx
  40a2cd:	adc    BYTE PTR [esi+ecx*4],0xa8
  40a2d1:	ret    0x443e
  40a2d4:	ja     0x40a2cf
  40a2d6:	icebp  
  40a2d7:	jg     0x40a2cd
  40a2d9:	sub    dl,BYTE PTR fs:[edx-0x153dff8c]
  40a2e0:	xor    al,BYTE PTR [eax+0x66]
  40a2e3:	jmp    0x2822:0xa07e0db7
  40a2ea:	xchg   ebp,eax
  40a2eb:	add    DWORD PTR [edi-0x7c],edx
  40a2ee:	add    BYTE PTR ds:0x7dc98508,cl
  40a2f4:	mov    dh,0x35
  40a2f6:	cmp    al,0xc9
  40a2f8:	sti    
  40a2f9:	fs xor al,0x25
  40a2fc:	ins    BYTE PTR es:[edi],dx
  40a2fd:	out    dx,eax
  40a2fe:	mov    eax,DWORD PTR [eax-0x742078fc]
  40a304:	stc    
  40a305:	popa   
  40a306:	jb     0x40a2a9
  40a308:	dec    edi
  40a309:	loop   0x40a338
  40a30b:	adc    BYTE PTR ss:[ebx],bh
  40a30e:	push   cs
  40a30f:	mov    al,0x93
  40a311:	push   0x3b
  40a313:	into   
  40a314:	fstp   DWORD PTR [edi+0x2e]
  40a317:	jmp    0x868f:0xed9236f7
  40a31e:	cmp    bl,cl
  40a320:	test   DWORD PTR [edx-0x4c2e96d4],esp
  40a326:	mov    edx,0xd165391b
  40a32b:	inc    ecx
  40a32c:	ret    0x2a4c
  40a32f:	test   DWORD PTR [esi-0x3fc676a7],ecx
  40a335:	push   esp
  40a336:	push   ds
  40a337:	hlt    
  40a338:	or     DWORD PTR gs:[esi+0x6ab7f402],edx
  40a33f:	add    esi,DWORD PTR [esi-0x542a5afa]
  40a345:	push   es
  40a346:	cmc    
  40a347:	repz sbb eax,0x46179c00
  40a34d:	(bad)  
  40a34e:	sub    eax,0x16b92c6e
  40a353:	lahf   
  40a354:	pop    ss
  40a355:	cmp    edx,DWORD PTR [esi-0x4940bcce]
  40a35b:	test   edx,esi
  40a35d:	test   BYTE PTR [edi+0x13],dl
  40a360:	jecxz  0x40a3c7
  40a362:	mov    DWORD PTR [edx],ebx
  40a364:	ja     0x40a384
  40a366:	jnp    0x40a39b
  40a368:	sti    
  40a369:	pusha  
  40a36a:	push   eax
  40a36b:	dec    ebx
  40a36c:	ret    0x5212
  40a36f:	hlt    
  40a370:	shl    DWORD PTR es:[edi+ebx*2+0x72],cl
  40a375:	add    BYTE PTR [edi+0x1e11d695],0xc6
  40a37c:	push   esi
  40a37d:	and    ecx,DWORD PTR [ebp+0x7]
  40a380:	pop    ds
  40a381:	mov    esp,0x44eb1265
  40a386:	aaa    
  40a387:	jle    0x40a30c
  40a389:	jae    0x40a36f
  40a38b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a38c:	jb     0x40a377
  40a38e:	ror    BYTE PTR [eax],1
  40a390:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a391:	lahf   
  40a392:	sub    BYTE PTR [esi+0x66],bl
  40a395:	in     eax,0xf1
  40a397:	enter  0x3aff,0x82
  40a39b:	hlt    
  40a39c:	push   ebx
  40a39d:	mov    dl,0x3d
  40a39f:	xchg   esi,eax
  40a3a0:	pop    ebp
  40a3a1:	lea    edi,[ebx]
  40a3a3:	jmp    0x17736b23
  40a3a8:	bound  eax,QWORD PTR [edi+0x1b]
  40a3ab:	inc    ebp
  40a3ac:	mov    WORD PTR [esi],ds
  40a3ae:	jmp    0x40a3fd
  40a3b0:	inc    edx
  40a3b1:	or     BYTE PTR [ebp-0x2d577241],bh
  40a3b7:	ss mov edi,0x44e74cfb
  40a3bd:	xchg   DWORD PTR [edx-0x24],ebp
  40a3c0:	cli    
  40a3c1:	int    0x35
  40a3c3:	stos   DWORD PTR es:[edi],eax
  40a3c4:	push   ebp
  40a3c5:	fld    QWORD PTR [esi+0x69]
  40a3c8:	imul   ecx,DWORD PTR [esi+0x1],0x55
  40a3cc:	enter  0xbb6,0xa3
  40a3d0:	adc    edi,eax
  40a3d2:	inc    ebx
  40a3d3:	and    BYTE PTR [eax+edx*4],cl
  40a3d6:	div    DWORD PTR [ebp*8+0x5deccb21]
  40a3dd:	ja     0x40a416
  40a3df:	lea    esp,[ebx-0x44]
  40a3e2:	push   ecx
  40a3e3:	cmp    esi,edx
  40a3e5:	aam    0x98
  40a3e7:	out    0x2c,eax
  40a3e9:	adc    ecx,DWORD PTR ds:[edi-0x49dd5d30]
  40a3f0:	and    DWORD PTR [ecx-0x58],0xffffffdf
  40a3f4:	inc    ecx
  40a3f5:	mov    ecx,0x5f5479dd
  40a3fa:	inc    ebx
  40a3fb:	mul    BYTE PTR ds:[edx-0x72]
  40a3ff:	ja     0x40a3fe
  40a401:	jbe    0x40a3f0
  40a403:	pop    edx
  40a404:	int3   
  40a405:	push   edi
  40a406:	call   0x36950866
  40a40b:	dec    ebx
  40a40c:	add    ebp,edi
  40a40e:	sub    cl,cl
  40a410:	enter  0xb42d,0xa9
  40a414:	ins    DWORD PTR es:[edi],dx
  40a415:	in     eax,0xa7
  40a417:	or     BYTE PTR [eax-0x55],bl
  40a41a:	add    BYTE PTR [ebp-0x6c762094],ah
  40a420:	test   DWORD PTR [edx+ecx*1-0x2b390bfa],0xced4bc4e
  40a42b:	clc    
  40a42c:	ins    DWORD PTR es:[edi],dx
  40a42d:	leave  
  40a42e:	push   ds
  40a42f:	add    cl,0x83
  40a432:	bound  esi,QWORD PTR [ecx]
  40a434:	jg     0x40a3dd
  40a436:	pusha  
  40a437:	mov    WORD PTR [esi+0x2e],ds
  40a43a:	loop   0x40a40c
  40a43c:	loop   0x40a473
  40a43e:	xor    dl,BYTE PTR [ebx-0x5be6b6bc]
  40a444:	push   ss
  40a445:	in     eax,0x31
  40a447:	ret    0x9766
  40a44a:	push   edi
  40a44b:	es pop ds
  40a44d:	mov    al,0xf6
  40a44f:	inc    eax
  40a450:	dec    esi
  40a451:	sahf   
  40a452:	pushf  
  40a453:	inc    ebp
  40a454:	jge    0x40a448
  40a456:	push   eax
  40a457:	lock mov ebp,ebx
  40a45a:	repnz xchg ebp,eax
  40a45c:	mov    ds:0x5d1697bc,eax
  40a461:	and    eax,0x35f5d24e
  40a466:	arpl   WORD PTR ds:0xa759780d,bp
  40a46c:	or     ebx,0xfffffff7
  40a46f:	jne    0x40a4ac
  40a471:	mov    al,0xcc
  40a473:	ss cld 
  40a475:	push   0xffffffed
  40a477:	shl    esi,0x9f
  40a47a:	mov    edx,0xdb4ecc1a
  40a47f:	cmp    al,0x76
  40a481:	arpl   WORD PTR [edi-0x76],sp
  40a484:	retf   
  40a485:	out    dx,al
  40a486:	hlt    
  40a487:	mov    cl,0xe6
  40a489:	push   ds
  40a48a:	in     al,dx
  40a48b:	dec    BYTE PTR [edx]
  40a48d:	js     0x40a475
  40a48f:	inc    ecx
  40a490:	call   0xf836:0xf6dffc5d
  40a497:	aaa    
  40a498:	(bad)  
  40a499:	nop
  40a49a:	mov    eax,ds:0x3ca86c08
  40a49f:	and    esp,edi
  40a4a1:	std    
  40a4a2:	and    DWORD PTR [edi+0x72],0xa8801517
  40a4a9:	mov    ds:0xff2b4148,al
  40a4ae:	mov    ebp,0x4ba67cb1
  40a4b3:	and    edx,DWORD PTR [ebp+0x40b62ae8]
  40a4b9:	int    0x2c
  40a4bb:	shr    BYTE PTR [eax+ebx*4],1
  40a4be:	mov    eax,0xeeb68a1f
  40a4c3:	ret    0xd0a9
  40a4c6:	dec    esi
  40a4c7:	push   edx
  40a4c8:	jmp    0x40a4df
  40a4ca:	push   esi
  40a4cb:	mov    ah,BYTE PTR [esi-0x14]
  40a4ce:	sub    eax,0xfbd447ed
  40a4d3:	out    dx,eax
  40a4d4:	das    
  40a4d5:	pop    ss
  40a4d6:	push   es
  40a4d7:	js     0x40a550
  40a4d9:	or     edi,DWORD PTR [ecx-0x69337a29]
  40a4df:	test   BYTE PTR [eax],ch
  40a4e1:	mov    eax,ds:0x6318616
  40a4e6:	add    eax,0xf8760237
  40a4eb:	js     0x40a46d
  40a4ed:	mov    ds:0x7bc22242,eax
  40a4f2:	ret    0x513c
  40a4f5:	jp     0x40a494
  40a4f7:	jo     0x40a55f
  40a4f9:	and    eax,0xc7df222f
  40a4fe:	dec    esi
  40a4ff:	loopne 0x40a551
  40a501:	retf   
  40a502:	sti    
  40a503:	push   esp
  40a504:	aas    
  40a505:	jno    0x40a583
  40a507:	cld    
  40a508:	stc    
  40a509:	mov    ds:0x4f69262e,eax
  40a50e:	sub    BYTE PTR [esi+ebp*2-0x7],ah
  40a512:	ret    0xea9f
  40a515:	inc    ecx
  40a516:	jp     0x40a4fa
  40a518:	ficom  DWORD PTR [esi-0x11]
  40a51b:	add    BYTE PTR [eax+eax*1-0x685f18a5],0xb0
  40a523:	mov    ds,edi
  40a525:	sub    eax,0xae5e2312
  40a52a:	inc    ecx
  40a52b:	aas    
  40a52c:	xor    al,ah
  40a52e:	enter  0xadaa,0xf1
  40a532:	pop    ecx
  40a533:	std    
  40a534:	mov    ds:0xc76ba89f,eax
  40a539:	cmp    ebp,DWORD PTR [ebp-0x7b]
  40a53c:	xchg   esi,eax
  40a53d:	test   eax,0xd78b8b32
  40a542:	mov    esp,0xdd70c11f
  40a548:	outs   dx,DWORD PTR ds:[esi]
  40a549:	and    al,0x67
  40a54b:	pop    ebx
  40a54c:	jmp    0x40a56d
  40a54e:	std    
  40a54f:	lods   eax,DWORD PTR ds:[esi]
  40a550:	add    ah,dl
  40a552:	inc    ebx
  40a553:	push   ebp
  40a554:	xchg   esp,edi
  40a556:	pusha  
  40a557:	jne    0x40a585
  40a559:	adc    eax,0x782cc83
  40a55e:	mov    cl,0xeb
  40a560:	xlat   BYTE PTR ds:[ebx]
  40a561:	push   ebx
  40a562:	test   DWORD PTR [edx],eax
  40a564:	or     bl,BYTE PTR [eax+0x573797ce]
  40a56a:	cmp    al,bh
  40a56c:	xchg   BYTE PTR [ebp-0x6c],bl
  40a56f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a570:	or     edx,esp
  40a572:	stc    
  40a573:	ret    
  40a574:	cld    
  40a575:	in     al,dx
  40a576:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a577:	idiv   ebp
  40a579:	pop    esi
  40a57a:	push   es
  40a57b:	push   edi
  40a57c:	cdq    
  40a57d:	jl     0x40a50c
  40a57f:	inc    edi
  40a580:	cmp    dh,BYTE PTR [esi-0x12]
  40a583:	pop    es
  40a584:	ja     0x40a572
  40a586:	mov    ecx,0x68a12d99
  40a58b:	xor    al,0xc9
  40a58d:	lods   eax,DWORD PTR ds:[esi]
  40a58e:	rcl    bh,1
  40a590:	inc    ebx
  40a591:	cmp    BYTE PTR [edx+0x69],dl
  40a594:	adc    eax,DWORD PTR [edi]
  40a596:	jae    0x40a542
  40a598:	pop    ds
  40a599:	xchg   ebp,eax
  40a59a:	sub    eax,0x5fb3e853
  40a59f:	out    0x19,al
  40a5a1:	dec    edx
  40a5a2:	push   cs
  40a5a3:	mov    ds:0x9ebb00,eax
  40a5a8:	pushf  
  40a5a9:	clc    
  40a5aa:	cmp    DWORD PTR [edx+0x62],0x989f3d47
  40a5b1:	and    DWORD PTR [ecx],ecx
  40a5b3:	mov    esp,0x11f86cea
  40a5b8:	inc    ecx
  40a5b9:	pop    esi
  40a5ba:	xor    BYTE PTR [ecx-0x1ec4067b],cl
  40a5c0:	(bad)  
  40a5c1:	pop    ds
  40a5c2:	and    DWORD PTR [edx],edi
  40a5c4:	inc    esi
  40a5c5:	iret   
  40a5c6:	loope  0x40a550
  40a5c8:	sar    DWORD PTR [ebp+0x1a],cl
  40a5cb:	cmp    al,0x4a
  40a5cd:	pop    esi
  40a5ce:	shl    DWORD PTR [edi+0x7e],cl
  40a5d1:	leave  
  40a5d2:	mov    bh,0xdc
  40a5d4:	add    DWORD PTR [edi],eax
  40a5d6:	push   ss
  40a5d7:	jne    0x40a62c
  40a5d9:	add    bh,BYTE PTR [edx+0x27045c92]
  40a5df:	mov    DWORD PTR [ecx-0x39c5504c],ebp
  40a5e5:	inc    ebx
  40a5e6:	push   ebx
  40a5e7:	fild   DWORD PTR ds:0x60d9993c
  40a5ed:	imul   edi,DWORD PTR [eax],0xe2991a17
  40a5f3:	push   es
  40a5f4:	sub    DWORD PTR [edx],edx
  40a5f6:	dec    ebp
  40a5f7:	imul   ebx,DWORD PTR [ebp-0xd],0xffffffd5
  40a5fb:	mov    ch,0xfb
  40a5fd:	xchg   esi,eax
  40a5fe:	dec    esp
  40a5ff:	jl     0x40a59d
  40a601:	adc    edi,edi
  40a603:	xor    al,0x94
  40a605:	lock arpl dx,cx
  40a608:	shr    BYTE PTR [ecx],cl
  40a60a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a60b:	or     BYTE PTR [edx-0x2f],ch
  40a60e:	pop    eax
  40a60f:	push   0x46f2a3f6
  40a614:	fnstcw WORD PTR [ebp+0xa]
  40a617:	imul   BYTE PTR [ebx+0x54b90fc5]
  40a61d:	and    DWORD PTR [ebx-0x68956a8e],ebp
  40a623:	push   ecx
  40a624:	inc    esp
  40a625:	test   al,0x92
  40a627:	xor    ebp,DWORD PTR [esi-0x54395a5a]
  40a62d:	or     ecx,DWORD PTR [edx+0x79]
  40a630:	retf   
  40a631:	ins    BYTE PTR es:[edi],dx
  40a632:	lds    esp,FWORD PTR [ebp+0x11]
  40a635:	dec    BYTE PTR [ebp-0x58]
  40a638:	xor    al,0xb4
  40a63a:	out    0x6f,eax
  40a63c:	scas   eax,DWORD PTR es:[edi]
  40a63d:	mov    al,0x6b
  40a63f:	ja     0x40a6ab
  40a641:	imul   esp,DWORD PTR [edi+ebp*2-0x5e],0x4
  40a646:	xor    DWORD PTR [esi+0x3a],esi
  40a649:	cmp    al,0xfa
  40a64b:	pop    ebp
  40a64c:	sub    dl,ch
  40a64e:	stos   BYTE PTR es:[edi],al
  40a64f:	lds    ebp,FWORD PTR [edi+0x6f]
  40a652:	es in  eax,dx
  40a654:	jmp    0xf77255b3
  40a659:	imul   edi,esi,0x19
  40a65c:	adc    edi,ecx
  40a65e:	mov    ah,0x4b
  40a660:	pop    ecx
  40a661:	mov    dl,BYTE PTR [edx-0x5d]
  40a664:	test   eax,0xedab50bf
  40a669:	xchg   esi,eax
  40a66a:	dec    esi
  40a66b:	add    eax,0x900b2267
  40a670:	fld    QWORD PTR [edi]
  40a672:	jle    0x40a5fd
  40a674:	stos   DWORD PTR es:[edi],eax
  40a675:	cmc    
  40a676:	idiv   BYTE PTR [esi+0x3914cebf]
  40a67c:	(bad)  
  40a67e:	lods   al,BYTE PTR ds:[esi]
  40a67f:	mov    BYTE PTR [ecx-0x62a1d24f],dh
  40a685:	push   ebx
  40a686:	(bad)  
  40a687:	push   0xffffffc7
  40a689:	jmp    DWORD PTR [eax+0x79]
  40a68c:	mov    ecx,0x50a27c01
  40a691:	or     BYTE PTR [bp+si],ah
  40a694:	scas   al,BYTE PTR es:[edi]
  40a695:	ins    BYTE PTR es:[edi],dx
  40a696:	pushf  
  40a697:	cmp    BYTE PTR [ecx-0xb4ad8ad],ch
  40a69d:	jmp    0xa87a:0x2dc323bb
  40a6a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6a5:	add    BYTE PTR [esi+edx*4+0x2b815e5e],dh
  40a6ac:	add    DWORD PTR [eax-0x33],0xffffffd5
  40a6b0:	xor    cl,ch
  40a6b2:	fldz   
  40a6b4:	outs   dx,DWORD PTR ds:[esi]
  40a6b5:	(bad)  
  40a6b6:	mov    edx,ebp
  40a6b8:	lods   al,BYTE PTR ds:[esi]
  40a6b9:	ret    0x8d91
  40a6bc:	icebp  
  40a6bd:	add    ah,cl
  40a6bf:	jno    0x40a657
  40a6c1:	ins    BYTE PTR es:[edi],dx
  40a6c2:	lods   al,BYTE PTR ds:[esi]
  40a6c3:	or     esp,ecx
  40a6c5:	sub    ebx,DWORD PTR [esi+0x71]
  40a6c8:	push   ds
  40a6c9:	into   
  40a6ca:	jno    0x40a65b
  40a6cc:	sbb    eax,0xb96af3f6
  40a6d1:	into   
  40a6d2:	add    ch,BYTE PTR [ecx+0x45f6c49b]
  40a6d8:	pop    edx
  40a6d9:	loop   0x40a6a8
  40a6db:	enter  0x79e4,0x7b
  40a6df:	pop    ecx
  40a6e0:	ror    BYTE PTR [ecx+0x5c70845],1
  40a6e6:	pop    ds
  40a6e7:	xchg   BYTE PTR [edx+0x0],al
  40a6ea:	sbb    al,BYTE PTR [eax]
  40a6ec:	add    BYTE PTR [eax],al
  40a6ee:	cmp    DWORD PTR ds:0x42861f,0x0
  40a6f5:	je     0x40a72f
  40a6fb:	cmp    DWORD PTR ds:0x42861f,0x24
  40a702:	jbe    0x40a72f
  40a708:	jmp    0x40a71d
  40a70d:	push   0x42862f
  40a712:	push   0x428042
  40a717:	call   DWORD PTR ds:0x4287cb
  40a71d:	mov    edx,DWORD PTR ds:0x42861f
  40a723:	dec    edx
  40a724:	mov    DWORD PTR ds:0x42861f,edx
  40a72a:	jmp    0x40a6ee
  40a72f:	mov    eax,DWORD PTR [ebp-0x24]
  40a732:	and    DWORD PTR ds:0x42866f,0x0
  40a73c:	jmp    0x40a74e
  40a741:	mov    edx,DWORD PTR ds:0x42866f
  40a747:	inc    edx
  40a748:	mov    DWORD PTR ds:0x42866f,edx
  40a74e:	cmp    DWORD PTR ds:0x42866f,0x17
  40a755:	jae    0x40a78b
  40a75b:	cmp    DWORD PTR ds:0x42866f,0x1b
  40a762:	jl     0x40a78b
  40a768:	jmp    0x40a786
  40a76d:	push   DWORD PTR [ebp-0x28]
  40a770:	push   DWORD PTR [ebp-0x18]
  40a773:	push   0x56d8
  40a778:	push   0x2d04
  40a77d:	push   DWORD PTR [ebp-0x10]
  40a780:	call   DWORD PTR ds:0x42879f
  40a786:	jmp    0x40a741
  40a78b:	mov    edx,DWORD PTR [ebp+0x8]
  40a78e:	xor    eax,ecx
  40a790:	add    eax,esi
  40a792:	cmp    edx,eax
  40a794:	mov    DWORD PTR ds:0x42860b,0x4a21
  40a79e:	jbe    0x40a816
  40a7a4:	mov    eax,DWORD PTR [ebp-0x24]
  40a7a7:	mov    DWORD PTR ds:0x428617,0x16
  40a7b1:	cmp    DWORD PTR ds:0x428617,0x0
  40a7b8:	je     0x40a809
  40a7be:	cmp    DWORD PTR ds:0x428617,0x4
  40a7c5:	ja     0x40a809
  40a7cb:	jmp    0x40a7db
  40a7d0:	push   0x5454
  40a7d5:	call   DWORD PTR ds:0x4287a3
  40a7db:	cmp    DWORD PTR ds:0x428617,0x5
  40a7e2:	jne    0x40a7f7
  40a7e8:	xor    edx,edx
  40a7ea:	add    edx,DWORD PTR ds:0x428617
  40a7f0:	dec    edx
  40a7f1:	mov    DWORD PTR ds:0x428617,edx
  40a7f7:	mov    edx,DWORD PTR ds:0x428617
  40a7fd:	dec    edx
  40a7fe:	mov    DWORD PTR ds:0x428617,edx
  40a804:	jmp    0x40a7b1
  40a809:	xor    eax,ecx
  40a80b:	add    eax,esi
  40a80d:	adc    edx,0x5d89
  40a813:	mov    DWORD PTR [ebp+0x8],eax
  40a816:	sub    edx,DWORD PTR ds:0x42867b
  40a81c:	mov    eax,DWORD PTR [ebp-0x28]
  40a81f:	mov    edx,DWORD PTR [ebp+0x8]
  40a822:	xor    eax,ecx
  40a824:	mov    DWORD PTR ds:0x428677,0x29fb
  40a82e:	add    eax,esi
  40a830:	sub    DWORD PTR ds:0x42865f,0x428667
  40a83a:	imul   eax,edx
  40a83d:	and    DWORD PTR ds:0x42866b,0x0
  40a847:	xor    edx,edx
  40a849:	xor    edx,DWORD PTR ds:0x42866b
  40a84f:	inc    edx
  40a850:	mov    DWORD PTR ds:0x42866b,edx
  40a856:	cmp    DWORD PTR ds:0x42866b,0x4
  40a85d:	jge    0x40a89f
  40a863:	jmp    0x40a876
  40a868:	push   DWORD PTR [ebp-0x1c]
  40a86b:	push   0x428034
  40a870:	call   DWORD PTR ds:0x4287a7
  40a876:	cmp    DWORD PTR ds:0x42866b,0x3
  40a87d:	jne    0x40a892
  40a883:	xor    edx,edx
  40a885:	xor    edx,DWORD PTR ds:0x42866b
  40a88b:	inc    edx
  40a88c:	mov    DWORD PTR ds:0x42866b,edx
  40a892:	cmp    DWORD PTR ds:0x42866b,0x10
  40a899:	jb     0x40a847
  40a89f:	mov    DWORD PTR [ebp+0x8],eax
  40a8a2:	mov    edx,DWORD PTR ds:0x428693
  40a8a8:	mov    edx,DWORD PTR [edx]
  40a8aa:	sbb    DWORD PTR ds:0x42861f,edx
  40a8b0:	mov    eax,DWORD PTR [ebp-0x14]
  40a8b3:	mov    edx,DWORD PTR [ebp+0x8]
  40a8b6:	xor    eax,ecx
  40a8b8:	add    eax,esi
  40a8ba:	cmp    edx,eax
  40a8bc:	je     0x40aa1e
  40a8c2:	mov    eax,DWORD PTR [ebp+0x8]
  40a8c5:	mov    DWORD PTR [ebp-0x20],eax
  40a8c8:	mov    eax,DWORD PTR [ebp-0x4]
  40a8cb:	add    eax,DWORD PTR [ebp-0x30]
  40a8ce:	mov    DWORD PTR [ebp-0x2c],0xf89c85b0
  40a8d5:	mov    DWORD PTR [ebp-0x1c],edi
  40a8d8:	mov    DWORD PTR [ebp-0x34],0xf89c85b2
  40a8df:	mov    DWORD PTR [ebp-0x10],eax
  40a8e2:	mov    DWORD PTR [ebp-0x40],0xf89c85b3
  40a8e9:	mov    DWORD PTR [ebp-0xc],edi
  40a8ec:	mov    eax,DWORD PTR [ebp-0x2c]
  40a8ef:	xor    eax,ecx
  40a8f1:	add    eax,esi
  40a8f3:	jmp    0x40a9da
  40a8f8:	mov    DWORD PTR [ebp-0x38],0xf89c85bb
  40a8ff:	mov    DWORD PTR [ebp-0x3c],0xf89c858e
  40a906:	mov    eax,DWORD PTR [ebp-0xc]
  40a909:	mov    edx,DWORD PTR [ebp+0x8]
  40a90c:	xor    eax,ecx
  40a90e:	add    eax,esi
  40a910:	imul   eax,edx
  40a913:	mov    edx,DWORD PTR [ebp-0x10]
  40a916:	mov    al,BYTE PTR [eax+edx*1]
  40a919:	mov    BYTE PTR [ebp+0xf],al
  40a91c:	mov    eax,DWORD PTR [ebp-0xc]
  40a91f:	mov    edx,DWORD PTR [ebp+0x8]
  40a922:	xor    eax,ecx
  40a924:	add    eax,esi
  40a926:	imul   eax,edx
  40a929:	mov    edx,DWORD PTR [ebp-0x34]
  40a92c:	xor    edx,ecx
  40a92e:	add    eax,edx
  40a930:	mov    edx,DWORD PTR [ebp-0x10]
  40a933:	movzx  eax,BYTE PTR [eax+edx*1+0x3272ec]
  40a93b:	mov    edx,DWORD PTR [ebp-0x38]
  40a93e:	xor    edx,ecx
  40a940:	lea    eax,[edx+eax*1+0x3272ec]
  40a947:	movzx  edx,BYTE PTR [ebp+0xf]
  40a94b:	xor    edx,eax
  40a94d:	mov    BYTE PTR [ebp+0xf],dl
  40a950:	mov    al,BYTE PTR [ebp+0xf]
  40a953:	mov    edx,DWORD PTR [ebp-0xc]
  40a956:	mov    ebx,DWORD PTR [ebp+0x8]
  40a959:	xor    edx,ecx
  40a95b:	add    edx,esi
  40a95d:	imul   edx,ebx
  40a960:	mov    ebx,DWORD PTR [ebp-0x10]
  40a963:	mov    BYTE PTR [edx+ebx*1],al
  40a966:	mov    eax,DWORD PTR [ebp-0xc]
  40a969:	mov    edx,DWORD PTR [ebp+0x8]
  40a96c:	xor    eax,ecx
  40a96e:	add    eax,esi
  40a970:	imul   eax,edx
  40a973:	mov    edx,DWORD PTR [ebp-0x10]
  40a976:	mov    al,BYTE PTR [eax+edx*1]
  40a979:	mov    BYTE PTR [ebp+0xf],al
  40a97c:	mov    eax,DWORD PTR [ebp-0xc]
  40a97f:	mov    edx,DWORD PTR [ebp+0x8]
  40a982:	xor    eax,ecx
  40a984:	add    eax,esi
  40a986:	imul   eax,edx
  40a989:	mov    edx,DWORD PTR [ebp-0x1c]
  40a98c:	xor    edx,ecx
  40a98e:	add    eax,edx
  40a990:	mov    edx,DWORD PTR [ebp-0x10]
  40a993:	movzx  eax,BYTE PTR [eax+edx*1+0x3272ec]
  40a99b:	mov    edx,DWORD PTR [ebp-0x3c]
  40a99e:	xor    edx,ecx
  40a9a0:	lea    eax,[edx+eax*1+0x3272ec]
  40a9a7:	movzx  edx,BYTE PTR [ebp+0xf]
  40a9ab:	xor    edx,eax
  40a9ad:	mov    BYTE PTR [ebp+0xf],dl
  40a9b0:	mov    al,BYTE PTR [ebp+0xf]
  40a9b3:	mov    edx,DWORD PTR [ebp-0xc]
  40a9b6:	mov    ebx,DWORD PTR [ebp+0x8]
  40a9b9:	xor    edx,ecx
  40a9bb:	add    edx,esi
  40a9bd:	imul   edx,ebx
  40a9c0:	mov    ebx,DWORD PTR [ebp-0x10]
  40a9c3:	mov    BYTE PTR [edx+ebx*1],al
  40a9c6:	mov    eax,DWORD PTR [ebp-0x40]
  40a9c9:	mov    edx,DWORD PTR [ebp-0x1c]
  40a9cc:	xor    eax,ecx
  40a9ce:	xor    edx,ecx
  40a9d0:	add    eax,esi
  40a9d2:	add    edx,esi
  40a9d4:	imul   eax,edx
  40a9d7:	add    eax,DWORD PTR [ebp+0x8]
  40a9da:	mov    DWORD PTR [ebp+0x8],eax
  40a9dd:	mov    eax,DWORD PTR [ebp+0x8]
  40a9e0:	mov    edx,DWORD PTR [ebp-0x20]
  40a9e3:	cmp    edx,eax
  40a9e5:	jb     0x40a8f8
  40a9eb:	mov    eax,DWORD PTR [ebp-0x1c]
  40a9ee:	mov    edx,DWORD PTR [ebp-0x20]
  40a9f1:	xor    eax,ecx
  40a9f3:	add    eax,esi
  40a9f5:	imul   eax,edx
  40a9f8:	mov    edx,DWORD PTR [ebp-0x2c]
  40a9fb:	xor    edx,ecx
  40a9fd:	add    edx,esi
  40a9ff:	or     eax,edx
  40aa01:	mov    edx,DWORD PTR [ebp-0x8]
  40aa04:	xor    edx,ecx
  40aa06:	add    eax,edx
  40aa08:	mov    edx,DWORD PTR [ebp-0x8]
  40aa0b:	xor    edx,ecx
  40aa0d:	add    eax,edx
  40aa0f:	mov    edx,DWORD PTR [ebp-0x4]
  40aa12:	lea    eax,[eax+edx*1+0x64e5d8]
  40aa19:	jmp    0x40aa2d
  40aa1e:	mov    eax,DWORD PTR [ebp-0x8]
  40aa21:	mov    edx,DWORD PTR [ebp-0x4]
  40aa24:	xor    eax,ecx
  40aa26:	lea    eax,[eax+edx*1+0x3272ec]
  40aa2d:	mov    DWORD PTR [ebp-0x4],eax
  40aa30:	mov    eax,DWORD PTR [ebp-0x8]
  40aa33:	xor    eax,ecx
  40aa35:	mov    edx,0xffcd8d14
  40aa3a:	sub    edx,eax
  40aa3c:	add    edx,DWORD PTR [ebp-0x18]
  40aa3f:	mov    eax,DWORD PTR [ebp-0x8]
  40aa42:	mov    ebx,DWORD PTR [ebp-0x4]
  40aa45:	xor    eax,ecx
  40aa47:	add    eax,esi
  40aa49:	imul   eax,ebx
  40aa4c:	cmp    eax,edx
  40aa4e:	jbe    0x4082fa
  40aa54:	pop    ebx
  40aa55:	pop    edi
  40aa56:	pop    esi
  40aa57:	leave  
  40aa58:	ret    0x8
  40aa5b:	push   ebp
  40aa5c:	mov    ebp,esp
  40aa5e:	sub    esp,0x10
  40aa61:	mov    eax,ds:0x4286a3
  40aa66:	mov    ecx,DWORD PTR ds:0x428727
  40aa6c:	sub    ecx,eax
  40aa6e:	add    eax,DWORD PTR [eax+ecx*1]
  40aa71:	mov    eax,0xf89c85b0
  40aa76:	mov    DWORD PTR [ebp-0x4],eax
  40aa79:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40aa80:	mov    edx,DWORD PTR ds:0x4286db
  40aa86:	xor    ecx,ecx
  40aa88:	or     ecx,DWORD PTR ds:0x428717
  40aa8e:	sub    ecx,edx
  40aa90:	xor    edx,DWORD PTR [edx+ecx*1]
  40aa93:	mov    ecx,DWORD PTR [ebp-0x4]
  40aa96:	or     edx,0x191e
  40aa9c:	push   esi
  40aa9d:	and    DWORD PTR ds:0x4285db,0x0
  40aaa7:	mov    edx,DWORD PTR ds:0x4285db
  40aaad:	inc    edx
  40aaae:	mov    DWORD PTR ds:0x4285db,edx
  40aab4:	cmp    DWORD PTR ds:0x4285db,0x1e
  40aabb:	jl     0x40aae5
  40aac1:	jmp    0x40aad8
  40aac6:	push   0x428028
  40aacb:	push   0x1
  40aacd:	push   0x77f2
  40aad2:	call   DWORD PTR ds:0x4287ab
  40aad8:	cmp    DWORD PTR ds:0x4285db,0x13
  40aadf:	jb     0x40aaa7
  40aae5:	mov    edx,0x75108a4
  40aaea:	sbb    esi,0x397d
  40aaf0:	xor    ecx,edx
  40aaf2:	and    DWORD PTR ds:0x42866f,0x0
  40aafc:	xor    esi,esi
  40aafe:	add    esi,DWORD PTR ds:0x42866f
  40ab04:	inc    esi
  40ab05:	mov    DWORD PTR ds:0x42866f,esi
  40ab0b:	cmp    DWORD PTR ds:0x42866f,0x21
  40ab12:	jge    0x40ceb9
  40ab18:	jmp    0x40ab28
  40ab1d:	push   0x42801b
  40ab22:	call   DWORD PTR ds:0x4287af
  40ab28:	cmp    DWORD PTR ds:0x42866f,0x1c
  40ab2f:	jb     0x40aafc
  40ab35:	jmp    0x40ceb9
  40ab3a:	jo     0x40aaf5
  40ab3c:	aam    0x1d
  40ab3e:	mov    DWORD PTR [ebx],0xd07b7bab
  40ab44:	xor    DWORD PTR [ecx],edx
  40ab46:	pusha  
  40ab47:	sti    
  40ab48:	outs   dx,BYTE PTR ds:[esi]
  40ab49:	cli    
  40ab4a:	adc    al,0xe8
  40ab4c:	jp     0x40abc8
  40ab4e:	adc    ebx,DWORD PTR [edi+0x7a]
  40ab51:	jp     0x40abcc
  40ab53:	fisub  DWORD PTR [ebp-0x52]
  40ab56:	push   cs
  40ab57:	and    dl,BYTE PTR [ecx-0x1d]
  40ab5a:	jnp    0x40aafe
  40ab5c:	sahf   
  40ab5d:	in     al,0x8f
  40ab5f:	paddb  mm6,QWORD PTR [esi-0x5ac3fd75]
  40ab66:	es pop esp
  40ab68:	sbb    DWORD PTR [ecx-0x2d],0x25
  40ab6c:	aad    0xae
  40ab6e:	add    al,0x8e
  40ab70:	popa   
  40ab71:	cmp    BYTE PTR [ebx],ah
  40ab73:	push   0x4a
  40ab75:	cmc    
  40ab76:	repnz pop esp
  40ab78:	dec    ecx
  40ab79:	test   eax,0x74f31495
  40ab7e:	and    cl,BYTE PTR [esi]
  40ab80:	xor    al,0x8f
  40ab82:	lds    eax,FWORD PTR [esi+0xd73ec76]
  40ab88:	mov    esi,0xd12802b7
  40ab8d:	dec    eax
  40ab8e:	inc    ebx
  40ab8f:	adc    DWORD PTR [edx],ebp
  40ab91:	test   BYTE PTR [esi],cl
  40ab93:	jmp    0x6c481475
  40ab98:	xor    ch,BYTE PTR [eax]
  40ab9a:	dec    ebx
  40ab9b:	aas    
  40ab9c:	inc    ebp
  40ab9d:	(bad)  
  40ab9e:	fstp   TBYTE PTR [edx+eiz*2+0x27]
  40aba2:	push   cs
  40aba3:	or     BYTE PTR [edx-0x6d],bh
  40aba6:	das    
  40aba7:	xlat   BYTE PTR ds:[ebx]
  40aba8:	lahf   
  40aba9:	pop    ebp
  40abaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abab:	imul   BYTE PTR [esi]
  40abad:	xchg   ecx,eax
  40abae:	xchg   edi,eax
  40abaf:	push   ebx
  40abb0:	in     eax,dx
  40abb1:	iret   
  40abb2:	call   0xe03a:0xba018ede
  40abb9:	inc    edi
  40abba:	mov    bl,0x44
  40abbc:	inc    edx
  40abbd:	ins    BYTE PTR es:[edi],dx
  40abbe:	repnz sbb eax,0xffffffcd
  40abc2:	shr    DWORD PTR [ebx],0x6d
  40abc5:	xchg   edi,eax
  40abc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abc7:	push   esp
  40abc8:	mov    dl,0xf0
  40abca:	mov    eax,ds:0x8c078455
  40abcf:	add    BYTE PTR [edx+0x1f30420e],ah
  40abd5:	stos   BYTE PTR es:[edi],al
  40abd6:	addr16 mov ecx,0x4fff501a
  40abdc:	(bad)  [esi]
  40abde:	pop    es
  40abdf:	stos   DWORD PTR es:[edi],eax
  40abe0:	jmp    0xe169dff
  40abe5:	repz inc esp
  40abe7:	std    
  40abe8:	inc    edi
  40abe9:	mov    al,ds:0xffe3161
  40abee:	lock inc ecx
  40abf0:	push   ecx
  40abf1:	dec    edi
  40abf2:	je     0x40ab76
  40abf4:	jmp    0xb936ceaa
  40abf9:	inc    esp
  40abfa:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40abfc:	push   ecx
  40abfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abfe:	cmp    al,0x3c
  40ac00:	cli    
  40ac01:	jl     0x40ab98
  40ac03:	iret   
  40ac04:	fild   WORD PTR [esi+0x6b09ccec]
  40ac0a:	mov    WORD PTR [ebx+0x250dd27c],es
  40ac10:	rcl    ebp,0x75
  40ac13:	pop    ecx
  40ac14:	cs push 0xffffffe4
  40ac17:	add    al,0x1c
  40ac1a:	(bad)  
  40ac1b:	js     0x40ac8e
  40ac1d:	push   edi
  40ac1e:	rcr    BYTE PTR [eax+0x51c76b96],1
  40ac24:	sbb    edi,DWORD PTR [edx]
  40ac26:	dec    eax
  40ac27:	ficomp DWORD PTR [edx]
  40ac29:	cmp    BYTE PTR [ebp+ecx*4-0x763e95f0],bh
  40ac30:	les    edi,FWORD PTR [esi+0x2c8090f6]
  40ac36:	in     eax,dx
  40ac37:	scas   al,BYTE PTR es:[edi]
  40ac38:	out    dx,al
  40ac39:	lods   eax,DWORD PTR ds:[esi]
  40ac3a:	pop    ds
  40ac3b:	adc    DWORD PTR [esi+0x3e],0x49a15648
  40ac42:	pop    esi
  40ac43:	mov    eax,ds:0x32fff0e
  40ac48:	test   DWORD PTR [ecx],0x9931e7ab
  40ac4e:	or     al,0xbb
  40ac50:	or     al,0x17
  40ac52:	jle    0x40ac73
  40ac54:	xchg   esp,eax
  40ac55:	cmp    DWORD PTR [ecx+0x701865de],edx
  40ac5b:	mov    ?,WORD PTR [edx*8+0x1e0c5c3]
  40ac62:	sbb    dl,cl
  40ac64:	mov    cl,0xb3
  40ac66:	imul   eax,DWORD PTR [ebp+0x75],0xef35c143
  40ac6d:	and    al,0xfd
  40ac6f:	inc    edx
  40ac70:	cmp    ebp,DWORD PTR es:[edi+0x6a29a87e]
  40ac77:	mov    WORD PTR [edi-0x1e],cs
  40ac7a:	push   es
  40ac7b:	ins    DWORD PTR es:[edi],dx
  40ac7c:	(bad)  
  40ac7d:	popa   
  40ac7e:	mov    cl,BYTE PTR [ebx]
  40ac80:	sbb    BYTE PTR ds:0xc7e2120e,cl
  40ac86:	push   eax
  40ac87:	add    al,0x9d
  40ac89:	sbb    ch,0xa3
  40ac8c:	lea    esi,[edx-0x53]
  40ac8f:	xchg   edi,eax
  40ac90:	ficomp WORD PTR [eax+0x3a]
  40ac93:	xchg   ebx,eax
  40ac94:	inc    edx
  40ac95:	inc    ebp
  40ac96:	test   DWORD PTR [ebx+0x6d],0xc87495e7
  40ac9d:	jno    0x40aca5
  40ac9f:	push   esp
  40aca0:	pop    edi
  40aca1:	lods   al,BYTE PTR ds:[esi]
  40aca2:	pop    eax
  40aca4:	mov    ds:0xb9ef6983,al
  40aca9:	jno    0x40ac4a
  40acab:	inc    BYTE PTR [ebx+0x16]
  40acae:	and    eax,0x5d487ff9
  40acb3:	fld    TBYTE PTR [eax-0x1fce40a4]
  40acb9:	addr16 dec esi
  40acbb:	call   0xef3f:0xf02ab20a
  40acc2:	or     DWORD PTR [ebp*8+0x29cc91a1],ebx
  40acc9:	add    ebx,DWORD PTR [ebx]
  40accb:	in     eax,dx
  40accc:	(bad)  
  40accd:	pop    ebx
  40acce:	xor    eax,0x92fc039b
  40acd3:	call   0xebb9:0x1075dee5
  40acda:	aam    0x47
  40acdc:	mov    ecx,0xbdc9509d
  40ace1:	push   ds
  40ace2:	dec    ebx
  40ace3:	dec    ecx
  40ace4:	dec    edx
  40ace5:	inc    edx
  40ace6:	js     0x40ad41
  40ace8:	std    
  40ace9:	loop   0x40ad62
  40aceb:	mov    eax,0xec2c457d
  40acf0:	test   al,cl
  40acf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acf3:	cdq    
  40acf4:	jmp    0xad5d:0x36a018a3
  40acfb:	ds cmp al,0xd2
  40acfe:	jl     0x40ad2e
  40ad00:	or     eax,0xd42870f6
  40ad05:	retf   0x3295
  40ad08:	(bad)  
  40ad09:	adc    al,0x13
  40ad0b:	stos   BYTE PTR es:[edi],al
  40ad0c:	clc    
  40ad0d:	sub    al,0xa8
  40ad0f:	push   cs
  40ad10:	push   esi
  40ad11:	cmc    
  40ad12:	push   eax
  40ad13:	pop    es
  40ad14:	call   0xa813:0xf9a903ef
  40ad1b:	loop   0x40acc7
  40ad1d:	mov    ds:0x72c296b5,eax
  40ad22:	add    ah,dh
  40ad24:	pop    eax
  40ad25:	inc    ecx
  40ad26:	inc    DWORD PTR [edx]
  40ad28:	cmp    DWORD PTR [ebp-0x6d],esi
  40ad2b:	xor    DWORD PTR [ebp-0x2e],ebx
  40ad2e:	pcmpgtb mm2,mm5
  40ad31:	test   DWORD PTR [ebp+0x159b4f19],edx
  40ad37:	sub    BYTE PTR [esi],ah
  40ad39:	sub    al,0x4d
  40ad3b:	call   0x9874b960
  40ad40:	jmp    0xa533:0x80bfd7a3
  40ad47:	pushf  
  40ad48:	mov    BYTE PTR [eax-0x4e],cl
  40ad4b:	cld    
  40ad4c:	addr16 or ebp,ebx
  40ad4f:	mov    ebp,0x42646ef9
  40ad54:	leave  
  40ad55:	push   ds
  40ad56:	dec    edi
  40ad57:	mov    bl,0xa0
  40ad59:	inc    edi
  40ad5a:	mov    BYTE PTR ds:0x1e4ac9c,ah
  40ad60:	xor    BYTE PTR [ebp-0x2a42824],dl
  40ad66:	or     eax,0x8298b6f1
  40ad6b:	xor    bl,bl
  40ad6d:	jle    0x40ad73
  40ad6f:	mov    ecx,0xcae2743
  40ad74:	fimul  DWORD PTR [edx+edi*8+0x2f]
  40ad78:	outs   dx,BYTE PTR ds:[esi]
  40ad79:	xchg   esp,eax
  40ad7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad7b:	out    0xe8,al
  40ad7d:	and    ah,BYTE PTR [esi]
  40ad7f:	dec    esi
  40ad80:	out    dx,al
  40ad81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad82:	outs   dx,BYTE PTR ds:[esi]
  40ad83:	lea    eax,[ebx]
  40ad85:	sahf   
  40ad86:	das    
  40ad87:	addr16 push ebp
  40ad89:	cmp    eax,ecx
  40ad8b:	mov    DWORD PTR [ebp+0x2b],ebp
  40ad8e:	stos   BYTE PTR es:[edi],al
  40ad8f:	(bad)  
  40ad91:	icebp  
  40ad92:	stc    
  40ad93:	or     dl,dl
  40ad95:	xor    ebx,DWORD PTR [edi-0x2b]
  40ad98:	les    ebx,FWORD PTR [ebx+eax*2+0x5f9800f5]
  40ad9f:	or     eax,0x821b3c6
  40ada4:	xor    bh,BYTE PTR [eax+0xc76d5f2]
  40adaa:	in     eax,0xd8
  40adac:	(bad)  
  40adad:	pop    ebp
  40adae:	mov    dl,0x6b
  40adb0:	xchg   ebp,eax
  40adb1:	cmp    eax,0x5cafc57f
  40adb6:	pop    es
  40adb7:	sbb    eax,0x9a572bc3
  40adbc:	mov    ah,0xda
  40adbe:	jno    0x40ae30
  40adc0:	imul   ebx,DWORD PTR [ebp+0x4437f4de],0x1c400082
  40adca:	es rcr BYTE PTR cs:[edi-0x47],cl
  40adcf:	enter  0xdf39,0xa8
  40add3:	adc    eax,0x55341f97
  40add8:	xor    eax,0xd392bf18
  40addd:	fadd   st(1),st
  40addf:	rcr    BYTE PTR [esi-0x4],cl
  40ade2:	jno    0x40adc7
  40ade4:	call   0x21d9:0x3700d683
  40adeb:	mov    edi,0x5e7bae35
  40adf0:	xor    al,0xcd
  40adf2:	imul   eax,DWORD PTR [ebx+ecx*4],0x3
  40adf6:	push   ss
  40adf7:	mov    edx,0x67970832
  40adfc:	shl    BYTE PTR [ebp-0x3ba8a041],cl
  40ae02:	out    dx,al
  40ae03:	mov    edx,ebp
  40ae05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae06:	push   esp
  40ae07:	jnp    0x40ade0
  40ae09:	aaa    
  40ae0a:	add    al,0xb1
  40ae0c:	mov    dh,0x5d
  40ae0e:	out    0xcb,eax
  40ae10:	(bad)  
  40ae11:	aad    0xf4
  40ae13:	fsubr  QWORD PTR [edx+edx*2-0x68]
  40ae17:	sbb    ah,BYTE PTR [edi-0x47]
  40ae1a:	fdivr  DWORD PTR [edi-0x22]
  40ae1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae1e:	(bad)  
  40ae20:	out    dx,al
  40ae21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae22:	retf   
  40ae23:	add    al,0xd4
  40ae25:	jl     0x40ae91
  40ae27:	add    DWORD PTR ds:0xc5552a95,ebp
  40ae2d:	dec    ecx
  40ae2e:	fs aaa 
  40ae30:	inc    esi
  40ae31:	mov    BYTE PTR [edx-0x525a53c],dl
  40ae37:	cmp    DWORD PTR [edi],0xf2fb0896
  40ae3d:	ret    0xa60
  40ae40:	aas    
  40ae41:	cli    
  40ae42:	std    
  40ae43:	xchg   ecx,eax
  40ae44:	or     al,0xab
  40ae46:	cmp    ch,BYTE PTR [ebp-0x64b01547]
  40ae4c:	repz pop es
  40ae4e:	fist   DWORD PTR [edx-0x75c6a116]
  40ae54:	rcl    DWORD PTR [eax-0x45],1
  40ae57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae58:	sbb    esi,DWORD PTR [edi+0x25]
  40ae5b:	mov    DWORD PTR es:[ebp-0x5366d817],0xf9f57bf4
  40ae66:	mov    ds:0x631db035,eax
  40ae6c:	mov    ds:0xd5ae6836,eax
  40ae71:	xchg   ebx,eax
  40ae72:	jns    0x40ae07
  40ae74:	sbb    esi,DWORD PTR [ebp-0x45]
  40ae77:	jb     0x40ae64
  40ae79:	jno    0x40ae07
  40ae7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae7c:	or     ah,bh
  40ae7e:	or     eax,DWORD PTR [esi-0x47d280fd]
  40ae84:	in     eax,0x2d
  40ae86:	adc    DWORD PTR ds:0x290dcad8,esi
  40ae8c:	mov    edx,0x1509fd5b
  40ae91:	leave  
  40ae92:	(bad)  
  40ae93:	pop    ebx
  40ae94:	adc    BYTE PTR ds:0xbbf4f898,0x7b
  40ae9b:	mov    bl,0xf8
  40ae9d:	xor    bh,0xe2
  40aea0:	inc    ecx
  40aea1:	inc    esp
  40aea2:	jmp    0x40aed6
  40aea4:	sub    BYTE PTR [eax-0x7a133845],al
  40aeaa:	data16 or bh,BYTE PTR [ecx+0x5]
  40aeae:	jp     0x40af20
  40aeb0:	and    al,0x21
  40aeb2:	sbb    ebx,DWORD PTR [eax]
  40aeb4:	or     DWORD PTR [edx+0x66b620c1],edx
  40aeba:	out    dx,eax
  40aebb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aebc:	or     DWORD PTR [ebx],edx
  40aebe:	jo     0x40ae82
  40aec0:	xchg   DWORD PTR [edx-0x5a],esp
  40aec3:	mov    ds:0x9a790804,eax
  40aec8:	rcl    esp,1
  40aeca:	push   0x2
  40aecc:	pop    ss
  40aecd:	xor    cl,BYTE PTR [esi]
  40aecf:	rcl    DWORD PTR [ebx],1
  40aed1:	icebp  
  40aed2:	mov    bh,0xb3
  40aed4:	xchg   DWORD PTR [eax],ebp
  40aed6:	push   esi
  40aed7:	pop    eax
  40aed8:	int3   
  40aed9:	mov    cl,0x55
  40aedb:	adc    DWORD PTR [eax+eax*2+0x4],esp
  40aedf:	aaa    
  40aee0:	fnstcw WORD PTR [eax-0x7a]
  40aee3:	sub    al,0xd7
  40aee5:	(bad)  
  40aee6:	pop    ds
  40aee7:	pop    ebx
  40aee8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aee9:	(bad)  
  40aeea:	pop    edi
  40aeeb:	outs   dx,DWORD PTR ds:[esi]
  40aeec:	push   edx
  40aeed:	test   eax,0xa03b898
  40aef2:	mov    edi,0x8c3c5f13
  40aef7:	xchg   ebp,eax
  40aef8:	xor    edi,eax
  40aefa:	in     eax,0xe8
  40aefc:	arpl   bx,dx
  40aefe:	dec    BYTE PTR [esp+eax*1]
  40af01:	lea    ecx,ds:0x34752120
  40af07:	xor    esp,DWORD PTR [ebx]
  40af09:	clc    
  40af0a:	mov    ebp,0xdc68d384
  40af0f:	ret    
  40af10:	or     BYTE PTR [edi-0x6af76fb8],bl
  40af16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af17:	test   al,0xed
  40af19:	ins    BYTE PTR es:[edi],dx
  40af1a:	jg     0x40af23
  40af1c:	adc    al,0x90
  40af1e:	mov    ebp,0x8ec6f5eb
  40af23:	sub    al,0x5e
  40af25:	mov    edi,0x6080665f
  40af2a:	or     DWORD PTR [ebx],0x6c84e96c
  40af30:	jb     0x40af27
  40af32:	pop    esi
  40af33:	jmp    0x145b:0xc85e96db
  40af3a:	adc    DWORD PTR [edx-0x3],esp
  40af3d:	out    0x5e,al
  40af3f:	repnz int3 
  40af41:	test   eax,0x76bb46e2
  40af46:	or     ebx,ebp
  40af48:	aaa    
  40af49:	lods   al,BYTE PTR ds:[esi]
  40af4a:	pop    esi
  40af4b:	test   al,0x53
  40af4d:	enter  0x222e,0x97
  40af51:	xchg   esp,eax
  40af52:	lods   al,BYTE PTR ds:[esi]
  40af53:	dec    edx
  40af54:	xor    eax,ebx
  40af56:	les    edx,FWORD PTR [ebp+0x25]
  40af59:	pusha  
  40af5a:	shl    BYTE PTR [ecx+eiz*1+0x7f],1
  40af5e:	imul   DWORD PTR [edi-0x4e]
  40af61:	xchg   ebp,eax
  40af62:	push   ss
  40af63:	out    0x45,eax
  40af65:	por    mm5,QWORD PTR [ecx]
  40af68:	and    al,0x5e
  40af6a:	mov    al,0x8e
  40af6c:	fisttp DWORD PTR [ebp-0x16a1fec3]
  40af72:	add    DWORD PTR [esi+0x184fe4e4],ecx
  40af78:	jg     0x40af10
  40af7a:	or     edx,DWORD PTR [ecx]
  40af7c:	jmp    0x40afd5
  40af7e:	aas    
  40af7f:	(bad)  
  40af80:	xchg   ecx,eax
  40af81:	pushf  
  40af82:	fisttp DWORD PTR [ecx-0x1a67725e]
  40af88:	repnz inc ebp
  40af8a:	add    ebp,DWORD PTR [edi+0x768e1e71]
  40af90:	data16 test al,0xde
  40af93:	lods   al,BYTE PTR ds:[esi]
  40af94:	cmp    DWORD PTR [edi+0x4cb08451],ebp
  40af9a:	mov    cl,BYTE PTR [ecx+0x77]
  40af9d:	clc    
  40af9e:	js     0x40af5c
  40afa0:	xor    ebx,DWORD PTR [edx+0xbe57fdb]
  40afa6:	imul   DWORD PTR [ecx-0x71b86e57]
  40afac:	scas   eax,DWORD PTR es:[edi]
  40afad:	test   edx,0xc619e7d0
  40afb3:	dec    ebx
  40afb4:	loopne 0x40af85
  40afb6:	xchg   ebx,eax
  40afb7:	add    DWORD PTR [ebp-0x56],ebx
  40afba:	adc    eax,DWORD PTR [esi]
  40afbc:	es jne 0x40b034
  40afbf:	je     0x40af94
  40afc1:	addps  xmm3,XMMWORD PTR [edx-0x62]
  40afc5:	sar    BYTE PTR ds:0x4130918b,0x46
  40afcc:	lea    esi,[eax+0x2d744923]
  40afd2:	sbb    al,0x4e
  40afd4:	cld    
  40afd5:	(bad)  
  40afd6:	push   esi
  40afd7:	add    cl,cl
  40afd9:	xor    DWORD PTR [edx],0x7e1b8d7b
  40afdf:	shl    edi,0x64
  40afe2:	push   0x1a
  40afe4:	fdiv   QWORD PTR [esi-0x5f902675]
  40afea:	repnz add eax,0xee61b733
  40aff0:	arpl   WORD PTR [edi-0x31],dx
  40aff3:	aad    0x31
  40aff5:	push   ss
  40aff6:	ds scas eax,DWORD PTR es:[edi]
  40aff8:	dec    edx
  40aff9:	adc    al,0x41
  40affb:	iret   
  40affc:	int3   
  40affd:	push   ebp
  40affe:	scas   eax,DWORD PTR es:[edi]
  40afff:	inc    ebx
  40b000:	pop    edi
  40b001:	sub    al,0x52
  40b003:	sbb    al,bl
  40b005:	jl     0x40b002
  40b007:	and    BYTE PTR [ecx-0x1f],ch
  40b00a:	mov    dl,0x88
  40b00c:	xchg   edx,eax
  40b00d:	adc    bh,BYTE PTR [ecx-0x1b805c45]
  40b013:	pop    ds
  40b014:	(bad)
  40b018:	and    esi,DWORD PTR [esp+ebx*2]
  40b01b:	imul   esp,DWORD PTR [ebp+0x79],0x3
  40b01f:	push   ebx
  40b020:	adc    al,0x2e
  40b022:	xor    edi,eax
  40b024:	and    ch,cl
  40b026:	int3   
  40b027:	push   ebx
  40b028:	push   ecx
  40b029:	mov    eax,0x764bdd48
  40b02e:	and    al,BYTE PTR ds:0x33a6d22b
  40b034:	frstor [ebp+0x6254320b]
  40b03a:	dec    ebx
  40b03b:	push   esi
  40b03c:	shr    BYTE PTR [esi-0x6ce4c5fd],cl
  40b042:	ins    DWORD PTR es:[edi],dx
  40b043:	adc    DWORD PTR [esi+esi*2+0x73b12733],edx
  40b04a:	ror    BYTE PTR [ecx-0x74],cl
  40b04d:	sti    
  40b04e:	into   
  40b04f:	add    al,BYTE PTR [ebp-0x7456f311]
  40b055:	pop    esi
  40b056:	jmp    0xa4a33982
  40b05b:	sbb    esp,esp
  40b05d:	xchg   BYTE PTR [ecx-0x1d],bh
  40b060:	repnz xchg ecx,eax
  40b062:	dec    eax
  40b063:	in     al,dx
  40b064:	pop    ecx
  40b065:	shl    BYTE PTR [eax],0x22
  40b068:	bound  eax,QWORD PTR [ecx+0x62]
  40b06b:	inc    ebp
  40b06c:	push   esi
  40b06d:	add    BYTE PTR [edx],0x9e
  40b070:	lahf   
  40b071:	mov    DWORD PTR [esi+0x3b],esp
  40b074:	jmp    0x51e5e02b
  40b079:	lock mov ah,0x12
  40b07c:	mov    bl,0x66
  40b07e:	dec    esi
  40b07f:	pop    edx
  40b080:	lods   al,BYTE PTR ds:[esi]
  40b081:	fbld   TBYTE PTR [esi-0x4c823c95]
  40b087:	xchg   esi,eax
  40b088:	shl    BYTE PTR [edi-0x6e],cl
  40b08b:	std    
  40b08c:	xor    al,0x94
  40b08e:	ins    BYTE PTR es:[edi],dx
  40b08f:	jae    0x40b077
  40b091:	pop    eax
  40b092:	retf   
  40b093:	aas    
  40b094:	out    dx,al
  40b095:	cld    
  40b096:	cmp    bl,bl
  40b098:	pop    es
  40b099:	cli    
  40b09a:	inc    ecx
  40b09b:	inc    eax
  40b09c:	loope  0x40b090
  40b09e:	sahf   
  40b09f:	cmp    al,0x27
  40b0a1:	xor    edx,DWORD PTR [ebx-0x6e687406]
  40b0a7:	ja     0x40b0fe
  40b0a9:	push   eax
  40b0aa:	or     ebp,DWORD PTR ss:[ebp-0x5e5c0990]
  40b0b1:	ret    
  40b0b2:	fld    QWORD PTR cs:[edi+0x7b1b1902]
  40b0b9:	pop    ds
  40b0ba:	pop    edi
  40b0bb:	mov    eax,ds:0x99dea4b0
  40b0c0:	retf   0xa7df
  40b0c3:	pop    ds
  40b0c4:	out    dx,eax
  40b0c5:	shr    BYTE PTR [ebx+ebx*8],0x42
  40b0c9:	test   al,0xfd
  40b0cb:	sbb    eax,0x287bde2b
  40b0d0:	punpckhbw mm3,QWORD PTR [esi]
  40b0d3:	cwde   
  40b0d4:	inc    esi
  40b0d5:	dec    edx
  40b0d6:	add    al,0x25
  40b0d8:	add    ebx,DWORD PTR [edx-0x65c16634]
  40b0de:	sbb    ebx,DWORD PTR [edx+0x6d]
  40b0e1:	int    0x82
  40b0e3:	fs std 
  40b0e5:	dec    edx
  40b0e6:	mov    esi,0x97f1233f
  40b0eb:	push   0x4fdcbe41
  40b0f0:	inc    eax
  40b0f1:	je     0x40b0ce
  40b0f3:	aam    0xa7
  40b0f5:	in     eax,0xe5
  40b0f7:	xchg   ebx,eax
  40b0f8:	push   eax
  40b0f9:	adc    BYTE PTR [edx],bl
  40b0fb:	(bad)  
  40b0fc:	ja     0x40b085
  40b0fe:	loop   0x40b133
  40b100:	push   ss
  40b101:	mov    bl,0xa
  40b103:	adc    BYTE PTR [ebx-0x1c256814],ah
  40b109:	inc    edx
  40b10a:	fdivrp st(7),st
  40b10c:	iret   
  40b10d:	fistp  DWORD PTR [esi]
  40b10f:	pop    esi
  40b110:	pop    ds
  40b111:	aad    0xc4
  40b113:	mov    edi,esp
  40b115:	dec    BYTE PTR [eax+0x289f4d93]
  40b11b:	leave  
  40b11c:	mov    dh,0x25
  40b11e:	sbb    DWORD PTR [edx],ebp
  40b120:	popa   
  40b121:	push   ebp
  40b122:	call   0xfe4:0x13dfee2
  40b129:	jl     0x40b196
  40b12b:	inc    ecx
  40b12c:	aas    
  40b12d:	aaa    
  40b12e:	lea    esp,[ecx]
  40b130:	les    edx,FWORD PTR [eax-0x7233df05]
  40b136:	je     0x40b0f6
  40b138:	cmp    eax,0x8b8cf979
  40b13d:	fwait
  40b13e:	nop
  40b13f:	jmp    0xcc62:0xdba41c30
  40b146:	into   
  40b147:	int    0xa6
  40b149:	stc    
  40b14a:	inc    esp
  40b14b:	push   0x39156c6c
  40b150:	push   ds
  40b151:	jge    0x40b11a
  40b153:	and    al,0xd2
  40b155:	aad    0x58
  40b157:	hlt    
  40b158:	shl    DWORD PTR [ebx],1
  40b15a:	inc    eax
  40b15b:	stos   DWORD PTR es:[edi],eax
  40b15c:	and    al,BYTE PTR [edx-0x4f]
  40b15f:	bswap  ecx
  40b161:	(bad)  
  40b162:	or     al,0xb
  40b164:	scas   al,BYTE PTR es:[edi]
  40b165:	adc    eax,0x903983fa
  40b16a:	jno    0x40b0ed
  40b16c:	jmp    0x329c:0x6efba7d0
  40b173:	fnstcw WORD PTR [ebx+ebx*2-0x13]
  40b177:	mov    ch,0x76
  40b179:	cmc    
  40b17a:	mov    ah,0x2
  40b17c:	test   eax,0xf6ac3072
  40b181:	and    al,0x4e
  40b183:	or     DWORD PTR [edi+0x65cae56d],edx
  40b189:	sti    
  40b18a:	mov    ebx,0x1bfb935
  40b18f:	mov    ds:0x995e009e,al
  40b194:	into   
  40b195:	cwde   
  40b196:	aas    
  40b197:	sub    ebx,DWORD PTR [edx-0x1]
  40b19a:	cwde   
  40b19b:	(bad)  
  40b19c:	or     dh,BYTE PTR [edx+0x7a]
  40b19f:	jp     0x40b162
  40b1a1:	fbld   TBYTE PTR ss:[esi]
  40b1a4:	aam    0xbf
  40b1a6:	(bad)  
  40b1a7:	or     DWORD PTR [esi-0x57f02f71],ebx
  40b1ad:	aaa    
  40b1ae:	mov    ecx,0x53cbc28e
  40b1b3:	test   bl,bh
  40b1b5:	les    ebx,FWORD PTR [ecx-0x3b98dd3b]
  40b1bb:	pop    es
  40b1bc:	and    BYTE PTR [ecx+ebp*1],ch
  40b1bf:	data16 xor al,0x1b
  40b1c2:	adc    DWORD PTR [ebp+0x59100ebc],0x35aa0702
  40b1cc:	std    
  40b1cd:	retf   
  40b1ce:	(bad)  
  40b1cf:	in     eax,0x4
  40b1d1:	fistp  WORD PTR [edi+0x3374fd97]
  40b1d7:	sub    al,0xf7
  40b1d9:	in     eax,0x44
  40b1db:	repnz fs inc eax
  40b1de:	adc    al,BYTE PTR [esi]
  40b1e0:	push   eax
  40b1e1:	pop    eax
  40b1e2:	in     al,dx
  40b1e3:	xchg   ebp,eax
  40b1e4:	and    al,BYTE PTR [ebx]
  40b1e6:	pushf  
  40b1e7:	retf   0xc686
  40b1ea:	fs jno 0x40b202
  40b1ed:	stos   DWORD PTR es:[edi],eax
  40b1ee:	(bad)  
  40b1ef:	rcr    DWORD PTR [esi+0x55cce667],cl
  40b1f5:	xchg   esi,eax
  40b1f6:	sbb    BYTE PTR [edx],dl
  40b1f8:	jno    0x40b1f7
  40b1fa:	dec    ecx
  40b1fb:	sbb    esp,DWORD PTR [ebx-0x7a6450f3]
  40b201:	test   DWORD PTR [ecx+0x48],esi
  40b204:	mov    BYTE PTR [edx+eax*8],0xb9
  40b208:	jns    0x40b19e
  40b20a:	mov    ecx,0x6dc1e45f
  40b20f:	inc    ecx
  40b210:	xor    eax,0x2dca819e
  40b215:	xor    BYTE PTR gs:[ebx-0x197e0ef3],0x9e
  40b21d:	jp     0x40b1f6
  40b21f:	inc    esi
  40b220:	push   ebp
  40b221:	ja     0x40b1d4
  40b223:	and    BYTE PTR [edi+0x322df3f2],ch
  40b229:	and    esi,DWORD PTR [edx]
  40b22b:	add    al,0x28
  40b22d:	loop   0x40b1bc
  40b22f:	and    ah,BYTE PTR [ecx-0x2bde1752]
  40b235:	push   ss
  40b236:	icebp  
  40b237:	xchg   esi,eax
  40b238:	pop    eax
  40b239:	dec    eax
  40b23a:	pop    esp
  40b23b:	int    0x57
  40b23d:	push   esi
  40b23e:	cmc    
  40b23f:	jle    0x40b2a9
  40b241:	out    dx,al
  40b242:	(bad)
  40b246:	cmc    
  40b247:	jp     0x40b1d3
  40b249:	pushf  
  40b24a:	push   edx
  40b24b:	aaa    
  40b24c:	mov    al,ds:0x1c9cb937
  40b251:	outs   dx,BYTE PTR ds:[esi]
  40b252:	jle    0x40b277
  40b254:	jb     0x40b29a
  40b256:	retf   
  40b257:	fldcw  WORD PTR [ecx-0x44]
  40b25a:	push   edi
  40b25b:	sbb    eax,0xce17b775
  40b260:	ins    BYTE PTR es:[edi],dx
  40b261:	cmp    BYTE PTR [ebx-0x27a168f0],cl
  40b267:	rcl    DWORD PTR [ebx],cl
  40b269:	data16 mov cl,cl
  40b26c:	bound  ecx,QWORD PTR [edi]
  40b26e:	and    bh,0xc1
  40b271:	rcr    DWORD PTR [ecx+0x71945056],1
  40b277:	scas   eax,DWORD PTR es:[edi]
  40b278:	mov    dl,0x9c
  40b27a:	push   ss
  40b27b:	ins    DWORD PTR es:[edi],dx
  40b27c:	xor    ebx,ebp
  40b27e:	jmp    0x5617:0xd2f4c1d4
  40b285:	xchg   edx,eax
  40b286:	jle    0x40b274
  40b288:	inc    esi
  40b289:	inc    ebp
  40b28a:	mov    ds:0x549f245,al
  40b28f:	adc    eax,0x8b5f1a51
  40b294:	jecxz  0x40b306
  40b296:	mov    ebx,0x1c5f3b2a
  40b29b:	dec    ecx
  40b29c:	sahf   
  40b29d:	outs   dx,BYTE PTR ds:[esi]
  40b29e:	(bad)
  40b2a1:	push   edi
  40b2a2:	out    dx,al
  40b2a3:	call   0xe814ada5
  40b2a8:	mov    ah,BYTE PTR [ecx+0x4b76a0df]
  40b2ae:	sbb    eax,0xc0373fa4
  40b2b3:	(bad)  
  40b2b4:	jg     0x40b2eb
  40b2b6:	les    eax,FWORD PTR [eax-0x79]
  40b2b9:	js     0x40b2e9
  40b2bb:	in     al,dx
  40b2bc:	shl    eax,0x57
  40b2bf:	cld    
  40b2c0:	pop    edi
  40b2c1:	(bad)  
  40b2c2:	pop    ss
  40b2c3:	lods   al,BYTE PTR ds:[esi]
  40b2c4:	add    al,0x8a
  40b2c6:	shl    DWORD PTR [ebx],0x31
  40b2c9:	int    0xb3
  40b2cb:	sub    eax,0x5104a21e
  40b2d0:	scas   eax,DWORD PTR es:[edi]
  40b2d1:	or     al,0x49
  40b2d3:	es and dl,al
  40b2d6:	dec    ebp
  40b2d7:	xchg   ebx,eax
  40b2d8:	and    al,0x72
  40b2da:	and    eax,0x2cacc1b9
  40b2df:	add    DWORD PTR [ebx],0xffffffc6
  40b2e2:	es pop eax
  40b2e4:	add    al,0xa2
  40b2e6:	leave  
  40b2e7:	pop    ebp
  40b2e8:	push   edi
  40b2e9:	adc    bh,BYTE PTR [edi+0x7a1aeade]
  40b2ef:	outs   dx,DWORD PTR ds:[esi]
  40b2f0:	retf   
  40b2f1:	pushf  
  40b2f2:	stc    
  40b2f3:	cld    
  40b2f4:	xlat   BYTE PTR ds:[ebx]
  40b2f5:	and    DWORD PTR gs:[eax+0x20],0xffffffd3
  40b2fa:	pop    ss
  40b2fb:	adc    eax,0x557cbaf6
  40b300:	std    
  40b301:	sub    dh,dl
  40b303:	mov    eax,0xc4655539
  40b308:	nop
  40b309:	ror    BYTE PTR [edi],0x17
  40b30c:	call   0x232b:0xcb2cc94b
  40b313:	and    esi,DWORD PTR [ebx+0x4e]
  40b316:	(bad)  
  40b317:	fwait
  40b318:	xchg   esp,eax
  40b319:	mov    eax,0xb0ebd8f4
  40b31e:	test   DWORD PTR [ecx+0x5b7320e6],ebp
  40b324:	xchg   ecx,eax
  40b325:	add    eax,eax
  40b327:	adc    eax,0x780ec375
  40b32c:	das    
  40b32d:	fwait
  40b32e:	imul   ebx,DWORD PTR [edx+ecx*4],0x2b6a359e
  40b335:	jae    0x40b359
  40b337:	xchg   esi,eax
  40b338:	ja     0x40b3a5
  40b33a:	jae    0x40b3ac
  40b33c:	xchg   edi,eax
  40b33d:	push   edx
  40b33e:	aas    
  40b33f:	inc    esp
  40b340:	adc    ebp,DWORD PTR [ebx]
  40b342:	ret    
  40b343:	adc    ebx,DWORD PTR [edx]
  40b345:	mov    cl,0x8e
  40b347:	scas   al,BYTE PTR es:[edi]
  40b348:	mov    ebx,0xd6996fcf
  40b34d:	cs pop ss
  40b34f:	pop    ecx
  40b350:	xlat   BYTE PTR ds:[ebx]
  40b351:	ins    DWORD PTR es:[edi],dx
  40b352:	mov    ecx,0xc90cc6f9
  40b357:	addr16 push ebp
  40b359:	popa   
  40b35a:	mov    edx,0x8fa50b5c
  40b35f:	cdq    
  40b360:	rcl    DWORD PTR [eax+eiz*4],1
  40b363:	jg     0x40b2ec
  40b365:	pop    ebx
  40b366:	jo     0x40b39f
  40b368:	inc    ecx
  40b369:	(bad)  
  40b36a:	ins    BYTE PTR es:[edi],dx
  40b36b:	mov    eax,ds:0xb249683a
  40b370:	mov    ds:0xc0c52f28,eax
  40b375:	add    BYTE PTR [ebp+0x1b],dh
  40b378:	mov    ebp,0x77fefbc3
  40b37d:	mov    ah,0xbb
  40b37f:	jbe    0x40b388
  40b381:	or     BYTE PTR [ebx+0x25],ah
  40b384:	push   es
  40b385:	fcmovu st,st(6)
  40b387:	daa    
  40b388:	icebp  
  40b389:	jecxz  0x40b3db
  40b38b:	sub    al,0x3e
  40b38d:	xor    ch,BYTE PTR [edx-0x19]
  40b390:	sub    BYTE PTR [edi-0x33],dl
  40b393:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b394:	push   ss
  40b395:	pop    ebp
  40b396:	in     al,dx
  40b397:	pop    edx
  40b398:	nop
  40b399:	sub    BYTE PTR [bx-0x15],ch
  40b39d:	pop    ecx
  40b39e:	jle    0x40b35e
  40b3a0:	stos   BYTE PTR es:[edi],al
  40b3a1:	in     al,dx
  40b3a2:	ret    0xda82
  40b3a5:	or     edi,ecx
  40b3a7:	js     0x40b420
  40b3a9:	cmp    DWORD PTR [ebp+0x4e37a40b],ebp
  40b3af:	mov    esp,0xa095794c
  40b3b4:	aas    
  40b3b5:	and    DWORD PTR [ebp+edx*4-0x38c99329],esp
  40b3bc:	(bad)  
  40b3be:	in     al,dx
  40b3bf:	aas    
  40b3c0:	retf   
  40b3c1:	daa    
  40b3c2:	cld    
  40b3c3:	and    eax,0x9f515104
  40b3c8:	push   ecx
  40b3c9:	jecxz  0x40b3de
  40b3cb:	add    bh,BYTE PTR [edi+ebp*4+0x76]
  40b3cf:	ret    0xb6b4
  40b3d2:	je     0x40b388
  40b3d4:	cld    
  40b3d5:	adc    al,0xcb
  40b3d7:	(bad)  
  40b3d8:	adc    eax,0xc919d2ee
  40b3dd:	xor    dl,0xa5
  40b3e0:	mov    bh,0x6f
  40b3e2:	mul    dl
  40b3e4:	mov    esp,0x61754fdd
  40b3e9:	pop    ss
  40b3ea:	inc    ecx
  40b3eb:	xchg   edx,eax
  40b3ec:	adc    DWORD PTR [esi+0x7d],edi
  40b3ef:	sub    BYTE PTR [ecx+0x2bb034ac],cl
  40b3f5:	sub    DWORD PTR [eax+0x2f382887],esi
  40b3fb:	add    al,BYTE PTR [esi-0x3]
  40b3fe:	adc    al,0xc0
  40b400:	icebp  
  40b401:	mov    dl,BYTE PTR ds:0x90415655
  40b407:	test   eax,0x56a0949d
  40b40c:	test   eax,0xa42e70a0
  40b411:	or     edi,edi
  40b413:	dec    esi
  40b414:	sbb    al,0x37
  40b416:	lock jle 0x40b485
  40b419:	pop    DWORD PTR [esi-0x45]
  40b41c:	inc    edi
  40b41d:	push   esi
  40b41e:	call   0xa4c0af84
  40b423:	test   DWORD PTR [esi+ebp*4-0x2256918e],ebx
  40b42a:	lea    edi,[ecx]
  40b42c:	sti    
  40b42d:	inc    edx
  40b42e:	test   DWORD PTR [ecx+0x26],ebp
  40b431:	sbb    al,BYTE PTR [eax+0x72cbf003]
  40b437:	or     esi,DWORD PTR [eax-0x387db3f0]
  40b43d:	out    0x4a,al
  40b43f:	push   ss
  40b440:	ret    
  40b441:	(bad)  
  40b442:	cli    
  40b443:	pop    esp
  40b444:	mov    esi,0x1522fc45
  40b449:	or     BYTE PTR [edi+eiz*1-0x37],cl
  40b44d:	loope  0x40b478
  40b44f:	jno    0x40b3e5
  40b451:	icebp  
  40b452:	in     al,dx
  40b453:	or     al,0xcb
  40b455:	cmp    al,0x3c
  40b457:	mov    cl,BYTE PTR [ebx-0xd]
  40b45a:	mov    eax,ds:0x356aab01
  40b45f:	(bad)  
  40b461:	in     al,dx
  40b462:	inc    bh
  40b464:	das    
  40b465:	adc    edi,DWORD PTR [ebx+edx*1+0xfc694f8]
  40b46c:	cdq    
  40b46d:	outs   dx,BYTE PTR ds:[esi]
  40b46e:	mov    esp,0x6a8c148b
  40b473:	pop    edx
  40b474:	xchg   esp,eax
  40b475:	int3   
  40b476:	pop    ecx
  40b477:	adc    eax,0x98db8ffe
  40b47c:	cdq    
  40b47d:	sub    al,0x41
  40b47f:	jg     0x40b461
  40b481:	je     0x40b48a
  40b483:	sub    dl,BYTE PTR [ebx]
  40b485:	xchg   edi,eax
  40b486:	jecxz  0x40b461
  40b488:	mov    al,BYTE PTR [eax-0x1904ac87]
  40b48e:	pop    edx
  40b48f:	js     0x40b430
  40b491:	mov    ch,0x2b
  40b493:	xchg   esp,eax
  40b494:	mov    dl,0xda
  40b496:	cmp    al,0x71
  40b498:	adc    BYTE PTR [eax+0x638b0420],0x62
  40b49f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4a0:	not    BYTE PTR [edx]
  40b4a2:	inc    ebp
  40b4a3:	mov    WORD PTR [edi-0x25],?
  40b4a6:	mov    ss,WORD PTR [ebx]
  40b4a8:	shr    BYTE PTR [ebx+0xf8bca7b],0x49
  40b4af:	cli    
  40b4b0:	xchg   BYTE PTR [ebx-0x28df9a89],bh
  40b4b6:	pop    ebx
  40b4b7:	jmp    0x814:0xda84fef0
  40b4be:	nop
  40b4bf:	xchg   DWORD PTR [edx-0x36],edi
  40b4c2:	ins    WORD PTR es:[edi],dx
  40b4c4:	inc    ebx
  40b4c5:	jle    0x40b507
  40b4c7:	out    dx,eax
  40b4c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4c9:	and    esp,DWORD PTR [ecx]
  40b4cb:	mov    ebp,0x49877363
  40b4d0:	mov    WORD PTR [edi-0x61],ss
  40b4d3:	es pusha 
  40b4d5:	fsub   QWORD PTR [edx-0x3e]
  40b4d8:	jp     0x40b516
  40b4da:	popf   
  40b4db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4dc:	sbb    BYTE PTR [ebp+0x14],ch
  40b4df:	pop    ebp
  40b4e0:	nop
  40b4e1:	pop    ecx
  40b4e2:	ror    DWORD PTR ds:0x503db9b4,cl
  40b4e8:	(bad)
  40b4eb:	cwde   
  40b4ec:	pushf  
  40b4ed:	cdq    
  40b4ee:	std    
  40b4ef:	repnz or al,0x92
  40b4f2:	aas    
  40b4f3:	call   0xacb996c1
  40b4f8:	jle    0x40b518
  40b4fa:	jmp    0x40b480
  40b4fc:	sar    ecx,cl
  40b4fe:	mov    ebx,0x6cd086f4
  40b503:	inc    edx
  40b504:	shl    DWORD PTR [ebx],cl
  40b506:	fimul  DWORD PTR [ebx-0xc]
  40b509:	enter  0xceeb,0x31
  40b50d:	pusha  
  40b50e:	lds    edi,FWORD PTR [esi-0x2]
  40b511:	push   0x1b
  40b513:	retf   
  40b514:	cs adc edi,0x481d5fc8
  40b51b:	mov    BYTE PTR [edi+0x6f1a65f0],dl
  40b521:	xor    eax,0x711650ea
  40b526:	push   cs
  40b527:	(bad)  
  40b528:	je     0x40b56d
  40b52a:	ret    0x4033
  40b52d:	xchg   ebx,eax
  40b52e:	and    al,0x39
  40b530:	ins    BYTE PTR es:[edi],dx
  40b531:	rcl    DWORD PTR [edx],cl
  40b533:	jne    0x40b507
  40b535:	out    dx,eax
  40b536:	lock leave 
  40b538:	inc    esi
  40b539:	push   es
  40b53a:	fisttp QWORD PTR [edi]
  40b53c:	mov    edx,0xadde0153
  40b541:	retf   
  40b542:	sbb    BYTE PTR [ecx-0x1451c121],0x69
  40b549:	aam    0xc8
  40b54b:	dec    esp
  40b54c:	fs addr16 pushf 
  40b54f:	and    cl,bh
  40b551:	scas   al,BYTE PTR es:[edi]
  40b552:	pop    eax
  40b553:	outs   dx,BYTE PTR ds:[esi]
  40b554:	test   BYTE PTR [edx-0xdc8f58c],0x42
  40b55b:	mov    ebp,ss
  40b55d:	loope  0x40b56a
  40b55f:	(bad)  
  40b561:	ficom  WORD PTR [ecx+0x4674bca3]
  40b567:	loopne 0x40b5a4
  40b569:	dec    ebp
  40b56a:	mov    al,ds:0x10ecbbbe
  40b56f:	mov    cl,BYTE PTR [ecx]
  40b571:	(bad)  
  40b572:	pop    edi
  40b573:	lods   al,BYTE PTR ds:[esi]
  40b574:	mov    eax,0x54cdabc6
  40b579:	adc    dl,0x72
  40b57c:	in     al,0x4e
  40b57e:	cdq    
  40b57f:	mov    ch,BYTE PTR [eax-0x75595e7f]
  40b585:	cdq    
  40b586:	sub    dl,bh
  40b588:	add    dh,BYTE PTR ds:0xfafaf425
  40b58e:	or     eax,0x8ca175c3
  40b593:	mov    ebx,0xedf097c9
  40b598:	pop    ss
  40b599:	mov    ebp,ss
  40b59b:	icebp  
  40b59c:	pusha  
  40b59d:	outs   dx,DWORD PTR ds:[esi]
  40b59e:	dec    esp
  40b59f:	xor    dl,BYTE PTR [ebx-0x107a348f]
  40b5a5:	loop   0x40b589
  40b5a7:	(bad)  
  40b5a8:	dec    esi
  40b5a9:	or     BYTE PTR [edi-0xa],0xe3
  40b5ad:	xchg   esi,eax
  40b5ae:	add    BYTE PTR ds:[esp+edi*1-0x71],ah
  40b5b3:	jmp    0xae22:0x47019d20
  40b5ba:	or     eax,ebx
  40b5bc:	add    ebx,esp
  40b5be:	jge    0x40b5e9
  40b5c0:	retf   
  40b5c1:	cmp    DWORD PTR [eax],ecx
  40b5c3:	je     0x40b627
  40b5c5:	mov    al,ds:0x94c0ca57
  40b5ca:	or     DWORD PTR [esi+0x6db27bf6],esp
  40b5d0:	sub    al,0x4b
  40b5d2:	mov    dh,0xad
  40b5d4:	ja     0x40b61b
  40b5d6:	call   0x15a6:0x917482b9
  40b5dd:	push   edi
  40b5de:	jle    0x40b619
  40b5e0:	clc    
  40b5e1:	shl    DWORD PTR [esp+eax*8],0x31
  40b5e5:	pop    edx
  40b5e6:	ds cmp ebp,ecx
  40b5e9:	or     BYTE PTR [eax],0x49
  40b5ec:	retf   
  40b5ed:	sub    DWORD PTR [esi],ebp
  40b5ef:	push   esp
  40b5f0:	jmp    0x189a956e
  40b5f5:	xor    eax,DWORD PTR [ebp+0x1d]
  40b5f8:	neg    BYTE PTR [edx-0x163e567c]
  40b5fe:	fwait
  40b5ff:	jle    0x40b583
  40b601:	pop    ss
  40b602:	int    0x73
  40b604:	das    
  40b605:	mov    ds:0x841c6225,eax
  40b60a:	(bad)  
  40b60b:	(bad)  
  40b60c:	daa    
  40b60d:	sbb    al,0x97
  40b60f:	arpl   WORD PTR [esi],bx
  40b611:	inc    edx
  40b612:	mov    ebx,0x7bae4188
  40b617:	enter  0x1ceb,0x91
  40b61b:	add    DWORD PTR [eax+0x7f],ecx
  40b61e:	mov    dh,0x35
  40b620:	pop    ds
  40b621:	mov    edx,0x2b4cc799
  40b626:	shl    DWORD PTR [edi+0x72],cl
  40b629:	ins    BYTE PTR es:[edi],dx
  40b62a:	jae    0x40b6a0
  40b62c:	ds or  al,0x6f
  40b62f:	pop    eax
  40b630:	inc    ebx
  40b631:	push   ss
  40b632:	(bad)  
  40b633:	adc    DWORD PTR [ecx+0x744470f],eax
  40b639:	push   eax
  40b63a:	and    DWORD PTR [edi-0x3a],ebx
  40b63d:	add    esi,DWORD PTR [esi-0x21f5e52c]
  40b643:	dec    edx
  40b644:	repnz fldcw WORD PTR es:[ebx+0x284ca7b2]
  40b64c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b64d:	inc    ebx
  40b64e:	xor    DWORD PTR ds:[esi-0x4],edi
  40b652:	std    
  40b653:	jne    0x40b6ac
  40b655:	dec    edi
  40b656:	fstp   DWORD PTR [ebx+ecx*8+0x42e2e899]
  40b65d:	aaa    
  40b65e:	div    BYTE PTR [esi+0x7b]
  40b661:	in     eax,dx
  40b662:	bt     DWORD PTR [ebx+eiz*8+0x715b730b],edx
  40b66a:	popf   
  40b66b:	mov    BYTE PTR [edx-0x442ae6be],dh
  40b671:	leave  
  40b672:	in     al,dx
  40b673:	add    edi,ebx
  40b675:	jbe    0x40b623
  40b677:	xchg   ebx,eax
  40b678:	clc    
  40b679:	je     0x40b6bd
  40b67b:	or     al,0x3a
  40b67d:	push   0xffffffa7
  40b67f:	push   ss
  40b680:	sub    BYTE PTR [ebp-0x17],dh
  40b683:	push   eax
  40b684:	push   ebp
  40b685:	push   ecx
  40b686:	clc    
  40b687:	call   0x8c0c3fc8
  40b68c:	gs pushf 
  40b68e:	aad    0x7a
  40b690:	into   
  40b691:	mov    ah,0x2a
  40b693:	and    eax,0x18bcfb68
  40b698:	pop    ss
  40b699:	popa   
  40b69a:	dec    ebp
  40b69b:	sti    
  40b69c:	sbb    DWORD PTR [edi+0x1b541ab4],0x4f76898
  40b6a6:	lods   eax,DWORD PTR ds:[esi]
  40b6a7:	jno    0x40b6a1
  40b6a9:	ja     0x40b6ae
  40b6ab:	jne    0x40b63b
  40b6ad:	mov    ds:0x47d36c92,eax
  40b6b2:	bound  ebx,QWORD PTR ds:0xbc155b3b
  40b6b8:	sub    WORD PTR [ebx],dx
  40b6bb:	lock aam 0x46
  40b6be:	inc    ebx
  40b6bf:	mov    esi,0xd04f1f85
  40b6c4:	mov    ah,0xbd
  40b6c6:	cmp    ecx,DWORD PTR [esi-0x1c]
  40b6c9:	aas    
  40b6ca:	mov    bl,0x7a
  40b6cc:	add    BYTE PTR [esi+0x315aadf1],0xe4
  40b6d3:	jmp    0x40b6e1
  40b6d5:	push   cs
  40b6d6:	lds    esi,FWORD PTR ds:0x9c82954c
  40b6dc:	add    al,0x38
  40b6de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6df:	push   ds
  40b6e0:	mov    ecx,0xbd167a2b
  40b6e5:	xor    al,ch
  40b6e7:	mov    ecx,0x3eddb70f
  40b6ec:	inc    ebp
  40b6ed:	inc    ecx
  40b6ee:	lahf   
  40b6ef:	clc    
  40b6f0:	push   ds
  40b6f1:	(bad)
  40b6f5:	mov    ecx,0xd099815e
  40b6fa:	xchg   dl,ah
  40b6fc:	push   esi
  40b6fd:	fistp  WORD PTR [eax-0x5988e07d]
  40b703:	test   DWORD PTR [ebp+0x14],0xcdf9e757
  40b70a:	test   BYTE PTR [eax-0x4bdefcf6],0xde
  40b711:	push   0xffffff97
  40b713:	(bad)  
  40b714:	lods   al,BYTE PTR ds:[esi]
  40b715:	or     dl,dl
  40b717:	test   al,0x9f
  40b719:	dec    eax
  40b71a:	jb     0x40b774
  40b71c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b71d:	cmp    al,0x38
  40b71f:	xor    al,0xea
  40b721:	cs cwde 
  40b723:	enter  0xdf34,0x6e
  40b727:	shl    BYTE PTR [edx-0x12],0x20
  40b72b:	inc    ebp
  40b72c:	push   edx
  40b72d:	adc    DWORD PTR [ebp-0x74fbf309],0xffffffe7
  40b734:	xchg   ecx,eax
  40b735:	push   esi
  40b736:	mov    ds:0xd6430b52,al
  40b73b:	arpl   WORD PTR [edx+eiz*4-0xc],bp
  40b73f:	mov    ebp,0x8a0753fe
  40b744:	or     DWORD PTR [ebp+0x35a14891],edx
  40b74a:	psrad  mm6,mm3
  40b74d:	mov    dl,0x48
  40b74f:	pop    es
  40b750:	inc    eax
  40b751:	push   ds
  40b752:	sbb    eax,0xce0fc6d4
  40b757:	sub    BYTE PTR [ecx+0x8],cl
  40b75a:	frstor ds:0x9fdc9274
  40b760:	xor    DWORD PTR [ebp-0xd],esp
  40b763:	pop    edi
  40b764:	clc    
  40b765:	stos   BYTE PTR es:[edi],al
  40b766:	ds cdq 
  40b768:	pop    esp
  40b769:	imul   esi,DWORD PTR [ebp+0x66f4bfaa],0xcbb3e4a1
  40b773:	pop    esi
  40b774:	dec    BYTE PTR [eax]
  40b776:	adc    ch,BYTE PTR [edi+0x42]
  40b779:	mov    esi,0x9b359c3e
  40b77e:	shr    DWORD PTR ds:0x6f580d69,cl
  40b784:	mov    ebp,0x11227d08
  40b789:	lock fcomp st(6)
  40b78c:	popa   
  40b78d:	push   ds
  40b78e:	mov    ecx,0xb4f74839
  40b793:	aas    
  40b794:	adc    cl,BYTE PTR [edi+ecx*1+0x29]
  40b798:	out    0x2f,al
  40b79a:	mov    ebp,0xf1acbb42
  40b79f:	retf   
  40b7a0:	mov    cl,0x47
  40b7a2:	xchg   BYTE PTR [ebx],dh
  40b7a4:	scas   eax,DWORD PTR es:[edi]
  40b7a5:	push   0xe0d9a806
  40b7aa:	xor    eax,0xba740c85
  40b7af:	sbb    ebp,DWORD PTR [edi-0x5bf90dc7]
  40b7b5:	hlt    
  40b7b6:	inc    edx
  40b7b7:	mov    edi,0xe9d45361
  40b7bc:	inc    edi
  40b7bd:	ror    bh,cl
  40b7bf:	sub    cl,dl
  40b7c1:	stos   DWORD PTR es:[edi],eax
  40b7c2:	ja     0x40b759
  40b7c4:	mov    edi,0xb5fa8870
  40b7c9:	jmp    0x40b751
  40b7cb:	dec    edx
  40b7cc:	loop   0x40b84c
  40b7ce:	push   0x597ebf63
  40b7d3:	int3   
  40b7d4:	push   0x1
  40b7d6:	dec    ebx
  40b7d7:	add    BYTE PTR ds:0xcdc0e090,bl
  40b7dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7de:	(bad)  
  40b7df:	int    0xc9
  40b7e1:	leave  
  40b7e2:	mov    DWORD PTR [edi],0xbf919163
  40b7e8:	cmp    al,0xb0
  40b7ea:	jne    0x40b7fc
  40b7ec:	lea    esp,[esi+0xc]
  40b7ef:	sub    edi,DWORD PTR [eax-0x23031170]
  40b7f5:	jne    0x40b7b8
  40b7f7:	scas   eax,DWORD PTR es:[edi]
  40b7f8:	push   ecx
  40b7f9:	mov    ecx,0x60671fff
  40b7fe:	sub    cl,BYTE PTR [eax]
  40b800:	test   BYTE PTR [edx+0x4e493388],ah
  40b806:	daa    
  40b807:	out    dx,al
  40b808:	addr16 rcl bl,0x61
  40b80c:	cmp    ch,BYTE PTR [edi]
  40b80e:	mov    edx,0x12122b57
  40b813:	fdiv   QWORD PTR [edx+0x72fc975]
  40b819:	cld    
  40b81a:	push   edx
  40b81b:	xchg   ebx,eax
  40b81c:	mov    ah,0x40
  40b81e:	mov    eax,0x690f10f9
  40b823:	xchg   ecx,esi
  40b825:	inc    ebp
  40b826:	in     eax,dx
  40b827:	xchg   edx,eax
  40b828:	call   0x46f21cbe
  40b82d:	lock loopne 0x40b888
  40b830:	dec    edx
  40b831:	jne    0x40b7d0
  40b833:	scas   eax,DWORD PTR es:[edi]
  40b834:	mov    esi,0x34c61e4
  40b839:	mul    BYTE PTR [eax+0x50]
  40b83c:	xchg   ecx,eax
  40b83d:	sub    al,0x94
  40b83f:	mov    DWORD PTR [ecx],esp
  40b841:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b842:	mov    esi,0x1e128f3c
  40b847:	fidivr DWORD PTR [esi+0x14b90e3c]
  40b84d:	imul   esi,ecx,0xffffffa5
  40b850:	fwait
  40b851:	inc    ecx
  40b852:	(bad)  
  40b853:	sbb    esp,ecx
  40b855:	data16 jmp 0x40b8ba
  40b858:	sub    al,0x88
  40b85a:	sti    
  40b85b:	cld    
  40b85c:	lahf   
  40b85d:	and    eax,0xcffcb29f
  40b862:	jne    0x40b81f
  40b864:	shl    DWORD PTR [ebp-0x35de9cfc],1
  40b86a:	(bad)  
  40b86b:	fwait
  40b86c:	push   0x78
  40b86e:	loopne 0x40b8cf
  40b870:	push   esp
  40b871:	daa    
  40b872:	sbb    eax,0x27158d30
  40b877:	lock inc ebp
  40b879:	inc    edi
  40b87a:	ins    BYTE PTR es:[edi],dx
  40b87b:	cmp    eax,0xa402b9f4
  40b880:	call   0x362306ed
  40b885:	mov    eax,0x19e9be9f
  40b88a:	dec    ebp
  40b88b:	jl     0x40b80e
  40b88d:	push   cs
  40b88e:	mov    ebx,0xfb18750a
  40b893:	cdq    
  40b894:	cwde   
  40b895:	or     bl,BYTE PTR [ebp+ebx*1+0x1f]
  40b899:	imul   esp,ebp,0x1e
  40b89c:	pushf  
  40b89d:	repz cmp esi,0xffffffc3
  40b8a1:	and    esi,ecx
  40b8a3:	inc    esi
  40b8a4:	in     eax,dx
  40b8a5:	mov    ecx,0x8fce4b27
  40b8aa:	pusha  
  40b8ab:	sbb    eax,0x9b48f233
  40b8b0:	rcl    DWORD PTR [ebx],cl
  40b8b2:	sahf   
  40b8b3:	inc    edi
  40b8b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8b5:	(bad)
  40b8b9:	ds mov edi,0x9948464d
  40b8bf:	inc    esp
  40b8c0:	add    DWORD PTR [edx+edi*1-0x18465e03],0xffffff95
  40b8c8:	mov    ebp,0x4bb6a6bf
  40b8cd:	sub    edi,edi
  40b8cf:	mov    WORD PTR [edx+0x28acad9b],ds
  40b8d5:	pop    ss
  40b8d6:	hlt    
  40b8d7:	mov    bl,0xf1
  40b8d9:	aam    0x26
  40b8db:	xchg   esp,eax
  40b8dc:	and    DWORD PTR ds:0xe925b557,edi
  40b8e2:	cli    
  40b8e3:	jne    0x40b8cd
  40b8e5:	jno    0x40b8fb
  40b8e7:	jb     0x40b8e5
  40b8e9:	jge    0x40b86e
  40b8eb:	cmp    DWORD PTR [ecx-0x5f],0xf0397bae
  40b8f2:	pop    edi
  40b8f3:	ins    DWORD PTR es:[edi],dx
  40b8f4:	and    DWORD PTR [eax-0x63],edx
  40b8f7:	daa    
  40b8f8:	push   0xf1f74e73
  40b8fd:	jae    0x40b940
  40b8ff:	sbb    al,0x86
  40b901:	ret    0x96ec
  40b904:	ins    BYTE PTR es:[edi],dx
  40b905:	lods   eax,DWORD PTR ds:[esi]
  40b906:	ja     0x40b921
  40b908:	cdq    
  40b909:	inc    eax
  40b90a:	jl     0x40b90c
  40b90c:	cmp    eax,DWORD PTR [ebx-0x41]
  40b90f:	int3   
  40b910:	push   es
  40b911:	cmp    dl,BYTE PTR [esi+0x61]
  40b914:	xor    al,BYTE PTR [ecx+0x146b776f]
  40b91a:	cmp    al,0xb6
  40b91c:	jecxz  0x40b8ac
  40b91e:	pop    ds
  40b91f:	inc    eax
  40b920:	das    
  40b921:	repz cmp cl,ch
  40b924:	jmp    0x4a594084
  40b929:	stos   DWORD PTR es:[edi],eax
  40b92a:	jp     0x40b975
  40b92c:	sub    ch,BYTE PTR [esi-0x621cca1f]
  40b932:	adc    al,0x44
  40b934:	rcr    DWORD PTR [esi+eax*2],cl
  40b937:	call   0xd6bff4b7
  40b93c:	fadd   st,st(1)
  40b93e:	scas   al,BYTE PTR es:[edi]
  40b93f:	ret    
  40b940:	dec    ebp
  40b941:	xor    edi,edx
  40b943:	cdq    
  40b944:	test   al,0xeb
  40b946:	jo     0x40b8da
  40b948:	cmp    eax,0x18f96820
  40b94d:	mov    esi,0x89fd9906
  40b952:	not    DWORD PTR [ebp-0x537fbd3b]
  40b958:	icebp  
  40b959:	das    
  40b95a:	pusha  
  40b95b:	pop    edx
  40b95c:	sbb    BYTE PTR [esi+eiz*4-0x7e],0xf3
  40b961:	mov    ah,0x62
  40b963:	ja     0x40b9dc
  40b965:	mov    al,0xd5
  40b967:	hlt    
  40b968:	popa   
  40b969:	pop    edx
  40b96a:	test   eax,0xc91a4b0a
  40b96f:	cli    
  40b970:	das    
  40b971:	and    DWORD PTR ds:0xf3cd502,esi
  40b977:	jmp    0x129d51f9
  40b97c:	jae    0x40b947
  40b97e:	fsubr  QWORD PTR [edi]
  40b980:	pop    ebx
  40b981:	aaa    
  40b982:	stos   DWORD PTR es:[edi],eax
  40b983:	daa    
  40b984:	(bad)  
  40b985:	xchg   ebp,eax
  40b986:	jo     0x40b9f6
  40b988:	out    0xa2,eax
  40b98a:	aam    0x50
  40b98c:	test   al,0x92
  40b98e:	lock mov al,ds:0x6893c08d
  40b994:	pop    esi
  40b995:	in     eax,0x76
  40b997:	pusha  
  40b998:	mov    edx,0xb6a23ef6
  40b99d:	adc    al,0x0
  40b99f:	pop    esp
  40b9a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9a2:	cmc    
  40b9a3:	pop    edi
  40b9a4:	pop    eax
  40b9a5:	fldcw  WORD PTR [ecx-0xeeb6e0d]
  40b9ab:	sub    bh,BYTE PTR [ecx-0x79]
  40b9ae:	xchg   esp,eax
  40b9af:	ret    0xc79b
  40b9b2:	sbb    eax,0x2ebf9051
  40b9b7:	arpl   WORD PTR [eax],ax
  40b9b9:	pushf  
  40b9ba:	int3   
  40b9bb:	inc    esp
  40b9bc:	push   ebx
  40b9bd:	or     cl,BYTE PTR [ebx]
  40b9bf:	adc    ch,BYTE PTR [edi+0x27]
  40b9c2:	or     BYTE PTR [eax+0x2776b432],dl
  40b9c8:	xchg   ebp,eax
  40b9c9:	pop    edi
  40b9ca:	adc    al,0x99
  40b9cc:	(bad)  
  40b9cd:	mov    al,ds:0x9999b21f
  40b9d2:	jmp    0xca6dec04
  40b9d7:	xchg   esp,ebp
  40b9d9:	dec    eax
  40b9da:	adc    ebx,DWORD PTR [esi+0x39]
  40b9dd:	jge    0x40b991
  40b9df:	xor    edx,eax
  40b9e1:	test   al,0x24
  40b9e3:	adc    edi,eax
  40b9e5:	pushf  
  40b9e6:	enter  0xfbb,0xb8
  40b9ea:	sbb    eax,edi
  40b9ec:	outs   dx,BYTE PTR ds:[esi]
  40b9ed:	or     bl,bh
  40b9ef:	hlt    
  40b9f0:	in     eax,0x2b
  40b9f2:	ret    0xaec8
  40b9f5:	push   esp
  40b9f6:	mov    ds:0x6ff83c5d,al
  40b9fb:	sub    ch,BYTE PTR [ebp+0x2e]
  40b9fe:	popa   
  40b9ff:	pop    eax
  40ba00:	repnz sbb BYTE PTR [edi-0x18baf2ab],ch
  40ba07:	jno    0x40ba49
  40ba09:	cs pusha 
  40ba0b:	adc    DWORD PTR [eax+eax*1+0x11775436],0x1bbb6999
  40ba16:	div    dh
  40ba18:	push   es
  40ba19:	pop    ebp
  40ba1a:	and    al,0x19
  40ba1c:	add    esi,DWORD PTR [esi+0x4b]
  40ba1f:	aas    
  40ba20:	in     al,0x4b
  40ba22:	sub    bl,dl
  40ba24:	popa   
  40ba25:	mov    ds,WORD PTR [eax+0x1800700c]
  40ba2b:	pop    ds
  40ba2c:	fs aas 
  40ba2e:	fadd   DWORD PTR [ebp-0x79]
  40ba31:	adc    DWORD PTR [edi],0x321f334c
  40ba37:	aad    0x17
  40ba39:	dec    eax
  40ba3a:	push   ebp
  40ba3b:	and    DWORD PTR [ebx-0x2a],ebx
  40ba3e:	stc    
  40ba3f:	xor    eax,edi
  40ba41:	shl    BYTE PTR [ecx-0x3a235fa4],0x82
  40ba48:	ds es sbb al,0xa2
  40ba4c:	sbb    DWORD PTR [edx+0x42213bfb],ebx
  40ba52:	adc    cl,BYTE PTR [esi+0xa82dad4]
  40ba58:	std    
  40ba59:	xchg   ebx,eax
  40ba5a:	inc    esi
  40ba5b:	call   0xa16fda20
  40ba60:	lock out 0xca,eax
  40ba63:	icebp  
  40ba64:	in     al,0xdb
  40ba66:	not    al
  40ba68:	sti    
  40ba69:	push   esi
  40ba6a:	mov    eax,ds:0x370d9078
  40ba6f:	inc    eax
  40ba70:	adc    esi,ebx
  40ba72:	cdq    
  40ba73:	stc    
  40ba74:	aam    0x86
  40ba76:	rcr    DWORD PTR [edx+0x7e],0x98
  40ba7a:	mov    ch,0xfa
  40ba7c:	xor    ah,bl
  40ba7e:	sub    bl,BYTE PTR [edi+0x74]
  40ba81:	or     dh,bl
  40ba83:	dec    esi
  40ba84:	aas    
  40ba85:	scas   eax,DWORD PTR es:[edi]
  40ba86:	push   ebx
  40ba87:	popf   
  40ba88:	and    DWORD PTR [esi+edi*4-0x13],ecx
  40ba8c:	popf   
  40ba8d:	xor    bl,BYTE PTR [ebx]
  40ba8f:	xchg   esi,eax
  40ba90:	xchg   edx,eax
  40ba91:	and    DWORD PTR [eax-0x64ea1011],eax
  40ba97:	repnz hlt 
  40ba99:	xor    DWORD PTR [esi],edx
  40ba9b:	xchg   BYTE PTR [eax+0x2],ah
  40ba9e:	cmc    
  40ba9f:	adc    ecx,DWORD PTR [edi]
  40baa1:	or     eax,0x52933b55
  40baa6:	mov    cl,0xa5
  40baa8:	imul   DWORD PTR [esp+edx*2]
  40baab:	(bad)  
  40baac:	mov    DWORD PTR [edi*4-0x5edbdff2],0x9e2762cc
  40bab7:	push   esi
  40bab8:	out    0x50,al
  40baba:	in     al,dx
  40babb:	push   0x8
  40babd:	test   edx,esi
  40babf:	xchg   dl,ch
  40bac1:	push   edi
  40bac2:	mov    ah,0x30
  40bac4:	not    BYTE PTR ds:0x34224975
  40baca:	fbld   TBYTE PTR [ebp+0xb]
  40bacd:	rcr    bh,cl
  40bacf:	jns    0x40bb4d
  40bad1:	mov    al,0x7c
  40bad3:	sbb    eax,0x68a1fdb4
  40bad8:	into   
  40bad9:	cli    
  40bada:	sbb    cl,BYTE PTR [edx-0x51]
  40badd:	fwait
  40bade:	sti    
  40badf:	repnz (bad) 
  40bae1:	xlat   BYTE PTR ds:[ebx]
  40bae2:	cld    
  40bae3:	fidivr WORD PTR [ebp+0x2fe758ce]
  40bae9:	in     eax,0x79
  40baeb:	sbb    DWORD PTR [edx-0x6dfd1211],ebp
  40baf1:	test   BYTE PTR [edi-0x2d91c4bd],cl
  40baf7:	dec    edi
  40baf8:	ficomp WORD PTR [ebp+0x6b]
  40bafb:	push   eax
  40bafc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bafd:	out    0x17,eax
  40baff:	ss jbe 0x40bb0f
  40bb02:	adc    esi,esp
  40bb04:	or     eax,0xc1ebcb0
  40bb09:	or     bh,BYTE PTR [ebx-0x34]
  40bb0c:	xor    eax,ecx
  40bb0e:	cdq    
  40bb0f:	pusha  
  40bb10:	rol    BYTE PTR [esi+esi*2-0x7d872b1],0x24
  40bb18:	adc    BYTE PTR [ecx],al
  40bb1a:	call   0x67b731b0
  40bb1f:	mov    esp,0xb2c2d393
  40bb24:	sub    cl,BYTE PTR ds:[ecx]
  40bb27:	mov    ebp,0x753267f4
  40bb2c:	push   edx
  40bb2d:	pop    esi
  40bb2e:	iret   
  40bb2f:	inc    edx
  40bb30:	xchg   edi,eax
  40bb31:	test   al,0xe3
  40bb33:	or     al,ch
  40bb35:	cli    
  40bb36:	add    BYTE PTR [ecx+0x26bd29f8],bh
  40bb3c:	dec    ebp
  40bb3d:	pop    ebp
  40bb3e:	xchg   DWORD PTR [esi],edi
  40bb40:	lock inc ebp
  40bb42:	out    0x6f,al
  40bb44:	mov    ecx,0xa0d7f784
  40bb49:	pop    esp
  40bb4a:	mov    ch,0x83
  40bb4c:	dec    esi
  40bb4d:	aad    0xf6
  40bb4f:	push   0x4f
  40bb51:	adc    al,0xbf
  40bb53:	fbstp  TBYTE PTR [edi+0x6d]
  40bb56:	rcr    DWORD PTR [esi-0x469b60f9],cl
  40bb5c:	es stc 
  40bb5e:	cmc    
  40bb5f:	imul   ebp,DWORD PTR [ebp-0x6932dffd],0x7c
  40bb66:	add    cl,dl
  40bb68:	jnp    0x40baff
  40bb6a:	or     eax,0xc54ac9f1
  40bb6f:	dec    esp
  40bb70:	xor    cl,ah
  40bb72:	aam    0x7a
  40bb74:	addr16 pop es
  40bb76:	xor    ecx,0xffffffdc
  40bb79:	test   DWORD PTR [eax-0x48606946],ecx
  40bb7f:	push   0xd0c348b7
  40bb84:	int    0x56
  40bb86:	fs inc ebp
  40bb88:	fadd   st,st(6)
  40bb8a:	cmp    DWORD PTR [edi+ebp*4-0x77ebcfb3],ebp
  40bb91:	mov    cs,WORD PTR [ebx]
  40bb93:	xor    esp,DWORD PTR ds:0xf3591969
  40bb99:	push   es
  40bb9a:	or     BYTE PTR [edx-0x39],dh
  40bb9d:	nop
  40bb9e:	sbb    BYTE PTR [eax+0x16],0x69
  40bba2:	mov    ecx,0x8629acdb
  40bba7:	mov    ds:0x9425da1,eax
  40bbac:	stos   DWORD PTR es:[edi],eax
  40bbad:	in     eax,dx
  40bbae:	sub    ebp,edx
  40bbb0:	fnsave [edi+eiz*1-0xe]
  40bbb4:	retf   0x7ad7
  40bbb7:	sbb    ecx,ecx
  40bbb9:	xchg   esp,eax
  40bbba:	adc    DWORD PTR [ebp+0x1b],edx
  40bbbd:	mov    al,0x6b
  40bbbf:	lods   al,BYTE PTR ds:[esi]
  40bbc0:	and    al,0x9d
  40bbc2:	add    bh,BYTE PTR [ebx-0x3e368250]
  40bbc8:	imul   ebx,DWORD PTR [esi*2+0xa522404],0xfffffffa
  40bbd0:	cmp    eax,eax
  40bbd2:	(bad)  
  40bbd3:	push   0xfffffffd
  40bbd5:	dec    bx
  40bbd7:	loope  0x40bb79
  40bbd9:	cdq    
  40bbda:	dec    edx
  40bbdb:	sbb    eax,DWORD PTR [ebp+0x17]
  40bbde:	repnz push esi
  40bbe0:	sub    ebx,DWORD PTR [eax+edx*1]
  40bbe3:	xchg   edx,eax
  40bbe4:	ja     0x40bbf1
  40bbe6:	dec    ebx
  40bbe7:	push   ecx
  40bbe8:	clc    
  40bbe9:	push   ebp
  40bbea:	cmp    dh,BYTE PTR [ebx]
  40bbec:	leave  
  40bbed:	jmp    DWORD PTR [ebx+0x4ed49e74]
  40bbf3:	shl    DWORD PTR [esp+ebp*2],cl
  40bbf6:	lods   al,BYTE PTR ds:[esi]
  40bbf7:	push   eax
  40bbf8:	js     0x40bb9a
  40bbfa:	or     al,0x1b
  40bbfc:	or     ebp,DWORD PTR ds:0xa76e2db4
  40bc02:	mov    WORD PTR [ebx-0x3715bd87],gs
  40bc08:	stos   DWORD PTR es:[edi],eax
  40bc09:	dec    ebp
  40bc0a:	dec    ecx
  40bc0b:	or     al,0x61
  40bc0d:	jmp    0x40bc30
  40bc0f:	push   edx
  40bc10:	call   0xd83a:0x9100ffec
  40bc17:	shr    BYTE PTR [ecx-0x74],1
  40bc1a:	jo     0x40bc2a
  40bc1c:	dec    ecx
  40bc1d:	dec    edx
  40bc1e:	xor    eax,0xde006907
  40bc23:	out    0xc1,eax
  40bc25:	cmp    eax,0x152480ec
  40bc2a:	jns    0x40bc77
  40bc2c:	out    dx,eax
  40bc2d:	inc    BYTE PTR [ecx+0x41]
  40bc30:	jo     0x40bbbb
  40bc32:	and    BYTE PTR [esi-0x7dcbdaf7],bl
  40bc38:	test   eax,0xccc87836
  40bc3d:	aaa    
  40bc3e:	and    DWORD PTR [edi-0x5f],0xb3d600d1
  40bc45:	dec    esi
  40bc46:	xor    eax,0x158a1dbf
  40bc4b:	inc    esp
  40bc4c:	inc    ebp
  40bc4d:	and    al,BYTE PTR [eax-0x73]
  40bc50:	loopne 0x40bc2d
  40bc52:	push   ss
  40bc53:	je     0x40bbd9
  40bc55:	mov    cl,0x32
  40bc57:	inc    esp
  40bc58:	pop    ebp
  40bc59:	xor    DWORD PTR [ebx],edx
  40bc5b:	pop    ecx
  40bc5c:	pop    esi
  40bc5d:	dec    ebp
  40bc5e:	inc    edx
  40bc5f:	aam    0xce
  40bc61:	mov    ds:0x371fbda8,eax
  40bc66:	cmovge ecx,DWORD PTR [esi+esi*1]
  40bc6a:	cmp    eax,DWORD PTR [ebp-0x47afba60]
  40bc70:	xor    BYTE PTR [edi+0x60],bh
  40bc73:	test   al,0xd5
  40bc75:	daa    
  40bc76:	div    BYTE PTR [eax-0x27]
  40bc79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc7a:	add    eax,DWORD PTR [ebx]
  40bc7c:	adc    BYTE PTR [esi-0x53],0xa8
  40bc80:	loope  0x40bc66
  40bc82:	mov    al,ds:0x21c7e2fd
  40bc87:	dec    esi
  40bc88:	je     0x40bcd4
  40bc8a:	pop    ds
  40bc8b:	mov    ebx,DWORD PTR [esi+0x7c]
  40bc8e:	or     dh,BYTE PTR [ebp-0x54]
  40bc91:	dec    ebx
  40bc92:	cvtpi2ps xmm0,QWORD PTR ds:0xb13f4e52
  40bc99:	sti    
  40bc9a:	les    esi,FWORD PTR [ebx+ebp*1]
  40bc9d:	inc    DWORD PTR [ebx+0x69d46f5a]
  40bca3:	aam    0x17
  40bca5:	dec    eax
  40bca6:	xor    esp,DWORD PTR [esi]
  40bca8:	ror    BYTE PTR [ebx-0x45],1
  40bcab:	dec    ecx
  40bcac:	lock in eax,dx
  40bcae:	xor    DWORD PTR [ebx+ecx*8+0x5e0efd4d],ebx
  40bcb5:	jbe    0x40bd2a
  40bcb7:	adc    esi,DWORD PTR fs:[edx-0x4307619e]
  40bcbe:	ret    
  40bcbf:	push   edi
  40bcc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcc1:	je     0x40bcd8
  40bcc3:	jecxz  0x40bcae
  40bcc5:	inc    esi
  40bcc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcc7:	xor    ebx,DWORD PTR [eax-0x77b70ff3]
  40bccd:	jl     0x40bcd2
  40bccf:	xchg   ebp,eax
  40bcd0:	out    0x20,al
  40bcd2:	rcpps  xmm6,xmm2
  40bcd5:	mov    edi,0xbb7ad888
  40bcda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcdb:	dec    esp
  40bcdc:	test   eax,0x19de69c4
  40bce1:	sub    al,BYTE PTR [ebp-0x2617dde7]
  40bce7:	dec    ebx
  40bce8:	fnstenv [esi*4+0x4e3c161d]
  40bcef:	mov    bl,0xc3
  40bcf1:	jns    0x40bc96
  40bcf3:	mov    bh,0xb4
  40bcf5:	sbb    eax,0x51f7c7cb
  40bcfa:	popa   
  40bcfb:	adc    DWORD PTR [ecx-0x42],ebp
  40bcfe:	shl    BYTE PTR [esi-0x3c],0x14
  40bd02:	inc    ebp
  40bd03:	push   ebx
  40bd04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd05:	(bad)  
  40bd06:	fsubr  QWORD PTR [esi]
  40bd08:	call   FWORD PTR [eax-0x76618b37]
  40bd0e:	fnstenv [ebx-0x4]
  40bd11:	mov    ebx,0xbc31536a
  40bd16:	xchg   DWORD PTR [ebp+0xa],eax
  40bd19:	repnz cmc 
  40bd1b:	lods   eax,DWORD PTR ds:[esi]
  40bd1c:	dec    ebp
  40bd1d:	out    dx,eax
  40bd1e:	jo     0x40bcc4
  40bd20:	stos   DWORD PTR es:[edi],eax
  40bd21:	(bad)  
  40bd22:	stc    
  40bd23:	cld    
  40bd24:	or     al,0xbf
  40bd26:	prefetch BYTE PTR [ecx]
  40bd29:	clc    
  40bd2a:	test   al,0xb2
  40bd2c:	shl    bl,cl
  40bd2e:	add    cl,dh
  40bd30:	adc    al,0x33
  40bd32:	fbld   TBYTE PTR [ebx+0x1c]
  40bd35:	iret   
  40bd36:	outs   dx,DWORD PTR ds:[esi]
  40bd37:	or     DWORD PTR [edx+0x65],esp
  40bd3a:	scas   al,BYTE PTR es:[edi]
  40bd3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd3c:	mov    esp,0x5973b4f9
  40bd41:	gs (bad) 
  40bd43:	(bad)  
  40bd44:	test   esp,esp
  40bd46:	jb     0x40bd7f
  40bd48:	test   ah,ch
  40bd4a:	xor    BYTE PTR [eax-0x362f5715],0x74
  40bd51:	cwde   
  40bd52:	mov    ds:0xedbaeb93,al
  40bd57:	inc    esi
  40bd58:	cmp    BYTE PTR [ebp+esi*2+0x384237d6],bl
  40bd5f:	xchg   edx,eax
  40bd60:	xor    eax,0x48a9d666
  40bd65:	push   edx
  40bd66:	test   eax,0xdea99eeb
  40bd6b:	lock add eax,0x2187368b
  40bd71:	mov    bl,0x91
  40bd73:	lods   eax,DWORD PTR ds:[esi]
  40bd74:	and    dh,BYTE PTR [ebx-0x643e4674]
  40bd7a:	sbb    dh,0x79
  40bd7d:	xor    esp,edi
  40bd7f:	popa   
  40bd80:	xchg   esp,eax
  40bd81:	dec    esp
  40bd82:	pushf  
  40bd83:	xor    DWORD PTR [esi],edx
  40bd85:	std    
  40bd86:	add    BYTE PTR [edi-0x3bc1a772],bl
  40bd8c:	sbb    dl,dh
  40bd8e:	add    bl,BYTE PTR [ebx+0x6b]
  40bd91:	sbb    DWORD PTR [ebp-0x6ee2f4d8],eax
  40bd97:	mov    esi,0x8479bb1e
  40bd9c:	pushf  
  40bd9d:	pop    eax
  40bd9e:	shl    DWORD PTR [esi],0x3c
  40bda1:	jbe    0x40bd8d
  40bda3:	cs push ecx
  40bda5:	push   ss
  40bda6:	aaa    
  40bda7:	cmc    
  40bda8:	pushf  
  40bda9:	add    al,0xd
  40bdab:	push   cs
  40bdac:	pushf  
  40bdad:	inc    esi
  40bdae:	aaa    
  40bdaf:	pop    ss
  40bdb0:	les    ebp,FWORD PTR [ebx]
  40bdb2:	jo     0x40bde0
  40bdb4:	sbb    eax,0xaae5b259
  40bdb9:	pmulhuw mm2,QWORD PTR [edx]
  40bdbc:	aad    0x9d
  40bdbe:	pusha  
  40bdbf:	call   0x76c3:0x3733f65
  40bdc6:	mov    ecx,0xfa22fd0
  40bdcb:	fsub   st,st(5)
  40bdcd:	or     al,0xe3
  40bdcf:	add    eax,0x6f1d8ff
  40bdd4:	pop    eax
  40bdd5:	mov    al,0x3f
  40bdd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdd8:	push   edx
  40bdd9:	lods   al,BYTE PTR ds:[esi]
  40bdda:	or     al,0x56
  40bddc:	mov    DWORD PTR [esp+esi*1+0x63e75295],ebx
  40bde3:	adc    BYTE PTR [ebp-0x6c065cc0],ah
  40bde9:	ds xchg ebx,eax
  40bdeb:	pop    ds
  40bdec:	and    ecx,DWORD PTR [esi-0x407609]
  40bdf2:	xchg   ebp,eax
  40bdf3:	jb     0x40bdf4
  40bdf5:	push   ss
  40bdf6:	cwde   
  40bdf7:	or     DWORD PTR [ebx-0x59],esp
  40bdfa:	out    dx,eax
  40bdfb:	cmp    al,BYTE PTR ds:0x64b177a4
  40be01:	mov    ds:0x82350d7e,eax
  40be06:	fwait
  40be07:	loop   0x40bdfd
  40be09:	cwde   
  40be0a:	cld    
  40be0b:	jle    0x40bdd7
  40be0d:	mov    WORD PTR [eax],?
  40be0f:	push   ss
  40be10:	pushf  
  40be11:	stc    
  40be12:	popf   
  40be13:	inc    esi
  40be14:	jmp    0x40bd9c
  40be16:	jns    0x40bdfc
  40be18:	mov    ch,0xbd
  40be1a:	and    BYTE PTR [eax+0x6dabffe],cl
  40be20:	inc    edx
  40be21:	hlt    
  40be22:	mov    edx,0x183781cf
  40be27:	sbb    al,0xff
  40be29:	repnz cmp bh,al
  40be2c:	xor    eax,edi
  40be2e:	shl    BYTE PTR [edi+0x55],cl
  40be31:	dec    edx
  40be32:	adc    al,0x9d
  40be34:	pop    edi
  40be35:	xchg   edi,eax
  40be36:	add    BYTE PTR [ecx],al
  40be38:	jmp    0xaa0c:0x5ee1b4f5
  40be3f:	push   esi
  40be40:	pop    ds
  40be41:	ret    
  40be42:	mov    edx,0x334d3dc4
  40be47:	cmp    BYTE PTR [esi+0x44ae726e],al
  40be4d:	push   ebx
  40be4e:	aam    0x7f
  40be50:	aam    0xaa
  40be52:	outs   dx,BYTE PTR ds:[esi]
  40be53:	int    0x69
  40be55:	imul   BYTE PTR [edx-0x6be0a06b]
  40be5b:	mov    edi,0xd9a1fe89
  40be60:	ret    0x66e5
  40be63:	pop    edx
  40be64:	xor    eax,0x4fb94a63
  40be69:	push   0x12
  40be6b:	loope  0x40beea
  40be6d:	outs   dx,BYTE PTR ds:[esi]
  40be6e:	push   cs
  40be6f:	icebp  
  40be70:	or     al,0xd1
  40be72:	lods   eax,DWORD PTR ds:[esi]
  40be73:	jo     0x40be9f
  40be75:	or     al,0x93
  40be77:	push   eax
  40be78:	xchg   edx,eax
  40be79:	mov    esp,0xa4654e5c
  40be7e:	ss dec ebp
  40be80:	jle    0x40be45
  40be82:	mov    BYTE PTR ds:0x9168d51a,al
  40be88:	test   DWORD PTR [ebp+0x11],0x56cc9472
  40be8f:	xchg   edi,eax
  40be90:	test   BYTE PTR [edi+0x2af32c0e],ch
  40be96:	or     cl,bl
  40be98:	fnstcw WORD PTR gs:0x8a24efd4
  40be9f:	into   
  40bea0:	xchg   DWORD PTR [eax-0x5dabe09],edx
  40bea6:	jmp    0xc6802a38
  40beab:	rol    DWORD PTR [ebx-0x76],0xa7
  40beaf:	mov    ebp,0x5c469838
  40beb4:	mov    ds:0x6ebc4e8e,al
  40beb9:	nop
  40beba:	xor    DWORD PTR [eax+0x6d],edi
  40bebd:	aaa    
  40bebe:	xchg   esp,eax
  40bebf:	or     BYTE PTR [esi+0x1d],bh
  40bec2:	and    esi,esi
  40bec4:	dec    ebp
  40bec5:	bound  esp,QWORD PTR [edi+ebp*4-0x2b]
  40bec9:	xchg   esp,eax
  40beca:	xchg   edx,eax
  40becb:	shl    DWORD PTR [ebx+eiz*1-0x66598cb1],0xcf
  40bed3:	lock inc esp
  40bed5:	cmp    cl,BYTE PTR [eax+0x7b80d3c6]
  40bedb:	xor    ch,BYTE PTR [edx-0x47]
  40bede:	shr    bh,1
  40bee0:	aaa    
  40bee1:	test   BYTE PTR [ecx],bh
  40bee3:	fs dec ebx
  40bee5:	xchg   BYTE PTR [eax+0x277235c6],bh
  40beeb:	sub    al,0xc
  40beed:	push   edx
  40beee:	sub    al,0x50
  40bef0:	lds    edx,FWORD PTR [esi]
  40bef2:	xor    eax,0x93ef5441
  40bef7:	clc    
  40bef8:	repnz and BYTE PTR [eax+0x396b9ac5],cl
  40beff:	bound  esi,QWORD PTR ds:0x3afcf4b8
  40bf05:	sub    DWORD PTR [ebx-0x4d],ebp
  40bf08:	pop    eax
  40bf09:	adc    al,0xb8
  40bf0b:	push   edi
  40bf0c:	stc    
  40bf0d:	xlat   BYTE PTR ds:[ebx]
  40bf0e:	and    ah,BYTE PTR [edi+0xdfb1d94]
  40bf14:	ds leave 
  40bf16:	cmc    
  40bf17:	js     0x40bf6f
  40bf19:	jg     0x40bf7f
  40bf1b:	or     BYTE PTR [ebp-0x15],bh
  40bf1e:	push   0xcb56aaec
  40bf23:	xchg   esp,eax
  40bf24:	dec    eax
  40bf25:	int    0x88
  40bf27:	pushf  
  40bf28:	js     0x40bf9a
  40bf2a:	sahf   
  40bf2b:	or     BYTE PTR [ebx],0xd1
  40bf2e:	or     bl,bl
  40bf30:	or     dh,bh
  40bf32:	imul   esp,edi,0xffffff82
  40bf35:	xchg   esp,eax
  40bf36:	test   eax,0xf5bc0bac
  40bf3b:	xchg   edi,eax
  40bf3c:	jp     0x40bf7d
  40bf3e:	inc    ebx
  40bf3f:	aad    0x80
  40bf41:	repnz mov al,0xbd
  40bf44:	shr    BYTE PTR [ebp+edi*8+0x14],0xa7
  40bf49:	or     cl,BYTE PTR [edx-0x14]
  40bf4c:	adc    DWORD PTR [ecx+0x76d3e55c],edx
  40bf52:	sub    al,0x83
  40bf54:	shr    DWORD PTR [eax+esi*8+0x7af79a2b],cl
  40bf5b:	xor    eax,0x82350ce3
  40bf60:	out    dx,eax
  40bf61:	cs mov bl,0x3c
  40bf64:	shr    BYTE PTR [ebx],cl
  40bf66:	stc    
  40bf67:	jno    0x40bf3f
  40bf69:	aad    0x5
  40bf6b:	xchg   edi,eax
  40bf6c:	lahf   
  40bf6d:	dec    esp
  40bf6e:	xor    ebp,0x5e2d82ee
  40bf74:	pop    ebx
  40bf75:	pop    es
  40bf76:	in     al,0x1
  40bf78:	test   al,0x68
  40bf7a:	push   ebp
  40bf7b:	mov    cl,0x8b
  40bf7d:	ins    BYTE PTR es:[edi],dx
  40bf7e:	mov    bh,0xf8
  40bf80:	cs int 0x49
  40bf83:	sbb    esi,esi
  40bf85:	repz mov ebp,DWORD PTR [esi-0x7567db90]
  40bf8c:	jns    0x40bfda
  40bf8e:	jp     0x40bf35
  40bf90:	inc    ebx
  40bf91:	ins    BYTE PTR es:[edi],dx
  40bf92:	sub    eax,0x615b5cb0
  40bf97:	fcom   QWORD PTR [edx+0x2c]
  40bf9a:	popa   
  40bf9b:	jb     0x40bf99
  40bf9d:	nop
  40bf9e:	and    al,dl
  40bfa0:	inc    ebx
  40bfa1:	xchg   ebx,eax
  40bfa2:	ss out 0xa0,eax
  40bfa5:	xor    BYTE PTR [edi-0x7a8e731b],dl
  40bfab:	push   ebp
  40bfac:	adc    al,0xdd
  40bfae:	scas   eax,DWORD PTR es:[edi]
  40bfaf:	jne    0x40bff6
  40bfb1:	pop    ebx
  40bfb2:	mov    dl,0xe0
  40bfb4:	clc    
  40bfb5:	lock test eax,0x52a7957a
  40bfbb:	(bad)  
  40bfbc:	gs push 0xacf1e287
  40bfc2:	(bad)  
  40bfc3:	xlat   BYTE PTR ds:[ebx]
  40bfc4:	sub    dh,bl
  40bfc6:	xor    bh,dh
  40bfc8:	dec    ebx
  40bfc9:	test   BYTE PTR ds:0x819c3caa,dl
  40bfcf:	cwde   
  40bfd0:	and    eax,0xc95d6736
  40bfd5:	xchg   esp,eax
  40bfd6:	rcr    edi,0x70
  40bfd9:	mov    dl,0xeb
  40bfdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfdc:	pop    ebp
  40bfdd:	xor    dl,BYTE PTR [eax-0x3200b9b7]
  40bfe3:	adc    DWORD PTR [ecx-0x6bde693a],ebx
  40bfe9:	jecxz  0x40c03c
  40bfeb:	push   esi
  40bfec:	xor    al,0x28
  40bfee:	popa   
  40bfef:	push   ss
  40bff0:	clc    
  40bff1:	adc    dh,dh
  40bff3:	cld    
  40bff4:	mov    edi,0x557391ab
  40bff9:	loopne 0x40c033
  40bffb:	pusha  
  40bffc:	lods   al,BYTE PTR cs:[esi]
  40bffe:	push   ss
  40bfff:	ss int 0xe9
  40c002:	(bad)  
  40c005:	add    bl,BYTE PTR [eax+0x61]
  40c008:	inc    edx
  40c009:	sti    
  40c00a:	xchg   esp,eax
  40c00b:	jp     0x40c074
  40c00d:	retf   
  40c00e:	rol    DWORD PTR [edi-0x32],0x84
  40c012:	xchg   ebx,eax
  40c013:	call   0x5b89:0xc62c5228
  40c01a:	aas    
  40c01b:	ja     0x40bfe1
  40c01d:	lods   eax,DWORD PTR ds:[esi]
  40c01e:	or     DWORD PTR [esi],0xffffffb1
  40c021:	and    eax,0xe05ef796
  40c026:	ret    0xbc4c
  40c029:	lods   al,BYTE PTR ds:[esi]
  40c02a:	bound  ecx,QWORD PTR [edi-0x2]
  40c02d:	cli    
  40c02e:	sub    BYTE PTR [ebx+0x4917ae94],ah
  40c034:	mov    bl,0x15
  40c036:	pusha  
  40c037:	pop    es
  40c038:	pop    esi
  40c039:	dec    esi
  40c03a:	adc    DWORD PTR [edi+0x39],esp
  40c03d:	or     BYTE PTR [ecx+0x7b],bl
  40c040:	pop    ecx
  40c041:	and    cl,BYTE PTR [esi]
  40c043:	outs   dx,BYTE PTR ds:[esi]
  40c044:	adc    al,0xa7
  40c046:	sbb    al,0x1a
  40c048:	and    esp,esi
  40c04a:	jne    0x40c0b2
  40c04c:	jmp    0x40c013
  40c04e:	jmp    0x40c0a3
  40c050:	sahf   
  40c051:	adc    edx,eax
  40c053:	sbb    ecx,DWORD PTR [ecx+esi*1+0x3a]
  40c057:	jp     0x40c099
  40c059:	dec    esp
  40c05a:	ja     0x40c069
  40c05c:	aas    
  40c05d:	mov    WORD PTR ds:0x5a685eaa,fs
  40c063:	pop    ss
  40c064:	push   ebp
  40c065:	pop    es
  40c066:	add    BYTE PTR [esi],al
  40c068:	sub    al,0x98
  40c06a:	xor    ch,bh
  40c06c:	sbb    ebx,esi
  40c06e:	aad    0xa7
  40c070:	call   0x8b3b:0x19bc14ff
  40c077:	jbe    0x40c040
  40c079:	shl    BYTE PTR [ecx+0x4d85b393],cl
  40c07f:	cmp    eax,0x8d5deec
  40c084:	jmp    0x40c0dc
  40c086:	add    bl,dl
  40c088:	push   ebp
  40c089:	addr16 dec ebp
  40c08b:	pop    esi
  40c08c:	mov    eax,0xaa952449
  40c091:	jne    0x40c020
  40c093:	xor    eax,0x6b8a263b
  40c098:	cmp    DWORD PTR [edx],eax
  40c09a:	jae    0x40c0a9
  40c09c:	in     al,dx
  40c09d:	jecxz  0x40c022
  40c09f:	loop   0x40c084
  40c0a1:	out    0x2d,al
  40c0a3:	lock inc esp
  40c0a5:	mov    dl,0xa6
  40c0a7:	mov    bl,0xb5
  40c0a9:	mov    al,ds:0x62dcc66d
  40c0ae:	inc    BYTE PTR [edx-0x4b]
  40c0b1:	sbb    DWORD PTR [esi],edx
  40c0b3:	jmp    0x9bf6919d
  40c0b8:	clc    
  40c0b9:	add    edx,DWORD PTR [eax]
  40c0bb:	imul   eax,ebp,0xffffffbd
  40c0be:	jg     0x40c11e
  40c0c0:	imul   edx,DWORD PTR [eax-0x492b7543],0x6f
  40c0c7:	mov    ebx,0xdd30621
  40c0cc:	out    dx,al
  40c0cd:	push   0x612a065d
  40c0d2:	retf   
  40c0d3:	sahf   
  40c0d4:	add    DWORD PTR [esi+0x652f4c14],edx
  40c0da:	push   esi
  40c0db:	or     al,0x72
  40c0dd:	call   0xdace:0x71ac0a36
  40c0e4:	pop    ebx
  40c0e5:	pop    eax
  40c0e6:	ds cs mov bl,0xae
  40c0ea:	jmp    DWORD PTR [edx-0x6f]
  40c0ed:	shr    ch,1
  40c0ef:	ret    0x41d7
  40c0f2:	lds    ebx,FWORD PTR [eax-0x25591d7a]
  40c0f8:	loope  0x40c09a
  40c0fa:	add    BYTE PTR [edx],al
  40c0fc:	fdivr  st(6),st
  40c0fe:	or     eax,0xdd6956f1
  40c103:	add    eax,0x4e8cf608
  40c108:	xchg   ecx,eax
  40c109:	jg     0x40c0c6
  40c10b:	sbb    DWORD PTR [ecx-0x1de47c5a],esi
  40c111:	cmc    
  40c112:	cmp    eax,0xfb792330
  40c117:	mov    ecx,0x86502765
  40c11c:	and    ebp,DWORD PTR [edx]
  40c11e:	dec    edx
  40c11f:	sbb    eax,0xf623e09a
  40c124:	pop    eax
  40c125:	inc    edi
  40c126:	inc    ebx
  40c127:	sub    esi,ecx
  40c129:	call   0x13cb:0x902f566
  40c130:	xlat   BYTE PTR es:[ebx]
  40c132:	mov    edx,0x30b62b60
  40c137:	retf   
  40c138:	add    ah,0xa0
  40c13b:	test   eax,0xdbce7507
  40c140:	ds dec esi
  40c142:	or     eax,DWORD PTR [ebx+ebp*8-0x77]
  40c146:	outs   dx,BYTE PTR ds:[esi]
  40c147:	ret    0x870e
  40c14a:	xchg   BYTE PTR [edx],ah
  40c14c:	repz pop ds
  40c14e:	retf   0xc71d
  40c151:	or     ebp,DWORD PTR [edx+0x652be98]
  40c157:	cmp    ebx,esp
  40c159:	adc    dl,BYTE PTR [esi+0x9]
  40c15c:	nop
  40c15d:	outs   dx,DWORD PTR ds:[esi]
  40c15e:	xchg   DWORD PTR [edi-0x570007f0],ebx
  40c164:	push   ecx
  40c165:	test   eax,0xaf6e32a5
  40c16a:	popa   
  40c16b:	neg    BYTE PTR [edi-0x5e450d27]
  40c171:	shl    BYTE PTR [edx],0x5d
  40c174:	inc    ebp
  40c175:	shl    BYTE PTR [ebx+ebp*8],cl
  40c178:	push   ebx
  40c179:	repnz xor ebp,DWORD PTR [ebx+0x44]
  40c17d:	sub    BYTE PTR [eax-0x77],dl
  40c180:	neg    BYTE PTR [ecx+0x60541a46]
  40c186:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c187:	cmp    ch,BYTE PTR [esi-0x77]
  40c18a:	aaa    
  40c18b:	cs add bl,0x22
  40c18f:	mov    DWORD PTR [ecx-0x2618d88c],ebx
  40c195:	dec    ebx
  40c196:	test   ebx,edx
  40c198:	(bad)  
  40c199:	stc    
  40c19a:	jns    0x40c1e3
  40c19c:	xor    BYTE PTR [edx],dl
  40c19e:	enter  0xcb5b,0x1f
  40c1a2:	sub    eax,0x1ec447e4
  40c1a7:	cmp    al,0xc0
  40c1a9:	fsub   st(1),st
  40c1ab:	mov    ah,0xac
  40c1ad:	cmp    esp,ebx
  40c1af:	in     al,dx
  40c1b0:	lods   eax,DWORD PTR ds:[esi]
  40c1b1:	inc    ebp
  40c1b2:	retf   
  40c1b3:	and    ch,BYTE PTR [esi-0x1e47ba56]
  40c1b9:	pop    ss
  40c1ba:	dec    esi
  40c1bb:	pop    eax
  40c1bc:	push   ecx
  40c1bd:	repnz sub al,0x9
  40c1c0:	shr    BYTE PTR [ecx],cl
  40c1c2:	stos   WORD PTR es:[edi],ax
  40c1c4:	mov    DWORD PTR [ebx],esp
  40c1c6:	push   ds
  40c1c7:	out    0xad,al
  40c1c9:	fild   DWORD PTR [eax-0x4e]
  40c1cc:	fadd   DWORD PTR [esi+edi*8+0x771698d0]
  40c1d3:	lds    ecx,FWORD PTR [eax+0x2c9c9175]
  40c1d9:	mov    ?,WORD PTR [ebx-0x7a357336]
  40c1df:	shl    ebx,cl
  40c1e1:	pushw  es
  40c1e3:	or     eax,0x932fd4e4
  40c1e8:	sbb    bh,BYTE PTR [esi+edi*8+0x3a86a271]
  40c1ef:	mov    eax,0x9a41f238
  40c1f4:	int3   
  40c1f5:	add    BYTE PTR [ebp-0x14],dl
  40c1f8:	sbb    BYTE PTR [eax-0x30],bl
  40c1fb:	mov    eax,?
  40c1fd:	or     eax,0x96de6ce3
  40c202:	or     al,0xa3
  40c204:	pop    eax
  40c205:	jecxz  0x40c207
  40c207:	es dec ebx
  40c209:	repz sub edx,ecx
  40c20c:	pop    ecx
  40c20d:	pushf  
  40c20e:	(bad)  
  40c20f:	arpl   WORD PTR [eax],sp
  40c211:	mov    eax,0xec492a8a
  40c216:	inc    edx
  40c217:	lahf   
  40c218:	adc    eax,0xcdc3f69c
  40c21d:	or     BYTE PTR [edx+0x46377d6b],al
  40c223:	cdq    
  40c224:	add    BYTE PTR [ebp+0x2d60385c],ah
  40c22a:	(bad)  
  40c22b:	data16 add al,0xa8
  40c22e:	jle    0x40c242
  40c230:	fwait
  40c231:	pushf  
  40c232:	bound  edi,QWORD PTR [ebx]
  40c234:	dec    esp
  40c235:	out    dx,al
  40c236:	push   edx
  40c237:	jb     0x40c27e
  40c239:	push   edi
  40c23a:	lea    edx,[esi+0x1cb6fd2e]
  40c240:	iret   
  40c241:	sub    BYTE PTR [edi+0x41ce3591],ch
  40c247:	push   ecx
  40c248:	push   0xf726c5a8
  40c24d:	pop    esp
  40c24e:	clc    
  40c24f:	mov    eax,0xe2fcc866
  40c254:	inc    edx
  40c255:	in     eax,0x6d
  40c257:	adc    DWORD PTR [edx+0x2d2702f8],ebp
  40c25d:	mov    eax,ds:0x2b3ec5f8
  40c262:	dec    eax
  40c263:	call   0x16b8:0x34a9268a
  40c26a:	leave  
  40c26b:	retf   
  40c26c:	repnz scas al,BYTE PTR es:[edi]
  40c26e:	cmp    eax,0x48dac32f
  40c273:	fidivr DWORD PTR [esi+0x3f]
  40c276:	sbb    dl,BYTE PTR [edx-0x5c]
  40c279:	ds hlt 
  40c27b:	out    0x17,eax
  40c27d:	(bad)  
  40c27e:	xor    esi,ebx
  40c280:	jp     0x40c2cb
  40c282:	push   cs
  40c283:	(bad)  
  40c284:	xchg   esp,eax
  40c285:	cmp    BYTE PTR [eax+eiz*4],dh
  40c288:	jle    0x40c2c0
  40c28a:	test   DWORD PTR [ecx],ecx
  40c28c:	inc    ebx
  40c28d:	retf   0xcc78
  40c290:	inc    eax
  40c291:	sbb    al,0xdf
  40c293:	test   esi,ebp
  40c295:	sub    ch,ah
  40c297:	inc    esi
  40c298:	cmp    al,0x26
  40c29a:	and    ecx,edi
  40c29c:	hlt    
  40c29d:	pop    edx
  40c29e:	rcl    bh,1
  40c2a0:	mov    ds:0x24daf02e,eax
  40c2a5:	pop    bp
  40c2a7:	mov    edx,0x8115919
  40c2ac:	xor    eax,0x9fa3769b
  40c2b1:	ins    BYTE PTR es:[edi],dx
  40c2b2:	sbb    eax,0x10950f33
  40c2b7:	or     DWORD PTR [esi+0x79],ebp
  40c2ba:	in     eax,0x9d
  40c2bc:	or     DWORD PTR [edx-0x1a3e610e],ebx
  40c2c2:	out    dx,al
  40c2c3:	test   BYTE PTR [eax+0x2a],dl
  40c2c6:	dec    ebx
  40c2c7:	push   edx
  40c2c8:	dec    edi
  40c2c9:	test   eax,0xc68258f7
  40c2ce:	jge    0x40c312
  40c2d0:	or     al,0x4e
  40c2d2:	cmc    
  40c2d3:	sub    al,BYTE PTR fs:[esi+0x5615d926]
  40c2da:	pop    ebp
  40c2db:	nop
  40c2dc:	cmp    bh,BYTE PTR [edx+0x10b8a700]
  40c2e2:	jb     0x40c2f2
  40c2e4:	es leave 
  40c2e6:	pusha  
  40c2e7:	mov    al,0xa4
  40c2e9:	xlat   BYTE PTR ds:[ebx]
  40c2ea:	jmp    0x9b2eab50
  40c2ef:	add    eax,0x37834468
  40c2f4:	cmp    BYTE PTR [edi+ebp*2+0x2],bl
  40c2f8:	repnz inc edi
  40c2fa:	cmp    eax,0x2c2e90b5
  40c2ff:	not    DWORD PTR [ebx]
  40c301:	(bad)
  40c304:	fyl2xp1 
  40c306:	mov    bl,0x6a
  40c308:	jno    0x40c312
  40c30a:	ins    DWORD PTR es:[edi],dx
  40c30b:	je     0x40c2ee
  40c30d:	add    ebp,edx
  40c30f:	jns    0x40c360
  40c311:	stos   DWORD PTR es:[edi],eax
  40c312:	int3   
  40c313:	test   bl,cl
  40c315:	out    0x3,al
  40c317:	and    DWORD PTR [eax+0x49],ebp
  40c31a:	dec    esi
  40c31b:	xchg   edi,edi
  40c31d:	mov    BYTE PTR [eax-0x6e4ff500],cl
  40c323:	into   
  40c324:	hlt    
  40c325:	dec    esp
  40c326:	in     eax,dx
  40c327:	shr    DWORD PTR [edi+0x33],0x76
  40c32b:	pop    es
  40c32c:	in     eax,0x23
  40c32e:	repz jno 0x40c304
  40c331:	pop    ss
  40c332:	jae    0x40c2ba
  40c334:	dec    esi
  40c335:	into   
  40c336:	neg    dl
  40c338:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c339:	dec    edx
  40c33a:	imul   eax,DWORD PTR [edx],0x2e
  40c33d:	fcom   DWORD PTR [ecx+0xff9d068]
  40c343:	fs mov ebx,0x17760615
  40c349:	shl    BYTE PTR [esi],cl
  40c34b:	mov    DWORD PTR [esi],ebx
  40c34d:	out    dx,al
  40c34e:	mov    cs,WORD PTR [esi-0x1c]
  40c351:	or     dh,BYTE PTR ds:0x30fd58ba
  40c357:	in     eax,dx
  40c358:	sahf   
  40c359:	cmp    eax,0xb3dcd1f7
  40c35e:	inc    ecx
  40c35f:	mov    ebp,0xb31d617e
  40c364:	mov    dl,0x8a
  40c366:	mov    esi,0xc1973228
  40c36b:	adc    BYTE PTR [edi],dh
  40c36d:	outs   dx,DWORD PTR ds:[esi]
  40c36e:	fxch   st(4)
  40c370:	mov    ecx,0xd909550
  40c375:	test   BYTE PTR [esp-0x11],ah
  40c379:	nop
  40c37a:	mul    DWORD PTR [esi+eiz*4-0x4aa317b4]
  40c381:	mov    ds:0x665eb84a,eax
  40c386:	jae    0x40c401
  40c388:	xor    eax,0x8ee09e3e
  40c38d:	cmp    al,0x17
  40c38f:	lahf   
  40c390:	xor    DWORD PTR ds:0xebf75781,0xffffffad
  40c397:	std    
  40c398:	and    al,0xe0
  40c39a:	clc    
  40c39b:	ins    BYTE PTR es:[edi],dx
  40c39c:	call   0x8403d3b9
  40c3a1:	jno    0x40c3c5
  40c3a3:	mov    ebp,0x5663d7e2
  40c3a8:	sti    
  40c3a9:	pop    ebp
  40c3aa:	sub    al,0x31
  40c3ac:	pop    edx
  40c3ad:	adc    ch,dl
  40c3af:	push   cs
  40c3b0:	push   ecx
  40c3b1:	jg     0x40c380
  40c3b3:	cmp    al,bh
  40c3b5:	push   ebp
  40c3b6:	cli    
  40c3b7:	adc    al,0x2a
  40c3b9:	sub    DWORD PTR [ebp+eiz*1-0xf],esp
  40c3bd:	xchg   edx,eax
  40c3be:	retf   0x720b
  40c3c1:	inc    esi
  40c3c2:	imul   eax,DWORD PTR [esi-0x2cea258b],0xfffffffa
  40c3c9:	inc    ecx
  40c3ca:	jmp    0xbbc:0x5303ed2e
  40c3d1:	test   BYTE PTR [edx+0x37f61083],al
  40c3d7:	test   BYTE PTR [ecx-0x3b],bh
  40c3da:	push   esp
  40c3db:	jmp    0x40c38a
  40c3dd:	xor    BYTE PTR [ecx-0x3965507b],ah
  40c3e3:	jmp    0xcaa184f6
  40c3e8:	test   eax,0x85b34581
  40c3ed:	ins    DWORD PTR es:[edi],dx
  40c3ee:	leave  
  40c3ef:	push   ds
  40c3f0:	or     BYTE PTR [edi-0x2b],dl
  40c3f3:	pusha  
  40c3f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3f5:	cmp    DWORD PTR [esi+esi*1+0x2f],edx
  40c3f9:	popf   
  40c3fa:	mov    DWORD PTR [esi-0x4a],esp
  40c3fd:	push   0x2c
  40c3ff:	les    esp,FWORD PTR [edi]
  40c401:	xchg   edx,eax
  40c402:	sub    BYTE PTR [ebx],bl
  40c404:	std    
  40c405:	xchg   ecx,eax
  40c406:	lahf   
  40c407:	sti    
  40c408:	push   ds
  40c409:	adc    DWORD PTR [ecx+eax*8-0x4e],edx
  40c40d:	fisub  DWORD PTR [ebp-0x708666f4]
  40c413:	add    eax,esp
  40c415:	js     0x40c45c
  40c417:	div    BYTE PTR [ecx]
  40c419:	mov    bl,0xbd
  40c41b:	cmp    DWORD PTR [ecx+0xf],edi
  40c41e:	dec    ecx
  40c41f:	xchg   esi,eax
  40c420:	push   ss
  40c421:	fst    DWORD PTR [eax]
  40c423:	popa   
  40c424:	sub    eax,0xb142afee
  40c429:	dec    edx
  40c42a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c42c:	cmc    
  40c42d:	mov    ch,0x1f
  40c42f:	pop    esi
  40c430:	aad    0x12
  40c432:	ret    
  40c433:	sub    BYTE PTR [edx],bh
  40c435:	dec    edx
  40c436:	shr    BYTE PTR [eax+0x4740257e],cl
  40c43c:	packssdw mm0,QWORD PTR [eax]
  40c43f:	in     al,dx
  40c440:	pop    es
  40c441:	es push 0x2ee8d320
  40c447:	outs   dx,DWORD PTR ds:[esi]
  40c448:	dec    ebx
  40c449:	jb     0x40c46c
  40c44b:	or     DWORD PTR ds:0xefeb9a4d,ecx
  40c451:	and    BYTE PTR [ebx],dl
  40c453:	pop    es
  40c454:	push   ebp
  40c455:	dec    eax
  40c456:	add    al,0x3d
  40c458:	sahf   
  40c459:	dec    esi
  40c45a:	pop    ebx
  40c45b:	push   0x7ff2a5b2
  40c460:	jg     0x40c452
  40c462:	push   ebp
  40c463:	cli    
  40c464:	rol    BYTE PTR [edx+0x607e2745],cl
  40c46a:	add    ah,BYTE PTR [eax]
  40c46c:	jno    0x40c473
  40c46e:	mov    edi,DWORD PTR [edx]
  40c470:	mov    ecx,edx
  40c472:	inc    esp
  40c473:	sub    DWORD PTR [ebp+0x4114d2c9],0x5230122a
  40c47d:	sbb    cl,BYTE PTR [eax-0x3c]
  40c480:	fistp  WORD PTR [ebp-0x4c]
  40c483:	mov    DWORD PTR [eax],edi
  40c485:	scas   al,BYTE PTR es:[edi]
  40c486:	sar    BYTE PTR [esp+eiz*8+0x7a],1
  40c48a:	xchg   edi,eax
  40c48b:	daa    
  40c48c:	(bad)  
  40c48d:	call   0x828:0xee096bf7
  40c494:	mov    es,esi
  40c496:	push   ebx
  40c497:	iret   
  40c498:	lods   al,BYTE PTR ds:[esi]
  40c499:	repnz add dl,dh
  40c49c:	mov    ds:0x98e33e77,eax
  40c4a1:	in     al,dx
  40c4a2:	out    dx,al
  40c4a3:	mov    cl,0xc
  40c4a5:	iret   
  40c4a6:	push   edi
  40c4a7:	cmp    dh,bl
  40c4a9:	xchg   ecx,eax
  40c4aa:	(bad)  
  40c4ab:	or     al,0x85
  40c4ad:	iret   
  40c4ae:	call   0x83be607b
  40c4b3:	test   eax,0x75b72cd4
  40c4b8:	sbb    al,bh
  40c4ba:	pop    ebx
  40c4bb:	lahf   
  40c4bc:	and    edx,edx
  40c4be:	push   edi
  40c4c0:	xchg   edx,eax
  40c4c1:	dec    ebp
  40c4c2:	ds popf 
  40c4c4:	arpl   WORD PTR [edi+edi*4],bx
  40c4c7:	cmc    
  40c4c8:	mov    edx,0x552ffc1f
  40c4cd:	sbb    DWORD PTR [ecx+0x34],eax
  40c4d0:	pop    edi
  40c4d1:	daa    
  40c4d2:	inc    edx
  40c4d3:	data16 adc al,ch
  40c4d6:	inc    ecx
  40c4d7:	inc    ebp
  40c4d8:	adc    DWORD PTR [esi],edi
  40c4da:	sahf   
  40c4db:	or     al,0x29
  40c4dd:	lds    esp,FWORD PTR [ebp-0x80]
  40c4e0:	imul   esi,DWORD PTR [ecx],0x25
  40c4e3:	sub    dh,dl
  40c4e5:	or     eax,0x9e7f0963
  40c4ea:	mov    ch,0xe6
  40c4ec:	cmp    bl,0xd2
  40c4ef:	retf   0xd27
  40c4f2:	test   DWORD PTR [bx+di],ebp
  40c4f5:	mov    cl,0xc8
  40c4f7:	xor    eax,0x7c426046
  40c4fc:	mov    eax,0xadbd1f70
  40c501:	xor    ch,BYTE PTR [edi+0x2a]
  40c504:	push   esi
  40c505:	mov    DWORD PTR [ebx+esi*1+0x3277d405],0x8ecabd02
  40c510:	stos   BYTE PTR es:[edi],al
  40c511:	test   al,0x36
  40c513:	mov    dh,0x9f
  40c515:	std    
  40c516:	sbb    eax,0xb7d3a983
  40c51b:	ja     0x40c4db
  40c51d:	(bad)  
  40c51e:	adc    dh,BYTE PTR [eax-0x542a8c8c]
  40c524:	jle    0x40c576
  40c526:	xchg   edi,eax
  40c527:	xchg   ebp,eax
  40c528:	lods   eax,DWORD PTR ds:[esi]
  40c529:	xchg   edx,eax
  40c52a:	xor    eax,esp
  40c52c:	xor    eax,0x91b89bd4
  40c531:	aas    
  40c532:	add    ax,0x8bfa
  40c536:	xor    esp,eax
  40c538:	sub    ecx,edx
  40c53a:	sbb    eax,0x58045a66
  40c53f:	daa    
  40c540:	(bad)  
  40c542:	lds    ebx,FWORD PTR [esi-0x7b]
  40c545:	adc    eax,0xf94077e6
  40c54a:	dec    esp
  40c54b:	popf   
  40c54c:	dec    ebx
  40c54d:	mov    dh,0x29
  40c54f:	xor    BYTE PTR [edx],dl
  40c551:	pop    es
  40c552:	sbb    eax,0xbfbeb3e0
  40c557:	pop    ebp
  40c558:	test   al,0xdc
  40c55a:	dec    ebp
  40c55b:	aaa    
  40c55c:	(bad)  
  40c55d:	jle    0x40c512
  40c55f:	cmp    BYTE PTR [eax],0xcb
  40c562:	inc    esi
  40c563:	fcmovnb st,st(3)
  40c565:	test   esi,0x32ef8f70
  40c56b:	mov    ds:0x9746137d,al
  40c570:	mov    ebp,0x643e5251
  40c575:	cli    
  40c576:	ror    BYTE PTR [eax-0x77],1
  40c579:	out    dx,al
  40c57a:	in     eax,dx
  40c57b:	arpl   WORD PTR [esi+0x7],bx
  40c57e:	cwde   
  40c57f:	xchg   edx,eax
  40c580:	xchg   ax,ax
  40c582:	pop    edi
  40c583:	mov    cl,0x60
  40c585:	dec    ebx
  40c586:	int    0x2a
  40c588:	lahf   
  40c589:	push   eax
  40c58a:	arpl   WORD PTR [esi],si
  40c58c:	or     BYTE PTR [edi+0x4f],cl
  40c58f:	or     ch,BYTE PTR [eax]
  40c591:	sbb    DWORD PTR ds:0x8395931f,0xffffff95
  40c598:	xchg   esp,eax
  40c599:	cmp    ebp,DWORD PTR [edx-0x14091ac5]
  40c59f:	in     al,dx
  40c5a0:	into   
  40c5a1:	mov    eax,ds:0x7b3b9269
  40c5a6:	dec    ecx
  40c5a7:	lock ds sub eax,ebp
  40c5ab:	(bad)  
  40c5ac:	mov    edi,0xef553d76
  40c5b1:	or     esi,DWORD PTR [edx-0x3c]
  40c5b4:	aam    0xcd
  40c5b6:	add    DWORD PTR [eax-0x3c],esp
  40c5b9:	jbe    0x40c616
  40c5bb:	cmp    al,0xc5
  40c5bd:	cmp    eax,0x9a06caec
  40c5c2:	les    edx,FWORD PTR [eax]
  40c5c4:	push   eax
  40c5c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5c6:	pop    edx
  40c5c7:	repnz aas 
  40c5c9:	dec    ebp
  40c5ca:	mov    ebp,0x5d61d7b8
  40c5cf:	push   0x4fcead28
  40c5d4:	xchg   edi,eax
  40c5d5:	not    DWORD PTR [edx+0x5dba82f5]
  40c5db:	(bad)  
  40c5dc:	cs stos DWORD PTR es:[edi],eax
  40c5de:	xor    eax,0x83eba74c
  40c5e3:	sub    DWORD PTR [ecx-0x43],0x3b181415
  40c5ea:	inc    edx
  40c5eb:	hlt    
  40c5ec:	clc    
  40c5ed:	out    0xa2,al
  40c5ef:	ror    BYTE PTR [edx+0x68fdd8b2],1
  40c5f5:	add    DWORD PTR [ecx+0x56490ac8],0xcc825998
  40c5ff:	pop    ds
  40c600:	mov    dh,0x78
  40c602:	jle    0x40c5d6
  40c604:	mov    ah,0x84
  40c606:	xlat   BYTE PTR ds:[ebx]
  40c607:	loopne 0x40c61d
  40c609:	pop    ebx
  40c60a:	pop    ebp
  40c60b:	xor    al,0xed
  40c60d:	loop   0x40c5c3
  40c60f:	ja     0x40c63b
  40c611:	scas   al,BYTE PTR es:[edi]
  40c612:	jae    0x40c693
  40c614:	aaa    
  40c615:	add    eax,0x248c7e3
  40c61a:	xchg   DWORD PTR [esi],ecx
  40c61c:	xchg   edi,eax
  40c61d:	mov    ds:0x76d4f87b,al
  40c622:	sbb    BYTE PTR [eax],dh
  40c624:	in     eax,0xcd
  40c626:	repnz (bad) [edx]
  40c629:	push   ebp
  40c62a:	test   al,0xf9
  40c62c:	iret   
  40c62d:	xchg   ebp,eax
  40c62e:	adc    eax,0xc51e9e37
  40c633:	add    al,0x4b
  40c635:	lds    edi,FWORD PTR [ecx]
  40c637:	mov    cl,0x53
  40c639:	lock add bh,0x42
  40c63d:	popa   
  40c63e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c63f:	dec    edi
  40c640:	xor    DWORD PTR ds:0xa739a1b4,0x1dedabe9
  40c64a:	rcr    DWORD PTR [ebx+0x74],cl
  40c64d:	je     0x40c6b5
  40c64f:	clc    
  40c650:	inc    edx
  40c651:	inc    esp
  40c652:	aad    0x27
  40c654:	cmp    BYTE PTR [edx],dl
  40c656:	add    esi,0xffffff87
  40c659:	repnz or eax,0x3064d800
  40c65f:	push   esp
  40c660:	jp     0x40c6c8
  40c662:	xlat   BYTE PTR ds:[ebx]
  40c663:	cdq    
  40c664:	dec    edi
  40c665:	stos   BYTE PTR es:[edi],al
  40c666:	dec    bh
  40c668:	(bad)  
  40c669:	jmp    0xf27b47af
  40c66e:	jo     0x40c63f
  40c670:	mov    DWORD PTR [ebx+0x4ba8a5d5],ecx
  40c676:	mov    ch,0xb8
  40c678:	cmp    DWORD PTR [ebp+esi*8+0x431d7c2c],ecx
  40c67f:	pop    eax
  40c680:	hlt    
  40c681:	mov    BYTE PTR [eax-0x45],ch
  40c684:	inc    esp
  40c685:	cld    
  40c686:	outs   dx,DWORD PTR ds:[esi]
  40c687:	add    al,0x5f
  40c689:	fidivr DWORD PTR [eax-0x458cd8a0]
  40c68f:	fcomp  DWORD PTR [esi]
  40c691:	gs mov edx,0x95bb6bef
  40c697:	adc    al,0x78
  40c699:	sbb    edx,eax
  40c69b:	out    0x41,eax
  40c69d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c69e:	mov    DWORD PTR [ebx-0x55],esi
  40c6a1:	push   ebp
  40c6a2:	(bad)  
  40c6a3:	sub    edx,DWORD PTR [ecx+0x288f4524]
  40c6a9:	pusha  
  40c6aa:	aaa    
  40c6ab:	aam    0x71
  40c6ad:	imul   esp,DWORD PTR [edi+0x2e],0x72921bda
  40c6b4:	pop    es
  40c6b5:	and    eax,0x5198b55d
  40c6ba:	jmp    0x84ae3edb
  40c6bf:	inc    ebx
  40c6c0:	push   esi
  40c6c1:	fwait
  40c6c2:	outs   dx,BYTE PTR ds:[esi]
  40c6c3:	popa   
  40c6c4:	and    DWORD PTR [bx+si-0x56fc],esi
  40c6c9:	in     eax,0xa9
  40c6cb:	dec    esp
  40c6cc:	iret   
  40c6cd:	lods   eax,DWORD PTR ds:[esi]
  40c6ce:	inc    edx
  40c6cf:	aaa    
  40c6d0:	jmp    FWORD PTR [esi+ecx*4]
  40c6d3:	(bad)  
  40c6d4:	rcl    edx,cl
  40c6d6:	shr    BYTE PTR [edx],0x6f
  40c6d9:	add    BYTE PTR [eax-0x78ca0a4b],dh
  40c6df:	cld    
  40c6e0:	pop    ebp
  40c6e1:	adc    edx,esi
  40c6e3:	sbb    BYTE PTR [edx],bh
  40c6e5:	stos   DWORD PTR es:[edi],eax
  40c6e6:	mov    ebp,0x6323a22e
  40c6eb:	hlt    
  40c6ec:	hlt    
  40c6ed:	out    0x6e,eax
  40c6ef:	and    bh,BYTE PTR [ebx-0x2e0bbde6]
  40c6f5:	xchg   edx,edi
  40c6f7:	jnp    0x40c67d
  40c6f9:	push   eax
  40c6fa:	ss stc 
  40c6fc:	and    eax,0xa94c919d
  40c701:	dec    edi
  40c702:	ins    DWORD PTR es:[edi],dx
  40c703:	test   BYTE PTR [ecx],ah
  40c705:	das    
  40c706:	dec    edi
  40c707:	push   edx
  40c708:	jmp    0x40c723
  40c70a:	mov    al,0x35
  40c70c:	sub    bh,0xa0
  40c70f:	aad    0x58
  40c711:	add    eax,0x69c0e25
  40c716:	sbb    DWORD PTR [ebx-0x729b7b9f],esi
  40c71c:	xchg   esi,eax
  40c71d:	jmp    0x5091:0x9e5e934c
  40c724:	iret   
  40c725:	call   0xd6b9:0x5e9c6096
  40c72c:	(bad)  
  40c72e:	pushf  
  40c72f:	cmp    DWORD PTR [edx-0x376ba269],ecx
  40c735:	out    0xbb,al
  40c737:	out    0x7a,al
  40c739:	sti    
  40c73a:	mov    ah,bl
  40c73c:	int    0x88
  40c73e:	scas   eax,DWORD PTR es:[edi]
  40c73f:	fldenv [ebx+esi*1]
  40c742:	lea    esp,[ebx-0x549d09ba]
  40c748:	jge    0x40c785
  40c74a:	cmp    DWORD PTR [eax-0x35],ebx
  40c74d:	loopne 0x40c7a6
  40c74f:	mov    esi,0xd785cc3e
  40c754:	(bad)  
  40c755:	sub    al,0x3
  40c757:	shl    BYTE PTR [ebp+0x7f],1
  40c75a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c75b:	fisub  WORD PTR [eax-0xc]
  40c75e:	pop    ss
  40c75f:	mov    ds:0x8ef07586,al
  40c764:	xchg   edx,eax
  40c765:	inc    esi
  40c766:	stos   DWORD PTR es:[edi],eax
  40c767:	xor    DWORD PTR fs:[edx-0x3e383bb],0xfffffff5
  40c76f:	ss jnp 0x40c711
  40c772:	rol    ch,cl
  40c774:	adc    eax,0x990d8e21
  40c779:	scas   al,BYTE PTR es:[edi]
  40c77a:	scas   eax,DWORD PTR es:[edi]
  40c77b:	popf   
  40c77c:	fwait
  40c77d:	popa   
  40c77e:	cmp    ch,BYTE PTR [edx-0x14]
  40c781:	push   ss
  40c782:	cs jmp 0x40c7cd
  40c785:	out    0xd2,eax
  40c787:	dec    ecx
  40c788:	dec    eax
  40c789:	sub    eax,0x1fa8b44
  40c78e:	mov    bh,0x80
  40c790:	add    BYTE PTR [esi-0x82a9f5b],bl
  40c796:	and    BYTE PTR [eax],ch
  40c798:	push   ecx
  40c799:	lahf   
  40c79a:	pushf  
  40c79b:	fst    QWORD PTR ds:[ecx]
  40c79e:	pop    esi
  40c79f:	push   ebx
  40c7a0:	or     ecx,DWORD PTR [esi+0x274bc2b0]
  40c7a6:	pop    ebp
  40c7a7:	pop    es
  40c7a8:	pop    es
  40c7a9:	mov    WORD PTR [ebp+eiz*8+0x51f9c7e5],?
  40c7b0:	push   ss
  40c7b1:	jl     0x40c7c0
  40c7b3:	add    bl,al
  40c7b5:	(bad)  
  40c7b6:	stc    
  40c7b7:	mov    ch,0x5b
  40c7b9:	push   esi
  40c7ba:	jecxz  0x40c7ee
  40c7bc:	aad    0x8b
  40c7be:	and    BYTE PTR [esi],ch
  40c7c0:	and    BYTE PTR [edi],0xe7
  40c7c3:	mov    DWORD PTR [ebx+0xa],ebp
  40c7c6:	sbb    BYTE PTR [esp+ebp*1-0x21c83df7],bh
  40c7cd:	test   eax,0x39fa7a9a
  40c7d2:	sbb    eax,DWORD PTR gs:[edi+ebp*2]
  40c7d6:	cmp    ecx,DWORD PTR [eax]
  40c7d8:	push   cs
  40c7d9:	cmp    BYTE PTR [edi+0x6df55297],al
  40c7df:	jmp    0x7dd5351c
  40c7e4:	scas   eax,DWORD PTR es:[edi]
  40c7e5:	jp     0x40c81c
  40c7e7:	shr    BYTE PTR [eax-0x40],cl
  40c7ea:	jg     0x40c7dc
  40c7ec:	sbb    ah,BYTE PTR [eax]
  40c7ee:	sub    eax,0xa88d33e7
  40c7f3:	inc    ebp
  40c7f4:	jle    0x40c800
  40c7f6:	xchg   edi,eax
  40c7f7:	or     BYTE PTR [edx],cl
  40c7f9:	out    0x9f,eax
  40c7fb:	push   ecx
  40c7fc:	jle    0x40c7ce
  40c7fe:	fiadd  WORD PTR [edi-0x3d]
  40c801:	into   
  40c802:	scas   al,BYTE PTR es:[edi]
  40c803:	add    esp,DWORD PTR [esi+0x56]
  40c806:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c807:	cld    
  40c808:	stos   BYTE PTR es:[edi],al
  40c809:	repnz call 0x1ac4:0xc32c1f75
  40c811:	push   ebx
  40c812:	push   ebp
  40c813:	stos   BYTE PTR es:[edi],al
  40c814:	and    dl,ch
  40c816:	dec    esi
  40c817:	mov    al,0x87
  40c819:	xchg   ebp,eax
  40c81a:	push   ds
  40c81b:	pop    ds
  40c81c:	sub    al,0xf0
  40c81e:	jae    0x40c7eb
  40c820:	rcr    BYTE PTR [ebx],0x3a
  40c823:	out    dx,al
  40c824:	ss push ecx
  40c826:	(bad)  
  40c827:	outs   dx,DWORD PTR ds:[esi]
  40c828:	inc    eax
  40c829:	inc    edi
  40c82a:	push   es
  40c82b:	bound  eax,QWORD PTR [edi+0x70]
  40c82e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c82f:	aam    0x20
  40c831:	mov    bh,0xaa
  40c833:	mov    eax,0x24d3c772
  40c838:	aam    0x6a
  40c83a:	mov    ah,0x4e
  40c83c:	or     eax,0x114dedcb
  40c841:	mov    ebx,0xea318bfe
  40c846:	dec    edi
  40c847:	jno    0x40c7fe
  40c849:	jns    0x40c88d
  40c84b:	mov    dh,0xa2
  40c84d:	lods   eax,DWORD PTR ds:[esi]
  40c84e:	imul   DWORD PTR [edx+0x74b38488]
  40c854:	mov    ds:0xfd257b53,al
  40c859:	aas    
  40c85a:	mov    WORD PTR [eax+eiz*1],?
  40c85d:	ja     0x40c7f6
  40c85f:	ins    BYTE PTR es:[edi],dx
  40c860:	sub    eax,0xcffc16c7
  40c865:	jge    0x40c882
  40c867:	shl    BYTE PTR [ebx],cl
  40c869:	enter  0x2ea0,0x18
  40c86d:	pop    ds
  40c86e:	leave  
  40c86f:	stc    
  40c870:	int3   
  40c871:	sbb    al,0x59
  40c873:	aad    0x5
  40c875:	mov    esp,DWORD PTR [esp+esi*4]
  40c878:	stos   BYTE PTR es:[edi],al
  40c879:	outs   dx,DWORD PTR ds:[esi]
  40c87a:	or     bh,bh
  40c87c:	cmp    al,0x4e
  40c87e:	pop    ebp
  40c87f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c880:	or     eax,0x3ced177d
  40c885:	adc    edi,DWORD PTR [eax+0x21]
  40c888:	pop    ss
  40c889:	push   esi
  40c88a:	inc    esi
  40c88c:	(bad)  
  40c88e:	jmp    0x40c901
  40c890:	jno    0x40c8ec
  40c892:	push   ebp
  40c893:	xor    BYTE PTR [ebp-0x4c6a267],0x8
  40c89a:	mov    edi,0x242d45f3
  40c89f:	std    
  40c8a0:	jl     0x40c8e3
  40c8a2:	lahf   
  40c8a3:	jne    0x40c913
  40c8a5:	shr    BYTE PTR [ebp+0x40],0x3c
  40c8a9:	fcmovnb st,st(1)
  40c8ab:	dec    edx
  40c8ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8ad:	call   0x16fedd60
  40c8b2:	rol    BYTE PTR [ecx+0x68],cl
  40c8b5:	cmp    eax,0xdca48fb0
  40c8ba:	(bad)  
  40c8bb:	sbb    DWORD PTR [edx+ecx*2-0x4e6db057],esp
  40c8c2:	adc    DWORD PTR [esi-0x53c72534],edx
  40c8c8:	cmp    DWORD PTR ds:0xa9461b19,0xffffffbd
  40c8cf:	enter  0xbf4b,0xb4
  40c8d3:	lods   al,BYTE PTR ds:[esi]
  40c8d4:	fs dec ebx
  40c8d6:	push   ebx
  40c8d7:	jecxz  0x40c873
  40c8d9:	or     edx,edi
  40c8db:	jmp    0xbdd74fa
  40c8e0:	xchg   edx,eax
  40c8e1:	ror    edx,0xdb
  40c8e4:	mov    edi,edi
  40c8e6:	cmp    cl,BYTE PTR [edx]
  40c8e8:	popa   
  40c8e9:	xor    DWORD PTR [edi-0x44],ebx
  40c8ec:	shr    DWORD PTR [esi+0x57],1
  40c8ef:	sub    eax,0x9d27a7a2
  40c8f4:	mov    BYTE PTR [ecx],cl
  40c8f6:	pusha  
  40c8f7:	jmp    0x40c8e9
  40c8f9:	(bad)  
  40c8fb:	cs jecxz 0x40c92d
  40c8fe:	ja     0x40c96e
  40c900:	rcr    BYTE PTR [edi+0x1a9d9720],0x3e
  40c907:	adc    ebx,DWORD PTR [ebx+ebp*8]
  40c90a:	xchg   BYTE PTR [edx],bl
  40c90c:	aaa    
  40c90d:	dec    edi
  40c90e:	pushf  
  40c90f:	inc    ecx
  40c910:	mov    BYTE PTR es:[ebx],0x5d
  40c914:	mov    ebp,0xd7f3cc2f
  40c919:	fs jb  0x40c8fa
  40c91c:	mov    eax,ds:0x9d46697b
  40c921:	and    DWORD PTR [ecx],ebp
  40c923:	pop    eax
  40c924:	xchg   ecx,eax
  40c925:	adc    eax,0x96395857
  40c92a:	popf   
  40c92b:	cmp    DWORD PTR ds:0x63d93cf7,ecx
  40c931:	xchg   DWORD PTR [eax-0x14],edx
  40c934:	xchg   ebp,eax
  40c935:	cmp    eax,0xb14752fc
  40c93a:	imul   edi,DWORD PTR [edi+edx*8],0xc96b5ef5
  40c941:	ss cwde 
  40c943:	scas   eax,DWORD PTR es:[edi]
  40c944:	std    
  40c945:	rcl    esp,cl
  40c947:	pop    edi
  40c948:	mov    dh,0x28
  40c94a:	test   DWORD PTR [ecx+esi*1],0xb44ae948
  40c951:	or     cl,BYTE PTR [edx]
  40c953:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c954:	ja     0x40c95f
  40c956:	add    edx,DWORD PTR ds:0x2f334f3a
  40c95c:	and    bl,ch
  40c95e:	es mov ch,0xe7
  40c961:	daa    
  40c962:	cmp    edi,edi
  40c964:	imul   esp,DWORD PTR [edi-0x60d2df2b],0x729c5c87
  40c96e:	das    
  40c96f:	fisttp WORD PTR [edx+eax*4]
  40c972:	pop    edx
  40c973:	or     BYTE PTR [esi-0x4fa721fd],0xc2
  40c97a:	jno    0x40c9ce
  40c97c:	adc    DWORD PTR [edx+eax*8+0x67],ebx
  40c980:	push   ebp
  40c981:	cmp    DWORD PTR [ecx],0x23
  40c984:	and    al,0x53
  40c986:	push   eax
  40c987:	sub    al,0x1b
  40c989:	iret   
  40c98a:	loopne 0x40c95b
  40c98c:	mov    DWORD PTR [ebx-0x44],ebp
  40c98f:	pop    ecx
  40c990:	lock mov cl,0xc9
  40c993:	mov    ds:0x1d7afcba,eax
  40c998:	mov    BYTE PTR [edx-0x50],bl
  40c99b:	and    eax,0x404ae1df
  40c9a0:	lea    esp,[esi]
  40c9a2:	lock cmc 
  40c9a4:	cmp    ecx,eax
  40c9a6:	fs xchg edi,eax
  40c9a8:	xor    ecx,esp
  40c9aa:	fldcw  WORD PTR [ecx]
  40c9ac:	jnp    0x40ca12
  40c9ae:	repz fcmovnbe st,st(6)
  40c9b1:	jb     0x40c9f2
  40c9b3:	push   esp
  40c9b4:	inc    edx
  40c9b5:	or     eax,0x547623e5
  40c9ba:	jmp    0x40ca0f
  40c9bc:	mov    edi,DWORD PTR [esp+ebp*2]
  40c9bf:	sbb    cl,al
  40c9c1:	add    al,0xc7
  40c9c3:	pop    es
  40c9c4:	adc    DWORD PTR [esi+0x3a],eax
  40c9c7:	add    dl,BYTE PTR ds:0x254842a7
  40c9cd:	int3   
  40c9ce:	jge    0x40ca18
  40c9d0:	push   0xffffff82
  40c9d2:	mov    esp,0x93cf452e
  40c9d7:	daa    
  40c9d8:	popf   
  40c9d9:	div    BYTE PTR [eax+0x756d4a55]
  40c9df:	inc    esi
  40c9e0:	adc    al,0xc
  40c9e2:	fcomp  QWORD PTR [ebp+0x3b60493c]
  40c9e8:	ror    BYTE PTR [esp+ebp*1-0x32],1
  40c9ec:	(bad)  
  40c9ed:	cmp    ebp,eax
  40c9ef:	push   eax
  40c9f0:	fidiv  WORD PTR [edx]
  40c9f2:	aas    
  40c9f3:	and    ecx,esi
  40c9f5:	ins    BYTE PTR es:[edi],dx
  40c9f6:	and    dl,BYTE PTR [ebp-0x199dbc65]
  40c9fc:	in     eax,0x66
  40c9fe:	push   cs
  40c9ff:	push   ebp
  40ca00:	sbb    al,0x1f
  40ca02:	mov    al,ds:0xe00d7877
  40ca07:	mov    cl,0xdd
  40ca09:	sub    edx,0xffffffdb
  40ca0c:	jmp    0x40ca7f
  40ca0e:	daa    
  40ca0f:	pop    ebp
  40ca10:	dec    eax
  40ca11:	pusha  
  40ca12:	psllq  xmm2,XMMWORD PTR [esi+0x520ec65d]
  40ca1a:	jns    0x40ca1d
  40ca1c:	mov    DWORD PTR [eax],0x4e79c486
  40ca22:	dec    ebp
  40ca23:	jb     0x40c9fe
  40ca25:	cmp    eax,DWORD PTR [ecx+0x7f26744d]
  40ca2b:	cmp    eax,0x34413506
  40ca30:	je     0x40ca95
  40ca32:	mov    al,ds:0xe6192fe3
  40ca37:	int    0x9f
  40ca39:	cmp    eax,0xdbd27953
  40ca3e:	scas   eax,DWORD PTR es:[edi]
  40ca3f:	mov    dl,0x0
  40ca41:	je     0x40ca3d
  40ca43:	pop    DWORD PTR gs:[esi]
  40ca46:	lahf   
  40ca47:	stos   DWORD PTR es:[edi],eax
  40ca48:	push   es
  40ca49:	mov    eax,DWORD PTR [edx+0xb]
  40ca4c:	pop    es
  40ca4d:	dec    esi
  40ca4e:	mov    esp,0x86973aeb
  40ca53:	outs   dx,BYTE PTR ds:[esi]
  40ca54:	add    al,0x86
  40ca56:	push   ss
  40ca57:	inc    ecx
  40ca58:	ret    0xd1c2
  40ca5b:	cli    
  40ca5c:	xchg   esi,eax
  40ca5d:	les    eax,FWORD PTR [ecx]
  40ca5f:	xor    al,0xe9
  40ca61:	jmp    0xcfdd4c0d
  40ca66:	mov    esp,0x7a1939a8
  40ca6b:	xlat   BYTE PTR ds:[ebx]
  40ca6c:	xchg   esi,eax
  40ca6d:	sti    
  40ca6e:	(bad)  
  40ca6f:	or     BYTE PTR [ecx+0x60],dl
  40ca72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca73:	shl    DWORD PTR [ebx+eax*1+0x630f5a2b],cl
  40ca7a:	mov    edx,0xf1ae7786
  40ca7f:	mov    esi,0x53057f41
  40ca84:	xlat   BYTE PTR ds:[ebx]
  40ca85:	mov    ds:0xdf1b4664,eax
  40ca8a:	mov    WORD PTR [ecx+0x7cd95b89],ds
  40ca90:	add    BYTE PTR [ecx],0x32
  40ca93:	loopne 0x40ca3a
  40ca95:	cmp    BYTE PTR ds:0xdc8dfb8e,0xeb
  40ca9c:	inc    edi
  40ca9d:	fsub   DWORD PTR [ecx-0x400cc694]
  40caa3:	test   DWORD PTR [edx-0x5d],ebp
  40caa6:	adc    eax,0xc30c9a9b
  40caab:	test   BYTE PTR [ebp-0xf],0x98
  40caaf:	xchg   edi,eax
  40cab0:	pop    ss
  40cab1:	sar    BYTE PTR [ecx+0x64],0x6
  40cab5:	out    0x1e,eax
  40cab7:	outs   dx,DWORD PTR ds:[esi]
  40cab8:	and    edx,ebx
  40caba:	repz test ebx,edx
  40cabd:	adc    BYTE PTR [ecx+eax*4],dh
  40cac0:	test   eax,0x348fd107
  40cac5:	in     al,dx
  40cac6:	mov    ds:0xcaadad89,eax
  40cacb:	pop    edx
  40cacc:	dec    ebx
  40cacd:	xchg   ebp,eax
  40cace:	jge    0x40cac5
  40cad0:	pusha  
  40cad1:	rcr    ecx,1
  40cad3:	ret    
  40cad4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cad5:	mov    dl,0xbc
  40cad7:	jmp    0x40cb11
  40cad9:	cdq    
  40cada:	enter  0xe554,0xb0
  40cade:	retf   
  40cadf:	out    dx,eax
  40cae0:	retf   0x8253
  40cae3:	shr    DWORD PTR [edi+0x4c],1
  40cae6:	jl     0x40ca85
  40cae8:	mov    fs,WORD PTR [eax]
  40caea:	clc    
  40caeb:	lea    esp,[eax+0x102de0d6]
  40caf1:	mov    ds:0x46fce8ad,al
  40caf6:	std    
  40caf7:	fild   WORD PTR [ebx-0x48]
  40cafa:	in     eax,0xea
  40cafc:	xchg   BYTE PTR [eax+0x26],dl
  40caff:	sbb    ch,BYTE PTR [edi]
  40cb01:	mov    esi,0xab5903bd
  40cb06:	xchg   bh,bh
  40cb08:	add    dl,BYTE PTR [ebp-0x1a]
  40cb0b:	inc    eax
  40cb0c:	sbb    al,0x7e
  40cb0e:	scas   eax,DWORD PTR es:[edi]
  40cb0f:	dec    eax
  40cb10:	add    esp,DWORD PTR [ebp+0x22]
  40cb13:	lock inc edx
  40cb15:	xchg   edx,eax
  40cb16:	cs dec esi
  40cb18:	test   DWORD PTR [eax+0x5a525c4b],ebx
  40cb1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb1f:	jb     0x40cb4c
  40cb21:	sub    esi,DWORD PTR [edi+eax*2+0x1b]
  40cb25:	inc    ebp
  40cb26:	dec    ebp
  40cb27:	xchg   esp,eax
  40cb28:	mov    ah,0x8
  40cb2a:	push   eax
  40cb2b:	inc    edi
  40cb2c:	add    al,0xba
  40cb2e:	sub    ecx,DWORD PTR [esi]
  40cb30:	fdivr  st(7),st
  40cb32:	jns    0x40cb7b
  40cb34:	xchg   ebp,eax
  40cb35:	xchg   edi,eax
  40cb36:	call   0x35bd6e42
  40cb3b:	mov    esi,0xf68aa0db
  40cb40:	or     BYTE PTR [eax-0x69],0x5
  40cb44:	lds    ebp,FWORD PTR [edx-0x604f68f]
  40cb4a:	pop    ecx
  40cb4b:	mov    eax,ds:0xd81c238b
  40cb50:	nop
  40cb51:	rcl    BYTE PTR [edx+edi*1],1
  40cb54:	addr16 mov esi,0x6694fd2e
  40cb5a:	xchg   ebp,eax
  40cb5b:	adc    eax,0xf9c878bc
  40cb60:	iret   
  40cb61:	jb     0x40cba7
  40cb63:	in     al,0xa2
  40cb65:	mov    ss,WORD PTR [eax-0xcc32586]
  40cb6b:	xor    esp,0xffffff99
  40cb6e:	mov    edi,0xd395cd66
  40cb73:	pop    edx
  40cb74:	and    eax,0x6871337d
  40cb79:	push   cs
  40cb7a:	fist   WORD PTR [edi-0x55]
  40cb7d:	fsubr  st(6),st
  40cb7f:	jno    0x40cb7c
  40cb81:	(bad)  
  40cb82:	std    
  40cb83:	jno    0x40cb5e
  40cb85:	nop
  40cb86:	sbb    bh,BYTE PTR [edx+ebx*8]
  40cb89:	adc    edi,ebx
  40cb8b:	addr16 jp 0x40cb60
  40cb8e:	mov    edi,0x2e6f87dd
  40cb93:	sub    eax,0x2f3a12f5
  40cb98:	scas   al,BYTE PTR es:[edi]
  40cb99:	jnp    0x40cc09
  40cb9b:	loope  0x40cb65
  40cb9d:	xchg   ecx,eax
  40cb9e:	aam    0xe7
  40cba0:	and    eax,0xc2339e87
  40cba5:	xor    bh,BYTE PTR [ecx-0x4fee9518]
  40cbab:	adc    bh,al
  40cbad:	in     al,0xd4
  40cbaf:	fs aad 0xe0
  40cbb2:	mov    ds:0x3489c175,eax
  40cbb7:	and    bl,BYTE PTR [esi]
  40cbb9:	and    BYTE PTR [ebx],bl
  40cbbb:	aam    0x74
  40cbbd:	arpl   WORD PTR [ebx+esi*4],si
  40cbc0:	xor    ch,BYTE PTR [edi+0x1]
  40cbc3:	pop    ebp
  40cbc4:	jne    0x40cb8a
  40cbc6:	mov    eax,ds:0xe247ecc4
  40cbcb:	loop   0x40cc0d
  40cbcd:	out    dx,eax
  40cbce:	mov    ss,ebp
  40cbd0:	into   
  40cbd1:	xchg   edx,eax
  40cbd2:	push   ebx
  40cbd3:	into   
  40cbd4:	inc    ecx
  40cbd5:	xchg   ebp,eax
  40cbd6:	mov    cl,0xf2
  40cbd8:	inc    esp
  40cbd9:	pop    ds
  40cbda:	xor    eax,0xcea1d298
  40cbdf:	jbe    0x40cb78
  40cbe1:	sahf   
  40cbe2:	shr    BYTE PTR [ebp+0x38],cl
  40cbe5:	sahf   
  40cbe6:	add    BYTE PTR [esi],ah
  40cbe8:	loope  0x40cc19
  40cbea:	adc    eax,DWORD PTR [edi+0xed480d9]
  40cbf0:	stos   DWORD PTR es:[edi],eax
  40cbf1:	adc    esi,0xb0942fff
  40cbf7:	aaa    
  40cbf8:	outs   dx,DWORD PTR ds:[esi]
  40cbf9:	cmp    dl,ah
  40cbfb:	scas   al,BYTE PTR es:[edi]
  40cbfc:	clc    
  40cbfd:	pop    ebp
  40cbfe:	mov    dl,0x2c
  40cc00:	fsubr  st(2),st
  40cc02:	sbb    ebx,DWORD PTR [esi+ebp*1+0x46]
  40cc06:	mov    ds:0x7365c980,al
  40cc0b:	lock in eax,0x4d
  40cc0e:	push   0x24c99db9
  40cc13:	ja     0x40cc32
  40cc15:	pop    ebx
  40cc16:	and    al,0x93
  40cc18:	fstp   DWORD PTR [eax+ebx*2-0x53]
  40cc1c:	(bad)  
  40cc1d:	cli    
  40cc1e:	xchg   esi,eax
  40cc1f:	aad    0xf3
  40cc21:	and    eax,0x18ebf098
  40cc26:	(bad)  
  40cc27:	adc    dh,BYTE PTR [esi+0x285b541c]
  40cc2d:	fdivr  DWORD PTR [edi+0x36b30da5]
  40cc33:	push   eax
  40cc34:	xchg   edi,eax
  40cc35:	push   eax
  40cc36:	rcr    DWORD PTR [eax],cl
  40cc38:	loop   0x40cbc8
  40cc3a:	aam    0x86
  40cc3c:	push   edx
  40cc3d:	mov    ebx,0x18c656a7
  40cc42:	aas    
  40cc43:	jae    0x40ccb1
  40cc45:	push   ds
  40cc46:	neg    cl
  40cc48:	mov    esi,0xfe8b82c0
  40cc4d:	fld    DWORD PTR [ebp-0x57]
  40cc50:	das    
  40cc51:	push   esp
  40cc52:	jecxz  0x40cc11
  40cc54:	sub    edi,edi
  40cc56:	xchg   ebx,eax
  40cc57:	add    al,0xf8
  40cc59:	adc    edi,ecx
  40cc5b:	stos   BYTE PTR es:[edi],al
  40cc5c:	xchg   esp,eax
  40cc5d:	ss jns 0x40cc2d
  40cc60:	fst    DWORD PTR ds:0x6fedda40
  40cc66:	add    DWORD PTR [edx+0x56],edx
  40cc69:	bound  ebx,QWORD PTR [esi+0x2cdac478]
  40cc6f:	mov    esi,0x6c19ce2e
  40cc74:	lods   al,BYTE PTR ds:[esi]
  40cc75:	cmp    al,0x5e
  40cc77:	fmul   st(7),st
  40cc79:	or     al,0x80
  40cc7b:	pushf  
  40cc7c:	push   esi
  40cc7d:	shr    DWORD PTR [eax+0x32fb1bb],0xbc
  40cc84:	push   ecx
  40cc85:	jmp    0xca86:0xa4feecab
  40cc8c:	call   0x3bf8f331
  40cc91:	fsubr  st(1),st
  40cc93:	shl    DWORD PTR [ebp+0x6ba2fd55],cl
  40cc99:	(bad)  
  40cc9a:	ins    DWORD PTR es:[edi],dx
  40cc9b:	pop    esi
  40cc9c:	(bad)  
  40cc9d:	xor    edi,eax
  40cc9f:	mov    DWORD PTR ds:0xe1b196ee,esp
  40cca5:	clc    
  40cca6:	in     eax,dx
  40cca7:	icebp  
  40cca8:	mov    bh,0x66
  40ccaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccab:	xchg   ecx,eax
  40ccac:	sub    ch,BYTE PTR [edi+0x64]
  40ccaf:	jae    0x40ccf7
  40ccb1:	xchg   ebx,eax
  40ccb2:	jge    0x40ccb1
  40ccb4:	dec    edi
  40ccb5:	pop    edi
  40ccb6:	dec    esp
  40ccb7:	sbb    DWORD PTR [eax-0x4a2c5d38],ecx
  40ccbd:	imul   ebp,DWORD PTR [ebp+0x76d65685],0xffffffed
  40ccc4:	pop    edi
  40ccc5:	xchg   DWORD PTR [edi-0x63],eax
  40ccc8:	mov    es,WORD PTR [esi-0x5f]
  40cccb:	lds    edi,FWORD PTR [edx+0x69]
  40ccce:	mov    ds:0x143bf0d2,eax
  40ccd3:	xchg   ebp,eax
  40ccd4:	js     0x40ccac
  40ccd6:	cdq    
  40ccd7:	cmp    DWORD PTR [ebp-0x269c7c92],ebp
  40ccdd:	mov    ebp,DWORD PTR [esi-0x3993f669]
  40cce3:	or     BYTE PTR [ecx-0x11],cl
  40cce6:	xchg   ah,dl
  40cce8:	out    dx,eax
  40cce9:	mov    eax,ds:0x575c165b
  40ccee:	pop    edx
  40ccef:	fsubr  QWORD PTR [eax]
  40ccf1:	mov    al,ds:0x4cf2a8d8
  40ccf6:	add    al,0xd2
  40ccf8:	dec    edi
  40ccf9:	cs loope 0x40ccd6
  40ccfc:	cwde   
  40ccfd:	mov    al,0xa7
  40ccff:	push   eax
  40cd00:	inc    eax
  40cd01:	xchg   ebp,eax
  40cd02:	fnstcw WORD PTR [eax+0x20]
  40cd05:	jne    0x40ccf9
  40cd07:	pop    ebp
  40cd08:	pop    edx
  40cd09:	js     0x40cd50
  40cd0b:	inc    edx
  40cd0c:	sbb    BYTE PTR [ebp-0x216c39c],dl
  40cd12:	jg     0x40ccee
  40cd14:	xor    eax,0x687172fc
  40cd19:	and    BYTE PTR [esi],dl
  40cd1b:	imul   edx,esp,0xffffffe7
  40cd1e:	pop    ecx
  40cd1f:	jae    0x40cd4d
  40cd21:	pop    ds
  40cd22:	ficom  DWORD PTR [ebp+0x2c4d9706]
  40cd28:	sub    BYTE PTR [edx],dl
  40cd2a:	loope  0x40cce1
  40cd2c:	retf   
  40cd2d:	lds    eax,FWORD PTR [esp+ecx*2+0x740e7686]
  40cd34:	(bad)  
  40cd36:	pop    esi
  40cd37:	jo     0x40cda4
  40cd39:	ret    
  40cd3a:	add    al,0x39
  40cd3c:	in     eax,0x59
  40cd3e:	(bad)  
  40cd3f:	jae    0x40cd60
  40cd41:	repz dec ecx
  40cd43:	add    BYTE PTR [edx+0xf320c55],dl
  40cd49:	lock outs dx,DWORD PTR ds:[esi]
  40cd4b:	adc    BYTE PTR [ebx-0x25],dh
  40cd4e:	mov    dh,0x6f
  40cd50:	retf   0x9307
  40cd53:	mov    ah,0xfe
  40cd55:	add    eax,0x67e470d0
  40cd5a:	ja     0x40cd9e
  40cd5c:	fdiv   QWORD PTR [ebp+0x3f5d7b18]
  40cd62:	fstp   DWORD PTR ds:0xba7bbb3b
  40cd68:	(bad)  [ebx+ebx*1-0x22bd5469]
  40cd6f:	xchg   edx,eax
  40cd70:	jg     0x40cd2a
  40cd72:	shr    BYTE PTR ds:0x7e122387,1
  40cd78:	lods   al,BYTE PTR ds:[esi]
  40cd79:	shl    BYTE PTR [ebx-0x7ed45982],0xea
  40cd80:	fcmovb st,st(2)
  40cd82:	(bad)  
  40cd83:	loop   0x40cd3c
  40cd85:	xchg   esi,eax
  40cd86:	fiadd  DWORD PTR [edi+0x50]
  40cd89:	jecxz  0x40cd5d
  40cd8b:	mov    esp,0x304ee5fe
  40cd90:	add    BYTE PTR [eax+ebp*8],ah
  40cd93:	test   DWORD PTR [edi],esp
  40cd95:	outs   dx,BYTE PTR ds:[esi]
  40cd96:	loop   0x40cd9b
  40cd98:	sahf   
  40cd99:	pop    ss
  40cd9a:	push   ss
  40cd9b:	ficomp DWORD PTR [esi+0xd]
  40cd9e:	or     edx,DWORD PTR [eax-0x7af9b4a4]
  40cda4:	adc    dh,BYTE PTR [edi+ecx*4]
  40cda7:	popa   
  40cda8:	into   
  40cda9:	push   eax
  40cdaa:	jl     0x40cd54
  40cdac:	sbb    ecx,DWORD PTR [eax+0x5d]
  40cdaf:	push   es
  40cdb0:	add    DWORD PTR [edx+0x17877e01],edx
  40cdb6:	push   esi
  40cdb7:	clc    
  40cdb8:	ins    BYTE PTR es:[edi],dx
  40cdb9:	or     eax,0x9b098e51
  40cdbe:	and    BYTE PTR [ecx-0x272f42a],0xd6
  40cdc5:	addr16 mov ch,0x2e
  40cdc8:	or     al,0x14
  40cdca:	repz sbb eax,0x8b038df6
  40cdd0:	add    al,0x59
  40cdd2:	imul   esi,edx,0xd474e6b0
  40cdd8:	stos   BYTE PTR es:[edi],al
  40cdd9:	out    dx,eax
  40cdda:	mov    esp,0x8bf0e66d
  40cddf:	inc    edx
  40cde0:	cmp    dl,al
  40cde2:	or     al,0x9f
  40cde4:	dec    ecx
  40cde5:	xor    ecx,DWORD PTR [ecx+0x287ecb45]
  40cdeb:	pop    esi
  40cdec:	mov    ecx,0x500329ac
  40cdf1:	pop    esi
  40cdf2:	cmp    DWORD PTR [esi-0x33682034],esi
  40cdf8:	xchg   esp,eax
  40cdf9:	aaa    
  40cdfa:	mov    BYTE PTR [esi],dh
  40cdfc:	jmp    0x40cda8
  40cdfe:	in     al,dx
  40cdff:	or     eax,0x2b5b64bf
  40ce04:	add    eax,DWORD PTR [ebp-0x5c3df364]
  40ce0a:	jnp    0x40ce09
  40ce0c:	adc    dh,bl
  40ce0e:	mov    bl,0x75
  40ce10:	xchg   edi,eax
  40ce11:	retf   
  40ce12:	lahf   
  40ce13:	jg     0x40cdd1
  40ce15:	push   es
  40ce16:	mov    dl,0xfa
  40ce18:	xor    eax,0x50e7acdf
  40ce1d:	mov    dl,dh
  40ce1f:	and    BYTE PTR [ecx-0x613e09fb],0x7e
  40ce26:	xchg   ecx,eax
  40ce27:	mov    bh,0xe9
  40ce29:	add    BYTE PTR [ecx*2+0x1d5c9d93],ch
  40ce30:	ret    0xd0dd
  40ce33:	stc    
  40ce34:	loop   0x40ce0f
  40ce36:	dec    esi
  40ce37:	and    DWORD PTR [ecx-0xb18bb3e],ebp
  40ce3d:	ins    DWORD PTR es:[edi],dx
  40ce3e:	cmp    DWORD PTR [ebp+0x5a8a2ecf],0x5c
  40ce45:	or     bl,BYTE PTR [ebx-0x5f]
  40ce48:	shr    DWORD PTR [ecx+0x3e],1
  40ce4b:	ds jmp 0x3ab2:0x3ac88420
  40ce53:	jns    0x40ceca
  40ce55:	loop   0x40cdfd
  40ce57:	mov    ds:0x4923d98,eax
  40ce5c:	mov    edi,0xb2019d5a
  40ce61:	mov    esi,0xd7f92182
  40ce66:	dec    esi
  40ce67:	in     eax,0x64
  40ce69:	aam    0xad
  40ce6b:	retf   
  40ce6c:	push   esp
  40ce6d:	(bad)
  40ce70:	xlat   BYTE PTR ds:[ebx]
  40ce71:	mov    eax,0x2df0d6c7
  40ce76:	adc    edx,ebp
  40ce78:	jne    0x40ce66
  40ce7a:	cld    
  40ce7b:	out    0x6e,al
  40ce7d:	pop    es
  40ce7e:	ret    
  40ce7f:	dec    ebp
  40ce80:	dec    ebx
  40ce81:	cmc    
  40ce82:	out    0xac,eax
  40ce84:	lock daa 
  40ce86:	mov    DWORD PTR [ebp-0x37],0x15ad0f67
  40ce8d:	sbb    eax,0x3a1c3db6
  40ce92:	mov    ah,0x99
  40ce94:	jmp    0x40ce39
  40ce96:	cmovs  esi,DWORD PTR [ecx+0x18]
  40ce9a:	in     al,dx
  40ce9b:	lods   eax,DWORD PTR ds:[esi]
  40ce9c:	xchg   ebx,eax
  40ce9d:	xor    eax,DWORD PTR [ecx-0x15daa8a3]
  40cea3:	add    ebx,DWORD PTR [esi-0x61]
  40cea6:	and    esp,DWORD PTR [eax]
  40cea8:	xchg   ecx,eax
  40cea9:	sub    DWORD PTR [eax],esi
  40ceab:	fisubr DWORD PTR [edx-0x21]
  40ceae:	in     eax,0xc4
  40ceb0:	xor    eax,0x9c913f17
  40ceb5:	pop    ds
  40ceb6:	cmp    edx,DWORD PTR [esp+ecx*1]
  40ceb9:	mov    esi,0x3272ec
  40cebe:	jmp    0x40f242
  40cec3:	mov    cs:0xd0afdcaf,eax
  40cec9:	add    DWORD PTR [ebx+0x287882c5],eax
  40cecf:	aad    0x26
  40ced1:	jno    0x40ce67
  40ced3:	lods   eax,DWORD PTR ds:[esi]
  40ced4:	int    0x7a
  40ced6:	jp     0x40ceeb
  40ced8:	pop    edi
  40ced9:	jp     0x40cf55
  40cedb:	inc    edx
  40cedc:	ficomp DWORD PTR [edi+0x62c26069]
  40cee2:	clc    
  40cee3:	xchg   esi,eax
  40cee4:	fistp  DWORD PTR [ebp-0x4c]
  40cee7:	aam    0xc7
  40cee9:	jno    0x40ceb0
  40ceeb:	inc    edx
  40ceec:	cs loopne 0x40cea4
  40ceef:	leave  
  40cef0:	mov    esp,0xc202ef1e
  40cef5:	ss cwde 
  40cef7:	js     0x40cef4
  40cef9:	push   eax
  40cefa:	in     eax,0xf8
  40cefc:	sub    BYTE PTR [edx+0x78],cl
  40ceff:	sbb    BYTE PTR [ecx],ah
  40cf01:	jle    0x40ceac
  40cf03:	dec    ebx
  40cf04:	je     0x40cf24
  40cf06:	daa    
  40cf07:	ror    BYTE PTR [ecx+0x69a74608],0x83
  40cf0e:	push   esp
  40cf0f:	imul   edi,DWORD PTR [ecx],0x766545da
  40cf15:	xchg   BYTE PTR [esi+edi*1-0x3a],dl
  40cf19:	pusha  
  40cf1a:	daa    
  40cf1b:	add    al,0x3
  40cf1d:	push   0x1931dd51
  40cf22:	pusha  
  40cf23:	popf   
  40cf24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf25:	mov    ch,0x49
  40cf27:	inc    ebp
  40cf28:	cli    
  40cf29:	dec    ecx
  40cf2a:	out    0xd8,eax
  40cf2c:	push   0x1
  40cf2e:	test   cl,0x26
  40cf31:	dec    edi
  40cf32:	xor    al,0x85
  40cf34:	icebp  
  40cf35:	imul   DWORD PTR [edx+0x798f37d8]
  40cf3b:	repz dec ebp
  40cf3d:	push   0x3f
  40cf3f:	push   ebx
  40cf40:	dec    esp
  40cf41:	push   0x974ef8b3
  40cf46:	xchg   ebx,eax
  40cf47:	xlat   BYTE PTR ds:[ebx]
  40cf48:	repz adc edx,DWORD PTR [ecx-0x1f01c8d3]
  40cf4f:	scas   al,BYTE PTR es:[edi]
  40cf50:	cmp    ebx,ecx
  40cf52:	inc    edx
  40cf53:	aad    0xd2
  40cf55:	loope  0x40cf7a
  40cf57:	or     eax,0xc2d6d13e
  40cf5c:	mov    al,ds:0xa66b00fc
  40cf61:	je     0x40cef3
  40cf63:	dec    ebx
  40cf64:	or     BYTE PTR [ebp-0x77a5e533],al
  40cf6a:	cli    
  40cf6b:	mov    edx,0xbdff82e5
  40cf70:	pop    ebp
  40cf71:	stos   BYTE PTR es:[edi],al
  40cf72:	test   ecx,ebx
  40cf74:	sub    edx,DWORD PTR ss:[edi+edi*2]
  40cf78:	push   0xffffff8f
  40cf7a:	mov    DWORD PTR [edx+0x562ea3e9],ebp
  40cf80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf81:	sub    esi,ebp
  40cf83:	clc    
  40cf84:	add    ebx,ebp
  40cf86:	dec    ecx
  40cf87:	pushf  
  40cf88:	jae    0x40cf0e
  40cf8a:	call   0xa3c5:0x6db548ef
  40cf91:	lock retf 0x6696
  40cf95:	int3   
  40cf96:	push   DWORD PTR [edx-0x49]
  40cf99:	dec    edi
  40cf9a:	push   edi
  40cf9b:	ins    DWORD PTR es:[edi],dx
  40cf9c:	sub    BYTE PTR [esi],bl
  40cf9e:	ss loope 0x40cf76
  40cfa1:	jecxz  0x40cfac
  40cfa3:	mov    ebx,0x49a9c1d8
  40cfa8:	dec    BYTE PTR [edi]
  40cfaa:	shl    DWORD PTR ss:[esi+0x63e1b210],0x32
  40cfb2:	inc    edx
  40cfb3:	jne    0x40cfe0
  40cfb5:	(bad)  
  40cfb6:	ror    edi,cl
  40cfb8:	das    
  40cfb9:	enter  0x650a,0xe8
  40cfbd:	in     al,dx
  40cfbe:	jb     0x40d007
  40cfc0:	jg     0x40cfc2
  40cfc2:	xor    DWORD PTR [eax],ebx
  40cfc4:	pop    edx
  40cfc5:	pop    ecx
  40cfc6:	xchg   esp,eax
  40cfc7:	fnsave [esi-0x1a]
  40cfca:	jmp    0xea0e3cad
  40cfcf:	fdiv   QWORD PTR [edx]
  40cfd1:	out    0x3d,eax
  40cfd3:	adc    al,BYTE PTR [edi+0xcf7f843]
  40cfd9:	sub    dh,BYTE PTR [edi+0x3a]
  40cfdc:	inc    eax
  40cfdd:	cmp    edx,DWORD PTR [edi+edi*4+0x1b]
  40cfe1:	fadd   DWORD PTR ds:[edx+0x65ecf9d7]
  40cfe8:	jecxz  0x40d045
  40cfea:	dec    ebx
  40cfeb:	add    DWORD PTR [edi-0x4],ebp
  40cfee:	pop    ebx
  40cfef:	push   edx
  40cff0:	and    eax,0xf771dd67
  40cff5:	inc    edi
  40cff6:	loope  0x40d067
  40cff8:	xchg   ebp,eax
  40cff9:	pop    ebx
  40cffa:	push   esp
  40cffb:	add    BYTE PTR [edx],cl
  40cffd:	mov    ebp,0xad09f5c2
  40d002:	cmp    esp,DWORD PTR [eax]
  40d004:	lds    edx,FWORD PTR [eax+0x75]
  40d007:	lods   al,BYTE PTR ds:[esi]
  40d008:	inc    eax
  40d009:	add    dl,BYTE PTR [edx+0x8f56025]
  40d00f:	xchg   edx,eax
  40d011:	jne    0x40cfea
  40d013:	jp     0x40d05a
  40d015:	jmp    0x40cfa8
  40d017:	not    DWORD PTR [esi-0x3d]
  40d01a:	cli    
  40d01b:	push   esp
  40d01c:	add    al,0x78
  40d01e:	shl    BYTE PTR [ebx+ebp*8-0x27dbb40a],1
  40d025:	mov    DWORD PTR [esi],0x1511c85c
  40d02b:	sahf   
  40d02c:	sbb    ebp,DWORD PTR [esi+edi*2]
  40d02f:	cmp    ebx,edx
  40d031:	sub    BYTE PTR [ecx],al
  40d033:	retf   0xd0fd
  40d036:	iret   
  40d037:	ss retf 0x725c
  40d03b:	pop    edx
  40d03c:	add    BYTE PTR [eax],ah
  40d03e:	pop    esp
  40d03f:	mov    esi,DWORD PTR ds:[eax+ecx*4]
  40d043:	fsub   DWORD PTR [edx+0x57]
  40d046:	pop    ebx
  40d047:	call   0xacbb:0xe7519db5
  40d04e:	xchg   BYTE PTR [esi+0x2e],bl
  40d051:	push   ds
  40d052:	nop
  40d053:	inc    edi
  40d054:	add    al,0xec
  40d056:	adc    eax,0x29d0d700
  40d05b:	frstor [ebx-0x4073a860]
  40d061:	sahf   
  40d062:	dec    ebx
  40d063:	outs   dx,DWORD PTR ds:[esi]
  40d064:	adc    BYTE PTR [edx],0x28
  40d067:	pusha  
  40d068:	adc    al,0x3d
  40d06a:	scas   eax,DWORD PTR es:[edi]
  40d06b:	mov    edi,0xc6a2d23d
  40d070:	rcl    BYTE PTR ds:0xa80b8ed0,cl
  40d076:	mov    eax,0xec8b9bfc
  40d07b:	xchg   ebp,eax
  40d07c:	ins    BYTE PTR es:[edi],dx
  40d07d:	xor    BYTE PTR [eax-0x7bd7430c],ah
  40d083:	push   eax
  40d084:	leave  
  40d085:	adc    DWORD PTR [esi-0x24ad3b61],esi
  40d08b:	xor    edi,ebx
  40d08d:	pop    esi
  40d08e:	out    dx,eax
  40d08f:	das    
  40d090:	les    esp,FWORD PTR [ebx-0x2f]
  40d093:	imul   esi,DWORD PTR [ebx],0x5d38e63
  40d099:	mov    al,ds:0xd0e33020
  40d09e:	or     al,0xb
  40d0a0:	xor    al,0xdc
  40d0a2:	lds    edx,FWORD PTR [ecx-0x46]
  40d0a5:	mov    dh,0xaf
  40d0a7:	aaa    
  40d0a8:	popa   
  40d0a9:	jns    0x40d11e
  40d0ab:	imul   edx,DWORD PTR [edi+0x3cbee9da],0x5f
  40d0b2:	test   edi,ebp
  40d0b4:	out    0x80,al
  40d0b6:	imul   ebp,DWORD PTR [ecx-0x7c59ac1d],0xfa740724
  40d0c0:	ja     0x40d065
  40d0c2:	push   ss
  40d0c3:	addr16 jp 0x40d0e8
  40d0c6:	aaa    
  40d0c7:	and    eax,0x8210b26b
  40d0cc:	mov    ch,dh
  40d0ce:	adc    cl,BYTE PTR [ebx]
  40d0d0:	jbe    0x40d09f
  40d0d2:	mov    ds:0x6d2bc31e,al
  40d0d7:	sub    DWORD PTR [esi+0x3bd11bf8],ebp
  40d0dd:	les    ebp,FWORD PTR [eax]
  40d0df:	mov    cl,0x37
  40d0e1:	dec    esi
  40d0e2:	iret   
  40d0e3:	mov    ah,0x63
  40d0e5:	mov    dh,BYTE PTR [edx-0x35]
  40d0e8:	imul   edx,DWORD PTR [ebx-0x3f],0x6cbf0bd6
  40d0ef:	jbe    0x40d07d
  40d0f1:	clc    
  40d0f2:	dec    esp
  40d0f3:	sbb    DWORD PTR es:[eax],eax
  40d0f6:	inc    ebx
  40d0f7:	outs   dx,DWORD PTR ds:[esi]
  40d0f8:	pop    esp
  40d0f9:	pusha  
  40d0fa:	dec    ecx
  40d0fb:	cmp    al,0x55
  40d0fd:	lea    edi,[ecx]
  40d0ff:	xchg   esi,eax
  40d100:	fwait
  40d101:	(bad)  
  40d102:	push   edi
  40d103:	sub    edi,ebx
  40d105:	jb     0x40d0c7
  40d107:	push   edx
  40d108:	push   0x11
  40d10a:	test   eax,0x42e5619
  40d10f:	sbb    eax,0x482c489a
  40d114:	mov    dh,0x33
  40d116:	leave  
  40d117:	sub    al,0x6a
  40d119:	aas    
  40d11a:	cld    
  40d11b:	jae    0x40d0f1
  40d11d:	add    eax,0x5c114e4
  40d122:	outs   dx,BYTE PTR ds:[esi]
  40d123:	fldz   
  40d125:	addr16 mov cl,dl
  40d128:	aaa    
  40d129:	inc    edi
  40d12a:	fsubr  DWORD PTR [esi+0x4c]
  40d12d:	sar    BYTE PTR [eax-0x70],0xeb
  40d131:	out    dx,al
  40d132:	sub    ch,cl
  40d134:	mov    DWORD PTR [edi],eax
  40d136:	jno    0x40d172
  40d138:	xchg   DWORD PTR [ebx+0x7d],ebx
  40d13b:	test   eax,0x86f00835
  40d140:	test   BYTE PTR [ebx+0x0],0x3d
  40d144:	icebp  
  40d145:	lods   al,BYTE PTR ds:[esi]
  40d146:	shr    edi,1
  40d148:	jns    0x40d15b
  40d14a:	out    0x22,al
  40d14c:	stc    
  40d14d:	std    
  40d14e:	clc    
  40d14f:	push   0xffffff9c
  40d151:	sbb    edx,0x621224d3
  40d157:	sub    esp,ebx
  40d159:	mov    edi,0x80c20ac3
  40d15e:	sti    
  40d15f:	jl     0x40d16b
  40d161:	mov    edx,0xb5294d8f
  40d166:	cmp    DWORD PTR [ecx-0x59],ecx
  40d169:	leave  
  40d16a:	enter  0xe564,0x83
  40d16e:	test   ch,bh
  40d170:	jo     0x40d1d4
  40d172:	sbb    bh,0xfe
  40d175:	xchg   DWORD PTR [esi],ebp
  40d177:	push   ss
  40d178:	dec    edi
  40d179:	jmp    0x40d123
  40d17b:	clc    
  40d17c:	xchg   esp,eax
  40d17d:	jo     0x40d10a
  40d17f:	mov    ecx,0xe7afcd8e
  40d184:	rcr    edi,0x11
  40d187:	test   eax,0x99c6bfdf
  40d18c:	test   eax,0x97f81590
  40d191:	test   al,0x82
  40d193:	imul   ebx,ebx,0xffffffa4
  40d196:	sub    al,0x9
  40d198:	xchg   DWORD PTR [esi],edx
  40d19a:	(bad)  
  40d19b:	push   0x7e63fe8f
  40d1a0:	lock imul ebp,esp,0xa7dccb70
  40d1a7:	mov    eax,0xe702a9f9
  40d1ac:	add    BYTE PTR [esi-0x700f1586],0x5d
  40d1b3:	(bad)
  40d1b7:	push   ebp
  40d1b8:	imul   edi,ebx,0x55
  40d1bb:	push   eax
  40d1bc:	pop    esi
  40d1bd:	sub    eax,0xe0d7347a
  40d1c2:	ror    DWORD PTR [edi+0x69507ae1],0x66
  40d1c9:	enter  0x450,0x3b
  40d1cd:	pushf  
  40d1ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1cf:	cmp    DWORD PTR cs:[ecx],ebp
  40d1d2:	mov    ds:0xae6da169,al
  40d1d7:	test   bl,bl
  40d1d9:	lahf   
  40d1da:	cs sahf 
  40d1dc:	sub    edi,0xffffff93
  40d1df:	repnz add eax,0x8e8c7d50
  40d1e5:	or     al,0x95
  40d1e7:	jp     0x40d261
  40d1e9:	push   di
  40d1eb:	xchg   esi,eax
  40d1ec:	jbe    0x40d1a4
  40d1ee:	and    bh,BYTE PTR [edx-0x21]
  40d1f1:	std    
  40d1f2:	jnp    0x40d203
  40d1f4:	loopne 0x40d17b
  40d1f6:	push   esp
  40d1f7:	cs jl  0x40d20b
  40d1fa:	inc    edx
  40d1fb:	popa   
  40d1fc:	outs   dx,DWORD PTR ds:[esi]
  40d1fd:	hlt    
  40d1fe:	fstp   TBYTE PTR [ecx]
  40d200:	int3   
  40d201:	mov    ebx,0x5f887492
  40d206:	ins    BYTE PTR es:[edi],dx
  40d207:	aad    0x99
  40d209:	popa   
  40d20a:	cwde   
  40d20b:	iret   
  40d20c:	mov    ds,WORD PTR [esi+ecx*8+0x31]
  40d210:	cmp    BYTE PTR [eax-0x50],bl
  40d213:	inc    edx
  40d214:	out    dx,eax
  40d215:	mov    edx,0x268983ef
  40d21a:	dec    esi
  40d21b:	jo     0x40d28c
  40d21d:	jecxz  0x40d1c8
  40d21f:	or     ah,BYTE PTR [eax-0x113020f9]
  40d225:	aas    
  40d226:	mov    ch,0xa
  40d228:	jle    0x40d1d2
  40d22a:	jbe    0x40d1c0
  40d22c:	aas    
  40d22d:	lods   al,BYTE PTR ds:[esi]
  40d22e:	dec    ebp
  40d22f:	mov    bl,0x93
  40d231:	neg    BYTE PTR gs:[edi+0x7]
  40d235:	fild   QWORD PTR [ebx-0x2]
  40d238:	(bad)
  40d23c:	hlt    
  40d23d:	xchg   edx,eax
  40d23e:	xchg   ebp,eax
  40d23f:	call   0x99ac1cb4
  40d244:	shr    BYTE PTR [esi-0x1b],0xf9
  40d248:	out    0x6d,al
  40d24a:	popa   
  40d24b:	test   eax,0x89d89001
  40d250:	sbb    eax,0x8486c13d
  40d255:	mov    edx,0x15a609d3
  40d25a:	sti    
  40d25b:	hlt    
  40d25c:	and    BYTE PTR [edx-0x7c],dl
  40d25f:	jl     0x40d205
  40d261:	mov    ?,ecx
  40d263:	add    DWORD PTR [ebx],edx
  40d265:	scas   eax,DWORD PTR es:[edi]
  40d266:	scas   eax,DWORD PTR es:[edi]
  40d267:	shl    DWORD PTR [edi],1
  40d269:	pop    esp
  40d26a:	inc    esi
  40d26b:	xchg   ebp,eax
  40d26c:	cmp    DWORD PTR [ecx+ecx*8+0x79f1299],esp
  40d273:	mov    esi,0xd068f567
  40d278:	test   eax,0xbd6e689a
  40d27d:	idiv   edi
  40d27f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d280:	adc    al,0xf0
  40d282:	in     eax,0xdb
  40d284:	clc    
  40d285:	popa   
  40d286:	outs   dx,DWORD PTR ds:[esi]
  40d287:	ss mov bh,0xa9
  40d28a:	mov    ah,0x6f
  40d28c:	cmp    eax,0x8a858ca3
  40d291:	mov    edx,0xe8160d01
  40d296:	add    al,0x2d
  40d298:	xor    eax,0xd0ad7b28
  40d29d:	pop    ds
  40d29e:	loop   0x40d2ca
  40d2a0:	repz (bad) 
  40d2a2:	ss mov bh,0xd2
  40d2a5:	jle    0x40d308
  40d2a7:	and    al,0xef
  40d2a9:	ja     0x40d301
  40d2ab:	int3   
  40d2ac:	test   eax,0x2ea1c2ad
  40d2b1:	dec    esi
  40d2b2:	pop    ecx
  40d2b3:	push   esp
  40d2b4:	adc    al,0xe0
  40d2b6:	addr16 stc 
  40d2b8:	fcom   DWORD PTR [esi-0x2dfaa882]
  40d2be:	popf   
  40d2bf:	jp     0x40d333
  40d2c1:	lods   al,BYTE PTR ds:[esi]
  40d2c2:	ds xor bl,0x8
  40d2c6:	scas   al,BYTE PTR es:[edi]
  40d2c7:	bound  ecx,QWORD PTR [eax]
  40d2c9:	push   ecx
  40d2ca:	leave  
  40d2cb:	sub    esp,DWORD PTR [ecx+0x157767ab]
  40d2d1:	push   ecx
  40d2d2:	inc    ecx
  40d2d3:	pop    eax
  40d2d4:	cmp    ebx,DWORD PTR [ecx-0x17]
  40d2d7:	scas   al,BYTE PTR es:[edi]
  40d2d8:	xchg   BYTE PTR [edi-0x79c7182c],bl
  40d2de:	cs sbb bh,bh
  40d2e1:	aas    
  40d2e2:	inc    edx
  40d2e3:	pop    es
  40d2e4:	ins    DWORD PTR es:[edi],dx
  40d2e5:	cmp    eax,eax
  40d2e7:	mov    bh,BYTE PTR [ebx-0x3b5f006d]
  40d2ed:	pop    ss
  40d2ee:	lods   eax,DWORD PTR ds:[esi]
  40d2ef:	xor    DWORD PTR [esi+0x60af4e94],edx
  40d2f5:	add    ah,BYTE PTR [edx-0x55]
  40d2f8:	dec    esi
  40d2f9:	loopne 0x40d2c7
  40d2fb:	jmp    0x30578349
  40d300:	xor    cl,BYTE PTR [eax+0x2ed92883]
  40d306:	out    dx,al
  40d307:	adc    ecx,DWORD PTR [esi+edx*2]
  40d30a:	mov    cl,0x13
  40d30c:	adc    al,0x70
  40d30e:	loope  0x40d365
  40d310:	repz xchg edx,eax
  40d312:	iret   
  40d313:	or     cl,bh
  40d315:	std    
  40d316:	xlat   BYTE PTR ds:[ebx]
  40d317:	fs push eax
  40d319:	les    esi,FWORD PTR [edx+eax*8]
  40d31c:	out    dx,eax
  40d31d:	jle    0x40d2b4
  40d31f:	popf   
  40d320:	mov    ah,0xe8
  40d322:	dec    esi
  40d323:	inc    ecx
  40d324:	adc    edi,DWORD PTR ds:0x6390edb3
  40d32a:	ror    DWORD PTR [ebp+0x44edc952],1
  40d330:	in     al,0xcf
  40d332:	push   es
  40d333:	out    dx,al
  40d334:	xchg   edi,eax
  40d335:	inc    esi
  40d336:	lea    esi,[eax]
  40d338:	sbb    bh,BYTE PTR [edi-0x3fb6304]
  40d33e:	push   ebp
  40d33f:	adc    al,0xb7
  40d341:	sbb    eax,0xeaae5f04
  40d346:	and    ebx,DWORD PTR ds:[edx-0x1]
  40d34a:	or     edi,DWORD PTR [eax]
  40d34c:	shl    DWORD PTR [ebp-0x78],1
  40d34f:	inc    esi
  40d350:	repz fst DWORD PTR [ebp+0x56]
  40d354:	retf   0xada3
  40d357:	and    edx,edi
  40d359:	addr16 adc cl,bl
  40d35c:	cli    
  40d35d:	(bad)  
  40d35e:	sub    DWORD PTR [eax-0x20],ecx
  40d361:	out    0x78,eax
  40d363:	mov    ds:0x241df2c3,al
  40d368:	(bad)  
  40d369:	aad    0x4
  40d36b:	push   esi
  40d36c:	jg     0x40d3e8
  40d36e:	lods   al,BYTE PTR ds:[esi]
  40d36f:	mov    ebp,0x563b2815
  40d374:	mov    ebx,0x13c11602
  40d379:	test   cl,dl
  40d37b:	inc    eax
  40d37c:	shl    ah,1
  40d37e:	mov    ebp,0x1d91063f
  40d383:	cmp    BYTE PTR [edi+0x1a7de250],ah
  40d389:	loopne 0x40d3fc
  40d38b:	cld    
  40d38c:	dec    edi
  40d38d:	cmp    ebx,DWORD PTR [eax+0x3a]
  40d390:	fcmovbe st,st(7)
  40d392:	stc    
  40d393:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d394:	jecxz  0x40d3b7
  40d396:	dec    ecx
  40d397:	pop    ebp
  40d398:	in     eax,0x8a
  40d39a:	sar    BYTE PTR [esi],cl
  40d39c:	xchg   edi,eax
  40d39d:	xor    DWORD PTR [eax],0x43
  40d3a0:	add    ebp,DWORD PTR [edi-0x62]
  40d3a3:	and    DWORD PTR [edx+0xe2587db],0x1b45cf96
  40d3ad:	sar    DWORD PTR [ebp-0x24],0xae
  40d3b1:	pop    ss
  40d3b2:	arpl   WORD PTR ds:0x32c9f3c8,bp
  40d3b8:	sbb    DWORD PTR [ebx-0x20],edi
  40d3bb:	bound  edi,QWORD PTR [ecx]
  40d3bd:	aam    0xe2
  40d3bf:	or     eax,0xb3337fae
  40d3c4:	and    BYTE PTR [ecx-0x15456cbc],cl
  40d3ca:	rcl    DWORD PTR [ebx-0x71],1
  40d3cd:	xor    ebp,DWORD PTR [edx]
  40d3cf:	ret    
  40d3d0:	dec    edx
  40d3d1:	jp     0x40d36b
  40d3d3:	adc    al,BYTE PTR [esi-0x52237659]
  40d3d9:	sbb    BYTE PTR [ecx-0x41738bb8],bh
  40d3df:	dec    esp
  40d3e0:	repnz dec ebp
  40d3e2:	mov    ah,0x56
  40d3e4:	push   ebx
  40d3e5:	retf   
  40d3e6:	jl     0x40d410
  40d3e8:	inc    ecx
  40d3e9:	push   ebp
  40d3ea:	dec    edi
  40d3eb:	inc    edx
  40d3ec:	mov    dl,0x9f
  40d3ee:	imul   esi,eax,0xffffff84
  40d3f1:	mov    eax,0x4eb66f6a
  40d3f6:	repz xor al,0xae
  40d3f9:	test   BYTE PTR [edi],al
  40d3fb:	push   edi
  40d3fc:	pushf  
  40d3fd:	dec    esi
  40d3fe:	fisubr WORD PTR [edi-0x2648cbcf]
  40d404:	pusha  
  40d405:	(bad)  [ecx+edx*8+0x18b87fd8]
  40d40c:	mov    esp,0x1ed3da41
  40d411:	hlt    
  40d412:	dec    ecx
  40d413:	jno    0x40d491
  40d415:	dec    edi
  40d416:	lahf   
  40d417:	imul   ebp,DWORD PTR [esi-0x75],0xfffffff6
  40d41b:	jmp    0x3bc8:0x41c46ab
  40d422:	adc    eax,0x6dbe4313
  40d427:	lods   eax,DWORD PTR ds:[esi]
  40d428:	nop
  40d429:	fwait
  40d42a:	leave  
  40d42b:	sub    edi,DWORD PTR [edi+0x7f]
  40d42e:	xchg   esi,eax
  40d42f:	sahf   
  40d430:	sbb    cl,BYTE PTR [edx]
  40d432:	sbb    ch,BYTE PTR [edx-0x6a]
  40d435:	pop    eax
  40d436:	add    al,0xd4
  40d438:	mov    esi,0xbafe86d
  40d43d:	or     eax,0xb57b4ada
  40d442:	out    0x60,eax
  40d444:	add    edi,eax
  40d446:	sbb    DWORD PTR [eax+eiz*4],eax
  40d449:	mov    cs,esp
  40d44b:	add    ebp,ebx
  40d44d:	add    BYTE PTR [ecx+0x37],dl
  40d450:	xchg   ebp,eax
  40d451:	rol    BYTE PTR [edx-0x39fb47ee],0xf8
  40d458:	mov    edi,0x1a474349
  40d45d:	gs mov dl,0xb2
  40d460:	inc    esi
  40d461:	pop    es
  40d462:	imul   esi,DWORD PTR [ecx],0xffffffb2
  40d465:	imul   ebx,DWORD PTR [ebx+eax*8+0x1b59a16b],0xffffffa6
  40d46d:	xchg   DWORD PTR [ecx-0x79],esp
  40d470:	loop   0x40d415
  40d472:	ja     0x40d4d1
  40d474:	inc    eax
  40d475:	sub    bl,dl
  40d477:	mov    esi,0x7d918e5d
  40d47c:	(bad)  {k4}{z}
  40d481:	fld    DWORD PTR [edi]
  40d483:	or     dh,BYTE PTR [edx-0x1b7534d8]
  40d489:	test   BYTE PTR [eax],dh
  40d48b:	mov    al,ds:0x1501ec1c
  40d490:	jno    0x40d479
  40d492:	dec    esi
  40d493:	adc    BYTE PTR [eax],bh
  40d495:	jge    0x40d494
  40d497:	or     bh,cl
  40d499:	retfw  
  40d49b:	jmp    0x7b5ec7ac
  40d4a0:	fmul   st,st(6)
  40d4a2:	in     al,0x1f
  40d4a4:	out    dx,al
  40d4a5:	(bad)  
  40d4a6:	daa    
  40d4a7:	or     BYTE PTR [eax+0x471832ac],0x9d
  40d4ae:	les    eax,FWORD PTR [edx+ebp*4-0x3]
  40d4b2:	das    
  40d4b3:	ficomp DWORD PTR [eax]
  40d4b5:	sub    BYTE PTR [edx-0x12],dh
  40d4b8:	fwait
  40d4b9:	inc    esi
  40d4ba:	popa   
  40d4bb:	ss xchg ebp,eax
  40d4bd:	fcomp  DWORD PTR [esi+0x7a]
  40d4c0:	push   0xcbe9b18b
  40d4c5:	in     eax,dx
  40d4c6:	sahf   
  40d4c7:	add    ebx,DWORD PTR [edi+0x4250044]
  40d4cd:	push   cs
  40d4ce:	mov    eax,0xa369c675
  40d4d3:	dec    ebp
  40d4d4:	sub    bh,BYTE PTR [edi+0x7253aac4]
  40d4da:	jb     0x40d53e
  40d4dc:	mov    eax,ds:0x38c53f34
  40d4e1:	pop    edx
  40d4e2:	aaa    
  40d4e3:	jge    0x40d521
  40d4e5:	(bad)  
  40d4e6:	aam    0x1a
  40d4e8:	add    eax,0x3e352b4a
  40d4ed:	jbe    0x40d533
  40d4ef:	add    cl,BYTE PTR [ebx]
  40d4f1:	int3   
  40d4f2:	sub    ebx,DWORD PTR [edx+edi*8]
  40d4f5:	call   0x401f:0x3edba85e
  40d4fc:	mov    eax,ds:0x80667791
  40d501:	mov    BYTE PTR [eax-0x2fa836a8],cl
  40d507:	jns    0x40d548
  40d509:	out    0xfe,eax
  40d50b:	dec    ecx
  40d50c:	aaa    
  40d50d:	ret    0xa046
  40d510:	inc    edi
  40d511:	ret    0x52f0
  40d514:	push   0x30cf6e48
  40d519:	mov    fs,ebx
  40d51b:	jnp    0x40d59b
  40d51d:	cmp    ebx,esi
  40d51f:	jecxz  0x40d518
  40d521:	mov    edi,0xc4b3ad69
  40d526:	or     dh,BYTE PTR [eax]
  40d528:	xor    eax,0x6f3aef7c
  40d52d:	fidivr DWORD PTR [esi]
  40d52f:	add    eax,edx
  40d531:	xor    esi,DWORD PTR [eax-0x621c3521]
  40d537:	cmp    al,0xd4
  40d539:	lea    esp,[eax-0x5e0eb04]
  40d53f:	sub    eax,0xf566c179
  40d544:	lahf   
  40d545:	sub    ch,BYTE PTR [ecx]
  40d547:	pop    esi
  40d548:	popf   
  40d549:	outs   dx,BYTE PTR ds:[esi]
  40d54a:	aaa    
  40d54b:	jge    0x40d5c1
  40d54d:	stos   DWORD PTR es:[edi],eax
  40d54e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d54f:	push   ss
  40d550:	pop    ds
  40d551:	aad    0x9f
  40d553:	out    0x26,al
  40d555:	das    
  40d556:	jg     0x40d5a8
  40d558:	or     ch,BYTE PTR [edi+edi*2+0x2f]
  40d55c:	xchg   ebp,eax
  40d55d:	enter  0x25d5,0xec
  40d561:	lds    ebx,FWORD PTR [ebp+ebp*1+0x10]
  40d565:	pop    ebx
  40d566:	push   esp
  40d567:	sbb    ch,al
  40d569:	mov    edi,cs
  40d56b:	iret   
  40d56c:	(bad)  
  40d56d:	and    BYTE PTR [eax-0x53],0x8f
  40d571:	cld    
  40d572:	enter  0xdd1e,0x74
  40d576:	fwait
  40d577:	xchg   DWORD PTR [ebx+edx*8+0x6f],esp
  40d57b:	add    ebx,DWORD PTR [edx-0x2725c1a]
  40d581:	cmp    ecx,DWORD PTR [esi-0x6d99a845]
  40d587:	into   
  40d588:	jno    0x40d5e9
  40d58a:	je     0x40d524
  40d58c:	rol    BYTE PTR [edx+0xcb76543],cl
  40d592:	hlt    
  40d593:	(bad)  
  40d594:	cmp    esp,ebx
  40d596:	sar    BYTE PTR [edx-0xe469b2a],1
  40d59c:	or     DWORD PTR [edi-0x1c6df346],edi
  40d5a2:	daa    
  40d5a3:	mov    cl,0x1a
  40d5a5:	aam    0x1b
  40d5a7:	fnstsw WORD PTR ds:0x2ca0f02b
  40d5ad:	mov    esp,0x20ef8699
  40d5b2:	pop    es
  40d5b3:	adc    ah,BYTE PTR ds:0x7b36f65e
  40d5b9:	dec    ebx
  40d5ba:	loope  0x40d5a4
  40d5bc:	sbb    BYTE PTR [ebp+0x1a],al
  40d5bf:	std    
  40d5c0:	or     BYTE PTR cs:[ebx+0x565e849b],ch
  40d5c7:	add    ch,BYTE PTR [ecx-0x1e]
  40d5ca:	es xor eax,0xd838a6b3
  40d5d0:	retf   0x543f
  40d5d3:	xor    DWORD PTR [ebx+edx*2-0x2c],eax
  40d5d7:	push   ebp
  40d5d8:	ins    DWORD PTR es:[edi],dx
  40d5d9:	in     eax,0x50
  40d5db:	fimul  DWORD PTR [esi-0x7250c833]
  40d5e1:	pop    es
  40d5e2:	retf   
  40d5e3:	and    al,0x3a
  40d5e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5e6:	(bad)  
  40d5e7:	mov    esi,0x81fc4329
  40d5ec:	adc    BYTE PTR [ebx+0xdb11c04],0x6a
  40d5f3:	ficom  DWORD PTR [eax-0x547de893]
  40d5f9:	in     al,dx
  40d5fa:	lds    edi,FWORD PTR [esi]
  40d5fc:	mov    bh,0x55
  40d5fe:	add    ebp,DWORD PTR [esi]
  40d600:	nop
  40d601:	add    esi,DWORD PTR [eax-0x7fef6d2a]
  40d607:	ds push 0x44
  40d60a:	lods   al,BYTE PTR ds:[esi]
  40d60b:	xor    al,0xee
  40d60d:	adc    BYTE PTR [ebx-0x79],al
  40d610:	push   ecx
  40d611:	stc    
  40d612:	mov    al,ds:0xa859f788
  40d617:	jnp    0x40d691
  40d619:	add    bl,BYTE PTR [edi+ebx*1]
  40d61c:	call   0x78d0:0xf4f26322
  40d623:	mov    bl,BYTE PTR [edi+0x71]
  40d626:	inc    DWORD PTR [edx]
  40d628:	and    edx,DWORD PTR ds:0xba0b29ad
  40d62e:	nop
  40d62f:	cmp    DWORD PTR [ebp+0x57b01d93],0xf19fe265
  40d639:	pop    ebp
  40d63a:	ja     0x40d64e
  40d63c:	in     eax,0x86
  40d63e:	fs mov edx,0xf3964dbc
  40d644:	sub    eax,0x815f3479
  40d649:	test   al,0x92
  40d64b:	jle    0x40d661
  40d64d:	and    ebx,ecx
  40d64f:	jle    0x40d665
  40d651:	or     edx,DWORD PTR [ebx-0x77]
  40d654:	scas   eax,DWORD PTR es:[edi]
  40d655:	mov    dl,0xb6
  40d657:	jmp    0x40d5ee
  40d659:	push   esi
  40d65a:	dec    esi
  40d65b:	or     al,0x6f
  40d65d:	loop   0x40d65e
  40d65f:	fdivr  st(7),st
  40d661:	adc    eax,esp
  40d663:	cld    
  40d664:	jne    0x40d5e6
  40d666:	retf   0xafb7
  40d669:	cdq    
  40d66a:	stc    
  40d66b:	cmp    bh,BYTE PTR [bp+di]
  40d66e:	push   esp
  40d66f:	out    0x4f,al
  40d671:	pop    ecx
  40d672:	rol    BYTE PTR [edx],cl
  40d674:	enter  0xd65c,0xcd
  40d678:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d679:	daa    
  40d67a:	mov    ecx,0xfcee80cf
  40d67f:	mov    ebx,0x9187b651
  40d684:	cli    
  40d685:	cmp    eax,0x885d43dc
  40d68a:	jmp    DWORD PTR [eax+0x6bc99194]
  40d690:	dec    ebp
  40d691:	push   esp
  40d692:	cmp    ebx,edi
  40d694:	inc    ecx
  40d695:	in     al,0x8a
  40d697:	lods   eax,DWORD PTR ds:[esi]
  40d698:	in     al,0xed
  40d69a:	pop    ebp
  40d69b:	dec    edi
  40d69c:	out    0xf3,al
  40d69e:	ret    
  40d69f:	mov    cl,0x58
  40d6a1:	data16 mov ah,0x5f
  40d6a4:	push   0x45
  40d6a6:	stos   DWORD PTR es:[edi],eax
  40d6a7:	pop    eax
  40d6a8:	out    0x60,al
  40d6aa:	outs   dx,BYTE PTR ds:[esi]
  40d6ab:	xchg   esi,eax
  40d6ac:	sub    eax,0x946eb166
  40d6b1:	ret    0xa17c
  40d6b4:	dec    eax
  40d6b5:	or     ebp,DWORD PTR [esi+0x34]
  40d6b8:	push   esi
  40d6b9:	push   ds
  40d6ba:	shl    BYTE PTR [eax+ebp*8+0x73],1
  40d6be:	add    al,0x1
  40d6c0:	push   0xffffffa7
  40d6c2:	popf   
  40d6c3:	daa    
  40d6c4:	outs   dx,BYTE PTR ds:[esi]
  40d6c5:	pop    ebx
  40d6c6:	or     dh,BYTE PTR [eax]
  40d6c8:	xor    DWORD PTR [esi-0x5c],ecx
  40d6cb:	or     DWORD PTR [ebx],esi
  40d6cd:	mov    ds:0xf94f78b2,al
  40d6d2:	jns    0x40d673
  40d6d4:	unpckhps xmm5,XMMWORD PTR [edi-0x7]
  40d6d8:	xor    esi,0xffffffa3
  40d6db:	pusha  
  40d6dc:	jns    0x40d6c6
  40d6de:	dec    edx
  40d6df:	fst    QWORD PTR [edx+0x6a08c849]
  40d6e5:	ret    
  40d6e6:	call   0xa9ec9b44
  40d6eb:	mov    eax,ecx
  40d6ed:	sar    DWORD PTR [ebp-0x6b8e1c3e],cl
  40d6f3:	jbe    0x40d6ac
  40d6f5:	jno    0x40d771
  40d6f7:	leave  
  40d6f8:	shr    BYTE PTR [edx+0x6341f7fd],1
  40d6fe:	and    al,0xd2
  40d700:	pop    esp
  40d701:	repz add al,al
  40d704:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d705:	and    eax,esi
  40d707:	jecxz  0x40d753
  40d709:	adc    al,0x73
  40d70b:	adc    eax,0xb864b8ab
  40d710:	(bad)  
  40d711:	mov    dh,BYTE PTR [ebx]
  40d713:	fwait
  40d714:	leave  
  40d715:	push   cs
  40d716:	mov    esp,0xd965314c
  40d71b:	push   eax
  40d71c:	mov    ds:0xb5815149,al
  40d721:	out    dx,eax
  40d722:	sub    DWORD PTR [ebx+0x4a],0x5cb6003
  40d729:	lods   al,BYTE PTR ds:[esi]
  40d72a:	jl     0x40d73b
  40d72c:	push   ss
  40d72d:	out    0xf6,eax
  40d72f:	out    0x15,eax
  40d731:	fstp   TBYTE PTR [ecx-0x13442d9c]
  40d737:	call   DWORD PTR [esi]
  40d739:	or     eax,DWORD PTR [ebp+ebx*2+0x10]
  40d73d:	hlt    
  40d73e:	inc    ebp
  40d73f:	lahf   
  40d740:	pop    esp
  40d741:	repnz mov eax,ds:0xa37ad78
  40d747:	js     0x40d7c8
  40d749:	or     al,0x13
  40d74b:	mov    cl,0x5e
  40d74d:	or     eax,0xc5d91485
  40d752:	lds    edi,FWORD PTR [edi]
  40d754:	jp     0x40d709
  40d756:	cs stos BYTE PTR es:[edi],al
  40d758:	mov    bl,0xd
  40d75a:	jnp    0x40d795
  40d75c:	pop    es
  40d75d:	inc    esp
  40d75e:	adc    al,0xba
  40d760:	retf   0x4c0c
  40d763:	cmp    eax,0x18b476fe
  40d768:	inc    esi
  40d769:	cmp    BYTE PTR [eax+0xb24f088],dl
  40d76f:	ficom  WORD PTR [esi+0x10dd8d2e]
  40d775:	adc    DWORD PTR [ebx+0x78],0x1e
  40d779:	jmp    0x40d7a6
  40d77b:	sbb    eax,0x6275cae4
  40d780:	cmp    esp,eax
  40d782:	and    al,0xd9
  40d784:	sti    
  40d785:	sub    esi,DWORD PTR [edi+0x42]
  40d788:	shl    BYTE PTR [edx-0x6847245],0x1e
  40d78f:	into   
  40d790:	ins    BYTE PTR es:[edi],dx
  40d791:	std    
  40d792:	jle    0x40d7a9
  40d794:	cli    
  40d795:	int    0xa5
  40d797:	lods   eax,DWORD PTR ds:[esi]
  40d798:	repz rol BYTE PTR [edi+0x63],0xd9
  40d79d:	into   
  40d79e:	mov    esp,0x8130700a
  40d7a3:	sub    al,0xcb
  40d7a5:	inc    edi
  40d7a6:	cwde   
  40d7a7:	call   0x753feb32
  40d7ac:	loop   0x40d812
  40d7ae:	out    0x26,eax
  40d7b0:	arpl   di,sp
  40d7b2:	ja     0x40d7e0
  40d7b4:	mov    DWORD PTR [ebx],ebp
  40d7b6:	xor    edx,eax
  40d7b8:	mov    BYTE PTR [eax+0x4e9769ae],ch
  40d7be:	sbb    edi,0x88b7ca1c
  40d7c4:	std    
  40d7c5:	dec    ebp
  40d7c6:	or     al,BYTE PTR [ecx+0x0]
  40d7c9:	cdq    
  40d7ca:	jecxz  0x40d7e1
  40d7cc:	out    dx,eax
  40d7cd:	mov    cl,0xb1
  40d7cf:	jge    0x40d829
  40d7d1:	dec    ebp
  40d7d2:	xchg   ecx,eax
  40d7d3:	mov    esi,0xa4d2462d
  40d7d8:	lods   al,BYTE PTR ds:[esi]
  40d7d9:	add    DWORD PTR [edi+0x21],0x34
  40d7dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7de:	adc    al,0xe6
  40d7e0:	rcl    BYTE PTR [esi-0x6e],1
  40d7e3:	test   eax,0x25fc8aee
  40d7e8:	dec    eax
  40d7e9:	test   DWORD PTR [esi-0x11],edi
  40d7ec:	sti    
  40d7ed:	xchg   edi,eax
  40d7ee:	xchg   esp,eax
  40d7ef:	les    edi,FWORD PTR [ebx+0x6e]
  40d7f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7f3:	(bad)  [ecx]
  40d7f5:	rol    DWORD PTR [edx-0x51a292a3],cl
  40d7fb:	sti    
  40d7fc:	daa    
  40d7fd:	fistp  QWORD PTR [ebx-0x13b21c85]
  40d803:	cmp    eax,0x91680cdf
  40d808:	xchg   esp,eax
  40d809:	in     eax,0x76
  40d80b:	xor    DWORD PTR [eax-0x1cbbc673],esi
  40d811:	cwde   
  40d812:	addr16 out 0x5d,eax
  40d815:	ds mov dl,0xcb
  40d818:	repnz shl BYTE PTR [ecx],cl
  40d81b:	push   esi
  40d81c:	xor    al,0xa0
  40d81e:	mov    ds:0x9286a9a4,eax
  40d823:	dec    ecx
  40d824:	add    al,0x1b
  40d826:	retf   
  40d827:	cwde   
  40d828:	test   DWORD PTR [esi-0xb5a3cc2],0xacd20cda
  40d832:	inc    edx
  40d833:	call   0x5234dd
  40d838:	(bad)  
  40d839:	xor    al,al
  40d83b:	(bad)  
  40d83c:	stos   DWORD PTR es:[edi],eax
  40d83d:	cmp    bl,BYTE PTR es:[esi-0x3cdfd297]
  40d844:	adc    al,BYTE PTR [edx-0x7cd25de6]
  40d84a:	dec    eax
  40d84b:	icebp  
  40d84c:	cwde   
  40d84d:	inc    esp
  40d84e:	sbb    edx,eax
  40d850:	dec    eax
  40d851:	sub    al,0xc2
  40d853:	sub    dl,BYTE PTR cs:[ecx]
  40d856:	adc    al,0x78
  40d858:	je     0x40d8b5
  40d85a:	sbb    eax,0xbeff20a0
  40d85f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d860:	cmp    DWORD PTR [ecx-0x4e],0xffffffef
  40d864:	inc    ebp
  40d865:	sbb    esp,DWORD PTR [edx+0x4b]
  40d868:	ins    DWORD PTR es:[edi],dx
  40d869:	fld    TBYTE PTR [edi+0xb]
  40d86c:	sub    DWORD PTR [ebx+0x28cb4f8e],edi
  40d872:	test   ah,bl
  40d874:	pop    ss
  40d875:	sbb    dl,cl
  40d877:	mov    ds:0x6e93d467,al
  40d87c:	inc    ebp
  40d87d:	jge    0x40d833
  40d87f:	sbb    DWORD PTR [edx+ebx*8-0x721918dc],0x5
  40d887:	xor    al,0x7e
  40d889:	xchg   ebx,eax
  40d88a:	and    edx,edi
  40d88c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d88d:	bound  edi,QWORD PTR [edx+0x72]
  40d890:	sbb    edi,esp
  40d892:	or     ebx,DWORD PTR [ecx]
  40d894:	out    0xf6,al
  40d896:	push   eax
  40d897:	test   DWORD PTR [edx+eax*2-0x2a1ec5a7],esp
  40d89e:	call   0xd332:0x9d99b2a7
  40d8a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8a6:	mov    ds:0x2b53c57a,al
  40d8ab:	loopne 0x40d8ba
  40d8ad:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40d8af:	push   ebp
  40d8b0:	push   ss
  40d8b1:	xor    DWORD PTR [ebx+ebp*1],0xffffff89
  40d8b5:	fdiv   QWORD PTR [ecx]
  40d8b7:	sbb    ebp,DWORD PTR [esi]
  40d8b9:	mov    cl,0x1a
  40d8bb:	out    dx,eax
  40d8bc:	mov    bh,0xe3
  40d8be:	xor    DWORD PTR [eax+0x36790a0a],ebp
  40d8c4:	les    eax,FWORD PTR [edi]
  40d8c6:	call   0x3146b4d9
  40d8cb:	fdivrp st(1),st
  40d8cd:	aam    0x29
  40d8cf:	lods   eax,DWORD PTR ds:[esi]
  40d8d0:	repz jge 0x40d91d
  40d8d3:	and    bh,BYTE PTR [esi-0x1ec8dd7c]
  40d8d9:	cmc    
  40d8da:	sbb    al,0xd9
  40d8dc:	sub    eax,0x84c47f2b
  40d8e1:	or     eax,0x9f058cc0
  40d8e6:	inc    esp
  40d8e7:	add    bl,BYTE PTR cs:[ecx-0x1f89ed71]
  40d8ee:	cmp    DWORD PTR [edi],0x36891985
  40d8f4:	xor    ch,dh
  40d8f6:	jbe    0x40d945
  40d8f8:	retf   
  40d8f9:	cmp    BYTE PTR [ebx+0x509ed590],dh
  40d8ff:	jmp    0xa992:0x71b888d2
  40d906:	das    
  40d907:	add    al,0xbe
  40d909:	jno    0x40d956
  40d90b:	xchg   ebx,eax
  40d90c:	mov    ds:0x66ca0aef,eax
  40d911:	push   es
  40d912:	(bad)  [edi+0x55074933]
  40d918:	sbb    edx,DWORD PTR [esi-0x6df4c04c]
  40d91e:	rcl    esp,cl
  40d920:	scas   eax,DWORD PTR es:[edi]
  40d921:	jecxz  0x40d8d9
  40d923:	gs push 0x808e1f13
  40d929:	lods   al,BYTE PTR ds:[esi]
  40d92a:	dec    esi
  40d92b:	lods   eax,DWORD PTR gs:[esi]
  40d92d:	sbb    eax,0xdbfd0f7f
  40d932:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d933:	test   DWORD PTR [ecx+ebx*1+0x51],0x40f47766
  40d93b:	sbb    al,0xb2
  40d93d:	dec    esp
  40d93e:	in     al,dx
  40d93f:	in     eax,0x74
  40d941:	pop    ebp
  40d942:	xchg   edi,eax
  40d943:	xor    edx,DWORD PTR [ecx-0xe]
  40d946:	jge    0x40d8eb
  40d948:	mov    WORD PTR [eax+0x39371c46],ds
  40d94e:	ins    BYTE PTR es:[edi],dx
  40d94f:	or     BYTE PTR [edx],dl
  40d951:	or     BYTE PTR [edi-0xa],dl
  40d954:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d955:	xchg   ebx,eax
  40d956:	cmc    
  40d957:	push   esi
  40d958:	sar    DWORD PTR ds:0x14dfa3ea,1
  40d95e:	push   edx
  40d95f:	push   esp
  40d960:	jae    0x40d913
  40d962:	pop    edi
  40d963:	mov    esi,0x97d6a4ea
  40d968:	out    0xfe,eax
  40d96a:	xchg   esp,eax
  40d96b:	out    dx,eax
  40d96c:	xor    ecx,ebx
  40d96e:	test   eax,0x4fd9f895
  40d973:	std    
  40d974:	icebp  
  40d975:	ss lock push edx
  40d978:	rcl    BYTE PTR [edi],cl
  40d97a:	repz pop esi
  40d97c:	out    dx,al
  40d97d:	sub    al,0xe7
  40d97f:	cdq    
  40d980:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d981:	rcl    BYTE PTR [esi],cl
  40d983:	xor    al,0x49
  40d985:	jmp    0x40d915
  40d987:	sub    esp,ebx
  40d989:	add    BYTE PTR [ecx-0x3a],dh
  40d98c:	sbb    DWORD PTR [eax-0x38],esi
  40d98f:	aas    
  40d990:	lds    ecx,FWORD PTR [esi+edx*8]
  40d993:	xchg   ebx,eax
  40d994:	in     al,dx
  40d995:	inc    edx
  40d996:	ins    DWORD PTR es:[edi],dx
  40d997:	sub    ebx,DWORD PTR [edi-0x4a81e002]
  40d99d:	push   ss
  40d99e:	(bad)  
  40d99f:	sbb    al,0x8e
  40d9a1:	xchg   edx,eax
  40d9a2:	push   ss
  40d9a3:	add    BYTE PTR [ebx+0x31],bl
  40d9a6:	jae    0x40d940
  40d9a8:	(bad)  
  40d9a9:	scas   eax,DWORD PTR es:[edi]
  40d9aa:	adc    eax,0x4ec69091
  40d9af:	jb     0x40d9c6
  40d9b1:	push   esp
  40d9b2:	dec    eax
  40d9b3:	xchg   BYTE PTR [ecx],cl
  40d9b5:	stc    
  40d9b6:	adc    dh,ah
  40d9b8:	sbb    esp,ebp
  40d9ba:	scas   al,BYTE PTR es:[edi]
  40d9bb:	hlt    
  40d9bc:	call   0x3bfd52f9
  40d9c1:	inc    esp
  40d9c2:	add    bl,BYTE PTR [eax-0x748e56ac]
  40d9c8:	sub    eax,0xf39f8c54
  40d9cd:	aas    
  40d9ce:	imul   eax,eax,0xffffffff
  40d9d1:	cmp    DWORD PTR [esi+0x30],0xf1f63954
  40d9d8:	push   esp
  40d9d9:	fisttp QWORD PTR [ecx-0xa]
  40d9dc:	imul   BYTE PTR [edx]
  40d9de:	outs   dx,DWORD PTR ds:[esi]
  40d9df:	test   DWORD PTR [esi-0x403e74a5],0x37fa9a5f
  40d9e9:	mov    DWORD PTR [eax-0x79],esp
  40d9ec:	sti    
  40d9ed:	lea    ebx,[ebx+0x6d]
  40d9f0:	ins    BYTE PTR es:[edi],dx
  40d9f1:	xchg   ebp,eax
  40d9f2:	loope  0x40da6d
  40d9f4:	pop    edx
  40d9f5:	add    edi,ebp
  40d9f7:	push   esp
  40d9f8:	adc    dh,BYTE PTR [eax]
  40d9fa:	call   0xd14e:0x85e5279e
  40da01:	aaa    
  40da02:	in     eax,0xc0
  40da04:	test   BYTE PTR [bx+si-0x43],dl
  40da08:	ror    DWORD PTR [edi+0x3b97c724],0xc1
  40da0f:	jae    0x40d9b3
  40da11:	mov    esp,0x5365a9ab
  40da16:	or     esi,eax
  40da18:	pop    esp
  40da19:	lea    edi,[ebx]
  40da1b:	(bad)  
  40da1c:	call   0xb1db:0x1b5d05f
  40da23:	mov    edx,0xb2120b6b
  40da28:	xor    al,0x3e
  40da2a:	jmp    0x40da88
  40da2c:	dec    eax
  40da2d:	sbb    BYTE PTR [eax+0x0],cl
  40da30:	dec    esp
  40da31:	loopne 0x40d9f4
  40da33:	gs push 0xffffffc2
  40da36:	mov    bl,BYTE PTR ds:[esi+0x29]
  40da3a:	ficomp WORD PTR [edi+0x32e5eb61]
  40da40:	push   es
  40da41:	mov    ah,0x27
  40da43:	mov    edx,0xf3a06596
  40da48:	pop    ebp
  40da49:	xchg   ecx,eax
  40da4a:	adc    DWORD PTR [eax],ebx
  40da4c:	int3   
  40da4d:	test   BYTE PTR [esi-0x31dd4fa4],al
  40da53:	out    dx,al
  40da54:	pop    esi
  40da55:	leave  
  40da56:	scas   al,BYTE PTR es:[edi]
  40da57:	into   
  40da58:	icebp  
  40da59:	sub    ecx,eax
  40da5b:	adc    al,0xeb
  40da5d:	stos   BYTE PTR es:[edi],al
  40da5e:	sbb    BYTE PTR [ebx+0x3],al
  40da61:	mov    al,0x66
  40da63:	aam    0xd7
  40da65:	scas   al,BYTE PTR es:[edi]
  40da66:	xchg   esi,eax
  40da67:	(bad)  
  40da68:	fs aas 
  40da6a:	mov    al,ds:0x8fcc8006
  40da6f:	and    BYTE PTR [edi],ah
  40da71:	pop    esp
  40da72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da73:	cmc    
  40da74:	and    eax,0x5c4b3b1f
  40da79:	jmp    0x40da42
  40da7b:	(bad)  
  40da7c:	mov    eax,0x10af923d
  40da81:	push   esi
  40da82:	scas   eax,DWORD PTR es:[edi]
  40da83:	cmp    eax,0x57c4b51f
  40da88:	lea    edi,[edx-0x6b]
  40da8b:	popa   
  40da8c:	adc    dl,dh
  40da8e:	cmp    dh,ch
  40da90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da91:	scas   al,BYTE PTR es:[edi]
  40da92:	imul   ebx,edx,0x1f
  40da95:	std    
  40da96:	mov    WORD PTR [eax-0x56],ss
  40da99:	pop    ebx
  40da9a:	mov    al,dl
  40da9c:	and    al,0xc
  40da9e:	add    DWORD PTR [ebp-0x35],ecx
  40daa1:	pop    ss
  40daa2:	fisttp WORD PTR [ebx-0x6aa7a581]
  40daa8:	jae    0x40db1b
  40daaa:	push   edi
  40daab:	stc    
  40daac:	push   ecx
  40daad:	iret   
  40daae:	repnz mov eax,es:0x72c638f4
  40dab5:	inc    edi
  40dab6:	inc    esi
  40dab7:	bound  ecx,QWORD PTR [eax+0x3d]
  40daba:	rcl    BYTE PTR ss:[edx],0xaf
  40dabe:	repz jecxz 0x40da68
  40dac1:	sub    eax,0x50699963
  40dac6:	lea    esi,[ecx+0x66760c9b]
  40dacc:	mov    ebx,DWORD PTR [edx]
  40dace:	inc    edx
  40dacf:	pop    edi
  40dad0:	jmp    0x40dab2
  40dad2:	cmp    al,0x7e
  40dad4:	and    dl,BYTE PTR [ebx-0x7e3a17d5]
  40dada:	cmp    BYTE PTR [ebx-0x4a],ah
  40dadd:	cwde   
  40dade:	cmp    ebx,0xffffffed
  40dae1:	mov    gs,WORD PTR [esi-0x7f63ad7a]
  40dae7:	(bad)  
  40dae8:	stc    
  40dae9:	sub    cl,BYTE PTR [esi-0x20]
  40daec:	shl    DWORD PTR [edi],0x29
  40daef:	push   ds
  40daf0:	mov    bh,0x51
  40daf2:	mov    eax,ds:0x52b5e451
  40daf7:	mov    BYTE PTR [esi],cl
  40daf9:	out    0xf1,eax
  40dafb:	rcr    DWORD PTR [ebp+0x5b34ae62],cl
  40db01:	imul   BYTE PTR [ebx+0x54]
  40db04:	enter  0xe9fa,0x31
  40db08:	cmc    
  40db09:	jae    0x40db0c
  40db0b:	mov    DWORD PTR ds:0x43c5f978,edi
  40db11:	mov    ds:0xa8880cc7,eax
  40db16:	fcomp  DWORD PTR [esi-0x39]
  40db19:	sbb    BYTE PTR [eax],dh
  40db1b:	icebp  
  40db1c:	jmp    FWORD PTR [edi-0x7]
  40db1f:	pop    ecx
  40db20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db21:	pop    ss
  40db22:	loope  0x40db24
  40db24:	xor    edx,ebx
  40db26:	ror    BYTE PTR [edi],0x28
  40db29:	or     dh,BYTE PTR [ebx+0x24]
  40db2c:	clc    
  40db2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db2e:	out    dx,eax
  40db2f:	jns    0x40daf0
  40db31:	imul   esi,DWORD PTR [ebx],0xfffffffd
  40db34:	pushf  
  40db35:	dec    ebx
  40db36:	aam    0x82
  40db38:	xor    edx,DWORD PTR [ecx+0x1a99c94e]
  40db3e:	outs   dx,DWORD PTR ds:[esi]
  40db3f:	fild   QWORD PTR [eax+edi*8+0x76]
  40db43:	les    ecx,FWORD PTR [edi+0x67]
  40db46:	lock jbe 0x40db18
  40db49:	inc    edx
  40db4a:	ror    BYTE PTR [edi+0x5f3d5bee],0xd5
  40db51:	jmp    0x40dadc
  40db53:	scas   al,BYTE PTR es:[edi]
  40db54:	shl    esi,1
  40db56:	test   al,0x35
  40db58:	es push ebx
  40db5a:	adc    BYTE PTR [ebp+0x68ea20a0],dl
  40db60:	std    
  40db61:	push   ds
  40db62:	xchg   ebp,eax
  40db63:	ja     0x40db45
  40db65:	inc    ebx
  40db66:	push   edi
  40db67:	dec    edi
  40db68:	jnp    0x40db3a
  40db6a:	add    ebp,DWORD PTR [ebp+esi*2+0x72014189]
  40db71:	mov    esi,DWORD PTR [edx+0x2064cc64]
  40db77:	xchg   ebp,eax
  40db78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db79:	xor    al,bl
  40db7b:	and    ebp,DWORD PTR [edi]
  40db7d:	cwde   
  40db7e:	inc    esp
  40db7f:	enter  0xa6d4,0x48
  40db83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db84:	dec    esi
  40db85:	test   al,0x23
  40db87:	mov    eax,0xfdb72dc2
  40db8c:	test   eax,0xfcd08d9d
  40db91:	add    DWORD PTR [ecx-0x39],ebx
  40db94:	mov    DWORD PTR [edi+eiz*4],ecx
  40db97:	add    ecx,0xffffffc1
  40db9a:	imul   esp,DWORD PTR [esp+ecx*1+0x45],0xc20f0310
  40dba2:	loop   0x40dbc3
  40dba4:	jns    0x40db8b
  40dba6:	(bad)  
  40dba8:	popa   
  40dba9:	cld    
  40dbaa:	fwait
  40dbab:	in     eax,0x8e
  40dbad:	dec    eax
  40dbae:	clc    
  40dbaf:	inc    esp
  40dbb0:	loop   0x40dc1f
  40dbb2:	pop    esi
  40dbb3:	adc    ecx,ebp
  40dbb5:	enter  0x3682,0xcf
  40dbb9:	imul   ebx,DWORD PTR [edx+0x43316673],0x23
  40dbc0:	and    DWORD PTR [ecx],ebp
  40dbc2:	out    dx,eax
  40dbc3:	dec    ecx
  40dbc4:	jo     0x40dbd0
  40dbc6:	jne    0x40db7a
  40dbc8:	les    esi,FWORD PTR [ebp+0x27a27394]
  40dbce:	mov    bl,0x94
  40dbd0:	xlat   BYTE PTR ds:[ebx]
  40dbd1:	push   edi
  40dbd2:	xchg   esi,eax
  40dbd3:	fs pop ecx
  40dbd5:	ficom  DWORD PTR [edi]
  40dbd7:	jns    0x40dbd5
  40dbd9:	mov    al,ds:0xe7bee424
  40dbde:	mov    DWORD PTR [eax],ebp
  40dbe0:	psllw  mm1,QWORD PTR [esi-0x6b172616]
  40dbe7:	(bad)  
  40dbe8:	pusha  
  40dbe9:	adc    ah,BYTE PTR [ebp+ebx*1+0x4a]
  40dbed:	das    
  40dbee:	mov    al,ds:0x11dea8a4
  40dbf3:	repz in al,dx
  40dbf5:	cmp    edx,DWORD PTR [ecx-0x2a]
  40dbf8:	lahf   
  40dbf9:	test   DWORD PTR [ebx],ebx
  40dbfb:	push   ebp
  40dbfd:	mov    ah,dh
  40dbff:	jbe    0x40dbb5
  40dc01:	cmp    bh,0x9
  40dc04:	cmp    al,0xb3
  40dc06:	sbb    eax,0xdddf334c
  40dc0b:	and    al,0x3
  40dc0d:	jle    0x40dc5a
  40dc0f:	cmp    ecx,DWORD PTR [edx+0x40410611]
  40dc15:	retf   0xc66e
  40dc18:	sti    
  40dc19:	adc    BYTE PTR [eax+0x3c],ah
  40dc1c:	push   esp
  40dc1d:	fmul   DWORD PTR [ebx-0x27]
  40dc20:	inc    ecx
  40dc21:	adc    dh,bh
  40dc23:	mov    dl,0xa9
  40dc25:	xchg   edi,eax
  40dc26:	xor    DWORD PTR [eax],edi
  40dc28:	xchg   ebp,eax
  40dc29:	mov    bl,0xa1
  40dc2b:	cdq    
  40dc2c:	outs   dx,DWORD PTR ds:[esi]
  40dc2d:	jmp    0xb913:0xa0c09071
  40dc34:	mov    ah,0xae
  40dc36:	fimul  WORD PTR [ecx-0x68d74098]
  40dc3c:	in     al,0x5f
  40dc3e:	push   edi
  40dc3f:	sub    ch,BYTE PTR [di-0x5ded]
  40dc44:	fistp  DWORD PTR [ecx+eiz*4-0xd]
  40dc48:	ds (bad) 
  40dc4a:	and    ebx,ebx
  40dc4c:	(bad)  
  40dc4d:	ficom  DWORD PTR fs:[esi+edx*1+0x57ae7069]
  40dc55:	mov    ebp,0x5c7cd755
  40dc5a:	outs   dx,BYTE PTR ds:[esi]
  40dc5b:	inc    esp
  40dc5c:	scas   eax,DWORD PTR es:[edi]
  40dc5d:	mov    ebp,0x7a826d97
  40dc62:	aaa    
  40dc63:	into   
  40dc64:	xchg   DWORD PTR [edi+ebp*4-0x24cb9219],edx
  40dc6b:	add    BYTE PTR [ecx-0x404736f1],0x21
  40dc72:	xor    esi,DWORD PTR [eax+0x807ce3d]
  40dc78:	push   cs
  40dc79:	xchg   edi,eax
  40dc7a:	pusha  
  40dc7b:	jnp    0x40dc5d
  40dc7d:	loope  0x40dc8b
  40dc7f:	cdq    
  40dc80:	cdq    
  40dc81:	fadd   DWORD PTR [ecx+0x7a]
  40dc84:	data16 fisub WORD PTR [ecx+eax*4+0x78]
  40dc89:	adc    al,0x43
  40dc8b:	jns    0x40dc81
  40dc8d:	mov    edx,DWORD PTR [esi]
  40dc8f:	sbb    esi,edx
  40dc91:	sahf   
  40dc92:	push   esp
  40dc93:	sub    BYTE PTR [eax+0x47601923],0x28
  40dc9a:	sub    DWORD PTR [ecx+0x71],ebp
  40dc9d:	pop    eax
  40dc9e:	imul   ebx,DWORD PTR [ebx-0x4c4c4450],0x60
  40dca5:	push   0x82578218
  40dcaa:	div    DWORD PTR [ebx-0x3ae71b66]
  40dcb0:	mov    esi,0xfa567f4a
  40dcb5:	dec    ecx
  40dcb6:	loop   0x40dcea
  40dcb8:	add    eax,0xc19f894
  40dcbd:	and    al,0xcc
  40dcbf:	stc    
  40dcc0:	sbb    dh,ch
  40dcc2:	(bad)  
  40dcc3:	fmul   st,st(2)
  40dcc5:	jl     0x40dd46
  40dcc7:	jg     0x40dcc5
  40dcc9:	xchg   esp,eax
  40dcca:	icebp  
  40dccb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dccc:	add    al,BYTE PTR [ecx-0x5a1104e]
  40dcd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcd3:	cmp    dh,BYTE PTR [eax+0x7e]
  40dcd6:	cmp    ecx,ebp
  40dcd8:	fs cwde 
  40dcda:	adc    DWORD PTR [si],eax
  40dcdd:	adc    DWORD PTR [ecx+0x69b22237],esi
  40dce3:	pop    esi
  40dce4:	or     BYTE PTR ds:0xe35d0ee9,dl
  40dcea:	or     eax,0x11b2862f
  40dcef:	loope  0x40dcb8
  40dcf1:	cmp    edi,DWORD PTR [ecx+0x3182d238]
  40dcf7:	add    cl,0x58
  40dcfa:	imul   esi,DWORD PTR gs:[ebx],0xd713a976
  40dd01:	shl    DWORD PTR [ebx+0x2f],cl
  40dd04:	sti    
  40dd05:	mov    ecx,0x6d49df3
  40dd0a:	sbb    DWORD PTR [eax+0x70413b6d],ebp
  40dd10:	daa    
  40dd11:	fiadd  DWORD PTR [esi-0x79]
  40dd14:	ja     0x40dd75
  40dd16:	mov    ss,WORD PTR [ebx]
  40dd18:	mov    dh,0x8a
  40dd1a:	out    0xf,eax
  40dd1c:	repz ret 
  40dd1e:	jns    0x40dd90
  40dd20:	aad    0x95
  40dd22:	inc    ebx
  40dd23:	sub    esi,eax
  40dd25:	xor    cl,al
  40dd27:	mov    dh,BYTE PTR [edi+0x6e418b2]
  40dd2d:	(bad)
  40dd31:	mov    eax,0x1956927a
  40dd36:	jl     0x40dcec
  40dd38:	cmp    ebp,DWORD PTR [edi]
  40dd3a:	jbe    0x40dcf0
  40dd3c:	mov    ebp,0xe900f463
  40dd41:	fiadd  DWORD PTR [eax-0x6508fab5]
  40dd47:	mov    DWORD PTR [ecx-0xa],edi
  40dd4a:	mov    ebx,0xf66e1301
  40dd4f:	adc    bl,BYTE PTR [edi+0x18633aa4]
  40dd55:	loope  0x40dd6b
  40dd57:	repz retf 
  40dd59:	jl     0x40dd10
  40dd5b:	add    ebp,DWORD PTR [edx+0x283858ba]
  40dd61:	or     esi,DWORD PTR [eax-0x41]
  40dd64:	in     eax,dx
  40dd65:	and    BYTE PTR [ebp-0x2bca2de2],al
  40dd6b:	fsave  [esi]
  40dd6e:	sub    eax,0xd5c2656a
  40dd73:	enter  0x2dfd,0x50
  40dd77:	pop    eax
  40dd78:	pop    edi
  40dd79:	pusha  
  40dd7a:	into   
  40dd7b:	fwait
  40dd7c:	jb     0x40dd0a
  40dd7e:	ret    
  40dd7f:	jmp    0x1f9a3778
  40dd84:	pop    esi
  40dd85:	jmp    0x40dd99
  40dd87:	sahf   
  40dd88:	xchg   edi,eax
  40dd89:	scas   eax,DWORD PTR es:[edi]
  40dd8a:	(bad)  
  40dd8c:	(bad)  
  40dd8d:	pop    edx
  40dd8e:	xchg   ecx,eax
  40dd8f:	leave  
  40dd90:	jge    0x40dded
  40dd92:	stc    
  40dd93:	cmp    eax,0x861b6212
  40dd98:	inc    edi
  40dd99:	lds    esp,FWORD PTR [edi-0x71fab2f9]
  40dd9f:	inc    ecx
  40dda0:	mov    edi,0x56593231
  40dda5:	push   ds
  40dda6:	jmp    0x40de13
  40dda8:	pop    esi
  40dda9:	dec    ecx
  40ddaa:	or     edx,ecx
  40ddac:	jno    0x40dd38
  40ddae:	fstp   TBYTE PTR [eax+0x15]
  40ddb1:	(bad)  
  40ddb2:	out    dx,al
  40ddb3:	aam    0x47
  40ddb5:	bound  ebx,QWORD PTR [esi-0x2a]
  40ddb8:	mov    al,ds:0xe2b85589
  40ddbd:	dec    esp
  40ddbe:	jg     0x40dd8c
  40ddc0:	sti    
  40ddc1:	hlt    
  40ddc2:	jne    0x40de0d
  40ddc4:	cmp    DWORD PTR [edx+esi*8+0x59],esp
  40ddc8:	xor    cl,al
  40ddca:	dec    ebp
  40ddcb:	(bad)  
  40ddcc:	cmp    esi,edx
  40ddce:	mov    dh,0x31
  40ddd0:	arpl   dx,ax
  40ddd2:	mov    edi,0xd0293dcb
  40ddd7:	xchg   edx,eax
  40ddd8:	xor    al,0xad
  40ddda:	pusha  
  40dddb:	popa   
  40dddc:	ins    BYTE PTR es:[edi],dx
  40dddd:	sahf   
  40ddde:	mov    BYTE PTR [esp+ecx*2],ah
  40dde1:	push   eax
  40dde2:	add    BYTE PTR [esi+0x2caede7f],cl
  40dde8:	retf   
  40dde9:	idiv   BYTE PTR cs:[edi-0x35]
  40dded:	out    dx,al
  40ddee:	and    DWORD PTR [edi+0x100ec634],ecx
  40ddf4:	inc    edi
  40ddf5:	dec    dx
  40ddf7:	jmp    0xd94795a4
  40ddfc:	xor    bh,cl
  40ddfe:	xchg   ebp,eax
  40ddff:	std    
  40de00:	(bad)  
  40de01:	pop    eax
  40de02:	xchg   esi,eax
  40de03:	cld    
  40de04:	pop    ss
  40de05:	mov    edx,0xd0ee0a5a
  40de0a:	cmp    BYTE PTR [edx],dl
  40de0c:	into   
  40de0d:	sbb    al,0xc4
  40de0f:	cmp    ebp,DWORD PTR ds:0xbb603b7b
  40de15:	dec    esi
  40de16:	inc    eax
  40de17:	pusha  
  40de18:	cmc    
  40de19:	mov    WORD PTR [eax],ds
  40de1b:	adc    DWORD PTR [edx],0xd17ab137
  40de21:	popa   
  40de22:	adc    ebp,DWORD PTR [edi]
  40de24:	fs loope 0x40de88
  40de27:	adc    eax,ebx
  40de29:	popf   
  40de2a:	int    0xa6
  40de2c:	fisttp QWORD PTR [edx]
  40de2e:	mov    ds:0xfbf5cdc9,al
  40de33:	ins    DWORD PTR es:[edi],dx
  40de34:	and    al,0x93
  40de36:	mov    eax,0xdac21d5b
  40de3b:	fs mov esi,0x45942933
  40de41:	add    dh,BYTE PTR [eax+0x40]
  40de44:	out    dx,eax
  40de45:	or     BYTE PTR [eax+0x14d42a67],ch
  40de4b:	mov    BYTE PTR [esi],bh
  40de4d:	and    eax,0xe0d3f8c7
  40de52:	mov    ecx,DWORD PTR [eax-0x174b9d1b]
  40de58:	sub    eax,0x3593c2d2
  40de5d:	sbb    dl,ch
  40de5f:	sbb    eax,0x84ccd6ad
  40de64:	shr    DWORD PTR [edx-0x3a],1
  40de67:	repnz dec DWORD PTR [esi+0x60a8838a]
  40de6e:	pop    edi
  40de6f:	js     0x40de66
  40de71:	popa   
  40de72:	gs out 0x11,al
  40de75:	les    ecx,FWORD PTR [ebp+0x48f35827]
  40de7b:	(bad)  
  40de7d:	ins    DWORD PTR es:[edi],dx
  40de7e:	gs cmp al,0x5d
  40de81:	jle    0x40de14
  40de83:	ins    BYTE PTR es:[edi],dx
  40de84:	add    bl,BYTE PTR [edx]
  40de86:	ret    0x3940
  40de89:	mov    cl,0xa5
  40de8b:	loop   0x40de5c
  40de8d:	jle    0x40de92
  40de8f:	stos   BYTE PTR es:[edi],al
  40de90:	mov    bl,BYTE PTR ds:0x3e8954a1
  40de96:	out    0x60,al
  40de98:	jmp    0x40de8e
  40de9a:	jp     0x40de9d
  40de9c:	sbb    eax,esp
  40de9e:	in     eax,0x17
  40dea0:	or     BYTE PTR [edi],bl
  40dea2:	xor    esi,DWORD PTR [edx]
  40dea4:	ins    BYTE PTR es:[edi],dx
  40dea5:	daa    
  40dea6:	pop    edi
  40dea7:	mov    ds:0x97996eb7,eax
  40deac:	test   DWORD PTR [edi],edi
  40deae:	iret   
  40deaf:	sub    ch,BYTE PTR [edx-0x36f23325]
  40deb5:	sbb    edx,DWORD PTR [edx+0x6]
  40deb8:	les    edi,FWORD PTR [ecx+ebp*1]
  40debb:	pop    esp
  40debc:	ret    0xde9c
  40debf:	lods   al,BYTE PTR ds:[esi]
  40dec0:	test   al,0x3c
  40dec2:	scas   al,BYTE PTR es:[edi]
  40dec3:	cmp    BYTE PTR [ebx-0x3deeb9],0x53
  40deca:	aaa    
  40decb:	fnstsw WORD PTR [ebx-0x7a]
  40dece:	sub    al,0x8d
  40ded0:	add    al,0xf2
  40ded2:	popa   
  40ded3:	add    ecx,edx
  40ded5:	mov    cl,0x29
  40ded7:	and    BYTE PTR [esi+0x1bf66b8f],al
  40dedd:	pop    ds
  40dede:	imul   edi,DWORD PTR [edx],0x897a53c6
  40dee4:	das    
  40dee5:	adc    ebx,DWORD PTR [edx]
  40dee7:	test   al,0xae
  40dee9:	mov    eax,0x9612a608
  40deee:	call   0xb29a:0x2070a897
  40def5:	add    al,0x79
  40def7:	xchg   esi,eax
  40def8:	pop    esp
  40def9:	push   ecx
  40defa:	enter  0x495b,0x69
  40defe:	mov    ah,0x0
  40df00:	xchg   ecx,eax
  40df01:	pop    ebp
  40df02:	xlat   BYTE PTR ds:[ebx]
  40df03:	mov    cl,0x58
  40df05:	fwait
  40df06:	push   ebp
  40df07:	cwde   
  40df08:	jmp    0xe1ba7af2
  40df0d:	push   edi
  40df0e:	icebp  
  40df0f:	aaa    
  40df10:	push   eax
  40df11:	repz pop ecx
  40df13:	mov    WORD PTR [edx-0x18],gs
  40df16:	sbb    eax,0xee48ccb7
  40df1b:	sti    
  40df1c:	xlat   BYTE PTR ds:[ebx]
  40df1d:	push   0x7a
  40df1f:	outs   dx,DWORD PTR ds:[esi]
  40df20:	ss inc ecx
  40df22:	cdq    
  40df23:	cmp    BYTE PTR [edi],ch
  40df25:	sub    eax,0x378dd005
  40df2a:	xchg   ebp,eax
  40df2b:	pop    ss
  40df2c:	mov    ds:0x8662093c,al
  40df31:	mov    ch,BYTE PTR [esi]
  40df33:	shl    DWORD PTR [ecx-0x769be4ba],1
  40df39:	rep lods eax,DWORD PTR ds:[esi]
  40df3b:	mov    eax,ds:0x55fc88b
  40df40:	sti    
  40df41:	jecxz  0x40df41
  40df43:	int3   
  40df44:	mul    bh
  40df46:	mov    DWORD PTR [edx+ebx*8+0x72],ebx
  40df4a:	cs dec edx
  40df4c:	push   ds
  40df4d:	sti    
  40df4e:	pop    ebx
  40df4f:	lods   al,BYTE PTR ds:[esi]
  40df50:	inc    esi
  40df51:	pop    ds
  40df52:	js     0x40dfa8
  40df54:	add    dl,bl
  40df56:	pop    eax
  40df57:	sar    DWORD PTR [edx+0x29],1
  40df5a:	xchg   edi,eax
  40df5b:	pushf  
  40df5c:	xchg   edx,eax
  40df5d:	test   BYTE PTR [esi-0x40],cl
  40df60:	jno    0x40df63
  40df62:	mov    edi,0x6bdf0971
  40df67:	pop    ecx
  40df68:	add    eax,0xa820fe3
  40df6d:	push   ss
  40df6e:	mov    cl,0xd9
  40df70:	in     al,dx
  40df71:	leave  
  40df72:	pop    ss
  40df73:	add    eax,0x54dd1916
  40df78:	cs sub al,0x0
  40df7b:	jge    0x40dfed
  40df7d:	inc    DWORD PTR [edi+ebx*1+0x1f]
  40df81:	inc    ebx
  40df82:	mov    dh,0x3f
  40df84:	pop    ss
  40df85:	or     edi,DWORD PTR [esi-0x28]
  40df88:	or     DWORD PTR [eax-0x5183d478],ebp
  40df8e:	std    
  40df8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df90:	add    DWORD PTR [ebx],edi
  40df92:	cmp    eax,0xf5e79fc
  40df97:	mov    ecx,0x4a91420f
  40df9c:	leave  
  40df9d:	int3   
  40df9e:	fdiv   QWORD PTR [edx+0x486ad038]
  40dfa4:	ins    BYTE PTR es:[edi],dx
  40dfa5:	pop    edx
  40dfa6:	push   0x7ca9ade1
  40dfab:	lahf   
  40dfac:	retf   0x937
  40dfaf:	in     eax,dx
  40dfb0:	(bad)  
  40dfb1:	std    
  40dfb2:	ret    
  40dfb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfb4:	push   edx
  40dfb5:	stos   DWORD PTR es:[edi],eax
  40dfb6:	mov    esi,0x7df20247
  40dfbb:	mov    BYTE PTR [edx],0x3a
  40dfbe:	mov    ds:0xa98f58cf,eax
  40dfc3:	leave  
  40dfc4:	push   eax
  40dfc5:	aaa    
  40dfc6:	es push esi
  40dfc8:	rol    cl,cl
  40dfca:	mov    eax,0xbefec4d7
  40dfcf:	sbb    al,0x8c
  40dfd1:	or     ebp,DWORD PTR [ebx]
  40dfd3:	les    ebp,FWORD PTR [eax-0x16]
  40dfd6:	loopne 0x40e041
  40dfd8:	xchg   edx,eax
  40dfd9:	mov    al,ds:0xe275f9df
  40dfde:	ss mov al,0x26
  40dfe1:	mov    WORD PTR [esi+0x43b1c376],?
  40dfe7:	(bad)  
  40dfe8:	imul   BYTE PTR [esi+0x79]
  40dfeb:	xor    eax,ebx
  40dfed:	push   cs
  40dfee:	and    edx,DWORD PTR [eax+edi*8]
  40dff1:	sbb    eax,0x8e83a478
  40dff6:	cmp    bh,al
  40dff8:	mov    dh,0x8d
  40dffa:	or     DWORD PTR [edx+0x40e59725],edx
  40e000:	pop    eax
  40e001:	or     DWORD PTR [esi-0x570e3000],esp
  40e007:	xor    DWORD PTR [ecx-0x29],eax
  40e00a:	sahf   
  40e00b:	mov    BYTE PTR [ecx+0x1c],al
  40e00e:	adc    al,0xb8
  40e010:	xor    dl,BYTE PTR [ecx+ebx*8+0x55]
  40e014:	loopne 0x40e06a
  40e016:	add    eax,0xf5cd78f5
  40e01b:	rcl    BYTE PTR [edx+0x2cf444ac],0x7e
  40e022:	push   0xfffffffc
  40e024:	mov    dh,0x5c
  40e026:	loope  0x40e005
  40e028:	outs   dx,BYTE PTR ds:[esi]
  40e029:	inc    edx
  40e02a:	ds shr cl,cl
  40e02d:	test   eax,0x5180f449
  40e032:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e033:	addr16 mov dh,0x4a
  40e036:	xchg   esp,eax
  40e037:	mov    ebp,0xc84f7344
  40e03c:	mov    esi,0xca6eae5b
  40e041:	aaa    
  40e042:	rcl    BYTE PTR [eax-0x33],0x9b
  40e046:	imul   eax,DWORD PTR [esi],0x8cc6ef3d
  40e04c:	xchg   edi,eax
  40e04d:	stc    
  40e04e:	pop    ss
  40e04f:	ja     0x40e010
  40e051:	and    BYTE PTR [ecx-0x4d762555],al
  40e057:	lods   al,BYTE PTR ds:[esi]
  40e058:	mov    ah,0xc6
  40e05a:	sahf   
  40e05b:	or     ah,ah
  40e05d:	xor    ebp,DWORD PTR [ebx]
  40e05f:	lea    esi,[esi-0xe]
  40e062:	(bad)  
  40e063:	cmp    ebx,DWORD PTR [edx]
  40e065:	test   bh,dl
  40e067:	repz dec eax
  40e069:	xchg   edx,eax
  40e06a:	dec    edx
  40e06b:	icebp  
  40e06c:	(bad)  [esi]
  40e06e:	icebp  
  40e06f:	out    0xe7,al
  40e071:	push   0xa8ffacd1
  40e076:	ins    DWORD PTR es:[edi],dx
  40e077:	adc    eax,0x4c007a90
  40e07c:	cs popa 
  40e07e:	stos   DWORD PTR es:[edi],eax
  40e07f:	sub    DWORD PTR [edi],ecx
  40e081:	inc    edx
  40e082:	lock in eax,0xa7
  40e085:	or     ebp,esp
  40e087:	xor    al,0xe1
  40e089:	sub    dh,BYTE PTR [ebx]
  40e08b:	mov    cl,0x93
  40e08d:	mov    al,ds:0x4b2a3817
  40e092:	push   ss
  40e093:	push   ebx
  40e094:	ss xchg ebp,eax
  40e096:	and    DWORD PTR [esi+eax*1],esi
  40e099:	xor    bh,BYTE PTR [edi+edi*1-0x4d]
  40e09d:	(bad)  
  40e09e:	fucom  st(4)
  40e0a0:	jae    0x40e0d6
  40e0a2:	scas   eax,DWORD PTR es:[edi]
  40e0a3:	arpl   WORD PTR [edi+eiz*2],ax
  40e0a6:	cmp    BYTE PTR [edx+0x5303b88f],dh
  40e0ac:	movups XMMWORD PTR [ebp+0x6c],xmm0
  40e0b0:	imul   ebp,DWORD PTR [edi],0xcd528eb8
  40e0b6:	aaa    
  40e0b7:	(bad)  
  40e0b9:	cmc    
  40e0ba:	pop    es
  40e0bb:	jmp    0x40e054
  40e0bd:	inc    ebx
  40e0be:	jae    0x40e073
  40e0c0:	push   ebx
  40e0c1:	cmp    DWORD PTR [edi-0x4],edi
  40e0c4:	daa    
  40e0c5:	sub    DWORD PTR [ebp-0x12bbf4a6],0xffffffdf
  40e0cc:	in     al,dx
  40e0cd:	push   ecx
  40e0ce:	dec    edx
  40e0cf:	dec    edx
  40e0d0:	sbb    esp,DWORD PTR [ebx+ecx*4+0x4b]
  40e0d4:	shl    BYTE PTR [ebp-0x21],1
  40e0d7:	xchg   edi,eax
  40e0d8:	push   edx
  40e0d9:	test   DWORD PTR [ecx],ebp
  40e0db:	or     ebp,DWORD PTR [esi-0x229ee810]
  40e0e1:	and    esi,DWORD PTR [esi-0x5f9e799d]
  40e0e7:	push   ds
  40e0e8:	push   cs
  40e0e9:	mov    DWORD PTR [ebx+0x4aa1321],edi
  40e0ef:	sbb    eax,DWORD PTR [di]
  40e0f2:	add    ah,BYTE PTR [esi+0x6d73a470]
  40e0f8:	xor    al,0x1c
  40e0fa:	fnstenv [edx]
  40e0fc:	xchg   BYTE PTR [eax],bl
  40e0fe:	or     ch,BYTE PTR [ecx]
  40e100:	adc    bh,BYTE PTR [eax]
  40e102:	push   edi
  40e103:	sub    BYTE PTR cs:[ebx],dh
  40e106:	mov    esi,ebx
  40e108:	xchg   esi,eax
  40e109:	jle    0x40e17b
  40e10b:	sti    
  40e10c:	xor    eax,0x1e93006
  40e111:	xor    ebx,0xffffffc5
  40e114:	pop    esp
  40e115:	jns    0x40e170
  40e117:	jl     0x40e195
  40e119:	jmp    DWORD PTR [edi+ecx*4]
  40e11c:	push   ecx
  40e11d:	mov    ebx,0xb6d1349b
  40e122:	or     ebp,DWORD PTR [edi-0x73]
  40e125:	add    DWORD PTR ds:[eax-0x55],0xff9511cc
  40e12d:	jle    0x40e0f4
  40e12f:	mov    eax,0x29ea485d
  40e134:	sbb    BYTE PTR [ebx-0x51],0xc3
  40e138:	mov    dh,BYTE PTR [eax]
  40e13a:	xchg   edx,eax
  40e13b:	xchg   ebp,eax
  40e13c:	dec    ecx
  40e13d:	test   BYTE PTR [edi],bl
  40e13f:	xchg   BYTE PTR [ebp-0x2eb9f94c],al
  40e145:	(bad)  
  40e146:	mov    ds,WORD PTR [ecx+0x28bf8d13]
  40e14c:	push   ss
  40e14d:	add    ax,0x6a18
  40e151:	fwait
  40e152:	mov    cl,0x28
  40e154:	xchg   ebx,eax
  40e155:	out    dx,al
  40e156:	(bad)  
  40e157:	loopne 0x40e0e6
  40e159:	iret   
  40e15a:	cdq    
  40e15b:	add    al,0xcd
  40e15d:	pop    ss
  40e15e:	das    
  40e15f:	add    BYTE PTR [esi+0x24d7a51a],0xdd
  40e166:	fadd   DWORD PTR [ecx+0x71]
  40e169:	outs   dx,BYTE PTR ds:[esi]
  40e16a:	stos   DWORD PTR es:[edi],eax
  40e16b:	cli    
  40e16c:	xchg   ebp,eax
  40e16d:	xchg   esi,eax
  40e16e:	hlt    
  40e16f:	adc    al,0x65
  40e171:	cwde   
  40e172:	outs   dx,BYTE PTR ds:[esi]
  40e173:	sub    edx,eax
  40e175:	in     eax,dx
  40e176:	mov    edx,0x78b27893
  40e17b:	mov    edx,0x6786fd0a
  40e180:	fdiv   st,st(3)
  40e182:	dec    ebx
  40e183:	lahf   
  40e184:	in     al,0x4a
  40e186:	xchg   ecx,eax
  40e187:	inc    ecx
  40e188:	fst    st(4)
  40e18a:	mov    ch,bh
  40e18c:	scas   al,BYTE PTR es:[edi]
  40e18d:	loope  0x40e150
  40e18f:	pop    ebx
  40e190:	and    al,0x59
  40e192:	pushf  
  40e193:	in     eax,0x83
  40e195:	not    BYTE PTR [ebx-0x16083ea1]
  40e19b:	repnz pop es
  40e19d:	or     eax,0x7629c0ee
  40e1a2:	jl     0x40e1e5
  40e1a4:	sahf   
  40e1a5:	jae    0x40e20a
  40e1a7:	mov    edi,DWORD PTR [edx-0x2ec90b02]
  40e1ad:	popf   
  40e1ae:	fs mov ecx,0x1535c5a8
  40e1b4:	dec    esp
  40e1b5:	adc    edx,DWORD PTR [ecx+0xf6694cf]
  40e1bb:	or     eax,0x2665b7cd
  40e1c0:	or     eax,0xf6e4b5d7
  40e1c5:	xlat   BYTE PTR ds:[ebx]
  40e1c6:	(bad)  
  40e1c7:	mov    ebp,esi
  40e1c9:	popf   
  40e1ca:	jno    0x40e1b5
  40e1cc:	pop    ecx
  40e1cd:	dec    ebp
  40e1ce:	mov    ah,0x58
  40e1d0:	sbb    bl,ah
  40e1d2:	ret    
  40e1d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1d4:	std    
  40e1d5:	iret   
  40e1d6:	cdq    
  40e1d7:	addr16 ret 0x9ec9
  40e1db:	push   eax
  40e1dc:	in     eax,0x1f
  40e1de:	push   edx
  40e1df:	cwde   
  40e1e0:	or     eax,eax
  40e1e2:	sbb    al,0xb1
  40e1e4:	cmp    edx,eax
  40e1e6:	mov    ebx,0xec124eb7
  40e1eb:	adc    cl,BYTE PTR [ecx+0x26100a75]
  40e1f1:	fs in  al,dx
  40e1f3:	cdq    
  40e1f4:	out    0xc9,eax
  40e1f6:	aas    
  40e1f7:	mov    ebp,0xea17712e
  40e1fc:	mov    BYTE PTR [edi+0xf1cacd0],bl
  40e202:	stos   DWORD PTR es:[edi],eax
  40e203:	pop    es
  40e204:	inc    BYTE PTR [ebp+0x12]
  40e207:	pop    esp
  40e208:	(bad)  
  40e209:	xor    al,0x75
  40e20b:	inc    ebx
  40e20c:	xor    edx,0xffffffe6
  40e20f:	arpl   ax,dx
  40e211:	or     bh,BYTE PTR [edx-0xb]
  40e214:	xchg   ebp,eax
  40e215:	mov    edx,0xe2ef1325
  40e21a:	ret    
  40e21b:	(bad)  
  40e21c:	sbb    BYTE PTR [edx-0x712cf548],bh
  40e222:	ror    DWORD PTR [edi+ebx*8-0x74],cl
  40e226:	mov    ds:0x22b229a6,eax
  40e22b:	test   eax,0x8b8d15c1
  40e230:	mov    esi,0x50f0dd36
  40e235:	xchg   bl,ah
  40e237:	inc    edi
  40e238:	xor    BYTE PTR [eax+ebx*4-0x5697b87a],0x84
  40e240:	popf   
  40e241:	mov    ah,BYTE PTR [ebx+0x3bf0020b]
  40e247:	inc    eax
  40e248:	pop    ebx
  40e249:	mov    dh,ch
  40e24b:	cmp    ebx,DWORD PTR [esi+edi*2]
  40e24e:	xchg   BYTE PTR ds:0xcddeda44,dl
  40e254:	outs   dx,BYTE PTR ds:[esi]
  40e255:	or     ah,BYTE PTR [ebp+0x2bae4b98]
  40e25b:	loope  0x40e2a4
  40e25d:	popf   
  40e25e:	pop    ebp
  40e25f:	ds push esi
  40e261:	xor    al,0x60
  40e263:	mul    BYTE PTR [eax+0xf]
  40e266:	loopne 0x40e26e
  40e268:	push   ecx
  40e269:	fwait
  40e26a:	mov    ebx,0xde8dadaa
  40e26f:	mov    esi,ebp
  40e271:	push   cs
  40e272:	jno    0x40e281
  40e274:	es jg  0x40e279
  40e277:	jbe    0x40e265
  40e279:	stos   BYTE PTR es:[edi],al
  40e27a:	dec    edx
  40e27b:	push   bp
  40e27d:	sar    DWORD PTR [esi-0x5d],0x4f
  40e281:	sahf   
  40e282:	jp     0x40e227
  40e284:	test   al,0x58
  40e286:	mov    ch,0x9e
  40e288:	int    0x3d
  40e28a:	ds retf 0xe9e4
  40e28e:	push   0x51
  40e290:	ficom  DWORD PTR [eax]
  40e292:	ds pop ds
  40e294:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e295:	adc    eax,0xf74b93e2
  40e29a:	jne    0x40e247
  40e29c:	jns    0x40e253
  40e29e:	int    0x6a
  40e2a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2a1:	push   ss
  40e2a2:	mov    cl,0xaf
  40e2a4:	loope  0x40e2bd
  40e2a6:	jp     0x40e235
  40e2a8:	pop    DWORD PTR [esi]
  40e2aa:	imul   ecx,DWORD PTR [ebp-0x77],0x38
  40e2ae:	gs sahf 
  40e2b0:	out    0x4,al
  40e2b2:	ficom  WORD PTR [edx]
  40e2b4:	mov    esp,0xe3833d89
  40e2b9:	shr    bl,1
  40e2bb:	add    eax,0x331d9866
  40e2c0:	xchg   ebp,eax
  40e2c1:	adc    al,0x69
  40e2c3:	(bad)  
  40e2c4:	(bad)  
  40e2c5:	lock nop
  40e2c7:	pop    ebp
  40e2c8:	(bad)
  40e2cb:	mov    ds:0x1521da1e,al
  40e2d0:	fldenv [ebx+0x7cbd0db7]
  40e2d6:	mov    al,0x12
  40e2d8:	and    al,0x77
  40e2da:	out    0xaf,eax
  40e2dc:	push   es
  40e2dd:	push   edx
  40e2de:	hlt    
  40e2df:	fsubr  DWORD PTR [ebx]
  40e2e1:	gs dec eax
  40e2e3:	xchg   ebx,eax
  40e2e4:	xchg   edi,eax
  40e2e5:	jae    0x40e28b
  40e2e7:	in     al,0x3b
  40e2e9:	out    0x29,eax
  40e2eb:	mov    DWORD PTR [ecx+eax*8],ebx
  40e2ee:	sub    al,0xae
  40e2f0:	sub    ebp,DWORD PTR [ecx+0x1a]
  40e2f3:	jle    0x40e280
  40e2f5:	popf   
  40e2f6:	sbb    eax,0x204e04b6
  40e2fb:	jbe    0x40e33a
  40e2fd:	mov    BYTE PTR [esi+0x3af7c44d],dh
  40e303:	ss das 
  40e305:	sahf   
  40e306:	gs es inc esi
  40e309:	outs   dx,DWORD PTR ds:[esi]
  40e30a:	fs push eax
  40e30c:	imul   esi,edi,0x935d5b92
  40e312:	bnd jmp 0x435d1daa
  40e318:	mov    edi,?
  40e31a:	cs inc esp
  40e31c:	jnp    0x40e33b
  40e31e:	cmc    
  40e31f:	jge    0x40e392
  40e321:	push   0x3b
  40e323:	in     eax,0x0
  40e325:	fidiv  DWORD PTR [edx+0x2d]
  40e328:	mov    al,ds:0x42bf6a99
  40e32d:	rol    BYTE PTR [edi],1
  40e32f:	nop
  40e330:	xor    eax,0xe4e7031e
  40e335:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e336:	sub    bh,BYTE PTR [esi+0x1f]
  40e339:	inc    eax
  40e33a:	adc    ah,dh
  40e33c:	pop    eax
  40e33d:	and    DWORD PTR ds:0xa6a97ac1,esi
  40e343:	jecxz  0x40e380
  40e345:	xchg   edi,eax
  40e346:	pop    esi
  40e347:	lods   eax,DWORD PTR ds:[esi]
  40e348:	xor    dh,ch
  40e34a:	xor    al,0x1a
  40e34c:	or     DWORD PTR [eax+ebp*4-0x2502a1e8],eax
  40e353:	sub    al,0x60
  40e355:	push   esi
  40e356:	sbb    al,0xaa
  40e358:	xchg   esp,eax
  40e359:	jnp    0x40e331
  40e35b:	cwde   
  40e35c:	pop    esi
  40e35d:	test   eax,0xa472c7e6
  40e362:	xchg   DWORD PTR [ecx+0x17],ecx
  40e365:	mov    dh,0x12
  40e367:	adc    DWORD PTR [ecx],ecx
  40e369:	ins    DWORD PTR es:[edi],dx
  40e36a:	repnz ror BYTE PTR [esi+0x5008c978],cl
  40e371:	push   ss
  40e372:	mov    dl,0x51
  40e374:	mov    eax,0x2665e0a9
  40e379:	add    edi,0xa2d6884f
  40e37f:	inc    esp
  40e380:	sub    BYTE PTR [ecx],ah
  40e382:	jbe    0x40e3e9
  40e384:	jo     0x40e33b
  40e386:	clc    
  40e387:	and    al,0x58
  40e389:	inc    ebx
  40e38a:	aaa    
  40e38b:	rcr    BYTE PTR [edx],0x2f
  40e38e:	jmp    0x40e339
  40e390:	jmp    0x40e3d5
  40e392:	sub    eax,0x8af1c986
  40e397:	jnp    0x40e3ac
  40e399:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e39a:	push   ds
  40e39b:	push   es
  40e39c:	sub    al,0x6c
  40e39e:	and    BYTE PTR [edi],bh
  40e3a0:	mov    ebx,0x4a7aee88
  40e3a5:	iret   
  40e3a6:	push   esp
  40e3a7:	icebp  
  40e3a8:	hlt    
  40e3a9:	fisttp WORD PTR [edx]
  40e3ab:	push   esp
  40e3ac:	dec    edx
  40e3ad:	out    0x7c,al
  40e3af:	loopne 0x40e414
  40e3b1:	xchg   edi,eax
  40e3b2:	mov    ds:0x4a5cd01c,eax
  40e3b7:	mov    esp,0x630d1164
  40e3bc:	xchg   ebx,eax
  40e3bd:	jl     0x40e3b2
  40e3bf:	popa   
  40e3c0:	cwde   
  40e3c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3c2:	js     0x40e34a
  40e3c4:	jns    0x40e3af
  40e3c6:	sbb    BYTE PTR [ecx+0x2b7ae621],ah
  40e3cc:	mov    ecx,0x49ad1fb4
  40e3d1:	ror    BYTE PTR ds:0xe86a3e3b,0xe9
  40e3d8:	ins    BYTE PTR es:[edi],dx
  40e3d9:	push   ebx
  40e3da:	outs   dx,DWORD PTR ds:[esi]
  40e3db:	jecxz  0x40e36d
  40e3dd:	outs   dx,DWORD PTR ds:[esi]
  40e3de:	lods   al,BYTE PTR ds:[esi]
  40e3df:	iret   
  40e3e0:	push   ecx
  40e3e1:	jecxz  0x40e3fd
  40e3e3:	cwde   
  40e3e4:	inc    eax
  40e3e5:	iret   
  40e3e6:	cmp    esi,DWORD PTR ds:0xcb143d91
  40e3ec:	pop    ds
  40e3ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3ee:	popa   
  40e3ef:	fmul   st(5),st
  40e3f1:	jae    0x40e3ae
  40e3f3:	mov    cl,0x54
  40e3f5:	call   0x2f9c:0x4e305d55
  40e3fc:	inc    eax
  40e3fd:	mov    dh,0x50
  40e3ff:	arpl   WORD PTR [eax+0xe310f5a],dx
  40e405:	cdq    
  40e406:	xor    al,0x73
  40e408:	xor    BYTE PTR [ecx-0x2e],dh
  40e40b:	inc    ebx
  40e40c:	jmp    0xfcb9782e
  40e411:	push   edi
  40e412:	repz aas 
  40e414:	cld    
  40e415:	add    eax,0xe52cf672
  40e41a:	mov    bh,0xd4
  40e41c:	stc    
  40e41d:	and    ecx,DWORD PTR [ebp+0x40]
  40e420:	hlt    
  40e421:	cmp    BYTE PTR [edx+0x7dc05f3e],ah
  40e427:	sahf   
  40e428:	pusha  
  40e429:	iret   
  40e42a:	inc    esi
  40e42b:	inc    eax
  40e42c:	mov    cl,0xee
  40e42e:	clc    
  40e42f:	push   esp
  40e430:	iret   
  40e431:	xchg   edi,eax
  40e432:	inc    dh
  40e434:	pop    ecx
  40e435:	dec    edx
  40e436:	mov    edi,0xd6059481
  40e43b:	sbb    BYTE PTR [ebx],ah
  40e43d:	loope  0x40e415
  40e43f:	inc    esp
  40e440:	jl     0x40e4be
  40e442:	push   ebp
  40e443:	add    ah,dh
  40e445:	push   ecx
  40e446:	scas   eax,DWORD PTR es:[edi]
  40e447:	add    eax,0x2ef5f523
  40e44c:	icebp  
  40e44d:	push   0x56
  40e44f:	jge    0x40e489
  40e451:	push   0x74
  40e453:	mov    ah,0x84
  40e455:	sbb    al,0xe5
  40e457:	mov    edx,DWORD PTR [esi]
  40e459:	mov    DWORD PTR [edx],ebp
  40e45b:	cmp    edx,DWORD PTR [ebx-0x3]
  40e45e:	js     0x40e465
  40e460:	iret   
  40e461:	xchg   edi,eax
  40e462:	inc    ecx
  40e463:	gs xchg edi,eax
  40e465:	inc    ecx
  40e466:	adc    al,0xbd
  40e468:	fist   DWORD PTR [ecx-0x593550d]
  40e46e:	leave  
  40e46f:	mov    ah,0x18
  40e471:	cli    
  40e472:	loopne 0x40e4bc
  40e474:	ins    DWORD PTR es:[edi],dx
  40e475:	add    BYTE PTR [edi+esi*8-0xd],bh
  40e479:	outs   dx,BYTE PTR ds:[esi]
  40e47a:	lods   eax,DWORD PTR ds:[esi]
  40e47b:	not    BYTE PTR [esi+0x27d3051e]
  40e481:	(bad)  
  40e483:	cs sahf 
  40e485:	fdivp  st(5),st
  40e487:	pop    edx
  40e488:	in     al,dx
  40e489:	leave  
  40e48a:	jmp    0xaa20:0xd5e548e
  40e491:	mov    edx,0x98c655bf
  40e496:	mov    edi,DWORD PTR [edi+0x5441b98b]
  40e49c:	mov    ebx,0x1816d795
  40e4a1:	pushf  
  40e4a2:	xor    ch,BYTE PTR [edi+0x203e45b7]
  40e4a8:	add    BYTE PTR [ebp-0x37ed2e39],bh
  40e4ae:	push   es
  40e4af:	stos   DWORD PTR es:[edi],eax
  40e4b0:	in     al,0x88
  40e4b2:	repz add edi,DWORD PTR ds:0x3224bc4
  40e4b9:	adc    ebp,DWORD PTR [ecx]
  40e4bb:	xchg   ebx,eax
  40e4bc:	sub    eax,0x3d510c2c
  40e4c1:	aad    0xbe
  40e4c3:	and    eax,edx
  40e4c5:	push   es
  40e4c6:	adc    ebp,ebx
  40e4c8:	ins    DWORD PTR es:[edi],dx
  40e4c9:	pop    ecx
  40e4ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4cb:	cli    
  40e4cc:	das    
  40e4cd:	sub    DWORD PTR [ecx],edi
  40e4cf:	shr    DWORD PTR [esi-0x47328e69],1
  40e4d5:	stos   BYTE PTR es:[edi],al
  40e4d6:	scas   eax,DWORD PTR es:[edi]
  40e4d7:	pop    edx
  40e4d8:	and    ecx,edi
  40e4da:	test   al,0x9a
  40e4dc:	(bad)  
  40e4dd:	sub    esp,DWORD PTR [edi]
  40e4df:	les    edx,FWORD PTR [eax-0x296c4588]
  40e4e5:	bound  esp,QWORD PTR [ebp+edi*2-0xe65fbb5]
  40e4ec:	(bad)  
  40e4ed:	lds    ebx,FWORD PTR [eax-0x29]
  40e4f0:	pop    ss
  40e4f1:	jae    0x40e4e6
  40e4f3:	xchg   ecx,eax
  40e4f4:	paddusw mm2,mm3
  40e4f7:	add    eax,eax
  40e4f9:	mov    esp,edx
  40e4fb:	in     al,0x6f
  40e4fd:	mov    WORD PTR [eax+0x31],cs
  40e500:	bound  ecx,QWORD PTR [ebp+ebp*2+0x57]
  40e504:	cmp    edx,DWORD PTR [ecx-0x637d6ac]
  40e50a:	fcom   DWORD PTR ds:0xe58d1ca5
  40e510:	add    DWORD PTR [esi+edi*1-0x3f],edx
  40e514:	int    0xdb
  40e516:	out    dx,al
  40e517:	mov    al,0xf4
  40e519:	cdq    
  40e51a:	fsubr  DWORD PTR [ebx-0x47a1f4a7]
  40e520:	(bad)  
  40e521:	ins    DWORD PTR es:[edi],dx
  40e522:	bnd jp 0x40e513
  40e525:	sbb    eax,0xe65a88e8
  40e52a:	call   esp
  40e52c:	hlt    
  40e52d:	in     eax,dx
  40e52e:	lea    esp,[eax]
  40e530:	mov    ebx,0x3dca7a42
  40e535:	popa   
  40e536:	out    dx,al
  40e537:	mov    fs,esp
  40e539:	leave  
  40e53a:	call   0x28c1:0xf94fb1e8
  40e541:	ss ret 
  40e543:	and    eax,esi
  40e545:	and    bl,BYTE PTR [esi]
  40e547:	outs   dx,BYTE PTR ds:[esi]
  40e548:	enter  0x4c7b,0xd9
  40e54c:	xchg   ebp,eax
  40e54d:	enter  0x6ae1,0x61
  40e551:	sbb    eax,0x61b5e2f
  40e556:	or     al,ch
  40e558:	pop    esi
  40e559:	push   DWORD PTR gs:[edi+edx*4]
  40e55d:	test   eax,0xc99948ed
  40e562:	ror    ebp,1
  40e564:	push   edx
  40e565:	cli    
  40e566:	push   esp
  40e567:	(bad)  
  40e568:	mov    al,ds:0xf7a28363
  40e56d:	jb     0x40e563
  40e56f:	push   DWORD PTR [ebx+ecx*4-0x58]
  40e573:	adc    al,0xca
  40e575:	dec    ecx
  40e576:	ins    BYTE PTR es:[edi],dx
  40e577:	add    esi,DWORD PTR [ebp-0x70]
  40e57a:	adc    eax,0x9fd7ca70
  40e57f:	pushf  
  40e580:	(bad)  
  40e581:	mov    BYTE PTR [ebp+edi*1+0x466e2cac],bl
  40e588:	jmpw   0x629d
  40e58c:	fdivr  DWORD PTR [ebp+0x6d]
  40e58f:	push   0x21
  40e591:	push   ecx
  40e592:	adc    BYTE PTR [esi+0x1e],0x29
  40e596:	in     al,0xec
  40e598:	ret    
  40e599:	fmul   QWORD PTR [ebx+0x7]
  40e59c:	inc    edi
  40e59d:	lahf   
  40e59e:	inc    eax
  40e59f:	adc    edx,DWORD PTR [esi+0x47]
  40e5a2:	mov    cl,BYTE PTR [ebx]
  40e5a4:	mov    edx,0x47b6bea9
  40e5a9:	xor    dh,ch
  40e5ab:	jae    0x40e54b
  40e5ad:	mov    BYTE PTR [ecx],ah
  40e5af:	push   ebp
  40e5b0:	int    0xff
  40e5b2:	jns    0x40e5c8
  40e5b4:	cmc    
  40e5b5:	in     al,dx
  40e5b6:	xor    eax,0x189b6243
  40e5bb:	mov    ds:0xb9da84f2,al
  40e5c0:	shl    ch,cl
  40e5c2:	retf   
  40e5c3:	ins    DWORD PTR es:[edi],dx
  40e5c4:	push   eax
  40e5c5:	rol    bl,1
  40e5c7:	sub    edi,DWORD PTR [eax-0x44c09e90]
  40e5cd:	imul   esp,DWORD PTR [eax-0x64],0x14a9fdeb
  40e5d4:	rol    bh,cl
  40e5d6:	xor    al,0x95
  40e5d8:	xchg   esi,eax
  40e5d9:	popa   
  40e5da:	push   ss
  40e5db:	sub    eax,0xd221b199
  40e5e0:	add    DWORD PTR [ecx-0x2ac7dd53],0xda9a242f
  40e5ea:	fwait
  40e5eb:	xor    BYTE PTR [eax+0x626fe6b8],bh
  40e5f1:	outs   dx,BYTE PTR ds:[esi]
  40e5f2:	sub    al,0x79
  40e5f4:	inc    ecx
  40e5f5:	and    bh,BYTE PTR [esi+0x4a]
  40e5f8:	iret   
  40e5f9:	sbb    bx,bx
  40e5fc:	push   esp
  40e5fd:	imul   esi,DWORD PTR [edi],0x5b
  40e600:	xchg   DWORD PTR [edi-0x76],ecx
  40e603:	push   eax
  40e604:	add    cl,BYTE PTR [edx-0x7]
  40e607:	xchg   edx,eax
  40e608:	pushf  
  40e609:	fidivr DWORD PTR cs:[ebx]
  40e60c:	jp     0x40e5e3
  40e60e:	jnp    0x40e5a4
  40e610:	call   FWORD PTR [edi-0x3fbfcadd]
  40e616:	cs jmp 0x356b:0xcafab95c
  40e61e:	push   edx
  40e61f:	outs   dx,BYTE PTR ds:[esi]
  40e620:	push   ds
  40e621:	into   
  40e622:	push   ebp
  40e623:	mov    ch,0x6e
  40e625:	cmp    esp,DWORD PTR [esi-0x8c4cc9]
  40e62b:	push   ebx
  40e62c:	mov    edi,0xcdc4cb5c
  40e631:	sahf   
  40e632:	mov    eax,0x40495ed2
  40e637:	jmp    0xf574:0x6018a434
  40e63e:	jbe    0x40e632
  40e640:	and    eax,0x8a7f88
  40e645:	and    cl,BYTE PTR [ecx+0x60a9b564]
  40e64b:	dec    eax
  40e64c:	or     DWORD PTR [edi-0x3b3b4aa9],ebx
  40e652:	mov    ecx,DWORD PTR [ebp+0x56]
  40e655:	pop    ebx
  40e656:	(bad)  
  40e657:	stos   DWORD PTR es:[edi],eax
  40e658:	pop    ebp
  40e659:	pop    eax
  40e65a:	mov    WORD PTR [ebx-0x52],cs
  40e65d:	and    eax,0xe743725f
  40e662:	rcr    eax,cl
  40e664:	sub    DWORD PTR [esi+0x38],esp
  40e667:	push   eax
  40e668:	loopne 0x40e6e9
  40e66a:	jl     0x40e6cf
  40e66c:	cs test eax,ebp
  40e66f:	dec    eax
  40e670:	xchg   esp,eax
  40e671:	fisttp DWORD PTR [ebx]
  40e673:	jo     0x40e666
  40e675:	fwait
  40e676:	rcl    al,1
  40e678:	dec    ebx
  40e679:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e67a:	and    BYTE PTR [esp+eax*8+0x4fa604e5],al
  40e681:	mov    ch,0x1d
  40e683:	or     esi,DWORD PTR [eax]
  40e685:	mov    ebp,ss
  40e687:	sar    DWORD PTR [eax],0x61
  40e68a:	inc    ecx
  40e68b:	push   cs
  40e68c:	xchg   edx,eax
  40e68d:	cs pop esp
  40e68f:	add    al,0x76
  40e691:	aad    0x8b
  40e693:	add    BYTE PTR [ecx],0x15
  40e696:	mov    dh,ch
  40e698:	and    BYTE PTR [esp+esi*8-0x19ab3936],cl
  40e69f:	lods   al,BYTE PTR ds:[esi]
  40e6a0:	mov    ecx,0xf165689a
  40e6a5:	arpl   bp,bx
  40e6a7:	push   es
  40e6a8:	cmp    eax,0x8d28dfd1
  40e6ad:	and    al,0x2e
  40e6af:	ss jg  0x40e69b
  40e6b2:	icebp  
  40e6b3:	jb     0x40e68e
  40e6b5:	pushf  
  40e6b6:	pop    edi
  40e6b7:	add    DWORD PTR [ecx],edi
  40e6b9:	xor    bl,BYTE PTR [edi-0x79]
  40e6bc:	mov    esp,0xea176e21
  40e6c1:	pushf  
  40e6c2:	sub    al,0x74
  40e6c4:	xlat   BYTE PTR ds:[ebx]
  40e6c5:	stos   DWORD PTR es:[edi],eax
  40e6c6:	sub    BYTE PTR [esi],cl
  40e6c8:	jnp    0x40e64f
  40e6ca:	jge    0x40e731
  40e6cc:	mov    bl,0xaa
  40e6ce:	xor    dl,BYTE PTR [ebx+0x5af2879d]
  40e6d4:	lods   eax,DWORD PTR ds:[esi]
  40e6d5:	mov    DWORD PTR [ebx-0x662d4742],edx
  40e6db:	or     BYTE PTR [edx+0x47e570b0],dh
  40e6e1:	pop    ebx
  40e6e2:	(bad)  
  40e6e3:	pusha  
  40e6e4:	das    
  40e6e5:	xchg   edi,eax
  40e6e6:	adc    esp,DWORD PTR fs:[esp+eiz*4-0x4bbad067]
  40e6ee:	jno    0x40e6a1
  40e6f0:	enter  0x8889,0x7d
  40e6f4:	cmp    al,BYTE PTR [ebx]
  40e6f6:	hlt    
  40e6f7:	sub    DWORD PTR [ebp-0x17],ecx
  40e6fa:	jo     0x40e6b4
  40e6fc:	mov    ds:0xf7d0dc8d,eax
  40e701:	jb     0x40e760
  40e703:	data16 cmc 
  40e705:	setle  BYTE PTR [eax+eax*8]
  40e709:	lds    ebx,FWORD PTR [ecx*2+0x9685b1d]
  40e710:	jl     0x40e720
  40e712:	mov    ecx,0xbea42abe
  40e717:	fiadd  WORD PTR [eax-0x4b8f72c8]
  40e71d:	inc    esp
  40e71e:	cmp    cl,BYTE PTR [ecx-0x1080f0cb]
  40e724:	and    DWORD PTR [ebx],0x3c
  40e727:	pop    ebp
  40e728:	mov    edx,0xcda58db8
  40e72d:	mov    cl,0x77
  40e72f:	jo     0x40e793
  40e731:	jne    0x40e6f6
  40e733:	imul   esp,DWORD PTR [edx-0xf],0xa1a0a40f
  40e73a:	into   
  40e73b:	xchg   ebp,eax
  40e73c:	xchg   edi,eax
  40e73d:	test   DWORD PTR [edx-0x4e],esp
  40e740:	dec    ebp
  40e741:	adc    al,0x80
  40e743:	arpl   WORD PTR [edi-0x4d],di
  40e746:	scas   al,BYTE PTR es:[edi]
  40e747:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e748:	pop    ebp
  40e749:	sub    al,0x83
  40e74b:	fs int 0xe3
  40e74e:	enter  0x373a,0x61
  40e752:	mov    eax,ds:0xd1e6af1e
  40e757:	in     al,0x62
  40e759:	loopne 0x40e724
  40e75b:	dec    eax
  40e75c:	add    ch,cl
  40e75e:	ret    0x8655
  40e761:	mov    esp,0xb9856018
  40e766:	push   ds
  40e767:	outs   dx,BYTE PTR ds:[esi]
  40e768:	mov    ds:0x96152f81,al
  40e76d:	shr    DWORD PTR [esi-0x73],0x16
  40e771:	xor    edi,ecx
  40e773:	rol    dh,1
  40e775:	nop
  40e776:	and    BYTE PTR cs:[ebx+ebp*8-0x60],0x38
  40e77c:	and    DWORD PTR [ebx+0x25],0xffffffa4
  40e780:	leave  
  40e781:	xchg   ecx,eax
  40e782:	mov    DWORD PTR [edx+0x19cb58ff],ebp
  40e788:	rol    DWORD PTR [ebp-0x76],cl
  40e78b:	mov    cl,0x3d
  40e78d:	ret    
  40e78e:	sbb    BYTE PTR [edi-0x4d67ef7d],ah
  40e794:	ja     0x40e7f5
  40e796:	cmp    ebp,ecx
  40e798:	icebp  
  40e799:	xchg   ebx,eax
  40e79a:	std    
  40e79b:	sub    esp,DWORD PTR [edi+ebp*4+0x3012845e]
  40e7a2:	cli    
  40e7a3:	jnp    0x40e73a
  40e7a5:	loopne 0x40e77d
  40e7a7:	push   0x20014674
  40e7ac:	or     ah,dl
  40e7ae:	push   0x4c
  40e7b0:	and    al,dl
  40e7b2:	adc    eax,0x60abc5cb
  40e7b7:	or     eax,0xbd3c2f72
  40e7bc:	fidivr WORD PTR [eax]
  40e7be:	shl    DWORD PTR [esi+ebx*1-0x6a74363f],1
  40e7c5:	and    DWORD PTR [eax-0x1eb3a5f7],ecx
  40e7cb:	xchg   BYTE PTR [esi+0x51],ah
  40e7ce:	mov    dh,0xff
  40e7d0:	sbb    DWORD PTR [esi-0x26],esp
  40e7d3:	xor    DWORD PTR [ecx+0x36931c4f],edx
  40e7d9:	imul   eax,esi,0x181446f1
  40e7df:	aas    
  40e7e0:	(bad)  
  40e7e1:	mov    esp,0x85a4959d
  40e7e6:	shl    BYTE PTR [ebp-0x1],cl
  40e7e9:	in     al,0x65
  40e7eb:	xchg   DWORD PTR [edx+0x5bea7fd2],eax
  40e7f1:	gs out dx,al
  40e7f3:	das    
  40e7f4:	and    ah,bl
  40e7f6:	mov    ebp,0xa271b2fa
  40e7fb:	mov    ebp,0x88fc72bc
  40e800:	and    BYTE PTR [ebp-0x2d54303a],al
  40e806:	rcr    DWORD PTR [ecx],1
  40e808:	aas    
  40e809:	ror    BYTE PTR [eax-0x11],cl
  40e80c:	ins    DWORD PTR es:[edi],dx
  40e80d:	scas   eax,DWORD PTR es:[edi]
  40e80e:	pop    ebx
  40e80f:	add    al,0x5f
  40e811:	arpl   WORD PTR [ebx-0x506897a2],dx
  40e817:	sub    al,BYTE PTR [edx+0x2d5d6429]
  40e81d:	push   eax
  40e81e:	mov    dh,0x22
  40e820:	and    al,0x31
  40e822:	ret    
  40e823:	inc    ebx
  40e824:	fcmove st,st(6)
  40e826:	clc    
  40e827:	cmc    
  40e828:	add    BYTE PTR [ecx+0x48e636c4],al
  40e82e:	or     cl,ah
  40e830:	mov    cl,0xa1
  40e832:	cmp    al,0x2b
  40e834:	stc    
  40e835:	imul   esi,DWORD PTR [ebx+esi*2+0x6b513c60],0xffffff8d
  40e83d:	adc    bl,BYTE PTR [edx+0x725d6818]
  40e843:	pop    ecx
  40e844:	cmp    ebp,esp
  40e846:	fisub  WORD PTR [eax+edx*1]
  40e849:	adc    al,0x1a
  40e84b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e84c:	or     eax,0xf80db147
  40e851:	pop    ebp
  40e852:	enter  0x12b4,0x78
  40e856:	mov    bh,0x76
  40e858:	push   ebx
  40e859:	gs or  eax,0x88825bc4
  40e85f:	inc    ecx
  40e860:	and    ebp,ebx
  40e862:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40e864:	push   eax
  40e865:	ja     0x40e8e2
  40e867:	pop    esi
  40e868:	test   BYTE PTR [esi],0x7a
  40e86b:	inc    edi
  40e86c:	mov    bl,0x3e
  40e86e:	stc    
  40e86f:	retf   0x57dd
  40e872:	push   ebp
  40e873:	and    eax,0xd5bbe5ab
  40e878:	xchg   esp,eax
  40e879:	adc    BYTE PTR [esi+0x3a],al
  40e87c:	jl     0x40e898
  40e87e:	adc    BYTE PTR [eax],ah
  40e880:	mov    esi,0x615e3f81
  40e885:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e886:	les    edx,FWORD PTR [esi+0x26]
  40e889:	xchg   ecx,eax
  40e88a:	pusha  
  40e88b:	push   eax
  40e88c:	and    ch,BYTE PTR [eax-0x1cbf97fd]
  40e892:	mov    esp,0x6247b29f
  40e897:	(bad)  
  40e898:	loop   0x40e843
  40e89a:	mov    ecx,0xbd6e5db4
  40e89f:	icebp  
  40e8a0:	mov    esp,0x67a94ef0
  40e8a5:	cmc    
  40e8a6:	jbe    0x40e8ed
  40e8a8:	adc    eax,0x5c86aa02
  40e8ad:	icebp  
  40e8ae:	mov    ecx,0x664c787c
  40e8b3:	pop    esp
  40e8b4:	(bad)  
  40e8b5:	in     al,dx
  40e8b6:	fild   DWORD PTR [ecx-0x13]
  40e8b9:	mov    esp,0x86a3d667
  40e8be:	mov    ebp,0x254484b3
  40e8c3:	shr    BYTE PTR [edx*2+0x3f015507],0xb5
  40e8cb:	xchg   edi,eax
  40e8cc:	xchg   ecx,eax
  40e8cd:	sub    ch,ch
  40e8cf:	out    dx,al
  40e8d0:	adc    eax,0xeb274d9c
  40e8d5:	hlt    
  40e8d6:	mov    ch,0xba
  40e8d8:	mov    esp,0xad59ba99
  40e8dd:	scas   eax,DWORD PTR es:[edi]
  40e8de:	test   edi,eax
  40e8e0:	jg     0x40e910
  40e8e2:	adc    BYTE PTR [edi+esi*8+0x31],0x38
  40e8e7:	shl    ecx,1
  40e8e9:	lods   eax,DWORD PTR ds:[esi]
  40e8ea:	or     al,0xdb
  40e8ec:	sbb    dl,BYTE PTR [edi]
  40e8ee:	ins    DWORD PTR es:[edi],dx
  40e8ef:	mov    eax,0xa1d94e96
  40e8f4:	sub    dl,BYTE PTR [edi]
  40e8f6:	pushf  
  40e8f7:	call   0x4a50d329
  40e8fc:	es dec ebp
  40e8fe:	dec    ebp
  40e8ff:	jg     0x40e97e
  40e901:	dec    ebx
  40e902:	adc    DWORD PTR [ebx],ecx
  40e904:	pop    ss
  40e905:	inc    esi
  40e906:	mov    al,0x7a
  40e908:	dec    esi
  40e909:	arpl   WORD PTR [ebx-0x7557c43f],dx
  40e90f:	jmp    0xabed:0x585026a0
  40e916:	icebp  
  40e917:	push   ss
  40e918:	mov    ch,0x5d
  40e91a:	int3   
  40e91b:	and    BYTE PTR [ecx+0x2b],0x92
  40e91f:	ficomp WORD PTR [eax-0x3f108823]
  40e925:	clc    
  40e926:	pop    edi
  40e927:	cld    
  40e928:	inc    ebx
  40e929:	cwde   
  40e92a:	xchg   BYTE PTR [ecx+0x3064babe],dl
  40e930:	imul   esi,DWORD PTR [edx],0xfffffffb
  40e933:	stos   BYTE PTR es:[edi],al
  40e934:	add    DWORD PTR ds:0x20084994,esp
  40e93a:	jmp    0x40e8c8
  40e93c:	sub    al,0x55
  40e93e:	aas    
  40e93f:	dec    edx
  40e940:	jns    0x40e9b3
  40e942:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e943:	jb     0x40e9a0
  40e945:	mov    ds:0x964d5e0b,al
  40e94a:	inc    edx
  40e94b:	adc    eax,0x21f91c72
  40e950:	or     eax,0xa0a34033
  40e955:	jno    0x40e96c
  40e957:	jae    0x40e973
  40e959:	outs   dx,BYTE PTR ds:[esi]
  40e95a:	ret    0xe307
  40e95d:	dec    edi
  40e95e:	daa    
  40e95f:	imul   esi,edi,0x2947086a
  40e965:	retf   
  40e966:	js     0x40e961
  40e968:	and    BYTE PTR [ecx+0x56],0x84
  40e96c:	arpl   WORD PTR [edi-0x1c],si
  40e96f:	push   es
  40e970:	sbb    esp,DWORD PTR [ebx+0x6666e667]
  40e976:	mov    dh,0xa
  40e978:	imul   edx
  40e97a:	aaa    
  40e97b:	jbe    0x40e943
  40e97d:	xchg   ebx,eax
  40e97e:	sub    DWORD PTR [edx],0x24a9cb14
  40e984:	pop    ecx
  40e985:	stos   DWORD PTR es:[edi],eax
  40e986:	mov    edi,0x5299e5b6
  40e98b:	inc    esp
  40e98c:	mov    dl,0x93
  40e98e:	aaa    
  40e98f:	jle    0x40e9f1
  40e991:	lods   eax,DWORD PTR ds:[esi]
  40e992:	push   ebp
  40e993:	(bad)  
  40e994:	out    0x7b,al
  40e996:	js     0x40e944
  40e998:	inc    ecx
  40e999:	inc    eax
  40e99a:	add    BYTE PTR [edi],dh
  40e99c:	in     al,dx
  40e99d:	inc    ebx
  40e99e:	jnp    0x40e992
  40e9a0:	jno    0x40e92a
  40e9a2:	lods   eax,DWORD PTR ds:[esi]
  40e9a3:	fimul  DWORD PTR fs:[ecx+0x59]
  40e9a7:	mov    ds:0x2eb27120,al
  40e9ac:	jle    0x40e9ff
  40e9ae:	pop    esp
  40e9af:	ds jmp 0x822f:0x847a456e
  40e9b7:	je     0x40e977
  40e9b9:	cld    
  40e9ba:	pusha  
  40e9bb:	adc    eax,0xb968eb1d
  40e9c0:	inc    esi
  40e9c1:	or     ah,BYTE PTR [eax+0x16670f34]
  40e9c7:	and    al,0x67
  40e9c9:	pop    eax
  40e9ca:	cmp    dh,cl
  40e9cc:	xor    eax,DWORD PTR [ebp+0x54]
  40e9cf:	fwait
  40e9d0:	mov    ds:0xb830973d,eax
  40e9d5:	neg    DWORD PTR cs:[ebx+eiz*1+0x5e]
  40e9da:	sbb    BYTE PTR [edi],bl
  40e9dc:	cmp    eax,0xfb296dea
  40e9e1:	push   eax
  40e9e2:	jg     0x40ea08
  40e9e4:	xchg   esp,esi
  40e9e6:	cs test bh,ch
  40e9e9:	sbb    dh,cl
  40e9eb:	pop    ecx
  40e9ec:	into   
  40e9ed:	nop
  40e9ee:	(bad)  
  40e9ef:	mov    esi,0x7e2f93fe
  40e9f4:	pop    esi
  40e9f5:	test   DWORD PTR [ecx+0x1],ecx
  40e9f8:	dec    ebx
  40e9f9:	out    0x1c,eax
  40e9fb:	or     ebp,ebp
  40e9fd:	stos   BYTE PTR es:[edi],al
  40e9fe:	gs adc eax,0x854f5ce3
  40ea04:	add    BYTE PTR [esp+edx*1],bh
  40ea07:	mov    edi,0xa46a8aff
  40ea0c:	retf   
  40ea0d:	jmp    0x739f:0x5208392
  40ea14:	adc    eax,0x61c285b1
  40ea19:	mov    edi,0x70a161f3
  40ea1e:	(bad)  
  40ea1f:	sub    al,0x31
  40ea21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea22:	inc    esi
  40ea23:	mov    ds:0xc4e2ab24,al
  40ea28:	ror    DWORD PTR [edi+eax*8-0x1283a22b],cl
  40ea2f:	mov    cs,WORD PTR [edx-0x2925cbe8]
  40ea35:	int    0x47
  40ea37:	mov    DWORD PTR [edi+eiz*2+0x1d00ebe1],ebx
  40ea3e:	and    al,0xf8
  40ea40:	je     0x40ea0a
  40ea42:	inc    esp
  40ea43:	xor    al,0x25
  40ea45:	xor    BYTE PTR ds:0xae5287fc,0xe2
  40ea4c:	xchg   esp,eax
  40ea4d:	lea    ebx,[ebx+0x543d650f]
  40ea53:	inc    esi
  40ea54:	sbb    eax,0xe088cc7b
  40ea59:	adc    bl,ah
  40ea5b:	and    eax,0xaa343448
  40ea60:	js     0x40ea9e
  40ea62:	(bad)  [edi]
  40ea64:	add    eax,0x2dda44c7
  40ea69:	sti    
  40ea6a:	jnp    0x40ea03
  40ea6c:	inc    eax
  40ea6d:	dec    ecx
  40ea6e:	repz adc eax,0x1d238160
  40ea74:	arpl   bx,ax
  40ea76:	lods   eax,DWORD PTR ds:[esi]
  40ea77:	pop    es
  40ea78:	or     eax,0xb3230842
  40ea7d:	(bad)  
  40ea7e:	pusha  
  40ea7f:	mov    ah,0x4c
  40ea81:	push   0x71
  40ea83:	jo     0x40eaf8
  40ea85:	add    al,BYTE PTR [edx]
  40ea87:	xchg   dh,al
  40ea89:	inc    eax
  40ea8a:	mov    dh,0x77
  40ea8c:	or     DWORD PTR [ecx+0x31a8cf6d],edi
  40ea92:	es bswap esi
  40ea95:	dec    edx
  40ea96:	xchg   BYTE PTR [ebx*1+0x44536947],al
  40ea9d:	inc    esp
  40ea9e:	xchg   esi,eax
  40ea9f:	sub    DWORD PTR [ecx],esi
  40eaa1:	jae    0x40ea5c
  40eaa3:	imul   esp,DWORD PTR [ebx-0x183bffd1],0x76735057
  40eaad:	aad    0xb7
  40eaaf:	jb     0x40ea47
  40eab1:	ret    0xdc21
  40eab4:	sbb    al,BYTE PTR [edx-0x5510621e]
  40eaba:	stos   DWORD PTR es:[edi],eax
  40eabb:	leave  
  40eabc:	add    eax,0xc4f0940f
  40eac1:	xchg   DWORD PTR [esi-0x52d639db],ebx
  40eac7:	jmp    0x40ea4b
  40eac9:	xchg   edx,eax
  40eaca:	add    BYTE PTR [ebp-0x7d],bl
  40eacd:	es stos DWORD PTR es:[edi],eax
  40eacf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ead0:	test   ah,0x97
  40ead3:	jmp    0x40eaa4
  40ead5:	retf   0xda8f
  40ead8:	call   0x90bd603d
  40eadd:	rol    cl,cl
  40eadf:	pusha  
  40eae0:	dec    esp
  40eae1:	cvtdq2ps xmm7,XMMWORD PTR [ebx-0x66]
  40eae5:	add    edi,DWORD PTR [eax]
  40eae7:	mov    eax,ds:0x109740ad
  40eaec:	xor    BYTE PTR [edi+0x1b],al
  40eaef:	dec    edx
  40eaf0:	xor    DWORD PTR [edi+0x10],edx
  40eaf3:	adc    BYTE PTR [ebp+0x27],0xcc
  40eaf7:	loopne 0x40ea8c
  40eaf9:	hlt    
  40eafa:	lahf   
  40eafb:	sbb    edi,DWORD PTR [ebp-0x4c]
  40eafe:	mov    BYTE PTR [ebx-0x173eb608],dh
  40eb04:	popa   
  40eb05:	sbb    BYTE PTR [edx+0x14],bl
  40eb08:	and    bh,bl
  40eb0a:	jge    0x40eae2
  40eb0c:	(bad)  
  40eb0e:	leave  
  40eb0f:	xchg   esp,eax
  40eb10:	jne    0x40eab7
  40eb12:	(bad)  
  40eb13:	int3   
  40eb14:	xlat   BYTE PTR ds:[ebx]
  40eb15:	pushf  
  40eb16:	xor    dh,al
  40eb18:	push   ss
  40eb19:	rcl    DWORD PTR [edx],0xc
  40eb1c:	sbb    bh,dl
  40eb1e:	mov    bh,0xe5
  40eb20:	push   edi
  40eb21:	inc    edi
  40eb22:	fild   WORD PTR [ebx]
  40eb24:	pop    es
  40eb25:	push   eax
  40eb26:	adc    ebx,DWORD PTR [edi]
  40eb28:	inc    eax
  40eb29:	(bad)  
  40eb2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb2c:	mov    eax,0xbe5a4e59
  40eb31:	xor    BYTE PTR [ebp+0x48d772ba],dh
  40eb37:	(bad)  
  40eb38:	cmp    eax,0x3d60d463
  40eb3d:	or     bl,0x8e
  40eb40:	ss xor al,0xa5
  40eb43:	mov    al,0x81
  40eb45:	add    DWORD PTR [ecx],eax
  40eb47:	jp     0x40eb44
  40eb49:	loopne 0x40eafe
  40eb4b:	ss xchg edi,eax
  40eb4d:	pop    ecx
  40eb4e:	xchg   esi,eax
  40eb4f:	xor    BYTE PTR [esi-0x5f],ah
  40eb52:	xor    DWORD PTR [edi+eax*2+0x56],0x8fed085b
  40eb5a:	daa    
  40eb5b:	sub    al,0xf4
  40eb5d:	sbb    DWORD PTR [eax+0x4f],esp
  40eb60:	sbb    eax,DWORD PTR [edx+esi*2+0x4fd7b47b]
  40eb67:	aaa    
  40eb68:	std    
  40eb69:	scas   al,BYTE PTR es:[edi]
  40eb6a:	les    edi,FWORD PTR [ebp+ecx*4+0xd51093e]
  40eb71:	or     eax,0x8a2267b3
  40eb76:	cmp    al,al
  40eb78:	rol    DWORD PTR [eax+0x77],0x8c
  40eb7c:	out    0xf3,al
  40eb7e:	sbb    al,0x26
  40eb80:	sahf   
  40eb81:	test   BYTE PTR [ebp+0x1904177a],ch
  40eb87:	stos   DWORD PTR es:[edi],eax
  40eb88:	scas   eax,DWORD PTR es:[edi]
  40eb89:	mov    ds:0xe0fd8488,eax
  40eb8e:	push   esi
  40eb8f:	jnp    0x40ebb9
  40eb91:	and    al,0x28
  40eb93:	rcl    DWORD PTR [ecx-0x630af71f],cl
  40eb99:	mov    BYTE PTR [ecx+eax*1+0x5],bh
  40eb9d:	imul   eax,DWORD PTR [eax],0xffffff9f
  40eba0:	add    ch,BYTE PTR [ecx+0x325df725]
  40eba6:	push   eax
  40eba7:	push   es
  40eba8:	dec    ecx
  40eba9:	adc    eax,0x88070bb
  40ebae:	jnp    0x40eb50
  40ebb0:	lahf   
  40ebb1:	addr16 jg 0x40eb42
  40ebb4:	adc    bh,ah
  40ebb6:	in     al,0xfc
  40ebb8:	aaa    
  40ebb9:	out    dx,eax
  40ebba:	aas    
  40ebbb:	xchg   ebp,eax
  40ebbc:	sti    
  40ebbd:	jmp    0xd8be:0x8e2c
  40ebc3:	push   ds
  40ebc4:	lods   al,BYTE PTR ds:[esi]
  40ebc5:	loop   0x40eb62
  40ebc7:	aas    
  40ebc8:	inc    ebx
  40ebc9:	inc    edx
  40ebca:	dec    eax
  40ebcb:	add    DWORD PTR [edi+0x1999f652],0x61
  40ebd2:	push   cs
  40ebd3:	push   ebx
  40ebd4:	aam    0xa2
  40ebd6:	mov    ebp,0x7fc76971
  40ebdb:	sbb    BYTE PTR [ebx],ah
  40ebdd:	push   0xbce6b08
  40ebe2:	test   BYTE PTR [ecx+0x7168c3aa],ah
  40ebe8:	(bad)  
  40ebe9:	aaa    
  40ebea:	mov    eax,ds:0xc10fae96
  40ebef:	mov    bl,0xf
  40ebf1:	ret    0xf1f0
  40ebf4:	mov    eax,0xc64af68b
  40ebf9:	in     eax,0xa9
  40ebfb:	outs   dx,BYTE PTR gs:[esi]
  40ebfd:	cdq    
  40ebfe:	out    dx,eax
  40ebff:	cmc    
  40ec00:	les    ecx,FWORD PTR [edi-0x7a43e3f5]
  40ec06:	jae    0x40ec75
  40ec08:	mov    ebp,esp
  40ec0a:	popa   
  40ec0b:	call   0xb36:0x1166c208
  40ec12:	add    BYTE PTR [ebx-0x71],ch
  40ec15:	xchg   BYTE PTR [ecx-0x2c68400a],dl
  40ec1b:	jecxz  0x40ec94
  40ec1d:	outs   dx,BYTE PTR ds:[esi]
  40ec1e:	leave  
  40ec1f:	sbb    dl,dh
  40ec21:	lds    eax,FWORD PTR [ebx-0x1102c9f4]
  40ec27:	jle    0x40ec64
  40ec29:	push   esp
  40ec2a:	ins    DWORD PTR es:[edi],dx
  40ec2b:	fidivr WORD PTR [ebx-0x7e]
  40ec2e:	inc    esi
  40ec2f:	rcl    BYTE PTR [edi],1
  40ec31:	aaa    
  40ec32:	and    edx,DWORD PTR [eax+0x57]
  40ec35:	xor    cl,ch
  40ec37:	push   ds
  40ec38:	rcr    DWORD PTR [eax-0x5b],1
  40ec3b:	xchg   ebp,eax
  40ec3c:	or     dl,BYTE PTR [ebp-0x58]
  40ec3f:	das    
  40ec40:	inc    esp
  40ec41:	and    al,0x27
  40ec43:	gs cmp al,0x84
  40ec46:	mov    esp,0x4923d272
  40ec4b:	mov    bl,0xd1
  40ec4d:	adc    bl,dh
  40ec4f:	xchg   esi,eax
  40ec50:	je     0x40ec7a
  40ec52:	std    
  40ec53:	pop    ds
  40ec54:	xchg   edi,eax
  40ec55:	xchg   esi,eax
  40ec56:	lahf   
  40ec57:	sub    dh,BYTE PTR [edx-0x6a13844f]
  40ec5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec5e:	push   edi
  40ec5f:	fwait
  40ec60:	xlat   BYTE PTR ds:[ebx]
  40ec61:	addr16 or eax,0x5953345e
  40ec67:	mov    ecx,eax
  40ec69:	mov    esi,esi
  40ec6b:	psrad  mm0,mm0
  40ec6e:	xchg   DWORD PTR [ebp+0x77c2d2e0],ebp
  40ec74:	call   0xf395:0xb6ba81ae
  40ec7b:	das    
  40ec7c:	cmp    cl,bl
  40ec7e:	and    DWORD PTR [edx+eiz*8-0x207a1a84],ebx
  40ec85:	mov    ebx,0x2a108c48
  40ec8a:	push   cs
  40ec8b:	jne    0x40ec25
  40ec8d:	mov    al,0x4f
  40ec8f:	stc    
  40ec90:	mov    DWORD PTR [esi+eax*4],ebx
  40ec93:	xchg   BYTE PTR [ebp-0x59a2710c],dh
  40ec99:	dec    ebp
  40ec9a:	outs   dx,DWORD PTR ds:[esi]
  40ec9b:	sbb    ah,BYTE PTR [ebx]
  40ec9d:	fstp   TBYTE PTR [ecx-0x8]
  40eca0:	mov    ecx,0xabeeeede
  40eca5:	retf   
  40eca6:	mov    ebx,0x27e26c94
  40ecab:	xor    al,dl
  40ecad:	ss shl ecx,0x99
  40ecb1:	mov    ch,0x67
  40ecb3:	rcr    DWORD PTR [ecx+edi*4-0x3a],1
  40ecb7:	cdq    
  40ecb8:	iret   
  40ecb9:	clc    
  40ecba:	scas   eax,DWORD PTR es:[edi]
  40ecbb:	stc    
  40ecbc:	or     BYTE PTR [esi+0x7e],0x2c
  40ecc0:	test   BYTE PTR [eax],ah
  40ecc2:	dec    edx
  40ecc3:	mov    al,0xd4
  40ecc5:	outs   dx,DWORD PTR ds:[esi]
  40ecc6:	xchg   edi,eax
  40ecc7:	fadd   st(1),st
  40ecc9:	ins    DWORD PTR es:[edi],dx
  40ecca:	jb     0x40ecb8
  40eccc:	and    eax,0x5662e308
  40ecd1:	xor    eax,DWORD PTR [edi+0x5a]
  40ecd4:	xchg   esp,eax
  40ecd5:	scas   al,BYTE PTR es:[edi]
  40ecd6:	aad    0x7e
  40ecd8:	neg    DWORD PTR [edi]
  40ecda:	sub    BYTE PTR es:0xf960776c,cl
  40ece1:	(bad)  
  40ece2:	lods   eax,DWORD PTR ds:[esi]
  40ece3:	cmp    eax,0xbbcdf349
  40ece8:	mov    ecx,DWORD PTR [edx]
  40ecea:	xor    ebx,esp
  40ecec:	adc    ah,al
  40ecee:	jno    0x40eca5
  40ecf0:	sbb    esi,ebp
  40ecf2:	dec    eax
  40ecf3:	fcomp  DWORD PTR [ebp+0x25]
  40ecf6:	xchg   ebx,ecx
  40ecf8:	les    ecx,FWORD PTR [ebx]
  40ecfa:	neg    esi
  40ecfc:	imul   eax,DWORD PTR [edi+0x260ab1ef],0x9b1d9e2c
  40ed06:	jge    0x40ecfb
  40ed08:	cmp    DWORD PTR [edx],edi
  40ed0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed0b:	or     BYTE PTR [edi],bl
  40ed0d:	data16 lahf 
  40ed0f:	push   ebx
  40ed10:	xchg   ecx,eax
  40ed11:	test   DWORD PTR [eax+esi*8+0x77],eax
  40ed15:	lock das 
  40ed17:	jno    0x40ecd0
  40ed19:	sar    DWORD PTR [esi-0x3628f00b],cl
  40ed1f:	fimul  DWORD PTR [eax-0x7419d5eb]
  40ed25:	xchg   ebx,eax
  40ed26:	rcr    BYTE PTR [edi],0xa6
  40ed29:	cmc    
  40ed2a:	xchg   edx,esp
  40ed2c:	inc    ebx
  40ed2d:	dec    ebp
  40ed2e:	mov    bl,0xd0
  40ed30:	mov    WORD PTR [esi],?
  40ed32:	enter  0x289d,0x3d
  40ed36:	cmp    eax,0x851cd3a2
  40ed3b:	mov    ecx,0xe54e767a
  40ed40:	mov    edx,0x803e5370
  40ed45:	cmp    eax,0xd47b6e84
  40ed4a:	cmp    cl,ah
  40ed4c:	mov    eax,ds:0x5f81c7a0
  40ed51:	(bad)  
  40ed52:	aad    0x98
  40ed54:	sub    DWORD PTR [edx-0x6290bc33],edi
  40ed5a:	inc    esi
  40ed5b:	int    0x2d
  40ed5d:	pop    eax
  40ed5e:	lock sbb DWORD PTR [ecx-0x11f8c43],esi
  40ed65:	mov    ds:0xae60422,al
  40ed6a:	lods   eax,DWORD PTR ds:[esi]
  40ed6b:	pop    esp
  40ed6c:	leave  
  40ed6d:	and    BYTE PTR [ebx],0xe4
  40ed70:	jmp    0x40ed4b
  40ed72:	sar    esp,1
  40ed74:	sahf   
  40ed75:	test   DWORD PTR [ecx],edi
  40ed77:	and    ebp,DWORD PTR [ebx+esi*1-0xaf66868]
  40ed7e:	in     eax,0xd8
  40ed80:	push   esp
  40ed81:	mov    eax,0x626f83cc
  40ed86:	retf   
  40ed87:	or     DWORD PTR [ecx+0x17],eax
  40ed8a:	dec    esi
  40ed8b:	jb     0x40ed58
  40ed8d:	xchg   ebx,eax
  40ed8e:	ins    BYTE PTR es:[edi],dx
  40ed8f:	sub    esp,edi
  40ed91:	sbb    eax,0x638c092f
  40ed96:	fist   DWORD PTR [esi+0x12]
  40ed99:	or     al,0x80
  40ed9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed9c:	hlt    
  40ed9d:	clc    
  40ed9e:	mov    ecx,0xe4b7cf2b
  40eda3:	cmp    BYTE PTR [edx-0x29],dh
  40eda6:	fstp   DWORD PTR [esi]
  40eda8:	arpl   cx,ax
  40edaa:	mov    al,ds:0x8c40f2db
  40edaf:	push   edx
  40edb0:	adc    edx,ecx
  40edb2:	add    ch,BYTE PTR [eax-0x30]
  40edb5:	cli    
  40edb6:	and    BYTE PTR [edx],ch
  40edb8:	and    al,BYTE PTR [edx]
  40edba:	loop   0x40edaa
  40edbc:	dec    ebp
  40edbd:	cld    
  40edbe:	std    
  40edbf:	xor    ecx,eax
  40edc1:	daa    
  40edc2:	mov    ds:0x68236cd4,al
  40edc7:	inc    ebx
  40edc8:	out    0x33,al
  40edca:	test   al,0xfd
  40edcc:	mov    al,0xf6
  40edce:	ficom  WORD PTR [eax+0x7d4cf406]
  40edd4:	dec    ebp
  40edd5:	push   0x2c
  40edd7:	sub    BYTE PTR [edx],0x36
  40edda:	jo     0x40ed98
  40eddc:	jl     0x40ee10
  40edde:	xchg   edx,eax
  40eddf:	fisubr WORD PTR ds:0x9461a756
  40ede5:	loope  0x40ee56
  40ede7:	shr    DWORD PTR [edx-0x39],cl
  40edea:	pop    edx
  40edeb:	or     ecx,DWORD PTR [edx]
  40eded:	mov    ebp,0x4c12f33b
  40edf2:	mov    eax,0xd2831d3a
  40edf7:	sbb    DWORD PTR [ecx-0x51e022d6],eax
  40edfd:	mov    ch,al
  40edff:	sbb    ebx,DWORD PTR [ebp+0x6d]
  40ee02:	and    cl,ah
  40ee04:	and    BYTE PTR [edi+0x4],bl
  40ee07:	std    
  40ee08:	in     eax,dx
  40ee09:	mov    dh,0xc5
  40ee0b:	stos   DWORD PTR es:[edi],eax
  40ee0c:	adc    al,0xea
  40ee0e:	outs   dx,BYTE PTR ds:[esi]
  40ee0f:	jle    0x40edaa
  40ee11:	xchg   ecx,eax
  40ee12:	push   ss
  40ee13:	fisttp DWORD PTR [ebx+0x78]
  40ee16:	jne    0x40ee15
  40ee18:	out    0x7f,al
  40ee1a:	addr16 pop ss
  40ee1c:	sbb    eax,0x61352727
  40ee21:	sbb    cl,BYTE PTR [ebx+0x29]
  40ee24:	push   ebx
  40ee26:	hlt    
  40ee27:	mov    ebp,0xe5cb0d0f
  40ee2c:	push   eax
  40ee2d:	jb     0x40ee84
  40ee2f:	test   BYTE PTR [ebx],dl
  40ee31:	cmp    al,0xef
  40ee33:	test   eax,0x6ec8907c
  40ee38:	mov    ds:0x6f6ce9f1,al
  40ee3d:	(bad)  
  40ee3e:	aad    0xe7
  40ee40:	aas    
  40ee41:	lods   eax,DWORD PTR ds:[esi]
  40ee42:	inc    ebx
  40ee43:	mov    al,0xc4
  40ee45:	mov    ebp,0x62f4cba2
  40ee4a:	xchg   ebx,eax
  40ee4b:	mov    ds:0x1105597b,al
  40ee50:	ret    
  40ee51:	xchg   ebx,eax
  40ee52:	xchg   esp,eax
  40ee53:	xchg   ecx,eax
  40ee54:	mov    esp,0x7d9bcc57
  40ee59:	popa   
  40ee5a:	push   cs
  40ee5b:	xchg   cl,cl
  40ee5d:	out    dx,eax
  40ee5e:	call   DWORD PTR [edx]
  40ee60:	fsub   st(7),st
  40ee62:	adc    al,0x26
  40ee64:	repz in eax,0x12
  40ee67:	pop    eax
  40ee68:	je     0x40ee60
  40ee6a:	inc    eax
  40ee6b:	cmc    
  40ee6c:	mul    DWORD PTR [edx]
  40ee6e:	scas   al,BYTE PTR es:[edi]
  40ee6f:	sbb    esi,DWORD PTR [ebx]
  40ee71:	loop   0x40ee1c
  40ee73:	jo     0x40ee4d
  40ee75:	mov    ds,ecx
  40ee77:	stc    
  40ee78:	push   ds
  40ee79:	inc    ebx
  40ee7a:	sbb    eax,0xe57fb1d3
  40ee7f:	sub    BYTE PTR [ecx],ah
  40ee81:	jmp    FWORD PTR [ebx-0x78e0e475]
  40ee87:	pop    ecx
  40ee88:	jno    0x40eee5
  40ee8a:	repnz inc edx
  40ee8c:	test   DWORD PTR [ecx-0x24],esi
  40ee8f:	mov    ebx,0x3b03ad59
  40ee94:	pop    ebx
  40ee95:	stos   DWORD PTR es:[edi],eax
  40ee96:	push   esi
  40ee97:	push   ds
  40ee98:	aas    
  40ee99:	push   0xe05e1a79
  40ee9e:	dec    ecx
  40ee9f:	pop    ss
  40eea0:	jno    0x40ee6e
  40eea2:	cmp    al,0xc4
  40eea4:	mov    BYTE PTR ds:0x4fc4e868,al
  40eeaa:	out    dx,al
  40eeab:	call   0xc5816a37
  40eeb0:	mov    dh,0xa1
  40eeb2:	xchg   BYTE PTR [eax-0xe],cl
  40eeb5:	xlat   BYTE PTR ds:[ebx]
  40eeb6:	outs   dx,BYTE PTR ds:[esi]
  40eeb7:	(bad)  
  40eeb8:	mov    ch,0xb4
  40eeba:	hlt    
  40eebb:	inc    ebp
  40eebc:	add    DWORD PTR [eax+0x29],ebp
  40eebf:	loope  0x40eee6
  40eec1:	pushf  
  40eec2:	jecxz  0x40eec8
  40eec4:	aam    0x51
  40eec6:	gs inc eax
  40eec8:	test   DWORD PTR [esi+0x37e5bfda],ebp
  40eece:	jns    0x40ef43
  40eed0:	sbb    DWORD PTR [eax-0x41375bd8],edx
  40eed6:	mov    ch,0x73
  40eed8:	je     0x40ef19
  40eeda:	jne    0x40eeb1
  40eedc:	shr    dl,cl
  40eede:	ins    BYTE PTR es:[edi],dx
  40eedf:	cld    
  40eee0:	cmp    al,0xb9
  40eee2:	cmp    al,0x76
  40eee4:	std    
  40eee5:	inc    esi
  40eee6:	add    eax,0x8e5f5cb0
  40eeeb:	fwait
  40eeec:	mov    dh,0x43
  40eeee:	add    al,0x71
  40eef0:	inc    eax
  40eef1:	in     eax,0x6
  40eef3:	icebp  
  40eef4:	xchg   esi,eax
  40eef5:	mov    dl,0xd9
  40eef7:	cmp    bl,BYTE PTR [edi+ebx*2]
  40eefa:	xor    ebx,esi
  40eefc:	mov    ebx,DWORD PTR [edi-0x2a]
  40eeff:	data16 fist WORD PTR [eax-0x2b]
  40ef03:	test   al,0x92
  40ef05:	std    
  40ef06:	inc    eax
  40ef07:	sub    ch,BYTE PTR [edi]
  40ef09:	push   eax
  40ef0a:	lock mov edx,0xf104b3fa
  40ef10:	mov    WORD PTR ds:0x7620d348,fs
  40ef16:	jo     0x40ef0b
  40ef18:	jae    0x40eed5
  40ef1a:	cmp    ah,BYTE PTR [esi+0x6cb940a]
  40ef20:	pop    es
  40ef21:	cmp    edi,ebp
  40ef23:	data16 jns 0x40eeb5
  40ef26:	mov    eax,0x224e5b3a
  40ef2b:	adc    al,0x41
  40ef2d:	and    eax,0xa547a00c
  40ef32:	pop    edx
  40ef33:	cmp    ebp,edi
  40ef35:	mov    eax,ds:0x27c72ef9
  40ef3a:	data16 xchg ah,dh
  40ef3d:	sti    
  40ef3e:	adc    BYTE PTR [edx],0x39
  40ef41:	mov    esp,0x2105981b
  40ef46:	mov    bl,0xa5
  40ef48:	xor    BYTE PTR [edi+0x5dfaa6bb],ch
  40ef4e:	sub    ebx,DWORD PTR [ecx+ebp*8-0x69174a98]
  40ef55:	gs push edx
  40ef57:	jnp    0x40efbe
  40ef59:	jns    0x40ef70
  40ef5b:	adc    BYTE PTR [ebp+0x14f94d17],0x2f
  40ef62:	inc    ebx
  40ef63:	xor    eax,0x4cb43857
  40ef68:	inc    edi
  40ef69:	sbb    edi,DWORD PTR [ebp+eax*8+0x27]
  40ef6d:	push   es
  40ef6e:	outs   dx,BYTE PTR ds:[esi]
  40ef6f:	pushf  
  40ef70:	lods   al,BYTE PTR ds:[esi]
  40ef71:	(bad)  
  40ef72:	cld    
  40ef73:	and    al,0x8c
  40ef75:	sbb    ax,WORD PTR [esp+edi*8+0x5c2e90bc]
  40ef7d:	push   ebx
  40ef7e:	inc    ebx
  40ef7f:	jmp    0x40effd
  40ef81:	xchg   esi,eax
  40ef82:	daa    
  40ef83:	pop    esi
  40ef84:	test   eax,0x1b180339
  40ef89:	pusha  
  40ef8a:	loopne 0x40efd3
  40ef8c:	fwait
  40ef8d:	in     al,dx
  40ef8e:	pop    edi
  40ef8f:	or     DWORD PTR [esi+0xc6e7430],edx
  40ef95:	xor    eax,0x9a5d2b0d
  40ef9a:	or     eax,0x12888
  40ef9f:	repnz lea eax,[ecx+0x5ee07f41]
  40efa6:	xor    al,0xe1
  40efa8:	in     eax,dx
  40efa9:	mov    al,ds:0x9e2ca9ca
  40efae:	push   edi
  40efaf:	mov    ebp,ebp
  40efb1:	jns    0x40ef62
  40efb3:	and    ch,BYTE PTR [edi-0x3e34d0fa]
  40efb9:	gs mov ebx,0xb6f73f14
  40efbf:	adc    al,0xe8
  40efc1:	and    DWORD PTR [edx-0x32],esp
  40efc4:	lods   al,BYTE PTR ds:[esi]
  40efc5:	stc    
  40efc6:	xchg   ecx,eax
  40efc7:	mov    bl,bl
  40efc9:	lods   al,BYTE PTR ds:[esi]
  40efca:	add    ch,BYTE PTR [edx-0x71]
  40efcd:	sub    al,cl
  40efcf:	xor    BYTE PTR [edi],dl
  40efd1:	or     al,0xfe
  40efd3:	push   ds
  40efd4:	stos   BYTE PTR es:[edi],al
  40efd5:	daa    
  40efd6:	mov    ebx,0xabca8a31
  40efdb:	mov    eax,ds:0x1e89b847
  40efe0:	or     DWORD PTR gs:[ecx],0xb763feae
  40efe7:	scas   al,BYTE PTR es:[edi]
  40efe8:	xchg   ecx,eax
  40efe9:	std    
  40efea:	cmp    BYTE PTR [eax-0x9],dh
  40efed:	sbb    eax,0xe969ed5e
  40eff2:	push   cs
  40eff3:	xor    al,0x4
  40eff5:	mov    bl,0x15
  40eff7:	jmp    0x437f:0x7bbcd73a
  40effe:	xchg   BYTE PTR [ebx+ecx*4+0xf],dl
  40f002:	sbb    DWORD PTR [esi],eax
  40f004:	pop    ecx
  40f005:	fisubr DWORD PTR [edx]
  40f007:	or     BYTE PTR [ecx-0x6a99f825],bh
  40f00d:	fisub  DWORD PTR [edi+0x1d]
  40f010:	fstp   DWORD PTR [ebx]
  40f012:	jo     0x40f061
  40f014:	mul    DWORD PTR [ebx-0xa16d9cc]
  40f01a:	adc    eax,0xa042fec
  40f01f:	test   eax,0x5a93951e
  40f024:	fs inc esp
  40f026:	push   ecx
  40f027:	test   al,0x63
  40f029:	das    
  40f02a:	adc    eax,0x37b39069
  40f02f:	push   ebx
  40f030:	fs in  eax,dx
  40f032:	and    bl,BYTE PTR [eax-0x3a914f86]
  40f038:	call   DWORD PTR [ebx]
  40f03a:	mov    WORD PTR [ecx-0x3d882bea],ds
  40f040:	mov    DWORD PTR [edx],esp
  40f042:	cmp    al,BYTE PTR [ecx+0x2c]
  40f045:	add    ebp,DWORD PTR gs:[eax+0x8]
  40f049:	and    eax,DWORD PTR [edi+0xe4ccdf5]
  40f04f:	jbe    0x40f019
  40f051:	sub    BYTE PTR ds:0x704d90e7,0xe9
  40f058:	iret   
  40f059:	mov    edi,0x633f548d
  40f05f:	pop    eax
  40f060:	push   ebp
  40f061:	jb     0x40f089
  40f063:	scas   eax,DWORD PTR es:[edi]
  40f064:	or     cl,BYTE PTR [ebp-0xb]
  40f067:	jb     0x40f089
  40f069:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f06a:	popa   
  40f06b:	inc    edi
  40f06c:	dec    ecx
  40f06e:	xor    edi,edi
  40f070:	inc    edx
  40f071:	pop    ds
  40f072:	cmp    eax,0x33ece1dd
  40f077:	pop    ds
  40f078:	les    edi,FWORD PTR [eax+0x6c2f4b10]
  40f07e:	xchg   edi,eax
  40f07f:	not    BYTE PTR [ecx+0x4d38ec4b]
  40f085:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f086:	jns    0x40f076
  40f088:	sbb    bl,al
  40f08a:	sti    
  40f08b:	pusha  
  40f08c:	mov    ds:0x687996d8,eax
  40f091:	push   ebp
  40f092:	and    al,0xa5
  40f094:	xor    al,0x3b
  40f096:	adc    BYTE PTR [ebx+0x60],0xcd
  40f09a:	jne    0x40f0c6
  40f09c:	adc    DWORD PTR [edi-0x6154c3da],ecx
  40f0a2:	rol    DWORD PTR [edi-0x3a],0x9
  40f0a6:	jl     0x40f0e9
  40f0a8:	test   BYTE PTR [esi+0x664dddf],0xa5
  40f0af:	and    eax,0xbafb563b
  40f0b4:	add    DWORD PTR [ebp+0x14a92914],ebx
  40f0ba:	sbb    BYTE PTR [eax+edx*8],bl
  40f0bd:	hlt    
  40f0be:	jl     0x40f07a
  40f0c0:	xchg   ch,bh
  40f0c2:	out    0xf4,al
  40f0c4:	dec    edx
  40f0c5:	ret    0xccc0
  40f0c8:	sub    ebx,DWORD PTR [esi+0x78]
  40f0cb:	pop    esi
  40f0cc:	sub    al,dh
  40f0ce:	js     0x40f070
  40f0d0:	(bad)  
  40f0d1:	icebp  
  40f0d2:	lock mov bl,BYTE PTR [esi]
  40f0d5:	mov    esp,0x5754cecd
  40f0da:	xchg   edx,eax
  40f0db:	mov    ch,0x1f
  40f0dd:	sbb    edx,eax
  40f0df:	in     eax,dx
  40f0e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0e1:	jecxz  0x40f070
  40f0e3:	mov    bl,0xa9
  40f0e5:	int3   
  40f0e6:	mov    ecx,0x62a05bcf
  40f0eb:	int3   
  40f0ec:	dec    ecx
  40f0ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0ee:	outs   dx,BYTE PTR ds:[esi]
  40f0ef:	or     ecx,DWORD PTR [ebx]
  40f0f1:	dec    edi
  40f0f2:	and    BYTE PTR [ebp+0x2e],0x39
  40f0f6:	cmp    eax,0xeab9ce5f
  40f0fb:	pop    esp
  40f0fc:	or     esp,DWORD PTR [ebx-0x7a7d7c43]
  40f102:	mov    ds:0xe644f16f,al
  40f107:	dec    ecx
  40f108:	xor    edx,eax
  40f10a:	loop   0x40f18b
  40f10c:	xchg   edx,eax
  40f10d:	cmp    BYTE PTR [ebx+0x72c7a616],bl
  40f113:	mov    ecx,0xa53a6ba0
  40f118:	sbb    bl,BYTE PTR [ebx+ebx*8-0x61]
  40f11c:	push   ecx
  40f11d:	xor    DWORD PTR [eax],ecx
  40f11f:	jle    0x40f11b
  40f121:	pop    ebx
  40f122:	stos   DWORD PTR es:[edi],eax
  40f123:	jns    0x40f17a
  40f125:	add    al,0x0
  40f127:	rol    BYTE PTR [edi],1
  40f129:	int3   
  40f12a:	xchg   DWORD PTR [bp+si-0x6e],ebp
  40f12e:	mov    ecx,0x13a53b11
  40f133:	mov    esp,0x779e51fa
  40f138:	sti    
  40f139:	int3   
  40f13a:	xchg   BYTE PTR [ebp-0x591ebb0d],cl
  40f140:	mov    eax,0xe30ecf67
  40f145:	xchg   DWORD PTR [ebx],ecx
  40f147:	test   eax,0x5eddee2c
  40f14c:	mov    edx,0x670af68f
  40f151:	mov    ebx,0x63960594
  40f156:	pop    ss
  40f157:	adc    eax,0x17304d6
  40f15c:	fucomi st,st(2)
  40f15e:	dec    edi
  40f15f:	into   
  40f160:	ret    0x6251
  40f163:	adc    dl,BYTE PTR [ebp+0x1a]
  40f166:	push   esp
  40f167:	mov    ch,0x5c
  40f169:	out    0x1f,eax
  40f16b:	test   ebx,ebp
  40f16d:	hlt    
  40f16e:	jmp    0xdbb0a037
  40f173:	adc    ch,bh
  40f175:	push   ebx
  40f176:	dec    ebp
  40f177:	sahf   
  40f178:	add    al,0x6a
  40f17a:	add    edi,DWORD PTR [edi]
  40f17c:	xor    bh,BYTE PTR [eax-0x7e]
  40f17f:	mov    bl,BYTE PTR [ecx]
  40f181:	xchg   edx,eax
  40f182:	add    eax,0xd0e9ad9f
  40f187:	inc    ecx
  40f188:	icebp  
  40f189:	jne    0x40f112
  40f18b:	cmc    
  40f18c:	pop    edi
  40f18d:	dec    esp
  40f18e:	call   FWORD PTR [ebx]
  40f190:	sbb    al,0x14
  40f192:	cmp    bh,al
  40f194:	or     DWORD PTR [esi],0x80a02a66
  40f19a:	popf   
  40f19b:	jns    0x40f194
  40f19d:	inc    esp
  40f19e:	pop    eax
  40f19f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1a0:	or     DWORD PTR [ecx-0x226e4b9a],eax
  40f1a6:	arpl   WORD PTR [ecx-0xfdf1d4f],bx
  40f1ac:	test   al,0xc5
  40f1ae:	aaa    
  40f1af:	cmp    eax,0xe153bb3
  40f1b4:	mov    fs,WORD PTR [esi+edx*1]
  40f1b7:	nop
  40f1b8:	cmp    BYTE PTR [eax+0x5ae04c3c],0x56
  40f1bf:	xchg   ebp,eax
  40f1c0:	cmovge esi,DWORD PTR [ebx+0x26f5020a]
  40f1c7:	adc    ebx,ecx
  40f1c9:	dec    edx
  40f1ca:	lock iret 
  40f1cc:	jle    0x40f22b
  40f1ce:	dec    edx
  40f1cf:	test   DWORD PTR [edi],ecx
  40f1d1:	in     eax,0xc7
  40f1d3:	lds    eax,FWORD PTR [edx+0x7b]
  40f1d6:	enter  0x8e82,0xfd
  40f1da:	stos   BYTE PTR es:[edi],al
  40f1db:	test   eax,0x6c0f1969
  40f1e0:	int    0x59
  40f1e2:	jmp    0x30f0d180
  40f1e7:	or     BYTE PTR [ebx],0xb5
  40f1ea:	or     al,0xc9
  40f1ec:	loopne 0x40f1cb
  40f1ee:	mov    ah,0x21
  40f1f0:	shr    eax,cl
  40f1f2:	jmp    DWORD PTR [esi+0xb32c4af]
  40f1f8:	adc    eax,DWORD PTR [edx]
  40f1fa:	sbb    esi,ebp
  40f1fc:	scas   eax,DWORD PTR es:[edi]
  40f1fd:	pop    ebx
  40f1fe:	test   al,0x5
  40f200:	dec    esi
  40f201:	and    ah,bl
  40f203:	inc    eax
  40f204:	repz or eax,0x629f70d3
  40f20a:	add    eax,0x8314d17b
  40f20f:	hlt    
  40f210:	aad    0xee
  40f212:	outs   dx,DWORD PTR ds:[esi]
  40f213:	paddq  mm5,QWORD PTR [edi-0x7]
  40f217:	mov    ebx,0x9286db31
  40f21c:	sub    al,cl
  40f21e:	push   ds
  40f21f:	adc    dl,BYTE PTR [edi-0x30]
  40f222:	push   edx
  40f223:	sub    eax,0x60eb9149
  40f228:	mov    al,0x4f
  40f22a:	fisttp DWORD PTR ds:0xdf1ca073
  40f230:	and    DWORD PTR [ebp+0x28],ecx
  40f233:	pop    es
  40f234:	inc    ecx
  40f235:	sbb    BYTE PTR [eax-0x31d3b698],0x28
  40f23c:	stos   BYTE PTR es:[edi],al
  40f23d:	push   cs
  40f23e:	xchg   ecx,eax
  40f23f:	in     al,0xa
  40f241:	js     0x40f29a
  40f243:	adc    DWORD PTR ds:0x4285d7,0x7aae
  40f24d:	mov    edi,DWORD PTR [ebp+0x10]
  40f250:	add    ecx,esi
  40f252:	mov    DWORD PTR ds:0x4285ff,0x246a
  40f25c:	cmp    ecx,edi
  40f25e:	mov    DWORD PTR ds:0x428627,0x3e93
  40f268:	je     0x40f379
  40f26e:	xor    edi,edi
  40f270:	mov    ecx,DWORD PTR [ebp-0x4]
  40f273:	not    edi
  40f275:	mov    edi,DWORD PTR [ebp+0x10]
  40f278:	sub    DWORD PTR ds:0x42863f,0x4adb
  40f282:	xor    eax,eax
  40f284:	adc    DWORD PTR ds:0x42865f,0x6085
  40f28e:	xor    ecx,edx
  40f290:	xor    DWORD PTR ds:0x42860b,0x42862f
  40f29a:	add    ecx,esi
  40f29c:	xor    DWORD PTR ds:0x4285d7,0x24ca
  40f2a6:	add    edi,0xfabdbedd
  40f2ac:	not    DWORD PTR ds:0x428617
  40f2b2:	adc    eax,0xffffffff
  40f2b5:	xor    eax,0x0
  40f2b8:	and    DWORD PTR ds:0x428663,0x428617
  40f2c2:	mov    DWORD PTR [ebp-0xc],eax
  40f2c5:	or     DWORD PTR ds:0x42866f,0x42864f
  40f2cf:	push   ebx
  40f2d0:	add    DWORD PTR ds:0x428647,ecx
  40f2d6:	xor    ebx,ebx
  40f2d8:	xor    edi,0x8a29a137
  40f2de:	mov    eax,ecx
  40f2e0:	add    eax,0xfabdbedd
  40f2e5:	adc    ebx,0xffffffff
  40f2e8:	xor    eax,0x8a29a137
  40f2ed:	xor    ebx,0x0
  40f2f0:	cmp    eax,edi
  40f2f2:	jne    0x40f30b
  40f2f8:	cmp    ebx,DWORD PTR [ebp-0xc]
  40f2fb:	je     0x40f373
  40f301:	jmp    0x40f30b
  40f306:	mov    esi,0x3272ec
  40f30b:	mov    eax,DWORD PTR [ebp-0x4]
  40f30e:	mov    edi,DWORD PTR [ebp-0x8]
  40f311:	xor    edi,edx
  40f313:	add    edi,esi
  40f315:	mov    esi,DWORD PTR [ebp+0x8]
  40f318:	imul   edi,ecx
  40f31b:	mov    ebx,DWORD PTR [ebp+0xc]
  40f31e:	xor    eax,edx
  40f320:	add    eax,ecx
  40f322:	mov    al,BYTE PTR [ebx+eax*1+0x3272ec]
  40f329:	mov    BYTE PTR [edi+esi*1],al
  40f32c:	mov    eax,DWORD PTR [ebp-0x8]
  40f32f:	mov    esi,DWORD PTR [ebp+0x10]
  40f332:	xor    eax,edx
  40f334:	xor    ebx,ebx
  40f336:	add    esi,0xfabdbedd
  40f33c:	adc    ebx,0xffffffff
  40f33f:	lea    ecx,[ecx+eax*1+0x3272ec]
  40f346:	xor    edi,edi
  40f348:	xor    esi,0x8a29a137
  40f34e:	xor    ebx,0x0
  40f351:	mov    eax,ecx
  40f353:	add    eax,0xfabdbedd
  40f358:	adc    edi,0xffffffff
  40f35b:	xor    eax,0x8a29a137
  40f360:	xor    edi,0x0
  40f363:	cmp    eax,esi
  40f365:	jne    0x40f306
  40f36b:	cmp    edi,ebx
  40f36d:	jne    0x40f306
  40f373:	mov    eax,0xf89c85b1
  40f378:	pop    ebx
  40f379:	pop    edi
  40f37a:	pop    esi
  40f37b:	leave  
  40f37c:	ret    0xc
  40f37f:	push   ebp
  40f380:	mov    ebp,esp
  40f382:	push   ecx
  40f383:	xor    DWORD PTR ds:0x428677,0x1e97
  40f38d:	mov    DWORD PTR [ebp-0x4],0xf89c85bc
  40f394:	dec    edx
  40f395:	mov    eax,DWORD PTR [ebp-0x4]
  40f398:	or     DWORD PTR ds:0x42862f,0x2902
  40f3a2:	mov    edx,DWORD PTR [ebp+0x10]
  40f3a5:	mov    ecx,0x75108a4
  40f3aa:	adc    DWORD PTR ds:0x428677,0x428657
  40f3b4:	xor    eax,ecx
  40f3b6:	add    eax,0x3272ec
  40f3bb:	or     DWORD PTR ds:0x42866b,0x4f38
  40f3c5:	mov    DWORD PTR [edx],eax
  40f3c7:	and    DWORD PTR ds:0x428603,0x0
  40f3d1:	jmp    0x40f3e1
  40f3d6:	mov    eax,ds:0x428603
  40f3db:	inc    eax
  40f3dc:	mov    ds:0x428603,eax
  40f3e1:	cmp    DWORD PTR ds:0x428603,0x17
  40f3e8:	jae    0x40f42d
  40f3ee:	cmp    DWORD PTR ds:0x428603,0x5
  40f3f5:	jge    0x40f42d
  40f3fb:	jmp    0x40f410
  40f400:	push   0x8c16
  40f405:	push   0x428617
  40f40a:	call   DWORD PTR ds:0x4287b3
  40f410:	cmp    DWORD PTR ds:0x428603,0x4
  40f417:	jne    0x40f428
  40f41d:	mov    eax,ds:0x428603
  40f422:	inc    eax
  40f423:	mov    ds:0x428603,eax
  40f428:	jmp    0x40f3d6
  40f42d:	mov    eax,DWORD PTR [ebp+0xc]
  40f430:	xor    eax,ecx
  40f432:	push   esi
  40f433:	mov    esi,DWORD PTR [ebp+0x10]
  40f436:	mov    edx,0x3272ec
  40f43b:	add    eax,edx
  40f43d:	mov    DWORD PTR [esi+0x4],eax
  40f440:	mov    eax,DWORD PTR [ebp+0x14]
  40f443:	mov    esi,DWORD PTR [ebp+0x10]
  40f446:	mov    DWORD PTR [esi+0x8],eax
  40f449:	mov    eax,DWORD PTR [ebp+0x18]
  40f44c:	mov    esi,DWORD PTR [ebp+0x10]
  40f44f:	mov    DWORD PTR [esi+0xc],eax
  40f452:	mov    eax,DWORD PTR [ebp+0x1c]
  40f455:	mov    esi,DWORD PTR [ebp+0x10]
  40f458:	mov    DWORD PTR [esi+0x10],eax
  40f45b:	mov    eax,DWORD PTR [ebp+0x8]
  40f45e:	xor    eax,ecx
  40f460:	add    eax,edx
  40f462:	pop    esi
  40f463:	leave  
  40f464:	ret    0x18
  40f467:	push   ebp
  40f468:	mov    ebp,esp
  40f46a:	sub    esp,0x9c
  40f470:	dec    ecx
  40f471:	mov    ecx,DWORD PTR [ebp+0x8]
  40f474:	mov    eax,0x8a94
  40f479:	sbb    DWORD PTR ds:0x428677,0x4285eb
  40f483:	xor    ax,WORD PTR [ecx+0x20]
  40f487:	mov    ecx,DWORD PTR ds:0x42864b
  40f48d:	sub    ecx,DWORD PTR ds:0x428673
  40f493:	mov    DWORD PTR ds:0x42864b,ecx
  40f499:	mov    ecx,0x3b56
  40f49e:	add    ax,cx
  40f4a1:	movzx  eax,ax
  40f4a4:	and    DWORD PTR ds:0x42865f,0x0
  40f4ae:	jmp    0x40f4c0
  40f4b3:	mov    ecx,DWORD PTR ds:0x42865f
  40f4b9:	inc    ecx
  40f4ba:	mov    DWORD PTR ds:0x42865f,ecx
  40f4c0:	cmp    DWORD PTR ds:0x42865f,0x11
  40f4c7:	jae    0x40f4ea
  40f4cd:	cmp    DWORD PTR ds:0x42865f,0x17
  40f4d4:	jge    0x40f4ea
  40f4da:	jmp    0x40f4e5
  40f4df:	call   DWORD PTR ds:0x4287b7
  40f4e5:	jmp    0x40f4b3
  40f4ea:	mov    DWORD PTR [ebp-0x10],eax
  40f4ed:	mov    BYTE PTR [ebp-0x1],0x7d
  40f4f1:	and    DWORD PTR ds:0x42863b,0x0
  40f4fb:	jmp    0x40f50d
  40f500:	mov    ecx,DWORD PTR ds:0x42863b
  40f506:	inc    ecx
  40f507:	mov    DWORD PTR ds:0x42863b,ecx
  40f50d:	cmp    DWORD PTR ds:0x42863b,0x11
  40f514:	jae    0x40f53a
  40f51a:	cmp    DWORD PTR ds:0x42863b,0x14
  40f521:	jg     0x40f53a
  40f527:	jmp    0x40f535
  40f52c:	push   DWORD PTR [ebp-0x1c]
  40f52f:	call   DWORD PTR ds:0x4287bb
  40f535:	jmp    0x40f500
  40f53a:	lea    eax,[ebp-0x1]
  40f53d:	xor    DWORD PTR ds:0x4285d7,0x262c
  40f547:	mov    DWORD PTR [ebp-0xc],eax
  40f54a:	inc    ecx
  40f54b:	mov    al,BYTE PTR [ebp-0x1]
  40f54e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f551:	xor    al,0x79
  40f553:	sub    al,0x3
  40f555:	mov    BYTE PTR [ecx],al
  40f557:	mov    DWORD PTR [ebp-0x18],0xf89c85b0
  40f55e:	mov    eax,ds:0x428697
  40f563:	mov    ecx,DWORD PTR ds:0x4286db
  40f569:	sub    ecx,eax
  40f56b:	add    eax,DWORD PTR [eax+ecx*1]
  40f56e:	push   ebx
  40f56f:	and    DWORD PTR ds:0x428603,0x0
  40f579:	jmp    0x40f58c
  40f57e:	xor    eax,eax
  40f580:	add    eax,DWORD PTR ds:0x428603
  40f586:	inc    eax
  40f587:	mov    ds:0x428603,eax
  40f58c:	cmp    DWORD PTR ds:0x428603,0x10
  40f593:	jae    0x40f5e9
  40f599:	cmp    DWORD PTR ds:0x428603,0x7
  40f5a0:	jle    0x40f5e9
  40f5a6:	jmp    0x40f5c9
  40f5ab:	push   DWORD PTR [ebp-0x28]
  40f5ae:	push   0x428034
  40f5b3:	push   DWORD PTR [ebp-0x18]
  40f5b6:	push   0x428079
  40f5bb:	push   0x5a9e
  40f5c0:	push   DWORD PTR [ebp-0x14]
  40f5c3:	call   DWORD PTR ds:0x4287bf
  40f5c9:	cmp    DWORD PTR ds:0x428603,0x6
  40f5d0:	jne    0x40f5e4
  40f5d6:	xor    eax,eax
  40f5d8:	xor    eax,DWORD PTR ds:0x428603
  40f5de:	inc    eax
  40f5df:	mov    ds:0x428603,eax
  40f5e4:	jmp    0x40f57e
  40f5e9:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40f5f0:	sbb    DWORD PTR ds:0x42861b,ecx
  40f5f6:	mov    ecx,DWORD PTR [ebp-0x18]
  40f5f9:	push   esi
  40f5fa:	mov    eax,0x75108a4
  40f5ff:	xor    esi,esi
  40f601:	or     esi,DWORD PTR ds:0x42869f
  40f607:	mov    esi,DWORD PTR [esi]
  40f609:	or     DWORD PTR ds:0x428633,esi
  40f60f:	xor    ecx,eax
  40f611:	xor    DWORD PTR ds:0x428613,ebx
  40f617:	mov    esi,0x3272ec
  40f61c:	push   edi
  40f61d:	or     DWORD PTR ds:0x4285ef,0x42867b
  40f627:	add    ecx,esi
  40f629:	mov    DWORD PTR ds:0x42867b,0x3def
  40f633:	jmp    0x40f64d
  40f638:	mov    DWORD PTR ds:0x428633,0x70a7
  40f642:	mov    dl,BYTE PTR [ebp-0x1]
  40f645:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40f64c:	inc    ecx
  40f64d:	mov    DWORD PTR ds:0x4285ef,0x74bd
  40f657:	cmp    ecx,0x40
  40f65a:	mov    DWORD PTR ds:0x42865f,0x4046
  40f664:	jb     0x40f638
  40f66a:	adc    edx,0xe49
  40f670:	mov    edx,DWORD PTR [ebp-0x18]
  40f673:	xor    edx,eax
  40f675:	sub    DWORD PTR ds:0x4285d3,0x203c
  40f67f:	add    edx,esi
  40f681:	jmp    0x411adf
  40f686:	mov    edi,DWORD PTR [ebp+0x8]
  40f689:	jmp    0x411a2a
  40f68e:	sub    ah,al
  40f690:	xor    al,0xf6
  40f692:	test   al,0xa6
  40f694:	mov    al,ds:0x7e506298
  40f699:	mov    ecx,DWORD PTR [edx-0x53]
  40f69c:	sub    eax,0x7aa14294
  40f6a1:	jp     0x40f6a1
  40f6a3:	pop    edi
  40f6a4:	jp     0x40f720
  40f6a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6a7:	and    al,0x85
  40f6a9:	mov    ebp,0xffcfbb90
  40f6ae:	jmp    0x707a:0x1da1c607
  40f6b5:	dec    ebp
  40f6b6:	xchg   esp,eax
  40f6b7:	loop   0x40f672
  40f6b9:	mov    al,0x41
  40f6bb:	and    ebp,edi
  40f6bd:	daa    
  40f6be:	mov    ch,0x3d
  40f6c0:	mov    dh,BYTE PTR [edi+0x1a]
  40f6c3:	sar    BYTE PTR [edx+0x83eca01],1
  40f6c9:	fimul  WORD PTR [eax]
  40f6cb:	and    DWORD PTR [edi-0x504ba023],ebp
  40f6d1:	pushf  
  40f6d2:	adc    esp,DWORD PTR [edi]
  40f6d4:	(bad)  
  40f6d5:	(bad)  
  40f6d6:	jno    0x40f6b8
  40f6d8:	xor    ebp,edi
  40f6da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6db:	push   0xbcf1999c
  40f6e0:	int    0x22
  40f6e2:	inc    esi
  40f6e3:	aas    
  40f6e4:	daa    
  40f6e5:	xor    DWORD PTR [edx+esi*8+0x50],ebp
  40f6e9:	dec    edx
  40f6ea:	fmul   DWORD PTR [edi-0x74]
  40f6ed:	pushf  
  40f6ee:	sub    bh,dl
  40f6f0:	and    esi,ecx
  40f6f2:	aam    0x85
  40f6f4:	out    dx,eax
  40f6f5:	das    
  40f6f6:	(bad)  
  40f6f7:	mov    es,WORD PTR [ebp+0x5dccb3bf]
  40f6fd:	pop    es
  40f6fe:	popf   
  40f6ff:	add    eax,0xbd0bdc59
  40f704:	cmp    BYTE PTR [ebp-0x4de0eed4],bh
  40f70a:	int    0xd1
  40f70c:	pop    es
  40f70d:	pusha  
  40f70e:	inc    ebp
  40f70f:	shr    BYTE PTR [edi],1
  40f711:	xchg   ebx,eax
  40f712:	push   0xf69c34d1
  40f717:	or     edi,edx
  40f719:	fsub   DWORD PTR [ebp-0x56f874f1]
  40f71f:	dec    ecx
  40f720:	jb     0x40f750
  40f722:	icebp  
  40f723:	test   BYTE PTR [edi+0x1c],bh
  40f726:	push   cs
  40f727:	add    dh,ch
  40f729:	mov    dl,0xd4
  40f72b:	aaa    
  40f72c:	pop    edx
  40f72d:	xlat   BYTE PTR ds:[ebx]
  40f72e:	cmp    dh,bl
  40f730:	addr16 jmp 0x56d2172
  40f736:	push   ebp
  40f737:	ret    
  40f738:	in     eax,0xaa
  40f73a:	test   eax,0x21aef23
  40f73f:	mov    WORD PTR [edi-0x45],ds
  40f742:	sbb    eax,DWORD PTR [edi+0x3e6c1e3a]
  40f748:	cmp    DWORD PTR [ebx-0x4e64373c],edx
  40f74e:	out    0xe5,eax
  40f750:	pop    edi
  40f751:	imul   esi,ebx,0x7cde5e0d
  40f757:	inc    ebx
  40f758:	xlat   BYTE PTR ds:[ebx]
  40f759:	xchg   esp,eax
  40f75a:	pusha  
  40f75b:	mov    gs,eax
  40f75d:	push   esp
  40f75e:	pop    ebp
  40f75f:	in     eax,0x84
  40f761:	xor    eax,0xaf33da53
  40f766:	icebp  
  40f767:	sub    esp,eax
  40f769:	xlat   BYTE PTR ds:[ebx]
  40f76a:	jg     0x40f7c3
  40f76c:	push   esp
  40f76d:	lock pop eax
  40f76f:	xchg   esp,eax
  40f770:	loopne 0x40f730
  40f772:	or     ebx,DWORD PTR [eax]
  40f774:	enter  0x13c8,0x58
  40f778:	mov    ebx,0x70a69cd1
  40f77d:	js     0x40f743
  40f77f:	scas   al,BYTE PTR es:[edi]
  40f780:	push   esi
  40f781:	mov    esp,0xea80eda5
  40f786:	mov    al,0x5
  40f788:	xor    esi,DWORD PTR [edi+ebp*1-0x23ec58de]
  40f78f:	cmp    al,0xd3
  40f791:	nop
  40f792:	int3   
  40f793:	sub    dh,BYTE PTR [edi+0x28]
  40f796:	sub    bl,0xf0
  40f799:	cmp    cl,BYTE PTR [esi+ecx*2+0x33e0ea8d]
  40f7a0:	cwde   
  40f7a1:	fcom   DWORD PTR [eax+0x54]
  40f7a4:	push   eax
  40f7a5:	inc    ebx
  40f7a6:	jg     0x40f7a8
  40f7a8:	imul   esi,DWORD PTR [edx],0xc367ae4b
  40f7ae:	out    dx,al
  40f7af:	push   ebx
  40f7b0:	cmp    al,0xba
  40f7b2:	push   ecx
  40f7b3:	xchg   edi,eax
  40f7b4:	mov    ch,0xa3
  40f7b6:	in     al,dx
  40f7b7:	repnz pop edx
  40f7b9:	push   edi
  40f7ba:	fwait
  40f7bb:	les    esi,FWORD PTR [ecx]
  40f7bd:	les    eax,FWORD PTR [ecx+0x63]
  40f7c0:	mov    bh,0x24
  40f7c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7c3:	icebp  
  40f7c4:	lds    ecx,FWORD PTR [esi-0x2f]
  40f7c7:	sub    al,0xd2
  40f7c9:	in     al,0xa3
  40f7cb:	hlt    
  40f7cc:	mov    ch,0x40
  40f7ce:	sub    dl,BYTE PTR [edi]
  40f7d0:	imul   dh
  40f7d2:	gs mov bh,0xcc
  40f7d5:	pop    ebx
  40f7d6:	jle    0x40f79a
  40f7d8:	ror    dh,0xb9
  40f7db:	xor    BYTE PTR [eax],dh
  40f7dd:	dec    ebx
  40f7de:	mov    WORD PTR [eax+0x49f672fa],es
  40f7e4:	xchg   BYTE PTR [edi],dh
  40f7e6:	xor    dh,ch
  40f7e8:	(bad)  
  40f7e9:	xacquire xchg DWORD PTR [edi],ecx
  40f7ec:	add    ecx,ebp
  40f7ee:	pusha  
  40f7ef:	test   eax,0x12805dda
  40f7f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7f5:	inc    edx
  40f7f6:	push   ebp
  40f7f7:	or     DWORD PTR [ecx],0x37
  40f7fa:	mov    al,0xc8
  40f7fc:	es xchg ebp,eax
  40f7fe:	(bad)  
  40f7ff:	sub    al,0x90
  40f801:	adc    BYTE PTR [edx-0x69],dh
  40f804:	(bad)  
  40f805:	in     al,dx
  40f806:	dec    ecx
  40f807:	int3   
  40f808:	mov    ds:0xc703bbe2,al
  40f80d:	sub    ebx,ebp
  40f80f:	adc    al,0x1c
  40f811:	inc    ebp
  40f812:	inc    edx
  40f813:	dec    ecx
  40f814:	mov    dl,0x45
  40f816:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f817:	sub    eax,0xe9679e85
  40f81c:	jecxz  0x40f829
  40f81e:	gs mov bl,0xee
  40f821:	sub    bh,bl
  40f823:	std    
  40f824:	mov    BYTE PTR [ebx+0x3c],ah
  40f827:	imul   BYTE PTR [ecx-0x53]
  40f82a:	in     al,dx
  40f82b:	dec    ebx
  40f82c:	dec    eax
  40f82d:	mov    edx,DWORD PTR ds:0xc15e1fbc
  40f833:	and    al,0x17
  40f835:	cmp    dl,BYTE PTR [edi]
  40f837:	cmp    DWORD PTR [ebp+0x13],esi
  40f83a:	test   al,0x95
  40f83c:	jg     0x40f821
  40f83e:	(bad)  
  40f83f:	xchg   ebp,eax
  40f840:	mov    WORD PTR [esi-0x71],?
  40f843:	test   al,0xfc
  40f845:	(bad)  
  40f849:	outs   dx,BYTE PTR ds:[esi]
  40f84a:	jl     0x40f82f
  40f84c:	sbb    esp,DWORD PTR [ebp-0x3f]
  40f84f:	push   0xeeaeb160
  40f854:	pop    ss
  40f855:	ror    BYTE PTR [edx+ecx*2],1
  40f858:	fidiv  WORD PTR [ecx+0x4b]
  40f85b:	mov    dh,0xc
  40f85d:	or     esp,DWORD PTR [eax+ecx*4+0x32]
  40f861:	hlt    
  40f862:	ins    BYTE PTR es:[edi],dx
  40f863:	dec    eax
  40f864:	push   es
  40f865:	cmc    
  40f866:	outs   dx,DWORD PTR ds:[esi]
  40f867:	mov    ebx,0xd84db9aa
  40f86c:	pop    edx
  40f86d:	aaa    
  40f86e:	mov    al,ds:0x605c4f80
  40f873:	add    edx,DWORD PTR [edi]
  40f875:	jbe    0x40f866
  40f877:	bound  esp,QWORD PTR [esi]
  40f879:	and    ch,BYTE PTR [ebx+0x6bd0d1a2]
  40f87f:	repz xlat BYTE PTR ds:[ebx]
  40f881:	iret   
  40f882:	pop    edx
  40f883:	stc    
  40f884:	adc    al,0x6
  40f886:	ds dec esi
  40f888:	fs daa 
  40f88a:	dec    esp
  40f88b:	call   0x15ceb922
  40f890:	repz iret 
  40f892:	mov    bh,0x82
  40f894:	dec    eax
  40f895:	jmp    0x7b57:0x78071f41
  40f89c:	sbb    BYTE PTR [ebx],bh
  40f89e:	or     BYTE PTR [ebp-0x5e],dl
  40f8a1:	mov    bh,0x18
  40f8a3:	(bad)  
  40f8a4:	jmp    0x11557f6b
  40f8a9:	sbb    edi,esi
  40f8ab:	pop    es
  40f8ac:	ins    DWORD PTR es:[edi],dx
  40f8ad:	cmp    eax,0xcc8c271c
  40f8b2:	adc    esi,eax
  40f8b4:	test   BYTE PTR [eax],dl
  40f8b6:	retf   0x278a
  40f8b9:	pop    esp
  40f8ba:	dec    esp
  40f8bb:	add    esp,DWORD PTR [esi+0xdabdf13]
  40f8c1:	int    0xf7
  40f8c3:	push   edx
  40f8c4:	adc    ecx,DWORD PTR [ecx+0x61]
  40f8c7:	mov    edi,gs
  40f8c9:	sub    DWORD PTR [esi],edi
  40f8cb:	in     eax,dx
  40f8cc:	mov    esp,0xf28786fd
  40f8d1:	cld    
  40f8d2:	inc    ebx
  40f8d3:	retf   
  40f8d4:	mov    al,ds:0x4e1dbc12
  40f8d9:	inc    ecx
  40f8da:	(bad)
  40f8df:	jns    0x40f8aa
  40f8e1:	mov    ds:0x286d9c89,eax
  40f8e6:	(bad)  
  40f8e7:	je     0x40f8b6
  40f8e9:	or     ah,ch
  40f8eb:	out    0x79,eax
  40f8ed:	dec    ebp
  40f8ee:	prefetch BYTE PTR [eax+edi*1-0x79]
  40f8f3:	shl    BYTE PTR [edx],0xac
  40f8f6:	fld    QWORD PTR [ecx-0x6a87962f]
  40f8fc:	cmp    ebp,DWORD PTR [edi+0x35b2a980]
  40f902:	outs   dx,DWORD PTR ds:[esi]
  40f903:	fst    DWORD PTR [ecx+ecx*4-0x61]
  40f907:	into   
  40f908:	mov    edx,0xf13c6554
  40f90d:	xor    BYTE PTR [eax-0x72f6b229],dl
  40f913:	lds    esp,FWORD PTR [eax]
  40f915:	ins    BYTE PTR es:[edi],dx
  40f916:	cmp    esi,DWORD PTR [ebx]
  40f918:	loope  0x40f8e2
  40f91a:	test   DWORD PTR [ecx],ebx
  40f91c:	neg    BYTE PTR [edx]
  40f91e:	adc    ebx,edi
  40f920:	and    DWORD PTR [edx-0x46],ecx
  40f923:	and    al,al
  40f925:	mov    eax,ds:0x57844c3c
  40f92a:	xchg   dh,ah
  40f92c:	int3   
  40f92d:	das    
  40f92e:	clc    
  40f92f:	adc    al,0xdd
  40f931:	ins    DWORD PTR es:[edi],dx
  40f932:	enter  0x82a9,0xbe
  40f936:	add    BYTE PTR cs:[edx-0x76065234],ch
  40f93d:	aaa    
  40f93e:	and    BYTE PTR [edi-0x18325b83],bl
  40f944:	or     al,0xbf
  40f946:	xchg   ecx,eax
  40f947:	or     eax,DWORD PTR [esi]
  40f949:	add    al,0xe6
  40f94b:	dec    ebx
  40f94c:	xor    al,0x49
  40f94e:	mov    eax,ds:0x75091d46
  40f953:	adc    bh,bh
  40f955:	and    esi,DWORD PTR [ebx+eiz*8-0x26]
  40f959:	ins    BYTE PTR es:[edi],dx
  40f95a:	popf   
  40f95b:	xchg   esp,eax
  40f95c:	in     eax,0x20
  40f95e:	fwait
  40f95f:	mov    ebx,0xffa88611
  40f964:	jbe    0x40f925
  40f966:	pop    ds
  40f967:	push   0x5f
  40f969:	or     BYTE PTR [eax],bh
  40f96b:	push   ss
  40f96c:	fbld   TBYTE PTR [edi+esi*2]
  40f96f:	sbb    DWORD PTR [ecx+0x273dd3b4],ecx
  40f975:	mov    edi,0x53b70db1
  40f97a:	test   BYTE PTR [esi],cl
  40f97c:	xchg   BYTE PTR [esi+0x37],ah
  40f97f:	xchg   ebx,eax
  40f980:	pop    ds
  40f981:	mov    WORD PTR [ebp-0x52],gs
  40f984:	add    BYTE PTR [ebp-0xb],cl
  40f987:	ins    BYTE PTR es:[edi],dx
  40f988:	adc    ch,bh
  40f98a:	stc    
  40f98b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f98c:	jl     0x40f93d
  40f98e:	(bad)  
  40f98f:	adc    DWORD PTR [ecx+0x29],ebp
  40f992:	fnstcw WORD PTR ds:0x19ab80d5
  40f998:	rcl    DWORD PTR es:[ecx-0x2c],cl
  40f99c:	mov    ecx,DWORD PTR [ebx+0x54]
  40f99f:	test   BYTE PTR [esp+esi*1+0x48],bh
  40f9a3:	and    dl,BYTE PTR [eax-0x36]
  40f9a6:	pop    edx
  40f9a7:	pushf  
  40f9a8:	push   esp
  40f9a9:	or     eax,0x17276a4d
  40f9af:	sbb    eax,0xd2e852c1
  40f9b4:	add    bl,BYTE PTR ds:0x99dd8277
  40f9ba:	xchg   edx,eax
  40f9bb:	lock inc ecx
  40f9bd:	lock pop esi
  40f9bf:	mov    esp,0x21d9fd59
  40f9c4:	sbb    eax,0xc8bbc4ac
  40f9c9:	adc    bh,BYTE PTR ds:0x2a0bc1fb
  40f9cf:	xor    BYTE PTR [ecx],al
  40f9d1:	mov    ds:0x8771ad7b,al
  40f9d6:	sbb    al,0x7c
  40f9d8:	jge    0x40fa4c
  40f9da:	pop    esi
  40f9db:	xor    dh,0x1e
  40f9de:	jno    0x40f9e3
  40f9e0:	ins    DWORD PTR es:[edi],dx
  40f9e1:	xchg   ecx,eax
  40f9e2:	in     al,dx
  40f9e3:	pop    esp
  40f9e4:	inc    edx
  40f9e5:	pop    ebx
  40f9e6:	xor    cl,BYTE PTR [ebp+0x173728b1]
  40f9ec:	cmp    eax,0x234aee0d
  40f9f1:	ret    
  40f9f2:	xlat   BYTE PTR ds:[ebx]
  40f9f3:	pop    esi
  40f9f4:	jnp    0x40fa6d
  40f9f6:	xchg   edi,eax
  40f9f7:	imul   ebp,DWORD PTR [eax-0x43],0x43
  40f9fb:	sahf   
  40f9fc:	int3   
  40f9fd:	fnsave [ebx+0x42]
  40fa00:	and    dh,BYTE PTR [ecx]
  40fa02:	push   ecx
  40fa03:	cmp    BYTE PTR [edi],0xba
  40fa06:	imul   ebp,DWORD PTR [ecx-0x2],0xffffff9a
  40fa0a:	int3   
  40fa0b:	mov    bl,0x4c
  40fa0d:	pop    esp
  40fa0e:	pushf  
  40fa0f:	jmp    0x2a574ac8
  40fa14:	gs sti 
  40fa16:	cmp    DWORD PTR [ebp+0x1a7bfe19],ebx
  40fa1c:	cld    
  40fa1d:	outs   dx,DWORD PTR ds:[esi]
  40fa1e:	mov    dh,0x48
  40fa20:	adc    DWORD PTR ds:[ecx],ebx
  40fa23:	(bad)  
  40fa24:	and    ebx,DWORD PTR [ebp-0x15436179]
  40fa2a:	push   ebp
  40fa2b:	sti    
  40fa2c:	daa    
  40fa2d:	test   BYTE PTR [eax+0x69fd9525],bl
  40fa33:	xor    bl,BYTE PTR [edi+0x522ec69b]
  40fa39:	test   al,0x1a
  40fa3b:	jne    0x40fa45
  40fa3d:	or     dh,0x97
  40fa40:	dec    edi
  40fa41:	stos   DWORD PTR es:[edi],eax
  40fa42:	loopne 0x40fa2b
  40fa44:	jl     0x40fa31
  40fa46:	dec    DWORD PTR [ebx+0x5a4cdba]
  40fa4c:	(bad)  
  40fa4d:	pop    ds
  40fa4e:	fcom   QWORD PTR [edi]
  40fa50:	mov    bh,0xc4
  40fa52:	fld    DWORD PTR [eax+0x8]
  40fa55:	push   es
  40fa56:	pop    edx
  40fa57:	add    dh,BYTE PTR [esi-0x50]
  40fa5a:	call   0x84becfae
  40fa5f:	int    0xf0
  40fa61:	test   ebx,esp
  40fa63:	ja     0x40faca
  40fa65:	jmp    0x7125:0xca28f7d1
  40fa6c:	aam    0x89
  40fa6e:	jle    0x40fa01
  40fa70:	test   cl,bl
  40fa72:	cmp    DWORD PTR [edi],edi
  40fa74:	test   DWORD PTR [edx],0x7b14d953
  40fa7a:	out    0xa1,al
  40fa7c:	inc    esp
  40fa7d:	sub    BYTE PTR [esi+0xb],bh
  40fa80:	es inc esi
  40fa82:	mov    BYTE PTR [eax],bl
  40fa84:	(bad)  
  40fa85:	push   esi
  40fa86:	pop    ds
  40fa87:	add    BYTE PTR [esi],bl
  40fa89:	xchg   BYTE PTR [esi+0x7eb0bd73],bh
  40fa8f:	sub    esi,DWORD PTR [eax+0x1f1deec6]
  40fa95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa96:	xor    BYTE PTR [edx],ah
  40fa98:	mov    bl,0xff
  40fa9a:	cmp    edi,edx
  40fa9c:	imul   eax,DWORD PTR [ebx-0x72],0x5f2691e5
  40faa3:	fld    st(4)
  40faa5:	push   ecx
  40faa6:	test   BYTE PTR [ecx+edi*1],dh
  40faa9:	adc    DWORD PTR [edi-0x32],ebx
  40faac:	les    esi,FWORD PTR [esi-0x34bacfdb]
  40fab2:	dec    edi
  40fab3:	aaa    
  40fab4:	sbb    eax,0x32756b30
  40fab9:	mov    eax,ds:0x1cb0a657
  40fabe:	and    DWORD PTR [ebx],ecx
  40fac0:	loop   0x40fb10
  40fac2:	inc    esp
  40fac3:	out    dx,eax
  40fac4:	jmp    0x54d53711
  40fac9:	retf   
  40faca:	sbb    esp,DWORD PTR [ebx+eiz*1-0x79]
  40face:	mov    ds:0x4c5bd55e,al
  40fad3:	pop    eax
  40fad4:	das    
  40fad5:	inc    ecx
  40fad6:	daa    
  40fad7:	test   BYTE PTR [ebx-0x34acede9],al
  40fadd:	arpl   di,sp
  40fadf:	jmp    0x40fa87
  40fae1:	xchg   ebp,eax
  40fae2:	mov    ds:0x7895d7b2,al
  40fae7:	mov    dl,BYTE PTR ds:0x5545e00a
  40faed:	adc    eax,0xf4805fea
  40faf2:	cdq    
  40faf3:	add    DWORD PTR [ebx-0x4b],ebp
  40faf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40faf7:	retf   0x64c2
  40fafa:	cmp    edx,DWORD PTR [edx-0x5]
  40fafd:	xchg   esi,eax
  40fafe:	mov    bh,0x75
  40fb00:	pop    edx
  40fb01:	fs popf 
  40fb03:	outs   dx,BYTE PTR ds:[esi]
  40fb04:	in     eax,dx
  40fb05:	and    DWORD PTR [ebx],0x7a
  40fb08:	out    0x3,eax
  40fb0a:	in     al,dx
  40fb0b:	lods   eax,DWORD PTR ds:[esi]
  40fb0c:	fisub  WORD PTR [ebp+0x2c04ee26]
  40fb12:	add    eax,DWORD PTR [edx-0x19fa9688]
  40fb18:	jge    0x40fab5
  40fb1a:	mov    ebp,0x3eed1c78
  40fb1f:	xchg   BYTE PTR [esi-0x57],bl
  40fb22:	(bad)  
  40fb23:	mov    dh,0xdb
  40fb25:	xor    edx,ecx
  40fb27:	adc    DWORD PTR [edx],ecx
  40fb29:	mov    ebx,0xd83371b5
  40fb2e:	sub    BYTE PTR [esp+eax*2+0xb2d4cdd],0x7d
  40fb36:	loope  0x40fb89
  40fb38:	dec    esp
  40fb39:	ss push es
  40fb3b:	and    DWORD PTR [esi],ecx
  40fb3d:	jo     0x40faf3
  40fb3f:	gs mov esp,0xb75e8d8a
  40fb45:	xchg   esp,eax
  40fb46:	test   BYTE PTR [edx-0x3aac6fdc],ah
  40fb4c:	mov    dl,BYTE PTR [ebp-0x5350e02b]
  40fb52:	mov    BYTE PTR [esi],al
  40fb54:	pop    ebx
  40fb55:	pop    edi
  40fb56:	adc    eax,0x127f971b
  40fb5b:	ret    
  40fb5c:	rol    DWORD PTR [ecx+edi*1+0x344a078b],cl
  40fb63:	fsub   QWORD PTR [edi+0x4f314e95]
  40fb69:	lock dec edx
  40fb6b:	push   edx
  40fb6c:	and    eax,0x567d0cdb
  40fb71:	push   ecx
  40fb72:	add    DWORD PTR [esi-0x594ebdd0],0x6cd89eb1
  40fb7c:	loopne 0x40fb6f
  40fb7e:	pusha  
  40fb7f:	xchg   DWORD PTR [ecx-0x28],edi
  40fb82:	cmp    ah,cl
  40fb84:	out    dx,al
  40fb85:	retf   0xe752
  40fb88:	mov    ch,0x6
  40fb8a:	sub    DWORD PTR [esi],0xfaaf0c31
  40fb90:	add    al,0xf2
  40fb92:	sub    DWORD PTR [ebx+0x7],eax
  40fb95:	imul   ecx,DWORD PTR [eax+0x2f46436],0x9862d267
  40fb9f:	mov    WORD PTR [esi+0x3aadde08],cs
  40fba5:	test   DWORD PTR [edx+0x7d57d9d8],esp
  40fbab:	add    ah,ah
  40fbad:	mov    bh,0xa5
  40fbaf:	inc    ecx
  40fbb0:	hlt    
  40fbb1:	jnp    0x40fbb4
  40fbb3:	aad    0xc0
  40fbb5:	sbb    esi,DWORD PTR [ebx-0x254ac4e9]
  40fbbb:	nop
  40fbbc:	push   0xffffff83
  40fbbe:	lahf   
  40fbbf:	cmp    DWORD PTR [edx-0x64e794dc],eax
  40fbc5:	jo     0x40fc14
  40fbc7:	xchg   ebp,eax
  40fbc8:	xlat   BYTE PTR ds:[ebx]
  40fbc9:	les    ecx,FWORD PTR gs:[eax+0x4f]
  40fbcd:	shl    cl,cl
  40fbcf:	(bad)  
  40fbd0:	jge    0x40fb69
  40fbd2:	fldenv ds:0x90e1a1da
  40fbd8:	push   eax
  40fbd9:	inc    esp
  40fbda:	mov    edx,0x9860df1
  40fbdf:	adc    al,0x46
  40fbe1:	dec    ecx
  40fbe2:	out    0xd7,al
  40fbe4:	xchg   ebx,eax
  40fbe5:	mov    ebx,0x421f7783
  40fbea:	inc    eax
  40fbeb:	sbb    bh,ah
  40fbed:	jmp    0x40fbc4
  40fbef:	cmp    edx,DWORD PTR [esi]
  40fbf1:	out    0x94,al
  40fbf3:	imul   eax,DWORD PTR [ebx-0x60],0x1
  40fbf7:	sbb    al,0x28
  40fbf9:	push   eax
  40fbfa:	sub    ch,0x7e
  40fbfd:	cdq    
  40fbfe:	ffree  st(6)
  40fc00:	push   edi
  40fc01:	js     0x40fc3c
  40fc03:	inc    edi
  40fc04:	in     al,dx
  40fc05:	les    eax,FWORD PTR [ebp+eax*2+0x75]
  40fc09:	pop    edi
  40fc0a:	clc    
  40fc0b:	jl     0x40fc6f
  40fc0d:	push   edx
  40fc0e:	pusha  
  40fc0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc10:	adc    DWORD PTR [edi+0x5],esi
  40fc13:	xor    esp,ecx
  40fc15:	in     eax,dx
  40fc16:	inc    esp
  40fc17:	cmp    edi,DWORD PTR [edi+ecx*8+0x11]
  40fc1b:	sub    BYTE PTR [edx],bl
  40fc1d:	mov    db2,ecx
  40fc20:	inc    edi
  40fc21:	mov    ebp,0xcbef8ba6
  40fc26:	lds    esp,FWORD PTR [ebp+0x3016af9e]
  40fc2c:	loope  0x40fbf8
  40fc2e:	(bad)  
  40fc2f:	pushf  
  40fc30:	(bad)  
  40fc31:	rcl    esi,0x5e
  40fc34:	and    eax,0x6dbfe4c1
  40fc39:	lods   eax,DWORD PTR ds:[esi]
  40fc3a:	mov    edx,0xad49b341
  40fc3f:	lea    edi,[edi+0x24]
  40fc42:	outs   dx,DWORD PTR ds:[esi]
  40fc43:	adc    eax,0x4a973f66
  40fc48:	inc    esi
  40fc49:	jl     0x40fbfb
  40fc4b:	or     eax,0x7b8486e7
  40fc50:	sub    eax,0xc206667c
  40fc55:	sbb    DWORD PTR [esi],eax
  40fc57:	push   0x468b4644
  40fc5c:	test   al,0x72
  40fc5e:	push   eax
  40fc5f:	add    ebx,edx
  40fc61:	leave  
  40fc62:	xchg   ebx,eax
  40fc63:	icebp  
  40fc64:	jp     0x40fc5b
  40fc66:	and    eax,0x5b6787b0
  40fc6b:	cs push ds
  40fc6d:	rcr    BYTE PTR [eax+edi*1+0x4],1
  40fc71:	cwde   
  40fc72:	scas   eax,DWORD PTR es:[edi]
  40fc73:	dec    esp
  40fc74:	out    dx,al
  40fc75:	shr    BYTE PTR [esi],1
  40fc77:	push   0xffffffcb
  40fc79:	xchg   ebp,eax
  40fc7a:	adc    al,0xb7
  40fc7c:	gs xchg ebx,eax
  40fc7e:	dec    ebx
  40fc7f:	sub    eax,0x1f7ba4e2
  40fc84:	rol    BYTE PTR [ebx+0x52],1
  40fc87:	xor    esp,0xffb0d66c
  40fc8d:	cwde   
  40fc8e:	popf   
  40fc8f:	jo     0x40fcab
  40fc91:	aad    0x87
  40fc93:	mov    ecx,0xb48504b9
  40fc98:	xor    ebx,eax
  40fc9a:	call   0x7669:0x998b0e63
  40fca1:	shl    DWORD PTR [ebx-0x56],cl
  40fca4:	lock push ds
  40fca6:	cs adc ebx,eax
  40fca9:	mov    DWORD PTR [esi],esp
  40fcab:	xor    BYTE PTR [ebx-0x5f45e2c8],bl
  40fcb1:	push   ebp
  40fcb2:	jmp    0xbea74a34
  40fcb7:	mov    BYTE PTR [edi],bl
  40fcb9:	jp     0x40fd0e
  40fcbb:	in     al,0xa2
  40fcbd:	addr16 je 0x40fcb9
  40fcc0:	cmp    dh,BYTE PTR [edi+0x5c]
  40fcc3:	inc    ebp
  40fcc4:	cli    
  40fcc5:	and    DWORD PTR [edx-0x512ad80a],edi
  40fccb:	inc    edx
  40fccc:	pop    edi
  40fccd:	clc    
  40fcce:	fnsave [ebx+0x65]
  40fcd1:	add    DWORD PTR [ecx-0x3b],esi
  40fcd4:	jne    0x40fd3a
  40fcd6:	iret   
  40fcd7:	push   ebp
  40fcd8:	je     0x40fd40
  40fcda:	pop    ss
  40fcdb:	mov    ah,0x33
  40fcdd:	mov    al,ds:0xeeefe50f
  40fce2:	and    esi,ebx
  40fce4:	out    dx,eax
  40fce5:	add    al,0x8b
  40fce7:	adc    eax,0x21f23620
  40fcec:	push   eax
  40fced:	sub    bh,BYTE PTR [eax]
  40fcef:	mov    edi,0x4e5fa1ed
  40fcf4:	mov    eax,0x5e2ee7ff
  40fcf9:	jb     0x40fd37
  40fcfb:	push   edx
  40fcfc:	pop    ebx
  40fcfd:	addr16 jle 0x40fc83
  40fd00:	iret   
  40fd01:	js     0x40fc8d
  40fd03:	mov    ds:0x63bf8aee,eax
  40fd08:	lds    edx,FWORD PTR [esi]
  40fd0a:	inc    esi
  40fd0b:	icebp  
  40fd0c:	int3   
  40fd0d:	mov    ch,0xd3
  40fd0f:	pop    ebx
  40fd10:	adc    eax,0xca0ee66
  40fd15:	lods   eax,DWORD PTR ds:[esi]
  40fd16:	cmc    
  40fd17:	outs   dx,DWORD PTR ds:[esi]
  40fd18:	je     0x40fd05
  40fd1a:	dec    esp
  40fd1b:	or     ah,dh
  40fd1d:	cmp    al,0xb7
  40fd1f:	mov    esp,DWORD PTR [ebp+0x33]
  40fd22:	pop    esi
  40fd23:	adc    DWORD PTR [edx+0x63],edx
  40fd26:	and    esi,0x9b19ef18
  40fd2c:	inc    edx
  40fd2d:	imul   BYTE PTR [ecx+0x5a2e2105]
  40fd33:	int    0x61
  40fd35:	repz scas al,BYTE PTR es:[edi]
  40fd37:	fisttp QWORD PTR [edi+0x15]
  40fd3a:	add    ecx,DWORD PTR [eax-0x11]
  40fd3d:	sbb    al,0xd9
  40fd3f:	xchg   ecx,eax
  40fd40:	call   0x415a0f10
  40fd45:	fstp   TBYTE PTR [eax*1-0x24d9f073]
  40fd4c:	mov    ds:0x1a8c94b9,al
  40fd51:	in     al,dx
  40fd52:	dec    edx
  40fd53:	mov    bl,0xab
  40fd55:	mov    ds:0xd701e127,eax
  40fd5a:	ja     0x40fd8a
  40fd5c:	or     BYTE PTR [edx],0xa5
  40fd5f:	and    eax,0xd689f130
  40fd64:	dec    eax
  40fd65:	pop    ecx
  40fd66:	mov    ah,0x56
  40fd68:	and    dh,BYTE PTR [edi+edx*1-0x51]
  40fd6c:	sub    esi,DWORD PTR ds:0xb1a48163
  40fd72:	sbb    ebx,ebx
  40fd74:	repz ret 
  40fd76:	int3   
  40fd77:	int    0xcb
  40fd79:	adc    al,0xaa
  40fd7b:	push   ebp
  40fd7c:	inc    ebx
  40fd7d:	fldcw  WORD PTR [edx+ebp*8]
  40fd80:	sar    al,0xc3
  40fd83:	add    al,0xe
  40fd85:	push   0x620d8c41
  40fd8a:	popf   
  40fd8b:	adc    al,0xa1
  40fd8e:	mov    WORD PTR [ebp-0x166eeec6],es
  40fd94:	cld    
  40fd95:	push   eax
  40fd96:	add    BYTE PTR [edi],ah
  40fd98:	clc    
  40fd99:	or     DWORD PTR [edx-0x758ddb9f],0x637d2487
  40fda3:	mov    eax,ds:0x3468d8c2
  40fda8:	pop    es
  40fda9:	cdq    
  40fdaa:	gs xchg ebp,eax
  40fdac:	daa    
  40fdad:	pop    ds
  40fdae:	fmul   DWORD PTR [ebp-0x270d998]
  40fdb4:	dec    ecx
  40fdb5:	das    
  40fdb6:	fsub   st(6),st
  40fdb8:	les    esi,FWORD PTR [ecx+edi*1+0x58]
  40fdbc:	retf   
  40fdbd:	clc    
  40fdbe:	sub    al,BYTE PTR gs:[ecx+0x1d]
  40fdc2:	sbb    DWORD PTR [esi+0x6ff53502],ecx
  40fdc8:	nop
  40fdc9:	fs xor eax,ecx
  40fdcc:	and    esi,DWORD PTR [esi+0x36f47a3e]
  40fdd2:	pop    esi
  40fdd3:	jmp    0x6e51f592
  40fdd8:	in     eax,dx
  40fdd9:	test   cl,bh
  40fddb:	mov    al,0xc
  40fddd:	leave  
  40fdde:	xchg   esi,eax
  40fddf:	cld    
  40fde0:	xor    esp,ecx
  40fde2:	and    eax,0xd1a96bed
  40fde7:	mov    ch,0x43
  40fde9:	xchg   esi,eax
  40fdea:	pop    edi
  40fdeb:	rcr    edx,cl
  40fded:	mov    edx,0x11d63920
  40fdf2:	mov    cl,0xfe
  40fdf4:	arpl   WORD PTR ds:0x641e16e4,cx
  40fdfa:	push   ds
  40fdfb:	rcr    BYTE PTR [ebx+0xf],0x1c
  40fdff:	push   gs
  40fe01:	cld    
  40fe02:	sbb    ah,bh
  40fe04:	nop
  40fe05:	sbb    edi,DWORD PTR [edi-0x11dc51b3]
  40fe0b:	repnz dec edx
  40fe0d:	inc    eax
  40fe0e:	ins    BYTE PTR es:[edi],dx
  40fe0f:	jmp    0x33:0x7b9c295f
  40fe16:	xchg   DWORD PTR [eax+0x5d],edi
  40fe19:	mov    ecx,0x3b6a8a
  40fe1e:	dec    esi
  40fe1f:	lods   eax,DWORD PTR ds:[esi]
  40fe20:	pop    edx
  40fe21:	and    ebp,DWORD PTR [edi+0x5615bf2a]
  40fe27:	cs sti 
  40fe29:	in     al,dx
  40fe2a:	rcr    DWORD PTR [ecx],0xc7
  40fe2d:	or     al,0x4e
  40fe2f:	arpl   WORD PTR [ecx],cx
  40fe31:	cdq    
  40fe32:	add    edi,edi
  40fe34:	mov    fs,WORD PTR ds:0xa39c38ae
  40fe3a:	scas   eax,DWORD PTR es:[edi]
  40fe3b:	mov    edi,0x8a6454e5
  40fe40:	pop    es
  40fe41:	ret    
  40fe42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe43:	mov    fs:0xb155fc46,eax
  40fe49:	pop    ss
  40fe4a:	out    dx,eax
  40fe4b:	fiadd  DWORD PTR ds:0xa27b1bc9
  40fe51:	iret   
  40fe52:	out    dx,eax
  40fe53:	test   eax,0x7ecdae96
  40fe58:	lahf   
  40fe59:	or     DWORD PTR [edi-0x41c54e83],esp
  40fe5f:	adc    esi,DWORD PTR [edx+0x1845fe31]
  40fe65:	inc    ebx
  40fe66:	(bad)  
  40fe67:	jg     0x40fe06
  40fe69:	ja     0x40fdf1
  40fe6b:	int3   
  40fe6c:	push   esi
  40fe6d:	fadd   QWORD PTR [eax+0x3d7537d5]
  40fe73:	dec    ah
  40fe75:	test   eax,0xad371c2b
  40fe7a:	jnp    0x40fede
  40fe7c:	fcom   DWORD PTR [edi-0x7e833dd1]
  40fe82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe83:	fcomi  st,st(7)
  40fe85:	ds push 0x6e
  40fe88:	push   esp
  40fe89:	jb     0x40fefa
  40fe8b:	sbb    eax,0xede09e06
  40fe90:	mov    bl,bh
  40fe92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe93:	cmp    DWORD PTR [edx],esi
  40fe95:	std    
  40fe96:	jne    0x40fe1c
  40fe98:	into   
  40fe99:	in     al,dx
  40fe9a:	add    eax,0xf9eca561
  40fe9f:	test   al,0xd1
  40fea1:	out    dx,eax
  40fea2:	lods   al,BYTE PTR ds:[esi]
  40fea3:	mov    al,0x65
  40fea5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fea6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fea7:	test   eax,0xfa7d62af
  40feac:	aad    0x94
  40feae:	cmp    ebx,ebp
  40feb0:	push   edx
  40feb1:	add    DWORD PTR [ecx],0xffffffc4
  40feb4:	push   esi
  40feb5:	xor    esi,DWORD PTR [esi+0x59]
  40feb8:	lds    ebx,FWORD PTR [ecx]
  40feba:	or     BYTE PTR [esp+eax*4],cl
  40febd:	push   ebp
  40febe:	mov    ss,WORD PTR [ebp+0x3c]
  40fec1:	pop    edi
  40fec2:	stc    
  40fec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fec4:	call   0x363:0xc048e550
  40fecb:	int3   
  40fecc:	mov    ecx,0xed67099e
  40fed1:	gs push ebx
  40fed3:	jl     0x40fed1
  40fed5:	outs   dx,DWORD PTR ds:[esi]
  40fed6:	imul   ecx,DWORD PTR [ebp+0x66bd07d1],0xc3173d72
  40fee0:	ret    
  40fee1:	jl     0x40fe77
  40fee3:	dec    DWORD PTR [esi-0x522d4760]
  40fee9:	lahf   
  40feea:	push   cs
  40feeb:	pop    ecx
  40feec:	and    DWORD PTR [ecx+0x28],esp
  40feef:	sbb    BYTE PTR [ebp+0x11],ch
  40fef2:	ret    
  40fef3:	xchg   ecx,eax
  40fef4:	test   BYTE PTR [ebp+0x2d68436b],dh
  40fefa:	data16 fwait
  40fefc:	repnz fsub QWORD PTR [ebx+esi*2-0x23393b06]
  40ff04:	scas   al,BYTE PTR es:[edi]
  40ff05:	aas    
  40ff06:	repnz add eax,0xbe6280ca
  40ff0c:	jbe    0x40ff67
  40ff0e:	ins    BYTE PTR es:[edi],dx
  40ff0f:	adc    al,0x25
  40ff11:	jg     0x40ff02
  40ff13:	add    BYTE PTR [ecx-0x5e366c00],0xc7
  40ff1a:	rcr    DWORD PTR [edi],0xeb
  40ff1d:	retf   0xe2f1
  40ff20:	cwde   
  40ff21:	adc    dl,BYTE PTR [edx+0x6ee934a6]
  40ff27:	xchg   esp,eax
  40ff28:	fldcw  WORD PTR [eax-0x5fb2298b]
  40ff2e:	or     DWORD PTR [ebx-0x1f92b4a7],edx
  40ff34:	jo     0x40ff5a
  40ff36:	loope  0x40ff1e
  40ff38:	imul   edx,esp,0xd91f55bd
  40ff3e:	mov    esi,0x42340976
  40ff43:	xchg   DWORD PTR [edi-0x4f90ed09],ebx
  40ff49:	test   BYTE PTR [ecx],0x3f
  40ff4c:	(bad)  
  40ff4d:	jmp    0x1751:0xd76a3e95
  40ff54:	mov    dh,0x16
  40ff56:	test   DWORD PTR [eax+0x22f4c1aa],esi
  40ff5c:	repnz (bad) 
  40ff5e:	enter  0xc1ae,0x1d
  40ff62:	cmp    edi,DWORD PTR ds:0x64b26230
  40ff68:	dec    ebx
  40ff69:	mov    dl,0xa5
  40ff6b:	repz mov bp,bp
  40ff6f:	jge    0x40ff34
  40ff71:	or     BYTE PTR [ecx-0x6ba00d72],al
  40ff77:	test   cl,bl
  40ff79:	lods   eax,DWORD PTR ds:[esi]
  40ff7a:	and    esp,DWORD PTR [eax+ecx*1-0x77]
  40ff7e:	sub    BYTE PTR [esi],0x64
  40ff81:	and    ebx,edx
  40ff83:	push   edx
  40ff84:	scas   eax,DWORD PTR es:[edi]
  40ff85:	pop    ds
  40ff86:	nop
  40ff87:	and    eax,0x411d484c
  40ff8c:	sub    al,BYTE PTR [ebx+ebp*8-0x63]
  40ff90:	loope  0x40ffc7
  40ff92:	push   esp
  40ff93:	lea    ebp,ds:0xbffda529
  40ff99:	ja     0x40ffd8
  40ff9b:	inc    ebx
  40ff9c:	adc    dh,BYTE PTR [esi*1-0x387ac3c3]
  40ffa3:	xor    esp,DWORD PTR [ebp-0x1748c411]
  40ffa9:	out    0xd9,al
  40ffab:	jbe    0x40ffca
  40ffad:	or     al,0xce
  40ffaf:	xor    BYTE PTR [edi+0xf4355ab],bh
  40ffb5:	ins    DWORD PTR es:[edi],dx
  40ffb6:	cld    
  40ffb7:	adc    eax,0x70c73bf1
  40ffbc:	jle    0x40ffba
  40ffbe:	jmp    0x6c0b:0x88dc96b9
  40ffc5:	push   edi
  40ffc6:	push   cs
  40ffc7:	push   edi
  40ffc8:	fwait
  40ffc9:	ret    0x2180
  40ffcc:	dec    esp
  40ffcd:	mov    WORD PTR [ecx],ds
  40ffcf:	mov    bl,0x5
  40ffd1:	stos   DWORD PTR es:[edi],eax
  40ffd2:	mov    ah,0x4b
  40ffd4:	shl    BYTE PTR [ebx+0x5e079dac],1
  40ffda:	fsub   st(4),st
  40ffdc:	fwait
  40ffdd:	inc    esp
  40ffde:	cli    
  40ffdf:	leave  
  40ffe0:	add    esi,DWORD PTR [ecx]
  40ffe2:	ins    BYTE PTR es:[edi],dx
  40ffe3:	out    dx,eax
  40ffe4:	outs   dx,DWORD PTR ds:[esi]
  40ffe5:	jecxz  0x40ffbe
  40ffe7:	xor    ebx,DWORD PTR [edx+0x7e]
  40ffea:	clc    
  40ffeb:	imul   esi,DWORD PTR [ecx],0xe07bf1e7
  40fff1:	cmp    al,0xa6
  40fff3:	pop    esp
  40fff4:	test   eax,0x27a0e5f4
  40fff9:	inc    edx
  40fffa:	fst    QWORD PTR [edx-0x2df5916a]
  410000:	je     0x410021
  410002:	xor    BYTE PTR [eax],ch
  410004:	adc    DWORD PTR ds:[eax],edx
  410007:	das    
  410008:	add    DWORD PTR [ecx-0x283b91fe],ebp
  41000e:	fimul  DWORD PTR [ecx+0x2f]
  410011:	and    eax,0x6e3d7425
  410016:	ja     0x410051
  410018:	pop    es
  410019:	cmc    
  41001a:	sahf   
  41001b:	inc    edi
  41001c:	adc    eax,ecx
  41001e:	xchg   al,dh
  410020:	jmp    0x1e17b100
  410025:	sub    edi,DWORD PTR [eax+eiz*2+0x4c5fbf13]
  41002c:	jae    0x410068
  41002e:	sbb    eax,0xc4db4db9
  410033:	popf   
  410034:	push   ebp
  410035:	jle    0x41009e
  410037:	fbld   TBYTE PTR [ecx-0x4fa92a17]
  41003d:	dec    eax
  41003e:	sub    DWORD PTR [edi+0x3f0437ae],esi
  410044:	or     bh,BYTE PTR [eax]
  410046:	add    BYTE PTR [esi-0x12],ah
  410049:	cli    
  41004a:	mov    ebp,ss
  41004c:	pop    ecx
  41004d:	xchg   esp,eax
  41004e:	fcomip st,st(5)
  410050:	leave  
  410051:	add    BYTE PTR [esi],dh
  410053:	push   ebp
  410054:	mov    edx,0xed2bf6f6
  410059:	rcr    dl,cl
  41005b:	jle    0x410059
  41005d:	imul   ecx,DWORD PTR [ebx],0xb6995cbf
  410063:	sub    dh,bl
  410065:	add    BYTE PTR [esi-0x4d702e1b],ch
  41006b:	das    
  41006c:	mov    bh,0x9b
  41006e:	add    al,0x6e
  410070:	jge    0x410029
  410072:	pop    ebp
  410073:	mov    WORD PTR [ebp+0x2eefbe9f],cs
  410079:	into   
  41007a:	sub    BYTE PTR [edx-0x6a],ch
  41007d:	adc    eax,0xac3da8ae
  410082:	daa    
  410083:	dec    eax
  410084:	jae    0x41008e
  410086:	inc    esi
  410087:	xor    ah,BYTE PTR [eax-0x1a1449b2]
  41008d:	popa   
  41008e:	inc    esi
  41008f:	cmp    DWORD PTR [ebx-0x3d39cdcb],esi
  410095:	inc    ebx
  410096:	inc    esp
  410097:	pop    ds
  410098:	out    dx,al
  410099:	pop    ebx
  41009a:	push   ds
  41009b:	sub    al,0xa2
  41009d:	sbb    BYTE PTR [esi],cl
  41009f:	xchg   ebx,eax
  4100a0:	bnd jb 0x4100a0
  4100a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100a4:	(bad)  
  4100a6:	sahf   
  4100a7:	arpl   WORD PTR [ecx],sp
  4100a9:	pop    ebx
  4100aa:	dec    edx
  4100ab:	sub    cl,BYTE PTR [edx-0x2a]
  4100ae:	ja     0x410085
  4100b0:	shl    BYTE PTR [esi-0x3c],0x84
  4100b4:	or     esi,edi
  4100b6:	(bad)  
  4100b7:	and    DWORD PTR [esi],esi
  4100b9:	fmul   QWORD PTR [ebp+0x7e9a41ff]
  4100bf:	adc    DWORD PTR [ecx-0x16bf7199],ebx
  4100c5:	out    dx,eax
  4100c6:	cmp    DWORD PTR [esi-0x67],ecx
  4100c9:	sub    dh,ah
  4100cb:	in     eax,0x4
  4100cd:	fcmove st,st(6)
  4100cf:	or     al,0x85
  4100d1:	(bad)  
  4100d2:	sbb    eax,0xe4c3c0a1
  4100d7:	adc    BYTE PTR [esi],ah
  4100d9:	dec    edi
  4100da:	adc    ecx,DWORD PTR [ebx-0xf]
  4100dd:	repz (bad) 
  4100df:	xor    al,0x96
  4100e1:	push   cs
  4100e2:	bound  edx,QWORD PTR [eax]
  4100e4:	push   edx
  4100e5:	jae    0x4100bb
  4100e7:	ret    0x7d2b
  4100ea:	stc    
  4100eb:	es jecxz 0x41011f
  4100ee:	or     ax,0x99e0
  4100f2:	pop    ecx
  4100f3:	gs gs test al,0xc7
  4100f7:	xchg   ebx,eax
  4100f8:	jo     0x4100b5
  4100fa:	pop    esp
  4100fb:	mov    ds:0x15631b7b,al
  410100:	mov    ebx,DWORD PTR [eax]
  410102:	cli    
  410103:	adc    DWORD PTR [edi-0x68917120],esp
  410109:	shl    DWORD PTR [eax+0x7e9f1ab5],0xde
  410110:	test   DWORD PTR [ebp+0x55],eax
  410113:	jbe    0x4100e1
  410115:	sbb    DWORD PTR [ebx+0x6e],ebx
  410118:	outs   dx,DWORD PTR ds:[esi]
  410119:	int3   
  41011a:	or     DWORD PTR [esp+edi*8],ecx
  41011d:	popa   
  41011e:	add    esp,ebx
  410120:	mov    eax,ds:0x8e6973bf
  410125:	inc    ecx
  410126:	mov    ch,0x5a
  410128:	std    
  410129:	cdq    
  41012a:	aad    0x43
  41012c:	aad    0xc0
  41012e:	arpl   dx,dx
  410130:	iret   
  410131:	or     eax,0x282b2cb7
  410136:	out    dx,eax
  410137:	rol    edx,cl
  410139:	mov    edi,0xbfbb10aa
  41013e:	xchg   edi,eax
  41013f:	fcomp  QWORD PTR [ebx+0x5d]
  410142:	es out dx,al
  410144:	add    BYTE PTR [eax+ebp*8-0x13129f14],ah
  41014b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41014c:	scas   al,BYTE PTR es:[edi]
  41014d:	ror    DWORD PTR [esi],cl
  41014f:	mov    esp,0x57cb1dc5
  410154:	mov    esp,0xe424006a
  410159:	jbe    0x410136
  41015b:	iret   
  41015c:	add    al,0xc3
  41015e:	retf   
  41015f:	loop   0x410183
  410161:	jmp    0x2ee14756
  410166:	xchg   edi,eax
  410167:	sbb    al,0xa1
  410169:	ins    BYTE PTR es:[edi],dx
  41016a:	mov    ecx,0xacc061ed
  41016f:	(bad)  
  410170:	lock mov edx,0x3d8b45
  410176:	in     al,0x58
  410178:	ss ss scas eax,DWORD PTR es:[edi]
  41017b:	aas    
  41017c:	cli    
  41017d:	mov    BYTE PTR [ecx-0x2f9974be],ch
  410183:	cmc    
  410184:	pop    es
  410185:	sbb    BYTE PTR [ebp+edi*4-0x21],cl
  410189:	pop    ebp
  41018a:	fldcw  WORD PTR es:[ebx]
  41018d:	ins    DWORD PTR es:[edi],dx
  41018e:	adc    BYTE PTR [edx-0x72],bh
  410191:	or     edx,DWORD PTR [ebx+0x14]
  410194:	stc    
  410195:	mov    bh,0x7
  410197:	pop    ebx
  410198:	push   ss
  410199:	imul   ecx,DWORD PTR [eax+edx*1],0xa0c863f8
  4101a0:	xor    eax,0x7a2ec8d2
  4101a5:	cmp    eax,0x43db9bc4
  4101aa:	data16 cmp BYTE PTR [ebp+0x47],dh
  4101ae:	rcr    dh,0x9c
  4101b1:	sbb    edx,edx
  4101b3:	icebp  
  4101b4:	fstp   TBYTE PTR [ecx+0x74d7bcda]
  4101ba:	stos   BYTE PTR es:[edi],al
  4101bb:	mov    dl,0x5b
  4101bd:	sub    DWORD PTR [ecx+ebx*1],esp
  4101c0:	push   cs
  4101c1:	xchg   BYTE PTR [ebp-0x1ec3a0a1],dh
  4101c7:	test   eax,0x3e476828
  4101cc:	(bad)  
  4101cd:	nop
  4101ce:	jmp    0x41020f
  4101d0:	mov    esp,0xff00a48c
  4101d5:	daa    
  4101d6:	sub    al,0x40
  4101d8:	adc    DWORD PTR [edx+0x22],edx
  4101db:	mov    ds:0x8ff4ef31,eax
  4101e0:	imul   ecx,ecx,0x3581e564
  4101e6:	push   0x35
  4101e8:	dec    edi
  4101e9:	push   esi
  4101ea:	xchg   ebp,eax
  4101eb:	cmp    BYTE PTR [edi+ebp*8-0x5],ch
  4101ef:	imul   edx,DWORD PTR [ebp+ecx*8-0xf],0xa621352
  4101f7:	cmp    al,ch
  4101f9:	lds    ebx,FWORD PTR [edi-0x371a6839]
  4101ff:	stc    
  410200:	std    
  410201:	ficomp WORD PTR [ebp-0x9]
  410204:	jnp    0x4101ff
  410206:	imul   ebp,DWORD PTR [ecx+0x17773415],0x3c
  41020d:	pushf  
  41020e:	cmp    BYTE PTR [eax],0x95
  410211:	xor    BYTE PTR [edi+0x72],bh
  410214:	pop    ebp
  410215:	clc    
  410216:	cmc    
  410217:	fs push ds
  410219:	adc    eax,0x46e7cb27
  41021e:	ret    0x9755
  410221:	lea    esp,[ecx+0x5378dcf7]
  410227:	in     al,0xd8
  410229:	pop    eax
  41022a:	(bad)  
  41022c:	mov    al,0xb2
  41022e:	in     eax,dx
  41022f:	fist   WORD PTR [ecx-0x44]
  410232:	mov    cl,BYTE PTR [ebx]
  410234:	in     eax,dx
  410235:	clc    
  410236:	ret    0xeb4b
  410239:	stc    
  41023a:	out    0xfa,eax
  41023c:	jmp    0x4101ea
  41023e:	cmp    al,0xd0
  410240:	ja     0x41022c
  410242:	ins    BYTE PTR es:[edi],dx
  410243:	test   al,0x32
  410245:	fsub   QWORD PTR [ebx-0x5f6006ee]
  41024b:	xchg   edi,eax
  41024c:	pop    ss
  41024d:	jmp    0x7a94:0x36a80d68
  410254:	in     eax,dx
  410255:	ficom  DWORD PTR [ecx+0x56c9da35]
  41025b:	into   
  41025c:	shr    bl,0xca
  41025f:	pop    ebx
  410260:	and    DWORD PTR [eax+edx*8+0x5b965953],esi
  410267:	mov    ds:0x2b6ac6c4,eax
  41026c:	cdq    
  41026d:	bound  eax,QWORD PTR [edx]
  41026f:	push   es
  410270:	call   0xf99d:0xf7662e9e
  410277:	push   ds
  410278:	xchg   edi,eax
  410279:	adc    esp,DWORD PTR [ebp+0x4ad98430]
  41027f:	scas   al,BYTE PTR es:[edi]
  410280:	out    dx,al
  410281:	daa    
  410282:	jg     0x410294
  410284:	sub    DWORD PTR [esi],0x4a8426a4
  41028a:	and    BYTE PTR [esi+0x34c0e37c],0x21
  410291:	test   BYTE PTR [ebx+edi*4],dl
  410294:	iret   
  410295:	and    DWORD PTR [eax+0xf],ebx
  410298:	mov    ch,0x74
  41029a:	or     ebx,esi
  41029c:	rcr    BYTE PTR [eax],cl
  41029e:	jge    0x4102a7
  4102a0:	aaa    
  4102a1:	push   cs
  4102a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102a3:	js     0x4102f7
  4102a5:	loop   0x410260
  4102a7:	aam    0x84
  4102a9:	mov    BYTE PTR [esi+0x2259c82a],0x29
  4102b0:	jns    0x41025b
  4102b2:	adc    dl,BYTE PTR [edx]
  4102b4:	ret    0x10c8
  4102b7:	jmp    0x3e43:0x61f0a286
  4102be:	popf   
  4102bf:	fild   QWORD PTR [ebx+ebx*8-0x2a]
  4102c3:	dec    ebx
  4102c4:	loope  0x410300
  4102c6:	imul   DWORD PTR [esi+0x72]
  4102c9:	ror    BYTE PTR [eax-0x615dc0a6],0x6d
  4102d0:	dec    eax
  4102d1:	repnz mov dl,BYTE PTR [edx+0x2e2be4a0]
  4102d8:	add    al,0x3
  4102da:	sbb    eax,0xfeeaf4b1
  4102df:	ins    BYTE PTR es:[edi],dx
  4102e0:	lahf   
  4102e1:	fisub  WORD PTR [edi+ebp*2]
  4102e4:	jmp    0xb76f:0xbf6d1029
  4102eb:	sub    ecx,esp
  4102ed:	out    0x62,eax
  4102ef:	xor    eax,0x23c17a6
  4102f4:	in     al,0x6f
  4102f6:	add    al,0xdc
  4102f8:	jg     0x41034b
  4102fa:	lock fnstsw WORD PTR [edx-0x1b]
  4102fe:	push   cs
  4102ff:	es push esp
  410301:	cmp    al,0x32
  410303:	test   BYTE PTR [ebx],0x4d
  410306:	sbb    DWORD PTR [ecx+edi*4],esi
  410309:	clc    
  41030a:	and    DWORD PTR [edx-0x28],esp
  41030d:	dec    esp
  41030e:	shl    bh,1
  410310:	inc    esp
  410311:	jns    0x4102bf
  410313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410314:	mov    es,WORD PTR [eax-0x3c3ed5c5]
  41031a:	dec    ebp
  41031b:	ret    
  41031c:	scas   eax,DWORD PTR es:[edi]
  41031d:	mov    bl,0xaf
  41031f:	and    DWORD PTR ds:0x8c96ec53,esi
  410325:	sti    
  410326:	sub    al,0xb2
  410328:	add    BYTE PTR [ebx+0x3d7a18ae],dl
  41032e:	iret   
  41032f:	cmp    al,BYTE PTR [si]
  410332:	push   ebp
  410333:	push   edx
  410334:	test   DWORD PTR [eax+ecx*4-0x61a37b0c],eax
  41033b:	dec    edx
  41033c:	jmp    0x4103b5
  41033e:	xor    ch,cl
  410340:	lea    esp,[ebp+eiz*8+0x42]
  410344:	pop    edi
  410345:	fld    DWORD PTR [ecx+0x50]
  410348:	mov    esp,0xa3750dd9
  41034d:	jns    0x4102e7
  41034f:	jge    0x410364
  410351:	mov    dh,BYTE PTR [edx+0xf0d3c10]
  410357:	mov    ah,BYTE PTR [ebx-0x4a5b6475]
  41035d:	mov    edx,0xbf001f2d
  410362:	add    eax,0x5281e340
  410367:	pop    ss
  410368:	stos   DWORD PTR es:[edi],eax
  410369:	cwde   
  41036a:	jo     0x41035e
  41036c:	adc    DWORD PTR [edi+0x21e72a93],esp
  410372:	mov    WORD PTR [ebx+0x5d8c9c75],ss
  410378:	mov    edx,0x8f7b0d3d
  41037d:	aas    
  41037e:	push   ebp
  41037f:	push   0x3a
  410381:	mov    al,ds:0x472fca99
  410386:	adc    al,0x1a
  410388:	mov    al,ds:0xec881020
  41038d:	data16 loope 0x410394
  410390:	pop    esi
  410391:	add    ebp,DWORD PTR [ecx-0x67]
  410394:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410395:	pop    ss
  410396:	jmp    0x2eba00f6
  41039b:	push   ebx
  41039c:	add    DWORD PTR [edx],0x60
  41039f:	(bad)  
  4103a0:	push   0x1
  4103a2:	xchg   ebx,eax
  4103a3:	xchg   edx,eax
  4103a4:	mov    BYTE PTR [ecx-0x1889a396],ah
  4103aa:	test   al,0xf4
  4103ac:	outs   dx,DWORD PTR ds:[esi]
  4103ad:	mov    edx,0x4e23b8ae
  4103b2:	retf   0x2e5c
  4103b5:	repz hlt 
  4103b7:	rcr    al,0x6b
  4103ba:	div    dh
  4103bc:	sbb    ch,BYTE PTR [ecx+0x2b018806]
  4103c2:	dec    eax
  4103c3:	sbb    eax,0xe8aa2ef8
  4103c8:	mov    edi,0x2e640d0a
  4103cd:	ss push eax
  4103cf:	xchg   ebx,eax
  4103d0:	(bad)  
  4103d1:	imul   esi,DWORD PTR [ecx],0x64
  4103d4:	jge    0x4103cf
  4103d6:	mov    dl,0x76
  4103d8:	in     al,0x62
  4103da:	jecxz  0x41038c
  4103dc:	mov    esp,0xd696cf6e
  4103e1:	leave  
  4103e2:	leave  
  4103e3:	imul   DWORD PTR [esi]
  4103e5:	addr16 jno 0x41042e
  4103e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103e9:	out    0x8d,eax
  4103eb:	xor    eax,0xf2d89261
  4103f0:	mov    ecx,0xc58881a9
  4103f5:	xor    al,0xa3
  4103f7:	add    DWORD PTR [ecx-0x4c],ecx
  4103fa:	repnz sub al,0x62
  4103fd:	lahf   
  4103fe:	lods   eax,DWORD PTR ds:[esi]
  4103ff:	imul   edi,DWORD PTR [edi-0x5b],0xfffffff3
  410403:	in     al,dx
  410404:	call   0x585de33f
  410409:	mov    ah,BYTE PTR [esi]
  41040b:	(bad)  
  41040c:	fidivr DWORD PTR [edi]
  41040e:	sar    eax,cl
  410410:	jmp    0x5e87c5bc
  410415:	cmp    eax,0x1612a8c9
  41041a:	clc    
  41041b:	mov    al,0xec
  41041d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41041e:	in     al,0x25
  410420:	mov    DWORD PTR [eax-0x60],esi
  410423:	lahf   
  410424:	mov    edi,0xd8724068
  410429:	add    ebp,DWORD PTR [ecx-0x5b992695]
  41042f:	mov    ah,0x6d
  410431:	mov    ebp,DWORD PTR [ebx+0x35]
  410434:	rol    BYTE PTR [eax-0x48],0xaa
  410438:	retf   
  410439:	test   ch,bh
  41043b:	xchg   DWORD PTR [ecx],edx
  41043d:	mov    esi,0xc1252954
  410442:	mov    esi,0xe1746d07
  410447:	jl     0x410466
  410449:	(bad)  
  41044a:	int3   
  41044b:	pop    ebx
  41044c:	(bad)  
  41044d:	(bad)  
  41044e:	sub    DWORD PTR [ecx+esi*2],eax
  410451:	shl    BYTE PTR [ebp-0x61],1
  410454:	and    DWORD PTR [ebx+edi*8-0x4aa58622],ecx
  41045b:	stc    
  41045c:	push   ds
  41045d:	dec    edx
  41045e:	jp     0x41045e
  410460:	rol    BYTE PTR [esp+ebx*2-0x633cd29d],1
  410467:	sub    dl,BYTE PTR [ebx]
  410469:	inc    esi
  41046a:	sub    eax,0x521ae71e
  41046f:	xchg   ebp,eax
  410470:	lahf   
  410471:	cs push ds
  410473:	(bad)  
  410474:	fcomp  st(2)
  410476:	outs   dx,BYTE PTR ds:[esi]
  410477:	or     eax,0xfbd2991d
  41047c:	push   ecx
  41047d:	cmp    DWORD PTR ds:0xbdefda4d,eax
  410483:	dec    ecx
  410484:	push   edi
  410485:	jp     0x41047f
  410487:	nop
  410488:	mov    eax,ds:0xe8f414b4
  41048d:	outs   dx,DWORD PTR ds:[esi]
  41048e:	ja     0x41042c
  410490:	sbb    al,dl
  410492:	jge    0x410419
  410494:	dec    ebx
  410495:	scas   eax,DWORD PTR es:[edi]
  410496:	inc    edx
  410497:	cmc    
  410498:	push   edi
  410499:	dec    edi
  41049a:	pop    ecx
  41049b:	frstor [edi]
  41049d:	sbb    DWORD PTR [esi+0x5754e5b9],edx
  4104a3:	push   ds
  4104a4:	jmp    0x3dd6:0xb8e6758
  4104ab:	jns    0x4104ac
  4104ad:	add    esp,0xffffffd1
  4104b0:	daa    
  4104b1:	scas   eax,DWORD PTR es:[edi]
  4104b2:	in     al,0xec
  4104b4:	and    DWORD PTR fs:[edi+edi*4-0x7c],edx
  4104b9:	out    0xd1,eax
  4104bb:	test   BYTE PTR [esi+edx*4-0x32],bh
  4104bf:	outs   dx,BYTE PTR ds:[esi]
  4104c0:	push   ebp
  4104c1:	dec    edx
  4104c2:	fs stos BYTE PTR es:[edi],al
  4104c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104c5:	sbb    dh,BYTE PTR [ecx-0x25]
  4104c8:	outs   dx,DWORD PTR ds:[esi]
  4104c9:	or     ch,BYTE PTR [ecx-0x1a]
  4104cc:	test   ah,dl
  4104ce:	in     al,dx
  4104cf:	les    esi,FWORD PTR [eax-0x69]
  4104d2:	mov    esi,0xdcebeaff
  4104d7:	es out 0xe1,al
  4104da:	pop    esi
  4104db:	sbb    edi,ecx
  4104dd:	mov    dl,0x5d
  4104df:	inc    esp
  4104e0:	jo     0x41050e
  4104e2:	(bad)  
  4104e4:	pop    edx
  4104e5:	inc    edx
  4104e6:	mov    ebp,0xaf8d4988
  4104eb:	jne    0x410473
  4104ed:	sbb    BYTE PTR [ebp-0x47],ah
  4104f0:	(bad)  
  4104f1:	push   ss
  4104f2:	pop    ebx
  4104f3:	cli    
  4104f4:	inc    ebx
  4104f5:	std    
  4104f6:	xor    BYTE PTR [eax],bh
  4104f8:	lock loope 0x41054e
  4104fb:	icebp  
  4104fc:	push   0xffffff97
  4104fe:	in     al,dx
  4104ff:	jp     0x41049f
  410501:	mov    dl,0x16
  410503:	outs   dx,BYTE PTR ds:[esi]
  410504:	cli    
  410505:	fucom  st(3)
  410507:	add    al,0xe4
  410509:	inc    edx
  41050a:	mov    sp,0x7002
  41050e:	dec    ecx
  41050f:	jge    0x410528
  410511:	cmp    dh,BYTE PTR [ebp-0x37]
  410514:	addr16 (bad) 
  410516:	sbb    eax,0xc66155eb
  41051b:	fwait
  41051c:	sbb    BYTE PTR [edx],bh
  41051e:	pop    ecx
  41051f:	int    0x57
  410521:	in     eax,dx
  410522:	cmc    
  410523:	es jno 0x410527
  410526:	aam    0xae
  410528:	enter  0x2be4,0x61
  41052c:	sar    BYTE PTR [esi],0xc8
  41052f:	(bad)  
  410530:	push   ss
  410531:	sbb    BYTE PTR [esi],bh
  410533:	sar    bl,1
  410535:	std    
  410536:	mov    cl,0xaa
  410538:	xchg   BYTE PTR [ecx+0x3cc60062],dl
  41053e:	sar    ebp,cl
  410540:	xchg   edi,eax
  410541:	pop    esi
  410542:	rcr    ch,1
  410544:	aam    0x64
  410546:	and    eax,0x2772d22e
  41054b:	xchg   ebp,eax
  41054c:	enter  0x6114,0x16
  410550:	and    DWORD PTR [ecx+0x45],esp
  410553:	aas    
  410554:	dec    edx
  410555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410556:	pop    ss
  410557:	outs   dx,DWORD PTR ds:[esi]
  410558:	test   BYTE PTR [edi+0x63],ah
  41055b:	pop    ss
  41055c:	dec    edx
  41055d:	pop    ds
  41055e:	test   eax,0x803e4f81
  410563:	jnp    0x410517
  410565:	or     edi,0xd7dc2f29
  41056b:	fwait
  41056c:	jmp    0x4c:0x8db3635c
  410573:	mov    esi,0xfccdae1a
  410578:	mov    al,ds:0x3aec1773
  41057d:	dec    ecx
  41057e:	sbb    al,0x4e
  410580:	pushf  
  410581:	ja     0x410514
  410583:	jp     0x410578
  410585:	push   0xde6c4e45
  41058a:	adc    eax,DWORD PTR [ebx+0x60f59942]
  410590:	mov    dh,0x0
  410592:	std    
  410593:	leave  
  410594:	scas   al,BYTE PTR es:[edi]
  410595:	adc    esi,0x42
  410598:	fsub   QWORD PTR [edx+edx*1]
  41059b:	sbb    ebx,DWORD PTR [eax-0x38]
  41059e:	xor    dh,bh
  4105a0:	leave  
  4105a1:	xor    ah,bl
  4105a3:	dec    ecx
  4105a4:	jecxz  0x410591
  4105a6:	(bad)  [ecx-0x6ea75d58]
  4105ac:	cmp    al,bh
  4105ae:	je     0x410578
  4105b0:	ins    DWORD PTR es:[edi],dx
  4105b1:	enter  0xb18b,0x1d
  4105b5:	xor    ch,BYTE PTR [ebp+0x76]
  4105b8:	call   0xe28b:0xcec006db
  4105bf:	out    0xae,eax
  4105c1:	js     0x41060c
  4105c3:	in     al,0x4
  4105c5:	mov    al,ds:0x4ffced13
  4105ca:	jmp    0x410589
  4105cc:	(bad)  
  4105cd:	or     al,0x58
  4105cf:	mov    edi,0xc31a9e25
  4105d4:	jnp    0x4105d1
  4105d6:	dec    ecx
  4105d7:	sub    BYTE PTR [ebx],0x73
  4105da:	push   ebx
  4105db:	fwait
  4105dc:	jp     0x4105c3
  4105de:	std    
  4105df:	out    dx,al
  4105e0:	or     BYTE PTR [edi+0x6595bc5f],0x66
  4105e7:	mov    ss,WORD PTR ds:0xfe9df588
  4105ed:	retf   0x87fb
  4105f0:	xor    DWORD PTR [esi],eax
  4105f2:	faddp  st(2),st
  4105f4:	scas   al,BYTE PTR es:[edi]
  4105f5:	stos   BYTE PTR es:[edi],al
  4105f6:	lea    esp,[edx-0x67]
  4105f9:	adc    cl,cl
  4105fb:	mov    eax,ds:0x32a04b1b
  410600:	inc    edx
  410601:	jae    0x410617
  410603:	adc    DWORD PTR [edi-0x37],eax
  410606:	das    
  410607:	jmp    0x4105d5
  410609:	adc    esp,eax
  41060b:	or     bl,dh
  41060d:	lock je 0x410640
  410610:	xchg   esi,eax
  410611:	repz popa 
  410613:	popa   
  410614:	jb     0x410623
  410616:	push   ss
  410617:	and    ah,BYTE PTR [eax]
  410619:	add    ebx,DWORD PTR [ecx]
  41061b:	mov    dh,0x80
  41061d:	in     al,dx
  41061e:	stos   BYTE PTR es:[edi],al
  41061f:	stos   DWORD PTR es:[edi],eax
  410620:	mov    ds:0x36f58762,al
  410625:	inc    esi
  410626:	push   0xffffffe3
  410628:	mov    dh,0xd2
  41062a:	test   DWORD PTR [ebp+0x55],ebx
  41062d:	add    eax,0x93258c3b
  410632:	jmp    0x41066c
  410634:	int    0x5f
  410636:	js     0x410610
  410638:	jb     0x4105db
  41063a:	fidiv  DWORD PTR [edi]
  41063c:	pop    DWORD PTR [ebx]
  41063e:	push   0x17e8632f
  410643:	rcl    BYTE PTR [edi],1
  410645:	outs   dx,DWORD PTR ds:[esi]
  410646:	test   bh,bh
  410648:	std    
  410649:	sub    DWORD PTR [esi+0x152cccf6],edi
  41064f:	mov    BYTE PTR [edi-0x696c2cb7],0x35
  410656:	mov    ecx,0xdf4d0aa6
  41065b:	pop    edi
  41065c:	jo     0x4106a8
  41065e:	cmp    BYTE PTR ds:0x1ee36,al
  410664:	inc    ebp
  410665:	xchg   ebx,eax
  410666:	aam    0x2b
  410668:	sub    eax,0xf1300681
  41066d:	retf   0x2206
  410670:	cmp    eax,0xdbc4f68a
  410675:	dec    ebp
  410676:	sub    DWORD PTR [eax+eiz*4-0x1f],0x5
  41067b:	(bad)  
  41067c:	jmp    0x458e:0x41cc0a16
  410683:	inc    ebp
  410684:	mov    edi,0x4dbbabba
  410689:	inc    esi
  41068a:	fistp  QWORD PTR [ecx+esi*4-0x77]
  41068e:	mov    ebx,0x66a0900d
  410693:	loopne 0x410685
  410695:	push   eax
  410696:	push   edx
  410697:	mov    esi,DWORD PTR [ebp-0x2a619395]
  41069d:	test   BYTE PTR [ebp+0x3a],0x3d
  4106a1:	pop    ss
  4106a2:	lea    ebx,[esi+0x63]
  4106a5:	test   BYTE PTR [esi],0x76
  4106a8:	dec    ebx
  4106a9:	sbb    bl,BYTE PTR [esp+ebp*2+0x792a0077]
  4106b0:	mov    WORD PTR [ebp+0x7805da5a],fs
  4106b6:	scas   al,BYTE PTR es:[edi]
  4106b7:	(bad)  
  4106b8:	rol    DWORD PTR [ecx+0x4bc843d6],cl
  4106be:	scas   al,BYTE PTR es:[edi]
  4106bf:	sbb    al,0xcb
  4106c1:	pushf  
  4106c2:	adc    al,0xfd
  4106c4:	(bad)  
  4106c5:	in     al,0xcd
  4106c7:	xchg   ebx,eax
  4106c8:	jecxz  0x410711
  4106ca:	shl    ebx,cl
  4106cc:	mov    edi,0x5feb67ec
  4106d1:	push   ebx
  4106d2:	mov    esi,0xed934b66
  4106d7:	pop    ebx
  4106d8:	imul   edi,ecx,0xffffffb1
  4106db:	es iret 
  4106dd:	mov    ebp,0xe947dd07
  4106e2:	sahf   
  4106e3:	jp     0x4106c6
  4106e5:	or     DWORD PTR [eax+0x53],edx
  4106e8:	ja     0x4106de
  4106ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106eb:	mov    esi,0x42fc0f6f
  4106f0:	cmp    al,0xac
  4106f2:	add    DWORD PTR [ecx],eax
  4106f4:	cmc    
  4106f5:	shr    DWORD PTR [esi-0x1ad2dfb2],1
  4106fb:	jmp    0xb52239c1
  410700:	cwde   
  410701:	std    
  410702:	add    BYTE PTR [ecx+0x25bbeab9],ah
  410708:	fucomi st,st(5)
  41070a:	pop    edx
  41070b:	pop    ebx
  41070c:	inc    esp
  41070d:	int3   
  41070e:	addr16 pop esi
  410710:	and    edx,DWORD PTR [esi-0x5a]
  410713:	loopne 0x4106d5
  410715:	xor    esi,DWORD PTR [edx+ecx*8]
  410718:	jg     0x410712
  41071a:	push   0xffffffbd
  41071c:	inc    edx
  41071d:	pop    ss
  41071e:	mov    ecx,0x2750aeb3
  410723:	cli    
  410724:	add    eax,0x6bbb3405
  410729:	and    al,0xaf
  41072b:	psraw  mm6,QWORD PTR [ebp-0x3519365]
  410732:	inc    eax
  410733:	in     eax,dx
  410734:	jnp    0x41075d
  410736:	fld    QWORD PTR [esi-0x2b]
  410739:	and    eax,0x970d307c
  41073e:	mov    ds:0xd26102fd,eax
  410743:	xchg   edi,eax
  410744:	add    cl,dh
  410746:	mov    al,ds:0x8cadf07b
  41074b:	mov    edi,DWORD PTR [ebp+0x32ae2c1a]
  410751:	sbb    al,0x7b
  410753:	pop    esi
  410754:	cwde   
  410755:	enter  0x60a9,0xe8
  410759:	xor    al,0x98
  41075b:	jbe    0x4107ac
  41075d:	add    esi,ecx
  41075f:	xor    bh,BYTE PTR [esi+0x62b94cc2]
  410765:	inc    eax
  410766:	dec    ebx
  410767:	sbb    DWORD PTR [edi+0x3f],edi
  41076a:	dec    esi
  41076b:	mov    cl,0x35
  41076d:	retf   
  41076e:	imul   edx,DWORD PTR [ebx],0x24dd66e8
  410774:	lds    ecx,FWORD PTR [ecx+0x7c9bcc70]
  41077a:	jno    0x410788
  41077c:	jmp    0x41075e
  41077e:	jne    0x41076c
  410780:	enter  0x5323,0xda
  410784:	dec    ebx
  410785:	sub    al,0x6c
  410787:	aas    
  410788:	out    0x1f,eax
  41078a:	sub    eax,0x7e3d2156
  41078f:	dec    edi
  410790:	sbb    ecx,DWORD PTR [ecx+0x2e]
  410793:	push   edi
  410794:	test   BYTE PTR [edx+eax*4+0x58b133af],dh
  41079b:	fistp  DWORD PTR [edx]
  41079d:	sbb    al,0x73
  41079f:	int    0x5c
  4107a1:	shl    DWORD PTR [ebx+0x3d],cl
  4107a4:	and    DWORD PTR [ecx-0x3683861d],edx
  4107aa:	xchg   DWORD PTR [ebp+0x6b],edi
  4107ad:	out    dx,eax
  4107ae:	cwde   
  4107af:	lods   eax,DWORD PTR ds:[esi]
  4107b0:	daa    
  4107b1:	jmp    DWORD PTR [eax-0x7b24b264]
  4107b7:	and    al,0x14
  4107b9:	das    
  4107ba:	jbe    0x41074b
  4107bc:	xor    edi,DWORD PTR [ebx]
  4107be:	add    BYTE PTR [edx+0x2b],ah
  4107c1:	sti    
  4107c2:	push   cs
  4107c3:	mov    ch,0x9a
  4107c5:	push   eax
  4107c6:	nop
  4107c7:	inc    edi
  4107c8:	(bad)  
  4107c9:	popa   
  4107ca:	addps  xmm7,xmm2
  4107cd:	bound  ebx,QWORD PTR [edi-0x4976b773]
  4107d3:	mov    dh,0xae
  4107d5:	pusha  
  4107d6:	pop    ecx
  4107d7:	loope  0x4107b0
  4107d9:	cld    
  4107da:	cmp    DWORD PTR [edx],ebp
  4107dc:	and    BYTE PTR [esi+0x2c],cl
  4107df:	fisub  DWORD PTR gs:[ebp+0x53d82e5b]
  4107e6:	mov    al,BYTE PTR [edx]
  4107e8:	repnz and BYTE PTR [eax-0x3e],bh
  4107ec:	add    dl,BYTE PTR [ecx-0x8d7651]
  4107f2:	add    BYTE PTR [ecx+0x270e2376],dh
  4107f8:	test   DWORD PTR [ebp+0x6a],ebp
  4107fb:	cli    
  4107fc:	leave  
  4107fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107fe:	add    ecx,DWORD PTR [ebx+0x5a0cd20]
  410804:	inc    edx
  410805:	inc    ebp
  410806:	imul   ecx,DWORD PTR [ecx],0xc6739c94
  41080c:	std    
  41080d:	xor    al,0xc1
  41080f:	mov    esi,0x8a86f632
  410814:	xchg   ecx,eax
  410815:	xor    BYTE PTR [edi-0x1b],dh
  410818:	xchg   ebp,eax
  410819:	adc    bl,BYTE PTR [esi-0x67]
  41081c:	adc    DWORD PTR [ebp-0xa],ebx
  41081f:	push   esp
  410820:	add    cl,BYTE PTR [edi-0xaf5ef9f]
  410826:	loopne 0x4107fa
  410828:	(bad)  
  410829:	pop    esi
  41082a:	leave  
  41082b:	in     eax,dx
  41082c:	mov    ebp,0x3c814def
  410831:	and    al,0xb6
  410833:	data16 adc dh,ch
  410836:	ins    BYTE PTR es:[edi],dx
  410837:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410838:	fsubr  QWORD PTR [esi+0x41]
  41083b:	inc    ecx
  41083c:	ror    DWORD PTR [ebx],1
  41083e:	ins    DWORD PTR es:[edi],dx
  41083f:	les    eax,FWORD PTR [ebx+0x3d954ad6]
  410845:	cmc    
  410846:	out    0xe2,eax
  410848:	mov    edx,DWORD PTR [eax]
  41084a:	push   esp
  41084b:	xlat   BYTE PTR ds:[ebx]
  41084c:	inc    esi
  41084d:	or     edx,DWORD PTR [edi]
  41084f:	push   ecx
  410850:	in     al,0xf4
  410852:	sbb    al,ch
  410854:	test   al,0x93
  410856:	pop    ds
  410857:	or     al,0x27
  410859:	inc    ecx
  41085a:	and    bl,ch
  41085c:	fadd   DWORD PTR [ebx+0x604a740]
  410862:	adc    DWORD PTR [esi-0x5a],edi
  410865:	div    DWORD PTR [eax+0x7e43a9ab]
  41086b:	ss push cs
  41086d:	pusha  
  41086e:	pushf  
  41086f:	xor    DWORD PTR [edi-0x5917c360],0xffffffbe
  410876:	push   esi
  410877:	mov    esp,0x8d42d603
  41087c:	loopne 0x410866
  41087e:	mov    eax,0x93731e61
  410883:	ins    DWORD PTR es:[edi],dx
  410884:	inc    ecx
  410885:	pop    ebp
  410886:	jmp    0x875c7de8
  41088b:	xlat   BYTE PTR ds:[ebx]
  41088c:	int    0x1d
  41088e:	xchg   esi,eax
  41088f:	(bad)  
  410890:	and    DWORD PTR [edi-0x5a],edx
  410893:	cdq    
  410894:	or     BYTE PTR [edx+0x3658556d],al
  41089a:	pusha  
  41089b:	mov    ds:0x92a2fdcb,al
  4108a0:	imul   ecx,DWORD PTR [edi],0x9190b8ae
  4108a6:	sbb    ebp,DWORD PTR [ecx+0x5a1e259d]
  4108ac:	push   ss
  4108ad:	mov    ecx,0x3a792924
  4108b2:	repz aad 0x63
  4108b5:	(bad)  
  4108b6:	sub    al,0x5
  4108b8:	mov    ebx,0x659722c4
  4108bd:	dec    ebx
  4108be:	xchg   esp,ebp
  4108c0:	lahf   
  4108c1:	std    
  4108c2:	les    esp,FWORD PTR [ecx+0x38]
  4108c5:	mov    cl,0xb2
  4108c7:	sbb    ebx,DWORD PTR [ecx-0x21]
  4108ca:	adc    BYTE PTR [edi],0x8f
  4108cd:	or     eax,0xe39babbc
  4108d2:	popa   
  4108d3:	sub    DWORD PTR [ecx+0x4b9c10dd],eax
  4108d9:	adc    al,0x9d
  4108db:	bound  eax,QWORD PTR [edi+0x75]
  4108de:	jae    0x4108f5
  4108e0:	hlt    
  4108e1:	popf   
  4108e2:	jno    0x4108f7
  4108e4:	and    al,0xb7
  4108e6:	sbb    BYTE PTR [di+0x3043],0xb4
  4108ec:	dec    esi
  4108ed:	mov    ebp,0x7446de9f
  4108f2:	(bad)  
  4108f3:	cmp    BYTE PTR [ebp+0x1],ah
  4108f6:	mov    bh,0x9d
  4108f8:	mov    esi,0x25d13ac5
  4108fd:	retf   0x8029
  410900:	in     eax,0x7a
  410902:	dec    edx
  410903:	push   ebp
  410904:	jmp    0x4108e9
  410906:	in     eax,0xbb
  410908:	mov    ebp,0xbecf91fa
  41090d:	es (bad) 
  41090f:	jmp    0x4108f0
  410911:	mov    bl,0xf0
  410913:	pushf  
  410914:	mov    eax,0xd92fbf94
  410919:	dec    edi
  41091a:	add    BYTE PTR [edx+esi*2],ah
  41091d:	aas    
  41091e:	xchg   esp,eax
  41091f:	fld    DWORD PTR [ebp+ebx*4-0x1a56fab3]
  410926:	sub    DWORD PTR [edi+0x2c],esp
  410929:	sahf   
  41092a:	mov    BYTE PTR [edi*4+0x6f88a7f3],bh
  410931:	push   ecx
  410932:	jmp    0x777c:0x4ed1f701
  410939:	out    dx,eax
  41093a:	cmp    BYTE PTR [edi-0x27],bl
  41093d:	sub    eax,0x8c9f032e
  410942:	aas    
  410943:	pusha  
  410944:	clc    
  410945:	(bad)  
  410946:	dec    esi
  410947:	add    eax,0xde28a741
  41094c:	test   al,0xe4
  41094e:	push   esi
  41094f:	arpl   bx,ax
  410951:	scas   al,BYTE PTR es:[edi]
  410952:	outs   dx,BYTE PTR ds:[esi]
  410953:	sti    
  410954:	xchg   edx,eax
  410955:	dec    esi
  410956:	jmp    0x410912
  410958:	in     al,dx
  410959:	imul   esp,DWORD PTR [ecx],0xffffffca
  41095c:	ins    DWORD PTR es:[edi],dx
  41095d:	hlt    
  41095e:	pushf  
  41095f:	loopne 0x4109d2
  410961:	enter  0xa6cf,0xb
  410965:	gs out dx,eax
  410967:	jns    0x410999
  410969:	pop    es
  41096a:	pop    ebx
  41096b:	es xor ebp,esi
  41096e:	sbb    dl,bl
  410970:	mov    dh,0x18
  410972:	xchg   ah,al
  410974:	je     0x410915
  410976:	in     eax,dx
  410977:	mov    cl,0xdd
  410979:	xor    bh,BYTE PTR [edi-0x4577dbb8]
  41097f:	xor    cl,BYTE PTR [esi+edi*1+0x19f63ec2]
  410986:	xor    al,0xcf
  410988:	mov    ebp,0xda37b92a
  41098d:	iret   
  41098e:	out    dx,al
  41098f:	aam    0xa0
  410991:	and    BYTE PTR [eax+0xab41011],ch
  410997:	nop
  410998:	(bad)
  41099d:	imul   edi,DWORD PTR [edi],0x2d
  4109a0:	xor    BYTE PTR [ecx],ch
  4109a2:	fwait
  4109a3:	fs retf 0x2a85
  4109a7:	adc    al,0xec
  4109a9:	imul   ebp,DWORD PTR [ebp-0x4d],0x7
  4109ad:	mov    BYTE PTR [eax],bl
  4109af:	pop    ebx
  4109b0:	sub    ecx,DWORD PTR [ebp-0x6d]
  4109b3:	or     cl,BYTE PTR [ebp-0x30]
  4109b6:	nop
  4109b7:	leave  
  4109b8:	or     eax,0x5bb5679d
  4109bd:	retf   0x8857
  4109c0:	fwait
  4109c1:	lock repnz scas eax,DWORD PTR es:[edi]
  4109c4:	dec    esi
  4109c5:	adc    edi,DWORD PTR [ebx-0x51627400]
  4109cb:	ja     0x4109c4
  4109cd:	data16 aad 0xd4
  4109d0:	lds    edx,FWORD PTR [esi-0x47507f32]
  4109d6:	or     ebp,DWORD PTR [eax+0x7f]
  4109d9:	xor    esi,ebx
  4109db:	mov    ds,WORD PTR [ebp+esi*1-0x2d4b2d4d]
  4109e2:	pusha  
  4109e3:	and    esi,DWORD PTR [eax+0x6]
  4109e6:	jae    0x410993
  4109e8:	mov    bl,0x1d
  4109ea:	call   0x9a056fa3
  4109ef:	leave  
  4109f0:	sahf   
  4109f1:	adc    BYTE PTR [ecx+edi*4],cl
  4109f4:	imul   edx,edx,0x81b13245
  4109fa:	aaa    
  4109fb:	dec    ecx
  4109fc:	fucom  st(7)
  4109fe:	lahf   
  4109ff:	call   0xb249:0xf933f71d
  410a06:	outs   dx,BYTE PTR ds:[esi]
  410a07:	lock mov bl,0x3f
  410a0a:	xor    BYTE PTR [ecx+0x66],ah
  410a0d:	mov    ah,0xe2
  410a0f:	inc    ebx
  410a10:	pop    edi
  410a11:	fs loopne 0x4109d0
  410a14:	out    0xbc,al
  410a16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a17:	loop   0x4109e9
  410a19:	mov    WORD PTR [edx+0x6e19d966],fs
  410a1f:	lock or DWORD PTR [ebp+0x62],ebx
  410a23:	aaa    
  410a24:	fsubr  DWORD PTR [edx]
  410a26:	cdq    
  410a27:	xchg   ebp,eax
  410a28:	enter  0xe886,0xdf
  410a2c:	mov    al,ds:0x9a9fc98a
  410a31:	pop    ecx
  410a32:	lea    eax,[edi-0x56dedaf2]
  410a38:	cmp    al,0x39
  410a3a:	pop    edx
  410a3b:	repnz sub bh,BYTE PTR [edi+0x5]
  410a3f:	pop    esp
  410a40:	jg     0x410aad
  410a42:	test   eax,0x2399b34c
  410a47:	in     ax,0xa9
  410a4a:	xchg   ebp,eax
  410a4b:	test   ebp,ecx
  410a4d:	icebp  
  410a4e:	icebp  
  410a4f:	call   0x95d4:0x6872f5ec
  410a56:	popa   
  410a57:	cwde   
  410a58:	adc    ebx,DWORD PTR [edx-0x4c]
  410a5b:	jge    0x410a79
  410a5d:	(bad)  
  410a5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a60:	jmp    0x5bb3:0x908aa371
  410a67:	mov    ebx,0x225f3e69
  410a6c:	jnp    0x410a09
  410a6e:	int    0x92
  410a70:	cmp    ecx,edx
  410a72:	ins    DWORD PTR es:[edi],dx
  410a73:	fiadd  DWORD PTR [edx-0x1cb083a5]
  410a79:	and    ch,BYTE PTR [esi]
  410a7b:	in     al,dx
  410a7c:	nop
  410a7d:	outs   dx,DWORD PTR ds:[esi]
  410a7e:	sub    esi,DWORD PTR [ebx]
  410a80:	adc    eax,0xd99e0cb6
  410a85:	xchg   ebp,eax
  410a86:	sub    BYTE PTR [ecx-0x70],ch
  410a89:	sbb    al,0x2f
  410a8b:	cs idiv ch
  410a8e:	sbb    DWORD PTR [ecx],edi
  410a90:	mov    ecx,0xc23d0e99
  410a95:	pop    ss
  410a96:	dec    ebx
  410a97:	test   eax,0xb5adb401
  410a9c:	shl    BYTE PTR [edx],1
  410a9e:	dec    eax
  410a9f:	fcmove st,st(6)
  410aa1:	fldcw  WORD PTR [ebx+0x57282416]
  410aa7:	inc    eax
  410aa8:	inc    edx
  410aa9:	pop    ss
  410aaa:	mov    edi,0x1090b2ef
  410aaf:	ds test eax,0x128142dc
  410ab5:	sub    ebp,DWORD PTR [esi+0x39]
  410ab8:	jnp    0x410ab3
  410aba:	pop    edx
  410abb:	cld    
  410abc:	xchg   ebp,eax
  410abd:	fiadd  DWORD PTR [edx-0x14dbd8fe]
  410ac3:	or     BYTE PTR [eax+0x30447062],cl
  410ac9:	(bad)  
  410aca:	fbld   TBYTE PTR [eax+0x7f]
  410acd:	ret    
  410ace:	adc    eax,0x17d3538f
  410ad3:	mov    al,0xf7
  410ad5:	dec    ebp
  410ad6:	lock cli 
  410ad8:	adc    ecx,DWORD PTR [eax]
  410ada:	js     0x410b00
  410adc:	xchg   ebx,eax
  410add:	sub    ah,dh
  410adf:	outs   dx,DWORD PTR ds:[esi]
  410ae0:	cmp    BYTE PTR [edi-0x155475c7],cl
  410ae6:	fst    QWORD PTR ds:0x578f50ce
  410aec:	enter  0x9afc,0x48
  410af0:	jne    0x410a78
  410af2:	das    
  410af3:	jo     0x410a99
  410af5:	push   ds
  410af6:	dec    esp
  410af7:	(bad)  
  410af8:	jb     0x410a83
  410afa:	arpl   WORD PTR [edi-0x6e],di
  410afd:	test   BYTE PTR [edx-0xc],0x7b
  410b01:	retf   0xc27a
  410b04:	pop    edi
  410b05:	out    dx,al
  410b06:	sbb    DWORD PTR [esi+0x27],edx
  410b09:	or     ecx,DWORD PTR [edx+0x5]
  410b0c:	jb     0x410ada
  410b0e:	xchg   ebx,eax
  410b0f:	div    DWORD PTR [ebp+0x64]
  410b12:	jmp    0x1d8f2707
  410b17:	lds    ebx,FWORD PTR [ebx-0x2a407ded]
  410b1d:	das    
  410b1e:	rcl    DWORD PTR [edx+eiz*8-0x1b386a39],1
  410b25:	lods   al,BYTE PTR ds:[esi]
  410b26:	loope  0x410b8f
  410b28:	push   edx
  410b29:	out    dx,eax
  410b2a:	clc    
  410b2b:	cmp    ecx,esp
  410b2d:	jg     0x410b48
  410b2f:	mov    ecx,0x46ac9890
  410b34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b35:	stos   BYTE PTR es:[edi],al
  410b36:	and    al,0x76
  410b38:	popf   
  410b39:	add    DWORD PTR [edx+0x6c4ff525],edi
  410b3f:	sbb    ah,dl
  410b41:	and    ah,BYTE PTR [eax+0x6f]
  410b44:	test   DWORD PTR [ecx-0x2a9b835c],esp
  410b4a:	mov    ah,0xd8
  410b4c:	(bad)  
  410b4d:	or     DWORD PTR [ecx+0x3bed4d14],edi
  410b53:	mov    WORD PTR [edx-0x12],?
  410b56:	call   0x105616b3
  410b5b:	cmp    eax,0x2025403c
  410b60:	xchg   edi,eax
  410b61:	aaa    
  410b62:	ret    
  410b63:	neg    BYTE PTR [eax+eiz*1]
  410b66:	inc    ecx
  410b67:	in     eax,0xc3
  410b69:	sub    eax,0x6f282efb
  410b6e:	in     al,dx
  410b6f:	btr    DWORD PTR [edx+0x59849cf9],esi
  410b76:	dec    ecx
  410b77:	and    DWORD PTR [eax],ecx
  410b79:	sub    ah,BYTE PTR [ecx]
  410b7b:	jno    0x410b14
  410b7d:	mov    al,0x8e
  410b7f:	xchg   ecx,eax
  410b80:	adc    al,0x91
  410b82:	arpl   WORD PTR [eax],dx
  410b84:	rcr    DWORD PTR [ebx+0x5a],0x45
  410b88:	ja     0x410b11
  410b8a:	cmp    ebp,edx
  410b8c:	sbb    ecx,DWORD PTR [edx+0x7fe32fb7]
  410b92:	dec    esi
  410b93:	xchg   ebx,eax
  410b94:	xor    BYTE PTR ds:0xc6281aa8,bh
  410b9a:	dec    ecx
  410b9b:	push   edx
  410b9c:	cmp    al,0x5c
  410b9e:	mov    al,ds:0xb96a4ffd
  410ba3:	(bad)  
  410ba4:	mov    al,ds:0xab497780
  410ba9:	mov    ah,al
  410bab:	mov    gs,WORD PTR [ecx]
  410bad:	push   edi
  410bae:	es retf 0xaed4
  410bb2:	xor    BYTE PTR [edx-0x1175a774],0xae
  410bb9:	pop    eax
  410bba:	repz ja 0x410c2e
  410bbd:	jne    0x410c1e
  410bbf:	lea    esi,[esi+ebx*4-0x41cea6ca]
  410bc6:	int3   
  410bc7:	push   ds
  410bc8:	int3   
  410bc9:	jl     0x410c30
  410bcb:	cmp    bl,bh
  410bcd:	adc    al,0xc2
  410bcf:	xor    ebp,edx
  410bd1:	mov    DWORD PTR [edx+0x7000dd95],edi
  410bd7:	(bad)  
  410bd8:	mov    al,ds:0x63f43885
  410bdd:	inc    esi
  410bde:	int3   
  410bdf:	call   0x62ee:0x661f82e9
  410be6:	cmp    BYTE PTR [ebx],bl
  410be8:	mov    dh,0xdd
  410bea:	jle    0x410c17
  410bec:	fst    st(7)
  410bee:	pop    ds
  410bef:	mov    DWORD PTR [eax+0x4a31984f],ecx
  410bf5:	push   di
  410bf7:	cmc    
  410bf8:	sbb    edx,DWORD PTR [ebx-0x69ecaa69]
  410bfe:	adc    edi,edx
  410c00:	cmp    DWORD PTR gs:[eax],edx
  410c03:	pop    ds
  410c04:	test   BYTE PTR [edi-0x1a8c568a],ch
  410c0a:	mov    al,0x99
  410c0c:	jo     0x410c5c
  410c0e:	pop    esi
  410c0f:	jg     0x410c4d
  410c11:	ret    0xaa8c
  410c14:	pop    edi
  410c15:	pop    edi
  410c16:	mov    eax,0x31135abd
  410c1b:	pop    edi
  410c1c:	out    dx,eax
  410c1d:	xor    edx,esp
  410c1f:	js     0x410bc1
  410c21:	loope  0x410bfc
  410c23:	int3   
  410c24:	xor    edi,DWORD PTR [esi]
  410c26:	and    eax,0x49dd204f
  410c2b:	bound  edi,QWORD PTR [edi-0x415128b9]
  410c31:	test   al,0x28
  410c33:	push   ds
  410c34:	sbb    DWORD PTR [esi-0x531545e5],esi
  410c3a:	fcomp  st(3)
  410c3c:	arpl   WORD PTR ds:0xb38c3885,di
  410c42:	inc    ecx
  410c43:	mov    ch,0xfa
  410c45:	mov    al,ds:0xa5697c81
  410c4a:	pop    ss
  410c4b:	stos   DWORD PTR es:[edi],eax
  410c4c:	sub    edx,DWORD PTR [eax-0x50]
  410c4f:	push   edi
  410c50:	mov    dh,0x3c
  410c52:	in     al,0x58
  410c54:	xor    al,0xf
  410c56:	(bad)  
  410c57:	repnz repz popa 
  410c5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c5b:	or     dh,BYTE PTR [ebp+0x5ed6a24f]
  410c61:	pop    edi
  410c62:	pop    esi
  410c63:	scas   al,BYTE PTR es:[edi]
  410c64:	jecxz  0x410c7d
  410c66:	mov    esi,0xca0d6e60
  410c6b:	stc    
  410c6c:	mov    BYTE PTR [ecx+0x3f5ae2d7],dl
  410c72:	and    DWORD PTR [ecx-0x63934859],0xfffffff8
  410c79:	push   ebp
  410c7a:	clc    
  410c7b:	hlt    
  410c7c:	mov    eax,ds:0x98d7af6
  410c81:	and    DWORD PTR [ebx+0x5ed3be83],esp
  410c87:	mov    ch,0x71
  410c89:	and    BYTE PTR [eax],0xad
  410c8c:	inc    ebx
  410c8d:	and    ah,BYTE PTR [eax-0x3a76bb00]
  410c93:	popa   
  410c94:	xchg   BYTE PTR [ecx],bl
  410c96:	adc    eax,0x1e3f61e
  410c9b:	add    eax,0xfe7af283
  410ca0:	push   cs
  410ca1:	mov    ?,WORD PTR [esi+0x57b86ec]
  410ca7:	fstp   TBYTE PTR [edi+0x1b]
  410caa:	in     al,0x6f
  410cac:	test   DWORD PTR ds:0x5bbdd1b7,0x28d0248e
  410cb6:	cld    
  410cb7:	mov    BYTE PTR [ecx+edx*1-0x453039dc],bh
  410cbe:	int3   
  410cbf:	loope  0x410d14
  410cc1:	mov    cs,WORD PTR [esi]
  410cc3:	retf   
  410cc4:	fisubr WORD PTR [ecx+0x65]
  410cc7:	fidivr DWORD PTR [ebp+0x309e35b0]
  410ccd:	mov    ebx,0x95ec1981
  410cd2:	test   BYTE PTR [ebx-0x2e],al
  410cd5:	(bad)  
  410cd6:	int    0xf6
  410cd8:	pop    ebx
  410cd9:	div    BYTE PTR [edx]
  410cdb:	add    eax,0x80cc11a8
  410ce0:	popf   
  410ce1:	mov    ecx,esp
  410ce3:	sbb    dh,BYTE PTR [edx]
  410ce5:	inc    ecx
  410ce6:	push   0x31092303
  410ceb:	(bad)  
  410cec:	mov    bl,0xe5
  410cee:	(bad)  
  410cef:	out    0x10,al
  410cf1:	cld    
  410cf2:	int    0xc5
  410cf4:	ss repz jecxz 0x410d60
  410cf8:	(bad)  
  410cf9:	lock jp 0x410d53
  410cfc:	xor    BYTE PTR [ebp-0x9f0381f],bh
  410d02:	loop   0x410d33
  410d04:	pop    ss
  410d05:	mov    fs,ecx
  410d07:	mov    edx,0xb5df57dd
  410d0c:	xlat   BYTE PTR ds:[ebx]
  410d0d:	jecxz  0x410d86
  410d0f:	jns    0x410cde
  410d11:	mov    ecx,0x9d49551e
  410d16:	or     BYTE PTR [ebp+0x33fbcd73],ah
  410d1c:	mov    eax,0xe738cd5c
  410d21:	mov    ebx,0x3c368f8c
  410d26:	add    ah,BYTE PTR [eax+ebp*8]
  410d29:	add    ebp,edx
  410d2b:	push   0x30e143d4
  410d30:	push   esi
  410d31:	and    al,0x7
  410d33:	mov    al,ds:0xa7a235e6
  410d38:	pusha  
  410d39:	arpl   bx,cx
  410d3b:	jg     0x410d39
  410d3d:	fwait
  410d3e:	pop    ebp
  410d3f:	hlt    
  410d40:	xchg   ebx,eax
  410d41:	sbb    DWORD PTR [eax+0x21ba72bb],ebx
  410d47:	fiadd  DWORD PTR [ebx+0x7423de2f]
  410d4d:	into   
  410d4e:	test   BYTE PTR ds:0xb2578c68,bl
  410d54:	mov    esp,0xafa9c5
  410d59:	fadd   DWORD PTR [eax]
  410d5b:	mov    al,0x12
  410d5d:	imul   ebx,DWORD PTR [ecx-0x72],0x29ec2b2
  410d64:	jns    0x410d0f
  410d66:	enter  0x421b,0x4
  410d6a:	dec    ebx
  410d6b:	cdq    
  410d6c:	xor    BYTE PTR [edx],bh
  410d6e:	inc    ebp
  410d6f:	pop    ebp
  410d70:	out    dx,al
  410d71:	out    dx,eax
  410d72:	ins    BYTE PTR es:[edi],dx
  410d73:	out    0x48,al
  410d75:	sub    DWORD PTR [ebp+0x6e],ebx
  410d78:	les    edi,FWORD PTR [ebx+0x28]
  410d7b:	add    BYTE PTR [ebx+0x34],ah
  410d7e:	imul   ebx,esi,0x7e
  410d81:	add    al,0xde
  410d83:	jnp    0x410e04
  410d85:	cmp    al,0xc0
  410d87:	jge    0x410d75
  410d89:	xchg   edx,eax
  410d8a:	cmp    esi,ecx
  410d8c:	adc    eax,0xb19e04df
  410d91:	mov    cl,0x44
  410d93:	mov    ds:0xff9a0bf1,eax
  410d98:	not    ch
  410d9a:	out    dx,eax
  410d9b:	push   ss
  410d9c:	inc    edi
  410d9d:	or     bl,BYTE PTR [ebx]
  410d9f:	out    0xbb,eax
  410da1:	arpl   WORD PTR [ebx-0x68dd17f],di
  410da7:	pop    sp
  410da9:	bound  eax,QWORD PTR [ebx+0x50]
  410dac:	xchg   esi,eax
  410dad:	call   0x3293:0x81e574b3
  410db4:	cmp    ecx,DWORD PTR [edi]
  410db6:	rcr    DWORD PTR [ecx+0x31],cl
  410db9:	push   0x3d
  410dbb:	and    DWORD PTR ds:[esi-0xc710aaf],esp
  410dc2:	nop
  410dc3:	fadd   st(2),st
  410dc5:	mov    ah,0x78
  410dc7:	fcmovbe st,st(6)
  410dc9:	jmp    0xa417:0x619ecb1f
  410dd0:	push   edi
  410dd1:	sbb    eax,0xf03e196f
  410dd6:	sbb    eax,0x20897d81
  410ddb:	ins    BYTE PTR es:[edi],dx
  410ddc:	das    
  410ddd:	scas   eax,DWORD PTR es:[edi]
  410dde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ddf:	popa   
  410de0:	xchg   esp,esp
  410de2:	inc    ebp
  410de3:	cwde   
  410de4:	dec    edx
  410de5:	pop    DWORD PTR [eax+0x54]
  410de8:	push   esp
  410de9:	cld    
  410dea:	mov    bl,0xd1
  410dec:	xlat   BYTE PTR ds:[ebx]
  410ded:	aad    0xb
  410def:	mov    esp,0xc9a4832
  410df4:	out    dx,al
  410df5:	add    eax,0xe6b42e96
  410dfa:	cdq    
  410dfb:	adc    DWORD PTR [eax],ecx
  410dfd:	loope  0x410e2d
  410dff:	push   ebx
  410e00:	mov    eax,ds:0x75981400
  410e05:	fadd   DWORD PTR [ebp-0x5e3d735d]
  410e0b:	cmp    ebx,esp
  410e0d:	repz retf 
  410e0f:	adc    BYTE PTR [ebx],0x5e
  410e12:	xchg   DWORD PTR [ecx-0x21],edi
  410e15:	pop    ds
  410e16:	or     ah,BYTE PTR [edx-0x63]
  410e19:	push   es
  410e1a:	sub    al,0x58
  410e1c:	das    
  410e1d:	shl    BYTE PTR [edx+0x41],0x10
  410e21:	lods   al,BYTE PTR ds:[esi]
  410e22:	dec    ecx
  410e23:	pop    edx
  410e24:	cld    
  410e25:	add    al,0x9f
  410e27:	frstor [ecx]
  410e29:	gs adc al,0xbf
  410e2c:	push   esp
  410e2d:	pop    ebp
  410e2e:	push   DWORD PTR [ebx]
  410e30:	(bad)
  410e34:	push   es
  410e35:	dec    ebp
  410e36:	mov    bh,0xef
  410e38:	push   ebx
  410e39:	aaa    
  410e3a:	sahf   
  410e3b:	pop    edx
  410e3c:	fldenv ds:0xfc015d39
  410e42:	pop    esi
  410e43:	push   edi
  410e44:	dec    ecx
  410e45:	das    
  410e46:	test   DWORD PTR [esi-0x5d],eax
  410e49:	lods   eax,DWORD PTR ds:[esi]
  410e4a:	push   ebx
  410e4c:	mov    ch,0x4c
  410e4e:	lahf   
  410e4f:	outs   dx,DWORD PTR ds:[esi]
  410e50:	test   eax,0x21ea18c3
  410e55:	add    eax,0xa97928a3
  410e5a:	bound  esi,QWORD PTR [esp+esi*1-0x43777d4f]
  410e61:	mov    ebp,0x80d46be5
  410e66:	or     eax,0xd9307376
  410e6b:	cwde   
  410e6c:	mov    fs,WORD PTR [ebp+0x386ad514]
  410e72:	or     esi,DWORD PTR [edi-0x385954c8]
  410e78:	mov    bh,0x8f
  410e7a:	inc    esi
  410e7b:	and    ebp,DWORD PTR [esi+eiz*8+0x8]
  410e7f:	lahf   
  410e80:	lds    eax,FWORD PTR [eax]
  410e82:	pop    eax
  410e83:	lea    eax,[ebp-0x4cabd3a]
  410e89:	(bad)  
  410e8a:	repnz aas 
  410e8c:	ret    
  410e8d:	imul   edx,ebp,0x83d6016f
  410e93:	and    eax,0x5f6fada7
  410e98:	cmc    
  410e99:	out    0x84,eax
  410e9b:	inc    edx
  410e9c:	loope  0x410e9d
  410e9e:	or     DWORD PTR es:[ebx+edi*2+0x69],0x6b55537b
  410ea7:	sub    al,BYTE PTR [edi-0x4125e5d7]
  410ead:	mov    bl,0xe1
  410eaf:	outs   dx,BYTE PTR ds:[esi]
  410eb0:	dec    esp
  410eb1:	test   eax,0x58562c0
  410eb6:	xor    dl,BYTE PTR [edi-0x7c0fec07]
  410ebc:	cli    
  410ebd:	dec    esi
  410ebe:	xor    al,bl
  410ec0:	mov    eax,ds:0x5f708240
  410ec5:	push   0x1b
  410ec7:	out    0xa4,al
  410ec9:	push   eax
  410eca:	leave  
  410ecb:	mov    dl,BYTE PTR [edx+ecx*2+0x6de914c4]
  410ed2:	or     dh,BYTE PTR [ebx+0x65ec3c0b]
  410ed8:	lods   al,BYTE PTR ds:[esi]
  410ed9:	inc    edx
  410eda:	mov    DWORD PTR [ebx+0x19a80fc6],ecx
  410ee0:	mov    ebx,0x66011ce4
  410ee5:	sbb    ebx,DWORD PTR [esp+ecx*4-0x7e]
  410ee9:	inc    ebp
  410eea:	retf   
  410eeb:	dec    esp
  410eec:	fwait
  410eed:	fwait
  410eee:	sti    
  410eef:	ins    DWORD PTR es:[edi],dx
  410ef0:	ss inc ecx
  410ef2:	inc    ebx
  410ef3:	or     DWORD PTR [edi+0x1a],0xe615cfe3
  410efa:	pop    edi
  410efb:	and    edx,0x72a610d6
  410f01:	mov    bh,BYTE PTR [ebp+0x19]
  410f04:	outs   dx,BYTE PTR ds:[esi]
  410f05:	je     0x410f61
  410f07:	sbb    DWORD PTR [eax-0x635dab42],esi
  410f0d:	push   esi
  410f0e:	into   
  410f0f:	retf   
  410f10:	push   ss
  410f11:	pop    ecx
  410f12:	pop    es
  410f13:	jae    0x410f83
  410f15:	dec    eax
  410f16:	lods   eax,DWORD PTR ds:[esi]
  410f17:	fistp  WORD PTR [ebp-0x3ea65b35]
  410f1d:	cmp    edx,0xffffffe7
  410f20:	ficomp DWORD PTR [ecx+0x1295a798]
  410f26:	sbb    ah,dh
  410f28:	fst    DWORD PTR [ebx]
  410f2a:	dec    eax
  410f2b:	(bad)  
  410f2c:	(bad)  
  410f2e:	mov    esp,0x6e468318
  410f33:	pusha  
  410f34:	stc    
  410f35:	js     0x410f4f
  410f37:	repz scas al,BYTE PTR es:[edi]
  410f39:	sub    eax,DWORD PTR [ebx+0x5eef71e3]
  410f3f:	push   0x39f16bf7
  410f44:	rcr    DWORD PTR [esi+0x3b4b4295],cl
  410f4a:	lds    ebx,FWORD PTR [edx]
  410f4c:	push   cs
  410f4d:	ins    BYTE PTR es:[edi],dx
  410f4e:	mov    ds:0xfb6bb0f4,al
  410f53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f54:	in     eax,0x92
  410f56:	out    dx,al
  410f57:	gs push cs
  410f59:	add    al,0x92
  410f5b:	push   0x302569ff
  410f60:	iret   
  410f61:	(bad)  
  410f63:	xchg   edx,eax
  410f64:	out    dx,al
  410f65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f66:	lea    esi,[esi-0x25]
  410f69:	sar    DWORD PTR ds:0x2c7f5829,cl
  410f6f:	int    0x9
  410f71:	es mov ah,0xac
  410f74:	mov    ebx,0xd3e65f9e
  410f79:	out    0x3d,al
  410f7b:	lahf   
  410f7c:	mov    ds:0x73b3d00a,al
  410f81:	ins    BYTE PTR es:[edi],dx
  410f82:	or     DWORD PTR [edi+0x7b9a8f9d],edx
  410f88:	xchg   esp,eax
  410f89:	sbb    DWORD PTR [ebx-0x5edd52de],0xffffff9b
  410f90:	sbb    eax,DWORD PTR [esp+edx*8+0x421cf1]
  410f97:	cmc    
  410f98:	inc    eax
  410f99:	leave  
  410f9a:	mov    ebp,0xe29df8c9
  410f9f:	shl    BYTE PTR [ebx],1
  410fa1:	push   edi
  410fa2:	pop    ds
  410fa3:	sub    BYTE PTR [ecx-0x23],bh
  410fa6:	lods   al,BYTE PTR ds:[esi]
  410fa7:	mov    edx,0x5f427330
  410fac:	ret    
  410fad:	(bad)  
  410fae:	into   
  410faf:	and    ebx,DWORD PTR [ecx-0x2d0e266c]
  410fb5:	push   eax
  410fb6:	xor    eax,DWORD PTR [edi]
  410fb8:	(bad)  
  410fb9:	jp     0x410f82
  410fbb:	pop    edi
  410fbc:	push   es
  410fbd:	stc    
  410fbe:	cdq    
  410fbf:	(bad)  
  410fc0:	jle    0x41100a
  410fc2:	mov    ecx,0xac1c4a7b
  410fc7:	shl    dh,cl
  410fc9:	jo     0x411001
  410fcb:	dec    ebx
  410fcc:	xor    al,0xb5
  410fce:	jmp    0x410f65
  410fd0:	(bad)  
  410fd1:	xchg   esi,eax
  410fd2:	and    al,0x30
  410fd4:	int    0xd9
  410fd6:	xchg   esi,eax
  410fd7:	test   DWORD PTR [ebp-0x3aa1b612],0x80c47977
  410fe1:	xor    DWORD PTR [esi],edx
  410fe3:	(bad)  
  410fe4:	pop    edx
  410fe5:	ret    
  410fe6:	aad    0xdf
  410fe8:	add    ecx,ebx
  410fea:	mov    ds:0x7edb10cd,eax
  410fef:	loopne 0x410fb4
  410ff1:	outs   dx,DWORD PTR ds:[esi]
  410ff2:	shr    BYTE PTR [esi+eax*2],0x6c
  410ff6:	(bad)
  410ff9:	sub    cl,BYTE PTR [esi-0x2ce66ea7]
  410fff:	hlt    
  411000:	push   ss
  411001:	push   ecx
  411002:	add    edx,edi
  411004:	dec    ebp
  411005:	jp     0x410fb3
  411007:	stos   DWORD PTR es:[edi],eax
  411008:	mov    ah,0x50
  41100a:	mov    cl,BYTE PTR [esi+0x4dd2e025]
  411010:	sbb    BYTE PTR [edi+0x22],bl
  411013:	stos   DWORD PTR es:[edi],eax
  411014:	add    dh,BYTE PTR [ebx]
  411016:	arpl   WORD PTR [ecx+esi*1],bx
  411019:	scas   eax,DWORD PTR es:[edi]
  41101a:	adc    al,0xc4
  41101c:	add    esp,DWORD PTR [esi]
  41101e:	das    
  41101f:	dec    BYTE PTR [edi]
  411021:	jmp    0x411039
  411023:	push   ebp
  411024:	imul   ebx,esi,0xc96d5557
  41102a:	or     ecx,DWORD PTR [edi-0x13]
  41102d:	idiv   DWORD PTR [ebx-0x60]
  411030:	iret   
  411031:	ins    BYTE PTR es:[edi],dx
  411032:	retf   0xcb52
  411035:	or     DWORD PTR [edx+0x2],esp
  411038:	aam    0x25
  41103a:	fstp   TBYTE PTR [eax-0x50]
  41103d:	out    dx,al
  41103e:	jmp    0x64c4:0xf098b603
  411045:	xchg   ebx,eax
  411046:	sub    DWORD PTR [ebx+0x1d],eax
  411049:	fsubr  st(1),st
  41104b:	ja     0x410ffc
  41104d:	(bad)
  411050:	data16 (bad) 
  411052:	mov    ah,0x83
  411054:	dec    edi
  411055:	pop    ecx
  411056:	and    bh,BYTE PTR [ebp-0x7b]
  411059:	ja     0x4110aa
  41105b:	ret    
  41105c:	and    eax,0x8acf9ec4
  411061:	mov    esp,edx
  411063:	lods   al,BYTE PTR ds:[esi]
  411064:	ins    BYTE PTR es:[edi],dx
  411065:	pop    ebx
  411066:	sbb    ch,BYTE PTR [eax+0x4bdd2455]
  41106c:	pop    ecx
  41106d:	lock pop esp
  41106f:	arpl   WORD PTR [eax+0x10],si
  411072:	gs call 0xac7f5b5b
  411078:	sub    ecx,esp
  41107a:	daa    
  41107b:	aad    0xdd
  41107d:	push   esi
  41107e:	cmp    eax,0x516c3b5
  411083:	inc    esp
  411084:	push   ecx
  411085:	leave  
  411086:	jge    0x411025
  411088:	dec    ebp
  411089:	xchg   edx,eax
  41108a:	xchg   ecx,eax
  41108b:	rcl    BYTE PTR [ebx-0x5fd1290c],0x37
  411092:	stos   BYTE PTR es:[edi],al
  411093:	xor    al,BYTE PTR [edx-0x4dc320a0]
  411099:	into   
  41109a:	mov    esp,0x732e3530
  41109f:	shr    BYTE PTR [esi+0x2a],cl
  4110a2:	inc    eax
  4110a3:	adc    bh,dh
  4110a5:	sub    BYTE PTR ds:0xe3646a7,al
  4110ab:	push   ecx
  4110ac:	or     DWORD PTR [ecx+0x43],ecx
  4110af:	mov    ah,0x9
  4110b1:	xchg   ebp,eax
  4110b2:	cmp    al,BYTE PTR [edi]
  4110b4:	mov    ebp,0x8b5823cc
  4110b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110ba:	pop    ds
  4110bb:	or     al,0x81
  4110bd:	stos   BYTE PTR es:[edi],al
  4110be:	aas    
  4110bf:	cwde   
  4110c0:	stos   DWORD PTR es:[edi],eax
  4110c1:	push   ecx
  4110c2:	ins    DWORD PTR es:[edi],dx
  4110c3:	sub    DWORD PTR [esi],edi
  4110c5:	adc    DWORD PTR [edx-0x6d82cda1],eax
  4110cb:	ss push ss
  4110cd:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4110cf:	dec    esp
  4110d0:	je     0x411074
  4110d2:	hlt    
  4110d3:	in     al,0x88
  4110d5:	dec    esi
  4110d6:	out    dx,al
  4110d7:	push   edx
  4110d8:	push   esi
  4110d9:	xchg   esi,eax
  4110da:	add    al,0xb9
  4110dc:	cs (bad) 
  4110de:	cmp    bh,BYTE PTR [edi]
  4110e0:	out    dx,eax
  4110e1:	and    eax,0xffffff88
  4110e4:	mov    ebx,0x4f9d3bb1
  4110e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110eb:	mov    ch,bl
  4110ed:	nop
  4110ee:	xor    eax,ecx
  4110f0:	cli    
  4110f1:	adc    ah,bl
  4110f3:	test   eax,0x3a443e2e
  4110f8:	neg    DWORD PTR [ebp+edx*4+0x2e30488e]
  4110ff:	imul   esp,DWORD PTR [ebx+0x628ad1d7],0x95e8e0bf
  411109:	(bad)  
  41110b:	dec    ebx
  41110c:	int3   
  41110d:	push   edi
  41110e:	outs   dx,BYTE PTR ds:[esi]
  41110f:	dec    esi
  411110:	ja     0x41117f
  411112:	in     eax,dx
  411113:	pop    ebp
  411114:	je     0x411148
  411116:	add    BYTE PTR [esi+0x40],0xa
  41111a:	mov    cl,0x6e
  41111c:	test   eax,0x57886a9e
  411121:	mov    ebx,0x1f5de142
  411126:	mov    DWORD PTR [esi],eax
  411128:	cli    
  411129:	sub    al,BYTE PTR ds:0x3537e4b6
  41112f:	adc    DWORD PTR [ebx+0x42],edi
  411132:	mov    WORD PTR [ebp+0x74],cs
  411135:	mov    edx,0x94b0e2b4
  41113a:	ficomp WORD PTR [edx+0x5e1f3f0b]
  411140:	sub    al,0x11
  411142:	mov    esi,edi
  411144:	scas   eax,DWORD PTR es:[edi]
  411145:	pop    ecx
  411146:	adc    dh,BYTE PTR [edi+edi*2-0x6d]
  41114a:	cmp    esp,DWORD PTR [ecx-0x6f]
  41114d:	push   0x61a41e06
  411152:	mov    eax,ds:0x733a615c
  411157:	js     0x41112e
  411159:	jmp    0xa191:0xc685f870
  411160:	cmc    
  411161:	fs mov bh,0x46
  411164:	sbb    ecx,esp
  411166:	lods   al,BYTE PTR ds:[esi]
  411167:	cmp    BYTE PTR [edi+0x14e44294],bl
  41116d:	cld    
  41116e:	data16 add ah,BYTE PTR [edx-0x45e80a3a]
  411175:	dec    edx
  411176:	jmp    0x41114d
  411178:	icebp  
  411179:	or     DWORD PTR ss:0x8db500e3,esi
  411180:	dec    esi
  411181:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411182:	sub    eax,0xc1a39bbe
  411187:	cmp    al,0xa9
  411189:	fmulp  st(0),st
  41118b:	jmp    0x9840:0x3a203b00
  411192:	mov    dl,0x33
  411194:	mov    ?,WORD PTR [edx+0xe]
  411197:	shl    BYTE PTR [eax],1
  411199:	mov    dl,0x74
  41119b:	outs   dx,DWORD PTR ds:[esi]
  41119c:	sbb    eax,0x1f43fc99
  4111a1:	ss test eax,0xf6bbd360
  4111a7:	imul   edx,DWORD PTR [esi],0x37
  4111aa:	jl     0x41117d
  4111ac:	lds    edi,FWORD PTR [ebx]
  4111ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111af:	mov    gs,WORD PTR [esi]
  4111b1:	xchg   DWORD PTR [ebx-0x4f],esi
  4111b4:	fld    QWORD PTR [edx+0x25]
  4111b7:	jecxz  0x41119b
  4111b9:	pop    ss
  4111ba:	lds    esp,FWORD PTR [esi+0x29]
  4111bd:	test   DWORD PTR [edi-0x56],edx
  4111c0:	call   0xc617:0x98e4727b
  4111c7:	fwait
  4111c8:	cmc    
  4111c9:	(bad)  
  4111ca:	xchg   DWORD PTR [edx+0x17492f0c],eax
  4111d0:	sub    dl,bl
  4111d2:	inc    eax
  4111d3:	xchg   edi,eax
  4111d4:	xor    DWORD PTR [ecx-0x17],esi
  4111d7:	mov    bl,0xea
  4111d9:	arpl   WORD PTR [edx],sp
  4111db:	mov    cl,0xf2
  4111dd:	in     eax,0xbb
  4111df:	sub    DWORD PTR [ecx+0x14d98097],0xffffffe8
  4111e6:	xor    ch,bh
  4111e8:	dec    esp
  4111e9:	(bad)  
  4111ea:	cmp    edi,DWORD PTR [edx-0xa5b2b47]
  4111f0:	aas    
  4111f1:	jl     0x411264
  4111f3:	cli    
  4111f4:	adc    eax,0x48a66a85
  4111f9:	dec    esp
  4111fa:	imul   eax,DWORD PTR [ebp-0x2800bfb8],0xec3ba761
  411204:	or     bh,BYTE PTR [ebx+0x4b]
  411207:	test   DWORD PTR [edx+ecx*8-0x27],ebx
  41120b:	ja     0x411190
  41120d:	dec    edx
  41120e:	mov    BYTE PTR [edx],al
  411210:	fstp   QWORD PTR [ebx-0x776f9123]
  411216:	gs jmpw 0xc3e3
  41121b:	jmp    DWORD PTR [eax+0x176ab108]
  411221:	push   ebx
  411222:	sahf   
  411223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411224:	cwde   
  411225:	mov    edi,0xdd13f806
  41122a:	pushf  
  41122b:	int3   
  41122c:	mov    cl,0x1e
  41122e:	addr16 hlt 
  411230:	out    0xaa,eax
  411232:	push   eax
  411233:	cmp    al,0x4
  411235:	jns    0x41124b
  411237:	push   0x749be9b9
  41123c:	and    DWORD PTR [ebp+0x73],esi
  41123f:	das    
  411240:	jb     0x41122a
  411242:	lock mov esi,0xc6373b6b
  411248:	fwait
  411249:	xor    bh,BYTE PTR [edx]
  41124b:	push   edx
  41124c:	dec    ebx
  41124d:	push   eax
  41124e:	shl    DWORD PTR [eax+0x15ee1100],0x66
  411255:	or     dl,BYTE PTR [si]
  411258:	jbe    0x4112ba
  41125a:	push   0xffffff83
  41125c:	data16 adc BYTE PTR [ecx-0x2e35d5f],cl
  411263:	neg    ecx
  411265:	push   cs
  411266:	dec    esp
  411267:	inc    ebp
  411268:	into   
  411269:	fstp   st(4)
  41126b:	sbb    DWORD PTR [ebx],ebp
  41126d:	fild   DWORD PTR [eax+0x7a]
  411270:	push   ecx
  411271:	xor    al,0x15
  411273:	pushf  
  411274:	cli    
  411275:	cld    
  411276:	pop    eax
  411277:	and    ecx,DWORD PTR [esi]
  411279:	adc    edi,DWORD PTR [edi+0x76]
  41127c:	push   ecx
  41127d:	push   0xd
  41127f:	jnp    0x4112ad
  411281:	push   eax
  411282:	outs   dx,DWORD PTR ds:[esi]
  411283:	xor    al,0x43
  411285:	push   ecx
  411286:	mov    ebp,0xc85c6672
  41128b:	in     eax,dx
  41128c:	mov    esi,esp
  41128e:	cmp    al,0x6
  411290:	pop    ebp
  411291:	jb     0x411294
  411293:	mov    ds:0x3b18e3ab,eax
  411298:	sbb    eax,0xd8ecdd81
  41129d:	mov    esi,0xe4273d73
  4112a2:	jae    0x4112b1
  4112a4:	lods   al,BYTE PTR ds:[esi]
  4112a5:	test   al,0x25
  4112a7:	iret   
  4112a8:	(bad)  
  4112a9:	mov    ch,0x82
  4112ab:	ret    
  4112ac:	mov    esi,0x402648f7
  4112b1:	(bad)  
  4112b2:	fild   DWORD PTR [eax+0x47]
  4112b5:	push   ecx
  4112b6:	call   0x4841a6c6
  4112bb:	sbb    al,0x36
  4112bd:	fbstp  TBYTE PTR [ebp-0x10]
  4112c0:	mov    ebp,0xe2cdbe9
  4112c5:	jae    0x4112d1
  4112c7:	aad    0x7a
  4112c9:	or     eax,0x2274134
  4112ce:	(bad)  
  4112cf:	popf   
  4112d0:	fdiv   DWORD PTR [esi-0x2666e80e]
  4112d6:	lahf   
  4112d7:	mov    ecx,0x7962bfd3
  4112dc:	sub    ebp,ebp
  4112de:	fcompp 
  4112e0:	ss push ebp
  4112e2:	test   BYTE PTR [edx+0x3f],cl
  4112e5:	out    0x88,al
  4112e7:	fidiv  DWORD PTR [eax]
  4112e9:	mov    esp,0xd9e22143
  4112ee:	icebp  
  4112ef:	mov    BYTE PTR [ebp-0x63],bl
  4112f2:	bnd jp 0x4112b0
  4112f5:	fs dec eax
  4112f7:	cld    
  4112f8:	fsubr  DWORD PTR [edx]
  4112fa:	xor    bl,dh
  4112fc:	jne    0x411284
  4112fe:	into   
  4112ff:	or     ebp,DWORD PTR [esi+0x459904c5]
  411305:	lock mov eax,0x2c319c8a
  41130b:	mov    edi,0x6ba9619c
  411310:	pop    edi
  411311:	pop    edx
  411312:	out    0xa9,al
  411314:	repnz mov ds:0x33de524d,eax
  41131a:	jl     0x411358
  41131c:	ja     0x41136b
  41131e:	dec    eax
  41131f:	xchg   edi,eax
  411320:	outs   dx,BYTE PTR ds:[esi]
  411321:	not    DWORD PTR [esi]
  411323:	sahf   
  411324:	int3   
  411325:	repnz clc 
  411327:	dec    ecx
  411328:	sub    al,0x29
  41132a:	test   BYTE PTR [ebp+0x42],bl
  41132d:	pop    ds
  41132e:	push   edx
  41132f:	jle    0x411300
  411331:	in     eax,0x22
  411333:	inc    edi
  411334:	add    DWORD PTR [edx+0x786203e3],0x31
  41133b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41133c:	mov    esp,0x55af55bc
  411341:	jns    0x411365
  411343:	jbe    0x4113a4
  411345:	pop    esi
  411346:	sbb    eax,0xa1111a79
  41134b:	xchg   esi,eax
  41134c:	mov    ch,cl
  41134e:	and    al,0x62
  411350:	mov    cl,0xf1
  411352:	push   0xa95f362f
  411357:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411358:	js     0x4113bb
  41135a:	add    bl,BYTE PTR [ebx]
  41135c:	aad    0xb6
  41135e:	cmp    BYTE PTR [ebx-0xf48bb13],al
  411364:	imul   esi,DWORD PTR [eax],0x42
  411367:	outs   dx,BYTE PTR ds:[esi]
  411368:	push   edi
  411369:	push   cs
  41136a:	(bad)  [edi*1-0x5c287b54]
  411371:	jmp    0x4112fe
  411373:	jbe    0x411307
  411375:	mov    dl,0xc3
  411377:	jne    0x4113a9
  411379:	imul   esp,DWORD PTR [esi+edi*4-0x20],0x79e88230
  411381:	and    DWORD PTR [eax],ebp
  411383:	es jmp 0xa51986d9
  411389:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41138a:	sub    edx,DWORD PTR [eax+ecx*2]
  41138d:	mov    ds:0x4fe5d6fe,al
  411392:	mov    ds:0xda044fad,al
  411397:	mov    ch,0xe3
  411399:	out    dx,eax
  41139a:	cdq    
  41139b:	cmp    BYTE PTR [ebx-0x65],bl
  41139e:	xor    ah,al
  4113a0:	dec    ebp
  4113a1:	jmp    0x3fd1:0x73547ac
  4113a8:	clc    
  4113a9:	test   eax,0xdbab717a
  4113ae:	adc    dh,BYTE PTR [edi+0x73a0d71]
  4113b4:	adc    ebp,ebp
  4113b6:	sti    
  4113b7:	adc    DWORD PTR [edi+edx*1+0x6ddf8d1a],esi
  4113be:	inc    eax
  4113bf:	ins    BYTE PTR es:[edi],dx
  4113c0:	cwde   
  4113c1:	inc    esp
  4113c2:	inc    ebp
  4113c3:	test   DWORD PTR [esi-0x4e89167a],eax
  4113c9:	jp     0x411406
  4113cb:	dec    edi
  4113cc:	jb     0x4113a6
  4113ce:	into   
  4113cf:	ja     0x411439
  4113d1:	pop    eax
  4113d2:	pusha  
  4113d3:	popf   
  4113d4:	and    eax,0x5cfa49cf
  4113d9:	mov    dh,0x2b
  4113db:	hlt    
  4113dc:	jae    0x41137b
  4113de:	loope  0x4113c8
  4113e0:	xchg   ecx,eax
  4113e1:	in     eax,dx
  4113e2:	fidiv  WORD PTR [ebx-0x1e]
  4113e5:	inc    esi
  4113e6:	sbb    eax,0x124b118d
  4113eb:	jmp    0x411397
  4113ed:	pop    ecx
  4113ee:	cs mov ebp,0x11fcf4b7
  4113f4:	xchg   esi,eax
  4113f5:	mov    gs,WORD PTR [esi]
  4113f7:	sahf   
  4113f8:	jnp    0x41146e
  4113fa:	and    al,0x53
  4113fc:	mov    bl,0x9d
  4113fe:	call   0x1f47cd3d
  411403:	inc    eax
  411404:	mov    bl,0xf1
  411406:	push   cs
  411407:	push   esi
  411408:	mov    al,0x7d
  41140a:	mov    al,0xef
  41140c:	xchg   ebp,eax
  41140d:	(bad)  
  41140e:	pop    edx
  41140f:	add    eax,0xc37fb5ee
  411414:	out    0xc7,al
  411416:	pop    edx
  411417:	xchg   ecx,eax
  411418:	adc    eax,0x35fc31a
  41141d:	push   ecx
  41141e:	dec    eax
  41141f:	or     al,0x2e
  411421:	jns    0x41145d
  411423:	push   cs
  411424:	cwde   
  411425:	adc    eax,0x1fd68691
  41142a:	jbe    0x4113d8
  41142c:	jne    0x411447
  41142e:	and    edi,esp
  411430:	adc    BYTE PTR [edx+0x1a],0x16
  411434:	sbb    al,0x61
  411436:	jmp    0x411456
  411438:	sbb    eax,0x9d4476c
  41143d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41143e:	push   esp
  41143f:	push   0xcdfcfb89
  411444:	pushf  
  411445:	(bad)  
  411446:	in     eax,0x52
  411448:	fnstcw WORD PTR ds:0xcb6ae793
  41144e:	cmp    bh,BYTE PTR [ecx-0x7c]
  411451:	rcl    BYTE PTR [ebx+esi*2+0x16],0x6a
  411456:	dec    edi
  411457:	pop    ebp
  411458:	in     eax,dx
  411459:	sub    al,0xce
  41145b:	adc    eax,DWORD PTR [esi+eax*8+0x16d02bdc]
  411462:	retf   0x66b
  411465:	sbb    ah,BYTE PTR [esi-0x60d8196b]
  41146b:	and    BYTE PTR es:[edi],ah
  41146e:	jae    0x4114b8
  411470:	mov    al,0x81
  411472:	push   cs
  411473:	frstor fs:[ecx+0x26a273f3]
  41147a:	(bad)  
  41147b:	repnz mov bl,0x1e
  41147e:	cld    
  41147f:	js     0x411470
  411481:	xchg   DWORD PTR [ecx+0x50],eax
  411484:	pop    ds
  411485:	test   BYTE PTR [edx+0x18],al
  411488:	daa    
  411489:	stos   DWORD PTR es:[edi],eax
  41148a:	adc    esi,eax
  41148c:	and    BYTE PTR [ebx+eax*8+0x7b],dl
  411490:	cmp    dh,BYTE PTR [esi+esi*4-0x732ccd31]
  411497:	fwait
  411498:	adc    al,0xa8
  41149a:	sbb    al,0xfd
  41149c:	mov    dh,0xee
  41149e:	rcr    BYTE PTR [esi+0x2c],0x36
  4114a2:	fwait
  4114a3:	inc    edx
  4114a4:	jo     0x4114d9
  4114a6:	push   ss
  4114a7:	and    BYTE PTR [eax],al
  4114a9:	outs   dx,BYTE PTR ds:[esi]
  4114aa:	push   0x9275d0ff
  4114af:	sbb    al,0xc8
  4114b1:	adc    al,BYTE PTR [ebp-0xfcb8b1b]
  4114b7:	fisubr WORD PTR [ebx+0x3f15dce9]
  4114bd:	inc    edx
  4114be:	fstp   TBYTE PTR [ebx+0x6182b596]
  4114c4:	leave  
  4114c5:	adc    BYTE PTR [ebx-0x40b45d93],bh
  4114cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114cc:	mov    WORD PTR [esi-0x7b],gs
  4114cf:	add    BYTE PTR [ebp+0x23],0x86
  4114d3:	dec    eax
  4114d4:	pop    ebp
  4114d5:	cli    
  4114d6:	push   ecx
  4114d7:	add    ecx,DWORD PTR [edi+0x295ee15a]
  4114dd:	fidivr WORD PTR cs:[eax]
  4114e0:	mov    cl,0x5b
  4114e2:	or     bh,BYTE PTR [ebp-0x50]
  4114e5:	mov    ds:0x9e61d258,al
  4114ea:	in     al,0xa5
  4114ec:	mov    ecx,0x8ec941f0
  4114f1:	xlat   BYTE PTR ds:[ebx]
  4114f2:	inc    ebx
  4114f3:	aas    
  4114f4:	adc    DWORD PTR [ebx-0x34],edx
  4114f7:	sbb    BYTE PTR [edi],bh
  4114f9:	mov    eax,DWORD PTR [edx-0x56]
  4114fc:	mov    ch,0x5b
  4114fe:	shl    ah,1
  411500:	push   ss
  411501:	(bad)  
  411503:	aad    0x6e
  411505:	dec    ebx
  411506:	mov    dh,0xff
  411508:	stc    
  411509:	sub    al,0x2b
  41150b:	ror    DWORD PTR [ecx],0xcd
  41150e:	test   esp,ebx
  411510:	icebp  
  411511:	add    eax,0x537b3c23
  411516:	gs out 0x8,al
  411519:	lahf   
  41151a:	fsubr  st,st(5)
  41151c:	sub    BYTE PTR [esi],cl
  41151e:	idiv   dl
  411520:	lods   al,BYTE PTR ds:[esi]
  411521:	sub    ebx,DWORD PTR [edi+eax*8-0x744c4bb4]
  411528:	xchg   BYTE PTR [ecx],ch
  41152a:	in     al,0x84
  41152c:	and    esi,edx
  41152e:	mov    WORD PTR ds:0x36fa4029,?
  411534:	sub    al,0x1
  411536:	mov    BYTE PTR [esi-0x7bae4d8],ch
  41153c:	daa    
  41153d:	cmp    eax,0x56a9d973
  411542:	sub    ebx,0xe2deb0c2
  411548:	cld    
  411549:	scas   eax,DWORD PTR es:[edi]
  41154a:	in     al,dx
  41154b:	mov    eax,0x3f21243e
  411550:	loop   0x41158d
  411552:	enter  0x4176,0x8
  411556:	cmp    esi,edi
  411558:	mov    ch,0xdc
  41155a:	scas   al,BYTE PTR es:[edi]
  41155b:	cld    
  41155c:	repnz fsub DWORD PTR [esi]
  41155f:	loop   0x4115bd
  411561:	cmp    edi,DWORD PTR [edx-0x4d]
  411564:	pop    esi
  411565:	ret    0x5a1d
  411568:	jmp    0x411593
  41156a:	outs   dx,BYTE PTR ds:[esi]
  41156b:	lock dec edi
  41156d:	cmp    ah,BYTE PTR [ebx-0x77]
  411570:	cmp    BYTE PTR [ebx],0x14
  411573:	push   0x2b
  411575:	pushf  
  411576:	ret    0x79ab
  411579:	sub    BYTE PTR [eax],bl
  41157b:	loopne 0x4115b8
  41157d:	inc    edx
  41157e:	jb     0x411574
  411580:	mov    dl,0x94
  411582:	or     al,BYTE PTR [eax-0x2]
  411585:	jecxz  0x4115da
  411587:	pop    ecx
  411588:	or     ah,BYTE PTR [ecx-0x4a]
  41158b:	mov    eax,ds:0x5ec188e
  411590:	cwde   
  411591:	cmp    eax,0x4d21200b
  411596:	test   dh,dh
  411598:	adc    bh,BYTE PTR [ecx]
  41159a:	addr16 in eax,0xbf
  41159d:	pop    esi
  41159e:	lahf   
  41159f:	xchg   edi,eax
  4115a0:	xchg   esi,eax
  4115a1:	je     0x4115cf
  4115a3:	cmp    edi,DWORD PTR [eax-0x487a11b5]
  4115a9:	pop    ss
  4115aa:	sub    dh,BYTE PTR [ecx-0x177566ff]
  4115b0:	xor    esi,0xdc5b215
  4115b6:	retf   0x785d
  4115b9:	jmp    0xb46d:0x52d202ea
  4115c0:	fbld   TBYTE PTR [edi+edx*1-0x7c]
  4115c4:	inc    esp
  4115c5:	sub    cl,BYTE PTR [ebx-0x1d]
  4115c8:	mov    BYTE PTR [ebx+0xdbe7105],ah
  4115ce:	mov    al,0x95
  4115d0:	ins    DWORD PTR es:[edi],dx
  4115d1:	pop    ebx
  4115d2:	cmc    
  4115d3:	or     bl,0xae
  4115d6:	pcmpeqb mm5,QWORD PTR [ebx-0x2be7010f]
  4115dd:	lahf   
  4115de:	mov    esp,0xafe12c6b
  4115e3:	jmp    0xda9cff87
  4115e8:	enter  0x34f6,0x89
  4115ec:	fidiv  DWORD PTR [esi+0x63]
  4115ef:	fisttp DWORD PTR [edx+esi*8-0x14a7ba17]
  4115f6:	loop   0x411612
  4115f8:	or     BYTE PTR [ebx+0x9eb7448],cl
  4115fe:	dec    esp
  4115ff:	imul   ecx,DWORD PTR [edi-0x3b13ec1b],0xc242b1f9
  411609:	adc    ch,BYTE PTR [ebp-0x58]
  41160c:	(bad)  
  41160d:	push   esp
  41160e:	scas   al,BYTE PTR es:[edi]
  41160f:	sub    eax,0xf34dedc9
  411614:	sub    esi,0xfffffffb
  411617:	bnd ja 0x4115fb
  41161a:	cmp    DWORD PTR [ebx+ebx*1-0x222be499],eax
  411621:	or     bl,BYTE PTR [ebx]
  411623:	sbb    al,0xba
  411625:	jae    0x4116a4
  411627:	pop    ecx
  411628:	outs   dx,BYTE PTR ds:[esi]
  411629:	adc    ebp,DWORD PTR [esi+esi*1+0x28]
  41162d:	lock fnstcw WORD PTR [edi-0x731e80c]
  411634:	lock xchg ecx,eax
  411636:	out    0x77,al
  411638:	fimul  DWORD PTR [ecx+edi*4-0x24]
  41163c:	mov    cl,0x5d
  41163e:	nop
  41163f:	int3   
  411640:	cmp    BYTE PTR fs:[ecx],dl
  411643:	jae    0x411601
  411645:	dec    eax
  411646:	das    
  411647:	ins    DWORD PTR es:[edi],dx
  411648:	(bad)  
  411649:	neg    DWORD PTR [ebp-0x67]
  41164c:	mov    al,0xea
  41164e:	jp     0x41160d
  411650:	sub    al,0x56
  411652:	fucomip st,st(7)
  411654:	inc    ebx
  411655:	and    edi,ebp
  411657:	or     DWORD PTR [eax],ebp
  411659:	int3   
  41165a:	cmp    eax,esp
  41165c:	push   esi
  41165d:	loope  0x41165c
  41165f:	jno    0x411641
  411661:	fdiv   DWORD PTR [edx]
  411663:	and    ah,dl
  411665:	jnp    0x4115e9
  411667:	inc    ecx
  411668:	push   ss
  411669:	mov    ch,0x6e
  41166b:	ja     0x411697
  41166d:	xchg   esp,eax
  41166e:	fiadd  DWORD PTR [edx+eiz*2]
  411671:	cdq    
  411672:	dec    DWORD PTR [ebp+0x7e]
  411675:	xchg   esp,eax
  411676:	ins    BYTE PTR es:[edi],dx
  411677:	sbb    BYTE PTR [esp+edx*1+0x21],cl
  41167b:	mov    eax,0xa6b150c1
  411680:	adc    edx,DWORD PTR [edi+0x6170617]
  411686:	push   cs
  411687:	sub    BYTE PTR [esi-0x49],bh
  41168a:	std    
  41168b:	xor    eax,0x55480d6b
  411690:	inc    ebp
  411691:	xchg   al,cl
  411693:	sbb    cl,BYTE PTR [edx+0x7]
  411696:	sub    DWORD PTR [esi-0x6e0c61d9],ebp
  41169c:	pop    esp
  41169d:	test   al,0x6a
  41169f:	cmp    al,0x4
  4116a1:	xor    eax,0x42bc9daf
  4116a6:	retf   0xe341
  4116a9:	repz add edx,DWORD PTR [edi+0x1d]
  4116ad:	aad    0x6f
  4116af:	fmulp  st(3),st
  4116b1:	fidivr DWORD PTR [eax]
  4116b3:	fisttp WORD PTR [eax]
  4116b5:	pop    ebp
  4116b6:	lods   eax,DWORD PTR ds:[esi]
  4116b7:	jnp    0x4116aa
  4116b9:	dec    ebx
  4116ba:	retf   0x3241
  4116bd:	xchg   ebx,eax
  4116be:	out    dx,al
  4116bf:	push   0x19
  4116c1:	inc    ecx
  4116c2:	ss ja  0x41165c
  4116c5:	stos   DWORD PTR es:[edi],eax
  4116c6:	cdq    
  4116c7:	pop    edx
  4116c8:	loopne 0x41171a
  4116ca:	inc    esi
  4116cb:	pusha  
  4116cc:	call   0x8cb84594
  4116d1:	sub    eax,0x6573a565
  4116d6:	push   eax
  4116d7:	(bad)  
  4116d8:	jp     0x411738
  4116da:	std    
  4116db:	ja     0x41166f
  4116dd:	aam    0xbe
  4116df:	cdq    
  4116e0:	outs   dx,BYTE PTR ds:[esi]
  4116e1:	js     0x4116a4
  4116e3:	and    esp,DWORD PTR [edi+0x75]
  4116e6:	dec    esp
  4116e7:	mov    ds:0xfeffa887,al
  4116ec:	push   ss
  4116ed:	adc    ah,BYTE PTR [edi]
  4116ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116f0:	sub    bl,BYTE PTR [edx+esi*2+0x1eb121c3]
  4116f7:	repz loopne 0x41175e
  4116fa:	jne    0x411730
  4116fc:	add    edx,ebx
  4116fe:	add    BYTE PTR [edx+eax*4-0x38],0xa4
  411703:	clc    
  411704:	lods   eax,DWORD PTR ds:[esi]
  411705:	cmp    eax,0xbd2eafd5
  41170a:	cmp    al,0xa2
  41170c:	cmp    BYTE PTR [edi+0x17008f27],al
  411712:	add    edi,DWORD PTR [edx]
  411714:	xchg   esi,eax
  411715:	mov    bh,0x58
  411717:	gs jle 0x4116ef
  41171a:	lods   eax,DWORD PTR ds:[esi]
  41171b:	aad    0x8a
  41171d:	mov    bh,0x95
  41171f:	mov    bl,ah
  411721:	jae    0x4116e1
  411723:	push   ebx
  411724:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411725:	jae    0x4116eb
  411727:	loop   0x41170d
  411729:	retf   
  41172a:	mov    WORD PTR [ebx-0x29],gs
  41172d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41172e:	arpl   dx,si
  411730:	repz ja 0x411781
  411733:	gs retf 
  411735:	xor    dl,cl
  411737:	push   edx
  411738:	pushf  
  411739:	loop   0x411786
  41173b:	lahf   
  41173c:	mov    eax,DWORD PTR [ebx-0x2dbc1ec4]
  411742:	sub    al,0x82
  411744:	dec    ecx
  411745:	dec    eax
  411746:	xor    DWORD PTR [ecx-0x3b09fb82],ecx
  41174c:	in     eax,0xba
  41174e:	xchg   edi,eax
  41174f:	adc    DWORD PTR ss:[ebx],ebp
  411752:	into   
  411753:	pop    ebx
  411754:	(bad)  
  411755:	fsub   st,st(2)
  411757:	add    esp,ecx
  411759:	test   eax,0x3b57d329
  41175e:	sub    DWORD PTR [ecx+0x2c],esp
  411761:	cmc    
  411762:	nop
  411763:	dec    ebx
  411764:	mov    eax,0x8cb5097a
  411769:	cdq    
  41176a:	(bad)  
  41176d:	xchg   ebx,eax
  41176e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41176f:	mov    WORD PTR [ebx-0x9b9e9d],?
  411775:	int    0xca
  411777:	loope  0x411755
  411779:	scas   al,BYTE PTR es:[edi]
  41177a:	cmp    esp,DWORD PTR [edx]
  41177c:	and    DWORD PTR [eax],ebp
  41177e:	sbb    bl,BYTE PTR [ebp-0x5549a625]
  411784:	scas   eax,DWORD PTR es:[edi]
  411785:	imul   ecx,DWORD PTR [edi+0x6da361d1],0x99fe34d4
  41178f:	jmp    0xeccf57a2
  411794:	mov    bh,0x90
  411796:	aas    
  411797:	(bad)  
  411798:	lods   al,BYTE PTR cs:[esi]
  41179a:	and    esi,DWORD PTR [ecx+ebp*4+0x43c10ebd]
  4117a1:	push   0x2a
  4117a3:	(bad)  
  4117a5:	inc    edx
  4117a6:	shl    ebx,0xe7
  4117a9:	cs sbb al,0xd2
  4117ac:	push   esp
  4117ad:	mov    ebp,ebx
  4117af:	in     al,dx
  4117b0:	neg    BYTE PTR [bx+0xc]
  4117b4:	dec    edx
  4117b5:	or     dh,BYTE PTR [ebx-0x3dbbe09a]
  4117bb:	dec    eax
  4117bc:	jae    0x4117cd
  4117be:	call   0xb8b59e25
  4117c3:	ret    
  4117c4:	xchg   esi,edx
  4117c6:	and    DWORD PTR [eax],eax
  4117c8:	fbstp  TBYTE PTR [edi]
  4117ca:	inc    esi
  4117cb:	jbe    0x411758
  4117cd:	adc    bl,BYTE PTR [edx-0x9337d39]
  4117d3:	dec    ebp
  4117d4:	mov    eax,0x281d1189
  4117d9:	sub    DWORD PTR [ecx+0x37f5b9d3],0x16
  4117e0:	(bad)  
  4117e1:	sar    ebx,cl
  4117e3:	jmp    0x41182d
  4117e5:	mov    ah,0x8d
  4117e7:	mov    ds:0x5034e1a6,al
  4117ec:	int3   
  4117ed:	sbb    al,0x6
  4117ef:	mov    cs,WORD PTR [esi-0x53ad8db1]
  4117f5:	test   al,0xb
  4117f7:	(bad)  
  4117f8:	mov    es,ebx
  4117fa:	adc    BYTE PTR [eax+0x27a72262],0x0
  411801:	mov    ss,WORD PTR [eax-0x4b7cd4ae]
  411807:	mov    ch,BYTE PTR [esi+0xa2ab93]
  41180d:	stos   DWORD PTR es:[edi],eax
  41180e:	clc    
  41180f:	sbb    DWORD PTR [ecx],esp
  411811:	cmc    
  411812:	out    dx,eax
  411813:	dec    esp
  411814:	xor    BYTE PTR [ebx],bh
  411816:	or     BYTE PTR [ebx+0x9],al
  411819:	mov    esp,0xb040ac80
  41181e:	test   al,0x3f
  411820:	lahf   
  411821:	retf   0x91af
  411824:	inc    DWORD PTR ds:0x9377ca74
  41182a:	scas   eax,DWORD PTR es:[edi]
  41182b:	sahf   
  41182c:	mov    ebp,0x95d3c212
  411831:	pop    edi
  411832:	js     0x411895
  411834:	daa    
  411835:	les    edx,FWORD PTR [ecx+edx*2]
  411838:	or     al,dl
  41183a:	into   
  41183b:	jg     0x411893
  41183d:	xchg   edi,eax
  41183e:	shl    DWORD PTR [edx-0x8076165],cl
  411844:	cs stos BYTE PTR es:[edi],al
  411846:	mov    eax,ds:0xbb00bfd6
  41184b:	stc    
  41184c:	clc    
  41184d:	scas   eax,DWORD PTR es:[edi]
  41184e:	shr    BYTE PTR [esi+0x1fbcd18c],1
  411854:	cmp    dh,BYTE PTR [eax+ebx*2]
  411857:	fild   DWORD PTR [esi-0x1b]
  41185a:	das    
  41185b:	xchg   edx,eax
  41185c:	jg     0x41182f
  41185e:	or     bl,BYTE PTR [eax-0x531509c2]
  411864:	and    BYTE PTR [edi-0x51],al
  411867:	pop    edi
  411868:	ins    BYTE PTR es:[edi],dx
  411869:	pusha  
  41186a:	cmp    edx,ebp
  41186c:	pop    ebx
  41186d:	addr16 ret 
  41186f:	mov    BYTE PTR [esi+0x14],ch
  411872:	jle    0x4117fa
  411874:	pop    eax
  411875:	repz ret 0x9dfc
  411879:	inc    edi
  41187a:	stos   BYTE PTR es:[edi],al
  41187b:	es xchg esp,ecx
  41187e:	rcr    DWORD PTR [ecx+0x32455063],0x32
  411885:	push   edx
  411886:	cwde   
  411887:	and    dl,BYTE PTR [edx]
  411889:	adc    BYTE PTR [edi],dl
  41188b:	aam    0x8c
  41188d:	sahf   
  41188e:	in     eax,0x6a
  411890:	sbb    al,0x1f
  411892:	and    BYTE PTR [eax-0x11481434],bl
  411898:	ss addr16 or edx,eax
  41189c:	mov    edx,0xf181f411
  4118a1:	inc    edi
  4118a2:	pop    ss
  4118a3:	push   0xfffffffe
  4118a5:	pop    esp
  4118a6:	sbb    dl,ah
  4118a8:	dec    ebp
  4118a9:	test   DWORD PTR [edx-0x1a09c12b],ebx
  4118af:	lds    esi,FWORD PTR [edx+0x42754b84]
  4118b5:	mov    edi,0x63843c5b
  4118ba:	xchg   ebx,eax
  4118bb:	repz ds dec eax
  4118be:	add    DWORD PTR [edx+edx*8+0x5c],edx
  4118c2:	mov    ds:0xd91dbe40,eax
  4118c7:	jmp    0x370b:0xb58031df
  4118ce:	or     eax,0x4ee59626
  4118d3:	rcr    DWORD PTR [ebx],cl
  4118d5:	sahf   
  4118d6:	ja     0x411865
  4118d8:	popf   
  4118d9:	lock mov ah,0xd6
  4118dc:	push   ecx
  4118dd:	fimul  DWORD PTR [eax+eiz*4]
  4118e0:	test   edx,eax
  4118e2:	push   cs
  4118e3:	retf   0x1e13
  4118e6:	int3   
  4118e7:	outs   dx,BYTE PTR ds:[esi]
  4118e8:	jge    0x411919
  4118ea:	(bad)  
  4118eb:	mov    esp,0x49e1843a
  4118f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118f1:	mov    esi,0x97548a46
  4118f6:	scas   al,BYTE PTR es:[edi]
  4118f7:	fmul   QWORD PTR [ebx-0x4578fc0f]
  4118fd:	mov    dl,0x71
  4118ff:	test   DWORD PTR [eax+0x74],edi
  411902:	mov    dh,0x9a
  411904:	jle    0x4118ff
  411906:	pop    esp
  411907:	arpl   dx,sp
  411909:	xchg   ecx,eax
  41190a:	adc    ebp,DWORD PTR [edi]
  41190c:	xor    DWORD PTR [edi-0x59],eax
  41190f:	mov    eax,ds:0x9b404d60
  411914:	push   ss
  411915:	add    BYTE PTR [edi+0x25],al
  411918:	or     eax,0xdadefd67
  41191d:	inc    edi
  41191e:	(bad)  
  41191f:	cmp    ch,BYTE PTR [edx-0x5f]
  411922:	mov    dh,0x7f
  411924:	xchg   BYTE PTR [esi-0x35],ah
  411927:	push   ebx
  411928:	pop    ebx
  411929:	cmp    ecx,ebp
  41192b:	aaa    
  41192c:	xor    al,0x27
  41192e:	pop    ebp
  41192f:	mov    ah,0xb0
  411931:	xchg   ecx,eax
  411932:	cmp    dl,BYTE PTR [ebx+0x3f]
  411935:	xor    DWORD PTR [ebx+0x3d],0x48
  411939:	leave  
  41193a:	ins    DWORD PTR es:[edi],dx
  41193b:	inc    esp
  41193c:	mov    ecx,0xd12b109c
  411941:	rol    edx,1
  411943:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411944:	xor    eax,0x4f180a80
  411949:	fadd   QWORD PTR [ebx+0x290e2182]
  41194f:	mov    dh,0xff
  411951:	jl     0x411971
  411953:	iret   
  411954:	push   edi
  411955:	pop    es
  411956:	scas   eax,DWORD PTR es:[edi]
  411957:	adc    bl,BYTE PTR [eax-0x2a4dceba]
  41195d:	sbb    DWORD PTR [ebx+0x23c555ee],0x31
  411964:	ret    0xf7e1
  411967:	pop    ss
  411968:	lea    esi,[edi-0x48]
  41196b:	jg     0x4119a1
  41196d:	push   esi
  41196e:	or     al,al
  411970:	jbe    0x41196e
  411972:	xchg   ecx,eax
  411973:	int3   
  411974:	stc    
  411975:	and    BYTE PTR [ebp-0x7b8fe68d],0x68
  41197c:	lods   al,BYTE PTR ds:[esi]
  41197d:	js     0x4119c5
  41197f:	xor    eax,ebp
  411981:	pop    esi
  411982:	enter  0x354,0x25
  411986:	or     al,0x3f
  411988:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411989:	add    ebp,ebx
  41198b:	xor    dl,BYTE PTR ss:[esi]
  41198e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41198f:	test   DWORD PTR [ebp+eax*1-0x20],eax
  411993:	add    eax,0xd97d4118
  411998:	dec    esi
  411999:	inc    edi
  41199a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41199b:	lahf   
  41199c:	xchg   esp,eax
  41199d:	in     eax,dx
  41199e:	cld    
  41199f:	inc    ecx
  4119a0:	xchg   edi,eax
  4119a1:	and    BYTE PTR [eax+ecx*8],ah
  4119a4:	lea    edi,[ecx]
  4119a6:	push   ebx
  4119a7:	sti    
  4119a8:	adc    al,ah
  4119aa:	scas   al,BYTE PTR es:[edi]
  4119ab:	imul   eax,DWORD PTR [edi+esi*8-0x993e489],0xffffffa9
  4119b3:	add    DWORD PTR [edi+0x5d09d7e7],esp
  4119b9:	pop    edx
  4119ba:	rcr    BYTE PTR [ebp-0x35],cl
  4119bd:	fcomp  DWORD PTR ds:0xdbc7b0f0
  4119c3:	push   ds
  4119c4:	dec    eax
  4119c5:	xchg   edi,eax
  4119c6:	inc    ebp
  4119c7:	inc    edx
  4119c8:	test   DWORD PTR [esi-0x47667153],ebp
  4119ce:	or     DWORD PTR [ecx+0x794e375d],edx
  4119d4:	push   ss
  4119d5:	aam    0x5b
  4119d7:	mov    eax,ds:0xc4edd078
  4119dc:	jns    0x4119aa
  4119de:	mov    al,BYTE PTR [ebx+eax*8]
  4119e1:	mov    ecx,0xa9f2b805
  4119e6:	cmp    al,0xd
  4119e8:	daa    
  4119e9:	rol    DWORD PTR [edx],cl
  4119eb:	and    eax,0x4bd6c91f
  4119f0:	mov    esi,0x6d0d28e8
  4119f5:	xlat   BYTE PTR ds:[ebx]
  4119f6:	push   es
  4119f7:	adc    DWORD PTR [ebx+0x2c2dd43c],edi
  4119fd:	adc    al,bh
  4119ff:	and    al,0x80
  411a01:	cwde   
  411a02:	test   al,0xf
  411a04:	pop    esi
  411a05:	pop    ebx
  411a06:	mov    ah,0x13
  411a08:	jns    0x411a15
  411a0a:	iret   
  411a0b:	popf   
  411a0c:	outs   dx,DWORD PTR ds:[esi]
  411a0d:	push   ecx
  411a0e:	data16 jbe 0x411a8a
  411a11:	and    eax,0x173ea49d
  411a16:	pop    edi
  411a17:	cmp    al,0x59
  411a19:	jle    0x411a71
  411a1b:	add    ebx,DWORD PTR [edi+0x2d4f099c]
  411a21:	adc    BYTE PTR ds:0x95a9e05,0xd0
  411a28:	dec    eax
  411a29:	sar    DWORD PTR [ecx+0x8a94],cl
  411a2f:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411a34:	and    DWORD PTR ds:0x42867b,0x0
  411a3e:	jmp    0x411a50
  411a43:	mov    edi,DWORD PTR ds:0x42867b
  411a49:	inc    edi
  411a4a:	mov    DWORD PTR ds:0x42867b,edi
  411a50:	cmp    DWORD PTR ds:0x42867b,0x1d
  411a57:	jae    0x411a7f
  411a5d:	cmp    DWORD PTR ds:0x42867b,0x24
  411a64:	ja     0x411a7f
  411a6a:	jmp    0x411a7a
  411a6f:	push   0x42801b
  411a74:	call   DWORD PTR ds:0x4287c3
  411a7a:	jmp    0x411a43
  411a7f:	mov    edi,0x3b56
  411a84:	adc    DWORD PTR ds:0x428657,0x6690
  411a8e:	add    cx,di
  411a91:	sub    DWORD PTR ds:0x42863f,0x428617
  411a9b:	movzx  ecx,cx
  411a9e:	xor    DWORD PTR ds:0x428633,0x428667
  411aa8:	mov    DWORD PTR [ebp-0xc],ecx
  411aab:	or     DWORD PTR ds:0x42862f,edx
  411ab1:	mov    ecx,DWORD PTR [ebp+0x8]
  411ab4:	movzx  ecx,WORD PTR [ecx+edx*4]
  411ab8:	add    DWORD PTR ds:0x4285e7,0xc83
  411ac2:	xor    ecx,0x8a94
  411ac8:	sub    DWORD PTR ds:0x42860f,0x428677
  411ad2:	add    ecx,edi
  411ad4:	mov    edi,DWORD PTR [ebp-0xc]
  411ad7:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411ade:	inc    edx
  411adf:	mov    ecx,DWORD PTR [ebp-0x10]
  411ae2:	mov    DWORD PTR ds:0x428637,0x76f
  411aec:	cmp    edx,ecx
  411aee:	mov    DWORD PTR ds:0x428647,0x6bd4
  411af8:	jne    0x40f686
  411afe:	and    DWORD PTR ds:0x428647,0x0
  411b08:	mov    ecx,DWORD PTR ds:0x428647
  411b0e:	inc    ecx
  411b0f:	mov    DWORD PTR ds:0x428647,ecx
  411b15:	cmp    DWORD PTR ds:0x428647,0x1b
  411b1c:	jbe    0x411b4e
  411b22:	jmp    0x411b41
  411b27:	push   0x428603
  411b2c:	push   DWORD PTR [ebp-0x14]
  411b2f:	push   DWORD PTR [ebp-0x28]
  411b32:	push   DWORD PTR [ebp-0x10]
  411b35:	push   DWORD PTR [ebp-0x10]
  411b38:	push   DWORD PTR [ebp-0x20]
  411b3b:	call   DWORD PTR ds:0x4287c7
  411b41:	cmp    DWORD PTR ds:0x428647,0x17
  411b48:	jb     0x411b08
  411b4e:	mov    ecx,DWORD PTR [ebp-0x18]
  411b51:	xor    edi,edi
  411b53:	mov    edx,DWORD PTR [ebp+0x10]
  411b56:	adc    DWORD PTR ds:0x42864b,ecx
  411b5c:	xor    ecx,eax
  411b5e:	add    ecx,esi
  411b60:	mov    DWORD PTR [edx],ecx
  411b62:	mov    ecx,DWORD PTR [ebp-0x18]
  411b65:	xor    ecx,eax
  411b67:	add    ecx,esi
  411b69:	adc    DWORD PTR ds:0x4285d7,ebx
  411b6f:	mov    DWORD PTR [ebp-0xc],ecx
  411b72:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  411b79:	adc    edi,DWORD PTR ds:0x428663
  411b7f:	mov    DWORD PTR [ebp-0x14],0xf89c8580
  411b86:	or     DWORD PTR ds:0x42866b,ebx
  411b8c:	mov    DWORD PTR [ebp-0x10],0xf89c95b0
  411b93:	sub    DWORD PTR ds:0x428673,edx
  411b99:	mov    ecx,DWORD PTR [ebp-0x14]
  411b9c:	and    DWORD PTR ds:0x428637,edi
  411ba2:	mov    DWORD PTR [ebp+0x8],ecx
  411ba5:	mov    ecx,DWORD PTR [ebp+0x8]
  411ba8:	mov    edi,DWORD PTR ds:0x42865f
  411bae:	adc    DWORD PTR ds:0x428613,edi
  411bb4:	xor    ecx,eax
  411bb6:	add    ecx,esi
  411bb8:	mov    ecx,0x242ebcc
  411bbd:	mov    DWORD PTR ds:0x428613,0x3550
  411bc7:	mov    edi,0xf641bc3
  411bcc:	mov    DWORD PTR ds:0x428633,0x2c84
  411bd6:	je     0x41b172
  411bdc:	mov    ebx,DWORD PTR ds:0x4286b7
  411be2:	mov    edx,DWORD PTR ds:0x4286e3
  411be8:	sub    edx,ebx
  411bea:	imul   ebx,DWORD PTR [ebx+edx*1]
  411bee:	mov    edx,DWORD PTR [ebp+0x8]
  411bf1:	movzx  ebx,BYTE PTR ds:0x4285ef
  411bf8:	sub    DWORD PTR ds:0x428657,ebx
  411bfe:	mov    ebx,DWORD PTR [ebp-0x8]
  411c01:	adc    DWORD PTR ds:0x42860f,0x4285eb
  411c0b:	xor    edx,eax
  411c0d:	sub    DWORD PTR ds:0x428643,0x428673
  411c17:	xor    ebx,eax
  411c19:	sub    edx,ebx
  411c1b:	and    DWORD PTR ds:0x42866f,ecx
  411c21:	sub    edx,esi
  411c23:	xor    edx,eax
  411c25:	adc    DWORD PTR ds:0x42865b,ebx
  411c2b:	mov    DWORD PTR [ebp+0x8],edx
  411c2e:	mov    edx,DWORD PTR ds:0x42867f
  411c34:	mov    ebx,DWORD PTR ds:0x4286fb
  411c3a:	sub    ebx,edx
  411c3c:	imul   edx,DWORD PTR [edx+ebx*1]
  411c40:	mov    edx,DWORD PTR [ebp+0x8]
  411c43:	and    DWORD PTR ds:0x428647,0x0
  411c4d:	jmp    0x411c61
  411c52:	xor    ebx,ebx
  411c54:	xor    ebx,DWORD PTR ds:0x428647
  411c5a:	inc    ebx
  411c5b:	mov    DWORD PTR ds:0x428647,ebx
  411c61:	cmp    DWORD PTR ds:0x428647,0x14
  411c68:	jae    0x411cb1
  411c6e:	cmp    DWORD PTR ds:0x428647,0xc
  411c75:	jle    0x411cb1
  411c7b:	jmp    0x411c90
  411c80:	push   0x4285d3
  411c85:	push   0x42800b
  411c8a:	call   DWORD PTR ds:0x4287cb
  411c90:	cmp    DWORD PTR ds:0x428647,0xb
  411c97:	jne    0x411cac
  411c9d:	xor    ebx,ebx
  411c9f:	xor    ebx,DWORD PTR ds:0x428647
  411ca5:	inc    ebx
  411ca6:	mov    DWORD PTR ds:0x428647,ebx
  411cac:	jmp    0x411c52
  411cb1:	mov    ebx,DWORD PTR [ebp-0x58]
  411cb4:	not    DWORD PTR ds:0x4285e3
  411cba:	add    edx,0x5708f1
  411cc0:	sbb    DWORD PTR ds:0x42866f,0xe9d
  411cca:	imul   edx,ebx
  411ccd:	mov    DWORD PTR [ebp-0x58],edx
  411cd0:	mov    edx,DWORD PTR [ebp+0x8]
  411cd3:	movzx  ebx,WORD PTR ds:0x42863f
  411cda:	xor    DWORD PTR ds:0x428677,ebx
  411ce0:	mov    ebx,DWORD PTR [ebp-0x54]
  411ce3:	add    edx,0x64f893
  411ce9:	or     edx,ebx
  411ceb:	dec    ebx
  411cec:	mov    DWORD PTR [ebp-0x54],edx
  411cef:	mov    edx,DWORD PTR [ebp+0x8]
  411cf2:	xor    DWORD PTR ds:0x428613,edi
  411cf8:	mov    ebx,DWORD PTR [ebp-0x50]
  411cfb:	adc    DWORD PTR ds:0x42862b,0x428663
  411d05:	add    edx,ecx
  411d07:	xor    edx,ebx
  411d09:	inc    DWORD PTR ds:0x42864b
  411d0f:	mov    DWORD PTR [ebp-0x50],edx
  411d12:	sbb    DWORD PTR ds:0x42865f,0x428633
  411d1c:	mov    edx,DWORD PTR [ebp+0x8]
  411d1f:	add    DWORD PTR ds:0x42863f,0x2dae
  411d29:	mov    ebx,DWORD PTR [ebp-0x4c]
  411d2c:	add    edx,edi
  411d2e:	inc    DWORD PTR ds:0x428617
  411d34:	and    edx,ebx
  411d36:	and    ebx,0x7d1c
  411d3c:	mov    DWORD PTR [ebp-0x4c],edx
  411d3f:	xor    DWORD PTR ds:0x428613,0x4285ef
  411d49:	mov    edx,DWORD PTR [ebp+0x8]
  411d4c:	mov    ebx,DWORD PTR [ebp-0x48]
  411d4f:	lea    edx,[ebx+edx*1+0x241fcde]
  411d56:	mov    ebx,DWORD PTR ds:0x42863f
  411d5c:	and    DWORD PTR ds:0x428633,ebx
  411d62:	mov    DWORD PTR [ebp-0x48],edx
  411d65:	or     ebx,0x3ec
  411d6b:	mov    edx,DWORD PTR [ebp+0x8]
  411d6e:	mov    ebx,0xfa5e1521
  411d73:	or     DWORD PTR ds:0x428647,0x60bd
  411d7d:	sub    ebx,edx
  411d7f:	add    edx,DWORD PTR ds:0x42866f
  411d85:	add    ebx,DWORD PTR [ebp-0x44]
  411d88:	mov    DWORD PTR [ebp-0x44],ebx
  411d8b:	and    DWORD PTR ds:0x42867b,0x0
  411d95:	jmp    0x411da7
  411d9a:	mov    edx,DWORD PTR ds:0x42867b
  411da0:	inc    edx
  411da1:	mov    DWORD PTR ds:0x42867b,edx
  411da7:	cmp    DWORD PTR ds:0x42867b,0x18
  411dae:	jae    0x411dfe
  411db4:	cmp    DWORD PTR ds:0x42867b,0xa
  411dbb:	jge    0x411dfe
  411dc1:	jmp    0x411ddf
  411dc6:	push   DWORD PTR [ebp-0x14]
  411dc9:	push   DWORD PTR [ebp-0x20]
  411dcc:	push   0x73a3
  411dd1:	push   DWORD PTR [ebp-0xc]
  411dd4:	push   0x249b
  411dd9:	call   DWORD PTR ds:0x42879f
  411ddf:	cmp    DWORD PTR ds:0x42867b,0x9
  411de6:	jne    0x411df9
  411dec:	mov    edx,DWORD PTR ds:0x42867b
  411df2:	inc    edx
  411df3:	mov    DWORD PTR ds:0x42867b,edx
  411df9:	jmp    0x411d9a
  411dfe:	mov    edx,DWORD PTR [ebp+0x8]
  411e01:	adc    DWORD PTR ds:0x4285d3,0x42865b
  411e0b:	xor    edx,eax
  411e0d:	or     DWORD PTR ds:0x428657,0x7d10
  411e17:	add    edx,esi
  411e19:	mov    DWORD PTR ds:0x428613,0x2646
  411e23:	jne    0x411bdc
  411e29:	jmp    0x41b172
  411e2e:	and    ebx,DWORD PTR ds:0x428603
  411e34:	mov    edx,DWORD PTR [ebp-0xc]
  411e37:	sub    edx,esi
  411e39:	add    ebx,0x210e
  411e3f:	xor    edx,eax
  411e41:	mov    DWORD PTR [ebp-0x5c],edx
  411e44:	and    DWORD PTR ds:0x4285ef,0x0
  411e4e:	jmp    0x411e62
  411e53:	xor    ebx,ebx
  411e55:	add    ebx,DWORD PTR ds:0x4285ef
  411e5b:	inc    ebx
  411e5c:	mov    DWORD PTR ds:0x4285ef,ebx
  411e62:	cmp    DWORD PTR ds:0x4285ef,0x17
  411e69:	jae    0x411ea9
  411e6f:	cmp    DWORD PTR ds:0x4285ef,0xe
  411e76:	ja     0x411ea9
  411e7c:	jmp    0x411e8a
  411e81:	push   DWORD PTR [ebp-0xc]
  411e84:	call   DWORD PTR ds:0x4287a3
  411e8a:	cmp    DWORD PTR ds:0x4285ef,0xd
  411e91:	jne    0x411ea4
  411e97:	mov    ebx,DWORD PTR ds:0x4285ef
  411e9d:	inc    ebx
  411e9e:	mov    DWORD PTR ds:0x4285ef,ebx
  411ea4:	jmp    0x411e53
  411ea9:	mov    edx,DWORD PTR [ebp-0x10]
  411eac:	mov    DWORD PTR ds:0x4285db,0x15
  411eb6:	cmp    DWORD PTR ds:0x4285db,0x0
  411ebd:	je     0x411f11
  411ec3:	cmp    DWORD PTR ds:0x4285db,0x6
  411eca:	jl     0x411f11
  411ed0:	jmp    0x411ee5
  411ed5:	push   0x12dd
  411eda:	push   0x428000
  411edf:	call   DWORD PTR ds:0x4287a7
  411ee5:	cmp    DWORD PTR ds:0x4285db,0x7
  411eec:	jne    0x411eff
  411ef2:	mov    ebx,DWORD PTR ds:0x4285db
  411ef8:	dec    ebx
  411ef9:	mov    DWORD PTR ds:0x4285db,ebx
  411eff:	mov    ebx,DWORD PTR ds:0x4285db
  411f05:	dec    ebx
  411f06:	mov    DWORD PTR ds:0x4285db,ebx
  411f0c:	jmp    0x411eb6
  411f11:	mov    ebx,DWORD PTR [ebp-0x8]
  411f14:	xor    edx,eax
  411f16:	xor    DWORD PTR ds:0x42863b,0x3a5d
  411f20:	xor    ebx,eax
  411f22:	sub    edx,ebx
  411f24:	adc    DWORD PTR ds:0x42860f,0x428633
  411f2e:	sub    edx,esi
  411f30:	and    DWORD PTR ds:0x42864f,0x428607
  411f3a:	xor    edx,eax
  411f3c:	mov    DWORD PTR ds:0x428663,0x12b9
  411f46:	mov    DWORD PTR [ebp-0x10],edx
  411f49:	movzx  edx,WORD PTR ds:0x42863f
  411f50:	mov    edx,DWORD PTR [ebp-0x14]
  411f53:	mov    DWORD PTR [ebp+0x8],edx
  411f56:	jmp    0x414473
  411f5b:	adc    DWORD PTR ds:0x42866b,0x365a
  411f65:	mov    edx,DWORD PTR [ebp+0x8]
  411f68:	add    DWORD PTR ds:0x42865b,0x2d5e
  411f72:	mov    ebx,DWORD PTR [ebp-0x8]
  411f75:	xor    edx,eax
  411f77:	xor    ebx,eax
  411f79:	jmp    0x41431a
  411f7e:	push   0xf
  411f80:	xor    al,0x44
  411f82:	pop    ss
  411f83:	inc    edi
  411f84:	or     al,BYTE PTR [edi]
  411f86:	into   
  411f87:	addr16 mov ds:0xcbf4,al
  411f8b:	and    dl,cl
  411f8d:	jl     0x411f55
  411f8f:	cmp    BYTE PTR [edx+0x7a],0xfe
  411f93:	pop    edi
  411f94:	jp     0x412010
  411f96:	mov    al,BYTE PTR fs:[ecx+0x2c]
  411f9a:	repnz push 0x6e
  411f9d:	push   edx
  411f9e:	and    cl,ah
  411fa0:	inc    edi
  411fa1:	sub    DWORD PTR [edx+0x1e818b9e],eax
  411fa7:	dec    ecx
  411fa8:	xchg   edx,eax
  411fa9:	xchg   DWORD PTR [edi+0x7ec050b9],ecx
  411faf:	scas   eax,DWORD PTR es:[edi]
  411fb0:	inc    esp
  411fb1:	imul   esp,edi,0x70
  411fb4:	leave  
  411fb5:	cmp    edx,esp
  411fb7:	xchg   BYTE PTR [esi],bh
  411fb9:	mov    WORD PTR [ebx+0x1fd7fed6],es
  411fbf:	sar    DWORD PTR [esi],0xb6
  411fc2:	pop    ecx
  411fc3:	fsubr  DWORD PTR [eax-0x1f]
  411fc6:	fnstcw WORD PTR [esi]
  411fc8:	pop    esp
  411fc9:	or     eax,0xdda319ca
  411fce:	dec    ebp
  411fcf:	push   0xffffffc8
  411fd1:	fldenv [edx]
  411fd3:	jbe    0x412043
  411fd5:	in     eax,0x69
  411fd7:	fisubr WORD PTR [esi+0xa4033da]
  411fdd:	out    0x2c,eax
  411fdf:	leave  
  411fe0:	pop    esi
  411fe1:	or     ecx,edi
  411fe3:	out    dx,eax
  411fe4:	add    dh,ah
  411fe6:	nop
  411fe7:	daa    
  411fe8:	xor    al,0xaa
  411fea:	mov    ebp,0x400c6d1e
  411fef:	cmp    BYTE PTR [ebx-0x5c7475c2],dh
  411ff5:	jae    0x411fef
  411ff7:	es xchg ecx,eax
  411ff9:	call   FWORD PTR [edi-0x1329fc46]
  411fff:	adc    dl,BYTE PTR [ecx-0x2b6a9765]
  412005:	retf   
  412006:	aas    
  412007:	sbb    bl,BYTE PTR [ecx+0x580e55c9]
  41200d:	cmc    
  41200e:	addr16 cmp al,0x55
  412011:	enter  0xdee9,0x97
  412015:	(bad)  [ecx]
  412017:	cmp    DWORD PTR [ebx],esi
  412019:	mov    edx,0x22b92bf2
  41201e:	xchg   ecx,eax
  41201f:	mov    ebx,DWORD PTR [edx+0x4dc9d812]
  412025:	call   0x5d51:0xbc52bc73
  41202c:	jl     0x41204b
  41202e:	jb     0x411fba
  412030:	xor    ah,BYTE PTR [eax]
  412032:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412033:	push   es
  412034:	ins    DWORD PTR es:[edi],dx
  412035:	stos   DWORD PTR es:[edi],eax
  412036:	push   ebx
  412037:	sahf   
  412038:	shr    ebp,cl
  41203a:	mov    ecx,0x80f8d029
  41203f:	add    di,WORD PTR ds:0x8d79a8a2
  412046:	inc    ebp
  412047:	fld    TBYTE PTR [edx+0x7d]
  41204a:	pop    ebx
  41204b:	daa    
  41204c:	leave  
  41204d:	aam    0x87
  41204f:	mov    BYTE PTR [edx],dh
  412051:	call   0x9f1a:0x3e580ccc
  412058:	test   eax,0x2a3a2ebf
  41205d:	cmp    eax,0xef28d6c7
  412062:	add    BYTE PTR [esi+0x28685281],bh
  412068:	int3   
  412069:	jmp    0x27bd:0xfa0b824f
  412070:	ins    DWORD PTR es:[edi],dx
  412071:	out    dx,eax
  412072:	fnstcw WORD PTR [ebp+ecx*4-0x3554dbf8]
  412079:	jg     0x412087
  41207b:	dec    esp
  41207c:	cmp    BYTE PTR [edx-0x5de69d4f],bh
  412082:	mov    eax,0xf1d84cf1
  412087:	std    
  412088:	mov    dl,al
  41208a:	jg     0x4120ec
  41208c:	mov    edx,0xe91c1841
  412091:	or     eax,0x2083066d
  412096:	cdq    
  412097:	call   0x3acd:0x2cfbee39
  41209e:	add    cl,dh
  4120a0:	mov    ah,0x71
  4120a2:	pop    edx
  4120a3:	loopne 0x4120a5
  4120a5:	outs   dx,DWORD PTR ds:[esi]
  4120a6:	cld    
  4120a7:	pop    ecx
  4120a8:	inc    ebp
  4120a9:	xor    ebp,edi
  4120ab:	out    dx,eax
  4120ac:	fmul   st(4),st
  4120ae:	bound  edi,QWORD PTR [eax-0x5f35734a]
  4120b4:	cmp    BYTE PTR [esi+0x5f],ah
  4120b7:	js     0x412105
  4120b9:	mov    ch,0x8a
  4120bb:	adc    ecx,DWORD PTR [ecx]
  4120bd:	rol    BYTE PTR [esi+0x3dc42d2a],0x64
  4120c4:	jne    0x412110
  4120c6:	les    esi,FWORD PTR [esi+0x4e188852]
  4120cc:	pop    ebp
  4120cd:	call   0x4331:0x9861b101
  4120d4:	js     0x412118
  4120d6:	not    BYTE PTR [ecx+0x5aa8a69c]
  4120dc:	retf   
  4120dd:	in     al,dx
  4120de:	ja     0x412084
  4120e0:	(bad)  
  4120e1:	xlat   BYTE PTR ds:[ebx]
  4120e2:	push   ecx
  4120e3:	cmp    BYTE PTR [esi],bl
  4120e5:	fcom   QWORD PTR [ebx-0x5a]
  4120e8:	hlt    
  4120e9:	(bad)  
  4120ea:	rol    DWORD PTR [ebx+0x7c],1
  4120ed:	mov    ch,0x8c
  4120ef:	adc    dl,BYTE PTR [esi+edi*1+0x2a]
  4120f3:	popf   
  4120f4:	dec    edi
  4120f5:	add    DWORD PTR [ebx+0x154d9a52],edx
  4120fb:	lods   eax,DWORD PTR ds:[esi]
  4120fc:	test   eax,0xaf3e143c
  412101:	dec    ebp
  412102:	test   eax,0xa61a1627
  412107:	add    ecx,ecx
  412109:	aad    0x29
  41210b:	stos   BYTE PTR es:[edi],al
  41210c:	or     DWORD PTR [eax],0xffffffc0
  41210f:	push   ebx
  412110:	lods   eax,DWORD PTR ds:[esi]
  412111:	cmp    ch,BYTE PTR [edx+0x478323c9]
  412117:	data16 std 
  412119:	pop    eax
  41211a:	test   eax,0x3d59cfb4
  41211f:	adc    BYTE PTR [ecx-0x3c],ah
  412122:	dec    esp
  412123:	mov    al,0x93
  412125:	xor    eax,0x999fa01
  41212a:	cs icebp 
  41212c:	mov    eax,ds:0x53798527
  412131:	cmp    ebx,DWORD PTR [edi+0x1dbba72f]
  412137:	jmp    0x4120f4
  412139:	mov    bl,0x91
  41213b:	mov    al,0x8f
  41213d:	sbb    eax,0x8926ae0a
  412142:	xor    al,0x17
  412144:	aas    
  412145:	xchg   ebp,eax
  412146:	lahf   
  412147:	jecxz  0x4121b0
  412149:	out    0x3d,al
  41214b:	xchg   ebx,eax
  41214c:	icebp  
  41214d:	stc    
  41214e:	mov    ds,WORD PTR [esi+0x3c]
  412151:	sub    al,0x52
  412153:	sahf   
  412154:	js     0x412165
  412156:	add    DWORD PTR [ebx+ecx*2-0x2195f47d],ebp
  41215d:	jbe    0x412124
  41215f:	push   ecx
  412160:	push   0x97386e
  412165:	xor    eax,0x9ea66c75
  41216a:	(bad)  
  41216b:	push   ebp
  41216c:	dec    ebx
  41216d:	add    edx,ebx
  41216f:	cmp    eax,0x697a5110
  412175:	cwde   
  412176:	jne    0x4121ce
  412178:	push   edx
  412179:	cli    
  41217a:	inc    esi
  41217b:	pop    esi
  41217c:	pop    ecx
  41217d:	in     al,0xae
  41217f:	xchg   BYTE PTR [esi+0x6fe62ec7],dl
  412185:	push   cs
  412186:	js     0x41218b
  412188:	and    DWORD PTR [ebp+0x78],edx
  41218b:	loopne 0x412191
  41218d:	push   ebp
  41218e:	movd   mm3,DWORD PTR fs:[ecx-0x2c]
  412193:	pop    ebp
  412194:	retf   0x7627
  412197:	in     eax,0xed
  412199:	mov    ah,0x9b
  41219b:	mov    ds,ecx
  41219d:	adc    ch,0x99
  4121a0:	(bad)  
  4121a1:	(bad)  
  4121a3:	and    ebx,DWORD PTR ds:0xacb2133d
  4121a9:	mov    esp,0x805ee2fc
  4121ae:	enter  0x7933,0x4c
  4121b2:	in     al,dx
  4121b3:	pop    esi
  4121b4:	sub    al,0xf6
  4121b6:	push   ds
  4121b7:	xor    al,0xbc
  4121b9:	push   ebp
  4121ba:	pushf  
  4121bb:	or     BYTE PTR [ecx-0x4e54effb],bl
  4121c1:	jne    0x41221a
  4121c3:	imul   DWORD PTR [edx]
  4121c5:	dec    edx
  4121c6:	aas    
  4121c7:	mov    bl,dl
  4121c9:	push   ebp
  4121ca:	mov    esp,0x88cef19c
  4121cf:	cmp    ah,BYTE PTR [ecx]
  4121d1:	pusha  
  4121d2:	mov    eax,0xd4f9abe3
  4121d7:	scas   eax,DWORD PTR es:[edi]
  4121d8:	mov    esp,0x7ce6b4e1
  4121dd:	cmp    al,ah
  4121df:	ins    DWORD PTR es:[edi],dx
  4121e0:	and    dh,dh
  4121e2:	dec    esi
  4121e3:	or     eax,eax
  4121e5:	dec    esp
  4121e6:	test   al,0x64
  4121e8:	dec    edx
  4121e9:	xchg   ebp,eax
  4121ea:	daa    
  4121eb:	mov    dh,0x4c
  4121ed:	jmp    FWORD PTR [edi+0x36886661]
  4121f3:	ret    0xecc8
  4121f6:	jnp    0x41225e
  4121f8:	es dec eax
  4121fa:	das    
  4121fb:	fild   QWORD PTR [ecx+0xc73a1e4]
  412201:	jp     0x4121c4
  412203:	repz lahf 
  412205:	mov    ds:0xab984f72,eax
  41220a:	test   eax,0xdeb0e882
  41220f:	xlat   BYTE PTR ds:[ebx]
  412210:	fst    DWORD PTR [esi+0x40e613af]
  412216:	in     al,dx
  412217:	call   0x9749ba5e
  41221c:	adc    eax,0x2b2d6503
  412221:	sbb    al,0x79
  412223:	mov    al,0x2f
  412225:	dec    eax
  412226:	xchg   esp,eax
  412227:	imul   eax,edx,0x16b4ba76
  41222d:	push   ds
  41222e:	mov    al,0x2a
  412230:	pop    ss
  412231:	sub    DWORD PTR [ecx+0x50],0x26
  412235:	jne    0x41221d
  412237:	sub    BYTE PTR [ebx],ch
  412239:	(bad)  
  41223a:	ds out dx,al
  41223c:	ds inc ebx
  41223e:	cld    
  41223f:	or     ah,BYTE PTR [edi+eax*8+0xa607b83]
  412246:	arpl   WORD PTR [ecx],bp
  412248:	xchg   ebp,eax
  412249:	mov    BYTE PTR [ecx],0xca
  41224c:	xchg   ecx,eax
  41224d:	shr    bl,1
  41224f:	popf   
  412250:	ins    DWORD PTR es:[edi],dx
  412251:	xchg   cl,ah
  412253:	sub    eax,0x225577ed
  412258:	dec    ebp
  412259:	lods   eax,DWORD PTR ds:[esi]
  41225a:	pop    esp
  41225b:	(bad)  [ebx+0x67ec68d5]
  412261:	push   ss
  412262:	pop    edi
  412263:	ret    0x2f4a
  412266:	mov    ch,0x6
  412268:	mov    ?,WORD PTR [esi+0x76bc7618]
  41226e:	les    ecx,FWORD PTR [eax+0x2cee2ef]
  412274:	(bad)  
  412275:	ins    DWORD PTR es:[edi],dx
  412276:	xor    ah,dl
  412278:	(bad)  
  412279:	scas   al,BYTE PTR es:[edi]
  41227a:	cs emms 
  41227d:	push   ecx
  41227e:	aaa    
  41227f:	mov    cl,BYTE PTR [esp+ecx*1]
  412282:	and    eax,0xdb867bfe
  412287:	and    DWORD PTR [ebx+eiz*4-0xc],ecx
  41228b:	(bad)  
  41228d:	and    al,0x4f
  41228f:	inc    esi
  412290:	cmp    DWORD PTR [edi],ecx
  412292:	pop    ss
  412293:	mov    al,0xf2
  412295:	shl    ebx,cl
  412297:	outs   dx,BYTE PTR ds:[esi]
  412298:	(bad)  [ecx-0x43e9d3ee]
  41229e:	xchg   esi,eax
  41229f:	add    eax,0x632eac
  4122a4:	sbb    eax,0x9735c2ec
  4122a9:	sub    DWORD PTR [eax],edx
  4122ab:	std    
  4122ac:	inc    esi
  4122ad:	push   edx
  4122ae:	(bad)  
  4122af:	popf   
  4122b0:	pop    esi
  4122b1:	repz mov ds:0x91f2c48e,al
  4122b7:	lahf   
  4122b8:	pop    esi
  4122b9:	punpckhwd mm7,mm6
  4122bc:	jp     0x41229d
  4122be:	pop    esi
  4122bf:	xor    esp,DWORD PTR [ebp-0x5a85e8b5]
  4122c5:	push   edx
  4122c6:	fistp  WORD PTR [eax+0x34]
  4122c9:	push   ss
  4122ca:	sub    ecx,esi
  4122cc:	or     ecx,eax
  4122ce:	mov    BYTE PTR [edi+0x29],ch
  4122d1:	adc    dh,0xcc
  4122d4:	mov    cl,0x2c
  4122d6:	ret    
  4122d7:	nop
  4122d8:	cmp    DWORD PTR [esi+0x1e],eax
  4122db:	push   0xfffffffd
  4122dd:	loop   0x412284
  4122df:	scas   al,BYTE PTR es:[edi]
  4122e0:	pushf  
  4122e1:	test   BYTE PTR [esi],cl
  4122e3:	dec    esp
  4122e4:	mov    eax,0x218cb1d2
  4122e9:	cld    
  4122ea:	pop    edx
  4122eb:	push   0x8
  4122ed:	mov    ch,0xfc
  4122ef:	mov    es,WORD PTR [ebp+0x13]
  4122f2:	neg    BYTE PTR [esi+0x1c]
  4122f5:	adc    DWORD PTR [ebx+0x6be90e0d],esi
  4122fb:	xchg   ebx,eax
  4122fc:	sub    eax,0xbd7bc416
  412301:	jge    0x4122dd
  412303:	ja     0x4122e2
  412305:	pushf  
  412306:	icebp  
  412307:	call   0xd609:0x59ce661b
  41230e:	pop    ecx
  41230f:	or     eax,0x7d37fd40
  412314:	mov    ebx,0xd29204b0
  412319:	mov    cl,0xed
  41231b:	rcr    edx,1
  41231d:	(bad)  
  41231e:	mov    edx,DWORD PTR [esi-0x24]
  412321:	add    eax,0x8bb00465
  412326:	pushf  
  412327:	sub    BYTE PTR [esi],0x7a
  41232a:	(bad)  
  41232b:	loop   0x41234e
  41232d:	xchg   esi,eax
  41232e:	cmp    eax,0x1142af74
  412333:	pop    ds
  412334:	ss daa 
  412336:	in     eax,0xba
  412338:	push   edi
  412339:	lods   eax,DWORD PTR ds:[esi]
  41233a:	cmp    eax,0xecb1959b
  41233f:	les    edi,FWORD PTR [ecx-0x2f14be22]
  412345:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412346:	push   es
  412347:	icebp  
  412348:	inc    edx
  412349:	or     eax,0x23c602a3
  41234e:	pop    edx
  41234f:	and    ebx,DWORD PTR [ebp-0x574a2f7b]
  412355:	ss stos BYTE PTR es:[edi],al
  412357:	dec    esi
  412358:	test   BYTE PTR ds:0xc84bb8,ah
  41235e:	clc    
  41235f:	or     al,0x8f
  412361:	rol    BYTE PTR [edx],cl
  412363:	hlt    
  412364:	cmp    BYTE PTR [ecx+0x27],0x71
  412368:	in     al,dx
  412369:	jo     0x4123d5
  41236b:	xchg   ecx,eax
  41236c:	out    0xa8,eax
  41236e:	push   cs
  41236f:	sbb    edi,ebp
  412371:	mov    bh,0x22
  412373:	loope  0x4123e8
  412375:	sbb    cl,BYTE PTR [ecx]
  412377:	xor    esi,eax
  412379:	mov    al,ds:0x848789a3
  41237e:	push   esp
  41237f:	and    BYTE PTR [esi-0x47f00dec],ch
  412385:	(bad)  [edx*2+0xcc67245]
  41238c:	fwait
  41238d:	push   bx
  41238f:	adc    ebp,esp
  412391:	fcomp  QWORD PTR [edi+0x24112b9a]
  412397:	push   edi
  412398:	daa    
  412399:	pop    esi
  41239a:	fdivr  DWORD PTR [edx+eax*2-0x20]
  41239e:	mov    ah,0x9e
  4123a0:	aas    
  4123a1:	dec    ebx
  4123a2:	ds mov ch,0xcf
  4123a5:	test   BYTE PTR [ebp+0x35e7e905],cl
  4123ab:	jge    0x41241e
  4123ad:	inc    esi
  4123ae:	(bad)  
  4123af:	std    
  4123b0:	jecxz  0x412348
  4123b2:	jg     0x412399
  4123b4:	imul   edx,ebx,0x2e
  4123b7:	xchg   esi,eax
  4123b8:	mov    ecx,edi
  4123ba:	xor    eax,0xdb8150ad
  4123bf:	retf   
  4123c0:	daa    
  4123c1:	or     DWORD PTR [esi],0x43125176
  4123c7:	andnps xmm3,xmm2
  4123ca:	popf   
  4123cb:	xor    BYTE PTR [edi+0x51e0432a],bh
  4123d1:	test   BYTE PTR [edi-0x48],ah
  4123d4:	fisubr WORD PTR [ecx+0x50]
  4123d7:	mov    eax,?
  4123d9:	lea    ebx,[ebx-0x3a203b45]
  4123df:	mov    ah,0xbd
  4123e1:	push   0x2fe9b798
  4123e6:	mov    ebp,eax
  4123e8:	xor    esi,edx
  4123ea:	in     eax,0xfe
  4123ec:	ret    
  4123ed:	iret   
  4123ee:	jno    0x41244f
  4123f0:	and    BYTE PTR [eax+0x754142b0],bh
  4123f6:	iret   
  4123f7:	test   bh,cl
  4123f9:	or     al,0xd0
  4123fb:	fldenv [ecx+0x8]
  4123fe:	push   ds
  4123ff:	jp     0x412439
  412401:	aaa    
  412402:	inc    ebp
  412403:	lock les edi,FWORD PTR [ebp+0x3ed2300c]
  41240a:	ss mov al,0x51
  41240d:	mov    eax,0xe46494aa
  412412:	mov    bl,0xb8
  412414:	sbb    edx,eax
  412416:	mov    esi,DWORD PTR [ecx-0x71]
  412419:	and    eax,0x5b30f821
  41241e:	aas    
  41241f:	cmp    eax,0x7583ea62
  412424:	in     al,dx
  412425:	pop    es
  412426:	addr16 xchg esi,eax
  412428:	dec    ecx
  412429:	sbb    BYTE PTR [esi+ebx*4],0x62
  41242d:	ret    
  41242e:	jp     0x4123cd
  412430:	mov    dh,0x1c
  412432:	(bad)  
  412433:	cld    
  412434:	sub    dh,BYTE PTR [edi]
  412436:	int3   
  412437:	or     ebx,edi
  412439:	mov    ah,0x20
  41243b:	mov    eax,0x90105225
  412440:	data16 and al,0xe4
  412443:	adc    bh,BYTE PTR [eax+0x2aca9654]
  412449:	push   esp
  41244a:	sub    eax,0xde0e4e59
  41244f:	and    edx,ebp
  412451:	and    BYTE PTR [edx+edi*2],dl
  412454:	cdq    
  412455:	cwde   
  412456:	mov    esp,0x7434612f
  41245b:	fstp   QWORD PTR ss:[eax+0xfa0859]
  412462:	xchg   edi,eax
  412463:	xlat   BYTE PTR ds:[ebx]
  412464:	test   esp,esi
  412466:	(bad)  
  412467:	mov    BYTE PTR [ecx+0x2e],ah
  41246a:	jl     0x41240f
  41246c:	cmp    DWORD PTR [edx+0xf99eb7b],esp
  412472:	ret    
  412473:	dec    al
  412475:	pop    eax
  412476:	dec    ebp
  412477:	adc    BYTE PTR [eax+edi*4],bh
  41247a:	pop    DWORD PTR [edi]
  41247c:	mov    BYTE PTR [edi+ecx*1],cl
  41247f:	dec    esp
  412480:	sub    ecx,esi
  412482:	mov    ebx,0x14b13f65
  412487:	out    0xe2,eax
  412489:	mov    cl,0x76
  41248b:	ins    BYTE PTR es:[edi],dx
  41248c:	das    
  41248d:	ss aas 
  41248f:	outs   dx,DWORD PTR ds:[esi]
  412490:	sbb    esp,edi
  412492:	jne    0x412504
  412494:	js     0x412457
  412496:	nop
  412497:	pop    ds
  412498:	add    BYTE PTR ds:0xc45d2320,ch
  41249e:	jae    0x412501
  4124a0:	sub    ecx,DWORD PTR [ebx+0x5]
  4124a3:	inc    edx
  4124a4:	bound  ecx,QWORD PTR [ebp+0x1461bed5]
  4124aa:	les    ebx,FWORD PTR [edi+edi*8+0x15]
  4124ae:	in     eax,dx
  4124af:	test   DWORD PTR [edi+0x11272ee3],ebx
  4124b5:	sahf   
  4124b6:	fisttp WORD PTR [ebx-0x8752acd]
  4124bc:	loopne 0x41247e
  4124be:	or     BYTE PTR [edi-0x59],dh
  4124c1:	push   ds
  4124c2:	outs   dx,DWORD PTR ds:[esi]
  4124c3:	inc    eax
  4124c4:	outs   dx,BYTE PTR ds:[esi]
  4124c5:	jl     0x4124a0
  4124c7:	fcomp  DWORD PTR [ebp-0x63]
  4124ca:	jmp    0xe70c:0x84ef953
  4124d1:	push   ebp
  4124d2:	mov    edi,0x21ed9954
  4124d7:	sbb    BYTE PTR [esi],ah
  4124d9:	aam    0xe2
  4124db:	data16 adc al,0xc4
  4124de:	sbb    DWORD PTR [esi+0x75],eax
  4124e1:	mov    ecx,0x4ac76d21
  4124e6:	iret   
  4124e7:	jb     0x412480
  4124e9:	pop    esi
  4124ea:	lock loopne 0x412562
  4124ed:	or     ah,BYTE PTR [ebp+edx*8-0x221ff31a]
  4124f4:	mov    ah,0x35
  4124f6:	push   edx
  4124f7:	adc    eax,0x57a6f548
  4124fc:	xchg   edi,eax
  4124fd:	fiadd  WORD PTR [edi*2+0x75ffed62]
  412504:	mov    bl,0x7b
  412506:	mov    esi,0xf2cb49a7
  41250b:	hlt    
  41250c:	out    dx,al
  41250d:	fimul  WORD PTR [edi+0x77a8d71]
  412513:	mov    ch,0x50
  412515:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412516:	and    cl,BYTE PTR [esp+eax*8]
  412519:	pop    edi
  41251a:	adc    eax,0x59a735c
  41251f:	pop    esp
  412520:	jae    0x412580
  412522:	jge    0x412548
  412524:	dec    edx
  412525:	test   DWORD PTR [ebx],0xe35f3ef3
  41252b:	repz jmp 0xe1ae6b4b
  412531:	mov    eax,edx
  412533:	mov    esi,0x993e0770
  412538:	mov    ds:0xacfb9a7f,al
  41253d:	test   BYTE PTR [edx+0x68],bh
  412540:	stos   DWORD PTR es:[edi],eax
  412541:	dec    edx
  412542:	dec    ecx
  412543:	ins    BYTE PTR es:[edi],dx
  412544:	imul   ebx,DWORD PTR [ecx+ebp*2],0x210f213e
  41254b:	jae    0x412563
  41254d:	xchg   ebp,eax
  41254e:	push   esi
  41254f:	mov    eax,0xad7a4cfc
  412554:	into   
  412555:	ret    0x5dad
  412558:	xor    DWORD PTR [edx-0x54],edx
  41255b:	lea    esp,[eax]
  41255d:	xor    edx,esp
  41255f:	sbb    DWORD PTR [edx+0x2b],ebx
  412562:	cmp    cl,BYTE PTR [edx+0x2]
  412565:	push   ss
  412566:	outs   dx,BYTE PTR ds:[esi]
  412567:	pusha  
  412568:	dec    edx
  412569:	(bad)  
  41256a:	in     eax,0xcc
  41256c:	scas   eax,DWORD PTR es:[edi]
  41256d:	pop    ss
  41256e:	fld    QWORD PTR [edi]
  412570:	stos   BYTE PTR es:[edi],al
  412571:	xor    edi,eax
  412573:	cdq    
  412574:	xor    al,0x56
  412576:	lods   al,BYTE PTR ds:[esi]
  412577:	fld    TBYTE PTR [ebp+0x2b]
  41257a:	jp     0x41257e
  41257c:	mov    edx,0x848c172f
  412581:	xchg   ecx,eax
  412582:	pusha  
  412583:	sbb    al,BYTE PTR [ecx+0x7f]
  412586:	jge    0x412601
  412588:	pop    ss
  412589:	fisub  DWORD PTR cs:[edi-0x2c]
  41258d:	mov    ss,WORD PTR gs:[edx-0x43]
  412591:	neg    DWORD PTR [esi-0x24]
  412594:	jns    0x4125bb
  412596:	dec    esi
  412597:	push   ecx
  412598:	pop    esp
  412599:	fcom   DWORD PTR ds:0xadb4d55f
  41259f:	and    bh,BYTE PTR [ecx-0x36211277]
  4125a5:	push   ebx
  4125a6:	add    edi,DWORD PTR [edi]
  4125a8:	sub    BYTE PTR [esi],bl
  4125aa:	push   eax
  4125ab:	test   BYTE PTR [ebx+0x2a0104e2],bl
  4125b1:	int3   
  4125b2:	stos   DWORD PTR es:[edi],eax
  4125b3:	clc    
  4125b4:	rol    DWORD PTR [ecx-0x7572b8c4],0xf6
  4125bb:	jg     0x4125df
  4125bd:	or     al,BYTE PTR [edi-0x6c]
  4125c0:	int3   
  4125c1:	jbe    0x41254b
  4125c3:	add    al,BYTE PTR ds:0xd6af7445
  4125c9:	xchg   edi,eax
  4125ca:	and    eax,0xca16d30d
  4125cf:	sub    al,0x41
  4125d1:	or     BYTE PTR [edx],ah
  4125d3:	test   eax,0x6255a21f
  4125d8:	std    
  4125d9:	jmp    0x20a7:0x2315e15e
  4125e0:	add    eax,0xb0ad62ac
  4125e5:	outs   dx,DWORD PTR ds:[esi]
  4125e6:	push   0xa92b8616
  4125eb:	dec    DWORD PTR [eax-0x8]
  4125ee:	mov    ebx,0x4a6f6700
  4125f3:	cli    
  4125f4:	cmc    
  4125f5:	aam    0x72
  4125f7:	dec    ecx
  4125f8:	in     eax,dx
  4125f9:	push   esi
  4125fa:	jp     0x412636
  4125fc:	sub    edx,esp
  4125fe:	outs   dx,BYTE PTR ds:[esi]
  4125ff:	call   0x753f:0x7a8e8fd6
  412606:	adc    BYTE PTR [esi],dl
  412608:	or     esi,ebx
  41260a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41260b:	stc    
  41260c:	sub    eax,DWORD PTR [esi+0x1c9f35f8]
  412612:	stos   DWORD PTR es:[edi],eax
  412613:	imul   ebx,DWORD PTR [ecx+0x603b205d],0xffffffc6
  41261a:	jge    0x4125d4
  41261c:	ins    DWORD PTR es:[edi],dx
  41261d:	fdiv   QWORD PTR [ebx-0x38ea9ae9]
  412623:	pop    ebp
  412624:	lock xor eax,0xcfe97a4a
  41262a:	xchg   ecx,eax
  41262b:	inc    esp
  41262c:	fsub   st,st(7)
  41262e:	in     al,dx
  41262f:	add    bh,cl
  412631:	mov    BYTE PTR [edi+0x40237f03],0x62
  412638:	add    al,0x16
  41263a:	inc    ebp
  41263b:	popf   
  41263c:	dec    esi
  41263d:	add    DWORD PTR [ebx+ecx*2-0x25],edx
  412641:	bound  esi,QWORD PTR [eax+0x2dfb729c]
  412647:	dec    ebp
  412648:	pop    ecx
  412649:	mov    ?,WORD PTR ds:0x60b69384
  41264f:	stc    
  412650:	repnz (bad) 
  412652:	imul   ebp,DWORD PTR [ebx+0x63d6611d],0x8
  412659:	push   esi
  41265a:	jns    0x4126a3
  41265c:	cli    
  41265d:	sub    DWORD PTR [eax-0x330c8393],0xffffff8c
  412664:	mov    ds:0xaee731d2,al
  412669:	sub    esp,DWORD PTR [edi+0x5c]
  41266c:	test   al,0xac
  41266e:	inc    edi
  41266f:	call   0xe22d:0x96d65cbe
  412676:	mov    edx,0xe0a4d5d7
  41267b:	xor    DWORD PTR [ebp+0x3a0314f1],ebp
  412681:	push   edx
  412682:	xchg   ecx,eax
  412683:	rcl    BYTE PTR [ebx+0x5aaaa68e],cl
  412689:	mov    cl,0x10
  41268b:	inc    esp
  41268c:	add    al,0xb5
  41268e:	test   al,0x8a
  412690:	pushf  
  412691:	xchg   edi,eax
  412692:	jo     0x412691
  412694:	scas   eax,DWORD PTR es:[edi]
  412695:	test   al,0x29
  412697:	pop    ss
  412698:	xchg   ecx,eax
  412699:	push   esi
  41269a:	sbb    DWORD PTR [ebx+0x1235b358],eax
  4126a0:	fisubr WORD PTR [eax+0x60]
  4126a3:	es xchg esi,eax
  4126a5:	cmp    eax,0xb024e20c
  4126aa:	bound  ebp,QWORD PTR [bp+di-0x36]
  4126ae:	jbe    0x41268e
  4126b0:	or     eax,0xf336fe21
  4126b6:	mov    BYTE PTR [eax-0x2b7eb09f],al
  4126bc:	push   0x54
  4126be:	shr    BYTE PTR [edx],cl
  4126c0:	mov    WORD PTR [ecx-0x4e],?
  4126c3:	lock push ecx
  4126c5:	and    al,0xe8
  4126c7:	mov    ds:0x821833b0,al
  4126cc:	iret   
  4126cd:	adc    eax,0x6d2a3104
  4126d2:	sub    BYTE PTR [edx+esi*8-0x1b],0x8d
  4126d7:	push   es
  4126d8:	cmp    edi,0xffffffa9
  4126db:	xchg   ebx,eax
  4126dc:	push   eax
  4126dd:	xchg   esi,ebx
  4126df:	retf   
  4126e0:	nop
  4126e1:	pop    es
  4126e2:	stos   DWORD PTR es:[edi],eax
  4126e3:	mov    dl,0xb5
  4126e5:	dec    ebx
  4126e6:	dec    esi
  4126e7:	pop    esi
  4126e8:	imul   ecx,eax,0x7fb8425d
  4126ee:	ins    BYTE PTR es:[edi],dx
  4126ef:	mov    ebx,0x3cf28aa7
  4126f4:	retf   
  4126f5:	fwait
  4126f6:	push   0x77
  4126f8:	sub    edi,DWORD PTR [esp+eax*8+0x45]
  4126fc:	pop    eax
  4126fd:	in     eax,0x5f
  4126ff:	jmp    0xe175a4bb
  412704:	fimul  WORD PTR [eax*8+0x7f49b2ff]
  41270b:	mov    ds:0x1f04a31e,al
  412710:	ret    0xbbc3
  412713:	data16 add ch,BYTE PTR [ecx+0x17]
  412717:	ins    DWORD PTR es:[di],dx
  412719:	inc    eax
  41271a:	bound  edx,QWORD PTR [edx-0x113df793]
  412720:	adc    al,0x71
  412722:	jmp    0x412798
  412724:	test   eax,0xc93faa0
  412729:	push   ss
  41272a:	loop   0x41278a
  41272c:	pop    eax
  41272d:	ficomp DWORD PTR [ebx+0x4b242983]
  412733:	in     eax,0xe7
  412735:	outs   dx,BYTE PTR ds:[esi]
  412736:	shl    ax,1
  412739:	xchg   esi,eax
  41273a:	pop    ds
  41273b:	popf   
  41273c:	add    al,bh
  41273e:	retf   
  41273f:	mov    dh,BYTE PTR [ecx-0x14245cf8]
  412745:	pop    esi
  412746:	add    al,0xd5
  412748:	jno    0x4127c1
  41274a:	hlt    
  41274b:	inc    ecx
  41274c:	push   ebp
  41274d:	call   DWORD PTR [ecx-0x5fb4cf78]
  412753:	in     eax,0x4d
  412755:	push   ss
  412756:	lock bound ebp,QWORD PTR ds:0x6eccda91
  41275d:	jmp    0x33e4809a
  412762:	dec    ebx
  412763:	cld    
  412764:	mov    esp,0x5891dc16
  412769:	sub    al,0x6c
  41276c:	xchg   esp,eax
  41276d:	adc    cl,BYTE PTR ds:[ebx+0x5e]
  412771:	imul   esp,DWORD PTR [ebp-0x22b95464],0xffffffa5
  412778:	and    eax,0xde7a7046
  41277d:	adc    ch,BYTE PTR [ebp+0x9]
  412780:	or     al,0x23
  412782:	pop    esi
  412783:	mov    al,BYTE PTR [edi+0x48d9407c]
  412789:	xchg   esi,eax
  41278a:	sbb    al,BYTE PTR [ebp-0x3f8b76d4]
  412790:	mov    bl,0xb8
  412792:	inc    ebx
  412793:	inc    edi
  412794:	cmc    
  412795:	cmp    eax,0xa937c39e
  41279a:	jnp    0x41278d
  41279c:	jmp    0x8f45:0xe2b009f4
  4127a3:	add    BYTE PTR [edx-0x7dc5602a],dl
  4127a9:	add    BYTE PTR [edx+0x1c658484],dl
  4127af:	jmp    0xe86b2c35
  4127b4:	in     al,dx
  4127b5:	pop    esp
  4127b6:	icebp  
  4127b7:	xor    al,0xab
  4127b9:	mov    es,WORD PTR [ecx-0x22e066cd]
  4127bf:	aaa    
  4127c0:	mov    ecx,0x4dd14b41
  4127c5:	mov    ecx,0x7a0a6f1
  4127ca:	mov    ?,WORD PTR [edi-0x5c]
  4127cd:	pusha  
  4127ce:	test   al,0x34
  4127d1:	inc    eax
  4127d2:	dec    esi
  4127d3:	mov    ch,0x70
  4127d5:	in     al,dx
  4127d6:	mov    esp,DWORD PTR [ebp-0x74]
  4127d9:	xor    ecx,eax
  4127db:	and    edx,DWORD PTR [eax]
  4127dd:	or     BYTE PTR [esi+esi*2-0x14c10133],bl
  4127e4:	jmp    0x4e089339
  4127e9:	ins    DWORD PTR es:[edi],dx
  4127ea:	sti    
  4127eb:	mov    bl,0xe7
  4127ed:	neg    DWORD PTR [ebx*1+0x7420aa5c]
  4127f4:	xor    al,0x29
  4127f6:	inc    ecx
  4127f7:	inc    esi
  4127f8:	mov    ebx,0xc20c3a7b
  4127fd:	ret    0xfa4
  412800:	dec    ebx
  412801:	sbb    bl,BYTE PTR [esi-0x2f0c1f4d]
  412807:	and    ecx,edx
  412809:	push   esi
  41280a:	stos   DWORD PTR es:[edi],eax
  41280b:	call   0x8b69f886
  412810:	fstp   DWORD PTR [ebx+0x4793b34e]
  412816:	test   BYTE PTR [ecx+0x1091f343],al
  41281c:	sar    ebp,cl
  41281e:	inc    eax
  41281f:	or     dh,al
  412821:	fcom   DWORD PTR [edx]
  412823:	repnz dec esi
  412825:	xor    DWORD PTR cs:[ebx+eax*1],0xd9d3f525
  41282d:	leave  
  41282e:	mov    ecx,0xa08a3f83
  412833:	sqrtps xmm4,XMMWORD PTR [ebp-0x51]
  412837:	lods   al,BYTE PTR ds:[esi]
  412838:	inc    esi
  412839:	test   eax,0x30340c9c
  41283e:	ins    BYTE PTR es:[edi],dx
  41283f:	inc    ebx
  412840:	and    eax,0x3975a6a8
  412845:	rep lods al,BYTE PTR ds:[esi]
  412847:	lods   al,BYTE PTR ds:[esi]
  412848:	cmp    eax,0xb1822ce1
  41284d:	dec    ecx
  41284e:	inc    esp
  41284f:	daa    
  412850:	out    dx,al
  412851:	add    al,BYTE PTR [ebx+0x282e8cde]
  412857:	lods   al,BYTE PTR ds:[esi]
  412858:	retf   0xdcfe
  41285b:	cli    
  41285c:	add    bh,ch
  41285e:	shr    al,1
  412860:	leave  
  412861:	push   ds
  412862:	fldcw  WORD PTR [ecx-0x4d6100e8]
  412868:	inc    edi
  412869:	push   ss
  41286a:	lds    ebp,FWORD PTR [eax-0x6f6c7787]
  412870:	xchg   BYTE PTR [edx+edi*2-0x63],bh
  412874:	bound  ecx,QWORD PTR [edx+0x62446c30]
  41287a:	dec    ebp
  41287b:	add    al,0x2
  41287d:	jmp    0x3a240b1e
  412882:	adc    bl,BYTE PTR ds:0xa8b2120c
  412888:	xor    bh,BYTE PTR [edi+ebx*2-0x7f]
  41288c:	out    dx,eax
  41288d:	scas   eax,DWORD PTR es:[edi]
  41288e:	call   0x623c152d
  412893:	es addr16 mov bl,0x78
  412897:	cmp    BYTE PTR [eax+0x24],bh
  41289a:	dec    esi
  41289b:	add    edi,DWORD PTR [ecx]
  41289d:	int3   
  41289e:	jno    0x41286d
  4128a0:	lock adc BYTE PTR [ebp-0x11],ah
  4128a4:	jge    0x41288a
  4128a6:	(bad)  
  4128a7:	fdiv   st(3),st
  4128a9:	scas   eax,DWORD PTR es:[edi]
  4128aa:	mov    fs,WORD PTR [ebp+0x32038faa]
  4128b0:	sub    BYTE PTR [eax],ah
  4128b2:	shr    DWORD PTR [eax],cl
  4128b4:	jno    0x412913
  4128b6:	dec    edx
  4128b7:	out    0xab,eax
  4128b9:	out    dx,al
  4128ba:	push   ebp
  4128bb:	fsubr  QWORD PTR [eax-0x4d383854]
  4128c1:	(bad)  
  4128c2:	mov    eax,0x47565cb1
  4128c7:	es es or eax,0x698275c6
  4128ce:	sti    
  4128cf:	adc    ah,BYTE PTR [ebx+0x53]
  4128d2:	retf   0x79b2
  4128d5:	push   ss
  4128d6:	and    al,BYTE PTR [ebx+0x47]
  4128d9:	ret    0x9237
  4128dc:	(bad)  
  4128de:	fist   WORD PTR [eax+0x8e4f7c1]
  4128e4:	xchg   esp,eax
  4128e5:	xor    BYTE PTR [esi+0x2d],ah
  4128e8:	out    dx,eax
  4128e9:	pop    ss
  4128ea:	stc    
  4128eb:	sti    
  4128ec:	adc    DWORD PTR [esi+0x50],ecx
  4128ef:	xchg   edi,eax
  4128f0:	mov    eax,ds:0xbcd2bb7f
  4128f5:	jmp    0x8a52:0xe4929052
  4128fc:	inc    dx
  4128fe:	mov    edi,0x64758a3c
  412903:	retf   0x224e
  412906:	ret    
  412907:	ror    DWORD PTR [edi+ebx*1-0x52a5c29c],0xe5
  41290f:	les    edx,FWORD PTR [ebp+0x62]
  412912:	mov    edi,eax
  412914:	test   eax,0x3a460c4
  412919:	push   0xffffffe5
  41291b:	cmp    cl,BYTE PTR [ebp+0x2ea8962]
  412921:	mov    ecx,DWORD PTR [ecx]
  412923:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412924:	jb     0x4128e6
  412926:	mov    eax,0xfa4b48e5
  41292b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41292c:	retf   
  41292d:	mov    al,0x18
  41292f:	inc    ecx
  412930:	mov    ds,WORD PTR [edi]
  412932:	bound  esi,QWORD PTR [edx+0x43]
  412935:	scas   al,BYTE PTR es:[edi]
  412936:	mov    edx,0xd0dff2cf
  41293b:	pop    esp
  41293c:	or     DWORD PTR [edi],edi
  41293e:	xchg   BYTE PTR [esi],bh
  412940:	xor    dh,BYTE PTR [eax+0x5]
  412943:	cmc    
  412944:	ret    
  412945:	or     DWORD PTR [ebx],0x34
  412948:	pushf  
  412949:	jae    0x4128f3
  41294b:	push   es
  41294c:	push   ecx
  41294d:	mov    ds:0x55905b06,eax
  412952:	mov    al,ds:0x404d3b4
  412957:	fcmovnu st,st(2)
  412959:	or     eax,0x226411db
  41295e:	jmp    0xf77b:0xf51580b
  412965:	lock mov dh,0x84
  412968:	retfw  0xd151
  41296c:	jle    0x41299a
  41296e:	push   edi
  412970:	adc    edx,DWORD PTR [edi-0x79]
  412973:	adc    edi,DWORD PTR [ebx]
  412975:	or     eax,0x382102db
  41297a:	ss xchg ebp,eax
  41297c:	adc    edx,edx
  41297e:	and    ebx,edx
  412980:	fcmovnbe st,st(3)
  412982:	pushf  
  412983:	test   DWORD PTR [edi],edi
  412985:	fisttp QWORD PTR [edi-0x2133b9bd]
  41298b:	adc    eax,0x156b72d1
  412990:	xor    eax,ebx
  412992:	lea    esp,[edi+ebx*4-0x76]
  412996:	ins    DWORD PTR es:[edi],dx
  412997:	lsl    eax,WORD PTR [ebx+0x17]
  41299b:	lods   al,BYTE PTR ds:[esi]
  41299c:	push   edi
  41299d:	mov    al,0xbb
  41299f:	ds aaa 
  4129a1:	test   BYTE PTR [ecx+ebx*1+0x635d943],ch
  4129a8:	inc    ecx
  4129a9:	pop    ds
  4129aa:	mov    bh,0x8e
  4129ac:	aas    
  4129ad:	dec    ebp
  4129ae:	in     al,dx
  4129af:	(bad)  
  4129b0:	cli    
  4129b1:	adc    esi,DWORD PTR [ebp+0x78]
  4129b4:	mov    al,ds:0x1952a5cc
  4129b9:	mov    cl,0x72
  4129bb:	or     eax,0x702d664
  4129c0:	in     eax,dx
  4129c1:	sbb    cl,dh
  4129c3:	mov    al,BYTE PTR [edi]
  4129c5:	jecxz  0x412a07
  4129c7:	xor    DWORD PTR [eax],ebp
  4129c9:	int3   
  4129ca:	xor    BYTE PTR fs:[esi+esi*4+0x3f],ch
  4129cf:	mov    WORD PTR [ebx],ds
  4129d1:	lahf   
  4129d2:	pop    ds
  4129d3:	shl    DWORD PTR [esi],cl
  4129d5:	mov    ch,0x86
  4129d7:	jmp    0xe1365a0e
  4129dc:	pushf  
  4129dd:	and    ch,ch
  4129df:	lahf   
  4129e0:	loope  0x4129e6
  4129e2:	mov    WORD PTR [edi],cs
  4129e4:	cli    
  4129e5:	retf   
  4129e6:	mov    edx,0x5e97414
  4129eb:	mov    WORD PTR [edi+0x50b201be],?
  4129f1:	mov    edx,0xe9c57551
  4129f6:	popa   
  4129f7:	pop    eax
  4129f8:	fldenv [eax-0x29]
  4129fb:	fidiv  DWORD PTR [ecx]
  4129fd:	mov    BYTE PTR [edx+0x3f],bl
  412a00:	push   esi
  412a01:	ret    
  412a02:	jle    0x4129b2
  412a04:	(bad)
  412a07:	sub    al,0x2c
  412a09:	xchg   BYTE PTR [ecx-0x11],cl
  412a0c:	mov    dh,0x33
  412a0e:	xchg   ebx,eax
  412a0f:	jb     0x4129cd
  412a11:	cmp    ah,bh
  412a13:	sub    BYTE PTR [edx-0x6ab3352b],bh
  412a19:	outs   dx,DWORD PTR ds:[esi]
  412a1a:	retf   0xcae2
  412a1d:	out    0xc,al
  412a1f:	add    DWORD PTR [edx+0x15],0xecc0cac2
  412a26:	clc    
  412a27:	scas   al,BYTE PTR es:[edi]
  412a28:	cs sahf 
  412a2a:	pushf  
  412a2b:	ret    0xb757
  412a2e:	imul   ebx,DWORD PTR [edi],0xffffff9f
  412a31:	adc    eax,0x72362a7
  412a36:	ja     0x4129bc
  412a38:	mov    edi,0x99b11b47
  412a3d:	inc    esi
  412a3e:	pop    edi
  412a3f:	mov    edx,edx
  412a41:	push   0x670a0e45
  412a46:	jl     0x412ab0
  412a48:	ret    0x1677
  412a4b:	and    bl,BYTE PTR [edi+0x1c]
  412a4e:	mov    cl,0x22
  412a50:	out    dx,al
  412a51:	xchg   edi,eax
  412a52:	cs mov edx,0xc4d68add
  412a58:	sbb    BYTE PTR [eax+0x48],0x7e
  412a5c:	test   DWORD PTR [edi+ebp*8-0x53],esp
  412a60:	sbb    eax,0x80fd1f7a
  412a65:	mov    al,ds:0xee9ceb9a
  412a6a:	stos   BYTE PTR es:[edi],al
  412a6b:	push   ss
  412a6c:	xchg   ecx,eax
  412a6d:	push   eax
  412a6e:	pop    ds
  412a6f:	mov    DWORD PTR [esi],ebp
  412a71:	sub    al,0xaa
  412a74:	nop
  412a75:	out    dx,eax
  412a76:	fwait
  412a77:	nop
  412a78:	retf   0xe203
  412a7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a7c:	and    eax,0x1c31e728
  412a81:	pop    ecx
  412a82:	js     0x412af9
  412a84:	pop    ecx
  412a85:	xor    BYTE PTR [ebx+0x1004f6e8],ch
  412a8b:	lahf   
  412a8c:	ins    BYTE PTR es:[edi],dx
  412a8d:	pop    edi
  412a8e:	fwait
  412a8f:	clc    
  412a90:	xor    BYTE PTR [edx],cl
  412a92:	adc    eax,0x31965a
  412a97:	lahf   
  412a98:	cmp    BYTE PTR [esi],cl
  412a9a:	mov    dl,0xd9
  412a9c:	test   cl,ch
  412a9e:	ror    BYTE PTR [ecx-0x1d512d5d],1
  412aa4:	push   ebp
  412aa5:	stc    
  412aa6:	loope  0x412b18
  412aa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412aa9:	cld    
  412aaa:	js     0x412a33
  412aac:	xchg   edi,eax
  412aad:	sbb    dh,0x97
  412ab0:	mov    al,0x1b
  412ab2:	pop    edi
  412ab3:	jmp    0x412a5f
  412ab5:	daa    
  412ab6:	in     al,0x56
  412ab8:	push   es
  412ab9:	and    al,0x16
  412abb:	push   cs
  412abc:	cmp    al,0xca
  412abe:	pop    ss
  412abf:	cmc    
  412ac0:	out    dx,eax
  412ac1:	cmp    ebx,DWORD PTR [esi+0x1a]
  412ac4:	stos   BYTE PTR es:[edi],al
  412ac5:	adc    bh,ah
  412ac7:	ja     0x412a58
  412ac9:	push   0xb659561a
  412ace:	sbb    esp,DWORD PTR [ebx+0x31aa4173]
  412ad4:	fstp   QWORD PTR cs:[edx]
  412ad7:	lods   eax,DWORD PTR ds:[esi]
  412ad8:	lahf   
  412ad9:	push   edx
  412ada:	test   al,0x56
  412adc:	ftst   
  412ade:	hlt    
  412adf:	pop    esi
  412ae0:	aas    
  412ae1:	pop    edi
  412ae2:	or     eax,0xb18dc1f6
  412ae7:	xor    al,0x89
  412ae9:	jle    0x412a6b
  412aeb:	dec    ebp
  412aec:	fiadd  WORD PTR [ebp+0x6579203c]
  412af2:	jbe    0x412afe
  412af4:	mov    ch,0x82
  412af6:	popa   
  412af7:	rcr    eax,1
  412af9:	jge    0x412b19
  412afb:	sahf   
  412afc:	int3   
  412afd:	adc    ebx,ecx
  412aff:	add    edi,DWORD PTR [ecx-0x3]
  412b02:	inc    edx
  412b03:	sahf   
  412b04:	lods   eax,DWORD PTR ds:[esi]
  412b05:	stos   DWORD PTR es:[edi],eax
  412b06:	mov    ebx,0xbfb5f0c2
  412b0b:	dec    esp
  412b0c:	sti    
  412b0d:	ja     0x412aa7
  412b0f:	mov    ecx,0xc3fb1cbd
  412b14:	stos   BYTE PTR es:[edi],al
  412b15:	int    0x74
  412b17:	test   DWORD PTR [esi-0x67],edx
  412b1a:	and    ah,ch
  412b1c:	retf   0xa4
  412b1f:	xchg   edi,eax
  412b20:	mov    al,0x3
  412b22:	add    bl,bh
  412b24:	into   
  412b25:	mov    BYTE PTR ds:0xc48a156d,ah
  412b2b:	stos   DWORD PTR es:[edi],eax
  412b2c:	cvtps2pi mm4,QWORD PTR [ecx]
  412b2f:	adc    dl,BYTE PTR [eax+0x3338d441]
  412b35:	jne    0x412adf
  412b37:	sub    al,0xf8
  412b39:	fdiv   st,st(0)
  412b3b:	mov    al,ds:0xd7078f7f
  412b40:	lods   al,BYTE PTR ds:[esi]
  412b41:	xor    DWORD PTR [edi],ebx
  412b43:	sar    BYTE PTR [eax-0x30135acb],cl
  412b49:	xor    esi,eax
  412b4b:	and    eax,0xf6b72bf0
  412b50:	mov    ecx,0x451128a5
  412b55:	cmp    eax,0x9ad7eb93
  412b5a:	ret    
  412b5b:	xchg   ebx,eax
  412b5c:	in     eax,0x60
  412b5e:	and    al,0xec
  412b60:	sbb    dl,BYTE PTR [esi]
  412b62:	push   ss
  412b63:	pop    eax
  412b64:	lds    ebp,FWORD PTR [ecx-0x7b]
  412b67:	ret    0x7d34
  412b6a:	test   BYTE PTR [edi-0x36888b],dh
  412b70:	mov    eax,ds:0xa4bcd81e
  412b75:	pop    es
  412b76:	iret   
  412b77:	or     edx,ebx
  412b79:	cmp    al,0x82
  412b7b:	push   ecx
  412b7c:	pop    es
  412b7d:	push   ecx
  412b7e:	leave  
  412b7f:	xchg   esp,eax
  412b80:	mov    WORD PTR [esi-0x4e],ss
  412b83:	add    ch,ch
  412b85:	jl     0x412bda
  412b87:	push   edi
  412b88:	je     0x412bb1
  412b8a:	mov    esp,ebx
  412b8c:	mov    edx,ecx
  412b8e:	jbe    0x412bf5
  412b90:	xchg   DWORD PTR [ebx],esp
  412b92:	adc    eax,0x190d5a7c
  412b97:	mov    ebp,0x4ab5de1b
  412b9c:	mov    al,0x73
  412b9e:	sbb    eax,0x76dcdb6d
  412ba3:	mov    ah,0x3e
  412ba5:	or     bl,ch
  412ba7:	leave  
  412ba8:	out    0x57,eax
  412baa:	nop
  412bab:	into   
  412bac:	sbb    al,0x54
  412bae:	sbb    edx,eax
  412bb0:	pop    es
  412bb1:	dec    edx
  412bb2:	mov    ch,0xf5
  412bb4:	ins    BYTE PTR es:[edi],dx
  412bb5:	and    eax,0x1189ac79
  412bba:	mov    eax,0x300059ca
  412bbf:	test   al,0x11
  412bc1:	adc    DWORD PTR [eax+0x57],edx
  412bc4:	and    BYTE PTR [edi+0x58],bh
  412bc7:	xchg   esi,eax
  412bc8:	xchg   ebx,eax
  412bc9:	add    DWORD PTR [edi],esi
  412bcb:	push   esi
  412bcc:	sahf   
  412bcd:	jmp    0x3868798e
  412bd2:	mov    ebp,0x10bbf47
  412bd7:	imul   BYTE PTR [edx+edx*4-0x5eb178cc]
  412bde:	dec    ebx
  412bdf:	cmp    BYTE PTR [eax],dh
  412be1:	mov    BYTE PTR [eax+0x7c043afa],0x6
  412be8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412be9:	aad    0xb7
  412beb:	xchg   edi,eax
  412bec:	test   DWORD PTR [ebp*1+0x6628c49d],ebx
  412bf3:	popa   
  412bf4:	aam    0x16
  412bf6:	mov    eax,0x78b6c011
  412bfb:	arpl   WORD PTR [edx],di
  412bfd:	push   edi
  412bfe:	and    al,0x13
  412c00:	ror    DWORD PTR [ebx+edi*2+0x13],cl
  412c04:	pop    esp
  412c05:	idiv   DWORD PTR [eax]
  412c07:	inc    ecx
  412c08:	inc    esi
  412c09:	mov    ah,dh
  412c0b:	aas    
  412c0c:	mov    DWORD PTR [ebx-0x50],ebp
  412c0f:	cmp    BYTE PTR [ebp-0x4499a02],dh
  412c15:	jmp    0x367593b
  412c1a:	dec    eax
  412c1c:	in     eax,dx
  412c1d:	or     DWORD PTR [ecx+0x1290bca8],esi
  412c23:	ins    DWORD PTR es:[edi],dx
  412c24:	out    0xd6,eax
  412c26:	test   DWORD PTR [eax-0x1e],esp
  412c29:	aaa    
  412c2a:	mov    ah,0xf4
  412c2c:	rol    DWORD PTR [ecx-0x72],cl
  412c2f:	xlat   BYTE PTR ds:[ebx]
  412c30:	enter  0x8235,0xb
  412c34:	xchg   esi,eax
  412c35:	jle    0x412c4f
  412c37:	clc    
  412c38:	arpl   cx,bp
  412c3a:	test   al,0xe9
  412c3c:	aas    
  412c3d:	jmp    FWORD PTR [esi+ebp*2+0x26]
  412c41:	sbb    dl,cl
  412c43:	shl    DWORD PTR ds:0x927b2f08,1
  412c49:	xor    BYTE PTR [edi+0x7bd69332],dh
  412c4f:	pusha  
  412c50:	ror    DWORD PTR [ebp+0x67],0xe5
  412c54:	shl    bl,0x7a
  412c57:	xor    BYTE PTR ds:0xcaf1d4b6,bl
  412c5d:	cmp    dh,dh
  412c5f:	div    BYTE PTR [edi+0x55fe0171]
  412c65:	adc    eax,0x3c08f38a
  412c6a:	mov    ds:0x177f2d3f,al
  412c6f:	mov    esi,0x40673087
  412c74:	mov    ebx,0x95e36e5
  412c79:	mov    cl,BYTE PTR [bp+di+0x16]
  412c7d:	daa    
  412c7e:	and    DWORD PTR [ecx-0x215b296b],esi
  412c84:	or     DWORD PTR [edx-0x70ef6dbe],ebx
  412c8a:	pop    ds
  412c8b:	fucomip st,st(4)
  412c8d:	xor    edi,DWORD PTR [eax-0x7f]
  412c90:	jle    0x412c77
  412c92:	dec    esi
  412c93:	push   edx
  412c94:	sti    
  412c95:	xchg   BYTE PTR ds:0x83478b89,bl
  412c9b:	test   eax,0x383f2dd1
  412ca0:	stc    
  412ca1:	leave  
  412ca2:	jbe    0x412ce6
  412ca4:	cmp    ecx,edi
  412ca6:	cmp    al,0xb4
  412ca8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ca9:	cmp    al,0x30
  412cab:	push   ecx
  412cac:	sbb    eax,0xd2174a8e
  412cb1:	imul   esi,DWORD PTR [esi+0x1bb15d71],0xd67f8d67
  412cbb:	in     eax,0x2c
  412cbd:	jmp    0xb570:0x40822e92
  412cc4:	cld    
  412cc5:	fbld   TBYTE PTR [ebp-0x6f91f7d1]
  412ccb:	xchg   BYTE PTR [edi-0x5fc12d2f],cl
  412cd1:	xchg   esi,eax
  412cd2:	lods   eax,DWORD PTR ds:[esi]
  412cd3:	cmp    bl,BYTE PTR [esi]
  412cd5:	and    bl,BYTE PTR [eax+edi*2-0x49258056]
  412cdc:	ins    DWORD PTR es:[edi],dx
  412cdd:	push   ebp
  412cde:	test   al,0x7
  412ce0:	mov    bl,0x45
  412ce2:	adc    edi,ebp
  412ce4:	test   DWORD PTR [ebx+0x65a9bc8e],0x57a3a5e5
  412cee:	sti    
  412cef:	mov    eax,ds:0x589f66e7
  412cf4:	xchg   edi,eax
  412cf5:	mov    ds:0xcfd60809,al
  412cfa:	pop    ebp
  412cfb:	bound  ecx,QWORD PTR [eax]
  412cfd:	pop    es
  412cfe:	ja     0x412ca6
  412d00:	pop    ds
  412d01:	jno    0x412d40
  412d03:	inc    esi
  412d04:	fisttp WORD PTR [edx-0x7c5b9161]
  412d0a:	mov    eax,0xeed371df
  412d0f:	push   ebx
  412d10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d11:	je     0x412ccb
  412d13:	jl     0x412d11
  412d15:	push   eax
  412d16:	mov    ah,0x1b
  412d18:	jno    0x412d4b
  412d1a:	pop    ebp
  412d1b:	mov    bh,0x70
  412d1d:	cli    
  412d1e:	rcr    esp,cl
  412d20:	inc    esi
  412d21:	jmp    0x6b8a87a3
  412d26:	retf   0x578f
  412d29:	mov    esi,0xeaf1f369
  412d2e:	jmp    0x412d35
  412d30:	mov    ecx,0x1725487d
  412d35:	daa    
  412d36:	cwde   
  412d37:	retf   
  412d38:	cld    
  412d39:	or     DWORD PTR [edi+0x4f],esi
  412d3c:	das    
  412d3d:	xchg   edi,eax
  412d3e:	pop    ecx
  412d3f:	aas    
  412d40:	adc    ebp,edx
  412d42:	out    0x8f,eax
  412d44:	(bad)  
  412d45:	push   ds
  412d46:	lods   eax,DWORD PTR ds:[esi]
  412d47:	pusha  
  412d48:	push   ecx
  412d49:	jne    0x412d99
  412d4b:	(bad)  
  412d4c:	in     eax,0x13
  412d4e:	es inc ecx
  412d50:	les    ebx,FWORD PTR [ecx+0x20bbf779]
  412d56:	xchg   ebp,eax
  412d57:	and    esp,esi
  412d59:	xor    esp,DWORD PTR ds:0xd1b3706a
  412d5f:	fild   WORD PTR ss:[ebx]
  412d62:	dec    eax
  412d63:	mov    ebx,0x10564b29
  412d68:	jmp    0x412d22
  412d6a:	fsubr  QWORD PTR [ebp-0x1a]
  412d6d:	cmp    al,BYTE PTR [ebx]
  412d6f:	pop    ebx
  412d70:	scas   eax,DWORD PTR es:[edi]
  412d71:	shr    dl,cl
  412d73:	push   cs
  412d74:	push   ss
  412d75:	pop    es
  412d76:	call   0x6dc6:0x3c2fae63
  412d7d:	loopne 0x412db5
  412d7f:	mov    ds:0x35bdb7e2,eax
  412d84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d85:	in     eax,0x40
  412d87:	mov    dl,0x23
  412d89:	jecxz  0x412d80
  412d8b:	ja     0x412d75
  412d8d:	mov    esp,0x8a27503f
  412d92:	fnstenv [ebx+0x15]
  412d95:	or     dh,BYTE PTR [esi+0x62]
  412d98:	imul   BYTE PTR [esi+0x633d8015]
  412d9e:	or     eax,0x32843ed5
  412da3:	jmp    0xcfe9dc81
  412da8:	sbb    DWORD PTR [ebp+0xf],ecx
  412dab:	(bad)  
  412dac:	adc    DWORD PTR [edi-0x3a0a958f],0xad67faa3
  412db6:	mov    esp,0xb2c01ee2
  412dbb:	sub    al,0xfd
  412dbd:	mov    ds:0x7af848c9,al
  412dc2:	fwait
  412dc3:	outs   dx,DWORD PTR ds:[esi]
  412dc4:	push   ss
  412dc5:	outs   dx,BYTE PTR ds:[esi]
  412dc6:	adc    DWORD PTR [ecx-0x6b3edcf],esi
  412dcc:	xchg   esi,eax
  412dcd:	pop    edi
  412dce:	adc    al,0xcf
  412dd0:	std    
  412dd1:	sahf   
  412dd2:	xor    dl,BYTE PTR [eax+0x6d]
  412dd5:	add    eax,0xbcc3eda5
  412dda:	jmp    0x817d:0xe4daea8e
  412de1:	and    cl,BYTE PTR [ebx+eiz*1+0x6c]
  412de5:	mov    BYTE PTR [eax+0x68283234],ch
  412deb:	jle    0x412de5
  412ded:	ins    DWORD PTR es:[edi],dx
  412dee:	pop    ecx
  412def:	nop
  412df0:	lds    ebx,FWORD PTR [esi+0x63314aac]
  412df6:	inc    eax
  412df7:	daa    
  412df8:	cmp    DWORD PTR [eax+0x71],ebx
  412dfb:	and    eax,0xb5edbeb4
  412e00:	xor    DWORD PTR [ebx-0x30],edx
  412e03:	dec    esi
  412e04:	fs sub al,0xd
  412e07:	fs push ebx
  412e09:	xor    DWORD PTR [ebp+ebp*2-0x2714c51f],eax
  412e10:	fbstp  TBYTE PTR [ebx]
  412e12:	sub    DWORD PTR [ebx+0x1f],edi
  412e15:	jno    0x412e15
  412e17:	adc    DWORD PTR [edi-0x5b],eax
  412e1a:	pop    ds
  412e1b:	ja     0x412dfe
  412e1d:	jle    0x412e8e
  412e1f:	sbb    BYTE PTR [ebx-0x6b3852d6],cl
  412e25:	and    DWORD PTR [ebx-0x50c2d1ab],edi
  412e2b:	sbb    eax,0xfa9a58af
  412e30:	shr    BYTE PTR ds:0x1042e3d7,0xc7
  412e37:	mov    ebp,0x6a02fa2c
  412e3c:	loope  0x412e1a
  412e3e:	mov    DWORD PTR [edi+0x40],edx
  412e41:	lods   al,BYTE PTR ds:[esi]
  412e42:	xor    esi,DWORD PTR [eax-0x6c005e33]
  412e48:	aam    0xf4
  412e4a:	out    0xfb,eax
  412e4c:	pop    ebx
  412e4d:	ror    ecx,cl
  412e4f:	retf   
  412e50:	xchg   ecx,eax
  412e51:	arpl   WORD PTR [ebx+0x21],di
  412e54:	inc    eax
  412e55:	into   
  412e56:	jne    0x412e18
  412e58:	lea    ecx,[ebx]
  412e5a:	jecxz  0x412e56
  412e5c:	ret    0x18fe
  412e5f:	icebp  
  412e60:	fcmove st,st(6)
  412e62:	(bad)  
  412e63:	retf   
  412e64:	jno    0x412edf
  412e66:	jl     0x412e4d
  412e68:	test   DWORD PTR [edx+0x1c78d879],0x946fe52e
  412e72:	pop    ss
  412e73:	inc    ebx
  412e74:	sub    BYTE PTR [ebx+0x4],ch
  412e77:	mov    ebx,0xd6a5e1f8
  412e7c:	jae    0x412e05
  412e7e:	inc    edi
  412e7f:	push   edx
  412e80:	mov    eax,0x8a3e43ee
  412e85:	jp     0x412ecc
  412e87:	iret   
  412e88:	and    eax,0xbbee4a6b
  412e8e:	cmc    
  412e8f:	push   cs
  412e90:	and    BYTE PTR [edx],dh
  412e92:	ss push ds
  412e94:	inc    eax
  412e95:	push   es
  412e96:	pop    ecx
  412e97:	rcl    DWORD PTR gs:0x488fd3f5,0x45
  412e9f:	loopne 0x412e8f
  412ea1:	or     BYTE PTR [edx],0xf3
  412ea4:	mov    esi,eax
  412ea6:	bound  edx,QWORD PTR [ebp+0xdc09cc]
  412eac:	jno    0x412ed2
  412eae:	rcr    BYTE PTR [edi+0x78c56785],cl
  412eb4:	jae    0x412e8d
  412eb6:	pop    edx
  412eb7:	shr    ah,0x78
  412eba:	ins    DWORD PTR es:[edi],dx
  412ebb:	push   DWORD PTR [ebx]
  412ebd:	mov    al,0x9a
  412ebf:	(bad)  
  412ec0:	outs   dx,BYTE PTR ds:[esi]
  412ec1:	sahf   
  412ec2:	xchg   BYTE PTR [esi],ah
  412ec4:	retf   
  412ec5:	(bad)  
  412ec6:	xor    al,0x44
  412ec8:	xor    edx,eax
  412eca:	cmp    BYTE PTR [esp+ecx*4],ch
  412ecd:	call   0x61139481
  412ed2:	xchg   cl,bh
  412ed4:	sub    esp,eax
  412ed6:	push   ecx
  412ed7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ed8:	add    DWORD PTR [ebp+0x73],ebp
  412edb:	jmp    0xfc19:0x33dbcf6d
  412ee2:	jge    0x412f56
  412ee4:	loop   0x412ece
  412ee6:	mov    al,ds:0x56af4fa9
  412eeb:	mov    edi,0x4af47287
  412ef0:	lahf   
  412ef1:	jp     0x412f43
  412ef3:	stc    
  412ef4:	test   BYTE PTR [edi],bh
  412ef6:	out    dx,eax
  412ef7:	scas   al,BYTE PTR es:[edi]
  412ef8:	xchg   esp,eax
  412ef9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412efa:	lods   eax,DWORD PTR ds:[esi]
  412efb:	inc    esi
  412efc:	shl    DWORD PTR [eax+0x334f315b],cl
  412f02:	arpl   WORD PTR [ebp-0x7ed2a35f],si
  412f08:	popf   
  412f09:	fs inc edi
  412f0b:	fidiv  DWORD PTR [ebx+0x78869348]
  412f11:	test   al,0x3b
  412f13:	loope  0x412f1c
  412f15:	scas   eax,DWORD PTR es:[edi]
  412f16:	mov    bl,0xf1
  412f18:	cmp    DWORD PTR [edi+0x4360d7d],0x941171f3
  412f22:	retf   0x6025
  412f25:	imul   edi
  412f27:	mov    ebx,0x81ce26a
  412f2c:	cmp    cl,BYTE PTR [ecx]
  412f2e:	mov    ds:0xd57a634f,eax
  412f33:	and    BYTE PTR [esi],dl
  412f35:	inc    esp
  412f36:	and    edi,ebx
  412f38:	push   edx
  412f39:	int3   
  412f3a:	fnstenv [edi-0x9]
  412f3d:	pop    ebx
  412f3e:	push   0xfffffff0
  412f40:	js     0x412fb7
  412f42:	jb     0x412f5a
  412f44:	and    eax,0x6aa29ce2
  412f49:	sub    eax,0x34f2426f
  412f4e:	mov    edx,0xb431cb3c
  412f53:	aad    0xc6
  412f55:	xchg   esi,eax
  412f56:	dec    ebp
  412f57:	add    edx,edi
  412f59:	xchg   ebp,eax
  412f5a:	cs stos BYTE PTR es:[edi],al
  412f5c:	inc    ebp
  412f5d:	aam    0xa0
  412f5f:	mov    edi,0xdd6f67e6
  412f64:	fwait
  412f65:	push   esi
  412f66:	aam    0x62
  412f68:	pusha  
  412f69:	retf   
  412f6a:	call   0x620b1705
  412f6f:	add    ecx,esp
  412f71:	lahf   
  412f72:	out    dx,al
  412f73:	in     eax,0xd8
  412f75:	scas   eax,DWORD PTR es:[edi]
  412f76:	into   
  412f77:	inc    edi
  412f78:	test   BYTE PTR [eax+0x44],0xa3
  412f7c:	sub    eax,0xf90e5ac7
  412f81:	sub    al,BYTE PTR [edx+0x5b]
  412f84:	popa   
  412f85:	test   DWORD PTR [esi-0x49],0x299da0b4
  412f8c:	cmp    DWORD PTR ds:0xd1a1a274,0x564a2337
  412f96:	das    
  412f97:	fist   WORD PTR [ebx+ebp*4-0x745ddde4]
  412f9e:	mov    WORD PTR [edx+0x2ff4ba0b],gs
  412fa4:	retf   
  412fa5:	(bad)  
  412fa6:	ds pop ecx
  412fa8:	xchg   edx,eax
  412fa9:	call   0x8420:0xc57e92f
  412fb0:	cs xchg edx,eax
  412fb2:	sbb    BYTE PTR [ebp-0x4d],bl
  412fb5:	dec    edi
  412fb6:	inc    ebp
  412fb7:	xor    esp,DWORD PTR [edx+0x5]
  412fba:	xchg   DWORD PTR [ebx-0x43],ebx
  412fbd:	push   ebp
  412fbe:	out    dx,al
  412fbf:	outs   dx,DWORD PTR ds:[esi]
  412fc0:	or     esi,DWORD PTR [ecx+0x1]
  412fc3:	push   ecx
  412fc4:	push   esi
  412fc5:	xchg   ebx,ebx
  412fc7:	dec    eax
  412fc8:	xchg   ebp,eax
  412fc9:	mov    ah,0x85
  412fcb:	js     0x412f6f
  412fcd:	push   ss
  412fce:	jmp    0xb8073545
  412fd3:	xor    ebx,DWORD PTR [edi-0x53644cb5]
  412fd9:	mov    ebx,0xf82870c3
  412fde:	mov    ebp,0x346f9939
  412fe3:	leave  
  412fe4:	xchg   BYTE PTR [ebx],al
  412fe6:	popf   
  412fe7:	shld   DWORD PTR [edx],ebx,cl
  412fea:	fsub   st,st(6)
  412fec:	inc    edx
  412fed:	inc    edi
  412fee:	add    DWORD PTR [edi],esi
  412ff0:	mov    dh,al
  412ff2:	in     al,dx
  412ff3:	rcr    DWORD PTR [edi+ebp*2+0x72949417],1
  412ffa:	mov    ebx,0x39a58f93
  412fff:	nop
  413000:	and    BYTE PTR [edx+0x3c35bab9],dh
  413006:	mov    ecx,0xee095b1b
  41300b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41300c:	push   esp
  41300d:	jl     0x413089
  41300f:	and    cl,BYTE PTR [ebp-0x3af83c65]
  413015:	mov    DWORD PTR [esi+ebx*2+0x76],edi
  413019:	pop    ss
  41301a:	mov    ebx,0xef4c0d09
  41301f:	mov    ds:0xbc4263ad,al
  413024:	rcl    DWORD PTR [esi+0x7d99f47],0x31
  41302b:	iret   
  41302c:	sti    
  41302d:	cmp    esi,ebp
  41302f:	jecxz  0x413059
  413031:	add    BYTE PTR [edx],bh
  413033:	test   DWORD PTR [edi-0x73],ecx
  413036:	pop    es
  413037:	jmp    0xf60f6b78
  41303c:	aam    0x70
  41303e:	(bad)  
  413040:	sbb    cl,BYTE PTR [eax-0x11]
  413043:	fist   WORD PTR [ebp+0x2]
  413046:	xchg   BYTE PTR ds:0x61795b9b,cl
  41304c:	jmp    0xc6db:0xb1c10017
  413053:	xchg   edx,eax
  413054:	daa    
  413055:	jo     0x413088
  413057:	push   0xab708ed
  41305c:	and    edx,DWORD PTR [edi+0x4e]
  41305f:	retf   
  413060:	jno    0x413019
  413062:	push   eax
  413063:	mov    WORD PTR [edx],cs
  413065:	and    eax,0xc12c7e
  41306a:	dec    DWORD PTR [eax]
  41306c:	pushf  
  41306d:	aam    0xad
  41306f:	mov    eax,ds:0xe2a2c99b
  413074:	or     edx,DWORD PTR [edx+eax*1+0x38]
  413078:	(bad)  
  41307a:	aad    0x1c
  41307c:	inc    esp
  41307d:	jmp    0x5efbbc65
  413082:	xchg   edi,eax
  413083:	fdivr  st(6),st
  413085:	mov    bh,0x40
  413087:	dec    esi
  413088:	adc    DWORD PTR [esi+0x65a005b1],esi
  41308e:	sbb    DWORD PTR [eax],ebp
  413090:	jmp    0xb9ea9698
  413095:	push   0x86222e98
  41309a:	or     ch,BYTE PTR [eax+ebp*2-0x6c]
  41309e:	out    0x13,al
  4130a0:	mov    ah,0x3d
  4130a2:	inc    esp
  4130a3:	pop    eax
  4130a4:	pop    ds
  4130a5:	popf   
  4130a6:	repnz and al,0x9d
  4130a9:	push   edi
  4130aa:	je     0x41309a
  4130ac:	call   0x712cc68c
  4130b1:	ins    DWORD PTR es:[edi],dx
  4130b2:	cmp    ah,al
  4130b4:	icebp  
  4130b5:	push   ebx
  4130b6:	or     DWORD PTR [edi+0x235fa18a],ebp
  4130bc:	and    bh,dh
  4130be:	call   0x69e40222
  4130c3:	add    ebx,DWORD PTR [ecx-0x7d439821]
  4130c9:	enter  0xb91d,0xa9
  4130cd:	and    edi,DWORD PTR [ecx]
  4130cf:	pop    esi
  4130d0:	dec    esi
  4130d1:	out    0xe0,al
  4130d3:	ins    BYTE PTR es:[edi],dx
  4130d4:	test   eax,0x3193b045
  4130d9:	fucomip st,st(0)
  4130db:	and    eax,DWORD PTR [esi+0x23]
  4130de:	push   ecx
  4130df:	(bad)
  4130e2:	push   eax
  4130e3:	and    BYTE PTR [eax+esi*4-0x2b914b2b],cl
  4130ea:	scas   eax,DWORD PTR es:[edi]
  4130eb:	sub    al,0xc4
  4130ed:	enter  0xbdb1,0x7a
  4130f1:	inc    ebp
  4130f2:	js     0x413133
  4130f4:	mov    ds:0x9530d4e6,eax
  4130f9:	mov    bl,0xb4
  4130fb:	(bad)  
  4130fc:	adc    BYTE PTR [ecx-0x4],ch
  4130ff:	out    0xcc,al
  413101:	cmp    cl,BYTE PTR [ebx-0x1a]
  413104:	push   edi
  413105:	fwait
  413106:	call   0x76e19d1b
  41310b:	mov    edx,0xe52acb16
  413110:	pop    ecx
  413111:	sahf   
  413112:	cld    
  413113:	or     eax,0x6177f0bd
  413118:	call   0xcb9d:0x60621801
  41311f:	fcomp  DWORD PTR [edi-0xe6ab317]
  413125:	fldcw  WORD PTR [ebx+ecx*2]
  413128:	push   ebx
  413129:	rol    BYTE PTR [edx+eiz*4-0x4a],cl
  41312d:	cwde   
  41312e:	or     eax,0x3a6e3395
  413133:	and    al,BYTE PTR ds:0x39664167
  413139:	jmp    0x5223:0x24da7912
  413140:	push   ebp
  413141:	std    
  413142:	nop
  413143:	mov    ch,0x90
  413145:	int3   
  413146:	fiadd  WORD PTR ds:0xba7d3dc2
  41314c:	adc    ch,BYTE PTR [edi+0x40e4fa84]
  413152:	xchg   ebp,eax
  413153:	retf   
  413154:	pop    edx
  413155:	call   0xf515:0x874f38aa
  41315c:	push   ecx
  41315d:	inc    ebp
  41315e:	dec    ecx
  41315f:	push   ecx
  413160:	loope  0x41313e
  413162:	aaa    
  413163:	pop    esp
  413164:	cli    
  413165:	rol    ebx,cl
  413167:	fwait
  413168:	xor    bl,BYTE PTR [ebx]
  41316a:	pop    edi
  41316b:	mov    ebx,0xe04949e8
  413170:	cwde   
  413171:	pusha  
  413172:	pop    es
  413173:	aas    
  413174:	jbe    0x41318f
  413176:	mov    ch,0xc4
  413178:	loopne 0x413133
  41317a:	or     eax,0xdbe9dd7f
  41317f:	inc    edx
  413180:	sahf   
  413181:	fisub  WORD PTR [ecx]
  413183:	shl    BYTE PTR [edx+0x70760785],cl
  413189:	jmp    0xce6d5fad
  41318e:	cdq    
  41318f:	xchg   edi,eax
  413190:	sti    
  413191:	cmp    BYTE PTR [ecx],ch
  413193:	xor    esp,edx
  413195:	mov    ds:0xe31c487,al
  41319a:	sub    eax,0x74e5557e
  41319f:	cdq    
  4131a0:	fwait
  4131a1:	outs   dx,BYTE PTR ds:[esi]
  4131a2:	lahf   
  4131a3:	mov    ch,0xad
  4131a5:	bound  ecx,QWORD PTR [edx-0x4]
  4131a8:	inc    ebp
  4131a9:	push   edx
  4131aa:	int    0x57
  4131ac:	(bad)  [eax]
  4131ae:	add    al,ah
  4131b0:	dec    ebp
  4131b1:	cmp    edi,DWORD PTR [esi]
  4131b3:	jl     0x4131fd
  4131b5:	dec    edi
  4131b6:	data16 fcomp QWORD PTR [edx+0x36204195]
  4131bd:	ret    0xe7c9
  4131c0:	push   0x2
  4131c2:	dec    ecx
  4131c3:	or     DWORD PTR [ecx-0x31a0640f],ecx
  4131c9:	mov    esp,0xb07a99ae
  4131ce:	pop    ecx
  4131cf:	fucomi st,st(0)
  4131d1:	push   ecx
  4131d2:	xchg   edi,eax
  4131d3:	out    dx,eax
  4131d4:	in     eax,dx
  4131d5:	aad    0xc9
  4131d7:	or     BYTE PTR [edx+0x50],dh
  4131da:	stc    
  4131db:	xor    ebx,DWORD PTR [edx+edx*8]
  4131de:	push   ebx
  4131df:	cmp    DWORD PTR [esi+0x1],edi
  4131e2:	fwait
  4131e3:	push   0x3505e386
  4131e8:	aad    0x94
  4131ea:	fld1   
  4131ec:	call   0x4d91b64
  4131f1:	mov    ebx,0x987612ed
  4131f6:	bound  esi,QWORD PTR ds:0x67533620
  4131fc:	icebp  
  4131fd:	jnp    0x4131ef
  4131ff:	sub    BYTE PTR [ecx+ebx*1],0x3d
  413203:	int3   
  413204:	xor    cl,BYTE PTR [ebx+0x26]
  413207:	mov    eax,ds:0x698c4367
  41320c:	out    0x45,eax
  41320e:	leave  
  41320f:	shl    bl,1
  413211:	div    esp
  413213:	aaa    
  413214:	sub    eax,0x55f655f5
  413219:	fmulp  st(4),st
  41321b:	rol    BYTE PTR [edx],cl
  41321d:	mov    al,ds:0xa9d5cf9e
  413222:	push   ebp
  413223:	out    0x21,eax
  413225:	in     al,0x3c
  413227:	into   
  413228:	out    0x9c,eax
  41322a:	clc    
  41322b:	cmp    DWORD PTR [edi+0x2b],esp
  41322e:	push   0x76233ebb
  413233:	cmp    BYTE PTR [edi+0x56b60339],0xa9
  41323a:	sbb    al,0x71
  41323c:	outs   dx,BYTE PTR ds:[esi]
  41323d:	rcr    DWORD PTR [ebx+0x29bc5ef2],cl
  413243:	mov    ebx,0x59e4a89d
  413248:	and    esp,DWORD PTR [ebx-0x76]
  41324b:	dec    ebp
  41324c:	out    0x68,al
  41324e:	mov    al,0x84
  413250:	lahf   
  413251:	cmp    eax,ecx
  413253:	jecxz  0x4131fc
  413255:	jo     0x413299
  413257:	(bad)  
  413258:	add    BYTE PTR [esi+0x39f233c9],cl
  41325e:	jo     0x41325a
  413260:	stc    
  413261:	push   ds
  413262:	push   esi
  413263:	es dec ebx
  413265:	out    dx,eax
  413266:	outs   dx,BYTE PTR ds:[esi]
  413267:	push   ecx
  413268:	pusha  
  413269:	cmp    al,0x74
  41326b:	out    dx,eax
  41326c:	fdivr  DWORD PTR [edi-0x3406690b]
  413272:	arpl   bp,cx
  413274:	das    
  413275:	jp     0x413284
  413277:	(bad)  
  413278:	std    
  413279:	xchg   esp,eax
  41327a:	sbb    eax,0x7b4629bd
  41327f:	and    ch,BYTE PTR [ebx]
  413281:	inc    ebx
  413282:	clc    
  413283:	stos   DWORD PTR es:[edi],eax
  413284:	sub    al,BYTE PTR [ecx-0x66]
  413287:	mov    ebp,0x6a9cce3d
  41328c:	(bad)  
  41328e:	mov    dh,0x6b
  413290:	inc    esi
  413291:	shl    BYTE PTR [ebp+0x40],0x55
  413295:	adc    al,0x3d
  413297:	ss jmp 0xfcd3:0x8bf146c5
  41329f:	cmp    BYTE PTR [ecx-0x6b],0xb8
  4132a3:	push   edi
  4132a4:	and    eax,0xcef67941
  4132a9:	xchg   edi,eax
  4132aa:	out    0x57,al
  4132ac:	pop    ss
  4132ad:	stc    
  4132ae:	push   ds
  4132af:	ret    0x53f9
  4132b2:	sahf   
  4132b3:	cmp    cl,BYTE PTR [esi]
  4132b5:	inc    esi
  4132b6:	adc    BYTE PTR [ecx-0x48],bl
  4132b9:	test   eax,0xe1f3278c
  4132be:	in     eax,dx
  4132bf:	scas   al,BYTE PTR es:[edi]
  4132c0:	add    eax,0x5a0ba55
  4132c5:	and    al,bl
  4132c7:	retf   
  4132c8:	retf   0x35a5
  4132cb:	jl     0x413295
  4132cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132ce:	(bad)  
  4132cf:	jns    0x4132cb
  4132d1:	cmp    eax,0x83f26057
  4132d6:	test   al,0x76
  4132d8:	xchg   ebx,eax
  4132d9:	in     al,dx
  4132da:	pop    esp
  4132db:	imul   ebp,DWORD PTR [edx-0x29],0xffffffc2
  4132df:	mov    DWORD PTR [eax],esp
  4132e1:	in     al,dx
  4132e2:	cwde   
  4132e3:	mov    ecx,0xd6cd4913
  4132e8:	add    DWORD PTR [edi-0x61],esi
  4132eb:	retf   0xcd20
  4132ee:	inc    edi
  4132ef:	push   edi
  4132f0:	retf   0x9503
  4132f3:	push   cs
  4132f4:	popa   
  4132f5:	cs pop esp
  4132f7:	pop    edx
  4132f8:	retf   0xf47d
  4132fb:	dec    eax
  4132fc:	inc    edi
  4132fd:	mov    eax,0xc3fb525e
  413302:	pop    ebx
  413303:	inc    esp
  413304:	push   cs
  413305:	cmp    ah,BYTE PTR [ecx+0x6ff131db]
  41330b:	repnz mov ecx,DWORD PTR [edi-0x23]
  41330f:	cwde   
  413310:	sar    DWORD PTR [edi],cl
  413312:	push   ds
  413313:	mov    eax,0x7d5c6ef
  413318:	add    eax,0x94db51c9
  41331d:	push   edi
  41331e:	retf   
  41331f:	popf   
  413320:	scas   al,BYTE PTR es:[edi]
  413321:	scas   al,BYTE PTR es:[edi]
  413322:	aad    0xf6
  413324:	data16 aaa 
  413326:	jmp    0x3670:0xf8da6c1
  41332d:	ficomp WORD PTR [ebp+0x6f]
  413330:	lods   al,BYTE PTR ds:[esi]
  413331:	adc    ebp,ebp
  413333:	add    al,0x5
  413335:	inc    edi
  413336:	call   0x5cbb:0x1ca7e03
  41333d:	sahf   
  41333e:	or     al,0xd2
  413340:	cwde   
  413341:	aaa    
  413342:	icebp  
  413343:	dec    esp
  413344:	gs mov ebp,0xb006be63
  41334a:	sub    BYTE PTR [edx],0xc
  41334d:	xchg   edx,eax
  41334e:	push   ebx
  41334f:	mov    ?,WORD PTR [esp+ecx*2]
  413352:	mov    WORD PTR [ecx+0x3ed1a379],ds
  413358:	bound  ebx,QWORD PTR [edx+0x568ed974]
  41335e:	cmp    ch,BYTE PTR [ebx-0x6abee113]
  413364:	mov    dl,0x6a
  413366:	sub    eax,0x8e7bd74c
  41336b:	jecxz  0x41331d
  41336d:	hlt    
  41336e:	cli    
  41336f:	cld    
  413370:	mov    al,bl
  413372:	adc    esi,edx
  413374:	fs cmp eax,0x93f7a312
  41337a:	imul   esi,DWORD PTR [eax-0x357dd0e3],0x3fcc943a
  413384:	mov    DWORD PTR [eax],esi
  413386:	xlat   BYTE PTR ds:[ebx]
  413387:	inc    ebp
  413388:	imul   esi,DWORD PTR [ebp+0x3d67cbc2],0x78d992b1
  413392:	add    al,0x5
  413394:	mov    dl,0x85
  413396:	xor    DWORD PTR [edx],edx
  413398:	icebp  
  413399:	out    dx,eax
  41339a:	ret    0x75c8
  41339d:	mov    dl,0x1e
  41339f:	(bad)  
  4133a0:	scas   eax,DWORD PTR es:[edi]
  4133a1:	cdq    
  4133a2:	mov    dl,0x13
  4133a4:	aam    0x49
  4133a6:	fist   DWORD PTR [ebp+0xb07a572]
  4133ac:	or     bh,BYTE PTR [edx+0x38b6f865]
  4133b2:	(bad)  
  4133b3:	iret   
  4133b4:	mov    ss,WORD PTR [esi]
  4133b6:	test   eax,0x5f6712ea
  4133bb:	les    ebp,FWORD PTR [ebx+0x2]
  4133be:	cs push es
  4133c0:	loop   0x413431
  4133c2:	cli    
  4133c3:	fcmovbe st,st(4)
  4133c5:	sar    BYTE PTR [ebp-0x6ffc7980],0xa6
  4133cc:	inc    esi
  4133cd:	mov    dh,BYTE PTR [ecx-0x35acb574]
  4133d3:	(bad)  
  4133d4:	sbb    esp,DWORD PTR [ebp+0x20cbee73]
  4133da:	(bad)
  4133dd:	dec    esp
  4133de:	nop
  4133df:	inc    ecx
  4133e0:	xor    ebx,ecx
  4133e2:	mov    edi,0xbd28ec33
  4133e7:	fmul   QWORD PTR [edi+0xdb53836]
  4133ed:	ds loope 0x4133b8
  4133f0:	mov    edx,0xf7ea5b64
  4133f5:	out    0x62,eax
  4133f7:	daa    
  4133f8:	dec    edx
  4133f9:	(bad)  
  4133fa:	pop    esi
  4133fb:	pop    eax
  4133fc:	out    0x2c,eax
  4133fe:	fwait
  4133ff:	push   ebp
  413400:	push   edx
  413401:	and    DWORD PTR [eax+0x49c606c5],0xffffff84
  413408:	and    al,0x13
  41340a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41340b:	fisub  DWORD PTR [esi]
  41340d:	xlat   BYTE PTR ds:[ebx]
  41340e:	int    0xc2
  413410:	std    
  413411:	ins    BYTE PTR es:[edi],dx
  413412:	stc    
  413413:	mov    dh,0xb9
  413415:	out    dx,eax
  413416:	inc    ebx
  413417:	lods   eax,DWORD PTR ds:[esi]
  413418:	scas   al,BYTE PTR es:[edi]
  413419:	jne    0x4133b6
  41341b:	xor    eax,DWORD PTR [edx+0x7c06ae00]
  413421:	sub    eax,0xa183d2eb
  413426:	mov    bh,0x4d
  413428:	xor    DWORD PTR [ecx+0x4c],0xec305d04
  41342f:	scas   eax,DWORD PTR es:[edi]
  413430:	push   ecx
  413431:	ret    
  413432:	jp     0x4134a3
  413434:	dec    esi
  413435:	cmp    DWORD PTR [ebx-0x497edfd5],edi
  41343b:	in     al,0x49
  41343d:	adc    eax,DWORD PTR [eax]
  41343f:	and    ebx,DWORD PTR [edx+0x49d9e965]
  413445:	and    al,0x38
  413447:	cmp    cl,BYTE PTR [edi+eiz*8]
  41344a:	pop    es
  41344b:	cmp    DWORD PTR [edi+0x6e],ebp
  41344e:	and    esp,esi
  413450:	or     DWORD PTR [ebp-0x2d],esi
  413453:	xchg   esi,eax
  413454:	out    0x5a,eax
  413456:	outs   dx,DWORD PTR ds:[esi]
  413457:	mov    esi,0x78d35e79
  41345c:	ret    
  41345d:	shl    BYTE PTR [eax],1
  41345f:	lods   eax,DWORD PTR ds:[esi]
  413460:	fsubr  QWORD PTR [edx-0x18]
  413463:	outs   dx,BYTE PTR ds:[esi]
  413464:	pop    esp
  413465:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413466:	or     al,0x16
  413468:	aas    
  413469:	test   DWORD PTR [esi],0x4f082530
  41346f:	or     DWORD PTR [ecx-0x2e65f45e],ebp
  413475:	xor    eax,DWORD PTR [esp+eax*2]
  413478:	cdq    
  413479:	cdq    
  41347a:	cwde   
  41347b:	cwde   
  41347c:	mov    eax,0xbe06237a
  413481:	add    esi,DWORD PTR [ecx-0xc]
  413484:	sbb    al,0xb4
  413486:	mov    ds:0x4c02c1c1,al
  41348b:	retf   0x756a
  41348e:	out    0xe6,al
  413490:	sub    edx,0x7a6e6205
  413496:	mov    ds:0x34d4dd51,al
  41349b:	icebp  
  41349c:	adc    eax,0x3fbee2b5
  4134a1:	dec    edi
  4134a2:	mov    eax,0x71314142
  4134a7:	ret    
  4134a8:	cld    
  4134a9:	pushf  
  4134aa:	and    bl,ah
  4134ac:	repnz sub DWORD PTR ds:0x7004f6d7,edi
  4134b3:	push   ds
  4134b4:	pushf  
  4134b5:	(bad)  
  4134b6:	test   al,0x34
  4134b8:	das    
  4134b9:	push   ebx
  4134ba:	mov    al,0x1c
  4134bc:	pop    esp
  4134bd:	shr    DWORD PTR [ebp+0x5044b829],cl
  4134c3:	test   ecx,esi
  4134c5:	jnp    0x4134d1
  4134c7:	clc    
  4134c8:	enter  0xd2c2,0x53
  4134cc:	iret   
  4134cd:	cmp    al,0x76
  4134cf:	dec    eax
  4134d0:	jl     0x4134f1
  4134d2:	inc    esi
  4134d3:	fiadd  DWORD PTR [edx+0xf9daab]
  4134d9:	mov    eax,0xb3860c0c
  4134de:	test   DWORD PTR [edx-0x25592103],esi
  4134e4:	popf   
  4134e5:	push   ebx
  4134e6:	scas   al,BYTE PTR es:[edi]
  4134e7:	mov    dl,al
  4134e9:	mov    ebp,0x46f50ccf
  4134ee:	enter  0x9d1d,0xa6
  4134f2:	adc    eax,DWORD PTR [esi]
  4134f4:	xchg   esp,eax
  4134f5:	or     edi,DWORD PTR [eax]
  4134f7:	fs pop ss
  4134f9:	aaa    
  4134fa:	in     al,0xd0
  4134fc:	icebp  
  4134fd:	adc    BYTE PTR [ebx-0x23dcfce7],ah
  413503:	fld    DWORD PTR ds:0xa8cd321e
  413509:	in     eax,dx
  41350a:	mov    bl,0x46
  41350c:	ds std 
  41350e:	lahf   
  41350f:	fbstp  TBYTE PTR [ebx-0x385a0f90]
  413515:	pop    ds
  413516:	mov    bh,0xbd
  413518:	push   eax
  413519:	sbb    edi,DWORD PTR [esi]
  41351b:	jecxz  0x413532
  41351d:	push   ebp
  41351e:	in     al,0x63
  413520:	bswap  ecx
  413522:	xchg   edi,eax
  413523:	fs not cl
  413526:	fldenv ds:0xff3da020
  41352c:	popa   
  41352d:	fld    DWORD PTR [esi-0x60aabed7]
  413533:	add    eax,0x7d9143bb
  413538:	out    0x8,eax
  41353a:	in     eax,0x20
  41353c:	fld    DWORD PTR [edi-0x7a]
  41353f:	add    DWORD PTR [esi+eax*4],esp
  413542:	or     DWORD PTR [esi+0x4194f18d],ecx
  413548:	push   edi
  413549:	add    DWORD PTR [bp+si+0x231a],esi
  41354e:	repz popa 
  413550:	imul   eax,DWORD PTR [edx],0x501b0486
  413556:	test   ecx,ebx
  413558:	push   es
  413559:	das    
  41355a:	mov    esi,0xc11151cd
  41355f:	dec    ebx
  413560:	lahf   
  413561:	scas   eax,DWORD PTR es:[edi]
  413562:	outs   dx,DWORD PTR ds:[esi]
  413563:	add    dh,BYTE PTR ds:0x4481f2db
  413569:	fwait
  41356a:	mov    al,ds:0xe01e6926
  41356f:	push   ss
  413570:	mov    eax,ds:0x7c6b7ddb
  413575:	in     eax,dx
  413576:	(bad)  
  413577:	adc    DWORD PTR [ebx],edx
  413579:	addr16 or eax,esp
  41357c:	aaa    
  41357d:	out    0xa7,al
  41357f:	cmp    ah,BYTE PTR [esi+0x5d2bd46f]
  413585:	xchg   esi,eax
  413586:	inc    esi
  413587:	in     eax,0x17
  413589:	sub    eax,0xdcb35fe4
  41358f:	adc    dl,BYTE PTR [esi+ebx*2+0x48]
  413593:	adc    edi,ebp
  413595:	rcl    DWORD PTR [eax],1
  413597:	push   0x5c
  413599:	xchg   esp,eax
  41359a:	mov    esi,DWORD PTR [esi-0x5]
  41359d:	loope  0x41359a
  41359f:	xor    DWORD PTR [ecx+0x232ec95f],edx
  4135a5:	add    edx,0x492aaccb
  4135ab:	(bad)  
  4135ac:	ins    BYTE PTR es:[edi],dx
  4135ad:	xchg   ecx,eax
  4135ae:	nop
  4135af:	dec    esp
  4135b0:	imul   ebx,DWORD PTR [ecx-0x73856a54],0xffffffc6
  4135b7:	inc    esi
  4135b8:	or     dh,BYTE PTR [edx+edx*1-0x3d]
  4135bc:	and    esi,DWORD PTR [ecx+0x5]
  4135bf:	imul   edx,DWORD PTR [eax+eax*4+0x5110980f],0x8a1f6628
  4135ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135cc:	cmp    cl,cl
  4135ce:	outs   dx,BYTE PTR ds:[esi]
  4135cf:	cld    
  4135d0:	in     eax,dx
  4135d1:	pop    ebx
  4135d2:	mov    al,0x32
  4135d4:	pop    esp
  4135d5:	in     eax,0x4d
  4135d7:	mov    ch,0xa9
  4135d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135da:	(bad)  
  4135db:	aam    0x5e
  4135dd:	dec    ebx
  4135de:	pushf  
  4135df:	sub    BYTE PTR [edi],ah
  4135e1:	jmp    0x4135f3
  4135e3:	adc    BYTE PTR [ebx-0x519c274a],bh
  4135e9:	add    ecx,esp
  4135eb:	or     dh,BYTE PTR [ebp+0x4fd23f4e]
  4135f1:	jo     0x413602
  4135f3:	in     al,0x17
  4135f5:	nop
  4135f6:	call   0xbea:0x8d45d3e4
  4135fd:	fistp  QWORD PTR [esp+edx*8]
  413600:	inc    esp
  413601:	fcmovb st,st(4)
  413603:	inc    edi
  413604:	rcr    DWORD PTR [esi+0x1d5b7736],0x48
  41360b:	xchg   edi,eax
  41360c:	cmp    bh,cl
  41360e:	cld    
  41360f:	mov    DWORD PTR [ecx+0x8],esp
  413612:	fdivrp st(1),st
  413614:	xor    BYTE PTR [edi],bl
  413616:	add    BYTE PTR [esi-0x2a77f144],0x10
  41361d:	jle    0x413696
  41361f:	mov    cl,0x9c
  413621:	cs in  al,0x1c
  413624:	out    dx,eax
  413625:	fild   DWORD PTR [ecx-0x5b4a5f0b]
  41362b:	popa   
  41362c:	arpl   WORD PTR [ebp-0x18],di
  41362f:	jecxz  0x41363b
  413631:	pop    ds
  413632:	out    dx,eax
  413633:	and    DWORD PTR [edi+0x75],0xffffffdf
  413637:	inc    edx
  413638:	idiv   DWORD PTR ss:[eax+0x406fd67c]
  41363f:	push   0x793ef754
  413644:	push   ebp
  413645:	repz jnp 0x413620
  413648:	mov    ebp,0x10fff55c
  41364d:	das    
  41364e:	push   ds
  41364f:	add    ebx,esi
  413651:	fwait
  413652:	jne    0x4136ac
  413654:	or     al,dh
  413656:	adc    BYTE PTR [ecx],cl
  413658:	sbb    al,0x4
  41365a:	lods   eax,DWORD PTR ds:[esi]
  41365b:	repz mov esp,0xff482ca6
  413661:	cmp    DWORD PTR [edi],0x2bc182b6
  413667:	sub    esp,ecx
  413669:	iret   
  41366a:	dec    ecx
  41366b:	jo     0x41366e
  41366d:	mov    bl,0x69
  41366f:	and    DWORD PTR [ebx+0x1d],0x44
  413673:	ins    DWORD PTR es:[edi],dx
  413674:	dec    edi
  413675:	loope  0x4136cc
  413677:	int3   
  413678:	ret    0x3ea3
  41367b:	fwait
  41367c:	sub    cl,BYTE PTR [edi-0x7a]
  41367f:	std    
  413680:	in     eax,dx
  413681:	arpl   WORD PTR [edx],cx
  413683:	cmp    ah,cl
  413685:	adc    BYTE PTR [ebx],0x9f
  413688:	add    eax,esp
  41368a:	pop    es
  41368b:	fcmovu st,st(6)
  41368d:	push   cs
  41368e:	aad    0x9a
  413690:	iret   
  413691:	sub    BYTE PTR [ebx-0x20],0xab
  413695:	cld    
  413696:	daa    
  413697:	scas   eax,DWORD PTR es:[edi]
  413698:	fidivr DWORD PTR cs:[edx-0x608c7eeb]
  41369f:	jmp    0x14960d66
  4136a4:	(bad)  
  4136a5:	test   BYTE PTR [ecx+0x32],0x64
  4136a9:	xor    al,0xc9
  4136ab:	add    eax,DWORD PTR [edi+0x71fc5a77]
  4136b1:	mov    gs,WORD PTR [ecx+0x1ed7b91]
  4136b7:	sahf   
  4136b8:	mov    ah,cl
  4136ba:	(bad)  
  4136bb:	push   edx
  4136bc:	or     al,0xf6
  4136be:	icebp  
  4136bf:	call   0xf6b2a924
  4136c4:	(bad)  
  4136c5:	arpl   WORD PTR [edx+0xa],sp
  4136c8:	push   esp
  4136c9:	int    0x14
  4136cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136cc:	jae    0x1f7cfeb7
  4136d2:	ret    
  4136d3:	(bad)  
  4136d4:	pop    ecx
  4136d5:	dec    edi
  4136d6:	in     eax,0x6b
  4136d8:	or     al,0x98
  4136da:	clc    
  4136db:	push   ss
  4136dc:	and    BYTE PTR [eax+edi*2+0x5e222025],0x1b
  4136e4:	lds    esi,FWORD PTR [eax+edx*4-0x71507b89]
  4136eb:	cli    
  4136ec:	lds    esp,FWORD PTR [edi+eiz*8]
  4136ef:	outs   dx,BYTE PTR ds:[esi]
  4136f0:	(bad)  
  4136f1:	xor    al,0xe0
  4136f3:	ret    
  4136f4:	xchg   ebx,eax
  4136f5:	(bad)  
  4136f7:	mov    bh,0x80
  4136f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136fa:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136fc:	sahf   
  4136fd:	xor    cl,0x3c
  413700:	mov    esp,0x7ecc2059
  413705:	sub    BYTE PTR [esp+edx*1+0x7c38a45b],al
  41370c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41370d:	stos   DWORD PTR es:[edi],eax
  41370e:	inc    esi
  41370f:	jp     0x41370e
  413711:	(bad)  
  413712:	scas   eax,DWORD PTR es:[edi]
  413713:	fiadd  DWORD PTR [ebx+ecx*4+0x360d59ed]
  41371a:	ficom  DWORD PTR [edx]
  41371c:	mov    esp,0xc2efbfa4
  413721:	in     al,dx
  413722:	xchg   edi,eax
  413723:	test   BYTE PTR [esi-0x3e2afcc0],bl
  413729:	mov    ds:0xefdafde,eax
  41372e:	xlat   BYTE PTR ds:[ebx]
  41372f:	adc    eax,0xbc58b81c
  413734:	inc    esi
  413735:	mov    bh,0xcb
  413737:	outs   dx,BYTE PTR ds:[esi]
  413738:	fs push edi
  41373a:	rcl    BYTE PTR [ecx-0x62],0x4
  41373e:	sbb    esp,DWORD PTR [esi-0x275784af]
  413744:	push   edi
  413745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413746:	xlat   BYTE PTR ds:[ebx]
  413747:	and    BYTE PTR [esi],dh
  413749:	loop   0x4137bb
  41374b:	xchg   esi,eax
  41374c:	int    0x41
  41374e:	not    DWORD PTR [ebx-0x609c82f5]
  413754:	mov    al,0x83
  413756:	call   0xaf7feceb
  41375b:	jb     0x4137b2
  41375d:	enter  0x4e1e,0xba
  413761:	xchg   ecx,eax
  413762:	pop    esp
  413763:	pop    ecx
  413764:	sub    ah,BYTE PTR [ebx]
  413766:	imul   esi,ecx,0xb7cb63ac
  41376c:	loope  0x413705
  41376e:	call   0xc422:0xe4938b6c
  413775:	or     edi,DWORD PTR [eax]
  413777:	cmp    edx,edi
  413779:	and    ebp,DWORD PTR [ebx]
  41377b:	jbe    0x41375f
  41377d:	and    BYTE PTR [esi],al
  41377f:	std    
  413780:	jg     0x4137a7
  413782:	add    al,0xe5
  413784:	test   BYTE PTR [edi-0x26],ah
  413787:	mov    ch,BYTE PTR cs:[edi+0x118367ed]
  41378e:	dec    ebx
  41378f:	xchg   BYTE PTR [esi+0x25],dh
  413792:	and    BYTE PTR [ebx-0x21086dca],dl
  413798:	mov    eax,0x7f1a2213
  41379d:	push   ss
  41379e:	outs   dx,BYTE PTR ds:[esi]
  41379f:	mov    eax,ds:0x7c846ec7
  4137a4:	mov    bl,0x34
  4137a6:	lods   al,BYTE PTR ds:[esi]
  4137a7:	mov    DWORD PTR [edi],ecx
  4137a9:	not    BYTE PTR es:0xbfa01ea0
  4137b0:	arpl   WORD PTR [eax],bx
  4137b2:	les    edi,FWORD PTR [ecx+ebp*8]
  4137b5:	pop    edx
  4137b6:	pop    ss
  4137b7:	arpl   WORD PTR [ebp+0x9a0dec7],ax
  4137bd:	xchg   DWORD PTR [ecx-0x3c],ebx
  4137c0:	add    ebx,DWORD PTR [esi-0x4a]
  4137c3:	in     eax,0x89
  4137c5:	cmp    DWORD PTR [eax],0x87e4b10d
  4137cb:	cmp    dh,BYTE PTR [eax-0x1a]
  4137ce:	sub    bl,BYTE PTR [eax-0x8]
  4137d1:	push   eax
  4137d2:	pop    eax
  4137d3:	mov    esi,0xb063730b
  4137d8:	push   ds
  4137d9:	sbb    BYTE PTR [esi],dh
  4137db:	or     eax,0xca57c0a8
  4137e0:	or     eax,0x5d94656a
  4137e5:	addr16 out dx,eax
  4137e7:	mov    esp,0x8f9f919c
  4137ec:	jae    0x41379a
  4137ee:	stc    
  4137ef:	pop    esi
  4137f0:	jge    0x4137b6
  4137f2:	push   esp
  4137f3:	mov    BYTE PTR [eax*2-0x1144a636],0xdb
  4137fb:	mov    ds:0x7fe76e66,al
  413800:	inc    edi
  413801:	jbe    0x4137a6
  413803:	push   eax
  413804:	inc    edx
  413805:	(bad)  
  413807:	or     eax,DWORD PTR [edx+0x2a5cf7cf]
  41380d:	jb     0x4137bb
  41380f:	nop
  413810:	bound  esp,QWORD PTR [ebx-0x1f594fc7]
  413816:	fcomi  st,st(0)
  413818:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413819:	fistp  QWORD PTR [ebx-0x32]
  41381c:	loope  0x41383b
  41381e:	daa    
  41381f:	loopne 0x413857
  413821:	cmp    al,cl
  413823:	jb     0x413849
  413825:	retf   
  413826:	pop    ecx
  413827:	push   eax
  413828:	mov    ah,0x7c
  41382a:	aas    
  41382b:	or     al,0x66
  41382d:	rcl    BYTE PTR [edx+0x323708be],0x39
  413834:	in     al,dx
  413835:	xor    cl,BYTE PTR ds:0x4c594915
  41383b:	mov    dh,0x94
  41383d:	dec    esp
  41383e:	mov    bh,0xce
  413840:	pop    ecx
  413841:	sbb    ecx,0x179d0d19
  413847:	add    bl,bl
  413849:	or     DWORD PTR [eax-0x25],0xffffff9f
  41384d:	(bad)  
  41384e:	retf   
  41384f:	pop    edx
  413850:	bound  ebp,QWORD PTR [edx+0x73]
  413853:	into   
  413854:	cwde   
  413855:	hlt    
  413856:	push   eax
  413857:	clts   
  413859:	jecxz  0x413814
  41385b:	stos   DWORD PTR es:[edi],eax
  41385c:	js     0x413878
  41385e:	pop    ds
  41385f:	inc    edi
  413860:	sbb    BYTE PTR [eax+edx*2+0x2d],0xa7
  413865:	daa    
  413866:	jne    0x4138a1
  413868:	test   al,0x41
  41386a:	(bad)  
  41386b:	popa   
  41386c:	std    
  41386d:	push   ebx
  41386e:	jle    0x4138a5
  413870:	push   edx
  413871:	push   ds
  413872:	mov    fs,edx
  413874:	rcl    esi,cl
  413876:	pushf  
  413877:	inc    ebp
  413878:	and    BYTE PTR [edx+0x4e],0x27
  41387c:	call   FWORD PTR [eax-0x37a52a33]
  413882:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413883:	and    eax,0x9d8c323f
  413888:	stc    
  413889:	push   ebx
  41388a:	addr16 clc 
  41388c:	jmp    0x413828
  41388e:	and    esp,DWORD PTR [edx]
  413890:	in     eax,0x66
  413892:	lea    esp,[esi+0x6ce42a8f]
  413898:	iret   
  413899:	mov    bl,BYTE PTR [ecx]
  41389b:	nop
  41389c:	sub    BYTE PTR [esi+edi*8-0x3a],0x8d
  4138a1:	retf   0xb155
  4138a4:	jno    0x4138cd
  4138a6:	jno    0x4138d0
  4138a8:	xchg   esi,ebp
  4138aa:	dec    ecx
  4138ab:	fidiv  DWORD PTR [ebx-0x6b]
  4138ae:	repz pop ds
  4138b0:	inc    esi
  4138b1:	or     eax,0x2329974a
  4138b6:	add    eax,0x9bf69411
  4138bb:	push   eax
  4138bc:	out    dx,al
  4138bd:	inc    eax
  4138be:	xor    DWORD PTR [esi+edx*4-0x4860855],ebp
  4138c5:	nop
  4138c6:	(bad)  
  4138c7:	(bad)  
  4138c8:	hlt    
  4138c9:	(bad)  
  4138ca:	(bad)  
  4138cb:	mov    esi,DWORD PTR ds:0x40638c4f
  4138d1:	xchg   esp,eax
  4138d2:	jmp    0x5b8e66
  4138d7:	cdq    
  4138d8:	clc    
  4138d9:	mov    edi,0x286a1d24
  4138de:	pop    ebp
  4138df:	popa   
  4138e0:	pop    ecx
  4138e1:	mov    esp,DWORD PTR [ebx+0x1e43b2c2]
  4138e7:	jno    0x413879
  4138e9:	adc    bh,BYTE PTR [esi-0x1edefbd9]
  4138ef:	mul    edi
  4138f1:	cdq    
  4138f2:	dec    esi
  4138f3:	mov    eax,ds:0xa1fcfd0a
  4138f8:	mov    edi,0xc0b4324b
  4138fd:	popa   
  4138fe:	inc    esi
  4138ff:	sbb    BYTE PTR [ebp+ecx*2+0x69d86f13],bh
  413906:	cmp    ah,BYTE PTR [eax]
  413908:	cdq    
  413909:	outs   dx,DWORD PTR ds:[esi]
  41390a:	adc    DWORD PTR [eax+0x189b1641],0xd3ed0bab
  413914:	in     eax,dx
  413915:	rol    DWORD PTR [edx],0xb3
  413918:	lock and ecx,eax
  41391b:	out    0x61,eax
  41391d:	jne    0x41390a
  41391f:	push   ss
  413920:	loopne 0x413919
  413922:	ret    0x441f
  413925:	(bad)  
  413926:	shr    DWORD PTR [edi+0x64],1
  413929:	(bad)  [ebx-0x60]
  41392c:	cmp    DWORD PTR [ebp-0x52],esp
  41392f:	sahf   
  413930:	ja     0x413975
  413932:	sar    dl,0xf6
  413935:	mov    ch,0x81
  413937:	jmp    0x4739:0x58d68046
  41393e:	(bad)  
  41393f:	or     esp,DWORD PTR [eax-0x59725120]
  413945:	mov    bl,0x52
  413947:	sbb    ah,dl
  413949:	push   ss
  41394a:	pop    ecx
  41394b:	cwde   
  41394c:	inc    ebp
  41394d:	xor    al,BYTE PTR [esi]
  41394f:	nop
  413950:	mov    ebx,ds
  413952:	rol    DWORD PTR [eax+0x746963d6],0xcb
  413959:	imul   esp,DWORD PTR [ebx],0xffffff96
  41395c:	jl     0x41392b
  41395e:	mov    ecx,DWORD PTR [eax-0xd]
  413961:	loopne 0x4138f7
  413963:	loope  0x413921
  413965:	mov    ds:0xe6ab38c0,al
  41396a:	ins    BYTE PTR es:[edi],dx
  41396b:	sbb    cl,BYTE PTR es:[eax+0x6c02a814]
  413972:	add    bl,BYTE PTR [ebp+0xf]
  413975:	push   eax
  413976:	ror    BYTE PTR [ebx+0x52bc27],1
  41397c:	lock mov ds:0x9b811aff,eax
  413982:	dec    ecx
  413983:	mov    dh,0x46
  413985:	mov    WORD PTR [esi],ds
  413987:	cld    
  413988:	nop
  413989:	xchg   DWORD PTR [ebp+ecx*2-0x54],edx
  41398d:	and    dh,ah
  41398f:	ret    
  413990:	dec    esp
  413991:	bound  ecx,QWORD PTR [edi+0x66]
  413994:	push   ds
  413995:	int3   
  413996:	test   DWORD PTR [ecx],0x884e105b
  41399c:	push   ecx
  41399d:	mov    ebp,DWORD PTR [ebp-0x84a1a08]
  4139a3:	dec    edx
  4139a4:	out    dx,al
  4139a5:	push   cs
  4139a6:	push   edx
  4139a7:	sub    ch,BYTE PTR [esi-0xa]
  4139aa:	sbb    ebx,ebp
  4139ac:	mov    eax,0x3c4d1949
  4139b1:	mov    esp,0xc703f107
  4139b6:	gs ret 
  4139b8:	out    0xf8,al
  4139ba:	xor    BYTE PTR [eax],bh
  4139bc:	add    cl,BYTE PTR [ebp-0x52]
  4139bf:	popf   
  4139c0:	or     al,0x1e
  4139c2:	shr    DWORD PTR [edi-0x70],cl
  4139c5:	and    bl,ch
  4139c7:	loopne 0x413a0c
  4139c9:	shr    BYTE PTR [eax],0x27
  4139cc:	sub    cl,0xbd
  4139cf:	daa    
  4139d0:	sbb    al,BYTE PTR [ebp+0x44]
  4139d3:	or     edx,0x72
  4139d6:	ret    0x6009
  4139d9:	xor    DWORD PTR [eax],ebp
  4139db:	dec    ebx
  4139dc:	mov    ecx,0x65d1c75f
  4139e1:	mov    WORD PTR [ebp+0x394c6a1c],fs
  4139e7:	cmp    cl,BYTE PTR [ebx-0x2c]
  4139ea:	or     BYTE PTR [edx],0xcb
  4139ed:	push   ebx
  4139ee:	dec    esp
  4139ef:	dec    ebx
  4139f0:	add    eax,0x5f0e2567
  4139f5:	mov    al,ds:0xcd6813ad
  4139fa:	xor    DWORD PTR [ebp+0x30],0x6c
  4139fe:	sub    eax,0xee40fba2
  413a03:	aaa    
  413a04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a05:	sub    edx,eax
  413a07:	mov    bh,0xa2
  413a09:	mov    ebx,0x896baf1
  413a0e:	add    al,al
  413a10:	rcl    DWORD PTR [ecx+0x6],1
  413a13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a14:	aaa    
  413a15:	cmp    ebp,DWORD PTR [edx]
  413a17:	add    al,ch
  413a19:	sbb    ch,BYTE PTR [ebp-0x1a]
  413a1c:	int    0x70
  413a1e:	sub    eax,0x9db852d9
  413a23:	cwde   
  413a24:	lods   al,BYTE PTR ds:[esi]
  413a25:	inc    esp
  413a26:	xchg   esp,eax
  413a27:	int    0x7e
  413a29:	out    dx,al
  413a2a:	jne    0x4139b4
  413a2c:	dec    edx
  413a2d:	pop    ecx
  413a2e:	push   0x839911ec
  413a33:	cmp    bl,dh
  413a35:	std    
  413a36:	jmp    0x193b:0x40a84762
  413a3d:	mov    esi,0xc52ccba
  413a42:	push   0xbbb3189d
  413a47:	cmp    eax,0xa026c45f
  413a4c:	cld    
  413a4d:	lods   al,BYTE PTR ds:[esi]
  413a4e:	xchg   DWORD PTR [edi-0x6769e948],eax
  413a54:	neg    DWORD PTR [edi+0x49189755]
  413a5a:	punpckhdq mm6,QWORD PTR ds:0xa9f29e2b
  413a61:	sub    eax,0xc431e666
  413a66:	mov    eax,DWORD PTR [ecx-0x5b]
  413a69:	dec    ecx
  413a6a:	js     0x413a02
  413a6c:	fwait
  413a6d:	mov    edi,0xfcff920b
  413a72:	mov    dl,0xd7
  413a74:	push   edi
  413a75:	gs mov al,0x1b
  413a78:	(bad)  
  413a79:	xchg   esp,eax
  413a7a:	adc    DWORD PTR [ecx-0x765f114c],0xffffffda
  413a81:	cdq    
  413a82:	mov    cl,0x3e
  413a84:	stos   DWORD PTR es:[edi],eax
  413a85:	or     DWORD PTR [edi+0x79],edi
  413a88:	xchg   edx,eax
  413a89:	(bad)  
  413a8a:	in     al,dx
  413a8b:	mov    ecx,0x19a1e64c
  413a90:	es into 
  413a92:	(bad)  
  413a93:	push   ebx
  413a94:	jl     0x413a86
  413a96:	fwait
  413a97:	xor    al,0x65
  413a99:	(bad)  
  413a9a:	fidiv  DWORD PTR [ebp+0x68a39207]
  413aa0:	ins    BYTE PTR es:[edi],dx
  413aa1:	xor    al,0x9c
  413aa3:	jmp    0x413b21
  413aa5:	sbb    BYTE PTR [eax+ecx*1-0x2a],al
  413aa9:	hlt    
  413aaa:	sub    eax,DWORD PTR [esi]
  413aac:	stos   BYTE PTR es:[edi],al
  413aad:	sahf   
  413aae:	or     al,0xde
  413ab0:	rcr    BYTE PTR [esi-0x6d],1
  413ab3:	ja     0x413a8c
  413ab5:	rcr    DWORD PTR [eax],1
  413ab7:	add    ecx,DWORD PTR [ebp-0x18]
  413aba:	in     eax,0x1f
  413abc:	inc    ebp
  413abd:	sub    eax,0x838dee4c
  413ac2:	adc    bh,BYTE PTR [edi+0xb6926da]
  413ac8:	out    dx,eax
  413ac9:	push   ds
  413aca:	mov    ecx,0x1d11b21e
  413acf:	sub    BYTE PTR [edi+0x1e],al
  413ad2:	sbb    eax,0x350d1bfd
  413ad7:	mov    ds:0x18706227,al
  413adc:	push   ebp
  413add:	dec    eax
  413ade:	mov    bl,ch
  413ae0:	stos   BYTE PTR es:[edi],al
  413ae1:	ja     0x413ad7
  413ae3:	aaa    
  413ae4:	adc    eax,0x65c8ef4a
  413aea:	adc    ecx,eax
  413aec:	xor    DWORD PTR [esp+eax*8],esi
  413aef:	sbb    eax,DWORD PTR [ebx]
  413af1:	rcl    edx,cl
  413af3:	test   BYTE PTR [ebp+0x59],0x1b
  413af7:	and    BYTE PTR [edx],0x43
  413afa:	mov    ah,0xf2
  413afc:	and    edx,DWORD PTR [esi+0x6f]
  413aff:	inc    ebx
  413b00:	jnp    0x413b14
  413b02:	xchg   DWORD PTR [ecx+0xe],edx
  413b05:	into   
  413b06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b07:	scas   eax,DWORD PTR es:[edi]
  413b08:	fisttp DWORD PTR [ebp-0x128bd5ec]
  413b0e:	pop    ds
  413b0f:	cwde   
  413b10:	popf   
  413b11:	dec    esi
  413b12:	add    BYTE PTR [ecx*2-0x61e25627],dh
  413b19:	xor    al,0x10
  413b1b:	inc    eax
  413b1c:	lea    ebp,[ecx]
  413b1e:	(bad)  
  413b1f:	in     eax,dx
  413b20:	cmp    edi,DWORD PTR [eax+0x5d]
  413b23:	ins    DWORD PTR es:[edi],dx
  413b24:	add    BYTE PTR [ebx],dh
  413b26:	rcl    BYTE PTR ds:0xfe04fcc7,1
  413b2c:	sub    cl,dl
  413b2e:	les    ecx,FWORD PTR ds:0xe2ca7be7
  413b34:	pushf  
  413b35:	sbb    eax,0xe1e3a950
  413b3a:	popf   
  413b3b:	sbb    esp,DWORD PTR [edi]
  413b3d:	mul    BYTE PTR cs:[edx+0x44]
  413b41:	cmp    DWORD PTR [esi-0x6a],ebx
  413b44:	dec    eax
  413b45:	xor    bh,BYTE PTR ds:0x19409ee3
  413b4b:	mov    ah,0x75
  413b4d:	mov    ecx,0x6e15afff
  413b52:	cmp    DWORD PTR [eax],ebx
  413b54:	rol    esi,cl
  413b56:	inc    ebx
  413b57:	rcl    edx,cl
  413b59:	mov    ds:0xad9f0287,eax
  413b5e:	rol    DWORD PTR [eax],1
  413b60:	int    0xa8
  413b62:	or     edx,ecx
  413b64:	xchg   edx,eax
  413b65:	push   0x54
  413b67:	mov    al,0x18
  413b69:	adc    eax,DWORD PTR [ebx]
  413b6b:	pop    esi
  413b6c:	in     eax,0x6d
  413b6e:	jno    0x413b15
  413b70:	mov    WORD PTR [esi-0x3160d34c],ds
  413b76:	sub    DWORD PTR [eax],edi
  413b78:	enter  0xc37c,0xdf
  413b7c:	pop    edi
  413b7d:	arpl   sp,bp
  413b7f:	xchg   edi,eax
  413b80:	bound  esp,QWORD PTR [edx+eiz*4-0x74]
  413b84:	fdivr  DWORD PTR ss:[edi-0x2e]
  413b88:	and    ah,BYTE PTR [edx-0x1c]
  413b8b:	inc    edx
  413b8c:	dec    ebx
  413b8d:	(bad)  
  413b8e:	push   cs
  413b8f:	not    BYTE PTR [eax]
  413b91:	mov    cl,0x7a
  413b93:	or     DWORD PTR [ebx+0x11],ecx
  413b96:	push   0xffffff8d
  413b98:	mov    al,ds:0x763bacc
  413b9d:	les    eax,FWORD PTR [edx+0x32035d03]
  413ba3:	shl    DWORD PTR [edx-0x4e2ce306],1
  413ba9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413baa:	lock sbb BYTE PTR [ebx-0x621a027],0x28
  413bb2:	dec    ebx
  413bb3:	rep lods eax,DWORD PTR ds:[esi]
  413bb5:	popa   
  413bb6:	sub    eax,0x2c2b67f
  413bbb:	and    ebx,edi
  413bbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bbe:	test   eax,0x6c68e409
  413bc3:	and    ah,BYTE PTR [edx]
  413bc5:	sub    eax,0x4c84006a
  413bca:	hlt    
  413bcb:	jae    0x413bf2
  413bcd:	lods   eax,DWORD PTR ds:[esi]
  413bce:	jo     0x413bf7
  413bd0:	fild   WORD PTR [eax]
  413bd2:	xor    DWORD PTR [esi-0xc],edx
  413bd5:	daa    
  413bd6:	add    BYTE PTR [ebp+0x11],dl
  413bd9:	sbb    al,0xe4
  413bdc:	dec    edx
  413bdd:	ret    
  413bde:	cmp    eax,0xdfcf0712
  413be3:	mov    esp,0x7792298b
  413be8:	idiv   BYTE PTR [edx]
  413bea:	lds    ecx,FWORD PTR [ebp-0x3dc9ad57]
  413bf0:	mov    ecx,ecx
  413bf2:	sti    
  413bf3:	mov    ebp,0x49eab10f
  413bf8:	add    WORD PTR [edi+edi*8],si
  413bfc:	xor    edi,esp
  413bfe:	and    ecx,ebx
  413c00:	stos   DWORD PTR es:[edi],eax
  413c01:	mov    esp,0x87af77f3
  413c06:	and    cl,bl
  413c08:	fwait
  413c09:	mov    ch,0x8c
  413c0b:	jle    0x413c05
  413c0d:	mov    WORD PTR [edx+0x33],ss
  413c10:	add    ch,BYTE PTR [ebp-0x39]
  413c13:	(bad)  
  413c15:	cmp    al,0xfe
  413c17:	xchg   esi,eax
  413c18:	ret    
  413c19:	cwde   
  413c1a:	mov    dh,0xd2
  413c1c:	fild   DWORD PTR ds:0x2668ed39
  413c22:	mov    WORD PTR [ecx-0x45],ss
  413c25:	adc    al,0x38
  413c27:	push   edx
  413c28:	and    ebx,DWORD PTR [ecx-0x56d7b6bd]
  413c2e:	push   ss
  413c2f:	push   eax
  413c30:	sub    BYTE PTR [edx-0x62596100],bl
  413c36:	or     esp,ebx
  413c38:	pushf  
  413c39:	ss push ds
  413c3b:	aaa    
  413c3c:	add    BYTE PTR [edx],al
  413c3e:	cmp    al,0x20
  413c40:	pop    ebx
  413c41:	xor    BYTE PTR [esi+esi*8-0x70],al
  413c45:	push   ds
  413c46:	add    DWORD PTR [ecx],esi
  413c48:	fisub  DWORD PTR [ebp-0x370fd8d5]
  413c4e:	dec    eax
  413c4f:	jno    0x413c19
  413c51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c52:	aas    
  413c53:	lds    ecx,FWORD PTR [ebp-0x1cc4c7b7]
  413c59:	sbb    ebp,DWORD PTR [edi]
  413c5b:	adc    bl,BYTE PTR [esi-0x38]
  413c5e:	pop    ss
  413c5f:	call   0x3e04:0x3c76f831
  413c66:	in     eax,dx
  413c67:	jg     0x413c15
  413c69:	mov    ds:0x94fdafaa,al
  413c6e:	push   cs
  413c6f:	mov    cl,0x1f
  413c71:	cmp    ebp,edx
  413c73:	xlat   BYTE PTR ds:[ebx]
  413c74:	dec    ecx
  413c75:	push   esi
  413c76:	jg     0x413cb0
  413c78:	retf   
  413c79:	fild   DWORD PTR [esi+0x52536884]
  413c7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c80:	add    DWORD PTR [edi-0x3e],ebx
  413c83:	std    
  413c84:	hlt    
  413c85:	mov    dh,0x49
  413c87:	push   ds
  413c88:	push   cs
  413c89:	outs   dx,DWORD PTR ds:[esi]
  413c8a:	xchg   esi,eax
  413c8b:	test   BYTE PTR ds:0x87817a12,dl
  413c91:	sub    BYTE PTR [eax],bl
  413c93:	test   DWORD PTR [edx],0xfcb67de8
  413c99:	inc    esi
  413c9a:	push   esi
  413c9b:	cmp    al,0x3c
  413c9d:	jne    0x413d10
  413c9f:	in     eax,0xd
  413ca1:	xchg   edi,eax
  413ca2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ca3:	aaa    
  413ca4:	xchg   ecx,eax
  413ca5:	(bad)  
  413ca6:	sbb    eax,0x7af08261
  413cab:	add    al,0xa7
  413cad:	popa   
  413cae:	test   BYTE PTR [esi],ah
  413cb0:	ins    DWORD PTR es:[edi],dx
  413cb1:	cmp    al,0x7d
  413cb3:	lds    ebx,FWORD PTR [edx+0x57b44dd]
  413cb9:	dec    ebp
  413cba:	and    ebp,ebx
  413cbc:	inc    BYTE PTR [ecx-0x25f03968]
  413cc2:	inc    esi
  413cc3:	loope  0x413cde
  413cc5:	jmp    0x13032eae
  413cca:	lea    ebp,[ebx]
  413ccc:	cdq    
  413ccd:	sbb    eax,0xb1c84122
  413cd2:	cmc    
  413cd3:	rol    DWORD PTR [ebx-0xc],cl
  413cd6:	inc    edi
  413cd7:	fs call 0x1b2f1a71
  413cdd:	mov    dh,dh
  413cdf:	mov    WORD PTR [edx+esi*1],fs
  413ce2:	int    0xdf
  413ce4:	loopne 0x413cc6
  413ce6:	xor    al,0x5e
  413ce8:	fs xchg ebx,eax
  413cea:	rcr    BYTE PTR [ebx],1
  413cec:	adc    eax,DWORD PTR [ebx-0x16]
  413cef:	mov    esi,fs
  413cf1:	(bad)  
  413cf2:	into   
  413cf3:	pushf  
  413cf4:	rol    BYTE PTR es:[ebx+0x414ab144],1
  413cfb:	scas   al,BYTE PTR es:[edi]
  413cfc:	aaa    
  413cfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cfe:	aam    0xbc
  413d00:	xchg   ebx,eax
  413d01:	je     0x413d5c
  413d03:	xchg   ecx,eax
  413d04:	sbb    al,0xbe
  413d06:	lods   eax,DWORD PTR ds:[esi]
  413d07:	jnp    0x413cc1
  413d09:	ins    BYTE PTR es:[edi],dx
  413d0a:	retf   0xa5f6
  413d0d:	mov    ecx,0x30a557d8
  413d12:	mov    WORD PTR [ebp-0x7cb683db],es
  413d18:	mov    bh,0x4f
  413d1a:	sbb    ebx,DWORD PTR [ecx+ecx*2-0x70]
  413d1e:	push   ebx
  413d1f:	ret    0xf8bf
  413d22:	and    BYTE PTR [edi],dh
  413d24:	cmp    DWORD PTR [ecx-0x5f],esp
  413d27:	inc    eax
  413d28:	mov    BYTE PTR [ebx+0x12],ch
  413d2b:	mov    esi,0xc320f246
  413d30:	(bad)  
  413d31:	jb     0x413d74
  413d33:	push   ss
  413d34:	outs   dx,DWORD PTR ds:[esi]
  413d35:	jmp    0xb0b760c8
  413d3a:	dec    ebx
  413d3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d3c:	in     al,0x42
  413d3e:	xchg   ebx,eax
  413d3f:	adc    edx,edi
  413d41:	outs   dx,BYTE PTR ds:[esi]
  413d42:	xchg   edi,eax
  413d43:	inc    ebp
  413d44:	nop
  413d45:	mov    BYTE PTR [ebx-0x1a],dh
  413d48:	mov    eax,0x2e5a33c4
  413d4d:	mov    ebx,0x16c0370e
  413d52:	call   0x5e74:0x254abaa2
  413d59:	shl    edi,cl
  413d5b:	cli    
  413d5c:	xchg   ebp,eax
  413d5d:	pusha  
  413d5e:	daa    
  413d5f:	adc    DWORD PTR [ecx],ecx
  413d61:	push   edx
  413d62:	mov    bl,0x1e
  413d64:	jne    0x413dc9
  413d66:	rol    DWORD PTR [ebx-0xf],cl
  413d69:	js     0x413cfc
  413d6b:	add    edx,ecx
  413d6d:	xlat   BYTE PTR ds:[ebx]
  413d6e:	sub    eax,0x519ba5fa
  413d73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d74:	xchg   esi,eax
  413d75:	scas   eax,DWORD PTR es:[edi]
  413d76:	or     esp,DWORD PTR [eax]
  413d78:	lods   al,BYTE PTR ds:[esi]
  413d79:	sub    DWORD PTR [ebp-0x71],edi
  413d7c:	push   0x38dfa6ef
  413d81:	ins    BYTE PTR es:[edi],dx
  413d82:	or     eax,esi
  413d84:	xchg   BYTE PTR [ebp+0x530a395d],cl
  413d8a:	pop    edx
  413d8b:	and    al,0xb
  413d8d:	(bad)  
  413d8e:	sti    
  413d8f:	je     0x413dc5
  413d91:	enter  0x3909,0x23
  413d95:	push   ecx
  413d96:	and    eax,0x1b820f39
  413d9b:	in     al,dx
  413d9c:	pop    ebx
  413d9d:	push   cs
  413d9e:	fcmovbe st,st(2)
  413da0:	and    esp,DWORD PTR [ebx-0x5f]
  413da3:	push   eax
  413da4:	outs   dx,BYTE PTR ds:[esi]
  413da5:	push   edi
  413da6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413da7:	jle    0x413df7
  413da9:	cmc    
  413daa:	jne    0x413d6a
  413dac:	in     al,dx
  413dad:	(bad)  
  413daf:	rcl    BYTE PTR [ebx-0x4f],cl
  413db2:	lods   al,BYTE PTR ds:[esi]
  413db3:	mov    al,0x3
  413db5:	add    al,0xfc
  413db7:	adc    al,0xf8
  413db9:	xor    eax,0xaca9acf
  413dbe:	pop    ecx
  413dbf:	clc    
  413dc0:	dec    edi
  413dc1:	dec    edx
  413dc2:	stos   DWORD PTR es:[edi],eax
  413dc3:	dec    ebx
  413dc4:	adc    eax,0x614a419f
  413dc9:	mov    WORD PTR [edi+ebp*4+0x5c4ea6b0],gs
  413dd0:	repz cld 
  413dd2:	sahf   
  413dd3:	idiv   BYTE PTR [esi]
  413dd5:	pop    eax
  413dd6:	cld    
  413dd7:	ror    BYTE PTR [ecx],0xef
  413dda:	repz repz scas al,BYTE PTR es:[edi]
  413ddd:	push   ecx
  413dde:	fsub   st(7),st
  413de0:	lods   al,BYTE PTR ds:[esi]
  413de1:	add    ch,BYTE PTR [ebp-0x11]
  413de4:	call   0xd1f7:0xeefb51ca
  413deb:	push   edi
  413dec:	into   
  413ded:	cs out 0x6,eax
  413df0:	push   ss
  413df1:	xchg   ebx,eax
  413df2:	mov    BYTE PTR [ebp+0x72daf176],cl
  413df8:	push   ecx
  413df9:	or     BYTE PTR [edx-0x67],dl
  413dfc:	into   
  413dfd:	mov    al,ds:0xa9893161
  413e02:	mov    ebx,0x73c6b4aa
  413e07:	ret    
  413e08:	push   ecx
  413e09:	gs jno 0x413dd1
  413e0c:	aaa    
  413e0d:	or     eax,0xaf5046fe
  413e12:	dec    edi
  413e13:	mov    WORD PTR [ecx],es
  413e15:	enter  0x3649,0x74
  413e19:	dec    ecx
  413e1a:	pop    DWORD PTR [eax-0x4d]
  413e1d:	test   eax,0x7b44ae9e
  413e22:	rol    BYTE PTR [eax+ebp*8+0x638a59b5],1
  413e29:	aas    
  413e2a:	int    0xbd
  413e2c:	push   ecx
  413e2d:	push   edi
  413e2e:	xchg   ebx,eax
  413e2f:	imul   BYTE PTR [ebx]
  413e31:	adc    DWORD PTR [ecx+0x36463a57],ebx
  413e37:	jns    0x413e01
  413e39:	sar    esi,0xbd
  413e3c:	stos   BYTE PTR es:[edi],al
  413e3d:	jle    0x413e48
  413e3f:	jbe    0x413e0b
  413e41:	push   0x86dbd80c
  413e46:	in     eax,dx
  413e47:	or     ebp,DWORD PTR [esi+edx*4]
  413e4a:	xchg   edi,eax
  413e4b:	out    dx,eax
  413e4c:	das    
  413e4d:	das    
  413e4e:	dec    ecx
  413e4f:	sbb    al,0x55
  413e51:	ficom  DWORD PTR [ebx+0x7106372b]
  413e57:	enter  0x3c8,0x9
  413e5b:	inc    ecx
  413e5c:	out    dx,al
  413e5d:	or     BYTE PTR [ebp+0x41],bl
  413e60:	ja     0x413e6d
  413e62:	xor    BYTE PTR [eax+0x44],al
  413e65:	dec    eax
  413e66:	xchg   esp,eax
  413e67:	mov    ecx,0x4ea0164c
  413e6c:	add    eax,0xf3bc1682
  413e71:	pop    edx
  413e72:	es dec edi
  413e74:	out    0x4f,al
  413e76:	xchg   esi,eax
  413e77:	cwde   
  413e78:	xchg   DWORD PTR [ebx+0x45],esi
  413e7b:	pushf  
  413e7c:	fldpi  
  413e7e:	fwait
  413e7f:	scas   eax,DWORD PTR es:[edi]
  413e80:	or     ch,BYTE PTR [esi+0x5c]
  413e83:	ror    DWORD PTR [edx-0x3260d58e],0x23
  413e8a:	call   0xe46a4d62
  413e8f:	icebp  
  413e90:	loope  0x413eba
  413e92:	pop    es
  413e93:	xor    al,0x10
  413e95:	mov    ch,0x48
  413e97:	push   es
  413e98:	dec    BYTE PTR [esi+0x1cae30a6]
  413e9e:	scas   eax,DWORD PTR es:[edi]
  413e9f:	stos   DWORD PTR es:[edi],eax
  413ea0:	rcr    DWORD PTR [eax],0xb1
  413ea3:	or     edi,esi
  413ea5:	xchg   BYTE PTR [ebx-0x7f],ch
  413ea8:	pop    eax
  413ea9:	cs call 0xaa37:0xde27cda4
  413eb1:	and    ecx,DWORD PTR [ebp-0xb]
  413eb4:	or     al,0x2f
  413eb6:	xor    DWORD PTR [eax+0x302609a5],esp
  413ebc:	outs   dx,BYTE PTR ds:[esi]
  413ebd:	pop    edx
  413ebe:	pop    esp
  413ebf:	jb     0x413f09
  413ec1:	pop    edx
  413ec3:	push   es
  413ec4:	gs push ss
  413ec6:	and    cl,BYTE PTR [ecx-0x5a]
  413ec9:	mov    dh,BYTE PTR [edx-0x3667c6b9]
  413ecf:	sub    eax,eax
  413ed1:	xchg   edi,ebx
  413ed3:	idiv   DWORD PTR [ebp-0x74ce93c6]
  413ed9:	mov    bh,0xc4
  413edb:	or     al,0x73
  413edd:	xchg   BYTE PTR [ebx+0x3b],bh
  413ee0:	mov    cl,0xd9
  413ee2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ee3:	add    al,0x24
  413ee5:	adc    eax,0x46eeefa8
  413eea:	pushf  
  413eeb:	in     eax,dx
  413eec:	xchg   DWORD PTR [ecx+0x24],ebp
  413eef:	std    
  413ef0:	popa   
  413ef1:	idiv   BYTE PTR [ebp+0x5cdf17a3]
  413ef7:	cmp    al,0x45
  413ef9:	push   0x1e
  413efb:	icebp  
  413efc:	arpl   WORD PTR [eax+ecx*8+0x5c],bx
  413f00:	and    DWORD PTR ss:[eax],esi
  413f03:	dec    DWORD PTR [esi-0x7d]
  413f06:	out    0x6e,eax
  413f08:	pop    edi
  413f09:	pusha  
  413f0a:	lods   eax,DWORD PTR ds:[esi]
  413f0b:	sbb    esi,DWORD PTR [edx+eiz*2]
  413f0e:	into   
  413f0f:	cmp    BYTE PTR [edx],al
  413f11:	stos   BYTE PTR es:[edi],al
  413f12:	xchg   edi,eax
  413f13:	or     BYTE PTR [edx+0x6a],bh
  413f16:	or     eax,0x23718434
  413f1b:	loopne 0x413ed4
  413f1d:	sbb    bh,BYTE PTR [ebx+0x73]
  413f20:	pop    esi
  413f21:	or     BYTE PTR [eax-0x2ce88a4d],bh
  413f27:	adc    BYTE PTR [ebx+0x7a],cl
  413f2a:	out    dx,ax
  413f2c:	inc    edi
  413f2d:	xchg   ecx,eax
  413f2e:	je     0x413f09
  413f30:	mov    BYTE PTR [ecx-0x601e23ac],bh
  413f36:	retf   0x1563
  413f39:	inc    edx
  413f3a:	fwait
  413f3b:	(bad)  
  413f3c:	dec    edi
  413f3d:	in     eax,0x1f
  413f3f:	mov    dl,0xad
  413f41:	adc    eax,0x14fc597d
  413f46:	cld    
  413f47:	xchg   ebp,eax
  413f48:	dec    ebx
  413f49:	ret    0x265
  413f4c:	mov    al,0x58
  413f4e:	mov    cl,0xee
  413f50:	aam    0x84
  413f52:	call   0x9841:0x31d5d748
  413f59:	and    DWORD PTR [ebp-0xf],esp
  413f5c:	out    dx,al
  413f5d:	sbb    BYTE PTR [edi+0x2e1f4b51],al
  413f63:	leave  
  413f64:	inc    eax
  413f65:	xor    cl,BYTE PTR [edi-0x5c]
  413f68:	pop    eax
  413f69:	push   ds
  413f6a:	adc    al,0xe8
  413f6c:	inc    ebp
  413f6d:	(bad)  
  413f6e:	pushf  
  413f6f:	test   DWORD PTR [eax],0xd4b5ff34
  413f75:	les    eax,FWORD PTR [eax+0x1c]
  413f78:	xchg   ebp,eax
  413f79:	sub    BYTE PTR [eax],ah
  413f7b:	call   DWORD PTR [edx-0x4b]
  413f7e:	in     al,dx
  413f7f:	cwde   
  413f80:	hlt    
  413f81:	and    edx,ebp
  413f83:	fsubr  DWORD PTR [ecx+0xe5d3fd5]
  413f89:	adc    DWORD PTR [edi-0x3d],ecx
  413f8c:	cmp    edx,eax
  413f8e:	nop
  413f8f:	stos   DWORD PTR es:[edi],eax
  413f90:	test   al,0x3e
  413f92:	mov    bh,0xf6
  413f94:	or     eax,0x22023dab
  413f99:	cmp    ebx,DWORD PTR [ecx+0x57cba36b]
  413f9f:	lds    ebx,FWORD PTR [ecx]
  413fa1:	(bad)  
  413fa2:	inc    esp
  413fa3:	xor    ebx,DWORD PTR ds:0x5f64ed5a
  413fa9:	sub    al,0xa0
  413fab:	jle    0x413f88
  413fad:	cmc    
  413fae:	(bad)  
  413faf:	cmp    eax,0x36e5d74d
  413fb4:	and    bl,cl
  413fb6:	test   dh,0xe0
  413fb9:	je     0x413fd0
  413fbb:	aas    
  413fbc:	(bad)  
  413fbd:	fldcw  WORD PTR [edx+0x75]
  413fc0:	xor    ah,BYTE PTR [edx]
  413fc2:	cdq    
  413fc3:	sub    al,0xf9
  413fc5:	ins    BYTE PTR es:[edi],dx
  413fc6:	xchg   ebx,eax
  413fc7:	imul   ebx,DWORD PTR [ecx-0x3a],0x42e90448
  413fce:	xchg   edx,eax
  413fcf:	or     al,0x2
  413fd1:	sub    edx,DWORD PTR [eax]
  413fd3:	fist   WORD PTR [ecx+0x435859ab]
  413fd9:	dec    ecx
  413fda:	imul   BYTE PTR [ebx+0x3fbecf9f]
  413fe0:	xchg   esp,eax
  413fe1:	sar    DWORD PTR [ecx-0x7f],cl
  413fe4:	call   0x167d3e95
  413fe9:	and    eax,DWORD PTR [eax-0x31]
  413fec:	scas   eax,DWORD PTR es:[edi]
  413fed:	leave  
  413fee:	icebp  
  413fef:	xchg   BYTE PTR [edx+0x5e],bl
  413ff2:	hlt    
  413ff3:	xor    ch,cl
  413ff5:	aaa    
  413ff6:	shl    BYTE PTR [ecx-0x6b7fbeec],0x63
  413ffd:	add    esi,DWORD PTR [edi+esi*2-0x7e6eb50e]
  414004:	or     eax,0x87b49269
  414009:	sub    eax,0xd756ddae
  41400e:	test   DWORD PTR [ecx-0x37],ebp
  414011:	xor    eax,0xab26a8c7
  414016:	out    dx,al
  414017:	(bad)  [edi+0x51]
  41401a:	jns    0x414087
  41401c:	cld    
  41401d:	mov    bh,BYTE PTR [edx+0x16377292]
  414023:	adc    dl,dl
  414025:	mov    cl,0x1e
  414027:	dec    eax
  414028:	ror    DWORD PTR [ebp-0x74bd42cc],1
  41402e:	repz and eax,0x334740c4
  414034:	xchg   edi,eax
  414035:	stos   DWORD PTR es:[edi],eax
  414036:	mov    bl,0x95
  414038:	(bad)  
  414039:	sub    bl,BYTE PTR [esi]
  41403b:	inc    edi
  41403c:	ja     0x41407d
  41403e:	clc    
  41403f:	pop    esi
  414040:	outs   dx,DWORD PTR ds:[esi]
  414041:	add    cl,BYTE PTR [ebp+0x745ae7c6]
  414047:	push   cs
  414048:	rol    BYTE PTR [edx],0x68
  41404b:	js     0x414012
  41404d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41404e:	or     BYTE PTR [eax],al
  414050:	adc    edi,DWORD PTR [eax]
  414052:	enter  0xa0cd,0xa0
  414056:	fucomi st,st(6)
  414058:	ins    BYTE PTR es:[edi],dx
  414059:	cmp    DWORD PTR [ecx-0x73ab3d09],esi
  41405f:	aaa    
  414060:	sub    BYTE PTR [ecx+0x14f44e74],0x2f
  414067:	les    eax,FWORD PTR [esp+eiz*4]
  41406a:	pop    ds
  41406b:	xor    ah,0x4f
  41406e:	cmp    ch,BYTE PTR [edi-0x30132329]
  414074:	push   ebp
  414075:	inc    esp
  414076:	cmc    
  414077:	scas   eax,DWORD PTR es:[edi]
  414078:	out    dx,al
  414079:	iret   
  41407a:	mov    dh,0xc
  41407c:	jle    0x414025
  41407e:	add    ah,ch
  414080:	packsswb mm5,QWORD PTR [esi+0x3047885b]
  414087:	pushf  
  414088:	test   al,0xe8
  41408a:	cmp    eax,0x1d03cb4a
  41408f:	push   ebp
  414090:	lods   al,BYTE PTR ds:[esi]
  414091:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414092:	scas   eax,DWORD PTR es:[edi]
  414093:	ror    DWORD PTR [eax-0x33196417],cl
  414099:	mov    bl,0x68
  41409b:	jne    0x41403b
  41409d:	call   0x17ba:0xeaac38cc
  4140a4:	data16 fld TBYTE PTR [ebx-0x60]
  4140a8:	inc    eax
  4140a9:	sub    BYTE PTR [ebp-0x2b62df1b],dh
  4140af:	fwait
  4140b0:	arpl   WORD PTR [edi-0x39],sp
  4140b3:	lods   al,BYTE PTR ds:[esi]
  4140b4:	fwait
  4140b5:	test   BYTE PTR [edx+0x44],al
  4140b8:	and    esp,DWORD PTR [esp+edi*4+0x122d9029]
  4140bf:	aas    
  4140c0:	cmc    
  4140c1:	xchg   esi,eax
  4140c2:	idiv   DWORD PTR [eax+0x63]
  4140c5:	sub    dh,BYTE PTR [edx+0x33]
  4140c8:	nop
  4140c9:	dec    esi
  4140ca:	mov    ah,0xe5
  4140cc:	mov    dh,0xf8
  4140ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140cf:	mov    esi,0x1ff2d6b0
  4140d4:	int3   
  4140d5:	clc    
  4140d6:	ret    
  4140d7:	sbb    DWORD PTR [edi],ecx
  4140d9:	shl    esi,cl
  4140db:	retf   0xc202
  4140de:	pop    ds
  4140df:	adc    al,0x96
  4140e1:	mov    DWORD PTR [eax-0x51],0xdd2d7272
  4140e8:	outs   dx,DWORD PTR ds:[esi]
  4140e9:	ins    BYTE PTR es:[edi],dx
  4140ea:	xor    BYTE PTR [ebx],cl
  4140ec:	inc    esi
  4140ed:	pop    edi
  4140ee:	sbb    edi,esi
  4140f0:	add    al,0xf7
  4140f2:	mov    fs,ecx
  4140f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140f5:	push   edi
  4140f6:	fbstp  TBYTE PTR [edx-0x37]
  4140f9:	loope  0x414141
  4140fb:	mov    bh,0xdb
  4140fd:	sbb    DWORD PTR [edi],esp
  4140ff:	std    
  414100:	sbb    al,ah
  414102:	and    DWORD PTR ds:0x4939aee0,eax
  414108:	cmp    ebx,DWORD PTR [ecx-0x4a0d8d4d]
  41410e:	rol    eax,cl
  414110:	inc    ebx
  414111:	cli    
  414112:	int3   
  414113:	imul   ebp,DWORD PTR ss:[ebp-0x2c4d1c2f],0x4e
  41411b:	mov    esi,fs
  41411d:	xlat   BYTE PTR ds:[ebx]
  41411e:	nop
  41411f:	sbb    DWORD PTR [edx],0x11
  414122:	sub    ebp,DWORD PTR [eax+0x40]
  414125:	outs   dx,BYTE PTR ds:[esi]
  414126:	cwde   
  414127:	mov    ch,0x3f
  414129:	(bad)  
  41412a:	xor    DWORD PTR [eax-0x78523a9a],edx
  414130:	xchg   edx,eax
  414131:	loop   0x41410e
  414133:	mov    edx,DWORD PTR [ebx+0x3909d44d]
  414139:	jmp    0x414162
  41413b:	sub    al,0xb2
  41413d:	jle    0x4141a3
  41413f:	xlat   BYTE PTR ds:[ebx]
  414140:	enter  0x4aeb,0x6b
  414144:	jnp    0x41413d
  414146:	idiv   BYTE PTR [esi-0x2c]
  414149:	es hlt 
  41414b:	mov    edx,0xeff7b64a
  414150:	ror    DWORD PTR [ebp+0x1a09e76a],cl
  414156:	lods   al,BYTE PTR gs:[esi]
  414158:	cmp    ch,BYTE PTR [ebx]
  41415a:	pop    es
  41415b:	shl    ch,cl
  41415d:	imul   edi,DWORD PTR [ebp+0x5df61437],0x1b615bb4
  414167:	lock stos BYTE PTR es:[edi],al
  414169:	or     edi,DWORD PTR [esi+ebp*4]
  41416c:	cld    
  41416d:	aad    0xf9
  41416f:	rcl    DWORD PTR [edx+0x69],1
  414172:	add    edx,ebp
  414174:	pop    esp
  414175:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414176:	outs   dx,BYTE PTR ds:[esi]
  414177:	imul   esp,DWORD PTR [edi],0xffffffd3
  41417a:	jg     0x41418b
  41417c:	sbb    al,0x80
  41417e:	mov    eax,0xc26d680b
  414183:	pushf  
  414184:	ss sbb al,0xe2
  414187:	mov    ch,0x11
  414189:	mov    bh,BYTE PTR [edx+0x76]
  41418c:	xchg   ebx,eax
  41418d:	dec    ebp
  41418e:	addr16 aam 0x38
  414191:	aam    0x12
  414193:	ja     0x414124
  414195:	mov    ebp,0x2e952534
  41419a:	cmp    bl,BYTE PTR [ebp-0x1]
  41419d:	mov    ah,0x4d
  41419f:	dec    edi
  4141a0:	fs xor al,0xfa
  4141a3:	jnp    0x4141d9
  4141a5:	lods   al,BYTE PTR ds:[esi]
  4141a6:	add    dl,BYTE PTR [edi+0x13a85748]
  4141ac:	dec    ecx
  4141ad:	adc    DWORD PTR [edi+0x15f63688],edx
  4141b3:	mov    esp,0xfcc77efd
  4141b8:	sub    esi,DWORD PTR [ebx]
  4141ba:	xchg   esp,ebx
  4141bc:	and    al,0xc2
  4141be:	push   ds
  4141bf:	jbe    0x4141fc
  4141c1:	add    bh,BYTE PTR [ecx]
  4141c3:	sti    
  4141c4:	or     al,0x1e
  4141c6:	mov    bl,BYTE PTR [edx+0x1fb5ce39]
  4141cc:	and    DWORD PTR [esi-0x858f9a8],esi
  4141d2:	mov    DWORD PTR [eax-0x52ea1508],0xea098347
  4141dc:	fidivr DWORD PTR [edx]
  4141de:	xchg   edx,eax
  4141df:	or     DWORD PTR [ebp+0x26],eax
  4141e2:	sahf   
  4141e3:	sub    ebp,edi
  4141e5:	push   edx
  4141e6:	jl     0x4141a0
  4141e8:	cs mov ebx,0x1cada4af
  4141ee:	rol    DWORD PTR [ebp+0x39c1a85b],0xb8
  4141f5:	out    0xb0,eax
  4141f7:	mov    ds:0xc9afce0,eax
  4141fd:	idiv   BYTE PTR [ebx]
  4141ff:	ins    BYTE PTR es:[edi],dx
  414200:	(bad)  
  414201:	stos   DWORD PTR es:[edi],eax
  414202:	je     0x41423c
  414204:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414205:	push   ecx
  414206:	sbb    eax,0x940087ba
  41420b:	xor    DWORD PTR ds:0x53cfeb02,edx
  414211:	pop    ss
  414212:	inc    edi
  414213:	adc    bh,bl
  414215:	mov    ds,eax
  414217:	xor    al,0x5f
  414219:	adc    bh,ah
  41421b:	mov    bh,0x71
  41421d:	cld    
  41421e:	mov    bl,0x2a
  414220:	ret    
  414221:	leave  
  414222:	int3   
  414223:	xor    dh,0x8
  414226:	cs add ebx,esp
  414229:	sub    edi,esi
  41422b:	stos   DWORD PTR es:[edi],eax
  41422c:	pop    ss
  41422d:	mov    ecx,0x82b48436
  414232:	jmp    0xb161f597
  414237:	sbb    ecx,eax
  414239:	stos   BYTE PTR es:[edi],al
  41423a:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41423c:	sbb    BYTE PTR [ebx],bh
  41423e:	pmaxub mm0,QWORD PTR [eax+eax*8]
  414242:	push   cs
  414243:	xchg   al,dl
  414245:	rcr    DWORD PTR [eax-0x50],cl
  414248:	add    ebp,DWORD PTR [edi]
  41424a:	cdq    
  41424b:	push   es
  41424c:	lahf   
  41424d:	in     eax,dx
  41424e:	pop    edx
  41424f:	mov    eax,0x671dcb02
  414254:	sub    BYTE PTR [edi+0x7d0d5b4a],0x12
  41425b:	dec    ebp
  41425c:	xor    bl,bh
  41425e:	call   0xb7fa6191
  414263:	je     0x41428a
  414265:	or     al,0xbe
  414267:	push   edx
  414268:	jmp    0x414289
  41426a:	cmc    
  41426b:	inc    eax
  41426c:	inc    ecx
  41426d:	fcomp  DWORD PTR [esi]
  41426f:	dec    esp
  414270:	fnstenv [edx+ebx*4-0x72d9a51e]
  414277:	pusha  
  414278:	jecxz  0x4142d2
  41427a:	add    DWORD PTR [edi+ebp*4],esi
  41427d:	stos   DWORD PTR es:[edi],eax
  41427e:	mov    ch,0x10
  414280:	ret    0x3a49
  414283:	push   edi
  414284:	xor    BYTE PTR [esi],dh
  414286:	dec    eax
  414287:	jns    0x4142f1
  414289:	mov    eax,0x614155ff
  41428e:	(bad)  
  414290:	clc    
  414291:	lahf   
  414292:	mov    bl,0x20
  414294:	or     ebx,DWORD PTR [edx-0x70]
  414297:	pop    ecx
  414298:	es xchg edi,ebx
  41429b:	ins    BYTE PTR es:[edi],dx
  41429c:	jecxz  0x414225
  41429e:	sahf   
  41429f:	aas    
  4142a0:	(bad)  [esi+0x3bbc76a]
  4142a6:	cmp    bl,BYTE PTR [edi]
  4142a8:	(bad)
  4142ac:	dec    esi
  4142ad:	pop    edx
  4142ae:	shl    DWORD PTR [edx-0x15],cl
  4142b1:	mov    esp,0x13022089
  4142b6:	retf   
  4142b7:	or     edi,DWORD PTR [esi]
  4142b9:	sbb    eax,0x9c96338a
  4142be:	stc    
  4142bf:	or     eax,0x3cb83abf
  4142c4:	daa    
  4142c5:	lods   al,BYTE PTR ds:[esi]
  4142c6:	mul    BYTE PTR [ecx+0x2]
  4142c9:	jl     0x41431c
  4142cb:	add    edi,DWORD PTR ds:0x382b440e
  4142d1:	repz mov ah,0x54
  4142d4:	das    
  4142d5:	neg    BYTE PTR [ebx]
  4142d7:	jnp    0x4142ab
  4142d9:	mov    WORD PTR [ebx],ds
  4142db:	out    0x5c,eax
  4142dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142de:	addr16 inc edx
  4142e0:	repz inc ecx
  4142e2:	jecxz  0x4142eb
  4142e4:	add    dl,ch
  4142e6:	xor    eax,0xc978dfbc
  4142eb:	adc    ah,BYTE PTR ds:0x5d513ac5
  4142f1:	stos   DWORD PTR es:[edi],eax
  4142f2:	ret    
  4142f3:	ret    0x3584
  4142f6:	mov    WORD PTR [ebx-0x33],?
  4142f9:	mov    al,0xd3
  4142fb:	aad    0x86
  4142fd:	ja     0x4142dd
  4142ff:	rcl    DWORD PTR [esi-0x2d],cl
  414302:	push   ds
  414303:	cld    
  414304:	jo     0x414301
  414306:	mov    esi,0x584928f1
  41430b:	mov    ds:0x48926988,al
  414310:	push   esi
  414311:	int3   
  414312:	out    0x67,al
  414314:	int3   
  414315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414316:	mov    al,0x2e
  414318:	(bad)  
  414319:	jl     0x414346
  41431b:	rcr    DWORD PTR [ecx],cl
  41431d:	cmp    eax,0x428647
  414322:	sub    edx,esi
  414324:	add    DWORD PTR ds:0x42863f,ecx
  41432a:	xor    edx,eax
  41432c:	mov    ebx,DWORD PTR ds:0x42864f
  414332:	add    DWORD PTR ds:0x428623,ebx
  414338:	mov    DWORD PTR [ebp+0x8],edx
  41433b:	mov    edx,DWORD PTR [ebp+0x8]
  41433e:	inc    ebx
  41433f:	mov    ebx,DWORD PTR [ebp-0x58]
  414342:	sub    DWORD PTR ds:0x428663,0x42863f
  41434c:	add    edx,0x5708f1
  414352:	and    DWORD PTR ds:0x428647,0x6a8d
  41435c:	imul   edx,ebx
  41435f:	xor    ebx,ebx
  414361:	or     ebx,DWORD PTR ds:0x42861f
  414367:	adc    DWORD PTR ds:0x42860f,ebx
  41436d:	mov    DWORD PTR [ebp-0x58],edx
  414370:	mov    edx,DWORD PTR [ebp+0x8]
  414373:	mov    ebx,DWORD PTR [ebp-0x54]
  414376:	add    edx,0x64f893
  41437c:	sbb    DWORD PTR ds:0x4285ff,0x4a3d
  414386:	or     edx,ebx
  414388:	mov    DWORD PTR [ebp-0x54],edx
  41438b:	or     DWORD PTR ds:0x4285db,edx
  414391:	mov    edx,DWORD PTR [ebp+0x8]
  414394:	mov    DWORD PTR ds:0x428653,0x1a
  41439e:	cmp    DWORD PTR ds:0x428653,0x0
  4143a5:	je     0x4143df
  4143ab:	cmp    DWORD PTR ds:0x428653,0x25
  4143b2:	ja     0x4143df
  4143b8:	jmp    0x4143cd
  4143bd:	push   0x428034
  4143c2:	push   0x0
  4143c4:	push   DWORD PTR [ebp-0xc]
  4143c7:	call   DWORD PTR ds:0x4287ab
  4143cd:	mov    ebx,DWORD PTR ds:0x428653
  4143d3:	dec    ebx
  4143d4:	mov    DWORD PTR ds:0x428653,ebx
  4143da:	jmp    0x41439e
  4143df:	mov    ebx,DWORD PTR [ebp-0x50]
  4143e2:	add    DWORD PTR ds:0x42862f,0x3490
  4143ec:	add    edx,ecx
  4143ee:	xor    edx,ebx
  4143f0:	sbb    DWORD PTR ds:0x4285f3,edi
  4143f6:	mov    DWORD PTR [ebp-0x50],edx
  4143f9:	mov    edx,DWORD PTR [ebp+0x8]
  4143fc:	mov    ebx,DWORD PTR [ebp-0x4c]
  4143ff:	add    edx,edi
  414401:	add    DWORD PTR ds:0x42866b,0x26d2
  41440b:	and    edx,ebx
  41440d:	mov    DWORD PTR [ebp-0x4c],edx
  414410:	and    DWORD PTR ds:0x42862b,0x0
  41441a:	xor    edx,edx
  41441c:	xor    edx,DWORD PTR ds:0x42862b
  414422:	inc    edx
  414423:	mov    DWORD PTR ds:0x42862b,edx
  414429:	cmp    DWORD PTR ds:0x42862b,0x2c
  414430:	jbe    0x414453
  414436:	jmp    0x414446
  41443b:	push   0x42808e
  414440:	call   DWORD PTR ds:0x4287af
  414446:	cmp    DWORD PTR ds:0x42862b,0x1f
  41444d:	jb     0x41441a
  414453:	mov    edx,DWORD PTR [ebp+0x8]
  414456:	mov    ebx,DWORD PTR [ebp-0x48]
  414459:	lea    edx,[ebx+edx*1+0x241fcde]
  414460:	mov    DWORD PTR [ebp-0x48],edx
  414463:	mov    edx,DWORD PTR [ebp+0x8]
  414466:	mov    ebx,0xfa5e1521
  41446b:	sub    ebx,edx
  41446d:	add    ebx,DWORD PTR [ebp-0x44]
  414470:	mov    DWORD PTR [ebp-0x44],ebx
  414473:	mov    edx,DWORD PTR [ebp+0x8]
  414476:	xor    edx,eax
  414478:	add    edx,esi
  41447a:	jne    0x411f5b
  414480:	mov    edx,DWORD PTR [ebp-0xc]
  414483:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41448a:	mov    bl,BYTE PTR [ebp-0x1]
  41448d:	cmp    dl,bl
  41448f:	je     0x41b050
  414495:	mov    ecx,DWORD PTR [ebp-0x5c]
  414498:	mov    edx,DWORD PTR [ebp-0xc]
  41449b:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4144a2:	mov    ebx,DWORD PTR [ebp+0xc]
  4144a5:	xor    ecx,eax
  4144a7:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272ec]
  4144ae:	jne    0x41b184
  4144b4:	mov    ecx,DWORD PTR [ebp-0x5c]
  4144b7:	mov    edx,DWORD PTR [ebp+0xc]
  4144ba:	xor    ecx,eax
  4144bc:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272ec]
  4144c4:	mov    edx,DWORD PTR [ebp-0x18]
  4144c7:	xor    edx,eax
  4144c9:	add    edx,esi
  4144cb:	cmp    ecx,edx
  4144cd:	mov    ecx,DWORD PTR [ebp-0x14]
  4144d0:	mov    DWORD PTR [ebp+0x8],ecx
  4144d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4144d6:	je     0x41d62d
  4144dc:	xor    ecx,eax
  4144de:	add    ecx,esi
  4144e0:	mov    ecx,0x242ebcc
  4144e5:	je     0x41b0d8
  4144eb:	mov    edx,DWORD PTR [ebp+0x8]
  4144ee:	mov    ebx,DWORD PTR [ebp-0x8]
  4144f1:	xor    edx,eax
  4144f3:	xor    ebx,eax
  4144f5:	sub    edx,ebx
  4144f7:	sub    edx,esi
  4144f9:	xor    edx,eax
  4144fb:	mov    DWORD PTR [ebp+0x8],edx
  4144fe:	mov    edx,DWORD PTR [ebp+0x8]
  414501:	mov    ebx,DWORD PTR [ebp-0x58]
  414504:	add    edx,0x5708f1
  41450a:	imul   edx,ebx
  41450d:	jmp    0x4168ae
  414512:	dec    eax
  414513:	pop    DWORD PTR [eax+ebx*8-0x70f72485]
  41451a:	lea    ebx,[eax-0x3a]
  41451d:	push   edi
  41451e:	dec    esp
  41451f:	mov    WORD PTR [ebx-0x14],?
  414522:	cmp    ah,BYTE PTR [esi+0x7d]
  414525:	jp     0x414525
  414527:	pop    edi
  414528:	jp     0x4145a4
  41452a:	cld    
  41452b:	not    DWORD PTR [esi-0x7864b26]
  414531:	jns    0x4144ee
  414533:	adc    BYTE PTR [ecx+ebp*8+0x3c0de9eb],dh
  41453a:	addr16 push cs
  41453c:	xchg   edi,eax
  41453d:	repnz inc eax
  41453f:	jno    0x4144ce
  414541:	xor    al,0x59
  414543:	adc    esp,DWORD PTR [ecx-0x5c]
  414546:	stc    
  414547:	cmp    DWORD PTR [ebx+0x19ac2aa],ebx
  41454d:	add    BYTE PTR [ebx-0x61],ah
  414550:	xor    eax,0xcfd5a3e2
  414555:	mov    DWORD PTR [edx],0x3e90ccc0
  41455b:	cmp    edx,DWORD PTR [esi+esi*4-0x45]
  41455f:	iret   
  414560:	jmp    0xf5abd4d9
  414565:	mov    eax,0x715cd2
  41456a:	inc    ebx
  41456b:	in     al,0x68
  41456d:	arpl   WORD PTR [eax],ax
  41456f:	iret   
  414570:	mov    bl,0xdb
  414572:	add    al,dl
  414574:	sub    eax,0x2a560846
  414579:	xchg   edi,eax
  41457a:	jnp    0x414566
  41457c:	imul   BYTE PTR [ecx+0x18]
  41457f:	and    al,0xbe
  414581:	or     esp,esp
  414583:	into   
  414584:	jg     0x4145ab
  414586:	xor    al,0xb2
  414588:	mov    bl,0x49
  41458a:	out    dx,eax
  41458b:	stos   DWORD PTR es:[edi],eax
  41458c:	mov    ah,0x3f
  41458e:	scas   eax,DWORD PTR es:[edi]
  41458f:	inc    eax
  414590:	loopne 0x41460c
  414592:	or     dh,BYTE PTR [edi+0x591549d9]
  414598:	into   
  414599:	pop    ebx
  41459b:	dec    esi
  41459c:	fstp   QWORD PTR ds:0x77f01972
  4145a2:	or     al,0x95
  4145a4:	mul    BYTE PTR [eax-0x65802b55]
  4145aa:	aaa    
  4145ab:	ret    0x4bcf
  4145ae:	stos   BYTE PTR es:[edi],al
  4145af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145b0:	and    eax,0x542cf664
  4145b5:	dec    esi
  4145b6:	mov    DWORD PTR [edx-0x1def5521],ebx
  4145bc:	into   
  4145bd:	sub    DWORD PTR [eax-0x7d01a345],ebx
  4145c3:	sub    eax,0xc86bd242
  4145c8:	push   esp
  4145c9:	jb     0x414554
  4145cb:	adc    ah,BYTE PTR [edi+0x614b2579]
  4145d1:	add    BYTE PTR [ebx],dh
  4145d3:	push   ecx
  4145d4:	inc    esi
  4145d5:	scas   al,BYTE PTR es:[edi]
  4145d6:	fxch   st(3)
  4145d8:	xor    al,cl
  4145da:	push   ebp
  4145db:	jp     0x41463c
  4145dd:	aam    0x9f
  4145df:	mov    eax,DWORD PTR [edx]
  4145e1:	ins    DWORD PTR es:[edi],dx
  4145e2:	inc    ebp
  4145e3:	mov    dl,0xed
  4145e5:	lods   al,BYTE PTR ds:[esi]
  4145e6:	xchg   esi,eax
  4145e7:	imul   DWORD PTR [edi-0x11c41fa4]
  4145ed:	shl    DWORD PTR [ebx+edx*8],0x89
  4145f1:	aas    
  4145f2:	mov    ecx,0x9514eed8
  4145f7:	in     al,dx
  4145f8:	loopne 0x414587
  4145fa:	imul   ebx,ecx,0x3da08d26
  414600:	test   BYTE PTR ds:0x2d126c45,al
  414606:	mov    eax,0xb5a417c8
  41460b:	jae    0x414627
  41460d:	loop   0x4145bc
  41460f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414610:	inc    ebx
  414611:	xchg   ebx,eax
  414612:	leave  
  414613:	sar    DWORD PTR [ecx],1
  414615:	mov    al,0x2
  414617:	lock xor esp,DWORD PTR [esp+eax*8-0x11f4cbff]
  41461f:	ins    BYTE PTR es:[edi],dx
  414620:	(bad)  
  414621:	fst    QWORD PTR [eax-0x4]
  414624:	and    BYTE PTR [ecx],bh
  414626:	test   BYTE PTR ds:0xed212aec,ah
  41462c:	push   edi
  41462d:	in     eax,0xd4
  41462f:	adc    eax,0xbf4198eb
  414634:	aas    
  414635:	dec    esi
  414636:	push   ebx
  414637:	jne    0x414671
  414639:	daa    
  41463a:	(bad)  
  41463c:	adc    DWORD PTR [esi],edi
  41463e:	jmp    0x4145c3
  414640:	jp     0x4145ed
  414642:	cmp    BYTE PTR [edx-0x3cf019ee],cl
  414648:	jp     0x4146be
  41464a:	mov    BYTE PTR [ecx-0x2c18570a],dl
  414650:	inc    ecx
  414651:	adc    edi,DWORD PTR [edi+esi*1+0x3adb7d52]
  414658:	and    DWORD PTR [esi+0x2147da9d],esi
  41465e:	popa   
  41465f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414660:	rol    BYTE PTR [ecx],cl
  414662:	dec    esi
  414663:	out    0xe3,al
  414665:	xchg   ebx,eax
  414666:	cs push ss
  414668:	xchg   edi,eax
  414669:	inc    esp
  41466a:	stc    
  41466b:	idiv   DWORD PTR ds:0x7d7b078f
  414671:	mov    esp,0x4c169bf
  414676:	out    dx,al
  414677:	pop    DWORD PTR [esi+0x6f8f3acf]
  41467d:	aaa    
  41467e:	adc    DWORD PTR [esi],edi
  414680:	mov    esi,DWORD PTR [edi+0x1f42f267]
  414686:	push   ebp
  414687:	xchg   esp,eax
  414688:	test   al,0xb6
  41468a:	xor    esi,edi
  41468c:	mov    ah,al
  41468e:	sbb    BYTE PTR [ebx+edi*1],0x61
  414692:	push   0xfffffff5
  414694:	bound  eax,QWORD PTR [esi-0x6070d474]
  41469a:	lds    ecx,FWORD PTR [ebx-0x2086e35e]
  4146a0:	jns    0x414697
  4146a2:	or     eax,DWORD PTR [ebx]
  4146a4:	test   eax,0xe68fca6b
  4146a9:	inc    esi
  4146aa:	ss dec ebx
  4146ac:	repz cbw 
  4146af:	push   eax
  4146b0:	xchg   esi,eax
  4146b1:	shr    DWORD PTR [edx-0x5d941902],0x84
  4146b8:	ja     0x414670
  4146ba:	add    ah,cl
  4146bc:	sub    eax,0x802cca8a
  4146c1:	imul   ecx,esi,0x4c20f23a
  4146c7:	sub    eax,0x130c0d47
  4146cc:	arpl   WORD PTR [ecx-0x4f],sp
  4146cf:	mov    ebx,0x327435c
  4146d4:	or     bl,BYTE PTR [edi]
  4146d6:	aam    0x81
  4146d8:	inc    esp
  4146d9:	jo     0x4146e9
  4146db:	pop    es
  4146dc:	jae    0x4146c8
  4146de:	jecxz  0x4146f7
  4146e0:	mov    bl,0x54
  4146e2:	mov    ah,0x2f
  4146e4:	lods   eax,DWORD PTR ds:[esi]
  4146e5:	dec    ebx
  4146e6:	xchg   ebp,eax
  4146e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146e8:	scas   al,BYTE PTR es:[edi]
  4146e9:	rol    esp,cl
  4146eb:	shr    BYTE PTR [edi],cl
  4146ed:	and    al,0x45
  4146ef:	ret    
  4146f0:	adc    edi,DWORD PTR [ebx+0x29]
  4146f3:	or     ebp,esi
  4146f5:	rcr    DWORD PTR [ebx+0x37],cl
  4146f8:	gs test al,0x8
  4146fb:	dec    ebx
  4146fc:	popa   
  4146fd:	sti    
  4146fe:	fstp   DWORD PTR [ebp+0x7f2e3658]
  414704:	xor    edx,ecx
  414706:	mov    BYTE PTR [edi-0x46b19911],dh
  41470c:	push   es
  41470d:	mov    ebx,0x600c101d
  414712:	mov    esi,0x28b5c6d6
  414717:	addr16 xor esp,0xffffff95
  41471b:	inc    ecx
  41471c:	dec    edi
  41471d:	dec    ebx
  41471e:	xor    ebp,DWORD PTR [edi]
  414720:	push   esi
  414721:	pop    esp
  414722:	fcomp  DWORD PTR [ebx-0x28]
  414725:	xor    BYTE PTR [edx+0x7a],cl
  414728:	lods   al,BYTE PTR ds:[esi]
  414729:	xlat   BYTE PTR ds:[ebx]
  41472a:	lods   eax,DWORD PTR ds:[esi]
  41472b:	adc    eax,DWORD PTR [eax]
  41472d:	inc    ebx
  41472e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41472f:	pop    edi
  414730:	jle    0x4146bf
  414732:	call   0xaea5:0x50c1f376
  414739:	add    eax,0xed7e2a24
  41473e:	shl    DWORD PTR [edx],cl
  414740:	test   DWORD PTR ds:0x9ecf9921,ebp
  414746:	shl    esp,0x19
  414749:	add    BYTE PTR gs:[ecx+eiz*8-0x4b1e3836],bh
  414751:	icebp  
  414752:	push   0x62
  414754:	xlat   BYTE PTR ds:[ebx]
  414755:	push   edi
  414756:	das    
  414757:	retf   
  414758:	xchg   esp,eax
  414759:	stos   BYTE PTR es:[edi],al
  41475a:	mov    ecx,db1
  41475d:	inc    esp
  41475e:	add    eax,0x978e1b1d
  414763:	cmp    DWORD PTR [eax+0x4d],ebp
  414766:	imul   esi,ecx,0x57
  414769:	xchg   esp,eax
  41476a:	iret   
  41476b:	arpl   WORD PTR [ecx-0x745b4de4],dx
  414771:	push   ebx
  414772:	fwait
  414773:	mov    ebp,DWORD PTR [edx+0x2f1059d4]
  414779:	adc    cl,BYTE PTR [edi+0x493ba690]
  41477f:	jmp    0x3ba6:0x2aafac28
  414786:	sbb    al,0xae
  414788:	xchg   esi,eax
  414789:	jl     0x4147f6
  41478b:	dec    ecx
  41478c:	xor    bl,BYTE PTR [edx+0x54]
  41478f:	or     bl,BYTE PTR [ebx-0x7d]
  414792:	ret    0x98ec
  414795:	sbb    ebx,DWORD PTR [ecx+edi*2+0x24]
  414799:	mov    WORD PTR [esi+ecx*8-0x2cb15fe2],?
  4147a0:	mov    edi,ecx
  4147a2:	data16 mov WORD PTR [ecx+0x73],cs
  4147a6:	iret   
  4147a7:	fisub  WORD PTR [ecx+0x4a]
  4147aa:	xor    DWORD PTR [eax+ecx*2-0xb9e2eb3],esi
  4147b1:	sbb    eax,0x519d99b8
  4147b6:	push   ebp
  4147b7:	mov    ebp,0xb4b6b661
  4147bc:	xor    BYTE PTR [ecx-0x2c],dl
  4147bf:	lock sbb eax,DWORD PTR [edx]
  4147c2:	pop    ds
  4147c3:	sub    ch,BYTE PTR ds:0x193a2c43
  4147c9:	fnsave [eax]
  4147cb:	push   ebp
  4147cc:	outs   dx,BYTE PTR ds:[esi]
  4147cd:	jbe    0x414774
  4147cf:	sbb    al,0x8a
  4147d1:	inc    ecx
  4147d2:	shr    DWORD PTR [ebx+0x79],cl
  4147d5:	shrd   DWORD PTR [edx-0x50],eax,cl
  4147d9:	rcl    ebp,cl
  4147db:	inc    edi
  4147dc:	fwait
  4147dd:	stc    
  4147de:	dec    eax
  4147df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147e0:	mov    cl,0x3f
  4147e2:	push   es
  4147e3:	ret    0x8295
  4147e6:	(bad)  
  4147e7:	and    BYTE PTR [ebp+ebp*8-0x5301a501],cl
  4147ee:	hlt    
  4147ef:	pop    ds
  4147f0:	outs   dx,DWORD PTR ds:[esi]
  4147f1:	xor    DWORD PTR [esi+0x2b532437],esp
  4147f7:	ins    BYTE PTR es:[edi],dx
  4147f8:	fimul  DWORD PTR [ecx+esi*1+0x2a961339]
  4147ff:	xchg   edx,eax
  414800:	mov    BYTE PTR [eax-0x548f1ed7],bl
  414806:	inc    esp
  414807:	adc    al,0x5f
  414809:	mov    edx,0x4e7f539
  41480e:	adc    DWORD PTR [ecx],ebx
  414810:	adc    eax,0x383c760a
  414815:	das    
  414816:	(bad)  
  414817:	aaa    
  414818:	fmul   QWORD PTR [esi]
  41481a:	jmp    0x414813
  41481c:	cmp    eax,0x6132c8ae
  414821:	iret   
  414822:	push   esp
  414823:	push   esp
  414824:	sbb    bl,ch
  414826:	shl    BYTE PTR [esi*8-0x32835ba0],0x7d
  41482e:	cmp    DWORD PTR [eax],0x763cffd4
  414834:	aad    0x24
  414836:	fiadd  DWORD PTR [esi-0xf]
  414839:	mov    eax,0xda1a4498
  41483e:	jbe    0x4148bd
  414840:	push   ebx
  414841:	inc    ecx
  414842:	dec    eax
  414843:	pop    edx
  414844:	jmp    0x3f3e:0x10ea72c6
  41484b:	dec    ebx
  41484c:	stos   DWORD PTR es:[edi],eax
  41484d:	aam    0xa2
  41484f:	dec    edi
  414850:	xchg   eax,esp
  414852:	add    DWORD PTR [esi],esi
  414854:	ja     0x414867
  414856:	pop    esi
  414857:	pop    ebp
  414858:	sub    dl,dl
  41485a:	pusha  
  41485b:	ret    
  41485c:	adc    DWORD PTR [ecx-0x32],eax
  41485f:	cmp    BYTE PTR [edi],bh
  414861:	inc    eax
  414862:	cmp    cl,BYTE PTR [edi-0x2b0f3c96]
  414868:	imul   ebp,ecx,0x79
  41486b:	popa   
  41486c:	xchg   edi,eax
  41486d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41486e:	and    BYTE PTR [esi+0x25],dh
  414871:	sbb    al,0xe
  414873:	outs   dx,DWORD PTR ds:[esi]
  414874:	fadd   QWORD PTR [edi]
  414876:	in     eax,dx
  414877:	inc    eax
  414878:	adc    al,0xd4
  41487a:	sbb    DWORD PTR [ebx+0x7a9102d4],ecx
  414880:	xor    al,0xa7
  414882:	(bad)  
  414883:	in     eax,0x53
  414885:	es dec eax
  414887:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414888:	jp     0x41482e
  41488a:	dec    edx
  41488b:	sbb    eax,0xfcc65697
  414890:	mov    esp,0x34478e
  414895:	dec    ebx
  414896:	imul   ecx,DWORD PTR [edx+esi*2-0x5d],0x99038b18
  41489e:	call   0x3297a997
  4148a3:	push   ds
  4148a4:	inc    ebx
  4148a5:	scas   al,BYTE PTR es:[edi]
  4148a6:	inc    ebp
  4148a7:	push   ss
  4148a8:	leave  
  4148a9:	or     DWORD PTR [ecx+0x2fe1e3b1],esp
  4148af:	xchg   ebx,eax
  4148b0:	aad    0xcb
  4148b2:	retf   
  4148b3:	pop    eax
  4148b4:	gs inc eax
  4148b6:	mov    ds:0x64fcda56,eax
  4148bb:	imul   DWORD PTR [ecx]
  4148bd:	bound  eax,QWORD PTR ds:0xc8ccb9a0
  4148c3:	(bad)  
  4148c4:	adc    al,0xe9
  4148c6:	mov    edi,DWORD PTR [ecx]
  4148c8:	sbb    cl,bh
  4148ca:	hlt    
  4148cb:	add    DWORD PTR [ebx+ecx*1-0x22],ebp
  4148cf:	addr16 sub al,0x92
  4148d2:	inc    edi
  4148d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148d4:	stos   DWORD PTR es:[edi],eax
  4148d5:	jo     0x4148bc
  4148d7:	add    BYTE PTR [ebx+0x61295d92],ch
  4148dd:	fs cmp dl,ah
  4148e0:	cmp    bh,al
  4148e2:	dec    ebx
  4148e3:	fstp   TBYTE PTR [esi]
  4148e5:	bound  edi,QWORD PTR [eax-0x1e4a1fd2]
  4148eb:	fst    st(0)
  4148ed:	icebp  
  4148ee:	out    dx,al
  4148ef:	outs   dx,DWORD PTR ds:[esi]
  4148f0:	sti    
  4148f1:	xor    eax,0xf7fbcc7b
  4148f6:	cmp    BYTE PTR [ecx+edi*2+0x62d3ac9f],0x5c
  4148fe:	xor    cl,BYTE PTR [eax+eax*4+0x3b]
  414902:	sbb    BYTE PTR [edx-0x366f71f8],dl
  414908:	push   ss
  414909:	mov    ds:0x8b2db9b2,eax
  41490e:	retf   
  41490f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414910:	dec    edx
  414911:	add    eax,0x7fb5ae7
  414916:	jge    0x414900
  414918:	pop    ds
  414919:	popf   
  41491a:	push   ss
  41491b:	sub    cl,dh
  41491d:	leave  
  41491e:	sahf   
  41491f:	int3   
  414920:	sub    eax,DWORD PTR [edx+0x6b]
  414923:	jae    0x414955
  414925:	mov    ebx,0x7df9ff70
  41492a:	pop    edx
  41492b:	fmul   QWORD PTR [edi+0x30a79058]
  414931:	and    ebx,DWORD PTR [eax+0x58a422c5]
  414937:	fcomp  DWORD PTR [edx+0xf]
  41493a:	out    dx,eax
  41493b:	push   ss
  41493c:	shl    BYTE PTR [edx-0x7b],1
  41493f:	sub    al,0x9e
  414941:	sbb    al,0x30
  414943:	add    edx,DWORD PTR [ecx+0xc]
  414946:	pop    ecx
  414947:	lock in al,dx
  414949:	aad    0x64
  41494b:	leave  
  41494c:	and    eax,0x2a00c811
  414951:	arpl   WORD PTR [edi+0x78],bp
  414954:	bound  edi,QWORD PTR [esi+0xb135259]
  41495a:	(bad)
  41495e:	sti    
  41495f:	mov    DWORD PTR [eax+0x55],edx
  414962:	jmp    0x414976
  414964:	shr    DWORD PTR [ecx+0x61f0798a],0x12
  41496b:	cwde   
  41496c:	fbstp  TBYTE PTR [edi-0x49]
  41496f:	ror    DWORD PTR [ebx],1
  414971:	ins    DWORD PTR es:[edi],dx
  414972:	inc    edx
  414973:	pop    ebp
  414974:	mov    edi,0xc46de3a4
  414979:	enter  0x6983,0x43
  41497d:	cs add al,0x6a
  414980:	mov    esi,0xdddab6f1
  414985:	arpl   WORD PTR [esp+edi*4+0x58479e4d],ax
  41498c:	frstor [ebx+0x5c]
  41498f:	sahf   
  414990:	and    DWORD PTR [ecx-0x65],esi
  414993:	push   0x35
  414995:	dec    ecx
  414996:	mov    eax,ds:0x82dc8b3f
  41499b:	retf   
  41499c:	dec    edx
  41499d:	imul   ebp,eax,0x75
  4149a0:	jo     0x41494e
  4149a2:	and    bh,0xfc
  4149a5:	popf   
  4149a6:	add    eax,0x45f5422
  4149ab:	jbe    0x414951
  4149ad:	push   ss
  4149ae:	adc    ecx,esp
  4149b0:	pop    eax
  4149b1:	xchg   esp,eax
  4149b2:	int    0x38
  4149b4:	pop    es
  4149b5:	arpl   WORD PTR [ebp-0x5259d049],sp
  4149bb:	fdiv   QWORD PTR [edx]
  4149bd:	test   DWORD PTR [esi-0x1b6f0093],esi
  4149c3:	es mov dh,0xea
  4149c6:	icebp  
  4149c7:	xchg   esi,eax
  4149c8:	aam    0xd7
  4149ca:	les    esi,FWORD PTR [esi-0x2a]
  4149cd:	xchg   BYTE PTR [edi+eiz*4+0x14],dl
  4149d1:	sbb    bl,BYTE PTR [bp+si]
  4149d4:	sub    eax,0x582eabe4
  4149d9:	out    0xb8,al
  4149db:	sar    edi,cl
  4149dd:	int3   
  4149de:	stos   DWORD PTR es:[edi],eax
  4149df:	int3   
  4149e0:	xchg   BYTE PTR [ebp-0x4a],dh
  4149e3:	and    DWORD PTR [ecx+edi*2-0x56ea77e8],ebp
  4149ea:	inc    ebp
  4149eb:	sub    BYTE PTR [ebp+0x10],0x5e
  4149ef:	adc    BYTE PTR [ecx-0x52],0x76
  4149f3:	js     0x4149d8
  4149f5:	jmp    0x37b45a38
  4149fa:	fsubr  st,st(3)
  4149fc:	repz fwait
  4149fe:	pop    esp
  4149ff:	test   BYTE PTR [eax],dh
  414a01:	jmp    0xec7e8843
  414a06:	cmp    al,0x72
  414a08:	sbb    eax,0x933a99bc
  414a0d:	test   BYTE PTR [eax+eiz*8],bl
  414a10:	(bad)  
  414a11:	and    bh,BYTE PTR [edx]
  414a13:	jp     0x414a48
  414a15:	mov    ds:0x20f61ed2,al
  414a1a:	shl    BYTE PTR [ecx],cl
  414a1c:	add    esi,esi
  414a1e:	in     eax,dx
  414a1f:	push   ebx
  414a20:	iret   
  414a21:	cmc    
  414a22:	and    ecx,esi
  414a24:	int    0x12
  414a26:	(bad)  
  414a27:	push   eax
  414a28:	lock pop ebx
  414a2a:	sbb    eax,0x4036200
  414a2f:	push   edx
  414a30:	loop   0x414a16
  414a32:	mov    ah,0xa6
  414a34:	aad    0xa1
  414a36:	xchg   ebp,eax
  414a37:	jae    0x414a3e
  414a39:	adc    BYTE PTR [ecx],ch
  414a3b:	mov    es:0xc01bbe91,eax
  414a41:	hlt    
  414a42:	sahf   
  414a43:	lods   al,BYTE PTR ds:[esi]
  414a44:	loopne 0x414a80
  414a46:	mov    edx,0x72f2f8fb
  414a4b:	jbe    0x414ac2
  414a4d:	stc    
  414a4e:	mov    edx,ecx
  414a50:	call   0x8ad:0x3a6d82b2
  414a57:	dec    ebp
  414a58:	test   DWORD PTR [eax+0x22],esi
  414a5b:	dec    ebx
  414a5c:	jge    0x414a09
  414a5e:	pusha  
  414a5f:	pop    ds
  414a60:	in     al,dx
  414a61:	push   0xffffffec
  414a63:	adc    edi,esi
  414a65:	fcomp  QWORD PTR ds:0x1cb4ad55
  414a6b:	adc    al,0x99
  414a6d:	adc    bh,BYTE PTR [ebp-0x5569d6aa]
  414a73:	jo     0x414aba
  414a75:	mov    ch,0xce
  414a77:	aad    0x16
  414a79:	(bad)  
  414a7a:	loopne 0x414a5b
  414a7c:	sub    BYTE PTR [ebx+0x2],bh
  414a7f:	push   ecx
  414a80:	fxch   st(0)
  414a82:	sbb    eax,0xf12cb84f
  414a87:	mov    dh,dh
  414a89:	into   
  414a8a:	popf   
  414a8b:	mov    ss,edi
  414a8d:	ret    0xc29a
  414a90:	clc    
  414a91:	mov    dh,0x55
  414a93:	mov    al,ds:0x1d90e304
  414a98:	cmc    
  414a99:	lahf   
  414a9a:	xor    edi,eax
  414a9c:	mov    WORD PTR [ebx-0x35],gs
  414a9f:	mov    ?,WORD PTR [edi]
  414aa1:	or     edi,DWORD PTR [edx+0x63f8e294]
  414aa7:	mov    dh,0x8
  414aa9:	ror    ah,0x3a
  414aac:	sbb    esp,edx
  414aae:	call   0xc9eabb7b
  414ab3:	addr16 out 0x13,al
  414ab6:	shr    DWORD PTR [edi-0x60e1258b],cl
  414abc:	arpl   WORD PTR [ebx+esi*1+0x449ecaee],cx
  414ac3:	push   ss
  414ac4:	sub    eax,0x7b6b6e37
  414ac9:	dec    esi
  414aca:	in     eax,dx
  414acb:	in     al,0x4f
  414acd:	sahf   
  414ace:	pop    edi
  414acf:	sub    DWORD PTR [ebx],ecx
  414ad1:	lea    edx,[edx]
  414ad3:	test   eax,0xd6e27bba
  414ad8:	clc    
  414ad9:	mov    ds:0x1a40c1fa,al
  414ade:	mov    eax,0xdc7d5607
  414ae3:	sar    DWORD PTR [edi-0x5b],cl
  414ae6:	mov    esi,0xba940f99
  414aeb:	inc    ecx
  414aec:	pop    edi
  414aed:	arpl   WORD PTR [edi-0x5c430cfa],dx
  414af3:	ins    BYTE PTR es:[edi],dx
  414af4:	inc    edx
  414af5:	xchg   edi,eax
  414af6:	mov    ah,0x5
  414af8:	icebp  
  414af9:	or     BYTE PTR [ebp+0x4f],cl
  414afc:	scas   al,BYTE PTR es:[edi]
  414afd:	xor    bh,BYTE PTR [eax+0x17b55915]
  414b03:	(bad)  
  414b04:	mov    edi,0x100a5f89
  414b09:	jbe    0x414abe
  414b0b:	cwde   
  414b0c:	mov    BYTE PTR [eax+eiz*2-0x4948d5a6],0x74
  414b14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b15:	jae    0x414b26
  414b17:	aam    0x1
  414b19:	rol    DWORD PTR [edx+0x14],cl
  414b1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b1d:	idiv   DWORD PTR [ebx+0x1a]
  414b20:	pusha  
  414b21:	inc    esi
  414b22:	aaa    
  414b23:	adc    al,0xdc
  414b25:	sub    eax,0xe2f3fd26
  414b2a:	mov    ds:0x58f11940,al
  414b2f:	rcl    BYTE PTR [edi],cl
  414b31:	sahf   
  414b32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b33:	test   al,0xd6
  414b35:	jge    0x414ac9
  414b37:	ficom  DWORD PTR [ecx+0x28]
  414b3a:	sub    DWORD PTR [esi-0x45],ebp
  414b3d:	repz dec DWORD PTR [eax+0x75b678bc]
  414b44:	mov    ah,0x9a
  414b46:	and    DWORD PTR [esi],eax
  414b48:	mov    BYTE PTR [edx],cl
  414b4a:	loop   0x414b1d
  414b4c:	xor    edi,edi
  414b4e:	pop    edx
  414b4f:	mov    ebx,0x2908d1d4
  414b54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b55:	leave  
  414b56:	dec    dh
  414b58:	dec    ebx
  414b59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b5a:	das    
  414b5b:	dec    esp
  414b5c:	pushaw 
  414b5e:	mov    al,0xb9
  414b60:	mov    BYTE PTR [ebp-0x14],bl
  414b63:	iret   
  414b64:	mov    edx,0x714d2e2c
  414b69:	mov    al,ds:0x2be8b073
  414b6e:	imul   esi,DWORD PTR [ebx+0x5f],0x5a650d55
  414b75:	fsin   
  414b77:	imul   edi,DWORD PTR [edx+0x539dc891],0xffffffbb
  414b7e:	sub    BYTE PTR [ebx+0x36ed4e9a],cl
  414b84:	or     ecx,DWORD PTR [eax-0xf4747eb]
  414b8a:	push   ebp
  414b8b:	retf   0x257d
  414b8e:	test   al,0x6f
  414b90:	or     esi,DWORD PTR [edi+0x74ae7936]
  414b96:	sahf   
  414b97:	xchg   ebx,eax
  414b98:	xchg   DWORD PTR [edi+edi*8+0x52d70091],ebx
  414b9f:	inc    ecx
  414ba0:	out    0xcb,al
  414ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ba3:	pop    ds
  414ba4:	daa    
  414ba5:	popa   
  414ba6:	or     eax,0x4fc4ff23
  414bab:	test   al,0x37
  414bad:	ret    0x631b
  414bb0:	test   eax,0x899a16be
  414bb5:	adc    ch,BYTE PTR [edi+0x35]
  414bb8:	and    ebx,DWORD PTR [ecx-0x50fc7d91]
  414bbe:	mov    ch,0x37
  414bc0:	loop   0x414b72
  414bc2:	jns    0x414b4e
  414bc4:	pop    edi
  414bc5:	call   0xb21:0x505d5ff0
  414bcc:	mov    dl,0x20
  414bce:	mov    al,0xd7
  414bd0:	sub    ecx,DWORD PTR [eax]
  414bd2:	test   DWORD PTR [edi-0x428f297c],ecx
  414bd8:	pop    ebx
  414bd9:	out    dx,al
  414bda:	mov    esi,0xcd072684
  414bdf:	leave  
  414be0:	adc    al,0x90
  414be2:	bound  eax,QWORD PTR [esi]
  414be4:	sub    BYTE PTR [ebx],cl
  414be6:	ja     0x414b7d
  414be8:	mov    bl,BYTE PTR [esi-0x6577255b]
  414bee:	xrelease mov DWORD PTR [eax],ebp
  414bf1:	loopne 0x414be8
  414bf3:	cmp    DWORD PTR [edx],esi
  414bf5:	jb     0x414c26
  414bf7:	dec    BYTE PTR [ebx+0x402fb0c1]
  414bfd:	out    0xa4,eax
  414bff:	and    al,0xf3
  414c01:	and    DWORD PTR [ecx+0x490a0ad0],eax
  414c07:	lahf   
  414c08:	pop    es
  414c09:	cmc    
  414c0a:	inc    esp
  414c0b:	fwait
  414c0c:	mov    DWORD PTR ds:0x30d0e858,edx
  414c12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c13:	jl     0x414c83
  414c15:	sub    DWORD PTR [edx*8+0x164dcf3b],ebp
  414c1c:	xor    eax,0x3151da5
  414c21:	(bad)  
  414c22:	daa    
  414c23:	xchg   esi,eax
  414c24:	popf   
  414c25:	in     eax,dx
  414c26:	sbb    al,0x4e
  414c28:	push   es
  414c29:	xchg   BYTE PTR [eax-0x30593974],al
  414c2f:	cwde   
  414c30:	aad    0xf
  414c32:	mov    ds:0xc2cf500d,al
  414c37:	dec    esp
  414c38:	out    dx,eax
  414c39:	ins    DWORD PTR es:[edi],dx
  414c3a:	pop    edx
  414c3b:	fs adc eax,0xd2f6c14c
  414c41:	mov    dl,0xb9
  414c43:	test   DWORD PTR [ebx+0x3cbd8582],ebp
  414c49:	pop    esp
  414c4a:	je     0x414c4c
  414c4c:	retf   0x56c
  414c4f:	out    0x97,eax
  414c51:	(bad)  
  414c52:	cld    
  414c53:	add    DWORD PTR [edi+0x7f],ebp
  414c56:	adc    BYTE PTR [eax-0x4],0x9c
  414c5a:	inc    ebp
  414c5b:	or     al,0xa3
  414c5d:	fcom   DWORD PTR [ebx-0x2d]
  414c60:	mov    edx,0x28ae1c7c
  414c65:	inc    esp
  414c66:	push   esi
  414c67:	mov    bh,0xa9
  414c69:	jnp    0x414cd5
  414c6b:	mov    ds:0xc32b9215,al
  414c70:	jmp    0x1868:0x1eba697e
  414c77:	adc    BYTE PTR [esi],bh
  414c79:	adc    BYTE PTR [ebx+ecx*1-0x7],bh
  414c7d:	sub    ecx,DWORD PTR [edi-0x6e73810]
  414c83:	mov    ds:0xd2710da6,al
  414c88:	dec    esi
  414c89:	xchg   DWORD PTR [ecx+0x4fcb27f0],ecx
  414c8f:	mov    ds:0x4f1b9b47,al
  414c94:	popa   
  414c95:	cmc    
  414c96:	cs cmp dl,cl
  414c99:	and    eax,0x52d86767
  414c9e:	pop    eax
  414c9f:	push   esi
  414ca0:	js     0x414cb1
  414ca2:	pushf  
  414ca3:	adc    esi,ecx
  414ca5:	add    ecx,DWORD PTR [ecx-0x70]
  414ca8:	add    dh,BYTE PTR [edi+0x2f]
  414cab:	mov    al,0xa0
  414cad:	lods   eax,DWORD PTR ds:[esi]
  414cae:	cdq    
  414caf:	xchg   ebx,eax
  414cb0:	gs pop es
  414cb2:	retf   
  414cb3:	mov    ebp,ebx
  414cb5:	(bad)  
  414cb6:	inc    ebp
  414cb7:	jecxz  0x414c60
  414cb9:	or     DWORD PTR [edx-0x5b],0xffffff84
  414cbd:	jle    0x414caf
  414cbf:	mov    eax,ds:0xba7831fd
  414cc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cc5:	in     al,0x5c
  414cc7:	xlat   BYTE PTR ds:[ebx]
  414cc8:	jmp    0x414d35
  414cca:	lds    edi,FWORD PTR [ebx]
  414ccc:	sbb    bl,BYTE PTR [ebx]
  414cce:	in     eax,0x3
  414cd0:	inc    edx
  414cd1:	lahf   
  414cd2:	jmp    0x6ba78cd4
  414cd7:	(bad)  
  414cd8:	mov    al,0xc8
  414cda:	jmp    0x414ce0
  414cdc:	cmp    al,0xbd
  414cde:	inc    ecx
  414cdf:	xor    ebp,esp
  414ce1:	mov    dh,0xae
  414ce3:	inc    edx
  414ce4:	inc    ebx
  414ce5:	jne    0x414ccd
  414ce7:	pop    ebp
  414ce8:	test   eax,0xb277362
  414ced:	bound  ebx,QWORD PTR [eax-0x50ac9817]
  414cf3:	sbb    edx,esi
  414cf5:	lods   eax,DWORD PTR ds:[esi]
  414cf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cf7:	adc    BYTE PTR [esi+0x25181cc8],bl
  414cfd:	sbb    eax,0x646131e5
  414d02:	jne    0x414d74
  414d04:	call   0x5b2e31ac
  414d09:	push   0xffffffb2
  414d0b:	(bad)  
  414d0c:	pop    esi
  414d0d:	fwait
  414d0e:	sbb    BYTE PTR [ecx+0x63389f0d],bl
  414d14:	(bad)  
  414d15:	sbb    edx,esp
  414d17:	mov    esi,0x8db944a8
  414d1c:	loopne 0x414d4f
  414d1e:	jle    0x414d3c
  414d20:	push   ebp
  414d21:	(bad)  
  414d22:	push   esp
  414d23:	call   0xfb26:0xdc1e5921
  414d2a:	(bad)  
  414d2b:	mov    edx,0x4753ff67
  414d30:	inc    ecx
  414d31:	jmp    0x983b:0xf18c1763
  414d38:	(bad)  [ebx-0x2e]
  414d3b:	dec    edi
  414d3c:	scas   eax,DWORD PTR es:[edi]
  414d3d:	scas   eax,DWORD PTR es:[edi]
  414d3e:	ds out dx,eax
  414d40:	jmp    0xb116:0xe577495b
  414d47:	ins    DWORD PTR es:[edi],dx
  414d48:	xlat   BYTE PTR ds:[ebx]
  414d49:	not    al
  414d4b:	xor    eax,0x74b7e7fb
  414d50:	mov    esi,0x6c32ddb5
  414d55:	push   es
  414d56:	push   ds
  414d57:	fisubr DWORD PTR [edx]
  414d59:	push   ecx
  414d5a:	retf   0xe155
  414d5d:	mov    ebp,0xe018abf1
  414d62:	cwde   
  414d63:	lea    eax,[esi+edx*2+0x16f31454]
  414d6a:	mov    ebp,0xc135cfb8
  414d6f:	icebp  
  414d70:	pop    ss
  414d71:	dec    ecx
  414d72:	sub    BYTE PTR [esi+0x3455023e],bh
  414d78:	xor    DWORD PTR [ebp+0x69],ebp
  414d7b:	mov    cl,0x74
  414d7d:	outs   dx,DWORD PTR ds:[esi]
  414d7e:	lea    esp,[eax+eiz*4]
  414d81:	in     al,0x9
  414d83:	das    
  414d84:	jbe    0x414dd6
  414d86:	mov    al,BYTE PTR [ebp-0x56d349b0]
  414d8c:	lods   al,BYTE PTR ds:[esi]
  414d8d:	mov    ds:0x685a1ab9,eax
  414d92:	xor    ebx,DWORD PTR [ebx+0x353ab2e0]
  414d98:	xor    ecx,DWORD PTR [edx+0x3]
  414d9b:	arpl   WORD PTR [ebp-0x31f5c8c2],si
  414da1:	mov    esp,0x425d3633
  414da6:	xchg   edx,eax
  414da7:	arpl   WORD PTR [ebx+0x77],sp
  414daa:	hlt    
  414dab:	call   0xc366:0x23de84a0
  414db2:	adc    DWORD PTR [esi+0x4a],ebp
  414db5:	mov    edi,0x3a2353f1
  414dba:	cmp    al,0xcf
  414dbc:	jmp    0x414e0a
  414dbe:	xchg   DWORD PTR [ecx+0x6a],esp
  414dc1:	xlat   BYTE PTR ds:[ebx]
  414dc2:	xor    dl,bh
  414dc4:	xchg   ebx,eax
  414dc5:	hlt    
  414dc6:	xchg   esp,eax
  414dc7:	adc    al,BYTE PTR [edi]
  414dc9:	mov    al,BYTE PTR [di]
  414dcc:	dec    ecx
  414dcd:	xchg   DWORD PTR [esi+eax*8],ebx
  414dd0:	out    0xe1,al
  414dd2:	loop   0x414df5
  414dd4:	pop    ebx
  414dd5:	jno    0x414dca
  414dd7:	add    ebx,0x788390e0
  414ddd:	xchg   BYTE PTR [ecx],dl
  414ddf:	inc    esi
  414de0:	stos   BYTE PTR es:[edi],al
  414de1:	sub    al,0x25
  414de3:	mov    ch,0x47
  414de5:	inc    ebp
  414de6:	mov    ds:0x439f79de,al
  414deb:	fs adc ebp,0xe663b45f
  414df2:	inc    eax
  414df3:	mov    esp,0x4d09e4e9
  414df8:	popf   
  414df9:	xchg   edi,eax
  414dfa:	fwait
  414dfb:	retf   0x544f
  414dfe:	cli    
  414dff:	stos   BYTE PTR es:[edi],al
  414e00:	sub    al,0xcf
  414e02:	or     eax,0x97048bd
  414e07:	and    ch,ah
  414e09:	inc    edx
  414e0a:	xlat   BYTE PTR ds:[ebx]
  414e0b:	mov    ecx,0xe77bae11
  414e10:	test   eax,0x5eb162d2
  414e15:	test   BYTE PTR [esi+0x3167019b],0x85
  414e1c:	retf   0xd81f
  414e1f:	sub    esp,DWORD PTR [eax-0x39]
  414e22:	sub    eax,0xfb63900a
  414e27:	jge    0x414e7b
  414e29:	fsub   st,st(7)
  414e2b:	dec    eax
  414e2c:	into   
  414e2d:	out    0xd9,eax
  414e2f:	push   esi
  414e30:	sbb    eax,ecx
  414e32:	cli    
  414e33:	fwait
  414e34:	mov    bh,0x36
  414e36:	fidivr WORD PTR [ebx+0x159fc0f]
  414e3c:	lahf   
  414e3d:	stos   BYTE PTR es:[edi],al
  414e3e:	out    0x1,eax
  414e40:	in     al,dx
  414e41:	mov    al,0x2f
  414e43:	clc    
  414e44:	loop   0x414e00
  414e46:	and    cl,BYTE PTR [edi+0x67e6c650]
  414e4c:	icebp  
  414e4d:	pop    edi
  414e4e:	sub    ebx,DWORD PTR [eax]
  414e50:	jb     0x414e52
  414e52:	daa    
  414e53:	push   ebx
  414e54:	pop    esi
  414e55:	xchg   DWORD PTR [ebp-0x1d],esp
  414e58:	cmp    BYTE PTR [esi-0x1ddc7cd8],0xbf
  414e5f:	jnp    0x414de4
  414e61:	cmp    edx,ebp
  414e63:	fsubr  st(2),st
  414e65:	adc    ecx,DWORD PTR [edx+0x4e]
  414e68:	xchg   esp,eax
  414e69:	das    
  414e6a:	and    al,0x50
  414e6c:	fs ret 
  414e6e:	mov    bl,0x7b
  414e70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e71:	lods   al,BYTE PTR ds:[esi]
  414e72:	stc    
  414e73:	lock pop edx
  414e75:	push   edx
  414e76:	hlt    
  414e77:	test   DWORD PTR [edi+0x12154dd1],0x8987cbe
  414e81:	test   al,0xee
  414e83:	ror    BYTE PTR [ebx-0x50],cl
  414e86:	lock and al,BYTE PTR [esi+ebp*1]
  414e8a:	xor    edx,DWORD PTR [esi]
  414e8c:	or     al,0xea
  414e8e:	dec    esp
  414e8f:	xor    eax,0xa7fe5954
  414e94:	push   ebx
  414e95:	mov    bh,0x56
  414e97:	push   ds
  414e98:	sbb    eax,edi
  414e9a:	xor    eax,0x8d8a7764
  414e9f:	xchg   ebp,eax
  414ea0:	inc    ecx
  414ea1:	xchg   edx,eax
  414ea2:	cmp    DWORD PTR [ecx-0x3a496662],esp
  414ea8:	test   DWORD PTR [ebx+0x5cd28fbf],esi
  414eae:	sub    al,0xf8
  414eb0:	dec    eax
  414eb1:	mov    ebp,0xee1e47a2
  414eb6:	mov    ebp,0x6601e7c2
  414ebb:	adc    al,ch
  414ebd:	loop   0x414ec9
  414ebf:	mov    eax,0x7035a3c1
  414ec4:	dec    esp
  414ec5:	imul   ebx,edx,0xc7d967d0
  414ecb:	dec    ebp
  414ecc:	imul   esi,DWORD PTR [ebx-0x58],0xffffffbf
  414ed0:	fisub  DWORD PTR [edi]
  414ed2:	std    
  414ed3:	gs int3 
  414ed5:	lds    edi,FWORD PTR [esi-0x5bf4e1dc]
  414edb:	mov    ebx,0x75e5ae9b
  414ee0:	and    al,0x48
  414ee2:	mov    bl,0x52
  414ee4:	jge    0x414f03
  414ee6:	addr16 mov ah,0xc1
  414ee9:	sbb    DWORD PTR [esi+0x63],0xd9b52823
  414ef0:	js     0x414e98
  414ef2:	ja     0x414edd
  414ef4:	lahf   
  414ef5:	sbb    BYTE PTR [ecx],ch
  414ef7:	dec    ebx
  414ef8:	mov    bh,dh
  414efa:	inc    ebx
  414efb:	sub    DWORD PTR [ecx-0x5b],0x10
  414eff:	push   edx
  414f00:	pop    ebp
  414f01:	fcomp  QWORD PTR ds:0x40def88
  414f07:	imul   eax,DWORD PTR [edx-0x119df2cb],0x49
  414f0e:	rol    BYTE PTR [ecx+eax*4+0x7b663992],cl
  414f15:	mov    edx,ebx
  414f17:	jb     0x414f1d
  414f19:	and    ebp,DWORD PTR [edi]
  414f1b:	xor    dl,BYTE PTR [ebp-0x5b]
  414f1e:	scas   eax,DWORD PTR es:[edi]
  414f1f:	js     0x414f11
  414f21:	aaa    
  414f22:	inc    esi
  414f23:	int3   
  414f24:	pusha  
  414f25:	int3   
  414f26:	unpckhps xmm3,XMMWORD PTR [edx-0x7441a63e]
  414f2d:	mov    DWORD PTR [ecx-0x1477ab9c],ecx
  414f33:	pop    esp
  414f34:	std    
  414f35:	adc    al,0x5e
  414f37:	dec    esp
  414f38:	sub    bl,BYTE PTR [esi]
  414f3a:	dec    ebp
  414f3b:	sub    eax,edi
  414f3d:	shl    bl,0x2e
  414f40:	dec    ebp
  414f41:	dec    ebp
  414f42:	imul   esp,DWORD PTR [ebx-0x1c],0x55
  414f46:	hlt    
  414f47:	mov    dh,BYTE PTR [ebx+0x4f]
  414f4a:	sbb    eax,eax
  414f4c:	aam    0x34
  414f4e:	fs cld 
  414f50:	inc    edx
  414f51:	mov    eax,ds:0x177f3bce
  414f56:	scas   al,BYTE PTR es:[edi]
  414f57:	in     eax,0xb0
  414f59:	fs ret 0x18ce
  414f5d:	leave  
  414f5e:	mov    dh,0x62
  414f60:	ins    DWORD PTR es:[edi],dx
  414f61:	pusha  
  414f62:	mov    eax,0x67cc2f90
  414f67:	pop    edi
  414f68:	jb     0x414f74
  414f6a:	clc    
  414f6b:	cmp    DWORD PTR [esi+0x6d],edi
  414f6e:	leave  
  414f6f:	sub    al,0x9b
  414f71:	dec    esp
  414f72:	aam    0xbf
  414f74:	pusha  
  414f75:	add    DWORD PTR [eax],edi
  414f77:	jns    0x414efc
  414f79:	inc    edi
  414f7a:	ins    DWORD PTR es:[edi],dx
  414f7b:	push   ebx
  414f7c:	fld    st(1)
  414f7e:	lds    ebp,FWORD PTR [ecx-0x4]
  414f81:	xchg   ebp,eax
  414f82:	jle    0x414f20
  414f84:	adc    cl,BYTE PTR [eax]
  414f86:	test   al,0x6b
  414f88:	cmc    
  414f89:	in     eax,dx
  414f8a:	dec    BYTE PTR [esi]
  414f8c:	aam    0x6b
  414f8e:	sub    ebp,DWORD PTR [ecx-0x33cb588]
  414f94:	jne    0x414f66
  414f96:	stos   DWORD PTR es:[edi],eax
  414f97:	cmp    al,0x7a
  414f99:	xor    eax,0x84ef1156
  414f9e:	ss test al,0xba
  414fa1:	dec    esp
  414fa2:	add    eax,DWORD PTR ds:0x4ff0aeb2
  414fa8:	push   esi
  414fa9:	shl    ah,0xd4
  414fac:	cmp    al,0x22
  414fae:	imul   esp,DWORD PTR [eax+0x74be3e5c],0x53970eea
  414fb8:	push   0x5e
  414fba:	loop   0x414fd0
  414fbc:	popf   
  414fbd:	fsub   DWORD PTR [ebp-0x7f]
  414fc0:	or     BYTE PTR [ecx+0x60],al
  414fc3:	(bad)  
  414fc4:	hlt    
  414fc5:	test   eax,0x4c703f2e
  414fca:	sti    
  414fcb:	(bad)  
  414fcc:	mov    al,ds:0x5e81da2c
  414fd1:	adc    eax,0x4386c1df
  414fd6:	mov    ds:0x3d74bd82,eax
  414fdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fdc:	xchg   esi,eax
  414fdd:	call   0xcd25fe2
  414fe2:	add    DWORD PTR [edi-0x20c3acb8],esp
  414fe8:	sbb    DWORD PTR [edi],0x66
  414feb:	sub    dl,0x3a
  414fee:	rcl    DWORD PTR [edx-0x2b97a6e],0x73
  414ff5:	lods   eax,DWORD PTR ds:[esi]
  414ff6:	lods   eax,DWORD PTR ds:[esi]
  414ff7:	sub    ah,0x3d
  414ffa:	mov    eax,0x36ca1740
  414fff:	sub    BYTE PTR [esi],bl
  415001:	cmp    edi,DWORD PTR [esi]
  415003:	nop
  415004:	sbb    eax,0xbfd73405
  415009:	jae    0x415017
  41500b:	sar    DWORD PTR es:[ebx],cl
  41500e:	xchg   ecx,eax
  41500f:	inc    edi
  415010:	xchg   ecx,eax
  415011:	sbb    eax,ecx
  415013:	xor    eax,0xa63cd8aa
  415018:	(bad)  
  415019:	cdq    
  41501a:	xchg   ebx,eax
  41501b:	jmp    0x414fb9
  41501d:	xor    ah,BYTE PTR [eax-0x1c]
  415020:	gs dec ebp
  415022:	leave  
  415023:	adc    edx,DWORD PTR [eax-0x3556a68c]
  415029:	push   ecx
  41502a:	jmp    0xa173:0x5a8cd439
  415031:	pop    edx
  415032:	xor    eax,0x8b1391b1
  415037:	pop    ss
  415038:	test   eax,0x77db2c62
  41503d:	mov    ebx,0xbd49464a
  415042:	mov    eax,ds:0xb759f17f
  415047:	jl     0x41506d
  415049:	jecxz  0x4150a3
  41504b:	push   ebp
  41504c:	ins    BYTE PTR es:[edi],dx
  41504d:	xchg   DWORD PTR [edx+0xda939a6],ebx
  415053:	leave  
  415054:	add    ebp,DWORD PTR [edx-0x5]
  415057:	sar    DWORD PTR [edx+0x69],cl
  41505a:	push   ebx
  41505b:	mov    edi,0x22841527
  415060:	bound  ecx,QWORD PTR [esi-0xf]
  415063:	dec    ebp
  415064:	imul   esi,DWORD PTR [ecx],0x57
  415067:	(bad)  
  415068:	cvtpi2ps xmm4,mm5
  41506b:	jo     0x4150ae
  41506d:	sbb    BYTE PTR [edx+0x7be8ee73],0x97
  415074:	hlt    
  415075:	inc    esp
  415076:	scas   eax,DWORD PTR es:[edi]
  415077:	adc    BYTE PTR [ebx+0x4d],ch
  41507a:	nop
  41507b:	out    dx,al
  41507c:	or     ah,ah
  41507e:	bound  esi,QWORD PTR [ebx+0x4ffcae61]
  415084:	ds xchg ebx,eax
  415086:	jo     0x415035
  415088:	imul   edi,DWORD PTR [edi+edi*2-0x7f81b9b5],0x1f6be5ae
  415093:	ret    0xb342
  415096:	mov    DWORD PTR [ebx+0x67],eax
  415099:	icebp  
  41509a:	imul   ebx,DWORD PTR [edi-0x4a0cd357],0x51
  4150a1:	mov    cr0,ecx
  4150a4:	cmp    al,0xf6
  4150a6:	int    0x3d
  4150a8:	xchg   esi,eax
  4150a9:	dec    esi
  4150aa:	ins    BYTE PTR es:[edi],dx
  4150ab:	adc    eax,0x3d2a7732
  4150b0:	add    BYTE PTR [edi],0x2d
  4150b3:	and    eax,ebp
  4150b5:	pop    ebx
  4150b6:	mov    WORD PTR [ebp+0x53],?
  4150b9:	dec    ebx
  4150ba:	outs   dx,BYTE PTR ds:[esi]
  4150bb:	and    eax,0x3131ad5b
  4150c0:	(bad)  
  4150c1:	push   edi
  4150c2:	out    dx,eax
  4150c3:	push   eax
  4150c4:	adc    esp,DWORD PTR [edi+eiz*2]
  4150c7:	or     BYTE PTR [ecx+0x2c],bl
  4150ca:	hlt    
  4150cb:	xchg   DWORD PTR [ecx+0x3f2da1c],ebp
  4150d1:	(bad)  
  4150d2:	lds    edi,FWORD PTR [eax-0x3f]
  4150d5:	add    eax,DWORD PTR [edi]
  4150d7:	or     ebp,edi
  4150d9:	push   es
  4150da:	jne    0x4150e7
  4150dc:	push   ebp
  4150dd:	enter  0xf935,0x43
  4150e1:	fsub   QWORD PTR [esi+ebx*1+0x4e]
  4150e5:	jmp    0xe744efd6
  4150ea:	adc    dh,BYTE PTR [eax-0x754be80f]
  4150f0:	stc    
  4150f1:	inc    ebp
  4150f2:	in     eax,dx
  4150f3:	sub    eax,0xe493c724
  4150f8:	xchg   ebx,eax
  4150f9:	dec    ecx
  4150fa:	jge    0x415091
  4150fc:	fistp  DWORD PTR fs:[ebp-0x1b]
  415100:	in     al,dx
  415101:	dec    eax
  415102:	inc    esi
  415103:	popa   
  415104:	add    bl,BYTE PTR [ebx+0x17f4253c]
  41510a:	jg     0x415115
  41510c:	fisubr WORD PTR [esi-0x36]
  41510f:	xchg   edx,eax
  415110:	hlt    
  415111:	push   ebp
  415112:	test   al,0xe6
  415114:	xlat   BYTE PTR ds:[ebx]
  415115:	stos   DWORD PTR es:[edi],eax
  415116:	int    0xa6
  415118:	scas   eax,DWORD PTR es:[edi]
  415119:	inc    edi
  41511a:	mov    al,0x36
  41511c:	rol    BYTE PTR [eax],0xf9
  41511f:	push   eax
  415120:	mov    esp,0x68504913
  415125:	in     al,dx
  415126:	mov    edx,0x4e4e3a3e
  41512b:	hlt    
  41512c:	or     esp,DWORD PTR ds:0xc40f6f08
  415132:	jge    0x41512c
  415134:	js     0x4150e0
  415136:	out    0x15,al
  415138:	popf   
  415139:	rol    BYTE PTR ds:0x2f9efb0f,cl
  41513f:	adc    DWORD PTR [ebx-0x6b69f3fb],ecx
  415145:	jb     0x415162
  415147:	jne    0x41512e
  415149:	adc    dl,ah
  41514b:	and    eax,0x22b8adfa
  415150:	ja     0x4150e3
  415152:	sub    BYTE PTR [edi+ebp*1+0x17],al
  415156:	dec    ecx
  415157:	cli    
  415158:	sbb    BYTE PTR [edi],0xfb
  41515b:	out    dx,eax
  41515c:	sbb    eax,0xeed1dc94
  415161:	out    0x76,al
  415163:	mov    al,ah
  415165:	or     dh,ah
  415167:	add    al,0xd5
  415169:	jbe    0x4151e8
  41516b:	xor    al,0xf0
  41516d:	add    eax,DWORD PTR [esi]
  41516f:	or     BYTE PTR ds:0x471e84c2,0x9
  415176:	mov    esi,0x714ef867
  41517b:	sub    DWORD PTR [ebx],ecx
  41517d:	rcr    DWORD PTR [esi-0x73],1
  415180:	int    0x43
  415182:	jne    0x41515e
  415184:	sbb    DWORD PTR ds:0x5c379615,eax
  41518a:	mov    ds:0x4f9cf9f9,eax
  41518f:	pushf  
  415190:	mov    cs,WORD PTR [ecx+esi*8+0x146c0a21]
  415197:	(bad)  
  415198:	cmp    BYTE PTR [edx-0x75113219],dh
  41519e:	lods   eax,DWORD PTR ds:[esi]
  41519f:	inc    edi
  4151a0:	lods   eax,DWORD PTR ds:[esi]
  4151a1:	inc    ebx
  4151a2:	cld    
  4151a3:	mov    BYTE PTR [edx-0x2c2f750c],dh
  4151a9:	inc    edi
  4151aa:	pop    ss
  4151ab:	push   eax
  4151ac:	xor    esp,DWORD PTR [ecx+0x5f66dec8]
  4151b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151b3:	rcr    DWORD PTR [esi],cl
  4151b5:	push   0x500ecf70
  4151ba:	fcomi  st,st(6)
  4151bc:	mul    BYTE PTR [ebx]
  4151be:	xchg   ebx,eax
  4151bf:	sbb    al,0xf3
  4151c1:	sti    
  4151c2:	inc    edx
  4151c3:	xlat   BYTE PTR ds:[ebx]
  4151c4:	mov    BYTE PTR [edi+edi*1+0x68cf4b66],ah
  4151cb:	cs loopne 0x41522d
  4151ce:	sbb    bh,dh
  4151d0:	fsub   DWORD PTR [edi+ebx*8+0x36]
  4151d4:	jno    0x415222
  4151d6:	or     eax,0xde2be914
  4151db:	fcmove st,st(1)
  4151dd:	sar    esp,0x9e
  4151e0:	lods   eax,DWORD PTR ds:[esi]
  4151e1:	(bad)  [edi]
  4151e3:	pop    ecx
  4151e4:	std    
  4151e5:	pusha  
  4151e6:	xchg   ebx,eax
  4151e7:	or     DWORD PTR [esi+0x6ff01836],edi
  4151ed:	aad    0x95
  4151ef:	std    
  4151f0:	mov    ah,0xa9
  4151f2:	in     eax,0xb2
  4151f4:	xchg   esi,eax
  4151f5:	mov    ds:0x486b37ac,eax
  4151fa:	mov    bl,0x89
  4151fc:	xor    DWORD PTR [esp+edi*2-0x4c],ebp
  415200:	lods   eax,DWORD PTR ds:[esi]
  415201:	sbb    ch,cl
  415203:	or     dh,bh
  415205:	and    eax,0x7413b063
  41520a:	je     0x415288
  41520c:	mov    ecx,0x56f45083
  415211:	jge    0x4151fa
  415213:	(bad)  
  415214:	ins    DWORD PTR es:[edi],dx
  415215:	jbe    0x415267
  415217:	dec    edx
  415218:	pop    esi
  415219:	pop    esi
  41521a:	or     al,0x4f
  41521c:	cmp    DWORD PTR [edx+0x62d4bdbb],0xda1aa766
  415226:	dec    DWORD PTR [edi-0x7a]
  415229:	xor    BYTE PTR [edi-0x1d],bh
  41522c:	(bad)  
  41522d:	jo     0x415291
  41522f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415230:	aad    0x91
  415232:	fcomp  DWORD PTR [ebp+0x3a]
  415235:	cmp    BYTE PTR [edi+0x6ff14b5e],dl
  41523b:	jmp    0x41523a
  41523d:	push   edx
  41523e:	mov    dl,BYTE PTR [eax+edi*4+0x7c0e449a]
  415245:	ret    0x8ccc
  415248:	lock pop ecx
  41524a:	aas    
  41524b:	std    
  41524c:	and    BYTE PTR [eax+0x39fb0108],cl
  415252:	mov    BYTE PTR [edx+0x3567191b],bl
  415258:	and    bh,BYTE PTR [esp+ecx*4+0x44d326ba]
  41525f:	inc    edi
  415260:	jg     0x4151f6
  415262:	mov    ds:0x18759977,eax
  415267:	pop    esi
  415268:	sahf   
  415269:	inc    edx
  41526a:	clc    
  41526b:	jg     0x41527b
  41526d:	lods   eax,DWORD PTR ds:[esi]
  41526e:	adc    ah,BYTE PTR [ecx+0x7a]
  415271:	call   0x6a15:0xd1a17f1
  415278:	jge    0x41521d
  41527a:	add    BYTE PTR [ecx-0x720a11fb],0xd9
  415281:	jae    0x4152c6
  415283:	shl    BYTE PTR [edi],1
  415285:	dec    edx
  415286:	std    
  415287:	cmp    cl,al
  415289:	lahf   
  41528a:	jmp    0x3f3f:0x5e62ea56
  415291:	adc    DWORD PTR [ebx+ecx*2],eax
  415294:	jg     0x41525c
  415296:	or     eax,0x1d9f53c
  41529b:	pop    ds
  41529c:	mov    esi,0x3befc663
  4152a1:	xor    DWORD PTR [ecx+0x75],edx
  4152a4:	adc    esp,edi
  4152a6:	mov    ebp,0x10e4310c
  4152ab:	or     DWORD PTR [ecx-0xc65efde],0xfcb0d58
  4152b5:	sbb    di,WORD PTR [ebp-0x2a98e2a]
  4152bc:	inc    ecx
  4152bd:	add    dh,BYTE PTR [ebx]
  4152bf:	cmp    DWORD PTR [ebp+0x66],edx
  4152c2:	mov    ebp,esp
  4152c4:	ins    BYTE PTR es:[edi],dx
  4152c5:	push   ebp
  4152c6:	sub    ebx,ebx
  4152c8:	cmp    DWORD PTR [ecx+0x47032d59],0x8a1d8068
  4152d2:	cmp    dl,0x9d
  4152d5:	mov    ebp,0x79966dd1
  4152da:	daa    
  4152db:	add    bl,BYTE PTR [ebx+eax*1+0x1b]
  4152df:	pop    ecx
  4152e0:	sub    ecx,esp
  4152e2:	pop    edx
  4152e3:	add    eax,0x710e6e07
  4152e8:	or     ch,BYTE PTR ds:0x159060a3
  4152ee:	or     DWORD PTR [esi-0x676687e5],esi
  4152f4:	cwde   
  4152f5:	mov    ebp,ebx
  4152f7:	sub    bh,0xcf
  4152fa:	stos   BYTE PTR es:[edi],al
  4152fb:	fisttp DWORD PTR [ebx-0x12]
  4152fe:	xchg   ecx,eax
  4152ff:	es jl  0x415322
  415302:	into   
  415303:	fist   DWORD PTR [ecx-0x75]
  415306:	ret    0x359f
  415309:	jmp    0x674bd1d
  41530e:	xchg   esi,eax
  41530f:	sub    BYTE PTR [edi+0x76d27b9c],dh
  415315:	dec    ebp
  415316:	les    edx,FWORD PTR [edi]
  415318:	xor    DWORD PTR [eax-0x77],edi
  41531b:	retf   0xcaab
  41531e:	sub    al,0xea
  415320:	es out 0xeb,al
  415323:	retf   
  415324:	fistp  DWORD PTR [eax-0x60]
  415327:	fs sbb eax,0xa080bf9b
  41532d:	rcr    DWORD PTR [eax],1
  41532f:	and    cl,BYTE PTR [edx+0x1a7daefc]
  415335:	call   0xfb23f5d1
  41533a:	mov    edi,0x4d070001
  41533f:	test   al,0xe3
  415341:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415342:	mov    WORD PTR [ecx-0x49],?
  415345:	inc    esi
  415346:	jmp    0x51f13136
  41534b:	push   ebx
  41534c:	enter  0xb6fd,0x8d
  415350:	setle  BYTE PTR [edi+0x1a]
  415354:	pop    ebp
  415355:	inc    ebx
  415356:	ins    DWORD PTR es:[edi],dx
  415357:	retf   
  415358:	fwait
  415359:	sub    BYTE PTR [esi-0x39008147],bl
  41535f:	cmp    eax,ecx
  415361:	pop    edi
  415362:	scas   eax,DWORD PTR es:[edi]
  415363:	mov    BYTE PTR [ebp-0x317b2856],ch
  415369:	adc    edi,ebp
  41536b:	fcomp  QWORD PTR [eax-0x660fe97b]
  415371:	mov    edx,0x1e0fbfb5
  415376:	mov    dl,BYTE PTR [ebp+0x59]
  415379:	lea    edi,[ebp+0x5203c5e9]
  41537f:	push   edx
  415380:	in     al,dx
  415381:	sahf   
  415382:	or     edi,esi
  415384:	pop    esi
  415385:	xor    edx,DWORD PTR gs:[eax-0x7e]
  415389:	mov    WORD PTR [ebx-0x50],?
  41538c:	fistp  WORD PTR [ebp+eax*8+0x46]
  415390:	xor    edx,DWORD PTR [edx+edx*8+0x6f]
  415394:	push   ecx
  415395:	popf   
  415396:	mov    es,WORD PTR [edi+0x6c]
  415399:	or     eax,0x41bc871c
  41539e:	scas   eax,DWORD PTR es:[edi]
  41539f:	retf   
  4153a0:	aas    
  4153a1:	xchg   ecx,eax
  4153a2:	nop
  4153a3:	into   
  4153a4:	das    
  4153a5:	repz mov fs,edx
  4153a8:	ret    
  4153a9:	mul    BYTE PTR [ebp+0x1bdbdf2b]
  4153af:	enter  0x989f,0x68
  4153b3:	adc    BYTE PTR [ebx+0x56],ch
  4153b6:	cld    
  4153b7:	xchg   esp,eax
  4153b8:	inc    edi
  4153b9:	in     eax,0x93
  4153bb:	jne    0x4153e6
  4153bd:	lods   eax,DWORD PTR ds:[esi]
  4153be:	leave  
  4153bf:	inc    esp
  4153c0:	int    0xa3
  4153c2:	icebp  
  4153c3:	test   eax,0xc59d4817
  4153c8:	and    al,0x3f
  4153ca:	mov    bl,0x36
  4153cc:	call   0x63704227
  4153d1:	test   BYTE PTR [ecx+0x2aa2349a],dh
  4153d7:	repnz fs pop eax
  4153da:	iret   
  4153db:	pop    esp
  4153dc:	jg     0x4153df
  4153de:	push   ebx
  4153df:	adc    al,0xb4
  4153e1:	add    BYTE PTR [esi+0x165264fb],0x69
  4153e8:	or     dh,BYTE PTR [eax-0x4132df6f]
  4153ee:	push   edx
  4153ef:	daa    
  4153f0:	fs and al,bl
  4153f3:	cld    
  4153f4:	jnp    0x4153a8
  4153f6:	sbb    eax,0x3631a775
  4153fb:	ds xchg edi,eax
  4153fd:	inc    ebx
  4153fe:	pop    ds
  4153ff:	(bad)  
  415401:	mov    cl,0x63
  415403:	repnz outs dx,DWORD PTR ds:[esi]
  415405:	shl    BYTE PTR [ebx+eax*4-0x2a],1
  415409:	mov    WORD PTR [esi],fs
  41540b:	mov    al,0x3c
  41540d:	push   es
  41540e:	pop    ss
  41540f:	sub    al,0xaf
  415411:	bound  edx,QWORD PTR [eax-0x476d23aa]
  415417:	push   es
  415418:	sbb    dh,al
  41541a:	ror    dl,1
  41541c:	push   0xffffffd2
  41541e:	jmp    0x2d31:0xdaa09071
  415425:	jnp    0x4153c3
  415427:	stc    
  415428:	push   esi
  415429:	test   al,0x16
  41542b:	rcl    BYTE PTR [ecx],1
  41542d:	pop    ecx
  41542e:	int    0x7f
  415430:	xchg   ebp,eax
  415431:	mov    al,BYTE PTR [edi*2+0x7a6431fc]
  415438:	xor    BYTE PTR [ebx-0x7dbf9c1b],al
  41543e:	jl     0x415432
  415440:	and    DWORD PTR [edi],0xdeaca52b
  415446:	mov    ch,0xdd
  415448:	pop    ebx
  415449:	add    al,0x53
  41544b:	cwde   
  41544c:	cmp    DWORD PTR [eax],edi
  41544e:	test   BYTE PTR [esi],dh
  415450:	mov    eax,ds:0x2621550c
  415455:	and    DWORD PTR [eax],edx
  415457:	(bad)  
  415458:	hlt    
  415459:	bound  edi,QWORD PTR [ecx+0x67]
  41545c:	dec    esp
  41545d:	not    BYTE PTR [esp+ebx*2-0x69]
  415461:	call   0xe023:0xc8a2533d
  415468:	loopne 0x4154e7
  41546a:	das    
  41546b:	in     al,0xb8
  41546d:	sar    BYTE PTR [eax],cl
  41546f:	scas   eax,DWORD PTR es:[edi]
  415470:	jl     0x41543e
  415472:	in     al,dx
  415473:	test   DWORD PTR ds:0x253c6b67,esi
  415479:	or     eax,DWORD PTR [edi-0x4dbc7ff]
  41547f:	lock je 0x41547b
  415482:	lea    esi,[edx]
  415484:	push   ss
  415485:	mov    al,0x9e
  415487:	sub    BYTE PTR [esi+0x21994c97],al
  41548d:	mov    dh,0xe6
  41548f:	rcr    DWORD PTR [ecx],cl
  415491:	xor    BYTE PTR [edx+0x77d8b3f6],cl
  415497:	or     cl,ch
  415499:	xchg   edi,eax
  41549a:	jne    0x41544f
  41549c:	add    bl,BYTE PTR [ecx]
  41549e:	xchg   ebp,eax
  41549f:	sbb    DWORD PTR [ecx-0x4e463cee],0x5e
  4154a6:	in     eax,0xa3
  4154a8:	xchg   edi,eax
  4154a9:	mov    eax,0xe3af1591
  4154ae:	dec    esp
  4154af:	in     al,0xbb
  4154b1:	mov    al,ds:0x1659c1ed
  4154b6:	in     al,0x97
  4154b8:	add    eax,0x3b6aa8e3
  4154bd:	daa    
  4154be:	jmp    0x415527
  4154c0:	loop   0x415450
  4154c2:	fild   WORD PTR ds:0xbeb21999
  4154c8:	ins    DWORD PTR es:[edi],dx
  4154c9:	das    
  4154ca:	(bad)  
  4154cb:	int    0x99
  4154cd:	xor    dh,bh
  4154cf:	retf   
  4154d0:	out    dx,eax
  4154d1:	out    0xb8,eax
  4154d3:	push   ecx
  4154d4:	jp     0x415518
  4154d6:	push   0xffffffd6
  4154d8:	add    bl,BYTE PTR [edx-0x5f]
  4154db:	std    
  4154dc:	fsubr  DWORD PTR [ebx-0x181544e4]
  4154e2:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4154e4:	(bad)  
  4154e5:	fwait
  4154e6:	jge    0x415563
  4154e8:	or     ebp,ebx
  4154ea:	lahf   
  4154eb:	inc    esi
  4154ec:	sub    bl,ch
  4154ee:	retf   0xf0e1
  4154f1:	mov    bh,0xb3
  4154f3:	mov    bh,0x4f
  4154f5:	(bad)  
  4154f6:	mov    al,0x87
  4154f8:	or     BYTE PTR [esi],0x81
  4154fb:	cmp    al,0x4f
  4154fd:	hlt    
  4154fe:	inc    edi
  4154ff:	aam    0x67
  415501:	test   eax,0x5f46ff3b
  415506:	mov    ah,0x9f
  415508:	std    
  415509:	pop    ss
  41550a:	shr    bl,1
  41550c:	pop    eax
  41550d:	icebp  
  41550e:	mov    DWORD PTR [ecx+0x7],eax
  415511:	ins    DWORD PTR es:[edi],dx
  415512:	arpl   WORD PTR [ebx],dx
  415514:	ins    BYTE PTR es:[edi],dx
  415515:	fadd   QWORD PTR [edx-0x4548aab3]
  41551b:	(bad)  [esp+esi*2+0x6fa4b0a3]
  415522:	pop    ebx
  415523:	mov    cl,0x17
  415525:	inc    edi
  415526:	add    al,0x3e
  415528:	mov    esp,0xea5bc6f6
  41552d:	mov    cl,0x1c
  41552f:	cli    
  415530:	lock jecxz 0x415592
  415533:	sub    bh,BYTE PTR [ecx+esi*1]
  415536:	add    DWORD PTR [ecx],ecx
  415538:	sub    ah,BYTE PTR [eax]
  41553a:	inc    esp
  41553b:	xchg   DWORD PTR [esp+edi*2+0x42],edi
  41553f:	cmp    eax,0xda441fa1
  415544:	pop    ebx
  415545:	ins    BYTE PTR es:[edi],dx
  415546:	int    0x48
  415548:	int    0x3b
  41554a:	ret    
  41554b:	push   cs
  41554c:	sub    DWORD PTR [edx-0x2d9aec52],ecx
  415552:	addr16 shr ebp,1
  415555:	xor    dl,BYTE PTR [edx]
  415557:	jnp    0x4154eb
  415559:	pop    edx
  41555a:	gs jb  0x41557f
  41555d:	push   cs
  41555e:	rcl    DWORD PTR [esi+0xb],cl
  415561:	jg     0x415590
  415563:	popa   
  415564:	mov    esp,0x2c853341
  415569:	(bad)  
  41556a:	and    DWORD PTR [edx-0xbf90c91],esp
  415570:	jne    0x4155cd
  415572:	cmp    DWORD PTR [esi],ecx
  415574:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415575:	sbb    eax,0x80209f94
  41557a:	jle    0x4155e5
  41557c:	rcl    DWORD PTR ds:0xdc13d494,1
  415582:	and    ah,ch
  415584:	lock add DWORD PTR [esi+0x3ab339d1],0x19cdcccb
  41558f:	sbb    al,0x29
  415591:	mov    bh,0x9f
  415593:	shl    bh,cl
  415595:	ins    BYTE PTR es:[edi],dx
  415596:	scas   al,BYTE PTR es:[edi]
  415597:	xchg   edx,eax
  415598:	ds pop es
  41559a:	cmp    dl,BYTE PTR [ebp-0x47d219c9]
  4155a0:	jge    0x4155eb
  4155a2:	scas   al,BYTE PTR es:[edi]
  4155a3:	mov    ebp,0x990bf24c
  4155a8:	fisub  WORD PTR [edi+0x15631ebd]
  4155ae:	ja     0x415603
  4155b0:	cli    
  4155b1:	xor    dh,BYTE PTR [ebx+0x68]
  4155b4:	cmp    BYTE PTR [esp+ecx*8-0x4c29c7],0x23
  4155bc:	adc    eax,0x3217cc52
  4155c1:	rcl    DWORD PTR [ebp+0x7e990a01],1
  4155c7:	mov    BYTE PTR [esi],cl
  4155c9:	inc    ebx
  4155ca:	test   BYTE PTR [edi+0x21],0x40
  4155ce:	push   0xb4b8c7d1
  4155d3:	mov    al,ds:0x2d82ece8
  4155d8:	dec    edi
  4155d9:	or     ah,BYTE PTR [ecx+0x3c]
  4155dc:	jp     0x4155fe
  4155de:	xchg   edx,eax
  4155df:	test   al,0xf4
  4155e1:	push   eax
  4155e2:	shl    BYTE PTR [ebx+0x7765ef8b],0xef
  4155e9:	push   esp
  4155ea:	push   0xa57e203b
  4155ef:	out    0x4d,al
  4155f1:	cwde   
  4155f2:	sbb    BYTE PTR [ebx-0x61],dl
  4155f5:	test   eax,0xf3c6ef28
  4155fa:	mov    ds:0x7920a4cb,eax
  4155ff:	xchg   BYTE PTR [ebp+0x72],dl
  415602:	mov    dh,0x22
  415604:	jmp    0x896:0xc6cc156e
  41560b:	mov    bl,BYTE PTR [edi]
  41560d:	jmp    0x415637
  41560f:	nop
  415610:	inc    esi
  415611:	gs and al,0x8f
  415614:	mov    al,ds:0x63e0926a
  415619:	icebp  
  41561a:	dec    ebp
  41561b:	retf   0x8c43
  41561e:	push   eax
  41561f:	out    0x92,eax
  415621:	sub    DWORD PTR [ecx+0x75],ebp
  415624:	mov    BYTE PTR [eax-0x23],cl
  415627:	ret    
  415628:	dec    esi
  415629:	lods   al,BYTE PTR ds:[esi]
  41562a:	mov    al,0x6c
  41562c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41562d:	cmp    BYTE PTR [ecx+edi*4+0x138fe38c],al
  415634:	jnp    0x415694
  415636:	rcl    al,cl
  415638:	out    0xed,eax
  41563a:	and    bh,BYTE PTR [ebp+0x14b5eeee]
  415640:	add    edi,eax
  415642:	sbb    ecx,DWORD PTR [eax+0x2566ccff]
  415648:	stos   BYTE PTR es:[edi],al
  415649:	test   eax,0xe5b9eba2
  41564e:	mov    ebp,0x89b7d9a8
  415653:	dec    esi
  415654:	cli    
  415655:	test   BYTE PTR [edx-0x5f],bl
  415658:	loopne 0x415603
  41565a:	mov    ds:0x7af23fd2,eax
  41565f:	jno    0x415682
  415661:	mov    bl,0xde
  415663:	adc    dh,BYTE PTR [ecx-0x28808648]
  415669:	mov    ecx,0xd53410e4
  41566e:	xchg   BYTE PTR [ecx-0x8a0ebdf],bh
  415674:	jo     0x4156aa
  415676:	mov    ds:0x5042e55,eax
  41567b:	and    edx,DWORD PTR [edi-0x71]
  41567e:	sub    eax,0xf5a2c814
  415683:	sbb    al,0x3a
  415685:	xor    esi,DWORD PTR [ebx-0x45]
  415688:	cmp    DWORD PTR [ebp+0x77],0xcc033b1d
  41568f:	push   ebx
  415690:	jnp    0x4156df
  415692:	ins    DWORD PTR es:[edi],dx
  415693:	jns    0x415704
  415695:	xchg   esp,eax
  415696:	ja     0x4156f5
  415698:	dec    edi
  415699:	mov    esp,0x21a96f84
  41569e:	aad    0xee
  4156a0:	stos   WORD PTR es:[edi],ax
  4156a2:	hlt    
  4156a3:	or     DWORD PTR [eax],ebp
  4156a5:	out    dx,al
  4156a6:	sahf   
  4156a7:	stc    
  4156a8:	xor    eax,0xa33e02f7
  4156ad:	inc    edi
  4156ae:	xchg   esi,eax
  4156af:	ror    BYTE PTR fs:[edi+0x6e],1
  4156b3:	daa    
  4156b4:	push   edi
  4156b5:	push   0xe94ac262
  4156ba:	pop    esi
  4156bb:	and    al,0x4e
  4156bd:	fadd   DWORD PTR [ebx+0x5c7ae49e]
  4156c3:	xor    edx,DWORD PTR [ebp+0xc]
  4156c6:	retf   
  4156c7:	jb     0x415715
  4156c9:	inc    eax
  4156ca:	inc    eax
  4156cb:	inc    ebx
  4156cc:	inc    edi
  4156cd:	sbb    edi,DWORD PTR [edi]
  4156cf:	pushf  
  4156d0:	mov    ch,0xee
  4156d2:	sbb    DWORD PTR [ebx],0xa49b8c3a
  4156d8:	adc    al,0x9
  4156da:	xchg   ecx,eax
  4156db:	pushf  
  4156dc:	pop    edx
  4156dd:	scas   al,BYTE PTR es:[edi]
  4156de:	leave  
  4156df:	jb     0x41574f
  4156e1:	add    BYTE PTR [edi+0x3dd464ae],dh
  4156e7:	mov    cl,0x9e
  4156e9:	arpl   WORD PTR [ebx],di
  4156eb:	xchg   edi,eax
  4156ec:	repz jmp 0x415755
  4156ef:	pop    es
  4156f0:	sti    
  4156f1:	mov    cl,0x1a
  4156f3:	mov    al,ds:0x22035e5e
  4156f8:	nop
  4156f9:	test   ah,0x66
  4156fc:	inc    edi
  4156fd:	sbb    edx,DWORD PTR [edi]
  4156ff:	bound  edx,QWORD PTR [edi]
  415701:	(bad)  
  415702:	inc    dh
  415704:	fistp  DWORD PTR [eax-0x18d17160]
  41570a:	xor    BYTE PTR [eax+0x31521e22],bh
  415710:	out    0x9a,al
  415712:	xor    cl,BYTE PTR [ecx-0x299034a]
  415718:	(bad)  
  415719:	push   ss
  41571a:	jp     0x41571a
  41571c:	fldcw  WORD PTR [edx]
  41571e:	sbb    dh,BYTE PTR [edi+0x78]
  415721:	in     eax,dx
  415722:	jecxz  0x41578d
  415724:	xor    al,0x76
  415726:	inc    edi
  415727:	xchg   cl,dl
  415729:	int    0x3e
  41572b:	pop    ds
  41572c:	push   esi
  41572d:	push   ss
  41572e:	push   ds
  41572f:	cwde   
  415730:	test   DWORD PTR [ebp+0x5b36601b],0xe03f8aed
  41573a:	mov    eax,ss
  41573c:	aas    
  41573d:	aam    0xb0
  41573f:	bound  edi,QWORD PTR [esp+edi*4]
  415742:	and    DWORD PTR [ebp+0x6c],eax
  415745:	in     al,0x8b
  415747:	test   eax,0xf153276f
  41574c:	sub    bl,cl
  41574e:	pop    ecx
  41574f:	test   al,0x58
  415751:	push   0x65
  415753:	scas   al,BYTE PTR es:[edi]
  415754:	mov    al,0x58
  415756:	dec    ebp
  415757:	dec    ebx
  415758:	or     al,0x37
  41575a:	adc    cl,ch
  41575c:	adc    BYTE PTR cs:[eax+0x3d4397e3],dh
  415763:	rcl    ah,1
  415765:	push   ebp
  415766:	iret   
  415767:	mov    edi,0xb4532f7
  41576c:	cdq    
  41576d:	lods   eax,DWORD PTR fs:[esi]
  41576f:	dec    esp
  415770:	xchg   DWORD PTR [eax-0x7e],edx
  415773:	dec    ebp
  415774:	inc    esi
  415775:	mov    bh,0x88
  415777:	mov    eax,ds:0xec172f58
  41577c:	dec    ecx
  41577d:	cmp    bl,al
  41577f:	loop   0x41573f
  415781:	add    BYTE PTR [ebx+0x15],0x40
  415785:	popa   
  415786:	pushf  
  415787:	imul   BYTE PTR [eax-0x468b92c]
  41578d:	lods   eax,DWORD PTR ds:[esi]
  41578e:	pop    ss
  41578f:	or     BYTE PTR [edi+0x5d],0xfc
  415793:	test   cl,0xa4
  415796:	or     BYTE PTR [ecx-0x3b],dl
  415799:	push   esi
  41579a:	cmp    eax,0x99d6d87
  41579f:	xchg   esp,eax
  4157a0:	test   al,0x4b
  4157a2:	jp     0x4157d4
  4157a4:	inc    ebx
  4157a5:	sub    DWORD PTR [ebx+ebx*4+0x5e],ebp
  4157a9:	dec    esp
  4157aa:	adc    BYTE PTR [esi-0x28],dh
  4157ad:	cmp    DWORD PTR [edx-0x7f],edi
  4157b0:	jmp    0x8cdf2238
  4157b5:	dec    edx
  4157b6:	mov    bh,0x21
  4157b8:	jmp    0x5474:0xfc3b9243
  4157bf:	iret   
  4157c0:	cmp    BYTE PTR [ebx-0x651787e6],ch
  4157c6:	dec    edx
  4157c7:	popf   
  4157c8:	pop    ebp
  4157c9:	inc    ebp
  4157ca:	mov    ds,eax
  4157cc:	mov    al,0xb7
  4157ce:	data16 lock ins BYTE PTR es:[edi],dx
  4157d1:	frstor [edx-0x58]
  4157d4:	outs   dx,BYTE PTR ds:[esi]
  4157d5:	jmp    0x4e12ff19
  4157da:	loop   0x415858
  4157dc:	mov    al,ds:0x8897d81f
  4157e1:	and    DWORD PTR [eax+ebp*4],0x305965b5
  4157e8:	jnp    0x4157d4
  4157ea:	aad    0xed
  4157ec:	test   al,0x96
  4157ee:	out    dx,eax
  4157ef:	jecxz  0x415785
  4157f1:	inc    edi
  4157f2:	repz idiv BYTE PTR [ebx+0x42]
  4157f6:	xor    DWORD PTR [esi-0x71],0x282eaf0
  4157fd:	mov    ecx,0x50e79580
  415802:	sar    ch,0x5
  415805:	mov    BYTE PTR [esi],ah
  415807:	add    BYTE PTR [esi-0x11],ah
  41580a:	bound  ebx,QWORD PTR [ecx+0x75]
  41580d:	or     cl,BYTE PTR [eax+0x6a]
  415810:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415811:	mov    ah,0x14
  415813:	adc    al,0x0
  415815:	gs shl dl,1
  415818:	aaa    
  415819:	xchg   esp,eax
  41581a:	inc    edx
  41581b:	cmc    
  41581c:	pop    edx
  41581d:	sbb    BYTE PTR [edi-0x166d799b],0x7a
  415824:	(bad)  
  415825:	std    
  415826:	or     edi,DWORD PTR [esi+0x3d387f03]
  41582c:	or     eax,0x7378c154
  415831:	push   cs
  415832:	retf   
  415833:	inc    edi
  415834:	clc    
  415835:	fistp  DWORD PTR [ecx+edx*4+0x61]
  415839:	in     eax,0xff
  41583b:	sbb    edi,DWORD PTR ds:0xea41e238
  415841:	ins    BYTE PTR es:[edi],dx
  415842:	xor    esi,DWORD PTR [esi+0x3870a6d]
  415848:	xor    al,0x8c
  41584a:	cs ss ss int 0x6a
  41584f:	punpckhdq mm1,mm4
  415852:	(bad)  
  415853:	bound  esp,QWORD PTR [ecx-0x5a]
  415856:	push   0xffffffa7
  415858:	in     eax,0x92
  41585a:	pop    es
  41585b:	cmp    DWORD PTR [esi+esi*1+0x68],ecx
  41585f:	in     al,dx
  415860:	iret   
  415861:	sub    dl,BYTE PTR [ebp+0x5aa8e498]
  415867:	cmp    ecx,esp
  415869:	das    
  41586a:	outs   dx,BYTE PTR ds:[esi]
  41586b:	and    esi,DWORD PTR [ecx]
  41586d:	dec    esi
  41586e:	leave  
  41586f:	ss stc 
  415871:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415872:	push   es
  415873:	and    ecx,DWORD PTR [edi]
  415875:	mov    ds:0x99beda44,al
  41587a:	pop    ss
  41587b:	aaa    
  41587c:	adc    DWORD PTR [ecx-0x1d976144],edx
  415882:	in     al,0x42
  415884:	xchg   esi,eax
  415885:	repnz push eax
  415887:	adc    BYTE PTR [ebx-0x22fb87c],dh
  41588d:	inc    eax
  41588e:	cmc    
  41588f:	les    esi,FWORD PTR [edx-0x392dc1f1]
  415895:	std    
  415896:	cmp    DWORD PTR [edx+0x46],esi
  415899:	push   es
  41589a:	xchg   ebx,eax
  41589b:	inc    ebx
  41589c:	mov    ebx,0xa4efc537
  4158a1:	nop
  4158a2:	popa   
  4158a3:	adc    dh,BYTE PTR [ebx-0x47447d8a]
  4158a9:	pop    eax
  4158aa:	aad    0x64
  4158ac:	cmp    al,0x4a
  4158ae:	cmp    al,0x1e
  4158b0:	iret   
  4158b1:	shl    BYTE PTR [ebp+0x2cd15c5a],0xfa
  4158b8:	and    bl,ah
  4158ba:	repz push eax
  4158bc:	out    0x8b,al
  4158be:	jmp    0x1b0da3ea
  4158c3:	ficom  DWORD PTR [ebx-0x63aafe8a]
  4158c9:	lods   eax,DWORD PTR ds:[esi]
  4158ca:	mov    al,ds:0x18de7fbf
  4158cf:	ja     0x415882
  4158d1:	lds    ebx,FWORD PTR [eax]
  4158d3:	ja     0x415909
  4158d5:	repnz popf 
  4158d7:	bnd jl 0x4158bf
  4158da:	sub    cl,BYTE PTR [eax]
  4158dc:	dec    edi
  4158dd:	ret    
  4158de:	mul    DWORD PTR [ebp-0x30]
  4158e1:	jne    0x415888
  4158e3:	nop
  4158e4:	and    dl,BYTE PTR [ebp+0x4bf48995]
  4158ea:	dec    esi
  4158eb:	hlt    
  4158ec:	pop    ecx
  4158ed:	popa   
  4158ee:	dec    ebx
  4158ef:	sahf   
  4158f0:	aad    0x88
  4158f2:	cmp    DWORD PTR [ecx-0x7c],eax
  4158f5:	pop    esp
  4158f6:	or     BYTE PTR [ecx],bh
  4158f8:	jmp    0x415976
  4158fa:	lahf   
  4158fb:	pop    es
  4158fc:	mov    al,ds:0xab35c867
  415901:	push   edi
  415902:	call   0x5e8975ed
  415907:	iret   
  415908:	bound  ebp,QWORD PTR [ebx+0x608a9986]
  41590e:	aam    0x9d
  415910:	sti    
  415911:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415912:	and    BYTE PTR [ebx+0x5c],0x55
  415916:	mov    esp,0x73a5edfe
  41591b:	mov    cl,0x1a
  41591d:	mov    ds:0xe859b693,al
  415922:	push   esi
  415923:	lods   eax,DWORD PTR ds:[esi]
  415924:	dec    ebp
  415925:	cmp    dh,BYTE PTR [edx-0x64]
  415928:	pop    ecx
  415929:	jo     0x4158dc
  41592b:	adc    edx,ebx
  41592d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41592e:	imul   edi,DWORD PTR [edx+edi*2+0x74],0xaa6f77d7
  415936:	(bad)  
  415937:	in     eax,dx
  415938:	loopne 0x4158c6
  41593a:	mov    ah,0x9a
  41593c:	daa    
  41593d:	inc    ecx
  41593e:	ja     0x415902
  415940:	dec    esi
  415941:	shr    BYTE PTR ds:0xdbd16736,0x36
  415948:	or     eax,0x7eadafac
  41594d:	or     eax,DWORD PTR [ebp-0x53]
  415950:	xor    DWORD PTR [ebp-0x48ef59a8],ebx
  415956:	and    BYTE PTR [ebx+0x72],ch
  415959:	dec    ebp
  41595a:	xor    DWORD PTR [eax+0x62],ecx
  41595d:	cmp    DWORD PTR [eax-0x44],esp
  415960:	(bad)  
  415961:	jg     0x4159a3
  415963:	cdq    
  415964:	inc    esp
  415965:	jg     0x4159c0
  415967:	sbb    ah,BYTE PTR ds:0xd86b26e5
  41596d:	dec    ebx
  41596e:	scas   eax,DWORD PTR es:[edi]
  41596f:	dec    edi
  415970:	pushf  
  415971:	pusha  
  415972:	or     edi,eax
  415974:	cld    
  415975:	inc    edx
  415976:	inc    edi
  415977:	aas    
  415978:	pop    edx
  415979:	icebp  
  41597a:	lahf   
  41597b:	xchg   DWORD PTR [edi-0x19e1da30],esp
  415981:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415982:	out    dx,eax
  415983:	fs jmp 0x8f8f:0xd2c74ded
  41598b:	(bad)  
  41598c:	pop    edi
  41598d:	jg     0x4159fa
  41598f:	mov    ecx,ebp
  415991:	inc    esp
  415992:	mov    edi,0x3d676227
  415997:	ror    BYTE PTR [ebp+0x21],0xb1
  41599b:	mov    ds:0xcb55c796,al
  4159a0:	sbb    DWORD PTR [ecx],0xd9dfbd05
  4159a6:	jge    0x415a14
  4159a8:	mov    dl,0x85
  4159aa:	in     al,0xf0
  4159ac:	pop    ds
  4159ad:	sbb    BYTE PTR [esi],bh
  4159af:	dec    esi
  4159b0:	lods   al,BYTE PTR ds:[esi]
  4159b1:	retf   
  4159b2:	push   ecx
  4159b3:	sahf   
  4159b4:	enter  0xef5c,0xf8
  4159b8:	pushf  
  4159b9:	add    eax,0xe3446b3f
  4159be:	sahf   
  4159bf:	inc    ebx
  4159c0:	fstp   TBYTE PTR [eax+0x24613cbc]
  4159c6:	rcl    DWORD PTR [eax],1
  4159c8:	adc    dl,0xaf
  4159cb:	inc    edx
  4159cc:	push   ss
  4159cd:	retf   0xa731
  4159d0:	je     0x4159f1
  4159d2:	xchg   ecx,eax
  4159d3:	mov    esp,0xb5dc99d5
  4159d8:	int    0x97
  4159da:	loopne 0x415a4e
  4159dc:	adc    eax,0x75f82cf9
  4159e1:	ret    
  4159e2:	inc    edi
  4159e3:	pop    ss
  4159e4:	fldcw  WORD PTR [ecx]
  4159e6:	call   FWORD PTR [esi-0x2c]
  4159e9:	out    0x10,al
  4159eb:	pop    ebp
  4159ec:	xchg   ebp,eax
  4159ed:	jp     0x41597c
  4159ef:	mov    al,0x5a
  4159f1:	in     eax,dx
  4159f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159f3:	dec    ebx
  4159f4:	pop    edx
  4159f5:	jl     0x415983
  4159f7:	mov    esi,0xb4a88dfe
  4159fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159fd:	adc    eax,0x3b0b2631
  415a02:	xor    ecx,DWORD PTR [esi-0x38]
  415a05:	push   esp
  415a06:	sub    BYTE PTR [ecx+0x7a],0xd7
  415a0a:	icebp  
  415a0b:	sub    eax,0xd22774a5
  415a10:	mov    esp,0xc7a976af
  415a15:	enter  0x9f6c,0xd6
  415a19:	sub    edi,DWORD PTR [edi-0x50476e13]
  415a1f:	cld    
  415a20:	ins    BYTE PTR es:[edi],dx
  415a21:	je     0x4159e5
  415a23:	mov    al,0x99
  415a25:	aaa    
  415a26:	js     0x415aa6
  415a28:	loop   0x415a64
  415a2a:	test   eax,0x3f54d2c9
  415a2f:	sbb    esi,ebx
  415a31:	sub    esi,DWORD PTR ds:0xc85b4b8d
  415a37:	scas   eax,DWORD PTR es:[edi]
  415a38:	neg    BYTE PTR [edx-0x5445c687]
  415a3e:	sub    DWORD PTR [edi+eax*4],ecx
  415a41:	je     0x415a5f
  415a43:	inc    ebx
  415a44:	(bad)  
  415a45:	in     eax,dx
  415a46:	pop    ebx
  415a47:	fcmove st,st(7)
  415a49:	cmp    WORD PTR [esi+edx*2+0xf],bx
  415a4e:	ret    0xa0e9
  415a51:	pop    edx
  415a52:	push   ebp
  415a53:	jnp    0x415abc
  415a55:	push   ebx
  415a56:	inc    edx
  415a57:	mov    ebp,0x31c6b184
  415a5c:	popa   
  415a5d:	push   ebx
  415a5e:	mov    bl,0x22
  415a60:	pusha  
  415a61:	push   edi
  415a62:	fadd   DWORD PTR [ebp+0x73199e07]
  415a68:	daa    
  415a69:	lds    edi,FWORD PTR fs:[edi]
  415a6c:	pop    ebp
  415a6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a6e:	fmul   DWORD PTR [ecx+0x1699973b]
  415a74:	inc    esp
  415a75:	ret    
  415a76:	mov    cl,0x13
  415a78:	push   0xcd5352e0
  415a7d:	and    cl,BYTE PTR [eax+0x4e]
  415a80:	push   esp
  415a81:	sti    
  415a82:	dec    esp
  415a83:	aad    0x71
  415a85:	ror    ecx,0x73
  415a88:	cli    
  415a89:	fst    DWORD PTR [ebx]
  415a8b:	hlt    
  415a8c:	mov    dl,0x30
  415a8e:	mov    eax,ecx
  415a90:	xor    cl,ch
  415a92:	pop    es
  415a93:	lods   eax,DWORD PTR ds:[esi]
  415a94:	shl    DWORD PTR [edx-0x3aa640cc],1
  415a9a:	jle    0x415a5f
  415a9c:	cmc    
  415a9d:	and    BYTE PTR [eax-0x54],bl
  415aa0:	hlt    
  415aa1:	mov    ebx,0x8083b208
  415aa6:	test   DWORD PTR [ecx+0x7ce1819e],edx
  415aac:	push   ss
  415aad:	and    DWORD PTR [eax-0x1c1e5133],0xffffffcb
  415ab4:	jne    0x415a7a
  415ab6:	xchg   BYTE PTR [ebx],dh
  415ab8:	aas    
  415ab9:	outs   dx,BYTE PTR ds:[esi]
  415aba:	and    BYTE PTR [ebp+0x4e],0x9a
  415abe:	pop    ebx
  415abf:	(bad)  
  415ac0:	cmp    eax,DWORD PTR [eax]
  415ac2:	(bad)  
  415ac4:	aam    0xf3
  415ac6:	xor    DWORD PTR [ebx],edi
  415ac8:	aaa    
  415ac9:	sbb    DWORD PTR [edx+0xa5460bc],edi
  415acf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ad0:	dec    ebx
  415ad1:	and    ecx,esp
  415ad3:	xchg   esp,eax
  415ad4:	xor    dl,BYTE PTR [edx+ebx*8-0xf66fa3c]
  415adb:	ret    0xe0b
  415ade:	and    BYTE PTR [esp+edx*4],dl
  415ae1:	xor    ecx,DWORD PTR [ecx+ebp*8-0x5e8d0c5b]
  415ae8:	sbb    al,0xfd
  415aea:	dec    edx
  415aeb:	and    al,0x6c
  415aed:	out    0xf2,eax
  415aef:	dec    ecx
  415af0:	leave  
  415af1:	aam    0x25
  415af3:	xchg   edx,eax
  415af4:	in     al,dx
  415af5:	xor    dl,bh
  415af7:	dec    edx
  415af8:	or     bl,BYTE PTR [edi]
  415afa:	jb     0x415b0c
  415afc:	sub    esi,DWORD PTR [edi+0x61f683ba]
  415b02:	mov    edi,0xe7849af3
  415b07:	sub    ebp,DWORD PTR ds:0xd4b4dfc6
  415b0d:	and    DWORD PTR [eax],esi
  415b0f:	enter  0x6cfb,0xd9
  415b13:	xchg   ebp,eax
  415b14:	loop   0x415ac4
  415b16:	pop    es
  415b17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b18:	xchg   ebx,eax
  415b19:	fld    TBYTE PTR [esi-0x762cd67b]
  415b1f:	repnz inc esi
  415b21:	repz push ebx
  415b23:	dec    ecx
  415b24:	ja     0x415aad
  415b26:	cmp    eax,0xe8cb9646
  415b2b:	mov    al,BYTE PTR [edi]
  415b2d:	cs gs inc ebp
  415b30:	add    edx,DWORD PTR [ecx]
  415b32:	or     dl,BYTE PTR ds:0xcdeb045f
  415b38:	mov    ds:0x9a421d04,eax
  415b3d:	(bad)  
  415b3e:	nop
  415b3f:	sub    ebp,edx
  415b41:	dec    ebp
  415b42:	out    dx,eax
  415b43:	mov    ?,WORD PTR [eax-0x2a11182c]
  415b49:	daa    
  415b4a:	and    al,0xf
  415b4c:	adc    ch,BYTE PTR [eax-0x4a]
  415b4f:	clc    
  415b50:	ds mov ebx,0xb7add94a
  415b56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b57:	lods   al,BYTE PTR ds:[esi]
  415b58:	sub    dl,BYTE PTR ds:0x22dd1a75
  415b5e:	push   esi
  415b5f:	xchg   DWORD PTR [ebp+0x271b8434],edi
  415b65:	jle    0x415b39
  415b67:	add    edx,DWORD PTR [ecx+0x3fb31435]
  415b6d:	es xor eax,0xd89b816c
  415b73:	push   eax
  415b74:	inc    edx
  415b75:	pusha  
  415b76:	or     ebp,DWORD PTR [edx-0x4abbb8e0]
  415b7c:	in     al,dx
  415b7d:	pop    ebp
  415b7e:	lock ror DWORD PTR [eax],cl
  415b81:	push   ebx
  415b82:	sub    edi,edx
  415b84:	pusha  
  415b85:	aas    
  415b86:	fdivr  QWORD PTR [ecx]
  415b88:	setb   dh
  415b8b:	scas   al,BYTE PTR es:[edi]
  415b8c:	adc    cl,BYTE PTR [edx+esi*8-0x67]
  415b90:	xrelease mov DWORD PTR [eax+0x922811],ecx
  415b97:	push   edx
  415b98:	fsub   st(2),st
  415b9a:	pushf  
  415b9b:	sbb    esp,DWORD PTR [ecx+0x50]
  415b9e:	outs   dx,DWORD PTR ds:[esi]
  415b9f:	pusha  
  415ba0:	and    al,0x5f
  415ba2:	clc    
  415ba3:	push   0xf7cc9a59
  415ba8:	pop    esp
  415ba9:	jbe    0x415ba4
  415bab:	(bad)  
  415bac:	sub    al,0x6b
  415bae:	js     0x3e27263b
  415bb4:	call   0x94f9:0x3b4cc57f
  415bbb:	push   0x5d
  415bbd:	test   DWORD PTR [edx+0x29fb3c4b],0xa8a1a9d5
  415bc7:	xchg   edi,eax
  415bc8:	fwait
  415bc9:	xor    esp,DWORD PTR [esi-0x2a0e1d6d]
  415bcf:	push   0x68
  415bd1:	fwait
  415bd2:	cdq    
  415bd3:	aad    0xe3
  415bd5:	pop    ds
  415bd6:	retf   0x2929
  415bd9:	sbb    BYTE PTR [eax-0x4d935974],al
  415bdf:	(bad)  
  415be0:	xchg   ebp,eax
  415be1:	push   0xffffffae
  415be3:	mov    ebp,0x7bd92c49
  415be8:	arpl   WORD PTR [edi-0x45b6cd19],sp
  415bee:	jnp    0x415bc7
  415bf0:	pushf  
  415bf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bf2:	inc    edi
  415bf3:	call   0xdd8c7a94
  415bf8:	mov    ebp,ss
  415bfa:	ret    0xf46b
  415bfd:	mov    al,ds:0x3832fa69
  415c03:	not    BYTE PTR [eax+0x68607606]
  415c09:	shr    BYTE PTR [ecx+0x27a9ef25],0xb7
  415c10:	sub    bh,BYTE PTR [esi]
  415c12:	aas    
  415c13:	nop    ecx
  415c16:	jbe    0x415b9a
  415c18:	add    DWORD PTR [esi+ebx*2],esp
  415c1b:	das    
  415c1c:	sbb    al,BYTE PTR [ebx+edi*8+0x6e1770bb]
  415c23:	out    0x9e,eax
  415c25:	int    0xfd
  415c27:	xchg   esi,eax
  415c28:	lahf   
  415c29:	adc    dl,BYTE PTR [ebx+0x26]
  415c2c:	push   eax
  415c2d:	call   0xc03b:0xb9da4ea3
  415c34:	mov    dl,0x96
  415c36:	dec    ecx
  415c37:	(bad)  
  415c38:	es pop edx
  415c3a:	fbstp  TBYTE PTR [ecx+0x50398d2d]
  415c40:	pop    edx
  415c41:	jno    0x415c1d
  415c43:	xor    DWORD PTR [edi],0x5e
  415c46:	clc    
  415c47:	and    BYTE PTR [ecx],0xb4
  415c4a:	sub    ecx,DWORD PTR [ecx-0x16]
  415c4d:	xor    dl,BYTE PTR [eax]
  415c4f:	out    dx,al
  415c50:	aas    
  415c51:	or     DWORD PTR [esp+ebp*4],edx
  415c54:	pop    ds
  415c55:	call   0xd62a:0x162114e8
  415c5c:	xchg   ebp,eax
  415c5d:	xor    BYTE PTR [eax+0x52696733],0x44
  415c64:	aas    
  415c65:	cmc    
  415c66:	and    al,0x7f
  415c68:	xlat   BYTE PTR ds:[ebx]
  415c69:	imul   edx,DWORD PTR cs:[ebx-0x394a87e5],0x13
  415c71:	test   BYTE PTR [ebp+0x3c],0x93
  415c75:	mov    esp,0x51008546
  415c7a:	cmp    BYTE PTR [ecx],dl
  415c7c:	push   ss
  415c7d:	(bad)  
  415c7e:	pop    ebx
  415c7f:	inc    esi
  415c80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c81:	ror    BYTE PTR [edx],0xd4
  415c84:	mov    eax,ds:0x9c9a5873
  415c89:	cmp    DWORD PTR [ebx-0x62365a9c],edi
  415c8f:	scas   eax,DWORD PTR es:[edi]
  415c90:	mov    ds:0x259979e3,eax
  415c95:	xchg   esp,eax
  415c96:	xchg   esp,eax
  415c97:	jle    0x415c7c
  415c99:	add    eax,0x8a1315ee
  415c9e:	jl     0x415d10
  415ca0:	dec    esp
  415ca1:	inc    ebx
  415ca2:	jo     0x415c60
  415ca4:	push   cs
  415ca5:	and    DWORD PTR [eax-0x13],0xffffff94
  415ca9:	stc    
  415caa:	pop    es
  415cab:	lahf   
  415cac:	and    al,0xd7
  415cae:	mov    ds:0xb6833e9a,al
  415cb3:	cmp    al,0x71
  415cb5:	xor    edi,0x122c65c1
  415cbb:	lds    edx,FWORD PTR [eax-0x59c7728b]
  415cc1:	int    0x2e
  415cc3:	jnp    0x415c61
  415cc5:	pmaxsw mm3,QWORD PTR [ebp+0x590aed56]
  415ccc:	popa   
  415ccd:	mov    eax,0xba560eac
  415cd2:	pop    ss
  415cd3:	pop    ebp
  415cd4:	xor    eax,0x4572038e
  415cd9:	jle    0x415ce0
  415cdb:	lea    esi,[ebx]
  415cdd:	sub    al,0xfa
  415cdf:	jecxz  0x415cf1
  415ce1:	bound  edi,QWORD PTR [eax]
  415ce3:	out    0xce,al
  415ce5:	ins    BYTE PTR es:[edi],dx
  415ce6:	data16 sub al,0x75
  415ce9:	dec    ebp
  415cea:	add    al,0xa8
  415cec:	loopne 0x415c9b
  415cee:	ds sub eax,0x3e0701ef
  415cf4:	mov    edx,0xa4ea2847
  415cf9:	into   
  415cfa:	jb     0x415cea
  415cfc:	mov    eax,0x37646cdc
  415d01:	xor    al,0x24
  415d03:	push   ecx
  415d04:	push   edx
  415d05:	sbb    DWORD PTR [edx],esp
  415d07:	mov    edx,0x6e7d39ae
  415d0c:	xchg   BYTE PTR [eax-0x14],ah
  415d0f:	retf   
  415d10:	data16 mov ah,0xc2
  415d13:	out    0x57,eax
  415d15:	cmp    dl,BYTE PTR [edi+0xea99275]
  415d1b:	adc    DWORD PTR [eax+0x23],ebp
  415d1e:	push   0x30
  415d20:	push   es
  415d21:	imul   eax,DWORD PTR [ecx],0xffffff9d
  415d24:	outs   dx,DWORD PTR ds:[esi]
  415d25:	gs jne 0x415d85
  415d28:	mov    edx,0xc88b92e
  415d2d:	dec    esi
  415d2e:	imul   esi,DWORD PTR [ecx-0x409ecbe9],0xb20cf3fe
  415d38:	cmp    BYTE PTR [ecx+0x242e78ec],0xdb
  415d3f:	test   eax,0x2279cea8
  415d44:	xchg   ecx,eax
  415d45:	fcmovb st,st(7)
  415d47:	jg     0x415d92
  415d49:	ror    ah,1
  415d4b:	push   esi
  415d4c:	aaa    
  415d4d:	jmp    0xe96171de
  415d52:	dec    edx
  415d53:	and    bl,BYTE PTR ds:0x91f9c6ff
  415d59:	sub    BYTE PTR [edx-0x441c591],cl
  415d5f:	enter  0x240d,0x70
  415d63:	iret   
  415d64:	mov    al,0xbf
  415d66:	add    BYTE PTR [ebp+0x33d4161e],bl
  415d6c:	sub    eax,0xbd38e925
  415d71:	add    al,0xb
  415d73:	dec    esi
  415d74:	je     0x415db9
  415d76:	jl     0x415d53
  415d78:	bound  esp,QWORD PTR [ebx-0x42]
  415d7b:	hlt    
  415d7c:	sbb    ecx,DWORD PTR [ecx-0x77cc76c4]
  415d82:	add    ecx,ebp
  415d84:	mov    ah,0x11
  415d86:	test   al,0x8e
  415d88:	pop    esi
  415d89:	sar    DWORD PTR [ebp-0x55ea53a8],cl
  415d8f:	pop    esp
  415d90:	xchg   esp,eax
  415d91:	and    bl,BYTE PTR [edx-0x78dde952]
  415d97:	cs retf 
  415d99:	(bad)  
  415d9a:	sbb    eax,0xdaf4736f
  415d9f:	adc    bh,BYTE PTR [ebx+0x3b]
  415da2:	sbb    ebp,eax
  415da4:	shl    BYTE PTR [eax+eiz*8+0x23f28b27],1
  415dab:	stos   BYTE PTR es:[edi],al
  415dac:	les    eax,FWORD PTR [edi]
  415dae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415daf:	mov    ch,BYTE PTR [ecx-0x42c7d7a2]
  415db5:	lea    esi,[esp+eax*4-0x1e]
  415db9:	mov    ebp,0xf79885c1
  415dbe:	jbe    0x415df6
  415dc0:	pop    ebp
  415dc1:	in     al,0x30
  415dc3:	data16 add al,0x1c
  415dc6:	mov    esp,0xeb4366ea
  415dcb:	xor    eax,0xad876d13
  415dd0:	out    0x3,al
  415dd2:	or     bl,cl
  415dd4:	test   ecx,eax
  415dd6:	lea    eax,[ecx+ecx*4-0x6f86f7ef]
  415ddd:	jmp    0xb299:0x34a49342
  415de4:	cmp    al,0xe0
  415de6:	aad    0x7a
  415de8:	test   eax,0x423b1ce2
  415ded:	js     0x415daf
  415def:	(bad)  
  415df0:	jns    0x415ded
  415df2:	jno    0x415e1f
  415df4:	popf   
  415df5:	mov    ch,0x97
  415df7:	int    0x2b
  415df9:	call   0x8f3f3634
  415dfe:	mov    ds,edx
  415e00:	jne    0x415e48
  415e02:	(bad)  
  415e03:	call   0x380c04b9
  415e08:	cwde   
  415e09:	sbb    ch,bl
  415e0b:	outs   dx,DWORD PTR ds:[esi]
  415e0c:	nop
  415e0d:	pop    ecx
  415e0e:	aad    0x84
  415e10:	or     BYTE PTR [eax],al
  415e12:	dec    eax
  415e13:	jle    0x415dbb
  415e15:	xor    bl,BYTE PTR [edx-0x63]
  415e18:	cwde   
  415e19:	adc    al,0x8f
  415e1b:	ja     0x415e3c
  415e1d:	sar    BYTE PTR [ebp-0x4ab25443],cl
  415e23:	xor    edx,esp
  415e25:	fwait
  415e26:	adc    bh,BYTE PTR [edi]
  415e28:	retf   
  415e29:	adc    al,0x24
  415e2b:	jl     0x415e53
  415e2d:	je     0x415e4b
  415e2f:	aaa    
  415e30:	xlat   BYTE PTR ds:[ebx]
  415e31:	cwde   
  415e32:	icebp  
  415e33:	(bad)  
  415e34:	scas   al,BYTE PTR es:[edi]
  415e35:	cmp    ch,BYTE PTR [ebp-0x44]
  415e38:	ficomp WORD PTR [esp+eiz*4-0x76eb510]
  415e3f:	push   esp
  415e40:	sbb    cl,bh
  415e42:	dec    esi
  415e43:	shl    BYTE PTR [esi+esi*4+0x4a6aacee],0xff
  415e4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e4c:	cmp    BYTE PTR [eax-0x36c8263e],0x52
  415e53:	ret    
  415e54:	add    BYTE PTR [ecx-0x70],0xb2
  415e58:	daa    
  415e59:	out    dx,al
  415e5a:	xchg   edi,eax
  415e5b:	in     al,0x1e
  415e5d:	test   DWORD PTR [eax+0x54],0xbdb46831
  415e64:	sbb    ecx,DWORD PTR [edi+0x1b]
  415e67:	sub    ch,BYTE PTR [ebx+0x52cd1861]
  415e6d:	into   
  415e6e:	std    
  415e6f:	and    esp,DWORD PTR [esi+0x69]
  415e72:	or     al,0x9b
  415e74:	retf   
  415e75:	std    
  415e76:	jae    0x415e27
  415e78:	inc    edi
  415e79:	xchg   DWORD PTR [edi-0x685f708],ebx
  415e7f:	cmp    edx,DWORD PTR [edi-0x18678abe]
  415e85:	inc    ebp
  415e86:	test   BYTE PTR [esi],dh
  415e88:	dec    eax
  415e89:	ret    
  415e8a:	aam    0x45
  415e8c:	iret   
  415e8d:	ficomp WORD PTR [edx-0x2cb82703]
  415e93:	push   edi
  415e94:	shl    edi,0xd8
  415e97:	adc    al,0x1f
  415e99:	aaa    
  415e9a:	sbb    ecx,DWORD PTR [edx+edx*2-0x58]
  415e9e:	mov    bh,0xa7
  415ea0:	push   0x20
  415ea2:	aaa    
  415ea3:	sbb    eax,0x86874ae2
  415ea8:	neg    DWORD PTR [eax-0x46]
  415eab:	leave  
  415eac:	cli    
  415ead:	sar    dh,0x0
  415eb0:	adc    bl,BYTE PTR [esi-0x5db98530]
  415eb6:	mov    dl,0x15
  415eb8:	mov    dh,bl
  415eba:	not    DWORD PTR [edi]
  415ebc:	and    eax,DWORD PTR [eax]
  415ebe:	dec    eax
  415ebf:	or     al,0x6f
  415ec1:	scas   al,BYTE PTR es:[edi]
  415ec2:	ret    0x950c
  415ec5:	push   eax
  415ec6:	out    0xfb,al
  415ec8:	or     bl,ah
  415eca:	(bad)  
  415ecb:	sub    al,0xdd
  415ecd:	sahf   
  415ece:	mov    dl,0x35
  415ed0:	sbb    BYTE PTR [edx-0x5f34f908],0x3d
  415ed7:	or     esp,DWORD PTR [eax-0x95f021c]
  415edd:	pop    es
  415ede:	dec    esp
  415edf:	ret    
  415ee0:	dec    esi
  415ee1:	dec    esi
  415ee2:	aad    0x87
  415ee4:	call   0x2902f34e
  415ee9:	stos   BYTE PTR es:[edi],al
  415eea:	mov    ds:0x9f215021,al
  415eef:	pop    es
  415ef0:	retf   0xc706
  415ef3:	jecxz  0x415f20
  415ef5:	stos   DWORD PTR es:[edi],eax
  415ef6:	test   eax,0x18ede5f6
  415efb:	xchg   edi,eax
  415efc:	jo     0x415f0d
  415efe:	scas   eax,DWORD PTR es:[edi]
  415eff:	sbb    dh,BYTE PTR [eax-0x372a3693]
  415f05:	adc    dl,BYTE PTR [eax-0x20]
  415f08:	xor    ah,BYTE PTR [ebx]
  415f0a:	int3   
  415f0b:	fistp  QWORD PTR [ebx+0x48]
  415f0e:	dec    edx
  415f0f:	cmp    al,0xc5
  415f11:	mov    ecx,0xa26ca2c4
  415f16:	push   es
  415f17:	push   esi
  415f18:	pop    ebx
  415f19:	mov    ss,WORD PTR [ebp+0x5f385f1b]
  415f1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f20:	aas    
  415f21:	adc    bh,BYTE PTR ds:0xf70f3a9d
  415f27:	or     BYTE PTR [esi-0x1ee46160],ch
  415f2d:	mov    WORD PTR [ecx+0x5541b346],es
  415f33:	neg    dl
  415f35:	sbb    al,0x21
  415f37:	shl    DWORD PTR [edi+0x75],1
  415f3a:	xor    dl,BYTE PTR [edi-0x394d6878]
  415f40:	mov    edx,0x5d3ee910
  415f45:	daa    
  415f46:	cmp    BYTE PTR [edx-0x3202d60a],al
  415f4c:	xor    ecx,eax
  415f4e:	sub    dl,cl
  415f50:	cli    
  415f51:	(bad)  
  415f52:	xor    cl,BYTE PTR [ecx+0x1fe62eed]
  415f58:	sub    BYTE PTR [ebx-0x60],dl
  415f5b:	fidiv  WORD PTR [esi]
  415f5d:	pop    ecx
  415f5e:	dec    esp
  415f5f:	jg     0x415f84
  415f61:	push   ebx
  415f62:	call   0x4951:0xb1b9f5a4
  415f69:	push   ecx
  415f6a:	(bad)  
  415f6b:	scas   eax,DWORD PTR es:[edi]
  415f6c:	add    edx,DWORD PTR [edi-0x5303165e]
  415f72:	push   ss
  415f73:	mov    DWORD PTR [eax-0x4f],0x8c77623f
  415f7a:	stos   DWORD PTR es:[edi],eax
  415f7b:	jb     0x415fd9
  415f7d:	mov    bl,0x57
  415f7f:	jl     0x415f9b
  415f81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f82:	jno    0x415fe4
  415f84:	mov    eax,ds:0x117407ca
  415f89:	icebp  
  415f8a:	or     ah,BYTE PTR [edi-0x5e5877fa]
  415f90:	add    al,BYTE PTR [esi]
  415f92:	sub    BYTE PTR [eax],0xe5
  415f95:	(bad)  
  415f96:	jge    0x415f25
  415f98:	push   0x44
  415f9a:	es aaa 
  415f9c:	jbe    0x415f7e
  415f9e:	outs   dx,BYTE PTR ds:[esi]
  415f9f:	fldenv [ebp-0x19]
  415fa2:	push   es
  415fa3:	jno    0x415f2b
  415fa5:	or     DWORD PTR [ecx],ebp
  415fa7:	add    ebp,DWORD PTR [eax]
  415fa9:	pop    ds
  415faa:	scas   al,BYTE PTR es:[edi]
  415fab:	leave  
  415fac:	sbb    al,0x2
  415fae:	and    al,0x2f
  415fb0:	sti    
  415fb1:	cs xchg ebp,eax
  415fb3:	out    0xaf,eax
  415fb5:	out    0xcd,al
  415fb7:	pop    eax
  415fb8:	cmc    
  415fb9:	jl     0x415f4d
  415fbb:	pusha  
  415fbc:	cs inc eax
  415fbe:	push   esp
  415fbf:	cs repnz out dx,al
  415fc2:	push   edi
  415fc3:	(bad)  
  415fc4:	cmc    
  415fc5:	(bad)  
  415fc6:	aaa    
  415fc7:	cmp    edx,esp
  415fc9:	arpl   WORD PTR es:[edx],bx
  415fcc:	int    0xd8
  415fce:	adc    DWORD PTR [edx],edi
  415fd0:	shl    bh,1
  415fd2:	sahf   
  415fd3:	or     cl,cl
  415fd5:	fisttp QWORD PTR [ebx+edx*4-0x5adef7cf]
  415fdc:	out    0xbf,al
  415fde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fdf:	adc    DWORD PTR [ebp+0x5a],ecx
  415fe2:	cmp    ebx,ebx
  415fe4:	in     eax,0xa2
  415fe6:	dec    ebx
  415fe7:	mov    dh,0x2c
  415fe9:	jg     0x415fa6
  415feb:	fsub   st(6),st
  415fed:	xor    edi,DWORD PTR [edx]
  415fef:	ss xchg edx,eax
  415ff1:	xlat   BYTE PTR ds:[ebx]
  415ff2:	xor    DWORD PTR [edi-0xad23421],0xba4169ae
  415ffc:	sub    al,0x53
  415ffe:	pop    es
  415fff:	push   edi
  416000:	adc    al,0xf7
  416002:	lea    edi,[edi]
  416004:	arpl   WORD PTR [esi],dx
  416006:	fisttp WORD PTR [edx-0x4de47422]
  41600c:	inc    edx
  41600d:	xchg   ebp,eax
  41600e:	jbe    0x416075
  416010:	xchg   ecx,eax
  416011:	inc    eax
  416012:	adc    ebx,DWORD PTR [ebx+0x42]
  416015:	jge    0x41604c
  416017:	sbb    BYTE PTR [eax],bl
  416019:	lahf   
  41601a:	xchg   esp,eax
  41601b:	test   ch,dh
  41601d:	mov    bl,BYTE PTR [ecx]
  41601f:	in     al,0xfb
  416021:	rcl    DWORD PTR [ebx-0x71ac0c30],cl
  416027:	pop    ss
  416028:	daa    
  416029:	leave  
  41602a:	and    DWORD PTR [edi+0x29],esp
  41602d:	push   eax
  41602e:	(bad)  
  41602f:	in     al,dx
  416030:	mov    dl,0x28
  416032:	loop   0x41604e
  416034:	out    0xc8,al
  416036:	and    BYTE PTR [edx-0x57],bh
  416039:	cmp    DWORD PTR [edx+0x5a],esp
  41603c:	mov    al,0x9b
  41603e:	add    bh,0x18
  416041:	mov    dh,0xfb
  416043:	cs jbe 0x4160bf
  416046:	lahf   
  416047:	xor    dl,0x4d
  41604a:	test   al,0x50
  41604c:	inc    eax
  41604d:	add    eax,0xeb3144c4
  416052:	(bad)  ds:0x2f6b0d8a
  416058:	mov    ?,esi
  41605a:	xchg   esi,eax
  41605b:	sub    eax,0x151557d1
  416060:	mov    ah,0xc8
  416062:	fs mov ebx,0xae28c2cf
  416068:	mov    edx,0x1efff749
  41606d:	lea    edi,[eax-0x1a]
  416070:	rol    al,1
  416072:	mov    ah,0xfe
  416074:	pop    esi
  416075:	and    BYTE PTR [edx+ebx*8],0x3f
  416079:	rcr    BYTE PTR [esi+0x57],1
  41607c:	pop    es
  41607d:	xor    ch,0xc2
  416080:	out    0x9c,al
  416082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416083:	jae    0x416019
  416085:	and    ah,bl
  416087:	xor    edi,DWORD PTR [ecx]
  416089:	dec    edx
  41608a:	fist   WORD PTR [ecx+ebx*8]
  41608d:	outs   dx,BYTE PTR ds:[esi]
  41608e:	xor    DWORD PTR [edx+0x501e4b53],ebp
  416094:	fnclex 
  416096:	ins    BYTE PTR es:[edi],dx
  416097:	sar    BYTE PTR [eax],0x51
  41609a:	sub    ebx,DWORD PTR [eax+ebx*2]
  41609d:	xchg   DWORD PTR [edx+0x41],esp
  4160a0:	rcr    BYTE PTR [ecx+0x4e],0x1e
  4160a4:	ja     0x416029
  4160a6:	or     DWORD PTR [ebx],esp
  4160a8:	pop    ds
  4160a9:	rol    DWORD PTR [ebx],0x2c
  4160ac:	daa    
  4160ad:	sub    bl,0x80
  4160b0:	mov    esi,0xb912a94c
  4160b5:	mov    dh,0xe0
  4160b7:	(bad)  
  4160b9:	inc    ecx
  4160ba:	and    DWORD PTR [esi],edi
  4160bc:	mov    cl,0x45
  4160be:	jnp    0x41613c
  4160c0:	ja     0x41608a
  4160c2:	test   eax,0x5a0ff5a0
  4160c7:	mov    al,0x9f
  4160c9:	fld    st(1)
  4160cb:	dec    esp
  4160cc:	pop    ss
  4160cd:	push   edi
  4160ce:	push   ebx
  4160cf:	sbb    al,0x4c
  4160d1:	jnp    0x4160f8
  4160d3:	int    0xbe
  4160d5:	stc    
  4160d6:	lods   eax,DWORD PTR ds:[esi]
  4160d7:	test   DWORD PTR [esi+0x552f8fbf],edx
  4160dd:	cmc    
  4160de:	xor    ebx,edx
  4160e0:	ins    BYTE PTR es:[edi],dx
  4160e1:	mov    esp,0x6ed7e952
  4160e6:	fld    DWORD PTR [edx]
  4160e8:	mov    ebx,0x18bb96b7
  4160ed:	sbb    BYTE PTR [edx-0x45],bl
  4160f0:	data16 mov ah,0xfb
  4160f3:	scas   eax,DWORD PTR es:[edi]
  4160f4:	push   0xb
  4160f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160f7:	cs popa 
  4160f9:	mov    ebx,gs
  4160fb:	adc    eax,0xb3d3c5ca
  416100:	xor    bl,al
  416102:	mov    cl,0x9d
  416104:	ins    DWORD PTR es:[edi],dx
  416105:	push   ebp
  416106:	sbb    ecx,edi
  416108:	push   edx
  416109:	test   esi,0xadacd0b9
  41610f:	into   
  416110:	inc    ah
  416112:	mov    ebp,0xbcf6c7de
  416117:	sbb    al,0x30
  416119:	mov    dh,0x46
  41611b:	int3   
  41611c:	or     eax,0x17683587
  416121:	ret    
  416122:	dec    ebx
  416123:	cmp    al,0xd3
  416125:	fldenv [ebx+0x5746065b]
  41612b:	sub    al,0x7a
  41612d:	pop    esi
  41612e:	mov    ds:0x1154067d,eax
  416133:	inc    esi
  416134:	xchg   edx,eax
  416135:	mov    ebp,0xf2aee10a
  41613a:	jp     0x416198
  41613c:	lea    eax,[ecx+0x31]
  41613f:	sub    al,0xcc
  416141:	cwde   
  416142:	push   0x56
  416144:	jl     0x41612d
  416146:	mov    ds:0x773773fc,eax
  41614b:	icebp  
  41614c:	sbb    eax,0x60498a87
  416151:	xchg   edx,eax
  416152:	hlt    
  416153:	push   eax
  416154:	shl    DWORD PTR [ebp+0xa],cl
  416157:	in     eax,dx
  416158:	cmp    ah,BYTE PTR [eax]
  41615a:	pop    es
  41615b:	(bad)  
  41615c:	and    esp,DWORD PTR [esi+0x6c08f8ec]
  416162:	sub    DWORD PTR [ebx-0x5e],esp
  416165:	push   0x5e
  416167:	int    0x62
  416169:	sub    esp,ecx
  41616b:	dec    esi
  41616c:	mov    al,0x69
  41616e:	outs   dx,BYTE PTR ds:[esi]
  41616f:	lds    esp,FWORD PTR [ecx+eax*1-0x6170adcf]
  416176:	test   edi,0xf8433fd
  41617c:	jnp    0x4161de
  41617e:	push   0x200ea14c
  416183:	push   ebx
  416184:	mov    al,ds:0x95ddb682
  416189:	outs   dx,DWORD PTR ds:[esi]
  41618a:	inc    esi
  41618b:	mov    al,ds:0x125c7dd6
  416190:	adc    DWORD PTR [eax+0x3],eax
  416193:	push   ebp
  416194:	dec    ebp
  416195:	js     0x4161d6
  416197:	xchg   bl,ah
  416199:	or     DWORD PTR [ebp+0x2ed4eecb],edi
  41619f:	adc    al,BYTE PTR [eax+0x3f]
  4161a2:	ret    
  4161a3:	push   eax
  4161a4:	outs   dx,DWORD PTR ds:[esi]
  4161a5:	imul   ecx,DWORD PTR [ebx+0x5d],0xbe8f38c6
  4161ac:	loop   0x41618a
  4161ae:	mov    cl,0xa5
  4161b0:	add    esi,esi
  4161b2:	imul   edx,DWORD PTR [esi],0xffffffad
  4161b5:	sub    BYTE PTR [ebx-0x4222a51e],bl
  4161bb:	call   0x5cb8d8fe
  4161c0:	jg     0x4161a4
  4161c2:	mov    eax,0xce3499d9
  4161c7:	aam    0x2e
  4161c9:	loope  0x416206
  4161cb:	or     eax,0x28b284d0
  4161d0:	inc    ebp
  4161d1:	mov    ds:0x5db72559,eax
  4161d6:	ins    DWORD PTR es:[edi],dx
  4161d7:	and    DWORD PTR ds:0xc9af69b8,edx
  4161dd:	xor    BYTE PTR [ebp+0x5a],dl
  4161e0:	loopne 0x41618d
  4161e2:	pop    ds
  4161e3:	ror    edx,0x13
  4161e6:	inc    edx
  4161e7:	pop    ds
  4161e8:	icebp  
  4161e9:	xor    DWORD PTR [ecx+0x18],edi
  4161ec:	jge    0x416224
  4161ee:	mov    DWORD PTR [edx],0xbdaacd9c
  4161f4:	push   edi
  4161f5:	clc    
  4161f6:	cli    
  4161f7:	scas   al,BYTE PTR es:[edi]
  4161f8:	das    
  4161f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161fa:	loopne 0x41620e
  4161fc:	add    edi,edx
  4161fe:	aad    0xee
  416200:	jl     0x416212
  416202:	repnz data16 fmul QWORD PTR [ecx+0x59]
  416207:	mov    ds:0x4c6bac2a,al
  41620c:	mov    eax,ds:0xbbde642c
  416211:	pushw  ss
  416213:	add    BYTE PTR [ebp-0x6fdc8575],cl
  416219:	stos   DWORD PTR es:[edi],eax
  41621a:	cmp    ebx,eax
  41621c:	add    BYTE PTR [esi],0x5f
  41621f:	sbb    BYTE PTR ds:0xebdce333,dl
  416225:	outs   dx,DWORD PTR ds:[esi]
  416226:	mov    BYTE PTR [eax-0x41d7c514],bl
  41622c:	ja     0x4161f6
  41622e:	dec    esi
  41622f:	pusha  
  416230:	ret    0xb5a6
  416233:	fwait
  416234:	mov    cl,0x44
  416236:	fnstsw WORD PTR [eax]
  416238:	(bad)  
  416239:	dec    eax
  41623a:	pop    ss
  41623b:	jbe    0x416230
  41623d:	lahf   
  41623e:	out    0x39,al
  416240:	and    eax,DWORD PTR [eax-0x4cbdb557]
  416246:	ror    DWORD PTR [ecx+0x4322d701],1
  41624c:	jl     0x416277
  41624e:	jmp    0x416226
  416250:	sbb    BYTE PTR [edx+ecx*1-0x43],dh
  416254:	jecxz  0x4162d5
  416256:	aas    
  416257:	test   eax,0x748c910e
  41625c:	sbb    ebp,DWORD PTR [edx+0x2a25a6b7]
  416262:	mov    edx,0xede95104
  416267:	hlt    
  416268:	or     al,0xae
  41626a:	mov    cl,0x1e
  41626c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41626d:	jp     0x416215
  41626f:	rol    BYTE PTR [ebx+0x5cef7420],1
  416275:	jp     0x416261
  416277:	or     eax,0x87620dbf
  41627c:	jb     0x4162c1
  41627e:	push   cs
  41627f:	fbstp  TBYTE PTR [ebp+0x740e6458]
  416285:	mov    dh,0xf
  416287:	sub    eax,0x994cd91e
  41628c:	mov    al,0xa
  41628e:	fadd   DWORD PTR [ebx]
  416290:	arpl   WORD PTR [esi-0x1],di
  416293:	(bad)  
  416294:	jecxz  0x416252
  416296:	mov    al,ds:0xf78bd6fd
  41629b:	mov    ebp,?
  41629d:	mov    eax,ds:0xab5d189f
  4162a2:	call   0x86ca:0x12597fc2
  4162a9:	sti    
  4162aa:	xchg   ebx,eax
  4162ab:	pop    ebx
  4162ac:	mov    dl,BYTE PTR [ecx+0x33]
  4162af:	mov    ss,WORD PTR [ecx-0x61]
  4162b2:	mov    esp,0x2197c577
  4162b7:	loopne 0x4162c7
  4162b9:	clc    
  4162ba:	test   al,0xff
  4162bc:	cwde   
  4162bd:	sbb    DWORD PTR [eax+0x4c888e91],ecx
  4162c3:	push   eax
  4162c4:	inc    edx
  4162c5:	mov    bl,0x9f
  4162c7:	icebp  
  4162c8:	aaa    
  4162c9:	psubusb mm5,QWORD PTR [ecx-0x725260a]
  4162d0:	lods   al,BYTE PTR ds:[esi]
  4162d1:	xchg   DWORD PTR [esi+0x1bcd7dd6],edx
  4162d7:	push   ecx
  4162d8:	test   al,0x12
  4162da:	fwait
  4162db:	push   ecx
  4162dc:	add    DWORD PTR [ebp-0x39],esp
  4162df:	mov    esp,?
  4162e1:	(bad)  
  4162e2:	cmc    
  4162e3:	add    al,0xb8
  4162e5:	mov    dh,0xa5
  4162e7:	dec    eax
  4162e8:	enter  0xf95e,0x20
  4162ec:	add    al,0x3d
  4162ee:	xor    BYTE PTR [edi-0x1f803f5c],dh
  4162f4:	inc    ebp
  4162f5:	addr16 imul eax,ebx,0xffffffab
  4162f9:	cli    
  4162fa:	pop    es
  4162fb:	ret    0x527e
  4162fe:	test   BYTE PTR [esi+0x44],bh
  416301:	ins    DWORD PTR es:[edi],dx
  416302:	add    esi,ebx
  416304:	sub    ebp,esp
  416306:	mov    bh,dh
  416308:	sub    al,0xbc
  41630a:	push   esi
  41630b:	sub    esi,DWORD PTR [esi-0x47]
  41630e:	ffree  st(5)
  416310:	mov    ch,0x92
  416312:	pop    ebx
  416313:	dec    ebp
  416314:	mov    bh,0x18
  416316:	shl    DWORD PTR [eax+esi*4+0x5e19b8da],1
  41631d:	sti    
  41631e:	inc    ebx
  41631f:	inc    ebp
  416320:	fwait
  416321:	jb     0x416339
  416323:	xor    al,BYTE PTR [edi+0x1485ffe5]
  416329:	xchg   esi,eax
  41632a:	jg     0x416369
  41632c:	jo     0x4162d5
  41632e:	int    0x6c
  416330:	(bad)  
  416331:	gs lahf 
  416333:	cmp    bh,BYTE PTR [edi]
  416335:	jb     0x416368
  416337:	inc    edi
  416338:	sub    esi,DWORD PTR [eax]
  41633a:	dec    edi
  41633b:	pop    esp
  41633c:	inc    ebx
  41633d:	dec    edi
  41633e:	(bad)  
  41633f:	jl     0x416344
  416341:	cld    
  416342:	es stos DWORD PTR es:[edi],eax
  416344:	cmp    BYTE PTR [eax-0xe],ch
  416347:	in     eax,dx
  416348:	loope  0x4162e2
  41634a:	je     0x41631e
  41634c:	stc    
  41634d:	jo     0x416370
  41634f:	shl    BYTE PTR ds:0xc8a4f28a,cl
  416355:	push   edi
  416356:	jp     0x416318
  416358:	ds (bad) 
  41635a:	mov    ecx,0x44950903
  41635f:	cs mov ecx,0x987cd806
  416365:	sub    eax,0x15b53515
  41636a:	jp     0x4163ab
  41636c:	mov    ebp,0x154828f7
  416371:	and    dh,dl
  416373:	adc    DWORD PTR [ebx+eiz*1+0x4a5f9438],ecx
  41637a:	pop    esp
  41637b:	(bad)  
  41637c:	sti    
  41637d:	scas   eax,DWORD PTR es:[edi]
  41637e:	jns    0x4163e2
  416380:	cli    
  416381:	test   eax,0xdcd60075
  416386:	mov    esp,0x1a1dff3a
  41638b:	std    
  41638c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41638d:	int    0x36
  41638f:	imul   ecx,DWORD PTR [edi],0x4a784c6
  416395:	rcl    BYTE PTR [esi-0x5f7cc8e9],1
  41639b:	inc    edi
  41639c:	or     eax,DWORD PTR [edi+0x6e36445c]
  4163a2:	outs   dx,DWORD PTR ds:[esi]
  4163a3:	fdiv   QWORD PTR [edx]
  4163a5:	push   es
  4163a6:	cld    
  4163a7:	push   ebx
  4163a8:	icebp  
  4163a9:	pop    esi
  4163aa:	push   es
  4163ab:	jno    0x4163fb
  4163ad:	xchg   esp,eax
  4163ae:	mov    BYTE PTR [eax+0x1ba6d166],ch
  4163b4:	hlt    
  4163b5:	cdq    
  4163b6:	pop    edi
  4163b7:	mov    edi,0x1deb09b7
  4163bc:	into   
  4163bd:	pop    es
  4163be:	mov    eax,0xe0d7fb8d
  4163c3:	jecxz  0x4163cc
  4163c5:	xchg   edi,eax
  4163c6:	add    ah,dl
  4163c8:	sbb    BYTE PTR [edi-0x42],ch
  4163cb:	inc    edx
  4163cc:	addr16 pop ecx
  4163ce:	imul   ebx,DWORD PTR [esp+ecx*4-0x38c62322],0xffffffe3
  4163d6:	jae    0x4163d4
  4163d8:	sub    dl,0x8f
  4163db:	test   eax,0xa57e4499
  4163e0:	push   0x188d5b56
  4163e5:	mov    ah,dl
  4163e7:	ss jg  0x41645e
  4163ea:	add    DWORD PTR [eax],esi
  4163ec:	jno    0x416397
  4163ee:	push   cs
  4163ef:	out    0xc5,al
  4163f1:	xchg   ebx,eax
  4163f2:	retf   
  4163f3:	es mov dl,0xb9
  4163f6:	scas   eax,DWORD PTR es:[edi]
  4163f7:	(bad)  
  4163f8:	call   0xde818713
  4163fd:	dec    esp
  4163fe:	and    dl,al
  416400:	jno    0x4163f4
  416402:	sub    edi,DWORD PTR [eax]
  416404:	shl    DWORD PTR [ebx+0x237dbb4],cl
  41640a:	jnp    0x416466
  41640c:	dec    ebp
  41640d:	mov    edi,0xd8963716
  416412:	add    DWORD PTR [ecx+0x20],0x17
  416416:	adc    al,0xa5
  416418:	cmc    
  416419:	jmp    0x416430
  41641b:	dec    esi
  41641c:	stos   DWORD PTR es:[edi],eax
  41641d:	add    cl,BYTE PTR [esi]
  41641f:	or     edx,DWORD PTR [ebp+0x49]
  416422:	lahf   
  416423:	pop    ecx
  416424:	pop    ds
  416425:	xchg   esi,eax
  416426:	xchg   ebp,eax
  416427:	push   ecx
  416428:	imul   BYTE PTR [edx+0x4]
  41642b:	fisubr WORD PTR [ecx+0x61]
  41642e:	xchg   ebp,eax
  41642f:	xor    BYTE PTR [ebp+0x2836f7fa],al
  416435:	push   esi
  416436:	pop    DWORD PTR [esi+0x78b0aeab]
  41643c:	fdiv   QWORD PTR [edx]
  41643e:	stos   BYTE PTR es:[edi],al
  41643f:	bound  esi,QWORD PTR [edx-0x7b]
  416442:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416443:	mov    DWORD PTR [eax-0x1d],edi
  416446:	fistp  QWORD PTR [esi-0x69]
  416449:	xor    edx,DWORD PTR ss:[eax+0x27]
  41644d:	aas    
  41644e:	adc    bh,BYTE PTR [ebx]
  416450:	inc    ebx
  416451:	mov    ds:0xbda33452,al
  416456:	daa    
  416457:	push   edx
  416458:	rol    BYTE PTR [edi+0x71],0x2a
  41645c:	dec    edi
  41645d:	sti    
  41645e:	and    bl,bl
  416460:	aam    0x7a
  416462:	or     edi,0x6f
  416465:	out    dx,eax
  416466:	(bad)  
  416467:	fcomp  st(3)
  416469:	mov    DWORD PTR [edi-0x157a7919],ecx
  41646f:	mov    dl,0x33
  416471:	hlt    
  416472:	loope  0x416423
  416474:	pop    edi
  416475:	xor    ah,BYTE PTR [ebx-0x16]
  416478:	jle    0x416416
  41647a:	pop    eax
  41647b:	mov    WORD PTR [edi+eax*4+0x3],es
  41647f:	aaa    
  416480:	dec    edx
  416481:	push   ecx
  416482:	aam    0x2a
  416484:	gs (bad) 
  416486:	push   0x6082af88
  41648b:	mov    dh,0xa9
  41648d:	loope  0x4164f7
  41648f:	imul   esp,DWORD PTR ds:0x11fdaa4e,0xffffffa9
  416496:	xor    BYTE PTR [esi*1-0x43b3c61],cl
  41649d:	fs add eax,0x114cd076
  4164a3:	mov    eax,ds:0xa44e7fc3
  4164a8:	sub    bh,bl
  4164aa:	cmp    DWORD PTR [ebx-0x4c],esi
  4164ad:	xor    al,0xe1
  4164af:	es mov edx,0x703050b8
  4164b5:	cmp    eax,0x5967ec65
  4164ba:	in     al,dx
  4164bb:	je     0x416451
  4164bd:	jmp    0x45ec:0x2a2cdc5
  4164c4:	outs   dx,BYTE PTR ds:[esi]
  4164c5:	(bad)  
  4164c6:	and    al,0x4f
  4164c8:	stos   DWORD PTR es:[edi],eax
  4164c9:	xchg   ebp,eax
  4164ca:	xchg   ecx,eax
  4164cb:	arpl   WORD PTR ds:[ecx-0x2abdee19],ax
  4164d2:	cmp    eax,0x7278ed73
  4164d7:	ins    DWORD PTR es:[edi],dx
  4164d8:	ret    0x100
  4164db:	lods   eax,DWORD PTR ds:[esi]
  4164dc:	adc    esp,eax
  4164de:	adc    DWORD PTR [edx-0x3362b66c],0xffffff9f
  4164e5:	out    dx,al
  4164e6:	sub    al,0x93
  4164e8:	out    0x8e,al
  4164ea:	add    bh,cl
  4164ec:	mov    edx,0xf6020560
  4164f1:	jno    0x416498
  4164f3:	ficomp DWORD PTR [ebp-0x25c45568]
  4164f9:	cdq    
  4164fa:	enter  0xee8e,0xa5
  4164fe:	imul   edx,esi,0xffffffc3
  416501:	mov    esi,0xa5874377
  416506:	inc    ebp
  416507:	inc    BYTE PTR [esi+0x3c1dd557]
  41650d:	shl    BYTE PTR [ebp-0x62],cl
  416510:	jbe    0x416512
  416512:	xor    eax,0x84adef5f
  416517:	ja     0x416575
  416519:	dec    ebp
  41651a:	imul   ebx,DWORD PTR [ecx+0x63],0x1a827ba7
  416521:	push   es
  416522:	(bad)  
  416523:	jmp    DWORD PTR [edi-0x6510d6e1]
  416529:	mov    dh,0x57
  41652b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41652c:	ret    0xc7e2
  41652f:	add    al,0xea
  416531:	xchg   DWORD PTR [eax+ebp*2+0x6c],esi
  416535:	leave  
  416536:	dec    ebx
  416537:	test   al,0x26
  416539:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41653a:	and    BYTE PTR cs:[ebx],cl
  41653d:	mov    ds:0x2d97eeea,al
  416542:	mov    edi,0x8358e48d
  416547:	ins    DWORD PTR es:[edi],dx
  416548:	add    esp,DWORD PTR [edx+edx*2]
  41654b:	push   esp
  41654c:	sub    al,0x88
  41654e:	ror    DWORD PTR [edi+0x5e],0xa
  416552:	push   ebx
  416553:	ret    
  416554:	nop
  416555:	rcl    BYTE PTR [edi+0x16],1
  416558:	sub    bh,BYTE PTR [ebp-0x60]
  41655b:	sub    ebp,edi
  41655d:	out    0xdd,al
  41655f:	loopne 0x41658e
  416561:	aaa    
  416562:	mov    esi,0xe118c245
  416567:	jecxz  0x4165c3
  416569:	(bad)  
  41656a:	pushf  
  41656b:	ret    0x380e
  41656e:	int    0x40
  416570:	loop   0x41653c
  416572:	sub    BYTE PTR [edx-0x77335faa],bl
  416578:	pop    ebp
  416579:	aad    0xaa
  41657b:	sub    eax,0x173a4964
  416580:	pushf  
  416581:	jg     0x4165a0
  416583:	outs   dx,DWORD PTR ds:[esi]
  416584:	xchg   ebp,eax
  416585:	dec    eax
  416586:	lods   eax,DWORD PTR ds:[esi]
  416587:	jae    0x41658a
  416589:	call   0x4209638d
  41658e:	fdivr  st(1),st
  416590:	push   esi
  416591:	(bad)  
  416592:	jp     0x41659c
  416594:	adc    DWORD PTR [ebx+ebx*4+0x20],ecx
  416598:	dec    esp
  416599:	push   0xffffff9f
  41659b:	mov    esp,0xa87aaced
  4165a0:	jns    0x416525
  4165a2:	inc    ecx
  4165a3:	stos   DWORD PTR es:[edi],eax
  4165a4:	retf   0x963d
  4165a7:	cli    
  4165a8:	jo     0x4165bf
  4165aa:	repnz outs dx,DWORD PTR ds:[esi]
  4165ac:	cmp    DWORD PTR [eax],edi
  4165ae:	xor    eax,0x923a6e5
  4165b3:	mov    ch,0x2d
  4165b5:	or     DWORD PTR [eax],0x516a98e5
  4165bb:	bound  esp,QWORD PTR [edi+0xf]
  4165be:	gs ja  0x416569
  4165c1:	clc    
  4165c2:	rcl    BYTE PTR [esi-0x77],cl
  4165c5:	sbb    eax,ecx
  4165c7:	add    edx,DWORD PTR [ebx+0x26d282f4]
  4165cd:	mov    al,0xf8
  4165cf:	inc    edi
  4165d0:	iret   
  4165d1:	shr    eax,0x36
  4165d4:	adc    bh,bh
  4165d6:	xor    eax,0xec583051
  4165db:	and    al,0xf6
  4165dd:	push   esp
  4165de:	outs   dx,BYTE PTR ds:[esi]
  4165df:	jecxz  0x41658e
  4165e1:	cmp    ebp,edx
  4165e3:	and    eax,0x3a12e82e
  4165e8:	btc    DWORD PTR [ebp-0x26],ecx
  4165ec:	jbe    0x4165dd
  4165ee:	(bad)  
  4165f0:	addr16 mov bl,0x5d
  4165f3:	imul   ecx,DWORD PTR [esi],0x42ac1f30
  4165f9:	ds jbe 0x416614
  4165fc:	sar    BYTE PTR [eax],cl
  4165fe:	ja     0x4165a6
  416600:	push   esi
  416601:	push   ds
  416602:	and    al,0xbd
  416604:	out    0x30,eax
  416606:	inc    eax
  416607:	jge    0x4165bc
  416609:	std    
  41660a:	inc    BYTE PTR ds:0xc0b2d48f
  416610:	xchg   BYTE PTR [edx-0xb],dl
  416613:	add    ch,dl
  416615:	rcr    BYTE PTR [ecx-0x373224fc],0x5e
  41661c:	xchg   DWORD PTR [ecx-0x6d61d5ec],edi
  416622:	adc    al,0xc7
  416624:	test   BYTE PTR [esi-0xf44d01c],0x33
  41662b:	mov    eax,0xdf2214f9
  416630:	and    DWORD PTR [edx+ebp*8],eax
  416633:	jle    0x416600
  416635:	sbb    al,0x33
  416637:	sbb    eax,0x73481345
  41663c:	(bad)  
  41663d:	repz mov al,ds:0xc2ac6843
  416643:	push   0xe34ac8b0
  416648:	mov    ch,0xfd
  41664a:	push   ss
  41664b:	jge    0x416610
  41664d:	jne    0x4165dd
  41664f:	(bad)  
  416650:	loopne 0x416607
  416652:	or     dl,BYTE PTR [edx-0x32083a96]
  416658:	cmp    cl,BYTE PTR [ebx]
  41665a:	add    eax,0xd4006687
  41665f:	pusha  
  416660:	xchg   esi,eax
  416661:	mov    eax,ds:0xf5c5de1f
  416666:	jmp    0x7993347a
  41666b:	loop   0x4165f8
  41666d:	xchg   ebp,eax
  41666e:	push   ss
  41666f:	aad    0xef
  416671:	into   
  416672:	jnp    0x4166e6
  416674:	add    BYTE PTR [eax+0x7f20665e],dl
  41667a:	mov    esi,DWORD PTR [eax]
  41667c:	outs   dx,BYTE PTR ds:[esi]
  41667d:	pop    edx
  41667e:	daa    
  41667f:	xor    ebx,DWORD PTR [esi-0x5650cda7]
  416685:	scas   al,BYTE PTR es:[edi]
  416686:	mov    cl,0xdd
  416688:	push   ecx
  416689:	outs   dx,DWORD PTR ds:[esi]
  41668a:	inc    ebx
  41668b:	push   0xffffffa7
  41668d:	mov    al,0x57
  41668f:	mov    esi,0xe319cb1c
  416694:	and    dl,BYTE PTR [edi-0x65afe654]
  41669a:	test   eax,0xdd1a0ba6
  41669f:	test   ecx,ecx
  4166a1:	ja     0x416625
  4166a3:	pop    edx
  4166a4:	retf   0x7276
  4166a7:	loopne 0x416690
  4166a9:	dec    esi
  4166aa:	add    esp,eax
  4166ac:	push   esp
  4166ad:	pusha  
  4166ae:	outs   dx,DWORD PTR ds:[esi]
  4166af:	pusha  
  4166b0:	shr    edx,1
  4166b2:	js     0x41671d
  4166b4:	shr    ebx,0x14
  4166b7:	xchg   esi,eax
  4166b8:	xor    BYTE PTR [esi+eax*2],bh
  4166bb:	jns    0x416651
  4166bd:	jmp    0x2eb6:0xc8c18a02
  4166c4:	mov    ecx,DWORD PTR [ebp+0x4fcace58]
  4166ca:	jp     0x416712
  4166cc:	mov    ch,0xf6
  4166ce:	sti    
  4166cf:	xor    BYTE PTR [edx+0x60],dl
  4166d2:	adc    eax,0xe597437d
  4166d7:	lods   eax,DWORD PTR ds:[esi]
  4166d8:	push   cs
  4166d9:	push   esp
  4166da:	xor    BYTE PTR [esi+0x68],ah
  4166dd:	lock dec edi
  4166df:	add    al,0xca
  4166e1:	es jnp 0x416703
  4166e4:	lock jns 0x41671a
  4166e7:	int3   
  4166e8:	jbe    0x4166e2
  4166ea:	push   edx
  4166eb:	out    dx,eax
  4166ec:	jge    0x41670c
  4166ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166ef:	lods   al,BYTE PTR ds:[esi]
  4166f0:	mov    DWORD PTR [edx],ebp
  4166f2:	or     ecx,DWORD PTR [ecx+edi*4]
  4166f5:	sub    al,0x97
  4166f7:	xchg   esp,eax
  4166f8:	xchg   ecx,eax
  4166f9:	in     eax,0x18
  4166fb:	rol    DWORD PTR [ebp-0x2c1cc98e],cl
  416701:	and    ebx,DWORD PTR gs:[edi]
  416704:	scas   al,BYTE PTR es:[edi]
  416705:	xor    DWORD PTR [edi],ebp
  416707:	cmp    DWORD PTR [ebx],ebp
  416709:	retf   
  41670a:	jae    0x416696
  41670c:	jecxz  0x4166ba
  41670e:	(bad)
  416712:	xor    edx,DWORD PTR ds:0x8ccee82e
  416718:	push   ebx
  416719:	in     eax,dx
  41671a:	jb     0x416762
  41671c:	out    0x3f,eax
  41671e:	jg     0x41678f
  416720:	dec    eax
  416721:	mov    al,0xa
  416723:	pop    ss
  416724:	and    BYTE PTR [ecx-0x3e],0x3b
  416728:	into   
  416729:	and    esi,DWORD PTR [edi-0x2e61400a]
  41672f:	call   0x98ac:0xfaaf9746
  416736:	fs pusha 
  416738:	popa   
  416739:	aam    0x92
  41673b:	aam    0x18
  41673d:	and    al,0x2
  41673f:	es stc 
  416741:	mov    al,ah
  416743:	in     al,dx
  416744:	sub    eax,0x6fd4c7e2
  416749:	mov    dh,0xea
  41674b:	ficom  DWORD PTR [ebx]
  41674d:	and    ebp,DWORD PTR [eax-0x80]
  416750:	inc    edi
  416751:	or     edi,ebx
  416753:	pop    edx
  416754:	push   esi
  416755:	push   cs
  416756:	pop    esi
  416757:	pop    ecx
  416758:	std    
  416759:	xor    esp,esp
  41675b:	inc    BYTE PTR ds:0x814c19cd
  416761:	cmp    edx,ebp
  416763:	xchg   edx,eax
  416764:	or     eax,DWORD PTR [esi-0x25382086]
  41676a:	mov    eax,ds:0x73f3a7a7
  41676f:	sbb    eax,0xa07bd905
  416774:	je     0x416703
  416776:	ins    DWORD PTR es:[edi],dx
  416777:	jmp    0xef51:0xbb5f9f01
  41677e:	jle    0x4167b2
  416780:	jae    0x4167b8
  416782:	cmp    dh,bl
  416784:	mov    esi,0xf09aeadc
  416789:	sub    ecx,DWORD PTR [eax-0x52]
  41678c:	in     eax,0xf1
  41678e:	jmp    0x4167fa
  416790:	int3   
  416791:	out    0xcc,eax
  416793:	push   0x2dcd8277
  416798:	xchg   ecx,eax
  416799:	setnp  dh
  41679c:	mov    ah,0x40
  41679e:	pushf  
  41679f:	adc    eax,0x38d28acf
  4167a4:	inc    ecx
  4167a5:	pop    ebx
  4167a6:	test   eax,0x864502a3
  4167ab:	mov    eax,DWORD PTR [ebx]
  4167ad:	mov    BYTE PTR [eax],ch
  4167af:	(bad)
  4167b3:	gs jp  0x4167ce
  4167b6:	imul   ebp,esi,0xb04ef6d
  4167bc:	xor    DWORD PTR [eax-0x25],0xffffff96
  4167c0:	xchg   ebp,eax
  4167c1:	imul   ebp,DWORD PTR [esi-0xa],0x97dbdda5
  4167c8:	mov    BYTE PTR [eax],dh
  4167ca:	dec    edx
  4167cb:	and    al,0xd0
  4167cd:	shr    edi,cl
  4167cf:	test   BYTE PTR [ecx+ebp*8+0x6b],dh
  4167d3:	pop    ds
  4167d4:	inc    eax
  4167d5:	mov    eax,ds:0xb8f018d5
  4167da:	sar    BYTE PTR [ebx+0x63],0xf0
  4167de:	out    dx,eax
  4167df:	les    esi,FWORD PTR [ebp+0x5a9c507c]
  4167e5:	add    cl,bl
  4167e7:	inc    ebp
  4167e8:	fisub  DWORD PTR ds:0x813c0300
  4167ee:	sub    al,0x2a
  4167f0:	mov    ecx,0xba0a545c
  4167f5:	jge    0x416870
  4167f7:	(bad)  
  4167f8:	clc    
  4167f9:	inc    edx
  4167fa:	in     eax,dx
  4167fb:	out    dx,al
  4167fc:	jmp    0x416801
  4167fe:	jo     0x416829
  416800:	xchg   DWORD PTR [eax],esp
  416802:	jg     0x41682c
  416804:	xchg   dl,dh
  416806:	addr16 mov eax,0xe4cc4e57
  41680c:	xor    bl,bh
  41680e:	xchg   esp,eax
  41680f:	inc    ebp
  416810:	dec    BYTE PTR [eax+0x36c98623]
  416816:	int    0xfc
  416818:	rol    DWORD PTR [ecx-0x42cde540],1
  41681e:	dec    eax
  41681f:	inc    edi
  416820:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416821:	sub    DWORD PTR [eax-0x4c],ecx
  416824:	or     DWORD PTR [esp+edi*8+0x53cf9d56],ecx
  41682b:	fst    DWORD PTR [esi+0x752f8b44]
  416831:	sub    ebx,DWORD PTR [edx]
  416833:	mov    ch,0xc4
  416835:	inc    edx
  416836:	sbb    ch,cl
  416838:	shl    DWORD PTR [edx+edi*2],cl
  41683b:	psubq  mm2,QWORD PTR ds:0xd92f8087
  416842:	fstp   QWORD PTR [ebx+0xf]
  416845:	or     BYTE PTR [eax+0x35],0x1b
  416849:	imul   esp,esp,0x782fe866
  41684f:	test   BYTE PTR [edx],dl
  416851:	lods   eax,DWORD PTR ds:[esi]
  416852:	mov    ah,0xa3
  416854:	sbb    cl,bl
  416856:	lock daa 
  416858:	sbb    eax,0x6190399c
  41685d:	(bad)  
  41685e:	cli    
  41685f:	push   cs
  416860:	out    dx,al
  416861:	pop    edi
  416862:	pop    ds
  416863:	xchg   DWORD PTR [ecx-0x77],ebp
  416866:	jb     0x416800
  416868:	add    dh,BYTE PTR [esi-0x52]
  41686b:	(bad)  
  41686c:	adc    dh,ah
  41686e:	cmp    al,0xd3
  416870:	cmp    dh,BYTE PTR [eax]
  416872:	mov    dl,0xbd
  416874:	mov    al,ds:0x464aae94
  416879:	ret    
  41687a:	into   
  41687b:	inc    esp
  41687c:	rol    BYTE PTR [ecx],cl
  41687e:	cmp    eax,ecx
  416880:	outs   dx,DWORD PTR ds:[esi]
  416881:	push   0x90069a9c
  416886:	sbb    edx,edi
  416888:	or     edi,DWORD PTR [ecx-0x51]
  41688b:	mov    DWORD PTR [edx],ebx
  41688d:	and    ebx,DWORD PTR [edi]
  41688f:	fnstenv [ebp+0x2234730b]
  416895:	(bad)  
  416896:	or     ebx,DWORD PTR [edx]
  416898:	and    dh,bl
  41689a:	adc    eax,0x3e0e6113
  41689f:	cmp    esp,DWORD PTR [esi]
  4168a1:	xchg   ecx,eax
  4168a2:	std    
  4168a3:	bound  ecx,QWORD PTR [bx-0x2715]
  4168a8:	fwait
  4168a9:	or     ah,BYTE PTR [esi+0x73]
  4168ac:	sar    al,1
  4168ae:	mov    DWORD PTR [ebp-0x58],edx
  4168b1:	mov    edx,DWORD PTR [ebp+0x8]
  4168b4:	mov    ebx,DWORD PTR [ebp-0x54]
  4168b7:	add    edx,0x64f893
  4168bd:	or     edx,ebx
  4168bf:	mov    DWORD PTR [ebp-0x54],edx
  4168c2:	mov    edx,DWORD PTR [ebp+0x8]
  4168c5:	jmp    0x418c66
  4168ca:	push   edi
  4168cb:	gs stos DWORD PTR es:[edi],eax
  4168cd:	cwde   
  4168ce:	jnp    0x416868
  4168d0:	inc    edi
  4168d1:	jns    0x4168fa
  4168d3:	in     eax,dx
  4168d4:	fistp  DWORD PTR [eax+0x6a]
  4168d7:	nop
  4168d8:	and    eax,0x7d3bbe57
  4168dd:	jp     0x4168dd
  4168df:	pop    edi
  4168e0:	jp     0x41695c
  4168e2:	xor    esi,ecx
  4168e4:	mov    BYTE PTR [esi],dl
  4168e6:	nop
  4168e7:	sbb    DWORD PTR [ebx],eax
  4168e9:	inc    edx
  4168ea:	lds    esi,FWORD PTR ds:0xd9ab0db6
  4168f0:	inc    esp
  4168f1:	push   cs
  4168f2:	fwait
  4168f3:	fs ja  0x4168ef
  4168f6:	retf   
  4168f7:	mov    ds:0x10a6cd7f,al
  4168fc:	dec    eax
  4168fd:	push   ebp
  4168fe:	push   0xffffffe9
  416900:	xor    cl,BYTE PTR [ebx+0x46]
  416903:	and    al,0xdb
  416905:	repnz (bad) 
  416908:	es xchg esp,eax
  41690a:	pop    ebx
  41690b:	cld    
  41690c:	(bad)  
  41690d:	std    
  41690e:	fistp  WORD PTR [esi-0xcb9c7dd]
  416914:	int3   
  416915:	int    0x38
  416917:	cs into 
  416919:	push   esp
  41691a:	dec    ebp
  41691b:	sbb    DWORD PTR [edx-0x3f],ebx
  41691e:	ins    BYTE PTR es:[edi],dx
  41691f:	adc    DWORD PTR [eax+0x2f8c6136],eax
  416925:	cli    
  416926:	daa    
  416927:	jb     0x416933
  416929:	cld    
  41692a:	cmc    
  41692b:	mov    eax,0x6a6da85f
  416930:	push   edi
  416931:	pop    eax
  416932:	and    DWORD PTR [ecx+0x63de6d45],ebp
  416938:	add    dl,BYTE PTR [esp+esi*8+0x30a4f4b3]
  41693f:	mov    ecx,0x2c5bc9d8
  416944:	outs   dx,DWORD PTR ds:[esi]
  416945:	jns    0x416947
  416947:	cmp    dl,0xa1
  41694a:	mov    BYTE PTR [esi+0x1cb1a1f3],bh
  416950:	add    edx,DWORD PTR [edx-0x23]
  416953:	mov    cl,0xb1
  416955:	lock fs dec ebp
  416958:	(bad)  
  41695a:	ror    DWORD PTR [ecx+ecx*2],cl
  41695d:	fld    TBYTE PTR [edi-0x51]
  416960:	dec    ebp
  416961:	in     al,dx
  416962:	inc    ecx
  416963:	and    eax,0xe5d02d96
  416968:	jecxz  0x416900
  41696a:	retf   
  41696b:	pushf  
  41696c:	inc    edx
  41696d:	lahf   
  41696e:	inc    edx
  41696f:	jge    0x416904
  416971:	mov    edx,DWORD PTR [edx-0x1]
  416974:	loopne 0x416959
  416976:	sbb    BYTE PTR [ecx],dl
  416978:	xchg   esi,eax
  416979:	pop    esp
  41697a:	jns    0x4169a0
  41697c:	stc    
  41697d:	or     al,dh
  41697f:	(bad)  
  416980:	xchg   ebx,eax
  416981:	sbb    ch,BYTE PTR [eax+0x3542fcc8]
  416987:	out    dx,al
  416988:	add    ebp,DWORD PTR [ecx+ecx*4]
  41698b:	xchg   BYTE PTR [ebx+0x7e],dh
  41698e:	or     al,0x8b
  416990:	repz test al,0x16
  416993:	push   edx
  416994:	add    al,0xbd
  416996:	sub    esi,DWORD PTR [ecx]
  416998:	sbb    esp,esp
  41699a:	sbb    ecx,DWORD PTR [edi-0x10]
  41699d:	inc    edi
  41699e:	inc    ebp
  41699f:	and    DWORD PTR [eax],0x6a24845c
  4169a5:	pop    esp
  4169a6:	je     0x416957
  4169a8:	jo     0x416a1f
  4169aa:	xchg   ecx,eax
  4169ab:	jns    0x4169d5
  4169ad:	sbb    DWORD PTR [esi+0x5f2e3dc8],0x683e66be
  4169b7:	mov    bl,BYTE PTR [edi]
  4169b9:	push   ebx
  4169ba:	push   0x4e
  4169bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169bd:	clc    
  4169be:	call   FWORD PTR ds:0x67f7d0fd
  4169c4:	and    bl,ah
  4169c6:	shl    BYTE PTR [edi],0x1b
  4169c9:	test   eax,0x86ab6f84
  4169ce:	sbb    al,0xf9
  4169d0:	inc    esp
  4169d1:	cmp    ebx,DWORD PTR [esi+0x16]
  4169d4:	add    BYTE PTR [ebx-0x19a50658],0xf
  4169db:	sub    BYTE PTR [ecx+0x7c74b1c9],dh
  4169e1:	repz xlat BYTE PTR ds:[ebx]
  4169e3:	mov    WORD PTR [ecx-0x4fbd6829],?
  4169e9:	xchg   ebp,eax
  4169ea:	inc    BYTE PTR [edx-0x21749494]
  4169f0:	out    0xa3,eax
  4169f2:	jns    0x416a28
  4169f4:	fdivr  DWORD PTR ds:0x3b2faa99
  4169fa:	jg     0x4169ec
  4169fc:	mov    ebx,0x1c9bff3f
  416a01:	jns    0x416a3b
  416a03:	push   edx
  416a04:	retf   0x9edc
  416a07:	pop    esp
  416a08:	jne    0x416a47
  416a0a:	fistp  DWORD PTR [esi+0x374b4f59]
  416a10:	adc    edx,edi
  416a12:	add    al,0x33
  416a14:	rcr    dl,cl
  416a16:	and    al,0x2b
  416a18:	adc    eax,0x7b536858
  416a1d:	mov    esi,0x9f7d101
  416a22:	aam    0x16
  416a24:	sub    edi,DWORD PTR [esi+0x58]
  416a27:	enter  0x68fa,0xda
  416a2b:	sahf   
  416a2c:	imul   edx,edi,0xd
  416a2f:	jb     0x4169c4
  416a31:	pop    eax
  416a32:	xchg   DWORD PTR [ebp-0x5f],ecx
  416a35:	fdivr  DWORD PTR [ebp+0x4a]
  416a38:	mov    ds:0x260bfa0e,eax
  416a3d:	or     al,0x3d
  416a3f:	dec    ebx
  416a40:	sub    bh,ah
  416a42:	xor    esi,ebp
  416a44:	and    BYTE PTR [ebx-0x16215013],dh
  416a4a:	pop    esp
  416a4b:	xchg   BYTE PTR [esi+0x5b],dl
  416a4e:	rcl    BYTE PTR [esp+edi*2-0x2],cl
  416a52:	sbb    DWORD PTR [ebx],ebp
  416a54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a55:	repz aas 
  416a57:	daa    
  416a58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a59:	jg     0x416a1c
  416a5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a5c:	shr    BYTE PTR [ebx+0x56f14de3],cl
  416a62:	and    ch,BYTE PTR [edx+0x2a5bb33d]
  416a68:	test   eax,0x73aceef
  416a6d:	stos   BYTE PTR es:[edi],al
  416a6e:	in     eax,dx
  416a6f:	xchg   ecx,eax
  416a70:	in     eax,dx
  416a71:	sub    DWORD PTR [esi],edx
  416a73:	dec    ebp
  416a74:	mov    eax,ds:0x2d1ccc58
  416a79:	mov    ?,ecx
  416a7b:	mov    esi,0x1a218d8d
  416a80:	mov    eax,eax
  416a82:	sub    BYTE PTR [edx-0x35be8291],dh
  416a88:	retf   
  416a89:	sub    al,0xa3
  416a8b:	fistp  WORD PTR [ecx-0x1d59fe47]
  416a91:	shl    BYTE PTR [ebx+0x15db3a1],cl
  416a97:	jmp    0x4988f8a4
  416a9c:	das    
  416a9d:	sbb    BYTE PTR [esi],al
  416a9f:	es jmp 0x6fd:0xf365d1b9
  416aa7:	nop
  416aa8:	cmp    ah,BYTE PTR [eax+0x118ddf0b]
  416aae:	mov    DWORD PTR [esi+0x4967211b],ebp
  416ab4:	push   es
  416ab5:	or     eax,0xe9af6d78
  416aba:	push   esi
  416abb:	adc    al,0x8e
  416abd:	mov    bl,0x54
  416abf:	jbe    0x416b1d
  416ac1:	shr    DWORD PTR [ebx+0x76],1
  416ac4:	fisub  WORD PTR [esi+0x1380569b]
  416aca:	jp     0x416b37
  416acc:	xor    bl,BYTE PTR [ecx+0x7e325c29]
  416ad2:	retf   
  416ad3:	adc    ch,BYTE PTR [ecx-0x29]
  416ad6:	mov    esp,0xab2ee1c
  416adb:	xchg   BYTE PTR [esi],bh
  416add:	sbb    al,0x1e
  416adf:	int    0xbc
  416ae1:	mov    ch,0x6c
  416ae3:	lods   eax,DWORD PTR ds:[esi]
  416ae4:	stos   BYTE PTR es:[edi],al
  416ae5:	popa   
  416ae6:	loope  0x416b1c
  416ae8:	push   ds
  416ae9:	div    dl
  416aeb:	jbe    0x416ae5
  416aed:	adc    al,bh
  416aef:	cli    
  416af0:	xchg   esp,eax
  416af2:	pop    ebx
  416af3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416af4:	ja     0x416b20
  416af6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416af7:	aam    0x2d
  416af9:	outs   dx,DWORD PTR ds:[si]
  416afb:	xor    dl,0x35
  416afe:	lods   al,BYTE PTR ds:[esi]
  416aff:	sbb    al,BYTE PTR [ecx+0x43374f41]
  416b05:	jnp    0x416af7
  416b07:	pop    es
  416b08:	test   BYTE PTR [esi+edx*4-0x6b64d80a],ah
  416b0f:	or     eax,0x2148148d
  416b14:	popf   
  416b15:	push   es
  416b16:	fdivr  QWORD PTR [edx]
  416b18:	pop    ebp
  416b19:	push   esp
  416b1a:	sbb    DWORD PTR [ecx-0x60],eax
  416b1d:	lods   eax,DWORD PTR ds:[esi]
  416b1e:	(bad)  
  416b1f:	adc    al,0x59
  416b21:	out    dx,eax
  416b22:	idiv   DWORD PTR ds:0x8aa90154
  416b28:	add    ecx,edx
  416b2a:	imul   ebx,DWORD PTR [edi+0x32],0xffffffc4
  416b2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b2f:	pop    edx
  416b30:	jmp    0xb394b4a3
  416b35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b36:	jge    0x416ad0
  416b38:	mov    ebp,0xb1df5490
  416b3d:	clc    
  416b3e:	pushf  
  416b3f:	(bad)  
  416b40:	shr    DWORD PTR [esi+0x41],1
  416b43:	mov    DWORD PTR [eax-0x3bb851cc],ebx
  416b49:	rcl    BYTE PTR ds:0xec8d87c6,0xa1
  416b50:	scas   al,BYTE PTR es:[edi]
  416b51:	popa   
  416b52:	out    dx,al
  416b53:	shl    DWORD PTR [eax],cl
  416b55:	sub    bl,BYTE PTR [esi+esi*1+0x3600b626]
  416b5c:	push   ds
  416b5d:	push   es
  416b5e:	sbb    ch,BYTE PTR [ecx+0x254980ef]
  416b64:	stos   DWORD PTR es:[edi],eax
  416b65:	cmp    DWORD PTR [ebp+0x28cf6a79],eax
  416b6b:	mov    dh,0x75
  416b6d:	daa    
  416b6e:	jl     0x416b44
  416b70:	rol    DWORD PTR [ecx+edi*4+0x79f7d807],1
  416b77:	rcl    DWORD PTR [edx+0x33],0x8d
  416b7b:	lods   al,BYTE PTR ds:[esi]
  416b7c:	mov    ebx,0x59c6809c
  416b81:	dec    edi
  416b82:	retf   
  416b83:	clc    
  416b84:	fnstcw WORD PTR [edi]
  416b86:	es pop esi
  416b88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b89:	std    
  416b8a:	into   
  416b8b:	out    dx,al
  416b8c:	jecxz  0x416b85
  416b8e:	ret    0x749c
  416b91:	test   al,0x47
  416b93:	test   al,0x8
  416b95:	push   DWORD PTR [ebx+0x38]
  416b98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b99:	adc    BYTE PTR [ebx-0x55f23f6c],al
  416b9f:	inc    ebx
  416ba0:	(bad)  
  416ba2:	inc    ebp
  416ba3:	sbb    ecx,DWORD PTR [ebx+eiz*4+0x4b]
  416ba7:	sub    BYTE PTR [ebx+0x23],al
  416baa:	arpl   WORD PTR [edi],cx
  416bac:	mov    bh,0xc8
  416bae:	add    al,dl
  416bb0:	test   al,0x59
  416bb2:	or     bh,bl
  416bb4:	or     DWORD PTR [eax+0x726b350c],eax
  416bba:	jmp    0x4819:0x4b9af5c8
  416bc1:	or     ecx,esi
  416bc3:	inc    edx
  416bc4:	dec    esp
  416bc5:	(bad)  
  416bc6:	int    0x6e
  416bc8:	mov    ds:0xf19d8b8f,al
  416bcd:	inc    ebx
  416bce:	clc    
  416bcf:	fidivr WORD PTR [eax]
  416bd1:	mov    bh,0x57
  416bd3:	ror    BYTE PTR [esi+edi*4+0x64f20c04],0x46
  416bdb:	inc    edi
  416bdc:	into   
  416bdd:	xor    al,0x70
  416bdf:	sbb    eax,DWORD PTR [edi+0xef20367]
  416be5:	xchg   ebp,eax
  416be6:	pop    edx
  416be7:	fistp  WORD PTR [eax]
  416be9:	adc    DWORD PTR [ebp+0x48],edx
  416bec:	xchg   ebp,eax
  416bed:	and    DWORD PTR [ebx-0x74],edx
  416bf0:	and    al,0x2b
  416bf2:	cmp    dh,BYTE PTR [eax+edx*2]
  416bf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bf6:	xchg   esp,eax
  416bf7:	ret    0x27bd
  416bfa:	cdq    
  416bfb:	pusha  
  416bfc:	out    0x9c,eax
  416bfe:	scas   al,BYTE PTR es:[edi]
  416bff:	mov    bh,BYTE PTR [edx-0x47]
  416c02:	adc    DWORD PTR [edx],esp
  416c04:	in     al,0xe7
  416c06:	jns    0x416c72
  416c08:	mov    al,0x8b
  416c0a:	or     dl,BYTE PTR [edi]
  416c0c:	mov    bl,0xda
  416c0e:	jmp    0x416c67
  416c10:	mov    ah,0xfe
  416c12:	mov    cl,BYTE PTR [edx]
  416c14:	xchg   ebx,eax
  416c15:	xor    al,0x1f
  416c17:	pushf  
  416c18:	(bad)  
  416c1a:	jmp    0x20ef:0xca4cd8c5
  416c21:	loopne 0x416c8b
  416c23:	push   DWORD PTR [ebp+0x42]
  416c26:	daa    
  416c27:	mov    ebp,0xc0d8e311
  416c2c:	sbb    bl,BYTE PTR [eax+0x411005a8]
  416c32:	jle    0x416bf3
  416c34:	test   BYTE PTR [esi],0x28
  416c37:	out    dx,al
  416c38:	lea    edi,[eax-0x3f]
  416c3b:	xor    al,0x20
  416c3d:	dec    esi
  416c3e:	hlt    
  416c3f:	push   0x23
  416c41:	dec    eax
  416c42:	inc    esp
  416c43:	repnz dec esi
  416c45:	retf   0x5529
  416c48:	imul   esp,esi,0x6a
  416c4b:	in     eax,dx
  416c4c:	dec    ebx
  416c4d:	daa    
  416c4e:	fisttp QWORD PTR [ecx+eiz*1]
  416c51:	inc    ebx
  416c52:	xor    eax,0x4e0e9aa5
  416c57:	push   0xf43e3404
  416c5c:	xchg   ecx,eax
  416c5d:	shl    BYTE PTR [ebx+0x78ef887],0x1c
  416c64:	push   esp
  416c65:	cdq    
  416c66:	jp     0x416bf5
  416c68:	jp     0x416c76
  416c6a:	retf   0x8a32
  416c6d:	ret    0x1952
  416c70:	sahf   
  416c71:	mov    ebp,0xb4ff4899
  416c76:	call   0xf66c:0x9ac7730a
  416c7d:	push   edi
  416c7e:	dec    ebp
  416c7f:	xchg   edx,eax
  416c80:	ins    DWORD PTR es:[edi],dx
  416c81:	dec    ebx
  416c82:	cmc    
  416c83:	jmp    0xebb:0x22046006
  416c8a:	ja     0x416cb4
  416c8c:	js     0x416cd8
  416c8e:	int3   
  416c8f:	retf   
  416c90:	div    DWORD PTR [edi-0x56]
  416c93:	clc    
  416c94:	loop   0x416c3d
  416c96:	pop    esp
  416c97:	cmp    al,0x43
  416c99:	sbb    eax,0x92670747
  416c9e:	inc    ebx
  416c9f:	outs   dx,BYTE PTR ds:[esi]
  416ca0:	leave  
  416ca1:	mov    ah,0xc0
  416ca3:	mov    al,ds:0xf47bd1e1
  416ca8:	cli    
  416ca9:	ret    0xb4ea
  416cac:	xchg   esp,eax
  416cad:	gs dec ecx
  416caf:	jge    0x416cf1
  416cb1:	xor    DWORD PTR [edx+ebp*1-0x58532919],0x65
  416cb9:	shl    BYTE PTR [ecx+0x6e7c65b7],0x64
  416cc0:	adc    BYTE PTR [edx+0x59],dl
  416cc3:	sahf   
  416cc4:	dec    edi
  416cc5:	mov    ds:0xd3bdecf3,eax
  416cca:	push   ebx
  416ccb:	mov    ebp,0xf4109614
  416cd0:	mov    bh,0x21
  416cd2:	mov    eax,0xd46e8053
  416cd7:	add    al,0xae
  416cd9:	jno    0x416c71
  416cdb:	shl    DWORD PTR [eax-0x27140756],1
  416ce1:	std    
  416ce2:	pop    ss
  416ce3:	in     al,0xad
  416ce5:	rcl    dl,0x37
  416ce8:	test   DWORD PTR ds:0x2fee095b,edx
  416cee:	leave  
  416cef:	xchg   BYTE PTR ds:0xc17ca10d,cl
  416cf5:	inc    esp
  416cf6:	push   ebp
  416cf7:	test   al,0x5
  416cf9:	dec    esi
  416cfa:	lods   eax,DWORD PTR ds:[esi]
  416cfb:	mov    dh,0x27
  416cfd:	outs   dx,DWORD PTR ds:[esi]
  416cfe:	jno    0x416d0c
  416d00:	and    al,0x47
  416d02:	inc    ebx
  416d03:	jle    0x416d4b
  416d05:	mov    eax,0x77f53723
  416d0a:	push   ds
  416d0b:	jo     0x416cae
  416d0d:	(bad)  
  416d0e:	mov    edx,0xbc8c2e51
  416d13:	jge    0x416cb4
  416d15:	push   es
  416d16:	lods   eax,DWORD PTR ds:[esi]
  416d17:	sub    BYTE PTR [eax+0x74],ch
  416d1a:	push   edi
  416d1b:	xor    DWORD PTR [ebx-0x34],esp
  416d1e:	ret    
  416d1f:	mov    ch,0x19
  416d21:	out    dx,al
  416d22:	mov    bh,0x9d
  416d24:	out    0x46,eax
  416d26:	and    bh,BYTE PTR [esi]
  416d28:	repnz pop edi
  416d2a:	pop    esp
  416d2b:	out    0x3b,al
  416d2d:	(bad)  
  416d2e:	pushf  
  416d2f:	mov    al,ds:0x801f1e92
  416d34:	fidivr DWORD PTR [eax-0x6]
  416d37:	sbb    al,0xff
  416d39:	add    bl,bl
  416d3b:	mov    bl,0x98
  416d3d:	stos   BYTE PTR es:[edi],al
  416d3e:	push   0xffffffbb
  416d40:	mov    ch,0xa
  416d42:	xor    al,0x1
  416d44:	jmp    0xf05ffe6d
  416d49:	js     0x416da1
  416d4b:	inc    ebx
  416d4c:	shl    BYTE PTR [edi],cl
  416d4e:	(bad)  
  416d4f:	xor    BYTE PTR [eax+ebp*4+0x30bc8509],cl
  416d56:	cmp    ebp,DWORD PTR [edi-0x68]
  416d59:	inc    edi
  416d5a:	fldcw  WORD PTR [edi+eax*4]
  416d5e:	es test eax,0xd94b47a0
  416d64:	inc    esi
  416d65:	stos   BYTE PTR es:[edi],al
  416d66:	es inc eax
  416d68:	jns    0x416d16
  416d6a:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d6c:	fbstp  TBYTE PTR [edi]
  416d6e:	pop    es
  416d6f:	fwait
  416d70:	mul    DWORD PTR [ecx-0x5c04c55c]
  416d76:	pop    ebx
  416d77:	test   BYTE PTR [esp+esi*2+0x4dec50aa],al
  416d7e:	call   0x1589c359
  416d83:	inc    ebx
  416d84:	ins    BYTE PTR es:[edi],dx
  416d85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d86:	xor    eax,DWORD PTR [ecx-0x76413154]
  416d8c:	push   0x1a
  416d8e:	mov    ah,0xe8
  416d90:	inc    edi
  416d91:	and    BYTE PTR [ecx+0x502c6759],0xfc
  416d98:	xchg   edx,eax
  416d99:	es data16 jae 0x416e1c
  416d9d:	inc    edx
  416d9e:	jbe    0x416db8
  416da0:	jmp    0x81ff3663
  416da5:	sbb    DWORD PTR [edi+0x53107f8],eax
  416dab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dac:	shl    esi,cl
  416dae:	jns    0x416d5e
  416db0:	add    eax,0xb4fc26d4
  416db5:	jg     0x416de5
  416db7:	test   al,0x37
  416db9:	in     eax,0xcb
  416dbb:	cmp    DWORD PTR [ebx+0x2d6789c0],eax
  416dc1:	pop    es
  416dc2:	in     eax,0xf
  416dc4:	in     eax,0xd7
  416dc6:	sar    BYTE PTR [ebx+0x77],cl
  416dc9:	mov    ch,0x7e
  416dcb:	sbb    DWORD PTR [ebx-0x56],eax
  416dce:	mov    eax,0xd589e4da
  416dd3:	fs inc ecx
  416dd5:	leave  
  416dd6:	out    dx,al
  416dd7:	xchg   ebp,eax
  416dd8:	mov    bl,0xad
  416dda:	(bad)  
  416ddb:	shl    BYTE PTR ds:0x2e98ff0f,0x34
  416de2:	add    BYTE PTR [edx+0x75],ch
  416de5:	mov    edx,0x98072d3e
  416dea:	xor    al,0x39
  416dec:	fdivr  st(0),st
  416dee:	jae    0x416dc3
  416df0:	or     eax,0x3bd9d848
  416df5:	ficom  WORD PTR [eax]
  416df7:	jb     0x416e72
  416df9:	dec    esi
  416dfa:	push   ebp
  416dfb:	jbe    0x416df0
  416dfd:	cwde   
  416dfe:	lahf   
  416dff:	add    al,0xe7
  416e01:	adc    al,0xf1
  416e03:	jnp    0x416dd6
  416e05:	pop    es
  416e06:	retf   
  416e07:	dec    edi
  416e08:	fadd   QWORD PTR [ecx-0xae8a635]
  416e0e:	das    
  416e0f:	lds    esi,FWORD PTR [ecx+0x16c59af8]
  416e15:	mov    dh,0x95
  416e17:	pop    edx
  416e18:	or     eax,DWORD PTR [esi]
  416e1a:	mov    ds:0x948df133,eax
  416e1f:	jmp    0x2b418512
  416e24:	xchg   edi,eax
  416e25:	pop    ecx
  416e26:	outs   dx,BYTE PTR ds:[esi]
  416e27:	jo     0x416e06
  416e29:	add    dl,BYTE PTR [ecx]
  416e2b:	inc    ebx
  416e2c:	jge    0x416dd7
  416e2e:	dec    ebp
  416e2f:	add    edx,0x6e
  416e32:	sub    dh,BYTE PTR [eax+edi*4]
  416e35:	iret   
  416e36:	xchg   edi,eax
  416e37:	jecxz  0x416e5b
  416e39:	jo     0x416e53
  416e3b:	mov    dh,0x81
  416e3d:	dec    esp
  416e3e:	and    al,0x30
  416e40:	shr    DWORD PTR [ebp-0x80],1
  416e43:	or     BYTE PTR [ecx+0x1d1ce8bd],ch
  416e49:	jg     0x416e75
  416e4b:	push   ecx
  416e4c:	in     eax,dx
  416e4d:	scas   al,BYTE PTR es:[edi]
  416e4e:	nop
  416e4f:	pop    ebp
  416e50:	and    DWORD PTR [ecx+0x33],edx
  416e53:	out    dx,al
  416e54:	pop    esp
  416e55:	adc    eax,0xd642b976
  416e5a:	sub    DWORD PTR [eax+ebx*1],edi
  416e5d:	addr16 and ah,0x64
  416e61:	push   es
  416e62:	test   ecx,ebx
  416e64:	inc    esp
  416e66:	outs   dx,DWORD PTR ds:[esi]
  416e67:	jge    0x416e55
  416e69:	and    ch,BYTE PTR [ecx+0x70a53add]
  416e6f:	mov    WORD PTR [edx+0x47],ds
  416e72:	mov    al,ds:0xd80f87df
  416e77:	stos   BYTE PTR es:[edi],al
  416e78:	jge    0x416e10
  416e7a:	stc    
  416e7b:	inc    ecx
  416e7c:	icebp  
  416e7d:	push   edi
  416e7e:	jmp    DWORD PTR [ebx-0x37]
  416e81:	push   ebx
  416e82:	add    al,0xf5
  416e84:	sub    DWORD PTR [edi],0x8832892d
  416e8a:	mov    esp,0x918596cb
  416e8f:	(bad)  
  416e90:	push   eax
  416e91:	jno    0x416ecd
  416e93:	add    DWORD PTR [ecx*1+0x468f0a4d],esi
  416e9a:	sbb    DWORD PTR [eax-0x58],0x8e1683c8
  416ea1:	in     eax,dx
  416ea2:	cs int 0xac
  416ea5:	and    BYTE PTR [edx],bl
  416ea7:	mov    ah,0xe4
  416ea9:	mov    dl,0x78
  416eab:	test   BYTE PTR [edx+0x62],dl
  416eae:	inc    esp
  416eaf:	out    dx,al
  416eb0:	cdq    
  416eb1:	add    ebx,DWORD PTR ds:0xb75f5b11
  416eb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416eb8:	cli    
  416eb9:	push   0x10
  416ebb:	jl     0x416e62
  416ebd:	(bad)  
  416ebe:	(bad)  
  416ebf:	adc    esp,DWORD PTR [ebx]
  416ec1:	push   cs
  416ec2:	call   0x2845b674
  416ec7:	sub    DWORD PTR [edi+0x73],esp
  416eca:	addr16 sub eax,0xa59a93bd
  416ed0:	test   eax,0x8a2e8106
  416ed5:	mov    ebp,0xc1889927
  416eda:	add    dh,BYTE PTR [eax+eax*4]
  416edd:	push   ds
  416ede:	dec    edx
  416edf:	mov    al,ds:0x8a526ef6
  416ee4:	lds    eax,FWORD PTR [esi+0x6c]
  416ee7:	pop    ss
  416ee8:	add    ah,BYTE PTR [ebx+0x3d2f3e96]
  416eee:	scas   eax,DWORD PTR es:[edi]
  416eef:	int3   
  416ef0:	stc    
  416ef1:	dec    eax
  416ef2:	push   ss
  416ef3:	jno    0x416eae
  416ef5:	in     al,dx
  416ef6:	call   0x721b:0x915d0798
  416efd:	xchg   ecx,eax
  416efe:	imul   DWORD PTR [ecx+0x6aec138b]
  416f04:	cmp    BYTE PTR [ebp+0x7e],ah
  416f07:	adc    bl,BYTE PTR [edi-0x38f7720b]
  416f0d:	adc    DWORD PTR [ecx+edx*1-0x1d],eax
  416f11:	fst    QWORD PTR [edx+0x1f]
  416f14:	pop    ecx
  416f15:	push   edx
  416f16:	popf   
  416f17:	sbb    ecx,DWORD PTR [ecx]
  416f19:	xor    dl,BYTE PTR [ebx]
  416f1b:	mov    ebx,0xf64a0468
  416f20:	bound  edi,QWORD PTR [ebx]
  416f22:	fidivr DWORD PTR [ebp-0x7b797d05]
  416f28:	xchg   esi,eax
  416f29:	jnp    0x416f25
  416f2b:	int3   
  416f2c:	pop    esp
  416f2d:	test   ebp,eax
  416f2f:	inc    edx
  416f30:	sbb    BYTE PTR gs:0xa8229e0c,ah
  416f37:	test   al,0xb8
  416f39:	xchg   ebp,eax
  416f3a:	or     ecx,0x225abd8a
  416f40:	sti    
  416f41:	loopne 0x416f99
  416f43:	or     dl,BYTE PTR [esi-0x176f68d1]
  416f49:	inc    edx
  416f4a:	push   eax
  416f4b:	ret    
  416f4c:	xor    BYTE PTR [esi+0x5cbfc92d],dh
  416f52:	mov    cl,0x6
  416f54:	xor    bh,BYTE PTR [edx]
  416f56:	inc    edx
  416f57:	bound  eax,QWORD PTR [edx]
  416f59:	fwait
  416f5a:	cmp    BYTE PTR [edx],ah
  416f5c:	jg     0x416eeb
  416f5e:	push   edi
  416f5f:	fsubr  QWORD PTR [ebx+0x3eccbfd3]
  416f65:	scas   al,BYTE PTR es:[edi]
  416f66:	stos   BYTE PTR es:[edi],al
  416f67:	imul   ebp,DWORD PTR [edi-0x66],0x28260a56
  416f6e:	test   eax,0x859adea0
  416f73:	sbb    bh,cl
  416f75:	mov    BYTE PTR [esp+ecx*2-0x34fecb46],al
  416f7c:	icebp  
  416f7d:	xchg   edx,eax
  416f7e:	in     eax,0xbf
  416f80:	addr16 mov al,0xef
  416f83:	jl     0x416f0b
  416f85:	push   ds
  416f86:	out    dx,al
  416f87:	xlat   BYTE PTR ds:[ebx]
  416f88:	neg    DWORD PTR [eax-0xc]
  416f8b:	and    eax,0xd618855
  416f90:	dec    ebp
  416f91:	jp     0x416fd6
  416f93:	pop    ebp
  416f94:	add    dh,BYTE PTR [eax+0x497b106e]
  416f9a:	xchg   ebp,eax
  416f9b:	test   BYTE PTR [edx-0x1d],0x9b
  416f9f:	jl     0x416f92
  416fa1:	(bad)  
  416fa3:	inc    edx
  416fa4:	dec    esp
  416fa5:	lahf   
  416fa6:	repz pusha 
  416fa8:	xchg   ch,cl
  416faa:	nop
  416fab:	cdq    
  416fac:	lods   eax,DWORD PTR ds:[esi]
  416fad:	cmp    BYTE PTR [esi],al
  416faf:	push   edi
  416fb0:	fwait
  416fb1:	xchg   ebx,eax
  416fb2:	and    cl,BYTE PTR [eax+esi*1-0x50]
  416fb6:	and    edi,DWORD PTR [ebx]
  416fb8:	int3   
  416fb9:	int3   
  416fba:	imul   ebp,DWORD PTR [ebp-0x4f],0x70
  416fbe:	out    0x3a,al
  416fc0:	lods   al,BYTE PTR ds:[esi]
  416fc1:	push   ecx
  416fc2:	cmp    cl,ah
  416fc4:	push   cs
  416fc5:	out    dx,al
  416fc6:	xor    eax,0xbc772add
  416fcb:	lods   eax,DWORD PTR ds:[esi]
  416fcc:	neg    BYTE PTR ds:0x11fa1432
  416fd2:	push   cs
  416fd3:	nop
  416fd4:	dec    ebx
  416fd5:	arpl   WORD PTR [edi],sp
  416fd7:	jo     0x416f9a
  416fd9:	cmp    eax,0x751886bd
  416fde:	cmp    BYTE PTR [edx+0x55],dl
  416fe1:	test   BYTE PTR [eax-0x3f56ad3e],dh
  416fe7:	scas   al,BYTE PTR es:[edi]
  416fe8:	xchg   edi,eax
  416fe9:	(bad)  
  416feb:	sti    
  416fec:	push   es
  416fed:	sahf   
  416fee:	cmp    dl,al
  416ff0:	repz jbe 0x416fbd
  416ff3:	fisttp QWORD PTR [eax+eiz*1]
  416ff6:	adc    edi,DWORD PTR ds:0x994ee6f7
  416ffc:	in     eax,dx
  416ffd:	push   0xffffffc2
  416fff:	(bad)  
  417001:	and    dh,BYTE PTR [edx]
  417003:	repz pop esi
  417005:	push   es
  417006:	out    0x17,al
  417008:	pop    esi
  417009:	adc    DWORD PTR [esi+0x3fd01663],esp
  41700f:	test   ebx,ebp
  417011:	loope  0x416f95
  417013:	mov    BYTE PTR gs:[ecx+0x2a58151d],al
  41701a:	aam    0xca
  41701c:	push   0xfffffff9
  41701e:	out    dx,eax
  41701f:	push   ds
  417020:	xor    edi,esi
  417022:	sti    
  417023:	xchg   DWORD PTR [ebx+edx*2],ebp
  417026:	xchg   edi,eax
  417027:	jp     0x416ffc
  417029:	xor    al,al
  41702b:	(bad)  [eax]
  41702d:	retf   0xeab6
  417030:	inc    eax
  417031:	xor    ch,BYTE PTR [edx]
  417033:	test   DWORD PTR [ebx+0x44],edx
  417036:	(bad)  
  417037:	int3   
  417038:	push   ebp
  417039:	shl    DWORD PTR [ebx+ebp*2-0x7],0x1e
  41703e:	xor    edx,DWORD PTR [edx+0x1b374874]
  417044:	lds    edx,FWORD PTR [ebx-0x56]
  417047:	sub    ecx,DWORD PTR [esi]
  417049:	pop    eax
  41704a:	icebp  
  41704b:	jno    0x41706f
  41704d:	dec    esi
  41704e:	in     eax,0x8
  417050:	out    0x3d,al
  417052:	jp     0x417048
  417054:	mov    ds:0xc0242a28,eax
  417059:	test   eax,ecx
  41705b:	stc    
  41705c:	pushf  
  41705d:	(bad)  
  41705e:	call   0x5729b632
  417063:	lods   al,BYTE PTR ds:[esi]
  417064:	retf   0x3083
  417067:	sbb    ebp,ebx
  417069:	mov    ebx,ss
  41706b:	fmul   DWORD PTR [edi+0x16793eef]
  417071:	push   cs
  417072:	add    DWORD PTR [ebx+0x2a],edi
  417075:	push   cs
  417076:	in     eax,0x24
  417078:	pop    ebp
  417079:	pushf  
  41707a:	xchg   ebp,eax
  41707b:	inc    edx
  41707c:	fdivr  st(0),st
  41707e:	push   ebx
  41707f:	ds xchg ebx,eax
  417081:	imul   edi,DWORD PTR [edi+ebp*1+0x45be4c0a],0x9a51247a
  41708c:	enter  0x86a0,0xa8
  417090:	pop    esi
  417091:	inc    esp
  417092:	jg     0x417086
  417094:	std    
  417095:	mov    eax,ds:0xf3adbeaa
  41709a:	xor    bh,BYTE PTR [edi+eax*8+0x46]
  41709e:	add    DWORD PTR [edx+0x18],ebp
  4170a1:	inc    ebp
  4170a2:	mov    eax,0x4d883167
  4170a7:	sbb    DWORD PTR [ecx+0x33],edx
  4170aa:	pop    ds
  4170ab:	cdq    
  4170ac:	lock push edi
  4170ae:	xchg   ecx,eax
  4170af:	jns    0x417062
  4170b1:	not    edx
  4170b3:	push   ecx
  4170b4:	jmp    0x8ccb7687
  4170b9:	jno    0x4170fa
  4170bb:	je     0x417089
  4170bd:	imul   ecx,DWORD PTR [edx-0x6d7c3c8c],0xd63a1357
  4170c7:	xchg   BYTE PTR [eax],dh
  4170c9:	xchg   ebp,eax
  4170ca:	addr16 cwde 
  4170cc:	mov    ds:0xcc50fc16,al
  4170d1:	mov    dl,0xfe
  4170d3:	sbb    eax,eax
  4170d5:	mov    ecx,DWORD PTR [ebx+eax*1]
  4170d8:	add    esi,ebx
  4170da:	and    DWORD PTR [eax],0xb246c9ff
  4170e0:	sub    ecx,edi
  4170e2:	in     al,dx
  4170e3:	xchg   edi,eax
  4170e4:	loope  0x417131
  4170e6:	(bad)  
  4170e7:	js     0x41709e
  4170e9:	lock repnz or ebx,esp
  4170ed:	inc    ecx
  4170ee:	mov    al,0x5c
  4170f0:	jecxz  0x41714e
  4170f2:	(bad)
  4170f5:	xlat   BYTE PTR ds:[ebx]
  4170f6:	and    al,0x2
  4170f8:	je     0x4170cd
  4170fa:	cmp    bl,BYTE PTR [edi]
  4170fc:	fwait
  4170fd:	es sbb dh,0xb7
  417101:	xor    edi,DWORD PTR [ebx]
  417103:	in     eax,0x72
  417105:	or     al,0x0
  417107:	ins    BYTE PTR es:[edi],dx
  417108:	and    ah,bl
  41710a:	dec    ebp
  41710b:	sbb    eax,0x9bfe9f69
  417110:	inc    esi
  417111:	loop   0x4170ff
  417113:	jne    0x4170b1
  417115:	nop
  417116:	(bad)  
  417117:	jecxz  0x417146
  417119:	fimul  WORD PTR [edx+0x78]
  41711c:	jl     0x417187
  41711e:	inc    esi
  41711f:	test   eax,0xeb0dddef
  417124:	inc    esi
  417125:	inc    ebp
  417126:	pop    ss
  417127:	inc    edx
  417128:	inc    esp
  417129:	xchg   esi,eax
  41712a:	push   es
  41712b:	dec    edi
  41712c:	into   
  41712d:	(bad)  
  41712e:	and    al,0x1c
  417130:	ins    DWORD PTR es:[edi],dx
  417131:	ja     0x41712e
  417133:	mov    WORD PTR ds:0x633895a6,ss
  417139:	jae    0x41711a
  41713b:	mov    edx,0x76049d4d
  417140:	imul   eax,eax,0x12
  417143:	cmp    esp,DWORD PTR [edx]
  417145:	or     al,0x14
  417147:	outs   dx,DWORD PTR ds:[esi]
  417148:	pop    ebx
  417149:	pop    esi
  41714a:	fstp   TBYTE PTR [ebp-0x44cfe552]
  417150:	xlat   BYTE PTR ds:[ebx]
  417151:	lahf   
  417152:	jg     0x417111
  417154:	xchg   BYTE PTR [ebp-0x6b9151bd],dl
  41715a:	push   ebp
  41715b:	popa   
  41715c:	jle    0x4171bc
  41715e:	adc    dh,cl
  417160:	or     DWORD PTR [edx+ebp*1-0x66d055ab],ecx
  417167:	xchg   edx,eax
  417168:	fld    DWORD PTR [edi]
  41716a:	sub    eax,0x72a19697
  41716f:	mov    bl,0x4c
  417171:	test   eax,0x7835ce3c
  417176:	add    ah,dl
  417178:	cmp    ecx,esi
  41717a:	mov    edi,ebx
  41717c:	mov    cs,WORD PTR [ebx]
  41717e:	js     0x4171ac
  417180:	mov    eax,0x32fa8e48
  417185:	mov    ebx,0xfc2df1b8
  41718a:	aad    0x74
  41718c:	loop   0x417152
  41718e:	xchg   ecx,eax
  41718f:	cmc    
  417190:	cwde   
  417191:	in     al,dx
  417192:	shl    DWORD PTR [eax-0x4a],1
  417195:	and    eax,0x114d0bf9
  41719a:	mov    dl,0x13
  41719c:	jmp    0x7fe9:0x15c89f2a
  4171a3:	ror    DWORD PTR [esi+eiz*2+0x21],cl
  4171a7:	clc    
  4171a8:	fist   DWORD PTR [edi+0x2b]
  4171ab:	fist   WORD PTR [ecx]
  4171ad:	add    eax,0xb08c449b
  4171b2:	test   BYTE PTR [eax+0x28],0x0
  4171b6:	cwde   
  4171b7:	sbb    DWORD PTR [edi],ebx
  4171b9:	dec    edi
  4171ba:	xchg   BYTE PTR [edx-0x8],bl
  4171bd:	ret    
  4171be:	mov    ecx,ebp
  4171c0:	popf   
  4171c1:	mov    dl,BYTE PTR [ebx]
  4171c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171c4:	push   ebp
  4171c5:	and    eax,0x2da6ef3f
  4171ca:	ss adc al,0x88
  4171cd:	div    DWORD PTR ds:0x521ac929
  4171d3:	std    
  4171d4:	push   ss
  4171d5:	stc    
  4171d6:	dec    edi
  4171d7:	repz je 0x417181
  4171da:	shr    BYTE PTR [eax-0x54b84208],cl
  4171e0:	mov    bh,0x5c
  4171e2:	(bad)  
  4171e3:	call   0xb439:0x6ad8243b
  4171ea:	and    al,ch
  4171ec:	xor    eax,0xd7613aa
  4171f1:	pop    edi
  4171f2:	mov    dl,0xfc
  4171f4:	inc    ecx
  4171f5:	ss aaa 
  4171f7:	inc    edi
  4171f8:	(bad)
  4171fb:	fwait
  4171fc:	pop    ss
  4171fd:	pop    esp
  4171fe:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417200:	push   ecx
  417201:	sub    eax,0xd2c75cfc
  417206:	div    DWORD PTR [ecx]
  417208:	pusha  
  417209:	jmp    FWORD PTR ds:0xbe6b5c5
  41720f:	test   al,0x2f
  417211:	call   0x76d4ccb3
  417216:	fwait
  417217:	cmc    
  417218:	xor    bh,BYTE PTR [edi+edi*2-0x2a946e30]
  41721f:	shl    BYTE PTR [ecx],1
  417221:	arpl   WORD PTR [edi-0x3adf6003],di
  417227:	mov    DWORD PTR [eax],0xb0b24866
  41722d:	mov    ds:0x3d5f640,al
  417232:	mov    ch,0x9a
  417234:	(bad)  
  417235:	push   esp
  417236:	xlat   BYTE PTR ds:[ebx]
  417237:	sub    WORD PTR [edx-0x5fb92ef3],si
  41723e:	push   0xbd8db75e
  417243:	push   edi
  417244:	and    eax,DWORD PTR [eax+0x37bcfdce]
  41724a:	pop    edx
  41724b:	add    DWORD PTR [edx+eax*1+0x49],ebp
  41724f:	retf   
  417250:	add    dl,dl
  417252:	repnz pusha 
  417254:	test   al,0xab
  417256:	add    bl,bl
  417258:	xor    eax,0xef447d53
  41725d:	out    dx,eax
  41725e:	fnstcw WORD PTR [esi+0x2ab98598]
  417264:	loope  0x4171fc
  417266:	rol    BYTE PTR [ebp-0x357f8e8a],0x90
  41726d:	leave  
  41726e:	jmp    0x8401:0xcbc610c2
  417275:	ds push cs
  417277:	cmp    edi,DWORD PTR [eax-0x63]
  41727a:	mov    dl,BYTE PTR [esi+0x5561045]
  417280:	xchg   ebp,eax
  417281:	push   ebx
  417282:	xchg   dx,ax
  417284:	stc    
  417285:	inc    esi
  417286:	mov    cl,BYTE PTR [ecx+0x2d]
  417289:	add    edi,DWORD PTR [ebx+0x63a74fd7]
  41728f:	jecxz  0x4172f6
  417291:	sar    edx,0x11
  417294:	mov    bl,0xd7
  417296:	push   ebp
  417297:	and    DWORD PTR [esi-0x7],0xffffff94
  41729b:	pop    es
  41729c:	ror    DWORD PTR [ebp+ebp*1+0x4],0x30
  4172a1:	mov    eax,ds:0x240af8bf
  4172a6:	mov    ds:0xcbd79b93,eax
  4172ab:	ret    
  4172ac:	or     DWORD PTR [eax+0x4],ecx
  4172af:	js     0x417282
  4172b1:	mov    esp,0x1385ca3c
  4172b6:	xor    dl,0x4e
  4172b9:	fwait
  4172ba:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172bc:	adc    BYTE PTR [esi-0x16],bl
  4172bf:	cmp    al,0xf0
  4172c1:	popa   
  4172c2:	test   eax,0x92d05829
  4172c7:	jno    0x417282
  4172c9:	test   esp,eax
  4172cb:	ds aam 0x58
  4172ce:	cld    
  4172cf:	jbe    0x4172e2
  4172d1:	push   cs
  4172d2:	inc    esi
  4172d3:	xchg   esp,eax
  4172d4:	push   esi
  4172d5:	(bad)  
  4172d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172d7:	mov    bl,BYTE PTR [eax-0x10]
  4172da:	ret    0xc919
  4172dd:	mov    dh,0x27
  4172df:	dec    ebx
  4172e0:	xor    al,0x4
  4172e2:	(bad)  
  4172e3:	loop   0x41730e
  4172e5:	loope  0x4172b5
  4172e7:	in     al,dx
  4172e8:	stos   DWORD PTR es:[edi],eax
  4172e9:	nop
  4172ea:	es out dx,eax
  4172ec:	aam    0x7f
  4172ee:	mov    ecx,0x4fb09239
  4172f3:	mov    al,ds:0x417cfcda
  4172f8:	neg    DWORD PTR [ebp+0x4a]
  4172fb:	outs   dx,BYTE PTR ds:[esi]
  4172fc:	aad    0x49
  4172fe:	or     ch,BYTE PTR [edi+esi*8]
  417301:	or     eax,0x30fea062
  417306:	adc    al,0xe0
  417308:	scas   al,BYTE PTR es:[edi]
  417309:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41730a:	retf   
  41730b:	pusha  
  41730c:	jns    0x4172e3
  41730e:	mov    ?,WORD PTR [esi+0x56]
  417311:	add    al,0x4b
  417313:	push   es
  417314:	(bad)  
  417315:	int3   
  417316:	sub    eax,0xaf8e157e
  41731b:	ja     0x4172c3
  41731d:	cmp    eax,0x187409be
  417322:	sbb    cl,BYTE PTR ds:0xdb9a80a3
  417328:	xchg   edi,eax
  417329:	fmul   st(6),st
  41732b:	mov    esp,0xc8d4c600
  417330:	fcom   DWORD PTR [eax]
  417332:	mov    ebx,0x4d9be7d4
  417337:	test   DWORD PTR [edx+0x6a9f04c9],ebp
  41733d:	outs   dx,DWORD PTR ds:[esi]
  41733e:	retf   
  41733f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417340:	(bad)  
  417341:	xor    al,0xae
  417343:	(bad)  
  417346:	imul   esp,DWORD PTR [edx-0x61215541],0xffffff93
  41734d:	js     0x417305
  41734f:	add    dh,BYTE PTR [ebp+0x137b447a]
  417355:	ret    0x56f0
  417358:	ins    DWORD PTR es:[edi],dx
  417359:	test   ah,dh
  41735b:	push   eax
  41735c:	pop    edx
  41735d:	adc    BYTE PTR [esi+esi*4],ah
  417360:	dec    ebp
  417361:	mov    BYTE PTR cs:[ebp+0x1d],ah
  417365:	dec    eax
  417366:	and    eax,0x602b9bd0
  41736b:	mov    al,0x48
  41736d:	hlt    
  41736e:	xchg   BYTE PTR [ebp+0x628ef2ca],dl
  417374:	imul   esi,DWORD PTR [edx+eiz*2+0x3a45833a],0x245e5659
  41737f:	(bad)
  417383:	into   
  417384:	call   0x36f28dc2
  417389:	loope  0x417365
  41738b:	(bad)  
  41738c:	jo     0x41734b
  41738e:	dec    esi
  41738f:	vhaddpd xmm1,xmm2,XMMWORD PTR [ecx-0x6db4ba5d]
  417398:	test   eax,0xa44c3251
  41739d:	push   cs
  41739e:	xchg   ecx,eax
  41739f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173a0:	mov    eax,ds:0x2fbb3af
  4173a5:	mov    ebx,0xf80b550c
  4173aa:	(bad)  
  4173ab:	push   esi
  4173ac:	xor    dh,0x8f
  4173af:	imul   ecx,DWORD PTR [ebp+0x5715b827],0xfffffff0
  4173b6:	pop    ebx
  4173b7:	and    al,0x64
  4173b9:	or     dl,BYTE PTR [ebp+0x7cef8bca]
  4173bf:	out    dx,al
  4173c0:	(bad)  
  4173c1:	rcl    bl,0x83
  4173c4:	in     eax,0xb8
  4173c6:	(bad)  
  4173c8:	add    BYTE PTR [edi+0x71ecf19a],ah
  4173ce:	ficomp WORD PTR [ecx+ebp*2-0x9f3ade4]
  4173d5:	cmp    al,0xae
  4173d7:	les    ebp,FWORD PTR [ecx-0x2ad6d63]
  4173dd:	(bad)  
  4173de:	cmp    esp,DWORD PTR [esi]
  4173e0:	repz (bad) 
  4173e2:	repnz adc cl,0xde
  4173e6:	stos   DWORD PTR es:[edi],eax
  4173e7:	add    ecx,DWORD PTR [edx*1-0x596d028b]
  4173ee:	jbe    0x4173cf
  4173f0:	mov    ds:0x6d0a96ea,al
  4173f5:	inc    ecx
  4173f6:	test   BYTE PTR ds:0x45910f6d,bl
  4173fc:	js     0x4173e4
  4173fe:	je     0x41743c
  417400:	data16 sbb BYTE PTR [edi],ah
  417403:	cli    
  417404:	xor    BYTE PTR [ecx+0x55],dh
  417407:	dec    ecx
  417408:	sub    DWORD PTR [ecx],edi
  41740a:	inc    edx
  41740b:	scas   eax,DWORD PTR es:[edi]
  41740c:	out    dx,al
  41740d:	popa   
  41740e:	jp     0x41748c
  417410:	and    esp,ebx
  417412:	cdq    
  417413:	xchg   BYTE PTR [esi+0x3e275184],cl
  417419:	mov    ebp,0x7b64cac7
  41741e:	adc    cl,BYTE PTR [ecx-0x6f]
  417421:	or     edi,ecx
  417423:	xchg   esi,eax
  417424:	mov    ah,0x8f
  417426:	pushf  
  417427:	xlat   BYTE PTR ds:[ebx]
  417428:	or     ebp,DWORD PTR [eax-0x4f]
  41742b:	dec    esi
  41742c:	cld    
  41742d:	mov    eax,DWORD PTR [ebx+0x72]
  417430:	inc    ebp
  417431:	jo     0x41740e
  417433:	(bad)  
  417434:	cmp    al,0xe6
  417436:	mov    ebp,0xd16435d7
  41743b:	sahf   
  41743c:	sbb    DWORD PTR [ebp-0x3c],ebx
  41743f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417440:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417441:	jp     0x4174c0
  417443:	lock or ebx,DWORD PTR [eax]
  417446:	mov    ebp,0x175ac14e
  41744b:	fmul   QWORD PTR ds:0xd702c2a2
  417451:	mov    al,ds:0x35668cb7
  417456:	out    0xc3,al
  417458:	cs sub al,0xa8
  41745b:	adc    DWORD PTR [ebp+0x3d3029de],ebx
  417461:	push   ds
  417462:	test   eax,0x9553bc08
  417467:	pop    es
  417468:	int    0x70
  41746a:	push   esi
  41746b:	iret   
  41746c:	sti    
  41746d:	or     ah,dh
  41746f:	inc    esi
  417470:	ins    DWORD PTR es:[edi],dx
  417471:	cmc    
  417472:	xor    ecx,DWORD PTR [edi+0x6]
  417475:	mov    ebp,esi
  417477:	pop    ds
  417478:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417479:	jne    0x4174cd
  41747b:	pop    ebp
  41747c:	imul   edi,DWORD PTR [edi],0x9
  41747f:	sub    DWORD PTR [edx+0x288d4a62],edx
  417485:	push   ebp
  417486:	ret    0x1805
  417489:	out    dx,eax
  41748a:	inc    eax
  41748b:	jo     0x4174b9
  41748d:	mov    cl,0x6e
  41748f:	mov    ch,0xe
  417491:	or     eax,0xd8a38b22
  417496:	xor    dl,ch
  417498:	imul   edx,DWORD PTR [edi+0x40aae459],0x3
  41749f:	aad    0x95
  4174a1:	pop    esi
  4174a2:	mov    eax,0xe6073b6b
  4174a7:	test   al,0x90
  4174a9:	pushf  
  4174aa:	idiv   DWORD PTR [ecx-0x59]
  4174ad:	sbb    BYTE PTR [ebx-0x1f],0x6a
  4174b1:	test   BYTE PTR [ecx+0x70],bh
  4174b4:	xchg   BYTE PTR ds:0x6f67dcbb,bl
  4174ba:	(bad)  
  4174bb:	sub    BYTE PTR [edi-0x47],ch
  4174be:	xchg   ebx,eax
  4174bf:	mov    esi,0xc3e15e6f
  4174c4:	mov    edx,0xa4cea824
  4174c9:	test   DWORD PTR [esi],ebp
  4174cb:	dec    eax
  4174cc:	scas   eax,DWORD PTR es:[edi]
  4174cd:	pop    ss
  4174ce:	jbe    0x417515
  4174d0:	or     ah,BYTE PTR [ecx-0x2f23c3e4]
  4174d6:	in     al,dx
  4174d7:	fbld   TBYTE PTR [ecx+0x5197a87e]
  4174dd:	add    esp,DWORD PTR [ebp+edi*1-0x353d99b6]
  4174e4:	inc    edi
  4174e5:	ja     0x417505
  4174e7:	es jp  0x3216bb8
  4174ee:	xchg   BYTE PTR [esi-0x4c901662],dl
  4174f4:	fcomp  QWORD PTR [ecx]
  4174f6:	iret   
  4174f7:	push   ds
  4174f8:	and    bh,cl
  4174fa:	or     al,0x9b
  4174fc:	push   edi
  4174fd:	scas   eax,DWORD PTR es:[edi]
  4174fe:	jg     0x41750b
  417500:	xor    al,0xe2
  417502:	xchg   ebp,eax
  417503:	mov    esi,ebp
  417505:	add    al,0x46
  417507:	sbb    al,0x39
  417509:	stc    
  41750a:	mov    esi,0xf04e5f2c
  41750f:	sahf   
  417510:	(bad)  
  417511:	cmp    esi,edx
  417513:	inc    edi
  417514:	clc    
  417515:	xchg   ebp,eax
  417516:	xor    ecx,ebp
  417518:	test   eax,0x68d6ff1
  41751d:	scas   al,BYTE PTR es:[edi]
  41751e:	dec    edi
  41751f:	fsubr  QWORD PTR [edi+ecx*8-0x3e]
  417523:	and    al,0xcb
  417525:	push   es
  417526:	cmp    al,BYTE PTR [ecx-0x37]
  417529:	mov    esi,0xa5bc727b
  41752e:	(bad)  
  41752f:	shl    DWORD PTR [edi+0x4a],cl
  417532:	adc    BYTE PTR gs:[esi-0x79],bl
  417536:	leave  
  417537:	call   0xe4f9:0xdff9f7db
  41753e:	pop    esp
  41753f:	dec    esi
  417540:	push   eax
  417541:	jo     0x4174f4
  417543:	rcl    BYTE PTR [esi],cl
  417545:	mov    bl,0xd5
  417547:	sbb    dl,BYTE PTR [edi+0x449611d2]
  41754d:	fs rcl cl,0x4d
  417551:	addr16 pop eax
  417553:	push   cs
  417554:	js     0x417510
  417556:	cs push 0x1d
  417559:	or     eax,0x64f4475e
  41755e:	adc    DWORD PTR [ebx-0x41],edi
  417561:	push   ebp
  417562:	out    0xb4,al
  417564:	xchg   ebp,eax
  417565:	ins    DWORD PTR es:[edi],dx
  417566:	jge    0x417590
  417568:	les    esp,FWORD PTR [edx-0x2f395be8]
  41756e:	mov    esi,0x4b765bc8
  417573:	mov    bh,0x6b
  417575:	sbb    eax,0x9fd6c7d4
  41757a:	jno    0x41758e
  41757c:	sbb    ch,BYTE PTR [ebp-0x791c407a]
  417582:	imul   edi,DWORD PTR [eax-0x40],0x320298e9
  417589:	add    eax,0x74f88cc9
  41758e:	sbb    DWORD PTR [edi],edx
  417590:	pop    ds
  417591:	lahf   
  417592:	fnstcw WORD PTR [eax]
  417594:	push   ss
  417595:	mov    dh,0x70
  417597:	loope  0x417545
  417599:	push   0x27
  41759b:	adc    esi,esp
  41759d:	mov    ebp,0xf928cf6e
  4175a2:	loopne 0x41752c
  4175a4:	push   edi
  4175a5:	jg     0x41760b
  4175a7:	mov    eax,ds:0x17353598
  4175ac:	xchg   ecx,eax
  4175ad:	push   edx
  4175ae:	mov    bh,0xa7
  4175b0:	sub    al,0xf4
  4175b2:	dec    DWORD PTR [ebp+0x30]
  4175b5:	fimul  DWORD PTR [esi-0x35]
  4175b8:	adc    BYTE PTR [esi-0x45],al
  4175bb:	icebp  
  4175bc:	test   eax,0x2db9806d
  4175c1:	xchg   ebp,eax
  4175c2:	mov    ah,0x6c
  4175c4:	adc    DWORD PTR [ecx+0x59],edi
  4175c7:	push   0xdad6e393
  4175cc:	add    DWORD PTR [edi],ebp
  4175ce:	inc    eax
  4175cf:	jmp    0x44d429d6
  4175d4:	xchg   ebx,eax
  4175d5:	push   eax
  4175d7:	cdq    
  4175d8:	jmp    DWORD PTR [ebx-0x76]
  4175db:	(bad)  
  4175dc:	cmp    eax,0xe30ebd6d
  4175e1:	pop    ebx
  4175e2:	jl     0x417586
  4175e4:	enter  0xcdf4,0x91
  4175e8:	jmp    0xb148cb90
  4175ed:	outs   dx,DWORD PTR ds:[esi]
  4175ee:	stc    
  4175ef:	pop    ebx
  4175f0:	mov    WORD PTR [ebp-0xb],cs
  4175f3:	dec    esi
  4175f4:	xchg   edx,eax
  4175f5:	jg     0x417658
  4175f7:	jnp    0x4175e1
  4175f9:	and    BYTE PTR [eax-0x5d36d396],cl
  4175ff:	inc    ecx
  417600:	(bad)  
  417601:	sahf   
  417602:	cdq    
  417603:	cmp    BYTE PTR fs:[eax+0x635d704],dl
  41760a:	daa    
  41760b:	cli    
  41760c:	sub    eax,0x276ad923
  417611:	jns    0x41762e
  417613:	sbb    eax,0x37f7416c
  417618:	and    ch,dl
  41761a:	pop    ebx
  41761b:	fbstp  TBYTE PTR [edx+0xd328898]
  417621:	add    al,0xaa
  417623:	adc    edx,edi
  417625:	out    dx,eax
  417626:	jnp    0x41768b
  417628:	shl    ch,1
  41762a:	das    
  41762b:	fwait
  41762c:	cmp    DWORD PTR [edi],esi
  41762e:	mov    esp,0xa6d5faa8
  417633:	mov    bh,0xbf
  417635:	mov    al,0x37
  417637:	fstp   TBYTE PTR [esi+0x42c42034]
  41763d:	fimul  WORD PTR [edx]
  41763f:	mov    eax,0xb05a1f31
  417644:	adc    eax,0xc2a61bf6
  417649:	scas   eax,DWORD PTR es:[edi]
  41764a:	aad    0x87
  41764c:	sub    BYTE PTR [ebp-0x397f64d8],bl
  417652:	iret   
  417653:	cmp    bh,0x8e
  417656:	call   0x78e2d3a7
  41765b:	test   bh,0xe2
  41765e:	add    al,0xf6
  417660:	mov    esi,0xd45fed61
  417665:	xor    DWORD PTR [edi-0x5c],ebp
  417668:	fadd   DWORD PTR [edx+0x7ff61b48]
  41766e:	mov    eax,0x535eb55d
  417673:	rol    DWORD PTR [esi],0xf3
  417676:	sub    dh,BYTE PTR [edi-0x7]
  417679:	test   al,0x3e
  41767b:	pop    ds
  41767c:	pop    es
  41767d:	out    dx,eax
  41767e:	dec    edi
  41767f:	lds    esp,FWORD PTR [edx]
  417681:	jmp    0xf85477e5
  417686:	loope  0x4176e2
  417688:	(bad)  
  417689:	and    esp,DWORD PTR [esi-0x14ecea9e]
  41768f:	mov    eax,0x126ccdc0
  417694:	test   DWORD PTR [eax+0x56bb8d14],edi
  41769a:	mov    edx,DWORD PTR [eax+0x193a3606]
  4176a0:	dec    ecx
  4176a1:	inc    edi
  4176a2:	xchg   ebp,eax
  4176a3:	xchg   esp,eax
  4176a4:	(bad)  
  4176a5:	ss or  eax,0x7ace23bc
  4176ab:	add    ecx,ebx
  4176ad:	sub    eax,0x87203fc7
  4176b2:	pushf  
  4176b3:	pop    ebx
  4176b4:	aam    0x77
  4176b6:	popf   
  4176b7:	jnp    0x41767e
  4176b9:	ds loopne 0x41764b
  4176bc:	and    al,0x63
  4176be:	nop
  4176bf:	pop    es
  4176c0:	jne    0x41771f
  4176c2:	and    edi,ebx
  4176c4:	inc    esi
  4176c5:	cwde   
  4176c6:	inc    ecx
  4176c7:	xor    cl,cl
  4176c9:	cvtdq2ps xmm3,XMMWORD PTR [edi+0x3]
  4176cd:	dec    edx
  4176ce:	jo     0x41769a
  4176d0:	mov    DWORD PTR [ebp-0x728df55],edi
  4176d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176d7:	push   ds
  4176d8:	lods   eax,DWORD PTR ds:[esi]
  4176d9:	mov    ebx,0x187e5b65
  4176de:	nop
  4176df:	loop   0x417751
  4176e1:	sbb    al,BYTE PTR [ebx-0x290a222a]
  4176e7:	mov    cl,0xa7
  4176e9:	dec    esp
  4176ea:	clc    
  4176eb:	in     al,dx
  4176ec:	sub    eax,0xeb2ae63f
  4176f1:	sti    
  4176f2:	cld    
  4176f3:	or     bh,0xc8
  4176f6:	call   DWORD PTR [edx]
  4176f8:	add    BYTE PTR [edx-0x63],0x1
  4176fc:	scas   eax,DWORD PTR es:[edi]
  4176fd:	mov    dh,0x9a
  4176ff:	xchg   ebp,eax
  417700:	mov    dh,0x27
  417702:	loope  0x4176b1
  417704:	adc    al,0x3f
  417706:	inc    ebx
  417707:	adc    eax,0x73ca18d3
  41770c:	mov    eax,0x9d9c92ff
  417711:	mov    esi,0xeed42e20
  417716:	fs popf 
  417718:	inc    esi
  417719:	inc    ebx
  41771a:	test   BYTE PTR [ecx+ecx*1],dl
  41771d:	or     ch,BYTE PTR [ecx-0x55abcced]
  417723:	mov    bl,0xf3
  417725:	mov    ebx,0x2d32753f
  41772a:	sbb    DWORD PTR [ecx-0x57a6e83d],ecx
  417730:	outs   dx,DWORD PTR ds:[esi]
  417731:	lea    edi,[ebx]
  417733:	stos   BYTE PTR es:[edi],al
  417734:	sbb    eax,0xdcc46af0
  417739:	inc    edx
  41773a:	out    0x3b,eax
  41773c:	test   al,0xc9
  41773e:	xchg   ebx,eax
  41773f:	jne    0x417783
  417741:	in     al,dx
  417742:	xchg   esi,eax
  417743:	jmp    0x35e09db4
  417748:	xchg   esp,eax
  417749:	outs   dx,DWORD PTR ds:[esi]
  41774a:	xchg   DWORD PTR [edi],esi
  41774c:	jo     0x4176de
  41774e:	inc    esp
  41774f:	mul    BYTE PTR [edi+ebx*2+0x775cf297]
  417756:	mov    ch,BYTE PTR [eax+ebp*4-0x41db4740]
  41775d:	add    BYTE PTR [esi+0x626aa63],cl
  417763:	clc    
  417764:	popa   
  417765:	or     dl,BYTE PTR [ecx]
  417767:	ror    DWORD PTR [edx-0x55],1
  41776a:	(bad)  
  41776b:	sub    al,0x29
  41776d:	xchg   edi,eax
  41776e:	mov    eax,0xc5740782
  417773:	and    ebx,ebx
  417775:	push   ss
  417776:	cmp    al,0x5e
  417778:	inc    edi
  417779:	pop    ds
  41777a:	cmc    
  41777b:	fld    DWORD PTR [eax-0x67]
  41777e:	aas    
  41777f:	retf   0x7c86
  417782:	ret    0x7956
  417785:	jnp    0x417719
  417787:	ins    DWORD PTR es:[edi],dx
  417788:	inc    ebx
  417789:	sbb    eax,0xdc557adb
  41778e:	out    0x38,al
  417790:	adc    edx,DWORD PTR [edi-0x3f290056]
  417796:	pop    eax
  417797:	cmp    DWORD PTR [esi+0x27],esi
  41779a:	xor    al,0x2a
  41779c:	mov    al,ds:0xf5c3359e
  4177a1:	hlt    
  4177a2:	mov    edx,0xf226561d
  4177a7:	push   es
  4177a8:	and    al,0x36
  4177aa:	pusha  
  4177ab:	dec    ebx
  4177ac:	and    BYTE PTR [edi-0x692f4153],0x2a
  4177b3:	push   es
  4177b4:	or     esp,ecx
  4177b6:	xchg   DWORD PTR [ebx+0x68],ebx
  4177b9:	and    ebp,DWORD PTR [ecx-0x5a2070cf]
  4177bf:	or     eax,0xd6cf1077
  4177c4:	pop    ebx
  4177c5:	les    eax,FWORD PTR [eax+0x0]
  4177c8:	or     DWORD PTR [edx],0x26
  4177cb:	jle    0x4177e7
  4177cd:	mov    dh,0x8f
  4177cf:	jbe    0x4177d0
  4177d1:	xlat   BYTE PTR ds:[ebx]
  4177d2:	xor    al,0xb0
  4177d4:	data16 or al,0x76
  4177d7:	mov    al,ds:0x20a5ec43
  4177dc:	ja     0x41784c
  4177de:	push   edi
  4177df:	mov    ah,0x49
  4177e1:	inc    ebx
  4177e2:	ja     0x417824
  4177e4:	pop    ebx
  4177e5:	inc    esp
  4177e6:	cmp    ebp,DWORD PTR [eax]
  4177e8:	adc    BYTE PTR [ecx-0x448a2e38],0xf2
  4177ef:	not    BYTE PTR [ebx]
  4177f1:	ret    
  4177f2:	fwait
  4177f3:	inc    edi
  4177f4:	and    BYTE PTR [edi],dh
  4177f6:	aam    0xe2
  4177f8:	ret    
  4177f9:	sahf   
  4177fa:	into   
  4177fb:	sbb    DWORD PTR [eax-0x4a],ebx
  4177fe:	xchg   BYTE PTR [ecx],bh
  417800:	and    dh,ch
  417802:	or     edi,DWORD PTR [ecx+0x2d]
  417805:	sub    al,0x33
  417807:	mov    eax,ds:0xcb0c0cf7
  41780c:	pushf  
  41780d:	leave  
  41780e:	data16 sbb BYTE PTR [esi],bh
  417811:	add    DWORD PTR [edx-0x1b],esi
  417814:	push   ds
  417815:	mov    cl,0x73
  417817:	fdiv   DWORD PTR [esi+0x61]
  41781a:	iret   
  41781b:	mov    esi,0x195d065f
  417820:	pushf  
  417821:	pop    ds
  417822:	jne    0x417843
  417824:	and    al,0x35
  417826:	jle    0x417810
  417828:	xchg   ecx,eax
  417829:	push   edi
  41782a:	inc    ecx
  41782b:	cli    
  41782c:	sub    DWORD PTR ds:0xcce5c7,eax
  417832:	xchg   bl,ah
  417834:	pop    es
  417835:	or     ecx,DWORD PTR [edi+0x6794e9fa]
  41783b:	pop    edi
  41783c:	jge    0x417838
  41783e:	mov    ecx,DWORD PTR [esi]
  417840:	xchg   edx,eax
  417841:	jbe    0x4178ab
  417843:	add    eax,0x1956d9c7
  417848:	in     eax,0x77
  41784a:	aas    
  41784b:	or     DWORD PTR [ebp-0x399a3f93],ecx
  417851:	(bad)  
  417852:	pop    ecx
  417853:	(bad)  
  417855:	adc    eax,DWORD PTR [ecx-0x3ac586f9]
  41785b:	fxch   st(2)
  41785d:	outs   dx,BYTE PTR ds:[esi]
  41785e:	inc    ebx
  41785f:	mov    eax,0x1f41c823
  417864:	or     esp,edi
  417866:	icebp  
  417867:	inc    eax
  417868:	inc    esp
  417869:	adc    al,cl
  41786b:	loopne 0x41788e
  41786d:	fwait
  41786e:	mov    BYTE PTR [edi],bh
  417870:	sub    al,0x9
  417872:	sub    dl,BYTE PTR [ebx]
  417874:	popf   
  417875:	pop    ebx
  417876:	add    esp,DWORD PTR [ecx-0x2e]
  417879:	ja     0x4178e4
  41787b:	push   edx
  41787c:	mov    eax,0xafd41393
  417881:	aaa    
  417882:	mov    ebp,0x913671b8
  417887:	lds    ecx,FWORD PTR [ebp+0x79be06de]
  41788d:	fwait
  41788e:	pop    eax
  41788f:	push   esi
  417890:	out    0xaf,al
  417892:	jle    0x417843
  417894:	(bad)
  417898:	inc    edx
  417899:	ret    
  41789a:	imul   ebp,DWORD PTR [edx+0x64fa7ed2],0x484c6c5b
  4178a4:	shr    ch,1
  4178a6:	outs   dx,BYTE PTR ds:[esi]
  4178a7:	mov    bh,0x85
  4178a9:	mov    al,0x7a
  4178ab:	ret    
  4178ac:	jge    0x417914
  4178ae:	stos   BYTE PTR es:[edi],al
  4178af:	adc    eax,0x2b96c636
  4178b4:	pop    edx
  4178b5:	sbb    al,0xef
  4178b7:	pop    edi
  4178b8:	gs mov esp,0xe59129d
  4178be:	ret    
  4178bf:	mov    esp,0xd074cdb7
  4178c4:	or     eax,DWORD PTR [ebx*8-0x4bb5503d]
  4178cb:	jno    0x417924
  4178cd:	add    dl,ah
  4178cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178d0:	aad    0x58
  4178d2:	ss jp  0x4178f6
  4178d5:	or     DWORD PTR [ecx+ebx*4+0x31],ebp
  4178d9:	mov    bh,0x4b
  4178db:	out    0x2b,eax
  4178dd:	in     eax,dx
  4178de:	lods   eax,DWORD PTR ds:[esi]
  4178df:	push   edx
  4178e0:	push   cs
  4178e1:	int    0x50
  4178e3:	icebp  
  4178e4:	adc    ah,ch
  4178e6:	in     al,dx
  4178e7:	mov    edi,0xfa5633de
  4178ec:	inc    ebp
  4178ed:	fmul   QWORD PTR [eax+0x3ad29cd9]
  4178f3:	loop   0x417952
  4178f5:	bound  esi,QWORD PTR [ecx+0x1631b495]
  4178fb:	ins    DWORD PTR es:[edi],dx
  4178fc:	and    edx,ebp
  4178fe:	sbb    ecx,esp
  417900:	push   esi
  417901:	lds    ecx,FWORD PTR [eax+0x55ae469]
  417907:	stos   BYTE PTR es:[edi],al
  417908:	dec    esi
  417909:	mov    edx,0xd5b009c1
  41790e:	jne    0x417923
  417910:	mov    DWORD PTR [ebx+0x487c3686],ebx
  417916:	xchg   edx,eax
  417917:	jnp    0x417924
  417919:	add    DWORD PTR [edi],0x71893cae
  41791f:	cs and eax,0x437232b1
  417925:	cs mov cl,0x2
  417928:	sub    DWORD PTR [ebx-0x4942bd9e],esi
  41792e:	adc    BYTE PTR [esp+edi*8-0x46e3c89c],al
  417935:	xchg   edx,eax
  417936:	lahf   
  417937:	nop
  417938:	lods   eax,DWORD PTR ds:[esi]
  417939:	inc    ecx
  41793a:	fisttp QWORD PTR [edx-0x5d5c0da3]
  417940:	mov    DWORD PTR [eax-0x43cba488],edi
  417946:	test   DWORD PTR [ecx],edi
  417948:	jae    0x4178e6
  41794a:	dec    esi
  41794b:	aaa    
  41794c:	fucomp st(1)
  41794e:	dec    edi
  41794f:	inc    ebp
  417950:	or     BYTE PTR [esi+0x58],bh
  417953:	or     BYTE PTR [ebx],ch
  417955:	or     BYTE PTR [esi],cl
  417957:	cld    
  417958:	addr16 inc ebx
  41795a:	adc    eax,0x5f456471
  41795f:	jp     0x4179a5
  417961:	sbb    DWORD PTR [ecx+ebx*4],ebp
  417964:	adc    DWORD PTR [ebx+edx*1+0x73da19f],esp
  41796b:	pushf  
  41796c:	jecxz  0x417978
  41796e:	sub    eax,0x3112f12c
  417973:	or     BYTE PTR [ebp-0x474b71c9],dl
  417979:	nop
  41797a:	pushf  
  41797b:	xchg   edx,eax
  41797c:	cli    
  41797d:	clc    
  41797e:	aam    0x2f
  417980:	adc    DWORD PTR ds:0x48719b93,ebp
  417986:	test   DWORD PTR [ebx],ebx
  417988:	push   bx
  41798a:	rcl    ebp,0x1a
  41798d:	inc    edx
  41798e:	pop    es
  41798f:	lds    ebp,FWORD PTR [edx-0x38]
  417992:	repnz mov bh,0x58
  417995:	jnp    0x4179e1
  417997:	pop    esp
  417998:	out    dx,eax
  417999:	pop    es
  41799a:	out    dx,al
  41799b:	pop    ds
  41799c:	sub    dh,BYTE PTR [ecx-0x68dacf57]
  4179a2:	sahf   
  4179a3:	push   edi
  4179a4:	dec    DWORD PTR [ebx-0x4c]
  4179a7:	push   0x0
  4179a9:	stos   DWORD PTR es:[edi],eax
  4179aa:	mov    edi,0x607e613c
  4179af:	stos   BYTE PTR es:[edi],al
  4179b0:	push   ds
  4179b1:	icebp  
  4179b2:	mov    dh,0x5a
  4179b4:	icebp  
  4179b5:	hlt    
  4179b6:	or     ah,ch
  4179b8:	imul   esi,ecx,0x50
  4179bb:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179be:	jecxz  0x4179dc
  4179c0:	shl    DWORD PTR [esi+eax*8-0xf],1
  4179c4:	bound  esi,QWORD PTR [ebp+0x23]
  4179c7:	pop    ss
  4179c8:	in     eax,0xbf
  4179ca:	xor    al,0x61
  4179cc:	(bad)  
  4179cd:	and    DWORD PTR [esi-0x4b64a304],0xa847a2c1
  4179d7:	ins    DWORD PTR es:[edi],dx
  4179d8:	sub    BYTE PTR [ebx],0xc6
  4179db:	stc    
  4179dc:	add    DWORD PTR [esi+edx*8+0x7e],edx
  4179e0:	cmp    al,0xd6
  4179e2:	enter  0xa057,0xa6
  4179e6:	cwde   
  4179e7:	jne    0x41797c
  4179e9:	stos   DWORD PTR es:[edi],eax
  4179ea:	int    0x65
  4179ec:	push   es
  4179ed:	popa   
  4179ee:	(bad)  
  4179ef:	js     0x4179c8
  4179f1:	loopne 0x41797d
  4179f3:	mov    ds:0xdeade59f,eax
  4179f8:	leave  
  4179f9:	je     0x4179cf
  4179fb:	pop    ebp
  4179fc:	jae    0x417a5b
  4179fe:	adc    ah,cl
  417a00:	rcr    DWORD PTR [edi],cl
  417a02:	dec    ebx
  417a03:	or     esi,DWORD PTR [ecx+0x26199e5b]
  417a09:	ja     0x417a4e
  417a0b:	ds retf 0xa610
  417a0f:	mov    ebx,0x59cac9d4
  417a14:	or     DWORD PTR [esi],edi
  417a16:	dec    edx
  417a17:	lahf   
  417a18:	(bad)  
  417a19:	outs   dx,DWORD PTR ds:[esi]
  417a1a:	inc    edi
  417a1b:	out    0x84,al
  417a1d:	cmp    esp,0xffffff87
  417a20:	add    eax,0x45dca101
  417a25:	mov    cl,0x12
  417a27:	xor    DWORD PTR [esi-0x39c14438],eax
  417a2d:	mov    ebp,0xf3fa38c0
  417a32:	add    eax,0xaab0e858
  417a37:	bnd jle 0x417a34
  417a3a:	and    esp,edx
  417a3c:	repnz add al,0xc
  417a3f:	jecxz  0x4179f2
  417a41:	repnz in al,0xa3
  417a44:	fcmovne st,st(5)
  417a46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a47:	das    
  417a48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a49:	in     eax,0x7d
  417a4b:	call   0x7d79170e
  417a50:	xchg   ebx,eax
  417a51:	call   0x9cfe:0x87f90ac
  417a58:	pop    ebx
  417a59:	jg     0x417abf
  417a5b:	jne    0x417a23
  417a5d:	(bad)  
  417a5e:	cli    
  417a5f:	cdq    
  417a60:	inc    esi
  417a61:	adc    esp,edi
  417a63:	outs   dx,BYTE PTR ds:[esi]
  417a64:	jge    0x417a94
  417a66:	inc    eax
  417a67:	daa    
  417a68:	xchg   edx,eax
  417a69:	shl    BYTE PTR [esi-0x6d6bca36],1
  417a6f:	shr    DWORD PTR [esi-0x788dc2c],0x3a
  417a76:	in     eax,0x47
  417a78:	test   ecx,ebp
  417a7a:	xchg   edi,eax
  417a7b:	shl    BYTE PTR cs:[ebx],cl
  417a7e:	xor    al,BYTE PTR [ebp+0x115e666b]
  417a84:	cwde   
  417a85:	aad    0x64
  417a87:	sbb    al,ch
  417a89:	ret    
  417a8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a8b:	mov    dl,0xb6
  417a8d:	cwde   
  417a8e:	xor    al,0xcd
  417a90:	sahf   
  417a91:	dec    edi
  417a92:	ds pop ss
  417a94:	div    edx
  417a96:	xchg   edx,eax
  417a97:	push   edx
  417a98:	cs push esp
  417a9a:	adc    al,0x42
  417a9c:	cmp    eax,0x4bf42586
  417aa1:	xor    eax,0x3f4b03a4
  417aa6:	and    BYTE PTR [edi],dl
  417aa8:	stos   BYTE PTR es:[edi],al
  417aa9:	ret    
  417aaa:	cmp    BYTE PTR [edx-0x11],dl
  417aad:	(bad)  
  417aae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417aaf:	rcl    BYTE PTR [edx+0x503592e],cl
  417ab5:	leave  
  417ab6:	push   0xbe3ae562
  417abb:	cmp    esi,ebp
  417abd:	xchg   BYTE PTR [edi+0x58cf5275],ah
  417ac3:	int    0xdd
  417ac5:	dec    edi
  417ac6:	fcmovu st,st(0)
  417ac8:	sbb    bl,al
  417aca:	inc    edx
  417acb:	jg     0x417b17
  417acd:	xlat   BYTE PTR ds:[ebx]
  417ace:	sbb    eax,DWORD PTR [eax]
  417ad0:	push   ebp
  417ad1:	outs   dx,DWORD PTR ds:[esi]
  417ad2:	pushf  
  417ad3:	sub    DWORD PTR [edi-0x3ed6ab3c],esi
  417ad9:	(bad)  
  417ada:	(bad)  
  417adb:	pop    ebx
  417adc:	pop    eax
  417add:	mov    DWORD PTR [ebx+0x30],eax
  417ae0:	rcr    dl,0xb3
  417ae3:	mov    edx,0xe5f0b8ee
  417ae8:	es test al,0x64
  417aeb:	loopne 0x417ab3
  417aed:	ror    BYTE PTR [ebp-0x4bb26ae6],cl
  417af3:	fist   WORD PTR [eax-0x148fbca1]
  417af9:	gs jmp 0xb3f19260
  417aff:	adc    BYTE PTR [esi+esi*2+0x6a623990],0xda
  417b07:	and    eax,0xa0579461
  417b0c:	jge    0x417b3b
  417b0e:	mov    ebx,0x650c77fd
  417b13:	pop    ds
  417b14:	call   0xbd66:0x2bfcec75
  417b1b:	mov    bh,0xe5
  417b1d:	mov    WORD PTR [edx+0x41],fs
  417b20:	sub    bh,BYTE PTR [esi+0x75]
  417b23:	fdivrp st(4),st
  417b25:	jp     0x417b12
  417b27:	les    eax,FWORD PTR [esi-0x5ffa8e2a]
  417b2d:	adc    eax,0xb305c4ec
  417b32:	in     al,0x74
  417b34:	in     eax,0x88
  417b36:	(bad)  
  417b37:	pusha  
  417b38:	pop    edi
  417b39:	inc    esp
  417b3a:	lods   al,BYTE PTR ds:[esi]
  417b3b:	imul   eax,DWORD PTR [edx-0x2e],0x68
  417b3f:	cmp    DWORD PTR [ecx+0x2960cf83],0xffffff97
  417b46:	inc    esi
  417b47:	sub    ecx,eax
  417b49:	rol    DWORD PTR [edx],0xe0
  417b4c:	xor    BYTE PTR [esi],dh
  417b4e:	retf   0x39cd
  417b51:	and    ebx,DWORD PTR [edx]
  417b53:	es test ebx,ebp
  417b56:	imul   eax,DWORD PTR [ecx-0x723905fd],0xc51abf34
  417b60:	xchg   ecx,eax
  417b61:	jmp    0x76d4:0x5a2b7407
  417b68:	cli    
  417b69:	mov    gs,WORD PTR [ebp+esi*8-0x11]
  417b6d:	jmp    0xb241e1ab
  417b72:	out    0xe5,eax
  417b74:	pop    es
  417b75:	addr16 addr16 add al,0x70
  417b79:	push   esi
  417b7a:	mov    dh,0xa9
  417b7c:	es (bad) 
  417b7e:	push   esp
  417b7f:	daa    
  417b80:	mov    WORD PTR [edx-0x3e20b78e],fs
  417b86:	mov    esi,0x8d874c19
  417b8b:	cmp    DWORD PTR [ebx-0x6f932fd0],edx
  417b91:	jb     0x417b33
  417b93:	je     0x417b22
  417b95:	icebp  
  417b96:	xchg   ebp,eax
  417b97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b98:	clc    
  417b99:	aas    
  417b9a:	push   ebx
  417b9b:	sbb    DWORD PTR [ecx-0x12],0x19
  417b9f:	add    BYTE PTR [ebp+0x5a],dh
  417ba2:	push   edx
  417ba3:	je     0x417b47
  417ba5:	pop    esi
  417ba6:	push   cs
  417ba7:	or     BYTE PTR ds:0xdf58b38e,al
  417bad:	(bad)  
  417bae:	and    ah,BYTE PTR [ecx+0x75698b27]
  417bb4:	jge    0x417be3
  417bb6:	icebp  
  417bb7:	lds    esp,FWORD PTR [esi]
  417bb9:	mov    ds:0x8ae7882f,eax
  417bbe:	sub    dl,BYTE PTR [ebx+0x1f]
  417bc1:	and    al,0x62
  417bc3:	mov    edx,0xb2e75d16
  417bc8:	es and eax,0xe90d9aad
  417bce:	int    0xca
  417bd0:	xor    al,0x6c
  417bd2:	test   al,0xdc
  417bd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bd5:	xor    esi,DWORD PTR [ecx]
  417bd7:	adc    al,0xb2
  417bd9:	add    dh,dh
  417bdb:	out    dx,eax
  417bdc:	call   0xcb0b9071
  417be1:	mov    ?,WORD PTR [eax-0x56]
  417be4:	pop    esi
  417be5:	fimul  WORD PTR [eax+0x40]
  417be8:	and    ebx,DWORD PTR [edx+0x13]
  417beb:	lock neg esi
  417bee:	test   DWORD PTR [edx],edx
  417bf0:	jbe    0x417bb1
  417bf2:	adc    dh,bl
  417bf4:	push   0xd3fefd78
  417bf9:	cli    
  417bfa:	in     eax,0x8b
  417bfc:	rcr    BYTE PTR [esi-0x23],cl
  417bff:	ficom  DWORD PTR [esi+0x78]
  417c02:	push   ds
  417c03:	adc    eax,0x5f3a4805
  417c08:	das    
  417c09:	mov    DWORD PTR [eax+0x2eb8ba27],esi
  417c0f:	xor    eax,edi
  417c11:	ins    DWORD PTR es:[edi],dx
  417c12:	sub    bl,BYTE PTR [edx+esi*1+0x1fcf77ba]
  417c19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c1a:	mov    ah,0x91
  417c1c:	ficomp DWORD PTR ds:0xd4b7340a
  417c22:	jmp    0x8a3ad5f0
  417c27:	mov    bh,0x8f
  417c29:	addr16 pop esp
  417c2b:	je     0x417be1
  417c2d:	shl    DWORD PTR [ebx-0x3dc2c8c3],0x43
  417c34:	inc    edx
  417c35:	mov    al,ds:0x12bfc561
  417c3a:	xor    DWORD PTR [esi+esi*8],esi
  417c3d:	sar    BYTE PTR [eax+ecx*2],cl
  417c40:	sub    eax,0xd285fcd4
  417c45:	inc    ecx
  417c46:	dec    esp
  417c47:	cmp    al,0x66
  417c49:	jnp    0x417bda
  417c4b:	stos   DWORD PTR es:[edi],eax
  417c4c:	sahf   
  417c4d:	test   DWORD PTR [ecx-0x32efb156],esp
  417c53:	xchg   esi,eax
  417c54:	push   ebx
  417c55:	rcr    eax,cl
  417c57:	sbb    ah,BYTE PTR [ebp+0x4d]
  417c5a:	aam    0x25
  417c5c:	inc    edx
  417c5d:	ret    
  417c5e:	sub    DWORD PTR [bp+di],esi
  417c61:	pop    edi
  417c62:	gs ss aas 
  417c65:	mov    ah,0x25
  417c67:	hlt    
  417c68:	push   ds
  417c69:	add    al,0x0
  417c6b:	outs   dx,DWORD PTR ds:[esi]
  417c6c:	push   edi
  417c6d:	aam    0x91
  417c6f:	mov    ah,BYTE PTR ds:0xbe27c845
  417c75:	push   ss
  417c76:	or     dh,0x5d
  417c79:	in     al,0x8c
  417c7b:	xor    esp,ebp
  417c7d:	jae    0x417c8a
  417c7f:	lds    esp,FWORD PTR [ebp+0x22]
  417c82:	add    eax,0xcd6aa692
  417c87:	push   edx
  417c88:	dec    edi
  417c89:	ins    BYTE PTR es:[edi],dx
  417c8a:	imul   DWORD PTR [eax+0x4310b30e]
  417c90:	es jbe 0x417ca9
  417c93:	pop    es
  417c94:	ins    DWORD PTR es:[edi],dx
  417c95:	enter  0x63e9,0x20
  417c99:	ret    0x606
  417c9c:	mov    ah,0x7a
  417c9e:	sti    
  417c9f:	aad    0xd1
  417ca1:	push   edi
  417ca2:	jae    0x417d15
  417ca4:	test   BYTE PTR [ecx+0x2eac2302],ah
  417caa:	cmp    ecx,esi
  417cac:	outs   dx,BYTE PTR ds:[esi]
  417cad:	les    esi,FWORD PTR ds:0xf1bd288e
  417cb3:	lea    ecx,[eax+0x3]
  417cb6:	or     al,0xa0
  417cb8:	icebp  
  417cb9:	push   edi
  417cba:	lods   al,BYTE PTR ds:[esi]
  417cbb:	pop    ecx
  417cbc:	iret   
  417cbd:	cmp    al,0xa
  417cbf:	push   eax
  417cc0:	jae    0x417c62
  417cc2:	ins    DWORD PTR es:[edi],dx
  417cc3:	fcomp  DWORD PTR [edi]
  417cc5:	cwde   
  417cc6:	jl     0x417cbe
  417cc8:	jne    0x417ce1
  417cca:	mov    ds:0x886a47fd,al
  417ccf:	mov    ds:0x75984e0a,eax
  417cd4:	inc    ebx
  417cd5:	dec    esp
  417cd6:	test   al,0x33
  417cd8:	mov    al,ds:0x8c9ad8f
  417cdd:	push   0x5bfc5ab2
  417ce2:	cmp    eax,0xa693c45f
  417ce7:	xchg   BYTE PTR [ebp-0x47cfdc60],ah
  417ced:	leave  
  417cee:	xchg   ebx,eax
  417cef:	bound  ebx,QWORD PTR [esi-0x6b]
  417cf2:	data16 scas al,BYTE PTR es:[edi]
  417cf4:	jno    0x417c8b
  417cf6:	popf   
  417cf7:	push   ebp
  417cf8:	aad    0x67
  417cfa:	adc    cl,ah
  417cfc:	icebp  
  417cfd:	mov    eax,ds:0x9f6ebeee
  417d02:	pusha  
  417d03:	ins    BYTE PTR es:[edi],dx
  417d04:	or     DWORD PTR [ecx-0x66],ebx
  417d07:	sbb    al,0xf5
  417d09:	push   edi
  417d0a:	repnz inc esp
  417d0c:	test   cl,dl
  417d0e:	(bad)  
  417d10:	adc    al,0x58
  417d12:	into   
  417d13:	jecxz  0x417cce
  417d15:	ja     0x417ce4
  417d17:	mov    bl,BYTE PTR [edi+0x5abcc551]
  417d1d:	push   edx
  417d1e:	inc    edi
  417d1f:	add    esp,DWORD PTR [ebx+0x6c]
  417d22:	in     eax,dx
  417d23:	mov    cl,0x3b
  417d26:	mov    eax,0x2baa7359
  417d2b:	mov    BYTE PTR [edi-0x3150b235],dl
  417d31:	push   ebp
  417d32:	call   FWORD PTR [edx-0xb82a371]
  417d38:	mov    WORD PTR [edx+ebx*4+0x106f3c70],?
  417d3f:	daa    
  417d40:	shr    ecx,0xc9
  417d43:	mov    esp,0x60e1e1a4
  417d48:	pop    ecx
  417d49:	mov    edx,0x76488257
  417d4e:	rol    DWORD PTR [esp+esi*2],1
  417d51:	and    al,0x53
  417d53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d54:	mov    ds:0x14af781,eax
  417d59:	and    dl,ch
  417d5b:	icebp  
  417d5c:	cmp    ebx,eax
  417d5e:	adc    al,0x23
  417d60:	outs   dx,DWORD PTR ds:[esi]
  417d61:	xor    DWORD PTR [ebx-0x43212019],ecx
  417d67:	mov    edi,0xea80ee4b
  417d6c:	cmp    eax,0x3ef54404
  417d71:	mov    dh,0xf9
  417d73:	mov    ah,0x45
  417d75:	fs jae 0x417dbf
  417d78:	aad    0xe9
  417d7a:	lods   al,BYTE PTR ds:[esi]
  417d7b:	mov    al,ds:0xeecace74
  417d80:	mov    eax,cs:0x7bb8e022
  417d86:	jno    0x417dc0
  417d88:	aad    0xd3
  417d8a:	test   esi,edx
  417d8c:	jmp    0x417dd8
  417d8e:	out    dx,al
  417d8f:	jle    0x417d84
  417d91:	push   esi
  417d92:	xchg   edi,eax
  417d93:	pop    ebx
  417d94:	leave  
  417d95:	inc    edx
  417d96:	lods   al,BYTE PTR ds:[esi]
  417d97:	push   esi
  417d98:	and    eax,0x1ed886d2
  417d9d:	inc    edi
  417d9e:	jb     0x417d5c
  417da0:	mov    DWORD PTR [edi],ebp
  417da2:	mov    esp,0xe4dfc27b
  417da7:	add    ebx,DWORD PTR [eax+eiz*1+0x42]
  417dab:	inc    esp
  417dac:	(bad)  
  417dad:	pop    ebp
  417dae:	ss jmp 0x417e05
  417db1:	rol    ecx,1
  417db3:	rcl    bl,cl
  417db5:	pusha  
  417db6:	and    DWORD PTR [edi+edx*2-0x67],ebp
  417dba:	lods   eax,DWORD PTR ds:[esi]
  417dbb:	(bad)  
  417dbc:	into   
  417dbd:	dec    ecx
  417dbe:	jns    0x417e02
  417dc0:	addr16 xchg esi,eax
  417dc2:	push   ds
  417dc3:	fistp  WORD PTR [ecx-0x45]
  417dc6:	sub    eax,0x5530c609
  417dcb:	or     DWORD PTR [ebp+0x5ecf4d98],ebp
  417dd1:	mov    bl,BYTE PTR [ecx]
  417dd3:	mov    ebx,0x2e165651
  417dd8:	imul   eax,DWORD PTR [ecx],0x91c4a448
  417dde:	mov    eax,0x525f999f
  417de3:	mov    al,0x79
  417de5:	nop
  417de6:	sub    al,BYTE PTR [ebp-0x18]
  417de9:	add    al,0xae
  417deb:	or     BYTE PTR [ebx],bh
  417ded:	mov    ebx,0x67357152
  417df2:	cmp    BYTE PTR [ecx+0x50ede081],ch
  417df8:	add    DWORD PTR [edi+0x26],ebx
  417dfb:	not    DWORD PTR [eax-0x1ceb63f1]
  417e01:	pop    ecx
  417e02:	lods   eax,DWORD PTR ds:[esi]
  417e03:	shr    DWORD PTR ds:0x935de047,1
  417e09:	cmp    bl,BYTE PTR [esi]
  417e0b:	ret    0x7e8a
  417e0e:	sbb    eax,0x4184d7bf
  417e13:	vxorps xmm0,xmm5,XMMWORD PTR [edx-0x9]
  417e18:	ss ds test eax,0xec617eca
  417e1f:	lods   eax,DWORD PTR ds:[esi]
  417e20:	es test ecx,esi
  417e23:	inc    ecx
  417e24:	inc    ebp
  417e25:	lea    ecx,[esp+edx*8-0x9a91a32]
  417e2c:	test   eax,0x30d2189
  417e31:	cmp    ch,BYTE PTR [ecx-0x5eb6ec90]
  417e37:	mov    al,ds:0x88333614
  417e3c:	jecxz  0x417dd4
  417e3e:	adc    BYTE PTR [esi-0x260a7b62],0x47
  417e45:	aaa    
  417e46:	dec    ebp
  417e47:	ret    
  417e48:	repnz std 
  417e4a:	or     al,0x5e
  417e4c:	test   ah,bl
  417e4e:	inc    ecx
  417e4f:	ins    BYTE PTR es:[edi],dx
  417e50:	dec    esp
  417e51:	test   esi,ebp
  417e53:	pop    ecx
  417e54:	aad    0x62
  417e56:	mov    DWORD PTR [edi+0xf441da],esp
  417e5c:	cld    
  417e5d:	in     al,dx
  417e5e:	xor    DWORD PTR [ebx-0x57],esp
  417e61:	ins    BYTE PTR es:[edi],dx
  417e62:	mov    ecx,0xaa9bb949
  417e67:	and    DWORD PTR [edi],0x1a
  417e6a:	sbb    bh,cl
  417e6c:	(bad)
  417e70:	xchg   edi,eax
  417e71:	out    dx,eax
  417e72:	(bad)  
  417e73:	fwait
  417e74:	inc    eax
  417e75:	stos   BYTE PTR es:[edi],al
  417e76:	inc    eax
  417e77:	(bad)  
  417e79:	fcomp  DWORD PTR [ebx+0x2e46266f]
  417e7f:	fld    DWORD PTR [ebx+esi*2-0x6e]
  417e83:	sahf   
  417e84:	jmp    FWORD PTR [edx]
  417e86:	fild   WORD PTR [edi+0x6a125a76]
  417e8c:	iret   
  417e8d:	sub    edi,DWORD PTR [ebp+0x349571d5]
  417e93:	push   ss
  417e94:	icebp  
  417e95:	jg     0x417efe
  417e97:	and    al,0xc4
  417e99:	push   edi
  417e9a:	(bad)  
  417e9b:	out    0xc6,eax
  417e9d:	leave  
  417e9e:	cmp    al,0x91
  417ea0:	pusha  
  417ea1:	cmp    ecx,DWORD PTR [eax-0x7d30c451]
  417ea7:	mov    ebp,0x64570bf
  417eac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ead:	adc    esp,ebp
  417eaf:	dec    esp
  417eb0:	sbb    eax,DWORD PTR [esi-0x49]
  417eb3:	fistp  WORD PTR ds:0x5156b8a1
  417eb9:	push   ebp
  417eba:	xlat   BYTE PTR ds:[ebx]
  417ebb:	and    al,0xf6
  417ebd:	mov    ch,0x9d
  417ebf:	inc    esi
  417ec0:	fist   DWORD PTR [edi+0x29b9d4a0]
  417ec6:	iret   
  417ec7:	fwait
  417ec8:	mov    al,ds:0xf41c37a5
  417ecd:	inc    ebx
  417ece:	ja     0x417f17
  417ed0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ed1:	ins    DWORD PTR es:[edi],dx
  417ed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ed3:	push   esi
  417ed4:	pop    eax
  417ed5:	out    dx,al
  417ed6:	lods   eax,DWORD PTR ds:[esi]
  417ed7:	mov    ch,0xa1
  417ed9:	mov    esp,eax
  417edb:	xchg   esp,eax
  417edc:	push   ss
  417edd:	xor    BYTE PTR [esi-0x5a81c1eb],ah
  417ee3:	clc    
  417ee4:	xor    BYTE PTR [ebx-0x42],al
  417ee7:	inc    ecx
  417ee8:	mov    ah,0x32
  417eea:	jmp    0xc3832f90
  417eef:	push   cs
  417ef0:	push   ds
  417ef1:	dec    ebp
  417ef2:	adc    eax,0xc0b42e17
  417ef7:	fadd   st,st(0)
  417ef9:	or     al,0x48
  417efb:	cmc    
  417efc:	sti    
  417efd:	inc    esp
  417efe:	popf   
  417eff:	hlt    
  417f00:	rcr    BYTE PTR [eax+edx*4],0xeb
  417f04:	dec    edx
  417f05:	(bad)  
  417f06:	adc    BYTE PTR [edx+ebp*2+0x57bcf52],bl
  417f0d:	add    al,0xe0
  417f0f:	cmp    DWORD PTR [edi],ebx
  417f11:	(bad)  
  417f12:	inc    ebx
  417f13:	adc    eax,0x37e964c4
  417f18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f19:	cli    
  417f1a:	ror    DWORD PTR [edx],cl
  417f1c:	fidivr DWORD PTR [ecx+eax*8+0x28c1995e]
  417f23:	enter  0x9257,0x1d
  417f27:	or     al,al
  417f29:	or     dh,BYTE PTR [esi]
  417f2b:	mov    ebp,0x53a146c6
  417f30:	repz dec ebx
  417f32:	pop    ecx
  417f33:	test   al,0x23
  417f35:	gs (bad) 
  417f37:	push   ebx
  417f39:	outs   dx,DWORD PTR ds:[esi]
  417f3a:	cld    
  417f3b:	dec    esp
  417f3c:	lahf   
  417f3d:	ja     0x417f62
  417f3f:	sub    DWORD PTR [eax],edx
  417f41:	(bad)  
  417f42:	add    ebx,DWORD PTR [edi+edi*2]
  417f45:	dec    ecx
  417f46:	cs xor cl,bl
  417f49:	mov    ch,0x9f
  417f4b:	push   cs
  417f4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f4d:	mov    ds:0xc0115dd8,al
  417f52:	push   ebp
  417f53:	jmp    FWORD PTR [edx+0x52]
  417f56:	in     al,dx
  417f57:	enter  0xb4f4,0xb3
  417f5b:	xchg   ebp,eax
  417f5c:	shl    BYTE PTR [ecx],cl
  417f5e:	cmp    al,0xef
  417f60:	or     DWORD PTR [eax+0x74],edx
  417f63:	aaa    
  417f64:	ja     0x417ee7
  417f66:	xchg   esp,eax
  417f67:	ret    0x8cf0
  417f6a:	pop    esi
  417f6b:	stos   BYTE PTR es:[edi],al
  417f6c:	inc    eax
  417f6d:	or     cl,al
  417f6f:	jl     0x417f94
  417f71:	(bad)  
  417f72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f73:	xor    esi,0xffffffcc
  417f76:	cdq    
  417f77:	sahf   
  417f78:	cwde   
  417f79:	xor    bh,cl
  417f7b:	das    
  417f7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f7d:	cmp    ch,bl
  417f7f:	cmc    
  417f80:	xchg   ebx,eax
  417f81:	push   eax
  417f82:	stc    
  417f83:	xlat   BYTE PTR ds:[ebx]
  417f84:	jmp    0x417f7e
  417f86:	jg     0x417fdc
  417f88:	push   edx
  417f89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f8a:	cmp    eax,0xc6c6f807
  417f8f:	jns    0x417f30
  417f91:	jmp    0x85e4:0x603bd510
  417f98:	pop    es
  417f99:	dec    ecx
  417f9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f9b:	mov    eax,?
  417f9d:	jae    0x417fe4
  417f9f:	add    al,0x2
  417fa1:	dec    edx
  417fa2:	push   ebx
  417fa3:	hlt    
  417fa4:	call   0x6ea03062
  417fa9:	mov    bh,0xc3
  417fab:	add    BYTE PTR [ebx+0x7860832d],bh
  417fb1:	pusha  
  417fb2:	dec    ebp
  417fb3:	inc    edx
  417fb4:	adc    al,0x8a
  417fb6:	pop    edi
  417fb7:	ss jg  0x41801a
  417fba:	rcr    DWORD PTR [ecx+esi*4-0x66788cfd],cl
  417fc1:	jno    0x41802e
  417fc3:	or     eax,0xabe11b02
  417fc8:	adc    al,0xf3
  417fca:	and    BYTE PTR [edx-0xbddf61d],cl
  417fd0:	pop    ebp
  417fd1:	jo     0x417fe5
  417fd3:	mov    DWORD PTR [edi+0x6859a5f],edi
  417fd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fda:	in     eax,0x13
  417fdc:	inc    eax
  417fdd:	mov    al,0xad
  417fdf:	xchg   edi,eax
  417fe0:	dec    ecx
  417fe1:	leave  
  417fe2:	out    0x20,al
  417fe4:	pop    eax
  417fe5:	adc    BYTE PTR [ebx+0x19fa0bbb],ch
  417feb:	pusha  
  417fec:	push   es
  417fed:	pop    ebx
  417fee:	pop    edi
  417fef:	dec    esp
  417ff0:	xor    eax,0x121c0ca
  417ff5:	mov    ?,WORD PTR [eax-0x4019c45a]
  417ffb:	xor    al,0x37
  417ffd:	adc    dl,BYTE PTR [ebx+0x72]
  418000:	arpl   WORD PTR [eax+0x2f73be93],cx
  418006:	xchg   esp,eax
  418007:	xor    DWORD PTR [eax],ebx
  418009:	xor    bl,0xb8
  41800c:	jne    0x418089
  41800e:	aas    
  41800f:	aas    
  418010:	jmp    DWORD PTR [ebp-0x318ffbfc]
  418016:	xchg   ebp,eax
  418017:	loope  0x417fe1
  418019:	xlat   BYTE PTR ds:[ebx]
  41801a:	jecxz  0x417fef
  41801c:	mov    edx,0x9e093f2d
  418021:	push   esp
  418022:	(bad)  
  418023:	daa    
  418024:	adc    edi,edi
  418026:	shl    dl,cl
  418028:	pop    ebx
  418029:	inc    edx
  41802a:	fcomp  DWORD PTR [esi-0x7c0756b7]
  418030:	push   ecx
  418031:	pop    esp
  418032:	or     ch,al
  418034:	mov    bh,0xdc
  418036:	push   esi
  418037:	inc    eax
  418038:	pop    edx
  418039:	ds sub al,0xc
  41803c:	jmp    0x6c8:0x5b2d1d28
  418043:	adc    DWORD PTR [edi-0x488aa8f3],0x75
  41804a:	not    dl
  41804c:	out    0x46,eax
  41804e:	sbb    DWORD PTR [ebx+0x46e882be],esp
  418054:	cld    
  418055:	aam    0x78
  418057:	xor    al,BYTE PTR [esi]
  418059:	jle    0x4180d7
  41805b:	imul   eax,DWORD PTR [eax],0x10
  41805e:	pop    ebp
  41805f:	sbb    ecx,DWORD PTR [ecx]
  418061:	or     bh,bh
  418063:	jl     0x41802e
  418065:	in     eax,dx
  418066:	rol    ch,cl
  418068:	test   DWORD PTR [edi+0x38ba3f48],edi
  41806e:	push   0xa9a64a89
  418073:	cli    
  418074:	dec    edi
  418075:	(bad)  
  418076:	and    al,0xe7
  418078:	scas   al,BYTE PTR es:[edi]
  418079:	inc    edx
  41807a:	adc    eax,0xa8669279
  41807f:	or     bh,ah
  418081:	iret   
  418082:	call   DWORD PTR [eax]
  418084:	sub    al,0xce
  418086:	inc    eax
  418087:	lods   al,BYTE PTR ds:[esi]
  418088:	mul    ecx
  41808a:	rol    DWORD PTR [ebx+0x5],0x8
  41808e:	inc    edi
  41808f:	call   esi
  418091:	ficomp DWORD PTR [esp+ebp*1+0x59]
  418095:	call   0x38ee:0x602e57fe
  41809c:	sbb    dl,BYTE PTR [ebx+0x6]
  41809f:	sbb    ch,BYTE PTR [edi-0x6516e79b]
  4180a5:	aas    
  4180a6:	je     0x418086
  4180a8:	test   BYTE PTR [edi+eiz*4],0xd8
  4180ac:	mov    ds:0x741028f7,al
  4180b1:	or     al,BYTE PTR [ebp+0x7b6dc1fd]
  4180b7:	bound  eax,QWORD PTR [ecx+0x7f]
  4180ba:	or     eax,0xe6048d1c
  4180bf:	jmp    0xb76b24b8
  4180c4:	push   edx
  4180c5:	push   ebx
  4180c6:	cmp    DWORD PTR [esi-0x74924546],0xa4c1fa5
  4180d0:	lods   al,BYTE PTR ds:[esi]
  4180d1:	mov    edi,0x7f325f8b
  4180d6:	mov    eax,0x572d1d7c
  4180db:	std    
  4180dc:	mov    WORD PTR [edi+0x1f9d7efb],?
  4180e2:	fbstp  TBYTE PTR ds:0xc167e356
  4180e8:	xor    ebx,DWORD PTR [bp+0x70]
  4180ec:	jns    0x4180bd
  4180ee:	push   cs
  4180ef:	rol    DWORD PTR [ebp+0xe68d6bd],1
  4180f5:	cs pop ss
  4180f7:	push   eax
  4180f8:	arpl   WORD PTR [ecx-0x39285951],sp
  4180fe:	lock sbb al,0xdf
  418101:	je     0x4180a1
  418103:	jae    0x418093
  418105:	push   esi
  418106:	pop    edx
  418107:	push   0x5c23d1af
  41810c:	and    DWORD PTR ds:0xf7f8c75a,ecx
  418112:	sbb    BYTE PTR [esi-0x75],0x7f
  418116:	mov    esi,0x243d1200
  41811b:	les    ebp,FWORD PTR [edi]
  41811d:	loop   0x41809f
  41811f:	outs   dx,DWORD PTR ds:[esi]
  418120:	cli    
  418121:	adc    edi,DWORD PTR [edi]
  418123:	lock sahf 
  418125:	in     al,dx
  418126:	arpl   WORD PTR [ebp-0x2a],si
  418129:	out    dx,eax
  41812a:	and    esi,esp
  41812c:	out    0x9f,eax
  41812e:	mov    ch,0xf8
  418130:	push   0xffffff9e
  418132:	push   esi
  418133:	cmp    DWORD PTR [eax-0x4bc89a53],eax
  418139:	xor    eax,0x4007257b
  41813e:	stc    
  41813f:	loop   0x4180fa
  418141:	aas    
  418142:	loopne 0x418124
  418144:	ret    
  418145:	sub    BYTE PTR [esi-0x2a],bl
  418148:	mov    ds:0x1518807e,al
  41814d:	data16 adc bh,BYTE PTR [ebp+0x39e530b]
  418154:	daa    
  418155:	push   ebp
  418156:	inc    esi
  418157:	les    edx,FWORD PTR [ecx-0x4efd09aa]
  41815d:	imul   ecx,ebx,0xc2423eb1
  418163:	mov    ecx,0xca134f24
  418168:	and    edi,DWORD PTR [edi-0x74f6dcd3]
  41816e:	ja     0x41813a
  418170:	sub    eax,0xd97c2f25
  418175:	sbb    al,0xab
  418177:	int    0xd9
  418179:	es or  eax,0x4e7e7766
  41817f:	js     0x418118
  418181:	dec    eax
  418182:	inc    ebp
  418183:	stos   BYTE PTR es:[edi],al
  418184:	fdiv   DWORD PTR [ebx-0xf]
  418187:	dec    eax
  418188:	lock outs dx,BYTE PTR ds:[esi]
  41818a:	push   edx
  41818b:	out    dx,eax
  41818c:	addr16 inc edi
  41818e:	data16 lods al,BYTE PTR ds:[esi]
  418190:	ins    BYTE PTR es:[edi],dx
  418191:	adc    dl,0x5d
  418194:	cli    
  418195:	push   ds
  418196:	aam    0x3d
  418198:	or     al,0x31
  41819a:	(bad)  
  41819b:	aad    0x20
  41819d:	inc    esi
  41819e:	mov    ds:0x83cb45fd,al
  4181a3:	in     eax,0x9d
  4181a5:	leave  
  4181a6:	push   ebx
  4181a7:	xor    al,0x9c
  4181a9:	xor    ebx,edi
  4181ab:	js     0x4181e8
  4181ad:	rcr    BYTE PTR [esi+esi*2-0x29],cl
  4181b1:	mov    ds:0x63ccf7fa,eax
  4181b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181b7:	int3   
  4181b8:	cmc    
  4181b9:	pop    esp
  4181ba:	loope  0x4181e2
  4181bc:	stos   DWORD PTR es:[edi],eax
  4181bd:	and    al,0x84
  4181bf:	jl     0x4181a6
  4181c1:	jb     0x4181f1
  4181c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181c4:	sbb    ch,BYTE PTR [eax-0x12]
  4181c7:	fs and al,0x30
  4181ca:	xchg   esi,eax
  4181cb:	nop
  4181cc:	xchg   ecx,eax
  4181cd:	adc    BYTE PTR [edi],0x98
  4181d0:	outs   dx,DWORD PTR ds:[esi]
  4181d1:	test   DWORD PTR [esi-0x1a],0xb18ab921
  4181d8:	ret    0x80c0
  4181db:	jmp    0xd61:0xdfc8b441
  4181e2:	mov    ds:0x9ebaca24,al
  4181e7:	jb     0x4181c7
  4181e9:	xor    al,al
  4181eb:	dec    edi
  4181ec:	cdq    
  4181ed:	(bad)  
  4181ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181ef:	ja     0x41820c
  4181f1:	inc    ebp
  4181f2:	ds pop ds
  4181f4:	sbb    bl,dl
  4181f6:	xlat   BYTE PTR ds:[ebx]
  4181f7:	mov    ecx,0x384db05c
  4181fc:	test   al,0x7
  4181fe:	cmp    DWORD PTR [edi+0x4c],ebx
  418201:	or     dh,al
  418203:	scas   al,BYTE PTR es:[edi]
  418204:	mov    ebp,0xdd6df561
  418209:	push   0x93567a22
  41820e:	std    
  41820f:	jne    0x41823d
  418211:	or     eax,0x21e0441b
  418216:	mov    DWORD PTR [ecx],edx
  418218:	ret    0x5782
  41821b:	aam    0x9f
  41821d:	jl     0x418242
  41821f:	loopne 0x41824b
  418221:	lods   eax,DWORD PTR ds:[esi]
  418222:	xchg   esp,eax
  418223:	xchg   edx,eax
  418224:	sbb    ecx,DWORD PTR [esi+0x49]
  418227:	fwait
  418228:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418229:	xchg   esp,eax
  41822a:	sbb    eax,DWORD PTR ds:0x43a0ef39
  418230:	and    cl,BYTE PTR [edx+0x748a4490]
  418236:	sahf   
  418237:	sub    DWORD PTR [eax+eax*1-0x3723a26d],0xffffffc0
  41823f:	add    ecx,DWORD PTR [ebx-0x5d]
  418242:	jge    0x418235
  418244:	std    
  418245:	aam    0x40
  418247:	cmp    al,0x8a
  418249:	dec    ebx
  41824a:	in     eax,dx
  41824b:	mov    ecx,0x41d7df3
  418250:	push   es
  418251:	rcr    DWORD PTR [ecx-0x55],cl
  418254:	inc    eax
  418255:	mov    ah,0xa1
  418257:	mov    bh,0x50
  418259:	xor    eax,0x1b91ee57
  41825e:	(bad)  
  41825f:	addr16 test al,0xa3
  418262:	fidivr DWORD PTR [edi-0x49d7f543]
  418268:	(bad)  [edx+0x668fcf7]
  41826e:	loopne 0x418234
  418270:	fcomp  DWORD PTR [ebx-0x282127d5]
  418276:	aad    0x64
  418278:	adc    ah,0x6e
  41827b:	jecxz  0x418205
  41827d:	xlat   BYTE PTR ds:[ebx]
  41827e:	imul   ebx,DWORD PTR [ecx+ecx*1-0x50ab38bc],0xffffffb0
  418286:	pop    esi
  418287:	je     0x4182a2
  418289:	jp     0x418225
  41828b:	leave  
  41828c:	lea    ebp,[edi-0x59df4d0f]
  418292:	add    dh,dh
  418294:	lea    ebx,[edx]
  418296:	rcl    BYTE PTR [ecx-0x68512ae8],0x6d
  41829d:	sub    eax,0xff39b28f
  4182a2:	pop    eax
  4182a3:	rol    BYTE PTR [ebx],1
  4182a5:	enter  0x883a,0xb4
  4182a9:	push   0x585a33d7
  4182ae:	sbb    esi,DWORD PTR [eax+ebp*8-0x2c]
  4182b2:	xor    DWORD PTR [ebp-0x43108ee2],0x6fe903f9
  4182bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182bd:	inc    ebx
  4182be:	jbe    0x4182d8
  4182c0:	ins    BYTE PTR es:[edi],dx
  4182c1:	outs   dx,DWORD PTR ds:[esi]
  4182c2:	loopne 0x4182b0
  4182c4:	bound  ecx,QWORD PTR [edi+0x796c1eb5]
  4182ca:	sbb    DWORD PTR [ecx+ecx*1+0x6e8c67df],esp
  4182d1:	adc    DWORD PTR [edi-0x5329a066],0x17
  4182d8:	(bad)  
  4182d9:	clc    
  4182da:	and    cl,BYTE PTR [ebp-0x2c51624b]
  4182e0:	iret   
  4182e1:	mov    edx,0xf55677d5
  4182e6:	shr    dh,1
  4182e8:	lods   al,BYTE PTR ds:[esi]
  4182e9:	or     cl,BYTE PTR [ecx+0x31512564]
  4182ef:	mov    esp,0x9cbbaecf
  4182f4:	adc    ah,BYTE PTR [eax-0x7b6ae3d4]
  4182fa:	imul   ecx,DWORD PTR [edx+0x7b],0xce010691
  418301:	(bad)  
  418302:	fstp   QWORD PTR [ecx-0x6a]
  418305:	sub    eax,0x1105388c
  41830a:	popa   
  41830b:	fisttp QWORD PTR [ecx]
  41830d:	mov    eax,es:0xee18342
  418313:	sub    BYTE PTR [ecx+ebp*8],bh
  418316:	dec    esp
  418317:	dec    eax
  418318:	mov    al,0x82
  41831a:	shl    edi,1
  41831c:	mov    edx,0x4d3b663b
  418321:	sub    ebp,edi
  418323:	sbb    esi,DWORD PTR [ecx-0x4b]
  418326:	clc    
  418327:	loope  0x4182dd
  418329:	push   esp
  41832a:	mov    dh,0x24
  41832c:	and    BYTE PTR [edx+ecx*4+0x54],0xa7
  418331:	popf   
  418332:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418333:	cwde   
  418334:	mov    eax,0x9d4f963e
  418339:	mov    edx,0xca52b793
  41833e:	sbb    ecx,DWORD PTR [esi]
  418340:	daa    
  418341:	jns    0x418378
  418343:	mov    edi,0x18c09d67
  418348:	pop    edx
  418349:	adc    al,0x69
  41834b:	mov    esi,0x8e543e7b
  418350:	das    
  418351:	shl    DWORD PTR [ecx+0x7f],0x79
  418355:	jecxz  0x418356
  418357:	cld    
  418358:	and    al,0xf2
  41835a:	call   0xc1799aa
  41835f:	adc    eax,0x8032e8f7
  418364:	xchg   ebx,eax
  418365:	pop    ebp
  418366:	mov    bh,0x3f
  418368:	or     ebx,DWORD PTR [edi]
  41836a:	lds    ebp,FWORD PTR [ebx+0x4dd2a594]
  418370:	pop    edi
  418371:	mov    BYTE PTR [ebx+0x4c],0x95
  418375:	jmp    DWORD PTR [eax]
  418377:	jb     0x4183a3
  418379:	adc    al,0x68
  41837b:	(bad)  
  41837d:	sbb    eax,0x68fd8338
  418382:	inc    edi
  418383:	inc    esi
  418384:	pushf  
  418385:	in     al,0x82
  418387:	mov    ch,0x67
  418389:	loop   0x4183ad
  41838b:	out    dx,eax
  41838c:	jns    0x4183bc
  41838e:	xlat   BYTE PTR ds:[ebx]
  41838f:	pop    esp
  418390:	test   DWORD PTR [di-0x36],ebp
  418394:	adc    al,0x1e
  418397:	test   DWORD PTR [eax],eax
  418399:	pop    edx
  41839a:	lods   eax,DWORD PTR ds:[esi]
  41839b:	frstor [edx-0x1d]
  41839e:	add    bh,BYTE PTR [eax]
  4183a0:	lods   al,BYTE PTR ds:[esi]
  4183a1:	test   eax,0x8513e3cd
  4183a6:	add    BYTE PTR [esi+ebp*8],dh
  4183a9:	shr    DWORD PTR [eax],0x30
  4183ac:	cvtdq2ps xmm5,xmm2
  4183af:	mov    cl,0x6
  4183b1:	call   0x14c8f8cb
  4183b6:	sahf   
  4183b7:	mov    esi,0xc325fb8d
  4183bc:	cmp    esi,eax
  4183be:	inc    ecx
  4183bf:	jo     0x4183b1
  4183c1:	pop    ebx
  4183c2:	loopne 0x418426
  4183c4:	xchg   edx,eax
  4183c5:	aas    
  4183c6:	mov    DWORD PTR [eax-0x2c7a08dd],edx
  4183cc:	shr    BYTE PTR [edx],cl
  4183ce:	mov    WORD PTR [eax],?
  4183d0:	lock mov ds,WORD PTR [esi+edx*1]
  4183d4:	rcl    esp,cl
  4183d6:	in     al,dx
  4183d7:	xlat   BYTE PTR ds:[ebx]
  4183d8:	addr16 mov bh,0xb2
  4183db:	mov    edx,0x246fae27
  4183e0:	push   eax
  4183e1:	jmp    DWORD PTR [ebx+0x68]
  4183e4:	xchg   esp,eax
  4183e5:	ror    DWORD PTR cs:[ebp+0xe],0x80
  4183ea:	mov    bl,0x20
  4183ec:	fmul   QWORD PTR [edi+0x37ed728]
  4183f2:	(bad)  
  4183f4:	pop    es
  4183f5:	loope  0x418437
  4183f7:	dec    ecx
  4183f8:	mov    bh,bl
  4183fa:	fmul   QWORD PTR [edi-0xbf7c781]
  418400:	push   esp
  418401:	(bad)  
  418402:	into   
  418403:	pop    eax
  418404:	adc    eax,0x8a8ba0e9
  418409:	dec    esi
  41840a:	pop    ebp
  41840b:	jl     0x4183c2
  41840d:	js     0x418465
  41840f:	xchg   edi,eax
  418410:	pop    ebx
  418411:	jne    0x418409
  418413:	adc    al,0xec
  418415:	js     0x4183c5
  418417:	add    eax,0x9ebcc352
  41841c:	mov    WORD PTR [ebx+edx*4-0xe],ds
  418420:	and    eax,0x3d5d62c
  418425:	cdq    
  418426:	rol    BYTE PTR [eax],1
  418428:	inc    ecx
  418429:	jb     0x418400
  41842b:	and    eax,0x40354303
  418430:	mov    ebx,0x8efa1f93
  418435:	xor    DWORD PTR [ebp-0x49d5f4ab],0x66
  41843c:	leave  
  41843d:	retf   0xb7d6
  418440:	mov    al,0x62
  418442:	mov    fs,WORD PTR [ebp-0x72039375]
  418448:	add    DWORD PTR [edi-0x3f],ebx
  41844b:	xlat   BYTE PTR ds:[ebx]
  41844c:	imul   esi,DWORD PTR [ebp*1+0x14e669d3],0x88172284
  418457:	addr16 std 
  418459:	aas    
  41845a:	cld    
  41845b:	cli    
  41845c:	mov    edx,0x7e87929b
  418461:	hlt    
  418462:	enter  0x3785,0x7f
  418466:	rcr    DWORD PTR [ecx],cl
  418468:	xor    DWORD PTR [edx],ecx
  41846a:	int    0x28
  41846c:	pop    ss
  41846d:	ror    BYTE PTR [eax-0x3b],0xf0
  418471:	repnz icebp 
  418473:	mov    WORD PTR [ebx],fs
  418475:	lea    ebp,[edi]
  418477:	and    ecx,DWORD PTR [eax+0x1129a826]
  41847d:	out    0x3f,eax
  41847f:	sar    DWORD PTR [esi+0x5279c048],1
  418485:	test   edi,eax
  418487:	adc    bl,bl
  418489:	add    eax,0xba1f8e03
  41848e:	nop
  41848f:	pop    ebp
  418490:	pop    ecx
  418491:	sub    dl,BYTE PTR ds:0xdf00c26c
  418497:	cli    
  418498:	mov    edi,0x5ad92e06
  41849d:	inc    ebp
  41849e:	or     BYTE PTR [ebp-0x31a95619],ch
  4184a4:	dec    ecx
  4184a5:	aas    
  4184a6:	stos   DWORD PTR es:[edi],eax
  4184a7:	or     esi,DWORD PTR ds:0x7698b38b
  4184ad:	jae    0x4184f4
  4184af:	or     bh,BYTE PTR [edx-0x19]
  4184b2:	leave  
  4184b3:	data16 fisttp WORD PTR [eax+0x16]
  4184b7:	js     0x4184e8
  4184b9:	sub    BYTE PTR [edx-0x27c14873],cl
  4184bf:	add    al,0x5d
  4184c1:	enter  0x400b,0x67
  4184c5:	add    ch,ah
  4184c7:	in     eax,0x58
  4184c9:	adc    dh,BYTE PTR [ecx-0x21313a10]
  4184cf:	inc    eax
  4184d0:	push   esp
  4184d1:	(bad)  
  4184d2:	in     al,dx
  4184d3:	mov    edx,0x4f60e54e
  4184d8:	fwait
  4184d9:	mov    esp,0xb8c983c6
  4184de:	dec    esi
  4184df:	jbe    0x418531
  4184e1:	adc    BYTE PTR [eax+0x19],dh
  4184e4:	mov    bl,0xe2
  4184e6:	inc    edi
  4184e7:	scas   eax,DWORD PTR es:[edi]
  4184e8:	mov    ds:0xbbfa97dc,eax
  4184ed:	jl     0x41848f
  4184ef:	pop    edx
  4184f0:	jge    0x41851c
  4184f2:	aas    
  4184f3:	and    eax,0x589e9015
  4184f8:	pop    edi
  4184f9:	pop    ds
  4184fa:	retf   
  4184fb:	mov    bh,0x79
  4184fd:	xchg   edx,eax
  4184fe:	add    DWORD PTR [edx+0x21],0xffffffec
  418502:	aad    0x53
  418504:	das    
  418505:	cli    
  418506:	clts   
  418508:	sbb    esp,DWORD PTR [ecx-0x51]
  41850b:	xchg   ebp,eax
  41850c:	and    bl,ah
  41850e:	popa   
  41850f:	cmp    edx,DWORD PTR [ecx+0x1e]
  418512:	push   ds
  418513:	in     eax,dx
  418514:	push   ss
  418515:	adc    eax,0x2dc6cb17
  41851a:	jmp    0x98fb7970
  41851f:	cmp    DWORD PTR [ecx+0x68],esi
  418522:	jl     0x418531
  418524:	xchg   ecx,eax
  418525:	jecxz  0x4184dc
  418527:	jo     0x418543
  418529:	mov    ebp,0x423ac8d4
  41852e:	jne    0x41852c
  418530:	push   ebx
  418531:	dec    ebx
  418532:	push   0x36
  418534:	pop    ebp
  418535:	and    BYTE PTR [eax+0x5c14e543],bh
  41853b:	fsub   QWORD PTR [edi-0x6d649d31]
  418541:	jb     0x418569
  418543:	and    eax,0x397b962b
  418548:	gs pusha 
  41854a:	mov    ebx,0x4b0f5a1f
  41854f:	adc    eax,0x5b2f44a4
  418554:	imul   ecx,edx,0xde66e873
  41855a:	lods   al,BYTE PTR ds:[esi]
  41855b:	fld    QWORD PTR [edi+edi*2-0x6d]
  41855f:	jb     0x4185a4
  418561:	cmc    
  418562:	mov    ds:0x790c01e6,al
  418567:	cwde   
  418568:	cdq    
  418569:	in     eax,dx
  41856a:	inc    edx
  41856b:	scas   al,BYTE PTR es:[edi]
  41856c:	push   0x386652c6
  418571:	pop    edi
  418572:	pop    ecx
  418573:	test   al,0x1b
  418575:	jae    0x41855d
  418577:	push   ecx
  418578:	call   0x4356:0x38b496c1
  41857f:	cmp    dh,BYTE PTR [edx*1-0x38be4162]
  418586:	jmp    0xf392:0x90c9
  41858c:	leave  
  41858d:	and    BYTE PTR [ecx-0x3d],bl
  418590:	pushf  
  418591:	mov    bh,BYTE PTR [edi+0x1a1d3f57]
  418597:	xchg   DWORD PTR [ecx+0x1e98f778],eax
  41859d:	test   al,0xcc
  41859f:	xor    al,0x64
  4185a1:	xlat   BYTE PTR ds:[ebx]
  4185a2:	jle    0x41857c
  4185a4:	jp     0x4185d3
  4185a6:	rcr    al,1
  4185a8:	ins    DWORD PTR es:[edi],dx
  4185a9:	sti    
  4185aa:	leave  
  4185ab:	jmp    0xc4f3:0x403b3b35
  4185b2:	mov    dh,0xa4
  4185b4:	dec    BYTE PTR [edx+0x5c]
  4185b7:	shr    BYTE PTR [esi],0xe6
  4185ba:	push   eax
  4185bb:	add    ah,BYTE PTR [ecx+0xc]
  4185be:	imul   ebp,DWORD PTR [eax],0xfffffff0
  4185c1:	shl    dh,0xeb
  4185c4:	sbb    eax,DWORD PTR [ecx]
  4185c6:	fist   WORD PTR [eax+0x55]
  4185c9:	(bad)  
  4185ca:	dec    edx
  4185cb:	je     0x4185af
  4185cd:	fdiv   st(2),st
  4185cf:	lock stos BYTE PTR es:[edi],al
  4185d1:	call   0x1e1d1460
  4185d6:	fsubr  st(5),st
  4185d8:	into   
  4185d9:	jp     0x4185b7
  4185db:	mov    esp,0x41011719
  4185e0:	dec    ebx
  4185e1:	jmp    0x418581
  4185e3:	adc    BYTE PTR [ecx-0x6e],cl
  4185e6:	aam    0xb7
  4185e8:	ins    BYTE PTR es:[edi],dx
  4185e9:	sbb    eax,0x8fe6ce07
  4185ee:	jl     0x4185c7
  4185f0:	out    0xe2,al
  4185f2:	pop    esp
  4185f3:	lods   al,BYTE PTR ds:[esi]
  4185f4:	popa   
  4185f5:	rcr    DWORD PTR [edi],cl
  4185f7:	lds    esi,FWORD PTR ds:[esi-0x6c]
  4185fb:	fs addr16 aaa 
  4185fe:	pop    esp
  4185ff:	sbb    DWORD PTR [eax-0x7a],esi
  418602:	cmp    eax,0xf2e9ba14
  418607:	xchg   ebx,eax
  418608:	call   0xd31851d0
  41860d:	mov    cl,0xfc
  41860f:	mov    ds:0xd37b12b,al
  418614:	aaa    
  418615:	int    0x11
  418617:	pop    ss
  418618:	push   ecx
  418619:	test   eax,0x5584c0db
  41861e:	mov    ?,WORD PTR [esi+0x4e388d0c]
  418624:	and    al,0xff
  418626:	imul   ebp,DWORD PTR [edx-0x5fdfb529],0xfffffff4
  41862d:	push   ebp
  41862e:	and    eax,0x80fa72c7
  418633:	cmp    eax,0x7f695a4c
  418638:	lods   eax,DWORD PTR ds:[esi]
  418639:	(bad)  
  41863a:	pop    esp
  41863b:	pop    ds
  41863c:	in     eax,0xb5
  41863e:	mov    bl,0x2c
  418640:	jne    0x418600
  418642:	aaa    
  418643:	les    eax,FWORD PTR [edi-0x5160c30f]
  418649:	cmp    eax,0x8442bd99
  41864e:	sahf   
  41864f:	jl     0x418648
  418651:	loopne 0x4185dd
  418653:	lds    edx,FWORD PTR [ebx-0x6e1cd606]
  418659:	xchg   ebp,eax
  41865a:	mov    WORD PTR [edx+0x1e],es
  41865d:	loop   0x41867f
  41865f:	add    cl,cl
  418661:	cmp    BYTE PTR [ebp+0x46],dh
  418664:	cmp    eax,0x35fc69ad
  418669:	cmp    DWORD PTR [edx-0x5a36dd90],0x31
  418670:	cmp    al,BYTE PTR [edx]
  418672:	add    eax,0xface676b
  418677:	bound  edi,QWORD PTR [edx-0x4b926ced]
  41867d:	leave  
  41867e:	xor    eax,0x40841e3a
  418683:	xor    eax,0xe6cb7973
  418688:	xchg   esi,eax
  418689:	mov    ch,0x3a
  41868b:	cli    
  41868c:	sub    BYTE PTR [ebx-0x44],ch
  41868f:	lds    ecx,FWORD PTR [ebx+0x69]
  418692:	pusha  
  418693:	shr    DWORD PTR [eax+edx*8+0xa66f97f],cl
  41869a:	or     BYTE PTR [esi+0x72],bl
  41869d:	in     eax,dx
  41869e:	adc    al,0x75
  4186a0:	xlat   BYTE PTR ds:[ebx]
  4186a1:	push   ss
  4186a2:	rcr    DWORD PTR [ebx-0x29],cl
  4186a5:	sub    ebp,DWORD PTR [edx]
  4186a7:	loope  0x4186cc
  4186a9:	sub    ebp,DWORD PTR [ecx+edi*1]
  4186ac:	outs   dx,BYTE PTR ds:[esi]
  4186ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186ae:	sbb    bh,BYTE PTR [ebx+0x303b7b70]
  4186b4:	ins    DWORD PTR es:[edi],dx
  4186b5:	neg    DWORD PTR [edi-0x5b]
  4186b8:	inc    edi
  4186b9:	outs   dx,DWORD PTR ds:[esi]
  4186ba:	in     eax,dx
  4186bb:	or     eax,0xafdd033f
  4186c0:	gs and al,0x4b
  4186c3:	sahf   
  4186c4:	or     ebx,0xffffffde
  4186c7:	hlt    
  4186c8:	aas    
  4186c9:	(bad)  
  4186ca:	xchg   ecx,eax
  4186cb:	mov    dh,bh
  4186cd:	mov    bh,0x7e
  4186cf:	push   esi
  4186d0:	sub    eax,0x8650b796
  4186d5:	jnp    0x41873c
  4186d7:	xchg   esp,eax
  4186d8:	or     al,0xe8
  4186da:	mov    ebp,0x482cc035
  4186df:	rol    DWORD PTR [edi-0x4884e2f1],1
  4186e5:	dec    ebx
  4186e6:	sbb    eax,DWORD PTR [edi]
  4186e8:	ins    BYTE PTR es:[edi],dx
  4186e9:	in     al,dx
  4186ea:	pop    edx
  4186eb:	xlat   BYTE PTR ds:[ebx]
  4186ec:	aas    
  4186ed:	adc    bh,BYTE PTR [edx]
  4186ef:	imul   DWORD PTR [edx]
  4186f1:	push   ebp
  4186f2:	loop   0x418690
  4186f4:	and    BYTE PTR [ebx+0x675f0ed],ch
  4186fa:	jb     0x418707
  4186fc:	call   0x9fd5:0xb0c4e57d
  418703:	jb     0x418726
  418705:	push   ebp
  418706:	xchg   esp,eax
  418707:	push   0xe68f6a93
  41870c:	or     al,0xed
  41870e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41870f:	sub    ah,cl
  418711:	xchg   edx,esp
  418713:	or     al,0x81
  418715:	imul   edi,DWORD PTR [ebp-0x9914ea7],0x75415396
  41871f:	out    dx,eax
  418720:	jae    0x418742
  418722:	mov    ebx,0xfed123e1
  418727:	dec    edi
  418728:	cli    
  418729:	es jno 0x4186ff
  41872c:	(bad)  
  41872d:	jbe    0x41875f
  41872f:	xor    BYTE PTR [eax],bl
  418731:	mov    esi,0xe716c88c
  418736:	int3   
  418737:	jae    0x418765
  418739:	adc    dh,BYTE PTR [eax+0x40]
  41873c:	sub    cl,BYTE PTR [edx]
  41873e:	inc    ebx
  41873f:	sbb    DWORD PTR [edi],0xffffffc3
  418742:	push   edx
  418743:	or     dl,ch
  418745:	loope  0x418759
  418747:	fst    DWORD PTR ds:0x57e740a4
  41874d:	xchg   ecx,esi
  41874f:	xor    eax,0xeb25efcd
  418754:	test   eax,0x350fb004
  418759:	ins    BYTE PTR es:[edi],dx
  41875a:	mov    bh,0x17
  41875c:	and    al,0x2d
  41875e:	out    dx,eax
  41875f:	sbb    bl,ch
  418761:	lods   al,BYTE PTR ds:[esi]
  418762:	retf   0x9d66
  418765:	aaa    
  418766:	aad    0x1b
  418768:	daa    
  418769:	clc    
  41876a:	xor    DWORD PTR [edi],ecx
  41876c:	stos   DWORD PTR es:[edi],eax
  41876d:	das    
  41876e:	push   ss
  41876f:	adc    ecx,DWORD PTR [edi+0x11ed99b1]
  418775:	loop   0x418740
  418777:	push   ebx
  418778:	mov    dl,bl
  41877a:	jo     0x4187cb
  41877c:	mov    eax,ds:0x29ccbd95
  418781:	pop    ecx
  418782:	fistp  WORD PTR [eax+0x20b3ec57]
  418788:	rcr    BYTE PTR [edx],cl
  41878a:	dec    esi
  41878b:	outs   dx,DWORD PTR ds:[esi]
  41878c:	adc    ebx,DWORD PTR [edi-0x4b]
  41878f:	out    0xc0,eax
  418791:	dec    edi
  418792:	test   BYTE PTR [eax],bh
  418794:	or     al,dh
  418796:	sbb    eax,0xa8d3b55b
  41879b:	push   0xe897a56c
  4187a0:	stos   BYTE PTR es:[edi],al
  4187a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187a2:	push   cs
  4187a3:	or     cl,dh
  4187a5:	cmc    
  4187a6:	sub    BYTE PTR [ebp+ecx*8+0x6848d0e5],0xca
  4187ae:	(bad)  
  4187af:	std    
  4187b0:	daa    
  4187b1:	inc    ecx
  4187b2:	imul   BYTE PTR [ecx+0x67]
  4187b5:	dec    eax
  4187b6:	mov    ds:0xb571bf11,al
  4187bb:	sbb    eax,0x81706811
  4187c0:	imul   ebx,DWORD PTR [eax+0x2d172e4b],0x3dafe39c
  4187ca:	(bad)  [edi]
  4187cc:	jle    0x4187fb
  4187ce:	add    BYTE PTR [esi],dl
  4187d0:	sbb    BYTE PTR [edi],bl
  4187d2:	sub    bl,cl
  4187d4:	ins    DWORD PTR es:[edi],dx
  4187d5:	cdq    
  4187d6:	pop    DWORD PTR [ecx]
  4187d8:	xchg   edi,eax
  4187d9:	out    0x47,al
  4187db:	fsub   st(4),st
  4187dd:	pushf  
  4187de:	push   ds
  4187df:	inc    ebx
  4187e0:	lock sti 
  4187e2:	stos   BYTE PTR es:[edi],al
  4187e3:	leave  
  4187e4:	or     BYTE PTR [edx-0x31],dh
  4187e7:	aad    0xdc
  4187e9:	retf   0x921f
  4187ec:	(bad)  
  4187ee:	retf   0xf25d
  4187f1:	mov    eax,ds:0xb1086242
  4187f6:	fimul  DWORD PTR [ebp+0x6b]
  4187f9:	jl     0x41886f
  4187fb:	or     DWORD PTR [edx-0x2bd090f9],0x5a8d92d6
  418805:	xchg   edx,eax
  418806:	cmp    DWORD PTR [esi-0x27],0x71
  41880a:	adc    esi,esi
  41880c:	in     eax,dx
  41880d:	loopne 0x418869
  41880f:	xchg   ebx,eax
  418810:	xlat   BYTE PTR ds:[ebx]
  418811:	aas    
  418812:	loopne 0x4187fb
  418814:	pop    ebx
  418815:	jbe    0x41882a
  418817:	mov    ebp,0x6f1f4e4f
  41881c:	imul   BYTE PTR fs:[eax]
  41881f:	or     BYTE PTR [eax],bl
  418821:	xor    BYTE PTR [edi-0x52],cl
  418824:	cwde   
  418825:	dec    esp
  418826:	adc    DWORD PTR [esi],esp
  418828:	and    al,0x2d
  41882a:	fdivr  DWORD PTR [ebx]
  41882c:	(bad)
  41882f:	ins    BYTE PTR es:[edi],dx
  418830:	or     BYTE PTR [ebp+ebp*8+0x7f],dl
  418834:	loop   0x4187dd
  418836:	cli    
  418837:	push   ds
  418838:	or     ah,bh
  41883a:	or     DWORD PTR [ecx-0x73ade1c2],edi
  418840:	gs mov bl,0x18
  418843:	sti    
  418844:	(bad)  
  418845:	pushf  
  418846:	cmc    
  418847:	(bad)  
  418848:	int3   
  418849:	lods   al,BYTE PTR ds:[esi]
  41884a:	sti    
  41884b:	mov    al,0x12
  41884d:	jmp    0x2ec1e1e7
  418852:	ss cdq 
  418854:	inc    ebx
  418855:	cmp    eax,0x9e8d7266
  41885a:	ret    
  41885b:	sub    dl,bh
  41885d:	or     DWORD PTR [ebp+0x68],esp
  418860:	dec    ebx
  418861:	std    
  418862:	mov    eax,ds:0x4331114b
  418867:	xor    ah,bh
  418869:	loop   0x41888b
  41886b:	sub    BYTE PTR [eax+edx*2+0x4b],dh
  41886f:	cdq    
  418870:	adc    bl,BYTE PTR ds:[ecx]
  418873:	pop    edx
  418874:	hlt    
  418875:	retf   0x4987
  418878:	adc    eax,0xd6c234d0
  41887d:	mov    cl,0xe1
  41887f:	or     eax,0xbeb88ea2
  418884:	add    BYTE PTR [edi+0x1d35b5b4],ah
  41888a:	outs   dx,DWORD PTR ds:[esi]
  41888b:	xchg   ebx,eax
  41888c:	mov    bh,0xe4
  41888e:	fiadd  DWORD PTR [edx]
  418890:	into   
  418891:	and    al,0x21
  418893:	(bad)  
  418894:	adc    al,0x8
  418896:	pop    fs
  418898:	xor    eax,0x48a1c95
  41889d:	aas    
  41889e:	(bad)  
  41889f:	mov    ds:0x4af2236,al
  4188a4:	test   BYTE PTR [edi+0x5e],al
  4188a7:	pusha  
  4188a8:	pop    esi
  4188a9:	nop
  4188aa:	jne    0x41888e
  4188ac:	jge    0x41885a
  4188ae:	sbb    eax,0xcb76d362
  4188b3:	mov    bl,0x3e
  4188b5:	les    ebp,FWORD PTR [ecx-0x47]
  4188b8:	je     0x41890a
  4188ba:	loopne 0x418934
  4188bc:	(bad)  
  4188bd:	pusha  
  4188be:	mov    bh,0xe0
  4188c0:	xor    BYTE PTR [edi-0xf],ch
  4188c3:	lock mov ds,WORD PTR [edi-0x25813eb7]
  4188ca:	mov    eax,ds:0x135ec756
  4188cf:	add    eax,0xcc7a670b
  4188d4:	test   al,0xaf
  4188d6:	xchg   esi,eax
  4188d7:	sbb    BYTE PTR [ebx-0x53],ch
  4188da:	xchg   ebp,eax
  4188db:	add    esi,edx
  4188dd:	sbb    al,0xd0
  4188df:	cmp    DWORD PTR [ecx-0x6a4a4114],edx
  4188e5:	xor    DWORD PTR [esi+0x6],ebx
  4188e8:	rcr    BYTE PTR [edi+eax*4],0x2c
  4188ec:	xor    DWORD PTR [ecx+0x36ac8c01],eax
  4188f2:	in     al,dx
  4188f3:	retf   
  4188f4:	ret    0x9c32
  4188f7:	in     eax,0x81
  4188f9:	fnsave [ecx-0x71c50e16]
  4188ff:	mov    dl,0x6a
  418901:	xchg   ebx,eax
  418902:	cmp    ch,al
  418904:	icebp  
  418905:	mov    bh,0x71
  418907:	and    DWORD PTR [edx+0x13],0x552b98da
  41890e:	push   esp
  41890f:	imul   esi,DWORD PTR [edi-0x42c4cef9],0x83065f89
  418919:	jge    0x418951
  41891b:	inc    ebx
  41891c:	ins    BYTE PTR es:[edi],dx
  41891d:	call   0x8f63:0x2a4bbbea
  418924:	mov    edx,0x94306763
  418929:	loope  0x41891e
  41892b:	mov    ds:0x1abf58b5,eax
  418930:	nop
  418931:	pop    esi
  418932:	push   ebp
  418933:	xchg   ebx,eax
  418934:	dec    edi
  418935:	push   0x3b
  418937:	sub    ebx,edi
  418939:	inc    ebp
  41893a:	and    bh,bl
  41893c:	jns    0x4188d7
  41893e:	push   ds
  41893f:	int3   
  418940:	popa   
  418941:	sbb    BYTE PTR [esi+0x65],cl
  418944:	enter  0x5405,0x8d
  418948:	je     0x4188e0
  41894a:	and    eax,0x92ddf2ff
  41894f:	test   DWORD PTR [edx-0x52],edi
  418952:	std    
  418953:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418954:	ficomp WORD PTR [ebx]
  418956:	cmp    eax,0x3c058714
  41895b:	jno    0x4189b7
  41895d:	inc    eax
  41895e:	in     eax,dx
  41895f:	fld    st(3)
  418961:	xor    ah,BYTE PTR [esi+0x774075c]
  418967:	aas    
  418968:	jmp    0xd4e4:0x1649155
  41896f:	(bad)
  418972:	(bad)  
  418973:	sti    
  418974:	and    BYTE PTR [edi],ah
  418976:	mov    eax,0x2adc439b
  41897b:	mov    esp,0xedaca851
  418980:	loopne 0x418966
  418982:	cmp    eax,0x556f0978
  418987:	loop   0x41892e
  418989:	pop    esi
  41898a:	fwait
  41898b:	xlat   BYTE PTR ds:[ebx]
  41898c:	in     eax,dx
  41898d:	mov    eax,0xb7c63aaf
  418992:	rcr    BYTE PTR [ebp-0x7fb4b62a],cl
  418998:	jmp    0xe12cf889
  41899d:	fisttp QWORD PTR [edx+0x647c0558]
  4189a3:	mov    esp,0x51aab40f
  4189a8:	pop    ds
  4189a9:	popf   
  4189aa:	mov    DWORD PTR [ebp-0x2755133d],esi
  4189b0:	(bad)  
  4189b1:	retf   
  4189b2:	js     0x4189a2
  4189b4:	daa    
  4189b5:	adc    cl,BYTE PTR [eax]
  4189b7:	cs jb  0x4189cd
  4189ba:	jmp    0xc9fd:0x9d31e212
  4189c1:	xor    esp,ebx
  4189c3:	cdq    
  4189c4:	retf   0x7dd8
  4189c7:	std    
  4189c8:	add    BYTE PTR [ecx+0x7f],0x24
  4189cc:	pusha  
  4189cd:	sbb    ah,BYTE PTR [ecx+eiz*1+0x2b2567ee]
  4189d4:	xor    eax,DWORD PTR [eax]
  4189d6:	sub    al,0xd
  4189d8:	addr16 xchg ebp,eax
  4189da:	adc    esi,DWORD PTR [esi]
  4189dc:	(bad)  
  4189dd:	loopne 0x4189cd
  4189df:	fisttp WORD PTR [esi]
  4189e1:	push   0xffffffe9
  4189e3:	sahf   
  4189e4:	cmp    ch,BYTE PTR [ecx-0x21]
  4189e7:	fucomi st,st(7)
  4189e9:	fcom   DWORD PTR ds:0x710ed291
  4189ef:	(bad)  
  4189f0:	and    BYTE PTR [edx-0x1a],dh
  4189f3:	inc    ebp
  4189f4:	sub    BYTE PTR [ebp-0x1bb2a76b],cl
  4189fa:	les    edi,FWORD PTR [ecx+0x58]
  4189fd:	fcmovnu st,st(5)
  4189ff:	xchg   edx,eax
  418a00:	daa    
  418a01:	fs icebp 
  418a03:	jg     0x418a68
  418a05:	ins    DWORD PTR es:[edi],dx
  418a06:	jo     0x4189de
  418a08:	sbb    al,0x1a
  418a0a:	sub    ah,BYTE PTR [esi]
  418a0c:	xchg   DWORD PTR [edi+0x5c76c57d],edx
  418a12:	fcomp  DWORD PTR [ebp+0x4cdc89eb]
  418a18:	xchg   DWORD PTR [ecx+0x6607f9ed],ebx
  418a1e:	push   0x3698ffc7
  418a23:	in     eax,dx
  418a24:	fs dec edx
  418a26:	fstp   DWORD PTR [ebx-0x3c]
  418a29:	std    
  418a2a:	push   esp
  418a2b:	add    bl,BYTE PTR [edi]
  418a2d:	cmp    BYTE PTR [edx-0x496b43e5],ah
  418a33:	mov    esp,0xdf6b63a1
  418a38:	dec    esi
  418a39:	retf   0x902d
  418a3c:	mov    ?,WORD PTR [ebx-0x52]
  418a3f:	in     eax,dx
  418a40:	dec    edx
  418a41:	out    0x62,al
  418a43:	mov    esp,0x4810b709
  418a48:	adc    bh,BYTE PTR [eax]
  418a4a:	adc    DWORD PTR [eax+0x65],esi
  418a4d:	adc    al,0x4c
  418a4f:	aad    0x63
  418a51:	mov    eax,0x1dd6273a
  418a56:	xchg   DWORD PTR [edx+0x50d396a7],ebx
  418a5c:	fmul   st,st(3)
  418a5e:	and    eax,0x16d6b1fe
  418a63:	mov    dh,0x16
  418a65:	and    edi,ebp
  418a67:	pop    esp
  418a68:	jp     0x418a3d
  418a6a:	in     eax,dx
  418a6b:	jecxz  0x418a38
  418a6d:	sti    
  418a6e:	and    DWORD PTR [eax+0x69],0x273fed80
  418a75:	(bad)  
  418a77:	mov    bl,0xcb
  418a79:	cdq    
  418a7a:	adc    eax,0xb7ed0ffb
  418a7f:	mov    al,ds:0x191a19e0
  418a84:	jmp    0x85bb:0x7dcee3e5
  418a8b:	dec    eax
  418a8c:	leave  
  418a8d:	cmp    eax,0x85452e50
  418a92:	push   ecx
  418a93:	es retf 
  418a95:	jg     0x418a79
  418a97:	sbb    edi,ecx
  418a99:	aad    0x42
  418a9b:	sub    al,0x5b
  418a9d:	jle    0x418a6d
  418a9f:	ins    BYTE PTR es:[edi],dx
  418aa0:	mov    ebp,0x49b46994
  418aa5:	(bad)  
  418aa6:	ins    BYTE PTR es:[edi],dx
  418aa7:	loopne 0x418afa
  418aa9:	pop    ebp
  418aaa:	sub    BYTE PTR [ebp-0x6d],ch
  418aad:	inc    esp
  418aae:	adc    al,0xa
  418ab0:	cmp    BYTE PTR [ebx+ebx*8+0x2e028d56],bl
  418ab7:	and    eax,0x28d4a796
  418abc:	jle    0x418a84
  418abe:	pusha  
  418abf:	pop    eax
  418ac0:	push   edx
  418ac1:	jecxz  0x418aad
  418ac3:	cmp    al,0xa1
  418ac5:	(bad)  
  418ac6:	inc    ebx
  418ac7:	fbstp  TBYTE PTR [edi-0x57]
  418aca:	retf   0x34f2
  418acd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ace:	lods   eax,DWORD PTR ds:[esi]
  418acf:	out    0x1f,al
  418ad1:	dec    eax
  418ad2:	or     dl,BYTE PTR [eax+eax*1-0x2d9d7cec]
  418ad9:	jg     0x418b29
  418adb:	shl    DWORD PTR es:[edi+0x50db82ce],0x9
  418ae3:	cmc    
  418ae4:	daa    
  418ae5:	jo     0x418ac5
  418ae7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ae8:	adc    DWORD PTR [ebp+0x38],ecx
  418aeb:	daa    
  418aec:	fcmovnbe st,st(6)
  418aee:	adc    BYTE PTR [edi+0x2b],ch
  418af1:	xchg   esi,eax
  418af2:	adc    eax,0xaf042540
  418af7:	jbe    0x418afc
  418af9:	icebp  
  418afa:	xchg   ebx,eax
  418afb:	enter  0x236c,0x4b
  418aff:	pop    ebx
  418b00:	cmp    eax,0x66671753
  418b05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b06:	mov    cl,0x9b
  418b08:	daa    
  418b09:	test   esi,ecx
  418b0b:	mov    WORD PTR [ecx+ebp*1],ss
  418b0e:	adc    al,0xa6
  418b10:	and    BYTE PTR [edi],ch
  418b12:	int    0x14
  418b14:	clc    
  418b15:	sti    
  418b16:	test   bh,cl
  418b18:	ror    DWORD PTR [ecx-0x739f7ed2],0x2c
  418b1f:	jecxz  0x418ab5
  418b21:	push   0xffffffcd
  418b23:	pop    ecx
  418b24:	arpl   WORD PTR [eax-0x30fd108b],di
  418b2a:	aas    
  418b2b:	into   
  418b2c:	mov    DWORD PTR [ebp+0x34],edx
  418b2f:	clc    
  418b30:	add    al,0x7d
  418b32:	fldcw  WORD PTR [edx-0x58]
  418b35:	xor    ch,BYTE PTR [ecx]
  418b37:	fld    QWORD PTR [edi-0x32]
  418b3a:	rol    BYTE PTR ds:0x8a039b83,cl
  418b40:	sbb    bl,BYTE PTR [edi+0x40]
  418b43:	sub    cl,BYTE PTR [ebp-0x72]
  418b46:	arpl   WORD PTR [edi+0x74da3a33],bp
  418b4c:	push   edi
  418b4d:	aas    
  418b4e:	or     al,0x87
  418b50:	pop    ebp
  418b51:	cmp    DWORD PTR [eax],edi
  418b53:	popf   
  418b54:	jne    0x418baa
  418b56:	jle    0x418bcd
  418b58:	mov    ecx,0x80121dd4
  418b5d:	loopne 0x418b60
  418b5f:	mov    ds:0x89c5abc,eax
  418b64:	push   0xffffff9e
  418b66:	jmp    0x663a:0x83829181
  418b6d:	mov    dh,0xbf
  418b6f:	xor    eax,0x3e74e25a
  418b74:	cmp    ebx,DWORD PTR [edx-0x7722762f]
  418b7a:	in     al,dx
  418b7b:	test   al,0xde
  418b7d:	cmp    dl,BYTE PTR [esi]
  418b7f:	cmp    BYTE PTR [edx],ah
  418b81:	push   es
  418b82:	xor    ecx,ebx
  418b84:	push   ecx
  418b85:	mov    eax,0x8d148ad6
  418b8a:	pushf  
  418b8b:	es or  eax,0x3f2f3b92
  418b91:	out    0x95,al
  418b93:	dec    ebx
  418b94:	xchg   edx,eax
  418b96:	add    eax,0xb9a51f7
  418b9b:	push   ss
  418b9c:	dec    edx
  418b9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b9e:	mov    ds:0x7d23595d,eax
  418ba3:	inc    bx
  418ba5:	jnp    0x418bb5
  418ba7:	inc    ecx
  418ba8:	clc    
  418ba9:	lock lods al,BYTE PTR ds:[esi]
  418bab:	or     esi,DWORD PTR [edx]
  418bad:	(bad)  
  418bae:	call   0xebcb3da
  418bb3:	addr16 addr16 daa 
  418bb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bb7:	(bad)  
  418bb8:	retf   
  418bb9:	mov    edi,DWORD PTR [edx-0x288f011]
  418bbf:	pop    es
  418bc0:	repnz imul eax,DWORD PTR [esi],0xb170f8d2
  418bc7:	sbb    DWORD PTR [ecx+0x76],esi
  418bca:	mov    eax,0x8faef382
  418bcf:	popa   
  418bd0:	mov    ds:0x9e71d020,eax
  418bd5:	add    al,0xa9
  418bd7:	push   es
  418bd8:	adc    al,0x2f
  418bda:	cmp    al,0xb2
  418bdc:	mov    ch,0xe1
  418bde:	sub    DWORD PTR [ecx],edi
  418be0:	popa   
  418be1:	mov    ah,0x84
  418be3:	mov    ch,0xbd
  418be5:	(bad)  
  418be6:	repnz hlt 
  418be8:	shl    ebx,0x46
  418beb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bec:	pop    ecx
  418bed:	jl     0x418bb4
  418bef:	jmp    0x2767:0x67d9dd51
  418bf6:	adc    al,0x56
  418bf8:	sub    dh,BYTE PTR [edx-0x23a37347]
  418bfe:	add    eax,DWORD PTR ds:0xfeb7d664
  418c04:	(bad)  [eax+0x6e0a4613]
  418c0a:	addr16 push ecx
  418c0c:	test   eax,0x5b919189
  418c11:	inc    edi
  418c12:	xchg   dl,bl
  418c14:	sub    DWORD PTR [edi],0xd56782b9
  418c1a:	mov    ecx,0x6dad767b
  418c1f:	cmp    al,0xa1
  418c21:	pop    esi
  418c22:	in     al,dx
  418c23:	rcr    DWORD PTR [eax],1
  418c25:	dec    esi
  418c26:	pushf  
  418c27:	int3   
  418c28:	mov    eax,ds:0x1ff3ee2
  418c2d:	out    dx,eax
  418c2e:	enter  0x63e2,0xf9
  418c32:	xrelease xchg BYTE PTR [ebp+0x74a1b59b],cl
  418c39:	push   eax
  418c3a:	xchg   BYTE PTR [ebx-0x3d3702d8],cl
  418c40:	ja     0x418bc3
  418c42:	scas   eax,DWORD PTR es:[edi]
  418c43:	in     al,dx
  418c44:	ja     0x418c64
  418c46:	pusha  
  418c47:	push   eax
  418c48:	mov    dl,0x2e
  418c4a:	lea    ebp,[esi-0x63]
  418c4d:	xor    al,0x49
  418c4f:	push   esp
  418c50:	inc    edx
  418c51:	push   ds
  418c52:	cmp    DWORD PTR [edi-0xb],esp
  418c55:	push   es
  418c56:	sar    dh,1
  418c58:	adc    eax,0xc72487dc
  418c5d:	hlt    
  418c5e:	ret    
  418c5f:	popa   
  418c60:	rcr    DWORD PTR [edi+0x6b],1
  418c63:	loope  0x418c18
  418c65:	mov    ebx,DWORD PTR [di-0x50]
  418c69:	add    edx,ecx
  418c6b:	xor    edx,ebx
  418c6d:	mov    DWORD PTR [ebp-0x50],edx
  418c70:	mov    edx,DWORD PTR [ebp+0x8]
  418c73:	mov    ebx,DWORD PTR [ebp-0x4c]
  418c76:	add    edx,edi
  418c78:	and    edx,ebx
  418c7a:	mov    DWORD PTR [ebp-0x4c],edx
  418c7d:	mov    edx,DWORD PTR [ebp+0x8]
  418c80:	mov    ebx,DWORD PTR [ebp-0x48]
  418c83:	lea    edx,[ebx+edx*1+0x241fcde]
  418c8a:	mov    DWORD PTR [ebp-0x48],edx
  418c8d:	mov    edx,DWORD PTR [ebp+0x8]
  418c90:	mov    ebx,0xfa5e1521
  418c95:	sub    ebx,edx
  418c97:	add    ebx,DWORD PTR [ebp-0x44]
  418c9a:	mov    DWORD PTR [ebp-0x44],ebx
  418c9d:	mov    edx,DWORD PTR [ebp+0x8]
  418ca0:	xor    edx,eax
  418ca2:	add    edx,esi
  418ca4:	jne    0x4144eb
  418caa:	jmp    0x41b0d8
  418caf:	jmp    0x41b050
  418cb4:	ins    BYTE PTR es:[edi],dx
  418cb5:	loopne 0x418cba
  418cb7:	jmp    0x418c3c
  418cb9:	mov    eax,DWORD PTR [ebx+ebx*8+0x6fd1292a]
  418cc0:	(bad)  
  418cc1:	mov    eax,0x1f32679d
  418cc6:	jge    0x418d42
  418cc8:	(bad)  
  418cc9:	pop    edi
  418cca:	jp     0x418d46
  418ccc:	sbb    DWORD PTR [edi],esi
  418cce:	lahf   
  418ccf:	scas   eax,DWORD PTR es:[edi]
  418cd0:	(bad)  
  418cd1:	xor    eax,0xa50cdd7a
  418cd6:	pop    ds
  418cd7:	xchg   BYTE PTR [esi-0x38825ec3],ah
  418cdd:	scas   eax,DWORD PTR es:[edi]
  418cde:	ret    
  418cdf:	into   
  418ce0:	mov    ebx,0x974dd755
  418ce5:	jmp    0x3d8:0x8d285055
  418cec:	dec    edx
  418ced:	dec    esi
  418cee:	ror    edx,0xd1
  418cf1:	mov    eax,ecx
  418cf3:	cmc    
  418cf4:	lock sub al,0x5c
  418cf7:	fldenv [edx-0x53]
  418cfa:	sub    ebp,DWORD PTR [edx-0x61]
  418cfd:	cmp    eax,0xf66dab7e
  418d02:	dec    ecx
  418d03:	adc    edx,DWORD PTR [ebx+0x511e74c1]
  418d09:	inc    edi
  418d0a:	repz mov ds:0xa766c454,al
  418d10:	lock nop
  418d12:	cdq    
  418d13:	xchg   ebp,eax
  418d14:	inc    esp
  418d15:	sbb    eax,0xe462238f
  418d1a:	xor    bl,BYTE PTR [eax+0x75f0ceaf]
  418d20:	add    bh,dh
  418d22:	inc    esi
  418d23:	jl     0x418ce4
  418d25:	repnz retf 0x476c
  418d29:	dec    eax
  418d2b:	mov    ds:0x291c9e9f,eax
  418d30:	loop   0x418d08
  418d32:	mov    eax,ds:0x9fd56e12
  418d37:	cmp    ch,BYTE PTR [edi]
  418d39:	dec    BYTE PTR ds:0x84bcc2d5
  418d3f:	out    dx,eax
  418d40:	jbe    0x418d42
  418d42:	xor    BYTE PTR [ecx-0x5564e275],0x86
  418d49:	xchg   esi,eax
  418d4a:	das    
  418d4b:	ret    0x2aa9
  418d4e:	je     0x418cd3
  418d50:	(bad)  
  418d51:	in     al,dx
  418d52:	push   ebp
  418d53:	and    al,0x8b
  418d55:	mov    eax,0x6fa9d3e2
  418d5a:	in     eax,dx
  418d5b:	xchg   ebx,eax
  418d5c:	lods   al,BYTE PTR ds:[esi]
  418d5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d5e:	push   0xffffffc6
  418d60:	in     eax,0x7
  418d62:	ret    0xaf32
  418d65:	lods   eax,DWORD PTR ds:[esi]
  418d66:	or     al,0x33
  418d68:	cmp    eax,0x5df960cb
  418d6d:	dec    esi
  418d6e:	add    esp,DWORD PTR [eax]
  418d70:	dec    edx
  418d71:	jl     0x418d0b
  418d73:	cmp    eax,0x5ae49426
  418d78:	js     0x418d58
  418d7a:	adc    ch,dl
  418d7c:	pop    ss
  418d7d:	bound  esi,QWORD PTR [edx]
  418d7f:	jle    0x418d56
  418d81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d82:	adc    al,0x16
  418d84:	sar    DWORD PTR [eax-0xc0a3ba6],cl
  418d8a:	mov    esp,0x871173d7
  418d8f:	sbb    al,0xf
  418d91:	outs   dx,DWORD PTR ds:[esi]
  418d92:	cld    
  418d93:	add    esi,edi
  418d95:	or     al,0x40
  418d97:	scas   eax,DWORD PTR es:[edi]
  418d98:	push   0xeea39ed6
  418d9d:	xchg   esp,eax
  418d9e:	xor    BYTE PTR [esi+eiz*8],0x9e
  418da2:	(bad)  
  418da3:	out    dx,eax
  418da4:	mov    esi,DWORD PTR [esi]
  418da6:	sbb    bl,BYTE PTR cs:[edx+esi*2]
  418daa:	ret    0x6b40
  418dad:	fstp   QWORD PTR [edi]
  418daf:	ret    
  418db0:	mov    ah,BYTE PTR [eax-0x534da3ec]
  418db6:	inc    edx
  418db7:	cmp    BYTE PTR [esi+0x457b9d7c],bl
  418dbd:	ja     0x418e27
  418dbf:	(bad)  
  418dc0:	mov    dh,BYTE PTR [eax+0x778ee717]
  418dc6:	sahf   
  418dc7:	stc    
  418dc8:	dec    ebx
  418dc9:	pop    ebp
  418dca:	fwait
  418dcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dcc:	xchg   ecx,eax
  418dcd:	rol    BYTE PTR [edx*1-0x3e689a1d],0xd1
  418dd5:	mov    ebp,0x11422228
  418dda:	hlt    
  418ddb:	mov    ds:0x4a72feb0,al
  418de0:	popa   
  418de1:	inc    eax
  418de2:	xor    eax,0xd16cdc0e
  418de7:	mov    edi,0x8e2cd59b
  418dec:	test   al,0xaa
  418dee:	xlat   BYTE PTR gs:[ebx]
  418df0:	popf   
  418df1:	jmp    0x418e69
  418df3:	sbb    eax,0x56821713
  418df8:	mov    WORD PTR [edi],es
  418dfa:	(bad)  
  418dfb:	in     al,dx
  418dfc:	(bad)  
  418dfd:	repnz ins DWORD PTR es:[edi],dx
  418dff:	inc    ecx
  418e00:	add    DWORD PTR [ebp+0x17],esi
  418e03:	jbe    0x418d9c
  418e05:	in     eax,0x9b
  418e07:	add    BYTE PTR [ecx+0x138d8bcd],bh
  418e0d:	pop    eax
  418e0e:	mov    bl,0x5
  418e10:	mov    ecx,0x60ea3f6
  418e15:	dec    edi
  418e16:	pusha  
  418e17:	lods   al,BYTE PTR ds:[esi]
  418e18:	inc    esp
  418e19:	inc    esp
  418e1a:	out    0xf4,al
  418e1c:	js     0x418dc4
  418e1e:	push   cs
  418e1f:	je     0x418dec
  418e21:	(bad)  
  418e22:	outs   dx,DWORD PTR ds:[si]
  418e24:	mov    bh,BYTE PTR [esi-0x7420c3aa]
  418e2a:	in     eax,dx
  418e2b:	push   ebp
  418e2c:	adc    BYTE PTR [eax],dl
  418e2e:	add    al,0xfe
  418e30:	adc    eax,0x5d324452
  418e36:	jns    0x418e8f
  418e38:	lock in eax,0xf
  418e3b:	mov    ebp,0x9c053138
  418e40:	enter  0x53df,0x8b
  418e44:	pop    esi
  418e45:	(bad)  [ebx+0x19]
  418e48:	imul   esp,edx,0xa5f79446
  418e4e:	aaa    
  418e4f:	fdivr  st,st(6)
  418e51:	inc    eax
  418e52:	and    eax,DWORD PTR [edi-0x46]
  418e55:	bound  ecx,QWORD PTR [ebx+0x51a1000f]
  418e5b:	lock imul ebp,eax,0xffffffbe
  418e5f:	dec    ebx
  418e60:	rol    BYTE PTR [edx],cl
  418e62:	call   0x8cdc:0xbe74f55d
  418e69:	dec    edi
  418e6a:	(bad)  
  418e6b:	xor    eax,0xb68ea2ea
  418e70:	mov    bh,0x7e
  418e72:	int    0x2c
  418e74:	test   al,0x10
  418e76:	jb     0x418ec8
  418e78:	test   DWORD PTR [edx],0xade55860
  418e7e:	clc    
  418e7f:	mov    ecx,0x8872e01d
  418e84:	push   eax
  418e85:	pop    esp
  418e86:	adc    cl,BYTE PTR [ebx+0x132466c0]
  418e8c:	inc    esp
  418e8d:	inc    eax
  418e8e:	sub    ah,BYTE PTR [ecx-0x4615aacf]
  418e94:	popa   
  418e95:	or     al,0x1c
  418e97:	push   edi
  418e98:	pop    ebx
  418e99:	rol    BYTE PTR [ebp-0x1e],0xe7
  418e9d:	jmp    0x6dc897f5
  418ea2:	push   0x44b044c8
  418ea7:	pop    ecx
  418ea8:	adc    bl,ah
  418eaa:	or     ebp,DWORD PTR [esi]
  418eac:	or     bh,BYTE PTR [edx+0x421c5694]
  418eb2:	ds aam 0x28
  418eb5:	push   cs
  418eb6:	dec    ecx
  418eb7:	mov    ch,0x6a
  418eb9:	sub    edx,DWORD PTR [ecx]
  418ebb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ebc:	pop    ebp
  418ebd:	icebp  
  418ebe:	std    
  418ebf:	mov    BYTE PTR [esi-0x26],dl
  418ec2:	nop
  418ec3:	scas   eax,DWORD PTR es:[edi]
  418ec4:	jmp    0x418ef3
  418ec6:	push   eax
  418ec7:	aad    0xbd
  418ec9:	shr    esi,0x8e
  418ecc:	pop    ebx
  418ecd:	pop    ss
  418ece:	js     0x418ecd
  418ed0:	rol    edi,0x3a
  418ed3:	outs   dx,WORD PTR ds:[esi]
  418ed5:	mov    ecx,0x4ca40e67
  418eda:	lahf   
  418edb:	adc    esi,DWORD PTR [ecx+0x4a7371ab]
  418ee1:	lahf   
  418ee2:	data16 jbe 0x418eaa
  418ee5:	in     al,dx
  418ee6:	sub    eax,0xd760cf4a
  418eeb:	jle    0x418eab
  418eed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418eee:	sbb    esi,DWORD PTR ds:0x57caf143
  418ef4:	lods   eax,DWORD PTR ds:[esi]
  418ef5:	pop    ebp
  418ef6:	jne    0x418ee6
  418ef8:	ficom  WORD PTR [edx+0x19]
  418efb:	inc    ecx
  418efc:	sub    esi,ebp
  418efe:	jg     0x418ea6
  418f00:	(bad)  
  418f01:	fidivr DWORD PTR [ecx-0x5c]
  418f04:	sbb    al,0x85
  418f06:	dec    ecx
  418f07:	retf   
  418f08:	jg     0x418ec3
  418f0a:	sub    bh,BYTE PTR [ecx+0x1e64f1f]
  418f10:	sub    esp,DWORD PTR ds:0x9822ed1a
  418f16:	icebp  
  418f17:	inc    ecx
  418f18:	cdq    
  418f19:	clc    
  418f1a:	lea    ecx,[ecx+0x2b092d66]
  418f20:	mov    dl,0x8
  418f22:	lods   eax,DWORD PTR ds:[esi]
  418f23:	stos   BYTE PTR es:[edi],al
  418f24:	inc    edx
  418f25:	and    DWORD PTR [edi+0x5ea9772c],0xc1ed319c
  418f2f:	xor    esi,DWORD PTR [ebx+0x72]
  418f32:	sti    
  418f33:	push   es
  418f34:	jbe    0x418f35
  418f36:	push   0x76acdbfd
  418f3b:	jb     0x418eeb
  418f3d:	sbb    BYTE PTR [esi-0x72],ch
  418f40:	xchg   ecx,eax
  418f41:	inc    esp
  418f42:	cwde   
  418f43:	xchg   edx,eax
  418f44:	jae    0x418fa7
  418f46:	pushf  
  418f47:	stos   BYTE PTR es:[edi],al
  418f48:	sbb    al,0x51
  418f4a:	mov    BYTE PTR [ebx+0x43],bh
  418f4d:	mov    dl,0xea
  418f4f:	fs add eax,0xa0ec8ea3
  418f55:	outs   dx,BYTE PTR ds:[esi]
  418f56:	sbb    DWORD PTR [esp+esi*1],ecx
  418f59:	jmp    0xbe994dc4
  418f5e:	and    al,0x77
  418f61:	stos   BYTE PTR es:[edi],al
  418f62:	retf   
  418f63:	xor    eax,0x36afeaa6
  418f68:	fiadd  DWORD PTR [esi+0x2fd6af28]
  418f6e:	(bad)  
  418f6f:	std    
  418f70:	push   edx
  418f71:	xchg   bl,ch
  418f73:	loope  0x418f4b
  418f75:	(bad)  
  418f76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f77:	idiv   DWORD PTR [ecx+0x3486b10f]
  418f7d:	add    esp,DWORD PTR [esi-0x1e3e708]
  418f83:	dec    ebx
  418f84:	or     eax,0xdfa894d6
  418f89:	push   es
  418f8a:	ror    DWORD PTR [eax],0xc9
  418f8d:	xchg   edx,eax
  418f8e:	and    esi,DWORD PTR [edx-0xe]
  418f91:	loop   0x418f51
  418f93:	jae    0x41900c
  418f95:	gs popf 
  418f97:	pop    ds
  418f98:	fld    DWORD PTR [esi+0x45780d74]
  418f9e:	ds pop ecx
  418fa0:	mov    dl,0xfa
  418fa2:	jne    0x418f70
  418fa4:	out    0xc0,eax
  418fa6:	lock xor eax,DWORD PTR [ebx-0x4122cbec]
  418fad:	sti    
  418fae:	call   0xc7b3:0x9a991089
  418fb5:	rcl    al,0x54
  418fb8:	ret    0x7c9c
  418fbb:	cmp    esp,DWORD PTR [esi+eax*8-0x62]
  418fbf:	dec    edi
  418fc0:	stc    
  418fc1:	jnp    0x419021
  418fc3:	adc    edx,DWORD PTR [ecx-0x4e]
  418fc6:	imul   edi,DWORD PTR [edx],0x92e4940e
  418fcc:	mov    esi,0x85368c96
  418fd1:	add    al,BYTE PTR [ebp-0x307a7bcc]
  418fd7:	fisub  DWORD PTR [esi]
  418fd9:	lods   eax,DWORD PTR ds:[esi]
  418fda:	iret   
  418fdb:	xchg   esi,eax
  418fdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fdd:	sbb    eax,0x72bef3b3
  418fe2:	into   
  418fe3:	inc    ecx
  418fe4:	xlat   BYTE PTR ds:[ebx]
  418fe5:	cwde   
  418fe6:	dec    edx
  418fe7:	cmp    ecx,DWORD PTR [ebx+0xd3a3d1d]
  418fed:	xchg   edi,ebp
  418fef:	sub    ebp,DWORD PTR [esi]
  418ff1:	xchg   dl,bh
  418ff3:	pusha  
  418ff4:	mov    ebp,0xfbada34
  418ff9:	jb     0x419059
  418ffb:	mov    WORD PTR [ebp-0x24],?
  418ffe:	mov    dh,0x64
  419000:	enter  0x9b8e,0xc8
  419004:	sub    ebx,DWORD PTR [edx+0x6bf064bd]
  41900a:	or     eax,0xa7c9fe3f
  41900f:	div    DWORD PTR [esi+0x7b]
  419012:	call   DWORD PTR [edi-0x275b4991]
  419018:	std    
  419019:	(bad)  
  41901a:	lahf   
  41901b:	adc    eax,eax
  41901d:	nop
  41901e:	leave  
  41901f:	push   cs
  419020:	push   eax
  419021:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419022:	rcr    BYTE PTR [ebx-0x60],cl
  419025:	pop    esp
  419026:	cmc    
  419027:	popa   
  419028:	xor    al,0x2e
  41902a:	ret    0xf949
  41902d:	lods   al,BYTE PTR ds:[esi]
  41902e:	popf   
  41902f:	iret   
  419030:	xor    bl,BYTE PTR [eax-0xd414e79]
  419036:	inc    edi
  419037:	inc    edx
  419038:	xchg   edx,eax
  419039:	pop    ebx
  41903a:	push   edi
  41903b:	pop    esi
  41903c:	cmp    bl,BYTE PTR [edi]
  41903e:	push   esi
  41903f:	mov    edi,0x93321ee9
  419044:	push   esi
  419045:	outs   dx,DWORD PTR ds:[esi]
  419046:	jne    0x4190a3
  419048:	imul   esi,DWORD PTR [esi+0x48],0xffffffb9
  41904c:	leave  
  41904d:	sbb    eax,0xbd0c696e
  419052:	push   0xad1f31b6
  419057:	repz int3 
  419059:	mov    ecx,0xbf841842
  41905e:	sti    
  41905f:	leave  
  419060:	jle    0x41900b
  419062:	int    0xf7
  419064:	sub    al,0x37
  419066:	cmp    DWORD PTR [edi-0x4],ebx
  419069:	sar    BYTE PTR [ecx-0x5d],cl
  41906c:	cmp    al,0x71
  41906e:	push   0x3a
  419070:	mov    eax,0xdeff4f13
  419075:	jmp    0xbc49:0xc01b06c4
  41907c:	out    dx,eax
  41907d:	aad    0x2
  41907f:	xchg   BYTE PTR [ebx],ch
  419081:	repnz pusha 
  419083:	add    edx,esp
  419085:	loop   0x419084
  419087:	mov    eax,0xf9c85b0d
  41908c:	mov    dh,0xe9
  41908e:	outs   dx,BYTE PTR ds:[esi]
  41908f:	sbb    DWORD PTR [ebx+0x750cc5a1],0xefb97ec5
  419099:	mov    eax,0x97a77a37
  41909e:	test   al,0x74
  4190a0:	out    0xa2,eax
  4190a2:	adc    BYTE PTR [ebx-0x3e],dl
  4190a5:	push   ds
  4190a6:	mov    bh,0xd
  4190a8:	sub    al,0xd9
  4190aa:	es bnd ja 0x419098
  4190ae:	jnp    0x4190ba
  4190b0:	das    
  4190b1:	test   eax,0xf47dd0a4
  4190b6:	lods   eax,DWORD PTR ds:[esi]
  4190b7:	mov    eax,ds:0xfbc0a626
  4190bc:	test   al,0x3c
  4190be:	retf   
  4190bf:	loopne 0x419109
  4190c1:	(bad)  
  4190c2:	and    al,0xf0
  4190c4:	retf   
  4190c5:	mov    bh,0xf1
  4190c7:	sahf   
  4190c8:	xchg   ebx,eax
  4190c9:	call   0x809c:0xe05514f
  4190d0:	sahf   
  4190d1:	ror    bh,0x3
  4190d4:	mov    ds:0xca23ca6,eax
  4190d9:	add    ebx,0x958226ac
  4190df:	test   DWORD PTR [edi],esp
  4190e1:	mov    cl,0x7d
  4190e3:	aas    
  4190e4:	fs daa 
  4190e6:	dec    esp
  4190e7:	xchg   DWORD PTR [ebx+0x60],ebp
  4190ea:	dec    edx
  4190eb:	mov    al,ds:0xafbc9a44
  4190f0:	(bad)  
  4190f2:	sub    DWORD PTR [ebp-0x3035d95b],ebp
  4190f8:	mov    DWORD PTR [ebx],esp
  4190fa:	shl    BYTE PTR [ecx],0x9d
  4190fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190fe:	mov    ds:0xc93c3ee8,al
  419103:	retf   
  419104:	inc    esi
  419105:	test   al,0xd9
  419107:	or     DWORD PTR [edx-0x6a],ebp
  41910a:	in     eax,dx
  41910b:	test   al,0x9
  41910d:	pusha  
  41910e:	mov    esi,0x53ad2c20
  419113:	in     al,dx
  419114:	repz jno 0x419172
  419117:	loop   0x4190a9
  419119:	sar    BYTE PTR [edx-0x1e9d748f],cl
  41911f:	pop    ecx
  419120:	jmp    0x8666:0x55fd2de7
  419127:	push   DWORD PTR [ebp+0x5]
  41912a:	mov    ah,0x82
  41912c:	int    0x70
  41912e:	adc    DWORD PTR [ebx+0x20c3f01a],eax
  419134:	std    
  419135:	mov    ds:0x5818df78,eax
  41913a:	mov    al,ds:0x63109d8f
  41913f:	std    
  419140:	js     0x4190f5
  419142:	push   eax
  419143:	rcl    BYTE PTR [ebx+0x26336e16],1
  419149:	das    
  41914a:	loop   0x4190e3
  41914c:	lea    ebx,[edi-0x1b]
  41914f:	fcomp  DWORD PTR [edx+0x37]
  419152:	dec    ebp
  419153:	dec    esi
  419154:	push   ecx
  419155:	test   DWORD PTR [eax-0x78],ebp
  419158:	jne    0x41912e
  41915a:	loop   0x41915d
  41915c:	fcmovbe st,st(4)
  41915e:	xor    bl,dh
  419160:	sbb    ebp,eax
  419162:	mov    ecx,0x3ec5801d
  419167:	mov    ebx,0xa3b0b73
  41916c:	sti    
  41916d:	jb     0x419175
  41916f:	clc    
  419170:	push   0xffffffdd
  419172:	xchg   edx,eax
  419173:	mov    bl,0x60
  419175:	mov    edx,0x530ca2de
  41917a:	push   eax
  41917b:	adc    al,0xcb
  41917d:	dec    esp
  41917e:	mov    ebp,0x77ee9b36
  419183:	sub    DWORD PTR [edx*4+0x7e3a35e2],edi
  41918a:	mov    dh,0x68
  41918c:	mov    ebx,0x67f793c0
  419191:	and    ah,ch
  419193:	dec    esi
  419194:	pop    ebp
  419195:	lahf   
  419196:	fisttp DWORD PTR [ebx+0x5902c87f]
  41919c:	pop    esp
  41919d:	ror    DWORD PTR [edi],cl
  41919f:	mov    ebp,0x420adbb3
  4191a4:	lods   al,BYTE PTR ds:[esi]
  4191a5:	repz rcr eax,cl
  4191a8:	retf   
  4191a9:	(bad)  
  4191aa:	daa    
  4191ab:	cmp    DWORD PTR [eax-0x142844e7],edx
  4191b1:	scas   al,BYTE PTR es:[edi]
  4191b2:	or     eax,0xf47cd2dd
  4191b7:	dec    esp
  4191b8:	prefetchwt1 (bad)
  4191b9:	or     eax,0xe2595cd3
  4191be:	ret    
  4191bf:	test   ah,dh
  4191c1:	sbb    al,0xf4
  4191c3:	fisub  DWORD PTR [edx]
  4191c5:	(bad)  
  4191c6:	pop    ebp
  4191c7:	xor    eax,0xf8c0472f
  4191cc:	jmp    0x4191a3
  4191ce:	addr16 aam 0xfa
  4191d1:	mov    DWORD PTR [ebp+0x3a],esi
  4191d4:	push   ss
  4191d5:	mul    DWORD PTR [ebx+0x37]
  4191d8:	push   ebx
  4191d9:	aam    0x42
  4191db:	sub    ebx,edx
  4191dd:	inc    ecx
  4191de:	fstp   QWORD PTR [edi]
  4191e0:	pop    esi
  4191e1:	xchg   esp,eax
  4191e2:	(bad)  [ebx]
  4191e4:	lods   al,BYTE PTR ds:[esi]
  4191e5:	stc    
  4191e6:	xor    al,0x98
  4191e8:	fild   DWORD PTR [edi-0x5def2538]
  4191ee:	adc    bh,BYTE PTR [esi+0x2bdcb294]
  4191f4:	push   edx
  4191f5:	mov    eax,ds:0xf68b7bda
  4191fa:	std    
  4191fb:	jmp    0x7147:0x6f96978d
  419202:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419203:	std    
  419204:	enter  0x80d5,0x6f
  419208:	xchg   ecx,eax
  419209:	dec    edi
  41920a:	into   
  41920b:	fwait
  41920c:	repz (bad) 
  41920e:	push   0xb2441227
  419213:	cmp    eax,0x4980edad
  419218:	test   DWORD PTR [edi-0x1d],eax
  41921b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41921c:	sub    BYTE PTR [edi-0x18af2a06],al
  419222:	out    dx,eax
  419223:	xor    BYTE PTR ds:0x4ac7258f,cl
  419229:	cmp    esp,DWORD PTR ds:0xb1f1007f
  41922f:	mov    al,0x47
  419231:	dec    edi
  419232:	sub    al,0x86
  419234:	inc    eax
  419235:	xor    DWORD PTR [edi],ecx
  419237:	rol    BYTE PTR [ebp+0x32],0x55
  41923b:	inc    edi
  41923c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41923d:	xchg   DWORD PTR [edi],eax
  41923f:	cwde   
  419240:	pop    esp
  419241:	je     0x419202
  419243:	mov    eax,DWORD PTR [ebp-0x2754ad58]
  419249:	retf   
  41924a:	add    al,0x4
  41924c:	mov    al,ds:0x30214ff1
  419251:	jle    0x419257
  419253:	inc    edi
  419254:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419255:	mov    eax,ds:0x82563b91
  41925a:	push   0x92753032
  41925f:	push   ds
  419260:	cmp    al,bl
  419262:	(bad)
  419265:	sub    ecx,esp
  419267:	xchg   ebx,eax
  419268:	les    esp,FWORD PTR [esi]
  41926a:	mov    ds:0x6b32715b,eax
  41926f:	xchg   ecx,eax
  419270:	xchg   ecx,eax
  419271:	sbb    eax,0x7c6a339f
  419276:	fidivr WORD PTR [ebx+ebx*1-0x16eced69]
  41927d:	or     BYTE PTR ds:0x14dc8884,bl
  419283:	jnp    0x4192e4
  419285:	pop    esp
  419286:	int3   
  419287:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  419289:	icebp  
  41928a:	das    
  41928b:	sbb    dh,BYTE PTR [edx-0x3d2e899]
  419291:	mov    ecx,0x2c7e969b
  419296:	aad    0x6c
  419298:	mov    bl,0xee
  41929a:	mov    esp,0x8ebd8509
  41929f:	xchg   BYTE PTR [esi],bh
  4192a1:	or     BYTE PTR [ebx],dl
  4192a3:	sahf   
  4192a4:	mov    ch,0x47
  4192a6:	sbb    DWORD PTR [eax+0x1d9dc3a],ebx
  4192ac:	add    bl,BYTE PTR [eax+ebx*4-0x67]
  4192b0:	xchg   ecx,eax
  4192b1:	cld    
  4192b2:	test   BYTE PTR [esi],cl
  4192b4:	in     eax,0xb7
  4192b6:	pop    ecx
  4192b7:	rep lods al,BYTE PTR ds:[esi]
  4192b9:	mov    dh,0xf5
  4192bb:	cmp    BYTE PTR ds:0xd2c5b397,dl
  4192c1:	int3   
  4192c2:	pop    es
  4192c3:	rcr    BYTE PTR [edx+0x7d6a37df],0x2d
  4192ca:	or     al,0x7e
  4192cc:	mov    ds:0xf69f7a12,eax
  4192d1:	xchg   edx,eax
  4192d2:	out    0xe4,eax
  4192d4:	jno    0x419291
  4192d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192d7:	pop    ebp
  4192d8:	dec    esi
  4192d9:	add    edx,DWORD PTR [edi+ecx*1]
  4192dc:	lgdtd  [esi+0x4bd82ecf]
  4192e3:	add    eax,DWORD PTR [ebx]
  4192e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192e6:	adc    al,0x18
  4192e8:	jb     0x419287
  4192ea:	push   edi
  4192eb:	leave  
  4192ec:	mov    si,0x507d
  4192f0:	mov    ah,al
  4192f2:	jns    0x419309
  4192f4:	test   al,0xd2
  4192f6:	fcomp  DWORD PTR [edx-0x7c54e12b]
  4192fc:	mov    WORD PTR [edx+edx*4],ds
  4192ff:	ss pop edi
  419301:	jnp    0x4192a3
  419303:	inc    ebp
  419304:	(bad)  
  419305:	mov    eax,ds:0xab561dc6
  41930a:	and    ebx,DWORD PTR [ebx+0x68]
  41930d:	outs   dx,DWORD PTR ds:[esi]
  41930e:	sti    
  41930f:	ins    DWORD PTR es:[edi],dx
  419310:	leave  
  419311:	in     al,dx
  419312:	cdq    
  419313:	mul    BYTE PTR [eax-0x6b666b1]
  419319:	jl     0x419311
  41931b:	jae    0x41932e
  41931d:	int    0x94
  41931f:	add    eax,DWORD PTR [edx]
  419321:	mov    esi,DWORD PTR [ebp+edx*8-0x29]
  419325:	push   esi
  419326:	clc    
  419327:	inc    eax
  419328:	ins    DWORD PTR es:[edi],dx
  419329:	adc    ah,cl
  41932b:	sti    
  41932c:	in     al,0x86
  41932e:	repz cli 
  419330:	xchg   ebp,eax
  419331:	ins    BYTE PTR es:[edi],dx
  419332:	int    0xf1
  419334:	dec    ecx
  419335:	and    ecx,DWORD PTR fs:[edx]
  419338:	or     eax,DWORD PTR cs:[esi+eiz*1-0x5a]
  41933d:	inc    edx
  41933e:	fs out dx,eax
  419340:	add    DWORD PTR [ebp-0x3],0xc07636d3
  419347:	(bad)  
  419349:	push   cs
  41934a:	fadd   st,st(0)
  41934c:	sub    BYTE PTR [ebx-0x4a4bd961],0xc9
  419353:	jno    0x419317
  419355:	ret    
  419356:	loopne 0x419307
  419358:	adc    ecx,DWORD PTR [ecx+0x72]
  41935b:	loop   0x419372
  41935d:	js     0x4193c2
  41935f:	les    eax,FWORD PTR [ecx-0x5ddd6a9c]
  419365:	mov    bh,al
  419367:	xchg   esi,eax
  419368:	mov    es,edi
  41936a:	aaa    
  41936b:	cwde   
  41936c:	sub    edx,DWORD PTR [esi+0x4b]
  41936f:	push   ss
  419370:	push   es
  419371:	mov    ebp,0x3e1af299
  419376:	js     0x419364
  419378:	sub    bl,BYTE PTR [esi+0x20fd8140]
  41937e:	sar    BYTE PTR [eax],1
  419380:	sub    edx,esi
  419382:	das    
  419383:	mov    edi,0xfc43f8a6
  419388:	mov    bl,0xe0
  41938a:	sti    
  41938b:	mov    ds:0x6d305139,eax
  419390:	and    eax,0xe7b8414f
  419395:	and    bl,BYTE PTR [edx+0x44ea07e6]
  41939b:	cli    
  41939c:	sub    BYTE PTR [ecx],dl
  41939e:	adc    BYTE PTR [edx+eax*2-0x1b],dl
  4193a2:	scas   al,BYTE PTR es:[edi]
  4193a3:	test   BYTE PTR [edx+0x78],dh
  4193a6:	test   DWORD PTR [ecx+0x513873c1],ebp
  4193ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193ad:	test   al,0xcb
  4193af:	dec    esi
  4193b0:	mov    ds:0x720e03fe,al
  4193b5:	pop    ecx
  4193b6:	in     al,dx
  4193b7:	std    
  4193b8:	test   al,0xd9
  4193ba:	(bad)  
  4193bb:	clc    
  4193bc:	(bad)  
  4193bd:	fld    QWORD PTR [eax]
  4193bf:	mov    esp,DWORD PTR [edi+0x76]
  4193c2:	outs   dx,BYTE PTR ds:[esi]
  4193c3:	and    al,0xb4
  4193c5:	ins    BYTE PTR es:[edi],dx
  4193c6:	sbb    dh,al
  4193c8:	sar    DWORD PTR [ebx-0x4f],1
  4193cb:	dec    ebp
  4193cc:	pop    esi
  4193cd:	sub    al,0x41
  4193cf:	(bad)  
  4193d0:	outs   dx,DWORD PTR ds:[esi]
  4193d1:	inc    eax
  4193d2:	cmp    DWORD PTR [edi],esi
  4193d4:	cmp    al,0x2a
  4193d6:	ftst   
  4193d8:	popf   
  4193d9:	add    al,0xb
  4193db:	mov    bl,0xdc
  4193dd:	bound  edi,QWORD PTR [ecx+edi*4+0x4b984d0]
  4193e4:	test   DWORD PTR [ecx-0x5758c231],eax
  4193ea:	arpl   WORD PTR [ebx+edi*4],cx
  4193ed:	arpl   WORD PTR [eax+eiz*4-0x38],di
  4193f1:	push   ebp
  4193f2:	jl     0x4193ee
  4193f4:	sbb    al,0x6a
  4193f6:	adc    DWORD PTR [ebp*8+0x7448903],0x44
  4193fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193ff:	fcmovnbe st,st(3)
  419401:	out    0x3a,eax
  419403:	pop    eax
  419404:	(bad)  
  419405:	push   ebx
  419406:	pop    edx
  419407:	sbb    ebx,ecx
  419409:	loopne 0x419403
  41940b:	je     0x419433
  41940d:	ds xchg esp,eax
  41940f:	ins    DWORD PTR es:[edi],dx
  419410:	in     al,dx
  419411:	scas   al,BYTE PTR es:[edi]
  419412:	and    ch,BYTE PTR [ecx-0x13]
  419415:	ret    
  419416:	pop    eax
  419417:	push   ss
  419418:	jns    0x419415
  41941a:	add    BYTE PTR [ecx+edx*2-0x49],ch
  41941e:	and    BYTE PTR [ebx-0x6f29f36b],bl
  419424:	ss adc al,0xe6
  419427:	js     0x41942a
  419429:	jg     0x4193b5
  41942b:	add    al,0xad
  41942d:	arpl   bx,si
  41942f:	dec    ecx
  419430:	out    0x1c,al
  419432:	and    BYTE PTR [eax+0x13798661],dl
  419438:	cmp    DWORD PTR [ebp+0x2289b2fe],ecx
  41943e:	jne    0x4194b9
  419440:	dec    ecx
  419441:	ror    DWORD PTR [edx-0x74],0xc1
  419445:	out    dx,eax
  419446:	push   0x1541908f
  41944b:	dec    edi
  41944c:	(bad)  
  41944d:	adc    eax,0x5c9c2c2a
  419452:	outs   dx,DWORD PTR ds:[esi]
  419453:	push   ebp
  419454:	jo     0x419470
  419456:	enter  0x1ec5,0xb9
  41945a:	bound  esi,QWORD PTR ds:0x41c59f71
  419460:	adc    al,0x27
  419462:	icebp  
  419463:	inc    ebx
  419464:	jae    0x419427
  419466:	cmc    
  419467:	enter  0xbab7,0x4
  41946b:	mov    fs,WORD PTR [ebx]
  41946d:	push   edx
  41946e:	xchg   ebx,eax
  41946f:	scas   al,BYTE PTR es:[edi]
  419470:	lods   eax,DWORD PTR ds:[esi]
  419471:	add    eax,0x961ebbf9
  419476:	sbb    eax,0x12827f64
  41947b:	fadd   st(7),st
  41947d:	int3   
  41947e:	push   ebx
  41947f:	ror    DWORD PTR [ebx-0x15b30541],cl
  419485:	dec    eax
  419486:	mov    dh,0x5f
  419488:	lds    esp,FWORD PTR [edx]
  41948a:	shl    BYTE PTR ds:0x21062f92,0xbd
  419491:	bswap  ebp
  419493:	pop    ds
  419494:	adc    BYTE PTR [edi+0x7b],al
  419497:	and    BYTE PTR [edx-0x9e37b40],ch
  41949d:	push   esi
  41949e:	data16 jne 0x4194e9
  4194a1:	leave  
  4194a2:	int    0x58
  4194a4:	aaa    
  4194a5:	retf   
  4194a6:	cld    
  4194a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194a8:	xor    eax,0x76573c58
  4194ad:	jl     0x419529
  4194af:	pop    ds
  4194b0:	sub    eax,0xf163dba9
  4194b5:	xchg   esp,eax
  4194b6:	es sub bh,bl
  4194b9:	adc    eax,0xd17205a
  4194be:	mov    ebp,0x87a0dd35
  4194c3:	jb     0x4194fe
  4194c5:	dec    edx
  4194c6:	sbb    al,0xa1
  4194c8:	mov    esi,0x1754cc7e
  4194cd:	jg     0x4194da
  4194cf:	rcl    DWORD PTR [ebx],cl
  4194d1:	or     DWORD PTR [ebx+0x6],edi
  4194d4:	inc    ebp
  4194d5:	mov    esi,0xcec89e7
  4194da:	test   DWORD PTR [edi+0x593f56a0],0x3c71c0bb
  4194e4:	or     al,0xc3
  4194e6:	pop    eax
  4194e7:	push   ecx
  4194e8:	nop
  4194e9:	inc    ebp
  4194ea:	stc    
  4194eb:	xchg   ecx,eax
  4194ec:	mov    ds:0xdda9ac4d,eax
  4194f1:	mov    ebx,0x2ddeba0a
  4194f6:	cmc    
  4194f7:	push   es
  4194f8:	(bad)  
  4194f9:	cmp    BYTE PTR [ebp-0x2a3e4095],dl
  4194ff:	sar    BYTE PTR ds:[ebp-0x34],1
  419503:	and    esi,ecx
  419505:	and    al,0xc6
  419507:	mov    ds:0x62703c5d,eax
  41950c:	aaa    
  41950d:	fisttp DWORD PTR gs:[ebx*2+0x243abe1d]
  419515:	je     0x4194b1
  419517:	jmp    0x924d78b0
  41951c:	(bad)  
  41951d:	or     BYTE PTR [ebx],ah
  41951f:	lea    ecx,[ebx]
  419521:	(bad)  
  419522:	iret   
  419523:	xor    eax,DWORD PTR [esi-0x51]
  419526:	lahf   
  419527:	test   eax,0xf0ce51ca
  41952c:	retf   
  41952d:	xchg   ebp,eax
  41952e:	fist   DWORD PTR [edi+0xc22388a]
  419534:	mov    ds:0xec4483ed,al
  419539:	jl     0x4195af
  41953b:	add    DWORD PTR [ecx+ecx*4],edi
  41953e:	jmp    0x41952a
  419540:	pusha  
  419541:	ror    BYTE PTR [ebx+0x262b724f],0x2d
  419548:	add    ebx,ebp
  41954a:	inc    esi
  41954b:	xchg   BYTE PTR [eax],ch
  41954d:	jge    0x4194e8
  41954f:	mov    esp,0x4ad566f7
  419554:	pop    ds
  419555:	outs   dx,DWORD PTR ds:[esi]
  419556:	inc    eax
  419557:	jmp    0x5a3de600
  41955c:	js     0x419568
  41955e:	dec    ecx
  41955f:	pop    DWORD PTR [edx]
  419561:	dec    eax
  419562:	in     al,dx
  419563:	gs push ds
  419565:	outs   dx,DWORD PTR ds:[esi]
  419566:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419567:	cs in  al,0x9c
  41956a:	leave  
  41956b:	fst    DWORD PTR [esi-0xb]
  41956e:	aam    0x3f
  419570:	dec    ecx
  419571:	scas   eax,DWORD PTR es:[edi]
  419572:	enter  0x91bf,0xe7
  419576:	sub    BYTE PTR [edx+ebp*8-0x53],0xdf
  41957b:	fiadd  WORD PTR [eax]
  41957d:	adc    DWORD PTR [esi+0x6e7abbe1],esi
  419583:	adc    ecx,esp
  419585:	and    DWORD PTR cs:[ebx-0x1760fcd],0x5588af11
  419590:	test   BYTE PTR es:[edx-0x8],bh
  419594:	jns    0x419548
  419596:	dec    ebp
  419597:	stos   DWORD PTR es:[edi],eax
  419598:	xchg   ebx,eax
  419599:	lods   eax,DWORD PTR ds:[esi]
  41959a:	adc    eax,0xcd0489de
  41959f:	sbb    DWORD PTR [eax-0x5b6c9333],ebx
  4195a5:	not    BYTE PTR [ecx-0xd]
  4195a8:	hlt    
  4195a9:	retf   0x3106
  4195ac:	mov    edx,0x392544f4
  4195b1:	(bad)  
  4195b2:	xchg   esi,eax
  4195b3:	or     DWORD PTR [esi-0x54],0xffffff99
  4195b7:	sbb    ecx,ebx
  4195b9:	lock ins BYTE PTR es:[edi],dx
  4195bb:	or     edi,DWORD PTR [ebx]
  4195bd:	add    dh,dl
  4195bf:	sbb    ecx,eax
  4195c1:	xor    eax,0x599e3353
  4195c6:	dec    ebp
  4195c7:	add    esp,DWORD PTR [esi+edi*8+0x5d]
  4195cb:	popa   
  4195cc:	outs   dx,DWORD PTR ds:[esi]
  4195cd:	jno    0x41957e
  4195cf:	gs ins BYTE PTR es:[edi],dx
  4195d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195d2:	dec    eax
  4195d3:	les    esp,FWORD PTR [ebx+ebp*4]
  4195d6:	xchg   edi,eax
  4195d7:	inc    edx
  4195d8:	jb     0x4195f2
  4195da:	stos   DWORD PTR es:[edi],eax
  4195db:	add    DWORD PTR [ebp+0x350b189b],0x378863a2
  4195e5:	ja     0x419624
  4195e7:	xchg   ecx,eax
  4195e8:	rcr    DWORD PTR [ecx-0x6e],1
  4195eb:	aam    0x2d
  4195ed:	mov    ah,0xe5
  4195ef:	push   ebx
  4195f0:	das    
  4195f1:	jo     0x4195d4
  4195f3:	dec    edx
  4195f4:	mov    fs,WORD PTR [ebx+edx*8+0x23]
  4195f8:	push   ss
  4195f9:	loope  0x41963d
  4195fb:	add    BYTE PTR [esi+0x58],bh
  4195fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195ff:	mov    ebp,0xecaec7b6
  419604:	cmp    BYTE PTR [edx+0x58],0xc0
  419608:	cmp    bl,BYTE PTR [ecx-0x33]
  41960b:	jns    0x4195ea
  41960d:	(bad)  
  41960e:	(bad)  [ecx-0x19dc54c4]
  419614:	scas   al,BYTE PTR es:[edi]
  419615:	dec    edi
  419616:	lds    eax,FWORD PTR es:[edx-0x4705af0c]
  41961d:	push   eax
  41961e:	mov    ebx,0xfc59e935
  419623:	scas   eax,DWORD PTR es:[edi]
  419624:	cmp    eax,0xdb1a2e4c
  419629:	pusha  
  41962a:	inc    edi
  41962b:	je     0x4195af
  41962d:	mov    ecx,0xffcd659
  419632:	loop   0x4195e8
  419634:	adc    ah,BYTE PTR [esi+esi*1]
  419637:	aaa    
  419638:	ds enter 0xe798,0x5a
  41963d:	mov    al,ds:0xe4f8fcb4
  419642:	fild   QWORD PTR [eax-0x4c7a3e74]
  419648:	dec    edx
  419649:	fadd   DWORD PTR [esi]
  41964b:	add    al,0xe
  41964d:	ins    BYTE PTR es:[edi],dx
  41964e:	push   eax
  41964f:	rcr    ch,1
  419651:	add    DWORD PTR [esi+0x63],ecx
  419654:	lods   al,BYTE PTR ds:[esi]
  419655:	or     eax,0x9221668b
  41965a:	ins    BYTE PTR es:[edi],dx
  41965b:	dec    edx
  41965c:	cwd    
  41965e:	cwde   
  41965f:	daa    
  419660:	adc    BYTE PTR [eax],ah
  419662:	or     al,0xdd
  419664:	int3   
  419665:	sbb    al,0x90
  419667:	lahf   
  419668:	jp     0x41967a
  41966a:	jne    0x41964d
  41966c:	sub    DWORD PTR ds:0x521cfb05,ecx
  419672:	jmp    0x4196e1
  419674:	mov    bh,0xcb
  419676:	and    al,0x32
  419678:	push   0x4c
  41967a:	dec    eax
  41967b:	js     0x4196d1
  41967d:	(bad)  
  41967e:	sahf   
  41967f:	cdq    
  419680:	inc    esp
  419681:	push   0x5b
  419683:	cmp    al,0xd9
  419685:	in     al,dx
  419686:	jge    0x419674
  419688:	cmc    
  419689:	stos   DWORD PTR es:[edi],eax
  41968a:	fild   DWORD PTR [edi+edx*4+0x8017084]
  419691:	bound  esi,QWORD PTR [edi]
  419693:	rcl    DWORD PTR [ebx+0x29],1
  419696:	jnp    0x4196f8
  419698:	cmp    BYTE PTR [edi],bh
  41969a:	push   eax
  41969b:	pop    ecx
  41969c:	(bad)  
  41969d:	adc    BYTE PTR [edx-0x64a68d8f],dl
  4196a3:	push   edx
  4196a4:	mov    DWORD PTR [edx+0x2d],edx
  4196a7:	inc    esi
  4196a8:	cmp    BYTE PTR [eax+0x27],bl
  4196ab:	dec    ebx
  4196ac:	dec    esp
  4196ad:	sub    ch,dh
  4196af:	sub    al,0xcd
  4196b1:	das    
  4196b2:	retf   
  4196b3:	retf   0xa140
  4196b6:	mov    al,ds:0xe0b7c76b
  4196bb:	fwait
  4196bc:	gs xchg ebp,eax
  4196be:	in     eax,0x35
  4196c0:	aaa    
  4196c1:	ror    ch,0x2f
  4196c4:	rol    BYTE PTR [ecx-0x7b5a8b42],0x70
  4196cb:	js     0x419719
  4196cd:	sub    eax,0xb397cb40
  4196d2:	ins    DWORD PTR es:[edi],dx
  4196d3:	ror    DWORD PTR [esi+edx*8],1
  4196d6:	jno    0x419728
  4196d8:	retf   0xef5c
  4196db:	fwait
  4196dc:	mov    bl,ch
  4196de:	xchg   esi,eax
  4196df:	test   al,0x5d
  4196e1:	ret    
  4196e2:	mov    eax,edi
  4196e4:	or     edi,0x78
  4196e7:	inc    ebp
  4196e8:	mov    dh,0x6
  4196ea:	into   
  4196eb:	cmp    BYTE PTR [eax+0x40],ch
  4196ee:	push   eax
  4196ef:	or     cl,ch
  4196f1:	mov    esi,0xe20e83ca
  4196f6:	in     al,dx
  4196f7:	retf   0xeffd
  4196fa:	inc    eax
  4196fb:	clc    
  4196fc:	scas   al,BYTE PTR es:[edi]
  4196fd:	mov    bl,0xf6
  4196ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419700:	sbb    DWORD PTR [esi],ecx
  419702:	push   esp
  419703:	push   es
  419704:	outs   dx,DWORD PTR ds:[esi]
  419705:	sub    dh,bh
  419707:	in     eax,0xa6
  419709:	mov    ah,0xa5
  41970b:	jo     0x419725
  41970d:	callw  0x19fd
  419711:	xchg   cl,al
  419713:	sbb    eax,0xe2d53e86
  419718:	add    edx,0xffffff87
  41971b:	jbe    0x4196f0
  41971d:	sbb    al,0x8a
  41971f:	xor    edi,DWORD PTR [edx]
  419721:	xchg   ecx,eax
  419722:	jle    0x41978d
  419724:	or     ah,bl
  419726:	ds mov ecx,0x3c8ea7fa
  41972c:	retf   0xcd1b
  41972f:	test   DWORD PTR [ebx+0x4e],ecx
  419732:	push   ds
  419733:	shl    DWORD PTR [esp+ecx*8-0x72],1
  419737:	adc    al,0x6b
  419739:	aam    0x45
  41973b:	jnp    0x41972a
  41973d:	pop    edx
  41973e:	lahf   
  41973f:	mov    ecx,0x4de2cebb
  419744:	(bad)  
  419745:	ds push ecx
  419747:	pop    edi
  419748:	cmp    DWORD PTR [eax+0x35],eax
  41974b:	push   0xffffffe6
  41974d:	daa    
  41974e:	push   ebp
  41974f:	fsubr  QWORD PTR [esi+0x54]
  419752:	add    eax,0xafea3ef7
  419757:	mov    edi,0x6d1af5d1
  41975c:	cs jl  0x4197ab
  41975f:	bound  esp,QWORD PTR [ebx-0x13c9246d]
  419765:	lds    edi,FWORD PTR [ebx+eax*1-0x7f]
  419769:	jmp    0x419789
  41976b:	adc    cl,BYTE PTR [edx+0x78fb0041]
  419771:	sbb    ah,BYTE PTR [edx+0x51]
  419774:	pop    ebx
  419775:	int3   
  419776:	jg     0x4197a9
  419778:	repnz adc al,BYTE PTR [edx-0xd]
  41977c:	push   edx
  41977d:	icebp  
  41977e:	js     0x4197a9
  419780:	mov    ebx,0x90e86e21
  419785:	pop    esp
  419786:	and    edi,edi
  419788:	out    dx,eax
  419789:	repz add DWORD PTR [ebp+eiz*1-0x3341f4ed],ecx
  419791:	cmp    dh,BYTE PTR [eax-0x5ecfee0c]
  419797:	test   al,0xbf
  419799:	mov    edi,0xb35fb631
  41979e:	mov    ch,0xf5
  4197a0:	pop    ds
  4197a1:	inc    ebx
  4197a2:	ret    0xe8fd
  4197a5:	xor    BYTE PTR [ebx+0x3bdfaee4],dh
  4197ab:	push   cs
  4197ac:	jb     0x4197c1
  4197ae:	nop
  4197af:	das    
  4197b0:	shl    DWORD PTR [ebp+0x5cce9b63],0x36
  4197b7:	addr16 repnz mov al,0x7c
  4197bb:	mov    BYTE PTR [ecx+edi*2-0x5cf13529],cl
  4197c2:	pop    edx
  4197c3:	add    edi,DWORD PTR [ebp+0x35]
  4197c6:	mov    dh,0x65
  4197c8:	mov    ecx,0x3c2a7267
  4197cd:	popa   
  4197ce:	push   ss
  4197cf:	mov    eax,ds:0x9fd992f9
  4197d4:	xor    ch,BYTE PTR [edx-0x6a]
  4197d7:	test   al,0x57
  4197d9:	mov    cl,0x3c
  4197db:	adc    bh,BYTE PTR [edx+0x3c6ba083]
  4197e1:	sti    
  4197e2:	call   FWORD PTR [edx]
  4197e4:	push   eax
  4197e5:	jae    0x4197e0
  4197e7:	add    eax,0xf91a5fa2
  4197ec:	or     BYTE PTR [esi+0x3cdc8807],ch
  4197f2:	scas   al,BYTE PTR es:[edi]
  4197f3:	(bad)  
  4197f4:	add    al,0x76
  4197f6:	(bad)  
  4197f8:	jmp    0x419792
  4197fa:	adc    eax,DWORD PTR [edi-0x63]
  4197fd:	or     BYTE PTR [ebp+eiz*8-0x4257378],0x5a
  419805:	mov    eax,ds:0x756b734b
  41980a:	rcl    BYTE PTR [edx-0x36],1
  41980d:	test   DWORD PTR [edx],eax
  41980f:	js     0x4197c0
  419811:	mov    bl,0xc7
  419813:	js     0x41982b
  419815:	es int3 
  419817:	sbb    edi,0x75
  41981a:	pop    edx
  41981b:	jecxz  0x419808
  41981d:	int    0x36
  41981f:	stos   DWORD PTR es:[edi],eax
  419820:	inc    ecx
  419821:	sub    edx,edi
  419823:	jmp    0x3ce52fd8
  419828:	jmp    0x41983d
  41982a:	repnz mov eax,ds:0xddf7afc7
  419830:	aam    0xb6
  419832:	xor    eax,DWORD PTR [edx+0x5bb11bf7]
  419838:	or     eax,DWORD PTR [ebx]
  41983a:	addr16 aas 
  41983c:	(bad)  
  41983e:	xchg   ecx,eax
  41983f:	in     al,dx
  419840:	cmp    DWORD PTR [edx],eax
  419842:	dec    esp
  419843:	jae    0x419843
  419845:	stos   BYTE PTR es:[edi],al
  419846:	jecxz  0x41982c
  419848:	sub    al,0xa1
  41984a:	popa   
  41984b:	ja     0x419853
  41984d:	mov    cl,BYTE PTR [esi+0x5a]
  419850:	xor    al,0xfd
  419852:	jle    0x41987d
  419854:	cmp    eax,DWORD PTR [eax-0x5c2c8f]
  41985a:	out    dx,al
  41985b:	push   es
  41985c:	dec    esi
  41985d:	int    0xe6
  41985f:	push   ss
  419860:	pop    esi
  419861:	inc    eax
  419862:	mov    dl,0x13
  419864:	mov    ds:0xa321057f,eax
  419869:	sbb    edi,DWORD PTR [edx]
  41986b:	pop    ss
  41986c:	aad    0x73
  41986e:	jne    0x4198bf
  419870:	inc    eax
  419871:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419872:	jo     0x41984a
  419874:	and    eax,DWORD PTR [ebp+0x6b]
  419877:	bound  ecx,QWORD PTR [ebx-0x18]
  41987a:	fisubr DWORD PTR [eax+ebx*8-0x53]
  41987e:	pop    ds
  41987f:	sbb    BYTE PTR [esi],0x6
  419882:	rol    BYTE PTR [edx+0x4a],1
  419885:	jmp    0x4198fc
  419887:	std    
  419888:	jg     0x4198b7
  41988a:	cmp    eax,0xad7c3d08
  41988f:	hlt    
  419890:	dec    edx
  419891:	rcl    BYTE PTR [edx+0x5e07e44d],0x9e
  419898:	jne    0x419836
  41989a:	xchg   esp,eax
  41989b:	push   ds
  41989c:	and    al,0xed
  41989e:	int3   
  41989f:	loop   0x4198b1
  4198a1:	adc    cl,BYTE PTR [ebp-0x56f76154]
  4198a7:	or     bl,dl
  4198a9:	xchg   esi,eax
  4198aa:	mov    dl,0x1
  4198ac:	jg     0x4198c8
  4198ae:	bound  eax,QWORD PTR ds:0x7e935ca9
  4198b4:	dec    esi
  4198b5:	xchg   edi,eax
  4198b6:	test   DWORD PTR [esp+edi*8+0x42e83b0b],ebp
  4198bd:	fs sti 
  4198bf:	loop   0x41984a
  4198c1:	std    
  4198c2:	pop    edi
  4198c3:	es stos BYTE PTR es:[edi],al
  4198c5:	pushf  
  4198c6:	stos   BYTE PTR es:[edi],al
  4198c7:	idiv   DWORD PTR [esi]
  4198c9:	cmp    BYTE PTR [ecx],bh
  4198cb:	or     al,0x95
  4198cd:	mov    eax,0x6e99a9c6
  4198d2:	sbb    dh,BYTE PTR [ecx+edi*8+0x6]
  4198d6:	mov    ds:0xb9588a1c,eax
  4198db:	jae    0x419901
  4198dd:	or     ecx,esi
  4198df:	sub    eax,0x803acc96
  4198e4:	mov    edx,0xf7b516bb
  4198e9:	sub    DWORD PTR [ecx+eiz*4],eax
  4198ec:	mov    ss,WORD PTR [ebp-0x1e]
  4198ef:	(bad)  
  4198f0:	jp     0x4198a2
  4198f2:	pop    es
  4198f3:	jns    0x4198d7
  4198f5:	and    al,0xc9
  4198f7:	loope  0x4198c1
  4198f9:	ror    BYTE PTR [ebx],0xac
  4198fc:	xor    eax,0xde87d526
  419901:	inc    esp
  419902:	gs jbe 0x4198d2
  419905:	push   eax
  419906:	jp     0x41993d
  419908:	lods   eax,DWORD PTR ds:[esi]
  419909:	or     DWORD PTR [esi+0x213376b2],esi
  41990f:	int    0xd1
  419911:	imul   esi,DWORD PTR [ecx+ecx*1+0x2b],0xfa451c69
  419919:	sub    BYTE PTR [ebx],cl
  41991b:	adc    bl,BYTE PTR [eax]
  41991d:	test   BYTE PTR [ecx-0x6141c903],al
  419923:	sub    al,0x14
  419925:	fcom   QWORD PTR [edi+edx*2-0x56]
  419929:	out    0x48,eax
  41992b:	and    al,0x6a
  41992d:	jnp    0x419914
  41992f:	inc    edi
  419930:	xor    ah,BYTE PTR ds:0xe6f368a4
  419936:	push   0xffffff88
  419938:	stos   BYTE PTR es:[edi],al
  419939:	jecxz  0x4198e0
  41993b:	dec    eax
  41993c:	loope  0x41996b
  41993e:	xor    ch,ch
  419940:	push   ecx
  419941:	mov    esi,DWORD PTR [ecx-0x17846027]
  419947:	arpl   WORD PTR [esi],bp
  419949:	imul   esi,DWORD PTR [ecx+0x3812e35e],0x6e
  419950:	and    al,0xf
  419952:	inc    edi
  419953:	push   esi
  419954:	mov    ch,BYTE PTR [ebp-0x4896a5e2]
  41995a:	stos   BYTE PTR es:[edi],al
  41995b:	stos   BYTE PTR es:[edi],al
  41995c:	fs aam 0x5d
  41995f:	mov    ebx,0xd99262c0
  419964:	dec    esi
  419965:	lea    edi,[eax+0x14d75d22]
  41996b:	push   ebx
  41996c:	inc    ebx
  41996d:	iret   
  41996e:	jne    0x419958
  419970:	or     eax,0xa28bb9c8
  419975:	inc    ebx
  419976:	adc    ecx,DWORD PTR ds:0x1f8cf9f
  41997c:	ja     0x419991
  41997e:	scas   eax,DWORD PTR es:[edi]
  41997f:	fs js  0x4199e7
  419982:	adc    dl,bl
  419984:	sub    eax,0xe0599d33
  419989:	push   esp
  41998a:	popf   
  41998b:	sub    eax,0xd467912f
  419990:	daa    
  419991:	dec    edi
  419992:	sti    
  419993:	push   esi
  419994:	stos   BYTE PTR es:[edi],al
  419995:	rcl    esi,0x2e
  419998:	cmp    eax,0xaab85bb2
  41999d:	mov    gs,WORD PTR [ecx]
  41999f:	daa    
  4199a0:	leave  
  4199a1:	pop    ds
  4199a2:	shl    BYTE PTR [ebx-0x3f],1
  4199a5:	mov    ecx,0xb82b939e
  4199aa:	out    0x15,eax
  4199ac:	outs   dx,DWORD PTR ds:[esi]
  4199ad:	sbb    edx,esi
  4199af:	neg    BYTE PTR [edi]
  4199b1:	dec    esi
  4199b2:	mov    esi,0xa920586d
  4199b7:	adc    ebp,edi
  4199b9:	pusha  
  4199ba:	xchg   edi,eax
  4199bb:	mov    al,0x32
  4199bd:	jno    0x419a31
  4199bf:	fwait
  4199c0:	leave  
  4199c1:	sahf   
  4199c2:	xor    DWORD PTR [ebp-0x55],0xb4021b48
  4199c9:	mov    al,0x11
  4199cb:	inc    ecx
  4199cc:	pop    ebp
  4199cd:	add    al,bl
  4199cf:	test   al,0x4b
  4199d1:	mov    edi,DWORD PTR [esi+0x5]
  4199d4:	ss mov ebx,0x2de35e64
  4199da:	test   DWORD PTR [eax],eax
  4199dc:	add    DWORD PTR [ecx-0x744f1df9],edx
  4199e2:	dec    ecx
  4199e3:	add    eax,0x96d81ca4
  4199e8:	(bad)  [ebx-0x61]
  4199eb:	pop    ebx
  4199ec:	arpl   bx,dx
  4199ee:	sub    dl,BYTE PTR [esi+0x650f0c0f]
  4199f4:	xor    BYTE PTR [ebx-0x21],dl
  4199f7:	cmp    dl,BYTE PTR [ebp+0x77]
  4199fa:	stos   BYTE PTR es:[edi],al
  4199fb:	mov    ebx,0x76a256
  419a00:	aas    
  419a01:	add    DWORD PTR [ebp-0x3a],esp
  419a04:	ret    
  419a05:	jmp    FWORD PTR [edi+edx*4+0x2a]
  419a09:	(bad)  
  419a0a:	out    dx,al
  419a0b:	sbb    ch,al
  419a0d:	push   edx
  419a0e:	add    al,0xe8
  419a10:	scas   al,BYTE PTR es:[edi]
  419a11:	rol    DWORD PTR [edi],0x7f
  419a14:	jp     0x4199b8
  419a16:	pop    ebp
  419a17:	sahf   
  419a18:	in     eax,dx
  419a19:	arpl   WORD PTR [ebx],sp
  419a1b:	sub    BYTE PTR [ebx+0x354659fa],bh
  419a21:	xor    eax,0x573d941d
  419a26:	inc    esp
  419a27:	dec    eax
  419a28:	or     DWORD PTR [esi+0x1540b327],ebx
  419a2e:	scas   al,BYTE PTR es:[edi]
  419a2f:	mov    eax,fs:0x1cb13f4b
  419a35:	pop    ss
  419a36:	and    BYTE PTR [esi+0x36],dl
  419a39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a3a:	mov    ebx,0x67533776
  419a3f:	test   eax,0x4258d758
  419a44:	stc    
  419a45:	mov    WORD PTR [ecx+0x7eccc7f0],fs
  419a4b:	jae    0x419a82
  419a4d:	test   DWORD PTR [ecx],0xbf8d4313
  419a53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a54:	pop    edi
  419a55:	into   
  419a56:	jmp    DWORD PTR [ecx+0x14]
  419a59:	cmp    al,0x4e
  419a5b:	cmp    edi,DWORD PTR [eax]
  419a5d:	xchg   edx,eax
  419a5e:	addr16 xor al,0xa5
  419a61:	add    eax,0x8c1375d1
  419a66:	repnz and cl,BYTE PTR [ebx]
  419a69:	mov    bh,0xa3
  419a6b:	inc    esp
  419a6c:	or     esp,edi
  419a6e:	mov    edx,ebx
  419a70:	jl     0x419aca
  419a72:	mov    ecx,0xc95df939
  419a77:	pushf  
  419a78:	push   ebp
  419a79:	add    dl,bh
  419a7b:	lods   al,BYTE PTR ds:[esi]
  419a7c:	mov    ebp,0x2645e63b
  419a81:	jle    0x419aa1
  419a83:	in     al,dx
  419a84:	and    al,0xe5
  419a86:	sub    BYTE PTR [ebx+edx*8],dl
  419a89:	jae    0x419ad4
  419a8b:	hlt    
  419a8c:	dec    ebx
  419a8d:	ret    0x6a45
  419a90:	mov    ecx,DWORD PTR [ebx+0x5e]
  419a93:	and    ebx,ebp
  419a95:	sbb    DWORD PTR [esi+0x5ce44a76],0xafa041ea
  419a9f:	test   al,0xaa
  419aa1:	call   0xa985:0x4fd1e5a0
  419aa8:	and    al,0xac
  419aaa:	push   0x8
  419aac:	(bad)
  419aaf:	mov    ch,0xe5
  419ab1:	add    DWORD PTR ds:0x136c873f,0x1a5e5bb
  419abb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419abc:	mov    esp,0xdc7bad35
  419ac1:	in     al,dx
  419ac2:	jmp    0xb83f:0xf3ee386f
  419ac9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419aca:	pushf  
  419acb:	sbb    bl,BYTE PTR [eax+0x233f66b4]
  419ad1:	adc    al,0x52
  419ad3:	in     eax,dx
  419ad4:	inc    ebx
  419ad5:	stc    
  419ad6:	lods   al,BYTE PTR ds:[esi]
  419ad7:	xchg   DWORD PTR [esi-0x2a453f66],esp
  419add:	sbb    dl,BYTE PTR [ecx-0x38]
  419ae0:	mov    al,0xd0
  419ae2:	mov    al,ds:0x8fbeb615
  419ae7:	cmp    edi,DWORD PTR [ecx+0x614cb428]
  419aed:	fs repz xchg esi,eax
  419af0:	xor    ebx,edx
  419af2:	stc    
  419af3:	push   0xd72832a
  419af8:	xor    cl,bl
  419afa:	jb     0x419b02
  419afc:	xchg   ch,dl
  419afe:	lods   eax,DWORD PTR ds:[esi]
  419aff:	arpl   WORD PTR [ecx+0x14],dx
  419b02:	nop
  419b03:	dec    esp
  419b04:	mov    ecx,0x984dddb3
  419b09:	pop    esp
  419b0a:	jae    0x419b1c
  419b0c:	iret   
  419b0d:	test   BYTE PTR [eax],0xea
  419b10:	inc    edi
  419b11:	imul   edi,DWORD PTR [ebx-0x33],0x8c45dfea
  419b18:	cmp    edi,DWORD PTR [ebp+0x7e5c2b54]
  419b1e:	out    0x6a,eax
  419b20:	fsubr  DWORD PTR [edi-0xb]
  419b23:	ret    
  419b24:	test   BYTE PTR ds:0x34114c,0xcf
  419b2b:	sti    
  419b2c:	sbb    eax,0x65d4ef2d
  419b31:	add    bh,BYTE PTR [edi+0x50]
  419b34:	ds fsub st,st(0)
  419b37:	(bad)  
  419b38:	push   ds
  419b39:	ret    
  419b3a:	inc    ebx
  419b3b:	and    bl,BYTE PTR [ebp-0x13]
  419b3e:	pop    ss
  419b3f:	ins    BYTE PTR es:[edi],dx
  419b40:	call   0x25d48973
  419b45:	jge    0x419b47
  419b47:	xchg   ebx,eax
  419b48:	ret    0x9b4a
  419b4b:	fwait
  419b4c:	cdq    
  419b4d:	adc    BYTE PTR [edx+0x56],ch
  419b50:	adc    dh,0xdd
  419b53:	sbb    eax,0x968750c
  419b58:	sub    BYTE PTR [ebx],0xe1
  419b5b:	sar    DWORD PTR [esi-0x5589f297],0x44
  419b62:	xchg   ecx,esp
  419b64:	nop
  419b65:	in     al,dx
  419b66:	outs   dx,BYTE PTR ds:[esi]
  419b67:	xor    DWORD PTR [edx+ebp*8+0x72a05e50],0x1fbb93e0
  419b72:	dec    edx
  419b73:	or     ah,BYTE PTR [ebx]
  419b75:	test   al,0xf
  419b77:	icebp  
  419b78:	push   ss
  419b79:	pop    ss
  419b7a:	add    eax,DWORD PTR [ebp+0x32]
  419b7d:	mov    BYTE PTR [ebx],0xc1
  419b80:	and    edi,ebp
  419b82:	(bad)  
  419b84:	add    BYTE PTR [edx],bl
  419b86:	inc    edx
  419b87:	and    ebx,DWORD PTR [esi+0x74]
  419b8a:	mov    ch,0xf5
  419b8c:	ins    BYTE PTR es:[edi],dx
  419b8d:	stc    
  419b8e:	fstp   TBYTE PTR [ecx+0x4fd6b3a4]
  419b94:	cmp    al,BYTE PTR [eax-0x1e8dd5f1]
  419b9a:	stc    
  419b9b:	xor    bh,BYTE PTR [edi-0x70ffa2c3]
  419ba1:	push   esp
  419ba2:	sub    BYTE PTR [eax-0x4fdcbb90],al
  419ba8:	or     dl,BYTE PTR [eax+eax*1]
  419bab:	jns    0x419b65
  419bad:	out    dx,al
  419bae:	retf   0x2af2
  419bb1:	and    DWORD PTR [eax+eax*1-0x4f],0x59
  419bb6:	lahf   
  419bb7:	aas    
  419bb8:	sbb    eax,DWORD PTR [edi-0x50]
  419bbb:	test   ebx,edi
  419bbd:	or     BYTE PTR [ebp+0x2054a7a3],cl
  419bc3:	pop    ss
  419bc4:	out    dx,al
  419bc5:	out    dx,al
  419bc6:	cmp    eax,0xcaafdb6c
  419bcb:	retf   0x959f
  419bce:	xor    DWORD PTR [esi+0x3650163e],eax
  419bd4:	es dec ecx
  419bd6:	adc    esi,edx
  419bd8:	fcomp  DWORD PTR [ebp-0x7a7a9874]
  419bde:	je     0x419b99
  419be0:	das    
  419be1:	rcl    DWORD PTR [edx],1
  419be3:	push   esi
  419be4:	add    ecx,0x3e894256
  419bea:	(bad)  
  419beb:	sub    dh,BYTE PTR [ebp-0x3f]
  419bee:	xor    edi,eax
  419bf0:	push   esi
  419bf1:	inc    ebx
  419bf2:	gs cmp eax,ecx
  419bf5:	xchg   ecx,eax
  419bf6:	popa   
  419bf7:	pusha  
  419bf8:	shl    BYTE PTR [edi],cl
  419bfa:	inc    ebp
  419bfb:	test   DWORD PTR [eax],edi
  419bfd:	adc    esi,esi
  419bff:	fcompp 
  419c01:	lods   al,BYTE PTR ds:[esi]
  419c02:	fld    TBYTE PTR [ebx+0x1e9fe63d]
  419c08:	pcmpgtb mm3,QWORD PTR [edx+0x65a29092]
  419c0f:	mov    bh,0x5
  419c11:	jne    0x419c54
  419c13:	mov    esp,0x273cbe73
  419c18:	ja     0x419bdc
  419c1a:	push   cs
  419c1b:	(bad)  
  419c1c:	cmp    BYTE PTR [ebx+0x52],ch
  419c1f:	aam    0x8c
  419c21:	fnstsw WORD PTR [edi]
  419c23:	fs test al,0x95
  419c26:	push   0x5e
  419c28:	or     edi,DWORD PTR [esi+ecx*2-0x10f3eb2b]
  419c2f:	jg     0x419bd1
  419c31:	push   esi
  419c32:	icebp  
  419c33:	sar    BYTE PTR [edi+0x57],1
  419c36:	lea    edi,[ebx+ebx*2-0x64925763]
  419c3d:	sti    
  419c3e:	(bad)  
  419c3f:	or     cl,BYTE PTR [ecx+0x55]
  419c42:	adc    dh,BYTE PTR [esi]
  419c44:	push   esi
  419c45:	sbb    ch,ah
  419c47:	add    edx,DWORD PTR [edi]
  419c49:	push   ecx
  419c4a:	adc    BYTE PTR ds:0xfdd158c4,ch
  419c50:	xor    eax,0x71d440b0
  419c55:	push   eax
  419c56:	out    0xa4,al
  419c58:	(bad)  
  419c59:	out    dx,eax
  419c5a:	shr    BYTE PTR ds:0xd2cd29d7,0x88
  419c61:	cmp    bh,BYTE PTR [ebx]
  419c63:	les    edi,FWORD PTR [ecx+ecx*8]
  419c66:	inc    edx
  419c67:	sub    eax,0x67b41777
  419c6c:	and    DWORD PTR [ebp+0x5dc3e45f],0x13
  419c73:	pop    eax
  419c74:	aaa    
  419c75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c76:	ins    DWORD PTR es:[edi],dx
  419c77:	jmp    0x2835006f
  419c7c:	inc    esi
  419c7d:	push   esp
  419c7e:	out    0x80,eax
  419c80:	ret    0xfb6b
  419c83:	and    bh,0x61
  419c86:	fst    QWORD PTR [ebp+0x3f]
  419c89:	enter  0xe851,0xc0
  419c8d:	popa   
  419c8e:	push   edx
  419c8f:	cdq    
  419c90:	sbb    DWORD PTR [ebp+0x7d51953b],edi
  419c96:	mov    dh,0xa2
  419c98:	div    cl
  419c9a:	cmp    eax,0xabc616ea
  419c9f:	xlat   BYTE PTR ds:[ebx]
  419ca0:	mov    ?,edx
  419ca2:	rcl    DWORD PTR [eax-0x11],1
  419ca5:	sbb    DWORD PTR [ebx+0x54],edx
  419ca8:	mov    DWORD PTR [ebx],edx
  419caa:	push   ss
  419cab:	xchg   edx,eax
  419cac:	daa    
  419cad:	mov    dh,BYTE PTR [eax+0x6b865f90]
  419cb3:	xchg   esi,eax
  419cb4:	aad    0x18
  419cb6:	sub    al,0xaa
  419cb8:	xor    eax,0x68db057f
  419cbd:	or     ecx,DWORD PTR [edi-0xc]
  419cc0:	jne    0x419cd4
  419cc2:	xor    eax,0x4fcd1b3a
  419cc7:	sbb    esp,DWORD PTR [ecx]
  419cc9:	test   BYTE PTR [ebp-0x3b681b23],bl
  419ccf:	fidiv  DWORD PTR [edx-0x78d91d7f]
  419cd5:	or     eax,0xc146e46e
  419cda:	aaa    
  419cdb:	pop    ss
  419cdc:	aam    0xa9
  419cde:	mov    esi,0x4fbdd3b3
  419ce3:	jp     0x419d0f
  419ce5:	jg     0x419d5b
  419ce7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ce8:	inc    ebp
  419ce9:	mov    ebx,0x30151648
  419cee:	out    dx,eax
  419cef:	fild   WORD PTR [edi+0x425710ae]
  419cf5:	pop    edx
  419cf6:	ret    
  419cf7:	fwait
  419cf8:	iret   
  419cf9:	test   edx,edi
  419cfb:	sbb    eax,0x5aba7e4
  419d00:	sbb    eax,0x5e5b758d
  419d05:	cmp    eax,0x55f66d7
  419d0a:	dec    ecx
  419d0b:	sbb    eax,0x840e9e47
  419d10:	adc    BYTE PTR [ebp-0x211e54b2],dl
  419d16:	xlat   BYTE PTR ds:[ebx]
  419d17:	sti    
  419d18:	fst    QWORD PTR [ebp-0x4b]
  419d1b:	je     0x419d11
  419d1d:	pop    ecx
  419d1e:	push   0x194fef87
  419d23:	cwde   
  419d24:	sub    bh,BYTE PTR [esi]
  419d26:	in     eax,0x51
  419d28:	bound  eax,QWORD PTR [eax+esi*1+0x64]
  419d2c:	xor    al,0xd4
  419d2e:	shl    DWORD PTR [edi+ebp*4+0x177b4e02],cl
  419d35:	add    eax,0x6ebe3bc8
  419d3a:	aad    0x41
  419d3c:	call   0x843a:0x22a2a5a8
  419d43:	push   eax
  419d44:	call   0x6912382e
  419d49:	aas    
  419d4a:	pop    esp
  419d4b:	mov    eax,0x17595f86
  419d50:	(bad)  
  419d52:	inc    edi
  419d53:	sub    ebx,edx
  419d55:	inc    esp
  419d56:	into   
  419d57:	inc    esi
  419d58:	stos   DWORD PTR es:[edi],eax
  419d59:	add    DWORD PTR [edi-0x23],0x3ca22c0
  419d60:	push   ebp
  419d61:	xchg   BYTE PTR [esi+0x6db0a11f],ah
  419d67:	lods   al,BYTE PTR ds:[esi]
  419d68:	sbb    BYTE PTR [edx-0x67],0xa7
  419d6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d6d:	pop    edi
  419d6e:	xchg   ebx,eax
  419d6f:	pop    ecx
  419d70:	mov    esi,0xd938c92a
  419d75:	and    esi,DWORD PTR [eax]
  419d77:	ins    BYTE PTR es:[edi],dx
  419d78:	and    DWORD PTR [ebx+0x3cd13ed2],esi
  419d7e:	add    ebx,DWORD PTR [eax]
  419d80:	test   BYTE PTR [eax],0xc1
  419d83:	cmc    
  419d84:	jecxz  0x419d85
  419d86:	push   ds
  419d87:	stos   DWORD PTR es:[edi],eax
  419d88:	mov    eax,0xe9b756a6
  419d8d:	(bad)  
  419d8e:	out    dx,al
  419d8f:	ficom  WORD PTR [edi+esi*1-0x205a9d4a]
  419d96:	dec    eax
  419d97:	xchg   esi,eax
  419d98:	je     0x419d30
  419d9a:	mov    DWORD PTR [edx],edi
  419d9c:	aaa    
  419d9d:	mov    ecx,0xc7b4eed1
  419da2:	(bad)  
  419da3:	adc    esp,DWORD PTR ds:0x8f11955a
  419da9:	sub    ah,bh
  419dab:	popa   
  419dac:	fmul   QWORD PTR [ebx+0x4df4c143]
  419db2:	add    eax,0x3f9aaa82
  419db7:	or     DWORD PTR [ebp-0x20c8d11f],eax
  419dbd:	xchg   edx,eax
  419dbe:	out    0x8d,al
  419dc0:	dec    ebx
  419dc1:	push   ebp
  419dc2:	or     BYTE PTR [edi+eax*2-0x10e111b9],cl
  419dc9:	push   ds
  419dca:	and    dh,BYTE PTR [edi+0x187300e]
  419dd0:	lahf   
  419dd1:	sub    edx,esp
  419dd3:	cmc    
  419dd4:	lahf   
  419dd5:	xlat   BYTE PTR ds:[ebx]
  419dd6:	fisub  WORD PTR [ebp-0x68]
  419dd9:	xchg   edx,eax
  419dda:	mov    ch,0xc8
  419ddc:	xor    edi,DWORD PTR [ebx+0x53]
  419ddf:	jns    0x419ddc
  419de1:	pop    esp
  419de2:	into   
  419de3:	enter  0x9bce,0x82
  419de7:	push   eax
  419de8:	es mov dl,cl
  419deb:	xchg   ecx,eax
  419dec:	and    al,0x47
  419dee:	xor    esp,DWORD PTR [edi+eiz*1+0x1f]
  419df2:	pop    ebx
  419df3:	pop    edi
  419df4:	push   0x57
  419df6:	pop    ds
  419df7:	es jne 0x419e64
  419dfa:	add    BYTE PTR [ebx+0x700b7efb],cl
  419e00:	imul   eax,DWORD PTR [ebp+0x4a6d270b],0x4359f376
  419e0a:	or     BYTE PTR [eax+0x39],0x71
  419e0e:	add    esi,ebp
  419e10:	push   es
  419e11:	sub    esp,ebp
  419e13:	push   ss
  419e14:	ss call 0x59777f9e
  419e1a:	ss jecxz 0x419e8b
  419e1d:	enter  0x9e6d,0x52
  419e21:	loop   0x419e09
  419e23:	pusha  
  419e24:	js     0x419db9
  419e26:	jae    0x419dea
  419e28:	fcmove st,st(4)
  419e2a:	pop    ecx
  419e2b:	pop    edi
  419e2c:	mov    ah,0xf5
  419e2e:	mov    ds:0x50bbe58e,eax
  419e33:	repz out 0x2c,al
  419e36:	bound  ebp,QWORD PTR [eax-0x389fca04]
  419e3c:	mov    edx,0xe68d306f
  419e41:	mov    ch,0xe8
  419e43:	(bad)  
  419e44:	in     eax,0xa8
  419e46:	pop    edi
  419e47:	dec    ecx
  419e48:	and    DWORD PTR [eax],esi
  419e4a:	and    al,0x9a
  419e4c:	lea    edx,[esi+0x2e12fe91]
  419e52:	or     edx,DWORD PTR [esi]
  419e54:	cmp    al,0xf2
  419e56:	add    BYTE PTR [ecx-0x69d177b1],cl
  419e5c:	dec    eax
  419e5d:	adc    dh,BYTE PTR [esi-0x1f]
  419e60:	jmp    0x419e19
  419e62:	push   0x9aa73778
  419e67:	fist   DWORD PTR [esi-0x27dd5ca8]
  419e6d:	jmp    0xf552d3ed
  419e72:	ret    
  419e73:	sbb    dh,BYTE PTR [edx+0x2bce8e01]
  419e79:	imul   esp,DWORD PTR [edx],0xffffffc7
  419e7c:	stc    
  419e7d:	xlat   BYTE PTR ds:[ebx]
  419e7e:	jmp    0x419e83
  419e80:	push   ebp
  419e81:	les    ebp,FWORD PTR [ebp+eax*2+0x7c]
  419e85:	push   es
  419e86:	mov    cl,0xd9
  419e88:	cld    
  419e89:	es mov esp,?
  419e8c:	xchg   esi,eax
  419e8d:	inc    edx
  419e8e:	xlat   BYTE PTR ds:[ebx]
  419e8f:	mov    ds:0xa6fae8bf,al
  419e94:	xor    al,0x73
  419e96:	jo     0x419e98
  419e98:	mov    WORD PTR [ebx+0x39],cs
  419e9b:	addr16 jl 0x419e6b
  419e9e:	out    0x20,al
  419ea0:	dec    esp
  419ea1:	rol    BYTE PTR ds:0x6f92d5ef,0x3e
  419ea8:	or     edi,DWORD PTR [edi-0x4b]
  419eab:	std    
  419eac:	adc    BYTE PTR [ebp-0x28],ch
  419eaf:	rcr    cl,cl
  419eb1:	sub    DWORD PTR [ebx-0x42],edi
  419eb4:	dec    eax
  419eb5:	shl    BYTE PTR [ecx],1
  419eb7:	jg     0x419ebc
  419eb9:	in     al,dx
  419eba:	cmp    DWORD PTR [esp+edi*8],esp
  419ebd:	mov    ah,0xf7
  419ebf:	xchg   BYTE PTR [esi-0x1b],ch
  419ec2:	std    
  419ec3:	push   ebx
  419ec4:	mov    ebx,0xf9f10048
  419ec9:	xor    BYTE PTR [esi],bl
  419ecb:	mov    ecx,0x934fb4c4
  419ed0:	and    dl,ch
  419ed2:	sub    bh,cl
  419ed4:	aaa    
  419ed5:	add    al,dh
  419ed7:	dec    ebp
  419ed8:	inc    esi
  419ed9:	jnp    0x419eb2
  419edb:	jg     0x419ee0
  419edd:	adc    edi,DWORD PTR [edx+0x6de6048d]
  419ee3:	mov    ah,0x9
  419ee5:	mov    ecx,0xe0a78aa2
  419eea:	ret    0xdeda
  419eed:	(bad)  
  419eef:	inc    ebp
  419ef0:	ss retf 
  419ef2:	ins    DWORD PTR es:[edi],dx
  419ef3:	mov    ds:0x86dd644b,al
  419ef8:	test   al,0x1e
  419efa:	mov    BYTE PTR [edx+0xc40b483],dl
  419f00:	mov    ch,0x17
  419f02:	inc    BYTE PTR [ebp+0x3030e199]
  419f08:	sbb    eax,ebp
  419f0a:	cmp    ch,bl
  419f0c:	xchg   ebx,eax
  419f0d:	dec    edx
  419f0e:	jl     0x419f0f
  419f10:	out    dx,al
  419f11:	mov    edi,0xaefd6ae4
  419f16:	adc    eax,0x526540be
  419f1b:	out    0x52,eax
  419f1d:	popa   
  419f1e:	mul    BYTE PTR [ebp-0x6ec26f0b]
  419f24:	push   ds
  419f25:	cwde   
  419f26:	ins    DWORD PTR es:[edi],dx
  419f27:	cmp    BYTE PTR [edi-0x308cc206],bl
  419f2d:	(bad)  
  419f2e:	cwde   
  419f2f:	mov    DWORD PTR [edi+0x26346302],eax
  419f35:	inc    esp
  419f36:	popf   
  419f37:	and    ah,dl
  419f39:	add    eax,DWORD PTR [esi]
  419f3b:	retf   
  419f3c:	ins    DWORD PTR es:[edi],dx
  419f3d:	inc    eax
  419f3e:	fbstp  TBYTE PTR [ebp-0xd42deee]
  419f44:	xchg   ah,ch
  419f46:	fnstcw WORD PTR [edx+edi*4+0x20]
  419f4a:	fs sub ch,cl
  419f4d:	rcl    DWORD PTR [esi+0x3494c728],cl
  419f53:	jno    0x419f5d
  419f55:	shl    BYTE PTR [ecx-0x743130fc],1
  419f5b:	mov    dl,0x69
  419f5d:	ficomp DWORD PTR [eax+0x4c]
  419f60:	push   eax
  419f61:	jmp    0xe9fa:0x5993cae3
  419f68:	pop    esi
  419f69:	and    esp,DWORD PTR [ecx-0x10]
  419f6c:	dec    edx
  419f6d:	inc    eax
  419f6e:	lods   al,BYTE PTR ds:[esi]
  419f6f:	xchg   esi,eax
  419f70:	ret    0xb2f6
  419f73:	lock adc bl,dh
  419f76:	stos   DWORD PTR es:[edi],eax
  419f77:	scas   eax,DWORD PTR es:[edi]
  419f78:	punpcklwd mm4,mm3
  419f7b:	js     0x419fcf
  419f7d:	add    eax,0xcd969442
  419f82:	xor    DWORD PTR [esi+0x3b0b669],esp
  419f88:	aaa    
  419f89:	aad    0x1a
  419f8b:	jns    0x419f9d
  419f8d:	outs   dx,DWORD PTR ds:[esi]
  419f8e:	push   edi
  419f8f:	sbb    al,0x86
  419f91:	test   al,0xf3
  419f93:	rol    BYTE PTR [esi+0x45],1
  419f96:	idiv   ebx
  419f98:	push   esp
  419f99:	pop    eax
  419f9a:	lods   eax,DWORD PTR ds:[esi]
  419f9b:	mov    bh,0x50
  419f9d:	ret    
  419f9e:	test   DWORD PTR [eax],ebx
  419fa0:	retf   
  419fa1:	js     0x419f8d
  419fa3:	shr    DWORD PTR [ebx-0x67],cl
  419fa6:	aas    
  419fa7:	repnz and eax,0x2cdbe836
  419fad:	scas   eax,DWORD PTR es:[edi]
  419fae:	in     al,dx
  419faf:	in     eax,dx
  419fb0:	mov    WORD PTR [esi+0xe5a95ca],ss
  419fb6:	push   esi
  419fb7:	or     edx,DWORD PTR [esi+0x7c]
  419fba:	inc    eax
  419fbb:	int3   
  419fbc:	sbb    cl,0x8d
  419fbf:	or     eax,0x59d5b99f
  419fc4:	adc    BYTE PTR [ecx-0x6769f374],ch
  419fca:	sub    bl,cl
  419fcc:	cmp    BYTE PTR [edi+0x38],bl
  419fcf:	bound  eax,QWORD PTR [esp+eax*2+0x17a11fba]
  419fd6:	xchg   esp,esp
  419fd8:	and    al,0x3e
  419fdb:	and    esi,DWORD PTR [ecx-0x74153eec]
  419fe1:	push   0x5b
  419fe3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fe4:	les    eax,FWORD PTR [ebp-0x611d1108]
  419fea:	nop
  419feb:	push   ds
  419fec:	lock fdiv QWORD PTR [esi+edi*2-0x1d]
  419ff1:	sahf   
  419ff2:	clc    
  419ff3:	pop    es
  419ff4:	pushf  
  419ff5:	cs mov ecx,ds
  419ff8:	mov    es,WORD PTR [ebx+ebx*2]
  419ffb:	mov    ebp,0x16933322
  41a000:	popa   
  41a001:	jb     0x41a058
  41a003:	fwait
  41a004:	push   eax
  41a005:	nop
  41a006:	dec    edi
  41a007:	push   cs
  41a008:	xchg   ebp,eax
  41a009:	dec    eax
  41a00a:	or     ah,BYTE PTR [edx+0x15]
  41a00d:	pop    edi
  41a00e:	cld    
  41a00f:	js     0x41a011
  41a011:	aas    
  41a012:	and    al,0xdf
  41a014:	mov    WORD PTR [ebx],ds
  41a016:	xchg   BYTE PTR [ebx+eax*2+0x5eeeebb8],bl
  41a01d:	and    eax,DWORD PTR [ebx-0x16]
  41a020:	sar    DWORD PTR [edi],1
  41a022:	stc    
  41a023:	mov    ?,WORD PTR [ebp-0x2b]
  41a026:	sub    BYTE PTR [ebx+0x23],al
  41a029:	dec    esp
  41a02a:	pop    es
  41a02b:	mov    eax,ds:0x964a19aa
  41a030:	repnz mov al,ds:0xfab41c1e
  41a036:	mov    dh,0x3f
  41a038:	lock aaa 
  41a03a:	pop    esi
  41a03b:	out    0xa0,al
  41a03d:	iret   
  41a03e:	(bad)  
  41a03f:	fistp  DWORD PTR [edx]
  41a041:	rcl    ch,cl
  41a043:	xchg   ecx,eax
  41a044:	dec    ebp
  41a045:	push   0xfffffffc
  41a047:	or     ebx,DWORD PTR [eax+edi*2-0x60e7ebbc]
  41a04e:	dec    eax
  41a04f:	loop   0x41a0bf
  41a051:	gs sbb ebx,0x39
  41a055:	and    bl,BYTE PTR [ecx-0x6a96fa87]
  41a05b:	loopne 0x41a049
  41a05d:	in     eax,0x2c
  41a05f:	fdivr  DWORD PTR [ebx-0x3deff871]
  41a065:	mov    eax,0x9a2cd3f1
  41a06a:	scas   eax,DWORD PTR es:[edi]
  41a06b:	cmp    ah,al
  41a06d:	je     0x41a0b0
  41a06f:	(bad)  
  41a070:	mov    edx,0x8e39be9c
  41a075:	pop    ss
  41a076:	loopne 0x41a096
  41a078:	out    dx,al
  41a079:	add    eax,0x4e065815
  41a07e:	pop    ss
  41a07f:	cdq    
  41a080:	ins    DWORD PTR es:[edi],dx
  41a081:	lea    esi,[edx-0x50]
  41a084:	mov    ?,edi
  41a086:	ret    0x210
  41a089:	sub    eax,0x5c2b5166
  41a08e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a08f:	xchg   esp,esi
  41a091:	sahf   
  41a092:	ss xchg edi,eax
  41a094:	mov    ch,0xf4
  41a096:	cli    
  41a097:	shr    BYTE PTR [edx-0x3c],1
  41a09a:	sbb    esp,edi
  41a09c:	and    cl,BYTE PTR [edi+0x4e]
  41a09f:	adc    al,0x1c
  41a0a1:	pop    ebp
  41a0a2:	sti    
  41a0a3:	fild   DWORD PTR [ecx-0x30]
  41a0a6:	dec    edx
  41a0a7:	jg     0x41a0f7
  41a0a9:	dec    edi
  41a0aa:	ret    0x809e
  41a0ad:	shr    DWORD PTR [edx+0x75],cl
  41a0b0:	ror    BYTE PTR [edx+ebp*1-0x7d],0xc
  41a0b5:	jno    0x41a0fd
  41a0b7:	cmp    BYTE PTR [edx+0x41d69edb],dh
  41a0bd:	aam    0x60
  41a0bf:	hlt    
  41a0c0:	pop    ss
  41a0c1:	retf   0x3825
  41a0c4:	clc    
  41a0c5:	sub    ah,ch
  41a0c7:	pop    edx
  41a0c8:	imul   esp,esi,0xffffffd8
  41a0cb:	(bad)  
  41a0cc:	pop    eax
  41a0cd:	rcr    ebx,1
  41a0cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0d0:	popa   
  41a0d1:	push   cs
  41a0d2:	jae    0x41a13f
  41a0d4:	push   es
  41a0d5:	mov    ebx,0xce5d7e14
  41a0da:	mov    ebx,eax
  41a0dc:	out    0x89,eax
  41a0de:	add    ch,ah
  41a0e0:	sub    bl,BYTE PTR [edx+esi*8+0x7f39d53d]
  41a0e7:	adc    DWORD PTR [edi-0x479f21],esp
  41a0ed:	pushf  
  41a0ee:	mov    bh,0xbc
  41a0f0:	std    
  41a0f1:	iret   
  41a0f2:	sbb    eax,0xc7195f03
  41a0f7:	add    DWORD PTR [ecx+ebp*2-0x3],edx
  41a0fb:	icebp  
  41a0fc:	lahf   
  41a0fd:	or     eax,0xa4787016
  41a102:	inc    eax
  41a103:	inc    edx
  41a104:	sbb    BYTE PTR [ebx+0x480074c5],dl
  41a10a:	dec    edi
  41a10b:	(bad)  
  41a10c:	cmp    esi,edx
  41a10e:	push   edi
  41a10f:	pop    ds
  41a110:	or     ah,BYTE PTR [edi+ecx*8-0x4a]
  41a114:	or     eax,0x38586e39
  41a119:	not    esi
  41a11b:	push   ebx
  41a11c:	xchg   ebp,eax
  41a11d:	sbb    eax,0xf9a2ca3e
  41a122:	stos   BYTE PTR es:[edi],al
  41a123:	mov    ebp,0x5ddf126f
  41a128:	das    
  41a129:	sbb    eax,0xfe6c79d
  41a12e:	push   ecx
  41a130:	cld    
  41a131:	pop    ss
  41a132:	sub    BYTE PTR [ebx],dl
  41a134:	rcl    BYTE PTR [esi],cl
  41a136:	pop    ds
  41a137:	sub    al,0xd3
  41a139:	xchg   DWORD PTR [ecx-0x65],eax
  41a13c:	cmp    ah,ah
  41a13e:	repz test DWORD PTR [esi],edx
  41a141:	xchg   ebx,eax
  41a142:	aam    0x48
  41a144:	adc    eax,eax
  41a146:	jo     0x41a0e4
  41a148:	aam    0x8c
  41a14a:	and    al,BYTE PTR [esi+0x2e6ef327]
  41a150:	adc    eax,0x34ebca52
  41a155:	je     0x41a10f
  41a157:	sub    ch,BYTE PTR [ebp-0x5ca2c283]
  41a15d:	add    al,0xc5
  41a160:	popa   
  41a161:	push   cs
  41a162:	shl    edi,1
  41a164:	das    
  41a165:	(bad)  
  41a166:	xchg   edx,eax
  41a167:	xchg   esi,eax
  41a168:	xor    bh,dh
  41a16a:	out    dx,eax
  41a16b:	cdq    
  41a16c:	sbb    BYTE PTR [ebp+0x5d741014],bh
  41a172:	mov    esp,0xc62f13fb
  41a177:	cmp    esi,edx
  41a179:	(bad)  
  41a17a:	sub    BYTE PTR [ebp+0x68bbed0a],bl
  41a180:	cmp    al,BYTE PTR [edx+0x21fedec8]
  41a186:	mov    edi,esi
  41a188:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a189:	adc    BYTE PTR [eax+esi*2],cl
  41a18c:	in     eax,dx
  41a18d:	rcl    DWORD PTR [eax+0x20],cl
  41a190:	jl     0x41a15c
  41a192:	cs sbb al,0xc
  41a195:	xchg   ecx,eax
  41a196:	jno    0x41a11f
  41a198:	lahf   
  41a199:	mov    ds:0x69f1d063,eax
  41a19e:	xchg   esp,eax
  41a19f:	popf   
  41a1a0:	je     0x41a143
  41a1a2:	imul   ebx,DWORD PTR [edx-0x23],0x70d53275
  41a1a9:	mov    esp,0x94c06b39
  41a1ae:	dec    edi
  41a1af:	(bad)  
  41a1b0:	in     eax,0xcd
  41a1b2:	adc    ah,ch
  41a1b4:	pop    esi
  41a1b5:	mov    ah,0x18
  41a1b7:	into   
  41a1b8:	test   BYTE PTR [ebx+0x475f8035],0xd9
  41a1bf:	int    0x6f
  41a1c1:	xor    DWORD PTR [ecx+ebp*4-0x2041bd19],ecx
  41a1c8:	jnp    0x41a22c
  41a1ca:	adc    dl,BYTE PTR [eax+0x7b]
  41a1cd:	push   eax
  41a1ce:	ja     0x41a1f3
  41a1d0:	and    eax,0x3274ece0
  41a1d5:	(bad)  
  41a1d7:	push   esi
  41a1d8:	and    DWORD PTR [edx],ebp
  41a1da:	ss push ss
  41a1dc:	ds pop esp
  41a1de:	sbb    eax,0x67e7a98e
  41a1e3:	hlt    
  41a1e4:	add    eax,DWORD PTR [edi-0x66]
  41a1e7:	aaa    
  41a1e8:	in     al,0xfd
  41a1ea:	dec    edi
  41a1eb:	dec    ebp
  41a1ec:	lahf   
  41a1ed:	(bad)  
  41a1ee:	repz jns 0x41a191
  41a1f1:	lods   al,BYTE PTR ds:[esi]
  41a1f2:	test   al,0xf4
  41a1f4:	and    al,0x53
  41a1f6:	nop
  41a1f7:	jne    0x41a26b
  41a1f9:	push   esi
  41a1fa:	cmp    al,0xe9
  41a1fc:	mov    esp,0x5627d7c9
  41a201:	out    0xd,eax
  41a203:	add    eax,0xea5c9753
  41a208:	out    dx,eax
  41a209:	shl    DWORD PTR [ebx],cl
  41a20b:	in     eax,0x25
  41a20d:	and    BYTE PTR [edx+0x787ba146],0x2e
  41a214:	pop    ds
  41a215:	or     ch,BYTE PTR [edx-0x45]
  41a218:	xchg   ebp,eax
  41a219:	or     DWORD PTR [eax],ecx
  41a21b:	js     0x41a1c4
  41a21d:	jmp    0x41a29a
  41a21f:	aaa    
  41a220:	inc    eax
  41a221:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a222:	push   0xffffffa1
  41a224:	fisubr DWORD PTR [ebx-0x4a7d5513]
  41a22a:	sbb    bh,BYTE PTR [ecx-0x4f]
  41a22d:	xchg   esi,eax
  41a22e:	not    ebp
  41a230:	(bad)  
  41a231:	pusha  
  41a232:	dec    edi
  41a233:	xor    al,0x2a
  41a235:	dec    edi
  41a236:	pop    edi
  41a237:	div    BYTE PTR [ebx+ebp*2]
  41a23a:	push   ecx
  41a23b:	(bad)  
  41a23c:	pop    ds
  41a23d:	pop    ecx
  41a23e:	(bad)  
  41a23f:	jle    0x41a1c2
  41a241:	out    dx,al
  41a242:	jae    0x41a1e0
  41a244:	ror    BYTE PTR [esi+eiz*4+0x3287ed3f],cl
  41a24b:	sub    DWORD PTR [ecx],ebp
  41a24d:	sbb    cl,BYTE PTR [ebp+0x73563618]
  41a253:	sbb    bh,0x1
  41a256:	mov    cl,0x7
  41a258:	repnz sub eax,esi
  41a25b:	rol    DWORD PTR [esi],cl
  41a25d:	inc    edi
  41a25e:	ins    DWORD PTR es:[edi],dx
  41a25f:	adc    BYTE PTR [ecx-0x5f19bf8f],ah
  41a265:	aad    0x47
  41a267:	sahf   
  41a268:	lods   al,BYTE PTR ds:[esi]
  41a269:	stos   DWORD PTR es:[edi],eax
  41a26a:	add    al,0x45
  41a26c:	and    DWORD PTR [esi],eax
  41a26e:	iret   
  41a26f:	and    BYTE PTR [edi],0xd9
  41a272:	das    
  41a273:	into   
  41a274:	mov    dh,0xb9
  41a276:	test   BYTE PTR [ecx],0xe1
  41a279:	outs   dx,BYTE PTR ds:[esi]
  41a27a:	jo     0x41a257
  41a27c:	repz mov ds:0xea6d785f,eax
  41a282:	in     al,dx
  41a283:	jge    0x41a2e8
  41a285:	or     bl,BYTE PTR [edi+edi*2]
  41a288:	adc    esi,edx
  41a28a:	push   ds
  41a28b:	fstp   TBYTE PTR [esi+0x7e]
  41a28e:	div    DWORD PTR [edx+0x2988714d]
  41a294:	call   0x9a77:0x32ef8b44
  41a29b:	pop    ds
  41a29c:	or     DWORD PTR [eax+0x2b6e24b3],eax
  41a2a2:	cld    
  41a2a3:	push   edx
  41a2a4:	(bad)  
  41a2a5:	sbb    DWORD PTR [edx+0xc03e365],ebp
  41a2ab:	loop   0x41a300
  41a2ad:	jne    0x41a288
  41a2af:	sbb    ah,BYTE PTR [ecx-0x5]
  41a2b2:	lahf   
  41a2b3:	pop    ebx
  41a2b4:	mov    DWORD PTR [ebp+0x5f],esi
  41a2b7:	sar    BYTE PTR [ecx-0x63],cl
  41a2ba:	out    0xcf,eax
  41a2bc:	jg     0x41a28f
  41a2be:	inc    eax
  41a2bf:	xor    BYTE PTR [ebp-0x2d],bl
  41a2c2:	call   FWORD PTR [ebx-0x4d]
  41a2c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2c6:	dec    edi
  41a2c7:	mov    ecx,0xba041019
  41a2cc:	fisttp QWORD PTR [esi+edx*4]
  41a2cf:	xor    DWORD PTR [edx+edi*2],ecx
  41a2d2:	(bad)  [edx+0x6c841fac]
  41a2d8:	and    BYTE PTR [edx+esi*2-0x11],bl
  41a2dc:	mov    dh,0x96
  41a2de:	int3   
  41a2df:	loop   0x41a28a
  41a2e1:	xchg   BYTE PTR [ecx+0x452e939b],ah
  41a2e7:	popf   
  41a2e8:	jmp    0x4f4d:0xc1dca01b
  41a2ef:	pop    ecx
  41a2f0:	mov    al,ds:0x55e88198
  41a2f5:	mov    bh,0xc1
  41a2f7:	and    eax,0x207955d3
  41a2fc:	sub    DWORD PTR [esi],edi
  41a2fe:	jmp    0x2360:0x20b0ee71
  41a305:	ror    edx,0xf4
  41a308:	inc    ebx
  41a309:	pop    ebx
  41a30a:	jmp    0x3f11:0xb5348451
  41a311:	mov    al,ds:0x2843f762
  41a316:	xchg   esp,eax
  41a317:	ror    DWORD PTR [esp+eiz*8+0x4b],1
  41a31b:	fimul  WORD PTR [edi+eax*4]
  41a31e:	sub    al,BYTE PTR [edi+0x49]
  41a321:	dec    eax
  41a322:	bswap  eax
  41a324:	jmp    0xf314:0xea01574
  41a32b:	jb     0x41a38d
  41a32d:	sahf   
  41a32e:	add    ecx,esp
  41a330:	out    0xe3,eax
  41a332:	inc    eax
  41a333:	push   esi
  41a334:	addr16 push es
  41a336:	enter  0x3438,0xd0
  41a33a:	push   cs
  41a33b:	addr16 int3 
  41a33d:	sub    eax,0x704c963c
  41a342:	mov    BYTE PTR [edi],cl
  41a344:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a345:	repnz enter 0x86fa,0xe4
  41a34a:	data16 ss fwait
  41a34d:	xchg   BYTE PTR [edx],cl
  41a34f:	pop    ebx
  41a350:	lods   al,BYTE PTR ds:[esi]
  41a351:	je     0x41a32a
  41a353:	aas    
  41a354:	add    bl,BYTE PTR [esi-0x492b21cc]
  41a35a:	sbb    DWORD PTR [eax+0xa6cc4a5],0x612556af
  41a364:	and    al,0xcf
  41a366:	jge    0x41a3de
  41a368:	ins    BYTE PTR es:[edi],dx
  41a369:	in     al,0x6b
  41a36b:	fwait
  41a36c:	and    ebp,DWORD PTR [ebp+eiz*1-0x15b3084]
  41a373:	into   
  41a374:	mov    ebx,0x9db00148
  41a379:	pushf  
  41a37a:	inc    edi
  41a37b:	fsub   DWORD PTR [eax-0x5d]
  41a37e:	or     BYTE PTR [ecx],0xb7
  41a381:	enter  0x234d,0xf2
  41a385:	sahf   
  41a386:	int    0x5a
  41a388:	jbe    0x41a3db
  41a38a:	cmp    eax,0xf0749f1a
  41a38f:	test   al,0xa2
  41a391:	mov    ebx,0xaf0f662c
  41a396:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a397:	(bad)  
  41a399:	xchg   ebx,eax
  41a39a:	xchg   esp,eax
  41a39b:	mov    es,eax
  41a39d:	popf   
  41a39e:	jae    0x41a361
  41a3a0:	or     al,0x52
  41a3a2:	jno    0x41a337
  41a3a4:	in     al,dx
  41a3a5:	jo     0x41a386
  41a3a7:	rdpmc  
  41a3a9:	mov    esp,0x4a64e8bf
  41a3ae:	sbb    al,ch
  41a3b0:	mov    eax,0x8b4a7498
  41a3b5:	jecxz  0x41a380
  41a3b7:	(bad)  [esi+0x2b63e96]
  41a3bd:	jl     0x41a38a
  41a3bf:	cmp    al,0xb5
  41a3c1:	ds mov bl,0xd0
  41a3c4:	xor    esp,DWORD PTR [ebp+0x74]
  41a3c7:	in     al,dx
  41a3c8:	dec    esp
  41a3c9:	xlat   BYTE PTR ds:[ebx]
  41a3ca:	jecxz  0x41a407
  41a3cc:	mov    ah,0x9c
  41a3ce:	jns    0x41a419
  41a3d0:	jle    0x41a38a
  41a3d2:	sbb    edi,DWORD PTR [eax+ebx*1]
  41a3d5:	fistp  QWORD PTR [esi-0x1b]
  41a3d8:	shl    DWORD PTR [eax-0x29],1
  41a3db:	jnp    0x41a366
  41a3dd:	xchg   edi,eax
  41a3de:	aaa    
  41a3df:	in     eax,dx
  41a3e0:	inc    ecx
  41a3e1:	or     cl,dl
  41a3e3:	sbb    BYTE PTR [eax+0x50],0xc0
  41a3e7:	(bad)  
  41a3e8:	pushf  
  41a3e9:	imul   eax,DWORD PTR [ebx],0xd0141ce4
  41a3ef:	arpl   cx,cx
  41a3f1:	pusha  
  41a3f2:	dec    esp
  41a3f3:	mov    al,ds:0x1eaab971
  41a3f8:	pusha  
  41a3f9:	sub    edi,DWORD PTR [esi-0x4a]
  41a3fc:	mov    ah,0xf1
  41a3fe:	push   cs
  41a3ff:	dec    eax
  41a400:	outs   dx,DWORD PTR ds:[esi]
  41a401:	sub    cl,BYTE PTR [ebx+0x7d447be4]
  41a407:	dec    esi
  41a408:	push   ss
  41a409:	mov    ch,0xd0
  41a40b:	push   0x3a
  41a40d:	dec    ebx
  41a40e:	ins    BYTE PTR es:[edi],dx
  41a40f:	into   
  41a410:	and    esp,ebp
  41a412:	fist   DWORD PTR [edi]
  41a414:	pop    eax
  41a415:	ins    DWORD PTR es:[edi],dx
  41a416:	pop    ds
  41a417:	sub    eax,0xc3d31782
  41a41c:	in     al,dx
  41a41d:	xchg   esp,eax
  41a41e:	mov    ebp,0x8a5b86ef
  41a423:	push   0xffffffa6
  41a425:	ss das 
  41a427:	sub    edx,DWORD PTR [esi+0x5e]
  41a42a:	pushf  
  41a42b:	jmp    0x512d195b
  41a430:	ins    BYTE PTR es:[edi],dx
  41a431:	mov    edx,0x855a1bef
  41a436:	mov    ds:0x8fbea840,al
  41a43b:	shl    DWORD PTR es:[edx],1
  41a43e:	arpl   WORD PTR [ecx-0x27],cx
  41a441:	mov    cl,0xdc
  41a443:	adc    al,0x84
  41a445:	xor    ah,BYTE PTR [edx+0x7febd439]
  41a44b:	clc    
  41a44c:	ret    
  41a44d:	add    al,cl
  41a44f:	lock adc BYTE PTR [edi+0x7970c5bb],0x92
  41a457:	(bad)  
  41a458:	loopne 0x41a469
  41a45a:	sti    
  41a45b:	das    
  41a45c:	adc    al,BYTE PTR [eax]
  41a45e:	cmp    DWORD PTR [edx+0x63379152],0xfffffff7
  41a465:	rcl    DWORD PTR [edi+0x4b],cl
  41a468:	or     DWORD PTR [edx-0x32009459],ebp
  41a46e:	sbb    eax,0xf82acb2a
  41a473:	jnp    0x41a453
  41a475:	daa    
  41a476:	dec    ebp
  41a477:	pushf  
  41a478:	adc    DWORD PTR [edx],eax
  41a47a:	cdq    
  41a47b:	(bad)  
  41a47c:	call   0xf28e:0xf14ff280
  41a483:	es push 0x3a
  41a486:	jnp    0x41a4fe
  41a488:	inc    eax
  41a489:	inc    ecx
  41a48a:	aas    
  41a48b:	xor    eax,0xde487705
  41a490:	call   0x78bf:0xd09e2c63
  41a497:	jmp    0x41a445
  41a499:	mov    dl,0xe5
  41a49b:	in     al,0x7
  41a49d:	cmp    DWORD PTR [eax],ecx
  41a49f:	mov    esi,0x9aa91fe8
  41a4a4:	dec    ecx
  41a4a5:	cli    
  41a4a6:	cmp    eax,0xc3662493
  41a4ab:	dec    BYTE PTR [ecx+0x5b]
  41a4ae:	add    edi,DWORD PTR [eax-0x43]
  41a4b1:	imul   esp,DWORD PTR es:[ecx],0x2f
  41a4b5:	jecxz  0x41a4b2
  41a4b7:	pop    ecx
  41a4b8:	jnp    0x41a4c1
  41a4ba:	retf   
  41a4bb:	popf   
  41a4bc:	jmp    0x41a444
  41a4be:	mov    ebx,0x84e8688d
  41a4c3:	mov    esi,DWORD PTR [ebp+0x3484288]
  41a4c9:	lock xchg ebx,eax
  41a4cb:	stc    
  41a4cc:	add    edi,DWORD PTR [ebx-0x3b221e54]
  41a4d2:	cmp    DWORD PTR [ebx-0x63],esi
  41a4d5:	pop    edi
  41a4d6:	aaa    
  41a4d7:	or     edx,edi
  41a4d9:	cmp    BYTE PTR [eax-0x78e2d73],0xb9
  41a4e0:	jmp    0x63ebb3c7
  41a4e5:	jecxz  0x41a49f
  41a4e7:	mov    ?,esi
  41a4e9:	shl    DWORD PTR [esi+0x2a71542d],1
  41a4ef:	sar    BYTE PTR [ebp+ebp*2-0x71],cl
  41a4f3:	jae    0x41a553
  41a4f5:	jae    0x41a508
  41a4f7:	aad    0xa6
  41a4f9:	sub    BYTE PTR [ebx],ah
  41a4fb:	xor    al,BYTE PTR [ebx+edx*2]
  41a4fe:	lds    eax,FWORD PTR [ecx+edi*4]
  41a501:	in     eax,0x5e
  41a503:	jbe    0x41a49b
  41a505:	cwde   
  41a506:	icebp  
  41a507:	add    ebp,ebp
  41a509:	push   esp
  41a50a:	jbe    0x41a4b6
  41a50c:	push   cs
  41a50d:	mov    WORD PTR [ebp+esi*1+0x7741f8da],ss
  41a514:	imul   ecx,ebx,0x17
  41a517:	(bad)  
  41a518:	mov    al,ds:0x9ec877d6
  41a51d:	test   al,0xfb
  41a51f:	sbb    DWORD PTR [ebp+0x262be034],esp
  41a525:	push   es
  41a526:	dec    ebp
  41a527:	adc    DWORD PTR [ecx-0x1b],ebp
  41a52a:	ror    DWORD PTR [ebx+0x92cdb16],0x69
  41a531:	xor    dh,al
  41a533:	(bad)  
  41a534:	ins    BYTE PTR es:[edi],dx
  41a535:	mov    ecx,0xc9c22bd7
  41a53a:	and    BYTE PTR [esi+0x41],dh
  41a53d:	and    ecx,DWORD PTR [ebx]
  41a53f:	das    
  41a540:	sbb    dh,BYTE PTR [ebp-0x41]
  41a543:	sar    DWORD PTR [edi-0x106dc71c],cl
  41a549:	(bad)  
  41a54a:	sbb    ebp,DWORD PTR [ecx+0xc474783]
  41a550:	fisub  WORD PTR [edx]
  41a552:	cmp    dl,ch
  41a554:	ret    0x15a7
  41a557:	pop    edx
  41a558:	mov    eax,ds:0xc44929d8
  41a55d:	push   edx
  41a55e:	pushf  
  41a55f:	adc    BYTE PTR [ecx-0x7d86ffb6],ah
  41a565:	jmp    0x41a5d0
  41a567:	int3   
  41a568:	test   DWORD PTR [ebp+0x7d],edx
  41a56b:	dec    esp
  41a56c:	mov    edi,0xb822d829
  41a571:	ins    BYTE PTR es:[edi],dx
  41a572:	jbe    0x41a596
  41a574:	add    cl,ch
  41a576:	ss jbe 0x41a556
  41a579:	cs jge 0x41a545
  41a57c:	pushf  
  41a57d:	xor    BYTE PTR [edi+0x52166c34],bh
  41a583:	out    0xf7,al
  41a585:	adc    bh,bl
  41a587:	cmp    al,BYTE PTR [ecx-0x16]
  41a58a:	xor    al,0xf6
  41a58c:	pop    esi
  41a58d:	jecxz  0x41a515
  41a58f:	sub    DWORD PTR [esp+ebp*1],0x5b0869c6
  41a596:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a597:	pop    ds
  41a598:	ficomp WORD PTR ds:0xc748f33f
  41a59e:	sbb    BYTE PTR [eax],ch
  41a5a0:	and    DWORD PTR [ebp-0x64],ebp
  41a5a3:	mov    edi,0x6cef345c
  41a5a8:	retf   0x70b
  41a5ab:	(bad)  
  41a5ac:	clc    
  41a5ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5ae:	test   BYTE PTR ds:0xc39826f6,ch
  41a5b4:	imul   ebp,DWORD PTR [edi],0xf6b37dd9
  41a5ba:	mov    edx,0x168a863a
  41a5bf:	mov    bl,bl
  41a5c1:	inc    esp
  41a5c2:	loop   0x41a61a
  41a5c4:	mov    dl,0xce
  41a5c6:	(bad)  
  41a5c7:	and    cl,cl
  41a5c9:	int3   
  41a5ca:	fninit 
  41a5cc:	and    BYTE PTR [edi-0xf6f6a85],dl
  41a5d2:	sub    DWORD PTR [esi+0x3d],ecx
  41a5d5:	pop    ebp
  41a5d6:	or     BYTE PTR [esi-0x685310a6],dh
  41a5dc:	push   ebp
  41a5dd:	out    0x86,eax
  41a5df:	push   edi
  41a5e0:	cwde   
  41a5e1:	out    0x93,eax
  41a5e3:	jmp    0x6d57:0x170fe1ae
  41a5ea:	xchg   BYTE PTR [ecx+edi*1],bl
  41a5ed:	sub    ebx,DWORD PTR [eax]
  41a5ef:	xor    bh,BYTE PTR [edi+0x66]
  41a5f2:	loop   0x41a606
  41a5f4:	add    al,0x42
  41a5f6:	mov    ds:0xade10302,eax
  41a5fb:	addr16 cmp esp,edi
  41a5fe:	(bad)  
  41a5ff:	xchg   edi,eax
  41a600:	or     BYTE PTR ds:0xdd06f5f6,dl
  41a606:	in     al,dx
  41a607:	mov    BYTE PTR [ecx+0x5a],al
  41a60a:	cmc    
  41a60b:	xchg   ebx,eax
  41a60c:	push   es
  41a60d:	push   eax
  41a60e:	pusha  
  41a60f:	sub    DWORD PTR [ecx],ecx
  41a611:	sbb    al,0x33
  41a613:	pop    es
  41a614:	mov    eax,0x68c3ff4a
  41a619:	cmp    DWORD PTR [edi+0x68],esp
  41a61c:	ret    
  41a61d:	cwde   
  41a61e:	lock push eax
  41a620:	mov    BYTE PTR [esi-0x2],al
  41a623:	loopne 0x41a5f2
  41a625:	mov    ebx,0xa937a3e
  41a62a:	sbb    cl,cl
  41a62c:	and    BYTE PTR [ebx+0x3d],ah
  41a62f:	mov    DWORD PTR [edx],esp
  41a631:	stos   BYTE PTR es:[edi],al
  41a632:	add    BYTE PTR [eax],bl
  41a634:	cld    
  41a635:	in     eax,0xc8
  41a637:	fcomp  st(4)
  41a639:	in     eax,dx
  41a63a:	outs   dx,DWORD PTR ss:[esi]
  41a63c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a63d:	aad    0x6e
  41a63f:	jmp    DWORD PTR [edi]
  41a641:	in     eax,0x73
  41a643:	or     DWORD PTR [ebp+0x56],esi
  41a646:	dec    eax
  41a647:	mov    ch,0x37
  41a649:	mov    bh,0xb9
  41a64b:	push   edi
  41a64c:	das    
  41a64d:	aas    
  41a64e:	rol    BYTE PTR [edi+0xc],cl
  41a651:	mov    esp,0xd2deeb86
  41a656:	sbb    bl,ah
  41a658:	jae    0x41a61a
  41a65a:	and    esp,DWORD PTR [ebp+0x21]
  41a65d:	sbb    al,0x9b
  41a65f:	xchg   ebx,eax
  41a660:	mov    ebx,0x6a4bb51
  41a665:	push   ss
  41a666:	jg     0x41a6e0
  41a668:	adc    dh,ah
  41a66a:	lods   al,BYTE PTR ds:[esi]
  41a66b:	sahf   
  41a66c:	jmp    0xa25f7ce8
  41a671:	jge    0x41a6a4
  41a673:	hlt    
  41a674:	sti    
  41a675:	pop    es
  41a676:	(bad)  
  41a677:	mov    ?,WORD PTR [esi+ebx*2+0xae31ef7]
  41a67e:	(bad)  
  41a67f:	mov    ebx,0x72320b72
  41a684:	addr16 jmp 0x41a685
  41a687:	or     dl,BYTE PTR [ebx-0x3f]
  41a68a:	or     edx,ebx
  41a68c:	jecxz  0x41a6b2
  41a68e:	and    eax,0x909d380c
  41a693:	js     0x41a677
  41a695:	mov    edx,0x190ce382
  41a69a:	dec    edi
  41a69b:	lahf   
  41a69c:	fisubr WORD PTR fs:[ecx]
  41a69f:	ins    DWORD PTR es:[edi],dx
  41a6a0:	cmp    BYTE PTR [esp+esi*4+0x2d31d0d3],bl
  41a6a7:	xor    eax,0xdeff2de6
  41a6ac:	jmp    0x284660a5
  41a6b1:	jo     0x41a6c7
  41a6b3:	nop
  41a6b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6b5:	ja     0x41a63d
  41a6b7:	xor    eax,0x76441dae
  41a6bc:	jnp    0x41a727
  41a6be:	fsubr  QWORD PTR [edx+0x47302626]
  41a6c4:	cld    
  41a6c5:	push   0x82c89e36
  41a6ca:	cmp    edx,esi
  41a6cc:	xchg   edx,eax
  41a6cd:	pop    ebx
  41a6ce:	pop    ebp
  41a6cf:	push   ebx
  41a6d0:	mov    ds:0xcda9380a,al
  41a6d5:	xor    al,0x76
  41a6d7:	mov    al,ds:0xd78acf9d
  41a6dc:	adc    eax,0x7f75f012
  41a6e1:	dec    ecx
  41a6e2:	add    BYTE PTR [edx-0x1a],0xf2
  41a6e6:	rol    DWORD PTR [esi-0x2e],1
  41a6e9:	ds or  eax,0xc2dbdb3d
  41a6ef:	stos   BYTE PTR es:[edi],al
  41a6f0:	cmc    
  41a6f1:	fmul   QWORD PTR [edi-0x78]
  41a6f4:	pusha  
  41a6f5:	pop    eax
  41a6f6:	jae    0x41a76e
  41a6f8:	fcomp  DWORD PTR [esi+0x44]
  41a6fb:	xchg   edi,eax
  41a6fc:	gs jmp 0x41a769
  41a6ff:	sahf   
  41a700:	out    dx,al
  41a701:	adc    al,0x4
  41a703:	gs ret 0x5261
  41a707:	ret    0xb772
  41a70a:	cs cli 
  41a70c:	in     eax,0x7d
  41a70e:	push   edi
  41a70f:	sbb    BYTE PTR [ecx-0x19baa078],cl
  41a715:	or     DWORD PTR [ebp+ecx*2-0x37],edi
  41a719:	dec    dh
  41a71b:	popf   
  41a71c:	gs in  eax,0x30
  41a71f:	iret   
  41a720:	push   ebx
  41a721:	dec    ebx
  41a722:	aas    
  41a723:	and    edi,ebp
  41a725:	push   edi
  41a726:	test   al,0x52
  41a728:	mov    ch,dh
  41a72a:	stos   DWORD PTR es:[edi],eax
  41a72b:	mov    esi,DWORD PTR [ebp+0x7a]
  41a72e:	push   0x6e
  41a730:	ret    
  41a731:	loop   0x41a6e1
  41a733:	cmp    cl,BYTE PTR [ebx]
  41a735:	pop    ss
  41a736:	fst    DWORD PTR [edx-0x720ee4b2]
  41a73c:	sbb    edi,eax
  41a73e:	mov    eax,0xa577225a
  41a743:	mov    eax,ds:0xb96625ee
  41a748:	xchg   DWORD PTR [ecx],ecx
  41a74a:	aam    0x74
  41a74c:	fidiv  WORD PTR [ebx]
  41a74e:	scas   eax,DWORD PTR es:[edi]
  41a74f:	push   ebx
  41a750:	test   al,0x4f
  41a752:	call   0x7b96:0x7a0406c0
  41a759:	ins    BYTE PTR es:[edi],dx
  41a75a:	fst    QWORD PTR [esi-0x40634258]
  41a760:	sub    eax,0x2772f40a
  41a765:	icebp  
  41a766:	imul   esi,ebx,0x1
  41a769:	jecxz  0x41a746
  41a76b:	aam    0x45
  41a76d:	enter  0x3981,0x1a
  41a771:	or     DWORD PTR [edx+eiz*4-0x4786efbe],ecx
  41a778:	fld    DWORD PTR [ebx]
  41a77a:	xchg   ebx,eax
  41a77b:	lds    ebx,FWORD PTR [ecx+0x5b4f0f3d]
  41a781:	ret    0x2998
  41a784:	mov    cl,0x38
  41a786:	add    BYTE PTR [esi-0x50],dl
  41a789:	sahf   
  41a78a:	jne    0x41a7ab
  41a78c:	mov    ds:0xf7141e88,al
  41a791:	or     ebx,esp
  41a793:	das    
  41a794:	xchg   esp,eax
  41a795:	push   ebp
  41a796:	dec    ebx
  41a797:	dec    ebx
  41a798:	push   es
  41a799:	jge    0x41a7b9
  41a79b:	call   0xea0f99ee
  41a7a0:	or     ch,BYTE PTR [ebp-0x25240c9a]
  41a7a6:	dec    esi
  41a7a7:	add    al,0x92
  41a7a9:	icebp  
  41a7aa:	jnp    0x41a7fa
  41a7ac:	das    
  41a7ad:	fcomip st,st(3)
  41a7af:	and    ebp,0xffffffa5
  41a7b2:	fcomp  QWORD PTR [edx+0x51]
  41a7b5:	je     0x41a7b6
  41a7b7:	sub    eax,ebp
  41a7b9:	in     al,dx
  41a7ba:	addr16 sub al,0xb2
  41a7bd:	xor    ebp,edx
  41a7bf:	cmp    edi,esp
  41a7c1:	cmp    bh,cl
  41a7c3:	ret    
  41a7c4:	sbb    eax,0xcf2343e4
  41a7c9:	jo     0x41a78f
  41a7cb:	cs call 0x2b04:0x5d0a63be
  41a7d3:	daa    
  41a7d4:	lea    eax,[ecx-0x3d5b413]
  41a7da:	mov    ebx,0xd00ebb28
  41a7df:	cmp    edx,DWORD PTR [eax-0x7b]
  41a7e2:	mov    ds:0x52ea3a52,eax
  41a7e7:	fsubr  QWORD PTR [ecx+0x5b]
  41a7ea:	loopne 0x41a798
  41a7ec:	xor    al,cl
  41a7ee:	inc    edx
  41a7ef:	and    bh,cl
  41a7f1:	mov    esp,0x87462ee6
  41a7f6:	std    
  41a7f7:	mov    ebp,0xccd5d3ab
  41a7fc:	leave  
  41a7fd:	inc    edi
  41a7fe:	call   0xb769053
  41a803:	icebp  
  41a804:	add    esp,DWORD PTR [edx]
  41a806:	(bad)  
  41a807:	or     edx,DWORD PTR [edi+0x30b91c4a]
  41a80d:	ret    
  41a80e:	jmp    0xaa17c599
  41a813:	sbb    eax,0x7e757986
  41a818:	cmp    al,0xb0
  41a81a:	call   0x903a9c5a
  41a81f:	add    cl,BYTE PTR [edx-0x51]
  41a822:	inc    ebp
  41a823:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a824:	hlt    
  41a825:	mov    ebp,0x87e0c0af
  41a82a:	rcr    DWORD PTR [eax+eiz*4+0x59],1
  41a82e:	sbb    bl,dl
  41a830:	xchg   DWORD PTR [eax+0x75],eax
  41a833:	and    esp,ecx
  41a835:	pusha  
  41a836:	call   DWORD PTR [edi-0x17]
  41a839:	push   esp
  41a83a:	retf   0xce13
  41a83d:	leave  
  41a83e:	mov    cl,0x19
  41a840:	xor    DWORD PTR [esi-0x70ab3c10],ebp
  41a846:	call   0x423c:0xf012f744
  41a84d:	xchg   DWORD PTR [esi+0x1b],esp
  41a850:	lods   al,BYTE PTR ds:[esi]
  41a851:	inc    edi
  41a852:	jecxz  0x41a8cc
  41a854:	mov    DWORD PTR [ebp-0x695fc602],esp
  41a85a:	mov    dl,BYTE PTR cs:0x9cbe571a
  41a861:	(bad)  [esi+0x2f7050a8]
  41a867:	pusha  
  41a868:	cdq    
  41a869:	jmp    0xfac6:0x54c811cb
  41a870:	or     eax,0x73ba2b16
  41a875:	test   eax,0x8ef0134
  41a87a:	out    dx,al
  41a87b:	ins    DWORD PTR es:[edi],dx
  41a87c:	pushf  
  41a87d:	pop    ebp
  41a87e:	inc    DWORD PTR cs:[eax+edx*8+0x1c]
  41a883:	push   esp
  41a884:	mov    esp,0xb3838879
  41a889:	fidivr DWORD PTR [ebx+eiz*8-0x3]
  41a88d:	adc    BYTE PTR [edx+0x31],bh
  41a890:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a891:	fcomp  DWORD PTR ds:0x19e00872
  41a897:	repz add al,BYTE PTR [edi+edx*1+0x1e]
  41a89c:	cmp    al,0xc0
  41a89e:	inc    ebp
  41a89f:	xchg   edi,eax
  41a8a0:	ins    DWORD PTR es:[edi],dx
  41a8a1:	jne    0x41a82e
  41a8a3:	rcr    bl,0xa6
  41a8a6:	loopne 0x41a84e
  41a8a8:	jno    0x41a8d0
  41a8aa:	mov    ecx,ebx
  41a8ac:	lea    ecx,[esi-0x10ce69b5]
  41a8b2:	int3   
  41a8b3:	fdivr  DWORD PTR [ebx]
  41a8b5:	cli    
  41a8b6:	call   0x45d31cb4
  41a8bb:	fist   WORD PTR [esi-0x798ed41c]
  41a8c1:	(bad)  
  41a8c2:	enter  0x256a,0x86
  41a8c6:	fadd   DWORD PTR [ecx]
  41a8c8:	add    eax,0x6c2fb3c2
  41a8cd:	jle    0x41a931
  41a8cf:	std    
  41a8d0:	and    eax,0x792bb95e
  41a8d5:	mov    dh,al
  41a8d7:	loop   0x41a911
  41a8d9:	out    dx,al
  41a8da:	cmp    BYTE PTR [esi+0x619ad6eb],0x54
  41a8e1:	in     eax,dx
  41a8e2:	dec    esi
  41a8e3:	fidiv  DWORD PTR [ebx+0x7d]
  41a8e6:	std    
  41a8e7:	cmp    DWORD PTR [eax+edi*1+0x65f0f2d9],ebp
  41a8ee:	(bad)  
  41a8ef:	je     0x41a93c
  41a8f1:	int    0x46
  41a8f3:	lods   al,BYTE PTR ds:[esi]
  41a8f4:	xchg   esp,eax
  41a8f5:	mov    edi,0x58d37ef1
  41a8fa:	adc    edx,ebp
  41a8fc:	or     DWORD PTR [ebx+0x5d],esi
  41a8ff:	mov    DWORD PTR [ecx],eax
  41a901:	mov    bl,0xf8
  41a903:	and    al,0x63
  41a905:	sahf   
  41a906:	dec    esi
  41a907:	jns    0x41a964
  41a909:	scas   eax,DWORD PTR es:[edi]
  41a90a:	dec    edx
  41a90b:	test   BYTE PTR [edi],ah
  41a90d:	icebp  
  41a90e:	call   0x62d138f0
  41a913:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a914:	cmp    al,0xd5
  41a916:	popf   
  41a917:	fisub  DWORD PTR [ebx*2-0x3aee7e5]
  41a91e:	jne    0x41a944
  41a920:	push   ds
  41a921:	cmc    
  41a922:	mov    dl,0x80
  41a924:	mov    dh,0x97
  41a926:	mov    esp,0x3eeaf251
  41a92b:	lea    ebp,[esi+0x3]
  41a92e:	mov    ?,WORD PTR [ebx+0x6e]
  41a931:	data16 adc ch,dh
  41a934:	mov    ?,WORD PTR [edi-0x93551b9]
  41a93a:	cmp    eax,0x8b10dc96
  41a93f:	les    esi,FWORD PTR [ebx-0x38c5818e]
  41a945:	sbb    DWORD PTR [edi+0x61],ebx
  41a948:	dec    eax
  41a949:	adc    ah,BYTE PTR [ebp-0x3bc1d8c4]
  41a94f:	lahf   
  41a950:	mov    ds,WORD PTR [edx+edi*1]
  41a953:	fisub  WORD PTR [esi+eiz*8+0x22]
  41a957:	xchg   edx,eax
  41a958:	inc    esp
  41a959:	stos   BYTE PTR es:[edi],al
  41a95a:	cmp    cl,BYTE PTR [edx+0x0]
  41a95d:	sub    dl,BYTE PTR [ecx+0x4e]
  41a960:	(bad)  [edi+0x147fb957]
  41a966:	outs   dx,BYTE PTR ds:[esi]
  41a967:	pop    ebx
  41a968:	cmp    ch,dl
  41a96a:	and    esp,ebp
  41a96c:	imul   eax,eax,0x6d5f4107
  41a972:	test   BYTE PTR ds:0x9b8a03ef,dh
  41a978:	and    DWORD PTR [ebx+0x54003bbd],edx
  41a97e:	retf   0xb98b
  41a981:	aaa    
  41a982:	fmul   DWORD PTR [edx-0x64faa091]
  41a988:	dec    ebp
  41a989:	mov    esi,0x94e92de1
  41a98e:	add    BYTE PTR [ebx+0x60],ch
  41a991:	pop    es
  41a992:	inc    ecx
  41a993:	nop
  41a994:	loope  0x41a9c3
  41a996:	fnstsw WORD PTR [edi-0x1e44a16d]
  41a99c:	je     0x41a977
  41a99e:	addr16 mov ebx,0x35eb6b37
  41a9a4:	mov    dh,0x52
  41a9a6:	mov    edi,0xaa47a498
  41a9ab:	mov    ah,0x8d
  41a9ad:	pushf  
  41a9ae:	fild   DWORD PTR [edx-0x4e]
  41a9b1:	mov    dl,0x50
  41a9b3:	mov    ecx,0xd1b1c81a
  41a9b8:	test   al,0x64
  41a9ba:	lea    edx,[eax+0x40]
  41a9bd:	outs   dx,DWORD PTR ds:[esi]
  41a9be:	sahf   
  41a9bf:	jge    0x41aa2e
  41a9c1:	loopne 0x41a95b
  41a9c3:	(bad)  
  41a9c4:	dec    ebp
  41a9c5:	add    eax,0xe975d2c3
  41a9ca:	pushf  
  41a9cb:	mov    bh,0x89
  41a9cd:	adc    eax,DWORD PTR [esi-0x2ecfe05b]
  41a9d3:	outs   dx,BYTE PTR ds:[esi]
  41a9d4:	mov    edx,0x78c74878
  41a9d9:	(bad)  
  41a9da:	dec    edi
  41a9db:	or     BYTE PTR [edi-0xcd803d7],bh
  41a9e1:	arpl   WORD PTR [edx+0x5a026edb],di
  41a9e7:	mov    esp,0x677418a0
  41a9ec:	retf   
  41a9ed:	ret    0x6431
  41a9f0:	cmp    edx,0x31
  41a9f3:	fstp   QWORD PTR [eax]
  41a9f5:	int3   
  41a9f6:	lahf   
  41a9f7:	mov    ecx,0x8fe154dc
  41a9fc:	out    0xe2,eax
  41a9fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9ff:	adc    DWORD PTR [edi-0x1504c7b9],ebp
  41aa05:	pop    edi
  41aa06:	ret    0x6967
  41aa09:	mov    bl,0xad
  41aa0b:	mov    ebp,0x5750867
  41aa10:	mov    esp,0x8cd068bb
  41aa15:	add    dl,ah
  41aa17:	in     eax,0xbd
  41aa19:	aam    0x2c
  41aa1b:	aas    
  41aa1c:	(bad)  
  41aa1d:	in     al,dx
  41aa1e:	mov    bh,0x5a
  41aa20:	dec    eax
  41aa21:	shr    BYTE PTR ss:0x80668403,cl
  41aa28:	retf   0xde37
  41aa2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa2c:	pop    ebx
  41aa2d:	push   es
  41aa2e:	and    DWORD PTR [esi+0x2f],0x666e16bb
  41aa35:	cmp    BYTE PTR [edi],al
  41aa37:	cld    
  41aa38:	aas    
  41aa39:	call   0x60d0:0xa009dd31
  41aa40:	shl    DWORD PTR [edi+ebx*4-0x1b],cl
  41aa44:	popa   
  41aa45:	jae    0x41aa20
  41aa47:	addr16 jo 0x41aa1f
  41aa4a:	mov    ecx,0x737ed209
  41aa4f:	sbb    al,0xb2
  41aa51:	ss inc esp
  41aa53:	xchg   BYTE PTR [esi-0x1],ah
  41aa56:	xor    ecx,DWORD PTR [edx-0x6e41a234]
  41aa5c:	pushf  
  41aa5d:	test   al,0xb6
  41aa5f:	xchg   esp,eax
  41aa60:	jmp    0x41aa85
  41aa62:	or     al,0x60
  41aa64:	inc    edx
  41aa65:	jb     0x41aa19
  41aa67:	gs popf 
  41aa69:	sar    edx,1
  41aa6b:	fist   WORD PTR [edx-0x7e851f68]
  41aa71:	sbb    esp,edx
  41aa73:	rcl    BYTE PTR [edi],0x3d
  41aa76:	xchg   ecx,eax
  41aa77:	(bad)  
  41aa78:	or     BYTE PTR [edx+0x5],dh
  41aa7b:	push   cs
  41aa7c:	adc    ebp,DWORD PTR [ebx]
  41aa7e:	fnsave ds:0x341763eb
  41aa84:	sub    eax,0xfe6fac6c
  41aa89:	sub    al,BYTE PTR [edx-0x7983366e]
  41aa8f:	je     0x41aac4
  41aa91:	retf   
  41aa92:	fs inc ecx
  41aa94:	inc    esi
  41aa95:	sub    eax,0x2638437a
  41aa9a:	or     al,0xf8
  41aa9c:	sbb    al,0x7f
  41aa9e:	not    BYTE PTR [esi]
  41aaa0:	cwde   
  41aaa1:	jp     0x41aa2f
  41aaa3:	jecxz  0x41aaa5
  41aaa5:	retf   
  41aaa6:	retf   
  41aaa7:	(bad)  
  41aaa8:	sub    eax,0xd0fc2e14
  41aaad:	arpl   di,bp
  41aaaf:	cli    
  41aab0:	dec    edx
  41aab1:	or     al,0x6
  41aab3:	push   ds
  41aab4:	das    
  41aab5:	sbb    DWORD PTR [ebx+edi*8],esi
  41aab8:	int    0x20
  41aaba:	adc    BYTE PTR [edi],dl
  41aabc:	mov    ds:0x58235328,eax
  41aac1:	add    eax,0x5f1fa9fe
  41aac6:	stos   DWORD PTR es:[edi],eax
  41aac7:	mov    ecx,0xaf9e21d4
  41aacc:	retf   
  41aacd:	dec    ebx
  41aace:	adc    al,0x59
  41aad0:	mov    ds:0xcffdcc26,eax
  41aad5:	add    dl,BYTE PTR [ebx-0x37]
  41aad8:	xchg   ecx,eax
  41aad9:	ror    BYTE PTR [ebp-0xef27013],cl
  41aadf:	ret    
  41aae0:	out    0x4d,al
  41aae2:	jle    0x41aab8
  41aae4:	dec    eax
  41aae5:	inc    BYTE PTR [ebp+0x69b5fded]
  41aaeb:	dec    DWORD PTR [eax-0x4d03601c]
  41aaf1:	dec    esi
  41aaf2:	jge    0x41aabb
  41aaf4:	push   0xffffffa1
  41aaf6:	ret    
  41aaf7:	dec    ecx
  41aaf8:	push   esi
  41aaf9:	dec    eax
  41aafa:	mov    esp,0xb65ca7c8
  41aaff:	mov    fs,WORD PTR [ecx]
  41ab01:	div    ecx
  41ab03:	shr    BYTE PTR [eax],cl
  41ab05:	and    al,0xd1
  41ab07:	iret   
  41ab08:	mov    edi,0xa0a5258d
  41ab0d:	fidiv  WORD PTR [ebp-0x8e9630e]
  41ab13:	imul   ecx,DWORD PTR [ecx+eax*4-0x9],0x4e
  41ab18:	dec    ecx
  41ab19:	mov    edi,0xd61ba7ff
  41ab1e:	mov    bl,ch
  41ab20:	pushf  
  41ab21:	test   WORD PTR [ebx+0x13],cx
  41ab25:	xor    eax,0xdd9c30c2
  41ab2a:	cdq    
  41ab2b:	(bad)  
  41ab2c:	outs   dx,DWORD PTR ds:[esi]
  41ab2d:	pop    ebp
  41ab2e:	jge    0x41aba1
  41ab30:	in     eax,0xaf
  41ab32:	mov    dh,0xf1
  41ab34:	cmp    BYTE PTR [esi+ecx*1-0x645d0d7c],0xdb
  41ab3c:	sbb    bl,BYTE PTR [ebp+ebx*2-0x8]
  41ab40:	jno    0x41ab47
  41ab42:	(bad)  
  41ab43:	outs   dx,BYTE PTR ds:[esi]
  41ab44:	fwait
  41ab45:	dec    DWORD PTR [ebx-0x2f]
  41ab48:	mov    BYTE PTR [ebx],dh
  41ab4a:	stos   BYTE PTR es:[edi],al
  41ab4b:	aaa    
  41ab4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab4d:	adc    esp,ebx
  41ab4f:	dec    ecx
  41ab50:	jmp    0xef73:0xb1958f0
  41ab57:	cli    
  41ab58:	scas   eax,DWORD PTR es:[edi]
  41ab59:	cmovb  edi,DWORD PTR [ecx-0x382e2804]
  41ab60:	imul   ecx,DWORD PTR [esi-0xd],0x55516f96
  41ab67:	cli    
  41ab68:	call   0x89c8:0xafc4a9e4
  41ab6f:	lahf   
  41ab70:	popa   
  41ab71:	jo     0x41ab44
  41ab73:	retf   0xce6
  41ab76:	clc    
  41ab77:	daa    
  41ab78:	out    dx,eax
  41ab79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab7a:	outs   dx,DWORD PTR ds:[esi]
  41ab7b:	mov    esi,0x9a9d9433
  41ab80:	fs and ebx,esp
  41ab83:	xchg   DWORD PTR [eax+0x52],eax
  41ab86:	jo     0x41ab5d
  41ab88:	aam    0x75
  41ab8a:	and    al,0xa2
  41ab8c:	daa    
  41ab8d:	jo     0x41ab20
  41ab8f:	inc    esi
  41ab90:	aam    0xde
  41ab92:	adc    BYTE PTR [ebp+ecx*1-0x1c29ab5d],0xe8
  41ab9a:	adc    al,0x3c
  41ab9c:	daa    
  41ab9d:	stos   DWORD PTR es:[edi],eax
  41ab9e:	lea    esi,[ecx+edx*1]
  41aba1:	scas   al,BYTE PTR es:[edi]
  41aba2:	inc    ecx
  41aba3:	adc    DWORD PTR [edx-0x1],eax
  41aba6:	and    eax,0x64dc6f4b
  41abab:	call   0x93bc:0x46c45227
  41abb2:	push   0x36
  41abb4:	xor    BYTE PTR [edi+0x54adda67],0xcc
  41abbb:	cmp    eax,0x8a048600
  41abc1:	pop    esp
  41abc2:	mov    ds:0x64a7b93d,al
  41abc7:	cwde   
  41abc8:	inc    ebp
  41abc9:	add    ebx,edi
  41abcb:	test   eax,0x24533c88
  41abd0:	mov    ah,0xf
  41abd2:	fwait
  41abd3:	dec    eax
  41abd4:	jp     0x41abc7
  41abd6:	add    ah,BYTE PTR [ebx+0x7e]
  41abd9:	push   eax
  41abda:	jp     0x41ab82
  41abdc:	cmp    al,0xb2
  41abde:	les    eax,FWORD PTR [edi]
  41abe0:	ret    0x925e
  41abe3:	xchg   edx,eax
  41abe4:	or     ebp,DWORD PTR [ecx]
  41abe6:	ins    BYTE PTR es:[edi],dx
  41abe7:	dec    ebp
  41abe8:	or     al,0x27
  41abea:	push   ebp
  41abeb:	ret    
  41abec:	push   esp
  41abed:	mov    eax,0x25c09085
  41abf2:	cmc    
  41abf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abf4:	pushf  
  41abf5:	jb     0x41abf2
  41abf7:	sbb    al,0xa4
  41abf9:	sbb    al,0x48
  41abfb:	jg     0x41ab7d
  41abfd:	icebp  
  41abfe:	dec    eax
  41abff:	lea    esi,[eax+edx*1+0x2d080bc0]
  41ac06:	xchg   ecx,eax
  41ac07:	inc    ebx
  41ac08:	or     BYTE PTR [edx-0x12b78e50],dh
  41ac0e:	popa   
  41ac0f:	cmp    esi,DWORD PTR [edx]
  41ac11:	ins    BYTE PTR es:[edi],dx
  41ac12:	je     0x41ac8b
  41ac14:	std    
  41ac15:	aas    
  41ac16:	in     eax,dx
  41ac17:	push   ecx
  41ac18:	loope  0x41ac7c
  41ac1a:	popf   
  41ac1b:	sbb    al,bl
  41ac1d:	stos   DWORD PTR es:[edi],eax
  41ac1e:	test   BYTE PTR [edx+0x4b44850b],ch
  41ac24:	mov    eax,0xb6251d12
  41ac29:	or     DWORD PTR [esi+0x55],edi
  41ac2c:	repz faddp st(1),st
  41ac2f:	(bad)  [edx-0x5c]
  41ac32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac33:	stos   BYTE PTR es:[edi],al
  41ac34:	xor    edx,DWORD PTR [ebx]
  41ac36:	mov    dh,0x70
  41ac38:	pop    esi
  41ac39:	or     DWORD PTR [edi+0x6a],ebx
  41ac3c:	mov    dh,0xbd
  41ac3e:	and    DWORD PTR [eax],esp
  41ac40:	inc    esi
  41ac41:	std    
  41ac42:	sbb    DWORD PTR [edx],eax
  41ac44:	mov    ah,0xc0
  41ac46:	(bad)  
  41ac47:	ror    DWORD PTR [edi-0x77f2ed35],1
  41ac4d:	push   ebx
  41ac4e:	dec    esi
  41ac4f:	xchg   ebx,eax
  41ac50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac51:	in     eax,0x86
  41ac53:	add    bl,ch
  41ac55:	ret    
  41ac56:	cmp    DWORD PTR [esp+esi*8],ebp
  41ac59:	jo     0x41ac11
  41ac5b:	sub    DWORD PTR [edi],ebp
  41ac5d:	iret   
  41ac5e:	sbb    ebx,0x24
  41ac61:	jg     0x41ac02
  41ac63:	mov    al,0x8f
  41ac65:	in     eax,0x14
  41ac67:	das    
  41ac68:	pop    edi
  41ac69:	push   esp
  41ac6a:	aas    
  41ac6b:	imul   edx,DWORD PTR [ebx],0x78bacda
  41ac71:	jnp    0x41ac08
  41ac73:	iret   
  41ac74:	icebp  
  41ac75:	cmp    al,0xc4
  41ac77:	adc    DWORD PTR [edi+edx*2],ebx
  41ac7a:	mov    edx,0xa89e90ad
  41ac7f:	pop    ds
  41ac80:	jp     0x41ac75
  41ac82:	or     BYTE PTR ds:0x78494a98,bl
  41ac88:	rcr    BYTE PTR [ecx],0x1e
  41ac8b:	xchg   esi,eax
  41ac8c:	inc    ebp
  41ac8d:	jo     0x41ac31
  41ac8f:	sub    DWORD PTR [ecx-0x32608a60],ebp
  41ac95:	aas    
  41ac96:	inc    esi
  41ac97:	scas   eax,DWORD PTR es:[edi]
  41ac98:	jl     0x41ad18
  41ac9a:	popf   
  41ac9b:	push   ecx
  41ac9c:	or     ecx,DWORD PTR [edi-0x2e]
  41ac9f:	xchg   ebp,eax
  41aca0:	cmp    al,0x95
  41aca2:	call   0xe1da:0x8fda6087
  41aca9:	fistp  WORD PTR [ebp-0x79]
  41acac:	push   es
  41acad:	sub    ah,BYTE PTR [edx]
  41acaf:	out    dx,eax
  41acb0:	cli    
  41acb1:	hlt    
  41acb2:	mov    gs,WORD PTR [ebp-0x46]
  41acb5:	or     al,0xaa
  41acb7:	scas   al,BYTE PTR es:[edi]
  41acb8:	in     al,dx
  41acb9:	add    edi,DWORD PTR [eax+ebp*4-0x637d363]
  41acc0:	imul   esp,DWORD PTR [edi+edi*1-0x77],0x4f
  41acc5:	out    0x56,al
  41acc7:	mov    bl,0xe0
  41acc9:	xchg   ebp,eax
  41acca:	jmp    0xd985942a
  41accf:	(bad)  
  41acd1:	xor    eax,0xbd3b2b8b
  41acd6:	dec    esi
  41acd7:	sub    dl,BYTE PTR [edi]
  41acd9:	push   ecx
  41acda:	xchg   BYTE PTR [edx+0x2d],dl
  41acdd:	imul   ebp,DWORD PTR [ebx],0xcb431ffa
  41ace3:	cmp    esi,DWORD PTR [edx+0x2fa71f39]
  41ace9:	adc    al,0xa1
  41aceb:	push   0xa3e71974
  41acf0:	pop    ebp
  41acf1:	mov    al,ds:0xf33cf32d
  41acf6:	cld    
  41acf7:	xchg   esi,eax
  41acf8:	dec    ebp
  41acf9:	inc    esp
  41acfa:	cmp    DWORD PTR [eax],edx
  41acfc:	cmp    eax,0xa547e436
  41ad01:	cmp    ch,BYTE PTR [ebp+0x2d]
  41ad04:	mov    DWORD PTR [edi+0x1c9788b2],edx
  41ad0a:	add    edx,edi
  41ad0c:	lahf   
  41ad0d:	sbb    DWORD PTR [esi],ebp
  41ad0f:	mov    ebx,0xdba581ff
  41ad14:	jbe    0x41ad4c
  41ad16:	in     eax,dx
  41ad17:	mov    DWORD PTR [ebp-0x7d7fbf0a],esi
  41ad1d:	jl     0x41ad81
  41ad1f:	call   0x4ed8:0x9a747293
  41ad26:	fsubr  QWORD PTR [edx]
  41ad28:	jnp    0x41ace3
  41ad2a:	stos   DWORD PTR es:[edi],eax
  41ad2b:	cs stos BYTE PTR es:[edi],al
  41ad2d:	out    0x63,eax
  41ad2f:	xchg   esi,eax
  41ad30:	sbb    al,0xb7
  41ad32:	mov    ch,bl
  41ad34:	cwde   
  41ad35:	push   ebp
  41ad36:	pop    ds
  41ad37:	mov    ah,0xac
  41ad39:	js     0x41ad6d
  41ad3b:	cmp    edx,ebx
  41ad3d:	adc    bl,BYTE PTR [eax+0x38]
  41ad40:	les    edx,FWORD PTR [ecx-0x6b5c371d]
  41ad46:	inc    esi
  41ad47:	sub    edx,DWORD PTR [ecx-0x69de4eea]
  41ad4d:	clc    
  41ad4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad4f:	sbb    ch,0x30
  41ad52:	mov    eax,0xdf4dba5f
  41ad57:	xchg   edx,eax
  41ad58:	inc    BYTE PTR [ebx]
  41ad5a:	and    eax,0xbc1c6994
  41ad5f:	mov    dl,0x74
  41ad61:	rcr    dl,0x5e
  41ad64:	adc    edx,ecx
  41ad66:	out    dx,al
  41ad67:	les    ebp,FWORD PTR [ebx+0x4]
  41ad6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad6b:	push   ds
  41ad6c:	push   esi
  41ad6d:	push   ss
  41ad6e:	mov    esi,0x9561e872
  41ad73:	(bad)  
  41ad74:	ds aaa 
  41ad76:	sbb    edx,esp
  41ad78:	mov    esp,DWORD PTR [ebx+0x7671a55c]
  41ad7e:	pop    edx
  41ad7f:	jmp    0x41add7
  41ad81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad82:	inc    esp
  41ad83:	lahf   
  41ad84:	fiadd  DWORD PTR [edx-0x7c753bdb]
  41ad8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad8b:	sahf   
  41ad8c:	maskmovq mm7,(bad)
  41ad8d:	idiv   DWORD PTR [eax]
  41ad8f:	fcomip st,st(5)
  41ad91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad92:	shr    BYTE PTR [edx+ebx*2+0xb2250a],1
  41ad99:	ds jp  0x41ad4b
  41ad9c:	aam    0x99
  41ad9e:	inc    ecx
  41ad9f:	lods   eax,DWORD PTR ds:[esi]
  41ada0:	stos   BYTE PTR es:[edi],al
  41ada1:	js     0x41addf
  41ada3:	ss aas 
  41ada5:	inc    eax
  41ada6:	mov    BYTE PTR [esi],ah
  41ada8:	jmp    0x7ee2:0x7983ce1
  41adaf:	pop    ebp
  41adb0:	inc    esp
  41adb1:	pop    ecx
  41adb2:	push   ss
  41adb3:	ds ins BYTE PTR es:[edi],dx
  41adb5:	dec    esp
  41adb6:	mov    esp,0x67b403d0
  41adbb:	test   BYTE PTR [edx-0x2c6086ec],ch
  41adc1:	xor    eax,0x726a256a
  41adc6:	aam    0xa4
  41adc8:	pop    es
  41adc9:	and    eax,0x73255128
  41adce:	in     eax,dx
  41adcf:	or     eax,0x631be0ab
  41add4:	sbb    eax,ebp
  41add6:	add    BYTE PTR [eax-0x5fd37e84],al
  41addc:	xchg   ebx,eax
  41addd:	xchg   DWORD PTR [esp+ebx*2],ebx
  41ade0:	jns    0x41ad7a
  41ade2:	mov    ecx,0xf1b166e2
  41ade7:	pop    eax
  41ade8:	adc    BYTE PTR [esi-0x360fabd9],0x16
  41adef:	mov    ds:0x9252a373,al
  41adf4:	and    BYTE PTR [esi],ch
  41adf6:	sbb    eax,0xc6002ba5
  41adfb:	sahf   
  41adfc:	or     ebp,edx
  41adfe:	dec    esp
  41adff:	xchg   esp,eax
  41ae00:	xlat   BYTE PTR ds:[ebx]
  41ae01:	in     eax,dx
  41ae02:	loopne 0x41ae05
  41ae04:	mov    ah,0xa4
  41ae06:	adc    eax,0xc8943e79
  41ae0b:	(bad)  
  41ae0c:	fbld   TBYTE PTR [edx+0x37]
  41ae0f:	cmp    al,0xc0
  41ae11:	inc    edx
  41ae12:	pop    ecx
  41ae13:	or     eax,DWORD PTR [ecx+0x74933d6]
  41ae19:	push   ds
  41ae1a:	xchg   edx,eax
  41ae1b:	jae    0x41ae9c
  41ae1d:	xchg   edi,eax
  41ae1e:	add    bl,cl
  41ae20:	mov    DWORD PTR [edi],ecx
  41ae22:	jmp    DWORD PTR [esi-0x2f]
  41ae25:	pop    ecx
  41ae26:	sahf   
  41ae27:	xor    al,0xd7
  41ae29:	jl     0x41ae22
  41ae2b:	pop    edx
  41ae2c:	pop    es
  41ae2d:	pop    eax
  41ae2e:	pop    ss
  41ae2f:	sbb    ebp,ecx
  41ae31:	sti    
  41ae32:	iret   
  41ae33:	xchg   esp,eax
  41ae34:	dec    esp
  41ae35:	loop   0x41ae71
  41ae37:	mov    bh,0xc7
  41ae39:	je     0x41ae22
  41ae3b:	jbe    0x41ade7
  41ae3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae3e:	popf   
  41ae3f:	sbb    DWORD PTR [edx-0x2e],edx
  41ae42:	mov    BYTE PTR [eax-0x433e3cce],ch
  41ae48:	jns    0x41ae01
  41ae4a:	inc    ebp
  41ae4b:	ja     0x41adcf
  41ae4d:	jo     0x41ae06
  41ae4f:	fisubr WORD PTR [eax+0x3d1f6715]
  41ae55:	add    bh,dh
  41ae57:	dec    esp
  41ae58:	push   ebp
  41ae59:	fld    TBYTE PTR [ecx+0x7d345574]
  41ae5f:	(bad)  
  41ae60:	sbb    eax,0x7f99de4b
  41ae65:	jp     0x41ae65
  41ae67:	ret    
  41ae68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae69:	shl    BYTE PTR [edx],cl
  41ae6b:	inc    esi
  41ae6c:	call   0xccb99e8d
  41ae71:	leave  
  41ae72:	mov    ebx,0x38c020e2
  41ae77:	adc    esp,DWORD PTR [esi]
  41ae79:	mov    ebx,?
  41ae7b:	jmp    0xa9e6c7ab
  41ae80:	fist   DWORD PTR [edi-0x35]
  41ae83:	xchg   ebp,eax
  41ae84:	or     cl,BYTE PTR [edx-0x51b24ec1]
  41ae8a:	nop
  41ae8b:	pop    ds
  41ae8c:	cld    
  41ae8d:	xor    bh,0xa1
  41ae90:	mov    ebx,0x9f9e0e3d
  41ae95:	and    BYTE PTR [eax],cl
  41ae97:	(bad)
  41ae9b:	ds push ebp
  41ae9d:	sub    eax,0xf2c080a6
  41aea2:	fstp   DWORD PTR fs:[ebx]
  41aea5:	pusha  
  41aea6:	gs dec edx
  41aea8:	sahf   
  41aea9:	mov    BYTE PTR [ebp+0xc4dacff],al
  41aeaf:	pop    eax
  41aeb0:	cmp    eax,0xd38dfd1e
  41aeb5:	bound  ecx,QWORD PTR [esi+0x63]
  41aeb8:	jg     0x41af2d
  41aeba:	mov    cl,0xd
  41aebc:	shl    DWORD PTR ds:0x7bc120fb,0x6d
  41aec3:	enter  0x853b,0xd5
  41aec7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aec8:	pop    ebx
  41aec9:	and    esp,ecx
  41aecb:	icebp  
  41aecc:	mov    cl,0xf4
  41aece:	(bad)  [esi-0x4e0c7465]
  41aed4:	fnsave [ecx+eax*1+0x3f6b3be7]
  41aedb:	sbb    eax,0x33ac68f7
  41aee0:	dec    esp
  41aee1:	mov    al,0x41
  41aee3:	fdivr  DWORD PTR [ebx+edi*2]
  41aee6:	and    ebp,DWORD PTR [esi-0x3a4714e1]
  41aeec:	cmp    esp,0x4a
  41aeef:	gs xor al,0x73
  41aef2:	push   es
  41aef3:	dec    eax
  41aef4:	arpl   WORD PTR [edi+0x67],si
  41aef7:	jae    0x41ae84
  41aef9:	gs (bad) 
  41aefb:	out    0xf7,eax
  41aefd:	pop    esi
  41aefe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aeff:	and    eax,0x2824303
  41af04:	adc    eax,DWORD PTR [eax+0x57]
  41af07:	add    eax,0xc64cfe50
  41af0c:	adc    BYTE PTR [edx-0x315961ae],bl
  41af12:	popa   
  41af13:	das    
  41af14:	mov    esp,0xe413469e
  41af19:	jp     0x41af25
  41af1b:	lds    esi,FWORD PTR [edi+0x581ffb6]
  41af21:	xchg   ebp,eax
  41af22:	ror    DWORD PTR [esi-0x49],0x64
  41af26:	fwait
  41af27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af28:	jge    0x41af28
  41af2a:	popa   
  41af2b:	adc    al,0x94
  41af2d:	int3   
  41af2e:	sbb    dh,ah
  41af30:	scas   eax,DWORD PTR es:[edi]
  41af31:	ja     0x41af0e
  41af33:	lods   al,BYTE PTR ds:[esi]
  41af34:	mov    ah,0xc9
  41af36:	xor    DWORD PTR [ebp+0x256cd0b3],ebx
  41af3c:	fnsave [ecx]
  41af3e:	mov    ebp,0x1d0919c6
  41af43:	mov    dl,bh
  41af45:	icebp  
  41af46:	shl    BYTE PTR [edx+edi*1-0x31],1
  41af4a:	sahf   
  41af4b:	sbb    eax,0x5208790f
  41af50:	fwait
  41af51:	fwait
  41af52:	ss scas eax,DWORD PTR es:[edi]
  41af54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af55:	mov    ch,0xfc
  41af57:	jge    0x41afc8
  41af59:	lds    esi,FWORD PTR [edx]
  41af5b:	pop    eax
  41af5c:	xchg   ebx,eax
  41af5d:	sub    cl,bl
  41af5f:	and    BYTE PTR [esi+0x6a],bh
  41af62:	repz and al,0xa6
  41af65:	fnclex 
  41af67:	int3   
  41af68:	out    dx,eax
  41af69:	ja     0x41afc7
  41af6b:	cmp    ebp,DWORD PTR [ebx]
  41af6d:	ds or  al,0x5d
  41af70:	jne    0x41af61
  41af72:	xor    al,0x20
  41af74:	fcmovb st,st(3)
  41af76:	in     al,dx
  41af77:	dec    esp
  41af78:	das    
  41af79:	adc    esi,DWORD PTR [edi]
  41af7b:	int3   
  41af7c:	test   eax,0xc0090ddc
  41af81:	xchg   eax,edx
  41af83:	xchg   BYTE PTR ds:0x1ba1df39,bh
  41af89:	dec    esi
  41af8a:	dec    ebp
  41af8b:	inc    esi
  41af8c:	arpl   WORD PTR [ebx-0x3165d7c9],si
  41af92:	cmp    eax,0xaeb38416
  41af97:	dec    esi
  41af98:	int3   
  41af99:	pop    edi
  41af9a:	inc    edx
  41af9b:	outs   dx,DWORD PTR ds:[esi]
  41af9c:	cli    
  41af9d:	add    BYTE PTR [ebp+0x42],cl
  41afa0:	xor    eax,0x1078d14f
  41afa5:	fisttp QWORD PTR [edi+ecx*8]
  41afa8:	pop    ebp
  41afa9:	and    dh,cl
  41afab:	cs ret 
  41afad:	(bad)  
  41afae:	or     ecx,DWORD PTR [esi]
  41afb0:	fdiv   DWORD PTR [edi-0xdd8e5a4]
  41afb6:	imul   edx,edx,0x70c036d3
  41afbc:	call   0x74e7ddc0
  41afc1:	ret    
  41afc2:	mov    esi,0x69894b57
  41afc7:	shl    BYTE PTR [eax+edx*4+0x65dc6508],cl
  41afce:	add    esi,ebx
  41afd0:	out    dx,eax
  41afd1:	daa    
  41afd2:	and    al,0x93
  41afd4:	cmp    eax,ebp
  41afd6:	push   edi
  41afd7:	lds    edi,FWORD PTR [esp+eax*8+0x2cae7c10]
  41afde:	int3   
  41afdf:	rcr    DWORD PTR [ebp+0x25],cl
  41afe2:	xchg   edi,eax
  41afe3:	xor    cl,BYTE PTR [edx+0x50]
  41afe6:	dec    esp
  41afe7:	scas   eax,DWORD PTR es:[edi]
  41afe8:	mov    edx,0x3f7a932b
  41afed:	pop    edi
  41afee:	mov    bl,BYTE PTR [ebx+edi*2-0x1d]
  41aff2:	and    eax,0xfbea2255
  41aff7:	mov    edx,0xc6accdfd
  41affc:	mov    cl,bh
  41affe:	jne    0x41b05e
  41b000:	dec    ebx
  41b001:	jns    0x41afa9
  41b003:	push   ds
  41b004:	imul   esp,esp,0xffffffd6
  41b007:	fcomip st,st(6)
  41b009:	fcmove st,st(6)
  41b00b:	outs   dx,BYTE PTR ds:[esi]
  41b00c:	jns    0x41aff3
  41b00e:	mov    ah,BYTE PTR [edi]
  41b010:	or     bl,BYTE PTR [esi-0x6c03acdd]
  41b016:	mov    cl,BYTE PTR [ebx+0x31]
  41b019:	inc    ebx
  41b01a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b01b:	or     BYTE PTR [ebx],bh
  41b01d:	and    eax,edi
  41b01f:	push   es
  41b020:	jno    0x41b03f
  41b022:	xor    ah,ah
  41b024:	ds xchg ecx,eax
  41b026:	xor    al,BYTE PTR [ebx]
  41b028:	loopne 0x41b09c
  41b02a:	je     0x41b008
  41b02c:	jbe    0x41afb2
  41b02e:	sbb    dh,cl
  41b030:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b031:	(bad)  
  41b032:	sbb    esi,DWORD PTR ds:0xfa0198ed
  41b038:	out    dx,eax
  41b039:	push   esi
  41b03a:	cmp    ebp,esi
  41b03c:	push   ebp
  41b03d:	mov    BYTE PTR [ebp+0x6902fac2],ch
  41b043:	jge    0x41b0ae
  41b045:	push   ecx
  41b046:	push   cs
  41b047:	clc    
  41b048:	sar    DWORD PTR [edi+eiz*2+0x2cf6eef9],cl
  41b04f:	fisttp DWORD PTR [ebx+0x5589ec55]
  41b055:	or     cl,ch
  41b057:	jo     0x41b059
  41b059:	add    BYTE PTR [eax],al
  41b05b:	mov    edx,DWORD PTR [ebp+0x8]
  41b05e:	mov    ebx,DWORD PTR [ebp-0x8]
  41b061:	xor    edx,eax
  41b063:	xor    ebx,eax
  41b065:	sub    edx,ebx
  41b067:	sub    edx,esi
  41b069:	xor    edx,eax
  41b06b:	mov    DWORD PTR [ebp+0x8],edx
  41b06e:	mov    edx,DWORD PTR [ebp+0x8]
  41b071:	mov    ebx,DWORD PTR [ebp-0x58]
  41b074:	add    edx,0x5708f1
  41b07a:	imul   edx,ebx
  41b07d:	mov    DWORD PTR [ebp-0x58],edx
  41b080:	mov    edx,DWORD PTR [ebp+0x8]
  41b083:	mov    ebx,DWORD PTR [ebp-0x54]
  41b086:	add    edx,0x64f893
  41b08c:	or     edx,ebx
  41b08e:	mov    DWORD PTR [ebp-0x54],edx
  41b091:	mov    edx,DWORD PTR [ebp+0x8]
  41b094:	mov    ebx,DWORD PTR [ebp-0x50]
  41b097:	add    edx,ecx
  41b099:	xor    edx,ebx
  41b09b:	mov    DWORD PTR [ebp-0x50],edx
  41b09e:	mov    edx,DWORD PTR [ebp+0x8]
  41b0a1:	mov    ebx,DWORD PTR [ebp-0x4c]
  41b0a4:	add    edx,edi
  41b0a6:	and    edx,ebx
  41b0a8:	mov    DWORD PTR [ebp-0x4c],edx
  41b0ab:	mov    edx,DWORD PTR [ebp+0x8]
  41b0ae:	mov    ebx,DWORD PTR [ebp-0x48]
  41b0b1:	lea    edx,[ebx+edx*1+0x241fcde]
  41b0b8:	mov    DWORD PTR [ebp-0x48],edx
  41b0bb:	mov    edx,DWORD PTR [ebp+0x8]
  41b0be:	mov    ebx,0xfa5e1521
  41b0c3:	sub    ebx,edx
  41b0c5:	add    ebx,DWORD PTR [ebp-0x44]
  41b0c8:	mov    DWORD PTR [ebp-0x44],ebx
  41b0cb:	mov    edx,DWORD PTR [ebp+0x8]
  41b0ce:	xor    edx,eax
  41b0d0:	add    edx,esi
  41b0d2:	jne    0x41b05b
  41b0d8:	mov    edx,DWORD PTR [ebp-0x14]
  41b0db:	mov    DWORD PTR [ebp+0x8],edx
  41b0de:	jmp    0x41b153
  41b0e3:	mov    edx,DWORD PTR [ebp+0x8]
  41b0e6:	mov    ebx,DWORD PTR [ebp-0x8]
  41b0e9:	xor    edx,eax
  41b0eb:	xor    ebx,eax
  41b0ed:	sub    edx,ebx
  41b0ef:	sub    edx,esi
  41b0f1:	xor    edx,eax
  41b0f3:	mov    DWORD PTR [ebp+0x8],edx
  41b0f6:	mov    edx,DWORD PTR [ebp+0x8]
  41b0f9:	mov    ebx,DWORD PTR [ebp-0x58]
  41b0fc:	add    edx,0x5708f1
  41b102:	imul   edx,ebx
  41b105:	mov    DWORD PTR [ebp-0x58],edx
  41b108:	mov    edx,DWORD PTR [ebp+0x8]
  41b10b:	mov    ebx,DWORD PTR [ebp-0x54]
  41b10e:	add    edx,0x64f893
  41b114:	or     edx,ebx
  41b116:	mov    DWORD PTR [ebp-0x54],edx
  41b119:	mov    edx,DWORD PTR [ebp+0x8]
  41b11c:	mov    ebx,DWORD PTR [ebp-0x50]
  41b11f:	add    edx,ecx
  41b121:	xor    edx,ebx
  41b123:	mov    DWORD PTR [ebp-0x50],edx
  41b126:	mov    edx,DWORD PTR [ebp+0x8]
  41b129:	mov    ebx,DWORD PTR [ebp-0x4c]
  41b12c:	add    edx,edi
  41b12e:	and    edx,ebx
  41b130:	mov    DWORD PTR [ebp-0x4c],edx
  41b133:	mov    edx,DWORD PTR [ebp+0x8]
  41b136:	mov    ebx,DWORD PTR [ebp-0x48]
  41b139:	lea    edx,[ebx+edx*1+0x241fcde]
  41b140:	mov    DWORD PTR [ebp-0x48],edx
  41b143:	mov    edx,DWORD PTR [ebp+0x8]
  41b146:	mov    ebx,0xfa5e1521
  41b14b:	sub    ebx,edx
  41b14d:	add    ebx,DWORD PTR [ebp-0x44]
  41b150:	mov    DWORD PTR [ebp-0x44],ebx
  41b153:	mov    edx,DWORD PTR [ebp+0x8]
  41b156:	xor    edx,eax
  41b158:	add    edx,esi
  41b15a:	jne    0x41b0e3
  41b160:	mov    edx,DWORD PTR [ebp-0x8]
  41b163:	mov    ebx,DWORD PTR [ebp-0xc]
  41b166:	xor    edx,eax
  41b168:	lea    edx,[edx+ebx*1+0x3272ec]
  41b16f:	mov    DWORD PTR [ebp-0xc],edx
  41b172:	mov    edx,DWORD PTR [ebp-0x10]
  41b175:	xor    edx,eax
  41b177:	add    edx,esi
  41b179:	jne    0x411e2e
  41b17f:	jmp    0x41d637
  41b184:	mov    ecx,DWORD PTR [ebp-0x14]
  41b187:	mov    DWORD PTR [ebp+0x8],ecx
  41b18a:	jmp    0x41b203
  41b18f:	mov    ecx,DWORD PTR [ebp+0x8]
  41b192:	mov    edx,DWORD PTR [ebp-0x8]
  41b195:	xor    ecx,eax
  41b197:	xor    edx,eax
  41b199:	sub    ecx,edx
  41b19b:	sub    ecx,esi
  41b19d:	xor    ecx,eax
  41b19f:	mov    DWORD PTR [ebp+0x8],ecx
  41b1a2:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1a5:	mov    edx,DWORD PTR [ebp-0x58]
  41b1a8:	add    ecx,0x5708f1
  41b1ae:	imul   ecx,edx
  41b1b1:	mov    DWORD PTR [ebp-0x58],ecx
  41b1b4:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1b7:	mov    edx,DWORD PTR [ebp-0x54]
  41b1ba:	add    ecx,0x64f893
  41b1c0:	or     ecx,edx
  41b1c2:	mov    DWORD PTR [ebp-0x54],ecx
  41b1c5:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1c8:	mov    edx,DWORD PTR [ebp-0x50]
  41b1cb:	add    ecx,0x242ebcc
  41b1d1:	xor    ecx,edx
  41b1d3:	mov    DWORD PTR [ebp-0x50],ecx
  41b1d6:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1d9:	mov    edx,DWORD PTR [ebp-0x4c]
  41b1dc:	add    ecx,edi
  41b1de:	and    ecx,edx
  41b1e0:	mov    DWORD PTR [ebp-0x4c],ecx
  41b1e3:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1e6:	mov    edx,DWORD PTR [ebp-0x48]
  41b1e9:	lea    ecx,[edx+ecx*1+0x241fcde]
  41b1f0:	mov    DWORD PTR [ebp-0x48],ecx
  41b1f3:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1f6:	mov    edx,0xfa5e1521
  41b1fb:	sub    edx,ecx
  41b1fd:	add    edx,DWORD PTR [ebp-0x44]
  41b200:	mov    DWORD PTR [ebp-0x44],edx
  41b203:	mov    ecx,DWORD PTR [ebp+0x8]
  41b206:	xor    ecx,eax
  41b208:	add    ecx,esi
  41b20a:	jne    0x41b18f
  41b210:	jmp    0x41d643
  41b215:	mov    ecx,DWORD PTR [ebp+0x8]
  41b218:	mov    edx,DWORD PTR [ebp-0x8]
  41b21b:	xor    ecx,eax
  41b21d:	xor    edx,eax
  41b21f:	sub    ecx,edx
  41b221:	sub    ecx,esi
  41b223:	xor    ecx,eax
  41b225:	mov    DWORD PTR [ebp+0x8],ecx
  41b228:	mov    ecx,DWORD PTR [ebp+0x8]
  41b22b:	mov    edx,DWORD PTR [ebp-0x58]
  41b22e:	add    ecx,0x5708f1
  41b234:	imul   ecx,edx
  41b237:	mov    DWORD PTR [ebp-0x58],ecx
  41b23a:	mov    ecx,DWORD PTR [ebp+0x8]
  41b23d:	mov    edx,DWORD PTR [ebp-0x54]
  41b240:	add    ecx,0x64f893
  41b246:	or     ecx,edx
  41b248:	mov    DWORD PTR [ebp-0x54],ecx
  41b24b:	mov    ecx,DWORD PTR [ebp+0x8]
  41b24e:	mov    edx,DWORD PTR [ebp-0x50]
  41b251:	add    ecx,0x242ebcc
  41b257:	xor    ecx,edx
  41b259:	mov    DWORD PTR [ebp-0x50],ecx
  41b25c:	mov    ecx,DWORD PTR [ebp+0x8]
  41b25f:	mov    edx,DWORD PTR [ebp-0x4c]
  41b262:	add    ecx,edi
  41b264:	and    ecx,edx
  41b266:	mov    DWORD PTR [ebp-0x4c],ecx
  41b269:	mov    ecx,DWORD PTR [ebp+0x8]
  41b26c:	mov    edx,DWORD PTR [ebp-0x48]
  41b26f:	jmp    0x41d610
  41b274:	enter  0x7064,0x8f
  41b278:	sar    BYTE PTR [ebx+0x7b],0x1b
  41b27c:	add    al,0xea
  41b27e:	sbb    DWORD PTR [ecx],0x767b676e
  41b284:	mov    dh,0xf0
  41b286:	jge    0x41b302
  41b288:	(bad)  
  41b289:	pop    edi
  41b28a:	jp     0x41b306
  41b28c:	int3   
  41b28d:	sub    al,0x6f
  41b28f:	mov    bh,0xe1
  41b291:	cmc    
  41b292:	sub    eax,0xdff74df5
  41b297:	xchg   esp,eax
  41b298:	mov    ebx,0x61d05908
  41b29d:	xchg   ebp,eax
  41b29e:	in     al,dx
  41b29f:	sub    al,0x8a
  41b2a1:	xchg   ecx,eax
  41b2a2:	pop    esp
  41b2a3:	add    al,0x6b
  41b2a5:	rcr    BYTE PTR [esi*8-0x460d494f],cl
  41b2ac:	mov    cl,0xa3
  41b2ae:	jecxz  0x41b232
  41b2b0:	aam    0xa5
  41b2b2:	and    DWORD PTR [eax-0x48895b6e],ebx
  41b2b8:	and    edi,DWORD PTR [edx+0x3]
  41b2bb:	stos   DWORD PTR es:[edi],eax
  41b2bc:	mov    esp,0xe219d9a4
  41b2c1:	inc    edi
  41b2c2:	mov    DWORD PTR [ebx+ebp*8+0x95d200f],edi
  41b2c9:	add    al,0xab
  41b2cb:	ins    BYTE PTR es:[edi],dx
  41b2cc:	in     al,0xbb
  41b2ce:	imul   ebx,DWORD PTR ds:0xb8793f58,0xffffffa5
  41b2d5:	retf   0x79d5
  41b2d8:	outs   dx,DWORD PTR ds:[esi]
  41b2d9:	xchg   ecx,eax
  41b2da:	and    BYTE PTR [eax+eax*1-0x4c],ah
  41b2de:	ds lock in eax,0x99
  41b2e2:	pop    edx
  41b2e3:	jo     0x41b2bd
  41b2e5:	(bad)
  41b2e8:	loopne 0x41b2f3
  41b2ea:	popf   
  41b2eb:	push   0xf8e090e7
  41b2f0:	mov    ?,WORD PTR [edi]
  41b2f2:	loope  0x41b30e
  41b2f4:	test   eax,0xb54f5334
  41b2f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2fa:	push   ss
  41b2fb:	retf   0xd827
  41b2fe:	adc    ecx,ebx
  41b300:	pop    eax
  41b301:	ror    esi,cl
  41b303:	or     al,0x5c
  41b305:	loope  0x41b328
  41b307:	or     ecx,DWORD PTR [esi-0x52]
  41b30a:	cmp    eax,0x2420ecb5
  41b30f:	mov    ebx,0xc25c7d5d
  41b314:	test   eax,0xbd544b21
  41b319:	test   DWORD PTR [edi],esp
  41b31b:	test   BYTE PTR [ebp+0x6c],al
  41b31e:	mov    ebx,0x776e8654
  41b323:	push   ds
  41b324:	xor    al,0xe2
  41b326:	out    0x67,eax
  41b328:	adc    DWORD PTR [edx+0x497a1a65],ecx
  41b32e:	jl     0x41b39d
  41b330:	cli    
  41b331:	cmp    BYTE PTR [edi],bl
  41b333:	hlt    
  41b334:	xor    bl,dl
  41b336:	mov    al,0x9b
  41b338:	test   BYTE PTR [esi+0x27223301],ah
  41b33e:	stos   BYTE PTR es:[edi],al
  41b33f:	stos   DWORD PTR es:[edi],eax
  41b340:	sbb    DWORD PTR [eax+eax*8-0x7bc07eea],esi
  41b347:	test   al,0x3f
  41b349:	xchg   edx,eax
  41b34a:	inc    esp
  41b34b:	out    0xf3,eax
  41b34d:	rcr    BYTE PTR [eax-0x1d],0x49
  41b351:	scas   eax,DWORD PTR es:[edi]
  41b352:	shl    DWORD PTR [edi-0x72],1
  41b355:	in     eax,dx
  41b356:	xor    al,0xb5
  41b358:	sbb    DWORD PTR [ecx+0x4b],edx
  41b35b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b35c:	addr16 jo 0x41b368
  41b35f:	xlat   BYTE PTR ds:[ebx]
  41b360:	adc    eax,0x8719e305
  41b365:	arpl   WORD PTR [edi],ax
  41b367:	jmp    0xcc12d03e
  41b36c:	es push edi
  41b36e:	sbb    eax,0xf12d60aa
  41b373:	scas   eax,DWORD PTR es:[edi]
  41b374:	addr16 push ebp
  41b376:	pop    ecx
  41b377:	mov    dh,0xe1
  41b379:	js     0x41b320
  41b37b:	xchg   edx,eax
  41b37c:	(bad)  
  41b37d:	sti    
  41b37e:	jmp    0x41b32d
  41b380:	vpunpckldq ymm1,ymm1,YMMWORD PTR [ecx-0x7f6514d]
  41b388:	es xor al,0x13
  41b38b:	cmp    al,0x91
  41b38d:	push   eax
  41b38f:	xor    esi,edi
  41b391:	adc    eax,esp
  41b393:	push   es
  41b394:	shl    DWORD PTR [edi+ebp*4],1
  41b397:	cmp    bh,dh
  41b399:	repnz cmp eax,0x8357605
  41b39f:	scas   eax,DWORD PTR es:[edi]
  41b3a0:	mov    al,0x8a
  41b3a2:	imul   eax,DWORD PTR [edi],0xb9a8b945
  41b3a8:	mov    bl,BYTE PTR [edx-0x236be3ba]
  41b3ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3af:	hlt    
  41b3b0:	pop    ebp
  41b3b1:	stos   BYTE PTR es:[edi],al
  41b3b2:	or     cl,BYTE PTR [esi]
  41b3b4:	stc    
  41b3b5:	jmp    0x41b388
  41b3b7:	sti    
  41b3b8:	pop    eax
  41b3b9:	sbb    BYTE PTR [edx+ebx*2-0x60a070d4],cl
  41b3c0:	dec    edi
  41b3c1:	jmp    0x41b3d5
  41b3c3:	cli    
  41b3c4:	adc    esp,DWORD PTR [edx-0x6080cc24]
  41b3ca:	cmc    
  41b3cb:	sub    eax,0x39c14e4
  41b3d0:	pop    esi
  41b3d1:	mov    esp,0xef02943f
  41b3d6:	cmp    DWORD PTR [esi+0x4e087bc4],0x3f0f3d87
  41b3e0:	jns    0x41b435
  41b3e2:	imul   BYTE PTR [ecx]
  41b3e4:	mov    ds:0xe9f64fea,eax
  41b3e9:	pop    ecx
  41b3ea:	xor    eax,ebx
  41b3ec:	mov    es,edx
  41b3ee:	sub    cl,BYTE PTR [edi-0x527b2fd6]
  41b3f4:	push   edi
  41b3f5:	out    dx,eax
  41b3f6:	ins    BYTE PTR es:[edi],dx
  41b3f7:	xlat   BYTE PTR ds:[ebx]
  41b3f8:	mov    eax,0xeba7d051
  41b3fd:	add    DWORD PTR [eax+0x30],ebx
  41b400:	mov    al,ds:0xa5bb2823
  41b405:	(bad)  
  41b407:	lea    ecx,[eax]
  41b409:	adc    eax,0x5752cc20
  41b40e:	sbb    esp,ecx
  41b410:	dec    ebp
  41b411:	mov    sp,0x4ac1
  41b415:	ins    DWORD PTR es:[edi],dx
  41b416:	pop    esp
  41b417:	mov    dl,0x16
  41b419:	es jo  0x41b49a
  41b41c:	int    0x32
  41b41e:	ss pop ecx
  41b420:	ja     0x41b3b9
  41b422:	pushf  
  41b423:	push   ds
  41b424:	les    esp,FWORD PTR ds:0xd28a17e0
  41b42a:	push   ds
  41b42b:	sbb    eax,0x2c8094e6
  41b430:	repz (bad) [eax-0x201fbc20]
  41b437:	mov    cl,0xae
  41b439:	(bad)
  41b43c:	add    cl,BYTE PTR [edi+0x7579154d]
  41b442:	xchg   ecx,eax
  41b443:	ins    BYTE PTR es:[edi],dx
  41b444:	jl     0x41b42c
  41b446:	int3   
  41b447:	scas   eax,DWORD PTR es:[edi]
  41b448:	pusha  
  41b449:	mov    ds:0x8aeec1ac,eax
  41b44e:	sar    DWORD PTR [esi],0x88
  41b451:	add    eax,0xb00591c
  41b456:	jmp    0x9a48:0xb600bfef
  41b45d:	add    DWORD PTR [esp+ebx*4],edx
  41b460:	mov    ds:0xe2def096,eax
  41b465:	mov    ds:0x83e312f5,eax
  41b46a:	push   edi
  41b46b:	rol    DWORD PTR [edi+0x25d26a0c],cl
  41b471:	and    BYTE PTR [eax],0x2
  41b474:	and    DWORD PTR ds:0x56de0784,esp
  41b47a:	out    0x8c,eax
  41b47c:	jp     0x41b49a
  41b47e:	push   esi
  41b47f:	jmp    0xfa0a:0xac590244
  41b486:	fcomp  DWORD PTR [ecx]
  41b488:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b489:	jg     0x41b507
  41b48b:	or     al,0xf7
  41b48d:	pop    ecx
  41b48e:	fiadd  DWORD PTR [ebx-0x18e062f8]
  41b494:	mov    eax,ds:0x1c0c7c4e
  41b499:	xchg   esp,eax
  41b49a:	or     eax,0x1a22dd8
  41b49f:	(bad)  
  41b4a0:	xor    BYTE PTR [edx],ah
  41b4a2:	and    eax,0xf214ad0d
  41b4a7:	imul   bh
  41b4a9:	or     dl,BYTE PTR [ebx]
  41b4ab:	sar    bh,0xb0
  41b4ae:	push   cs
  41b4af:	(bad)  
  41b4b0:	das    
  41b4b1:	inc    edx
  41b4b2:	xor    ebx,eax
  41b4b4:	popa   
  41b4b5:	(bad)  
  41b4b6:	pop    ebx
  41b4b7:	adc    BYTE PTR [esi-0x4b],ch
  41b4ba:	pop    ebp
  41b4bb:	lahf   
  41b4bc:	jl     0x41b503
  41b4be:	push   0x84089add
  41b4c3:	mov    bh,0xcc
  41b4c5:	imul   ebx,edi,0xffffffe2
  41b4c8:	adc    ah,al
  41b4ca:	sub    al,0x0
  41b4cc:	xchg   edi,eax
  41b4cd:	daa    
  41b4ce:	cwde   
  41b4cf:	push   edi
  41b4d0:	mov    al,ch
  41b4d2:	std    
  41b4d3:	ror    DWORD PTR [esi],cl
  41b4d5:	out    dx,al
  41b4d6:	(bad)  
  41b4d7:	fbld   TBYTE PTR [ebx+eax*1+0x4658a11c]
  41b4de:	jns    0x41b4bb
  41b4e0:	clc    
  41b4e1:	hlt    
  41b4e2:	cmp    ah,al
  41b4e4:	push   ecx
  41b4e5:	and    ah,al
  41b4e7:	add    al,bh
  41b4e9:	fs repz data16 arpl dx,di
  41b4ee:	out    dx,eax
  41b4ef:	repnz sbb al,BYTE PTR [ebp-0x39]
  41b4f3:	stos   DWORD PTR es:[edi],eax
  41b4f4:	pop    edx
  41b4f5:	arpl   cx,si
  41b4f7:	mov    DWORD PTR [edx+eiz*4-0x27],ebp
  41b4fb:	pop    ebx
  41b4fc:	pop    eax
  41b4fd:	sbb    ebp,esp
  41b4ff:	loop   0x41b50e
  41b501:	or     DWORD PTR [edi],ebx
  41b503:	ins    DWORD PTR es:[edi],dx
  41b504:	mov    eax,0xecd21366
  41b509:	mov    ah,0xd7
  41b50b:	je     0x41b527
  41b50d:	sub    bl,BYTE PTR [edx]
  41b50f:	jnp    0x41b4c8
  41b511:	jp     0x41b508
  41b513:	sbb    al,0xff
  41b515:	pop    ebx
  41b516:	pop    esp
  41b517:	push   ss
  41b518:	push   ebx
  41b519:	mov    esp,DWORD PTR [ecx]
  41b51b:	xchg   ecx,eax
  41b51c:	or     DWORD PTR [edi+0x7a29531d],eax
  41b522:	jl     0x41b550
  41b524:	iret   
  41b525:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b526:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b527:	(bad)  
  41b528:	push   ecx
  41b529:	push   edx
  41b52a:	lods   al,BYTE PTR ds:[esi]
  41b52b:	cmp    eax,0xad59d7da
  41b530:	add    eax,0x827c1740
  41b535:	scas   eax,DWORD PTR es:[edi]
  41b536:	adc    ecx,edi
  41b538:	fs jnp 0x41b4db
  41b53b:	inc    edx
  41b53c:	jno    0x41b59a
  41b53e:	sub    DWORD PTR [edi+eax*4],edx
  41b541:	push   eax
  41b542:	adc    DWORD PTR [ebx],ebp
  41b544:	call   0x9c849c3e
  41b549:	addr16 daa 
  41b54b:	lock xchg edx,eax
  41b54d:	int    0xcf
  41b54f:	leave  
  41b550:	and    ch,BYTE PTR [ecx-0x18]
  41b553:	or     DWORD PTR [edi+0x16],0x49a76966
  41b55a:	retf   0x9c9d
  41b55d:	shr    DWORD PTR [esi],0x50
  41b560:	mov    ebp,0xa9d66879
  41b565:	sbb    BYTE PTR [ebx-0x470f672b],0xf6
  41b56c:	pusha  
  41b56d:	mov    esi,0xddc0528c
  41b572:	mov    cl,0x5d
  41b574:	xchg   ebx,eax
  41b575:	(bad)  
  41b576:	nop
  41b577:	popf   
  41b578:	jmp    0x3075cd38
  41b57d:	(bad)  
  41b57e:	xchg   ebp,eax
  41b57f:	popa   
  41b580:	and    dh,dh
  41b582:	or     al,0x37
  41b584:	stc    
  41b585:	outs   dx,DWORD PTR ds:[esi]
  41b586:	jno    0x41b595
  41b588:	icebp  
  41b589:	imul   edx,ecx,0xe5cc0b87
  41b58f:	pop    ebx
  41b590:	cld    
  41b591:	push   cs
  41b592:	or     bh,BYTE PTR [esi]
  41b594:	loope  0x41b604
  41b596:	jg     0x41b5ab
  41b598:	retf   0x8705
  41b59b:	xchg   ebp,eax
  41b59c:	and    cl,BYTE PTR [edx+0x18]
  41b59f:	retf   
  41b5a0:	xor    al,0x1c
  41b5a2:	pusha  
  41b5a3:	bound  edi,QWORD PTR [edi+0x2a96fde7]
  41b5a9:	jno    0x41b583
  41b5ab:	mov    dh,0x42
  41b5ad:	mov    ah,0x89
  41b5af:	push   ebx
  41b5b0:	and    ah,al
  41b5b2:	les    ecx,FWORD PTR [edi]
  41b5b4:	jle    0x41b54f
  41b5b6:	(bad)  
  41b5b8:	jmp    0xbe638fc
  41b5bd:	arpl   WORD PTR [edi],cx
  41b5bf:	scas   eax,DWORD PTR es:[edi]
  41b5c0:	pop    ecx
  41b5c1:	jns    0x41b565
  41b5c3:	iret   
  41b5c4:	test   BYTE PTR [ecx+eiz*8],0x96
  41b5c8:	lea    esp,[ecx-0x8]
  41b5cb:	cld    
  41b5cc:	xor    eax,0xbfb89988
  41b5d1:	outs   dx,DWORD PTR ds:[esi]
  41b5d2:	mov    edi,0x1de5bfb9
  41b5d7:	xchg   edi,eax
  41b5d8:	neg    BYTE PTR [edi]
  41b5da:	in     al,0x52
  41b5dc:	xchg   esi,eax
  41b5dd:	stos   BYTE PTR es:[edi],al
  41b5de:	jl     0x41b5c7
  41b5e0:	arpl   di,sp
  41b5e2:	mov    eax,esi
  41b5e4:	mov    esp,ebx
  41b5e6:	xchg   edi,eax
  41b5e7:	jbe    0x41b5db
  41b5e9:	jmp    FWORD PTR [edi-0x20]
  41b5ec:	push   0xa1c19de6
  41b5f1:	call   0x47fba941
  41b5f6:	popa   
  41b5f7:	sbb    bh,BYTE PTR [ebx-0x48]
  41b5fa:	xchg   edx,eax
  41b5fb:	lods   eax,DWORD PTR ds:[esi]
  41b5fc:	push   ds
  41b5fd:	mov    ebp,0x5b932dcf
  41b602:	xchg   ebx,eax
  41b603:	pop    es
  41b604:	push   0xd
  41b606:	mov    bl,BYTE PTR [ebx]
  41b608:	hlt    
  41b609:	add    eax,0xd6377883
  41b60e:	sub    dh,BYTE PTR [ebx+ecx*8]
  41b611:	and    esp,esi
  41b613:	fsubr  DWORD PTR [edx-0x18f7051d]
  41b619:	call   0x3b99:0xcc498a5d
  41b620:	dec    eax
  41b621:	jecxz  0x41b5db
  41b623:	lods   al,BYTE PTR ds:[esi]
  41b624:	dec    esp
  41b625:	not    BYTE PTR [edi]
  41b627:	stos   BYTE PTR es:[edi],al
  41b628:	jmp    0xa8aaa47b
  41b62d:	sub    al,0x7c
  41b62f:	loopne 0x41b69e
  41b631:	fiadd  WORD PTR [ebx+esi*2-0x506d3bdd]
  41b638:	xchg   edx,eax
  41b639:	push   eax
  41b63a:	or     eax,0x25d47d2
  41b63f:	imul   edx,DWORD PTR [edi+esi*2-0x28],0x204df40e
  41b647:	jle    0x41b686
  41b649:	jecxz  0x41b65a
  41b64b:	push   ds
  41b64c:	adc    eax,0x89b76db6
  41b651:	xor    BYTE PTR [ebp-0x2b8f6477],cl
  41b657:	jo     0x41b6af
  41b659:	inc    esp
  41b65a:	test   al,0xf3
  41b65c:	and    al,0xf
  41b65e:	adc    eax,0x90592e03
  41b663:	(bad)  
  41b664:	outs   dx,BYTE PTR ds:[esi]
  41b665:	push   esp
  41b666:	outs   dx,DWORD PTR ds:[esi]
  41b667:	jb     0x41b6e8
  41b669:	adc    esi,DWORD PTR ds:0x315f4bae
  41b66f:	xlat   BYTE PTR ds:[ebx]
  41b670:	hlt    
  41b671:	bound  edi,QWORD PTR [ebx]
  41b673:	aam    0x64
  41b675:	retf   0x5bb8
  41b678:	iret   
  41b679:	mov    ss,esp
  41b67b:	xchg   edi,eax
  41b67c:	iret   
  41b67d:	pop    ss
  41b67e:	mov    eax,0x60396f75
  41b683:	sub    edi,DWORD PTR [ebx-0x44201866]
  41b689:	ins    BYTE PTR es:[edi],dx
  41b68a:	inc    esi
  41b68b:	sbb    BYTE PTR [ebx+0x21],al
  41b68e:	push   edx
  41b68f:	aaa    
  41b690:	rcl    ebp,0x5c
  41b693:	pop    ecx
  41b694:	lds    ebp,FWORD PTR [edi+0x7e]
  41b697:	pop    es
  41b698:	mov    edi,0x950abbef
  41b69d:	jp     0x41b6a1
  41b69f:	iret   
  41b6a0:	push   gs
  41b6a2:	in     al,0x18
  41b6a4:	xor    bh,BYTE PTR [ebx]
  41b6a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6a7:	in     al,0x23
  41b6a9:	mov    ah,0xcd
  41b6ab:	push   esi
  41b6ac:	jg     0x41b64c
  41b6ae:	sub    ebx,edi
  41b6b0:	mov    al,0xa9
  41b6b2:	xchg   edx,eax
  41b6b3:	lahf   
  41b6b4:	mov    eax,0x387991bc
  41b6b9:	push   ss
  41b6ba:	fs into 
  41b6bc:	mov    ebp,0x124fed5c
  41b6c1:	mov    ch,0x74
  41b6c3:	call   FWORD PTR [esi-0x61]
  41b6c6:	sahf   
  41b6c7:	add    edx,DWORD PTR [eax-0x5410f98]
  41b6cd:	sub    dl,BYTE PTR [edi-0x20]
  41b6d0:	and    eax,0x1fe28836
  41b6d5:	add    al,0x25
  41b6d7:	xor    eax,0xc591cb7
  41b6dc:	sti    
  41b6dd:	das    
  41b6de:	dec    eax
  41b6df:	retf   
  41b6e0:	in     eax,0x27
  41b6e2:	loope  0x41b74b
  41b6e4:	std    
  41b6e5:	inc    edi
  41b6e6:	and    edx,esp
  41b6e8:	jge    0x41b6e3
  41b6ea:	and    ebx,DWORD PTR [eax+ecx*4+0x1b]
  41b6ee:	fcom   DWORD PTR [edx]
  41b6f0:	addr16 gs iret 
  41b6f3:	imul   esp,esi,0x7cd656f9
  41b6f9:	dec    ecx
  41b6fa:	jmp    0x7f2:0x4bd968e2
  41b701:	rol    DWORD PTR [edi+0x40],1
  41b704:	mov    DWORD PTR [ecx-0x4],0x6afdcf5
  41b70b:	mov    BYTE PTR [ecx+0x2aa58485],al
  41b711:	out    dx,eax
  41b712:	xchg   BYTE PTR es:[eax],bl
  41b715:	inc    esi
  41b716:	(bad)  
  41b717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b718:	enter  0x238f,0x6a
  41b71c:	sub    ch,ah
  41b71e:	jge    0x41b6a9
  41b720:	sbb    al,0x7d
  41b722:	mov    ah,0x4d
  41b724:	add    eax,0x47d0beb5
  41b729:	pop    ds
  41b72a:	and    ch,BYTE PTR [edx+0x1]
  41b72d:	push   esi
  41b72e:	sti    
  41b72f:	test   al,0xd4
  41b731:	pop    edi
  41b732:	outs   dx,BYTE PTR ds:[esi]
  41b733:	inc    ecx
  41b734:	fisubr WORD PTR [edi-0x6f]
  41b737:	sbb    DWORD PTR [edx],0xffffffeb
  41b73a:	mov    al,0x1e
  41b73c:	dec    esp
  41b73d:	lock pop es
  41b73f:	stos   DWORD PTR es:[edi],eax
  41b740:	or     BYTE PTR [edx],bh
  41b742:	cli    
  41b743:	mov    ds:0xb89ef839,eax
  41b748:	aam    0x3c
  41b74a:	call   DWORD PTR [ecx]
  41b74c:	ja     0x41b6f7
  41b74e:	loopne 0x41b6f4
  41b750:	cwde   
  41b751:	ret    
  41b752:	push   ebx
  41b753:	inc    eax
  41b754:	mov    ebp,0xc97bf150
  41b759:	dec    edi
  41b75a:	mov    esi,0x60ac1b28
  41b75f:	mov    ah,0x7b
  41b761:	sbb    DWORD PTR [edi+0x8],eax
  41b764:	adc    BYTE PTR [ebx-0x50],ah
  41b767:	call   0x99bb7bde
  41b76c:	sbb    dh,dh
  41b76e:	jnp    0x41b724
  41b770:	pop    edi
  41b771:	mov    ebp,0xfe6f5568
  41b776:	frstor [edx-0x287a8720]
  41b77c:	addr16 enter 0xd231,0x6a
  41b781:	je     0x41b7bc
  41b783:	inc    esp
  41b784:	or     eax,0x267564d1
  41b789:	cmova  ebp,esi
  41b78c:	loope  0x41b808
  41b78e:	bound  ecx,QWORD PTR [eax-0x28d05cdd]
  41b794:	mov    ebp,0x3fa7f856
  41b799:	test   bh,dh
  41b79b:	fnstenv [edx]
  41b79d:	stos   DWORD PTR es:[edi],eax
  41b79e:	bound  eax,QWORD PTR [edi]
  41b7a0:	fnstenv [esp-0x6d701d09]
  41b7a7:	gs loope 0x41b810
  41b7aa:	ss aam 0xb8
  41b7ad:	lods   al,BYTE PTR ds:[esi]
  41b7ae:	mov    DWORD PTR [ecx+0x69df00f],ecx
  41b7b4:	push   eax
  41b7b5:	sub    BYTE PTR [edi+0x38b38169],cl
  41b7bb:	push   0x3b
  41b7bd:	push   ds
  41b7be:	adc    al,0x17
  41b7c0:	inc    ecx
  41b7c1:	inc    edx
  41b7c2:	bound  eax,QWORD PTR [edi+0xe]
  41b7c5:	sub    al,0x46
  41b7c7:	add    eax,0x67be1d78
  41b7cc:	test   DWORD PTR [esi+0x14b5d786],edi
  41b7d2:	inc    esp
  41b7d3:	pop    ebp
  41b7d4:	js     0x41b84a
  41b7d6:	inc    edi
  41b7d7:	mov    BYTE PTR cs:[edx+edi*4],ah
  41b7db:	cmp    DWORD PTR [edi+0x37d4154c],0xb175e569
  41b7e5:	aaa    
  41b7e6:	push   eax
  41b7e7:	add    eax,0x493a12c5
  41b7ec:	jp     0x41b7b7
  41b7ee:	call   0x6613df81
  41b7f3:	shr    edi,0x1
  41b7f6:	mov    ah,0xf8
  41b7f8:	ins    BYTE PTR es:[edi],dx
  41b7f9:	cli    
  41b7fa:	in     al,0xdf
  41b7fc:	jb     0x41b79e
  41b7fe:	mov    BYTE PTR [ebp-0xa],bh
  41b801:	pop    ebx
  41b802:	out    0xa4,eax
  41b804:	push   es
  41b805:	jbe    0x41b79b
  41b807:	into   
  41b808:	jge    0x41b834
  41b80a:	pop    ds
  41b80b:	mov    esp,0xb7c2b9fd
  41b810:	das    
  41b811:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b812:	jp     0x41b7c2
  41b814:	outs   dx,DWORD PTR ds:[esi]
  41b815:	or     DWORD PTR [edx+0x1667fbee],0xffffffcf
  41b81c:	shr    BYTE PTR [eax-0x5],1
  41b81f:	cdq    
  41b820:	push   ss
  41b821:	int3   
  41b822:	cmp    edi,esi
  41b824:	pop    ebx
  41b825:	das    
  41b826:	adc    esp,esp
  41b828:	mov    ebx,0x979ba9ef
  41b82d:	lahf   
  41b82e:	mov    DWORD PTR [edx-0x29cce8ed],ecx
  41b834:	jge    0x41b7fe
  41b836:	push   ebp
  41b837:	lea    ecx,[esi-0x2d]
  41b83a:	ins    BYTE PTR es:[edi],dx
  41b83b:	ja     0x41b7c3
  41b83d:	(bad)  
  41b83e:	mov    edi,0x4b80ab0e
  41b843:	push   0x3931cf3a
  41b848:	pop    esp
  41b849:	and    DWORD PTR [edx+edi*2-0x65369d7a],esi
  41b850:	push   esi
  41b851:	adc    eax,0x1add5310
  41b856:	out    0xa5,al
  41b858:	add    al,0x28
  41b85a:	jmp    0x8942:0xb3e30ff9
  41b861:	aam    0x82
  41b863:	jle    0x41b819
  41b865:	mov    bl,0x7c
  41b867:	leave  
  41b868:	aas    
  41b869:	out    0x3d,eax
  41b86b:	fmulp  st(6),st
  41b86d:	mov    al,ds:0x245fdf28
  41b872:	add    al,0x59
  41b874:	clc    
  41b875:	in     eax,0xf
  41b877:	test   eax,0xaa6445be
  41b87c:	daa    
  41b87d:	aad    0xf5
  41b87f:	div    BYTE PTR [ebx+0x5e4d4cc1]
  41b885:	pop    eax
  41b886:	test   eax,0xefd6ee90
  41b88b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b88c:	fcom   st(2)
  41b88e:	lahf   
  41b88f:	mov    ah,0xf
  41b891:	cmp    al,0xfd
  41b893:	mov    ch,0xa2
  41b895:	jmp    FWORD PTR [esi+0x11]
  41b898:	(bad)  
  41b89a:	adc    bl,BYTE PTR ds:0x2ce6dcb8
  41b8a0:	retf   
  41b8a1:	adc    ebx,DWORD PTR [edx]
  41b8a3:	or     al,0x9b
  41b8a5:	call   0xbf3d:0xeb76823c
  41b8ac:	dec    ebp
  41b8ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8ae:	mov    ds:0x3093744a,al
  41b8b3:	jmp    0x561fd25c
  41b8b8:	mov    dl,0x23
  41b8ba:	shl    BYTE PTR [ebx+0x5d84956e],cl
  41b8c0:	pop    edi
  41b8c1:	mov    ah,BYTE PTR [edi-0x6569c2ee]
  41b8c7:	cmc    
  41b8c8:	fdivr  QWORD PTR [eax]
  41b8ca:	sub    al,0x48
  41b8cc:	xor    al,0xb2
  41b8ce:	(bad)  
  41b8cf:	fild   WORD PTR [ebx]
  41b8d1:	iret   
  41b8d2:	add    eax,0xf5b58ffe
  41b8d7:	mov    eax,0xa70246ed
  41b8dc:	xchg   esp,eax
  41b8dd:	push   ss
  41b8de:	xor    al,BYTE PTR [edi+edi*2]
  41b8e1:	jle    0x41b92a
  41b8e3:	fst    DWORD PTR [eax-0x168bb86f]
  41b8e9:	in     eax,0x75
  41b8eb:	int    0xc
  41b8ed:	js     0x41b8fd
  41b8ef:	push   esi
  41b8f0:	push   ecx
  41b8f1:	push   ss
  41b8f2:	fs ret 0x8ada
  41b8f6:	and    ch,cl
  41b8f8:	ftst   
  41b8fa:	add    BYTE PTR [ebx+0x6b44acde],dl
  41b900:	repz aas 
  41b902:	call   0xa9403954
  41b907:	pop    es
  41b908:	fcom   DWORD PTR [edi]
  41b90a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b90b:	das    
  41b90c:	lahf   
  41b90d:	(bad)  
  41b90e:	and    DWORD PTR [ecx+ebx*2+0x35],esp
  41b912:	stc    
  41b913:	add    BYTE PTR [ecx+0x620b1771],ah
  41b919:	outs   dx,BYTE PTR ds:[esi]
  41b91a:	sahf   
  41b91b:	outs   dx,DWORD PTR ds:[esi]
  41b91c:	pop    ebx
  41b91d:	jne    0x41b8a4
  41b91f:	mov    BYTE PTR [ebx+esi*2],bl
  41b922:	jb     0x41b945
  41b924:	scas   eax,DWORD PTR es:[edi]
  41b925:	adc    bl,BYTE PTR [edi+ecx*2]
  41b928:	icebp  
  41b929:	loopne 0x41b8ff
  41b92b:	mov    esi,0xc1881826
  41b930:	js     0x41b929
  41b932:	sahf   
  41b933:	xchg   esp,eax
  41b934:	(bad)  
  41b935:	dec    ecx
  41b936:	xor    eax,0x75dcd0a
  41b93b:	pop    esi
  41b93c:	xchg   ecx,eax
  41b93d:	shl    DWORD PTR [ecx-0x590cf7d2],1
  41b943:	xchg   ebx,eax
  41b944:	jecxz  0x41b9b6
  41b946:	bound  esp,QWORD PTR [ebx+0x7f]
  41b949:	adc    ecx,DWORD PTR [ebx]
  41b94b:	mov    ebx,DWORD PTR [eax]
  41b94d:	mov    ebx,0x79b4e304
  41b952:	mov    eax,ds:0x6dd18275
  41b957:	in     eax,dx
  41b958:	sub    eax,0x77170001
  41b95d:	jae    0x41b979
  41b95f:	shr    BYTE PTR ss:[esi],cl
  41b962:	pop    ebp
  41b963:	sahf   
  41b964:	inc    edx
  41b965:	cmp    al,0xfc
  41b967:	mov    al,0x1f
  41b969:	push   eax
  41b96a:	xor    al,0x63
  41b96c:	(bad)  
  41b96d:	pop    ds
  41b96e:	test   BYTE PTR [eax-0x7bf6b8e4],0x3b
  41b975:	mov    ebx,DWORD PTR [esi+0x31d04e3e]
  41b97b:	(bad)  
  41b97c:	inc    esp
  41b97d:	jmp    0x8d03983f
  41b982:	shl    al,1
  41b984:	jo     0x41b910
  41b986:	(bad)  
  41b987:	(bad)  [ebp+ebp*8+0x3c]
  41b98b:	and    al,0xa5
  41b98d:	(bad)  
  41b98e:	jno    0x41b92b
  41b990:	mov    ebp,0x1bb7b06b
  41b995:	inc    ecx
  41b996:	mov    al,0x62
  41b998:	dec    ebp
  41b999:	add    esp,DWORD PTR [ebx-0x686174f0]
  41b99f:	mov    eax,ds:0x301d576a
  41b9a4:	aaa    
  41b9a5:	lock or BYTE PTR [edx],0x4d
  41b9a9:	jl     0x41b9be
  41b9ab:	push   eax
  41b9ac:	jecxz  0x41b9bd
  41b9ae:	sahf   
  41b9af:	call   0x71902f19
  41b9b4:	imul   esi,DWORD PTR [eax+0x7e0dea65],0x5b
  41b9bb:	popa   
  41b9bc:	add    eax,0x5889ee92
  41b9c1:	dec    di
  41b9c3:	pop    ss
  41b9c4:	lods   al,BYTE PTR ds:[esi]
  41b9c5:	dec    edi
  41b9c6:	pop    es
  41b9c7:	call   0x2bc7f608
  41b9cc:	lahf   
  41b9cd:	repz xchg ebx,eax
  41b9cf:	enter  0xff0c,0x25
  41b9d3:	push   edi
  41b9d4:	cmc    
  41b9d5:	jae    0x41b95b
  41b9d7:	test   BYTE PTR [edi-0x2b],ch
  41b9da:	or     eax,0x6e6a4bfb
  41b9df:	jl     0x41b972
  41b9e1:	mov    esi,0x4f56039
  41b9e6:	aas    
  41b9e7:	xor    DWORD PTR [ecx-0x5f87d135],esp
  41b9ed:	sbb    eax,0xdcda1822
  41b9f2:	adc    ah,BYTE PTR [eax+0x39]
  41b9f5:	sbb    al,0x22
  41b9f7:	add    ch,BYTE PTR [ebp-0x1f]
  41b9fa:	add    al,0xdc
  41b9fc:	retf   0xe5d3
  41b9ff:	sbb    esi,DWORD PTR [ebx]
  41ba01:	rcr    DWORD PTR [ebx-0x42],1
  41ba04:	ja     0x41b9fa
  41ba06:	or     eax,0x88c495c0
  41ba0b:	adc    dh,cl
  41ba0d:	outs   dx,BYTE PTR ds:[esi]
  41ba0e:	mov    WORD PTR [ebp+0x716eb2ac],fs
  41ba14:	fisub  WORD PTR [ecx+ecx*1+0x20eb0d5d]
  41ba1b:	or     ah,BYTE PTR [ebx-0x39ebf4d5]
  41ba21:	mov    al,0x78
  41ba23:	jbe    0x41ba98
  41ba25:	fstp   TBYTE PTR [ebx-0x467e2193]
  41ba2b:	mov    edi,0xd7632df6
  41ba30:	adc    eax,0x3883c525
  41ba35:	mov    ch,0x7d
  41ba37:	jp     0x41ba7f
  41ba39:	out    0x5d,al
  41ba3b:	out    0xe3,al
  41ba3d:	in     eax,dx
  41ba3e:	mov    al,ds:0x46961581
  41ba43:	loope  0x41ba49
  41ba45:	dec    esi
  41ba46:	das    
  41ba47:	fsubr  QWORD PTR [ebx-0x36026316]
  41ba4d:	sbb    eax,0x882bab1d
  41ba52:	loopne 0x41b9e4
  41ba54:	xor    al,0xe8
  41ba56:	in     al,dx
  41ba57:	mov    ecx,0x8f1c1737
  41ba5c:	(bad)  
  41ba5d:	cld    
  41ba5e:	ja     0x41bac8
  41ba60:	test   eax,0xca36d172
  41ba65:	dec    eax
  41ba66:	push   edx
  41ba67:	inc    edi
  41ba68:	imul   edx,DWORD PTR [ecx+0x5a],0xf301492
  41ba6f:	xchg   edi,eax
  41ba70:	jno    0x41bac3
  41ba72:	out    dx,al
  41ba73:	or     bh,ah
  41ba75:	push   ecx
  41ba76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba77:	pop    ecx
  41ba78:	(bad)  
  41ba79:	in     al,dx
  41ba7a:	fimul  DWORD PTR [edi-0x71]
  41ba7d:	jecxz  0x41ba10
  41ba7f:	mov    ds:0xc30c50f0,al
  41ba84:	dec    eax
  41ba85:	xchg   ebp,eax
  41ba86:	xchg   edi,eax
  41ba87:	mov    edi,0x38f3bea9
  41ba8c:	popf   
  41ba8d:	mov    dl,0x62
  41ba8f:	mov    bl,0xfc
  41ba91:	aaa    
  41ba92:	int3   
  41ba93:	cmpxchg DWORD PTR ds:0xa560acf5,esp
  41ba9a:	inc    esp
  41ba9b:	hlt    
  41ba9c:	pop    ss
  41ba9d:	and    BYTE PTR [eax+0x15],ch
  41baa0:	popf   
  41baa1:	ins    BYTE PTR es:[edi],dx
  41baa2:	xchg   ebx,eax
  41baa3:	add    edi,DWORD PTR [ecx+0xe72e205]
  41baa9:	ret    0x3db4
  41baac:	into   
  41baad:	inc    edi
  41baae:	jb     0x41bab6
  41bab0:	imul   DWORD PTR fs:[eax]
  41bab3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bab4:	into   
  41bab5:	aas    
  41bab6:	arpl   WORD PTR ss:[ebp-0x2],cx
  41baba:	xor    eax,0xb6679f3
  41babf:	cwde   
  41bac0:	sahf   
  41bac1:	lahf   
  41bac2:	add    BYTE PTR [edx+0x43],0x1b
  41bac6:	shl    eax,0xbc
  41bac9:	shr    BYTE PTR [eax-0x33cf8661],0x99
  41bad0:	scas   al,BYTE PTR es:[edi]
  41bad1:	sahf   
  41bad2:	retf   0xe476
  41bad5:	push   esp
  41bad6:	or     al,0x72
  41bad8:	imul   edx,DWORD PTR [edx+eax*8+0x75775536],0xffffffd0
  41bae0:	cdq    
  41bae1:	stc    
  41bae2:	mov    ah,0xf8
  41bae4:	mov    ds:0xfb9df7c8,al
  41bae9:	dec    edx
  41baea:	in     eax,0x8c
  41baec:	loope  0x41ba76
  41baee:	imul   eax,DWORD PTR [ecx+eax*2+0x4a],0x5ce4b408
  41baf6:	mov    ah,0x55
  41baf8:	xor    DWORD PTR [ebp-0x24],esp
  41bafb:	add    al,0x88
  41bafd:	cmp    esp,DWORD PTR [esi-0x57]
  41bb00:	pop    eax
  41bb01:	cmp    ch,BYTE PTR [ebx]
  41bb03:	add    edi,DWORD PTR [ebp+0x67ddf167]
  41bb09:	mov    ebp,DWORD PTR [ebp-0x76]
  41bb0c:	int3   
  41bb0d:	jmp    0x53411c34
  41bb12:	ret    0xe4f3
  41bb15:	and    al,0x1b
  41bb17:	stos   BYTE PTR es:[edi],al
  41bb18:	mov    al,ds:0xb0aa2a5b
  41bb1d:	jbe    0x41bb91
  41bb1f:	add    BYTE PTR [edi-0x6b],0xe0
  41bb23:	addr16 xor dl,cl
  41bb26:	sahf   
  41bb27:	cmp    edi,edx
  41bb29:	std    
  41bb2a:	inc    esi
  41bb2c:	mov    ecx,0xc5831cde
  41bb31:	ins    DWORD PTR es:[edi],dx
  41bb32:	jl     0x41bb20
  41bb34:	mov    BYTE PTR [edx-0x64c1d69f],dl
  41bb3a:	sahf   
  41bb3b:	into   
  41bb3c:	jno    0x41bb6c
  41bb3e:	je     0x41bbb0
  41bb40:	inc    esp
  41bb41:	cwde   
  41bb42:	xchg   ecx,eax
  41bb43:	push   edi
  41bb44:	xor    eax,0x8450dcab
  41bb49:	mov    eax,0x1f050dbd
  41bb4e:	pop    es
  41bb4f:	outs   dx,BYTE PTR ds:[esi]
  41bb50:	(bad)  
  41bb51:	xor    bh,bl
  41bb53:	cmp    eax,0xd195581a
  41bb58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb59:	mov    ebx,0x1fda94bd
  41bb5e:	push   eax
  41bb5f:	addr16 call 0x10c85b68
  41bb65:	test   ebp,0x307c91ed
  41bb6b:	and    ch,BYTE PTR [edi+ebp*2-0x72]
  41bb6f:	sub    DWORD PTR [ebx],edx
  41bb71:	jbe    0x41bb26
  41bb73:	aas    
  41bb74:	sub    BYTE PTR [ebx-0x3f],dl
  41bb77:	add    al,0xb1
  41bb79:	jp     0x41bbc9
  41bb7b:	fist   DWORD PTR [ebp-0xc]
  41bb7e:	pop    eax
  41bb7f:	sub    al,BYTE PTR [ecx]
  41bb81:	inc    ecx
  41bb82:	or     al,0x14
  41bb84:	jae    0x41bb06
  41bb86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb87:	imul   edi,DWORD PTR [edx-0x7160ce51],0x1f
  41bb8e:	les    ebp,FWORD PTR [edi]
  41bb90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb91:	in     al,0xfa
  41bb93:	dec    ecx
  41bb94:	pop    eax
  41bb95:	ror    BYTE PTR [ecx+0x2eebb0d9],1
  41bb9b:	or     cl,dl
  41bb9d:	sub    eax,0x8c416104
  41bba2:	ja     0x41bb7a
  41bba4:	retf   0x8089
  41bba7:	mov    bh,bh
  41bba9:	imul   eax,DWORD PTR [ebp+0x4d502304],0x28
  41bbb0:	mov    bh,0x95
  41bbb2:	or     esp,eax
  41bbb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbb5:	pop    es
  41bbb6:	gs push esp
  41bbb8:	mov    esp,0xe78c35bc
  41bbbd:	fnsave [esi-0x6b]
  41bbc0:	push   ds
  41bbc1:	or     BYTE PTR [ecx+0x4a428e3f],0x6f
  41bbc8:	fsubr  st,st(6)
  41bbca:	fisubr DWORD PTR [esi-0x4d]
  41bbcd:	and    al,0x49
  41bbcf:	mov    ch,0x1b
  41bbd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbd2:	sbb    al,0x6d
  41bbd4:	(bad)  
  41bbd5:	jmp    0xe693:0x2e0d94d7
  41bbdc:	ins    BYTE PTR es:[edi],dx
  41bbdd:	int    0x76
  41bbdf:	rol    DWORD PTR [ecx*1+0x4f82df16],0x1f
  41bbe7:	mov    ebx,0x8d9d8221
  41bbec:	sub    ebx,esi
  41bbee:	jmp    0x4f4a:0xe763002
  41bbf5:	fcom   QWORD PTR [eax+0x11]
  41bbf8:	mov    eax,cs:0xd92541d1
  41bbfe:	jbe    0x41bbd5
  41bc00:	mov    edi,0x5e8ad750
  41bc05:	outs   dx,DWORD PTR ds:[esi]
  41bc06:	repz into 
  41bc08:	imul   esi,DWORD PTR [ebp-0xc6549f9],0x44e75236
  41bc12:	push   edi
  41bc13:	xor    BYTE PTR [ecx],bl
  41bc15:	outs   dx,DWORD PTR ds:[esi]
  41bc16:	sub    DWORD PTR [esp+edi*4+0x37],0x69
  41bc1b:	pop    ds
  41bc1c:	stos   DWORD PTR es:[edi],eax
  41bc1d:	pop    esp
  41bc1e:	outs   dx,DWORD PTR ds:[esi]
  41bc1f:	jg     0x41bc4f
  41bc21:	xor    BYTE PTR [ebx],bh
  41bc23:	push   esi
  41bc24:	xor    al,0xed
  41bc26:	jecxz  0x41bc3c
  41bc28:	sub    eax,ebx
  41bc2a:	cmp    dh,bl
  41bc2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc2d:	add    BYTE PTR [ebx+edi*8],ah
  41bc30:	jns    0x41bca6
  41bc32:	xchg   edx,eax
  41bc33:	sbb    ebp,DWORD PTR ds:0x64e509cc
  41bc39:	pop    esi
  41bc3a:	cld    
  41bc3b:	outs   dx,DWORD PTR ds:[esi]
  41bc3c:	lahf   
  41bc3d:	shr    ecx,cl
  41bc3f:	sar    BYTE PTR [edx+ecx*1-0x10422060],0xce
  41bc47:	xchg   esi,eax
  41bc48:	ror    BYTE PTR [eax],0xfb
  41bc4b:	ror    DWORD PTR [edi-0x4c],cl
  41bc4e:	call   0xf4e56ca8
  41bc53:	push   eax
  41bc54:	jl     0x41bc5e
  41bc56:	mov    edi,DWORD PTR [ebp+0x395fe9d4]
  41bc5c:	arpl   WORD PTR [ecx-0x70821604],sp
  41bc62:	pop    ss
  41bc63:	and    ah,BYTE PTR [eax]
  41bc65:	cmp    eax,0xba196321
  41bc6a:	mov    WORD PTR [ecx+0x75],ds
  41bc6d:	push   esi
  41bc6e:	xchg   ecx,eax
  41bc6f:	mov    ebx,esp
  41bc71:	hlt    
  41bc72:	add    BYTE PTR [ebx-0x2],bl
  41bc75:	mov    dl,0x66
  41bc77:	adc    eax,0x35e89143
  41bc7c:	js     0x41bccd
  41bc7e:	fidivr WORD PTR [edi-0x56]
  41bc81:	fwait
  41bc82:	xlat   BYTE PTR ds:[ebx]
  41bc83:	sbb    dh,BYTE PTR [ebx-0x36bb4a36]
  41bc89:	push   eax
  41bc8a:	add    BYTE PTR [edx],al
  41bc8c:	icebp  
  41bc8d:	inc    ebx
  41bc8e:	pop    ss
  41bc8f:	mov    ebp,0x7678b157
  41bc94:	mov    ebx,0xe16155a2
  41bc99:	int    0x6f
  41bc9b:	cld    
  41bc9c:	or     bh,BYTE PTR [ebx+0x69f3c72f]
  41bca2:	xor    al,0x31
  41bca4:	jmp    0x4e04cd49
  41bca9:	aad    0x3b
  41bcab:	adc    BYTE PTR [ebp+0x22a6a31b],bl
  41bcb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcb2:	ss fcmovne st,st(4)
  41bcb5:	fild   QWORD PTR [eax-0x38]
  41bcb8:	not    BYTE PTR [eax-0x407132e2]
  41bcbe:	ins    BYTE PTR es:[edi],dx
  41bcbf:	mov    ah,0x2f
  41bcc1:	outs   dx,DWORD PTR cs:[esi]
  41bcc3:	ret    0x918c
  41bcc6:	adc    eax,0x916324f0
  41bccb:	xchg   ecx,eax
  41bccc:	imul   esp,eax,0xffffffad
  41bccf:	lods   eax,DWORD PTR ds:[esi]
  41bcd0:	mov    ch,0xb8
  41bcd2:	and    BYTE PTR [esi-0xe32761c],ch
  41bcd8:	jg     0x41bcac
  41bcda:	imul   ecx,DWORD PTR [edx+0x24],0x984c4b8f
  41bce1:	add    BYTE PTR [ebx],ch
  41bce3:	mov    esp,0x1c98f2a3
  41bce8:	leave  
  41bce9:	pop    es
  41bcea:	repnz fistp WORD PTR ds:0xa13c9bb5
  41bcf1:	add    bh,cl
  41bcf3:	cmp    ah,dh
  41bcf5:	ret    
  41bcf6:	push   0x34796a01
  41bcfb:	sbb    eax,0x7a41645d
  41bd00:	cwde   
  41bd01:	dec    ebx
  41bd02:	adc    ebp,DWORD PTR [edi-0x33]
  41bd05:	jl     0x41bcf9
  41bd07:	fild   WORD PTR [esi]
  41bd09:	shr    DWORD PTR [edi+0x75c3a726],1
  41bd0f:	imul   esi,ecx,0xa18d49ea
  41bd15:	stc    
  41bd16:	push   ss
  41bd17:	stos   BYTE PTR es:[edi],al
  41bd18:	xchg   esi,eax
  41bd19:	(bad)  
  41bd1a:	test   DWORD PTR [ebp+0x254ce250],0xae3b6946
  41bd24:	arpl   WORD PTR [edx+0x62c1a4c9],di
  41bd2a:	mov    eax,0x3435b14a
  41bd2f:	cmp    esi,DWORD PTR [ebp+0x79]
  41bd32:	popa   
  41bd33:	les    ebx,FWORD PTR [esi+ebx*4+0x24717aac]
  41bd3a:	dec    eax
  41bd3b:	inc    eax
  41bd3c:	hlt    
  41bd3d:	xchg   ebx,eax
  41bd3e:	cdq    
  41bd3f:	scas   al,BYTE PTR es:[edi]
  41bd40:	add    BYTE PTR [eax-0x69],0x6
  41bd44:	mov    edi,0xb21d26cf
  41bd49:	and    ch,ch
  41bd4b:	xor    BYTE PTR [ebx+0x7c8ecee0],bh
  41bd51:	add    dl,BYTE PTR [ebx+0x51]
  41bd54:	push   0x5a39f70b
  41bd59:	rcr    bh,0xa5
  41bd5c:	das    
  41bd5d:	outs   dx,BYTE PTR ds:[esi]
  41bd5e:	sar    DWORD PTR [eax],cl
  41bd60:	shl    edi,0xd0
  41bd63:	jo     0x41bd30
  41bd65:	imul   edx,DWORD PTR [edi],0x2c
  41bd68:	lahf   
  41bd69:	inc    edi
  41bd6a:	dec    edi
  41bd6b:	pop    ebx
  41bd6c:	mov    ebx,0x18a74feb
  41bd71:	xor    al,0x7f
  41bd73:	xor    al,0xa0
  41bd75:	jg     0x41bd73
  41bd77:	dec    ecx
  41bd78:	clc    
  41bd79:	das    
  41bd7a:	in     al,dx
  41bd7b:	or     ah,al
  41bd7d:	inc    ebp
  41bd7e:	out    0x64,eax
  41bd80:	mov    ebx,0x9efa856c
  41bd85:	push   ds
  41bd86:	or     eax,0xb6816aee
  41bd8b:	cmp    dl,BYTE PTR [esi-0x17]
  41bd8e:	ss mov edi,0x968ff74c
  41bd94:	mov    edi,0xf3143273
  41bd99:	mov    eax,ds:0x81500a91
  41bd9e:	jns    0x41be1c
  41bda0:	and    al,0x5
  41bda2:	push   ss
  41bda3:	rcr    DWORD PTR [esi],cl
  41bda5:	jge    0x41bd40
  41bda7:	fs and al,0xec
  41bdaa:	rcr    BYTE PTR [ebx+0x855d381],0xbb
  41bdb1:	pusha  
  41bdb2:	clc    
  41bdb3:	fwait
  41bdb4:	sbb    DWORD PTR [ebx],ecx
  41bdb6:	les    ecx,FWORD PTR [ecx+0x5d]
  41bdb9:	loop   0x41bdc5
  41bdbb:	shl    ebx,0x5a
  41bdbe:	or     edx,ebx
  41bdc0:	xchg   esi,eax
  41bdc1:	mov    ch,0x31
  41bdc3:	out    dx,eax
  41bdc4:	xchg   edi,eax
  41bdc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdc6:	or     ah,ah
  41bdc8:	(bad)  
  41bdc9:	adc    al,0x42
  41bdcb:	inc    ebp
  41bdcc:	out    0x85,eax
  41bdce:	dec    ebx
  41bdcf:	adc    BYTE PTR [ebx+0x5a4d7d12],dl
  41bdd5:	cs in  al,0x0
  41bdd8:	sub    BYTE PTR [edx-0x18],bh
  41bddb:	je     0x41bde2
  41bddd:	sub    dh,BYTE PTR [ebx+ecx*8-0x5784a999]
  41bde4:	and    edx,ebp
  41bde6:	and    cl,bl
  41bde8:	cld    
  41bde9:	cmp    al,0xfd
  41bdeb:	inc    ebx
  41bdec:	fnstenv [esi-0x13b54e67]
  41bdf2:	loopne 0x41bd94
  41bdf4:	jl     0x41bde5
  41bdf6:	fistp  WORD PTR [edi+edx*4-0x21]
  41bdfa:	adc    DWORD PTR [eax],esi
  41bdfc:	icebp  
  41bdfd:	es add al,0x83
  41be00:	jne    0x41be2a
  41be02:	mov    DWORD PTR [ecx+0x68808800],ecx
  41be08:	outs   dx,DWORD PTR ds:[esi]
  41be09:	cmp    dh,dl
  41be0b:	inc    edx
  41be0c:	add    ah,BYTE PTR [eax]
  41be0e:	imul   edx,DWORD PTR [di],0x3ae92e77
  41be15:	dec    ebp
  41be16:	mov    al,0xc6
  41be18:	adc    edx,DWORD PTR [ebp-0xa]
  41be1b:	inc    esi
  41be1c:	je     0x41be26
  41be1e:	call   DWORD PTR [eax-0x771258a3]
  41be24:	mov    cl,0xc
  41be26:	imul   eax,DWORD PTR [eax-0x76a3fb21],0xffffffab
  41be2d:	jb     0x41bdc9
  41be2f:	iret   
  41be30:	add    BYTE PTR [edx+0x7b1bd19b],ah
  41be36:	cmp    ah,BYTE PTR [edx+0x3a]
  41be39:	(bad)  
  41be3a:	test   eax,0x428a1e0e
  41be3f:	and    eax,0xbf06b625
  41be44:	call   0x4fec:0x28e68bd3
  41be4b:	leave  
  41be4c:	imul   ebx,DWORD PTR [ecx-0x4c],0xf0eb5dd5
  41be53:	xor    al,0x59
  41be55:	nop
  41be56:	int3   
  41be57:	mov    ebp,0x184d06dd
  41be5c:	lds    esp,FWORD PTR [edx+0x69]
  41be5f:	xchg   ah,dh
  41be61:	adc    eax,0xd9a89141
  41be66:	(bad)  
  41be67:	repnz icebp 
  41be69:	js     0x41be75
  41be6b:	adc    ch,BYTE PTR [ebx+0x249f06e5]
  41be71:	int    0x20
  41be73:	mov    cl,0x30
  41be75:	fs inc esp
  41be77:	xchg   esi,eax
  41be78:	clc    
  41be79:	xor    ecx,edx
  41be7b:	mov    edi,0x242c4cdd
  41be80:	(bad)
  41be84:	mov    ebp,0x46bba4b3
  41be89:	cs cmp eax,0xefcabe8f
  41be8f:	jg     0x41bebb
  41be91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be92:	out    dx,al
  41be93:	xchg   edi,eax
  41be94:	push   0x4a
  41be96:	dec    BYTE PTR [ebx]
  41be98:	(bad)  
  41be99:	jne    0x41be1f
  41be9b:	enter  0x9d36,0xf9
  41be9f:	sbb    dl,dh
  41bea1:	sbb    dh,BYTE PTR [esp+esi*8+0x4bf61ff7]
  41bea8:	adc    al,0x59
  41beaa:	xchg   esp,eax
  41beab:	lods   al,BYTE PTR ds:[esi]
  41beac:	cmp    al,0x52
  41beae:	leave  
  41beaf:	xchg   BYTE PTR [eax],bl
  41beb1:	push   ebx
  41beb2:	mov    gs,WORD PTR [esi+0x32]
  41beb5:	mov    esp,0xf812437
  41beba:	(bad)  
  41bebc:	aad    0x9f
  41bebe:	mov    eax,0xba315bb2
  41bec3:	jp     0x41be97
  41bec5:	add    DWORD PTR [edi],ebp
  41bec7:	icebp  
  41bec8:	test   DWORD PTR [ebp-0x3cf282aa],ebp
  41bece:	bound  ebp,QWORD PTR [ebx]
  41bed0:	test   BYTE PTR [ecx+0x24],bh
  41bed3:	inc    edi
  41bed4:	ret    
  41bed5:	or     bh,BYTE PTR [ebp-0x6d86e277]
  41bedb:	cmp    DWORD PTR ss:0xd9de4c80,ebx
  41bee2:	mov    bh,0xdc
  41bee4:	jbe    0x41be87
  41bee6:	ret    
  41bee7:	scas   al,BYTE PTR es:[edi]
  41bee8:	idiv   BYTE PTR [ebp+0x6255982]
  41beee:	push   ss
  41beef:	stc    
  41bef0:	test   al,0xa1
  41bef2:	lods   al,BYTE PTR ds:[esi]
  41bef3:	push   edi
  41bef4:	mov    ecx,0x2d714329
  41bef9:	ss push ecx
  41befb:	mov    edx,0x42297d3b
  41bf00:	hlt    
  41bf01:	out    dx,eax
  41bf02:	add    DWORD PTR [ebx-0x36],esi
  41bf05:	addr16 jno 0x41bf37
  41bf08:	call   DWORD PTR [ebx+ebx*8+0x251ae045]
  41bf0f:	dec    ecx
  41bf10:	in     al,dx
  41bf11:	jb     0x41bef8
  41bf13:	sbb    edx,DWORD PTR [esi]
  41bf15:	push   0x0
  41bf17:	mov    dh,0x9f
  41bf19:	sub    esi,ebp
  41bf1b:	sub    esi,DWORD PTR [ebp-0x43280813]
  41bf21:	mov    ecx,0xc9be8387
  41bf26:	sub    BYTE PTR [esi-0x4450dff4],ch
  41bf2c:	add    al,0xcb
  41bf2e:	fiadd  DWORD PTR [edi]
  41bf30:	inc    ebp
  41bf31:	jb     0x41bfa5
  41bf33:	in     al,dx
  41bf34:	mov    dl,0x90
  41bf36:	mov    ds:0xecb9a21,eax
  41bf3b:	shl    edi,cl
  41bf3d:	fnstenv [edi+0x46]
  41bf40:	loopne 0x41bf63
  41bf42:	add    BYTE PTR [ebx],bl
  41bf44:	sub    esp,DWORD PTR [ecx+0x46]
  41bf47:	daa    
  41bf48:	(bad)  
  41bf49:	jle    0x41beec
  41bf4b:	(bad)  
  41bf4c:	gs mov ebx,0x8b52e4f8
  41bf52:	fisttp WORD PTR [esi+0x58]
  41bf55:	je     0x41bf5a
  41bf57:	pop    eax
  41bf58:	and    eax,0xc7e0699
  41bf5d:	or     edi,DWORD PTR [edi]
  41bf5f:	xlat   BYTE PTR ds:[ebx]
  41bf60:	cmc    
  41bf61:	ss jae 0x41beee
  41bf64:	fwait
  41bf65:	mov    bl,ch
  41bf67:	cmp    edx,DWORD PTR [edi+0x21273a3a]
  41bf6d:	sbb    esp,DWORD PTR [esi+0x2e420a07]
  41bf73:	dec    ebp
  41bf74:	sub    BYTE PTR [esi+esi*2-0x2e14193d],cl
  41bf7b:	push   ebp
  41bf7c:	push   ds
  41bf7d:	test   al,0xb2
  41bf7f:	aad    0x20
  41bf81:	fstp   QWORD PTR [ecx+ebx*1]
  41bf84:	test   eax,0xd8d4b0c8
  41bf89:	sbb    DWORD PTR [edx],0x970dfcb7
  41bf8f:	pop    edx
  41bf90:	pop    ss
  41bf91:	fstp   DWORD PTR [ecx+0x448810d5]
  41bf97:	xor    ecx,ebx
  41bf99:	mov    cl,0xa1
  41bf9b:	(bad)  
  41bf9c:	push   esi
  41bf9d:	mov    ch,0x70
  41bf9f:	or     dl,cl
  41bfa1:	xor    BYTE PTR [ebp+0x1011aa3f],al
  41bfa7:	cmp    esp,DWORD PTR [esi]
  41bfa9:	cmc    
  41bfaa:	int    0x1c
  41bfac:	sbb    DWORD PTR [ebx-0x39],ebp
  41bfaf:	xor    al,0x69
  41bfb1:	add    al,0xb7
  41bfb3:	jbe    0x41bfeb
  41bfb5:	scas   al,BYTE PTR es:[edi]
  41bfb6:	xor    edi,DWORD PTR [esi+esi*2-0x6e]
  41bfba:	pop    ebp
  41bfbb:	mov    ds:0xf49340ea,eax
  41bfc0:	hlt    
  41bfc1:	mov    ds:0x51725327,al
  41bfc6:	sbb    al,0x71
  41bfc8:	fiadd  WORD PTR [ecx+0x2a68b96d]
  41bfce:	outs   dx,DWORD PTR ds:[esi]
  41bfcf:	imul   ebp,DWORD PTR [eax],0x56
  41bfd2:	sbb    edx,edx
  41bfd4:	xor    ecx,DWORD PTR [edx]
  41bfd6:	mov    esp,0x5a840db9
  41bfdb:	sub    al,0xd2
  41bfdd:	nop
  41bfde:	sbb    al,0xe9
  41bfe0:	sbb    DWORD PTR [eax-0x3f933dfc],eax
  41bfe6:	ja     0x41bf9a
  41bfe8:	popf   
  41bfe9:	jmp    0x3e5f:0x6e7050fe
  41bff0:	xchg   esi,eax
  41bff1:	dec    esp
  41bff2:	ins    DWORD PTR es:[edi],dx
  41bff3:	push   edi
  41bff4:	mov    al,ds:0xcad9859a
  41bff9:	pushf  
  41bffa:	or     eax,0x1ccb64c6
  41bfff:	xchg   BYTE PTR [esi-0x2c],dl
  41c002:	mov    eax,ds:0xc3375be2
  41c007:	mov    bl,0x44
  41c009:	mov    bl,0xb4
  41c00b:	out    dx,al
  41c00c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c00d:	pusha  
  41c00e:	cdq    
  41c00f:	outs   dx,DWORD PTR ds:[esi]
  41c010:	sub    BYTE PTR [esi+eiz*8+0x34],bl
  41c014:	jb     0x41c042
  41c016:	push   0x64
  41c018:	mov    ds:0x346281ae,eax
  41c01d:	test   al,0x15
  41c01f:	in     al,dx
  41c020:	ins    BYTE PTR es:[edi],dx
  41c021:	jae    0x41bff8
  41c023:	ja     0x41bfeb
  41c025:	cwde   
  41c026:	in     al,0x79
  41c028:	imul   edi,esi,0xffffffd9
  41c02b:	xor    eax,0xd493a64f
  41c030:	mov    ch,0x62
  41c032:	les    edi,FWORD PTR [edi]
  41c034:	mov    ah,0x33
  41c036:	xchg   edi,eax
  41c037:	(bad)  
  41c038:	das    
  41c039:	fldcw  WORD PTR [esi]
  41c03b:	mov    bh,0x34
  41c03d:	repnz mov dh,ch
  41c040:	fdivr  DWORD PTR [ebp+eax*2+0x40ff642b]
  41c047:	lock es call 0x629cfbde
  41c04e:	sahf   
  41c04f:	adc    eax,0xe5accbf1
  41c054:	das    
  41c055:	outs   dx,DWORD PTR ds:[esi]
  41c056:	pop    edx
  41c057:	in     al,0x5f
  41c059:	jno    0x41c095
  41c05b:	lahf   
  41c05c:	adc    al,0x16
  41c05e:	xor    eax,0x5eeab6f8
  41c063:	pop    ss
  41c064:	fldcw  WORD PTR fs:[edi]
  41c067:	jne    0x41c0da
  41c069:	leave  
  41c06a:	push   edi
  41c06b:	push   eax
  41c06c:	pop    eax
  41c06d:	pop    ss
  41c06e:	ret    0x16de
  41c071:	test   DWORD PTR [ecx-0x7f75a853],ebp
  41c077:	and    BYTE PTR [edi+ecx*2-0x54],bh
  41c07b:	mov    dl,0x37
  41c07d:	lods   al,BYTE PTR ds:[esi]
  41c07e:	xor    DWORD PTR ds:0x817a7324,ebp
  41c084:	sbb    BYTE PTR [edi-0x3f],dh
  41c087:	dec    ecx
  41c088:	xchg   BYTE PTR [edx+0xf],ch
  41c08b:	cwde   
  41c08c:	push   edx
  41c08d:	ret    0x6a9e
  41c090:	xor    bl,BYTE PTR [ebx]
  41c092:	adc    dh,BYTE PTR [edi]
  41c094:	mov    esp,0x698e5d5d
  41c099:	mov    al,0x86
  41c09b:	sub    eax,0xb68452d6
  41c0a0:	xor    eax,0x98ff747e
  41c0a5:	(bad)  
  41c0a6:	mov    ecx,0xa999c3df
  41c0ab:	jo     0x41c08a
  41c0ad:	xchg   ebx,eax
  41c0ae:	enter  0xa6c0,0x56
  41c0b2:	jmp    FWORD PTR [ecx]
  41c0b4:	push   0x7f7cf2
  41c0b9:	add    al,0xd6
  41c0bb:	leave  
  41c0bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0bd:	repnz mov fs:0x6dae47d5,eax
  41c0c4:	pusha  
  41c0c5:	scas   eax,DWORD PTR es:[edi]
  41c0c6:	push   eax
  41c0c7:	int    0xd
  41c0c9:	jno    0x41c09e
  41c0cb:	repnz sahf 
  41c0cd:	fldenv [edi+0x2867dc4]
  41c0d3:	or     DWORD PTR [esi+0x28],0xb2dd4965
  41c0da:	mov    ebp,0x2de985ef
  41c0df:	dec    eax
  41c0e0:	out    0x96,eax
  41c0e2:	jae    0x41c0ff
  41c0e4:	mov    esp,0xd42c64a3
  41c0ea:	retf   
  41c0eb:	test   cl,ch
  41c0ed:	ds pop ebx
  41c0ef:	mov    dh,0xfb
  41c0f1:	sti    
  41c0f2:	mov    ds:0x86c7eca8,eax
  41c0f7:	(bad)  
  41c0f8:	sbb    ebx,DWORD PTR [edi+0x50]
  41c0fb:	fist   DWORD PTR [edi]
  41c0fd:	sub    al,0xa6
  41c0ff:	cmp    eax,0x7af6a12b
  41c104:	jae    0x41c142
  41c106:	js     0x41c0f1
  41c108:	pushf  
  41c109:	jmp    0xd7e38119
  41c10e:	nop
  41c10f:	neg    DWORD PTR [ecx+0x19d0fce]
  41c115:	add    DWORD PTR [ebx],eax
  41c117:	mov    cl,0x38
  41c119:	xchg   ebp,eax
  41c11a:	leave  
  41c11b:	out    dx,al
  41c11c:	outs   dx,BYTE PTR ds:[esi]
  41c11d:	pop    WORD PTR [ebp-0x52]
  41c121:	jae    0x41c12b
  41c123:	(bad)  
  41c124:	mov    al,ds:0xc71b2c0c
  41c129:	xor    DWORD PTR [edx+0x11c8c178],edi
  41c12f:	pop    esp
  41c130:	mov    ch,0x4d
  41c132:	aam    0xe1
  41c134:	mov    esi,0x5af887c9
  41c139:	mov    BYTE PTR [ecx*2-0x645eeafe],ah
  41c140:	dec    esi
  41c141:	test   BYTE PTR [eax+0x51d678e0],al
  41c147:	(bad)  
  41c148:	or     ecx,edx
  41c14a:	cli    
  41c14b:	add    BYTE PTR [ebx],cl
  41c14d:	repnz or ebp,DWORD PTR [edi]
  41c150:	mov    ah,0x34
  41c152:	out    0x47,al
  41c154:	adc    DWORD PTR [ecx],ecx
  41c156:	mov    cl,0x5c
  41c158:	mov    ds:0x494f7a99,al
  41c15d:	mov    ch,0xe7
  41c15f:	retf   
  41c160:	cdq    
  41c161:	dec    ebx
  41c162:	das    
  41c163:	or     ebp,DWORD PTR [edi]
  41c165:	(bad)  
  41c166:	mov    cl,0x9d
  41c168:	and    BYTE PTR [eax],cl
  41c16a:	add    DWORD PTR [esi],edx
  41c16c:	or     eax,0xb117af3b
  41c171:	scas   eax,DWORD PTR es:[edi]
  41c172:	lahf   
  41c173:	shl    ebx,0x71
  41c176:	sbb    bl,dl
  41c178:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c179:	stos   BYTE PTR es:[edi],al
  41c17a:	mov    ah,0x98
  41c17c:	push   ds
  41c17d:	dec    eax
  41c17e:	sbb    BYTE PTR ds:0xc7e3f3fc,dl
  41c184:	or     eax,0x3f188337
  41c189:	mov    ebx,0x42fdf653
  41c18e:	jo     0x41c1c2
  41c190:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c192:	xchg   esi,eax
  41c193:	pop    esi
  41c194:	inc    ebx
  41c195:	jmp    0x41c1bf
  41c197:	test   eax,0xf55f79ae
  41c19c:	lds    esp,FWORD PTR [ebp-0x39b8291f]
  41c1a2:	xchg   ecx,eax
  41c1a3:	call   0x577a:0x17570ec9
  41c1aa:	jg     0x41c20e
  41c1ac:	je     0x41c20f
  41c1ae:	jmp    0x41c22d
  41c1b0:	inc    esi
  41c1b1:	inc    ecx
  41c1b2:	sahf   
  41c1b3:	xchg   ebx,eax
  41c1b4:	aad    0x2e
  41c1b6:	mov    ah,0xa2
  41c1b8:	ins    DWORD PTR es:[edi],dx
  41c1b9:	sbb    cl,BYTE PTR [edx]
  41c1bb:	int    0x39
  41c1bd:	jmp    0xcac34d64
  41c1c2:	inc    eax
  41c1c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1c4:	lock pop edi
  41c1c6:	call   0x6896:0x72097af3
  41c1cd:	or     edi,edx
  41c1cf:	gs dec edx
  41c1d1:	(bad)  
  41c1d2:	pop    ebx
  41c1d3:	int    0x99
  41c1d5:	test   al,0x5c
  41c1d7:	cmp    esi,DWORD PTR [eax-0x14]
  41c1da:	stc    
  41c1db:	xor    dl,BYTE PTR [eax]
  41c1dd:	lock call 0x3938:0x528f423d
  41c1e5:	sbb    BYTE PTR [esi+0x5f2a5128],ah
  41c1eb:	mov    cl,0xea
  41c1ed:	loopne 0x41c257
  41c1ef:	push   edi
  41c1f0:	fs out 0x49,al
  41c1f3:	pop    edi
  41c1f4:	mov    dh,BYTE PTR [esi+eax*2+0x45]
  41c1f8:	add    eax,0x5ef992e
  41c1fd:	jnp    0x41c261
  41c1ff:	out    0x23,eax
  41c201:	call   0xf124:0xc9ccdb82
  41c208:	or     DWORD PTR [edi+0x59],ebp
  41c20b:	mov    bh,0xff
  41c20d:	sub    al,0x45
  41c20f:	icebp  
  41c210:	add    bl,BYTE PTR [edi-0x18]
  41c213:	shr    BYTE PTR [esi-0x2ab3786],0xab
  41c21a:	pop    edi
  41c21b:	test   al,0x94
  41c21d:	(bad)  [eax]
  41c21f:	dec    esp
  41c220:	jne    0x41c1cb
  41c222:	jg     0x41c27e
  41c224:	outs   dx,BYTE PTR ds:[si]
  41c226:	xor    al,0xdb
  41c228:	add    DWORD PTR [ebx],ebp
  41c22a:	mov    cl,0x9e
  41c22c:	stos   DWORD PTR es:[edi],eax
  41c22d:	jnp    0x41c252
  41c22f:	jne    0x41c289
  41c231:	mov    DWORD PTR [esi],ebx
  41c233:	call   0xc86f:0x5c31d626
  41c23a:	js     0x41c1dc
  41c23c:	jne    0x41c1c0
  41c23e:	std    
  41c23f:	sbb    al,0xb5
  41c241:	mov    eax,0x5618f7ea
  41c246:	adc    BYTE PTR [esi],ch
  41c248:	cwde   
  41c249:	ins    DWORD PTR es:[edi],dx
  41c24a:	(bad)  [edx+0x5b]
  41c24d:	xor    ebp,edi
  41c24f:	ret    
  41c250:	out    0x23,eax
  41c252:	sub    al,0x23
  41c254:	into   
  41c255:	cdq    
  41c256:	cmp    esp,DWORD PTR [ebx-0x2d4503]
  41c25c:	outs   dx,DWORD PTR ds:[esi]
  41c25d:	in     eax,dx
  41c25e:	loop   0x41c240
  41c260:	btr    esp,esi
  41c263:	jle    0x41c2d5
  41c265:	sbb    DWORD PTR [eax-0xd0a3526],0x27e17ad4
  41c26f:	cmc    
  41c270:	pop    ss
  41c271:	push   cs
  41c272:	mov    esp,0xd165141d
  41c277:	test   DWORD PTR [eax-0x76101ec8],esi
  41c27d:	shl    al,0x39
  41c280:	sbb    eax,0xeea46d64
  41c285:	push   eax
  41c286:	xchg   ebp,eax
  41c287:	sbb    al,0x5
  41c289:	inc    edi
  41c28a:	mov    ?,WORD PTR [ecx]
  41c28c:	mov    DWORD PTR [esi],edi
  41c28e:	mov    es,WORD PTR [eax]
  41c290:	fcom   QWORD PTR [eax-0x5a09adc6]
  41c296:	xchg   ebp,eax
  41c297:	stc    
  41c298:	pop    esp
  41c299:	jmp    0x482b3b01
  41c29e:	loop   0x41c29c
  41c2a0:	push   ecx
  41c2a1:	pusha  
  41c2a2:	push   ebx
  41c2a3:	fsubp  st(6),st
  41c2a5:	mul    BYTE PTR [ebp-0x5900baf9]
  41c2ab:	push   0x401d5b9b
  41c2b0:	mov    ch,0x3b
  41c2b2:	stos   BYTE PTR es:[edi],al
  41c2b3:	dec    eax
  41c2b4:	mov    esp,gs
  41c2b6:	popf   
  41c2b7:	cmp    DWORD PTR [esp+ebx*1+0x38],ecx
  41c2bb:	out    dx,al
  41c2bc:	or     edi,esi
  41c2be:	mov    edx,0x46ebcf7f
  41c2c3:	ja     0x41c28a
  41c2c5:	and    al,0x39
  41c2c7:	xchg   ebp,eax
  41c2c8:	inc    edi
  41c2c9:	ret    0x4408
  41c2cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2cd:	(bad)  [eax+eiz*4]
  41c2d0:	pop    edx
  41c2d1:	push   edi
  41c2d2:	push   esi
  41c2d3:	xor    eax,0x3e123e37
  41c2d8:	xor    al,0x34
  41c2da:	test   al,0x13
  41c2dc:	shr    dh,cl
  41c2de:	mov    ds:0x88fd6cc7,al
  41c2e3:	mov    ecx,0x6f2207f9
  41c2e8:	icebp  
  41c2e9:	test   al,0xf3
  41c2eb:	and    dh,0xde
  41c2ee:	dec    edx
  41c2ef:	pop    ebx
  41c2f0:	rol    ebp,cl
  41c2f2:	xchg   edx,eax
  41c2f3:	loop   0x41c299
  41c2f5:	sbb    edi,DWORD PTR ds:0xb7a7657c
  41c2fb:	cwde   
  41c2fc:	mov    bh,0xb4
  41c2fe:	lock cmp eax,0x964085fe
  41c304:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c305:	adc    dh,BYTE PTR [ebx-0x37]
  41c308:	add    al,0x64
  41c30a:	dec    eax
  41c30b:	je     0x41c2a5
  41c30d:	mov    ah,0xe5
  41c30f:	rcl    DWORD PTR [eax+0x7ca28bf4],1
  41c315:	xor    esi,DWORD PTR [esi-0x64]
  41c318:	imul   eax,ebx,0xc837b572
  41c31e:	dec    edx
  41c31f:	popa   
  41c320:	out    0xce,al
  41c322:	rol    DWORD PTR [eax],1
  41c324:	sbb    eax,0xd7e1f5dc
  41c329:	push   ebp
  41c32a:	std    
  41c32b:	mov    esp,0x9164838d
  41c330:	add    al,0xf
  41c332:	mov    DWORD PTR [edx-0x1c],esi
  41c335:	rcr    BYTE PTR [ecx-0xee98f72],1
  41c33b:	pop    ss
  41c33c:	outs   dx,DWORD PTR ds:[esi]
  41c33d:	or     eax,DWORD PTR [ebp+0x5f]
  41c340:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c341:	inc    ecx
  41c342:	shl    BYTE PTR [edx+0x4a42ba77],cl
  41c348:	add    eax,0x73f1103
  41c34d:	sbb    eax,0xd753e1d5
  41c352:	call   0xc3d1:0xfcc0333f
  41c359:	bound  eax,QWORD PTR [esi]
  41c35b:	fcomp  QWORD PTR ds:0xb87cfa2d
  41c361:	jno    0x41c351
  41c363:	mov    ebx,0xa11821bc
  41c368:	push   0x6a87f37b
  41c36d:	dec    ebx
  41c36e:	fwait
  41c36f:	jmp    0x800e:0xe1d008d1
  41c376:	add    eax,0x9cef13ca
  41c37b:	ja     0x41c34e
  41c37d:	xchg   esp,eax
  41c37e:	repz mov ds:0xefeadeba,al
  41c384:	repz xchg edi,eax
  41c386:	stos   DWORD PTR es:[edi],eax
  41c387:	pusha  
  41c388:	dec    ecx
  41c389:	(bad)  
  41c38a:	sbb    eax,0x1530c87f
  41c38f:	or     ecx,DWORD PTR [ebp-0x4d]
  41c392:	sub    ah,BYTE PTR [eax+0x1ad45194]
  41c398:	lea    ecx,[edx-0x72]
  41c39b:	(bad)  
  41c39c:	ficom  DWORD PTR [edx+edi*4+0x364b21a2]
  41c3a3:	aaa    
  41c3a4:	and    ebx,DWORD PTR [ebx]
  41c3a6:	popf   
  41c3a7:	cmp    ecx,DWORD PTR [ebp-0x1b]
  41c3aa:	leave  
  41c3ab:	outs   dx,BYTE PTR ds:[esi]
  41c3ac:	adc    edi,DWORD PTR ds:0xfee6a812
  41c3b2:	xor    ebx,DWORD PTR [ebx]
  41c3b4:	mov    esi,0x8940e996
  41c3b9:	xor    DWORD PTR [esi+0x1],ecx
  41c3bc:	rcl    BYTE PTR [edi-0x59],0xd3
  41c3c0:	jl     0x41c37d
  41c3c2:	cmp    eax,0xa6683efb
  41c3c7:	test   DWORD PTR [ebx+eiz*8],esp
  41c3ca:	dec    ecx
  41c3cb:	aad    0x2b
  41c3cd:	pop    eax
  41c3ce:	mov    esp,0x267fe1ec
  41c3d3:	popa   
  41c3d4:	arpl   ax,cx
  41c3d6:	aaa    
  41c3d7:	test   DWORD PTR [ebp-0x206531a9],ecx
  41c3dd:	inc    esp
  41c3de:	in     al,dx
  41c3df:	cwde   
  41c3e0:	and    bh,BYTE PTR [ebx]
  41c3e2:	and    eax,0x1110892
  41c3e7:	ss mov ch,0x96
  41c3ea:	in     al,0x7c
  41c3ec:	(bad)  
  41c3ed:	sbb    DWORD PTR [esi],edx
  41c3ef:	inc    ebp
  41c3f0:	mov    WORD PTR [ebp+0x65],cs
  41c3f3:	jg     0x41c3ac
  41c3f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3f6:	xchg   DWORD PTR ds:0x3c0f0de2,ebp
  41c3fc:	inc    edi
  41c3fd:	ins    BYTE PTR es:[edi],dx
  41c3fe:	mov    cl,0xfb
  41c400:	inc    ecx
  41c401:	not    BYTE PTR [esp+esi*8+0x7e962fe7]
  41c408:	jbe    0x41c3fe
  41c40a:	jo     0x41c47c
  41c40c:	cmp    ch,ah
  41c40e:	and    ebp,DWORD PTR [edx+0x7c]
  41c411:	pop    edi
  41c412:	xchg   esp,eax
  41c413:	fcom   DWORD PTR [edi]
  41c415:	dec    ebp
  41c416:	test   BYTE PTR [ecx-0x7e],0x3f
  41c41a:	pop    si
  41c41c:	stos   DWORD PTR es:[edi],eax
  41c41d:	cdq    
  41c41e:	cli    
  41c41f:	and    ebx,esi
  41c421:	sub    WORD PTR [edx-0x7b32ee01],0xffe3
  41c429:	cmp    eax,0xced9cf2d
  41c42e:	inc    edx
  41c42f:	dec    ecx
  41c430:	mov    ds:0x2a35e53,eax
  41c435:	ror    ebp,1
  41c437:	sar    BYTE PTR [eax+0x20],cl
  41c43a:	in     al,dx
  41c43b:	repnz xor eax,0x8fe1734a
  41c441:	in     eax,0xce
  41c443:	or     eax,0x7310f2cf
  41c448:	mov    BYTE PTR ds:0xb91faae9,dl
  41c44e:	adc    eax,0x1110324e
  41c453:	out    dx,eax
  41c454:	ror    ebx,cl
  41c456:	or     al,0x5c
  41c458:	mov    ebp,esp
  41c45a:	aad    0x77
  41c45c:	fisub  DWORD PTR [ebp+0x2c]
  41c45f:	adc    DWORD PTR [esi],edi
  41c461:	push   ebx
  41c462:	inc    esp
  41c463:	xor    edx,esi
  41c465:	jl     0x41c45b
  41c467:	fnstsw WORD PTR [esi-0x716cb81e]
  41c46d:	or     DWORD PTR [edx],ecx
  41c46f:	dec    esi
  41c470:	xchg   edx,eax
  41c471:	xor    esi,DWORD PTR [eax]
  41c473:	or     BYTE PTR [edx-0x67],ch
  41c476:	nop
  41c477:	xor    dl,BYTE PTR [esi+0x1654a846]
  41c47d:	idiv   BYTE PTR [esi]
  41c47f:	pop    edi
  41c480:	mov    esp,edx
  41c482:	sahf   
  41c483:	ds inc ebp
  41c485:	sub    esp,DWORD PTR [ebx+0x7e]
  41c488:	aam    0xa2
  41c48a:	inc    ebx
  41c48b:	dec    ebp
  41c48c:	mov    gs,WORD PTR [ecx]
  41c48e:	and    eax,0xb38d190f
  41c493:	xchg   ebx,eax
  41c494:	out    dx,eax
  41c495:	mov    ds:0x2bcf1a27,al
  41c49a:	push   cs
  41c49b:	dec    ecx
  41c49c:	and    al,0xb0
  41c49e:	xrelease xchg DWORD PTR es:[ebp+0x77],ecx
  41c4a3:	(bad)  
  41c4a4:	in     al,dx
  41c4a5:	xor    edx,DWORD PTR [eax+0x58]
  41c4a8:	ficom  DWORD PTR [edi]
  41c4aa:	outs   dx,BYTE PTR ds:[esi]
  41c4ab:	mov    dh,0xa6
  41c4ad:	push   ds
  41c4ae:	call   0x7997:0x21080f7c
  41c4b5:	retf   0xf32d
  41c4b8:	(bad)  
  41c4b9:	mov    dh,0xcf
  41c4bb:	sahf   
  41c4bc:	comiss xmm2,xmm2
  41c4bf:	push   ebp
  41c4c0:	lods   eax,DWORD PTR ds:[esi]
  41c4c1:	aam    0xef
  41c4c3:	or     DWORD PTR [eax],ebx
  41c4c5:	sbb    cl,BYTE PTR [edx]
  41c4c7:	out    0xa3,eax
  41c4c9:	lea    edi,gs:[ebp+0x61]
  41c4cd:	lods   al,BYTE PTR ds:[esi]
  41c4ce:	int    0x6c
  41c4d0:	mov    esp,0x6b6540f1
  41c4d5:	mov    ebp,0x21bb0972
  41c4da:	(bad)  
  41c4db:	jns    0x41c4dc
  41c4dd:	mov    DWORD PTR [esi],ebp
  41c4df:	(bad)  [ebx-0x2a]
  41c4e3:	or     BYTE PTR [eax-0x569ee31],bl
  41c4e9:	ret    0xbbae
  41c4ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4ed:	es popa 
  41c4ef:	popf   
  41c4f0:	js     0x41c480
  41c4f2:	jecxz  0x41c51e
  41c4f4:	add    al,0xb5
  41c4f6:	ja     0x41c534
  41c4f8:	sbb    dh,BYTE PTR [ebx-0x194693e]
  41c4fe:	adc    BYTE PTR [edi],bh
  41c500:	retf   
  41c501:	in     eax,dx
  41c502:	lock mov edx,0x7d3feded
  41c508:	pop    edx
  41c509:	mov    eax,ds:0x81674d32
  41c50e:	pop    ebp
  41c50f:	mov    esp,0x4c0e3788
  41c514:	out    dx,al
  41c515:	sbb    esp,DWORD PTR [esi-0x40355e66]
  41c51b:	sbb    esp,DWORD PTR [edx]
  41c51d:	int    0x56
  41c51f:	sbb    bl,dh
  41c521:	rcl    DWORD PTR [eax-0x3f],cl
  41c524:	rcr    esp,1
  41c526:	inc    edi
  41c527:	or     BYTE PTR [ebx],ah
  41c529:	xor    DWORD PTR [ebx],edi
  41c52b:	mov    edx,0xb63bc950
  41c530:	popa   
  41c531:	in     al,dx
  41c532:	dec    edi
  41c533:	daa    
  41c534:	popf   
  41c535:	ret    
  41c536:	shl    BYTE PTR [ebx-0x1efa183e],0x97
  41c53d:	or     eax,esp
  41c53f:	ins    BYTE PTR es:[edi],dx
  41c540:	jge    0x41c4e9
  41c542:	aam    0x3b
  41c544:	mov    DWORD PTR [eax],eax
  41c546:	push   ds
  41c547:	mov    BYTE PTR [ebp+edx*8-0x3a0b59dc],dl
  41c54e:	push   edx
  41c54f:	adc    BYTE PTR [edx],0xf7
  41c552:	shl    BYTE PTR [edx],1
  41c554:	shl    DWORD PTR [edx-0x1],0x36
  41c558:	jb     0x41c5a1
  41c55a:	xchg   edi,eax
  41c55b:	mov    al,ds:0x9a50ebea
  41c560:	pushf  
  41c561:	add    ah,0xd2
  41c564:	inc    eax
  41c565:	jge    0x41c599
  41c567:	out    0x5b,eax
  41c569:	and    edx,ebx
  41c56b:	mov    ebp,0xde66c4b6
  41c570:	in     al,0x60
  41c572:	popa   
  41c573:	in     eax,0x73
  41c575:	adc    bh,dl
  41c577:	push   ecx
  41c578:	call   0xeae3:0x638d8ca2
  41c57f:	jl     0x41c5b8
  41c581:	mov    edx,0xa7a2130e
  41c586:	retf   0x2623
  41c589:	dec    edx
  41c58a:	xor    al,0xb2
  41c58c:	pop    ebx
  41c58d:	daa    
  41c58e:	jb     0x41c5a4
  41c590:	add    al,0x61
  41c592:	mov    ?,edi
  41c594:	push   ebp
  41c595:	mov    ecx,DWORD PTR [eax-0x1a]
  41c598:	add    BYTE PTR [esi+0xd],0xaa
  41c59c:	or     ebp,ecx
  41c59e:	pop    edi
  41c59f:	push   edx
  41c5a0:	les    edx,FWORD PTR [edi+ecx*2+0x16790594]
  41c5a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5a8:	push   cs
  41c5a9:	mov    ebp,0xa56c8511
  41c5ae:	jae    0x41c550
  41c5b0:	xchg   ebx,eax
  41c5b1:	pop    ds
  41c5b2:	jnp    0x41c61c
  41c5b4:	push   ss
  41c5b5:	out    0x58,al
  41c5b7:	jne    0x41c5ac
  41c5b9:	adc    eax,0x6bf3edc
  41c5be:	jne    0x41c615
  41c5c0:	pop    esi
  41c5c1:	pop    ds
  41c5c2:	test   eax,0x5293e7dd
  41c5c7:	mov    bl,0xd9
  41c5c9:	les    edx,FWORD PTR [ecx+ecx*8+0x7]
  41c5cd:	ins    DWORD PTR es:[edi],dx
  41c5ce:	xor    DWORD PTR [ecx],ebp
  41c5d0:	sub    BYTE PTR [eax-0x79],dh
  41c5d3:	dec    esi
  41c5d4:	push   esi
  41c5d5:	outs   dx,BYTE PTR ds:[esi]
  41c5d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5d7:	mov    edi,0xfd9895e8
  41c5dc:	inc    edx
  41c5dd:	push   0xae5df75a
  41c5e2:	sti    
  41c5e3:	out    dx,al
  41c5e4:	idiv   BYTE PTR [esi+0x2c]
  41c5e7:	and    edx,ebx
  41c5e9:	in     al,0xb1
  41c5eb:	mov    WORD PTR [bx+si],es
  41c5ee:	jo     0x41c610
  41c5f0:	xchg   esp,eax
  41c5f1:	jl     0x41c5b6
  41c5f3:	jbe    0x41c666
  41c5f5:	inc    edx
  41c5f6:	retf   0x3903
  41c5f9:	outs   dx,DWORD PTR ds:[esi]
  41c5fa:	sub    al,0x79
  41c5fc:	pushf  
  41c5fd:	sbb    eax,0xc706a542
  41c602:	jecxz  0x41c650
  41c604:	push   edi
  41c605:	mov    esp,ss
  41c607:	ss mov ebx,0x1ca9811a
  41c60d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c60e:	inc    ecx
  41c60f:	clc    
  41c610:	pop    ebx
  41c611:	sub    ah,BYTE PTR [esi+0x34c1755e]
  41c617:	mov    ebx,0x61bfd336
  41c61c:	imul   ebx,DWORD PTR [edi],0x2cfa175a
  41c622:	mov    ds:0xc63b3f2b,eax
  41c627:	(bad)  
  41c628:	into   
  41c629:	xor    BYTE PTR [edi-0x3],0xba
  41c62d:	adc    eax,0xb1e1b467
  41c632:	nop
  41c633:	or     edx,eax
  41c635:	outs   dx,DWORD PTR ds:[esi]
  41c636:	popa   
  41c637:	rcr    DWORD PTR [ebp+0x71],0x7e
  41c63b:	ss add eax,0x8965aa81
  41c641:	or     DWORD PTR [ebx+edx*2-0x6d88225e],esi
  41c648:	pop    edx
  41c649:	sbb    al,0x21
  41c64b:	inc    ecx
  41c64c:	xor    DWORD PTR [edi],eax
  41c64e:	mov    ah,BYTE PTR [ebx+0x72524f56]
  41c654:	cdq    
  41c655:	sahf   
  41c656:	imul   edx,DWORD PTR [edi-0x3f],0xce611fdf
  41c65d:	add    ecx,DWORD PTR [ebx+edi*1-0x14]
  41c661:	es test eax,0xbd14f012
  41c667:	jb     0x41c685
  41c669:	icebp  
  41c66a:	call   0xe4661724
  41c66f:	add    al,0x32
  41c671:	xchg   edi,eax
  41c672:	xchg   esp,eax
  41c673:	mov    dh,0x57
  41c675:	sub    BYTE PTR ds:0x175e7861,bl
  41c67b:	push   esp
  41c67c:	xchg   esp,eax
  41c67d:	pop    ebp
  41c67e:	cdq    
  41c67f:	sti    
  41c680:	into   
  41c681:	add    BYTE PTR [eax+0x6854831d],dl
  41c687:	lea    ebp,[edx-0x132ab2d0]
  41c68d:	aas    
  41c68e:	mov    edi,0x6bf02d9c
  41c693:	(bad)  
  41c694:	sbb    DWORD PTR [ebp-0x3af7f5e8],0x9da1c562
  41c69e:	xchg   ecx,eax
  41c69f:	push   eax
  41c6a0:	pop    es
  41c6a1:	fcomp  DWORD PTR [eax]
  41c6a3:	test   al,0x4c
  41c6a5:	(bad)
  41c6a8:	jmp    0xb34b:0xad8baf67
  41c6af:	out    0x2f,eax
  41c6b1:	or     eax,0x1d46fa6b
  41c6b6:	ret    0xbf74
  41c6b9:	xor    eax,0x77b70af5
  41c6be:	jbe    0x41c70b
  41c6c0:	inc    ecx
  41c6c1:	mov    ebx,ecx
  41c6c3:	sar    DWORD PTR [ebx-0xc6eeabb],1
  41c6c9:	adc    edx,DWORD PTR [eax+0x42e7f2d7]
  41c6cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6d0:	cmp    bh,BYTE PTR ds:0x3b08c17f
  41c6d6:	pop    ss
  41c6d7:	pop    edi
  41c6d8:	shr    BYTE PTR [edi-0x14e86356],0x25
  41c6df:	cs call 0xda0e:0x80263299
  41c6e7:	(bad)  
  41c6e8:	jae    0x41c6ca
  41c6ea:	lds    esp,FWORD PTR [ecx]
  41c6ec:	push   ss
  41c6ed:	xor    ch,BYTE PTR [edi+0x6eb02d6e]
  41c6f3:	aam    0x9
  41c6f5:	dec    esp
  41c6f6:	mov    esp,0x554c98d3
  41c6fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6fc:	jne    0x41c743
  41c6fe:	aad    0xd5
  41c700:	dec    eax
  41c701:	(bad)  
  41c702:	pusha  
  41c703:	stos   BYTE PTR es:[edi],al
  41c704:	pop    ebp
  41c705:	nop
  41c706:	push   cs
  41c707:	shl    DWORD PTR cs:[eax+0x48ccab2d],0xfc
  41c70f:	inc    esi
  41c710:	push   edx
  41c711:	add    ah,ah
  41c713:	sbb    ebx,DWORD PTR [edx-0x40]
  41c716:	jl     0x41c6a2
  41c718:	push   edi
  41c719:	push   ecx
  41c71a:	xchg   esp,eax
  41c71b:	jge    0x41c70a
  41c71d:	lock rcl eax,cl
  41c720:	jmp    0x41c6b2
  41c722:	(bad)
  41c727:	clc    
  41c728:	jnp    0x41c768
  41c72a:	cmp    al,0xc1
  41c72c:	or     BYTE PTR [eax+0x21],ch
  41c72f:	leave  
  41c730:	popf   
  41c731:	dec    eax
  41c732:	sahf   
  41c733:	inc    ebx
  41c734:	stc    
  41c735:	retf   0xbe45
  41c738:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c739:	add    edx,DWORD PTR [edx-0x3fb62d17]
  41c73f:	push   edx
  41c740:	adc    BYTE PTR [edi+edi*1],0x96
  41c744:	add    edx,DWORD PTR [ebp-0x57]
  41c747:	jnp    0x41c7c3
  41c749:	scas   eax,DWORD PTR es:[edi]
  41c74a:	pop    es
  41c74b:	mov    esp,edi
  41c74d:	out    dx,al
  41c74e:	ss lahf 
  41c750:	cmp    dl,BYTE PTR [ecx+0x7190ffdf]
  41c756:	enter  0xf4ea,0x1e
  41c75a:	aas    
  41c75b:	in     eax,0x50
  41c75d:	lea    ebp,[esi+0x17]
  41c760:	call   FWORD PTR [edi-0x7b]
  41c763:	repz clc 
  41c765:	cmc    
  41c766:	test   DWORD PTR [ecx-0x7d0dd451],eax
  41c76c:	xor    ecx,DWORD PTR [edx-0x172a080d]
  41c772:	mov    dl,0xa2
  41c775:	rcr    BYTE PTR [ebp-0x3c1da084],cl
  41c77b:	mov    al,0x26
  41c77d:	or     eax,0x67822c79
  41c782:	sbb    eax,0x4c03a7d7
  41c787:	stos   DWORD PTR es:[edi],eax
  41c788:	js     0x41c803
  41c78a:	mov    esi,0xa41ba6d5
  41c78f:	xchg   ecx,eax
  41c790:	mov    WORD PTR [ebx],cs
  41c792:	and    DWORD PTR [ebp-0x1c006305],eax
  41c798:	aas    
  41c799:	test   al,0xa0
  41c79b:	push   es
  41c79c:	fmul   st(7),st
  41c79e:	add    DWORD PTR [edi+0x4f53f50f],0xb30fae6a
  41c7a8:	cmc    
  41c7a9:	and    BYTE PTR [ecx+ebx*8],cl
  41c7ac:	mov    DWORD PTR [eax-0x7ff766c0],ecx
  41c7b2:	test   al,bl
  41c7b4:	jbe    0x41c767
  41c7b6:	fisttp QWORD PTR [eax-0x6f952dcb]
  41c7bc:	in     al,dx
  41c7bd:	in     eax,0x47
  41c7bf:	push   edx
  41c7c0:	mov    bh,0x5e
  41c7c2:	sbb    ch,ah
  41c7c4:	test   al,0x41
  41c7c6:	dec    edx
  41c7c7:	or     bh,al
  41c7c9:	xchg   esi,eax
  41c7ca:	xor    bh,BYTE PTR [esi-0x74afc613]
  41c7d0:	repnz int3 
  41c7d2:	into   
  41c7d3:	cmp    cl,BYTE PTR [ecx+0x51]
  41c7d6:	or     ch,BYTE PTR [eax+0x8]
  41c7d9:	in     eax,dx
  41c7da:	dec    ebp
  41c7db:	dec    ebx
  41c7dc:	repz lds esp,FWORD PTR [ebx+0x25]
  41c7e0:	inc    edx
  41c7e1:	retf   
  41c7e2:	pop    edi
  41c7e4:	or     edi,DWORD PTR [ebx-0x1b]
  41c7e7:	sub    eax,0x83a272b8
  41c7ec:	popf   
  41c7ed:	pop    es
  41c7ee:	enter  0x9c12,0xb9
  41c7f2:	or     ch,ch
  41c7f4:	xchg   esp,eax
  41c7f5:	inc    esi
  41c7f6:	in     eax,0x95
  41c7f8:	in     al,dx
  41c7f9:	loope  0x41c7a8
  41c7fb:	xchg   ebp,eax
  41c7fc:	cs gs ret 0x1ea
  41c801:	aaa    
  41c802:	repz cmc 
  41c804:	pop    ss
  41c805:	inc    esp
  41c806:	cmp    bh,BYTE PTR [edx+0x7e]
  41c809:	and    cl,BYTE PTR ss:[esi]
  41c80c:	es inc ebx
  41c80e:	mov    al,ds:0x4375b808
  41c813:	pop    ecx
  41c814:	xlat   BYTE PTR ds:[ebx]
  41c815:	outs   dx,DWORD PTR ds:[esi]
  41c816:	pop    esi
  41c817:	loopne 0x41c851
  41c819:	scas   al,BYTE PTR es:[edi]
  41c81a:	retf   
  41c81b:	test   BYTE PTR [ecx+0x1b],bl
  41c81e:	fstp   DWORD PTR [edx+0x4b]
  41c821:	add    al,0xae
  41c823:	retf   0xe2f9
  41c826:	xor    DWORD PTR [ecx],edi
  41c828:	xchg   edx,eax
  41c829:	shr    ebx,1
  41c82b:	inc    esi
  41c82c:	lods   eax,DWORD PTR ds:[esi]
  41c82d:	into   
  41c82e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c82f:	pop    edx
  41c830:	rcl    DWORD PTR [ebx],0x76
  41c833:	into   
  41c834:	mov    edi,?
  41c836:	add    BYTE PTR [ebx+0x7ca4f43c],dh
  41c83c:	arpl   WORD PTR [edx-0x5f],bx
  41c83f:	xchg   ebp,eax
  41c840:	add    BYTE PTR [esi+0x73],al
  41c843:	fdiv   DWORD PTR [edx]
  41c845:	scas   eax,DWORD PTR es:[edi]
  41c846:	xchg   ecx,eax
  41c847:	sbb    al,0x89
  41c849:	sbb    al,0x62
  41c84b:	cs pop esp
  41c84d:	cmp    eax,0x38e93ac7
  41c852:	adc    al,BYTE PTR [edi-0x3e]
  41c855:	add    BYTE PTR [esi-0x7b],bh
  41c858:	push   esi
  41c859:	outs   dx,DWORD PTR ds:[esi]
  41c85a:	inc    eax
  41c85b:	dec    BYTE PTR [edx-0x6f9ca93e]
  41c861:	mov    bh,0x15
  41c863:	xor    DWORD PTR [ecx-0x34d59612],eax
  41c869:	stos   DWORD PTR es:[edi],eax
  41c86a:	jge    0x41c87d
  41c86c:	sub    BYTE PTR [eax],cl
  41c86e:	cmp    al,0xc0
  41c870:	(bad)  
  41c871:	scas   eax,DWORD PTR es:[edi]
  41c872:	push   ebx
  41c873:	ret    0x875f
  41c876:	ins    BYTE PTR es:[edi],dx
  41c877:	lods   al,BYTE PTR ds:[esi]
  41c878:	or     al,0xec
  41c87a:	jo     0x41c87c
  41c87c:	hlt    
  41c87d:	add    eax,0x4191e2bf
  41c882:	adc    al,0x5a
  41c884:	mov    BYTE PTR [edi-0x694fc4c3],dh
  41c88a:	dec    esi
  41c88b:	pop    ebx
  41c88c:	out    dx,al
  41c88d:	nop
  41c88e:	(bad)
  41c891:	outs   dx,BYTE PTR ds:[esi]
  41c892:	push   edx
  41c893:	arpl   WORD PTR [edi+0x1efb74b2],bp
  41c899:	add    edi,ecx
  41c89b:	cmp    DWORD PTR [bx-0x47],esp
  41c89f:	cmp    BYTE PTR [ebp+0x2d617168],dl
  41c8a5:	lds    edi,FWORD PTR [edx]
  41c8a7:	push   eax
  41c8a8:	ret    
  41c8a9:	xor    eax,0xef877cc2
  41c8ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8af:	jmp    0x41c8fc
  41c8b1:	jle    0x41c877
  41c8b3:	sub    eax,0x32096f0c
  41c8b8:	jbe    0x41c87f
  41c8ba:	sbb    al,0x4f
  41c8bc:	clc    
  41c8bd:	(bad)
  41c8c1:	push   0x3b
  41c8c3:	xchg   edi,eax
  41c8c4:	in     al,0xd2
  41c8c6:	or     DWORD PTR [eax-0x1b],eax
  41c8c9:	xor    al,0x49
  41c8cb:	mov    ds:0xd7ea4ab0,al
  41c8d0:	int    0xa
  41c8d2:	arpl   WORD PTR [edx],sp
  41c8d4:	cmp    BYTE PTR [ebx],ch
  41c8d6:	repz and eax,0x18bbb931
  41c8dc:	stc    
  41c8dd:	jnp    0x41c8d7
  41c8df:	mov    cl,0x9b
  41c8e1:	mov    eax,ds:0xb90f723c
  41c8e6:	pop    esi
  41c8e7:	jg     0x41c8e8
  41c8e9:	add    ebx,DWORD PTR [ecx-0x31]
  41c8ec:	and    BYTE PTR [ebp+0x2a],bh
  41c8ef:	adc    DWORD PTR [eax],edx
  41c8f1:	iret   
  41c8f2:	mul    BYTE PTR [edx+0xc]
  41c8f5:	es push edx
  41c8f7:	jne    0x41c8fa
  41c8f9:	push   ebp
  41c8fa:	icebp  
  41c8fb:	add    esp,DWORD PTR [eax]
  41c8fd:	ja     0x41c8e2
  41c8ff:	mov    al,0x36
  41c901:	mov    edx,0x2a2f0bb7
  41c906:	dec    esp
  41c907:	cs pop eax
  41c909:	arpl   WORD PTR ds:0x346fdaec,bp
  41c90f:	addr16 cli 
  41c911:	dec    ebx
  41c912:	pop    ds
  41c913:	pop    es
  41c914:	mov    ds:0xdee35962,eax
  41c919:	dec    edx
  41c91a:	sti    
  41c91b:	pop    ebp
  41c91c:	pop    DWORD PTR [ebx+0x5f]
  41c91f:	lods   eax,DWORD PTR ds:[esi]
  41c920:	outs   dx,DWORD PTR ds:[esi]
  41c921:	add    al,BYTE PTR [ebp-0x37]
  41c924:	repz retf 
  41c926:	mov    esi,0x863be448
  41c92b:	hlt    
  41c92c:	jg     0x41c990
  41c92e:	and    esp,DWORD PTR [ebx]
  41c930:	or     eax,0x88a86cb5
  41c935:	(bad)  
  41c936:	cmp    al,BYTE PTR [eax]
  41c938:	push   es
  41c939:	jno    0x41c8ff
  41c93b:	or     al,0x6f
  41c93d:	inc    ebx
  41c93e:	outs   dx,BYTE PTR ds:[esi]
  41c93f:	and    eax,0xa47da164
  41c944:	jb     0x41c9c3
  41c946:	jmp    0x2b31:0x4e88d04f
  41c94d:	(bad)  
  41c94e:	pop    ss
  41c94f:	pop    esi
  41c950:	and    DWORD PTR [ebx+0x3e],ecx
  41c953:	adc    esp,DWORD PTR [ebx]
  41c955:	repnz mov ebx,0xcb572eba
  41c95b:	retf   
  41c95c:	loopne 0x41c934
  41c95e:	aaa    
  41c95f:	adc    esp,DWORD PTR [esi]
  41c961:	add    DWORD PTR [ebx],ebx
  41c963:	enter  0xcab5,0x61
  41c967:	pop    eax
  41c968:	inc    edi
  41c969:	lods   al,BYTE PTR ds:[esi]
  41c96a:	lods   al,BYTE PTR ds:[esi]
  41c96b:	mov    ah,BYTE PTR [edi]
  41c96d:	mov    cl,0xcb
  41c96f:	sub    al,0xd8
  41c971:	call   0x6b4f:0x17c5
  41c977:	or     edi,DWORD PTR [edx+ebp*1-0x3dad34fe]
  41c97e:	cmp    ecx,ebx
  41c980:	jp     0x41c9ef
  41c982:	pop    ecx
  41c983:	mov    bl,0x7d
  41c985:	cwde   
  41c986:	imul   ebx,DWORD PTR [ecx+0x6ed00b0d],0xffffffed
  41c98d:	jl     0x41c9d5
  41c98f:	push   ebp
  41c990:	lea    ebp,[eax+0x17d7e80d]
  41c996:	dec    ebp
  41c997:	mov    ebx,0x80c0e372
  41c99c:	cld    
  41c99d:	and    eax,0x4be37ab4
  41c9a2:	jo     0x41ca18
  41c9a4:	jo     0x41c9f6
  41c9a6:	cdq    
  41c9a7:	mov    ch,BYTE PTR [eax-0x4cc0ec45]
  41c9ad:	daa    
  41c9ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9af:	jnp    0x41c94d
  41c9b1:	xchg   ebx,eax
  41c9b2:	and    BYTE PTR ds:0x22704b19,cl
  41c9b8:	jecxz  0x41ca15
  41c9ba:	stc    
  41c9bb:	ja     0x41c967
  41c9bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9be:	repnz lea esi,[ebx+0x2d]
  41c9c2:	ret    0x30d0
  41c9c5:	div    DWORD PTR [edx+ebp*4]
  41c9c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9c9:	jmp    0x41ca10
  41c9cb:	js     0x41c9f4
  41c9cd:	fwait
  41c9ce:	ja     0x41c9a4
  41c9d0:	or     DWORD PTR [ebp+0x4a],eax
  41c9d3:	arpl   WORD PTR [ebx],bx
  41c9d5:	sbb    BYTE PTR [eax-0x7fc7415a],bh
  41c9db:	mov    dh,0x24
  41c9dd:	pop    ecx
  41c9de:	jmp    0x41c9bf
  41c9e0:	jo     0x41ca54
  41c9e2:	aam    0x7b
  41c9e4:	pop    ss
  41c9e5:	int3   
  41c9e6:	mov    esp,0xd80fda60
  41c9eb:	push   edi
  41c9ec:	add    al,0x34
  41c9ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9ef:	test   eax,0xc0e17482
  41c9f4:	xchg   edi,eax
  41c9f5:	mov    edx,0x742c2217
  41c9fa:	fcom   DWORD PTR [esi]
  41c9fc:	retf   
  41c9fd:	test   al,0xb0
  41c9ff:	imul   DWORD PTR [edi-0x3fbdf94d]
  41ca05:	pop    eax
  41ca06:	shr    BYTE PTR [esi],1
  41ca08:	stos   DWORD PTR es:[edi],eax
  41ca09:	es cmp eax,0xb5ecf388
  41ca0f:	retf   0x4c24
  41ca12:	sbb    dh,BYTE PTR [ebx]
  41ca14:	mov    esp,DWORD PTR [eax+0x377437c7]
  41ca1a:	into   
  41ca1b:	mov    ah,0x62
  41ca1d:	js     0x41c9c4
  41ca1f:	pusha  
  41ca20:	sbb    ecx,DWORD PTR [ecx+esi*4-0x5e]
  41ca24:	test   BYTE PTR [ebp+0x39],bl
  41ca27:	and    al,BYTE PTR [ecx+0x6729367]
  41ca2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca2e:	pop    esp
  41ca2f:	out    dx,eax
  41ca30:	ffree  st(6)
  41ca32:	push   es
  41ca33:	js     0x41ca59
  41ca35:	arpl   si,cx
  41ca37:	pop    eax
  41ca38:	xchg   ecx,eax
  41ca39:	std    
  41ca3a:	in     al,dx
  41ca3b:	aad    0xb3
  41ca3d:	add    al,0xbd
  41ca3f:	test   DWORD PTR [edi-0x2],ecx
  41ca42:	call   0xac45:0xb3d1f181
  41ca49:	popa   
  41ca4a:	sub    BYTE PTR [edx+eax*2+0x55751620],dh
  41ca51:	clc    
  41ca52:	aaa    
  41ca53:	mov    ch,0x12
  41ca55:	cld    
  41ca56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca57:	sub    BYTE PTR [edi],ch
  41ca59:	pushf  
  41ca5a:	test   eax,0x1deac63c
  41ca5f:	mov    al,ds:0xa906f73c
  41ca64:	in     eax,0x11
  41ca66:	mov    cl,0x25
  41ca68:	aam    0x97
  41ca6a:	gs mov dh,0x57
  41ca6d:	xlat   BYTE PTR ds:[ebx]
  41ca6e:	(bad)  
  41ca6f:	mov    WORD PTR [esi+esi*8+0x15aed295],ds
  41ca76:	call   FWORD PTR [eax+edi*2+0x13]
  41ca7a:	mov    cl,0xf8
  41ca7c:	mov    eax,0xa8c8760b
  41ca81:	mov    esp,0xc5793810
  41ca86:	adc    eax,0x53fa5958
  41ca8b:	inc    esi
  41ca8c:	enter  0xa081,0xbe
  41ca90:	pop    esp
  41ca91:	dec    edx
  41ca92:	data16 out 0x5a,al
  41ca95:	(bad)  [ecx]
  41ca97:	dec    esi
  41ca98:	adc    esp,0x87c6bfc7
  41ca9e:	ficomp DWORD PTR [ebx+0x4b163f6d]
  41caa4:	test   cl,dl
  41caa6:	sbb    al,0xb4
  41caa8:	fist   WORD PTR [edi+ecx*2-0x32]
  41caac:	add    al,0x1e
  41caae:	into   
  41caaf:	xchg   esi,eax
  41cab0:	jnp    0x41cae0
  41cab2:	nop
  41cab3:	sbb    DWORD PTR [esi],0x32
  41cab6:	cmp    BYTE PTR [esi+0x27dae532],al
  41cabc:	pop    esp
  41cabd:	sbb    DWORD PTR [edi+0x50],edx
  41cac0:	push   esi
  41cac1:	pop    edi
  41cac2:	in     al,dx
  41cac3:	dec    edx
  41cac4:	mov    ebx,0xe1e44154
  41cac9:	dec    eax
  41caca:	test   BYTE PTR [ebp+0x655ffb6b],dh
  41cad0:	cmp    bh,BYTE PTR [ebp+0x30]
  41cad3:	imul   eax,DWORD PTR [ebx-0x8],0x4739a018
  41cada:	dec    ebx
  41cadb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cadc:	lods   al,BYTE PTR ds:[esi]
  41cadd:	pop    ds
  41cade:	pop    es
  41cadf:	and    DWORD PTR [esi+0x48],edi
  41cae2:	dec    ebx
  41cae3:	popa   
  41cae4:	test   ebp,ebp
  41cae6:	icebp  
  41cae7:	mov    ecx,ebx
  41cae9:	sub    DWORD PTR [ebp+0x17],esp
  41caec:	add    DWORD PTR [ebx-0x759956d8],ecx
  41caf2:	adc    eax,0x2f9b1fb3
  41caf7:	ins    BYTE PTR es:[edi],dx
  41caf8:	or     esi,eax
  41cafa:	icebp  
  41cafb:	(bad)  
  41cafc:	int    0xc1
  41cafe:	xchg   DWORD PTR [eax-0x71],esp
  41cb01:	jne    0x41cae7
  41cb03:	mov    bl,0x6c
  41cb05:	sar    bl,cl
  41cb07:	sbb    eax,0xfaf53610
  41cb0c:	pop    ds
  41cb0d:	call   FWORD PTR [ecx]
  41cb0f:	std    
  41cb10:	test   BYTE PTR [eax+0x1fb1de9b],dh
  41cb16:	stos   DWORD PTR es:[edi],eax
  41cb17:	pop    ebx
  41cb18:	lahf   
  41cb19:	int    0x37
  41cb1b:	cmovae ebp,DWORD PTR [ebp+0x7c315bf2]
  41cb22:	push   eax
  41cb23:	xor    BYTE PTR [esi],ch
  41cb25:	aad    0xb0
  41cb27:	add    edi,0x5f
  41cb2a:	pop    ebx
  41cb2b:	das    
  41cb2c:	xor    eax,0x96c1cc42
  41cb31:	fld    QWORD PTR [edi+0x3d7c3297]
  41cb37:	ins    DWORD PTR es:[edi],dx
  41cb38:	push   cs
  41cb39:	(bad)  
  41cb3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb3b:	gs loopne 0x41cb85
  41cb3e:	jns    0x41caf8
  41cb40:	xchg   ecx,eax
  41cb41:	pop    es
  41cb42:	sub    ah,ch
  41cb44:	xor    dh,bl
  41cb46:	jns    0x41cb0d
  41cb48:	mov    edx,0x491c5002
  41cb4d:	pusha  
  41cb4e:	sub    DWORD PTR [ecx],esi
  41cb50:	scas   eax,DWORD PTR es:[edi]
  41cb51:	(bad)  
  41cb52:	fisttp WORD PTR [edx]
  41cb54:	mov    dl,BYTE PTR [ebp+0x32]
  41cb57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb58:	in     eax,dx
  41cb59:	cmp    eax,0xe3a786ee
  41cb5e:	pushf  
  41cb5f:	xchg   ebp,eax
  41cb60:	xchg   edx,eax
  41cb61:	jb     0x41cbd5
  41cb63:	pop    es
  41cb64:	cmp    DWORD PTR [edx+edx*1-0x4b3ba205],eax
  41cb6b:	adc    eax,0x80a33ae
  41cb70:	jne    0x41cb48
  41cb72:	arpl   WORD PTR [eax+0x38508659],cx
  41cb78:	inc    ebx
  41cb79:	push   ss
  41cb7a:	in     al,dx
  41cb7b:	mov    cl,0x7c
  41cb7d:	(bad)  
  41cb7e:	ds add cl,cl
  41cb81:	es std 
  41cb83:	iret   
  41cb84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb85:	aaa    
  41cb86:	scas   al,BYTE PTR es:[edi]
  41cb87:	scas   al,BYTE PTR es:[edi]
  41cb88:	mov    esp,0xefb2d29
  41cb8d:	shr    DWORD PTR [ebp+0x6b6efedf],1
  41cb93:	push   DWORD PTR [edx]
  41cb95:	(bad)  
  41cb96:	(bad)  
  41cb97:	pop    edx
  41cb98:	sub    al,0x14
  41cb9a:	and    DWORD PTR [ebp+0x5983231c],esp
  41cba0:	push   edx
  41cba1:	stos   BYTE PTR es:[edi],al
  41cba2:	cdq    
  41cba3:	loope  0x41cbd2
  41cba5:	cli    
  41cba6:	sub    dh,BYTE PTR [ebx]
  41cba8:	jne    0x41cb86
  41cbaa:	icebp  
  41cbab:	sbb    eax,0x9b0fe306
  41cbb0:	jg     0x41cb90
  41cbb2:	enter  0x45e3,0x55
  41cbb6:	mov    dl,0x53
  41cbb8:	xchg   ebp,eax
  41cbb9:	push   es
  41cbba:	cwde   
  41cbbb:	ins    DWORD PTR es:[edi],dx
  41cbbc:	xor    DWORD PTR ds:0xd5e04928,ecx
  41cbc2:	add    bh,cl
  41cbc4:	ret    
  41cbc5:	mov    ebx,0x89523a26
  41cbca:	das    
  41cbcb:	jnp    0x41cbfd
  41cbcd:	push   ecx
  41cbce:	mov    al,ds:0xde55f85
  41cbd3:	cmp    al,0x7f
  41cbd5:	test   al,0x10
  41cbd7:	jmp    DWORD PTR [eax]
  41cbd9:	xchg   edi,eax
  41cbda:	sahf   
  41cbdb:	sub    dl,bh
  41cbdd:	dec    edx
  41cbde:	xchg   ebx,eax
  41cbdf:	arpl   WORD PTR [eax-0x47],bx
  41cbe2:	xchg   ecx,eax
  41cbe3:	lods   eax,DWORD PTR ds:[esi]
  41cbe4:	mov    edx,0x3529a1c1
  41cbe9:	adc    al,0x19
  41cbeb:	mov    ch,0x5d
  41cbed:	popf   
  41cbee:	pop    es
  41cbef:	mov    eax,0x83e07c0e
  41cbf4:	xchg   BYTE PTR [edi],ch
  41cbf6:	leave  
  41cbf7:	xchg   esp,eax
  41cbf8:	pop    ss
  41cbf9:	loopne 0x41cc46
  41cbfb:	bndstx [ebp+ebp*1-0x62e85d2e],bnd1
  41cc03:	aaa    
  41cc04:	rol    ecx,1
  41cc06:	enter  0x53c6,0xdf
  41cc0a:	mov    al,ds:0x65e40a73
  41cc0f:	xchg   ebx,eax
  41cc10:	hlt    
  41cc11:	sbb    eax,0x36e3cf8e
  41cc16:	enter  0x5783,0x16
  41cc1a:	test   ebp,edi
  41cc1c:	mov    al,ds:0x6f1216b7
  41cc21:	xor    DWORD PTR cs:[ecx+0xb],ebx
  41cc25:	or     ebp,DWORD PTR [edx+0x66]
  41cc28:	mov    bl,0x3e
  41cc2a:	fst    DWORD PTR [edx-0x36]
  41cc2d:	test   eax,0xdb1060fd
  41cc32:	cli    
  41cc33:	mov    dl,bh
  41cc35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc36:	leave  
  41cc37:	push   edx
  41cc38:	mov    edi,0xc4a2353
  41cc3d:	mov    WORD PTR ds:0xdcfe6f67,es
  41cc43:	mov    bh,BYTE PTR [edi]
  41cc45:	ret    
  41cc46:	pop    ds
  41cc47:	jne    0x41cbe2
  41cc49:	out    0xfb,al
  41cc4b:	int3   
  41cc4c:	push   DWORD PTR [ebx+ebx*8]
  41cc4f:	and    eax,0xbde36c4
  41cc54:	daa    
  41cc55:	xchg   ebx,eax
  41cc56:	mov    ch,BYTE PTR [ebp+0x7118a25]
  41cc5c:	xor    DWORD PTR [edi+0x19],edx
  41cc5f:	shr    BYTE PTR [eax],cl
  41cc61:	pop    DWORD PTR [ebx-0x47]
  41cc64:	stc    
  41cc65:	stos   BYTE PTR es:[edi],al
  41cc66:	mov    bl,0x2e
  41cc68:	fwait
  41cc69:	ins    BYTE PTR es:[edi],dx
  41cc6a:	(bad)  
  41cc6c:	push   ebx
  41cc6d:	call   0x48cad9cd
  41cc72:	cmc    
  41cc73:	mov    eax,DWORD PTR [eax]
  41cc75:	ins    DWORD PTR es:[edi],dx
  41cc76:	ret    0x68b3
  41cc79:	sti    
  41cc7a:	xor    DWORD PTR [ebp-0x6f35049e],0x5f8e7135
  41cc84:	imul   edi,ecx,0xffffffd8
  41cc87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc88:	js     0x41cca9
  41cc8a:	push   esi
  41cc8b:	inc    edx
  41cc8c:	or     esi,0xffffff92
  41cc8f:	fbld   TBYTE PTR [eax-0x64]
  41cc92:	adc    al,BYTE PTR [eax-0x50]
  41cc95:	cs jne 0x41cc1b
  41cc98:	cdq    
  41cc99:	ret    
  41cc9a:	mov    cl,0x45
  41cc9c:	mov    cs,WORD PTR [ebp+0x67]
  41cc9f:	xor    DWORD PTR [eax+0x4a],0x6e
  41cca3:	and    al,0xbd
  41cca5:	sub    dl,bh
  41cca7:	mov    ah,0xc2
  41cca9:	ds out dx,al
  41ccab:	pop    eax
  41ccac:	aam    0x1d
  41ccae:	xor    ch,bh
  41ccb0:	pop    esp
  41ccb1:	push   edi
  41ccb2:	push   edx
  41ccb3:	iret   
  41ccb4:	mov    eax,DWORD PTR [edx]
  41ccb6:	push   edx
  41ccb7:	mov    ebx,0xde848795
  41ccbc:	jbe    0x41cce8
  41ccbe:	xchg   ecx,eax
  41ccbf:	retf   
  41ccc0:	cmp    BYTE PTR [edi+0x41],0xce
  41ccc4:	inc    ebp
  41ccc5:	cmp    esi,edi
  41ccc7:	mov    cl,0x45
  41ccc9:	pop    ds
  41ccca:	ret    
  41cccb:	mov    bh,0x7c
  41cccd:	inc    edi
  41ccce:	popa   
  41cccf:	out    dx,al
  41ccd0:	pop    edx
  41ccd1:	pushf  
  41ccd2:	cmp    edx,edi
  41ccd4:	pushf  
  41ccd5:	fsubr  DWORD PTR [esp+ebp*2+0x78bf3d15]
  41ccdc:	mov    ss,WORD PTR [ebx+0x49]
  41ccdf:	add    BYTE PTR [esi-0x9],0x56
  41cce3:	inc    ecx
  41cce4:	out    dx,al
  41cce5:	cmp    ebx,DWORD PTR [edi]
  41cce7:	and    al,0x12
  41cce9:	mov    dl,0xf7
  41cceb:	pop    DWORD PTR [eax-0x106e2380]
  41ccf1:	or     cl,bh
  41ccf3:	pop    esp
  41ccf4:	mov    ebx,0xcfc354fb
  41ccf9:	imul   ecx,DWORD PTR ds:0xafe5b87e,0x3a
  41cd00:	sysexit 
  41cd02:	aas    
  41cd03:	mov    ds:0xe70c330a,al
  41cd08:	cmp    al,0x53
  41cd0a:	and    BYTE PTR [ebx+0x12b43c62],0x3a
  41cd11:	lods   al,BYTE PTR ds:[esi]
  41cd12:	add    DWORD PTR [esi],0x3
  41cd15:	cmp    al,0x86
  41cd17:	mul    BYTE PTR [edi+0x5a]
  41cd1a:	cdq    
  41cd1b:	mov    edi,0x852de54f
  41cd20:	repz sub BYTE PTR [edx],0x69
  41cd24:	mov    ch,0xe7
  41cd26:	leave  
  41cd27:	xchg   esi,eax
  41cd28:	mov    dl,0xb6
  41cd2a:	sub    esp,edi
  41cd2c:	stc    
  41cd2d:	inc    edx
  41cd2e:	xor    ch,bh
  41cd30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd31:	inc    ebp
  41cd32:	sbb    al,0x5
  41cd34:	jmp    0xdc75977d
  41cd39:	or     bl,BYTE PTR [ecx-0x2e]
  41cd3c:	inc    ebx
  41cd3d:	fbld   TBYTE PTR [esi+0x54ce2786]
  41cd43:	push   ss
  41cd44:	std    
  41cd45:	jmp    0x68c2:0x904d7435
  41cd4c:	lea    esp,[ebp+0x3e]
  41cd4f:	add    edi,ebx
  41cd51:	mov    DWORD PTR fs:[esi-0x21],esp
  41cd55:	cdq    
  41cd56:	jp     0x41ccf0
  41cd58:	cmp    BYTE PTR [ecx-0x64],ch
  41cd5b:	cmp    BYTE PTR [ebx],ah
  41cd5d:	pushf  
  41cd5e:	sub    al,0x89
  41cd60:	sti    
  41cd61:	fsubr  QWORD PTR [esi-0x5d]
  41cd64:	mov    esi,0x59faca49
  41cd69:	es dec eax
  41cd6b:	mov    edx,0xf0714319
  41cd70:	div    BYTE PTR [edx-0x28]
  41cd73:	cmp    bl,BYTE PTR [edx+0x5c]
  41cd76:	push   cs
  41cd77:	sahf   
  41cd78:	loope  0x41cdeb
  41cd7a:	pop    ebp
  41cd7b:	imul   edx,DWORD PTR [esi+0xfeaba2e],0x14
  41cd82:	add    ch,BYTE PTR [edx]
  41cd84:	and    bl,BYTE PTR [edx]
  41cd86:	test   al,0x2d
  41cd88:	leave  
  41cd89:	out    0x2a,al
  41cd8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd8c:	pop    esp
  41cd8d:	xchg   BYTE PTR [ecx],bl
  41cd8f:	ss xchg ecx,eax
  41cd91:	mov    dl,0xa8
  41cd93:	sbb    eax,0xe1c2870b
  41cd98:	stc    
  41cd99:	cli    
  41cd9a:	es cmc 
  41cd9c:	push   ebp
  41cd9d:	xchg   DWORD PTR [ecx+0x4a88b117],eax
  41cda3:	cmp    DWORD PTR [esi+esi*1-0xd6930d4],0xffffff85
  41cdab:	dec    ecx
  41cdac:	cmp    DWORD PTR [edx],esi
  41cdae:	mov    al,ds:0x90f58d4f
  41cdb3:	shr    eax,0x6c
  41cdb6:	shl    al,cl
  41cdb8:	adc    edi,DWORD PTR [edi+edx*2]
  41cdbb:	lods   eax,DWORD PTR ds:[esi]
  41cdbc:	and    eax,0xa7ec2efd
  41cdc1:	jge    0x41cdce
  41cdc3:	(bad)  
  41cdc4:	push   cs
  41cdc5:	or     bh,bl
  41cdc7:	mov    al,0xe1
  41cdc9:	jo     0x41cdf3
  41cdcb:	add    al,0x88
  41cdcd:	xchg   DWORD PTR ds:0xf2aa9a05,edi
  41cdd3:	adc    BYTE PTR [edi+0x10d8fbee],bh
  41cdd9:	popa   
  41cdda:	jle    0x41cdbb
  41cddc:	xor    DWORD PTR [ebx-0x25],0x4
  41cde0:	repz mov esi,0x81e873cd
  41cde6:	in     al,0xaf
  41cde8:	cmp    ch,dh
  41cdea:	call   0xdad8c631
  41cdef:	addr16 imul esp,eax,0xfffffff1
  41cdf3:	mov    edi,edi
  41cdf5:	pop    edi
  41cdf6:	xor    eax,0x5768fb6f
  41cdfb:	jl     0x41ce59
  41cdfd:	test   BYTE PTR [eax],ah
  41cdff:	inc    esi
  41ce00:	or     ah,BYTE PTR [esi-0x6fe28adb]
  41ce06:	sti    
  41ce07:	sub    bl,bl
  41ce09:	push   ecx
  41ce0a:	jge    0x41cdbb
  41ce0c:	cwde   
  41ce0d:	jmp    FWORD PTR [edi+0xe]
  41ce10:	sbb    al,dh
  41ce12:	imul   esp,DWORD PTR [ebp+esi*1-0x3d4486ff],0xfffffff8
  41ce1a:	or     al,0x6e
  41ce1c:	int    0x48
  41ce1e:	push   0x3c11882
  41ce23:	jge    0x41cdee
  41ce25:	and    ecx,eax
  41ce27:	and    eax,0x31d51a7c
  41ce2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce2d:	lods   eax,DWORD PTR ds:[esi]
  41ce2e:	aas    
  41ce2f:	arpl   WORD PTR [ecx-0x1eeaf1cf],dx
  41ce35:	popf   
  41ce36:	sbb    eax,0x14ef12ac
  41ce3b:	jp     0x41ce43
  41ce3d:	nop
  41ce3e:	cmp    BYTE PTR [edi+0x7f2dad0],bh
  41ce44:	push   ss
  41ce45:	sub    al,0xd7
  41ce47:	sub    BYTE PTR [ecx+ebp*8],bh
  41ce4a:	fdiv   st,st(7)
  41ce4c:	and    eax,0xec41093e
  41ce51:	inc    esi
  41ce52:	fcmovbe st,st(7)
  41ce54:	sahf   
  41ce55:	sahf   
  41ce56:	lock sbb dh,ah
  41ce59:	mov    dh,BYTE PTR [edx+0x1ba432c7]
  41ce5f:	jo     0x41ce8b
  41ce61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce62:	jae    0x41cde5
  41ce64:	push   ebx
  41ce65:	fs push 0x23cb224f
  41ce6b:	fsub   DWORD PTR [esi-0x14ad57df]
  41ce71:	pushf  
  41ce72:	fs push esp
  41ce74:	inc    eax
  41ce75:	cmp    dh,BYTE PTR [ebx]
  41ce77:	arpl   di,bp
  41ce79:	cmp    al,0xfe
  41ce7b:	pop    edi
  41ce7c:	loop   0x41cedd
  41ce7e:	xchg   DWORD PTR [ebx],esp
  41ce80:	sub    esi,edx
  41ce82:	sbb    esi,DWORD PTR [edi+0x665f7c67]
  41ce88:	out    dx,eax
  41ce89:	push   cs
  41ce8a:	dec    ebp
  41ce8b:	ins    BYTE PTR es:[edi],dx
  41ce8c:	push   esp
  41ce8d:	mul    BYTE PTR [ebp+edi*1+0x3c]
  41ce91:	and    eax,0xd5423869
  41ce96:	sbb    al,BYTE PTR [esi-0x264ddf54]
  41ce9c:	fild   QWORD PTR [ebx+0x7f]
  41ce9f:	fcom   st(3)
  41cea1:	sti    
  41cea2:	cli    
  41cea3:	in     al,0xd6
  41cea5:	hlt    
  41cea6:	push   ecx
  41cea7:	mov    al,0x65
  41cea9:	jle    0x41ceb6
  41ceab:	aam    0x6d
  41cead:	ror    ch,1
  41ceaf:	mov    al,0xd2
  41ceb1:	jmp    0x597d:0x709d2604
  41ceb8:	mov    ?,ebp
  41ceba:	es ins BYTE PTR es:[edi],dx
  41cebc:	jo     0x41cea9
  41cebe:	jae    0x41ce9f
  41cec0:	loop   0x41cee7
  41cec2:	and    ah,BYTE PTR [edx+0x23]
  41cec5:	pop    ebp
  41cec6:	pop    eax
  41cec7:	mov    esi,0x660abde6
  41cecc:	dec    ebp
  41cecd:	rcl    DWORD PTR cs:[eax+0xbfce729],cl
  41ced4:	lods   al,BYTE PTR ds:[esi]
  41ced5:	les    edi,FWORD PTR [edx-0x1d]
  41ced8:	inc    ecx
  41ced9:	pop    ebp
  41ceda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cedb:	inc    ecx
  41cedc:	mov    cl,BYTE PTR [edx]
  41cede:	adc    al,BYTE PTR [eax]
  41cee0:	int    0x25
  41cee2:	and    BYTE PTR [ebx],dh
  41cee4:	fist   WORD PTR [ebx+0x57ea8769]
  41ceea:	mov    eax,0x130f1d07
  41ceef:	dec    eax
  41cef0:	mov    ebp,0x9ba75cb3
  41cef5:	arpl   WORD PTR [edx+0x4133243a],si
  41cefb:	jge    0x41cf5c
  41cefd:	sub    esp,DWORD PTR [eax+eax*4-0x516b0360]
  41cf04:	mov    dh,0x75
  41cf06:	xor    al,0x6d
  41cf08:	or     DWORD PTR [esi+edi*1+0xa],ebp
  41cf0c:	and    eax,0xb4ef1420
  41cf11:	les    eax,FWORD PTR ds:0x48fb41ee
  41cf17:	dec    edx
  41cf18:	stc    
  41cf19:	pop    ds
  41cf1a:	pushf  
  41cf1b:	mov    ch,0xaa
  41cf1d:	div    DWORD PTR [edi-0x9]
  41cf20:	in     eax,dx
  41cf21:	push   edi
  41cf22:	xor    al,0x82
  41cf24:	mov    dl,0x24
  41cf26:	push   eax
  41cf27:	sub    edi,DWORD PTR [eax+0x7c]
  41cf2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf2b:	fs jle 0x41cf99
  41cf2e:	push   ss
  41cf2f:	lods   al,BYTE PTR ds:[esi]
  41cf30:	adc    bh,BYTE PTR [esi+0x19c123b5]
  41cf36:	mov    esp,0x6d8ef03b
  41cf3b:	shr    dh,cl
  41cf3d:	xchg   ebx,eax
  41cf3e:	fild   WORD PTR [ecx]
  41cf40:	clc    
  41cf41:	cmc    
  41cf42:	das    
  41cf43:	imul   esi,esi,0x9
  41cf46:	cli    
  41cf47:	fbld   TBYTE PTR [eax+0x53]
  41cf4a:	sub    BYTE PTR [edx+edx*4],dh
  41cf4d:	jge    0x41cfb3
  41cf4f:	dec    DWORD PTR [eax]
  41cf51:	sti    
  41cf52:	sar    DWORD PTR [eax],0x34
  41cf55:	ins    BYTE PTR es:[edi],dx
  41cf56:	minps  xmm2,XMMWORD PTR [edx-0x21db9d94]
  41cf5d:	adc    BYTE PTR [ebp+0x73f877c0],cl
  41cf63:	aad    0x51
  41cf65:	and    ebx,DWORD PTR [ebx-0x167fbb40]
  41cf6b:	cmp    ah,BYTE PTR [edx-0x54]
  41cf6e:	ret    0xf0ff
  41cf71:	push   0xd6076a5a
  41cf76:	gs out 0xd7,al
  41cf79:	stc    
  41cf7a:	pop    ss
  41cf7b:	stos   BYTE PTR es:[edi],al
  41cf7c:	sahf   
  41cf7d:	inc    eax
  41cf7e:	pusha  
  41cf7f:	add    esi,DWORD PTR [ecx]
  41cf81:	js     0x41cf7e
  41cf83:	daa    
  41cf84:	xchg   ebx,eax
  41cf85:	cmp    al,0x4f
  41cf87:	inc    ecx
  41cf88:	push   esi
  41cf89:	jl     0x41cff6
  41cf8b:	sub    eax,0xadefd299
  41cf90:	outs   dx,DWORD PTR ds:[esi]
  41cf91:	call   0x6ff8:0xf3c5bb86
  41cf98:	sbb    ch,BYTE PTR [edx+eax*8+0x70]
  41cf9c:	xor    BYTE PTR [ebx],bl
  41cf9e:	dec    esi
  41cf9f:	sub    eax,0x69a5a25
  41cfa4:	sub    eax,0x9a3424f
  41cfa9:	sbb    DWORD PTR [ecx],0x7d
  41cfac:	stos   BYTE PTR es:[edi],al
  41cfad:	(bad)  
  41cfae:	les    ebp,FWORD PTR [ebx]
  41cfb0:	fs fwait
  41cfb2:	aas    
  41cfb3:	push   cs
  41cfb4:	adc    dh,BYTE PTR [eax+ebp*1-0x43d837a9]
  41cfbb:	stos   DWORD PTR es:[edi],eax
  41cfbc:	icebp  
  41cfbd:	adc    dl,al
  41cfbf:	adc    cl,0x95
  41cfc2:	add    al,0xbe
  41cfc4:	inc    edi
  41cfc5:	jnp    0x41d030
  41cfc7:	clc    
  41cfc8:	scas   eax,DWORD PTR es:[edi]
  41cfc9:	int    0x19
  41cfcb:	lods   al,BYTE PTR ds:[esi]
  41cfcc:	and    al,0xa9
  41cfce:	hlt    
  41cfcf:	push   es
  41cfd0:	pop    es
  41cfd1:	and    esp,ecx
  41cfd3:	push   ss
  41cfd4:	fiadd  WORD PTR ss:[edx]
  41cfd7:	test   eax,0xbe9b9e5d
  41cfdc:	or     bh,BYTE PTR [eax+eax*4]
  41cfdf:	iret   
  41cfe0:	push   cs
  41cfe1:	and    DWORD PTR [eax+eax*8+0x5392a345],eax
  41cfe8:	jnp    0x41cf7e
  41cfea:	xchg   esp,eax
  41cfeb:	mov    cl,0x32
  41cfed:	and    BYTE PTR [edx+0x40],ah
  41cff0:	jo     0x41cf81
  41cff2:	jbe    0x41cf95
  41cff4:	or     ch,BYTE PTR [ecx+edx*8+0x13]
  41cff8:	jg     0x41cf81
  41cffa:	add    eax,0xab11d024
  41cfff:	jns    0x41d01d
  41d001:	cmp    BYTE PTR [ebx-0x51],al
  41d004:	xor    dl,al
  41d006:	loop   0x41d01c
  41d008:	xchg   ebp,eax
  41d009:	pop    ds
  41d00a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d00b:	jecxz  0x41cfd3
  41d00d:	lock gs mov esp,0xb73c4ca7
  41d014:	imul   edx,DWORD PTR [edi-0x53],0xced03a6f
  41d01b:	imul   esp,DWORD PTR [ebx-0x55],0xfffffffd
  41d01f:	pop    ecx
  41d020:	into   
  41d021:	fwait
  41d022:	push   es
  41d023:	out    dx,al
  41d024:	icebp  
  41d025:	push   cs
  41d026:	out    dx,al
  41d027:	cli    
  41d028:	push   ecx
  41d029:	xor    ebx,DWORD PTR [ecx+0x5d]
  41d02c:	mov    dh,0xde
  41d02e:	mov    ebp,0xac4717cd
  41d033:	cmp    al,0xc6
  41d035:	out    0xef,al
  41d037:	push   edx
  41d038:	mov    ah,BYTE PTR [edi]
  41d03a:	adc    DWORD PTR [ebp+esi*1-0x613e7ee9],esp
  41d041:	pop    ecx
  41d042:	fwait
  41d043:	xchg   esp,eax
  41d044:	mov    bl,BYTE PTR [ebp-0x24ad08b0]
  41d04a:	push   0xffffffb6
  41d04c:	loope  0x41d09d
  41d04e:	sbb    DWORD PTR [edx+0x6609d59a],0x4887de18
  41d058:	push   0x49
  41d05a:	je     0x41d092
  41d05c:	call   DWORD PTR [ebx+0x3]
  41d05f:	sti    
  41d060:	lea    esi,[ecx-0xa]
  41d063:	or     BYTE PTR [edx+eiz*4+0x3df15df8],ch
  41d06a:	adc    eax,0xce790de9
  41d06f:	loopne 0x41d05c
  41d071:	out    0xcd,al
  41d073:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d074:	outs   dx,DWORD PTR ds:[esi]
  41d075:	mov    edi,0xd48378d3
  41d07a:	dec    ebp
  41d07b:	xchg   edx,eax
  41d07c:	xor    cl,BYTE PTR [ebx]
  41d07e:	adc    edi,ecx
  41d080:	gs test eax,0xef31910f
  41d086:	in     al,dx
  41d087:	ins    DWORD PTR es:[edi],dx
  41d088:	iret   
  41d089:	adc    edi,DWORD PTR [ebx]
  41d08b:	add    al,0xf
  41d08d:	add    DWORD PTR [edi-0x78],edi
  41d090:	out    0x64,eax
  41d092:	and    eax,0x92ea0344
  41d097:	mov    BYTE PTR [ecx],dh
  41d099:	xor    ebx,DWORD PTR [esi]
  41d09b:	xor    eax,0x68f3b1fa
  41d0a0:	mov    dl,BYTE PTR [edi]
  41d0a2:	pop    ss
  41d0a3:	and    DWORD PTR ds:0x9f9e579c,esp
  41d0a9:	ins    BYTE PTR es:[edi],dx
  41d0aa:	stos   DWORD PTR es:[edi],eax
  41d0ab:	cmp    al,0xc8
  41d0ad:	xchg   BYTE PTR [eax+0x4518b95b],al
  41d0b3:	pop    edx
  41d0b4:	aaa    
  41d0b5:	pusha  
  41d0b6:	mov    DWORD PTR [edx+0x5d],edi
  41d0b9:	ror    DWORD PTR [ebx+0x38b66d08],0xd4
  41d0c0:	add    ah,BYTE PTR [ecx]
  41d0c2:	fbld   TBYTE PTR [edx]
  41d0c4:	inc    edx
  41d0c5:	and    bl,bl
  41d0c7:	popf   
  41d0c8:	sti    
  41d0c9:	mov    cl,BYTE PTR [ecx+0x79]
  41d0cc:	mov    ah,0x19
  41d0ce:	scas   al,BYTE PTR es:[edi]
  41d0cf:	inc    ebp
  41d0d0:	mov    eax,DWORD PTR [ebp+0x49]
  41d0d3:	gs jg  0x41d088
  41d0d6:	imul   esp,DWORD PTR ds:0xcbb540e,0x4808c76
  41d0e0:	pop    ecx
  41d0e1:	push   0x6e
  41d0e3:	mov    ebp,0xc8ae7533
  41d0e8:	adc    esi,DWORD PTR [edx]
  41d0ea:	fwait
  41d0eb:	add    eax,0x68fd51f1
  41d0f1:	xlat   BYTE PTR ds:[ebx]
  41d0f2:	cmp    DWORD PTR [edi+0x471e2946],0xffffffbb
  41d0f9:	xor    DWORD PTR [esi+ecx*1],0xe864eff
  41d100:	cmp    BYTE PTR [ebx],dh
  41d102:	mov    WORD PTR [edi+0x4c7334c9],es
  41d108:	and    bh,cl
  41d10a:	scas   al,BYTE PTR es:[edi]
  41d10b:	repz dec ecx
  41d10d:	jp     0x41d17b
  41d10f:	out    0xb9,eax
  41d111:	mov    ss,eax
  41d113:	pop    ebx
  41d114:	loopne 0x41d0b3
  41d116:	inc    esi
  41d117:	int    0x5f
  41d119:	(bad)  
  41d11a:	test   al,0x46
  41d11c:	out    dx,al
  41d11d:	(bad)  
  41d11e:	cli    
  41d11f:	data16 test al,0xca
  41d122:	call   0x1831:0x3060fa4a
  41d129:	inc    esi
  41d12a:	cmp    bh,BYTE PTR [esi+eiz*4+0x7a72ce92]
  41d131:	call   0xfc1f:0xce991bdb
  41d138:	push   cs
  41d139:	fimul  WORD PTR [ebx-0x24]
  41d13c:	(bad)  
  41d13d:	fwait
  41d13e:	retf   0x2016
  41d141:	cmp    ecx,0xffffff93
  41d144:	iret   
  41d145:	mov    eax,?
  41d147:	dec    ecx
  41d148:	mov    cl,bl
  41d14a:	inc    edx
  41d14b:	leave  
  41d14c:	mov    dl,0x0
  41d14e:	(bad)  
  41d14f:	pop    ds
  41d150:	cmp    eax,DWORD PTR [ebp+0x78f8246a]
  41d156:	add    ebx,ebx
  41d158:	(bad)  [edi+0x6f642546]
  41d15e:	cli    
  41d15f:	ins    BYTE PTR es:[edi],dx
  41d160:	pop    esp
  41d161:	shl    DWORD PTR [esi-0x5c],1
  41d164:	add    ebx,DWORD PTR [ecx+ebp*8-0x3440f0b2]
  41d16b:	sbb    edi,DWORD PTR [ebx-0x2e]
  41d16e:	xor    DWORD PTR [ebp-0x5b8e5fdd],ebx
  41d174:	(bad)  
  41d175:	int    0x34
  41d177:	call   0x4f45:0xf6a6384a
  41d17e:	enter  0xbfc2,0xfe
  41d182:	mov    ebp,0xad03a4ff
  41d187:	ror    bl,0xd0
  41d18a:	mov    ah,0xf6
  41d18c:	lods   al,BYTE PTR ds:[esi]
  41d18d:	mov    bh,0x83
  41d18f:	repz jno 0x41d12d
  41d192:	pop    eax
  41d193:	pop    edx
  41d194:	jmp    0x92469a32
  41d199:	sub    BYTE PTR [ebx],ch
  41d19b:	adc    al,0x3f
  41d19d:	sub    dl,BYTE PTR ds:[eax+esi*8+0x28ea9e41]
  41d1a5:	in     al,dx
  41d1a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1a7:	jg     0x41d205
  41d1a9:	pop    esi
  41d1aa:	mov    DWORD PTR [ecx-0x1c],edx
  41d1ad:	mov    al,0x4d
  41d1af:	cmp    cl,BYTE PTR [ebx-0x9]
  41d1b2:	shl    BYTE PTR [ecx-0x7a9c0a02],1
  41d1b8:	push   ebx
  41d1b9:	loopne 0x41d209
  41d1bb:	aaa    
  41d1bc:	popf   
  41d1bd:	or     bl,bh
  41d1bf:	mov    ds:0xf4aca778,al
  41d1c4:	adc    edi,DWORD PTR [ebx]
  41d1c6:	xchg   ebx,eax
  41d1c7:	cmp    esp,esi
  41d1c9:	imul   eax,DWORD PTR [ecx],0x10
  41d1cc:	xor    eax,0x69d5de0c
  41d1d1:	loope  0x41d1c9
  41d1d3:	xchg   ebp,eax
  41d1d4:	pop    ecx
  41d1d5:	shl    BYTE PTR [ebx],1
  41d1d7:	adc    al,0x1e
  41d1d9:	mov    al,BYTE PTR [edx+0x61b2abd]
  41d1df:	loopne 0x41d250
  41d1e1:	jne    0x41d238
  41d1e3:	and    cl,BYTE PTR [edx]
  41d1e5:	add    ebx,ebx
  41d1e7:	call   0xe91eb097
  41d1ec:	mov    DWORD PTR [esi+0x2f],edx
  41d1ef:	stos   DWORD PTR es:[edi],eax
  41d1f0:	enter  0x96c5,0x2d
  41d1f4:	vprotw xmm12,xmm2,0xa0
  41d1f9:	xor    cl,BYTE PTR [eax+0x5170e78e]
  41d1ff:	jmp    0x10f5:0xe06a15b6
  41d206:	jle    0x41d1ba
  41d208:	out    dx,al
  41d209:	ss and ebx,edx
  41d20c:	mov    bl,BYTE PTR [eax+ebx*4-0x57]
  41d210:	dec    ebp
  41d211:	cli    
  41d212:	mov    bl,0x88
  41d214:	bound  eax,QWORD PTR [edx+0x197e1c14]
  41d21a:	mov    ebx,esp
  41d21c:	mov    ebx,0xa1f86e1
  41d221:	and    DWORD PTR [edx+0xacd32ce],ecx
  41d227:	or     DWORD PTR [esi-0x52],ebp
  41d22a:	mov    eax,0xb4754c69
  41d22f:	not    DWORD PTR [edi+edi*1]
  41d232:	or     eax,0x7ea62fe0
  41d237:	stc    
  41d238:	mov    ebp,0x1ab92863
  41d23d:	stos   BYTE PTR es:[edi],al
  41d23e:	adc    DWORD PTR [ebx-0xbf93e94],eax
  41d244:	out    0x67,eax
  41d246:	ja     0x41d1f7
  41d248:	loope  0x41d2a4
  41d24a:	sub    edi,eax
  41d24c:	mov    ch,BYTE PTR [edx-0x45]
  41d24f:	push   cs
  41d250:	dec    ebp
  41d251:	jns    0x41d257
  41d253:	xchg   edi,eax
  41d254:	push   es
  41d255:	in     al,dx
  41d256:	push   edi
  41d257:	les    esp,FWORD PTR [ecx+0x53cf619]
  41d25d:	sbb    eax,0x534bd151
  41d262:	mov    ebx,0xcb19e509
  41d267:	rol    cl,cl
  41d269:	in     eax,0xea
  41d26b:	push   ebx
  41d26c:	fcom   DWORD PTR ds:0xa089c041
  41d272:	ret    
  41d273:	lock jecxz 0x41d2d0
  41d276:	in     eax,dx
  41d277:	prefetcht1 BYTE PTR [eax+0x3d]
  41d27b:	ds dec esp
  41d27d:	dec    esp
  41d27e:	mov    eax,ds:0x68f4fa2d
  41d283:	lods   eax,DWORD PTR ds:[esi]
  41d284:	cdq    
  41d285:	or     esp,DWORD PTR [eax+0x26]
  41d288:	sti    
  41d289:	mov    ds:0x850e82c5,eax
  41d28e:	(bad)  
  41d28f:	mov    ds:0x947b952,al
  41d294:	and    DWORD PTR [edx+0x71],esp
  41d297:	addr16 jl 0x41d2ae
  41d29a:	sub    BYTE PTR [esi+esi*8+0x6c],al
  41d29e:	jbe    0x41d235
  41d2a0:	xchg   BYTE PTR [edi+0x1e],bl
  41d2a3:	jg     0x41d229
  41d2a5:	xor    edi,edi
  41d2a7:	cmp    DWORD PTR [edi+0x2f],0xd0b4968b
  41d2ae:	fcmovnbe st,st(5)
  41d2b0:	xchg   ecx,eax
  41d2b1:	cwde   
  41d2b2:	dec    ecx
  41d2b3:	and    ah,BYTE PTR [edi]
  41d2b5:	int    0xe6
  41d2b7:	out    dx,al
  41d2b8:	not    al
  41d2ba:	push   es
  41d2bb:	mov    DWORD PTR [ebx-0x30c45878],ebx
  41d2c1:	(bad)  
  41d2c2:	adc    DWORD PTR [edi+edi*4+0x5f],ecx
  41d2c6:	mov    eax,DWORD PTR [ebx+edi*2-0x140ad950]
  41d2cd:	repnz pop DWORD PTR [edi]
  41d2d0:	retf   0x73a7
  41d2d3:	sahf   
  41d2d4:	mov    edi,0xeedb25d5
  41d2d9:	pushf  
  41d2da:	aad    0x3
  41d2dc:	repnz pop dx
  41d2df:	inc    edi
  41d2e0:	sbb    DWORD PTR [ecx+0x33],esp
  41d2e3:	std    
  41d2e4:	imul   ebx,ebp,0xa847e867
  41d2ea:	xchg   ebp,eax
  41d2eb:	imul   esi,DWORD PTR [ebx+0xffd370f],0xc
  41d2f2:	mov    esp,0xe281b00c
  41d2f7:	add    al,0xec
  41d2f9:	sub    al,0xb4
  41d2fb:	in     al,dx
  41d2fc:	mov    dh,0xe
  41d2fe:	and    cl,BYTE PTR [ecx+edx*4+0x21]
  41d302:	push   ebx
  41d303:	icebp  
  41d304:	inc    ecx
  41d305:	mov    ecx,0x8873c745
  41d30a:	pop    ebx
  41d30b:	cdq    
  41d30c:	mov    eax,DWORD PTR [ebx]
  41d30e:	scas   eax,DWORD PTR es:[edi]
  41d30f:	imul   BYTE PTR [eax-0x5df7fdda]
  41d315:	into   
  41d316:	icebp  
  41d317:	test   al,0xc1
  41d319:	mov    eax,ds:0x44303a8a
  41d31e:	adc    bl,BYTE PTR [ebp-0x32f8592b]
  41d324:	loop   0x41d39c
  41d326:	jecxz  0x41d2be
  41d328:	shl    BYTE PTR [edi+0x3749851c],0xa2
  41d32f:	in     eax,0xc6
  41d331:	add    ebp,edx
  41d333:	pusha  
  41d334:	cli    
  41d335:	(bad)  
  41d336:	enter  0xb3b3,0xab
  41d33a:	add    DWORD PTR [edx],ecx
  41d33c:	or     DWORD PTR [edi],esp
  41d33e:	outs   dx,DWORD PTR ds:[esi]
  41d33f:	loope  0x41d39f
  41d341:	xchg   edi,eax
  41d342:	pop    ss
  41d343:	and    eax,0x78e31762
  41d348:	push   cs
  41d349:	lock xlat BYTE PTR ds:[ebx]
  41d34b:	mov    cl,0x46
  41d34d:	fdiv   QWORD PTR [ebx]
  41d34f:	sti    
  41d350:	ficom  WORD PTR [eax]
  41d352:	pop    sp
  41d354:	xor    BYTE PTR [edi+0x7b],cl
  41d357:	ret    0x7adb
  41d35a:	rcl    BYTE PTR [edi-0x133f5676],cl
  41d360:	mov    ds:0x61842bd0,al
  41d365:	aad    0xd9
  41d367:	mov    cl,BYTE PTR [edi]
  41d369:	shl    BYTE PTR [edx-0x40b907de],1
  41d36f:	popa   
  41d370:	adc    eax,0x618a5d8f
  41d375:	ror    esi,1
  41d377:	(bad)
  41d37a:	mov    bl,0x26
  41d37c:	in     al,0xb4
  41d37e:	pop    esp
  41d37f:	(bad)  
  41d380:	sbb    ah,BYTE PTR [edi+0x1c]
  41d383:	(bad)  
  41d384:	jmp    0x6250981a
  41d389:	and    DWORD PTR [edx],ebx
  41d38b:	mov    bh,0x48
  41d38d:	dec    eax
  41d38e:	out    0x4e,eax
  41d390:	fwait
  41d391:	idiv   BYTE PTR [esi]
  41d393:	jmp    0x41d3a1
  41d395:	inc    ecx
  41d396:	ja     0x41d344
  41d398:	and    bh,BYTE PTR [ebx-0x202de8f0]
  41d39e:	addr16 xchg esp,eax
  41d3a0:	mov    ds:0xc7f5b639,eax
  41d3a5:	jp     0x41d3ac
  41d3a7:	mov    edi,0xe55dd9a8
  41d3ac:	out    0xac,eax
  41d3ae:	loopne 0x41d3a2
  41d3b0:	push   ds
  41d3b1:	pop    edx
  41d3b2:	sbb    DWORD PTR ds:0xb5452a7a,0x2c
  41d3b9:	jns    0x41d3e8
  41d3bb:	retf   0x44ca
  41d3be:	jge    0x41d395
  41d3c0:	(bad)  
  41d3c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3c2:	(bad)  
  41d3c3:	cdq    
  41d3c4:	push   esi
  41d3c5:	sub    eax,0x8c770e2b
  41d3ca:	icebp  
  41d3cb:	cmp    ch,BYTE PTR [edx+ecx*1-0x80]
  41d3cf:	int3   
  41d3d0:	push   ds
  41d3d1:	aas    
  41d3d2:	inc    ecx
  41d3d3:	mov    esi,0xe71a2ebc
  41d3d8:	std    
  41d3d9:	adc    eax,0x246700c0
  41d3de:	or     al,0x75
  41d3e0:	ss mov dh,0xc5
  41d3e3:	push   ss
  41d3e4:	jae    0x41d40d
  41d3e6:	neg    ebx
  41d3e8:	fdivr  QWORD PTR [esi+0x6ecadd14]
  41d3ee:	dec    ebp
  41d3ef:	cmc    
  41d3f0:	jp     0x41d463
  41d3f2:	mov    eax,0xc3f556aa
  41d3f7:	in     al,dx
  41d3f8:	loope  0x41d37e
  41d3fa:	(bad)  
  41d3fb:	bound  ebp,QWORD PTR [ecx]
  41d3fd:	pop    ecx
  41d3fe:	jp     0x41d419
  41d400:	or     DWORD PTR [ecx],eax
  41d402:	xor    DWORD PTR [edx+0x70],esp
  41d405:	sub    al,0xe5
  41d407:	push   esp
  41d408:	push   ecx
  41d409:	in     al,dx
  41d40a:	and    BYTE PTR [eax],cl
  41d40c:	lea    esi,[eax+0x3b]
  41d40f:	je     0x41d47e
  41d411:	or     edx,DWORD PTR [ebx]
  41d413:	leave  
  41d414:	cmc    
  41d415:	pusha  
  41d416:	fsubr  DWORD PTR [esi]
  41d418:	repz (bad) 
  41d41a:	cmp    esp,ebx
  41d41c:	sti    
  41d41d:	(bad)
  41d421:	mov    esi,0x4f68dff9
  41d426:	xchg   ecx,eax
  41d427:	push   0xbc77ecc1
  41d42c:	es push es
  41d42e:	mov    ch,0x8d
  41d430:	inc    ecx
  41d431:	and    cl,dh
  41d433:	lea    esi,[ebp-0x90eb9d2]
  41d439:	mov    eax,0xb328f774
  41d43e:	enter  0xd8e1,0x46
  41d442:	enter  0x82ec,0xd
  41d446:	or     DWORD PTR [edx+0x6d2a9f9a],edi
  41d44c:	adc    eax,0xb445aa98
  41d451:	es out 0x58,al
  41d454:	sub    WORD PTR [esi-0x563f956f],bx
  41d45b:	fadd   QWORD PTR [esi+0xd]
  41d45f:	xchg   edx,eax
  41d460:	dec    ebx
  41d461:	ffreep st(0)
  41d463:	ret    0x5c3e
  41d466:	xor    eax,0x1f81a872
  41d46b:	loope  0x41d3f2
  41d46d:	fwait
  41d46e:	xlat   BYTE PTR ds:[ebx]
  41d46f:	inc    esi
  41d470:	or     BYTE PTR [esi-0x4b],ch
  41d473:	push   edi
  41d474:	adc    ebx,DWORD PTR [esi]
  41d476:	dec    edi
  41d477:	lods   eax,DWORD PTR ds:[esi]
  41d478:	cs stos DWORD PTR es:[edi],eax
  41d47a:	icebp  
  41d47b:	sub    DWORD PTR [edi],ecx
  41d47d:	adc    BYTE PTR [ebp+0x73],dh
  41d480:	ret    0x7741
  41d483:	rol    DWORD PTR [esi+eiz*1-0x27],1
  41d487:	mov    ah,0x33
  41d489:	or     bl,BYTE PTR [ecx-0x40195da0]
  41d48f:	nop
  41d490:	push   0xb
  41d492:	(bad)  
  41d493:	retf   0x8e22
  41d496:	lea    edx,[edx]
  41d498:	pop    ss
  41d499:	pop    esp
  41d49a:	pop    ss
  41d49b:	add    edx,DWORD PTR [ebx+0x44b99cc5]
  41d4a1:	sbb    al,0xfc
  41d4a3:	outs   dx,DWORD PTR ds:[esi]
  41d4a4:	shl    BYTE PTR [edx-0xc],cl
  41d4a7:	mov    esp,DWORD PTR [edi]
  41d4a9:	add    ah,BYTE PTR [ebp+0x11]
  41d4ac:	sbb    bh,ah
  41d4ae:	xchg   bl,ah
  41d4b0:	stos   DWORD PTR es:[edi],eax
  41d4b1:	adc    eax,0xaf7b52d9
  41d4b6:	adc    ch,BYTE PTR ds:0xa8895234
  41d4bc:	stos   DWORD PTR es:[edi],eax
  41d4bd:	or     dl,BYTE PTR [ebp-0x60]
  41d4c0:	inc    DWORD PTR [eax+0x1cf201d8]
  41d4c6:	jge    0x41d44e
  41d4c8:	push   edx
  41d4c9:	imul   eax,DWORD PTR [esi],0xffffffee
  41d4cc:	dec    esp
  41d4cd:	loop   0x41d542
  41d4cf:	push   es
  41d4d0:	mov    ebp,0xf5562484
  41d4d5:	(bad)  
  41d4d6:	in     al,dx
  41d4d7:	adc    DWORD PTR [esi-0x60],ebp
  41d4da:	in     eax,dx
  41d4db:	das    
  41d4dc:	and    eax,0xea88dae
  41d4e1:	sub    ch,bl
  41d4e3:	cmp    bh,BYTE PTR [ecx]
  41d4e5:	out    0x1,eax
  41d4e7:	push   ss
  41d4e8:	pop    esp
  41d4e9:	fimul  WORD PTR [edi]
  41d4eb:	xor    DWORD PTR [edi+edx*4],esp
  41d4ee:	cmp    dl,BYTE PTR ds:0x97a292e8
  41d4f4:	jmp    0xd585:0x9588bbd
  41d4fb:	mov    ch,0xcf
  41d4fd:	iret   
  41d4fe:	je     0x41d57f
  41d500:	adc    DWORD PTR [ebp+0x60206bf1],esp
  41d506:	pop    ss
  41d507:	push   ebx
  41d508:	sub    edx,DWORD PTR [edi+0x3ef8c0e6]
  41d50e:	and    BYTE PTR [ebx-0x3a93dcad],dh
  41d514:	cmp    DWORD PTR [esi-0x68],edi
  41d517:	test   eax,0x1d6c4f3
  41d51c:	adc    al,BYTE PTR [edx+0x577588bf]
  41d522:	inc    ebx
  41d523:	mov    al,0xdc
  41d525:	cmp    ch,ch
  41d527:	pop    ebp
  41d528:	adc    BYTE PTR [edx-0x1c],ah
  41d52b:	enter  0x92c3,0xd8
  41d52f:	cmp    bh,BYTE PTR [ebx+0x1ef13533]
  41d535:	sbb    DWORD PTR [ebx-0x49],ebp
  41d538:	cmp    cl,BYTE PTR [ecx-0x70]
  41d53b:	cld    
  41d53c:	ss push edi
  41d53e:	mov    ch,0xd2
  41d540:	scas   al,BYTE PTR es:[edi]
  41d541:	aam    0xf
  41d543:	push   esp
  41d544:	xor    BYTE PTR [ebx+ebx*1],ah
  41d547:	cmp    eax,DWORD PTR [edi]
  41d549:	enter  0xcb19,0x3c
  41d54d:	pop    eax
  41d54e:	neg    DWORD PTR [edx+0x132cb9d5]
  41d554:	xchg   DWORD PTR [esi-0x5352c44d],edx
  41d55a:	jl     0x41d563
  41d55c:	out    dx,eax
  41d55d:	arpl   WORD PTR [eax],sp
  41d55f:	sti    
  41d560:	(bad)  
  41d561:	nop
  41d562:	popf   
  41d563:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d564:	jmp    FWORD PTR [edx+0x19e61851]
  41d56a:	aas    
  41d56b:	scas   al,BYTE PTR es:[edi]
  41d56c:	pop    esi
  41d56d:	mov    ah,0x7f
  41d56f:	cdq    
  41d570:	inc    esi
  41d571:	(bad)  
  41d572:	out    0x2a,eax
  41d574:	fdivr  st(0),st
  41d576:	rcl    DWORD PTR [edx],0xd2
  41d579:	mov    edi,0x79813a09
  41d57e:	call   0xb05f:0xd0eabf7
  41d585:	inc    esi
  41d586:	idiv   BYTE PTR [esi*1-0x718d9c15]
  41d58d:	in     eax,0x3f
  41d58f:	cs mov dh,0x4
  41d592:	int    0xd1
  41d594:	push   edi
  41d595:	rol    edx,1
  41d597:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d598:	adc    BYTE PTR ds:0xbc012a5f,ah
  41d59e:	popa   
  41d59f:	rcr    DWORD PTR [edi],0x40
  41d5a2:	push   ebp
  41d5a3:	arpl   WORD PTR [ebp-0x13],cx
  41d5a6:	push   0xffffffab
  41d5a8:	in     al,dx
  41d5a9:	or     bl,BYTE PTR [esi-0x3d]
  41d5ac:	outs   dx,DWORD PTR ds:[esi]
  41d5ad:	(bad)  
  41d5af:	shr    esi,1
  41d5b1:	jmp    0x41d60b
  41d5b3:	fst    st(0)
  41d5b5:	sbb    edi,ebx
  41d5b7:	aad    0x48
  41d5b9:	inc    ebp
  41d5ba:	pop    edi
  41d5bb:	xchg   edi,eax
  41d5bc:	fcomip st,st(1)
  41d5be:	inc    ecx
  41d5bf:	xchg   DWORD PTR [ebp+ebx*1+0x4b],edi
  41d5c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5c4:	pop    ds
  41d5c5:	dec    esp
  41d5c6:	int    0x2a
  41d5c8:	cmp    BYTE PTR [eax-0x13],bl
  41d5cb:	or     eax,eax
  41d5cd:	fs gs test al,0x90
  41d5d1:	inc    edx
  41d5d2:	imul   esi,DWORD PTR [ebx],0xffffffdc
  41d5d5:	sbb    eax,0x94dec1b7
  41d5da:	jmp    0x29ac1349
  41d5df:	js     0x41d640
  41d5e1:	mov    al,0xc0
  41d5e3:	(bad)  
  41d5e4:	es sub eax,0xb68bc4cf
  41d5ea:	jne    0x41d634
  41d5ec:	jae    0x41d629
  41d5ee:	shl    BYTE PTR [ebx],1
  41d5f0:	mov    BYTE PTR ds:0xcd6ed671,cl
  41d5f6:	fstp   QWORD PTR [eax]
  41d5f8:	mov    bl,0xed
  41d5fa:	pushf  
  41d5fb:	add    eax,0x7eebdfac
  41d600:	sti    
  41d601:	or     edi,DWORD PTR [ecx+0x7a0a6e72]
  41d607:	mov    DWORD PTR [edi-0x45],ebx
  41d60a:	push   edi
  41d60b:	iret   
  41d60c:	sub    ebp,edi
  41d60e:	retf   
  41d60f:	sbb    BYTE PTR [ebp-0x321f574],cl
  41d615:	inc    ecx
  41d616:	add    cl,BYTE PTR [ecx+0x4d8bb84d]
  41d61c:	or     BYTE PTR [edx-0x5a1eadf],bh
  41d622:	sub    edx,ecx
  41d624:	add    edx,DWORD PTR [ebp-0x44]
  41d627:	mov    DWORD PTR [ebp-0x44],edx
  41d62a:	mov    ecx,DWORD PTR [ebp+0x8]
  41d62d:	xor    ecx,eax
  41d62f:	add    ecx,esi
  41d631:	jne    0x41b215
  41d637:	mov    ecx,DWORD PTR [ebp-0x8]
  41d63a:	xor    ecx,eax
  41d63c:	mov    eax,DWORD PTR [ebp+0x10]
  41d63f:	add    ecx,esi
  41d641:	mov    DWORD PTR [eax],ecx
  41d643:	pop    edi
  41d644:	pop    esi
  41d645:	pop    ebx
  41d646:	leave  
  41d647:	ret    0xc
  41d64a:	push   ebp
  41d64b:	mov    ebp,esp
  41d64d:	sub    esp,0x7c
  41d650:	or     ecx,0x868
  41d656:	push   esi
  41d657:	and    DWORD PTR ds:0x42862f,0x0
  41d661:	jmp    0x41d674
  41d666:	xor    eax,eax
  41d668:	or     eax,DWORD PTR ds:0x42862f
  41d66e:	inc    eax
  41d66f:	mov    ds:0x42862f,eax
  41d674:	cmp    DWORD PTR ds:0x42862f,0x1b
  41d67b:	jae    0x41d6a6
  41d681:	cmp    DWORD PTR ds:0x42862f,0x24
  41d688:	jbe    0x41d6a6
  41d68e:	jmp    0x41d6a1
  41d693:	push   DWORD PTR [ebp-0x28]
  41d696:	push   0x42865b
  41d69b:	call   DWORD PTR ds:0x4287b3
  41d6a1:	jmp    0x41d666
  41d6a6:	push   edi
  41d6a7:	mov    eax,ds:0x4282ef
  41d6ac:	mov    DWORD PTR ds:0x42866f,0x15
  41d6b6:	cmp    DWORD PTR ds:0x42866f,0x0
  41d6bd:	je     0x41d6ed
  41d6c3:	cmp    DWORD PTR ds:0x42866f,0x1f
  41d6ca:	jl     0x41d6ed
  41d6d0:	jmp    0x41d6db
  41d6d5:	call   DWORD PTR ds:0x4287b7
  41d6db:	mov    ecx,DWORD PTR ds:0x42866f
  41d6e1:	dec    ecx
  41d6e2:	mov    DWORD PTR ds:0x42866f,ecx
  41d6e8:	jmp    0x41d6b6
  41d6ed:	mov    DWORD PTR [ebp-0x24],eax
  41d6f0:	xor    eax,eax
  41d6f2:	add    eax,DWORD PTR ds:0x42868b
  41d6f8:	mov    edi,DWORD PTR ds:0x428707
  41d6fe:	sub    eax,edi
  41d700:	xor    eax,DWORD PTR [eax+edi*1]
  41d703:	mov    eax,ds:0x4283fb
  41d708:	not    DWORD PTR ds:0x428613
  41d70e:	mov    DWORD PTR [ebp-0x34],eax
  41d711:	and    DWORD PTR [ebp-0x30],0x0
  41d715:	sub    esi,0x14f1
  41d71b:	mov    DWORD PTR [ebp-0x2c],0xf89c85b0
  41d722:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  41d729:	xor    edi,edi
  41d72b:	mov    eax,DWORD PTR [ebp-0x10]
  41d72e:	mov    esi,DWORD PTR ds:0x42860b
  41d734:	add    DWORD PTR ds:0x428653,esi
  41d73a:	mov    ecx,DWORD PTR [ebp-0x10]
  41d73d:	mov    DWORD PTR ds:0x42860f,0x19
  41d747:	cmp    DWORD PTR ds:0x42860f,0x0
  41d74e:	je     0x41d783
  41d754:	cmp    DWORD PTR ds:0x42860f,0x24
  41d75b:	jge    0x41d783
  41d761:	jmp    0x41d76f
  41d766:	push   DWORD PTR [ebp-0x14]
  41d769:	call   DWORD PTR ds:0x4287bb
  41d76f:	xor    edi,edi
  41d771:	xor    edi,DWORD PTR ds:0x42860f
  41d777:	dec    edi
  41d778:	mov    DWORD PTR ds:0x42860f,edi
  41d77e:	jmp    0x41d747
  41d783:	sub    eax,ecx
  41d785:	add    DWORD PTR ds:0x42865b,ecx
  41d78b:	mov    DWORD PTR [ebp-0x10],eax
  41d78e:	sub    edi,edi
  41d790:	xor    DWORD PTR [ebp-0x10],0xf89cb5b0
  41d797:	mov    edi,DWORD PTR ds:0x42862b
  41d79d:	adc    edi,DWORD PTR ds:0x42864b
  41d7a3:	mov    DWORD PTR ds:0x42862b,edi
  41d7a9:	mov    eax,DWORD PTR [ebp-0x18]
  41d7ac:	inc    edi
  41d7ad:	mov    ecx,DWORD PTR [ebp-0x18]
  41d7b0:	and    DWORD PTR ds:0x42862f,0x0
  41d7ba:	mov    esi,DWORD PTR ds:0x42862f
  41d7c0:	inc    esi
  41d7c1:	mov    DWORD PTR ds:0x42862f,esi
  41d7c7:	cmp    DWORD PTR ds:0x42862f,0x21
  41d7ce:	jb     0x41d804
  41d7d4:	jmp    0x41d7f7
  41d7d9:	push   0x2450
  41d7de:	push   0x4280ae
  41d7e3:	push   DWORD PTR [ebp-0x20]
  41d7e6:	push   0x428083
  41d7eb:	push   DWORD PTR [ebp-0x18]
  41d7ee:	push   DWORD PTR [ebp-0x28]
  41d7f1:	call   DWORD PTR ds:0x4287bf
  41d7f7:	cmp    DWORD PTR ds:0x42862f,0x1d
  41d7fe:	jb     0x41d7ba
  41d804:	sub    eax,ecx
  41d806:	mov    DWORD PTR ds:0x428667,0x2f20
  41d810:	mov    DWORD PTR [ebp-0x18],eax
  41d813:	or     DWORD PTR [ebp-0x18],0xf89f05b0
  41d81a:	sbb    edi,edi
  41d81c:	mov    eax,DWORD PTR [ebp-0xc]
  41d81f:	xor    ecx,ecx
  41d821:	or     ecx,DWORD PTR ds:0x428697
  41d827:	mov    esi,DWORD PTR ds:0x42869f
  41d82d:	sub    ecx,esi
  41d82f:	or     ecx,DWORD PTR [ecx+esi*1]
  41d832:	mov    ecx,DWORD PTR [ebp-0xc]
  41d835:	sub    eax,ecx
  41d837:	and    DWORD PTR ds:0x42863b,0x0
  41d841:	jmp    0x41d853
  41d846:	mov    esi,DWORD PTR ds:0x42863b
  41d84c:	inc    esi
  41d84d:	mov    DWORD PTR ds:0x42863b,esi
  41d853:	cmp    DWORD PTR ds:0x42863b,0x16
  41d85a:	jae    0x41d89c
  41d860:	cmp    DWORD PTR ds:0x42863b,0x9
  41d867:	jle    0x41d89c
  41d86d:	jmp    0x41d87d
  41d872:	push   0x428083
  41d877:	call   DWORD PTR ds:0x4287c3
  41d87d:	cmp    DWORD PTR ds:0x42863b,0x8
  41d884:	jne    0x41d897
  41d88a:	mov    esi,DWORD PTR ds:0x42863b
  41d890:	inc    esi
  41d891:	mov    DWORD PTR ds:0x42863b,esi
  41d897:	jmp    0x41d846
  41d89c:	mov    DWORD PTR [ebp-0xc],eax
  41d89f:	or     DWORD PTR [ebp-0xc],0xf89c85f0
  41d8a6:	mov    eax,DWORD PTR [ebp-0x1c]
  41d8a9:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d8ac:	sub    eax,ecx
  41d8ae:	mov    DWORD PTR [ebp-0x1c],eax
  41d8b1:	or     DWORD PTR [ebp-0x1c],0xf89c8590
  41d8b8:	mov    eax,DWORD PTR [ebp-0x20]
  41d8bb:	mov    ecx,DWORD PTR [ebp-0x20]
  41d8be:	sub    eax,ecx
  41d8c0:	mov    DWORD PTR [ebp-0x20],eax
  41d8c3:	mov    eax,DWORD PTR [ebp-0x2c]
  41d8c6:	mov    ecx,DWORD PTR [ebp-0x20]
  41d8c9:	mov    esi,0x75108a4
  41d8ce:	xor    eax,esi
  41d8d0:	mov    edi,0x3272ec
  41d8d5:	add    eax,edi
  41d8d7:	or     eax,ecx
  41d8d9:	mov    DWORD PTR [ebp-0x20],eax
  41d8dc:	mov    eax,DWORD PTR [ebp-0x4]
  41d8df:	mov    ecx,DWORD PTR [ebp-0x4]
  41d8e2:	sub    eax,ecx
  41d8e4:	mov    DWORD PTR [ebp-0x4],eax
  41d8e7:	or     DWORD PTR [ebp-0x4],0xf89c85bd
  41d8ee:	mov    eax,DWORD PTR [ebp-0xc]
  41d8f1:	xor    eax,esi
  41d8f3:	add    eax,edi
  41d8f5:	push   eax
  41d8f6:	mov    eax,DWORD PTR [ebp-0x10]
  41d8f9:	xor    eax,esi
  41d8fb:	add    eax,edi
  41d8fd:	push   eax
  41d8fe:	mov    eax,DWORD PTR [ebp-0x4]
  41d901:	xor    eax,esi
  41d903:	add    eax,edi
  41d905:	push   eax
  41d906:	lea    eax,[ebp-0x7c]
  41d909:	push   eax
  41d90a:	push   DWORD PTR [ebp-0x2c]
  41d90d:	push   DWORD PTR [ebp-0x28]
  41d910:	call   0x40f37f
  41d915:	test   eax,eax
  41d917:	je     0x41fca5
  41d91d:	lea    eax,[ebp-0x7c]
  41d920:	push   eax
  41d921:	mov    eax,DWORD PTR [ebp-0x28]
  41d924:	jmp    0x41fc84
  41d929:	fs popa 
  41d92b:	dec    eax
  41d92c:	mov    cs,WORD PTR [ebx+0x7b]
  41d92f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d930:	jnp    0x41d8c9
  41d932:	rol    edx,1
  41d934:	aaa    
  41d935:	fcmovnu st,st(5)
  41d937:	adc    eax,0x7dd42aeb
  41d93c:	jp     0x41d97d
  41d93e:	pop    edi
  41d93f:	jp     0x41d9bb
  41d941:	inc    edx
  41d942:	(bad)  
  41d943:	cld    
  41d944:	xchg   ecx,eax
  41d945:	jecxz  0x41d988
  41d947:	and    dl,BYTE PTR [edx-0xc]
  41d94a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d94b:	dec    ebp
  41d94c:	in     al,0x22
  41d94e:	mov    ds:0xe7b4683b,eax
  41d953:	jle    0x41d911
  41d955:	ret    0x2e7a
  41d958:	imul   edx,DWORD PTR [ebp-0x31],0xffffff8e
  41d95c:	in     eax,dx
  41d95d:	shr    DWORD PTR [eax+0x43],1
  41d960:	div    DWORD PTR [ebp-0x56bc437f]
  41d966:	fistp  WORD PTR [ebx+0x79ffc2ed]
  41d96c:	xchg   edx,eax
  41d96d:	pushf  
  41d96e:	and    al,bl
  41d970:	inc    edi
  41d971:	or     eax,0xce19ae5d
  41d976:	(bad)
  41d979:	lods   al,BYTE PTR ds:[esi]
  41d97a:	cdq    
  41d97b:	xchg   ecx,eax
  41d97c:	push   edi
  41d97d:	shr    ah,cl
  41d97f:	dec    edx
  41d980:	out    0xb2,eax
  41d982:	clc    
  41d983:	xlat   BYTE PTR ds:[ebx]
  41d984:	jmp    0x27a7:0xef22a07c
  41d98b:	pop    ebx
  41d98c:	fsub   QWORD PTR [ebp+edx*8+0x72]
  41d990:	mov    ebx,0xea52b548
  41d995:	cli    
  41d996:	lds    ebx,FWORD PTR [eax+0x6a]
  41d999:	in     al,0x6d
  41d99b:	sbb    DWORD PTR [ecx-0x4f7f7f6f],ebp
  41d9a1:	call   0xa3380ac8
  41d9a6:	shl    DWORD PTR [ebp+0x56dec2e6],0x8e
  41d9ad:	jns    0x41d9d0
  41d9af:	das    
  41d9b0:	adc    cl,bh
  41d9b2:	jb     0x41da08
  41d9b4:	retf   0xed61
  41d9b7:	and    eax,0x3b3cb20d
  41d9bc:	adc    DWORD PTR [edx],edi
  41d9be:	cmp    bh,cl
  41d9c0:	fs retf 
  41d9c2:	cs mov edx,0x7597caae
  41d9c8:	mov    bl,0xaa
  41d9ca:	or     DWORD PTR [ecx],eax
  41d9cc:	(bad)  
  41d9ce:	dec    edi
  41d9cf:	dec    ebx
  41d9d0:	mov    dl,ah
  41d9d2:	lds    ecx,FWORD PTR [ebx]
  41d9d4:	jl     0x41d9e0
  41d9d6:	jmp    0x41da41
  41d9d8:	cmp    bh,BYTE PTR [ecx-0x55]
  41d9db:	xor    eax,0xa36a59eb
  41d9e0:	repnz ficom WORD PTR [ebp-0x4d]
  41d9e4:	fsubr  DWORD PTR gs:[edi+0x24]
  41d9e8:	mov    DWORD PTR [ecx],ebp
  41d9ea:	clc    
  41d9eb:	jecxz  0x41da62
  41d9ed:	dec    ecx
  41d9ee:	or     DWORD PTR [edx-0x50c1caf0],ebp
  41d9f4:	adc    al,0x7c
  41d9f6:	mov    bh,0xcf
  41d9f8:	inc    edi
  41d9f9:	pop    ss
  41d9fa:	(bad)  
  41d9fb:	jns    0x41d9ac
  41d9fd:	xchg   esp,eax
  41d9fe:	ds jle 0x41da63
  41da01:	mov    edi,0xd4aa2083
  41da06:	inc    esp
  41da07:	adc    bh,BYTE PTR [edi]
  41da09:	dec    ebx
  41da0a:	in     eax,0xae
  41da0c:	int    0xc
  41da0e:	or     cl,bh
  41da10:	pop    ss
  41da11:	ds add al,0x3e
  41da14:	push   edi
  41da15:	pop    eax
  41da17:	(bad)  [ecx+0x54b908ed]
  41da1d:	fs mov es,eax
  41da20:	mov    al,0xf3
  41da22:	pusha  
  41da23:	enter  0xc7ef,0xce
  41da27:	loope  0x41d9e2
  41da29:	fs add eax,0xb2bdeb01
  41da2f:	add    BYTE PTR [eax+0x6a],dl
  41da32:	loop   0x41da04
  41da34:	fwait
  41da35:	mov    bl,0x9d
  41da37:	sub    dl,BYTE PTR [esi-0xbe2e11d]
  41da3d:	xor    BYTE PTR [edx+0x5fe5558],al
  41da43:	sar    DWORD PTR [ebx-0x4c],0xf0
  41da47:	call   0xf792:0x87688562
  41da4e:	inc    edx
  41da4f:	test   ebx,ebp
  41da51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da52:	shr    DWORD PTR [ebp-0x7e1110b9],0x54
  41da59:	mov    dh,dl
  41da5b:	sub    DWORD PTR [eax],esi
  41da5d:	scas   al,BYTE PTR es:[edi]
  41da5e:	inc    ebx
  41da5f:	sbb    DWORD PTR [edx],ebx
  41da61:	mov    ds:0xda3daeee,eax
  41da66:	(bad)  [edx+0x14]
  41da69:	mov    ch,0x90
  41da6b:	xor    DWORD PTR [ebp-0x286c0a43],esp
  41da71:	pop    esi
  41da72:	in     al,dx
  41da73:	leave  
  41da74:	cmp    eax,0x75493f8c
  41da79:	dec    ebp
  41da7a:	add    edi,DWORD PTR [edx]
  41da7c:	out    0xaf,al
  41da7e:	lods   eax,DWORD PTR ds:[esi]
  41da7f:	jle    0x41dad0
  41da81:	xchg   esi,eax
  41da82:	mov    dh,0xb5
  41da84:	test   bh,bl
  41da86:	mov    edx,0x1f68cc7
  41da8b:	stos   BYTE PTR es:[edi],al
  41da8c:	sbb    DWORD PTR [eax],esp
  41da8e:	and    al,0xed
  41da90:	popf   
  41da91:	fnstcw WORD PTR [esp+esi*2-0x6984755c]
  41da98:	es mov dh,0x4a
  41da9b:	std    
  41da9c:	stos   BYTE PTR es:[edi],al
  41da9d:	lock test eax,0x22e7991b
  41daa3:	sbb    ecx,ebp
  41daa5:	pop    edi
  41daa6:	arpl   WORD PTR [edi],si
  41daa8:	out    dx,al
  41daa9:	out    dx,eax
  41daaa:	sahf   
  41daab:	dec    esi
  41daac:	call   0x7ea778c7
  41dab1:	dec    ebp
  41dab2:	aad    0x1c
  41dab4:	push   cs
  41dab5:	mov    dh,0xac
  41dab7:	int3   
  41dab8:	aas    
  41dab9:	xchg   esp,eax
  41daba:	push   edx
  41dabb:	retf   0xf71
  41dabe:	rcl    DWORD PTR [edx-0x3975a6bb],1
  41dac4:	arpl   bp,sp
  41dac6:	test   al,0x5
  41dac8:	adc    ebx,edx
  41daca:	stos   DWORD PTR es:[edi],eax
  41dacb:	out    0xba,al
  41dacd:	jbe    0x41da5f
  41dacf:	test   cl,bl
  41dad1:	inc    ebp
  41dad2:	xlat   BYTE PTR ds:[ebx]
  41dad3:	dec    edx
  41dad4:	sub    eax,0x460de3a2
  41dad9:	jmp    0x41db4c
  41dadb:	xchg   edx,eax
  41dadc:	pusha  
  41dadd:	es add eax,0xebd076fd
  41dae3:	js     0x41dabe
  41dae5:	lock sbb ebp,DWORD PTR [edx-0x60]
  41dae9:	mov    ebx,DWORD PTR [eax+0x15b3cbc8]
  41daef:	(bad)  
  41daf0:	ins    BYTE PTR es:[edi],dx
  41daf1:	xchg   ebx,eax
  41daf2:	aaa    
  41daf3:	fs cli 
  41daf5:	mov    dh,0x49
  41daf7:	stos   BYTE PTR es:[edi],al
  41daf8:	dec    esp
  41daf9:	in     eax,dx
  41dafa:	add    al,0x62
  41dafc:	fidiv  WORD PTR [ecx]
  41dafe:	leave  
  41daff:	aad    0xb9
  41db01:	dec    esi
  41db02:	mov    dh,al
  41db04:	inc    edx
  41db05:	repz shr DWORD PTR [ecx+0xa],1
  41db09:	xor    ch,bh
  41db0b:	call   0x5e9cae30
  41db10:	shr    BYTE PTR [edx+0x48],0xe2
  41db14:	add    DWORD PTR [ebx+0x12e018be],0xffffffcf
  41db1b:	fwait
  41db1c:	fs dec ecx
  41db1e:	and    dh,BYTE PTR [edi+ecx*1]
  41db21:	cmp    esp,DWORD PTR [ecx-0x5235955f]
  41db27:	jmp    0x41db28
  41db29:	sub    esi,DWORD PTR es:[ebp+0x4cf7f4b9]
  41db30:	mov    edi,0x5a24380e
  41db35:	pop    es
  41db36:	mov    ebp,0x6ef69e33
  41db3b:	mov    ds:0x42aa0134,al
  41db40:	into   
  41db41:	mov    al,ds:0x9b0ad552
  41db46:	add    ah,BYTE PTR [edx]
  41db48:	rcr    ebx,0x84
  41db4b:	pop    ss
  41db4c:	call   DWORD PTR [ecx]
  41db4e:	xchg   edx,eax
  41db4f:	inc    esi
  41db50:	stos   BYTE PTR es:[edi],al
  41db51:	ins    DWORD PTR es:[edi],dx
  41db52:	fcom   DWORD PTR [edi]
  41db54:	mov    ah,BYTE PTR [edi]
  41db56:	iret   
  41db57:	fwait
  41db58:	out    dx,al
  41db59:	mov    al,0x3e
  41db5b:	call   0xa5fd:0x8f9ee26
  41db62:	imul   DWORD PTR [ecx-0x47d06dc9]
  41db68:	data16 loopne 0x41db3a
  41db6b:	call   0x3562:0x1c8f1b63
  41db72:	pop    ecx
  41db73:	ret    
  41db74:	icebp  
  41db75:	adc    bl,al
  41db77:	ret    0xaacb
  41db7a:	jbe    0x41db89
  41db7c:	cmp    eax,0x8344df
  41db81:	sbb    eax,0xfd1c2534
  41db86:	cmc    
  41db87:	mov    ecx,DWORD PTR [ebp-0x6920451]
  41db8d:	cli    
  41db8e:	pop    ecx
  41db8f:	shr    BYTE PTR [edx+eax*4],0x4
  41db93:	ins    DWORD PTR es:[edi],dx
  41db94:	fidivr DWORD PTR [ebx+0x62f04de0]
  41db9a:	lea    edx,gs:[edx-0x79]
  41db9e:	pop    ss
  41db9f:	adc    edx,edx
  41dba1:	es cld 
  41dba3:	(bad)  
  41dba4:	outs   dx,BYTE PTR ds:[esi]
  41dba5:	lahf   
  41dba6:	int3   
  41dba7:	ins    DWORD PTR es:[edi],dx
  41dba8:	mov    BYTE PTR [ebp-0x67d10aa6],ah
  41dbae:	iret   
  41dbaf:	pop    ds
  41dbb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbb1:	(bad)  
  41dbb3:	leave  
  41dbb4:	cmc    
  41dbb5:	jmp    0xd1751e39
  41dbba:	jb     0x41db80
  41dbbc:	lock push esi
  41dbbe:	and    BYTE PTR ds:0x3fbae24,bh
  41dbc4:	std    
  41dbc5:	rcl    DWORD PTR [ecx+ebx*8],1
  41dbc8:	cmp    DWORD PTR [ebp-0x6c],ebx
  41dbcb:	cld    
  41dbcc:	mov    edi,0x66ec8fbe
  41dbd1:	adc    al,0xed
  41dbd3:	cli    
  41dbd4:	les    edi,FWORD PTR ds:0xa116b44d
  41dbda:	sbb    dh,BYTE PTR ds:0xc11b2531
  41dbe0:	jno    0x41dbba
  41dbe2:	fsubp  st(2),st
  41dbe4:	dec    edx
  41dbe5:	(bad)  
  41dbe7:	mov    dl,0x15
  41dbe9:	(bad)  
  41dbea:	lods   al,BYTE PTR ds:[esi]
  41dbeb:	xor    al,0xe5
  41dbed:	and    bh,BYTE PTR ds:[edx-0x2fe3509b]
  41dbf4:	inc    ecx
  41dbf5:	jecxz  0x41db88
  41dbf7:	mov    al,ds:0x361cba75
  41dbfc:	iret   
  41dbfd:	jecxz  0x41dbe5
  41dbff:	sub    al,0x87
  41dc01:	das    
  41dc02:	cdq    
  41dc03:	(bad)  
  41dc04:	fnsave [ecx-0x4c88a31b]
  41dc0a:	inc    esi
  41dc0b:	loop   0x41dbf8
  41dc0d:	and    esi,DWORD PTR [ecx]
  41dc0f:	fbld   TBYTE PTR [ebp+0x657fdfd0]
  41dc15:	adc    al,0xb8
  41dc17:	jg     0x41dc7d
  41dc19:	pop    edi
  41dc1a:	pop    edx
  41dc1b:	sbb    ah,al
  41dc1d:	add    eax,0x7e32b772
  41dc22:	jmp    FWORD PTR [ecx-0x5b]
  41dc25:	daa    
  41dc26:	test   BYTE PTR [ebp-0x30],bh
  41dc29:	bound  esp,QWORD PTR [ecx-0x38]
  41dc2c:	(bad)  
  41dc2e:	in     eax,0xbf
  41dc30:	dec    ebp
  41dc31:	and    DWORD PTR [edx],edi
  41dc33:	pop    ds
  41dc34:	inc    ebx
  41dc35:	jo     0x41dbff
  41dc37:	pop    esi
  41dc38:	mov    WORD PTR [ecx-0x74bf0fa6],?
  41dc3e:	sub    edi,DWORD PTR [ebx+0x686ff833]
  41dc44:	sbb    al,0x7b
  41dc46:	xchg   esp,eax
  41dc47:	(bad)  [eax+0x1d]
  41dc4a:	inc    eax
  41dc4b:	bound  ebx,QWORD PTR [ebp-0x131bb28d]
  41dc51:	ror    DWORD PTR [edx],0x27
  41dc54:	aas    
  41dc55:	fisub  DWORD PTR [ecx+0x2789ba05]
  41dc5b:	add    al,0x66
  41dc5d:	sub    edi,ebp
  41dc5f:	and    edi,ebp
  41dc61:	out    dx,eax
  41dc62:	dec    esi
  41dc63:	xchg   ebx,eax
  41dc64:	imul   BYTE PTR [eax-0x1e]
  41dc67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc68:	ret    
  41dc69:	or     DWORD PTR [edx+0x256e392e],edx
  41dc6f:	dec    eax
  41dc70:	inc    esp
  41dc71:	(bad)  
  41dc73:	cmp    DWORD PTR [ebp-0x38],esi
  41dc76:	pop    ecx
  41dc77:	pop    es
  41dc78:	(bad)  
  41dc79:	fild   DWORD PTR [eax-0x78]
  41dc7c:	jl     0x41dcb6
  41dc7e:	push   esi
  41dc7f:	nop
  41dc80:	mov    ah,0x8
  41dc82:	mov    DWORD PTR [ebx+edi*8-0x42],ebx
  41dc86:	idiv   DWORD PTR [esp+edx*2+0xcec6f82]
  41dc8d:	push   ebx
  41dc8e:	xor    dh,BYTE PTR [edx+0x66]
  41dc91:	rcr    BYTE PTR [eax],1
  41dc93:	mov    cl,0x9f
  41dc95:	mov    ds:0x1ca41210,eax
  41dc9a:	push   es
  41dc9b:	sbb    BYTE PTR [esi-0x3],0xf2
  41dc9f:	int    0xd8
  41dca1:	jmp    0x41dc78
  41dca3:	sub    eax,0xb2b92740
  41dca8:	ins    DWORD PTR es:[edi],dx
  41dca9:	pcmpgtw mm0,QWORD PTR [ebx-0xde94b4f]
  41dcb0:	dec    esp
  41dcb1:	push   cs
  41dcb2:	not    DWORD PTR [esi+ecx*2-0x13fb52a4]
  41dcb9:	jne    0x41dcdf
  41dcbb:	(bad)  
  41dcbc:	jne    0x41dcea
  41dcbe:	or     bh,ah
  41dcc0:	pop    esi
  41dcc1:	adc    eax,0x3b08d4b6
  41dcc6:	xchg   ecx,eax
  41dcc7:	pop    ebx
  41dcc8:	xor    ch,dl
  41dcca:	out    0x9f,eax
  41dccc:	mov    dh,0x2b
  41dcce:	sbb    DWORD PTR [ebp-0x4f],ebp
  41dcd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcd2:	mov    dh,0x6e
  41dcd4:	lods   eax,DWORD PTR ds:[esi]
  41dcd5:	cmp    DWORD PTR [edx+0x535737fc],edi
  41dcdb:	popf   
  41dcdc:	xor    DWORD PTR [ebx+ebx*2-0x5ca3c73c],eax
  41dce3:	outs   dx,DWORD PTR ds:[esi]
  41dce4:	sub    BYTE PTR [eax-0x41],bl
  41dce7:	sub    eax,0x136db2e
  41dcec:	ja     0x41dca4
  41dcee:	or     bh,BYTE PTR [esi]
  41dcf0:	dec    edi
  41dcf1:	push   eax
  41dcf2:	jle    0x41dd35
  41dcf4:	dec    ebp
  41dcf5:	push   esp
  41dcf6:	aaa    
  41dcf7:	add    eax,0xb2055253
  41dcfc:	in     eax,dx
  41dcfd:	test   DWORD PTR [eax-0x1b],ecx
  41dd00:	mov    dh,0xb1
  41dd02:	retf   
  41dd03:	fidiv  WORD PTR [ebx]
  41dd05:	sub    BYTE PTR [edx],ch
  41dd07:	jge    0x41dcbe
  41dd09:	stos   BYTE PTR es:[edi],al
  41dd0a:	jl     0x41dd7b
  41dd0c:	and    ecx,edi
  41dd0e:	sbb    ebx,DWORD PTR ds:0x7d8270b
  41dd14:	push   edx
  41dd15:	ds aaa 
  41dd17:	xchg   esp,eax
  41dd18:	adc    bl,BYTE PTR [eax-0x63]
  41dd1b:	mov    edx,fs
  41dd1d:	repz clc 
  41dd1f:	std    
  41dd20:	pop    ebp
  41dd21:	idiv   DWORD PTR [ecx]
  41dd23:	pusha  
  41dd24:	outs   dx,BYTE PTR ds:[esi]
  41dd25:	sbb    DWORD PTR [ecx-0xb],ebp
  41dd28:	inc    ecx
  41dd29:	mov    ah,ah
  41dd2b:	pop    esi
  41dd2c:	sub    eax,0xed34c4d
  41dd31:	xor    eax,0x654bc155
  41dd36:	cmp    DWORD PTR [ebx+0x7396a398],ecx
  41dd3c:	lds    ecx,FWORD PTR [ebx+ebp*8-0x6ff3701]
  41dd43:	cmp    ah,dl
  41dd45:	lods   al,BYTE PTR ds:[esi]
  41dd46:	popa   
  41dd47:	fwait
  41dd48:	add    DWORD PTR [eax+0x4b86c15c],ebx
  41dd4e:	bsf    esp,DWORD PTR [ecx]
  41dd51:	mov    eax,cs:0xe4832929
  41dd57:	mov    esi,0xa3e7ce58
  41dd5c:	inc    esi
  41dd5d:	repnz dec eax
  41dd5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd60:	cmp    eax,0xd47d6d50
  41dd65:	or     BYTE PTR [edi],ah
  41dd67:	(bad)  
  41dd68:	(bad)  [edx-0x9]
  41dd6b:	sysret 
  41dd6d:	loop   0x41dd2f
  41dd6f:	cli    
  41dd70:	pop    edi
  41dd71:	jmp    0x61ef:0x5737fd47
  41dd78:	retf   
  41dd79:	pop    ecx
  41dd7a:	mov    dh,0x17
  41dd7c:	imul   edi,DWORD PTR [eax+0x6a],0x62
  41dd80:	fstp   QWORD PTR [edi]
  41dd82:	sub    al,0xa2
  41dd84:	(bad)  
  41dd85:	add    eax,0x43c457ad
  41dd8a:	xchg   edi,eax
  41dd8c:	lods   al,BYTE PTR ds:[esi]
  41dd8d:	(bad)  
  41dd8e:	je     0x41dd10
  41dd90:	adc    ecx,esi
  41dd92:	push   edx
  41dd93:	jno    0x41dd84
  41dd95:	pop    ebx
  41dd96:	repnz inc esp
  41dd98:	out    dx,eax
  41dd99:	aad    0x26
  41dd9b:	sub    BYTE PTR [edi-0x2f],cl
  41dd9e:	inc    esi
  41dd9f:	lods   eax,DWORD PTR ds:[esi]
  41dda0:	js     0x41dd85
  41dda2:	ds mov eax,0x751856db
  41dda8:	mov    al,0x66
  41ddaa:	fisub  WORD PTR [edx+eax*8-0xecbf0cf]
  41ddb1:	adc    dh,BYTE PTR [ebx]
  41ddb3:	xchg   ebp,eax
  41ddb4:	arpl   ax,sp
  41ddb6:	and    DWORD PTR [esi],esp
  41ddb8:	hlt    
  41ddb9:	and    al,BYTE PTR [eax+ecx*1+0x1eb5c2ae]
  41ddc0:	retf   0x1dec
  41ddc3:	cld    
  41ddc4:	test   al,0xe5
  41ddc6:	ret    
  41ddc7:	pop    ds
  41ddc8:	cmp    BYTE PTR [ebx-0x3dc64639],ch
  41ddce:	or     BYTE PTR ds:0x1e9190d5,0x59
  41ddd5:	call   0xde98:0x5e7c19f9
  41dddc:	push   ds
  41dddd:	dec    eax
  41ddde:	lea    ecx,[ecx+0x3e]
  41dde1:	push   ebp
  41dde2:	adc    ah,bh
  41dde4:	ja     0x41de30
  41dde6:	push   ds
  41dde7:	loop   0x41de48
  41dde9:	(bad)  [edi-0x465ca1b5]
  41ddef:	mov    ecx,0xcacba497
  41ddf4:	lahf   
  41ddf5:	jmp    0x41de63
  41ddf7:	shr    BYTE PTR [ebx+0x6a],0x68
  41ddfb:	mov    bl,0xce
  41ddfd:	shl    BYTE PTR [edi-0x71b4eace],0x41
  41de04:	pop    esi
  41de05:	mov    edx,0xd273fd01
  41de0a:	mov    ds:0xa5eee33b,al
  41de0f:	lock aas 
  41de11:	retf   0xfa0e
  41de14:	jne    0x41de2f
  41de16:	sbb    eax,0x4c7c1ae8
  41de1b:	xchg   esi,eax
  41de1c:	xlat   BYTE PTR ds:[ebx]
  41de1d:	cmp    DWORD PTR ds:0xd8b837a3,ebp
  41de23:	sahf   
  41de24:	push   ecx
  41de25:	mov    esp,0x2bf788d0
  41de2a:	mov    WORD PTR [ebx-0x2f],ds
  41de2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de2e:	popf   
  41de2f:	push   edx
  41de30:	stos   BYTE PTR es:[edi],al
  41de31:	xor    bh,BYTE PTR [esp+edi*2]
  41de34:	fcom   DWORD PTR [esi+0x64f9f8da]
  41de3a:	outs   dx,BYTE PTR ds:[esi]
  41de3b:	(bad)  
  41de3c:	int3   
  41de3d:	add    eax,0x44f1ba95
  41de42:	sbb    DWORD PTR [eax],edx
  41de44:	push   esp
  41de45:	add    ebp,ebp
  41de47:	in     eax,0xd3
  41de49:	sub    edi,ecx
  41de4b:	aaa    
  41de4c:	dec    ebx
  41de4d:	aaa    
  41de4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de4f:	sbb    esi,DWORD PTR [esi-0x31]
  41de52:	dec    edx
  41de53:	add    ebp,DWORD PTR [esi-0x3]
  41de56:	repnz mov dh,0x8e
  41de59:	or     edi,edx
  41de5b:	push   eax
  41de5c:	sbb    bh,BYTE PTR [eax-0x7a]
  41de5f:	loope  0x41ded7
  41de61:	jne    0x41dea0
  41de63:	inc    eax
  41de64:	jmp    0x41de49
  41de66:	push   ecx
  41de67:	sub    ah,BYTE PTR [esp+ebx*2-0xf]
  41de6b:	je     0x41de68
  41de6d:	loopne 0x41de09
  41de6f:	fsubr  QWORD PTR [edi-0x80]
  41de72:	lods   eax,DWORD PTR ds:[esi]
  41de73:	scas   al,BYTE PTR es:[edi]
  41de74:	and    BYTE PTR [ecx+ecx*4],cl
  41de77:	mov    esp,0xacdc12ab
  41de7c:	cmp    eax,0xe9596212
  41de81:	or     edx,DWORD PTR [eax-0x13]
  41de84:	retf   0xfde6
  41de87:	jo     0x41dea0
  41de89:	mov    al,ds:0x6141e9a
  41de8e:	mov    edi,0x7a5eb34a
  41de93:	mov    cl,0x56
  41de95:	in     eax,0x98
  41de97:	js     0x41defc
  41de99:	jg     0x41de75
  41de9b:	fwait
  41de9c:	cdq    
  41de9d:	mov    dh,0xd6
  41de9f:	fs jle 0x41dee4
  41dea2:	adc    eax,0xa27dca31
  41dea7:	xor    eax,0xb901b937
  41deac:	xchg   DWORD PTR [eax-0x22e1be9b],ebp
  41deb2:	xor    al,BYTE PTR gs:[edi+edx*2+0x2a]
  41deb7:	sbb    al,0x53
  41deb9:	fstp   st(7)
  41debb:	cmp    ah,BYTE PTR [ebx]
  41debd:	cwde   
  41debe:	repnz loop 0x41de7f
  41dec1:	xor    dl,BYTE PTR [ecx+0x2c]
  41dec4:	pop    ecx
  41dec5:	shr    BYTE PTR [edi],0xdb
  41dec8:	xchg   edx,eax
  41dec9:	sar    dh,0xc5
  41decc:	and    BYTE PTR [ebp-0x4f],dh
  41decf:	mov    ebp,ds
  41ded1:	cmp    BYTE PTR [ecx],0xde
  41ded4:	mov    DWORD PTR [ecx+0x5712206f],edi
  41deda:	mov    esp,0x482e2404
  41dedf:	icebp  
  41dee0:	pop    ss
  41dee1:	out    0xc9,eax
  41dee3:	adc    al,0x9e
  41dee5:	cmp    BYTE PTR [edi+edi*8+0x5d],dl
  41dee9:	mov    BYTE PTR [edi-0x40],cl
  41deec:	jecxz  0x41df06
  41deee:	clc    
  41deef:	xchg   esp,eax
  41def0:	xchg   edi,eax
  41def1:	hlt    
  41def2:	je     0x41de92
  41def4:	js     0x41dede
  41def6:	add    ecx,DWORD PTR [esi]
  41def8:	das    
  41def9:	scas   eax,DWORD PTR es:[edi]
  41defa:	pop    ebx
  41defb:	rol    BYTE PTR [ebp-0x4adffebd],1
  41df01:	add    ch,cl
  41df03:	mov    ah,0x6e
  41df05:	fidiv  WORD PTR [ebx*8-0x1ba25acb]
  41df0c:	dec    ebp
  41df0d:	and    eax,DWORD PTR [edi-0x55ae42ee]
  41df13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df14:	dec    esi
  41df15:	ds inc edx
  41df17:	mov    DWORD PTR [eax-0x7ab333ee],edi
  41df1d:	cld    
  41df1e:	popf   
  41df1f:	sbb    eax,0x90e50f5a
  41df24:	(bad)  
  41df25:	ficom  WORD PTR [ebx+0x7cf98cdd]
  41df2b:	pop    eax
  41df2c:	jbe    0x41df49
  41df2e:	sub    esp,esi
  41df30:	xchg   edx,eax
  41df31:	es cli 
  41df33:	psubd  mm4,QWORD PTR [eax+0x5565113]
  41df3a:	and    bh,BYTE PTR [edi-0x40b741b5]
  41df40:	or     BYTE PTR [edi],bl
  41df42:	das    
  41df43:	addr16 pop esi
  41df45:	add    eax,0x74f316d4
  41df4a:	cmp    BYTE PTR [ebp+0x52],al
  41df4d:	scas   al,BYTE PTR es:[edi]
  41df4e:	(bad)  [ecx-0x7c]
  41df51:	adc    eax,0xc6eeffc4
  41df56:	jbe    0x41df1a
  41df58:	fcomp  DWORD PTR [eax-0x23]
  41df5b:	jae    0x41df75
  41df5d:	add    bl,BYTE PTR [edx+0x14]
  41df60:	das    
  41df61:	rcl    edx,0x31
  41df64:	jg     0x41dfa2
  41df66:	fistp  DWORD PTR [ebp+0x6a]
  41df69:	pop    esp
  41df6a:	pusha  
  41df6b:	cmc    
  41df6c:	push   esi
  41df6d:	xor    BYTE PTR [esi-0x338dcbb2],dh
  41df73:	cmc    
  41df74:	out    dx,al
  41df75:	xor    ebx,DWORD PTR [ebp+0x77]
  41df78:	dec    esp
  41df79:	dec    ecx
  41df7a:	adc    BYTE PTR ds:0x959d5524,bl
  41df80:	pop    es
  41df81:	int3   
  41df82:	lahf   
  41df83:	dec    ecx
  41df84:	jb     0x41df6e
  41df86:	mov    edx,0xd480acf9
  41df8b:	add    ecx,DWORD PTR [ebp-0x2279ef4]
  41df91:	inc    esp
  41df92:	mov    ebp,0x6251b94
  41df97:	xor    BYTE PTR [edx-0xc],0x8b
  41df9b:	es data16 sahf 
  41df9e:	push   0x3c12f0d
  41dfa3:	mov    ah,0x35
  41dfa5:	cld    
  41dfa6:	xchg   edx,eax
  41dfa7:	sbb    esi,esp
  41dfa9:	sbb    eax,0xab0f3aad
  41dfae:	frstor [edx-0x5352e8e6]
  41dfb4:	dec    ecx
  41dfb5:	call   0x990e:0x79e566c0
  41dfbc:	in     al,0x7e
  41dfbe:	mov    cl,BYTE PTR [eax]
  41dfc0:	mov    cs,WORD PTR [eax+0x410489c3]
  41dfc6:	add    DWORD PTR ds:0xdbbafeaf,eax
  41dfcc:	inc    ecx
  41dfcd:	bound  ebp,QWORD PTR [ebx-0x57]
  41dfd0:	lods   al,BYTE PTR ds:[esi]
  41dfd1:	ins    DWORD PTR es:[edi],dx
  41dfd2:	jg     0x41df74
  41dfd4:	pop    ebp
  41dfd5:	test   al,cl
  41dfd7:	sahf   
  41dfd8:	inc    esp
  41dfd9:	pop    ds
  41dfda:	cs clc 
  41dfdc:	cmp    ebx,DWORD PTR [edi+eax*8-0xc8c8d34]
  41dfe3:	mov    ebp,DWORD PTR [edx-0x5c]
  41dfe6:	cmp    BYTE PTR [ecx],dh
  41dfe8:	test   BYTE PTR [edx-0x76],0x16
  41dfec:	jmp    0x4b4f47e
  41dff1:	popa   
  41dff2:	cs out 0x17,al
  41dff5:	jo     0x41e005
  41dff7:	push   esi
  41dff8:	mov    edi,0xd19c235a
  41dffd:	adc    esp,DWORD PTR [esi-0x203c64cb]
  41e003:	jmp    0xb68c7530
  41e008:	cmp    DWORD PTR [edi],ebx
  41e00a:	dec    ebx
  41e00b:	mov    ah,0x89
  41e00d:	adc    al,0x2f
  41e00f:	adc    bh,BYTE PTR [edx]
  41e011:	dec    esi
  41e012:	test   dl,ch
  41e014:	or     BYTE PTR [ebp+0x1e],bl
  41e017:	mov    esp,0x35562893
  41e01c:	push   ds
  41e01d:	jge    0x41e088
  41e01f:	pop    ebp
  41e020:	hlt    
  41e021:	xchg   BYTE PTR [eax-0x1e0366eb],ah
  41e027:	jp     0x41dfe2
  41e029:	mov    DWORD PTR [edx+0x7689f599],ebx
  41e02f:	test   BYTE PTR [esi],0x71
  41e032:	out    0xaf,eax
  41e034:	nop
  41e035:	push   esi
  41e036:	int3   
  41e037:	add    eax,0xc2e794c7
  41e03c:	xchg   ebp,eax
  41e03d:	xchg   edi,eax
  41e03e:	shr    DWORD PTR [ebx-0x47],0x74
  41e042:	inc    esi
  41e043:	add    eax,0x1129f35a
  41e048:	(bad)  
  41e04a:	(bad)  
  41e04c:	xchg   ebx,eax
  41e04d:	pushf  
  41e04e:	push   ss
  41e04f:	arpl   WORD PTR [eax+0x2a],sp
  41e052:	mov    esp,DWORD PTR [ebp+esi*1+0x74]
  41e056:	jbe    0x41e035
  41e058:	call   0x56366923
  41e05d:	or     ch,bh
  41e05f:	xchg   esi,eax
  41e060:	inc    ecx
  41e061:	pop    esp
  41e062:	(bad)  
  41e063:	hlt    
  41e064:	imul   eax,DWORD PTR [esi+edi*8-0x6f],0x34bd7b95
  41e06c:	loop   0x41e0cc
  41e06e:	lea    ebp,[edx+0x68]
  41e071:	dec    ecx
  41e072:	fdiv   DWORD PTR [ebx]
  41e074:	xor    bh,BYTE PTR [edi+0xf]
  41e077:	jl     0x41e0c7
  41e079:	jne    0x41e0aa
  41e07b:	dec    ecx
  41e07c:	push   ds
  41e07d:	add    al,0x97
  41e07f:	inc    edx
  41e080:	xor    dl,BYTE PTR [esi-0xf498a62]
  41e086:	adc    BYTE PTR [edi],0x86
  41e089:	cmp    DWORD PTR [edi+0x7211efd5],ecx
  41e08f:	data16 ds adc al,0x8
  41e093:	outs   dx,DWORD PTR ds:[esi]
  41e094:	ja     0x41e093
  41e096:	pop    ecx
  41e097:	out    0x24,al
  41e099:	cmp    BYTE PTR [ebx],dl
  41e09b:	lahf   
  41e09c:	adc    BYTE PTR [ecx+0x7],ch
  41e09f:	dec    eax
  41e0a0:	pushf  
  41e0a1:	cld    
  41e0a2:	scas   al,BYTE PTR es:[edi]
  41e0a3:	cmc    
  41e0a4:	enter  0x353b,0xfc
  41e0a8:	inc    ebx
  41e0a9:	adc    eax,0x731b9b24
  41e0ae:	test   al,0xe4
  41e0b0:	imul   edx,ebp,0x798c4861
  41e0b6:	ins    BYTE PTR es:[edi],dx
  41e0b7:	lahf   
  41e0b8:	pop    eax
  41e0b9:	outs   dx,BYTE PTR ds:[esi]
  41e0ba:	push   esp
  41e0bb:	hlt    
  41e0bc:	scas   eax,DWORD PTR es:[edi]
  41e0bd:	lahf   
  41e0be:	mov    al,0x18
  41e0c0:	cld    
  41e0c1:	inc    esi
  41e0c2:	mov    DWORD PTR [esi+0x60],eax
  41e0c5:	xor    DWORD PTR [ebx+0x1f5c754e],ebp
  41e0cb:	sbb    al,0x33
  41e0cd:	jle    0x41e0b0
  41e0cf:	lods   al,BYTE PTR ds:[esi]
  41e0d1:	jae    0x41e0ed
  41e0d3:	js     0x41e0ca
  41e0d5:	and    DWORD PTR cs:[eax-0x35],eax
  41e0d9:	test   BYTE PTR [eax-0x27],cl
  41e0dc:	sbb    eax,0x44898417
  41e0e1:	pop    esp
  41e0e2:	pop    ds
  41e0e3:	xor    ah,cl
  41e0e5:	xlat   BYTE PTR ds:[ebx]
  41e0e6:	inc    esp
  41e0e7:	cmp    eax,0xc8991dc3
  41e0ec:	ret    
  41e0ed:	int    0xbe
  41e0ef:	xor    DWORD PTR [ebx],esp
  41e0f1:	mov    eax,0x8cec892
  41e0f6:	test   eax,0x1e69e93
  41e0fb:	and    DWORD PTR es:[ecx+edi*8-0x8e3e3b7],esp
  41e103:	push   eax
  41e104:	stos   BYTE PTR es:[edi],al
  41e105:	data16 sbb ch,BYTE PTR [ecx-0x56e27457]
  41e10c:	dec    esp
  41e10d:	stos   BYTE PTR es:[edi],al
  41e10e:	loopne 0x41e0bc
  41e110:	dec    esp
  41e111:	sub    eax,DWORD PTR [ebp+0x53]
  41e114:	push   ebx
  41e115:	shl    DWORD PTR [ebx],0xfa
  41e118:	test   ch,bh
  41e11a:	loopne 0x41e0b9
  41e11c:	xor    dh,BYTE PTR ds:0x30d2f412
  41e122:	mov    ds:0xa1b19b67,eax
  41e127:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e128:	ja     0x41e0af
  41e12a:	ja     0x41e146
  41e12c:	aam    0x1f
  41e12e:	cmp    bh,dl
  41e130:	adc    edi,DWORD PTR [ebp-0x1]
  41e133:	dec    edx
  41e134:	outs   dx,DWORD PTR ds:[esi]
  41e135:	(bad)  
  41e136:	aaa    
  41e137:	mov    ch,0xdf
  41e139:	sub    bl,cl
  41e13b:	std    
  41e13c:	ins    BYTE PTR es:[edi],dx
  41e13d:	pop    edx
  41e13e:	cmp    DWORD PTR [ecx],0x4b4fc82
  41e144:	daa    
  41e145:	pop    ebp
  41e146:	push   edx
  41e147:	fwait
  41e148:	mov    ah,0xff
  41e14a:	xchg   edi,eax
  41e14b:	or     edx,DWORD PTR [ecx+0x111486cb]
  41e151:	xor    DWORD PTR ds:0x6013fc36,0xa6dc2923
  41e15b:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e15d:	retf   
  41e15e:	js     0x41e149
  41e160:	jg     0x41e0f9
  41e162:	push   cs
  41e163:	push   ecx
  41e164:	lods   eax,DWORD PTR ds:[esi]
  41e165:	xchg   esi,eax
  41e166:	(bad)  
  41e167:	dec    ebx
  41e168:	mov    ecx,0xf7db24a8
  41e16d:	pop    edx
  41e16e:	imul   ebx,DWORD PTR [ecx-0x33],0x6f
  41e172:	sub    eax,0x93de7ddb
  41e177:	lock ret 0xa333
  41e17b:	cmp    al,0xf1
  41e17d:	mov    ah,0x9b
  41e17f:	shr    BYTE PTR [ebx-0x1b],0x25
  41e183:	mov    ebx,0x2fe9ee1
  41e188:	sti    
  41e189:	call   DWORD PTR ds:0x1d532fba
  41e18f:	imul   esi,DWORD PTR [ebp-0x6e],0xffffffaf
  41e193:	in     al,dx
  41e194:	sbb    DWORD PTR [ecx],ecx
  41e196:	pop    ebx
  41e197:	pop    ebp
  41e198:	out    0x83,eax
  41e19a:	xchg   ecx,eax
  41e19b:	adc    eax,0xbdec4a54
  41e1a0:	mov    ch,0x3c
  41e1a2:	hlt    
  41e1a3:	rcl    DWORD PTR [edi],cl
  41e1a5:	and    DWORD PTR [ecx],0x7a
  41e1a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1a9:	rol    DWORD PTR [ebp-0x5b],1
  41e1ac:	nop
  41e1ad:	mov    ch,0xdc
  41e1af:	xchg   ebx,eax
  41e1b0:	fiadd  WORD PTR [eax]
  41e1b2:	and    DWORD PTR ds:0xc130403f,esi
  41e1b8:	mov    esp,DWORD PTR [edi+0x530a7fe6]
  41e1be:	outs   dx,BYTE PTR ds:[esi]
  41e1bf:	mov    ds:0xcdb8fc28,al
  41e1c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1c5:	pop    es
  41e1c6:	scas   al,BYTE PTR es:[edi]
  41e1c7:	jns    0x41e218
  41e1c9:	mov    bl,0x6c
  41e1cb:	adc    al,0xa3
  41e1cd:	pop    esp
  41e1ce:	pop    edi
  41e1cf:	mov    dh,0xd4
  41e1d1:	mov    al,0xd0
  41e1d3:	fmul   st,st(0)
  41e1d5:	stc    
  41e1d6:	cmp    BYTE PTR [ebx],dh
  41e1d8:	je     0x41e182
  41e1da:	dec    esi
  41e1db:	loopne 0x41e168
  41e1dd:	fdivr  st(3),st
  41e1df:	mov    ebx,0x1f6f1405
  41e1e4:	xor    dh,BYTE PTR [edi]
  41e1e6:	mov    ebp,0x84b9cff8
  41e1eb:	xor    eax,0xeaa942cb
  41e1f0:	cmp    BYTE PTR [edi],0x60
  41e1f3:	shl    DWORD PTR [ecx+0x2a3141b5],cl
  41e1f9:	mov    ds:0x97669f9a,al
  41e1fe:	out    0x4b,eax
  41e200:	xor    eax,0xb9817658
  41e205:	call   0x656a735c
  41e20a:	mov    dh,0x67
  41e20c:	cmp    BYTE PTR [edi],dl
  41e20e:	out    0xa6,eax
  41e210:	adc    BYTE PTR [ecx-0x6be77aef],dl
  41e216:	adc    DWORD PTR [edi+0x4610b16f],esp
  41e21c:	(bad)  
  41e21e:	push   DWORD PTR [ecx+0x7e]
  41e221:	out    dx,eax
  41e222:	dec    ecx
  41e223:	ror    BYTE PTR [edx-0x72],cl
  41e226:	or     al,0x8
  41e228:	mov    al,0xf2
  41e22a:	iret   
  41e22b:	dec    eax
  41e22c:	adc    eax,0x800f50ae
  41e231:	stos   BYTE PTR es:[edi],al
  41e232:	test   al,ah
  41e234:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e235:	cmp    DWORD PTR [edi+edi*8],0xdf8fb3eb
  41e23c:	arpl   WORD PTR [ebp+0x51],bx
  41e23f:	xor    al,0xbe
  41e241:	int    0x25
  41e243:	fsub   st,st(2)
  41e245:	add    eax,0xc3ee93af
  41e24a:	inc    ebp
  41e24b:	mov    edi,0xe0622ce0
  41e250:	jp     0x41e24a
  41e252:	jl     0x41e2aa
  41e254:	popf   
  41e255:	popa   
  41e256:	push   ebp
  41e257:	and    ebx,ebp
  41e259:	sbb    al,0xf8
  41e25b:	mov    ds:0x2ea1a343,eax
  41e260:	push   eax
  41e261:	(bad)  [esp+ebp*8+0x7f]
  41e265:	pop    edx
  41e266:	popa   
  41e267:	or     al,0x84
  41e269:	fcmovne st,st(2)
  41e26b:	mov    BYTE PTR [ebx-0x71],dh
  41e26e:	shl    DWORD PTR [ebp+0x2e],0x2d
  41e272:	icebp  
  41e273:	(bad)  
  41e274:	jnp    0x41e297
  41e276:	jle    0x41e220
  41e278:	mov    WORD PTR [ebx+eiz*8+0x7ae96f3d],gs
  41e27f:	push   ebp
  41e280:	add    dl,BYTE PTR [ebp+0x3e]
  41e283:	mov    esp,0x78ba39c8
  41e288:	shr    ah,0x54
  41e28b:	bound  ebp,QWORD PTR [ebx+ecx*1]
  41e28e:	not    edx
  41e290:	test   BYTE PTR [edi-0x66],ch
  41e293:	stc    
  41e294:	mov    DWORD PTR [esi+0x6e07c522],edx
  41e29a:	dec    eax
  41e29b:	jae    0x41e2a4
  41e29d:	mov    ch,0x68
  41e29f:	addr16 loopne 0x41e26d
  41e2a2:	stos   BYTE PTR es:[edi],al
  41e2a3:	inc    eax
  41e2a4:	push   ds
  41e2a5:	cli    
  41e2a6:	xor    al,0x13
  41e2a8:	call   0x8bed:0xd7d794fd
  41e2af:	push   ebx
  41e2b0:	cld    
  41e2b1:	pop    ds
  41e2b2:	cli    
  41e2b3:	ja     0x41e2ec
  41e2b5:	or     edx,DWORD PTR [ecx]
  41e2b7:	or     DWORD PTR [ebx+0x4],edi
  41e2ba:	push   edi
  41e2bb:	jnp    0x41e2d4
  41e2bd:	cmp    BYTE PTR [edx],dh
  41e2bf:	inc    ecx
  41e2c0:	cmp    bl,0xdb
  41e2c3:	mov    esi,0xb01bcaf3
  41e2c8:	or     al,0x83
  41e2ca:	ja     0x41e2e0
  41e2cc:	inc    eax
  41e2cd:	sub    DWORD PTR [edx+0x73dd61a6],0x3c
  41e2d4:	add    eax,ebp
  41e2d6:	mov    eax,ds:0x956a35f1
  41e2db:	xor    bl,bh
  41e2dd:	inc    edx
  41e2de:	enter  0x1a2d,0x61
  41e2e2:	cdq    
  41e2e3:	jl     0x41e2be
  41e2e5:	dec    esi
  41e2e6:	shl    BYTE PTR [edi],1
  41e2e8:	popa   
  41e2e9:	push   esp
  41e2ea:	pop    edx
  41e2eb:	call   0x638:0x775ca189
  41e2f2:	sub    BYTE PTR [eax-0x65],0x7a
  41e2f6:	pop    edx
  41e2f7:	jmp    0xe71c529c
  41e2fc:	push   edi
  41e2fd:	mov    BYTE PTR [edx+0x51797b03],bh
  41e303:	adc    al,0x79
  41e305:	or     eax,0xae1da37d
  41e30a:	xor    al,0xdc
  41e30c:	jmp    0x1b3a:0x4684bcd4
  41e313:	dec    ecx
  41e314:	in     al,0xb3
  41e316:	in     eax,dx
  41e317:	mov    ebx,0x395883c0
  41e31c:	shr    BYTE PTR [ecx+0x5dd8ba03],1
  41e322:	sbb    DWORD PTR [ebx+0x3e],0xc154a6f9
  41e329:	loop   0x41e347
  41e32b:	mov    cl,0x20
  41e32d:	push   0xe2af1ff5
  41e332:	shl    dl,cl
  41e334:	jle    0x41e38f
  41e336:	sbb    DWORD PTR [eax+0x4954ae3c],edx
  41e33c:	rcl    BYTE PTR [ebx+ebx*2],0xe7
  41e340:	sub    bh,BYTE PTR [esi+0x5e]
  41e343:	out    0x60,al
  41e345:	rcr    BYTE PTR ds:0xb6dde717,cl
  41e34b:	pop    es
  41e34c:	sbb    esp,ebp
  41e34e:	and    eax,DWORD PTR [edx+0x3a673b9]
  41e354:	ror    edx,1
  41e356:	add    eax,0x117455fa
  41e35b:	call   0xcc79034a
  41e360:	call   0x4a27:0xb7751633
  41e367:	or     al,0x36
  41e369:	(bad)  
  41e36a:	out    dx,al
  41e36b:	icebp  
  41e36c:	jge    0x41e31b
  41e36e:	push   0xffffffb3
  41e370:	loopne 0x41e3e7
  41e372:	pop    esp
  41e373:	test   BYTE PTR [ebp-0x668697aa],cl
  41e379:	mov    dl,BYTE PTR [ecx-0x572266c9]
  41e37f:	sub    BYTE PTR [ecx+0x635edb09],dl
  41e385:	mov    dl,0x19
  41e387:	pop    edi
  41e388:	loop   0x41e3b4
  41e38a:	jp     0x41e38b
  41e38c:	mov    edx,0xbb7f4990
  41e391:	xchg   DWORD PTR [ebp+0x73],ebp
  41e394:	fwait
  41e395:	mov    dl,0x37
  41e397:	push   ss
  41e398:	adc    al,0x2c
  41e39a:	loop   0x41e337
  41e39c:	adc    DWORD PTR [ebx+0x55],edi
  41e39f:	ss jo  0x41e3f3
  41e3a2:	jge    0x41e3d2
  41e3a4:	mov    dl,0xb7
  41e3a6:	add    cl,ah
  41e3a8:	mov    fs,WORD PTR [edi+edx*4]
  41e3ab:	mov    al,0xb7
  41e3ad:	fbld   TBYTE PTR [edi]
  41e3af:	inc    esp
  41e3b0:	shl    BYTE PTR [edi-0x52b54a64],1
  41e3b6:	dec    edx
  41e3b7:	lahf   
  41e3b8:	pop    edi
  41e3b9:	cld    
  41e3ba:	xchg   esi,eax
  41e3bb:	and    ebx,DWORD PTR [ebx]
  41e3bd:	mov    DWORD PTR [esi+0x531d3d5e],0x56c2307c
  41e3c7:	fistp  QWORD PTR [edi+0x555dad6b]
  41e3cd:	ret    0xf6f7
  41e3d0:	dec    ch
  41e3d2:	gs jmp 0x41e39b
  41e3d5:	or     al,0xbf
  41e3d7:	aaa    
  41e3d8:	das    
  41e3d9:	push   ebp
  41e3da:	dec    edx
  41e3db:	pop    ebx
  41e3dc:	mov    edx,DWORD PTR [edx-0x2a1acd8c]
  41e3e2:	sbb    ecx,eax
  41e3e4:	inc    edi
  41e3e5:	ja     0x41e3ae
  41e3e7:	sti    
  41e3e8:	pop    ss
  41e3e9:	dec    edx
  41e3ea:	cmp    DWORD PTR [esi*2+0x4764a188],ebp
  41e3f1:	fcom   QWORD PTR [ecx-0x5375c4e8]
  41e3f7:	mov    dl,0x31
  41e3f9:	test   eax,0xa184f105
  41e3fe:	dec    ebx
  41e3ff:	xor    DWORD PTR [edx+edx*4-0x22eb8a02],0xffffff80
  41e407:	add    al,0xbb
  41e409:	mov    ah,0x85
  41e40b:	out    0xf0,al
  41e40d:	shl    BYTE PTR [ebx+0x7f27efd5],1
  41e413:	sbb    al,0xa2
  41e415:	dec    ebx
  41e416:	bound  ecx,QWORD PTR [ecx+0x32]
  41e419:	imul   ecx,DWORD PTR [edi+0x75],0xffffffa7
  41e41d:	sbb    BYTE PTR [ecx-0x3cc4a5c1],bl
  41e423:	add    al,0x9b
  41e425:	out    dx,eax
  41e426:	jmp    0x9b8cc0f5
  41e42b:	xor    eax,0xe335c93f
  41e430:	jl     0x41e4a3
  41e432:	in     eax,0x7c
  41e434:	cmp    al,ch
  41e436:	js     0x41e409
  41e438:	sub    BYTE PTR [esi+0x4c],dh
  41e43b:	sbb    esi,DWORD PTR [ebx+0x6a]
  41e43e:	std    
  41e43f:	sbb    BYTE PTR [ecx],0xa0
  41e442:	les    edi,FWORD PTR [ebp+0x591e2d4e]
  41e448:	dec    ebx
  41e449:	pop    edi
  41e44a:	cwde   
  41e44b:	cmp    bl,dh
  41e44d:	add    edx,DWORD PTR [ecx-0x42]
  41e450:	scas   al,BYTE PTR es:[edi]
  41e451:	sar    BYTE PTR ds:0xf942cb16,cl
  41e457:	jnp    0x41e46e
  41e459:	daa    
  41e45a:	add    esp,DWORD PTR [edx+0x7e]
  41e45d:	ins    DWORD PTR es:[edi],dx
  41e45e:	dec    esp
  41e45f:	cli    
  41e460:	inc    edx
  41e461:	add    ch,al
  41e463:	arpl   WORD PTR [esi+0x63],di
  41e466:	fisttp DWORD PTR ds:0x10445337
  41e46c:	dec    eax
  41e46d:	out    0x72,al
  41e46f:	jg     0x41e453
  41e471:	add    al,0xe6
  41e473:	pop    ebp
  41e474:	mov    cl,0xa6
  41e476:	outs   dx,BYTE PTR ds:[esi]
  41e477:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e478:	push   edx
  41e479:	sub    ch,bl
  41e47b:	vpand  xmm6,xmm4,XMMWORD PTR [ebp+0x4d]
  41e480:	or     al,0xe
  41e482:	mov    DWORD PTR [ecx-0x277c128d],eax
  41e488:	jno    0x41e4b1
  41e48a:	mov    ch,BYTE PTR [ebx+0x3a]
  41e48d:	sub    BYTE PTR [ecx+0x4b],dh
  41e490:	in     eax,dx
  41e491:	out    dx,eax
  41e492:	push   esi
  41e493:	jns    0x41e436
  41e495:	(bad)  
  41e496:	nop
  41e497:	jge    0x41e510
  41e499:	call   0x43bc:0x57a34aba
  41e4a0:	inc    BYTE PTR [eax+ecx*1]
  41e4a3:	stos   DWORD PTR es:[edi],eax
  41e4a4:	mov    al,0x9
  41e4a6:	test   DWORD PTR [ebx],edx
  41e4a8:	rcl    BYTE PTR [ebp+0xa],1
  41e4ab:	(bad)  
  41e4ac:	xchg   ebp,eax
  41e4ad:	xchg   BYTE PTR [ecx+0x7d],bl
  41e4b0:	(bad)  
  41e4b1:	loop   0x41e491
  41e4b3:	pop    ss
  41e4b4:	push   esp
  41e4b5:	out    dx,al
  41e4b6:	add    ecx,esi
  41e4b8:	inc    ecx
  41e4ba:	push   edx
  41e4bb:	dec    edx
  41e4bc:	ret    0xf5b3
  41e4bf:	jbe    0x41e4ff
  41e4c1:	pushf  
  41e4c2:	xor    bh,0xb4
  41e4c5:	xchg   ecx,eax
  41e4c6:	cmc    
  41e4c7:	and    al,0x68
  41e4c9:	push   eax
  41e4ca:	retf   
  41e4cb:	pop    esi
  41e4cc:	je     0x41e536
  41e4ce:	mov    bh,al
  41e4d0:	imul   edx,esp,0xffffffc9
  41e4d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4d4:	ret    
  41e4d5:	out    0xaa,al
  41e4d7:	jge    0x41e46a
  41e4d9:	pusha  
  41e4da:	(bad)  
  41e4db:	jmp    0x41e533
  41e4dd:	stos   BYTE PTR es:[edi],al
  41e4de:	(bad)  
  41e4df:	retf   0x5a9c
  41e4e2:	push   ebp
  41e4e3:	or     ebp,DWORD PTR [esi-0x39]
  41e4e6:	xchg   DWORD PTR [eax-0x7c45bb03],esi
  41e4ec:	inc    esp
  41e4ed:	ds in  al,0x3
  41e4f0:	mov    edx,0x14c3e930
  41e4f5:	xchg   ebx,eax
  41e4f6:	pop    ebx
  41e4f7:	adc    BYTE PTR [ebx+0x53edb206],ah
  41e4fd:	iret   
  41e4fe:	adc    esi,DWORD PTR [eax-0x68]
  41e501:	bound  edi,QWORD PTR [esp+edi*2]
  41e504:	repz out 0x26,al
  41e507:	mov    eax,ds:0x93091c84
  41e50c:	mov    ch,0xd4
  41e50e:	push   esp
  41e50f:	aam    0x3
  41e511:	mov    ch,0xd4
  41e513:	dec    ebx
  41e514:	inc    edi
  41e515:	sar    BYTE PTR [ebx],1
  41e517:	xchg   BYTE PTR [ebx-0x23a3f048],ch
  41e51d:	mov    ebx,0xb76b2101
  41e522:	ror    DWORD PTR [esi+0x24ad23eb],cl
  41e528:	test   BYTE PTR [ecx-0x62],0xb1
  41e52c:	outs   dx,BYTE PTR ds:[esi]
  41e52d:	add    DWORD PTR [ebp+0x37cdadaf],ebx
  41e533:	push   cs
  41e534:	jmp    0x41e528
  41e536:	mov    esi,0x2b6ad55c
  41e53b:	pop    ss
  41e53c:	add    al,0x23
  41e53e:	jbe    0x41e4fa
  41e540:	in     eax,0x62
  41e542:	enter  0x9c84,0xcc
  41e546:	add    eax,0xae2e2418
  41e54b:	jns    0x41e5b1
  41e54d:	(bad)  
  41e54e:	sbb    BYTE PTR [eax],ah
  41e550:	inc    ebp
  41e551:	pop    esi
  41e552:	xlat   BYTE PTR ds:[ebx]
  41e553:	xchg   edi,eax
  41e554:	sbb    ebp,DWORD PTR [ebx-0x67c97567]
  41e55a:	sar    eax,0x30
  41e55d:	jmp    0x177e:0xecd2b499
  41e564:	jno    0x41e568
  41e566:	lock cli 
  41e568:	imul   DWORD PTR [edx+0x2c3f50e9]
  41e56e:	xchg   BYTE PTR [edi],dh
  41e570:	cwde   
  41e571:	int3   
  41e572:	icebp  
  41e573:	out    0x3f,eax
  41e575:	std    
  41e576:	jb     0x41e5ce
  41e578:	jg     0x41e5db
  41e57a:	dec    edx
  41e57b:	lds    eax,FWORD PTR [edi+eiz*8-0x45862ccb]
  41e582:	sbb    bl,cl
  41e584:	and    al,0x2f
  41e586:	push   esp
  41e587:	iret   
  41e588:	test   DWORD PTR [eax-0xb],edi
  41e58b:	in     eax,dx
  41e58c:	push   ebp
  41e58d:	push   edx
  41e58e:	sti    
  41e58f:	jge    0x41e5b3
  41e591:	push   esi
  41e592:	out    dx,eax
  41e593:	xchg   ecx,eax
  41e594:	mov    edi,eax
  41e596:	(bad)  
  41e597:	sbb    al,0xbc
  41e599:	inc    ebp
  41e59a:	iret   
  41e59b:	test   ebx,ebx
  41e59d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e59e:	add    dl,ah
  41e5a0:	or     ah,al
  41e5a2:	xor    bh,BYTE PTR [ecx]
  41e5a4:	xor    al,0x4a
  41e5a6:	fs dec eax
  41e5a8:	test   eax,0xf67e46b3
  41e5ad:	mov    ds:0xb7b5a471,eax
  41e5b2:	or     ebx,ebp
  41e5b4:	push   0x7c1a871e
  41e5b9:	and    al,0xb1
  41e5bb:	les    eax,FWORD PTR [ecx-0x6f6f34ce]
  41e5c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5c2:	pop    eax
  41e5c3:	mov    al,ds:0xf06ff2a6
  41e5c8:	jns    0x41e649
  41e5ca:	push   esi
  41e5cb:	mov    ch,dh
  41e5cd:	pop    edi
  41e5ce:	jb     0x41e64d
  41e5d0:	and    BYTE PTR [ebp+ecx*2-0x50],cl
  41e5d4:	ja     0x41e600
  41e5d6:	iret   
  41e5d7:	arpl   WORD PTR [ebp-0x26f33e22],si
  41e5dd:	xchg   esi,eax
  41e5de:	mov    ebp,0x2c8d6734
  41e5e3:	adc    eax,ecx
  41e5e5:	add    ah,BYTE PTR [ebp+0x7f043ea]
  41e5eb:	enter  0x8a52,0x43
  41e5ef:	pextrw ecx,(bad),0xc5
  41e5f1:	or     cl,ah
  41e5f3:	mov    ds:0xeac5af29,eax
  41e5f8:	jl     0x41e64d
  41e5fa:	push   es
  41e5fb:	xor    al,0x34
  41e5fd:	mov    dl,BYTE PTR [esp+edx*4+0x48]
  41e601:	inc    ecx
  41e602:	xor    ch,BYTE PTR [ebx+0x32b49275]
  41e608:	lahf   
  41e609:	retf   
  41e60a:	jno    0x41e605
  41e60c:	je     0x41e590
  41e60e:	dec    esp
  41e60f:	retf   
  41e610:	fisub  DWORD PTR [edi+ebx*2]
  41e613:	mov    edx,0xe0119e5d
  41e618:	dec    ebp
  41e619:	clc    
  41e61a:	sti    
  41e61b:	push   ss
  41e61c:	adc    DWORD PTR [eax],ebx
  41e61e:	idiv   BYTE PTR [esi-0x5b]
  41e621:	fcmovu st,st(1)
  41e623:	pop    ebx
  41e624:	xor    DWORD PTR [ebx+0x35a775f0],esp
  41e62a:	shl    BYTE PTR [esi+0x220cc3c0],cl
  41e630:	dec    ebx
  41e631:	pop    esp
  41e632:	push   ebp
  41e634:	and    BYTE PTR [edi+0x32],0x38
  41e638:	sbb    al,0xf5
  41e63a:	xor    BYTE PTR [ebp+0xea9a490],ch
  41e640:	sbb    ebx,DWORD PTR [esi]
  41e642:	and    esi,DWORD PTR [eax]
  41e644:	in     eax,dx
  41e645:	inc    esi
  41e646:	in     al,dx
  41e647:	xchg   ebp,eax
  41e648:	and    al,0x63
  41e64a:	es dec esp
  41e64c:	cmp    eax,0x969c3701
  41e651:	or     DWORD PTR [edx+0x572be974],edi
  41e657:	xchg   ecx,eax
  41e658:	sbb    DWORD PTR ds:0x48d1b70d,0xffffffaa
  41e65f:	xchg   ebx,eax
  41e660:	dec    ebx
  41e661:	sbb    DWORD PTR [ecx+ebx*1-0xa],ebp
  41e665:	xor    dl,BYTE PTR [esi+0x5c55ff6d]
  41e66b:	mov    gs,WORD PTR [eax+esi*2]
  41e66e:	push   esp
  41e66f:	outs   dx,DWORD PTR ds:[esi]
  41e670:	mov    al,0x28
  41e672:	push   0xef91bcfd
  41e677:	ficom  WORD PTR [edi+0x5c]
  41e67a:	add    bl,dh
  41e67c:	pop    edi
  41e67d:	imul   ecx,DWORD PTR [edx-0x53],0xde13b65c
  41e684:	sub    al,0x15
  41e686:	xor    eax,0xe6192327
  41e68b:	ror    DWORD PTR [esi],1
  41e68d:	mov    dh,0x59
  41e68f:	jg     0x41e65a
  41e691:	xchg   ebp,eax
  41e692:	dec    esi
  41e693:	push   0xffffffd8
  41e695:	sub    esi,edi
  41e697:	xchg   DWORD PTR [ecx-0x5e56acda],ebx
  41e69d:	push   ss
  41e69e:	call   0x864fff1c
  41e6a3:	ret    0xe940
  41e6a6:	inc    eax
  41e6a7:	sub    al,0x85
  41e6a9:	mov    bl,0xa7
  41e6ab:	fiadd  WORD PTR ds:0xd9449787
  41e6b1:	add    eax,0xf9748d9c
  41e6b6:	mov    dh,0x5e
  41e6b8:	fiadd  DWORD PTR [edx-0x66c8f714]
  41e6be:	fld    st(3)
  41e6c0:	pop    ebp
  41e6c1:	inc    eax
  41e6c2:	push   ebx
  41e6c3:	push   cs
  41e6c4:	fdivr  DWORD PTR [eax+eax*1+0x50]
  41e6c8:	inc    edx
  41e6c9:	mov    ds:0xc14b389c,eax
  41e6ce:	lahf   
  41e6cf:	fwait
  41e6d0:	(bad)  
  41e6d1:	test   DWORD PTR [esi+ecx*8],ebp
  41e6d4:	cli    
  41e6d5:	inc    esi
  41e6d6:	loope  0x41e6ca
  41e6d8:	test   al,0x79
  41e6da:	sti    
  41e6db:	popa   
  41e6dc:	loope  0x41e66d
  41e6de:	xlat   BYTE PTR ds:[ebx]
  41e6df:	test   DWORD PTR [esi],0x248394be
  41e6e5:	mov    esi,DWORD PTR [edi+esi*8+0x5d853f53]
  41e6ec:	fmul   QWORD PTR [ebx+0x6d1c88c]
  41e6f2:	jnp    0x41e6d7
  41e6f4:	sub    ah,BYTE PTR gs:[edx-0x56]
  41e6f8:	sti    
  41e6f9:	test   esp,ebx
  41e6fb:	dec    ebp
  41e6fc:	gs cmp eax,0xd3963b8a
  41e702:	fld    DWORD PTR [ebp+0xa4286e8]
  41e708:	xor    dh,BYTE PTR [edi-0x4e]
  41e70b:	int3   
  41e70c:	imul   ebp,DWORD PTR [bx+si],0x9ad93442
  41e713:	dec    edx
  41e714:	push   esp
  41e715:	mov    bh,0x6c
  41e717:	and    al,0x6
  41e719:	adc    dl,bl
  41e71b:	sub    al,0xfd
  41e71d:	inc    ebp
  41e71e:	(bad)  
  41e71f:	xchg   ebp,eax
  41e720:	or     ah,0x64
  41e723:	mov    ebp,0x584273da
  41e728:	psrlq  mm3,mm3
  41e72b:	mov    edx,0x85b4af30
  41e730:	xor    ecx,0x5f
  41e733:	leave  
  41e734:	enter  0x1c08,0x49
  41e738:	inc    ecx
  41e739:	sub    esi,DWORD PTR [edi-0x7]
  41e73c:	not    DWORD PTR [edi-0x1d]
  41e73f:	ret    0x9c81
  41e742:	int    0xf
  41e744:	cmp    ecx,ebx
  41e746:	push   ecx
  41e747:	es inc esp
  41e749:	xchg   edi,eax
  41e74a:	rol    BYTE PTR [esp+edx*1-0xd],cl
  41e74e:	cmp    eax,0x6d7c6516
  41e753:	xchg   esi,eax
  41e754:	inc    esp
  41e755:	mov    ebp,0x424eab4b
  41e75a:	inc    esi
  41e75b:	arpl   WORD PTR [ebp+0x2e7859c9],bp
  41e761:	jl     0x41e6e3
  41e763:	or     eax,0xd497e184
  41e768:	adc    BYTE PTR [esi],al
  41e76a:	mov    ecx,0x858137fe
  41e76f:	cld    
  41e770:	xor    ch,BYTE PTR [ebx]
  41e772:	shl    DWORD PTR [eax+0x5df5c45d],1
  41e778:	inc    ebx
  41e779:	mov    dh,0xcf
  41e77b:	das    
  41e77c:	jl     0x41e7b8
  41e77e:	adc    al,0x98
  41e780:	mov    dl,0x11
  41e782:	cmp    eax,0xfb2b43a4
  41e787:	or     DWORD PTR cs:[esp+ebx*8],esp
  41e78b:	es in  eax,0x30
  41e78e:	xor    ebx,DWORD PTR [esp+edx*2+0x639cd2a7]
  41e795:	cmp    DWORD PTR [edi],0x90547ee6
  41e79b:	mov    ebp,0xa64ec971
  41e7a0:	xchg   esp,eax
  41e7a1:	pusha  
  41e7a2:	xchg   ebx,eax
  41e7a3:	lock xor al,bh
  41e7a6:	leave  
  41e7a7:	pop    ss
  41e7a8:	pop    ebx
  41e7a9:	mov    esi,0x6fecdc29
  41e7ae:	in     eax,0xcb
  41e7b0:	ret    0x6b37
  41e7b3:	fst    st(2)
  41e7b5:	out    0x29,al
  41e7b7:	mov    esp,0x644653bd
  41e7bc:	push   es
  41e7bd:	cwde   
  41e7be:	add    eax,DWORD PTR [ecx+0xb]
  41e7c1:	pop    esp
  41e7c2:	sub    eax,0x71c318b9
  41e7c7:	inc    esi
  41e7c8:	pop    es
  41e7c9:	popf   
  41e7ca:	jmp    0xbcb8c2d3
  41e7cf:	mov    esp,0x5ed27629
  41e7d4:	xchg   edx,eax
  41e7d5:	pop    ebx
  41e7d6:	or     DWORD PTR [eax+eax*8],ecx
  41e7d9:	imul   ebx,DWORD PTR [eax],0xd4820c56
  41e7df:	lods   al,BYTE PTR ds:[esi]
  41e7e0:	and    eax,0xf1e36480
  41e7e5:	jmp    0x4e8c:0x8378aae9
  41e7ec:	scas   al,BYTE PTR es:[edi]
  41e7ed:	sbb    al,0x86
  41e7ef:	dec    ecx
  41e7f0:	ret    
  41e7f1:	std    
  41e7f2:	out    0xaa,al
  41e7f4:	lods   eax,DWORD PTR ds:[esi]
  41e7f5:	js     0x41e85c
  41e7f7:	cs clc 
  41e7f9:	loopne 0x41e848
  41e7fb:	pop    esi
  41e7fc:	cli    
  41e7fd:	mov    ebp,0x79f5bec8
  41e802:	mov    dl,0xbd
  41e804:	popf   
  41e805:	add    edi,DWORD PTR [ebp-0x21]
  41e808:	sti    
  41e809:	je     0x41e7fb
  41e80b:	cli    
  41e80c:	(bad)  
  41e80d:	push   0x317e5a6b
  41e812:	xchg   esi,eax
  41e813:	popa   
  41e814:	mov    cs,ebp
  41e816:	std    
  41e817:	mov    esp,ds
  41e819:	and    BYTE PTR [esi-0x7b8e1f49],dl
  41e81f:	scas   eax,DWORD PTR es:[edi]
  41e820:	sub    BYTE PTR [ebp+0x4b50ab8e],dh
  41e826:	inc    edx
  41e827:	dec    edx
  41e828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e829:	hlt    
  41e82a:	mov    ch,0x67
  41e82c:	lods   eax,DWORD PTR ds:[esi]
  41e82d:	sub    BYTE PTR [edx+0x32],0xa2
  41e831:	lock cmp BYTE PTR [eax-0x4080f3e5],al
  41e838:	ins    BYTE PTR es:[edi],dx
  41e839:	push   ecx
  41e83a:	mov    ch,bl
  41e83c:	or     eax,0x17a7629
  41e841:	stos   BYTE PTR es:[edi],al
  41e842:	push   ebp
  41e843:	sub    al,0x65
  41e845:	add    ecx,DWORD PTR [esi-0x50b4f191]
  41e84b:	cli    
  41e84c:	enter  0x751b,0xb5
  41e850:	sbb    BYTE PTR [esi+0x35],bl
  41e853:	lds    esi,FWORD PTR [edi+0x4a]
  41e856:	mov    ebp,0x58c19f3a
  41e85b:	mov    ebx,0x8b3322ae
  41e860:	mov    ebp,0x5e0bb36c
  41e865:	out    dx,al
  41e866:	jnp    0x41e85c
  41e868:	push   edx
  41e869:	inc    eax
  41e86a:	sub    al,0xdd
  41e86c:	ds ret 0x1491
  41e870:	inc    ebx
  41e871:	sbb    al,0x11
  41e873:	xchg   ebx,eax
  41e874:	test   al,0xb1
  41e876:	push   edx
  41e877:	jp     0x41e8c9
  41e879:	sub    BYTE PTR [ecx-0x24],dl
  41e87c:	pop    ecx
  41e87d:	jle    0x41e8d0
  41e87f:	cwde   
  41e880:	shl    BYTE PTR [ebp+eiz*2+0x1df7d45],1
  41e887:	(bad)  
  41e888:	stc    
  41e889:	mov    dh,0x87
  41e88b:	pop    ecx
  41e88c:	mov    dl,BYTE PTR [edi+0x741babd2]
  41e892:	test   eax,0x36bb74a0
  41e897:	mov    edx,0xb6853560
  41e89c:	xor    eax,DWORD PTR [edx]
  41e89e:	or     BYTE PTR [edx+0x61166913],dl
  41e8a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8a5:	cdq    
  41e8a6:	xor    dh,BYTE PTR [esp+ecx*2-0x4]
  41e8aa:	aad    0xd4
  41e8ac:	sub    BYTE PTR [edi],bh
  41e8ae:	xchg   esp,eax
  41e8af:	sub    eax,DWORD PTR [ebx]
  41e8b1:	loope  0x41e8dc
  41e8b3:	jns    0x41e910
  41e8b5:	pop    edi
  41e8b6:	pop    eax
  41e8b7:	(bad)  
  41e8b9:	pop    ss
  41e8ba:	call   0x2f5b:0x648400da
  41e8c1:	sub    esp,DWORD PTR [edx-0x68]
  41e8c4:	or     al,bh
  41e8c6:	adc    ch,ch
  41e8c8:	push   0x6d
  41e8ca:	xchg   ebx,eax
  41e8cb:	and    al,0x5c
  41e8cd:	inc    ebx
  41e8ce:	fs sbb eax,0xf8770fc2
  41e8d4:	push   ebp
  41e8d5:	pop    ebx
  41e8d6:	loopne 0x41e94a
  41e8d8:	adc    al,0x7f
  41e8da:	call   0xdc32:0xa9873bc6
  41e8e1:	mov    edi,ecx
  41e8e3:	inc    esi
  41e8e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8e5:	scas   al,BYTE PTR es:[edi]
  41e8e6:	cmp    DWORD PTR ds:[eax],ebx
  41e8e9:	push   esp
  41e8ea:	xchg   DWORD PTR [esi-0x371a2dfb],eax
  41e8f0:	pop    ss
  41e8f1:	loop   0x41e91b
  41e8f3:	mov    al,0xd3
  41e8f5:	cli    
  41e8f6:	retf   
  41e8f7:	scas   al,BYTE PTR es:[edi]
  41e8f8:	pop    ebp
  41e8f9:	jg     0x41e91c
  41e8fb:	mov    dl,0xec
  41e8fd:	sbb    edi,DWORD PTR [edi]
  41e8ff:	sbb    DWORD PTR [ebp-0x69],0x7
  41e903:	add    al,0x68
  41e905:	mov    esp,0xa389cc70
  41e90a:	jl     0x41e935
  41e90c:	inc    edx
  41e90d:	inc    esp
  41e90e:	lahf   
  41e90f:	inc    edx
  41e910:	and    eax,0x380fe543
  41e915:	add    edx,esp
  41e917:	ja     0x41e924
  41e919:	fist   DWORD PTR [edx-0xe]
  41e91c:	mov    esi,0xacfba63c
  41e921:	jle    0x41e8d6
  41e923:	imul   esi,DWORD PTR [eax+0x234ad605],0x95db29cc
  41e92d:	jmp    0x3ea3bdab
  41e932:	fxch   st(1)
  41e934:	dec    edi
  41e935:	adc    BYTE PTR [edx+0x1d],cl
  41e938:	bound  edi,QWORD PTR [esi+esi*8-0x46]
  41e93c:	outs   dx,DWORD PTR ds:[esi]
  41e93d:	mov    esp,ecx
  41e93f:	loopne 0x41e91d
  41e941:	and    esi,esi
  41e943:	xor    cl,BYTE PTR [ebx+ecx*4-0x40]
  41e947:	sub    eax,0x980664d2
  41e94c:	(bad)  
  41e94d:	enter  0x23ad,0x43
  41e951:	sbb    eax,0x2f0139c1
  41e956:	scas   al,BYTE PTR es:[edi]
  41e957:	out    0xe6,al
  41e959:	pop    edi
  41e95a:	addr16 mov ch,0x8c
  41e95d:	aad    0x91
  41e95f:	jmp    DWORD PTR [esi+0x14f33b46]
  41e965:	inc    ecx
  41e966:	iret   
  41e967:	mov    al,0x5a
  41e969:	ss in  eax,dx
  41e96b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e96c:	mov    ch,0x97
  41e96e:	sbb    DWORD PTR [ecx-0x7e962224],0x34c56a2
  41e978:	fstp   TBYTE PTR [esi-0x3f6f00b6]
  41e97e:	mov    ch,0xce
  41e980:	ja     0x41e966
  41e982:	or     bh,BYTE PTR [ecx-0x23]
  41e985:	rcl    bh,cl
  41e987:	mov    ecx,0x36221c35
  41e98c:	sub    eax,0x6b354f2d
  41e991:	and    eax,0xe2564870
  41e996:	xor    al,0xa2
  41e998:	fs daa 
  41e99a:	ds loop 0x41e952
  41e99d:	sbb    eax,0x2057d10a
  41e9a2:	retf   
  41e9a3:	sbb    eax,0xb2c0a80e
  41e9a8:	sbb    DWORD PTR [ebx+0x7b],ecx
  41e9ab:	mov    al,0x2b
  41e9ad:	ss cwde 
  41e9af:	ins    DWORD PTR es:[edi],dx
  41e9b0:	into   
  41e9b1:	mov    ebp,0x5aad87a
  41e9b6:	inc    edi
  41e9b7:	xor    al,0xcb
  41e9b9:	jg     0x41e997
  41e9bb:	or     ch,dh
  41e9bd:	xchg   ebx,eax
  41e9be:	jle    0x41e9f6
  41e9c0:	dec    edi
  41e9c1:	mov    bh,BYTE PTR [esi+0xdeaf159]
  41e9c7:	call   0x69ea734f
  41e9cc:	mov    al,BYTE PTR [ebx-0x4f]
  41e9cf:	sub    BYTE PTR [edx],0x6d
  41e9d2:	push   edx
  41e9d3:	dec    ebp
  41e9d4:	push   esp
  41e9d5:	mov    esp,0x31ab6d53
  41e9da:	adc    DWORD PTR [edi],0x537fb1d5
  41e9e0:	loop   0x41e9e6
  41e9e2:	sbb    DWORD PTR [edi-0x69e83c92],ecx
  41e9e8:	psubw  mm4,QWORD PTR [edx+0x30882023]
  41e9ef:	daa    
  41e9f0:	push   ss
  41e9f1:	mov    cl,0x76
  41e9f3:	pop    esp
  41e9f4:	lods   al,BYTE PTR ds:[esi]
  41e9f5:	imul   eax,DWORD PTR [esp+edi*8+0x24],0x79
  41e9fa:	in     al,0xa9
  41e9fc:	test   BYTE PTR [edx+0x518e9d92],bl
  41ea02:	loope  0x41e9bf
  41ea04:	sbb    DWORD PTR [ebx+0x19ab5108],edx
  41ea0a:	xchg   esi,eax
  41ea0b:	xor    edx,DWORD PTR [ebx+0x60]
  41ea0e:	fidiv  WORD PTR [ebx-0x67]
  41ea11:	cwde   
  41ea12:	cld    
  41ea13:	and    DWORD PTR [edi-0x4d935e0a],edi
  41ea19:	mov    dh,0xff
  41ea1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea1c:	(bad)
  41ea1f:	in     al,dx
  41ea20:	cld    
  41ea21:	mov    al,ds:0x3694d41a
  41ea26:	push   ds
  41ea27:	inc    edi
  41ea28:	xchg   ebx,eax
  41ea29:	jns    0x41e9fd
  41ea2b:	in     eax,dx
  41ea2c:	scas   al,BYTE PTR es:[edi]
  41ea2d:	ret    
  41ea2e:	in     eax,dx
  41ea2f:	mov    bl,0x3
  41ea31:	mov    ah,0x34
  41ea33:	cli    
  41ea34:	cmp    ebx,0xffffffb8
  41ea37:	sub    DWORD PTR [edi+0x79872571],esi
  41ea3d:	(bad)  
  41ea3e:	jmp    0x41ea14
  41ea40:	or     DWORD PTR [ebp+0x48],ecx
  41ea43:	or     eax,0x67d8b1bf
  41ea48:	or     DWORD PTR [eax],ecx
  41ea4a:	cli    
  41ea4b:	dec    edx
  41ea4c:	adc    eax,0x8abd45c6
  41ea51:	loop   0x41e9fc
  41ea53:	adc    BYTE PTR [ecx+esi*1-0x68bcba0a],0xe8
  41ea5b:	sub    ecx,DWORD PTR [eax-0x5d5adb2]
  41ea61:	inc    esp
  41ea62:	push   ecx
  41ea63:	mov    WORD PTR [ebx],fs
  41ea65:	pop    ecx
  41ea66:	mov    ecx,0xc08a4888
  41ea6b:	sbb    ah,0x98
  41ea6e:	sbb    eax,0x125ac2e6
  41ea73:	add    ebp,DWORD PTR [edx]
  41ea75:	xor    dl,BYTE PTR [ecx-0x2fe0a59b]
  41ea7b:	or     DWORD PTR [edi],0xdb2b9f7e
  41ea81:	sbb    DWORD PTR [esi-0x15],0x70386a4a
  41ea88:	push   edx
  41ea89:	and    DWORD PTR [ecx-0x6e],ecx
  41ea8c:	out    0x81,eax
  41ea8e:	jmp    0x41eaec
  41ea90:	lock and al,0xb1
  41ea93:	adc    ebp,DWORD PTR [edx+0x5899cc10]
  41ea99:	pop    es
  41ea9a:	jg     0x41ead8
  41ea9c:	and    al,0xd5
  41ea9e:	addr16 test eax,0xe85e17bf
  41eaa4:	outs   dx,BYTE PTR ds:[esi]
  41eaa5:	stos   DWORD PTR es:[edi],eax
  41eaa6:	loopne 0x41eac8
  41eaa8:	into   
  41eaa9:	mov    ch,BYTE PTR [edi+0xe]
  41eaac:	mov    edi,0x44c5557b
  41eab1:	xlat   BYTE PTR ds:[ebx]
  41eab2:	add    BYTE PTR [ecx],cl
  41eab4:	inc    eax
  41eab5:	push   ecx
  41eab6:	aas    
  41eab7:	mov    ds:0x900be6cb,eax
  41eabc:	xor    ch,BYTE PTR [edx-0x6f52c525]
  41eac2:	iret   
  41eac3:	push   esp
  41eac4:	sbb    bh,ch
  41eac6:	(bad)  
  41eac7:	int    0x35
  41eac9:	push   esi
  41eaca:	jp     0x41eb31
  41eacc:	bound  ebx,QWORD PTR [ebx-0x139d5dbd]
  41ead2:	pop    DWORD PTR [edi+ebp*8-0x48]
  41ead6:	jge    0x41eace
  41ead8:	adc    DWORD PTR [ebp+0x323deaf],0x3b
  41eadf:	fiadd  WORD PTR gs:[edx-0x7b]
  41eae3:	mul    DWORD PTR [eax]
  41eae5:	loope  0x41ead8
  41eae7:	mov    BYTE PTR [eax+ebx*1],0x1
  41eaeb:	sub    eax,0x59976b5f
  41eaf0:	(bad)  
  41eaf1:	mov    BYTE PTR [eax+0xe],ah
  41eaf4:	fucomp st(0)
  41eaf6:	mov    eax,ds:0x9ee9fa12
  41eafb:	retf   0x76f3
  41eafe:	out    0x8f,eax
  41eb00:	inc    edx
  41eb01:	ja     0x41eaa2
  41eb03:	dec    esp
  41eb04:	bound  ecx,QWORD PTR [eax-0x1700caf2]
  41eb0a:	adc    BYTE PTR [ebx],bh
  41eb0c:	aad    0x6c
  41eb0e:	jo     0x41eab6
  41eb10:	leave  
  41eb11:	lods   eax,DWORD PTR ds:[esi]
  41eb12:	test   DWORD PTR [esi-0x39ff4a8a],0x17dacd77
  41eb1c:	inc    edi
  41eb1d:	dec    edi
  41eb1e:	inc    esp
  41eb1f:	out    0x73,al
  41eb21:	pushf  
  41eb22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb23:	sub    DWORD PTR [edx+0xb],ebx
  41eb26:	mov    edi,0xe9da6066
  41eb2b:	shl    BYTE PTR [eax],1
  41eb2d:	push   esp
  41eb2e:	xchg   BYTE PTR [ebp+0x29c8299f],al
  41eb34:	pop    DWORD PTR ds:0xf4e541a0
  41eb3a:	add    edx,DWORD PTR [eax+ebp*4+0x32101300]
  41eb41:	scas   eax,DWORD PTR es:[edi]
  41eb42:	sub    DWORD PTR [eax-0x71ee036e],ecx
  41eb48:	mov    ds:0x30c6a113,eax
  41eb4d:	jge    0x41eb9c
  41eb4f:	sub    dl,BYTE PTR [edx-0x33]
  41eb52:	and    eax,0x8d3c023b
  41eb57:	jmp    0x2269:0x73e4f016
  41eb5e:	aad    0x4b
  41eb60:	in     eax,dx
  41eb61:	xlat   BYTE PTR ds:[ebx]
  41eb62:	cmp    ecx,DWORD PTR [edx-0x219a6dfe]
  41eb68:	dec    esi
  41eb69:	js     0x41ebb8
  41eb6b:	nop
  41eb6c:	mov    eax,edi
  41eb6e:	mov    esp,0x18111587
  41eb73:	sbb    DWORD PTR [ecx-0x5be59902],0xffffffe3
  41eb7a:	stc    
  41eb7b:	(bad)  
  41eb7d:	add    cl,al
  41eb7f:	adc    DWORD PTR [esi-0x5e],ebp
  41eb82:	pop    edx
  41eb83:	fimul  WORD PTR [ecx]
  41eb85:	sbb    bh,0x97
  41eb88:	stos   DWORD PTR es:[edi],eax
  41eb89:	sbb    edi,DWORD PTR [ecx+edi*8+0x3a]
  41eb8d:	push   esi
  41eb8e:	ficomp DWORD PTR [eax]
  41eb90:	ja     0x41ebf4
  41eb92:	push   0x16
  41eb94:	sbb    bh,BYTE PTR [ebx-0x18]
  41eb97:	pop    ebp
  41eb98:	cmc    
  41eb99:	mov    ebp,0x16bf515b
  41eb9e:	ss scas al,BYTE PTR es:[edi]
  41eba0:	sahf   
  41eba1:	xchg   edi,eax
  41eba2:	jns    0x41eb6a
  41eba4:	or     eax,eax
  41eba6:	pop    ebp
  41eba7:	leave  
  41eba8:	xchg   esi,eax
  41eba9:	sbb    al,0x8a
  41ebab:	add    ecx,esi
  41ebad:	push   0xc4471cca
  41ebb2:	std    
  41ebb3:	and    al,0xe3
  41ebb5:	pushf  
  41ebb6:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41ebb8:	data16 je 0x41ec17
  41ebbb:	inc    ecx
  41ebbc:	jmp    0x768ac534
  41ebc1:	fistp  DWORD PTR [edi+0x60]
  41ebc4:	sub    BYTE PTR [ecx],dh
  41ebc6:	lds    edi,FWORD PTR [edx]
  41ebc8:	xor    eax,0x2b2fc948
  41ebcd:	push   ebp
  41ebce:	sahf   
  41ebcf:	mov    DWORD PTR ds:0xaa0897c3,ecx
  41ebd5:	hlt    
  41ebd6:	mov    dh,BYTE PTR [edi]
  41ebd8:	ins    DWORD PTR es:[edi],dx
  41ebd9:	ret    0x6080
  41ebdc:	adc    cl,BYTE PTR [edx+eax*1+0x59d42002]
  41ebe3:	ins    DWORD PTR es:[edi],dx
  41ebe4:	mov    eax,0x10ebc097
  41ebe9:	sub    BYTE PTR [edx-0x29],0x79
  41ebed:	mov    ?,WORD PTR [esi+edi*2]
  41ebf0:	sbb    BYTE PTR [ebx],cl
  41ebf2:	jle    0x41ebc5
  41ebf4:	and    BYTE PTR [ebx+ebx*1-0x9],al
  41ebf8:	xchg   edi,eax
  41ebf9:	cmp    DWORD PTR [ebp+0x69],edi
  41ebfc:	ret    0x10b7
  41ebff:	dec    esi
  41ec00:	(bad)  
  41ec01:	cmp    eax,0xa91709af
  41ec06:	or     cl,BYTE PTR ds:[ecx+0x45061f18]
  41ec0d:	in     al,0xed
  41ec0f:	add    al,0x4
  41ec11:	jae    0x41ec56
  41ec13:	arpl   WORD PTR [ebx-0x79c5e540],di
  41ec19:	adc    al,0x16
  41ec1b:	mov    ecx,?
  41ec1d:	fst    DWORD PTR [ecx]
  41ec1f:	in     eax,0x67
  41ec21:	pop    edx
  41ec22:	not    BYTE PTR gs:[ebx+0x7800f92c]
  41ec29:	stos   BYTE PTR es:[edi],al
  41ec2a:	xor    al,0x73
  41ec2c:	scas   eax,DWORD PTR es:[edi]
  41ec2d:	dec    esp
  41ec2e:	adc    ah,bh
  41ec30:	mov    WORD PTR [ecx],?
  41ec32:	dec    ecx
  41ec33:	pop    ecx
  41ec34:	inc    eax
  41ec35:	stos   DWORD PTR es:[edi],eax
  41ec36:	cmp    eax,0xda1412b8
  41ec3b:	mov    edi,0x3d5981b9
  41ec40:	pop    eax
  41ec41:	jno    0x41ec8e
  41ec43:	outs   dx,BYTE PTR ds:[esi]
  41ec44:	(bad)  
  41ec45:	cmp    al,cl
  41ec47:	or     al,0x3a
  41ec49:	xchg   al,al
  41ec4b:	ins    BYTE PTR es:[edi],dx
  41ec4c:	aam    0x6d
  41ec4e:	lock pop esi
  41ec50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec51:	mov    bl,0x17
  41ec53:	int3   
  41ec54:	jle    0x41ecd1
  41ec56:	repz sbb al,0x6b
  41ec59:	idiv   BYTE PTR [edx-0x1bfe350e]
  41ec5f:	cmp    DWORD PTR [edi-0x46],0x64c94398
  41ec66:	cdq    
  41ec67:	test   DWORD PTR [eax+0x4e],esi
  41ec6a:	fnsave [eax]
  41ec6c:	leave  
  41ec6d:	push   cs
  41ec6e:	mov    ebp,0x88ec8e7
  41ec73:	mov    ebx,0x2c1520f5
  41ec78:	lods   al,BYTE PTR ds:[esi]
  41ec79:	lods   eax,DWORD PTR ds:[esi]
  41ec7a:	outs   dx,BYTE PTR ds:[esi]
  41ec7b:	and    ecx,eax
  41ec7d:	adc    DWORD PTR ds:0xb571589a,edi
  41ec83:	adc    BYTE PTR [ebx+0x19f32280],bh
  41ec89:	iret   
  41ec8a:	push   ebp
  41ec8b:	dec    esi
  41ec8c:	push   eax
  41ec8d:	ror    BYTE PTR [edi],0xc7
  41ec90:	in     al,0x56
  41ec92:	test   DWORD PTR [edx+0x33a530d6],edi
  41ec98:	(bad)  
  41ec99:	pop    esp
  41ec9a:	lock push ebp
  41ec9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec9e:	test   DWORD PTR [edi-0x7358b0e0],edx
  41eca4:	rol    BYTE PTR [ebx+0x710d95c4],0xf
  41ecab:	or     DWORD PTR [ecx],esp
  41ecad:	xchg   ecx,eax
  41ecae:	push   ecx
  41ecaf:	test   BYTE PTR [esi],0xea
  41ecb2:	push   ss
  41ecb3:	cmp    al,0xd1
  41ecb5:	fcomi  st,st(0)
  41ecb7:	lahf   
  41ecb8:	jmp    0xae96f6dd
  41ecbd:	pop    eax
  41ecbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecbf:	int    0xdf
  41ecc1:	stos   BYTE PTR es:[edi],al
  41ecc2:	cmp    dh,bl
  41ecc4:	mov    cl,0x46
  41ecc6:	sub    DWORD PTR [esi],esp
  41ecc8:	scas   eax,DWORD PTR es:[edi]
  41ecc9:	(bad)  
  41ecca:	call   DWORD PTR [ebp-0x1f11ece2]
  41ecd0:	cmp    al,0x5e
  41ecd2:	xchg   ebp,eax
  41ecd3:	inc    esi
  41ecd4:	mov    ah,0x36
  41ecd6:	std    
  41ecd7:	xor    bl,BYTE PTR [ecx-0x5d]
  41ecda:	sub    eax,0x504e0fd2
  41ecdf:	jl     0x41ec93
  41ece1:	in     eax,dx
  41ece2:	mov    eax,ds:0xb1c3c757
  41ece7:	(bad)  
  41ece8:	or     al,0x6e
  41ecea:	jmp    0x494a724b
  41ecef:	ds nop
  41ecf1:	nop
  41ecf2:	shr    DWORD PTR [edi],0xbe
  41ecf5:	popa   
  41ecf6:	sbb    ecx,0xffffff9f
  41ecf9:	retf   0x4eb9
  41ecfc:	mov    al,0x1f
  41ecfe:	push   edi
  41ecff:	fisubr WORD PTR [ecx]
  41ed01:	dec    ecx
  41ed02:	test   al,0x99
  41ed04:	pop    edi
  41ed05:	mov    eax,0x588d58c8
  41ed0a:	cli    
  41ed0b:	cmp    ch,0x34
  41ed0e:	shl    DWORD PTR [esp+eax*2+0x48],cl
  41ed12:	aas    
  41ed13:	rol    BYTE PTR [edx],0xef
  41ed16:	jmp    0x3607:0x4a4cf65a
  41ed1d:	jle    0x41ecae
  41ed1f:	sbb    DWORD PTR [esi+eax*2+0x5b34c097],ecx
  41ed26:	jecxz  0x41ecdc
  41ed28:	mov    edi,0x8515ae06
  41ed2d:	xor    eax,0xd732d52e
  41ed32:	js     0x41ed54
  41ed34:	mov    edx,0x450fe651
  41ed39:	loop   0x41ed22
  41ed3b:	sti    
  41ed3c:	je     0x41ed17
  41ed3e:	lods   eax,DWORD PTR ds:[esi]
  41ed3f:	mov    esp,0x3b6c27fa
  41ed44:	nop
  41ed45:	ja     0x41edc5
  41ed47:	stos   DWORD PTR es:[edi],eax
  41ed48:	sub    bl,BYTE PTR [edi+0x1208dafc]
  41ed4e:	pop    es
  41ed4f:	sub    eax,0x4ab87912
  41ed54:	popf   
  41ed55:	imul   eax,DWORD PTR [ebp-0x72203d6f],0x5b
  41ed5c:	dec    edx
  41ed5d:	dec    esp
  41ed5e:	adc    eax,0xee7845cc
  41ed63:	sbb    DWORD PTR [eax-0x2b],ebp
  41ed66:	sub    eax,0x8e02c1e
  41ed6b:	dec    edx
  41ed6c:	add    ch,BYTE PTR es:[eax+0x1f]
  41ed70:	push   0xffffff94
  41ed72:	inc    eax
  41ed73:	xchg   ecx,eax
  41ed74:	mov    edi,0x2e2fbd0c
  41ed79:	sub    al,0xd3
  41ed7b:	add    BYTE PTR [ecx+edx*2+0x43b9c229],bh
  41ed82:	jae    0x41edb2
  41ed84:	adc    BYTE PTR [edx-0x48],0x70
  41ed88:	xor    BYTE PTR [esi-0x7d],ch
  41ed8b:	cs dec esi
  41ed8d:	ficom  WORD PTR [edi+0x73]
  41ed90:	pop    edi
  41ed91:	jae    0x41edeb
  41ed93:	pop    ds
  41ed94:	dec    ecx
  41ed95:	add    al,0xf6
  41ed97:	retf   
  41ed98:	dec    esp
  41ed99:	jp     0x41edc8
  41ed9b:	loop   0x41edc4
  41ed9d:	xchg   DWORD PTR [ebx-0x11074087],ebx
  41eda3:	xchg   edx,eax
  41eda4:	dec    esi
  41eda5:	cmp    dl,ch
  41eda7:	sar    BYTE PTR [esi],0x42
  41edaa:	int3   
  41edab:	or     ch,ah
  41edad:	inc    esp
  41edae:	sbb    al,0x58
  41edb0:	jnp    0x41edbe
  41edb2:	neg    BYTE PTR [esp+ecx*4]
  41edb5:	and    DWORD PTR [esi+0x6b],ebp
  41edb8:	jp     0x41edd0
  41edba:	sysexit 
  41edbc:	xor    ch,BYTE PTR [esi-0x4c]
  41edbf:	loope  0x41ee15
  41edc1:	jmp    0xc160:0x9c2a953d
  41edc8:	aaa    
  41edc9:	ss pop edx
  41edcb:	xchg   ecx,eax
  41edcc:	add    BYTE PTR [ebx-0x62243ef6],al
  41edd2:	lahf   
  41edd3:	loope  0x41ee0f
  41edd5:	jne    0x41ede1
  41edd7:	icebp  
  41edd8:	push   0x861371cb
  41eddd:	push   0x5e6942ec
  41ede2:	repz sub ebx,DWORD PTR [ebp+0x52]
  41ede6:	stos   DWORD PTR es:[edi],eax
  41ede7:	out    0x62,eax
  41ede9:	dec    esp
  41edea:	pushf  
  41edeb:	or     ebx,ebx
  41eded:	sbb    al,0xcd
  41edef:	lahf   
  41edf0:	in     al,dx
  41edf1:	pop    esp
  41edf2:	adc    BYTE PTR [edx+0x8],ah
  41edf5:	(bad)  
  41edf6:	std    
  41edf7:	(bad)  
  41edf8:	sbb    al,0xe9
  41edfa:	dec    esi
  41edfb:	outs   dx,DWORD PTR ds:[esi]
  41edfc:	push   ebp
  41edfd:	test   BYTE PTR [eax*4+0x68980310],ch
  41ee04:	push   edi
  41ee05:	sub    eax,0xa6c0b25e
  41ee0a:	jmp    0x84b5:0xf7d9b974
  41ee11:	repnz sti 
  41ee13:	adc    al,0x69
  41ee15:	cmp    DWORD PTR [ebx-0x6d403a84],0x190203ac
  41ee1f:	sbb    DWORD PTR [edi],esi
  41ee21:	rcr    BYTE PTR [eax+0x7a],cl
  41ee24:	mov    ds:0xf8031e5f,eax
  41ee29:	push   edx
  41ee2a:	aad    0x46
  41ee2c:	stos   DWORD PTR es:[edi],eax
  41ee2d:	das    
  41ee2e:	sub    dl,ch
  41ee30:	int3   
  41ee31:	pusha  
  41ee32:	cs (bad) 
  41ee34:	jb     0x41ee3b
  41ee36:	xchg   ebp,eax
  41ee37:	in     eax,dx
  41ee38:	sbb    ah,BYTE PTR [edi+0x1d]
  41ee3b:	xor    DWORD PTR [eax-0x76],0xfb43ada3
  41ee42:	arpl   WORD PTR ds:0x4d37101f,bx
  41ee48:	not    BYTE PTR [esi+0x57]
  41ee4b:	loopne 0x41eec9
  41ee4d:	ins    BYTE PTR es:[edi],dx
  41ee4e:	or     ah,ah
  41ee50:	push   es
  41ee51:	mov    ecx,0x774d6b80
  41ee56:	outs   dx,DWORD PTR ds:[esi]
  41ee57:	repnz das 
  41ee59:	push   es
  41ee5a:	push   0x2640fb09
  41ee5f:	aad    0x90
  41ee61:	or     edi,esi
  41ee63:	in     al,dx
  41ee64:	xor    al,0xc6
  41ee66:	sbb    al,0xca
  41ee68:	mov    ds:0x88a15a1a,eax
  41ee6d:	sub    DWORD PTR [ebx-0x38],esi
  41ee70:	fstp   st(2)
  41ee72:	sbb    DWORD PTR [edx+edi*1],0x3dcd44d4
  41ee79:	xor    esp,ecx
  41ee7b:	push   ebp
  41ee7c:	dec    ecx
  41ee7d:	cmp    al,0xff
  41ee7f:	mov    gs,WORD PTR [edi+eiz*1-0x8005827]
  41ee86:	mov    ebx,DWORD PTR [eax-0x56dea2a4]
  41ee8c:	(bad)  
  41ee8e:	sub    edi,0x26
  41ee91:	inc    ebp
  41ee92:	mov    dh,0x4a
  41ee94:	or     ah,BYTE PTR [ebp-0x34]
  41ee97:	mov    dl,0x5b
  41ee99:	scas   al,BYTE PTR es:[edi]
  41ee9a:	xchg   ecx,eax
  41ee9b:	or     bh,BYTE PTR [edx+0x26be5c7f]
  41eea1:	imul   edx,edx,0x9abfcad8
  41eea7:	das    
  41eea8:	jae    0x41ee9e
  41eeaa:	pushf  
  41eeab:	test   DWORD PTR [ebx-0x33],0xc8c0eee9
  41eeb2:	lods   al,BYTE PTR ds:[esi]
  41eeb3:	xor    eax,0xc5272fa7
  41eeb8:	stc    
  41eeb9:	or     eax,0xb4ec0535
  41eebe:	dec    esi
  41eebf:	je     0x41ef40
  41eec1:	or     dh,bl
  41eec3:	dec    esi
  41eec4:	pop    es
  41eec5:	mov    bh,0x7b
  41eec7:	xor    esi,DWORD PTR [edx-0x3b]
  41eeca:	std    
  41eecb:	cmp    eax,0x618c011e
  41eed0:	adc    eax,0xf9d64f5d
  41eed5:	push   0xa691a755
  41eeda:	add    al,0xf0
  41eedc:	(bad)  
  41eedd:	ja     0x41ef47
  41eedf:	or     eax,0x507f026a
  41eee4:	arpl   WORD PTR [ecx],di
  41eee6:	idiv   ecx
  41eee8:	sar    DWORD PTR [eax+0x3656a863],1
  41eeee:	adc    eax,0xbee33d82
  41eef3:	pop    es
  41eef4:	pop    esi
  41eef5:	or     edi,ecx
  41eef7:	cmp    dl,0x6e
  41eefa:	xchg   ecx,eax
  41eefb:	push   cs
  41eefc:	mov    bl,0x7e
  41eefe:	mov    dh,0x91
  41ef00:	dec    edi
  41ef01:	push   edi
  41ef02:	mov    al,ds:0xf6b67424
  41ef07:	in     al,dx
  41ef08:	mov    eax,0xd8c35153
  41ef0d:	inc    edx
  41ef0e:	mov    ds:0xa8b40789,al
  41ef13:	rcl    BYTE PTR [ebx],0xc9
  41ef16:	icebp  
  41ef17:	ret    0xb162
  41ef1a:	dec    edi
  41ef1b:	cld    
  41ef1c:	out    0x9f,eax
  41ef1e:	xlat   BYTE PTR ds:[ebx]
  41ef1f:	cs fsubr st,st(7)
  41ef22:	or     bh,BYTE PTR [ebp+esi*1+0x5966644f]
  41ef29:	imul   edi,DWORD PTR [eax+0x5d],0xffffffa8
  41ef2d:	jmp    0xe4e4:0xe92dc747
  41ef34:	fnstsw WORD PTR [eax]
  41ef36:	and    DWORD PTR [edi-0x53],ebp
  41ef39:	(bad)  
  41ef3a:	mov    ecx,0xd888ced3
  41ef3f:	jle    0x41eedc
  41ef41:	or     DWORD PTR [ebx-0x78],edx
  41ef44:	(bad)  [edi-0x6c]
  41ef47:	mov    esp,0xf05d6058
  41ef4c:	push   edx
  41ef4d:	test   eax,0x396ea66d
  41ef52:	cmp    BYTE PTR [ebp+0x42821a0e],ah
  41ef58:	mov    esp,0x34c59bb9
  41ef5d:	pop    ebx
  41ef5e:	mov    ds:0xe6f19f89,eax
  41ef63:	push   dx
  41ef65:	push   ss
  41ef66:	ja     0x41efca
  41ef68:	in     eax,0xad
  41ef6a:	outs   dx,BYTE PTR ds:[esi]
  41ef6b:	mov    al,0x6d
  41ef6d:	push   cs
  41ef6e:	lock mov ebp,0x41711dfa
  41ef74:	or     eax,0xcda48aa4
  41ef79:	das    
  41ef7a:	arpl   WORD PTR es:[ebx-0x79e8f2c8],bp
  41ef81:	xlat   BYTE PTR ds:[ebx]
  41ef82:	push   0x989af8f5
  41ef87:	sub    al,ch
  41ef89:	les    ecx,FWORD PTR [ebx]
  41ef8b:	sub    DWORD PTR [esi],eax
  41ef8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef8e:	inc    ecx
  41ef8f:	stc    
  41ef90:	outs   dx,DWORD PTR ds:[esi]
  41ef91:	mov    ds:0x90a34a78,al
  41ef96:	jb     0x41ef40
  41ef98:	push   edi
  41ef99:	lahf   
  41ef9a:	jmp    0x1ef9:0x3418a2ad
  41efa1:	mov    BYTE PTR [ecx],0x69
  41efa4:	lea    edi,[edi]
  41efa6:	out    0xc8,eax
  41efa8:	pusha  
  41efa9:	test   BYTE PTR [edx],0xca
  41efac:	shl    DWORD PTR [edi-0x61],0x28
  41efb0:	stos   DWORD PTR es:[edi],eax
  41efb1:	add    al,0x90
  41efb3:	clc    
  41efb4:	mov    al,0xa9
  41efb6:	int3   
  41efb7:	pop    eax
  41efb8:	cmc    
  41efb9:	adc    dl,bh
  41efbb:	cmp    DWORD PTR [ecx],ecx
  41efbd:	mov    WORD PTR [ebx+eax*2+0x1f857e6d],?
  41efc4:	cs pop edi
  41efc6:	push   cs
  41efc7:	das    
  41efc8:	loopne 0x41efc0
  41efca:	aas    
  41efcb:	mov    al,0xaf
  41efcd:	rol    dl,0x29
  41efd0:	mov    esp,0x3ebfabea
  41efd5:	mov    edx,0x8b3f8e0c
  41efda:	sub    ch,al
  41efdc:	out    0x40,eax
  41efde:	jne    0x41f015
  41efe0:	and    eax,0xa2e8d1f2
  41efe5:	fnstenv [eax-0x1a5b9df]
  41efeb:	mov    dl,0xa5
  41efed:	sub    BYTE PTR [esp+ebx*4-0x6c3b62d8],ah
  41eff4:	popa   
  41eff5:	xor    al,al
  41eff7:	loopne 0x41f00b
  41eff9:	or     eax,DWORD PTR [edi+ebp*8+0x14]
  41effd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41effe:	or     al,0x78
  41f000:	inc    edi
  41f001:	xchg   esp,eax
  41f002:	(bad)  
  41f003:	adc    al,0x81
  41f005:	push   ebx
  41f006:	cdq    
  41f007:	ds pusha 
  41f009:	add    ebp,DWORD PTR [ecx+ebx*2]
  41f00c:	or     DWORD PTR [ecx],edx
  41f00e:	std    
  41f00f:	push   ebp
  41f010:	cdq    
  41f011:	xor    ax,0xc020
  41f015:	cmc    
  41f016:	(bad)  
  41f017:	adc    eax,0x8a443d67
  41f01c:	sbb    al,0x97
  41f01e:	loop   0x41eff3
  41f020:	dec    esp
  41f021:	xor    al,0x84
  41f023:	adc    dx,di
  41f026:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f027:	rcr    DWORD PTR [esi+ebp*8-0x1d95c755],1
  41f02e:	test   eax,0x48a2375f
  41f033:	nop
  41f034:	jge    0x41eff8
  41f036:	popfw  
  41f038:	fs lock sub eax,0xc7b2f959
  41f03f:	mov    edi,esp
  41f041:	mov    dh,0xc1
  41f043:	adc    DWORD PTR [ecx+0x2a],esi
  41f046:	pop    ss
  41f047:	adc    ah,BYTE PTR [ecx]
  41f049:	xchg   BYTE PTR [edx+0x6c2db5e5],dl
  41f04f:	or     eax,0x9517bf25
  41f054:	ret    
  41f055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f056:	sbb    ebp,DWORD PTR [edi]
  41f058:	adc    edx,0xffffff81
  41f05b:	pop    ebx
  41f05c:	xchg   edx,eax
  41f05d:	jnp    0x41f0b7
  41f05f:	imul   ecx,DWORD PTR [ecx],0x2
  41f062:	jle    0x41f000
  41f064:	fld    DWORD PTR [ebp-0x24fb828c]
  41f06a:	dec    eax
  41f06b:	cmc    
  41f06c:	js     0x41f049
  41f06e:	sbb    esi,ebx
  41f070:	add    al,0xdf
  41f072:	dec    eax
  41f073:	add    eax,0xe9500757
  41f078:	sbb    cl,BYTE PTR [ebx-0x4d1448c7]
  41f07e:	lods   al,BYTE PTR ds:[esi]
  41f07f:	jae    0x41f078
  41f081:	jbe    0x41f074
  41f083:	xor    BYTE PTR [esi+0xc],ah
  41f086:	sub    eax,0xbd1857dd
  41f08b:	mov    WORD PTR [ecx+ecx*2+0x560b0465],?
  41f092:	xchg   ebx,eax
  41f093:	rol    DWORD PTR [edi+ecx*2+0x5cc7898f],1
  41f09a:	rcr    edx,1
  41f09c:	jae    0x41f06b
  41f09e:	aaa    
  41f09f:	push   0xffffffac
  41f0a1:	mov    dl,0x36
  41f0a3:	and    DWORD PTR [eax-0x132a6a49],ecx
  41f0a9:	inc    ebp
  41f0aa:	out    0xbd,eax
  41f0ac:	call   0x9edbc7db
  41f0b1:	or     al,0xad
  41f0b3:	sti    
  41f0b4:	add    edi,esi
  41f0b6:	inc    edx
  41f0b7:	sub    BYTE PTR [edi-0x31],ah
  41f0ba:	sti    
  41f0bb:	adc    DWORD PTR [edi],edx
  41f0bd:	jmp    DWORD PTR [ebp+0x4a25429c]
  41f0c3:	(bad)  
  41f0c4:	xor    dh,ch
  41f0c6:	push   eax
  41f0c7:	mov    ds:0xfbb08221,eax
  41f0cc:	outs   dx,DWORD PTR ds:[esi]
  41f0cd:	into   
  41f0ce:	xchg   ebp,eax
  41f0cf:	sub    eax,DWORD PTR [ebx+0x6870104c]
  41f0d5:	call   0x189b950c
  41f0da:	and    ah,cl
  41f0dc:	fisubr WORD PTR [ebp+eiz*8-0x16]
  41f0e0:	dec    ebx
  41f0e1:	gs div ecx
  41f0e4:	jne    0x41f0b7
  41f0e6:	pop    edi
  41f0e7:	fisub  DWORD PTR [ebp-0x53]
  41f0ea:	fcomp  QWORD PTR ds:0x5c920f93
  41f0f0:	cld    
  41f0f1:	sub    ebx,DWORD PTR [ecx-0x59]
  41f0f4:	daa    
  41f0f5:	test   ah,0xf9
  41f0f8:	push   ax
  41f0fa:	ficomp WORD PTR fs:[esp+ebx*4+0x15]
  41f0ff:	pop    ebp
  41f100:	sub    DWORD PTR [edi+0x1b],edi
  41f103:	mov    BYTE PTR [eax-0x652497b6],ch
  41f109:	cmc    
  41f10a:	xor    eax,0xad73bde4
  41f10f:	fdivr  QWORD PTR [edx]
  41f111:	mov    cl,0x9
  41f113:	leave  
  41f114:	add    cl,ch
  41f116:	add    BYTE PTR [esi+0x559ff280],bh
  41f11c:	icebp  
  41f11d:	leave  
  41f11e:	ins    BYTE PTR es:[edi],dx
  41f11f:	rol    DWORD PTR [eax-0x24],cl
  41f122:	jg     0x41f159
  41f124:	aaa    
  41f125:	pop    ss
  41f126:	sbb    esp,ebp
  41f128:	mov    ds:0x4c1474df,eax
  41f12d:	int3   
  41f12e:	(bad)  
  41f12f:	into   
  41f130:	xchg   ebx,eax
  41f131:	xchg   ebp,eax
  41f132:	and    eax,0x6ddbc6fe
  41f137:	adc    BYTE PTR [eax-0x64f9a40c],ah
  41f13d:	adc    al,BYTE PTR [edi+ebx*1]
  41f140:	outs   dx,DWORD PTR ds:[esi]
  41f141:	mov    ch,0x3d
  41f143:	mov    ebx,0xc908af78
  41f148:	(bad)  
  41f149:	retw   0x10c1
  41f14d:	xchg   BYTE PTR [esp+eax*2-0x463477ad],al
  41f154:	xor    BYTE PTR [edi],ch
  41f156:	or     DWORD PTR [edx+ecx*1+0x5d9eed07],ebx
  41f15d:	push   es
  41f15e:	mov    esp,0xd359a52b
  41f163:	pop    ds
  41f164:	out    0x0,al
  41f166:	and    BYTE PTR [ebx+0x77],0x38
  41f16a:	push   ebp
  41f16b:	dec    ebp
  41f16c:	adc    DWORD PTR ds:0xce4f83bb,ebx
  41f172:	mov    dh,0x5d
  41f174:	pop    edi
  41f175:	cwde   
  41f176:	jo     0x41f10a
  41f178:	xchg   ebx,eax
  41f179:	inc    esi
  41f17a:	or     ebp,DWORD PTR [ebp-0x2bfc194a]
  41f180:	dec    edi
  41f181:	fnstenv [esi+0x48]
  41f184:	and    al,0x5f
  41f186:	push   edi
  41f187:	std    
  41f188:	inc    ebp
  41f189:	pop    es
  41f18a:	mov    ch,0xb9
  41f18c:	mul    BYTE PTR [esi]
  41f18e:	mov    esp,0xd0476fcb
  41f193:	fsubr  st,st(7)
  41f195:	ins    BYTE PTR es:[edi],dx
  41f196:	xchg   esi,eax
  41f197:	jl     0x41f1cc
  41f199:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f19a:	pushf  
  41f19b:	cmp    ebx,DWORD PTR [edx-0x72]
  41f19e:	push   cs
  41f19f:	bound  ebx,QWORD PTR [ecx]
  41f1a1:	in     eax,dx
  41f1a2:	sub    al,0x34
  41f1a4:	test   DWORD PTR [esi+0x6f416571],edi
  41f1aa:	sahf   
  41f1ab:	(bad)  
  41f1ac:	mov    al,0x90
  41f1ae:	add    ecx,DWORD PTR [edi+esi*4-0x33]
  41f1b2:	(bad)  
  41f1b4:	icebp  
  41f1b5:	jl     0x41f1fa
  41f1b7:	fstp   DWORD PTR [ebx+0x65]
  41f1ba:	and    ebp,DWORD PTR [esi+0x25cb776c]
  41f1c0:	xchg   edi,eax
  41f1c1:	push   edi
  41f1c2:	mov    ecx,0x3ae09417
  41f1c7:	in     al,0x6f
  41f1c9:	std    
  41f1ca:	sub    ch,BYTE PTR [edi-0x5a61dba4]
  41f1d0:	retf   
  41f1d1:	shl    DWORD PTR [edi-0x6a],1
  41f1d4:	pop    ds
  41f1d5:	push   0xffffffea
  41f1d7:	loope  0x41f172
  41f1d9:	push   cs
  41f1da:	std    
  41f1db:	sbb    eax,0x27b36c2d
  41f1e0:	sub    eax,0x110fdc88
  41f1e5:	nop
  41f1e6:	enter  0x4fd7,0x45
  41f1ea:	and    ah,bl
  41f1ec:	sbb    BYTE PTR ds:0xca2d8d7e,0xa1
  41f1f3:	leave  
  41f1f4:	and    DWORD PTR [eax-0x7a],ebx
  41f1f7:	add    eax,0xde96c226
  41f1fc:	xchg   dh,cl
  41f1fe:	push   eax
  41f1ff:	das    
  41f200:	jp     0x41f274
  41f202:	pop    ds
  41f203:	sbb    al,0xc2
  41f205:	(bad)  
  41f206:	fsub   QWORD PTR [ecx+0x55]
  41f209:	shr    ebx,1
  41f20b:	mov    al,0x5
  41f20d:	xor    dh,BYTE PTR [esi]
  41f20f:	std    
  41f210:	sahf   
  41f211:	mov    ebx,0x3fc7a826
  41f216:	popa   
  41f217:	sub    eax,0xa373d5b1
  41f21c:	sbb    al,0x9c
  41f21e:	and    bh,ah
  41f220:	push   0xffffff8e
  41f222:	jno    0x41f209
  41f224:	inc    edi
  41f225:	or     eax,0xa7df3522
  41f22a:	stc    
  41f22b:	pop    edi
  41f22c:	adc    bl,BYTE PTR [ebp+0x4b98a442]
  41f232:	test   DWORD PTR es:[ebp-0x4d5aeffa],esp
  41f239:	idiv   dh
  41f23b:	xlat   BYTE PTR ds:[ebx]
  41f23c:	sub    dh,BYTE PTR [ebx+0x8d03634]
  41f242:	rcl    dh,1
  41f244:	add    bh,BYTE PTR [ecx+0x813819b]
  41f24a:	mov    ch,0xc8
  41f24c:	arpl   WORD PTR [eax-0x43],ax
  41f24f:	mov    esp,eax
  41f251:	(bad)  
  41f252:	xor    ah,BYTE PTR [esi+0x2d879466]
  41f258:	pop    ecx
  41f259:	and    esi,ecx
  41f25b:	leave  
  41f25c:	js     0x41f2a9
  41f25e:	cmp    DWORD PTR [ebp-0x60127aa5],eax
  41f264:	mov    esi,0xc2ac4c62
  41f269:	mov    WORD PTR [eax+0xf2f5738],?
  41f26f:	pop    esp
  41f270:	cmc    
  41f271:	add    esp,DWORD PTR [esp+edx*4+0x7b]
  41f275:	pop    edx
  41f276:	push   edi
  41f277:	aam    0x44
  41f279:	mov    DWORD PTR [edx],0xcb15f206
  41f27f:	xchg   BYTE PTR [ebx],bh
  41f281:	in     eax,dx
  41f282:	mov    edi,DWORD PTR [ebx]
  41f284:	adc    BYTE PTR [ecx+0x5642da97],dl
  41f28a:	inc    esp
  41f28b:	jl     0x41f2e3
  41f28d:	add    DWORD PTR [eax+0x2d],ecx
  41f290:	pop    eax
  41f291:	aam    0x8c
  41f293:	(bad)
  41f296:	ret    0xa75
  41f299:	jecxz  0x41f256
  41f29b:	cmp    bl,BYTE PTR [eax+0x50dc5094]
  41f2a1:	ds gs xor eax,0x5b951aff
  41f2a8:	mov    al,BYTE PTR [eax]
  41f2aa:	pop    ss
  41f2ab:	sbb    BYTE PTR [esp-0x39],dl
  41f2af:	pop    edx
  41f2b0:	call   0x6ac80eb2
  41f2b5:	xchg   ebp,eax
  41f2b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2b7:	lahf   
  41f2b8:	jl     0x41f24e
  41f2ba:	addr16 xchg bh,cl
  41f2bd:	and    DWORD PTR [ecx+0x46b33d97],esi
  41f2c3:	xchg   BYTE PTR [eax],bh
  41f2c5:	out    dx,al
  41f2c6:	lahf   
  41f2c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2c8:	xor    al,0xb9
  41f2ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2cb:	xor    al,BYTE PTR [eax]
  41f2cd:	sbb    eax,esp
  41f2cf:	in     eax,dx
  41f2d0:	ja     0x41f313
  41f2d2:	outs   dx,BYTE PTR ds:[esi]
  41f2d3:	dec    ecx
  41f2d4:	xor    DWORD PTR [eax],ecx
  41f2d6:	stc    
  41f2d7:	test   eax,0xd8be760d
  41f2dc:	loop   0x41f2dc
  41f2de:	and    DWORD PTR [ebx+0x27],esp
  41f2e1:	out    0x92,al
  41f2e3:	rol    BYTE PTR [ebp-0x2657c7ab],0xc5
  41f2ea:	dec    edi
  41f2eb:	imul   eax,DWORD PTR [eax+0x60],0x761f6210
  41f2f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2f3:	pop    esi
  41f2f4:	mov    al,ds:0x67569af7
  41f2f9:	cmp    eax,0x42740056
  41f2fe:	xchg   esi,eax
  41f2ff:	dec    ebx
  41f300:	test   BYTE PTR [esi-0x75],0x4f
  41f304:	mov    dl,cl
  41f306:	sbb    eax,0x6a794415
  41f30b:	pop    ecx
  41f30c:	call   0x82bc11cb
  41f311:	(bad)  
  41f312:	or     esp,DWORD PTR [esi+0x40]
  41f315:	mov    al,ds:0x58230d70
  41f31a:	cmc    
  41f31b:	and    edx,DWORD PTR [ebp-0x22b86282]
  41f321:	dec    edi
  41f322:	dec    eax
  41f323:	jge    0x41f350
  41f325:	sti    
  41f326:	imul   edx,ecx,0xd1d82f57
  41f32c:	repnz stos DWORD PTR es:[edi],eax
  41f32e:	hlt    
  41f32f:	mov    edi,0x5f24b6db
  41f334:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f336:	mov    ebx,0x2ac52945
  41f33b:	pop    ebp
  41f33c:	out    dx,eax
  41f33d:	fwait
  41f33e:	rcr    BYTE PTR ds:0x143663a3,1
  41f344:	mov    ecx,ss
  41f346:	jg     0x41f2f1
  41f348:	in     eax,dx
  41f349:	ins    DWORD PTR es:[edi],dx
  41f34a:	mov    ebx,0x920b8e0d
  41f34f:	sti    
  41f350:	sbb    al,0xed
  41f352:	cld    
  41f353:	pop    ebx
  41f354:	loop   0x41f3b8
  41f356:	jb     0x63d4bed8
  41f35c:	shl    DWORD PTR [esi-0x33406df2],1
  41f362:	pop    edx
  41f363:	xlat   BYTE PTR ds:[ebx]
  41f364:	adc    esp,DWORD PTR [ebp-0x5f556a70]
  41f36a:	sbb    DWORD PTR ds:0xde65fffc,ecx
  41f370:	cmp    DWORD PTR [ebp-0x46],ebp
  41f373:	cld    
  41f374:	add    eax,0xbed483b7
  41f379:	sbb    ah,BYTE PTR [edi+0x75]
  41f37c:	out    dx,eax
  41f37d:	pop    edi
  41f37e:	add    DWORD PTR [edi-0x7],esi
  41f381:	cld    
  41f382:	bound  eax,QWORD PTR ds:0x7e7dd334
  41f388:	jnp    0x41f364
  41f38a:	(bad)  
  41f38b:	out    0xb7,al
  41f38d:	xchg   edx,eax
  41f38e:	jns    0x41f329
  41f390:	cmp    ebx,DWORD PTR [ecx-0x6]
  41f393:	cmp    esi,ebp
  41f395:	cli    
  41f396:	in     eax,0xa3
  41f398:	sub    BYTE PTR [ebx-0xb856eab],dh
  41f39e:	aad    0x81
  41f3a0:	or     BYTE PTR [ebp+0x3b],dl
  41f3a3:	sahf   
  41f3a4:	call   0xa8d2:0xbd67875b
  41f3ab:	xchg   ebx,eax
  41f3ac:	lds    ecx,FWORD PTR [eax+0x52]
  41f3af:	hlt    
  41f3b0:	retf   0x5ecf
  41f3b3:	jns    0x41f427
  41f3b5:	dec    ebx
  41f3b6:	leave  
  41f3b7:	xchg   ecx,eax
  41f3b8:	xor    esp,edx
  41f3ba:	(bad)  
  41f3bc:	inc    edx
  41f3bd:	push   ecx
  41f3be:	call   0x4c18:0x5a73c7a8
  41f3c5:	addr16 (bad) 
  41f3c8:	dec    eax
  41f3c9:	lds    esi,FWORD PTR [ecx+0x47]
  41f3cc:	arpl   WORD PTR [edi-0x77],bp
  41f3cf:	xor    eax,0x9e5ccf5
  41f3d4:	gs pusha 
  41f3d6:	jo     0x41f3d1
  41f3d8:	mov    ebx,DWORD PTR [edi]
  41f3da:	or     BYTE PTR [ebx],ah
  41f3dc:	aas    
  41f3dd:	adc    al,0x2f
  41f3df:	pop    esi
  41f3e0:	and    esi,DWORD PTR [eax-0x27681bbf]
  41f3e6:	xor    ah,BYTE PTR [ebx+0x5195bb08]
  41f3ec:	xchg   ecx,eax
  41f3ed:	add    DWORD PTR [edi],edi
  41f3ef:	aaa    
  41f3f0:	fs gs shl edi,1
  41f3f4:	pusha  
  41f3f5:	sbb    ebx,DWORD PTR [ebp-0x5cf3a468]
  41f3fb:	sbb    bh,BYTE PTR [edx+0x53795ed5]
  41f401:	adc    eax,0xd20d7d33
  41f406:	jne    0x41f3c9
  41f408:	rcr    BYTE PTR [ecx],cl
  41f40a:	(bad)  [edi-0x35]
  41f40d:	repnz cmp eax,0x17b0e26f
  41f413:	mov    ds,WORD PTR [edx-0x697e7f5a]
  41f419:	cmc    
  41f41a:	es pusha 
  41f41c:	pop    edx
  41f41d:	ret    0xda3
  41f420:	idiv   BYTE PTR ds:0x15abc5f2
  41f426:	dec    esp
  41f427:	push   edx
  41f428:	dec    ecx
  41f429:	mov    bh,0x99
  41f42b:	call   0x9fad5599
  41f430:	fsub   DWORD PTR [esp+edx*4-0x69]
  41f434:	popa   
  41f435:	fsubr  DWORD PTR [esi]
  41f437:	into   
  41f438:	sub    BYTE PTR [ebx+0x14],dh
  41f43b:	dec    ecx
  41f43c:	jo     0x41f4aa
  41f43e:	pop    ecx
  41f43f:	leave  
  41f440:	push   ebp
  41f441:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f442:	int    0x30
  41f444:	loope  0x41f3ee
  41f446:	jb     0x41f437
  41f448:	mov    BYTE PTR [ebx-0x38],cl
  41f44b:	gs pop esi
  41f44d:	bound  eax,QWORD PTR [ebp+0x7aac94d]
  41f453:	inc    ebp
  41f454:	out    dx,eax
  41f455:	jns    0x41f4aa
  41f457:	ss cld 
  41f459:	xor    eax,0x12b306cf
  41f45e:	push   es
  41f45f:	pop    es
  41f460:	xchg   DWORD PTR [ecx+eax*8],esi
  41f463:	jae    0x41f48e
  41f465:	and    DWORD PTR [edx-0x6d9917bd],ecx
  41f46b:	or     edx,DWORD PTR [esi]
  41f46d:	or     ch,al
  41f46f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f470:	icebp  
  41f471:	or     BYTE PTR [edi-0x2215517a],ch
  41f477:	aas    
  41f478:	mov    ds:0x435e80ff,al
  41f47d:	pop    esi
  41f47e:	fs std 
  41f480:	dec    edi
  41f481:	xlat   BYTE PTR ds:[ebx]
  41f482:	call   0xd7a6e1f
  41f487:	inc    esi
  41f488:	jo     0x41f4fb
  41f48a:	sbb    eax,0x4760254c
  41f48f:	jae    0x41f4d0
  41f491:	cmc    
  41f492:	dec    ebp
  41f493:	mov    esi,0x4ef485cf
  41f498:	retf   
  41f499:	and    dl,BYTE PTR [ebx+edx*4]
  41f49c:	inc    ebp
  41f49d:	inc    edi
  41f49e:	out    0x85,al
  41f4a0:	imul   edx,DWORD PTR [esi],0xb2299915
  41f4a6:	pop    es
  41f4a7:	push   ebp
  41f4a8:	mov    al,ds:0x53b7e98f
  41f4ad:	mov    eax,ds:0x14eb81ff
  41f4b2:	pop    edx
  41f4b3:	mov    ecx,0x77aaeaa4
  41f4b8:	or     al,cl
  41f4ba:	mov    es,ecx
  41f4bc:	dec    esi
  41f4bd:	cs stos DWORD PTR es:[edi],eax
  41f4bf:	scas   eax,DWORD PTR es:[edi]
  41f4c0:	enter  0xb2e8,0x1c
  41f4c4:	dec    ebp
  41f4c5:	mov    edx,0x976ebc58
  41f4ca:	mov    ds:0x6a0c2eff,al
  41f4cf:	add    eax,0xcc0fa49a
  41f4d4:	shr    DWORD PTR [ebp-0x12],cl
  41f4d7:	scas   al,BYTE PTR es:[edi]
  41f4d8:	sbb    al,0xd6
  41f4da:	sub    al,0xaa
  41f4dc:	daa    
  41f4dd:	ins    DWORD PTR es:[edi],dx
  41f4de:	cwde   
  41f4df:	mov    ebp,0xd7ce0394
  41f4e4:	jne    0x41f52f
  41f4e6:	test   eax,0xb1ad8145
  41f4eb:	mov    bl,0xf2
  41f4ed:	mul    dl
  41f4ef:	call   0xf2cf:0xadacacab
  41f4f6:	lahf   
  41f4f7:	out    dx,al
  41f4f8:	push   eax
  41f4f9:	push   ss
  41f4fa:	xchg   edi,eax
  41f4fb:	sar    DWORD PTR [esi+ebx*8+0x79],0x90
  41f500:	adc    eax,0xbada43ec
  41f505:	jp     0x41f546
  41f507:	inc    eax
  41f508:	jo     0x41f551
  41f50a:	aam    0xcf
  41f50c:	push   edi
  41f50d:	imul   esp,ebp,0xe5082def
  41f513:	inc    eax
  41f514:	add    al,0x48
  41f516:	ins    DWORD PTR es:[edi],dx
  41f517:	push   es
  41f518:	jle    0x41f4c3
  41f51a:	into   
  41f51b:	test   eax,0xd6c13842
  41f520:	adc    DWORD PTR [edx],ebx
  41f522:	fstp   DWORD PTR [edi-0x7d]
  41f525:	inc    esi
  41f526:	outs   dx,BYTE PTR ds:[esi]
  41f527:	cmp    al,BYTE PTR [edx]
  41f529:	sbb    eax,0x7e6e97a7
  41f52e:	or     BYTE PTR [edx],bh
  41f530:	mov    ebx,0xb22869a7
  41f535:	cmp    esi,DWORD PTR [edi-0xd1cccbf]
  41f53b:	push   0x2c
  41f53d:	mov    bl,0xe7
  41f53f:	sbb    eax,0x505c6716
  41f544:	jmp    0xc8b5:0xf4ec98f6
  41f54b:	add    DWORD PTR ds:0xecc0d291,edi
  41f551:	adc    DWORD PTR [eax],ebx
  41f553:	and    eax,0xc69e320b
  41f558:	inc    ecx
  41f559:	mov    ch,0xa5
  41f55b:	or     cl,ah
  41f55d:	ds push cs
  41f55f:	cli    
  41f560:	jne    0x41f551
  41f562:	(bad)  
  41f563:	scas   al,BYTE PTR es:[edi]
  41f564:	sub    eax,0x49c46cf4
  41f569:	imul   BYTE PTR [eax-0x27]
  41f56c:	cmp    edx,DWORD PTR [eax-0x2d01faa2]
  41f572:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f573:	(bad)  
  41f574:	cwde   
  41f575:	cmc    
  41f576:	mov    ebp,0xacc8294
  41f57b:	mov    cl,0x5d
  41f57d:	sub    edi,eax
  41f57f:	mov    edi,DWORD PTR [ebp+0x52]
  41f582:	pusha  
  41f583:	mov    dl,0x67
  41f585:	(bad)  [ebx]
  41f587:	outs   dx,DWORD PTR ds:[esi]
  41f588:	aas    
  41f589:	jns    0x41f583
  41f58b:	xor    cl,BYTE PTR [esi+eax*4]
  41f58e:	mov    WORD PTR [ebx+0x28f0d1b3],ds
  41f594:	aaa    
  41f595:	jno    0x41f526
  41f597:	aam    0x8a
  41f599:	pushf  
  41f59a:	adc    DWORD PTR [ebx],edx
  41f59c:	or     BYTE PTR [edx-0x448d910b],cl
  41f5a2:	retf   0xfb44
  41f5a5:	aam    0xcb
  41f5a7:	call   0xe62e:0x7c0d474b
  41f5ae:	(bad)  
  41f5b0:	mov    ds:0x87afa35b,al
  41f5b5:	add    al,0x19
  41f5b7:	ins    BYTE PTR es:[edi],dx
  41f5b8:	jmp    0xaa036350
  41f5bd:	dec    eax
  41f5be:	call   0x9f32:0xc675dcaf
  41f5c5:	fmul   QWORD PTR [si]
  41f5c8:	xchg   ebp,eax
  41f5c9:	int    0x5d
  41f5cb:	ret    0xf825
  41f5ce:	shr    edx,1
  41f5d0:	fild   WORD PTR [ecx-0x7f9c2ecb]
  41f5d6:	or     al,0x5b
  41f5d8:	(bad)  
  41f5d9:	xchg   edi,eax
  41f5da:	adc    esp,DWORD PTR [edi+eax*1]
  41f5dd:	(bad)  
  41f5df:	dec    esi
  41f5e0:	test   al,0x41
  41f5e2:	jae    0x41f632
  41f5e4:	xchg   BYTE PTR [edi+0x1c],bl
  41f5e7:	push   0xf9ef5979
  41f5ec:	mov    fs,WORD PTR [ebp-0x12630b29]
  41f5f2:	dec    ebx
  41f5f3:	pop    ss
  41f5f4:	test   DWORD PTR [esp+esi*8],0xec543c1d
  41f5fb:	push   0xbee7cef2
  41f600:	inc    edx
  41f601:	arpl   WORD PTR [ebp-0x5c],di
  41f604:	or     al,0x13
  41f606:	mov    ebx,0x2bb14e1a
  41f60b:	aas    
  41f60c:	neg    BYTE PTR [edx+0x0]
  41f60f:	ss jno 0x41f594
  41f612:	fnsave [ebp+0xf]
  41f615:	into   
  41f616:	cmp    ecx,eax
  41f618:	mov    ecx,0xebe6c114
  41f61d:	data16 xlat BYTE PTR ds:[ebx]
  41f61f:	inc    ecx
  41f620:	mov    edx,0x7ca22801
  41f625:	push   ss
  41f626:	sub    eax,0xd7404d1f
  41f62b:	push   edx
  41f62c:	sahf   
  41f62d:	scas   eax,DWORD PTR es:[edi]
  41f62e:	inc    eax
  41f62f:	jbe    0x41f5bc
  41f631:	adc    al,0xdd
  41f633:	pop    ecx
  41f634:	or     BYTE PTR [ebp+esi*1+0x524d7dda],dh
  41f63b:	pushf  
  41f63c:	sub    ch,bl
  41f63e:	fcom   st(5)
  41f640:	xchg   esp,eax
  41f641:	sub    edi,ebx
  41f643:	mov    ebp,0x85df555e
  41f648:	(bad)  [edi+0x237054f7]
  41f64e:	aam    0x72
  41f650:	pop    eax
  41f651:	in     eax,dx
  41f652:	call   0x3df0f17b
  41f657:	mov    bh,BYTE PTR [ebx-0x1f]
  41f65a:	mov    edi,0xf5ce4aca
  41f65f:	jbe    0x41f64b
  41f661:	(bad)  
  41f662:	repnz cli 
  41f664:	mov    eax,ds:0xed00b1cd
  41f669:	and    edx,ebp
  41f66b:	jmp    0x41f634
  41f66d:	cmp    eax,0x5f50e7c8
  41f672:	test   al,0x22
  41f674:	mov    WORD PTR [edi-0x345d6f6b],ss
  41f67a:	mov    ah,BYTE PTR [edi+0x67dc9740]
  41f680:	ins    BYTE PTR es:[edi],dx
  41f681:	(bad)  
  41f682:	mov    ebp,0xb2659d84
  41f687:	mov    dh,0xcd
  41f689:	jb     0x41f639
  41f68b:	adc    BYTE PTR [edi-0x1c],0x79
  41f68f:	add    BYTE PTR [edx+0x38],ch
  41f692:	inc    esi
  41f693:	and    BYTE PTR [eax],0x30
  41f696:	dec    ebp
  41f697:	jecxz  0x41f659
  41f699:	fist   DWORD PTR [edi+0x6520ff87]
  41f69f:	loope  0x41f6a6
  41f6a1:	inc    esp
  41f6a2:	scas   al,BYTE PTR es:[edi]
  41f6a3:	jmp    0x41f6ae
  41f6a5:	jl     0x41f66d
  41f6a7:	push   edx
  41f6a8:	pop    esp
  41f6a9:	jmp    0xb8a42596
  41f6ae:	or     eax,0x927f9952
  41f6b3:	jnp    0x41f727
  41f6b5:	fimul  DWORD PTR [ebx+0x32]
  41f6b8:	cmp    eax,0x89b4d1c6
  41f6bd:	add    edx,DWORD PTR [edi+0x0]
  41f6c0:	rcl    edi,cl
  41f6c2:	aam    0x6e
  41f6c4:	cmp    ebx,ebp
  41f6c6:	in     al,0xf
  41f6c8:	lds    edx,FWORD PTR [edx-0x4c]
  41f6cb:	rcr    BYTE PTR [ebx],cl
  41f6cd:	push   ecx
  41f6ce:	fcmovb st,st(7)
  41f6d0:	mov    ecx,DWORD PTR [ebp+0x2b]
  41f6d3:	jp     0x41f713
  41f6d5:	mov    ah,0x1b
  41f6d7:	adc    al,0x44
  41f6d9:	std    
  41f6da:	psubsb mm6,QWORD PTR [ecx+0x760f4fcf]
  41f6e1:	push   ebp
  41f6e2:	sub    eax,DWORD PTR [edx-0x73c86c6a]
  41f6e8:	lods   eax,DWORD PTR ds:[esi]
  41f6e9:	jmp    0x41f6d3
  41f6eb:	in     al,dx
  41f6ec:	jl     0x41f6f4
  41f6ee:	pop    esi
  41f6ef:	add    eax,0x577a48cb
  41f6f4:	pop    ebx
  41f6f5:	enter  0x53b2,0xa8
  41f6f9:	xchg   dh,bl
  41f6fb:	pop    esi
  41f6fc:	cmp    ebp,DWORD PTR [esi+ecx*8]
  41f6ff:	les    ecx,FWORD PTR [esi+0x71]
  41f702:	imul   edi,DWORD PTR [ecx-0x20],0xffffffa3
  41f706:	pop    esp
  41f707:	push   ecx
  41f709:	jecxz  0x41f6ef
  41f70b:	xchg   edx,eax
  41f70c:	xor    BYTE PTR [ebp+0x92a01f0],bl
  41f712:	xchg   edx,eax
  41f713:	ins    BYTE PTR es:[edi],dx
  41f714:	xor    eax,0xbc2259b6
  41f719:	sbb    ebp,ebp
  41f71b:	add    ebp,DWORD PTR [esi+0x6b]
  41f71e:	xor    ebp,edx
  41f720:	xchg   edi,eax
  41f721:	xchg   edi,eax
  41f722:	dec    ecx
  41f723:	fcom   DWORD PTR [eax-0x3f3e4194]
  41f729:	icebp  
  41f72a:	mov    ebp,0xaeb754b7
  41f72f:	pop    ss
  41f730:	mov    ebp,0xf4229c0e
  41f735:	push   es
  41f736:	scas   eax,DWORD PTR es:[edi]
  41f737:	cmp    BYTE PTR [ecx-0x50],bl
  41f73a:	sub    DWORD PTR gs:[edx+esi*4-0x79],ebp
  41f73f:	out    dx,al
  41f740:	push   edi
  41f741:	xor    ch,dl
  41f743:	inc    esp
  41f744:	sbb    al,0xa4
  41f746:	je     0x41f754
  41f748:	push   0xffffff87
  41f74a:	stos   BYTE PTR es:[edi],al
  41f74b:	jbe    0x41f780
  41f74d:	pop    ebx
  41f74e:	out    dx,eax
  41f74f:	enter  0x5b97,0xfd
  41f753:	cmc    
  41f754:	test   eax,0xae719e40
  41f759:	push   eax
  41f75a:	sbb    esi,ebp
  41f75c:	jo     0x41f77a
  41f75e:	mov    DWORD PTR [eax+0x5e],0x6ea2ed2b
  41f765:	std    
  41f766:	ins    BYTE PTR es:[edi],dx
  41f767:	jnp    0x41f710
  41f769:	lahf   
  41f76a:	push   es
  41f76b:	jg     0x41f727
  41f76d:	test   BYTE PTR ds:0x90a358e4,0xdb
  41f774:	shr    BYTE PTR [ebp-0x48],1
  41f777:	lds    ecx,FWORD PTR [edx-0x2fccc834]
  41f77d:	jmpw   0x35a9
  41f781:	or     BYTE PTR [esi+0xc],dh
  41f784:	daa    
  41f785:	cwde   
  41f786:	jl     0x41f7a4
  41f788:	(bad)  
  41f789:	dec    esi
  41f78a:	sub    al,0x17
  41f78c:	pop    ebp
  41f78d:	sub    bh,BYTE PTR [edi]
  41f78f:	mov    BYTE PTR [esi],dh
  41f791:	rcr    DWORD PTR [ecx+eax*4+0x21],0xd0
  41f796:	or     esi,DWORD PTR [ebx-0x1b16bf66]
  41f79c:	mov    ch,0x61
  41f79e:	repnz sbb DWORD PTR [ecx-0x7a],eax
  41f7a2:	fsubr  QWORD PTR [edx+0x1a52a45d]
  41f7a8:	out    0x1,eax
  41f7aa:	(bad)  
  41f7ab:	(bad)  
  41f7ac:	cmp    al,0x51
  41f7ae:	sbb    BYTE PTR [eax-0x35],0xf0
  41f7b2:	push   0xffffff83
  41f7b4:	jg     0x41f742
  41f7b6:	jl     0x41f762
  41f7b8:	lods   eax,DWORD PTR ds:[esi]
  41f7b9:	cmp    esi,edi
  41f7bb:	or     bl,BYTE PTR [ecx-0x6d]
  41f7be:	xlat   BYTE PTR ds:[ebx]
  41f7bf:	int3   
  41f7c0:	push   edx
  41f7c1:	cli    
  41f7c2:	adc    edi,edx
  41f7c4:	repnz shl BYTE PTR fs:[edx],cl
  41f7c8:	inc    BYTE PTR [eax-0x344da94b]
  41f7ce:	(bad)  
  41f7cf:	jb     0x41f772
  41f7d1:	pop    eax
  41f7d2:	dec    esi
  41f7d3:	test   BYTE PTR [ecx],bh
  41f7d5:	sahf   
  41f7d6:	mov    cl,BYTE PTR [edi]
  41f7d8:	repz push esi
  41f7da:	add    dl,BYTE PTR [edi+0x16]
  41f7dd:	mov    bh,BYTE PTR [edx+0x49]
  41f7e0:	mov    ds:0xdbb0d19b,eax
  41f7e5:	popa   
  41f7e6:	mov    ecx,DWORD PTR [ebx]
  41f7e8:	mov    ?,WORD PTR [edi]
  41f7ea:	sbb    ebx,esp
  41f7ec:	xchg   esi,eax
  41f7ed:	scas   al,BYTE PTR es:[edi]
  41f7ee:	ret    
  41f7ef:	pop    edi
  41f7f0:	lods   eax,DWORD PTR ds:[esi]
  41f7f1:	push   cs
  41f7f2:	mov    ebx,0x16980e4b
  41f7f7:	scas   al,BYTE PTR es:[edi]
  41f7f8:	retf   
  41f7f9:	aas    
  41f7fa:	mov    edi,0xc49c02f7
  41f7ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f800:	sbb    ah,BYTE PTR [eax]
  41f802:	adc    DWORD PTR [esi],eax
  41f804:	in     al,0x85
  41f806:	push   ebx
  41f807:	mov    DWORD PTR [edi-0xe],ecx
  41f80a:	jge    0x41f820
  41f80c:	and    BYTE PTR [ecx],0x49
  41f80f:	inc    edi
  41f810:	inc    eax
  41f811:	or     BYTE PTR [ebx+ecx*1+0x2f522d70],0x27
  41f819:	inc    esp
  41f81a:	xor    ebp,esi
  41f81c:	xchg   edi,eax
  41f81d:	mov    esp,0x34d21a98
  41f822:	in     eax,0x87
  41f824:	jae    0x41f818
  41f826:	pop    ds
  41f827:	call   0x29d6:0x6b58f9e1
  41f82e:	lds    ebx,FWORD PTR [esp+ecx*8+0x21]
  41f832:	add    DWORD PTR [edi-0x4b],esi
  41f835:	in     al,dx
  41f836:	dec    esi
  41f837:	idiv   DWORD PTR [edx+0x36]
  41f83a:	xlat   BYTE PTR ds:[ebx]
  41f83b:	xchg   ebp,eax
  41f83c:	mov    DWORD PTR [ebp-0x2e],ebx
  41f83f:	sbb    al,0x8a
  41f841:	in     al,dx
  41f842:	cli    
  41f843:	mov    gs,WORD PTR [eax-0x7c266194]
  41f849:	push   es
  41f84a:	bnd jmp DWORD PTR [ecx]
  41f84d:	xchg   esi,eax
  41f84e:	shl    DWORD PTR [ecx+0x26],cl
  41f851:	cmp    al,BYTE PTR [ecx-0x13084011]
  41f857:	fistp  WORD PTR [eax+0x61]
  41f85a:	f2xm1  
  41f85c:	add    ch,BYTE PTR [ecx-0x475783ab]
  41f862:	push   0x63
  41f864:	imul   eax,DWORD PTR [esi+0x7b],0x25
  41f868:	clc    
  41f869:	add    al,0x61
  41f86b:	std    
  41f86c:	push   ds
  41f86d:	test   al,bh
  41f86f:	dec    edi
  41f870:	jne    0x41f853
  41f872:	add    DWORD PTR [edx+0x1a7d0e91],ebp
  41f878:	xlat   BYTE PTR ds:[ebx]
  41f879:	and    DWORD PTR [ebx-0x63],edi
  41f87c:	mov    esi,0x33c43950
  41f881:	jmp    0x41f8aa
  41f883:	sbb    BYTE PTR ss:[ecx],dl
  41f886:	lods   al,BYTE PTR ds:[esi]
  41f887:	stos   DWORD PTR es:[edi],eax
  41f888:	test   DWORD PTR [ecx-0x6b],ebx
  41f88b:	cmp    eax,DWORD PTR [edx]
  41f88d:	xchg   edi,eax
  41f88e:	adc    al,0x4
  41f890:	add    al,0x37
  41f892:	loope  0x41f89e
  41f894:	mov    ah,0x9a
  41f896:	ss lock push esp
  41f899:	shl    BYTE PTR [ebp+esi*2-0x6294f926],0xef
  41f8a1:	rcl    eax,1
  41f8a3:	inc    esi
  41f8a4:	sbb    eax,0xd40f7078
  41f8a9:	int    0x40
  41f8ab:	or     al,0x93
  41f8ad:	and    ebp,edi
  41f8af:	xor    ah,BYTE PTR [edi-0x7e]
  41f8b2:	mov    dh,BYTE PTR [esi-0x26d8c0ca]
  41f8b8:	cmp    al,0x2c
  41f8ba:	push   edx
  41f8bb:	adc    cl,bl
  41f8bd:	aas    
  41f8be:	add    ebx,ebx
  41f8c0:	push   ebx
  41f8c1:	and    al,0xb8
  41f8c3:	daa    
  41f8c4:	adc    bl,ch
  41f8c6:	js     0x41f849
  41f8c8:	in     al,dx
  41f8c9:	fild   DWORD PTR [esi-0x29]
  41f8cc:	test   eax,0x64231f71
  41f8d1:	sub    BYTE PTR [ebx-0x7f],bl
  41f8d4:	popa   
  41f8d5:	sbb    edx,DWORD PTR [ecx+0x5e]
  41f8d8:	test   al,cl
  41f8da:	loop   0x41f93f
  41f8dc:	les    ebx,FWORD PTR [edx+0x4f]
  41f8df:	enter  0xba79,0x37
  41f8e3:	loopne 0x41f8e0
  41f8e5:	jb     0x41f87a
  41f8e7:	mov    DWORD PTR [ebx],0xa0342f3d
  41f8ed:	arpl   WORD PTR [edx+0x2d382ede],di
  41f8f3:	fnsave [esi+eax*2-0x6bda2c54]
  41f8fa:	stos   BYTE PTR es:[edi],al
  41f8fb:	adc    al,0x4f
  41f8fd:	push   esi
  41f8fe:	inc    ecx
  41f8ff:	shl    DWORD PTR [ecx],1
  41f901:	mov    al,ds:0xcfcde5c2
  41f906:	fisttp WORD PTR ds:0xdb084ccb
  41f90c:	jb     0x41f984
  41f90e:	sbb    eax,0x1409aa3c
  41f913:	xor    eax,0x8499794
  41f918:	hlt    
  41f919:	push   0x52
  41f91b:	dec    esp
  41f91c:	mov    ebp,0x9453fa42
  41f921:	mov    ebx,0x31b65f37
  41f926:	(bad)
  41f929:	sbb    BYTE PTR [esi+eax*8+0x51],bh
  41f92d:	jmp    0xc1c4:0xc49d4935
  41f934:	push   es
  41f935:	imul   ebp,DWORD PTR [esi],0x45834c99
  41f93b:	stos   BYTE PTR es:[edi],al
  41f93c:	cdq    
  41f93d:	lock mov dh,0x6e
  41f940:	mov    bl,0xaf
  41f942:	pushf  
  41f943:	push   esi
  41f944:	pop    es
  41f945:	push   ebx
  41f947:	mov    cl,0x1b
  41f949:	js     0x41f8fd
  41f94b:	mov    dh,0x8f
  41f94d:	mov    ebp,0x7e2615bb
  41f952:	mov    eax,ds:0x995d16a8
  41f957:	std    
  41f958:	add    al,0xa4
  41f95a:	imul   ebx,DWORD PTR [edx],0xb43450b8
  41f960:	int3   
  41f961:	call   0x2d2f:0xfa22059a
  41f968:	std    
  41f969:	mov    esi,0xba8009f4
  41f96e:	inc    edx
  41f96f:	(bad)  
  41f970:	push   esi
  41f971:	cs push edi
  41f973:	inc    edi
  41f974:	mov    ebx,0xdbdb983f
  41f979:	cmp    al,0x9a
  41f97b:	cdq    
  41f97c:	mov    esi,0x9c1da625
  41f981:	sti    
  41f982:	pop    ebp
  41f983:	call   0x616a0cc5
  41f988:	jge    0x41f96e
  41f98a:	aam    0xf4
  41f98c:	shl    BYTE PTR [ecx+0x560ebebd],1
  41f992:	aaa    
  41f993:	inc    edi
  41f994:	pop    ecx
  41f995:	cmp    dh,al
  41f997:	jno    0x41f94e
  41f999:	gs inc esi
  41f99b:	ret    
  41f99c:	xor    BYTE PTR [ebp-0x1e],0x5a
  41f9a0:	pop    es
  41f9a1:	leave  
  41f9a2:	(bad)  
  41f9a4:	ins    DWORD PTR es:[edi],dx
  41f9a5:	scas   eax,DWORD PTR es:[edi]
  41f9a6:	(bad)  [ecx+0x41f208cf]
  41f9ac:	lods   al,BYTE PTR ds:[esi]
  41f9ad:	and    DWORD PTR [ebx],edi
  41f9af:	sbb    DWORD PTR [esi+0x7616f36d],edi
  41f9b5:	fst    DWORD PTR [ebx*8+0x7685772d]
  41f9bc:	lods   al,BYTE PTR ds:[esi]
  41f9bd:	daa    
  41f9be:	fst    st(0)
  41f9c0:	mov    ebx,0x3a8dd98a
  41f9c5:	xchg   ecx,eax
  41f9c6:	cdq    
  41f9c7:	pusha  
  41f9c8:	mov    bl,0x7e
  41f9ca:	bound  ecx,QWORD PTR [ecx-0x17a4e1b5]
  41f9d0:	jle    0x41f966
  41f9d2:	enter  0x3a7,0x32
  41f9d6:	mov    eax,0x4de9dfdd
  41f9db:	test   al,dl
  41f9dd:	out    dx,eax
  41f9de:	arpl   cx,sp
  41f9e0:	test   eax,0x730128a0
  41f9e5:	out    dx,eax
  41f9e6:	fdiv   DWORD PTR [edi-0x5e]
  41f9e9:	sub    eax,0x428f9b15
  41f9ee:	mov    eax,ds:0x8dd797e0
  41f9f3:	out    dx,eax
  41f9f4:	daa    
  41f9f5:	sbb    eax,0xbdc004ef
  41f9fa:	icebp  
  41f9fb:	cmp    esi,ebp
  41f9fd:	dec    BYTE PTR [edx+0xc]
  41fa00:	mov    ds:0x5170132c,al
  41fa05:	lods   eax,DWORD PTR ds:[esi]
  41fa06:	add    dl,bl
  41fa08:	out    0xd2,al
  41fa0a:	(bad)  
  41fa0b:	pop    ss
  41fa0c:	in     al,0xe8
  41fa0e:	(bad)  
  41fa0f:	xlat   BYTE PTR ds:[ebx]
  41fa10:	test   ebp,ecx
  41fa12:	adc    DWORD PTR [ebx],ebp
  41fa14:	outs   dx,BYTE PTR ds:[esi]
  41fa15:	xor    dl,bl
  41fa17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa18:	xchg   ecx,eax
  41fa19:	packsswb mm7,QWORD PTR [edx]
  41fa1c:	sbb    DWORD PTR [edx+ebp*2-0x5bc80a15],edi
  41fa23:	out    dx,al
  41fa24:	popf   
  41fa25:	cmp    eax,0x8f654aae
  41fa2a:	cli    
  41fa2b:	cwde   
  41fa2c:	aam    0xc6
  41fa2e:	mov    esp,0x568c0d00
  41fa33:	stc    
  41fa34:	mov    dl,0xbc
  41fa36:	pushf  
  41fa37:	jmp    0xbe5a6a79
  41fa3c:	call   0x77c2:0x8b8ade34
  41fa43:	retf   
  41fa44:	inc    BYTE PTR [edi+ebx*8-0x42]
  41fa48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa49:	sbb    esi,0x50da127e
  41fa4f:	rcr    BYTE PTR [edi+0x75],0xde
  41fa53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa54:	or     cl,BYTE PTR [eax+0x2d]
  41fa57:	loop   0x41f9df
  41fa59:	or     BYTE PTR [edx+0x5a3f2243],dh
  41fa5f:	add    esi,DWORD PTR [ecx+0x63]
  41fa62:	dec    esp
  41fa63:	push   ds
  41fa64:	mov    esi,0xe404afda
  41fa69:	jecxz  0x41f9ff
  41fa6b:	mov    dl,BYTE PTR [edi+0x63]
  41fa6e:	into   
  41fa6f:	sahf   
  41fa70:	jge    0x41fa61
  41fa72:	dec    eax
  41fa73:	repz sahf 
  41fa75:	pop    ebx
  41fa76:	sbb    eax,0x14c87b36
  41fa7b:	or     eax,esp
  41fa7d:	inc    ebp
  41fa7e:	(bad)  
  41fa80:	adc    DWORD PTR [esi+0x23c12f9a],edx
  41fa86:	mov    edi,0xe2651898
  41fa8b:	sar    esi,1
  41fa8d:	cld    
  41fa8e:	out    0x51,al
  41fa90:	add    eax,DWORD PTR [edi]
  41fa92:	sbb    bh,BYTE PTR [ebp-0x2]
  41fa95:	xchg   ebx,eax
  41fa96:	lock dec ebx
  41fa98:	cmc    
  41fa99:	jo     0x41fa77
  41fa9b:	xchg   ebx,eax
  41fa9c:	fwait
  41fa9d:	sar    BYTE PTR [eax+0x5e],0x89
  41faa1:	je     0x41fa4a
  41faa3:	repnz arpl WORD PTR [ecx],cx
  41faa6:	inc    ebp
  41faa7:	ret    
  41faa8:	mov    edi,edi
  41faaa:	xor    ah,BYTE PTR [edx-0x78]
  41faad:	push   es
  41faae:	jne    0x41fa5a
  41fab0:	dec    ecx
  41fab1:	and    al,0xa7
  41fab3:	scas   eax,DWORD PTR es:[edi]
  41fab4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fab5:	or     ebp,ebx
  41fab7:	dec    esp
  41fab8:	out    dx,eax
  41fab9:	mov    ds:0xd0208f4a,eax
  41fabe:	sbb    BYTE PTR [ecx+0x79],bh
  41fac1:	xor    al,0xb7
  41fac3:	popa   
  41fac4:	ja     0x41fac6
  41fac6:	inc    edi
  41fac7:	mov    dl,0x13
  41fac9:	adc    DWORD PTR [ebx],edx
  41facb:	repz stc 
  41facd:	push   ds
  41face:	sub    DWORD PTR [esi-0x753d2210],0x5178e727
  41fad8:	xor    dh,BYTE PTR [edx+ecx*2+0x4d07f3ae]
  41fadf:	loop   0x41fab7
  41fae1:	cmp    eax,DWORD PTR [edi-0xe]
  41fae4:	mov    bh,0xa6
  41fae6:	rcr    BYTE PTR ds:0xa6608646,cl
  41faec:	or     DWORD PTR [edx-0x13],0xe7452468
  41faf3:	lds    edi,FWORD PTR [ebp-0x464221ce]
  41faf9:	and    BYTE PTR [esi+edx*4],ah
  41fafc:	fdiv   QWORD PTR [ebp+0x26b1271a]
  41fb02:	mov    eax,ds:0x307f4671
  41fb07:	fmul   DWORD PTR [ecx-0x1b082404]
  41fb0d:	and    esi,DWORD PTR ds:0xad23761a
  41fb13:	mov    dh,0x78
  41fb15:	cmp    BYTE PTR [esi+0x547627e6],bh
  41fb1b:	and    DWORD PTR [esi-0x77],ecx
  41fb1e:	imul   ebp,DWORD PTR [ebp+eax*1-0x2ff63668],0x95866a88
  41fb29:	push   esp
  41fb2a:	mov    ah,0x20
  41fb2c:	loop   0x41fb20
  41fb2e:	push   ebx
  41fb2f:	jae    0x41fb57
  41fb31:	xchg   esi,eax
  41fb32:	mov    eax,ds:0xe0eb9a14
  41fb37:	xchg   esi,eax
  41fb38:	(bad)  
  41fb3a:	fldcw  WORD PTR [edx-0x6dbc6d2a]
  41fb40:	xor    BYTE PTR [ecx+0x4c859d26],dl
  41fb46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb47:	xchg   ebx,eax
  41fb48:	add    eax,0xb1c3575d
  41fb4d:	jmp    0x8c5:0xe6cd76ae
  41fb54:	mov    DWORD PTR ds:0x7fcea5a7,0xb22976e7
  41fb5e:	mov    ebx,0x3c7fa4f5
  41fb63:	mov    ds:0xb4cd10e2,eax
  41fb68:	push   ds
  41fb69:	mov    edx,0x19273fd4
  41fb6e:	mov    al,ds:0x23d7ee5e
  41fb73:	pop    eax
  41fb74:	mov    eax,ds:0xf601c9ea
  41fb79:	xor    eax,0xa789466
  41fb7e:	ins    DWORD PTR es:[edi],dx
  41fb7f:	xor    DWORD PTR [esi-0x4d],eax
  41fb82:	imul   ebp,DWORD PTR [ebp-0x6b69f868],0xd
  41fb89:	lahf   
  41fb8a:	ficom  WORD PTR [ecx-0x67157afd]
  41fb90:	push   esi
  41fb91:	mov    bl,0x74
  41fb93:	lea    edi,[eax+0x24715a15]
  41fb99:	ja     0x41fc1a
  41fb9b:	push   ds
  41fb9c:	(bad)  
  41fb9d:	cmp    DWORD PTR [edi+0x2a],ebx
  41fba0:	pop    edi
  41fba1:	rcr    BYTE PTR [ebx],cl
  41fba3:	cmp    al,0xe4
  41fba5:	test   edi,ebp
  41fba7:	adc    eax,0xe802d45
  41fbac:	mov    ch,0x8f
  41fbaf:	not    DWORD PTR es:[ebp-0x7c]
  41fbb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbb4:	in     al,dx
  41fbb5:	shl    DWORD PTR [ebx-0x7],0xc8
  41fbb9:	cld    
  41fbba:	inc    eax
  41fbbb:	sub    eax,0xc1edec3d
  41fbc0:	adc    DWORD PTR [eax],ecx
  41fbc2:	ror    DWORD PTR [eax+0x3b],1
  41fbc5:	addr16 xchg edi,eax
  41fbc7:	icebp  
  41fbc8:	xchg   esi,eax
  41fbc9:	cmp    ecx,DWORD PTR [edi-0xdddc9a9]
  41fbcf:	push   es
  41fbd0:	dec    esp
  41fbd1:	iret   
  41fbd2:	pop    edi
  41fbd3:	ins    DWORD PTR es:[edi],dx
  41fbd4:	ret    0x3677
  41fbd7:	mov    dl,0xa2
  41fbd9:	repz enter 0xca75,0x98
  41fbde:	xchg   ecx,eax
  41fbdf:	cmp    bl,BYTE PTR [ebp+0xbc23fd5]
  41fbe5:	xor    eax,0x2316debc
  41fbea:	or     esp,DWORD PTR [ebx-0x70a8a94f]
  41fbf0:	jecxz  0x41fc10
  41fbf2:	lds    ecx,FWORD PTR [esi]
  41fbf4:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbf6:	imul   edx,edx,0xb3d528dd
  41fbfc:	sbb    al,0x63
  41fbfe:	js     0x41fba6
  41fc00:	xchg   edi,eax
  41fc01:	rcr    DWORD PTR [edx-0x56d94719],0x75
  41fc08:	out    0x50,eax
  41fc0a:	les    eax,FWORD PTR [eax-0x5f]
  41fc0d:	mov    ecx,edx
  41fc0f:	pop    esp
  41fc10:	mov    bl,0xd6
  41fc12:	jg     0x41fc6b
  41fc14:	dec    edi
  41fc15:	or     dl,ah
  41fc17:	clc    
  41fc18:	mov    al,ds:0x44b6cf60
  41fc1d:	jp     0x41fc8a
  41fc1f:	sub    eax,0x5a15b8d5
  41fc24:	repz (bad) 
  41fc26:	fcom   QWORD PTR [ecx+0x5e]
  41fc29:	outs   dx,BYTE PTR ds:[esi]
  41fc2a:	aas    
  41fc2b:	out    0x67,eax
  41fc2d:	lds    edx,FWORD PTR [ebx+ecx*8]
  41fc30:	mov    dh,0xc0
  41fc32:	adc    eax,0x2a71e2a4
  41fc37:	inc    eax
  41fc38:	repnz loopne 0x41fc6c
  41fc3b:	mulps  xmm5,XMMWORD PTR [ecx-0x146ef028]
  41fc42:	and    DWORD PTR cs:0xbb3fc0d,ecx
  41fc49:	sub    al,0x85
  41fc4b:	hlt    
  41fc4c:	fistp  QWORD PTR [edx+ebx*1+0x18]
  41fc50:	out    0xf3,al
  41fc52:	shr    DWORD PTR [eax-0x68],0x68
  41fc56:	icebp  
  41fc57:	xor    eax,0xea561579
  41fc5c:	pop    ecx
  41fc5d:	mov    esi,0x3b36950a
  41fc62:	push   esi
  41fc63:	mov    eax,ds:0xc200078b
  41fc68:	inc    edx
  41fc69:	mov    ebx,0x20abe84d
  41fc6e:	cmp    dl,BYTE PTR [ecx+0x58db265d]
  41fc74:	sub    dh,BYTE PTR [edx-0x56]
  41fc77:	out    dx,eax
  41fc78:	cmp    BYTE PTR [esi+0x2f],al
  41fc7b:	mov    dh,0xf8
  41fc7d:	iret   
  41fc7e:	repz jmp 0x41fc0c
  41fc81:	mov    ds:0xc6337542,al
  41fc86:	add    eax,edi
  41fc88:	push   eax
  41fc89:	mov    eax,DWORD PTR [ebp-0x24]
  41fc8c:	add    eax,0xaa
  41fc91:	push   eax
  41fc92:	mov    eax,DWORD PTR [ebp-0x24]
  41fc95:	mov    eax,DWORD PTR [eax+0x198]
  41fc9b:	push   DWORD PTR [eax]
  41fc9d:	call   0x4236a9
  41fca2:	mov    DWORD PTR [ebp-0x14],eax
  41fca5:	lea    eax,[ebp+0x4]
  41fca8:	mov    DWORD PTR [ebp-0x30],eax
  41fcab:	mov    eax,DWORD PTR [ebp-0x14]
  41fcae:	test   eax,eax
  41fcb0:	je     0x422078
  41fcb6:	lea    eax,[ebp-0x8]
  41fcb9:	mov    DWORD PTR [ebp-0x38],eax
  41fcbc:	mov    eax,DWORD PTR [ebp-0x34]
  41fcbf:	mov    DWORD PTR [ebp-0x8],eax
  41fcc2:	mov    eax,DWORD PTR [ebp-0x8]
  41fcc5:	mov    ecx,DWORD PTR [ebp-0x14]
  41fcc8:	sub    eax,ecx
  41fcca:	mov    DWORD PTR [ebp-0x8],eax
  41fccd:	mov    ecx,DWORD PTR [ebp-0x4]
  41fcd0:	xor    ecx,esi
  41fcd2:	mov    eax,0xffcd8d14
  41fcd7:	sub    eax,ecx
  41fcd9:	add    DWORD PTR [ebp-0x8],eax
  41fcdc:	mov    eax,DWORD PTR [ebp-0x8]
  41fcdf:	mov    ecx,DWORD PTR [ebp-0x14]
  41fce2:	mov    DWORD PTR [ecx+0x1],eax
  41fce5:	mov    eax,DWORD PTR [ebp-0x14]
  41fce8:	push   DWORD PTR [ebp-0x24]
  41fceb:	mov    BYTE PTR [eax],0xe9
  41fcee:	mov    eax,ds:0x42816b
  41fcf3:	push   DWORD PTR [eax]
  41fcf5:	push   DWORD PTR ds:0x4283c7
  41fcfb:	push   DWORD PTR ds:0x428173
  41fd01:	jmp    0x422061
  41fd06:	inc    edi
  41fd07:	cmp    esi,0x5e
  41fd0a:	mov    dh,0x3
  41fd0c:	(bad)  
  41fd0d:	jnp    0x41fce7
  41fd0f:	sub    DWORD PTR [esi],ebx
  41fd11:	jmp    0x41fce2
  41fd13:	(bad)  
  41fd14:	scas   al,BYTE PTR es:[edi]
  41fd15:	push   ss
  41fd16:	out    dx,eax
  41fd17:	test   eax,0x5f3f7a7d
  41fd1c:	jp     0x41fd98
  41fd1e:	mov    bh,0x35
  41fd20:	add    edx,DWORD PTR [ebx+0x79f81c7e]
  41fd26:	loope  0x41fd3c
  41fd28:	fwait
  41fd29:	dec    ebp
  41fd2a:	cli    
  41fd2b:	fwait
  41fd2c:	iret   
  41fd2d:	and    bh,dh
  41fd2f:	in     al,dx
  41fd30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd31:	fs sahf 
  41fd33:	jge    0x41fcd0
  41fd35:	std    
  41fd36:	adc    BYTE PTR [eax-0x4a2e5c84],bh
  41fd3c:	adc    eax,0x91af740b
  41fd41:	jo     0x41fd20
  41fd43:	loopne 0x41fcfa
  41fd45:	jb     0x41fd34
  41fd47:	shl    DWORD PTR [ebp+0x14],cl
  41fd4a:	aas    
  41fd4b:	add    esi,DWORD PTR [edi]
  41fd4d:	(bad)  
  41fd4e:	(bad)  
  41fd4f:	loopne 0x41fdbd
  41fd51:	add    ah,BYTE PTR ds:0x5f107220
  41fd57:	int3   
  41fd58:	or     eax,0x777e922f
  41fd5d:	fiadd  WORD PTR [esi+0x49]
  41fd60:	inc    ebx
  41fd61:	inc    esi
  41fd62:	dec    ebx
  41fd63:	and    BYTE PTR [ebp-0x18],dl
  41fd66:	and    esi,DWORD PTR [ecx+0x6c986d68]
  41fd6c:	clc    
  41fd6d:	xor    ebx,DWORD PTR [edi+0x62e70e44]
  41fd73:	into   
  41fd74:	jge    0x41fd4f
  41fd76:	aad    0x75
  41fd78:	out    dx,al
  41fd79:	(bad)  
  41fd7a:	enter  0x3ca9,0x32
  41fd7e:	data16 xor al,0xff
  41fd81:	mov    dh,0x8e
  41fd83:	repz loope 0x41fd10
  41fd86:	xchg   esi,eax
  41fd87:	pop    esi
  41fd88:	cli    
  41fd89:	mov    ecx,0x4da891a9
  41fd8e:	fisubr DWORD PTR [esi-0x500510e0]
  41fd94:	pop    ds
  41fd95:	inc    esp
  41fd96:	add    edx,DWORD PTR ds:[esi-0x2f]
  41fd9a:	ret    0xd8fd
  41fd9d:	sbb    dh,BYTE PTR [edi]
  41fd9f:	lods   al,BYTE PTR ds:[esi]
  41fda0:	pop    ebp
  41fda1:	add    DWORD PTR [ebp+0x57],ebp
  41fda4:	fild   WORD PTR [ebx-0x74c92d38]
  41fdaa:	es sub esp,ebp
  41fdad:	(bad)  
  41fdae:	cmc    
  41fdaf:	jmp    0x41fd3d
  41fdb1:	jge    0x41fd73
  41fdb3:	sbb    eax,0xac470be9
  41fdb8:	dec    edi
  41fdb9:	pop    edi
  41fdba:	outs   dx,DWORD PTR ds:[esi]
  41fdbb:	aaa    
  41fdbc:	xchg   ebx,eax
  41fdbd:	cmp    al,0xd6
  41fdbf:	in     al,0x7c
  41fdc1:	cmp    al,0x60
  41fdc3:	js     0x41fd54
  41fdc5:	inc    edi
  41fdc6:	push   edx
  41fdc7:	cmp    cl,dl
  41fdc9:	and    BYTE PTR [ebx+0x6c],0xce
  41fdcd:	arpl   cx,sp
  41fdcf:	ret    0x844f
  41fdd2:	mov    ds:0x61a7d004,al
  41fdd7:	push   cs
  41fdd8:	(bad)  
  41fdda:	out    dx,eax
  41fddb:	int3   
  41fddc:	in     al,0xca
  41fdde:	dec    edx
  41fddf:	(bad)  
  41fde0:	adc    ch,BYTE PTR [edi+0x77a19859]
  41fde6:	int3   
  41fde7:	sub    dl,al
  41fde9:	cmc    
  41fdea:	mov    al,ds:0xa925613c
  41fdef:	lea    edx,[esi]
  41fdf1:	sbb    dh,BYTE PTR [ecx-0x7b59d3f4]
  41fdf7:	add    al,0xfa
  41fdf9:	dec    ecx
  41fdfa:	or     ch,ah
  41fdfc:	(bad)  
  41fdfd:	mov    ds:0xa19f9416,al
  41fe02:	sbb    edx,edx
  41fe04:	jge    0x41fe05
  41fe06:	lods   eax,DWORD PTR ds:[esi]
  41fe07:	jp     0x41fdf0
  41fe09:	inc    ebp
  41fe0a:	xchg   ebx,eax
  41fe0b:	push   0xc260edf7
  41fe10:	sbb    ebx,DWORD PTR [edi-0x5e9838f8]
  41fe16:	sbb    al,0xcb
  41fe18:	push   esp
  41fe19:	lea    ebp,[ecx+edx*4]
  41fe1c:	inc    esi
  41fe1d:	mov    ah,0x65
  41fe1f:	push   edx
  41fe20:	(bad)  
  41fe21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe22:	mov    bl,0xc4
  41fe24:	fs dec ebp
  41fe26:	mov    cs,ebp
  41fe28:	push   ebx
  41fe29:	sub    DWORD PTR [esi-0x5c8dd08],edx
  41fe2f:	or     eax,0x57a2eb0a
  41fe34:	or     eax,0xd541ad50
  41fe39:	push   cs
  41fe3a:	add    edi,DWORD PTR [edi-0x6]
  41fe3d:	ss js  0x41fe10
  41fe40:	pop    edx
  41fe41:	daa    
  41fe42:	icebp  
  41fe43:	daa    
  41fe44:	fcomp  DWORD PTR [esi]
  41fe46:	iret   
  41fe47:	or     eax,0x3b463f0a
  41fe4c:	int3   
  41fe4d:	imul   edi,DWORD PTR [ecx-0x2d7bc477],0x6
  41fe54:	xor    DWORD PTR cs:[ebx-0x3f8a238d],edx
  41fe5b:	rcr    DWORD PTR [eax-0x76d1fb11],1
  41fe61:	leave  
  41fe62:	ss out dx,al
  41fe64:	jb     0x41fe5b
  41fe66:	lock xlat BYTE PTR cs:[ebx]
  41fe69:	push   edi
  41fe6a:	ins    DWORD PTR es:[edi],dx
  41fe6b:	leave  
  41fe6c:	mov    ebp,0x63c6f9b0
  41fe71:	cmp    dl,ah
  41fe73:	mov    ch,0xc7
  41fe75:	dec    eax
  41fe76:	retf   
  41fe77:	mov    DWORD PTR [edi+ebp*8-0xa],0x8bc5d77
  41fe7f:	js     0x41fe75
  41fe81:	inc    ebx
  41fe82:	xor    BYTE PTR [ebp+eiz*2+0x1e8ff6a6],0x99
  41fe8a:	sbb    eax,0x90ac4fb8
  41fe8f:	mov    ds:0xb665ea55,eax
  41fe94:	sbb    edx,DWORD PTR [edx+0x5f]
  41fe97:	cmp    eax,0xa6016efb
  41fe9c:	dec    eax
  41fe9d:	popf   
  41fe9e:	cmp    dh,ah
  41fea0:	xchg   ecx,eax
  41fea1:	daa    
  41fea2:	lahf   
  41fea3:	enter  0xbf67,0xde
  41fea7:	scas   eax,DWORD PTR es:[edi]
  41fea8:	dec    esp
  41fea9:	mov    esp,0xe0e79c72
  41feae:	xor    dl,BYTE PTR [edi+ebp*2-0x31]
  41feb2:	scas   eax,DWORD PTR es:[edi]
  41feb3:	ds jne 0x41fed7
  41feb6:	mov    cl,0x28
  41feb8:	xor    al,BYTE PTR [eax+ebp*8]
  41febb:	fdiv   DWORD PTR ds:0x11b1672
  41fec1:	jge    0x41fe97
  41fec3:	xlat   BYTE PTR ds:[ebx]
  41fec4:	dec    ebx
  41fec5:	push   ebp
  41fec6:	iret   
  41fec7:	pushf  
  41fec8:	adc    DWORD PTR [ebx+0x4d],ecx
  41fecb:	fwait
  41fecc:	xor    DWORD PTR [esi],eax
  41fece:	or     al,0x2a
  41fed0:	gs push esi
  41fed2:	or     DWORD PTR [edi],esi
  41fed4:	mov    bh,dh
  41fed6:	sbb    al,BYTE PTR [ebp-0x2f7fce6b]
  41fedc:	or     eax,0x972a2ad0
  41fee1:	out    dx,al
  41fee2:	inc    esi
  41fee3:	dec    ebp
  41fee4:	jo     0x41feb9
  41fee6:	mov    DWORD PTR [ebp+0x20],ebp
  41fee9:	fcmovu st,st(1)
  41feeb:	es std 
  41feed:	adc    BYTE PTR [edx-0x456397cd],0x4d
  41fef4:	bsr    esp,DWORD PTR [ebx]
  41fef7:	mov    ds:0xb5b88a5,eax
  41fefc:	mov    ch,0xb0
  41fefe:	aad    0x4a
  41ff00:	fwait
  41ff01:	repnz and al,0x2c
  41ff04:	mov    ds,edi
  41ff06:	bound  edx,QWORD PTR [ebx-0x47b501d8]
  41ff0c:	xchg   DWORD PTR [edi+0x383f5b0b],ebp
  41ff12:	scas   al,BYTE PTR es:[edi]
  41ff13:	ja     0x41ff1b
  41ff15:	mov    ch,0x38
  41ff17:	xchg   esi,eax
  41ff18:	push   ebp
  41ff19:	adc    esp,ebx
  41ff1b:	mov    ds:0xdb515eb0,al
  41ff20:	xor    esi,esp
  41ff22:	in     al,0xef
  41ff24:	stos   BYTE PTR es:[edi],al
  41ff25:	or     ebx,DWORD PTR [eax-0x44243ae]
  41ff2b:	push   0xc61a1f53
  41ff30:	sahf   
  41ff31:	jmp    0x9186:0xb45455b9
  41ff38:	outs   dx,BYTE PTR ds:[esi]
  41ff39:	cmc    
  41ff3a:	cdq    
  41ff3b:	(bad)  
  41ff3c:	pop    edx
  41ff3d:	(bad)  [ebp-0x5e39a193]
  41ff43:	ja     0x41ff8a
  41ff45:	dec    eax
  41ff46:	test   al,0xe5
  41ff48:	mov    ah,0x7b
  41ff4a:	call   0xecc8:0x39cdafc
  41ff51:	xchg   ecx,eax
  41ff52:	hlt    
  41ff53:	xchg   ecx,eax
  41ff54:	lock test edi,eax
  41ff57:	dec    ebx
  41ff58:	pop    ebx
  41ff59:	aad    0xd
  41ff5b:	mov    ds:0x27addaa9,al
  41ff60:	and    eax,0xc9c3cc7f
  41ff65:	jmp    0x6bf0:0xe1105957
  41ff6c:	pop    edi
  41ff6d:	fdivr  st(4),st
  41ff6f:	(bad)  
  41ff70:	jo     0x41ffd9
  41ff72:	jmp    0x41ffab
  41ff74:	xchg   ebp,eax
  41ff75:	push   ds
  41ff76:	push   es
  41ff77:	or     eax,0x77903e38
  41ff7c:	arpl   WORD PTR [edi-0x37],cx
  41ff7f:	cmp    al,0x3f
  41ff81:	fmul   QWORD PTR [ebx-0x27176a34]
  41ff87:	adc    al,0x8c
  41ff89:	sub    al,bh
  41ff8b:	test   BYTE PTR [eax-0x60ecb73a],cl
  41ff91:	hlt    
  41ff92:	ret    
  41ff93:	pop    ebp
  41ff94:	and    ebx,DWORD PTR [edi-0x53]
  41ff97:	xor    dl,0x55
  41ff9a:	mov    ds:0xd8e92d4d,eax
  41ff9f:	mov    ecx,0x6dc69aaa
  41ffa4:	gs aam 0xb8
  41ffa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffa8:	mov    bl,0xbd
  41ffaa:	mov    ebx,0x251f8667
  41ffaf:	std    
  41ffb0:	mov    ch,dh
  41ffb2:	sbb    al,0x6b
  41ffb4:	rol    DWORD PTR [edi+0xc],1
  41ffb7:	frstor [edx]
  41ffb9:	xchg   DWORD PTR [esp+eax*1+0xc],edx
  41ffbd:	sub    ah,ch
  41ffbf:	mov    esi,0x5d46ee9f
  41ffc4:	mov    al,0x65
  41ffc6:	fsub   QWORD PTR [edx-0x7a7c884b]
  41ffcc:	inc    esi
  41ffcd:	in     al,dx
  41ffce:	loopne 0x42000b
  41ffd0:	mov    ds,WORD PTR [edx-0x1407d5d6]
  41ffd6:	(bad)  
  41ffd7:	pop    edi
  41ffd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffd9:	push   cs
  41ffda:	repz rcr BYTE PTR [ebx],cl
  41ffdd:	add    ecx,DWORD PTR [edi-0xd]
  41ffe0:	cli    
  41ffe1:	and    dl,BYTE PTR [ebp-0x5]
  41ffe4:	pusha  
  41ffe5:	cwde   
  41ffe6:	add    bh,cl
  41ffe8:	dec    ebx
  41ffe9:	mov    dh,BYTE PTR [ebx+0x79603b3c]
  41ffef:	inc    edx
  41fff0:	hlt    
  41fff1:	and    DWORD PTR [edi+eax*8+0x30],esp
  41fff5:	(bad)  
  41fff6:	mov    ds:0x22d239ff,al
  41fffb:	push   edx
  41fffc:	iret   
  41fffd:	and    bl,BYTE PTR [ebp+0x1f]
  420000:	imul   ecx,DWORD PTR [esp+esi*4-0x24c6df2],0x60
  420008:	outs   dx,DWORD PTR ds:[esi]
  420009:	inc    esp
  42000a:	cmp    DWORD PTR ss:[ebp-0x5fe8d5f2],eax
  420011:	or     ebp,ebp
  420013:	adc    DWORD PTR [edx-0x6c890508],0xffffffee
  42001a:	pushf  
  42001b:	push   ss
  42001c:	ins    DWORD PTR es:[edi],dx
  42001d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42001e:	mov    dl,0xdf
  420020:	sub    al,0x26
  420022:	inc    esp
  420023:	add    BYTE PTR [eax+0x58],ah
  420026:	ss adc al,0xc2
  420029:	lds    ecx,FWORD PTR [esi+eax*2-0x4]
  42002d:	mov    esp,DWORD PTR [ecx+edi*4+0x1162a112]
  420034:	dec    ebp
  420035:	shl    DWORD PTR [ecx+0x17db6bd7],cl
  42003b:	inc    ecx
  42003c:	inc    edi
  42003d:	mov    dh,0x8
  42003f:	inc    ebp
  420040:	les    esi,FWORD PTR [eax+0x36]
  420043:	dec    ebp
  420044:	mov    DWORD PTR [ecx-0x6dca5251],eax
  42004a:	mov    al,0x5a
  42004c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42004d:	inc    eax
  42004e:	jmp    0xb8d70cb6
  420053:	test   eax,0xa65f491
  420058:	cld    
  420059:	or     eax,0xdb0c4e53
  42005e:	push   0x51
  420060:	add    bh,BYTE PTR [esi]
  420062:	lahf   
  420063:	and    ch,ch
  420065:	xchg   esp,eax
  420066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420067:	outs   dx,BYTE PTR ds:[esi]
  420068:	fldenv [edi-0x35bf5d44]
  42006e:	pop    ss
  42006f:	mov    eax,ds:0x69422c25
  420074:	adc    al,0xff
  420076:	pop    esp
  420077:	cwde   
  420078:	mov    ebx,0x822a2257
  42007d:	imul   ebp,eax,0x90b40590
  420083:	mov    ah,0xe0
  420085:	sbb    dh,bh
  420087:	xchg   ecx,eax
  420088:	push   es
  420089:	scas   eax,DWORD PTR es:[edi]
  42008a:	retf   0xb5f2
  42008d:	rcr    ch,1
  42008f:	pushf  
  420090:	sub    ch,BYTE PTR [ebx-0x5e]
  420093:	cld    
  420094:	adc    edi,ebp
  420096:	stos   BYTE PTR es:[di],al
  420098:	push   cs
  420099:	repnz call 0xf3ff:0xbfb093f5
  4200a1:	out    0xb3,al
  4200a3:	pop    eax
  4200a4:	push   ebx
  4200a5:	jmp    0x420112
  4200a7:	neg    bl
  4200a9:	push   es
  4200aa:	mov    bh,0x60
  4200ac:	push   edi
  4200ad:	dec    edx
  4200ae:	cmp    eax,eax
  4200b0:	bts    edi,eax
  4200b3:	adc    bl,BYTE PTR [ebx-0x44c97a3]
  4200b9:	out    0x3d,eax
  4200bb:	push   0x5cc4df9b
  4200c0:	out    0x0,eax
  4200c2:	sbb    BYTE PTR [ebx-0x2e],0x3a
  4200c6:	leave  
  4200c7:	mov    DWORD PTR [ebx+esi*1+0x65],esp
  4200cb:	mov    dl,0x6
  4200cd:	mov    ah,BYTE PTR [ecx-0x2a]
  4200d0:	mov    BYTE PTR [ecx+0x78f292a1],dh
  4200d6:	loope  0x4200fc
  4200d8:	out    0xf3,eax
  4200da:	fdiv   QWORD PTR [edi-0x69]
  4200dd:	jo     0x42006e
  4200df:	sbb    bh,BYTE PTR [ecx-0x5aad1c71]
  4200e5:	xor    cl,BYTE PTR [edi]
  4200e7:	aaa    
  4200e8:	dec    esi
  4200e9:	adc    ah,BYTE PTR [bx+di-0x4a]
  4200ed:	pushf  
  4200ee:	push   ds
  4200ef:	cdq    
  4200f0:	adc    BYTE PTR [ebx-0x79f26b17],al
  4200f6:	fadd   DWORD PTR [ecx+0x19]
  4200f9:	or     eax,0xea926d68
  4200fe:	sbb    cl,BYTE PTR [esi-0x2e]
  420101:	popa   
  420102:	cld    
  420103:	sbb    DWORD PTR [edi-0x10b86f99],ebp
  420109:	nop
  42010a:	icebp  
  42010b:	std    
  42010c:	pop    ss
  42010d:	(bad)  
  42010e:	call   0xd8fdde84
  420113:	sub    DWORD PTR [ebx+0xd59c5cf],0xffffffd9
  42011a:	xlat   BYTE PTR ds:[ebx]
  42011b:	cmp    ah,BYTE PTR [ebp-0x4c06a0f3]
  420121:	sub    bh,BYTE PTR [ecx+0x608a96b0]
  420127:	push   es
  420128:	jns    0x42019f
  42012a:	jmp    0x4200c1
  42012c:	xor    al,0xeb
  42012e:	jno    0x4200d1
  420130:	mov    esi,0x7804e914
  420135:	ins    DWORD PTR es:[edi],dx
  420136:	adc    edi,edx
  420138:	test   al,0x7b
  42013a:	and    BYTE PTR [ecx-0x89aec7a],0x57
  420141:	sar    BYTE PTR [edx+0x2dc1fde8],1
  420147:	jl     0x420128
  420149:	push   0x3a
  42014b:	add    BYTE PTR [edx+ebp*2-0x2e],bl
  42014f:	popa   
  420150:	call   0x27e67b08
  420155:	daa    
  420156:	jnp    0x42018d
  420158:	psubb  mm2,QWORD PTR [ebp+0x7d106462]
  42015f:	call   0xcbdf:0x25c4990
  420166:	mov    al,ds:0x5dbc6e06
  42016b:	pop    edx
  42016c:	pop    esi
  42016d:	fst    QWORD PTR [ecx-0x4b]
  420170:	pop    ecx
  420171:	sbb    BYTE PTR [ecx-0x58ef6c8a],cl
  420177:	dec    esi
  420178:	mov    esi,0xe7887bf2
  42017d:	shl    BYTE PTR [ebx-0x42],cl
  420180:	ret    0x272b
  420183:	(bad)  
  420184:	mov    bh,bh
  420186:	sbb    al,0xf3
  420188:	dec    BYTE PTR [eax+0x58f73eb9]
  42018e:	xor    esp,DWORD PTR [ecx-0x5c]
  420191:	iret   
  420192:	jno    0x420151
  420194:	or     cl,dl
  420196:	aas    
  420197:	fst    st(6)
  420199:	test   eax,0xea8e76bd
  42019e:	pop    esp
  42019f:	mov    ebx,0xc54d6c2c
  4201a4:	sub    ebx,0xffffffe2
  4201a7:	mov    bh,dh
  4201a9:	cmp    esi,DWORD PTR [eax-0x8204ce4]
  4201af:	push   0x749a7950
  4201b4:	jbe    0x4201b4
  4201b6:	pop    ds
  4201b7:	mov    al,ds:0x6625d74d
  4201bc:	inc    ecx
  4201bd:	mov    ebp,0xe6cb0f22
  4201c2:	xchg   ebp,eax
  4201c3:	xchg   edi,eax
  4201c4:	jge    0x4201c2
  4201c6:	xor    al,0x2f
  4201c8:	adc    al,0x1f
  4201ca:	mov    bl,0x29
  4201cc:	inc    eax
  4201cd:	xchg   esp,eax
  4201ce:	xchg   ebx,eax
  4201cf:	adc    bl,dl
  4201d1:	or     ch,ah
  4201d3:	and    BYTE PTR [ebx-0x4a],0xc4
  4201d7:	xchg   ecx,eax
  4201d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201d9:	jae    0x420168
  4201db:	inc    esp
  4201dc:	ins    DWORD PTR es:[edi],dx
  4201dd:	inc    edi
  4201de:	ss jecxz 0x4201c3
  4201e1:	jne    0x4201be
  4201e3:	les    ebp,FWORD PTR [ebx-0x4f0eddf]
  4201e9:	shl    DWORD PTR [ebx],1
  4201eb:	cmp    bh,BYTE PTR [edx+0x6f]
  4201ee:	sar    BYTE PTR [ebx],0x44
  4201f1:	and    al,0x9c
  4201f3:	idiv   DWORD PTR [edx-0x6cbc3fb2]
  4201f9:	aam    0xd6
  4201fb:	push   edi
  4201fc:	cdq    
  4201fd:	retf   0xdb79
  420200:	int3   
  420201:	inc    edi
  420202:	pushf  
  420203:	inc    ebx
  420204:	lock sti 
  420206:	jbe    0x420250
  420208:	inc    esp
  420209:	hlt    
  42020a:	into   
  42020b:	out    dx,eax
  42020c:	sbb    al,0xef
  42020e:	scas   al,BYTE PTR es:[edi]
  42020f:	outs   dx,DWORD PTR ds:[esi]
  420210:	lds    edi,FWORD PTR [eax]
  420212:	sub    ch,bl
  420214:	xor    edi,DWORD PTR [ecx+0x24]
  420217:	out    0xc3,eax
  420219:	pop    ebx
  42021a:	mov    bh,0xdd
  42021c:	mov    esp,0x4734450c
  420221:	xchg   ebp,eax
  420222:	push   0x17
  420224:	adc    BYTE PTR [edx-0x55],bl
  420227:	bound  esi,QWORD PTR [ecx+ecx*8+0x1da0930f]
  42022e:	mov    al,ds:0x910418c0
  420233:	pop    ss
  420234:	push   ebx
  420235:	sar    BYTE PTR [edx-0x25],1
  420238:	dec    ebp
  420239:	inc    esp
  42023a:	cmc    
  42023b:	xchg   edx,eax
  42023c:	loopne 0x4201e3
  42023e:	jne    0x42025d
  420240:	pop    ds
  420241:	push   ecx
  420242:	daa    
  420243:	cli    
  420244:	xor    al,0xf8
  420246:	xorps  xmm3,XMMWORD PTR [esi-0x3295df14]
  42024d:	sub    al,0x1a
  42024f:	push   ss
  420250:	mov    eax,ds:0xecd197f1
  420255:	bnd jae 0x420273
  420258:	cmp    al,0x66
  42025a:	sbb    al,0x81
  42025c:	mov    ecx,0x1fcb3a27
  420261:	mov    esp,0x8560e020
  420266:	ins    BYTE PTR es:[edi],dx
  420267:	aam    0x8a
  420269:	or     eax,edx
  42026b:	dec    edi
  42026c:	mov    dh,0x5a
  42026e:	gs pop ecx
  420270:	fadd   DWORD PTR [edi-0x6d]
  420273:	and    al,0x97
  420275:	push   edi
  420276:	mov    ?,WORD PTR [esi]
  420278:	cmp    BYTE PTR [ebp+0x56cc3502],cl
  42027e:	movups XMMWORD PTR [esi-0x478d779a],xmm7
  420285:	ret    0x1f6e
  420288:	dec    esp
  420289:	inc    ebx
  42028a:	inc    BYTE PTR [edx+0x6c]
  42028d:	cmp    ah,BYTE PTR [ebx-0x5200118e]
  420293:	aad    0x1a
  420295:	xor    ecx,DWORD PTR [edx+0x33]
  420298:	adc    dh,BYTE PTR [esp+eax*2]
  42029b:	dec    ebp
  42029c:	loop   0x4202a0
  42029e:	in     al,dx
  42029f:	dec    edx
  4202a0:	enter  0x3e88,0x51
  4202a4:	(bad)  
  4202a5:	stos   DWORD PTR es:[edi],eax
  4202a6:	addr16 out dx,eax
  4202a8:	push   eax
  4202a9:	sar    edi,cl
  4202ab:	test   DWORD PTR [edx+0x4c],esp
  4202ae:	xor    al,0x5d
  4202b0:	inc    edi
  4202b1:	outs   dx,BYTE PTR ds:[esi]
  4202b2:	test   DWORD PTR [ebp-0x1ad8ddc7],0x7fce1fb3
  4202bc:	arpl   WORD PTR [ecx],dx
  4202be:	js     0x42024a
  4202c0:	jg     0x420251
  4202c2:	mov    bh,0xef
  4202c4:	jl     0x4202bd
  4202c6:	lea    edi,[ebx-0x6aefc90d]
  4202cc:	fwait
  4202cd:	jle    0x42025a
  4202cf:	dec    ecx
  4202d0:	cmp    BYTE PTR [edi+0x6a],0xe2
  4202d4:	inc    esi
  4202d5:	test   BYTE PTR [ebx+edi*8],bh
  4202d8:	inc    ebp
  4202d9:	jno    0x42032e
  4202db:	aaa    
  4202dc:	stos   BYTE PTR es:[edi],al
  4202dd:	mov    ebx,0xd13ef4df
  4202e2:	ror    DWORD PTR [eax+0x35],0x4c
  4202e6:	mov    esp,0xf7e25b1a
  4202eb:	scas   eax,DWORD PTR es:[edi]
  4202ec:	stos   DWORD PTR es:[edi],eax
  4202ed:	pop    edi
  4202ee:	mov    WORD PTR [esi+0x60],ss
  4202f1:	jno    0x4202b5
  4202f3:	push   cs
  4202f4:	or     eax,DWORD PTR [eax]
  4202f6:	call   0x9ce6:0xdea27398
  4202fd:	into   
  4202fe:	xchg   esp,eax
  4202ff:	push   esp
  420300:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420301:	cmp    DWORD PTR [ebx+0x7620ec1e],edx
  420307:	test   BYTE PTR [ebx],0x9c
  42030a:	mov    ah,0xf4
  42030c:	rcr    DWORD PTR [edx+0x5b],0xbf
  420310:	test   BYTE PTR [ebx],ch
  420312:	enter  0xe0c2,0xb2
  420316:	cmp    BYTE PTR [ebp-0x79],cl
  420319:	jp     0x4202d3
  42031b:	mov    eax,ds:0xa59cc8ea
  420320:	xchg   edi,eax
  420321:	rcr    BYTE PTR [edx-0x6f],1
  420324:	pusha  
  420325:	daa    
  420326:	out    0x5,eax
  420328:	int    0x2b
  42032a:	(bad)  
  42032c:	and    BYTE PTR [ecx],bh
  42032e:	or     bh,BYTE PTR [esi-0x67cfbc8a]
  420334:	out    0x43,al
  420336:	adc    DWORD PTR [esi-0x78],ecx
  420339:	out    dx,al
  42033a:	(bad)  
  42033b:	imul   ebp,DWORD PTR [edi+0xf5e2e82],0x2
  420342:	and    dl,cl
  420344:	dec    eax
  420345:	jle    0x42039f
  420347:	lds    edi,FWORD PTR [esi-0x32]
  42034a:	mov    esi,0x4c9c6e8
  42034f:	rcl    bx,1
  420352:	and    ch,BYTE PTR [ebp-0x24645969]
  420358:	or     BYTE PTR [ebp*4+0xee498a6],0x24
  420360:	(bad)  
  420361:	pushf  
  420362:	mov    esi,0xd2a52adc
  420367:	test   eax,0x3d349b14
  42036c:	jno    0x42039e
  42036e:	pop    ss
  42036f:	or     DWORD PTR [ecx-0x7e748ce6],0x71aeaac8
  420379:	dec    esp
  42037a:	add    ebp,eax
  42037c:	fndisi(8087 only) 
  42037e:	ret    0x549c
  420381:	cmp    eax,0xbc0392f9
  420386:	sub    ecx,0x70219c2b
  42038c:	push   es
  42038d:	repz call 0xeffcd175
  420393:	push   0xffffffa7
  420395:	mov    eax,DWORD PTR [eax+0x5bd34537]
  42039b:	popf   
  42039c:	push   es
  42039d:	mov    eax,0x89a11d48
  4203a2:	test   bl,dl
  4203a4:	mov    edi,0xb7a7144b
  4203a9:	in     al,0x35
  4203ab:	mov    ds:0xcd4f40a8,eax
  4203b0:	xor    DWORD PTR [esp+eax*4+0x117ba7],esi
  4203b7:	nop
  4203b8:	dec    DWORD PTR [edx]
  4203ba:	inc    esi
  4203bb:	gs inc esi
  4203bd:	scas   al,BYTE PTR es:[edi]
  4203be:	jne    0x420370
  4203c0:	icebp  
  4203c1:	inc    edx
  4203c2:	stos   DWORD PTR es:[edi],eax
  4203c3:	push   es
  4203c4:	pop    esp
  4203c5:	enter  0x4e3b,0xe7
  4203c9:	ficom  WORD PTR [eax-0x2a]
  4203cc:	out    dx,eax
  4203cd:	mov    edi,0x477a3a7c
  4203d2:	aad    0x3e
  4203d4:	(bad)  
  4203d5:	aam    0xba
  4203d7:	je     0x42041d
  4203d9:	int    0x17
  4203db:	dec    edx
  4203dc:	or     DWORD PTR [ebx],esp
  4203de:	jae    0x42045a
  4203e0:	inc    ebx
  4203e1:	pop    esi
  4203e2:	push   ds
  4203e3:	popa   
  4203e4:	repnz (bad) 
  4203e6:	dec    ebp
  4203e7:	dec    ebx
  4203e8:	fmul   QWORD PTR [ebx+esi*1-0x28]
  4203ec:	aas    
  4203ed:	daa    
  4203ee:	(bad)  
  4203ef:	and    BYTE PTR [eax],al
  4203f1:	jbe    0x420453
  4203f3:	jae    0x4203a0
  4203f5:	jmp    0x2076e42e
  4203fa:	inc    esp
  4203fb:	push   eax
  4203fc:	jmp    0xc5644160
  420401:	imul   ebx,esp,0xffffffa8
  420404:	fsincos 
  420406:	adc    eax,0x882ede69
  42040b:	dec    eax
  42040c:	bound  edi,QWORD PTR [eax]
  42040e:	jle    0x4203d5
  420410:	das    
  420411:	dec    ebp
  420412:	test   eax,0xb404dc3a
  420417:	fdivr  QWORD PTR [edi-0x8]
  42041a:	dec    eax
  42041b:	in     eax,dx
  42041c:	adc    al,0xf
  42041e:	retf   
  42041f:	jl     0x4203be
  420421:	cdq    
  420422:	push   esi
  420423:	dec    ebp
  420424:	cmp    DWORD PTR [ecx+0x63],0x87ac9ec7
  42042b:	or     BYTE PTR [ecx],al
  42042d:	inc    esi
  42042e:	in     al,dx
  42042f:	mov    esi,0xa2b5a551
  420434:	icebp  
  420435:	(bad)  
  420436:	ror    ebx,1
  420438:	mov    dl,0xc1
  42043a:	jmp    0xda837ab8
  42043f:	cli    
  420440:	nop
  420441:	mov    al,0xcb
  420443:	shl    DWORD PTR [ecx+ebx*4-0x51ca7f8d],cl
  42044a:	push   0xffffffa6
  42044c:	into   
  42044d:	sbb    al,0x9f
  42044f:	fs (bad) 
  420451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420452:	lds    eax,FWORD PTR [esi+0x78]
  420455:	nop
  420456:	or     BYTE PTR [esp+ebp*8-0x26e2c98a],dl
  42045d:	out    0x25,eax
  42045f:	push   ebx
  420460:	test   eax,0x22b2d94
  420465:	mov    al,0x30
  420467:	(bad)  
  420468:	sub    ebx,eax
  42046a:	aaa    
  42046b:	clc    
  42046c:	aas    
  42046d:	mov    ecx,0x7a27b72f
  420472:	xor    edi,DWORD PTR [ebx+0x6f559ecf]
  420478:	mov    edx,0xd17f1f7f
  42047d:	adc    eax,0x4a953ac4
  420482:	or     DWORD PTR [ebx],ecx
  420484:	adc    BYTE PTR [edi],dl
  420486:	cmp    al,0xf9
  420488:	mov    al,ds:0x45d227a7
  42048d:	repnz enter 0x4850,0x4d
  420492:	mov    esp,0xfa114564
  420497:	aas    
  420498:	add    eax,0xeccb9b7f
  42049d:	push   0x0
  42049f:	leave  
  4204a0:	mov    eax,ds:0x2086348f
  4204a5:	rol    DWORD PTR [ecx-0x4000b374],0x77
  4204ac:	(bad)  
  4204ad:	hlt    
  4204ae:	ffree  st(0)
  4204b0:	pop    edi
  4204b1:	dec    esi
  4204b2:	loope  0x420481
  4204b4:	(bad)  
  4204b5:	mov    ebp,DWORD PTR [edi-0x44]
  4204b8:	outs   dx,BYTE PTR ds:[esi]
  4204b9:	push   ebp
  4204ba:	mov    ebx,0xa6b786a3
  4204bf:	push   edx
  4204c0:	aas    
  4204c1:	or     edx,ebx
  4204c3:	or     bl,ch
  4204c5:	and    BYTE PTR [ecx-0x3116b2f7],ch
  4204cb:	int3   
  4204cc:	sahf   
  4204cd:	out    0xc1,eax
  4204cf:	sub    al,0x9
  4204d1:	adc    ebx,esi
  4204d3:	mov    ecx,0x98f0a8fc
  4204d8:	cmp    BYTE PTR [esi+eiz*2+0x6d],bl
  4204dc:	sti    
  4204dd:	popa   
  4204de:	or     BYTE PTR [ebx+0x5],bh
  4204e1:	push   edx
  4204e2:	stos   BYTE PTR es:[edi],al
  4204e3:	mov    edx,0xdc9ae1
  4204e8:	pop    edi
  4204e9:	dec    eax
  4204ea:	out    dx,eax
  4204eb:	ins    DWORD PTR es:[edi],dx
  4204ec:	(bad)  
  4204ed:	or     BYTE PTR fs:[esi+edi*4],cl
  4204f1:	jb     0x420562
  4204f3:	je     0x420509
  4204f5:	call   FWORD PTR [edi+0x45d3da59]
  4204fb:	add    DWORD PTR [edx],0xe77f173a
  420501:	in     al,dx
  420502:	dec    edi
  420503:	or     esi,edx
  420505:	rcr    BYTE PTR [ebp+0x58],1
  420508:	sbb    eax,0x281720dc
  42050d:	mov    ds:0xb0351f0c,eax
  420512:	pop    ecx
  420513:	adc    eax,0xfb303209
  420518:	xchg   ecx,eax
  420519:	call   0xfd78:0x98fbc596
  420520:	rcr    DWORD PTR [edi],1
  420522:	sbb    DWORD PTR [ecx-0x3c124094],ebx
  420528:	or     bl,BYTE PTR [ecx+0x1f]
  42052b:	or     ah,BYTE PTR [ebx+0x7d]
  42052e:	arpl   WORD PTR [esi-0x53],si
  420531:	mov    WORD PTR [eax-0x9],es
  420534:	jle    0x4204e1
  420536:	pop    esp
  420537:	jne    0x420540
  420539:	push   ebx
  42053a:	jne    0x4204fe
  42053c:	xchg   edi,esi
  42053e:	retf   0x3cd3
  420541:	(bad)  
  420542:	int    0x77
  420544:	ds sub al,0xbc
  420547:	jp     0x420564
  420549:	sub    ah,ah
  42054b:	and    edi,ecx
  42054d:	adc    DWORD PTR [ebp-0x50],0x31dc2373
  420554:	jno    0x4205c2
  420556:	inc    ebp
  420557:	mov    esp,0x31324433
  42055c:	adc    eax,0x7bc498ac
  420561:	pushf  
  420562:	test   BYTE PTR [eax-0x3aee0be],ch
  420568:	lock dec ebx
  42056a:	pop    ecx
  42056b:	retf   
  42056c:	(bad)  
  42056d:	xchg   esp,eax
  42056e:	add    DWORD PTR [ebx-0x51],esp
  420571:	(bad)  [edi-0x50]
  420574:	out    0xd1,eax
  420576:	dec    edx
  420577:	bound  esi,QWORD PTR [edx+eax*4]
  42057a:	rcl    DWORD PTR [ebx+0x41],0x16
  42057e:	add    DWORD PTR [edi-0xb9b4b14],ecx
  420584:	and    ecx,DWORD PTR [eax-0x4d]
  420587:	dec    edi
  420588:	pop    esp
  420589:	jns    0x4205fa
  42058b:	jb     0x4205f4
  42058d:	fld    DWORD PTR [ebx+0x2e]
  420590:	mov    ds:0xa3ed040e,eax
  420595:	lods   al,BYTE PTR ds:[esi]
  420596:	inc    edx
  420597:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420598:	sbb    DWORD PTR [ecx+0x19],ebx
  42059b:	and    edi,DWORD PTR [ecx+esi*8+0x5dce23a7]
  4205a2:	mov    edi,0xff3c5ce8
  4205a7:	stc    
  4205a8:	jmp    0x4205c6
  4205aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205ab:	mov    ebp,0x4dd1fa90
  4205b0:	out    0x36,al
  4205b2:	lahf   
  4205b3:	mov    bl,0xcc
  4205b5:	gs dec ebp
  4205b7:	jp     0x4205c6
  4205b9:	mov    ah,al
  4205bb:	xlat   BYTE PTR ds:[ebx]
  4205bc:	ja     0x420541
  4205be:	jecxz  0x42057c
  4205c0:	jo     0x4205f6
  4205c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205c3:	stos   BYTE PTR es:[edi],al
  4205c4:	repnz xor DWORD PTR [eax-0x64759d9b],edi
  4205cb:	gs mov edx,0x4cfcaba0
  4205d1:	sub    eax,0xe0b13fc5
  4205d6:	popf   
  4205d7:	mov    dl,bh
  4205d9:	inc    ecx
  4205da:	(bad)  
  4205db:	sub    al,0x57
  4205dd:	mov    edi,0x3caf8d2b
  4205e2:	jle    0x4205a9
  4205e4:	push   edi
  4205e5:	inc    ebp
  4205e6:	cdq    
  4205e7:	cmp    eax,0x891d6597
  4205ec:	mov    BYTE PTR [esi-0x7e3f8ea6],al
  4205f2:	adc    al,0x6d
  4205f4:	lods   eax,DWORD PTR ds:[esi]
  4205f5:	xchg   edi,eax
  4205f6:	push   ds
  4205f7:	imul   ecx,DWORD PTR [ebx+0x1d0266f8],0x9a1bf51b
  420601:	pop    ecx
  420602:	popa   
  420603:	ins    DWORD PTR es:[edi],dx
  420604:	add    eax,DWORD PTR [esi+0x36]
  420607:	push   edx
  420608:	dec    ecx
  420609:	dec    eax
  42060a:	bound  ecx,QWORD PTR [edx-0xbfcc574]
  420610:	push   0xffffff96
  420612:	not    DWORD PTR [edx+0x71]
  420615:	iret   
  420616:	xor    al,0x89
  420618:	mov    BYTE PTR [ebx+0x4b],cl
  42061b:	mov    dl,0xd6
  42061d:	cmp    bh,BYTE PTR [eax-0x18]
  420620:	js     0x420682
  420622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420623:	mov    cl,ah
  420625:	or     DWORD PTR [esi-0x4b128fdd],esi
  42062b:	sub    eax,0x748500ff
  420630:	mov    al,ds:0x98e9c7f2
  420635:	lods   eax,DWORD PTR ds:[esi]
  420636:	cmp    eax,0x938bf5c8
  42063b:	push   DWORD PTR [edi+0x164e1a37]
  420641:	or     ebp,DWORD PTR [ebx+eiz*1-0x4]
  420645:	jg     0x4206b6
  420647:	pop    edi
  420648:	sub    eax,DWORD PTR [ecx+0x1a]
  42064b:	mov    al,0x75
  42064d:	(bad)  
  42064e:	mov    bh,ch
  420650:	cli    
  420651:	sbb    edi,DWORD PTR [edi-0x40]
  420654:	push   edx
  420655:	addr16 loope 0x420672
  420658:	lahf   
  420659:	pop    eax
  42065a:	push   edi
  42065b:	dec    ecx
  42065c:	and    DWORD PTR [ecx+0x16cc035],ebx
  420662:	sub    eax,0x340e6a9
  420667:	cmp    al,0xe2
  420669:	add    al,0x32
  42066b:	inc    edx
  42066c:	fwait
  42066d:	cld    
  42066e:	jnp    0x420660
  420670:	(bad)  
  420671:	push   esi
  420672:	rcr    BYTE PTR ds:0x160f8fa6,1
  420678:	ins    BYTE PTR es:[edi],dx
  420679:	mov    BYTE PTR [edx-0x58],bl
  42067c:	push   ss
  42067d:	or     BYTE PTR [eax],dh
  42067f:	dec    eax
  420680:	pop    ds
  420681:	scas   eax,DWORD PTR es:[edi]
  420682:	ss in  al,dx
  420684:	out    0x65,al
  420686:	xor    al,0xa3
  420688:	sbb    al,0x4f
  42068a:	xor    BYTE PTR [esp+ebp*4],cl
  42068d:	lahf   
  42068e:	aad    0x84
  420690:	xor    bh,BYTE PTR [ecx+0x18]
  420693:	jno    0x4206dc
  420695:	cli    
  420696:	stc    
  420697:	or     DWORD PTR [ecx-0x4],ecx
  42069a:	and    ch,0xf8
  42069d:	mov    esp,0xb899fffd
  4206a2:	mov    dl,0xde
  4206a4:	sbb    esi,eax
  4206a6:	add    al,0x3f
  4206a8:	sbb    al,BYTE PTR [edi-0x53]
  4206ab:	or     bl,bh
  4206ad:	jmp    0x7a6d:0xe1547126
  4206b4:	push   0xffffff91
  4206b6:	arpl   WORD PTR ds:0xe09b8665,si
  4206bc:	pop    edi
  4206bd:	int3   
  4206be:	fld    TBYTE PTR [eax-0x2b4578aa]
  4206c4:	sbb    edx,DWORD PTR [ebx]
  4206c6:	in     al,dx
  4206c7:	fisttp WORD PTR [eax+eax*8]
  4206ca:	adc    ecx,DWORD PTR [ebp+0x13a46d3d]
  4206d0:	shr    BYTE PTR [edx-0x42],0x88
  4206d4:	pavgb  mm1,QWORD PTR [edi+0x79ebf008]
  4206db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206dc:	add    cl,BYTE PTR [eax-0x7c2e29e]
  4206e2:	push   es
  4206e3:	xchg   esi,eax
  4206e4:	cwde   
  4206e5:	dec    ebp
  4206e6:	lock sub dh,ch
  4206e9:	in     eax,dx
  4206ea:	js     0x4206fd
  4206ec:	xchg   edi,eax
  4206ed:	dec    ebx
  4206ee:	cmp    DWORD PTR [esi-0x46e6c88a],ebp
  4206f4:	mov    ecx,DWORD PTR [ebx]
  4206f6:	cmp    eax,0xaa23b9f1
  4206fb:	dec    esi
  4206fc:	or     DWORD PTR [eax],ebx
  4206fe:	jae    0x42075f
  420700:	xchg   esi,eax
  420701:	xor    DWORD PTR [esi-0x12],ebx
  420704:	jmp    0xaa9ce45c
  420709:	xor    ah,BYTE PTR [edi+0x5d]
  42070c:	jb     0x4206f2
  42070e:	sbb    dh,ch
  420710:	mov    ecx,ss
  420712:	add    DWORD PTR [ecx],ebp
  420714:	(bad)  
  420715:	popa   
  420716:	jns    0x42070b
  420718:	push   ebx
  420719:	cmp    edi,DWORD PTR [esi-0x73b61fc4]
  42071f:	mov    dh,0x42
  420721:	bound  ebp,QWORD PTR [esi+eiz*1-0x39]
  420725:	ins    DWORD PTR es:[edi],dx
  420726:	xchg   edi,eax
  420727:	sbb    DWORD PTR [ebx+eiz*1-0x1e9b3f3c],esi
  42072e:	nop
  42072f:	mov    DWORD PTR [ebx+0x2aed925],0xe551ad80
  420739:	and    esp,DWORD PTR [edx+0x61aaa077]
  42073f:	neg    BYTE PTR [ebp-0x10948890]
  420745:	adc    ecx,DWORD PTR [edx-0x8]
  420748:	lock cmc 
  42074a:	clc    
  42074b:	mov    dh,0x4f
  42074d:	or     ecx,DWORD PTR [ebx-0x600aea0c]
  420753:	int    0xc2
  420755:	and    ecx,ebp
  420757:	and    eax,0x329e8b3e
  42075c:	test   BYTE PTR [ebp+0x1c363f0a],0x68
  420763:	movlps QWORD PTR [edx+0x10],xmm2
  420767:	repnz mov esp,0x70f20a1d
  42076d:	inc    eax
  42076e:	popf   
  42076f:	mov    cl,0xae
  420771:	mov    al,0x23
  420773:	ins    BYTE PTR es:[edi],dx
  420774:	daa    
  420775:	or     BYTE PTR [edi-0x720b5983],bh
  42077b:	test   al,0x5a
  42077d:	stc    
  42077e:	mov    bh,0xf6
  420780:	jge    0x42071a
  420782:	int3   
  420783:	repz enter 0xbe3a,0xb7
  420788:	jmp    0x420742
  42078a:	sub    dl,BYTE PTR [ecx-0x1f]
  42078d:	call   0x4aa462c1
  420792:	mov    edi,0xa23d06e8
  420797:	fisttp DWORD PTR [eax+0x6b]
  42079a:	adc    DWORD PTR [ebx],edi
  42079c:	add    al,0x4f
  42079e:	cmp    bh,bh
  4207a0:	imul   ecx,DWORD PTR [esi],0x4f
  4207a3:	lods   al,BYTE PTR ds:[esi]
  4207a4:	je     0x420765
  4207a6:	test   eax,0xdad4f19d
  4207ab:	fstp   DWORD PTR [ecx-0x65]
  4207ae:	dec    esp
  4207af:	xchg   esp,eax
  4207b0:	push   edi
  4207b1:	adc    DWORD PTR [ebx],esp
  4207b3:	mov    eax,ds:0xf37ec5da
  4207b8:	or     al,0xa2
  4207ba:	mov    al,ds:0x71382dda
  4207bf:	ins    DWORD PTR es:[edi],dx
  4207c0:	jnp    0x4207f6
  4207c2:	mov    al,0xa0
  4207c4:	xchg   edx,eax
  4207c5:	mov    esi,DWORD PTR [esi+0x3e1d5749]
  4207cb:	popa   
  4207cc:	dec    ebx
  4207cd:	shr    bh,0xd9
  4207d0:	cmovb  ebx,edi
  4207d3:	mov    eax,0x10599c21
  4207d8:	(bad)  
  4207d9:	xor    BYTE PTR [edi],al
  4207db:	push   esi
  4207dc:	les    ecx,FWORD PTR [edx-0x3158705e]
  4207e2:	inc    eax
  4207e3:	jb     0x420852
  4207e5:	jnp    0x4207c6
  4207e7:	jg     0x420771
  4207e9:	ins    BYTE PTR es:[edi],dx
  4207ea:	scas   eax,DWORD PTR es:[edi]
  4207eb:	add    al,0x10
  4207ed:	cli    
  4207ee:	sbb    BYTE PTR [edi],dl
  4207f0:	sub    eax,0x2c9cbbe3
  4207f5:	ins    BYTE PTR es:[edi],dx
  4207f6:	mov    edi,DWORD PTR [eax-0x2d]
  4207f9:	mov    bh,0x91
  4207fb:	pop    edi
  4207fc:	hlt    
  4207fd:	adc    al,0x56
  4207ff:	or     al,0x62
  420801:	jmp    0x420837
  420803:	mov    bl,0xcc
  420805:	fstp   st(4)
  420807:	fild   QWORD PTR fs:[ecx-0x3a]
  42080b:	mov    ds,WORD PTR [edx]
  42080d:	mov    ebx,0xd17da8c9
  420812:	inc    eax
  420813:	sbb    dl,BYTE PTR [ebp+eax*8+0x6]
  420817:	cs mov bh,0xfc
  42081a:	fnsave [ebx+ecx*4-0x79]
  42081e:	scas   al,BYTE PTR es:[edi]
  42081f:	mov    edi,eax
  420821:	lds    eax,FWORD PTR [edi]
  420823:	jle    0x420893
  420825:	sbb    ah,0xe1
  420828:	add    ecx,DWORD PTR [ecx-0x3e]
  42082b:	jne    0x4207fd
  42082d:	push   edi
  42082e:	cmp    al,0x60
  420830:	icebp  
  420831:	sti    
  420832:	stos   BYTE PTR es:[edi],al
  420833:	test   al,0x55
  420835:	sub    BYTE PTR [ecx-0x27c4b79f],0x6e
  42083c:	arpl   WORD PTR [esi-0x487f4465],dx
  420842:	pop    ebp
  420843:	xor    eax,0xc74a2c8e
  420848:	adc    ecx,DWORD PTR ds:0x16771b68
  42084e:	push   esp
  42084f:	test   DWORD PTR [bx],ecx
  420852:	ror    BYTE PTR [ebx-0x6d504786],cl
  420858:	jle    0x42089b
  42085a:	outs   dx,BYTE PTR ds:[esi]
  42085b:	je     0x4208d3
  42085d:	sub    ah,bh
  42085f:	sbb    eax,0xc0f6644a
  420864:	push   esi
  420865:	mov    ch,0x72
  420867:	jne    0x42082e
  420869:	add    DWORD PTR [edx+ebp*8],ebx
  42086c:	jmp    0x4962:0xb813d0e4
  420873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420874:	shl    DWORD PTR [ebp+0x246c6d20],cl
  42087a:	pop    esi
  42087b:	xchg   BYTE PTR [edx-0x2d],al
  42087e:	or     eax,0xc90d23cc
  420883:	mov    edx,0x95025a3c
  420888:	or     al,0x1a
  42088a:	sub    BYTE PTR [edx-0x3eebef93],cl
  420890:	in     al,0xcd
  420892:	and    eax,0x2ba19654
  420897:	add    DWORD PTR [eax],esp
  420899:	aad    0xe9
  42089b:	repz mov esi,0x493a89ea
  4208a1:	cmp    BYTE PTR [edi],0x3d
  4208a4:	sub    BYTE PTR [ebx-0x6ce542fe],dh
  4208aa:	in     eax,0xd7
  4208ac:	mov    DWORD PTR [ebx-0x2394235],ebp
  4208b2:	mov    dl,0x8c
  4208b4:	jmp    0x291a:0x482dfdbb
  4208bb:	or     ebp,DWORD PTR [edx+0x7ceb709]
  4208c1:	clc    
  4208c2:	or     ebp,DWORD PTR [ebx-0x223b47b8]
  4208c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208c9:	(bad)
  4208cc:	sahf   
  4208cd:	jbe    0x42088c
  4208cf:	ss jbe 0x4208d7
  4208d2:	jbe    0x4208e3
  4208d4:	stc    
  4208d5:	fmul   DWORD PTR [edi+0x2025b975]
  4208db:	ss int 0xcf
  4208de:	jmp    0x42094d
  4208e0:	xchg   esp,eax
  4208e1:	bound  edx,QWORD PTR [eax+eax*4]
  4208e4:	in     eax,dx
  4208e5:	icebp  
  4208e6:	ins    DWORD PTR es:[edi],dx
  4208e7:	outs   dx,DWORD PTR ds:[esi]
  4208e8:	jmp    0x5efc:0x51e8bf3b
  4208ef:	add    eax,eax
  4208f1:	int3   
  4208f2:	jnp    0x4208bc
  4208f4:	push   ebp
  4208f5:	dec    ecx
  4208f6:	nop
  4208f7:	ins    DWORD PTR es:[edi],dx
  4208f8:	leave  
  4208f9:	sub    eax,0x41355782
  4208fe:	xor    edi,ebx
  420900:	mov    bl,0x4f
  420902:	pop    esp
  420903:	scas   al,BYTE PTR es:[edi]
  420904:	shr    BYTE PTR [edi-0x79960fc2],cl
  42090a:	dec    ecx
  42090b:	xor    ch,BYTE PTR [ecx]
  42090d:	outs   dx,DWORD PTR ds:[esi]
  42090e:	sub    al,0xc8
  420910:	rcl    ch,1
  420912:	push   edx
  420913:	les    ebp,FWORD PTR [edi-0x7decd816]
  420919:	std    
  42091a:	xor    al,0x55
  42091c:	cmc    
  42091d:	and    al,0x15
  42091f:	adc    DWORD PTR [eax+0x5145333a],esp
  420925:	cld    
  420926:	sub    al,0x2f
  420928:	xlat   BYTE PTR ds:[ebx]
  420929:	icebp  
  42092a:	in     eax,0x50
  42092c:	jmp    0x4208d8
  42092e:	hlt    
  42092f:	iret   
  420930:	or     edi,edx
  420932:	out    dx,eax
  420933:	pop    es
  420934:	rcr    DWORD PTR [eax],0xb5
  420937:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420938:	ss cwde 
  42093a:	and    DWORD PTR [esi+0x693781c5],esp
  420940:	cwde   
  420941:	retf   
  420942:	fwait
  420943:	and    DWORD PTR [ebx],edx
  420945:	inc    esi
  420946:	call   0x94f190b4
  42094b:	mov    ch,0xff
  42094d:	aaa    
  42094e:	scas   eax,DWORD PTR es:[edi]
  42094f:	xchg   edi,eax
  420950:	loopne 0x4208e3
  420952:	sbb    al,0x9c
  420954:	sbb    DWORD PTR [edi-0x4a],0x3e11d772
  42095b:	(bad)  
  42095c:	test   al,0x15
  42095e:	lods   al,BYTE PTR ds:[esi]
  42095f:	mov    ebx,0x56d34998
  420964:	sub    eax,0x31c333bf
  420969:	dec    edi
  42096a:	add    al,0xf2
  42096c:	jns    0x4209ed
  42096e:	mov    cl,0x13
  420970:	jns    0x4208fe
  420972:	lods   al,BYTE PTR ds:[esi]
  420973:	inc    ecx
  420974:	lods   al,BYTE PTR ds:[esi]
  420975:	popa   
  420976:	xchg   esi,esp
  420978:	setg   cl
  42097b:	push   esp
  42097c:	femms  
  42097e:	and    eax,0x7fcf7d95
  420983:	jge    0x420949
  420985:	or     eax,0x4f866579
  42098a:	push   ebx
  42098b:	in     al,dx
  42098c:	popa   
  42098d:	adc    bl,ah
  42098f:	xchg   esp,eax
  420990:	clc    
  420991:	cmp    bl,al
  420993:	add    BYTE PTR [ebp-0x5ea059b8],ah
  420999:	out    0x49,al
  42099b:	test   eax,0x76fff180
  4209a0:	out    0x1f,eax
  4209a2:	push   ebx
  4209a3:	xchg   edi,eax
  4209a4:	jg     0x420a13
  4209a6:	push   0x3b55100d
  4209ab:	cmp    BYTE PTR [esi-0x3e9de9ad],0x25
  4209b2:	cld    
  4209b3:	push   edi
  4209b4:	ss std 
  4209b6:	mov    dl,0xc5
  4209b8:	inc    eax
  4209b9:	(bad)  
  4209ba:	dec    ebp
  4209bb:	mov    ch,0xa
  4209bd:	daa    
  4209be:	dec    ebp
  4209bf:	sub    al,0xad
  4209c1:	mov    ah,BYTE PTR [esi+0x43128c70]
  4209c7:	mov    esi,0x3b231ff5
  4209cc:	int    0x5d
  4209ce:	mov    ebp,0x72044fda
  4209d3:	push   ecx
  4209d4:	bound  edi,QWORD PTR ds:0x627f7bdd
  4209da:	push   ebp
  4209db:	push   esp
  4209dc:	add    DWORD PTR cs:[edi+0x17e46513],0x61ad9698
  4209e7:	mov    cl,0x7
  4209e9:	or     edi,DWORD PTR [ebx+0x6ab844e3]
  4209ef:	mov    ah,BYTE PTR [eax-0x52]
  4209f2:	loopne 0x420a6f
  4209f4:	sbb    DWORD PTR [edi+0x79],edx
  4209f7:	retf   
  4209f8:	(bad)  
  4209f9:	sub    DWORD PTR [esi-0x30],edx
  4209fc:	fmul   QWORD PTR ds:0x755356c3
  420a02:	inc    ebx
  420a03:	nop
  420a04:	clc    
  420a05:	mov    eax,0x980dc88b
  420a0a:	xor    DWORD PTR [ecx-0x72439d40],edx
  420a10:	icebp  
  420a11:	out    dx,al
  420a12:	mov    al,ds:0x289e5e1
  420a17:	add    ch,BYTE PTR [esi-0x57371212]
  420a1d:	(bad)  
  420a1e:	ins    BYTE PTR es:[edi],dx
  420a1f:	dec    edx
  420a20:	(bad)  
  420a21:	jg     0x4209ed
  420a23:	scas   eax,DWORD PTR es:[edi]
  420a24:	jg     0x420a2c
  420a26:	std    
  420a27:	fsub   QWORD PTR [edx+0x52]
  420a2a:	mov    edi,0x9a43990d
  420a2f:	push   esi
  420a30:	sub    eax,0xf489d698
  420a35:	out    dx,al
  420a36:	aaa    
  420a37:	adc    ah,bh
  420a39:	adc    bl,BYTE PTR [ebp+ebp*8-0x607cb426]
  420a40:	or     edx,ecx
  420a42:	imul   DWORD PTR [ecx+edx*1-0x2c]
  420a46:	add    al,0xd9
  420a48:	mov    ecx,0x38e31961
  420a4d:	int    0x2b
  420a4f:	mov    DWORD PTR ds:0x100ac3b9,0x48ca5606
  420a59:	jb     0x420a1a
  420a5b:	nop
  420a5c:	jmp    0x16b9:0xff80e4b
  420a63:	mov    al,0xa7
  420a65:	jnp    0x420ace
  420a67:	mov    esp,ebp
  420a69:	jl     0x420aea
  420a6b:	stos   DWORD PTR es:[edi],eax
  420a6c:	xor    BYTE PTR [ebx+0x1022bf6a],bh
  420a72:	fldcw  WORD PTR [eax+ebx*2+0xd]
  420a76:	jp     0x420a31
  420a78:	(bad)  
  420a79:	in     al,dx
  420a7a:	push   ds
  420a7b:	dec    ebp
  420a7c:	ds pop ebp
  420a7e:	sub    al,0xac
  420a80:	xchg   edx,eax
  420a81:	push   ds
  420a82:	daa    
  420a83:	outs   dx,DWORD PTR ds:[esi]
  420a84:	xchg   ecx,eax
  420a85:	push   edi
  420a86:	test   eax,0x8626c3e9
  420a8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a8c:	adc    eax,0xfddda32f
  420a91:	xchg   esi,eax
  420a92:	(bad)  
  420a93:	push   edi
  420a94:	in     eax,dx
  420a95:	(bad)  
  420a96:	pop    edi
  420a97:	jl     0x420ac5
  420a99:	bswap  ecx
  420a9b:	cdq    
  420a9c:	jno    0x420ab1
  420a9e:	rol    DWORD PTR [edi],0x67
  420aa1:	loop   0x420a92
  420aa3:	push   edi
  420aa4:	les    ebx,FWORD PTR [edi+ebx*4+0x1]
  420aa8:	imul   eax,ebp,0x53
  420aab:	dec    edx
  420aac:	ins    BYTE PTR es:[edi],dx
  420aad:	retf   
  420aae:	xor    esi,DWORD PTR [edi-0xe8ae1af]
  420ab4:	sbb    al,0x15
  420ab6:	mov    eax,0xc0273edd
  420abb:	cli    
  420abc:	aad    0x5d
  420abe:	sbb    al,0x27
  420ac0:	dec    ebp
  420ac1:	mov    edi,0xde13431
  420ac6:	(bad)  [edx+0xb]
  420ac9:	aam    0x3e
  420acb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420acc:	mov    edi,0xf65c36a1
  420ad2:	test   eax,0x122d7d55
  420ad7:	push   ebp
  420ad8:	inc    esi
  420ad9:	sub    dl,BYTE PTR [ebp-0x47e82541]
  420adf:	sahf   
  420ae0:	(bad)  
  420ae1:	push   ss
  420ae2:	xlat   BYTE PTR ds:[ebx]
  420ae3:	push   ds
  420ae4:	aam    0x69
  420ae6:	scas   al,BYTE PTR es:[edi]
  420ae7:	(bad)  
  420ae9:	imul   esi,edi,0x231d6216
  420aef:	adc    eax,ecx
  420af1:	fdivr  st(3),st
  420af3:	aas    
  420af4:	cmc    
  420af5:	and    al,0xbd
  420af7:	inc    edi
  420af8:	inc    esp
  420af9:	adc    eax,0x1f4620e
  420afe:	push   ebp
  420aff:	sahf   
  420b00:	xlat   BYTE PTR ds:[ebx]
  420b01:	dec    edx
  420b02:	scas   al,BYTE PTR es:[edi]
  420b03:	in     eax,0xa2
  420b05:	sahf   
  420b06:	das    
  420b07:	movd   DWORD PTR [ecx],mm3
  420b0a:	xlat   BYTE PTR ds:[ebx]
  420b0b:	jno    0x420a8f
  420b0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b0e:	add    edx,ebx
  420b10:	or     eax,0x48e5fd5
  420b15:	call   0x8ee688f1
  420b1a:	out    dx,eax
  420b1b:	jmp    0x420b3a
  420b1d:	aas    
  420b1e:	push   eax
  420b1f:	jle    0x420b07
  420b21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b22:	inc    eax
  420b23:	push   ecx
  420b24:	das    
  420b25:	mov    al,ds:0x54b96b40
  420b2a:	in     al,0x16
  420b2c:	jo     0x420bab
  420b2e:	xor    eax,0x9a18220f
  420b33:	cmp    DWORD PTR [eax+0x3fc86ac],ebp
  420b39:	or     cl,bl
  420b3b:	inc    esi
  420b3c:	jnp    0x420adb
  420b3e:	ins    BYTE PTR es:[edi],dx
  420b3f:	scas   al,BYTE PTR es:[edi]
  420b40:	sub    dh,BYTE PTR [ecx+0x5]
  420b43:	shl    BYTE PTR [esp+eax*2-0x328b8eb6],0xa0
  420b4b:	dec    esp
  420b4c:	sbb    eax,0x4edabf
  420b51:	aas    
  420b52:	fs pop ds
  420b54:	sbb    al,0x44
  420b56:	or     al,0x60
  420b58:	pop    edx
  420b59:	and    DWORD PTR [edx+0x52005bb3],0xffffff8a
  420b60:	(bad)  
  420b61:	sbb    edx,DWORD PTR [edx]
  420b63:	js     0x420ba2
  420b65:	into   
  420b66:	push   esp
  420b67:	inc    esp
  420b68:	jecxz  0x420be1
  420b6a:	js     0x420b87
  420b6c:	push   cs
  420b6d:	inc    esi
  420b6e:	mov    ds:0x4f07add9,al
  420b73:	std    
  420b74:	mov    al,0x67
  420b76:	jb     0x420b7b
  420b78:	mov    esp,0x28d814ec
  420b7d:	leave  
  420b7e:	das    
  420b7f:	inc    eax
  420b80:	fimul  WORD PTR [ebp-0x5b6483d9]
  420b86:	shl    BYTE PTR [edi+0x66d9e347],0x5a
  420b8d:	cli    
  420b8e:	xacquire xchg BYTE PTR [ecx],cl
  420b91:	jmp    0x6b1b64e1
  420b96:	ins    BYTE PTR es:[edi],dx
  420b97:	dec    eax
  420b98:	fsubr  DWORD PTR [ebx-0x23b18d70]
  420b9e:	arpl   WORD PTR [esi],sp
  420ba0:	pop    ecx
  420ba1:	xchg   esi,eax
  420ba2:	or     eax,0xe6ff05f8
  420ba7:	sub    al,0x37
  420ba9:	aas    
  420baa:	and    cx,WORD PTR [edx]
  420bad:	scas   al,BYTE PTR es:[edi]
  420bae:	outs   dx,DWORD PTR ds:[esi]
  420baf:	pop    eax
  420bb0:	xor    DWORD PTR ds:0xaab3dff7,0x50c98b3b
  420bba:	sbb    eax,0x1e01c069
  420bbf:	sbb    eax,0x7136cd99
  420bc4:	fdiv   st,st(6)
  420bc6:	xor    bl,bl
  420bc8:	daa    
  420bc9:	aas    
  420bca:	scas   eax,DWORD PTR es:[edi]
  420bcb:	popf   
  420bcc:	sbb    BYTE PTR [eax-0x718fefe6],bh
  420bd2:	ja     0x420b99
  420bd4:	mov    ds:0xd9e55d10,al
  420bd9:	int3   
  420bda:	aad    0xf0
  420bdc:	inc    ebp
  420bdd:	fcom   QWORD PTR [esp+ecx*2]
  420be0:	fwait
  420be1:	loope  0x420bec
  420be3:	fild   DWORD PTR [esi]
  420be5:	ficomp WORD PTR [edx]
  420be7:	nop
  420be8:	shl    BYTE PTR [edx+0x677a5f55],1
  420bee:	test   eax,0x6c45c13e
  420bf3:	push   ds
  420bf4:	out    0x7b,al
  420bf6:	aaa    
  420bf7:	push   ecx
  420bf8:	xchg   ebp,eax
  420bf9:	mov    dh,0x2c
  420bfb:	in     eax,dx
  420bfc:	std    
  420bfd:	hlt    
  420bfe:	jmp    0x5107:0xf67b14d0
  420c05:	dec    esi
  420c06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c07:	shl    BYTE PTR [edx-0x77754f85],0xc1
  420c0e:	les    eax,FWORD PTR [eax-0x4c3f2a2f]
  420c14:	sub    eax,0x11eec44b
  420c19:	mov    edx,0xa3e3225c
  420c1e:	push   esp
  420c1f:	div    al
  420c21:	(bad)
  420c24:	leave  
  420c25:	pop    esi
  420c26:	nop
  420c27:	les    edx,FWORD PTR [eax]
  420c29:	jne    0x420c69
  420c2b:	daa    
  420c2c:	hlt    
  420c2d:	sbb    eax,0x7deaab69
  420c32:	inc    edx
  420c33:	sti    
  420c34:	mov    ah,0xea
  420c36:	pop    es
  420c37:	inc    edx
  420c38:	repnz lahf 
  420c3a:	pop    ds
  420c3b:	mov    dl,0x95
  420c3d:	push   edi
  420c3e:	div    BYTE PTR [edx]
  420c40:	push   eax
  420c41:	fisub  WORD PTR [edi]
  420c43:	inc    ebx
  420c44:	retf   
  420c45:	cmp    ebp,DWORD PTR [edx]
  420c47:	jge    0x420c95
  420c49:	dec    esi
  420c4a:	cmovne edi,DWORD PTR [ecx-0x534a8783]
  420c51:	and    DWORD PTR [eax],ebp
  420c53:	addr16 loop 0x420be4
  420c56:	dec    eax
  420c57:	and    DWORD PTR [ebx],ecx
  420c59:	mov    ds:0x906a16aa,eax
  420c5e:	add    DWORD PTR [eax-0x5b9a3a83],esi
  420c64:	es rcr edx,cl
  420c67:	jnp    0x420c5f
  420c69:	(bad)  
  420c6a:	loopne 0x420c5e
  420c6c:	sub    al,0x7
  420c6e:	leave  
  420c6f:	pop    edi
  420c70:	mov    dh,0x5d
  420c72:	sbb    al,0x4
  420c74:	data16 jb 0x420cf4
  420c77:	pop    esp
  420c78:	fcom   QWORD PTR [ecx-0x42]
  420c7b:	xchg   DWORD PTR [ecx+0x75a52843],esi
  420c81:	or     DWORD PTR [esi-0x2],0x33f0392e
  420c88:	(bad)
  420c8b:	jg     0x420cec
  420c8d:	shl    DWORD PTR [eax+eiz*4+0x45],0x43
  420c92:	jecxz  0x420c70
  420c94:	aad    0x32
  420c96:	jmp    0x72365a83
  420c9b:	pop    eax
  420c9c:	neg    esp
  420c9e:	ret    0x19bb
  420ca1:	pop    ss
  420ca2:	mov    BYTE PTR [edx-0x1a239ca3],dh
  420ca8:	add    ebx,DWORD PTR [ebx+0x56]
  420cab:	popa   
  420cac:	jbe    0x420c89
  420cae:	inc    esi
  420caf:	jge    0x420ce3
  420cb1:	shl    BYTE PTR [edx+0x1b],1
  420cb4:	xchg   esp,eax
  420cb5:	xchg   BYTE PTR [edi-0x2d],cl
  420cb8:	arpl   WORD PTR [ebx+0x5d742a5c],sp
  420cbe:	add    DWORD PTR [eax],edi
  420cc0:	cmp    eax,0x692b3f71
  420cc5:	sar    BYTE PTR [esi-0x521905ef],1
  420ccb:	(bad)  
  420ccc:	push   cs
  420ccd:	sbb    al,BYTE PTR [ebx-0x78]
  420cd0:	and    eax,0x57761260
  420cd5:	pop    ecx
  420cd6:	sub    DWORD PTR [edx-0x2fc2013b],ebx
  420cdc:	add    BYTE PTR [edi-0x87aa3b],0x13
  420ce3:	jge    0x420cd6
  420ce5:	jno    0x420cd5
  420ce7:	(bad)  
  420ce8:	fiadd  DWORD PTR gs:[ecx]
  420ceb:	shr    ah,0xb8
  420cee:	nop
  420cef:	sub    DWORD PTR [eax],esp
  420cf1:	mov    bh,0xab
  420cf3:	add    BYTE PTR ds:0x2165c9d6,al
  420cf9:	xor    BYTE PTR [ebx+0x2d01497e],cl
  420cff:	cmp    BYTE PTR [ebx],0x31
  420d02:	jne    0x420cd1
  420d04:	(bad)  
  420d06:	adc    al,0x5b
  420d08:	imul   eax,DWORD PTR [ebx+0xfb46218],0xffffffba
  420d0f:	dec    esi
  420d10:	push   ecx
  420d11:	nop
  420d12:	ret    0x79eb
  420d15:	sub    cl,bl
  420d17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d18:	jge    0x420cde
  420d1a:	and    ebx,DWORD PTR [esi+ebp*8]
  420d1d:	adc    DWORD PTR [edi+0x25],edi
  420d20:	xchg   ebp,eax
  420d21:	push   es
  420d22:	or     DWORD PTR [edx+esi*4-0x7b34f1ef],edi
  420d29:	mov    ebx,0xe150f8c
  420d2e:	cmp    al,0x50
  420d30:	fldpi  
  420d32:	mov    ecx,0xe5729b37
  420d37:	inc    edi
  420d38:	xchg   edx,eax
  420d39:	aaa    
  420d3a:	test   al,0xf0
  420d3c:	repnz pop esi
  420d3e:	pop    es
  420d3f:	jmp    0x8dcd7cc
  420d44:	dec    edx
  420d45:	mov    bl,0xd4
  420d47:	xchg   ebp,eax
  420d48:	jo     0x420da7
  420d4a:	and    BYTE PTR [ebp+0x64],dl
  420d4d:	shr    bl,cl
  420d4f:	cmp    DWORD PTR [ebp-0x5a],edx
  420d52:	js     0x420d98
  420d54:	ds test al,0xdd
  420d57:	(bad)  
  420d58:	mov    cl,0xc1
  420d5a:	pop    ecx
  420d5b:	mov    dl,0xeb
  420d5d:	int3   
  420d5e:	and    bh,BYTE PTR [edi-0x66359f0c]
  420d64:	fbld   TBYTE PTR [esi-0x8]
  420d67:	int3   
  420d68:	imul   BYTE PTR [ecx+0x5c]
  420d6b:	aas    
  420d6c:	fcomp  QWORD PTR [ecx+0x45]
  420d6f:	daa    
  420d70:	add    esp,ebx
  420d72:	push   cs
  420d73:	outs   dx,DWORD PTR ds:[esi]
  420d74:	xchg   DWORD PTR [esi+0x1bbd91be],ebx
  420d7a:	mov    eax,0xde103d24
  420d7f:	(bad)  
  420d80:	outs   dx,BYTE PTR ds:[esi]
  420d81:	mov    ecx,0x213e7b8e
  420d86:	fadd   QWORD PTR [edx-0x49e31f2c]
  420d8c:	dec    esp
  420d8d:	xchg   esp,eax
  420d8e:	sbb    eax,0xb0783f4c
  420d93:	adc    eax,0xac9fc62
  420d98:	inc    ebx
  420d99:	popa   
  420d9a:	mov    esp,0xa2f6c545
  420d9f:	cdq    
  420da0:	push   edi
  420da1:	mov    ds:0xbb4285f7,eax
  420da6:	dec    ebx
  420da7:	mov    WORD PTR [edx-0x58],cs
  420daa:	cld    
  420dab:	fild   QWORD PTR [ecx+0x5f24873]
  420db1:	inc    dx
  420db3:	dec    eax
  420db4:	xchg   ecx,eax
  420db5:	add    eax,0x5859c45e
  420dba:	jmp    0xbb:0x6db35327
  420dc1:	xlat   BYTE PTR ds:[ebx]
  420dc2:	inc    esi
  420dc3:	xor    cl,ah
  420dc5:	icebp  
  420dc6:	ret    
  420dc7:	daa    
  420dc8:	add    eax,0x8cb07a48
  420dcd:	or     edi,ecx
  420dcf:	push   ebx
  420dd0:	xor    BYTE PTR [ecx+eax*8-0x7178c917],ch
  420dd7:	push   ebx
  420dd8:	stos   BYTE PTR es:[edi],al
  420dd9:	inc    esp
  420dda:	aam    0xc2
  420ddc:	loopne 0x420d9a
  420dde:	sub    cl,BYTE PTR [ebp+0x5c280da9]
  420de4:	lea    edx,[ebx+0x32]
  420de7:	inc    eax
  420de8:	adc    dh,bl
  420dea:	dec    ebx
  420deb:	jmp    0x420e26
  420ded:	dec    eax
  420dee:	sub    al,0x91
  420df0:	pop    ecx
  420df1:	sub    DWORD PTR [ecx-0x55],ecx
  420df4:	inc    esp
  420df5:	cli    
  420df6:	or     al,0x6
  420df8:	xchg   dh,dl
  420dfa:	ja     0x420e52
  420dfc:	sbb    eax,edi
  420dfe:	jns    0x420da9
  420e00:	cs jmp 0x530dbdcb
  420e06:	jl     0x420dda
  420e08:	mov    eax,cs:0x143a7801
  420e0e:	mov    esp,0x7b8bea50
  420e13:	push   ecx
  420e14:	add    DWORD PTR [eax+0x3b],edi
  420e17:	mov    edx,0x103daaa6
  420e1c:	dec    esp
  420e1d:	outs   dx,DWORD PTR ds:[esi]
  420e1e:	shl    BYTE PTR [eax+0x18fb1da2],0xb6
  420e25:	outs   dx,DWORD PTR ds:[esi]
  420e26:	ds mov bl,0xaa
  420e29:	jb     0x420ea6
  420e2b:	lods   eax,DWORD PTR ds:[esi]
  420e2c:	push   ds
  420e2d:	adc    esi,ecx
  420e2f:	adc    ah,BYTE PTR [ebx]
  420e31:	jg     0x420e43
  420e33:	and    eax,DWORD PTR [esi+esi*4]
  420e36:	sbb    eax,0x4703365d
  420e3b:	push   ebp
  420e3c:	pop    ebp
  420e3d:	pop    esp
  420e3e:	es dec esi
  420e40:	cmp    bh,cl
  420e42:	jbe    0x420df1
  420e44:	and    esi,DWORD PTR [edx+0x1a]
  420e47:	out    dx,eax
  420e48:	inc    ecx
  420e49:	dec    ebp
  420e4a:	inc    ebx
  420e4b:	jns    0x420e27
  420e4d:	aad    0xa8
  420e4f:	xchg   ebx,eax
  420e50:	dec    ecx
  420e51:	(bad)  
  420e52:	imul   edx,DWORD PTR [ebp+0x73aff696],0xe35cdb50
  420e5c:	js     0x420ec8
  420e5e:	or     eax,DWORD PTR [esi-0x2b]
  420e61:	push   esi
  420e62:	pop    esi
  420e63:	mov    ds:0xa1e3a993,al
  420e68:	mov    ebp,0x1ac030b9
  420e6d:	push   esi
  420e6e:	mov    ecx,?
  420e70:	cld    
  420e71:	mov    bh,BYTE PTR ds:0x7be61291
  420e77:	add    DWORD PTR [eax-0x52],0xd3cfecd2
  420e7e:	xor    dh,al
  420e80:	sti    
  420e81:	ror    BYTE PTR [ecx+0x6a],cl
  420e84:	push   esp
  420e85:	cs (bad) 
  420e87:	(bad)  
  420e88:	in     al,0xcf
  420e8a:	fsubr  DWORD PTR [ebx-0x840858]
  420e90:	sbb    DWORD PTR [ecx+ebp*1],ecx
  420e93:	repz adc DWORD PTR [eax+0x66],esp
  420e97:	xchg   BYTE PTR [edx-0x417f5f39],bh
  420e9d:	cmp    dh,BYTE PTR [edx+0x20]
  420ea0:	retf   
  420ea1:	push   edi
  420ea2:	int    0x3b
  420ea4:	push   esp
  420ea5:	pop    edx
  420ea6:	or     ebp,eax
  420ea8:	(bad)  
  420ea9:	pop    edi
  420eaa:	mov    esp,0xf9302b3
  420eaf:	call   0xb11bf960
  420eb4:	ret    0xb7d6
  420eb7:	pop    ebx
  420eb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420eb9:	ja     0x420e89
  420ebb:	fadd   QWORD PTR [ecx-0x7bfac3f0]
  420ec1:	inc    esi
  420ec2:	fisubr DWORD PTR [ebx-0x2aed80ba]
  420ec8:	out    0x2a,eax
  420eca:	add    al,0x50
  420ecc:	dec    ebp
  420ecd:	mov    fs,esi
  420ecf:	dec    edi
  420ed0:	inc    ebp
  420ed1:	std    
  420ed2:	dec    ecx
  420ed3:	mov    ecx,0x96220353
  420ed8:	mov    DWORD PTR [eax],esi
  420eda:	sub    BYTE PTR [ebp+0x630e4c2b],0x33
  420ee1:	fbstp  TBYTE PTR [edx+ebp*2]
  420ee4:	in     eax,0xb8
  420ee6:	sti    
  420ee7:	dec    ebp
  420ee8:	push   edi
  420ee9:	adc    eax,DWORD PTR [ecx+0x67]
  420eec:	dec    ebp
  420eed:	xor    eax,0x7a071595
  420ef2:	xor    BYTE PTR [edi-0x7a],dl
  420ef5:	(bad)  
  420ef6:	pop    ebp
  420ef7:	and    ecx,DWORD PTR [eax]
  420ef9:	and    al,0x66
  420efb:	xchg   esi,eax
  420efc:	push   0x66
  420efe:	inc    eax
  420eff:	pop    esp
  420f00:	(bad)  
  420f02:	test   eax,ecx
  420f04:	stos   DWORD PTR es:[edi],eax
  420f05:	nop
  420f06:	pop    ds
  420f07:	into   
  420f08:	outs   dx,BYTE PTR ds:[esi]
  420f09:	ficomp DWORD PTR [esi]
  420f0b:	fst    QWORD PTR [edi+0x6551d8df]
  420f11:	dec    ebp
  420f12:	pop    ds
  420f13:	mov    ah,0x98
  420f15:	rcl    BYTE PTR ds:0x421b0ebb,1
  420f1b:	mov    ebx,0xd618eacf
  420f20:	mov    ecx,0xe82feae1
  420f25:	ja     0x420f8f
  420f27:	call   0x703f7aab
  420f2c:	jl     0x420f36
  420f2e:	popa   
  420f2f:	or     ebx,ebp
  420f31:	or     eax,0x2e5519e9
  420f37:	ret    0x4806
  420f3a:	(bad)  
  420f3b:	(bad)  
  420f3c:	fimul  DWORD PTR [ebx]
  420f3e:	data16 mov al,0x45
  420f41:	jns    0x420f47
  420f43:	imul   BYTE PTR [edx]
  420f45:	lea    ebp,[ebx]
  420f47:	xchg   WORD PTR [edx-0x72719da6],ax
  420f4e:	sbb    DWORD PTR [ebp+0x2ea6f926],ebx
  420f54:	test   BYTE PTR [edx+0x543e487f],ch
  420f5a:	lahf   
  420f5b:	push   edi
  420f5c:	leave  
  420f5d:	add    bh,BYTE PTR [edx]
  420f5f:	cld    
  420f60:	jp     0x420efe
  420f62:	fwait
  420f63:	mov    DWORD PTR [esp+eax*4+0x3a],esi
  420f67:	inc    ebp
  420f68:	int3   
  420f69:	mov    eax,0x9f2455ee
  420f6e:	sub    eax,0x937d278a
  420f73:	pop    eax
  420f74:	sbb    cl,BYTE PTR [edx-0x42ac8aab]
  420f7a:	sbb    BYTE PTR [ebp-0x710f6e22],al
  420f80:	in     eax,0x9
  420f82:	jmp    0x6c59:0x1628f6e6
  420f89:	ja     0x420ff6
  420f8b:	sub    DWORD PTR [eax],ebp
  420f8d:	je     0x420f3e
  420f8f:	iret   
  420f90:	mov    ch,0xfe
  420f92:	dec    ebx
  420f93:	mov    ah,0x74
  420f95:	ds cwde 
  420f97:	or     BYTE PTR [esi-0x5b],cl
  420f9a:	sbb    DWORD PTR [eax],edx
  420f9c:	mov    ch,0xb1
  420f9e:	xchg   edx,eax
  420f9f:	jno    0x420fb4
  420fa1:	test   DWORD PTR [edx-0x6],esi
  420fa4:	mov    ecx,0x2a03f6af
  420fa9:	mov    ds:0x2448a9dc,al
  420fae:	inc    esi
  420faf:	stc    
  420fb0:	es cdq 
  420fb2:	xor    ebx,DWORD PTR [ecx+0x22f037e]
  420fb8:	and    BYTE PTR [ecx+0x59bd6606],cl
  420fbe:	push   eax
  420fbf:	xlat   BYTE PTR ds:[ebx]
  420fc0:	mov    dh,0xcf
  420fc2:	call   0x6931:0x3a66e76a
  420fc9:	pop    esi
  420fca:	data16 addr16 or al,0x4a
  420fce:	adc    edx,ecx
  420fd0:	cli    
  420fd1:	dec    ecx
  420fd2:	fbld   TBYTE PTR [edi-0x3a301c63]
  420fd8:	mov    dl,0xf0
  420fda:	fst    DWORD PTR [edi+ebx*4-0x68]
  420fde:	(bad)  
  420fdf:	fstp   DWORD PTR [ebx+0x2a]
  420fe2:	xchg   edx,eax
  420fe3:	aam    0x9f
  420fe5:	add    DWORD PTR [esi-0x4c8ecfd9],ecx
  420feb:	pop    esi
  420fec:	loop   0x420fd6
  420fee:	popa   
  420fef:	pusha  
  420ff0:	aaa    
  420ff1:	push   edi
  420ff2:	shr    ebx,0x94
  420ff5:	add    eax,0x3cf8c1c
  420ffa:	repz pop es
  420ffc:	out    0x28,al
  420ffe:	mov    al,ds:0x2f419ea5
  421003:	cli    
  421004:	stos   DWORD PTR es:[edi],eax
  421005:	leave  
  421006:	out    dx,al
  421007:	push   edx
  421008:	sub    eax,0x59e42c01
  42100d:	sbb    al,BYTE PTR [edx-0x579db378]
  421013:	dec    eax
  421014:	mov    esi,0x6b5bb8dd
  421019:	gs xchg ecx,eax
  42101b:	jecxz  0x42105c
  42101d:	popf   
  42101e:	inc    BYTE PTR [eax+0x53f489f5]
  421024:	mov    ebx,0xfc3e3da3
  421029:	pop    ebx
  42102a:	push   esi
  42102b:	jo     0x420fc7
  42102d:	jb     0x420fcc
  42102f:	mov    edx,0xb1c535fd
  421034:	mov    bl,0x32
  421036:	and    eax,DWORD PTR [ecx-0x6702ebd9]
  42103c:	sahf   
  42103d:	lahf   
  42103e:	aam    0xaf
  421040:	mov    WORD PTR [ebx+0x6b96e103],cs
  421046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421047:	mov    esp,0x38f2c32e
  42104c:	jne    0x42101d
  42104e:	push   ebp
  42104f:	or     DWORD PTR [eax-0x53d1ebb3],0xffffffb7
  421056:	pop    eax
  421057:	scas   al,BYTE PTR es:[edi]
  421058:	inc    esi
  421059:	inc    eax
  42105a:	sub    eax,0xe6011e58
  42105f:	daa    
  421060:	scas   al,BYTE PTR es:[edi]
  421061:	cld    
  421062:	jae    0x42105b
  421064:	bound  edx,QWORD PTR [edi+0x76e221fc]
  42106a:	push   edi
  42106b:	(bad)  
  42106c:	dec    edi
  42106d:	int    0xa7
  42106f:	icebp  
  421070:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421071:	mov    eax,0x1357b8bb
  421076:	lods   eax,DWORD PTR ds:[esi]
  421077:	xor    dh,BYTE PTR [edi+0x3d93b7f7]
  42107d:	mov    edx,0x18f7d305
  421082:	mov    ch,0x1a
  421084:	sub    esi,DWORD PTR [esi]
  421086:	arpl   WORD PTR [ebx+0x56],cx
  421089:	or     al,0x27
  42108b:	stos   BYTE PTR es:[edi],al
  42108c:	test   eax,0xc6df086e
  421091:	lock dec edi
  421093:	xor    ch,BYTE PTR [ebx+0x11]
  421096:	sar    DWORD PTR [edi+0x234145e1],1
  42109c:	add    eax,ebx
  42109e:	call   FWORD PTR [edi+0x0]
  4210a1:	lahf   
  4210a2:	fidiv  WORD PTR [eax+0x18a3c093]
  4210a8:	iret   
  4210a9:	or     al,0xfb
  4210ab:	jne    0x4210c7
  4210ad:	jecxz  0x4210bb
  4210af:	scas   al,BYTE PTR es:[edi]
  4210b0:	std    
  4210b1:	push   eax
  4210b2:	call   0xbd24:0xd7acb79c
  4210b9:	sahf   
  4210ba:	mov    ?,WORD PTR [eax+0x39d36202]
  4210c0:	push   ecx
  4210c1:	sti    
  4210c2:	in     al,0xa2
  4210c4:	adc    esp,ebp
  4210c6:	xchg   ebx,eax
  4210c7:	mov    bl,0xca
  4210c9:	dec    ebp
  4210ca:	lods   eax,DWORD PTR ds:[esi]
  4210cb:	jae    0x4210b5
  4210cd:	popf   
  4210ce:	pop    ss
  4210cf:	stos   DWORD PTR es:[edi],eax
  4210d0:	ss dec edi
  4210d2:	add    ah,BYTE PTR [ebp+0x38]
  4210d5:	test   ebx,edi
  4210d7:	out    0xfc,eax
  4210d9:	mov    cl,BYTE PTR [ecx]
  4210db:	rol    BYTE PTR [esi-0x24],0x55
  4210df:	aam    0x37
  4210e1:	sbb    eax,0x27792335
  4210e6:	adc    al,0x1a
  4210e8:	inc    esi
  4210e9:	adc    esp,esi
  4210eb:	ins    DWORD PTR es:[edi],dx
  4210ec:	xor    eax,0xd796f34b
  4210f1:	aam    0x30
  4210f3:	int3   
  4210f4:	aaa    
  4210f5:	cwde   
  4210f6:	(bad)  
  4210f7:	push   edi
  4210f8:	(bad)
  4210fb:	test   BYTE PTR [eax+0x62e5cd2e],0xf0
  421102:	xchg   esp,eax
  421103:	int    0x4a
  421105:	repz sti 
  421107:	jns    0x42115c
  421109:	(bad)  
  42110b:	mov    eax,0xcb6d5a08
  421110:	xchg   edx,eax
  421111:	aam    0x9
  421113:	jns    0x42111f
  421115:	xor    eax,0xdb91eeb0
  42111a:	ficom  WORD PTR [esi+esi*2+0x53]
  42111e:	les    ebp,FWORD PTR [edi+eax*2+0x45]
  421122:	fdivrp st(7),st
  421124:	mov    ah,0xe
  421126:	jg     0x42111a
  421128:	xlat   BYTE PTR ds:[ebx]
  421129:	dec    ebp
  42112a:	xchg   ecx,eax
  42112b:	hlt    
  42112c:	or     al,0x4d
  42112e:	mov    ecx,0x577d8ccf
  421133:	cmc    
  421134:	add    BYTE PTR [ecx+0x75],cl
  421137:	scas   eax,DWORD PTR es:[edi]
  421138:	cmp    DWORD PTR [eax-0x36],ebx
  42113b:	mov    esp,DWORD PTR [ebp+edx*1-0x68de4576]
  421142:	inc    edx
  421143:	cli    
  421144:	adc    eax,0xadc3ab71
  421149:	js     0x42115c
  42114b:	inc    eax
  42114d:	rcl    al,1
  42114f:	retf   0x3eb1
  421152:	dec    edi
  421153:	test   DWORD PTR [edx],esp
  421155:	aam    0x91
  421157:	and    DWORD PTR [ebx+0x9],0x3d
  42115b:	popf   
  42115c:	mov    cl,0xab
  42115e:	stos   DWORD PTR es:[edi],eax
  42115f:	sub    eax,0xc218e51c
  421164:	mov    eax,0x692ebc7
  421169:	cmp    bl,ch
  42116b:	mov    eax,0x42d7e215
  421170:	pop    ebp
  421171:	mov    WORD PTR [eax-0x6],gs
  421174:	sbb    BYTE PTR [esp+esi*2-0x7cb40280],ah
  42117b:	sti    
  42117c:	nop
  42117d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42117e:	imul   edi,edx,0x11653cb8
  421184:	sub    ch,0x7e
  421187:	sbb    BYTE PTR [ecx],dh
  421189:	cli    
  42118a:	xor    BYTE PTR [ebx-0xf],ah
  42118d:	bound  ebp,QWORD PTR [edi+0x458c66eb]
  421193:	aaa    
  421194:	adc    al,0x82
  421196:	sbb    DWORD PTR [edi],eax
  421198:	jne    0x42119e
  42119a:	jl     0x4211e9
  42119c:	leave  
  42119d:	shl    cl,cl
  42119f:	pop    edi
  4211a0:	fs scas al,BYTE PTR es:[edi]
  4211a2:	push   edi
  4211a3:	pop    ds
  4211a4:	dec    edi
  4211a5:	inc    eax
  4211a6:	add    ebx,DWORD PTR [ebp-0x49]
  4211a9:	push   ecx
  4211aa:	jb     0x421157
  4211ac:	jge    0x4211ae
  4211ae:	add    al,BYTE PTR [edx-0x3900ae07]
  4211b4:	cld    
  4211b5:	pop    ds
  4211b6:	es out dx,al
  4211b8:	xchg   ebp,eax
  4211b9:	or     DWORD PTR [edx-0x2f961adc],0x73
  4211c0:	push   0xffffffd5
  4211c2:	dec    ebx
  4211c3:	push   0xd35b31b8
  4211c8:	xchg   esp,eax
  4211c9:	mov    al,ds:0xa76008e3
  4211cf:	stos   BYTE PTR es:[edi],al
  4211d0:	cli    
  4211d1:	ret    0x1321
  4211d4:	mov    edi,0x88875682
  4211d9:	pop    ds
  4211da:	js     0x421193
  4211dc:	mov    al,0xb7
  4211de:	xor    al,0xa
  4211e0:	push   esi
  4211e1:	push   edi
  4211e2:	enter  0x243a,0x47
  4211e6:	hlt    
  4211e7:	dec    eax
  4211e8:	jmp    0x42119f
  4211ea:	pop    ss
  4211eb:	mov    esi,DWORD PTR [ebx+0x191456ca]
  4211f1:	ret    
  4211f2:	mov    ah,0xcd
  4211f4:	pusha  
  4211f5:	jbe    0x4211a1
  4211f7:	adc    edx,edx
  4211f9:	adc    bl,BYTE PTR [esi+ebx*8]
  4211fc:	xlat   BYTE PTR ds:[ebx]
  4211fd:	pop    ss
  4211fe:	add    BYTE PTR [eax+0x5a8c0397],cl
  421204:	call   0x6012039e
  421209:	sbb    esp,DWORD PTR [ebx]
  42120b:	addr16 mov ch,0xff
  42120e:	mov    esp,0xa4c230cb
  421213:	js     0x42125b
  421215:	pop    ebx
  421216:	dec    esp
  421217:	xor    BYTE PTR [edx],cl
  421219:	fld    QWORD PTR [ebp-0x6b33ea4a]
  42121f:	mov    ah,0xd3
  421221:	pop    es
  421222:	(bad)  
  421223:	jbe    0x421210
  421225:	xchg   ebx,eax
  421226:	add    ebp,esp
  421228:	inc    edx
  421229:	pop    ebx
  42122a:	imul   ebx,DWORD PTR [ebp-0x3e],0xf
  42122e:	add    esi,ecx
  421230:	pop    ebp
  421231:	adc    eax,ebp
  421233:	and    al,0xf5
  421235:	xchg   esp,eax
  421236:	fmul   DWORD PTR [esp+eax*4-0x1a572b7b]
  42123d:	(bad)  
  42123e:	mov    ecx,0xf39413ba
  421243:	sub    al,0x54
  421245:	push   edx
  421246:	and    BYTE PTR [eax],dh
  421248:	sar    BYTE PTR [ebx+ebp*1+0xc2dfe25],0x4c
  421250:	hlt    
  421251:	scas   eax,DWORD PTR es:[edi]
  421252:	xchg   DWORD PTR [edi-0x79da6807],edi
  421258:	push   edi
  421259:	test   DWORD PTR [ebx+0x13],eax
  42125c:	push   ds
  42125d:	adc    al,0xe7
  42125f:	add    eax,0x69b1a14
  421264:	ficom  DWORD PTR [esi-0x1c]
  421267:	pop    ebx
  421268:	arpl   WORD PTR [eax-0x42],bx
  42126b:	std    
  42126c:	stos   BYTE PTR es:[edi],al
  42126d:	push   ss
  42126e:	leave  
  42126f:	pop    ebx
  421270:	pop    esp
  421271:	jg     0x4212d2
  421273:	sbb    BYTE PTR [edx+0x5d6a7121],cl
  421279:	sub    eax,0x2a4953d6
  42127e:	ret    
  42127f:	cli    
  421280:	scas   al,BYTE PTR es:[edi]
  421281:	or     edx,DWORD PTR [esi]
  421283:	scas   eax,DWORD PTR es:[edi]
  421284:	mov    BYTE PTR ds:0x7a49fbad,dh
  42128a:	sub    DWORD PTR [ebp-0x43],edx
  42128d:	cdq    
  42128e:	lock imul ebx,ebp,0x3a
  421292:	std    
  421293:	cmp    DWORD PTR [edx],edi
  421295:	jae    0x4212b3
  421297:	add    ebx,DWORD PTR [ecx+0x2cfb08ef]
  42129d:	adc    esp,esp
  42129f:	cmp    bh,bh
  4212a1:	test   eax,0x361d3f57
  4212a6:	dec    ecx
  4212a7:	dec    DWORD PTR [ecx]
  4212a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212aa:	or     edi,esp
  4212ac:	adc    al,0xe6
  4212ae:	push   ds
  4212af:	and    BYTE PTR ss:[eax],bl
  4212b2:	xor    eax,0x9b8fa72f
  4212b7:	mov    dh,0x78
  4212b9:	popa   
  4212ba:	and    BYTE PTR [ebx+0x4a70f31c],ch
  4212c0:	mov    esp,0xb150649d
  4212c5:	stos   BYTE PTR es:[edi],al
  4212c6:	pop    esi
  4212c7:	loop   0x421255
  4212c9:	sbb    al,0x4b
  4212cb:	inc    edx
  4212cc:	jg     0x4212c6
  4212ce:	fidiv  WORD PTR [esi-0x68]
  4212d1:	mov    bh,0x7a
  4212d3:	mov    ds:0xb01fed18,eax
  4212d8:	cmp    BYTE PTR [ebp+0x146a5e11],0xff
  4212df:	scas   al,BYTE PTR es:[edi]
  4212e0:	popa   
  4212e1:	jne    0x4212d2
  4212e3:	sub    al,0x50
  4212e5:	or     al,0x27
  4212e7:	inc    edx
  4212e8:	jge    0x4212b0
  4212ea:	xchg   edx,eax
  4212eb:	push   esi
  4212ec:	ror    DWORD PTR [ebx-0x36526e34],0xf8
  4212f3:	xor    eax,0x5463b224
  4212f8:	jne    0x4212a2
  4212fa:	mov    ebx,0xfeff46ec
  4212ff:	inc    ebx
  421300:	(bad)  
  421301:	cli    
  421302:	(bad)  
  421303:	shl    dh,cl
  421305:	fistp  DWORD PTR [ecx+0x3b6bbab6]
  42130b:	bound  ebx,QWORD PTR [ebx-0x73]
  42130e:	xor    edx,edi
  421310:	push   0x3ebd2b1a
  421315:	dec    edx
  421316:	mov    DWORD PTR [edx],edx
  421318:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421319:	xchg   edi,eax
  42131a:	test   DWORD PTR ds:[edx+edx*1-0x71acd35],0x81eb05c2
  421326:	shl    DWORD PTR [edi],1
  421328:	imul   ecx,DWORD PTR [esi-0x5f],0xffffffbb
  42132c:	test   al,0x7d
  42132e:	or     bl,bh
  421330:	int    0xb0
  421332:	repz lock arpl bp,dx
  421336:	addr16 aas 
  421338:	pop    esi
  421339:	frstor [edx+0x193be168]
  42133f:	es gs jo 0x421306
  421343:	pop    ss
  421344:	in     al,dx
  421345:	popf   
  421346:	dec    ebx
  421347:	cmp    eax,0x3ff42115
  42134c:	gs (bad) 
  42134e:	icebp  
  42134f:	mov    ch,0x5e
  421351:	xchg   ebx,eax
  421352:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421353:	cli    
  421354:	leave  
  421355:	mov    BYTE PTR [esi-0x40],cl
  421358:	jl     0x42130a
  42135a:	jmp    0x3637:0x64ee157d
  421361:	adc    edi,ebx
  421363:	sub    BYTE PTR [edi],ch
  421365:	fcmovbe st,st(1)
  421367:	popf   
  421368:	cmc    
  421369:	mov    eax,ds:0xd7e8889a
  42136e:	rcr    edi,0xb3
  421371:	enter  0x5a9e,0xe
  421375:	inc    edx
  421376:	sbb    dl,bh
  421378:	dec    ecx
  421379:	jmp    0xb25bbbda
  42137e:	xor    dl,0x5f
  421381:	xchg   DWORD PTR [ebx],ebx
  421383:	mov    ebp,DWORD PTR [edi-0x7e88f755]
  421389:	ret    0x8b8b
  42138c:	sub    ah,BYTE PTR [eax-0x53]
  42138f:	scas   al,BYTE PTR es:[edi]
  421390:	es mov ch,0x3d
  421393:	sub    eax,0x116ca87c
  421398:	mul    BYTE PTR [edx-0x72]
  42139b:	les    esp,FWORD PTR [eax+0x1e19340f]
  4213a1:	xlat   BYTE PTR ds:[ebx]
  4213a2:	retf   
  4213a3:	mov    esi,0xe7f950c
  4213a8:	xchg   esp,eax
  4213a9:	pop    esi
  4213aa:	push   ss
  4213ab:	retf   
  4213ac:	adc    DWORD PTR [ecx+0x4f],esp
  4213af:	sbb    DWORD PTR [esi],ecx
  4213b1:	fidiv  DWORD PTR [esi+0x12]
  4213b4:	(bad)  
  4213b8:	sti    
  4213b9:	retf   
  4213ba:	retf   0x3f29
  4213bd:	add    BYTE PTR [edx],dh
  4213bf:	xlat   BYTE PTR ds:[ebx]
  4213c0:	push   ds
  4213c1:	sub    BYTE PTR [esi-0x60],0x48
  4213c5:	repnz xchg ebp,eax
  4213c7:	maskmovq mm6,(bad)
  4213c8:	div    DWORD PTR [edi-0x2abbcbda]
  4213ce:	pop    esi
  4213cf:	iret   
  4213d0:	pop    es
  4213d1:	stos   DWORD PTR es:[edi],eax
  4213d2:	test   BYTE PTR [ebp+0x403de9cd],cl
  4213d8:	in     al,dx
  4213d9:	pop    edx
  4213da:	bnd jbe 0x4213ef
  4213dd:	pusha  
  4213de:	and    eax,0x82e5d59d
  4213e3:	sub    eax,0xb7cee516
  4213e8:	imul   ecx,DWORD PTR [ebx],0x539edffe
  4213ee:	inc    edi
  4213ef:	int    0x61
  4213f1:	inc    ebx
  4213f2:	in     eax,0x2f
  4213f4:	jg     0x4213d7
  4213f6:	in     al,0xf
  4213f8:	xlat   BYTE PTR ds:[ebx]
  4213f9:	nop/reserved BYTE PTR [ecx-0x6278ccf8]
  421400:	sbb    edi,DWORD PTR [eax-0x59369ef4]
  421406:	mov    WORD PTR [eax-0xfe29ee],gs
  42140c:	iret   
  42140d:	lea    ecx,[edi]
  42140f:	jne    0x4213f9
  421411:	std    
  421412:	in     eax,0x43
  421414:	add    DWORD PTR [edx],esi
  421416:	mov    esi,0x578cafab
  42141b:	into   
  42141c:	clc    
  42141d:	mov    bh,0xdb
  42141f:	prefetcht1 BYTE PTR [esi+0x405e36e0]
  421426:	out    dx,eax
  421427:	adc    bl,BYTE PTR [ebx+0x53]
  42142a:	push   cs
  42142b:	xor    eax,0x7ae7102a
  421430:	cli    
  421431:	cmp    ebx,DWORD PTR [esi]
  421433:	jne    0x4213bb
  421435:	xchg   DWORD PTR ds:0x5199b918,edi
  42143b:	mov    DWORD PTR [ebp-0x34],ebx
  42143e:	xchg   DWORD PTR [eax*4-0x5ff7f5c5],esp
  421445:	add    BYTE PTR [eax],0xcc
  421448:	cwde   
  421449:	jnp    0x42142f
  42144b:	mov    esp,0x360e7f3b
  421450:	enter  0xc8a6,0xda
  421454:	cwde   
  421455:	mov    ecx,0x7f54eac
  42145a:	and    eax,0xff8f350f
  42145f:	mov    eax,0x32eadd63
  421464:	or     ah,BYTE PTR [ebx]
  421466:	sub    dl,BYTE PTR [edx]
  421468:	iret   
  421469:	mov    ebx,0x735b93f5
  42146e:	repz and BYTE PTR [esi+0x15cc30a1],bh
  421475:	cmp    dh,al
  421477:	xchg   ecx,eax
  421478:	sahf   
  421479:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  42147b:	pop    ecx
  42147c:	cmp    bl,BYTE PTR [esp+ecx*4-0x69]
  421480:	xchg   edx,eax
  421481:	(bad)  
  421482:	xor    eax,0x977f4c03
  421487:	mov    ds:0xeec459ec,eax
  42148c:	push   ebp
  42148d:	rcl    BYTE PTR [eax],cl
  42148f:	js     0x42145a
  421491:	out    0x9e,eax
  421493:	jmp    0x5487:0xf0270f59
  42149a:	outs   dx,BYTE PTR ds:[esi]
  42149b:	jg     0x4214e1
  42149d:	jns    0x421454
  42149f:	shl    DWORD PTR [ebx-0x238469a4],cl
  4214a5:	mov    cl,0x53
  4214a7:	cmp    ebx,DWORD PTR [ecx-0x63]
  4214aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214ab:	ror    DWORD PTR [ecx+0x6f508370],cl
  4214b1:	push   edx
  4214b2:	pushaw 
  4214b4:	(bad)  
  4214b5:	jae    0x421472
  4214b7:	push   ds
  4214b8:	imul   esi,eax,0xffffffc5
  4214bb:	lds    ecx,FWORD PTR [ecx+eiz*4+0x77c55379]
  4214c2:	fcomp  DWORD PTR [ebx-0x48]
  4214c5:	mov    edi,0x4178ff0b
  4214ca:	and    BYTE PTR [edx-0xa],dl
  4214cd:	fild   DWORD PTR [ecx+ebx*4-0x7d]
  4214d1:	test   eax,0xb501a957
  4214d6:	out    dx,eax
  4214d7:	test   DWORD PTR [ebp-0x7b],ebx
  4214da:	clc    
  4214db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214dc:	jle    0x4214d2
  4214de:	adc    eax,0x1bc90436
  4214e3:	cwde   
  4214e4:	mov    cl,0x23
  4214e6:	sbb    eax,0x8b09d93b
  4214eb:	in     al,dx
  4214ec:	cmp    al,ch
  4214ee:	push   0xfffffff2
  4214f0:	xchg   ebx,eax
  4214f1:	xor    BYTE PTR [esi+eiz*8],0x11
  4214f5:	cmp    eax,0xa7a70891
  4214fa:	or     BYTE PTR [ebx+edi*4-0x95ebf95],bl
  421501:	pop    ds
  421502:	jp     0x4214c7
  421504:	clc    
  421505:	pop    ebx
  421506:	ins    BYTE PTR es:[edi],dx
  421507:	jg     0x42156d
  421509:	push   edx
  42150a:	sbb    dl,BYTE PTR [edx+0x37]
  42150d:	in     eax,0x29
  42150f:	ficom  WORD PTR [ecx-0x64]
  421512:	je     0x42157d
  421514:	push   ecx
  421515:	popf   
  421516:	inc    ebp
  421517:	(bad)  
  421518:	sub    al,0x29
  42151a:	mul    DWORD PTR [esi+ebp*4+0x28f75cd]
  421521:	(bad)  
  421522:	adc    DWORD PTR [edi-0x5f],ebx
  421525:	out    dx,eax
  421526:	(bad)  
  421527:	popa   
  421528:	push   cs
  421529:	loope  0x421597
  42152b:	and    ecx,edx
  42152d:	imul   ecx,esi,0xf00a6f99
  421533:	pop    ebp
  421534:	mov    bl,0x3a
  421536:	out    dx,al
  421537:	not    DWORD PTR [edx-0x22eb6505]
  42153d:	cmp    eax,DWORD PTR [ecx-0x39]
  421540:	mov    eax,ds:0x5695bcd2
  421545:	xchg   ebp,eax
  421546:	mov    ds:0xb1da0728,al
  42154b:	es daa 
  42154d:	ins    BYTE PTR es:[edi],dx
  42154e:	cs sub al,0x3a
  421551:	pop    edx
  421552:	xchg   esp,eax
  421553:	lods   eax,DWORD PTR ds:[esi]
  421554:	xchg   ebx,eax
  421555:	or     DWORD PTR [ebp+edx*1+0x76],ebp
  421559:	jae    0x4215c3
  42155b:	mov    al,ds:0x9a88d7ac
  421560:	dec    edi
  421561:	xlat   BYTE PTR ds:[ebx]
  421562:	and    BYTE PTR [esi],bh
  421564:	(bad)  
  421566:	cmp    DWORD PTR [ecx],edx
  421568:	cmp    BYTE PTR [ebp+0x1eb6faba],bl
  42156e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42156f:	mov    ds:0xd09133cc,al
  421574:	dec    ebx
  421575:	add    ch,BYTE PTR [esp+edi*8+0x3bb1b517]
  42157c:	push   edx
  42157d:	jg     0x42150a
  42157f:	inc    eax
  421580:	(bad)  
  421581:	sbb    ebx,DWORD PTR [ecx-0x69086698]
  421587:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421588:	sbb    al,0x5
  42158a:	pop    eax
  42158b:	and    cl,dl
  42158d:	and    al,0xf0
  421590:	adc    cl,BYTE PTR [eax]
  421592:	mov    bh,0x93
  421594:	sub    DWORD PTR [esp+esi*4],ebx
  421597:	mov    ds:0x51772ff5,al
  42159c:	stos   BYTE PTR es:[edi],al
  42159d:	or     ecx,DWORD PTR [ecx-0x4ddd71de]
  4215a3:	push   esi
  4215a4:	call   0xb191:0xc83d2da0
  4215ab:	ja     0x421578
  4215ad:	pop    ebp
  4215ae:	and    bh,cl
  4215b0:	iret   
  4215b1:	mov    ecx,0x29b337d5
  4215b6:	je     0x421609
  4215b8:	xchg   edx,eax
  4215b9:	es push esp
  4215bb:	repz aaa 
  4215bd:	sub    DWORD PTR [ebp+0x52],0x769e0a70
  4215c4:	mov    edx,0xb0865083
  4215c9:	push   cs
  4215ca:	loopne 0x4215e0
  4215cc:	jb     0x421617
  4215ce:	inc    ecx
  4215cf:	sub    al,0x35
  4215d1:	or     BYTE PTR [esi],0x37
  4215d4:	xchg   esi,eax
  4215d5:	push   ebx
  4215d6:	mov    ebx,0x44cda366
  4215db:	loopne 0x421621
  4215dd:	aam    0x93
  4215df:	xor    cl,BYTE PTR [eax]
  4215e1:	sub    al,0x9a
  4215e3:	out    0xf4,al
  4215e5:	pushf  
  4215e6:	call   FWORD PTR [ebp+0xf]
  4215e9:	lea    eax,[ecx]
  4215eb:	mov    dl,0xc2
  4215ed:	xor    al,BYTE PTR [edi-0x2f46b0d6]
  4215f3:	lock mov edx,0x87c2fab5
  4215f9:	(bad)  
  4215fb:	mov    edi,0x4fd4d268
  421600:	push   cs
  421601:	rol    DWORD PTR [esi-0x1d7ad66a],cl
  421607:	loop   0x4215eb
  421609:	jmp    0x1855:0xcc2860d2
  421610:	adc    dh,al
  421612:	or     BYTE PTR [edx-0x58],0xee
  421616:	jnp    0x4215b8
  421618:	xchg   esp,eax
  421619:	dec    edx
  42161a:	in     al,dx
  42161b:	aam    0x2c
  42161d:	dec    ebx
  42161e:	push   ebx
  42161f:	mov    WORD PTR [eax],fs
  421621:	jb     0x4215bf
  421623:	cld    
  421624:	and    BYTE PTR [edi+edi*1+0x4fa28c23],0x3c
  42162c:	(bad)  
  42162d:	cwde   
  42162e:	jecxz  0x421654
  421630:	outs   dx,DWORD PTR ds:[esi]
  421631:	sar    BYTE PTR [ecx-0x2a5020ea],1
  421637:	in     al,dx
  421638:	mov    al,0x8d
  42163a:	stos   BYTE PTR es:[edi],al
  42163b:	xor    eax,0x38089d90
  421640:	sub    al,0x7c
  421642:	or     eax,DWORD PTR [eax]
  421644:	fistp  WORD PTR [ebx]
  421646:	jne    0x421682
  421648:	test   al,0xd7
  42164a:	es mov esi,ebx
  42164d:	popa   
  42164e:	cmc    
  42164f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421650:	popa   
  421651:	dec    esp
  421652:	dec    edx
  421653:	aam    0x83
  421655:	aaa    
  421656:	scas   al,BYTE PTR es:[edi]
  421657:	nop
  421658:	adc    DWORD PTR [edx],esp
  42165a:	popa   
  42165b:	inc    edi
  42165c:	int3   
  42165d:	(bad)  
  42165e:	jmp    0x3cb4c789
  421663:	aas    
  421664:	or     al,0x63
  421666:	adc    BYTE PTR [ebx],bh
  421668:	xchg   ecx,eax
  421669:	jg     0x421633
  42166b:	mov    esi,0x627201ff
  421670:	jb     0x421697
  421672:	(bad)  [ebx]
  421674:	repnz test BYTE PTR [eax],dl
  421677:	(bad)  
  421678:	je     0x421647
  42167a:	inc    edx
  42167b:	scas   eax,DWORD PTR es:[edi]
  42167c:	sahf   
  42167d:	xchg   DWORD PTR [eax-0x6a],edx
  421680:	in     al,dx
  421681:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421682:	mov    eax,0x540d1e45
  421687:	push   es
  421688:	adc    DWORD PTR [ebp+eiz*1+0x8],ebx
  42168c:	lds    ecx,FWORD PTR [edi+edi*1]
  42168f:	in     eax,dx
  421690:	pop    ss
  421691:	sbb    edx,DWORD PTR [eax]
  421693:	jb     0x421667
  421695:	inc    edx
  421696:	cmp    eax,0xa48ddc8a
  42169b:	aaa    
  42169c:	js     0x421703
  42169e:	xchg   dl,bl
  4216a0:	inc    esi
  4216a1:	adc    BYTE PTR [esp+ebx*4-0x36b612b4],bl
  4216a8:	bound  edi,QWORD PTR [eax]
  4216aa:	shl    DWORD PTR [edi-0x5f1da5af],0xda
  4216b1:	jb     0x421664
  4216b3:	push   0x27
  4216b5:	fwait
  4216b6:	xchg   ebp,eax
  4216b7:	pop    edi
  4216b8:	sbb    eax,0xcca7f13a
  4216bd:	push   ds
  4216be:	(bad)  
  4216bf:	sahf   
  4216c0:	dec    ebp
  4216c1:	fimul  WORD PTR [esi+0x31d752ce]
  4216c7:	popf   
  4216c8:	lods   al,BYTE PTR ds:[esi]
  4216c9:	push   eax
  4216ca:	stos   DWORD PTR es:[edi],eax
  4216cb:	addps  xmm6,XMMWORD PTR [edx]
  4216ce:	mov    esp,0x2a74e3ea
  4216d3:	shr    BYTE PTR [ebp-0x18],1
  4216d6:	sti    
  4216d7:	xchg   ebx,eax
  4216d8:	into   
  4216d9:	mov    cl,0x24
  4216db:	neg    DWORD PTR [edi+0x3c]
  4216de:	popa   
  4216df:	int    0x4a
  4216e1:	mov    dl,0x7c
  4216e3:	adc    eax,0xda9fd9a6
  4216e8:	mov    ebp,0x7848dc7c
  4216ed:	fimul  DWORD PTR [ebp-0x36002bda]
  4216f3:	mov    dl,0x2
  4216f5:	jns    0x4216e4
  4216f7:	mov    bh,0xe8
  4216f9:	pop    edx
  4216fa:	fisub  DWORD PTR [ebp-0x6a]
  4216fd:	lea    ebx,[edi+0x637ff290]
  421703:	mov    ebp,edi
  421705:	ja     0x4216cb
  421707:	out    dx,al
  421708:	sub    bh,BYTE PTR ds:0x57b1bb4a
  42170e:	fxch   st(7)
  421710:	jmp    0x92fddc22
  421715:	sbb    al,0xed
  421717:	xchg   edi,eax
  421718:	aad    0x4
  42171a:	mov    edx,0xaad1ca17
  42171f:	push   ds
  421720:	sti    
  421721:	bound  ecx,QWORD PTR [esi]
  421723:	test   al,0xf5
  421725:	lods   al,BYTE PTR ds:[esi]
  421726:	cs jb  0x42178f
  421729:	ss pop ecx
  42172b:	mov    ebp,0x9a7f10e6
  421730:	andnps xmm0,xmm4
  421733:	or     al,0xd
  421735:	test   al,0x60
  421737:	push   esp
  421738:	ins    BYTE PTR es:[edi],dx
  421739:	adc    al,0xa3
  42173b:	out    dx,al
  42173c:	mov    ch,0x67
  42173e:	rol    DWORD PTR [edi-0xa7855f7],cl
  421744:	shl    BYTE PTR fs:[ecx+0x2a],0xc1
  421749:	cdq    
  42174a:	sub    al,0xb0
  42174c:	in     al,dx
  42174d:	rep ins DWORD PTR es:[edi],dx
  42174f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421750:	and    eax,0xd9e86620
  421755:	aad    0xd
  421757:	or     eax,0x3656267c
  42175c:	outs   dx,DWORD PTR ds:[esi]
  42175d:	shl    dh,cl
  42175f:	dec    esp
  421760:	mov    cl,0xbc
  421762:	xor    al,ah
  421764:	pop    edx
  421765:	icebp  
  421766:	fs mov esp,0x73f61c70
  42176c:	imul   edi,DWORD PTR [ecx],0x29
  42176f:	sub    al,0x71
  421771:	(bad)  
  421772:	std    
  421773:	pop    es
  421774:	adc    esp,edi
  421776:	jne    0x42173c
  421778:	adc    bl,0x61
  42177b:	lods   eax,DWORD PTR ds:[esi]
  42177c:	(bad)  
  42177d:	test   eax,0xb164adf6
  421782:	push   0xffffff96
  421784:	dec    esp
  421785:	nop
  421786:	mov    dl,0xb0
  421788:	std    
  421789:	leave  
  42178a:	or     BYTE PTR [esi],dh
  42178c:	cmp    esi,ebp
  42178e:	les    esp,FWORD PTR [ecx+edx*4]
  421791:	ret    
  421792:	adc    DWORD PTR [edi+esi*8-0x30],eax
  421796:	mov    esp,0xfa67ce30
  42179b:	mov    bl,0xef
  42179d:	jl     0x421743
  42179f:	mov    ebp,0xabc5c32d
  4217a4:	in     eax,0x3
  4217a6:	adc    ebp,0xcf3581e1
  4217ac:	or     eax,0x6d6c75ac
  4217b1:	xor    BYTE PTR [ecx+0x300f165a],ch
  4217b7:	neg    DWORD PTR [ebx]
  4217b9:	sbb    eax,0x5ee39f98
  4217be:	mov    dl,0x64
  4217c0:	fwait
  4217c1:	mov    dh,0xb6
  4217c3:	push   esp
  4217c4:	xlat   BYTE PTR ds:[ebx]
  4217c5:	cmp    al,0xaa
  4217c7:	(bad)  
  4217c8:	push   ecx
  4217c9:	pushf  
  4217ca:	dec    ebx
  4217cb:	mov    ch,0xcf
  4217cd:	cs dec edi
  4217cf:	add    eax,0x8b2b7839
  4217d4:	fbld   TBYTE PTR [eax+ecx*4]
  4217d7:	inc    esp
  4217d8:	shl    dh,cl
  4217da:	imul   ebx,DWORD PTR [eax],0x4293b89
  4217e0:	push   esi
  4217e1:	sbb    ebx,DWORD PTR [ebp-0x4e]
  4217e4:	add    al,0x6d
  4217e6:	in     al,0x87
  4217e8:	ja     0x421843
  4217ea:	scas   eax,DWORD PTR es:[edi]
  4217eb:	xor    ch,BYTE PTR [edi]
  4217ed:	test   eax,0xd4e394e2
  4217f2:	xchg   edi,eax
  4217f3:	fs push cs
  4217f5:	xchg   ecx,eax
  4217f6:	jl     0x421812
  4217f8:	xlat   BYTE PTR ds:[ebx]
  4217f9:	xchg   DWORD PTR [ebp+0x5e],ebx
  4217fc:	test   BYTE PTR [eax+edx*1],0x3f
  421800:	ss jns 0x42183f
  421803:	xor    ecx,edi
  421805:	bound  esp,QWORD PTR [ebp-0x6b9faa41]
  42180b:	xlat   BYTE PTR ds:[ebx]
  42180c:	out    0xd3,al
  42180e:	mov    ch,0x9d
  421810:	mov    WORD PTR [edx],?
  421812:	aad    0xe8
  421814:	(bad)  
  421815:	push   ecx
  421816:	cmp    ecx,DWORD PTR ds:0xd57e
  42181b:	sbb    al,0x6a
  42181d:	mov    edi,esp
  42181f:	xchg   esp,eax
  421820:	xchg   esi,ecx
  421822:	push   eax
  421823:	mov    dl,0xd
  421825:	push   ds
  421826:	gs unpcklps xmm6,xmm4
  42182a:	jl     0x421801
  42182c:	adc    ebp,ebp
  42182e:	and    edi,DWORD PTR [edx-0x53da1837]
  421834:	pop    ss
  421835:	dec    esi
  421836:	jnp    0x421848
  421838:	rol    BYTE PTR [ebp-0x7],0xf5
  42183c:	sbb    al,0xf1
  42183e:	into   
  42183f:	ffreep st(1)
  421841:	popa   
  421842:	cmp    BYTE PTR [ebx+esi*4+0x33c1d8b1],al
  421849:	jnp    0x421875
  42184b:	sbb    bl,BYTE PTR [ecx-0x521d3e79]
  421851:	ja     0x42180e
  421853:	js     0x4217e0
  421855:	mov    bl,0x1c
  421857:	pop    es
  421858:	(bad)  
  421859:	stos   BYTE PTR es:[edi],al
  42185a:	(bad)  
  42185b:	retf   
  42185c:	(bad)  
  42185e:	loopne 0x421864
  421860:	daa    
  421861:	in     eax,dx
  421862:	fnstsw WORD PTR [eax]
  421864:	mov    dh,0x7c
  421866:	push   edi
  421867:	int    0xd3
  421869:	mov    ebp,0xbf40325f
  42186e:	fadd   st,st(0)
  421870:	not    DWORD PTR [eax]
  421872:	pop    edi
  421873:	call   0x75d057a1
  421878:	imul   ebp,DWORD PTR [edi+0x520d8e88],0x97e1fbe4
  421882:	push   esp
  421883:	jl     0x42183e
  421885:	scas   al,BYTE PTR es:[edi]
  421886:	test   eax,0xfb8aaaf1
  42188b:	add    BYTE PTR [ecx+0x6012858e],al
  421891:	push   ebx
  421892:	retf   0xcf3b
  421895:	mov    eax,ds:0xaf734429
  42189a:	loop   0x42188f
  42189c:	jge    0x4218c7
  42189e:	pushf  
  42189f:	or     DWORD PTR [ebx],0x6b
  4218a2:	mov    ch,0xda
  4218a4:	sti    
  4218a5:	jns    0x4218d9
  4218a7:	imul   eax,DWORD PTR [esi+eax*4-0x1f00161b],0x66
  4218af:	mov    ecx,0xcbbe94f3
  4218b4:	pop    ebp
  4218b5:	fwait
  4218b6:	pop    esi
  4218b7:	inc    edi
  4218b8:	jmp    0x896a:0x56b1ec3e
  4218bf:	inc    esi
  4218c0:	mov    eax,ds:0x55af51ce
  4218c5:	scas   eax,DWORD PTR es:[edi]
  4218c6:	in     eax,0x58
  4218c8:	sub    eax,DWORD PTR [eax-0xd52e607]
  4218ce:	data16 repz scas al,BYTE PTR es:[edi]
  4218d1:	mul    BYTE PTR [ebp-0x5efb6a55]
  4218d7:	mov    al,ds:0xaae9eeb6
  4218dc:	push   cs
  4218dd:	popa   
  4218de:	sbb    DWORD PTR [eax+0x582b5ab1],esi
  4218e4:	in     al,dx
  4218e5:	jmp    0x42195f
  4218e7:	add    BYTE PTR [esi+0x7919092e],bl
  4218ed:	xor    dl,BYTE PTR [edi]
  4218ef:	fst    QWORD PTR [ebx-0x2ede1bef]
  4218f5:	push   0xffffff86
  4218f7:	shr    DWORD PTR [ecx-0x10b0faeb],cl
  4218fd:	ret    0xfe1c
  421900:	mov    dh,0xcb
  421902:	mov    ebx,0x7786067f
  421907:	xor    DWORD PTR [esi],ecx
  421909:	jnp    0x4218f0
  42190b:	ja     0x4218a4
  42190d:	xchg   ecx,eax
  42190e:	mov    ebx,0x733be1ab
  421913:	push   ecx
  421914:	aam    0xc4
  421916:	scas   al,BYTE PTR es:[edi]
  421917:	mov    dl,0xd6
  421919:	shl    DWORD PTR [eax-0x3ce18ac5],1
  42191f:	adc    ebp,DWORD PTR ds:0x5db0eac6
  421925:	or     eax,0x56c326ae
  42192a:	sti    
  42192b:	sti    
  42192c:	jns    0x421920
  42192e:	adc    BYTE PTR [edi],0xa1
  421931:	call   0x416f:0x62130ca9
  421938:	jb     0x4218cd
  42193a:	lods   eax,DWORD PTR ds:[esi]
  42193b:	push   cs
  42193c:	mov    esi,0x33dc1b2b
  421941:	add    eax,0xd6b275a7
  421946:	adc    eax,0xdefb244e
  42194b:	stos   DWORD PTR es:[edi],eax
  42194c:	mov    al,0x2
  42194e:	push   0xffffffae
  421950:	bound  ebp,QWORD PTR [esi+edi*1]
  421953:	es pop esi
  421955:	call   DWORD PTR [ecx]
  421957:	rol    DWORD PTR [edi],0x94
  42195a:	hlt    
  42195b:	shl    DWORD PTR ds:[eax],cl
  42195e:	ins    DWORD PTR es:[edi],dx
  42195f:	sub    al,0x59
  421961:	aad    0xa2
  421963:	scas   al,BYTE PTR es:[edi]
  421964:	mov    al,ds:0xb3e16ea6
  421969:	mov    ah,0xd7
  42196b:	fdiv   QWORD PTR [esi+0x62a32f95]
  421971:	in     al,0xdf
  421973:	shl    bh,1
  421975:	jo     0x4219c5
  421977:	pop    edi
  421978:	sub    esi,esp
  42197a:	inc    eax
  42197b:	and    al,0x1a
  42197d:	push   ds
  42197e:	dec    ecx
  42197f:	xchg   DWORD PTR [ebp+0x26],eax
  421982:	jns    0x4219d0
  421984:	std    
  421985:	sub    al,BYTE PTR [edx]
  421987:	imul   ebx,DWORD PTR [esi],0x7c9b1f7b
  42198d:	ja     0x4219d5
  42198f:	popf   
  421990:	sbb    edi,DWORD PTR [ecx+0x6c1e8820]
  421996:	sbb    DWORD PTR [ecx],edx
  421998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421999:	or     bl,BYTE PTR [edi+0x17192bd7]
  42199f:	(bad)  
  4219a0:	and    eax,0xfb262577
  4219a5:	loop   0x4219c7
  4219a7:	dec    esp
  4219a8:	out    dx,al
  4219a9:	push   0x69f040a9
  4219ae:	sub    al,0xa
  4219b0:	mov    ecx,0xcd72a675
  4219b5:	mov    bh,0x10
  4219b7:	dec    esp
  4219b8:	mov    dl,BYTE PTR [ecx+0x4f]
  4219bb:	(bad)  [ebx+0x31]
  4219be:	push   es
  4219bf:	scas   eax,DWORD PTR es:[edi]
  4219c0:	dec    eax
  4219c1:	adc    DWORD PTR [esi+0x5fd151ce],esi
  4219c7:	sub    al,0x77
  4219c9:	cs xor bh,dh
  4219cc:	mov    ecx,0x38e433a1
  4219d1:	mov    cl,0xc2
  4219d3:	(bad)  
  4219d4:	pop    eax
  4219d5:	mov    dl,0x86
  4219d7:	cmp    DWORD PTR [ebx+esi*2+0x46942c0f],eax
  4219de:	scas   al,BYTE PTR es:[edi]
  4219df:	xchg   edx,eax
  4219e0:	addr16 push cs
  4219e2:	rol    BYTE PTR [eax+0xf00ccf1],cl
  4219e8:	and    esi,DWORD PTR [edi]
  4219ea:	push   edx
  4219eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219ec:	push   es
  4219ed:	dec    ebp
  4219ee:	lock aaa 
  4219f0:	inc    esi
  4219f1:	scas   al,BYTE PTR es:[edi]
  4219f2:	cli    
  4219f3:	dec    ebp
  4219f4:	je     0x421a54
  4219f6:	jns    0x4219f6
  4219f8:	pop    ds
  4219f9:	adc    dh,BYTE PTR [ecx]
  4219fb:	stc    
  4219fc:	sbb    edi,DWORD PTR [ebp+0x240ac1f1]
  421a02:	stos   BYTE PTR es:[edi],al
  421a03:	push   esp
  421a04:	mov    dh,0x12
  421a06:	dec    ecx
  421a07:	imul   ebx,DWORD PTR [eax+eiz*4+0x7e],0xba68f05f
  421a0f:	fild   WORD PTR ss:[eax-0x7be5122c]
  421a16:	(bad)  
  421a17:	mov    ah,0x79
  421a19:	mov    ds:0x9c2e300b,eax
  421a1e:	das    
  421a1f:	bswap  edx
  421a21:	push   ebp
  421a22:	fsubr  DWORD PTR ds:0xb6127280
  421a28:	cmp    ebp,ebx
  421a2a:	aas    
  421a2b:	ret    0x67fe
  421a2e:	cmc    
  421a2f:	inc    ebx
  421a30:	nop
  421a31:	jbe    0x421a26
  421a33:	dec    esi
  421a34:	adc    ch,BYTE PTR [eax+0x52]
  421a37:	xchg   esi,eax
  421a38:	cdq    
  421a39:	jle    0x421a82
  421a3b:	mov    bl,cl
  421a3d:	sub    al,al
  421a3f:	jne    0x4219f2
  421a41:	add    DWORD PTR [ecx],ecx
  421a43:	ins    DWORD PTR es:[edi],dx
  421a44:	cmp    edi,DWORD PTR [eax]
  421a46:	bound  ebx,QWORD PTR [ebx*8+0x6171783e]
  421a4d:	adc    BYTE PTR ds:0x968a067d,cl
  421a53:	inc    ebp
  421a54:	aas    
  421a55:	call   0x77dc:0x27b6689a
  421a5c:	(bad)
  421a5f:	sub    eax,0x99e5bb22
  421a64:	pop    edx
  421a65:	or     BYTE PTR [ebx-0x4e],ch
  421a68:	xchg   ebx,eax
  421a69:	jno    0x421a80
  421a6b:	repz add DWORD PTR [esi+0x51b2a07a],esp
  421a72:	push   cs
  421a73:	mov    edi,0x5538cfec
  421a79:	push   0x4fde0120
  421a7e:	pop    ss
  421a7f:	ja     0x421a1f
  421a81:	jbe    0x103be2f4
  421a87:	mov    ebp,DWORD PTR [ebp-0xf0bd997]
  421a8d:	mov    dh,0x80
  421a8f:	in     al,dx
  421a90:	xchg   BYTE PTR [edi-0xc],dl
  421a93:	inc    edx
  421a94:	in     eax,0x3c
  421a96:	push   DWORD PTR [ebx]
  421a98:	cmp    eax,0xf5a2e3c1
  421a9d:	dec    esp
  421a9e:	pushf  
  421a9f:	sub    edx,DWORD PTR [edi-0x40]
  421aa2:	push   esi
  421aa3:	out    0x1d,eax
  421aa5:	push   0x88b24ed4
  421aaa:	popa   
  421aab:	stc    
  421aac:	dec    esp
  421aad:	addr16 dec eax
  421aaf:	enter  0x7703,0x86
  421ab3:	retf   0x4ce6
  421ab6:	sub    BYTE PTR [edx-0x45],0xb6
  421aba:	inc    esp
  421abb:	sti    
  421abc:	orps   xmm7,XMMWORD PTR [esi-0x19]
  421ac0:	paddd  mm0,QWORD PTR [ecx]
  421ac3:	test   BYTE PTR [ebp+0x7c],0x39
  421ac7:	loope  0x421a7a
  421ac9:	fisttp QWORD PTR [ebx+0x24]
  421acc:	fld    QWORD PTR [eax-0x1]
  421acf:	push   ebp
  421ad0:	test   DWORD PTR [ebx-0x7f],0xf0d50352
  421ad7:	fdiv   DWORD PTR [ecx+0x68881448]
  421add:	inc    ebp
  421ade:	pushf  
  421adf:	add    edi,ecx
  421ae1:	fsub   DWORD PTR [ebp+0xa]
  421ae4:	mov    ds:0x4ed595db,eax
  421ae9:	xchg   ebx,eax
  421aea:	xchg   edx,eax
  421aeb:	in     al,0x5
  421aed:	cmp    cl,BYTE PTR [eax+esi*2-0x7]
  421af1:	mov    WORD PTR [ebx],cs
  421af3:	cmc    
  421af4:	lods   al,BYTE PTR ds:[esi]
  421af5:	add    bl,BYTE PTR [ecx+0x5a262eba]
  421afb:	jb     0x421aad
  421afd:	xchg   esi,eax
  421afe:	push   eax
  421aff:	iret   
  421b00:	mov    dh,0x19
  421b02:	imul   ebx,DWORD PTR [esp+edi*4-0xe],0xa13db324
  421b0a:	or     al,0x8b
  421b0c:	cli    
  421b0d:	addr16 mov bh,0x7e
  421b10:	mov    bl,bl
  421b12:	or     al,0x3f
  421b14:	in     eax,0xab
  421b16:	mov    edi,0x54a90a74
  421b1b:	jmp    0xf3bd4444
  421b20:	pop    ecx
  421b21:	div    bh
  421b23:	sbb    BYTE PTR [ebx+ebp*4+0x12e6fce2],cl
  421b2a:	cwde   
  421b2b:	jp     0x421b72
  421b2d:	mov    al,ds:0x3240e447
  421b32:	out    0x5b,al
  421b34:	test   al,0x99
  421b36:	add    edi,esp
  421b38:	push   ebp
  421b39:	mov    esp,DWORD PTR [edx+ebp*8]
  421b3c:	jmp    0x247c:0x10e3ec77
  421b43:	jle    0x421bc4
  421b45:	or     DWORD PTR [esi],esi
  421b47:	jmp    0x95fd07c8
  421b4c:	pop    ecx
  421b4d:	inc    edi
  421b4e:	outs   dx,BYTE PTR ds:[esi]
  421b4f:	loop   0x421b5f
  421b51:	xor    eax,0xac7c610d
  421b57:	jnp    0x421b07
  421b59:	jo     0x421b55
  421b5b:	rcl    BYTE PTR [ecx+eiz*4],1
  421b5e:	xor    al,0x7
  421b60:	std    
  421b61:	(bad)  
  421b62:	js     0x421bb0
  421b64:	sbb    edx,DWORD PTR [edi]
  421b66:	addr16 dec ebp
  421b68:	shr    BYTE PTR [edx-0x53d5fb0],0x68
  421b6f:	xchg   DWORD PTR [edi+0x3c],ebp
  421b72:	adc    eax,0x89192091
  421b77:	jb     0x421bea
  421b79:	xor    al,0x1c
  421b7b:	add    al,0x3e
  421b7d:	popf   
  421b7e:	stos   DWORD PTR es:[edi],eax
  421b7f:	sub    bl,0x63
  421b82:	sbb    esp,esp
  421b84:	in     al,dx
  421b85:	lock cmc 
  421b87:	sub    edi,DWORD PTR ds:0xc2cb576f
  421b8d:	fcomp  QWORD PTR [eax-0x33]
  421b90:	idiv   bh
  421b92:	ins    BYTE PTR es:[edi],dx
  421b93:	int    0xca
  421b95:	data16 fstp QWORD PTR [eax+eax*4-0x9f615f6]
  421b9d:	sbb    al,0x35
  421b9f:	mov    eax,0xb807a47b
  421ba4:	mov    ah,BYTE PTR [edi+0x20ef6e19]
  421baa:	pop    ss
  421bab:	cwde   
  421bac:	addr16 cdq 
  421bae:	icebp  
  421baf:	shr    BYTE PTR [ecx],cl
  421bb1:	mov    edx,0x4c6a0ce5
  421bb6:	repz jl 0x421bf0
  421bb9:	mov    dh,0x63
  421bbb:	xchg   ebx,eax
  421bbc:	push   0x4336c036
  421bc1:	jns    0x421bdf
  421bc3:	adc    esp,edi
  421bc5:	jmp    0xa848:0xb3dac84d
  421bcc:	aaa    
  421bcd:	mov    bl,0xb0
  421bcf:	mov    eax,0x900dd08
  421bd4:	xchg   esp,eax
  421bd5:	sub    DWORD PTR [edi-0x3d5d2a66],edi
  421bdb:	call   0x2b5c:0x25366556
  421be2:	adc    dl,BYTE PTR [eax+0x6883c06]
  421be8:	leave  
  421be9:	dec    ebp
  421bea:	enter  0x739d,0x3b
  421bee:	cld    
  421bef:	jno    0x421c3f
  421bf1:	pop    ecx
  421bf2:	mov    ecx,0xb3c80fe3
  421bf7:	jns    0x421c6a
  421bf9:	(bad)  
  421bfa:	push   esp
  421bfb:	(bad)  [edi+0x70]
  421bfe:	inc    ecx
  421bff:	pop    edi
  421c00:	xchg   DWORD PTR [esi-0x7f731d3a],eax
  421c06:	adc    BYTE PTR [ebx+0x26791527],0x47
  421c0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c0e:	sub    esp,eax
  421c10:	std    
  421c11:	imul   eax,DWORD PTR [ebx],0x76412499
  421c17:	in     al,dx
  421c18:	cmc    
  421c19:	dec    eax
  421c1a:	add    DWORD PTR [ecx+ebp*8+0x65],edx
  421c1e:	imul   edx,DWORD PTR [ebp+0x4dc20c15],0x7d6deeca
  421c28:	dec    eax
  421c29:	popa   
  421c2a:	jmp    0xb4d0:0x52703a1c
  421c31:	sub    dl,BYTE PTR [eax]
  421c33:	addr16 data16 das 
  421c36:	out    dx,eax
  421c37:	dec    esp
  421c38:	adc    BYTE PTR [ecx],ch
  421c3a:	adc    BYTE PTR [edx+0x339b58d9],ch
  421c40:	das    
  421c41:	and    eax,0xace2ca17
  421c46:	ja     0x421c40
  421c48:	sub    DWORD PTR [eax],0x6e
  421c4b:	mov    eax,ds:0xa32dc339
  421c50:	sbb    BYTE PTR [esi],ch
  421c52:	push   esi
  421c53:	inc    ebp
  421c54:	jne    0x421c1b
  421c56:	sub    al,BYTE PTR [ebp+0xf]
  421c59:	pop    edx
  421c5a:	xchg   edx,eax
  421c5b:	pusha  
  421c5c:	test   eax,0x7551808d
  421c61:	sbb    dl,BYTE PTR fs:[esi-0x2dfa67be]
  421c68:	(bad)  
  421c69:	cld    
  421c6a:	sbb    cl,ah
  421c6c:	mul    DWORD PTR [edi+0x3f16ffac]
  421c72:	sub    al,dh
  421c74:	psrlq  mm3,QWORD PTR [edx+0x6c]
  421c78:	sub    ah,BYTE PTR [ecx-0x6d8b0c85]
  421c7e:	adc    edx,DWORD PTR [edi]
  421c80:	jbe    0x421cbc
  421c82:	mov    ch,0xda
  421c84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c85:	sti    
  421c86:	popa   
  421c87:	inc    esp
  421c88:	shr    BYTE PTR [esi+esi*2],cl
  421c8b:	das    
  421c8c:	xchg   edx,eax
  421c8d:	add    bh,BYTE PTR [esi]
  421c8f:	ret    0xa760
  421c92:	mov    esp,esi
  421c94:	pop    ecx
  421c95:	(bad)  
  421c96:	sti    
  421c97:	jecxz  0x421cb2
  421c99:	mov    dl,0x9d
  421c9b:	ss ss out 0x3a,al
  421c9f:	ror    ax,cl
  421ca2:	sbb    dl,0x38
  421ca5:	test   BYTE PTR [edi],0x44
  421ca8:	jmp    0xf329:0x93aedc20
  421caf:	repz mov ds:0xba2054e1,eax
  421cb5:	mov    fs,WORD PTR [edx]
  421cb7:	fstp   DWORD PTR [eax+0x14741edc]
  421cbd:	mov    ah,BYTE PTR [edx]
  421cbf:	adc    al,0x2c
  421cc1:	xor    al,ch
  421cc3:	cmc    
  421cc4:	push   cs
  421cc5:	cmp    dl,dh
  421cc7:	mov    eax,0xc3da977f
  421ccc:	jb     0x421c9b
  421cce:	shl    BYTE PTR [ecx+eax*8+0x50cb8b4a],0x33
  421cd6:	mov    ds:0x314fb9ca,al
  421cdb:	add    al,0x2f
  421cdd:	sub    BYTE PTR [edx+0x4aae0b25],bh
  421ce3:	aaa    
  421ce4:	jmp    0x64de:0xf605af7c
  421ceb:	enter  0x8ef2,0x99
  421cef:	dec    ecx
  421cf0:	jnp    0x421d59
  421cf2:	gs sub al,0x6b
  421cf5:	lock fs mov ebx,0xd178b100
  421cfc:	xor    al,0xb0
  421cfe:	mov    DWORD PTR [edx+0x2f],edi
  421d01:	xchg   ebx,eax
  421d02:	rcr    DWORD PTR [edx+0x3a],0xd1
  421d06:	arpl   bp,di
  421d08:	jo     0x421d4f
  421d0a:	push   esi
  421d0b:	(bad)  
  421d0c:	mov    bl,0x7f
  421d0e:	pop    es
  421d0f:	and    BYTE PTR [esi+edx*4+0x2b],dl
  421d13:	or     esp,DWORD PTR [edx]
  421d15:	aaa    
  421d16:	push   ebx
  421d17:	bound  ebx,QWORD PTR [esp+ebx*1-0x4d]
  421d1b:	imul   BYTE PTR [esi-0x486e677d]
  421d21:	int    0x5e
  421d23:	and    DWORD PTR [eax],0x7484e7a
  421d29:	rcl    BYTE PTR [ecx],cl
  421d2b:	mov    esi,0xbd74a58f
  421d30:	mov    ebp,0x54b1b67a
  421d35:	sbb    ebx,ecx
  421d37:	dec    ebx
  421d38:	xlat   BYTE PTR ds:[ebx]
  421d39:	dec    edx
  421d3a:	cld    
  421d3b:	adc    BYTE PTR [esi],dl
  421d3d:	dec    edx
  421d3e:	mov    edx,DWORD PTR [ecx]
  421d40:	int3   
  421d41:	sbb    esi,DWORD PTR [edi-0x7d26645f]
  421d47:	mov    al,0x2f
  421d49:	mov    ds:0x11cec80,al
  421d4e:	push   0xbd369165
  421d53:	adc    al,0x9c
  421d55:	aas    
  421d56:	fcomp  st(4)
  421d58:	push   ecx
  421d59:	push   edi
  421d5a:	fldpi  
  421d5c:	adc    edi,DWORD PTR [ecx+ebx*8]
  421d5f:	stc    
  421d60:	loop   0x421d05
  421d62:	and    ebp,DWORD PTR [ebx]
  421d64:	iret   
  421d65:	or     esp,ecx
  421d67:	cdq    
  421d68:	mov    ecx,0x4c15ea56
  421d6d:	ror    BYTE PTR [edi-0x20],cl
  421d70:	inc    ecx
  421d71:	jmp    0xdb9e:0xee0fe897
  421d78:	icebp  
  421d79:	jmp    0xa258b2d5
  421d7e:	lea    esp,[esi]
  421d80:	imul   edx,DWORD PTR [esi+0x25],0x26ac25d8
  421d87:	je     0x421da2
  421d89:	addr16 push 0x4c703a56
  421d8f:	mov    ebp,0x43cb561d
  421d94:	loope  0x421d9c
  421d96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d97:	bound  ebp,QWORD PTR [ecx-0xd]
  421d9a:	not    BYTE PTR [edi+0x2c]
  421d9d:	or     al,0xd5
  421d9f:	icebp  
  421da0:	push   eax
  421da1:	mov    DWORD PTR [esi],edx
  421da3:	xchg   ah,cl
  421da5:	mov    dl,0x3b
  421da7:	rcr    BYTE PTR [eax-0x7a7982c8],0x3
  421dae:	mov    edx,0x24ef7a9f
  421db3:	jne    0x421dd2
  421db5:	pop    edi
  421db6:	fimul  DWORD PTR [ebx]
  421db8:	mov    cl,0x98
  421dba:	inc    ecx
  421dbb:	outs   dx,DWORD PTR ds:[esi]
  421dbc:	fnstsw WORD PTR [ebx+0x6d]
  421dbf:	mov    edx,0xa28f4390
  421dc4:	cdq    
  421dc5:	not    DWORD PTR [bx+si-0x62]
  421dc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421dca:	les    edi,FWORD PTR [esi-0x12]
  421dcd:	inc    ebx
  421dce:	(bad)  
  421dcf:	add    ebx,edi
  421dd1:	mov    esp,DWORD PTR [eiz*1-0x25a550b0]
  421dd8:	into   
  421dd9:	sub    cl,bl
  421ddb:	mov    fs:0x9c31767b,al
  421de1:	inc    ebp
  421de2:	imul   DWORD PTR [edi+0x3bb6d57d]
  421de8:	out    dx,eax
  421de9:	xchg   edx,eax
  421dea:	pop    es
  421deb:	push   cs
  421dec:	dec    ebx
  421ded:	or     al,0x1f
  421def:	dec    esi
  421df0:	cmp    bh,BYTE PTR [ebx+0x31f95f91]
  421df6:	scas   eax,DWORD PTR es:[edi]
  421df7:	inc    ebp
  421df8:	retf   
  421df9:	sahf   
  421dfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421dfb:	sbb    ebp,DWORD PTR [ecx+0x8]
  421dfe:	dec    ebp
  421dff:	or     DWORD PTR [edx+0x5b884fcf],edi
  421e05:	dec    ebp
  421e06:	sbb    BYTE PTR [edx+0x273c32cc],al
  421e0c:	stc    
  421e0d:	int3   
  421e0e:	cdq    
  421e0f:	popa   
  421e10:	shl    BYTE PTR [eax],0x8c
  421e13:	bound  ebx,QWORD PTR [edx-0x25acb27f]
  421e19:	arpl   WORD PTR [ebx],cx
  421e1b:	pop    edx
  421e1c:	into   
  421e1d:	or     eax,0x79223e89
  421e22:	push   0xead3fc0
  421e27:	sub    DWORD PTR [ecx-0x35c434ff],ecx
  421e2d:	repnz dec ebx
  421e2f:	neg    DWORD PTR [esi+0x5e395fbf]
  421e35:	add    al,0x92
  421e37:	xchg   ebx,eax
  421e38:	mov    esi,DWORD PTR [eax-0x6c]
  421e3b:	imul   ecx,DWORD PTR [edx-0x77],0xee12cbff
  421e42:	iret   
  421e43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e44:	push   0xb98b1e76
  421e49:	sbb    edx,ebp
  421e4b:	mov    gs,edi
  421e4d:	xor    esi,DWORD PTR [ebx+0x66b4b638]
  421e53:	xor    dh,BYTE PTR [ecx]
  421e55:	jnp    0x421e32
  421e57:	rcl    BYTE PTR [ecx+0x50],1
  421e5a:	imul   eax,DWORD PTR [edi+0x5c],0x3e6ca717
  421e61:	sbb    eax,0xb68ebac
  421e66:	lods   al,BYTE PTR ds:[esi]
  421e67:	cmc    
  421e68:	push   eax
  421e69:	call   0x9998:0xc46d5505
  421e70:	push   0xffffffc4
  421e72:	dec    edx
  421e73:	and    al,0xa8
  421e75:	mov    ah,0x51
  421e77:	and    bh,al
  421e79:	sub    BYTE PTR ds:0x566a7642,0x1d
  421e80:	cmc    
  421e81:	inc    ebp
  421e82:	xor    eax,0xd21f8385
  421e87:	inc    ebx
  421e88:	mov    fs,WORD PTR [edi+0x17a619e3]
  421e8e:	int3   
  421e8f:	adc    eax,edi
  421e91:	test   BYTE PTR [ecx+ebp*2],bl
  421e94:	pop    ebx
  421e95:	lock jne 0x421e93
  421e98:	mov    esi,0x168f601b
  421e9d:	or     BYTE PTR [ebx-0x5ed61dbc],0x17
  421ea4:	les    esi,FWORD PTR [ebp+0xcf114f]
  421eaa:	out    0x98,eax
  421eac:	fneni(8087 only) 
  421eae:	push   es
  421eaf:	jae    0x421edd
  421eb1:	clc    
  421eb2:	sub    BYTE PTR [esi+0x5e987cb9],dl
  421eb8:	scas   al,BYTE PTR es:[edi]
  421eb9:	fmulp  st(0),st
  421ebb:	sub    edx,DWORD PTR [ebp-0x30dd4445]
  421ec1:	and    BYTE PTR [edx+0xf],bh
  421ec4:	adc    edx,DWORD PTR [eax-0x25a14cc]
  421eca:	out    0xff,al
  421ecc:	or     al,0x95
  421ece:	xchg   ecx,eax
  421ecf:	stos   BYTE PTR es:[edi],al
  421ed0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ed1:	push   ebp
  421ed2:	jo     0x421e82
  421ed4:	stc    
  421ed5:	pop    es
  421ed6:	xchg   ebp,eax
  421ed7:	not    ch
  421ed9:	inc    esi
  421eda:	xchg   ecx,eax
  421edb:	or     BYTE PTR ds:0x3c59f22e,0xc3
  421ee2:	mov    dl,0x9e
  421ee4:	mov    WORD PTR [esp+edx*8+0x21cfe027],cs
  421eeb:	out    0xca,al
  421eed:	fsub   DWORD PTR ds:0x71b9fa4e
  421ef3:	cli    
  421ef4:	xor    al,0x90
  421ef6:	repz sub al,0x2c
  421ef9:	outs   dx,DWORD PTR ds:[esi]
  421efa:	rcr    BYTE PTR [ebx+0x6b],0xfa
  421efe:	mov    ebp,0x455c2420
  421f03:	imul   edx,DWORD PTR [ecx-0x2c],0x2f1cf17f
  421f0a:	pusha  
  421f0b:	scas   eax,DWORD PTR es:[edi]
  421f0c:	jb     0x421e8f
  421f0e:	mov    eax,DWORD PTR [ecx-0x7e]
  421f11:	out    dx,eax
  421f12:	ss cwde 
  421f14:	xchg   esi,eax
  421f15:	popf   
  421f16:	or     esp,DWORD PTR [ebp+0x4f]
  421f19:	sub    BYTE PTR [ebp+eax*2+0x63],al
  421f1d:	mov    edx,0x538c662c
  421f22:	lahf   
  421f23:	jae    0x421eb0
  421f25:	mov    ecx,DWORD PTR [ecx+0x76]
  421f28:	xchg   ecx,eax
  421f29:	bound  esp,QWORD PTR [eax+0x7f]
  421f2c:	fiadd  DWORD PTR [ebx+0x3dd24a15]
  421f32:	or     bl,bl
  421f34:	lea    ebp,[bp+di+0x15c0]
  421f39:	pop    esp
  421f3a:	push   ebx
  421f3b:	icebp  
  421f3c:	mov    al,BYTE PTR [eax+0x23]
  421f3f:	in     eax,0xe6
  421f41:	cmp    eax,0x26430414
  421f46:	dec    ebx
  421f47:	cmp    ebp,DWORD PTR ds:0x3c08040
  421f4d:	jmp    0xc94d744c
  421f52:	xchg   ebp,eax
  421f53:	pop    edx
  421f54:	in     eax,dx
  421f55:	xchg   ecx,eax
  421f56:	arpl   WORD PTR [esi+0x47870397],ax
  421f5c:	or     BYTE PTR ds:[ecx+0x7e69435d],al
  421f63:	dec    ebx
  421f64:	and    al,0xe
  421f66:	lods   al,BYTE PTR ds:[esi]
  421f67:	xchg   esp,eax
  421f68:	lds    ebp,FWORD PTR [edi+0x17]
  421f6b:	addr16 ret 0xaa03
  421f6f:	pop    esp
  421f70:	std    
  421f71:	jno    0x421faf
  421f73:	pop    edx
  421f74:	and    DWORD PTR [ecx],esp
  421f76:	ret    0xb0f0
  421f79:	pop    ds
  421f7a:	adc    di,ax
  421f7d:	test   BYTE PTR [esi],0x56
  421f80:	sub    bl,BYTE PTR [ebx-0x6]
  421f83:	fs cmp dl,bl
  421f86:	xor    ch,BYTE PTR [edi-0xd]
  421f89:	les    edx,FWORD PTR [eax]
  421f8b:	xor    DWORD PTR [esi],edi
  421f8d:	jmp    0x3bc3:0x3264eaa7
  421f94:	out    0xf0,al
  421f96:	out    dx,al
  421f97:	mov    edi,0x15278e1c
  421f9c:	pop    ds
  421f9d:	jae    0x421fbb
  421f9f:	loop   0x42201f
  421fa1:	test   eax,0xf15d42bb
  421fa6:	sbb    bl,BYTE PTR [edi-0x43bd9169]
  421fac:	jo     0x421fe4
  421fae:	rol    DWORD PTR [ebp+0x72c7d16d],1
  421fb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fb5:	shr    BYTE PTR [ebx+0x7543a70f],1
  421fbb:	inc    esp
  421fbc:	inc    edi
  421fbd:	nop
  421fbe:	sbb    bl,al
  421fc0:	push   cs
  421fc1:	xor    DWORD PTR [ecx],0x7805febb
  421fc7:	add    al,0x20
  421fc9:	pop    esp
  421fca:	nop
  421fcb:	gs cs sub al,0x59
  421fcf:	imul   edi,ebp,0xffffffb3
  421fd2:	mov    esp,0xb369cdff
  421fd7:	call   0xaee7:0xad25b0df
  421fde:	call   0x91971ccb
  421fe3:	add    cl,BYTE PTR [ecx+0x79]
  421fe6:	neg    eax
  421fe8:	xor    BYTE PTR [ebp-0x778b6d1b],dl
  421fee:	lds    ecx,FWORD PTR [ebp-0x4d9e8a5]
  421ff4:	or     ah,ch
  421ff6:	sbb    ebx,DWORD PTR [ebp+ebp*2-0x2632dc1d]
  421ffd:	dec    ecx
  421ffe:	cmp    DWORD PTR [ecx],ebp
  422000:	or     DWORD PTR [eax+0x7d5ee9ec],ecx
  422006:	enter  0x1527,0x7d
  42200a:	push   eax
  42200b:	adc    cl,BYTE PTR [ebp+0x13]
  42200e:	fs repz das 
  422011:	lods   al,BYTE PTR ds:[esi]
  422012:	hlt    
  422013:	xor    dl,bh
  422015:	jle    0x422009
  422017:	loopne 0x421fb9
  422019:	or     ebx,ebp
  42201b:	call   0x7097b88f
  422020:	in     eax,dx
  422021:	xchg   DWORD PTR [ebx],ebx
  422023:	sbb    cl,BYTE PTR [edx-0x62]
  422026:	in     eax,dx
  422027:	les    ebx,FWORD PTR [ebx+0x1011fb20]
  42202d:	or     DWORD PTR [edx],eax
  42202f:	inc    edi
  422030:	xlat   BYTE PTR ds:[ebx]
  422031:	add    al,0x7f
  422033:	jne    0x422026
  422035:	loop   0x421fca
  422037:	out    dx,al
  422038:	dec    edi
  422039:	or     DWORD PTR ds:0xb328e7e0,edi
  42203f:	in     eax,0x4f
  422041:	pop    es
  422042:	imul   edx,DWORD PTR [ecx],0xffffffab
  422045:	dec    ebx
  422046:	fistp  DWORD PTR [eax+0x36]
  422049:	or     dh,bh
  42204b:	(bad)  
  42204c:	sub    eax,DWORD PTR [ebx]
  42204e:	leave  
  42204f:	shr    BYTE PTR [eax-0x2b],0x6a
  422053:	ja     0x422006
  422055:	sub    BYTE PTR [edi],dh
  422057:	dec    ebp
  422058:	or     ah,BYTE PTR [ebx+0x2]
  42205b:	stc    
  42205c:	mov    bh,0xff
  42205e:	scas   eax,DWORD PTR es:[edi]
  42205f:	mov    edi,0xa735ffce
  422064:	add    DWORD PTR [edx+0x0],0xffffffff
  422068:	xor    eax,0x428423
  42206d:	push   DWORD PTR [ebp-0x28]
  422070:	push   DWORD PTR [ebp-0x2c]
  422073:	mov    eax,DWORD PTR [ebp-0x14]
  422076:	call   eax
  422078:	mov    eax,DWORD PTR [ebp-0x30]
  42207b:	jmp    0x422573
  422080:	xchg   ebp,eax
  422081:	rol    DWORD PTR [edx],0x97
  422084:	push   es
  422085:	mov    eax,DWORD PTR [edi+0x689842c3]
  42208b:	neg    BYTE PTR [edx-0x67]
  42208e:	je     0x4220e3
  422090:	mov    al,ds:0xa77a7d8a
  422095:	jle    0x422111
  422097:	jp     0x422095
  422099:	mov    ss,WORD PTR [ebp+0x48]
  42209c:	out    dx,al
  42209d:	sub    DWORD PTR [edx],esi
  42209f:	push   esi
  4220a0:	and    DWORD PTR [ebp+0x26],edi
  4220a3:	push   eax
  4220a4:	mov    bl,0x1e
  4220a6:	adc    al,0x20
  4220a8:	mov    edi,0xbefee883
  4220ad:	jle    0x422095
  4220af:	xor    BYTE PTR [eax+0x11e985ce],dl
  4220b5:	adc    eax,0x2ff0dcfc
  4220ba:	(bad)
  4220bd:	pop    eax
  4220be:	into   
  4220bf:	div    DWORD PTR ss:[ebx-0x37]
  4220c3:	cmp    al,0x47
  4220c5:	pop    esi
  4220c6:	push   ebp
  4220c7:	scas   eax,DWORD PTR es:[edi]
  4220c8:	xlat   BYTE PTR ds:[ebx]
  4220c9:	fld    DWORD PTR [edx]
  4220cb:	xchg   esp,eax
  4220cc:	rol    BYTE PTR [edi],cl
  4220ce:	stc    
  4220cf:	retf   0x112a
  4220d2:	cld    
  4220d3:	inc    ebx
  4220d4:	scas   eax,DWORD PTR es:[edi]
  4220d5:	lds    eax,FWORD PTR [eax]
  4220d7:	inc    eax
  4220d8:	ins    DWORD PTR es:[edi],dx
  4220d9:	cmovle eax,DWORD PTR [eax+0x2dfa30e9]
  4220e0:	dec    esp
  4220e1:	xchg   esi,eax
  4220e2:	(bad)  
  4220e4:	aas    
  4220e5:	adc    BYTE PTR ds:0x34892f97,al
  4220eb:	jnp    0x42210f
  4220ed:	mov    esi,0xe217cae0
  4220f2:	mov    ds:0xb50fe4d5,eax
  4220f7:	sbb    DWORD PTR [eax+0x3121877f],0x75
  4220fe:	inc    edx
  4220ff:	mov    DWORD PTR ds:0x86795fb8,esp
  422105:	jmp    0x7544:0x3d3998b4
  42210c:	xor    edx,0x4a235354
  422112:	pop    ss
  422113:	inc    eax
  422114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422115:	sti    
  422116:	dec    esi
  422117:	and    al,0x9d
  422119:	xor    bl,BYTE PTR [ebp-0x1ac0b44e]
  42211f:	mov    eax,0x6776f3da
  422124:	enter  0xb6dc,0xdc
  422128:	test   BYTE PTR [ebp+0x41],ah
  42212b:	xchg   esi,eax
  42212c:	(bad)  
  42212d:	mov    ecx,0x6f1b98ae
  422132:	ins    DWORD PTR es:[edi],dx
  422133:	inc    esp
  422134:	daa    
  422135:	repz mov edx,0x9236dd65
  42213b:	xor    edi,DWORD PTR [ebp+0x46]
  42213e:	lock pop ds
  422140:	mov    DWORD PTR [ecx-0x77],ebx
  422143:	(bad)  
  422145:	pop    esp
  422146:	ins    BYTE PTR es:[edi],dx
  422147:	jb     0x42213f
  422149:	xchg   ebp,eax
  42214a:	stc    
  42214b:	sub    ah,cl
  42214d:	icebp  
  42214e:	inc    esi
  42214f:	leave  
  422150:	mov    BYTE PTR [eax+edx*4+0x1e],ah
  422154:	add    edi,DWORD PTR [ecx-0x55]
  422157:	sbb    esi,esi
  422159:	into   
  42215a:	cwde   
  42215b:	mov    dl,0xa2
  42215d:	mov    ch,0x5d
  42215f:	scas   al,BYTE PTR es:[edi]
  422160:	and    edx,DWORD PTR [esi+ecx*4+0x2]
  422164:	lea    esi,[edi-0xc]
  422167:	cli    
  422168:	jp     0x422135
  42216a:	xor    eax,0x6eded508
  42216f:	popa   
  422170:	inc    eax
  422171:	and    edx,DWORD PTR [ebp-0x5f]
  422174:	adc    BYTE PTR [esi+0x45989d9],dh
  42217a:	adc    edx,DWORD PTR [edx+0x5e70e030]
  422180:	jg     0x42211d
  422182:	jb     0x4221d8
  422184:	gs mov fs,esi
  422187:	sub    eax,0xca41b084
  42218c:	ds push es
  42218e:	mov    ebp,0xbe1734ec
  422193:	pop    eax
  422194:	sub    eax,0x5574035b
  422199:	jbe    0x42215c
  42219b:	jmp    0x90d3:0xda4be9a4
  4221a2:	mov    dh,0xb7
  4221a4:	dec    ebx
  4221a5:	int    0x3e
  4221a7:	jle    0x4221e3
  4221a9:	xor    BYTE PTR [ebx],dl
  4221ab:	jb     0x4221a4
  4221ad:	les    ebp,FWORD PTR [edx+edx*4]
  4221b0:	stos   BYTE PTR es:[edi],al
  4221b1:	mov    dl,ch
  4221b3:	pop    edi
  4221b4:	dec    edi
  4221b5:	pop    ebp
  4221b6:	mov    edx,0xd8bb4827
  4221bb:	loop   0x42213d
  4221bd:	shl    DWORD PTR [edi+0x3b60232a],1
  4221c3:	push   esi
  4221c4:	dec    ecx
  4221c5:	aas    
  4221c6:	ds adc bl,bh
  4221c9:	mov    eax,0x2c0f0610
  4221ce:	xchg   edi,eax
  4221cf:	sahf   
  4221d0:	push   0xad990540
  4221d5:	sub    eax,0xe32b1f8d
  4221da:	xor    BYTE PTR [eax],0xe6
  4221dd:	fst    DWORD PTR [ebp-0xa5fac9]
  4221e3:	ja     0x42219e
  4221e5:	addr16 ret 0x7836
  4221e9:	std    
  4221ea:	xchg   ecx,eax
  4221eb:	dec    edi
  4221ec:	add    eax,0xc7db45d6
  4221f1:	fimul  DWORD PTR [edx]
  4221f3:	dec    esp
  4221f4:	jge    0x422226
  4221f6:	into   
  4221f7:	jmp    0x422235
  4221f9:	and    al,0x7d
  4221fb:	call   0xa20b:0x99e9a213
  422202:	scas   eax,DWORD PTR es:[edi]
  422203:	sahf   
  422204:	sar    DWORD PTR [ebx-0x1346a6f4],1
  42220a:	ret    
  42220b:	rcl    DWORD PTR [ebx+0x13],cl
  42220e:	mov    dl,dl
  422210:	dec    edx
  422211:	aam    0xc0
  422213:	cmp    ebp,eax
  422215:	loopne 0x422273
  422217:	pop    esi
  422218:	xor    eax,0x18786f39
  42221d:	ins    BYTE PTR es:[edi],dx
  42221e:	mov    WORD PTR [ecx+0x96dc21d],?
  422224:	scas   al,BYTE PTR es:[edi]
  422225:	int    0x7d
  422227:	mov    ah,0xe6
  422229:	js     0x4221ac
  42222b:	in     eax,dx
  42222c:	push   esp
  42222d:	data16 jno 0x4221e2
  422230:	mov    DWORD PTR [ebp+edx*2-0x76],ebx
  422234:	pushf  
  422235:	adc    al,0x7e
  422237:	xchg   esp,eax
  422238:	into   
  422239:	jnp    0x422239
  42223b:	add    al,0xf6
  42223d:	mov    cl,0x7b
  42223f:	jl     0x422246
  422241:	in     eax,dx
  422242:	cmp    DWORD PTR [eax-0x62],eax
  422245:	xchg   esi,eax
  422246:	(bad)  
  422248:	adc    dl,al
  42224a:	addr16 cmp eax,0x638723d9
  422250:	fbld   TBYTE PTR [ebp+0x23d525e3]
  422256:	push   ss
  422257:	stos   BYTE PTR es:[edi],al
  422258:	push   eax
  422259:	daa    
  42225a:	data16 ja 0x42220f
  42225d:	(bad)  
  42225e:	and    ebx,DWORD PTR [ebp+0x4d778a8a]
  422264:	cmp    BYTE PTR [ecx+0x44],cl
  422267:	clc    
  422268:	out    dx,eax
  422269:	mov    bh,0x47
  42226b:	loopne 0x4222de
  42226d:	jp     0x4221f0
  42226f:	es inc esp
  422271:	fst    DWORD PTR [ebx+ebp*1]
  422274:	mov    dl,0x20
  422276:	or     BYTE PTR [ecx],al
  422278:	imul   ecx,ebx,0x409cd6a0
  42227e:	mov    esi,DWORD PTR [ebx+0x75e8c8e0]
  422284:	inc    ebx
  422285:	retf   0xc004
  422288:	mov    ah,0x6
  42228a:	add    eax,0x6feeba3
  42228f:	dec    ebx
  422290:	jnp    0x422288
  422292:	inc    esp
  422293:	int    0x8c
  422295:	sbb    BYTE PTR [ebx],0x25
  422298:	sub    ch,BYTE PTR [edi-0x538d96b2]
  42229e:	inc    ebx
  42229f:	pushf  
  4222a0:	into   
  4222a1:	outs   dx,DWORD PTR ds:[esi]
  4222a2:	(bad)  
  4222a3:	xlat   BYTE PTR ds:[ebx]
  4222a4:	out    0xf1,eax
  4222a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222a7:	pop    edx
  4222a8:	(bad)
  4222ab:	lds    ebx,FWORD PTR [esi-0x5078927d]
  4222b1:	test   BYTE PTR [ecx],dh
  4222b3:	in     eax,0x57
  4222b5:	mul    DWORD PTR [edx-0x3140471a]
  4222bb:	dec    ecx
  4222bc:	cmp    edi,edx
  4222be:	rcl    DWORD PTR [ebx-0x2a6d711f],1
  4222c4:	or     al,BYTE PTR [ecx+0x3bf2ffe9]
  4222ca:	(bad)  
  4222cb:	pop    edx
  4222cc:	test   ebx,ecx
  4222ce:	(bad)  
  4222cf:	sti    
  4222d0:	in     eax,0x2b
  4222d2:	in     al,0xb1
  4222d4:	or     eax,0xcb87d718
  4222d9:	hlt    
  4222da:	push   cs
  4222db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222dc:	adc    edi,DWORD PTR [ebp+0x44]
  4222df:	jns    0x422352
  4222e1:	(bad)  
  4222e2:	test   BYTE PTR [eax-0xaf2015],0x15
  4222e9:	add    al,0x64
  4222eb:	jae    0x422344
  4222ed:	js     0x42233f
  4222ef:	xchg   BYTE PTR [ecx],ch
  4222f1:	dec    edi
  4222f2:	std    
  4222f3:	dec    edi
  4222f4:	sbb    eax,0x69fa137f
  4222f9:	fwait
  4222fa:	jmp    0x4222cc
  4222fc:	fwait
  4222fd:	jbe    0x422301
  4222ff:	jle    0x4222c9
  422301:	dec    ecx
  422302:	cmp    BYTE PTR [ecx-0x63],ch
  422305:	cmp    esp,DWORD PTR [ebx]
  422307:	out    0xd5,al
  422309:	imul   ecx,DWORD PTR ds:0xda6a1843,0xffffffb3
  422310:	sti    
  422311:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422312:	gs popf 
  422314:	mov    edx,0x63a58ff
  422319:	sub    ah,0xdc
  42231c:	push   0x61
  42231e:	push   esi
  42231f:	adc    BYTE PTR [esi],al
  422321:	mov    dh,0xe6
  422323:	test   BYTE PTR [edx+0x5d],0x53
  422327:	jge    0x42231c
  422329:	push   0x42f44604
  42232e:	test   al,0xcc
  422330:	gs retf 
  422332:	sub    eax,0xbf125c7d
  422337:	xor    DWORD PTR [esi],eax
  422339:	or     al,0xcb
  42233b:	iret   
  42233c:	cld    
  42233d:	pop    es
  42233e:	add    DWORD PTR [ebp+0x34],esp
  422341:	xchg   esi,eax
  422342:	jns    0x422360
  422344:	aas    
  422345:	repz push ebp
  422347:	push   es
  422348:	rol    cl,1
  42234a:	(bad)  
  42234b:	sub    al,0xf0
  42234d:	push   ecx
  42234e:	sub    al,0x60
  422350:	adc    dh,BYTE PTR [ebx]
  422352:	mov    edx,0x121be447
  422357:	pusha  
  422358:	sti    
  422359:	aas    
  42235a:	xchg   edx,eax
  42235b:	scas   al,BYTE PTR es:[edi]
  42235c:	(bad)  
  42235d:	mov    cl,0x67
  42235f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422360:	mov    al,ds:0xcf8ae56b
  422365:	loope  0x422353
  422367:	mov    esp,0xe6c5e4db
  42236c:	not    BYTE PTR [edx]
  42236e:	and    DWORD PTR [edx-0x7e],edx
  422371:	in     eax,dx
  422372:	xchg   dl,bh
  422374:	loopne 0x422315
  422376:	xor    edi,DWORD PTR ds:0x2a2197f4
  42237c:	jmp    0x290e1b5c
  422381:	pop    esp
  422382:	and    ebx,0x39
  422385:	xor    BYTE PTR [edx],ah
  422387:	mov    eax,ds:0x9835621d
  42238c:	repnz out 0x65,eax
  42238f:	ror    edi,1
  422391:	add    al,0xfc
  422393:	push   eax
  422394:	iret   
  422395:	mov    BYTE PTR [ebx-0x61],dl
  422398:	mov    ebp,0xad0161ff
  42239d:	inc    eax
  42239e:	xchg   edi,eax
  42239f:	sar    DWORD PTR [edx+0x6b],0xa5
  4223a3:	jnp    0x422417
  4223a5:	call   0xfe0b086d
  4223aa:	jmp    0x4223af
  4223ac:	pop    ecx
  4223ad:	in     eax,dx
  4223ae:	int    0x42
  4223b0:	retf   
  4223b1:	or     ch,BYTE PTR [ecx-0x1e]
  4223b4:	jb     0x42241d
  4223b6:	retf   0x2c63
  4223b9:	sub    dh,BYTE PTR [edi+0x24]
  4223bc:	cmp    DWORD PTR [esi],edi
  4223be:	xchg   ebp,eax
  4223bf:	mov    ch,0x9c
  4223c1:	cdq    
  4223c2:	mov    bl,0xe1
  4223c4:	rcl    BYTE PTR ds:0x903c8352,1
  4223ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223cb:	push   0x5c9f4c88
  4223d0:	shl    BYTE PTR [eax],1
  4223d2:	mov    dh,0x64
  4223d4:	adc    al,0xe1
  4223d6:	or     al,BYTE PTR [eax+0x8]
  4223d9:	fnstcw WORD PTR [ebx*4+0x133932fd]
  4223e0:	dec    ecx
  4223e1:	lea    ebp,[eax-0x1d]
  4223e4:	dec    ebp
  4223e5:	sbb    DWORD PTR [ecx],0x5726f6e4
  4223eb:	dec    BYTE PTR [ebp+0x6]
  4223ee:	mov    ah,0xba
  4223f0:	mov    bh,ah
  4223f2:	mov    ebp,0xd29968fb
  4223f7:	and    ch,dl
  4223f9:	stos   DWORD PTR es:[edi],eax
  4223fa:	push   esp
  4223fb:	lods   al,BYTE PTR ds:[esi]
  4223fc:	add    dl,dh
  4223fe:	jbe    0x422407
  422400:	mov    edx,0xd7d86d3a
  422405:	mov    al,ds:0x6c169e5
  42240a:	aad    0xb9
  42240c:	inc    edi
  42240d:	mov    edi,0x19eef689
  422412:	daa    
  422413:	mov    WORD PTR [ebx+ecx*4-0x4a],es
  422417:	cmp    eax,0x93050f4c
  42241c:	push   ss
  42241d:	ss jo  0x4223ee
  422420:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422421:	mov    ebp,0x69188730
  422426:	xchg   ecx,eax
  422427:	mov    ah,0xdf
  422429:	icebp  
  42242a:	in     eax,dx
  42242b:	stos   BYTE PTR es:[edi],al
  42242c:	mov    esi,0x6013cdf7
  422431:	xor    eax,DWORD PTR [esi+ecx*8+0x29]
  422435:	sub    DWORD PTR [eax+0x53],ebp
  422438:	push   ecx
  422439:	pop    eax
  42243a:	rol    edi,cl
  42243c:	or     al,0xba
  42243e:	lods   eax,DWORD PTR ds:[esi]
  42243f:	imul   eax,DWORD PTR [esp+esi*4],0xffffff9c
  422443:	inc    edi
  422444:	push   ebx
  422445:	gs dec eax
  422447:	dec    edx
  422448:	push   0x89d1cd25
  42244d:	jno    0x422434
  42244f:	inc    esi
  422450:	mov    ds:0x42cab90d,al
  422455:	inc    eax
  422456:	stos   DWORD PTR es:[edi],eax
  422457:	ss pop eax
  422459:	in     eax,dx
  42245a:	ja     0x422425
  42245c:	mov    edx,DWORD PTR [ecx-0x26]
  42245f:	int3   
  422460:	test   BYTE PTR [eax+0x656ec7b],ch
  422466:	test   ebp,esi
  422468:	jns    0x4223fd
  42246a:	lds    ebx,FWORD PTR [ecx+ebx*8+0x2]
  42246e:	mov    ah,0xd9
  422470:	stos   DWORD PTR es:[edi],eax
  422471:	and    eax,0x634976d
  422476:	nop
  422477:	or     eax,0x7ee4bc43
  42247c:	data16 in al,dx
  42247e:	iret   
  42247f:	outs   dx,DWORD PTR ds:[esi]
  422480:	scas   eax,DWORD PTR es:[edi]
  422481:	test   DWORD PTR [esi],eax
  422483:	pop    ecx
  422484:	mov    ebp,ebp
  422486:	jmp    0x858c2f19
  42248b:	and    al,0x60
  42248d:	pop    edx
  42248e:	dec    ebp
  42248f:	cmp    eax,0xa1020f1d
  422494:	sbb    eax,0x8ff18ed4
  422499:	push   edx
  42249a:	test   eax,0xb8890307
  42249f:	pop    ss
  4224a0:	xchg   BYTE PTR [esi+eiz*1-0x6f],ch
  4224a4:	repz sub DWORD PTR [edi+0x79],edx
  4224a8:	xchg   edi,eax
  4224a9:	stc    
  4224aa:	mov    edx,0x30bcce1f
  4224af:	aam    0x67
  4224b1:	fidivr WORD PTR [edi+esi*4-0x39c56360]
  4224b8:	push   cs
  4224b9:	call   0xf769c102
  4224be:	mov    bl,0x52
  4224c0:	aaa    
  4224c1:	jl     0x42252b
  4224c3:	mov    edx,0x6424cdb2
  4224c8:	call   0x9c4:0x9541c6bb
  4224cf:	pop    ds
  4224d0:	call   0x48ae:0xe9f87b1c
  4224d7:	pop    ebp
  4224d8:	jle    0x422535
  4224da:	imul   ebx,edx,0x87afd07e
  4224e0:	or     al,0x15
  4224e2:	pushf  
  4224e3:	int    0x5a
  4224e5:	push   ecx
  4224e6:	inc    esp
  4224e7:	mov    ch,0xcc
  4224e9:	mov    edi,0xacd286de
  4224ee:	jnp    0x422483
  4224f0:	das    
  4224f1:	sbb    DWORD PTR [eax-0x1c],ebx
  4224f4:	pop    ecx
  4224f5:	(bad)  
  4224f6:	fwait
  4224f7:	(bad)  
  4224f9:	cs stos BYTE PTR es:[edi],al
  4224fb:	lods   al,BYTE PTR ds:[esi]
  4224fc:	inc    ebx
  4224fd:	adc    dl,BYTE PTR [esi-0x59]
  422500:	inc    bp
  422502:	inc    edi
  422503:	mov    eax,0xf2e522cc
  422508:	and    BYTE PTR [ebp-0x7ad53585],dl
  42250e:	adc    ah,BYTE PTR [ebx-0x1e3e46cc]
  422514:	mov    bh,0x1e
  422516:	iret   
  422517:	jecxz  0x422548
  422519:	out    0x8f,eax
  42251b:	add    dl,ch
  42251d:	sub    bl,BYTE PTR [edi+edi*8+0x7ec28c66]
  422524:	push   edx
  422525:	mov    eax,0x64253f29
  42252a:	popa   
  42252b:	mul    DWORD PTR [ebx-0x4629065b]
  422531:	int    0xac
  422533:	xor    BYTE PTR [ebx+0x4b459e43],0x76
  42253a:	jg     0x42259b
  42253c:	push   eax
  42253d:	add    ah,BYTE PTR [edx]
  42253f:	int    0x6
  422541:	popa   
  422542:	xor    bh,BYTE PTR [eax+0x42b7e629]
  422548:	xor    al,0x37
  42254a:	and    esi,esp
  42254c:	push   edi
  42254d:	inc    esp
  42254e:	mov    esi,0xc9d60f8d
  422553:	mov    edx,0x1d7b56b5
  422558:	fstp   DWORD PTR [ebp+ebp*4-0x3cac638f]
  42255f:	add    DWORD PTR [eax-0x6b],eax
  422562:	push   cs
  422563:	xlat   BYTE PTR ds:[ebx]
  422564:	les    esp,FWORD PTR [ebp+ecx*1-0x80]
  422568:	jo     0x4225a1
  42256a:	xchg   DWORD PTR [eax+0x3d11131c],ebp
  422570:	retf   
  422571:	les    ebp,FWORD PTR [ebp-0x75]
  422574:	or     eax,0x42836b
  422579:	add    DWORD PTR [eax],ecx
  42257b:	pop    edi
  42257c:	pop    esi
  42257d:	leave  
  42257e:	ret    
  42257f:	push   ebp
  422580:	mov    ebp,esp
  422582:	sub    esp,0x18
  422585:	mov    DWORD PTR [ebp-0x10],0xf89f85b0
  42258c:	movzx  edx,WORD PTR ds:0x428673
  422593:	and    edx,DWORD PTR ds:0x42864f
  422599:	mov    DWORD PTR ds:0x428673,edx
  42259f:	lea    eax,[ebp+0x14]
  4225a2:	adc    DWORD PTR ds:0x428607,0x604f
  4225ac:	mov    DWORD PTR [ebp-0x4],eax
  4225af:	mov    ecx,DWORD PTR ds:0x4285f3
  4225b5:	adc    DWORD PTR ds:0x4285df,ecx
  4225bb:	push   esi
  4225bc:	add    DWORD PTR ds:0x42861b,ecx
  4225c2:	mov    esi,0xf89c85b0
  4225c7:	or     DWORD PTR ds:0x4285db,0x4285f7
  4225d1:	mov    DWORD PTR [ebp-0xc],esi
  4225d4:	mov    DWORD PTR ds:0x42862f,0x1a
  4225de:	cmp    DWORD PTR ds:0x42862f,0x0
  4225e5:	je     0x422649
  4225eb:	cmp    DWORD PTR ds:0x42862f,0xa
  4225f2:	jge    0x422649
  4225f8:	jmp    0x42261d
  4225fd:	push   0x428673
  422602:	push   DWORD PTR [ebp-0x20]
  422605:	push   0x8204
  42260a:	push   0x6126
  42260f:	push   0x7868
  422614:	push   DWORD PTR [ebp-0x28]
  422617:	call   DWORD PTR ds:0x4287c7
  42261d:	cmp    DWORD PTR ds:0x42862f,0xb
  422624:	jne    0x422637
  42262a:	mov    edx,DWORD PTR ds:0x42862f
  422630:	dec    edx
  422631:	mov    DWORD PTR ds:0x42862f,edx
  422637:	mov    edx,DWORD PTR ds:0x42862f
  42263d:	dec    edx
  42263e:	mov    DWORD PTR ds:0x42862f,edx
  422644:	jmp    0x4225de
  422649:	lea    eax,[ebp-0xc]
  42264c:	mov    DWORD PTR [ebp-0x14],eax
  42264f:	mov    eax,DWORD PTR [ebp-0xc]
  422652:	or     DWORD PTR ds:0x42863f,0x672c
  42265c:	mov    edx,DWORD PTR [ebp-0x14]
  42265f:	mov    ecx,0x75108a4
  422664:	add    DWORD PTR ds:0x428617,0x428607
  42266e:	xor    eax,ecx
  422670:	add    eax,0x3272ec
  422675:	sub    DWORD PTR ds:0x42862b,0x430
  42267f:	mov    DWORD PTR [edx],eax
  422681:	movzx  eax,WORD PTR ds:0x42861b
  422688:	sbb    eax,DWORD PTR ds:0x4285cf
  42268e:	mov    ds:0x42861b,eax
  422693:	mov    eax,ds:0x428167
  422698:	mov    DWORD PTR ds:0x428617,0x1a
  4226a2:	cmp    DWORD PTR ds:0x428617,0x0
  4226a9:	je     0x4226e5
  4226af:	cmp    DWORD PTR ds:0x428617,0x2a
  4226b6:	jl     0x4226e5
  4226bc:	jmp    0x4226d1
  4226c1:	push   0x42860b
  4226c6:	push   0x428083
  4226cb:	call   DWORD PTR ds:0x4287cb
  4226d1:	xor    edx,edx
  4226d3:	xor    edx,DWORD PTR ds:0x428617
  4226d9:	dec    edx
  4226da:	mov    DWORD PTR ds:0x428617,edx
  4226e0:	jmp    0x4226a2
  4226e5:	mov    edx,DWORD PTR [ebp-0x4]
  4226e8:	mov    eax,DWORD PTR [eax]
  4226ea:	add    eax,DWORD PTR [edx]
  4226ec:	neg    edx
  4226ee:	push   edi
  4226ef:	and    DWORD PTR ds:0x428613,0x0
  4226f9:	jmp    0x42270b
  4226fe:	mov    edi,DWORD PTR ds:0x428613
  422704:	inc    edi
  422705:	mov    DWORD PTR ds:0x428613,edi
  42270b:	cmp    DWORD PTR ds:0x428613,0x13
  422712:	jae    0x42274a
  422718:	cmp    DWORD PTR ds:0x428613,0x14
  42271f:	jb     0x42274a
  422725:	jmp    0x422745
  42272a:	push   0x5e63
  42272f:	push   DWORD PTR [ebp-0x10]
  422732:	push   0x40fa
  422737:	push   0x57ff
  42273c:	push   DWORD PTR [ebp-0x14]
  42273f:	call   DWORD PTR ds:0x42879f
  422745:	jmp    0x4226fe
  42274a:	mov    DWORD PTR [ebp-0x8],eax
  42274d:	mov    edi,DWORD PTR [ebp+0x8]
  422750:	mov    DWORD PTR ds:0x428643,0x13
  42275a:	cmp    DWORD PTR ds:0x428643,0x0
  422761:	je     0x4227af
  422767:	cmp    DWORD PTR ds:0x428643,0x8
  42276e:	jb     0x4227af
  422774:	jmp    0x422784
  422779:	push   0x6e63
  42277e:	call   DWORD PTR ds:0x4287a3
  422784:	cmp    DWORD PTR ds:0x428643,0x9
  42278b:	jne    0x42279c
  422791:	mov    eax,ds:0x428643
  422796:	dec    eax
  422797:	mov    ds:0x428643,eax
  42279c:	xor    eax,eax
  42279e:	xor    eax,DWORD PTR ds:0x428643
  4227a4:	dec    eax
  4227a5:	mov    ds:0x428643,eax
  4227aa:	jmp    0x42275a
  4227af:	mov    eax,ds:0x4282ef
  4227b4:	and    DWORD PTR ds:0x428647,0x0
  4227be:	xor    edx,edx
  4227c0:	or     edx,DWORD PTR ds:0x428647
  4227c6:	inc    edx
  4227c7:	mov    DWORD PTR ds:0x428647,edx
  4227cd:	cmp    DWORD PTR ds:0x428647,0x8
  4227d4:	jb     0x422814
  4227da:	jmp    0x4227ed
  4227df:	push   DWORD PTR [ebp-0x18]
  4227e2:	push   0x42804c
  4227e7:	call   DWORD PTR ds:0x4287a7
  4227ed:	cmp    DWORD PTR ds:0x428647,0x7
  4227f4:	jne    0x422807
  4227fa:	mov    edx,DWORD PTR ds:0x428647
  422800:	inc    edx
  422801:	mov    DWORD PTR ds:0x428647,edx
  422807:	cmp    DWORD PTR ds:0x428647,0x16
  42280e:	jb     0x4227be
  422814:	mov    eax,DWORD PTR [eax+0x198]
  42281a:	and    DWORD PTR ds:0x428637,0x0
  422824:	mov    edx,DWORD PTR ds:0x428637
  42282a:	inc    edx
  42282b:	mov    DWORD PTR ds:0x428637,edx
  422831:	cmp    DWORD PTR ds:0x428637,0x9
  422838:	jg     0x42287c
  42283e:	jmp    0x422853
  422843:	push   0x428034
  422848:	push   0x1
  42284a:	push   DWORD PTR [ebp-0x1c]
  42284d:	call   DWORD PTR ds:0x4287ab
  422853:	cmp    DWORD PTR ds:0x428637,0x8
  42285a:	jne    0x42286f
  422860:	xor    edx,edx
  422862:	add    edx,DWORD PTR ds:0x428637
  422868:	inc    edx
  422869:	mov    DWORD PTR ds:0x428637,edx
  42286f:	cmp    DWORD PTR ds:0x428637,0x18
  422876:	jb     0x422824
  42287c:	xor    edi,ecx
  42287e:	mov    edx,0x3272ec
  422883:	add    edi,edx
  422885:	cmp    DWORD PTR [eax],edi
  422887:	je     0x4228a8
  42288d:	mov    DWORD PTR ds:0x42861f,0x7dc0
  422897:	mov    eax,DWORD PTR [eax]
  422899:	mov    DWORD PTR ds:0x428607,0x131c
  4228a3:	jmp    0x422b36
  4228a8:	mov    DWORD PTR ds:0x4285e3,edi
  4228ae:	mov    eax,DWORD PTR [ebp+0x18]
  4228b1:	cmp    eax,esi
  4228b3:	mov    DWORD PTR ds:0x42864f,0x3fa2
  4228bd:	jne    0x4228e1
  4228c3:	mov    DWORD PTR ds:0x42860b,0x3d29
  4228cd:	push   0xf89c85b1
  4228d2:	mov    DWORD PTR ds:0x42866b,0x6bac
  4228dc:	jmp    0x422b25
  4228e1:	mov    esi,DWORD PTR [ebp+0x18]
  4228e4:	mov    eax,0x14b4
  4228e9:	mov    eax,0xf89c85b2
  4228ee:	cmp    esi,eax
  4228f0:	jne    0x422b15
  4228f6:	mov    eax,DWORD PTR [ebp+0x10]
  4228f9:	adc    DWORD PTR ds:0x4285cf,0x1af0
  422903:	xor    eax,ecx
  422905:	mov    esi,DWORD PTR ds:0x4285ef
  42290b:	sub    DWORD PTR ds:0x42860f,esi
  422911:	add    eax,edx
  422913:	and    DWORD PTR ds:0x42863f,0x0
  42291d:	jmp    0x422931
  422922:	xor    esi,esi
  422924:	xor    esi,DWORD PTR ds:0x42863f
  42292a:	inc    esi
  42292b:	mov    DWORD PTR ds:0x42863f,esi
  422931:	cmp    DWORD PTR ds:0x42863f,0x1d
  422938:	jae    0x42297a
  42293e:	cmp    DWORD PTR ds:0x42863f,0xa
  422945:	jl     0x42297a
  42294b:	jmp    0x42295b
  422950:	push   0x428028
  422955:	call   DWORD PTR ds:0x4287af
  42295b:	cmp    DWORD PTR ds:0x42863f,0x9
  422962:	jne    0x422975
  422968:	mov    esi,DWORD PTR ds:0x42863f
  42296e:	inc    esi
  42296f:	mov    DWORD PTR ds:0x42863f,esi
  422975:	jmp    0x422922
  42297a:	mov    DWORD PTR [ebp-0x18],eax
  42297d:	mov    eax,DWORD PTR [ebp+0xc]
  422980:	mov    esi,DWORD PTR [ebp-0x8]
  422983:	xor    eax,ecx
  422985:	add    eax,edx
  422987:	imul   eax,DWORD PTR [esi]
  42298a:	mov    esi,DWORD PTR [ebp+0x8]
  42298d:	xor    esi,ecx
  42298f:	add    esi,edx
  422991:	cmp    esi,eax
  422993:	mov    eax,DWORD PTR [ebp-0x4]
  422996:	push   ebx
  422997:	je     0x4229b6
  42299d:	mov    esi,DWORD PTR [ebp-0x18]
  4229a0:	add    DWORD PTR [eax],esi
  4229a2:	mov    eax,DWORD PTR [ebp-0x4]
  4229a5:	mov    esi,DWORD PTR [ebp+0xc]
  4229a8:	xor    esi,ecx
  4229aa:	add    esi,edx
  4229ac:	imul   esi,DWORD PTR [eax]
  4229af:	mov    DWORD PTR [eax],esi
  4229b1:	jmp    0x4229bb
  4229b6:	mov    esi,DWORD PTR [ebp+0x14]
  4229b9:	xor    DWORD PTR [eax],esi
  4229bb:	mov    eax,DWORD PTR [ebp-0x4]
  4229be:	mov    edi,DWORD PTR [ebp+0x10]
  4229c1:	xor    edi,ecx
  4229c3:	mov    esi,0xffcd8d14
  4229c8:	mov    ebx,esi
  4229ca:	sub    ebx,edi
  4229cc:	add    DWORD PTR [eax],ebx
  4229ce:	mov    eax,DWORD PTR [ebp-0x4]
  4229d1:	mov    edi,DWORD PTR [ebp-0x8]
  4229d4:	add    edi,DWORD PTR [eax]
  4229d6:	mov    DWORD PTR [ebp-0x8],edi
  4229d9:	mov    eax,DWORD PTR [ebp+0xc]
  4229dc:	mov    edi,DWORD PTR [ebp+0xc]
  4229df:	xor    edi,ecx
  4229e1:	xor    eax,ecx
  4229e3:	lea    eax,[eax+edi*1+0x64e5d8]
  4229ea:	mov    edi,DWORD PTR [ebp+0xc]
  4229ed:	xor    edi,ecx
  4229ef:	add    edi,edx
  4229f1:	imul   eax,edi
  4229f4:	mov    edi,DWORD PTR [ebp+0xc]
  4229f7:	xor    edi,ecx
  4229f9:	sub    edi,eax
  4229fb:	mov    eax,DWORD PTR [ebp-0x4]
  4229fe:	add    edi,edx
  422a00:	cmp    DWORD PTR [eax],edi
  422a02:	mov    eax,DWORD PTR [ebp-0x4]
  422a05:	mov    edi,DWORD PTR [ebp+0x10]
  422a08:	jg     0x422a1b
  422a0e:	xor    edi,ecx
  422a10:	mov    ebx,esi
  422a12:	sub    ebx,edi
  422a14:	add    DWORD PTR [eax],ebx
  422a16:	jmp    0x422a21
  422a1b:	xor    edi,ecx
  422a1d:	add    edi,edx
  422a1f:	add    DWORD PTR [eax],edi
  422a21:	mov    eax,DWORD PTR [ebp-0x8]
  422a24:	mov    edi,DWORD PTR [ebp-0x10]
  422a27:	mov    eax,DWORD PTR [eax]
  422a29:	xor    edi,ecx
  422a2b:	add    edi,0x3272eb
  422a31:	not    edi
  422a33:	and    eax,edi
  422a35:	movsx  di,BYTE PTR [eax+0x1]
  422a3a:	mov    ebx,0x3b56
  422a3f:	sub    di,bx
  422a42:	mov    ebx,0x8a94
  422a47:	xor    di,bx
  422a4a:	mov    ebx,0x4f90
  422a4f:	cmp    di,bx
  422a52:	jne    0x422a7a
  422a58:	movsx  di,BYTE PTR [eax]
  422a5c:	mov    ebx,0x3b56
  422a61:	sub    di,bx
  422a64:	mov    ebx,0x8a94
  422a69:	xor    di,bx
  422a6c:	mov    ebx,0x4e63
  422a71:	cmp    di,bx
  422a74:	je     0x422a8a
  422a7a:	mov    edi,DWORD PTR [ebp-0x10]
  422a7d:	xor    edi,ecx
  422a7f:	mov    ebx,esi
  422a81:	sub    ebx,edi
  422a83:	add    eax,ebx
  422a85:	jmp    0x422a35
  422a8a:	mov    esi,DWORD PTR [ebp-0x14]
  422a8d:	mov    esi,DWORD PTR [esi]
  422a8f:	mov    edi,DWORD PTR [eax+0x3c]
  422a92:	lea    esi,[edi+esi*8+0x78]
  422a96:	mov    esi,DWORD PTR [esi+eax*1]
  422a99:	mov    DWORD PTR [ebp-0x8],esi
  422a9c:	mov    esi,DWORD PTR [ebp+0x8]
  422a9f:	xor    esi,ecx
  422aa1:	add    esi,edx
  422aa3:	mov    DWORD PTR [ebp-0x14],esi
  422aa6:	mov    esi,DWORD PTR [ebp+0x8]
  422aa9:	mov    edi,DWORD PTR [ebp-0x8]
  422aac:	xor    esi,ecx
  422aae:	add    esi,edx
  422ab0:	pop    ebx
  422ab1:	cmp    edi,esi
  422ab3:	jne    0x422ad1
  422ab9:	mov    eax,DWORD PTR [ebp+0xc]
  422abc:	xor    eax,ecx
  422abe:	mov    ecx,DWORD PTR [ebp-0x8]
  422ac1:	add    eax,edx
  422ac3:	imul   eax,ecx
  422ac6:	mov    DWORD PTR [ebp-0x8],eax
  422ac9:	push   DWORD PTR [ebp+0x18]
  422acc:	jmp    0x422b25
  422ad1:	mov    ecx,DWORD PTR [ebp-0x8]
  422ad4:	add    ecx,eax
  422ad6:	mov    DWORD PTR [ebp-0x14],ecx
  422ad9:	mov    ecx,DWORD PTR [ebp-0x14]
  422adc:	mov    ecx,DWORD PTR [ecx+0xc]
  422adf:	movsx  cx,BYTE PTR [ecx+eax*1]
  422ae4:	mov    edx,0x3b56
  422ae9:	sub    cx,dx
  422aec:	mov    edx,0x8a94
  422af1:	xor    cx,dx
  422af4:	mov    edx,0x4e61
  422af9:	cmp    cx,dx
  422afc:	jne    0x422ac9
  422b02:	mov    ecx,DWORD PTR ds:0x4282ef
  422b08:	mov    ecx,DWORD PTR [ecx+0x198]
  422b0e:	mov    DWORD PTR [ecx],eax
  422b10:	jmp    0x422b36
  422b15:	mov    ecx,DWORD PTR [ebp+0x18]
  422b18:	cmp    ecx,0xf89c85b1
  422b1e:	jne    0x422b36
  422b24:	push   eax
  422b25:	push   DWORD PTR [ebp+0x14]
  422b28:	push   DWORD PTR [ebp+0x10]
  422b2b:	push   DWORD PTR [ebp+0xc]
  422b2e:	push   DWORD PTR [ebp+0x8]
  422b31:	call   0x42257f
  422b36:	pop    edi
  422b37:	pop    esi
  422b38:	leave  
  422b39:	ret    0x14
  422b3c:	push   ebp
  422b3d:	mov    ebp,esp
  422b3f:	sub    esp,0x54
  422b42:	add    DWORD PTR ds:0x428657,0x428603
  422b4c:	push   0x4283ff
  422b51:	call   DWORD PTR ds:0x4287cf
  422b57:	sbb    DWORD PTR ds:0x428647,0x42860b
  422b61:	test   eax,eax
  422b63:	je     0x422b7a
  422b69:	xor    eax,eax
  422b6b:	mov    DWORD PTR ds:0x428677,0x34e1
  422b75:	jmp    0x423462
  422b7a:	mov    DWORD PTR [ebp-0x2c],0x0
  422b81:	xor    ecx,0x686a
  422b87:	mov    eax,DWORD PTR [ebp-0x20]
  422b8a:	mov    DWORD PTR [ebp-0x20],eax
  422b8d:	mov    ecx,0xf89c85b0
  422b92:	and    DWORD PTR ds:0x428647,0x0
  422b9c:	mov    edx,DWORD PTR ds:0x428647
  422ba2:	inc    edx
  422ba3:	mov    DWORD PTR ds:0x428647,edx
  422ba9:	cmp    DWORD PTR ds:0x428647,0x27
  422bb0:	jge    0x422bd6
  422bb6:	jmp    0x422bc9
  422bbb:	push   DWORD PTR [ebp-0xc]
  422bbe:	push   0x4285eb
  422bc3:	call   DWORD PTR ds:0x4287b3
  422bc9:	cmp    DWORD PTR ds:0x428647,0x19
  422bd0:	jb     0x422b9c
  422bd6:	mov    DWORD PTR [ebp-0x4],ecx
  422bd9:	and    DWORD PTR ds:0x428647,0x0
  422be3:	xor    edx,edx
  422be5:	or     edx,DWORD PTR ds:0x428647
  422beb:	inc    edx
  422bec:	mov    DWORD PTR ds:0x428647,edx
  422bf2:	cmp    DWORD PTR ds:0x428647,0xc
  422bf9:	jl     0x422c31
  422bff:	jmp    0x422c0a
  422c04:	call   DWORD PTR ds:0x4287b7
  422c0a:	cmp    DWORD PTR ds:0x428647,0xb
  422c11:	jne    0x422c24
  422c17:	mov    edx,DWORD PTR ds:0x428647
  422c1d:	inc    edx
  422c1e:	mov    DWORD PTR ds:0x428647,edx
  422c24:	cmp    DWORD PTR ds:0x428647,0x1f
  422c2b:	jb     0x422be3
  422c31:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  422c38:	lea    eax,[ebp-0x14]
  422c3b:	xor    edx,DWORD PTR ds:0x42866b
  422c41:	mov    DWORD PTR [ebp-0x2c],eax
  422c44:	movzx  edx,BYTE PTR ds:0x428667
  422c4b:	add    DWORD PTR ds:0x4285d7,edx
  422c51:	lea    eax,[ebp-0x18]
  422c54:	mov    DWORD PTR [ebp-0x24],eax
  422c57:	movzx  eax,WORD PTR ds:0x428607
  422c5e:	add    DWORD PTR ds:0x428603,eax
  422c64:	mov    eax,ds:0x4282ef
  422c69:	neg    edx
  422c6b:	mov    eax,DWORD PTR [eax+0x1c8]
  422c71:	and    DWORD PTR ds:0x4285e7,0x0
  422c7b:	xor    edx,edx
  422c7d:	add    edx,DWORD PTR ds:0x4285e7
  422c83:	inc    edx
  422c84:	mov    DWORD PTR ds:0x4285e7,edx
  422c8a:	cmp    DWORD PTR ds:0x4285e7,0x9
  422c91:	jl     0x422ccc
  422c97:	jmp    0x422ca5
  422c9c:	push   DWORD PTR [ebp-0x18]
  422c9f:	call   DWORD PTR ds:0x4287bb
  422ca5:	cmp    DWORD PTR ds:0x4285e7,0x8
  422cac:	jne    0x422cbf
  422cb2:	mov    edx,DWORD PTR ds:0x4285e7
  422cb8:	inc    edx
  422cb9:	mov    DWORD PTR ds:0x4285e7,edx
  422cbf:	cmp    DWORD PTR ds:0x4285e7,0x1b
  422cc6:	jb     0x422c7b
  422ccc:	mov    eax,DWORD PTR [eax]
  422cce:	adc    edx,0x4266
  422cd4:	mov    edx,DWORD PTR [ebp-0x24]
  422cd7:	push   ebx
  422cd8:	push   esi
  422cd9:	push   edi
  422cda:	xor    DWORD PTR ds:0x42865b,0x2427
  422ce4:	mov    edi,0x75108a4
  422ce9:	and    DWORD PTR ds:0x42867b,0x0
  422cf3:	xor    ebx,ebx
  422cf5:	or     ebx,DWORD PTR ds:0x42867b
  422cfb:	inc    ebx
  422cfc:	mov    DWORD PTR ds:0x42867b,ebx
  422d02:	cmp    DWORD PTR ds:0x42867b,0x18
  422d09:	jg     0x422d41
  422d0f:	jmp    0x422d34
  422d14:	push   0x7b2e
  422d19:	push   0x428028
  422d1e:	push   DWORD PTR [ebp-0x20]
  422d21:	push   0x42800b
  422d26:	push   0x82c9
  422d2b:	push   DWORD PTR [ebp-0x10]
  422d2e:	call   DWORD PTR ds:0x4287bf
  422d34:	cmp    DWORD PTR ds:0x42867b,0x10
  422d3b:	jb     0x422cf3
  422d41:	xor    eax,edi
  422d43:	mov    ebx,0x3272ec
  422d48:	sbb    DWORD PTR ds:0x4285ef,0x42860b
  422d52:	add    eax,ebx
  422d54:	mov    DWORD PTR [edx],eax
  422d56:	mov    eax,ds:0x4284f3
  422d5b:	cmp    eax,0x445cecf9
  422d60:	jne    0x422e28
  422d66:	sbb    DWORD PTR ds:0x42860f,0x5794
  422d70:	mov    eax,DWORD PTR [ebp-0x4]
  422d73:	mov    esi,DWORD PTR ds:0x42864b
  422d79:	or     esi,DWORD PTR ds:0x4285cf
  422d7f:	mov    DWORD PTR ds:0x42864b,esi
  422d85:	mov    edx,DWORD PTR ds:0x4282ef
  422d8b:	xor    DWORD PTR ds:0x42863f,0x1fa5
  422d95:	mov    edx,DWORD PTR [edx+0x198]
  422d9b:	xor    DWORD PTR ds:0x42864f,ecx
  422da1:	xor    eax,edi
  422da3:	add    eax,ebx
  422da5:	mov    DWORD PTR [edx],eax
  422da7:	sub    DWORD PTR ds:0x428617,edx
  422dad:	mov    eax,DWORD PTR [ebp-0x4]
  422db0:	mov    edx,DWORD PTR ds:0x428637
  422db6:	add    DWORD PTR ds:0x428663,edx
  422dbc:	xor    eax,edi
  422dbe:	and    DWORD PTR ds:0x42867b,0x0
  422dc8:	xor    edx,edx
  422dca:	or     edx,DWORD PTR ds:0x42867b
  422dd0:	inc    edx
  422dd1:	mov    DWORD PTR ds:0x42867b,edx
  422dd7:	cmp    DWORD PTR ds:0x42867b,0xb
  422dde:	jg     0x422e1b
  422de4:	jmp    0x422df4
  422de9:	push   0x4280a2
  422dee:	call   DWORD PTR ds:0x4287c3
  422df4:	cmp    DWORD PTR ds:0x42867b,0xa
  422dfb:	jne    0x422e0e
  422e01:	mov    edx,DWORD PTR ds:0x42867b
  422e07:	inc    edx
  422e08:	mov    DWORD PTR ds:0x42867b,edx
  422e0e:	cmp    DWORD PTR ds:0x42867b,0x18
  422e15:	jb     0x422dc8
  422e1b:	add    eax,ebx
  422e1d:	sub    DWORD PTR ds:0x428627,ecx
  422e23:	mov    ds:0x4284f3,eax
  422e28:	mov    edx,DWORD PTR ds:0x4285e7
  422e2e:	and    edx,DWORD PTR ds:0x428617
  422e34:	mov    DWORD PTR ds:0x4285e7,edx
  422e3a:	mov    eax,ds:0x4282ef
  422e3f:	xor    edx,DWORD PTR ds:0x42865f
  422e45:	mov    eax,DWORD PTR [eax+0x18c]
  422e4b:	sbb    edx,0x43ef
  422e51:	mov    eax,DWORD PTR [eax]
  422e53:	adc    edx,esi
  422e55:	mov    DWORD PTR [ebp-0x34],eax
  422e58:	mov    eax,0xf89c85bc
  422e5d:	mov    DWORD PTR [ebp-0x24],eax
  422e60:	and    DWORD PTR ds:0x42861f,0x0
  422e6a:	mov    edx,DWORD PTR ds:0x42861f
  422e70:	inc    edx
  422e71:	mov    DWORD PTR ds:0x42861f,edx
  422e77:	cmp    DWORD PTR ds:0x42861f,0x1e
  422e7e:	jle    0x422eb8
  422e84:	jmp    0x422eab
  422e89:	push   0x4285cf
  422e8e:	push   0x2375
  422e93:	push   0x5548
  422e98:	push   0x51cc
  422e9d:	push   0x80b2
  422ea2:	push   DWORD PTR [ebp-0x28]
  422ea5:	call   DWORD PTR ds:0x4287c7
  422eab:	cmp    DWORD PTR ds:0x42861f,0x17
  422eb2:	jb     0x422e6a
  422eb8:	mov    DWORD PTR [ebp-0x24],eax
  422ebb:	mov    DWORD PTR ds:0x42866b,0x46d0
  422ec5:	mov    DWORD PTR [ebp-0x24],eax
  422ec8:	xor    esi,esi
  422eca:	or     esi,DWORD PTR ds:0x4285ef
  422ed0:	sub    DWORD PTR ds:0x428673,esi
  422ed6:	mov    DWORD PTR [ebp-0x24],ecx
  422ed9:	mov    DWORD PTR [ebp-0x38],eax
  422edc:	and    esi,0x6095
  422ee2:	mov    DWORD PTR [ebp-0x38],0xf89c85b8
  422ee9:	sub    DWORD PTR ds:0x428653,edi
  422eef:	mov    esi,DWORD PTR [ebp-0x4]
  422ef2:	mov    ecx,DWORD PTR [ebp-0x8]
  422ef5:	mov    edx,DWORD PTR ds:0x4286a7
  422efb:	mov    edx,DWORD PTR [edx]
  422efd:	xor    DWORD PTR ds:0x4285cf,edx
  422f03:	mov    edx,DWORD PTR [ebp-0x8]
  422f06:	xor    edx,edi
  422f08:	xor    ecx,edi
  422f0a:	add    DWORD PTR ds:0x42861f,0x42860f
  422f14:	add    ecx,edx
  422f16:	sbb    edx,0x585b
  422f1c:	mov    edx,DWORD PTR [ebp-0x8]
  422f1f:	xor    esi,edi
  422f21:	xor    edx,edi
  422f23:	adc    DWORD PTR ds:0x428647,0x7d1c
  422f2d:	add    esi,ebx
  422f2f:	mov    DWORD PTR ds:0x428607,0x675c
  422f39:	lea    ecx,[ecx+edx*1+0x9758c4]
  422f40:	mov    DWORD PTR ds:0x428647,0x161d
  422f4a:	cmp    esi,ecx
  422f4c:	mov    DWORD PTR ds:0x42861b,0x50e4
  422f56:	ja     0x423075
  422f5c:	xor    DWORD PTR ds:0x4285cf,0x42862b
  422f66:	mov    eax,DWORD PTR [ebp-0x8]
  422f69:	sbb    DWORD PTR ds:0x42866b,0x4285eb
  422f73:	xor    eax,edi
  422f75:	and    DWORD PTR ds:0x428633,0x42865b
  422f7f:	lea    eax,[eax+esi*1+0x3272ec]
  422f86:	push   eax
  422f87:	mov    eax,DWORD PTR [ebp-0x24]
  422f8a:	xor    DWORD PTR ds:0x42863b,0x428647
  422f94:	xor    eax,edi
  422f96:	sbb    DWORD PTR ds:0x4285f7,0x428637
  422fa0:	lea    eax,[ebp+eax*1+0x3272f4]
  422fa7:	push   eax
  422fa8:	xor    eax,eax
  422faa:	add    eax,DWORD PTR ds:0x428653
  422fb0:	or     DWORD PTR ds:0x4285ef,eax
  422fb6:	mov    eax,ds:0x4282ef
  422fbb:	push   DWORD PTR [eax+0x1bc]
  422fc1:	call   0x40aa5b
  422fc6:	and    DWORD PTR ds:0x428673,0x0
  422fd0:	mov    eax,ds:0x428673
  422fd5:	inc    eax
  422fd6:	mov    ds:0x428673,eax
  422fdb:	cmp    DWORD PTR ds:0x428673,0x2d
  422fe2:	jb     0x42300a
  422fe8:	jmp    0x422ffd
  422fed:	push   0x428657
  422ff2:	push   0x4280ae
  422ff7:	call   DWORD PTR ds:0x4287cb
  422ffd:	cmp    DWORD PTR ds:0x428673,0x1d
  423004:	jb     0x422fd0
  42300a:	mov    eax,DWORD PTR [ebp-0x8]
  42300d:	or     ecx,0x5d69
  423013:	xor    eax,edi
  423015:	lea    esi,[esi+eax*1+0x3272ec]
  42301c:	not    ecx
  42301e:	mov    eax,DWORD PTR [ebp-0x8]
  423021:	mov    DWORD PTR ds:0x42860b,0x501a
  42302b:	mov    ecx,DWORD PTR [ebp-0x8]
  42302e:	xor    ecx,edi
  423030:	sbb    DWORD PTR ds:0x428667,0x42864b
  42303a:	xor    eax,edi
  42303c:	sbb    DWORD PTR ds:0x4285ef,0xbec
  423046:	add    eax,ecx
  423048:	mov    ecx,DWORD PTR [ebp-0x8]
  42304b:	xor    ecx,edi
  42304d:	mov    DWORD PTR ds:0x4285e3,0x1b1e
  423057:	lea    eax,[eax+ecx*1+0x9758c4]
  42305e:	cmp    esi,eax
  423060:	mov    DWORD PTR ds:0x42865b,0x1916
  42306a:	jbe    0x422f5c
  423070:	mov    eax,0xf89c85bc
  423075:	mov    ecx,DWORD PTR [ebp+0xc]
  423078:	mov    DWORD PTR ds:0x428173,ecx
  42307e:	or     DWORD PTR ds:0x4285ff,ebx
  423084:	mov    ecx,DWORD PTR [ebp+0x10]
  423087:	or     DWORD PTR ds:0x4285d7,ebx
  42308d:	mov    DWORD PTR ds:0x4283c7,ecx
  423093:	mov    DWORD PTR ds:0x42862b,0x16
  42309d:	cmp    DWORD PTR ds:0x42862b,0x0
  4230a4:	je     0x4230e9
  4230aa:	cmp    DWORD PTR ds:0x42862b,0x1e
  4230b1:	jg     0x4230e9
  4230b7:	jmp    0x4230d7
  4230bc:	push   0x2088
  4230c1:	push   DWORD PTR [ebp-0x10]
  4230c4:	push   0x46c3
  4230c9:	push   0x5611
  4230ce:	push   DWORD PTR [ebp-0x20]
  4230d1:	call   DWORD PTR ds:0x42879f
  4230d7:	mov    edx,DWORD PTR ds:0x42862b
  4230dd:	dec    edx
  4230de:	mov    DWORD PTR ds:0x42862b,edx
  4230e4:	jmp    0x42309d
  4230e9:	mov    ecx,DWORD PTR ds:0x428173
  4230ef:	mov    DWORD PTR ds:0x428673,0x6c19
  4230f9:	mov    edx,DWORD PTR [ebp-0x2c]
  4230fc:	and    DWORD PTR ds:0x42864f,0x1852
  423106:	sub    ecx,ebx
  423108:	sbb    DWORD PTR ds:0x428663,0x32b3
  423112:	xor    ecx,edi
  423114:	mov    DWORD PTR ds:0x4285d7,0x3bce
  42311e:	mov    DWORD PTR [edx],ecx
  423120:	mov    edx,DWORD PTR [ebp-0x20]
  423123:	mov    ecx,DWORD PTR ds:0x4285eb
  423129:	mov    ecx,0xf89c85b0
  42312e:	cmp    edx,ecx
  423130:	mov    DWORD PTR ds:0x428637,0x7ca2
  42313a:	jne    0x423250
  423140:	lea    eax,[ebp-0x10]
  423143:	mov    DWORD PTR [ebp-0x40],eax
  423146:	and    DWORD PTR ds:0x4285df,0x428623
  423150:	lea    eax,[ebp+0x4]
  423153:	xor    DWORD PTR ds:0x428603,0x2610
  42315d:	mov    DWORD PTR [ebp-0x10],eax
  423160:	mov    eax,DWORD PTR [ebp-0x10]
  423163:	test   eax,eax
  423165:	je     0x423444
  42316b:	movzx  eax,WORD PTR ds:0x42867b
  423172:	sub    DWORD PTR ds:0x42860b,eax
  423178:	mov    eax,DWORD PTR [ebp-0xc]
  42317b:	and    ecx,0x315b
  423181:	mov    eax,DWORD PTR [ebp-0x8]
  423184:	sbb    DWORD PTR ds:0x428633,edi
  42318a:	mov    eax,DWORD PTR [ebp-0x4]
  42318d:	mov    ecx,DWORD PTR ds:0x42868f
  423193:	xor    esi,esi
  423195:	add    esi,DWORD PTR ds:0x42872b
  42319b:	sub    esi,ecx
  42319d:	imul   ecx,DWORD PTR [ecx+esi*1]
  4231a1:	mov    DWORD PTR [ebp+0xc],eax
  4231a4:	xor    ecx,esi
  4231a6:	mov    eax,eax
  4231a8:	mov    eax,ds:0x4282ef
  4231ad:	mov    eax,DWORD PTR [eax+0x1c8]
  4231b3:	mov    eax,DWORD PTR [eax]
  4231b5:	cdq    
  4231b6:	mov    esi,0xfabdbedd
  4231bb:	add    eax,esi
  4231bd:	adc    edx,0xffffffff
  4231c0:	and    DWORD PTR [ebp-0x38],0x0
  4231c4:	xor    edx,0x0
  4231c7:	mov    DWORD PTR [ebp-0x24],edx
  4231ca:	mov    edx,DWORD PTR [ebp+0xc]
  4231cd:	mov    DWORD PTR [ebp-0x3c],edx
  4231d0:	mov    ecx,0x8a29a137
  4231d5:	xor    eax,ecx
  4231d7:	add    DWORD PTR [ebp-0x3c],esi
  4231da:	mov    edx,DWORD PTR [ebp-0x3c]
  4231dd:	adc    DWORD PTR [ebp-0x38],0xffffffff
  4231e1:	xor    edx,ecx
  4231e3:	mov    DWORD PTR [ebp-0x30],edx
  4231e6:	mov    edx,DWORD PTR [ebp-0x38]
  4231e9:	xor    edx,0x0
  4231ec:	mov    DWORD PTR [ebp-0x2c],edx
  4231ef:	cmp    DWORD PTR [ebp-0x30],eax
  4231f2:	jne    0x423203
  4231f8:	mov    eax,DWORD PTR [ebp-0x24]
  4231fb:	cmp    edx,eax
  4231fd:	je     0x423230
  423203:	mov    eax,ds:0x4282ef
  423208:	mov    eax,DWORD PTR [eax+0x1c0]
  42320e:	mov    eax,DWORD PTR [eax]
  423210:	xor    edx,edx
  423212:	add    eax,esi
  423214:	adc    edx,0xffffffff
  423217:	xor    eax,ecx
  423219:	xor    edx,0x0
  42321c:	cmp    eax,0x70941fe9
  423221:	jne    0x423444
  423227:	cmp    edx,0xffffffff
  42322a:	jne    0x423444
  423230:	mov    eax,ds:0x42836b
  423235:	mov    edx,DWORD PTR ds:0x428373
  42323b:	xor    eax,edx
  42323d:	mov    ds:0x42836b,eax
  423242:	mov    edx,DWORD PTR ds:0x42836b
  423248:	mov    eax,DWORD PTR [ebp-0x10]
  42324b:	jmp    0x423404
  423250:	mov    edx,DWORD PTR [ebp-0x14]
  423253:	cmp    edx,0xf89c85b1
  423259:	je     0x4232b6
  42325f:	mov    edx,DWORD PTR [ebp-0x4]
  423262:	mov    esi,DWORD PTR [ebp-0x18]
  423265:	xor    edx,edi
  423267:	add    edx,ebx
  423269:	cmp    edx,esi
  42326b:	je     0x4232b6
  423271:	mov    eax,ds:0x4282ef
  423276:	mov    eax,DWORD PTR [eax+0x194]
  42327c:	mov    ecx,DWORD PTR [eax]
  42327e:	mov    eax,DWORD PTR [ecx+0x3c]
  423281:	push   DWORD PTR ds:0x4283c7
  423287:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  42328b:	push   DWORD PTR ds:0x428173
  423291:	add    eax,ecx
  423293:	mov    ecx,DWORD PTR ds:0x4282ef
  423299:	mov    ecx,DWORD PTR [ecx+0x194]
  42329f:	push   DWORD PTR [ecx]
  4232a1:	call   eax
  4232a3:	mov    ecx,DWORD PTR ds:0x4282ef
  4232a9:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4232af:	mov    DWORD PTR [ecx],eax
  4232b1:	jmp    0x423444
  4232b6:	mov    edx,DWORD PTR [ebp-0x4]
  4232b9:	mov    esi,DWORD PTR [ebp-0x34]
  4232bc:	xor    edx,edi
  4232be:	add    edx,ebx
  4232c0:	cmp    edx,esi
  4232c2:	jne    0x42331b
  4232c8:	mov    edx,DWORD PTR [ebp-0x4]
  4232cb:	mov    esi,DWORD PTR ds:0x4282ef
  4232d1:	mov    esi,DWORD PTR [esi+0x198]
  4232d7:	xor    edx,edi
  4232d9:	add    edx,ebx
  4232db:	cmp    edx,DWORD PTR [esi]
  4232dd:	jne    0x4232f8
  4232e3:	push   ecx
  4232e4:	mov    ecx,DWORD PTR [ebp-0x4]
  4232e7:	xor    ecx,edi
  4232e9:	add    ecx,ebx
  4232eb:	push   ecx
  4232ec:	push   eax
  4232ed:	push   DWORD PTR [ebp-0x8]
  4232f0:	push   DWORD PTR [ebp-0x4]
  4232f3:	call   0x42257f
  4232f8:	push   DWORD PTR [ebp-0x8]
  4232fb:	push   DWORD PTR [ebp-0x4]
  4232fe:	call   0x401000
  423303:	mov    eax,DWORD PTR [ebp-0x4]
  423306:	xor    eax,edi
  423308:	add    eax,ebx
  42330a:	mov    ds:0x428373,eax
  42330f:	mov    eax,DWORD PTR [ebp-0x4]
  423312:	xor    eax,edi
  423314:	add    eax,ebx
  423316:	mov    ds:0x42836b,eax
  42331b:	lea    eax,[ebp-0x1c]
  42331e:	mov    DWORD PTR [ebp-0x44],eax
  423321:	lea    eax,[ebp+0x4]
  423324:	mov    DWORD PTR [ebp-0x1c],eax
  423327:	mov    eax,DWORD PTR [ebp-0x1c]
  42332a:	test   eax,eax
  42332c:	je     0x423444
  423332:	mov    DWORD PTR [ebp-0x48],0xf152c39
  423339:	mov    DWORD PTR [ebp-0x4c],0x712ed2e
  423340:	mov    DWORD PTR [ebp-0x50],0x373fc08
  423347:	mov    DWORD PTR [ebp-0x54],0x72670ad8
  42334e:	call   0x41d64a
  423353:	mov    eax,DWORD PTR [ebp-0xc]
  423356:	mov    eax,DWORD PTR [ebp-0x8]
  423359:	mov    eax,DWORD PTR [ebp-0x4]
  42335c:	mov    DWORD PTR [ebp+0xc],eax
  42335f:	mov    eax,eax
  423361:	mov    eax,ds:0x4282ef
  423366:	mov    eax,DWORD PTR [eax+0x1c8]
  42336c:	mov    eax,DWORD PTR [eax]
  42336e:	cdq    
  42336f:	mov    esi,0xfabdbedd
  423374:	add    eax,esi
  423376:	adc    edx,0xffffffff
  423379:	and    DWORD PTR [ebp-0x38],0x0
  42337d:	xor    edx,0x0
  423380:	mov    DWORD PTR [ebp-0x24],edx
  423383:	mov    edx,DWORD PTR [ebp+0xc]
  423386:	mov    DWORD PTR [ebp-0x3c],edx
  423389:	mov    ecx,0x8a29a137
  42338e:	xor    eax,ecx
  423390:	add    DWORD PTR [ebp-0x3c],esi
  423393:	mov    edx,DWORD PTR [ebp-0x3c]
  423396:	adc    DWORD PTR [ebp-0x38],0xffffffff
  42339a:	xor    edx,ecx
  42339c:	mov    DWORD PTR [ebp-0x30],edx
  42339f:	mov    edx,DWORD PTR [ebp-0x38]
  4233a2:	xor    edx,0x0
  4233a5:	mov    DWORD PTR [ebp-0x2c],edx
  4233a8:	cmp    DWORD PTR [ebp-0x30],eax
  4233ab:	jne    0x4233bc
  4233b1:	mov    eax,DWORD PTR [ebp-0x24]
  4233b4:	cmp    edx,eax
  4233b6:	je     0x4233e9
  4233bc:	mov    eax,ds:0x4282ef
  4233c1:	mov    eax,DWORD PTR [eax+0x1c0]
  4233c7:	mov    eax,DWORD PTR [eax]
  4233c9:	xor    edx,edx
  4233cb:	add    eax,esi
  4233cd:	adc    edx,0xffffffff
  4233d0:	xor    eax,ecx
  4233d2:	xor    edx,0x0
  4233d5:	cmp    eax,0x70941fe9
  4233da:	jne    0x423444
  4233e0:	cmp    edx,0xffffffff
  4233e3:	jne    0x423444
  4233e9:	mov    eax,ds:0x42836b
  4233ee:	mov    edx,DWORD PTR ds:0x428373
  4233f4:	xor    eax,edx
  4233f6:	mov    ds:0x42836b,eax
  4233fb:	mov    edx,DWORD PTR ds:0x42836b
  423401:	mov    eax,DWORD PTR [ebp-0x1c]
  423404:	add    DWORD PTR [eax],edx
  423406:	mov    edx,DWORD PTR [ebp+0xc]
  423409:	mov    eax,ds:0x42836b
  42340e:	xor    edx,edi
  423410:	add    edx,ebx
  423412:	xor    ebx,ebx
  423414:	add    edx,esi
  423416:	adc    ebx,0xffffffff
  423419:	xor    edi,edi
  42341b:	xor    edx,ecx
  42341d:	xor    ebx,0x0
  423420:	add    eax,esi
  423422:	adc    edi,0xffffffff
  423425:	xor    eax,ecx
  423427:	xor    edi,0x0
  42342a:	cmp    eax,edx
  42342c:	jne    0x423444
  423432:	cmp    edi,ebx
  423434:	jne    0x423444
  42343a:	mov    eax,ds:0x42836b
  42343f:	mov    ds:0x428373,eax
  423444:	mov    eax,ds:0x4282ef
  423449:	push   0x4
  42344b:	add    eax,0x1cc
  423450:	push   eax
  423451:	lea    eax,[ebp-0xc]
  423454:	push   eax
  423455:	call   0x40aa5b
  42345a:	mov    eax,DWORD PTR [ebp-0xc]
  42345d:	mov    eax,DWORD PTR [eax]
  42345f:	pop    edi
  423460:	pop    esi
  423461:	pop    ebx
  423462:	leave  
  423463:	ret    0xc
  423466:	xor    eax,eax
  423468:	add    DWORD PTR ds:0x4285f3,0x36c3
  423472:	inc    eax
  423473:	ret    
  423474:	push   ebp
  423475:	mov    ebp,esp
  423477:	push   ecx
  423478:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  42347f:	dec    edx
  423480:	mov    eax,DWORD PTR [ebp+0x8]
  423483:	sbb    DWORD PTR ds:0x42864b,0x3b56
  42348d:	movsx  eax,BYTE PTR [eax]
  423490:	xor    edx,edx
  423492:	xor    edx,DWORD PTR ds:0x428653
  423498:	or     edx,DWORD PTR ds:0x428637
  42349e:	mov    DWORD PTR ds:0x428653,edx
  4234a4:	mov    edx,0x3272ec
  4234a9:	mov    ecx,DWORD PTR ds:0x428607
  4234af:	adc    DWORD PTR ds:0x42865b,ecx
  4234b5:	sub    eax,edx
  4234b7:	movzx  ecx,WORD PTR ds:0x4285ff
  4234be:	sbb    DWORD PTR ds:0x42864f,ecx
  4234c4:	mov    ecx,0x75108a4
  4234c9:	or     DWORD PTR ds:0x4285d3,0x42864b
  4234d3:	xor    eax,ecx
  4234d5:	cmp    eax,0xf89c85c5
  4234da:	mov    DWORD PTR ds:0x42864f,0x82b
  4234e4:	jne    0x423529
  4234ea:	adc    DWORD PTR ds:0x428633,ecx
  4234f0:	mov    eax,DWORD PTR [ebp+0x8]
  4234f3:	push   esi
  4234f4:	sub    DWORD PTR ds:0x4285e7,edi
  4234fa:	mov    esi,DWORD PTR [ebp+0x8]
  4234fd:	and    DWORD PTR ds:0x4285e3,0x244e
  423507:	add    esi,DWORD PTR [eax+0x3c]
  42350a:	mov    DWORD PTR [ebp+0x8],esi
  42350d:	mov    eax,DWORD PTR [ebp-0x4]
  423510:	mov    esi,DWORD PTR [ebp+0x8]
  423513:	xor    eax,ecx
  423515:	add    eax,edx
  423517:	cmp    DWORD PTR [esi+0x54],eax
  42351a:	pop    esi
  42351b:	je     0x423529
  423521:	mov    eax,DWORD PTR [ebp+0x8]
  423524:	jmp    0x423530
  423529:	mov    eax,DWORD PTR [ebp-0x4]
  42352c:	xor    eax,ecx
  42352e:	add    eax,edx
  423530:	leave  
  423531:	ret    0x4
  423534:	push   ebp
  423535:	mov    ebp,esp
  423537:	sub    esp,0xc
  42353a:	push   esi
  42353b:	xor    DWORD PTR ds:0x428617,edi
  423541:	mov    esi,0xf89c85b0
  423546:	xor    edx,DWORD PTR ds:0x428657
  42354c:	mov    DWORD PTR [ebp-0x8],esi
  42354f:	sub    ecx,ecx
  423551:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  423558:	add    ecx,DWORD PTR ds:0x4285e3
  42355e:	push   edi
  42355f:	mov    eax,eax
  423561:	and    DWORD PTR ds:0x4285ff,0x0
  42356b:	xor    eax,eax
  42356d:	add    eax,DWORD PTR ds:0x4285ff
  423573:	inc    eax
  423574:	mov    ds:0x4285ff,eax
  423579:	cmp    DWORD PTR ds:0x4285ff,0x20
  423580:	ja     0x4235a3
  423586:	jmp    0x423596
  42358b:	push   0x2fb5
  423590:	call   DWORD PTR ds:0x4287a3
  423596:	cmp    DWORD PTR ds:0x4285ff,0x10
  42359d:	jb     0x42356b
  4235a3:	mov    eax,DWORD PTR [ebp-0x4]
  4235a6:	and    DWORD PTR ds:0x42862f,0x0
  4235b0:	jmp    0x4235c2
  4235b5:	mov    ecx,DWORD PTR ds:0x42862f
  4235bb:	inc    ecx
  4235bc:	mov    DWORD PTR ds:0x42862f,ecx
  4235c2:	cmp    DWORD PTR ds:0x42862f,0x19
  4235c9:	jae    0x4235f4
  4235cf:	cmp    DWORD PTR ds:0x42862f,0x22
  4235d6:	ja     0x4235f4
  4235dc:	jmp    0x4235ef
  4235e1:	push   DWORD PTR [ebp-0x28]
  4235e4:	push   0x428028
  4235e9:	call   DWORD PTR ds:0x4287a7
  4235ef:	jmp    0x4235b5
  4235f4:	mov    edi,DWORD PTR [ebp-0x8]
  4235f7:	mov    ecx,0x75108a4
  4235fc:	xor    eax,ecx
  4235fe:	sbb    edx,DWORD PTR ds:0x428637
  423604:	xor    edi,ecx
  423606:	mov    edx,0x3272ec
  42360b:	add    edi,edx
  42360d:	mov    DWORD PTR ds:0x42861b,0x1914
  423617:	add    eax,edx
  423619:	mov    DWORD PTR ds:0x42863b,0x6a3e
  423623:	imul   eax,edi
  423626:	mov    DWORD PTR ds:0x428613,ebx
  42362c:	mov    edi,DWORD PTR [ebp+0xc]
  42362f:	mov    DWORD PTR ds:0x428647,0x7cb7
  423639:	cmp    edi,eax
  42363b:	je     0x423692
  423641:	not    eax
  423643:	mov    DWORD PTR [ebp-0xc],esi
  423646:	mov    eax,DWORD PTR [ebp-0xc]
  423649:	mov    esi,DWORD PTR [ebp+0xc]
  42364c:	xor    eax,ecx
  42364e:	lea    eax,[eax*8+0x19397d8]
  423655:	mov    eax,DWORD PTR [esi+eax*1]
  423658:	mov    DWORD PTR [ebp+0xc],eax
  42365b:	mov    eax,DWORD PTR [ebp-0x4]
  42365e:	mov    esi,DWORD PTR [ebp-0x8]
  423661:	xor    eax,ecx
  423663:	xor    esi,ecx
  423665:	add    esi,edx
  423667:	add    eax,edx
  423669:	imul   eax,esi
  42366c:	mov    esi,DWORD PTR [ebp+0xc]
  42366f:	cmp    esi,eax
  423671:	je     0x423692
  423677:	mov    eax,DWORD PTR [ebp-0x4]
  42367a:	xor    eax,ecx
  42367c:	mov    ecx,DWORD PTR [ebp+0xc]
  42367f:	add    eax,edx
  423681:	imul   eax,ecx
  423684:	add    eax,DWORD PTR [ebp+0x8]
  423687:	mov    DWORD PTR [ebp+0xc],eax
  42368a:	mov    eax,DWORD PTR [ebp+0xc]
  42368d:	jmp    0x4236a3
  423692:	mov    eax,DWORD PTR [ebp-0x4]
  423695:	mov    esi,DWORD PTR [ebp-0x8]
  423698:	xor    esi,ecx
  42369a:	xor    eax,ecx
  42369c:	add    esi,edx
  42369e:	add    eax,edx
  4236a0:	imul   eax,esi
  4236a3:	pop    edi
  4236a4:	pop    esi
  4236a5:	leave  
  4236a6:	ret    0x8
  4236a9:	push   ebp
  4236aa:	mov    ebp,esp
  4236ac:	sub    esp,0x38
  4236af:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4236b6:	sub    DWORD PTR ds:0x428607,edi
  4236bc:	push   ebx
  4236bd:	adc    DWORD PTR ds:0x4285d3,0x5ead
  4236c7:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  4236ce:	mov    eax,DWORD PTR [ebp-0x4]
  4236d1:	push   esi
  4236d2:	movzx  esi,WORD PTR ds:0x42865f
  4236d9:	or     esi,DWORD PTR ds:0x428643
  4236df:	mov    DWORD PTR ds:0x42865f,esi
  4236e5:	mov    esi,0x75108a4
  4236ea:	xor    eax,esi
  4236ec:	push   edi
  4236ed:	movzx  edi,WORD PTR ds:0x42862f
  4236f4:	add    edi,DWORD PTR ds:0x4285d3
  4236fa:	mov    DWORD PTR ds:0x42862f,edi
  423700:	mov    edi,0x3272ec
  423705:	add    eax,edi
  423707:	and    DWORD PTR ds:0x42864f,0x1fff
  423711:	mov    DWORD PTR [ebp-0x1c],eax
  423714:	mov    eax,ds:0x4285d7
  423719:	sbb    DWORD PTR ds:0x42866b,eax
  42371f:	mov    eax,DWORD PTR [ebp+0x14]
  423722:	test   eax,eax
  423724:	mov    DWORD PTR ds:0x42861b,0x61b5
  42372e:	je     0x42373e
  423734:	xor    eax,eax
  423736:	mov    eax,DWORD PTR [ebp+0x14]
  423739:	mov    eax,DWORD PTR [eax]
  42373b:	mov    DWORD PTR [ebp-0x1c],eax
  42373e:	and    DWORD PTR ds:0x42867b,ecx
  423744:	mov    eax,DWORD PTR [ebp-0x4]
  423747:	xor    eax,esi
  423749:	adc    DWORD PTR ds:0x4285eb,edx
  42374f:	add    eax,edi
  423751:	and    DWORD PTR ds:0x4285eb,ecx
  423757:	mov    DWORD PTR [ebp-0x8],eax
  42375a:	xor    eax,eax
  42375c:	mov    eax,DWORD PTR [ebp-0xc]
  42375f:	sub    DWORD PTR ds:0x428607,0x2824
  423769:	xor    eax,esi
  42376b:	or     DWORD PTR ds:0x428663,0xb3a
  423775:	add    eax,edi
  423777:	sub    DWORD PTR ds:0x428617,edx
  42377d:	mov    DWORD PTR [ebp-0x24],eax
  423780:	mov    ebx,DWORD PTR ds:0x428667
  423786:	and    DWORD PTR ds:0x428603,ebx
  42378c:	mov    eax,DWORD PTR [ebp-0x4]
  42378f:	xor    eax,esi
  423791:	add    eax,edi
  423793:	and    DWORD PTR ds:0x428637,0x0
  42379d:	mov    ebx,DWORD PTR ds:0x428637
  4237a3:	inc    ebx
  4237a4:	mov    DWORD PTR ds:0x428637,ebx
  4237aa:	cmp    DWORD PTR ds:0x428637,0x23
  4237b1:	ja     0x4237da
  4237b7:	jmp    0x4237cd
  4237bc:	push   0x428070
  4237c1:	push   DWORD PTR [ebp-0x14]
  4237c4:	push   DWORD PTR [ebp-0x14]
  4237c7:	call   DWORD PTR ds:0x4287ab
  4237cd:	cmp    DWORD PTR ds:0x428637,0x17
  4237d4:	jb     0x42379d
  4237da:	mov    DWORD PTR [ebp-0x30],eax
  4237dd:	mov    ebx,DWORD PTR [ebp-0x4]
  4237e0:	xor    ebx,esi
  4237e2:	add    ebx,edi
  4237e4:	adc    eax,DWORD PTR ds:0x428673
  4237ea:	mov    eax,DWORD PTR [ebp-0x24]
  4237ed:	sub    eax,edi
  4237ef:	lea    ecx,[ebx-0x3272ec]
  4237f5:	add    DWORD PTR ds:0x42861f,0x137d
  4237ff:	xor    eax,esi
  423801:	adc    DWORD PTR ds:0x428667,0x428613
  42380b:	xor    ecx,esi
  42380d:	cmp    ecx,eax
  42380f:	je     0x423b34
  423815:	and    DWORD PTR ds:0x428667,0x0
  42381f:	mov    eax,ds:0x428667
  423824:	inc    eax
  423825:	mov    ds:0x428667,eax
  42382a:	cmp    DWORD PTR ds:0x428667,0x22
  423831:	jge    0x423854
  423837:	jmp    0x423847
  42383c:	push   0x428056
  423841:	call   DWORD PTR ds:0x4287af
  423847:	cmp    DWORD PTR ds:0x428667,0x14
  42384e:	jb     0x42381f
  423854:	mov    eax,DWORD PTR [ebp-0x4]
  423857:	add    DWORD PTR ds:0x42862b,0x428657
  423861:	xor    eax,esi
  423863:	add    eax,edi
  423865:	mov    DWORD PTR ds:0x42863b,0x5900
  42386f:	cmp    ebx,eax
  423871:	mov    DWORD PTR ds:0x42864b,0x1e0f
  42387b:	jne    0x423a82
  423881:	sbb    DWORD PTR ds:0x42866f,0x4285df
  42388b:	push   DWORD PTR [ebp+0x8]
  42388e:	sub    DWORD PTR ds:0x428653,0x2050
  423898:	call   0x423474
  42389d:	mov    DWORD PTR [ebp-0x14],eax
  4238a0:	mov    eax,DWORD PTR [ebp-0x4]
  4238a3:	xor    DWORD PTR ds:0x428603,0x42865b
  4238ad:	mov    ecx,DWORD PTR [ebp-0x14]
  4238b0:	sbb    DWORD PTR ds:0x42866f,0x5022
  4238ba:	xor    eax,esi
  4238bc:	adc    DWORD PTR ds:0x42867b,0x428657
  4238c6:	add    eax,edi
  4238c8:	mov    DWORD PTR ds:0x4285e7,0x3cb8
  4238d2:	cmp    ecx,eax
  4238d4:	je     0x423c17
  4238da:	sbb    DWORD PTR ds:0x4285ef,0x428613
  4238e4:	push   DWORD PTR [ebp-0x14]
  4238e7:	or     DWORD PTR ds:0x42866b,0x13a4
  4238f1:	push   DWORD PTR [ebp+0x8]
  4238f4:	and    DWORD PTR ds:0x4285cf,0x6488
  4238fe:	call   0x423534
  423903:	mov    DWORD PTR [ebp-0x14],eax
  423906:	mov    ecx,DWORD PTR ds:0x4286c7
  42390c:	mov    eax,ds:0x4286ff
  423911:	sub    ecx,eax
  423913:	sub    ecx,DWORD PTR [ecx+eax*1]
  423916:	mov    eax,DWORD PTR [ebp-0x4]
  423919:	mov    DWORD PTR ds:0x4285e3,0x1e
  423923:	cmp    DWORD PTR ds:0x4285e3,0x0
  42392a:	je     0x423964
  423930:	cmp    DWORD PTR ds:0x4285e3,0x27
  423937:	ja     0x423964
  42393d:	jmp    0x423952
  423942:	push   0x4c54
  423947:	push   0x42862f
  42394c:	call   DWORD PTR ds:0x4287b3
  423952:	mov    ecx,DWORD PTR ds:0x4285e3
  423958:	dec    ecx
  423959:	mov    DWORD PTR ds:0x4285e3,ecx
  42395f:	jmp    0x423923
  423964:	mov    ecx,DWORD PTR [ebp-0x14]
  423967:	mov    DWORD PTR ds:0x4285f3,0x1814
  423971:	xor    eax,esi
  423973:	add    DWORD PTR ds:0x428657,0x428637
  42397d:	add    eax,edi
  42397f:	mov    DWORD PTR ds:0x42863f,0xaaa
  423989:	cmp    ecx,eax
  42398b:	mov    DWORD PTR ds:0x42860f,0x626d
  423995:	je     0x423c17
  42399b:	mov    eax,DWORD PTR [ebp-0x14]
  42399e:	or     ecx,0x1da9
  4239a4:	mov    eax,DWORD PTR [eax+0x18]
  4239a7:	sub    DWORD PTR ds:0x42865b,ecx
  4239ad:	mov    DWORD PTR [ebp-0x24],eax
  4239b0:	and    eax,0x4d45
  4239b5:	mov    eax,DWORD PTR [ebp-0x14]
  4239b8:	adc    ecx,0x37bd
  4239be:	mov    ecx,DWORD PTR [ebp+0x8]
  4239c1:	add    ecx,DWORD PTR [eax+0x20]
  4239c4:	movzx  eax,WORD PTR ds:0x4285d3
  4239cb:	sbb    DWORD PTR ds:0x428657,eax
  4239d1:	mov    DWORD PTR [ebp-0x2c],ecx
  4239d4:	and    DWORD PTR ds:0x428627,0x1b49
  4239de:	mov    eax,DWORD PTR [ebp-0x14]
  4239e1:	mov    ecx,DWORD PTR [ebp+0x8]
  4239e4:	and    DWORD PTR ds:0x4285db,0x4285ef
  4239ee:	add    ecx,DWORD PTR [eax+0x24]
  4239f1:	adc    DWORD PTR ds:0x4285e3,0x7baf
  4239fb:	mov    DWORD PTR [ebp-0x34],ecx
  4239fe:	and    DWORD PTR ds:0x428623,0x0
  423a08:	jmp    0x423a1b
  423a0d:	xor    eax,eax
  423a0f:	xor    eax,DWORD PTR ds:0x428623
  423a15:	inc    eax
  423a16:	mov    ds:0x428623,eax
  423a1b:	cmp    DWORD PTR ds:0x428623,0x1a
  423a22:	jae    0x423a5d
  423a28:	cmp    DWORD PTR ds:0x428623,0xd
  423a2f:	jb     0x423a5d
  423a35:	jmp    0x423a40
  423a3a:	call   DWORD PTR ds:0x4287b7
  423a40:	cmp    DWORD PTR ds:0x428623,0xc
  423a47:	jne    0x423a58
  423a4d:	mov    eax,ds:0x428623
  423a52:	inc    eax
  423a53:	mov    ds:0x428623,eax
  423a58:	jmp    0x423a0d
  423a5d:	mov    eax,DWORD PTR [ebp-0x14]
  423a60:	mov    ecx,DWORD PTR [ebp+0x8]
  423a63:	xor    DWORD PTR ds:0x428603,0x1ba
  423a6d:	add    ecx,DWORD PTR [eax+0x1c]
  423a70:	mov    DWORD PTR [ebp-0x14],ecx
  423a73:	mov    DWORD PTR ds:0x4285df,0x6d54
  423a7d:	jmp    0x423bd5
  423a82:	sbb    DWORD PTR ds:0x428657,0x267e
  423a8c:	mov    eax,DWORD PTR [ebp-0x2c]
  423a8f:	and    DWORD PTR ds:0x42865f,0x0
  423a99:	mov    ecx,DWORD PTR ds:0x42865f
  423a9f:	inc    ecx
  423aa0:	mov    DWORD PTR ds:0x42865f,ecx
  423aa6:	cmp    DWORD PTR ds:0x42865f,0x24
  423aad:	jl     0x423ad0
  423ab3:	jmp    0x423ac3
  423ab8:	push   0x3051
  423abd:	call   DWORD PTR ds:0x4287bb
  423ac3:	cmp    DWORD PTR ds:0x42865f,0x1e
  423aca:	jb     0x423a99
  423ad0:	mov    ecx,DWORD PTR [ebp+0x8]
  423ad3:	add    DWORD PTR ds:0x428617,0x4285ef
  423add:	add    ecx,DWORD PTR [eax+ebx*4]
  423ae0:	movzx  eax,BYTE PTR ds:0x4285d3
  423ae7:	or     eax,DWORD PTR ds:0x428633
  423aed:	mov    ds:0x4285d3,eax
  423af2:	mov    DWORD PTR [ebp-0x28],ecx
  423af5:	mov    eax,DWORD PTR [ebp-0x4]
  423af8:	xor    DWORD PTR ds:0x42860b,0x227b
  423b02:	mov    ecx,DWORD PTR [ebp-0x28]
  423b05:	mov    DWORD PTR ds:0x428657,0x956
  423b0f:	xor    eax,esi
  423b11:	add    DWORD PTR ds:0x428637,0x428663
  423b1b:	add    eax,edi
  423b1d:	mov    DWORD PTR ds:0x42862f,0x1972
  423b27:	cmp    ecx,eax
  423b29:	je     0x423bd5
  423b2f:	jmp    0x423b94
  423b34:	mov    eax,DWORD PTR [ebp-0x4]
  423b37:	mov    DWORD PTR ds:0x42866f,0x10fc
  423b41:	mov    ecx,DWORD PTR [ebp-0x8]
  423b44:	or     DWORD PTR ds:0x42866f,0x42865f
  423b4e:	xor    eax,esi
  423b50:	adc    DWORD PTR ds:0x4285eb,0x240b
  423b5a:	add    eax,edi
  423b5c:	mov    DWORD PTR ds:0x428657,0x63ac
  423b66:	cmp    ecx,eax
  423b68:	mov    eax,DWORD PTR [ebp-0x4]
  423b6b:	je     0x423c1a
  423b71:	mov    ecx,DWORD PTR [ebp-0x30]
  423b74:	xor    eax,esi
  423b76:	mov    DWORD PTR ds:0x428613,0x1e55
  423b80:	add    eax,edi
  423b82:	mov    DWORD PTR ds:0x428637,0x6483
  423b8c:	cmp    ecx,eax
  423b8e:	je     0x423c23
  423b94:	adc    DWORD PTR ds:0x428603,0x42865b
  423b9e:	lea    eax,[ebp-0x8]
  423ba1:	sub    DWORD PTR ds:0x428603,0x42860b
  423bab:	push   eax
  423bac:	sbb    DWORD PTR ds:0x42861b,0x4285f7
  423bb6:	push   DWORD PTR [ebp-0x28]
  423bb9:	sub    DWORD PTR ds:0x428617,0x428667
  423bc3:	push   DWORD PTR [ebp+0xc]
  423bc6:	adc    DWORD PTR ds:0x42863f,0x428633
  423bd0:	call   0x40f467
  423bd5:	sub    DWORD PTR ds:0x4285d7,0x3834
  423bdf:	mov    eax,DWORD PTR [ebp-0x4]
  423be2:	mov    ecx,DWORD PTR [ebp-0x8]
  423be5:	xor    eax,esi
  423be7:	add    eax,edi
  423be9:	cmp    ecx,eax
  423beb:	je     0x423c06
  423bf1:	mov    eax,DWORD PTR [ebp-0x34]
  423bf4:	movzx  eax,WORD PTR [eax+ebx*2]
  423bf8:	mov    ecx,DWORD PTR [ebp-0x14]
  423bfb:	mov    eax,DWORD PTR [ecx+eax*4]
  423bfe:	mov    DWORD PTR [ebp-0x38],eax
  423c01:	jmp    0x423b34
  423c06:	mov    eax,DWORD PTR [ebp-0xc]
  423c09:	xor    eax,esi
  423c0b:	lea    ebx,[ebx+eax*1+0x3272ec]
  423c12:	jmp    0x4237e4
  423c17:	mov    eax,DWORD PTR [ebp-0x4]
  423c1a:	xor    eax,esi
  423c1c:	add    eax,edi
  423c1e:	jmp    0x423d40
  423c23:	mov    eax,DWORD PTR [ebp-0x38]
  423c26:	add    eax,DWORD PTR [ebp+0x8]
  423c29:	mov    DWORD PTR [ebp-0x18],eax
  423c2c:	mov    eax,DWORD PTR [ebp-0x1c]
  423c2f:	test   eax,eax
  423c31:	je     0x423ccb
  423c37:	mov    DWORD PTR [ebp-0x20],0x0
  423c3e:	push   0x3
  423c40:	xor    edx,edx
  423c42:	pop    edx
  423c43:	add    edx,0x8
  423c46:	push   edx
  423c47:	pop    ecx
  423c48:	push   0x6
  423c4a:	dec    ecx
  423c4b:	pop    ebx
  423c4c:	dec    ebx
  423c4d:	xchg   ebx,ecx
  423c4f:	sub    ebx,ecx
  423c51:	xchg   ebx,ecx
  423c53:	dec    ecx
  423c54:	mov    eax,DWORD PTR [ebp-0x1c]
  423c57:	imul   eax,ecx
  423c5a:	sub    esp,eax
  423c5c:	mov    DWORD PTR [ebp-0x20],esp
  423c5f:	mov    eax,DWORD PTR [ebp-0x4]
  423c62:	xor    eax,esi
  423c64:	add    eax,edi
  423c66:	jmp    0x423ca4
  423c6b:	mov    ecx,DWORD PTR [ebp-0xc]
  423c6e:	mov    eax,DWORD PTR [ebp+0x8]
  423c71:	mov    edx,DWORD PTR [ebp+0x14]
  423c74:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  423c78:	xor    ecx,esi
  423c7a:	add    ecx,edi
  423c7c:	xor    edx,edx
  423c7e:	div    ecx
  423c80:	mov    ecx,DWORD PTR [ebp-0x4]
  423c83:	xor    ecx,esi
  423c85:	lea    eax,[ecx+eax*1+0x3272ec]
  423c8c:	mov    ecx,DWORD PTR [ebp+0x8]
  423c8f:	mov    edx,DWORD PTR [ebp-0x20]
  423c92:	mov    DWORD PTR [edx+ecx*4],eax
  423c95:	mov    eax,DWORD PTR [ebp-0xc]
  423c98:	mov    ecx,DWORD PTR [ebp+0x8]
  423c9b:	xor    eax,esi
  423c9d:	lea    eax,[eax+ecx*1+0x3272ec]
  423ca4:	mov    DWORD PTR [ebp+0x8],eax
  423ca7:	mov    eax,DWORD PTR [ebp-0xc]
  423caa:	mov    ecx,DWORD PTR [ebp+0x14]
  423cad:	xor    eax,esi
  423caf:	add    eax,edi
  423cb1:	imul   eax,DWORD PTR [ecx]
  423cb4:	mov    ecx,DWORD PTR [ebp-0x4]
  423cb7:	mov    edx,DWORD PTR [ebp+0x8]
  423cba:	xor    ecx,esi
  423cbc:	lea    ecx,[ecx+edx*1+0x3272ec]
  423cc3:	cmp    ecx,eax
  423cc5:	jne    0x423c6b
  423ccb:	mov    eax,DWORD PTR [ebp-0x4]
  423cce:	xor    eax,esi
  423cd0:	add    eax,edi
  423cd2:	mov    DWORD PTR [ebp-0x10],eax
  423cd5:	mov    ebx,0x65655
  423cda:	add    ebx,0x3234
  423ce0:	xchg   ebx,esi
  423ce2:	xor    ebx,ebx
  423ce4:	push   esi
  423ce5:	mov    esi,ebx
  423ce7:	pop    ebx
  423ce8:	mov    edx,esi
  423cea:	add    ebx,0x1002
  423cf0:	lea    eax,[ebp-0x18]
  423cf3:	add    edx,eax
  423cf5:	add    edx,0x5
  423cf8:	push   edx
  423cf9:	inc    esi
  423cfa:	pop    ecx
  423cfb:	dec    ecx
  423cfc:	xchg   ecx,eax
  423cfd:	dec    eax
  423cfe:	xchg   ecx,eax
  423cff:	dec    ecx
  423d00:	xchg   ecx,edx
  423d02:	dec    edx
  423d03:	push   edx
  423d04:	mov    edx,ebx
  423d06:	pop    ebx
  423d07:	dec    ebx
  423d08:	call   DWORD PTR [ebx]
  423d0a:	cmp    DWORD PTR [ebp+0x10],esi
  423d0d:	je     0x423d2c
  423d13:	xchg   edx,eax
  423d14:	push   0xb
  423d16:	pop    ecx
  423d17:	push   0x4
  423d19:	pop    ebx
  423d1a:	inc    ebx
  423d1b:	xchg   ebx,ecx
  423d1d:	sub    ebx,ecx
  423d1f:	xchg   ebx,ecx
  423d21:	dec    ecx
  423d22:	dec    ecx
  423d23:	mov    eax,DWORD PTR [ebp-0x1c]
  423d26:	imul   eax,ecx
  423d29:	add    esp,eax
  423d2b:	xchg   edx,eax
  423d2c:	push   eax
  423d2d:	xor    ebx,ebx
  423d2f:	mov    edx,esp
  423d31:	dec    edx
  423d32:	inc    ebx
  423d33:	add    ebx,DWORD PTR [edx+ebx*1]
  423d36:	dec    ebx
  423d37:	xor    edx,edx
  423d39:	add    DWORD PTR [ebp-0x10],ebx
  423d3c:	pop    ebx
  423d3d:	mov    eax,DWORD PTR [ebp-0x10]
  423d40:	pop    edi
  423d41:	pop    esi
  423d42:	pop    ebx
  423d43:	leave  
  423d44:	ret    0x10
	...
  423d53:	add    BYTE PTR [ebx+0x4df68a],dh
  423d59:	add    BYTE PTR [eax],al
  423d5b:	add    BYTE PTR [edx],al
  423d5d:	add    BYTE PTR [eax],al
  423d5f:	add    BYTE PTR [eax+eax*1],dh
  423d62:	add    BYTE PTR [eax],al
  423d64:	jo     0x423da3
  423d66:	add    al,BYTE PTR [eax]
  423d68:	jo     0x423d9b
  423d6a:	add    al,BYTE PTR [eax]
  423d6c:	add    BYTE PTR [eax],al
  423d6e:	add    BYTE PTR [eax],al
  423d70:	push   edx
  423d71:	push   ebx
  423d72:	inc    esp
  423d73:	push   ebx
  423d74:	mov    BYTE PTR [esi+0x57],bh
  423d77:	bound  ebp,QWORD PTR ds:0x8446b01b
  423d7d:	cmc    
  423d7e:	je     0x423d2e
  423d80:	retf   0x6b6b
  423d83:	pop    eax
  423d84:	add    DWORD PTR [eax],eax
  423d86:	add    BYTE PTR [eax],al
  423d88:	inc    ebp
  423d89:	cmp    bl,BYTE PTR [edx+edx*2+0x61]
  423d8d:	ja     0x423daf
  423d8f:	inc    esp
  423d90:	popa   
  423d91:	je     0x423df4
  423d93:	pop    esp
  423d94:	inc    ebp
  423d95:	outs   dx,BYTE PTR ds:[esi]
  423d96:	arpl   WORD PTR [edi+0x64],bp
  423d99:	gs fs inc esp
  423d9c:	popa   
  423d9d:	je     0x423e00
  423d9f:	inc    esi
  423da0:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x81ec558b
  423da8:	in     al,dx
  423da9:	or     BYTE PTR [ecx],al
  423dab:	add    BYTE PTR [eax],al
  423dad:	push   ebx
  423dae:	mov    eax,ebx
  423db0:	xchg   ecx,eax
  423db1:	mov    eax,DWORD PTR [ebp+0x8]
  423db4:	cmp    eax,0xf89c85b0
  423db9:	jne    0x424240
  423dbf:	mov    eax,DWORD PTR [ebp+0xc]
  423dc2:	cmp    eax,0xf89c85b1
  423dc7:	jne    0x424240
  423dcd:	mov    eax,DWORD PTR [ebp+0x24]
  423dd0:	mov    DWORD PTR [ebp-0x4],eax
  423dd3:	mov    BYTE PTR [ebp-0x18],0x13
  423dd7:	mov    BYTE PTR [ebp-0x17],0x1e
  423ddb:	mov    BYTE PTR [ebp-0x16],0x15
  423ddf:	mov    BYTE PTR [ebp-0x15],0x4f
  423de3:	mov    BYTE PTR [ebp-0x14],0x4c
  423de7:	mov    BYTE PTR [ebp-0x13],0x7a
  423deb:	mov    BYTE PTR [ebp-0x20],0x1
  423def:	mov    BYTE PTR [ebp-0x1f],0xf
  423df3:	mov    BYTE PTR [ebp-0x1e],0x11
  423df7:	mov    BYTE PTR [ebp-0x1d],0xc
  423dfb:	mov    BYTE PTR [ebp-0x1c],0x4f
  423dff:	mov    BYTE PTR [ebp-0x1b],0x4c
  423e03:	mov    BYTE PTR [ebp-0x1a],0x7a
  423e07:	mov    BYTE PTR [ebp-0x28],0xf
  423e0b:	mov    BYTE PTR [ebp-0x27],0x12
  423e0f:	mov    BYTE PTR [ebp-0x26],0x16
  423e13:	mov    BYTE PTR [ebp-0x25],0x3
  423e17:	mov    BYTE PTR [ebp-0x24],0x1d
  423e1b:	mov    BYTE PTR [ebp-0x23],0xa
  423e1f:	push   esi
  423e20:	mov    BYTE PTR [ebp-0x22],0x15
  423e24:	mov    BYTE PTR [ebp-0x21],0x7a
  423e28:	xor    esi,esi
  423e2a:	mov    eax,0xfd
  423e2f:	lea    ecx,[ebp+esi*1-0x18]
  423e33:	movzx  edx,BYTE PTR [ecx]
  423e36:	xor    edx,0x79
  423e39:	add    edx,eax
  423e3b:	inc    esi
  423e3c:	mov    BYTE PTR [ecx],dl
  423e3e:	cmp    esi,0x6
  423e41:	jb     0x423e2f
  423e43:	xor    esi,esi
  423e45:	lea    ecx,[ebp+esi*1-0x20]
  423e49:	movzx  edx,BYTE PTR [ecx]
  423e4c:	xor    edx,0x79
  423e4f:	add    edx,eax
  423e51:	inc    esi
  423e52:	mov    BYTE PTR [ecx],dl
  423e54:	cmp    esi,0x7
  423e57:	jb     0x423e45
  423e59:	xor    esi,esi
  423e5b:	lea    ecx,[ebp+esi*1-0x28]
  423e5f:	movzx  edx,BYTE PTR [ecx]
  423e62:	xor    edx,0x79
  423e65:	add    edx,eax
  423e67:	inc    esi
  423e68:	mov    BYTE PTR [ecx],dl
  423e6a:	cmp    esi,0x8
  423e6d:	jb     0x423e5b
  423e6f:	lea    eax,[ebp-0x2c]
  423e72:	mov    DWORD PTR [ebp-0x8],eax
  423e75:	mov    ecx,DWORD PTR [ebp-0x8]
  423e78:	mov    eax,0x7113fcce
  423e7d:	mov    DWORD PTR [ecx],eax
  423e7f:	mov    ecx,DWORD PTR [ebp-0x2c]
  423e82:	push   edi
  423e83:	mov    esi,0x4e3e
  423e88:	mov    ebx,0x3272ec
  423e8d:	cmp    ecx,eax
  423e8f:	jne    0x423f5a
  423e95:	lea    eax,[esi+0x29]
  423e98:	mov    WORD PTR [ebp-0x78],ax
  423e9c:	mov    eax,esi
  423e9e:	mov    WORD PTR [ebp-0x76],ax
  423ea2:	add    eax,0x3b
  423ea5:	mov    WORD PTR [ebp-0x74],ax
  423ea9:	lea    eax,[esi-0x6]
  423eac:	mov    WORD PTR [ebp-0x72],ax
  423eb0:	add    eax,0x47
  423eb3:	mov    ecx,eax
  423eb5:	lea    eax,[esi-0x1d]
  423eb8:	mov    WORD PTR [ebp-0x66],ax
  423ebc:	mov    eax,esi
  423ebe:	mov    WORD PTR [ebp-0x64],ax
  423ec2:	add    eax,0xffffffe4
  423ec5:	mov    WORD PTR [ebp-0x62],ax
  423ec9:	mov    eax,0x44b
  423ece:	mov    WORD PTR [ebp-0x60],ax
  423ed2:	mov    eax,0x5664
  423ed7:	mov    WORD PTR [ebp-0x5e],ax
  423edb:	mov    eax,0x6104
  423ee0:	mov    WORD PTR [ebp-0x5c],ax
  423ee4:	lea    eax,[ebp-0xe0]
  423eea:	push   eax
  423eeb:	mov    eax,DWORD PTR [ebp+0xc]
  423eee:	mov    edi,0x75108a4
  423ef3:	xor    eax,edi
  423ef5:	add    eax,ebx
  423ef7:	push   eax
  423ef8:	mov    WORD PTR [ebp-0x70],cx
  423efc:	lea    ecx,[esi-0x1a]
  423eff:	mov    edx,ecx
  423f01:	lea    eax,[ebp-0x78]
  423f04:	push   eax
  423f05:	mov    eax,DWORD PTR [ebp-0x4]
  423f08:	mov    eax,DWORD PTR [eax+0x198]
  423f0e:	mov    WORD PTR [ebp-0x6e],dx
  423f12:	mov    edx,0x4f82
  423f17:	mov    WORD PTR [ebp-0x6c],dx
  423f1b:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e25
  423f22:	mov    DWORD PTR [ebp-0x5a],0x4e24f116
  423f29:	mov    DWORD PTR [ebp-0xe0],0x1
  423f33:	mov    DWORD PTR [ebp-0xdc],0x255
  423f3d:	push   DWORD PTR [eax]
  423f3f:	mov    eax,DWORD PTR [ebp+0x10]
  423f42:	call   eax
  423f44:	mov    DWORD PTR [ebp-0x8],eax
  423f47:	mov    eax,DWORD PTR [ebp-0x8]
  423f4a:	test   eax,eax
  423f4c:	je     0x423f5f
  423f4e:	xor    DWORD PTR ds:0x76586876,0x87687666
  423f58:	jmp    0x423f5f
  423f5a:	mov    edi,0x75108a4
  423f5f:	mov    eax,DWORD PTR [ebp-0x4]
  423f62:	mov    ecx,DWORD PTR [eax+0x18c]
  423f68:	xor    eax,eax
  423f6a:	cmp    DWORD PTR [ecx],eax
  423f6c:	jne    0x4241db
  423f72:	mov    ecx,DWORD PTR [ebp-0x4]
  423f75:	mov    ecx,DWORD PTR [ecx+0x17c]
  423f7b:	mov    DWORD PTR [ecx],eax
  423f7d:	mov    ecx,DWORD PTR [ebp-0x4]
  423f80:	mov    ecx,DWORD PTR [ecx+0x180]
  423f86:	mov    DWORD PTR [ecx],eax
  423f88:	mov    eax,0x4e69
  423f8d:	mov    WORD PTR [ebp-0x9c],ax
  423f94:	mov    eax,esi
  423f96:	mov    WORD PTR [ebp-0x9a],ax
  423f9d:	mov    eax,0x4e79
  423fa2:	mov    WORD PTR [ebp-0x98],ax
  423fa9:	add    eax,0xffffffc0
  423fac:	mov    WORD PTR [ebp-0x96],ax
  423fb3:	mov    eax,0x4f8e
  423fb8:	mov    WORD PTR [ebp-0x94],ax
  423fbf:	mov    eax,0x4e3a
  423fc4:	mov    WORD PTR [ebp-0x92],ax
  423fcb:	add    eax,0x45
  423fce:	mov    WORD PTR [ebp-0x90],ax
  423fd5:	mov    eax,0x4e24
  423fda:	mov    WORD PTR [ebp-0x8e],ax
  423fe1:	mov    eax,esi
  423fe3:	mov    WORD PTR [ebp-0x8c],ax
  423fea:	mov    eax,0x4e25
  423fef:	mov    WORD PTR [ebp-0x8a],ax
  423ff6:	mov    eax,0x99f9
  423ffb:	mov    WORD PTR [ebp-0x88],ax
  424002:	mov    eax,0x8d6a
  424007:	mov    WORD PTR [ebp-0x86],ax
  42400e:	mov    eax,0xd66f
  424013:	mov    WORD PTR [ebp-0x84],ax
  42401a:	mov    eax,0xd78b
  42401f:	mov    WORD PTR [ebp-0x82],ax
  424026:	mov    eax,0x27b4
  42402b:	mov    WORD PTR [ebp-0x80],ax
  42402f:	mov    eax,0x47b4
  424034:	mov    WORD PTR [ebp-0x7e],ax
  424038:	mov    eax,0x4e3b
  42403d:	push   0x8
  42403f:	mov    WORD PTR [ebp-0x7c],ax
  424043:	mov    DWORD PTR [ebp-0x10],0x316120f
  42404a:	mov    DWORD PTR [ebp-0xc],0x7a150a1d
  424051:	lea    eax,[ebp-0x10]
  424054:	pop    ecx
  424055:	mov    dl,BYTE PTR [eax]
  424057:	xor    dl,0x79
  42405a:	sub    dl,0x3
  42405d:	mov    BYTE PTR [eax],dl
  42405f:	inc    eax
  424060:	dec    ecx
  424061:	jne    0x424055
  424063:	lea    eax,[ebp-0x10]
  424066:	mov    DWORD PTR [ebp-0xdc],eax
  42406c:	lea    eax,[ebp-0xe0]
  424072:	push   eax
  424073:	mov    eax,DWORD PTR [ebp+0xc]
  424076:	xor    eax,edi
  424078:	add    eax,ebx
  42407a:	push   eax
  42407b:	mov    eax,DWORD PTR [ebp-0x4]
  42407e:	add    eax,0x66
  424081:	push   eax
  424082:	mov    eax,DWORD PTR [ebp-0x4]
  424085:	mov    eax,DWORD PTR [eax+0x198]
  42408b:	mov    DWORD PTR [ebp-0xe0],0x1
  424095:	push   DWORD PTR [eax]
  424097:	mov    eax,DWORD PTR [ebp+0x10]
  42409a:	call   eax
  42409c:	mov    ecx,DWORD PTR [ebp+0x8]
  42409f:	xor    ecx,edi
  4240a1:	add    ecx,ebx
  4240a3:	mov    DWORD PTR [ebp-0x8],eax
  4240a6:	cmp    eax,ecx
  4240a8:	jne    0x4240c3
  4240aa:	mov    eax,ds:0x33730bcf
  4240af:	or     eax,0x22150bce
  4240b4:	mov    ds:0x33730bcf,eax
  4240b9:	add    eax,0x3372e92e
  4240be:	mov    ds:0x33730bcf,eax
  4240c3:	mov    ecx,0x4f96
  4240c8:	mov    eax,ecx
  4240ca:	mov    WORD PTR [ebp-0x40],ax
  4240ce:	mov    eax,0x4e63
  4240d3:	mov    edx,eax
  4240d5:	mov    WORD PTR [ebp-0x3e],dx
  4240d9:	lea    edx,[ecx+0x5]
  4240dc:	mov    WORD PTR [ebp-0x3c],dx
  4240e0:	add    edx,0xffffffe8
  4240e3:	mov    WORD PTR [ebp-0x3a],dx
  4240e7:	lea    edx,[ecx-0x9]
  4240ea:	mov    WORD PTR [ebp-0x38],dx
  4240ee:	add    edx,0xfffffffb
  4240f1:	mov    WORD PTR [ebp-0x36],dx
  4240f5:	lea    edx,[ecx+0x21]
  4240f8:	mov    WORD PTR [ebp-0x34],dx
  4240fc:	mov    WORD PTR [ebp-0x32],cx
  424100:	mov    ecx,esi
  424102:	mov    WORD PTR [ebp-0x30],cx
  424106:	lea    ecx,[edx-0x1]
  424109:	mov    edx,ecx
  42410b:	mov    WORD PTR [ebp-0x54],dx
  42410f:	mov    edx,eax
  424111:	mov    WORD PTR [ebp-0x52],dx
  424115:	add    edx,0x18
  424118:	mov    WORD PTR [ebp-0x50],dx
  42411c:	mov    WORD PTR [ebp-0x4e],ax
  424120:	add    eax,0xa
  424123:	mov    WORD PTR [ebp-0x4c],ax
  424127:	mov    eax,0x4e68
  42412c:	mov    WORD PTR [ebp-0x4a],ax
  424130:	lea    eax,[ecx-0x1f]
  424133:	mov    WORD PTR [ebp-0x48],ax
  424137:	mov    WORD PTR [ebp-0x46],cx
  42413b:	mov    WORD PTR [ebp-0x44],si
  42413f:	mov    eax,DWORD PTR [ebp+0x8]
  424142:	movzx  ecx,WORD PTR [ebp-0x54]
  424146:	xor    eax,edi
  424148:	add    eax,ebx
  42414a:	xor    eax,ecx
  42414c:	mov    WORD PTR [ebp-0x54],ax
  424150:	mov    eax,DWORD PTR [ebp+0x8]
  424153:	movzx  ecx,WORD PTR [ebp-0x40]
  424157:	xor    eax,edi
  424159:	add    eax,ebx
  42415b:	xor    eax,ecx
  42415d:	mov    WORD PTR [ebp-0x40],ax
  424161:	xor    eax,eax
  424163:	mov    WORD PTR [ebp-0xf4],ax
  42416a:	mov    WORD PTR [ebp-0x108],ax
  424171:	mov    edi,DWORD PTR [ebp+0x24]
  424174:	lea    eax,[ebp-0xf4]
  42417a:	lea    edx,[ebp-0x54]
  42417d:	mov    DWORD PTR [ebp-0xe0],0x2
  424187:	mov    DWORD PTR [ebp-0xdc],eax
  42418d:	call   0x426ba3
  424192:	mov    DWORD PTR [ebp-0xd8],eax
  424198:	lea    eax,[ebp-0xe0]
  42419e:	push   eax
  42419f:	mov    eax,DWORD PTR [ebp+0xc]
  4241a2:	xor    eax,0x75108a4
  4241a7:	add    eax,ebx
  4241a9:	push   eax
  4241aa:	lea    eax,[ebp-0x9c]
  4241b0:	push   eax
  4241b1:	push   DWORD PTR [ebp-0x8]
  4241b4:	mov    eax,DWORD PTR [ebp+0x10]
  4241b7:	call   eax
  4241b9:	mov    edi,DWORD PTR [ebp+0x24]
  4241bc:	lea    eax,[ebp-0x108]
  4241c2:	lea    edx,[ebp-0x40]
  4241c5:	mov    DWORD PTR [ebp-0xdc],eax
  4241cb:	call   0x426ba3
  4241d0:	mov    DWORD PTR [ebp-0xd8],eax
  4241d6:	mov    edi,0x75108a4
  4241db:	mov    eax,DWORD PTR [ebp+0x14]
  4241de:	push   DWORD PTR [ebp-0x4]
  4241e1:	push   DWORD PTR [ebp+0x20]
  4241e4:	push   DWORD PTR [ebp+0x1c]
  4241e7:	push   DWORD PTR [ebp+0x18]
  4241ea:	push   DWORD PTR [ebp+0x10]
  4241ed:	push   DWORD PTR [ebp+0x8]
  4241f0:	push   DWORD PTR [ebp+0xc]
  4241f3:	call   0x425440
  4241f8:	test   eax,eax
  4241fa:	je     0x42423e
  4241fc:	add    DWORD PTR [ebp-0x4],eax
  4241ff:	push   DWORD PTR [ebp-0x4]
  424202:	lea    esi,[ebp+0x4]
  424205:	call   0x42462e
  42420a:	mov    eax,DWORD PTR [ebp-0x4]
  42420d:	mov    eax,DWORD PTR [eax+0x1c8]
  424213:	mov    eax,DWORD PTR [eax]
  424215:	xor    eax,edi
  424217:	add    eax,ebx
  424219:	mov    eax,DWORD PTR [ebp-0x4]
  42421c:	jne    0x424234
  42421e:	mov    ecx,DWORD PTR [ebp-0x4]
  424221:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424227:	push   DWORD PTR [ecx]
  424229:	mov    eax,DWORD PTR [eax+0x1d8]
  42422f:	call   DWORD PTR [eax+0x28]
  424232:	jmp    0x42423e
  424234:	mov    eax,DWORD PTR [eax+0x17c]
  42423a:	mov    eax,DWORD PTR [eax]
  42423c:	add    DWORD PTR [esi],eax
  42423e:	pop    edi
  42423f:	pop    esi
  424240:	pop    ebx
  424241:	leave  
  424242:	ret    0x20
  424245:	push   edi
  424246:	push   esi
  424247:	push   ebx
  424248:	push   ebp
  424249:	mov    ebp,esp
  42424b:	mov    eax,DWORD PTR [ebp+0x24]
  42424e:	add    DWORD PTR [ebp+0x28],eax
  424251:	push   eax
  424252:	cld    
  424253:	mov    esi,DWORD PTR [ebp+0x18]
  424256:	add    DWORD PTR [ebp+0x1c],esi
  424259:	push   esi
  42425a:	mov    esi,DWORD PTR [ebp+0x14]
  42425d:	lods   eax,DWORD PTR ds:[esi]
  42425e:	xchg   edx,eax
  42425f:	push   edx
  424260:	mov    cl,BYTE PTR [esi-0x2]
  424263:	or     eax,0xffffffff
  424266:	shl    eax,cl
  424268:	not    eax
  42426a:	push   eax
  42426b:	mov    cl,dh
  42426d:	or     eax,0xffffffff
  424270:	shl    eax,cl
  424272:	not    eax
  424274:	push   eax
  424275:	add    cl,dl
  424277:	mov    edi,esi
  424279:	sub    esp,0xc
  42427c:	sub    eax,eax
  42427e:	inc    eax
  42427f:	push   eax
  424280:	push   eax
  424281:	push   eax
  424282:	push   eax
  424283:	push   eax
  424284:	push   edi
  424285:	sub    esi,esi
  424287:	push   esi
  424288:	or     ebx,0xffffffff
  42428b:	mov    eax,0x300
  424290:	shl    eax,cl
  424292:	lea    ecx,[eax+0x736]
  424298:	mov    eax,0x4000400
  42429d:	shr    ecx,1
  42429f:	rep stos DWORD PTR es:[edi],eax
  4242a1:	push   0x5
  4242a3:	pop    ecx
  4242a4:	call   0x42458f
  4242a9:	loop   0x4242a4
  4242ab:	lea    esi,[esi]
  4242ad:	lea    edi,[edi]
  4242af:	mov    edi,DWORD PTR [ebp-0x4]
  4242b2:	mov    eax,DWORD PTR [ebp-0x10]
  4242b5:	sub    edi,DWORD PTR [ebp+0x24]
  4242b8:	and    eax,edi
  4242ba:	mov    DWORD PTR [ebp-0x18],eax
  4242bd:	mov    al,0x0
  4242bf:	call   0x4245a7
  4242c4:	jne    0x42435f
  4242ca:	mov    cl,BYTE PTR [ebp-0xc]
  4242cd:	and    edi,DWORD PTR [ebp-0x14]
  4242d0:	shl    edi,cl
  4242d2:	sub    cl,0x8
  4242d5:	neg    cl
  4242d7:	shr    esi,cl
  4242d9:	pop    eax
  4242da:	add    edi,esi
  4242dc:	pop    esi
  4242dd:	lea    edi,[edi+edi*2]
  4242e0:	shl    edi,0x8
  4242e3:	cmp    al,0x7
  4242e5:	pop    edx
  4242e6:	lea    ecx,[esi+edi*2+0xe6c]
  4242ed:	push   ecx
  4242ee:	push   esi
  4242ef:	mov    esi,0x100
  4242f4:	push   eax
  4242f5:	mov    al,0x1
  4242f7:	jb     0x42432d
  4242f9:	mov    edi,DWORD PTR [ebp-0x4]
  4242fc:	sub    edi,DWORD PTR [ebp-0x24]
  4242ff:	movzx  edi,BYTE PTR [edi]
  424302:	mov    ebp,DWORD PTR [ebp-0x34]
  424305:	shl    edi,1
  424307:	mov    ecx,esi
  424309:	and    esi,edi
  42430b:	add    ecx,esi
  42430d:	lea    ebp,[ebp+ecx*2+0x0]
  424311:	call   0x4245c6
  424316:	mov    ecx,eax
  424318:	shr    esi,0x8
  42431b:	and    ecx,0x1
  42431e:	cmp    esi,ecx
  424320:	mov    esi,0x100
  424325:	jne    0x424335
  424327:	cmp    eax,esi
  424329:	jb     0x424302
  42432b:	jmp    0x424341
  42432d:	mov    ebp,DWORD PTR [ebp-0x34]
  424330:	call   0x4245c6
  424335:	inc    eax
  424336:	inc    esi
  424337:	sub    eax,0x1
  42433a:	sub    esi,0x1
  42433d:	cmp    eax,esi
  42433f:	jb     0x42432d
  424341:	pop    edx
  424342:	inc    edx
  424343:	cmp    edx,0x5
  424346:	dec    edx
  424347:	mov    ecx,edx
  424349:	jb     0x42435a
  42434b:	inc    edx
  42434c:	cmp    edx,0xb
  42434f:	dec    edx
  424350:	mov    cl,0x4
  424352:	dec    cl
  424354:	jb     0x42435a
  424356:	mov    cl,0x7
  424358:	dec    cl
  42435a:	sub    edx,ecx
  42435c:	push   edx
  42435d:	jmp    0x4243ae
  42435f:	mov    al,0xc1
  424361:	dec    al
  424363:	call   0x4245b7
  424368:	jne    0x42437e
  42436a:	pop    eax
  42436b:	pop    edi
  42436c:	pop    edx
  42436d:	pop    ecx
  42436e:	pop    edx
  42436f:	pop    ecx
  424370:	push   DWORD PTR [esp]
  424373:	push   ecx
  424374:	push   edx
  424375:	mov    edx,0x664
  42437a:	mov    cl,0x0
  42437c:	jmp    0x4243f1
  42437e:	mov    al,0xcd
  424380:	dec    al
  424382:	call   0x4245b7
  424387:	jne    0x4243b7
  424389:	mov    al,0xf1
  42438b:	dec    al
  42438d:	call   0x4245a7
  424392:	jne    0x4243e7
  424394:	pop    eax
  424395:	cmp    al,0x7
  424397:	mov    al,0x9
  424399:	jb     0x42439d
  42439b:	mov    al,0xb
  42439d:	push   eax
  42439e:	mov    esi,DWORD PTR [ebp-0x4]
  4243a1:	sub    esi,DWORD PTR [ebp-0x24]
  4243a4:	cmp    esi,DWORD PTR [ebp+0x24]
  4243a7:	jb     0x42457e
  4243ad:	lods   al,BYTE PTR ds:[esi]
  4243ae:	mov    edi,DWORD PTR [ebp-0x4]
  4243b1:	stos   BYTE PTR es:[edi],al
  4243b2:	jmp    0x424545
  4243b7:	mov    al,0xd8
  4243b9:	call   0x4245b7
  4243be:	mov    esi,DWORD PTR [ebp-0x28]
  4243c1:	je     0x4243de
  4243c3:	mov    al,0xe4
  4243c5:	call   0x4245b7
  4243ca:	mov    esi,DWORD PTR [ebp-0x2c]
  4243cd:	je     0x4243d8
  4243cf:	mov    esi,DWORD PTR [ebp-0x30]
  4243d2:	mov    ecx,DWORD PTR [ebp-0x2c]
  4243d5:	mov    DWORD PTR [ebp-0x30],ecx
  4243d8:	mov    ecx,DWORD PTR [ebp-0x28]
  4243db:	mov    DWORD PTR [ebp-0x2c],ecx
  4243de:	mov    ecx,DWORD PTR [ebp-0x24]
  4243e1:	mov    DWORD PTR [ebp-0x28],ecx
  4243e4:	mov    DWORD PTR [ebp-0x24],esi
  4243e7:	pop    eax
  4243e8:	pop    edi
  4243e9:	pop    ecx
  4243ea:	mov    edx,0xa68
  4243ef:	mov    cl,0x8
  4243f1:	add    edx,edi
  4243f3:	push   edx
  4243f4:	push   edi
  4243f5:	cmp    al,0x7
  4243f7:	mov    al,cl
  4243f9:	jb     0x4243fd
  4243fb:	add    al,0x3
  4243fd:	push   eax
  4243fe:	mov    ebp,DWORD PTR [ebp-0x34]
  424401:	call   0x4245c4
  424406:	jne    0x42441c
  424408:	mov    eax,DWORD PTR [ebp-0x18]
  42440b:	mov    edi,DWORD PTR [ebp-0x34]
  42440e:	shl    eax,0x3
  424411:	sub    ecx,ecx
  424413:	push   0x8
  424415:	pop    esi
  424416:	lea    edi,[edi+eax*2+0x4]
  42441a:	jmp    0x424451
  42441c:	mov    ebp,DWORD PTR [ebp-0x34]
  42441f:	add    ebp,0x2
  424422:	call   0x4245c4
  424427:	jne    0x424441
  424429:	mov    eax,DWORD PTR [ebp-0x18]
  42442c:	mov    edi,DWORD PTR [ebp-0x34]
  42442f:	shl    eax,0x3
  424432:	push   0x8
  424434:	pop    ecx
  424435:	push   0x8
  424437:	pop    esi
  424438:	lea    edi,[edi+eax*2+0x104]
  42443f:	jmp    0x424451
  424441:	mov    edi,0x204
  424446:	add    edi,DWORD PTR [ebp-0x34]
  424449:	push   0x10
  42444b:	pop    ecx
  42444c:	mov    esi,0x100
  424451:	mov    DWORD PTR [ebp-0x1c],ecx
  424454:	sub    eax,eax
  424456:	inc    eax
  424457:	mov    ebp,edi
  424459:	call   0x4245c6
  42445e:	mov    ecx,eax
  424460:	sub    ecx,esi
  424462:	jb     0x424457
  424464:	add    DWORD PTR [ebp-0x1c],ecx
  424467:	cmp    DWORD PTR [ebp-0x3c],0x4
  42446b:	jae    0x424521
  424471:	add    DWORD PTR [ebp-0x3c],0x7
  424475:	mov    ecx,DWORD PTR [ebp-0x1c]
  424478:	cmp    ecx,0x4
  42447b:	jb     0x424480
  42447d:	push   0x3
  42447f:	pop    ecx
  424480:	mov    edi,DWORD PTR [ebp-0x38]
  424483:	shl    ecx,0x6
  424486:	sub    eax,eax
  424488:	inc    eax
  424489:	push   0x40
  42448b:	pop    esi
  42448c:	lea    edi,[edi+ecx*2+0x360]
  424493:	mov    ebp,edi
  424495:	call   0x4245c6
  42449a:	mov    ecx,eax
  42449c:	sub    ecx,esi
  42449e:	jb     0x424493
  4244a0:	mov    DWORD PTR [ebp-0x18],ecx
  4244a3:	mov    DWORD PTR [ebp-0x24],ecx
  4244a6:	cmp    ecx,0x4
  4244a9:	jb     0x42451e
  4244ab:	mov    esi,ecx
  4244ad:	and    DWORD PTR [ebp-0x24],0x1
  4244b1:	shr    esi,1
  4244b3:	or     DWORD PTR [ebp-0x24],0x2
  4244b7:	dec    esi
  4244b8:	cmp    ecx,0xe
  4244bb:	jae    0x4244d6
  4244bd:	mov    eax,0x2af
  4244c2:	sub    eax,ecx
  4244c4:	mov    ecx,esi
  4244c6:	shl    BYTE PTR [ebp-0x24],cl
  4244c9:	add    eax,DWORD PTR [ebp-0x24]
  4244cc:	shl    eax,1
  4244ce:	add    eax,DWORD PTR [ebp-0x38]
  4244d1:	mov    DWORD PTR [ebp-0x34],eax
  4244d4:	jmp    0x424503
  4244d6:	sub    esi,0x4
  4244d9:	call   0x424583
  4244de:	shr    ebx,1
  4244e0:	shl    DWORD PTR [ebp-0x24],1
  4244e3:	cmp    DWORD PTR [ebp-0x20],ebx
  4244e6:	jb     0x4244ee
  4244e8:	inc    DWORD PTR [ebp-0x24]
  4244eb:	sub    DWORD PTR [ebp-0x20],ebx
  4244ee:	dec    esi
  4244ef:	jne    0x4244d9
  4244f1:	mov    eax,0x644
  4244f6:	add    eax,DWORD PTR [ebp-0x38]
  4244f9:	mov    DWORD PTR [ebp-0x34],eax
  4244fc:	shl    DWORD PTR [ebp-0x24],0x4
  424500:	push   0x4
  424502:	pop    esi
  424503:	sub    edi,edi
  424505:	inc    edi
  424506:	mov    eax,edi
  424508:	mov    ebp,DWORD PTR [ebp-0x34]
  42450b:	call   0x4245c6
  424510:	test   al,0x1
  424512:	je     0x424517
  424514:	or     DWORD PTR [ebp-0x24],edi
  424517:	shl    edi,1
  424519:	dec    esi
  42451a:	jne    0x424508
  42451c:	jmp    0x42451e
  42451e:	inc    DWORD PTR [ebp-0x24]
  424521:	mov    ecx,DWORD PTR [ebp-0x1c]
  424524:	add    ecx,0x2
  424527:	mov    edi,DWORD PTR [ebp-0x4]
  42452a:	mov    eax,edi
  42452c:	sub    eax,DWORD PTR [ebp+0x24]
  42452f:	cmp    DWORD PTR [ebp-0x24],eax
  424532:	ja     0x42457e
  424534:	mov    esi,edi
  424536:	sub    esi,DWORD PTR [ebp-0x24]
  424539:	mov    edx,DWORD PTR [ebp+0x28]
  42453c:	lods   al,BYTE PTR ds:[esi]
  42453d:	stos   BYTE PTR es:[edi],al
  42453e:	cmp    edi,edx
  424540:	jae    0x424545
  424542:	dec    ecx
  424543:	jne    0x42453c
  424545:	mov    DWORD PTR [ebp-0x4],edi
  424548:	movzx  esi,al
  42454b:	cmp    edi,DWORD PTR [ebp+0x28]
  42454e:	jb     0x4242af
  424554:	call   0x424583
  424559:	sub    eax,eax
  42455b:	lea    ebp,[esp+0x3c]
  42455f:	mov    edx,DWORD PTR [ebp+0x20]
  424562:	mov    esi,DWORD PTR [ebp-0x8]
  424565:	sub    esi,DWORD PTR [ebp+0x18]
  424568:	mov    DWORD PTR [edx],esi
  42456a:	mov    edx,DWORD PTR [ebp+0x2c]
  42456d:	mov    edi,DWORD PTR [ebp-0x4]
  424570:	sub    edi,DWORD PTR [ebp+0x24]
  424573:	mov    DWORD PTR [edx],edi
  424575:	leave  
  424576:	pop    ebx
  424577:	pop    esi
  424578:	pop    edi
  424579:	ret    0x1c
  42457c:	pop    esi
  42457d:	pop    eax
  42457e:	sub    eax,eax
  424580:	inc    eax
  424581:	jmp    0x42455b
  424583:	cmp    ebx,0x1000000
  424589:	jb     0x42458c
  42458b:	ret    
  42458c:	shl    ebx,0x8
  42458f:	push   esi
  424590:	mov    esi,DWORD PTR [ebp-0x8]
  424593:	cmp    esi,DWORD PTR [ebp+0x1c]
  424596:	jae    0x42457c
  424598:	mov    eax,DWORD PTR [ebp-0x20]
  42459b:	shl    eax,0x8
  42459e:	lods   al,BYTE PTR ds:[esi]
  42459f:	mov    DWORD PTR [ebp-0x20],eax
  4245a2:	mov    DWORD PTR [ebp-0x8],esi
  4245a5:	sbb    BYTE PTR [edi+0x6bbe29f7],bh
  4245ab:	sar    BYTE PTR [edx+0x7f7e9dbd],0x31
  4245b2:	xchg   edx,eax
  4245b3:	jg     0x424572
  4245b5:	xchg   edi,eax
  4245b6:	jo     0x424623
  4245b8:	sar    BYTE PTR [edx-0x841ce81],0x9
  4245bf:	mov    dl,0xe9
  4245c1:	push   ss
  4245c2:	xor    DWORD PTR [edx+0x57],edi
  4245c5:	mov    edx,0x7a3116e9
  4245ca:	std    
  4245cb:	xchg   DWORD PTR [edx+0x7a],edi
  4245ce:	jp     0x42464d
  4245d0:	pcmpgtd mm6,mm7
  4245d3:	ss pop esi
  4245d5:	inc    edx
  4245d6:	mov    ebp,0x725a5e1e
  4245db:	inc    edi
  4245dc:	ss pop esi
  4245de:	es (bad) 
  4245e1:	hlt    
  4245e2:	ins    DWORD PTR es:[edi],dx
  4245e3:	jnp    0x424623
  4245e5:	pop    esi
  4245e6:	inc    edx
  4245e7:	mov    ebp,0x2ef2729f
  4245ec:	pop    esi
  4245ed:	pop    edx
  4245ee:	div    DWORD PTR [edi+0x7a21c36b]
  4245f4:	mov    ebp,0xcb6b7795
  4245f9:	mov    ah,0x45
  4245fb:	ss pop esi
  4245fd:	pop    edx
  4245fe:	packsswb mm6,mm7
  424601:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424602:	lds    edi,FWORD PTR [edx+0x72]
  424605:	jp     0x424681
  424607:	push   edi
  424608:	mov    ah,0xbd
  42460a:	xchg   ebp,eax
  42460b:	jno    0x42461d
  42460d:	jge    0x424638
  42460f:	jp     0x424690
  424611:	mov    edx,0x3a5e16e9
  424616:	mov    edi,0x557194bd
  42461b:	ss pop esi
  42461d:	pop    edx
  42461e:	push   edi
  42461f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424620:	adc    BYTE PTR [ebp+0x21],dl
  424623:	jp     0x4246a4
  424625:	mov    edx,0xe97dbaff
  42462a:	push   ss
  42462b:	pop    esi
  42462c:	cmp    bh,BYTE PTR [edi-0x26908df]
  424632:	xchg   esi,eax
  424633:	push   esi
  424634:	jge    0x4246b0
  424636:	jp     0x424667
  424638:	and    BYTE PTR [ebx],ah
  42463a:	mov    bl,0x31
  42463c:	mov    cl,dl
  42463e:	icebp  
  42463f:	out    0x82,al
  424641:	mov    bl,0x31
  424643:	xchg   edx,eax
  424644:	int    0xf1
  424646:	out    0x82,al
  424648:	div    DWORD PTR [ecx]
  42464a:	jb     0x424641
  42464c:	xor    DWORD PTR [edx-0x9],esi
  42464f:	sub    DWORD PTR [edx+0x2d72dec7],ecx
  424655:	jae    0x4246a6
  424657:	mov    bh,0xc2
  424659:	xchg   esi,eax
  42465a:	or     al,0x4c
  42465c:	jp     0x4246dd
  42465e:	mov    dl,0xf5
  424660:	sub    DWORD PTR [esi+0x4f8a29f7],ebp
  424666:	mov    bh,0x7f
  424668:	mov    dl,0xf5
  42466a:	sub    DWORD PTR [esi+0x4f8a29f7],edi
  424670:	mov    bh,0x7f
  424672:	mov    dl,0xf5
  424674:	sub    DWORD PTR [edx+0x4f8a29f7],edi
  42467a:	mov    bh,0x7f
  42467c:	mov    dl,0xf5
  42467e:	jmp    0x7bbdc1d5
  424683:	mov    bl,0x31
  424685:	retf   0x71ca
  424688:	fild   DWORD PTR [edx-0x3545ce4d]
  42468e:	shl    esi,0x82
  424691:	mov    bl,0x31
  424693:	(bad)  
  424694:	(bad)  
  424695:	icebp  
  424696:	out    0x82,al
  424698:	adc    al,0x51
  42469a:	and    eax,0xf5b229f5
  42469f:	sub    DWORD PTR [edx-0xadaeeec],esi
  4246a5:	sub    DWORD PTR [edx-0x4c4dd60b],esi
  4246ab:	xor    DWORD PTR [edx+0x7a7a7a29],esi
  4246b1:	mov    bl,0x31
  4246b3:	mov    dl,0x3f
  4246b5:	jp     0x424731
  4246b7:	jp     0x4246b0
  4246b9:	sub    DWORD PTR [edx-0x4d8048b1],ecx
  4246bf:	cmc    
  4246c0:	sub    DWORD PTR [edx+0x4f8a29f7],esi
  4246c6:	mov    bh,0x7f
  4246c8:	mov    dl,0xf5
  4246ca:	sub    DWORD PTR [edx+0x22a231b3],esi
  4246d0:	jl     0x42474c
  4246d2:	jp     0x424687
  4246d4:	xor    DWORD PTR [edx+0x7a7a7a40],ebx
  4246da:	mov    bl,0x31
  4246dc:	xchg   esi,eax
  4246dd:	add    al,0x7a
  4246df:	jp     0x42475b
  4246e1:	jmp    0x7bbad59f
  4246e6:	jnp    0x4246d1
  4246e8:	shr    DWORD PTR [esi-0x6d848488],0xb9
  4246ef:	jbe    0x42476b
  4246f1:	jp     0x42476e
  4246f3:	sub    DWORD PTR [esi+0x297b9401],edx
  4246f9:	call   0x1a2:0x297b9801
  424700:	lods   al,BYTE PTR ds:[esi]
  424701:	mov    bl,0x31
  424703:	mov    ds:0x7a7a3a68,al
  424708:	div    DWORD PTR [ecx]
  42470a:	mov    cl,BYTE PTR [edi-0x41]
  42470d:	mov    eax,0x7a4c0c96
  424712:	jg     0x4246c4
  424714:	cmc    
  424715:	xor    DWORD PTR [esi-0x75ce09],ebx
  42471b:	rcl    DWORD PTR [esi],1
  42471d:	jnp    0x42479a
  42471f:	jnp    0x42479b
  424721:	dec    edi
  424722:	mov    edi,0x31f5b07f
  424727:	mov    dh,0x1e
  424729:	frstor [edx+0x7a]
  42472c:	jp     0x4247a8
  42472e:	cmc    
  42472f:	icebp  
  424730:	push   ss
  424731:	jnp    0x4247ae
  424733:	jnp    0x42472c
  424735:	cmp    cl,BYTE PTR [edx-0xb]
  424738:	icebp  
  424739:	dec    esi
  42473a:	jnp    0x4247b7
  42473c:	jnp    0x424735
  42473e:	cmp    dh,BYTE PTR [esi-0xb]
  424741:	icebp  
  424742:	cmp    bh,BYTE PTR [ebx+0x7b]
  424745:	jnp    0x42473e
  424747:	xor    DWORD PTR [edx-0x17],esi
  42474a:	jmp    0x7bbdc265
  42474f:	cmc    
  424750:	repnz fidivr DWORD PTR [ebp+0x7a]
  424754:	jp     0x42474d
  424756:	xor    DWORD PTR [edx-0x17],esi
  424759:	jmp    0x7bbdc2ac
  42475e:	cmc    
  42475f:	repnz fidivr WORD PTR [ebp+0x7a]
  424763:	jp     0x42475c
  424765:	xor    DWORD PTR [edx+0x7b],esi
  424768:	add    DWORD PTR [edx-0x17],esi
  42476b:	jmp    0x7bbdc2aa
  424770:	cmc    
  424771:	repnz sar BYTE PTR [ebp+0x7a],cl
  424775:	jp     0x424709
  424777:	test   DWORD PTR [edi+0x7a],ebx
  42477a:	jp     0x424773
  42477c:	sub    DWORD PTR [edx-0x578048b1],ecx
  424782:	inc    edi
  424783:	mov    dl,0x6b
  424785:	(bad)  
  424786:	stc    
  424787:	jg     0x424803
  424789:	jp     0x424782
  42478b:	xor    DWORD PTR [edx-0x9],esi
  42478e:	cli    
  42478f:	out    dx,al
  424790:	jge    0x42480c
  424792:	jp     0x42478b
  424794:	jb     0x42478d
  424796:	xor    DWORD PTR [edx-0x9],esi
  424799:	cli    
  42479a:	out    dx,al
  42479b:	jge    0x424817
  42479d:	jp     0x424796
  42479f:	jp     0x424820
  4247a1:	cmp    eax,0x829f746
  4247a6:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4247ac:	lea    edx,[ebp-0xec]
  4247b2:	push   edx
  4247b3:	mov    edx,DWORD PTR [ebp+0x8]
  4247b6:	mov    edx,DWORD PTR [edx+0x18c]
  4247bc:	mov    edx,DWORD PTR [edx]
  4247be:	add    edx,DWORD PTR [eax+0x88]
  4247c4:	push   0x4
  4247c6:	push   DWORD PTR [eax+0x8c]
  4247cc:	push   edx
  4247cd:	call   DWORD PTR [ecx+0x1c]
  4247d0:	push   DWORD PTR [ebp+0x8]
  4247d3:	xor    eax,eax
  4247d5:	mov    DWORD PTR [ebp-0xa8],0x123f0f35
  4247df:	mov    DWORD PTR [ebp-0xa4],0xb360c1d
  4247e9:	mov    DWORD PTR [ebp-0xa0],0x3d0c1103
  4247f3:	mov    BYTE PTR [ebp-0x9c],0x7a
  4247fa:	lea    edi,[ebp-0x9b]
  424800:	stos   DWORD PTR es:[edi],eax
  424801:	stos   WORD PTR es:[edi],ax
  424803:	stos   BYTE PTR es:[edi],al
  424804:	xor    eax,eax
  424806:	mov    DWORD PTR [ebp-0xbc],0x123f0f35
  424810:	mov    DWORD PTR [ebp-0xb8],0xb360c1d
  42481a:	mov    DWORD PTR [ebp-0xb4],0x230c1103
  424824:	mov    BYTE PTR [ebp-0xb0],0x7a
  42482b:	lea    edi,[ebp-0xaf]
  424831:	stos   DWORD PTR es:[edi],eax
  424832:	stos   WORD PTR es:[edi],ax
  424834:	stos   BYTE PTR es:[edi],al
  424835:	mov    edi,DWORD PTR [ebp+0x8]
  424838:	mov    eax,DWORD PTR [ebp+0x8]
  42483b:	mov    edx,DWORD PTR [eax+0x1b8]
  424841:	mov    DWORD PTR [ebp-0x68],0xc0e0f16
  424848:	mov    DWORD PTR [ebp-0x64],0x150a091f
  42484f:	mov    WORD PTR [ebp-0x60],0x7a3d
  424855:	mov    DWORD PTR [ebp-0x90],0x123f0f35
  42485f:	mov    DWORD PTR [ebp-0x8c],0x163d0c1d
  424869:	mov    DWORD PTR [ebp-0x88],0x281d120a
  424873:	mov    DWORD PTR [ebp-0x84],0xc110901
  42487d:	mov    DWORD PTR [ebp-0x80],0x7a3d1f15
  424884:	mov    DWORD PTR [ebp-0x7c],0x123f0f35
  42488b:	mov    DWORD PTR [ebp-0x78],0x163d0c1d
  424892:	mov    DWORD PTR [ebp-0x74],0x281d120a
  424899:	mov    DWORD PTR [ebp-0x70],0xc110901
  4248a0:	mov    DWORD PTR [ebp-0x6c],0x7a231f15
  4248a7:	call   0x426ba3
  4248ac:	push   eax
  4248ad:	mov    eax,DWORD PTR [ebp+0x8]
  4248b0:	mov    eax,DWORD PTR [eax+0x1a8]
  4248b6:	push   DWORD PTR [eax]
  4248b8:	call   0x426844
  4248bd:	test   eax,eax
  4248bf:	jne    0x424911
  4248c1:	mov    eax,DWORD PTR [ebp+0x8]
  4248c4:	mov    eax,DWORD PTR [eax+0x1d8]
  4248ca:	mov    edi,DWORD PTR [ebp+0x8]
  4248cd:	add    eax,0x4
  4248d0:	mov    DWORD PTR [ebp-0x24],eax
  4248d3:	mov    eax,DWORD PTR [ebp+0x8]
  4248d6:	mov    edx,DWORD PTR [eax+0x1b8]
  4248dc:	call   0x426ba3
  4248e1:	push   eax
  4248e2:	mov    eax,DWORD PTR [ebp-0x24]
  4248e5:	call   DWORD PTR [eax]
  4248e7:	test   eax,eax
  4248e9:	jne    0x424911
  4248eb:	mov    eax,DWORD PTR [ebp+0x8]
  4248ee:	mov    eax,DWORD PTR [eax+0x1d8]
  4248f4:	mov    edi,DWORD PTR [ebp+0x8]
  4248f7:	add    eax,0x10
  4248fa:	mov    DWORD PTR [ebp-0x24],eax
  4248fd:	mov    eax,DWORD PTR [ebp+0x8]
  424900:	mov    edx,DWORD PTR [eax+0x1b8]
  424906:	call   0x426ba3
  42490b:	push   eax
  42490c:	mov    eax,DWORD PTR [ebp-0x24]
  42490f:	call   DWORD PTR [eax]
  424911:	mov    eax,DWORD PTR [ebp-0x10]
  424914:	mov    ecx,DWORD PTR [ebp-0x28]
  424917:	xor    eax,ebx
  424919:	add    eax,esi
  42491b:	cmp    eax,ecx
  42491d:	je     0x424ae0
  424923:	mov    eax,DWORD PTR [ebp-0x18]
  424926:	xor    eax,ebx
  424928:	mov    ecx,0xffcd8d14
  42492d:	sub    ecx,eax
  42492f:	add    ecx,DWORD PTR [ebp-0x28]
  424932:	mov    eax,DWORD PTR [ebp-0x1c]
  424935:	cmp    eax,ecx
  424937:	ja     0x424ae0
  42493d:	mov    DWORD PTR [ebp-0x20],0x0
  424944:	push   DWORD PTR [ebp+0x8]
  424947:	mov    edi,DWORD PTR [ebp+0x8]
  42494a:	mov    eax,DWORD PTR [ebp+0x8]
  42494d:	mov    edx,DWORD PTR [eax+0x1b4]
  424953:	call   0x426ba3
  424958:	push   eax
  424959:	mov    eax,DWORD PTR [ebp+0x8]
  42495c:	mov    eax,DWORD PTR [eax+0x1a8]
  424962:	push   DWORD PTR [eax]
  424964:	call   0x426844
  424969:	mov    ecx,DWORD PTR [ebp+0x8]
  42496c:	mov    ecx,DWORD PTR [ecx+0x19c]
  424972:	mov    DWORD PTR [ecx],eax
  424974:	mov    eax,DWORD PTR [ebp+0x8]
  424977:	mov    edi,DWORD PTR [eax+0x1d8]
  42497d:	mov    esi,DWORD PTR [ebp+0x8]
  424980:	xor    eax,eax
  424982:	lea    edx,[ebp-0x7c]
  424985:	call   0x426bd9
  42498a:	push   eax
  42498b:	mov    eax,DWORD PTR [ebp+0x8]
  42498e:	mov    eax,DWORD PTR [eax+0x19c]
  424994:	push   DWORD PTR [eax]
  424996:	call   DWORD PTR [edi+0x8]
  424999:	mov    DWORD PTR [ebp-0x24],eax
  42499c:	mov    eax,DWORD PTR [ebp+0x8]
  42499f:	mov    edi,DWORD PTR [eax+0x1d8]
  4249a5:	mov    esi,DWORD PTR [ebp+0x8]
  4249a8:	xor    eax,eax
  4249aa:	lea    edx,[ebp-0x90]
  4249b0:	call   0x426bd9
  4249b5:	push   eax
  4249b6:	mov    eax,DWORD PTR [ebp+0x8]
  4249b9:	mov    eax,DWORD PTR [eax+0x19c]
  4249bf:	push   DWORD PTR [eax]
  4249c1:	call   DWORD PTR [edi+0x8]
  4249c4:	mov    eax,DWORD PTR [ebp+0x8]
  4249c7:	mov    edi,DWORD PTR [eax+0x1d8]
  4249cd:	mov    esi,DWORD PTR [ebp+0x8]
  4249d0:	xor    eax,eax
  4249d2:	lea    edx,[ebp-0xa8]
  4249d8:	call   0x426bd9
  4249dd:	push   eax
  4249de:	mov    eax,DWORD PTR [ebp+0x8]
  4249e1:	mov    eax,DWORD PTR [eax+0x19c]
  4249e7:	push   DWORD PTR [eax]
  4249e9:	call   DWORD PTR [edi+0x8]
  4249ec:	and    DWORD PTR [ebp-0x8],0x0
  4249f0:	mov    DWORD PTR [ebp-0x44],eax
  4249f3:	mov    eax,DWORD PTR [ebp-0x8]
  4249f6:	and    eax,0x7
  4249f9:	add    eax,0x31
  4249fc:	push   eax
  4249fd:	call   DWORD PTR [ebp-0x24]
  424a00:	test   eax,eax
  424a02:	je     0x424a46
  424a04:	mov    eax,DWORD PTR [ebp-0x8]
  424a07:	push   0x19
  424a09:	xor    edx,edx
  424a0b:	pop    ecx
  424a0c:	div    ecx
  424a0e:	add    dl,0x41
  424a11:	movzx  eax,dl
  424a14:	push   eax
  424a15:	call   DWORD PTR [ebp-0x44]
  424a18:	test   eax,eax
  424a1a:	jne    0x424a46
  424a1c:	mov    eax,DWORD PTR [ebp+0x8]
  424a1f:	mov    edi,DWORD PTR [eax+0x1d8]
  424a25:	mov    esi,DWORD PTR [ebp+0x8]
  424a28:	xor    eax,eax
  424a2a:	lea    edx,[ebp-0x68]
  424a2d:	call   0x426bd9
  424a32:	push   eax
  424a33:	mov    eax,DWORD PTR [ebp+0x8]
  424a36:	mov    eax,DWORD PTR [eax+0x198]
  424a3c:	push   DWORD PTR [eax]
  424a3e:	call   DWORD PTR [edi+0x8]
  424a41:	mov    DWORD PTR [ebp-0x14],eax
  424a44:	jmp    0x424a4a
  424a46:	and    DWORD PTR [ebp-0x14],0x0
  424a4a:	inc    DWORD PTR [ebp-0x8]
  424a4d:	cmp    DWORD PTR [ebp-0x8],0x10
  424a51:	jb     0x4249f3
  424a53:	mov    eax,DWORD PTR [ebp-0x18]
  424a56:	mov    esi,DWORD PTR [ebp+0x8]
  424a59:	xor    eax,ebx
  424a5b:	mov    edi,0x3272ec
  424a60:	add    eax,edi
  424a62:	lea    edx,[ebp-0x10c]
  424a68:	call   0x426bd9
  424a6d:	push   eax
  424a6e:	mov    eax,DWORD PTR [ebp-0x10]
  424a71:	mov    esi,DWORD PTR [ebp+0x8]
  424a74:	xor    eax,ebx
  424a76:	add    eax,edi
  424a78:	lea    edx,[ebp-0x12c]
  424a7e:	call   0x426bd9
  424a83:	push   eax
  424a84:	call   DWORD PTR [ebp-0x14]
  424a87:	mov    ecx,DWORD PTR [ebp-0x10]
  424a8a:	xor    ecx,ebx
  424a8c:	add    ecx,edi
  424a8e:	cmp    ecx,eax
  424a90:	jne    0x424a99
  424a92:	mov    DWORD PTR [ebp-0x20],0x1
  424a99:	mov    eax,DWORD PTR [ebp-0x18]
  424a9c:	mov    ecx,DWORD PTR [ebp-0x1c]
  424a9f:	xor    eax,ebx
  424aa1:	lea    eax,[eax+ecx*1+0x3272ec]
  424aa8:	mov    DWORD PTR [ebp-0x1c],eax
  424aab:	mov    eax,DWORD PTR [ebp-0x20]
  424aae:	test   eax,eax
  424ab0:	je     0x424ac4
  424ab2:	mov    eax,DWORD PTR [ebp-0x18]
  424ab5:	mov    ecx,DWORD PTR [ebp-0x34]
  424ab8:	xor    eax,ebx
  424aba:	lea    eax,[eax+ecx*1+0x3272ec]
  424ac1:	mov    DWORD PTR [ebp-0x34],eax
  424ac4:	mov    eax,DWORD PTR [ebp-0x18]
  424ac7:	xor    eax,ebx
  424ac9:	mov    ecx,0xffcd8d14
  424ace:	sub    ecx,eax
  424ad0:	add    ecx,DWORD PTR [ebp-0x28]
  424ad3:	mov    eax,DWORD PTR [ebp-0x1c]
  424ad6:	cmp    eax,ecx
  424ad8:	jbe    0x42493d
  424ade:	mov    esi,edi
  424ae0:	mov    eax,DWORD PTR [ebp-0x34]
  424ae3:	mov    ecx,DWORD PTR [ebp-0x1c]
  424ae6:	cmp    ecx,eax
  424ae8:	jne    0x424afb
  424aea:	push   DWORD PTR [ebp+0x8]
  424aed:	lea    eax,[ebp-0x3c]
  424af0:	push   eax
  424af1:	call   0x427649
  424af6:	mov    DWORD PTR [ebp-0x2c],eax
  424af9:	jmp    0x424b07
  424afb:	mov    eax,DWORD PTR [ebp-0x2c]
  424afe:	mov    ecx,DWORD PTR [ebp-0x18]
  424b01:	xor    ecx,ebx
  424b03:	add    ecx,esi
  424b05:	xor    DWORD PTR [eax],ecx
  424b07:	mov    eax,DWORD PTR [ebp-0x10]
  424b0a:	mov    ecx,DWORD PTR [ebp-0x2c]
  424b0d:	xor    eax,ebx
  424b0f:	add    eax,esi
  424b11:	cmp    eax,ecx
  424b13:	je     0x42528d
  424b19:	mov    eax,DWORD PTR [ebp-0x10]
  424b1c:	mov    ecx,DWORD PTR [ebp-0x3c]
  424b1f:	xor    eax,ebx
  424b21:	add    eax,esi
  424b23:	cmp    eax,ecx
  424b25:	je     0x42528d
  424b2b:	mov    eax,DWORD PTR [ebp-0x10]
  424b2e:	xor    eax,ebx
  424b30:	add    eax,esi
  424b32:	jmp    0x424b50
  424b34:	mov    edi,DWORD PTR [ebp-0x2c]
  424b37:	mov    cl,al
  424b39:	and    cl,0x1f
  424b3c:	or     dl,0xff
  424b3f:	sub    dl,cl
  424b41:	add    BYTE PTR [edi+eax*1],dl
  424b44:	mov    ecx,DWORD PTR [ebp-0x18]
  424b47:	xor    ecx,ebx
  424b49:	lea    eax,[eax+ecx*1+0x3272ec]
  424b50:	mov    ecx,DWORD PTR [ebp-0x3c]
  424b53:	cmp    eax,ecx
  424b55:	jb     0x424b34
  424b57:	mov    eax,DWORD PTR [ebp-0x3c]
  424b5a:	mov    DWORD PTR [ebp-0x28],eax
  424b5d:	mov    eax,DWORD PTR [ebp-0x2c]
  424b60:	mov    DWORD PTR [ebp-0x34],0xf89c85b0
  424b67:	mov    DWORD PTR [ebp-0xd4],eax
  424b6d:	mov    edi,0xf89c85b1
  424b72:	mov    DWORD PTR [ebp-0x30],edi
  424b75:	mov    eax,DWORD PTR [ebp-0x34]
  424b78:	xor    eax,ebx
  424b7a:	add    eax,esi
  424b7c:	mov    DWORD PTR [ebp-0xc],eax
  424b7f:	mov    eax,DWORD PTR [ebp-0x34]
  424b82:	xor    eax,ebx
  424b84:	add    eax,esi
  424b86:	mov    DWORD PTR [ebp-0x8],eax
  424b89:	mov    DWORD PTR [ebp-0x44],0xf89c8590
  424b90:	mov    DWORD PTR [ebp-0x4c],0xf89c85bf
  424b97:	mov    eax,DWORD PTR [ebp-0x34]
  424b9a:	mov    ecx,DWORD PTR [ebp-0x28]
  424b9d:	xor    eax,ebx
  424b9f:	add    eax,esi
  424ba1:	cmp    ecx,eax
  424ba3:	je     0x424da2
  424ba9:	jmp    0x424d7e
  424bae:	mov    ecx,DWORD PTR [ebp-0xc]
  424bb1:	mov    eax,DWORD PTR [ebp-0x28]
  424bb4:	sub    eax,ecx
  424bb6:	mov    ecx,DWORD PTR [ebp-0x44]
  424bb9:	xor    ecx,ebx
  424bbb:	add    ecx,esi
  424bbd:	xor    edx,edx
  424bbf:	div    ecx
  424bc1:	mov    DWORD PTR [ebp-0x8],eax
  424bc4:	mov    eax,DWORD PTR [ebp-0x4c]
  424bc7:	mov    ecx,DWORD PTR [ebp-0x8]
  424bca:	xor    eax,ebx
  424bcc:	add    eax,esi
  424bce:	cmp    ecx,eax
  424bd0:	jbe    0x424bdc
  424bd2:	mov    eax,DWORD PTR [ebp-0x4c]
  424bd5:	xor    eax,ebx
  424bd7:	add    eax,esi
  424bd9:	mov    DWORD PTR [ebp-0x8],eax
  424bdc:	mov    eax,DWORD PTR [ebp-0x44]
  424bdf:	mov    ecx,DWORD PTR [ebp-0x8]
  424be2:	xor    eax,ebx
  424be4:	add    eax,esi
  424be6:	imul   eax,ecx
  424be9:	mov    DWORD PTR [ebp-0x8],eax
  424bec:	mov    eax,DWORD PTR [ebp-0x34]
  424bef:	mov    ecx,DWORD PTR [ebp-0x8]
  424bf2:	xor    eax,ebx
  424bf4:	add    eax,esi
  424bf6:	cmp    ecx,eax
  424bf8:	je     0x424d6c
  424bfe:	mov    eax,DWORD PTR [ebp-0x8]
  424c01:	mov    DWORD PTR [ebp-0x14],eax
  424c04:	mov    eax,DWORD PTR [ebp-0xc]
  424c07:	add    eax,DWORD PTR [ebp-0xd4]
  424c0d:	mov    DWORD PTR [ebp-0x24],0xf89c85b0
  424c14:	mov    DWORD PTR [ebp-0x20],edi
  424c17:	mov    DWORD PTR [ebp-0xe8],0xf89c85b2
  424c21:	mov    DWORD PTR [ebp-0x8],eax
  424c24:	mov    DWORD PTR [ebp-0x38],0xf89c85b3
  424c2b:	mov    DWORD PTR [ebp-0x1c],edi
  424c2e:	mov    eax,DWORD PTR [ebp-0x24]
  424c31:	xor    eax,ebx
  424c33:	add    eax,esi
  424c35:	jmp    0x424d2b
  424c3a:	mov    DWORD PTR [ebp-0xe0],0xf89c85bb
  424c44:	mov    DWORD PTR [ebp-0xc4],0xf89c858e
  424c4e:	mov    eax,DWORD PTR [ebp-0x1c]
  424c51:	mov    ecx,DWORD PTR [ebp-0x48]
  424c54:	xor    eax,ebx
  424c56:	add    eax,esi
  424c58:	imul   eax,ecx
  424c5b:	mov    ecx,DWORD PTR [ebp-0x8]
  424c5e:	mov    al,BYTE PTR [eax+ecx*1]
  424c61:	mov    BYTE PTR [ebp-0x2],al
  424c64:	mov    eax,DWORD PTR [ebp-0x1c]
  424c67:	mov    ecx,DWORD PTR [ebp-0x48]
  424c6a:	xor    eax,ebx
  424c6c:	add    eax,esi
  424c6e:	imul   eax,ecx
  424c71:	mov    ecx,DWORD PTR [ebp-0xe8]
  424c77:	xor    ecx,ebx
  424c79:	add    eax,ecx
  424c7b:	mov    ecx,DWORD PTR [ebp-0x8]
  424c7e:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  424c86:	mov    ecx,DWORD PTR [ebp-0xe0]
  424c8c:	xor    ecx,ebx
  424c8e:	lea    eax,[ecx+eax*1+0x3272ec]
  424c95:	movzx  ecx,BYTE PTR [ebp-0x2]
  424c99:	xor    ecx,eax
  424c9b:	mov    BYTE PTR [ebp-0x2],cl
  424c9e:	mov    al,BYTE PTR [ebp-0x2]
  424ca1:	mov    ecx,DWORD PTR [ebp-0x1c]
  424ca4:	mov    edx,DWORD PTR [ebp-0x48]
  424ca7:	xor    ecx,ebx
  424ca9:	add    ecx,esi
  424cab:	imul   ecx,edx
  424cae:	mov    edx,DWORD PTR [ebp-0x8]
  424cb1:	mov    BYTE PTR [ecx+edx*1],al
  424cb4:	mov    eax,DWORD PTR [ebp-0x1c]
  424cb7:	mov    ecx,DWORD PTR [ebp-0x48]
  424cba:	xor    eax,ebx
  424cbc:	add    eax,esi
  424cbe:	imul   eax,ecx
  424cc1:	mov    ecx,DWORD PTR [ebp-0x8]
  424cc4:	mov    al,BYTE PTR [eax+ecx*1]
  424cc7:	mov    BYTE PTR [ebp-0x2],al
  424cca:	mov    eax,DWORD PTR [ebp-0x1c]
  424ccd:	mov    ecx,DWORD PTR [ebp-0x48]
  424cd0:	xor    eax,ebx
  424cd2:	add    eax,esi
  424cd4:	imul   eax,ecx
  424cd7:	mov    ecx,DWORD PTR [ebp-0x20]
  424cda:	xor    ecx,ebx
  424cdc:	add    eax,ecx
  424cde:	mov    ecx,DWORD PTR [ebp-0x8]
  424ce1:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  424ce9:	mov    ecx,DWORD PTR [ebp-0xc4]
  424cef:	xor    ecx,ebx
  424cf1:	lea    eax,[ecx+eax*1+0x3272ec]
  424cf8:	movzx  ecx,BYTE PTR [ebp-0x2]
  424cfc:	xor    ecx,eax
  424cfe:	mov    BYTE PTR [ebp-0x2],cl
  424d01:	mov    al,BYTE PTR [ebp-0x2]
  424d04:	mov    ecx,DWORD PTR [ebp-0x1c]
  424d07:	mov    edx,DWORD PTR [ebp-0x48]
  424d0a:	xor    ecx,ebx
  424d0c:	add    ecx,esi
  424d0e:	imul   ecx,edx
  424d11:	mov    edx,DWORD PTR [ebp-0x8]
  424d14:	mov    BYTE PTR [ecx+edx*1],al
  424d17:	mov    eax,DWORD PTR [ebp-0x38]
  424d1a:	mov    ecx,DWORD PTR [ebp-0x20]
  424d1d:	xor    eax,ebx
  424d1f:	xor    ecx,ebx
  424d21:	add    eax,esi
  424d23:	add    ecx,esi
  424d25:	imul   eax,ecx
  424d28:	add    eax,DWORD PTR [ebp-0x48]
  424d2b:	mov    DWORD PTR [ebp-0x48],eax
  424d2e:	mov    eax,DWORD PTR [ebp-0x48]
  424d31:	mov    ecx,DWORD PTR [ebp-0x14]
  424d34:	cmp    ecx,eax
  424d36:	jb     0x424c3a
  424d3c:	mov    eax,DWORD PTR [ebp-0x20]
  424d3f:	mov    ecx,DWORD PTR [ebp-0x14]
  424d42:	xor    eax,ebx
  424d44:	add    eax,esi
  424d46:	imul   eax,ecx
  424d49:	mov    ecx,DWORD PTR [ebp-0x24]
  424d4c:	xor    ecx,ebx
  424d4e:	add    ecx,esi
  424d50:	or     eax,ecx
  424d52:	mov    ecx,DWORD PTR [ebp-0x30]
  424d55:	xor    ecx,ebx
  424d57:	add    eax,ecx
  424d59:	mov    ecx,DWORD PTR [ebp-0x30]
  424d5c:	xor    ecx,ebx
  424d5e:	add    eax,ecx
  424d60:	mov    ecx,DWORD PTR [ebp-0xc]
  424d63:	lea    eax,[eax+ecx*1+0x64e5d8]
  424d6a:	jmp    0x424d7b
  424d6c:	mov    eax,DWORD PTR [ebp-0x30]
  424d6f:	mov    ecx,DWORD PTR [ebp-0xc]
  424d72:	xor    eax,ebx
  424d74:	lea    eax,[eax+ecx*1+0x3272ec]
  424d7b:	mov    DWORD PTR [ebp-0xc],eax
  424d7e:	mov    eax,DWORD PTR [ebp-0x30]
  424d81:	xor    eax,ebx
  424d83:	mov    ecx,0xffcd8d14
  424d88:	sub    ecx,eax
  424d8a:	add    ecx,DWORD PTR [ebp-0x28]
  424d8d:	mov    eax,DWORD PTR [ebp-0x30]
  424d90:	mov    edx,DWORD PTR [ebp-0xc]
  424d93:	xor    eax,ebx
  424d95:	add    eax,esi
  424d97:	imul   eax,edx
  424d9a:	cmp    eax,ecx
  424d9c:	jbe    0x424bae
  424da2:	mov    eax,DWORD PTR [ebp-0x10]
  424da5:	mov    ecx,DWORD PTR [ebp-0x3c]
  424da8:	mov    eax,DWORD PTR [ebp+0x8]
  424dab:	mov    edx,DWORD PTR [ebp-0x54]
  424dae:	mov    eax,DWORD PTR [eax+0x1d8]
  424db4:	xor    edx,ebx
  424db6:	add    edx,esi
  424db8:	push   edx
  424db9:	mov    edx,DWORD PTR [ebp-0x40]
  424dbc:	xor    edx,ebx
  424dbe:	add    edx,esi
  424dc0:	push   edx
  424dc1:	push   ecx
  424dc2:	mov    DWORD PTR [ebp-0x38],ecx
  424dc5:	mov    ecx,DWORD PTR [ebp-0x10]
  424dc8:	xor    ecx,ebx
  424dca:	add    ecx,esi
  424dcc:	push   ecx
  424dcd:	call   DWORD PTR [eax+0x14]
  424dd0:	mov    edi,eax
  424dd2:	mov    eax,DWORD PTR [ebp-0x10]
  424dd5:	xor    eax,ebx
  424dd7:	add    eax,esi
  424dd9:	cmp    eax,edi
  424ddb:	je     0x424e36
  424ddd:	mov    eax,DWORD PTR [ebp-0x10]
  424de0:	jmp    0x424e03
  424de2:	mov    ecx,DWORD PTR [ebp-0x2c]
  424de5:	xor    eax,ebx
  424de7:	mov    cl,BYTE PTR [ecx+eax*1+0x3272ec]
  424dee:	mov    BYTE PTR [eax+edi*1+0x3272ec],cl
  424df5:	mov    ecx,DWORD PTR [ebp-0x18]
  424df8:	xor    ecx,ebx
  424dfa:	lea    eax,[ecx+eax*1+0x3272ec]
  424e01:	xor    eax,ebx
  424e03:	mov    ecx,DWORD PTR [ebp-0x3c]
  424e06:	sub    ecx,esi
  424e08:	xor    ecx,ebx
  424e0a:	cmp    eax,ecx
  424e0c:	jne    0x424de2
  424e0e:	mov    eax,DWORD PTR [ebp+0x8]
  424e11:	mov    ecx,DWORD PTR [ebp-0x50]
  424e14:	mov    eax,DWORD PTR [eax+0x1d8]
  424e1a:	xor    ecx,ebx
  424e1c:	add    ecx,esi
  424e1e:	push   ecx
  424e1f:	mov    ecx,DWORD PTR [ebp-0x10]
  424e22:	xor    ecx,ebx
  424e24:	add    ecx,esi
  424e26:	push   ecx
  424e27:	push   DWORD PTR [ebp-0x2c]
  424e2a:	call   DWORD PTR [eax+0x18]
  424e2d:	mov    eax,DWORD PTR [ebp-0x38]
  424e30:	mov    DWORD PTR [ebp-0x2c],edi
  424e33:	mov    DWORD PTR [ebp-0x3c],eax
  424e36:	mov    eax,DWORD PTR [ebp-0x2c]
  424e39:	mov    DWORD PTR [ebp-0x14],eax
  424e3c:	mov    eax,DWORD PTR [ebp-0x18]
  424e3f:	mov    ecx,DWORD PTR [ebp-0x10]
  424e42:	xor    eax,ebx
  424e44:	add    eax,esi
  424e46:	mov    DWORD PTR [ebp-0x5c],0x3d222a22
  424e4d:	mov    DWORD PTR [ebp-0x58],0x37223f22
  424e54:	jmp    0x424e87
  424e56:	mov    edx,DWORD PTR [ebp-0x14]
  424e59:	mov    edi,ecx
  424e5b:	xor    edi,ebx
  424e5d:	mov    cl,BYTE PTR [ebp+edi*1+0x327290]
  424e64:	movsx  edx,BYTE PTR [edi+edx*1+0x3272ec]
  424e6c:	xor    cl,0x79
  424e6f:	sub    cl,0x3
  424e72:	movzx  ecx,cl
  424e75:	cmp    edx,ecx
  424e77:	jne    0x424e91
  424e79:	mov    ecx,DWORD PTR [ebp-0x18]
  424e7c:	xor    ecx,ebx
  424e7e:	lea    ecx,[ecx+edi*1+0x3272ec]
  424e85:	xor    ecx,ebx
  424e87:	cmp    ecx,0xf89c85b8
  424e8d:	jne    0x424e56
  424e8f:	jmp    0x424e98
  424e91:	mov    eax,DWORD PTR [ebp-0x10]
  424e94:	xor    eax,ebx
  424e96:	add    eax,esi
  424e98:	mov    ecx,DWORD PTR [ebp-0x10]
  424e9b:	xor    ecx,ebx
  424e9d:	add    ecx,esi
  424e9f:	cmp    ecx,eax
  424ea1:	je     0x425017
  424ea7:	mov    eax,DWORD PTR [ebp-0x14]
  424eaa:	mov    eax,DWORD PTR [eax+0x8]
  424ead:	mov    DWORD PTR [ebp-0xc],0xf89c85b0
  424eb4:	mov    DWORD PTR [ebp-0x40],0xf89cc327
  424ebb:	mov    DWORD PTR [ebp-0x44],0xf89cb5b0
  424ec2:	mov    DWORD PTR [ebp-0x24],0xf89c85bc
  424ec9:	mov    DWORD PTR [ebp-0x20],eax
  424ecc:	mov    eax,DWORD PTR [ebp+0x8]
  424ecf:	mov    ecx,DWORD PTR [ebp-0x24]
  424ed2:	xor    ecx,ebx
  424ed4:	add    ecx,esi
  424ed6:	push   ecx
  424ed7:	mov    ecx,DWORD PTR [ebp-0x44]
  424eda:	mov    eax,DWORD PTR [eax+0x1d8]
  424ee0:	xor    ecx,ebx
  424ee2:	add    ecx,esi
  424ee4:	push   ecx
  424ee5:	mov    ecx,DWORD PTR [ebp-0x40]
  424ee8:	xor    ecx,ebx
  424eea:	add    ecx,esi
  424eec:	push   ecx
  424eed:	mov    ecx,DWORD PTR [ebp-0xc]
  424ef0:	xor    ecx,ebx
  424ef2:	add    ecx,esi
  424ef4:	push   ecx
  424ef5:	call   DWORD PTR [eax+0x14]
  424ef8:	mov    edi,eax
  424efa:	mov    eax,DWORD PTR [ebp+0x8]
  424efd:	mov    ecx,DWORD PTR [ebp-0x24]
  424f00:	mov    eax,DWORD PTR [eax+0x1d8]
  424f06:	xor    ecx,ebx
  424f08:	add    ecx,esi
  424f0a:	push   ecx
  424f0b:	mov    ecx,DWORD PTR [ebp-0x44]
  424f0e:	xor    ecx,ebx
  424f10:	add    ecx,esi
  424f12:	push   ecx
  424f13:	mov    ecx,DWORD PTR [ebp-0xc]
  424f16:	push   DWORD PTR [ebp-0x20]
  424f19:	xor    ecx,ebx
  424f1b:	add    ecx,esi
  424f1d:	push   ecx
  424f1e:	call   DWORD PTR [eax+0x14]
  424f21:	mov    ecx,DWORD PTR [ebp-0xc]
  424f24:	xor    ecx,ebx
  424f26:	add    ecx,esi
  424f28:	mov    DWORD PTR [ebp-0x24],eax
  424f2b:	cmp    ecx,edi
  424f2d:	je     0x4252ba
  424f33:	mov    ecx,DWORD PTR [ebp-0xc]
  424f36:	xor    ecx,ebx
  424f38:	add    ecx,esi
  424f3a:	cmp    ecx,eax
  424f3c:	je     0x4252ba
  424f42:	mov    DWORD PTR [ebp-0x40],0xf89c85b3
  424f49:	mov    DWORD PTR [ebp-0x54],0xf89c85b2
  424f50:	mov    ecx,DWORD PTR [ebp-0x40]
  424f53:	xor    cl,0xa4
  424f56:	sub    cl,0x14
  424f59:	mov    BYTE PTR [edi],cl
  424f5b:	mov    ecx,DWORD PTR [ebp-0xc]
  424f5e:	xor    cl,0xa4
  424f61:	sub    cl,0x14
  424f64:	mov    BYTE PTR [edi+0x1],cl
  424f67:	mov    ecx,DWORD PTR [ebp-0x54]
  424f6a:	xor    cl,0xa4
  424f6d:	sub    cl,0x14
  424f70:	mov    BYTE PTR [edi+0x2],cl
  424f73:	and    DWORD PTR [ebp-0xc8],0x0
  424f7a:	and    DWORD PTR [ebp-0xdc],0x0
  424f81:	lea    ecx,[ebp-0xdc]
  424f87:	push   ecx
  424f88:	push   DWORD PTR [ebp-0x20]
  424f8b:	push   eax
  424f8c:	lea    eax,[ebp-0xc8]
  424f92:	push   eax
  424f93:	mov    eax,DWORD PTR [ebp-0x14]
  424f96:	push   DWORD PTR [eax+0xc]
  424f99:	mov    eax,DWORD PTR [ebp-0x2c]
  424f9c:	add    eax,0x10
  424f9f:	push   eax
  424fa0:	push   edi
  424fa1:	call   0x424245
  424fa6:	mov    DWORD PTR [ebp-0x40],eax
  424fa9:	mov    eax,DWORD PTR [ebp+0x8]
  424fac:	mov    ecx,DWORD PTR [ebp-0x50]
  424faf:	mov    eax,DWORD PTR [eax+0x1d8]
  424fb5:	xor    ecx,ebx
  424fb7:	add    ecx,esi
  424fb9:	push   ecx
  424fba:	mov    ecx,DWORD PTR [ebp-0xc]
  424fbd:	xor    ecx,ebx
  424fbf:	add    ecx,esi
  424fc1:	push   ecx
  424fc2:	push   edi
  424fc3:	call   DWORD PTR [eax+0x18]
  424fc6:	mov    eax,DWORD PTR [ebp-0x40]
  424fc9:	add    eax,0xffcd8d14
  424fce:	xor    eax,ebx
  424fd0:	cmp    eax,0xf89c85b0
  424fd5:	mov    eax,DWORD PTR [ebp+0x8]
  424fd8:	mov    eax,DWORD PTR [eax+0x1d8]
  424fde:	mov    ecx,DWORD PTR [ebp-0x50]
  424fe1:	jne    0x425004
  424fe3:	xor    ecx,ebx
  424fe5:	add    ecx,esi
  424fe7:	push   ecx
  424fe8:	mov    ecx,DWORD PTR [ebp-0xc]
  424feb:	xor    ecx,ebx
  424fed:	add    ecx,esi
  424fef:	push   ecx
  424ff0:	push   DWORD PTR [ebp-0x2c]
  424ff3:	call   DWORD PTR [eax+0x18]
  424ff6:	mov    eax,DWORD PTR [ebp-0x24]
  424ff9:	mov    DWORD PTR [ebp-0x2c],eax
  424ffc:	mov    eax,DWORD PTR [ebp-0x20]
  424fff:	mov    DWORD PTR [ebp-0x3c],eax
  425002:	jmp    0x425017
  425004:	xor    ecx,ebx
  425006:	add    ecx,esi
  425008:	push   ecx
  425009:	mov    ecx,DWORD PTR [ebp-0xc]
  42500c:	xor    ecx,ebx
  42500e:	add    ecx,esi
  425010:	push   ecx
  425011:	push   DWORD PTR [ebp-0x24]
  425014:	call   DWORD PTR [eax+0x18]
  425017:	mov    eax,DWORD PTR [ebp-0x3c]
  42501a:	mov    DWORD PTR [ebp-0x34],eax
  42501d:	mov    eax,DWORD PTR [ebp-0x2c]
  425020:	mov    DWORD PTR [ebp-0x28],0xf89c85b0
  425027:	mov    DWORD PTR [ebp-0x40],eax
  42502a:	mov    edi,0xf89c85b1
  42502f:	mov    DWORD PTR [ebp-0x30],edi
  425032:	mov    eax,DWORD PTR [ebp-0x28]
  425035:	xor    eax,ebx
  425037:	add    eax,esi
  425039:	mov    DWORD PTR [ebp-0xc],eax
  42503c:	mov    eax,DWORD PTR [ebp-0x28]
  42503f:	xor    eax,ebx
  425041:	add    eax,esi
  425043:	mov    DWORD PTR [ebp-0x14],eax
  425046:	mov    DWORD PTR [ebp-0x44],0xf89c8590
  42504d:	mov    DWORD PTR [ebp-0x24],0xf89c85bf
  425054:	mov    eax,DWORD PTR [ebp-0x28]
  425057:	mov    ecx,DWORD PTR [ebp-0x34]
  42505a:	xor    eax,ebx
  42505c:	add    eax,esi
  42505e:	cmp    ecx,eax
  425060:	je     0x425256
  425066:	jmp    0x425232
  42506b:	mov    ecx,DWORD PTR [ebp-0xc]
  42506e:	mov    eax,DWORD PTR [ebp-0x34]
  425071:	sub    eax,ecx
  425073:	mov    ecx,DWORD PTR [ebp-0x44]
  425076:	xor    ecx,ebx
  425078:	add    ecx,esi
  42507a:	xor    edx,edx
  42507c:	div    ecx
  42507e:	mov    DWORD PTR [ebp-0x14],eax
  425081:	mov    eax,DWORD PTR [ebp-0x24]
  425084:	mov    ecx,DWORD PTR [ebp-0x14]
  425087:	xor    eax,ebx
  425089:	add    eax,esi
  42508b:	cmp    ecx,eax
  42508d:	jbe    0x425099
  42508f:	mov    eax,DWORD PTR [ebp-0x24]
  425092:	xor    eax,ebx
  425094:	add    eax,esi
  425096:	mov    DWORD PTR [ebp-0x14],eax
  425099:	mov    eax,DWORD PTR [ebp-0x44]
  42509c:	mov    ecx,DWORD PTR [ebp-0x14]
  42509f:	xor    eax,ebx
  4250a1:	add    eax,esi
  4250a3:	imul   eax,ecx
  4250a6:	mov    DWORD PTR [ebp-0x14],eax
  4250a9:	mov    eax,DWORD PTR [ebp-0x28]
  4250ac:	mov    ecx,DWORD PTR [ebp-0x14]
  4250af:	xor    eax,ebx
  4250b1:	add    eax,esi
  4250b3:	cmp    ecx,eax
  4250b5:	je     0x425220
  4250bb:	mov    eax,DWORD PTR [ebp-0x14]
  4250be:	mov    DWORD PTR [ebp-0x20],eax
  4250c1:	mov    eax,DWORD PTR [ebp-0xc]
  4250c4:	add    eax,DWORD PTR [ebp-0x40]
  4250c7:	mov    DWORD PTR [ebp-0x4c],0xf89c85b0
  4250ce:	mov    DWORD PTR [ebp-0x14],edi
  4250d1:	mov    DWORD PTR [ebp-0x54],0xf89c85b2
  4250d8:	mov    DWORD PTR [ebp-0x1c],eax
  4250db:	mov    DWORD PTR [ebp-0x38],0xf89c85b3
  4250e2:	mov    DWORD PTR [ebp-0x8],edi
  4250e5:	mov    eax,DWORD PTR [ebp-0x4c]
  4250e8:	xor    eax,ebx
  4250ea:	add    eax,esi
  4250ec:	jmp    0x4251df
  4250f1:	mov    DWORD PTR [ebp-0xe4],0xf89c85bb
  4250fb:	mov    DWORD PTR [ebp-0xd0],0xf89c858e
  425105:	mov    eax,DWORD PTR [ebp-0x8]
  425108:	mov    ecx,DWORD PTR [ebp-0x18]
  42510b:	xor    eax,ebx
  42510d:	add    eax,esi
  42510f:	imul   eax,ecx
  425112:	mov    ecx,DWORD PTR [ebp-0x1c]
  425115:	mov    al,BYTE PTR [eax+ecx*1]
  425118:	mov    BYTE PTR [ebp-0x1],al
  42511b:	mov    eax,DWORD PTR [ebp-0x8]
  42511e:	mov    ecx,DWORD PTR [ebp-0x18]
  425121:	xor    eax,ebx
  425123:	add    eax,esi
  425125:	imul   eax,ecx
  425128:	mov    ecx,DWORD PTR [ebp-0x54]
  42512b:	xor    ecx,ebx
  42512d:	add    eax,ecx
  42512f:	mov    ecx,DWORD PTR [ebp-0x1c]
  425132:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  42513a:	mov    ecx,DWORD PTR [ebp-0xe4]
  425140:	xor    ecx,ebx
  425142:	lea    eax,[ecx+eax*1+0x3272ec]
  425149:	movzx  ecx,BYTE PTR [ebp-0x1]
  42514d:	xor    ecx,eax
  42514f:	mov    BYTE PTR [ebp-0x1],cl
  425152:	mov    al,BYTE PTR [ebp-0x1]
  425155:	mov    ecx,DWORD PTR [ebp-0x8]
  425158:	mov    edx,DWORD PTR [ebp-0x18]
  42515b:	xor    ecx,ebx
  42515d:	add    ecx,esi
  42515f:	imul   ecx,edx
  425162:	mov    edx,DWORD PTR [ebp-0x1c]
  425165:	mov    BYTE PTR [ecx+edx*1],al
  425168:	mov    eax,DWORD PTR [ebp-0x8]
  42516b:	mov    ecx,DWORD PTR [ebp-0x18]
  42516e:	xor    eax,ebx
  425170:	add    eax,esi
  425172:	imul   eax,ecx
  425175:	mov    ecx,DWORD PTR [ebp-0x1c]
  425178:	mov    al,BYTE PTR [eax+ecx*1]
  42517b:	mov    BYTE PTR [ebp-0x1],al
  42517e:	mov    eax,DWORD PTR [ebp-0x8]
  425181:	mov    ecx,DWORD PTR [ebp-0x18]
  425184:	xor    eax,ebx
  425186:	add    eax,esi
  425188:	imul   eax,ecx
  42518b:	mov    ecx,DWORD PTR [ebp-0x14]
  42518e:	xor    ecx,ebx
  425190:	add    eax,ecx
  425192:	mov    ecx,DWORD PTR [ebp-0x1c]
  425195:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  42519d:	mov    ecx,DWORD PTR [ebp-0xd0]
  4251a3:	xor    ecx,ebx
  4251a5:	lea    eax,[ecx+eax*1+0x3272ec]
  4251ac:	movzx  ecx,BYTE PTR [ebp-0x1]
  4251b0:	xor    ecx,eax
  4251b2:	mov    BYTE PTR [ebp-0x1],cl
  4251b5:	mov    al,BYTE PTR [ebp-0x1]
  4251b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4251bb:	mov    edx,DWORD PTR [ebp-0x18]
  4251be:	xor    ecx,ebx
  4251c0:	add    ecx,esi
  4251c2:	imul   ecx,edx
  4251c5:	mov    edx,DWORD PTR [ebp-0x1c]
  4251c8:	mov    BYTE PTR [ecx+edx*1],al
  4251cb:	mov    eax,DWORD PTR [ebp-0x38]
  4251ce:	mov    ecx,DWORD PTR [ebp-0x14]
  4251d1:	xor    eax,ebx
  4251d3:	xor    ecx,ebx
  4251d5:	add    eax,esi
  4251d7:	add    ecx,esi
  4251d9:	imul   eax,ecx
  4251dc:	add    eax,DWORD PTR [ebp-0x18]
  4251df:	mov    DWORD PTR [ebp-0x18],eax
  4251e2:	mov    eax,DWORD PTR [ebp-0x18]
  4251e5:	mov    ecx,DWORD PTR [ebp-0x20]
  4251e8:	cmp    ecx,eax
  4251ea:	jb     0x4250f1
  4251f0:	mov    eax,DWORD PTR [ebp-0x14]
  4251f3:	mov    ecx,DWORD PTR [ebp-0x20]
  4251f6:	xor    eax,ebx
  4251f8:	add    eax,esi
  4251fa:	imul   eax,ecx
  4251fd:	mov    ecx,DWORD PTR [ebp-0x4c]
  425200:	xor    ecx,ebx
  425202:	add    ecx,esi
  425204:	or     eax,ecx
  425206:	mov    ecx,DWORD PTR [ebp-0x30]
  425209:	xor    ecx,ebx
  42520b:	add    eax,ecx
  42520d:	mov    ecx,DWORD PTR [ebp-0x30]
  425210:	xor    ecx,ebx
  425212:	add    eax,ecx
  425214:	mov    ecx,DWORD PTR [ebp-0xc]
  425217:	lea    eax,[eax+ecx*1+0x64e5d8]
  42521e:	jmp    0x42522f
  425220:	mov    eax,DWORD PTR [ebp-0x30]
  425223:	mov    ecx,DWORD PTR [ebp-0xc]
  425226:	xor    eax,ebx
  425228:	lea    eax,[eax+ecx*1+0x3272ec]
  42522f:	mov    DWORD PTR [ebp-0xc],eax
  425232:	mov    eax,DWORD PTR [ebp-0x30]
  425235:	xor    eax,ebx
  425237:	mov    ecx,0xffcd8d14
  42523c:	sub    ecx,eax
  42523e:	add    ecx,DWORD PTR [ebp-0x34]
  425241:	mov    eax,DWORD PTR [ebp-0x30]
  425244:	mov    edx,DWORD PTR [ebp-0xc]
  425247:	xor    eax,ebx
  425249:	add    eax,esi
  42524b:	imul   eax,edx
  42524e:	cmp    eax,ecx
  425250:	jbe    0x42506b
  425256:	push   DWORD PTR [ebp+0x8]
  425259:	mov    eax,DWORD PTR [ebp+0x8]
  42525c:	push   DWORD PTR [eax+0x1cc]
  425262:	lea    eax,[ebp-0xd8]
  425268:	push   eax
  425269:	mov    eax,DWORD PTR [ebp+0x8]
  42526c:	mov    eax,DWORD PTR [eax+0x1c4]
  425272:	push   DWORD PTR [eax]
  425274:	mov    eax,DWORD PTR [ebp+0x8]
  425277:	mov    eax,DWORD PTR [eax+0x1c0]
  42527d:	push   DWORD PTR [eax]
  42527f:	push   DWORD PTR [ebp-0x3c]
  425282:	push   DWORD PTR [ebp-0x2c]
  425285:	call   0x425d1c
  42528a:	mov    DWORD PTR [ebp-0x40],eax
  42528d:	mov    eax,DWORD PTR [ebp-0x10]
  425290:	mov    ecx,DWORD PTR [ebp-0x2c]
  425293:	xor    eax,ebx
  425295:	add    eax,esi
  425297:	cmp    eax,ecx
  425299:	je     0x4252ba
  42529b:	mov    eax,DWORD PTR [ebp+0x8]
  42529e:	mov    ecx,DWORD PTR [ebp-0x50]
  4252a1:	mov    eax,DWORD PTR [eax+0x1d8]
  4252a7:	xor    ecx,ebx
  4252a9:	add    ecx,esi
  4252ab:	push   ecx
  4252ac:	mov    ecx,DWORD PTR [ebp-0x10]
  4252af:	xor    ecx,ebx
  4252b1:	add    ecx,esi
  4252b3:	push   ecx
  4252b4:	push   DWORD PTR [ebp-0x2c]
  4252b7:	call   DWORD PTR [eax+0x18]
  4252ba:	pop    edi
  4252bb:	pop    esi
  4252bc:	pop    ebx
  4252bd:	leave  
  4252be:	ret    0x4
  4252c1:	push   ebp
  4252c2:	mov    ebp,esp
  4252c4:	push   ecx
  4252c5:	push   ecx
  4252c6:	lea    eax,[ebp-0x8]
  4252c9:	mov    DWORD PTR [ebp-0x4],eax
  4252cc:	push   esi
  4252cd:	mov    esi,DWORD PTR [ebp-0x4]
  4252d0:	mov    eax,0xf881ba2e
  4252d5:	mov    DWORD PTR [esi],eax
  4252d7:	mov    esi,DWORD PTR [ebp-0x8]
  4252da:	cmp    esi,eax
  4252dc:	pop    esi
  4252dd:	jne    0x4252e7
  4252df:	mov    BYTE PTR [ecx+0xa],0x7a
  4252e3:	mov    BYTE PTR [edx+0x8],0x2f
  4252e7:	mov    BYTE PTR [edx+0xa],0x7a
  4252eb:	mov    BYTE PTR [ecx+0x2],0x8
  4252ef:	leave  
  4252f0:	ret    
  4252f1:	push   ebp
  4252f2:	mov    ebp,esp
  4252f4:	push   ecx
  4252f5:	push   ecx
  4252f6:	lea    eax,[ebp-0x8]
  4252f9:	mov    DWORD PTR [ebp-0x4],eax
  4252fc:	mov    edx,DWORD PTR [ebp-0x4]
  4252ff:	mov    eax,0xf88b0bca
  425304:	mov    DWORD PTR [edx],eax
  425306:	mov    edx,DWORD PTR [ebp-0x8]
  425309:	cmp    edx,eax
  42530b:	jne    0x42531c
  42530d:	mov    eax,DWORD PTR [ebp+0x8]
  425310:	mov    BYTE PTR [ecx+0x9],0xe
  425314:	mov    BYTE PTR [eax+0x7],0x57
  425318:	mov    BYTE PTR [ecx+0x6],0xf
  42531c:	mov    BYTE PTR [ecx+0x3],0x1e
  425320:	leave  
  425321:	ret    0x4
  425324:	push   ebp
  425325:	mov    ebp,esp
  425327:	push   ecx
  425328:	push   ecx
  425329:	lea    eax,[ebp-0x8]
  42532c:	mov    DWORD PTR [ebp-0x4],eax
  42532f:	mov    edx,DWORD PTR [ebp-0x4]
  425332:	mov    eax,0x7e0da2e
  425337:	mov    DWORD PTR [edx],eax
  425339:	mov    edx,DWORD PTR [ebp-0x8]
  42533c:	cmp    edx,eax
  42533e:	jne    0x425344
  425340:	mov    BYTE PTR [ecx+0x7],0x57
  425344:	mov    eax,DWORD PTR [ebp+0x8]
  425347:	mov    BYTE PTR [ecx+0x1],0x15
  42534b:	mov    BYTE PTR [eax+0x9],0x2e
  42534f:	leave  
  425350:	ret    0x4
  425353:	push   ebp
  425354:	mov    ebp,esp
  425356:	push   ecx
  425357:	push   ecx
  425358:	lea    eax,[ebp-0x8]
  42535b:	mov    DWORD PTR [ebp-0x4],eax
  42535e:	push   esi
  42535f:	mov    esi,DWORD PTR [ebp-0x4]
  425362:	mov    eax,0x7060e3f
  425367:	mov    DWORD PTR [esi],eax
  425369:	mov    esi,DWORD PTR [ebp-0x8]
  42536c:	cmp    esi,eax
  42536e:	pop    esi
  42536f:	jne    0x42537b
  425371:	mov    BYTE PTR [edx+0x4],0xb
  425375:	mov    WORD PTR [ecx+0x3],0xb1e
  42537b:	mov    BYTE PTR [edx],0x3f
  42537e:	leave  
  42537f:	ret    
  425380:	push   ebp
  425381:	mov    ebp,esp
  425383:	push   ecx
  425384:	push   ecx
  425385:	lea    eax,[ebp-0x8]
  425388:	mov    DWORD PTR [ebp-0x4],eax
  42538b:	mov    edx,DWORD PTR [ebp-0x4]
  42538e:	mov    eax,0xf8870b3e
  425393:	mov    DWORD PTR [edx],eax
  425395:	mov    edx,DWORD PTR [ebp-0x8]
  425398:	cmp    edx,eax
  42539a:	jne    0x4253a7
  42539c:	mov    eax,DWORD PTR [ebp+0x8]
  42539f:	mov    BYTE PTR [ecx+0x8],0xf
  4253a3:	mov    BYTE PTR [eax+0x1],0x15
  4253a7:	mov    BYTE PTR [ecx+0x5],0x3
  4253ab:	leave  
  4253ac:	ret    0x4
  4253af:	push   esi
  4253b0:	mov    ecx,edi
  4253b2:	call   0x425380
  4253b7:	mov    edx,edi
  4253b9:	mov    ecx,esi
  4253bb:	mov    BYTE PTR [esi],0x1f
  4253be:	call   0x425353
  4253c3:	push   esi
  4253c4:	mov    ecx,edi
  4253c6:	mov    BYTE PTR [esi+0x5],0x3
  4253ca:	call   0x425324
  4253cf:	push   esi
  4253d0:	mov    BYTE PTR [esi+0x6],0xf
  4253d4:	call   0x4252f1
  4253d9:	mov    BYTE PTR [esi+0x2],0x8
  4253dd:	mov    edx,esi
  4253df:	jmp    0x4252c1
  4253e4:	push   ebp
  4253e5:	mov    ebp,esp
  4253e7:	push   ecx
  4253e8:	mov    ecx,DWORD PTR [edx+0x194]
  4253ee:	push   esi
  4253ef:	mov    esi,DWORD PTR [ebp+0x8]
  4253f2:	mov    esi,DWORD PTR [esi]
  4253f4:	mov    DWORD PTR [ecx],esi
  4253f6:	mov    ecx,DWORD PTR [edx+0x194]
  4253fc:	mov    ecx,DWORD PTR [ecx]
  4253fe:	mov    esi,DWORD PTR [edx+0x190]
  425404:	mov    DWORD PTR [esi],ecx
  425406:	mov    eax,DWORD PTR [edx+0x194]
  42540c:	mov    ecx,DWORD PTR [eax]
  42540e:	mov    ecx,DWORD PTR [ecx+0x3c]
  425411:	add    ecx,DWORD PTR [eax]
  425413:	mov    DWORD PTR [ebp-0x4],0xf89ca5b0
  42541a:	mov    eax,DWORD PTR [ebp-0x4]
  42541d:	movzx  ecx,WORD PTR [ecx+0x16]
  425421:	xor    eax,0x75108a4
  425426:	add    eax,0x3272ec
  42542b:	pop    esi
  42542c:	test   ecx,eax
  42542e:	je     0x42543c
  425430:	mov    eax,DWORD PTR [edx+0x1c8]
  425436:	mov    DWORD PTR [eax],0xf89c85b1
  42543c:	leave  
  42543d:	ret    0x4
  425440:	push   ebp
  425441:	mov    ebp,esp
  425443:	sub    esp,0x70
  425446:	and    DWORD PTR [ebp-0x20],0x0
  42544a:	mov    DWORD PTR [ebp-0x18],0xf89cb5b0
  425451:	mov    DWORD PTR [ebp-0x1c],0xf89c85f0
  425458:	mov    DWORD PTR [ebp-0x2c],0xf89c85bc
  42545f:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  425466:	mov    DWORD PTR [ebp-0x2c],0xf89f05b0
  42546d:	mov    eax,DWORD PTR [ebp+0x20]
  425470:	mov    eax,DWORD PTR [eax+0x194]
  425476:	mov    DWORD PTR [ebp-0xc],eax
  425479:	mov    eax,DWORD PTR [ebp+0x20]
  42547c:	push   ebx
  42547d:	push   esi
  42547e:	mov    esi,DWORD PTR [eax+0x190]
  425484:	mov    eax,DWORD PTR [ebp+0x20]
  425487:	mov    eax,DWORD PTR [eax+0x18c]
  42548d:	mov    DWORD PTR [ebp-0x8],eax
  425490:	mov    eax,DWORD PTR [eax]
  425492:	push   edi
  425493:	mov    DWORD PTR [ebp-0x4],esi
  425496:	test   eax,eax
  425498:	jne    0x4254a5
  42549a:	push   DWORD PTR [ebp+0x1c]
  42549d:	mov    edx,DWORD PTR [ebp+0x20]
  4254a0:	call   0x4253e4
  4254a5:	mov    eax,DWORD PTR [esi]
  4254a7:	mov    ebx,DWORD PTR [esi]
  4254a9:	add    ebx,DWORD PTR [eax+0x3c]
  4254ac:	mov    eax,DWORD PTR [ebp+0xc]
  4254af:	mov    ecx,DWORD PTR [ebp-0x8]
  4254b2:	mov    ecx,DWORD PTR [ecx]
  4254b4:	mov    esi,0x75108a4
  4254b9:	xor    eax,esi
  4254bb:	mov    edi,0x3272ec
  4254c0:	add    eax,edi
  4254c2:	cmp    eax,ecx
  4254c4:	jne    0x4256fc
  4254ca:	mov    eax,DWORD PTR [ebp-0xc]
  4254cd:	mov    eax,DWORD PTR [eax]
  4254cf:	mov    DWORD PTR [ebp-0x10],eax
  4254d2:	mov    eax,DWORD PTR [ebx+0x50]
  4254d5:	mov    DWORD PTR [ebp-0x68],eax
  4254d8:	mov    eax,DWORD PTR [ebp-0x18]
  4254db:	xor    eax,esi
  4254dd:	add    eax,edi
  4254df:	mov    DWORD PTR [ebp-0x64],eax
  4254e2:	mov    eax,DWORD PTR [ebp-0x14]
  4254e5:	and    DWORD PTR [ebp-0x6c],0x0
  4254e9:	xor    eax,esi
  4254eb:	add    eax,edi
  4254ed:	mov    DWORD PTR [ebp-0x60],eax
  4254f0:	lea    eax,[ebp-0x70]
  4254f3:	push   eax
  4254f4:	mov    eax,DWORD PTR [ebp+0x8]
  4254f7:	xor    eax,esi
  4254f9:	add    eax,edi
  4254fb:	push   eax
  4254fc:	mov    eax,DWORD PTR [ebp+0x20]
  4254ff:	add    eax,0xaa
  425504:	push   eax
  425505:	mov    eax,DWORD PTR [ebp+0x20]
  425508:	mov    eax,DWORD PTR [eax+0x198]
  42550e:	mov    DWORD PTR [ebp-0x70],0x4
  425515:	push   DWORD PTR [eax]
  425517:	mov    eax,DWORD PTR [ebp+0x10]
  42551a:	call   eax
  42551c:	mov    ecx,DWORD PTR [ebp-0xc]
  42551f:	mov    ecx,DWORD PTR [ecx]
  425521:	mov    edx,DWORD PTR [ebp-0x8]
  425524:	mov    DWORD PTR [ebp-0x6c],eax
  425527:	mov    DWORD PTR [ebp+0x1c],eax
  42552a:	mov    DWORD PTR [edx],ecx
  42552c:	mov    ecx,DWORD PTR [ebp-0x4]
  42552f:	mov    DWORD PTR [ecx],eax
  425531:	mov    eax,DWORD PTR [ebx+0x50]
  425534:	mov    DWORD PTR [ebp-0x68],eax
  425537:	mov    eax,DWORD PTR [ebp-0x1c]
  42553a:	xor    eax,esi
  42553c:	add    eax,edi
  42553e:	mov    DWORD PTR [ebp-0x64],eax
  425541:	lea    eax,[ebp-0x20]
  425544:	mov    DWORD PTR [ebp-0x60],eax
  425547:	lea    eax,[ebp-0x70]
  42554a:	push   eax
  42554b:	mov    eax,DWORD PTR [ebp+0x8]
  42554e:	xor    eax,esi
  425550:	add    eax,edi
  425552:	push   eax
  425553:	mov    eax,DWORD PTR [ebp+0x20]
  425556:	add    eax,0xee
  42555b:	push   eax
  42555c:	mov    eax,DWORD PTR [ebp+0x20]
  42555f:	mov    eax,DWORD PTR [eax+0x198]
  425565:	mov    DWORD PTR [ebp-0x70],0x4
  42556c:	push   DWORD PTR [eax]
  42556e:	mov    eax,DWORD PTR [ebp+0x10]
  425571:	call   eax
  425573:	test   eax,eax
  425575:	je     0x42559a
  425577:	and    DWORD PTR [ebp+0xc],0x0
  42557b:	cmp    DWORD PTR [ebx+0x50],0x0
  42557f:	jbe    0x42559a
  425581:	mov    eax,DWORD PTR [ebp+0x1c]
  425584:	mov    ecx,DWORD PTR [ebp-0x10]
  425587:	sub    ecx,eax
  425589:	mov    dl,BYTE PTR [ecx+eax*1]
  42558c:	inc    DWORD PTR [ebp+0xc]
  42558f:	mov    BYTE PTR [eax],dl
  425591:	mov    edx,DWORD PTR [ebp+0xc]
  425594:	inc    eax
  425595:	cmp    edx,DWORD PTR [ebx+0x50]
  425598:	jb     0x425589
  42559a:	mov    edx,DWORD PTR [ebp+0x1c]
  42559d:	mov    ecx,DWORD PTR [edx+0x3c]
  4255a0:	add    ecx,edx
  4255a2:	mov    eax,DWORD PTR [ecx+0xa0]
  4255a8:	mov    ebx,DWORD PTR [ecx+0x28]
  4255ab:	add    eax,edx
  4255ad:	sub    edx,DWORD PTR [ebp-0x10]
  4255b0:	add    ebx,DWORD PTR [ebp+0x1c]
  4255b3:	mov    DWORD PTR [ebp+0xc],edx
  4255b6:	mov    DWORD PTR [ebp-0x2c],ecx
  4255b9:	mov    DWORD PTR [ebp-0x14],ebx
  4255bc:	mov    DWORD PTR [ebp-0x8],0x0
  4255c3:	jmp    0x42563f
  4255c5:	add    edx,0xfffffff8
  4255c8:	shr    edx,1
  4255ca:	mov    DWORD PTR [ebp-0x18],edx
  4255cd:	je     0x42562b
  4255cf:	lea    edx,[eax+0x8]
  4255d2:	mov    DWORD PTR [ebp-0x4],edx
  4255d5:	mov    edx,DWORD PTR [ebp-0x18]
  4255d8:	mov    DWORD PTR [ebp-0x18],edx
  4255db:	mov    edx,DWORD PTR [ebp-0x4]
  4255de:	movzx  edx,WORD PTR [edx]
  4255e1:	mov    DWORD PTR [ebp-0x24],edx
  4255e4:	and    edx,0xfff
  4255ea:	mov    DWORD PTR [ebp-0x28],edx
  4255ed:	mov    edx,DWORD PTR [ebp-0x24]
  4255f0:	shr    edx,0xc
  4255f3:	add    edx,0xffcd8d14
  4255f9:	xor    edx,esi
  4255fb:	cmp    edx,0xf89c85b3
  425601:	jne    0x425622
  425603:	mov    edx,DWORD PTR [ebp-0x28]
  425606:	add    edx,DWORD PTR [ebp+0x1c]
  425609:	mov    ebx,DWORD PTR [eax]
  42560b:	cmp    DWORD PTR [ebx+edx*1],0x0
  42560f:	je     0x42561f
  425611:	mov    ecx,DWORD PTR [ebp+0xc]
  425614:	add    ecx,DWORD PTR [ebx+edx*1]
  425617:	mov    ebx,DWORD PTR [eax]
  425619:	mov    DWORD PTR [edx+ebx*1],ecx
  42561c:	mov    ecx,DWORD PTR [ebp-0x2c]
  42561f:	mov    ebx,DWORD PTR [ebp-0x14]
  425622:	add    DWORD PTR [ebp-0x4],0x2
  425626:	dec    DWORD PTR [ebp-0x18]
  425629:	jne    0x4255db
  42562b:	mov    edx,DWORD PTR [ebp-0xc]
  42562e:	add    DWORD PTR [ebp-0x8],edx
  425631:	mov    edx,DWORD PTR [ebp-0x8]
  425634:	cmp    edx,DWORD PTR [ecx+0xa4]
  42563a:	jae    0x42564d
  42563c:	add    eax,DWORD PTR [ebp-0xc]
  42563f:	mov    edx,DWORD PTR [eax+0x4]
  425642:	mov    DWORD PTR [ebp-0xc],edx
  425645:	test   edx,edx
  425647:	jne    0x4255c5
  42564d:	mov    eax,DWORD PTR [ebp-0x10]
  425650:	mov    DWORD PTR [ebp-0x6c],eax
  425653:	mov    DWORD PTR [ebp-0x70],0x4
  42565a:	mov    eax,DWORD PTR [ecx+0x50]
  42565d:	mov    DWORD PTR [ebp-0x68],eax
  425660:	mov    eax,DWORD PTR [ebp-0x1c]
  425663:	xor    eax,esi
  425665:	add    eax,edi
  425667:	mov    DWORD PTR [ebp-0x64],eax
  42566a:	lea    eax,[ebp-0x20]
  42566d:	mov    DWORD PTR [ebp-0x60],eax
  425670:	lea    eax,[ebp-0x70]
  425673:	push   eax
  425674:	mov    eax,DWORD PTR [ebp+0x8]
  425677:	xor    eax,esi
  425679:	add    eax,edi
  42567b:	push   eax
  42567c:	mov    eax,DWORD PTR [ebp+0x20]
  42567f:	add    eax,0xee
  425684:	push   eax
  425685:	mov    eax,DWORD PTR [ebp+0x20]
  425688:	mov    eax,DWORD PTR [eax+0x198]
  42568e:	push   DWORD PTR [eax]
  425690:	mov    eax,DWORD PTR [ebp+0x10]
  425693:	call   eax
  425695:	mov    eax,DWORD PTR [ebp+0x20]
  425698:	mov    eax,DWORD PTR [eax+0x180]
  42569e:	add    eax,DWORD PTR [ebp+0xc]
  4256a1:	mov    ecx,DWORD PTR [ebp+0xc]
  4256a4:	push   DWORD PTR [ebp+0x18]
  4256a7:	mov    DWORD PTR [eax],ecx
  4256a9:	push   DWORD PTR [ebp+0x14]
  4256ac:	push   DWORD PTR [ebp+0x1c]
  4256af:	call   ebx
  4256b1:	mov    ecx,DWORD PTR [ebp+0xc]
  4256b4:	add    ecx,DWORD PTR [ebp+0x20]
  4256b7:	lea    eax,[ebp+0x4]
  4256ba:	mov    DWORD PTR [ebp+0x20],ecx
  4256bd:	mov    ecx,DWORD PTR [ebp+0x20]
  4256c0:	mov    ecx,DWORD PTR [ebp+0x20]
  4256c3:	mov    edx,DWORD PTR [ecx+0x190]
  4256c9:	mov    ecx,DWORD PTR [ebp+0x20]
  4256cc:	mov    ecx,DWORD PTR [ecx+0x18c]
  4256d2:	mov    esi,DWORD PTR [ecx]
  4256d4:	cmp    DWORD PTR [eax],esi
  4256d6:	jb     0x4256f7
  4256d8:	mov    esi,DWORD PTR [edx]
  4256da:	mov    edi,DWORD PTR [edx]
  4256dc:	mov    esi,DWORD PTR [esi+0x3c]
  4256df:	lea    esi,[edi+esi*1+0x50]
  4256e3:	mov    edi,DWORD PTR [ecx]
  4256e5:	add    edi,DWORD PTR [esi]
  4256e7:	cmp    DWORD PTR [eax],edi
  4256e9:	jae    0x4256f7
  4256eb:	mov    esi,DWORD PTR [ecx]
  4256ed:	mov    ecx,DWORD PTR [eax]
  4256ef:	mov    edx,DWORD PTR [edx]
  4256f1:	sub    ecx,esi
  4256f3:	add    edx,ecx
  4256f5:	mov    DWORD PTR [eax],edx
  4256f7:	mov    eax,DWORD PTR [ebp+0xc]
  4256fa:	jmp    0x4256fe
  4256fc:	xor    eax,eax
  4256fe:	pop    edi
  4256ff:	pop    esi
  425700:	pop    ebx
  425701:	leave  
  425702:	ret    0x1c
  425705:	push   ebp
  425706:	mov    ebp,esp
  425708:	sub    esp,0x1c
  42570b:	push   esi
  42570c:	mov    esi,eax
  42570e:	mov    eax,DWORD PTR [ecx+0x190]
  425714:	cmp    DWORD PTR [eax],0x0
  425717:	je     0x425827
  42571d:	test   edx,edx
  42571f:	je     0x425827
  425725:	test   esi,esi
  425727:	je     0x425827
  42572d:	mov    eax,DWORD PTR [esi+0x88]
  425733:	test   eax,eax
  425735:	je     0x425822
  42573b:	cmp    DWORD PTR [esi+0x8c],0x10
  425742:	je     0x425822
  425748:	cmp    DWORD PTR [esi+0x34],edx
  42574b:	je     0x425822
  425751:	mov    esi,DWORD PTR [ecx+0x18c]
  425757:	and    DWORD PTR [ebp-0x10],0x0
  42575b:	mov    ecx,edx
  42575d:	sub    ecx,DWORD PTR [esi]
  42575f:	add    eax,edx
  425761:	movzx  edx,WORD PTR [eax+0xc]
  425765:	mov    DWORD PTR [ebp-0x1c],ecx
  425768:	movzx  ecx,WORD PTR [eax+0xe]
  42576c:	add    ecx,edx
  42576e:	je     0x425822
  425774:	lea    ecx,[eax+0x14]
  425777:	push   ebx
  425778:	mov    DWORD PTR [ebp-0x18],ecx
  42577b:	mov    esi,0x7fffffff
  425780:	push   edi
  425781:	test   DWORD PTR [ecx],esi
  425783:	je     0x425804
  425785:	mov    edx,DWORD PTR [ecx]
  425787:	and    DWORD PTR [ebp-0xc],0x0
  42578b:	and    edx,esi
  42578d:	add    edx,eax
  42578f:	movzx  edi,WORD PTR [edx+0xe]
  425793:	movzx  ebx,WORD PTR [edx+0xc]
  425797:	add    edi,ebx
  425799:	je     0x425804
  42579b:	lea    ecx,[edx+0x14]
  42579e:	mov    DWORD PTR [ebp-0x14],ecx
  4257a1:	test   DWORD PTR [ecx],esi
  4257a3:	je     0x4257e6
  4257a5:	mov    ecx,DWORD PTR [ecx]
  4257a7:	and    DWORD PTR [ebp-0x8],0x0
  4257ab:	and    ecx,esi
  4257ad:	add    ecx,eax
  4257af:	movzx  edi,WORD PTR [ecx+0xe]
  4257b3:	movzx  ebx,WORD PTR [ecx+0xc]
  4257b7:	add    edi,ebx
  4257b9:	je     0x4257e6
  4257bb:	lea    edi,[ecx+0x14]
  4257be:	mov    DWORD PTR [ebp-0x4],edi
  4257c1:	mov    edi,DWORD PTR [ebp-0x4]
  4257c4:	mov    edi,DWORD PTR [edi]
  4257c6:	test   edi,edi
  4257c8:	je     0x4257d0
  4257ca:	mov    ebx,DWORD PTR [ebp-0x1c]
  4257cd:	add    DWORD PTR [edi+eax*1],ebx
  4257d0:	movzx  edi,WORD PTR [ecx+0xe]
  4257d4:	movzx  ebx,WORD PTR [ecx+0xc]
  4257d8:	inc    DWORD PTR [ebp-0x8]
  4257db:	add    DWORD PTR [ebp-0x4],0x8
  4257df:	add    edi,ebx
  4257e1:	cmp    DWORD PTR [ebp-0x8],edi
  4257e4:	jb     0x4257c1
  4257e6:	movzx  edi,WORD PTR [edx+0xe]
  4257ea:	movzx  ebx,WORD PTR [edx+0xc]
  4257ee:	mov    ecx,DWORD PTR [ebp-0x14]
  4257f1:	inc    DWORD PTR [ebp-0xc]
  4257f4:	add    ecx,0x8
  4257f7:	add    edi,ebx
  4257f9:	mov    DWORD PTR [ebp-0x14],ecx
  4257fc:	cmp    DWORD PTR [ebp-0xc],edi
  4257ff:	jb     0x4257a1
  425801:	mov    ecx,DWORD PTR [ebp-0x18]
  425804:	movzx  edx,WORD PTR [eax+0xe]
  425808:	movzx  edi,WORD PTR [eax+0xc]
  42580c:	inc    DWORD PTR [ebp-0x10]
  42580f:	add    ecx,0x8
  425812:	add    edx,edi
  425814:	mov    DWORD PTR [ebp-0x18],ecx
  425817:	cmp    DWORD PTR [ebp-0x10],edx
  42581a:	jb     0x425781
  425820:	pop    edi
  425821:	pop    ebx
  425822:	xor    eax,eax
  425824:	inc    eax
  425825:	jmp    0x425829
  425827:	xor    eax,eax
  425829:	pop    esi
  42582a:	leave  
  42582b:	ret    
  42582c:	push   ebp
  42582d:	mov    ebp,esp
  42582f:	mov    ecx,DWORD PTR [ecx+0x190]
  425835:	mov    eax,DWORD PTR [ebp+0xc]
  425838:	sub    esp,0x10
  42583b:	push   ebx
  42583c:	xor    ebx,ebx
  42583e:	push   esi
  42583f:	push   edi
  425840:	cmp    DWORD PTR [ecx],ebx
  425842:	je     0x4258ca
  425848:	cmp    eax,ebx
  42584a:	je     0x4258ca
  42584c:	cmp    DWORD PTR [eax+0x78],ebx
  42584f:	jne    0x425856
  425851:	xor    eax,eax
  425853:	inc    eax
  425854:	jmp    0x4258cc
  425856:	mov    eax,DWORD PTR [eax+0x78]
  425859:	add    eax,DWORD PTR [ebp+0x8]
  42585c:	mov    ecx,DWORD PTR [eax+0x1c]
  42585f:	mov    edx,DWORD PTR [eax+0x24]
  425862:	mov    esi,DWORD PTR [eax+0x14]
  425865:	mov    edi,DWORD PTR [eax+0x18]
  425868:	add    ecx,DWORD PTR [ebp+0x8]
  42586b:	add    edx,DWORD PTR [ebp+0x8]
  42586e:	mov    DWORD PTR [ebp-0x4],esi
  425871:	cmp    esi,edi
  425873:	ja     0x425878
  425875:	mov    DWORD PTR [ebp-0x4],edi
  425878:	mov    DWORD PTR [ebp-0x8],ebx
  42587b:	cmp    DWORD PTR [ebp-0x4],ebx
  42587e:	jbe    0x425851
  425880:	cmp    ebx,DWORD PTR [eax+0x14]
  425883:	jae    0x42588b
  425885:	movzx  esi,WORD PTR [edx+ebx*2]
  425889:	jmp    0x42588d
  42588b:	mov    esi,ebx
  42588d:	lea    esi,[ecx+esi*4]
  425890:	mov    edi,DWORD PTR [esi]
  425892:	test   edi,edi
  425894:	je     0x4258bf
  425896:	add    edi,DWORD PTR [ebp+0x8]
  425899:	mov    DWORD PTR [ebp-0x10],edi
  42589c:	cmp    edi,eax
  42589e:	jbe    0x4258b0
  4258a0:	mov    ebx,DWORD PTR [ebp+0xc]
  4258a3:	mov    ebx,DWORD PTR [ebx+0x7c]
  4258a6:	add    ebx,eax
  4258a8:	cmp    edi,ebx
  4258aa:	jae    0x4258b0
  4258ac:	mov    esi,DWORD PTR [esi]
  4258ae:	jmp    0x4258b8
  4258b0:	sub    edi,DWORD PTR [ebp+0x8]
  4258b3:	mov    DWORD PTR [esi],edi
  4258b5:	mov    esi,DWORD PTR [ebp-0x10]
  4258b8:	test   esi,esi
  4258ba:	je     0x4258ca
  4258bc:	mov    ebx,DWORD PTR [ebp-0x8]
  4258bf:	inc    ebx
  4258c0:	mov    DWORD PTR [ebp-0x8],ebx
  4258c3:	cmp    ebx,DWORD PTR [ebp-0x4]
  4258c6:	jb     0x425880
  4258c8:	jmp    0x425851
  4258ca:	xor    eax,eax
  4258cc:	pop    edi
  4258cd:	pop    esi
  4258ce:	pop    ebx
  4258cf:	leave  
  4258d0:	ret    0x8
  4258d3:	push   ebp
  4258d4:	mov    ebp,esp
  4258d6:	sub    esp,0x2c
  4258d9:	mov    edx,0xf89c85b0
  4258de:	mov    DWORD PTR [ebp-0x4],edx
  4258e1:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  4258e8:	mov    eax,DWORD PTR [ebp-0x4]
  4258eb:	mov    ecx,DWORD PTR [ebp-0x4]
  4258ee:	mov    ecx,DWORD PTR [ebp-0x4]
  4258f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4258f4:	mov    ecx,DWORD PTR [ebp-0x4]
  4258f7:	mov    ecx,DWORD PTR [ebp-0x4]
  4258fa:	push   ebx
  4258fb:	mov    ebx,DWORD PTR [ebp+0x10]
  4258fe:	push   esi
  4258ff:	mov    esi,0x75108a4
  425904:	mov    DWORD PTR [ebp-0x10],0x352eb2e
  42590b:	mov    ecx,DWORD PTR [ebp-0x4]
  42590e:	mov    ebx,DWORD PTR [ebx+0x190]
  425914:	push   edi
  425915:	mov    edi,0x3272ec
  42591a:	xor    ecx,esi
  42591c:	xor    eax,esi
  42591e:	add    eax,edi
  425920:	add    ecx,edi
  425922:	mov    DWORD PTR [ebp-0x18],eax
  425925:	cmp    ecx,DWORD PTR [ebx]
  425927:	je     0x425ba8
  42592d:	mov    ebx,DWORD PTR [ebp-0x4]
  425930:	mov    ecx,DWORD PTR [ebp+0xc]
  425933:	xor    ebx,esi
  425935:	add    ebx,edi
  425937:	cmp    ebx,ecx
  425939:	je     0x425ba8
  42593f:	mov    ebx,DWORD PTR [ebp-0x4]
  425942:	mov    ecx,DWORD PTR [ecx+0x80]
  425948:	xor    ebx,esi
  42594a:	add    ebx,edi
  42594c:	cmp    ecx,ebx
  42594e:	je     0x425ba3
  425954:	add    ecx,DWORD PTR [ebp+0x8]
  425957:	mov    DWORD PTR [ebp-0x2c],ecx
  42595a:	mov    ebx,edx
  42595c:	xor    ebx,esi
  42595e:	add    ebx,edi
  425960:	mov    DWORD PTR [ebp-0x10],ebx
  425963:	mov    ebx,DWORD PTR [ebp-0x10]
  425966:	cmp    ebx,edx
  425968:	je     0x42597c
  42596a:	mov    edx,DWORD PTR [ebp-0x10]
  42596d:	mov    ebx,DWORD PTR [ebp-0x4]
  425970:	imul   edx,edx,0x14
  425973:	xor    ebx,esi
  425975:	add    ebx,edi
  425977:	cmp    DWORD PTR [edx+ecx*1],ebx
  42597a:	jne    0x425993
  42597c:	mov    edx,DWORD PTR [ebp-0x10]
  42597f:	mov    ebx,DWORD PTR [ebp-0x4]
  425982:	imul   edx,edx,0x14
  425985:	xor    ebx,esi
  425987:	add    ebx,edi
  425989:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  42598d:	je     0x425b95
  425993:	mov    eax,DWORD PTR [ebp-0x4]
  425996:	mov    ebx,DWORD PTR [ebp-0x4]
  425999:	mov    eax,DWORD PTR [ebp-0x10]
  42599c:	imul   eax,eax,0x14
  42599f:	add    eax,ecx
  4259a1:	mov    ecx,DWORD PTR [eax+0x10]
  4259a4:	add    ecx,DWORD PTR [ebp+0x8]
  4259a7:	xor    ebx,esi
  4259a9:	mov    DWORD PTR [ebp-0x1c],ecx
  4259ac:	mov    ecx,DWORD PTR [ebp-0x4]
  4259af:	mov    edx,DWORD PTR [ebp-0x4]
  4259b2:	xor    ecx,esi
  4259b4:	add    ecx,edi
  4259b6:	xor    edx,esi
  4259b8:	mov    DWORD PTR [ebp-0x24],ecx
  4259bb:	mov    ecx,DWORD PTR [eax]
  4259bd:	add    edx,edi
  4259bf:	add    ebx,edi
  4259c1:	cmp    ecx,edx
  4259c3:	je     0x4259cb
  4259c5:	add    ecx,DWORD PTR [ebp+0x8]
  4259c8:	mov    DWORD PTR [ebp-0x24],ecx
  4259cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4259ce:	xor    ecx,esi
  4259d0:	add    ecx,DWORD PTR [eax+0xc]
  4259d3:	mov    eax,DWORD PTR [ebp+0x8]
  4259d6:	lea    eax,[ecx+eax*1+0x3272ec]
  4259dd:	mov    DWORD PTR [ebp+0xc],eax
  4259e0:	mov    DWORD PTR [ebp-0x28],0xf89c85bd
  4259e7:	mov    eax,DWORD PTR [ebp+0x10]
  4259ea:	push   DWORD PTR [ebp+0xc]
  4259ed:	mov    eax,DWORD PTR [eax+0x1d8]
  4259f3:	call   DWORD PTR [eax]
  4259f5:	mov    ecx,DWORD PTR [ebp-0x4]
  4259f8:	xor    ecx,esi
  4259fa:	add    ecx,edi
  4259fc:	mov    DWORD PTR [ebp-0xc],eax
  4259ff:	cmp    ecx,eax
  425a01:	jne    0x425a15
  425a03:	mov    eax,DWORD PTR [ebp+0x10]
  425a06:	push   DWORD PTR [ebp+0xc]
  425a09:	mov    eax,DWORD PTR [eax+0x1d8]
  425a0f:	call   DWORD PTR [eax+0xc]
  425a12:	mov    DWORD PTR [ebp-0xc],eax
  425a15:	mov    DWORD PTR [ebp-0x20],0x7f661b29
  425a1c:	mov    DWORD PTR [ebp-0x20],0xf89c9859
  425a23:	mov    eax,DWORD PTR [ebp-0x4]
  425a26:	xor    eax,esi
  425a28:	add    eax,edi
  425a2a:	cmp    eax,DWORD PTR [ebp-0xc]
  425a2d:	jne    0x425a52
  425a2f:	mov    eax,DWORD PTR [ebp-0x8]
  425a32:	mov    ecx,DWORD PTR [ebp-0x20]
  425a35:	xor    eax,esi
  425a37:	xor    ecx,esi
  425a39:	lea    ebx,[ebx+eax*1+0x3272ec]
  425a40:	mov    eax,DWORD PTR [ebp+0x10]
  425a43:	mov    eax,DWORD PTR [eax+0x1d8]
  425a49:	add    ecx,edi
  425a4b:	imul   ecx,ebx
  425a4e:	push   ecx
  425a4f:	call   DWORD PTR [eax+0x24]
  425a52:	mov    eax,DWORD PTR [ebp-0x4]
  425a55:	xor    eax,esi
  425a57:	add    eax,edi
  425a59:	cmp    eax,DWORD PTR [ebp-0xc]
  425a5c:	jne    0x425a6d
  425a5e:	mov    eax,DWORD PTR [ebp-0x28]
  425a61:	xor    eax,esi
  425a63:	add    eax,edi
  425a65:	cmp    ebx,eax
  425a67:	jbe    0x4259e7
  425a6d:	mov    eax,DWORD PTR [ebp-0x4]
  425a70:	xor    eax,esi
  425a72:	add    eax,edi
  425a74:	cmp    eax,DWORD PTR [ebp-0xc]
  425a77:	jne    0x425a90
  425a79:	mov    eax,DWORD PTR [ebp-0x8]
  425a7c:	mov    ecx,DWORD PTR [ebp-0x18]
  425a7f:	xor    eax,esi
  425a81:	lea    eax,[ecx+eax*1+0x3272ec]
  425a88:	mov    DWORD PTR [ebp-0x18],eax
  425a8b:	jmp    0x425b7f
  425a90:	mov    DWORD PTR [ebp-0x14],0x1121b28
  425a97:	mov    DWORD PTR [ebp+0xc],0xe042d2e
  425a9e:	mov    ebx,DWORD PTR [ebp-0x4]
  425aa1:	xor    ebx,esi
  425aa3:	add    ebx,edi
  425aa5:	jmp    0x425b6c
  425aaa:	mov    eax,DWORD PTR [ebp-0x4]
  425aad:	xor    eax,esi
  425aaf:	add    eax,edi
  425ab1:	mov    DWORD PTR [ebp-0x14],eax
  425ab4:	mov    eax,DWORD PTR [ebp-0x4]
  425ab7:	xor    eax,esi
  425ab9:	add    eax,edi
  425abb:	mov    DWORD PTR [ebp+0xc],eax
  425abe:	mov    ecx,DWORD PTR [ebp-0x4]
  425ac1:	mov    eax,DWORD PTR [ebp-0x24]
  425ac4:	xor    ecx,esi
  425ac6:	add    ecx,edi
  425ac8:	cmp    ecx,eax
  425aca:	je     0x425ad2
  425acc:	mov    eax,DWORD PTR [eax+ebx*4]
  425acf:	mov    DWORD PTR [ebp-0x14],eax
  425ad2:	mov    eax,DWORD PTR [ebp-0x1c]
  425ad5:	mov    eax,DWORD PTR [eax+ebx*4]
  425ad8:	mov    DWORD PTR [ebp+0xc],eax
  425adb:	mov    eax,DWORD PTR [ebp-0x4]
  425ade:	mov    ecx,DWORD PTR [ebp-0x14]
  425ae1:	xor    eax,esi
  425ae3:	add    eax,edi
  425ae5:	cmp    eax,ecx
  425ae7:	je     0x425b12
  425ae9:	mov    eax,DWORD PTR [ebp-0x4]
  425aec:	mov    ecx,DWORD PTR [ebp-0x14]
  425aef:	xor    eax,esi
  425af1:	add    eax,edi
  425af3:	shr    ecx,0x1f
  425af6:	cmp    eax,ecx
  425af8:	je     0x425b12
  425afa:	mov    ecx,DWORD PTR [ebp-0x14]
  425afd:	mov    eax,DWORD PTR [ebp+0x10]
  425b00:	mov    eax,DWORD PTR [eax+0x1d8]
  425b06:	movzx  ecx,cx
  425b09:	push   ecx
  425b0a:	push   DWORD PTR [ebp-0xc]
  425b0d:	call   DWORD PTR [eax+0x8]
  425b10:	jmp    0x425b2b
  425b12:	mov    eax,DWORD PTR [ebp+0xc]
  425b15:	add    eax,DWORD PTR [ebp+0x8]
  425b18:	mov    ecx,DWORD PTR [ebp+0x10]
  425b1b:	mov    ecx,DWORD PTR [ecx+0x1d8]
  425b21:	add    eax,0x2
  425b24:	push   eax
  425b25:	push   DWORD PTR [ebp-0xc]
  425b28:	call   DWORD PTR [ecx+0x8]
  425b2b:	mov    DWORD PTR [ebp+0xc],eax
  425b2e:	mov    eax,DWORD PTR [ebp-0x4]
  425b31:	mov    ecx,DWORD PTR [ebp+0xc]
  425b34:	xor    eax,esi
  425b36:	add    eax,edi
  425b38:	cmp    eax,ecx
  425b3a:	mov    eax,DWORD PTR [ebp-0x8]
  425b3d:	jne    0x425b50
  425b3f:	mov    ecx,DWORD PTR [ebp-0x18]
  425b42:	xor    eax,esi
  425b44:	lea    eax,[ecx+eax*1+0x3272ec]
  425b4b:	mov    DWORD PTR [ebp-0x18],eax
  425b4e:	jmp    0x425b60
  425b50:	mov    ecx,DWORD PTR [ebp+0xc]
  425b53:	xor    eax,esi
  425b55:	add    eax,edi
  425b57:	imul   eax,ecx
  425b5a:	mov    ecx,DWORD PTR [ebp-0x1c]
  425b5d:	mov    DWORD PTR [ecx+ebx*4],eax
  425b60:	mov    eax,DWORD PTR [ebp-0x8]
  425b63:	xor    eax,esi
  425b65:	lea    ebx,[ebx+eax*1+0x3272ec]
  425b6c:	mov    eax,DWORD PTR [ebp-0x4]
  425b6f:	mov    ecx,DWORD PTR [ebp-0x1c]
  425b72:	xor    eax,esi
  425b74:	add    eax,edi
  425b76:	cmp    DWORD PTR [ecx+ebx*4],eax
  425b79:	jne    0x425aaa
  425b7f:	mov    edx,DWORD PTR [ebp-0x10]
  425b82:	mov    ecx,DWORD PTR [ebp-0x2c]
  425b85:	mov    eax,DWORD PTR [ebp-0x18]
  425b88:	sub    edx,0x3272eb
  425b8e:	xor    edx,esi
  425b90:	jmp    0x42595a
  425b95:	mov    ecx,DWORD PTR [ebp-0x4]
  425b98:	xor    ecx,esi
  425b9a:	add    ecx,edi
  425b9c:	cmp    eax,ecx
  425b9e:	mov    eax,DWORD PTR [ebp-0x4]
  425ba1:	jne    0x425bab
  425ba3:	mov    eax,DWORD PTR [ebp-0x8]
  425ba6:	jmp    0x425bab
  425ba8:	mov    eax,DWORD PTR [ebp-0x4]
  425bab:	xor    eax,esi
  425bad:	add    eax,edi
  425baf:	pop    edi
  425bb0:	pop    esi
  425bb1:	pop    ebx
  425bb2:	leave  
  425bb3:	ret    0xc
  425bb6:	push   ebp
  425bb7:	mov    ebp,esp
  425bb9:	sub    esp,0x28
  425bbc:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  425bc3:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  425bca:	mov    eax,DWORD PTR [ebp+0xc]
  425bcd:	mov    DWORD PTR [ebp+0xc],eax
  425bd0:	push   esi
  425bd1:	mov    eax,eax
  425bd3:	mov    eax,DWORD PTR [ebp-0x4]
  425bd6:	mov    esi,DWORD PTR [ebp+0x8]
  425bd9:	mov    ecx,0x75108a4
  425bde:	xor    eax,ecx
  425be0:	mov    edx,0x3272ec
  425be5:	add    eax,edx
  425be7:	cmp    esi,eax
  425be9:	je     0x425d10
  425bef:	mov    eax,DWORD PTR [ebp+0x8]
  425bf2:	mov    esi,DWORD PTR [ebp+0x8]
  425bf5:	add    esi,DWORD PTR [eax+0x3c]
  425bf8:	push   edi
  425bf9:	mov    DWORD PTR [ebp+0xc],esi
  425bfc:	mov    DWORD PTR [ebp-0x1c],0xf89c85bd
  425c03:	mov    eax,DWORD PTR [ebp-0x1c]
  425c06:	mov    esi,DWORD PTR [ebp-0x4]
  425c09:	mov    edi,DWORD PTR [ebp+0xc]
  425c0c:	xor    esi,ecx
  425c0e:	xor    eax,ecx
  425c10:	add    esi,edx
  425c12:	cmp    DWORD PTR [edi+eax*8+0x19397d8],esi
  425c19:	je     0x425d0a
  425c1f:	mov    esi,DWORD PTR [ebp+0xc]
  425c22:	mov    eax,DWORD PTR [ebp+0x8]
  425c25:	add    eax,DWORD PTR [esi+0xa0]
  425c2b:	mov    esi,DWORD PTR [ebp+0x8]
  425c2e:	mov    edi,DWORD PTR [ebp+0xc]
  425c31:	sub    esi,DWORD PTR [edi+0x34]
  425c34:	mov    edi,DWORD PTR [ebp-0x4]
  425c37:	xor    edi,ecx
  425c39:	add    edi,edx
  425c3b:	mov    DWORD PTR [ebp-0x24],esi
  425c3e:	cmp    esi,edi
  425c40:	je     0x425d0a
  425c46:	mov    esi,DWORD PTR [ebp-0x4]
  425c49:	xor    esi,ecx
  425c4b:	add    esi,edx
  425c4d:	mov    DWORD PTR [ebp-0x8],esi
  425c50:	push   ebx
  425c51:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  425c58:	jmp    0x425cf4
  425c5d:	mov    esi,DWORD PTR [ebp-0x4]
  425c60:	xor    esi,ecx
  425c62:	lea    edi,[ebx-0x8]
  425c65:	add    esi,edx
  425c67:	shr    edi,1
  425c69:	cmp    esi,edi
  425c6b:	jae    0x425cda
  425c6d:	sub    edi,esi
  425c6f:	lea    ebx,[eax+esi*2+0x8]
  425c73:	mov    DWORD PTR [ebp-0x18],edi
  425c76:	movzx  esi,WORD PTR [ebx]
  425c79:	and    esi,0xfff
  425c7f:	mov    DWORD PTR [ebp-0x14],esi
  425c82:	mov    edi,DWORD PTR [ebp-0x14]
  425c85:	mov    esi,DWORD PTR [eax]
  425c87:	sub    esi,edx
  425c89:	add    edi,esi
  425c8b:	movzx  esi,WORD PTR [ebx]
  425c8e:	shr    esi,0xc
  425c91:	xor    edi,ecx
  425c93:	mov    DWORD PTR [ebp-0x20],edi
  425c96:	mov    DWORD PTR [ebp-0x14],esi
  425c99:	mov    esi,DWORD PTR [ebp-0x20]
  425c9c:	mov    edi,DWORD PTR [ebp+0x8]
  425c9f:	xor    esi,ecx
  425ca1:	lea    esi,[esi+edi*1+0x3272ec]
  425ca8:	mov    DWORD PTR [ebp-0x20],esi
  425cab:	mov    esi,DWORD PTR [ebp-0x10]
  425cae:	mov    edi,DWORD PTR [ebp-0x14]
  425cb1:	xor    esi,ecx
  425cb3:	add    esi,edx
  425cb5:	cmp    edi,esi
  425cb7:	jne    0x425ccf
  425cb9:	mov    esi,DWORD PTR [ebp-0x10]
  425cbc:	mov    edi,DWORD PTR [ebp-0x14]
  425cbf:	xor    esi,ecx
  425cc1:	add    esi,edx
  425cc3:	cmp    edi,esi
  425cc5:	jne    0x425ccf
  425cc7:	mov    esi,DWORD PTR [ebp-0x20]
  425cca:	mov    edi,DWORD PTR [ebp-0x24]
  425ccd:	add    DWORD PTR [esi],edi
  425ccf:	add    ebx,0x2
  425cd2:	dec    DWORD PTR [ebp-0x18]
  425cd5:	jne    0x425c76
  425cd7:	mov    ebx,DWORD PTR [ebp-0xc]
  425cda:	add    DWORD PTR [ebp-0x8],ebx
  425cdd:	mov    esi,DWORD PTR [ebp-0x1c]
  425ce0:	mov    edi,DWORD PTR [ebp-0x8]
  425ce3:	mov    ebx,DWORD PTR [ebp+0xc]
  425ce6:	xor    esi,ecx
  425ce8:	cmp    edi,DWORD PTR [ebx+esi*8+0x19397dc]
  425cef:	jae    0x425d09
  425cf1:	add    eax,DWORD PTR [ebp-0xc]
  425cf4:	mov    esi,DWORD PTR [ebp-0x4]
  425cf7:	mov    ebx,DWORD PTR [eax+0x4]
  425cfa:	xor    esi,ecx
  425cfc:	add    esi,edx
  425cfe:	mov    DWORD PTR [ebp-0xc],ebx
  425d01:	cmp    ebx,esi
  425d03:	jne    0x425c5d
  425d09:	pop    ebx
  425d0a:	mov    eax,DWORD PTR [ebp-0x28]
  425d0d:	pop    edi
  425d0e:	jmp    0x425d13
  425d10:	mov    eax,DWORD PTR [ebp-0x4]
  425d13:	xor    eax,ecx
  425d15:	add    eax,edx
  425d17:	pop    esi
  425d18:	leave  
  425d19:	ret    0x8
  425d1c:	push   ebp
  425d1d:	mov    ebp,esp
  425d1f:	sub    esp,0xd8
  425d25:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  425d2c:	mov    DWORD PTR [ebp-0x24],0xf89c85b1
  425d33:	mov    eax,DWORD PTR [ebp-0x4]
  425d36:	push   ebx
  425d37:	push   esi
  425d38:	mov    esi,0x75108a4
  425d3d:	xor    eax,esi
  425d3f:	push   edi
  425d40:	mov    edi,0x3272ec
  425d45:	add    eax,edi
  425d47:	mov    DWORD PTR [ebp-0x18],eax
  425d4a:	mov    eax,DWORD PTR [ebp-0x4]
  425d4d:	xor    eax,esi
  425d4f:	add    eax,edi
  425d51:	mov    DWORD PTR [ebp-0x8],eax
  425d54:	mov    ebx,DWORD PTR [ebp+0x20]
  425d57:	mov    eax,DWORD PTR [ebp-0x1c]
  425d5a:	mov    ecx,DWORD PTR [ebp-0x1c]
  425d5d:	xor    eax,ecx
  425d5f:	mov    DWORD PTR [ebp-0x1c],eax
  425d62:	add    DWORD PTR [ebp-0x1c],0xf89cb5b0
  425d69:	mov    eax,DWORD PTR [ebp-0xc]
  425d6c:	mov    ecx,DWORD PTR [ebp-0xc]
  425d6f:	xor    eax,ecx
  425d71:	mov    DWORD PTR [ebp-0xc],eax
  425d74:	add    DWORD PTR [ebp-0xc],0xf89c85f0
  425d7b:	mov    eax,DWORD PTR [ebp-0x10]
  425d7e:	mov    ecx,DWORD PTR [ebp-0x10]
  425d81:	xor    eax,ecx
  425d83:	mov    DWORD PTR [ebp-0x10],eax
  425d86:	add    DWORD PTR [ebp-0x10],0xf89c85bc
  425d8d:	mov    eax,DWORD PTR [ebp-0x28]
  425d90:	mov    ecx,DWORD PTR [ebp-0x28]
  425d93:	xor    eax,ecx
  425d95:	mov    DWORD PTR [ebp-0x28],eax
  425d98:	add    DWORD PTR [ebp-0x28],0xf89f05b0
  425d9f:	mov    DWORD PTR [ebp+0x20],0xf89cefc5
  425da6:	mov    eax,DWORD PTR [ebp+0x8]
  425da9:	test   eax,eax
  425dab:	je     0x426236
  425db1:	mov    eax,DWORD PTR [ebp+0xc]
  425db4:	test   eax,eax
  425db6:	je     0x426236
  425dbc:	mov    eax,DWORD PTR [ebp+0x18]
  425dbf:	test   eax,eax
  425dc1:	je     0x426236
  425dc7:	mov    eax,DWORD PTR [ebp+0x20]
  425dca:	mov    ecx,DWORD PTR [ebp+0x8]
  425dcd:	xor    eax,0x8a4
  425dd2:	add    eax,0x72ec
  425dd7:	cmp    WORD PTR [ecx],ax
  425dda:	jne    0x426236
  425de0:	mov    eax,DWORD PTR [ebp-0x4]
  425de3:	xor    eax,esi
  425de5:	add    eax,edi
  425de7:	mov    DWORD PTR [ebp-0x30],eax
  425dea:	mov    eax,DWORD PTR [ebp-0x4]
  425ded:	mov    ecx,DWORD PTR [ebp+0x8]
  425df0:	mov    eax,DWORD PTR [ebp+0x8]
  425df3:	add    eax,DWORD PTR [ecx+0x3c]
  425df6:	mov    DWORD PTR [ebp+0xc],eax
  425df9:	mov    eax,DWORD PTR [eax+0x50]
  425dfc:	test   eax,eax
  425dfe:	je     0x426236
  425e04:	mov    DWORD PTR [ebp-0x2c],0xf88c85b0
  425e0b:	mov    eax,DWORD PTR [ebp-0x2c]
  425e0e:	xor    eax,esi
  425e10:	add    eax,edi
  425e12:	mov    DWORD PTR [ebp-0x2c],eax
  425e15:	mov    eax,DWORD PTR [ebp-0x4]
  425e18:	mov    eax,DWORD PTR [ebx+0x190]
  425e1e:	mov    ecx,DWORD PTR [eax]
  425e20:	mov    ecx,DWORD PTR [ecx+0x3c]
  425e23:	add    ecx,DWORD PTR [eax]
  425e25:	mov    eax,DWORD PTR [ebp-0x4]
  425e28:	mov    eax,DWORD PTR [ebx+0x18c]
  425e2e:	mov    edx,DWORD PTR [eax]
  425e30:	mov    DWORD PTR [ebp-0x20],ecx
  425e33:	mov    DWORD PTR [ebp+0x20],edx
  425e36:	cmp    edx,edx
  425e38:	jne    0x425e6c
  425e3a:	mov    eax,DWORD PTR [ebx+0x1d8]
  425e40:	lea    edx,[ebp-0x18]
  425e43:	push   edx
  425e44:	mov    edx,DWORD PTR [ebp-0xc]
  425e47:	xor    edx,esi
  425e49:	add    edx,edi
  425e4b:	push   edx
  425e4c:	push   DWORD PTR [ecx+0x50]
  425e4f:	push   DWORD PTR [ebp+0x20]
  425e52:	call   DWORD PTR [eax+0x1c]
  425e55:	mov    eax,DWORD PTR [ebp-0x20]
  425e58:	mov    ecx,DWORD PTR [eax+0x54]
  425e5b:	mov    eax,DWORD PTR [eax+0x50]
  425e5e:	sub    eax,ecx
  425e60:	add    ecx,DWORD PTR [ebp+0x20]
  425e63:	push   ecx
  425e64:	call   0x4267d3
  425e69:	mov    edx,DWORD PTR [ebp+0x20]
  425e6c:	mov    eax,DWORD PTR [ebx+0x194]
  425e72:	mov    DWORD PTR [eax],edx
  425e74:	mov    eax,DWORD PTR [ebp+0xc]
  425e77:	push   DWORD PTR [eax+0x54]
  425e7a:	push   DWORD PTR [ebp+0x8]
  425e7d:	push   edx
  425e7e:	call   0x4266c9
  425e83:	mov    ecx,DWORD PTR [ebp+0x20]
  425e86:	mov    eax,DWORD PTR [ecx+0x3c]
  425e89:	add    eax,ecx
  425e8b:	movzx  ecx,WORD PTR [eax+0x14]
  425e8f:	lea    ecx,[ecx+eax*1+0x18]
  425e93:	mov    DWORD PTR [ebp+0x18],ecx
  425e96:	mov    ecx,DWORD PTR [ebp-0x4]
  425e99:	movzx  edx,WORD PTR [eax+0x6]
  425e9d:	xor    ecx,esi
  425e9f:	add    ecx,edi
  425ea1:	mov    DWORD PTR [ebp+0xc],eax
  425ea4:	cmp    edx,ecx
  425ea6:	je     0x425f53
  425eac:	mov    ecx,DWORD PTR [ebp-0x4]
  425eaf:	xor    ecx,esi
  425eb1:	add    ecx,edi
  425eb3:	mov    DWORD PTR [ebp-0x8],ecx
  425eb6:	mov    ecx,DWORD PTR [ebp-0x24]
  425eb9:	movzx  edx,WORD PTR [eax+0x6]
  425ebd:	xor    ecx,esi
  425ebf:	sub    edx,ecx
  425ec1:	sub    edx,edi
  425ec3:	cmp    DWORD PTR [ebp-0x8],edx
  425ec6:	ja     0x425f53
  425ecc:	mov    edx,DWORD PTR [ebp+0x18]
  425ecf:	add    edx,0x8
  425ed2:	mov    DWORD PTR [ebp+0x18],edx
  425ed5:	jmp    0x425eda
  425ed7:	mov    edx,DWORD PTR [ebp+0x18]
  425eda:	mov    eax,DWORD PTR [eax+0x38]
  425edd:	lea    ecx,[eax-0x1]
  425ee0:	mov    DWORD PTR [ebp-0x38],eax
  425ee3:	mov    eax,DWORD PTR [edx]
  425ee5:	test   eax,ecx
  425ee7:	je     0x425ef0
  425ee9:	not    ecx
  425eeb:	and    eax,ecx
  425eed:	add    eax,DWORD PTR [ebp-0x38]
  425ef0:	mov    ecx,DWORD PTR [edx+0x4]
  425ef3:	add    ecx,DWORD PTR [ebp+0x20]
  425ef6:	push   ecx
  425ef7:	call   0x4267d3
  425efc:	mov    edx,DWORD PTR [ebp-0x4]
  425eff:	mov    eax,DWORD PTR [ebp+0x18]
  425f02:	mov    ecx,DWORD PTR [eax+0x8]
  425f05:	xor    edx,esi
  425f07:	add    edx,edi
  425f09:	cmp    ecx,edx
  425f0b:	je     0x425f24
  425f0d:	push   ecx
  425f0e:	mov    ecx,DWORD PTR [ebp+0x8]
  425f11:	add    ecx,DWORD PTR [eax+0xc]
  425f14:	mov    eax,DWORD PTR [eax+0x4]
  425f17:	add    eax,DWORD PTR [ebp+0x20]
  425f1a:	push   ecx
  425f1b:	push   eax
  425f1c:	call   0x4266c9
  425f21:	mov    eax,DWORD PTR [ebp+0x18]
  425f24:	mov    ecx,DWORD PTR [ebp-0x24]
  425f27:	mov    edx,DWORD PTR [ebp-0x8]
  425f2a:	add    eax,0x28
  425f2d:	xor    ecx,esi
  425f2f:	lea    ecx,[edx+ecx*1+0x3272ec]
  425f36:	mov    edx,DWORD PTR [ebp+0xc]
  425f39:	mov    DWORD PTR [ebp+0x18],eax
  425f3c:	mov    eax,DWORD PTR [ebp-0x24]
  425f3f:	movzx  edx,WORD PTR [edx+0x6]
  425f43:	xor    eax,esi
  425f45:	sub    edx,eax
  425f47:	mov    eax,DWORD PTR [ebp+0xc]
  425f4a:	sub    edx,edi
  425f4c:	mov    DWORD PTR [ebp-0x8],ecx
  425f4f:	cmp    ecx,edx
  425f51:	jbe    0x425ed7
  425f53:	mov    edx,DWORD PTR [ebx+0x18c]
  425f59:	mov    ecx,DWORD PTR [ebp+0x20]
  425f5c:	cmp    ecx,DWORD PTR [edx]
  425f5e:	jne    0x425f87
  425f60:	mov    eax,DWORD PTR [ebx+0x1d8]
  425f66:	lea    edx,[ebp-0x18]
  425f69:	push   edx
  425f6a:	mov    edx,DWORD PTR [ebp-0x10]
  425f6d:	xor    edx,esi
  425f6f:	add    edx,edi
  425f71:	push   edx
  425f72:	mov    edx,DWORD PTR [ebp-0x20]
  425f75:	push   DWORD PTR [edx+0x54]
  425f78:	push   ecx
  425f79:	call   DWORD PTR [eax+0x1c]
  425f7c:	test   eax,eax
  425f7e:	je     0x426227
  425f84:	mov    eax,DWORD PTR [ebp+0xc]
  425f87:	mov    ecx,DWORD PTR [ebx+0x1c8]
  425f8d:	mov    ecx,DWORD PTR [ecx]
  425f8f:	xor    ecx,esi
  425f91:	add    ecx,edi
  425f93:	je     0x426152
  425f99:	mov    eax,DWORD PTR [ebp-0x4]
  425f9c:	xor    eax,esi
  425f9e:	add    eax,edi
  425fa0:	and    DWORD PTR [ebp+0x8],0x0
  425fa4:	mov    DWORD PTR [ebp-0x14],eax
  425fa7:	mov    ecx,0xf89c8524
  425fac:	mov    eax,0xf89c85dc
  425fb1:	mov    DWORD PTR [ebp-0x58],0xf89c8526
  425fb8:	mov    DWORD PTR [ebp-0x54],0xf89c852c
  425fbf:	mov    DWORD PTR [ebp-0x50],eax
  425fc2:	mov    DWORD PTR [ebp-0x4c],ecx
  425fc5:	mov    DWORD PTR [ebp-0x48],ecx
  425fc8:	mov    DWORD PTR [ebp-0x44],0xf89c85b0
  425fcf:	mov    edx,DWORD PTR [ebp+0x8]
  425fd2:	mov    ecx,0x8a4
  425fd7:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  425fdc:	mov    edx,0x72ec
  425fe1:	add    cx,dx
  425fe4:	mov    edx,DWORD PTR [ebp+0x8]
  425fe7:	inc    DWORD PTR [ebp+0x8]
  425fea:	cmp    DWORD PTR [ebp+0x8],0x6
  425fee:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  425ff6:	jb     0x425fcf
  425ff8:	mov    ecx,0xf89c8522
  425ffd:	mov    DWORD PTR [ebp-0xb0],eax
  426003:	mov    DWORD PTR [ebp-0x9c],eax
  426009:	mov    DWORD PTR [ebp-0x74],eax
  42600c:	mov    DWORD PTR [ebp-0x70],eax
  42600f:	lea    eax,[ecx+0x1]
  426012:	mov    edx,0xf89c85fe
  426017:	mov    DWORD PTR [ebp-0x64],eax
  42601a:	mov    DWORD PTR [ebp-0x60],eax
  42601d:	mov    DWORD PTR [ebp-0xb4],0xf89c85c4
  426027:	mov    DWORD PTR [ebp-0xac],ecx
  42602d:	mov    DWORD PTR [ebp-0xa8],edx
  426033:	mov    DWORD PTR [ebp-0xa4],0xf89c85d9
  42603d:	mov    DWORD PTR [ebp-0xa0],0xf89c8526
  426047:	mov    DWORD PTR [ebp-0x98],0xf89c85fd
  426051:	mov    DWORD PTR [ebp-0x94],0xf89c8526
  42605b:	mov    DWORD PTR [ebp-0x90],0xf89c852c
  426065:	mov    DWORD PTR [ebp-0x8c],ecx
  42606b:	mov    DWORD PTR [ebp-0x88],0xf89c8529
  426075:	mov    DWORD PTR [ebp-0x84],edx
  42607b:	mov    DWORD PTR [ebp-0x80],0xf89c8527
  426082:	mov    DWORD PTR [ebp-0x7c],ecx
  426085:	mov    DWORD PTR [ebp-0x78],0xf89c85f1
  42608c:	mov    DWORD PTR [ebp-0x6c],ecx
  42608f:	mov    DWORD PTR [ebp-0x68],0xf89c85dd
  426096:	mov    DWORD PTR [ebp-0x5c],0xf89c85b0
  42609d:	xor    eax,eax
  42609f:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4260a6:	xor    cl,0xa4
  4260a9:	sub    cl,0x14
  4260ac:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  4260b3:	inc    eax
  4260b4:	cmp    eax,0x17
  4260b7:	jb     0x42609f
  4260b9:	mov    eax,DWORD PTR [ebx+0x1d8]
  4260bf:	lea    ecx,[ebp-0xc0]
  4260c5:	push   ecx
  4260c6:	call   DWORD PTR [eax+0x4]
  4260c9:	mov    ecx,DWORD PTR [ebx+0x1d8]
  4260cf:	lea    edx,[ebp-0xd8]
  4260d5:	push   edx
  4260d6:	push   eax
  4260d7:	call   DWORD PTR [ecx+0x8]
  4260da:	mov    DWORD PTR [ebp-0x40],eax
  4260dd:	lea    eax,[ebp-0x14]
  4260e0:	push   eax
  4260e1:	mov    eax,DWORD PTR [ebx+0x18c]
  4260e7:	push   DWORD PTR [eax]
  4260e9:	mov    eax,DWORD PTR [ebp-0x40]
  4260ec:	call   eax
  4260ee:	mov    eax,DWORD PTR [ebp-0x4]
  4260f1:	xor    eax,esi
  4260f3:	add    eax,edi
  4260f5:	mov    DWORD PTR [ebp-0x34],eax
  4260f8:	mov    ecx,DWORD PTR [ebp-0x4]
  4260fb:	mov    eax,DWORD PTR [ebp-0x14]
  4260fe:	xor    ecx,esi
  426100:	add    ecx,edi
  426102:	cmp    eax,ecx
  426104:	je     0x42614f
  426106:	mov    DWORD PTR [ebp-0x3c],eax
  426109:	jmp    0x42611a
  42610b:	mov    eax,DWORD PTR [eax]
  42610d:	mov    ecx,DWORD PTR [ebp-0x3c]
  426110:	mov    DWORD PTR [ebp-0x14],eax
  426113:	mov    eax,DWORD PTR [ebp-0x14]
  426116:	cmp    eax,ecx
  426118:	je     0x426127
  42611a:	mov    edx,DWORD PTR [eax+0x18]
  42611d:	mov    ecx,DWORD PTR [ebx+0x18c]
  426123:	cmp    edx,DWORD PTR [ecx]
  426125:	jne    0x42610b
  426127:	mov    ecx,DWORD PTR [ebx+0x18c]
  42612d:	mov    edx,DWORD PTR [eax+0x18]
  426130:	cmp    edx,DWORD PTR [ecx]
  426132:	jne    0x42614f
  426134:	mov    ecx,DWORD PTR [ebx+0x190]
  42613a:	mov    edx,DWORD PTR [ebp-0x20]
  42613d:	mov    edx,DWORD PTR [edx+0x28]
  426140:	add    edx,DWORD PTR [ecx]
  426142:	mov    DWORD PTR [eax+0x1c],edx
  426145:	mov    eax,DWORD PTR [ebp-0x24]
  426148:	xor    eax,esi
  42614a:	add    eax,edi
  42614c:	mov    DWORD PTR [ebp-0x34],eax
  42614f:	mov    eax,DWORD PTR [ebp+0xc]
  426152:	push   ebx
  426153:	push   eax
  426154:	push   DWORD PTR [ebp+0x20]
  426157:	call   0x4258d3
  42615c:	test   eax,eax
  42615e:	je     0x426227
  426164:	push   DWORD PTR [ebp+0xc]
  426167:	mov    ecx,ebx
  426169:	push   DWORD PTR [ebp+0x20]
  42616c:	call   0x42582c
  426171:	test   eax,eax
  426173:	je     0x426227
  426179:	mov    eax,DWORD PTR [ebp+0xc]
  42617c:	mov    edx,DWORD PTR [ebp+0x20]
  42617f:	mov    ecx,ebx
  426181:	call   0x425705
  426186:	test   eax,eax
  426188:	je     0x426227
  42618e:	push   ebx
  42618f:	push   DWORD PTR [ebp+0x20]
  426192:	call   0x425bb6
  426197:	test   eax,eax
  426199:	je     0x426227
  42619f:	mov    eax,DWORD PTR [ebx+0x18c]
  4261a5:	mov    edx,DWORD PTR [ebp+0x20]
  4261a8:	cmp    edx,DWORD PTR [eax]
  4261aa:	jne    0x4261c6
  4261ac:	mov    eax,DWORD PTR [ebx+0x1d8]
  4261b2:	lea    ecx,[ebp-0x18]
  4261b5:	push   ecx
  4261b6:	push   DWORD PTR [ebp-0x18]
  4261b9:	mov    ecx,DWORD PTR [ebp-0x20]
  4261bc:	push   DWORD PTR [ecx+0x54]
  4261bf:	push   edx
  4261c0:	call   DWORD PTR [eax+0x1c]
  4261c3:	mov    edx,DWORD PTR [ebp+0x20]
  4261c6:	mov    eax,DWORD PTR [ebx+0x1c8]
  4261cc:	mov    eax,DWORD PTR [eax]
  4261ce:	xor    eax,esi
  4261d0:	add    eax,edi
  4261d2:	je     0x42620b
  4261d4:	mov    ecx,DWORD PTR [ebp+0xc]
  4261d7:	mov    eax,DWORD PTR [ecx+0x28]
  4261da:	mov    DWORD PTR [ebp+0x8],0xf89ca5b0
  4261e1:	mov    esi,DWORD PTR [ebp+0x8]
  4261e4:	push   DWORD PTR [ebp+0x14]
  4261e7:	xor    esi,0x8a4
  4261ed:	push   DWORD PTR [ebp+0x10]
  4261f0:	add    esi,0x72ec
  4261f6:	or     WORD PTR [ecx+0x16],si
  4261fa:	add    eax,edx
  4261fc:	push   edx
  4261fd:	call   eax
  4261ff:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b1
  426209:	jmp    0x426215
  42620b:	mov    eax,DWORD PTR [ebp+0xc]
  42620e:	mov    eax,DWORD PTR [eax+0x28]
  426211:	add    eax,edx
  426213:	call   eax
  426215:	mov    DWORD PTR [ebp-0x8],eax
  426218:	mov    eax,DWORD PTR [ebp-0x8]
  42621b:	mov    ecx,DWORD PTR [ebp+0x1c]
  42621e:	mov    DWORD PTR [ecx],eax
  426220:	mov    DWORD PTR [ebp-0x30],0x1
  426227:	cmp    DWORD PTR [ebp-0x30],0x0
  42622b:	jne    0x426231
  42622d:	and    DWORD PTR [ebp+0x20],0x0
  426231:	mov    eax,DWORD PTR [ebp+0x20]
  426234:	jmp    0x426238
  426236:	xor    eax,eax
  426238:	pop    edi
  426239:	pop    esi
  42623a:	pop    ebx
  42623b:	leave  
  42623c:	ret    0x1c
  42623f:	push   ebp
  426240:	mov    ebp,esp
  426242:	movzx  edx,WORD PTR [ecx+0x6]
  426246:	movzx  eax,WORD PTR [ecx+0x14]
  42624a:	push   ebx
  42624b:	push   edi
  42624c:	xor    edi,edi
  42624e:	lea    eax,[eax+ecx*1+0x18]
  426252:	test   edx,edx
  426254:	je     0x426275
  426256:	mov    ecx,DWORD PTR [eax+0xc]
  426259:	lea    ebx,[ecx+esi*1]
  42625c:	cmp    DWORD PTR [ebp+0x8],ebx
  42625f:	jb     0x42626d
  426261:	mov    ebx,DWORD PTR [eax+0x8]
  426264:	add    ebx,ecx
  426266:	add    ebx,esi
  426268:	cmp    DWORD PTR [ebp+0x8],ebx
  42626b:	jb     0x426277
  42626d:	add    eax,0x28
  426270:	inc    edi
  426271:	cmp    edi,edx
  426273:	jb     0x426256
  426275:	xor    eax,eax
  426277:	pop    edi
  426278:	pop    ebx
  426279:	pop    ebp
  42627a:	ret    0x4
  42627d:	push   ebp
  42627e:	mov    ebp,esp
  426280:	sub    esp,0x34
  426283:	mov    DWORD PTR [ebp-0xc],0xf89c85b0
  42628a:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  426291:	mov    DWORD PTR [ebp-0x1c],0xf89c85b2
  426298:	mov    DWORD PTR [ebp-0x8],0xf89c85d1
  42629f:	mov    DWORD PTR [ebp-0x20],0xf89c85f1
  4262a6:	mov    DWORD PTR [ebp-0x2c],0xf89c852a
  4262ad:	mov    DWORD PTR [ebp-0x2c],0xf89c85ca
  4262b4:	mov    DWORD PTR [ebp-0x10],eax
  4262b7:	mov    eax,DWORD PTR [ebp+0x8]
  4262ba:	mov    DWORD PTR [ebp-0x14],eax
  4262bd:	mov    eax,DWORD PTR [ebp-0xc]
  4262c0:	push   ebx
  4262c1:	mov    ecx,0x75108a4
  4262c6:	xor    eax,ecx
  4262c8:	push   esi
  4262c9:	mov    esi,DWORD PTR [ebp-0x10]
  4262cc:	mov    edx,0x3272ec
  4262d1:	add    eax,edx
  4262d3:	push   edi
  4262d4:	cmp    esi,eax
  4262d6:	je     0x4264b5
  4262dc:	mov    eax,DWORD PTR [ebp-0xc]
  4262df:	mov    esi,DWORD PTR [ebp-0x14]
  4262e2:	xor    eax,ecx
  4262e4:	add    eax,edx
  4262e6:	cmp    esi,eax
  4262e8:	je     0x4264b5
  4262ee:	mov    eax,DWORD PTR [ebp-0xc]
  4262f1:	xor    eax,ecx
  4262f3:	add    eax,edx
  4262f5:	mov    DWORD PTR [ebp-0x24],eax
  4262f8:	mov    eax,DWORD PTR [ebp-0xc]
  4262fb:	xor    eax,ecx
  4262fd:	add    eax,edx
  4262ff:	mov    DWORD PTR [ebp-0x28],eax
  426302:	mov    edi,DWORD PTR [ebp-0x20]
  426305:	mov    ebx,DWORD PTR [ebp-0x8]
  426308:	mov    esi,0x8a4
  42630d:	xor    edi,esi
  42630f:	mov    eax,0x72ec
  426314:	xor    ebx,esi
  426316:	add    edi,eax
  426318:	add    ebx,eax
  42631a:	sub    ebx,edi
  42631c:	mov    WORD PTR [ebp-0x8],bx
  426320:	jmp    0x4263e5
  426325:	mov    edi,DWORD PTR [ebp-0xc]
  426328:	mov    bx,WORD PTR [ebp-0x4]
  42632c:	xor    edi,esi
  42632e:	add    edi,eax
  426330:	cmp    bx,di
  426333:	je     0x426427
  426339:	mov    edi,DWORD PTR [ebp-0xc]
  42633c:	mov    ebx,DWORD PTR [ebp+0xc]
  42633f:	xor    edi,ecx
  426341:	add    edi,edx
  426343:	cmp    ebx,edi
  426345:	mov    di,WORD PTR [ebp-0x4]
  426349:	mov    bx,WORD PTR [ebp+0x8]
  42634d:	je     0x4263b8
  42634f:	cmp    bx,di
  426352:	je     0x4263c1
  426354:	mov    edi,DWORD PTR [ebp-0x20]
  426357:	mov    bx,WORD PTR [ebp+0x8]
  42635b:	xor    edi,esi
  42635d:	add    edi,eax
  42635f:	cmp    bx,di
  426362:	jb     0x426382
  426364:	mov    edi,DWORD PTR [ebp-0x2c]
  426367:	mov    bx,WORD PTR [ebp+0x8]
  42636b:	xor    edi,esi
  42636d:	add    edi,eax
  42636f:	cmp    bx,di
  426372:	ja     0x426382
  426374:	movzx  edi,WORD PTR [ebp+0x8]
  426378:	movzx  ebx,WORD PTR [ebp-0x8]
  42637c:	add    edi,ebx
  42637e:	mov    WORD PTR [ebp+0x8],di
  426382:	mov    edi,DWORD PTR [ebp-0x20]
  426385:	mov    bx,WORD PTR [ebp-0x4]
  426389:	xor    edi,esi
  42638b:	add    edi,eax
  42638d:	cmp    bx,di
  426390:	jb     0x4263b0
  426392:	mov    edi,DWORD PTR [ebp-0x2c]
  426395:	mov    bx,WORD PTR [ebp-0x4]
  426399:	xor    edi,esi
  42639b:	add    edi,eax
  42639d:	cmp    bx,di
  4263a0:	ja     0x4263b0
  4263a2:	movzx  edi,WORD PTR [ebp-0x4]
  4263a6:	movzx  ebx,WORD PTR [ebp-0x8]
  4263aa:	add    edi,ebx
  4263ac:	mov    WORD PTR [ebp-0x4],di
  4263b0:	mov    di,WORD PTR [ebp-0x4]
  4263b4:	mov    bx,WORD PTR [ebp+0x8]
  4263b8:	cmp    bx,di
  4263bb:	jne    0x4264b5
  4263c1:	mov    edi,DWORD PTR [ebp-0x1c]
  4263c4:	mov    ebx,DWORD PTR [ebp-0x10]
  4263c7:	xor    edi,ecx
  4263c9:	lea    edi,[edi+ebx*1+0x3272ec]
  4263d0:	mov    DWORD PTR [ebp-0x10],edi
  4263d3:	mov    edi,DWORD PTR [ebp-0x1c]
  4263d6:	mov    ebx,DWORD PTR [ebp-0x14]
  4263d9:	xor    edi,ecx
  4263db:	lea    edi,[edi+ebx*1+0x3272ec]
  4263e2:	mov    DWORD PTR [ebp-0x14],edi
  4263e5:	mov    edi,DWORD PTR [ebp-0x24]
  4263e8:	mov    ebx,DWORD PTR [ebp-0x10]
  4263eb:	mov    di,WORD PTR [ebx+edi*2]
  4263ef:	mov    WORD PTR [ebp+0x8],di
  4263f3:	mov    edi,DWORD PTR [ebp-0x28]
  4263f6:	mov    ebx,DWORD PTR [ebp-0x14]
  4263f9:	mov    di,WORD PTR [ebx+edi*2]
  4263fd:	mov    WORD PTR [ebp-0x4],di
  426401:	mov    edi,DWORD PTR [ebp-0xc]
  426404:	mov    bx,WORD PTR [ebp+0x8]
  426408:	xor    edi,esi
  42640a:	add    edi,eax
  42640c:	cmp    bx,di
  42640f:	jne    0x426325
  426415:	mov    eax,DWORD PTR [ebp-0x18]
  426418:	mov    esi,DWORD PTR [ebp-0xc]
  42641b:	xor    eax,ecx
  42641d:	add    eax,edx
  42641f:	imul   eax,esi
  426422:	mov    DWORD PTR [ebp-0xc],eax
  426425:	jmp    0x426439
  426427:	mov    eax,DWORD PTR [ebp-0xc]
  42642a:	mov    esi,DWORD PTR [ebp-0x18]
  42642d:	xor    eax,ecx
  42642f:	lea    eax,[eax+esi*1+0x3272ec]
  426436:	mov    DWORD PTR [ebp-0x18],eax
  426439:	mov    eax,DWORD PTR [ebp-0x24]
  42643c:	sub    eax,edx
  42643e:	xor    eax,ecx
  426440:	mov    DWORD PTR [ebp-0x30],eax
  426443:	mov    eax,DWORD PTR [ebp-0x28]
  426446:	sub    eax,edx
  426448:	xor    eax,ecx
  42644a:	mov    DWORD PTR [ebp-0x34],eax
  42644d:	mov    eax,DWORD PTR [ebp-0x34]
  426450:	mov    esi,DWORD PTR [ebp-0x1c]
  426453:	xor    esi,ecx
  426455:	add    esi,edx
  426457:	xor    eax,ecx
  426459:	add    eax,0x3272ec
  42645e:	imul   esi,eax
  426461:	mov    eax,DWORD PTR [ebp-0x14]
  426464:	movzx  eax,WORD PTR [esi+eax*1]
  426468:	mov    esi,DWORD PTR [ebp-0x30]
  42646b:	mov    edi,DWORD PTR [ebp-0x1c]
  42646e:	xor    esi,ecx
  426470:	add    esi,edx
  426472:	xor    edi,ecx
  426474:	add    edi,edx
  426476:	imul   edi,esi
  426479:	mov    esi,DWORD PTR [ebp-0x10]
  42647c:	movzx  esi,WORD PTR [edi+esi*1]
  426480:	sub    eax,edx
  426482:	sub    esi,edx
  426484:	xor    eax,ecx
  426486:	xor    esi,ecx
  426488:	cmp    esi,eax
  42648a:	jne    0x4264b5
  42648c:	mov    eax,DWORD PTR [ebp-0x30]
  42648f:	mov    esi,DWORD PTR [ebp-0x1c]
  426492:	xor    eax,ecx
  426494:	add    eax,0x3272ec
  426499:	xor    esi,ecx
  42649b:	add    esi,edx
  42649d:	imul   esi,eax
  4264a0:	mov    eax,DWORD PTR [ebp-0x10]
  4264a3:	movzx  eax,WORD PTR [esi+eax*1]
  4264a7:	mov    esi,DWORD PTR [ebp-0xc]
  4264aa:	sub    eax,edx
  4264ac:	xor    eax,ecx
  4264ae:	cmp    eax,esi
  4264b0:	mov    eax,DWORD PTR [ebp-0xc]
  4264b3:	je     0x4264b8
  4264b5:	mov    eax,DWORD PTR [ebp-0x18]
  4264b8:	pop    edi
  4264b9:	xor    eax,ecx
  4264bb:	pop    esi
  4264bc:	add    eax,edx
  4264be:	pop    ebx
  4264bf:	leave  
  4264c0:	ret    0x8
  4264c3:	push   ebp
  4264c4:	mov    ebp,esp
  4264c6:	push   ecx
  4264c7:	mov    cx,WORD PTR [eax]
  4264ca:	push   esi
  4264cb:	mov    esi,0x3b56
  4264d0:	sub    cx,si
  4264d3:	mov    esi,0x8a94
  4264d8:	xor    cx,si
  4264db:	mov    esi,0x4e3e
  4264e0:	mov    DWORD PTR [ebp-0x4],0xf89c85b7
  4264e7:	mov    edx,0xf89c85b0
  4264ec:	cmp    cx,si
  4264ef:	je     0x42654e
  4264f1:	push   ebx
  4264f2:	push   edi
  4264f3:	movzx  ecx,cx
  4264f6:	mov    edi,0xffcd8d14
  4264fb:	mov    esi,0x75108a4
  426500:	mov    ebx,0x4f92
  426505:	cmp    cx,bx
  426508:	jne    0x42650d
  42650a:	mov    DWORD PTR [ebp-0x4],edx
  42650d:	lea    edx,[edi+0x1]
  426510:	xor    edx,esi
  426512:	mov    edi,edx
  426514:	xor    edi,esi
  426516:	mov    cx,WORD PTR [eax+edi*2+0x64e5d8]
  42651e:	mov    ebx,0x3b56
  426523:	sub    cx,bx
  426526:	mov    ebx,0x8a94
  42652b:	xor    cx,bx
  42652e:	mov    ebx,0x4e3e
  426533:	cmp    cx,bx
  426536:	jne    0x426500
  426538:	mov    ecx,DWORD PTR [ebp-0x4]
  42653b:	pop    edi
  42653c:	pop    ebx
  42653d:	cmp    ecx,0xf89c85b7
  426543:	je     0x42654e
  426545:	xor    ecx,esi
  426547:	lea    eax,[eax+ecx*2+0x64e5da]
  42654e:	pop    esi
  42654f:	leave  
  426550:	ret    
  426551:	push   ebp
  426552:	mov    ebp,esp
  426554:	push   ecx
  426555:	push   esi
  426556:	push   edi
  426557:	mov    DWORD PTR [ebp-0x4],0xf89c85b7
  42655e:	mov    esi,0xf89c85b0
  426563:	call   0x4264c3
  426568:	mov    edi,eax
  42656a:	mov    al,BYTE PTR [edi]
  42656c:	add    al,0x3
  42656e:	xor    al,0x79
  426570:	cmp    al,0x7a
  426572:	je     0x4265d5
  426574:	mov    eax,edi
  426576:	mov    edx,0xffcd8d14
  42657b:	mov    ecx,0x75108a4
  426580:	push   ebx
  426581:	mov    ax,WORD PTR [eax]
  426584:	mov    ebx,0x3b56
  426589:	sub    ax,bx
  42658c:	mov    ebx,0x8a94
  426591:	xor    ax,bx
  426594:	mov    ebx,0x4e4c
  426599:	cmp    ax,bx
  42659c:	jne    0x4265a1
  42659e:	mov    DWORD PTR [ebp-0x4],esi
  4265a1:	lea    esi,[edx+0x1]
  4265a4:	xor    esi,ecx
  4265a6:	mov    edx,esi
  4265a8:	xor    edx,ecx
  4265aa:	lea    eax,[edi+edx*2+0x64e5d8]
  4265b1:	mov    bl,BYTE PTR [eax]
  4265b3:	add    bl,0x3
  4265b6:	xor    bl,0x79
  4265b9:	cmp    bl,0x7a
  4265bc:	jne    0x426581
  4265be:	mov    eax,DWORD PTR [ebp-0x4]
  4265c1:	pop    ebx
  4265c2:	cmp    eax,0xf89c85b7
  4265c7:	je     0x4265d5
  4265c9:	xor    eax,ecx
  4265cb:	xor    ecx,ecx
  4265cd:	mov    WORD PTR [edi+eax*2+0x64e5d8],cx
  4265d5:	mov    eax,edi
  4265d7:	pop    edi
  4265d8:	pop    esi
  4265d9:	leave  
  4265da:	ret    
  4265db:	push   ebp
  4265dc:	mov    ebp,esp
  4265de:	push   ecx
  4265df:	push   esi
  4265e0:	mov    DWORD PTR [ebp-0x4],0xf89c85b7
  4265e7:	mov    esi,0xf89c85b0
  4265ec:	call   0x4264c3
  4265f1:	mov    cx,WORD PTR [eax]
  4265f4:	mov    edx,0x3b56
  4265f9:	sub    cx,dx
  4265fc:	mov    edx,0x8a94
  426601:	xor    cx,dx
  426604:	mov    edx,0x4e3e
  426609:	cmp    cx,dx
  42660c:	je     0x426665
  42660e:	push   ebx
  42660f:	push   edi
  426610:	movzx  ecx,cx
  426613:	mov    edx,0xffcd8d14
  426618:	mov    edi,0x75108a4
  42661d:	mov    ebx,0x4e4c
  426622:	cmp    cx,bx
  426625:	jne    0x42662a
  426627:	mov    DWORD PTR [ebp-0x4],esi
  42662a:	lea    esi,[edx+0x1]
  42662d:	xor    esi,edi
  42662f:	mov    edx,esi
  426631:	xor    edx,edi
  426633:	mov    cx,WORD PTR [eax+edx*2+0x64e5d8]
  42663b:	mov    ebx,0x3b56
  426640:	sub    cx,bx
  426643:	mov    ebx,0x8a94
  426648:	xor    cx,bx
  42664b:	mov    ebx,0x4e3e
  426650:	cmp    cx,bx
  426653:	jne    0x42661d
  426655:	cmp    DWORD PTR [ebp-0x4],0xf89c85b7
  42665c:	pop    edi
  42665d:	pop    ebx
  42665e:	je     0x426665
  426660:	xor    eax,eax
  426662:	inc    eax
  426663:	jmp    0x426667
  426665:	xor    eax,eax
  426667:	pop    esi
  426668:	leave  
  426669:	ret    
  42666a:	push   ebp
  42666b:	mov    ebp,esp
  42666d:	push   ecx
  42666e:	mov    eax,DWORD PTR [ebp+0x8]
  426671:	movzx  ecx,WORD PTR [eax]
  426674:	push   esi
  426675:	lea    eax,[ecx-0x3b56]
  42667b:	mov    esi,0x8a94
  426680:	push   edi
  426681:	xor    eax,esi
  426683:	mov    edi,0x4e3e
  426688:	mov    DWORD PTR [ebp-0x4],edx
  42668b:	cmp    ax,di
  42668e:	je     0x4266bb
  426690:	mov    eax,DWORD PTR [ebp+0x8]
  426693:	sub    eax,edx
  426695:	mov    DWORD PTR [ebp+0x8],eax
  426698:	jmp    0x42669d
  42669a:	mov    eax,DWORD PTR [ebp+0x8]
  42669d:	mov    WORD PTR [edx],cx
  4266a0:	add    edx,0x2
  4266a3:	movzx  edi,WORD PTR [eax+edx*1]
  4266a7:	mov    ecx,edi
  4266a9:	add    edi,0xffffc4aa
  4266af:	xor    edi,esi
  4266b1:	mov    eax,0x4e3e
  4266b6:	cmp    di,ax
  4266b9:	jne    0x42669a
  4266bb:	xor    eax,eax
  4266bd:	pop    edi
  4266be:	mov    WORD PTR [edx],ax
  4266c1:	mov    eax,DWORD PTR [ebp-0x4]
  4266c4:	pop    esi
  4266c5:	leave  
  4266c6:	ret    0x4
  4266c9:	push   ebp
  4266ca:	mov    ebp,esp
  4266cc:	sub    esp,0x18
  4266cf:	mov    DWORD PTR [ebp-0x8],0xf89c85b0
  4266d6:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  4266dd:	mov    ecx,DWORD PTR [ebp-0x8]
  4266e0:	push   esi
  4266e1:	mov    eax,0x75108a4
  4266e6:	xor    ecx,eax
  4266e8:	mov    esi,0x3272ec
  4266ed:	add    ecx,esi
  4266ef:	mov    DWORD PTR [ebp-0x4],ecx
  4266f2:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  4266f9:	mov    DWORD PTR [ebp-0x10],0xf89c85bc
  426700:	push   edi
  426701:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  426708:	jmp    0x4267a9
  42670d:	mov    ecx,DWORD PTR [ebp-0x4]
  426710:	mov    edx,DWORD PTR [ebp+0x10]
  426713:	sub    edx,ecx
  426715:	mov    ecx,DWORD PTR [ebp-0xc]
  426718:	xor    ecx,eax
  42671a:	add    ecx,esi
  42671c:	cmp    edx,ecx
  42671e:	jbe    0x42673b
  426720:	mov    edx,DWORD PTR [ebp-0x4]
  426723:	add    edx,DWORD PTR [ebp+0x8]
  426726:	mov    ecx,DWORD PTR [ebp-0x4]
  426729:	add    ecx,DWORD PTR [ebp+0xc]
  42672c:	mov    edi,DWORD PTR [ecx]
  42672e:	mov    DWORD PTR [edx],edi
  426730:	mov    ecx,DWORD PTR [ecx+0x4]
  426733:	mov    DWORD PTR [edx+0x4],ecx
  426736:	mov    ecx,DWORD PTR [ebp-0xc]
  426739:	jmp    0x426788
  42673b:	mov    ecx,DWORD PTR [ebp-0x4]
  42673e:	mov    edx,DWORD PTR [ebp+0x10]
  426741:	sub    edx,ecx
  426743:	mov    ecx,DWORD PTR [ebp-0x10]
  426746:	xor    ecx,eax
  426748:	add    ecx,esi
  42674a:	cmp    edx,ecx
  42674c:	mov    ecx,DWORD PTR [ebp-0x4]
  42674f:	jbe    0x426763
  426751:	add    ecx,DWORD PTR [ebp+0x8]
  426754:	mov    edx,DWORD PTR [ebp-0x4]
  426757:	add    edx,DWORD PTR [ebp+0xc]
  42675a:	mov    edx,DWORD PTR [edx]
  42675c:	mov    DWORD PTR [ecx],edx
  42675e:	mov    ecx,DWORD PTR [ebp-0x10]
  426761:	jmp    0x426788
  426763:	mov    edx,DWORD PTR [ebp+0x10]
  426766:	sub    edx,ecx
  426768:	mov    ecx,DWORD PTR [ebp-0x14]
  42676b:	xor    ecx,eax
  42676d:	add    ecx,esi
  42676f:	cmp    edx,ecx
  426771:	mov    ecx,DWORD PTR [ebp-0x4]
  426774:	jbe    0x426799
  426776:	add    ecx,DWORD PTR [ebp+0x8]
  426779:	mov    edx,DWORD PTR [ebp-0x4]
  42677c:	add    edx,DWORD PTR [ebp+0xc]
  42677f:	mov    dx,WORD PTR [edx]
  426782:	mov    WORD PTR [ecx],dx
  426785:	mov    ecx,DWORD PTR [ebp-0x14]
  426788:	mov    edx,DWORD PTR [ebp-0x4]
  42678b:	xor    ecx,eax
  42678d:	lea    ecx,[ecx+edx*1+0x3272ec]
  426794:	mov    DWORD PTR [ebp-0x4],ecx
  426797:	jmp    0x4267a9
  426799:	add    ecx,DWORD PTR [ebp+0x8]
  42679c:	mov    edx,DWORD PTR [ebp-0x4]
  42679f:	add    edx,DWORD PTR [ebp+0xc]
  4267a2:	mov    dl,BYTE PTR [edx]
  4267a4:	mov    BYTE PTR [ecx],dl
  4267a6:	inc    DWORD PTR [ebp-0x4]
  4267a9:	mov    ecx,DWORD PTR [ebp-0x18]
  4267ac:	mov    edx,DWORD PTR [ebp+0x10]
  4267af:	xor    ecx,eax
  4267b1:	add    ecx,esi
  4267b3:	imul   ecx,edx
  4267b6:	mov    edx,DWORD PTR [ebp-0x8]
  4267b9:	mov    edi,DWORD PTR [ebp-0x4]
  4267bc:	xor    edx,eax
  4267be:	lea    edx,[edx+edi*1+0x3272ec]
  4267c5:	cmp    edx,ecx
  4267c7:	jb     0x42670d
  4267cd:	pop    edi
  4267ce:	pop    esi
  4267cf:	leave  
  4267d0:	ret    0xc
  4267d3:	push   ebp
  4267d4:	mov    ebp,esp
  4267d6:	sub    esp,0xc
  4267d9:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4267e0:	push   esi
  4267e1:	mov    esi,eax
  4267e3:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  4267ea:	mov    edx,DWORD PTR [ebp-0x4]
  4267ed:	mov    eax,0x75108a4
  4267f2:	xor    edx,eax
  4267f4:	mov    ecx,0x3272ec
  4267f9:	add    edx,ecx
  4267fb:	cmp    esi,edx
  4267fd:	je     0x42683f
  4267ff:	push   ebx
  426800:	push   edi
  426801:	mov    edx,DWORD PTR [ebp-0x8]
  426804:	mov    ebx,DWORD PTR [ebp+0x8]
  426807:	xor    edx,eax
  426809:	mov    edi,0xffcd8d14
  42680e:	sub    edi,edx
  426810:	add    esi,edi
  426812:	lea    edx,[esi-0x3272ec]
  426818:	xor    edx,eax
  42681a:	mov    DWORD PTR [ebp-0xc],edx
  42681d:	mov    edx,DWORD PTR [ebp-0x4]
  426820:	mov    edi,DWORD PTR [ebp-0xc]
  426823:	xor    dl,0xa4
  426826:	sub    dl,0x14
  426829:	xor    edi,eax
  42682b:	mov    BYTE PTR [edi+ebx*1+0x3272ec],dl
  426832:	mov    edx,DWORD PTR [ebp-0x4]
  426835:	xor    edx,eax
  426837:	add    edx,ecx
  426839:	cmp    esi,edx
  42683b:	jne    0x426801
  42683d:	pop    edi
  42683e:	pop    ebx
  42683f:	pop    esi
  426840:	leave  
  426841:	ret    0x4
  426844:	push   ebp
  426845:	mov    ebp,esp
  426847:	sub    esp,0x21c
  42684d:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  426854:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  42685b:	mov    eax,DWORD PTR [ebp+0x10]
  42685e:	mov    eax,DWORD PTR [ebp-0x4]
  426861:	mov    ecx,DWORD PTR [ebp+0x8]
  426864:	push   esi
  426865:	push   edi
  426866:	mov    edi,0x75108a4
  42686b:	xor    eax,edi
  42686d:	mov    esi,0x3272ec
  426872:	add    eax,esi
  426874:	cmp    eax,ecx
  426876:	mov    eax,DWORD PTR [ebp-0x4]
  426879:	jne    0x426884
  42687b:	xor    eax,edi
  42687d:	add    eax,esi
  42687f:	jmp    0x426930
  426884:	mov    ecx,DWORD PTR [ebp+0xc]
  426887:	xor    eax,edi
  426889:	add    eax,esi
  42688b:	cmp    eax,ecx
  42688d:	jne    0x426894
  42688f:	mov    eax,DWORD PTR [ebp-0x4]
  426892:	jmp    0x42687b
  426894:	lea    eax,[ebp-0x21c]
  42689a:	mov    DWORD PTR [ebp-0x8],eax
  42689d:	mov    eax,DWORD PTR [ebp+0xc]
  4268a0:	mov    DWORD PTR [ebp-0x10],eax
  4268a3:	mov    eax,DWORD PTR [ebp-0x4]
  4268a6:	xor    eax,edi
  4268a8:	add    eax,esi
  4268aa:	mov    DWORD PTR [ebp+0x10],eax
  4268ad:	mov    eax,DWORD PTR [ebp+0xc]
  4268b0:	push   ebx
  4268b1:	call   0x4265db
  4268b6:	mov    ebx,eax
  4268b8:	mov    eax,DWORD PTR [ebp+0x8]
  4268bb:	mov    eax,DWORD PTR [eax+0x14]
  4268be:	jmp    0x426918
  4268c0:	mov    eax,DWORD PTR [ebp+0xc]
  4268c3:	sub    eax,0x8
  4268c6:	mov    DWORD PTR [ebp-0xc],eax
  4268c9:	mov    eax,DWORD PTR [ebp-0xc]
  4268cc:	mov    eax,DWORD PTR [eax+0x28]
  4268cf:	call   0x4264c3
  4268d4:	mov    DWORD PTR [ebp+0x10],eax
  4268d7:	push   DWORD PTR [ebp+0x10]
  4268da:	mov    edx,DWORD PTR [ebp-0x8]
  4268dd:	call   0x42666a
  4268e2:	mov    eax,DWORD PTR [ebp-0x4]
  4268e5:	xor    eax,edi
  4268e7:	add    eax,esi
  4268e9:	cmp    eax,ebx
  4268eb:	jne    0x4268f5
  4268ed:	mov    eax,DWORD PTR [ebp-0x8]
  4268f0:	call   0x426551
  4268f5:	mov    eax,DWORD PTR [ebp-0x14]
  4268f8:	xor    eax,edi
  4268fa:	add    eax,esi
  4268fc:	push   eax
  4268fd:	push   DWORD PTR [ebp-0x10]
  426900:	mov    eax,DWORD PTR [ebp-0x8]
  426903:	call   0x42627d
  426908:	mov    ecx,DWORD PTR [ebp-0x4]
  42690b:	xor    ecx,edi
  42690d:	add    ecx,esi
  42690f:	cmp    eax,ecx
  426911:	je     0x426936
  426913:	mov    eax,DWORD PTR [ebp+0xc]
  426916:	mov    eax,DWORD PTR [eax]
  426918:	mov    DWORD PTR [ebp+0xc],eax
  42691b:	mov    eax,DWORD PTR [ebp+0x8]
  42691e:	mov    ecx,DWORD PTR [ebp+0xc]
  426921:	add    eax,0x14
  426924:	cmp    ecx,eax
  426926:	jne    0x4268c0
  426928:	mov    eax,DWORD PTR [ebp-0x4]
  42692b:	xor    eax,edi
  42692d:	add    eax,esi
  42692f:	pop    ebx
  426930:	pop    edi
  426931:	pop    esi
  426932:	leave  
  426933:	ret    0xc
  426936:	mov    eax,DWORD PTR [ebp-0xc]
  426939:	mov    eax,DWORD PTR [eax+0x18]
  42693c:	jmp    0x42692f
  42693e:	push   ebp
  42693f:	mov    ebp,esp
  426941:	mov    eax,DWORD PTR [ebp+0xc]
  426944:	sub    esp,0x10
  426947:	cmp    DWORD PTR [ebp+0x8],0x0
  42694b:	push   ebx
  42694c:	push   esi
  42694d:	push   edi
  42694e:	je     0x426a03
  426954:	test   eax,eax
  426956:	je     0x426a03
  42695c:	movzx  eax,WORD PTR [eax+0x20]
  426960:	mov    ecx,eax
  426962:	mov    DWORD PTR [ebp-0x10],eax
  426965:	xor    edx,edx
  426967:	and    DWORD PTR [ebp-0x8],edx
  42696a:	mov    eax,0x8a94
  42696f:	xor    ecx,eax
  426971:	add    ecx,0x3b56
  426977:	mov    DWORD PTR [ebp-0xc],ecx
  42697a:	and    DWORD PTR [ebp-0x4],0x0
  42697e:	xor    ecx,ecx
  426980:	push   0x7c
  426982:	pop    edi
  426983:	cmp    cx,WORD PTR [ebp-0xc]
  426987:	jae    0x4269ed
  426989:	lea    esi,[edx-0x3b56]
  42698f:	xor    esi,eax
  426991:	movzx  ecx,WORD PTR [ebp-0x4]
  426995:	mov    ebx,DWORD PTR [ebp+0xc]
  426998:	lea    ecx,[ebx+ecx*4]
  42699b:	cmp    WORD PTR [ecx+0x2],si
  42699f:	jne    0x4269d8
  4269a1:	movzx  ecx,WORD PTR [ecx]
  4269a4:	mov    edi,0x4e3e
  4269a9:	cmp    cx,di
  4269ac:	jne    0x4269ba
  4269ae:	mov    ebx,DWORD PTR [ebp+0x8]
  4269b1:	movzx  edi,dx
  4269b4:	cmp    BYTE PTR [edi+ebx*1],0x0
  4269b8:	je     0x4269e7
  4269ba:	mov    ebx,DWORD PTR [ebp+0x8]
  4269bd:	movzx  edi,dx
  4269c0:	movsx  di,BYTE PTR [edi+ebx*1]
  4269c5:	mov    ebx,0x3b56
  4269ca:	sub    di,bx
  4269cd:	xor    di,ax
  4269d0:	cmp    cx,di
  4269d3:	je     0x4269e7
  4269d5:	push   0x7a
  4269d7:	pop    edi
  4269d8:	inc    DWORD PTR [ebp-0x4]
  4269db:	mov    cx,WORD PTR [ebp-0xc]
  4269df:	cmp    WORD PTR [ebp-0x4],cx
  4269e3:	jb     0x426991
  4269e5:	jmp    0x4269ed
  4269e7:	inc    DWORD PTR [ebp-0x8]
  4269ea:	push   0x7d
  4269ec:	pop    edi
  4269ed:	mov    esi,DWORD PTR [ebp+0x8]
  4269f0:	movzx  ecx,dx
  4269f3:	cmp    BYTE PTR [ecx+esi*1],0x0
  4269f7:	je     0x426a0c
  4269f9:	inc    edx
  4269fa:	cmp    edi,0x7a
  4269fd:	jne    0x42697a
  426a03:	xor    eax,eax
  426a05:	pop    edi
  426a06:	pop    esi
  426a07:	pop    ebx
  426a08:	leave  
  426a09:	ret    0x8
  426a0c:	mov    ecx,DWORD PTR [ebp-0x8]
  426a0f:	add    ecx,0xffffc4aa
  426a15:	xor    cx,ax
  426a18:	xor    eax,eax
  426a1a:	cmp    cx,WORD PTR [ebp-0x10]
  426a1e:	sete   al
  426a21:	jmp    0x426a05
  426a23:	push   ebp
  426a24:	mov    ebp,esp
  426a26:	sub    esp,0x50
  426a29:	push   edi
  426a2a:	mov    edi,eax
  426a2c:	mov    eax,DWORD PTR [edi+0x1a8]
  426a32:	cmp    DWORD PTR [eax],0x0
  426a35:	jne    0x426a3e
  426a37:	xor    eax,eax
  426a39:	jmp    0x426b6f
  426a3e:	push   DWORD PTR [ebp+0x8]
  426a41:	push   0x2c
  426a43:	pop    eax
  426a44:	call   0x4267d3
  426a49:	mov    edx,DWORD PTR [edi+0x1ac]
  426a4f:	lea    eax,[edi+0x22]
  426a52:	mov    DWORD PTR [ebp-0x4c],eax
  426a55:	lea    eax,[edi+0x44]
  426a58:	mov    DWORD PTR [ebp-0x48],eax
  426a5b:	lea    eax,[edi+0x66]
  426a5e:	mov    DWORD PTR [ebp-0x44],eax
  426a61:	lea    eax,[edi+0x88]
  426a67:	mov    DWORD PTR [ebp-0x40],eax
  426a6a:	lea    eax,[edi+0xaa]
  426a70:	mov    DWORD PTR [ebp-0x3c],eax
  426a73:	lea    eax,[edi+0xcc]
  426a79:	mov    DWORD PTR [ebp-0x38],eax
  426a7c:	lea    eax,[edi+0xee]
  426a82:	mov    DWORD PTR [ebp-0x34],eax
  426a85:	lea    eax,[edi+0x110]
  426a8b:	mov    DWORD PTR [ebp-0x30],eax
  426a8e:	lea    eax,[edi+0x132]
  426a94:	mov    DWORD PTR [ebp-0x2c],eax
  426a97:	lea    eax,[edi+0x154]
  426a9d:	push   edi
  426a9e:	mov    DWORD PTR [ebp-0x50],edi
  426aa1:	mov    DWORD PTR [ebp-0x28],eax
  426aa4:	call   0x426ba3
  426aa9:	push   eax
  426aaa:	mov    eax,DWORD PTR [edi+0x1a8]
  426ab0:	push   DWORD PTR [eax]
  426ab2:	call   0x426844
  426ab7:	mov    DWORD PTR [ebp-0x10],eax
  426aba:	test   eax,eax
  426abc:	je     0x426b6f
  426ac2:	mov    ecx,DWORD PTR [eax+0x3c]
  426ac5:	push   ebx
  426ac6:	push   esi
  426ac7:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  426acb:	add    esi,eax
  426acd:	mov    edi,DWORD PTR [esi+0x24]
  426ad0:	mov    ecx,DWORD PTR [esi+0x1c]
  426ad3:	mov    edx,DWORD PTR [esi+0x20]
  426ad6:	mov    ebx,DWORD PTR [esi+0x18]
  426ad9:	add    edi,eax
  426adb:	mov    DWORD PTR [ebp-0x20],edi
  426ade:	mov    edi,DWORD PTR [esi+0x14]
  426ae1:	add    ecx,eax
  426ae3:	add    edx,eax
  426ae5:	mov    DWORD PTR [ebp-0xc],ecx
  426ae8:	mov    DWORD PTR [ebp-0x1c],edx
  426aeb:	mov    DWORD PTR [ebp-0x8],edi
  426aee:	cmp    edi,ebx
  426af0:	ja     0x426af5
  426af2:	mov    DWORD PTR [ebp-0x8],ebx
  426af5:	xor    ebx,ebx
  426af7:	mov    DWORD PTR [ebp-0x18],ebx
  426afa:	cmp    DWORD PTR [ebp-0x8],ebx
  426afd:	jbe    0x426b6d
  426aff:	jmp    0x426b04
  426b01:	mov    edx,DWORD PTR [ebp-0x1c]
  426b04:	mov    edi,DWORD PTR [ebp-0x20]
  426b07:	movzx  edi,WORD PTR [edi+ebx*2]
  426b0b:	cmp    ebx,DWORD PTR [esi+0x18]
  426b0e:	jae    0x426b6d
  426b10:	cmp    edi,DWORD PTR [esi+0x14]
  426b13:	jae    0x426b6d
  426b15:	mov    ebx,DWORD PTR [edx+ebx*4]
  426b18:	mov    edx,DWORD PTR [ebp+0x8]
  426b1b:	mov    edi,DWORD PTR [ecx+edi*4]
  426b1e:	mov    DWORD PTR [ebp-0x4],edx
  426b21:	lea    edx,[ebp-0x50]
  426b24:	add    ebx,eax
  426b26:	add    edi,eax
  426b28:	sub    edx,DWORD PTR [ebp+0x8]
  426b2b:	mov    DWORD PTR [ebp-0x14],0xb
  426b32:	mov    DWORD PTR [ebp-0x24],edx
  426b35:	mov    edx,DWORD PTR [ebp-0x4]
  426b38:	cmp    DWORD PTR [edx],0x0
  426b3b:	jne    0x426b58
  426b3d:	mov    eax,DWORD PTR [ebp-0x24]
  426b40:	push   DWORD PTR [eax+edx*1]
  426b43:	push   ebx
  426b44:	call   0x42693e
  426b49:	mov    ecx,DWORD PTR [ebp-0xc]
  426b4c:	test   eax,eax
  426b4e:	je     0x426b55
  426b50:	mov    eax,DWORD PTR [ebp-0x4]
  426b53:	mov    DWORD PTR [eax],edi
  426b55:	mov    eax,DWORD PTR [ebp-0x10]
  426b58:	add    DWORD PTR [ebp-0x4],0x4
  426b5c:	dec    DWORD PTR [ebp-0x14]
  426b5f:	jne    0x426b35
  426b61:	mov    ebx,DWORD PTR [ebp-0x18]
  426b64:	inc    ebx
  426b65:	mov    DWORD PTR [ebp-0x18],ebx
  426b68:	cmp    ebx,DWORD PTR [ebp-0x8]
  426b6b:	jb     0x426b01
  426b6d:	pop    esi
  426b6e:	pop    ebx
  426b6f:	pop    edi
  426b70:	leave  
  426b71:	ret    0x4
  426b74:	push   ebp
  426b75:	mov    ebp,esp
  426b77:	mov    eax,DWORD PTR [ebp+0x8]
  426b7a:	push   esi
  426b7b:	push   DWORD PTR [eax+0x1d8]
  426b81:	lea    esi,[eax+0x198]
  426b87:	mov    eax,DWORD PTR [ebp+0x8]
  426b8a:	call   0x426a23
  426b8f:	mov    ecx,DWORD PTR [esi]
  426b91:	mov    DWORD PTR [ecx],eax
  426b93:	mov    eax,DWORD PTR [esi]
  426b95:	xor    ecx,ecx
  426b97:	cmp    DWORD PTR [eax],ecx
  426b99:	pop    esi
  426b9a:	setne  cl
  426b9d:	mov    eax,ecx
  426b9f:	pop    ebp
  426ba0:	ret    0x4
  426ba3:	mov    ecx,DWORD PTR [edi+0x188]
  426ba9:	push   ebx
  426baa:	jmp    0x426bbf
  426bac:	xor    eax,0x8a94
  426bb1:	add    eax,0x3b56
  426bb6:	mov    WORD PTR [ecx],ax
  426bb9:	add    ecx,0x2
  426bbc:	add    edx,0x2
  426bbf:	movzx  eax,WORD PTR [edx]
  426bc2:	mov    ebx,0x4e3e
  426bc7:	cmp    ax,bx
  426bca:	jne    0x426bac
  426bcc:	xor    eax,eax
  426bce:	mov    WORD PTR [ecx],ax
  426bd1:	mov    eax,DWORD PTR [edi+0x188]
  426bd7:	pop    ebx
  426bd8:	ret    
  426bd9:	push   edi
  426bda:	mov    edi,eax
  426bdc:	mov    eax,DWORD PTR [esi+0x188]
  426be2:	shl    edi,0x6
  426be5:	add    eax,edi
  426be7:	jmp    0x426bf3
  426be9:	xor    cl,0x79
  426bec:	sub    cl,0x3
  426bef:	mov    BYTE PTR [eax],cl
  426bf1:	inc    eax
  426bf2:	inc    edx
  426bf3:	mov    cl,BYTE PTR [edx]
  426bf5:	cmp    cl,0x7a
  426bf8:	jne    0x426be9
  426bfa:	mov    BYTE PTR [eax],0x0
  426bfd:	mov    eax,DWORD PTR [esi+0x188]
  426c03:	add    eax,edi
  426c05:	pop    edi
  426c06:	ret    
  426c07:	push   ebp
  426c08:	mov    ebp,esp
  426c0a:	sub    esp,0x14
  426c0d:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  426c14:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  426c1b:	mov    eax,DWORD PTR [ebx]
  426c1d:	mov    DWORD PTR [ebp-0x8],eax
  426c20:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  426c27:	push   esi
  426c28:	push   edi
  426c29:	mov    DWORD PTR [ebp-0x14],0xead71890
  426c30:	mov    edi,DWORD PTR [ebp-0x4]
  426c33:	mov    ecx,DWORD PTR [ebp-0x10]
  426c36:	mov    eax,0x75108a4
  426c3b:	xor    edi,eax
  426c3d:	mov    edx,0x3272ec
  426c42:	xor    ecx,eax
  426c44:	add    edi,edx
  426c46:	add    ecx,edx
  426c48:	imul   edi,ecx
  426c4b:	jmp    0x426c93
  426c4d:	mov    ecx,DWORD PTR [ebp-0x8]
  426c50:	mov    esi,DWORD PTR [ebp-0x4]
  426c53:	xor    ecx,eax
  426c55:	xor    esi,eax
  426c57:	add    ecx,edx
  426c59:	add    esi,edx
  426c5b:	test   esi,ecx
  426c5d:	mov    esi,DWORD PTR [ebp-0x8]
  426c60:	mov    ecx,DWORD PTR [ebp-0x4]
  426c63:	je     0x426c7a
  426c65:	xor    ecx,eax
  426c67:	xor    esi,eax
  426c69:	add    ecx,edx
  426c6b:	add    esi,edx
  426c6d:	shr    esi,cl
  426c6f:	mov    ecx,DWORD PTR [ebp-0x14]
  426c72:	xor    ecx,eax
  426c74:	add    ecx,edx
  426c76:	xor    esi,ecx
  426c78:	jmp    0x426c84
  426c7a:	xor    esi,eax
  426c7c:	xor    ecx,eax
  426c7e:	add    esi,edx
  426c80:	add    ecx,edx
  426c82:	shr    esi,cl
  426c84:	mov    DWORD PTR [ebp-0x8],esi
  426c87:	mov    ecx,DWORD PTR [ebp-0x4]
  426c8a:	xor    ecx,eax
  426c8c:	lea    edi,[edi+ecx*1+0x3272ec]
  426c93:	mov    ecx,DWORD PTR [ebp-0xc]
  426c96:	mov    esi,DWORD PTR [ebp-0x4]
  426c99:	xor    esi,eax
  426c9b:	xor    ecx,eax
  426c9d:	sub    ecx,esi
  426c9f:	cmp    edi,ecx
  426ca1:	jbe    0x426c4d
  426ca3:	mov    eax,DWORD PTR [ebp-0x8]
  426ca6:	pop    edi
  426ca7:	mov    DWORD PTR [ebx],eax
  426ca9:	mov    eax,DWORD PTR [ebp-0x8]
  426cac:	pop    esi
  426cad:	leave  
  426cae:	ret    
  426caf:	push   ebp
  426cb0:	mov    ebp,esp
  426cb2:	sub    esp,0x38
  426cb5:	push   ebx
  426cb6:	mov    ebx,0xf89c85b0
  426cbb:	mov    DWORD PTR [ebp-0x4],ebx
  426cbe:	lea    eax,[ebx+0x1]
  426cc1:	push   esi
  426cc2:	mov    DWORD PTR [ebp-0x24],eax
  426cc5:	mov    ecx,DWORD PTR [ebp-0x4]
  426cc8:	mov    edx,DWORD PTR [ebp+0x8]
  426ccb:	mov    esi,0x75108a4
  426cd0:	push   edi
  426cd1:	xor    ecx,esi
  426cd3:	mov    edi,0x3272ec
  426cd8:	add    ecx,edi
  426cda:	cmp    edx,ecx
  426cdc:	je     0x426e42
  426ce2:	mov    ecx,DWORD PTR [ebp-0x4]
  426ce5:	mov    edx,DWORD PTR [ebp+0xc]
  426ce8:	xor    ecx,esi
  426cea:	add    ecx,edi
  426cec:	cmp    edx,ecx
  426cee:	je     0x426e42
  426cf4:	mov    ecx,DWORD PTR [ebp+0x10]
  426cf7:	mov    DWORD PTR [ebp-0x14],ecx
  426cfa:	mov    ecx,DWORD PTR [ebp+0xc]
  426cfd:	mov    edx,DWORD PTR [ebp+0x8]
  426d00:	mov    DWORD PTR [ebp-0x18],0xf89c8533
  426d07:	mov    DWORD PTR [ebp-0x1c],eax
  426d0a:	mov    DWORD PTR [ebp-0x10],ebx
  426d0d:	mov    DWORD PTR [ebp+0xc],eax
  426d10:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  426d17:	mov    eax,DWORD PTR [ebp+0xc]
  426d1a:	xor    eax,esi
  426d1c:	mov    DWORD PTR [ebp-0x20],ecx
  426d1f:	sub    ecx,eax
  426d21:	sub    ecx,edi
  426d23:	mov    DWORD PTR [ebp+0x8],ecx
  426d26:	mov    DWORD PTR [ebp-0xc],edx
  426d29:	mov    DWORD PTR [ebp-0x8],0xf89c85bd
  426d30:	jmp    0x426e32
  426d35:	mov    eax,DWORD PTR [ebp+0xc]
  426d38:	mov    ecx,DWORD PTR [ebp+0xc]
  426d3b:	xor    eax,esi
  426d3d:	xor    ecx,esi
  426d3f:	lea    ecx,[eax+ecx*1+0x64e5d8]
  426d46:	mov    eax,DWORD PTR [ebp+0x8]
  426d49:	xor    edx,edx
  426d4b:	div    ecx
  426d4d:	mov    eax,DWORD PTR [ebp+0x10]
  426d50:	mov    ecx,DWORD PTR [ebp+0xc]
  426d53:	xor    eax,esi
  426d55:	xor    ecx,esi
  426d57:	sub    eax,ecx
  426d59:	cmp    edx,eax
  426d5b:	jne    0x426df1
  426d61:	mov    eax,DWORD PTR [ebp+0x8]
  426d64:	mov    ecx,DWORD PTR [ebp-0xc]
  426d67:	mov    dl,BYTE PTR [eax+ecx*1]
  426d6a:	mov    eax,DWORD PTR [ebp-0x10]
  426d6d:	mov    ecx,DWORD PTR [ebp-0x8]
  426d70:	xor    eax,esi
  426d72:	xor    ecx,esi
  426d74:	add    eax,edi
  426d76:	add    ecx,edi
  426d78:	cmp    eax,ecx
  426d7a:	jae    0x426dc2
  426d7c:	lea    ecx,[eax-0x3272ec]
  426d82:	mov    DWORD PTR [ebp-0x4],ecx
  426d85:	mov    ebx,DWORD PTR [ebp-0x4]
  426d88:	xor    ebx,esi
  426d8a:	add    ebx,0x7f55d8f2
  426d90:	lea    ecx,[ebp+eax*4-0x38]
  426d94:	mov    DWORD PTR [ecx],ebx
  426d96:	mov    ebx,DWORD PTR [ecx]
  426d98:	cmp    ebx,0x244ecb93
  426d9e:	jbe    0x426da8
  426da0:	add    DWORD PTR [ecx],0x405fcdc
  426da6:	jmp    0x426dae
  426da8:	add    DWORD PTR [ecx],0xfdaf4324
  426dae:	mov    ecx,DWORD PTR [ebp-0x8]
  426db1:	xor    ecx,esi
  426db3:	inc    eax
  426db4:	inc    DWORD PTR [ebp-0x4]
  426db7:	add    ecx,edi
  426db9:	cmp    eax,ecx
  426dbb:	jb     0x426d85
  426dbd:	mov    ebx,0xf89c85b0
  426dc2:	cmp    DWORD PTR [ebp-0x14],0x0
  426dc6:	jne    0x426dd0
  426dc8:	xor    dl,0x79
  426dcb:	sub    dl,0x3
  426dce:	jmp    0x426de6
  426dd0:	mov    eax,DWORD PTR [ebp-0x18]
  426dd3:	xor    al,0xa4
  426dd5:	mov    cl,0x14
  426dd7:	sub    cl,al
  426dd9:	add    dl,cl
  426ddb:	mov    ecx,DWORD PTR [ebp-0x1c]
  426dde:	xor    cl,0xa4
  426de1:	sub    cl,0x14
  426de4:	ror    dl,cl
  426de6:	xor    eax,eax
  426de8:	mov    eax,DWORD PTR [ebp+0x8]
  426deb:	mov    ecx,DWORD PTR [ebp-0xc]
  426dee:	mov    BYTE PTR [eax+ecx*1],dl
  426df1:	mov    eax,DWORD PTR [ebp+0x8]
  426df4:	mov    ecx,DWORD PTR [ebp-0x10]
  426df7:	sub    eax,edi
  426df9:	xor    eax,esi
  426dfb:	cmp    eax,ecx
  426dfd:	jne    0x426e20
  426dff:	mov    eax,DWORD PTR [ebp+0x10]
  426e02:	mov    ecx,DWORD PTR [ebp+0xc]
  426e05:	xor    eax,esi
  426e07:	xor    ecx,esi
  426e09:	sub    eax,ecx
  426e0b:	mov    ecx,DWORD PTR [ebp-0x20]
  426e0e:	sub    eax,edi
  426e10:	xor    eax,esi
  426e12:	mov    DWORD PTR [ebp+0x10],eax
  426e15:	mov    eax,DWORD PTR [ebp+0xc]
  426e18:	xor    eax,esi
  426e1a:	sub    ecx,eax
  426e1c:	sub    ecx,edi
  426e1e:	jmp    0x426e2f
  426e20:	mov    eax,DWORD PTR [ebp+0xc]
  426e23:	xor    eax,esi
  426e25:	mov    ecx,0xffcd8d14
  426e2a:	sub    ecx,eax
  426e2c:	add    ecx,DWORD PTR [ebp+0x8]
  426e2f:	mov    DWORD PTR [ebp+0x8],ecx
  426e32:	mov    eax,DWORD PTR [ebp+0x10]
  426e35:	cmp    eax,ebx
  426e37:	jne    0x426d35
  426e3d:	mov    eax,DWORD PTR [ebp-0x24]
  426e40:	jmp    0x426e45
  426e42:	mov    eax,DWORD PTR [ebp-0x4]
  426e45:	xor    eax,esi
  426e47:	add    eax,edi
  426e49:	pop    edi
  426e4a:	pop    esi
  426e4b:	pop    ebx
  426e4c:	leave  
  426e4d:	ret    0xc
  426e50:	push   ebp
  426e51:	mov    ebp,esp
  426e53:	sub    esp,0x420
  426e59:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  426e60:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  426e67:	mov    DWORD PTR [ebp-0x18],0xf89c86b0
  426e6e:	push   ebx
  426e6f:	mov    DWORD PTR [ebp-0x1c],0xf89c85b7
  426e76:	mov    eax,DWORD PTR [ebp-0x14]
  426e79:	push   esi
  426e7a:	mov    esi,0x75108a4
  426e7f:	push   edi
  426e80:	xor    eax,esi
  426e82:	mov    edi,0x3272ec
  426e87:	add    eax,edi
  426e89:	mov    DWORD PTR [ebp-0x8],eax
  426e8c:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  426e93:	mov    DWORD PTR [ebp-0x4],0xead71890
  426e9a:	mov    DWORD PTR [ebp-0x10],0x8
  426ea1:	mov    ecx,ecx
  426ea3:	mov    eax,DWORD PTR [ebp-0xc]
  426ea6:	mov    ecx,DWORD PTR [ebp-0x14]
  426ea9:	xor    eax,esi
  426eab:	xor    ecx,esi
  426ead:	add    eax,edi
  426eaf:	add    ecx,edi
  426eb1:	imul   eax,ecx
  426eb4:	jmp    0x426ee7
  426eb6:	mov    eax,DWORD PTR [ebp-0x4]
  426eb9:	sub    eax,edi
  426ebb:	xor    eax,esi
  426ebd:	mov    DWORD PTR [ebp-0x8],eax
  426ec0:	lea    ebx,[ebp-0x8]
  426ec3:	call   0x426c07
  426ec8:	mov    DWORD PTR [ebp-0x8],eax
  426ecb:	mov    eax,DWORD PTR [ebp-0x8]
  426ece:	mov    ecx,DWORD PTR [ebp-0x4]
  426ed1:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  426ed8:	mov    eax,DWORD PTR [ebp-0xc]
  426edb:	mov    ecx,DWORD PTR [ebp-0x4]
  426ede:	xor    eax,esi
  426ee0:	lea    eax,[eax+ecx*1+0x3272ec]
  426ee7:	mov    DWORD PTR [ebp-0x4],eax
  426eea:	mov    eax,DWORD PTR [ebp-0x18]
  426eed:	mov    ecx,DWORD PTR [ebp-0xc]
  426ef0:	xor    ecx,esi
  426ef2:	xor    eax,esi
  426ef4:	sub    eax,ecx
  426ef6:	mov    ecx,DWORD PTR [ebp-0x4]
  426ef9:	cmp    ecx,eax
  426efb:	jbe    0x426eb6
  426efd:	mov    eax,DWORD PTR [ebp-0x1c]
  426f00:	xor    eax,esi
  426f02:	add    eax,edi
  426f04:	mov    DWORD PTR [ebp-0x8],eax
  426f07:	mov    DWORD PTR [ebp-0x18],0xf89c86b7
  426f0e:	mov    ebx,ebx
  426f10:	jmp    0x426f73
  426f12:	mov    ecx,DWORD PTR [ebp-0x20]
  426f15:	mov    eax,DWORD PTR [ebp-0x8]
  426f18:	xor    ecx,esi
  426f1a:	add    ecx,edi
  426f1c:	shr    eax,cl
  426f1e:	mov    DWORD PTR [ebp-0x4],eax
  426f21:	mov    eax,DWORD PTR [ebp+0x8]
  426f24:	mov    cl,BYTE PTR [eax]
  426f26:	mov    BYTE PTR [ebp+0xb],cl
  426f29:	mov    cl,BYTE PTR [ebp+0xb]
  426f2c:	mov    edx,DWORD PTR [ebp-0x8]
  426f2f:	movzx  ecx,cl
  426f32:	xor    ecx,edx
  426f34:	mov    DWORD PTR [ebp+0x8],ecx
  426f37:	mov    ecx,DWORD PTR [ebp-0x18]
  426f3a:	mov    edx,DWORD PTR [ebp+0x8]
  426f3d:	xor    ecx,esi
  426f3f:	add    ecx,edi
  426f41:	and    ecx,edx
  426f43:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  426f4a:	mov    edx,DWORD PTR [ebp-0x4]
  426f4d:	xor    ecx,edx
  426f4f:	mov    DWORD PTR [ebp-0x8],ecx
  426f52:	mov    ecx,DWORD PTR [ebp-0xc]
  426f55:	xor    ecx,esi
  426f57:	lea    eax,[eax+ecx*1+0x3272ec]
  426f5e:	mov    DWORD PTR [ebp+0x8],eax
  426f61:	mov    eax,DWORD PTR [ebp-0xc]
  426f64:	xor    eax,esi
  426f66:	mov    ecx,0xffcd8d14
  426f6b:	sub    ecx,eax
  426f6d:	add    ecx,DWORD PTR [ebp-0x10]
  426f70:	mov    DWORD PTR [ebp-0x10],ecx
  426f73:	mov    eax,DWORD PTR [ebp-0x14]
  426f76:	mov    ecx,DWORD PTR [ebp-0x10]
  426f79:	xor    eax,esi
  426f7b:	add    eax,edi
  426f7d:	cmp    ecx,eax
  426f7f:	jne    0x426f12
  426f81:	mov    eax,DWORD PTR [ebp-0x1c]
  426f84:	mov    ecx,DWORD PTR [ebp-0x8]
  426f87:	xor    eax,esi
  426f89:	add    eax,edi
  426f8b:	pop    edi
  426f8c:	pop    esi
  426f8d:	xor    eax,ecx
  426f8f:	pop    ebx
  426f90:	leave  
  426f91:	ret    0x4
  426f94:	push   ebp
  426f95:	mov    ebp,esp
  426f97:	mov    eax,DWORD PTR [ebp+0x1c]
  426f9a:	mov    ecx,DWORD PTR [ebp+0x8]
  426f9d:	mov    edx,DWORD PTR [ebp+0x10]
  426fa0:	mov    eax,DWORD PTR [eax+0x190]
  426fa6:	mov    eax,DWORD PTR [eax]
  426fa8:	sub    esp,0x64
  426fab:	push   ebx
  426fac:	push   esi
  426fad:	push   edi
  426fae:	mov    edi,0x75108a4
  426fb3:	xor    ecx,edi
  426fb5:	mov    ebx,0x3272ec
  426fba:	add    ecx,ebx
  426fbc:	cmp    ecx,edx
  426fbe:	jne    0x426fcf
  426fc0:	or     DWORD PTR ds:0x3750c3e,0x4263eb2f
  426fca:	jmp    0x4274cb
  426fcf:	mov    ecx,DWORD PTR [ebp+0x8]
  426fd2:	mov    esi,DWORD PTR [ebp+0x14]
  426fd5:	mov    edx,DWORD PTR [esi]
  426fd7:	xor    ecx,edi
  426fd9:	add    ecx,ebx
  426fdb:	cmp    edx,ecx
  426fdd:	je     0x427486
  426fe3:	mov    ecx,DWORD PTR [ebp+0x1c]
  426fe6:	mov    DWORD PTR [ebp-0x1c],eax
  426fe9:	mov    DWORD PTR [ebp+0x1c],ecx
  426fec:	mov    ecx,DWORD PTR [ebp+0x18]
  426fef:	mov    eax,DWORD PTR [esi]
  426ff1:	mov    DWORD PTR [ebp-0x20],eax
  426ff4:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  426ffb:	mov    edx,0xf89c85b1
  427000:	mov    DWORD PTR [ebp-0x8],edx
  427003:	mov    eax,DWORD PTR [ebp+0x1c]
  427006:	mov    DWORD PTR [ebp+0x1c],eax
  427009:	mov    eax,DWORD PTR [ebp+0x1c]
  42700c:	mov    eax,DWORD PTR [eax+0x190]
  427012:	mov    eax,DWORD PTR [eax]
  427014:	mov    DWORD PTR [ebp-0x24],ecx
  427017:	mov    ecx,DWORD PTR [ebp+0x1c]
  42701a:	mov    ecx,DWORD PTR [ecx+0x190]
  427020:	mov    ecx,DWORD PTR [ecx]
  427022:	add    ecx,DWORD PTR [eax+0x3c]
  427025:	mov    DWORD PTR [ebp+0x10],ecx
  427028:	mov    eax,DWORD PTR [ebp+0x8]
  42702b:	xor    eax,edi
  42702d:	add    eax,ebx
  42702f:	mov    DWORD PTR [ebp-0x4],eax
  427032:	mov    eax,DWORD PTR [ebp+0x8]
  427035:	xor    eax,edi
  427037:	add    eax,ebx
  427039:	mov    DWORD PTR [ebp+0x18],eax
  42703c:	mov    eax,DWORD PTR [ebp+0x10]
  42703f:	mov    eax,DWORD PTR [eax+0x50]
  427042:	sub    eax,0xc
  427045:	mov    DWORD PTR [ebp-0x28],eax
  427048:	mov    eax,DWORD PTR [ebp+0x10]
  42704b:	mov    eax,DWORD PTR [eax+0x38]
  42704e:	mov    ecx,DWORD PTR [ebp+0x10]
  427051:	dec    eax
  427052:	test   DWORD PTR [ecx+0x54],eax
  427055:	mov    eax,DWORD PTR [ebp+0x10]
  427058:	je     0x427072
  42705a:	mov    eax,DWORD PTR [eax+0x38]
  42705d:	mov    ecx,DWORD PTR [ebp+0x10]
  427060:	mov    ecx,DWORD PTR [ecx+0x54]
  427063:	dec    eax
  427064:	not    eax
  427066:	and    ecx,eax
  427068:	mov    eax,DWORD PTR [ebp+0x10]
  42706b:	mov    eax,DWORD PTR [eax+0x38]
  42706e:	add    eax,ecx
  427070:	jmp    0x427075
  427072:	mov    eax,DWORD PTR [eax+0x54]
  427075:	mov    DWORD PTR [ebp+0x1c],eax
  427078:	mov    eax,DWORD PTR [ebp+0x8]
  42707b:	xor    eax,edi
  42707d:	add    eax,ebx
  42707f:	mov    DWORD PTR [ebp+0x18],eax
  427082:	mov    eax,DWORD PTR [ebp+0x8]
  427085:	xor    eax,edi
  427087:	add    eax,ebx
  427089:	mov    DWORD PTR [ebp+0x18],eax
  42708c:	mov    eax,DWORD PTR [ebp+0x8]
  42708f:	mov    ecx,DWORD PTR [ebp-0x24]
  427092:	xor    eax,edi
  427094:	add    eax,ebx
  427096:	mov    DWORD PTR [ecx],eax
  427098:	mov    DWORD PTR [ebp+0x18],edx
  42709b:	mov    DWORD PTR [ebp+0x18],0xf89c85b2
  4270a2:	mov    DWORD PTR [ebp+0x18],0xf89c85b3
  4270a9:	mov    DWORD PTR [ebp+0x18],0xf89c85bc
  4270b0:	mov    eax,DWORD PTR [ebp-0x8]
  4270b3:	mov    ecx,DWORD PTR [ebp+0x1c]
  4270b6:	xor    eax,edi
  4270b8:	add    eax,ebx
  4270ba:	imul   eax,ecx
  4270bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4270c0:	mov    edx,DWORD PTR [ebp-0x28]
  4270c3:	xor    ecx,edi
  4270c5:	lea    ecx,[ecx+edx*1+0x3272ec]
  4270cc:	cmp    eax,ecx
  4270ce:	jae    0x42747f
  4270d4:	mov    eax,DWORD PTR [ebp+0x8]
  4270d7:	xor    eax,edi
  4270d9:	add    eax,ebx
  4270db:	mov    DWORD PTR [ebp+0x18],eax
  4270de:	mov    eax,DWORD PTR [ebp+0x1c]
  4270e1:	add    eax,DWORD PTR [ebp-0x1c]
  4270e4:	mov    DWORD PTR [ebp-0x4],eax
  4270e7:	push   DWORD PTR [ebp-0x4]
  4270ea:	mov    esi,DWORD PTR [ebp-0x1c]
  4270ed:	mov    ecx,DWORD PTR [ebp+0x10]
  4270f0:	call   0x42623f
  4270f5:	mov    DWORD PTR [ebp+0xc],eax
  4270f8:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  4270ff:	mov    eax,DWORD PTR [ebp-0x18]
  427102:	xor    eax,edi
  427104:	lea    ecx,[ebp-0x40]
  427107:	add    eax,ebx
  427109:	push   ecx
  42710a:	call   0x4267d3
  42710f:	mov    eax,DWORD PTR [ebp+0xc]
  427112:	test   eax,eax
  427114:	je     0x427164
  427116:	mov    eax,DWORD PTR [ebp-0x18]
  427119:	xor    eax,edi
  42711b:	add    eax,ebx
  42711d:	push   eax
  42711e:	push   DWORD PTR [ebp+0xc]
  427121:	lea    eax,[ebp-0x40]
  427124:	push   eax
  427125:	call   0x4266c9
  42712a:	mov    eax,DWORD PTR [ebp-0x4]
  42712d:	mov    DWORD PTR [ebp-0x18],eax
  427130:	mov    eax,DWORD PTR [ebp-0x18]
  427133:	mov    ecx,DWORD PTR [ebp-0x1c]
  427136:	sub    eax,ecx
  427138:	mov    DWORD PTR [ebp-0x18],eax
  42713b:	mov    eax,DWORD PTR [ebp+0xc]
  42713e:	mov    ecx,DWORD PTR [ebp+0xc]
  427141:	mov    eax,DWORD PTR [eax+0x10]
  427144:	add    eax,DWORD PTR [ecx+0xc]
  427147:	mov    ecx,DWORD PTR [ebp-0x18]
  42714a:	cmp    ecx,eax
  42714c:	jb     0x427164
  42714e:	mov    eax,DWORD PTR [ebp+0xc]
  427151:	mov    eax,DWORD PTR [eax+0xc]
  427154:	mov    ecx,DWORD PTR [ebp+0xc]
  427157:	add    eax,DWORD PTR [ecx+0x8]
  42715a:	mov    ecx,DWORD PTR [ebp-0x18]
  42715d:	sub    eax,ecx
  42715f:	jmp    0x427452
  427164:	push   0xc
  427166:	push   DWORD PTR [ebp-0x4]
  427169:	lea    eax,[ebp-0x4c]
  42716c:	push   eax
  42716d:	call   0x4266c9
  427172:	mov    eax,0xf89c85b0
  427177:	mov    DWORD PTR [ebp-0x2c],eax
  42717a:	mov    DWORD PTR [ebp-0x30],0xf89c85b1
  427181:	mov    DWORD PTR [ebp-0x34],0xf89c85b2
  427188:	mov    DWORD PTR [ebp-0x38],0xf89c85b3
  42718f:	lea    ecx,[ebp-0x2c]
  427192:	mov    DWORD PTR [ebp-0xc],ecx
  427195:	lea    ecx,[ebp-0x30]
  427198:	mov    DWORD PTR [ebp-0x10],ecx
  42719b:	lea    ecx,[ebp-0x34]
  42719e:	mov    DWORD PTR [ebp+0xc],ecx
  4271a1:	lea    ecx,[ebp-0x38]
  4271a4:	mov    DWORD PTR [ebp-0x14],ecx
  4271a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4271aa:	xor    ecx,edi
  4271ac:	add    ecx,ebx
  4271ae:	mov    DWORD PTR [ebp-0x18],ecx
  4271b1:	jmp    0x4273ad
  4271b6:	cmp    eax,0xf89c85b2
  4271bb:	je     0x4273bf
  4271c1:	mov    ecx,DWORD PTR [ebp-0x8]
  4271c4:	xor    ecx,edi
  4271c6:	mov    esi,eax
  4271c8:	add    ecx,ebx
  4271ca:	mov    DWORD PTR [ebp+0x18],ecx
  4271cd:	mov    eax,DWORD PTR [ebp-0x18]
  4271d0:	xor    esi,edi
  4271d2:	lea    eax,[eax+esi*1+0x3272ec]
  4271d9:	mov    DWORD PTR [ebp-0x18],eax
  4271dc:	mov    eax,DWORD PTR [ebp-0x8]
  4271df:	mov    ecx,DWORD PTR [ebp-0x18]
  4271e2:	xor    eax,edi
  4271e4:	add    eax,ebx
  4271e6:	cmp    ecx,eax
  4271e8:	jne    0x4271fd
  4271ea:	mov    eax,DWORD PTR [ebp+0x8]
  4271ed:	xor    eax,edi
  4271ef:	add    eax,ebx
  4271f1:	push   eax
  4271f2:	push   0xc
  4271f4:	lea    eax,[ebp-0x4c]
  4271f7:	push   eax
  4271f8:	call   0x426caf
  4271fd:	mov    eax,DWORD PTR [ebp-0xc]
  427200:	mov    eax,DWORD PTR [eax]
  427202:	xor    eax,edi
  427204:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  42720b:	mov    ecx,DWORD PTR [ebp+0x8]
  42720e:	xor    ecx,edi
  427210:	movzx  eax,al
  427213:	add    ecx,ebx
  427215:	cmp    eax,ecx
  427217:	je     0x427395
  42721d:	mov    eax,DWORD PTR [ebp-0x10]
  427220:	mov    eax,DWORD PTR [eax]
  427222:	xor    eax,edi
  427224:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  42722b:	mov    ecx,DWORD PTR [ebp+0x8]
  42722e:	xor    ecx,edi
  427230:	movzx  eax,al
  427233:	add    ecx,ebx
  427235:	cmp    eax,ecx
  427237:	je     0x427395
  42723d:	mov    eax,DWORD PTR [ebp+0xc]
  427240:	mov    eax,DWORD PTR [eax]
  427242:	xor    eax,edi
  427244:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  42724b:	mov    ecx,DWORD PTR [ebp+0x8]
  42724e:	xor    ecx,edi
  427250:	movzx  eax,al
  427253:	add    ecx,ebx
  427255:	cmp    eax,ecx
  427257:	je     0x427395
  42725d:	mov    eax,DWORD PTR [ebp-0x14]
  427260:	mov    eax,DWORD PTR [eax]
  427262:	xor    eax,edi
  427264:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  42726b:	mov    ecx,DWORD PTR [ebp+0x8]
  42726e:	xor    ecx,edi
  427270:	movzx  eax,al
  427273:	add    ecx,ebx
  427275:	cmp    eax,ecx
  427277:	je     0x427395
  42727d:	mov    eax,DWORD PTR [ebp-0x10]
  427280:	mov    eax,DWORD PTR [eax]
  427282:	xor    eax,edi
  427284:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  42728b:	mov    ecx,DWORD PTR [ebp-0xc]
  42728e:	mov    ecx,DWORD PTR [ecx]
  427290:	xor    ecx,edi
  427292:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  427299:	xor    al,cl
  42729b:	mov    ecx,DWORD PTR [ebp+0xc]
  42729e:	mov    ecx,DWORD PTR [ecx]
  4272a0:	xor    ecx,edi
  4272a2:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  4272a9:	or     al,cl
  4272ab:	mov    ecx,DWORD PTR [ebp-0xc]
  4272ae:	mov    ecx,DWORD PTR [ecx]
  4272b0:	xor    ecx,edi
  4272b2:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  4272b9:	cmp    cl,al
  4272bb:	jne    0x427395
  4272c1:	mov    eax,DWORD PTR [ebp+0xc]
  4272c4:	mov    eax,DWORD PTR [eax]
  4272c6:	xor    eax,edi
  4272c8:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  4272cf:	mov    ecx,DWORD PTR [ebp-0x10]
  4272d2:	mov    ecx,DWORD PTR [ecx]
  4272d4:	xor    ecx,edi
  4272d6:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  4272dd:	xor    al,cl
  4272df:	mov    ecx,DWORD PTR [ebp-0x14]
  4272e2:	mov    ecx,DWORD PTR [ecx]
  4272e4:	xor    ecx,edi
  4272e6:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  4272ed:	or     al,cl
  4272ef:	mov    ecx,DWORD PTR [ebp-0x10]
  4272f2:	mov    ecx,DWORD PTR [ecx]
  4272f4:	xor    ecx,edi
  4272f6:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  4272fd:	cmp    cl,al
  4272ff:	jne    0x427395
  427305:	mov    eax,DWORD PTR [ebp-0x14]
  427308:	mov    eax,DWORD PTR [eax]
  42730a:	xor    eax,edi
  42730c:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  427313:	mov    ecx,DWORD PTR [ebp+0xc]
  427316:	mov    ecx,DWORD PTR [ecx]
  427318:	xor    ecx,edi
  42731a:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  427321:	xor    al,cl
  427323:	mov    ecx,DWORD PTR [ebp-0xc]
  427326:	mov    ecx,DWORD PTR [ecx]
  427328:	xor    ecx,edi
  42732a:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  427331:	or     al,cl
  427333:	mov    ecx,DWORD PTR [ebp+0xc]
  427336:	mov    ecx,DWORD PTR [ecx]
  427338:	xor    ecx,edi
  42733a:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  427341:	cmp    cl,al
  427343:	jne    0x427395
  427345:	mov    eax,DWORD PTR [ebp-0x14]
  427348:	mov    eax,DWORD PTR [eax]
  42734a:	xor    eax,edi
  42734c:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  427353:	mov    ecx,DWORD PTR [ebp-0xc]
  427356:	mov    ecx,DWORD PTR [ecx]
  427358:	xor    ecx,edi
  42735a:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  427361:	xor    al,cl
  427363:	mov    ecx,DWORD PTR [ebp-0x10]
  427366:	mov    ecx,DWORD PTR [ecx]
  427368:	xor    ecx,edi
  42736a:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  427371:	or     al,cl
  427373:	mov    ecx,DWORD PTR [ebp-0x14]
  427376:	mov    ecx,DWORD PTR [ecx]
  427378:	xor    ecx,edi
  42737a:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  427381:	cmp    cl,al
  427383:	jne    0x427395
  427385:	lea    eax,[ebp-0x4c]
  427388:	push   eax
  427389:	call   0x426e50
  42738e:	mov    ecx,DWORD PTR [ebp-0x44]
  427391:	cmp    eax,ecx
  427393:	je     0x42739f
  427395:	mov    eax,DWORD PTR [ebp+0x8]
  427398:	xor    eax,edi
  42739a:	add    eax,ebx
  42739c:	mov    DWORD PTR [ebp+0x18],eax
  42739f:	mov    eax,DWORD PTR [ebp-0x8]
  4273a2:	xor    eax,edi
  4273a4:	lea    eax,[eax+esi*1+0x3272ec]
  4273ab:	xor    eax,edi
  4273ad:	mov    ecx,DWORD PTR [ebp+0x8]
  4273b0:	mov    edx,DWORD PTR [ebp+0x18]
  4273b3:	xor    ecx,edi
  4273b5:	add    ecx,ebx
  4273b7:	cmp    edx,ecx
  4273b9:	je     0x4271b6
  4273bf:	mov    eax,DWORD PTR [ebp+0x8]
  4273c2:	mov    ecx,DWORD PTR [ebp+0x18]
  4273c5:	xor    eax,edi
  4273c7:	add    eax,ebx
  4273c9:	cmp    ecx,eax
  4273cb:	jne    0x4273de
  4273cd:	mov    eax,DWORD PTR [ebp-0x8]
  4273d0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4273d3:	xor    eax,edi
  4273d5:	lea    eax,[eax+ecx*1+0x3272ec]
  4273dc:	jmp    0x427455
  4273de:	push   0x18
  4273e0:	push   DWORD PTR [ebp-0x4]
  4273e3:	lea    eax,[ebp-0x64]
  4273e6:	push   eax
  4273e7:	call   0x4266c9
  4273ec:	mov    eax,DWORD PTR [ebp+0x8]
  4273ef:	mov    ecx,DWORD PTR [ebp-0x18]
  4273f2:	xor    eax,edi
  4273f4:	add    eax,ebx
  4273f6:	cmp    eax,ecx
  4273f8:	je     0x42740d
  4273fa:	mov    eax,DWORD PTR [ebp+0x8]
  4273fd:	xor    eax,edi
  4273ff:	add    eax,ebx
  427401:	push   eax
  427402:	push   0x18
  427404:	lea    eax,[ebp-0x64]
  427407:	push   eax
  427408:	call   0x426caf
  42740d:	mov    eax,DWORD PTR [ebp-0x4]
  427410:	add    eax,0x18
  427413:	mov    DWORD PTR [ebp+0x18],eax
  427416:	push   DWORD PTR [ebp-0x50]
  427419:	push   DWORD PTR [ebp+0x18]
  42741c:	mov    eax,DWORD PTR [ebp-0x54]
  42741f:	add    eax,DWORD PTR [ebp-0x20]
  427422:	push   eax
  427423:	call   0x4266c9
  427428:	mov    eax,DWORD PTR [ebp+0x8]
  42742b:	mov    ecx,DWORD PTR [ebp-0x18]
  42742e:	xor    eax,edi
  427430:	add    eax,ebx
  427432:	cmp    eax,ecx
  427434:	je     0x427447
  427436:	push   0x0
  427438:	push   DWORD PTR [ebp-0x50]
  42743b:	mov    eax,DWORD PTR [ebp-0x54]
  42743e:	add    eax,DWORD PTR [ebp-0x20]
  427441:	push   eax
  427442:	call   0x426caf
  427447:	mov    eax,DWORD PTR [ebp-0x24]
  42744a:	mov    ecx,DWORD PTR [ebp-0x50]
  42744d:	add    DWORD PTR [eax],ecx
  42744f:	mov    eax,DWORD PTR [ebp-0x50]
  427452:	add    eax,DWORD PTR [ebp+0x1c]
  427455:	mov    DWORD PTR [ebp+0x1c],eax
  427458:	mov    eax,DWORD PTR [ebp-0x8]
  42745b:	mov    ecx,DWORD PTR [ebp+0x1c]
  42745e:	xor    eax,edi
  427460:	add    eax,ebx
  427462:	imul   eax,ecx
  427465:	mov    ecx,DWORD PTR [ebp+0x8]
  427468:	mov    edx,DWORD PTR [ebp-0x28]
  42746b:	xor    ecx,edi
  42746d:	lea    ecx,[ecx+edx*1+0x3272ec]
  427474:	cmp    eax,ecx
  427476:	jb     0x4270d4
  42747c:	mov    esi,DWORD PTR [ebp+0x14]
  42747f:	mov    eax,DWORD PTR [ebp-0x20]
  427482:	mov    DWORD PTR [esi],eax
  427484:	jmp    0x4274cb
  427486:	mov    ecx,DWORD PTR [ebp+0x8]
  427489:	mov    edx,DWORD PTR [ebp+0xc]
  42748c:	xor    ecx,edi
  42748e:	xor    edx,edi
  427490:	add    ecx,ebx
  427492:	add    edx,ebx
  427494:	cmp    ecx,edx
  427496:	jne    0x4274aa
  427498:	mov    eax,ds:0x7f642ddf
  42749d:	imul   eax,eax,0x9f15fcce
  4274a3:	mov    ds:0x7f642ddf,eax
  4274a8:	jmp    0x4274cb
  4274aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4274ad:	xor    ecx,edi
  4274af:	add    ecx,ebx
  4274b1:	cmp    eax,ecx
  4274b3:	je     0x4274c1
  4274b5:	sub    DWORD PTR ds:0xf861e3f,0x709beac1
  4274bf:	jmp    0x4274cb
  4274c1:	and    DWORD PTR ds:0x3343fadf,0x5265ec3e
  4274cb:	pop    edi
  4274cc:	pop    esi
  4274cd:	pop    ebx
  4274ce:	leave  
  4274cf:	ret    0x18
  4274d2:	push   ebp
  4274d3:	mov    ebp,esp
  4274d5:	and    esp,0xfffffff8
  4274d8:	mov    eax,DWORD PTR [ebp+0x20]
  4274db:	sub    esp,0x14
  4274de:	push   ebx
  4274df:	mov    ebx,DWORD PTR [ebp+0x14]
  4274e2:	push   esi
  4274e3:	push   edi
  4274e4:	cmp    eax,0xf89c85b0
  4274e9:	jne    0x4274f5
  4274eb:	push   0xf89c85b1
  4274f0:	jmp    0x427627
  4274f5:	mov    eax,DWORD PTR [ebp+0x20]
  4274f8:	cmp    eax,0xf89c85b1
  4274fd:	jne    0x427509
  4274ff:	push   0xf89c85b2
  427504:	jmp    0x427627
  427509:	mov    eax,DWORD PTR [ebp+0x20]
  42750c:	cmp    eax,0xf89c85b2
  427511:	jne    0x42751d
  427513:	push   0xf89c85b3
  427518:	jmp    0x427627
  42751d:	mov    eax,DWORD PTR [ebp+0x20]
  427520:	cmp    eax,0xf89c85b3
  427525:	jne    0x427531
  427527:	push   0xf89c85bc
  42752c:	jmp    0x427627
  427531:	mov    ecx,DWORD PTR [ebp+0x20]
  427534:	mov    eax,0xf89c85bf
  427539:	cmp    ecx,eax
  42753b:	jne    0x4275f7
  427541:	mov    eax,DWORD PTR [ebp+0x10]
  427544:	mov    DWORD PTR [esp+0xc],eax
  427548:	mov    eax,DWORD PTR [ebp+0x18]
  42754b:	mov    DWORD PTR [esp+0x14],eax
  42754f:	mov    eax,DWORD PTR [ebp+0xc]
  427552:	mov    DWORD PTR [esp+0x18],eax
  427556:	mov    eax,DWORD PTR [ebp+0x8]
  427559:	mov    DWORD PTR [esp+0x10],eax
  42755d:	mov    eax,DWORD PTR [esp+0x10]
  427561:	mov    ecx,DWORD PTR [esp+0x14]
  427565:	mov    edi,0x75108a4
  42756a:	xor    eax,edi
  42756c:	mov    esi,0x3272ec
  427571:	add    eax,esi
  427573:	mov    DWORD PTR [ecx],eax
  427575:	mov    eax,DWORD PTR [esp+0xc]
  427579:	mov    eax,DWORD PTR [eax+0x194]
  42757f:	mov    ecx,DWORD PTR [eax]
  427581:	mov    eax,DWORD PTR [esp+0xc]
  427585:	mov    eax,DWORD PTR [eax+0x194]
  42758b:	mov    eax,DWORD PTR [eax]
  42758d:	add    eax,DWORD PTR [ecx+0x3c]
  427590:	mov    ecx,DWORD PTR [esp+0xc]
  427594:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42759a:	mov    ecx,DWORD PTR [ecx+0x14]
  42759d:	push   0x4
  42759f:	push   0x3000
  4275a4:	push   DWORD PTR [eax+0x50]
  4275a7:	push   0x0
  4275a9:	call   ecx
  4275ab:	mov    DWORD PTR [ebx],eax
  4275ad:	mov    eax,DWORD PTR [esp+0x10]
  4275b1:	push   DWORD PTR [esp+0xc]
  4275b5:	xor    eax,edi
  4275b7:	add    eax,esi
  4275b9:	mov    DWORD PTR [esp+0x20],eax
  4275bd:	lea    eax,[esp+0x20]
  4275c1:	push   eax
  4275c2:	push   ebx
  4275c3:	push   DWORD PTR [esp+0x20]
  4275c7:	push   DWORD PTR [esp+0x28]
  4275cb:	push   DWORD PTR [esp+0x24]
  4275cf:	call   0x426f94
  4275d4:	mov    eax,DWORD PTR [esp+0x10]
  4275d8:	mov    ecx,DWORD PTR [ebx]
  4275da:	xor    eax,edi
  4275dc:	add    eax,esi
  4275de:	cmp    ecx,eax
  4275e0:	je     0x42763e
  4275e2:	mov    eax,DWORD PTR [esp+0x18]
  4275e6:	mov    ecx,DWORD PTR [esp+0x14]
  4275ea:	xor    eax,edi
  4275ec:	add    eax,esi
  4275ee:	imul   eax,DWORD PTR [esp+0x1c]
  4275f3:	mov    DWORD PTR [ecx],eax
  4275f5:	jmp    0x42763e
  4275f7:	mov    ecx,DWORD PTR [ebp+0x20]
  4275fa:	cmp    ecx,0xf89c85bc
  427600:	jne    0x427609
  427602:	push   0xf89c85bd
  427607:	jmp    0x427627
  427609:	mov    ecx,DWORD PTR [ebp+0x20]
  42760c:	cmp    ecx,0xf89c85bd
  427612:	jne    0x42761b
  427614:	push   0xf89c85be
  427619:	jmp    0x427627
  42761b:	mov    ecx,DWORD PTR [ebp+0x20]
  42761e:	cmp    ecx,0xf89c85be
  427624:	jne    0x42763e
  427626:	push   eax
  427627:	push   DWORD PTR [ebp+0x1c]
  42762a:	push   DWORD PTR [ebp+0x18]
  42762d:	push   ebx
  42762e:	push   DWORD PTR [ebp+0x10]
  427631:	push   DWORD PTR [ebp+0xc]
  427634:	push   DWORD PTR [ebp+0x8]
  427637:	call   0x4274d2
  42763c:	mov    DWORD PTR [ebx],eax
  42763e:	mov    eax,DWORD PTR [ebx]
  427640:	pop    edi
  427641:	pop    esi
  427642:	pop    ebx
  427643:	mov    esp,ebp
  427645:	pop    ebp
  427646:	ret    0x1c
  427649:	push   ebp
  42764a:	mov    ebp,esp
  42764c:	sub    esp,0xc
  42764f:	mov    eax,0xf89c85b0
  427654:	mov    DWORD PTR [ebp-0x8],eax
  427657:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  42765e:	mov    ecx,DWORD PTR [ebp-0x8]
  427661:	xor    ecx,0x75108a4
  427667:	add    ecx,0x3272ec
  42766d:	mov    DWORD PTR [ebp-0x4],ecx
  427670:	mov    ecx,DWORD PTR [ebp+0xc]
  427673:	push   eax
  427674:	mov    DWORD PTR [ebp+0xc],ecx
  427677:	push   DWORD PTR [ebp+0xc]
  42767a:	lea    eax,[ebp-0x4]
  42767d:	push   DWORD PTR [ebp+0x8]
  427680:	push   eax
  427681:	push   DWORD PTR [ebp+0xc]
  427684:	push   DWORD PTR [ebp-0xc]
  427687:	push   DWORD PTR [ebp-0x8]
  42768a:	call   0x4274d2
  42768f:	mov    DWORD PTR [ebp-0x4],eax
  427692:	mov    eax,DWORD PTR [ebp-0x4]
  427695:	leave  
  427696:	ret    0x8
