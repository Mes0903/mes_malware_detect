
326735da30b6d47848b5ab4e97c743eb370ceb1d5b7ba18eb35b72359a5c2840.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,ds:0x42920b
  40100e:	mov    eax,DWORD PTR [eax]
  401010:	and    DWORD PTR ds:0x429157,eax
  401016:	mov    eax,DWORD PTR [ebp+0x8]
  401019:	and    DWORD PTR ds:0x4291e7,0x0
  401023:	mov    ecx,DWORD PTR ds:0x4291e7
  401029:	inc    ecx
  40102a:	mov    DWORD PTR ds:0x4291e7,ecx
  401030:	cmp    DWORD PTR ds:0x4291e7,0xe
  401037:	jle    0x401072
  40103d:	jmp    0x40104b
  401042:	push   DWORD PTR [ebp-0x20]
  401045:	call   DWORD PTR ds:0x42a533
  40104b:	cmp    DWORD PTR ds:0x4291e7,0xd
  401052:	jne    0x401065
  401058:	mov    ecx,DWORD PTR ds:0x4291e7
  40105e:	inc    ecx
  40105f:	mov    DWORD PTR ds:0x4291e7,ecx
  401065:	cmp    DWORD PTR ds:0x4291e7,0x1c
  40106c:	jb     0x401023
  401072:	push   ebx
  401073:	sub    DWORD PTR ds:0x429157,0x3bd6
  40107d:	push   esi
  40107e:	mov    esi,DWORD PTR ds:0x429827
  401084:	mov    ecx,DWORD PTR ds:0x429e53
  40108a:	sub    ecx,esi
  40108c:	add    esi,DWORD PTR [esi+ecx*1]
  40108f:	push   edi
  401090:	mov    esi,0x75108ac
  401095:	xor    DWORD PTR ds:0x4291af,ebx
  40109b:	xor    eax,esi
  40109d:	mov    edi,0x3272f3
  4010a2:	sbb    DWORD PTR ds:0x4291f3,0x4c4b
  4010ac:	add    eax,edi
  4010ae:	and    DWORD PTR ds:0x429163,0x59cd
  4010b8:	mov    DWORD PTR [ebp-0x40],eax
  4010bb:	mov    eax,ds:0x42915f
  4010c0:	sbb    eax,DWORD PTR ds:0x42919f
  4010c6:	mov    ds:0x42915f,eax
  4010cb:	mov    eax,ds:0x42818b
  4010d0:	and    DWORD PTR ds:0x42918b,0x0
  4010da:	jmp    0x4010ee
  4010df:	xor    ecx,ecx
  4010e1:	xor    ecx,DWORD PTR ds:0x42918b
  4010e7:	inc    ecx
  4010e8:	mov    DWORD PTR ds:0x42918b,ecx
  4010ee:	cmp    DWORD PTR ds:0x42918b,0x1e
  4010f5:	jae    0x401144
  4010fb:	cmp    DWORD PTR ds:0x42918b,0xe
  401102:	ja     0x401144
  401108:	jmp    0x401123
  40110d:	push   DWORD PTR [ebp-0x24]
  401110:	push   0x428152
  401115:	push   0x4280c4
  40111a:	push   DWORD PTR [ebp-0x20]
  40111d:	call   DWORD PTR ds:0x42a53b
  401123:	cmp    DWORD PTR ds:0x42918b,0xd
  40112a:	jne    0x40113f
  401130:	xor    ecx,ecx
  401132:	or     ecx,DWORD PTR ds:0x42918b
  401138:	inc    ecx
  401139:	mov    DWORD PTR ds:0x42918b,ecx
  40113f:	jmp    0x4010df
  401144:	mov    eax,DWORD PTR [eax]
  401146:	mov    ecx,DWORD PTR ds:0x4291bf
  40114c:	sbb    DWORD PTR ds:0x42914f,ecx
  401152:	mov    DWORD PTR [ebp-0x3c],eax
  401155:	mov    eax,ds:0x429223
  40115a:	mov    ecx,DWORD PTR ds:0x429e63
  401160:	sub    eax,ecx
  401162:	add    eax,DWORD PTR [eax+ecx*1]
  401165:	mov    eax,ds:0x42839b
  40116a:	mov    DWORD PTR ds:0x429167,0x18
  401174:	cmp    DWORD PTR ds:0x429167,0x0
  40117b:	je     0x4011cb
  401181:	cmp    DWORD PTR ds:0x429167,0x3
  401188:	jle    0x4011cb
  40118e:	jmp    0x40119f
  401193:	push   DWORD PTR [ebp-0x24]
  401196:	push   DWORD PTR [ebp-0x14]
  401199:	call   DWORD PTR ds:0x42a53f
  40119f:	cmp    DWORD PTR ds:0x429167,0x4
  4011a6:	jne    0x4011b9
  4011ac:	mov    ecx,DWORD PTR ds:0x429167
  4011b2:	dec    ecx
  4011b3:	mov    DWORD PTR ds:0x429167,ecx
  4011b9:	mov    ecx,DWORD PTR ds:0x429167
  4011bf:	dec    ecx
  4011c0:	mov    DWORD PTR ds:0x429167,ecx
  4011c6:	jmp    0x401174
  4011cb:	mov    eax,DWORD PTR [eax]
  4011cd:	or     DWORD PTR ds:0x4291b7,0x5973
  4011d7:	mov    DWORD PTR [ebp-0x1c],eax
  4011da:	mov    DWORD PTR [ebp-0x34],0xf89c87a1
  4011e1:	sbb    ecx,ecx
  4011e3:	mov    eax,DWORD PTR [ebp-0x34]
  4011e6:	and    DWORD PTR ds:0x4291bf,ecx
  4011ec:	xor    eax,esi
  4011ee:	add    eax,edi
  4011f0:	adc    DWORD PTR ds:0x42919f,0x1e2a
  4011fa:	mov    DWORD PTR [ebp-0x40],eax
  4011fd:	mov    eax,ds:0x42830b
  401202:	mov    DWORD PTR [ebp-0x40],eax
  401205:	mov    eax,ds:0x429e5f
  40120a:	mov    eax,DWORD PTR [eax]
  40120c:	and    DWORD PTR ds:0x4291f7,eax
  401212:	mov    eax,DWORD PTR [ebp-0x3c]
  401215:	adc    DWORD PTR ds:0x42914b,0x2509
  40121f:	mov    DWORD PTR [ebp-0x14],eax
  401222:	and    ecx,ecx
  401224:	mov    eax,DWORD PTR [ebp-0x14]
  401227:	xor    DWORD PTR ds:0x42918f,ecx
  40122d:	push   0x4
  40122f:	neg    ecx
  401231:	pop    ecx
  401232:	sub    ecx,eax
  401234:	and    DWORD PTR ds:0x42916b,0x0
  40123e:	jmp    0x40124e
  401243:	mov    eax,ds:0x42916b
  401248:	inc    eax
  401249:	mov    ds:0x42916b,eax
  40124e:	cmp    DWORD PTR ds:0x42916b,0x1e
  401255:	jae    0x40127d
  40125b:	cmp    DWORD PTR ds:0x42916b,0x27
  401262:	ja     0x40127d
  401268:	jmp    0x401278
  40126d:	push   0x4291bb
  401272:	call   DWORD PTR ds:0x42a543
  401278:	jmp    0x401243
  40127d:	add    ecx,DWORD PTR [ebp-0x1c]
  401280:	and    DWORD PTR ds:0x42915b,0x0
  40128a:	jmp    0x40129d
  40128f:	xor    eax,eax
  401291:	xor    eax,DWORD PTR ds:0x42915b
  401297:	inc    eax
  401298:	mov    ds:0x42915b,eax
  40129d:	cmp    DWORD PTR ds:0x42915b,0x1a
  4012a4:	jae    0x4012ec
  4012aa:	cmp    DWORD PTR ds:0x42915b,0xe
  4012b1:	jle    0x4012ec
  4012b7:	jmp    0x4012cc
  4012bc:	push   0x1df3
  4012c1:	push   0x428062
  4012c6:	call   DWORD PTR ds:0x42a547
  4012cc:	cmp    DWORD PTR ds:0x42915b,0xd
  4012d3:	jne    0x4012e7
  4012d9:	xor    eax,eax
  4012db:	xor    eax,DWORD PTR ds:0x42915b
  4012e1:	inc    eax
  4012e2:	mov    ds:0x42915b,eax
  4012e7:	jmp    0x40128f
  4012ec:	mov    DWORD PTR [ebp-0x2c],0xf89c85e1
  4012f3:	mov    DWORD PTR ds:0x4291d7,0x3a8d
  4012fd:	mov    DWORD PTR [ebp-0x18],ecx
  401300:	and    DWORD PTR ds:0x42916f,ecx
  401306:	mov    DWORD PTR [ebp-0xa0],0xf89c85bd
  401310:	mov    eax,DWORD PTR [ebp-0x14]
  401313:	xor    DWORD PTR ds:0x4291e7,0x69e7
  40131d:	mov    DWORD PTR [ebp-0x9c],eax
  401323:	mov    eax,DWORD PTR [ebp-0x18]
  401326:	or     DWORD PTR ds:0x42916f,0x429173
  401330:	mov    DWORD PTR [ebp-0x98],eax
  401336:	and    DWORD PTR ds:0x429187,ecx
  40133c:	mov    eax,DWORD PTR [ebp-0x2c]
  40133f:	xor    eax,esi
  401341:	mov    DWORD PTR ds:0x4291ab,0x4dc6
  40134b:	add    eax,edi
  40134d:	mov    DWORD PTR [ebp-0x94],eax
  401353:	adc    DWORD PTR ds:0x429193,0x429197
  40135d:	lea    eax,[ebp-0x48]
  401360:	sbb    DWORD PTR ds:0x42914f,0x4291c3
  40136a:	mov    DWORD PTR [ebp-0x90],eax
  401370:	mov    eax,ds:0x42917f
  401375:	or     DWORD PTR ds:0x4291bf,eax
  40137b:	mov    eax,DWORD PTR [ebp-0xa0]
  401381:	adc    DWORD PTR ds:0x429187,0x4291df
  40138b:	xor    eax,esi
  40138d:	add    eax,edi
  40138f:	mov    DWORD PTR [ebp-0xa0],eax
  401395:	lea    eax,[ebp-0xa0]
  40139b:	and    DWORD PTR ds:0x42919f,0x4291a7
  4013a5:	push   eax
  4013a6:	mov    eax,DWORD PTR [ebp+0xc]
  4013a9:	mov    DWORD PTR ds:0x42917b,0x524d
  4013b3:	xor    eax,esi
  4013b5:	add    eax,edi
  4013b7:	and    DWORD PTR ds:0x429183,0x429193
  4013c1:	push   eax
  4013c2:	sub    DWORD PTR ds:0x429173,0x45d8
  4013cc:	mov    eax,ds:0x42832b
  4013d1:	xor    DWORD PTR ds:0x42917b,0x37ec
  4013db:	push   0x428281
  4013e0:	sub    DWORD PTR ds:0x4291e3,0x5ee0
  4013ea:	push   DWORD PTR [eax]
  4013ec:	xor    DWORD PTR ds:0x42916b,0x429197
  4013f6:	call   0x4085e5
  4013fb:	and    DWORD PTR ds:0x429153,0x0
  401405:	mov    edx,DWORD PTR ds:0x429153
  40140b:	inc    edx
  40140c:	mov    DWORD PTR ds:0x429153,edx
  401412:	cmp    DWORD PTR ds:0x429153,0x24
  401419:	jb     0x401442
  40141f:	jmp    0x401435
  401424:	push   0x4280d6
  401429:	push   DWORD PTR [ebp-0x18]
  40142c:	push   DWORD PTR [ebp-0x14]
  40142f:	call   DWORD PTR ds:0x42a54f
  401435:	cmp    DWORD PTR ds:0x429153,0x15
  40143c:	jb     0x401405
  401442:	mov    ebx,DWORD PTR [ebp-0x14]
  401445:	add    DWORD PTR ds:0x42914f,edx
  40144b:	mov    eax,DWORD PTR [ebp-0x18]
  40144e:	and    DWORD PTR ds:0x42916b,0x0
  401458:	jmp    0x40146a
  40145d:	mov    edx,DWORD PTR ds:0x42916b
  401463:	inc    edx
  401464:	mov    DWORD PTR ds:0x42916b,edx
  40146a:	cmp    DWORD PTR ds:0x42916b,0x17
  401471:	jae    0x4014b1
  401477:	cmp    DWORD PTR ds:0x42916b,0xc
  40147e:	ja     0x4014b1
  401484:	jmp    0x401492
  401489:	push   DWORD PTR [ebp-0x24]
  40148c:	call   DWORD PTR ds:0x42a553
  401492:	cmp    DWORD PTR ds:0x42916b,0xb
  401499:	jne    0x4014ac
  40149f:	mov    edx,DWORD PTR ds:0x42916b
  4014a5:	inc    edx
  4014a6:	mov    DWORD PTR ds:0x42916b,edx
  4014ac:	jmp    0x40145d
  4014b1:	mov    DWORD PTR [ebp-0x58],eax
  4014b4:	add    DWORD PTR ds:0x4291c7,edi
  4014ba:	mov    DWORD PTR [ebp-0x34],0xf89c8538
  4014c1:	mov    eax,0xf89c85a3
  4014c6:	inc    DWORD PTR ds:0x42916f
  4014cc:	mov    DWORD PTR [ebp-0x1c],eax
  4014cf:	lea    ecx,[eax-0x2]
  4014d2:	inc    DWORD PTR ds:0x42919b
  4014d8:	mov    DWORD PTR [ebp-0x28],ecx
  4014db:	movzx  edx,BYTE PTR ds:0x429163
  4014e2:	or     DWORD PTR ds:0x4291e7,edx
  4014e8:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  4014ef:	mov    DWORD PTR [ebp-0x8],eax
  4014f2:	and    DWORD PTR ds:0x4291e7,0x0
  4014fc:	jmp    0x40150c
  401501:	mov    eax,ds:0x4291e7
  401506:	inc    eax
  401507:	mov    ds:0x4291e7,eax
  40150c:	cmp    DWORD PTR ds:0x4291e7,0x11
  401513:	jae    0x401543
  401519:	cmp    DWORD PTR ds:0x4291e7,0x13
  401520:	jge    0x401543
  401526:	jmp    0x40153e
  40152b:	push   0x4280b5
  401530:	push   DWORD PTR [ebp-0x28]
  401533:	push   0x738c
  401538:	call   DWORD PTR ds:0x42a557
  40153e:	jmp    0x401501
  401543:	mov    eax,DWORD PTR [ebp-0x10]
  401546:	sbb    DWORD PTR ds:0x429193,edi
  40154c:	xor    eax,esi
  40154e:	sub    edx,DWORD PTR ds:0x429193
  401554:	mov    edx,0xffcd8d8d
  401559:	sub    edx,eax
  40155b:	mov    DWORD PTR ds:0x42915b,edx
  401561:	mov    DWORD PTR [ebp-0xc],edx
  401564:	movzx  eax,WORD PTR ds:0x4291f7
  40156b:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  401572:	mov    eax,DWORD PTR [ebp-0x8]
  401575:	mov    DWORD PTR [ebp-0x3c],ebx
  401578:	cmp    eax,ecx
  40157a:	mov    DWORD PTR ds:0x4291d3,0x104a
  401584:	je     0x403bad
  40158a:	add    ecx,0x327f
  401590:	mov    eax,DWORD PTR [ebp-0x10]
  401593:	mov    ecx,DWORD PTR [ebp-0x10]
  401596:	sbb    DWORD PTR ds:0x4291b3,0x52cd
  4015a0:	xor    eax,esi
  4015a2:	xor    ecx,esi
  4015a4:	lea    ecx,[eax+ecx*1+0x64e5e6]
  4015ab:	mov    eax,DWORD PTR [ebp-0xc]
  4015ae:	or     DWORD PTR ds:0x429153,0x67db
  4015b8:	xor    edx,edx
  4015ba:	div    ecx
  4015bc:	mov    eax,DWORD PTR [ebp-0x8]
  4015bf:	xor    ecx,0x4574
  4015c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4015c8:	xor    eax,esi
  4015ca:	or     DWORD PTR ds:0x4291df,0xa4f
  4015d4:	xor    ecx,esi
  4015d6:	or     DWORD PTR ds:0x42915f,0x4291eb
  4015e0:	sub    eax,ecx
  4015e2:	cmp    edx,eax
  4015e4:	jne    0x401764
  4015ea:	mov    eax,DWORD PTR [ebp-0xc]
  4015ed:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  4015f4:	add    ecx,DWORD PTR ds:0x4291d7
  4015fa:	mov    eax,DWORD PTR [ebp-0x28]
  4015fd:	mov    ecx,DWORD PTR [ebp-0x18]
  401600:	sub    DWORD PTR ds:0x42916f,0x2374
  40160a:	xor    eax,esi
  40160c:	add    DWORD PTR ds:0x429197,0x6412
  401616:	xor    ecx,esi
  401618:	add    eax,edi
  40161a:	add    ecx,edi
  40161c:	mov    DWORD PTR ds:0x42914f,0x798e
  401626:	mov    BYTE PTR [ebp-0x21],dl
  401629:	mov    DWORD PTR ds:0x42916f,0x52dc
  401633:	cmp    eax,ecx
  401635:	mov    DWORD PTR ds:0x42918f,0x1786
  40163f:	jae    0x401707
  401645:	and    DWORD PTR ds:0x42915b,ecx
  40164b:	lea    ecx,[eax-0x3272f3]
  401651:	not    edx
  401653:	mov    DWORD PTR [ebp-0x14],ecx
  401656:	mov    edx,DWORD PTR [ebp-0x14]
  401659:	xor    edx,esi
  40165b:	xor    DWORD PTR ds:0x4291a7,0x52cf
  401665:	add    edx,0x7f55d8e3
  40166b:	lea    ecx,[ebp+eax*4-0xb4]
  401672:	mov    DWORD PTR [ecx],edx
  401674:	mov    edx,DWORD PTR ds:0x429193
  40167a:	mov    edx,DWORD PTR [ecx]
  40167c:	cmp    edx,0x244ecb9c
  401682:	jbe    0x4016a7
  401688:	add    DWORD PTR ds:0x42916b,0x3ac8
  401692:	add    DWORD PTR [ecx],0x405fcdd
  401698:	mov    DWORD PTR ds:0x42919f,0x6763
  4016a2:	jmp    0x4016b7
  4016a7:	add    DWORD PTR ds:0x42914f,0x4291af
  4016b1:	add    DWORD PTR [ecx],0xfdaf4323
  4016b7:	sub    ecx,0x38f7
  4016bd:	mov    ecx,DWORD PTR [ebp-0x18]
  4016c0:	xor    DWORD PTR ds:0x4291c7,0x8c7
  4016ca:	xor    ecx,esi
  4016cc:	dec    DWORD PTR ds:0x42915b
  4016d2:	inc    eax
  4016d3:	sbb    DWORD PTR ds:0x4291cf,0x4291df
  4016dd:	inc    DWORD PTR [ebp-0x14]
  4016e0:	add    DWORD PTR ds:0x4291f3,0x429193
  4016ea:	add    ecx,edi
  4016ec:	cmp    eax,ecx
  4016ee:	mov    DWORD PTR ds:0x4291d3,0x74e1
  4016f8:	jb     0x401656
  4016fe:	not    DWORD PTR ds:0x4291af
  401704:	mov    dl,BYTE PTR [ebp-0x21]
  401707:	xor    DWORD PTR ds:0x429153,edi
  40170d:	mov    eax,DWORD PTR [ebp-0x34]
  401710:	mov    DWORD PTR ds:0x429173,0x31f7
  40171a:	xor    al,0xac
  40171c:	xor    DWORD PTR ds:0x429157,0x429193
  401726:	mov    cl,0xd
  401728:	sub    cl,al
  40172a:	add    dl,cl
  40172c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40172f:	adc    DWORD PTR ds:0x4291c3,0x11c9
  401739:	xor    cl,0xac
  40173c:	sub    cl,0xd
  40173f:	and    DWORD PTR ds:0x4291ef,0x4291b7
  401749:	ror    dl,cl
  40174b:	movzx  ecx,WORD PTR ds:0x4291e3
  401752:	sbb    DWORD PTR ds:0x4291ef,ecx
  401758:	xor    eax,eax
  40175a:	mov    eax,DWORD PTR [ebp-0xc]
  40175d:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  401764:	mov    eax,DWORD PTR [ebp-0xc]
  401767:	adc    ecx,0x7a4f
  40176d:	mov    ecx,DWORD PTR [ebp-0x28]
  401770:	or     DWORD PTR ds:0x42918f,0x42919b
  40177a:	jmp    0x403b2b
  40177f:	pop    ss
  401780:	mov    eax,0x80c4d8c4
  401785:	pop    es
  401786:	mov    al,0x4
  401788:	add    eax,0xba0a92fe
  40178d:	mov    ah,0x67
  40178f:	add    DWORD PTR [ebx+0x5cef8383],0xffffff83
  401796:	sub    DWORD PTR [edx],0x2d
  401799:	and    al,0x3e
  40179b:	cmp    ah,BYTE PTR es:[eax]
  40179e:	sub    al,0x7a
  4017a0:	cmp    eax,0x74a97776
  4017a5:	jae    0x40181a
  4017a7:	jb     0x4017f4
  4017a9:	fcmovu st,st(5)
  4017ab:	(bad)  
  4017ac:	imul   edx,DWORD PTR [ecx+0x70],0x79a9607e
  4017b3:	jb     0x40181b
  4017b5:	int3   
  4017b6:	bound  edx,QWORD PTR [ebx+0x39]
  4017b9:	lea    eax,[ebx]
  4017bb:	xchg   esp,eax
  4017bc:	xchg   DWORD PTR [edx+edx*2+0x7c],esp
  4017c0:	inc    esp
  4017c1:	mov    DWORD PTR [edi+0x40bbb97c],esi
  4017c7:	sub    eax,0x3dd77fc
  4017cc:	push   0x46f21f7c
  4017d1:	rol    bl,cl
  4017d3:	repnz xchg esp,eax
  4017d5:	sub    bh,bl
  4017d7:	nop
  4017d8:	ss or  al,0x66
  4017db:	mov    al,0x93
  4017dd:	aad    0x4
  4017df:	jb     0x4017c3
  4017e1:	adc    eax,0x37030fe5
  4017e6:	and    DWORD PTR [ecx+0xd],edx
  4017e9:	aaa    
  4017ea:	jo     0x40185d
  4017ec:	(bad)  
  4017ed:	lods   al,BYTE PTR ds:[esi]
  4017ee:	sub    BYTE PTR [esi+0x1a],bl
  4017f1:	mov    bh,0xfc
  4017f3:	not    BYTE PTR [esi+0x30]
  4017f6:	test   DWORD PTR [ebx-0x2f],ecx
  4017f9:	pusha  
  4017fa:	push   es
  4017fb:	and    eax,DWORD PTR [ebx]
  4017fd:	cmp    DWORD PTR [esi+0x5ca1e278],0x2514be90
  401807:	fwait
  401808:	dec    esi
  401809:	or     BYTE PTR [edi+0x10888b3d],bl
  40180f:	jecxz  0x401843
  401811:	imul   edx,DWORD PTR [edx-0x79ab7bb],0xffffffcc
  401818:	xchg   ebx,eax
  401819:	ss xchg esi,eax
  40181b:	leave  
  40181c:	(bad)  
  40181d:	int    0x91
  40181f:	outs   dx,BYTE PTR ds:[esi]
  401820:	cmc    
  401821:	pop    edx
  401822:	imul   ecx,DWORD PTR [ebp+0xd],0x3f
  401826:	or     BYTE PTR [edi+0x18],al
  401829:	mov    dl,0x50
  40182b:	shl    DWORD PTR [ecx+ecx*2+0x26715d9],cl
  401832:	imul   esp,DWORD PTR [edi-0x46],0x6
  401836:	jno    0x4017f4
  401838:	add    DWORD PTR [ebx+0x1e],ebx
  40183b:	pop    esp
  40183c:	push   cs
  40183d:	(bad)  
  40183e:	fucomi st,st(5)
  401840:	popa   
  401841:	mov    al,BYTE PTR [eax+0x40e6d9d6]
  401847:	jg     0x401871
  401849:	cmp    esp,DWORD PTR ds:0x15f533ef
  40184f:	ss ret 0x814b
  401853:	enter  0xd103,0x7b
  401857:	mov    ds,eax
  401859:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40185a:	ror    DWORD PTR [esi+0x23],0x85
  40185e:	mov    dl,0x5d
  401860:	sbb    BYTE PTR [edx+0x6d],cl
  401863:	jae    0x401882
  401865:	jecxz  0x4018d4
  401867:	mov    al,0x37
  401869:	ss pushf 
  40186b:	(bad)  
  40186c:	mov    ebp,0x68ebcab0
  401871:	or     ah,dl
  401873:	push   es
  401874:	push   esi
  401875:	mov    edx,0x4d375c51
  40187a:	loop   0x4018a6
  40187c:	push   0xffffffc1
  40187e:	push   ebp
  40187f:	ffreep st(3)
  401881:	stos   DWORD PTR es:[edi],eax
  401882:	ror    DWORD PTR ds:0x954fbb11,1
  401888:	cmp    eax,0x97f6767
  40188d:	push   edi
  40188e:	in     al,dx
  40188f:	xor    edx,DWORD PTR [ebx+0x22]
  401892:	and    eax,0x8894f006
  401897:	int    0xcf
  401899:	ins    BYTE PTR es:[edi],dx
  40189a:	sub    BYTE PTR [ecx+0x2b],dh
  40189d:	jno    0x4018f1
  40189f:	or     BYTE PTR [edx+0x497a7f8a],bh
  4018a5:	retf   0x4b6e
  4018a8:	cmp    dh,BYTE PTR [ecx+0x4f36a17f]
  4018ae:	stos   BYTE PTR es:[edi],al
  4018af:	adc    eax,0xc58619b6
  4018b4:	out    0xa4,eax
  4018b6:	sbb    al,0x9d
  4018b8:	sar    DWORD PTR [eax],1
  4018ba:	(bad)  
  4018bb:	aad    0x1e
  4018bd:	test   al,0x4d
  4018bf:	stc    
  4018c0:	aam    0x37
  4018c2:	ret    0xe2de
  4018c5:	out    dx,al
  4018c6:	jo     0x40188e
  4018c8:	sub    DWORD PTR [ecx+0x6],edx
  4018cb:	inc    esi
  4018cc:	mov    bh,0xf9
  4018ce:	int    0x24
  4018d0:	mov    ebx,ebp
  4018d2:	rcl    BYTE PTR [ebx-0x22],1
  4018d5:	or     bh,bh
  4018d7:	jge    0x401934
  4018d9:	cmp    al,0x7b
  4018db:	out    dx,al
  4018dc:	cmc    
  4018dd:	mov    al,ds:0x8e97bf59
  4018e2:	gs mov bl,0x5e
  4018e5:	enter  0xe38b,0x91
  4018e9:	(bad)  
  4018ea:	mov    al,ds:0x42a98d8f
  4018ef:	loope  0x4018bf
  4018f1:	loopne 0x40191c
  4018f3:	lahf   
  4018f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018f5:	xlat   BYTE PTR ds:[ebx]
  4018f6:	mov    al,ds:0xffd6ab79
  4018fb:	stos   BYTE PTR es:[edi],al
  4018fc:	cmc    
  4018fd:	mov    esp,DWORD PTR [ecx+0x6cf91f96]
  401903:	ret    0x8459
  401906:	push   ebx
  401907:	mov    BYTE PTR [edi],cl
  401909:	bound  ecx,QWORD PTR [ebx+0x89c093b]
  40190f:	and    cl,ah
  401911:	es mov ecx,0x88d57adf
  401917:	mov    al,ds:0x7ab19b0b
  40191c:	jg     0x401989
  40191e:	push   ds
  40191f:	jmp    0xf828:0xfcbdf9b4
  401926:	lods   eax,DWORD PTR ds:[esi]
  401927:	dec    eax
  401928:	or     esi,DWORD PTR [esi+0x798c721b]
  40192e:	mov    cl,0x8a
  401930:	or     DWORD PTR ds:[ebx-0x4dd2af8e],ecx
  401937:	inc    esp
  401938:	lods   eax,DWORD PTR ds:[esi]
  401939:	xor    al,0x33
  40193b:	into   
  40193c:	fstp   DWORD PTR [edi-0x3aa62594]
  401942:	aas    
  401943:	sbb    ah,dh
  401945:	xchg   esp,eax
  401946:	pop    ds
  401947:	inc    ebx
  401948:	jo     0x401948
  40194a:	add    BYTE PTR [edx],0x7a
  40194d:	add    ah,BYTE PTR [edi]
  40194f:	rcr    BYTE PTR [edx+eax*1],0x97
  401953:	pop    edx
  401954:	ja     0x401987
  401956:	stos   BYTE PTR es:[edi],al
  401957:	mov    al,0x6e
  401959:	aam    0x2e
  40195b:	pop    edx
  40195c:	cmp    dl,bh
  40195e:	in     eax,dx
  40195f:	jne    0x4018f6
  401961:	push   es
  401962:	push   ebx
  401963:	test   BYTE PTR ds:0x68397485,ch
  401969:	jl     0x4019de
  40196b:	addr16 sub eax,0x7ac5bb67
  401971:	adc    bl,BYTE PTR [ebp+0x4f]
  401974:	push   edx
  401975:	jo     0x4019a2
  401977:	jno    0x4019ed
  401979:	jnp    0x401951
  40197b:	mov    al,ds:0xf39c9812
  401980:	ja     0x40196e
  401982:	inc    ebx
  401983:	cs inc ecx
  401985:	pop    esi
  401986:	sub    al,0xa7
  401988:	test   DWORD PTR [ebx-0x45],ebp
  40198b:	xchg   esi,eax
  40198c:	dec    esi
  40198d:	sbb    BYTE PTR [ecx],bl
  40198f:	add    ch,BYTE PTR [esi]
  401991:	outs   dx,BYTE PTR ds:[esi]
  401992:	xor    eax,0xa4dd48c6
  401997:	stos   BYTE PTR es:[edi],al
  401998:	aam    0xcb
  40199a:	mov    DWORD PTR [ebp*8-0x8a3a45c],edx
  4019a1:	fadd   st,st(2)
  4019a3:	push   edi
  4019a4:	pop    ss
  4019a5:	or     al,0xb1
  4019a7:	fidivr DWORD PTR [ecx]
  4019a9:	repnz add al,0xe5
  4019ac:	adc    DWORD PTR [edx-0x4b6848c6],esp
  4019b2:	sub    al,0x4d
  4019b4:	(bad)  [edx-0x7d]
  4019b7:	or     al,0xeb
  4019b9:	jae    0x401980
  4019bb:	xchg   ecx,eax
  4019bc:	hlt    
  4019bd:	inc    ebx
  4019be:	dec    esp
  4019bf:	inc    ebx
  4019c0:	out    dx,eax
  4019c1:	sub    DWORD PTR [edi+0x10],ebp
  4019c4:	xor    al,0xa
  4019c6:	test   eax,0x4a211ab2
  4019cb:	pop    edx
  4019cc:	sbb    DWORD PTR [ebx-0x6d],eax
  4019cf:	and    dl,BYTE PTR [esi]
  4019d1:	ss jmp 0x945900ba
  4019d7:	(bad)  
  4019d8:	call   0x679516c6
  4019dd:	arpl   WORD PTR [eax+0x70172bb1],si
  4019e3:	adc    BYTE PTR [ecx],0xda
  4019e6:	call   0x56372cc7
  4019eb:	jno    0x401986
  4019ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019ee:	jnp    0x40197a
  4019f0:	dec    edx
  4019f1:	(bad)  
  4019f3:	into   
  4019f4:	nop
  4019f5:	inc    eax
  4019f6:	and    al,0x2c
  4019f8:	nop
  4019f9:	add    eax,0xe28cb28b
  4019fe:	sti    
  4019ff:	inc    edi
  401a00:	adc    bl,BYTE PTR [ecx-0x51]
  401a03:	sub    esi,DWORD PTR [eax+0x35743b35]
  401a09:	dec    edi
  401a0a:	jo     0x4019e4
  401a0c:	test   DWORD PTR [ecx-0x14],edx
  401a0f:	mov    bl,0x4a
  401a11:	repnz les esi,FWORD PTR [ecx-0x9]
  401a15:	jmp    0x7aff:0xf2e8c14b
  401a1c:	adc    eax,0xbcdfa602
  401a21:	repz or al,0xad
  401a24:	or     eax,0x57b55c9f
  401a29:	das    
  401a2a:	in     al,0xf3
  401a2c:	or     BYTE PTR [edi-0x3c2f4549],ah
  401a32:	ss out 0xfe,al
  401a35:	jno    0x401ab5
  401a37:	dec    ecx
  401a38:	jmp    0x23219f79
  401a3d:	ins    BYTE PTR es:[edi],dx
  401a3e:	cmp    DWORD PTR [ecx+0x6b],0xfffffff1
  401a42:	dec    ebp
  401a43:	(bad)  
  401a44:	mov    esi,0xc391aa42
  401a49:	out    dx,eax
  401a4a:	fisubr DWORD PTR [eax-0x55]
  401a4d:	mov    dl,0xa2
  401a4f:	push   ss
  401a50:	ror    ecx,cl
  401a52:	jle    0x401a7b
  401a54:	cmp    DWORD PTR [ebp+0x8],0x1d1b648c
  401a5b:	call   0xd317:0x7a1b0b79
  401a62:	jns    0x4019e6
  401a64:	jbe    0x401a64
  401a66:	(bad)  
  401a67:	daa    
  401a68:	sbb    ah,BYTE PTR [esp+esi*1]
  401a6b:	pop    ebp
  401a6c:	ret    
  401a6d:	add    al,0xd1
  401a6f:	and    ecx,ebx
  401a71:	push   edi
  401a72:	add    BYTE PTR [eax+0x55],0x34
  401a76:	call   0xc091:0xc59cb391
  401a7d:	lock adc eax,0x1dd182cf
  401a83:	jecxz  0x401a50
  401a85:	xor    bl,BYTE PTR [ebp-0x19]
  401a88:	stos   DWORD PTR es:[edi],eax
  401a89:	outs   dx,DWORD PTR ds:[esi]
  401a8a:	sub    DWORD PTR [edi+0x1515a326],ebp
  401a90:	mov    ah,bh
  401a92:	adc    DWORD PTR [ecx+0x59a344a5],ebp
  401a98:	jno    0x401a82
  401a9a:	pop    ebx
  401a9b:	adc    BYTE PTR [esi],0x6b
  401a9e:	in     eax,dx
  401a9f:	adc    eax,edi
  401aa1:	cmp    bh,bl
  401aa3:	xor    eax,0x6aa9ac5b
  401aa8:	pop    edi
  401aa9:	fdivr  st,st(0)
  401aab:	neg    DWORD PTR es:[edx]
  401aae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401aaf:	imul   DWORD PTR [ecx+0x67243589]
  401ab5:	push   es
  401ab6:	mov    ebp,0xe680a261
  401abb:	je     0x401b00
  401abd:	jmp    0x401aa9
  401abf:	cs scas al,BYTE PTR es:[edi]
  401ac1:	in     al,0x48
  401ac3:	cmp    al,0xc8
  401ac5:	ss scas al,BYTE PTR es:[edi]
  401ac7:	popf   
  401ac8:	mov    eax,ds:0x5f55bc6d
  401acd:	mov    ds:0x60437e80,eax
  401ad2:	adc    dh,BYTE PTR ds:0xde95bdf4
  401ad8:	scas   al,BYTE PTR es:[edi]
  401ad9:	das    
  401ada:	inc    esi
  401adb:	jecxz  0x401a66
  401add:	es out dx,eax
  401adf:	pop    es
  401ae0:	add    edx,DWORD PTR [edx+0x74]
  401ae3:	addr16 iret 
  401ae5:	sbb    al,0x69
  401ae7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ae8:	arpl   WORD PTR [eax-0x53],sp
  401aeb:	mov    ch,0x97
  401aed:	mov    ?,esi
  401aef:	iret   
  401af0:	xchg   esp,eax
  401af1:	shl    BYTE PTR [edi],cl
  401af3:	lea    ebp,[ebx+eax*8]
  401af6:	jmp    0x49effa70
  401afb:	ins    BYTE PTR es:[edi],dx
  401afc:	sbb    BYTE PTR [edx],cl
  401afe:	retf   0x918c
  401b01:	mov    eax,ds:0x59c62976
  401b06:	push   ss
  401b07:	mov    ah,0xd8
  401b09:	scas   eax,DWORD PTR es:[edi]
  401b0a:	sahf   
  401b0b:	or     ecx,ecx
  401b0d:	into   
  401b0e:	nop
  401b0f:	rcl    DWORD PTR [ecx+0x59],cl
  401b12:	mov    cs,WORD PTR [ebp+0x770b1fc5]
  401b18:	dec    edi
  401b19:	stc    
  401b1a:	imul   eax,ecx,0x7c96358e
  401b20:	jecxz  0x401b34
  401b22:	jmp    0x22ca:0x1f708194
  401b29:	stos   BYTE PTR es:[edi],al
  401b2a:	cmp    BYTE PTR [ebx-0x5bc6d8b5],bh
  401b30:	mov    esi,0xaaaca817
  401b35:	mov    ebp,ebx
  401b37:	mov    cl,0x55
  401b39:	imul   edi,DWORD PTR [ebx+0x4c],0x7a971964
  401b40:	jle    0x401acb
  401b42:	sub    eax,0xb81a1a4
  401b47:	shl    BYTE PTR [esi-0x5a5c055b],cl
  401b4d:	jmp    0x91de:0xb9de1d27
  401b54:	xor    al,0x2
  401b56:	cmp    al,0x5e
  401b58:	fsub   QWORD PTR [bx]
  401b5b:	fiadd  DWORD PTR gs:[ebx+0x70]
  401b5f:	mov    esp,DWORD PTR [ebx]
  401b61:	ja     0x401bcf
  401b63:	ds inc esp
  401b65:	mov    DWORD PTR [ebx+0x3e0da188],edi
  401b6b:	mov    DWORD PTR [ecx-0x1f],ecx
  401b6e:	add    ebx,DWORD PTR [ebx+eiz*1-0x47]
  401b72:	jnp    0x401b2a
  401b74:	dec    esi
  401b75:	mov    es,WORD PTR [ecx+ebx*8-0x72]
  401b79:	xor    eax,0xe08d4b1b
  401b7e:	loopne 0x401b0f
  401b80:	inc    edi
  401b81:	mov    BYTE PTR [ebp-0x9],dl
  401b84:	outs   dx,BYTE PTR ds:[esi]
  401b85:	pop    edx
  401b86:	sahf   
  401b87:	cmp    eax,0xe02b2d67
  401b8c:	icebp  
  401b8d:	in     al,0x6c
  401b8f:	test   DWORD PTR [ebx-0x7b],edi
  401b92:	daa    
  401b93:	dec    edx
  401b94:	(bad)  
  401b95:	outs   dx,BYTE PTR ds:[esi]
  401b96:	sub    eax,0x6b4aced
  401b9b:	sahf   
  401b9c:	and    DWORD PTR [ecx],eax
  401b9e:	scas   eax,DWORD PTR es:[edi]
  401b9f:	add    esp,edx
  401ba1:	dec    ebx
  401ba2:	xchg   BYTE PTR ds:0x7c72861c,dl
  401ba8:	cmc    
  401ba9:	xchg   edx,eax
  401baa:	sbb    al,0x27
  401bac:	mov    dh,0xf7
  401bae:	imul   eax,DWORD PTR [esi+eax*1-0x63172f43],0x53ca1a5f
  401bb9:	dec    ebx
  401bba:	aaa    
  401bbb:	xor    DWORD PTR [esi+eax*1],0x7e
  401bbf:	sar    BYTE PTR [eax+0x5a],1
  401bc2:	lock int 0x3a
  401bc5:	repnz xchg esi,eax
  401bc7:	push   edx
  401bc8:	push   ecx
  401bc9:	jb     0x401b89
  401bcb:	mov    BYTE PTR ds:0xea45efe5,ch
  401bd1:	in     eax,dx
  401bd2:	stc    
  401bd3:	mov    dl,0x19
  401bd5:	add    al,0x42
  401bd7:	xor    al,0x64
  401bd9:	dec    esi
  401bda:	cmp    eax,0x11c025b4
  401bdf:	pop    esi
  401be0:	dec    ecx
  401be1:	fs int 0xf3
  401be4:	leave  
  401be5:	jo     0x401c0e
  401be7:	xchg   ebp,eax
  401be8:	lea    edx,ds:0xd7b29dd4
  401bee:	inc    esi
  401bef:	into   
  401bf0:	dec    esi
  401bf1:	add    BYTE PTR [ecx-0x34c022bc],dh
  401bf7:	ret    
  401bf8:	sub    DWORD PTR [edi],edi
  401bfa:	jbe    0x401baf
  401bfc:	jmp    0xbb5c7a3f
  401c01:	(bad)  
  401c02:	jnp    0x401c4c
  401c04:	xchg   esi,eax
  401c05:	mov    ch,0x14
  401c07:	fsubrp st(2),st
  401c09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c0a:	gs inc ebx
  401c0c:	gs and edx,ebp
  401c0f:	aas    
  401c10:	jecxz  0x401c2d
  401c12:	lods   eax,DWORD PTR ds:[esi]
  401c13:	and    al,0xa1
  401c15:	mov    dl,0xbf
  401c17:	dec    eax
  401c18:	sbb    DWORD PTR [ebx+0x252888cd],0x8652f491
  401c22:	xor    edx,DWORD PTR [ecx+eax*4]
  401c25:	cwde   
  401c26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c27:	jecxz  0x401c9d
  401c29:	push   ebp
  401c2a:	mov    al,0x5f
  401c2c:	pusha  
  401c2d:	dec    ecx
  401c2e:	dec    DWORD PTR [edx+0x4d]
  401c31:	sbb    DWORD PTR [edi+0x34573f0c],esi
  401c37:	pop    esi
  401c38:	bound  ecx,QWORD PTR [ebx-0x4a47d3dc]
  401c3e:	jno    0x401c6b
  401c40:	and    edi,DWORD PTR [ebx]
  401c42:	loop   0x401c81
  401c44:	(bad)  
  401c46:	loopne 0x401c19
  401c48:	dec    ebp
  401c49:	pushf  
  401c4a:	fisubr WORD PTR [ebx+ebp*1-0x577cde97]
  401c51:	test   al,0xc3
  401c53:	or     ecx,ecx
  401c55:	test   DWORD PTR [edi-0x2704171a],esi
  401c5b:	popa   
  401c5c:	and    ebx,DWORD PTR [eax+eax*8-0x1ff8d794]
  401c63:	jo     0x401c2e
  401c65:	jp     0x401c2a
  401c67:	sub    dl,BYTE PTR [edi]
  401c69:	pushf  
  401c6a:	jg     0x401cb2
  401c6c:	inc    eax
  401c6d:	sub    al,0x18
  401c6f:	jmp    0x401bf5
  401c71:	fdivr  st(2),st
  401c73:	push   0x286bbd3d
  401c78:	inc    edi
  401c79:	mov    ah,0xb0
  401c7b:	aad    0xaa
  401c7d:	adc    BYTE PTR [edi+0xc],bl
  401c80:	inc    edi
  401c81:	mov    ecx,0x93c68f9f
  401c86:	retf   0xd903
  401c89:	aad    0xa0
  401c8b:	dec    esi
  401c8c:	pabsw  mm5,QWORD PTR [ebx]
  401c90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c91:	inc    eax
  401c92:	jae    0x401c59
  401c94:	push   ss
  401c95:	ror    DWORD PTR [eax+0xa],1
  401c98:	dec    edi
  401c99:	jmp    0xe2bc:0xb8f713d6
  401ca0:	xchg   BYTE PTR [ebp+0xb],dl
  401ca3:	ror    ah,0x9b
  401ca6:	pop    es
  401ca7:	shr    BYTE PTR [ebx+0x3e41716e],cl
  401cad:	fisub  WORD PTR [esi]
  401caf:	xor    dh,al
  401cb1:	jl     0x401cad
  401cb3:	mov    eax,0xdd499a7a
  401cb8:	cmp    bl,BYTE PTR [edi+ebp*2]
  401cbb:	in     al,0x97
  401cbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cbe:	mov    BYTE PTR [ecx],dh
  401cc0:	inc    esi
  401cc1:	adc    ecx,DWORD PTR [ebx+0x23b858da]
  401cc7:	mov    bl,dh
  401cc9:	bound  edi,QWORD PTR [esi]
  401ccb:	adc    eax,0x685c19cf
  401cd0:	mov    ah,0x91
  401cd2:	sub    BYTE PTR [eax],ch
  401cd4:	mov    eax,ebx
  401cd6:	out    dx,eax
  401cd7:	mov    ds:0x989c801c,eax
  401cdc:	push   ebx
  401cdd:	scas   al,BYTE PTR es:[edi]
  401cde:	and    eax,0x8140903
  401ce3:	dec    esp
  401ce4:	out    0x94,al
  401ce6:	ins    DWORD PTR es:[edi],dx
  401ce7:	add    al,0xa1
  401ce9:	mov    al,ds:0xefa81280
  401cee:	inc    esp
  401cef:	aad    0x8d
  401cf1:	add    eax,0x1670b379
  401cf6:	or     edx,0xffffffaf
  401cf9:	mov    ds:0x3df58998,al
  401cfe:	fwait
  401cff:	retf   0x55c1
  401d02:	jp     0x401d30
  401d04:	dec    ebp
  401d05:	push   es
  401d06:	push   edi
  401d07:	push   ss
  401d08:	in     al,0xad
  401d0a:	stc    
  401d0b:	fild   DWORD PTR [ebx-0x80]
  401d0e:	jle    0x401cfa
  401d10:	pop    ebx
  401d11:	sub    DWORD PTR [ebx+0x26],0x3f
  401d15:	adc    ah,al
  401d17:	popa   
  401d18:	xor    al,0xb
  401d1a:	jmp    0x401cbc
  401d1c:	xor    esi,DWORD PTR [ecx-0x7b5458aa]
  401d22:	rcl    BYTE PTR [edx-0x2019f64],0x38
  401d29:	out    0xf3,al
  401d2b:	push   ebx
  401d2c:	loopne 0x401d02
  401d2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d2f:	repnz sub al,0xca
  401d32:	js     0x401d2b
  401d34:	test   ah,al
  401d36:	out    0xc8,eax
  401d38:	add    DWORD PTR [edi-0x52fe611c],ecx
  401d3e:	jecxz  0x401d83
  401d40:	push   edx
  401d41:	fcmove st,st(5)
  401d43:	shr    BYTE PTR [ebp-0x19],cl
  401d46:	cs jmp 0x8e6f:0x5149c7e5
  401d4e:	loop   0x401d6e
  401d50:	retf   0x9432
  401d53:	fsub   QWORD PTR [ecx]
  401d55:	cdq    
  401d56:	aad    0xd6
  401d58:	imul   edx,ebp,0xe95a50a3
  401d5e:	out    0x9a,eax
  401d60:	fnstcw WORD PTR [ebp+0xcfd39fd]
  401d66:	sub    DWORD PTR [edi-0x59],ebx
  401d69:	inc    eax
  401d6a:	and    ebx,DWORD PTR [ecx]
  401d6c:	ret    
  401d6d:	pop    edx
  401d6e:	lods   al,BYTE PTR ds:[esi]
  401d6f:	xchg   ebp,eax
  401d70:	repnz xor ecx,DWORD PTR [esi]
  401d73:	mov    ecx,0x45a0c221
  401d78:	pop    esp
  401d79:	lea    esi,[ecx+0x39774b67]
  401d7f:	push   0x5d
  401d81:	fnsetpm(287 only) 
  401d83:	sbb    DWORD PTR [ebx+0x297ab5d4],0x1f
  401d8a:	(bad)  
  401d8b:	not    BYTE PTR [esp+edi*8+0x3ec8c38c]
  401d92:	inc    edx
  401d93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d94:	add    esi,DWORD PTR [ebx]
  401d96:	nop
  401d97:	rcl    BYTE PTR [esi],0x57
  401d9a:	pop    esp
  401d9b:	dec    ebp
  401d9c:	scas   eax,DWORD PTR es:[edi]
  401d9d:	mov    ebp,0x527868c
  401da2:	push   ds
  401da3:	mov    edx,0xfc4cdcb0
  401da8:	or     ebp,DWORD PTR [ecx+esi*8]
  401dab:	fs mov bl,0x67
  401dae:	mov    eax,ds:0xa969d50b
  401db3:	jo     0x401dc8
  401db5:	adc    BYTE PTR es:[ebp+0x4362f19b],0x75
  401dbd:	mov    ebx,ebx
  401dbf:	cs jecxz 0x401d58
  401dc2:	pop    edx
  401dc3:	mov    eax,ds:0x6a3df07
  401dc8:	cmp    BYTE PTR ds:0x1ed4,ah
  401dcd:	fcmovne st,st(3)
  401dcf:	cmp    dh,dh
  401dd1:	mov    ecx,DWORD PTR [ecx-0x6be82040]
  401dd7:	pop    esi
  401dd8:	dec    ebp
  401dd9:	ja     0x401dd5
  401ddb:	pushf  
  401ddc:	mov    eax,ds:0x62e37ca5
  401de1:	scas   eax,DWORD PTR es:[edi]
  401de2:	push   ecx
  401de3:	xor    al,0x79
  401de5:	and    ebp,esi
  401de7:	push   edx
  401de8:	jns    0x401e12
  401dea:	push   edi
  401deb:	fmul   QWORD PTR [ecx-0x5093f9b5]
  401df1:	sub    DWORD PTR [ebp-0x783a8636],esp
  401df7:	pop    edi
  401df8:	add    eax,eax
  401dfa:	sub    bl,BYTE PTR [edx+eiz*4-0x6aeeddea]
  401e01:	inc    esp
  401e02:	pop    edi
  401e03:	daa    
  401e04:	jl     0x401e18
  401e06:	out    0xdd,eax
  401e08:	mov    eax,ds:0xff5cac53
  401e0d:	popa   
  401e0e:	cmc    
  401e0f:	mov    edi,0x3b4c858c
  401e14:	inc    eax
  401e15:	sbb    ebp,0xfffffff0
  401e18:	jae    0x401ded
  401e1a:	lods   eax,DWORD PTR ds:[esi]
  401e1b:	fisubr DWORD PTR [edi+ecx*8-0x7]
  401e1f:	das    
  401e20:	(bad)  
  401e21:	in     al,dx
  401e22:	push   esp
  401e23:	arpl   WORD PTR [edx-0x801c021],di
  401e29:	dec    ecx
  401e2a:	sahf   
  401e2b:	scas   eax,DWORD PTR es:[edi]
  401e2c:	sub    DWORD PTR [esi-0x7cd0a7c6],esi
  401e32:	pop    edi
  401e33:	imul   edx,esi,0xffffffba
  401e36:	xchg   ecx,eax
  401e37:	jp     0x401e8f
  401e39:	mov    esi,DWORD PTR [eax+0x282ea9fd]
  401e3f:	or     ebx,eax
  401e41:	cmp    al,0x41
  401e43:	cdq    
  401e44:	rcl    eax,1
  401e46:	xchg   ecx,eax
  401e47:	sbb    edx,DWORD PTR [edi]
  401e49:	jg     0x401e8e
  401e4b:	outs   dx,DWORD PTR ds:[esi]
  401e4c:	iret   
  401e4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e4e:	push   edi
  401e4f:	nop
  401e50:	jg     0x401e77
  401e52:	xchg   edx,eax
  401e53:	push   ecx
  401e54:	add    esp,edi
  401e56:	aas    
  401e57:	outs   dx,DWORD PTR ds:[esi]
  401e58:	add    ebx,DWORD PTR [bx+di]
  401e5b:	jne    0x401ecc
  401e5d:	fstp   TBYTE PTR [esi-0x16]
  401e60:	sbb    BYTE PTR [eax],ah
  401e62:	push   0x1bcf6de5
  401e67:	jmp    0x781520b7
  401e6c:	loopne 0x401e71
  401e6e:	in     al,0xe
  401e70:	popf   
  401e71:	or     esi,DWORD PTR [ecx+0xa9b68f6]
  401e77:	mov    bh,BYTE PTR [esi+0x76]
  401e7a:	pusha  
  401e7b:	lahf   
  401e7c:	fadd   st(5),st
  401e7e:	imul   ebp,DWORD PTR [ebx-0x72],0x1352fc69
  401e85:	xchg   ebx,eax
  401e86:	retf   0x69a
  401e89:	cmp    al,bl
  401e8b:	aas    
  401e8c:	dec    esp
  401e8d:	inc    esp
  401e8e:	cmp    BYTE PTR [eax+0x44],dh
  401e91:	popa   
  401e92:	ins    DWORD PTR es:[edi],dx
  401e93:	test   BYTE PTR [edi-0x6b],0xb3
  401e97:	or     DWORD PTR [ecx+0x26],0xfd54a507
  401e9e:	cmc    
  401e9f:	add    BYTE PTR [ebp+0x67],0xa6
  401ea3:	xlat   BYTE PTR ds:[ebx]
  401ea4:	push   cs
  401ea5:	mov    cl,0xc5
  401ea7:	jb     0x401e83
  401ea9:	xchg   edi,eax
  401eaa:	repz pushf 
  401eac:	test   BYTE PTR [ecx+0x48d1dd3d],dl
  401eb2:	or     DWORD PTR [ebx+ebx*2-0xc732a47],edx
  401eb9:	sub    bl,BYTE PTR [eax-0x72]
  401ebc:	out    dx,eax
  401ebd:	xor    DWORD PTR [ebp-0x62597c85],esi
  401ec3:	test   BYTE PTR [edi-0x56b5292a],bh
  401ec9:	pop    ecx
  401eca:	and    BYTE PTR ds:0xcb253ab6,bh
  401ed0:	or     esp,DWORD PTR [ebx-0x12fc74dd]
  401ed6:	and    eax,0x90a7d600
  401edb:	rcl    BYTE PTR [edx-0x33],0xd9
  401edf:	pop    eax
  401ee0:	sub    eax,0x645666ed
  401ee5:	les    ebx,FWORD PTR [esi-0x7f]
  401ee8:	xchg   ebx,eax
  401ee9:	rcr    BYTE PTR [edx+0x519eeb76],1
  401eef:	cwde   
  401ef0:	outs   dx,BYTE PTR ds:[esi]
  401ef1:	out    0x60,al
  401ef3:	cmp    al,0x1c
  401ef5:	fsubr  DWORD PTR [eax+0x7a]
  401ef8:	icebp  
  401ef9:	xlat   BYTE PTR ds:[ebx]
  401efa:	push   ecx
  401efb:	shl    ebx,0xb9
  401efe:	aad    0xe0
  401f00:	ja     0x401ef2
  401f02:	mov    ?,WORD PTR [ecx+0x30398d2b]
  401f08:	test   al,0x1c
  401f0a:	pop    eax
  401f0b:	popf   
  401f0c:	xlat   BYTE PTR ds:[ebx]
  401f0d:	loope  0x401e90
  401f0f:	xchg   edx,eax
  401f10:	xor    edi,DWORD PTR [ecx+0x784c2197]
  401f16:	adc    DWORD PTR [ecx],esi
  401f18:	mov    ds:0x46b73f27,al
  401f1d:	(bad)  
  401f1e:	les    eax,FWORD PTR [esi+0x2d0047c]
  401f24:	(bad)  
  401f25:	jmp    0x917:0xdb8ef2fd
  401f2c:	scas   al,BYTE PTR es:[edi]
  401f2d:	shr    ah,1
  401f2f:	nop
  401f30:	dec    eax
  401f31:	lods   eax,DWORD PTR ds:[esi]
  401f32:	iret   
  401f33:	mov    esp,0x6f0dba1d
  401f38:	jo     0x401f8c
  401f3a:	cld    
  401f3b:	and    bh,BYTE PTR [ebx+0x5f]
  401f3e:	inc    edi
  401f3f:	push   0x30
  401f41:	cmp    ch,BYTE PTR [ebx+0x2c]
  401f44:	stc    
  401f45:	dec    edx
  401f46:	stc    
  401f47:	dec    esp
  401f48:	lock dec esp
  401f4a:	sahf   
  401f4b:	icebp  
  401f4c:	cmp    DWORD PTR [ebp+0x23],edi
  401f4f:	stos   DWORD PTR es:[edi],eax
  401f50:	xchg   edi,eax
  401f51:	test   BYTE PTR [ebx],bl
  401f53:	sbb    eax,0x21235408
  401f58:	mov    al,0x84
  401f5a:	sub    BYTE PTR [edi+0xaf8482f],cl
  401f60:	loop   0x401fe0
  401f62:	sbb    DWORD PTR [esi+0x5c9cc07a],0x34832e6
  401f6c:	mov    bl,0x17
  401f6e:	cmp    al,0xcd
  401f70:	add    eax,0x2dbccbd8
  401f75:	or     eax,0x7ddd709
  401f7a:	pop    edi
  401f7b:	iret   
  401f7c:	xchg   edi,eax
  401f7e:	enter  0x59b6,0xe8
  401f82:	addr16 inc esp
  401f84:	and    BYTE PTR [eax+0x9b15008],ch
  401f8a:	fnstsw WORD PTR [edi]
  401f8c:	pop    ds
  401f8d:	js     0x401f6e
  401f8f:	mov    ebp,es
  401f91:	mov    ds:0xe572bda2,al
  401f96:	jo     0x401f68
  401f98:	mov    ds:0x5f75903f,eax
  401f9d:	in     eax,dx
  401f9e:	adc    ecx,ecx
  401fa0:	push   0xffffff8f
  401fa2:	sub    al,0xf1
  401fa4:	aad    0x48
  401fa6:	fdiv   DWORD PTR [esi-0x6d380017]
  401fac:	adc    eax,0x90f9d733
  401fb1:	and    ecx,DWORD PTR [ebx-0x62]
  401fb4:	dec    esi
  401fb5:	mov    eax,ds:0x3117ae3
  401fba:	addr16 in eax,dx
  401fbc:	out    dx,al
  401fbd:	sbb    BYTE PTR [edi-0x34],dh
  401fc0:	push   esp
  401fc1:	cmc    
  401fc2:	jnp    0x402013
  401fc4:	adc    al,0x2c
  401fc6:	(bad)  
  401fc7:	jp     0x402009
  401fc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fca:	pop    esp
  401fcb:	cdq    
  401fcc:	fldenv [eax+0x12]
  401fcf:	sbb    BYTE PTR [esp+edx*1],bh
  401fd2:	mov    edx,0x43707387
  401fd7:	jp     0x401f7b
  401fd9:	sub    al,0x2
  401fdb:	sahf   
  401fdc:	add    BYTE PTR [ebx-0x5f16144a],cl
  401fe2:	and    eax,0x813e6ec2
  401fe7:	mov    cl,0x4f
  401fe9:	je     0x40203d
  401feb:	mov    DWORD PTR [ecx-0x73faa8c1],0xa636631e
  401ff5:	cld    
  401ff6:	shl    DWORD PTR [edi],cl
  401ff8:	push   0xf1985ffd
  401ffd:	lds    cx,DWORD PTR [edx+0x17]
  402001:	leave  
  402002:	xor    bl,BYTE PTR [eax]
  402004:	pop    ecx
  402005:	mov    WORD PTR [eax],bp
  402008:	test   BYTE PTR [ebx],dl
  40200a:	fsub   QWORD PTR [edi]
  40200c:	je     0x401fca
  40200e:	outs   dx,DWORD PTR ds:[esi]
  40200f:	push   0x7b
  402011:	adc    DWORD PTR [eax-0x75],0xfd8b0e6b
  402018:	or     al,BYTE PTR [eax]
  40201a:	loop   0x402043
  40201c:	rol    dh,1
  40201e:	jmp    0x252f:0x7c686381
  402025:	and    DWORD PTR ds:0x7fd44800,ebp
  40202b:	adc    al,0x2f
  40202d:	ins    BYTE PTR es:[edi],dx
  40202e:	pop    esi
  40202f:	cli    
  402030:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402031:	out    0x37,al
  402033:	in     al,0x4b
  402035:	icebp  
  402036:	stos   DWORD PTR es:[edi],eax
  402037:	push   esp
  402038:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402039:	xor    bh,cl
  40203b:	and    BYTE PTR [si],ah
  40203e:	(bad)  
  402040:	mov    al,0xb4
  402042:	and    ecx,edx
  402044:	inc    esi
  402045:	sahf   
  402046:	mov    esi,edi
  402048:	jno    0x40204c
  40204a:	cmc    
  40204b:	jae    0x40200c
  40204d:	jmp    FWORD PTR [edx]
  40204f:	adc    BYTE PTR [edx+0x25553026],cl
  402055:	mov    bl,0x49
  402057:	sub    eax,0x6a17dbd
  40205c:	cmp    al,0x38
  40205f:	je     0x40200b
  402061:	sub    ah,BYTE PTR [edx]
  402063:	div    eax
  402065:	pop    ebp
  402066:	lock mov DWORD PTR [ecx+0x2a],ecx
  40206a:	mov    ?,esp
  40206c:	inc    esp
  40206d:	addr16 cmp eax,0x3539200a
  402073:	lods   eax,DWORD PTR ds:[esi]
  402074:	push   0xb349933b
  402079:	shl    DWORD PTR [esp+ebx*1+0x44df3153],cl
  402080:	and    ebx,0xac47d
  402086:	fnstenv [ecx+0xd0c7aa6]
  40208c:	inc    edx
  40208d:	cmp    al,0x6d
  40208f:	xchg   esp,eax
  402090:	sbb    DWORD PTR [edi+0x3290c8eb],ebp
  402096:	adc    dh,BYTE PTR [edx+0x5f]
  402099:	cdq    
  40209a:	add    dh,BYTE PTR [eax]
  40209c:	clc    
  40209d:	mov    esp,?
  40209f:	outs   dx,DWORD PTR ds:[esi]
  4020a0:	repz out 0x72,eax
  4020a3:	push   0x76
  4020a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020a6:	lods   al,BYTE PTR ds:[esi]
  4020a7:	ja     0x402077
  4020a9:	add    bh,dl
  4020ab:	lock out dx,eax
  4020ad:	xchg   ebx,eax
  4020ae:	jp     0x4020b6
  4020b0:	leave  
  4020b1:	push   0x7a859211
  4020b6:	inc    edx
  4020b7:	jle    0x4020b5
  4020b9:	mov    DWORD PTR [ecx-0x5c1967c5],eax
  4020bf:	mov    DWORD PTR [ecx-0x4176f0ad],0xc119a663
  4020c9:	outs   dx,DWORD PTR ds:[esi]
  4020ca:	std    
  4020cb:	pop    ss
  4020cc:	pop    ecx
  4020cd:	int    0xda
  4020cf:	xchg   esp,eax
  4020d0:	ret    0xe209
  4020d3:	out    dx,al
  4020d4:	sub    al,0xb7
  4020d6:	xor    eax,0x5311369
  4020db:	sbb    BYTE PTR ds:0xdb04f66c,bl
  4020e1:	ins    BYTE PTR es:[edi],dx
  4020e2:	psubb  mm5,mm6
  4020e5:	arpl   WORD PTR [edi+edx*8+0x20],sp
  4020e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020ea:	mov    esi,0x201af268
  4020ef:	and    al,0x23
  4020f1:	push   0xb9d33c28
  4020f6:	xlat   BYTE PTR ds:[ebx]
  4020f7:	test   al,0x4
  4020f9:	call   0xa5a1d2e9
  4020fe:	fidiv  WORD PTR [edi+ebx*1-0x666781f8]
  402105:	stc    
  402106:	sbb    ebx,DWORD PTR [edx]
  402108:	push   es
  402109:	xchg   edi,eax
  40210a:	int    0xf6
  40210c:	mov    dl,0x36
  40210e:	xlat   BYTE PTR ds:[ebx]
  40210f:	xchg   edi,eax
  402110:	sar    DWORD PTR [ebx+edi*2],cl
  402113:	push   es
  402114:	je     0x40218f
  402116:	jns    0x402103
  402118:	sahf   
  402119:	call   0xfbe:0x1059201d
  402120:	in     eax,dx
  402121:	mov    ecx,0xba4d9738
  402126:	pop    ds
  402127:	imul   edx,DWORD PTR [esi-0x41b7e9e5],0x31
  40212e:	into   
  40212f:	hlt    
  402130:	cmp    BYTE PTR [ecx+0x5e9164c3],bh
  402136:	std    
  402137:	xchg   ebp,eax
  402138:	into   
  402139:	lahf   
  40213a:	adc    al,0x18
  40213c:	jl     0x40213c
  40213e:	mov    esp,DWORD PTR [edx+eiz*1+0x6766be60]
  402145:	push   eax
  402146:	pop    eax
  402147:	jg     0x40212f
  402149:	movq   QWORD PTR [esi-0x3],mm7
  40214d:	jge    0x4021b7
  40214f:	push   ebx
  402150:	add    ah,dh
  402152:	outs   dx,DWORD PTR gs:[esi]
  402154:	pop    edx
  402155:	fwait
  402156:	mov    bl,0xd
  402158:	mov    al,ds:0x4c808431
  40215d:	int3   
  40215e:	and    DWORD PTR [esi],esi
  402160:	mov    edi,0x1d484955
  402165:	and    al,0xbd
  402167:	sar    DWORD PTR [edx],0xd4
  40216a:	popf   
  40216b:	cmp    BYTE PTR [esi+0x7c6f47da],al
  402171:	addr16 nop
  402173:	sub    al,0x4a
  402175:	mov    es,WORD PTR [ebx-0x3064d370]
  40217b:	mov    BYTE PTR [eax-0x4a0b02bf],cl
  402181:	fld    DWORD PTR [edx+0x6]
  402184:	push   ebp
  402185:	cmp    eax,0x65d6c86e
  40218a:	das    
  40218b:	cld    
  40218c:	addr16 cmp eax,0x53264f7a
  402192:	pop    ds
  402193:	push   ds
  402194:	inc    edi
  402195:	das    
  402196:	ror    DWORD PTR [ebx],cl
  402198:	ret    0xb593
  40219b:	or     DWORD PTR [eax+0x55953663],eax
  4021a1:	(bad)  
  4021a2:	fmulp  st(6),st
  4021a4:	fsub   DWORD PTR [ebx]
  4021a6:	popa   
  4021a7:	test   al,0xcf
  4021a9:	xchg   edx,eax
  4021aa:	mov    eax,0xb095e2ed
  4021af:	daa    
  4021b0:	pop    ds
  4021b1:	dec    edi
  4021b2:	mov    esp,0xf8d35367
  4021b7:	jecxz  0x40213b
  4021b9:	into   
  4021ba:	enter  0x3487,0x5f
  4021be:	mov    WORD PTR [ebx+eax*8-0x47],?
  4021c2:	popf   
  4021c3:	jbe    0x4021f3
  4021c5:	xchg   ebp,eax
  4021c6:	mov    ds:0xea10d015,eax
  4021cb:	loopne 0x402168
  4021cd:	(bad)  
  4021ce:	mov    ebp,0xa841aff
  4021d3:	pop    ebx
  4021d4:	sbb    ebp,DWORD PTR [ecx]
  4021d6:	push   ds
  4021d7:	sbb    BYTE PTR [edx],dh
  4021d9:	xchg   esi,eax
  4021da:	push   ss
  4021db:	sbb    ebx,ecx
  4021dd:	shr    DWORD PTR [ecx-0x5f],cl
  4021e0:	push   edx
  4021e1:	push   ebp
  4021e2:	sbb    al,0xc6
  4021e4:	inc    esi
  4021e5:	dec    edx
  4021e6:	xchg   dh,bh
  4021e8:	xor    DWORD PTR [edx],esp
  4021ea:	mov    eax,ds:0xbe48c9af
  4021ef:	xor    al,0x8e
  4021f1:	retf   
  4021f2:	lds    ebx,FWORD PTR [ebx+0x36]
  4021f5:	in     eax,0x77
  4021f7:	mov    al,ds:0x74de5cfe
  4021fc:	cwde   
  4021fd:	and    DWORD PTR [eax-0x1],0x66
  402201:	icebp  
  402202:	cmp    DWORD PTR [esi+0x79],ebx
  402205:	mov    ebx,0xe078cec9
  40220a:	mov    al,ds:0x60b7986e
  40220f:	fcmovu st,st(5)
  402211:	sbb    eax,edi
  402213:	inc    ecx
  402214:	jmp    0x4021e9
  402216:	xlat   BYTE PTR ds:[ebx]
  402217:	sbb    edi,0x60
  40221a:	jl     0x4021f2
  40221c:	pop    ss
  40221d:	xchg   ebp,eax
  40221e:	int3   
  40221f:	sbb    edi,ebp
  402221:	jns    0x4021b0
  402223:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402224:	or     dl,dl
  402226:	xchg   ebx,eax
  402227:	mov    dl,0x44
  402229:	nop
  40222a:	fadd   DWORD PTR [ebx-0x639e5b6d]
  402230:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402231:	fist   DWORD PTR ds:0x6697a4a0
  402237:	xcrypt-ctr (bad)
  402238:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402239:	fst    DWORD PTR [eax+eax*2-0x554dc336]
  402240:	xchg   ebx,eax
  402241:	pop    ds
  402242:	cld    
  402243:	mov    al,0xb1
  402245:	cmp    DWORD PTR [eax-0x6a108726],esp
  40224b:	sub    ah,BYTE PTR [edx+0x72]
  40224e:	jno    0x40221e
  402250:	lods   al,BYTE PTR ds:[esi]
  402251:	jp     0x402242
  402253:	aam    0x33
  402255:	sbb    ebx,DWORD PTR [ebx]
  402257:	mov    ah,0x56
  402259:	xchg   edx,eax
  40225a:	les    ebp,FWORD PTR [edx+edi*4+0x3e8fb822]
  402261:	and    DWORD PTR [ecx-0x5fe3806a],ecx
  402267:	mov    edx,0x6888b7a2
  40226c:	fcomp  DWORD PTR [edi+0x51e094f4]
  402272:	adc    ch,0x14
  402275:	push   0x46
  402277:	or     edi,DWORD PTR [esi+eax*2-0x1b8193c0]
  40227e:	mov    ebx,DWORD PTR [edx+edi*4+0x6f69ef00]
  402285:	in     al,dx
  402286:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402287:	arpl   WORD PTR [eax+eiz*4],bp
  40228a:	inc    ebx
  40228b:	xlat   BYTE PTR ds:[ebx]
  40228c:	and    esp,DWORD PTR [ebx]
  40228e:	mov    ebx,0x3b39075a
  402293:	rcr    BYTE PTR ds:0xb19feff4,1
  402299:	outs   dx,BYTE PTR ds:[esi]
  40229a:	ins    BYTE PTR es:[edi],dx
  40229b:	hlt    
  40229c:	icebp  
  40229d:	sbb    al,0x0
  40229f:	sbb    eax,0x3f69571e
  4022a4:	mov    esp,0xab651e11
  4022a9:	dec    ebx
  4022aa:	and    eax,0xaf3ef424
  4022af:	mov    esi,0xdfaac765
  4022b4:	pop    ebp
  4022b5:	add    BYTE PTR [esi-0x718dccef],bh
  4022bb:	mov    ds:0xf866f7c2,al
  4022c0:	and    BYTE PTR [ebx-0x50385fe2],bh
  4022c6:	dec    ebp
  4022c7:	aam    0xac
  4022c9:	xchg   edi,eax
  4022ca:	fidivr WORD PTR [ebp-0x62]
  4022cd:	ds push 0x73aa37c8
  4022d3:	int3   
  4022d4:	mov    ah,BYTE PTR [bp+di+0x59]
  4022d8:	and    ah,BYTE PTR [eax+edi*1]
  4022db:	push   cs
  4022dc:	push   esp
  4022dd:	cmp    DWORD PTR [ebx+0x4483425],esi
  4022e3:	xchg   ebp,eax
  4022e4:	xchg   ebx,eax
  4022e5:	(bad)  
  4022e6:	and    esp,edx
  4022e8:	or     eax,DWORD PTR [ecx]
  4022ea:	popf   
  4022eb:	ror    BYTE PTR [edx],0x1f
  4022ee:	lock cmp dl,BYTE PTR [ecx+edx*8+0x6df3a6a1]
  4022f6:	into   
  4022f7:	lods   eax,DWORD PTR ds:[esi]
  4022f8:	out    dx,al
  4022f9:	fs mov ebx,0x94bc78e9
  4022ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402300:	daa    
  402301:	into   
  402302:	adc    DWORD PTR [eax-0x6ede96f7],ebx
  402308:	iret   
  402309:	jo     0x402344
  40230b:	fistp  QWORD PTR [edi+0x6f]
  40230e:	mov    cl,0xbf
  402310:	dec    ebp
  402311:	add    ah,BYTE PTR [ebp-0x4bccd58e]
  402317:	ds pop ebp
  402319:	scas   al,BYTE PTR es:[edi]
  40231a:	cli    
  40231b:	mov    eax,ds:0xd336900
  402320:	bound  esi,QWORD PTR [ebp-0x44]
  402323:	(bad)  [ebx+esi*2+0x2]
  402327:	dec    edi
  402328:	jnp    0x402348
  40232a:	pop    ds
  40232b:	(bad)  
  40232c:	mov    eax,0x23acae2e
  402331:	js     0x4022eb
  402333:	add    al,0x9a
  402335:	cdq    
  402336:	and    eax,0x7534763
  40233b:	xor    cl,al
  40233d:	shl    BYTE PTR [edi-0x52],1
  402340:	leave  
  402341:	test   eax,0x35534906
  402346:	and    eax,0x7e5e778c
  40234b:	jmp    0xbbd2:0x632c4aed
  402352:	repnz push ss
  402354:	xor    ecx,esi
  402356:	jne    0x402366
  402358:	adc    ebx,DWORD PTR ss:[eax+0x75]
  40235c:	sahf   
  40235d:	aam    0x35
  40235f:	sub    eax,0x871bd869
  402364:	add    al,0x43
  402366:	adc    eax,0xa6363480
  40236b:	xor    ebp,0xffffff93
  40236e:	(bad)  
  40236f:	jecxz  0x402390
  402371:	mov    ds:0x646ca643,eax
  402376:	mov    eax,0x24dd5ffa
  40237b:	cmp    DWORD PTR [ecx],edx
  40237d:	(bad)  
  40237e:	nop
  40237f:	shl    ecx,cl
  402381:	out    0x35,eax
  402383:	daa    
  402384:	ficom  DWORD PTR [eax-0x281faba3]
  40238a:	ds xchg ecx,eax
  40238c:	lods   al,BYTE PTR ds:[esi]
  40238d:	xchg   BYTE PTR [eax+0x4f2b31c],dl
  402393:	inc    ebp
  402394:	pop    edx
  402395:	scas   al,BYTE PTR es:[edi]
  402396:	popf   
  402397:	(bad)  
  402398:	fsubrp st(1),st
  40239a:	mov    ah,0x31
  40239c:	jp     0x402329
  40239e:	popa   
  40239f:	xchg   ebp,eax
  4023a0:	cmp    BYTE PTR [edx],ch
  4023a2:	pop    es
  4023a3:	sub    BYTE PTR [esi-0x43590956],ch
  4023a9:	add    ebx,esi
  4023ab:	outs   dx,BYTE PTR ds:[esi]
  4023ac:	rcr    BYTE PTR [esi-0x3c],cl
  4023af:	ja     0x4023f7
  4023b1:	xchg   edi,eax
  4023b2:	inc    edi
  4023b3:	mov    bh,dl
  4023b5:	xchg   ebx,ebx
  4023b7:	push   ebp
  4023b8:	cmc    
  4023b9:	cmp    cl,BYTE PTR [eax+0x4b24fc02]
  4023bf:	xchg   esp,eax
  4023c0:	xchg   edx,eax
  4023c1:	adc    DWORD PTR [eax-0x79],eax
  4023c4:	mov    es,ebx
  4023c6:	jg     0x40242a
  4023c8:	sahf   
  4023c9:	jge    0x402445
  4023cb:	clc    
  4023cc:	std    
  4023cd:	mov    eax,ds:0x6b2f922
  4023d2:	cli    
  4023d3:	push   esp
  4023d4:	mov    bh,0x44
  4023d6:	int3   
  4023d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023d8:	adc    edx,0xffffff91
  4023db:	jmp    0xd341:0x9fcf900
  4023e2:	aaa    
  4023e3:	pusha  
  4023e4:	popaw  
  4023e6:	cs ins BYTE PTR es:[edi],dx
  4023e8:	jg     0x402423
  4023ea:	add    eax,0x25ab8ecf
  4023ef:	shl    BYTE PTR [edx-0x67],1
  4023f2:	cmp    al,0x5c
  4023f4:	push   ebp
  4023f5:	call   0x28c74d43
  4023fa:	mov    al,ds:0x2fe7b463
  4023ff:	out    0x7f,eax
  402401:	pop    esp
  402402:	rcr    BYTE PTR [esi],0x93
  402405:	xchg   edx,eax
  402406:	imul   eax,edi,0x52
  402409:	shl    ebx,0x6b
  40240c:	pop    esp
  40240d:	mov    cl,0xaf
  40240f:	or     al,0xb3
  402411:	scas   al,BYTE PTR es:[edi]
  402412:	out    0xa2,al
  402414:	pop    esp
  402415:	jg     0x4023cb
  402417:	xrelease mov DWORD PTR [esi+0x29],ecx
  40241b:	into   
  40241c:	mov    bh,0x9a
  40241e:	mov    cl,0xc7
  402420:	nop
  402421:	ret    0x55df
  402424:	and    BYTE PTR [ebx-0x648f7640],0x81
  40242b:	fdivr  QWORD PTR [eax+edi*2+0x5b8507b4]
  402432:	(bad)  
  402433:	shl    bh,0x71
  402436:	mov    ds,WORD PTR [ecx]
  402438:	adc    ebp,ecx
  40243a:	mov    ah,0xa5
  40243d:	or     ch,BYTE PTR [ecx-0x50]
  402440:	dec    esi
  402441:	aam    0x38
  402443:	xlat   BYTE PTR ds:[ebx]
  402444:	push   0xbfafaff8
  402449:	test   eax,0xbd1f1a7e
  40244e:	jo     0x4024b2
  402450:	jl     0x402492
  402452:	jbe    0x40246b
  402454:	retf   
  402455:	das    
  402456:	test   al,0x2d
  402458:	mov    ch,0xb3
  40245a:	out    dx,al
  40245b:	daa    
  40245c:	sbb    ebx,DWORD PTR [eax+0x1f]
  40245f:	mov    fs,WORD PTR [esp+ebp*1]
  402462:	fstp   QWORD PTR [eax+0x4c97e12a]
  402468:	dec    esi
  402469:	sub    BYTE PTR ds:0xa488148,bh
  40246f:	ret    0x7f3d
  402472:	and    BYTE PTR [eax-0x43877db],bh
  402478:	rcr    dh,1
  40247a:	ret    
  40247b:	jle    0x402440
  40247d:	imul   ebp,DWORD PTR [edx-0x1c],0x18
  402481:	mov    ds:0xea7672f7,eax
  402486:	cmp    eax,0x3f7bf9ca
  40248b:	push   esi
  40248c:	fwait
  40248d:	sub    ah,cl
  40248f:	sbb    ah,al
  402491:	sub    ebp,eax
  402493:	bound  esp,QWORD PTR [ecx+0x3f]
  402496:	repnz fs stc 
  402499:	les    edx,FWORD PTR [esi+0x7b]
  40249c:	sub    eax,0x2ba97665
  4024a1:	in     al,0x59
  4024a3:	sub    DWORD PTR [eax+0x2958e186],0xffffffcc
  4024aa:	or     al,0x64
  4024ac:	push   esi
  4024ad:	ret    0xae4b
  4024b0:	clc    
  4024b1:	xchg   esp,eax
  4024b2:	or     DWORD PTR [edi+edx*8+0x17],edi
  4024b6:	outs   dx,BYTE PTR ds:[esi]
  4024b7:	lods   al,BYTE PTR ds:[esi]
  4024b8:	xchg   edx,eax
  4024b9:	fs ins BYTE PTR es:[edi],dx
  4024bb:	mov    WORD PTR [ebp-0x5a],fs
  4024be:	ss cmp al,0x37
  4024c1:	aas    
  4024c2:	hlt    
  4024c3:	ret    0x6dcb
  4024c6:	sbb    al,0x49
  4024c8:	push   ebx
  4024c9:	mov    cl,0x5c
  4024cb:	push   ds
  4024cc:	inc    esi
  4024cd:	lods   al,BYTE PTR ds:[esi]
  4024ce:	sbb    BYTE PTR [eax],ch
  4024d0:	jl     0x40252f
  4024d2:	mov    eax,ds:0x6ef6b9d6
  4024d7:	sub    bl,BYTE PTR [ecx-0x3a]
  4024da:	inc    ebx
  4024db:	xchg   esp,eax
  4024dc:	fadd   st,st(4)
  4024de:	mov    ds:0x1536d16b,eax
  4024e3:	xchg   dl,ah
  4024e5:	mov    dl,0x52
  4024e7:	jns    0x4024c4
  4024e9:	addr16 cmp al,0xae
  4024ec:	fadd   st,st(5)
  4024ee:	and    eax,0x9cbf3245
  4024f3:	std    
  4024f4:	mov    ebx,0x113e06a0
  4024f9:	lods   al,BYTE PTR ds:[esi]
  4024fa:	sar    BYTE PTR [ebx+edi*1],0x18
  4024fe:	ss push ebp
  402500:	inc    esi
  402501:	xchg   DWORD PTR [eax+0x67bf1aec],ebx
  402507:	fcmovu st,st(2)
  402509:	mov    al,0x28
  40250b:	(bad)  
  40250c:	std    
  40250d:	adc    BYTE PTR [esi],cl
  40250f:	(bad)  
  402510:	lods   al,BYTE PTR ds:[esi]
  402511:	xor    DWORD PTR [edx],eax
  402513:	cmc    
  402514:	xlat   BYTE PTR ds:[ebx]
  402515:	inc    edx
  402516:	mov    edx,0xb5481e8f
  40251b:	stos   DWORD PTR es:[edi],eax
  40251c:	sahf   
  40251d:	sbb    eax,0x7b468d66
  402522:	push   0xffffffa4
  402524:	add    ch,dl
  402526:	mov    esp,0xdc1b1b38
  40252b:	cdq    
  40252c:	add    eax,DWORD PTR ss:[ecx+0x35b63a34]
  402533:	int3   
  402534:	sbb    al,0xc7
  402536:	adc    dl,bh
  402538:	jo     0x402554
  40253a:	jp     0x4025a0
  40253c:	push   0xdc4dfd45
  402541:	leave  
  402542:	mov    dh,0xc8
  402544:	ret    
  402545:	data16 jbe 0x402584
  402548:	inc    ecx
  402549:	ss add cl,dl
  40254c:	(bad)  
  40254d:	mov    ds:0x12d6b4c6,al
  402552:	ins    BYTE PTR es:[edi],dx
  402553:	sbb    eax,0xaaf751ff
  402558:	in     eax,0xc9
  40255a:	rcr    esi,1
  40255c:	mov    edi,0x30f66edc
  402561:	leave  
  402562:	inc    ebx
  402563:	sub    bh,0x7f
  402566:	inc    edi
  402567:	out    dx,eax
  402568:	adc    edx,DWORD PTR [ebp-0x6bd90987]
  40256e:	arpl   bp,ax
  402570:	mov    ah,0x37
  402572:	xchg   BYTE PTR [ebp-0x23a30993],bh
  402578:	cld    
  402579:	jns    0x40250f
  40257b:	or     al,0x3
  40257d:	(bad)  
  40257e:	out    0x2,al
  402580:	sub    ecx,0xb6c96085
  402586:	popa   
  402587:	mov    ebp,0x79f76139
  40258c:	dec    ecx
  40258d:	and    al,0xb9
  40258f:	sub    bl,dl
  402591:	adc    bl,BYTE PTR [esi]
  402593:	pop    edi
  402594:	into   
  402595:	retf   
  402596:	popa   
  402597:	pop    ss
  402598:	dec    eax
  402599:	push   edi
  40259a:	pop    ebx
  40259b:	(bad)  
  40259c:	repz ds mov ebp,0xbcbb7c5a
  4025a3:	or     al,0xdb
  4025a5:	push   0xffffffff
  4025a7:	dec    eax
  4025a8:	into   
  4025a9:	loop   0x40258a
  4025ab:	in     eax,dx
  4025ac:	push   ecx
  4025ad:	cmp    eax,0xf6a3c76f
  4025b2:	dec    ebp
  4025b3:	ins    DWORD PTR es:[edi],dx
  4025b4:	das    
  4025b5:	fwait
  4025b6:	loopne 0x4025ed
  4025b8:	mov    bl,BYTE PTR [eax]
  4025ba:	inc    esp
  4025bb:	inc    edx
  4025bc:	xor    BYTE PTR [edx-0x21],bh
  4025bf:	add    eax,0x67795ecf
  4025c4:	xor    eax,0x42080a6d
  4025c9:	cdq    
  4025ca:	inc    esp
  4025cb:	push   edi
  4025cc:	dec    edi
  4025cd:	push   edx
  4025ce:	test   DWORD PTR [ebx+edx*2-0x56],edx
  4025d2:	stos   DWORD PTR es:[edi],eax
  4025d3:	push   ebx
  4025d4:	js     0x40260f
  4025d6:	fs js  0x4025aa
  4025d9:	sti    
  4025da:	out    0x19,eax
  4025dc:	cmp    al,0x70
  4025de:	aas    
  4025df:	add    esp,DWORD PTR [ebx+0x56]
  4025e2:	shl    DWORD PTR [edx-0x48],cl
  4025e5:	repnz mov bh,0xc3
  4025e8:	jb     0x402659
  4025ea:	or     cl,dl
  4025ec:	cld    
  4025ed:	into   
  4025ee:	mov    edx,0x8590075e
  4025f3:	dec    ebx
  4025f4:	xchg   edi,eax
  4025f5:	pushf  
  4025f6:	xchg   eax,esi
  4025f8:	int    0xa4
  4025fa:	dec    edx
  4025fb:	sub    ch,cl
  4025fd:	jae    0x402604
  4025ff:	mov    al,0x4e
  402601:	pop    edx
  402602:	push   edx
  402603:	je     0x40260c
  402605:	je     0x4025d2
  402607:	xor    DWORD PTR [eax+0x4c],esi
  40260a:	gs jo  0x40266e
  40260d:	or     DWORD PTR ds:0x18f0ea09,eax
  402613:	loopne 0x402633
  402615:	xor    al,0x96
  402617:	mov    ah,0xc2
  402619:	or     DWORD PTR [esi],0xfffffffc
  40261c:	adc    DWORD PTR [ebx-0x59],edx
  40261f:	scas   al,BYTE PTR es:[edi]
  402620:	sub    bl,0x4
  402623:	mov    ah,0xe7
  402625:	dec    ecx
  402626:	mov    cl,0x5f
  402628:	repz mov bl,0x49
  40262b:	stos   BYTE PTR es:[edi],al
  40262c:	push   0x1993f8f8
  402631:	mov    edx,0x81fa5649
  402636:	adc    eax,0x98036f7f
  40263b:	lock mov dh,BYTE PTR [edi]
  40263e:	pop    edi
  40263f:	push   ds
  402640:	mov    ds:0x52004925,al
  402645:	clc    
  402646:	loope  0x402622
  402648:	mov    bl,0x36
  40264a:	dec    edx
  40264b:	jno    0x402656
  40264d:	mov    edx,0xc073d5f0
  402652:	ret    0xf6a6
  402655:	fcomp  DWORD PTR [edi]
  402657:	mul    BYTE PTR [ebp+0x4]
  40265a:	shr    BYTE PTR [ecx-0x3f0984ab],0x6c
  402661:	mov    ds:0xbd592038,eax
  402666:	inc    esi
  402667:	xor    dh,BYTE PTR [edx-0x7c]
  40266a:	outs   dx,DWORD PTR ds:[esi]
  40266b:	hlt    
  40266c:	(bad)  [ebx+esi*1]
  40266f:	out    dx,eax
  402670:	xor    eax,0xb8c98680
  402675:	inc    ebx
  402676:	call   0x59d6461f
  40267b:	jno    0x402605
  40267d:	(bad)  
  40267e:	inc    edx
  40267f:	ror    DWORD PTR [esi-0x73042bf5],cl
  402685:	clc    
  402686:	or     al,0x62
  402688:	ins    BYTE PTR es:[edi],dx
  402689:	call   0xcd455164
  40268e:	dec    ecx
  40268f:	jnp    0x40266d
  402691:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402692:	out    dx,eax
  402693:	mov    edx,0xfed0ac1e
  402698:	les    edx,FWORD PTR [edi-0x39]
  40269b:	hlt    
  40269c:	test   al,0xcd
  40269e:	fist   DWORD PTR [eax+0x234116dc]
  4026a4:	imul   esp,esp,0xaf8c59dc
  4026aa:	push   edi
  4026ab:	push   ds
  4026ac:	shl    BYTE PTR [ebp*8+0x5941b880],cl
  4026b3:	dec    eax
  4026b4:	xchg   edi,eax
  4026b5:	retf   0x485a
  4026b8:	cmp    DWORD PTR [ebp+0x4b],esp
  4026bb:	or     edx,ebx
  4026bd:	add    al,0xbd
  4026bf:	outs   dx,BYTE PTR ds:[esi]
  4026c0:	retf   0x5357
  4026c3:	(bad)  
  4026c4:	sbb    BYTE PTR [ebx+edi*1-0x3dff19e6],dh
  4026cb:	mov    bl,0x2d
  4026cd:	adc    eax,0x7e5484ec
  4026d2:	loope  0x402709
  4026d4:	fmulp  st(6),st
  4026d6:	sbb    al,0xb2
  4026d8:	jle    0x402714
  4026da:	mov    bl,0x4d
  4026dc:	jg     0x4026f9
  4026de:	and    BYTE PTR [edx+0x6a],ah
  4026e1:	mov    dl,0xea
  4026e3:	xchg   ebx,eax
  4026e4:	gs test eax,0xd2c3746e
  4026ea:	inc    ah
  4026ec:	stc    
  4026ed:	mov    ebp,0x429ad1c8
  4026f2:	xchg   edi,eax
  4026f3:	mov    dh,0x9f
  4026f5:	or     ebp,edi
  4026f7:	(bad)  
  4026f8:	xor    DWORD PTR [ebx],ebp
  4026fa:	jb     0x4026bd
  4026fc:	lock jl 0x402711
  4026ff:	cwde   
  402700:	jae    0x40272f
  402702:	sub    al,0xc5
  402704:	dec    ebp
  402705:	xor    eax,0x70702bfc
  40270a:	or     ch,BYTE PTR [edx]
  40270c:	test   DWORD PTR [ecx],ecx
  40270e:	sub    cl,BYTE PTR [edi+ebx*1]
  402711:	dec    eax
  402712:	pop    ebx
  402713:	mov    bh,0xd4
  402715:	ret    0xb85
  402718:	pop    eax
  402719:	addr16 sub cl,ch
  40271c:	js     0x40274d
  40271e:	retf   0x9d8d
  402721:	add    BYTE PTR [edx],bh
  402723:	push   edi
  402724:	mov    ds:0x67491bdc,al
  402729:	data16 ficom DWORD PTR [edx-0x4]
  40272d:	fwait
  40272e:	jp     0x4026d8
  402730:	iret   
  402731:	cli    
  402732:	mov    edi,DWORD PTR ds:0xce125f06
  402738:	mov    ds:0x3c9caa01,eax
  40273d:	xchg   esp,eax
  40273e:	adc    dh,bh
  402740:	jmp    0x40279d
  402742:	cwde   
  402743:	ror    DWORD PTR [eax],0x7c
  402746:	aad    0x25
  402748:	inc    eax
  402749:	in     eax,dx
  40274a:	adc    ch,BYTE PTR [edi]
  40274c:	mov    dh,0x9c
  40274e:	jle    0x40271e
  402750:	call   0xba4cd4a8
  402755:	rcr    BYTE PTR [edi-0x333f2987],cl
  40275b:	arpl   WORD PTR [edi],sp
  40275d:	mov    ds:0xfe0dd99f,eax
  402762:	call   0xb95d:0x3f7a789c
  402769:	cs cmp eax,0x2e7cb6ad
  40276f:	mov    ah,BYTE PTR [ebp-0x3e196d6e]
  402775:	jle    0x4027c7
  402777:	(bad)  
  402779:	inc    edi
  40277a:	push   0xfcac31e1
  40277f:	out    0x56,eax
  402781:	pop    eax
  402782:	lods   al,BYTE PTR ds:[esi]
  402783:	data16 cmc 
  402785:	fnsave [eax+0x2]
  402788:	imul   edi
  40278a:	xor    al,BYTE PTR [ebx+0x30]
  40278d:	mov    BYTE PTR [edi],ch
  40278f:	sbb    al,0x61
  402791:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402792:	or     DWORD PTR [edi-0x47],edi
  402795:	in     al,dx
  402796:	push   0x522dae2
  40279b:	xlat   BYTE PTR ds:[ebx]
  40279c:	mov    esp,0xa6812571
  4027a1:	push   0x6
  4027a3:	lods   eax,DWORD PTR ds:[esi]
  4027a4:	dec    edi
  4027a5:	and    ebx,esi
  4027a7:	cwde   
  4027a8:	loopne 0x402746
  4027aa:	sub    BYTE PTR [ecx-0x79],bh
  4027ad:	les    eax,FWORD PTR [ecx+ecx*1]
  4027b0:	mov    bh,0x17
  4027b2:	jo     0x4027ab
  4027b4:	ins    DWORD PTR es:[edi],dx
  4027b5:	mov    esp,0x3b99247e
  4027ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027bb:	mov    ah,0x32
  4027bd:	jge    0x4027ef
  4027bf:	push   es
  4027c0:	idiv   BYTE PTR [esi+0x7f21fd90]
  4027c6:	and    DWORD PTR [edx-0x2cc6850a],edx
  4027cc:	int3   
  4027cd:	adc    DWORD PTR [esp+eiz*2],edi
  4027d0:	int3   
  4027d1:	repnz fwait
  4027d3:	xor    DWORD PTR [esi-0x65],eax
  4027d6:	xchg   esp,eax
  4027d7:	mov    eax,ds:0x7ca2ea81
  4027dc:	aam    0x82
  4027de:	out    0x48,ax
  4027e1:	in     eax,dx
  4027e2:	xchg   ebp,eax
  4027e3:	in     eax,dx
  4027e4:	(bad)  
  4027e5:	adc    DWORD PTR [eax+0x14fcbf91],edi
  4027eb:	nop
  4027ec:	repnz mov edx,0x54721ca9
  4027f2:	pop    ss
  4027f3:	(bad)  
  4027f4:	iret   
  4027f5:	out    0xb8,al
  4027f7:	pop    ss
  4027f8:	ret    0xf8d0
  4027fb:	lods   eax,DWORD PTR ds:[esi]
  4027fc:	push   ds
  4027fd:	test   BYTE PTR [ebp+edi*2+0x63],dh
  402801:	fmul   DWORD PTR [edi-0x7d]
  402804:	int    0x9
  402806:	inc    ebx
  402807:	xchg   esi,eax
  402808:	fs in  al,dx
  40280a:	or     ecx,DWORD PTR cs:0xdb1bd9e2
  402811:	rcl    DWORD PTR [ebp+0x39],cl
  402814:	jb     0x402859
  402816:	adc    edx,edx
  402818:	adc    eax,0x2d213fe7
  40281d:	loop   0x4027de
  40281f:	(bad)  
  402820:	sbb    dh,ch
  402822:	cmp    BYTE PTR [edx+0x2f],0x5f
  402826:	xchg   ebp,eax
  402827:	or     DWORD PTR cs:[edi+0x63d8ceae],edi
  40282e:	lds    ebp,FWORD PTR [eax-0x47446c52]
  402834:	mov    ds:0x478672ba,al
  402839:	cli    
  40283a:	dec    edx
  40283b:	(bad)  
  40283c:	sti    
  40283d:	xor    ah,bl
  40283f:	sbb    cl,BYTE PTR [edi]
  402841:	ret    
  402842:	(bad)  
  402843:	gs inc esi
  402845:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402846:	jno    0x402870
  402848:	push   edx
  402849:	int    0x6c
  40284b:	out    dx,eax
  40284c:	int3   
  40284d:	loopne 0x402849
  40284f:	push   ecx
  402850:	repz mov ebp,0x51766b39
  402856:	add    DWORD PTR [edx],ebp
  402858:	and    eax,0xc7e9e02f
  40285d:	inc    ecx
  40285e:	(bad)  
  40285f:	mov    eax,ds:0x8b8c8374
  402864:	lds    edi,FWORD PTR [edi+0xb79b589]
  40286a:	lock inc eax
  40286c:	jmp    0x402889
  40286e:	sbb    DWORD PTR [eax+edi*1],ecx
  402871:	sub    ecx,DWORD PTR [edx-0xf]
  402874:	xchg   DWORD PTR [edi-0x4643dab1],esi
  40287a:	shl    DWORD PTR [eax-0x63bf706d],0xdf
  402881:	popf   
  402882:	and    DWORD PTR [ebp-0x3f339024],0x44fefacf
  40288c:	push   edx
  40288d:	push   ss
  40288e:	outs   dx,DWORD PTR ds:[esi]
  40288f:	sbb    DWORD PTR [ebx],0xffffff89
  402892:	jmp    0xc8b6:0x5bf12086
  402899:	std    
  40289a:	xchg   esi,eax
  40289b:	pop    edi
  40289c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40289d:	xor    BYTE PTR [esi+0x7d],cl
  4028a0:	popf   
  4028a1:	idiv   BYTE PTR ds:0x52495312
  4028a7:	xor    eax,0xbd11e197
  4028ac:	jl     0x402861
  4028ae:	fwait
  4028af:	std    
  4028b0:	test   al,0xf4
  4028b2:	inc    ecx
  4028b3:	std    
  4028b4:	imul   edi,ecx,0x8560313
  4028ba:	test   eax,0xc0c93dc
  4028bf:	in     al,0xf5
  4028c1:	aaa    
  4028c2:	clc    
  4028c3:	adc    al,BYTE PTR [ebx-0x1a]
  4028c6:	bound  edx,QWORD PTR ds:0x15353a0f
  4028cc:	cmp    BYTE PTR fs:[edx-0x46],ch
  4028d0:	mov    ebp,0x13de2b06
  4028d5:	stc    
  4028d6:	mov    esp,0x7e91ee88
  4028db:	mov    dh,0xee
  4028dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028de:	jle    0x4028cc
  4028e0:	(bad)  
  4028e1:	xlat   BYTE PTR ds:[ebx]
  4028e2:	clc    
  4028e3:	push   ecx
  4028e4:	fs stos BYTE PTR es:[edi],al
  4028e6:	int3   
  4028e7:	cmp    esi,DWORD PTR ds:0x55b5e4c0
  4028ed:	int    0xdf
  4028ef:	repnz inc ecx
  4028f1:	int3   
  4028f2:	pusha  
  4028f3:	mov    cl,0x22
  4028f5:	pop    ebx
  4028f6:	call   0xa0ba:0x3734b896
  4028fd:	cwde   
  4028fe:	xor    eax,0x2fcdef42
  402903:	jb     0x40289d
  402905:	loope  0x4028a1
  402907:	or     al,0x9f
  402909:	je     0x4028a6
  40290b:	neg    DWORD PTR [edi-0x3f]
  40290e:	inc    eax
  40290f:	mov    al,0x75
  402911:	mov    edx,0x69d74ec2
  402916:	push   edx
  402917:	inc    esi
  402918:	hlt    
  402919:	lods   eax,DWORD PTR ds:[esi]
  40291a:	retf   0xe2c2
  40291d:	push   esp
  40291e:	or     BYTE PTR [edi+0x468cfcc6],ah
  402924:	jb     0x4028cb
  402926:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402928:	(bad)  
  402929:	lock jg 0x4028c1
  40292c:	fsubr  st(2),st
  40292e:	mov    cs,WORD PTR [eax-0xd63da83]
  402934:	xor    DWORD PTR [esi],edi
  402936:	lea    edi,[ebp+0x77de1f70]
  40293c:	xchg   BYTE PTR [ecx],ch
  40293e:	loope  0x402918
  402940:	xchg   esi,eax
  402941:	or     cl,bh
  402943:	push   ds
  402944:	pop    eax
  402945:	(bad)  
  402946:	in     eax,0x8b
  402948:	push   ebp
  402949:	mov    ecx,0xacc93e94
  40294e:	xchg   edx,eax
  40294f:	test   BYTE PTR [edx-0xc2d3c8b],cl
  402955:	in     eax,0x48
  402957:	fldz   
  402959:	pop    eax
  40295a:	mov    ds:0x13e718af,eax
  402960:	gs arpl dx,sp
  402963:	pushf  
  402964:	into   
  402965:	leave  
  402966:	shl    BYTE PTR [edx+0x4c],cl
  402969:	ds jl  0x40295b
  40296c:	fsub   DWORD PTR [eax+0x7c]
  40296f:	dec    edi
  402970:	push   es
  402971:	scas   al,BYTE PTR es:[edi]
  402972:	cwde   
  402973:	push   ebp
  402974:	adc    DWORD PTR [eax+0x39],esi
  402977:	fadd   DWORD PTR [esi-0x56]
  40297a:	jl     0x402994
  40297c:	clc    
  40297d:	mov    eax,0x51386650
  402982:	into   
  402983:	inc    ecx
  402984:	stos   BYTE PTR es:[edi],al
  402985:	test   eax,0x8c8cf2de
  40298a:	inc    edx
  40298b:	sbb    ch,dl
  40298d:	jmp    FWORD PTR [edi+0x4a439f7d]
  402993:	rcr    DWORD PTR [esi-0x5e],cl
  402996:	pop    ecx
  402997:	jp     0x402954
  402999:	retf   0xbc8f
  40299c:	in     al,dx
  40299d:	test   cl,bl
  40299f:	rol    ebp,cl
  4029a1:	nop
  4029a2:	mov    ds:0xe99ae63e,al
  4029a7:	imul   ebx,ecx,0xce9da7ab
  4029ad:	test   BYTE PTR [esi],dh
  4029af:	fsubr  QWORD PTR [ebx]
  4029b1:	add    BYTE PTR [ebx+esi*1-0x26b4d960],ch
  4029b8:	data16 rcl BYTE PTR [ebx],1
  4029bb:	pop    ecx
  4029bc:	fiadd  WORD PTR fs:[esi]
  4029bf:	push   edi
  4029c0:	in     al,dx
  4029c1:	sbb    eax,0x9cd7abd1
  4029c6:	pop    ebp
  4029c7:	in     al,dx
  4029c8:	lock add esp,DWORD PTR [ecx]
  4029cb:	mov    ah,al
  4029cd:	inc    ebp
  4029ce:	stos   BYTE PTR es:[edi],al
  4029cf:	xor    esi,ebx
  4029d1:	inc    ebx
  4029d2:	unpcklps xmm1,xmm0
  4029d5:	xor    DWORD PTR [ecx+0x6b3732f1],ebp
  4029db:	ret    
  4029dc:	push   eax
  4029dd:	push   edi
  4029de:	mov    al,0xd6
  4029e0:	sahf   
  4029e1:	sub    eax,0xa52df353
  4029e6:	(bad)  
  4029e8:	ja     0x4029eb
  4029ea:	aam    0x33
  4029ec:	push   ebx
  4029ed:	xchg   esi,eax
  4029ee:	ror    ch,1
  4029f0:	pop    ebx
  4029f1:	mov    edx,0x592a7481
  4029f6:	mov    cl,0x5f
  4029f8:	imul   ebx,DWORD PTR [ebp+0x7f1aaae6],0xf1a29e49
  402a02:	push   ss
  402a03:	xchg   esp,eax
  402a04:	retf   0xa938
  402a07:	frstor [esi]
  402a09:	scas   eax,DWORD PTR es:[edi]
  402a0a:	test   al,0xe0
  402a0c:	aad    0x99
  402a0e:	fdivrp st(6),st
  402a10:	push   ebp
  402a11:	(bad)  
  402a12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a13:	push   edx
  402a14:	dec    ebx
  402a15:	sbb    BYTE PTR ss:0x1a80c111,dl
  402a1c:	mov    DWORD PTR [eax+0x73ada2d],ebp
  402a22:	mov    dl,dh
  402a24:	imul   edx,DWORD PTR [esi],0x8
  402a27:	jne    0x402a24
  402a29:	loopne 0x402a2e
  402a2b:	adc    eax,0x57ae84b1
  402a30:	call   0x48d5:0x2a1c6eff
  402a37:	cmp    ah,ch
  402a39:	mov    dh,0x7f
  402a3b:	popf   
  402a3c:	and    esi,DWORD PTR [ecx]
  402a3e:	xchg   esp,eax
  402a3f:	out    0x92,al
  402a41:	imul   ebp,DWORD PTR [esi-0x7bdd7c51],0x2ae68716
  402a4b:	loope  0x402a26
  402a4d:	stos   DWORD PTR es:[edi],eax
  402a4e:	sbb    ebp,0xd
  402a51:	push   edx
  402a52:	xchg   ebp,eax
  402a53:	add    al,0xcd
  402a55:	scas   al,BYTE PTR es:[edi]
  402a56:	mov    ds:0x4b4efe91,al
  402a5b:	pop    eax
  402a5c:	xchg   ebx,eax
  402a5d:	loopne 0x402a4e
  402a5f:	mov    esi,0xb24f0f6a
  402a64:	dec    esi
  402a65:	cld    
  402a66:	mov    edx,0xeb655b5f
  402a6b:	sbb    al,0xab
  402a6d:	out    dx,al
  402a6e:	dec    esp
  402a6f:	nop
  402a70:	es dec ebx
  402a72:	out    dx,eax
  402a73:	add    dh,BYTE PTR [ebp+0x68b366df]
  402a79:	mov    eax,ds:0x513c4
  402a7e:	jp     0x402aeb
  402a80:	ja     0x402aa6
  402a82:	rcl    esi,cl
  402a84:	mov    bl,0x2f
  402a86:	push   esi
  402a87:	pop    ebp
  402a88:	arpl   WORD PTR ds:0x576e68a6,bx
  402a8e:	pushf  
  402a8f:	and    dl,dh
  402a91:	add    BYTE PTR [edi],dh
  402a93:	mov    ds:0xedb9c522,al
  402a98:	cmp    dh,BYTE PTR [ebp+0x15]
  402a9b:	ja     0x402a55
  402a9d:	(bad)
  402aa1:	xor    eax,0xeb99726
  402aa6:	(bad)  
  402aa7:	mov    ebp,0x14705f65
  402aac:	push   ecx
  402aad:	(bad)  
  402aae:	out    0xc3,eax
  402ab0:	in     eax,0x51
  402ab2:	mul    BYTE PTR ds:[ebp+0x3a39ae2d]
  402ab9:	push   ebx
  402aba:	aam    0xb2
  402abc:	xchg   esi,eax
  402abd:	sbb    al,0x8b
  402abf:	pop    ds
  402ac0:	fstp   QWORD PTR [edi+0x3182f90f]
  402ac6:	adc    edx,edi
  402ac8:	cwde   
  402ac9:	xor    edx,edi
  402acb:	aaa    
  402acc:	inc    esi
  402acd:	adc    ecx,DWORD PTR [edx+0x57]
  402ad0:	scas   al,BYTE PTR es:[edi]
  402ad1:	adc    al,0xc0
  402ad3:	jge    0x402b0b
  402ad5:	pop    esi
  402ad6:	out    0x36,al
  402ad8:	imul   DWORD PTR [edx-0x6b]
  402adb:	mov    ds:0xd194b5d7,eax
  402ae0:	or     BYTE PTR [edx-0x522a5fb9],dl
  402ae6:	xor    BYTE PTR [esp+ebp*8],cl
  402ae9:	mov    edx,0xee7d6999
  402aee:	push   ecx
  402aef:	mov    ah,BYTE PTR [ebp-0x4d]
  402af2:	and    al,0xd6
  402af4:	and    esi,DWORD PTR [ecx]
  402af6:	(bad)  
  402af7:	pop    esp
  402af8:	and    al,0x5c
  402afa:	repnz sbb DWORD PTR ds:0x270ae19e,0x5c
  402b02:	jnp    0x402a9b
  402b04:	test   BYTE PTR [esi+0x55d5aaca],cl
  402b0a:	shl    DWORD PTR es:[esi-0x54a41c9f],cl
  402b11:	or     eax,0xd4890cbf
  402b16:	ret    
  402b17:	push   edx
  402b18:	jb     0x402ac9
  402b1a:	icebp  
  402b1b:	xchg   esp,eax
  402b1c:	test   al,0xa1
  402b1e:	adc    dh,BYTE PTR [ebx-0x1f]
  402b21:	pop    esp
  402b22:	and    DWORD PTR [edi],esi
  402b24:	xchg   ebx,eax
  402b25:	jg     0x402ab6
  402b27:	pop    ebx
  402b28:	lock mov al,bl
  402b2b:	xor    DWORD PTR [ecx+0x39015278],eax
  402b31:	push   eax
  402b32:	mov    eax,ds:0x37c6fcd9
  402b37:	test   eax,0xd236ee23
  402b3c:	inc    ebx
  402b3d:	fidiv  WORD PTR [edi]
  402b3f:	or     ch,BYTE PTR [ebx+ebx*8-0x3e5a35cd]
  402b46:	test   eax,0x161562b4
  402b4b:	and    ebx,ebx
  402b4d:	idiv   BYTE PTR [ebx+0x2e]
  402b50:	mov    bh,BYTE PTR [eax]
  402b52:	xor    al,0xbc
  402b54:	sub    cl,BYTE PTR [ecx]
  402b56:	inc    ebp
  402b57:	or     ch,al
  402b59:	gs sub eax,0xdf5159e4
  402b5f:	sub    DWORD PTR [ebx],ebp
  402b61:	aad    0x4b
  402b63:	test   al,0xa7
  402b65:	mov    dh,BYTE PTR [edi]
  402b67:	ss push eax
  402b69:	sbb    edi,DWORD PTR [ebp+edi*1+0x352ea45e]
  402b70:	mov    edi,0xd551ed9f
  402b75:	sar    ecx,cl
  402b77:	mov    ds:0x5ccb430f,eax
  402b7c:	and    eax,0xaf897b09
  402b81:	push   eax
  402b82:	sub    BYTE PTR [eax],0xc5
  402b85:	mov    dl,0x8b
  402b87:	int    0xb8
  402b89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b8a:	push   esi
  402b8b:	retf   
  402b8c:	ds into 
  402b8e:	mov    ecx,0x79f2da14
  402b93:	xor    ecx,DWORD PTR [ecx+esi*1+0x4c]
  402b97:	push   ss
  402b98:	outs   dx,DWORD PTR ds:[esi]
  402b99:	push   cs
  402b9a:	xchg   BYTE PTR [ebx-0x7804af59],cl
  402ba0:	and    esi,DWORD PTR [edi+0x64]
  402ba3:	xor    ecx,edi
  402ba5:	(bad)  
  402ba6:	out    dx,al
  402ba7:	in     eax,0xaf
  402ba9:	cmp    esi,esi
  402bab:	retf   0x1d7d
  402bae:	pop    ecx
  402baf:	sahf   
  402bb0:	jbe    0x402ba3
  402bb2:	sti    
  402bb3:	lahf   
  402bb4:	mov    eax,0xd09f8dfc
  402bb9:	push   ecx
  402bba:	aaa    
  402bbb:	inc    ecx
  402bbc:	jbe    0x402b81
  402bbe:	mov    ah,0xc6
  402bc0:	mov    ebx,0xfaf14fcd
  402bc5:	push   esi
  402bc6:	adc    BYTE PTR [edi-0x30],0xff
  402bca:	or     DWORD PTR [edi+0x61],0x69
  402bce:	enter  0x5cdc,0x81
  402bd2:	iret   
  402bd3:	inc    edx
  402bd4:	or     ch,cl
  402bd6:	repnz out dx,al
  402bd8:	nop
  402bd9:	popa   
  402bda:	or     BYTE PTR [ebp-0x1],bl
  402bdd:	adc    ebx,DWORD PTR [edi]
  402bdf:	sub    al,0x68
  402be1:	mov    ds:0x2dc64bbb,al
  402be6:	repz dec esi
  402be8:	add    DWORD PTR [ebp-0x7617492a],ecx
  402bee:	mov    cl,0x71
  402bf0:	sti    
  402bf1:	sbb    al,0x9
  402bf3:	cmp    BYTE PTR [esp+eiz*2-0x43671c82],0xb4
  402bfb:	outs   dx,BYTE PTR ds:[esi]
  402bfc:	or     ch,dl
  402bfe:	cmp    eax,0xc5321236
  402c03:	sahf   
  402c04:	push   ecx
  402c05:	cli    
  402c06:	add    DWORD PTR [ebp+0x2b],edx
  402c09:	ror    DWORD PTR [edi],cl
  402c0b:	iret   
  402c0c:	cdq    
  402c0d:	jae    0x402c70
  402c0f:	mov    ds:0x993d7ae5,eax
  402c14:	mov    ebx,0xd7758b3
  402c19:	mov    ebp,0xd16f322c
  402c1e:	jmp    0x402c25
  402c20:	sub    BYTE PTR [edi],bh
  402c22:	cmp    ch,BYTE PTR [ecx+0x50]
  402c25:	lds    ebx,FWORD PTR [edx+0x7b8f4452]
  402c2b:	fcmovb st,st(2)
  402c2d:	xchg   BYTE PTR ds:0xb2f88f47,ah
  402c33:	jge    0x402c6e
  402c35:	pop    edi
  402c36:	jge    0x402c32
  402c38:	pop    ecx
  402c39:	push   esp
  402c3a:	mov    dl,ch
  402c3c:	pop    esp
  402c3d:	dec    ebp
  402c3e:	sub    eax,0x7db66ffd
  402c43:	xchg   ebx,eax
  402c44:	sti    
  402c45:	clc    
  402c46:	or     bh,cl
  402c48:	jl     0x402bce
  402c4a:	xchg   esi,eax
  402c4b:	out    dx,eax
  402c4c:	and    eax,0x1dd68784
  402c51:	paddq  mm3,QWORD PTR [esi+0xe]
  402c55:	mov    ecx,ds
  402c57:	sub    bh,ch
  402c59:	and    DWORD PTR [edi],0xc6040700
  402c5f:	mov    ecx,0x60f1c516
  402c64:	sub    al,0x81
  402c66:	mov    ebp,?
  402c68:	mov    ds:0xcd1d55c9,al
  402c6d:	icebp  
  402c6e:	mov    dl,0xf
  402c70:	cmp    DWORD PTR [esi],ebx
  402c72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c73:	int    0x39
  402c75:	push   es
  402c76:	push   ebx
  402c77:	iret   
  402c78:	xchg   dh,bl
  402c7a:	xor    ebx,esi
  402c7c:	lods   al,BYTE PTR ds:[esi]
  402c7d:	adc    al,BYTE PTR [ebp-0x5c]
  402c80:	sar    edi,1
  402c82:	push   esp
  402c83:	cdq    
  402c84:	and    al,0x58
  402c86:	mov    dl,0x4a
  402c88:	jmp    0x62fde2cb
  402c8d:	sbb    esi,edx
  402c8f:	lahf   
  402c90:	mov    esi,0xa7e82a45
  402c95:	vdivpd ymm5,ymm6,YMMWORD PTR [eax]
  402c99:	bound  edx,QWORD PTR [eax-0x6f307be2]
  402c9f:	add    esi,DWORD PTR [ebp-0x40829f76]
  402ca5:	dec    esp
  402ca6:	dec    esp
  402ca7:	pop    es
  402ca8:	dec    edi
  402ca9:	dec    edx
  402caa:	dec    BYTE PTR [eax+esi*2+0x2b881ae2]
  402cb1:	cwde   
  402cb2:	fild   QWORD PTR [edx-0x4869dd6]
  402cb8:	mov    ebp,0xcea574db
  402cbd:	xor    BYTE PTR [esi-0x508316d3],ch
  402cc3:	and    esi,DWORD PTR [esi+0xe]
  402cc6:	sbb    BYTE PTR [edx-0x545262b0],bl
  402ccc:	push   esp
  402ccd:	pushf  
  402cce:	add    eax,0x90697233
  402cd3:	pop    ss
  402cd4:	xchg   edi,eax
  402cd5:	add    BYTE PTR [eax+0x67b971a1],dh
  402cdb:	dec    ecx
  402cdc:	mov    bh,0x71
  402cde:	cwde   
  402cdf:	shl    BYTE PTR [ebx-0x19],0x72
  402ce3:	fsubrp st(1),st
  402ce5:	ins    BYTE PTR es:[edi],dx
  402ce6:	sbb    BYTE PTR ds:0xc53b3051,0x11
  402ced:	pop    ebp
  402cee:	lds    ebp,FWORD PTR [ebx-0x52098286]
  402cf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cf5:	nop
  402cf6:	mov    al,ds:0x2351a155
  402cfb:	test   al,0x44
  402cfd:	pop    esi
  402cfe:	data16 jbe 0x402cd9
  402d01:	jb     0x402d2e
  402d03:	mov    esi,DWORD PTR [ebx+0x37b323d7]
  402d09:	mov    dl,BYTE PTR [ebp+0x28]
  402d0c:	test   eax,0x9a791736
  402d11:	mov    esp,DWORD PTR [ebp+0x4a]
  402d14:	mov    ds:0x2fd4a66f,al
  402d19:	inc    edx
  402d1a:	ins    DWORD PTR es:[edi],dx
  402d1b:	pop    esp
  402d1c:	pop    ebx
  402d1d:	lock (bad) 
  402d1f:	jge    0x402d4b
  402d21:	sbb    esi,ebp
  402d23:	adc    eax,DWORD PTR [ebx-0x60]
  402d26:	shl    esp,cl
  402d28:	cmc    
  402d29:	std    
  402d2a:	and    edx,DWORD PTR ds:[edi-0x43]
  402d2e:	stc    
  402d2f:	ret    
  402d30:	adc    eax,DWORD PTR [edx+0x38]
  402d33:	(bad)  
  402d34:	fild   QWORD PTR [ebp+0x6d0f2928]
  402d3a:	js     0x402d47
  402d3c:	lock sub eax,0x1eee9391
  402d42:	adc    BYTE PTR [eax-0x48],ah
  402d45:	sbb    BYTE PTR [ebp-0x49214a84],0x7d
  402d4c:	test   DWORD PTR [edi],eax
  402d4e:	pop    esp
  402d4f:	fisubr WORD PTR [eax-0x18cb3272]
  402d55:	enter  0xdfd7,0x7a
  402d59:	sbb    eax,0xdabff538
  402d5e:	cli    
  402d5f:	mov    esp,esp
  402d61:	xchg   ebx,eax
  402d62:	xchg   edx,eax
  402d63:	std    
  402d64:	fcom   QWORD PTR [edx+0x3efcfb0c]
  402d6a:	bound  eax,QWORD PTR [esi+0x21]
  402d6d:	and    DWORD PTR [ebx+0x2c],esp
  402d70:	cmp    bh,dh
  402d72:	ret    
  402d73:	scas   al,BYTE PTR es:[edi]
  402d74:	mov    DWORD PTR [esi+0x2e],ecx
  402d77:	xor    DWORD PTR [ebp-0x2c],edi
  402d7a:	mov    edx,DWORD PTR [edx+0x28]
  402d7d:	xor    BYTE PTR [eax+0x7],cl
  402d80:	inc    esi
  402d81:	outs   dx,DWORD PTR ds:[esi]
  402d82:	sub    al,0x91
  402d84:	shr    BYTE PTR [edx],1
  402d86:	mov    al,0x58
  402d88:	stc    
  402d89:	mov    al,0x93
  402d8b:	add    BYTE PTR [eax-0x32edfe01],cl
  402d91:	test   esp,0x10c4a7ee
  402d97:	pusha  
  402d98:	leave  
  402d99:	push   edi
  402d9a:	sub    edi,DWORD PTR [ebx+edi*2+0x3982cb6e]
  402da1:	sar    BYTE PTR [ecx],cl
  402da3:	mov    ecx,0xe3c80d38
  402da8:	ret    
  402da9:	ds nop
  402dab:	(bad)  
  402dad:	ror    BYTE PTR [edi-0x5c],0xa
  402db1:	mov    eax,0xdb8a535a
  402db6:	mov    BYTE PTR [ebx+0x53],cl
  402db9:	nop
  402dba:	outs   dx,DWORD PTR ds:[esi]
  402dbb:	dec    esi
  402dbc:	xor    eax,0xa910169
  402dc1:	outs   dx,DWORD PTR ds:[esi]
  402dc2:	outs   dx,DWORD PTR ds:[esi]
  402dc3:	mov    ebx,0x24bbeb40
  402dc8:	fs test al,0xa
  402dcb:	aad    0xe
  402dcd:	xchg   ebx,eax
  402dce:	mov    fs,WORD PTR [eax+0x71]
  402dd1:	cmp    dh,BYTE PTR [eax]
  402dd3:	sub    DWORD PTR [ecx],0x7983672a
  402dd9:	(bad)  
  402dda:	in     eax,0x93
  402ddc:	xchg   BYTE PTR ds:0x7724d0b7,al
  402de2:	(bad)  
  402de3:	gs dec edx
  402de5:	das    
  402de6:	dec    eax
  402de7:	es dec edi
  402de9:	pop    ebp
  402dea:	cmc    
  402deb:	test   al,0x63
  402ded:	add    bh,BYTE PTR [ebp+0x58]
  402df0:	jp     0x402e2e
  402df2:	mov    ah,0x87
  402df4:	jo     0x402e40
  402df6:	xchg   DWORD PTR [edi],ecx
  402df8:	dec    esi
  402df9:	retf   0x3abe
  402dfc:	bnd jae 0x402d91
  402dff:	in     eax,0xc5
  402e01:	xor    eax,0x38f7de30
  402e06:	jo     0x402e5a
  402e08:	retf   
  402e09:	lock add ch,dh
  402e0c:	inc    ebx
  402e0d:	sti    
  402e0e:	mov    al,ds:0x383ecced
  402e13:	or     cl,ah
  402e15:	int    0xa9
  402e17:	sahf   
  402e18:	outs   dx,BYTE PTR ds:[esi]
  402e19:	and    eax,0x901183f8
  402e1e:	xchg   edx,eax
  402e1f:	mov    ds:0xc8262990,eax
  402e24:	fwait
  402e25:	dec    ebx
  402e26:	sbb    eax,0x83e9ba93
  402e2b:	cmp    eax,edi
  402e2d:	dec    ebp
  402e2e:	fistp  WORD PTR [ecx-0x4a3caf60]
  402e34:	add    eax,0x95ad1cd9
  402e39:	gs call 0xdbe569ba
  402e3f:	pop    ax
  402e41:	dec    ebx
  402e42:	mov    ds:0xebb1625,eax
  402e47:	xor    bl,ch
  402e49:	xor    DWORD PTR ds:0x16562275,edx
  402e4f:	ret    
  402e50:	bound  edi,QWORD PTR [ebp-0x52]
  402e53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e54:	pop    ebp
  402e55:	in     eax,0x98
  402e57:	xor    cl,bh
  402e59:	(bad)  
  402e5a:	push   ecx
  402e5b:	pop    esi
  402e5c:	mov    DWORD PTR [ebx],esp
  402e5e:	pop    ecx
  402e5f:	fiadd  DWORD PTR [esi-0x36]
  402e62:	dec    edi
  402e63:	stos   DWORD PTR es:[edi],eax
  402e64:	or     eax,0x500ff324
  402e69:	add    eax,0x8ba6898c
  402e6e:	and    al,0x93
  402e70:	mov    bh,0x1e
  402e72:	data16 aas 
  402e74:	scas   eax,DWORD PTR es:[edi]
  402e75:	jb     0x402ed6
  402e77:	or     DWORD PTR [edx],esp
  402e79:	pop    ss
  402e7a:	mov    WORD PTR [ebp-0x10],?
  402e7d:	xchg   esi,eax
  402e7e:	cmp    ah,BYTE PTR [esi-0x698ca23d]
  402e84:	dec    eax
  402e85:	sub    eax,0x1162c73c
  402e8a:	mov    dh,0x6f
  402e8c:	xchg   DWORD PTR [ecx-0x41],ecx
  402e8f:	sbb    ebx,DWORD PTR [edi-0x64]
  402e92:	add    cl,BYTE PTR [ebx-0x21]
  402e95:	shl    DWORD PTR [edi],cl
  402e97:	daa    
  402e98:	xchg   ebp,eax
  402e99:	sub    ah,bl
  402e9b:	aas    
  402e9c:	cmp    al,0xe7
  402e9e:	jmp    0x402ead
  402ea0:	sti    
  402ea1:	test   eax,0xbc44c
  402ea6:	mov    WORD PTR [ebx],fs
  402ea8:	je     0x402ebe
  402eaa:	aad    0x71
  402eac:	mov    WORD PTR ds:0x438023bf,?
  402eb2:	stc    
  402eb3:	xchg   esi,eax
  402eb4:	jns    0x402e64
  402eb6:	sahf   
  402eb7:	test   BYTE PTR [eax+edx*2],ch
  402eba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ebb:	dec    ebp
  402ebc:	retf   
  402ebd:	shl    BYTE PTR [edx+esi*8-0x24],0xbb
  402ec2:	xor    DWORD PTR [ecx-0x5b],eax
  402ec5:	(bad)  
  402ec6:	test   BYTE PTR [edx+0x2e5dabac],dl
  402ecc:	xor    cl,BYTE PTR [esi]
  402ece:	das    
  402ecf:	out    0x7d,eax
  402ed1:	fldenv [ebp+0x7d5e523f]
  402ed7:	retf   0xaf29
  402eda:	pop    ecx
  402edb:	fucomi st,st(5)
  402edd:	ret    0xa958
  402ee0:	sub    BYTE PTR [edi],al
  402ee2:	push   es
  402ee3:	push   es
  402ee4:	mov    eax,ds:0xa39449f8
  402ee9:	int    0x7a
  402eeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402eec:	pop    ecx
  402eed:	mov    es,WORD PTR [ebp+esi*2-0x7d3d42f4]
  402ef4:	(bad)  
  402ef5:	push   esi
  402ef6:	xor    al,BYTE PTR gs:[ebp+0x17]
  402efa:	sti    
  402efb:	add    eax,0x87704396
  402f00:	(bad)  [ebx-0x2da00425]
  402f06:	lods   eax,DWORD PTR ds:[esi]
  402f07:	cdq    
  402f08:	pop    edx
  402f09:	test   eax,0x6544d935
  402f0e:	push   edi
  402f0f:	das    
  402f10:	jle    0x402f8b
  402f12:	sbb    DWORD PTR [edi],0xc2048f55
  402f18:	fsubr  DWORD PTR [esi-0x57e611e0]
  402f1e:	inc    esp
  402f1f:	add    ebx,ecx
  402f21:	pop    eax
  402f22:	ss stc 
  402f24:	test   DWORD PTR [ecx],edi
  402f26:	xchg   ebp,eax
  402f27:	loop   0x402f1a
  402f29:	mov    WORD PTR [ebp-0x6b],ss
  402f2c:	icebp  
  402f2d:	jle    0x402fa2
  402f2f:	loopne 0x402ecb
  402f31:	add    BYTE PTR [edi+eiz*4-0x4383863],cl
  402f38:	jns    0x402f1a
  402f3a:	jb     0x402f20
  402f3c:	jae    0x402ee0
  402f3e:	mov    ebx,ebx
  402f40:	push   edi
  402f41:	and    bh,BYTE PTR [ebx+0x4aab586c]
  402f47:	ror    BYTE PTR [ebx+edi*1],1
  402f4a:	pop    esp
  402f4b:	jbe    0x402faf
  402f4d:	ins    BYTE PTR es:[edi],dx
  402f4e:	cmp    DWORD PTR [edx],edi
  402f50:	icebp  
  402f51:	lock jnp 0x402fbb
  402f54:	cwde   
  402f55:	add    DWORD PTR [esi-0x188d8a62],esi
  402f5b:	mov    al,ds:0xd5d1c21c
  402f60:	push   esi
  402f61:	mov    esp,0xf9f6fb06
  402f66:	ins    BYTE PTR es:[edi],dx
  402f67:	das    
  402f68:	jmp    0xca033dc1
  402f6d:	or     bl,bl
  402f6f:	(bad)
  402f72:	and    ebx,eax
  402f74:	or     BYTE PTR [eax-0x6f],al
  402f77:	dec    edx
  402f78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f79:	pusha  
  402f7a:	adc    ebp,edx
  402f7c:	fld    DWORD PTR [edi+0x8]
  402f7f:	into   
  402f80:	adc    BYTE PTR [edi+0x5e],dl
  402f83:	in     al,dx
  402f84:	ss push cs
  402f86:	(bad)  
  402f87:	int    0x59
  402f89:	xlat   BYTE PTR ds:[ebx]
  402f8a:	ja     0x402ffa
  402f8c:	inc    eax
  402f8d:	sub    ecx,edi
  402f8f:	or     edx,DWORD PTR [edi-0x76]
  402f92:	pop    edi
  402f93:	jecxz  0x402f3b
  402f95:	push   ecx
  402f96:	add    eax,DWORD PTR [edi+0x21]
  402f99:	cmp    BYTE PTR [edi],bh
  402f9b:	xchg   edx,eax
  402f9c:	cmp    bh,BYTE PTR [esi+0x65]
  402f9f:	mov    ds:0x97b1d6ae,eax
  402fa4:	sar    DWORD PTR [ecx-0x33bae8c7],1
  402faa:	inc    esp
  402fab:	stos   DWORD PTR es:[edi],eax
  402fac:	sub    al,0x9b
  402fae:	add    DWORD PTR [ebx+esi*8+0x5f364d5d],0x24
  402fb6:	js     0x402ffa
  402fb8:	inc    esi
  402fb9:	iret   
  402fba:	dec    eax
  402fbb:	xchg   esi,eax
  402fbc:	cld    
  402fbd:	or     DWORD PTR [esi+0x18],edx
  402fc0:	push   es
  402fc1:	cmp    al,0x7f
  402fc3:	dec    edx
  402fc4:	pop    esi
  402fc5:	xchg   bh,ah
  402fc7:	call   0x9f8f63d3
  402fcc:	scas   eax,DWORD PTR es:[edi]
  402fcd:	dec    edx
  402fce:	and    DWORD PTR [ecx-0x22],edi
  402fd1:	pop    eax
  402fd2:	shl    DWORD PTR [edx],0xe6
  402fd5:	into   
  402fd6:	pushf  
  402fd7:	jecxz  0x402f94
  402fd9:	add    ch,BYTE PTR [esp+ebp*8-0x737666cf]
  402fe0:	sbb    BYTE PTR ds:[esi-0x1233ce7f],ah
  402fe7:	shl    dl,1
  402fe9:	pop    esi
  402fea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402feb:	push   ds
  402fec:	mov    BYTE PTR [edi-0x7],ch
  402fef:	mov    DWORD PTR [edx+edi*4],edi
  402ff2:	jbe    0x402ff6
  402ff4:	cli    
  402ff5:	lea    esp,[ecx-0x22b10a83]
  402ffb:	ds and eax,edx
  402ffe:	sub    al,0xa5
  403000:	ss (bad) 
  403002:	mov    bh,0xab
  403004:	scas   eax,DWORD PTR es:[edi]
  403005:	aaa    
  403006:	(bad)  
  403007:	lods   al,BYTE PTR ds:[esi]
  403008:	adc    ah,BYTE PTR [esi-0xd13df44]
  40300e:	out    0xe2,al
  403010:	xor    al,0x8
  403012:	cmp    eax,0xfd3ad283
  403017:	outs   dx,BYTE PTR ds:[esi]
  403018:	or     eax,DWORD PTR [eax-0x40]
  40301b:	push   ebp
  40301c:	cmp    BYTE PTR [esi],cl
  40301e:	sbb    bh,BYTE PTR [edx-0x6f]
  403021:	mov    eax,ds:0xff67242
  403026:	adc    bl,cl
  403028:	jp     0x40305a
  40302a:	pop    edx
  40302b:	dec    eax
  40302c:	scas   eax,DWORD PTR es:[edi]
  40302d:	es cmc 
  40302f:	imul   esp,ebx,0x9b3ce382
  403035:	cli    
  403036:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403037:	xchg   edx,eax
  403038:	daa    
  403039:	ja     0x403070
  40303b:	std    
  40303c:	(bad)  
  40303e:	lods   al,BYTE PTR ds:[esi]
  40303f:	jo     0x403091
  403041:	dec    esp
  403042:	(bad)  
  403043:	aad    0x64
  403045:	sub    al,0xf
  403047:	sub    eax,0x47e9087
  40304c:	out    dx,eax
  40304d:	ror    edx,cl
  40304f:	rcr    DWORD PTR [eax+0x3a],1
  403052:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  403054:	pusha  
  403055:	or     DWORD PTR [eax+0x1f0e0286],ebx
  40305b:	mov    eax,ds:0x98418d27
  403060:	call   0x3784dd91
  403065:	fwait
  403066:	or     esp,ebx
  403068:	pop    ss
  403069:	cmp    BYTE PTR [ecx+0x73],dh
  40306c:	ret    0xedbe
  40306f:	mov    ebp,0x39beb6cf
  403074:	xchg   BYTE PTR ds:0x3585013b,ch
  40307a:	data16 ja 0x403067
  40307d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40307e:	and    al,0x4a
  403080:	fld    st(2)
  403082:	push   DWORD PTR [ecx-0x3319aee9]
  403088:	arpl   WORD PTR [edi-0x3e573a12],dx
  40308e:	mov    ds:0x31e832af,eax
  403093:	pop    es
  403094:	xchg   si,ax
  403096:	mov    ecx,0xa61e7397
  40309b:	inc    eax
  40309c:	out    dx,eax
  40309d:	sub    eax,0x240bae48
  4030a2:	in     eax,dx
  4030a3:	pop    esp
  4030a4:	outs   dx,BYTE PTR ds:[esi]
  4030a5:	rol    BYTE PTR [ebx+ebx*2-0x149ba698],0x2e
  4030ad:	adc    esp,DWORD PTR [ecx+0x4e]
  4030b0:	in     al,0x25
  4030b2:	jecxz  0x403071
  4030b4:	imul   edx,ecx,0xffffff85
  4030b7:	dec    ebp
  4030b8:	test   BYTE PTR [ebx+0x16],0xa2
  4030bc:	xchg   ecx,ebp
  4030be:	sub    eax,0x3a949248
  4030c3:	xchg   esp,eax
  4030c4:	or     DWORD PTR [edx+0x41],esi
  4030c7:	push   ebx
  4030c8:	fdiv   st,st(6)
  4030cb:	and    BYTE PTR [ebp-0x582bef1f],bl
  4030d1:	inc    ebp
  4030d2:	jle    0x403111
  4030d4:	pop    ebp
  4030d5:	retf   
  4030d6:	dec    esi
  4030d7:	pusha  
  4030d8:	and    al,0x49
  4030da:	das    
  4030db:	repz out 0x38,eax
  4030de:	mov    esi,0x71e76727
  4030e3:	or     DWORD PTR [esi+0x6123ccec],ecx
  4030e9:	fs inc edi
  4030eb:	pop    ecx
  4030ec:	pop    ebp
  4030ed:	push   eax
  4030ee:	daa    
  4030ef:	btc    DWORD PTR [ebx-0x54],ebp
  4030f3:	push   0xfffffffd
  4030f5:	mov    DWORD PTR [edi+0x79],esp
  4030f8:	std    
  4030f9:	and    DWORD PTR [ebp+0x26],0xfffffff7
  4030fd:	inc    edx
  4030fe:	push   cs
  4030ff:	pop    edx
  403100:	out    dx,eax
  403101:	adc    al,0xe6
  403103:	push   cs
  403104:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403105:	(bad)  
  403106:	mov    al,BYTE PTR [eax-0x1c]
  403109:	xchg   edx,eax
  40310a:	inc    ecx
  40310b:	icebp  
  40310c:	mov    ah,BYTE PTR [ecx+0x46]
  40310f:	sti    
  403110:	mov    ch,0xa1
  403112:	sub    cl,BYTE PTR [edi+0x44]
  403115:	cmp    eax,0x3929a55a
  40311a:	fsubr  st,st(3)
  40311c:	(bad)  
  40311e:	mov    esi,0xcb05d406
  403123:	lods   al,BYTE PTR ds:[esi]
  403124:	scas   eax,DWORD PTR es:[edi]
  403125:	add    eax,0x8f8b521d
  40312a:	lods   al,BYTE PTR ds:[esi]
  40312b:	stos   BYTE PTR es:[edi],al
  40312c:	cmp    eax,0x1442d89
  403131:	nop
  403132:	addr16 popf 
  403134:	and    BYTE PTR [ebp-0x14],ch
  403137:	xchg   ecx,eax
  403138:	or     DWORD PTR [edi],ecx
  40313a:	dec    ebp
  40313b:	sub    al,0x6
  40313d:	popa   
  40313e:	mov    eax,0x4ad5d170
  403143:	imul   ebx,DWORD PTR [edx+0x64ee300e],0xffffffc8
  40314a:	fcmove st,st(6)
  40314c:	or     DWORD PTR [esi+0x30],esi
  40314f:	mov    edi,edx
  403151:	lock and bl,BYTE PTR [edx-0x12a5dd9]
  403158:	ret    0x1cfc
  40315b:	test   eax,0x4a09a8f4
  403160:	mov    BYTE PTR [edx],0xff
  403163:	(bad)  
  403164:	div    al
  403166:	rol    BYTE PTR [esi+0x35b8bd7e],1
  40316c:	int3   
  40316d:	xlat   BYTE PTR ds:[ebx]
  40316f:	mov    eax,0x150927b0
  403174:	jle    0x4031ce
  403176:	cld    
  403177:	popa   
  403178:	add    ah,BYTE PTR [ecx-0x37]
  40317b:	cmc    
  40317c:	push   ecx
  40317d:	retf   0x9a3b
  403180:	fisub  WORD PTR [edx-0x3b]
  403183:	and    ebp,esi
  403185:	xchg   esi,eax
  403186:	push   es
  403187:	and    eax,0x9f861dae
  40318c:	add    eax,0xfcbe1c7a
  403191:	icebp  
  403192:	fstp   DWORD PTR [edx-0x61]
  403195:	xchg   ebx,ebx
  403197:	mov    ds:0xbbb60af7,al
  40319c:	icebp  
  40319d:	call   0x2614:0x9dc76970
  4031a4:	and    ecx,esi
  4031a6:	pop    eax
  4031a7:	ficomp DWORD PTR [edi+esi*4]
  4031aa:	add    eax,esi
  4031ac:	outs   dx,DWORD PTR ds:[esi]
  4031ad:	(bad)  
  4031ae:	ins    BYTE PTR es:[edi],dx
  4031af:	fwait
  4031b0:	or     BYTE PTR [edi+esi*1+0x5e],0x9c
  4031b5:	or     eax,0x27563f91
  4031ba:	jae    0x403215
  4031bc:	lods   al,BYTE PTR ds:[esi]
  4031bd:	push   esi
  4031be:	lods   al,BYTE PTR ds:[esi]
  4031bf:	ss or  bh,al
  4031c2:	aas    
  4031c3:	hlt    
  4031c4:	fwait
  4031c5:	rol    BYTE PTR [edi+0x1bbc0394],0xe1
  4031cc:	loope  0x403235
  4031ce:	and    edi,0x43300f1c
  4031d4:	pop    ds
  4031d5:	rcl    BYTE PTR [esi],1
  4031d7:	mov    WORD PTR [ebx+ebx*4],?
  4031da:	xchg   ecx,eax
  4031db:	xor    DWORD PTR [ebp-0x4b],ecx
  4031de:	xor    eax,0xa2d18cd7
  4031e3:	stos   BYTE PTR es:[edi],al
  4031e4:	dec    esi
  4031e5:	shl    DWORD PTR [esi],1
  4031e7:	or     DWORD PTR [si],0x16
  4031eb:	add    edx,DWORD PTR [edx]
  4031ed:	mov    ebp,0x343b97c8
  4031f2:	dec    eax
  4031f3:	push   eax
  4031f4:	int    0xb1
  4031f6:	fdivr  DWORD PTR [ebp+0x5c]
  4031f9:	(bad)  
  4031fa:	mov    ah,0xa3
  4031fc:	nop
  4031fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031fe:	adc    al,0x12
  403200:	(bad)  
  403201:	in     eax,0x42
  403203:	xor    dl,BYTE PTR ds:0xa77db37e
  403209:	cmp    DWORD PTR [esi+0x15],ebp
  40320c:	dec    edi
  40320d:	je     0x4031f8
  40320f:	loope  0x4031a7
  403211:	aas    
  403212:	lahf   
  403213:	xor    BYTE PTR [edx],al
  403215:	lahf   
  403216:	ins    DWORD PTR es:[edi],dx
  403217:	les    esi,FWORD PTR ds:0x4b06c0df
  40321d:	push   cs
  40321e:	jg     0x40322e
  403220:	fidivr WORD PTR [bp+di-0x76]
  403224:	push   edx
  403225:	add    eax,0x1ab87808
  40322a:	and    al,0x42
  40322c:	ins    DWORD PTR es:[edi],dx
  40322d:	dec    ebx
  40322e:	ss test eax,0x1a63246a
  403234:	jno    0x403267
  403236:	add    ah,BYTE PTR [eax-0x31]
  403239:	adc    DWORD PTR [edi+0x48],eax
  40323c:	popf   
  40323d:	add    edx,DWORD PTR [eax]
  40323f:	out    dx,al
  403240:	xchg   ebx,eax
  403241:	mov    bh,al
  403243:	push   es
  403244:	test   DWORD PTR [ecx+0x7a6a41d],ecx
  40324a:	or     DWORD PTR [esi+ebp*4+0x23234ed3],0xffffffed
  403252:	push   ebx
  403253:	jle    0x4032ba
  403255:	hlt    
  403256:	cmp    esi,ebx
  403258:	mov    ebx,0x4863db7d
  40325d:	loop   0x4032a8
  40325f:	dec    esi
  403260:	das    
  403261:	aaa    
  403262:	pop    ecx
  403263:	and    al,0xc1
  403265:	(bad)  
  403266:	fs mov al,0xa
  403269:	mov    dl,0xdc
  40326b:	xchg   BYTE PTR [edx],dh
  40326d:	dec    esp
  40326e:	xor    ebp,DWORD PTR [edx+0x32789bcb]
  403274:	repz and BYTE PTR [esi-0x65c7be65],0x9c
  40327c:	jl     0x40329e
  40327e:	fidiv  WORD PTR [ebx-0x6fe17036]
  403284:	mov    cl,0xd3
  403286:	cmp    BYTE PTR [eax+eiz*4],dh
  403289:	(bad)  
  40328a:	mov    eax,0x48517920
  40328f:	gs nop
  403291:	test   eax,0x70ba9d78
  403296:	mov    bl,BYTE PTR [ebp+eax*4+0x32]
  40329a:	jmp    0x2e176211
  40329f:	xchg   esp,eax
  4032a0:	mov    dl,0x18
  4032a2:	in     al,0xfa
  4032a4:	cwde   
  4032a5:	iret   
  4032a6:	mov    ebx,0xe1baee83
  4032ab:	xor    ebp,DWORD PTR [ecx-0x607168]
  4032b1:	cs fwait
  4032b3:	jg     0x4032f1
  4032b5:	inc    esp
  4032b6:	inc    edx
  4032b7:	aam    0x44
  4032b9:	pop    ds
  4032ba:	mov    ah,0xcf
  4032bc:	or     edi,edx
  4032be:	sar    DWORD PTR [edi+0x53434151],cl
  4032c4:	mov    BYTE PTR [esi+0x70],bl
  4032c7:	mov    ecx,0xdb8fd02d
  4032cc:	add    BYTE PTR [ebp+0x20],dh
  4032cf:	mov    bh,0x48
  4032d1:	outs   dx,DWORD PTR ds:[esi]
  4032d2:	repnz imul ebx,edx,0xd9dcfcaf
  4032d9:	jg     0x403358
  4032db:	pop    ebp
  4032dc:	mov    WORD PTR [edx+0x56f89764],gs
  4032e2:	mov    BYTE PTR [ebx+0x73],bl
  4032e5:	rcl    DWORD PTR [eax+0x79],0xe6
  4032e9:	and    bh,0x85
  4032ec:	inc    edx
  4032ed:	xchg   BYTE PTR [ebx+eiz*2-0x26],cl
  4032f1:	cmp    BYTE PTR [eax+0x2f],dl
  4032f4:	mov    bh,0xda
  4032f6:	pop    es
  4032f7:	cmp    bh,BYTE PTR [ebp+ecx*4-0x47c58512]
  4032fe:	xor    eax,0x28919cba
  403303:	call   0x7764:0x3e971dfa
  40330a:	push   ds
  40330b:	ret    0xba8e
  40330e:	lahf   
  40330f:	aam    0x12
  403311:	xor    cl,BYTE PTR [eax-0x28612708]
  403317:	push   cs
  403318:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403319:	call   0x42eb1685
  40331e:	mov    esp,0x97612d51
  403323:	add    esi,edi
  403325:	(bad)  
  403326:	and    al,0x7f
  403328:	or     ah,ch
  40332a:	or     eax,0x8a224cd9
  40332f:	loop   0x403393
  403331:	push   0xd3eac649
  403336:	in     al,dx
  403337:	ret    0x8d8a
  40333a:	inc    ebp
  40333b:	enter  0xfc46,0x86
  40333f:	pop    ds
  403340:	jbe    0x403384
  403342:	repz gs mov ecx,0x83a6a584
  403349:	and    al,BYTE PTR [esi+0x2efb5608]
  40334f:	gs push ds
  403351:	and    bh,al
  403353:	jns    0x403371
  403355:	sahf   
  403356:	repnz adc eax,0x22847545
  40335c:	jne    0x4033a8
  40335e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40335f:	clc    
  403360:	sub    BYTE PTR [edi],ah
  403362:	xor    eax,0xf6739ef7
  403367:	std    
  403368:	stos   BYTE PTR es:[edi],al
  403369:	mov    ebp,0xbf66e3bc
  40336e:	mov    ss,WORD PTR [edi-0x37]
  403371:	(bad)  
  403372:	scas   al,BYTE PTR es:[edi]
  403373:	mov    edi,0x570f5238
  403378:	call   0x987757f8
  40337d:	out    dx,eax
  40337e:	aad    0x21
  403380:	push   cs
  403381:	sbb    ebp,ecx
  403383:	fiadd  WORD PTR ds:0x8a77f880
  403389:	dec    edx
  40338a:	xor    cl,BYTE PTR [ecx]
  40338c:	jmp    0x962e1572
  403391:	cmp    al,0x80
  403393:	or     BYTE PTR [ecx-0x39],dh
  403396:	rcr    BYTE PTR [edi-0x4f],cl
  403399:	xchg   edx,eax
  40339a:	aad    0xe2
  40339c:	inc    esi
  40339d:	or     BYTE PTR [ebp+0x4a1d2938],bl
  4033a3:	fs xor edx,esi
  4033a6:	test   BYTE PTR [esi],cl
  4033a8:	sbb    edx,DWORD PTR [ebp+0x7]
  4033ab:	jae    0x403349
  4033ad:	retf   
  4033ae:	sub    al,0x11
  4033b0:	mov    ds:0xe58370af,al
  4033b5:	mov    cl,0x56
  4033b7:	mov    DWORD PTR [esi+0x13],edx
  4033ba:	js     0x403351
  4033bc:	inc    ecx
  4033bd:	div    edi
  4033bf:	inc    esi
  4033c0:	add    al,0xf9
  4033c2:	xor    esi,DWORD PTR [esi-0x1c7451c7]
  4033c8:	loopne 0x40336f
  4033ca:	dec    ebp
  4033cb:	sub    al,0x64
  4033cd:	mov    ebx,0x58c750f8
  4033d2:	and    BYTE PTR [eax],bh
  4033d4:	push   0x10aa12f4
  4033d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033da:	jecxz  0x403372
  4033dc:	mov    edi,0x83bff72
  4033e1:	loop   0x4033ee
  4033e3:	punpckldq mm3,DWORD PTR [esi-0x1090b57e]
  4033ea:	cli    
  4033eb:	dec    ecx
  4033ec:	add    eax,0x254b1abb
  4033f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033f2:	push   ebp
  4033f3:	paddq  mm3,mm4
  4033f6:	mov    ebx,0xd607fc05
  4033fb:	pop    ebp
  4033fc:	je     0x4033c8
  4033fe:	or     bh,0x50
  403401:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403402:	jg     0x403386
  403404:	mov    esp,0x4f8b47bb
  403409:	xor    BYTE PTR [ecx+0x53f6b456],bh
  40340f:	repz add BYTE PTR [eax],ch
  403412:	(bad)  
  403413:	xchg   ebx,eax
  403414:	pop    eax
  403415:	jl     0x4033b0
  403417:	cmp    ebx,DWORD PTR [esi]
  403419:	mov    ebp,0x5bc7ab2
  40341e:	pop    edi
  40341f:	outs   dx,BYTE PTR ds:[esi]
  403420:	les    ebp,FWORD PTR [ebx+0x75e2f61f]
  403426:	mov    esp,0x57956d3a
  40342b:	xor    edi,ebp
  40342d:	xchg   edi,eax
  40342e:	xchg   ebx,eax
  40342f:	std    
  403430:	stos   DWORD PTR es:[edi],eax
  403431:	repnz cmp DWORD PTR [ebp-0x2],ebp
  403435:	jg     0x4033ce
  403437:	jecxz  0x403493
  403439:	push   0xea88f223
  40343e:	neg    DWORD PTR [edx+0x31a932d5]
  403444:	cdq    
  403445:	aam    0xe1
  403447:	fimul  WORD PTR ds:0x304f3dbc
  40344d:	arpl   WORD PTR [ebx+0x34ed4e4e],sp
  403453:	push   edx
  403454:	ds in  eax,dx
  403456:	mov    eax,ds:0xc12b3f50
  40345b:	mov    bl,0x7a
  40345d:	xor    edx,ecx
  40345f:	shl    BYTE PTR ds:0x5d65b057,1
  403465:	(bad)  
  403466:	sti    
  403467:	and    BYTE PTR [edx+0x2f5d1aaa],cl
  40346d:	or     cl,ch
  40346f:	inc    esp
  403470:	shl    BYTE PTR [esi+0xe8eb498],1
  403476:	js     0x40340d
  403478:	rcl    esp,1
  40347a:	sbb    edx,edx
  40347c:	mov    edx,0xfcdd073e
  403481:	adc    eax,0x6b3fb1c3
  403486:	cmp    al,0x6f
  403488:	test   eax,0x77c4c04a
  40348d:	xor    BYTE PTR [ebx],ah
  40348f:	push   edi
  403490:	mul    BYTE PTR [edi]
  403492:	mov    ch,0xec
  403494:	push   ebp
  403495:	outs   dx,BYTE PTR ds:[esi]
  403496:	mov    ds:0x6ffa9b0,al
  40349b:	int    0x86
  40349d:	push   ebp
  40349e:	pop    ebp
  40349f:	add    esi,DWORD PTR [esp+ebx*4-0x4145dfac]
  4034a6:	in     eax,0xf2
  4034a8:	jle    0x4034af
  4034aa:	cmp    edx,DWORD PTR [edx]
  4034ac:	imul   ebp,DWORD PTR [ecx-0x588017bf],0xffffffc6
  4034b3:	pop    ecx
  4034b4:	and    al,0xfe
  4034b6:	mov    ch,0x5d
  4034b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034b9:	pop    ss
  4034ba:	retf   0xfb9b
  4034bd:	adc    ch,ch
  4034bf:	(bad)  
  4034c0:	out    dx,eax
  4034c1:	rol    DWORD PTR [ecx-0x15cae19],1
  4034c7:	push   ebx
  4034c8:	mov    bl,0x1
  4034ca:	push   0x14
  4034cc:	adc    al,0x6e
  4034ce:	dec    ebp
  4034cf:	(bad)  
  4034d0:	push   ecx
  4034d1:	mov    al,0x63
  4034d3:	sbb    BYTE PTR [edx+0x345e1707],0xb4
  4034da:	mov    dh,0xb9
  4034dc:	in     al,0x81
  4034de:	mov    edi,0xafb99236
  4034e3:	jmp    0x4034af
  4034e5:	mov    dh,0x8
  4034e7:	arpl   WORD PTR [edi+0x1a],ax
  4034ea:	adc    BYTE PTR [esi],al
  4034ec:	or     BYTE PTR [ecx-0x1338ef43],0x7c
  4034f3:	sub    BYTE PTR [ebx-0x5bf01de9],bl
  4034f9:	sti    
  4034fa:	sbb    al,0xcf
  4034fc:	and    DWORD PTR ds:0x55a60fa,eax
  403502:	loop   0x4034a8
  403504:	push   cx
  403506:	pop    es
  403507:	xchg   esp,eax
  403508:	inc    eax
  403509:	push   ebp
  40350a:	std    
  40350b:	mov    es,WORD PTR [eax-0x301c5be1]
  403511:	lods   eax,DWORD PTR ds:[esi]
  403512:	js     0x4034d8
  403514:	ja     0x403523
  403516:	in     eax,dx
  403517:	loop   0x403590
  403519:	dec    edx
  40351a:	icebp  
  40351b:	dec    edx
  40351c:	mov    ch,0x16
  40351e:	pusha  
  40351f:	mov    esi,DWORD PTR [edi-0x52]
  403522:	jb     0x403599
  403524:	cdq    
  403525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403526:	mov    dl,0xcf
  403528:	inc    edi
  403529:	mov    ebp,0xf0262a0f
  40352e:	std    
  40352f:	sub    esi,edx
  403531:	vxorps xmm0,xmm2,XMMWORD PTR [eax]
  403535:	(bad)  
  403536:	ror    BYTE PTR [eax+eax*2-0x3e],0xd2
  40353b:	mov    ds:0x57c67a7b,eax
  403540:	cmp    ebx,edx
  403542:	mov    eax,ds:0xfab14b2c
  403547:	xor    esi,edx
  403549:	ja     0x40353b
  40354b:	pop    edx
  40354c:	in     eax,dx
  40354d:	std    
  40354e:	adc    ebp,ebx
  403550:	fild   WORD PTR fs:[edi+0x66]
  403554:	push   esp
  403555:	loope  0x4035c4
  403557:	enter  0xcdb8,0xb3
  40355b:	cwde   
  40355c:	hlt    
  40355d:	push   es
  40355e:	push   ebp
  40355f:	shr    BYTE PTR [edx],1
  403561:	inc    esi
  403562:	adc    al,0x99
  403564:	test   DWORD PTR [ebp+0x1e1db2a5],esi
  40356a:	es xchg esp,eax
  40356c:	dec    DWORD PTR [edx]
  40356e:	(bad)  
  40356f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403570:	xor    DWORD PTR [ebx+0x4017c3d5],0x38
  403577:	lea    eax,[ecx]
  403579:	push   edi
  40357a:	int    0xac
  40357c:	faddp  st(1),st
  40357e:	jecxz  0x4035af
  403580:	push   eax
  403581:	push   eax
  403582:	aam    0x78
  403584:	fld    TBYTE PTR [edi+0x1935657b]
  40358a:	loopne 0x4035aa
  40358c:	cmp    al,0xa
  40358e:	leave  
  40358f:	fcom   DWORD PTR [esi*1-0xad286bf]
  403596:	inc    ebx
  403597:	les    ebp,FWORD PTR [eax-0x4ece1b4f]
  40359d:	imul   edx,DWORD PTR [edx-0x54],0x57
  4035a1:	and    DWORD PTR [ecx-0x39614927],edi
  4035a7:	cmp    DWORD PTR [eax+edi*2-0x504dcea8],ebx
  4035ae:	sbb    bl,al
  4035b0:	jg     0x403550
  4035b2:	sbb    BYTE PTR [eax],0xca
  4035b5:	push   cs
  4035b6:	ins    BYTE PTR es:[edi],dx
  4035b7:	pop    esi
  4035b8:	shl    BYTE PTR [esi],0x20
  4035bb:	adc    al,0xfd
  4035bd:	mov    edi,0x94ca58ae
  4035c2:	stos   DWORD PTR es:[edi],eax
  4035c3:	(bad)  
  4035c4:	fistp  DWORD PTR [eax+0x3febf878]
  4035ca:	sub    bl,BYTE PTR [ebx-0x6230dd4f]
  4035d0:	jl     0x40356e
  4035d2:	cmp    DWORD PTR [edi],ebx
  4035d4:	pop    edi
  4035d5:	icebp  
  4035d6:	xchg   ebx,eax
  4035d7:	inc    ebp
  4035d8:	gs inc esp
  4035da:	pop    eax
  4035db:	dec    eax
  4035dc:	test   BYTE PTR [eax-0x19],bl
  4035df:	jl     0x4035dd
  4035e1:	lods   al,BYTE PTR ds:[esi]
  4035e2:	xchg   esi,eax
  4035e3:	in     al,dx
  4035e4:	inc    edx
  4035e5:	enter  0xea14,0xa8
  4035e9:	out    0x74,al
  4035eb:	out    0xa5,eax
  4035ed:	shl    DWORD PTR [eax],cl
  4035ef:	imul   eax,DWORD PTR [edx+0xf],0x950de3fb
  4035f6:	out    dx,eax
  4035f7:	sbb    BYTE PTR [ecx+0x67],bl
  4035fa:	jl     0x403631
  4035fc:	hlt    
  4035fd:	fadd   QWORD PTR [esi]
  4035ff:	pop    esp
  403600:	mov    al,ds:0xf53d6d5e
  403605:	aas    
  403606:	pusha  
  403607:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403608:	into   
  403609:	mov    ch,0xb7
  40360b:	data16 (bad) 
  40360d:	pop    esp
  40360e:	scas   al,BYTE PTR es:[edi]
  40360f:	addr16 mov al,0x6a
  403612:	invd   
  403614:	outs   dx,BYTE PTR ds:[esi]
  403615:	retf   
  403616:	xor    cl,dl
  403618:	add    eax,0x21488d5c
  40361d:	int3   
  40361e:	ins    BYTE PTR es:[edi],dx
  40361f:	or     eax,0x65fac0fa
  403624:	xchg   ebp,eax
  403625:	sbb    esi,DWORD PTR [ebx+0x36470587]
  40362b:	shr    BYTE PTR [esi],1
  40362d:	adc    cl,BYTE PTR [edx-0x43567b6d]
  403633:	in     eax,dx
  403634:	mov    eax,ds:0x82635f85
  403639:	fmul   st(4),st
  40363b:	jne    0x4035e3
  40363d:	or     eax,0xdffc2f47
  403642:	cmp    al,0xac
  403644:	test   dh,dl
  403646:	xor    al,0x41
  403648:	jl     0x40367f
  40364a:	sbb    eax,0xf628a42c
  40364f:	jnp    0x40361e
  403651:	xor    eax,0xb70097ff
  403656:	jbe    0x4036a9
  403658:	xor    edi,edi
  40365a:	adc    ch,BYTE PTR [edi+edi*1-0x7c]
  40365e:	xor    eax,0x59f58a42
  403663:	sub    ah,0x3a
  403666:	push   eax
  403667:	cmp    eax,0x9e051baf
  40366c:	and    al,0x68
  40366e:	xchg   ebx,eax
  40366f:	out    0x67,al
  403671:	jbe    0x40368a
  403673:	aaa    
  403674:	std    
  403675:	push   ds
  403676:	test   eax,0xf7ce0394
  40367b:	xchg   ecx,eax
  40367c:	jb     0x40368a
  40367e:	mov    DWORD PTR [ecx+edi*1+0x6647858],esp
  403685:	inc    ebx
  403686:	fwait
  403687:	lock seto BYTE PTR [eax-0x3d]
  40368c:	pop    esi
  40368d:	ins    DWORD PTR es:[edi],dx
  40368e:	fdiv   DWORD PTR [edi-0x2b3a5a27]
  403694:	outs   dx,BYTE PTR ds:[esi]
  403695:	mov    dl,0x49
  403697:	mov    al,0xb2
  403699:	sahf   
  40369a:	test   BYTE PTR [esi+0x718f3f17],cl
  4036a0:	std    
  4036a1:	test   BYTE PTR [esi+0x18],dh
  4036a4:	push   ebx
  4036a5:	jmp    0x76a3:0x37ffe830
  4036ac:	xchg   BYTE PTR [edi+0x4f],dl
  4036af:	inc    ebp
  4036b0:	dec    DWORD PTR [eax-0x34cf5c3d]
  4036b6:	and    DWORD PTR [ecx+0x44],esi
  4036b9:	dec    ecx
  4036ba:	out    dx,eax
  4036bb:	or     DWORD PTR ds:0xb8c63a38,edi
  4036c1:	or     bh,BYTE PTR [ebx-0x7e0a59e2]
  4036c7:	mov    WORD PTR ds:0xe662d17f,ss
  4036cd:	cdq    
  4036ce:	mov    gs,WORD PTR [ebx+0x103db02c]
  4036d4:	aam    0x83
  4036d6:	test   edi,esi
  4036d8:	and    al,0x20
  4036da:	outs   dx,DWORD PTR ds:[esi]
  4036db:	ud0    edi,DWORD PTR [edx+0x4e]
  4036df:	add    DWORD PTR [esi],edx
  4036e1:	imul   ebp,ecx,0xffffffb5
  4036e4:	mov    DWORD PTR [edx+0x6845b877],esi
  4036ea:	mov    bl,0x4c
  4036ec:	add    bl,BYTE PTR [eax+0x1247e03f]
  4036f2:	outs   dx,DWORD PTR ds:[esi]
  4036f3:	sbb    BYTE PTR [esi-0x7],bh
  4036f6:	test   BYTE PTR [ebp+0x4e44e62e],dh
  4036fc:	(bad)  
  4036fd:	adc    al,BYTE PTR [esp+eiz*4]
  403700:	sbb    al,0x32
  403702:	aas    
  403703:	jae    0x403735
  403705:	mov    bh,0x75
  403707:	cld    
  403708:	(bad)  
  403709:	retf   0xf4a6
  40370c:	inc    ebx
  40370d:	pop    ss
  40370e:	ins    DWORD PTR es:[edi],dx
  40370f:	outs   dx,BYTE PTR ds:[esi]
  403710:	or     eax,0x6800e813
  403715:	inc    edi
  403716:	mov    bh,0xe9
  403718:	aaa    
  403719:	enter  0x1568,0x4d
  40371d:	rol    DWORD PTR [edi],cl
  40371f:	cs pop eax
  403721:	xchg   ebx,eax
  403722:	retf   
  403723:	sub    bl,0xb2
  403726:	aaa    
  403727:	fbstp  TBYTE PTR cs:[esi+0x54]
  40372b:	scas   al,BYTE PTR es:[edi]
  40372c:	out    dx,eax
  40372d:	push   ebx
  40372e:	popf   
  40372f:	mov    esp,ebx
  403731:	xchg   ebx,eax
  403732:	nop
  403733:	dec    esp
  403734:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403735:	inc    ebx
  403736:	jns    0x4036c5
  403738:	out    dx,eax
  403739:	popf   
  40373a:	inc    ebx
  40373b:	inc    edx
  40373c:	test   BYTE PTR [edi+0x39caeaca],0x7
  403743:	pop    eax
  403744:	jge    0x403714
  403746:	das    
  403747:	mov    al,0x32
  403749:	inc    edi
  40374a:	jg     0x4036fc
  40374c:	jp     0x40379b
  40374e:	int    0x52
  403750:	jmp    0xa20cd289
  403755:	push   DWORD PTR [ecx-0x3d]
  403758:	push   ebx
  403759:	push   ebx
  40375a:	adc    edi,ebp
  40375c:	shl    ch,1
  40375e:	jmp    0x7b90:0xe0954440
  403765:	inc    esp
  403766:	ret    0xd968
  403769:	ret    0x5c69
  40376c:	mov    eax,0x65dd8a64
  403771:	push   0x67
  403773:	mov    ds:0x2b963340,eax
  403778:	loopne 0x403771
  40377a:	mov    al,0xfa
  40377c:	mov    al,es:0x28dbdf0c
  403782:	ficomp DWORD PTR [ecx]
  403784:	fdiv   QWORD PTR [edx+0x65]
  403787:	lahf   
  403788:	xchg   edx,eax
  403789:	lock dec esi
  40378b:	mov    gs,WORD PTR [ebx]
  40378d:	repnz cmc 
  40378f:	or     al,al
  403791:	pusha  
  403792:	xchg   ebx,eax
  403793:	(bad)  
  403794:	(bad)  [edi+ebx*8-0x5e]
  403798:	or     BYTE PTR [eax-0x2d6762aa],ch
  40379e:	int3   
  40379f:	xchg   esp,eax
  4037a0:	pop    eax
  4037a1:	cmp    bh,BYTE PTR [ebx]
  4037a3:	adc    al,0xe9
  4037a5:	pop    DWORD PTR ds:0xaa6360f2
  4037ab:	adc    BYTE PTR [ecx+0x20269334],dl
  4037b1:	ins    BYTE PTR es:[edi],dx
  4037b2:	ret    
  4037b3:	cmp    BYTE PTR [ebx],0xff
  4037b6:	(bad)  
  4037b7:	mov    edx,0x629f6e7a
  4037bc:	dec    edi
  4037bd:	imul   cl
  4037bf:	loopne 0x403808
  4037c1:	xor    al,0xf5
  4037c3:	and    DWORD PTR ds:0x2bf2d189,edi
  4037c9:	arpl   WORD PTR [eax+0x18],si
  4037cc:	mul    ebx
  4037ce:	xchg   esp,eax
  4037cf:	(bad)  [esi-0x5cb970bf]
  4037d5:	or     eax,0x1d1d5267
  4037da:	es jae 0x403847
  4037dd:	daa    
  4037de:	int    0xc0
  4037e0:	mov    esp,0x6f0e886e
  4037e5:	mov    gs,eax
  4037e7:	out    0xdc,eax
  4037e9:	mov    al,0xe8
  4037eb:	test   DWORD PTR [esi+0x72],0x8f810212
  4037f2:	inc    eax
  4037f3:	out    dx,al
  4037f4:	push   ds
  4037f5:	call   0xa83:0xfc8ede77
  4037fc:	pushf  
  4037fd:	inc    BYTE PTR [edx+0x52]
  403800:	shr    BYTE PTR [eax-0x30fb08ea],cl
  403806:	adc    al,0xb3
  403808:	neg    DWORD PTR [eax+ebx*2]
  40380b:	ja     0x4037fa
  40380d:	and    esp,0x7c
  403810:	lea    esp,[ecx]
  403812:	sar    BYTE PTR [ebx+0x4968059e],cl
  403818:	leave  
  403819:	pop    edi
  40381a:	(bad)  
  40381b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40381c:	push   ss
  40381d:	add    al,0xf7
  40381f:	(bad)  
  403820:	aas    
  403821:	repz retf 0xbd39
  403825:	mov    esp,0x2cd71e2
  40382a:	fs xchg cl,al
  40382d:	pop    ss
  40382e:	add    DWORD PTR fs:[edi+esi*2-0x230166dd],edi
  403836:	jl     0x40380a
  403838:	(bad)  
  403839:	test   al,0x46
  40383b:	or     eax,0x783c3914
  403840:	mov    al,0x7b
  403842:	cli    
  403843:	fcmovnb st,st(0)
  403845:	dec    edx
  403846:	fldcw  WORD PTR [eax]
  403848:	mov    eax,0x6be2102b
  40384d:	mov    eax,ds:0xd5527e69
  403852:	inc    ecx
  403853:	lea    esi,[edx]
  403855:	sub    BYTE PTR [esi],dh
  403857:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403858:	pop    edx
  403859:	or     al,0x98
  40385b:	jb     0x4038bb
  40385d:	clc    
  40385e:	add    bl,BYTE PTR [esi+0x61c0f192]
  403864:	mov    ah,bl
  403866:	adc    al,0x36
  403868:	pusha  
  403869:	pop    esp
  40386a:	mov    ds:0x9a575829,eax
  40386f:	js     0x4038ae
  403871:	das    
  403872:	xchg   BYTE PTR [eax+0x1b],dl
  403875:	repnz cwde 
  403877:	dec    edi
  403878:	inc    edx
  403879:	mov    dl,0x95
  40387b:	ins    BYTE PTR es:[edi],dx
  40387c:	mov    edi,0x28a5f876
  403881:	add    ecx,DWORD PTR [ebx-0x213fff61]
  403887:	(bad)  
  403888:	push   esp
  403889:	int    0x9e
  40388b:	out    dx,al
  40388c:	xchg   ebp,eax
  40388e:	icebp  
  40388f:	xor    cl,al
  403891:	mov    ah,0x4f
  403893:	shr    BYTE PTR [ebx],0x40
  403896:	cwde   
  403897:	xchg   ebx,eax
  403898:	xlat   BYTE PTR ds:[ebx]
  403899:	mov    edx,0x1afa4f54
  40389e:	dec    ebp
  40389f:	sbb    esp,edx
  4038a1:	nop
  4038a2:	push   esp
  4038a3:	jne    0x4038a7
  4038a5:	int3   
  4038a6:	push   ebx
  4038a7:	mov    eax,0xbb85db2d
  4038ac:	scas   eax,DWORD PTR es:[edi]
  4038ad:	xor    ch,BYTE PTR ds:0x7bf9e6e2
  4038b3:	lock mov edi,0x2ca1fd48
  4038b9:	mov    ah,0x72
  4038bb:	ss das 
  4038bd:	or     dh,BYTE PTR [eax+0x39090a41]
  4038c3:	jmp    0x4ef6d71a
  4038c8:	add    BYTE PTR [ebp+0x205b5142],0x36
  4038cf:	cld    
  4038d0:	xchg   DWORD PTR [edi+0x724dbbc8],ecx
  4038d6:	ja     0x4038f4
  4038d8:	popa   
  4038d9:	aaa    
  4038da:	xchg   DWORD PTR ss:[eax+ecx*1],esi
  4038de:	mov    bl,0xf3
  4038e0:	popa   
  4038e1:	pop    edi
  4038e2:	lds    ecx,FWORD PTR [eax-0x6e]
  4038e5:	cmp    cl,ah
  4038e7:	mov    ecx,0x12cb4f07
  4038ec:	in     al,dx
  4038ed:	xchg   ebx,eax
  4038ee:	retf   0x4c8b
  4038f1:	jge    0x4038ea
  4038f3:	xor    ecx,esi
  4038f5:	icebp  
  4038f6:	lods   eax,DWORD PTR ds:[esi]
  4038f7:	add    esp,0x5
  4038fa:	shl    BYTE PTR [eax+0x6ab6a554],cl
  403900:	lock xchg esi,eax
  403902:	push   ebp
  403903:	and    dl,BYTE PTR [eax-0x25]
  403906:	cmp    ebx,DWORD PTR [ecx]
  403908:	std    
  403909:	add    al,0x91
  40390b:	ds popa 
  40390d:	cld    
  40390e:	daa    
  40390f:	test   BYTE PTR ds:0x61789484,bl
  403915:	push   edi
  403916:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403917:	push   0xffffff9a
  403919:	mov    cl,0xf0
  40391b:	aaa    
  40391c:	adc    ecx,ebp
  40391e:	inc    edi
  40391f:	and    DWORD PTR [edx-0xb],esp
  403922:	in     eax,dx
  403923:	fstp   DWORD PTR [eax+ebx*1]
  403926:	loop   0x403940
  403928:	ja     0x40399f
  40392a:	push   ebx
  40392b:	test   al,0xd3
  40392d:	mov    cs,WORD PTR [edx-0x5a61ee12]
  403933:	imul   eax,DWORD PTR [edi],0x75
  403936:	es lahf 
  403938:	pop    es
  403939:	ret    0x6aa7
  40393c:	inc    edi
  40393d:	adc    al,0x81
  40393f:	mov    dl,0xb8
  403941:	mov    cl,0xd9
  403943:	sbb    al,0x52
  403945:	dec    eax
  403946:	out    0x88,al
  403948:	inc    edi
  403949:	adc    eax,0xa3852617
  40394e:	cmc    
  40394f:	sub    eax,edi
  403951:	arpl   WORD PTR [edi],sp
  403953:	dec    esi
  403954:	pop    esi
  403955:	dec    esi
  403956:	cmp    DWORD PTR [ecx-0x1a8a40],ebp
  40395c:	lods   al,BYTE PTR ds:[esi]
  40395d:	mov    eax,0xc1f53033
  403962:	dec    ebp
  403963:	scas   al,BYTE PTR es:[edi]
  403964:	in     eax,dx
  403965:	cmp    al,0xe6
  403967:	gs dec edi
  403969:	nop
  40396a:	out    dx,al
  40396b:	pop    DWORD PTR [edi+0x55b8712f]
  403971:	ret    0xc60c
  403974:	stos   BYTE PTR es:[edi],al
  403975:	pop    ebx
  403976:	aad    0x4
  403978:	sbb    bl,BYTE PTR ds:0x5b23dd3e
  40397e:	bound  esi,QWORD PTR [ecx]
  403980:	jle    0x403904
  403982:	mov    WORD PTR [eax],ss
  403984:	adc    ch,ch
  403986:	scas   eax,DWORD PTR es:[edi]
  403987:	in     eax,dx
  403988:	(bad)  
  403989:	jbe    0x403964
  40398b:	pop    edi
  40398c:	test   edx,esp
  40398e:	inc    eax
  40398f:	push   ebx
  403990:	mov    ebp,0xfdbeb50
  403995:	cmc    
  403996:	or     BYTE PTR [ecx-0x57b63ff6],0xf8
  40399d:	push   cs
  40399e:	add    esp,eax
  4039a0:	sub    eax,0xa7847811
  4039a5:	adc    eax,esi
  4039a7:	push   0xa520a1dc
  4039ac:	jo     0x40392f
  4039ae:	mov    esi,edi
  4039b0:	cmp    DWORD PTR [eax+0x59],ebx
  4039b3:	test   eax,0xbe07001
  4039b8:	jge    0x40399b
  4039ba:	xor    ah,BYTE PTR [esi+0x7f71705f]
  4039c0:	pop    ss
  4039c1:	or     al,0xf2
  4039c3:	imul   edi,DWORD PTR [esi],0x15
  4039c6:	call   0x67255357
  4039cb:	adc    ebx,DWORD PTR [ecx+0x66ece057]
  4039d1:	push   esp
  4039d2:	std    
  4039d3:	(bad)  
  4039d4:	xor    al,BYTE PTR [edx+0x76]
  4039d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039d8:	fcmovne st,st(0)
  4039da:	lock iret 
  4039dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039dd:	xchg   ecx,eax
  4039de:	js     0x40397c
  4039e0:	mov    BYTE PTR [eax],al
  4039e2:	xchg   esi,eax
  4039e3:	xchg   edi,eax
  4039e4:	mov    ds:0xdd2f2cfd,eax
  4039e9:	inc    eax
  4039ea:	mov    edx,0xd3aac9e3
  4039ef:	add    eax,0x742b1742
  4039f4:	stos   DWORD PTR es:[edi],eax
  4039f5:	out    0xb1,eax
  4039f7:	les    ebx,FWORD PTR [eax+ecx*1]
  4039fa:	mov    ch,0x27
  4039fc:	add    eax,0x829b7c95
  403a01:	inc    BYTE PTR [eax]
  403a03:	and    ecx,ebx
  403a05:	call   0x9d42:0xf0ab6edb
  403a0c:	repnz outs dx,BYTE PTR ds:[esi]
  403a0e:	mov    cs:0x8965e57b,al
  403a14:	xchg   DWORD PTR [esi-0xc58ba70],ecx
  403a1a:	test   ebp,edx
  403a1c:	cmp    BYTE PTR [eax],ah
  403a1e:	(bad)  
  403a20:	retf   0xfe4d
  403a23:	ins    BYTE PTR es:[edi],dx
  403a24:	jmp    0x64933551
  403a29:	test   al,0xc0
  403a2b:	xchg   DWORD PTR [edi-0x619f6e5b],ecx
  403a31:	fbld   TBYTE PTR [edi+0x1c]
  403a34:	aad    0xd8
  403a36:	call   0xd9d6:0x88e49593
  403a3d:	or     edx,DWORD PTR [edx+0x34843819]
  403a43:	outs   dx,BYTE PTR ds:[esi]
  403a44:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  403a46:	je     0x4039cc
  403a48:	xor    ch,al
  403a4a:	sub    eax,0x260959d7
  403a4f:	add    eax,0x8ce15363
  403a54:	xchg   DWORD PTR [edx+edi*1-0x4],edi
  403a58:	int    0x31
  403a5a:	ret    
  403a5b:	cmp    ch,BYTE PTR [ecx+0xd]
  403a5e:	push   ss
  403a5f:	adc    ecx,esi
  403a61:	mov    bh,0xb7
  403a63:	hlt    
  403a64:	push   ecx
  403a65:	in     eax,dx
  403a66:	xor    BYTE PTR [edx-0x68d6e883],al
  403a6c:	cmp    ebx,DWORD PTR [edx-0x27]
  403a6f:	sub    ch,cl
  403a71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a74:	fild   WORD PTR [edi+0x29]
  403a77:	test   DWORD PTR [eax-0x11],0xebf0e5af
  403a7e:	and    ah,BYTE PTR [edx]
  403a80:	xchg   ecx,eax
  403a81:	shr    ecx,1
  403a83:	sbb    esi,DWORD PTR [ecx]
  403a85:	and    BYTE PTR [ebp-0x5cf1279c],dh
  403a8b:	push   0x5fcdafa8
  403a90:	sub    dl,ah
  403a92:	test   BYTE PTR ds:0xddbe366d,ah
  403a98:	jno    0x403ab3
  403a9a:	inc    esi
  403a9b:	jns    0x403a7b
  403a9d:	fstp   QWORD PTR [eax+esi*2+0x50b6c0a0]
  403aa4:	(bad)  
  403aa5:	pop    ebx
  403aa6:	xchg   esp,eax
  403aa7:	in     eax,0x30
  403aa9:	inc    ebx
  403aaa:	inc    esp
  403aab:	xchg   ecx,eax
  403aac:	mov    esi,0x17cddf42
  403ab1:	add    al,0x77
  403ab3:	mov    DWORD PTR [esi+0x42],edx
  403ab6:	fist   DWORD PTR [ebx+0x28864f1c]
  403abc:	out    dx,al
  403abd:	mov    esi,0xa7ece58a
  403ac2:	iret   
  403ac3:	hlt    
  403ac4:	inc    esp
  403ac5:	cwde   
  403ac6:	outs   dx,BYTE PTR ds:[esi]
  403ac7:	pop    ds
  403ac8:	repnz dec ebp
  403aca:	cmp    BYTE PTR [ebp+0x1e820d5a],0x4b
  403ad1:	mov    ah,0xe5
  403ad3:	icebp  
  403ad4:	dec    esp
  403ad5:	jo     0x403aa3
  403ad7:	ror    BYTE PTR [esi-0x75b48fc7],0x1e
  403ade:	mov    ch,0x50
  403ae0:	pop    edi
  403ae1:	(bad)  [edi-0x28]
  403ae4:	call   esp
  403ae6:	jno    0x403ab8
  403ae8:	cmp    DWORD PTR [esi],ecx
  403aea:	enter  0x2015,0xc5
  403aee:	pop    esp
  403aef:	cwde   
  403af0:	xlat   BYTE PTR ds:[ebx]
  403af1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403af2:	fld    TBYTE PTR [edi]
  403af4:	mov    esi,0x79d2c80f
  403af9:	dec    esi
  403afa:	sub    al,0xf8
  403afc:	dec    edi
  403afd:	cld    
  403afe:	and    BYTE PTR [ebx],bh
  403b00:	cmp    eax,0xa6d47c71
  403b05:	aas    
  403b06:	mov    eax,0x5b40f2cd
  403b0b:	lock mov bh,0xab
  403b0e:	xchg   BYTE PTR [edx],dl
  403b10:	add    eax,0x1fc3dada
  403b15:	jno    0x403ac2
  403b17:	or     esp,ebx
  403b19:	jecxz  0x403ab6
  403b1b:	or     DWORD PTR [ebx-0x2c58f42f],edi
  403b21:	jns    0x403b4b
  403b23:	sbb    BYTE PTR [ebx-0xc],bh
  403b26:	pop    es
  403b27:	jno    0x403b28
  403b29:	sub    eax,0x33c72b6c
  403b2e:	(bad)  
  403b2f:	cmp    eax,ecx
  403b31:	jne    0x403b8d
  403b37:	or     ecx,0x18fd
  403b3d:	mov    eax,DWORD PTR [ebp-0x8]
  403b40:	and    DWORD PTR ds:0x42916b,0x3a4c
  403b4a:	mov    ecx,DWORD PTR [ebp-0x10]
  403b4d:	adc    DWORD PTR ds:0x42916b,0x4291f3
  403b57:	xor    eax,esi
  403b59:	xor    DWORD PTR ds:0x4291d3,0x4291f7
  403b63:	xor    ecx,esi
  403b65:	sub    eax,ecx
  403b67:	sub    eax,edi
  403b69:	mov    ecx,DWORD PTR ds:0x429b2f
  403b6f:	mov    ecx,DWORD PTR [ecx]
  403b71:	xor    DWORD PTR ds:0x429163,ecx
  403b77:	xor    eax,esi
  403b79:	mov    DWORD PTR [ebp-0x8],eax
  403b7c:	mov    eax,DWORD PTR [ebp-0x10]
  403b7f:	xor    eax,esi
  403b81:	mov    ecx,0xffcd8d8d
  403b86:	sub    ecx,eax
  403b88:	jmp    0x403b9c
  403b8d:	mov    eax,DWORD PTR [ebp-0x10]
  403b90:	xor    eax,esi
  403b92:	mov    ecx,0xffcd8d0d
  403b97:	sub    ecx,eax
  403b99:	add    ecx,DWORD PTR [ebp-0xc]
  403b9c:	mov    DWORD PTR [ebp-0xc],ecx
  403b9f:	mov    eax,DWORD PTR [ebp-0x8]
  403ba2:	cmp    eax,0xf89c85a1
  403ba7:	jne    0x40158a
  403bad:	mov    DWORD PTR [ebp-0x34],0x9
  403bb4:	mov    ecx,DWORD PTR [ebp+0x8]
  403bb7:	xor    ecx,esi
  403bb9:	add    ecx,edi
  403bbb:	jmp    0x40857d
  403bc0:	lea    eax,[ecx+ebx*1]
  403bc3:	mov    DWORD PTR [ebp-0x2c],eax
  403bc6:	mov    eax,DWORD PTR [ebp-0x58]
  403bc9:	sub    eax,ecx
  403bcb:	mov    DWORD PTR [ebp-0x1c],eax
  403bce:	mov    eax,DWORD PTR [ebp-0x1c]
  403bd1:	mov    DWORD PTR [ebp-0x14],eax
  403bd4:	mov    eax,DWORD PTR [ebp-0x2c]
  403bd7:	mov    DWORD PTR [ebp-0x38],0xf89c85a1
  403bde:	mov    DWORD PTR [ebp-0x54],eax
  403be1:	mov    DWORD PTR [ebp-0x20],0xf89c85a2
  403be8:	mov    eax,DWORD PTR [ebp-0x38]
  403beb:	xor    eax,esi
  403bed:	add    eax,edi
  403bef:	mov    DWORD PTR [ebp-0x10],eax
  403bf2:	mov    eax,DWORD PTR [ebp-0x38]
  403bf5:	xor    eax,esi
  403bf7:	add    eax,edi
  403bf9:	mov    DWORD PTR [ebp-0x8],eax
  403bfc:	mov    DWORD PTR [ebp-0x2c],0xf89c8581
  403c03:	mov    DWORD PTR [ebp-0x44],0xf89c85b8
  403c0a:	mov    eax,DWORD PTR [ebp-0x38]
  403c0d:	mov    edx,DWORD PTR [ebp-0x14]
  403c10:	xor    eax,esi
  403c12:	add    eax,edi
  403c14:	cmp    edx,eax
  403c16:	je     0x408571
  403c1c:	mov    eax,DWORD PTR [ebp-0x20]
  403c1f:	xor    eax,esi
  403c21:	mov    edx,0xffcd8d0d
  403c26:	sub    edx,eax
  403c28:	add    edx,DWORD PTR [ebp-0x14]
  403c2b:	mov    eax,DWORD PTR [ebp-0x20]
  403c2e:	mov    ebx,DWORD PTR [ebp-0x10]
  403c31:	xor    eax,esi
  403c33:	add    eax,edi
  403c35:	imul   eax,ebx
  403c38:	cmp    eax,edx
  403c3a:	ja     0x40856e
  403c40:	mov    edx,DWORD PTR [ebp-0x10]
  403c43:	mov    eax,DWORD PTR [ebp-0x14]
  403c46:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c49:	sub    eax,edx
  403c4b:	xor    ebx,esi
  403c4d:	xor    edx,edx
  403c4f:	add    ebx,edi
  403c51:	div    ebx
  403c53:	mov    DWORD PTR [ebp-0x8],eax
  403c56:	mov    eax,DWORD PTR [ebp-0x44]
  403c59:	mov    edx,DWORD PTR [ebp-0x8]
  403c5c:	xor    eax,esi
  403c5e:	add    eax,edi
  403c60:	cmp    edx,eax
  403c62:	jbe    0x403c72
  403c68:	mov    eax,DWORD PTR [ebp-0x44]
  403c6b:	xor    eax,esi
  403c6d:	add    eax,edi
  403c6f:	mov    DWORD PTR [ebp-0x8],eax
  403c72:	mov    eax,DWORD PTR [ebp-0x2c]
  403c75:	mov    edx,DWORD PTR [ebp-0x8]
  403c78:	xor    eax,esi
  403c7a:	add    eax,edi
  403c7c:	imul   eax,edx
  403c7f:	mov    DWORD PTR [ebp-0x8],eax
  403c82:	mov    eax,DWORD PTR [ebp-0x38]
  403c85:	mov    edx,DWORD PTR [ebp-0x8]
  403c88:	jmp    0x406039
  403c8d:	mov    eax,0xa02c6f67
  403c92:	and    al,0xb8
  403c94:	out    0x12,eax
  403c96:	mov    bh,0x24
  403c98:	fisttp QWORD PTR [esi]
  403c9a:	mov    eax,gs
  403c9c:	in     eax,dx
  403c9d:	out    dx,eax
  403c9e:	pop    esp
  403c9f:	add    DWORD PTR [ebx-0x7c7ca311],0xffffffb8
  403ca6:	sahf   
  403ca7:	sbb    cl,BYTE PTR [ecx]
  403ca9:	lods   eax,DWORD PTR ds:[esi]
  403caa:	test   BYTE PTR [ecx+0x7c],dh
  403cad:	out    dx,eax
  403cae:	js     0x403cae
  403cb0:	(bad)  
  403cb1:	mov    WORD PTR [eax-0x45f3640f],?
  403cb7:	aaa    
  403cb8:	dec    eax
  403cb9:	les    edx,FWORD PTR [esi+ebp*8-0x5209fd1e]
  403cc0:	cmp    BYTE PTR [ebp-0x5f],cl
  403cc3:	inc    ecx
  403cc4:	and    ah,dh
  403cc6:	inc    ebp
  403cc7:	popf   
  403cc8:	jns    0x403d44
  403cca:	sahf   
  403ccb:	imul   ebx,DWORD PTR [ebx+0x7b651897],0x5d22daf0
  403cd5:	(bad)  
  403cd6:	push   es
  403cd7:	inc    edx
  403cd8:	int3   
  403cd9:	mov    al,dh
  403cdb:	cdq    
  403cdc:	rol    DWORD PTR [edi+0x26],1
  403cdf:	mov    eax,0x8e2b876c
  403ce4:	mov    bh,0xd6
  403ce6:	xor    BYTE PTR [edi],cl
  403ce8:	ins    BYTE PTR es:[edi],dx
  403ce9:	call   DWORD PTR [edx+0x627082ed]
  403cef:	(bad)  
  403cf1:	(bad)  
  403cf2:	dec    edx
  403cf3:	or     dh,BYTE PTR [esi+0x67]
  403cf6:	shl    DWORD PTR [edi+0x3b],1
  403cf9:	jg     0x403cea
  403cfb:	stos   DWORD PTR es:[edi],eax
  403cfc:	xchg   esi,eax
  403cfd:	mov    ds:0x2b209d23,eax
  403d02:	cmp    BYTE PTR [esi-0x45266a95],bl
  403d08:	inc    esi
  403d09:	mov    WORD PTR [ecx+0x2e],?
  403d0c:	andnps xmm6,xmm3
  403d0f:	mov    ebx,0x780b316a
  403d14:	je     0x403d05
  403d16:	xor    al,BYTE PTR [ebx+0x10]
  403d19:	mov    ds:0xe0dc2683,al
  403d1e:	cmp    BYTE PTR [ecx+0x5a],bl
  403d21:	add    edx,ecx
  403d23:	jp     0x403cd0
  403d25:	outs   dx,BYTE PTR ds:[esi]
  403d26:	imul   ecx,DWORD PTR [eax-0x2afeee52],0x11
  403d2d:	test   eax,0x2c4208c
  403d32:	sbb    esp,DWORD PTR [ebp+0x123c94c1]
  403d38:	xor    eax,0xcbd3a9ee
  403d3d:	pop    esi
  403d3e:	frstor [edx]
  403d40:	sti    
  403d41:	jecxz  0x403da6
  403d43:	out    0x8e,al
  403d45:	or     al,0xf8
  403d47:	inc    ebp
  403d48:	nop
  403d49:	cmp    ah,cl
  403d4b:	aaa    
  403d4c:	and    al,0x93
  403d4e:	std    
  403d4f:	mov    al,0x3d
  403d51:	(bad)  
  403d52:	popf   
  403d53:	in     al,dx
  403d54:	ins    BYTE PTR es:[edi],dx
  403d55:	sbb    eax,0xae8c5d44
  403d5a:	or     BYTE PTR [ebx],dl
  403d5c:	jmp    0x403da5
  403d5e:	dec    ecx
  403d5f:	inc    ebp
  403d60:	or     eax,0x73976ba5
  403d65:	xchg   esp,eax
  403d66:	popa   
  403d67:	(bad)  
  403d68:	xor    eax,0x5940e6ac
  403d6d:	test   eax,0xa8398fb0
  403d72:	bound  edi,QWORD PTR [eax+0x5477db8a]
  403d78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d79:	pop    ebx
  403d7a:	inc    eax
  403d7b:	lock aad 0x14
  403d7e:	jno    0x403d25
  403d80:	std    
  403d81:	dec    edx
  403d82:	dec    ebx
  403d83:	adc    al,0x38
  403d85:	xor    esp,DWORD PTR [edi+0x44a7129]
  403d8b:	lock test edi,ebx
  403d8e:	dec    ebp
  403d8f:	mov    esp,0xbaa331cc
  403d94:	rcr    BYTE PTR [eax],1
  403d96:	ror    BYTE PTR [esp+esi*4-0x52c33a98],0xc2
  403d9e:	cmp    ah,al
  403da0:	sub    DWORD PTR [eax-0xd],0xf
  403da4:	mov    ecx,0x37b61dc1
  403da9:	popa   
  403daa:	adc    esi,DWORD PTR [eax+0x57b9b038]
  403db0:	sbb    eax,0x59596edb
  403db5:	and    al,0x65
  403db7:	outs   dx,DWORD PTR ds:[esi]
  403db8:	loop   0x403e02
  403dba:	jne    0x403db5
  403dbc:	add    cl,dh
  403dbe:	lea    eax,[eax]
  403dc0:	pop    edi
  403dc1:	test   DWORD PTR ds:0x4ebf6c4d,ebx
  403dc7:	sub    DWORD PTR [ecx-0x2652a9ba],edx
  403dcd:	mov    eax,ds:0xc2195552
  403dd2:	mov    ecx,0x9a4a11ff
  403dd7:	hlt    
  403dd8:	xchg   esp,eax
  403dd9:	inc    ebx
  403dda:	pop    eax
  403ddb:	icebp  
  403ddc:	arpl   WORD PTR [ebp+0x653fd971],dx
  403de2:	(bad)  
  403de3:	dec    edx
  403de4:	scas   al,BYTE PTR es:[edi]
  403de5:	jmp    0x403d81
  403de7:	mov    dh,0x90
  403de9:	int    0x55
  403deb:	jl     0x403db4
  403ded:	lods   al,BYTE PTR ds:[esi]
  403dee:	jb     0x403e1d
  403df0:	jg     0x403df7
  403df2:	retf   0x9524
  403df5:	leave  
  403df6:	mov    ds:0x8255ad6b,al
  403dfb:	inc    eax
  403dfc:	push   edi
  403dfd:	(bad)  
  403dfe:	jmp    0x403d9a
  403e00:	mov    ah,0xe8
  403e02:	pop    edi
  403e03:	xor    al,0x74
  403e05:	add    al,0xc7
  403e07:	adc    DWORD PTR [esp+eiz*2-0x5a8b0dfe],esp
  403e0e:	dec    eax
  403e0f:	lea    esp,ds:0x7a0a88b0
  403e15:	pop    ebx
  403e16:	adc    eax,0xeae3f06b
  403e1b:	scas   al,BYTE PTR es:[edi]
  403e1c:	dec    edi
  403e1d:	add    DWORD PTR [ebp-0x7269d0d6],esp
  403e23:	fidivr WORD PTR [ebp-0x33]
  403e26:	mov    dh,0xb6
  403e28:	test   al,0xc2
  403e2a:	pop    esp
  403e2b:	retf   0x8193
  403e2e:	mov    ah,0xb5
  403e30:	popf   
  403e31:	dec    ebp
  403e32:	xor    al,0x2b
  403e34:	xor    DWORD PTR [eax],esi
  403e36:	sub    edi,edx
  403e38:	adc    DWORD PTR [eax],0x8d6d22ea
  403e3e:	in     al,0xdb
  403e40:	loop   0x403e6b
  403e42:	add    eax,0x93c6ee7
  403e47:	jbe    0x403df9
  403e49:	mov    ah,0xd7
  403e4b:	jg     0x403ec9
  403e4d:	stos   DWORD PTR es:[edi],eax
  403e4e:	enter  0x4c79,0x22
  403e52:	mov    ecx,0xc12748cf
  403e57:	clc    
  403e58:	in     al,0x8
  403e5a:	cmp    DWORD PTR [ebp+0x35],ecx
  403e5d:	inc    ebp
  403e5e:	ins    DWORD PTR es:[edi],dx
  403e5f:	cmp    edx,ecx
  403e61:	mov    al,ds:0xfdc3be50
  403e66:	dec    ebx
  403e67:	adc    edi,DWORD PTR ss:[edi-0x77]
  403e6b:	fs jbe 0x403dfb
  403e6e:	lock ja 0x403e52
  403e71:	ds inc ebx
  403e73:	and    al,0xa
  403e75:	xchg   esp,eax
  403e76:	int3   
  403e77:	das    
  403e78:	in     eax,dx
  403e79:	jne    0x403e3c
  403e7b:	sub    DWORD PTR [eax-0x7e4200ce],esi
  403e81:	and    DWORD PTR [ebp+edi*8+0x50],ecx
  403e85:	mul    BYTE PTR [ebp+0x11]
  403e88:	mov    al,0x9f
  403e8a:	int3   
  403e8b:	mov    gs,WORD PTR [edi+0x2]
  403e8e:	fdivr  QWORD PTR [esi]
  403e90:	stos   DWORD PTR es:[edi],eax
  403e91:	cmp    ch,BYTE PTR [ebp-0x8d379]
  403e97:	xchg   edi,ebx
  403e99:	sbb    DWORD PTR [esi],ebx
  403e9b:	jmp    0x34ffcd84
  403ea0:	ds sub al,0x2d
  403ea3:	mov    bl,0x0
  403ea5:	adc    BYTE PTR [ecx],0xf1
  403ea8:	adc    al,0xe9
  403eaa:	mov    ah,0x3b
  403eac:	pop    esi
  403ead:	sbb    BYTE PTR [edi+ebp*2-0x51b4781],0x29
  403eb5:	push   esp
  403eb6:	arpl   WORD PTR [ebp+0x17],ax
  403eb9:	pop    ss
  403eba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ebb:	fld    DWORD PTR [esi]
  403ebd:	mov    ch,0x56
  403ebf:	ror    esi,cl
  403ec1:	mov    al,ds:0xe2b4351a
  403ec6:	shl    BYTE PTR [eax-0x26b4bdb3],cl
  403ecc:	sbb    esi,ebx
  403ece:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ecf:	sub    BYTE PTR [edi-0x41],0x95
  403ed3:	sub    eax,0xc5f6ac06
  403ed8:	cmp    dh,BYTE PTR [eax+ebx*4]
  403edb:	push   cs
  403edc:	ja     0x403f45
  403ede:	(bad)
  403ee1:	stc    
  403ee2:	sar    bl,cl
  403ee4:	dec    ebx
  403ee5:	dec    edx
  403ee6:	bound  esp,QWORD PTR [ebx+0x4d]
  403ee9:	cmp    eax,0x1a59d56f
  403eee:	mov    edi,0xa2f3b996
  403ef3:	adc    bh,ah
  403ef5:	and    eax,0xff77011b
  403efa:	lea    esi,[esi-0x2f]
  403efd:	fstp   TBYTE PTR ds:0xf339d415
  403f03:	shr    DWORD PTR [esi+0x2f],1
  403f06:	xor    bh,BYTE PTR [eax+0x58]
  403f09:	pop    edx
  403f0a:	aaa    
  403f0b:	mov    dh,0xa5
  403f0d:	push   ds
  403f0e:	jge    0x403f67
  403f10:	test   eax,0xfeb165bc
  403f15:	jmp    0xd3c7:0xa356ec64
  403f1c:	sub    ebp,DWORD PTR [eax-0x743d2821]
  403f22:	sti    
  403f23:	add    DWORD PTR [edi+edx*8+0x5b],esp
  403f27:	test   esp,0xad1dd403
  403f2d:	das    
  403f2e:	pop    ecx
  403f2f:	inc    edx
  403f30:	bound  ecx,QWORD PTR [ebx-0x1f]
  403f33:	dec    esp
  403f34:	mov    ds:0xfbd44fe0,eax
  403f39:	hlt    
  403f3a:	mov    ds:0x3ae493a,al
  403f3f:	shl    DWORD PTR [ebp-0x2b],cl
  403f42:	cmp    DWORD PTR [edx+0xfdd389b],edi
  403f48:	pop    esp
  403f49:	push   edx
  403f4a:	bound  ecx,QWORD PTR [ebx+0x3e495d73]
  403f50:	jle    0x403f75
  403f52:	dec    edx
  403f53:	stos   BYTE PTR es:[edi],al
  403f54:	cwde   
  403f55:	dec    ebp
  403f56:	mov    edi,0x68774585
  403f5b:	inc    ebx
  403f5c:	(bad)  
  403f5d:	cmp    bl,BYTE PTR [esi-0x1cb2ae84]
  403f63:	std    
  403f64:	sbb    cl,BYTE PTR [esi+0x4df74c68]
  403f6a:	in     eax,dx
  403f6b:	xor    eax,0xfc75130f
  403f70:	ins    DWORD PTR es:[edi],dx
  403f71:	dec    ecx
  403f72:	loopne 0x403fc2
  403f74:	jmp    0xd1e1c2de
  403f79:	mov    cl,0xc2
  403f7b:	fimul  WORD PTR [edx+0x4c]
  403f7e:	inc    edi
  403f7f:	mov    ebp,DWORD PTR [eax-0x48]
  403f82:	xor    eax,0x4c2285b0
  403f87:	push   ss
  403f88:	int3   
  403f89:	sub    DWORD PTR [eax-0x55386056],edx
  403f8f:	out    0x62,eax
  403f91:	mov    ch,0xd
  403f93:	mov    cs,ecx
  403f95:	push   0xc2d0851d
  403f9a:	lahf   
  403f9b:	add    al,0x62
  403f9d:	fld    DWORD PTR [ebx+0x6c]
  403fa0:	outs   dx,DWORD PTR ds:[esi]
  403fa1:	or     edi,DWORD PTR [edi+0x66173667]
  403fa7:	adc    DWORD PTR [esi-0x4db0e741],esp
  403fad:	mov    eax,0x274ccdbd
  403fb2:	es jbe 0x403fb2
  403fb5:	lock sar esi,cl
  403fb8:	jp     0x40402e
  403fba:	xchg   BYTE PTR [edi+0x50],bh
  403fbd:	ds and eax,0x1ce131f2
  403fc3:	push   ds
  403fc4:	sbb    eax,0xab86b576
  403fc9:	sti    
  403fca:	and    DWORD PTR [ebx+ebp*4+0x56eac0dc],esi
  403fd1:	dec    esp
  403fd2:	mov    edx,0x25cc17b3
  403fd7:	sbb    al,BYTE PTR [esi+esi*8-0x74df0115]
  403fde:	adc    al,0xbc
  403fe0:	jno    0x403f65
  403fe2:	pop    esp
  403fe3:	fdivr  DWORD PTR [ebp+ecx*8-0x80]
  403fe7:	loope  0x403ffb
  403fe9:	addr16 jne 0x40401e
  403fec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fed:	or     al,0x7d
  403fef:	hlt    
  403ff0:	mov    eax,ds:0x6948e5df
  403ff5:	jmp    0xb58d3d41
  403ffa:	ret    
  403ffb:	loope  0x40404a
  403ffd:	(bad)  
  403ffe:	jmp    0x99d02784
  404003:	mov    al,0x11
  404005:	xor    DWORD PTR [esi+0x59],eax
  404008:	add    BYTE PTR [ecx+0x4630bd38],0x47
  40400f:	pop    ss
  404010:	fidivr DWORD PTR [eax+eax*4-0x3dbe7e12]
  404017:	add    dl,BYTE PTR [ebp-0x2b143209]
  40401d:	mov    dl,0xab
  40401f:	push   0x58
  404021:	(bad)  [edi+edx*8]
  404024:	popa   
  404025:	pop    edi
  404026:	cmc    
  404027:	pop    ebx
  404028:	addr16 fs add bl,cl
  40402c:	ret    0x6845
  40402f:	ds jmp 0xd61bd6b7
  404035:	das    
  404036:	mov    edx,DWORD PTR [ebp+0x787957c0]
  40403c:	popf   
  40403d:	push   ds
  40403e:	jb     0x404084
  404040:	shl    BYTE PTR [eax],1
  404042:	add    eax,0x50d19cd1
  404047:	lock lods eax,DWORD PTR ds:[esi]
  404049:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40404b:	(bad)  
  40404c:	push   ds
  40404d:	add    BYTE PTR [ebp-0x67],0xb4
  404051:	fild   QWORD PTR [ebx-0x80]
  404054:	push   cs
  404055:	shl    DWORD PTR [esi],cl
  404057:	(bad)  
  404058:	loop   0x404068
  40405a:	mov    ds:0xf85c9046,al
  40405f:	or     ebp,DWORD PTR [esi]
  404061:	adc    DWORD PTR [esi+ecx*8-0x224e19cd],0xffffffa9
  404069:	or     DWORD PTR [ebx+0x26],0xffffffa9
  40406d:	out    dx,al
  40406e:	jno    0x404046
  404070:	adc    al,0x7b
  404072:	mov    edi,0xbf3732b0
  404077:	or     BYTE PTR [esp+eax*1-0x50],dl
  40407b:	sbb    ebp,esi
  40407d:	cld    
  40407e:	push   eax
  40407f:	xor    eax,0x5f83af38
  404084:	and    eax,edi
  404086:	mov    eax,gs
  404088:	push   es
  404089:	ins    BYTE PTR es:[edi],dx
  40408a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40408b:	xchg   esp,eax
  40408c:	add    BYTE PTR [edi+0x9f08576],bl
  404092:	cli    
  404093:	push   ecx
  404094:	inc    edi
  404095:	lea    ecx,[esi+0xce819db]
  40409b:	sbb    eax,0x7cc5c80
  4040a0:	scas   al,BYTE PTR es:[edi]
  4040a1:	mov    al,0x4f
  4040a3:	push   ecx
  4040a4:	repnz inc ebx
  4040a6:	test   al,0x15
  4040a8:	push   cs
  4040a9:	sar    dh,cl
  4040ab:	call   FWORD PTR [esi-0x7df86121]
  4040b1:	hlt    
  4040b2:	xor    edx,DWORD PTR [ecx+eiz*1]
  4040b5:	mov    ch,BYTE PTR [eax+0x6]
  4040b8:	push   ds
  4040b9:	es pop edx
  4040bb:	pop    ebx
  4040bc:	or     al,0xf4
  4040be:	push   ds
  4040bf:	mov    edi,0xc2b9dcda
  4040c4:	rcl    DWORD PTR [esi],cl
  4040c6:	push   esi
  4040c7:	or     al,0xe5
  4040c9:	fdivr  DWORD PTR [eax]
  4040cb:	add    DWORD PTR [ecx],esp
  4040cd:	jno    0x40414e
  4040cf:	in     eax,0xde
  4040d1:	pop    edi
  4040d2:	scas   eax,DWORD PTR es:[edi]
  4040d3:	adc    al,0x4a
  4040d5:	inc    ebx
  4040d6:	and    al,0xdb
  4040d8:	push   ss
  4040d9:	in     al,0x11
  4040db:	es jmp 0x7809:0x1b73e609
  4040e3:	outs   dx,BYTE PTR ds:[esi]
  4040e4:	pop    ebp
  4040e5:	xchg   ebx,eax
  4040e6:	fdiv   DWORD PTR ds:[esi+eiz*4+0x6b]
  4040eb:	ss push ebx
  4040ed:	ja     0x40408d
  4040ef:	cmp    ebx,ebx
  4040f1:	and    ch,BYTE PTR [edx+eax*8]
  4040f4:	xchg   esp,eax
  4040f5:	push   esi
  4040f6:	les    ecx,FWORD PTR [eax]
  4040f8:	imul   edi,ecx,0x2f
  4040fb:	and    bl,ch
  4040fd:	int    0x71
  4040ff:	shr    DWORD PTR [edi+0x13050b18],1
  404105:	ins    BYTE PTR es:[edi],dx
  404106:	xchg   esp,eax
  404107:	cmove  esp,DWORD PTR [ecx+edx*8+0x62]
  40410c:	gs mov esi,0x242e4649
  404112:	pop    eax
  404113:	sbb    edx,ecx
  404115:	and    BYTE PTR [ecx+ebp*4],ch
  404118:	mov    ebp,0xe501590e
  40411d:	xor    DWORD PTR [ebx],ebx
  40411f:	push   esp
  404120:	js     0x40416a
  404122:	jnp    0x40419b
  404124:	repz mov ds:0x2bfbb70f,al
  40412a:	pushf  
  40412b:	jmp    0x4041a2
  40412d:	pop    eax
  40412e:	stos   BYTE PTR es:[edi],al
  40412f:	iret   
  404130:	das    
  404131:	push   0xe51cdaf4
  404136:	push   edx
  404137:	test   BYTE PTR [edi+eiz*8-0x7de6f196],bh
  40413e:	lahf   
  40413f:	out    dx,al
  404140:	cli    
  404141:	mov    ?,WORD PTR [eax-0x2c338ea3]
  404147:	sub    bl,cl
  404149:	ins    BYTE PTR es:[edi],dx
  40414a:	cmp    DWORD PTR [ecx+0x16],edi
  40414d:	cmp    al,0x85
  404150:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404151:	lods   eax,DWORD PTR ds:[esi]
  404152:	push   eax
  404153:	xor    bl,BYTE PTR [edx]
  404155:	arpl   bx,si
  404157:	rcl    DWORD PTR [ebp+0x0],cl
  40415a:	mov    cl,0x93
  40415c:	test   BYTE PTR [edx],ch
  40415e:	into   
  40415f:	adc    al,0xa7
  404161:	lea    ebp,[eax]
  404163:	mov    ah,bl
  404165:	ret    
  404166:	sbb    ch,bh
  404168:	add    BYTE PTR [esi+0x4e],ah
  40416b:	push   0x76974e08
  404170:	pop    eax
  404171:	mov    al,ds:0xdc60b7d9
  404176:	cdq    
  404177:	out    0xbe,al
  404179:	or     al,0xb8
  40417b:	pop    eax
  40417c:	cld    
  40417d:	rcl    BYTE PTR [ecx+0x81f333b],cl
  404183:	jae    0x4041b7
  404185:	adc    esp,DWORD PTR [ebx-0x71350ac1]
  40418b:	push   edi
  40418c:	mov    cl,0xb
  40418e:	les    ecx,FWORD PTR [ecx-0x565a2a7d]
  404194:	rol    BYTE PTR [eax+0x4a720ee],cl
  40419a:	sbb    BYTE PTR [edi-0x5],ch
  40419d:	into   
  40419e:	sbb    al,0x25
  4041a0:	es dec ecx
  4041a2:	cmc    
  4041a3:	jno    0x40414b
  4041a5:	inc    ebp
  4041a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041a7:	dec    esp
  4041a8:	shl    DWORD PTR [eax-0x5d7d91ab],1
  4041ae:	mov    edx,0xf804892d
  4041b3:	dec    ecx
  4041b4:	ins    BYTE PTR es:[edi],dx
  4041b5:	mov    DWORD PTR [esp+esi*2-0x7bf2b6f2],esp
  4041bc:	add    DWORD PTR [edx+0x67],eax
  4041bf:	mov    BYTE PTR [edx],ah
  4041c1:	(bad)  
  4041c2:	stc    
  4041c3:	jo     0x40414c
  4041c5:	imul   dh
  4041c7:	ss lock xchg ebp,eax
  4041ca:	repnz aas 
  4041cc:	frstor [esi+ecx*1-0x71]
  4041d0:	int    0x4f
  4041d2:	stos   DWORD PTR es:[edi],eax
  4041d3:	fsubr  QWORD PTR [ebp-0x46]
  4041d6:	ins    BYTE PTR es:[edi],dx
  4041d7:	xchg   esp,eax
  4041d8:	dec    eax
  4041d9:	cmp    DWORD PTR [ecx+0x1b5c621d],esp
  4041df:	jl     0x4041af
  4041e1:	jge    0x4041b5
  4041e3:	sahf   
  4041e4:	dec    ebx
  4041e5:	sub    edx,ebx
  4041e7:	(bad)  
  4041e9:	inc    ecx
  4041ea:	sbb    BYTE PTR [esi],0x11
  4041ed:	or     BYTE PTR [ebx-0x32],0xcf
  4041f1:	jge    0x404221
  4041f3:	xor    ebp,DWORD PTR [ebp+0x343bff32]
  4041f9:	pusha  
  4041fa:	aaa    
  4041fb:	xor    dl,cl
  4041fd:	jle    0x404274
  4041ff:	push   esp
  404200:	shr    BYTE PTR [edi+eiz*4-0x74],0x4e
  404205:	or     edx,DWORD PTR ds:[eax-0x323a57f7]
  40420c:	sbb    eax,0x1f2b3cfb
  404211:	mov    edi,0x85a5807f
  404216:	stc    
  404217:	adc    eax,0xfa1ce0b4
  40421c:	pop    esi
  40421d:	dec    eax
  40421e:	sub    BYTE PTR [eax],ah
  404220:	sub    eax,0xd034b184
  404225:	dec    ecx
  404226:	xchg   edi,eax
  404227:	rcr    BYTE PTR [ebx-0x66],1
  40422a:	loope  0x4041b9
  40422c:	sbb    DWORD PTR [edx-0x5a8bcfcc],esp
  404232:	add    bl,ch
  404234:	pop    ebp
  404235:	jns    0x404290
  404237:	retf   0xf760
  40423a:	jge    0x4041e0
  40423c:	addr16 sar ch,cl
  40423f:	and    bh,dh
  404241:	pop    edi
  404242:	ins    DWORD PTR es:[edi],dx
  404243:	mov    eax,0x4e6b6693
  404248:	add    ebx,eax
  40424a:	sbb    esp,esi
  40424c:	lock shl bl,cl
  40424f:	sub    edi,DWORD PTR [ebp+0x71]
  404252:	or     BYTE PTR [edi+ecx*2-0x4b],cl
  404256:	xchg   ebx,ebx
  404258:	test   DWORD PTR [esi],esi
  40425a:	fdiv   QWORD PTR [esi]
  40425c:	inc    edx
  40425d:	push   ebx
  40425e:	cmc    
  40425f:	mov    edx,0x404b6be9
  404264:	xchg   esp,eax
  404265:	outs   dx,DWORD PTR ds:[esi]
  404266:	xlat   BYTE PTR ds:[ebx]
  404267:	sub    ebx,esp
  404269:	pop    ecx
  40426a:	lds    ebp,FWORD PTR [ebx-0x72]
  40426d:	push   edi
  40426e:	mov    ebx,0xecf2fbf7
  404273:	push   eax
  404274:	push   0xffffffa2
  404276:	xchg   esi,eax
  404277:	pop    edx
  404278:	stos   BYTE PTR es:[edi],al
  404279:	jmp    0x8c1ee649
  40427e:	les    eax,FWORD PTR [ecx+eax*2]
  404281:	mov    cl,0x1c
  404283:	scas   eax,DWORD PTR es:[edi]
  404284:	jmp    0x7071:0xc39ea90d
  40428b:	cmp    al,0x7f
  40428d:	mov    esi,0x4d2243e0
  404292:	dec    esi
  404293:	mov    esp,0x7720924c
  404298:	pop    esi
  404299:	xchg   ebx,eax
  40429a:	arpl   ax,cx
  40429c:	cs jo  0x404247
  40429f:	sub    ecx,ecx
  4042a1:	xor    eax,0x150a308b
  4042a6:	cmp    al,0xc6
  4042a8:	xchg   esp,eax
  4042a9:	sbb    cl,BYTE PTR [ebx-0x20]
  4042ac:	sub    eax,0xe18b53cf
  4042b1:	fisttp DWORD PTR [edi+0x2c3cdfa7]
  4042b7:	mov    cl,0x4f
  4042b9:	sub    eax,0x9af57bcf
  4042be:	push   cs
  4042bf:	mov    BYTE PTR [esi+ebx*8+0x75],ch
  4042c3:	imul   ebx,DWORD PTR [esi+0x1c],0x3c
  4042c7:	xchg   esi,eax
  4042c8:	cmp    DWORD PTR [ebx+0xd],0x91ecbee5
  4042cf:	and    DWORD PTR [eax],esi
  4042d1:	add    dl,bl
  4042d3:	jae    0x40426a
  4042d5:	je     0x404298
  4042d7:	dec    ebp
  4042d8:	pop    ss
  4042d9:	popa   
  4042da:	lods   al,BYTE PTR ds:[esi]
  4042db:	loope  0x404332
  4042dd:	test   al,0xe8
  4042df:	ins    WORD PTR es:[edi],dx
  4042e1:	xchg   ecx,eax
  4042e2:	or     BYTE PTR [esi+0x54],0x31
  4042e6:	mov    bh,0xd4
  4042e8:	mov    ebx,0xbeb001b3
  4042ed:	dec    esp
  4042ee:	mov    al,ds:0x2281f731
  4042f3:	fst    DWORD PTR [ecx]
  4042f5:	mov    bh,0xde
  4042f7:	pop    esi
  4042f8:	jbe    0x404304
  4042fa:	and    al,0x55
  4042fc:	jle    0x404357
  4042fe:	pop    edi
  4042ff:	dec    esi
  404300:	je     0x40429f
  404302:	ret    0x37bc
  404305:	sub    ebp,esi
  404307:	or     BYTE PTR [eax],bl
  404309:	pop    edx
  40430a:	xor    DWORD PTR [edi+0x67],eax
  40430d:	or     BYTE PTR [esi],0x9e
  404310:	icebp  
  404311:	adc    BYTE PTR [esi+ebx*4+0x4610115e],0xb3
  404319:	mov    esp,DWORD PTR ds:0xa27b1785
  40431f:	or     al,0x54
  404321:	fsubr  QWORD PTR [ecx-0x6c]
  404324:	ins    BYTE PTR es:[edi],dx
  404325:	push   0x489bacd5
  40432a:	out    0xf4,eax
  40432c:	test   eax,0xe4b94441
  404331:	mov    edx,0x85a6164a
  404336:	mov    WORD PTR [ebx-0xa1ed580],?
  40433c:	je     0x404368
  40433e:	mov    esi,0x7b3fcccc
  404343:	(bad)  
  404344:	aam    0x87
  404346:	push   esp
  404347:	mov    ebp,0x16c3647f
  40434c:	lock xchg esp,eax
  40434e:	ds lahf 
  404350:	fmul   QWORD PTR [esi+ebp*4-0x68]
  404354:	and    DWORD PTR [eax-0x44],0x4f
  404358:	mov    cl,0x5d
  40435a:	scas   eax,DWORD PTR es:[edi]
  40435b:	mov    ebp,0xac4f6d01
  404360:	jp     0x4043c7
  404362:	es pop eax
  404364:	dec    esp
  404365:	jae    0x40435e
  404367:	pop    DWORD PTR [ebp-0x2e]
  40436a:	imul   eax,DWORD PTR [eax+0x19f2297c],0xffffff94
  404371:	fstp   TBYTE PTR [ecx]
  404373:	pop    esi
  404374:	adc    DWORD PTR [edi-0x66],0x53
  404378:	scas   eax,DWORD PTR es:[edi]
  404379:	mov    ds:0x3d8adb77,al
  40437e:	jecxz  0x4043db
  404380:	adc    ebx,edx
  404382:	mov    edx,DWORD PTR [ebx+0x59a51493]
  404388:	enter  0xe599,0x8e
  40438c:	(bad)  [ecx+0x45095ef5]
  404392:	push   edi
  404393:	pop    eax
  404394:	lahf   
  404395:	out    dx,eax
  404396:	aad    0x94
  404398:	div    DWORD PTR [eax-0x2cce1342]
  40439e:	mov    al,0x6f
  4043a0:	adc    eax,0xf78cd07d
  4043a5:	pop    ebp
  4043a6:	(bad)  
  4043a8:	retf   
  4043a9:	jne    0x4043d3
  4043ab:	popf   
  4043ac:	inc    ebp
  4043ad:	cmp    al,0xb9
  4043af:	ins    DWORD PTR es:[edi],dx
  4043b0:	dec    edi
  4043b1:	sar    DWORD PTR [edi+0x6965ef2f],1
  4043b7:	push   es
  4043b8:	add    cl,BYTE PTR [ebp-0x4b]
  4043bb:	or     al,0x95
  4043bd:	cmp    ebp,DWORD PTR [ebx-0x44d1aff3]
  4043c3:	sub    eax,0x262b4180
  4043c8:	jbe    0x40438c
  4043ca:	mov    BYTE PTR [ebx+0x54527997],bl
  4043d0:	outs   dx,BYTE PTR ds:[esi]
  4043d1:	retf   0x85a6
  4043d4:	mul    DWORD PTR [bx+di+0x4803]
  4043d9:	addr16 mov dh,0x1d
  4043dc:	pop    esi
  4043dd:	mov    cl,0x27
  4043df:	dec    ecx
  4043e0:	test   al,0xfc
  4043e2:	xchg   BYTE PTR [eax],ah
  4043e4:	or     al,0xfe
  4043e6:	xchg   ebx,eax
  4043e7:	out    0x31,al
  4043e9:	hlt    
  4043ea:	fs sbb eax,0x11ee898e
  4043f0:	lahf   
  4043f1:	sub    edx,ebx
  4043f3:	sub    dh,BYTE PTR [ebp+0x305af6e4]
  4043f9:	sub    DWORD PTR [esi],0x34e3f5d9
  4043ff:	push   es
  404400:	cmp    eax,0xbc0f15d3
  404405:	repz mov eax,0xe4553f73
  40440b:	in     eax,0xfa
  40440d:	cmp    BYTE PTR [eax+0x37],0x6c
  404411:	mov    ebx,0xe5a146c3
  404416:	push   ss
  404417:	dec    esi
  404418:	nop
  404419:	sub    ah,BYTE PTR [esi]
  40441b:	fidivr DWORD PTR [ebx+0x2b]
  40441e:	pop    es
  40441f:	into   
  404420:	dec    ebx
  404421:	mov    ah,0x64
  404423:	dec    ebx
  404424:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404425:	stos   DWORD PTR es:[edi],eax
  404426:	add    al,0xac
  404428:	sub    al,0xcd
  40442a:	jb     0x4043b1
  40442c:	xchg   ecx,eax
  40442d:	jmp    0xdf9cf4d7
  404432:	mov    ds:0xdf664b78,eax
  404437:	sbb    BYTE PTR [ebx],bl
  404439:	push   ebp
  40443a:	jne    0x4043bf
  40443c:	dec    esi
  40443d:	xor    BYTE PTR [eax-0x15],dl
  404440:	push   ds
  404441:	add    BYTE PTR [esi],bh
  404443:	test   al,0xd7
  404445:	sahf   
  404446:	stos   DWORD PTR es:[edi],eax
  404447:	test   al,0xf0
  404449:	jmp    FWORD PTR [edx]
  40444b:	mov    BYTE PTR [edi],ah
  40444d:	add    al,0xb4
  40444f:	dec    esp
  404450:	dec    ecx
  404451:	jmp    0xa6ad:0xb163890a
  404458:	jns    0x4043e9
  40445a:	div    ch
  40445c:	mov    ebp,0x1696865e
  404461:	repnz push 0xffffffb9
  404464:	dec    ebx
  404465:	repz or al,0x8e
  404468:	sar    edx,cl
  40446a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40446b:	push   edi
  40446c:	mov    ?,WORD PTR ss:[ecx-0x25]
  404470:	push   esi
  404471:	aaa    
  404472:	add    eax,0xcc369f16
  404477:	cdq    
  404478:	inc    edx
  404479:	or     al,ah
  40447b:	out    0x1a,al
  40447d:	jg     0x404409
  40447f:	mov    dl,0xc5
  404481:	mov    dl,0x91
  404483:	add    DWORD PTR [ecx-0x44],0xe04755a7
  40448a:	mov    eax,0x906ff2aa
  40448f:	sub    eax,0x6b8d3c4d
  404494:	fsub   QWORD PTR [ecx-0x24]
  404497:	mov    cl,0xc6
  404499:	inc    ebx
  40449a:	dec    ebp
  40449b:	push   ss
  40449c:	sbb    esp,DWORD PTR [ebx-0x79]
  40449f:	in     eax,dx
  4044a0:	sar    dl,1
  4044a2:	dec    esp
  4044a3:	int    0xcc
  4044a5:	push   0xcee8a8d2
  4044aa:	loop   0x404497
  4044ac:	push   esp
  4044ad:	mov    eax,0x4b93de10
  4044b2:	shl    DWORD PTR [edi-0x5b],0xcc
  4044b6:	sub    ecx,DWORD PTR [ecx+ebx*8+0x2d]
  4044ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044bb:	fdiv   st(4),st
  4044bd:	push   ds
  4044be:	arpl   WORD PTR [edx],ax
  4044c0:	sahf   
  4044c1:	or     al,BYTE PTR [edi]
  4044c3:	fsubr  st(5),st
  4044c5:	stos   DWORD PTR es:[edi],eax
  4044c6:	outs   dx,BYTE PTR ds:[esi]
  4044c7:	call   0x3c47:0x5137c60a
  4044ce:	shl    DWORD PTR [edi],cl
  4044d0:	daa    
  4044d1:	xchg   ecx,eax
  4044d2:	pop    ss
  4044d3:	mov    al,ds:0xbf1aa203
  4044d8:	ins    DWORD PTR es:[edi],dx
  4044d9:	nop
  4044da:	lea    esp,[eax+edi*1-0x39]
  4044de:	inc    ebp
  4044df:	out    0x91,eax
  4044e1:	add    edi,DWORD PTR [ebp-0x80]
  4044e4:	(bad)  
  4044e5:	mul    ch
  4044e7:	xchg   BYTE PTR [ecx+0x60],bh
  4044ea:	daa    
  4044eb:	pop    ss
  4044ec:	jbe    0x404498
  4044ee:	js     0x4044fb
  4044f0:	sbb    ebx,DWORD PTR [eax+0x36]
  4044f3:	inc    eax
  4044f4:	sub    al,0x8
  4044f6:	push   es
  4044f7:	cld    
  4044f8:	aad    0xea
  4044fa:	add    ch,BYTE PTR [edx]
  4044fc:	add    bh,0x80
  4044ff:	gs jnp 0x404562
  404502:	xchg   edx,eax
  404503:	fisttp DWORD PTR [ecx-0x5a5dcf6f]
  404509:	mov    es:0x118a7c02,eax
  40450f:	push   ebx
  404510:	imul   ebp,DWORD PTR [esi+0x46fa86b5],0x59e481da
  40451a:	aas    
  40451b:	sbb    esi,DWORD PTR [eax+esi*1]
  40451e:	test   DWORD PTR [edx+0x6978a3d3],esp
  404524:	fs mov cl,0xfa
  404527:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404528:	xor    ebx,DWORD PTR [edx]
  40452a:	sti    
  40452b:	pop    ebx
  40452c:	outs   dx,DWORD PTR ds:[esi]
  40452d:	push   cs
  40452e:	adc    al,ch
  404530:	xchg   edi,eax
  404531:	and    eax,0x27b8109c
  404536:	mov    edx,0xe9569404
  40453b:	mov    edi,DWORD PTR [ebp+0x66]
  40453e:	xchg   cl,bl
  404540:	push   esp
  404541:	(bad)  
  404542:	push   ecx
  404543:	scas   al,BYTE PTR es:[edi]
  404544:	jmp    0xb1fe:0x5e71ec68
  40454b:	pop    es
  40454c:	and    BYTE PTR [ecx+0x6d],bl
  40454f:	mov    esi,DWORD PTR [edx]
  404551:	imul   esp,DWORD PTR [edi],0xfffffff3
  404554:	jno    0x40452f
  404556:	rcr    DWORD PTR [edx+ecx*1+0x21],1
  40455a:	(bad)  
  40455b:	sti    
  40455c:	ret    0x8883
  40455f:	es popa 
  404561:	xlat   BYTE PTR ds:[ebx]
  404562:	dec    ebp
  404563:	push   eax
  404564:	leave  
  404565:	or     BYTE PTR [esi-0x59fbb49d],bl
  40456b:	cmp    ah,dh
  40456d:	fisubr DWORD PTR [edi-0x329c083a]
  404573:	icebp  
  404574:	push   es
  404575:	in     al,dx
  404576:	pop    ds
  404577:	rcr    bl,0xbc
  40457a:	inc    ecx
  40457b:	dec    esp
  40457c:	ret    
  40457d:	mov    bl,0x2e
  40457f:	jg     0x40453b
  404581:	cdq    
  404582:	push   cs
  404583:	cmp    BYTE PTR [esi],bh
  404585:	in     eax,dx
  404586:	mov    edi,edx
  404588:	fadd   QWORD PTR [ecx+edi*8+0x3b]
  40458c:	pop    esp
  40458d:	cli    
  40458e:	push   es
  40458f:	xchg   DWORD PTR [eax+0x4fb255f0],edi
  404595:	dec    edi
  404596:	jno    0x40453e
  404598:	pop    edx
  404599:	iret   
  40459a:	es xchg ebx,eax
  40459c:	sbb    ch,0xb8
  40459f:	enterw 0x962b,0xaf
  4045a4:	push   esi
  4045a5:	xchg   BYTE PTR [esi+ebx*2-0x47],ch
  4045a9:	jp     0x404609
  4045ab:	push   cs
  4045ac:	or     edx,DWORD PTR [edi-0x9]
  4045af:	gs test al,0xba
  4045b2:	daa    
  4045b3:	into   
  4045b4:	iret   
  4045b5:	or     al,0xb7
  4045b7:	push   es
  4045b8:	pop    esp
  4045b9:	mov    cl,BYTE PTR [ecx]
  4045bb:	xchg   ecx,eax
  4045bc:	adc    eax,DWORD PTR [esi+eiz*1]
  4045bf:	adc    BYTE PTR ds:0xed6ed28d,0x80
  4045c6:	jp     0x40460f
  4045c8:	vaddps xmm4,xmm4,XMMWORD PTR [edx]
  4045cc:	lahf   
  4045cd:	fdiv   DWORD PTR [edx-0x50]
  4045d0:	add    BYTE PTR [ecx],ch
  4045d2:	cwde   
  4045d3:	lock inc ecx
  4045d5:	cmc    
  4045d6:	data16 jno 0x4045ac
  4045d9:	mov    ebp,0xfadfb6a4
  4045de:	addr16 push 0x48b9dc35
  4045e4:	add    eax,0x1e7d5961
  4045e9:	stc    
  4045ea:	clc    
  4045eb:	mov    edx,0x8edc00d3
  4045f0:	(bad)  
  4045f1:	mov    bl,0x7c
  4045f3:	jo     0x404597
  4045f5:	fiadd  WORD PTR gs:[ecx-0x3c]
  4045f9:	aad    0xd1
  4045fb:	sbb    DWORD PTR [esi],0x89288755
  404601:	cs mov ah,0xd4
  404604:	push   edi
  404605:	fcmovne st,st(1)
  404607:	xchg   ebx,eax
  404608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404609:	xor    al,0xf7
  40460b:	aam    0xee
  40460d:	mov    WORD PTR cs:[ebx-0xc],fs
  404611:	and    ebp,edx
  404613:	sbb    ecx,esi
  404615:	mov    bl,BYTE PTR [ecx]
  404617:	aad    0x9a
  404619:	xchg   DWORD PTR [ecx+0x7a50d549],edi
  40461f:	lock sub eax,0xbf868960
  404625:	aam    0x4e
  404627:	sub    eax,0xbdd24bf3
  40462c:	ror    cl,cl
  40462e:	scas   eax,DWORD PTR es:[edi]
  40462f:	cdq    
  404630:	jl     0x4045fa
  404632:	cmp    dh,BYTE PTR [eax+ebx*2+0x32]
  404636:	jns    0x404635
  404638:	pop    ds
  404639:	idiv   BYTE PTR [ebx]
  40463b:	in     eax,0xaa
  40463d:	mov    esi,0x67bd1bbf
  404642:	xor    al,0x16
  404644:	shr    DWORD PTR [esi],0x8
  404647:	fwait
  404648:	push   0xffffff9c
  40464a:	es pusha 
  40464c:	cli    
  40464d:	adc    esp,DWORD PTR [eax+0x7df556dc]
  404653:	or     DWORD PTR [ebx-0x59e2c172],ebp
  404659:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40465a:	cld    
  40465b:	mov    ecx,0xced0e628
  404660:	or     bl,BYTE PTR [eax-0x33e16c0a]
  404666:	mov    dl,0xf3
  404668:	jno    0x404620
  40466a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40466b:	mov    ebp,0x7735f9f
  404670:	rcl    BYTE PTR [ebx],cl
  404672:	pop    esi
  404673:	and    ah,al
  404675:	mov    BYTE PTR [esi-0x3d],bh
  404678:	rcl    DWORD PTR [edi-0x4a],cl
  40467b:	es out 0xf9,eax
  40467e:	inc    ebp
  40467f:	neg    BYTE PTR [eax-0x6dc0673c]
  404685:	jne    0x404681
  404687:	hlt    
  404688:	iret   
  404689:	fild   QWORD PTR [ebp+0x1f212a63]
  40468f:	cmp    BYTE PTR [edi-0x64a3eb4c],0x3d
  404696:	pop    eax
  404697:	push   ss
  404698:	mov    edi,DWORD PTR [ebx]
  40469a:	mov    ecx,DWORD PTR [edx-0x1b]
  40469d:	pop    es
  40469e:	pop    esi
  40469f:	call   0x4ece:0x55361718
  4046a6:	out    dx,al
  4046a7:	test   DWORD PTR [ebp-0x32],0x8dbafc50
  4046ae:	jmp    0x4046b6
  4046b0:	mov    dh,0x61
  4046b2:	stos   BYTE PTR es:[edi],al
  4046b3:	les    ebx,FWORD PTR [edi-0x17]
  4046b6:	or     eax,0xa6384fd5
  4046bb:	(bad)  
  4046bc:	push   ebx
  4046bd:	out    dx,eax
  4046be:	enter  0x39f1,0xe4
  4046c2:	adc    DWORD PTR [edx-0x1737b9ba],edi
  4046c8:	stos   DWORD PTR es:[edi],eax
  4046c9:	loope  0x40466f
  4046cb:	fild   DWORD PTR [edi+0x135afafd]
  4046d1:	add    BYTE PTR [edx+0x47],0x11
  4046d5:	push   ecx
  4046d6:	sbb    eax,0x338e66d8
  4046db:	push   es
  4046dc:	push   eax
  4046dd:	jbe    0x40469a
  4046df:	add    DWORD PTR [ebx+eiz*2-0x54],eax
  4046e3:	popa   
  4046e4:	adc    DWORD PTR [eax+0x41],edx
  4046e7:	in     eax,0x3
  4046e9:	in     al,dx
  4046ea:	xchg   ebx,eax
  4046eb:	fbstp  TBYTE PTR [ebx+eax*4-0x13]
  4046ef:	mov    gs,eax
  4046f1:	pop    edx
  4046f2:	xchg   esi,eax
  4046f3:	cmc    
  4046f4:	dec    ebx
  4046f5:	xor    eax,0x9ce62ce8
  4046fa:	xor    al,0x76
  4046fc:	test   eax,0x5d510731
  404701:	stc    
  404702:	out    0x78,eax
  404704:	lahf   
  404705:	(bad)  
  404707:	loopne 0x404755
  404709:	js     0x404723
  40470b:	call   0x32b2530c
  404710:	xchg   ebp,eax
  404711:	inc    edx
  404712:	fdiv   st(3),st
  404714:	mov    BYTE PTR [edi+esi*8+0x3d],al
  404718:	or     ebp,esp
  40471a:	mov    edx,0x76fe2af9
  40471f:	pop    eax
  404720:	shl    DWORD PTR [eax+0x53],1
  404723:	xchg   esp,eax
  404724:	mov    eax,0x8e260295
  404729:	mov    DWORD PTR [esi+0x2e],0x22dc5f2a
  404730:	mov    cl,0x3b
  404732:	or     DWORD PTR [ebp-0x69],edi
  404735:	repz push eax
  404737:	aaa    
  404738:	cmp    ebx,DWORD PTR [edx]
  40473a:	adc    al,0xc5
  40473c:	inc    edx
  40473d:	mov    ah,0x14
  40473f:	add    al,0x3c
  404741:	enter  0xad45,0xa4
  404745:	(bad)  
  404747:	or     ebx,eax
  404749:	sub    al,0x1b
  40474b:	fyl2x  
  40474d:	pop    ebx
  40474e:	add    bl,BYTE PTR [esi+edx*8-0x1ed6ef8d]
  404755:	push   ds
  404756:	adc    bh,BYTE PTR [ecx+0x2d3b90a4]
  40475c:	in     al,0xe
  40475e:	dec    ecx
  40475f:	and    edi,ecx
  404761:	in     eax,0x0
  404763:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404764:	sbb    esp,DWORD PTR [ebp+0x42]
  404767:	inc    ebp
  404768:	scas   eax,DWORD PTR es:[edi]
  404769:	mov    al,0x6f
  40476b:	dec    eax
  40476c:	dec    esp
  40476d:	daa    
  40476e:	and    bl,dl
  404770:	icebp  
  404771:	lahf   
  404772:	jbe    0x404771
  404774:	push   esi
  404775:	sbb    esi,ebp
  404777:	pushf  
  404778:	mov    ?,WORD PTR [ecx-0x7d]
  40477b:	push   esp
  40477c:	retf   
  40477d:	pop    ds
  40477e:	into   
  40477f:	dec    edi
  404780:	call   0x306c:0x4c127b65
  404787:	test   DWORD PTR [esp+edi*4-0x6a6e3dca],0x17549ee1
  404792:	inc    esp
  404793:	sub    eax,0x1132af18
  404798:	sar    DWORD PTR [edx],0xc7
  40479b:	xchg   edi,eax
  40479c:	jmp    0x7751b864
  4047a1:	xor    esi,DWORD PTR [ecx-0x415580a2]
  4047a7:	shr    BYTE PTR [edx+0x555c58db],cl
  4047ad:	jnp    0x40476f
  4047af:	retf   0xe7ac
  4047b2:	fsubr  DWORD PTR [ecx]
  4047b4:	mov    esi,DWORD PTR [ebp+0x59fd8b88]
  4047ba:	loopne 0x404770
  4047bc:	cld    
  4047bd:	aaa    
  4047be:	scas   al,BYTE PTR es:[edi]
  4047bf:	jl     0x4047c0
  4047c1:	cmc    
  4047c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047c3:	nop
  4047c4:	fidiv  DWORD PTR [ebp-0x55]
  4047c7:	imul   ecx,DWORD PTR [esi+0xae0f13a],0xffffff95
  4047ce:	xchg   edi,eax
  4047cf:	push   0x1cdcefb2
  4047d4:	and    al,0x7c
  4047d6:	lahf   
  4047d7:	cli    
  4047d8:	aad    0x2a
  4047da:	cmp    DWORD PTR [edi],edx
  4047dc:	lock sbb DWORD PTR [esp+eiz*8-0x48f020e3],ecx
  4047e4:	mov    ebp,0x8f7aa550
  4047e9:	fs jmp 0x5148f7bf
  4047ef:	(bad)  
  4047f0:	arpl   WORD PTR [esi-0x7d37547f],di
  4047f6:	shl    DWORD PTR [ecx+0x1307d52a],0x38
  4047fd:	imul   esi,DWORD PTR [edx],0x1c27195c
  404803:	add    bl,BYTE PTR [eax-0x1286c976]
  404809:	push   es
  40480a:	enter  0x806b,0xf0
  40480e:	stos   BYTE PTR es:[edi],al
  40480f:	icebp  
  404810:	test   eax,edi
  404812:	or     al,0x30
  404814:	sbb    esp,ecx
  404816:	xchg   edx,eax
  404817:	mov    edi,0x3a052044
  40481c:	push   ds
  40481d:	in     al,dx
  40481e:	(bad)  
  40481f:	mov    al,ds:0xcbed8dfe
  404824:	and    eax,0xbe79c061
  404829:	leave  
  40482a:	int3   
  40482b:	fnsave [edi+0x4f]
  40482e:	sbb    esp,ebx
  404830:	pop    ebx
  404831:	popf   
  404832:	sub    ecx,esp
  404834:	push   ss
  404835:	adc    eax,0x27250a93
  40483a:	inc    ebp
  40483b:	xor    BYTE PTR [edx+0x6c],ah
  40483e:	mov    ds:0xb5d51cf0,al
  404843:	rol    DWORD PTR [ebx-0x200f9532],1
  404849:	and    DWORD PTR [esi],ecx
  40484b:	fsubrp st(3),st
  40484d:	mov    ebp,0x6865d1ec
  404852:	int    0xd6
  404854:	stos   BYTE PTR es:[edi],al
  404855:	cmp    eax,0x58456eab
  40485a:	shl    BYTE PTR [esi+0x403395c7],0x25
  404861:	xchg   edx,eax
  404862:	lods   al,BYTE PTR ds:[esi]
  404863:	icebp  
  404864:	sbb    edx,ecx
  404866:	adc    al,0x3f
  404868:	xchg   edi,eax
  404869:	jge    0x404873
  40486b:	pop    ss
  40486c:	push   cs
  40486d:	dec    esp
  40486e:	or     al,0xf
  404870:	arpl   ax,bx
  404872:	sub    BYTE PTR [ecx-0x4],al
  404875:	xchg   BYTE PTR [ebp+0x15],bh
  404878:	(bad)  
  404879:	rcl    DWORD PTR [esi+0x728701f7],cl
  40487f:	cwde   
  404880:	mov    edx,cs
  404882:	dec    esp
  404883:	out    dx,al
  404884:	loopne 0x40489b
  404886:	xor    al,0xb3
  404888:	outs   dx,DWORD PTR ds:[esi]
  404889:	mov    esp,0xb87a45eb
  40488e:	xchg   esp,eax
  40488f:	cmp    edx,DWORD PTR ds:0x8d27f55e
  404895:	pushf  
  404896:	cwde   
  404897:	lahf   
  404898:	sbb    ecx,ebx
  40489a:	sti    
  40489b:	mov    esp,0x10412df9
  4048a0:	mov    ?,WORD PTR [ecx+esi*4]
  4048a3:	rol    bl,1
  4048a5:	lock cmp eax,0x19dc98ef
  4048ab:	dec    esp
  4048ac:	sub    eax,0x810ac8bd
  4048b1:	xor    DWORD PTR [edx+0x1b],edi
  4048b4:	ret    
  4048b5:	jp     0x40490f
  4048b7:	pop    ds
  4048b8:	scas   al,BYTE PTR es:[edi]
  4048b9:	mov    DWORD PTR [ecx+0x3cbc3b17],0x5efb0bff
  4048c3:	add    DWORD PTR [ebp-0x38cab0a7],ecx
  4048c9:	push   esi
  4048ca:	or     eax,0x547551f4
  4048cf:	loope  0x40492f
  4048d1:	pop    esp
  4048d2:	and    dl,dl
  4048d4:	enter  0x4d2a,0x48
  4048d8:	aaa    
  4048d9:	mov    ebx,0x190e4bf0
  4048de:	inc    eax
  4048df:	ret    0x7da9
  4048e2:	ins    BYTE PTR es:[edi],dx
  4048e3:	cmp    BYTE PTR [edi],dl
  4048e5:	jg     0x40490c
  4048e7:	test   eax,0x98101d03
  4048ec:	pop    ss
  4048ed:	xchg   ecx,eax
  4048ee:	xchg   BYTE PTR [edx-0x724f3a65],ah
  4048f4:	xchg   ebp,eax
  4048f5:	adc    bh,0x4d
  4048f8:	inc    ecx
  4048f9:	imul   ecx,ebx,0xffffffb9
  4048fc:	jmp    0x470bb6ab
  404901:	and    esp,DWORD PTR [ebx]
  404903:	jno    0x404894
  404905:	add    al,0xa8
  404907:	call   0x1175:0xee512c5c
  40490e:	and    al,0xed
  404910:	or     DWORD PTR [esi-0x2e78918f],eax
  404916:	adc    BYTE PTR [esi+0x7c309e8b],dl
  40491c:	inc    esi
  40491d:	mov    BYTE PTR [ecx+0x2a],ch
  404920:	inc    ebx
  404921:	call   0x718b64a6
  404926:	ret    0x1c57
  404929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40492a:	ror    DWORD PTR [ecx-0x2e14ed2],cl
  404930:	pop    ebp
  404931:	inc    ebp
  404932:	jecxz  0x40494f
  404934:	and    eax,0x6ec7d6a2
  404939:	adc    DWORD PTR [edx-0x70],esp
  40493c:	cli    
  40493d:	inc    edx
  40493e:	xchg   edx,eax
  40493f:	sbb    eax,0x367fc709
  404944:	shr    BYTE PTR [esi-0x16],cl
  404947:	icebp  
  404948:	pop    edi
  404949:	lods   eax,DWORD PTR ds:[esi]
  40494a:	xor    ch,BYTE PTR [ecx+0x2098ba33]
  404950:	push   eax
  404951:	adc    esi,0xfffffffd
  404954:	mov    cl,0x52
  404956:	push   edi
  404957:	inc    edx
  404958:	sub    dh,BYTE PTR ds:0x50a96fd7
  40495e:	hlt    
  40495f:	mov    cl,0x2f
  404961:	clc    
  404962:	rol    BYTE PTR ds:0x9a37c8a8,cl
  404968:	imul   edx,ebx,0x164d8caf
  40496e:	(bad)  
  40496f:	sub    esi,DWORD PTR [ebp+0x4d]
  404972:	sub    edx,ebp
  404974:	fmul   QWORD PTR [eax]
  404976:	mov    BYTE PTR [edi+0x350346d3],bl
  40497c:	cmp    ebp,DWORD PTR [eax]
  40497e:	retf   0x39d5
  404981:	pusha  
  404982:	cld    
  404983:	inc    edi
  404984:	jecxz  0x40495e
  404986:	pop    es
  404987:	lahf   
  404988:	sbb    eax,0x7ec1e405
  40498d:	inc    eax
  40498e:	(bad)  
  40498f:	mov    dh,BYTE PTR [edx]
  404991:	jnp    0x404a0d
  404993:	fidiv  DWORD PTR [ebx-0x68]
  404996:	ror    BYTE PTR [ebp-0xd],0x1b
  40499a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40499b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40499c:	jnp    0x4049df
  40499e:	push   0xffffffe4
  4049a0:	sub    edi,DWORD PTR [ebp-0x3e0cc23c]
  4049a6:	xchg   dl,cl
  4049a8:	push   0xdaab27e0
  4049ad:	mov    bh,0x44
  4049af:	jg     0x4049c0
  4049b1:	mov    eax,0xb9ed522b
  4049b6:	push   esi
  4049b7:	push   0x1e24e237
  4049bc:	push   0xf32f1af5
  4049c1:	jle    0x4049cb
  4049c3:	xchg   esp,eax
  4049c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049c5:	inc    edi
  4049c6:	and    ch,ch
  4049c8:	inc    eax
  4049c9:	ins    BYTE PTR es:[edi],dx
  4049ca:	bound  esi,QWORD PTR [ecx+edx*4]
  4049cd:	lea    ebp,[ecx+ecx*1]
  4049d0:	lods   al,BYTE PTR ds:[esi]
  4049d1:	pop    ds
  4049d2:	push   ecx
  4049d3:	xchg   esp,eax
  4049d4:	sub    DWORD PTR [edx],esi
  4049d6:	(bad)  
  4049d7:	fld    DWORD PTR ds:0x57a8a5ab
  4049dd:	mov    ds:0xe8704ca0,al
  4049e2:	add    ah,0x7b
  4049e5:	sbb    DWORD PTR [esi],edi
  4049e7:	mov    gs,ecx
  4049e9:	mov    cl,0xc7
  4049eb:	mov    ds:0x39aae177,eax
  4049f0:	rol    DWORD PTR [edx],1
  4049f2:	sub    BYTE PTR [ebx+0x6c522d66],ah
  4049f8:	sub    ecx,DWORD PTR [esi+0x10a18005]
  4049fe:	rcl    BYTE PTR [edi+0x3e],1
  404a01:	fisub  WORD PTR [eax-0x32]
  404a04:	jg     0x404a1a
  404a06:	cdq    
  404a07:	mov    al,0x42
  404a09:	inc    eax
  404a0a:	sub    eax,0xa4020c16
  404a0f:	je     0x4049c0
  404a11:	fidivr DWORD PTR [eax+0x36]
  404a14:	pop    eax
  404a15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a16:	mov    ch,0x72
  404a18:	adc    edx,DWORD PTR [ecx+0x9395e66]
  404a1e:	xchg   bl,bl
  404a20:	(bad)  
  404a21:	in     eax,0xea
  404a23:	xlat   BYTE PTR ds:[ebx]
  404a24:	jne    0x404a4b
  404a26:	test   al,0xf3
  404a28:	xchg   BYTE PTR [edi-0x154dc3cd],dh
  404a2e:	jnp    0x404a0c
  404a30:	rcr    DWORD PTR [edi],0xdc
  404a33:	out    dx,eax
  404a34:	pop    ss
  404a35:	xlat   BYTE PTR ds:[ebx]
  404a36:	call   0xd81e:0x4732e136
  404a3d:	or     al,BYTE PTR [esi-0x3e9b207c]
  404a43:	mov    al,0x15
  404a45:	call   0xe3dc:0xc3f01c48
  404a4c:	push   0xe87415da
  404a51:	mov    al,0xec
  404a53:	(bad)  
  404a55:	(bad)  
  404a56:	or     eax,0x986d184a
  404a5b:	push   ebx
  404a5c:	test   BYTE PTR [ebp+eax*1+0x1f],dh
  404a60:	cld    
  404a61:	fdiv   DWORD PTR [edi+0x3c]
  404a64:	push   0xdc9fcf1c
  404a69:	or     BYTE PTR [ebx],bh
  404a6b:	mov    eax,0x35ddde
  404a70:	aam    0xd3
  404a72:	push   eax
  404a73:	in     al,dx
  404a74:	and    eax,0x8ae1ce2
  404a79:	adc    al,0x6b
  404a7b:	or     eax,0x9fc143b6
  404a80:	lea    ebp,[eax-0xc]
  404a83:	in     eax,dx
  404a84:	xchg   esp,eax
  404a85:	loope  0x404a85
  404a87:	xor    DWORD PTR [ecx+0x253a36c6],esi
  404a8d:	ds leave 
  404a8f:	cmp    edx,ebp
  404a91:	push   ebx
  404a92:	call   0x5270:0xd1966c68
  404a99:	outs   dx,BYTE PTR ds:[esi]
  404a9a:	pop    ss
  404a9b:	dec    esi
  404a9c:	pop    ebp
  404a9d:	pop    ds
  404a9e:	push   ss
  404a9f:	(bad)
  404aa3:	mov    eax,ds:0x8f0d6a8d
  404aa8:	add    DWORD PTR [ebp+0x7be2a907],eax
  404aae:	cwde   
  404aaf:	pop    es
  404ab0:	pop    ds
  404ab1:	lahf   
  404ab2:	mov    gs,eax
  404ab4:	or     esp,DWORD PTR [eax-0x4c3b1b01]
  404aba:	(bad)  
  404abb:	push   ss
  404abc:	int    0xc1
  404abe:	stc    
  404abf:	mov    dh,0x65
  404ac1:	xor    ah,BYTE PTR [ecx-0x24632a82]
  404ac7:	ss xchg edx,eax
  404ac9:	cmp    al,0xe7
  404acb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404acc:	pop    ebp
  404acd:	xchg   ebp,eax
  404ace:	mov    esi,0xd3236daf
  404ad3:	and    BYTE PTR [esi+ebx*4-0x3bb18432],bh
  404ada:	inc    edi
  404adb:	jno    0x404a70
  404add:	mov    ecx,0x5a456530
  404ae2:	and    BYTE PTR [esi],bl
  404ae4:	pop    edx
  404ae5:	mov    al,0x6a
  404ae7:	xchg   esp,eax
  404ae8:	xor    eax,0x97c254c
  404aed:	inc    eax
  404aee:	jg     0x404acf
  404af0:	mov    ch,0xf
  404af2:	push   edi
  404af3:	pop    edx
  404af4:	xor    BYTE PTR [edx-0x20],bl
  404af7:	sbb    BYTE PTR [eax+0x307d2456],0x61
  404afe:	std    
  404aff:	push   es
  404b00:	in     al,0xd1
  404b02:	cli    
  404b03:	xor    al,BYTE PTR [eax-0x5f]
  404b06:	xchg   DWORD PTR [esi-0x78],esi
  404b09:	jecxz  0x404b27
  404b0b:	cmc    
  404b0c:	std    
  404b0d:	sti    
  404b0e:	mov    WORD PTR [edi],es
  404b10:	lea    esi,[ecx]
  404b12:	mov    bh,0xe9
  404b14:	cmp    esp,ebx
  404b16:	add    edx,DWORD PTR [ecx+0x6983a69f]
  404b1c:	xor    DWORD PTR [ebp+esi*1-0x23],0x3c
  404b21:	push   es
  404b22:	cmp    eax,0xe4015208
  404b27:	cmp    esp,DWORD PTR [ebp-0x4]
  404b2a:	jo     0x404b9c
  404b2c:	(bad)  
  404b2d:	scas   al,BYTE PTR es:[edi]
  404b2e:	test   al,0x88
  404b30:	jmp    0x7398d150
  404b35:	push   DWORD PTR [esi-0x68]
  404b38:	jecxz  0x404b0d
  404b3a:	mov    dh,0x9d
  404b3c:	add    dl,dh
  404b3e:	dec    ebp
  404b3f:	jmp    0xfe61b305
  404b44:	lds    esp,FWORD PTR [edi]
  404b46:	pop    esp
  404b47:	xor    al,0x77
  404b49:	or     DWORD PTR [eax-0x7],esp
  404b4c:	mov    WORD PTR [esi],gs
  404b4e:	enter  0x9bb9,0x44
  404b52:	je     0x404b37
  404b54:	imul   ebx,DWORD PTR [ebp-0x1760619f],0x1a
  404b5b:	aaa    
  404b5c:	fdivr  DWORD PTR [esi+ecx*1-0x26]
  404b60:	in     al,dx
  404b61:	xchg   esi,eax
  404b62:	aaa    
  404b63:	fs inc ecx
  404b65:	jmp    0xfd8e:0x6ca17d0f
  404b6c:	fbstp  TBYTE PTR [edx+eax*1]
  404b6f:	jge    0x404bb6
  404b71:	jecxz  0x404bac
  404b73:	and    BYTE PTR [esi+0x60776d0f],bl
  404b79:	mov    ecx,0xd1124484
  404b7e:	iret   
  404b7f:	lahf   
  404b80:	jecxz  0x404b38
  404b82:	icebp  
  404b83:	lods   eax,DWORD PTR ds:[esi]
  404b84:	push   edx
  404b85:	and    BYTE PTR [edi],0xbf
  404b88:	mov    ds:0x24712dce,al
  404b8d:	mov    edi,0xe22b1be
  404b92:	lock test eax,0xa7613b1d
  404b98:	ss add eax,0x1dbe0983
  404b9e:	loopne 0x404b66
  404ba0:	mov    dh,0x33
  404ba2:	pop    ecx
  404ba3:	push   edi
  404ba4:	sub    cl,ah
  404ba6:	add    eax,0x4883acba
  404bab:	call   0xd335dce8
  404bb0:	add    eax,0x4caf95ca
  404bb5:	jno    0x404c0e
  404bb7:	or     edi,0xcb67e73d
  404bbd:	fadd   QWORD PTR ds:0x43b2e998
  404bc3:	sub    ch,BYTE PTR [ecx+0x27]
  404bc6:	push   edx
  404bc7:	and    al,0xf3
  404bc9:	jecxz  0x404bd1
  404bcb:	sti    
  404bcc:	jno    0x404ba1
  404bce:	shl    DWORD PTR [esi],1
  404bd0:	cmp    BYTE PTR [ecx],dh
  404bd2:	sbb    al,0x31
  404bd4:	mov    ah,0x90
  404bd6:	sub    DWORD PTR [esi],esp
  404bd8:	fld    DWORD PTR [eax+0x30]
  404bdb:	aas    
  404bdc:	repnz inc esp
  404bde:	retf   0x45c0
  404be1:	push   ds
  404be2:	mov    ebx,0x99a12e29
  404be7:	out    dx,al
  404be8:	or     DWORD PTR [eax-0x48],ecx
  404beb:	fidivr WORD PTR [edi+ebp*8]
  404bee:	repnz sub eax,DWORD PTR [eax]
  404bf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bf2:	push   ds
  404bf3:	mov    ecx,0x6ce74a17
  404bf8:	mov    ch,0xbe
  404bfa:	cmp    al,BYTE PTR [edx+0x1b]
  404bfd:	jno    0x404c3a
  404bff:	push   ecx
  404c00:	jl     0x404ba2
  404c02:	inc    esi
  404c03:	jae    0x404bd3
  404c05:	into   
  404c06:	xchg   ebp,eax
  404c07:	dec    eax
  404c08:	dec    ecx
  404c09:	dec    esi
  404c0a:	fwait
  404c0b:	pusha  
  404c0c:	xchg   dl,al
  404c0e:	into   
  404c0f:	add    DWORD PTR [edi],eax
  404c11:	jl     0x404c38
  404c13:	into   
  404c14:	js     0x404c65
  404c16:	pop    esp
  404c17:	jne    0x404c00
  404c19:	out    0x53,al
  404c1b:	loopne 0x404c7a
  404c1d:	(bad)
  404c20:	call   0xc509c900
  404c25:	fsubp  st(1),st
  404c27:	retf   0x217b
  404c2a:	out    dx,al
  404c2b:	outs   dx,BYTE PTR ds:[esi]
  404c2c:	nop
  404c2d:	and    DWORD PTR [ebx+0x412d827],ecx
  404c33:	fcomp  QWORD PTR [ebp-0x14]
  404c36:	push   edx
  404c37:	jae    0x404c2d
  404c39:	mov    ebx,DWORD PTR [edi+0x3114f1fc]
  404c3f:	inc    ebp
  404c40:	jnp    0x404c49
  404c42:	sbb    dl,BYTE PTR [ebp+0x38690c03]
  404c48:	ds aad 0x9d
  404c4b:	push   edx
  404c4c:	and    esp,DWORD PTR [ebx+0x4e]
  404c4f:	rol    dh,0xa3
  404c52:	pop    es
  404c53:	jmp    0x74fc:0x715fbf0c
  404c5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c5b:	inc    esi
  404c5c:	jo     0x404c4e
  404c5e:	mov    edi,0x8673cf92
  404c63:	sar    DWORD PTR [eax+0x76017aa3],1
  404c69:	les    ebp,FWORD PTR [eax+ebx*2-0x7dea1f21]
  404c70:	push   ecx
  404c71:	cmp    cl,BYTE PTR [ebp+ebx*2+0x60]
  404c75:	jnp    0x404cdc
  404c77:	cmp    BYTE PTR [edx-0x9df3a6],al
  404c7d:	in     al,dx
  404c7e:	or     DWORD PTR [esi+0x4d],edi
  404c81:	jp     0x404c5d
  404c83:	sbb    esi,DWORD PTR [edi]
  404c85:	inc    ebx
  404c86:	in     al,dx
  404c87:	ins    BYTE PTR es:[edi],dx
  404c88:	jb     0x404c65
  404c8a:	jb     0x404c11
  404c8c:	adc    ebx,DWORD PTR [esi]
  404c8e:	hlt    
  404c8f:	lahf   
  404c90:	pop    esi
  404c91:	xchg   DWORD PTR [eax+edi*2+0x467a7621],edi
  404c98:	in     al,0xcc
  404c9a:	pop    edi
  404c9b:	push   cs
  404c9c:	mov    edx,0x7451833d
  404ca1:	mov    ?,WORD PTR [edx]
  404ca3:	inc    eax
  404ca4:	xor    DWORD PTR [eax-0x39a85fd8],0x53
  404cab:	fs add ch,ah
  404cae:	and    DWORD PTR [ebp-0x6b3509b0],esi
  404cb4:	mov    ecx,0xca4fd1
  404cb9:	jno    0x404c61
  404cbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cbc:	ins    DWORD PTR es:[edi],dx
  404cbd:	jmp    0x404c6b
  404cbf:	iret   
  404cc0:	pushf  
  404cc1:	mov    dl,0x57
  404cc3:	iret   
  404cc4:	enter  0x21bf,0x8f
  404cc8:	xchg   ch,cl
  404cca:	xchg   edi,eax
  404ccb:	mul    BYTE PTR [ecx+0x22]
  404cce:	push   ebx
  404ccf:	lock sbb ebp,0xe19c8a11
  404cd6:	jp     0x404d1f
  404cd8:	(bad)  
  404cd9:	cli    
  404cda:	mov    al,ds:0x659f2aa4
  404cdf:	pop    ebp
  404ce0:	push   0x933852c7
  404ce5:	inc    edi
  404ce6:	mov    bh,0xf6
  404ce8:	idiv   DWORD PTR [edx-0x3e]
  404ceb:	retf   0x3e2c
  404cee:	xchg   BYTE PTR [eax+0x25],dl
  404cf1:	pop    eax
  404cf2:	ins    DWORD PTR es:[edi],dx
  404cf3:	mov    ecx,0x1d275411
  404cf8:	cld    
  404cf9:	lahf   
  404cfa:	mov    dh,0xe3
  404cfc:	jnp    0x404c93
  404cfe:	push   0xfffffffe
  404d00:	cmp    al,0x36
  404d02:	xlat   BYTE PTR ds:[ebx]
  404d03:	or     BYTE PTR [eax],0x9b
  404d06:	sub    ebp,DWORD PTR es:[ecx+eax*1+0x69]
  404d0b:	sub    DWORD PTR [ebx+0x25],eax
  404d0e:	push   edx
  404d0f:	jle    0x404ca5
  404d11:	dec    esp
  404d12:	mul    DWORD PTR [esi+0x313ecabe]
  404d18:	cli    
  404d19:	mov    bh,0xb5
  404d1b:	mov    esi,0x479ed1db
  404d20:	lods   eax,DWORD PTR ds:[esi]
  404d21:	dec    ebx
  404d22:	jmp    0xa656:0x292ecff8
  404d29:	push   edi
  404d2a:	xor    eax,0x2bbe9c3b
  404d2f:	sbb    DWORD PTR [edx],0x3d
  404d32:	mov    ebx,DWORD PTR [eax-0x1989522]
  404d38:	mov    ebx,0x614252d6
  404d3d:	mov    ah,0xec
  404d3f:	fs lahf 
  404d41:	fadd   DWORD PTR [edx]
  404d44:	loopne 0x404d19
  404d46:	or     BYTE PTR [ebx],bl
  404d48:	mov    gs,WORD PTR [ebx-0x74]
  404d4b:	pop    ecx
  404d4c:	mov    bh,BYTE PTR [edx]
  404d4e:	adc    BYTE PTR [eax+0x339752f7],ah
  404d54:	jmp    0x44f85128
  404d59:	dec    edi
  404d5a:	xor    edi,edi
  404d5c:	(bad)  
  404d5e:	addr16 ret 
  404d60:	jmp    0x4ad1:0x83231bd5
  404d67:	sar    BYTE PTR [ebp+0x35207225],cl
  404d6d:	(bad)  
  404d6e:	or     edi,eax
  404d70:	mov    ah,0x94
  404d72:	pop    es
  404d73:	push   esp
  404d74:	pushf  
  404d75:	mov    ds:0x5a029ab5,al
  404d7a:	in     eax,dx
  404d7b:	repz les edx,FWORD PTR [eax]
  404d7e:	add    al,0x6d
  404d80:	stos   BYTE PTR es:[edi],al
  404d81:	cmp    al,0x8a
  404d83:	shl    DWORD PTR [ecx+0x79],cl
  404d86:	push   esi
  404d87:	jmp    0x2321:0x1ca29a5d
  404d8e:	retf   
  404d8f:	imul   eax,DWORD PTR [edx],0xfffffff8
  404d92:	lods   al,BYTE PTR ds:[esi]
  404d93:	push   edi
  404d94:	leave  
  404d95:	push   ebp
  404d96:	jl     0x404deb
  404d98:	dec    edx
  404d99:	lods   al,BYTE PTR ds:[esi]
  404d9a:	fdivr  st(1),st
  404d9c:	(bad)  
  404d9d:	cmp    BYTE PTR [edx+0x21f6b3ac],bl
  404da3:	fdiv   DWORD PTR [ebx]
  404da5:	pop    edi
  404da6:	call   0xc4524846
  404dab:	adc    ebp,DWORD PTR [eax]
  404dad:	iret   
  404dae:	mov    eax,DWORD PTR [eax+0x4c85be13]
  404db4:	or     DWORD PTR [ebp-0x5e],ecx
  404db7:	add    eax,0x26e45731
  404dbc:	or     eax,0xdce4a9b8
  404dc1:	sub    al,0x5a
  404dc3:	cwde   
  404dc4:	ret    
  404dc5:	cmp    al,0x44
  404dc8:	adc    eax,0x886766df
  404dcd:	add    eax,0x5f3c5ddf
  404dd2:	pop    ebp
  404dd3:	lods   eax,DWORD PTR ds:[esi]
  404dd4:	imul   ecx,DWORD PTR [ebp+0x52],0xa4ad2f75
  404ddb:	in     al,dx
  404ddc:	jne    0x404dd6
  404dde:	cmp    DWORD PTR [ecx-0x6c5b6a7],ebp
  404de4:	sar    BYTE PTR ds:0x523b7669,cl
  404dea:	xor    eax,0xb9b99ee
  404def:	push   edx
  404df0:	es ret 
  404df2:	rcr    DWORD PTR [ebx-0x4c],cl
  404df5:	retf   0x76de
  404df8:	jle    0x404de3
  404dfa:	ss jmp 0x404d94
  404dfd:	mov    cs,ecx
  404dff:	cmp    edi,DWORD PTR [edi+0x63]
  404e02:	mov    eax,ds:0x75179914
  404e07:	mov    ds:0xc926a225,eax
  404e0c:	shl    BYTE PTR [edx+eiz*2],1
  404e0f:	enter  0x960f,0x6f
  404e13:	or     eax,0x3b74ab6e
  404e18:	or     eax,0xfc4609aa
  404e1d:	dec    esp
  404e1e:	dec    ecx
  404e1f:	std    
  404e20:	icebp  
  404e21:	sub    bh,BYTE PTR [edx+0x71626e94]
  404e27:	xor    eax,0xc53a8f5e
  404e2c:	mov    ah,0x9e
  404e2e:	scas   eax,DWORD PTR es:[edi]
  404e2f:	mov    edi,0xd4f9ce12
  404e35:	xchg   edx,eax
  404e36:	outs   dx,BYTE PTR ds:[esi]
  404e37:	jns    0x404e88
  404e39:	rcl    BYTE PTR [eax+0xf],cl
  404e3c:	mov    dh,0xdd
  404e3e:	push   edi
  404e3f:	aam    0x18
  404e41:	jecxz  0x404df4
  404e43:	pop    edx
  404e44:	adc    eax,0x8a01d756
  404e49:	inc    esi
  404e4a:	outs   dx,BYTE PTR ds:[esi]
  404e4b:	bound  edx,QWORD PTR [ecx]
  404e4d:	mov    cl,0x63
  404e4f:	pop    ds
  404e50:	mov    esi,DWORD PTR [edx-0x6]
  404e53:	repz mov ebx,ecx
  404e56:	fdivr  QWORD PTR [ecx]
  404e58:	neg    DWORD PTR [eax-0x58]
  404e5b:	push   esp
  404e5c:	mov    edi,0xd1d3af43
  404e61:	inc    ecx
  404e62:	lods   al,BYTE PTR ds:[esi]
  404e63:	out    0x25,al
  404e65:	test   al,0x9b
  404e67:	dec    esp
  404e68:	and    eax,DWORD PTR [eax]
  404e6a:	daa    
  404e6b:	addr16 inc esp
  404e6d:	popf   
  404e6e:	inc    esp
  404e6f:	stos   DWORD PTR es:[edi],eax
  404e70:	xchg   DWORD PTR [edi+0x61],ecx
  404e73:	mov    ebp,esi
  404e75:	mov    bl,0x10
  404e77:	cmp    BYTE PTR [esi-0x10],ch
  404e7a:	ins    DWORD PTR es:[edi],dx
  404e7b:	cwde   
  404e7c:	jge    0x404ea0
  404e7e:	jmp    0x404e8b
  404e80:	mov    bh,0x42
  404e82:	cld    
  404e83:	(bad)  
  404e84:	and    al,0x20
  404e86:	push   edx
  404e87:	dec    ebx
  404e88:	out    dx,al
  404e89:	push   dx
  404e8b:	pop    eax
  404e8c:	pop    eax
  404e8d:	push   edx
  404e8e:	sub    BYTE PTR [ebx+0x6d],0x13
  404e92:	mov    ds:0x33f6a954,eax
  404e97:	outs   dx,BYTE PTR ds:[esi]
  404e98:	fld    QWORD PTR [edi-0x29]
  404e9b:	fwait
  404e9c:	or     ebp,esi
  404e9e:	sub    bh,BYTE PTR [esi]
  404ea0:	mov    BYTE PTR [ecx],ch
  404ea2:	and    al,0xb7
  404ea4:	dec    ebp
  404ea5:	push   cs
  404ea6:	push   0xfffffffa
  404ea8:	sub    DWORD PTR [ebx-0x78c517f5],0xef712eed
  404eb2:	mov    eax,es
  404eb4:	mov    dl,0x13
  404eb6:	ss out dx,eax
  404eb8:	stos   DWORD PTR es:[edi],eax
  404eb9:	sub    al,0x5b
  404ebb:	sub    eax,0x5a634cac
  404ec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ec1:	in     al,dx
  404ec2:	test   eax,0x6bc4121
  404ec7:	(bad)  
  404ec8:	mov    bh,0x25
  404eca:	mov    edi,0x85aab6df
  404ecf:	in     eax,0x8d
  404ed1:	in     al,dx
  404ed2:	xor    eax,0x1258f1ce
  404ed7:	inc    edx
  404ed8:	sar    DWORD PTR ds:0xb64235b8,1
  404ede:	push   0x6f269ce3
  404ee3:	test   DWORD PTR [ebx],0x3bb86bdd
  404ee9:	test   cl,0xcd
  404eec:	(bad)  
  404eed:	jmp    0x61764ee3
  404ef2:	or     BYTE PTR [esi-0x63],0xf2
  404ef6:	xlat   BYTE PTR ds:[ebx]
  404ef7:	adc    eax,0x422aae8b
  404efc:	or     ah,BYTE PTR [ecx+edx*8+0x46]
  404f00:	adc    al,0xb0
  404f02:	mov    ds:0xf0100ac,al
  404f07:	push   edi
  404f08:	mov    al,0xf4
  404f0a:	pop    ecx
  404f0b:	and    al,0xd2
  404f0d:	mov    WORD PTR [edi+0x73],gs
  404f10:	add    dh,BYTE PTR [eax]
  404f12:	stc    
  404f13:	(bad)  
  404f14:	jg     0x404edc
  404f16:	jmp    0xad26:0xbc3ff797
  404f1d:	sub    dh,BYTE PTR [eax]
  404f1f:	mov    ch,0x71
  404f21:	and    al,0x12
  404f23:	hlt    
  404f24:	cmp    eax,DWORD PTR [eax-0x15]
  404f27:	lds    esi,FWORD PTR [ebx]
  404f29:	aaa    
  404f2a:	out    0x3c,al
  404f2c:	adc    BYTE PTR [esi+0x2b],dl
  404f2f:	hlt    
  404f30:	mov    bl,0xda
  404f32:	dec    ecx
  404f33:	push   ebx
  404f34:	stos   DWORD PTR es:[edi],eax
  404f35:	sub    al,0x17
  404f37:	ss jb  0x404edb
  404f3a:	fs rcl bh,1
  404f3d:	cmp    ebp,ebx
  404f3f:	jbe    0x404f72
  404f41:	je     0x404f33
  404f43:	adc    al,0xab
  404f45:	cli    
  404f46:	cmc    
  404f47:	inc    ecx
  404f48:	jne    0x404fa7
  404f4a:	scas   eax,DWORD PTR es:[edi]
  404f4b:	or     ch,BYTE PTR [edi]
  404f4d:	push   ebp
  404f4e:	shl    ebp,cl
  404f50:	sub    BYTE PTR [ebp+0x2f],dl
  404f53:	shl    DWORD PTR [ebp+0x12],cl
  404f56:	and    dh,dh
  404f58:	ins    BYTE PTR es:[edi],dx
  404f59:	shl    ah,cl
  404f5b:	inc    ebp
  404f5c:	fistp  QWORD PTR [eax]
  404f5e:	mov    WORD PTR [ebp+0x32],ss
  404f61:	data16 fild DWORD PTR [edi-0x32]
  404f65:	mov    ds:0x637e59d6,eax
  404f6a:	mov    dh,0x56
  404f6c:	cmc    
  404f6d:	or     ch,BYTE PTR [ebx+0x4a036566]
  404f73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f74:	xchg   BYTE PTR [ebx],bh
  404f76:	jmp    0xa54f:0x8b0d6112
  404f7d:	imul   ebx,DWORD PTR [ecx],0xa9e2cc2
  404f83:	test   BYTE PTR [edi-0x365bd640],dh
  404f89:	inc    esp
  404f8a:	nop
  404f8b:	mov    dl,0x7f
  404f8d:	test   al,0x87
  404f8f:	sbb    dl,0xbe
  404f92:	mov    WORD PTR [ebx],fs
  404f94:	std    
  404f95:	sbb    DWORD PTR [edx-0x6d],edi
  404f98:	xchg   ebx,eax
  404f99:	data16 mov bh,0xbe
  404f9c:	push   ss
  404f9d:	mov    ch,0x28
  404f9f:	adc    BYTE PTR [eax+0x70943ddf],bl
  404fa5:	cwde   
  404fa6:	sahf   
  404fa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fa8:	ins    DWORD PTR es:[edi],dx
  404fa9:	xchg   ebp,eax
  404faa:	clc    
  404fab:	out    dx,al
  404fac:	lods   eax,DWORD PTR ds:[esi]
  404fad:	or     dl,BYTE PTR [ebp+0x24]
  404fb0:	mov    WORD PTR [ecx],cs
  404fb2:	int    0x57
  404fb4:	aam    0xe3
  404fb6:	jl     0x40500d
  404fb8:	cmp    BYTE PTR ds:[eax-0x11],ah
  404fbc:	rcl    BYTE PTR [eax-0x40],1
  404fbf:	xor    bl,al
  404fc1:	pop    edx
  404fc2:	cwde   
  404fc3:	setno  BYTE PTR [ecx-0x4ffea809]
  404fca:	add    DWORD PTR [ebp+0x37aa9293],esp
  404fd0:	adc    bh,BYTE PTR [esi-0x11973cd5]
  404fd6:	rol    DWORD PTR [edi+0x5bdc908d],0x6f
  404fdd:	mov    ebp,0xa40e19bb
  404fe2:	fimul  WORD PTR [ebp-0xf]
  404fe5:	jle    0x404f87
  404fe7:	adc    eax,0x2f7ebe09
  404fec:	in     al,dx
  404fed:	mov    ds:0xee2dfea4,eax
  404ff2:	dec    ebx
  404ff3:	iret   
  404ff4:	mov    al,ds:0x3c3f825a
  404ff9:	lods   al,BYTE PTR ds:[esi]
  404ffa:	mov    esi,DWORD PTR [ebp+0x38]
  404ffd:	sti    
  404ffe:	dec    BYTE PTR ds:0xa348b4c0
  405004:	add    BYTE PTR [eax+ebp*4-0x44],bh
  405008:	les    ebx,FWORD PTR [ebx-0x55dfa5eb]
  40500e:	dec    ebx
  40500f:	pop    ecx
  405010:	and    DWORD PTR [edx-0x80],esp
  405013:	jne    0x404fb4
  405015:	test   DWORD PTR [edx+0x27ff985],ecx
  40501b:	repz dec ecx
  40501d:	fs add bl,bl
  405020:	rcl    BYTE PTR [ebx+0x7e2134f9],cl
  405026:	fnstsw WORD PTR [esi+0x60]
  405029:	mov    DWORD PTR ds:0xb08fef27,esp
  40502f:	fwait
  405030:	mov    eax,0x47c11f1f
  405035:	div    dl
  405037:	dec    ebp
  405038:	dec    ecx
  405039:	add    al,0x90
  40503b:	scas   eax,DWORD PTR es:[edi]
  40503c:	imul   eax,ebp,0x1775c697
  405042:	bnd jge 0x405015
  405045:	adc    BYTE PTR [ebx+0x34beb37e],dh
  40504b:	cmp    eax,0xafd7425c
  405050:	xor    eax,DWORD PTR ds:0x9b7d2c5
  405056:	pop    edi
  405057:	mov    cl,0xc6
  405059:	and    al,0x6a
  40505b:	pop    eax
  40505c:	mov    ebx,ebx
  40505e:	das    
  40505f:	ltr    dx
  405062:	push   ss
  405063:	sub    eax,0x12dbb681
  405068:	xchg   esp,ebp
  40506a:	sbb    ch,BYTE PTR [ebp-0x5f318eb9]
  405070:	jns    0x4050da
  405072:	xchg   esi,eax
  405073:	ins    BYTE PTR es:[edi],dx
  405074:	dec    esp
  405075:	sti    
  405076:	push   esp
  405077:	fcmovnbe st,st(6)
  405079:	test   DWORD PTR [ecx],eax
  40507b:	and    edi,DWORD PTR [ecx+ebp*4]
  40507e:	daa    
  40507f:	jns    0x4050f4
  405081:	jo     0x405067
  405083:	mov    cl,0x7d
  405085:	pop    ds
  405086:	repz aaa 
  405088:	rep outs dx,DWORD PTR ds:[esi]
  40508a:	outs   dx,BYTE PTR ds:[esi]
  40508b:	retf   
  40508c:	dec    ebx
  40508d:	sub    ah,BYTE PTR [esi+0xd]
  405090:	push   DWORD PTR [ebx]
  405092:	push   ss
  405093:	sub    al,0xaa
  405095:	sbb    BYTE PTR [edi],0xb4
  405098:	jle    0x405098
  40509a:	pop    esp
  40509b:	jo     0x405030
  40509d:	sbb    DWORD PTR [eax+esi*1+0x15dc08a9],0xf78df51
  4050a8:	push   es
  4050a9:	add    eax,0x534869de
  4050ae:	loopne 0x405058
  4050b0:	xchg   ebp,eax
  4050b1:	jnp    0x40505e
  4050b3:	xor    DWORD PTR [eiz*4-0x308dcafb],esp
  4050ba:	je     0x4050fa
  4050bc:	gs cmp eax,0x5ce695a7
  4050c2:	or     BYTE PTR [ecx+0x3e419432],dh
  4050c8:	pop    esp
  4050c9:	add    edx,0xffffff97
  4050cc:	hlt    
  4050cd:	retf   0xe802
  4050d0:	dec    ebx
  4050d1:	xchg   edi,eax
  4050d2:	inc    ebx
  4050d3:	dec    esi
  4050d4:	aad    0x24
  4050d6:	xor    edx,DWORD PTR [edx+0x2]
  4050d9:	mov    edi,0xbe164f8a
  4050de:	pop    esp
  4050df:	dec    ebp
  4050e0:	nop
  4050e1:	sub    al,0xdf
  4050e3:	inc    eax
  4050e4:	jecxz  0x4050dc
  4050e6:	jge    0x40515e
  4050e8:	loop   0x405100
  4050ea:	lds    edx,FWORD PTR [edx]
  4050ec:	jo     0x40510f
  4050ee:	xchg   esi,eax
  4050ef:	xchg   ecx,eax
  4050f0:	dec    ebx
  4050f1:	xchg   edi,eax
  4050f2:	or     al,BYTE PTR [esi-0x2318fdf0]
  4050f8:	cmc    
  4050f9:	xchg   BYTE PTR [ecx+0x7d667a28],ah
  4050ff:	loope  0x405104
  405101:	(bad)  
  405102:	mov    ebp,0x25605078
  405107:	or     BYTE PTR [ecx],ch
  405109:	and    dh,BYTE PTR [ebp+0x296cb200]
  40510f:	and    bl,dl
  405111:	dec    ebx
  405112:	jmp    0x4050c2
  405114:	mov    esp,0xacf115a2
  405119:	cmp    esi,DWORD PTR [edi]
  40511b:	in     eax,0xd0
  40511d:	or     ch,ch
  40511f:	test   BYTE PTR [ebp-0x39],bl
  405122:	inc    ecx
  405123:	pop    ds
  405124:	push   esp
  405125:	xchg   DWORD PTR [edx-0x67],esp
  405128:	dec    ebx
  405129:	je     0x405176
  40512b:	and    BYTE PTR [ebp+0x5bc6f1a5],cl
  405131:	inc    esi
  405132:	xchg   ebp,eax
  405133:	out    0x1,eax
  405135:	xlat   BYTE PTR ds:[ebx]
  405136:	aam    0x24
  405138:	or     eax,0x8e2136f8
  40513d:	mov    cl,0x8a
  40513f:	ror    BYTE PTR [ebp+0x632f6a05],1
  405145:	jb     0x4050e7
  405147:	mov    bh,0xe3
  405149:	fnstcw WORD PTR [edx+0x4b]
  40514c:	cmp    BYTE PTR [esi+0x5a62688f],cl
  405152:	mov    esp,0xe50ec65f
  405157:	arpl   sp,dx
  405159:	gs loop 0x405118
  40515c:	fcomp  QWORD PTR [ebx-0x20]
  40515f:	cmp    al,0x19
  405161:	mov    edi,0xa3c495ed
  405166:	dec    ebp
  405167:	fadd   st(5),st
  405169:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40516a:	(bad)  
  40516b:	push   edi
  40516c:	inc    edi
  40516d:	fsubr  QWORD PTR [ebx-0x76]
  405170:	adc    edx,DWORD PTR [ecx-0x7a20d3bc]
  405176:	xor    bh,BYTE PTR ds:0xb0b79c8d
  40517c:	jle    0x405151
  40517e:	int3   
  40517f:	les    esi,FWORD PTR [ebx-0x5b]
  405182:	and    eax,0x90b7c26a
  405187:	cmp    esp,edx
  405189:	or     cl,BYTE PTR cs:[ecx+0x5a]
  40518d:	gs out 0x55,al
  405190:	and    eax,0x78c7da1d
  405195:	daa    
  405196:	ja     0x405128
  405198:	test   al,bh
  40519a:	lods   eax,DWORD PTR ds:[esi]
  40519b:	or     eax,0x4c70fc99
  4051a0:	inc    esi
  4051a1:	(bad)  
  4051a2:	pop    edx
  4051a3:	aad    0xd2
  4051a5:	pop    eax
  4051a6:	in     eax,0xc4
  4051a8:	xchg   DWORD PTR [edi],edx
  4051aa:	jp     0x40514e
  4051ac:	fstp   TBYTE PTR [ebp-0x6e3f8bc8]
  4051b2:	fimul  DWORD PTR ds:0x760f8e38
  4051b8:	jmp    0xefc6:0x1f296e65
  4051bf:	add    eax,0x90cdec96
  4051c4:	xchg   edi,eax
  4051c5:	enter  0x334a,0xfa
  4051c9:	sub    dh,BYTE PTR [ebx]
  4051cb:	jg     0x405157
  4051cd:	mov    esi,DWORD PTR [ecx+eax*1+0x42]
  4051d1:	mov    al,cl
  4051d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051d4:	push   ds
  4051d5:	mov    BYTE PTR [esi-0x1e38fa63],dl
  4051db:	or     al,0xa
  4051dd:	jle    0x405188
  4051df:	stos   DWORD PTR es:[edi],eax
  4051e0:	das    
  4051e1:	pop    esi
  4051e2:	cmp    BYTE PTR [ecx],dl
  4051e4:	xchg   edi,eax
  4051e5:	inc    esi
  4051e6:	or     eax,0xd47ffee
  4051eb:	and    ah,BYTE PTR [eax-0x2d]
  4051ee:	pop    es
  4051ef:	out    dx,al
  4051f0:	test   eax,0x535a0fda
  4051f5:	ds push 0x901e9a72
  4051fb:	cmc    
  4051fc:	jne    0x4051fa
  4051fe:	add    al,0x98
  405200:	jae    0x40524e
  405202:	mov    eax,0x6c1c8049
  405207:	cmp    DWORD PTR [ebp-0x63],eax
  40520a:	mov    eax,0xc841af1d
  40520f:	(bad)  
  405210:	fdivrp st(7),st
  405212:	(bad)
  405215:	jb     0x4051bf
  405217:	mov    eax,ds:0x7f5932d8
  40521c:	inc    ebp
  40521d:	and    eax,0x4e8582c1
  405222:	mov    edx,0x7a80f225
  405227:	stc    
  405228:	pop    esi
  405229:	push   ss
  40522a:	retf   
  40522b:	test   eax,0xceb95ece
  405230:	ins    DWORD PTR es:[edi],dx
  405231:	jg     0x4051e8
  405233:	and    eax,DWORD PTR [edi-0x11771ab]
  405239:	push   esi
  40523a:	adc    al,0xd
  40523c:	push   esp
  40523d:	int3   
  40523e:	lock stc 
  405240:	fs test eax,0x3f8703e1
  405246:	push   es
  405247:	dec    esi
  405248:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405249:	bound  esi,QWORD PTR [ecx-0x53]
  40524c:	ret    
  40524d:	lock push eax
  40524f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405250:	or     edi,ecx
  405252:	or     cl,bh
  405254:	cmp    al,BYTE PTR [edi+0x3b]
  405257:	and    ebx,eax
  405259:	jmp    DWORD PTR [ebx]
  40525b:	push   esp
  40525c:	nop
  40525d:	mov    dl,0xd6
  40525f:	adc    al,0xb3
  405261:	sti    
  405262:	test   al,0xcf
  405264:	inc    esp
  405265:	aam    0x43
  405267:	xchg   esp,eax
  405268:	and    esi,DWORD PTR [edx]
  40526a:	xor    cl,BYTE PTR [eax+0x181cd8fa]
  405270:	iret   
  405271:	lods   eax,DWORD PTR ds:[esi]
  405272:	jne    0x40523c
  405274:	xlat   BYTE PTR ds:[ebx]
  405275:	jmp    0x4052d8
  405277:	jg     0x4052f5
  405279:	cmp    DWORD PTR [edx+0x3b],0xffffffb5
  40527d:	pop    ecx
  40527e:	shl    BYTE PTR ds:0xd49b51a0,1
  405284:	push   ebp
  405285:	jnp    0x40529c
  405287:	jmp    0x1ce573e6
  40528c:	nop
  40528d:	test   al,0x46
  40528f:	xchg   DWORD PTR fs:0x5533f607,ebp
  405296:	aas    
  405297:	paddsb mm7,QWORD PTR [eax-0x4c0030f1]
  40529e:	pop    eax
  40529f:	aad    0xea
  4052a1:	std    
  4052a2:	clc    
  4052a3:	add    BYTE PTR [ebp+esi*2-0x52d701b2],0xfc
  4052ab:	aaa    
  4052ac:	dec    eax
  4052ad:	dec    eax
  4052ae:	push   ebp
  4052b0:	in     al,0x33
  4052b2:	imul   ebp,DWORD PTR [ebp+ebx*2+0x5fa68d17],0x72678a1c
  4052bd:	sub    DWORD PTR [eax],ebx
  4052bf:	sbb    eax,0xd6b4c7bf
  4052c4:	pushf  
  4052c5:	mov    cl,0xd9
  4052c7:	xchg   BYTE PTR [edx],dl
  4052c9:	pop    es
  4052ca:	push   es
  4052cb:	out    0x64,al
  4052cd:	popf   
  4052ce:	sti    
  4052cf:	mov    edi,0x4f45f024
  4052d4:	std    
  4052d5:	dec    esi
  4052d6:	mov    ah,0xba
  4052d8:	sub    DWORD PTR [ebx-0x62967d8a],ebp
  4052de:	inc    edx
  4052df:	mov    bl,0x58
  4052e1:	idiv   BYTE PTR [ecx-0x5df59c9c]
  4052e7:	test   al,0xf4
  4052e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052ea:	inc    edx
  4052eb:	lahf   
  4052ec:	push   ebx
  4052ed:	mov    eax,0xb745b3bd
  4052f2:	and    BYTE PTR [eax+0x45],ch
  4052f5:	mov    cl,0x52
  4052f7:	sbb    al,0x68
  4052f9:	lods   eax,DWORD PTR ds:[esi]
  4052fa:	call   0x6a0b:0xcbcc8179
  405301:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405302:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405303:	or     dh,BYTE PTR [ebp+ecx*8-0x54]
  405307:	mov    ecx,0x55ee775a
  40530c:	adc    BYTE PTR [edi+0x48960a1a],dl
  405312:	je     0x4052c9
  405314:	fwait
  405315:	sti    
  405316:	mov    bh,0x53
  405318:	push   ss
  405319:	mov    bh,0x8e
  40531b:	cmp    al,0x46
  40531d:	shl    BYTE PTR [ebp-0x35],cl
  405320:	mov    edi,0x1b27b0a3
  405325:	daa    
  405326:	imul   ecx,DWORD PTR [edi-0x7d],0xb921f013
  40532d:	and    BYTE PTR [ebp-0x7d],bh
  405330:	adc    ch,bh
  405332:	dec    edx
  405333:	aas    
  405334:	ins    DWORD PTR es:[edi],dx
  405335:	(bad)  
  405336:	lock fcomp QWORD PTR ds:0x63e6976a
  40533d:	cmp    al,0xd0
  40533f:	jae    0x40537f
  405341:	dec    edx
  405342:	mov    ebp,0xe32fbf3c
  405347:	and    ebp,esi
  405349:	nop
  40534a:	adc    al,0xc7
  40534c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40534d:	xchg   ebx,eax
  40534e:	mov    ds:0xb5948957,al
  405353:	inc    eax
  405354:	int3   
  405355:	sbb    al,0xda
  405357:	cwde   
  405358:	push   esp
  405359:	add    BYTE PTR [edi+0x2da1ec58],ch
  40535f:	xor    DWORD PTR [edx-0x5032bfa7],esp
  405365:	int    0x1
  405367:	lods   eax,DWORD PTR ds:[esi]
  405368:	adc    al,0xb2
  40536a:	(bad)
  40536d:	sahf   
  40536e:	scas   eax,DWORD PTR es:[edi]
  40536f:	lahf   
  405370:	sub    al,0xc9
  405372:	xor    al,0x3
  405374:	and    BYTE PTR [esi],dh
  405376:	scas   al,BYTE PTR es:[edi]
  405377:	(bad)  
  405378:	jecxz  0x4052fb
  40537a:	aaa    
  40537b:	aad    0x7e
  40537d:	and    DWORD PTR [edx-0x7081a8c],eax
  405383:	(bad)  
  405384:	xlat   BYTE PTR ds:[ebx]
  405385:	addr16 adc al,0xfb
  405388:	mov    edi,0x6a847dcc
  40538d:	lock dec ecx
  40538f:	cdq    
  405390:	in     eax,dx
  405391:	or     al,0xe2
  405393:	sahf   
  405394:	in     eax,dx
  405395:	push   esp
  405396:	jne    0x4053f0
  405398:	loop   0x40535e
  40539a:	mov    cl,BYTE PTR [ecx]
  40539c:	out    0xbe,eax
  40539e:	sub    eax,0x118a29e4
  4053a3:	dec    ecx
  4053a4:	mov    ecx,0x670a09e3
  4053a9:	inc    ecx
  4053aa:	cmp    eax,0x9193e6c7
  4053af:	sub    ebx,ebp
  4053b1:	out    dx,al
  4053b2:	aaa    
  4053b3:	push   esp
  4053b4:	das    
  4053b5:	jnp    0x405368
  4053b7:	jne    0x405366
  4053b9:	mov    dh,0xdb
  4053bb:	stc    
  4053bc:	dec    edi
  4053bd:	clc    
  4053be:	pop    ecx
  4053bf:	add    eax,esp
  4053c1:	jnp    0x405364
  4053c3:	or     dl,0x34
  4053c6:	xlat   BYTE PTR ds:[ebx]
  4053c7:	pop    ebp
  4053c8:	xchg   al,bl
  4053ca:	(bad)  
  4053cc:	jo     0x405386
  4053ce:	pop    esp
  4053cf:	jo     0x405368
  4053d1:	lahf   
  4053d2:	cmp    eax,0x222cbcac
  4053d7:	jo     0x40537a
  4053d9:	xor    cl,BYTE PTR [edi]
  4053db:	push   cs
  4053dc:	out    0x45,eax
  4053de:	fiadd  WORD PTR [edx]
  4053e0:	fild   QWORD PTR [esi+0x3cd61683]
  4053e6:	mov    bl,0xb6
  4053e8:	outs   dx,DWORD PTR ds:[esi]
  4053e9:	inc    eax
  4053ea:	aad    0x67
  4053ec:	pop    ebp
  4053ed:	fist   WORD PTR [ebx-0x513b8c12]
  4053f3:	add    al,0xed
  4053f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053f6:	mov    WORD PTR [edi+0x6ee17ad8],ds
  4053fc:	cmp    al,0x21
  4053fe:	lods   al,BYTE PTR ds:[esi]
  4053ff:	cmp    al,0xf
  405401:	and    cl,BYTE PTR [ebx-0x3d]
  405404:	mov    ebx,0x11178933
  405409:	mov    bl,0xc0
  40540b:	in     al,dx
  40540c:	jns    0x405408
  40540e:	mov    ecx,0xc2efd933
  405413:	cwde   
  405414:	ret    
  405415:	popa   
  405416:	cmp    dl,BYTE PTR [edi-0x7a]
  405419:	pop    eax
  40541a:	inc    edx
  40541b:	sbb    eax,0xbb005560
  405420:	lods   eax,DWORD PTR ds:[esi]
  405421:	imul   DWORD PTR [edx]
  405423:	adc    cl,BYTE PTR [ecx]
  405425:	shl    esp,cl
  405427:	int3   
  405428:	aad    0x1c
  40542a:	(bad)  
  40542b:	mov    ds:0xb04e948a,al
  405430:	lds    edi,FWORD PTR [edx+0xe5f7d3f]
  405436:	and    DWORD PTR [edi],esp
  405438:	xchg   ebp,eax
  405439:	jbe    0x4053da
  40543b:	stos   DWORD PTR es:[edi],eax
  40543c:	bound  edi,QWORD PTR [ecx-0x5b71c154]
  405442:	out    0x98,al
  405444:	mov    ch,0xf
  405446:	sbb    BYTE PTR [esi+0x3589dcb5],0x84
  40544d:	push   0x9405af50
  405452:	int    0xa8
  405454:	mov    WORD PTR [edx-0x3e],?
  405457:	sar    DWORD PTR [edx],1
  405459:	in     eax,dx
  40545a:	inc    edi
  40545b:	or     eax,0x29022b3c
  405460:	stos   DWORD PTR es:[edi],eax
  405461:	int    0x6b
  405463:	jmp    0xd7d8:0x611788a7
  40546a:	mov    al,BYTE PTR [edi+0x2682ce78]
  405470:	inc    eax
  405471:	or     DWORD PTR [ebx-0x554efda0],edi
  405477:	add    DWORD PTR [edx],eax
  405479:	scas   eax,DWORD PTR es:[edi]
  40547a:	bound  esi,QWORD PTR [esi]
  40547c:	ins    DWORD PTR es:[edi],dx
  40547d:	ins    BYTE PTR es:[edi],dx
  40547e:	jmp    0x645b:0xa829e734
  405485:	mov    ecx,0x87916c16
  40548a:	xchg   ebp,eax
  40548b:	gs dec eax
  40548d:	mov    bh,0x85
  40548f:	retf   0xecf3
  405492:	jmp    0x4054f4
  405494:	jns    0x4054e3
  405496:	or     al,0x1c
  405498:	xchg   ebx,eax
  405499:	push   cs
  40549a:	xor    al,0x8
  40549c:	cs push eax
  40549e:	call   0x52ac29d0
  4054a3:	icebp  
  4054a4:	sub    eax,0xd704d371
  4054a9:	push   ebx
  4054aa:	adc    al,0xdc
  4054ac:	clc    
  4054ad:	xor    al,0xf
  4054af:	push   esi
  4054b0:	inc    eax
  4054b1:	pop    ss
  4054b2:	out    dx,al
  4054b3:	rol    BYTE PTR [edx],1
  4054b5:	fmul   DWORD PTR [ebx+0x60]
  4054b8:	rcr    BYTE PTR [eax],1
  4054ba:	and    ch,BYTE PTR [edi-0x3dbc10cb]
  4054c0:	mov    cs,WORD PTR [esi+0x7]
  4054c3:	int    0x1d
  4054c5:	push   cs
  4054c6:	stos   BYTE PTR es:[edi],al
  4054c7:	push   0xfa7383d9
  4054cc:	ds add esp,DWORD PTR gs:[ebx]
  4054d0:	test   eax,0x68842190
  4054d5:	retf   0x40d5
  4054d8:	sub    DWORD PTR [ecx+eiz*4],esi
  4054db:	xor    esp,eax
  4054dd:	adc    eax,0x552fc4c7
  4054e2:	cli    
  4054e3:	gs push 0xe7cf590a
  4054e9:	cmp    dl,BYTE PTR [ebx+0x3e0232c5]
  4054ef:	jne    0x40554f
  4054f1:	cmp    eax,0x9d05ebf
  4054f6:	dec    edx
  4054f7:	mov    eax,0xc203c7f4
  4054fc:	retf   
  4054fd:	jno    0x405519
  4054ff:	push   ecx
  405500:	jbe    0x405486
  405502:	xchg   edi,eax
  405503:	dec    ebx
  405504:	popf   
  405505:	test   DWORD PTR [ecx],ecx
  405507:	add    al,BYTE PTR [esi]
  405509:	outs   dx,BYTE PTR ds:[esi]
  40550a:	call   0x72e5:0x6e176353
  405511:	pop    edi
  405512:	test   BYTE PTR [ecx+0x6a],al
  405515:	sub    dh,BYTE PTR [edi-0x733b5385]
  40551b:	push   es
  40551c:	call   edx
  40551e:	or     DWORD PTR [ebp+0x38e6a328],0x57a633b1
  405528:	add    DWORD PTR [edi-0xbb54d4],edx
  40552e:	adc    esp,DWORD PTR [eax]
  405530:	push   0x5f25dd14
  405535:	jp     0x4054d9
  405537:	icebp  
  405538:	ss hlt 
  40553a:	sbb    BYTE PTR [edx+ebp*4],ah
  40553d:	or     eax,0xb5b2fe7
  405542:	push   ebp
  405543:	push   0xe8510210
  405548:	xchg   ebx,eax
  405549:	push   eax
  40554a:	mov    ch,0x3f
  40554c:	cmp    ecx,ebx
  40554e:	inc    edx
  40554f:	xchg   ah,bh
  405551:	mov    al,0x5a
  405553:	xchg   ecx,eax
  405554:	das    
  405555:	daa    
  405556:	mov    dl,0x14
  405558:	sbb    al,0x49
  40555a:	cwde   
  40555b:	mov    eax,0x40237298
  405560:	xor    eax,0xdca86eea
  405565:	dec    eax
  405566:	mov    esi,DWORD PTR [esi+0x49]
  405569:	xchg   edi,eax
  40556a:	xor    ebx,edi
  40556c:	push   ds
  40556d:	ret    0xe331
  405570:	int3   
  405571:	sub    ecx,DWORD PTR [ecx+0x2d9dc112]
  405577:	test   BYTE PTR ds:0xcdf5ae99,ah
  40557d:	adc    BYTE PTR [eax-0x52dc252],dl
  405583:	mov    ah,0x96
  405585:	mov    edx,0x18ea8fca
  40558a:	in     al,dx
  40558b:	and    eax,0xb191ed98
  405590:	sbb    eax,0x3b9aebc7
  405595:	sbb    ecx,ecx
  405597:	pop    es
  405598:	dec    edx
  405599:	sbb    DWORD PTR [ecx+0x69],ecx
  40559c:	mov    ebx,0x29c3b46d
  4055a1:	ret    0xb968
  4055a4:	mov    cs,WORD PTR [edi]
  4055a6:	jmp    0x857a:0x2a5d3fbd
  4055ad:	xchg   ebp,eax
  4055ae:	dec    ebx
  4055af:	push   eax
  4055b0:	leave  
  4055b1:	jecxz  0x4055ca
  4055b3:	and    ch,BYTE PTR [edx]
  4055b5:	push   esp
  4055b6:	repz mov esi,0x37abba9a
  4055bc:	jbe    0x40558b
  4055be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055bf:	mov    ebx,0x3c0de3cb
  4055c4:	int3   
  4055c5:	out    dx,eax
  4055c6:	lds    eax,FWORD PTR [ecx]
  4055c8:	pop    edx
  4055c9:	xor    dl,BYTE PTR [eax-0x16]
  4055cc:	pop    esp
  4055cd:	outs   dx,BYTE PTR ds:[esi]
  4055ce:	stc    
  4055cf:	fild   DWORD PTR [eax]
  4055d1:	(bad)  
  4055d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055d3:	mov    eax,ds:0x61c16f7e
  4055d8:	aam    0xb6
  4055da:	jns    0x4055f1
  4055dc:	retf   0x62ef
  4055df:	push   esp
  4055e0:	mov    DWORD PTR [ecx+0x4d],edi
  4055e3:	shr    BYTE PTR [edx+0x57],1
  4055e6:	pop    ebp
  4055e7:	lds    ecx,FWORD PTR [eax+0x5d]
  4055ea:	xor    eax,0xd31fd99f
  4055ef:	(bad)  
  4055f0:	fmul   QWORD PTR [eax+0x46954948]
  4055f6:	inc    ebp
  4055f7:	add    bh,BYTE PTR [ebp-0x4d7aae84]
  4055fd:	and    al,ch
  4055ff:	in     eax,dx
  405600:	mov    edx,0xa2ff4620
  405605:	leave  
  405606:	fnstsw WORD PTR [edx+eiz*2+0x63]
  40560a:	(bad)
  40560f:	aam    0xd1
  405611:	jne    0x405658
  405613:	push   ebx
  405614:	xchg   ebx,eax
  405615:	sub    al,0xbf
  405617:	xor    edx,DWORD PTR ds:0x728d9c31
  40561d:	out    0xc,al
  40561f:	and    eax,0x10d02d4f
  405624:	lea    edi,[edi]
  405626:	push   ds
  405627:	sbb    bh,al
  405629:	add    al,0x93
  40562b:	dec    eax
  40562c:	cmp    BYTE PTR [edi],dh
  40562e:	aas    
  40562f:	xchg   ecx,eax
  405630:	xor    DWORD PTR [edx],eax
  405632:	push   0xbc053a44
  405637:	or     eax,0xe077d123
  40563c:	mov    esp,0x95a7677c
  405641:	pop    ss
  405642:	push   edx
  405643:	mov    ds:0xc7866f10,eax
  405648:	xor    BYTE PTR [ebp+ebp*2-0x5d],ch
  40564c:	sbb    eax,0x7892d689
  405651:	cmp    eax,0xc5a9664b
  405656:	scas   eax,DWORD PTR es:[edi]
  405657:	pop    ss
  405658:	push   ds
  405659:	jle    0x405661
  40565b:	ins    DWORD PTR es:[edi],dx
  40565c:	jno    0x405638
  40565e:	mov    ds:0xd42ad76f,al
  405663:	jb     0x405629
  405665:	inc    ebx
  405666:	add    al,0x12
  405668:	scas   al,BYTE PTR es:[edi]
  405669:	sbb    dl,ah
  40566b:	ret    0x9037
  40566e:	mov    al,ds:0x9678a9cc
  405673:	adc    cl,BYTE PTR [eax+edx*4]
  405676:	adc    al,0xe4
  405678:	ret    
  405679:	mov    ch,0xc4
  40567b:	aas    
  40567c:	pop    ss
  40567d:	jo     0x4056c3
  40567f:	sub    al,0x25
  405681:	xchg   ebx,eax
  405682:	sbb    ecx,0xffffffda
  405685:	mov    ebx,0xd28b116b
  40568a:	push   ss
  40568b:	(bad)  
  40568c:	call   0xd05bf23
  405691:	push   cs
  405692:	ror    edx,1
  405694:	cwde   
  405695:	push   0xe4da4a95
  40569a:	lock (bad) [edx]
  40569d:	enter  0x8769,0x4d
  4056a1:	fwait
  4056a2:	dec    ebx
  4056a3:	mov    dh,0x92
  4056a5:	adc    eax,0x3d4264fa
  4056aa:	mov    ch,0x43
  4056ac:	xchg   edi,eax
  4056ad:	and    BYTE PTR fs:[edx-0x36fc21e3],bh
  4056b4:	ror    DWORD PTR [edx+0x4d1b7e96],1
  4056ba:	adc    dh,BYTE PTR [edx-0x18]
  4056bd:	mov    WORD PTR [ebp+0x222a79bb],es
  4056c3:	cmp    DWORD PTR [ecx],esi
  4056c5:	sub    DWORD PTR [eax+0x7745721e],0xffffffbf
  4056cc:	imul   edx,DWORD PTR [edx-0x3c1b59e3],0x90b12914
  4056d6:	outs   dx,BYTE PTR ds:[esi]
  4056d7:	stos   BYTE PTR es:[edi],al
  4056d8:	scas   al,BYTE PTR es:[edi]
  4056d9:	or     al,bl
  4056db:	push   ecx
  4056dc:	(bad)  
  4056de:	test   DWORD PTR [edi+ecx*8-0x1e],esp
  4056e2:	push   0xffffffa6
  4056e4:	mov    esi,0x597c98e6
  4056e9:	neg    BYTE PTR [edx+0x3]
  4056ec:	or     ch,0x31
  4056ef:	xchg   ebp,eax
  4056f0:	ins    BYTE PTR es:[edi],dx
  4056f1:	cdq    
  4056f2:	xchg   ecx,eax
  4056f3:	jbe    0x4056bc
  4056f5:	mov    al,BYTE PTR [eax]
  4056f7:	lds    esi,FWORD PTR [eax]
  4056f9:	ret    0xa333
  4056fc:	fs dec edx
  4056fe:	jb     0x405681
  405700:	push   ecx
  405701:	inc    esp
  405702:	dec    esp
  405704:	sbb    bh,bl
  405706:	add    bh,BYTE PTR ds:0x24810a3e
  40570c:	dec    edx
  40570d:	ins    BYTE PTR es:[edi],dx
  40570e:	pop    ds
  40570f:	data16 test BYTE PTR [edx],ah
  405712:	adc    BYTE PTR [ebp-0x26],al
  405715:	sbb    edx,DWORD PTR [eax]
  405717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405718:	push   edi
  405719:	jmp    0xa8ae:0xa2ead122
  405720:	jnp    0x4056fb
  405722:	mov    ch,0x1e
  405724:	push   0x24b89c65
  405729:	mov    al,ds:0xc2b5ea27
  40572e:	mul    DWORD PTR [ebx+0x3d58a4a7]
  405734:	nop
  405735:	lahf   
  405736:	jle    0x40577f
  405738:	leave  
  405739:	cmp    eax,0xdf1252cd
  40573e:	dec    edx
  40573f:	cdq    
  405740:	cmp    al,0x81
  405742:	pop    esp
  405743:	xchg   esp,eax
  405744:	sahf   
  405745:	gs icebp 
  405747:	out    0x9a,al
  405749:	and    esi,0x8dc209db
  40574f:	ret    0x388d
  405752:	cmp    eax,0x632b66fb
  405757:	mov    eax,ds:0x15d51239
  40575c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40575d:	push   esi
  40575e:	stc    
  40575f:	fst    QWORD PTR [edx-0x5b47b394]
  405765:	call   0x5c7e3c75
  40576a:	ja     0x405770
  40576c:	inc    ecx
  40576d:	aam    0xd8
  40576f:	jns    0x405717
  405771:	jmp    0xc3a5:0x721eb889
  405778:	cdq    
  405779:	fldenv [ecx+0x488debd3]
  40577f:	dec    ecx
  405780:	sub    ebx,DWORD PTR ss:[esi+0x53]
  405784:	or     BYTE PTR [esi],ch
  405786:	and    eax,0x92c2b70b
  40578b:	bound  edx,QWORD PTR [ebx+0x10]
  40578e:	popa   
  40578f:	bound  ebx,QWORD PTR [ebp-0x46]
  405792:	adc    edi,DWORD PTR [ebp-0x53]
  405795:	hlt    
  405796:	outs   dx,BYTE PTR ds:[esi]
  405797:	out    dx,eax
  405798:	fidivr WORD PTR [ecx+edi*1]
  40579b:	(bad)  
  40579c:	push   ebp
  40579d:	loop   0x405735
  40579f:	in     eax,dx
  4057a0:	xchg   esp,eax
  4057a1:	pusha  
  4057a2:	push   ebx
  4057a3:	or     eax,0x73bf9ad5
  4057a8:	jno    0x4057a7
  4057aa:	mov    bl,0x70
  4057ac:	fstp   DWORD PTR [ecx-0x4b]
  4057af:	dec    ecx
  4057b0:	sub    esi,DWORD PTR [ebx]
  4057b2:	je     0x4057a4
  4057b4:	fs int 0x7b
  4057b7:	clc    
  4057b8:	pop    ecx
  4057b9:	lahf   
  4057ba:	cli    
  4057bb:	jl     0x40574c
  4057bd:	jmp    0x1899c1f4
  4057c2:	cwde   
  4057c3:	hlt    
  4057c4:	rcl    ebx,0x40
  4057c7:	addr16 nop
  4057c9:	inc    ebx
  4057ca:	gs ds inc ecx
  4057cd:	pushf  
  4057ce:	fisub  DWORD PTR [ebx+ebx*2]
  4057d1:	mov    fs,WORD PTR [ebp+0x55781b55]
  4057d7:	stos   BYTE PTR es:[edi],al
  4057d8:	push   ss
  4057d9:	mov    ds:0x820223f9,eax
  4057de:	iret   
  4057df:	dec    ebx
  4057e0:	jo     0x405787
  4057e2:	mov    al,ds:0x6549aee5
  4057e7:	lea    ebx,[ebp+eax*2-0x3f]
  4057eb:	int    0x55
  4057ed:	ds test al,0xb0
  4057f0:	mov    bl,0x5a
  4057f2:	(bad)  
  4057f3:	retf   
  4057f4:	test   eax,0xbe0f9326
  4057f9:	inc    ebx
  4057fa:	add    ax,0xeea8
  4057fe:	jge    0x405815
  405800:	push   esp
  405801:	dec    edi
  405802:	and    al,0x2a
  405804:	push   esi
  405805:	sbb    eax,0x7084d5b3
  40580a:	stos   DWORD PTR es:[edi],eax
  40580b:	xchg   BYTE PTR [ebx],bh
  40580d:	adc    al,0xfe
  40580f:	mov    WORD PTR [ebp+0x1d],es
  405812:	dec    eax
  405813:	loope  0x405885
  405815:	fstp   st(4)
  405817:	mov    BYTE PTR [esi+esi*2],al
  40581a:	dec    ecx
  40581b:	lods   eax,DWORD PTR ds:[esi]
  40581c:	(bad)  
  40581d:	adc    ebx,DWORD PTR [eax-0x6f830ec6]
  405823:	ds push esp
  405825:	cmp    eax,0x39a30e47
  40582a:	pop    ecx
  40582b:	mov    ah,0x88
  40582d:	dec    ebp
  40582e:	xchg   DWORD PTR [edi],ecx
  405830:	add    bl,ah
  405832:	mov    BYTE PTR ds:0x5f6a7796,0x1e
  405839:	jp     0x4057f3
  40583b:	mov    bh,0x7c
  40583d:	ror    BYTE PTR [edx-0x18573dab],1
  405843:	pop    ebx
  405844:	loope  0x4057dd
  405846:	out    dx,al
  405847:	(bad)  
  405848:	(bad)  
  405849:	jmp    0x405839
  40584b:	mov    ds:0x11051eb0,al
  405850:	pushf  
  405851:	mov    ch,0xcf
  405853:	jg     0x405882
  405855:	jns    0x4058a4
  405857:	jmp    0xa746baf3
  40585c:	test   eax,0x1cffb54
  405861:	data16 (bad) 
  405864:	mov    eax,0x87f7e200
  405869:	sbb    eax,0x5dd94c5e
  40586e:	inc    esi
  40586f:	retf   
  405870:	inc    esi
  405871:	fmulp  st(0),st
  405873:	pop    esp
  405874:	nop
  405875:	or     al,0x88
  405877:	mov    edx,0x71dd18df
  40587c:	sub    BYTE PTR [eax],al
  40587e:	push   edi
  40587f:	jle    0x4058c4
  405881:	daa    
  405882:	xor    al,0x8d
  405884:	int3   
  405885:	pop    ebx
  405886:	fdivr  DWORD PTR [ebp-0x21]
  405889:	push   0x48
  40588b:	cmp    BYTE PTR [edx+ecx*4+0x42a67598],ch
  405892:	jle    0x40581c
  405894:	inc    ecx
  405895:	mov    BYTE PTR [eax+ebx*2],dl
  405898:	xchg   esp,eax
  405899:	std    
  40589a:	add    BYTE PTR [edi-0x7977d4e5],al
  4058a0:	hlt    
  4058a1:	js     0x4058d8
  4058a3:	pop    ebp
  4058a4:	mov    es:0xc3f3526c,al
  4058aa:	lock hlt 
  4058ac:	iret   
  4058ad:	int    0x6f
  4058af:	jbe    0x405922
  4058b1:	bound  ecx,QWORD PTR [edx]
  4058b3:	hlt    
  4058b4:	scas   eax,DWORD PTR es:[edi]
  4058b5:	sbb    al,BYTE PTR [ebx]
  4058b7:	cs adc al,0xbc
  4058ba:	neg    BYTE PTR [ebx+edi*1+0x7c]
  4058be:	pusha  
  4058bf:	(bad)  
  4058c0:	(bad)  
  4058c1:	push   ss
  4058c2:	sub    ebx,DWORD PTR [ecx]
  4058c4:	cdq    
  4058c5:	loopne 0x405873
  4058c7:	iret   
  4058c8:	cvtpi2ps xmm3,QWORD PTR [ebp+edx*8+0x3142e16f]
  4058d0:	inc    ebp
  4058d1:	cmp    esi,DWORD PTR [eax+0x46]
  4058d4:	cli    
  4058d5:	addr16 push esp
  4058d7:	push   edi
  4058d8:	fs cli 
  4058da:	xor    DWORD PTR [edi+0x3c11e23],ecx
  4058e0:	push   0xfd261846
  4058e5:	inc    ebp
  4058e6:	mov    BYTE PTR [ebp-0x67],al
  4058e9:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4058eb:	aaa    
  4058ec:	add    esp,ebp
  4058ee:	outs   dx,DWORD PTR ds:[esi]
  4058ef:	call   0x8961218f
  4058f4:	stos   BYTE PTR es:[edi],al
  4058f5:	mov    ch,0xe6
  4058f7:	arpl   WORD PTR [ebp+0x771e03e8],ax
  4058fd:	jp     0x4058c1
  4058ff:	aas    
  405900:	xor    dl,bh
  405902:	out    0x95,al
  405904:	lea    esp,[eax]
  405906:	(bad)  
  405907:	aaa    
  405908:	and    al,0x26
  40590a:	and    al,0x3a
  40590c:	daa    
  40590d:	int3   
  40590e:	xor    eax,0x8d26eb15
  405913:	mov    ah,0x5b
  405915:	fcomp  QWORD PTR [edx-0x60]
  405918:	adc    DWORD PTR [ecx-0x16],edx
  40591b:	pop    ecx
  40591c:	or     DWORD PTR [edx],edx
  40591e:	ror    BYTE PTR [ecx+0x2017b70],0x9b
  405925:	push   ds
  405926:	mov    ecx,0x13959815
  40592b:	mov    cl,0xe4
  40592d:	sbb    al,0x68
  40592f:	xchg   esp,eax
  405930:	add    DWORD PTR [eax-0x59848ca5],eax
  405936:	pop    DWORD PTR [ecx+0x15]
  405939:	push   0xdb9615dc
  40593e:	pushf  
  40593f:	test   BYTE PTR [ecx],bh
  405941:	pop    edi
  405942:	dec    ebx
  405943:	stos   BYTE PTR es:[edi],al
  405944:	loope  0x405918
  405946:	rcl    DWORD PTR [edx],0x37
  405949:	mov    ah,0xf
  40594b:	jae    0x4058e6
  40594d:	or     ah,BYTE PTR [eax]
  40594f:	ret    0x9ba0
  405952:	or     DWORD PTR [edi-0x5d],ebx
  405955:	jp     0x405917
  405957:	add    BYTE PTR [ebx],0x94
  40595a:	sub    edx,DWORD PTR ds:0x4b8a7f08
  405960:	out    0x15,eax
  405962:	shr    DWORD PTR [edi+0x157f75f8],cl
  405968:	mov    dh,0xf9
  40596a:	xchg   DWORD PTR [edi],ebp
  40596c:	(bad)  
  40596d:	inc    esp
  40596e:	push   ds
  40596f:	sbb    DWORD PTR [ecx],ebp
  405971:	(bad)  
  405972:	cli    
  405973:	jb     0x4059a5
  405975:	popf   
  405976:	jmp    0xb44d:0x2f8c9b56
  40597d:	mov    BYTE PTR [edi+esi*1-0x11],bh
  405981:	ss ja  0x4059d0
  405984:	cmp    ecx,eax
  405986:	(bad)  
  405987:	sar    DWORD PTR [esi+eax*4],cl
  40598a:	xlat   BYTE PTR ds:[ebx]
  40598b:	push   ebx
  40598c:	sbb    eax,0xe3a58e14
  405991:	pop    ds
  405992:	mov    cl,0xd7
  405994:	ficomp DWORD PTR gs:[ecx+0x1bae83b3]
  40599b:	xchg   esi,eax
  40599c:	push   ecx
  40599d:	mov    dl,0x42
  40599f:	xchg   BYTE PTR [esi-0x2e443c61],dl
  4059a5:	and    BYTE PTR [eax+0x4b],bh
  4059a8:	bound  esi,QWORD PTR [edi-0x6d]
  4059ab:	push   esi
  4059ac:	mov    BYTE PTR [ecx-0x59462d2e],bl
  4059b2:	outs   dx,BYTE PTR ds:[esi]
  4059b3:	mov    WORD PTR ds:0x3feebd17,cs
  4059b9:	pop    ds
  4059ba:	pop    ecx
  4059bb:	(bad)  
  4059bc:	in     al,dx
  4059bd:	(bad)  
  4059be:	cdq    
  4059bf:	das    
  4059c0:	mov    cl,0x36
  4059c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059c3:	inc    ecx
  4059c4:	mov    DWORD PTR [eax-0x215b0c6c],esi
  4059ca:	out    dx,eax
  4059cb:	mov    ebp,DWORD PTR [ecx]
  4059cd:	in     eax,0x4a
  4059cf:	mov    ebx,0x4b55f7be
  4059d4:	repnz in al,0x2c
  4059d7:	dec    ebp
  4059d8:	jp     0x405984
  4059da:	frstor [edi-0x4fce4a2c]
  4059e0:	pop    esp
  4059e1:	mov    bl,BYTE PTR [edx]
  4059e3:	and    DWORD PTR [ebp+0x29],0xffffff86
  4059e7:	iret   
  4059e8:	xor    eax,esi
  4059ea:	shr    BYTE PTR [edi-0x2d],0xa7
  4059ee:	dec    esi
  4059ef:	enter  0x79db,0x75
  4059f3:	sbb    cl,BYTE PTR [esi]
  4059f5:	jge    0x4059d0
  4059f7:	mov    ebp,0x217ac941
  4059fc:	sub    al,0xa9
  4059fe:	out    dx,eax
  4059ff:	cmp    dl,BYTE PTR [ebp+0x6492acf8]
  405a05:	or     ecx,esi
  405a07:	xchg   esp,eax
  405a08:	shr    BYTE PTR [ebp+0x55f2e5cb],0x1c
  405a0f:	cld    
  405a10:	fs fstp st(7)
  405a13:	stos   DWORD PTR es:[edi],eax
  405a14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a15:	lock or DWORD PTR [ecx+0x74786247],0xd172b0d7
  405a20:	ins    BYTE PTR es:[edi],dx
  405a21:	pop    esp
  405a22:	and    DWORD PTR [esi-0x2],ebx
  405a25:	sub    dh,BYTE PTR [esi-0x32]
  405a28:	adc    cl,dh
  405a2a:	push   es
  405a2b:	(bad)  
  405a2c:	and    eax,0xc88877a3
  405a31:	sub    eax,0x83fed5fd
  405a36:	inc    ah
  405a38:	xor    al,0xe
  405a3a:	sti    
  405a3b:	call   0x404f:0x6866362f
  405a42:	loopne 0x405a50
  405a44:	xchg   BYTE PTR [eax+0x1],dl
  405a47:	iret   
  405a48:	imul   eax,edi,0xffffffc9
  405a4b:	icebp  
  405a4c:	daa    
  405a4d:	pusha  
  405a4e:	loope  0x405a50
  405a50:	adc    eax,0x125b89b3
  405a55:	stos   DWORD PTR es:[edi],eax
  405a56:	mov    eax,ds:0x42dbd4c7
  405a5b:	cmp    eax,0x89abd404
  405a60:	or     esi,DWORD PTR [edx]
  405a62:	sbb    esp,esi
  405a64:	jne    0x405ae3
  405a66:	test   DWORD PTR [ecx],eax
  405a68:	(bad)  
  405a69:	js     0x405a9f
  405a6b:	rol    DWORD PTR [ebp-0x31],cl
  405a6e:	mov    bl,0x73
  405a70:	pusha  
  405a71:	sbb    ah,BYTE PTR [edx-0x69]
  405a74:	fsubp  st(5),st
  405a76:	(bad)  
  405a78:	inc    ebx
  405a79:	call   0x2e2e:0x74cfdc1a
  405a80:	xor    al,0x3d
  405a82:	fstp   st(7)
  405a84:	and    BYTE PTR [ecx],al
  405a86:	ret    
  405a87:	inc    ecx
  405a88:	mov    edx,0x5cfb12a4
  405a8d:	pop    ss
  405a8e:	stos   DWORD PTR es:[edi],eax
  405a8f:	jmp    0xd81b:0x7314e3ad
  405a96:	es mov eax,0x609e69e0
  405a9c:	in     eax,dx
  405a9d:	mov    eax,ds:0x5ff295ad
  405aa2:	outs   dx,BYTE PTR ds:[esi]
  405aa3:	add    edi,DWORD PTR [edi-0x78]
  405aa6:	push   0x38
  405aa8:	mov    bl,0xac
  405aaa:	(bad)  
  405aab:	push   0xc30a17db
  405ab0:	scas   al,BYTE PTR es:[edi]
  405ab1:	imul   ebp,DWORD PTR [ecx],0x24
  405ab4:	inc    ebx
  405ab5:	pop    ds
  405ab6:	jle    0x405abd
  405ab8:	or     ebp,DWORD PTR gs:[ebx-0x2a]
  405abc:	loope  0x405af9
  405abe:	mov    ds:0xf9eb01ef,eax
  405ac3:	jmp    0x14113cec
  405ac8:	mov    al,ds:0xea119a50
  405acd:	xor    DWORD PTR [edx+0x4febb84],esp
  405ad3:	imul   eax,DWORD PTR [ebp-0x45f8beb5],0xee37d9db
  405add:	push   0x5d
  405adf:	mov    BYTE PTR [ecx-0x79cb088a],ch
  405ae5:	adc    ah,BYTE PTR [eax]
  405ae7:	test   al,0xc6
  405ae9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405aea:	push   ds
  405aeb:	leave  
  405aec:	jae    0x405af7
  405aee:	sub    DWORD PTR [ecx-0x18a433b4],ebx
  405af4:	or     ebx,DWORD PTR [eax-0x43434874]
  405afa:	gs xor dh,dl
  405afd:	std    
  405afe:	cmp    ecx,DWORD PTR [ecx]
  405b00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b01:	cmp    BYTE PTR [ebx+edx*2+0x27],bh
  405b05:	(bad)  
  405b07:	addr16 loope 0x405b78
  405b0a:	call   0xa2ba:0x608d2522
  405b11:	ret    
  405b12:	clc    
  405b13:	test   eax,0x4c9022d3
  405b18:	std    
  405b19:	push   esp
  405b1a:	cdq    
  405b1b:	pop    es
  405b1c:	mov    ebx,0x567bc331
  405b21:	(bad)  
  405b22:	push   0xd7b240a3
  405b27:	jmp    0x723ae57c
  405b2c:	mov    ds:0x39dd36c1,eax
  405b31:	mov    ebp,0xc6984212
  405b36:	dec    esi
  405b37:	loope  0x405abf
  405b39:	push   ebp
  405b3a:	jp     0x405b29
  405b3c:	inc    edx
  405b3d:	jle    0x405ac5
  405b3f:	xchg   ecx,eax
  405b40:	mov    gs,WORD PTR [edi+0x2a]
  405b43:	int3   
  405b44:	push   eax
  405b45:	pusha  
  405b46:	mov    bh,0x5a
  405b48:	jmp    0x8767a413
  405b4d:	ss adc al,0xc5
  405b50:	repnz and BYTE PTR [ebx],dh
  405b53:	addr16 dec eax
  405b55:	jb     0x405b3e
  405b57:	in     al,dx
  405b58:	std    
  405b59:	es mov edi,0x1a59c1d6
  405b5f:	adc    BYTE PTR [ecx+0x7297e45e],0xa0
  405b66:	ins    BYTE PTR es:[edi],dx
  405b67:	pop    ecx
  405b68:	mov    al,ds:0x60ae4c4a
  405b6d:	mov    edi,0xfea71a64
  405b73:	scas   al,BYTE PTR es:[edi]
  405b74:	sahf   
  405b75:	jne    0x405baa
  405b77:	out    0x21,al
  405b79:	enter  0x79e2,0xea
  405b7d:	fwait
  405b7e:	stos   DWORD PTR es:[edi],eax
  405b7f:	mov    esi,0x14d67133
  405b84:	pop    esi
  405b85:	jbe    0x405b16
  405b87:	aam    0x54
  405b89:	pop    DWORD PTR [esi]
  405b8b:	retf   0x4440
  405b8e:	dec    ecx
  405b8f:	into   
  405b90:	arpl   WORD PTR [esp+esi*1],bx
  405b93:	mov    eax,DWORD PTR [eax]
  405b95:	int    0xd3
  405b97:	mov    eax,0x9ec711f5
  405b9c:	in     eax,dx
  405b9d:	loope  0x405ba4
  405b9f:	pushf  
  405ba0:	inc    esp
  405ba1:	inc    eax
  405ba2:	jge    0x405b4f
  405ba4:	mov    cl,0x9c
  405ba6:	in     eax,dx
  405ba7:	out    0x21,eax
  405ba9:	xor    BYTE PTR [eax],0xce
  405bac:	sti    
  405bad:	xor    ah,al
  405baf:	and    ch,0x1c
  405bb2:	test   DWORD PTR [eax],ecx
  405bb4:	or     dh,bh
  405bb6:	pop    eax
  405bb7:	add    eax,0x4b2d8e59
  405bbc:	leave  
  405bbd:	and    ah,bl
  405bbf:	ror    al,cl
  405bc1:	sbb    esp,DWORD PTR [esi+0x4f81de9a]
  405bc7:	in     eax,0xb0
  405bc9:	mov    ebx,0x9220a7d8
  405bce:	cmc    
  405bcf:	jo     0x405b8e
  405bd1:	dec    edi
  405bd2:	push   edx
  405bd3:	xchg   esi,eax
  405bd4:	fcom   QWORD PTR [edi]
  405bd6:	push   eax
  405bd7:	adc    eax,0x29e1f921
  405bdc:	push   ecx
  405bdd:	out    0x74,al
  405bdf:	mov    ecx,0xef24e539
  405be4:	push   esp
  405be5:	shl    DWORD PTR [esi+eax*8+0x78bdbed7],0xd
  405bed:	inc    ebp
  405bee:	sub    al,0xa5
  405bf0:	adc    esi,DWORD PTR [ebp+0x64276c8]
  405bf6:	jb     0x405bee
  405bf8:	xor    esp,edi
  405bfa:	es xchg ecx,eax
  405bfc:	pop    esp
  405bfd:	fnstcw WORD PTR [edi]
  405bff:	(bad)  
  405c00:	and    ecx,edi
  405c02:	mov    bl,0x24
  405c04:	mov    ebx,0xb6ed8346
  405c09:	push   0x5ba64190
  405c0e:	inc    ebp
  405c0f:	rcr    DWORD PTR [ebp+edx*2-0x60],0x83
  405c14:	(bad)  
  405c15:	mov    edx,0xc198006e
  405c1a:	inc    edx
  405c1b:	jmp    0x2939:0x87666062
  405c22:	clc    
  405c23:	mov    cl,bl
  405c25:	out    0x79,al
  405c27:	push   eax
  405c28:	scas   al,BYTE PTR es:[edi]
  405c29:	fs gs sti 
  405c2c:	dec    esi
  405c2d:	cmp    ecx,ebp
  405c2f:	sub    eax,0x9af34269
  405c34:	cmp    al,0x56
  405c36:	xor    DWORD PTR [eax+0x5770bbb7],esi
  405c3c:	shr    BYTE PTR [eax],1
  405c3e:	hlt    
  405c3f:	(bad)  
  405c40:	cli    
  405c41:	pop    ebx
  405c42:	inc    esp
  405c43:	jns    0x405cbc
  405c45:	xor    al,BYTE PTR ds:0x47f85cb3
  405c4b:	mov    edi,0xb0bf9fd8
  405c50:	push   ecx
  405c51:	out    dx,al
  405c52:	adc    bh,BYTE PTR ss:[ecx-0x39]
  405c56:	jne    0x405ca8
  405c58:	dec    edi
  405c59:	js     0x405c91
  405c5b:	iret   
  405c5c:	mov    ch,0xfd
  405c5e:	pop    edi
  405c5f:	outs   dx,BYTE PTR ds:[esi]
  405c60:	aam    0xb8
  405c62:	push   esp
  405c63:	push   edx
  405c64:	dec    eax
  405c65:	mov    ebp,0x17397769
  405c6a:	arpl   WORD PTR [edx],sp
  405c6c:	xor    al,0x54
  405c6e:	jns    0x405bfa
  405c70:	leave  
  405c71:	imul   DWORD PTR [esi+esi*4+0x57]
  405c75:	pop    esp
  405c76:	xchg   BYTE PTR [eax],bh
  405c78:	retf   
  405c79:	js     0x405c87
  405c7b:	mov    cl,0xcd
  405c7d:	std    
  405c7e:	xchg   esp,eax
  405c7f:	adc    ebx,DWORD PTR ds:[edi-0x4f]
  405c83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c84:	xor    BYTE PTR [ecx+ebp*8],al
  405c87:	data16 aaa 
  405c89:	xchg   esi,eax
  405c8a:	mov    ah,0xdb
  405c8c:	or     DWORD PTR [ecx],ebx
  405c8e:	je     0x405c1d
  405c90:	ror    BYTE PTR [esi-0xa7ed193],1
  405c96:	cwde   
  405c97:	jne    0x405ccc
  405c99:	std    
  405c9a:	mov    ecx,0x2ae0c15a
  405c9f:	in     eax,0xaa
  405ca1:	cmp    DWORD PTR ds:0x8458631e,esp
  405ca7:	inc    ecx
  405ca8:	ss pop edx
  405caa:	push   edx
  405cab:	retf   0x99eb
  405cae:	(bad)  
  405cb1:	test   DWORD PTR [eax+0x66c39f7a],ebx
  405cb7:	cs rcr cl,0x14
  405cbb:	push   0xffffffb5
  405cbd:	jecxz  0x405cb0
  405cbf:	or     DWORD PTR [esi-0x39],eax
  405cc2:	sbb    ch,ch
  405cc4:	icebp  
  405cc5:	inc    ecx
  405cc6:	push   ds
  405cc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cc8:	mov    dh,0xcb
  405cca:	jg     0x405c52
  405ccc:	hlt    
  405ccd:	pop    ebp
  405cce:	(bad)  
  405cd0:	fwait
  405cd1:	and    edx,DWORD PTR [ecx-0x6d]
  405cd4:	push   ss
  405cd5:	les    esp,FWORD PTR [edi+0x53]
  405cd8:	push   ds
  405cd9:	fisubr WORD PTR [edx+0x4d484ec3]
  405cdf:	ss adc al,0x5a
  405ce2:	test   BYTE PTR [edi-0x14579bcd],0x25
  405ce9:	idiv   DWORD PTR [edi+eax*4+0x18]
  405ced:	outs   dx,DWORD PTR ds:[esi]
  405cee:	push   0x1d
  405cf0:	popa   
  405cf1:	shl    BYTE PTR [edx+0x32fe1070],cl
  405cf7:	test   BYTE PTR [esi+0x48],bl
  405cfa:	push   es
  405cfb:	les    edx,FWORD PTR [ebp*8-0x5f5d99c0]
  405d02:	test   al,0x69
  405d04:	loope  0x405cc0
  405d06:	sbb    ah,BYTE PTR [eax+0x4a]
  405d09:	cmp    BYTE PTR [edi],ah
  405d0b:	mov    esi,0x210f39cd
  405d10:	xchg   esp,eax
  405d11:	xchg   DWORD PTR [esi],esp
  405d13:	clc    
  405d14:	sbb    BYTE PTR [eax],ah
  405d16:	or     edx,ecx
  405d18:	fild   WORD PTR [ebp-0x13]
  405d1b:	and    dl,al
  405d1d:	(bad)  
  405d1f:	inc    eax
  405d20:	mov    edi,0xb3fb51a7
  405d25:	test   al,0xc9
  405d27:	repnz mov cl,0xf2
  405d2a:	test   eax,0x3b248a54
  405d2f:	cmp    DWORD PTR [ebp+0x2463910f],ebx
  405d35:	les    edx,FWORD PTR [esi-0x79]
  405d38:	xor    DWORD PTR [eax],esp
  405d3a:	jmp    0x405d49
  405d3c:	mov    esp,0x10ac6af6
  405d41:	push   es
  405d42:	xor    dl,bl
  405d44:	repz in al,dx
  405d46:	stos   BYTE PTR es:[edi],al
  405d47:	lds    ebp,FWORD PTR [ecx+eiz*1]
  405d4a:	jno    0x405d8e
  405d4c:	js     0x405d3f
  405d4e:	xor    edx,edx
  405d50:	stc    
  405d51:	add    ah,BYTE PTR [esi-0x4b5bf09e]
  405d57:	xor    BYTE PTR [esp+edi*1-0x71],0x28
  405d5c:	sbb    ebp,DWORD PTR [ecx+0x6ced3e3c]
  405d62:	retf   
  405d63:	sbb    edx,eax
  405d65:	aam    0xb7
  405d67:	int3   
  405d68:	pop    ebx
  405d69:	push   ds
  405d6a:	xor    eax,0x793cb442
  405d6f:	xchg   BYTE PTR [edi],dl
  405d71:	neg    BYTE PTR ds:0xb9ab82bc
  405d77:	or     dl,ah
  405d79:	aam    0x18
  405d7b:	aaa    
  405d7c:	sub    ecx,ecx
  405d7e:	push   ebx
  405d7f:	ret    0x9fb9
  405d82:	xchg   edx,eax
  405d83:	sub    edx,edx
  405d85:	sbb    BYTE PTR [esi],0x72
  405d88:	pop    ss
  405d89:	les    esi,FWORD PTR [edi+0x71]
  405d8c:	or     al,0x9a
  405d8e:	test   DWORD PTR [edx+ebx*4-0x935b728],ebp
  405d95:	std    
  405d96:	xchg   edx,eax
  405d97:	add    al,0x16
  405d99:	mov    es,WORD PTR [eax+ebp*4]
  405d9c:	pop    ecx
  405d9d:	fs pop edi
  405d9f:	std    
  405da0:	add    BYTE PTR [ecx+0x53],ch
  405da3:	popa   
  405da4:	sub    al,0xd6
  405da6:	cs pop edi
  405da8:	inc    ecx
  405da9:	cmc    
  405daa:	adc    esi,DWORD PTR [edi-0x6b51c60f]
  405db0:	cdq    
  405db1:	jbe    0x405d9b
  405db3:	dec    ebx
  405db4:	cmp    eax,0x3b50f70c
  405db9:	arpl   WORD PTR [eax+0x5c],sp
  405dbc:	std    
  405dbd:	mov    ds:0x91e489e0,al
  405dc2:	icebp  
  405dc3:	enter  0xbf4b,0x55
  405dc7:	shl    DWORD PTR [eax+eax*8-0x64148fb0],1
  405dce:	sub    eax,0x155b326e
  405dd3:	imul   edi,eax,0x46789387
  405dd9:	mov    DWORD PTR [edx+0x79],esp
  405ddc:	imul   ebp,DWORD PTR [ebp-0x64c3b71c],0x3c
  405de3:	add    ah,BYTE PTR [edi]
  405de5:	addr16 dec esp
  405de7:	dec    ecx
  405de8:	xor    al,BYTE PTR [ebp-0x4bc69158]
  405dee:	mov    eax,0xce8b75c9
  405df3:	push   ebp
  405df4:	cmc    
  405df5:	cld    
  405df6:	push   ds
  405df7:	fisttp DWORD PTR [edi]
  405df9:	mov    ah,0x60
  405dfb:	xor    ebx,edi
  405dfd:	xchg   ebx,eax
  405dfe:	stos   DWORD PTR es:[edi],eax
  405dff:	fisub  DWORD PTR [edx-0x680798c3]
  405e05:	add    ah,BYTE PTR [edi+0x1f4087eb]
  405e0b:	xchg   esi,eax
  405e0c:	rcr    ebp,cl
  405e0e:	call   DWORD PTR [esi]
  405e10:	shr    BYTE PTR [eax-0x58],1
  405e13:	add    cl,BYTE PTR [esi-0x55]
  405e16:	vpsraw ymm6,ymm3,XMMWORD PTR [esi+0x3f]
  405e1c:	and    eax,0x538e88bf
  405e21:	mov    cl,0xea
  405e23:	call   0x5591:0xb7195563
  405e2a:	inc    ecx
  405e2b:	out    0x86,eax
  405e2d:	out    0x17,eax
  405e2f:	fst    QWORD PTR [edx-0x6c85e09f]
  405e35:	push   0x46596fdc
  405e3a:	popf   
  405e3b:	in     eax,0x97
  405e3d:	xchg   DWORD PTR [edi-0x5],ebx
  405e40:	mov    dl,BYTE PTR [ebx-0x5d]
  405e43:	cmp    DWORD PTR [esi+0x6d2056d7],0x5b80631e
  405e4d:	in     eax,dx
  405e4e:	je     0x405e0e
  405e50:	adc    esi,DWORD PTR [ebx+0x4]
  405e53:	icebp  
  405e54:	stc    
  405e55:	push   0xffffffb5
  405e57:	mov    dh,0x2f
  405e59:	add    DWORD PTR ds:0xf16b575f,ecx
  405e5f:	ret    0x66b4
  405e62:	sbb    dl,BYTE PTR [ebp+0x14]
  405e65:	sbb    al,0x31
  405e67:	mov    edi,0x78b92c39
  405e6c:	sub    al,0x7a
  405e6e:	jns    0x405e4c
  405e70:	xor    eax,0xf3276bb4
  405e75:	pop    esi
  405e76:	fdiv   st,st(5)
  405e78:	mov    edi,0xcc7dbf9d
  405e7d:	or     DWORD PTR [esi+0x7c],0x77
  405e81:	lahf   
  405e82:	xchg   ebp,eax
  405e83:	inc    ebx
  405e84:	jecxz  0x405e46
  405e86:	ficomp DWORD PTR [ebp+0x6]
  405e89:	pop    eax
  405e8a:	xor    BYTE PTR [edx-0x349b80f6],ah
  405e90:	mov    edi,0x1b29862d
  405e95:	inc    ebx
  405e96:	mov    ecx,0x7e1dcf5c
  405e9b:	in     eax,dx
  405e9c:	loope  0x405e39
  405e9e:	jb     0x405e41
  405ea0:	or     DWORD PTR [edx-0x38b0b99],0xf5e3c0f3
  405eaa:	push   ebp
  405eab:	jmp    0x429a:0x2e80d996
  405eb2:	leave  
  405eb3:	jle    0x405e5d
  405eb5:	mov    ah,0xb3
  405eb7:	jmp    0x63f8731
  405ebc:	or     eax,0x8b1e1d6d
  405ec1:	cmp    BYTE PTR [edx],0x2d
  405ec4:	and    ecx,esi
  405ec6:	retf   
  405ec7:	mov    bh,0xdd
  405ec9:	jle    0x405e5d
  405ecb:	scas   eax,DWORD PTR es:[edi]
  405ecc:	and    BYTE PTR [edi+eax*8+0x42],dh
  405ed0:	daa    
  405ed1:	rcl    DWORD PTR [ecx],1
  405ed3:	xor    bl,BYTE PTR fs:[eax+0x54cce317]
  405eda:	daa    
  405edb:	inc    eax
  405edc:	imul   edi,DWORD PTR [ecx-0x80],0x85856ef7
  405ee3:	frstor [esi]
  405ee5:	or     edi,ebx
  405ee7:	pop    ds
  405ee8:	ins    DWORD PTR es:[edi],dx
  405ee9:	mov    ebx,0xf806bf51
  405eee:	pop    edx
  405eef:	sbb    ah,BYTE PTR [edi-0x31362b9b]
  405ef5:	and    esi,DWORD PTR [ecx-0x6772b926]
  405efb:	sti    
  405efc:	sub    dh,BYTE PTR [ebx]
  405efe:	pop    ebp
  405eff:	out    dx,eax
  405f00:	ins    BYTE PTR es:[edi],dx
  405f01:	sbb    ecx,DWORD PTR [ebp-0x1b62f12e]
  405f07:	add    edx,DWORD PTR [edi-0x7]
  405f0a:	sbb    ecx,DWORD PTR [edx]
  405f0c:	shr    BYTE PTR [esi-0x3e7aab7],1
  405f12:	popf   
  405f13:	leave  
  405f14:	js     0x405f94
  405f16:	dec    ebx
  405f17:	adc    dl,cl
  405f19:	mov    al,0x33
  405f1b:	jl     0x405f91
  405f1d:	imul   ebx,esi,0xffffffa0
  405f20:	sub    al,0x42
  405f22:	mov    dh,0x49
  405f24:	mov    esi,0x21148b4e
  405f29:	add    al,0x8b
  405f2b:	xchg   edx,eax
  405f2c:	or     DWORD PTR [eax],0x53
  405f2f:	(bad)  
  405f30:	lods   al,BYTE PTR ds:[esi]
  405f31:	adc    edx,DWORD PTR ds:0xc78e4c1b
  405f37:	mov    cl,0x65
  405f39:	add    eax,0xd8b1257
  405f3e:	jp     0x405f0b
  405f40:	jae    0x405f65
  405f42:	mov    ebx,ds
  405f44:	jp     0x405f84
  405f46:	mov    ebp,0xfcc0ffb5
  405f4b:	mov    ch,0x95
  405f4d:	aas    
  405f4e:	les    ecx,FWORD PTR [edi-0xe]
  405f51:	std    
  405f52:	fld    QWORD PTR [edi-0x65e39002]
  405f58:	rcr    ch,cl
  405f5a:	arpl   WORD PTR [eax+0x3a3bb601],bx
  405f60:	lahf   
  405f61:	loop   0x405f83
  405f63:	sub    BYTE PTR [eax+0x1f],ah
  405f66:	lahf   
  405f67:	cmp    ch,ch
  405f69:	sbb    ch,BYTE PTR [edx]
  405f6b:	add    ebp,ebp
  405f6d:	adc    edi,DWORD PTR [edx+0xc4c550e]
  405f73:	dec    ecx
  405f74:	popf   
  405f75:	xchg   edx,eax
  405f76:	fild   WORD PTR [edx+0x2]
  405f79:	in     eax,dx
  405f7a:	xor    eax,0xb092aa8
  405f7f:	aas    
  405f80:	sahf   
  405f81:	sahf   
  405f82:	fisttp WORD PTR [edi-0x3d]
  405f85:	xor    al,0xa6
  405f87:	mov    BYTE PTR [ebx+0x22],cl
  405f8a:	les    edx,FWORD PTR [ebp-0x33cf743a]
  405f90:	or     DWORD PTR [ecx-0x68],ebp
  405f93:	pop    edi
  405f94:	repnz xchg edx,eax
  405f96:	mov    esp,0x250222a2
  405f9b:	xor    DWORD PTR [esi+esi*4+0x3f679564],edx
  405fa2:	mov    ah,0xfe
  405fa4:	pop    ebp
  405fa5:	sbb    BYTE PTR [edx-0x36],bl
  405fa8:	sub    ebx,esp
  405faa:	add    ecx,DWORD PTR [edi-0x6c965383]
  405fb0:	and    eax,0xda751299
  405fb5:	cld    
  405fb6:	int    0x8d
  405fb8:	adc    DWORD PTR [ebx-0x210b3b78],esi
  405fbe:	pop    ebp
  405fbf:	sahf   
  405fc0:	and    esi,DWORD PTR [esi]
  405fc2:	jg     0x406040
  405fc4:	xchg   ebp,eax
  405fc5:	(bad)  
  405fc6:	mov    eax,0x117e4435
  405fcb:	loop   0x405f6b
  405fcd:	lea    edx,[esi]
  405fcf:	xchg   ecx,eax
  405fd0:	pop    ss
  405fd1:	jmp    0x405fb5
  405fd3:	(bad)  [edi-0x78aac879]
  405fd9:	aam    0x8a
  405fdb:	bound  eax,QWORD PTR ds:0xfbb1af2
  405fe1:	in     eax,0x2b
  405fe3:	out    0x36,al
  405fe5:	sbb    bh,bl
  405fe7:	in     al,0x79
  405fe9:	jo     0x405fc8
  405feb:	push   0x1c
  405fed:	and    al,0x1
  405fef:	xor    DWORD PTR [edx],0xbd4638e6
  405ff5:	mov    edi,0x7984bfea
  405ffa:	push   ecx
  405ffb:	mov    bl,BYTE PTR [esi]
  405ffd:	mov    ch,0x75
  405fff:	mov    al,ds:0x156b5e9d
  406004:	test   BYTE PTR [esi],bh
  406006:	jle    0x406063
  406008:	rep ins BYTE PTR es:[edi],dx
  40600a:	(bad)  
  40600b:	jl     0x405f9d
  40600d:	xchg   BYTE PTR [ecx-0x405b0154],ah
  406013:	push   es
  406014:	lea    ecx,[eax]
  406016:	xlat   BYTE PTR ds:[ebx]
  406017:	nop
  406018:	push   esi
  406019:	jae    0x405fb0
  40601b:	jge    0x406075
  40601d:	clc    
  40601e:	pushf  
  40601f:	jl     0x405fcc
  406021:	xchg   esp,eax
  406022:	mov    ebp,0x4eaa00a
  406027:	and    eax,0xe39d8e05
  40602c:	sub    cl,cl
  40602e:	mov    eax,ds:0xcebe0550
  406033:	mov    ecx,0xbf671e95
  406038:	retf   0xc633
  40603b:	add    eax,edi
  40603d:	cmp    edx,eax
  40603f:	je     0x408557
  406045:	mov    eax,DWORD PTR [ebp-0x8]
  406048:	mov    DWORD PTR [ebp-0x18],eax
  40604b:	mov    eax,DWORD PTR [ebp-0x10]
  40604e:	add    eax,DWORD PTR [ebp-0x54]
  406051:	mov    DWORD PTR [ebp-0x1c],0xf89c85a1
  406058:	mov    DWORD PTR [ebp-0x8],eax
  40605b:	mov    eax,0xf89c85a2
  406060:	mov    DWORD PTR [ebp-0x28],eax
  406063:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  40606a:	mov    DWORD PTR [ebp-0x40],0xf89c85bc
  406071:	mov    DWORD PTR [ebp-0x30],eax
  406074:	mov    eax,DWORD PTR [ebp-0x1c]
  406077:	xor    eax,esi
  406079:	add    eax,edi
  40607b:	jmp    0x408513
  406080:	mov    DWORD PTR [ebp-0x4c],0xf89c85b4
  406087:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  40608e:	mov    eax,DWORD PTR [ebp-0x30]
  406091:	mov    edx,DWORD PTR [ebp-0xc]
  406094:	xor    eax,esi
  406096:	add    eax,edi
  406098:	imul   eax,edx
  40609b:	mov    edx,DWORD PTR [ebp-0x8]
  40609e:	mov    al,BYTE PTR [eax+edx*1]
  4060a1:	mov    BYTE PTR [ebp-0x1],al
  4060a4:	mov    eax,DWORD PTR [ebp-0x30]
  4060a7:	mov    edx,DWORD PTR [ebp-0xc]
  4060aa:	xor    eax,esi
  4060ac:	add    eax,edi
  4060ae:	imul   eax,edx
  4060b1:	mov    edx,DWORD PTR [ebp-0x5c]
  4060b4:	xor    edx,esi
  4060b6:	add    eax,edx
  4060b8:	mov    edx,DWORD PTR [ebp-0x8]
  4060bb:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f3]
  4060c3:	mov    edx,DWORD PTR [ebp-0x4c]
  4060c6:	xor    edx,esi
  4060c8:	lea    eax,[edx+eax*1+0x3272f3]
  4060cf:	movzx  edx,BYTE PTR [ebp-0x1]
  4060d3:	xor    edx,eax
  4060d5:	mov    BYTE PTR [ebp-0x1],dl
  4060d8:	mov    al,BYTE PTR [ebp-0x1]
  4060db:	mov    edx,DWORD PTR [ebp-0x30]
  4060de:	mov    ebx,DWORD PTR [ebp-0xc]
  4060e1:	xor    edx,esi
  4060e3:	add    edx,edi
  4060e5:	imul   edx,ebx
  4060e8:	mov    ebx,DWORD PTR [ebp-0x8]
  4060eb:	mov    BYTE PTR [edx+ebx*1],al
  4060ee:	mov    eax,DWORD PTR [ebp-0x30]
  4060f1:	mov    edx,DWORD PTR [ebp-0xc]
  4060f4:	xor    eax,esi
  4060f6:	add    eax,edi
  4060f8:	imul   eax,edx
  4060fb:	mov    edx,DWORD PTR [ebp-0x8]
  4060fe:	mov    al,BYTE PTR [eax+edx*1]
  406101:	mov    BYTE PTR [ebp-0x1],al
  406104:	mov    eax,DWORD PTR [ebp-0x30]
  406107:	mov    edx,DWORD PTR [ebp-0xc]
  40610a:	xor    eax,esi
  40610c:	add    eax,edi
  40610e:	imul   eax,edx
  406111:	mov    edx,DWORD PTR [ebp-0x28]
  406114:	xor    edx,esi
  406116:	add    eax,edx
  406118:	mov    edx,DWORD PTR [ebp-0x8]
  40611b:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f3]
  406123:	mov    edx,DWORD PTR [ebp-0x50]
  406126:	xor    edx,esi
  406128:	lea    eax,[edx+eax*1+0x3272f3]
  40612f:	movzx  edx,BYTE PTR [ebp-0x1]
  406133:	xor    edx,eax
  406135:	mov    BYTE PTR [ebp-0x1],dl
  406138:	mov    al,BYTE PTR [ebp-0x1]
  40613b:	mov    edx,DWORD PTR [ebp-0x30]
  40613e:	mov    ebx,DWORD PTR [ebp-0xc]
  406141:	xor    edx,esi
  406143:	add    edx,edi
  406145:	imul   edx,ebx
  406148:	mov    ebx,DWORD PTR [ebp-0x8]
  40614b:	jmp    0x4084fc
  406150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406151:	mov    dh,0x7b
  406153:	sbb    eax,0x86859860
  406158:	scas   eax,DWORD PTR es:[edi]
  406159:	mov    cl,0xac
  40615b:	nop
  40615c:	shl    DWORD PTR [ebx+ecx*8-0x7cc7a449],cl
  406163:	sub    edi,0x5c
  406166:	add    DWORD PTR [ebx-0x10bc45c3],0xe
  40616d:	sahf   
  40616e:	bound  eax,QWORD PTR [ecx+ebp*1]
  406171:	ss ret 0x7e78
  406175:	sbb    al,0xbd
  406177:	sahf   
  406178:	mov    ds:0x50711008,al
  40617d:	sub    bh,0xa9
  406180:	sti    
  406181:	pop    eax
  406182:	retf   
  406183:	dec    esp
  406184:	push   ecx
  406185:	push   es
  406186:	pop    ss
  406187:	adc    edx,DWORD PTR [ebp+eiz*4+0x380a046b]
  40618e:	pusha  
  40618f:	pop    ebp
  406190:	cmp    al,0x48
  406192:	popf   
  406193:	pusha  
  406194:	(bad)  
  406195:	sbb    al,BYTE PTR [esi+0x7b]
  406198:	sub    edx,0x2a
  40619b:	mov    ebp,0x6ca35c5
  4061a0:	cmp    dh,al
  4061a2:	dec    edx
  4061a3:	ret    
  4061a4:	sub    al,0x82
  4061a6:	adc    ecx,edx
  4061a8:	ror    DWORD PTR [esi-0x714c9900],1
  4061ae:	add    BYTE PTR [edi-0x1637aa8],cl
  4061b4:	rol    bl,0x3d
  4061b7:	xchg   esp,eax
  4061b8:	or     BYTE PTR [esi+0xf],al
  4061bb:	rcl    BYTE PTR [ecx+ebx*2-0xff1abf4],cl
  4061c2:	and    eax,0xc83b0a0a
  4061c7:	mov    dh,0x95
  4061c9:	inc    edi
  4061ca:	jg     0x406232
  4061cc:	cld    
  4061cd:	ja     0x4061a1
  4061cf:	int    0x74
  4061d1:	sbb    al,0xe4
  4061d3:	repz adc eax,0x6794a13c
  4061d9:	xchg   ebp,eax
  4061da:	adc    eax,0x94145f52
  4061df:	fisttp DWORD PTR [ecx-0x5d81b587]
  4061e5:	jle    0x406206
  4061e7:	pop    edx
  4061e8:	test   eax,0x566b80b5
  4061ed:	add    DWORD PTR [ebx],ebx
  4061ef:	loopne 0x4061eb
  4061f1:	test   BYTE PTR [esi],0x83
  4061f4:	and    bl,BYTE PTR [eax]
  4061f6:	test   eax,0xe9c154eb
  4061fb:	mov    al,BYTE PTR [ebx-0x4]
  4061fe:	or     BYTE PTR [edi-0xb64667c],0x10
  406205:	ja     0x4061d0
  406207:	xor    ch,BYTE PTR [ecx-0xc]
  40620a:	daa    
  40620b:	inc    ebp
  40620c:	cli    
  40620d:	adc    DWORD PTR [ebx],edi
  40620f:	adc    ch,0xb2
  406212:	cwde   
  406213:	dec    ebx
  406214:	(bad)  
  406216:	mov    bh,0xe9
  406218:	les    ecx,FWORD PTR [edx+0x6e75135a]
  40621e:	xchg   esi,eax
  40621f:	and    esi,esp
  406221:	imul   DWORD PTR [ecx-0x2c43ee97]
  406227:	sub    al,0xd8
  406229:	mov    eax,0x765bb87c
  40622e:	(bad)
  406231:	lods   eax,DWORD PTR ds:[esi]
  406232:	or     DWORD PTR [edx-0x4892fc88],esi
  406238:	push   ss
  406239:	retf   0xe21e
  40623c:	hlt    
  40623d:	dec    ecx
  40623e:	mov    eax,ds:0x5f598db1
  406243:	daa    
  406244:	inc    ecx
  406245:	pop    edi
  406246:	mov    ds:0xe5a4b251,eax
  40624b:	or     al,0x96
  40624d:	fcom   QWORD PTR [ecx]
  40624f:	cmp    BYTE PTR [esi+0x5f],bl
  406252:	dec    esi
  406253:	ins    DWORD PTR es:[edi],dx
  406254:	push   ebp
  406255:	jp     0x406223
  406257:	fisub  DWORD PTR [ecx]
  406259:	mov    cl,0x46
  40625b:	mov    BYTE PTR [ebx],ah
  40625d:	in     al,0x5b
  40625f:	inc    ebx
  406260:	test   dl,bl
  406262:	out    dx,eax
  406263:	cmovne esp,DWORD PTR [edx-0x77]
  406267:	xchg   ebp,eax
  406268:	xor    al,0x8f
  40626b:	push   ss
  40626c:	jmp    0x4062a1
  40626e:	in     eax,0x17
  406270:	jno    0x4062bd
  406272:	or     BYTE PTR [edx-0x21859f55],cl
  406278:	cmp    BYTE PTR [edx-0x3e6c33ef],bl
  40627e:	(bad)  
  40627f:	cs and dl,ch
  406282:	test   eax,0xf7a0be1d
  406287:	pop    eax
  406288:	scas   al,BYTE PTR es:[edi]
  406289:	ret    
  40628a:	mov    al,0xbf
  40628c:	out    dx,al
  40628d:	inc    ebp
  40628e:	nop
  40628f:	test   eax,0xa93c4dd7
  406294:	dec    eax
  406295:	and    DWORD PTR ds:0x7367bc1,ecx
  40629b:	jns    0x406290
  40629d:	push   0xffffffda
  40629f:	int    0x20
  4062a1:	nop
  4062a2:	pushf  
  4062a3:	enter  0x1cc8,0x34
  4062a7:	inc    ebp
  4062a8:	adc    edi,esi
  4062aa:	scas   al,BYTE PTR es:[edi]
  4062ab:	xor    al,0xcc
  4062ad:	jo     0x4062f0
  4062af:	pushf  
  4062b0:	adc    DWORD PTR [esi],edi
  4062b2:	arpl   WORD PTR [eax+eiz*2],ax
  4062b5:	xchg   BYTE PTR [ecx],ch
  4062b7:	pop    ss
  4062b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062b9:	pushf  
  4062ba:	out    0x52,al
  4062bc:	inc    esi
  4062bd:	retf   0x6f7e
  4062c0:	inc    esi
  4062c1:	aam    0xc8
  4062c3:	or     al,BYTE PTR [eax-0x2bf559af]
  4062c9:	int3   
  4062ca:	add    ch,dh
  4062cc:	popf   
  4062cd:	nop
  4062ce:	in     al,dx
  4062cf:	pop    eax
  4062d0:	inc    ebp
  4062d1:	adc    dh,BYTE PTR [edx-0xdf44dac]
  4062d7:	test   al,0xf0
  4062d9:	inc    ebx
  4062da:	mov    al,0xfd
  4062dc:	inc    ecx
  4062dd:	pop    ebx
  4062de:	popf   
  4062df:	cmc    
  4062e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062e1:	clc    
  4062e2:	add    ch,BYTE PTR [edx-0x775bc41c]
  4062e8:	mov    esp,DWORD PTR [ebx-0x7b]
  4062eb:	mov    bl,0x86
  4062ed:	mov    bh,0x29
  4062ef:	jl     0x406351
  4062f1:	jp     0x40631b
  4062f3:	cmp    eax,0x8fa2c57d
  4062f8:	or     al,BYTE PTR [esi]
  4062fa:	sar    DWORD PTR [edi],1
  4062fc:	aad    0xa7
  4062fe:	or     bl,bh
  406300:	mov    eax,0xaf3f7a45
  406305:	inc    eax
  406306:	pushf  
  406307:	out    dx,al
  406308:	cmp    eax,0x3bd2609b
  40630d:	xchg   ebp,eax
  40630e:	push   esi
  40630f:	mov    ?,WORD PTR [eax+0x325208f2]
  406315:	(bad)
  406319:	test   DWORD PTR [edi],0x47ee3575
  40631f:	mov    ebp,0xc2468c0e
  406324:	jno    0x4062e1
  406326:	push   ecx
  406327:	retf   0xbdbf
  40632a:	jns    0x4063a7
  40632c:	xor    eax,DWORD PTR [eax+eax*4]
  40632f:	push   edx
  406330:	es pop ebp
  406332:	jl     0x4062c3
  406334:	adc    ebp,DWORD PTR [edx+edx*8-0x66]
  406338:	jae    0x406369
  40633a:	popf   
  40633b:	xchg   esp,eax
  40633c:	xchg   ebx,eax
  40633d:	sahf   
  40633e:	daa    
  40633f:	adc    eax,0xdb4a49f6
  406344:	imul   ecx,DWORD PTR [edx+0x19],0x6e05b633
  40634b:	mov    bh,0x3b
  40634d:	bnd jae 0x4063af
  406350:	iret   
  406351:	mov    ebx,0xa6e39086
  406356:	retf   0x36b6
  406359:	add    al,0xe4
  40635b:	or     edi,DWORD PTR [eax]
  40635d:	xor    ah,BYTE PTR [ebx+0x35]
  406360:	das    
  406361:	(bad)  
  406362:	test   eax,0xf8a4ac6a
  406367:	sbb    DWORD PTR [ecx-0x58],0xa9280f2c
  40636e:	sub    al,0x8f
  406370:	packsswb mm2,QWORD PTR [edx+eax*2+0x53]
  406375:	test   DWORD PTR [edx],0x2fc28341
  40637b:	mov    eax,0xe5e263ab
  406380:	push   ecx
  406381:	mov    edx,?
  406383:	pop    esp
  406384:	and    esp,edi
  406386:	dec    ebx
  406387:	sbb    eax,ebp
  406389:	icebp  
  40638a:	jne    0x4063b8
  40638c:	dec    esp
  40638d:	mov    esp,0xa3802e2
  406392:	dec    ebp
  406393:	mov    dh,0xb2
  406395:	cmp    esp,DWORD PTR [ebp+0x22]
  406398:	mov    ebp,0x998d285d
  40639d:	mov    dl,0x8b
  40639f:	xor    edi,0x9cd7e260
  4063a5:	jo     0x4063d4
  4063a7:	mov    esp,0xf6256b13
  4063ac:	cmp    al,0x2a
  4063ae:	int    0xbb
  4063b0:	cli    
  4063b1:	add    DWORD PTR [esi],edi
  4063b3:	jmp    0x406431
  4063b5:	pop    esi
  4063b6:	fwait
  4063b7:	xor    dh,dl
  4063b9:	xlat   BYTE PTR ds:[ebx]
  4063ba:	cmp    al,BYTE PTR fs:[ecx+eiz*8-0x14]
  4063bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063c0:	sub    eax,0xb5eca42
  4063c5:	sbb    eax,0x75347560
  4063ca:	popa   
  4063cb:	push   ebx
  4063cc:	ror    esi,cl
  4063ce:	lods   al,BYTE PTR fs:[esi]
  4063d0:	push   es
  4063d1:	xchg   ecx,eax
  4063d2:	(bad)  
  4063d3:	enter  0x96fe,0x16
  4063d7:	mov    esp,0x5f73daba
  4063dc:	and    DWORD PTR [esi+0x6f],edi
  4063df:	fst    DWORD PTR [edx-0x3d]
  4063e2:	(bad)  
  4063e3:	sbb    al,0x8e
  4063e5:	xchg   ecx,eax
  4063e6:	retf   0x4b6d
  4063e9:	and    esp,DWORD PTR [ebx]
  4063eb:	inc    ebp
  4063ec:	outs   dx,DWORD PTR ds:[esi]
  4063ed:	leave  
  4063ee:	leave  
  4063ef:	mov    edi,0x4f3cf638
  4063f4:	pop    edx
  4063f5:	test   al,0x8
  4063f7:	jge    0x4063bf
  4063f9:	out    dx,eax
  4063fa:	push   0x4b
  4063fc:	and    dl,dl
  4063fe:	fld    st(3)
  406400:	dec    ecx
  406401:	idiv   BYTE PTR [ecx+0x7bf75c8]
  406407:	and    al,0x49
  406409:	in     al,dx
  40640a:	jne    0x406445
  40640c:	cdq    
  40640d:	and    dh,ch
  40640f:	sub    al,BYTE PTR [ecx-0x1fd306b2]
  406415:	ficom  DWORD PTR [ebp-0x27]
  406418:	outs   dx,DWORD PTR ds:[esi]
  406419:	pop    eax
  40641a:	mov    bl,0x46
  40641c:	call   0xfd17245a
  406421:	dec    ecx
  406422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406423:	fcom   DWORD PTR [esi+esi*4+0x19c78514]
  40642a:	jbe    0x40643e
  40642c:	mov    ds:0xc8729293,eax
  406431:	das    
  406432:	or     al,0x15
  406434:	xchg   edi,esp
  406436:	pop    ecx
  406437:	cmp    al,BYTE PTR [ecx-0x5580a2ed]
  40643d:	or     ebx,edi
  40643f:	xchg   ecx,eax
  406440:	mov    ds:0x3d9eb217,al
  406445:	sub    al,0x65
  406447:	pop    ebp
  406448:	sub    DWORD PTR [ebp-0x16],esi
  40644b:	add    BYTE PTR [ecx+0x762cb88d],ah
  406451:	add    BYTE PTR [edi-0x123f4dbb],cl
  406457:	xor    BYTE PTR [ebx],ch
  406459:	xlat   BYTE PTR ds:[ebx]
  40645a:	test   al,0xd7
  40645c:	fwait
  40645d:	xchg   ecx,eax
  40645e:	test   BYTE PTR [esi+0x8e278da],al
  406464:	fsub   DWORD PTR [ecx+eax*8-0x78f888a8]
  40646b:	adc    BYTE PTR [ecx+edi*8],bl
  40646e:	shl    DWORD PTR [ecx+0x15],1
  406471:	push   DWORD PTR [ecx]
  406473:	sar    BYTE PTR [esi],0xab
  406476:	jmp    0x5564db70
  40647b:	(bad)  
  40647c:	sub    eax,0x7883e041
  406481:	cmc    
  406482:	mov    ebx,0x3adadab8
  406487:	xor    DWORD PTR [ebp+eax*1-0x7c],ebx
  40648b:	sbb    BYTE PTR [esi+ecx*4],dl
  40648e:	pop    ss
  40648f:	or     BYTE PTR [edi],ch
  406491:	mov    DWORD PTR [esi+0x53cf5c5f],ebp
  406497:	bound  eax,QWORD PTR [ebp+0x73a52383]
  40649d:	cmp    ah,BYTE PTR [edx+0x15126584]
  4064a3:	leave  
  4064a4:	(bad)  
  4064a5:	cmp    BYTE PTR [ebp-0x7f928032],al
  4064ab:	shr    BYTE PTR [edi],1
  4064ad:	mov    eax,ds:0x979d75dc
  4064b2:	and    DWORD PTR [ebx+0x1e8c45e0],0xc1744b24
  4064bc:	sbb    al,0x48
  4064be:	xchg   ebx,eax
  4064bf:	(bad)
  4064c3:	cli    
  4064c4:	loop   0x406463
  4064c6:	retf   0xcc35
  4064c9:	aaa    
  4064ca:	jae    0x406506
  4064cc:	shl    dh,1
  4064ce:	mov    ecx,0x800ac6d5
  4064d3:	sbb    dh,BYTE PTR [edi+0x2c60b2a1]
  4064d9:	test   al,0xa6
  4064db:	xlat   BYTE PTR ds:[ebx]
  4064dc:	dec    si
  4064de:	lea    ecx,[edi-0xdd33c76]
  4064e4:	int    0xbc
  4064e6:	cmp    eax,0x18c25f1e
  4064eb:	iret   
  4064ec:	push   ebx
  4064ed:	push   ebx
  4064ee:	mov    eax,0xc7736344
  4064f3:	jmp    0xfbb5f7e0
  4064f8:	xchg   edx,eax
  4064f9:	mov    esi,0x5b23bdc7
  4064fe:	fs dec ebx
  406500:	push   edx
  406501:	popf   
  406502:	mov    ss,WORD PTR [ebx-0x9fed126]
  406508:	ss xchg ebp,eax
  40650a:	cmp    ecx,DWORD PTR [ebp+0x50]
  40650d:	int    0x9d
  40650f:	fcomp  DWORD PTR [ecx]
  406511:	or     esp,ecx
  406513:	or     al,0x61
  406515:	out    dx,eax
  406516:	mov    al,0x9b
  406518:	cmp    eax,DWORD PTR [ecx+0x69]
  40651b:	mov    dh,0xc6
  40651d:	inc    edx
  40651e:	hlt    
  40651f:	stc    
  406520:	(bad)  
  406521:	(bad)  
  406522:	call   0xb713:0xf21dbbb9
  406529:	int    0xa0
  40652b:	push   ebp
  40652c:	or     BYTE PTR [ebx-0x1c],dh
  40652f:	rcr    BYTE PTR [edi],cl
  406531:	int    0x62
  406533:	sbb    BYTE PTR [ecx-0x899d6ff],dl
  406539:	js     0x406566
  40653b:	push   ecx
  40653c:	imul   esp,DWORD PTR [esp+ebx*1],0x13e887b3
  406543:	call   0x667e:0x5fd0a119
  40654a:	xchg   edi,eax
  40654b:	pand   mm6,QWORD PTR ds:0x5f77e082
  406552:	xchg   edx,eax
  406553:	adc    bh,BYTE PTR [ebx+0x66266647]
  406559:	push   eax
  40655a:	popa   
  40655b:	je     0x4064f4
  40655d:	mov    dl,0x3b
  40655f:	dec    eax
  406560:	adc    DWORD PTR [eax-0x34],esp
  406563:	pop    ss
  406564:	rcl    DWORD PTR [ebx],cl
  406566:	aad    0x5b
  406568:	push   ebp
  406569:	in     eax,dx
  40656a:	mov    bh,0x1c
  40656c:	jo     0x4065d1
  40656e:	xor    BYTE PTR [edi],ah
  406570:	add    al,bl
  406572:	cmp    al,0xa4
  406574:	popa   
  406575:	sbb    eax,0x57761399
  40657a:	fadd   QWORD PTR [eax]
  40657c:	jp     0x4065d5
  40657e:	fiadd  WORD PTR [ebx]
  406580:	mov    edi,0xb6dbc155
  406585:	jmp    0x40659e
  406587:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406588:	xchg   edx,eax
  406589:	jo     0x4065f6
  40658b:	outs   dx,BYTE PTR ds:[esi]
  40658c:	mov    al,0x5c
  40658e:	inc    ebp
  40658f:	push   esi
  406590:	mov    edi,0xdc61194a
  406595:	lods   al,BYTE PTR ds:[esi]
  406596:	daa    
  406597:	(bad)  
  406599:	jge    0x4065b2
  40659b:	(bad)
  40659f:	out    dx,al
  4065a0:	aad    0xfe
  4065a2:	inc    esp
  4065a3:	loope  0x406591
  4065a5:	mov    ds:0xd3560fa0,al
  4065aa:	sub    dl,BYTE PTR [esi+0x48]
  4065ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065ae:	cmp    DWORD PTR [eax-0x34fd2037],0x64eb748e
  4065b8:	cld    
  4065b9:	(bad)  
  4065ba:	mov    ebp,0xe02894e1
  4065bf:	dec    eax
  4065c0:	adc    DWORD PTR [edi],edx
  4065c2:	shr    BYTE PTR [ebx+0x6f],cl
  4065c5:	push   cs
  4065c6:	ret    0x72ea
  4065c9:	cmc    
  4065ca:	test   DWORD PTR [edi-0x554c355],edi
  4065d0:	jecxz  0x4065c5
  4065d2:	push   ds
  4065d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065d4:	pop    ecx
  4065d5:	(bad)  
  4065d6:	jp     0x406647
  4065d8:	das    
  4065d9:	dec    edx
  4065da:	scas   al,BYTE PTR es:[edi]
  4065db:	inc    ebx
  4065dc:	adc    BYTE PTR [ecx-0x7e],ch
  4065df:	dec    eax
  4065e0:	inc    ebx
  4065e1:	add    eax,0xdc69ff88
  4065e6:	ins    BYTE PTR es:[edi],dx
  4065e7:	in     eax,0xbd
  4065e9:	xchg   edx,eax
  4065ea:	retf   0x4962
  4065ed:	das    
  4065ee:	jae    0x406649
  4065f0:	sub    ebp,DWORD PTR [edx+0x69]
  4065f3:	cwde   
  4065f4:	fist   WORD PTR [ecx+0xe547ac5]
  4065fa:	out    0xa8,al
  4065fc:	shld   DWORD PTR [edi],ebx,0x5b
  406600:	fs xchg esp,eax
  406602:	(bad)  
  406604:	dec    ebp
  406605:	(bad)  
  406606:	adc    al,0x7d
  406608:	mov    ah,0x24
  40660a:	fst    st(6)
  40660c:	ret    
  40660d:	pop    es
  40660e:	jno    0x406663
  406610:	loopne 0x406645
  406612:	aad    0x40
  406614:	inc    esp
  406615:	out    0xc3,al
  406617:	push   esi
  406618:	push   ss
  406619:	popa   
  40661a:	std    
  40661b:	jno    0x40664d
  40661d:	mov    edx,?
  40661f:	daa    
  406620:	sub    DWORD PTR [esi+0x5e],0x28
  406624:	adc    eax,0xa6655d68
  406629:	fild   QWORD PTR [eax]
  40662b:	test   al,0x9c
  40662d:	and    bl,BYTE PTR [esp+ebp*2-0x26]
  406631:	inc    edx
  406632:	cs jbe 0x4065e2
  406635:	add    bh,ch
  406637:	xor    BYTE PTR [edi+0xf],dh
  40663a:	mov    ds:0x8e626f9,al
  40663f:	xchg   DWORD PTR ds:0xfca7e565,ebx
  406645:	add    cl,BYTE PTR [ebp+0x24]
  406648:	jp     0x406666
  40664a:	xor    DWORD PTR ds:0x84a95839,edx
  406650:	cmp    DWORD PTR [ecx],eax
  406652:	cmp    cl,cl
  406654:	inc    BYTE PTR [eax+0x6cf319ab]
  40665a:	fdiv   DWORD PTR [ebp+0x2f]
  40665d:	in     al,0x3e
  40665f:	sub    eax,0x21badbe3
  406664:	sub    esp,ebp
  406666:	sbb    esp,DWORD PTR [edx+edi*4+0x75ab3ffb]
  40666d:	pushf  
  40666e:	fisub  DWORD PTR [esi-0x2f]
  406671:	enter  0x71a0,0xb6
  406675:	sbb    esi,DWORD PTR [esi-0x1f4639ce]
  40667b:	lods   al,BYTE PTR ds:[esi]
  40667c:	je     0x4066b2
  40667e:	fnstenv [ebp+edi*1+0x36]
  406682:	adc    eax,0x78f23a59
  406687:	mov    ds:0xf60e549d,al
  40668c:	pop    ss
  40668d:	mov    al,ds:0x5e3ba872
  406692:	out    0x48,eax
  406694:	cmp    BYTE PTR [edx+ebx*1+0x12834df7],bl
  40669b:	push   edx
  40669c:	sub    DWORD PTR [ecx],esp
  40669e:	daa    
  40669f:	push   0xb28a282
  4066a4:	pusha  
  4066a5:	mov    ebx,DWORD PTR [ecx+0x72]
  4066a8:	nop
  4066a9:	fiadd  WORD PTR [ebp-0x3f62fda7]
  4066af:	push   ds
  4066b0:	iret   
  4066b1:	dec    ebx
  4066b2:	mov    ch,0x13
  4066b4:	inc    esi
  4066b5:	and    eax,0xffffff9a
  4066b8:	xor    bl,bh
  4066ba:	repz and al,0xe
  4066bd:	sbb    eax,0x1f2dbeca
  4066c2:	data16 and al,0xbf
  4066c5:	aaa    
  4066c6:	mov    ebx,0xa0639921
  4066cb:	mov    ebx,0x92896b81
  4066d0:	mov    ch,0x51
  4066d2:	xchg   edx,eax
  4066d3:	sub    eax,0x5edc9066
  4066d8:	jnp    0x406675
  4066da:	inc    DWORD PTR [ecx]
  4066dc:	ret    0x101
  4066df:	data16 mov ch,0xbc
  4066e2:	outs   dx,DWORD PTR ds:[esi]
  4066e3:	jno    0x40672e
  4066e5:	outs   dx,DWORD PTR ds:[esi]
  4066e6:	push   ebp
  4066e7:	add    cl,BYTE PTR [esi+0x0]
  4066ea:	fldcw  WORD PTR [ecx+0x661b65a6]
  4066f0:	aaa    
  4066f1:	outs   dx,BYTE PTR ds:[esi]
  4066f2:	inc    eax
  4066f3:	pop    es
  4066f4:	pop    ecx
  4066f5:	cwde   
  4066f6:	pop    ds
  4066f7:	or     BYTE PTR [edi],al
  4066f9:	and    eax,DWORD PTR [ecx]
  4066fb:	mov    ebp,0xcfd16a5b
  406700:	mov    WORD PTR [eax-0xee7445f],?
  406706:	jecxz  0x4066a1
  406708:	mov    al,ds:0xa2c51b0a
  40670d:	adc    eax,0xcfc56cee
  406712:	mov    ds:0x9457b116,al
  406717:	pop    edi
  406718:	cwde   
  406719:	cdq    
  40671a:	pop    esi
  40671b:	mov    ecx,0xe7c47688
  406720:	xchg   ebx,eax
  406721:	cwde   
  406722:	shr    BYTE PTR ds:0x7c8842a5,1
  406728:	pop    ds
  406729:	sub    al,0x25
  40672b:	mov    ds:0xfbc0aa1e,al
  406730:	daa    
  406731:	and    eax,0x36fcc9a0
  406736:	test   al,0xd7
  406738:	fdivp  st(5),st
  40673a:	inc    edi
  40673b:	mov    ebx,0xc6f199b8
  406740:	mov    ebp,0x1f5e306b
  406745:	push   0x4
  406747:	inc    DWORD PTR [edx-0x6e2a057c]
  40674d:	jnp    0x4067a9
  40674f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406750:	test   DWORD PTR [esi+0x403d485],0x901e36e4
  40675a:	adc    BYTE PTR [eax],cl
  40675c:	sar    BYTE PTR [ebx],1
  40675e:	imul   ecx,esp,0x773fc39c
  406764:	or     al,0xbe
  406766:	xchg   edi,eax
  406767:	xchg   edi,eax
  406768:	dec    ebx
  406769:	add    al,0x78
  40676b:	add    BYTE PTR [esi+0x5bb9952],bl
  406771:	xchg   edi,eax
  406772:	(bad)  
  406773:	dec    ebp
  406774:	ds mov esp,0x4b37614a
  40677a:	repz mov eax,ds:0xa6099cea
  406780:	jbe    0x406774
  406782:	gs cld 
  406784:	pop    esp
  406785:	xchg   BYTE PTR [ecx+0x6d],al
  406788:	rol    BYTE PTR [edi+0x62fc132a],cl
  40678e:	outs   dx,DWORD PTR ds:[esi]
  40678f:	ret    
  406790:	ins    BYTE PTR es:[edi],dx
  406791:	or     DWORD PTR [eax+0x34],esi
  406794:	loope  0x4067a3
  406796:	mov    eax,0xf4a618d5
  40679b:	pusha  
  40679c:	xor    BYTE PTR [edx-0x69],dl
  40679f:	push   ebp
  4067a0:	xchg   DWORD PTR [edx-0x3d],eax
  4067a3:	mov    ah,bh
  4067a5:	mov    ds:0x8e9718d0,eax
  4067aa:	pop    esi
  4067ab:	test   edx,edi
  4067ad:	xchg   DWORD PTR [esi+0x7e],ebp
  4067b0:	sbb    bl,al
  4067b2:	mov    ebp,0xa5ce0471
  4067b7:	jmp    0x40674f
  4067b9:	xor    edi,DWORD PTR [ecx+0x412c74be]
  4067bf:	lea    edi,[esi+0x5f81529e]
  4067c5:	xchg   edi,eax
  4067c6:	jnp    0x406829
  4067c8:	jo     0x406784
  4067ca:	test   al,0xbf
  4067cc:	mov    eax,ds:0x1e4e5189
  4067d1:	outs   dx,DWORD PTR ds:[esi]
  4067d2:	jnp    0x4067f4
  4067d4:	mov    ch,0xbd
  4067d6:	lods   al,BYTE PTR ds:[esi]
  4067d7:	dec    edx
  4067d8:	sub    DWORD PTR [ebp-0x63],0xffffffac
  4067dc:	xchg   BYTE PTR [eax-0x636675b0],bl
  4067e2:	sub    al,0x3c
  4067e4:	movzx  edx,WORD PTR [eax+ebx*8]
  4067e8:	pop    ecx
  4067e9:	and    DWORD PTR [edx],0xc62dc97
  4067ef:	(bad)  
  4067f0:	sbb    bh,bl
  4067f2:	jge    0x40684b
  4067f4:	pusha  
  4067f5:	pop    ebp
  4067f6:	shr    BYTE PTR [eax],cl
  4067f8:	pop    edx
  4067f9:	popf   
  4067fa:	inc    ebx
  4067fb:	pop    eax
  4067fc:	(bad)  es:[ecx]
  4067ff:	sub    ebp,DWORD PTR [edx+0x46]
  406802:	clc    
  406803:	cmp    al,0x47
  406805:	das    
  406806:	popa   
  406807:	dec    esi
  406808:	fdiv   st,st(1)
  40680a:	jae    0x4067c4
  40680c:	loope  0x406863
  40680e:	cld    
  40680f:	(bad)  
  406810:	mov    edi,0xff6881d
  406815:	jge    0x406857
  406817:	in     al,dx
  406818:	pop    esi
  406819:	arpl   sp,dx
  40681b:	sub    al,0x70
  40681d:	test   al,0x9b
  40681f:	dec    ebp
  406820:	out    dx,eax
  406821:	inc    edx
  406822:	add    al,BYTE PTR [edx-0x598617ba]
  406828:	fwait
  406829:	int3   
  40682a:	popa   
  40682b:	sbb    bl,BYTE PTR [ebp+0x78d51a28]
  406831:	les    eax,FWORD PTR [esp+ebx*4-0x76]
  406835:	push   ebx
  406836:	mov    edi,0x56af1b8d
  40683b:	push   cs
  40683c:	sbb    BYTE PTR [ebx-0x15a3935],bl
  406842:	add    esi,DWORD PTR [esp+edx*4+0x1c]
  406846:	in     al,dx
  406847:	imul   ebp,DWORD PTR [esi-0x3c],0x3c
  40684b:	ss and al,0x7
  40684e:	push   ebp
  40684f:	jmp    0x3893:0x266a5a3d
  406856:	fst    DWORD PTR [edx-0x21]
  406859:	sbb    ch,BYTE PTR [edi]
  40685b:	jns    0x40683e
  40685d:	and    eax,0x97c93c34
  406862:	mov    bl,0x8c
  406864:	stc    
  406865:	jne    0x40680c
  406867:	fild   DWORD PTR [eax+ecx*4+0x23]
  40686b:	mov    dl,0xc7
  40686d:	add    BYTE PTR [edi+0x29],ah
  406870:	fs ss out 0xeb,eax
  406874:	mov    al,0x3b
  406876:	or     DWORD PTR [edx],ebx
  406878:	xor    al,0xc4
  40687a:	inc    esp
  40687b:	scas   eax,DWORD PTR es:[edi]
  40687c:	test   BYTE PTR [edx+eiz*1-0x66],dh
  406880:	xor    eax,eax
  406882:	and    bh,BYTE PTR [esi]
  406884:	shl    BYTE PTR [ebx-0xa521ffc],1
  40688a:	xlat   BYTE PTR ds:[ebx]
  40688b:	push   es
  40688c:	cs into 
  40688e:	leave  
  40688f:	retf   0x5938
  406892:	(bad)  
  406893:	ins    WORD PTR es:[edi],dx
  406895:	lods   al,BYTE PTR ds:[esi]
  406896:	or     edi,DWORD PTR [ebp+0x419f2cc]
  40689c:	push   edi
  40689d:	outs   dx,BYTE PTR ds:[esi]
  40689e:	mov    esi,0x9197d1a
  4068a3:	lods   eax,DWORD PTR ds:[esi]
  4068a4:	enter  0x484e,0x6c
  4068a8:	retf   0xc7da
  4068ab:	inc    eax
  4068ac:	iret   
  4068ad:	mov    al,ds:0xa259fecc
  4068b2:	fcom   QWORD PTR [eax+0x9503114]
  4068b8:	and    eax,0x9d626617
  4068bd:	std    
  4068be:	in     al,0xb4
  4068c0:	aam    0x40
  4068c2:	into   
  4068c3:	nop
  4068c4:	xor    BYTE PTR [eax-0x73],bl
  4068c7:	sub    BYTE PTR [eax+0x3a86510],bh
  4068cd:	mov    eax,ds:0x2b475770
  4068d2:	fs jno 0x406872
  4068d5:	or     ebp,DWORD PTR [edi]
  4068d7:	sbb    eax,DWORD PTR gs:[edx+0x73c50705]
  4068de:	fild   WORD PTR [edi-0x4f327244]
  4068e4:	mov    DWORD PTR [ecx-0x3a],ebx
  4068e7:	test   DWORD PTR [edi],eax
  4068e9:	inc    ecx
  4068ea:	pop    es
  4068eb:	jmp    0x9f9be5dd
  4068f0:	and    al,0x5e
  4068f2:	fwait
  4068f3:	xor    esi,ebp
  4068f5:	(bad)
  4068f8:	pusha  
  4068f9:	cmp    esp,DWORD PTR [ecx+0x5392461d]
  4068ff:	cld    
  406900:	ror    BYTE PTR [ecx-0x147a47f8],cl
  406906:	in     eax,dx
  406907:	loope  0x4068ae
  406909:	ficomp DWORD PTR [edi+edx*1]
  40690c:	jbe    0x406987
  40690e:	in     eax,0xe
  406910:	mov    WORD PTR [ebx],?
  406912:	bound  ebp,QWORD PTR [ecx-0x3f]
  406915:	in     al,dx
  406916:	loope  0x406908
  406918:	sub    edx,edi
  40691a:	jle    0x40691c
  40691c:	in     eax,0x9c
  40691e:	mov    DWORD PTR [esi],esp
  406920:	ret    
  406921:	popf   
  406922:	xor    esi,DWORD PTR [ebx]
  406924:	retf   0x3657
  406927:	mov    edi,es
  406929:	fmul   QWORD PTR [eax+ebx*2+0x66]
  40692d:	jnp    0x406929
  40692f:	cmp    DWORD PTR es:[edx-0x17],esi
  406933:	jae    0x4068ed
  406935:	(bad)  
  406937:	pop    ebx
  406938:	ja     0x40695d
  40693a:	mov    dl,0xc9
  40693c:	jge    0x4069b7
  40693e:	cwde   
  40693f:	push   ecx
  406940:	lea    edi,ds:[edi+0x3d]
  406944:	jmp    0x51ac:0x8420820e
  40694b:	scas   eax,DWORD PTR es:[edi]
  40694c:	jns    0x40693b
  40694e:	ins    BYTE PTR es:[edi],dx
  40694f:	cmp    edi,ebp
  406951:	dec    ebx
  406952:	adc    DWORD PTR [ebp+0x4266bf05],ebx
  406958:	xor    BYTE PTR [edx+0x342021a6],cl
  40695e:	jecxz  0x406914
  406960:	xchg   DWORD PTR [esi+esi*8],esp
  406963:	fisttp DWORD PTR [edi]
  406965:	mov    eax,ds:0xdf6b235
  40696a:	mov    ah,0x64
  40696c:	add    DWORD PTR [esi-0x5fd585f6],esi
  406972:	sbb    ecx,esp
  406974:	mov    al,BYTE PTR [edi-0x3ef9983b]
  40697a:	and    BYTE PTR [esi-0xb],al
  40697d:	jl     0x40690c
  40697f:	dec    esp
  406980:	and    edx,DWORD PTR [edx-0x54f26c86]
  406986:	and    DWORD PTR [ebp-0x21],0x6f8d3bf3
  40698d:	repz lock fstp QWORD PTR [ecx+0x64ae10c3]
  406995:	mov    ebx,0xee73f6eb
  40699a:	push   0x4a
  40699c:	pusha  
  40699d:	pop    edi
  40699e:	sbb    DWORD PTR [ebp-0x57],ecx
  4069a1:	sar    BYTE PTR [ebx+0x2d],0xb1
  4069a5:	fstp   TBYTE PTR [edx+edx*4]
  4069a8:	shr    ah,cl
  4069aa:	cwde   
  4069ab:	pop    ss
  4069ac:	bound  ebx,QWORD PTR [eax]
  4069ae:	jmp    0x2bcd:0x806aa73d
  4069b5:	fnstcw WORD PTR [eax-0x6a]
  4069b8:	dec    ebx
  4069b9:	xor    al,0xd6
  4069bb:	sub    DWORD PTR [edx+0x69],0x997a56a6
  4069c2:	sti    
  4069c3:	mulps  xmm4,XMMWORD PTR [ebx]
  4069c6:	mov    ebp,0x3f9abcca
  4069cb:	mov    ah,0x5a
  4069cd:	ret    0xe9d0
  4069d0:	popf   
  4069d1:	jb     0x406956
  4069d3:	sbb    bl,dh
  4069d5:	in     eax,dx
  4069d6:	test   DWORD PTR [edi+0x40898e9a],0xc6287325
  4069e0:	fs sbb ah,al
  4069e3:	and    al,0xfe
  4069e5:	add    bh,bh
  4069e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069e8:	popa   
  4069e9:	fstp   st(6)
  4069eb:	inc    ebp
  4069ec:	(bad)  
  4069ed:	cmp    ebx,ecx
  4069ef:	jno    0x406999
  4069f1:	jecxz  0x406a53
  4069f3:	xchg   edi,eax
  4069f4:	test   edx,edi
  4069f6:	cmc    
  4069f7:	dec    esp
  4069f8:	enter  0x87f1,0xb7
  4069fc:	gs jecxz 0x4069f5
  4069ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a00:	xchg   esp,eax
  406a01:	fisttp QWORD PTR [ebx]
  406a03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a04:	push   ebx
  406a05:	loop   0x406a46
  406a07:	sub    esi,ebx
  406a09:	(bad)  
  406a0a:	test   al,0xf9
  406a0c:	ficom  DWORD PTR [eax]
  406a0e:	jle    0x406a5c
  406a10:	jns    0x406a0f
  406a12:	int    0xe5
  406a14:	adc    esp,esi
  406a16:	cli    
  406a17:	pusha  
  406a18:	dec    esp
  406a19:	and    eax,0x1a7c5ff
  406a1e:	xor    esi,ebx
  406a20:	test   al,0x66
  406a22:	fistp  DWORD PTR [ecx-0x76]
  406a25:	dec    DWORD PTR [edx+0x2c883081]
  406a2b:	jecxz  0x406a4f
  406a2d:	outs   dx,BYTE PTR ds:[esi]
  406a2e:	xchg   ebx,eax
  406a2f:	pushf  
  406a30:	cmp    DWORD PTR [ebp-0x6e9b65cd],0x25
  406a37:	ror    BYTE PTR [ebx],cl
  406a39:	outs   dx,BYTE PTR ds:[esi]
  406a3a:	inc    ebp
  406a3b:	mov    ds,WORD PTR [ebp-0x3db1dba3]
  406a41:	addr16 jmp 0x9cfc:0xd23c9dde
  406a49:	jmp    0x406a5b
  406a4b:	or     BYTE PTR [edx+0x33],cl
  406a4e:	shl    edx,0x7a
  406a51:	cli    
  406a52:	hlt    
  406a53:	add    eax,DWORD PTR [ecx+0x6043a240]
  406a59:	mov    ds:0x619783b2,al
  406a5e:	(bad)  
  406a5f:	mul    ebx
  406a61:	mov    dl,0x73
  406a63:	mov    BYTE PTR [edi-0xa],cl
  406a66:	aas    
  406a67:	and    edx,DWORD PTR [ebp-0x555a6dd4]
  406a6d:	mov    dl,0x1a
  406a6f:	mov    BYTE PTR [ecx],bl
  406a71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a72:	ret    
  406a73:	pushf  
  406a74:	ins    BYTE PTR es:[edi],dx
  406a75:	and    DWORD PTR es:[edx],0x15
  406a79:	stos   DWORD PTR es:[edi],eax
  406a7a:	pop    ss
  406a7b:	shl    ebx,cl
  406a7d:	dec    edx
  406a7e:	sub    BYTE PTR [ebp+ecx*1+0x3e],al
  406a82:	enter  0x53a8,0xb3
  406a86:	add    al,0xa5
  406a88:	mov    edx,0x415cea66
  406a8d:	or     bh,BYTE PTR [ebx+0x45a4fbeb]
  406a93:	lock fdiv DWORD PTR [eax-0x19]
  406a97:	or     al,0x0
  406a99:	mov    dh,0x95
  406a9b:	xchg   edx,eax
  406a9c:	ds inc esi
  406a9e:	out    dx,eax
  406a9f:	imul   edx,DWORD PTR [eax],0xffffff89
  406aa2:	sbb    DWORD PTR ds:0xe4b0305e,edx
  406aa8:	dec    DWORD PTR [ecx-0x3c]
  406aab:	pop    esi
  406aac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406aad:	adc    eax,DWORD PTR [edx]
  406aaf:	ja     0x406b0f
  406ab1:	sbb    DWORD PTR [edi],ebp
  406ab3:	jne    0x406a6c
  406ab5:	int3   
  406ab6:	pop    esi
  406ab7:	mov    eax,ds:0x6b93dc90
  406abc:	scas   eax,DWORD PTR es:[edi]
  406abd:	cmp    BYTE PTR [eax],0xfc
  406ac0:	or     DWORD PTR [eax-0x50c7da7e],esp
  406ac6:	pushf  
  406ac7:	ins    BYTE PTR es:[edi],dx
  406ac8:	mov    eax,ds:0xbd67e8fc
  406acd:	mov    bh,0x3b
  406acf:	shr    DWORD PTR [ecx],0x71
  406ad2:	cs fucomp st(7)
  406ad5:	dec    esp
  406ad6:	or     ebp,ecx
  406ad8:	sub    eax,0x88f2adb
  406add:	xor    esi,0x6b5041ab
  406ae3:	add    al,0xb9
  406ae5:	sub    DWORD PTR [eax+0x7701c078],esp
  406aeb:	out    0x6e,eax
  406aed:	das    
  406aee:	icebp  
  406aef:	stos   DWORD PTR es:[edi],eax
  406af0:	sbb    eax,0x75fd8615
  406af5:	mov    ebx,0xef450035
  406afa:	jmp    0x406b0f
  406afc:	xchg   ebx,eax
  406afd:	aaa    
  406afe:	add    DWORD PTR [edi],eax
  406b00:	jns    0x406af0
  406b02:	(bad)  
  406b03:	xor    bh,cl
  406b05:	and    ebp,DWORD PTR [edx-0xe228f34]
  406b0b:	jbe    0x406ad7
  406b0d:	and    DWORD PTR [eax+0x54],esi
  406b10:	xchg   edi,eax
  406b11:	bound  ecx,QWORD PTR [ecx+edi*8]
  406b14:	xchg   ebp,eax
  406b15:	sbb    eax,0x257f8b34
  406b1a:	sbb    esi,DWORD PTR [edi]
  406b1c:	(bad)  
  406b1e:	aaa    
  406b1f:	loope  0x406b80
  406b21:	and    al,0xf7
  406b23:	mov    BYTE PTR [ebx+0x451363ea],bl
  406b29:	add    esp,DWORD PTR [edx+0x59]
  406b2c:	lods   al,BYTE PTR ds:[esi]
  406b2d:	ds mov bl,0x59
  406b30:	sub    esp,esp
  406b32:	adc    DWORD PTR [edi+ebx*4+0x5d],ebp
  406b36:	fiadd  DWORD PTR [esi]
  406b38:	mov    ds,WORD PTR [ebx-0x2c]
  406b3b:	(bad)  
  406b3c:	push   0x1a1ff310
  406b41:	ss add eax,0x7b6f3095
  406b47:	int    0xce
  406b49:	mov    bl,bh
  406b4b:	repnz xor esi,esp
  406b4e:	mov    ds,WORD PTR [ebp+0x1f3cc0b1]
  406b54:	sar    edi,1
  406b56:	inc    esi
  406b57:	sbb    al,0x31
  406b59:	adc    BYTE PTR [eax+0x4],al
  406b5c:	inc    ebx
  406b5d:	xor    eax,0x696f61ec
  406b62:	xchg   ecx,eax
  406b63:	dec    ecx
  406b64:	mul    ebx
  406b66:	in     al,dx
  406b67:	or     al,BYTE PTR [ebx+0x2398716e]
  406b6d:	dec    esi
  406b6e:	or     BYTE PTR [esp+ebp*8-0x4722bb22],ah
  406b75:	mov    bl,0x7c
  406b77:	imul   ebp,edi,0x657ce66c
  406b7d:	in     al,dx
  406b7e:	imul   esp,esp,0x52
  406b81:	xchg   DWORD PTR [ebx+0x38ba0b5],esp
  406b87:	cmp    ebx,DWORD PTR [edi]
  406b89:	sub    eax,0x2712b642
  406b8e:	mov    al,0x18
  406b90:	das    
  406b91:	xchg   ecx,eax
  406b92:	mul    BYTE PTR [esi-0x72]
  406b95:	arpl   WORD PTR [ebx-0x30],sp
  406b98:	jnp    0x406bf4
  406b9a:	fimul  DWORD PTR [esi]
  406b9c:	sar    DWORD PTR [edi],0xa8
  406b9f:	xchg   ebx,eax
  406ba0:	xor    DWORD PTR [ebp-0x1aa6aab5],esp
  406ba6:	fcomp  DWORD PTR [ebx]
  406ba8:	cmp    eax,0x33b28c20
  406bad:	test   BYTE PTR [ecx],0xe3
  406bb0:	(bad)  
  406bb1:	ins    DWORD PTR es:[edi],dx
  406bb2:	ja     0x406b9f
  406bb4:	shl    ecx,0xfe
  406bb7:	ss pop ds
  406bb9:	mov    WORD PTR [edi-0x75555a12],ss
  406bbf:	js     0x406b94
  406bc1:	int3   
  406bc2:	xor    esp,DWORD PTR [esi-0x1c]
  406bc5:	fld    st(3)
  406bc7:	iret   
  406bc8:	mov    dh,0x92
  406bca:	in     eax,dx
  406bcb:	setl   BYTE PTR [ebp+eax*8-0x49]
  406bd0:	fbstp  TBYTE PTR [eax-0x200053e]
  406bd6:	in     eax,dx
  406bd7:	pop    eax
  406bd8:	jg     0x406b6b
  406bda:	fisub  DWORD PTR [esi]
  406bdc:	mov    bl,BYTE PTR [esi+0x37]
  406bdf:	ja     0x406b9e
  406be1:	(bad)  
  406be2:	xor    al,0x59
  406be4:	pop    eax
  406be5:	adc    DWORD PTR [ebp-0x4f],edx
  406be8:	mov    ds:0xf90f670f,eax
  406bed:	jecxz  0x406c06
  406bef:	xor    BYTE PTR [ecx+0x29],bl
  406bf2:	push   esp
  406bf3:	dec    esi
  406bf4:	sub    al,0x45
  406bf6:	cli    
  406bf7:	add    al,0xab
  406bf9:	retf   0xa317
  406bfc:	test   DWORD PTR [ebx+0x1c57bfab],ebx
  406c02:	sub    al,0x52
  406c04:	fwait
  406c05:	cld    
  406c06:	mov    al,ds:0xda24d45f
  406c0b:	or     eax,0x60555d6f
  406c10:	(bad)  
  406c11:	push   ss
  406c12:	out    dx,al
  406c13:	or     BYTE PTR [ebx],cl
  406c15:	int3   
  406c16:	push   ecx
  406c17:	fcmovbe st,st(6)
  406c19:	fsin   
  406c1b:	shl    BYTE PTR [ebx],cl
  406c1d:	adc    ecx,esp
  406c1f:	int3   
  406c20:	into   
  406c21:	sub    bl,bh
  406c23:	dec    DWORD PTR [edi]
  406c25:	add    BYTE PTR [esi-0x1b08b5d8],dl
  406c2b:	sbb    dh,dl
  406c2d:	and    al,0x96
  406c2f:	xor    DWORD PTR [ebx+0x62],edi
  406c32:	into   
  406c33:	cmp    esi,DWORD PTR [edx]
  406c35:	jl     0x406be6
  406c37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c38:	ret    
  406c39:	neg    dl
  406c3b:	stos   BYTE PTR es:[edi],al
  406c3c:	das    
  406c3d:	push   edi
  406c3e:	sbb    ebx,DWORD PTR [ebp-0x5a]
  406c41:	sbb    BYTE PTR [edi],bh
  406c43:	lock scas eax,DWORD PTR es:[edi]
  406c45:	jl     0x406bd8
  406c47:	inc    edi
  406c48:	cmp    eax,0xc77e8434
  406c4d:	mov    bl,0x6a
  406c4f:	xor    al,0x8e
  406c51:	dec    edi
  406c52:	adc    eax,DWORD PTR [ecx+0x1c]
  406c55:	(bad)  
  406c56:	inc    edx
  406c57:	mov    edi,DWORD PTR [esi+0x5a]
  406c5a:	mov    eax,ds:0xdd4caa9e
  406c5f:	dec    ebp
  406c60:	push   ebp
  406c61:	cdq    
  406c62:	add    eax,0x79579e94
  406c67:	add    edi,DWORD PTR ds:0xe93c83a7
  406c6d:	fst    DWORD PTR [eax-0x1fc61d71]
  406c73:	repnz loopne 0x406cbf
  406c76:	js     0x406ce4
  406c78:	dec    esp
  406c79:	jo     0x406c99
  406c7b:	adc    DWORD PTR [ebp-0x4c],edi
  406c7e:	dec    edi
  406c7f:	rol    DWORD PTR [ebx+0xdf54236],cl
  406c85:	add    ebx,eax
  406c87:	push   0x3541a2e0
  406c8c:	das    
  406c8d:	xor    DWORD PTR [ebx-0x66],esp
  406c90:	and    cl,dl
  406c92:	sbb    edi,DWORD PTR [eax-0xf786c03]
  406c98:	adc    BYTE PTR [edx+0x77],ch
  406c9b:	aam    0xd6
  406c9d:	ins    DWORD PTR es:[edi],dx
  406c9e:	lods   eax,DWORD PTR ds:[esi]
  406c9f:	std    
  406ca0:	scas   al,BYTE PTR es:[di]
  406ca2:	sub    edi,DWORD PTR [esi-0x243463aa]
  406ca8:	(bad)  
  406ca9:	std    
  406caa:	dec    esp
  406cab:	jno    0x406d26
  406cad:	adc    dl,0xc8
  406cb0:	ins    BYTE PTR es:[edi],dx
  406cb1:	pop    esp
  406cb2:	pop    esp
  406cb3:	mov    ds:0x86359181,eax
  406cb8:	pushf  
  406cb9:	out    0x19,eax
  406cbb:	js     0x406d36
  406cbd:	fsub   QWORD PTR ds:0x875effb9
  406cc3:	cwde   
  406cc4:	ins    DWORD PTR es:[edi],dx
  406cc5:	mov    ebp,0x56083b2d
  406cca:	jns    0x406c85
  406ccc:	(bad)  
  406ccd:	cli    
  406cce:	jb     0x406c9c
  406cd0:	popa   
  406cd1:	mov    ?,WORD PTR [eax*1-0x29f08683]
  406cd8:	pop    eax
  406cd9:	enter  0xe398,0xb4
  406cdd:	addr16 (bad) 
  406cdf:	or     BYTE PTR [edx],0x84
  406ce2:	stos   BYTE PTR es:[edi],al
  406ce3:	call   DWORD PTR [ecx-0x10957840]
  406ce9:	fmul   QWORD PTR [edx]
  406ceb:	(bad)  
  406cec:	jle    0x406c82
  406cee:	xor    DWORD PTR [ecx+0x28],0x6191f297
  406cf5:	rcr    BYTE PTR [esi],0xc4
  406cf8:	pop    ebp
  406cf9:	leave  
  406cfa:	xor    cl,BYTE PTR [edi-0x1a]
  406cfd:	jno    0x406d30
  406cff:	idiv   DWORD PTR [edx-0x66]
  406d02:	or     eax,0x25d001c3
  406d07:	mov    eax,ds:0xdf33469e
  406d0c:	mov    ebx,0x61eb16c7
  406d11:	cmp    eax,0x6ac44e2
  406d16:	push   es
  406d17:	sahf   
  406d18:	add    ebx,DWORD PTR [edx-0xb]
  406d1b:	in     al,dx
  406d1c:	xchg   ebp,eax
  406d1d:	cmp    edi,eax
  406d1f:	dec    esi
  406d20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d21:	xchg   ecx,eax
  406d22:	or     eax,0xb9c90fa4
  406d27:	sbb    al,bl
  406d29:	jae    0x406d59
  406d2b:	or     BYTE PTR [esi+0x4d],bl
  406d2e:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  406d30:	mov    bl,0x7
  406d32:	sub    eax,ebp
  406d34:	push   ds
  406d35:	hlt    
  406d36:	les    esp,FWORD PTR [edx-0x11]
  406d39:	fcmovbe st,st(5)
  406d3b:	adc    DWORD PTR [esp-0x6d],edx
  406d3f:	ins    BYTE PTR es:[edi],dx
  406d40:	sub    eax,DWORD PTR [edx]
  406d42:	ins    BYTE PTR es:[edi],dx
  406d43:	out    0xf,eax
  406d45:	pushf  
  406d46:	sub    BYTE PTR [edx-0x45],dh
  406d49:	ja     0x406ce6
  406d4b:	and    DWORD PTR [esi+eax*1+0x17],ebx
  406d4f:	out    dx,al
  406d50:	add    eax,0x56bebc9f
  406d55:	lea    ebx,[ecx]
  406d57:	jp     0x406d72
  406d59:	inc    BYTE PTR [eax]
  406d5b:	pushf  
  406d5c:	mov    al,ds:0xad5e1f58
  406d61:	loop   0x406d63
  406d63:	shl    BYTE PTR [edi],0x4a
  406d66:	aas    
  406d67:	shr    BYTE PTR [esi+0x5b],cl
  406d6a:	lods   eax,DWORD PTR ds:[esi]
  406d6b:	xchg   ecx,eax
  406d6c:	push   ecx
  406d6d:	mov    ebx,0xecd781a0
  406d72:	int    0x9c
  406d74:	ins    BYTE PTR es:[edi],dx
  406d75:	push   ecx
  406d76:	sub    eax,0xc796d17f
  406d7b:	add    eax,0xfeb4e09f
  406d80:	lods   al,BYTE PTR ds:[esi]
  406d81:	aam    0xdf
  406d83:	and    al,0xcb
  406d85:	sahf   
  406d86:	and    ecx,0x3dae5c1d
  406d8c:	clc    
  406d8d:	(bad)  
  406d8e:	popf   
  406d8f:	mov    dh,0xd9
  406d91:	jno    0x406da1
  406d93:	push   cs
  406d94:	or     BYTE PTR [esi],al
  406d96:	rcl    ebp,cl
  406d98:	das    
  406d99:	addr16 retf 0x6a0e
  406d9d:	ficomp WORD PTR [edx-0x4e]
  406da0:	dec    eax
  406da1:	jmp    0x406dba
  406da3:	or     BYTE PTR [edi-0x33],cl
  406da6:	fstp   QWORD PTR [eax]
  406da8:	ja     0x406dc6
  406daa:	cdq    
  406dab:	mov    ebx,0xc3c032db
  406db0:	dec    esp
  406db1:	add    BYTE PTR [esi+0x40],cl
  406db4:	sub    al,0xb0
  406db6:	int    0x1d
  406db8:	pop    edx
  406db9:	mov    esi,0xaffaf0f9
  406dbe:	sbb    eax,ebp
  406dc0:	xchg   DWORD PTR [esi+0x17739ac],esi
  406dc6:	and    cl,BYTE PTR [ebp+ebp*8+0x68e4da56]
  406dcd:	out    0xf5,al
  406dcf:	sub    BYTE PTR [ecx],0x9f
  406dd2:	xchg   esp,eax
  406dd3:	out    0xee,al
  406dd5:	or     ebx,ebp
  406dd7:	pop    edi
  406dd8:	pop    edx
  406dd9:	cmp    al,0xba
  406ddb:	repz les edx,FWORD PTR [di+0x1d]
  406de0:	jecxz  0x406df4
  406de2:	in     eax,0x77
  406de4:	stos   DWORD PTR es:[edi],eax
  406de5:	data16 jno 0x406e53
  406de8:	sbb    eax,ecx
  406dea:	ret    
  406deb:	pop    esp
  406dec:	dec    ecx
  406ded:	int    0xf2
  406def:	and    al,0x43
  406df1:	push   edx
  406df2:	mov    eax,0xe4291b7f
  406df7:	cwde   
  406df8:	and    BYTE PTR [edi+0x6247cc88],0x76
  406dff:	or     eax,0x139af14e
  406e04:	add    DWORD PTR [eax],0x9f61eb7a
  406e0a:	cmp    ah,BYTE PTR [ebx+0x469d8400]
  406e10:	jb     0x406d9e
  406e12:	mov    edx,0x406ff910
  406e17:	xchg   DWORD PTR [ebx+0x5a2b4bd],edi
  406e1d:	push   ss
  406e1e:	jmp    0x96d7dfa
  406e23:	mov    edi,0x53efb80e
  406e28:	cmp    esi,eax
  406e2a:	ficom  DWORD PTR [edx]
  406e2c:	inc    esi
  406e2d:	(bad)  
  406e2e:	fmul   st,st(3)
  406e30:	adc    eax,0x26144ddd
  406e35:	or     esp,DWORD PTR [edi]
  406e37:	xchg   ebx,eax
  406e38:	mov    ebp,DWORD PTR [edi]
  406e3a:	bound  edi,QWORD PTR ds:0x64603fe
  406e40:	pop    esp
  406e41:	in     al,0x42
  406e43:	sbb    BYTE PTR [ecx+0x41ce8dec],dl
  406e49:	xchg   esp,eax
  406e4a:	mov    al,ds:0x5e32a35b
  406e4f:	test   al,0x92
  406e51:	in     al,0xa6
  406e53:	jbe    0x406e4b
  406e55:	xchg   esi,eax
  406e56:	in     eax,dx
  406e57:	aaa    
  406e58:	lods   eax,DWORD PTR ds:[esi]
  406e59:	mov    eax,0xe9801d3a
  406e5e:	pop    ebp
  406e5f:	fsubr  QWORD PTR [eax-0x79]
  406e62:	jnp    0x406ee0
  406e64:	xchg   ecx,eax
  406e65:	outs   dx,DWORD PTR ds:[esi]
  406e66:	sahf   
  406e67:	cmp    al,0x1e
  406e69:	jecxz  0x406ee0
  406e6b:	push   ebx
  406e6c:	test   DWORD PTR [ebx+0x49655618],ebx
  406e72:	mov    ebp,0x8fe78407
  406e77:	loopne 0x406e3f
  406e79:	out    0x87,al
  406e7b:	dec    eax
  406e7c:	lods   eax,DWORD PTR ds:[esi]
  406e7d:	sbb    al,0x57
  406e7f:	mov    dl,0x3e
  406e81:	stos   BYTE PTR es:[edi],al
  406e82:	mov    ah,0x21
  406e84:	retf   0x6a75
  406e87:	sbb    BYTE PTR [edi+0x23],dl
  406e8a:	mov    ecx,0xc115ed68
  406e8f:	add    ebp,esi
  406e91:	sub    al,0x47
  406e93:	xchg   ecx,eax
  406e94:	pop    ds
  406e95:	cwde   
  406e96:	imul   ebp,DWORD PTR [ecx+0x675a7410],0x7eba0753
  406ea0:	adc    DWORD PTR [ecx],edx
  406ea2:	icebp  
  406ea3:	into   
  406ea4:	sbb    DWORD PTR [ebx-0xd2c1008],0x8a3ece28
  406eae:	dec    edi
  406eaf:	enter  0x37f3,0x91
  406eb3:	adc    al,0x21
  406eb5:	retf   
  406eb6:	mov    dl,0x4e
  406eb8:	mov    DWORD PTR [esi+ebx*2+0x72],esp
  406ebc:	ins    BYTE PTR es:[edi],dx
  406ebd:	mov    ah,0x19
  406ebf:	pop    ss
  406ec0:	ja     0x406f0f
  406ec2:	dec    ecx
  406ec3:	mov    ch,0xb3
  406ec5:	pop    edx
  406ec6:	push   cs
  406ec7:	ret    0x4c6e
  406eca:	cmp    al,0xc4
  406ecc:	dec    eax
  406ecd:	push   ss
  406ece:	and    cl,BYTE PTR [ebx-0x635ba4c6]
  406ed4:	mov    ch,0xb3
  406ed6:	jle    0x406eca
  406ed8:	mov    al,ds:0xf3bde874
  406edd:	add    ebx,ecx
  406edf:	out    dx,eax
  406ee0:	mov    ch,0x83
  406ee2:	adc    al,0x21
  406ee4:	retf   
  406ee5:	adc    al,0xa6
  406ee7:	das    
  406ee8:	fld    TBYTE PTR [ebp-0x71b150bc]
  406eee:	dec    ebx
  406eef:	xchg   edx,eax
  406ef0:	aas    
  406ef1:	pop    ss
  406ef2:	jae    0x406f64
  406ef4:	xchg   ebp,eax
  406ef5:	mov    al,ds:0x2237f542
  406efa:	adc    DWORD PTR [ebx],eax
  406efc:	sahf   
  406efd:	push   ebx
  406efe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406eff:	fistp  DWORD PTR [edi]
  406f01:	out    dx,al
  406f02:	repz mov ds,edx
  406f05:	push   0x70
  406f07:	cs aas 
  406f09:	mov    gs,WORD PTR [ecx+0x5e1ed2e]
  406f0f:	dec    esi
  406f10:	imul   edi,DWORD PTR [ecx+0x6be7a8a1],0xffffff98
  406f17:	stos   DWORD PTR es:[edi],eax
  406f18:	nop
  406f19:	ins    DWORD PTR es:[edi],dx
  406f1a:	cmp    ch,BYTE PTR [esi]
  406f1c:	aas    
  406f1d:	loopne 0x406f79
  406f1f:	mov    ds:0x5a544fba,al
  406f24:	out    dx,eax
  406f25:	test   DWORD PTR [edx+0x14],edi
  406f28:	mov    ah,0x74
  406f2a:	jle    0x406f73
  406f2c:	call   0xb670:0x2663e75d
  406f33:	cmp    bl,0xb3
  406f36:	aam    0x6d
  406f38:	lods   al,BYTE PTR gs:[esi]
  406f3a:	cmp    DWORD PTR [ebp+eax*8+0x31c95cad],0x36
  406f42:	das    
  406f43:	push   ebp
  406f44:	(bad)  
  406f45:	mov    eax,0x1e354a45
  406f4a:	test   al,0x50
  406f4c:	xchg   ch,dl
  406f4e:	(bad)  
  406f4f:	xchg   ecx,eax
  406f50:	fdivr  QWORD PTR ds:0xdb67a265
  406f56:	fcmovnu st,st(5)
  406f58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f59:	adc    ebp,esp
  406f5b:	ror    dh,0x39
  406f5e:	mov    ebp,DWORD PTR [edi-0x4e375d46]
  406f64:	hlt    
  406f65:	out    dx,al
  406f66:	xchg   ebx,eax
  406f67:	push   es
  406f68:	sbb    bl,BYTE PTR [esi+0x63]
  406f6b:	sub    ebx,DWORD PTR [esi-0x7e]
  406f6e:	nop
  406f6f:	or     BYTE PTR [edx],bl
  406f71:	add    eax,0x64c7e678
  406f76:	push   cs
  406f77:	imul   ebx,esi,0x3a511106
  406f7d:	xor    DWORD PTR [eax+0x7f88a094],edx
  406f83:	into   
  406f84:	(bad)  
  406f85:	test   eax,0xddcf03e4
  406f8a:	sbb    BYTE PTR [ebx-0xa8c1c54],cl
  406f90:	mov    bh,0x7e
  406f92:	aad    0x8a
  406f94:	xchg   edi,eax
  406f95:	test   eax,0x9b22d87c
  406f9a:	push   ebp
  406f9b:	loope  0x406f2b
  406f9d:	adc    esi,edi
  406f9f:	mov    cl,0xda
  406fa1:	push   ebp
  406fa2:	jmp    0x3c57:0x669a12e3
  406fa9:	ja     0x407012
  406fab:	stos   BYTE PTR es:[edi],al
  406fac:	dec    ebp
  406fad:	xor    al,0x39
  406faf:	in     eax,0x25
  406fb1:	add    DWORD PTR [ebp+0xa],eax
  406fb4:	mov    ebx,0x208986ff
  406fb9:	or     edx,DWORD PTR [edx-0x33]
  406fbc:	jg     0x406f41
  406fbe:	mov    dh,0x49
  406fc0:	repnz les edi,FWORD PTR ds:0xa7f4cf90
  406fc7:	sbb    DWORD PTR [eax+0x28],eax
  406fca:	int3   
  406fcb:	fucomp st(5)
  406fcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fce:	stos   DWORD PTR es:[edi],eax
  406fcf:	das    
  406fd0:	test   al,0xe5
  406fd2:	out    dx,eax
  406fd3:	sub    al,0x8e
  406fd5:	es pop eax
  406fd7:	fprem1 
  406fd9:	sbb    dh,dl
  406fdb:	and    bl,BYTE PTR [esi]
  406fdd:	mov    bl,0x41
  406fdf:	addr16 loop 0x407060
  406fe2:	xchg   edi,eax
  406fe3:	lea    ebx,[ecx+0x15]
  406fe6:	pop    esp
  406fe7:	(bad)  
  406fe8:	stos   BYTE PTR es:[edi],al
  406fe9:	fbld   TBYTE PTR [esi-0x5c]
  406fec:	imul   ebx,DWORD PTR [ecx],0x37
  406fef:	mov    esi,0xf873072f
  406ff4:	mov    ds:0x9d0bbe53,al
  406ff9:	pop    ecx
  406ffa:	dec    ebp
  406ffb:	adc    BYTE PTR [eax+esi*8+0x76],dh
  406fff:	inc    ecx
  407000:	xor    BYTE PTR [edx],bh
  407002:	mov    cl,BYTE PTR [edx+ebx*2-0x70]
  407006:	repnz dec ecx
  407008:	test   al,0xe9
  40700a:	sub    BYTE PTR [ebp+0x7c93d13a],ah
  407010:	add    DWORD PTR [ecx+0x7],ebp
  407013:	arpl   WORD PTR [ebx],di
  407015:	mov    eax,ds:0x2cb84967
  40701a:	cwd    
  40701c:	xchg   edx,eax
  40701d:	(bad)  
  40701e:	and    al,0x24
  407020:	add    DWORD PTR [edi],edx
  407022:	je     0x407067
  407024:	stos   BYTE PTR es:[edi],al
  407025:	add    eax,0x6d731658
  40702a:	aam    0xaf
  40702c:	(bad)  
  40702d:	mov    ds:0x4a05cd29,eax
  407032:	out    dx,eax
  407033:	(bad)  [eax-0x5]
  407036:	div    BYTE PTR ds:0x6c02c8bc
  40703c:	fiadd  DWORD PTR [ecx-0x66]
  40703f:	push   ss
  407040:	fdivrp st(5),st
  407042:	sbb    edi,DWORD PTR [ebp-0x588e357]
  407048:	imul   esp,DWORD PTR [ebx+0x621fc3a],0xffffffaf
  40704f:	dec    esi
  407050:	shl    BYTE PTR [eax],cl
  407052:	cli    
  407053:	sbb    BYTE PTR [edi-0x7b5067a4],bl
  407059:	scas   eax,DWORD PTR es:[edi]
  40705a:	sbb    ebx,DWORD PTR [esi]
  40705c:	sbb    DWORD PTR ds:0x55803844,ebx
  407062:	out    0x36,eax
  407064:	dec    ebx
  407065:	mov    edi,DWORD PTR [esi-0x61]
  407068:	inc    edx
  407069:	rol    BYTE PTR [esi],cl
  40706b:	push   ds
  40706c:	add    eax,ebx
  40706e:	leave  
  40706f:	daa    
  407070:	add    al,0x76
  407072:	push   edi
  407073:	jnp    0x4070d3
  407075:	repnz and dh,BYTE PTR [ecx+0x7fe8d7af]
  40707c:	cmp    esp,DWORD PTR [ebx+0x2d20d675]
  407082:	pop    eax
  407084:	dec    edi
  407085:	mov    ds:0x9bd190b6,al
  40708a:	test   al,0xe2
  40708c:	jl     0x407047
  40708e:	ds mov ebx,0x1f837e05
  407094:	sub    BYTE PTR [esi+ecx*2],dl
  407097:	popf   
  407098:	sti    
  407099:	bound  ecx,QWORD PTR [edi]
  40709b:	seto   BYTE PTR [esp+ebp*1]
  40709f:	xchg   ecx,eax
  4070a0:	sahf   
  4070a1:	scas   eax,DWORD PTR es:[edi]
  4070a2:	jp     0x40709f
  4070a4:	sbb    eax,0x1ff9d517
  4070a9:	clc    
  4070aa:	data16 mov cl,0x35
  4070ad:	xchg   ebx,eax
  4070ae:	xor    ch,BYTE PTR [esi]
  4070b0:	add    DWORD PTR [ebp-0x34],ebx
  4070b3:	sbb    dl,dh
  4070b5:	pop    ebx
  4070b6:	jae    0x407118
  4070b8:	in     eax,0xe0
  4070ba:	popf   
  4070bb:	scas   eax,DWORD PTR es:[edi]
  4070bc:	std    
  4070bd:	or     eax,0xcb6a33c4
  4070c2:	sub    BYTE PTR [ecx-0x8b1056a],al
  4070c8:	adc    esi,DWORD PTR [eax]
  4070ca:	stos   BYTE PTR es:[edi],al
  4070cb:	lea    ebx,[ebx-0x73134b8]
  4070d1:	je     0x4070b2
  4070d3:	and    cl,al
  4070d5:	scas   al,BYTE PTR es:[edi]
  4070d6:	bound  esp,QWORD PTR [esi+esi*4+0x33]
  4070da:	cmp    esp,esp
  4070dc:	cdq    
  4070dd:	in     al,0x9b
  4070df:	sbb    eax,0x6c29f873
  4070e4:	push   esi
  4070e5:	dec    edi
  4070e6:	cli    
  4070e7:	cdq    
  4070e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070e9:	sti    
  4070ea:	adc    DWORD PTR [edx],edi
  4070ec:	icebp  
  4070ed:	mov    ebp,0x3c2771d9
  4070f2:	jp     0x4070f1
  4070f4:	cmp    eax,0x76745e54
  4070f9:	sbb    esi,DWORD PTR [edx+0x46]
  4070fc:	sub    DWORD PTR [ecx+edx*2+0x23],edi
  407100:	dec    edi
  407101:	(bad)  
  407102:	pop    esi
  407103:	xor    eax,0x4285be2a
  407108:	mov    esi,0xe8921ac7
  40710d:	sub    ebp,esp
  40710f:	sub    eax,0xc8dfcda9
  407114:	push   esi
  407115:	mov    esi,0x699ce563
  40711a:	jae    0x407150
  40711c:	jne    0x4070c7
  40711e:	lods   al,BYTE PTR ds:[esi]
  40711f:	sbb    edx,DWORD PTR [ebp+0x43]
  407122:	lahf   
  407123:	inc    edi
  407124:	sbb    BYTE PTR [edi+0x5eb13e5a],ch
  40712a:	sbb    dl,BYTE PTR [ebx+0x5dfce40c]
  407130:	cmp    edx,DWORD PTR [ebx]
  407132:	aaa    
  407133:	test   eax,0x9147129d
  407138:	adc    eax,0xe7b1d1e8
  40713d:	call   0x49c59709
  407142:	jmp    0x6602:0x7f756db1
  407149:	dec    esi
  40714a:	stos   DWORD PTR es:[edi],eax
  40714b:	dec    eax
  40714c:	mov    ebp,0x63fa109e
  407151:	push   0xb8b2457f
  407156:	stos   DWORD PTR es:[edi],eax
  407157:	mov    edx,0xb91049db
  40715c:	and    edi,DWORD PTR [edi]
  40715e:	adc    DWORD PTR [edi-0x7e],ebx
  407161:	jnp    0x40715f
  407163:	xchg   esp,eax
  407164:	arpl   WORD PTR [edi+0x67],bp
  407167:	into   
  407168:	add    al,0x17
  40716a:	and    eax,DWORD PTR [ebx+edx*4-0x1be2ab46]
  407171:	dec    esp
  407172:	ins    BYTE PTR es:[edi],dx
  407173:	imul   eax,DWORD PTR [ebx],0xff368fcc
  407179:	mov    ss:0x739fd020,eax
  40717f:	test   BYTE PTR [ebx-0x5ec2aaff],0x70
  407186:	js     0x4071da
  407188:	(bad)  
  407189:	int3   
  40718a:	sar    BYTE PTR [eax+0x19],1
  40718d:	arpl   WORD PTR [edx+esi*8],ax
  407190:	mov    ds:0x78a26da4,eax
  407195:	or     eax,0xc9e93631
  40719a:	retf   0xb3fe
  40719d:	mov    eax,0xd1284283
  4071a2:	loop   0x40718b
  4071a4:	aas    
  4071a5:	xor    ebp,ebx
  4071a7:	icebp  
  4071a8:	das    
  4071a9:	cmp    eax,0x307c606d
  4071ae:	jne    0x40720a
  4071b0:	out    0xac,eax
  4071b2:	sub    ecx,ebp
  4071b4:	and    BYTE PTR [ebp+eiz*1+0x31f36ebf],dh
  4071bb:	mov    bh,0x6a
  4071bd:	push   es
  4071be:	ds loopne 0x4071f9
  4071c1:	mov    edx,0x87302556
  4071c6:	repnz mov ebx,0x8202f379
  4071cc:	push   ebp
  4071cd:	adc    ebx,DWORD PTR [ebp-0x6e]
  4071d0:	push   0xd23ede01
  4071d5:	lods   al,BYTE PTR ds:[esi]
  4071d6:	out    0xb7,eax
  4071d8:	fwait
  4071d9:	mov    ds:0x834dda05,al
  4071de:	xor    cl,BYTE PTR [ebp+0x31]
  4071e1:	stc    
  4071e2:	ror    BYTE PTR ds:0xafeb0469,0xd0
  4071e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071ea:	into   
  4071eb:	jecxz  0x4071ab
  4071ed:	out    0x7e,al
  4071ef:	cmp    esp,ecx
  4071f1:	loopne 0x4071a7
  4071f3:	into   
  4071f4:	mov    ecx,0x5d878886
  4071f9:	ins    DWORD PTR es:[edi],dx
  4071fa:	sbb    BYTE PTR [esi-0xa],dh
  4071fd:	lds    ebp,FWORD PTR [ecx+0x6d]
  407200:	adc    DWORD PTR [esi+0x5a],edi
  407203:	hlt    
  407204:	stc    
  407205:	pop    eax
  407206:	(bad)  
  407208:	inc    esi
  407209:	fnstsw WORD PTR [ebp+0x24]
  40720c:	add    bh,BYTE PTR [esi+0x55534903]
  407212:	enter  0xca0b,0xd3
  407216:	retf   
  407217:	cli    
  407218:	mov    ch,0xcd
  40721a:	and    ebx,esp
  40721c:	loopne 0x40721b
  40721e:	(bad)  
  40721f:	jae    0x407298
  407221:	push   ds
  407222:	push   edi
  407223:	mov    WORD PTR [ebx-0x1d],cs
  407226:	clc    
  407227:	loopne 0x4072a2
  407229:	out    dx,eax
  40722a:	scas   al,BYTE PTR es:[edi]
  40722b:	gs pop edx
  40722d:	inc    edi
  40722e:	cmp    DWORD PTR [ebx-0x57c652cd],esi
  407234:	sub    ebp,DWORD PTR ds:0x6c88daf9
  40723a:	xchg   edi,eax
  40723b:	mov    eax,ds:0x4c803d4
  407240:	dec    ebx
  407241:	inc    edx
  407242:	pop    esi
  407243:	ffreep st(4)
  407246:	imul   DWORD PTR [ebx]
  407248:	inc    eax
  407249:	jp     0x40727d
  40724b:	mov    ds:0xa84aa347,al
  407250:	scas   eax,DWORD PTR es:[edi]
  407251:	pusha  
  407252:	lds    ebx,FWORD PTR [ebx]
  407254:	into   
  407255:	test   al,0x7e
  407257:	in     eax,dx
  407258:	dec    ebx
  407259:	lea    ebp,[edi+0x54ab2ac0]
  40725f:	pop    esi
  407260:	les    ecx,FWORD PTR [edx+0x4b]
  407263:	mov    bl,BYTE PTR [esi+0x5e]
  407266:	(bad)  
  407267:	or     edi,DWORD PTR [edx+0x3c]
  40726a:	adc    al,0x26
  40726c:	outs   dx,BYTE PTR ds:[esi]
  40726d:	(bad)  
  40726e:	cld    
  40726f:	mov    eax,0x7864375b
  407274:	(bad)  
  407275:	adc    bl,BYTE PTR [eax]
  407277:	cli    
  407278:	push   ds
  407279:	sbb    al,0x65
  40727b:	mov    BYTE PTR [ebp+0x5],0x4f
  40727f:	cmp    al,0xee
  407281:	jge    0x40726b
  407283:	lock pop edi
  407285:	xor    ecx,esp
  407287:	pop    esp
  407288:	popf   
  407289:	xchg   ecx,eax
  40728a:	dec    esp
  40728b:	dec    ecx
  40728c:	rol    ch,1
  40728e:	inc    eax
  40728f:	repnz sbb ah,BYTE PTR [edx+0x14]
  407293:	pop    esi
  407294:	jl     0x4072fb
  407296:	jno    0x4072aa
  407298:	xor    DWORD PTR [ecx-0x3b513a0d],edi
  40729e:	test   eax,0x58129b73
  4072a3:	add    DWORD PTR [esp+ecx*4-0x12bdaec0],edi
  4072aa:	sbb    eax,0x3ae8ecc1
  4072af:	lock out dx,al
  4072b1:	push   ds
  4072b2:	sub    bl,0xba
  4072b5:	outs   dx,BYTE PTR ds:[esi]
  4072b6:	pop    es
  4072b7:	ds push ds
  4072b9:	in     eax,dx
  4072ba:	jle    0x40727a
  4072bc:	jle    0x407276
  4072be:	test   DWORD PTR [ebx-0x22],edi
  4072c1:	mov    ds:0x5de2a4c3,eax
  4072c6:	int3   
  4072c7:	ins    DWORD PTR es:[edi],dx
  4072c8:	dec    DWORD PTR [esi]
  4072ca:	mov    bl,BYTE PTR [ecx]
  4072cc:	call   0x5688:0x3696833e
  4072d3:	neg    DWORD PTR [ebx+eiz*8+0x70]
  4072d7:	in     al,0x30
  4072d9:	dec    ecx
  4072da:	out    dx,al
  4072db:	ss scas al,BYTE PTR es:[edi]
  4072dd:	dec    edx
  4072de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072df:	push   esp
  4072e0:	sti    
  4072e1:	loop   0x407327
  4072e3:	pop    ds
  4072e4:	stos   DWORD PTR es:[edi],eax
  4072e5:	sub    eax,0xeafb342d
  4072ea:	rol    bh,cl
  4072ec:	sub    esi,edx
  4072ee:	ficom  WORD PTR [ebp-0x7a]
  4072f1:	inc    esp
  4072f2:	xchg   ebx,eax
  4072f3:	out    0x3d,al
  4072f5:	xchg   ecx,eax
  4072f6:	pushf  
  4072f7:	sbb    cl,BYTE PTR [ecx-0x2a40ec10]
  4072fd:	xor    dl,BYTE PTR [edx-0x48c70b0e]
  407303:	xchg   ecx,eax
  407304:	bound  eax,QWORD PTR [eax]
  407306:	lock add dh,BYTE PTR [eax-0x2b]
  40730a:	dec    BYTE PTR [edx-0x6c]
  40730d:	fidiv  WORD PTR [esi]
  40730f:	out    dx,eax
  407310:	jns    0x407320
  407312:	(bad)  
  407313:	scas   al,BYTE PTR es:[edi]
  407314:	sbb    eax,0xbe127df0
  407319:	idiv   DWORD PTR [edi-0x1b9ea9f2]
  40731f:	xchg   esp,eax
  407320:	shl    BYTE PTR [ebp+ebx*4-0x65f3b37],cl
  407327:	jmp    0x83c0:0xb4f72f03
  40732e:	xor    dh,BYTE PTR [ebx+edx*2+0x49dd7d24]
  407335:	xor    DWORD PTR [eax],edi
  407337:	arpl   WORD PTR [ebx-0xa552cee],cx
  40733d:	adc    eax,0x805bd83a
  407342:	push   ss
  407343:	outs   dx,BYTE PTR ds:[esi]
  407344:	jnp    0x4073a9
  407346:	inc    ebp
  407347:	mov    ebx,0x865ce3ee
  40734c:	pushf  
  40734d:	hlt    
  40734e:	jmp    0x407360
  407350:	dec    esi
  407351:	dec    esp
  407352:	fld    QWORD PTR [edx+0x32cba8b2]
  407358:	xchg   ecx,eax
  407359:	mov    ds:0xe805aa4a,al
  40735e:	jge    0x407305
  407360:	ins    BYTE PTR es:[edi],dx
  407361:	cli    
  407362:	test   BYTE PTR [eax],bl
  407364:	pop    ds
  407365:	pusha  
  407366:	pop    ds
  407367:	pop    esp
  407368:	(bad)  
  40736a:	daa    
  40736b:	xor    al,0x29
  40736d:	ss pop esp
  40736f:	adc    bl,BYTE PTR [edi+0x14]
  407372:	sub    DWORD PTR [ebx],eax
  407374:	pusha  
  407375:	inc    ecx
  407376:	xchg   ecx,eax
  407377:	xor    BYTE PTR [ebp+0x66f7829b],0x3a
  40737e:	fwait
  40737f:	xor    al,0x6c
  407381:	mov    esi,0xdf6114de
  407386:	es sbb eax,0x7b9c885f
  40738c:	or     ch,bl
  40738e:	dec    eax
  40738f:	sub    eax,0xb2211e39
  407394:	xchg   ebp,eax
  407395:	dec    ebp
  407396:	ror    BYTE PTR [edx],0x60
  407399:	ret    0xcc9d
  40739c:	fcom   DWORD PTR [ebx]
  40739e:	dec    ebx
  40739f:	inc    eax
  4073a0:	cmc    
  4073a1:	rcl    DWORD PTR [ebx+0x4a1e945],0x2b
  4073a8:	mov    ch,0xd7
  4073aa:	je     0x40733c
  4073ac:	mov    dh,0x39
  4073ae:	jle    0x407377
  4073b0:	or     edx,eax
  4073b2:	sub    al,0xa2
  4073b4:	push   ebp
  4073b5:	jecxz  0x40737c
  4073b7:	iret   
  4073b8:	(bad)  
  4073b9:	nop
  4073ba:	xchg   ebp,eax
  4073bb:	push   cs
  4073bc:	add    ah,BYTE PTR [edi+0x7882e4b5]
  4073c2:	add    BYTE PTR [ecx],ch
  4073c4:	and    eax,0x1f913690
  4073c9:	cdq    
  4073ca:	xor    edi,edx
  4073cc:	mov    ecx,0x53c3c731
  4073d1:	es mov eax,0x7a7a319c
  4073d7:	pop    es
  4073d8:	mov    bl,0xb6
  4073da:	and    al,0xb7
  4073dc:	xor    esp,DWORD PTR [ecx+0xfd2d1c0]
  4073e2:	mov    dl,0xb
  4073e4:	jmp    0x40742f
  4073e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073e7:	mov    ebp,0xbff4fc30
  4073ec:	std    
  4073ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073ee:	pop    ds
  4073ef:	(bad)  
  4073f0:	xor    DWORD PTR [ecx],esp
  4073f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073f3:	adc    DWORD PTR [edx+0x364dd0f8],eax
  4073f9:	xchg   edx,eax
  4073fa:	dec    ebx
  4073fb:	pushf  
  4073fc:	mov    ds:0x378682aa,eax
  407401:	mov    ch,0x68
  407403:	scas   al,BYTE PTR es:[edi]
  407404:	add    eax,0x98a1ea06
  407409:	cmp    al,0x57
  40740b:	cwde   
  40740c:	xchg   edi,eax
  40740d:	out    dx,al
  40740e:	fst    st(6)
  407410:	pop    edi
  407411:	and    eax,0x71e5cc46
  407416:	in     al,0x97
  407418:	cmp    edx,DWORD PTR [ecx+0x1a0185b6]
  40741e:	sti    
  40741f:	aam    0x8f
  407421:	pop    ebx
  407422:	mov    ah,ah
  407424:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407425:	out    0x11,al
  407427:	fdiv   DWORD PTR [edi+0x45a44223]
  40742d:	dec    edx
  40742e:	pop    eax
  40742f:	and    al,0x82
  407431:	xor    DWORD PTR [edi-0x44c34583],esi
  407437:	cmp    cl,dh
  407439:	mov    ebp,0xd4745d84
  40743e:	or     DWORD PTR [edx],0x5e
  407441:	in     al,dx
  407442:	xor    eax,0x7023a3f9
  407447:	sbb    DWORD PTR [ebx+ecx*8+0xc],esi
  40744b:	out    dx,eax
  40744c:	adc    al,0x5f
  40744e:	and    eax,0x5d08903a
  407453:	adc    bh,bh
  407455:	daa    
  407456:	jp     0x4074d4
  407458:	into   
  407459:	sub    al,0x6e
  40745c:	fdivrp st(3),st
  40745e:	int    0xc7
  407460:	mov    esp,0xe1c2813b
  407465:	into   
  407466:	out    0xcb,eax
  407468:	mov    ?,ecx
  40746a:	and    esp,DWORD PTR [ecx+0x1c]
  40746d:	mov    edi,esi
  40746f:	les    eax,FWORD PTR [ebp+0x47]
  407472:	cmp    dl,BYTE PTR [edx+0x8]
  407475:	jno    0x4074a7
  407477:	push   ebx
  407478:	mov    al,0x14
  40747a:	retf   0x2535
  40747d:	out    dx,eax
  40747e:	mov    edi,edi
  407480:	mov    ds:0x1ab1c612,eax
  407485:	mov    ecx,0x59535ddd
  40748a:	push   ds
  40748b:	fsqrt  
  40748d:	xchg   esp,eax
  40748e:	push   0x7696caf4
  407493:	inc    ecx
  407494:	aaa    
  407495:	pop    esi
  407496:	cdq    
  407497:	adc    DWORD PTR [ebp+0x3b],esi
  40749a:	je     0x407506
  40749c:	xchg   ebx,eax
  40749e:	jne    0x40750d
  4074a0:	data16 js 0x407518
  4074a3:	jne    0x4074ed
  4074a5:	ins    DWORD PTR es:[edi],dx
  4074a6:	lock cmp ecx,DWORD PTR [eax+0x1f672460]
  4074ad:	(bad)  
  4074ae:	mov    esi,0xd6009844
  4074b3:	cli    
  4074b4:	mov    eax,0xc1b08933
  4074b9:	jge    0x407480
  4074bb:	rcr    ecx,1
  4074bd:	dec    eax
  4074be:	xchg   BYTE PTR [esi-0x58],ah
  4074c1:	cs in  eax,0x9d
  4074c4:	inc    edi
  4074c5:	push   edi
  4074c6:	mov    ch,0x43
  4074c8:	outs   dx,DWORD PTR ds:[esi]
  4074c9:	and    ebx,DWORD PTR [edx]
  4074cb:	sbb    al,BYTE PTR [esp+ebp*1+0x3b]
  4074cf:	or     eax,0xcedcf1ba
  4074d4:	outs   dx,BYTE PTR ds:[esi]
  4074d5:	jmp    0xd5034c44
  4074da:	add    eax,0xc9b829d
  4074df:	mov    ecx,0x2ce4efa5
  4074e4:	out    0x48,eax
  4074e6:	pop    ecx
  4074e7:	fdivr  DWORD PTR [edi-0x238acb5a]
  4074ed:	dec    ebx
  4074ee:	shl    ah,1
  4074f0:	test   esp,esi
  4074f2:	cmp    eax,DWORD PTR [esi+ebx*1-0xd]
  4074f6:	sti    
  4074f7:	push   eax
  4074f8:	aaa    
  4074f9:	add    al,0xdf
  4074fb:	je     0x4074fc
  4074fd:	dec    DWORD PTR [ecx+0x50]
  407500:	sbb    dh,BYTE PTR [eax+ebp*4]
  407503:	stos   DWORD PTR es:[edi],eax
  407504:	push   edi
  407505:	mov    al,0x48
  407507:	scas   eax,DWORD PTR es:[edi]
  407508:	les    eax,FWORD PTR [edi+0x1ad37f0c]
  40750e:	dec    esi
  40750f:	push   ebx
  407510:	int    0xe1
  407512:	das    
  407513:	lahf   
  407514:	jne    0x407507
  407516:	xor    esp,edi
  407518:	in     al,dx
  407519:	push   ebx
  40751a:	ss daa 
  40751c:	test   al,0xa7
  40751e:	ret    
  40751f:	push   ss
  407520:	or     BYTE PTR [ebp+0x1],bl
  407523:	fs lock push eax
  407526:	push   0xa
  407528:	and    DWORD PTR [edi+edx*1],edx
  40752b:	add    eax,DWORD PTR [edx-0x23fcfb64]
  407531:	dec    ebp
  407532:	mov    edx,0xca019072
  407537:	(bad)  
  407538:	std    
  407539:	sbb    DWORD PTR [eax+0x61515510],ecx
  40753f:	pop    es
  407540:	xchg   edi,eax
  407541:	pop    ecx
  407542:	xchg   esi,eax
  407543:	or     al,bh
  407545:	push   esi
  407546:	sbb    BYTE PTR [ebp+edx*8+0x69],ah
  40754a:	nop
  40754b:	push   ebx
  40754c:	aad    0x12
  40754e:	ds in  eax,0xdf
  407551:	adc    eax,0xb87bbd28
  407556:	mov    edi,0x89af9352
  40755b:	add    bh,BYTE PTR [ecx-0x57116106]
  407561:	cmp    al,0xad
  407563:	ret    0xd06c
  407566:	test   DWORD PTR [edx],eax
  407568:	dec    esi
  407569:	bound  edi,QWORD PTR [edi+0x223f293c]
  40756f:	push   0xb7539f16
  407574:	stc    
  407575:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  407577:	and    ebx,ebx
  407579:	xlat   BYTE PTR ds:[ebx]
  40757a:	into   
  40757b:	mov    esp,0x17aa621f
  407580:	fcomp  QWORD PTR [ecx]
  407582:	std    
  407583:	adc    ah,BYTE PTR [ecx-0x3258785f]
  407589:	mov    esp,0xd6105aeb
  40758e:	mov    edx,0x2f6fca5f
  407593:	nop
  407594:	sahf   
  407595:	repz out dx,eax
  407597:	or     ebp,DWORD PTR [ebx+ebx*4-0x7a]
  40759b:	dec    edi
  40759c:	outs   dx,BYTE PTR ds:[esi]
  40759d:	lahf   
  40759e:	mov    ds,WORD PTR [ebp+edx*8+0x50]
  4075a2:	fs fsub st,st(5)
  4075a5:	dec    ebp
  4075a6:	pushf  
  4075a7:	cld    
  4075a8:	mov    ebx,0xa46f066
  4075ad:	xchg   DWORD PTR [edx+0x5f46325e],esi
  4075b3:	sbb    BYTE PTR [eax+0x69],ah
  4075b6:	or     BYTE PTR [ecx+0x15],al
  4075b9:	xchg   ebp,eax
  4075ba:	mov    ah,BYTE PTR [ebx-0x5e6c8265]
  4075c0:	enter  0xc6dc,0x85
  4075c4:	adc    DWORD PTR [ebx],eax
  4075c6:	aam    0xd0
  4075c8:	dec    esp
  4075c9:	outs   dx,BYTE PTR ds:[esi]
  4075ca:	or     DWORD PTR [ecx+ebx*1+0x4fe8ee04],0xaacde5ea
  4075d5:	retf   0x91d7
  4075d8:	call   0x9be6816a
  4075dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075de:	jp     0x407624
  4075e0:	int3   
  4075e1:	ins    DWORD PTR es:[edi],dx
  4075e2:	push   esp
  4075e3:	rcr    BYTE PTR [ebx-0x4f2a0761],1
  4075e9:	mov    al,BYTE PTR [ecx+0x23]
  4075ec:	nop
  4075ed:	xor    ecx,ebx
  4075ef:	imul   edi
  4075f1:	mov    ebp,DWORD PTR [ecx-0x1d]
  4075f4:	or     BYTE PTR [edi-0x59ca6860],0x84
  4075fb:	dec    ebp
  4075fc:	rcr    BYTE PTR [edx],cl
  4075fe:	xchg   edx,eax
  4075ff:	adc    al,0x54
  407601:	jecxz  0x407650
  407603:	jg     0x4075a0
  407605:	(bad)  
  407606:	and    edx,DWORD PTR [esi]
  407608:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407609:	popa   
  40760a:	mov    ds:0x3b13ea50,eax
  40760f:	and    edi,edx
  407611:	jl     0x4075e4
  407613:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407614:	adc    al,0xad
  407616:	pop    es
  407617:	push   eax
  407618:	sub    al,0xeb
  40761a:	outs   dx,DWORD PTR ds:[esi]
  40761b:	dec    esi
  40761c:	das    
  40761d:	adc    cl,BYTE PTR [ecx]
  40761f:	jbe    0x407667
  407621:	sbb    edi,ebx
  407623:	scas   al,BYTE PTR es:[edi]
  407624:	dec    esi
  407625:	nop
  407626:	ror    ah,0x16
  407629:	icebp  
  40762a:	mov    esi,DWORD PTR [ebp-0x2f]
  40762d:	es sti 
  40762f:	mov    ebx,0x89f03d0
  407634:	xchg   esp,eax
  407635:	(bad)  
  407636:	push   esi
  407637:	cmp    dh,BYTE PTR [ebx+0x7]
  40763a:	xor    esi,esi
  40763c:	cmp    al,0x5c
  40763e:	pop    ecx
  40763f:	xchg   esp,eax
  407640:	daa    
  407641:	ds jns 0x40762c
  407644:	inc    edx
  407645:	fdiv   st(5),st
  407647:	(bad)
  40764c:	fstp   TBYTE PTR [edx-0x19f7b029]
  407652:	scas   eax,DWORD PTR es:[edi]
  407653:	or     bh,BYTE PTR [esi]
  407655:	das    
  407656:	test   al,0xbb
  407658:	cmp    al,0x57
  40765a:	test   eax,0xa6703b0b
  40765f:	loopne 0x40761f
  407661:	jge    0x407625
  407663:	jecxz  0x40767a
  407665:	xchg   edx,eax
  407666:	sub    edx,DWORD PTR [ecx+0x630f9ce3]
  40766c:	mov    eax,0xdd59e82e
  407671:	xor    BYTE PTR [edx+0x5e],ch
  407674:	sub    DWORD PTR [esi+ebp*8+0x2ca7bd1c],0xffffff89
  40767c:	mov    BYTE PTR [eax+0x1353bfce],dh
  407682:	push   edx
  407683:	(bad)  
  407684:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407685:	sub    ch,BYTE PTR [ebx]
  407687:	adc    DWORD PTR [edi+0x38ef50f3],ebx
  40768d:	push   edi
  40768e:	and    ah,ch
  407690:	fwait
  407691:	enter  0xccdf,0xa
  407695:	cmp    DWORD PTR es:[esi+esi*4+0x72],0xb28db5dc
  40769e:	sbb    eax,0xa5810df8
  4076a3:	popa   
  4076a4:	sub    al,0x15
  4076a6:	jns    0x407705
  4076a8:	or     esp,esi
  4076aa:	aas    
  4076ab:	and    al,0xe2
  4076ad:	mov    al,ds:0xb1faa4ed
  4076b2:	xlat   BYTE PTR ds:[ebx]
  4076b3:	xor    eax,esi
  4076b5:	fsub   QWORD PTR [edi+0x43e5c2e3]
  4076bb:	add    bh,al
  4076bd:	mov    es,WORD PTR [eax-0x4c]
  4076c0:	jle    0x4076a8
  4076c2:	ins    BYTE PTR es:[edi],dx
  4076c3:	mov    edi,0xa9e6f6b8
  4076c8:	ja     0x40767d
  4076ca:	pop    eax
  4076cb:	or     DWORD PTR [ebx],edx
  4076cd:	mov    al,ds:0xac0c3cce
  4076d2:	lods   al,BYTE PTR ds:[esi]
  4076d3:	cmp    DWORD PTR [ebx-0x10],0xffffff89
  4076d7:	out    dx,eax
  4076d8:	mov    ah,0xb
  4076da:	adc    DWORD PTR [ecx-0x51],edi
  4076dd:	pop    edx
  4076de:	inc    esi
  4076df:	fbstp  TBYTE PTR [ecx]
  4076e1:	nop
  4076e2:	push   0xffffffbd
  4076e4:	xor    BYTE PTR [edi+0x4a],al
  4076e7:	lods   al,BYTE PTR ds:[esi]
  4076e8:	cmp    ah,BYTE PTR [ecx+0x9]
  4076eb:	shl    DWORD PTR [eax],cl
  4076ed:	ja     0x407743
  4076ef:	pop    eax
  4076f0:	xchg   ebx,eax
  4076f1:	cs cmc 
  4076f3:	mov    edi,0xa55a931c
  4076f8:	pop    es
  4076f9:	(bad)  
  4076fa:	or     ecx,edi
  4076fc:	out    0x5f,eax
  4076fe:	into   
  4076ff:	clc    
  407700:	xor    DWORD PTR [esi-0x15cc46bc],ebp
  407706:	out    dx,eax
  407707:	jecxz  0x40775b
  407709:	shr    DWORD PTR [edi+0x39aae202],cl
  40770f:	cmc    
  407710:	(bad)  
  407712:	aas    
  407713:	pop    esi
  407714:	mov    edi,0xf3cdf0f6
  407719:	mov    ah,0xe3
  40771b:	mov    cl,0x1
  40771d:	or     bl,BYTE PTR [ecx-0x77]
  407720:	mov    esi,0xf1ef5c73
  407725:	fimul  DWORD PTR [edi+0x43]
  407728:	shl    BYTE PTR [ecx+eiz*4-0x1d7f6389],cl
  40772f:	dec    edi
  407730:	and    edi,DWORD PTR [edi]
  407732:	add    ebx,DWORD PTR [ebp-0x13]
  407735:	push   ebx
  407736:	bswap  ebp
  407738:	ret    0x100e
  40773b:	stos   BYTE PTR es:[edi],al
  40773c:	leave  
  40773d:	adc    eax,DWORD PTR [edi+0x1d]
  407740:	sub    DWORD PTR [eax+0x24],ecx
  407743:	dec    esi
  407744:	imul   ebx,edi,0xbee7ef8f
  40774a:	dec    ebx
  40774b:	test   DWORD PTR [ebx],edx
  40774d:	xchg   edi,eax
  40774e:	push   0x3
  407750:	xchg   ebp,eax
  407751:	in     al,0xd4
  407753:	and    dh,dh
  407755:	in     eax,dx
  407756:	sbb    cl,0xff
  407759:	arpl   WORD PTR [ecx-0x2a4a6b5d],cx
  40775f:	neg    BYTE PTR ds:0xbe19f3ca
  407765:	xor    cl,ch
  407767:	inc    edx
  407768:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407769:	ror    ebx,1
  40776b:	ror    DWORD PTR [ecx],cl
  40776d:	xchg   BYTE PTR [edi-0x6b201206],bh
  407773:	ins    DWORD PTR es:[edi],dx
  407774:	dec    edi
  407775:	xor    eax,0xcf3ea497
  40777a:	adc    BYTE PTR fs:[ebx+0x7],bl
  40777e:	adc    al,0xb3
  407780:	pop    esi
  407781:	inc    ecx
  407782:	add    DWORD PTR [edx-0x271bd104],esi
  407788:	mov    dl,0xd6
  40778a:	xor    dl,BYTE PTR [edx-0x33]
  40778d:	ins    DWORD PTR es:[edi],dx
  40778e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40778f:	out    dx,al
  407790:	mov    db6,esp
  407793:	cmovne edi,ecx
  407796:	xor    BYTE PTR [ebx-0x79],al
  407799:	cmp    ecx,DWORD PTR [ebx+0x445bea2c]
  40779f:	push   ss
  4077a0:	mov    bl,0xf3
  4077a2:	cs call 0x8ad3fa5d
  4077a8:	push   esi
  4077a9:	cmp    BYTE PTR [esi],al
  4077ab:	je     0x407731
  4077ad:	sbb    eax,0xbf00490e
  4077b2:	retf   
  4077b3:	pop    ebx
  4077b4:	pop    es
  4077b5:	gs (bad) 
  4077b7:	push   ds
  4077b8:	jns    0x407778
  4077ba:	cmp    DWORD PTR [ecx],edi
  4077bc:	test   BYTE PTR [edx-0x7b],ch
  4077bf:	pop    ss
  4077c0:	pushf  
  4077c1:	pop    esi
  4077c2:	xchg   esp,eax
  4077c3:	les    ebp,FWORD PTR [ecx]
  4077c5:	retf   0x405f
  4077c8:	nop
  4077c9:	xor    eax,0x10f266a8
  4077ce:	icebp  
  4077cf:	js     0x4077ba
  4077d1:	sub    eax,0x83b65591
  4077d6:	cmp    BYTE PTR [ebp+0x48],cl
  4077d9:	mov    al,ds:0x8eae60eb
  4077de:	shl    BYTE PTR [esi+0x642f09aa],cl
  4077e4:	mov    eax,ds:0x990b6f6b
  4077e9:	jno    0x4077cd
  4077eb:	dec    esp
  4077ec:	nop
  4077ed:	scas   al,BYTE PTR es:[edi]
  4077ee:	fild   WORD PTR [esi+0x7feb5ba2]
  4077f4:	jae    0x407836
  4077f6:	in     al,0x34
  4077f8:	icebp  
  4077f9:	cmp    BYTE PTR [edx+0x51],0xe7
  4077fd:	jl     0x40786d
  4077ff:	and    BYTE PTR [ebp-0x2c],0xb
  407803:	xor    al,0xce
  407805:	mov    ch,0x53
  407807:	call   0x4bb45b67
  40780c:	icebp  
  40780d:	xchg   ebp,eax
  40780e:	lds    eax,FWORD PTR [ebx-0x8]
  407811:	jbe    0x4077b2
  407813:	es cwde 
  407815:	jecxz  0x4077bf
  407817:	fisttp QWORD PTR [edi-0x26e4147c]
  40781d:	dec    esi
  40781e:	mov    esi,0x64c49e83
  407823:	shr    BYTE PTR [eax-0x50339165],cl
  407829:	mov    edx,0x71760f0d
  40782e:	ficom  WORD PTR [edx+eiz*1+0x5fed7212]
  407835:	jno    0x4078a1
  407837:	call   0xa7ad29eb
  40783c:	sahf   
  40783d:	jmp    0x4077fe
  40783f:	bound  ebx,QWORD PTR ds:[edx+0x3c701b39]
  407846:	xor    BYTE PTR [ecx-0x4f92fe51],0x1a
  40784d:	dec    DWORD PTR [edx]
  40784f:	or     eax,0x78dfee4f
  407854:	sti    
  407855:	xchg   ebp,eax
  407856:	jle    0x407886
  407858:	sbb    eax,0x3c18a7d0
  40785d:	call   0x7e60392a
  407862:	pop    esi
  407863:	test   eax,0x1b779f79
  407868:	aaa    
  407869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40786a:	in     eax,dx
  40786b:	out    dx,al
  40786c:	jne    0x4078e6
  40786e:	sbb    esp,DWORD PTR [edx-0x31]
  407871:	pop    eax
  407872:	mov    dh,0x87
  407874:	aad    0x6e
  407876:	das    
  407877:	or     BYTE PTR [ebx-0x4e],0x95
  40787b:	push   ecx
  40787c:	jmp    0x4078c7
  40787e:	es rcl esi,cl
  407881:	cmp    esp,DWORD PTR [ebp+0x8]
  407884:	jg     0x407842
  407886:	ss jmp 0x407821
  407889:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40788a:	push   0x5f
  40788c:	push   ds
  40788d:	and    BYTE PTR [edi+0x6348d3ac],cl
  407893:	test   BYTE PTR [eax],ch
  407895:	scas   al,BYTE PTR es:[edi]
  407896:	outs   dx,BYTE PTR ds:[esi]
  407897:	sbb    BYTE PTR [ebp-0x2b],bl
  40789a:	and    edx,ebx
  40789c:	sub    al,BYTE PTR [eax+eiz*2-0x65e7da97]
  4078a3:	and    al,BYTE PTR [ecx+ecx*4+0x5438c37d]
  4078aa:	push   esi
  4078ab:	pop    ss
  4078ac:	cmp    eax,edi
  4078ae:	xor    DWORD PTR [eax+ebp*8-0x646ed8d1],esi
  4078b5:	cwde   
  4078b6:	dec    ebp
  4078b7:	jno    0x407906
  4078b9:	add    eax,DWORD PTR [edx-0x3f]
  4078bc:	add    bl,BYTE PTR [edx]
  4078be:	adc    bl,BYTE PTR [ebx]
  4078c0:	mov    DWORD PTR [esi],ebp
  4078c2:	jecxz  0x4078db
  4078c4:	push   DWORD PTR [esi+0x34]
  4078c7:	mov    eax,ds:0x68d00bd3
  4078cc:	out    0xea,al
  4078ce:	add    BYTE PTR [eax-0xb1ba7ab],dl
  4078d4:	mov    ecx,0x13396eab
  4078d9:	jnp    0x4078bc
  4078db:	lods   al,BYTE PTR ds:[esi]
  4078dc:	mov    esp,0x9e3d0dd
  4078e1:	inc    eax
  4078e2:	inc    edx
  4078e3:	xchg   ecx,eax
  4078e4:	lods   eax,DWORD PTR ds:[esi]
  4078e5:	mov    bl,0xf4
  4078e7:	and    al,0xc4
  4078e9:	daa    
  4078ea:	fs ins DWORD PTR es:[edi],dx
  4078ec:	inc    eax
  4078ed:	mov    gs,WORD PTR [ecx]
  4078ef:	not    BYTE PTR [ecx]
  4078f1:	gs cmp ebx,0xffffff85
  4078f5:	sahf   
  4078f6:	mov    cl,0xe6
  4078f8:	int    0x92
  4078fa:	leave  
  4078fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078fc:	ins    DWORD PTR es:[edi],dx
  4078fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078fe:	lods   eax,DWORD PTR ds:[esi]
  4078ff:	add    al,0x91
  407901:	cdq    
  407902:	lea    edx,[esi+0x22]
  407905:	fst    st(0)
  407907:	jp     0x407920
  407909:	aad    0x5a
  40790b:	lods   al,BYTE PTR ds:[esi]
  40790c:	dec    esp
  40790d:	xchg   eax,esi
  40790f:	add    eax,0x8554b876
  407914:	push   ebx
  407915:	cmp    al,0xc7
  407917:	fdiv   QWORD PTR [eax]
  407919:	mov    bh,0xab
  40791b:	add    bl,ch
  40791d:	xchg   edx,eax
  40791e:	dec    ebp
  40791f:	fisttp WORD PTR [ebx+0x42]
  407922:	xor    dh,BYTE PTR [edx-0x5b]
  407925:	mov    edi,0x94551fb2
  40792a:	int3   
  40792b:	je     0x40790a
  40792d:	fs test eax,0x7c8e84b3
  407933:	jns    0x40790c
  407935:	mov    al,0x71
  407937:	popa   
  407938:	inc    ecx
  407939:	add    ebx,eax
  40793b:	fld    QWORD PTR [ecx]
  40793d:	repnz mov bl,0xf0
  407940:	jb     0x40799b
  407942:	inc    ebp
  407943:	(bad)  
  407944:	cld    
  407945:	xor    ebp,DWORD PTR [ecx-0x71]
  407948:	xchg   ebp,eax
  407949:	mov    esp,0x35b3ef27
  40794e:	push   0x32
  407950:	dec    esp
  407951:	(bad)  
  407952:	adc    BYTE PTR [esi+esi*1+0xb],bh
  407956:	loopne 0x407978
  407958:	add    BYTE PTR [eax-0x37f083c9],dl
  40795e:	mov    al,ds:0xa0d2e552
  407963:	jge    0x4079d0
  407965:	test   eax,0xa0f36336
  40796a:	jo     0x407978
  40796c:	das    
  40796d:	xchg   bh,dl
  40796f:	or     esi,ebx
  407971:	mov    eax,0xe209f8a7
  407976:	xchg   ebx,eax
  407977:	scas   eax,DWORD PTR es:[edi]
  407978:	cmp    cl,BYTE PTR [edi+0x61]
  40797b:	jo     0x407973
  40797d:	jns    0x4079b8
  40797f:	out    dx,eax
  407980:	dec    ecx
  407981:	std    
  407982:	cmp    BYTE PTR [esp+eax*4-0x23],al
  407986:	mov    ds:0x6de4c101,eax
  40798b:	aaa    
  40798c:	push   es
  40798d:	in     al,0xe1
  40798f:	pop    edx
  407990:	sbb    eax,0xbc4aff64
  407995:	sbb    DWORD PTR [eax],0xffffffc9
  407998:	rcr    BYTE PTR [eax],cl
  40799a:	repnz cmp BYTE PTR [ecx],bh
  40799d:	(bad)  
  40799e:	lock mov bl,0xc3
  4079a1:	lea    esp,[edi+0xf]
  4079a4:	mov    ds:0xfad7826a,eax
  4079a9:	fs mov ebx,0xa56172c2
  4079af:	or     DWORD PTR [ebp-0x1ef86b71],eax
  4079b5:	jnp    0x40795f
  4079b7:	xor    DWORD PTR [esi],eax
  4079b9:	xchg   ecx,eax
  4079ba:	ds popa 
  4079bc:	scas   eax,DWORD PTR es:[edi]
  4079bd:	inc    eax
  4079be:	out    0x8b,eax
  4079c0:	call   0xbc5e:0x95b48644
  4079c7:	out    0x91,al
  4079c9:	mov    eax,0xf83000dc
  4079ce:	nop
  4079cf:	test   edi,ebx
  4079d1:	sbb    BYTE PTR [ecx],bh
  4079d3:	pop    ecx
  4079d4:	fiadd  WORD PTR [ebx+ecx*1-0x65]
  4079d8:	cli    
  4079d9:	test   BYTE PTR ds:0xf0255ad5,bh
  4079df:	lea    ecx,[eax-0x48]
  4079e2:	inc    ebp
  4079e3:	jno    0x40796d
  4079e5:	fnstsw WORD PTR [ebx+0x61]
  4079e8:	sub    eax,DWORD PTR [edx+edi*2+0x58]
  4079ec:	jns    0x407a14
  4079ee:	cwde   
  4079ef:	xor    al,0x67
  4079f1:	jecxz  0x4079d9
  4079f3:	retf   0xc193
  4079f6:	cmp    BYTE PTR [esi+0x7499cbb0],bh
  4079fc:	adc    BYTE PTR [ebp+0x36acc989],dl
  407a02:	aad    0x65
  407a04:	iret   
  407a05:	sbb    bh,0x35
  407a08:	push   ecx
  407a09:	pop    edi
  407a0a:	xor    BYTE PTR [edx],dh
  407a0c:	cmp    DWORD PTR [ebx+0x327cad68],esi
  407a12:	imul   ebx,DWORD PTR [edx],0x4e
  407a15:	hlt    
  407a16:	fwait
  407a17:	and    BYTE PTR [eax],0xf3
  407a1a:	rcl    cl,1
  407a1c:	cmp    ecx,DWORD PTR [edi+eax*2]
  407a1f:	dec    ecx
  407a20:	sbb    bh,BYTE PTR [ebx-0x446bf0be]
  407a26:	jecxz  0x407a61
  407a28:	daa    
  407a29:	mov    ebx,DWORD PTR [eax+0xb4fdafb]
  407a2f:	in     al,dx
  407a30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a31:	and    DWORD PTR [ebx-0x17],0x3a53692f
  407a38:	push   0xffffffc7
  407a3a:	sbb    ebx,ebp
  407a3c:	imul   ecx,esp,0xffffffde
  407a3f:	(bad)  [esi]
  407a41:	dec    esi
  407a42:	jmp    0x407a78
  407a44:	out    0xf4,al
  407a46:	jle    0x407a38
  407a48:	mov    esi,0xd7c0697
  407a4d:	inc    edx
  407a4e:	or     esp,DWORD PTR [ecx]
  407a50:	mov    ebp,0x8c03b0d5
  407a55:	and    bl,BYTE PTR [esi-0x44]
  407a58:	push   ebp
  407a59:	cwde   
  407a5a:	push   esi
  407a5b:	mov    dl,0x77
  407a5d:	cmp    eax,0xb13b8d45
  407a62:	mov    dh,0xef
  407a64:	push   esp
  407a65:	pop    esi
  407a66:	jne    0x407ac7
  407a68:	pop    ebp
  407a69:	clc    
  407a6a:	push   ebx
  407a6b:	jmp    0xb87b:0x4456d942
  407a72:	pop    eax
  407a73:	push   es
  407a74:	ins    BYTE PTR es:[edi],dx
  407a75:	dec    eax
  407a76:	lods   al,BYTE PTR ds:[esi]
  407a77:	push   ebp
  407a78:	mov    eax,0x722c905b
  407a7d:	mov    ecx,0x79d4ae7e
  407a82:	daa    
  407a83:	lods   al,BYTE PTR ds:[esi]
  407a84:	or     eax,0x8ac83137
  407a89:	mov    ds:0xd56ffd6,eax
  407a8e:	inc    ecx
  407a8f:	xor    ecx,eax
  407a91:	pop    esi
  407a92:	(bad)  
  407a93:	push   esp
  407a94:	fld    DWORD PTR [ecx-0x4aed04b9]
  407a9a:	test   esp,ebp
  407a9c:	xor    dl,cl
  407a9e:	bound  ebx,QWORD PTR [ecx-0x28]
  407aa1:	and    dl,BYTE PTR [edi-0x45]
  407aa4:	mov    dl,0x2c
  407aa6:	call   0xead9:0x9aa1d4d0
  407aad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407aae:	jbe    0x407ada
  407ab0:	jb     0x407a5c
  407ab2:	jg     0x407a86
  407ab4:	adc    DWORD PTR [eax-0x2],ebx
  407ab7:	mov    ebp,0xc8483987
  407abc:	jge    0x407ace
  407abe:	sub    eax,0xaa1ba943
  407ac3:	sbb    dh,ch
  407ac5:	xchg   esi,eax
  407ac6:	fs pusha 
  407ac8:	push   edx
  407ac9:	mov    esi,0xf2248af5
  407ace:	fdivr  DWORD PTR [esi]
  407ad0:	(bad)  
  407ad3:	(bad)  
  407ad4:	push   esi
  407ad5:	jno    0x407b0d
  407ad7:	repnz sub eax,0xf56d0e2
  407add:	stc    
  407ade:	ins    BYTE PTR es:[edi],dx
  407adf:	sar    DWORD PTR [eax+0x8],cl
  407ae2:	sub    al,0x7
  407ae4:	sbb    ch,BYTE PTR [edi+ecx*4]
  407ae7:	adc    BYTE PTR [eax+0x40333baa],0x4c
  407aee:	pop    eax
  407aef:	inc    edx
  407af0:	(bad)  
  407af1:	xor    eax,0xcac59a58
  407af6:	and    BYTE PTR [ecx+0x47],bh
  407af9:	push   es
  407afa:	(bad)  [ecx+eax*8+0xa42d7ab]
  407b01:	or     al,0xc8
  407b03:	mov    eax,0x7fcde4
  407b08:	int    0x96
  407b0a:	mov    bl,0xab
  407b0c:	in     al,dx
  407b0d:	test   eax,0x80db074d
  407b12:	inc    eax
  407b13:	jno    0x407acf
  407b15:	pushf  
  407b16:	cld    
  407b17:	lahf   
  407b18:	pop    es
  407b19:	xchg   esp,eax
  407b1a:	adc    eax,0x36fdd37d
  407b1f:	test   DWORD PTR [ebp-0x3679d168],0xaa29fe5
  407b29:	jl     0x407b44
  407b2b:	es sahf 
  407b2d:	data16 inc BYTE PTR [ecx-0x24ccd28a]
  407b34:	icebp  
  407b35:	daa    
  407b36:	mov    al,0x60
  407b38:	cmp    ebp,DWORD PTR [eax]
  407b3a:	sub    al,0x59
  407b3c:	sbb    eax,0xac8e90d8
  407b41:	test   al,0xeb
  407b43:	or     eax,0x528d9168
  407b48:	push   edi
  407b49:	cs mov dl,bl
  407b4c:	mov    ebx,0x84d55943
  407b51:	(bad)  [ecx-0x61f5e406]
  407b57:	lock fwait
  407b59:	sar    bh,1
  407b5b:	retf   0xc955
  407b5e:	push   dx
  407b60:	rcl    BYTE PTR [eax+0x22],cl
  407b63:	push   es
  407b64:	dec    edi
  407b65:	loopne 0x407b1f
  407b67:	jmp    0x7da5:0x1bca0244
  407b6e:	ja     0x407b3a
  407b70:	cmp    ebp,ebp
  407b72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b73:	mov    cl,0x1d
  407b75:	(bad)  
  407b76:	sub    eax,0x7afe1529
  407b7b:	jne    0x407b94
  407b7d:	mov    edx,DWORD PTR [edx]
  407b7f:	stos   DWORD PTR es:[edi],eax
  407b80:	cdq    
  407b81:	inc    esp
  407b82:	cld    
  407b83:	push   cs
  407b84:	jl     0x407bf4
  407b86:	sub    DWORD PTR [ebp-0x5a],ebp
  407b89:	cld    
  407b8a:	shl    BYTE PTR [ebx-0x6b],0xa6
  407b8e:	call   0x6607:0xd715ae2b
  407b95:	outs   dx,BYTE PTR ds:[esi]
  407b96:	mov    dl,dh
  407b98:	push   ebx
  407b99:	(bad)  
  407b9a:	fcomp  DWORD PTR [eax-0x20]
  407b9d:	sub    eax,0x4ffac1a3
  407ba2:	hlt    
  407ba3:	sbb    ch,ah
  407ba5:	(bad)  
  407ba6:	aad    0xd0
  407ba8:	sahf   
  407ba9:	mov    ebx,0xf39409e6
  407bae:	push   esp
  407baf:	mov    eax,ds:0xf7a6bbab
  407bb4:	fisub  DWORD PTR [ebx+0x2b3dd632]
  407bba:	jns    0x407bc5
  407bbc:	cmp    DWORD PTR [ecx-0x73882259],esp
  407bc2:	pop    ebp
  407bc3:	adc    eax,0x11db330d
  407bc8:	out    dx,eax
  407bc9:	int3   
  407bca:	xor    al,0x9e
  407bcc:	icebp  
  407bcd:	xor    edi,ebx
  407bcf:	scas   eax,DWORD PTR es:[edi]
  407bd0:	push   DWORD PTR [esp+esi*2+0x76]
  407bd4:	enter  0x363d,0x5e
  407bd8:	lahf   
  407bd9:	or     al,0x76
  407bdb:	dec    edi
  407bdc:	fisttp QWORD PTR [ebp+0x5e]
  407bdf:	cmp    al,0x1b
  407be1:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  407be3:	xchg   esi,eax
  407be4:	mov    cl,0x85
  407be6:	pop    ecx
  407be7:	and    ecx,DWORD PTR [eax-0x51]
  407bea:	push   ebp
  407beb:	dec    ebx
  407bec:	fwait
  407bed:	dec    ebp
  407bee:	sbb    al,0x7a
  407bf0:	mov    ecx,0x7cb95349
  407bf5:	mov    edx,0x9e5fb152
  407bfa:	push   0xffffffe7
  407bfc:	jb     0x407bfd
  407bfe:	xlat   BYTE PTR ds:[ebx]
  407bff:	dec    ecx
  407c00:	xor    cl,BYTE PTR [esi]
  407c02:	(bad)  
  407c03:	and    BYTE PTR [ebp+0x6a],dl
  407c06:	mov    edx,0xdb0fdadf
  407c0b:	cdq    
  407c0c:	and    esp,ebx
  407c0e:	ja     0x475791d5
  407c14:	mov    ah,0x1d
  407c16:	cmp    BYTE PTR [ebp-0xd],bh
  407c19:	outs   dx,DWORD PTR ds:[esi]
  407c1a:	or     eax,0x6c4d135
  407c1f:	push   edi
  407c20:	jae    0x407c77
  407c22:	(bad)  [eax*8+0x6522039c]
  407c29:	mov    edi,esp
  407c2b:	lea    edx,[edi]
  407c2d:	ror    BYTE PTR [ebx],0xa5
  407c30:	fiadd  DWORD PTR [ebp+ebx*1-0x5982325e]
  407c37:	dec    eax
  407c38:	adc    eax,0xdd7b7876
  407c3d:	dec    ebp
  407c3e:	mov    ecx,0x63ba20e5
  407c43:	cwde   
  407c44:	cmp    bl,al
  407c46:	mov    al,0x23
  407c48:	icebp  
  407c49:	push   eax
  407c4a:	jmp    0x4875:0xadf0e8df
  407c51:	out    dx,al
  407c52:	push   ecx
  407c53:	add    al,0x7b
  407c55:	inc    edx
  407c56:	jle    0x407c05
  407c58:	ret    0xf9ba
  407c5b:	cmc    
  407c5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c5d:	fcomi  st,st(4)
  407c5f:	xlat   BYTE PTR ds:[ebx]
  407c60:	xchg   edx,eax
  407c61:	les    edx,FWORD PTR [edi-0x3ed80c33]
  407c67:	into   
  407c68:	and    DWORD PTR [esi+0x77],ebx
  407c6b:	push   eax
  407c6c:	aad    0x48
  407c6e:	out    dx,eax
  407c6f:	adc    DWORD PTR [esi],edi
  407c71:	push   eax
  407c72:	pop    esp
  407c73:	into   
  407c74:	repz call 0x3e1b:0x3241
  407c7b:	lods   al,BYTE PTR ds:[esi]
  407c7c:	out    dx,eax
  407c7d:	xchg   esi,eax
  407c7e:	nop
  407c7f:	add    al,0x86
  407c81:	jo     0x407cbd
  407c83:	es xchg esp,eax
  407c85:	add    al,0xb2
  407c87:	fdivr  DWORD PTR [edi+0x45]
  407c8a:	mov    BYTE PTR [eax],ah
  407c8c:	scas   eax,DWORD PTR es:[edi]
  407c8d:	add    eax,0xa5d66513
  407c92:	in     eax,0x38
  407c94:	fdivr  st,st(5)
  407c96:	aaa    
  407c97:	inc    eax
  407c98:	add    BYTE PTR [esi-0x6f68081a],al
  407c9e:	mov    ah,0x6e
  407ca0:	xor    al,0xff
  407ca2:	(bad)
  407ca7:	dec    ebp
  407ca8:	loop   0x407d09
  407caa:	xor    eax,0xfffd8b67
  407caf:	mov    eax,0x2bc1d80
  407cb4:	lods   al,BYTE PTR ds:[esi]
  407cb5:	jae    0x407ced
  407cb7:	adc    al,0xca
  407cb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cba:	jnp    0x407d1f
  407cbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cbd:	xchg   ebp,eax
  407cbe:	mov    DWORD PTR [eax],edx
  407cc0:	(bad)  
  407cc1:	push   esp
  407cc2:	inc    esp
  407cc3:	inc    ecx
  407cc4:	and    eax,0xe9e50914
  407cc9:	and    eax,0x1e6bb462
  407cce:	out    dx,eax
  407ccf:	sub    eax,0xd4a5a2b6
  407cd4:	push   es
  407cd5:	fidivr DWORD PTR [edi-0x5b]
  407cd8:	int    0x61
  407cda:	jae    0x407ce4
  407cdc:	mov    al,ds:0x626880fd
  407ce1:	sbb    bl,bh
  407ce3:	iret   
  407ce4:	pusha  
  407ce5:	fst    DWORD PTR [edx+0x3589ab8c]
  407ceb:	xchg   esp,eax
  407cec:	inc    esi
  407ced:	dec    eax
  407cee:	in     al,0x94
  407cf0:	jmp    0xf43eec9c
  407cf5:	shl    BYTE PTR [ebp-0x71181da0],0xa2
  407cfc:	mov    bh,0x1b
  407cfe:	adc    al,0x81
  407d00:	ret    0x10cd
  407d03:	or     BYTE PTR [ebx-0x3f],0x8d
  407d07:	or     bh,BYTE PTR [ebp-0x37]
  407d0a:	sahf   
  407d0b:	and    BYTE PTR [edx+ebx*8-0x660c78d],bh
  407d12:	pop    edi
  407d13:	aad    0x51
  407d15:	fadd   DWORD PTR [eax+esi*8-0x1da26ffd]
  407d1c:	mov    bh,0x22
  407d1e:	loopne 0x407d74
  407d20:	mov    ah,0x26
  407d22:	test   dh,al
  407d24:	jns    0x407d4f
  407d26:	or     ecx,eax
  407d28:	xchg   esi,eax
  407d29:	clc    
  407d2a:	pop    esi
  407d2b:	repz push ebx
  407d2d:	int    0x7a
  407d2f:	std    
  407d30:	out    0x87,al
  407d32:	sbb    DWORD PTR [ebx-0x80],esp
  407d35:	mov    ds:0xe3a1a5c,al
  407d3a:	cdq    
  407d3b:	xchg   edi,eax
  407d3c:	aas    
  407d3d:	pop    edi
  407d3e:	stc    
  407d3f:	xor    bh,BYTE PTR [ebx-0x4d6fa315]
  407d45:	cs jmp 0x407d62
  407d48:	jb     0x407ccc
  407d4a:	fwait
  407d4b:	sub    al,0xe4
  407d4d:	jmp    0xa76a:0x59225c35
  407d54:	sub    eax,0x7ce129d5
  407d59:	in     al,0xa5
  407d5b:	jns    0x407d64
  407d5d:	call   0x54a36bb2
  407d62:	test   DWORD PTR [edi],esi
  407d64:	and    ebx,DWORD PTR [ecx+0x5a]
  407d67:	hlt    
  407d68:	stos   DWORD PTR es:[edi],eax
  407d69:	cmp    al,0x1c
  407d6b:	aaa    
  407d6c:	in     al,dx
  407d6d:	add    ah,BYTE PTR [ebx]
  407d6f:	pop    ebx
  407d70:	dec    esp
  407d71:	pop    eax
  407d72:	addr16 mov ds:0xfd16,eax
  407d76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d77:	or     eax,0x447ecbb5
  407d7c:	rol    bh,1
  407d7e:	sar    BYTE PTR [edi],cl
  407d80:	arpl   WORD PTR [esi-0x59],bp
  407d83:	mov    ebp,0xf6b55ed9
  407d88:	xchg   ebp,eax
  407d89:	or     eax,edx
  407d8b:	dec    esi
  407d8c:	jmp    0x52f6:0xb332e6b6
  407d93:	in     al,dx
  407d94:	and    BYTE PTR [esi],bl
  407d96:	push   eax
  407d97:	scas   eax,DWORD PTR es:[edi]
  407d98:	push   ds
  407d99:	cmp    ah,BYTE PTR [edi]
  407d9b:	xchg   ebp,eax
  407d9c:	leave  
  407d9d:	mov    cs,WORD PTR [ecx-0x78]
  407da0:	add    BYTE PTR [edx+0x9],cl
  407da3:	loop   0x407de3
  407da5:	lds    edx,FWORD PTR [eax+0x31ce5e53]
  407dab:	inc    esp
  407dac:	push   esp
  407dad:	add    DWORD PTR [eax+0x1],edi
  407db0:	pop    es
  407db1:	imul   edi,DWORD PTR [ebx-0x7b],0xc97df9c8
  407db8:	mov    DWORD PTR [ecx+eax*8],ebp
  407dbb:	aad    0xa3
  407dbd:	dec    eax
  407dbe:	push   edi
  407dbf:	fs out dx,eax
  407dc1:	mov    ds:0x230e35df,eax
  407dc6:	imul   edx,DWORD PTR [ecx+0x74],0x31
  407dca:	cmp    ebp,edx
  407dcc:	retf   0x895e
  407dcf:	loop   0x407e3d
  407dd1:	pop    eax
  407dd2:	or     DWORD PTR [ecx],0xffffff8c
  407dd5:	push   es
  407dd6:	cmp    esp,DWORD PTR [ebp+0x519af78a]
  407ddc:	aas    
  407ddd:	sti    
  407dde:	repz fisttp WORD PTR [eax]
  407de1:	cld    
  407de2:	rcr    edx,cl
  407de4:	inc    ebp
  407de5:	jmp    0xf95:0xee234b2f
  407dec:	xchg   edi,esp
  407dee:	lods   al,BYTE PTR ds:[esi]
  407def:	push   ecx
  407df0:	or     al,0x44
  407df2:	or     dh,BYTE PTR [edx]
  407df4:	jge    0x407ded
  407df6:	sbb    DWORD PTR [ecx-0x55705334],edi
  407dfc:	out    dx,al
  407dfd:	fwait
  407dfe:	push   eax
  407dff:	and    DWORD PTR [ebx-0x7a896fd7],esp
  407e05:	push   ss
  407e06:	mov    BYTE PTR [esi+0x6d],bh
  407e09:	mov    dh,0xef
  407e0b:	ds xchg edx,eax
  407e0d:	pushf  
  407e0e:	cwde   
  407e0f:	int3   
  407e10:	cmp    al,0x11
  407e12:	mov    dl,0xbd
  407e14:	dec    ecx
  407e15:	ja     0x407dc2
  407e17:	scas   al,BYTE PTR es:[edi]
  407e18:	lds    ecx,FWORD PTR [eax+ecx*2+0x20bab14]
  407e1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e20:	aaa    
  407e21:	push   ss
  407e22:	jl     0x407df8
  407e24:	call   0x32a8:0x3bd3082f
  407e2b:	lods   al,BYTE PTR ds:[esi]
  407e2c:	lds    eax,FWORD PTR [edi-0x27]
  407e2f:	mov    eax,0x266441d8
  407e34:	xor    esi,DWORD PTR [esi+0x764b3d70]
  407e3a:	iret   
  407e3b:	rcr    DWORD PTR [edi-0x53],cl
  407e3e:	xchg   ebp,eax
  407e3f:	pop    edx
  407e40:	xor    BYTE PTR [ebx],dl
  407e42:	inc    esi
  407e43:	push   edi
  407e44:	xchg   ebp,eax
  407e45:	xor    dh,0x1d
  407e48:	cmp    al,0xb7
  407e4a:	xchg   BYTE PTR [edi-0x6b6e9097],cl
  407e50:	int3   
  407e51:	add    bh,BYTE PTR [edi]
  407e53:	repnz cwde 
  407e55:	aam    0x98
  407e57:	and    DWORD PTR [edi-0x6785ba0c],eax
  407e5d:	dec    esp
  407e5e:	jns    0x407df5
  407e60:	cmp    esi,ebp
  407e62:	or     dh,BYTE PTR [ecx-0x31]
  407e65:	lods   al,BYTE PTR ds:[esi]
  407e66:	push   ss
  407e67:	stc    
  407e68:	mov    cl,BYTE PTR [ebp+0x40]
  407e6b:	inc    esi
  407e6c:	dec    eax
  407e6d:	fnstenv [ebx+0x2807489d]
  407e73:	mov    ecx,0xf13023f3
  407e78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e79:	mov    cl,0x25
  407e7b:	inc    esp
  407e7c:	xchg   ebp,eax
  407e7d:	mov    dh,0x57
  407e7f:	mov    al,ds:0xe39d6c0d
  407e84:	cs fld st(7)
  407e87:	mov    ds:0xa412c10e,eax
  407e8c:	pop    edx
  407e8d:	stc    
  407e8e:	ins    BYTE PTR es:[edi],dx
  407e8f:	xor    esp,ecx
  407e91:	pop    esi
  407e92:	cmp    DWORD PTR [edx+0x41d0b3a],0xffffffda
  407e99:	push   esi
  407e9a:	sbb    cl,dl
  407e9c:	sbb    al,0x3b
  407e9e:	sbb    al,0x18
  407ea0:	into   
  407ea1:	mov    al,ds:0x9e79429d
  407ea6:	pop    esi
  407ea7:	enter  0x22d6,0x9
  407eab:	cmp    BYTE PTR [ebp+0x66],bl
  407eae:	jns    0x407f2f
  407eb0:	imul   esp,DWORD PTR [edx+eiz*1+0x2dae6e69],0x150d4e75
  407ebb:	xchg   ebx,eax
  407ebc:	adc    DWORD PTR [edi],esi
  407ebe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ebf:	sub    DWORD PTR [ebx-0x42],0x1e
  407ec3:	mov    edx,edx
  407ec5:	stos   BYTE PTR es:[edi],al
  407ec6:	mov    WORD PTR [edi+0x2a70c57c],fs
  407ecc:	mov    dh,0xd3
  407ece:	xchg   edi,eax
  407ecf:	or     edi,DWORD PTR [eax+0x15b879b]
  407ed5:	mov    dl,0x6b
  407ed7:	and    BYTE PTR [ecx],ch
  407ed9:	ret    0x84b3
  407edc:	sahf   
  407edd:	dec    edi
  407ede:	xchg   ecx,eax
  407edf:	sahf   
  407ee0:	addr16 (bad) 
  407ee2:	test   DWORD PTR [ebp+0x26],edi
  407ee5:	and    DWORD PTR [edx+eax*8-0x8],ebx
  407ee9:	cwde   
  407eea:	(bad)  
  407eeb:	jmp    DWORD PTR [eax+0xcf1104e]
  407ef1:	sub    DWORD PTR [ecx+0xf9795f6],edi
  407ef7:	sti    
  407ef8:	icebp  
  407ef9:	out    0x44,eax
  407efb:	push   0x866a066
  407f00:	js     0x407f4e
  407f02:	dec    esi
  407f03:	jge    0x407f2a
  407f05:	outs   dx,DWORD PTR ds:[esi]
  407f06:	call   0xdd16:0x199d
  407f0c:	les    ebp,FWORD PTR [esi]
  407f0e:	sbb    al,0x81
  407f10:	int3   
  407f11:	dec    eax
  407f12:	or     eax,0xddccf394
  407f17:	and    DWORD PTR [ebp+0x2f0722da],ecx
  407f1d:	cli    
  407f1e:	pop    ds
  407f1f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f22:	fist   DWORD PTR [edx]
  407f24:	and    al,0x16
  407f26:	mov    ecx,0xa5386aa7
  407f2b:	rep ins DWORD PTR es:[edi],dx
  407f2d:	mov    WORD PTR [esi],?
  407f2f:	stc    
  407f30:	mov    esp,0x7c24a59d
  407f35:	mov    dh,0xb8
  407f37:	hlt    
  407f38:	xor    bh,BYTE PTR [edx]
  407f3a:	icebp  
  407f3b:	cmp    al,0xe3
  407f3d:	dec    esp
  407f3e:	sub    bl,BYTE PTR [esi]
  407f40:	inc    esi
  407f41:	push   ebx
  407f42:	aaa    
  407f43:	pop    ds
  407f44:	lea    eax,[esi+ebx*1]
  407f47:	out    dx,eax
  407f48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f49:	mov    ah,0xa8
  407f4b:	sbb    DWORD PTR [edx-0x7a4fe91a],esi
  407f51:	push   edx
  407f52:	das    
  407f53:	add    esp,0xffffffb7
  407f56:	xchg   edx,eax
  407f57:	lods   eax,DWORD PTR ds:[esi]
  407f58:	(bad)  
  407f5a:	mov    bl,0x1
  407f5c:	or     DWORD PTR [ecx],0x6
  407f5f:	les    eax,FWORD PTR [ecx-0x10]
  407f62:	or     al,0x8c
  407f64:	jno    0x407f68
  407f66:	das    
  407f67:	dec    edi
  407f68:	cli    
  407f69:	pop    eax
  407f6a:	jbe    0x407f76
  407f6c:	mov    WORD PTR [ebx+0x2f],gs
  407f6f:	sbb    DWORD PTR [edx+ecx*2],esp
  407f72:	jns    0x407fa0
  407f74:	jecxz  0x407fe3
  407f76:	fidivr DWORD PTR [edx+0x77]
  407f79:	outs   dx,BYTE PTR ds:[esi]
  407f7a:	std    
  407f7b:	les    ebx,FWORD PTR [esi+ebp*8]
  407f7e:	aad    0xd1
  407f80:	fisttp DWORD PTR [esi]
  407f82:	cmp    BYTE PTR [ecx-0x20],ch
  407f85:	dec    esp
  407f86:	iret   
  407f87:	add    dh,cl
  407f89:	das    
  407f8a:	out    0x25,al
  407f8c:	jne    0x407f8b
  407f8e:	mov    al,ds:0x17aaec25
  407f93:	je     0x407f3b
  407f95:	mov    ecx,DWORD PTR [ebp+0x6]
  407f98:	cmp    DWORD PTR [ebx*1+0x26e5a179],eax
  407f9f:	stos   BYTE PTR es:[edi],al
  407fa0:	push   esp
  407fa1:	jb     0x407f69
  407fa3:	mov    ecx,DWORD PTR [esi-0x2e]
  407fa6:	jmp    0xfd8b7121
  407fab:	push   eax
  407fac:	mov    eax,0x24c2e4e
  407fb1:	aaa    
  407fb2:	add    bh,ah
  407fb4:	cmp    edi,DWORD PTR [edx]
  407fb6:	mov    ebx,0xe7451d83
  407fbb:	mov    ah,0x5a
  407fbd:	mov    dh,0x8b
  407fbf:	inc    ebp
  407fc0:	sub    al,0xee
  407fc2:	fwait
  407fc3:	cmp    esi,DWORD PTR [eax+0x550535e]
  407fc9:	hlt    
  407fca:	dec    edx
  407fcb:	fiadd  DWORD PTR [esi-0x3a]
  407fce:	fwait
  407fcf:	aad    0xb0
  407fd1:	xchg   edx,eax
  407fd2:	push   ecx
  407fd3:	shl    BYTE PTR [ecx+0x6fc5810b],1
  407fd9:	aas    
  407fda:	jge    0x408054
  407fdc:	stos   DWORD PTR es:[edi],eax
  407fdd:	test   BYTE PTR [ebx],0x8e
  407fe0:	jge    0x407fc7
  407fe2:	iret   
  407fe3:	mov    BYTE PTR [ebx+0x6],dl
  407fe6:	mov    ah,0x8f
  407fe8:	mov    ecx,0x10f3c7d7
  407fed:	or     edi,DWORD PTR [ebx+0x61]
  407ff0:	mov    eax,ds:0x89e40e47
  407ff5:	and    eax,DWORD PTR [ecx-0x43d30d33]
  407ffb:	out    dx,eax
  407ffc:	paddd  mm0,QWORD PTR [ecx]
  407fff:	and    al,0x80
  408001:	ins    BYTE PTR es:[edi],dx
  408002:	mov    WORD PTR [esi],ds
  408004:	lock sti 
  408006:	sti    
  408007:	ins    BYTE PTR es:[edi],dx
  408008:	mov    edi,0x2aabad14
  40800d:	jmp    0x407fac
  40800f:	or     DWORD PTR [edi-0x73d62067],edi
  408015:	dec    ecx
  408016:	dec    eax
  408017:	sahf   
  408018:	leave  
  408019:	adc    esp,DWORD PTR [ecx+ebp*8+0x4698c7da]
  408020:	inc    edx
  408021:	cdq    
  408022:	inc    edi
  408023:	fisttp WORD PTR [edi*2-0x2791101b]
  40802a:	(bad)  
  40802b:	xchg   ebp,eax
  40802c:	idiv   BYTE PTR [ebx+ebx*4-0x66999a12]
  408033:	push   ds
  408034:	sub    ah,ch
  408036:	push   ecx
  408037:	pop    edx
  408038:	mov    edx,0xc128d07f
  40803d:	mov    cs,WORD PTR [ecx]
  40803f:	in     eax,0xaf
  408041:	mov    edx,esi
  408043:	mov    eax,ds:0x7de243c7
  408048:	pop    edx
  408049:	adc    esi,DWORD PTR [edx-0x40]
  40804c:	scas   al,BYTE PTR es:[edi]
  40804d:	fwait
  40804e:	loop   0x408031
  408050:	out    0xc7,eax
  408052:	int3   
  408053:	push   cs
  408054:	or     edi,edi
  408056:	ins    BYTE PTR es:[edi],dx
  408057:	inc    edx
  408058:	test   DWORD PTR [edi+esi*8+0x35],ebp
  40805c:	shl    ebx,1
  40805e:	mov    edi,ebx
  408060:	mov    ch,0x74
  408062:	scas   al,BYTE PTR es:[edi]
  408063:	mov    edi,0x660eb38f
  408068:	and    eax,0x8c1a0420
  40806d:	fist   DWORD PTR [edi+0x4d7e69d7]
  408073:	sbb    ebx,edi
  408075:	sub    ch,BYTE PTR [edi+ebx*4]
  408078:	mov    ds:0x96df642e,eax
  40807d:	mov    al,ds:0xe07ede29
  408082:	and    esi,DWORD PTR [ecx+edi*2]
  408085:	shl    DWORD PTR [edx+0x1848921c],cl
  40808b:	(bad)  
  40808c:	pop    esi
  40808d:	inc    esp
  40808e:	lea    eax,[eiz*1+0x239af108]
  408095:	loop   0x4080a1
  408097:	pop    ebx
  408098:	adc    al,0x39
  40809a:	ss pop ds
  40809c:	in     al,dx
  40809d:	xor    edx,esp
  40809f:	popf   
  4080a0:	add    ecx,DWORD PTR [ebx+0x60]
  4080a3:	outs   dx,DWORD PTR ds:[esi]
  4080a4:	mov    al,BYTE PTR [ebp+ebx*4-0x72d5fd88]
  4080ab:	mov    cs,WORD PTR [esi]
  4080ad:	jo     0x40812c
  4080af:	(bad)  
  4080b0:	iret   
  4080b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080b2:	repnz test DWORD PTR [ebp+0x57ee3a1],0x9d07cce3
  4080bd:	sar    bl,cl
  4080bf:	inc    eax
  4080c0:	mov    al,ds:0xe701dc4f
  4080c5:	fcom   QWORD PTR [edi]
  4080c7:	bound  edx,QWORD PTR [ecx]
  4080c9:	sbb    al,0x54
  4080cb:	mov    ds:0x2690e291,eax
  4080d0:	mov    eax,ds:0xacb14479
  4080d5:	fimul  DWORD PTR ds:0xd427d66d
  4080db:	test   edx,esp
  4080dd:	scas   eax,DWORD PTR es:[edi]
  4080de:	retf   0x232e
  4080e1:	lods   al,BYTE PTR ds:[esi]
  4080e2:	sar    DWORD PTR [ecx+edx*4+0x3c],1
  4080e6:	ins    BYTE PTR es:[edi],dx
  4080e7:	add    eax,0x482696cb
  4080ec:	add    al,0x68
  4080ee:	stc    
  4080ef:	xchg   ecx,eax
  4080f0:	push   ds
  4080f1:	mov    eax,ds:0xb93fa3d1
  4080f6:	pop    ss
  4080f7:	lock cmp BYTE PTR [ebx-0x7ab6c8cb],0x65
  4080ff:	jo     0x4080b6
  408101:	iret   
  408102:	test   DWORD PTR [ecx+0x65],ecx
  408105:	lods   eax,DWORD PTR ds:[esi]
  408106:	pop    edi
  408107:	pop    ecx
  408108:	rcr    edi,cl
  40810a:	and    BYTE PTR [edi+0x13],bh
  40810d:	dec    ebp
  40810e:	fisttp WORD PTR [eax+ebx*8]
  408111:	inc    edi
  408112:	mov    ds:0xc34a1af0,al
  408117:	adc    ch,BYTE PTR [edi]
  408119:	or     edx,DWORD PTR [edi+0x4e]
  40811c:	inc    edi
  40811d:	push   esp
  40811e:	jle    0x408125
  408120:	xor    ah,BYTE PTR [ecx]
  408122:	push   0x8238ceb1
  408127:	mov    ds:0x561308b1,al
  40812c:	push   eax
  40812d:	mov    ebx,0x4aa2eaee
  408132:	je     0x4080fb
  408134:	inc    ebp
  408135:	loope  0x408116
  408137:	jle    0x408131
  408139:	mov    bl,0xe4
  40813b:	or     eax,0x9608eefa
  408140:	and    dl,BYTE PTR [edi-0x596bc90b]
  408146:	add    BYTE PTR [ebx+0x1a],0x12
  40814a:	add    edx,edx
  40814c:	sbb    esp,DWORD PTR [esp+esi*4]
  40814f:	sub    bl,BYTE PTR [eax-0x80]
  408152:	lods   eax,DWORD PTR ds:[esi]
  408153:	sub    DWORD PTR [edi+0x5],eax
  408156:	fdivr  st,st(3)
  408158:	sub    al,0x36
  40815a:	add    DWORD PTR [eax],0xffffffe1
  40815d:	nop
  40815e:	dec    ebx
  40815f:	(bad)  
  408160:	fwait
  408161:	pushf  
  408162:	mov    edx,0x37406b78
  408167:	rcl    ah,1
  408169:	dec    edx
  40816a:	es jmp 0x4aa3cd75
  408170:	mov    dl,0x6d
  408172:	hlt    
  408173:	sbb    edx,DWORD PTR [ecx+0x1d]
  408176:	lods   al,BYTE PTR ds:[esi]
  408177:	loop   0x40810f
  408179:	mov    DWORD PTR ds:0x55a240d4,eax
  40817f:	popa   
  408180:	xchg   ecx,eax
  408181:	jmp    0x4081bc
  408183:	aas    
  408184:	pop    ecx
  408185:	loopne 0x4081ef
  408187:	mov    al,0x9e
  408189:	pop    ecx
  40818a:	hlt    
  40818b:	dec    ebp
  40818c:	xor    bh,dl
  40818e:	call   0xa83c9027
  408193:	ds js  0x4081a8
  408196:	pushf  
  408197:	icebp  
  408198:	loope  0x40811d
  40819a:	lds    edx,FWORD PTR ds:0xff92a4ac
  4081a0:	mov    dh,al
  4081a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081a3:	jle    0xd13dbcc6
  4081a9:	ins    BYTE PTR es:[edi],dx
  4081aa:	mov    eax,ds:0x8350fc7
  4081af:	inc    eax
  4081b0:	xor    al,0xe9
  4081b2:	pop    edx
  4081b3:	aam    0x2f
  4081b5:	add    esp,edx
  4081b7:	mov    bh,0x3f
  4081b9:	xor    al,0xc7
  4081bb:	or     DWORD PTR [edx+0x73],ebx
  4081be:	fnstenv [eax-0x5e830a3a]
  4081c4:	das    
  4081c5:	jbe    0x40822e
  4081c7:	cmp    BYTE PTR [ebx-0x3be385e3],0xc6
  4081ce:	mov    bl,0x3d
  4081d0:	repz mov eax,ds:0x7a1f328
  4081d6:	outs   dx,BYTE PTR ds:[esi]
  4081d7:	addr16 mov bl,0x44
  4081da:	add    DWORD PTR [edi-0x3b5021d1],edi
  4081e0:	fnsave [ebp+0x77d5c48a]
  4081e6:	sbb    ecx,esp
  4081e8:	into   
  4081e9:	in     al,dx
  4081ea:	imul   edi,DWORD PTR [esi],0x81c86fa1
  4081f0:	ror    dl,cl
  4081f2:	push   cs
  4081f3:	mov    eax,DWORD PTR [edi+esi*1-0xf]
  4081f7:	leave  
  4081f8:	icebp  
  4081f9:	pop    esp
  4081fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081fb:	fidiv  WORD PTR [ecx]
  4081fd:	in     eax,dx
  4081fe:	xchg   BYTE PTR [esp+eax*4+0x61],dl
  408202:	inc    edx
  408203:	adc    DWORD PTR [ecx],0x2d
  408206:	into   
  408207:	ins    DWORD PTR es:[edi],dx
  408208:	shr    BYTE PTR [edi-0xd5dd6ff],1
  40820e:	daa    
  40820f:	mov    ebp,0x14b0b92b
  408214:	cmc    
  408215:	aas    
  408216:	mov    dh,0x0
  408218:	ret    0xa14c
  40821b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40821c:	icebp  
  40821d:	mul    BYTE PTR [ebx]
  40821f:	pop    eax
  408220:	cmp    BYTE PTR [esi+ebx*1-0x2d],cl
  408224:	fsubr  QWORD PTR [esi]
  408226:	iret   
  408227:	shr    DWORD PTR [ebp+0x2462fb52],0xf
  40822e:	js     0x408229
  408230:	mov    ebx,0x2c412d53
  408235:	xlat   BYTE PTR ds:[ebx]
  408236:	sub    edx,DWORD PTR [eax-0x66]
  408239:	dec    esp
  40823a:	clc    
  40823b:	jg     0x4081da
  40823d:	fbld   TBYTE PTR [ebx-0xd]
  408240:	cwde   
  408241:	dec    esi
  408242:	fdiv   QWORD PTR [edi]
  408244:	sub    DWORD PTR [edi-0x33],ebx
  408247:	dec    eax
  408248:	mov    eax,0xd99a3bd8
  40824d:	sbb    eax,0x6644abcf
  408252:	scas   al,BYTE PTR es:[edi]
  408253:	(bad)  
  408254:	pop    ebp
  408255:	test   eax,0x3114b173
  40825a:	pop    ebx
  40825b:	aam    0x43
  40825d:	sbb    eax,0x41e8436
  408262:	cli    
  408263:	push   ebx
  408264:	push   es
  408265:	cmp    ah,al
  408267:	mov    esp,0x4528ae32
  40826c:	sub    ebx,0xa
  40826f:	in     eax,0x5b
  408271:	shl    DWORD PTR [ebp-0x43ca9350],cl
  408277:	mov    edi,0x3768eb47
  40827c:	ret    
  40827d:	sub    eax,0x265aa093
  408282:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408283:	sbb    BYTE PTR [eax+eiz*4+0x77],bl
  408287:	mov    eax,ds:0xbbb4abad
  40828c:	pop    edi
  40828d:	shl    DWORD PTR [edx+esi*8+0x47a58dca],cl
  408294:	hlt    
  408295:	xor    DWORD PTR [esi+0x2a],esp
  408298:	dec    edi
  408299:	aaa    
  40829a:	or     ebp,0xa9a8d223
  4082a0:	sub    cl,BYTE PTR [eax+0x585fd6f4]
  4082a6:	sub    BYTE PTR [ebx-0x252d3f7f],bh
  4082ac:	push   es
  4082ad:	ins    DWORD PTR es:[edi],dx
  4082ae:	fmul   QWORD PTR [eax]
  4082b0:	in     eax,dx
  4082b1:	fcomp  QWORD PTR [ecx]
  4082b3:	or     DWORD PTR [ecx+0x40],edi
  4082b6:	retf   
  4082b7:	add    al,0xfa
  4082b9:	mov    ss,WORD PTR [eax+0x2255a596]
  4082bf:	or     BYTE PTR [eax+0x1ac9efa],ah
  4082c5:	mov    eax,0xb3c78e4c
  4082ca:	(bad)  
  4082cb:	fmulp  st(4),st
  4082cd:	jmp    0xee068ae8
  4082d2:	cmp    dh,BYTE PTR [edi]
  4082d4:	popa   
  4082d5:	push   es
  4082d6:	(bad)  
  4082d7:	fsub   QWORD PTR ds:0x744d52fd
  4082dd:	test   eax,0xa6a2720d
  4082e2:	push   ss
  4082e3:	jmp    0x1ea7851b
  4082e8:	sbb    eax,eax
  4082ea:	jns    0x40826c
  4082ec:	mov    bl,0xf7
  4082ee:	add    bh,dh
  4082f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082f1:	push   ebp
  4082f2:	scas   al,BYTE PTR es:[edi]
  4082f3:	sar    BYTE PTR [eax],0xd8
  4082f6:	cs stc 
  4082f8:	adc    eax,DWORD PTR [edx+0x73]
  4082fb:	lods   eax,DWORD PTR ds:[esi]
  4082fc:	push   ds
  4082fd:	out    0x29,eax
  4082ff:	jg     0x4082e1
  408301:	popa   
  408302:	shr    DWORD PTR [esi+esi*1-0x37733b19],cl
  408309:	adc    eax,DWORD PTR [ebx+0x5d4c17f7]
  40830f:	div    BYTE PTR [ebp-0x40]
  408312:	add    DWORD PTR [esi-0x4d],0x83ad489f
  408319:	leave  
  40831a:	(bad)  
  40831b:	sbb    BYTE PTR [edx+esi*4],dl
  40831e:	daa    
  40831f:	push   0x51e690e4
  408324:	arpl   WORD PTR [ebx],sp
  408326:	adc    al,0x7
  408328:	cwde   
  408329:	fdivr  DWORD PTR [ebx]
  40832b:	mov    al,ds:0xced6c43d
  408330:	mov    esi,0xb6c32ebf
  408335:	xchg   edx,eax
  408336:	jecxz  0x408308
  408338:	call   0xe2bc:0xb96fd453
  40833f:	push   cs
  408340:	and    BYTE PTR ds:0x3aadda33,ah
  408346:	jnp    0x408334
  408348:	jb     0x40839a
  40834a:	mov    esp,0xeb12b120
  40834f:	mov    dh,bl
  408351:	fisttp WORD PTR [ebx-0x54de163e]
  408357:	mov    bh,0xb6
  408359:	ins    DWORD PTR es:[edi],dx
  40835a:	dec    edx
  40835b:	out    dx,al
  40835c:	rol    BYTE PTR [edx*8-0x3faceffc],cl
  408363:	pop    eax
  408364:	inc    ebp
  408365:	push   esi
  408366:	popf   
  408367:	inc    ebp
  408368:	pop    eax
  408369:	loop   0x408323
  40836b:	gs retf 0xa854
  40836f:	iret   
  408370:	fwait
  408371:	dec    ebx
  408372:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408373:	mov    bl,0xde
  408375:	into   
  408376:	outs   dx,DWORD PTR ds:[esi]
  408377:	loop   0x408360
  408379:	rcr    DWORD PTR gs:[ebp-0xe],0xdd
  40837e:	dec    ebp
  40837f:	and    BYTE PTR [ebx],dh
  408381:	xor    ecx,DWORD PTR [ebp-0x47756aa6]
  408387:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408388:	push   eax
  408389:	imul   edi,DWORD PTR [edi-0x3e],0xffffffe9
  40838d:	in     eax,dx
  40838e:	in     eax,dx
  40838f:	push   edi
  408390:	mov    BYTE PTR [ebp-0x59],bl
  408393:	mov    ds:0x4cde82af,al
  408398:	clc    
  408399:	jne    0x408387
  40839b:	dec    edi
  40839c:	mov    ah,0x7c
  40839e:	inc    edi
  40839f:	adc    BYTE PTR [ebx+0x3dc28358],0x15
  4083a6:	xchg   BYTE PTR [esi+0x2e],bl
  4083a9:	scas   eax,DWORD PTR es:[edi]
  4083aa:	xor    ah,BYTE PTR [eax-0x6b]
  4083ad:	cli    
  4083ae:	scas   eax,DWORD PTR es:[edi]
  4083af:	ret    0x428d
  4083b2:	imul   ebp,ebx,0x573e316a
  4083b8:	jno    0x408424
  4083ba:	loopne 0x408397
  4083bc:	das    
  4083bd:	or     edx,DWORD PTR [edi]
  4083bf:	dec    esp
  4083c0:	shl    DWORD PTR [edi-0x1979a45d],1
  4083c6:	and    DWORD PTR [esi-0xc25df3f],esp
  4083cc:	test   BYTE PTR [eax-0x27c4cbb3],cl
  4083d2:	pop    ebx
  4083d3:	and    al,0xa7
  4083d5:	xchg   edx,eax
  4083d6:	xchg   ebx,eax
  4083d7:	or     DWORD PTR ss:[edi],ecx
  4083da:	out    dx,eax
  4083db:	jns    0x40841d
  4083dd:	out    dx,eax
  4083de:	sbb    BYTE PTR [ecx-0x7a],al
  4083e1:	jg     0x408453
  4083e3:	data16 test BYTE PTR [ebx],bh
  4083e6:	in     al,dx
  4083e7:	push   es
  4083e8:	mov    cl,0x87
  4083ea:	sahf   
  4083eb:	(bad)  
  4083ec:	push   ebp
  4083ed:	loop   0x40842f
  4083ef:	repz add BYTE PTR [ecx],ah
  4083f2:	out    dx,al
  4083f3:	std    
  4083f4:	in     eax,0xc7
  4083f6:	fcom   QWORD PTR [ecx-0x62]
  4083f9:	popa   
  4083fa:	add    eax,0x266a38e1
  4083ff:	mov    ch,0x28
  408401:	es xchg ebx,eax
  408403:	ret    0xfbc6
  408406:	xlat   BYTE PTR ds:[ebx]
  408407:	sahf   
  408408:	les    esi,FWORD PTR [eax]
  40840a:	jno    0x40841a
  40840c:	out    dx,eax
  40840d:	add    al,0x4e
  40840f:	push   esp
  408410:	push   edx
  408411:	outs   dx,DWORD PTR ds:[esi]
  408412:	or     bl,BYTE PTR [ebp-0x26]
  408415:	rcl    BYTE PTR [eax],cl
  408417:	add    al,0xcc
  408419:	adc    bl,BYTE PTR [edi]
  40841b:	aam    0x29
  40841d:	mov    eax,0x3ad1023d
  408422:	sub    DWORD PTR [edx+eiz*8],esp
  408425:	xchg   esi,eax
  408426:	xor    ah,BYTE PTR [ecx+edi*1+0x60bca2ba]
  40842d:	cmp    BYTE PTR [edx],al
  40842f:	stos   BYTE PTR es:[edi],al
  408430:	test   BYTE PTR [eax],ch
  408432:	call   0x68d3:0x608e0418
  408439:	inc    eax
  40843a:	add    cl,BYTE PTR [esi]
  40843c:	push   ss
  40843d:	sbb    eax,0x35ff38f5
  408442:	arpl   ax,cx
  408444:	lds    ebx,FWORD PTR [ecx-0x11]
  408447:	or     ecx,esi
  408449:	lock push edx
  40844b:	push   ss
  40844c:	and    DWORD PTR [edx],ecx
  40844e:	arpl   WORD PTR [eax-0x35],di
  408451:	sbb    al,ah
  408453:	sbb    BYTE PTR [edx+0x1c],ah
  408456:	jns    0x408424
  408458:	xor    eax,0xfd246f86
  40845d:	popa   
  40845e:	fbld   TBYTE PTR [eax-0x4b]
  408461:	test   DWORD PTR [ebp-0x4],edi
  408464:	sbb    BYTE PTR [ebp-0x4272f5d3],dl
  40846a:	cmp    BYTE PTR [ecx-0x3f],cl
  40846d:	push   ds
  40846e:	daa    
  40846f:	je     0x408497
  408471:	jge    0x4084af
  408473:	add    dh,BYTE PTR [esi+esi*1-0x6cb56007]
  40847a:	mov    dh,BYTE PTR [edx-0x36]
  40847d:	inc    edi
  40847e:	pop    es
  40847f:	or     esp,DWORD PTR [ecx+0xc]
  408482:	ret    
  408483:	mov    ds:0x76c59d60,eax
  408488:	test   DWORD PTR [eax],0xc4f5972d
  40848e:	pop    ds
  40848f:	dec    ebx
  408490:	sbb    dl,BYTE PTR [edi+0x19125626]
  408496:	inc    esp
  408497:	stos   DWORD PTR es:[edi],eax
  408498:	jg     0x408491
  40849a:	aad    0xdb
  40849c:	add    DWORD PTR [eax],0x29
  40849f:	xchg   BYTE PTR [edx+0x47df0d19],ah
  4084a5:	das    
  4084a6:	dec    ebx
  4084a7:	mov    esi,0xf9de28c8
  4084ac:	div    BYTE PTR [edx-0x23bba8e7]
  4084b2:	pushf  
  4084b3:	mov    WORD PTR [edx],cs
  4084b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084b6:	sar    ecx,1
  4084b8:	addr16 and al,0x70
  4084bb:	sub    DWORD PTR [ebp+0x20],edi
  4084be:	mov    edx,ds
  4084c0:	add    bh,al
  4084c2:	mov    esi,0xa1e46faf
  4084c7:	mov    DWORD PTR es:[eax-0x440c7c1a],ebp
  4084ce:	ja     0x40851f
  4084d0:	fcomip st,st(6)
  4084d2:	fs loopne 0x408470
  4084d5:	aad    0xff
  4084d7:	xchg   edi,eax
  4084d8:	inc    ebp
  4084d9:	adc    eax,0x2c82fcf9
  4084de:	cmp    eax,0x1c7e7c31
  4084e3:	inc    edx
  4084e4:	add    al,bl
  4084e6:	out    0x62,eax
  4084e8:	cmp    DWORD PTR [esi],ecx
  4084ea:	fiadd  WORD PTR [ebx]
  4084ec:	sub    eax,0xc964116
  4084f1:	lock sub DWORD PTR [edx-0x62c686be],ebp
  4084f8:	scas   al,BYTE PTR es:[edi]
  4084f9:	push   0x57
  4084fb:	xchg   esi,eax
  4084fc:	mov    BYTE PTR [edx+ebx*1],al
  4084ff:	mov    eax,DWORD PTR [ebp-0x40]
  408502:	mov    edx,DWORD PTR [ebp-0x28]
  408505:	xor    eax,esi
  408507:	xor    edx,esi
  408509:	add    eax,edi
  40850b:	add    edx,edi
  40850d:	imul   eax,edx
  408510:	add    eax,DWORD PTR [ebp-0xc]
  408513:	mov    DWORD PTR [ebp-0xc],eax
  408516:	mov    eax,DWORD PTR [ebp-0xc]
  408519:	mov    edx,DWORD PTR [ebp-0x18]
  40851c:	cmp    edx,eax
  40851e:	jb     0x406080
  408524:	mov    eax,DWORD PTR [ebp-0x28]
  408527:	mov    edx,DWORD PTR [ebp-0x18]
  40852a:	xor    eax,esi
  40852c:	add    eax,edi
  40852e:	imul   eax,edx
  408531:	mov    edx,DWORD PTR [ebp-0x1c]
  408534:	xor    edx,esi
  408536:	add    edx,edi
  408538:	or     eax,edx
  40853a:	mov    edx,DWORD PTR [ebp-0x20]
  40853d:	xor    edx,esi
  40853f:	add    eax,edx
  408541:	mov    edx,DWORD PTR [ebp-0x20]
  408544:	xor    edx,esi
  408546:	add    eax,edx
  408548:	mov    edx,DWORD PTR [ebp-0x10]
  40854b:	lea    eax,[eax+edx*1+0x64e5e6]
  408552:	jmp    0x408566
  408557:	mov    eax,DWORD PTR [ebp-0x20]
  40855a:	mov    edx,DWORD PTR [ebp-0x10]
  40855d:	xor    eax,esi
  40855f:	lea    eax,[eax+edx*1+0x3272f3]
  408566:	mov    DWORD PTR [ebp-0x10],eax
  408569:	jmp    0x403c1c
  40856e:	mov    ebx,DWORD PTR [ebp-0x3c]
  408571:	mov    eax,DWORD PTR [ebp+0xc]
  408574:	xor    eax,esi
  408576:	lea    ecx,[ecx+eax*1+0x3272f3]
  40857d:	lea    eax,[ecx-0x3272f3]
  408583:	xor    eax,esi
  408585:	cmp    eax,0xf89c95a1
  40858a:	jne    0x403bc0
  408590:	dec    DWORD PTR [ebp-0x34]
  408593:	jne    0x403bb4
  408599:	mov    eax,DWORD PTR [ebp+0x8]
  40859c:	mov    ecx,DWORD PTR [ebp+0xc]
  40859f:	mov    edx,DWORD PTR [ebp+0x8]
  4085a2:	xor    ecx,esi
  4085a4:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f3]
  4085ab:	xor    eax,esi
  4085ad:	mov    al,BYTE PTR [eax+ebx*1+0x3272f3]
  4085b4:	xor    edx,esi
  4085b6:	mov    BYTE PTR [edx+ebx*1+0x3272f3],cl
  4085bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4085c0:	xor    ecx,esi
  4085c2:	mov    BYTE PTR [ecx+ebx*1+0x3272f3],al
  4085c9:	mov    eax,DWORD PTR [ebp+0xc]
  4085cc:	xor    eax,esi
  4085ce:	add    eax,edi
  4085d0:	pop    edi
  4085d1:	pop    esi
  4085d2:	pop    ebx
  4085d3:	leave  
  4085d4:	ret    0x8
  4085d7:	xor    eax,eax
  4085d9:	and    DWORD PTR ds:0x4291db,0x42914b
  4085e3:	inc    eax
  4085e4:	ret    
  4085e5:	push   ebp
  4085e6:	mov    ebp,esp
  4085e8:	sub    esp,0x38
  4085eb:	and    DWORD PTR ds:0x429167,0x0
  4085f5:	mov    eax,ds:0x429167
  4085fa:	inc    eax
  4085fb:	mov    ds:0x429167,eax
  408600:	cmp    DWORD PTR ds:0x429167,0x23
  408607:	jle    0x408625
  40860d:	jmp    0x408618
  408612:	call   DWORD PTR ds:0x42a55b
  408618:	cmp    DWORD PTR ds:0x429167,0x1d
  40861f:	jb     0x4085f5
  408625:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  40862c:	push   ebx
  40862d:	adc    DWORD PTR ds:0x4291ef,ecx
  408633:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  40863a:	sub    DWORD PTR ds:0x429167,0x723d
  408644:	mov    eax,DWORD PTR [ebp-0x4]
  408647:	push   esi
  408648:	mov    esi,0x75108ac
  40864d:	adc    DWORD PTR ds:0x429153,0x4291d3
  408657:	xor    eax,esi
  408659:	push   edi
  40865a:	and    DWORD PTR ds:0x42915f,0x0
  408664:	jmp    0x408676
  408669:	mov    edi,DWORD PTR ds:0x42915f
  40866f:	inc    edi
  408670:	mov    DWORD PTR ds:0x42915f,edi
  408676:	cmp    DWORD PTR ds:0x42915f,0x18
  40867d:	jae    0x4086c6
  408683:	cmp    DWORD PTR ds:0x42915f,0xb
  40868a:	jg     0x4086c6
  408690:	jmp    0x4086a5
  408695:	push   0x4291bf
  40869a:	push   0x428022
  40869f:	call   DWORD PTR ds:0x42a55f
  4086a5:	cmp    DWORD PTR ds:0x42915f,0xa
  4086ac:	jne    0x4086c1
  4086b2:	xor    edi,edi
  4086b4:	or     edi,DWORD PTR ds:0x42915f
  4086ba:	inc    edi
  4086bb:	mov    DWORD PTR ds:0x42915f,edi
  4086c1:	jmp    0x408669
  4086c6:	mov    edi,0x3272f3
  4086cb:	or     DWORD PTR ds:0x429173,0x4291df
  4086d5:	add    eax,edi
  4086d7:	and    DWORD PTR ds:0x4291cb,0x4291b7
  4086e1:	mov    DWORD PTR [ebp-0x1c],eax
  4086e4:	mov    eax,DWORD PTR [ebp+0x14]
  4086e7:	add    DWORD PTR ds:0x42919b,0xffd
  4086f1:	test   eax,eax
  4086f3:	mov    DWORD PTR ds:0x4291c7,0x550e
  4086fd:	je     0x408761
  408703:	mov    DWORD PTR ds:0x4291c3,0x10
  40870d:	cmp    DWORD PTR ds:0x4291c3,0x0
  408714:	je     0x408749
  40871a:	cmp    DWORD PTR ds:0x4291c3,0x1a
  408721:	jle    0x408749
  408727:	jmp    0x408737
  40872c:	push   0x8b39
  408731:	call   DWORD PTR ds:0x42a563
  408737:	mov    ebx,DWORD PTR ds:0x4291c3
  40873d:	dec    ebx
  40873e:	mov    DWORD PTR ds:0x4291c3,ebx
  408744:	jmp    0x40870d
  408749:	mov    eax,DWORD PTR [ebp+0x14]
  40874c:	sbb    DWORD PTR ds:0x4291db,ebx
  408752:	mov    eax,DWORD PTR [eax]
  408754:	add    DWORD PTR ds:0x4291b3,0x4291cf
  40875e:	mov    DWORD PTR [ebp-0x1c],eax
  408761:	mov    eax,DWORD PTR [ebp-0x4]
  408764:	xor    eax,esi
  408766:	xor    DWORD PTR ds:0x429193,edi
  40876c:	add    eax,edi
  40876e:	and    ebx,DWORD PTR ds:0x42918b
  408774:	mov    DWORD PTR [ebp-0x8],eax
  408777:	mov    eax,DWORD PTR [ebp-0xc]
  40877a:	and    ebx,DWORD PTR ds:0x4291f3
  408780:	xor    eax,esi
  408782:	mov    ebx,DWORD PTR ds:0x429167
  408788:	and    ebx,DWORD PTR ds:0x4291b7
  40878e:	mov    DWORD PTR ds:0x429167,ebx
  408794:	add    eax,edi
  408796:	sbb    ebx,0x2c4d
  40879c:	mov    DWORD PTR [ebp-0x24],eax
  40879f:	mov    eax,DWORD PTR [ebp-0x4]
  4087a2:	xor    eax,esi
  4087a4:	mov    ebx,DWORD PTR ds:0x42919b
  4087aa:	or     ebx,DWORD PTR ds:0x429183
  4087b0:	mov    DWORD PTR ds:0x42919b,ebx
  4087b6:	add    eax,edi
  4087b8:	or     DWORD PTR ds:0x4291df,edx
  4087be:	mov    DWORD PTR [ebp-0x30],eax
  4087c1:	or     DWORD PTR ds:0x42914b,0x176b
  4087cb:	mov    ebx,DWORD PTR [ebp-0x4]
  4087ce:	xor    ebx,esi
  4087d0:	mov    eax,ds:0x429173
  4087d5:	xor    eax,DWORD PTR ds:0x42916f
  4087db:	mov    ds:0x429173,eax
  4087e0:	add    ebx,edi
  4087e2:	mov    eax,DWORD PTR [ebp-0x24]
  4087e5:	sub    eax,edi
  4087e7:	sbb    DWORD PTR ds:0x429157,0x4291c7
  4087f1:	lea    ecx,[ebx-0x3272f3]
  4087f7:	xor    eax,esi
  4087f9:	xor    DWORD PTR ds:0x4291bb,0x42917b
  408803:	xor    ecx,esi
  408805:	mov    DWORD PTR ds:0x429153,0x47e0
  40880f:	cmp    ecx,eax
  408811:	mov    DWORD PTR ds:0x429187,0x3279
  40881b:	je     0x40d27b
  408821:	xor    DWORD PTR ds:0x42915b,0x508b
  40882b:	mov    eax,DWORD PTR [ebp-0x4]
  40882e:	sub    DWORD PTR ds:0x42919b,0x58b3
  408838:	xor    eax,esi
  40883a:	adc    DWORD PTR ds:0x429173,0x4291f7
  408844:	add    eax,edi
  408846:	cmp    ebx,eax
  408848:	mov    DWORD PTR ds:0x42915f,0x75e2
  408852:	jne    0x40adc2
  408858:	push   DWORD PTR [ebp+0x8]
  40885b:	call   0x424151
  408860:	mov    DWORD PTR [ebp-0x14],eax
  408863:	not    eax
  408865:	mov    eax,DWORD PTR [ebp-0x4]
  408868:	adc    DWORD PTR ds:0x429153,0x66a3
  408872:	mov    ecx,DWORD PTR [ebp-0x14]
  408875:	add    DWORD PTR ds:0x4291af,0x7712
  40887f:	xor    eax,esi
  408881:	add    eax,edi
  408883:	mov    DWORD PTR ds:0x4291cb,0x7d26
  40888d:	cmp    ecx,eax
  40888f:	mov    DWORD PTR ds:0x42916f,0x6080
  408899:	je     0x40d2e6
  40889f:	push   DWORD PTR [ebp-0x14]
  4088a2:	sbb    DWORD PTR ds:0x4291c3,0x2326
  4088ac:	push   DWORD PTR [ebp+0x8]
  4088af:	call   0x424291
  4088b4:	mov    DWORD PTR [ebp-0x14],eax
  4088b7:	xor    DWORD PTR ds:0x42919f,edx
  4088bd:	mov    eax,DWORD PTR [ebp-0x4]
  4088c0:	xor    DWORD PTR ds:0x42918f,ecx
  4088c6:	mov    ecx,DWORD PTR [ebp-0x14]
  4088c9:	xor    eax,esi
  4088cb:	add    eax,edi
  4088cd:	mov    DWORD PTR ds:0x42917b,0x355b
  4088d7:	cmp    ecx,eax
  4088d9:	mov    DWORD PTR ds:0x429157,0x7399
  4088e3:	je     0x40d2e6
  4088e9:	mov    eax,DWORD PTR [ebp-0x14]
  4088ec:	mov    eax,DWORD PTR [eax+0x18]
  4088ef:	and    DWORD PTR ds:0x4291f3,0x0
  4088f9:	jmp    0x40890b
  4088fe:	mov    ecx,DWORD PTR ds:0x4291f3
  408904:	inc    ecx
  408905:	mov    DWORD PTR ds:0x4291f3,ecx
  40890b:	cmp    DWORD PTR ds:0x4291f3,0x1b
  408912:	jae    0x40895e
  408918:	cmp    DWORD PTR ds:0x4291f3,0xc
  40891f:	ja     0x40895e
  408925:	jmp    0x40893f
  40892a:	push   0x429197
  40892f:	push   0x429187
  408934:	push   0x5f54
  408939:	call   DWORD PTR ds:0x42a56b
  40893f:	cmp    DWORD PTR ds:0x4291f3,0xb
  408946:	jne    0x408959
  40894c:	mov    ecx,DWORD PTR ds:0x4291f3
  408952:	inc    ecx
  408953:	mov    DWORD PTR ds:0x4291f3,ecx
  408959:	jmp    0x4088fe
  40895e:	mov    DWORD PTR [ebp-0x24],eax
  408961:	xor    DWORD PTR ds:0x42916f,ebx
  408967:	mov    eax,DWORD PTR [ebp-0x14]
  40896a:	and    DWORD PTR ds:0x42916b,0x0
  408974:	jmp    0x408986
  408979:	mov    ecx,DWORD PTR ds:0x42916b
  40897f:	inc    ecx
  408980:	mov    DWORD PTR ds:0x42916b,ecx
  408986:	cmp    DWORD PTR ds:0x42916b,0x1c
  40898d:	jae    0x4089b3
  408993:	cmp    DWORD PTR ds:0x42916b,0x2a
  40899a:	jge    0x4089b3
  4089a0:	jmp    0x4089ae
  4089a5:	push   DWORD PTR [ebp-0x14]
  4089a8:	call   DWORD PTR ds:0x42a533
  4089ae:	jmp    0x408979
  4089b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4089b6:	add    ecx,DWORD PTR [eax+0x20]
  4089b9:	sbb    DWORD PTR ds:0x429183,0x7fc6
  4089c3:	mov    DWORD PTR [ebp-0x2c],ecx
  4089c6:	mov    eax,DWORD PTR [ebp-0x14]
  4089c9:	mov    ecx,DWORD PTR [ebp+0x8]
  4089cc:	sbb    DWORD PTR ds:0x4291ef,0x4291eb
  4089d6:	add    ecx,DWORD PTR [eax+0x24]
  4089d9:	or     DWORD PTR ds:0x4291ef,0x4291f3
  4089e3:	mov    DWORD PTR [ebp-0x34],ecx
  4089e6:	jmp    0x40ad9a
  4089eb:	push   ecx
  4089ec:	mov    dl,BYTE PTR [ecx+esi*1]
  4089ef:	and    BYTE PTR [ecx+0x58598a50],0x67
  4089f6:	test   BYTE PTR [eax-0x8],al
  4089f9:	xor    BYTE PTR [edi-0x39],0x15
  4089fd:	add    DWORD PTR [ebx-0x7c7ca318],0x62
  408a04:	adc    al,0x8e
  408a06:	iret   
  408a07:	jbe    0x408a5d
  408a09:	imul   ecx,DWORD PTR [ecx],0xffffffad
  408a0c:	pop    es
  408a0d:	fmul   DWORD PTR [edx+0x47]
  408a10:	push   ds
  408a11:	pop    ss
  408a12:	sbb    ecx,DWORD PTR [edi]
  408a14:	push   edx
  408a15:	push   edx
  408a16:	sub    bh,BYTE PTR [ecx-0x75]
  408a19:	xor    BYTE PTR [esi+0x70675359],dl
  408a1f:	sub    DWORD PTR [edi+0x8],ebp
  408a22:	iret   
  408a23:	inc    edi
  408a24:	add    edx,DWORD PTR [edi]
  408a26:	adc    ebp,edx
  408a28:	push   esi
  408a29:	adc    cl,bl
  408a2b:	jl     0x408a7a
  408a2d:	mov    edi,0x3dd8dd2d
  408a32:	in     eax,0x47
  408a34:	cmp    eax,DWORD PTR [eax]
  408a36:	rol    BYTE PTR [edi+0x30],1
  408a39:	pop    ebx
  408a3a:	imul   edx,DWORD PTR [eax+0x59e4aee7],0xffffff9d
  408a41:	and    esp,DWORD PTR [ebx-0x45]
  408a44:	add    DWORD PTR [esi-0x3e9d53ed],ebx
  408a4a:	jmp    0x408a7b
  408a4c:	mov    ebp,0xee2b265a
  408a51:	mov    bl,BYTE PTR [esp+esi*8+0x44]
  408a55:	dec    esi
  408a56:	hlt    
  408a57:	sbb    BYTE PTR [ebx],dl
  408a59:	sbb    ebx,DWORD PTR [edi-0x24]
  408a5c:	ret    
  408a5d:	pop    ss
  408a5e:	shr    ecx,0x50
  408a61:	and    BYTE PTR [edx-0xa],al
  408a64:	aas    
  408a65:	nop
  408a66:	dec    ebx
  408a67:	sub    edi,DWORD PTR [esi-0x1c]
  408a6a:	jb     0x408a58
  408a6c:	jl     0x408a09
  408a6e:	js     0x408ae7
  408a70:	popa   
  408a71:	pop    ds
  408a72:	mov    dl,0xe
  408a74:	repz aaa 
  408a76:	jge    0x408ab1
  408a78:	daa    
  408a79:	fs sub bh,dl
  408a7c:	lods   al,BYTE PTR ds:[esi]
  408a7d:	(bad)  
  408a7e:	int    0xee
  408a80:	mov    ds:0x2d687170,al
  408a85:	(bad)  
  408a86:	cmc    
  408a87:	stos   DWORD PTR es:[edi],eax
  408a88:	std    
  408a89:	ds xor al,0x87
  408a8c:	mov    ch,0x37
  408a8e:	mov    al,ds:0xf167caf1
  408a93:	lds    esi,FWORD PTR [ebx+0x6]
  408a96:	in     eax,0xd
  408a98:	jo     0x408a55
  408a9a:	sbb    BYTE PTR [ebp+0x4b],bh
  408a9d:	test   DWORD PTR [ebx-0x33],edx
  408aa0:	test   DWORD PTR [edi-0x52e91217],esp
  408aa6:	call   DWORD PTR [eax]
  408aa8:	repz mov eax,0xba325d6b
  408aae:	mov    ecx,0xca1e665f
  408ab3:	icebp  
  408ab4:	(bad)  
  408ab5:	fidiv  WORD PTR [esi]
  408ab7:	int    0xc7
  408ab9:	xlat   BYTE PTR ds:[ebx]
  408aba:	mov    eax,0xa3ca3da9
  408abf:	xor    eax,0xe4dacb9c
  408ac4:	test   eax,0x80160561
  408ac9:	retf   
  408aca:	cdq    
  408acb:	shl    DWORD PTR [ecx*2+0x1e503400],cl
  408ad2:	imul   ebp,DWORD PTR [esi+0xa],0xb108eaa
  408ad9:	or     al,0xb
  408adb:	dec    eax
  408adc:	xchg   esi,eax
  408add:	fisttp QWORD PTR [edx-0x74b53cac]
  408ae3:	dec    esi
  408ae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ae6:	(bad)  
  408ae7:	inc    DWORD PTR [esi]
  408ae9:	stos   DWORD PTR es:[edi],eax
  408aea:	stos   BYTE PTR es:[edi],al
  408aeb:	xchg   ebp,eax
  408aec:	fnstcw WORD PTR [edx-0x1ce6f306]
  408af2:	pop    ebx
  408af3:	adc    eax,0xa5faa863
  408af8:	outs   dx,BYTE PTR ds:[esi]
  408af9:	or     DWORD PTR [ecx+0x53],ebx
  408afc:	xchg   edi,eax
  408afd:	int3   
  408afe:	mov    BYTE PTR [edx],dl
  408b00:	cwde   
  408b01:	push   esp
  408b02:	jno    0x408b4c
  408b04:	dec    esp
  408b05:	push   eax
  408b06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b07:	xor    eax,0xa2fbc99d
  408b0c:	and    BYTE PTR [ebp-0x27],dl
  408b0f:	inc    ecx
  408b10:	and    esp,esp
  408b12:	mov    ebx,0x1a40ef47
  408b17:	or     esi,edx
  408b19:	push   ebp
  408b1a:	je     0x408b56
  408b1c:	mov    ds:0x45c3e448,eax
  408b21:	lods   eax,DWORD PTR ds:[esi]
  408b22:	aam    0xf3
  408b24:	dec    esi
  408b25:	push   edi
  408b26:	mov    esp,0x15d013e0
  408b2b:	xchg   edi,eax
  408b2c:	mov    esp,0x7c1d2752
  408b31:	call   0x4668c454
  408b36:	mov    eax,0x4da038be
  408b3b:	push   0x39
  408b3d:	scas   eax,DWORD PTR es:[edi]
  408b3e:	fisttp DWORD PTR [esp+eax*4+0x24]
  408b42:	jae    0x408b77
  408b44:	aam    0xd7
  408b46:	out    dx,al
  408b47:	adc    al,0xe6
  408b49:	add    BYTE PTR [ebx],dl
  408b4b:	push   ds
  408b4c:	(bad)  
  408b4d:	imul   ecx,DWORD PTR [edi+0xb6ccb9a],0xffffffb8
  408b54:	push   esp
  408b55:	mov    dl,0x24
  408b57:	popf   
  408b58:	cli    
  408b59:	scas   al,BYTE PTR es:[edi]
  408b5a:	mov    edx,0x9872e600
  408b5f:	into   
  408b60:	int    0xdb
  408b62:	add    DWORD PTR [esi],0xffffffa8
  408b65:	and    al,0x6c
  408b67:	arpl   WORD PTR [eax],dx
  408b69:	cmp    DWORD PTR [esi+0x594877c1],edi
  408b6f:	out    0x63,al
  408b71:	imul   esi,edi,0xffffffd3
  408b74:	test   dh,cl
  408b76:	jae    0x408b59
  408b78:	jge    0x408b31
  408b7a:	enter  0xad47,0xc2
  408b7e:	sbb    al,0x29
  408b80:	neg    DWORD PTR [esp-0x3bccf428]
  408b87:	fild   DWORD PTR [edx+ebx*1+0x5dd6a69b]
  408b8e:	es es dec edx
  408b91:	cmp    al,0xaf
  408b93:	int    0xa6
  408b95:	sbb    eax,0xb731f209
  408b9a:	in     al,dx
  408b9b:	scas   eax,DWORD PTR es:[edi]
  408b9c:	loop   0x408c12
  408b9e:	dec    ebp
  408b9f:	push   ecx
  408ba0:	xor    ecx,DWORD PTR [edx+0x42d58477]
  408ba6:	out    dx,al
  408ba7:	push   eax
  408ba8:	mov    dl,0x5
  408baa:	mov    esi,0x680b9140
  408baf:	inc    ebp
  408bb0:	xchg   edx,eax
  408bb1:	iret   
  408bb2:	mov    ebx,0x655c14cf
  408bb7:	aam    0xa1
  408bb9:	jecxz  0x408b9e
  408bbb:	out    dx,al
  408bbc:	dec    esp
  408bbd:	int    0x1f
  408bbf:	pop    eax
  408bc0:	rol    DWORD PTR [edx],cl
  408bc2:	or     al,0xcd
  408bc4:	mov    al,ds:0x41b7d39
  408bc9:	aad    0xad
  408bcb:	xor    dl,dh
  408bcd:	lahf   
  408bce:	pop    es
  408bcf:	fcmove st,st(7)
  408bd1:	pop    ebx
  408bd2:	inc    ax
  408bd4:	test   al,0x65
  408bd6:	inc    ebx
  408bd7:	aaa    
  408bd8:	xchg   esi,eax
  408bd9:	or     DWORD PTR [esi-0x16],ebx
  408bdc:	shr    BYTE PTR [ecx-0x6f63ef60],cl
  408be2:	mov    ds:0x7691fe2f,al
  408be7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408be8:	jp     0x408bb0
  408bea:	mov    WORD PTR [ebx+0x4160b565],gs
  408bf0:	or     DWORD PTR [esi],edi
  408bf2:	sbb    DWORD PTR [edi+ecx*4],0x33
  408bf6:	adc    eax,0xf9897f0f
  408bfb:	mov    edx,0x17e2774e
  408c00:	ins    BYTE PTR es:[edi],dx
  408c01:	ret    0x2a8a
  408c04:	sub    eax,DWORD PTR [esi+0x4c]
  408c07:	and    BYTE PTR [edx],dh
  408c09:	xor    ebp,DWORD PTR [eax]
  408c0b:	mov    ebx,0xfb7f3d5a
  408c10:	adc    BYTE PTR [esi+ecx*8+0x3e],0xd5
  408c15:	or     esp,DWORD PTR [edi-0x45f3ba54]
  408c1b:	sti    
  408c1c:	xchg   DWORD PTR [edx+0x3ab9caeb],esi
  408c22:	xchg   ebx,eax
  408c23:	(bad)
  408c26:	fwait
  408c27:	pop    esp
  408c28:	or     al,0xec
  408c2a:	push   es
  408c2b:	push   ds
  408c2c:	daa    
  408c2d:	jle    0x408c4a
  408c2f:	xor    eax,0xbf14eef8
  408c34:	add    BYTE PTR [esi],ah
  408c36:	sbb    al,0x58
  408c38:	pop    esp
  408c39:	sbb    ch,al
  408c3b:	dec    eax
  408c3c:	dec    esp
  408c3d:	sti    
  408c3e:	pop    ss
  408c3f:	and    DWORD PTR [eax],edi
  408c41:	lahf   
  408c42:	add    eax,0x5f395a8a
  408c47:	leave  
  408c48:	cdq    
  408c49:	and    DWORD PTR [ebx],ebp
  408c4b:	xor    cl,BYTE PTR [edx-0x1b]
  408c4e:	popa   
  408c4f:	test   eax,0x6891045b
  408c54:	fsubr  DWORD PTR [ebx-0x1ce70b0d]
  408c5a:	ret    
  408c5b:	dec    ebx
  408c5c:	mov    esi,0xb82a8c63
  408c61:	inc    esi
  408c62:	imul   eax,eax,0x79
  408c65:	call   0xc1ca:0x87075ca8
  408c6c:	jl     0x408c87
  408c6e:	jmp    DWORD PTR [ebp-0x48f0096e]
  408c74:	xchg   esi,eax
  408c75:	aam    0x8f
  408c77:	sub    BYTE PTR [ebp+0x679bf189],bl
  408c7d:	xchg   ebx,eax
  408c7e:	xchg   esp,eax
  408c7f:	mov    eax,ds:0xc72078f
  408c84:	in     al,dx
  408c85:	daa    
  408c86:	sub    eax,0x1d8e5c6b
  408c8b:	pop    ebx
  408c8c:	(bad)  [eax]
  408c8e:	aam    0x90
  408c90:	daa    
  408c91:	imul   ecx,DWORD PTR [edx+edi*4-0x6c85e154],0x2690dbb
  408c9c:	xor    BYTE PTR [edx+0x9a0c771],0xa5
  408ca3:	iret   
  408ca4:	push   ebx
  408ca5:	ins    BYTE PTR es:[edi],dx
  408ca6:	xor    DWORD PTR [eax],edi
  408ca8:	(bad)  
  408ca9:	push   edx
  408caa:	dec    ecx
  408cab:	sbb    DWORD PTR [ebp-0x27aa6b97],ebp
  408cb1:	imul   BYTE PTR [ebx]
  408cb3:	jnp    0x408ce6
  408cb5:	(bad)  
  408cb6:	loopne 0x408cca
  408cb8:	inc    ebx
  408cb9:	push   0xffffffea
  408cbb:	inc    ecx
  408cbc:	mov    DWORD PTR [ebx+0x2f],ebx
  408cbf:	loope  0x408cd4
  408cc1:	(bad)  
  408cc2:	and    bl,BYTE PTR [ebx+0x3a]
  408cc5:	xor    ebp,DWORD PTR [ecx-0x21]
  408cc8:	jb     0x408cfb
  408cca:	(bad)  
  408ccb:	xor    esi,DWORD PTR [edx-0x322ebb15]
  408cd1:	push   ebp
  408cd2:	dec    esp
  408cd3:	push   edx
  408cd4:	lahf   
  408cd5:	mov    al,ds:0xc11c8f45
  408cda:	pushf  
  408cdb:	test   DWORD PTR [eax],0xde1f03f7
  408ce1:	push   edi
  408ce2:	or     DWORD PTR [ecx-0x449b3ea2],0x15
  408ce9:	xchg   ecx,eax
  408cea:	xchg   ecx,eax
  408ceb:	in     al,0xf9
  408ced:	dec    ebx
  408cee:	mov    ecx,0x5fcc18d6
  408cf3:	push   ecx
  408cf4:	sbb    DWORD PTR [edi-0x2ff8f8fa],edi
  408cfa:	xor    BYTE PTR [edi],dh
  408cfc:	out    0x75,al
  408cfe:	aaa    
  408cff:	jae    0x408cf9
  408d01:	outs   dx,DWORD PTR ds:[esi]
  408d02:	jnp    0x408ca3
  408d04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d05:	repz das 
  408d07:	mov    cl,0x35
  408d09:	mov    esp,0x2cbfa54b
  408d0e:	mov    ds:0x28c2d079,al
  408d13:	xor    al,0xde
  408d15:	sti    
  408d16:	xchg   edx,eax
  408d17:	shl    BYTE PTR [eax+0x1b2dd6b6],cl
  408d1d:	(bad)  
  408d1e:	and    DWORD PTR ds:0xa7b8b1fa,esi
  408d24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d25:	add    DWORD PTR [ebp+0x5b927cc5],esp
  408d2b:	in     eax,0xf6
  408d2d:	xchg   ebx,eax
  408d2e:	popf   
  408d2f:	pop    esi
  408d30:	out    0x4f,al
  408d32:	cmp    edi,edx
  408d34:	rol    BYTE PTR [esi+0x67944b1f],1
  408d3a:	outs   dx,DWORD PTR ds:[esi]
  408d3b:	mov    dh,0xcb
  408d3d:	scas   al,BYTE PTR es:[edi]
  408d3e:	out    0x0,al
  408d40:	and    BYTE PTR [edi+0x538e3ddb],bh
  408d46:	mov    eax,0x44282fc1
  408d4b:	(bad)  
  408d4c:	fisttp WORD PTR [edi]
  408d4e:	mov    ds:0x45942971,al
  408d53:	iret   
  408d54:	push   0xdb3b6f9a
  408d59:	outs   dx,DWORD PTR ds:[esi]
  408d5a:	inc    esp
  408d5b:	sub    BYTE PTR [edi],ah
  408d5d:	sub    edx,DWORD PTR [edx-0x5f517b1e]
  408d63:	rol    bh,1
  408d65:	popa   
  408d66:	test   DWORD PTR [ebx-0xb332f1d],edi
  408d6c:	stos   BYTE PTR es:[edi],al
  408d6d:	jb     0x408d7c
  408d6f:	mov    al,ds:0x12fe941e
  408d74:	inc    edx
  408d75:	cmp    ebp,edx
  408d77:	inc    esp
  408d78:	lds    ecx,FWORD PTR [esi+0x8]
  408d7b:	mov    ss,WORD PTR [ebp+0x129e5f4e]
  408d81:	call   0xd7a2f79e
  408d86:	add    al,0xb8
  408d88:	ret    
  408d89:	sub    edx,edx
  408d8b:	push   ebp
  408d8c:	ficom  WORD PTR [esi]
  408d8e:	ror    ebx,cl
  408d90:	xchg   edx,eax
  408d91:	and    ebx,edx
  408d93:	jg     0x408d1b
  408d95:	push   ss
  408d96:	sti    
  408d97:	(bad)
  408d9a:	jno    0x408db9
  408d9c:	outs   dx,BYTE PTR ds:[esi]
  408d9d:	mov    al,0x62
  408d9f:	or     al,0x5e
  408da1:	jbe    0x408d97
  408da3:	repnz test al,0xb
  408da6:	je     0x408dda
  408da8:	sbb    ch,al
  408daa:	mov    esp,0x8b275a71
  408daf:	cld    
  408db0:	loop   0x408dbc
  408db2:	xor    al,0x76
  408db4:	jb     0x408e21
  408db6:	ins    BYTE PTR es:[edi],dx
  408db7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408db8:	sub    edi,ebx
  408dba:	push   ebp
  408dbb:	sub    ch,BYTE PTR [ebp-0x3b9a1c92]
  408dc1:	ror    ecx,0xe3
  408dc4:	pop    esp
  408dc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dc6:	jnp    0x408df3
  408dc8:	daa    
  408dc9:	sub    eax,DWORD PTR [edi-0x1c]
  408dcc:	imul   esi,DWORD PTR [eax],0x21
  408dcf:	push   ebp
  408dd0:	cmp    al,0x4e
  408dd2:	dec    eax
  408dd3:	shr    DWORD PTR [esi],cl
  408dd5:	stc    
  408dd6:	jno    0x408df5
  408dd8:	dec    edi
  408dd9:	in     al,dx
  408dda:	test   edx,esi
  408ddc:	fst    st(7)
  408dde:	sub    ebx,DWORD PTR [edi-0x7c2f0448]
  408de4:	cmp    eax,DWORD PTR [edi]
  408de6:	pop    ebp
  408de7:	cmp    dh,BYTE PTR [eax-0x65]
  408dea:	(bad)  
  408deb:	popa   
  408dec:	iret   
  408ded:	bound  ebx,QWORD PTR [edi-0x33a100d8]
  408df3:	jmp    DWORD PTR [edi-0x55]
  408df6:	dec    eax
  408df7:	daa    
  408df8:	pop    eax
  408df9:	mov    ah,0x5a
  408dfb:	in     eax,dx
  408dfc:	ins    DWORD PTR es:[edi],dx
  408dfd:	dec    ebp
  408dfe:	sub    eax,0x4cffd706
  408e03:	sub    eax,0x911d2cb5
  408e08:	aad    0x46
  408e0a:	mov    edx,0x6befa921
  408e0f:	ss push eax
  408e11:	mov    eax,0x2388114b
  408e16:	pop    esi
  408e17:	repnz add dl,BYTE PTR [edi-0x3b]
  408e1b:	shl    BYTE PTR [esp-0x43],1
  408e1f:	(bad)  
  408e20:	and    dh,bh
  408e22:	push   esi
  408e23:	or     ah,0x10
  408e26:	dec    ebx
  408e27:	scas   al,BYTE PTR es:[edi]
  408e28:	mov    edx,0x21d9529c
  408e2d:	jp     0x408e61
  408e2f:	retf   
  408e30:	pop    esi
  408e31:	cs out dx,eax
  408e33:	fnstsw WORD PTR ds:0x5c74509b
  408e39:	sbb    ah,ah
  408e3b:	mov    al,ds:0x9a7d2cb5
  408e40:	ret    
  408e41:	cli    
  408e42:	call   0x8601fa16
  408e47:	out    0xe1,eax
  408e49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e4a:	xchg   esp,eax
  408e4b:	pop    ebp
  408e4c:	sbb    eax,0x8782be14
  408e51:	adc    edi,DWORD PTR [edi]
  408e53:	mov    bl,0xe0
  408e55:	jb     0x408ea8
  408e57:	cmp    bh,BYTE PTR [eax+ebp*2+0x21]
  408e5b:	stos   DWORD PTR es:[edi],eax
  408e5c:	ss repz jl 0x408e82
  408e60:	pop    eax
  408e61:	push   edx
  408e62:	sub    BYTE PTR [ecx+0x1c5c9478],bl
  408e68:	or     al,0xa9
  408e6a:	icebp  
  408e6b:	(bad)  
  408e6c:	sbb    DWORD PTR [ebp+0x47],edi
  408e6f:	in     al,0x7e
  408e71:	sub    al,0x62
  408e73:	mov    ecx,0x8f648fa3
  408e78:	les    esi,FWORD PTR [ecx-0x529551bb]
  408e7e:	xchg   DWORD PTR [esi],ebx
  408e80:	xor    BYTE PTR [edx],ah
  408e82:	cmc    
  408e83:	cmc    
  408e84:	and    dl,BYTE PTR [eax+0xd]
  408e87:	and    DWORD PTR [eax],eax
  408e89:	dec    BYTE PTR [eax-0x3d59fdab]
  408e8f:	xor    esi,esp
  408e91:	loope  0x408e23
  408e93:	fistp  QWORD PTR [ebp+0x5a]
  408e96:	je     0x408e8a
  408e98:	inc    esi
  408e99:	mov    esi,0x8926a9f4
  408e9e:	leave  
  408e9f:	cld    
  408ea0:	test   BYTE PTR [ebp-0x4f4054db],0x6
  408ea7:	ja     0x408efd
  408ea9:	dec    ebx
  408eaa:	ss pop ss
  408eac:	out    dx,al
  408ead:	sub    DWORD PTR [ecx+0x69],esp
  408eb0:	pop    ecx
  408eb1:	push   0x4
  408eb3:	pop    ebx
  408eb4:	add    eax,0xb25415ec
  408eb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408eba:	add    al,cl
  408ebc:	or     BYTE PTR [eax],ah
  408ebe:	outs   dx,BYTE PTR ds:[esi]
  408ebf:	ds fs test al,ah
  408ec3:	pop    ebx
  408ec4:	add    al,0x29
  408ec6:	into   
  408ec7:	mov    esi,DWORD PTR [edx+0x1f2f68da]
  408ecd:	xor    esp,DWORD PTR [ecx+0x2f]
  408ed0:	(bad)  
  408ed1:	sub    bh,bh
  408ed3:	(bad)  
  408ed5:	xchg   ecx,eax
  408ed6:	and    al,0xdf
  408ed8:	and    dh,BYTE PTR [edx+0x75]
  408edb:	and    DWORD PTR [edi-0x72c9d13b],ecx
  408ee1:	or     al,0xdb
  408ee3:	imul   ebx,DWORD PTR cs:[edi+0xcbf83cf],0xf1e96344
  408eee:	(bad)  
  408eef:	or     esp,ebx
  408ef1:	out    0x47,eax
  408ef3:	hlt    
  408ef4:	ror    BYTE PTR [edi+0x3b],cl
  408ef7:	fs jns 0x408f23
  408efa:	pusha  
  408efb:	ror    cl,cl
  408efd:	das    
  408efe:	push   esp
  408eff:	and    cl,al
  408f01:	bound  ebx,QWORD PTR [esi-0x4b2ae027]
  408f07:	jecxz  0x408edd
  408f09:	adc    BYTE PTR [ebp+0x56],0xa6
  408f0d:	push   edx
  408f0e:	jne    0x408ef3
  408f10:	inc    edx
  408f11:	cmp    BYTE PTR [eax],ch
  408f13:	(bad)  
  408f14:	bound  esi,QWORD PTR [ebx+0x4c]
  408f17:	je     0x408ebb
  408f19:	jbe    0x408f52
  408f1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f1c:	int    0x8
  408f1e:	jle    0x408ece
  408f20:	dec    ecx
  408f21:	shr    DWORD PTR ds:0x9769be88,0x9
  408f28:	push   esp
  408f29:	fs gs inc eax
  408f2c:	cli    
  408f2d:	jb     0x408f34
  408f2f:	shl    DWORD PTR [ebx+0x64],cl
  408f32:	or     edi,esp
  408f34:	dec    ebx
  408f35:	dec    ecx
  408f36:	jo     0x408f15
  408f38:	outs   dx,DWORD PTR ds:[esi]
  408f39:	inc    ebx
  408f3a:	mov    edx,0x7b0acb55
  408f3f:	sbb    al,BYTE PTR [eax+0x77]
  408f42:	imul   esp,DWORD PTR [edx+eax*1],0xc552c022
  408f49:	sub    BYTE PTR [eax-0x57cd0930],dl
  408f4f:	and    ecx,DWORD PTR ds:0xc8862a71
  408f55:	jmp    eax
  408f57:	gs stos DWORD PTR es:[edi],eax
  408f59:	push   0xffffffed
  408f5b:	ret    0xd01c
  408f5e:	jg     0x408fc8
  408f60:	jmp    0x8464da0d
  408f65:	cli    
  408f66:	stc    
  408f67:	dec    eax
  408f68:	popa   
  408f69:	test   al,0x9a
  408f6b:	call   DWORD PTR [esi-0x7a]
  408f6e:	les    ebp,FWORD PTR [esp+eiz*8-0x38]
  408f72:	not    bh
  408f74:	lahf   
  408f75:	call   0x96c7eb51
  408f7a:	bound  esp,QWORD PTR [esp+esi*1+0x6eac33cc]
  408f81:	or     DWORD PTR [ecx+0x42],0xffffffcb
  408f85:	cs loope 0x408f8d
  408f88:	push   es
  408f89:	lock adc eax,0x84aaa3aa
  408f8f:	xchg   esi,eax
  408f90:	pop    ebx
  408f91:	daa    
  408f92:	adc    eax,0x147231a0
  408f97:	xchg   ebx,eax
  408f98:	sar    BYTE PTR [edi-0x54],1
  408f9b:	mov    bh,0x1e
  408f9d:	sbb    BYTE PTR [esi+0x7483063f],dl
  408fa3:	inc    esi
  408fa4:	ds pop ebp
  408fa6:	les    ebp,FWORD PTR [eax-0x1]
  408fa9:	je     0x408fb4
  408fab:	bound  esi,QWORD PTR [edx]
  408fad:	xor    al,0x3b
  408faf:	sbb    eax,0xda3a4674
  408fb4:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  408fb6:	xor    eax,ebx
  408fb8:	cmp    esp,DWORD PTR [ecx+0x172495c9]
  408fbe:	add    esi,DWORD PTR [esp+edi*4+0x4db4568b]
  408fc5:	mov    cl,bh
  408fc7:	cld    
  408fc8:	add    eax,DWORD PTR [edx+esi*2]
  408fcb:	add    BYTE PTR [eax-0x5d],bh
  408fce:	xchg   ebx,eax
  408fcf:	fcomp  st(7)
  408fd1:	xor    eax,0x73c6c201
  408fd6:	pop    ds
  408fd7:	mov    ch,0x64
  408fd9:	xchg   DWORD PTR [ebp+0x1b3df0b],esi
  408fdf:	add    ch,ch
  408fe1:	mov    eax,DWORD PTR [edi+0x5e]
  408fe4:	push   ss
  408fe5:	mov    BYTE PTR fs:[esi-0x31],ah
  408fe9:	je     0x408fa7
  408feb:	hlt    
  408fec:	out    dx,eax
  408fed:	fisubr WORD PTR [eax]
  408fef:	mov    edi,0xb5e4efef
  408ff4:	lds    ebx,FWORD PTR [ebx+ebx*2]
  408ff7:	dec    eax
  408ff8:	inc    esp
  408ff9:	dec    ebx
  408ffa:	or     ch,BYTE PTR [eax+ecx*4]
  408ffd:	outs   dx,BYTE PTR ds:[esi]
  408ffe:	jmp    0xef46:0x336819f8
  409005:	and    edx,esp
  409007:	and    bh,0x58
  40900a:	inc    eax
  40900b:	sub    al,0x81
  40900d:	xor    BYTE PTR [edi],dh
  40900f:	iret   
  409010:	les    esp,FWORD PTR ds:0xafd66af4
  409016:	nop
  409017:	outs   dx,BYTE PTR ds:[esi]
  409018:	loope  0x408fa3
  40901a:	adc    eax,0x6723a620
  40901f:	and    BYTE PTR [edi+0x5e],dl
  409022:	psllw  mm3,QWORD PTR [ebp-0x49]
  409026:	push   ebp
  409027:	dec    ebx
  409028:	mov    ebx,esi
  40902a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40902b:	arpl   WORD PTR [ebx],bx
  40902d:	sbb    dh,BYTE PTR [edx+edx*8]
  409030:	pop    edx
  409031:	pop    edi
  409032:	push   edi
  409033:	clc    
  409034:	popf   
  409035:	mov    esi,0x1cd70f08
  40903a:	jo     0x409007
  40903c:	iret   
  40903d:	mov    al,ds:0x8d74d041
  409042:	shr    BYTE PTR [ebx+eiz*2-0x2a],1
  409046:	std    
  409047:	stc    
  409048:	imul   esp,DWORD PTR [eax+0x27],0x929c8b75
  40904f:	mov    ds:0x7b4aa855,eax
  409054:	ret    0x5873
  409057:	inc    ebx
  409058:	jecxz  0x409022
  40905a:	cmp    DWORD PTR [ecx-0x10],esi
  40905d:	mov    DWORD PTR [eax-0x61],ebp
  409060:	sub    BYTE PTR [ecx-0x3d],ch
  409063:	cli    
  409064:	mov    ah,0x2c
  409066:	(bad)  
  409067:	pop    ecx
  409068:	popa   
  409069:	rcr    BYTE PTR [esi],1
  40906b:	clc    
  40906c:	mov    edx,DWORD PTR [eax+eiz*4]
  40906f:	in     eax,dx
  409070:	mov    al,0x61
  409072:	add    DWORD PTR [edi],eax
  409074:	push   es
  409075:	cmc    
  409076:	jo     0x409046
  409078:	sbb    BYTE PTR [ebx-0x76],al
  40907b:	bound  edi,QWORD PTR [edx+0x2cebe582]
  409081:	push   ebx
  409082:	xor    ebp,esp
  409084:	jbe    0x40901b
  409086:	mov    eax,0x6a1113d7
  40908b:	and    ebp,DWORD PTR [edx+0x46]
  40908e:	jbe    0x4090a8
  409090:	stos   DWORD PTR es:[edi],eax
  409091:	bound  esi,QWORD PTR [esi]
  409093:	adc    BYTE PTR [ecx+0x4e],al
  409096:	sbb    esi,esp
  409098:	sub    edi,DWORD PTR [esi-0x5729d9bc]
  40909e:	and    eax,0x5c6435d4
  4090a3:	repnz push es
  4090a5:	xchg   esp,eax
  4090a6:	cmp    BYTE PTR [esi+0x27],cl
  4090a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090aa:	push   ecx
  4090ab:	nop
  4090ac:	into   
  4090ad:	pop    ecx
  4090ae:	pop    eax
  4090af:	lds    ebp,FWORD PTR [eax+0x275ee52e]
  4090b5:	xlat   BYTE PTR ds:[ebx]
  4090b6:	push   ds
  4090b7:	dec    eax
  4090b8:	dec    eax
  4090b9:	push   edi
  4090ba:	cmp    eax,0x8aa20b8c
  4090bf:	inc    ebp
  4090c0:	sbb    al,0x1d
  4090c2:	dec    esp
  4090c3:	pop    ds
  4090c4:	ins    BYTE PTR es:[edi],dx
  4090c5:	dec    ecx
  4090c6:	xchg   DWORD PTR [esi],ebp
  4090c8:	jp     0x409092
  4090ca:	sub    eax,0x2b9dc26a
  4090cf:	retf   
  4090d0:	pop    ebx
  4090d1:	(bad)  
  4090d2:	ins    BYTE PTR es:[edi],dx
  4090d3:	dec    edi
  4090d4:	rcl    DWORD PTR [ecx],cl
  4090d6:	cmp    DWORD PTR [ecx],ebp
  4090d8:	loop   0x40906c
  4090da:	mov    ds:0x79a4c01f,eax
  4090df:	outs   dx,BYTE PTR ds:[esi]
  4090e0:	xor    eax,0xd1127408
  4090e5:	push   ss
  4090e6:	imul   edi,DWORD PTR [eax+eax*4-0x26c60bc2],0x44128262
  4090f1:	push   esi
  4090f2:	jle    0x409138
  4090f4:	mov    dl,0x6e
  4090f6:	mov    ah,0x5d
  4090f8:	inc    edx
  4090f9:	das    
  4090fa:	test   eax,0x8b10c42e
  4090ff:	xchg   dl,ch
  409101:	and    BYTE PTR [eax],dh
  409103:	sub    BYTE PTR [eax+0x322603a6],bh
  409109:	xor    al,0xcd
  40910b:	out    dx,al
  40910c:	pop    ecx
  40910d:	dec    eax
  40910e:	push   ecx
  40910f:	cmp    bh,al
  409111:	popa   
  409112:	inc    ecx
  409113:	and    ebp,esp
  409115:	cmp    BYTE PTR [eax+eax*2+0x1133cafc],0x70
  40911d:	xorps  xmm5,XMMWORD PTR ds:0x72856a4a
  409124:	push   ss
  409125:	sub    DWORD PTR [ecx],esp
  409127:	outs   dx,BYTE PTR ds:[esi]
  409128:	push   0xffffffae
  40912a:	mov    ah,0xdf
  40912c:	inc    ecx
  40912d:	mov    al,0x35
  40912f:	es enter 0xa397,0x33
  409134:	cs dec edx
  409136:	add    DWORD PTR [edi+0xf],edi
  409139:	retf   0xb38b
  40913c:	icebp  
  40913d:	retf   
  40913e:	lds    eax,FWORD PTR [eax]
  409140:	sub    DWORD PTR [ecx+0x679c2790],eax
  409146:	or     eax,0x8c5cfbc7
  40914b:	das    
  40914c:	xor    al,0xc0
  40914e:	cmp    eax,0x45a4224
  409153:	dec    edi
  409154:	add    BYTE PTR [ebx],ah
  409156:	retf   
  409157:	pop    es
  409158:	jns    0x409134
  40915a:	and    ebp,DWORD PTR [edx]
  40915c:	je     0x4090ec
  40915e:	mov    ah,0x6a
  409160:	xor    al,bh
  409162:	test   al,0x81
  409164:	sbb    eax,0xc1d786
  409169:	(bad)  
  40916a:	cmp    DWORD PTR [ecx-0x5e],esp
  40916d:	xor    cl,BYTE PTR ds:0xd29914e7
  409173:	or     al,0x19
  409175:	pop    ds
  409176:	mov    WORD PTR [edi-0x15036ad5],gs
  40917c:	jo     0x409161
  40917e:	mov    cl,BYTE PTR [eax+edx*8-0x69579c6e]
  409185:	inc    esp
  409186:	(bad)  
  409187:	push   edi
  409188:	adc    eax,0x132b875d
  40918d:	fidiv  WORD PTR [eax-0x6b7884b6]
  409193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409194:	push   ds
  409195:	int3   
  409196:	idiv   BYTE PTR [esp+ecx*2]
  409199:	aad    0x2d
  40919b:	imul   ebx,esi,0x57
  40919e:	mov    DWORD PTR [esi],edi
  4091a0:	cld    
  4091a1:	xchg   BYTE PTR [edi+0x69cd0064],ch
  4091a7:	fiadd  WORD PTR ds:0xd75a2b6f
  4091ad:	mov    ebx,ebp
  4091af:	push   ecx
  4091b0:	aas    
  4091b1:	rcl    DWORD PTR [esi-0x4d011e6f],1
  4091b7:	aaa    
  4091b8:	and    eax,0x447658c2
  4091bd:	sbb    edi,DWORD PTR [ebp+0x2a]
  4091c0:	add    BYTE PTR [edi-0x37b01ce7],dh
  4091c6:	cmp    cl,BYTE PTR fs:0x1ad36612
  4091cd:	fbld   TBYTE PTR [esi-0x487173a3]
  4091d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091d4:	scas   eax,DWORD PTR es:[edi]
  4091d5:	inc    esi
  4091d6:	mov    ebx,0x4eed9c3e
  4091db:	std    
  4091dc:	(bad)  
  4091dd:	fldenv [ecx+0x60]
  4091e0:	add    eax,0xbc1becaf
  4091e5:	pop    ds
  4091e6:	xor    eax,0x8b1a337d
  4091eb:	and    BYTE PTR [ecx-0x6a897458],0xe6
  4091f2:	jp     0x4091d9
  4091f4:	outs   dx,BYTE PTR ds:[esi]
  4091f5:	mov    dh,0x21
  4091f7:	out    dx,al
  4091f8:	call   0x2d19:0xd2d20f01
  4091ff:	mov    cl,dl
  409201:	push   ss
  409202:	fdiv   st(5),st
  409204:	mov    eax,0x6b74746a
  409209:	in     al,dx
  40920a:	mov    dh,0xef
  40920c:	retf   
  40920d:	fisub  DWORD PTR [esi+ebx*1+0x52]
  409211:	div    DWORD PTR [eax-0x675da27b]
  409217:	or     bh,bl
  409219:	loop   0x4091ae
  40921b:	jl     0x409272
  40921d:	outs   dx,BYTE PTR ds:[esi]
  40921e:	mov    al,ds:0xdc4355f9
  409223:	dec    edi
  409224:	pop    DWORD PTR [edx-0x5f0cf9d5]
  40922a:	add    BYTE PTR [edi-0x8],cl
  40922d:	jnp    0x4092a3
  40922f:	sbb    BYTE PTR [ecx-0x368b0909],dl
  409235:	retf   0x1aa8
  409238:	je     0x40927d
  40923a:	and    cl,BYTE PTR [edi-0x11631628]
  409240:	fiadd  WORD PTR [ebx-0x66]
  409243:	cld    
  409244:	ret    0x877c
  409247:	jo     0x40923c
  409249:	jmp    0x4092bd
  40924b:	mov    ds:0xb6b1d1ec,eax
  409250:	ja     0x40925f
  409252:	pop    ss
  409253:	cdq    
  409254:	mul    BYTE PTR [ebp+0xccff3ed]
  40925a:	inc    ebp
  40925b:	sti    
  40925c:	popa   
  40925d:	pop    es
  40925e:	das    
  40925f:	outs   dx,BYTE PTR ds:[esi]
  409260:	or     dh,BYTE PTR [edx]
  409262:	outs   dx,DWORD PTR ds:[esi]
  409263:	xchg   esi,eax
  409264:	pusha  
  409265:	mov    cl,0xe6
  409267:	ja     0x4091f9
  409269:	jne    0x409207
  40926b:	in     al,0x32
  40926d:	adc    bl,0x6c
  409270:	ins    DWORD PTR es:[edi],dx
  409271:	mov    eax,ds:0xfff0fd1c
  409276:	dec    esi
  409277:	dec    edi
  409278:	jl     0x40926b
  40927a:	xchg   esi,eax
  40927b:	daa    
  40927c:	adc    DWORD PTR [ebp-0x13],edi
  40927f:	inc    esi
  409280:	std    
  409281:	nop
  409282:	add    al,0x15
  409284:	sub    edi,DWORD PTR [eax]
  409286:	push   esp
  409287:	test   DWORD PTR [eax+0x5777726],eax
  40928d:	fdivr  QWORD PTR [edi+0x16ef6db]
  409293:	sbb    BYTE PTR [eax],0x3b
  409296:	sub    ah,BYTE PTR [ebp-0x5fa5ac15]
  40929c:	mov    esi,0x215ee6cf
  4092a1:	jmp    0x409272
  4092a3:	test   BYTE PTR [edi-0xc],bl
  4092a6:	outs   dx,DWORD PTR ds:[esi]
  4092a7:	jecxz  0x40931a
  4092a9:	mov    edi,DWORD PTR [edi-0x4caf9ba5]
  4092af:	ja     0x409299
  4092b1:	and    dh,BYTE PTR [edx]
  4092b3:	int3   
  4092b4:	push   cs
  4092b5:	xor    eax,0x22dc0114
  4092ba:	dec    edx
  4092bb:	push   ds
  4092bc:	iret   
  4092bd:	sbb    al,0x2d
  4092bf:	add    eax,DWORD PTR [eax+0x2f]
  4092c2:	add    DWORD PTR [esi],eax
  4092c4:	repnz inc esp
  4092c6:	xchg   esp,eax
  4092c7:	xor    al,0xd4
  4092c9:	cmp    dh,BYTE PTR [ebx+edi*2+0x28]
  4092cd:	mov    eax,0xd31ff0ce
  4092d2:	aad    0x91
  4092d4:	in     eax,0x56
  4092d6:	leave  
  4092d7:	adc    ch,BYTE PTR [edx+0x4c]
  4092da:	xchg   DWORD PTR [eax+0x14],eax
  4092dd:	loope  0x40926d
  4092df:	stc    
  4092e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092e1:	pop    esi
  4092e2:	ror    BYTE PTR [ecx+0x3a6606db],1
  4092e8:	sbb    BYTE PTR [ecx+0x6e],ah
  4092eb:	inc    ebp
  4092ec:	popf   
  4092ed:	mov    ebp,0x7a3d59c5
  4092f2:	pop    esi
  4092f3:	ins    BYTE PTR es:[edi],dx
  4092f4:	idiv   DWORD PTR [eax]
  4092f6:	xchg   edi,eax
  4092f7:	cmp    DWORD PTR [esi+eax*1],ecx
  4092fa:	xchg   edx,eax
  4092fb:	jbe    0x409331
  4092fd:	aam    0xba
  4092ff:	jne    0x40931e
  409301:	pop    ebp
  409302:	fdivr  QWORD PTR [esi-0x73]
  409305:	(bad)  
  409307:	xor    al,0x80
  409309:	add    BYTE PTR [eax+edi*2+0x8183df3],dh
  409310:	lock push edi
  409312:	mov    bh,0xd6
  409314:	jge    0x4092c0
  409316:	sub    DWORD PTR [esi+0x38],ebx
  409319:	iret   
  40931a:	add    ebx,DWORD PTR [edx-0x3744461d]
  409320:	and    BYTE PTR [edx+0x48f0c287],ah
  409326:	pop    ebx
  409327:	add    bl,bl
  409329:	jbe    0x4092b9
  40932b:	pop    ebx
  40932c:	sub    DWORD PTR [ecx+0x69],esp
  40932f:	sar    DWORD PTR [edi+0x71e25e5a],cl
  409335:	dec    esp
  409336:	mov    eax,0xcfc87cb0
  40933b:	into   
  40933c:	(bad)  
  40933d:	cmc    
  40933e:	jo     0x40939c
  409340:	xlat   BYTE PTR ds:[ebx]
  409341:	jmp    0x6226:0x30289823
  409348:	xlat   BYTE PTR ds:[ebx]
  409349:	mov    esi,0xe7fb6af
  40934e:	cmp    eax,0x3a716ec9
  409353:	mov    esi,0x3f6248a1
  409358:	popa   
  409359:	fwait
  40935a:	xchg   edx,eax
  40935b:	jge    0x4093d3
  40935d:	test   al,0xea
  40935f:	cmp    al,0x74
  409361:	jp     0x4092f1
  409363:	ins    BYTE PTR es:[edi],dx
  409364:	inc    esp
  409365:	inc    esi
  409366:	ror    BYTE PTR ds:0xa94e5df7,0x1b
  40936d:	das    
  40936e:	aad    0xd4
  409370:	test   DWORD PTR [eax+0x78],0xa4e8a3c2
  409377:	pop    edx
  409378:	test   al,0x3a
  40937a:	sti    
  40937b:	sub    BYTE PTR [esi],ah
  40937d:	mov    cl,0x20
  40937f:	jbe    0x409329
  409381:	mov    bh,0xa9
  409383:	repz or eax,0x54da59e2
  409389:	pop    edx
  40938a:	push   esp
  40938b:	or     al,0x20
  40938d:	ins    BYTE PTR es:[edi],dx
  40938e:	cmp    eax,eax
  409390:	enter  0x4a48,0xb3
  409394:	adc    ebp,edx
  409396:	div    BYTE PTR [ebx+0x79]
  409399:	jbe    0x409370
  40939b:	adc    al,0xaf
  40939d:	pushf  
  40939e:	cwde   
  40939f:	mov    ds,ebx
  4093a1:	sub    eax,0x9b32543a
  4093a6:	mov    edi,0x751d4e5c
  4093ab:	lea    ebx,[ecx-0x1ae2043d]
  4093b1:	mov    ch,0xfd
  4093b3:	std    
  4093b4:	stos   DWORD PTR es:[edi],eax
  4093b5:	scas   eax,DWORD PTR es:[edi]
  4093b6:	sbb    eax,0xf4a8d86e
  4093bb:	mov    ds:0x36084337,al
  4093c0:	inc    BYTE PTR [ecx]
  4093c2:	add    al,0x36
  4093c4:	jmp    0x708d:0x6bebd1dc
  4093cb:	stc    
  4093cc:	pop    ecx
  4093cd:	jmp    0x63867171
  4093d2:	mov    eax,ds:0x6ca26f37
  4093d7:	mov    bl,0x9b
  4093d9:	inc    ebp
  4093da:	jnp    0x40944d
  4093dc:	fsubrp st(0),st
  4093de:	dec    esp
  4093df:	cmp    DWORD PTR [ebx-0x14],esi
  4093e2:	push   ecx
  4093e3:	add    al,0x69
  4093e5:	add    esp,DWORD PTR [ebp-0x513dfc96]
  4093eb:	pop    esp
  4093ec:	rol    DWORD PTR [ebx-0x71fc02cf],0x72
  4093f3:	aad    0x3d
  4093f5:	inc    ebx
  4093f6:	mov    esp,0xf642ceb0
  4093fb:	ret    
  4093fc:	das    
  4093fd:	fimul  WORD PTR [ecx+0x4f366eb9]
  409403:	cmp    eax,0xa344c0a8
  409408:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409409:	jge    0x40947c
  40940b:	cmp    ebp,ecx
  40940d:	add    bh,BYTE PTR [esi+ebx*2]
  409410:	pushf  
  409411:	jg     0x409429
  409413:	inc    ecx
  409414:	shr    ah,cl
  409416:	aas    
  409417:	les    edi,FWORD PTR [ecx+ecx*2-0x4a6d2018]
  40941e:	cmp    DWORD PTR [edx+ecx*8-0x72c017ef],eax
  409425:	inc    edi
  409426:	push   edi
  409427:	mov    al,ds:0x4d18369
  40942c:	sub    esp,DWORD PTR [esi+0x6954256e]
  409432:	cwde   
  409433:	rcr    BYTE PTR [edi],cl
  409435:	call   0xe311e40e
  40943a:	add    edx,DWORD PTR [esp+edx*1]
  40943d:	xlat   BYTE PTR ds:[ebx]
  40943e:	and    al,0x23
  409440:	aam    0xd0
  409442:	sub    eax,0x3282f33d
  409447:	ins    BYTE PTR es:[edi],dx
  409448:	and    eax,0x57ec4c40
  40944d:	test   eax,0x900a71bc
  409452:	(bad)  
  409453:	cmp    BYTE PTR [edi-0x14],dl
  409456:	sub    dl,ch
  409458:	adc    DWORD PTR [eax+0x74a652db],0x21
  40945f:	(bad)
  409463:	imul   edi,DWORD PTR cs:[edi+ecx*1],0xfffffff4
  409468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409469:	lock sar BYTE PTR ds:0xf79c303f,0xda
  409471:	cmp    BYTE PTR [esp+esi*1+0x53eb8158],bl
  409478:	imul   ecx,ebx,0xd682cbf4
  40947e:	bound  ebx,QWORD PTR [ebp-0x15]
  409481:	mov    eax,0x131add64
  409486:	sub    DWORD PTR [ebx-0x18],edi
  409489:	cmp    edx,ecx
  40948b:	xchg   DWORD PTR [esi-0x38],esp
  40948e:	adc    al,0xd3
  409490:	mov    dl,0x62
  409492:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409493:	add    BYTE PTR [ecx-0x7c01d133],ah
  409499:	rcr    BYTE PTR [edx+ebp*2+0x7207db36],cl
  4094a0:	sub    BYTE PTR [ecx-0x138d5314],0xf1
  4094a7:	pop    esp
  4094a8:	pop    ebp
  4094a9:	add    eax,0x664c218d
  4094ae:	lea    ebx,[edx+0x39]
  4094b1:	push   0x83ba9db8
  4094b6:	mov    esp,0x14490d45
  4094bb:	jecxz  0x409446
  4094bd:	(bad)  
  4094be:	aam    0x4d
  4094c0:	dec    edi
  4094c1:	shr    cl,cl
  4094c3:	jnp    0x409453
  4094c5:	icebp  
  4094c6:	test   al,0xf3
  4094c8:	pop    es
  4094c9:	fs xor al,0xca
  4094cc:	cwde   
  4094cd:	rcr    DWORD PTR [eax],0xa5
  4094d0:	jns    0x409489
  4094d2:	fild   WORD PTR [edi+ecx*8-0x26]
  4094d6:	mov    ebp,0x7f7b002e
  4094db:	fwait
  4094dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094dd:	ja     0x40952c
  4094df:	rol    DWORD PTR [ecx+0x51452187],cl
  4094e5:	pop    ds
  4094e6:	push   es
  4094e7:	nop
  4094e8:	inc    eax
  4094e9:	and    al,0x8d
  4094eb:	cli    
  4094ec:	test   BYTE PTR [esi-0x7a],al
  4094ef:	daa    
  4094f0:	imul   ebp,DWORD PTR [ebx-0x77],0xffffffc0
  4094f4:	cmp    al,0x18
  4094f6:	scas   eax,DWORD PTR es:[edi]
  4094f7:	div    DWORD PTR [edi+0x165624f9]
  4094fd:	or     edx,DWORD PTR [ebx+0x2d]
  409500:	bound  edx,QWORD PTR [eax-0x340a1d96]
  409506:	int    0xe6
  409508:	int    0x25
  40950a:	pop    ebx
  40950b:	ss jne 0x409517
  40950e:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  409510:	add    ebp,DWORD PTR [ecx]
  409512:	pushf  
  409513:	pop    eax
  409514:	pop    edx
  409515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409516:	stc    
  409517:	mov    ebp,0xfe2c1163
  40951c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40951d:	push   esi
  40951e:	xchg   esp,eax
  40951f:	pop    ebp
  409520:	popa   
  409521:	mov    eax,0x2a138789
  409526:	add    al,0xaf
  409529:	sub    ecx,DWORD PTR [ecx-0x60871b12]
  40952f:	inc    esi
  409530:	mov    ?,WORD PTR [ecx+0x2c]
  409533:	dec    ecx
  409534:	inc    esi
  409535:	pusha  
  409536:	inc    edx
  409537:	aam    0x8e
  409539:	xchg   DWORD PTR [ebp-0x1b],esi
  40953c:	dec    ebp
  40953d:	add    ecx,ecx
  40953f:	lahf   
  409540:	adc    al,0x26
  409542:	int    0x24
  409544:	into   
  409545:	mov    eax,0x91a6f301
  40954a:	pop    ebp
  40954b:	jnp    0x4095c7
  40954d:	sar    BYTE PTR [ebx+0xbbdf4b1],cl
  409553:	add    DWORD PTR [esi-0x1a],esp
  409556:	sahf   
  409557:	push   0x731c5b2d
  40955c:	fldenv [eax-0x49]
  40955f:	outs   dx,DWORD PTR ds:[esi]
  409560:	popf   
  409561:	jb     0x4095d1
  409563:	(bad)  
  409564:	sbb    eax,0x8b0f8a45
  409569:	pop    ds
  40956a:	xchg   esi,eax
  40956b:	rol    BYTE PTR [esi],cl
  40956d:	call   0x3a37:0x93413461
  409574:	add    dl,BYTE PTR [ebp-0x28]
  409577:	imul   DWORD PTR [edx-0x22]
  40957a:	adc    eax,0x31a77558
  40957f:	(bad)  
  409580:	iret   
  409581:	sbb    edi,esp
  409583:	test   eax,0x5a691b87
  409588:	nop
  409589:	iret   
  40958a:	cmc    
  40958b:	xor    ebx,eax
  40958d:	xchg   DWORD PTR [ecx-0x6add88c3],ebx
  409593:	push   edx
  409594:	stc    
  409595:	mov    edx,DWORD PTR [ecx]
  409597:	inc    edi
  409598:	les    edx,FWORD PTR [edi-0xb]
  40959b:	pop    ebx
  40959c:	dec    ebx
  40959d:	ja     0x409603
  40959f:	addr16 rcl bh,1
  4095a2:	dec    ebx
  4095a3:	imul   ebp,DWORD PTR [eax+0x34d8ec0a],0xffffff8f
  4095aa:	les    edx,FWORD PTR [edi]
  4095ac:	xchg   esp,eax
  4095ad:	ret    0x21f1
  4095b0:	scas   al,BYTE PTR es:[edi]
  4095b1:	pop    es
  4095b2:	cmp    esi,ebx
  4095b4:	idiv   esp
  4095b6:	xchg   ebp,eax
  4095b7:	jo     0x40958e
  4095b9:	popa   
  4095ba:	cmp    al,0x2b
  4095bc:	xchg   dh,bh
  4095be:	dec    ebp
  4095bf:	fs pushf 
  4095c1:	jae    0x409571
  4095c3:	and    BYTE PTR [ebp+0x5d],bl
  4095c6:	or     al,0xa5
  4095c8:	mov    eax,ds:0x2a21f8a8
  4095cd:	int3   
  4095ce:	fcmovb st,st(0)
  4095d0:	jnp    0x40960b
  4095d2:	bt     DWORD PTR [eax+0x41],ebp
  4095d6:	retf   0xe60e
  4095d9:	and    eax,0xe4e22790
  4095de:	cmp    dh,ch
  4095e0:	jmp    0x5179919f
  4095e5:	(bad)  
  4095e6:	retf   
  4095e7:	jmp    0xd49e:0xbedf41e
  4095ee:	std    
  4095ef:	test   al,0x53
  4095f1:	inc    esp
  4095f2:	dec    esp
  4095f3:	call   0xd50ab5be
  4095f8:	push   edi
  4095f9:	and    al,BYTE PTR [si-0x74]
  4095fd:	sti    
  4095fe:	jns    0x409661
  409600:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409601:	dec    esp
  409602:	ret    0x9e9c
  409605:	cmp    ch,BYTE PTR [ecx-0x37dc9ee9]
  40960b:	sub    DWORD PTR [ebx-0x60],esp
  40960e:	inc    ebp
  40960f:	mov    eax,ds:0x7244ac74
  409614:	or     dh,dh
  409616:	xor    eax,0x5e7264a1
  40961b:	or     bh,BYTE PTR [ebx+0x145804b6]
  409621:	hlt    
  409622:	pop    esp
  409623:	ret    0x882
  409626:	in     eax,dx
  409627:	ins    DWORD PTR es:[edi],dx
  409628:	daa    
  409629:	sub    esp,DWORD PTR [edi]
  40962b:	(bad)  
  40962c:	sti    
  40962d:	in     eax,0x5a
  40962f:	(bad)  
  409630:	mov    ch,0x3d
  409632:	xchg   esi,eax
  409633:	pop    ds
  409634:	cs popf 
  409636:	nop
  409637:	or     ebp,esp
  409639:	mov    esp,DWORD PTR [ebp-0x653c3922]
  40963f:	pusha  
  409640:	imul   esp,DWORD PTR [esi],0xf900c666
  409646:	jb     0x4096c6
  409648:	add    dl,BYTE PTR [esp]
  40964b:	dec    eax
  40964c:	test   al,0x74
  40964e:	mov    eax,0xf0d0b101
  409653:	imul   BYTE PTR [edx]
  409655:	mov    esp,0x919ec559
  40965a:	lock and cl,BYTE PTR [esi-0x38a77643]
  409661:	mov    ebp,0x3efb9733
  409666:	stc    
  409667:	xchg   esp,eax
  409668:	adc    dh,BYTE PTR [edi-0x78ef5c59]
  40966e:	popf   
  40966f:	xchg   ecx,eax
  409670:	(bad)  
  409671:	fldenv [esi]
  409673:	call   0xf6185c34
  409678:	in     eax,dx
  409679:	fnstenv ds:0x764ad735
  40967f:	mov    cl,al
  409681:	mov    es,WORD PTR [ebp-0x75229bdc]
  409687:	jecxz  0x4096c4
  409689:	loop   0x409664
  40968b:	xchg   edi,eax
  40968c:	push   es
  40968d:	(bad)  
  40968f:	jnp    0x40968a
  409691:	xor    eax,0xb783c3e9
  409696:	fsub   QWORD PTR [esi]
  409698:	inc    edx
  409699:	jne    0x40968a
  40969b:	test   DWORD PTR [esi-0x49],ebx
  40969e:	pop    esi
  40969f:	or     ah,BYTE PTR [eax+0x7e73061e]
  4096a5:	shl    ebx,cl
  4096a7:	sti    
  4096a8:	xchg   ebx,eax
  4096a9:	sub    DWORD PTR [ebx+edx*4-0x5178c956],0x50
  4096b1:	fcom   QWORD PTR [ebx+0x6c5f43aa]
  4096b7:	or     DWORD PTR [esi+ebp*4],ecx
  4096ba:	add    eax,0x13e505ec
  4096bf:	sbb    al,0x91
  4096c1:	fsubr  QWORD PTR [ebx-0x6c33e4be]
  4096c7:	and    DWORD PTR [bx+si-0xc],ebp
  4096cb:	xor    ch,ch
  4096cd:	push   esp
  4096ce:	jmp    0x40973f
  4096d0:	jns    0x4096c6
  4096d2:	sar    BYTE PTR [edi+0x42ed586a],cl
  4096d8:	(bad)  
  4096d9:	fldenv [edi+0x75]
  4096dc:	or     BYTE PTR [ecx-0x136ce913],dh
  4096e2:	retf   0x98dc
  4096e5:	push   es
  4096e6:	ror    esi,0x13
  4096e9:	jbe    0x4096df
  4096eb:	aaa    
  4096ec:	scas   eax,DWORD PTR es:[edi]
  4096ed:	inc    eax
  4096ee:	js     0x40971c
  4096f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096f1:	cmp    eax,0x5cbdf17e
  4096f6:	hlt    
  4096f7:	adc    dl,al
  4096f9:	aas    
  4096fa:	jle    0x409751
  4096fc:	jecxz  0x409696
  4096fe:	enter  0x4b55,0xc2
  409702:	cmp    eax,0xaecfc047
  409707:	sub    bl,BYTE PTR [edi+0x43]
  40970a:	shl    BYTE PTR [esi-0xa],cl
  40970d:	mov    eax,0x2f16395f
  409712:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409713:	xor    BYTE PTR [edi+ebx*8+0x2b],bl
  409717:	xchg   edx,eax
  409718:	(bad)  
  409719:	jle    0x4096de
  40971b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40971c:	mov    bh,0xa4
  40971e:	gs xchg esi,eax
  409720:	enter  0x9807,0x72
  409724:	add    BYTE PTR [edi],dh
  409726:	mov    BYTE PTR [edi],bh
  409728:	inc    esp
  409729:	cmp    al,0x96
  40972b:	sub    esp,edx
  40972d:	mov    edx,0x94267385
  409732:	pushf  
  409733:	mov    DWORD PTR [esi+0x43],eax
  409736:	in     eax,dx
  409737:	and    eax,0x3bd23c69
  40973c:	pop    ds
  40973d:	mul    WORD PTR [esi+esi*4+0x1d]
  409742:	enter  0xcfd9,0x3b
  409746:	les    ebx,FWORD PTR [eax]
  409748:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409749:	mov    cl,0xf6
  40974b:	adc    ebx,ecx
  40974d:	inc    esi
  40974e:	sbb    BYTE PTR [ebx+0x62],bl
  409751:	jnp    0x4097a4
  409753:	lds    ebp,FWORD PTR [edi]
  409755:	xchg   ecx,eax
  409756:	retf   0x52f7
  409759:	fst    DWORD PTR [ebp-0x3830a8c2]
  40975f:	mov    al,ds:0x15966153
  409764:	and    al,0xc
  409766:	outs   dx,DWORD PTR ds:[si]
  409768:	sub    BYTE PTR [esi],al
  40976a:	mov    edx,0xf20ca26b
  40976f:	jp     0x4097cb
  409771:	jg     0x4097bc
  409773:	mov    esi,DWORD PTR [edx]
  409775:	adc    al,0xe
  409777:	fsub   DWORD PTR [edi+0x1fa2acb2]
  40977d:	adc    al,0x91
  40977f:	xchg   edi,eax
  409780:	ins    BYTE PTR es:[edi],dx
  409781:	push   ds
  409782:	xchg   edi,eax
  409783:	dec    edi
  409784:	cwde   
  409785:	in     al,dx
  409786:	mov    al,0x88
  409788:	and    dl,dl
  40978a:	pop    ds
  40978b:	jno    0x4097f2
  40978d:	leave  
  40978e:	js     0x4097eb
  409790:	aaa    
  409791:	or     ch,BYTE PTR [eax+0x55]
  409794:	push   0x9756c105
  409799:	out    0x57,al
  40979b:	sbb    BYTE PTR [ecx+0x5],dl
  40979e:	ja     0x4097ad
  4097a0:	xchg   ebx,eax
  4097a1:	ret    
  4097a2:	xchg   esi,eax
  4097a3:	ror    BYTE PTR [esi-0x4260ee0c],cl
  4097a9:	push   ecx
  4097aa:	cmc    
  4097ab:	jb     0x4097d3
  4097ad:	sub    al,0x45
  4097af:	int3   
  4097b0:	xchg   ebx,eax
  4097b1:	aad    0xd9
  4097b3:	test   esp,0x73c84db4
  4097b9:	sub    BYTE PTR [edi+0x74],ch
  4097bc:	push   esp
  4097bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097be:	in     al,0xe1
  4097c0:	mov    eax,0x1e1992ce
  4097c5:	(bad)  
  4097c6:	shl    DWORD PTR [esi-0x5b],1
  4097c9:	loopne 0x409761
  4097cb:	mov    bl,0x31
  4097cd:	xchg   edi,eax
  4097ce:	loope  0x4097c9
  4097d0:	mov    DWORD PTR [ecx+edi*2+0x68],eax
  4097d4:	dec    edx
  4097d5:	inc    esi
  4097d6:	push   edi
  4097d7:	jbe    0x409820
  4097d9:	mov    ch,0xa8
  4097db:	sbb    DWORD PTR [eax+0x67f70187],0xffffff9f
  4097e2:	fdivr  QWORD PTR [edi-0x8]
  4097e5:	mov    al,0x44
  4097e7:	pop    eax
  4097e8:	repz inc edi
  4097ea:	and    ebx,eax
  4097ec:	add    edi,DWORD PTR [ecx+0x44387d70]
  4097f2:	stos   BYTE PTR es:[edi],al
  4097f3:	sbb    al,BYTE PTR [ebx-0x9b27d73]
  4097f9:	sub    ebp,DWORD PTR [ecx-0x75]
  4097fc:	das    
  4097fd:	scas   al,BYTE PTR es:[edi]
  4097fe:	dec    edx
  4097ff:	mov    dh,0xf9
  409801:	adc    esp,edx
  409803:	les    ecx,FWORD PTR [ecx+0x12]
  409806:	loope  0x4097d3
  409808:	cld    
  409809:	inc    ebp
  40980a:	mov    ebp,0x158dffff
  40980f:	xchg   DWORD PTR [ecx],esp
  409811:	ss aam 0xaf
  409814:	mov    ah,0x7f
  409816:	mov    bl,0x79
  409818:	es adc eax,0x7e276481
  40981e:	jb     0x409898
  409820:	aad    0xbc
  409822:	pop    esi
  409823:	sbb    al,0x1
  409825:	call   0xa4396ae
  40982a:	fs mov eax,0x2e206b24
  409830:	lea    ebp,[ebx-0x3e6dba8a]
  409836:	and    al,0xaf
  409838:	jge    0x4097f5
  40983a:	xchg   BYTE PTR [ebx-0x7f],al
  40983d:	mov    dl,0x6a
  40983f:	sub    eax,0xfa1dd330
  409844:	inc    ebx
  409845:	push   ss
  409846:	fistp  WORD PTR [ecx+0x7]
  409849:	or     eax,0xa8cc5712
  40984e:	mov    cl,0x56
  409850:	imul   eax,edx,0xffffff99
  409853:	imul   edx,DWORD PTR [edi-0x2dffabdf],0xc222254
  40985d:	int    0xa4
  40985f:	push   ebp
  409860:	add    cl,BYTE PTR [ebp-0x6e171e79]
  409866:	cli    
  409867:	push   es
  409868:	or     ebp,ecx
  40986a:	adc    eax,0xb3ee0160
  40986f:	test   eax,0xc25375c5
  409874:	or     edi,edi
  409876:	in     eax,0x3f
  409878:	ret    0xbba
  40987b:	jmp    0x409842
  40987d:	cwde   
  40987e:	daa    
  40987f:	fidiv  WORD PTR [esi]
  409881:	cwde   
  409882:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409883:	cli    
  409884:	stc    
  409885:	dec    edx
  409886:	cmp    al,BYTE PTR [ecx+0x57]
  409889:	ja     0x40989d
  40988b:	pop    esi
  40988c:	out    0x73,eax
  40988e:	test   eax,0x8b1385d8
  409893:	es mov edx,0x5863f6da
  409899:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40989a:	cvtdq2ps xmm6,XMMWORD PTR [edi-0x45ef7988]
  4098a1:	sub    eax,ebp
  4098a3:	jecxz  0x409827
  4098a5:	ds push eax
  4098a7:	xor    al,BYTE PTR [ecx+0x51a2ddbf]
  4098ad:	mov    DWORD PTR [ebx+0x4b1352ee],eax
  4098b3:	aaa    
  4098b4:	retf   
  4098b5:	adc    edx,DWORD PTR [edi+ebx*8-0x2f]
  4098b9:	mov    ecx,0x47f7885b
  4098be:	xchg   ebp,eax
  4098bf:	data16 in al,0x78
  4098c2:	and    DWORD PTR [ecx],ebp
  4098c4:	and    BYTE PTR [ebx+0x16],cl
  4098c7:	or     al,0x25
  4098c9:	add    cl,BYTE PTR [eax+ebx*4+0x30]
  4098cd:	fidiv  DWORD PTR [ebx]
  4098cf:	jmp    0x4c8e:0x1af46718
  4098d6:	jmp    0xed6:0xbd7f1749
  4098dd:	scas   eax,DWORD PTR es:[edi]
  4098de:	pop    ebx
  4098df:	(bad)  
  4098e0:	mov    bl,0x9e
  4098e2:	mov    edx,0x5c703526
  4098e7:	ins    BYTE PTR es:[edi],dx
  4098e8:	xchg   ebx,eax
  4098e9:	jb     0x409962
  4098eb:	cld    
  4098ec:	out    dx,al
  4098ed:	lahf   
  4098ee:	shr    BYTE PTR [ebp+0xa],0x91
  4098f2:	push   es
  4098f3:	jnp    0x4098cb
  4098f5:	dec    ebx
  4098f6:	arpl   WORD PTR [ebx],dx
  4098f8:	cmp    cl,BYTE PTR [ebx+0x7836f7aa]
  4098fe:	lea    edi,[ebx+0x29]
  409901:	stc    
  409902:	pop    ss
  409903:	or     edi,ebx
  409905:	sbb    BYTE PTR [ebx+0x67b4e099],cl
  40990b:	int3   
  40990c:	mov    eax,0x7187ee73
  409911:	mov    ?,WORD PTR [ebp+0x68]
  409914:	mov    ecx,DWORD PTR [ebp-0x5281d60e]
  40991a:	in     al,0x71
  40991c:	sbb    esp,DWORD PTR [ebx+0x74]
  40991f:	push   0xffffffdd
  409921:	sub    ch,BYTE PTR [ecx-0x48]
  409924:	mov    esi,0x371e36fe
  409929:	xchg   edx,eax
  40992a:	push   edi
  40992b:	mov    edx,0xc06c2829
  409930:	fisub  DWORD PTR [edx]
  409932:	sub    al,0xfb
  409934:	aas    
  409935:	push   0xffffff91
  409937:	add    eax,0x5181db14
  40993c:	mov    ecx,0xf90ac6cb
  409941:	loopne 0x4099b6
  409943:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409944:	jmp    0x4098d3
  409946:	mov    eax,ds:0x9b6f3b2c
  40994b:	jecxz  0x409985
  40994d:	lock ficom WORD PTR [esi]
  409950:	arpl   WORD PTR [edi+0x1f9a1bd3],dx
  409956:	retf   
  409957:	fistp  QWORD PTR [ecx-0x5d]
  40995a:	ret    
  40995b:	jo     0x409940
  40995d:	fist   WORD PTR [ebp-0x38]
  409960:	jbe    0x4099a2
  409962:	adc    al,0x9
  409964:	xor    DWORD PTR [ebp+0x1a],ebx
  409967:	(bad)  
  409968:	std    
  409969:	dec    ecx
  40996a:	fs xchg edi,eax
  40996c:	repz xor al,0x6e
  40996f:	push   eax
  409970:	fsubp  st(7),st
  409972:	xchg   DWORD PTR [edi],edx
  409974:	xchg   esp,eax
  409975:	and    DWORD PTR ds:0x796391a1,edi
  40997b:	aam    0x6e
  40997d:	js     0x409941
  40997f:	(bad)  
  409981:	add    DWORD PTR [ecx+0x12],0x5f3bcd19
  409988:	or     DWORD PTR [eax],0xd2a2b455
  40998e:	inc    eax
  40998f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409991:	pop    ebp
  409992:	daa    
  409993:	xchg   edi,eax
  409994:	add    al,0xa3
  409996:	add    eax,0x48415f76
  40999b:	pop    ebp
  40999c:	test   al,0x1d
  40999e:	add    BYTE PTR [ebp-0x5499a2c6],bh
  4099a4:	mov    eax,ds:0xeb256c59
  4099a9:	cwde   
  4099aa:	addr16 inc ecx
  4099ac:	popa   
  4099ad:	retf   0x244b
  4099b0:	scas   eax,DWORD PTR es:[edi]
  4099b1:	out    0xb,al
  4099b3:	or     BYTE PTR [ecx+0x7d93fc31],cl
  4099b9:	push   esp
  4099ba:	inc    esi
  4099bb:	xchg   ebx,eax
  4099bc:	pause  
  4099be:	cmp    DWORD PTR ds:0x44c47afb,esi
  4099c4:	mov    esp,0x122f3385
  4099c9:	sbb    BYTE PTR [ecx+0x23],dh
  4099cc:	pushf  
  4099cd:	xor    eax,0x1c063ffa
  4099d2:	xchg   esi,eax
  4099d3:	shl    BYTE PTR [ecx-0x17],1
  4099d6:	push   0x34
  4099d8:	xchg   esi,eax
  4099d9:	mov    bl,0x5d
  4099db:	call   0x3af4:0x5fc2a96c
  4099e2:	mov    ch,0xd
  4099e4:	shl    BYTE PTR [ecx],0xb2
  4099e7:	or     bl,BYTE PTR [ebp+0xe]
  4099ea:	out    dx,eax
  4099eb:	sub    al,0x52
  4099ed:	sbb    DWORD PTR [esi-0x52],0x25
  4099f1:	pop    esi
  4099f2:	lock or DWORD PTR [ebx+0x41],0xffffffec
  4099f7:	mov    ah,0x41
  4099f9:	cdq    
  4099fa:	xchg   edx,eax
  4099fb:	jno    0x409a6c
  4099fd:	dec    esi
  4099fe:	jae    0x4099c9
  409a00:	xor    esp,DWORD PTR [ebx+0x4d]
  409a03:	adc    BYTE PTR [eax-0x10],bh
  409a06:	jno    0x409a30
  409a08:	stos   DWORD PTR es:[edi],eax
  409a09:	xor    eax,0x8fb1940c
  409a0e:	shl    DWORD PTR [ecx-0x7],cl
  409a11:	sub    DWORD PTR [esi+0x57c2a450],edx
  409a17:	push   0x9ed1a5b
  409a1c:	jl     0x4099d6
  409a1e:	lds    ebp,FWORD PTR ss:[ebx]
  409a21:	sahf   
  409a22:	xchg   esi,eax
  409a23:	jle    0x409a24
  409a25:	and    eax,0xac7e5237
  409a2a:	call   0x5029:0xa55983c9
  409a31:	jns    0x409aa3
  409a33:	dec    ebp
  409a34:	jp     0x409aa3
  409a36:	mov    bl,0x38
  409a38:	pop    ebx
  409a39:	(bad)  
  409a3a:	dec    DWORD PTR [eax]
  409a3c:	jl     0x409a56
  409a3e:	pop    ecx
  409a3f:	adc    BYTE PTR [ecx-0x1ed961ca],ah
  409a45:	jp     0x409ab3
  409a47:	push   esi
  409a48:	outs   dx,BYTE PTR ds:[esi]
  409a49:	and    eax,0x8f117c40
  409a4e:	retf   0x632d
  409a51:	xlat   BYTE PTR ds:[ebx]
  409a52:	retf   0x2a5e
  409a55:	loopne 0x409ab3
  409a57:	xor    cl,BYTE PTR [ebx+esi*8]
  409a5a:	psubq  mm2,mm4
  409a5d:	pushf  
  409a5e:	pop    ebx
  409a5f:	repz sub dh,BYTE PTR [ecx+0x7b4b0b4]
  409a66:	push   ecx
  409a67:	and    al,0x8c
  409a69:	fidivr WORD PTR [eax+0x3f2dd6f9]
  409a6f:	inc    esp
  409a70:	out    0xa4,eax
  409a72:	pusha  
  409a73:	inc    esp
  409a74:	xlat   BYTE PTR ds:[ebx]
  409a75:	or     DWORD PTR [edi+eiz*4+0x2c6fa83e],ebp
  409a7c:	inc    ebx
  409a7d:	ffreep st(0)
  409a7f:	in     eax,0xee
  409a81:	mov    bl,0x23
  409a83:	or     ebx,DWORD PTR [ebx+0x5b]
  409a86:	sbb    DWORD PTR [esi-0x1e],0xffffff80
  409a8a:	cmp    eax,0x64e5e33
  409a8f:	jne    0x409a91
  409a91:	jbe    0x409ad2
  409a93:	mov    bh,0xd8
  409a95:	pop    ebx
  409a96:	adc    bl,dh
  409a98:	mov    al,0x94
  409a9a:	and    bh,cl
  409a9c:	push   0x5557d9bf
  409aa1:	outs   dx,BYTE PTR ds:[esi]
  409aa2:	call   0x6997a8e
  409aa7:	mov    al,0x62
  409aa9:	mov    edi,0xf2b4a096
  409aae:	int    0x74
  409ab0:	scas   eax,DWORD PTR es:[edi]
  409ab1:	jae    0x409ab5
  409ab3:	sahf   
  409ab4:	fcmovb st,st(7)
  409ab6:	repnz nop
  409ab8:	and    esi,DWORD PTR [esi+ecx*8]
  409abb:	into   
  409abc:	(bad)  
  409abd:	or     DWORD PTR [eax+ecx*8],eax
  409ac0:	dec    eax
  409ac1:	aaa    
  409ac2:	adc    cl,ah
  409ac4:	fmul   DWORD PTR [ebx-0x41043d67]
  409aca:	cs mov edx,0x2b811ad6
  409ad0:	ins    DWORD PTR es:[edi],dx
  409ad1:	push   esp
  409ad2:	loopne 0x409b20
  409ad4:	dec    ebp
  409ad5:	xchg   ecx,eax
  409ad6:	xchg   BYTE PTR ds:0x7b8408a7,dl
  409adc:	scas   eax,DWORD PTR es:[edi]
  409add:	lods   eax,DWORD PTR ds:[esi]
  409ade:	dec    ebx
  409adf:	mov    esi,0xffb2bab7
  409ae4:	cmp    ah,al
  409ae6:	fistp  QWORD PTR [eax+0x11676073]
  409aec:	ror    BYTE PTR [ebp-0x4e],cl
  409aef:	call   0x6a05:0x568bd653
  409af6:	jmp    0x57ac:0x12e19ca0
  409afd:	retf   0x65db
  409b00:	scas   eax,DWORD PTR es:[edi]
  409b01:	stos   DWORD PTR es:[edi],eax
  409b02:	sub    BYTE PTR [edi+ecx*2],al
  409b05:	inc    esp
  409b06:	cmp    ecx,ebp
  409b08:	ins    DWORD PTR es:[edi],dx
  409b09:	push   esp
  409b0a:	out    0xd9,al
  409b0c:	lods   eax,DWORD PTR ds:[esi]
  409b0d:	xchg   ebp,eax
  409b0e:	xchg   edx,eax
  409b0f:	rcl    DWORD PTR [esi+0x32],cl
  409b12:	cdq    
  409b13:	fmulp  st(3),st
  409b15:	xchg   DWORD PTR [esi],ebx
  409b17:	dec    edx
  409b18:	jg     0x409b00
  409b1a:	scas   al,BYTE PTR es:[edi]
  409b1b:	inc    ebp
  409b1c:	stc    
  409b1d:	mov    eax,0x988dbb97
  409b22:	push   0xb0eb3a66
  409b27:	xchg   BYTE PTR [edx-0x11],cl
  409b2a:	pop    edx
  409b2b:	or     eax,0x20500c26
  409b30:	test   eax,0x531a6cba
  409b35:	push   0xffffff8d
  409b37:	push   cs
  409b38:	sbb    ah,bh
  409b3a:	(bad)  
  409b3c:	push   edx
  409b3d:	or     DWORD PTR [ebx-0x3b19721],ecx
  409b43:	pop    DWORD PTR [esi]
  409b45:	arpl   WORD PTR [eax],cx
  409b47:	and    al,0xdc
  409b49:	iret   
  409b4a:	and    DWORD PTR [eax+0xb9b0c3d],0x982a7b7f
  409b54:	test   BYTE PTR [ebx-0x6680500],0xdb
  409b5b:	aad    0x54
  409b5d:	lock ret 0x3634
  409b61:	mov    ds:0xcb383065,eax
  409b66:	cmp    DWORD PTR [edi],esi
  409b68:	inc    ebp
  409b69:	imul   esi,ecx,0x35122389
  409b6f:	mov    es,WORD PTR [edi]
  409b71:	imul   DWORD PTR [edi]
  409b73:	add    al,0xe2
  409b75:	loope  0x409b93
  409b77:	sub    eax,0xc2c18fac
  409b7c:	xor    eax,esp
  409b7e:	shl    DWORD PTR [edx],cl
  409b80:	push   ss
  409b81:	jmp    0x38714f09
  409b86:	add    eax,0x1f8fe0da
  409b8b:	add    DWORD PTR [esi-0x10],esi
  409b8e:	and    DWORD PTR [edi-0x5f],eax
  409b91:	sbb    al,0xec
  409b93:	mov    esi,0x90037031
  409b98:	and    esi,ecx
  409b9a:	inc    ecx
  409b9b:	mov    ebx,DWORD PTR [ebx+0x71d02b45]
  409ba1:	mov    ebx,0x3325ac39
  409ba6:	inc    ebx
  409ba7:	inc    ebx
  409ba8:	push   cs
  409ba9:	out    dx,eax
  409baa:	sub    edi,DWORD PTR [eax-0x47386bf3]
  409bb0:	xor    edi,ebx
  409bb2:	push   0x36
  409bb4:	inc    esi
  409bb5:	add    dl,BYTE PTR [edx+0x0]
  409bb8:	pop    esp
  409bb9:	inc    esi
  409bba:	ins    BYTE PTR es:[edi],dx
  409bbb:	pop    eax
  409bbc:	pop    ds
  409bbd:	pop    ds
  409bbe:	jecxz  0x409c3c
  409bc0:	and    DWORD PTR [ebx-0x36aaa68b],esi
  409bc6:	(bad)
  409bca:	out    0x68,al
  409bcc:	in     eax,0x6c
  409bce:	adc    eax,0x4768a3c1
  409bd3:	push   esp
  409bd4:	mov    cl,0xbe
  409bd6:	dec    ebp
  409bd7:	daa    
  409bd8:	shr    DWORD PTR [edx-0x4a8b363d],cl
  409bde:	and    eax,0xd2330788
  409be3:	pop    ds
  409be4:	sbb    ebx,DWORD PTR [esi+0x47]
  409be7:	or     ebx,DWORD PTR [ebx]
  409be9:	xchg   edx,eax
  409bea:	adc    ebp,DWORD PTR [edx-0x5dbd7124]
  409bf0:	mov    ah,0x37
  409bf2:	add    BYTE PTR [esi-0x5469a348],dl
  409bf8:	aad    0x3
  409bfa:	ret    
  409bfb:	jle    0x409bf8
  409bfd:	imul   ebx,DWORD PTR [eax+0x7340ab86],0x66fb1cb3
  409c07:	pop    eax
  409c08:	mov    dl,0xc2
  409c0a:	jl     0x409c5c
  409c0c:	ror    BYTE PTR [ebx+0x23],1
  409c0f:	xlat   BYTE PTR ds:[ebx]
  409c10:	xchg   esi,eax
  409c11:	sar    BYTE PTR [ebx+0x556a013a],0x88
  409c18:	dec    ebx
  409c19:	jmp    0xdc1e:0x1aab5429
  409c20:	dec    ebx
  409c21:	ret    
  409c22:	jl     0x409c0c
  409c24:	cmc    
  409c25:	out    0xa2,al
  409c27:	dec    ecx
  409c28:	nop
  409c29:	popa   
  409c2a:	push   DWORD PTR [edi+eiz*1+0x6e]
  409c2e:	outs   dx,BYTE PTR ds:[esi]
  409c2f:	icebp  
  409c30:	push   0xf4fb13c6
  409c35:	fnop   
  409c37:	int3   
  409c38:	loop   0x409bdb
  409c3a:	fld    DWORD PTR [eax]
  409c3c:	in     eax,dx
  409c3d:	loop   0x409c00
  409c3f:	in     al,0x39
  409c41:	test   dl,ah
  409c43:	loopne 0x409c2d
  409c45:	icebp  
  409c46:	inc    edi
  409c47:	push   edi
  409c48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c49:	jo     0x409c21
  409c4b:	sub    ebx,ecx
  409c4d:	iret   
  409c4e:	lea    edx,[esi]
  409c50:	jne    0x409c77
  409c52:	sub    al,0x60
  409c54:	cmp    BYTE PTR [esi+0x156cf02a],ch
  409c5a:	mov    WORD PTR [eax],gs
  409c5c:	dec    esi
  409c5d:	xchg   ecx,eax
  409c5e:	push   ss
  409c5f:	jbe    0x409c42
  409c61:	pop    ebp
  409c62:	cwde   
  409c63:	xchg   ecx,eax
  409c64:	mov    ds:0xb50ed259,eax
  409c69:	xor    al,0x9f
  409c6b:	xchg   ebp,eax
  409c6c:	dec    ebp
  409c6d:	mov    ah,0x2c
  409c6f:	je     0x409c08
  409c71:	hlt    
  409c72:	(bad)  
  409c73:	out    dx,al
  409c74:	dec    ebp
  409c75:	jbe    0x409c8e
  409c77:	fcomp  QWORD PTR ds:0x487fd54c
  409c7d:	add    ebx,eax
  409c7f:	out    0xc7,al
  409c81:	sbb    eax,0x711f3e9e
  409c86:	pop    eax
  409c87:	sub    al,0xa6
  409c89:	push   esi
  409c8a:	jge    0x409cae
  409c8c:	(bad)  [edi-0x519820f9]
  409c92:	addr16 out dx,al
  409c94:	jecxz  0x409cda
  409c96:	mov    al,ch
  409c98:	fs xchg ebx,eax
  409c9a:	stc    
  409c9b:	pop    edi
  409c9c:	sbb    eax,0x77e8b2b
  409ca1:	and    BYTE PTR [ebx+0x76da8935],bh
  409ca7:	out    dx,eax
  409ca8:	or     eax,0x63b2a362
  409cad:	jge    0x409cb7
  409caf:	dec    ebx
  409cb0:	icebp  
  409cb1:	fs adc al,0x5
  409cb4:	pop    ds
  409cb5:	add    al,BYTE PTR [eax-0x6b]
  409cb8:	mov    ah,0xc7
  409cba:	cs xor al,0x27
  409cbd:	jae    0x409d0f
  409cbf:	sub    esi,DWORD PTR [ebp+edx*2-0x33]
  409cc3:	popf   
  409cc4:	sub    al,0xae
  409cc6:	dec    BYTE PTR [eax]
  409cc8:	dec    eax
  409cc9:	dec    ecx
  409cca:	scas   eax,DWORD PTR es:[edi]
  409ccb:	fld    QWORD PTR [ebx+eiz*8+0x71a71b7a]
  409cd2:	and    ecx,DWORD PTR [ecx]
  409cd4:	jo     0x409cc9
  409cd6:	clc    
  409cd7:	sub    al,al
  409cd9:	call   0x94b3362b
  409cde:	jb     0x409c9e
  409ce0:	repz int3 
  409ce2:	loopne 0x409cca
  409ce4:	cmp    cl,dh
  409ce6:	jecxz  0x409d30
  409ce8:	sub    al,al
  409cea:	jmp    0x43bf0785
  409cef:	or     cl,BYTE PTR [edi-0x11]
  409cf2:	cld    
  409cf3:	test   DWORD PTR [edi+0x7010e98e],ecx
  409cf9:	cwde   
  409cfa:	jo     0x409c9c
  409cfc:	inc    edx
  409cfd:	mov    ebp,0x4f772e52
  409d02:	mov    bh,0x2c
  409d04:	xchg   ebp,eax
  409d05:	stos   BYTE PTR es:[edi],al
  409d06:	js     0x409d2b
  409d08:	or     bl,BYTE PTR [ecx]
  409d0a:	sub    esi,edi
  409d0c:	mov    ss,ebx
  409d0e:	into   
  409d0f:	stc    
  409d10:	jb     0x409d81
  409d12:	loopne 0x409d76
  409d14:	fwait
  409d15:	cmp    ah,al
  409d17:	push   ebx
  409d18:	icebp  
  409d19:	scas   al,BYTE PTR es:[edi]
  409d1a:	loop   0x409d89
  409d1c:	pusha  
  409d1d:	js     0x409cee
  409d1f:	dec    esp
  409d20:	leave  
  409d21:	mov    ds:0x2825f755,eax
  409d26:	adc    eax,0xcf5ac57f
  409d2b:	mov    BYTE PTR [ecx-0x46],0x5a
  409d2f:	gs mov ebx,0x8ecc7bdc
  409d35:	adc    dh,BYTE PTR [ebx]
  409d37:	push   0x5f
  409d39:	and    al,0xef
  409d3b:	or     BYTE PTR [eax],ch
  409d3d:	jne    0x409d2a
  409d3f:	mov    ds:0x5e71c2bd,al
  409d44:	inc    esi
  409d45:	sti    
  409d46:	inc    ebx
  409d47:	pop    edi
  409d48:	sub    bl,al
  409d4a:	jb     0x409d64
  409d4c:	cmp    al,0x63
  409d4e:	mov    esp,0xa4900b10
  409d53:	pop    edi
  409d54:	mov    eax,0x1ccd9796
  409d59:	or     BYTE PTR [edi],bl
  409d5b:	es push esp
  409d5d:	sub    dh,bl
  409d5f:	inc    ebp
  409d60:	mov    bh,0x2f
  409d62:	ins    BYTE PTR es:[edi],dx
  409d63:	ja     0x409dc1
  409d65:	int3   
  409d66:	pop    edi
  409d67:	fdivr  QWORD PTR [eax+0x4493a5d6]
  409d6d:	pushf  
  409d6e:	push   edx
  409d6f:	dec    eax
  409d70:	pop    eax
  409d71:	push   edx
  409d72:	cli    
  409d73:	mov    al,ds:0x70e510cb
  409d78:	pusha  
  409d79:	dec    esp
  409d7a:	repnz cmp eax,0xf0d0a1f3
  409d80:	dec    edi
  409d81:	lds    eax,FWORD PTR [ebx+0x485f2a08]
  409d87:	stos   DWORD PTR es:[edi],eax
  409d88:	loope  0x409d87
  409d8a:	imul   ecx,DWORD PTR [edi-0x1d28a394],0x5acea139
  409d94:	and    ebp,edx
  409d96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d97:	sbb    eax,DWORD PTR [ebp+0x10]
  409d9a:	mov    ch,bl
  409d9c:	xchg   esi,eax
  409d9d:	cs push ecx
  409d9f:	cs aam 0xc7
  409da2:	xor    eax,ebp
  409da4:	jmp    0x409deb
  409da6:	push   DWORD PTR [esi+esi*1]
  409da9:	cmp    al,0xb
  409dab:	ss daa 
  409dad:	xor    BYTE PTR [edi-0x5e82bfa5],ch
  409db3:	add    DWORD PTR [eax+0x44],ebp
  409db6:	push   cs
  409db7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409db8:	push   es
  409db9:	mov    cl,0xa8
  409dbb:	pop    ebp
  409dbc:	stos   DWORD PTR es:[edi],eax
  409dbd:	clc    
  409dbe:	pusha  
  409dbf:	icebp  
  409dc0:	jge    0x409da2
  409dc2:	mov    ch,dh
  409dc4:	mov    DWORD PTR [esi-0xe],edi
  409dc7:	cmp    edi,edi
  409dc9:	ret    0x3e13
  409dcc:	adc    eax,0xcfba865e
  409dd1:	fisttp DWORD PTR [eax+0x4]
  409dd4:	inc    ebp
  409dd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409dd6:	sbb    cl,al
  409dd8:	stc    
  409dd9:	cwde   
  409dda:	adc    eax,0x6f14f1bf
  409ddf:	dec    edx
  409de0:	(bad)  
  409de1:	repz jl 0x409dae
  409de4:	cwde   
  409de5:	pushf  
  409de6:	ret    
  409de7:	imul   edx,edi,0x71558e7c
  409ded:	ins    BYTE PTR es:[edi],dx
  409dee:	sub    al,0xe9
  409df0:	pop    es
  409df1:	rol    BYTE PTR [edi-0xb],0xdf
  409df5:	jae    0x409e29
  409df7:	push   ecx
  409df8:	dec    ebp
  409df9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dfa:	imul   eax,DWORD PTR [edx],0x28
  409dfd:	outs   dx,DWORD PTR ds:[esi]
  409dfe:	jno    0x409d93
  409e00:	hlt    
  409e01:	lods   eax,DWORD PTR ds:[esi]
  409e02:	(bad)  
  409e03:	push   0x89c97832
  409e08:	jno    0x409d8d
  409e0a:	sub    al,0xb1
  409e0c:	mov    edi,0x9d1ed453
  409e11:	xlat   BYTE PTR ds:[ebx]
  409e12:	ret    0x5c46
  409e15:	ss repz rcr edi,cl
  409e19:	jmp    0x409e81
  409e1b:	push   edx
  409e1c:	(bad)  
  409e1d:	add    eax,0x37623128
  409e22:	aad    0x4f
  409e24:	mov    esp,0xf119664d
  409e29:	call   0x8beb:0xc164fdcb
  409e30:	inc    esi
  409e31:	cmp    dh,0x74
  409e34:	sub    DWORD PTR [edi+0x764902a0],esp
  409e3a:	pusha  
  409e3b:	pop    ecx
  409e3c:	xchg   ebp,eax
  409e3d:	arpl   bx,dx
  409e3f:	addr16 daa 
  409e41:	mov    bl,0xef
  409e43:	push   ebp
  409e44:	addr16 into 
  409e46:	xor    al,BYTE PTR [esi]
  409e48:	xchg   edx,eax
  409e49:	adc    BYTE PTR [edx-0x14],cl
  409e4c:	push   edx
  409e4d:	imul   esp,DWORD PTR [eax-0x4e],0x2c28228f
  409e54:	andps  xmm4,XMMWORD PTR [edi-0x57]
  409e58:	mov    ds:0x78a99840,eax
  409e5d:	jmp    0x89b8a4d0
  409e62:	pop    eax
  409e63:	pop    ebp
  409e64:	dec    ebp
  409e65:	stc    
  409e66:	stc    
  409e67:	mov    ecx,0x5654f1e6
  409e6c:	retf   
  409e6d:	retf   
  409e6e:	and    dl,bh
  409e70:	jp     0x409e27
  409e72:	add    eax,0x5f15e766
  409e77:	and    DWORD PTR [ebp+0x30],ebx
  409e7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e7b:	lods   al,BYTE PTR ds:[esi]
  409e7c:	(bad)  
  409e7d:	retf   
  409e7e:	add    edi,DWORD PTR [edx+ebx*8-0xf]
  409e82:	xchg   edx,eax
  409e83:	test   DWORD PTR [eax-0x3e],esp
  409e86:	retf   
  409e87:	out    dx,al
  409e88:	jbe    0x409e15
  409e8a:	dec    ebx
  409e8b:	enter  0x5c40,0x84
  409e8f:	in     eax,0xff
  409e91:	mov    dl,0x91
  409e93:	jecxz  0x409e62
  409e95:	cmp    DWORD PTR [ebp-0x6],edi
  409e98:	aas    
  409e99:	sbb    DWORD PTR [ecx+0x64],0x4c230bea
  409ea0:	and    edx,esi
  409ea2:	mov    ecx,0xa76aa4d2
  409ea7:	inc    edi
  409ea8:	sar    eax,cl
  409eaa:	fist   DWORD PTR [esi]
  409eac:	xchg   edx,eax
  409ead:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409eae:	je     0x409eb8
  409eb0:	hlt    
  409eb1:	xor    DWORD PTR [esi-0x2b352c96],edi
  409eb7:	leave  
  409eb8:	mov    cl,0xf9
  409eba:	rcr    BYTE PTR [ebx],cl
  409ebc:	fwait
  409ebd:	aaa    
  409ebe:	cmp    edx,DWORD PTR [esi+0x6b]
  409ec1:	xchg   esi,eax
  409ec2:	inc    ecx
  409ec3:	xor    bh,bh
  409ec5:	dec    edi
  409ec6:	mov    ds:0xd4d1aac1,eax
  409ecb:	pop    ecx
  409ecc:	pusha  
  409ecd:	dec    dl
  409ecf:	mov    ebx,ecx
  409ed1:	cld    
  409ed2:	(bad)  
  409ed4:	lds    eax,FWORD PTR ss:[ebx+ecx*1-0x73d78d00]
  409edc:	xchg   ebp,eax
  409edd:	adc    DWORD PTR [eax-0x24],edi
  409ee0:	jno    0x409f4f
  409ee2:	cs push ebp
  409ee4:	aas    
  409ee5:	cmp    al,0x6b
  409ee7:	int    0xd1
  409ee9:	jg     0x409eaa
  409eeb:	popa   
  409eec:	hlt    
  409eed:	fsubr  QWORD PTR gs:[ecx]
  409ef0:	es mov esi,edx
  409ef3:	hlt    
  409ef4:	fwait
  409ef5:	pop    ds
  409ef6:	fcom   DWORD PTR [edi-0x57]
  409ef9:	jbe    0x409f63
  409efb:	inc    ebx
  409efc:	arpl   WORD PTR [ebx-0x410d2254],sp
  409f02:	inc    ecx
  409f03:	loopne 0x409ec8
  409f05:	fstp   QWORD PTR [esi+0x60]
  409f08:	xchg   esi,eax
  409f09:	or     al,0x46
  409f0b:	xor    eax,0xf09d470b
  409f10:	jns    0x409f02
  409f12:	or     esp,DWORD PTR [edx]
  409f14:	dec    ebx
  409f15:	dec    edx
  409f16:	sbb    BYTE PTR [eax],0x9
  409f19:	push   ss
  409f1a:	or     esp,DWORD PTR [ebx]
  409f1c:	je     0x409f5b
  409f1e:	mov    al,ds:0x61ae3a37
  409f23:	jge    0x409f5d
  409f25:	test   DWORD PTR [edi-0x5763a8a],eax
  409f2b:	sub    eax,DWORD PTR [ebx-0x35]
  409f2e:	icebp  
  409f2f:	fsubr  DWORD PTR [eax-0x185cfb4f]
  409f35:	xchg   ebp,eax
  409f36:	dec    ecx
  409f37:	mov    edx,DWORD PTR [edx-0x15]
  409f3a:	mov    eax,cs
  409f3c:	adc    al,0x65
  409f3e:	in     al,0xd1
  409f40:	and    BYTE PTR [edi+0x1f49e461],dl
  409f46:	dec    ecx
  409f47:	ja     0x409f0a
  409f49:	(bad)  
  409f4a:	fcomp  DWORD PTR [ebx+0x219bfd3b]
  409f50:	jle    0x409fbb
  409f52:	in     eax,dx
  409f53:	xchg   BYTE PTR [edi],al
  409f55:	xchg   esp,eax
  409f56:	add    DWORD PTR [ebx-0x48],ebx
  409f59:	pushf  
  409f5a:	lahf   
  409f5b:	mov    fs,WORD PTR [eax]
  409f5d:	jge    0x409f8b
  409f5f:	dec    edi
  409f60:	lahf   
  409f61:	ja     0x409fb4
  409f63:	add    ecx,DWORD PTR [esi]
  409f65:	sub    al,0x3f
  409f67:	(bad)  
  409f68:	sbb    esp,edi
  409f6a:	mov    WORD PTR [esi-0x5a4850c],ss
  409f70:	and    BYTE PTR [edx+0xe],0xe2
  409f74:	jns    0x409f7b
  409f76:	and    esi,DWORD PTR [ebx]
  409f78:	cmp    BYTE PTR [edx+0x9f5f96b],dl
  409f7e:	cmp    eax,0x8b3809ef
  409f83:	test   al,0x3e
  409f85:	cmp    BYTE PTR [eax+edi*2],dl
  409f88:	mov    ebx,ss
  409f8a:	aam    0x3f
  409f8c:	sti    
  409f8d:	into   
  409f8e:	xor    ebx,ebx
  409f90:	aaa    
  409f91:	aam    0x88
  409f93:	xor    BYTE PTR [eax-0x67],cl
  409f96:	leave  
  409f97:	sbb    DWORD PTR [ebx-0x2b12f606],esp
  409f9d:	cwde   
  409f9e:	mov    esp,0x974cf438
  409fa3:	aas    
  409fa4:	fistp  WORD PTR [esi]
  409fa6:	(bad)  
  409fa7:	data16 (bad) 
  409faa:	test   eax,0xc4de3f6
  409faf:	out    dx,al
  409fb0:	fcom   QWORD PTR ds:0x17400106
  409fb6:	aaa    
  409fb7:	or     eax,0x54a7ddf8
  409fbc:	xchg   edx,eax
  409fbd:	and    eax,0x17d3715
  409fc2:	cmp    eax,0x6318d15
  409fc7:	push   cs
  409fc8:	mov    ds:0x2d55aeb3,al
  409fcd:	and    al,0x11
  409fcf:	jbe    0x409fd9
  409fd1:	idiv   BYTE PTR [esi-0x6dac98d3]
  409fd7:	add    BYTE PTR [esi-0x70dcaf0f],0xf1
  409fde:	in     eax,0xd1
  409fe0:	retf   0xd694
  409fe3:	jmp    0xd34:0x82bfdf68
  409fea:	cmp    dl,0xe9
  409fed:	pop    esp
  409fee:	cmp    eax,0xc7105625
  409ff3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ff4:	aas    
  409ff5:	cmp    eax,0xf736ac90
  409ffa:	cwde   
  409ffb:	dec    esp
  409ffc:	mov    ah,0x2b
  409ffe:	sub    BYTE PTR [edx],bl
  40a000:	mov    bl,0x1b
  40a002:	push   eax
  40a003:	jns    0x409fcd
  40a005:	or     al,0xc9
  40a007:	adc    bl,BYTE PTR [edx-0x1514fc8e]
  40a00d:	mov    al,ds:0x976b2a34
  40a012:	push   ss
  40a013:	sbb    cl,BYTE PTR [esp+ebx*4+0x6a]
  40a017:	(bad)  
  40a018:	imul   esp,DWORD PTR [ecx-0x1e],0xffffffc3
  40a01c:	push   0x3c
  40a01e:	leave  
  40a01f:	ror    DWORD PTR [edx],1
  40a021:	sub    eax,0xf0622a78
  40a026:	in     eax,dx
  40a027:	xor    al,0xd
  40a029:	test   al,0x5d
  40a02b:	sub    al,0xaa
  40a02d:	xchg   DWORD PTR [edi-0x25],ebp
  40a030:	je     0x40a099
  40a032:	mov    ecx,DWORD PTR [edx]
  40a034:	shl    al,cl
  40a036:	ds mov DWORD PTR ss:[eax],0x89463c53
  40a03e:	popf   
  40a03f:	les    edx,FWORD PTR [ebx+0x1f7eb386]
  40a045:	js     0x40a06e
  40a047:	push   eax
  40a048:	xor    BYTE PTR [edx],ch
  40a04a:	or     ecx,DWORD PTR [eax-0x2c1738c0]
  40a050:	icebp  
  40a051:	retf   
  40a052:	xchg   BYTE PTR [ecx-0x4a2c20c],bl
  40a058:	loope  0x40a007
  40a05a:	push   0xffffffc4
  40a05c:	adc    BYTE PTR [ebx+0x79],ch
  40a05f:	dec    ecx
  40a060:	es fwait
  40a062:	sub    ebx,DWORD PTR [esi+0x585b1487]
  40a068:	stc    
  40a069:	and    ebx,edx
  40a06b:	retf   
  40a06c:	cmp    al,0x5e
  40a06e:	xor    al,0xec
  40a070:	aad    0xae
  40a072:	lods   eax,DWORD PTR ds:[esi]
  40a073:	cdq    
  40a074:	fninit 
  40a076:	mov    DWORD PTR [ebx],eax
  40a078:	xchg   cl,bh
  40a07a:	enter  0x5430,0x9
  40a07e:	js     0x40a0a6
  40a080:	std    
  40a081:	dec    edi
  40a082:	inc    esi
  40a083:	sub    ah,dl
  40a085:	inc    ebp
  40a086:	mov    DWORD PTR [edx+0x5be0abd1],esi
  40a08c:	icebp  
  40a08d:	xchg   ebx,eax
  40a08e:	and    eax,0x39bc5096
  40a093:	out    0x78,eax
  40a095:	or     cl,BYTE PTR ss:[edx]
  40a098:	xchg   edx,eax
  40a099:	into   
  40a09a:	inc    ebx
  40a09b:	std    
  40a09c:	or     BYTE PTR fs:[ebp-0x1c],bh
  40a0a0:	inc    ebx
  40a0a1:	sbb    ch,0x4d
  40a0a4:	push   ebp
  40a0a5:	sub    ebp,eax
  40a0a7:	cdq    
  40a0a8:	pop    es
  40a0a9:	sub    esp,DWORD PTR [ebx-0x7f]
  40a0ac:	call   0x59eddc22
  40a0b1:	jnp    0x40a03a
  40a0b3:	and    DWORD PTR [ecx+0x3d],esp
  40a0b6:	dec    esi
  40a0b7:	mov    ah,0xea
  40a0b9:	push   esp
  40a0ba:	lods   eax,DWORD PTR ds:[esi]
  40a0bb:	mov    esi,0xd1dde274
  40a0c0:	(bad)  [eax-0x45]
  40a0c3:	pop    edi
  40a0c4:	or     al,0x50
  40a0c6:	add    eax,0x74707e2b
  40a0cb:	xor    DWORD PTR [ebx+esi*8+0x6d4b4bd7],ecx
  40a0d2:	fwait
  40a0d3:	push   edx
  40a0d4:	adc    eax,0x9bbf3d70
  40a0d9:	pop    ebp
  40a0da:	retf   
  40a0db:	mov    ebx,DWORD PTR [edi+0x7432b9ee]
  40a0e1:	icebp  
  40a0e2:	mov    BYTE PTR [ecx+0x5a3e327a],dh
  40a0e8:	icebp  
  40a0e9:	jp     0x40a13d
  40a0eb:	push   ds
  40a0ec:	pop    edi
  40a0ed:	mov    ecx,0x7f108f16
  40a0f2:	(bad)  
  40a0f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0f4:	add    al,0x84
  40a0f6:	out    dx,eax
  40a0f7:	arpl   di,di
  40a0f9:	int3   
  40a0fa:	aaa    
  40a0fb:	push   ss
  40a0fc:	in     al,dx
  40a0fd:	(bad)  
  40a0ff:	repz es cwde 
  40a102:	dec    esp
  40a103:	es out 0x5f,eax
  40a106:	les    edx,FWORD PTR [ecx+ebp*4-0x3d503430]
  40a10d:	aas    
  40a10e:	or     dh,ah
  40a110:	iret   
  40a111:	das    
  40a112:	imul   ecx,DWORD PTR [ebp+0x2d382811],0x13314798
  40a11c:	cwde   
  40a11d:	push   ebx
  40a11e:	ror    BYTE PTR [edx-0x50],cl
  40a121:	push   ds
  40a122:	dec    ebx
  40a123:	mov    edi,0xf17dd23a
  40a128:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a129:	adc    DWORD PTR [ebx+0x16e5c800],0xaed0ab90
  40a133:	out    dx,al
  40a134:	fdivr  st,st(0)
  40a136:	jmp    0xc58fac88
  40a13b:	cli    
  40a13c:	les    ebp,FWORD PTR [edx-0x413f946f]
  40a142:	in     eax,0x56
  40a144:	jl     0x40a143
  40a146:	xchg   edi,eax
  40a147:	and    ebx,eax
  40a149:	retf   
  40a14a:	bound  edi,QWORD PTR [ecx-0x50eb423b]
  40a150:	xchg   esi,eax
  40a151:	ss out dx,al
  40a153:	cwde   
  40a154:	sbb    esi,DWORD PTR [esi]
  40a156:	ud1    ecx,DWORD PTR [edi]
  40a159:	push   eax
  40a15a:	and    ecx,0xffffffac
  40a15d:	scas   ax,WORD PTR es:[edi]
  40a15f:	mov    ecx,0xbba28ef7
  40a164:	ret    
  40a165:	fnstenv [edx+0x22cff641]
  40a16b:	mov    ch,0xfd
  40a16d:	pop    ss
  40a16e:	sbb    bl,BYTE PTR [edx-0x383f3298]
  40a174:	add    al,0x3d
  40a176:	add    al,0xc8
  40a178:	add    BYTE PTR [edx],al
  40a17a:	das    
  40a17b:	retf   0xb0e8
  40a17e:	dec    edi
  40a17f:	and    ebx,edi
  40a181:	bound  eax,QWORD PTR [ebx+eax*1+0x3a2a8342]
  40a188:	fwait
  40a189:	cmp    ch,bh
  40a18b:	mov    ds:0xcaf91a96,al
  40a190:	xor    al,0xd2
  40a192:	aas    
  40a193:	add    al,0x85
  40a195:	xor    al,0x32
  40a197:	lods   eax,DWORD PTR ds:[esi]
  40a198:	and    DWORD PTR [ebx+0x4164d70a],edi
  40a19e:	repnz popa 
  40a1a0:	adc    al,0x3b
  40a1a2:	adc    ah,BYTE PTR [ecx-0x3c]
  40a1a5:	popf   
  40a1a6:	cwde   
  40a1a7:	sar    DWORD PTR [eax],0x70
  40a1aa:	call   0x8c01:0x651c3e16
  40a1b1:	add    eax,0xfebb054e
  40a1b6:	pushf  
  40a1b7:	mov    bl,BYTE PTR [ebp+0x22fc8c14]
  40a1bd:	sub    dh,BYTE PTR [esi]
  40a1bf:	cs sub bl,dh
  40a1c2:	jno    0x40a16c
  40a1c4:	jnp    0x40a1b8
  40a1c6:	fnstenv [eax+ecx*1+0x67]
  40a1ca:	loope  0x40a20c
  40a1cc:	pop    edx
  40a1cd:	or     edi,DWORD PTR [eax+0xa]
  40a1d0:	xchg   esp,eax
  40a1d1:	jns    0x40a179
  40a1d3:	ins    DWORD PTR es:[edi],dx
  40a1d4:	repz dec ecx
  40a1d6:	mov    ebp,0xf17fe0c
  40a1db:	daa    
  40a1dc:	mov    dh,0xc4
  40a1de:	(bad)  
  40a1e0:	sub    bh,BYTE PTR [eax]
  40a1e2:	fidivr DWORD PTR [esi+0x7f0459d4]
  40a1e8:	sbb    eax,0xce83957c
  40a1ed:	inc    DWORD PTR [ebx+0x1f74c0cc]
  40a1f3:	cli    
  40a1f4:	cmp    BYTE PTR [eax-0x67],0x66
  40a1f8:	outs   dx,BYTE PTR ds:[esi]
  40a1f9:	outs   dx,DWORD PTR ds:[esi]
  40a1fa:	nop
  40a1fb:	fstp   TBYTE PTR [esi+0x3446e128]
  40a201:	ins    BYTE PTR es:[edi],dx
  40a202:	inc    eax
  40a203:	cmp    eax,0x54907e58
  40a208:	cmp    DWORD PTR [ebx-0x405ca7a5],ebx
  40a20e:	repz inc edi
  40a210:	xor    BYTE PTR [esi-0x575b629a],al
  40a216:	add    eax,0xc063760c
  40a21b:	int    0xbb
  40a21d:	lock jns 0x40a1f7
  40a220:	sti    
  40a221:	clc    
  40a222:	pop    DWORD PTR [ebx+0x8]
  40a225:	pop    es
  40a226:	fistp  QWORD PTR [ecx-0x4b]
  40a229:	aam    0xb9
  40a22b:	cmp    al,0xed
  40a22d:	sbb    DWORD PTR [esi+edi*2+0x5cbf2c72],edx
  40a234:	cmp    BYTE PTR [esi-0x36fbe092],ch
  40a23a:	inc    ecx
  40a23b:	jbe    0x40a1bf
  40a23d:	mov    al,0x2
  40a23f:	and    esp,DWORD PTR [eax+0x5fe72604]
  40a245:	ja     0x40a2a7
  40a247:	jmp    0x5d195b2a
  40a24c:	cmc    
  40a24d:	lahf   
  40a24e:	mov    ecx,0xf55d6823
  40a253:	mov    edi,0x9166f263
  40a258:	push   ecx
  40a259:	aaa    
  40a25a:	call   0x3f102b36
  40a25f:	pushf  
  40a260:	xchg   BYTE PTR [esi-0x569477da],ch
  40a266:	mov    al,ds:0xbb73788c
  40a26b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a26c:	or     BYTE PTR [ebp+0x65c70bf7],0xba
  40a273:	mov    bh,0x29
  40a275:	dec    ecx
  40a276:	iret   
  40a277:	pushf  
  40a278:	add    DWORD PTR [esi-0x4d],esp
  40a27b:	mov    edi,0x7071732a
  40a280:	out    0x70,eax
  40a282:	pop    esi
  40a283:	fwait
  40a284:	repnz add DWORD PTR [ecx+edx*1+0x56],0x60
  40a28a:	imul   edx,DWORD PTR [ebx+0x39],0x2767242c
  40a291:	ins    DWORD PTR es:[edi],dx
  40a292:	jge    0x40a2ea
  40a294:	sahf   
  40a295:	pop    eax
  40a296:	daa    
  40a297:	xchg   BYTE PTR [eax],dh
  40a299:	sbb    al,0x72
  40a29b:	sar    al,0xa7
  40a29e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a29f:	shl    DWORD PTR [ecx+0x3c],1
  40a2a2:	mov    dh,ch
  40a2a4:	in     eax,dx
  40a2a5:	cwde   
  40a2a6:	sub    eax,0xd33df6d2
  40a2ab:	in     al,dx
  40a2ac:	mov    ebx,0xe87761e0
  40a2b1:	fmul   QWORD PTR [ebp-0x4a]
  40a2b4:	enter  0xdbe,0x21
  40a2b8:	cld    
  40a2b9:	xor    al,dl
  40a2bb:	xor    DWORD PTR [esi+0x6dc6238d],ebp
  40a2c1:	pop    es
  40a2c2:	out    dx,eax
  40a2c3:	out    0xd5,al
  40a2c5:	inc    ebx
  40a2c6:	scas   al,BYTE PTR es:[edi]
  40a2c7:	sub    eax,0xd2fb062b
  40a2cc:	into   
  40a2cd:	pop    eax
  40a2ce:	imul   ebx,DWORD PTR [edi+ecx*1-0x233f162a],0x6844e4f1
  40a2d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2da:	mov    bh,0xd9
  40a2dc:	sbb    dh,BYTE PTR [edx]
  40a2de:	pop    edi
  40a2df:	cmc    
  40a2e0:	ficomp WORD PTR [ebp-0x660fefdc]
  40a2e6:	mov    edx,0xf72b83d1
  40a2eb:	pop    ebp
  40a2ec:	sbb    ecx,0x2d
  40a2ef:	add    esp,DWORD PTR [esi-0x1c16ee6f]
  40a2f5:	out    dx,eax
  40a2f6:	(bad)  
  40a2f7:	jne    0x40a32d
  40a2f9:	inc    ecx
  40a2fa:	test   BYTE PTR [edx],ah
  40a2fc:	cdq    
  40a2fd:	cmp    DWORD PTR [edx],ebp
  40a2ff:	fistp  DWORD PTR [esi+ebp*4-0x46]
  40a303:	int3   
  40a304:	nop
  40a305:	and    ah,BYTE PTR [edx+0x6a382075]
  40a30b:	and    DWORD PTR [ebx+0x1d],edx
  40a30e:	(bad)  
  40a30f:	cdq    
  40a310:	pop    eax
  40a311:	add    ah,BYTE PTR [edi]
  40a313:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a314:	xlat   BYTE PTR ds:[ebx]
  40a315:	xor    al,0x58
  40a317:	pop    ebx
  40a318:	mov    ah,0xa2
  40a31a:	pop    eax
  40a31b:	cmp    edi,eax
  40a31d:	call   0x37e6987e
  40a322:	cs (bad) 
  40a324:	cmp    esp,DWORD PTR [ebp+edx*2-0x5c]
  40a328:	int    0xe5
  40a32a:	mov    ecx,0x418b20e3
  40a32f:	inc    esi
  40a330:	or     esp,ecx
  40a332:	jb     0x40a335
  40a334:	mov    al,ds:0x91c22a46
  40a339:	pop    ebx
  40a33a:	pop    edi
  40a33b:	sub    ah,cl
  40a33d:	sar    BYTE PTR [edx*4-0x10f18032],0x8e
  40a345:	xor    al,0xb4
  40a347:	xchg   edx,eax
  40a348:	test   al,0xbd
  40a34a:	xchg   esp,eax
  40a34b:	adc    DWORD PTR ss:0x54dd4a45,esi
  40a352:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a353:	fsubr  st,st(0)
  40a355:	xor    eax,ebp
  40a357:	test   al,0x48
  40a359:	xlat   BYTE PTR ds:[ebx]
  40a35a:	pop    esi
  40a35b:	xchg   eax,edx
  40a35d:	sub    al,0x1
  40a35f:	iret   
  40a360:	aas    
  40a361:	sbb    eax,0x21211713
  40a366:	push   ebp
  40a367:	neg    DWORD PTR [esi+0x7ecde693]
  40a36d:	or     DWORD PTR [ecx-0x1e],eax
  40a370:	inc    esp
  40a371:	mov    BYTE PTR [ebp-0x60b16fdd],cl
  40a377:	xlat   BYTE PTR ds:[ebx]
  40a378:	and    cl,dl
  40a37a:	pop    esp
  40a37b:	das    
  40a37c:	mov    eax,ds:0x76ec6af3
  40a381:	stc    
  40a382:	aaa    
  40a383:	push   ds
  40a384:	jecxz  0x40a3a5
  40a386:	cmp    dl,BYTE PTR [eax]
  40a388:	xchg   edi,eax
  40a389:	xchg   DWORD PTR [ecx],ebp
  40a38b:	add    esp,DWORD PTR [eax+0x73]
  40a38e:	cmp    eax,DWORD PTR [ebp-0x5f]
  40a391:	inc    esi
  40a392:	enter  0x219e,0xce
  40a396:	cmc    
  40a397:	retf   0xa8f5
  40a39a:	lods   eax,DWORD PTR ds:[esi]
  40a39b:	dec    esi
  40a39c:	jns    0x40a3af
  40a39e:	je     0x40a3e4
  40a3a0:	or     al,0xbe
  40a3a2:	and    esp,0x5c095247
  40a3a8:	ret    
  40a3a9:	outs   dx,DWORD PTR ds:[esi]
  40a3aa:	pop    ebp
  40a3ab:	pushf  
  40a3ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3ad:	out    dx,eax
  40a3ae:	rcr    DWORD PTR [edi],cl
  40a3b0:	lahf   
  40a3b1:	and    al,0x19
  40a3b3:	ja     0x40a3e3
  40a3b5:	add    eax,0x26e67219
  40a3ba:	ror    DWORD PTR [ebx+edi*2-0x66],cl
  40a3be:	mov    dh,0x1e
  40a3c0:	adc    DWORD PTR [edi],ebx
  40a3c2:	jmp    0x40a388
  40a3c4:	call   0xdb7c273a
  40a3c9:	adc    DWORD PTR [edi],edi
  40a3cb:	sub    BYTE PTR [edx+0x3f81ef00],bl
  40a3d1:	in     al,0x1
  40a3d3:	addr16 mov cl,0x86
  40a3d6:	xchg   ebx,eax
  40a3d7:	in     al,0xb
  40a3d9:	cmp    BYTE PTR [esi-0x4f],al
  40a3dc:	jmp    0x40a378
  40a3de:	xchg   ebx,eax
  40a3df:	xchg   edi,eax
  40a3e0:	jbe    0x40a3ad
  40a3e2:	loop   0x40a3ab
  40a3e4:	xchg   ebp,eax
  40a3e5:	push   esp
  40a3e6:	adc    al,0x42
  40a3e8:	pop    esp
  40a3e9:	icebp  
  40a3ea:	sbb    al,0xb1
  40a3ec:	add    BYTE PTR [ecx],dl
  40a3ee:	imul   DWORD PTR [edx-0x42de9315]
  40a3f4:	push   0x79
  40a3f6:	jnp    0x40a42e
  40a3f8:	mov    DWORD PTR [ebp+0x65],ecx
  40a3fb:	push   0xffffffc7
  40a3fd:	cmp    esp,DWORD PTR [esi+0x75]
  40a400:	mov    DWORD PTR [esi+0x25ddeac1],ebp
  40a406:	dec    esp
  40a407:	(bad)  
  40a408:	and    cl,BYTE PTR [eax]
  40a40a:	sahf   
  40a40b:	and    bl,BYTE PTR [ebp+0xf]
  40a40e:	mov    dl,0x33
  40a410:	fs gs mov dl,0xcc
  40a414:	push   esp
  40a415:	repnz idiv DWORD PTR [esi-0x1cfb5805]
  40a41c:	jb     0x40a3a0
  40a41e:	fcomp  QWORD PTR [ebx]
  40a420:	xor    al,0x8e
  40a422:	dec    ecx
  40a423:	jmp    0xab30:0x6b959a08
  40a42a:	xchg   DWORD PTR [esi+eiz*8-0x6c],edi
  40a42e:	and    BYTE PTR [esi-0x5c03c6c0],bl
  40a434:	push   ss
  40a435:	inc    esi
  40a436:	and    eax,0x149f6a65
  40a43b:	ins    BYTE PTR es:[edi],dx
  40a43c:	inc    esi
  40a43d:	inc    ebp
  40a43e:	inc    edx
  40a43f:	dec    ebp
  40a440:	mov    dl,0x4d
  40a442:	push   ebp
  40a443:	or     DWORD PTR [eax+edi*1],ebp
  40a446:	mov    DWORD PTR [ecx],ebp
  40a448:	bound  ebx,QWORD PTR fs:[ebx+ebx*8+0x73]
  40a44d:	jle    0x40a4bf
  40a44f:	out    dx,al
  40a450:	xchg   esp,eax
  40a451:	add    ah,BYTE PTR [ebx]
  40a453:	in     al,dx
  40a454:	cdq    
  40a455:	daa    
  40a456:	push   ecx
  40a457:	loope  0x40a4c3
  40a459:	in     al,dx
  40a45a:	test   DWORD PTR [edi-0x22227835],ebx
  40a460:	pusha  
  40a461:	scas   eax,DWORD PTR es:[edi]
  40a462:	mov    WORD PTR [edx+0x714be845],gs
  40a468:	jnp    0x40a400
  40a46a:	and    edi,edi
  40a46c:	sub    ebp,DWORD PTR [ecx]
  40a46e:	add    eax,0x5930267
  40a473:	cmc    
  40a474:	mov    eax,ds:0xdba246cb
  40a479:	jb     0x40a46f
  40a47b:	or     eax,0x675df1e2
  40a480:	outs   dx,BYTE PTR ds:[esi]
  40a481:	loopne 0x40a481
  40a483:	push   ecx
  40a484:	dec    ebx
  40a485:	pusha  
  40a486:	shl    BYTE PTR [edi],0x60
  40a489:	and    DWORD PTR [esi+ebx*4],ebx
  40a48c:	in     eax,dx
  40a48d:	or     BYTE PTR [esi+0x53],ah
  40a490:	xlat   BYTE PTR ds:[ebx]
  40a491:	cdq    
  40a492:	push   esp
  40a493:	jo     0x40a491
  40a495:	cmc    
  40a496:	daa    
  40a497:	and    DWORD PTR [edx+esi*2],eax
  40a49a:	in     al,0xa8
  40a49c:	daa    
  40a49d:	scas   eax,DWORD PTR es:[edi]
  40a49e:	lahf   
  40a49f:	add    DWORD PTR [ebx-0x143c2684],edi
  40a4a5:	push   es
  40a4a6:	dec    edx
  40a4a7:	mov    cl,ah
  40a4a9:	mov    eax,0xa57a2cd
  40a4ae:	out    dx,al
  40a4af:	outs   dx,DWORD PTR ds:[esi]
  40a4b0:	punpckhdq mm6,mm6
  40a4b3:	inc    ebp
  40a4b4:	iret   
  40a4b5:	and    esi,DWORD PTR [ebp-0x30a62221]
  40a4bb:	xor    ebp,esi
  40a4bd:	xchg   edi,eax
  40a4be:	and    edx,edi
  40a4c0:	lds    edi,FWORD PTR ds:0x9170a023
  40a4c6:	dec    esp
  40a4c7:	aas    
  40a4c8:	aas    
  40a4c9:	sub    BYTE PTR ss:[ebx],cl
  40a4cc:	cwde   
  40a4cd:	(bad)  
  40a4ce:	dec    esp
  40a4cf:	and    BYTE PTR [ecx],al
  40a4d1:	pusha  
  40a4d2:	loop   0x40a4c2
  40a4d4:	and    BYTE PTR [ebx-0x6],al
  40a4d7:	das    
  40a4d8:	push   esi
  40a4d9:	and    al,0x70
  40a4db:	cld    
  40a4dc:	outs   dx,BYTE PTR ds:[esi]
  40a4dd:	jp     0x40a4e2
  40a4df:	fstp   DWORD PTR [eax+0x78]
  40a4e2:	pop    ebx
  40a4e3:	outs   dx,BYTE PTR ds:[esi]
  40a4e4:	or     bl,ah
  40a4e6:	rcr    al,cl
  40a4e8:	dec    edx
  40a4ea:	cld    
  40a4eb:	cmp    eax,DWORD PTR [ecx+0x2e9f433d]
  40a4f1:	or     DWORD PTR [edi-0x14],ebp
  40a4f4:	idiv   BYTE PTR [esi-0x683843dc]
  40a4fa:	mov    al,0x3d
  40a4fc:	pop    ds
  40a4fd:	fild   WORD PTR [edi]
  40a4ff:	adc    eax,0x53060300
  40a504:	ins    BYTE PTR es:[edi],dx
  40a505:	sbb    esi,DWORD PTR [esi+0x74]
  40a508:	stos   DWORD PTR es:[edi],eax
  40a509:	pop    edi
  40a50a:	gs mov al,0x5d
  40a50d:	pushf  
  40a50e:	cmp    esi,DWORD PTR [edi+0xe]
  40a511:	xchg   BYTE PTR [esi+0x3e663b14],al
  40a517:	das    
  40a518:	imul   ebp,DWORD PTR [edx+eiz*1+0x74],0x2a
  40a51d:	daa    
  40a51e:	fiadd  DWORD PTR ds:0x6bd7fa28
  40a524:	aas    
  40a525:	jmp    0x40a508
  40a527:	fcmovbe st,st(7)
  40a529:	cmp    al,0x64
  40a52b:	sbb    DWORD PTR ds:0xf8f177a9,edx
  40a531:	hlt    
  40a532:	dec    ebp
  40a533:	dec    edi
  40a534:	nop
  40a535:	push   ebx
  40a536:	repnz inc ebx
  40a538:	leave  
  40a539:	rsm    
  40a53b:	sub    DWORD PTR [ebx+0x13],ecx
  40a53e:	mov    edx,DWORD PTR [ebx+0x6b09bf97]
  40a544:	add    al,0x3d
  40a546:	sbb    BYTE PTR [edx+0x6928ef89],al
  40a54c:	loopne 0x40a4e9
  40a54e:	and    DWORD PTR [eax],ebp
  40a550:	call   0x385a:0x20aa42aa
  40a557:	mov    ds:0x36864e3,al
  40a55c:	fnstsw WORD PTR [ecx]
  40a55e:	inc    esp
  40a55f:	test   DWORD PTR ds:0x513b82e,ebp
  40a565:	add    ebx,eax
  40a567:	jo     0x40a541
  40a569:	jmp    0x1b26488b
  40a56e:	sub    BYTE PTR [ecx+ebp*1-0x8],bl
  40a572:	add    eax,0x40e029ab
  40a577:	lds    edi,FWORD PTR [edx]
  40a579:	pop    eax
  40a57a:	dec    ecx
  40a57b:	into   
  40a57c:	sub    ecx,DWORD PTR [ecx]
  40a57e:	les    ecx,FWORD PTR [ebp+edx*2+0x78]
  40a582:	loope  0x40a57c
  40a584:	add    al,0x36
  40a586:	push   ebx
  40a587:	scas   al,BYTE PTR es:[edi]
  40a588:	ja     0x40a5f7
  40a58a:	cmp    ch,bh
  40a58c:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40a58e:	jmp    0x173c:0x666345ad
  40a595:	dec    ebx
  40a596:	popa   
  40a597:	dec    eax
  40a598:	lock sbb DWORD PTR [edi],ecx
  40a59b:	mov    al,0xf6
  40a59d:	jnp    0x40a526
  40a59f:	xchg   edx,eax
  40a5a0:	bound  esp,QWORD PTR [ebx+esi*2+0x39650e12]
  40a5a7:	mov    ecx,DWORD PTR [eax]
  40a5a9:	xor    eax,0x48165d51
  40a5ae:	dec    edi
  40a5af:	cli    
  40a5b0:	ins    BYTE PTR es:[edi],dx
  40a5b1:	leave  
  40a5b2:	push   cs
  40a5b3:	out    0x21,eax
  40a5b5:	dec    edi
  40a5b6:	pop    ss
  40a5b7:	add    BYTE PTR [edx],bl
  40a5b9:	mov    esp,DWORD PTR [edx+0x71]
  40a5bc:	fbld   TBYTE PTR [edi]
  40a5be:	clc    
  40a5bf:	out    0xeb,al
  40a5c1:	jns    0x40a544
  40a5c3:	inc    eax
  40a5c4:	ins    BYTE PTR es:[edi],dx
  40a5c5:	(bad)
  40a5c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5ca:	sub    DWORD PTR [eax+ebp*1-0x47],eax
  40a5ce:	dec    BYTE PTR [ebp+0x0]
  40a5d1:	call   0x76df9097
  40a5d6:	ds ds repnz out 0x52,eax
  40a5db:	aaa    
  40a5dc:	repnz lea ecx,[ebp-0x11cd3e0e]
  40a5e3:	inc    edi
  40a5e4:	xchg   ebp,eax
  40a5e5:	sbb    DWORD PTR [ebx],ebp
  40a5e7:	test   BYTE PTR [ecx+edi*1+0x5b],dl
  40a5eb:	jle    0x40a5ac
  40a5ed:	ror    BYTE PTR [esi+ecx*1-0x80ad7c1],0x28
  40a5f5:	mov    ds:0x5b3ff7ee,al
  40a5fa:	call   0x6eb3d744
  40a5ff:	repnz cmp bl,BYTE PTR [edi-0x134be73d]
  40a606:	iret   
  40a607:	push   cs
  40a608:	jmp    0x774b6864
  40a60d:	inc    ecx
  40a60e:	push   es
  40a60f:	jmp    0x40a67f
  40a611:	dec    esp
  40a612:	lds    edi,FWORD PTR [ecx+0x30ad8de0]
  40a618:	or     edi,esp
  40a61a:	cmp    BYTE PTR [edi],dh
  40a61c:	aad    0xcc
  40a61e:	(bad)  
  40a61f:	iretw  
  40a621:	push   ds
  40a622:	fcom   QWORD PTR [ebp+eiz*2-0x14]
  40a626:	xor    al,0xb8
  40a628:	add    ah,ah
  40a62a:	lock sbb ebp,DWORD PTR [edx-0x6f]
  40a62e:	dec    edi
  40a62f:	pop    esp
  40a630:	outs   dx,DWORD PTR ds:[esi]
  40a631:	out    0xe,eax
  40a633:	mov    ah,0xb8
  40a635:	mov    ecx,0x67c2e9df
  40a63a:	test   DWORD PTR [eax-0x6e],ebp
  40a63d:	(bad)  
  40a63e:	push   edi
  40a63f:	outs   dx,DWORD PTR ds:[esi]
  40a640:	mov    bl,0xc5
  40a642:	xchg   ecx,eax
  40a643:	pop    edi
  40a644:	fimul  WORD PTR [ebx+0x1e]
  40a647:	nop
  40a648:	add    BYTE PTR [edi+0x26],bh
  40a64b:	push   edx
  40a64c:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a64e:	repnz xchg ebx,eax
  40a650:	scas   eax,DWORD PTR es:[edi]
  40a651:	add    DWORD PTR [edi],0x4c
  40a654:	xchg   ebp,eax
  40a655:	(bad)  
  40a656:	lahf   
  40a657:	xor    dl,al
  40a659:	(bad)  
  40a65a:	xchg   ecx,eax
  40a65b:	sub    ah,bh
  40a65d:	fist   DWORD PTR [ecx+edi*2+0x50]
  40a661:	or     BYTE PTR [eax-0x30],bh
  40a664:	xor    eax,0x29ac934b
  40a669:	push   es
  40a66a:	arpl   sp,si
  40a66c:	mov    esp,0xecd524e3
  40a671:	das    
  40a672:	ficomp DWORD PTR ds:0x4a500fc9
  40a678:	lods   al,BYTE PTR ds:[esi]
  40a679:	in     al,dx
  40a67a:	mov    edi,0x45e455c6
  40a67f:	pop    ebx
  40a680:	fwait
  40a681:	outs   dx,BYTE PTR ds:[esi]
  40a682:	(bad)  
  40a683:	ins    BYTE PTR es:[edi],dx
  40a684:	pusha  
  40a685:	or     eax,0xf587d3f0
  40a68a:	inc    ecx
  40a68b:	push   eax
  40a68c:	inc    ecx
  40a68d:	push   esi
  40a68e:	add    ch,BYTE PTR [eax-0x41]
  40a691:	pop    ss
  40a692:	retf   0xb295
  40a695:	sbb    dl,al
  40a697:	imul   ebp,DWORD PTR ds:0x71021bd4,0xb7486f67
  40a6a1:	push   ds
  40a6a2:	inc    ecx
  40a6a3:	scas   al,BYTE PTR es:[edi]
  40a6a4:	mov    ds:0x9d3e49f6,eax
  40a6a9:	inc    esp
  40a6aa:	daa    
  40a6ab:	in     eax,0xa8
  40a6ad:	mov    ah,0x39
  40a6af:	sbb    eax,0xd157d8aa
  40a6b4:	aaa    
  40a6b5:	xor    ebx,DWORD PTR [edi-0x47ef4e33]
  40a6bb:	jmp    0x40a6b5
  40a6bd:	sbb    cl,BYTE PTR [edx+0x6fee8db7]
  40a6c3:	mov    bh,0x42
  40a6c5:	in     eax,dx
  40a6c6:	jecxz  0x40a6ac
  40a6c8:	dec    eax
  40a6c9:	outs   dx,DWORD PTR ds:[esi]
  40a6ca:	cmp    eax,0xe62752a8
  40a6cf:	lock rol DWORD PTR [ebp-0x1fb2311d],0x25
  40a6d7:	std    
  40a6d8:	cmp    eax,0x1ed71a3
  40a6dd:	fwait
  40a6de:	xchg   ebx,eax
  40a6df:	out    dx,eax
  40a6e0:	or     edx,ebx
  40a6e2:	push   esi
  40a6e3:	nop
  40a6e4:	cs ins BYTE PTR es:[edi],dx
  40a6e6:	cdq    
  40a6e7:	cmp    BYTE PTR [eax-0x297dd6de],ah
  40a6ed:	fimul  WORD PTR [edx]
  40a6ef:	test   BYTE PTR [ebp-0x77],cl
  40a6f2:	cmp    dl,dh
  40a6f4:	push   es
  40a6f5:	jno    0x40a729
  40a6f7:	mov    ecx,DWORD PTR [ebx+0x59]
  40a6fa:	loop   0x40a6ff
  40a6fc:	or     esp,ecx
  40a6fe:	and    al,0x8c
  40a700:	adc    BYTE PTR [ebx-0x46],bh
  40a703:	outs   dx,BYTE PTR ds:[esi]
  40a704:	pop    edx
  40a705:	push   esi
  40a706:	jnp    0x40a74b
  40a708:	push   esi
  40a709:	sub    dl,BYTE PTR [ecx+0x42]
  40a70c:	fstp   DWORD PTR [edi]
  40a70e:	cli    
  40a70f:	in     eax,0x7f
  40a711:	jecxz  0x40a759
  40a713:	push   esp
  40a714:	test   DWORD PTR [esi+0x29],ecx
  40a717:	xor    al,0x8e
  40a719:	mov    ch,0x97
  40a71b:	mov    ch,0x84
  40a71d:	add    eax,0x4811db73
  40a722:	out    dx,eax
  40a723:	xchg   DWORD PTR [edx+0x6b],ebx
  40a726:	jp     0x40a757
  40a728:	xchg   DWORD PTR [ecx],ebx
  40a72a:	pusha  
  40a72b:	stc    
  40a72c:	pop    ss
  40a72d:	jmp    0x40a742
  40a72f:	mov    ah,0x70
  40a731:	jg     0x40a6cc
  40a733:	dec    eax
  40a734:	jg     0x40a6f2
  40a736:	mov    BYTE PTR [edx+eiz*1+0x57f67679],cl
  40a73d:	fadd   QWORD PTR fs:[ebp+esi*1+0x26]
  40a742:	xor    DWORD PTR ds:0x743bb08b,esi
  40a748:	add    ah,BYTE PTR [edi+0x44]
  40a74b:	inc    esp
  40a74c:	mov    ch,0x12
  40a74e:	nop
  40a74f:	push   eax
  40a750:	leave  
  40a751:	xchg   ebx,eax
  40a752:	stc    
  40a753:	addr16 push ebp
  40a755:	cmp    eax,0xcdf4180
  40a75a:	fist   DWORD PTR [ebp-0x25]
  40a75d:	and    eax,0xb9f425fa
  40a762:	in     eax,dx
  40a763:	outs   dx,BYTE PTR ds:[esi]
  40a764:	dec    esi
  40a765:	mov    ah,0x9a
  40a767:	jae    0x40a6f4
  40a769:	fld    QWORD PTR [edi-0x3e]
  40a76c:	sbb    eax,0xf83754a0
  40a771:	int    0x42
  40a773:	retf   
  40a774:	and    BYTE PTR [eax+0x4f19e09e],ch
  40a77a:	stos   DWORD PTR es:[edi],eax
  40a77b:	push   edi
  40a77c:	out    dx,al
  40a77d:	cmp    eax,0x18270d38
  40a782:	push   edx
  40a783:	dec    esi
  40a784:	dec    ecx
  40a785:	mov    al,0x2f
  40a787:	out    0x2a,eax
  40a789:	pop    ecx
  40a78a:	popf   
  40a78b:	(bad)  
  40a78d:	sti    
  40a78e:	or     DWORD PTR [ebx*8-0x1d868ad4],ebp
  40a795:	xlat   BYTE PTR ds:[ebx]
  40a796:	xchg   DWORD PTR [eax],ecx
  40a798:	ja     0x40a7dd
  40a79a:	dec    DWORD PTR [eax+0x3a899d05]
  40a7a0:	jo     0x40a7b3
  40a7a2:	icebp  
  40a7a3:	and    BYTE PTR [esi-0x7b],bh
  40a7a6:	sbb    dh,BYTE PTR [ecx+0x8]
  40a7a9:	faddp  st(0),st
  40a7ab:	pop    edx
  40a7ac:	inc    ebx
  40a7ad:	adc    al,0x23
  40a7af:	dec    ecx
  40a7b0:	cld    
  40a7b1:	cmp    eax,0xcc594a3b
  40a7b6:	push   ss
  40a7b7:	mov    dl,BYTE PTR [ecx-0x4e38c422]
  40a7bd:	dec    eax
  40a7be:	inc    edx
  40a7bf:	mov    WORD PTR [eax-0x66],ds
  40a7c2:	ja     0x40a805
  40a7c4:	add    esp,DWORD PTR [eax]
  40a7c6:	pop    ecx
  40a7c7:	fwait
  40a7c8:	pop    es
  40a7c9:	pop    edi
  40a7ca:	jb     0x40a809
  40a7cc:	inc    esp
  40a7cd:	pop    edi
  40a7ce:	clc    
  40a7cf:	xor    DWORD PTR [edi+0x29],ecx
  40a7d2:	mov    bl,0x2b
  40a7d4:	jo     0x40a7e3
  40a7d6:	dec    ebp
  40a7d7:	push   eax
  40a7d8:	xor    edx,DWORD PTR [ebx]
  40a7da:	xor    BYTE PTR [edx*4+0x3bd7c274],ah
  40a7e1:	push   esp
  40a7e2:	push   edx
  40a7e3:	sub    dh,bh
  40a7e5:	sub    ebx,DWORD PTR [eax]
  40a7e7:	sbb    BYTE PTR [edx],ch
  40a7e9:	jmp    0xf9b4:0xa0f5a043
  40a7f0:	jo     0x40a785
  40a7f2:	sub    ebx,ebx
  40a7f4:	fs lahf 
  40a7f6:	and    eax,0xe31260d0
  40a7fb:	fstp   DWORD PTR [edi+ebx*8]
  40a7fe:	call   0xcc094aef
  40a803:	icebp  
  40a804:	jl     0x40a801
  40a806:	xor    BYTE PTR [ecx-0x4d327dd1],ch
  40a80c:	mov    al,ds:0xd8da55e0
  40a811:	sbb    eax,0x5a0ced80
  40a816:	aas    
  40a817:	cmp    BYTE PTR [ebx-0x5b],bh
  40a81a:	sbb    DWORD PTR [esi],edi
  40a81c:	fmul   DWORD PTR [ebx-0x5c]
  40a81f:	sub    cl,BYTE PTR [edi+0x3e]
  40a822:	push   0x54
  40a824:	loope  0x40a86b
  40a826:	xor    bh,BYTE PTR [edx+0x3]
  40a829:	fild   QWORD PTR [esi-0x2e]
  40a82c:	xchg   esp,eax
  40a82d:	jmp    0x8d6d:0x34352e46
  40a834:	sar    BYTE PTR ds:0x49198366,0x73
  40a83b:	or     esp,esp
  40a83d:	sbb    al,0x3
  40a83f:	fld    TBYTE PTR [eax]
  40a841:	dec    ebx
  40a842:	cmp    dl,0x53
  40a845:	pop    ebp
  40a846:	xlat   BYTE PTR ds:[ebx]
  40a847:	jl     0x40a876
  40a849:	int3   
  40a84a:	int    0x24
  40a84c:	sar    dh,cl
  40a84e:	stos   DWORD PTR es:[edi],eax
  40a84f:	jg     0x40a7d3
  40a851:	adc    DWORD PTR [edi-0x45a3a2d4],esi
  40a857:	out    dx,eax
  40a858:	retf   0x9aa7
  40a85b:	xchg   ecx,eax
  40a85c:	pop    edx
  40a85d:	xchg   edi,ebp
  40a85f:	add    dl,BYTE PTR [esi+0x1f]
  40a862:	and    eax,0x9c591aaf
  40a867:	std    
  40a868:	(bad)  
  40a86a:	cmp    BYTE PTR [edx],ch
  40a86c:	pop    esp
  40a86d:	outs   dx,DWORD PTR ds:[esi]
  40a86e:	sbb    BYTE PTR [ebp-0x23],cl
  40a871:	daa    
  40a872:	jecxz  0x40a8ad
  40a874:	mov    dl,0xd5
  40a876:	ret    0x5330
  40a879:	out    dx,al
  40a87a:	fmulp  st(7),st
  40a87c:	jnp    0x40a86f
  40a87e:	pushf  
  40a87f:	shl    BYTE PTR [eax+0x73],cl
  40a882:	push   ecx
  40a883:	fldln2 
  40a885:	loope  0x40a829
  40a887:	sti    
  40a888:	jne    0x40a8e5
  40a88a:	das    
  40a88b:	xchg   edx,eax
  40a88c:	lock and DWORD PTR [ecx+0x45663819],esp
  40a893:	scas   eax,DWORD PTR es:[edi]
  40a894:	xor    eax,0x8fe01c41
  40a899:	mov    ecx,0x7040625
  40a89e:	pop    ebp
  40a89f:	setb   BYTE PTR [eax+eax*8+0x2e952e60]
  40a8a7:	shr    ebp,cl
  40a8a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8aa:	mov    ecx,0x90786232
  40a8af:	jmp    0x4864:0x3bb7f245
  40a8b6:	pop    ebx
  40a8b7:	in     al,0x97
  40a8b9:	cmp    eax,0x77d2e62a
  40a8be:	arpl   sp,cx
  40a8c0:	inc    esi
  40a8c1:	aaa    
  40a8c2:	fild   WORD PTR [edx]
  40a8c4:	adc    al,0xea
  40a8c7:	das    
  40a8c8:	bswap  edx
  40a8ca:	loopne 0x40a916
  40a8cc:	xor    BYTE PTR [edx-0x74786480],bl
  40a8d2:	push   cs
  40a8d3:	add    DWORD PTR [edx+0x4d5b7618],ebp
  40a8d9:	push   ds
  40a8da:	xor    al,0x43
  40a8dc:	lahf   
  40a8dd:	xchg   ebp,eax
  40a8de:	cmp    esp,esi
  40a8e0:	sub    BYTE PTR [ebx-0x62],bl
  40a8e3:	add    eax,DWORD PTR [edi-0x5]
  40a8e6:	dec    ebp
  40a8e7:	mov    eax,0x9b41f15e
  40a8ec:	cmp    eax,DWORD PTR [ecx-0x4721ba15]
  40a8f2:	inc    ecx
  40a8f3:	pushf  
  40a8f4:	xchg   ebx,eax
  40a8f5:	dec    esp
  40a8f6:	in     eax,dx
  40a8f7:	scas   eax,DWORD PTR es:[edi]
  40a8f8:	jb     0x40a91b
  40a8fa:	in     eax,dx
  40a8fb:	call   0x650f:0x64ffd312
  40a902:	fs std 
  40a904:	fsubr  QWORD PTR ds:0x28f58c39
  40a90a:	mov    ecx,0x56ede0d
  40a90f:	mov    al,0xc2
  40a911:	cs mov esi,0xc5608a3d
  40a917:	cs mov ah,0x9d
  40a91a:	sbb    al,0x47
  40a91c:	out    dx,al
  40a91d:	and    ecx,DWORD PTR [edi-0x74]
  40a920:	jbe    0x40a995
  40a922:	out    0x2c,eax
  40a924:	retf   
  40a925:	int    0x68
  40a927:	fwait
  40a928:	mov    edx,0x2e1412a9
  40a92d:	xor    BYTE PTR [esi],0xe0
  40a930:	dec    esi
  40a931:	aad    0xd4
  40a933:	icebp  
  40a934:	sbb    al,0xaf
  40a936:	mov    esi,0xea51803c
  40a93b:	dec    eax
  40a93c:	xor    eax,0x44464eab
  40a941:	mov    bl,0x5d
  40a943:	int3   
  40a944:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a945:	imul   edi,DWORD PTR [ebx+0x50],0xfe33e6d9
  40a94c:	inc    eax
  40a94d:	test   al,0xf
  40a94f:	mov    bh,0x50
  40a951:	pop    edi
  40a952:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a954:	test   al,0xa3
  40a956:	cmp    BYTE PTR [edx+0x12aa88c5],bh
  40a95c:	mov    al,0x20
  40a95e:	(bad)  
  40a95f:	cld    
  40a960:	dec    ecx
  40a961:	fst    st(4)
  40a963:	cmp    cl,BYTE PTR [edx-0x3f984875]
  40a969:	push   0x9a5376f0
  40a96e:	ficomp DWORD PTR [edi-0x5e5f84dc]
  40a974:	adc    DWORD PTR [ebx-0x53],edi
  40a977:	test   BYTE PTR [edx+ecx*2],al
  40a97a:	mov    ebp,0x1a020391
  40a97f:	repnz mov ebx,0xf241994f
  40a985:	enter  0xdfb3,0xc3
  40a989:	jecxz  0x40a925
  40a98b:	nop
  40a98c:	hlt    
  40a98d:	repnz pop esi
  40a98f:	pop    edi
  40a990:	dec    DWORD PTR [edx-0x20]
  40a993:	inc    eax
  40a994:	cs stos DWORD PTR es:[edi],eax
  40a996:	(bad)  
  40a997:	xchg   ebp,eax
  40a998:	test   BYTE PTR [eax+0x5ca4627b],bh
  40a99e:	xor    ebx,DWORD PTR [edi+0x7204dc76]
  40a9a4:	fist   DWORD PTR [ebp+0x69d5c616]
  40a9aa:	jns    0x40a9b8
  40a9ac:	imul   edi,edx,0x58643473
  40a9b2:	jns    0x40aa27
  40a9b4:	out    dx,eax
  40a9b5:	or     eax,0xac6d6807
  40a9ba:	pop    ds
  40a9bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9bc:	jns    0x40aa23
  40a9be:	pop    ecx
  40a9bf:	dec    ebp
  40a9c0:	loopne 0x40a9ec
  40a9c2:	int3   
  40a9c3:	popf   
  40a9c4:	(bad)  
  40a9c6:	loope  0x40aa32
  40a9c8:	mov    ds:0x924da1e3,al
  40a9cd:	mov    ebp,0x6d63cc65
  40a9d2:	adc    al,0xf6
  40a9d4:	shl    bl,0xea
  40a9d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9d8:	adc    esp,DWORD PTR [esi]
  40a9da:	dec    ecx
  40a9db:	lods   eax,DWORD PTR ds:[esi]
  40a9dc:	push   0x67f8b7cb
  40a9e1:	xchg   ecx,eax
  40a9e2:	cmp    edx,DWORD PTR [edi+0x46e737f0]
  40a9e8:	repnz leave 
  40a9ea:	mov    al,ds:0xa06f11d3
  40a9ef:	sub    eax,ecx
  40a9f1:	cs jmp 0xb625357f
  40a9f7:	push   esp
  40a9f8:	pop    ss
  40a9f9:	xor    dh,BYTE PTR fs:[edx+0x7c955042]
  40aa00:	lahf   
  40aa01:	adc    eax,0x77dfd3b4
  40aa06:	sbb    ch,BYTE PTR ss:[edx-0x67d982e6]
  40aa0d:	add    dh,ah
  40aa0f:	add    eax,0x469d38ad
  40aa14:	mov    ?,WORD PTR [edi+0x64399e56]
  40aa1a:	inc    eax
  40aa1b:	pop    ebp
  40aa1c:	and    DWORD PTR [edi-0x15],esi
  40aa1f:	pop    ss
  40aa20:	pop    ds
  40aa21:	xchg   edx,eax
  40aa22:	les    ecx,FWORD PTR [esi+0x7fe783b]
  40aa28:	add    al,al
  40aa2a:	dec    ebp
  40aa2b:	mov    ch,0x96
  40aa2d:	in     eax,dx
  40aa2e:	inc    edi
  40aa2f:	fild   WORD PTR [ecx+0x6fa81640]
  40aa35:	sbb    eax,0x8aaadbe0
  40aa3a:	imul   eax,DWORD PTR [edi+0x9],0x1
  40aa3e:	add    DWORD PTR [esi-0x4a519f12],ecx
  40aa44:	fs dec edi
  40aa46:	jl     0x40aaad
  40aa48:	(bad)  
  40aa49:	push   edx
  40aa4a:	mov    WORD PTR [esp+esi*4-0x4a],gs
  40aa4e:	jle    0x40a9d7
  40aa50:	mov    bh,0xb9
  40aa52:	scas   al,BYTE PTR es:[edi]
  40aa53:	leave  
  40aa54:	mov    esi,0x5ef670f2
  40aa59:	lea    esi,[ecx+0x36]
  40aa5c:	dec    esi
  40aa5d:	push   ebp
  40aa5e:	xor    dl,dl
  40aa60:	add    eax,edi
  40aa62:	adc    esi,DWORD PTR [esi*2+0x101b2719]
  40aa69:	dec    edi
  40aa6a:	shr    BYTE PTR fs:[esi-0x61],cl
  40aa6e:	fcmovnb st,st(3)
  40aa70:	repnz out dx,al
  40aa72:	cmp    dh,BYTE PTR ds:0xd7884b7c
  40aa78:	adc    ebp,DWORD PTR [eax-0x42]
  40aa7b:	mov    dh,0xfe
  40aa7d:	loope  0x40aab7
  40aa7f:	mov    ebx,0x4ffce779
  40aa84:	(bad)  
  40aa85:	cmc    
  40aa86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa87:	or     dh,BYTE PTR [ecx+0x38661e5a]
  40aa8d:	xchg   ecx,eax
  40aa8e:	loop   0x40aa5a
  40aa90:	cmc    
  40aa91:	or     edi,DWORD PTR [eax-0x28da5493]
  40aa97:	xchg   ecx,eax
  40aa98:	cdq    
  40aa99:	mov    bh,BYTE PTR ds:0xe69b53d2
  40aa9f:	mov    ebx,0xb071bde2
  40aaa4:	mov    ds:0xb625682d,al
  40aaa9:	inc    esi
  40aaaa:	imul   esi,eax,0xfffffff3
  40aaad:	cli    
  40aaae:	dec    edi
  40aaaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aab0:	cli    
  40aab1:	adc    eax,0xae82cba0
  40aab6:	mov    WORD PTR [ecx],cs
  40aab8:	mov    bl,0xd7
  40aaba:	cmp    dh,BYTE PTR [eax-0x6]
  40aabd:	jo     0x40ab0b
  40aabf:	lods   al,BYTE PTR ds:[esi]
  40aac0:	bound  edx,QWORD PTR [ebp+eax*1+0x2536ff]
  40aac7:	jp     0x40ab16
  40aac9:	imul   esi,ecx,0x2e
  40aacc:	es sbb dl,0xe1
  40aad0:	std    
  40aad1:	mov    dh,0x4
  40aad3:	pop    esi
  40aad4:	daa    
  40aad5:	lods   al,BYTE PTR ds:[esi]
  40aad6:	test   BYTE PTR [ebx-0x5232c6d8],0xe7
  40aadd:	fndisi(8087 only) 
  40aadf:	leave  
  40aae0:	dec    edi
  40aae1:	sbb    edi,0xffffff83
  40aae4:	nop
  40aae5:	jne    0x40aae0
  40aae7:	and    al,al
  40aae9:	mov    dh,0xce
  40aaeb:	fninit 
  40aaed:	in     al,0x2
  40aaef:	jge    0x40ab61
  40aaf1:	adc    BYTE PTR [edi+0x155403be],dl
  40aaf7:	pop    ecx
  40aaf8:	or     eax,0xc5d5a33b
  40aafd:	xor    BYTE PTR [esi+0xf310716],bl
  40ab03:	(bad)  
  40ab04:	xor    al,0xb9
  40ab06:	push   ebx
  40ab07:	sub    DWORD PTR [edi-0x2c],ebp
  40ab0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab0b:	std    
  40ab0c:	loope  0x40ab47
  40ab0e:	ja     0x40ab0d
  40ab10:	or     al,0x14
  40ab12:	sti    
  40ab13:	sbb    eax,0x8cf2ac4d
  40ab18:	add    BYTE PTR ds:0x3865dc09,ch
  40ab1e:	push   cs
  40ab1f:	inc    edx
  40ab20:	mov    ds:0x43e385ce,al
  40ab25:	sar    BYTE PTR [ebx],1
  40ab27:	add    edx,DWORD PTR [ecx-0x70f271cb]
  40ab2d:	clc    
  40ab2e:	std    
  40ab2f:	cli    
  40ab30:	jbe    0x40aae1
  40ab32:	call   0xc6f151df
  40ab37:	(bad)  
  40ab38:	mov    WORD PTR [ecx],cs
  40ab3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab3b:	push   ds
  40ab3c:	and    ebx,0x75ffbc82
  40ab42:	test   dh,dh
  40ab44:	outs   dx,DWORD PTR ds:[esi]
  40ab45:	and    esi,esp
  40ab47:	aas    
  40ab48:	jae    0x40ab76
  40ab4a:	mov    edx,0x9ab3c85d
  40ab4f:	not    DWORD PTR [ecx-0x65af3a40]
  40ab55:	mov    edi,0x71394225
  40ab5a:	inc    eax
  40ab5b:	rep ins DWORD PTR es:[edi],dx
  40ab5d:	sub    ebx,eax
  40ab5f:	imul   edi,DWORD PTR [esi-0x22],0x7e5090dd
  40ab66:	popf   
  40ab67:	int    0x4f
  40ab69:	dec    esp
  40ab6a:	sbb    eax,0xed318ef2
  40ab6f:	fsubr  QWORD PTR [edx+0x5fcdb9b6]
  40ab75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab76:	cld    
  40ab77:	dec    ecx
  40ab78:	cmp    ch,BYTE PTR [ecx]
  40ab7a:	scas   al,BYTE PTR es:[edi]
  40ab7b:	or     eax,0x33a51be
  40ab80:	iret   
  40ab81:	lock retf 
  40ab83:	cmp    BYTE PTR [ecx-0x7c],bl
  40ab86:	add    al,BYTE PTR [eax-0x5d]
  40ab89:	xor    BYTE PTR [ecx+0x526dad88],0x4c
  40ab90:	les    esp,FWORD PTR [esi+ebx*2+0x6b]
  40ab94:	sbb    bl,BYTE PTR [esi+esi*2]
  40ab97:	int    0xf9
  40ab99:	mov    ds:0xdfbbe30,al
  40ab9e:	out    dx,eax
  40ab9f:	test   DWORD PTR [esi-0x6b],edi
  40aba2:	mov    ebp,0xbd4ba8b0
  40aba7:	adc    cl,0xcf
  40abaa:	(bad)  [edx+0x754aa80b]
  40abb0:	icebp  
  40abb1:	xchg   ebx,eax
  40abb2:	lahf   
  40abb3:	pop    ds
  40abb4:	jmp    0x40abb2
  40abb6:	in     al,0x6c
  40abb8:	fistp  QWORD PTR [ebp-0xd]
  40abbb:	(bad)  
  40abbc:	sub    al,0x61
  40abbe:	std    
  40abbf:	dec    ebx
  40abc0:	out    0xc5,eax
  40abc2:	mov    eax,ds:0xf609358a
  40abc7:	outs   dx,DWORD PTR ds:[esi]
  40abc8:	outs   dx,BYTE PTR ds:[esi]
  40abc9:	mov    esi,0x8f27a0b2
  40abce:	loopne 0x40aba2
  40abd0:	xor    ebp,DWORD PTR [bp-0x388e]
  40abd5:	cmp    bl,BYTE PTR [esi+0x32]
  40abd8:	ja     0x40ac0b
  40abda:	imul   esi,DWORD PTR [edi-0x79],0x24604452
  40abe1:	cmp    BYTE PTR [eax],ah
  40abe3:	or     DWORD PTR [ebp-0x4547c4e7],0x5c37e470
  40abed:	fdivr  DWORD PTR [ebx]
  40abef:	pushf  
  40abf0:	arpl   di,di
  40abf2:	stc    
  40abf3:	adc    ecx,DWORD PTR [ebp-0x45]
  40abf6:	pop    ebp
  40abf7:	jbe    0x40ac5e
  40abf9:	(bad)  
  40abfa:	jae    0x40ac41
  40abfc:	dec    ecx
  40abfd:	hlt    
  40abfe:	sub    ch,bl
  40ac00:	xchg   ebp,eax
  40ac01:	aaa    
  40ac02:	inc    esp
  40ac03:	dec    eax
  40ac04:	sti    
  40ac05:	lea    edi,[esi+0x6d9e6d27]
  40ac0b:	xor    eax,0x4b929bca
  40ac10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac11:	ret    0xddca
  40ac14:	es mov ecx,esi
  40ac17:	adc    DWORD PTR [edi-0x105a1bb8],ebp
  40ac1d:	or     eax,0xa9810a16
  40ac22:	lods   eax,DWORD PTR ds:[esi]
  40ac23:	jmp    0x62c9e4c
  40ac28:	js     0x40ac1e
  40ac2a:	outs   dx,BYTE PTR ds:[esi]
  40ac2b:	mov    fs,ebx
  40ac2d:	jle    0x40ac5b
  40ac2f:	pslld  mm3,QWORD PTR [eax]
  40ac32:	add    BYTE PTR [eax-0x3f],bl
  40ac35:	js     0x40aca9
  40ac37:	mov    ds:0x7ae3ea50,eax
  40ac3c:	out    0x3f,eax
  40ac3e:	stos   DWORD PTR es:[edi],eax
  40ac3f:	pop    edi
  40ac40:	sbb    bl,bh
  40ac42:	cvtpi2ps xmm3,QWORD PTR [ecx]
  40ac45:	retf   
  40ac46:	sti    
  40ac47:	int    0x77
  40ac49:	imul   ah
  40ac4b:	sti    
  40ac4c:	jne    0x40ac01
  40ac4e:	fmul   st,st(6)
  40ac50:	mov    esi,0x61705c53
  40ac55:	pop    ds
  40ac56:	sar    dh,0xde
  40ac59:	imul   edx,edx,0xce390539
  40ac5f:	fnsave [ebp+0x6f]
  40ac62:	mov    esi,0x39d46d64
  40ac67:	into   
  40ac68:	int    0x97
  40ac6a:	dec    edi
  40ac6b:	sub    eax,esi
  40ac6d:	dec    edx
  40ac6e:	(bad)  
  40ac6f:	xor    BYTE PTR [eax-0x6a],al
  40ac72:	(bad)  
  40ac73:	ins    DWORD PTR es:[edi],dx
  40ac74:	fbld   TBYTE PTR [ecx-0x3a]
  40ac77:	mov    WORD PTR [ecx+0x10],fs
  40ac7a:	jmp    0xde34e5ed
  40ac7f:	cli    
  40ac80:	fld    TBYTE PTR [eax-0x55]
  40ac83:	jl     0x40acb5
  40ac85:	mov    ebx,0x8f06b9f0
  40ac8a:	data16 fisub DWORD PTR [ecx+0x42]
  40ac8e:	cli    
  40ac8f:	and    edi,ebx
  40ac91:	inc    ecx
  40ac92:	arpl   sp,sp
  40ac94:	not    DWORD PTR ds:0xeddbb5ce
  40ac9a:	jnp    0x40acbe
  40ac9c:	push   ebx
  40ac9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac9e:	loope  0x40ac9b
  40aca0:	(bad)  
  40aca1:	cmp    BYTE PTR [eax-0x280768a4],dl
  40aca7:	mov    ah,BYTE PTR [ecx]
  40aca9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acaa:	ds out dx,eax
  40acac:	adc    edi,DWORD PTR [ecx+0x382522b0]
  40acb2:	ret    
  40acb3:	sub    DWORD PTR [ecx],ecx
  40acb5:	rol    dh,cl
  40acb7:	mov    eax,0x2150e3f9
  40acbc:	push   ebp
  40acbd:	scas   al,BYTE PTR es:[edi]
  40acbe:	and    al,0x59
  40acc0:	dec    eax
  40acc1:	int    0x3c
  40acc3:	jp     0x40ac70
  40acc5:	inc    edi
  40acc6:	into   
  40acc7:	scas   eax,DWORD PTR es:[edi]
  40acc8:	das    
  40acc9:	call   0xac47:0x3ac7a98d
  40acd0:	xchg   esi,eax
  40acd1:	cld    
  40acd2:	xor    ch,BYTE PTR [eax+0x37]
  40acd5:	ins    DWORD PTR es:[edi],dx
  40acd6:	xor    al,BYTE PTR [ebp+0x765736fb]
  40acdc:	add    dh,bh
  40acde:	sbb    BYTE PTR [ebp-0x38fff97d],0x2a
  40ace5:	inc    edx
  40ace6:	out    0x90,eax
  40ace8:	mov    eax,0x3bfaacaa
  40aced:	fiadd  WORD PTR [ebx]
  40acef:	ret    0x9270
  40acf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acf3:	clc    
  40acf4:	outs   dx,BYTE PTR ds:[esi]
  40acf5:	adc    DWORD PTR [esi-0xc],eax
  40acf8:	pop    ebx
  40acf9:	pop    ds
  40acfa:	in     al,dx
  40acfb:	fistp  QWORD PTR [ebx]
  40acfd:	int    0x52
  40acff:	mov    edi,0x16bb9a0c
  40ad04:	adc    DWORD PTR [eax-0x402baf71],eax
  40ad0a:	push   edi
  40ad0b:	(bad)  
  40ad0c:	and    al,0x35
  40ad0e:	data16 xor al,dh
  40ad11:	mov    bl,BYTE PTR [ebx]
  40ad13:	jno    0x40ad03
  40ad15:	outs   dx,DWORD PTR ds:[esi]
  40ad16:	(bad)  
  40ad17:	pusha  
  40ad18:	mov    bh,0xc5
  40ad1a:	mov    esp,0x7010b08e
  40ad1f:	retf   
  40ad20:	mov    ds:0x31534ae4,al
  40ad25:	fprem1 
  40ad27:	jp     0x40ad37
  40ad29:	adc    dh,BYTE PTR ds:0x7e221289
  40ad2f:	inc    ebp
  40ad30:	(bad)  
  40ad31:	repz pop esi
  40ad33:	loope  0x40acdc
  40ad35:	popf   
  40ad36:	data16 das 
  40ad38:	lahf   
  40ad39:	aas    
  40ad3a:	(bad)  
  40ad3b:	pop    edx
  40ad3c:	pusha  
  40ad3d:	nop
  40ad3e:	and    BYTE PTR [ebx-0xa],dh
  40ad41:	cmc    
  40ad42:	stos   BYTE PTR es:[edi],al
  40ad43:	clc    
  40ad44:	mov    ds:0xc59d1f91,al
  40ad49:	push   es
  40ad4a:	dec    ecx
  40ad4b:	ror    bl,cl
  40ad4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad4e:	xchg   edi,eax
  40ad4f:	jg     0x40ad01
  40ad51:	dec    eax
  40ad52:	daa    
  40ad53:	(bad)  
  40ad54:	pop    esi
  40ad55:	sahf   
  40ad56:	push   cs
  40ad57:	sub    eax,0x39955cc0
  40ad5c:	jp     0x40ad4d
  40ad5e:	dec    esi
  40ad5f:	pop    edi
  40ad60:	lahf   
  40ad61:	cmp    al,0x60
  40ad63:	int    0xd9
  40ad65:	mov    dh,0x5a
  40ad67:	arpl   WORD PTR [edi*2-0x4c7a83fc],dx
  40ad6e:	mov    eax,ds:0x67225e97
  40ad73:	aad    0xe6
  40ad75:	stos   BYTE PTR es:[edi],al
  40ad76:	imul   ebx,DWORD PTR [edi],0x4fa018ea
  40ad7c:	inc    edi
  40ad7d:	stos   DWORD PTR es:[edi],eax
  40ad7e:	mov    WORD PTR [edi+0x3424935b],ds
  40ad84:	jp     0x40ad77
  40ad86:	(bad)  
  40ad87:	jb     0x40ad83
  40ad89:	jecxz  0x40ad1c
  40ad8b:	adc    BYTE PTR [ecx],0x7f
  40ad8e:	loopne 0x40ad13
  40ad90:	mov    dh,0xbb
  40ad92:	lock cdq 
  40ad94:	pop    ebp
  40ad95:	aas    
  40ad96:	fst    QWORD PTR [esi+ebx*4]
  40ad99:	mov    cl,0x8b
  40ad9b:	inc    ebp
  40ad9c:	in     al,dx
  40ad9d:	movzx  ecx,WORD PTR ds:0x42915f
  40ada4:	or     DWORD PTR ds:0x4291e7,ecx
  40adaa:	mov    ecx,DWORD PTR [ebp+0x8]
  40adad:	add    ecx,DWORD PTR [eax+0x1c]
  40adb0:	mov    DWORD PTR [ebp-0x14],ecx
  40adb3:	mov    DWORD PTR ds:0x4291d3,0x1651
  40adbd:	jmp    0x40d2ae
  40adc2:	mov    eax,DWORD PTR [ebp-0x2c]
  40adc5:	and    DWORD PTR ds:0x4291c3,0x0
  40adcf:	jmp    0x40ade1
  40add4:	mov    ecx,DWORD PTR ds:0x4291c3
  40adda:	inc    ecx
  40addb:	mov    DWORD PTR ds:0x4291c3,ecx
  40ade1:	cmp    DWORD PTR ds:0x4291c3,0x1e
  40ade8:	jae    0x40ae37
  40adee:	cmp    DWORD PTR ds:0x4291c3,0x10
  40adf5:	jbe    0x40ae37
  40adfb:	jmp    0x40ae18
  40ae00:	push   0x54af
  40ae05:	push   0x428000
  40ae0a:	push   0x42810e
  40ae0f:	push   DWORD PTR [ebp-0x10]
  40ae12:	call   DWORD PTR ds:0x42a53b
  40ae18:	cmp    DWORD PTR ds:0x4291c3,0xf
  40ae1f:	jne    0x40ae32
  40ae25:	mov    ecx,DWORD PTR ds:0x4291c3
  40ae2b:	inc    ecx
  40ae2c:	mov    DWORD PTR ds:0x4291c3,ecx
  40ae32:	jmp    0x40add4
  40ae37:	mov    ecx,DWORD PTR [ebp+0x8]
  40ae3a:	add    ecx,DWORD PTR [eax+ebx*4]
  40ae3d:	and    DWORD PTR ds:0x4291df,0x0
  40ae47:	jmp    0x40ae57
  40ae4c:	mov    eax,ds:0x4291df
  40ae51:	inc    eax
  40ae52:	mov    ds:0x4291df,eax
  40ae57:	cmp    DWORD PTR ds:0x4291df,0x10
  40ae5e:	jae    0x40aea1
  40ae64:	cmp    DWORD PTR ds:0x4291df,0x5
  40ae6b:	jb     0x40aea1
  40ae71:	jmp    0x40ae84
  40ae76:	push   0x73ed
  40ae7b:	push   DWORD PTR [ebp-0xc]
  40ae7e:	call   DWORD PTR ds:0x42a53f
  40ae84:	cmp    DWORD PTR ds:0x4291df,0x4
  40ae8b:	jne    0x40ae9c
  40ae91:	mov    eax,ds:0x4291df
  40ae96:	inc    eax
  40ae97:	mov    ds:0x4291df,eax
  40ae9c:	jmp    0x40ae4c
  40aea1:	mov    DWORD PTR [ebp-0x28],ecx
  40aea4:	add    ecx,DWORD PTR ds:0x429183
  40aeaa:	mov    eax,DWORD PTR [ebp-0x4]
  40aead:	xor    DWORD PTR ds:0x42916b,ebx
  40aeb3:	mov    ecx,DWORD PTR [ebp-0x28]
  40aeb6:	xor    eax,esi
  40aeb8:	jmp    0x40d26c
  40aebd:	add    BYTE PTR [ecx],dh
  40aebf:	cld    
  40aec0:	sbb    esp,ecx
  40aec2:	nop
  40aec3:	and    BYTE PTR [eax],0xe5
  40aec6:	push   eax
  40aec7:	(bad)  [edi-0x2e9a35c1]
  40aecd:	sub    al,0xf1
  40aecf:	add    DWORD PTR [ebx-0x7c7ca318],0xffffff8f
  40aed6:	push   ss
  40aed7:	jl     0x40aea5
  40aed9:	jge    0x40aeb7
  40aedb:	sub    ebx,edi
  40aedd:	cmp    eax,0x56adf8ef
  40aee2:	std    
  40aee3:	xchg   ebx,eax
  40aee4:	cwde   
  40aee5:	les    ebx,FWORD PTR [edi+0x770fcaff]
  40aeeb:	mov    eax,ds:0x2b8a7eff
  40aef0:	sbb    eax,esp
  40aef2:	sar    DWORD PTR [edx-0x1d],1
  40aef5:	(bad)  
  40aef6:	in     eax,dx
  40aef7:	mov    ds:0x9797a202,al
  40aefc:	stc    
  40aefd:	and    BYTE PTR [ecx],al
  40aeff:	(bad)  
  40af00:	adc    eax,0x89ac82cb
  40af05:	ds in  al,0x5f
  40af08:	add    ebp,DWORD PTR [esi+0x1e]
  40af0b:	sbb    al,0xd
  40af0d:	das    
  40af0e:	dec    esi
  40af0f:	stos   BYTE PTR es:[edi],al
  40af10:	xor    dh,BYTE PTR [esi]
  40af12:	jecxz  0x40af81
  40af14:	dec    ebp
  40af15:	xor    eax,0x3372287b
  40af1a:	add    al,0xb5
  40af1c:	iret   
  40af1d:	jno    0x40af69
  40af1f:	mov    WORD PTR ds:0xe67d498e,gs
  40af25:	jl     0x40af7e
  40af27:	sbb    eax,0xeaa33bd0
  40af2c:	cs or  al,0xfb
  40af2f:	add    ecx,DWORD PTR [eax-0x11]
  40af32:	jne    0x40af04
  40af34:	cmp    ah,BYTE PTR [ebp+0x17]
  40af37:	(bad)
  40af3a:	loop   0x40af73
  40af3c:	xchg   esi,eax
  40af3d:	push   eax
  40af3e:	cdq    
  40af3f:	lock adc DWORD PTR fs:[edx+0x5e],edi
  40af44:	dec    ebp
  40af45:	ret    
  40af46:	call   0xd15cf73e
  40af4b:	mov    edi,0x1cfbbe5d
  40af50:	repz and DWORD PTR [edx+ebx*2-0xd5ecb3],esp
  40af58:	ror    DWORD PTR [edi-0x42],1
  40af5b:	mov    cl,0xc3
  40af5d:	and    ch,bl
  40af5f:	shr    DWORD PTR [edi+0x45fc1d7b],cl
  40af65:	pop    ebp
  40af66:	inc    edi
  40af67:	retf   0xb307
  40af6a:	in     eax,dx
  40af6b:	sbb    BYTE PTR [ecx+esi*1+0x3d958ac8],bl
  40af72:	sti    
  40af73:	scas   eax,DWORD PTR es:[edi]
  40af74:	jle    0x40af61
  40af76:	inc    esp
  40af77:	shl    DWORD PTR [esi+0x41],0xcb
  40af7b:	test   DWORD PTR [ecx],eax
  40af7d:	add    al,0xe
  40af7f:	mov    esi,0x63f02cec
  40af84:	out    0xe2,al
  40af86:	fadd   st(0),st
  40af88:	repnz popf 
  40af8a:	pop    esp
  40af8b:	jmp    0x40af2c
  40af8d:	(bad)  
  40af8e:	icebp  
  40af8f:	lahf   
  40af90:	jecxz  0x40af87
  40af92:	mov    ds:0x84bee1b9,al
  40af97:	retf   0x57a8
  40af9a:	jae    0x40af38
  40af9c:	hlt    
  40af9d:	je     0x40af4c
  40af9f:	clc    
  40afa0:	sub    eax,0x72f336b9
  40afa5:	lea    ecx,[ecx]
  40afa7:	adc    DWORD PTR [ecx-0x5cb8b282],eax
  40afad:	test   eax,0xfced503a
  40afb2:	mov    ecx,0xb30362ee
  40afb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afb8:	fsub   QWORD PTR [esi+ebp*4+0xf50edea]
  40afbf:	pop    ebx
  40afc0:	test   bh,bl
  40afc2:	sub    dl,BYTE PTR [ebx-0x2b]
  40afc5:	fisttp WORD PTR [edx]
  40afc7:	xor    esi,0x6f75dcfb
  40afcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afce:	mov    edx,0xa8efd096
  40afd3:	fimul  WORD PTR [ecx+0x2e995295]
  40afd9:	add    BYTE PTR [edx+edi*8-0x69],bh
  40afdd:	popa   
  40afde:	test   bl,0xf4
  40afe1:	pusha  
  40afe2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afe3:	mov    ah,0xbc
  40afe5:	push   0xffffff8f
  40afe7:	sub    eax,0xdf859192
  40afec:	push   edx
  40afed:	dec    edi
  40afee:	hlt    
  40afef:	out    0x80,al
  40aff1:	out    dx,al
  40aff2:	les    ebp,FWORD PTR [eax+edi*8]
  40aff5:	test   edi,ecx
  40aff7:	cld    
  40aff8:	stos   BYTE PTR es:[edi],al
  40aff9:	cli    
  40affa:	rcl    BYTE PTR [ecx+0x76d2a01a],1
  40b000:	in     eax,0x89
  40b002:	addr16 cs pop ebx
  40b005:	and    esi,ebx
  40b007:	test   ah,al
  40b009:	test   eax,0xf9340469
  40b00e:	sub    al,0x5c
  40b010:	add    al,BYTE PTR [ecx+ecx*1+0x79223bd5]
  40b017:	push   ebp
  40b018:	rcl    BYTE PTR [eax-0x9],cl
  40b01b:	adc    al,0x28
  40b01d:	gs dec ecx
  40b01f:	jae    0x40b097
  40b021:	mov    DWORD PTR [ecx-0x6b3be319],0xaec05727
  40b02b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b02c:	cmp    DWORD PTR [edi-0x1bf1f116],ebp
  40b032:	scas   eax,DWORD PTR es:[edi]
  40b033:	and    eax,0xb8b90e51
  40b038:	push   0xa199e258
  40b03d:	js     0x40b0bb
  40b03f:	js     0x40b02a
  40b041:	push   cs
  40b042:	clc    
  40b043:	les    ebp,FWORD PTR [ecx+0x556d20e5]
  40b049:	sub    ch,al
  40b04b:	dec    ecx
  40b04c:	in     eax,dx
  40b04d:	in     eax,dx
  40b04e:	fwait
  40b04f:	sub    ch,dl
  40b051:	cmp    dl,al
  40b053:	xor    al,0x5c
  40b055:	xchg   ecx,eax
  40b056:	ret    0x851f
  40b059:	sub    dl,cl
  40b05b:	mov    edi,0x5f93b6ab
  40b060:	jb     0x40b086
  40b062:	sbb    al,0x9c
  40b064:	je     0x40b0e3
  40b066:	xor    al,BYTE PTR es:[ecx+0x56]
  40b06a:	mov    ebx,0x1506db1a
  40b06f:	(bad)  
  40b070:	jmp    0x40b040
  40b072:	mov    eax,0x10738030
  40b077:	out    0xda,eax
  40b079:	or     esi,DWORD PTR [esi-0x6b6a7597]
  40b07f:	inc    esi
  40b080:	scas   al,BYTE PTR es:[edi]
  40b081:	pop    ebx
  40b082:	test   BYTE PTR [ebx],0xc4
  40b085:	dec    edx
  40b086:	out    dx,eax
  40b087:	cmp    dh,cl
  40b089:	inc    ebx
  40b08a:	cwde   
  40b08b:	mov    al,0x54
  40b08d:	jecxz  0x40b0e2
  40b08f:	add    al,0x3d
  40b091:	push   edi
  40b092:	and    al,0x6c
  40b094:	clc    
  40b095:	jno    0x40b09e
  40b097:	xor    BYTE PTR [eax+0xe],bl
  40b09a:	pop    ss
  40b09b:	aam    0xc1
  40b09d:	or     BYTE PTR [ebx-0x5d],0xa8
  40b0a1:	push   esp
  40b0a2:	push   ss
  40b0a3:	pop    esi
  40b0a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0a5:	repnz push es
  40b0a7:	inc    edx
  40b0a8:	cmp    BYTE PTR [eax-0x79],0xfc
  40b0ac:	xor    DWORD PTR [eax],ecx
  40b0ae:	imul   eax,DWORD PTR [edx+eax*1+0x17],0xa91cacd6
  40b0b6:	cmp    bx,WORD PTR [ebp+edx*2+0x2f1f5e59]
  40b0be:	lea    ebx,[esi]
  40b0c0:	ret    0x340d
  40b0c3:	and    al,0xa6
  40b0c5:	aaa    
  40b0c6:	mov    BYTE PTR [ebp+0x7c],0x6a
  40b0ca:	nop
  40b0cb:	adc    al,0xe9
  40b0cd:	fadd   DWORD PTR [ecx-0x5fe121b1]
  40b0d3:	sahf   
  40b0d4:	sbb    DWORD PTR [ebp-0x6fee6c38],ecx
  40b0da:	int3   
  40b0db:	xchg   esi,eax
  40b0dc:	mov    ch,BYTE PTR [edx+edi*4-0x3f63c7b9]
  40b0e3:	das    
  40b0e4:	imul   ecx,DWORD PTR [ebp-0xc],0xf8dcf351
  40b0eb:	add    bl,BYTE PTR [eax+edx*2+0x52]
  40b0ef:	repnz pusha 
  40b0f1:	mov    edi,0x268a446f
  40b0f6:	(bad)
  40b0f9:	push   esp
  40b0fa:	repnz xchg edx,eax
  40b0fc:	das    
  40b0fd:	push   dx
  40b0ff:	outs   dx,DWORD PTR ds:[esi]
  40b100:	pop    edx
  40b101:	(bad)  
  40b102:	(bad)  
  40b103:	ss pop ss
  40b105:	icebp  
  40b106:	into   
  40b107:	test   eax,0x7800b5d1
  40b10c:	jl     0x40b12f
  40b10e:	aaa    
  40b10f:	or     al,0x4e
  40b111:	addr16 mov bl,0x64
  40b114:	xchg   edi,eax
  40b115:	xchg   edx,eax
  40b116:	retf   0x29e9
  40b119:	cld    
  40b11a:	rcr    BYTE PTR [esi+0x32cc2cb5],0x12
  40b121:	inc    ebp
  40b122:	stos   BYTE PTR es:[edi],al
  40b123:	lods   al,BYTE PTR ds:[esi]
  40b124:	sub    DWORD PTR [ebp-0x5e],ebx
  40b127:	jl     0x40b107
  40b129:	iret   
  40b12a:	repz sub dh,BYTE PTR [esi-0x6e]
  40b12e:	cwde   
  40b12f:	lahf   
  40b130:	push   edi
  40b131:	xor    al,0x20
  40b133:	jg     0x40b195
  40b135:	out    dx,al
  40b136:	mov    dl,0xa1
  40b138:	push   cs
  40b139:	xor    eax,0x28d3a7a1
  40b13e:	retf   0xee45
  40b141:	cmp    ebx,DWORD PTR cs:[ebp+0x60]
  40b145:	mov    dl,0x68
  40b147:	int    0xf9
  40b149:	bswap  ebx
  40b14b:	in     eax,0xca
  40b14d:	rcl    BYTE PTR [eax+edi*2],0x38
  40b151:	mov    edi,DWORD PTR [edx+0x16]
  40b154:	inc    esi
  40b155:	clc    
  40b156:	push   edi
  40b157:	xor    al,0x4
  40b159:	jmp    0xd5c1:0xc965f546
  40b160:	adc    edx,ebx
  40b162:	lods   eax,DWORD PTR ds:[esi]
  40b163:	add    eax,0xaf733ebe
  40b168:	jb     0x40b169
  40b16a:	adc    DWORD PTR [edx+0x28323713],0xbd794c7a
  40b174:	test   al,0xa8
  40b176:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b177:	clc    
  40b178:	mov    ecx,0x8066b2e5
  40b17d:	dec    ebp
  40b17e:	push   esi
  40b17f:	mov    ch,0x76
  40b181:	adc    al,0xfc
  40b183:	and    DWORD PTR [eax+0x44],ebx
  40b186:	stos   DWORD PTR es:[edi],eax
  40b187:	push   es
  40b188:	in     eax,dx
  40b189:	add    al,0xeb
  40b18b:	outs   dx,DWORD PTR ds:[esi]
  40b18c:	mov    fs,WORD PTR [eax-0x7]
  40b18f:	push   0x2
  40b191:	out    0xa8,eax
  40b193:	rol    BYTE PTR [edx+0x77],cl
  40b196:	xor    bl,BYTE PTR [ebp-0x70f75eb2]
  40b19c:	mov    ch,0x15
  40b19e:	sub    dl,0xcb
  40b1a1:	adc    eax,0x208a1055
  40b1a6:	rcr    BYTE PTR [ebp-0x22],0xe8
  40b1aa:	fdivr  QWORD PTR [ecx-0x2906e7e7]
  40b1b0:	out    0x4,al
  40b1b2:	xor    edi,ebx
  40b1b4:	xchg   ebx,eax
  40b1b5:	jmp    DWORD PTR [ebp*4+0x26401ae]
  40b1bc:	cmp    eax,0xeceecc6
  40b1c1:	inc    esp
  40b1c2:	add    al,0x36
  40b1c4:	pop    esp
  40b1c5:	stc    
  40b1c6:	test   eax,0x4e659608
  40b1cb:	call   0x2d27a685
  40b1d0:	mov    fs,WORD PTR [eax+ecx*4]
  40b1d3:	push   esi
  40b1d4:	pop    esp
  40b1d5:	lea    eax,[edx+0xa]
  40b1d8:	mov    ebp,0x3a90c04b
  40b1dd:	neg    DWORD PTR [edi-0x4f]
  40b1e0:	push   0xffffffc1
  40b1e2:	aad    0x9f
  40b1e4:	jns    0x40b179
  40b1e6:	xor    BYTE PTR [esi],bl
  40b1e8:	mov    ebp,0x7609209d
  40b1ed:	cs out dx,eax
  40b1ef:	mov    ch,0xe4
  40b1f1:	or     BYTE PTR [eax+0xe283a79],0x39
  40b1f8:	in     al,0x6b
  40b1fa:	stos   DWORD PTR es:[edi],eax
  40b1fb:	int3   
  40b1fc:	add    eax,0xdf2d40a
  40b201:	inc    esi
  40b202:	push   cs
  40b203:	int3   
  40b204:	daa    
  40b205:	adc    al,0x43
  40b207:	outs   dx,BYTE PTR ds:[esi]
  40b208:	sub    edi,DWORD PTR [eax+0x5d]
  40b20b:	std    
  40b20c:	cmp    al,0xa
  40b20e:	dec    ecx
  40b20f:	nop
  40b210:	in     eax,0x4c
  40b212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b213:	xchg   DWORD PTR [esi-0x66537dc6],esi
  40b219:	xchg   ebx,eax
  40b21a:	cwde   
  40b21b:	ds dec esi
  40b21d:	repz pop esi
  40b21f:	add    ebx,DWORD PTR [edi-0x44]
  40b222:	mov    al,ds:0xa070f8be
  40b227:	mov    bl,0x34
  40b229:	or     edi,DWORD PTR [eax]
  40b22b:	pop    ebp
  40b22c:	test   eax,0xd185cdcf
  40b231:	rcl    DWORD PTR [eax+0x1c],cl
  40b234:	cld    
  40b235:	sar    edx,0xfb
  40b238:	lods   eax,DWORD PTR ds:[esi]
  40b239:	dec    edx
  40b23a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b23b:	les    edi,FWORD PTR [ebx+0x7ae6ffc6]
  40b241:	popa   
  40b242:	dec    esi
  40b243:	add    edx,DWORD PTR [edi+0x68]
  40b246:	jl     0x40b231
  40b248:	pop    ebp
  40b249:	sbb    dl,ah
  40b24b:	mov    DWORD PTR [esi],ebp
  40b24d:	dec    eax
  40b24e:	push   ss
  40b24f:	push   esi
  40b250:	ret    
  40b251:	mov    bh,0x0
  40b253:	adc    al,0xd0
  40b256:	je     0x40b2b3
  40b258:	sbb    BYTE PTR [ebp-0x4e],bl
  40b25b:	push   ecx
  40b25c:	xor    eax,0xd2543902
  40b261:	test   BYTE PTR [esi-0x4a],ah
  40b264:	cdq    
  40b265:	f2xm1  
  40b267:	mov    ebp,0xcbef2963
  40b26c:	sub    BYTE PTR [edx],dl
  40b26e:	or     DWORD PTR [eax-0x1a],esp
  40b271:	loop   0x40b257
  40b273:	adc    edx,DWORD PTR [esi-0x2c]
  40b276:	mov    DWORD PTR [edi],0x4428713f
  40b27c:	stos   BYTE PTR es:[edi],al
  40b27d:	push   esp
  40b27e:	jne    0x40b26c
  40b280:	cmp    DWORD PTR [eax+0x3d],esp
  40b283:	adc    eax,0xa76b3ce0
  40b288:	arpl   WORD PTR [ecx+0x2cfa5cb1],si
  40b28e:	or     al,0x25
  40b290:	pop    eax
  40b291:	mov    ds:0x8a8564f6,eax
  40b296:	out    0xed,eax
  40b298:	inc    ebp
  40b299:	sbb    esp,DWORD PTR [esi]
  40b29b:	cwde   
  40b29c:	mov    WORD PTR [edx+0x36],?
  40b29f:	ds push eax
  40b2a1:	mov    ecx,0x1163bdd0
  40b2a6:	ret    0xa97d
  40b2a9:	add    BYTE PTR [ecx+0x5],ah
  40b2ac:	push   es
  40b2ad:	mov    cl,0x9d
  40b2af:	or     ebx,eax
  40b2b1:	mov    al,0x50
  40b2b3:	mov    ds:0x5e34896a,al
  40b2b8:	jno    0x40b29b
  40b2ba:	rcr    DWORD PTR [edi+0x2f],0xd7
  40b2be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2bf:	jo     0x40b257
  40b2c1:	bound  eax,QWORD PTR [eax]
  40b2c3:	aam    0xa4
  40b2c5:	stc    
  40b2c6:	or     eax,0xc599b127
  40b2cb:	cmc    
  40b2cc:	in     eax,dx
  40b2cd:	scas   al,BYTE PTR es:[edi]
  40b2ce:	and    BYTE PTR [ebx],0xbe
  40b2d1:	dec    ebp
  40b2d2:	push   ecx
  40b2d3:	mov    al,0xcf
  40b2d5:	(bad)  
  40b2d6:	xchg   ebp,eax
  40b2d7:	jno    0x40b25d
  40b2d9:	xchg   ebp,eax
  40b2da:	or     al,0x61
  40b2dc:	(bad)  
  40b2dd:	xor    BYTE PTR [ecx],ah
  40b2df:	not    BYTE PTR [edi]
  40b2e1:	mov    bl,0xb1
  40b2e3:	mov    ah,BYTE PTR [edx+0x78655d42]
  40b2e9:	sbb    al,0xa5
  40b2eb:	and    al,0xb9
  40b2ed:	adc    BYTE PTR [eax-0x1d],0x79
  40b2f1:	jae    0x40b300
  40b2f3:	gs dec ebx
  40b2f5:	push   0x2a
  40b2f7:	or     al,0x5c
  40b2f9:	jns    0x40b2e1
  40b2fb:	out    0x3a,eax
  40b2fd:	sbb    al,0xd1
  40b2ff:	inc    esi
  40b300:	jns    0x40b36c
  40b302:	jmp    0xb246:0xf9a72644
  40b309:	out    0xaf,al
  40b30b:	shl    DWORD PTR [ebx],0x8
  40b30e:	xchg   ebx,eax
  40b30f:	cmp    DWORD PTR [ebx+0x7e5e1f58],ebx
  40b315:	aas    
  40b316:	stc    
  40b317:	lds    ebx,FWORD PTR [ebp-0x6e]
  40b31a:	inc    esi
  40b31b:	or     DWORD PTR ds:0xd1c8724,esp
  40b321:	int3   
  40b322:	inc    esi
  40b323:	outs   dx,BYTE PTR ds:[esi]
  40b324:	ja     0x40b2f9
  40b326:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b327:	mov    dl,0x26
  40b329:	repz push cs
  40b32b:	call   0x4943:0xc5e836d4
  40b332:	xor    eax,0x4ae6448a
  40b337:	inc    esp
  40b338:	jmp    0x40b322
  40b33a:	push   es
  40b33b:	pop    ebp
  40b33c:	inc    esi
  40b33d:	cmp    al,0x2b
  40b33f:	daa    
  40b340:	cmp    DWORD PTR [esp+ebp*1-0x17],esp
  40b344:	cld    
  40b345:	pop    eax
  40b346:	arpl   WORD PTR [ebx],bp
  40b348:	jbe    0x40b35e
  40b34a:	in     eax,0x22
  40b34c:	cld    
  40b34d:	inc    ecx
  40b34e:	xchg   edi,eax
  40b34f:	mov    edi,0xb957c1ec
  40b354:	ja     0x40b330
  40b356:	or     bl,BYTE PTR [esi-0x5d0f1da3]
  40b35c:	mov    bh,0x46
  40b35e:	cmp    eax,0xb6364bf
  40b363:	ss mov ch,0xe7
  40b366:	scas   al,BYTE PTR es:[edi]
  40b367:	sbb    cl,BYTE PTR [esi-0x1d]
  40b36a:	add    ecx,esi
  40b36c:	mov    BYTE PTR [ebp+0x13bdf545],0xc1
  40b373:	sbb    ah,bl
  40b375:	and    eax,edx
  40b377:	mov    ah,0x87
  40b379:	xor    bh,dh
  40b37b:	inc    ebp
  40b37c:	xchg   ebx,eax
  40b37d:	pop    ebp
  40b37e:	jb     0x40b3e1
  40b380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b381:	int3   
  40b382:	push   0xc586246c
  40b387:	sti    
  40b388:	int3   
  40b389:	sbb    ebx,edi
  40b38b:	mov    edi,0x17259524
  40b390:	sbb    eax,0x93cb56a8
  40b395:	into   
  40b396:	scas   eax,DWORD PTR es:[edi]
  40b397:	test   al,0x9e
  40b399:	mov    cs,WORD PTR [ebx]
  40b39b:	xor    DWORD PTR [edi+0x1660937f],ecx
  40b3a1:	shl    DWORD PTR [edx+0xf],1
  40b3a4:	or     edx,ecx
  40b3a6:	sbb    eax,edx
  40b3a8:	faddp  st(4),st
  40b3aa:	mov    edi,0xcbf26734
  40b3af:	and    al,0xd3
  40b3b1:	retf   0xf619
  40b3b4:	xor    edi,ebx
  40b3b6:	in     al,0x76
  40b3b8:	xor    edi,DWORD PTR [esi-0xa]
  40b3bb:	lock ret 
  40b3bd:	pop    edx
  40b3be:	sbb    eax,0xa50bb8c6
  40b3c3:	(bad)  
  40b3c4:	es call 0x374e7a40
  40b3ca:	mov    eax,ds:0x948e33fe
  40b3cf:	cmp    eax,edi
  40b3d1:	(bad)  
  40b3d2:	cld    
  40b3d3:	popa   
  40b3d4:	push   esp
  40b3d5:	in     eax,0x12
  40b3d7:	cmp    BYTE PTR [edx+0x38],al
  40b3da:	jno    0x40b3f0
  40b3dc:	inc    ebp
  40b3dd:	aas    
  40b3de:	sub    BYTE PTR [edi],dh
  40b3e0:	mov    dh,0x71
  40b3e2:	aas    
  40b3e3:	inc    edx
  40b3e4:	push   ss
  40b3e5:	repnz add cl,ah
  40b3e8:	pop    ebp
  40b3e9:	daa    
  40b3ea:	xor    DWORD PTR [eax+eiz*4-0x1b],ecx
  40b3ee:	jns    0x40b402
  40b3f0:	sub    al,0x17
  40b3f2:	call   0x2faceeeb
  40b3f7:	mov    edx,DWORD PTR [esi-0x7b]
  40b3fa:	fs enter 0xd169,0x5f
  40b3ff:	enter  0x7a8d,0x59
  40b403:	sub    DWORD PTR [edi],ebp
  40b405:	mov    ecx,0x1392eff3
  40b40a:	and    DWORD PTR [edx+0x23],eax
  40b40d:	or     DWORD PTR [edi+0x0],eax
  40b410:	jb     0x40b428
  40b412:	mov    al,0x9e
  40b414:	ror    BYTE PTR [eax+eiz*2+0x2888421f],0x73
  40b41c:	xor    DWORD PTR [edi+0x7d21bc32],eax
  40b422:	xor    DWORD PTR [esi],0xdff539d0
  40b428:	stc    
  40b429:	(bad)  
  40b42a:	pop    ebp
  40b42b:	div    bh
  40b42d:	and    al,0x66
  40b42f:	mov    al,ds:0x7f676fc9
  40b434:	xchg   edi,eax
  40b435:	inc    esi
  40b436:	and    al,BYTE PTR [ebx-0x4e]
  40b439:	push   DWORD PTR [ecx+0x6d]
  40b43c:	fucomip st,st(3)
  40b43e:	rol    DWORD PTR [edi+0x5d],0x33
  40b442:	int    0xe6
  40b444:	jne    0x40b4b1
  40b446:	mov    ss,edi
  40b448:	inc    eax
  40b449:	stc    
  40b44a:	pop    ds
  40b44b:	in     eax,0x77
  40b44d:	or     DWORD PTR [ebp-0x19],esi
  40b450:	add    BYTE PTR [edx+0x7c],0x4c
  40b454:	push   edx
  40b455:	dec    edi
  40b456:	shl    BYTE PTR [ebp-0x19],cl
  40b459:	aam    0x22
  40b45b:	lods   eax,DWORD PTR ds:[esi]
  40b45c:	or     cl,bh
  40b45e:	in     al,dx
  40b45f:	imul   esi,DWORD PTR [eax-0x7a],0xa05a1b4
  40b466:	sub    al,dl
  40b468:	mov    ch,0xff
  40b46a:	xchg   BYTE PTR [ebx+ecx*1-0x20e3de56],dl
  40b471:	nop
  40b472:	stc    
  40b473:	enter  0xe507,0xa8
  40b477:	and    DWORD PTR [eax+0x6c],eax
  40b47a:	inc    esp
  40b47b:	pop    ss
  40b47c:	dec    ebx
  40b47d:	pop    edi
  40b47e:	pop    edx
  40b47f:	dec    esi
  40b480:	fstp   DWORD PTR [eax-0x1d]
  40b483:	outs   dx,DWORD PTR ds:[esi]
  40b484:	lahf   
  40b485:	add    al,ch
  40b487:	imul   edi,DWORD PTR [ecx-0x34f58a9],0x83ad9bfa
  40b491:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b492:	pop    ds
  40b493:	sub    eax,0x46fa47de
  40b498:	outs   dx,BYTE PTR ds:[esi]
  40b499:	inc    eax
  40b49a:	jge    0x40b436
  40b49c:	inc    ebx
  40b49d:	fsub   st,st(2)
  40b49f:	jge    0x40b4ef
  40b4a1:	pop    ebp
  40b4a2:	out    0x45,eax
  40b4a4:	sbb    cl,ah
  40b4a6:	mov    edx,0xf2cc7fa4
  40b4ab:	daa    
  40b4ac:	xchg   edx,eax
  40b4ad:	inc    esp
  40b4ae:	in     al,0x87
  40b4b0:	sub    BYTE PTR [ebx],0x1e
  40b4b3:	pop    ebp
  40b4b4:	adc    bh,BYTE PTR [ecx+0x59ff64ff]
  40b4ba:	or     dl,BYTE PTR [ebx]
  40b4bc:	pop    eax
  40b4bd:	dec    ebp
  40b4be:	clc    
  40b4bf:	or     dh,BYTE PTR gs:[ebx+0x29]
  40b4c3:	stc    
  40b4c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4c5:	mov    al,ds:0xf78b7e7d
  40b4ca:	jle    0x40b477
  40b4cc:	pop    ecx
  40b4cd:	jne    0x40b4f1
  40b4cf:	inc    esp
  40b4d0:	sub    al,cl
  40b4d2:	sbb    dh,0x8e
  40b4d5:	mov    fs,ebx
  40b4d7:	push   esi
  40b4d8:	stc    
  40b4d9:	(bad)  
  40b4db:	and    ecx,DWORD PTR [eax-0x67]
  40b4de:	sbb    al,0x87
  40b4e0:	or     ebx,DWORD PTR [ebx-0x1a]
  40b4e3:	mov    ebp,ebp
  40b4e5:	mov    esp,0x45328ec3
  40b4ea:	outs   dx,DWORD PTR ds:[esi]
  40b4eb:	lahf   
  40b4ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4ed:	test   cl,al
  40b4ef:	sub    BYTE PTR [ebx-0x6b],0x8b
  40b4f3:	dec    ecx
  40b4f4:	loope  0x40b4bf
  40b4f6:	mov    al,0xe6
  40b4f9:	jnp    0x40b562
  40b4fb:	mul    BYTE PTR [ebx+0x202f0861]
  40b501:	test   al,0x6d
  40b503:	mov    ebp,0xd12ebc14
  40b508:	cs (bad) 
  40b50a:	fisub  WORD PTR ds:0xdca91585
  40b510:	shl    BYTE PTR [ecx+0x50],cl
  40b513:	lds    esp,FWORD PTR [ecx-0x231174d5]
  40b519:	lock retf 
  40b51b:	(bad)  
  40b51c:	mov    WORD PTR [ebx+0x2fae55ae],ds
  40b522:	cmp    al,0x47
  40b524:	in     eax,dx
  40b525:	xchg   ebx,eax
  40b526:	adc    al,0x46
  40b528:	int3   
  40b529:	xor    ecx,DWORD PTR [edi-0x2]
  40b52c:	cdq    
  40b52d:	jmp    0x687d:0xf937dde8
  40b534:	add    eax,0xf594bf15
  40b539:	jb     0x40b4f5
  40b53b:	sub    al,BYTE PTR [edx]
  40b53d:	xchg   esi,eax
  40b53e:	daa    
  40b53f:	sbb    cl,BYTE PTR [esp+eiz*4]
  40b542:	or     eax,0x46e95a84
  40b547:	pusha  
  40b548:	ret    0x17f8
  40b54b:	mov    ecx,0x20448200
  40b550:	into   
  40b551:	cmp    eax,0x2600ebad
  40b556:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b557:	xchg   ecx,eax
  40b558:	lods   eax,DWORD PTR ds:[esi]
  40b559:	cs dec esi
  40b55b:	ds and al,0x11
  40b55e:	out    0xb1,al
  40b560:	call   0xa0d6127a
  40b565:	sar    DWORD PTR [edi-0x5b],1
  40b568:	lds    ecx,FWORD PTR [edx+0x59]
  40b56b:	ins    DWORD PTR es:[edi],dx
  40b56c:	mov    eax,ds:0x5f426161
  40b571:	fiadd  WORD PTR [eax+0x593cbe43]
  40b577:	pmaddwd mm5,mm1
  40b57a:	or     ecx,DWORD PTR [esi+0x7a703f63]
  40b580:	outs   dx,DWORD PTR ds:[esi]
  40b581:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b582:	lahf   
  40b583:	(bad)  
  40b584:	daa    
  40b585:	fs push ebp
  40b587:	or     ebp,edx
  40b589:	xor    al,0xe3
  40b58b:	mov    cl,0x36
  40b58d:	mov    ds:0x9601d822,eax
  40b592:	bound  ebp,QWORD PTR [ebp-0x27]
  40b595:	call   0xd7b5de72
  40b59a:	stc    
  40b59b:	(bad)  
  40b59d:	add    bl,BYTE PTR [ebx]
  40b59f:	add    ebp,DWORD PTR [esp+ebx*2-0x1ba025c2]
  40b5a6:	mov    edi,0xb3d01cda
  40b5ab:	mov    ch,al
  40b5ad:	ins    BYTE PTR es:[edi],dx
  40b5ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5af:	(bad)  
  40b5b0:	fcmove st,st(4)
  40b5b2:	dec    esp
  40b5b3:	xchg   ebx,eax
  40b5b4:	fild   QWORD PTR [edx+0x3fd69e2]
  40b5ba:	lds    eax,FWORD PTR [edi+0x68a54c81]
  40b5c0:	pop    edx
  40b5c1:	loop   0x40b58f
  40b5c3:	sahf   
  40b5c4:	jle    0x40b5b9
  40b5c6:	fbld   TBYTE PTR [esi-0x14]
  40b5c9:	(bad)  
  40b5ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5cb:	jno    0x40b5e6
  40b5cd:	in     al,0x18
  40b5cf:	jmp    0x5785b6e8
  40b5d4:	pop    esp
  40b5d5:	cmp    ah,dh
  40b5d7:	and    al,0x65
  40b5d9:	adc    DWORD PTR [edx],ebp
  40b5db:	or     al,0xe5
  40b5dd:	mov    WORD PTR [ebp-0x96cc17a],cs
  40b5e3:	cmp    al,0xc2
  40b5e5:	repnz enter 0xa8d4,0xdf
  40b5ea:	les    ebx,FWORD PTR [edi]
  40b5ec:	in     al,dx
  40b5ed:	aam    0x8c
  40b5ef:	and    DWORD PTR [eax+0x6b],esp
  40b5f2:	ret    0x8912
  40b5f5:	push   0xc8d62585
  40b5fa:	or     eax,0xa271c35d
  40b5ff:	fs push ss
  40b601:	xchg   edi,eax
  40b602:	jl     0x40b628
  40b604:	dec    edx
  40b605:	mov    WORD PTR [edx+0x67],?
  40b608:	mov    al,ds:0x4af9a876
  40b60d:	(bad)  
  40b60f:	mov    cl,BYTE PTR ds:0xb7caf2cd
  40b615:	push   ebp
  40b616:	xchg   esi,eax
  40b617:	popa   
  40b618:	sub    BYTE PTR [edi+0x48c90d22],ah
  40b61e:	neg    BYTE PTR [ebx-0x600076c3]
  40b624:	sbb    bh,al
  40b626:	sbb    DWORD PTR ds:0xc5663a89,ebp
  40b62c:	xor    al,0x0
  40b62e:	sbb    DWORD PTR [esp+eax*4-0xec4388c],edx
  40b635:	ret    0x2ddc
  40b638:	push   edx
  40b639:	std    
  40b63a:	adc    bh,BYTE PTR [edi-0xa667679]
  40b640:	xchg   BYTE PTR [edi],bh
  40b642:	push   ss
  40b643:	lahf   
  40b644:	(bad)  
  40b645:	leave  
  40b646:	adc    al,0x4c
  40b648:	mov    ah,BYTE PTR [ebp+edi*8-0xc1bb05f]
  40b64f:	cmp    al,0x2a
  40b651:	pop    ds
  40b652:	adc    ah,BYTE PTR [ebp+0x1cd0e6b1]
  40b658:	mov    bh,0xb9
  40b65a:	cmp    bl,BYTE PTR [ebx+0x3e]
  40b65d:	mov    ah,0x43
  40b65f:	jb     0x40b605
  40b661:	stc    
  40b662:	imul   ebx,DWORD PTR ss:[edi+0x66],0xfffffff1
  40b667:	or     eax,DWORD PTR [ecx+0xf]
  40b66a:	pushf  
  40b66b:	lea    esi,[esi-0x79e92a2d]
  40b671:	sahf   
  40b672:	cs jmp 0x40b69c
  40b675:	fsub   DWORD PTR [ebp+0x7b56b4b7]
  40b67b:	ins    BYTE PTR es:[edi],dx
  40b67c:	mov    ecx,0x963cee38
  40b681:	xchg   esi,eax
  40b682:	shl    BYTE PTR [ebp+0x552d1ec3],1
  40b688:	push   edi
  40b689:	clc    
  40b68a:	mov    ebp,0xc668469a
  40b68f:	mov    eax,0x852eff7
  40b694:	sbb    dh,BYTE PTR [ecx]
  40b696:	inc    eax
  40b697:	hlt    
  40b698:	pushf  
  40b699:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b69a:	push   0xb77c205a
  40b69f:	pop    esi
  40b6a0:	mov    ds:0xc1bcae66,al
  40b6a5:	push   esi
  40b6a6:	jnp    0x40b6f6
  40b6a8:	dec    eax
  40b6a9:	dec    ecx
  40b6aa:	sub    al,0xc1
  40b6ac:	outs   dx,DWORD PTR ds:[esi]
  40b6ad:	bound  edx,QWORD PTR [edx+0x73]
  40b6b0:	jae    0x40b709
  40b6b2:	and    bh,dh
  40b6b4:	cld    
  40b6b5:	xor    al,0x72
  40b6b7:	bound  eax,QWORD PTR [ecx]
  40b6b9:	sbb    al,0x51
  40b6bb:	sbb    bh,bl
  40b6bd:	leave  
  40b6be:	fs push 0xc4854c6
  40b6c4:	jg     0x40b649
  40b6c6:	add    BYTE PTR [eax],cl
  40b6c8:	dec    edx
  40b6c9:	hlt    
  40b6ca:	ret    0x1476
  40b6cd:	js     0x40b71a
  40b6cf:	or     bh,cl
  40b6d1:	iret   
  40b6d2:	add    al,0x96
  40b6d4:	dec    ch
  40b6d6:	and    ebp,DWORD PTR [eax+ecx*1+0x493b50fc]
  40b6dd:	push   0xfffffff4
  40b6df:	call   0x279a0c04
  40b6e4:	popa   
  40b6e5:	adc    eax,0xa5cb9d0
  40b6ea:	idiv   BYTE PTR [edx-0x294e7058]
  40b6f0:	sti    
  40b6f1:	stc    
  40b6f2:	inc    ebx
  40b6f3:	jne    0x40b6a7
  40b6f5:	sbb    DWORD PTR [ebx],esi
  40b6f7:	push   cs
  40b6f8:	ins    DWORD PTR es:[edi],dx
  40b6f9:	fst    st(5)
  40b6fb:	jmp    0x130c:0x7f5a9b43
  40b702:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b703:	xlat   BYTE PTR ds:[ebx]
  40b704:	adc    eax,0x3c6e027b
  40b709:	aam    0x87
  40b70b:	xor    bl,0x97
  40b70e:	int3   
  40b70f:	stos   DWORD PTR es:[edi],eax
  40b710:	sbb    al,ch
  40b712:	test   DWORD PTR [ebx],ebx
  40b714:	in     eax,0xda
  40b716:	jae    0x40b77c
  40b718:	pop    ebp
  40b719:	inc    esi
  40b71a:	out    0x9b,al
  40b71c:	add    bh,al
  40b71e:	xchg   edi,eax
  40b71f:	xchg   ebp,eax
  40b720:	mov    al,0x28
  40b722:	aam    0x6f
  40b724:	push   0xffffff81
  40b726:	call   0x5f6:0x20263a5f
  40b72d:	shl    DWORD PTR [ebp-0x4269e2df],0xfa
  40b734:	sub    al,0x68
  40b736:	ret    
  40b737:	pop    ds
  40b738:	pop    edi
  40b739:	and    edx,esi
  40b73b:	out    0xdb,eax
  40b73d:	fisttp QWORD PTR [esi+0x117f9ad0]
  40b743:	lods   al,BYTE PTR ds:[esi]
  40b744:	outs   dx,DWORD PTR ds:[esi]
  40b745:	or     ah,BYTE PTR [edi]
  40b747:	add    ch,BYTE PTR [esi-0x71]
  40b74a:	retf   
  40b74b:	ins    DWORD PTR es:[edi],dx
  40b74c:	std    
  40b74d:	(bad)  
  40b74e:	mov    ah,0x3c
  40b750:	mov    DWORD PTR [bp+si-0x50],ebx
  40b754:	mov    WORD PTR ds:0x80b725b0,ds
  40b75a:	pusha  
  40b75b:	sbb    BYTE PTR [esi-0x3e],dl
  40b75e:	aaa    
  40b75f:	push   esi
  40b760:	(bad)  
  40b761:	jbe    0x40b78f
  40b763:	in     al,dx
  40b764:	cmp    ebp,DWORD PTR [esi]
  40b766:	mov    cl,0xea
  40b768:	enter  0xf08a,0x44
  40b76c:	int3   
  40b76d:	xor    eax,0x93fc4d58
  40b772:	loope  0x40b7dc
  40b774:	lds    ebp,FWORD PTR [ebp+0x5b6015e8]
  40b77a:	inc    esi
  40b77b:	cmp    DWORD PTR [esi+0x1d],ecx
  40b77e:	xor    DWORD PTR [eax+0x16f29d0e],edi
  40b784:	xor    BYTE PTR [edi],ch
  40b786:	adc    al,BYTE PTR [edi+edx*8-0x52]
  40b78a:	xchg   ecx,eax
  40b78b:	pop    eax
  40b78c:	repnz pop esi
  40b78e:	arpl   dx,bx
  40b790:	pop    edi
  40b791:	jno    0x40b770
  40b793:	jle    0x40b7d0
  40b795:	out    0x33,al
  40b797:	or     DWORD PTR [ebx+ebp*8],edi
  40b79a:	aas    
  40b79b:	sub    al,0xca
  40b79d:	out    dx,al
  40b79e:	cs dec ecx
  40b7a0:	pop    edx
  40b7a1:	add    eax,0xe7c770bb
  40b7a6:	mov    eax,0x3f259f50
  40b7ab:	push   ebx
  40b7ac:	ja     0x40b7d8
  40b7ae:	jecxz  0x40b749
  40b7b0:	sub    edi,DWORD PTR [esi-0x5c]
  40b7b3:	imul   esp,DWORD PTR [ebx],0xffffff88
  40b7b6:	stos   BYTE PTR es:[edi],al
  40b7b7:	cmp    ecx,DWORD PTR [esi-0x78]
  40b7ba:	test   al,0x5c
  40b7bc:	jle    0x40b767
  40b7be:	add    ebx,DWORD PTR [ebx-0x18]
  40b7c1:	sbb    bh,BYTE PTR [ecx+0x406c1deb]
  40b7c7:	push   ecx
  40b7c8:	sbb    eax,0x4c0a76c7
  40b7cd:	stc    
  40b7ce:	ss cmp cl,BYTE PTR ds:[edi+eax*1+0x73]
  40b7d4:	imul   esi,edx,0x853914ce
  40b7da:	dec    esp
  40b7db:	xlat   BYTE PTR ds:[ebx]
  40b7dc:	out    0x1a,al
  40b7de:	xchg   BYTE PTR [edi],cl
  40b7e0:	inc    esp
  40b7e1:	push   edi
  40b7e2:	push   esp
  40b7e3:	jnp    0x40b7e3
  40b7e5:	in     eax,dx
  40b7e6:	(bad)  
  40b7e7:	retf   
  40b7e8:	out    dx,al
  40b7e9:	mov    eax,ds:0x92b2b0a0
  40b7ee:	mov    edi,0xc5d4dbea
  40b7f3:	repnz hlt 
  40b7f5:	add    ebp,DWORD PTR [esi-0x46df9261]
  40b7fb:	out    dx,al
  40b7fc:	call   0xa4d9c400
  40b801:	xor    al,0xa1
  40b803:	shl    BYTE PTR [ecx],0xb6
  40b806:	push   ebp
  40b807:	sbb    al,0x6d
  40b809:	in     al,dx
  40b80a:	adc    eax,0xe4dd4b09
  40b80f:	lds    eax,FWORD PTR [edx]
  40b811:	and    edi,ebx
  40b813:	enter  0x3f8d,0x78
  40b817:	jb     0x40b7f5
  40b819:	jp     0x40b7fa
  40b81b:	jno    0x40b7dc
  40b81d:	and    esi,eax
  40b81f:	aas    
  40b820:	jge    0x40b7c6
  40b822:	dec    edx
  40b823:	cmp    DWORD PTR [ebx+0x556ecb3c],ebp
  40b829:	enter  0x7bb9,0xdb
  40b82d:	xchg   ecx,eax
  40b82e:	int3   
  40b82f:	pop    es
  40b830:	sub    ch,ch
  40b832:	jbe    0x40b7fb
  40b834:	cmp    BYTE PTR [edi],ch
  40b836:	loop   0x40b7e0
  40b838:	xchg   esp,eax
  40b839:	jae    0x40b881
  40b83b:	and    BYTE PTR [edx+0x2a58fda],cl
  40b841:	mov    ah,0x43
  40b843:	adc    al,0xed
  40b845:	aad    0xef
  40b847:	dec    esp
  40b848:	xlat   BYTE PTR ds:[ebx]
  40b849:	addr16 call 0xcbfd:0x592e33b8
  40b851:	arpl   WORD PTR [ecx-0x4],cx
  40b854:	sub    bl,BYTE PTR [ecx]
  40b856:	push   eax
  40b857:	xor    eax,0xd63a4b2d
  40b85c:	pop    edx
  40b85d:	mov    edx,esp
  40b85f:	pop    ss
  40b860:	pop    edx
  40b861:	test   DWORD PTR [ecx],0xb264dbeb
  40b867:	mov    bh,0x4c
  40b869:	ret    0x79a5
  40b86c:	push   edx
  40b86d:	fsubr  DWORD PTR [ecx]
  40b86f:	adc    eax,0x86aed800
  40b874:	ins    DWORD PTR es:[edi],dx
  40b875:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b876:	xchg   ebx,eax
  40b877:	xor    ecx,ebp
  40b879:	aaa    
  40b87a:	dec    edi
  40b87b:	stos   DWORD PTR es:[edi],eax
  40b87c:	inc    esp
  40b87d:	imul   edx,ebx,0xffffff9a
  40b880:	ds rcr edx,cl
  40b883:	or     bh,BYTE PTR [edi]
  40b885:	mov    BYTE PTR [ecx+esi*1],0xe5
  40b889:	ds lahf 
  40b88b:	mov    dl,bl
  40b88d:	call   0xaa7a:0x8d066226
  40b894:	aas    
  40b895:	das    
  40b896:	loop   0x40b909
  40b898:	outs   dx,BYTE PTR ds:[esi]
  40b899:	add    al,ch
  40b89b:	pop    ds
  40b89c:	xor    eax,0xe54df1f1
  40b8a1:	lea    eax,fs:[ebp-0x1]
  40b8a5:	dec    esi
  40b8a6:	lods   al,BYTE PTR ds:[esi]
  40b8a7:	xchg   esi,eax
  40b8a8:	and    eax,0x9e29b152
  40b8ad:	fsubr  DWORD PTR [esi+eiz*4-0x340533b5]
  40b8b4:	xchg   edi,eax
  40b8b5:	jmp    0x9ea2d9ef
  40b8ba:	push   cs
  40b8bb:	xor    al,0xa8
  40b8bd:	out    0xf,eax
  40b8bf:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40b8c1:	jmp    0xb8c:0x560cfb0f
  40b8c8:	data16 jno 0x40b887
  40b8cb:	mov    esp,0xd9f21e25
  40b8d0:	xchg   esi,ebx
  40b8d2:	stc    
  40b8d3:	ret    0xc6cf
  40b8d6:	(bad)  
  40b8d7:	leave  
  40b8d8:	sbb    al,0x20
  40b8da:	sbb    eax,0x633e544a
  40b8df:	or     ecx,DWORD PTR [edi-0x66]
  40b8e2:	call   0x4f262b1
  40b8e7:	out    0x7b,eax
  40b8e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8ea:	pop    esp
  40b8eb:	pop    ss
  40b8ec:	inc    edi
  40b8ed:	push   ebx
  40b8ee:	pop    ebx
  40b8ef:	fld    TBYTE PTR [ebx-0x49]
  40b8f2:	mov    fs,WORD PTR [ecx+0x3b]
  40b8f5:	xchg   ecx,eax
  40b8f6:	outs   dx,DWORD PTR ds:[esi]
  40b8f7:	mov    eax,DWORD PTR [esi*4+0x7909fec5]
  40b8fe:	mov    dh,BYTE PTR [ecx]
  40b900:	and    eax,0x69c44085
  40b905:	aad    0x8b
  40b907:	xchg   edx,eax
  40b908:	ret    
  40b909:	cld    
  40b90a:	and    al,0x43
  40b90c:	aaa    
  40b90d:	test   DWORD PTR cs:[ebx],eax
  40b910:	cmp    edx,DWORD PTR [ebx+0x31]
  40b913:	xchg   esp,eax
  40b914:	jns    0x40b8bf
  40b916:	xchg   edi,eax
  40b917:	out    dx,al
  40b918:	push   ebp
  40b919:	jne    0x40b965
  40b91b:	push   edx
  40b91c:	stc    
  40b91d:	jg     0x40b8f4
  40b91f:	inc    edi
  40b920:	xchg   ebx,eax
  40b921:	mov    BYTE PTR [edi],dl
  40b923:	lahf   
  40b924:	sub    esi,edx
  40b926:	fcomp  QWORD PTR [eax+0x715326b0]
  40b92c:	xor    al,0xac
  40b92e:	inc    esi
  40b92f:	test   DWORD PTR [ebx-0x75],ebx
  40b932:	iret   
  40b933:	retf   0xad86
  40b936:	cmp    esi,ebx
  40b938:	xor    DWORD PTR [ebp-0x670856c1],0xffffffe8
  40b93f:	add    BYTE PTR [edx],0xe2
  40b942:	xor    BYTE PTR [ecx+eiz*4+0x764bf590],0x29
  40b94a:	sub    al,0xa8
  40b94c:	in     al,0x1e
  40b94e:	dec    edi
  40b94f:	xchg   ebp,eax
  40b950:	jp     0x40b95d
  40b952:	pop    ebp
  40b953:	rcl    DWORD PTR ds:0x1439cf8f,0xdc
  40b95a:	mov    eax,ds:0x814c53bc
  40b95f:	jp     0x40b92e
  40b961:	arpl   dx,si
  40b963:	jge    0x40b8fa
  40b965:	jo     0x40b9cf
  40b967:	mov    ebp,0xd6acc1c
  40b96c:	jcxz   0x40b901
  40b96f:	std    
  40b970:	mov    dl,0xeb
  40b973:	jno    0x40b93c
  40b975:	aam    0x73
  40b977:	(bad)  
  40b978:	mov    esp,0x83ce0802
  40b97d:	fmul   DWORD PTR [esi]
  40b97f:	das    
  40b980:	(bad)  
  40b981:	(bad)  
  40b982:	sar    DWORD PTR [eax+0x66],cl
  40b985:	pop    ecx
  40b986:	adc    al,bh
  40b988:	es repnz pop eax
  40b98b:	aas    
  40b98c:	dec    esi
  40b98d:	ja     0x40b971
  40b98f:	xor    al,0x42
  40b991:	sbb    DWORD PTR [edx],esp
  40b993:	mov    eax,ds:0xe24756ca
  40b998:	sbb    dh,BYTE PTR [edx+0x61d7f197]
  40b99e:	xchg   edi,eax
  40b99f:	cld    
  40b9a0:	out    dx,eax
  40b9a1:	fistp  WORD PTR [eax]
  40b9a3:	push   cs
  40b9a4:	push   cs
  40b9a5:	jmp    0x80d01326
  40b9aa:	stos   DWORD PTR es:[edi],eax
  40b9ab:	dec    edx
  40b9ac:	and    edx,0x1e
  40b9af:	pusha  
  40b9b0:	jno    0x40b959
  40b9b2:	add    DWORD PTR [edi+0x71b10f68],edi
  40b9b8:	stc    
  40b9b9:	(bad)  
  40b9ba:	out    dx,al
  40b9bb:	mov    ds:0x4158503,al
  40b9c0:	std    
  40b9c1:	loop   0x40ba20
  40b9c3:	mov    dl,0xe6
  40b9c5:	out    0x60,al
  40b9c7:	xlat   BYTE PTR ds:[ebx]
  40b9c8:	ja     0x40b980
  40b9ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9cb:	and    eax,0xaa39ba82
  40b9d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9d1:	test   ebp,esi
  40b9d3:	and    eax,0xf5442e0b
  40b9d8:	push   ss
  40b9d9:	sbb    DWORD PTR [ecx-0x2b54acc6],edi
  40b9df:	in     eax,dx
  40b9e0:	pop    eax
  40b9e1:	repnz repnz cwde 
  40b9e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9e5:	enter  0xf968,0x51
  40b9e9:	mov    ebx,0x9e1299d4
  40b9ee:	pop    ebp
  40b9ef:	xchg   edi,eax
  40b9f0:	sub    al,0x66
  40b9f2:	fldcw  WORD PTR [edi+edx*1+0xbc4cc5f]
  40b9f9:	sbb    al,0xed
  40b9fb:	sub    BYTE PTR [edi+eiz*1],0x1a
  40b9ff:	into   
  40ba00:	jno    0x40b9c6
  40ba02:	cmp    eax,0x888360dd
  40ba07:	(bad)  
  40ba08:	scas   al,BYTE PTR es:[edi]
  40ba09:	jns    0x40ba2c
  40ba0b:	mov    DWORD PTR [edi],edx
  40ba0d:	repz dec edx
  40ba0f:	mov    ebx,0x8dd7576
  40ba14:	jmp    0x3d70:0xb51b83c7
  40ba1b:	xchg   edi,eax
  40ba1c:	ror    DWORD PTR [esi+0x4b],cl
  40ba1f:	adc    eax,0xb48bc9c1
  40ba24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba25:	pop    ebx
  40ba26:	jae    0x40b9ae
  40ba28:	push   ss
  40ba29:	jge    0x40b9cf
  40ba2b:	push   ebx
  40ba2c:	mov    dh,0xd0
  40ba2e:	push   0x7d
  40ba30:	hlt    
  40ba31:	call   0xe981:0x19c51fc7
  40ba38:	loope  0x40baaf
  40ba3a:	sub    DWORD PTR ds:0xf88ea1cb,ebp
  40ba40:	call   0x52d27d08
  40ba45:	mov    bl,0x4b
  40ba47:	stc    
  40ba48:	call   0x94bb4751
  40ba4d:	in     al,dx
  40ba4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba4f:	out    0x1a,al
  40ba51:	inc    esp
  40ba52:	cmp    ah,BYTE PTR [edx+0x436e8ba7]
  40ba58:	dec    ebp
  40ba59:	inc    ebx
  40ba5a:	lods   eax,DWORD PTR ds:[esi]
  40ba5b:	repnz mov esp,esi
  40ba5e:	scas   al,BYTE PTR es:[edi]
  40ba5f:	call   0x31f2:0x1fcfcf07
  40ba66:	test   BYTE PTR [edx+eiz*4-0x67],dl
  40ba6a:	sbb    al,0xa8
  40ba6c:	push   esi
  40ba6d:	sub    eax,DWORD PTR [edx]
  40ba6f:	aaa    
  40ba70:	jl     0x40baa2
  40ba72:	arpl   WORD PTR [ebp+0x5725b57c],si
  40ba78:	xor    DWORD PTR [eax+0x79fa4a7d],ebp
  40ba7e:	daa    
  40ba7f:	sbb    al,0x97
  40ba81:	sbb    bh,BYTE PTR [edi+0x7a]
  40ba84:	pop    esp
  40ba85:	adc    eax,0x2c30665e
  40ba8a:	jbe    0x40bacc
  40ba8c:	std    
  40ba8d:	iret   
  40ba8e:	mov    dl,0x7c
  40ba90:	gs inc edi
  40ba92:	adc    BYTE PTR [edx+0x72f37c93],ch
  40ba98:	jno    0x40ba30
  40ba9a:	lds    eax,FWORD PTR [eax-0x757aa3b6]
  40baa0:	fucomp st(0)
  40baa2:	xlat   BYTE PTR ds:[ebx]
  40baa3:	or     DWORD PTR [ebx-0x4],edx
  40baa6:	arpl   WORD PTR [edi],di
  40baa8:	repnz pop esp
  40baaa:	sahf   
  40baab:	xor    ch,BYTE PTR [eax+0x15]
  40baae:	mov    ecx,0xf69fe88d
  40bab3:	imul   esp,ebx,0xa95357cb
  40bab9:	ins    DWORD PTR es:[edi],dx
  40baba:	pop    es
  40babb:	clc    
  40babc:	mov    eax,ds:0xdb0ae7fd
  40bac1:	std    
  40bac2:	xchg   edi,eax
  40bac3:	aas    
  40bac4:	and    BYTE PTR [ecx-0x609d4cd6],ch
  40baca:	or     al,0x45
  40bacc:	ds div dh
  40bacf:	inc    esi
  40bad0:	mov    DWORD PTR [edx],ebp
  40bad2:	outs   dx,DWORD PTR ds:[esi]
  40bad3:	add    DWORD PTR [edi+0x4a],esp
  40bad6:	dec    ebp
  40bad7:	dec    ecx
  40bad8:	int    0x2
  40bada:	push   ebx
  40badb:	pop    edx
  40badc:	imul   ebx,DWORD PTR [ecx-0x52],0x68b23abb
  40bae3:	adc    eax,0x878520cd
  40bae8:	xor    al,0x37
  40baea:	jge    0x40ba89
  40baec:	cdq    
  40baed:	retf   0xb22b
  40baf0:	sbb    al,0x45
  40baf2:	mov    ecx,0x6691cc24
  40baf7:	ja     0x40baf6
  40baf9:	pop    ecx
  40bafa:	and    al,0x58
  40bafc:	loopne 0x40bb2a
  40bafe:	pop    eax
  40baff:	je     0x40bb47
  40bb01:	iret   
  40bb02:	jns    0x40baad
  40bb04:	xor    al,0x26
  40bb06:	rcr    esi,cl
  40bb08:	xor    DWORD PTR [ecx],edx
  40bb0a:	add    ebx,DWORD PTR [esi-0x1d]
  40bb0d:	das    
  40bb0e:	(bad)  
  40bb0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb10:	in     eax,dx
  40bb11:	retf   0x9435
  40bb14:	and    al,0x4f
  40bb16:	cmp    al,BYTE PTR [ebp+0x22b1feaa]
  40bb1c:	pop    ebx
  40bb1d:	push   cs
  40bb1e:	xor    DWORD PTR [ecx-0x1e],0xffffffde
  40bb22:	xor    ah,BYTE PTR [edi-0x2d]
  40bb25:	jmp    0x335d:0x43939f8c
  40bb2c:	jb     0x40bbad
  40bb2e:	not    BYTE PTR [edi-0x7fe88253]
  40bb34:	gs xor al,0x70
  40bb37:	sub    BYTE PTR [ebx],bl
  40bb39:	jmp    0x8baa7809
  40bb3e:	mov    esi,0x6c720a95
  40bb43:	mov    esi,0x3f4b3b70
  40bb48:	das    
  40bb49:	push   eax
  40bb4a:	outs   dx,DWORD PTR ds:[esi]
  40bb4b:	sbb    cl,BYTE PTR [edi-0x26]
  40bb4e:	cmp    edx,DWORD PTR [ebx]
  40bb50:	xchg   ebx,eax
  40bb51:	dec    ebp
  40bb52:	je     0x40bb7a
  40bb54:	iret   
  40bb55:	dec    ebp
  40bb56:	dec    ecx
  40bb57:	pop    edx
  40bb58:	mov    ebp,0xee606221
  40bb5d:	sbb    ah,BYTE PTR ds:0x18bcfe31
  40bb63:	mov    edi,DWORD PTR [ebp-0x3c311678]
  40bb69:	mov    ebp,0x955767bd
  40bb6e:	and    esp,DWORD PTR [esi]
  40bb70:	pop    ss
  40bb71:	mov    edx,0x97ab7960
  40bb76:	lds    edi,FWORD PTR ss:[esi+esi*4-0x6c473c97]
  40bb7e:	pop    edi
  40bb7f:	push   edi
  40bb80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb81:	xchg   ebp,eax
  40bb82:	mov    ebp,0xcdcf9588
  40bb87:	mov    ah,0x8b
  40bb89:	mov    ss,WORD PTR [edi+0x15a3b946]
  40bb8f:	add    dl,BYTE PTR ds:0xb106f633
  40bb95:	neg    DWORD PTR [ebx-0x352b2488]
  40bb9b:	jp     0x40bb3d
  40bb9d:	and    dh,dh
  40bb9f:	ficomp DWORD PTR [edi+0x4379d654]
  40bba5:	test   edx,esp
  40bba7:	shl    DWORD PTR [edx],0xb9
  40bbaa:	pop    edx
  40bbab:	cld    
  40bbac:	mov    ebx,0xffd34cac
  40bbb1:	jmp    0xb5d1cf2c
  40bbb6:	cmp    ebp,DWORD PTR [esp+ecx*2-0x29]
  40bbba:	call   0x54ba:0xe887bcb1
  40bbc1:	xchg   esi,eax
  40bbc2:	xor    eax,0x54b3b635
  40bbc7:	daa    
  40bbc8:	ins    DWORD PTR es:[edi],dx
  40bbc9:	sbb    bh,BYTE PTR [edi+0x6b25bcb7]
  40bbcf:	ss cs ins DWORD PTR es:[edi],dx
  40bbd2:	add    al,0xda
  40bbd4:	cmp    edx,DWORD PTR [ecx+edi*2]
  40bbd7:	aaa    
  40bbd8:	mov    bl,0xdb
  40bbda:	inc    ebx
  40bbdb:	es dec ebp
  40bbdd:	(bad)  
  40bbde:	sbb    BYTE PTR [ebx+0x63f2d1ed],al
  40bbe4:	mov    bh,0xf
  40bbe6:	sub    edx,eax
  40bbe8:	adc    eax,0xaeda2dc2
  40bbed:	lea    edi,[ebx]
  40bbef:	add    bl,al
  40bbf1:	mov    ch,BYTE PTR [esi+0x1a5e1d4f]
  40bbf7:	adc    al,0x30
  40bbf9:	pop    ebp
  40bbfa:	xchg   esp,eax
  40bbfb:	push   0x8790cfc4
  40bc00:	cld    
  40bc01:	stc    
  40bc02:	mov    DWORD PTR [ecx+0x19],edx
  40bc05:	fst    DWORD PTR [ebx-0x7b1f25b6]
  40bc0b:	push   esp
  40bc0c:	mov    WORD PTR [eax-0x30415f15],es
  40bc12:	hlt    
  40bc13:	jge    0x40bc4e
  40bc15:	pavgb  mm7,mm6
  40bc18:	not    eax
  40bc1a:	jbe    0x40bbad
  40bc1c:	xchg   edi,eax
  40bc1d:	sti    
  40bc1e:	dec    edx
  40bc1f:	inc    BYTE PTR [esi+0xe]
  40bc22:	sbb    al,0xff
  40bc24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc25:	dec    ebp
  40bc26:	dec    eax
  40bc27:	mov    cl,0x2c
  40bc29:	sbb    DWORD PTR [esi-0x43],eax
  40bc2c:	inc    ebx
  40bc2d:	sti    
  40bc2e:	inc    edx
  40bc2f:	aam    0xb7
  40bc31:	pop    ds
  40bc32:	(bad)  
  40bc33:	mov    esi,DWORD PTR [edi-0x19]
  40bc36:	mov    ds:0x2900bb68,al
  40bc3b:	xor    esp,DWORD PTR [eax+eiz*1]
  40bc3e:	pop    ss
  40bc3f:	xor    BYTE PTR ss:[edx+edx*1-0x12],al
  40bc44:	pusha  
  40bc45:	int3   
  40bc46:	(bad)  
  40bc47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc48:	mov    esi,DWORD PTR [ebx-0x43]
  40bc4b:	xor    BYTE PTR [esi+0x1c],ch
  40bc4e:	mov    esi,0x2d5bfd5b
  40bc53:	jp     0x40bc54
  40bc55:	ds daa 
  40bc57:	dec    edi
  40bc58:	inc    esi
  40bc59:	dec    edi
  40bc5a:	add    ebx,DWORD PTR [esi+edi*4-0x54577554]
  40bc61:	xchg   esi,eax
  40bc62:	enter  0x880f,0xf8
  40bc66:	push   ecx
  40bc67:	mov    dl,0x3b
  40bc69:	jl     0x40bc89
  40bc6b:	jl     0x40bc42
  40bc6d:	or     dh,bh
  40bc6f:	jns    0x40bc25
  40bc71:	pop    ds
  40bc72:	loop   0x40bc6e
  40bc74:	stos   DWORD PTR es:[edi],eax
  40bc75:	popa   
  40bc76:	sbb    bl,BYTE PTR [esi+0x4ecdaba]
  40bc7c:	push   cs
  40bc7d:	ds mov cl,0xb5
  40bc80:	mov    esp,0x80f2b9d2
  40bc85:	jo     0x40bcd4
  40bc87:	and    al,0x19
  40bc89:	add    eax,0x82311e99
  40bc8e:	xor    al,0x5a
  40bc90:	enter  0x2f67,0xd0
  40bc94:	lahf   
  40bc95:	jbe    0x40bc70
  40bc97:	add    eax,0x8f588424
  40bc9c:	fld    DWORD PTR [ecx+eiz*1+0x31204fd7]
  40bca3:	loop   0x40bc4d
  40bca5:	leave  
  40bca6:	dec    ecx
  40bca7:	sahf   
  40bca8:	(bad)  
  40bca9:	iret   
  40bcaa:	xchg   ebx,eax
  40bcab:	mov    cl,0x72
  40bcad:	and    al,0x56
  40bcaf:	mov    edx,0x6143d4ce
  40bcb4:	add    al,0xb
  40bcb6:	les    ebp,FWORD PTR [edi-0x96e590d]
  40bcbc:	xchg   edi,eax
  40bcbd:	xor    dh,BYTE PTR [ecx-0x56]
  40bcc0:	mov    ebx,0xcbd8f9f6
  40bcc5:	add    DWORD PTR [eax+0x72],esp
  40bcc8:	shr    DWORD PTR [esi],cl
  40bcca:	inc    edi
  40bccb:	xlat   BYTE PTR ds:[ebx]
  40bccc:	dec    ebp
  40bccd:	lds    esp,FWORD PTR [esp+edi*8]
  40bcd0:	adc    bh,bl
  40bcd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcd3:	jno    0x40bcd6
  40bcd5:	push   ebp
  40bcd6:	jecxz  0x40bc69
  40bcd8:	or     al,0x32
  40bcda:	fcmovnu st,st(4)
  40bcdc:	nop    ebp
  40bcdf:	aas    
  40bce0:	outs   dx,BYTE PTR ds:[esi]
  40bce1:	bound  edi,QWORD PTR [ebp+0x35]
  40bce4:	test   BYTE PTR [eax+0x236787f2],cl
  40bcea:	xchg   esi,eax
  40bceb:	xor    BYTE PTR [ecx-0x1460f91d],dh
  40bcf1:	pop    ecx
  40bcf2:	jnp    0x40bcb1
  40bcf4:	push   es
  40bcf5:	bound  ebx,QWORD PTR [edx-0x6fd2d66e]
  40bcfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcfc:	mov    edx,0x8cae7bd0
  40bd01:	jp     0x40bd02
  40bd03:	aaa    
  40bd04:	cli    
  40bd05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd06:	dec    eax
  40bd07:	cmp    BYTE PTR [edi+0x3e5d9c90],0x4
  40bd0e:	jg     0x40bcd1
  40bd10:	or     al,0xc3
  40bd12:	xor    eax,0xabf81629
  40bd17:	test   eax,0xa29ae6e5
  40bd1c:	daa    
  40bd1d:	cmp    DWORD PTR [ebx-0x63834046],0xf97270f2
  40bd27:	pusha  
  40bd28:	mov    ebx,0x3c803ea
  40bd2d:	or     BYTE PTR [edx-0x53],dh
  40bd30:	popf   
  40bd31:	retf   
  40bd32:	rol    DWORD PTR [ebx],cl
  40bd34:	mov    BYTE PTR [esi+0x20f5d96b],al
  40bd3a:	xor    dh,dl
  40bd3c:	div    BYTE PTR [ebx+0x4c]
  40bd3f:	and    edx,DWORD PTR [esp+edx*2-0x414ac431]
  40bd46:	or     BYTE PTR [eax-0x22],0x2a
  40bd4a:	mov    edx,0x5c6a47cf
  40bd4f:	mov    ds:0xbe49925a,al
  40bd54:	push   cs
  40bd55:	inc    ebx
  40bd56:	(bad)  
  40bd58:	cmp    BYTE PTR [ebx+0x504b327c],ch
  40bd5e:	ja     0x40bd42
  40bd60:	rcl    DWORD PTR [edi+0x427ecaa3],1
  40bd66:	(bad)  
  40bd67:	fld    DWORD PTR [edi+0x1cbc164b]
  40bd6d:	pop    ecx
  40bd6e:	sbb    al,0xe4
  40bd70:	mov    bh,0xf6
  40bd72:	in     eax,dx
  40bd73:	inc    edx
  40bd74:	push   ds
  40bd75:	mov    eax,ds:0x2110d7c
  40bd7a:	sub    eax,DWORD PTR [edx]
  40bd7c:	rol    DWORD PTR [ebx+0x3f],1
  40bd7f:	sub    esi,ebp
  40bd81:	adc    ebx,eax
  40bd83:	jp     0x40bd46
  40bd85:	bound  esi,QWORD PTR [ebp-0x22]
  40bd88:	cli    
  40bd89:	outs   dx,DWORD PTR ds:[esi]
  40bd8a:	adc    eax,0x345b5335
  40bd8f:	(bad)  
  40bd91:	push   es
  40bd92:	mov    BYTE PTR [ebp-0x22],bl
  40bd95:	xor    DWORD PTR [edi],0xffffff96
  40bd98:	cmc    
  40bd99:	call   0xe60e88c8
  40bd9e:	ret    
  40bd9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bda0:	into   
  40bda1:	sub    ch,BYTE PTR [edx]
  40bda3:	xchg   esi,eax
  40bda4:	push   es
  40bda5:	sbb    eax,DWORD PTR [ebx]
  40bda7:	inc    eax
  40bda8:	or     eax,0x44c372a5
  40bdad:	pop    edi
  40bdae:	push   es
  40bdaf:	adc    DWORD PTR [ecx+edi*4+0x3a],edx
  40bdb3:	xor    edx,esi
  40bdb5:	lods   eax,DWORD PTR ds:[esi]
  40bdb6:	lods   eax,DWORD PTR ds:[esi]
  40bdb7:	xchg   BYTE PTR [ecx+0x3335117e],al
  40bdbd:	lods   eax,DWORD PTR ds:[esi]
  40bdbe:	xchg   edx,eax
  40bdbf:	addr16 aam 0x13
  40bdc2:	xor    BYTE PTR [ebx+eiz*8+0x51],ch
  40bdc6:	out    dx,eax
  40bdc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdc8:	ins    DWORD PTR es:[edi],dx
  40bdc9:	inc    edx
  40bdca:	sub    esp,ebp
  40bdcc:	jno    0x40be31
  40bdce:	scas   eax,DWORD PTR es:[edi]
  40bdcf:	xor    DWORD PTR [ecx+0x3c],ecx
  40bdd2:	sub    ebx,DWORD PTR [edx-0x7896f743]
  40bdd8:	add    eax,0x518c4853
  40bddd:	lods   eax,DWORD PTR ds:[esi]
  40bdde:	out    0xe6,eax
  40bde0:	stos   DWORD PTR es:[edi],eax
  40bde1:	into   
  40bde2:	jl     0x40bd90
  40bde4:	and    al,0x44
  40bde6:	adc    DWORD PTR [ebp+0x38783937],esp
  40bdec:	jmp    0xee36:0x39f7c63e
  40bdf3:	loopne 0x40bdb0
  40bdf5:	ret    
  40bdf6:	test   eax,0x6befd04b
  40bdfb:	dec    esi
  40bdfc:	mov    ds:0xcffef3f7,al
  40be01:	jne    0x40bd9c
  40be03:	push   ds
  40be04:	int    0x8d
  40be06:	std    
  40be07:	retf   0xcac2
  40be0a:	sub    ah,BYTE PTR [ebx]
  40be0c:	xor    eax,0x3735e136
  40be11:	enter  0xa9fd,0x55
  40be15:	adc    al,0x78
  40be17:	jl     0x40bda6
  40be19:	adc    al,ah
  40be1b:	add    ch,ah
  40be1d:	sub    BYTE PTR [esi-0x35],ah
  40be20:	sbb    eax,0x92a06eb7
  40be25:	add    BYTE PTR [ebx],dl
  40be27:	jle    0x40be7e
  40be29:	call   0x7c37:0x783bbdc1
  40be30:	pop    es
  40be31:	inc    esi
  40be32:	cmp    edx,DWORD PTR [ecx-0x7ab2e740]
  40be38:	mov    ds:0xcffab9bf,eax
  40be3d:	sbb    al,0x98
  40be3f:	xor    al,0xdf
  40be41:	push   esi
  40be42:	pushaw 
  40be44:	inc    esi
  40be45:	mov    DWORD PTR [ecx+0x12],edx
  40be48:	xchg   esp,eax
  40be49:	or     dl,BYTE PTR [ebx-0x7808e391]
  40be4f:	cmp    BYTE PTR [ebp+0x3c],ah
  40be52:	(bad)  
  40be53:	adc    eax,ebp
  40be55:	loope  0x40be8f
  40be57:	cmp    bh,al
  40be59:	fsub   st,st(2)
  40be5b:	dec    edx
  40be5c:	push   edi
  40be5d:	fdivr  DWORD PTR [eax-0x53]
  40be60:	shl    bl,cl
  40be62:	iret   
  40be63:	lock sub dl,BYTE PTR [edx+0x3239af6d]
  40be6a:	call   0xf202:0xeb66681a
  40be71:	sar    BYTE PTR [edi+0x4d9e6639],cl
  40be77:	jno    0x3d4fad00
  40be7d:	ficomp DWORD PTR [esi+0x41]
  40be80:	into   
  40be81:	pop    ebx
  40be82:	cmp    ch,al
  40be84:	test   BYTE PTR [ecx+0x3a],bh
  40be87:	scas   eax,DWORD PTR es:[edi]
  40be88:	inc    esp
  40be89:	jecxz  0x40be41
  40be8b:	cmp    BYTE PTR [ebx+0x1a],0x36
  40be8f:	ins    BYTE PTR es:[edi],dx
  40be90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be91:	and    edx,ebx
  40be93:	xor    dl,dh
  40be95:	pusha  
  40be96:	mov    ah,0x6a
  40be98:	jge    0x40bec1
  40be9a:	jg     0x40bed8
  40be9c:	gs jmp 0x40bf08
  40be9f:	retf   
  40bea0:	xlat   BYTE PTR ds:[ebx]
  40bea1:	ins    BYTE PTR es:[edi],dx
  40bea2:	push   esp
  40bea3:	dec    esp
  40bea4:	in     eax,0x6c
  40bea6:	ret    
  40bea7:	rol    DWORD PTR [eax+0x14],1
  40beaa:	repz test DWORD PTR [ecx],esi
  40bead:	mov    bl,0xb7
  40beaf:	pop    ss
  40beb0:	aad    0x60
  40beb2:	aaa    
  40beb3:	sbb    BYTE PTR [edi],0x4f
  40beb6:	(bad)  
  40beb8:	jmp    0x7510:0xf7636804
  40bebf:	lea    esi,ds:0x42005a36
  40bec6:	fdivp  st(5),st
  40bec8:	adc    DWORD PTR [esi],edx
  40beca:	(bad)  
  40becb:	call   DWORD PTR [ebp+0x18c6e330]
  40bed1:	mov    gs,WORD PTR [edx+0x13]
  40bed4:	aas    
  40bed5:	jo     0x40bea8
  40bed7:	cli    
  40bed8:	ins    BYTE PTR es:[edi],dx
  40bed9:	std    
  40beda:	cld    
  40bedb:	xchg   edx,eax
  40bedc:	cmc    
  40bedd:	xor    al,0xf4
  40bedf:	mov    bl,0x1b
  40bee1:	dec    esp
  40bee2:	inc    ecx
  40bee3:	inc    esp
  40bee4:	aaa    
  40bee5:	adc    ch,bl
  40bee7:	out    dx,eax
  40bee8:	dec    ecx
  40bee9:	pop    eax
  40beea:	inc    ecx
  40beeb:	sub    DWORD PTR [ecx+0x4ab0e063],esp
  40bef1:	cwde   
  40bef2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bef3:	and    ah,BYTE PTR [esi+0x71b0f32]
  40bef9:	mov    ebp,0xb5b1c565
  40befe:	pushf  
  40beff:	xor    eax,0x7ab529d9
  40bf04:	or     DWORD PTR [ebp+0xdec7792],0xffffffbe
  40bf0b:	mov    WORD PTR ds:0x7a1bc52f,?
  40bf11:	aaa    
  40bf12:	and    eax,0x33cb63dc
  40bf17:	arpl   WORD PTR [edi+0x6e45181e],dx
  40bf1d:	xchg   edi,eax
  40bf1e:	inc    esp
  40bf1f:	fmulp  st(1),st
  40bf21:	mov    ds:0x5e2a9098,eax
  40bf26:	(bad)  [ecx+ecx*2]
  40bf29:	in     al,0xfa
  40bf2b:	mov    ch,BYTE PTR [eax]
  40bf2d:	dec    esp
  40bf2e:	fs in  al,dx
  40bf30:	pop    es
  40bf31:	and    DWORD PTR [ebx],ebp
  40bf33:	enter  0x873c,0x73
  40bf37:	inc    edi
  40bf38:	mov    esi,0x3a6627d7
  40bf3d:	sbb    al,0x81
  40bf3f:	(bad)
  40bf42:	out    0x51,al
  40bf44:	sbb    dh,al
  40bf46:	dec    edx
  40bf47:	shl    eax,cl
  40bf49:	rol    DWORD PTR [ecx],1
  40bf4b:	dec    edx
  40bf4c:	xor    ch,BYTE PTR [ebp-0x1538cba3]
  40bf52:	adc    ebx,edi
  40bf54:	sub    al,0xe8
  40bf56:	outs   dx,DWORD PTR ds:[esi]
  40bf57:	stc    
  40bf58:	xchg   esi,eax
  40bf59:	sub    edx,ecx
  40bf5b:	or     DWORD PTR [esi+0x5c2101c4],ecx
  40bf61:	add    esp,eax
  40bf63:	sahf   
  40bf64:	fstp   DWORD PTR [ebp-0x10e930d7]
  40bf6a:	xchg   ecx,eax
  40bf6b:	sbb    eax,0x26ae6bba
  40bf70:	repz arpl bp,dx
  40bf73:	lahf   
  40bf74:	xor    dl,bh
  40bf76:	push   esp
  40bf77:	pop    esi
  40bf78:	lahf   
  40bf79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf7a:	jecxz  0x40bfdb
  40bf7c:	out    dx,eax
  40bf7d:	sbb    esi,DWORD PTR [ebx+eax*1-0x80]
  40bf81:	sub    BYTE PTR [edx-0x1b],cl
  40bf84:	and    ebp,DWORD PTR [ebp-0x63d6116d]
  40bf8a:	jb     0x40bfae
  40bf8c:	cmp    BYTE PTR [edi-0x6af8c9d4],ch
  40bf92:	pusha  
  40bf93:	sub    DWORD PTR [ecx],0x5b
  40bf96:	paddw  mm2,QWORD PTR [ebp-0x2f1a3f1b]
  40bf9d:	loop   0x40bf28
  40bf9f:	inc    esi
  40bfa0:	sbb    cl,BYTE PTR [ebx]
  40bfa2:	add    DWORD PTR [ebp-0x4f],0x19e0ec6
  40bfa9:	dec    edi
  40bfaa:	test   BYTE PTR [eax+ebp*2-0x2],0x9d
  40bfaf:	mov    WORD PTR [ecx+0xd],ss
  40bfb2:	dec    esi
  40bfb3:	sub    BYTE PTR [esi],bh
  40bfb5:	pop    eax
  40bfb6:	sbb    cl,BYTE PTR [ecx+edx*8+0xde440df]
  40bfbd:	sbb    esi,DWORD PTR [edi+eax*8+0x481c2f69]
  40bfc4:	shr    DWORD PTR [ecx],1
  40bfc6:	sbb    eax,0xd7a7410b
  40bfcb:	sahf   
  40bfcc:	call   0x42c19585
  40bfd1:	arpl   WORD PTR [ebx],dx
  40bfd3:	mov    eax,0x81288a39
  40bfd8:	cmc    
  40bfd9:	or     DWORD PTR [eax],edi
  40bfdb:	lea    ecx,[edx+0x38]
  40bfde:	ret    0x2158
  40bfe1:	dec    ebx
  40bfe2:	dec    esi
  40bfe3:	mov    DWORD PTR [edx-0x17597974],ebp
  40bfe9:	mov    eax,ds:0xa33ed659
  40bfee:	cwde   
  40bfef:	ret    0x46ca
  40bff2:	fcmovu st,st(6)
  40bff4:	in     al,0xc3
  40bff6:	mul    DWORD PTR [edi-0x5a]
  40bff9:	or     DWORD PTR [edx],edx
  40bffb:	mov    WORD PTR [esi-0x37f821e7],ds
  40c001:	and    DWORD PTR ds:0x80e6ee,edi
  40c007:	fisubr WORD PTR [ebp+0x5f8d8b60]
  40c00d:	jmp    0x40bf9c
  40c00f:	and    eax,0x68e72f0f
  40c014:	(bad)  
  40c015:	int3   
  40c016:	mov    ah,0x54
  40c018:	pop    ebx
  40c019:	leave  
  40c01a:	push   esi
  40c01b:	or     DWORD PTR [esi+ebp*2],ecx
  40c01e:	xchg   DWORD PTR [ebx+eiz*2-0x47],esp
  40c022:	out    0xb1,eax
  40c024:	(bad)  
  40c025:	call   FWORD PTR [edx+0x3]
  40c028:	es in  eax,0xc8
  40c02b:	mov    ds:0x602ed3d6,eax
  40c030:	mov    edx,0x88762952
  40c035:	test   BYTE PTR [ebx],al
  40c037:	int3   
  40c038:	push   es
  40c039:	lea    esp,[ebx]
  40c03b:	iret   
  40c03c:	dec    ecx
  40c03d:	or     BYTE PTR [eax+0x427f1611],dh
  40c043:	sub    dl,BYTE PTR [esi-0x7ccf4bec]
  40c049:	loop   0x40c06e
  40c04b:	cdq    
  40c04c:	cld    
  40c04d:	nop
  40c04e:	test   eax,0xbcc70b44
  40c053:	pop    edx
  40c054:	mov    esi,0xd2916afb
  40c059:	adc    DWORD PTR [ecx-0x10541093],ebp
  40c05f:	sub    DWORD PTR [esi-0xfc5c6b],eax
  40c065:	jae    0x40c022
  40c067:	jmp    0x97b7:0x66d819bd
  40c06e:	lods   al,BYTE PTR ds:[esi]
  40c06f:	xchg   edx,eax
  40c070:	push   esp
  40c071:	mov    ds:0xd81b8622,al
  40c076:	ins    DWORD PTR es:[edi],dx
  40c077:	mov    bl,0x70
  40c079:	or     DWORD PTR [esi-0x7e],0xffffff87
  40c07d:	xor    edx,DWORD PTR [ebx]
  40c07f:	adc    eax,0xf5ebb9e0
  40c084:	xchg   esi,eax
  40c085:	(bad)  
  40c086:	lock xchg edi,eax
  40c088:	fnstsw WORD PTR [edx+eax*1-0x74be885]
  40c08f:	mov    eax,ds:0x50ffa18a
  40c094:	fwait
  40c095:	adc    dh,BYTE PTR [ebx+0x22]
  40c098:	out    dx,al
  40c099:	enter  0x2b6,0xa3
  40c09d:	mov    edx,0xa90e4cfc
  40c0a2:	mov    ?,WORD PTR [edx-0x35]
  40c0a5:	jp     0x40c115
  40c0a7:	fisttp QWORD PTR [eax+0x7011183d]
  40c0ad:	lds    ecx,FWORD PTR [esi+0x23]
  40c0b0:	repz adc BYTE PTR [eax+edx*4+0x752f7740],dh
  40c0b8:	int    0x22
  40c0ba:	cmp    DWORD PTR [edx],0xa916d78a
  40c0c0:	fisub  DWORD PTR [eax-0xe]
  40c0c3:	popf   
  40c0c4:	fcmovnbe st,st(3)
  40c0c6:	jg     0x40c052
  40c0c8:	mov    al,dh
  40c0ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0cb:	or     bh,bl
  40c0cd:	sti    
  40c0ce:	clc    
  40c0cf:	jg     0x40c060
  40c0d1:	sub    bh,BYTE PTR [edi+0x6360cdd9]
  40c0d7:	dec    edx
  40c0d8:	mov    dl,0x41
  40c0da:	imul   ecx,ecx,0xffffff85
  40c0dd:	in     al,0x8d
  40c0df:	pop    esi
  40c0e0:	jmp    0x40c12d
  40c0e2:	inc    edi
  40c0e3:	daa    
  40c0e4:	mov    al,0x9c
  40c0e6:	inc    edx
  40c0e7:	mov    ah,0xa3
  40c0e9:	add    esp,DWORD PTR [eax-0x349a9893]
  40c0ef:	aaa    
  40c0f0:	xlat   BYTE PTR ds:[ebx]
  40c0f1:	mov    DWORD PTR [eax],esp
  40c0f3:	xor    BYTE PTR [ecx+0x66702c46],0x54
  40c0fa:	mov    eax,ds:0x1fd55d08
  40c100:	cmp    BYTE PTR [ecx],ah
  40c102:	shl    DWORD PTR [edx],0xb1
  40c105:	and    al,BYTE PTR [esi+0x3f]
  40c108:	int    0x1
  40c10a:	cld    
  40c10b:	sub    al,0x4c
  40c10d:	pusha  
  40c10e:	ja     0x40c0b1
  40c110:	inc    eax
  40c111:	jae    0x40c122
  40c113:	pop    ss
  40c114:	scas   al,BYTE PTR es:[edi]
  40c115:	daa    
  40c116:	xor    eax,0xc718ce69
  40c11b:	js     0x40c0fe
  40c11d:	mov    DWORD PTR ds:0x369a1176,esp
  40c123:	retf   0xd56b
  40c126:	push   ecx
  40c127:	shl    BYTE PTR [edi+ebp*1-0x5ccfa5af],0xc7
  40c12f:	fidivr WORD PTR [ebx+0x4713893c]
  40c135:	out    dx,al
  40c136:	xchg   BYTE PTR ds:0xf09feb09,dh
  40c13c:	push   ebx
  40c13d:	aad    0x55
  40c13f:	adc    al,0x33
  40c141:	in     eax,dx
  40c142:	mov    dh,0x3c
  40c144:	push   esp
  40c145:	int    0x68
  40c147:	jge    0x40c17d
  40c149:	adc    bl,BYTE PTR [ecx+0x74]
  40c14c:	lock cmp DWORD PTR [edx-0x6551878e],esi
  40c153:	scas   eax,DWORD PTR es:[edi]
  40c154:	mov    esi,0xab06a9e4
  40c159:	push   0x211d4d6f
  40c15e:	ins    BYTE PTR es:[edi],dx
  40c15f:	sbb    eax,0xca960b50
  40c164:	scas   al,BYTE PTR es:[edi]
  40c165:	and    al,0x7b
  40c167:	xchg   ebx,eax
  40c168:	cmp    eax,0x543b67de
  40c16d:	mov    edi,0xab7d1276
  40c172:	(bad)  
  40c173:	repnz inc ebx
  40c175:	out    0x6d,al
  40c177:	pop    edx
  40c178:	sbb    al,0xc9
  40c17a:	fbstp  TBYTE PTR [ecx]
  40c17c:	or     al,0x76
  40c17e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c17f:	dec    eax
  40c180:	jmp    FWORD PTR [eax+0x232d8f10]
  40c186:	cs cmc 
  40c188:	aad    0xd
  40c18a:	fist   WORD PTR [esi-0xa]
  40c18d:	add    DWORD PTR [eax-0x55],eax
  40c190:	xchg   esp,eax
  40c191:	mov    ecx,DWORD PTR [ebp-0x352d61bb]
  40c197:	push   ss
  40c198:	push   ecx
  40c199:	xor    ch,cl
  40c19b:	aad    0x47
  40c19d:	sbb    esp,DWORD PTR [edi]
  40c19f:	add    BYTE PTR [ebx-0x35716e19],ah
  40c1a5:	out    0x35,al
  40c1a7:	test   eax,0xabe67045
  40c1ac:	ins    DWORD PTR es:[edi],dx
  40c1ad:	xchg   edx,eax
  40c1ae:	je     0x40c1c0
  40c1b0:	icebp  
  40c1b1:	fadd   DWORD PTR [esi]
  40c1b3:	mov    ss,WORD PTR [ecx+0x2789e5a2]
  40c1b9:	gs mov dh,0xae
  40c1bc:	push   es
  40c1bd:	mov    dl,0x9b
  40c1bf:	dec    esi
  40c1c0:	adc    DWORD PTR [ebx-0x41],eax
  40c1c3:	scas   al,BYTE PTR es:[edi]
  40c1c4:	fimul  WORD PTR [eax+0x74ed36c5]
  40c1ca:	scas   eax,DWORD PTR es:[edi]
  40c1cb:	push   edi
  40c1cc:	gs ret 0xcefb
  40c1d0:	mov    cl,cl
  40c1d2:	inc    eax
  40c1d4:	add    al,0x81
  40c1d6:	aam    0xd5
  40c1d8:	dec    edi
  40c1d9:	outs   dx,BYTE PTR ds:[esi]
  40c1da:	adc    bh,BYTE PTR [edx]
  40c1dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1dd:	in     eax,dx
  40c1de:	inc    edi
  40c1df:	or     BYTE PTR [esi],dh
  40c1e1:	mov    edi,0x3f3d63b0
  40c1e6:	xchg   edi,eax
  40c1e7:	lods   al,BYTE PTR ds:[esi]
  40c1e8:	cmp    BYTE PTR [edx+0x6e0eb1f2],0xeb
  40c1ef:	push   cs
  40c1f0:	hlt    
  40c1f1:	jle    0x40c188
  40c1f3:	outs   dx,DWORD PTR ds:[esi]
  40c1f4:	xlat   BYTE PTR ds:[bx]
  40c1f6:	adc    eax,0xc92ddba6
  40c1fb:	repz fnstcw WORD PTR [edx]
  40c1fe:	pop    edx
  40c1ff:	cdq    
  40c200:	data16 mov bh,0x7d
  40c203:	and    eax,0xc3551dbe
  40c208:	pusha  
  40c209:	pop    es
  40c20a:	(bad)
  40c20d:	imul   ebx,DWORD PTR [ebp-0x459d389e],0x2c
  40c214:	xlat   BYTE PTR ds:[ebx]
  40c215:	rcr    BYTE PTR [eax],0x4
  40c218:	xor    al,0xa7
  40c21a:	cld    
  40c21b:	mov    bh,0x40
  40c21d:	sti    
  40c21e:	xlat   BYTE PTR gs:[ebx]
  40c220:	add    BYTE PTR [eax+0x2c],ch
  40c223:	nop
  40c224:	fabs   
  40c226:	outs   dx,BYTE PTR cs:[esi]
  40c228:	pop    esp
  40c229:	inc    ecx
  40c22a:	cmp    DWORD PTR [esi],edi
  40c22c:	shl    BYTE PTR [esi+0x4f2d736f],1
  40c232:	push   cs
  40c233:	adc    DWORD PTR [esi],edx
  40c235:	retf   0x9365
  40c238:	jno    0x40c28d
  40c23a:	sub    al,BYTE PTR [esi]
  40c23c:	mov    ds:0x8bd7548b,eax
  40c241:	mov    eax,ds:0xdaf2133d
  40c246:	xchg   ebp,eax
  40c247:	in     eax,0x90
  40c249:	mov    edx,0xf1214a5f
  40c24e:	fld    TBYTE PTR [ebp+0x32f83]
  40c254:	add    eax,0x1fe54ee1
  40c259:	push   0xe5e78e9a
  40c25e:	or     DWORD PTR [ecx+0x10],esi
  40c261:	inc    edx
  40c262:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c263:	out    dx,eax
  40c264:	inc    edx
  40c265:	lock aad 0xe2
  40c268:	sub    eax,0x74dc7f0f
  40c26d:	adc    al,0xf5
  40c26f:	pop    esp
  40c270:	push   0x53
  40c272:	xlat   BYTE PTR ds:[ebx]
  40c273:	sbb    BYTE PTR [ecx+eax*4+0x21],cl
  40c277:	jecxz  0x40c243
  40c279:	sbb    bh,0x18
  40c27c:	iret   
  40c27d:	cmp    edx,DWORD PTR [ebx-0x5a0c8941]
  40c283:	push   0xfb2545f3
  40c288:	mov    edi,0x2646fc7a
  40c28d:	ins    DWORD PTR es:[edi],dx
  40c28e:	into   
  40c28f:	hlt    
  40c290:	push   esi
  40c291:	cs sti 
  40c293:	out    dx,eax
  40c294:	xchg   ebx,eax
  40c295:	xor    eax,0xf3fde588
  40c29a:	icebp  
  40c29b:	mov    dl,0x95
  40c29d:	and    eax,0x6244de93
  40c2a2:	stos   DWORD PTR es:[edi],eax
  40c2a3:	add    ecx,DWORD PTR [eax+0x38de4ae7]
  40c2a9:	mov    eax,0x727e5b41
  40c2ae:	out    0xd2,al
  40c2b0:	mov    ds:0x206580dc,al
  40c2b5:	adc    eax,0x907945fd
  40c2ba:	push   es
  40c2bb:	ror    BYTE PTR [edi],1
  40c2bd:	outs   dx,DWORD PTR ds:[esi]
  40c2be:	adc    ebx,esi
  40c2c0:	rcl    BYTE PTR [edi],1
  40c2c2:	pop    ss
  40c2c3:	(bad)  
  40c2c4:	data16 addr16 out 0x97,al
  40c2c8:	xchg   esi,eax
  40c2c9:	mov    WORD PTR [ebx+0x7],ds
  40c2cc:	fisttp DWORD PTR [esi-0x54]
  40c2cf:	pop    esi
  40c2d0:	push   edx
  40c2d1:	add    ebx,esp
  40c2d3:	xor    BYTE PTR [edi+0x44102ae6],bl
  40c2d9:	scas   eax,DWORD PTR es:[edi]
  40c2da:	sbb    DWORD PTR [edi],esp
  40c2dc:	daa    
  40c2dd:	xor    DWORD PTR [ecx-0x231bc8cf],ebx
  40c2e3:	das    
  40c2e4:	pop    ds
  40c2e5:	sahf   
  40c2e6:	mov    eax,ds:0x2c3684e9
  40c2eb:	or     bh,0x47
  40c2ee:	add    BYTE PTR [ebp+0x78],cl
  40c2f1:	adc    eax,0xa2237a9d
  40c2f6:	or     cl,BYTE PTR [esp+eiz*2+0x60]
  40c2fa:	mov    edx,0xdffa13c5
  40c2ff:	pop    esi
  40c300:	xor    ebp,esp
  40c302:	aas    
  40c303:	in     al,dx
  40c304:	imul   esp,DWORD PTR [ebp-0x52],0x6d
  40c308:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c309:	gs out dx,al
  40c30b:	jbe    0x40c2d4
  40c30d:	adc    al,0xe4
  40c30f:	syscall 
  40c311:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c312:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c313:	stos   DWORD PTR es:[edi],eax
  40c314:	dec    edx
  40c315:	or     BYTE PTR [esi+0x52],ch
  40c318:	inc    esp
  40c319:	test   eax,0xfd70eda4
  40c31e:	test   al,0xe
  40c320:	mov    ecx,0x7789e224
  40c325:	xchg   esi,eax
  40c326:	ror    BYTE PTR [edx+0x4b05b216],0xee
  40c32d:	mov    esp,ss
  40c32f:	cmp    ah,BYTE PTR [eax-0x37]
  40c332:	pop    edx
  40c333:	dec    edi
  40c334:	xlat   BYTE PTR ds:[ebx]
  40c335:	psllq  mm1,QWORD PTR ds:0xb4339fe0
  40c33c:	fs sub edx,eax
  40c33f:	daa    
  40c340:	clc    
  40c341:	add    DWORD PTR [ebx],ebx
  40c343:	push   esi
  40c344:	ja     0x40c372
  40c346:	mov    ah,0x8
  40c348:	xlat   BYTE PTR ds:[ebx]
  40c349:	mov    al,0xb9
  40c34b:	jg     0x40c367
  40c34d:	mov    ds:0x62379f64,eax
  40c352:	bound  esi,QWORD PTR [ecx+esi*4+0x40]
  40c356:	mov    edi,0x880f3c97
  40c35b:	inc    esi
  40c35c:	ret    0xd707
  40c35f:	inc    esi
  40c360:	test   DWORD PTR [esi+0x4b],0xbdb2c262
  40c367:	pop    es
  40c368:	dec    esp
  40c369:	retf   0x9b43
  40c36c:	cmp    eax,0x1af0567d
  40c371:	stos   DWORD PTR es:[edi],eax
  40c372:	xchg   esi,eax
  40c373:	sahf   
  40c374:	pop    edi
  40c375:	pusha  
  40c376:	jmp    0x8a86babb
  40c37b:	dec    esp
  40c37c:	sbb    ch,BYTE PTR [eax]
  40c37e:	in     eax,dx
  40c37f:	test   al,0x28
  40c381:	fldcw  WORD PTR [edi]
  40c383:	fidivr DWORD PTR [edx+edx*2-0x1a7cbf92]
  40c38a:	aaa    
  40c38b:	(bad)  
  40c38c:	or     bl,BYTE PTR [eax-0xb]
  40c38f:	sbb    DWORD PTR [esi-0x3230703e],esp
  40c395:	fistp  WORD PTR [edi+edx*2]
  40c398:	in     eax,dx
  40c399:	mov    eax,0x4d6fa
  40c39e:	loope  0x40c3ab
  40c3a0:	mov    eax,0x861886da
  40c3a5:	aam    0xf0
  40c3a7:	cwde   
  40c3a8:	jbe    0x40c3e9
  40c3aa:	mov    cl,0x19
  40c3ac:	push   ebx
  40c3ad:	xchg   ebp,eax
  40c3ae:	pop    ss
  40c3af:	nop
  40c3b0:	in     al,0x41
  40c3b2:	clc    
  40c3b3:	pop    esi
  40c3b4:	mov    ds:0xfefa402b,eax
  40c3b9:	push   ss
  40c3ba:	int    0x78
  40c3bc:	sub    eax,0xeb38234c
  40c3c1:	add    DWORD PTR [edi],ebx
  40c3c3:	cs mov cl,0xcf
  40c3c6:	ss retf 0xbd19
  40c3ca:	xchg   esp,eax
  40c3cb:	jg     0x40c3c5
  40c3cd:	add    cl,BYTE PTR [ebx+0x52ea5e04]
  40c3d3:	gs daa 
  40c3d5:	outs   dx,DWORD PTR ds:[esi]
  40c3d6:	push   esp
  40c3d7:	lds    ebx,FWORD PTR [edx]
  40c3d9:	(bad)  
  40c3da:	cs push ebx
  40c3dc:	outs   dx,DWORD PTR ds:[esi]
  40c3dd:	xor    BYTE PTR [edx-0x4d],dh
  40c3e0:	push   edx
  40c3e1:	add    edx,DWORD PTR [edi]
  40c3e3:	sbb    BYTE PTR [ebx+0x564ca483],0x62
  40c3ea:	iret   
  40c3eb:	add    cl,BYTE PTR [ebp+eiz*2+0x51687756]
  40c3f2:	or     DWORD PTR [ecx],ebp
  40c3f4:	sti    
  40c3f5:	pop    ecx
  40c3f6:	aas    
  40c3f7:	fisttp DWORD PTR [ebx]
  40c3f9:	in     al,0xe7
  40c3fb:	xor    al,0xc2
  40c3fd:	inc    edi
  40c3fe:	or     BYTE PTR [ebp+0x6e],ah
  40c401:	pop    eax
  40c402:	in     al,dx
  40c403:	inc    esi
  40c404:	mov    bh,0x64
  40c406:	leave  
  40c407:	jp     0x40c3ce
  40c409:	stos   BYTE PTR es:[edi],al
  40c40a:	or     eax,0xfcacf4b
  40c40f:	fisub  DWORD PTR [edx+0x40]
  40c412:	adc    DWORD PTR es:[edx+0x2],0x7dff9e75
  40c41a:	push   0xffffff86
  40c41c:	in     al,dx
  40c41d:	dec    ebp
  40c41e:	retf   0x3271
  40c421:	xor    al,0x39
  40c423:	ja     0x40c3bc
  40c425:	add    al,0x1f
  40c427:	lods   al,BYTE PTR ds:[esi]
  40c428:	lea    edi,[ebx+0x29411bcb]
  40c42e:	in     eax,0x57
  40c430:	test   al,0xe2
  40c432:	mov    ds:0x8d65f5b7,eax
  40c437:	pop    edx
  40c438:	mul    bh
  40c43a:	dec    ebp
  40c43b:	pusha  
  40c43c:	adc    ch,BYTE PTR [edx]
  40c43e:	sub    edi,DWORD PTR [eax]
  40c440:	pop    ebx
  40c441:	fs out 0xda,al
  40c444:	push   ebp
  40c445:	sahf   
  40c446:	cmp    ah,0x5b
  40c449:	cmp    BYTE PTR [ebx],dl
  40c44b:	dec    esp
  40c44c:	xor    ah,BYTE PTR [ebp+0x2240e27b]
  40c452:	cs enter 0xf0c3,0xcc
  40c457:	gs xchg edx,eax
  40c459:	mov    ch,0xe3
  40c45b:	shl    BYTE PTR [ebp-0x15d6a918],1
  40c461:	pop    ds
  40c462:	leave  
  40c463:	ins    DWORD PTR es:[edi],dx
  40c464:	scas   eax,DWORD PTR es:[edi]
  40c465:	and    eax,0xe08d0a00
  40c46a:	mov    edx,0x34b3e517
  40c46f:	das    
  40c470:	mov    dl,0x51
  40c472:	clc    
  40c473:	in     al,0x2d
  40c475:	xor    eax,0x40731ecf
  40c47a:	pop    ebp
  40c47b:	jg     0x40c4b3
  40c47d:	and    al,0xe1
  40c47f:	(bad)  
  40c480:	jmp    0x6f8faed3
  40c485:	pop    ecx
  40c486:	in     al,0xea
  40c488:	mov    BYTE PTR [ebp+0x73e89702],dl
  40c48e:	or     eax,0x18930d9d
  40c493:	and    BYTE PTR [esi],bh
  40c495:	jge    0x40c4e0
  40c497:	and    esi,esi
  40c499:	and    al,0x6e
  40c49b:	scas   eax,DWORD PTR es:[edi]
  40c49c:	shl    BYTE PTR [edi-0x3d691298],0x4
  40c4a3:	ret    
  40c4a4:	jnp    0x40c4d5
  40c4a6:	xchg   DWORD PTR [ebx],eax
  40c4a8:	ins    BYTE PTR es:[edi],dx
  40c4a9:	add    esp,ebx
  40c4ab:	push   0x4f
  40c4ad:	dec    edi
  40c4ae:	(bad)  
  40c4af:	leave  
  40c4b0:	sbb    al,0x5f
  40c4b2:	pop    ebx
  40c4b3:	test   DWORD PTR [edi+0x12],edx
  40c4b6:	daa    
  40c4b7:	call   0xee33b54a
  40c4bc:	dec    ecx
  40c4bd:	imul   edi,edx,0xffffffed
  40c4c0:	add    al,0x81
  40c4c2:	in     eax,0xa4
  40c4c4:	outs   dx,DWORD PTR ds:[esi]
  40c4c5:	repz mov ds:0x391fc55,al
  40c4cb:	inc    esp
  40c4cc:	sbb    esi,DWORD PTR [esi+0x11a86f67]
  40c4d2:	fbstp  TBYTE PTR ds:0xf0cdad29
  40c4d8:	xchg   ebp,eax
  40c4d9:	dec    ebp
  40c4da:	lea    ebp,[edi-0x31b20693]
  40c4e0:	ss aam 0xe5
  40c4e3:	dec    ebx
  40c4e4:	push   0xd870a65c
  40c4e9:	adc    eax,0x96c12087
  40c4ee:	outs   dx,DWORD PTR ds:[esi]
  40c4ef:	or     DWORD PTR [edi],ebx
  40c4f1:	mov    bl,0x58
  40c4f3:	jl     0x40c4df
  40c4f5:	add    al,0x2e
  40c4f7:	adc    al,0x3e
  40c4f9:	jecxz  0x40c54e
  40c4fb:	and    BYTE PTR [esi+0x2e],al
  40c4fe:	lahf   
  40c4ff:	and    ebp,DWORD PTR [ecx+0x1f981569]
  40c505:	retf   
  40c506:	fwait
  40c507:	jnp    0x40c56a
  40c509:	arpl   WORD PTR [esi],si
  40c50b:	cmp    ch,BYTE PTR [ebx-0x55dc87b1]
  40c511:	ss sti 
  40c513:	ret    0x6bc9
  40c516:	and    BYTE PTR [ebp-0x3],bl
  40c519:	sub    BYTE PTR [esi-0x3447d9a5],0x50
  40c520:	dec    eax
  40c521:	outs   dx,DWORD PTR ds:[esi]
  40c522:	adc    DWORD PTR ds:0xe00693c4,0x85f7ed55
  40c52c:	mov    esi,0xcf5ba99b
  40c531:	jae    0x40c553
  40c533:	imul   esp,DWORD PTR [ecx+0x2672b90b],0x19
  40c53a:	mov    al,0xdf
  40c53c:	jp     0x40c539
  40c53e:	fwait
  40c53f:	xor    ebx,edi
  40c541:	cmp    BYTE PTR [ebx],dh
  40c543:	xor    cl,BYTE PTR [edi]
  40c545:	sbb    eax,0x65153256
  40c54a:	jno    0x40c5b8
  40c54c:	std    
  40c54d:	push   ebx
  40c54e:	adc    al,0x81
  40c550:	div    ebx
  40c552:	inc    ebp
  40c553:	aaa    
  40c554:	nop
  40c555:	repnz mov esp,ebx
  40c558:	and    al,cl
  40c55a:	xchg   ebx,eax
  40c55b:	lods   eax,DWORD PTR ds:[esi]
  40c55c:	rol    ch,cl
  40c55e:	mov    ebx,0xa9b36aa4
  40c563:	xchg   BYTE PTR [edx+0x40b0a4db],dh
  40c569:	fmul   QWORD PTR [ecx+edi*8]
  40c56c:	scas   eax,DWORD PTR es:[edi]
  40c56d:	rcr    DWORD PTR es:[eax],0x77
  40c571:	bound  esp,QWORD PTR [ebp-0x2f11d696]
  40c577:	mov    bl,0x87
  40c579:	fucomip st,st(6)
  40c57b:	xchg   DWORD PTR [ebp+0x7c08ebf0],ecx
  40c581:	adc    DWORD PTR [ebp-0xf7e03b8],ecx
  40c587:	push   eax
  40c588:	iret   
  40c589:	ss cmp eax,0x19783f1d
  40c58f:	scas   al,BYTE PTR es:[edi]
  40c590:	inc    eax
  40c591:	fild   DWORD PTR [edi+0x22]
  40c594:	in     eax,dx
  40c595:	loopne 0x40c5a3
  40c597:	neg    bh
  40c599:	inc    ebp
  40c59a:	fmul   QWORD PTR [esi+0x58cf657b]
  40c5a0:	and    al,0xf2
  40c5a2:	sbb    eax,0x720a5212
  40c5a7:	xor    ah,ah
  40c5a9:	dec    esi
  40c5aa:	xchg   eax,ecx
  40c5ac:	into   
  40c5ad:	pop    edx
  40c5ae:	mov    dl,0x19
  40c5b0:	xchg   ecx,eax
  40c5b1:	xchg   DWORD PTR [esp+ebx*2+0x1aa3d490],esi
  40c5b8:	xor    BYTE PTR [edi+edi*2],ch
  40c5bb:	aaa    
  40c5bc:	mov    edi,ecx
  40c5be:	xchg   esi,eax
  40c5bf:	pop    esp
  40c5c0:	jne    0x40c556
  40c5c2:	std    
  40c5c3:	pop    ds
  40c5c4:	pop    eax
  40c5c5:	cmp    ah,bl
  40c5c7:	test   eax,0x54178f5b
  40c5cc:	mov    ebp,0x82ad6497
  40c5d1:	int    0x1
  40c5d3:	push   esp
  40c5d4:	mov    ah,0x9
  40c5d6:	cmp    dh,bh
  40c5d8:	dec    esi
  40c5d9:	adc    eax,DWORD PTR ds:0xe4dcba7f
  40c5df:	fst    st(3)
  40c5e1:	pop    esp
  40c5e2:	mov    esp,0xfc915228
  40c5e7:	push   ebp
  40c5e8:	mov    edi,0x4de69480
  40c5ed:	imul   esp,DWORD PTR [edx-0x2],0xd5252e54
  40c5f4:	or     DWORD PTR [ebp+0x62d0a7ad],esi
  40c5fa:	xchg   BYTE PTR [ebx+0x3a],bl
  40c5fd:	pop    ebx
  40c5fe:	fsubr  QWORD PTR [edi-0x665f9a9b]
  40c604:	xor    al,0x97
  40c606:	push   es
  40c607:	xchg   esi,eax
  40c608:	(bad)  
  40c609:	mov    edx,0x5456aef7
  40c60e:	lea    edi,[esi]
  40c610:	xchg   edi,eax
  40c611:	idiv   edx
  40c613:	pushf  
  40c614:	ret    
  40c615:	lock dec esi
  40c617:	je     0x40c617
  40c619:	push   0x27b5a8e3
  40c61e:	mov    esp,0xe3b0b650
  40c623:	out    0x49,eax
  40c625:	xchg   ebx,eax
  40c626:	push   esi
  40c627:	inc    esp
  40c628:	pusha  
  40c629:	cmp    BYTE PTR [edx+ecx*8+0x61140eee],bh
  40c630:	mov    ebp,0xd6936501
  40c635:	adc    edx,eax
  40c637:	frstor [eax-0x39]
  40c63a:	int    0xf0
  40c63c:	retf   
  40c63d:	and    edx,ebp
  40c63f:	mov    al,0x94
  40c641:	mov    BYTE PTR [edx],bl
  40c643:	call   0xfe81:0xb9685e57
  40c64a:	mov    cl,0x27
  40c64c:	push   edi
  40c64d:	fcomp  DWORD PTR [edx]
  40c64f:	retf   0xf1b6
  40c652:	add    cl,BYTE PTR cs:[ecx]
  40c655:	and    ebx,DWORD PTR [ebx+0x272a3c1c]
  40c65b:	jae    0x40c659
  40c65d:	lahf   
  40c65e:	sub    al,0x37
  40c660:	lahf   
  40c661:	mov    dl,0xb5
  40c663:	in     al,0x19
  40c665:	jbe    0x40c667
  40c667:	nop
  40c668:	int3   
  40c669:	cmp    DWORD PTR [eax+0x48],esp
  40c66c:	cmp    al,0xbc
  40c66e:	and    DWORD PTR [edx-0x6],eax
  40c671:	xchg   DWORD PTR cs:[esp+ecx*4-0x1c8bd140],ebp
  40c679:	imul   BYTE PTR [edi+edx*2-0xa27395d]
  40c680:	jno    0x40c611
  40c682:	inc    eax
  40c683:	fld    QWORD PTR [ebx]
  40c685:	mov    al,ds:0xa9d46c2f
  40c68a:	aaa    
  40c68b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c68c:	ds push ebp
  40c68e:	mov    DWORD PTR [edx-0xf],ebx
  40c691:	jecxz  0x40c657
  40c693:	idiv   DWORD PTR [esi+0x2b775a07]
  40c699:	sbb    DWORD PTR [esi],ebx
  40c69b:	mov    ds:0xeebbf52a,eax
  40c6a0:	xchg   DWORD PTR [esp+ecx*2-0x19cd739b],ebp
  40c6a7:	inc    eax
  40c6a8:	jle    0x40c728
  40c6aa:	pusha  
  40c6ab:	in     eax,dx
  40c6ac:	push   ecx
  40c6ad:	cmc    
  40c6ae:	(bad)  
  40c6af:	outs   dx,BYTE PTR ds:[esi]
  40c6b0:	push   cs
  40c6b1:	retf   
  40c6b2:	pop    eax
  40c6b3:	and    edx,DWORD PTR [ecx-0x63f6fe05]
  40c6b9:	push   ds
  40c6ba:	inc    eax
  40c6bb:	mov    ds:0x48401d1b,al
  40c6c0:	mov    edx,DWORD PTR [eax+0x15]
  40c6c3:	arpl   cx,di
  40c6c5:	dec    ecx
  40c6c6:	ret    
  40c6c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6c8:	mov    ah,0xca
  40c6ca:	mov    ah,cl
  40c6cc:	jmp    0x40c742
  40c6ce:	add    DWORD PTR [eax+ecx*4+0x648bb2cd],esi
  40c6d5:	dec    ecx
  40c6d6:	div    BYTE PTR [edx+0x48]
  40c6d9:	add    ah,dh
  40c6db:	fisttp WORD PTR [edi]
  40c6dd:	mov    BYTE PTR [esi+0x30],cl
  40c6e0:	and    esp,edx
  40c6e2:	or     dl,BYTE PTR [esi]
  40c6e4:	test   BYTE PTR [ebx+0x2e],ch
  40c6e7:	sbb    eax,0xf8372bbf
  40c6ec:	xchg   ebp,eax
  40c6ed:	adc    dh,BYTE PTR [esp+edx*1-0x40]
  40c6f1:	xchg   edi,eax
  40c6f2:	xchg   BYTE PTR [esi-0x28ba35b1],al
  40c6f8:	jmp    0x1fbd385d
  40c6fd:	shl    BYTE PTR [ebx-0x2bacdf22],1
  40c703:	aas    
  40c704:	dec    ebx
  40c705:	in     al,dx
  40c706:	test   DWORD PTR [ebp+0x51f40d6f],ebp
  40c70c:	(bad)  
  40c70d:	sbb    al,0x72
  40c70f:	loopne 0x40c6ee
  40c711:	adc    ebx,DWORD PTR [ebx+ecx*4+0x6f96ed19]
  40c718:	cmp    ebx,DWORD PTR [esi]
  40c71a:	push   ecx
  40c71b:	enter  0x63ce,0x11
  40c71f:	sub    eax,0xb51f3995
  40c724:	dec    esp
  40c725:	jg     0x40c770
  40c727:	mov    al,bh
  40c729:	pop    ds
  40c72a:	xchg   esp,eax
  40c72b:	dec    eax
  40c72c:	push   ebx
  40c72e:	aaa    
  40c72f:	popa   
  40c730:	xchg   ebp,eax
  40c731:	retf   0x5a18
  40c734:	xor    dh,dh
  40c736:	mov    ebp,DWORD PTR [esi]
  40c738:	hlt    
  40c739:	imul   DWORD PTR [ecx+0x2d780e7e]
  40c73f:	neg    DWORD PTR [eax+0x42]
  40c742:	mov    ds:0xfe9de01,eax
  40c747:	mov    eax,0x29e31ff9
  40c74c:	mov    ch,0xd7
  40c74e:	imul   eax,DWORD PTR ds:0x94830684,0xcab2b945
  40c758:	jg     0x40c7c3
  40c75a:	push   edi
  40c75b:	xchg   esi,eax
  40c75c:	cmp    esp,DWORD PTR [edi-0x7994b83c]
  40c762:	jl     0x40c7ae
  40c764:	mov    al,ds:0x70e4c016
  40c769:	xor    al,ch
  40c76b:	mov    ebp,0x8479bc01
  40c770:	xchg   edi,eax
  40c771:	retf   
  40c772:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c773:	bound  eax,QWORD PTR [eax-0x1e69fdee]
  40c779:	adc    eax,0x348ae7db
  40c77e:	mov    esi,0x4e5dd8a4
  40c783:	dec    ebp
  40c784:	sti    
  40c785:	jbe    0x40c708
  40c787:	pusha  
  40c788:	adc    DWORD PTR [esi],ebp
  40c78a:	test   eax,0x5f3c6983
  40c78f:	(bad)  
  40c790:	leave  
  40c791:	fwait
  40c792:	or     DWORD PTR [ebx-0x581e0664],0x15
  40c799:	imul   DWORD PTR ds:0x1c945fc5
  40c79f:	outs   dx,BYTE PTR ds:[esi]
  40c7a0:	add    esp,DWORD PTR [edi]
  40c7a2:	fldcw  WORD PTR [esi]
  40c7a4:	push   edx
  40c7a5:	lock pop esi
  40c7a7:	fmul   QWORD PTR [eax-0x12]
  40c7aa:	or     ebx,DWORD PTR [edx-0x3d43f0a4]
  40c7b0:	popf   
  40c7b1:	(bad)  
  40c7b2:	fild   QWORD PTR [ebp+0x60]
  40c7b5:	leave  
  40c7b6:	ror    DWORD PTR [eax-0x379ed833],cl
  40c7bc:	lds    ecx,FWORD PTR [ebx+0x43]
  40c7bf:	ss ret 0x4fd8
  40c7c3:	xchg   ecx,eax
  40c7c4:	in     eax,0x1
  40c7c6:	xlat   BYTE PTR ds:[ebx]
  40c7c7:	add    eax,0x891d5bd6
  40c7cc:	aaa    
  40c7cd:	dec    ebp
  40c7ce:	pop    ebp
  40c7cf:	bound  esp,QWORD PTR [esp+ebx*2-0x3ab6a174]
  40c7d6:	add    esi,edi
  40c7d8:	cmp    bl,BYTE PTR [ebp-0x3d0a7c41]
  40c7de:	and    eax,0x5f09caaa
  40c7e3:	xchg   ebp,eax
  40c7e4:	outs   dx,DWORD PTR ds:[esi]
  40c7e5:	fadd   QWORD PTR [esp+ecx*4+0x528812a4]
  40c7ec:	jge    0x40c79b
  40c7ee:	push   eax
  40c7ef:	push   0x4a2017e7
  40c7f4:	loop   0x40c79d
  40c7f6:	cli    
  40c7f7:	add    eax,0x5b460b93
  40c7fc:	daa    
  40c7fd:	or     eax,0x46ba2604
  40c802:	retf   0x6ac3
  40c805:	sub    edi,DWORD PTR [ebx+0x6be00e11]
  40c80b:	jo     0x40c7c1
  40c80d:	cwde   
  40c80e:	js     0x40c84b
  40c810:	repnz out 0x86,al
  40c813:	retf   
  40c814:	mov    al,0xe8
  40c816:	or     al,BYTE PTR [ecx+edi*1+0x66883313]
  40c81d:	test   eax,0x391448fe
  40c822:	sbb    eax,0x402a730d
  40c827:	cdq    
  40c828:	push   ebx
  40c829:	out    dx,al
  40c82a:	int3   
  40c82b:	(bad)  
  40c82c:	sub    al,0xe6
  40c82e:	mov    bh,BYTE PTR [ecx+0x4f644689]
  40c834:	jmp    ebp
  40c836:	dec    edx
  40c837:	inc    edx
  40c838:	call   0x21c8:0xac011f1
  40c83f:	xchg   BYTE PTR [edi],dl
  40c841:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c842:	jbe    0x40c810
  40c844:	imul   ebx,DWORD PTR [ecx-0xaa7536f],0xffffff80
  40c84b:	call   0x72c00a36
  40c850:	pop    es
  40c851:	(bad)  
  40c852:	xchg   edx,eax
  40c853:	mov    edx,DWORD PTR [ebx+0x32]
  40c856:	loopne 0x40c8cd
  40c858:	and    bh,BYTE PTR [esi+0x6b]
  40c85b:	cmp    bl,ch
  40c85d:	xchg   ebx,eax
  40c85e:	push   ds
  40c85f:	sbb    ebp,0x4a
  40c862:	rcr    esp,cl
  40c864:	push   edi
  40c865:	pop    edi
  40c866:	xor    ah,BYTE PTR [esp+edx*1]
  40c869:	adc    esi,ecx
  40c86b:	retf   
  40c86c:	aaa    
  40c86d:	shl    BYTE PTR [esi+ecx*2+0x48da914e],0x7f
  40c875:	inc    ebx
  40c876:	sbb    al,0xc3
  40c878:	stos   BYTE PTR es:[edi],al
  40c879:	out    0x6a,al
  40c87b:	(bad)  
  40c87c:	(bad)  
  40c87d:	cmp    cl,BYTE PTR [ebx*8-0x5c9a57c0]
  40c884:	pop    ecx
  40c885:	fidivr DWORD PTR [edi]
  40c887:	cmp    esi,DWORD PTR [edi+0x55527c39]
  40c88d:	pop    ebx
  40c88e:	pop    esi
  40c88f:	mov    esp,0xb342b7d5
  40c894:	fistp  WORD PTR [ebx-0x3138181e]
  40c89a:	or     al,0xce
  40c89c:	clc    
  40c89d:	xchg   eax,eax
  40c89f:	dec    esi
  40c8a0:	push   ebp
  40c8a1:	mov    DWORD PTR [ebx+0x7d],0x5802701a
  40c8a8:	loop   0x40c878
  40c8aa:	out    0xac,al
  40c8ac:	fisttp DWORD PTR [edx-0x306d6d9f]
  40c8b2:	in     al,0x9c
  40c8b4:	mov    cl,BYTE PTR [ecx]
  40c8b6:	rcl    BYTE PTR [edi-0x6710d6d9],1
  40c8bc:	or     ebx,DWORD PTR [esi]
  40c8be:	and    BYTE PTR [edx+ebp*8-0x54],ch
  40c8c2:	mov    ah,0x26
  40c8c4:	mov    al,0x64
  40c8c6:	outs   dx,DWORD PTR ds:[esi]
  40c8c7:	(bad)  
  40c8c8:	in     al,0x44
  40c8ca:	stc    
  40c8cb:	addr16 mov ah,0x78
  40c8ce:	xchg   edx,eax
  40c8cf:	(bad)  
  40c8d0:	jge    0x40c87b
  40c8d2:	adc    cl,BYTE PTR [ebx-0x4f9a9287]
  40c8d8:	lods   eax,DWORD PTR ds:[esi]
  40c8d9:	sti    
  40c8da:	pop    edx
  40c8db:	cmp    BYTE PTR [ecx],al
  40c8dd:	jnp    0x40c93c
  40c8df:	dec    edi
  40c8e0:	in     eax,dx
  40c8e1:	(bad)  
  40c8e2:	mov    bl,0xee
  40c8e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8e5:	dec    esp
  40c8e6:	mov    DWORD PTR [esi+0x8],eax
  40c8e9:	adc    ch,al
  40c8eb:	push   0x14
  40c8ed:	jge    0x40c899
  40c8ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8f0:	pop    ss
  40c8f1:	sub    DWORD PTR [eax-0x70],eax
  40c8f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8f5:	xor    BYTE PTR [ebp+eax*4-0x80],0xa
  40c8fa:	push   eax
  40c8fb:	pop    ebx
  40c8fc:	push   0xffffff93
  40c8fe:	push   ss
  40c8ff:	jbe    0x40c900
  40c901:	pop    esi
  40c902:	add    bh,bh
  40c904:	mov    esp,0x84f726e2
  40c909:	adc    DWORD PTR [ebp-0x215912e8],esi
  40c90f:	sub    al,0x76
  40c911:	std    
  40c912:	mov    esp,0x6ebc4d0
  40c917:	mov    eax,0x106c764c
  40c91c:	and    BYTE PTR [ebp-0x3f],0xf3
  40c920:	push   ebp
  40c921:	jmp    0xb6d7a1e5
  40c926:	idiv   BYTE PTR [ecx+0x5f4a54cd]
  40c92c:	iret   
  40c92d:	adc    DWORD PTR [edx-0x175863e6],eax
  40c933:	and    DWORD PTR [edx-0x52a96d72],0xda5585ca
  40c93d:	pop    esi
  40c93e:	dec    eax
  40c93f:	in     eax,dx
  40c940:	sub    dl,bl
  40c942:	mov    bh,0xe0
  40c944:	pop    edi
  40c945:	icebp  
  40c946:	jg     0x40c8f0
  40c948:	pop    esi
  40c949:	stos   BYTE PTR es:[edi],al
  40c94a:	inc    edi
  40c94b:	add    bl,BYTE PTR [eax-0x51a04785]
  40c951:	std    
  40c952:	push   0xabb54aec
  40c957:	sub    edi,edx
  40c959:	shr    BYTE PTR [ebx],0x79
  40c95c:	adc    DWORD PTR [ebx],esp
  40c95e:	js     0x40c968
  40c960:	mov    eax,ds:0x877d0a8a
  40c965:	xor    cl,cl
  40c967:	cmp    al,0x38
  40c969:	push   es
  40c96a:	fisub  DWORD PTR [ecx]
  40c96c:	xor    DWORD PTR [edx],ecx
  40c96e:	sub    eax,0xd079f16d
  40c973:	xor    ch,ch
  40c975:	mov    fs,WORD PTR [edx+0x60]
  40c978:	push   esp
  40c979:	add    DWORD PTR [edi+0x25],ecx
  40c97c:	sahf   
  40c97d:	mov    eax,esi
  40c97f:	mov    edi,0xb501d60
  40c984:	dec    esp
  40c985:	icebp  
  40c986:	xchg   ecx,eax
  40c987:	fimul  WORD PTR [ecx*8+0x13df946c]
  40c98e:	pop    ecx
  40c98f:	mov    al,0xfd
  40c991:	loope  0x40c953
  40c993:	xchg   esi,eax
  40c994:	test   DWORD PTR [ecx-0xe],ebp
  40c997:	push   esp
  40c998:	xchg   edx,eax
  40c999:	das    
  40c99a:	(bad)  
  40c99b:	out    0xe0,al
  40c99d:	in     al,dx
  40c99e:	test   al,0x26
  40c9a0:	cmc    
  40c9a1:	pop    ecx
  40c9a2:	xchg   ebx,eax
  40c9a3:	dec    esp
  40c9a4:	mov    edx,0xcb4ef321
  40c9a9:	add    eax,0x5796f086
  40c9ae:	fidivr WORD PTR [edx]
  40c9b0:	push   0x572175cf
  40c9b5:	xchg   ecx,eax
  40c9b6:	test   DWORD PTR [edx-0x26e8d960],ebp
  40c9bc:	add    ecx,DWORD PTR [edi+ebp*2+0x1359dc9b]
  40c9c3:	ins    BYTE PTR es:[edi],dx
  40c9c4:	xor    al,0x5e
  40c9c6:	ds je  0x40ca14
  40c9c9:	pop    esi
  40c9ca:	pop    ss
  40c9cb:	sub    ecx,DWORD PTR [edx-0xb]
  40c9ce:	sub    BYTE PTR [ecx],0x0
  40c9d1:	sbb    DWORD PTR [edi+0x6dc5b5f],ebx
  40c9d7:	and    eax,0x6c6cb34d
  40c9dc:	mov    ch,bh
  40c9de:	and    BYTE PTR [esp+eiz*8-0x7bfbcde],0x15
  40c9e6:	mov    ah,0xc6
  40c9e8:	push   eax
  40c9e9:	xor    ebx,eax
  40c9eb:	addr16 out dx,al
  40c9ed:	xor    DWORD PTR [ebx+0x3d],ebx
  40c9f0:	(bad)  
  40c9f1:	es jno 0x40ca5f
  40c9f4:	dec    ebp
  40c9f5:	sub    DWORD PTR [ebp+0x5b],esi
  40c9f8:	mov    cl,al
  40c9fa:	lds    ebx,FWORD PTR [ebx+0x6525afda]
  40ca00:	adc    ecx,DWORD PTR [ebx+0x26058020]
  40ca06:	add    DWORD PTR [ebx],ecx
  40ca08:	ins    BYTE PTR es:[edi],dx
  40ca09:	in     al,0x54
  40ca0b:	hlt    
  40ca0c:	sbb    eax,DWORD PTR [edi+0x1d]
  40ca0f:	ins    DWORD PTR es:[edi],dx
  40ca10:	pusha  
  40ca11:	nop
  40ca12:	cmc    
  40ca13:	cdq    
  40ca14:	out    0xdd,eax
  40ca16:	les    edx,FWORD PTR [edi+eax*1-0x5db7e2d7]
  40ca1d:	test   eax,0xac18d527
  40ca22:	sub    al,0x7f
  40ca24:	xchg   BYTE PTR [ebp-0x3e4ce5b2],dh
  40ca2a:	xor    esp,DWORD PTR [esi]
  40ca2c:	and    al,0x55
  40ca2e:	cmp    BYTE PTR [eax],dh
  40ca30:	dec    ecx
  40ca31:	jbe    0x40ca98
  40ca33:	pop    edx
  40ca34:	dec    ecx
  40ca35:	je     0x40ca53
  40ca37:	int    0x40
  40ca39:	pop    ds
  40ca3a:	or     BYTE PTR [ecx+edi*2-0x71],0xff
  40ca3f:	or     BYTE PTR [ebx+eiz*8+0x20a0fc61],0x55
  40ca47:	data16 (bad) 
  40ca49:	int3   
  40ca4a:	rep stos BYTE PTR es:[edi],al
  40ca4c:	es push ebp
  40ca4e:	out    dx,al
  40ca4f:	jne    0x40ca1e
  40ca51:	push   ecx
  40ca52:	sub    DWORD PTR [edx],ebp
  40ca54:	jno    0x40ca68
  40ca56:	cmc    
  40ca57:	ret    0x5b8b
  40ca5a:	mov    ebp,0x1bee54ed
  40ca5f:	arpl   WORD PTR [ecx],cx
  40ca61:	or     esp,edi
  40ca63:	loope  0x40ca86
  40ca65:	xor    DWORD PTR [edi-0x73cdbb74],esi
  40ca6b:	cmp    eax,0xfc5a764a
  40ca70:	mov    bl,0xa2
  40ca72:	das    
  40ca73:	mov    ?,WORD PTR [eax]
  40ca75:	inc    ebx
  40ca76:	cdq    
  40ca77:	jmp    0x40cae9
  40ca79:	call   0x7936:0xa2dd9202
  40ca80:	lahf   
  40ca81:	sub    al,0xd3
  40ca83:	inc    ebx
  40ca84:	sub    eax,0x64df1e70
  40ca89:	mov    ds,WORD PTR [edi+0x7e]
  40ca8c:	inc    esp
  40ca8d:	mov    DWORD PTR [esi-0x5f03d5e6],0xa1564f4c
  40ca97:	and    al,0x34
  40ca99:	jns    0x40cab5
  40ca9b:	mov    esp,0xf61b9fce
  40caa0:	call   0x71e14b48
  40caa5:	mov    ah,0xe9
  40caa7:	dec    edx
  40caa8:	sbb    al,0x3e
  40caaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40caab:	add    ebx,DWORD PTR [eax]
  40caad:	cmp    BYTE PTR [esi],dh
  40caaf:	(bad)  
  40cab0:	xchg   ecx,eax
  40cab1:	icebp  
  40cab2:	scas   al,BYTE PTR es:[edi]
  40cab3:	cdq    
  40cab4:	pop    esp
  40cab5:	dec    ecx
  40cab6:	pusha  
  40cab7:	dec    ecx
  40cab8:	in     eax,0x46
  40caba:	outs   dx,DWORD PTR ds:[esi]
  40cabb:	pop    edi
  40cabc:	push   0x5ab71238
  40cac1:	mov    eax,0xd86e6b37
  40cac6:	mov    ebx,0xcccb2281
  40cacb:	std    
  40cacc:	mov    DWORD PTR [edx],esp
  40cace:	xor    dl,bl
  40cad0:	out    dx,al
  40cad1:	in     al,0x37
  40cad3:	iret   
  40cad4:	stc    
  40cad5:	push   0x6c2c7522
  40cada:	in     al,0xa2
  40cadc:	mov    WORD PTR [eax-0x7828e67c],?
  40cae2:	cmp    eax,0xc5fe6ba4
  40cae7:	ret    
  40cae8:	loope  0x40cac2
  40caea:	mov    esp,0xe6e57a7b
  40caef:	test   DWORD PTR [ebx-0x30],0x60aa32f5
  40caf6:	pop    edx
  40caf7:	into   
  40caf8:	add    al,0x64
  40cafa:	push   cs
  40cafb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cafc:	cmp    BYTE PTR [ecx+0x77],bh
  40caff:	cmp    DWORD PTR [ecx+0x25],esp
  40cb02:	cmp    BYTE PTR [edx],cl
  40cb04:	mul    BYTE PTR ds:0x84bc4d13
  40cb0a:	pushf  
  40cb0b:	out    dx,al
  40cb0c:	sub    al,ah
  40cb0e:	aaa    
  40cb0f:	mov    bh,0xd5
  40cb11:	(bad)  
  40cb12:	aad    0x67
  40cb14:	repnz dec eax
  40cb16:	inc    edx
  40cb17:	jmp    0xbf7f:0x9c67cfec
  40cb1e:	icebp  
  40cb1f:	jmp    0x40cb61
  40cb21:	pop    es
  40cb22:	mov    ecx,0xb525b08
  40cb27:	cdq    
  40cb28:	dec    ebx
  40cb29:	jno    0x40cb6d
  40cb2b:	lock pop ss
  40cb2d:	mov    DWORD PTR [eax],edx
  40cb2f:	int    0xff
  40cb31:	mov    dh,0x1b
  40cb33:	push   0x3f
  40cb35:	das    
  40cb36:	mov    ch,0x55
  40cb38:	repz scas eax,DWORD PTR es:[edi]
  40cb3a:	mov    ebp,0x29da9a6e
  40cb3f:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40cb41:	sub    al,0xcb
  40cb43:	in     eax,0xb6
  40cb45:	xchg   ecx,eax
  40cb46:	jmp    0x2d196461
  40cb4b:	mov    esi,0xdc336b3
  40cb50:	xchg   DWORD PTR [eax+0x7c],ebp
  40cb53:	adc    DWORD PTR [ebx-0x35a801fa],esp
  40cb59:	and    eax,DWORD PTR [ecx-0x12]
  40cb5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb5d:	loop   0x40cb21
  40cb5f:	fwait
  40cb60:	sahf   
  40cb61:	and    edi,edx
  40cb63:	pop    eax
  40cb64:	ror    DWORD PTR [esi+0x50],cl
  40cb67:	push   esi
  40cb68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb69:	mov    ch,0x51
  40cb6b:	stos   DWORD PTR es:[edi],eax
  40cb6c:	mov    edx,0x5b6cde73
  40cb71:	mov    esp,0x5a31c68a
  40cb76:	or     DWORD PTR [ebp-0x73],esp
  40cb79:	test   DWORD PTR [edx+ecx*2-0x100b0cf],0x4f45cc49
  40cb84:	mov    eax,ds:0xa6b84efd
  40cb89:	cwde   
  40cb8a:	stos   DWORD PTR es:[edi],eax
  40cb8b:	and    DWORD PTR [eax],ebp
  40cb8d:	and    al,0xbf
  40cb8f:	pop    ebx
  40cb90:	jge    0x40cbc7
  40cb92:	xchg   DWORD PTR [eax],esi
  40cb94:	pop    ds
  40cb95:	sub    eax,0x74fabbab
  40cb9a:	in     eax,0xca
  40cb9c:	mov    ebp,0xa8612939
  40cba1:	mov    eax,0x9eb1e325
  40cba6:	adc    al,0x46
  40cba8:	and    dl,cl
  40cbaa:	inc    ebx
  40cbab:	shl    DWORD PTR [edi],1
  40cbad:	repnz stos BYTE PTR es:[edi],al
  40cbaf:	mov    cl,BYTE PTR [edx+0x18cb760]
  40cbb5:	push   esp
  40cbb6:	retf   
  40cbb7:	mov    ah,0x6
  40cbb9:	add    DWORD PTR [edi-0x38fd20c0],ebx
  40cbbf:	into   
  40cbc0:	mov    ds,WORD PTR [ebx+edi*8+0x7781e622]
  40cbc7:	sub    BYTE PTR [ecx+0x5bab394c],cl
  40cbcd:	int    0xcf
  40cbcf:	arpl   WORD PTR [eax-0x61df54dd],dx
  40cbd5:	pop    ebp
  40cbd6:	adc    edx,DWORD PTR [edx-0x4d1cd174]
  40cbdc:	mov    BYTE PTR [edx-0x8309403],dh
  40cbe2:	mov    edx,0x10768527
  40cbe7:	add    DWORD PTR [edx+0x6971859f],esi
  40cbed:	test   BYTE PTR [ebx+eax*8-0x4e],al
  40cbf1:	loop   0x40cc72
  40cbf3:	sbb    ch,BYTE PTR [ebp-0x7f784c80]
  40cbf9:	outs   dx,DWORD PTR ds:[esi]
  40cbfa:	cld    
  40cbfb:	mov    cl,0x9d
  40cbfd:	dec    esi
  40cbfe:	lods   eax,DWORD PTR ds:[esi]
  40cbff:	xlat   BYTE PTR ds:[ebx]
  40cc00:	fs test bh,bh
  40cc03:	pop    edx
  40cc04:	xor    esp,eax
  40cc06:	dec    ebp
  40cc07:	fneni(8087 only) 
  40cc09:	nop
  40cc0a:	fadd   st,st(7)
  40cc0c:	out    0x6c,eax
  40cc0e:	fsincos 
  40cc10:	ret    
  40cc11:	(bad)  
  40cc12:	push   ecx
  40cc13:	add    bh,BYTE PTR [ecx]
  40cc15:	popf   
  40cc16:	data16 out dx,al
  40cc18:	jmp    0x146a:0x61240a17
  40cc1f:	cmp    al,0x11
  40cc21:	shl    DWORD PTR [ebp+0x60bfa95e],cl
  40cc27:	push   ds
  40cc28:	out    dx,eax
  40cc29:	mov    edi,0x5d89b977
  40cc2e:	push   esp
  40cc2f:	sub    DWORD PTR [edi+0xf1c8f72],edi
  40cc35:	push   es
  40cc36:	sub    ch,BYTE PTR [ebx+0x7edf5085]
  40cc3c:	adc    al,0xb3
  40cc3e:	pop    eax
  40cc3f:	in     al,dx
  40cc40:	scas   eax,DWORD PTR es:[edi]
  40cc41:	pop    ds
  40cc42:	cmp    BYTE PTR ds:0x24a374fb,al
  40cc48:	pushf  
  40cc49:	pop    ds
  40cc4a:	sbb    esp,DWORD PTR [esi]
  40cc4c:	xor    ebp,DWORD PTR [esi+0x56]
  40cc4f:	jge    0x40ccc7
  40cc51:	push   esp
  40cc52:	in     eax,0x60
  40cc54:	xchg   edi,eax
  40cc55:	test   eax,0x9d349ff6
  40cc5a:	sub    DWORD PTR [eax+0x79227bf1],eax
  40cc60:	xchg   esp,eax
  40cc61:	jl     0x40cc17
  40cc63:	outs   dx,BYTE PTR ds:[esi]
  40cc64:	xlat   BYTE PTR ds:[ebx]
  40cc65:	retf   
  40cc66:	mov    esp,0x991f169a
  40cc6b:	sbb    DWORD PTR [edi-0x80],edi
  40cc6e:	pop    ds
  40cc6f:	ret    
  40cc70:	jae    0x40cc68
  40cc72:	pop    ecx
  40cc73:	cmp    al,0x28
  40cc75:	mov    ecx,0xd5cd2173
  40cc7a:	push   DWORD PTR [ecx+0x758140f8]
  40cc80:	mov    ds:0x13ce2e6,al
  40cc85:	and    DWORD PTR [edx+ebx*4],edx
  40cc88:	ss cdq 
  40cc8a:	xor    DWORD PTR [edi+0x18],ebp
  40cc8d:	add    al,0xed
  40cc8f:	add    eax,0xf8b8db9e
  40cc94:	and    eax,DWORD PTR [esi]
  40cc96:	fisub  DWORD PTR [ebx-0x76]
  40cc99:	sti    
  40cc9a:	inc    ecx
  40cc9b:	mov    ds:0x648e035c,eax
  40cca0:	in     eax,0xf4
  40cca2:	and    eax,0xedab6788
  40cca7:	push   ebx
  40cca8:	pop    ds
  40cca9:	jbe    0x40cd0b
  40ccab:	sub    bh,0x5e
  40ccae:	mov    ecx,0xfafb8b00
  40ccb3:	pop    esi
  40ccb4:	loope  0x40cc8e
  40ccb6:	(bad)  
  40ccb7:	sbb    edi,DWORD PTR [edx-0x3f]
  40ccba:	mov    ebp,0x1bbf4a39
  40ccbf:	xor    eax,0xb1da52c9
  40ccc4:	inc    eax
  40ccc5:	retf   0x3865
  40ccc8:	pop    ebx
  40ccc9:	outs   dx,DWORD PTR ds:[esi]
  40ccca:	xor    edx,DWORD PTR [edi+0x6620ead4]
  40ccd0:	mov    al,ds:0xf128d47b
  40ccd5:	push   ebp
  40ccd6:	jmp    0x19a5df68
  40ccdb:	inc    ebp
  40ccdc:	mov    BYTE PTR [edx+0x17c1918],bh
  40cce2:	out    0x8d,al
  40cce4:	and    DWORD PTR [edx+0x12932c69],eax
  40ccea:	and    cl,BYTE PTR [eax+0x5b]
  40cced:	int    0x7
  40ccef:	stos   DWORD PTR es:[edi],eax
  40ccf0:	pop    es
  40ccf1:	jmp    0xa42e734
  40ccf6:	sbb    al,0xdc
  40ccf8:	xchg   DWORD PTR [edi-0x12],ecx
  40ccfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccfc:	push   edx
  40ccfd:	pop    edi
  40ccfe:	enter  0xc82d,0x4b
  40cd02:	inc    edx
  40cd03:	leave  
  40cd04:	or     dh,BYTE PTR [ebp-0x7f]
  40cd07:	dec    edx
  40cd08:	push   esi
  40cd09:	mul    ecx
  40cd0b:	xchg   ebp,eax
  40cd0c:	push   ebx
  40cd0d:	nop
  40cd0e:	test   DWORD PTR [esi+0x424917f],0x12978218
  40cd18:	ret    0x88e5
  40cd1b:	xchg   edi,eax
  40cd1c:	test   BYTE PTR [eax],ch
  40cd1e:	pop    ds
  40cd1f:	stos   BYTE PTR es:[edi],al
  40cd20:	add    DWORD PTR [ecx-0x22960266],edx
  40cd26:	(bad)  
  40cd27:	bound  ebx,QWORD PTR ds:0xbbe84777
  40cd2d:	loopne 0x40cd0f
  40cd2f:	cmp    BYTE PTR [edx],0x98
  40cd32:	lds    eax,FWORD PTR [ecx]
  40cd34:	out    0x2e,al
  40cd36:	ss mov al,0xe4
  40cd39:	xor    ch,bh
  40cd3b:	pop    ss
  40cd3c:	ins    BYTE PTR es:[edi],dx
  40cd3d:	cli    
  40cd3e:	lock lods al,BYTE PTR ds:[esi]
  40cd40:	(bad)  
  40cd41:	fistp  WORD PTR [ebx+eax*1]
  40cd44:	push   0xf7d95575
  40cd49:	mov    edx,DWORD PTR [esi]
  40cd4b:	jecxz  0x40cd1c
  40cd4d:	je     0x40cdcb
  40cd4f:	pusha  
  40cd50:	xchg   edx,eax
  40cd51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd52:	push   esi
  40cd53:	(bad)  
  40cd54:	je     0x40cd6d
  40cd56:	loopne 0x40ccfd
  40cd58:	adc    eax,DWORD PTR [ebx-0x64]
  40cd5b:	ins    BYTE PTR es:[edi],dx
  40cd5c:	mov    bl,bh
  40cd5e:	sbb    eax,0xdf783606
  40cd63:	xchg   ecx,eax
  40cd64:	mov    dl,0xa7
  40cd66:	inc    ebx
  40cd67:	xor    BYTE PTR [edi],dl
  40cd69:	fnstsw WORD PTR [eax-0x13]
  40cd6c:	aaa    
  40cd6d:	mov    edx,0x3d09cb4d
  40cd72:	shl    BYTE PTR [eax+edi*8-0x3da1b2bc],0xe
  40cd7a:	mov    ds:0xa03d4db8,al
  40cd7f:	adc    edi,esp
  40cd81:	xor    bl,BYTE PTR [edx+0x70]
  40cd84:	stc    
  40cd85:	dec    edx
  40cd86:	outs   dx,BYTE PTR ds:[esi]
  40cd87:	les    eax,FWORD PTR [edx+eiz*8-0x2df88152]
  40cd8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd8f:	int    0xcd
  40cd91:	pop    edi
  40cd92:	inc    ecx
  40cd93:	pusha  
  40cd94:	(bad)  
  40cd95:	retf   
  40cd96:	es mov ebp,0x35702696
  40cd9c:	jl     0x40cd7a
  40cd9e:	dec    esp
  40cd9f:	and    al,0xd0
  40cda1:	sub    BYTE PTR [ebx],ch
  40cda3:	test   al,0xdf
  40cda5:	mov    bh,0x10
  40cda7:	xlat   BYTE PTR ds:[ebx]
  40cda8:	and    al,0xdf
  40cdaa:	into   
  40cdab:	out    dx,eax
  40cdac:	mov    bh,0x61
  40cdae:	fild   QWORD PTR [eax]
  40cdb0:	cmp    BYTE PTR [esi-0x19846628],ch
  40cdb6:	hlt    
  40cdb7:	lods   al,BYTE PTR ds:[esi]
  40cdb8:	loope  0x40cd81
  40cdba:	dec    ebp
  40cdbb:	sbb    al,0xe4
  40cdbd:	and    ch,BYTE PTR [esp+eax*2]
  40cdc0:	inc    ebx
  40cdc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdc2:	test   DWORD PTR [edi],esi
  40cdc4:	test   cl,0x4b
  40cdc7:	xchg   ebp,eax
  40cdc8:	mov    ecx,0x7eee4d67
  40cdcd:	sbb    al,0xb2
  40cdcf:	dec    edx
  40cdd0:	sti    
  40cdd1:	pop    es
  40cdd2:	inc    BYTE PTR cs:[ebp+0x5]
  40cdd6:	add    bl,dh
  40cdd8:	ins    BYTE PTR es:[edi],dx
  40cdd9:	fmul   DWORD PTR [ebx+eiz*2+0x13b555a6]
  40cde0:	lds    ecx,FWORD PTR [edi]
  40cde2:	lods   eax,DWORD PTR ds:[esi]
  40cde3:	pop    ds
  40cde4:	shl    ebp,0xb6
  40cde7:	push   ebx
  40cde8:	push   edx
  40cde9:	pmaddwd mm1,QWORD PTR [edi-0x26dee975]
  40cdf0:	push   cs
  40cdf1:	pop    esp
  40cdf2:	pop    esp
  40cdf3:	pushf  
  40cdf4:	push   0x63
  40cdf6:	push   esi
  40cdf7:	adc    eax,esp
  40cdf9:	in     eax,dx
  40cdfa:	jae    0x40cdc8
  40cdfc:	cmp    edx,esp
  40cdfe:	inc    edx
  40cdff:	fild   DWORD PTR [ecx]
  40ce01:	test   al,0x7d
  40ce03:	or     eax,0xbb385b1d
  40ce08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce09:	jp     0x40ce17
  40ce0b:	lahf   
  40ce0c:	xor    eax,0x1076b290
  40ce11:	pushf  
  40ce12:	push   ss
  40ce13:	jle    0x40ce26
  40ce15:	or     eax,0x4580a7ba
  40ce1a:	pop    esi
  40ce1b:	icebp  
  40ce1c:	fstp   TBYTE PTR [edi-0x38e547a0]
  40ce22:	fnsave [edx-0x4e]
  40ce25:	pop    edx
  40ce26:	xchg   BYTE PTR [ebx+0x2c],dh
  40ce29:	cdq    
  40ce2a:	lea    esp,[esp+ebx*4+0x59599905]
  40ce31:	jecxz  0x40ce71
  40ce33:	jl     0x40ce3f
  40ce35:	mov    edi,0x875f87b3
  40ce3a:	mov    cl,0x9a
  40ce3c:	cwde   
  40ce3d:	bound  esi,QWORD PTR [edi+0x5e2cd3d1]
  40ce43:	popa   
  40ce44:	ror    DWORD PTR [edi],0xbd
  40ce47:	call   0x2d17e7ae
  40ce4c:	and    ecx,DWORD PTR [ebx-0x58885609]
  40ce52:	dec    edi
  40ce53:	mov    ecx,0x64a00628
  40ce58:	nop
  40ce59:	or     BYTE PTR [ebp+0x62],bl
  40ce5c:	jb     0x40cde2
  40ce5e:	xchg   ecx,eax
  40ce5f:	cwde   
  40ce60:	ss dec eax
  40ce62:	stos   DWORD PTR es:[edi],eax
  40ce63:	out    dx,eax
  40ce64:	or     al,0x94
  40ce66:	iret   
  40ce67:	outs   dx,DWORD PTR ds:[esi]
  40ce68:	jo     0x40ceb0
  40ce6a:	call   0x2cb1a85b
  40ce6f:	retf   
  40ce70:	adc    esp,ebx
  40ce72:	push   esi
  40ce73:	push   0x1d
  40ce75:	ins    DWORD PTR es:[edi],dx
  40ce76:	in     al,dx
  40ce77:	test   eax,0x4bc6d41f
  40ce7c:	jmp    0xffb75ef
  40ce81:	mov    ecx,0xf38822d7
  40ce86:	xor    BYTE PTR [ebp+0x119977c0],bl
  40ce8c:	or     eax,0x7d696547
  40ce91:	push   esp
  40ce92:	mov    eax,ds:0xb770a8dd
  40ce97:	je     0x40cf04
  40ce99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce9a:	dec    edi
  40ce9b:	mov    ds:0x8fc42c36,eax
  40cea0:	inc    edi
  40cea1:	mov    ebp,0xf8003a8a
  40cea6:	pop    ebx
  40cea7:	and    al,ah
  40cea9:	nop
  40ceaa:	rol    DWORD PTR [eax+0x331e7aa3],1
  40ceb0:	adc    DWORD PTR [esi+0x3deadf88],esi
  40ceb6:	fld    DWORD PTR [esi+0x7b493d51]
  40cebc:	adc    bh,bl
  40cebe:	mov    dl,0xa0
  40cec0:	or     al,0xfa
  40cec2:	inc    eax
  40cec3:	and    DWORD PTR [edi+0x43],ebp
  40cec6:	(bad)  
  40cec8:	xor    esp,DWORD PTR [eax-0x4c]
  40cecb:	scas   al,BYTE PTR es:[edi]
  40cecc:	push   ss
  40cecd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cece:	outs   dx,BYTE PTR ds:[esi]
  40cecf:	or     al,0xfd
  40ced1:	mov    dl,0x53
  40ced3:	push   0x4098ab06
  40ced8:	loope  0x40cf42
  40ceda:	scas   al,BYTE PTR es:[edi]
  40cedb:	dec    esi
  40cedc:	mov    bl,0xff
  40cede:	lahf   
  40cedf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cee0:	or     eax,0x41631e94
  40cee5:	pop    edi
  40cee6:	loop   0x40cef0
  40cee8:	jg     0x40cee5
  40ceea:	mov    bh,0x5f
  40ceec:	jle    0x40ce9a
  40ceee:	nop
  40ceef:	jmp    0x40ce94
  40cef1:	cmp    ebx,DWORD PTR [eax+esi*8]
  40cef4:	sahf   
  40cef5:	retf   0x3bcf
  40cef8:	xor    al,0xd7
  40cefa:	(bad)  
  40cefb:	in     eax,dx
  40cefc:	or     eax,0x572706e5
  40cf01:	mov    al,0xa2
  40cf03:	mov    ch,0x3a
  40cf05:	int    0xae
  40cf07:	mov    ds:0x42b2f2d,al
  40cf0d:	dec    edx
  40cf0e:	push   ss
  40cf0f:	js     0x40cf57
  40cf11:	dec    ecx
  40cf12:	std    
  40cf13:	icebp  
  40cf14:	inc    ecx
  40cf15:	push   esi
  40cf16:	cli    
  40cf17:	jno    0x40cec1
  40cf19:	push   ecx
  40cf1a:	sub    cl,BYTE PTR [ebp+ebp*2+0x5f]
  40cf1e:	inc    ecx
  40cf1f:	mov    BYTE PTR [ebp-0x59],bl
  40cf22:	push   0xb4410c0c
  40cf27:	das    
  40cf28:	data16 fdivr st(2),st
  40cf2b:	pushf  
  40cf2c:	jno    0x40cf6c
  40cf2e:	ds pop es
  40cf30:	adc    dl,0xf6
  40cf33:	cmc    
  40cf34:	fmulp  st(3),st
  40cf36:	(bad)  
  40cf38:	push   esp
  40cf39:	repz push ebp
  40cf3b:	jl     0x40cf2b
  40cf3d:	inc    dl
  40cf3f:	ror    BYTE PTR [esi+0x1513a8d8],0xb7
  40cf46:	adc    ah,BYTE PTR [eax+0x65c60902]
  40cf4c:	retf   0xaf75
  40cf4f:	scas   eax,DWORD PTR es:[edi]
  40cf50:	jg     0x40cf69
  40cf52:	inc    esi
  40cf53:	stc    
  40cf54:	inc    eax
  40cf55:	pop    eax
  40cf56:	popa   
  40cf57:	mov    dh,bl
  40cf59:	loop   0x40cf8f
  40cf5b:	or     dl,BYTE PTR [eax]
  40cf5d:	scas   al,BYTE PTR es:[edi]
  40cf5e:	dec    esp
  40cf5f:	sbb    eax,DWORD PTR ds:0xa7bc61fb
  40cf65:	xchg   esp,eax
  40cf66:	call   0x9ad3:0x75f6ce15
  40cf6d:	jno    0x40cfad
  40cf6f:	ffree  st(4)
  40cf71:	(bad)  
  40cf72:	mov    ebp,0x765bb36e
  40cf77:	push   si
  40cf79:	and    al,0x2
  40cf7b:	test   BYTE PTR [esi+edi*2-0x1e2d46e3],ah
  40cf82:	stc    
  40cf83:	fs popf 
  40cf85:	test   eax,0xc08c5906
  40cf8a:	cmc    
  40cf8b:	aam    0x21
  40cf8d:	rcl    DWORD PTR [edi+eax*8+0x4a],1
  40cf91:	mov    dl,0x9c
  40cf93:	mov    dh,0xf1
  40cf95:	out    dx,eax
  40cf96:	dec    ebp
  40cf97:	daa    
  40cf98:	mov    dl,0x59
  40cf9a:	loope  0x40cfa9
  40cf9c:	pop    esp
  40cf9d:	jmp    0xc98dec45
  40cfa2:	push   cs
  40cfa3:	les    ecx,FWORD PTR [esi+0x53c5084c]
  40cfa9:	popf   
  40cfaa:	xor    BYTE PTR [ebx+0x46],0x2
  40cfae:	mov    ah,0x1
  40cfb0:	bound  edx,QWORD PTR [esp+esi*8-0x2843c812]
  40cfb7:	ins    BYTE PTR es:[edi],dx
  40cfb8:	fist   DWORD PTR ds:0xcb83c1db
  40cfbe:	nop
  40cfbf:	xchg   esi,eax
  40cfc0:	in     al,dx
  40cfc1:	dec    edi
  40cfc2:	cmp    DWORD PTR [ecx-0x25],esi
  40cfc5:	je     0x40cf4b
  40cfc7:	add    eax,ebx
  40cfc9:	or     edx,ebp
  40cfcb:	loopne 0x40cf58
  40cfcd:	pop    ecx
  40cfce:	(bad)  
  40cfcf:	pusha  
  40cfd0:	mov    bh,0x18
  40cfd2:	and    DWORD PTR [ebx-0x752437b6],ecx
  40cfd8:	push   ebp
  40cfd9:	in     al,0x19
  40cfdb:	in     eax,0xbe
  40cfdd:	inc    ebx
  40cfde:	pushf  
  40cfdf:	push   0xffffffa6
  40cfe1:	cmc    
  40cfe2:	jne    0x40cff9
  40cfe4:	std    
  40cfe5:	dec    esp
  40cfe6:	nop
  40cfe7:	div    BYTE PTR [ebp+0x5d]
  40cfea:	mov    WORD PTR [edx],fs
  40cfec:	lds    edi,FWORD PTR [ebp+esi*2-0x28099aed]
  40cff3:	daa    
  40cff4:	lock rcl BYTE PTR [ecx+0x3eeec4e2],1
  40cffb:	or     cl,al
  40cffd:	pop    esi
  40cffe:	xchg   esp,eax
  40cfff:	sbb    edx,DWORD PTR [eax-0x425094a5]
  40d005:	sub    esi,DWORD PTR [edi+0x4f2f02a3]
  40d00b:	jbe    0x40d00c
  40d00d:	pop    esp
  40d00e:	pop    es
  40d00f:	add    DWORD PTR [eax-0x64fd7840],0x3a
  40d016:	sti    
  40d017:	inc    ebp
  40d018:	dec    eax
  40d019:	out    dx,eax
  40d01a:	into   
  40d01b:	popf   
  40d01c:	sub    al,0xf8
  40d01e:	jmp    0xa504:0xdff33ce8
  40d025:	mov    ebp,0xc495300a
  40d02a:	pop    edx
  40d02b:	jmp    0x63ef:0x674cdc6d
  40d032:	push   es
  40d033:	mov    ebx,0x7df1ee61
  40d038:	pusha  
  40d039:	popa   
  40d03a:	jmp    0x7d47:0xa9c15468
  40d041:	sbb    al,0x7b
  40d043:	sbb    al,bh
  40d045:	clc    
  40d046:	retf   0x15f6
  40d049:	mov    al,ds:0x5b0176b1
  40d04e:	xlat   BYTE PTR ds:[ebx]
  40d04f:	in     eax,dx
  40d050:	dec    DWORD PTR [edx]
  40d052:	dec    edi
  40d053:	jb     0x40d032
  40d055:	in     eax,0x6f
  40d057:	sub    cl,BYTE PTR [ebp-0x1e]
  40d05a:	jg     0x40d08e
  40d05c:	bound  edi,QWORD PTR [edx+0x6c]
  40d05f:	push   cs
  40d060:	add    DWORD PTR [edx+0x7f85130b],0xe2c411d8
  40d06a:	add    al,0xd
  40d06c:	or     BYTE PTR [ebp+0x6879a7ce],bl
  40d072:	fcomp  QWORD PTR [ecx]
  40d074:	lock or al,0x77
  40d077:	mov    esp,es
  40d079:	inc    esi
  40d07a:	fisubr WORD PTR [ecx+ebp*4]
  40d07d:	xor    esi,ecx
  40d07f:	call   0xf57d:0x772a4bd9
  40d086:	or     eax,0x4a03d131
  40d08b:	xor    ah,BYTE PTR [edx]
  40d08d:	push   0x11
  40d08f:	sub    eax,0xafaf499
  40d094:	pop    eax
  40d095:	sbb    ecx,DWORD PTR ds:0x6de470f0
  40d09b:	or     eax,0x298595c5
  40d0a0:	outs   dx,BYTE PTR ds:[esi]
  40d0a1:	mov    dh,0xbb
  40d0a3:	stos   BYTE PTR es:[edi],al
  40d0a4:	fmul   QWORD PTR [ebx]
  40d0a6:	fisubr DWORD PTR [ecx]
  40d0a8:	inc    esi
  40d0a9:	jno    0x40d043
  40d0ab:	pop    esp
  40d0ac:	or     BYTE PTR [edx],dh
  40d0ae:	push   ecx
  40d0af:	cmp    dh,BYTE PTR [eax-0x2c]
  40d0b2:	xchg   DWORD PTR [eax+0x5d355425],ecx
  40d0b8:	sbb    edi,DWORD PTR [edx-0x3d2f278]
  40d0be:	popa   
  40d0bf:	jl     0x40d0e5
  40d0c1:	lods   al,BYTE PTR ds:[esi]
  40d0c2:	js     0x40d143
  40d0c4:	hlt    
  40d0c5:	jecxz  0x40d114
  40d0c7:	or     BYTE PTR [ebp+0x57779d99],0x1d
  40d0ce:	inc    edi
  40d0cf:	fild   WORD PTR [edx-0x69121828]
  40d0d5:	std    
  40d0d6:	pushf  
  40d0d7:	cmp    eax,0x76ecbcc
  40d0dc:	inc    esi
  40d0dd:	sbb    al,dl
  40d0df:	stos   DWORD PTR es:[edi],eax
  40d0e0:	pop    ebx
  40d0e1:	in     eax,0x7e
  40d0e3:	sar    BYTE PTR ss:[esi+0xba07474],cl
  40d0ea:	mov    ebp,0x94fb5fbc
  40d0ef:	xchg   esi,eax
  40d0f0:	sub    DWORD PTR [edx+0x37],ebx
  40d0f3:	jno    0x40d0af
  40d0f5:	add    DWORD PTR [edx],ebx
  40d0f7:	bound  ebp,QWORD PTR [edx]
  40d0f9:	xchg   DWORD PTR [ecx+0x642707c1],edx
  40d0ff:	pushf  
  40d100:	repz fmul st,st(7)
  40d103:	pop    eax
  40d104:	jecxz  0x40d14a
  40d106:	push   0xba69bf7
  40d10b:	xchg   ebp,eax
  40d10c:	cld    
  40d10d:	mov    ?,eax
  40d10f:	(bad)  
  40d110:	pop    ds
  40d111:	xchg   edx,eax
  40d112:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d113:	mov    ch,0x80
  40d115:	cmove  edx,DWORD PTR [esi]
  40d118:	pop    edx
  40d119:	clc    
  40d11a:	(bad)  
  40d11b:	out    dx,al
  40d11c:	outs   dx,DWORD PTR ds:[esi]
  40d11d:	fnstcw WORD PTR [esi+0x61]
  40d120:	sbb    al,0x70
  40d122:	jns    0x40d108
  40d124:	dec    esp
  40d125:	push   es
  40d126:	jbe    0x40d0c6
  40d128:	mov    ebp,0x1d91b639
  40d12d:	repnz dec edi
  40d12f:	jg     0x40d14f
  40d131:	or     eax,0xb7faa9e4
  40d136:	add    BYTE PTR [ebx+0x42d1d701],dl
  40d13c:	jle    0x40d129
  40d13e:	lahf   
  40d13f:	and    cl,al
  40d141:	popf   
  40d142:	jle    0x40d11c
  40d144:	add    esi,edi
  40d146:	sbb    eax,DWORD PTR [esi+0x3b]
  40d149:	add    BYTE PTR es:[ebx],dh
  40d14c:	retf   
  40d14d:	cwde   
  40d14e:	pop    esi
  40d14f:	inc    edi
  40d150:	mov    al,0x58
  40d152:	lea    eax,[ebx-0x74]
  40d155:	inc    esp
  40d156:	call   0x7116:0x94518115
  40d15d:	(bad)  
  40d15e:	aas    
  40d15f:	mov    ds:0x397400dd,eax
  40d164:	xor    cl,BYTE PTR [eax+0x3c]
  40d167:	jns    0x40d100
  40d169:	pop    eax
  40d16a:	stos   BYTE PTR es:[edi],al
  40d16b:	mov    ebx,0x262eeb4d
  40d170:	mov    ds:0x781d4095,eax
  40d175:	rcr    DWORD PTR [ecx+0x5f],cl
  40d178:	out    0xfc,al
  40d17a:	cwde   
  40d17b:	sbb    bl,BYTE PTR [edi]
  40d17d:	push   edx
  40d17e:	push   esi
  40d17f:	imul   ebp,DWORD PTR [edx-0x5e],0x5e93f342
  40d186:	or     esi,DWORD PTR [eax]
  40d188:	mov    cl,0x80
  40d18a:	mov    ebp,0xf2e2e701
  40d18f:	or     eax,0x94a2c513
  40d194:	or     BYTE PTR fs:[ebp+0x78],ch
  40d198:	mov    esi,0x4c829485
  40d19d:	aad    0x3c
  40d19f:	lods   al,BYTE PTR ds:[esi]
  40d1a0:	or     BYTE PTR [eax],cl
  40d1a2:	test   DWORD PTR [esi+eax*8],esp
  40d1a5:	inc    esi
  40d1a6:	xchg   ebx,eax
  40d1a7:	or     eax,0xb7e7e370
  40d1ac:	int3   
  40d1ad:	call   0x3f969000
  40d1b2:	mov    WORD PTR [esi+edx*2],?
  40d1b5:	mov    eax,DWORD PTR [edx-0x252aa51c]
  40d1bb:	enter  0x84f5,0x77
  40d1bf:	lods   eax,DWORD PTR ds:[esi]
  40d1c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1c1:	sbb    BYTE PTR [edx-0x678b015d],ah
  40d1c7:	stos   BYTE PTR es:[edi],al
  40d1c8:	ja     0x40d1ff
  40d1ca:	sbb    al,0x73
  40d1cc:	ds inc edi
  40d1ce:	mov    cl,0xbf
  40d1d0:	dec    esi
  40d1d1:	inc    ecx
  40d1d2:	mov    eax,ds:0xbfad807f
  40d1d7:	inc    edi
  40d1d8:	ds cmp eax,edi
  40d1db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1dc:	lea    ebp,[esi-0x1eab63e1]
  40d1e2:	or     ebp,0x3
  40d1e5:	ins    DWORD PTR es:[edi],dx
  40d1e6:	inc    eax
  40d1e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1e8:	push   edi
  40d1e9:	xchg   ecx,eax
  40d1ea:	pop    ebp
  40d1eb:	xchg   esi,eax
  40d1ec:	js     0x40d1b6
  40d1ee:	add    BYTE PTR [esi],bh
  40d1f0:	mov    ecx,0xe98f2f5f
  40d1f5:	xchg   ebx,eax
  40d1f6:	shl    BYTE PTR [ecx+0x2a88dcd1],0x9d
  40d1fd:	add    DWORD PTR [edi+0xe],esp
  40d200:	fs in  al,dx
  40d202:	adc    eax,0xfeeb6d68
  40d207:	or     esi,ebp
  40d209:	lea    eax,[ecx+0x5904eca0]
  40d20f:	mov    ebp,0x70497d9e
  40d214:	std    
  40d215:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d216:	lahf   
  40d217:	sub    al,0xa1
  40d219:	and    al,0xcf
  40d21b:	jmp    0x40d286
  40d21d:	mov    edx,0x8fa4ab65
  40d222:	call   0x80a6:0xd795ea47
  40d229:	jae    0x40d1d1
  40d22b:	outs   dx,BYTE PTR ds:[esi]
  40d22c:	lods   eax,DWORD PTR ds:[esi]
  40d22d:	loopne 0x40d283
  40d22f:	xchg   DWORD PTR [edi*1+0x1242e270],edi
  40d236:	pushf  
  40d237:	(bad)  
  40d238:	rol    DWORD PTR [ebx],1
  40d23a:	push   esp
  40d23b:	mov    esi,0x46ef432
  40d240:	xchg   BYTE PTR [eax],cl
  40d242:	mov    cl,0x75
  40d244:	xchg   esp,eax
  40d245:	xlat   BYTE PTR ds:[ebx]
  40d246:	ds inc edx
  40d248:	sti    
  40d249:	aad    0xf5
  40d24b:	arpl   cx,bx
  40d24d:	jle    0x40d215
  40d24f:	imul   ebx,DWORD PTR [ebp+0x3e],0x9b5f6e4c
  40d256:	(bad)  
  40d257:	not    DWORD PTR [ecx-0x79]
  40d25a:	jle    0x40d230
  40d25c:	mov    eax,DWORD PTR [ebp+0x2d]
  40d25f:	sub    BYTE PTR [ebp-0x14f01df2],0x65
  40d266:	or     eax,0x8c1c9d9b
  40d26b:	sbb    al,BYTE PTR [ebx]
  40d26d:	(bad)  
  40d26e:	cmp    ecx,eax
  40d270:	je     0x40d2ae
  40d276:	jmp    0x40d29f
  40d27b:	mov    eax,DWORD PTR [ebp-0x4]
  40d27e:	mov    ecx,DWORD PTR [ebp-0x8]
  40d281:	xor    eax,esi
  40d283:	add    eax,edi
  40d285:	cmp    ecx,eax
  40d287:	mov    eax,DWORD PTR [ebp-0x4]
  40d28a:	je     0x40d2e9
  40d290:	mov    ecx,DWORD PTR [ebp-0x30]
  40d293:	xor    eax,esi
  40d295:	add    eax,edi
  40d297:	cmp    ecx,eax
  40d299:	je     0x40f6a6
  40d29f:	lea    eax,[ebp-0x8]
  40d2a2:	push   eax
  40d2a3:	push   DWORD PTR [ebp-0x28]
  40d2a6:	push   DWORD PTR [ebp+0xc]
  40d2a9:	call   0x411c5a
  40d2ae:	mov    eax,DWORD PTR [ebp-0x4]
  40d2b1:	mov    ecx,DWORD PTR [ebp-0x8]
  40d2b4:	xor    eax,esi
  40d2b6:	add    eax,edi
  40d2b8:	cmp    ecx,eax
  40d2ba:	je     0x40d2d5
  40d2c0:	mov    eax,DWORD PTR [ebp-0x34]
  40d2c3:	movzx  eax,WORD PTR [eax+ebx*2]
  40d2c7:	mov    ecx,DWORD PTR [ebp-0x14]
  40d2ca:	mov    eax,DWORD PTR [ecx+eax*4]
  40d2cd:	mov    DWORD PTR [ebp-0x38],eax
  40d2d0:	jmp    0x40d27b
  40d2d5:	mov    eax,DWORD PTR [ebp-0xc]
  40d2d8:	xor    eax,esi
  40d2da:	lea    ebx,[ebx+eax*1+0x3272f3]
  40d2e1:	jmp    0x4087e2
  40d2e6:	mov    eax,DWORD PTR [ebp-0x4]
  40d2e9:	xor    eax,esi
  40d2eb:	jmp    0x40f69f
  40d2f0:	add    BYTE PTR [esi],cl
  40d2f2:	mov    ch,BYTE PTR [esp+eax*4+0x5e8600a0]
  40d2f9:	hlt    
  40d2fa:	aas    
  40d2fb:	push   eax
  40d2fc:	pop    es
  40d2fd:	pushf  
  40d2fe:	pop    ecx
  40d2ff:	call   0x5ce8:0x8383d295
  40d306:	add    DWORD PTR [ebx+0x225d3696],0x51
  40d30d:	out    0xe9,eax
  40d30f:	clc    
  40d310:	jmp    0x4854:0xdba2cd03
  40d317:	xor    BYTE PTR [ebx],0xc7
  40d31a:	xor    al,0xfe
  40d31c:	add    al,0xf1
  40d31e:	jl     0x40d2fa
  40d320:	call   0xa54d:0x32c876a2
  40d327:	inc    esp
  40d328:	fs scas al,BYTE PTR es:[edi]
  40d32a:	adc    DWORD PTR [esi],ebx
  40d32c:	sbb    DWORD PTR [ebp+0x3e],ecx
  40d32f:	shl    BYTE PTR [esi-0x62],cl
  40d332:	rcr    DWORD PTR [edx+0x1f09d465],1
  40d338:	aad    0x97
  40d33a:	call   0x51d530d6
  40d33f:	rcr    DWORD PTR [eax+0x3],1
  40d342:	cmovs  ebx,DWORD PTR [ecx]
  40d345:	cli    
  40d346:	test   al,0xb0
  40d348:	pop    edi
  40d349:	stos   BYTE PTR es:[edi],al
  40d34a:	dec    edi
  40d34b:	inc    ecx
  40d34c:	stc    
  40d34d:	inc    edi
  40d34e:	enter  0xb167,0x6b
  40d352:	ins    DWORD PTR es:[edi],dx
  40d353:	sbb    bl,BYTE PTR [esi+0x422a6cd1]
  40d359:	daa    
  40d35a:	shr    DWORD PTR [ebx+0x7d],cl
  40d35d:	rcl    BYTE PTR [ecx+0x20],1
  40d360:	dec    esp
  40d361:	push   es
  40d362:	xchg   DWORD PTR [ebp+0x14],ecx
  40d365:	jmp    0x40d315
  40d367:	pushf  
  40d368:	push   ss
  40d369:	loopne 0x40d390
  40d36b:	sub    BYTE PTR [esi-0xd],0x9b
  40d36f:	jl     0x40d308
  40d371:	das    
  40d372:	in     eax,0xab
  40d374:	pop    ds
  40d375:	push   0x45
  40d377:	fs pop ebx
  40d379:	dec    ecx
  40d37a:	icebp  
  40d37b:	pop    ecx
  40d37c:	cdq    
  40d37d:	mov    ch,0xa9
  40d37f:	add    BYTE PTR [ebp+0x12fd011d],al
  40d385:	add    al,0x4b
  40d387:	rcl    BYTE PTR [edi-0x3f43460f],0xd1
  40d38e:	mov    ecx,0x5a1a253a
  40d393:	add    BYTE PTR [eax],dh
  40d395:	pop    es
  40d396:	inc    edi
  40d397:	jnp    0x40d32c
  40d399:	push   cs
  40d39a:	pushf  
  40d39b:	call   DWORD PTR [ebx+0x212e5631]
  40d3a1:	loope  0x40d38d
  40d3a3:	cld    
  40d3a4:	sub    eax,0xab0e164a
  40d3a9:	add    eax,0x11e77fc3
  40d3ae:	inc    esi
  40d3af:	call   0x4634:0xf0a9fb5d
  40d3b6:	xor    DWORD PTR [ecx+0x5a6cfad8],ebp
  40d3bc:	mov    al,ds:0xcc29c10
  40d3c1:	(bad)  
  40d3c2:	dec    ecx
  40d3c3:	xchg   esi,eax
  40d3c4:	je     0x40d348
  40d3c6:	adc    DWORD PTR [edi],esp
  40d3c8:	push   es
  40d3c9:	shr    BYTE PTR [esi-0x18],0x7b
  40d3cd:	jo     0x40d371
  40d3cf:	jae    0x40d3c0
  40d3d1:	cld    
  40d3d2:	push   esp
  40d3d3:	gs repnz add al,0x5e
  40d3d7:	popf   
  40d3d8:	mov    ecx,0x3122618a
  40d3dd:	mov    dh,0xcf
  40d3df:	repz push ds
  40d3e1:	jle    0x40d423
  40d3e3:	jge    0x40d373
  40d3e5:	sub    cl,BYTE PTR [eax+0x3256f77c]
  40d3eb:	int    0x1
  40d3ed:	push   ebp
  40d3ee:	inc    ebx
  40d3ef:	stc    
  40d3f0:	xchg   BYTE PTR [edx],ah
  40d3f2:	lds    esi,FWORD PTR [ebx+0x3]
  40d3f5:	xor    DWORD PTR [eax+edi*1],esp
  40d3f8:	enter  0x738a,0xfc
  40d3fc:	jmp    0xe04d:0x8d58311d
  40d403:	sbb    al,0x1f
  40d405:	dec    ebx
  40d406:	dec    esp
  40d407:	pop    ss
  40d408:	or     dh,BYTE PTR [ecx+0x7a]
  40d40b:	into   
  40d40c:	mov    ds:0xcdd0fb11,eax
  40d411:	lahf   
  40d412:	push   0x17
  40d414:	xor    ebx,DWORD PTR [ebx]
  40d416:	xlat   BYTE PTR ds:[ebx]
  40d417:	cwde   
  40d418:	mov    ds:0xd83abd93,eax
  40d41d:	jno    0x40d3ec
  40d41f:	ror    BYTE PTR [edx+0x35],0x1b
  40d423:	xchg   ebp,eax
  40d424:	mov    al,0x38
  40d426:	jmp    0xfbf6:0x76b9bd83
  40d42d:	mov    ebx,0x76e088f1
  40d432:	test   DWORD PTR [edx+ebx*1],ecx
  40d435:	xor    cl,BYTE PTR [ebx]
  40d437:	loop   0x40d470
  40d439:	sub    ah,dh
  40d43b:	adc    esi,DWORD PTR [ecx]
  40d43d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d43e:	ret    
  40d43f:	hlt    
  40d440:	pop    ebx
  40d441:	dec    ebp
  40d442:	fwait
  40d443:	gs dec edx
  40d445:	add    bl,BYTE PTR [edx]
  40d447:	cmc    
  40d448:	and    dl,al
  40d44a:	std    
  40d44b:	xchg   esi,eax
  40d44c:	rcr    BYTE PTR [ebx+eax*2-0x7c],1
  40d450:	lods   eax,DWORD PTR ds:[esi]
  40d451:	mov    cl,0xe
  40d453:	stos   DWORD PTR es:[edi],eax
  40d454:	call   0x65b9:0x36f638d7
  40d45b:	loop   0x40d48d
  40d45d:	(bad)  
  40d45e:	stos   DWORD PTR es:[edi],eax
  40d45f:	ret    0x8317
  40d462:	out    0x11,eax
  40d464:	adc    ecx,DWORD PTR [edi-0x3037ebe1]
  40d46a:	pop    ss
  40d46b:	out    0xff,al
  40d46d:	dec    esi
  40d46e:	cs xchg esi,eax
  40d470:	or     al,0xd
  40d472:	lods   eax,DWORD PTR ds:[esi]
  40d473:	xor    cl,BYTE PTR ds:[edx+eiz*8+0x10]
  40d478:	aas    
  40d479:	jo     0x40d46e
  40d47b:	xchg   ebx,eax
  40d47c:	cli    
  40d47d:	mov    esp,0x3b56d2b0
  40d482:	out    dx,eax
  40d483:	or     cl,ah
  40d485:	add    ebp,edi
  40d487:	sbb    ebx,DWORD PTR [ebx+0x5]
  40d48a:	test   DWORD PTR [eax],ecx
  40d48c:	dec    esi
  40d48d:	inc    ebp
  40d48e:	add    al,0xbe
  40d490:	xchg   ecx,eax
  40d491:	mov    ebx,0x461aa7d2
  40d496:	hlt    
  40d497:	rol    DWORD PTR [ecx+0x2a32f090],0xf0
  40d49e:	jp     0x40d49c
  40d4a0:	xor    esp,esp
  40d4a2:	mov    al,ds:0xdc0c7058
  40d4a7:	inc    eax
  40d4a8:	(bad)  
  40d4a9:	adc    ebx,DWORD PTR ds:0x3d2efb94
  40d4af:	push   ss
  40d4b0:	clc    
  40d4b1:	and    ah,BYTE PTR [edx+0x74]
  40d4b4:	mov    edi,0x89b9df01
  40d4b9:	loope  0x40d535
  40d4bb:	inc    edx
  40d4bc:	pop    esi
  40d4bd:	or     al,0xfe
  40d4bf:	add    bh,BYTE PTR ds:0x42e2ea91
  40d4c5:	add    al,0xeb
  40d4c7:	popa   
  40d4c8:	xchg   edi,eax
  40d4c9:	xchg   ecx,eax
  40d4ca:	mov    edx,0x15b81ca
  40d4cf:	xchg   esp,eax
  40d4d0:	into   
  40d4d1:	outs   dx,BYTE PTR ds:[esi]
  40d4d2:	jae    0x40d489
  40d4d4:	inc    ecx
  40d4d5:	or     bl,bl
  40d4d7:	mov    dl,0xf5
  40d4d9:	xchg   esp,eax
  40d4da:	mov    bh,BYTE PTR [edi]
  40d4dc:	pushf  
  40d4dd:	fimul  DWORD PTR [edi-0x71]
  40d4e0:	push   ds
  40d4e1:	push   ecx
  40d4e2:	ret    0x6fa8
  40d4e5:	xor    dl,BYTE PTR [esi]
  40d4e7:	std    
  40d4e8:	imul   esi,eax,0x5f5b2fd6
  40d4ee:	or     BYTE PTR [edi+0x61fbf0da],dh
  40d4f4:	fbstp  TBYTE PTR [edx]
  40d4f6:	daa    
  40d4f7:	dec    eax
  40d4f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4f9:	loop   0x40d4fb
  40d4fb:	aam    0x59
  40d4fd:	mov    esp,0x60b48dab
  40d502:	adc    al,0xd9
  40d504:	ja     0x40d526
  40d506:	sti    
  40d507:	pop    ss
  40d508:	jmp    DWORD PTR [edx-0x39af8b64]
  40d50e:	push   ebx
  40d50f:	int    0x3b
  40d511:	cld    
  40d512:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d513:	add    ch,al
  40d515:	mov    cl,BYTE PTR [ebp+ecx*1+0xd]
  40d519:	add    dh,BYTE PTR [ebp-0xbc96d97]
  40d51f:	pusha  
  40d520:	(bad)  
  40d521:	in     al,0xa6
  40d523:	aad    0xd0
  40d525:	dec    esi
  40d526:	fcomp  DWORD PTR [ebx]
  40d528:	aaa    
  40d529:	pop    edi
  40d52a:	mov    ds:0x26d467ed,eax
  40d52f:	jnp    0x40d4cd
  40d531:	xor    DWORD PTR [ebp+eax*1-0x7e6f2571],ecx
  40d538:	push   ss
  40d539:	inc    ecx
  40d53a:	jl     0x40d567
  40d53c:	in     eax,dx
  40d53d:	add    DWORD PTR [edi-0x7bd40152],esp
  40d543:	xchg   edx,eax
  40d544:	jnp    0x40d4de
  40d546:	jmp    0x40d51d
  40d548:	jg     0x40d4fa
  40d54a:	add    eax,0xc3f1aaf6
  40d54f:	dec    ecx
  40d550:	in     eax,dx
  40d551:	or     ah,bh
  40d553:	mov    dl,0xc6
  40d555:	jle    0x40d50e
  40d557:	hlt    
  40d558:	pop    edx
  40d559:	adc    al,BYTE PTR [edi+0x6ef10740]
  40d55f:	mov    edi,0xa767b6b2
  40d564:	cdq    
  40d565:	dec    ebx
  40d566:	repnz out 0x3b,al
  40d569:	pusha  
  40d56a:	icebp  
  40d56b:	xchg   edx,eax
  40d56c:	pop    ebp
  40d56d:	mov    ds:0xbd18a499,al
  40d572:	xchg   BYTE PTR [eax+0x33632224],ch
  40d578:	sub    al,0x7f
  40d57a:	ja     0x40d5a9
  40d57c:	rcr    DWORD PTR [ebx+0x6e],1
  40d57f:	shl    DWORD PTR [eax],0x79
  40d582:	outs   dx,BYTE PTR ds:[esi]
  40d583:	aaa    
  40d584:	push   ss
  40d585:	imul   DWORD PTR ds:0x21961f70
  40d58b:	cli    
  40d58c:	lahf   
  40d58d:	cmp    BYTE PTR [ebx+0x6f42bd91],cl
  40d593:	inc    eax
  40d594:	jg     0x40d540
  40d596:	and    al,0xb
  40d598:	sbb    ebp,ebp
  40d59a:	inc    edi
  40d59b:	mov    edi,0x353686fb
  40d5a0:	inc    esi
  40d5a1:	jmp    0xd7c2d03
  40d5a6:	cmp    edx,eax
  40d5a8:	push   ds
  40d5a9:	push   0x3a
  40d5ab:	sbb    edx,DWORD PTR [ecx]
  40d5ad:	push   es
  40d5ae:	jle    0x40d5c2
  40d5b0:	push   edx
  40d5b1:	cs sbb al,0xc7
  40d5b4:	iret   
  40d5b5:	adc    BYTE PTR [edi],bl
  40d5b7:	sbb    cl,ah
  40d5b9:	mov    bl,0xe2
  40d5bb:	ins    BYTE PTR es:[edi],dx
  40d5bc:	xor    al,0x5a
  40d5be:	jle    0x40d5f4
  40d5c0:	imul   BYTE PTR [ebx-0x12]
  40d5c3:	in     al,dx
  40d5c4:	nop
  40d5c5:	and    eax,esp
  40d5c7:	and    ecx,esi
  40d5c9:	rcr    edi,cl
  40d5cb:	aas    
  40d5cc:	(bad)  
  40d5ce:	and    eax,ebx
  40d5d0:	adc    dh,BYTE PTR [ecx]
  40d5d2:	pop    eax
  40d5d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5d4:	inc    edi
  40d5d5:	jg     0x40d64e
  40d5d7:	ret    
  40d5d8:	scas   al,BYTE PTR es:[edi]
  40d5d9:	pusha  
  40d5da:	and    BYTE PTR [ebp+0x42],bh
  40d5dd:	adc    eax,0xd51663e3
  40d5e2:	clc    
  40d5e3:	cmp    DWORD PTR [ecx],esi
  40d5e5:	leave  
  40d5e6:	and    eax,0x35b2b63a
  40d5eb:	dec    esp
  40d5ec:	jns    0x40d628
  40d5ee:	adc    edx,DWORD PTR [ebx]
  40d5f0:	mov    eax,ds:0xd31234a7
  40d5f5:	pop    ebp
  40d5f6:	add    ch,BYTE PTR [ecx-0x60]
  40d5f9:	pop    ds
  40d5fa:	out    dx,eax
  40d5fb:	out    dx,eax
  40d5fc:	hlt    
  40d5fd:	inc    ecx
  40d5fe:	dec    DWORD PTR [esi-0x66b511ab]
  40d604:	sub    DWORD PTR [esi-0x2a4f6d0a],eax
  40d60a:	sbb    edx,esp
  40d60c:	xor    DWORD PTR [ebx-0x625990ba],ebp
  40d612:	in     al,dx
  40d613:	call   0x2011dbb4
  40d618:	inc    ebx
  40d619:	in     eax,0xb4
  40d61b:	repnz fdivr QWORD PTR [esi+0x40b866c3]
  40d622:	adc    dh,bl
  40d624:	scas   al,BYTE PTR es:[edi]
  40d625:	cmp    eax,0x4cbe5f68
  40d62a:	inc    eax
  40d62b:	mov    edi,0x881c1d6a
  40d630:	(bad)  
  40d631:	mov    al,ds:0x945985b5
  40d636:	bound  edi,QWORD PTR [eax]
  40d638:	dec    edi
  40d639:	sub    eax,0x9c64c367
  40d63e:	inc    ecx
  40d63f:	xchg   ebp,eax
  40d640:	pushf  
  40d641:	ret    0xf6b8
  40d644:	mov    DWORD PTR [eax-0x20],edi
  40d647:	in     eax,dx
  40d648:	pop    ecx
  40d649:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d64a:	inc    esp
  40d64b:	sbb    DWORD PTR [esi+eax*4],ebp
  40d64e:	(bad)  
  40d64f:	cmp    al,0x79
  40d651:	add    al,0x69
  40d653:	in     eax,0xd3
  40d655:	test   bl,ah
  40d657:	push   0xde7a70a0
  40d65c:	jae    0x40d5f0
  40d65e:	mov    ecx,DWORD PTR [edx+edi*4]
  40d661:	stc    
  40d662:	daa    
  40d663:	xchg   esp,eax
  40d664:	xchg   edx,eax
  40d665:	scas   eax,DWORD PTR es:[edi]
  40d666:	rol    WORD PTR [ebp+0x453e4f8c],cl
  40d66d:	ror    DWORD PTR [ebp+0x71f5fa52],0xf4
  40d674:	add    al,0xa1
  40d676:	fstp   TBYTE PTR [eax+edx*4]
  40d679:	ds cmp al,0xe2
  40d67c:	cwde   
  40d67d:	mov    ebp,0xb90e2810
  40d682:	jne    0x40d608
  40d684:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d685:	(bad)  
  40d686:	dec    ebx
  40d687:	mov    al,ds:0x14283d05
  40d68c:	in     eax,0x87
  40d68e:	jnp    0x40d70b
  40d690:	fwait
  40d691:	into   
  40d692:	inc    esi
  40d693:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d694:	sub    esi,DWORD PTR [eax+ecx*1-0x5c4992eb]
  40d69b:	push   ss
  40d69c:	mov    ds:0x6d91bd03,al
  40d6a1:	stc    
  40d6a2:	inc    ebp
  40d6a3:	arpl   WORD PTR [edi+0x7e],dx
  40d6a6:	ins    BYTE PTR es:[edi],dx
  40d6a7:	mov    ch,0x43
  40d6a9:	and    BYTE PTR [edx+0x4c],ch
  40d6ac:	xor    bl,BYTE PTR [edi+0x31]
  40d6af:	imul   ebx,DWORD PTR ds:0x919cc900,0x8fb2f3c9
  40d6b9:	cwde   
  40d6ba:	mov    esi,0x2fa8c95e
  40d6bf:	pop    edx
  40d6c0:	mov    BYTE PTR [esi-0x6c85226],ah
  40d6c6:	mov    ah,0x9
  40d6c8:	fisttp QWORD PTR [esi-0x11d0b90b]
  40d6ce:	mov    BYTE PTR [ecx+0x60],ah
  40d6d1:	clc    
  40d6d2:	sub    ah,BYTE PTR [edi-0x5d4edac4]
  40d6d8:	loope  0x40d756
  40d6da:	(bad)  
  40d6db:	or     eax,0x21ac2db1
  40d6e0:	adc    dh,ah
  40d6e2:	cs jb  0x40d6fc
  40d6e5:	hlt    
  40d6e6:	jne    0x40d696
  40d6e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6e9:	lock aas 
  40d6eb:	mov    esi,0xc1818be7
  40d6f0:	retf   0xe4f0
  40d6f3:	xor    DWORD PTR [esi+0x51],ebp
  40d6f6:	fucomip st,st(4)
  40d6f8:	outs   dx,DWORD PTR ds:[esi]
  40d6f9:	dec    ecx
  40d6fa:	stc    
  40d6fb:	ins    BYTE PTR es:[edi],dx
  40d6fc:	mov    eax,0xf4682ea8
  40d701:	or     BYTE PTR [ebx-0x4c],al
  40d704:	mov    ebp,0x2e981024
  40d709:	(bad)  
  40d70b:	dec    ebx
  40d70c:	and    bl,BYTE PTR [edi-0x64b4a82b]
  40d712:	push   esi
  40d713:	inc    DWORD PTR [ebp-0x1c1522ce]
  40d719:	sbb    DWORD PTR [eax],0x213b003e
  40d71f:	imul   eax,DWORD PTR [eax-0x15],0xffffff94
  40d723:	xchg   ebx,eax
  40d724:	mov    al,ds:0xd063f101
  40d729:	push   esi
  40d72a:	dec    esi
  40d72b:	mov    esp,0xc13214f1
  40d730:	push   ebx
  40d731:	out    0x49,eax
  40d733:	mov    cl,0x77
  40d735:	push   0xa6dad405
  40d73a:	push   esi
  40d73b:	fwait
  40d73c:	push   eax
  40d73d:	inc    esi
  40d73e:	mov    dl,0x75
  40d740:	xchg   edi,eax
  40d741:	ds aam 0x3a
  40d744:	int3   
  40d745:	dec    ecx
  40d746:	test   BYTE PTR [edx-0x4],dl
  40d749:	lods   al,BYTE PTR ds:[esi]
  40d74a:	cli    
  40d74b:	aaa    
  40d74c:	int    0xc0
  40d74e:	mov    cl,0xb8
  40d750:	lods   al,BYTE PTR ds:[esi]
  40d751:	mov    edx,0x401331c6
  40d756:	or     BYTE PTR [esp+ebx*1],al
  40d759:	jns    0x40d70e
  40d75b:	mov    BYTE PTR [ebp-0x28],cl
  40d75e:	mov    eax,ds:0x56b9a2f7
  40d763:	fidiv  WORD PTR [eax-0x48]
  40d766:	retf   
  40d767:	fwait
  40d768:	(bad)  
  40d769:	mov    ecx,DWORD PTR [ecx-0x58]
  40d76c:	icebp  
  40d76d:	das    
  40d76e:	lods   eax,DWORD PTR ds:[esi]
  40d76f:	xchg   edi,ecx
  40d771:	inc    ebx
  40d772:	cmp    eax,0x195e1a4
  40d777:	add    esi,DWORD PTR [eax+0x605bfd35]
  40d77d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d77e:	mov    ecx,0x1778047c
  40d783:	dec    ebp
  40d784:	dec    ecx
  40d785:	(bad)  [eax]
  40d787:	loopne 0x40d772
  40d789:	cli    
  40d78a:	mov    WORD PTR [edx],gs
  40d78c:	gs repnz cdq 
  40d78f:	cli    
  40d790:	sahf   
  40d791:	sbb    esp,DWORD PTR [edx+0x608a952b]
  40d797:	lods   eax,DWORD PTR ds:[esi]
  40d798:	adc    cl,BYTE PTR [eax-0x7ee75305]
  40d79e:	sbb    ebp,esp
  40d7a0:	call   0x2e66fdc7
  40d7a5:	push   0xfffffff7
  40d7a7:	jp     0x40d7b1
  40d7a9:	ret    0xa8c5
  40d7ac:	add    DWORD PTR [ecx],ecx
  40d7ae:	xor    BYTE PTR [ecx-0xd],0x9b
  40d7b2:	xor    eax,0x7ac98e69
  40d7b7:	sbb    al,0x3a
  40d7b9:	sub    al,ah
  40d7bb:	repnz add BYTE PTR [eax-0x3e5ed7ea],al
  40d7c2:	adc    BYTE PTR [ebx],bl
  40d7c4:	sbb    eax,0x43633170
  40d7c9:	cmp    WORD PTR [ebp-0x6a924696],ax
  40d7d0:	shl    DWORD PTR [esi],cl
  40d7d2:	jno    0x40d7ae
  40d7d4:	add    ah,BYTE PTR [edx]
  40d7d6:	stos   BYTE PTR es:[edi],al
  40d7d7:	jmp    0xab87:0xcbdaeefa
  40d7de:	adc    eax,DWORD PTR [esp+ebx*4+0x72]
  40d7e2:	sub    BYTE PTR [esi+0x50],cl
  40d7e5:	das    
  40d7e6:	ret    0xdf3e
  40d7e9:	imul   eax,DWORD PTR [ecx],0xc13de279
  40d7ef:	dec    ebp
  40d7f0:	sbb    dl,cl
  40d7f2:	ret    0x257e
  40d7f5:	fs paddusb mm4,mm2
  40d7f9:	inc    edi
  40d7fa:	inc    eax
  40d7fb:	mov    ds:0xca3d388d,al
  40d800:	stos   DWORD PTR es:[edi],eax
  40d801:	inc    edx
  40d802:	outs   dx,BYTE PTR ds:[esi]
  40d803:	cdq    
  40d804:	addr16 shr esp,0x2f
  40d808:	fisttp WORD PTR [edi-0x26]
  40d80b:	add    BYTE PTR [edi],dh
  40d80d:	lock mov bl,bl
  40d810:	adc    eax,0xab4aa6bf
  40d815:	inc    eax
  40d816:	cmc    
  40d817:	push   0xa77d52a8
  40d81c:	arpl   di,cx
  40d81e:	retf   
  40d81f:	xlat   BYTE PTR ds:[ebx]
  40d820:	aam    0xec
  40d822:	mul    BYTE PTR [ecx-0x5dec22c2]
  40d828:	mov    edx,ecx
  40d82a:	lea    eax,[edx-0x7d]
  40d82d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d82e:	outs   dx,BYTE PTR ds:[esi]
  40d82f:	sub    BYTE PTR [esi+ebx*2],cl
  40d832:	cmp    al,0xf2
  40d834:	jo     0x40d7dc
  40d836:	jns    0x40d87d
  40d838:	or     eax,0x54321dc5
  40d83d:	xor    BYTE PTR [esi],bl
  40d83f:	cwde   
  40d840:	repnz xchg esp,eax
  40d842:	sbb    edi,ebx
  40d844:	cld    
  40d845:	pop    edx
  40d846:	jb     0x40d89a
  40d848:	push   esi
  40d849:	div    DWORD PTR [ecx+edx*8+0x3131e8ae]
  40d850:	inc    ebp
  40d851:	jmp    0xec70:0xc887b9d9
  40d858:	pop    esp
  40d859:	pop    edi
  40d85a:	pusha  
  40d85b:	sub    cl,BYTE PTR [eax-0x65]
  40d85e:	int3   
  40d85f:	adc    DWORD PTR [edx],eax
  40d861:	dec    eax
  40d862:	add    ebx,DWORD PTR [ebx-0x2d]
  40d865:	stc    
  40d866:	pop    esp
  40d867:	xchg   ebp,eax
  40d868:	mov    DWORD PTR [edi-0x43],eax
  40d86b:	dec    edi
  40d86c:	push   edi
  40d86d:	mov    eax,ds:0x157c12a5
  40d872:	cmp    BYTE PTR [ebx],cl
  40d874:	mov    esi,0xfbb38041
  40d879:	lahf   
  40d87a:	lods   al,BYTE PTR ds:[esi]
  40d87b:	enter  0x2a10,0xdd
  40d87f:	es hlt 
  40d881:	jno    0x40d8ac
  40d883:	xchg   esi,eax
  40d884:	arpl   WORD PTR [ecx],ax
  40d886:	jbe    0x40d8a4
  40d888:	retf   0x423d
  40d88b:	sbb    cl,bl
  40d88d:	add    edi,ecx
  40d88f:	push   0xffffffae
  40d891:	sbb    BYTE PTR [ebx+0x4a359143],dl
  40d897:	push   ebp
  40d898:	in     al,0xf0
  40d89a:	mov    dl,0x53
  40d89c:	mov    edi,0xe77ef492
  40d8a1:	dec    ecx
  40d8a2:	cld    
  40d8a3:	lahf   
  40d8a4:	arpl   WORD PTR [ecx],bx
  40d8a6:	jmp    0x40d850
  40d8a8:	mov    eax,0x44ba133d
  40d8ad:	(bad)  
  40d8ae:	dec    esi
  40d8af:	sbb    DWORD PTR [esi-0x7d],ecx
  40d8b2:	sub    al,0x17
  40d8b4:	ss aad 0x99
  40d8b7:	rcr    bh,cl
  40d8b9:	pop    eax
  40d8ba:	fldenv [edi+0x4b43a2c6]
  40d8c0:	pop    edx
  40d8c1:	ds jg  0x40d878
  40d8c4:	jno    0x40d8c7
  40d8c6:	scas   al,BYTE PTR es:[edi]
  40d8c7:	add    BYTE PTR ds:[ecx-0x6fd5d06e],0xaf
  40d8cf:	sti    
  40d8d0:	not    edi
  40d8d2:	jle    0x40d8f8
  40d8d4:	pop    ss
  40d8d5:	sub    ch,BYTE PTR [eax+0x225b537]
  40d8db:	inc    eax
  40d8dc:	mov    ?,WORD PTR [ebx-0x47]
  40d8df:	aam    0x4a
  40d8e1:	or     DWORD PTR [ecx-0x5ee124b4],0x8721477
  40d8eb:	ret    
  40d8ec:	data16 mov BYTE PTR [ebx+0x3d6e8004],bh
  40d8f3:	cmp    dl,0x15
  40d8f6:	pop    ecx
  40d8f7:	jecxz  0x40d8a0
  40d8f9:	mov    bh,0xec
  40d8fb:	add    DWORD PTR [edi],ebx
  40d8fd:	retf   0x2362
  40d900:	and    eax,0x4ce1276a
  40d905:	xor    al,0x47
  40d907:	adc    DWORD PTR [ebx-0x6e],edx
  40d90a:	aas    
  40d90b:	loop   0x40d96d
  40d90d:	out    0x10,al
  40d90f:	adc    ch,BYTE PTR [eax]
  40d911:	add    DWORD PTR [esi+0x3d196257],edx
  40d917:	(bad)  
  40d918:	rep lods al,BYTE PTR ds:[esi]
  40d91a:	mov    esp,0xe2f27160
  40d91f:	dec    ebp
  40d920:	dec    esp
  40d921:	outs   dx,DWORD PTR ds:[esi]
  40d922:	jecxz  0x40d916
  40d924:	and    BYTE PTR [eax+0x6d],ah
  40d927:	in     al,dx
  40d928:	ret    0x4b56
  40d92b:	mov    bl,0xce
  40d92d:	jbe    0x40d924
  40d92f:	jne    0x40d8b7
  40d931:	jbe    0x40d94a
  40d933:	adc    al,0xc5
  40d935:	xor    BYTE PTR [ebp+0x31],al
  40d938:	int    0xa3
  40d93a:	xchg   ebp,eax
  40d93b:	ret    
  40d93c:	out    0x5f,al
  40d93e:	out    0x61,eax
  40d940:	or     BYTE PTR [ecx+0x6a],dl
  40d943:	dec    DWORD PTR [edx+0x2f7d0633]
  40d949:	xchg   ebx,eax
  40d94a:	stc    
  40d94b:	xchg   edi,ebp
  40d94d:	push   edi
  40d94e:	and    DWORD PTR [edi],eax
  40d950:	outs   dx,BYTE PTR ds:[esi]
  40d951:	dec    si
  40d953:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d954:	mov    eax,DWORD PTR [edi]
  40d956:	sbb    eax,0x7d660afb
  40d95b:	pop    ss
  40d95c:	cwde   
  40d95d:	stos   BYTE PTR es:[edi],al
  40d95e:	and    cl,BYTE PTR [ecx]
  40d960:	inc    esp
  40d961:	xor    DWORD PTR [ebx-0x5a],0xe5676111
  40d968:	int    0x2d
  40d96a:	sar    BYTE PTR [edi-0x54],1
  40d96d:	cmp    esi,ecx
  40d96f:	add    al,0x67
  40d971:	inc    esi
  40d972:	mov    cl,0xcd
  40d974:	sub    eax,0x35ace921
  40d979:	push   cs
  40d97a:	sub    DWORD PTR [edx+edx*1-0x156e83ed],ebx
  40d981:	div    al
  40d983:	pop    es
  40d984:	pop    ebx
  40d985:	mov    bh,0xf5
  40d987:	scas   eax,DWORD PTR es:[edi]
  40d988:	shr    DWORD PTR [edi],0xc2
  40d98b:	out    0x67,eax
  40d98d:	bound  ebp,QWORD PTR [eax+0x35455dc]
  40d993:	add    eax,0xab32ee2f
  40d998:	popf   
  40d999:	imul   edx,DWORD PTR [ebx+0x31],0xffffffdd
  40d99d:	mov    ch,BYTE PTR [edx]
  40d99f:	mov    ch,BYTE PTR [eax+0x40]
  40d9a2:	fsub   st(5),st
  40d9a4:	dec    eax
  40d9a5:	pop    ebx
  40d9a6:	inc    eax
  40d9a7:	mov    DWORD PTR [ebx],esp
  40d9a9:	imul   ebp,DWORD PTR [ebx],0x67
  40d9ac:	cmp    esi,edi
  40d9ae:	push   esi
  40d9af:	push   ebx
  40d9b0:	std    
  40d9b1:	jl     0x40d9ca
  40d9b3:	cmp    ebp,DWORD PTR [edx-0xcec3a28]
  40d9b9:	inc    ebp
  40d9ba:	cmp    BYTE PTR [ebx-0x2e],dh
  40d9bd:	push   esi
  40d9be:	in     eax,dx
  40d9bf:	xchg   ebp,eax
  40d9c0:	dec    ebx
  40d9c1:	call   0x4f5:0x56e110a3
  40d9c8:	ja     0x40da27
  40d9ca:	sbb    DWORD PTR [ecx-0x5c],eax
  40d9cd:	cli    
  40d9ce:	bswap  ebp
  40d9d0:	mov    ch,bh
  40d9d2:	push   ecx
  40d9d3:	ds jmp 0x40d966
  40d9d6:	sbb    ch,al
  40d9d8:	sub    eax,0xcb078cf2
  40d9dd:	rol    BYTE PTR [edi+0x2e0931f9],1
  40d9e3:	mov    ds:0xf3c9cd9,al
  40d9e8:	cmp    bh,cl
  40d9ea:	pop    edx
  40d9eb:	mov    al,ds:0x8867288f
  40d9f0:	and    bh,BYTE PTR [edx-0x78b6cd78]
  40d9f6:	mov    dh,0xa2
  40d9f8:	mov    edx,0x478253e0
  40d9fd:	and    edx,DWORD PTR [ebp+0x5406712b]
  40da03:	into   
  40da04:	xor    ecx,DWORD PTR [eax+0x21]
  40da07:	lods   al,BYTE PTR ds:[esi]
  40da08:	or     BYTE PTR [esi+0x74],0x2
  40da0c:	mov    al,0x71
  40da0e:	pop    eax
  40da0f:	pop    ss
  40da10:	pop    eax
  40da11:	jmp    0x40da50
  40da13:	out    0x8c,eax
  40da15:	mov    bh,0x67
  40da17:	pop    ds
  40da18:	cli    
  40da19:	outs   dx,DWORD PTR ds:[esi]
  40da1a:	in     eax,dx
  40da1b:	inc    eax
  40da1c:	jmp    0xa2b2:0x90a88156
  40da23:	and    ecx,esi
  40da25:	test   BYTE PTR [eax],bh
  40da27:	mov    dl,0x33
  40da29:	jne    0x40d9e1
  40da2b:	add    eax,esi
  40da2d:	pop    ss
  40da2e:	pop    ecx
  40da2f:	retf   
  40da30:	push   ebx
  40da31:	div    ebx
  40da33:	(bad)  
  40da34:	imul   edi,DWORD PTR [esi+0x67],0xf1e7bb1c
  40da3b:	retf   
  40da3c:	arpl   WORD PTR [ebp+0x894fd14],bx
  40da42:	pop    ebp
  40da43:	xchg   edx,eax
  40da44:	scas   eax,DWORD PTR es:[edi]
  40da45:	aad    0x4e
  40da47:	pop    edi
  40da48:	les    ecx,FWORD PTR [edx]
  40da4a:	adc    DWORD PTR [ecx],esi
  40da4c:	sbb    al,0x99
  40da4e:	repnz inc ecx
  40da50:	inc    ebp
  40da51:	or     ecx,DWORD PTR [eax]
  40da53:	stc    
  40da54:	inc    edi
  40da55:	sar    DWORD PTR [edi],1
  40da57:	push   ss
  40da58:	mov    ecx,0x84ba1b7f
  40da5d:	loop   0x40dad3
  40da5f:	(bad)  
  40da60:	dec    edi
  40da61:	mov    eax,ds:0x86c92db9
  40da66:	imul   esi,DWORD PTR [ebx],0xffae00b3
  40da6c:	out    dx,eax
  40da6d:	inc    esi
  40da6e:	mov    ch,0x45
  40da70:	and    al,0x9
  40da72:	mov    ebx,DWORD PTR [esi+esi*4-0x19]
  40da76:	inc    ecx
  40da77:	test   al,0x9e
  40da79:	loop   0x40da90
  40da7b:	mov    bl,0x93
  40da7d:	push   ebx
  40da7e:	mov    dl,0x2d
  40da80:	jno    0x40dadb
  40da82:	jnp    0x40da48
  40da84:	xor    cl,BYTE PTR [edi+0x2f]
  40da87:	loop   0x40daf6
  40da89:	adc    ch,BYTE PTR [esi+ebx*1-0x77]
  40da8d:	fld    TBYTE PTR [esi+edx*1+0x4c]
  40da91:	push   edi
  40da92:	hlt    
  40da93:	sub    eax,0x4b9a0366
  40da98:	or     ebp,eax
  40da9a:	mov    DWORD PTR [edx-0x38],edx
  40da9d:	test   DWORD PTR [ecx-0x38],esp
  40daa0:	gs int3 
  40daa2:	or     eax,0x14f0474
  40daa7:	fimul  WORD PTR [ebx+ebx*8]
  40daaa:	or     eax,0x5442b4b3
  40daaf:	(bad)  
  40dab0:	push   edi
  40dab1:	push   es
  40dab2:	jmp    0x40db0c
  40dab4:	cs mov edx,ecx
  40dab7:	pop    ecx
  40dab8:	xchg   ebx,eax
  40dab9:	out    dx,eax
  40daba:	mov    ch,0x39
  40dabc:	outs   dx,BYTE PTR ds:[esi]
  40dabd:	add    eax,ebp
  40dabf:	cld    
  40dac0:	stos   BYTE PTR es:[edi],al
  40dac1:	cmp    ah,bh
  40dac3:	in     eax,dx
  40dac4:	sti    
  40dac5:	arpl   WORD PTR [edx+0x3fd123cd],bp
  40dacb:	ror    DWORD PTR [ebx-0x54c5b3c4],cl
  40dad1:	mov    ah,0x90
  40dad3:	js     0x40dad9
  40dad5:	sbb    BYTE PTR [ebx],bh
  40dad7:	or     eax,0xe46f183c
  40dadc:	repnz inc si
  40dadf:	push   ebp
  40dae0:	ds sahf 
  40dae2:	les    eax,FWORD PTR [esi]
  40dae4:	and    BYTE PTR [edi+0x40a6758a],0x1e
  40daeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40daec:	jl     0x40db30
  40daee:	out    0x62,al
  40daf0:	or     eax,0x2bf644cb
  40daf5:	aas    
  40daf6:	scas   eax,DWORD PTR es:[edi]
  40daf7:	jmp    0xd0f5c2d5
  40dafc:	push   cs
  40dafd:	cdq    
  40dafe:	mov    al,ds:0xf8ada215
  40db03:	adc    ebx,ebx
  40db05:	adc    ecx,DWORD PTR [edx-0xb]
  40db08:	cmp    BYTE PTR [edi],ah
  40db0a:	imul   edx,DWORD PTR [ebp-0xb],0x35bf42f4
  40db11:	mov    bh,0x57
  40db13:	mov    BYTE PTR [edi+0x32],dl
  40db16:	popa   
  40db17:	xor    eax,ebp
  40db19:	stos   BYTE PTR es:[edi],al
  40db1a:	cwde   
  40db1b:	lock mov esp,DWORD PTR [edi+0x281e5a12]
  40db22:	inc    eax
  40db23:	sahf   
  40db24:	(bad)  
  40db25:	hlt    
  40db26:	xor    al,0x2e
  40db28:	repz std 
  40db2a:	ins    BYTE PTR es:[edi],dx
  40db2b:	jnp    0x40db46
  40db2d:	push   0x30
  40db2f:	fnstsw WORD PTR [ecx]
  40db31:	stos   BYTE PTR es:[edi],al
  40db32:	xor    al,BYTE PTR [esi-0x20662d15]
  40db38:	and    ecx,esp
  40db3a:	mov    edi,0x14cf73c1
  40db3f:	outs   dx,BYTE PTR ds:[esi]
  40db40:	adc    dl,BYTE PTR [ebx]
  40db42:	jb     0x40db3a
  40db44:	ja     0x40dba7
  40db46:	sbb    BYTE PTR [esi-0x7d],al
  40db49:	or     eax,0x530575dd
  40db4e:	add    bh,BYTE PTR [esi+eiz*2-0x69]
  40db52:	mov    dl,ah
  40db54:	adc    eax,0xb6e7d92a
  40db59:	lods   al,BYTE PTR ds:[esi]
  40db5a:	pop    es
  40db5b:	(bad)  
  40db5c:	push   esi
  40db5d:	and    dl,BYTE PTR [eax]
  40db5f:	repz inc edx
  40db61:	adc    edx,ecx
  40db63:	sub    eax,edi
  40db65:	daa    
  40db66:	cmp    al,0x9c
  40db68:	fmulp  st(7),st
  40db6a:	push   edi
  40db6b:	add    esi,DWORD PTR [eax+0x76e69e8e]
  40db71:	fs inc esi
  40db73:	int3   
  40db74:	scas   eax,DWORD PTR es:[edi]
  40db75:	mov    edi,0x2edca530
  40db7a:	cli    
  40db7b:	xchg   edx,eax
  40db7c:	xor    ch,dl
  40db7e:	mov    al,0x2d
  40db80:	adc    al,ah
  40db82:	sub    edi,edx
  40db84:	or     esp,DWORD PTR [ecx+0x2c]
  40db87:	cli    
  40db88:	mov    dh,0x47
  40db8a:	out    0xd8,eax
  40db8c:	(bad)  [ebx+ecx*1-0x62fbcaf4]
  40db93:	push   ecx
  40db94:	icebp  
  40db95:	rol    dl,0x47
  40db98:	cmp    ebp,DWORD PTR [eax+esi*1]
  40db9b:	jmp    0xc734:0x763e0337
  40dba2:	xlat   BYTE PTR ds:[ebx]
  40dba3:	xchg   DWORD PTR [esi+0x5e3e1d27],edx
  40dba9:	sbb    BYTE PTR [eax-0x2c0a503d],ah
  40dbaf:	std    
  40dbb0:	cli    
  40dbb1:	das    
  40dbb2:	jge    0x40dc0b
  40dbb4:	fnsave [esi]
  40dbb6:	mov    al,0xc1
  40dbb8:	sbb    eax,0x98736a88
  40dbbd:	call   0xaaa395e8
  40dbc2:	jne    0x40db48
  40dbc4:	adc    al,0xac
  40dbc6:	fisttp DWORD PTR [esi]
  40dbc8:	sbb    DWORD PTR [ecx],0x6b4d23
  40dbce:	(bad)  
  40dbcf:	cli    
  40dbd0:	sub    BYTE PTR [ebx+eiz*4+0x1],cl
  40dbd4:	jae    0x40dbb5
  40dbd6:	call   0xd452:0x914f72d9
  40dbdd:	inc    esi
  40dbde:	jmp    0x40dc2d
  40dbe0:	iret   
  40dbe1:	mov    ah,0xc3
  40dbe3:	pop    edx
  40dbe4:	out    dx,al
  40dbe5:	add    edx,DWORD PTR [edi-0x6c]
  40dbe8:	push   esp
  40dbe9:	cmp    BYTE PTR [edx],bh
  40dbeb:	dec    edx
  40dbec:	push   cs
  40dbed:	xchg   DWORD PTR [eax-0x5bb5f6e7],ecx
  40dbf3:	jbe    0x40dbd2
  40dbf5:	(bad)  
  40dbf6:	test   al,0x90
  40dbf8:	shr    bh,1
  40dbfa:	pop    ds
  40dbfb:	popa   
  40dbfc:	ror    BYTE PTR [esi+edi*8-0x16],cl
  40dc00:	sub    al,0xf3
  40dc02:	fild   QWORD PTR [edx]
  40dc04:	and    DWORD PTR [eax],ecx
  40dc06:	lahf   
  40dc07:	mov    ch,0xc7
  40dc09:	push   esi
  40dc0a:	xchg   edx,eax
  40dc0b:	xor    dl,BYTE PTR [eax+edi*8]
  40dc0e:	(bad)  
  40dc0f:	loop   0x40db99
  40dc11:	test   DWORD PTR [eax+ebx*8-0x48524933],eax
  40dc18:	shl    BYTE PTR [edi+edx*1-0x50],0x7d
  40dc1d:	inc    ecx
  40dc1e:	ins    DWORD PTR es:[edi],dx
  40dc1f:	xor    BYTE PTR [esi+0x348dc6d3],dh
  40dc25:	push   0x16
  40dc27:	mov    DWORD PTR [edi-0x7d],0x70fa2816
  40dc2e:	push   ss
  40dc2f:	daa    
  40dc30:	inc    ecx
  40dc31:	xchg   edi,eax
  40dc32:	inc    ecx
  40dc33:	mov    esp,?
  40dc35:	push   ds
  40dc36:	push   ebx
  40dc37:	addr16 lock popf 
  40dc3a:	mov    al,0x7c
  40dc3c:	sub    esp,edx
  40dc3e:	and    bl,ah
  40dc40:	ret    
  40dc41:	fdiv   DWORD PTR [edi]
  40dc43:	cmp    bh,BYTE PTR [ebx+0x6f]
  40dc46:	enter  0x53a3,0xd
  40dc4a:	call   0x4127b35
  40dc4f:	or     DWORD PTR [ecx+0x38503b84],esi
  40dc55:	iret   
  40dc56:	jb     0x40dc21
  40dc58:	sub    eax,0x29c21f4b
  40dc5d:	pop    ss
  40dc5e:	aad    0xb6
  40dc60:	mov    esp,0x1dddfd43
  40dc65:	fild   QWORD PTR ds:0xee07c56e
  40dc6b:	imul   al
  40dc6d:	xlat   BYTE PTR fs:[ebx]
  40dc6f:	jle    0x40dc98
  40dc71:	sub    al,0x6b
  40dc73:	imul   eax,DWORD PTR [ebp+0x79],0xffffff96
  40dc77:	xor    bl,BYTE PTR [edx-0x14]
  40dc7a:	adc    ch,ah
  40dc7c:	xchg   edi,eax
  40dc7d:	sub    dl,BYTE PTR [edi]
  40dc7f:	das    
  40dc80:	pop    esp
  40dc81:	test   DWORD PTR [ecx],esp
  40dc83:	pop    es
  40dc84:	loopne 0x40dc55
  40dc86:	cmp    BYTE PTR [ebx-0x55cc4096],bl
  40dc8c:	outs   dx,BYTE PTR ds:[esi]
  40dc8d:	or     al,0x60
  40dc8f:	inc    edi
  40dc90:	add    eax,0x2516cec4
  40dc95:	scas   al,BYTE PTR es:[edi]
  40dc96:	mov    dl,0x25
  40dc98:	mov    WORD PTR [esp+ebx*4-0x16],ds
  40dc9c:	push   ss
  40dc9d:	mov    eax,ds:0x42757bfc
  40dca2:	and    BYTE PTR [esi],ah
  40dca4:	fisubr WORD PTR [esi+0x60b3c19d]
  40dcaa:	push   eax
  40dcab:	fadd   DWORD PTR [ebx+0x11]
  40dcae:	sbb    esi,DWORD PTR [esp+ecx*2]
  40dcb1:	inc    ecx
  40dcb2:	das    
  40dcb3:	shl    DWORD PTR [ebp+ecx*2+0x49],0x2d
  40dcb8:	call   esi
  40dcba:	icebp  
  40dcbb:	scas   eax,DWORD PTR es:[edi]
  40dcbc:	lds    esp,FWORD PTR [edi+esi*4]
  40dcbf:	aas    
  40dcc0:	push   esi
  40dcc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcc2:	xchg   ecx,eax
  40dcc3:	pushw  cs
  40dcc5:	mov    BYTE PTR [ebx+0x303ae95b],cl
  40dccb:	test   bh,ch
  40dccd:	(bad)  
  40dcce:	xor    eax,0xe17a619a
  40dcd3:	dec    edi
  40dcd4:	test   BYTE PTR [ebp+0x6e],ah
  40dcd7:	jmp    0x40dcc5
  40dcd9:	retf   0x6105
  40dcdc:	outs   dx,DWORD PTR ds:[esi]
  40dcdd:	sbb    BYTE PTR [eax],dl
  40dcdf:	imul   ebp,DWORD PTR [edi-0x43],0x35
  40dce3:	xor    eax,DWORD PTR [edx-0x3233101f]
  40dce9:	xor    al,0x52
  40dceb:	arpl   WORD PTR [eax+0x3e],dx
  40dcee:	outs   dx,BYTE PTR ds:[esi]
  40dcef:	push   es
  40dcf0:	add    al,0x35
  40dcf2:	pop    eax
  40dcf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcf4:	add    al,0xc0
  40dcf6:	in     eax,0xf9
  40dcf8:	xchg   BYTE PTR [ecx+0x0],al
  40dcfb:	adc    ch,BYTE PTR [ebx]
  40dcfd:	jb     0x40dd4f
  40dcff:	stc    
  40dd00:	add    edx,esp
  40dd02:	test   al,0x23
  40dd04:	sbb    eax,0x57166a56
  40dd09:	popa   
  40dd0a:	sbb    edx,DWORD PTR [edi-0x6dfda692]
  40dd10:	jns    0x40dd8d
  40dd12:	cmp    ch,BYTE PTR [edi+0x1077dd17]
  40dd18:	add    eax,esp
  40dd1a:	cld    
  40dd1b:	mov    ebp,0xe99507cf
  40dd20:	and    edi,ebx
  40dd22:	add    eax,0xecc639b8
  40dd27:	or     DWORD PTR [eax+0x7],ebp
  40dd2a:	shl    DWORD PTR [eax+0x45],cl
  40dd2d:	std    
  40dd2e:	mov    edx,0x3353f95d
  40dd33:	jno    0x40dd24
  40dd35:	jp     0x40ddad
  40dd37:	dec    edx
  40dd38:	loope  0x40dd75
  40dd3a:	mov    ecx,edi
  40dd3c:	fsqrt  
  40dd3e:	int    0x81
  40dd40:	push   edi
  40dd41:	jg     0x40dd5f
  40dd43:	out    dx,al
  40dd44:	push   ss
  40dd45:	sbb    BYTE PTR [eax],bh
  40dd47:	adc    cl,BYTE PTR [ebx-0x3]
  40dd4a:	mov    bl,al
  40dd4c:	ss push esi
  40dd4e:	jge    0x40dcfd
  40dd50:	retf   0xe8d8
  40dd53:	pop    eax
  40dd54:	mov    DWORD PTR [eax+0x55e49798],ebp
  40dd5a:	addr16 jg 0x40dd41
  40dd5d:	dec    ebx
  40dd5f:	std    
  40dd60:	mov    DWORD PTR [eax+ecx*8],edx
  40dd63:	sbb    eax,0xe05b4a22
  40dd68:	iret   
  40dd69:	scas   eax,DWORD PTR es:[edi]
  40dd6a:	push   cs
  40dd6b:	xor    DWORD PTR [edi-0x1a699673],edx
  40dd71:	cmp    eax,0xbd615d11
  40dd76:	mov    BYTE PTR [eax+ecx*1-0x3e],ah
  40dd7a:	mov    esi,0x8ace94cd
  40dd7f:	test   eax,0xe3f61c55
  40dd84:	sahf   
  40dd85:	stos   BYTE PTR es:[edi],al
  40dd86:	test   DWORD PTR [edx-0x1e77a8a6],ebx
  40dd8c:	inc    ecx
  40dd8d:	pop    esi
  40dd8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd90:	or     al,0xa3
  40dd92:	xchg   ebx,eax
  40dd93:	pop    ecx
  40dd94:	xchg   esi,edx
  40dd96:	mov    bh,0xff
  40dd98:	push   0xf0a1fbb
  40dd9d:	push   edi
  40dd9e:	lods   al,BYTE PTR ds:[esi]
  40dd9f:	fidivr DWORD PTR [ebp+ecx*1-0x20]
  40dda3:	cmp    BYTE PTR [edi+0x5d],0xdc
  40dda7:	jbe    0x40dd29
  40dda9:	xor    edi,DWORD PTR [ebx+0x1b3e48a5]
  40ddaf:	inc    edi
  40ddb0:	adc    bl,BYTE PTR [edi+0x358beba8]
  40ddb6:	bound  ebp,QWORD PTR [eax]
  40ddb8:	repz or eax,0xedeeb924
  40ddbe:	lods   eax,DWORD PTR ds:[esi]
  40ddbf:	idiv   bh
  40ddc1:	pop    ecx
  40ddc2:	lahf   
  40ddc3:	mov    ebp,0x1ca1fa3b
  40ddc8:	mov    DWORD PTR [ecx-0x101d51ac],eax
  40ddce:	pusha  
  40ddcf:	jne    0x40ddcf
  40ddd1:	(bad)  
  40ddd2:	dec    eax
  40ddd3:	imul   edi,DWORD PTR [eax+eax*8],0xffffffe9
  40ddd7:	adc    edi,esi
  40ddd9:	adc    ecx,DWORD PTR [ebp-0x149ceebb]
  40dddf:	je     0x40dda2
  40dde1:	ret    
  40dde2:	mov    dh,0xc6
  40dde4:	and    BYTE PTR [eax-0x55],0x3c
  40dde8:	mov    bh,0xa1
  40ddea:	std    
  40ddeb:	cld    
  40ddec:	sbb    DWORD PTR [ebx-0x41],ebp
  40ddef:	jbe    0x40ddcd
  40ddf1:	jae    0x40de61
  40ddf3:	pop    esi
  40ddf4:	xchg   eax,ecx
  40ddf6:	(bad)  
  40ddf7:	jge    0x40ddad
  40ddf9:	ret    0x1970
  40ddfc:	xchg   edx,eax
  40ddfd:	cmp    dl,BYTE PTR [edi+0x62]
  40de00:	or     eax,0x6eb9c4db
  40de05:	sbb    BYTE PTR [esi-0x71],bl
  40de08:	test   BYTE PTR [edi],dl
  40de0a:	jmp    0x151569f8
  40de0f:	dec    ebx
  40de10:	or     dh,0x8b
  40de13:	scas   al,BYTE PTR es:[edi]
  40de14:	sbb    cl,bl
  40de16:	and    al,0xd0
  40de18:	xor    eax,0xfc385585
  40de1d:	mov    al,0xe6
  40de1f:	fbstp  TBYTE PTR [ebp-0x46]
  40de22:	cmp    eax,0x4c
  40de25:	stos   DWORD PTR es:[edi],eax
  40de26:	mov    cl,BYTE PTR [eax-0x6ffcddd7]
  40de2c:	xor    ebx,esi
  40de2e:	adc    bh,ch
  40de30:	ins    BYTE PTR es:[edi],dx
  40de31:	jle    0x40de08
  40de33:	mov    eax,0xe26f7805
  40de38:	inc    esi
  40de39:	mov    ah,0xd
  40de3b:	stos   BYTE PTR es:[edi],al
  40de3c:	sub    BYTE PTR [eax],dh
  40de3e:	xor    eax,DWORD PTR [ecx]
  40de40:	sti    
  40de41:	and    eax,0x3c2a268d
  40de46:	mov    esp,0x3c221cf8
  40de4b:	lods   al,BYTE PTR ds:[esi]
  40de4c:	mov    bh,0x9b
  40de4e:	(bad)  
  40de4f:	dec    ecx
  40de50:	mov    bh,0x9
  40de52:	jbe    0x40de64
  40de54:	push   esi
  40de56:	(bad)  
  40de59:	push   esi
  40de5a:	sub    bl,BYTE PTR [ebp+0x73a95de2]
  40de60:	cwde   
  40de61:	push   es
  40de62:	ins    BYTE PTR es:[edi],dx
  40de63:	icebp  
  40de64:	add    bh,BYTE PTR [eax-0x137ca472]
  40de6a:	imul   ebp,DWORD PTR [ecx-0x1ff652b2],0x16
  40de71:	into   
  40de72:	xchg   ebp,eax
  40de73:	imul   esi,DWORD PTR [ecx+0x52],0x39
  40de77:	enter  0x5554,0x94
  40de7b:	sti    
  40de7c:	xor    al,0xb4
  40de7e:	int    0x41
  40de80:	pop    ecx
  40de81:	push   eax
  40de82:	push   0xc7c437d6
  40de87:	sub    bl,BYTE PTR [ebp+0x3e]
  40de8a:	retf   0x457c
  40de8d:	push   ebx
  40de8e:	clc    
  40de8f:	or     esi,DWORD PTR ds:[di]
  40de93:	je     0x40de7b
  40de95:	push   edi
  40de96:	pop    ebx
  40de97:	ins    DWORD PTR es:[edi],dx
  40de98:	cdq    
  40de99:	pop    ss
  40de9a:	add    ebp,DWORD PTR [eax]
  40de9c:	popa   
  40de9d:	mov    ebx,0x87ed8a5c
  40dea2:	jg     0x40de59
  40dea4:	cli    
  40dea5:	dec    edx
  40dea6:	cli    
  40dea7:	add    DWORD PTR [ecx-0x39],ebx
  40deaa:	test   DWORD PTR [ebx-0x2c4e60a8],ebp
  40deb0:	les    eax,FWORD PTR [edi+0x6ac3e17f]
  40deb6:	lea    esi,[edi+esi*1-0x41]
  40deba:	mov    ch,0xd
  40debc:	cmp    eax,0x6d25a649
  40dec1:	iret   
  40dec2:	outs   dx,DWORD PTR ds:[esi]
  40dec3:	xchg   DWORD PTR [ebx+0x6900d270],esp
  40dec9:	add    DWORD PTR [ebx+0x36],edx
  40decc:	mov    dh,0x66
  40dece:	sbb    al,0xc9
  40ded0:	inc    ecx
  40ded1:	bound  edx,QWORD PTR [ebx+0x6c]
  40ded4:	dec    eax
  40ded5:	retf   0xc0a7
  40ded8:	pop    edi
  40ded9:	lea    edi,[ebp-0x3b37bbac]
  40dedf:	and    al,0x90
  40dee1:	xchg   edx,eax
  40dee2:	(bad)  
  40dee3:	pop    esp
  40dee4:	icebp  
  40dee5:	test   BYTE PTR [ebx-0x23],cl
  40dee8:	pop    ecx
  40dee9:	and    al,al
  40deeb:	ret    0x8abd
  40deee:	sbb    eax,0x5048579a
  40def3:	mov    eax,DWORD PTR [ebp+0x6d53ca21]
  40def9:	sbb    BYTE PTR ds:0xd14bffaa,bh
  40deff:	je     0x40df7b
  40df01:	and    ah,BYTE PTR [ecx-0x3c]
  40df04:	int3   
  40df05:	xor    dh,0xbe
  40df08:	repz mov bh,0xae
  40df0b:	adc    DWORD PTR [edx+0x77],ecx
  40df0e:	(bad)  
  40df0f:	popf   
  40df10:	add    eax,0x25eacb4a
  40df15:	lods   eax,DWORD PTR ds:[esi]
  40df16:	loop   0x40df21
  40df18:	pop    ds
  40df19:	xor    ch,BYTE PTR [eax+0x3c]
  40df1c:	jle    0x40df79
  40df1e:	xor    DWORD PTR [edi-0x8],ecx
  40df21:	out    0x6a,eax
  40df23:	xor    DWORD PTR [ecx-0x4461c960],0x11
  40df2a:	mov    WORD PTR [ecx+0x1c],es
  40df2d:	and    eax,0xb4a4f0bd
  40df32:	push   es
  40df33:	add    DWORD PTR [ecx-0x59],esp
  40df36:	push   cs
  40df37:	test   DWORD PTR [eax-0x3a],edi
  40df3a:	popa   
  40df3b:	push   esi
  40df3c:	dec    esp
  40df3d:	call   0x7a5aae40
  40df42:	cmp    BYTE PTR [ebx],dl
  40df44:	call   edx
  40df46:	sub    ecx,DWORD PTR [esi-0x69]
  40df49:	jno    0x40df7e
  40df4b:	xor    al,BYTE PTR [ecx-0x2a]
  40df4e:	(bad)  
  40df4f:	aas    
  40df50:	retf   
  40df51:	lds    esi,FWORD PTR [esi]
  40df53:	add    eax,0x7e514b28
  40df58:	imul   ecx,DWORD PTR [eax],0xfd493e9c
  40df5e:	push   cs
  40df5f:	pop    ss
  40df60:	push   cs
  40df61:	ja     0x40df26
  40df63:	test   eax,0x2044dfe7
  40df68:	xlat   BYTE PTR ds:[ebx]
  40df69:	jo     0x40defe
  40df6b:	xor    BYTE PTR [ebx-0x67],bh
  40df6e:	lods   eax,DWORD PTR ds:[esi]
  40df6f:	ss adc al,al
  40df72:	push   edx
  40df73:	ror    esp,0x4e
  40df76:	arpl   WORD PTR [ebx],di
  40df78:	xor    ch,dl
  40df7a:	cs cs jbe 0x40dfb5
  40df7e:	out    dx,al
  40df7f:	mov    BYTE PTR [edi],cl
  40df81:	(bad)  
  40df82:	mov    ebx,0xb760ee65
  40df87:	cmp    esp,ecx
  40df89:	(bad)  
  40df8a:	aad    0xae
  40df8c:	cli    
  40df8d:	shl    DWORD PTR [ecx-0x32],cl
  40df90:	icebp  
  40df91:	add    edi,ebx
  40df93:	les    esp,FWORD PTR [eax-0x2d]
  40df96:	mov    esi,0x84d70b27
  40df9b:	pop    ss
  40df9c:	fdiv   QWORD PTR [esp+ebx*4+0x71]
  40dfa0:	xchg   esp,eax
  40dfa1:	ret    
  40dfa2:	loop   0x40dfe7
  40dfa4:	or     bl,BYTE PTR [ebp-0x3e]
  40dfa7:	iret   
  40dfa8:	rcl    al,cl
  40dfaa:	xchg   esp,eax
  40dfab:	fnsetpm(287 only) 
  40dfad:	arpl   WORD PTR ds:0xf87aab5d,bp
  40dfb3:	call   0xd28e1770
  40dfb8:	pop    ebx
  40dfb9:	or     DWORD PTR [edx-0x4f4d205d],ecx
  40dfbf:	or     BYTE PTR [ebp+0x3cee2067],ah
  40dfc5:	fst    QWORD PTR [esi-0x5a]
  40dfc8:	mov    ds:0xd2e28065,al
  40dfcd:	ja     0x40e009
  40dfcf:	adc    cl,dh
  40dfd1:	push   0x3b
  40dfd3:	and    al,0xee
  40dfd5:	mov    eax,0x453badf7
  40dfda:	cli    
  40dfdb:	pop    ecx
  40dfdc:	les    esp,FWORD PTR [edi]
  40dfde:	xchg   esi,eax
  40dfdf:	mov    eax,ds:0xdf9cd696
  40dfe4:	dec    edx
  40dfe5:	ss cmc 
  40dfe7:	jo     0x40e042
  40dfe9:	ds fadd st(4),st
  40dfec:	xor    BYTE PTR [edx-0x1b],bh
  40dfef:	xchg   esi,eax
  40dff0:	test   BYTE PTR [esi-0x41],0x95
  40dff4:	xor    eax,0x547be5ba
  40dff9:	fnstcw WORD PTR [ebx-0x7752a840]
  40dfff:	jmp    0x40dfe4
  40e001:	bswap  edi
  40e003:	adc    dh,BYTE PTR ss:[ebp-0x798bed8a]
  40e00a:	(bad)  
  40e00b:	or     BYTE PTR gs:[ebp+0x6c],0xea
  40e010:	outs   dx,DWORD PTR ds:[esi]
  40e011:	icebp  
  40e012:	xchg   ebx,eax
  40e013:	jo     0x40dfdb
  40e015:	and    al,0xcb
  40e017:	pop    ebp
  40e018:	leave  
  40e019:	adc    eax,0x24bff09a
  40e01e:	and    al,0x4f
  40e020:	mov    al,0xb5
  40e022:	mov    cl,0x63
  40e024:	jle    0x40e056
  40e026:	inc    esi
  40e027:	push   cs
  40e028:	jb     0x40dfbe
  40e02a:	(bad)  
  40e02b:	mov    ebp,DWORD PTR [esi+0x3c]
  40e02e:	dec    eax
  40e02f:	inc    edi
  40e030:	or     BYTE PTR [ecx+0x2ae6fe92],0xc6
  40e037:	or     eax,0xc31cd7d
  40e03c:	(bad)  
  40e03d:	mov    esp,0x6ad7cb6
  40e042:	popa   
  40e043:	pop    ecx
  40e044:	sbb    esi,DWORD PTR ds:0x60eb5315
  40e04a:	xorps  xmm2,XMMWORD PTR [esp+edx*8]
  40e04e:	jmp    0xb7d731d6
  40e053:	adc    eax,0xc7f4cfe6
  40e058:	cwde   
  40e059:	xlat   BYTE PTR ds:[ebx]
  40e05a:	sbb    cl,bh
  40e05c:	imul   edi,eax,0x5d652538
  40e062:	inc    esi
  40e063:	push   cs
  40e064:	xor    DWORD PTR [eax],eax
  40e066:	and    BYTE PTR [eax-0x6b12cae8],dl
  40e06c:	ret    0x7149
  40e06f:	push   esi
  40e070:	jmp    0x40e022
  40e072:	mov    eax,0x7dc7c294
  40e077:	aaa    
  40e078:	cs dec esp
  40e07a:	push   edi
  40e07b:	test   al,0x60
  40e07d:	pop    ebp
  40e07e:	and    eax,0xcd7ae507
  40e083:	in     al,0xcb
  40e085:	sbb    al,0xeb
  40e087:	inc    esp
  40e088:	push   eax
  40e089:	(bad)  
  40e08a:	in     eax,0xb8
  40e08c:	adc    BYTE PTR [ecx-0x64b8229d],dl
  40e092:	test   DWORD PTR [ecx],edi
  40e094:	dec    ebx
  40e095:	mov    ds:0x28a21140,eax
  40e09a:	pop    ss
  40e09b:	adc    eax,0x96e412e1
  40e0a0:	xchg   esp,eax
  40e0a1:	arpl   dx,cx
  40e0a3:	mov    ch,0x89
  40e0a5:	rol    DWORD PTR [ecx],0x38
  40e0a8:	jecxz  0x40e0fc
  40e0aa:	test   al,0xb1
  40e0ac:	popf   
  40e0ad:	sahf   
  40e0ae:	out    dx,eax
  40e0af:	aas    
  40e0b0:	mov    eax,0xca0a716c
  40e0b5:	push   esi
  40e0b6:	and    DWORD PTR [ebp+0x4],esi
  40e0b9:	scas   al,BYTE PTR es:[edi]
  40e0ba:	xor    al,0xef
  40e0bc:	jg     0x40e08f
  40e0be:	je     0x40e046
  40e0c0:	mov    eax,0xf2bd2431
  40e0c5:	leave  
  40e0c6:	jge    0x40e05b
  40e0c8:	outs   dx,BYTE PTR ds:[esi]
  40e0c9:	jle    0x40e05b
  40e0cb:	aad    0xf8
  40e0cd:	push   ecx
  40e0ce:	push   edi
  40e0cf:	sbb    eax,0x2994ad75
  40e0d4:	fisubr WORD PTR [edi-0x5edb5a75]
  40e0da:	sbb    edx,ebp
  40e0dc:	cdq    
  40e0dd:	nop
  40e0de:	shr    BYTE PTR [edi],0xc4
  40e0e1:	imul   ebx,DWORD PTR [ebx-0x1372514b],0xffffffee
  40e0e8:	aas    
  40e0e9:	bound  ebx,QWORD PTR [edi+0x79]
  40e0ec:	stc    
  40e0ed:	imul   edi,DWORD PTR [ecx],0x28
  40e0f0:	push   edi
  40e0f1:	les    eax,FWORD PTR [esi+eax*8+0x7d69cb44]
  40e0f8:	(bad)  
  40e0f9:	(bad)  
  40e0fa:	loope  0x40e131
  40e0fc:	and    al,0x7e
  40e0fe:	mov    ds:0x75554ef1,al
  40e103:	es mov edi,0xcd013480
  40e109:	mov    dl,0x8d
  40e10b:	pusha  
  40e10c:	loope  0x40e0db
  40e10e:	enter  0xf640,0x7e
  40e112:	push   esi
  40e113:	jbe    0x40e0e4
  40e115:	adc    dh,BYTE PTR [esi+0x7fcb6212]
  40e11b:	xor    dl,BYTE PTR [ecx+0xf6433b1]
  40e121:	and    cl,BYTE PTR [edx-0x60]
  40e124:	cli    
  40e125:	ds dec edx
  40e127:	popa   
  40e128:	xchg   esp,eax
  40e129:	xchg   ebp,eax
  40e12a:	xchg   esp,eax
  40e12b:	lock repnz inc ebp
  40e12e:	xor    BYTE PTR [ebp+0x7b],0xc7
  40e132:	ds (bad) 
  40e134:	(bad)  
  40e135:	pop    ss
  40e136:	dec    ebx
  40e137:	rcl    BYTE PTR [ebx],1
  40e139:	inc    esp
  40e13a:	or     dl,ah
  40e13c:	sub    eax,DWORD PTR [ecx]
  40e13e:	pop    es
  40e13f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e140:	jge    0x40e185
  40e142:	daa    
  40e143:	pushf  
  40e144:	clc    
  40e145:	aas    
  40e146:	daa    
  40e147:	daa    
  40e148:	in     al,dx
  40e149:	icebp  
  40e14a:	push   ebp
  40e14b:	mov    ds:0xf9502f77,eax
  40e150:	adc    ebp,0x5522fc9
  40e156:	push   es
  40e157:	xchg   ebx,eax
  40e158:	fwait
  40e159:	hlt    
  40e15a:	mov    eax,ds:0xba33b81d
  40e15f:	push   ebp
  40e160:	adc    bl,ch
  40e162:	test   ebx,ecx
  40e164:	jnp    0x40e161
  40e166:	aaa    
  40e167:	fstp   TBYTE PTR gs:[eax+0x43795668]
  40e16e:	cmp    bh,ch
  40e170:	jecxz  0x40e1f0
  40e172:	out    dx,eax
  40e173:	sub    BYTE PTR ds:0xc67dbc27,dl
  40e179:	pop    ds
  40e17a:	fnstenv [ebx+0x5c]
  40e17d:	aam    0x62
  40e17f:	aad    0x15
  40e181:	sbb    edx,DWORD PTR [ecx+0x4c]
  40e184:	scas   eax,DWORD PTR es:[edi]
  40e185:	mov    al,0xcb
  40e187:	push   ebp
  40e188:	cmc    
  40e189:	mov    ah,0x2a
  40e18b:	and    al,0xd3
  40e18d:	or     BYTE PTR [ebx+eiz*4],dl
  40e190:	jns    0x40e14b
  40e192:	aam    0xc8
  40e194:	out    0x27,eax
  40e196:	leave  
  40e197:	cmp    edi,DWORD PTR [ebx-0x6da25374]
  40e19d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e19e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e19f:	scas   al,BYTE PTR es:[edi]
  40e1a0:	or     BYTE PTR [edx-0x3b],ah
  40e1a3:	lea    eax,[edi]
  40e1a5:	ins    DWORD PTR es:[edi],dx
  40e1a6:	cdq    
  40e1a7:	dec    eax
  40e1a8:	jmp    0x40e135
  40e1aa:	dec    ebp
  40e1ab:	popf   
  40e1ac:	pop    ds
  40e1ad:	cld    
  40e1ae:	loope  0x40e17f
  40e1b0:	mov    esp,0x2c48f3ac
  40e1b5:	std    
  40e1b6:	in     eax,dx
  40e1b7:	fbld   TBYTE PTR [ecx+0x414cdef6]
  40e1bd:	mov    ebp,0x8c81a591
  40e1c2:	sahf   
  40e1c3:	mov    ch,0x8f
  40e1c5:	leave  
  40e1c6:	mov    dh,0x0
  40e1c8:	(bad)  
  40e1c9:	mov    ah,0x46
  40e1cb:	push   ebx
  40e1cd:	hlt    
  40e1ce:	pushf  
  40e1cf:	mov    bh,0xb2
  40e1d1:	shl    ah,1
  40e1d3:	mov    al,bh
  40e1d5:	out    0x72,eax
  40e1d7:	daa    
  40e1d8:	sbb    dh,BYTE PTR [eax+0x6f]
  40e1db:	popa   
  40e1dc:	mov    bh,BYTE PTR [eax]
  40e1de:	and    al,0x94
  40e1e0:	inc    esp
  40e1e1:	jns    0x40e246
  40e1e3:	shr    ebp,1
  40e1e5:	pushf  
  40e1e6:	push   ss
  40e1e7:	sahf   
  40e1e8:	cmp    cl,BYTE PTR [esp+ebp*2+0x2b]
  40e1ec:	mov    ds:0x2849a380,eax
  40e1f1:	mov    al,ds:0x2d7bebb0
  40e1f6:	xchg   esi,eax
  40e1f7:	jle    0x40e1da
  40e1f9:	jmp    0x40e255
  40e1fb:	cmc    
  40e1fc:	push   ds
  40e1fd:	cdq    
  40e1fe:	jmp    0x5e74:0x10019b18
  40e205:	clc    
  40e206:	fcomp  DWORD PTR ds:0x3ca0abb0
  40e20c:	xchg   edx,eax
  40e20d:	push   ss
  40e20e:	pop    ss
  40e20f:	xor    al,0x8f
  40e211:	icebp  
  40e212:	jmp    0xfb8aae9d
  40e217:	or     al,0xb
  40e219:	dec    ebp
  40e21a:	jnp    0x40e20a
  40e21c:	in     eax,dx
  40e21d:	aad    0x4
  40e21f:	(bad)  
  40e221:	repnz jecxz 0x40e242
  40e224:	push   0xffffffa9
  40e226:	(bad)  
  40e227:	jge    0x40e20b
  40e229:	and    dh,al
  40e22b:	(bad)  
  40e22c:	push   esp
  40e22d:	inc    esp
  40e22e:	push   esi
  40e22f:	cli    
  40e230:	pop    eax
  40e231:	push   edi
  40e232:	mov    dh,bh
  40e234:	xchg   ebx,eax
  40e235:	pop    ds
  40e236:	into   
  40e237:	inc    ebx
  40e238:	pushf  
  40e239:	or     eax,0x971670b3
  40e23e:	pop    ebp
  40e23f:	stos   BYTE PTR es:[edi],al
  40e240:	or     bh,BYTE PTR ds:0xd3d8805c
  40e246:	enter  0xd270,0x87
  40e24a:	sbb    edx,ebx
  40e24c:	clc    
  40e24d:	repz xchg edi,eax
  40e24f:	retf   
  40e250:	push   ds
  40e251:	lea    ecx,[eax]
  40e253:	push   esp
  40e254:	mov    ebx,0xa227b34b
  40e259:	sub    BYTE PTR [ebx],dh
  40e25b:	push   es
  40e25c:	lds    eax,FWORD PTR [bx+si-0x504]
  40e261:	or     BYTE PTR [ebp+0x61],0x23
  40e265:	or     esp,ecx
  40e267:	and    al,0xf4
  40e269:	gs xchg edx,eax
  40e26b:	je     0x40e247
  40e26d:	test   ecx,ebp
  40e26f:	icebp  
  40e270:	(bad)
  40e274:	mov    edx,0x2c9105ab
  40e279:	push   ebp
  40e27a:	push   ecx
  40e27b:	idiv   DWORD PTR [ebx-0x7d]
  40e27e:	pop    edi
  40e27f:	ins    DWORD PTR es:[edi],dx
  40e280:	dec    ecx
  40e281:	lahf   
  40e282:	iret   
  40e283:	lock ror DWORD PTR [ebx+ecx*8-0x64e0a36c],1
  40e28b:	mov    al,ds:0x27d3f1f9
  40e290:	aad    0x8
  40e292:	jno    0x40e2f1
  40e294:	push   ss
  40e295:	jne    0x40e268
  40e297:	clc    
  40e298:	rol    DWORD PTR [edx-0x1c656334],cl
  40e29e:	mov    WORD PTR [ecx-0x4f38516f],es
  40e2a4:	push   cs
  40e2a5:	(bad)
  40e2a8:	jo     0x40e262
  40e2aa:	je     0x40e24c
  40e2ac:	and    edx,esp
  40e2ae:	pop    ss
  40e2af:	out    0xa7,al
  40e2b1:	lods   al,BYTE PTR ds:[esi]
  40e2b2:	jmp    0x2b5e:0xeea7a294
  40e2b9:	mov    DWORD PTR [eax-0x59],edx
  40e2bc:	mov    ah,0x39
  40e2be:	xchg   ebx,eax
  40e2bf:	popa   
  40e2c0:	inc    eax
  40e2c1:	out    0x97,eax
  40e2c3:	sub    DWORD PTR [ebx],esi
  40e2c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2c6:	lods   al,BYTE PTR ds:[esi]
  40e2c7:	mov    bh,0xa6
  40e2c9:	mov    al,ds:0x52e46440
  40e2ce:	fwait
  40e2cf:	jp     0x40e2d0
  40e2d1:	pusha  
  40e2d2:	gs inc ebx
  40e2d4:	pop    edi
  40e2d5:	pop    ebx
  40e2d6:	and    ebx,esi
  40e2d8:	sub    dl,bh
  40e2da:	adc    ebx,DWORD PTR [esi+0x4044de8d]
  40e2e0:	jmp    0x40e26d
  40e2e2:	pop    eax
  40e2e3:	mov    WORD PTR [edx],?
  40e2e5:	xchg   ebp,eax
  40e2e6:	pushf  
  40e2e7:	mov    al,0x99
  40e2e9:	jnp    0x40e2bc
  40e2eb:	lock imul esi,esi,0xffffffed
  40e2ef:	push   ecx
  40e2f0:	repnz lahf 
  40e2f2:	add    DWORD PTR [eax+esi*2+0x78bef81e],ebx
  40e2f9:	push   esp
  40e2fa:	push   esp
  40e2fb:	mov    al,0x1c
  40e2fd:	push   ds
  40e2fe:	ds aas 
  40e300:	xchg   edi,eax
  40e301:	popa   
  40e302:	mov    ecx,0xc9674c5c
  40e307:	xchg   ebx,eax
  40e308:	push   0xe
  40e30a:	sbb    BYTE PTR [eax+eax*2-0x29],ah
  40e30e:	fnstcw WORD PTR [ecx+0x30]
  40e311:	add    eax,0x3c4f8667
  40e316:	push   eax
  40e317:	pop    es
  40e318:	rol    BYTE PTR [ecx+ecx*2],cl
  40e31b:	dec    esi
  40e31c:	sub    al,0x68
  40e31e:	push   0xca38b228
  40e323:	add    DWORD PTR [ebp-0x3cc9a95a],esp
  40e329:	push   esi
  40e32a:	jne    0x40e38e
  40e32c:	jp     0x40e2bd
  40e32e:	lods   eax,DWORD PTR ds:[esi]
  40e32f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e330:	mov    eax,0x8741b2c4
  40e335:	outs   dx,BYTE PTR ds:[esi]
  40e336:	jbe    0x40e31a
  40e338:	popa   
  40e339:	push   edi
  40e33a:	enter  0x963e,0x60
  40e33e:	loope  0x40e2f4
  40e340:	stc    
  40e341:	leave  
  40e342:	xchg   esi,eax
  40e343:	je     0x40e2fa
  40e345:	lds    eax,FWORD PTR [edi]
  40e347:	mov    cl,0xcb
  40e349:	or     eax,0x23b2435e
  40e34e:	xchg   edx,eax
  40e34f:	adc    DWORD PTR [eax+0x3e],eax
  40e352:	xchg   esi,eax
  40e353:	push   cs
  40e354:	pop    ebp
  40e355:	mov    esp,0x280a876f
  40e35a:	xor    ebx,DWORD PTR [edx]
  40e35c:	dec    edx
  40e35d:	xchg   BYTE PTR [ecx+eax*8+0x3e],dh
  40e361:	jmp    0x11e6b52b
  40e366:	bound  esp,QWORD PTR [edx+0x7508be41]
  40e36c:	lods   eax,DWORD PTR ds:[esi]
  40e36d:	push   ebx
  40e36e:	shl    dh,0xdb
  40e371:	fnsave [eax+0xdf19d46]
  40e377:	(bad)  
  40e378:	(bad)  
  40e379:	gs and eax,0xf6aca1b8
  40e37f:	fwait
  40e380:	ins    BYTE PTR es:[edi],dx
  40e381:	and    bl,BYTE PTR [ebx]
  40e383:	cmp    DWORD PTR [edx-0x6],esi
  40e386:	std    
  40e387:	and    DWORD PTR [esi],ecx
  40e389:	test   al,0x1
  40e38b:	rol    DWORD PTR [ebp-0x50],1
  40e38e:	mul    BYTE PTR [ecx-0x4f]
  40e391:	mov    esi,0x94ddd6e3
  40e396:	or     eax,0xe6e8c8b6
  40e39b:	xchg   DWORD PTR [ecx+0x13f8aeb8],ebx
  40e3a1:	lods   eax,DWORD PTR ds:[esi]
  40e3a2:	add    al,0x4
  40e3a4:	dec    ecx
  40e3a5:	mov    cl,0xa7
  40e3a7:	mov    al,0x3e
  40e3a9:	push   es
  40e3aa:	dec    edx
  40e3ab:	xchg   edx,eax
  40e3ac:	sub    ch,0xc3
  40e3af:	mov    eax,ds:0x27174219
  40e3b4:	fwait
  40e3b5:	or     BYTE PTR [ebx],0x87
  40e3b8:	add    esp,DWORD PTR [eax+0x5113dbd6]
  40e3be:	xchg   ebx,eax
  40e3bf:	cmp    ebx,0x40935bff
  40e3c5:	sbb    ebx,esp
  40e3c7:	xchg   edx,eax
  40e3c8:	add    eax,DWORD PTR [di+0x3551]
  40e3cd:	icebp  
  40e3ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3cf:	add    ah,BYTE PTR [ebx+0x35]
  40e3d2:	mov    ah,0xfd
  40e3d4:	push   ebx
  40e3d5:	in     eax,0x33
  40e3d7:	and    bh,BYTE PTR [ebx]
  40e3d9:	push   cs
  40e3da:	ret    
  40e3db:	repz push 0xfce35c81
  40e3e1:	mov    ecx,0x6dbfd399
  40e3e6:	xor    BYTE PTR [edi-0xe170cf5],ah
  40e3ec:	rol    DWORD PTR [esp+ecx*8+0x2],0x75
  40e3f1:	fimul  WORD PTR [edi+0x9]
  40e3f4:	mov    bl,BYTE PTR [esi+0x5692ce86]
  40e3fa:	xchg   edi,eax
  40e3fb:	sub    al,0xf9
  40e3fd:	mov    cl,0x14
  40e3ff:	dec    eax
  40e400:	jecxz  0x40e3a1
  40e402:	jmp    0xf963b4b9
  40e407:	pusha  
  40e408:	dec    eax
  40e409:	test   eax,0x8faa1830
  40e40e:	jno    0x40e458
  40e410:	mov    dh,0x7e
  40e412:	mov    edx,0xcbe504aa
  40e417:	jle    0x40e40a
  40e419:	jge    0x40e416
  40e41b:	push   ds
  40e41c:	mov    bh,0x74
  40e41e:	sub    dh,cl
  40e420:	lods   al,BYTE PTR ds:[esi]
  40e421:	mov    ch,BYTE PTR [ebx-0x4e]
  40e424:	call   0xeb3a6dc6
  40e429:	fmul   DWORD PTR [ecx+0xc2bd72a]
  40e42f:	mov    ebp,?
  40e431:	jae    0x40e3f7
  40e433:	and    ebx,DWORD PTR [ebx+eiz*1+0x5e93d92f]
  40e43a:	in     al,dx
  40e43b:	cmp    al,0xf1
  40e43d:	pop    edx
  40e43e:	rcr    DWORD PTR [esi-0x4],0xa6
  40e442:	xchg   edx,eax
  40e443:	enter  0x7884,0xc3
  40e447:	dec    ebp
  40e448:	push   cs
  40e449:	ds int 0xc6
  40e44c:	push   esp
  40e44d:	retf   
  40e44e:	loopne 0x40e3fb
  40e450:	ret    0x6ce1
  40e453:	push   esp
  40e454:	or     DWORD PTR [eax-0x41],0x5e5665d9
  40e45b:	lods   al,BYTE PTR ds:[esi]
  40e45c:	dec    eax
  40e45d:	pop    es
  40e45e:	in     eax,dx
  40e45f:	ja     0x40e4c2
  40e461:	daa    
  40e462:	inc    ebx
  40e463:	or     DWORD PTR cs:[ecx],eax
  40e466:	cmp    BYTE PTR [ecx],dl
  40e468:	mov    es,WORD PTR [edi+0x33cfe527]
  40e46e:	and    DWORD PTR [ecx+0x5eb13091],esp
  40e474:	pushf  
  40e475:	mov    esi,0x295962cd
  40e47a:	fs scas eax,DWORD PTR es:[edi]
  40e47c:	das    
  40e47d:	out    dx,eax
  40e47e:	mov    bl,0x25
  40e480:	out    dx,al
  40e481:	or     eax,0x69332e4c
  40e486:	out    dx,eax
  40e487:	int    0x10
  40e489:	fbstp  TBYTE PTR [edx-0x47bd61e]
  40e48f:	jge    0x40e487
  40e491:	out    0x25,eax
  40e493:	or     al,0xb3
  40e495:	dec    edi
  40e496:	add    BYTE PTR [eax-0x53],bl
  40e499:	mov    BYTE PTR [esi-0x29],ah
  40e49c:	push   ds
  40e49d:	add    dl,BYTE PTR [ebp+0x47]
  40e4a0:	jp     0x40e456
  40e4a2:	stos   BYTE PTR es:[edi],al
  40e4a3:	(bad)  
  40e4a5:	into   
  40e4a6:	outs   dx,DWORD PTR ds:[esi]
  40e4a7:	sbb    BYTE PTR [eax-0x4d29b77b],dl
  40e4ad:	ins    BYTE PTR es:[edi],dx
  40e4ae:	(bad)  
  40e4af:	test   al,0xf4
  40e4b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4b2:	stos   DWORD PTR es:[edi],eax
  40e4b3:	xchg   edi,eax
  40e4b4:	ret    
  40e4b5:	lods   eax,DWORD PTR ds:[esi]
  40e4b6:	repz enter 0x1039,0x4e
  40e4bb:	and    esi,DWORD PTR [ecx]
  40e4bd:	loop   0x40e4a9
  40e4bf:	out    dx,eax
  40e4c0:	out    dx,eax
  40e4c1:	mov    dh,0xa3
  40e4c3:	mov    DWORD PTR [edi+0x3d],edi
  40e4c6:	test   eax,0x6e10655
  40e4cb:	jb     0x40e49c
  40e4cd:	(bad)  
  40e4ce:	and    ch,BYTE PTR [ebx-0x5e1b0521]
  40e4d4:	xchg   DWORD PTR [ecx+eax*8-0x4bd7c437],eax
  40e4db:	lods   eax,DWORD PTR ds:[esi]
  40e4dc:	and    dl,BYTE PTR [edx]
  40e4de:	not    DWORD PTR [edx+esi*1+0x2b392422]
  40e4e5:	mov    ah,0x85
  40e4e7:	push   ebx
  40e4e8:	push   ebx
  40e4e9:	mov    dl,0x5b
  40e4eb:	cdq    
  40e4ec:	sti    
  40e4ed:	jno    0x40e4ec
  40e4ef:	aam    0x9b
  40e4f1:	sti    
  40e4f2:	dec    edi
  40e4f3:	mov    BYTE PTR [edx+0x10],0xe9
  40e4f7:	dec    ecx
  40e4f8:	adc    eax,0x4430df58
  40e4fd:	pop    edi
  40e4fe:	jns    0x40e483
  40e500:	aad    0x85
  40e502:	push   edi
  40e503:	mov    dh,0x64
  40e505:	sbb    eax,0x78ad8906
  40e50a:	pop    bx
  40e50c:	or     BYTE PTR ds:[edx],bl
  40e50f:	jno    0x40e4e4
  40e511:	add    BYTE PTR [edx-0x7c2807b4],dh
  40e517:	cmpxchg DWORD PTR [esi+eax*1+0x47],ecx
  40e51c:	retf   0xc5e4
  40e51f:	shl    DWORD PTR [edi+0x4e93ebb4],1
  40e525:	xor    ecx,edi
  40e527:	pop    ss
  40e528:	fdivr  QWORD PTR ds:0x7530119b
  40e52e:	pop    edi
  40e52f:	div    ecx
  40e531:	cs aaa 
  40e533:	fs sub eax,0xbe205ccb
  40e539:	push   ebp
  40e53a:	fs jecxz 0x40e4ea
  40e53d:	lods   eax,DWORD PTR ds:[esi]
  40e53e:	xchg   esi,eax
  40e53f:	cmp    BYTE PTR [ebx-0x4e],ch
  40e542:	test   eax,0x7230ce81
  40e547:	or     edi,edi
  40e549:	or     DWORD PTR [esi+ebp*8],0x26cd0e11
  40e550:	retf   0x8b0b
  40e553:	(bad)  
  40e554:	push   es
  40e555:	mov    esp,0x284d3aaf
  40e55a:	clc    
  40e55b:	outs   dx,BYTE PTR ds:[esi]
  40e55c:	and    ecx,DWORD PTR [esi-0x12]
  40e55f:	xor    BYTE PTR [edi+ebx*4-0x623d9a5c],cl
  40e566:	outs   dx,BYTE PTR ds:[esi]
  40e567:	adc    esp,DWORD PTR [ebp+0x56892df7]
  40e56d:	sbb    al,0x5a
  40e56f:	call   DWORD PTR [ecx]
  40e571:	das    
  40e572:	shl    DWORD PTR [eax-0x3a],1
  40e575:	dec    esp
  40e576:	std    
  40e577:	icebp  
  40e578:	outs   dx,BYTE PTR ds:[esi]
  40e579:	push   0xa1985ec1
  40e57e:	jl     0x40e51e
  40e580:	mov    esp,0x8266cb7b
  40e585:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e587:	idiv   ch
  40e589:	sbb    ah,ah
  40e58b:	stos   DWORD PTR es:[edi],eax
  40e58c:	repz fld TBYTE PTR [edx+0x4751698b]
  40e593:	hlt    
  40e594:	adc    DWORD PTR [edx],esi
  40e596:	dec    esi
  40e597:	cmp    ah,BYTE PTR [ebx-0x4f]
  40e59a:	cmp    edx,DWORD PTR [edi]
  40e59c:	(bad)  
  40e59e:	pop    ds
  40e59f:	loopne 0x40e5f3
  40e5a1:	dec    esi
  40e5a2:	sbb    ebx,edx
  40e5a4:	out    0xbb,al
  40e5a6:	xchg   DWORD PTR [esi],ebp
  40e5a8:	pop    edx
  40e5a9:	aam    0x6e
  40e5ab:	dec    ecx
  40e5ac:	mov    bh,0x1b
  40e5ae:	mov    edx,0xbe7ebe75
  40e5b3:	aam    0xa9
  40e5b5:	push   ds
  40e5b6:	stos   BYTE PTR es:[edi],al
  40e5b7:	hlt    
  40e5b8:	cmp    bl,BYTE PTR [esi+0x163cddf0]
  40e5be:	lahf   
  40e5bf:	adc    al,0xc5
  40e5c1:	push   esi
  40e5c2:	mov    ebx,0x54753ac8
  40e5c7:	push   ss
  40e5c8:	fistp  DWORD PTR [edi-0x7117d8c2]
  40e5ce:	pop    eax
  40e5cf:	mov    bh,0x1f
  40e5d1:	jp     0x40e5db
  40e5d3:	call   0x240a:0x4f64167e
  40e5da:	sbb    esi,ebx
  40e5dc:	scas   al,BYTE PTR es:[edi]
  40e5dd:	adc    DWORD PTR [ebx+0x1d],eax
  40e5e0:	daa    
  40e5e1:	push   cs
  40e5e2:	sub    ebx,DWORD PTR ds:0xd4c8f2f9
  40e5e8:	push   ecx
  40e5e9:	push   0x86218303
  40e5ee:	aam    0x26
  40e5f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5f1:	jmp    0xdd57daf8
  40e5f6:	retf   0xe43
  40e5f9:	nop
  40e5fa:	jl     0x40e5e6
  40e5fc:	and    bh,ch
  40e5fe:	stos   BYTE PTR es:[edi],al
  40e5ff:	lods   eax,DWORD PTR ds:[esi]
  40e600:	lds    ebx,FWORD PTR [ebx]
  40e602:	lea    ebx,[eax]
  40e604:	dec    edx
  40e605:	jnp    0x40e677
  40e607:	pop    esi
  40e608:	cmc    
  40e609:	mov    ecx,0xec88e19d
  40e60e:	mov    al,ds:0x11981f65
  40e613:	push   0x27
  40e615:	xor    DWORD PTR [edi+esi*2+0x6158a7d],edi
  40e61c:	or     eax,0x8020a235
  40e621:	js     0x40e5ea
  40e623:	ret    
  40e624:	int    0x2d
  40e626:	iret   
  40e627:	test   cl,ah
  40e629:	daa    
  40e62a:	mov    edx,eax
  40e62c:	sbb    DWORD PTR [esi],ebx
  40e62e:	xor    DWORD PTR [ebp+0x4c4ba057],0xffffffe5
  40e635:	and    BYTE PTR [esi+0x36],cl
  40e638:	cmp    al,0xcf
  40e63a:	pop    ecx
  40e63b:	ins    DWORD PTR es:[edi],dx
  40e63c:	cmp    bl,al
  40e63e:	data16 fwait
  40e640:	(bad)  
  40e641:	and    DWORD PTR [edx-0x10],edx
  40e644:	mov    bh,0x84
  40e646:	lahf   
  40e647:	xor    al,0x5b
  40e649:	cmp    eax,0x32912a52
  40e64e:	aas    
  40e64f:	push   0x17
  40e651:	push   cs
  40e652:	and    DWORD PTR [ebx-0x36],0x43db12f0
  40e659:	mov    esp,0xe5996f0c
  40e65e:	or     eax,DWORD PTR fs:[esi]
  40e661:	and    eax,0x33a3e8d8
  40e666:	dec    esp
  40e667:	cmp    BYTE PTR ds:0x37c75c26,al
  40e66d:	and    eax,0xa1a465b3
  40e672:	pop    esi
  40e673:	clc    
  40e674:	das    
  40e675:	sub    eax,0x7ebd8ea2
  40e67a:	or     DWORD PTR [ecx+0x943ca7a],ebp
  40e680:	hlt    
  40e681:	punpckhwd mm3,mm7
  40e684:	mov    ebx,0x7af9c76d
  40e689:	mov    dh,0xf6
  40e68b:	mov    DWORD PTR [esi-0x52],ebx
  40e68e:	jg     0x40e61a
  40e690:	out    0x98,eax
  40e692:	jg     0x40e695
  40e694:	add    eax,0xcd6b47aa
  40e699:	mov    ebp,0x72960f5d
  40e69e:	pop    es
  40e69f:	push   edx
  40e6a0:	jo     0x40e709
  40e6a2:	lods   eax,DWORD PTR ds:[esi]
  40e6a3:	fxch   st(4)
  40e6a5:	mov    cl,BYTE PTR [ecx+ebx*4-0x4]
  40e6a9:	outs   dx,BYTE PTR ds:[esi]
  40e6aa:	mov    edi,0x701a7d62
  40e6af:	mov    ecx,0xdc1462b7
  40e6b4:	dec    DWORD PTR [esi-0x52a530b4]
  40e6ba:	loope  0x40e65b
  40e6bc:	xor    al,0xb1
  40e6be:	push   0x5445adff
  40e6c3:	add    BYTE PTR ds:[eax+0x36],ch
  40e6c7:	scas   eax,DWORD PTR es:[edi]
  40e6c8:	in     al,dx
  40e6c9:	adc    al,BYTE PTR [ebx-0x6b0607f8]
  40e6cf:	jecxz  0x40e72c
  40e6d1:	repnz push ecx
  40e6d3:	outs   dx,DWORD PTR ds:[esi]
  40e6d4:	sbb    al,0x2c
  40e6d6:	push   ecx
  40e6d7:	push   esi
  40e6d8:	nop
  40e6d9:	pop    ecx
  40e6da:	push   esp
  40e6db:	adc    eax,0xd6df331e
  40e6e0:	sbb    al,0x4b
  40e6e2:	in     eax,0x21
  40e6e4:	iret   
  40e6e5:	data16 xor BYTE PTR [edi+eax*2-0x56],0xdd
  40e6eb:	mov    al,0xa1
  40e6ed:	push   0x28c0244c
  40e6f2:	sub    eax,0xbc1a1243
  40e6f7:	jae    0x40e766
  40e6f9:	fsub   QWORD PTR [edi+eax*1-0x4d8843f8]
  40e700:	push   edx
  40e701:	call   0xa7e6d9e9
  40e706:	push   0x2735643f
  40e70b:	push   eax
  40e70c:	(bad)  [ebx-0x108290d]
  40e712:	xor    DWORD PTR [eax],ebx
  40e714:	jmp    0x8f028ed
  40e719:	jne    0x40e727
  40e71b:	sbb    BYTE PTR [esi-0x76],0x5e
  40e71f:	inc    eax
  40e720:	retf   0xc7a6
  40e723:	push   ss
  40e724:	xlat   BYTE PTR ds:[ebx]
  40e725:	cmp    DWORD PTR [ebp-0x9cca3e1],0x6dbc10bb
  40e72f:	cmp    ecx,ebp
  40e731:	add    BYTE PTR [edi-0x3c707f56],cl
  40e737:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e738:	aad    0x6
  40e73a:	loope  0x40e6ea
  40e73c:	sbb    al,BYTE PTR [esp+eax*4+0x33]
  40e740:	test   bl,dh
  40e742:	lock sub cl,BYTE PTR gs:[ebx+0x684d1192]
  40e74a:	(bad)  
  40e74b:	shl    BYTE PTR [ecx+0x13397f96],cl
  40e751:	push   ecx
  40e752:	adc    al,0xa0
  40e754:	mov    edx,0xd1bffd57
  40e759:	cdq    
  40e75a:	mov    esp,0x9eaa8757
  40e75f:	cmp    ecx,0x12fc6d6a
  40e765:	imul   esi,DWORD PTR [ecx+edi*8],0xffffff84
  40e769:	retf   0x6095
  40e76c:	stos   DWORD PTR es:[edi],eax
  40e76d:	sbb    eax,0x8bbc59e3
  40e772:	add    DWORD PTR [edx],esi
  40e774:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e775:	mov    ebx,0x19af4c6d
  40e77a:	lods   al,BYTE PTR ds:[esi]
  40e77b:	into   
  40e77c:	mov    WORD PTR [esi],?
  40e77e:	pop    eax
  40e77f:	mov    ah,BYTE PTR [esi]
  40e781:	sub    eax,0xf85f56b
  40e786:	dec    esp
  40e787:	push   eax
  40e788:	sbb    DWORD PTR ds:0x5b6723f3,ebx
  40e78e:	mov    bh,0xf9
  40e790:	and    bh,BYTE PTR [ecx+0x5a]
  40e793:	fild   QWORD PTR [edx-0x3c75096f]
  40e799:	sub    dh,BYTE PTR [eax-0xf]
  40e79c:	push   0xe1af6eef
  40e7a1:	(bad)  
  40e7a2:	lods   al,BYTE PTR ds:[esi]
  40e7a3:	xor    bl,ah
  40e7a5:	scas   al,BYTE PTR es:[edi]
  40e7a6:	divps  xmm2,xmm1
  40e7a9:	outs   dx,BYTE PTR ds:[esi]
  40e7aa:	mov    ds:0xbc0957f4,al
  40e7af:	jo     0x40e82a
  40e7b1:	fdiv   QWORD PTR [si]
  40e7b4:	test   BYTE PTR [ebp-0x63],0xf
  40e7b8:	in     eax,dx
  40e7b9:	dec    ecx
  40e7ba:	xchg   ah,cl
  40e7bc:	(bad)  
  40e7bd:	imul   edi,DWORD PTR [ebx+esi*2],0xffffffe7
  40e7c1:	fsubr  DWORD PTR [eax-0x36]
  40e7c4:	pusha  
  40e7c5:	mov    ch,0xfe
  40e7c7:	add    al,0x46
  40e7c9:	pop    ds
  40e7ca:	test   esi,0x69f00950
  40e7d0:	sub    al,0x1f
  40e7d2:	xchg   esi,eax
  40e7d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7d4:	xor    al,0xa1
  40e7d6:	(bad)  
  40e7d7:	mov    DWORD PTR [eax-0x7c],esp
  40e7da:	(bad)  
  40e7dc:	test   DWORD PTR [edi-0x4523bd69],edi
  40e7e2:	ins    BYTE PTR es:[edi],dx
  40e7e3:	inc    esp
  40e7e4:	jnp    0x40e7d0
  40e7e6:	(bad)  
  40e7e7:	shl    BYTE PTR [edi+0x3d631291],1
  40e7ed:	mov    bh,0x56
  40e7ef:	add    eax,0x9e562984
  40e7f4:	push   ebp
  40e7f5:	and    bl,BYTE PTR [esi-0x5f]
  40e7f8:	sbb    al,0x5c
  40e7fa:	push   edx
  40e7fb:	(bad)  
  40e7fc:	xchg   ecx,eax
  40e7fd:	push   esi
  40e7fe:	loope  0x40e868
  40e800:	sbb    BYTE PTR [ebx+0x17],dh
  40e803:	add    al,0x0
  40e805:	out    0x9c,al
  40e807:	push   0x52f71aa7
  40e80c:	jb     0x40e882
  40e80e:	lock pusha 
  40e810:	jno    0x40e7cd
  40e812:	mov    DWORD PTR [edi-0x7b],esp
  40e815:	rcr    al,cl
  40e817:	(bad)  
  40e819:	cmp    ch,BYTE PTR [ecx-0x34]
  40e81c:	pop    es
  40e81d:	sbb    DWORD PTR [ebx+0x21b9aa6c],edi
  40e823:	jno    0x40e803
  40e825:	and    DWORD PTR [edx+0x4cb00485],ebx
  40e82b:	in     eax,0xd1
  40e82d:	mul    DWORD PTR [esi-0x6]
  40e830:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e831:	inc    edx
  40e832:	scas   al,BYTE PTR es:[edi]
  40e833:	sbb    edx,DWORD PTR ds:0xcf06750e
  40e839:	retf   0x6829
  40e83c:	dec    edx
  40e83d:	xor    al,0x32
  40e83f:	mov    ds:0x55e899de,al
  40e844:	or     eax,esi
  40e846:	pop    esp
  40e847:	xor    BYTE PTR [ebp+0x3ff31ee6],bh
  40e84d:	inc    edi
  40e84e:	xchg   ah,bh
  40e850:	push   edi
  40e851:	in     al,0x37
  40e853:	das    
  40e854:	shl    DWORD PTR [esi+ebx*2],cl
  40e857:	fld    QWORD PTR [ebp+0x4e9df6cf]
  40e85d:	cmp    eax,0xab90a5ac
  40e863:	pop    ebp
  40e864:	dec    esp
  40e865:	aam    0x5f
  40e867:	es push ecx
  40e869:	(bad)  
  40e86b:	xchg   ebx,eax
  40e86c:	sti    
  40e86d:	sub    eax,0x38aad84c
  40e872:	repz or BYTE PTR [esi+0x54],0x85
  40e877:	adc    edi,DWORD PTR [edi-0x33]
  40e87a:	add    eax,0x4270bd43
  40e87f:	cld    
  40e880:	sub    DWORD PTR [edi-0x5456e21e],edx
  40e886:	or     edi,DWORD PTR [edi-0x31]
  40e889:	scas   eax,DWORD PTR es:[edi]
  40e88a:	jg     0x40e872
  40e88c:	mov    BYTE PTR [edx],bl
  40e88e:	xchg   BYTE PTR [ecx+0x33108dab],dl
  40e894:	jne    0x40e878
  40e896:	push   esi
  40e897:	push   ecx
  40e898:	xor    eax,0x405bbff6
  40e89d:	mov    ds:0x99bea052,eax
  40e8a2:	or     dh,BYTE PTR [esi]
  40e8a4:	mov    dl,0x74
  40e8a6:	cmp    BYTE PTR [edx+0x33fc5cb],ah
  40e8ac:	rep ins BYTE PTR es:[edi],dx
  40e8ae:	outs   dx,BYTE PTR ds:[esi]
  40e8af:	push   edx
  40e8b0:	test   al,0xe2
  40e8b2:	fadd   QWORD PTR [edi-0x2d]
  40e8b5:	ror    DWORD PTR [ebx+0x7ece65ce],cl
  40e8bb:	push   es
  40e8bc:	cmp    eax,0xd2affe3c
  40e8c1:	cmp    dh,dh
  40e8c3:	out    0xa1,eax
  40e8c5:	ss pop eax
  40e8c7:	or     esi,DWORD PTR [edi]
  40e8c9:	outs   dx,BYTE PTR ds:[esi]
  40e8ca:	mov    ecx,0x7445a4fd
  40e8cf:	loopne 0x40e856
  40e8d1:	repnz std 
  40e8d3:	ret    
  40e8d4:	shr    BYTE PTR es:[ecx-0x4e30b482],1
  40e8db:	or     eax,0x227c134b
  40e8e0:	arpl   WORD PTR ds:0x86c0d2be,di
  40e8e6:	(bad)  
  40e8e7:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8e9:	lods   al,BYTE PTR ds:[esi]
  40e8ea:	call   FWORD PTR [ebx-0x37]
  40e8ed:	xchg   BYTE PTR [edi+edi*1-0x475ef53d],al
  40e8f4:	or     dh,dh
  40e8f6:	stc    
  40e8f7:	stos   DWORD PTR es:[edi],eax
  40e8f8:	test   al,0x89
  40e8fa:	lahf   
  40e8fb:	cli    
  40e8fc:	cmp    DWORD PTR [edi-0x707553e9],ebp
  40e902:	popf   
  40e903:	jl     0x40e970
  40e905:	shl    DWORD PTR [edx+0x7a],cl
  40e908:	pusha  
  40e909:	stc    
  40e90a:	dec    ebp
  40e90b:	add    BYTE PTR [ebp-0x1c],ah
  40e90e:	jne    0x40e93d
  40e910:	fptan  
  40e912:	pop    ss
  40e913:	mov    dl,0x25
  40e915:	data16 shr BYTE PTR [edx-0x5a0a8b73],1
  40e91c:	loop   0x40e91c
  40e91e:	lods   al,BYTE PTR ds:[esi]
  40e91f:	std    
  40e920:	fwait
  40e921:	(bad)  
  40e922:	push   edx
  40e923:	in     al,0x14
  40e925:	in     eax,dx
  40e926:	ret    
  40e927:	fidivr WORD PTR [eax-0xf]
  40e92a:	stos   BYTE PTR es:[edi],al
  40e92b:	loop   0x40e972
  40e92d:	xlat   BYTE PTR ds:[ebx]
  40e92e:	ss shrd esi,esp,cl
  40e932:	aaa    
  40e933:	jmp    0x9526:0x3fe0d1f2
  40e93a:	lods   eax,DWORD PTR ds:[esi]
  40e93b:	mov    eax,ds:0x8504261f
  40e940:	inc    edi
  40e941:	das    
  40e942:	ins    BYTE PTR es:[edi],dx
  40e943:	dec    ebp
  40e944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e945:	jns    0x40e996
  40e947:	arpl   WORD PTR [esi-0x68fc28be],si
  40e94d:	mov    ecx,edx
  40e94f:	inc    ebx
  40e950:	sub    BYTE PTR [esi+esi*8-0x4f],ah
  40e954:	sub    al,0xe2
  40e956:	clc    
  40e957:	push   0xdaf15250
  40e95c:	std    
  40e95d:	and    DWORD PTR [eax+0x3d],0x10
  40e961:	das    
  40e962:	jmp    0x40e994
  40e964:	inc    esp
  40e965:	xchg   BYTE PTR [ebp+0x10],bl
  40e968:	jge    0x40e938
  40e96a:	jb     0x40e9d2
  40e96c:	push   ecx
  40e96d:	mov    bh,dl
  40e96f:	dec    eax
  40e970:	dec    esp
  40e971:	addr16 imul edi,esi,0x94f6b21
  40e978:	clc    
  40e979:	pop    eax
  40e97a:	dec    ecx
  40e97b:	or     DWORD PTR [ebx],edi
  40e97d:	xor    ecx,DWORD PTR [eax]
  40e97f:	cmp    ch,BYTE PTR ds:0xacca021d
  40e985:	(bad)  
  40e986:	rcr    dh,0x3b
  40e989:	fild   DWORD PTR [ecx]
  40e98b:	loope  0x40e9be
  40e98d:	and    eax,0xf91d1617
  40e992:	and    al,0x3a
  40e994:	fwait
  40e995:	add    DWORD PTR [edx-0x5c046579],edi
  40e99b:	mov    dl,0xd7
  40e99d:	mov    ah,0xa1
  40e99f:	jmp    0x171a59ca
  40e9a4:	addr16 mov esi,0x4b3ee0e7
  40e9aa:	and    ch,BYTE PTR [ebx-0x5]
  40e9ad:	call   0xf881e5e3
  40e9b2:	ret    
  40e9b3:	jns    0x40e9b5
  40e9b5:	mov    ebp,DWORD PTR [ecx+0x15]
  40e9b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9b9:	pop    edi
  40e9ba:	mov    dh,0xdb
  40e9bc:	jmp    0x2aeffad2
  40e9c1:	ds pusha 
  40e9c3:	xchg   edi,eax
  40e9c4:	mov    esp,0x4eeef017
  40e9c9:	xor    eax,DWORD PTR [esi]
  40e9cb:	fadd   QWORD PTR [eax+0x59]
  40e9ce:	or     al,0x4d
  40e9d0:	out    dx,eax
  40e9d1:	(bad)  
  40e9d2:	pop    esi
  40e9d3:	leave  
  40e9d4:	or     dl,bl
  40e9d6:	loop   0x40e999
  40e9d8:	and    al,0xd2
  40e9da:	xchg   edx,eax
  40e9db:	sti    
  40e9dc:	daa    
  40e9dd:	mov    dl,0xa6
  40e9df:	out    dx,al
  40e9e0:	nop
  40e9e1:	adc    dh,BYTE PTR [eax]
  40e9e3:	pop    ebx
  40e9e4:	in     al,dx
  40e9e5:	xor    BYTE PTR ss:[ebx],bh
  40e9e8:	mov    ebp,DWORD PTR [eax-0x30]
  40e9eb:	jns    0x40e9e8
  40e9ed:	(bad)  
  40e9ee:	cs icebp 
  40e9f0:	push   ebp
  40e9f1:	push   ds
  40e9f2:	jb     0x40e995
  40e9f4:	in     eax,0x9a
  40e9f6:	in     al,dx
  40e9f7:	pop    esp
  40e9f8:	pop    esp
  40e9f9:	xor    eax,0x10f30612
  40e9fe:	pop    ss
  40e9ff:	cmp    eax,0x6d606ed7
  40ea04:	mov    ebp,0xc89e3e88
  40ea09:	imul   DWORD PTR [ebx+0x7e153ddf]
  40ea0f:	es sahf 
  40ea11:	and    ebx,edx
  40ea13:	and    BYTE PTR [esi+ebp*4-0x59],ch
  40ea17:	cmc    
  40ea18:	fsub   st,st(0)
  40ea1a:	aas    
  40ea1b:	ins    DWORD PTR es:[edi],dx
  40ea1c:	mov    eax,0x66045bd7
  40ea21:	cmc    
  40ea22:	inc    edi
  40ea23:	xchg   BYTE PTR [esi],dl
  40ea25:	adc    eax,ecx
  40ea27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea28:	cmc    
  40ea29:	pop    ss
  40ea2a:	jb     0x40ea8c
  40ea2c:	pop    es
  40ea2d:	fisubr DWORD PTR [ebp-0x7b475942]
  40ea33:	lods   al,BYTE PTR ds:[esi]
  40ea34:	enter  0xce8a,0x40
  40ea38:	daa    
  40ea39:	pushf  
  40ea3a:	ret    0x97b3
  40ea3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea3e:	push   esi
  40ea3f:	cld    
  40ea40:	daa    
  40ea41:	mov    edi,0x67b0f273
  40ea46:	mov    ebx,0xf65592
  40ea4b:	ja     0x40ea88
  40ea4d:	call   0x66188972
  40ea52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea53:	inc    ebx
  40ea54:	sub    eax,0x20553727
  40ea59:	ins    BYTE PTR es:[edi],dx
  40ea5a:	jns    0x40eab0
  40ea5c:	xchg   BYTE PTR [eax+eiz*4-0x77],ah
  40ea60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea61:	cmp    eax,0xec4c202d
  40ea66:	out    dx,al
  40ea67:	scas   al,BYTE PTR es:[edi]
  40ea68:	pop    ecx
  40ea69:	fisttp QWORD PTR [edi+0x59]
  40ea6c:	(bad)  
  40ea6d:	rcl    BYTE PTR [esi],cl
  40ea6f:	mov    cs,esi
  40ea71:	call   0x40538c4b
  40ea76:	aaa    
  40ea77:	ins    BYTE PTR es:[edi],dx
  40ea78:	pop    ebp
  40ea79:	imul   ebx,DWORD PTR [edi],0x51
  40ea7c:	jg     0x40eae3
  40ea7e:	sbb    eax,0xa442617f
  40ea83:	in     eax,0x0
  40ea85:	dec    DWORD PTR [edx+edx*2-0x35794984]
  40ea8c:	pop    es
  40ea8d:	sbb    eax,DWORD PTR [ebx-0x4c]
  40ea90:	imul   edx,esi,0xffffffc7
  40ea93:	mov    cs,esp
  40ea95:	inc    edx
  40ea96:	jne    0x40eae9
  40ea98:	sub    eax,0x7b01ee0d
  40ea9d:	shl    al,1
  40ea9f:	repz cmp dh,al
  40eaa2:	ja     0x40eab2
  40eaa4:	cs iret 
  40eaa6:	inc    eax
  40eaa7:	dec    ecx
  40eaa8:	push   ebx
  40eaa9:	mov    al,ds:0xb8339f8f
  40eaae:	xchg   ebx,eax
  40eaaf:	sub    al,0x14
  40eab1:	dec    esi
  40eab2:	inc    esi
  40eab3:	fidivr DWORD PTR [edi+0xbfc0141]
  40eab9:	dec    edi
  40eaba:	sub    ebx,DWORD PTR [ebx+0x67acc1b0]
  40eac0:	sbb    al,0x31
  40eac2:	push   eax
  40eac3:	popa   
  40eac4:	cld    
  40eac5:	mov    DWORD PTR [edi-0x520531b6],edi
  40eacb:	shl    DWORD PTR [ebx],0xee
  40eace:	jl     0x40ead0
  40ead0:	in     eax,dx
  40ead1:	repz std 
  40ead3:	mov    bl,0xf
  40ead5:	test   DWORD PTR [edx-0x26258ed1],esi
  40eadb:	out    0x90,eax
  40eadd:	xchg   ebx,eax
  40eade:	shr    DWORD PTR [esi+edx*4+0x4de2425c],cl
  40eae5:	add    esi,edx
  40eae7:	out    0x74,al
  40eae9:	mov    edx,0x30c86b03
  40eaee:	add    BYTE PTR [ecx],bh
  40eaf0:	cmp    bh,BYTE PTR [ebx+0x3761619f]
  40eaf6:	sub    DWORD PTR [ecx+edx*4-0x19efd234],ebp
  40eafd:	mov    WORD PTR [eax],?
  40eaff:	ror    DWORD PTR [eax+0x49],1
  40eb02:	js     0x40eaa0
  40eb04:	or     eax,edi
  40eb06:	(bad)  
  40eb07:	jbe    0x40eb67
  40eb09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb0a:	add    eax,DWORD PTR [esi+eax*8-0x2e]
  40eb0e:	leave  
  40eb0f:	in     eax,dx
  40eb10:	ror    DWORD PTR [esi+0x6d66c664],cl
  40eb16:	jne    0x40eb6c
  40eb18:	dec    edi
  40eb19:	xor    ch,dl
  40eb1b:	dec    esp
  40eb1c:	pop    es
  40eb1d:	mov    ah,0xa1
  40eb1f:	shl    DWORD PTR [edi+eiz*8+0x65a8cc20],1
  40eb26:	cmp    eax,DWORD PTR [edi+0x10a9c88a]
  40eb2c:	pop    esp
  40eb2d:	adc    al,0x4c
  40eb2f:	push   ebx
  40eb30:	sub    bh,BYTE PTR [edx-0x73]
  40eb33:	mov    eax,0x1d5241e1
  40eb38:	jge    0x40eb58
  40eb3a:	or     eax,0xa63478a8
  40eb3f:	pop    ss
  40eb40:	and    eax,0xfc3ee676
  40eb45:	ret    0x1844
  40eb48:	push   esp
  40eb49:	xchg   esi,eax
  40eb4a:	xlat   BYTE PTR ds:[ebx]
  40eb4b:	inc    ecx
  40eb4c:	jg     0x40eb45
  40eb4e:	push   es
  40eb4f:	add    ch,BYTE PTR [ebp+0x5c]
  40eb52:	lds    esp,FWORD PTR [ebx+0x7c]
  40eb55:	mov    ecx,0x469d0a4d
  40eb5a:	stc    
  40eb5b:	neg    dh
  40eb5d:	mov    ds:0x8848e06f,eax
  40eb62:	push   ss
  40eb63:	std    
  40eb64:	lahf   
  40eb65:	ss (bad) 
  40eb67:	xchg   ebx,eax
  40eb68:	out    0x6d,eax
  40eb6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb6b:	sub    edx,DWORD PTR [eax]
  40eb6d:	test   edx,eax
  40eb6f:	mov    al,ds:0x772bd6de
  40eb74:	(bad)  
  40eb75:	fsubr  DWORD PTR [edi+eax*2-0x7e]
  40eb79:	jg     0x40eb72
  40eb7b:	mov    edx,0x47376100
  40eb80:	adc    BYTE PTR [edx+ecx*4+0x6c],bh
  40eb84:	out    0x29,eax
  40eb86:	dec    esp
  40eb87:	call   0xa5371f25
  40eb8c:	lds    ecx,FWORD PTR [eax]
  40eb8e:	mov    esi,0x506b34d0
  40eb93:	std    
  40eb94:	pop    ebx
  40eb95:	xchg   ebx,eax
  40eb96:	pop    edi
  40eb97:	or     eax,ebp
  40eb99:	or     bl,al
  40eb9b:	mov    esp,0x40c0dacd
  40eba0:	push   esi
  40eba1:	inc    edi
  40eba2:	sub    edi,DWORD PTR [edi+0x48e9e69]
  40eba8:	cmp    DWORD PTR ds:0xfd7340df,eax
  40ebae:	mov    eax,0xfd57cca1
  40ebb3:	mov    esp,0x3b8cb65
  40ebb8:	sbb    al,0xfb
  40ebba:	es xchg esi,eax
  40ebbc:	fadd   st(1),st
  40ebbe:	rcl    eax,1
  40ebc0:	add    dl,BYTE PTR [ebx-0x3b5b10d1]
  40ebc6:	dec    ecx
  40ebc7:	jo     0x40ec2d
  40ebc9:	mov    ?,esi
  40ebcb:	stc    
  40ebcc:	lds    edi,FWORD PTR [edi+0x36911a40]
  40ebd2:	test   BYTE PTR [ebx],ah
  40ebd4:	bnd jnp 0x40ec33
  40ebd7:	cmp    eax,0x33f7f850
  40ebdc:	xchg   BYTE PTR [esi],dh
  40ebde:	cdq    
  40ebdf:	out    0x31,al
  40ebe1:	enter  0x555c,0xc9
  40ebe5:	sbb    al,0x1d
  40ebe7:	mov    dh,0xd
  40ebe9:	in     eax,dx
  40ebea:	gs inc ebp
  40ebec:	mov    ?,WORD PTR [eax]
  40ebee:	xchg   ecx,eax
  40ebef:	out    dx,eax
  40ebf0:	stc    
  40ebf1:	hlt    
  40ebf2:	cld    
  40ebf3:	es popf 
  40ebf5:	aaa    
  40ebf6:	push   ds
  40ebf7:	es popa 
  40ebf9:	aam    0x53
  40ebfb:	ja     0x40ebb2
  40ebfd:	je     0x40ebc1
  40ebff:	jge    0x40ebfa
  40ec01:	jle    0x40ebd9
  40ec03:	jae    0x40ebcb
  40ec05:	loopne 0x40ec56
  40ec07:	and    bh,ah
  40ec09:	aam    0x97
  40ec0b:	mov    eax,0x3df4eef6
  40ec10:	test   DWORD PTR [ebx+0x172dada1],esp
  40ec16:	mov    ds:0xc62ef1f1,al
  40ec1b:	mov    edi,0x31470128
  40ec20:	inc    ebp
  40ec21:	adc    ah,0x4c
  40ec24:	scas   al,BYTE PTR es:[edi]
  40ec25:	adc    BYTE PTR [esi-0x2a],cl
  40ec28:	fdiv   DWORD PTR [esi]
  40ec2a:	push   esp
  40ec2b:	mov    ecx,0xb673343d
  40ec30:	jl     0x40ec26
  40ec32:	pop    esp
  40ec33:	push   0x99a2656
  40ec38:	cmp    eax,0x4b167fe4
  40ec3d:	and    esp,DWORD PTR [esi-0x4280f3f2]
  40ec43:	ins    BYTE PTR es:[edi],dx
  40ec44:	adc    edx,DWORD PTR [edi+edi*4]
  40ec47:	(bad)  
  40ec48:	push   cs
  40ec49:	jp     0x40ecbb
  40ec4b:	arpl   WORD PTR [ebp-0x5f],si
  40ec4e:	(bad)  
  40ec4f:	push   0x32
  40ec51:	repz ffree st(1)
  40ec54:	sub    al,0xa1
  40ec56:	mov    al,0x17
  40ec58:	fcom   QWORD PTR [eax-0x79178a24]
  40ec5e:	dec    ebp
  40ec5f:	cmp    edi,esi
  40ec61:	lods   eax,DWORD PTR ds:[esi]
  40ec62:	cmc    
  40ec63:	test   eax,0x2c214cbe
  40ec68:	pop    ss
  40ec69:	sub    eax,0x486e7fab
  40ec6e:	daa    
  40ec6f:	xlat   BYTE PTR ds:[ebx]
  40ec70:	push   0xffffff99
  40ec72:	add    ch,dl
  40ec74:	sbb    ebx,DWORD PTR [ebx-0x2b]
  40ec77:	ins    BYTE PTR es:[edi],dx
  40ec78:	idiv   DWORD PTR [edi]
  40ec7a:	and    ah,BYTE PTR [ecx+0x5d]
  40ec7d:	jno    0x40ec4a
  40ec7f:	cmp    BYTE PTR [edi],dl
  40ec81:	loopne 0x40ecf3
  40ec83:	sub    BYTE PTR ds:0x5d3c0122,bl
  40ec89:	shl    BYTE PTR ds:0x77749737,0x29
  40ec90:	mov    cl,0xd
  40ec92:	retf   0xa717
  40ec95:	add    BYTE PTR [esi-0x7a],dh
  40ec98:	adc    al,0xda
  40ec9a:	jno    0x40ec70
  40ec9c:	adc    eax,0x402ee693
  40eca1:	fwait
  40eca2:	and    DWORD PTR [ecx],ebp
  40eca4:	in     eax,0xf7
  40eca6:	sub    DWORD PTR [ecx+0x79],eax
  40eca9:	jmp    0x2a7:0xe681258f
  40ecb0:	xchg   ebp,eax
  40ecb1:	adc    ebx,0x66
  40ecb4:	cmp    cl,bl
  40ecb6:	pop    es
  40ecb7:	mov    ebx,0x7ddeccdd
  40ecbc:	jge    0x40ec60
  40ecbe:	cmc    
  40ecbf:	out    dx,eax
  40ecc0:	inc    esp
  40ecc1:	or     DWORD PTR [ebx-0x51],esi
  40ecc4:	fcmovnu st,st(3)
  40ecc6:	jle    0x40eca1
  40ecc8:	adc    eax,0x2bfd31bd
  40eccd:	mov    edi,edx
  40eccf:	mov    esp,0xe02b9516
  40ecd4:	adc    eax,0xc85ee8a3
  40ecd9:	scas   eax,DWORD PTR es:[edi]
  40ecda:	test   al,ah
  40ecdc:	je     0x40ed0c
  40ecde:	arpl   cx,bp
  40ece0:	push   es
  40ece1:	xor    ch,BYTE PTR [esi+edx*8+0x75]
  40ece5:	cmp    eax,0x938f5fd6
  40ecea:	sbb    ah,BYTE PTR [ebx-0x291ec4d8]
  40ecf0:	mov    al,0x48
  40ecf2:	jl     0x40ed47
  40ecf4:	imul   ecx,DWORD PTR [eax],0xffffffc0
  40ecf7:	push   ss
  40ecf8:	mov    ds:0xed4fba43,al
  40ecfd:	pop    ecx
  40ecfe:	nop
  40ecff:	ja     0x40ed15
  40ed01:	stc    
  40ed02:	fist   WORD PTR [ebp+0x57]
  40ed05:	xchg   DWORD PTR [ecx],edx
  40ed07:	popa   
  40ed08:	jnp    0x40ecda
  40ed0a:	aad    0x91
  40ed0c:	sbb    BYTE PTR [ecx+0x4653a6c7],0x87
  40ed13:	jo     0x40ecb4
  40ed15:	(bad)  
  40ed16:	out    dx,eax
  40ed17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed18:	outs   dx,DWORD PTR ds:[esi]
  40ed19:	adc    eax,0x573eff0e
  40ed1e:	xchg   edx,eax
  40ed1f:	sbb    esi,eax
  40ed21:	pop    eax
  40ed22:	and    esi,DWORD PTR [ecx-0x203fdabd]
  40ed28:	inc    eax
  40ed29:	mov    bl,bh
  40ed2b:	test   al,0xc4
  40ed2d:	jnp    0x40eccb
  40ed2f:	outs   dx,DWORD PTR ds:[esi]
  40ed30:	cmp    edi,DWORD PTR [ecx]
  40ed32:	xor    bh,BYTE PTR [esi+eiz*8-0x4452be14]
  40ed39:	xor    eax,0x834a12ba
  40ed3e:	dec    esi
  40ed3f:	out    0xb4,al
  40ed41:	add    al,0x99
  40ed43:	mov    dl,0x85
  40ed45:	in     al,dx
  40ed46:	aas    
  40ed47:	mov    WORD PTR [edx+0x4e],fs
  40ed4a:	fxch   st(3)
  40ed4c:	mov    ds:0x6352b03,al
  40ed51:	je     0x3024e5a6
  40ed57:	mov    ebp,0xafeb60e0
  40ed5c:	mov    ch,0x7c
  40ed5e:	aaa    
  40ed5f:	sbb    eax,0x80d34bd0
  40ed64:	push   edi
  40ed65:	arpl   WORD PTR [ebp-0x7a],dx
  40ed68:	mov    bh,0x56
  40ed6a:	add    bh,bh
  40ed6c:	sub    BYTE PTR [edx+0x51],0x99
  40ed70:	cmc    
  40ed71:	lock in al,dx
  40ed73:	addr16 (bad) 
  40ed75:	repz push esp
  40ed77:	cmp    al,0x68
  40ed79:	not    BYTE PTR [ebx]
  40ed7b:	cdq    
  40ed7c:	jecxz  0x40ed8b
  40ed7e:	inc    esp
  40ed7f:	mov    ds:0x5eb1bd40,al
  40ed84:	xchg   edi,eax
  40ed85:	lds    esp,FWORD PTR [ebx+0x1a]
  40ed88:	push   edx
  40ed89:	mov    ?,WORD PTR [edx]
  40ed8b:	push   ecx
  40ed8c:	mov    dl,0x2a
  40ed8e:	js     0x40ed66
  40ed90:	and    edi,eax
  40ed92:	or     ah,BYTE PTR [edi-0x5281097]
  40ed98:	inc    edx
  40ed99:	sub    al,0x83
  40ed9b:	ja     0x40ee03
  40ed9d:	jae    0x40edb5
  40ed9f:	aaa    
  40eda0:	lds    ebx,FWORD PTR [ecx+esi*8-0x2]
  40eda4:	push   ebx
  40eda5:	push   es
  40eda6:	xlat   BYTE PTR ds:[ebx]
  40eda8:	pop    ecx
  40eda9:	jbe    0xd5456d10
  40edaf:	es daa 
  40edb1:	or     BYTE PTR [eax+0x3c514b97],bl
  40edb7:	sbb    esi,0x4036b9b7
  40edbd:	mov    dl,0xa9
  40edbf:	push   ebp
  40edc0:	out    dx,al
  40edc1:	sub    DWORD PTR [eax+ebp*2+0xf],esi
  40edc5:	mov    dh,BYTE PTR [ecx+0x42bbb8a]
  40edcb:	(bad)  
  40edcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edcd:	aad    0xb1
  40edcf:	lods   al,BYTE PTR ds:[esi]
  40edd0:	xor    BYTE PTR [edi-0x651d01e6],0xe4
  40edd7:	aad    0xff
  40edd9:	aad    0x91
  40eddb:	out    dx,al
  40eddc:	inc    esp
  40eddd:	sub    eax,0xa7b57a37
  40ede2:	jle    0x40ee5d
  40ede4:	shld   DWORD PTR [edx-0x8],esp,cl
  40ede8:	stos   DWORD PTR es:[edi],eax
  40ede9:	fnstcw WORD PTR [esi+0x3c8a57ab]
  40edef:	pop    ebx
  40edf0:	adc    al,0xb1
  40edf2:	mov    al,ah
  40edf4:	enter  0x5498,0xf8
  40edf8:	retf   0x2d80
  40edfb:	push   edx
  40edfc:	into   
  40edfd:	mov    eax,ds:0x649bc323
  40ee02:	retf   0xb38f
  40ee05:	push   ebp
  40ee06:	mov    ebx,0xe77639b8
  40ee0b:	jns    0x40ee09
  40ee0d:	hlt    
  40ee0e:	mov    dl,0x57
  40ee10:	in     al,0xf8
  40ee12:	push   ecx
  40ee13:	add    BYTE PTR [ecx-0xa],bh
  40ee16:	adc    edi,0xffffff96
  40ee19:	scas   eax,DWORD PTR es:[edi]
  40ee1a:	test   DWORD PTR [ebx+0x72],edi
  40ee1d:	popf   
  40ee1e:	inc    eax
  40ee1f:	inc    edx
  40ee20:	into   
  40ee21:	inc    esi
  40ee22:	mov    dh,0xc1
  40ee24:	call   0x3fdecb3e
  40ee29:	pop    ds
  40ee2a:	rcr    DWORD PTR [edx-0x2c4d17d9],1
  40ee30:	sbb    DWORD PTR [edi],ecx
  40ee32:	retf   
  40ee33:	inc    ebp
  40ee34:	mov    BYTE PTR [edi-0x2ce7aca2],0xc3
  40ee3b:	call   0x66f41bb
  40ee40:	dec    ecx
  40ee41:	xor    bl,bh
  40ee43:	mov    ?,WORD PTR [edx]
  40ee45:	(bad)  
  40ee46:	mov    ah,0x29
  40ee48:	mov    edi,0xa315ecd3
  40ee4d:	xchg   DWORD PTR [ebx-0x28],edx
  40ee50:	or     eax,0xce13154
  40ee55:	out    dx,al
  40ee56:	xor    DWORD PTR [esp+ecx*4],edx
  40ee59:	movups xmm6,xmm4
  40ee5c:	or     DWORD PTR [edi+ecx*8+0x74707b60],esp
  40ee63:	leave  
  40ee64:	adc    eax,0xdb8c5817
  40ee69:	adc    al,0xc3
  40ee6b:	xchg   esp,eax
  40ee6c:	(bad)  
  40ee6d:	cwde   
  40ee6e:	and    al,0xbd
  40ee70:	pop    esi
  40ee71:	jnp    0x40eea7
  40ee73:	shl    DWORD PTR [esi],1
  40ee75:	test   BYTE PTR [eax],0xc0
  40ee78:	fdivr  DWORD PTR [eax+0x4964bebf]
  40ee7e:	lds    esi,FWORD PTR [eax+0x49e1dbe4]
  40ee84:	call   0xfcd:0xf11dccf0
  40ee8b:	cmp    eax,0xf3f650cd
  40ee90:	sub    cl,BYTE PTR [edx+edi*4-0x65db12b2]
  40ee97:	mov    ds:0x6feea838,al
  40ee9c:	mov    ds:0x766bf01b,eax
  40eea1:	inc    esp
  40eea2:	jbe    0x40ee9a
  40eea4:	loopne 0x40ee7d
  40eea6:	in     eax,dx
  40eea7:	sahf   
  40eea8:	mov    cl,0xc4
  40eeaa:	leave  
  40eeab:	mov    eax,0x2b472f27
  40eeb0:	ficom  DWORD PTR [ebx-0x64]
  40eeb3:	xchg   edi,eax
  40eeb4:	(bad)  
  40eeb5:	jmp    0x329d28f0
  40eeba:	and    ah,dl
  40eebc:	adc    eax,0x2c21348f
  40eec1:	fnsave [ecx]
  40eec3:	cmp    ah,BYTE PTR [edx+0x25bfab87]
  40eec9:	outs   dx,DWORD PTR ds:[esi]
  40eeca:	rcr    DWORD PTR [ebx+0x6e6ed70f],1
  40eed0:	jge    0x40eeeb
  40eed2:	or     BYTE PTR ds:0x234035ed,ch
  40eed8:	ret    0x3b0
  40eedb:	sub    al,BYTE PTR [ebp+0xb936963]
  40eee1:	add    ah,BYTE PTR [edi]
  40eee3:	scas   eax,DWORD PTR es:[edi]
  40eee4:	mov    ds:0x80015013,al
  40eee9:	inc    edi
  40eeea:	pusha  
  40eeeb:	fwait
  40eeec:	ret    
  40eeed:	mov    esi,0xf8f1b0fb
  40eef2:	mov    DWORD PTR [esi+eax*1-0xb],0x2b0e9ce
  40eefa:	leave  
  40eefb:	neg    DWORD PTR [edx-0x774e90d9]
  40ef01:	push   ecx
  40ef02:	call   0xd6fe:0x28234f5e
  40ef09:	xchg   ebx,eax
  40ef0a:	out    0x80,eax
  40ef0c:	adc    bl,BYTE PTR [ebx+ebp*8-0x1b1dbfc1]
  40ef13:	iret   
  40ef14:	dec    ebp
  40ef15:	mov    DWORD PTR [ebp+0x10],eax
  40ef18:	inc    edi
  40ef19:	pop    edx
  40ef1a:	into   
  40ef1b:	adc    eax,DWORD PTR [eax+ecx*2+0x3db6fa17]
  40ef22:	and    ch,BYTE PTR [eax-0x1d]
  40ef25:	mov    BYTE PTR [ebx],ch
  40ef27:	mov    ebp,0xbfe0fab4
  40ef2c:	xchg   ebp,eax
  40ef2d:	cld    
  40ef2e:	xchg   BYTE PTR [ebp+0x3],dh
  40ef31:	xchg   esp,eax
  40ef32:	fisubr WORD PTR ds:0xc998ef3a
  40ef38:	fcom   st(3)
  40ef3a:	xor    al,0xe4
  40ef3c:	inc    esp
  40ef3d:	mov    bl,0xcc
  40ef3f:	out    0x4f,eax
  40ef41:	test   ecx,0x11b3c5c7
  40ef47:	hlt    
  40ef48:	cmp    ch,BYTE PTR [esi-0x334c2b0d]
  40ef4e:	hlt    
  40ef4f:	jmp    DWORD PTR [eax+esi*4]
  40ef52:	ss pop edx
  40ef54:	jg     0x40eed9
  40ef56:	out    dx,al
  40ef57:	lea    ecx,[ecx+0x75]
  40ef5a:	fidivr DWORD PTR [edi+0x154f57c]
  40ef60:	shr    bl,cl
  40ef62:	pop    ebp
  40ef63:	ror    DWORD PTR [esp+eiz*4-0x2962e9f3],0xe6
  40ef6b:	fst    DWORD PTR [ebp-0x43f90dfd]
  40ef71:	and    dl,BYTE PTR [ebp-0x1464fc59]
  40ef77:	loope  0x40ef4f
  40ef79:	bound  esp,QWORD PTR [esi-0x34546894]
  40ef7f:	call   0xc35aa497
  40ef84:	inc    ebx
  40ef85:	xchg   ecx,eax
  40ef86:	stos   DWORD PTR es:[edi],eax
  40ef87:	retf   0x1975
  40ef8a:	mov    bh,0x56
  40ef8c:	pop    esp
  40ef8d:	addr16 push 0x6c
  40ef90:	xor    BYTE PTR [edx],ah
  40ef92:	mov    edi,0x6a231c50
  40ef97:	pushf  
  40ef98:	js     0x40efac
  40ef9a:	daa    
  40ef9b:	mov    BYTE PTR [edx+0x57],0x72
  40ef9f:	ret    
  40efa0:	push   edi
  40efa1:	xor    BYTE PTR [ebx+edx*4],al
  40efa4:	fmul   QWORD PTR [bx+di-0x80]
  40efa8:	adc    BYTE PTR [esi-0x42],dh
  40efab:	inc    esi
  40efac:	pop    esi
  40efad:	mov    esp,cs
  40efaf:	jmp    0x1350:0xa8490b44
  40efb6:	mov    ah,0x7f
  40efb8:	repnz mov ebp,0xedf91cac
  40efbe:	fidiv  DWORD PTR [ebp+eiz*8-0x74]
  40efc2:	je     0x40ef7b
  40efc4:	shl    DWORD PTR [ebx-0x5e2e3e0e],0x19
  40efcb:	and    ch,BYTE PTR [ecx-0x4e]
  40efce:	push   cs
  40efcf:	(bad)  
  40efd0:	fsub   QWORD PTR [eax]
  40efd2:	imul   ebp,ebx,0x1590fcb0
  40efd8:	cmp    al,0x66
  40efda:	jae    0x40f012
  40efdc:	daa    
  40efdd:	adc    al,0x5f
  40efdf:	mov    esi,0x5997999f
  40efe4:	jge    0x40efb5
  40efe6:	cdq    
  40efe7:	cmp    ah,BYTE PTR [ecx-0x46acbbe9]
  40efed:	(bad)  
  40efee:	imul   ebp,DWORD PTR [edx],0x17
  40eff1:	mov    ds:0xac526ec3,eax
  40eff6:	sbb    al,0x25
  40eff8:	jle    0x40f02b
  40effa:	pop    eax
  40effb:	cs in  al,dx
  40effd:	lods   al,BYTE PTR ds:[esi]
  40effe:	in     al,dx
  40efff:	cmp    BYTE PTR [edi],ch
  40f001:	hlt    
  40f002:	out    dx,eax
  40f003:	es xchg ebx,eax
  40f005:	nop
  40f006:	fldcw  WORD PTR [edi]
  40f008:	xlat   BYTE PTR ds:[ebx]
  40f009:	mov    edx,0x3128e4c8
  40f00e:	dec    ecx
  40f00f:	test   DWORD PTR [ebx-0x72],eax
  40f012:	xchg   edx,eax
  40f013:	mov    dh,0x53
  40f015:	(bad)  
  40f016:	mov    WORD PTR [edi+0x20],fs
  40f019:	pop    esi
  40f01a:	fistp  DWORD PTR [ebp-0x6d200e18]
  40f020:	pop    ss
  40f021:	mov    esp,0xfdc6905b
  40f026:	add    bh,BYTE PTR [edx]
  40f028:	loopne 0x40efbd
  40f02a:	mov    esp,0x1b5953da
  40f02f:	loop   0x40f0a9
  40f031:	std    
  40f032:	mov    bl,0xc2
  40f034:	sub    DWORD PTR [eax],ebx
  40f036:	cmp    al,0xe8
  40f038:	mov    ds:0x33e9df62,al
  40f03d:	fild   QWORD PTR [esi+ecx*8]
  40f040:	push   0x1f6f9999
  40f045:	mov    ebx,0xed1628d2
  40f04a:	das    
  40f04b:	jno    0x40f002
  40f04d:	js     0x40f055
  40f04f:	cdq    
  40f050:	shl    BYTE PTR [eax-0x7275a4b4],1
  40f056:	adc    eax,0xe8aada0a
  40f05b:	ror    BYTE PTR [esi+esi*4+0x72e34d09],0x17
  40f063:	mov    edi,0xa17fd0e
  40f068:	fxch   st(6)
  40f06a:	sub    esi,esi
  40f06c:	xchg   ebx,eax
  40f06d:	push   ss
  40f06e:	fwait
  40f06f:	jo     0x40f001
  40f071:	pop    ecx
  40f072:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f073:	jns    0x40f089
  40f075:	cmc    
  40f076:	push   cs
  40f077:	push   ebp
  40f078:	mov    esi,0x6514042d
  40f07d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f07e:	dec    edi
  40f07f:	xchg   ecx,eax
  40f080:	cmp    BYTE PTR [edi+esi*8+0x41],ch
  40f084:	bound  edi,QWORD PTR ds:0xf52e5350
  40f08a:	add    ebp,ebx
  40f08c:	xor    DWORD PTR [edi],eax
  40f08e:	pop    esi
  40f08f:	pop    edi
  40f090:	jbe    0x40f0a9
  40f092:	or     eax,0x3e455fc0
  40f097:	cdq    
  40f098:	mov    ah,0x6b
  40f09a:	mov    edi,0x3e8f52d1
  40f09f:	cmc    
  40f0a0:	fwait
  40f0a1:	in     eax,dx
  40f0a2:	xchg   esi,eax
  40f0a3:	adc    eax,0x28292aba
  40f0a8:	pushf  
  40f0a9:	(bad)  
  40f0aa:	scas   al,BYTE PTR es:[edi]
  40f0ab:	data16 sub ah,BYTE PTR ds:0xaace14eb
  40f0b2:	lds    ebx,FWORD PTR [eax+0x5d15ed52]
  40f0b8:	retf   0xc0c6
  40f0bb:	outs   dx,DWORD PTR ds:[esi]
  40f0bc:	mov    ah,0xb8
  40f0be:	mov    al,0x61
  40f0c0:	in     al,0xdf
  40f0c2:	pop    ds
  40f0c3:	ins    DWORD PTR es:[edi],dx
  40f0c4:	call   0x94b9:0x74e4c5a6
  40f0cb:	mov    dh,0x3
  40f0cd:	sbb    eax,0x2e1961d8
  40f0d2:	dec    ecx
  40f0d3:	aad    0x37
  40f0d5:	ins    DWORD PTR es:[edi],dx
  40f0d6:	jnp    0x40f07f
  40f0d8:	mov    ds:0xaa5fcb1,eax
  40f0dd:	mov    bh,0xae
  40f0df:	mov    eax,0x43773614
  40f0e4:	mov    ds:0x77b1e8f4,eax
  40f0e9:	jl     0x40f074
  40f0eb:	mov    eax,ds:0x93375243
  40f0f0:	cwde   
  40f0f1:	adc    al,0x68
  40f0f3:	sub    bl,BYTE PTR [edx-0x722e6589]
  40f0f9:	and    al,BYTE PTR [ebx]
  40f0fb:	sub    edx,DWORD PTR [ebp-0x6062fae6]
  40f101:	enter  0x2fc,0x18
  40f105:	gs dec ebp
  40f107:	mov    al,ds:0x516ebaac
  40f10c:	(bad)  
  40f10e:	(bad)  
  40f10f:	sub    DWORD PTR [edi],esp
  40f111:	adc    BYTE PTR [eax],cl
  40f113:	jnp    0x40f0c4
  40f115:	fldenv [esp+eax*4+0x55]
  40f119:	into   
  40f11a:	add    eax,0x62d6293f
  40f11f:	mov    edi,0xb117c05d
  40f124:	jbe    0x40f160
  40f126:	pop    ebp
  40f127:	and    eax,0xf4bcde80
  40f12c:	out    dx,eax
  40f12d:	mov    bl,0xe5
  40f12f:	ja     0x40f147
  40f131:	xchg   ah,ah
  40f133:	mov    dl,0xeb
  40f135:	int3   
  40f136:	mov    al,0x1b
  40f138:	cmp    ah,bh
  40f13a:	nop
  40f13b:	ret    
  40f13c:	and    al,0x4
  40f13e:	fdivp  st(4),st
  40f140:	mov    esp,0xea246f89
  40f145:	aas    
  40f146:	loop   0x40f102
  40f148:	ss mov esp,0xa3870f56
  40f14e:	xor    BYTE PTR [ecx],dl
  40f150:	or     eax,0xffbb0920
  40f155:	push   ecx
  40f156:	mov    edi,0x29ec182d
  40f15b:	cmp    DWORD PTR [ebp-0x62],ebp
  40f15e:	scas   al,BYTE PTR es:[edi]
  40f15f:	out    0x4f,eax
  40f161:	cmp    dl,ah
  40f163:	pop    es
  40f164:	ret    
  40f165:	xchg   esp,eax
  40f166:	mov    al,ds:0xc99f878
  40f16b:	add    DWORD PTR [edi-0x71],edi
  40f16e:	add    BYTE PTR [ebx+ebx*8],ah
  40f171:	arpl   dx,bp
  40f173:	and    DWORD PTR [eax+0x8],ecx
  40f176:	pop    edi
  40f177:	adc    BYTE PTR [ecx],bh
  40f179:	mov    al,ds:0xa46fc5f6
  40f17e:	imul   esp,DWORD PTR [edi],0x5d982697
  40f184:	push   cs
  40f185:	in     eax,dx
  40f186:	dec    BYTE PTR es:[edx-0x57]
  40f18a:	in     al,dx
  40f18b:	xchg   ebx,eax
  40f18c:	clc    
  40f18d:	sub    ebx,ecx
  40f18f:	push   ebx
  40f190:	sub    ecx,DWORD PTR [eax-0x403f13ff]
  40f196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f197:	adc    al,BYTE PTR [edi]
  40f199:	lahf   
  40f19a:	jl     0x40f1db
  40f19c:	pop    ss
  40f19d:	clc    
  40f19e:	pop    edx
  40f19f:	ins    DWORD PTR es:[edi],dx
  40f1a0:	std    
  40f1a1:	or     DWORD PTR [eax+0x16b352fe],ebx
  40f1a7:	dec    esi
  40f1a8:	dec    ebp
  40f1a9:	jo     0x40f1db
  40f1ab:	aas    
  40f1ac:	mov    al,0x12
  40f1ae:	leave  
  40f1af:	adc    BYTE PTR [ecx+edx*2],0x8b
  40f1b3:	stos   BYTE PTR es:[edi],al
  40f1b4:	aam    0x1a
  40f1b6:	push   0x13
  40f1b8:	imul   ax,cx,0xadf6
  40f1bd:	mov    ah,BYTE PTR [edi-0x31d9e4cd]
  40f1c3:	aam    0x3
  40f1c5:	cmpps  xmm7,XMMWORD PTR [esi],0x7a
  40f1c9:	ja     0x40f183
  40f1cb:	mov    bl,0xfc
  40f1cd:	push   ecx
  40f1ce:	and    eax,0x8925bb8c
  40f1d3:	push   0x680d83e9
  40f1d8:	pop    ecx
  40f1d9:	push   esi
  40f1da:	fmul   DWORD PTR [eax-0x35]
  40f1dd:	ror    DWORD PTR [esi-0x3a],1
  40f1e0:	jae    0x40f22c
  40f1e2:	ja     0x40f1d7
  40f1e4:	jp     0x40f1c9
  40f1e6:	cmp    DWORD PTR [eax+eax*2],edx
  40f1e9:	(bad)  
  40f1ea:	into   
  40f1eb:	xchg   DWORD PTR [esp+edi*4-0x3],esp
  40f1ef:	lods   al,BYTE PTR ds:[si]
  40f1f1:	(bad)  
  40f1f3:	dec    edi
  40f1f4:	pop    ebp
  40f1f5:	and    ebp,ebp
  40f1f7:	sub    al,0x29
  40f1f9:	jbe    0x40f214
  40f1fb:	stos   BYTE PTR es:[edi],al
  40f1fc:	jecxz  0x40f1c0
  40f1fe:	sbb    eax,0x34bb58ad
  40f203:	das    
  40f204:	rcr    DWORD PTR [esi-0xb],0x22
  40f208:	xchg   ebp,eax
  40f209:	ja     0x40f200
  40f20b:	xchg   ebp,eax
  40f20c:	ret    0x9cb2
  40f20f:	aad    0xf6
  40f211:	xor    DWORD PTR [esi-0x6f3c5a02],esp
  40f217:	lea    ecx,[eax]
  40f219:	jl     0x40f25e
  40f21b:	call   FWORD PTR [ebp+ecx*8+0x11edcc7c]
  40f222:	sub    dh,BYTE PTR [esi-0x2416f069]
  40f228:	loope  0x40f28a
  40f22a:	stos   BYTE PTR es:[edi],al
  40f22b:	stos   DWORD PTR es:[edi],eax
  40f22c:	adc    dh,BYTE PTR [ebx]
  40f22e:	jg     0x40f1bf
  40f230:	neg    BYTE PTR [edx+eax*2+0x600c7d32]
  40f237:	pop    ss
  40f238:	mov    eax,0x8734bb5a
  40f23d:	sub    eax,0xe435561
  40f242:	(bad)  
  40f243:	std    
  40f244:	repz jae 0x40f205
  40f247:	in     al,0x51
  40f249:	jns    0x40f254
  40f24b:	test   BYTE PTR ds:0x6d09683,dh
  40f251:	fwait
  40f252:	cmc    
  40f253:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f254:	pop    ebx
  40f255:	mov    esp,0x50a5bb70
  40f25a:	aas    
  40f25b:	in     al,dx
  40f25c:	mov    ebx,0xa3da9356
  40f261:	jge    0x40f272
  40f263:	dec    ebp
  40f264:	loope  0x40f228
  40f266:	adc    BYTE PTR [ebx-0x2d],ch
  40f269:	cwde   
  40f26a:	cmp    dh,cl
  40f26c:	mov    esi,0x27b8a951
  40f271:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f272:	cmp    dl,BYTE PTR [ebp+esi*1-0x64]
  40f276:	int    0xd2
  40f278:	dec    ecx
  40f279:	rcl    BYTE PTR [ebx+0x4c6593da],cl
  40f27f:	xor    eax,0x7e73da25
  40f284:	inc    esi
  40f285:	popf   
  40f286:	dec    edx
  40f287:	adc    esi,DWORD PTR [ebp+0x377b022c]
  40f28d:	push   sp
  40f28f:	out    dx,eax
  40f290:	sub    eax,0x51014d3b
  40f295:	mov    al,0x88
  40f297:	ins    BYTE PTR es:[edi],dx
  40f298:	dec    eax
  40f299:	push   ebx
  40f29a:	xor    bl,BYTE PTR [esp+eax*8-0x51]
  40f29e:	or     DWORD PTR [edx],edx
  40f2a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2a1:	das    
  40f2a2:	xchg   ebx,eax
  40f2a3:	xchg   di,ax
  40f2a5:	lods   al,BYTE PTR ds:[esi]
  40f2a6:	inc    edi
  40f2a7:	xlat   BYTE PTR ds:[ebx]
  40f2a8:	xor    eax,0xcd247ee8
  40f2ad:	mov    ds:0x7a95c71b,al
  40f2b2:	push   eax
  40f2b3:	test   DWORD PTR [ecx-0x3ab1de89],0xc287f0dc
  40f2bd:	or     bh,bh
  40f2bf:	jno    0x40f2c5
  40f2c1:	jo     0x40f325
  40f2c3:	jg     0x40f260
  40f2c5:	push   0x5
  40f2c7:	mov    dh,0xe
  40f2c9:	or     al,0x11
  40f2cb:	inc    ecx
  40f2cc:	sub    BYTE PTR [ebp+0x6e21bb5],dh
  40f2d2:	sbb    dl,al
  40f2d4:	push   0x9b6afc13
  40f2d9:	retf   
  40f2da:	push   ebp
  40f2db:	in     al,dx
  40f2dc:	sti    
  40f2dd:	daa    
  40f2de:	jmp    0xe7fb28b
  40f2e3:	lahf   
  40f2e4:	add    esi,esi
  40f2e6:	into   
  40f2e7:	sub    ah,BYTE PTR ds:0x63cf43a5
  40f2ed:	in     al,0x2a
  40f2ef:	scas   al,BYTE PTR es:[edi]
  40f2f0:	inc    edi
  40f2f1:	sbb    dl,BYTE PTR [edi]
  40f2f3:	ret    
  40f2f4:	pop    edi
  40f2f5:	sti    
  40f2f6:	cdq    
  40f2f7:	jnp    0x40f305
  40f2f9:	mov    ds:0x6d3810e,al
  40f2fe:	daa    
  40f2ff:	fist   WORD PTR [ebx+ecx*2+0x4ec4b1]
  40f306:	inc    esp
  40f307:	push   edx
  40f308:	mov    edx,0x63d19f8f
  40f30d:	xor    al,0xa
  40f30f:	cmp    al,bh
  40f311:	call   0x99ffe643
  40f316:	ret    
  40f317:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f318:	adc    al,0x74
  40f31a:	sbb    ah,BYTE PTR [esi]
  40f31c:	std    
  40f31d:	enter  0xb21e,0x11
  40f321:	ja     0x40f2a6
  40f323:	jns    0x40f2cc
  40f325:	xchg   esp,eax
  40f326:	xchg   esp,eax
  40f327:	jmp    FWORD PTR [ecx]
  40f329:	daa    
  40f32a:	xor    eax,esp
  40f32c:	mov    bh,0xe4
  40f32e:	neg    esp
  40f330:	fucomip st,st(3)
  40f332:	int3   
  40f333:	mov    WORD PTR [ecx-0x4b],es
  40f336:	jb     0x40f2b8
  40f338:	push   cs
  40f339:	gs pop edx
  40f33b:	mov    dl,bh
  40f33d:	jno    0x40f3b1
  40f33f:	mov    dh,0xd6
  40f341:	add    eax,0xe480a0a5
  40f346:	cld    
  40f347:	sbb    cl,BYTE PTR [ebx+0xa]
  40f34a:	mov    esi,0x51a25e4e
  40f34f:	fiadd  WORD PTR [esi+0x61faf465]
  40f355:	sub    al,0xf4
  40f357:	fwait
  40f358:	test   eax,0xd16cfa8d
  40f35d:	in     eax,dx
  40f35e:	pop    ds
  40f35f:	mov    dh,0xf0
  40f361:	sbb    al,ch
  40f363:	aad    0x9
  40f365:	and    BYTE PTR [eax],ch
  40f367:	mov    ds:0x9e86041d,al
  40f36c:	and    esi,esi
  40f36e:	cmp    al,BYTE PTR [edi]
  40f370:	mov    dh,0xf4
  40f372:	dec    esp
  40f373:	or     eax,0x4b991083
  40f378:	data16 sahf 
  40f37a:	xor    esi,DWORD PTR [ebp+0x66b1f4f7]
  40f380:	adc    edi,DWORD PTR [edi+edx*2]
  40f383:	push   eax
  40f384:	sub    DWORD PTR [edi-0x2d],0x8c92e5a1
  40f38b:	push   ebp
  40f38c:	pop    ebx
  40f38d:	out    0x38,eax
  40f38f:	jge    0x40f3ea
  40f391:	push   ebx
  40f392:	adc    al,0xec
  40f394:	mov    esp,0x11c1b8ad
  40f399:	test   DWORD PTR gs:[ecx],edi
  40f39c:	repz adc cl,bl
  40f39f:	fnstenv [edi]
  40f3a1:	fldcw  WORD PTR [eax+ebx*2-0x6b2988a3]
  40f3a8:	mov    cl,0xa4
  40f3aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3ab:	adc    esi,DWORD PTR [eax-0x35]
  40f3ae:	popa   
  40f3af:	push   ecx
  40f3b0:	mul    dh
  40f3b2:	pop    edi
  40f3b3:	and    ecx,DWORD PTR [eax+0x497694e8]
  40f3b9:	mov    bl,0x8c
  40f3bb:	mov    al,0xf6
  40f3bd:	xor    BYTE PTR gs:[esi+0x78a008cc],0x75
  40f3c5:	int    0xc6
  40f3c7:	in     al,0xfc
  40f3c9:	mov    ch,0x81
  40f3cb:	push   edi
  40f3cc:	mov    al,ds:0x7fb5f453
  40f3d1:	dec    esp
  40f3d2:	ret    
  40f3d3:	push   cs
  40f3d4:	arpl   WORD PTR [ebp-0x5c],bx
  40f3d7:	jl     0x40f366
  40f3d9:	xchg   edx,eax
  40f3da:	push   0x63
  40f3dc:	scas   al,BYTE PTR es:[edi]
  40f3dd:	push   es
  40f3de:	and    eax,0x3da14ce3
  40f3e3:	mov    ebp,0xc9b214dd
  40f3e8:	loope  0x40f422
  40f3ea:	rcr    DWORD PTR [edx-0x66ca3075],1
  40f3f0:	mul    BYTE PTR [edx+0x24e344dd]
  40f3f6:	ss pop edi
  40f3f8:	lock jbe 0x40f3be
  40f3fb:	mov    ss,WORD PTR [esi+0x33]
  40f3fe:	push   ecx
  40f3ff:	(bad)  
  40f400:	out    0xe0,al
  40f402:	nop
  40f403:	pop    ds
  40f404:	push   0xfffffff0
  40f406:	rol    BYTE PTR [eax-0x342f3508],1
  40f40c:	loop   0x40f397
  40f40e:	iret   
  40f40f:	xchg   esi,eax
  40f410:	sub    al,0xde
  40f412:	cmc    
  40f413:	aam    0x27
  40f415:	sbb    edi,DWORD PTR [edx-0x123d5b73]
  40f41b:	xor    DWORD PTR [ecx-0x54],0x28
  40f41f:	pop    esp
  40f420:	dec    esp
  40f421:	and    DWORD PTR [esp+ebx*4+0x7e],ebp
  40f425:	rcl    BYTE PTR ds:0x4fe9e6d5,0xe4
  40f42c:	push   edi
  40f42d:	push   eax
  40f42e:	xor    edx,ebx
  40f430:	and    eax,0xc28ab431
  40f435:	into   
  40f436:	sahf   
  40f437:	jns    0x40f40c
  40f439:	dec    edi
  40f43a:	inc    ecx
  40f43b:	imul   edx,esp,0x1b087367
  40f441:	aad    0xaf
  40f443:	sti    
  40f444:	mov    esp,0xe3fd780c
  40f449:	popf   
  40f44a:	fldenv [esp+edx*4-0x1963c9db]
  40f451:	aaa    
  40f452:	jl     0x40f435
  40f454:	pusha  
  40f455:	xor    esi,DWORD PTR [ecx+ebp*4]
  40f458:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f459:	out    0x6c,al
  40f45b:	adc    al,0x42
  40f45d:	push   ecx
  40f45e:	aad    0x67
  40f460:	xor    DWORD PTR [ebx*1+0x6c3687a4],0x5
  40f468:	pop    ebx
  40f469:	rol    BYTE PTR [eax-0x9],0x3f
  40f46d:	or     eax,0x1f2eb9e0
  40f472:	data16 adc bl,BYTE PTR cs:[edi]
  40f476:	xchg   DWORD PTR [ebx-0x20],esp
  40f479:	jge    0x40f415
  40f47b:	shl    BYTE PTR [edx+esi*1],1
  40f47e:	retf   
  40f47f:	out    0x9,eax
  40f481:	sub    al,0x8f
  40f483:	push   eax
  40f484:	inc    ecx
  40f485:	xchg   esi,eax
  40f486:	cmp    ch,cl
  40f488:	lahf   
  40f489:	test   DWORD PTR [eax-0x2845459],0xcc29e144
  40f493:	clc    
  40f494:	xchg   ecx,eax
  40f495:	and    BYTE PTR [ebx],bh
  40f497:	neg    DWORD PTR [edx+0x75c9cd60]
  40f49d:	lahf   
  40f49e:	xor    dh,ch
  40f4a0:	into   
  40f4a1:	mov    ebp,0x5523dfcb
  40f4a6:	mov    al,ds:0xf36fb772
  40f4ab:	or     al,0x81
  40f4ad:	ret    0xaec7
  40f4b0:	popa   
  40f4b1:	xchg   ecx,eax
  40f4b2:	out    0x5d,eax
  40f4b4:	pop    eax
  40f4b5:	cmp    al,0x1
  40f4b7:	nop
  40f4b8:	xchg   esp,eax
  40f4b9:	push   0x5e871d92
  40f4be:	loop   0x40f462
  40f4c0:	scas   al,BYTE PTR es:[edi]
  40f4c1:	inc    ebp
  40f4c2:	cdq    
  40f4c3:	cmp    eax,0x9298ad9e
  40f4c8:	inc    ecx
  40f4c9:	xchg   edi,eax
  40f4ca:	xchg   eax,ecx
  40f4cc:	jecxz  0x40f497
  40f4ce:	imul   esi,ecx,0xb62f65ee
  40f4d4:	and    al,0xf9
  40f4d6:	push   ebp
  40f4d7:	sub    ebp,DWORD PTR [eax+eiz*1]
  40f4da:	in     eax,0x87
  40f4dc:	out    0x78,al
  40f4de:	and    BYTE PTR [esi+edx*1+0x36],al
  40f4e2:	aam    0xa5
  40f4e4:	mov    dh,0xc3
  40f4e6:	add    ecx,0xffffffe7
  40f4e9:	pop    esp
  40f4ea:	push   edx
  40f4eb:	xchg   esi,eax
  40f4ec:	mov    dh,0x5e
  40f4ee:	jp     0x40f513
  40f4f0:	or     esp,ecx
  40f4f2:	xchg   esp,eax
  40f4f3:	out    dx,eax
  40f4f4:	iret   
  40f4f5:	mov    cl,0xb8
  40f4f7:	cld    
  40f4f8:	fwait
  40f4f9:	(bad)  
  40f4fa:	and    BYTE PTR [edi],al
  40f4fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4fd:	ror    DWORD PTR [edx-0x5adcb084],0xf1
  40f504:	add    eax,ebx
  40f506:	aas    
  40f507:	mov    dl,0xb5
  40f509:	or     al,0x17
  40f50b:	popf   
  40f50c:	push   edi
  40f50d:	ret    
  40f50e:	push   ss
  40f50f:	call   0x69543bc7
  40f514:	pop    ss
  40f515:	sub    ah,ch
  40f517:	iret   
  40f518:	jmp    0xcd55:0x106b70c7
  40f51f:	xchg   DWORD PTR [ebp+0x36],ecx
  40f522:	fidiv  DWORD PTR [ebx-0x70838654]
  40f528:	adc    DWORD PTR [esi],esi
  40f52a:	in     al,dx
  40f52b:	retf   
  40f52c:	jno    0x40f58d
  40f52e:	cmc    
  40f52f:	(bad)  
  40f530:	mov    ds:0xe9b5ced6,eax
  40f535:	push   eax
  40f536:	inc    edi
  40f537:	scas   eax,DWORD PTR es:[edi]
  40f538:	lock icebp 
  40f53a:	push   ecx
  40f53b:	cmp    eax,0xa85314e9
  40f540:	dec    esp
  40f541:	mov    al,0xe
  40f543:	test   al,0x8c
  40f545:	xor    DWORD PTR [edx],esi
  40f547:	cmp    DWORD PTR [eax],ecx
  40f549:	xchg   edi,eax
  40f54a:	dec    ecx
  40f54b:	das    
  40f54c:	rcr    BYTE PTR [ecx],1
  40f54e:	(bad)  
  40f54f:	add    eax,0xcd034ae1
  40f554:	sar    DWORD PTR [ebx],cl
  40f556:	xchg   edi,eax
  40f557:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f558:	push   eax
  40f559:	inc    ebx
  40f55a:	outs   dx,BYTE PTR ds:[esi]
  40f55b:	fistp  DWORD PTR [edi+ebp*4-0x5e]
  40f55f:	sub    DWORD PTR [edx+edi*1],edi
  40f562:	or     DWORD PTR [ecx-0x4],ebx
  40f565:	cmp    eax,0x379740c
  40f56a:	dec    esp
  40f56b:	retf   
  40f56c:	loop   0x40f4fa
  40f56e:	aad    0x90
  40f570:	push   eax
  40f571:	scas   eax,DWORD PTR es:[edi]
  40f572:	bound  ecx,QWORD PTR [ebx]
  40f574:	test   eax,0x6c39811e
  40f579:	and    al,0x68
  40f57b:	arpl   si,sp
  40f57d:	mov    esi,0xb453b40f
  40f582:	jg     0x40f5bd
  40f584:	push   cs
  40f585:	xor    ah,BYTE PTR [eax-0x74]
  40f588:	xchg   esp,eax
  40f589:	jno    0x40f5fd
  40f58b:	pop    esi
  40f58c:	leave  
  40f58d:	sbb    DWORD PTR [eax],ebp
  40f58f:	cmc    
  40f590:	dec    ebx
  40f591:	fistp  QWORD PTR [edx+0x17f331c1]
  40f597:	xchg   ebp,eax
  40f598:	jl     0x40f5b3
  40f59a:	stos   DWORD PTR es:[edi],eax
  40f59b:	das    
  40f59c:	jmp    0x78889f63
  40f5a1:	fxch   st(6)
  40f5a3:	imul   ecx,DWORD PTR [esi],0x8a760832
  40f5a9:	(bad)
  40f5ac:	mov    dh,0xe7
  40f5ae:	sbb    BYTE PTR [edx+edi*8],cl
  40f5b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5b2:	or     eax,esp
  40f5b4:	shl    eax,1
  40f5b6:	nop
  40f5b7:	nop    DWORD PTR [ecx]
  40f5ba:	(bad)  
  40f5bb:	fadd   QWORD PTR [esi]
  40f5bd:	pop    es
  40f5be:	out    0xf6,eax
  40f5c0:	jl     0x40f592
  40f5c2:	mov    esi,0xc76366b
  40f5c7:	dec    ecx
  40f5c8:	jae    0x40f60d
  40f5ca:	jp     0x40f621
  40f5cc:	push   esi
  40f5cd:	ficom  WORD PTR [ebx+0x4e026863]
  40f5d3:	ficom  DWORD PTR [edi+0x6b9468ab]
  40f5d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5da:	add    DWORD PTR [ebx+ecx*4-0x9332e36],esi
  40f5e1:	hlt    
  40f5e2:	xor    bl,ch
  40f5e4:	pushf  
  40f5e5:	and    ebp,0xc0f35bd5
  40f5eb:	or     al,0x18
  40f5ed:	inc    edx
  40f5ee:	sub    al,0x13
  40f5f0:	jge    0x40f597
  40f5f2:	xchg   ebp,eax
  40f5f3:	jne    0x40f614
  40f5f5:	pop    ds
  40f5f6:	js     0x40f61e
  40f5f8:	jmp    0x40f665
  40f5fa:	jbe    0x40f5ea
  40f5fc:	(bad)  
  40f5fd:	lods   eax,DWORD PTR ds:[esi]
  40f5fe:	mov    dh,0x4
  40f600:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f601:	mov    esi,0xb2e8aab6
  40f606:	push   es
  40f607:	add    al,0xd4
  40f609:	inc    eax
  40f60a:	and    al,ah
  40f60c:	and    DWORD PTR [ebp-0x6a],ebx
  40f60f:	in     al,0x3b
  40f611:	inc    eax
  40f612:	pop    ebp
  40f613:	leave  
  40f614:	shr    BYTE PTR [ecx],cl
  40f616:	inc    ebp
  40f617:	shr    BYTE PTR ds:[ecx+0x44450684],1
  40f61e:	mov    gs,WORD PTR [esi]
  40f620:	fmul   st(5),st
  40f622:	lds    eax,FWORD PTR [edi-0x321cbe4c]
  40f628:	clc    
  40f629:	sbb    BYTE PTR [ebx+edi*2],0x7d
  40f62d:	push   edi
  40f62e:	sub    BYTE PTR [ecx-0x41],0xac
  40f632:	lea    eax,[eax-0x54cbdad1]
  40f638:	jnp    0x40f63a
  40f63a:	sbb    BYTE PTR [eax+esi*2+0x22],ch
  40f63e:	mov    dh,0x54
  40f640:	outs   dx,BYTE PTR ds:[esi]
  40f641:	xor    eax,0x923177b3
  40f646:	mov    cl,0x16
  40f648:	into   
  40f649:	sbb    bh,BYTE PTR [ecx-0x1af04d55]
  40f64f:	adc    esi,DWORD PTR [edx]
  40f651:	int3   
  40f652:	push   ds
  40f653:	fsubr  st(5),st
  40f655:	cmp    DWORD PTR [edx],esi
  40f657:	imul   edx,ecx,0xffffffc5
  40f65a:	dec    ecx
  40f65b:	mov    eax,ds:0x2c4a72bc
  40f660:	daa    
  40f661:	scas   al,BYTE PTR es:[edi]
  40f662:	clc    
  40f663:	jmp    0x929557ae
  40f668:	nop
  40f669:	repnz arpl WORD PTR ds:0x32a04369,dx
  40f670:	addr16 and edx,ecx
  40f673:	xchg   esp,eax
  40f675:	sahf   
  40f676:	adc    eax,0xa8e2714e
  40f67b:	daa    
  40f67c:	xor    BYTE PTR [ebp-0x17],dl
  40f67f:	rol    DWORD PTR [esi],cl
  40f681:	rol    DWORD PTR [ebp+0x4a],0x39
  40f685:	test   DWORD PTR [eax-0x1f],edi
  40f688:	or     edi,DWORD PTR [edi+ecx*1-0x7b]
  40f68c:	aad    0x43
  40f68e:	push   ss
  40f68f:	sub    DWORD PTR [edx-0x5cc2df9f],0xffffffde
  40f696:	pop    ds
  40f697:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f698:	pop    esp
  40f699:	mov    dl,0x20
  40f69b:	xchg   esi,eax
  40f69c:	sbb    DWORD PTR [ebx-0x1638fca8],0x24d3
  40f6a6:	mov    eax,DWORD PTR [ebp-0x38]
  40f6a9:	add    eax,DWORD PTR [ebp+0x8]
  40f6ac:	mov    DWORD PTR [ebp-0x18],eax
  40f6af:	mov    eax,DWORD PTR [ebp-0x1c]
  40f6b2:	test   eax,eax
  40f6b4:	je     0x411b02
  40f6ba:	mov    DWORD PTR [ebp-0x20],0x0
  40f6c1:	push   0x3
  40f6c3:	xor    edx,edx
  40f6c5:	pop    edx
  40f6c6:	add    edx,0x8
  40f6c9:	push   edx
  40f6ca:	pop    ecx
  40f6cb:	push   0x6
  40f6cd:	dec    ecx
  40f6ce:	pop    ebx
  40f6cf:	dec    ebx
  40f6d0:	xchg   ebx,ecx
  40f6d2:	sub    ebx,ecx
  40f6d4:	xchg   ebx,ecx
  40f6d6:	dec    ecx
  40f6d7:	mov    eax,DWORD PTR [ebp-0x1c]
  40f6da:	imul   eax,ecx
  40f6dd:	sub    esp,eax
  40f6df:	mov    DWORD PTR [ebp-0x20],esp
  40f6e2:	mov    eax,DWORD PTR [ebp-0x4]
  40f6e5:	xor    eax,esi
  40f6e7:	add    eax,edi
  40f6e9:	jmp    0x411adb
  40f6ee:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6f1:	mov    eax,DWORD PTR [ebp+0x8]
  40f6f4:	mov    edx,DWORD PTR [ebp+0x14]
  40f6f7:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40f6fb:	xor    ecx,esi
  40f6fd:	add    ecx,edi
  40f6ff:	xor    edx,edx
  40f701:	div    ecx
  40f703:	mov    ecx,DWORD PTR [ebp-0x4]
  40f706:	jmp    0x411aba
  40f70b:	outs   dx,BYTE PTR ds:[esi]
  40f70c:	lods   al,BYTE PTR ds:[esi]
  40f70d:	or     ch,al
  40f70f:	mov    cl,al
  40f711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f712:	or     ah,0x7d
  40f715:	push   0xc6181df0
  40f71a:	jge    0x40f71e
  40f71c:	scas   al,BYTE PTR es:[edi]
  40f71d:	add    DWORD PTR [ebx-0x7c7ca318],0xffffffea
  40f724:	and    eax,DWORD PTR [esi+0x7d901217]
  40f72a:	jne    0x40f712
  40f72c:	sti    
  40f72d:	scas   al,BYTE PTR es:[edi]
  40f72e:	jb     0x40f707
  40f730:	push   cs
  40f731:	push   ds
  40f732:	inc    eax
  40f733:	cs out dx,eax
  40f735:	mov    ds:0x210dd829,eax
  40f73a:	and    esi,DWORD PTR [edi]
  40f73c:	add    DWORD PTR [ebp-0x80],eax
  40f73f:	jge    0x40f6cd
  40f741:	cmp    BYTE PTR [edi],bh
  40f743:	les    ebp,FWORD PTR [ebx]
  40f745:	push   ds
  40f746:	pop    esp
  40f747:	retf   0x73de
  40f74a:	sti    
  40f74b:	mov    esp,0x3342ac87
  40f750:	mov    edi,0x73ddffaf
  40f755:	xchg   DWORD PTR [ebx],ecx
  40f757:	mov    eax,ds:0x2f3597ac
  40f75c:	ds std 
  40f75e:	fidivr WORD PTR [edx+0x78199cf5]
  40f764:	xchg   DWORD PTR [esi],edx
  40f766:	dec    esp
  40f767:	ins    DWORD PTR es:[edi],dx
  40f768:	xor    al,0x49
  40f76a:	dec    eax
  40f76b:	mov    bh,0x4
  40f76d:	int    0x76
  40f76f:	jo     0x40f722
  40f771:	mov    bh,BYTE PTR [eax-0x3a]
  40f774:	and    cl,bl
  40f776:	das    
  40f777:	adc    eax,0xe5c664c9
  40f77c:	sub    eax,0x577ee808
  40f781:	xor    dh,dl
  40f783:	outs   dx,DWORD PTR ds:[esi]
  40f784:	outs   dx,BYTE PTR ds:[esi]
  40f785:	cmp    al,0x1a
  40f787:	push   eax
  40f788:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f78a:	mov    ah,ah
  40f78c:	lods   al,BYTE PTR ds:[esi]
  40f78d:	adc    al,0xd6
  40f78f:	imul   eax,DWORD PTR [edx],0x35
  40f792:	jg     0x40f73a
  40f794:	xchg   dx,ax
  40f796:	mov    DWORD PTR [eax+0x44],ebx
  40f799:	cmp    eax,0xc2d79271
  40f79e:	mov    BYTE PTR [ebx+0x17e582f8],dl
  40f7a4:	dec    edi
  40f7a5:	cmp    bl,BYTE PTR [ebp+0x4ba6f091]
  40f7ab:	ins    BYTE PTR es:[edi],dx
  40f7ac:	xchg   esi,eax
  40f7ad:	pop    ds
  40f7ae:	js     0x40f811
  40f7b0:	cli    
  40f7b1:	mov    bl,0x48
  40f7b3:	ja     0x40f78a
  40f7b5:	xor    al,0xf2
  40f7b7:	loopne 0x40f7f9
  40f7b9:	mov    bh,BYTE PTR [edi+0x6c]
  40f7bc:	push   ebp
  40f7bd:	adc    BYTE PTR [ecx+0x63],al
  40f7c0:	fs jnp 0x40f7cf
  40f7c3:	sub    DWORD PTR [edi],0x26fadab3
  40f7c9:	push   esi
  40f7ca:	mov    eax,0x79de109b
  40f7cf:	int    0x7a
  40f7d1:	inc    DWORD PTR [ebp+0x73]
  40f7d4:	popf   
  40f7d5:	aaa    
  40f7d6:	cmp    dh,BYTE PTR [edi]
  40f7d8:	xor    BYTE PTR [ebp-0x25be74f8],0xef
  40f7df:	nop
  40f7e0:	and    ch,BYTE PTR [ebx+0x4e]
  40f7e3:	xlat   BYTE PTR ds:[ebx]
  40f7e4:	xor    eax,0x1d470de7
  40f7e9:	inc    esp
  40f7ea:	cmp    DWORD PTR [eax+eiz*1],edx
  40f7ed:	push   es
  40f7ee:	and    al,0xcb
  40f7f0:	test   al,0x79
  40f7f2:	jecxz  0x40f827
  40f7f4:	pop    esi
  40f7f5:	fimul  WORD PTR [ebx+0x3d]
  40f7f8:	int3   
  40f7f9:	xchg   ebx,eax
  40f7fa:	xor    dh,BYTE PTR [ecx+0x37]
  40f7fd:	sbb    dh,bl
  40f7ff:	test   edx,esp
  40f801:	mov    bh,0xdd
  40f803:	dec    eax
  40f804:	out    0x57,al
  40f806:	mov    dh,0xb6
  40f808:	cmp    BYTE PTR [ecx-0x2b],ch
  40f80b:	pusha  
  40f80c:	sbb    edi,ebx
  40f80e:	push   esp
  40f80f:	jnp    0x40f7de
  40f811:	addr16 repz inc esp
  40f814:	data16 and al,0xfc
  40f817:	and    ah,al
  40f819:	pop    ss
  40f81a:	sti    
  40f81b:	rcr    DWORD PTR [ebx+0x23e5d742],1
  40f821:	outs   dx,BYTE PTR ds:[esi]
  40f822:	aas    
  40f823:	mov    cl,0x58
  40f825:	jmp    0x2548f35b
  40f82a:	add    eax,0x421aa2f5
  40f82f:	sbb    al,0xa8
  40f831:	inc    eax
  40f832:	push   es
  40f833:	rcr    BYTE PTR [ebp+0x4da50b51],1
  40f839:	xchg   ecx,eax
  40f83a:	call   0xe87dffb6
  40f83f:	in     eax,dx
  40f840:	out    dx,al
  40f841:	xor    eax,0xdf7e9df8
  40f846:	lahf   
  40f847:	lods   al,BYTE PTR ds:[esi]
  40f848:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f849:	stos   DWORD PTR es:[edi],eax
  40f84a:	fmul   DWORD PTR [esi-0xe3a6da6]
  40f850:	cs cmc 
  40f852:	pop    ds
  40f853:	adc    al,cl
  40f855:	mov    eax,0xfbe9e79c
  40f85a:	jl     0x40f8ad
  40f85c:	sub    al,0xa
  40f85e:	je     0x40f846
  40f860:	cmc    
  40f861:	sahf   
  40f862:	pusha  
  40f863:	mov    ch,0x6b
  40f865:	sub    ah,dh
  40f867:	xchg   edx,eax
  40f868:	cli    
  40f869:	or     cl,ah
  40f86b:	dec    ebp
  40f86c:	fsub   st,st(7)
  40f86e:	jb     0x40f837
  40f870:	sbb    edx,DWORD PTR [esi+0x57a8fa7a]
  40f876:	jns    0x40f8c5
  40f878:	push   ds
  40f879:	sbb    eax,0x933c0d56
  40f87e:	push   ebx
  40f87f:	and    esp,ebp
  40f881:	inc    esi
  40f882:	and    ebp,DWORD PTR [ebp+0x60]
  40f885:	in     eax,0x7c
  40f887:	mov    edi,0x9b449b18
  40f88c:	repnz push ebx
  40f88e:	xor    ch,0x24
  40f891:	mov    esp,0x5badddd3
  40f896:	mov    esp,0xe1ccbcd1
  40f89b:	mov    ch,0x3d
  40f89d:	push   ds
  40f89e:	(bad)  
  40f89f:	fsubr  QWORD PTR [edx+0x16d0ba3d]
  40f8a5:	xchg   ecx,eax
  40f8a6:	popa   
  40f8a7:	mov    dl,0xf1
  40f8a9:	(bad)  
  40f8aa:	pop    edi
  40f8ab:	push   ebp
  40f8ac:	sti    
  40f8ad:	ret    0x15b4
  40f8b0:	adc    eax,0xac8fec89
  40f8b5:	jmp    0x2b6d:0xe4d2e6c9
  40f8bc:	add    esi,ebp
  40f8be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8bf:	mov    ch,0xf
  40f8c1:	and    esi,DWORD PTR [ebx+0xad04d46]
  40f8c7:	sub    DWORD PTR gs:[edi-0x6c],ecx
  40f8cb:	neg    esi
  40f8cd:	in     al,dx
  40f8ce:	dec    ebx
  40f8cf:	cmp    eax,0x1130499e
  40f8d4:	in     al,0xc0
  40f8d6:	push   ds
  40f8d7:	dec    eax
  40f8d8:	cmp    BYTE PTR [eax],dl
  40f8da:	jp     0x40f8b9
  40f8dc:	pusha  
  40f8dd:	(bad)  
  40f8df:	fld    DWORD PTR [edi+0x6d4317d6]
  40f8e5:	xchg   edi,eax
  40f8e6:	mov    eax,0xf1910b3a
  40f8eb:	cli    
  40f8ec:	retf   0x42af
  40f8ef:	jl     0x40f952
  40f8f1:	mov    al,0xd4
  40f8f3:	aad    0x86
  40f8f5:	mov    ebx,0xbef3bea1
  40f8fa:	(bad)  
  40f8fb:	push   esi
  40f8fc:	(bad)  
  40f8fd:	out    dx,al
  40f8fe:	push   cs
  40f8ff:	icebp  
  40f900:	add    edi,esp
  40f902:	mov    eax,ds:0xe40fcc58
  40f907:	pop    eax
  40f908:	pop    ebp
  40f909:	ins    BYTE PTR es:[edi],dx
  40f90a:	out    0x69,eax
  40f90c:	sbb    BYTE PTR [ebp+0x21],0xc4
  40f910:	enter  0xa9ec,0x99
  40f914:	jo     0x40f8a3
  40f916:	clc    
  40f917:	cmp    BYTE PTR [edx],dl
  40f919:	jmp    0x40f951
  40f91b:	cdq    
  40f91c:	xor    eax,0x92f3dd46
  40f921:	aam    0x5b
  40f923:	pop    eax
  40f924:	sbb    edx,DWORD PTR [ecx-0x45]
  40f927:	ficom  DWORD PTR [ebp+0x1e]
  40f92a:	aas    
  40f92b:	mov    WORD PTR [esi+0x64],?
  40f92e:	ds sub al,0xa0
  40f931:	push   esi
  40f932:	js     0x40f944
  40f934:	fstp   DWORD PTR [eax]
  40f936:	fbstp  TBYTE PTR [edx+0x5d]
  40f939:	repnz adc BYTE PTR [esi-0x547216f7],dl
  40f940:	popa   
  40f941:	adc    edx,0x2a6f4fb4
  40f947:	jnp    0x40f90a
  40f949:	dec    ebp
  40f94a:	out    0x95,eax
  40f94c:	(bad)  
  40f94d:	aam    0xae
  40f94f:	adc    eax,0x27f53109
  40f954:	cmp    BYTE PTR [edx+0x53],ch
  40f957:	outs   dx,BYTE PTR ds:[esi]
  40f958:	and    BYTE PTR [eax+0x1d32e2c],bl
  40f95e:	pop    edi
  40f95f:	ret    0x16d
  40f962:	int    0xba
  40f964:	(bad)  
  40f965:	adc    DWORD PTR [edx],ebx
  40f967:	movsx  eax,WORD PTR [esi]
  40f96a:	std    
  40f96b:	jg     0x40f97c
  40f96d:	inc    edx
  40f96e:	push   ss
  40f96f:	push   edx
  40f970:	fdivr  DWORD PTR [esi+ecx*8-0x61392908]
  40f977:	lea    esi,[edx+0x13fb3dce]
  40f97d:	jge    0x40f9db
  40f97f:	mov    ds:0x16d25a54,eax
  40f984:	push   ss
  40f985:	xor    DWORD PTR [ecx+0x2efa883b],eax
  40f98b:	ins    DWORD PTR es:[edi],dx
  40f98c:	mov    ch,0xab
  40f98e:	ret    
  40f98f:	lds    esp,FWORD PTR [ebp+ecx*1-0x67]
  40f993:	retf   0xaa1d
  40f996:	fistp  DWORD PTR [esi+ebp*8-0x3a]
  40f99a:	jo     0x40f9b1
  40f99c:	or     al,0x8d
  40f99e:	jle    0x40f9c0
  40f9a0:	mov    BYTE PTR [edi-0x5],ch
  40f9a3:	mov    dl,0x2a
  40f9a5:	cmp    al,0xb6
  40f9a7:	pushf  
  40f9a8:	repnz sbb BYTE PTR [edx],dl
  40f9ab:	jmp    0x56f78743
  40f9b0:	jne    0x40fa0a
  40f9b2:	ins    BYTE PTR es:[edi],dx
  40f9b3:	(bad)  
  40f9b4:	jp     0x40f958
  40f9b6:	dec    esi
  40f9b7:	mov    WORD PTR [ecx+0x580ffcc9],ss
  40f9bd:	jg     0x40fa04
  40f9bf:	push   es
  40f9c0:	(bad)  
  40f9c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9c2:	xor    DWORD PTR ds:0x7062d392,eax
  40f9c8:	in     eax,dx
  40f9c9:	test   al,0xcd
  40f9cb:	js     0x40f995
  40f9cd:	pop    ebp
  40f9ce:	fisubr WORD PTR [edx]
  40f9d0:	imul   esp,DWORD PTR [edi-0xf],0x957a07ee
  40f9d7:	or     al,0xd2
  40f9d9:	fidivr DWORD PTR [ebx+eiz*2]
  40f9dc:	mov    ds:0x1aa51474,al
  40f9e1:	in     eax,0x9b
  40f9e3:	inc    esp
  40f9e4:	lea    ebx,[eax+0x4cf2166d]
  40f9ea:	retf   
  40f9eb:	and    dh,BYTE PTR [ebp-0x485a8b39]
  40f9f1:	fld    QWORD PTR [edx-0x59c5d71d]
  40f9f7:	jge    0x40fa61
  40f9f9:	inc    ebp
  40f9fa:	mov    eax,ds:0xc18eadfe
  40f9ff:	jo     0xe0ec3368
  40fa05:	ret    
  40fa06:	jnp    0x40f98f
  40fa08:	cmp    edi,esi
  40fa0a:	sbb    bl,BYTE PTR [edi+eax*8]
  40fa0d:	nop
  40fa0e:	jo     0x40f9ee
  40fa10:	fdiv   DWORD PTR [esi+0x3e]
  40fa13:	stos   BYTE PTR es:[edi],al
  40fa14:	dec    ebp
  40fa15:	xor    al,0xed
  40fa17:	icebp  
  40fa18:	sub    eax,esi
  40fa1a:	out    0xaa,al
  40fa1c:	aad    0xc
  40fa1e:	xor    eax,0x4fe6c592
  40fa23:	adc    al,0xbe
  40fa25:	xchg   ebp,eax
  40fa26:	pop    ecx
  40fa27:	lods   al,BYTE PTR ds:[esi]
  40fa28:	sub    DWORD PTR [edi+0x43],ebx
  40fa2b:	lea    esp,[esp+eax*8]
  40fa2e:	(bad)  
  40fa2f:	aas    
  40fa30:	adc    BYTE PTR [ebp+0xb],cl
  40fa33:	xor    ah,dh
  40fa35:	mov    DWORD PTR ds:0x2551549d,ebp
  40fa3b:	ins    BYTE PTR es:[edi],dx
  40fa3c:	cmp    eax,DWORD PTR [edx+edi*4+0x4]
  40fa40:	sub    BYTE PTR [eax-0x53],dl
  40fa43:	pop    edx
  40fa44:	cld    
  40fa45:	dec    esi
  40fa46:	into   
  40fa47:	adc    DWORD PTR [ecx],esi
  40fa49:	inc    esi
  40fa4a:	pop    ebx
  40fa4b:	ins    BYTE PTR es:[edi],dx
  40fa4c:	cmp    dl,BYTE PTR [edx*4+0x41f8c098]
  40fa53:	or     DWORD PTR [edi+ebx*2],edi
  40fa56:	loop   0x40fa87
  40fa58:	mov    edi,esp
  40fa5a:	mov    ds:0xd5b2628e,eax
  40fa5f:	push   0xa0138ddd
  40fa64:	jle    0x40fa85
  40fa66:	push   eax
  40fa67:	jnp    0x40fa2b
  40fa69:	inc    ebx
  40fa6a:	cdq    
  40fa6b:	push   ebx
  40fa6c:	(bad)  
  40fa6d:	cld    
  40fa6e:	jno    0x40fac9
  40fa70:	xchg   esi,eax
  40fa71:	push   0xffffff98
  40fa73:	cmp    bl,al
  40fa75:	aaa    
  40fa76:	xor    eax,0xaabc4628
  40fa7b:	inc    esi
  40fa7c:	xchg   ebp,eax
  40fa7d:	mov    ds:0x1ffbda1d,eax
  40fa82:	scas   eax,DWORD PTR es:[edi]
  40fa83:	add    DWORD PTR [ebp+edi*4-0x7ff1da98],ebx
  40fa8a:	cmp    esp,DWORD PTR [eax+0x6a241439]
  40fa90:	dec    esi
  40fa91:	shl    DWORD PTR [eax-0x5f],cl
  40fa94:	lds    esi,FWORD PTR [eax-0x58]
  40fa97:	mov    eax,ds:0xf3439d25
  40fa9c:	out    0x85,al
  40fa9e:	and    DWORD PTR [eax],esi
  40faa0:	jge    0x40fad3
  40faa2:	popa   
  40faa3:	sbb    eax,0xa82bf63f
  40faa8:	xor    DWORD PTR [edx+ecx*8-0x65ecbcf8],esi
  40faaf:	jo     0x40faeb
  40fab1:	(bad)  
  40fab2:	cmp    bl,BYTE PTR [ecx+0x12]
  40fab5:	loopne 0x40fae5
  40fab7:	xchg   edx,eax
  40fab8:	or     cl,BYTE PTR [ebx-0x3e]
  40fabb:	fld    DWORD PTR [ecx]
  40fabd:	loopne 0x40fa8b
  40fabf:	cs call 0xced0:0x7c987a19
  40fac7:	jae    0x40fac5
  40fac9:	jge    0x40fa6e
  40facb:	inc    esp
  40facc:	mov    eax,ds:0x3288fe9e
  40fad1:	fsubr  QWORD PTR [ecx+0x513be017]
  40fad7:	adc    eax,0x237ef1d0
  40fadc:	push   0xffffff9f
  40fade:	xlat   BYTE PTR ds:[ebx]
  40fadf:	dec    eax
  40fae0:	cmp    esp,DWORD PTR [ebp-0x5b]
  40fae3:	mov    edi,edi
  40fae5:	ror    BYTE PTR [ebx+0xc],cl
  40fae8:	mov    ds:0xef4b84c1,al
  40faed:	fdivp  st(6),st
  40faef:	inc    edi
  40faf0:	inc    esi
  40faf1:	lods   eax,DWORD PTR ds:[esi]
  40faf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40faf3:	retf   0x2735
  40faf6:	pop    ebx
  40faf7:	xor    BYTE PTR [edi+0xc],0x57
  40fafb:	pop    ss
  40fafc:	and    eax,DWORD PTR [eax]
  40fafe:	std    
  40faff:	jg     0x40fb4e
  40fb01:	mov    ch,0x63
  40fb03:	xchg   ebx,eax
  40fb04:	jb     0x40fb00
  40fb06:	add    edi,DWORD PTR [edx-0x33]
  40fb09:	in     al,0xf4
  40fb0b:	ror    DWORD PTR [ebx+eiz*2+0x4e],1
  40fb0f:	int    0x4e
  40fb11:	test   eax,0x4e897fd3
  40fb16:	jns    0x40fb41
  40fb18:	cmp    bh,ah
  40fb1a:	cmp    cl,BYTE PTR [edi+0x2c]
  40fb1d:	mov    ss,edi
  40fb1f:	fdivr  DWORD PTR [ebx+0x4d433c71]
  40fb25:	rcl    BYTE PTR [ecx-0x70],1
  40fb28:	stc    
  40fb29:	fucom  st(4)
  40fb2b:	xor    dh,BYTE PTR [edi-0x11]
  40fb2e:	out    0xb3,eax
  40fb30:	mov    DWORD PTR [ebx],edi
  40fb32:	sbb    bl,dl
  40fb34:	icebp  
  40fb35:	clc    
  40fb36:	inc    esi
  40fb37:	sub    bl,cl
  40fb39:	idiv   BYTE PTR [esi-0x4]
  40fb3c:	and    BYTE PTR [esi+esi*1-0x5ef811d5],ah
  40fb43:	dec    ebp
  40fb44:	fdivr  DWORD PTR [edi]
  40fb46:	jecxz  0x40fb3a
  40fb48:	lods   al,BYTE PTR ds:[esi]
  40fb49:	lock jecxz 0x40fb67
  40fb4c:	xchg   ebx,eax
  40fb4d:	jb     0x40fb39
  40fb4f:	adc    al,0x56
  40fb51:	jno    0x40fbb5
  40fb53:	mov    ds,WORD PTR [edx+0x21]
  40fb56:	in     al,0xd6
  40fb58:	cmp    ch,BYTE PTR [edi+0x2c]
  40fb5b:	cmp    esp,DWORD PTR [edx+0x26]
  40fb5e:	jne    0x40fb45
  40fb60:	pop    eax
  40fb61:	das    
  40fb62:	ficom  DWORD PTR [edi+0x694bf40e]
  40fb68:	cdq    
  40fb69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb6a:	int3   
  40fb6b:	pop    esp
  40fb6c:	imul   BYTE PTR [esi+0x4b]
  40fb6f:	icebp  
  40fb70:	jmp    0x40fb25
  40fb72:	daa    
  40fb73:	push   esi
  40fb74:	push   ds
  40fb75:	xchg   BYTE PTR [esi-0x5c8f5d52],bl
  40fb7b:	pop    ebx
  40fb7c:	out    0xff,al
  40fb7e:	jb     0x40fb7b
  40fb80:	mov    bp,0x1a47
  40fb84:	ins    DWORD PTR es:[edi],dx
  40fb85:	inc    eax
  40fb86:	push   es
  40fb87:	push   edi
  40fb88:	cmp    ah,BYTE PTR [ebp-0x1d]
  40fb8b:	cmp    al,0xd1
  40fb8d:	mov    ebp,0x1d464ebe
  40fb92:	mov    ds:0xe82686ef,eax
  40fb97:	enter  0x5e85,0xa4
  40fb9b:	adc    eax,0x52a5061e
  40fba0:	jo     0x40fbee
  40fba2:	dec    ebp
  40fba3:	das    
  40fba4:	leave  
  40fba5:	mov    al,BYTE PTR [eax]
  40fba7:	adc    eax,0x6b3f633c
  40fbac:	cmp    al,0xcc
  40fbae:	sub    bl,BYTE PTR [edx]
  40fbb0:	jg     0x40fbff
  40fbb2:	push   es
  40fbb3:	adc    eax,0xfbe830d
  40fbb8:	mov    bh,0x72
  40fbba:	or     dl,dl
  40fbbc:	sbb    al,0x5e
  40fbbe:	lock jmp 0x380f:0xe547314e
  40fbc6:	adc    BYTE PTR [ebp+0x1206bc6b],ah
  40fbcc:	stos   DWORD PTR es:[edi],eax
  40fbcd:	fldenv [esi]
  40fbcf:	daa    
  40fbd0:	jge    0x40fc3b
  40fbd2:	ror    BYTE PTR [ebp+0x45d93a10],cl
  40fbd8:	cmp    al,BYTE PTR [edi-0x12]
  40fbdb:	ss test eax,0xc8e2bfe2
  40fbe1:	out    0xf3,eax
  40fbe3:	sbb    ebx,DWORD PTR [ecx]
  40fbe5:	(bad)  
  40fbe6:	fiadd  WORD PTR ds:0xa7b9fe70
  40fbec:	bound  ebp,QWORD PTR [ebx-0x8]
  40fbef:	cmp    esi,DWORD PTR [eax+0x3b]
  40fbf2:	jp     0x40fc0e
  40fbf4:	out    0x3b,al
  40fbf6:	jmp    0xed1d:0x91b1cd73
  40fbfd:	pop    ecx
  40fbfe:	cli    
  40fbff:	cmp    eax,DWORD PTR [ecx]
  40fc01:	mov    ch,0x63
  40fc03:	and    eax,0x9d5f672a
  40fc08:	sbb    esp,DWORD PTR [esi]
  40fc0a:	retf   0x3d90
  40fc0d:	faddp  st(7),st
  40fc0f:	(bad)  
  40fc10:	sub    al,0x1a
  40fc12:	pushf  
  40fc13:	mov    ebx,0xdf6f1bfe
  40fc18:	bound  esp,QWORD PTR [ebp-0x298651c6]
  40fc1e:	cs pop esp
  40fc20:	add    DWORD PTR [edx-0x57],edi
  40fc23:	(bad)  [eax-0xeb8811d]
  40fc29:	lea    edx,[edx]
  40fc2b:	test   eax,esi
  40fc2d:	sbb    al,0x6f
  40fc2f:	leave  
  40fc30:	test   BYTE PTR [ebp+0x77eab81c],dh
  40fc36:	inc    ebp
  40fc37:	mov    ds:0x125570cf,al
  40fc3c:	xor    BYTE PTR [ecx+eiz*1-0x33],dl
  40fc40:	clc    
  40fc41:	mov    dh,0xda
  40fc43:	arpl   WORD PTR [edi-0x133f17cd],di
  40fc49:	inc    ebx
  40fc4a:	(bad)  
  40fc4b:	out    dx,al
  40fc4c:	retf   0xd411
  40fc4f:	mov    al,0xab
  40fc51:	int    0xd5
  40fc53:	js     0x40fc5f
  40fc55:	jg     0x40fca1
  40fc57:	fdiv   DWORD PTR [edi+0x79022476]
  40fc5d:	xor    ebp,DWORD PTR [ebx+0x5f]
  40fc60:	mov    ds:0x1406397f,eax
  40fc65:	out    dx,al
  40fc66:	pop    edi
  40fc67:	test   al,0xef
  40fc69:	mov    dh,BYTE PTR [esi+0x6e69e4fa]
  40fc6f:	pop    esi
  40fc70:	test   DWORD PTR [edx+esi*4],esi
  40fc73:	pop    ds
  40fc74:	jne    0x40fcf5
  40fc76:	dec    ecx
  40fc77:	mov    ch,0x2f
  40fc79:	pop    esp
  40fc7a:	pop    eax
  40fc7c:	and    DWORD PTR [ebp+0x664aa9f1],edx
  40fc82:	cdq    
  40fc83:	sub    DWORD PTR [esi+eiz*1-0x497aa566],esi
  40fc8a:	out    dx,eax
  40fc8b:	std    
  40fc8c:	mov    ebx,0xb5c2cc5b
  40fc91:	jg     0x40fcb5
  40fc93:	fidivr DWORD PTR [esi-0x644ba90f]
  40fc99:	sar    BYTE PTR [ecx+0x1e],cl
  40fc9c:	stos   DWORD PTR es:[edi],eax
  40fc9d:	adc    dh,BYTE PTR [edx-0x65a05b20]
  40fca3:	enter  0xc3cd,0xe2
  40fca7:	cmp    al,0x49
  40fca9:	out    0x7d,eax
  40fcab:	mov    ah,0xfe
  40fcad:	sbb    ebx,0xfe546a4
  40fcb3:	inc    ebx
  40fcb4:	jae    0x40fd08
  40fcb6:	xchg   ebx,eax
  40fcb7:	in     al,0xa0
  40fcb9:	cmp    eax,0x2fbd1d2c
  40fcbe:	lock xor ebp,DWORD PTR ds:0x899ced77
  40fcc5:	je     0x40fc8a
  40fcc7:	inc    ecx
  40fcc8:	(bad)  
  40fcc9:	mov    ebx,0xf43f0bd8
  40fcce:	adc    al,BYTE PTR ss:[edi]
  40fcd1:	std    
  40fcd2:	sbb    al,0xf2
  40fcd4:	fimul  WORD PTR [edi]
  40fcd6:	aam    0x95
  40fcd8:	mov    bl,0x3e
  40fcda:	loopne 0x40fd26
  40fcdc:	push   cs
  40fcdd:	xchg   esi,eax
  40fcde:	ret    0xcba8
  40fce1:	inc    ebx
  40fce2:	fcom   DWORD PTR [edi+0x1f85d7ff]
  40fce8:	es out 0xb2,eax
  40fceb:	call   0xcb1d:0xf80b8a50
  40fcf2:	xchg   DWORD PTR [eax-0x3e],edx
  40fcf5:	xchg   ecx,eax
  40fcf6:	dec    edx
  40fcf7:	add    edx,DWORD PTR [esi+0x5b]
  40fcfa:	sbb    eax,0x130cde79
  40fcff:	es shl ch,cl
  40fd02:	pop    eax
  40fd03:	mov    al,ds:0xe63cdbe6
  40fd08:	and    bl,0xe6
  40fd0b:	leave  
  40fd0c:	add    eax,0xa0a1389
  40fd11:	inc    ebp
  40fd12:	xor    dl,BYTE PTR [edi+0x41825615]
  40fd18:	pop    ebp
  40fd19:	sbb    edx,DWORD PTR [edi]
  40fd1b:	es jo  0x40fd65
  40fd1e:	rol    DWORD PTR [esi],1
  40fd20:	mov    bl,0xa1
  40fd22:	push   0x4e
  40fd24:	lods   al,BYTE PTR ds:[esi]
  40fd25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd26:	sub    eax,0x4e949d1e
  40fd2b:	enter  0x4bc7,0x76
  40fd2f:	clc    
  40fd30:	add    BYTE PTR gs:[edx],bh
  40fd33:	es int 0xa7
  40fd36:	or     BYTE PTR [esi+0x74],al
  40fd39:	inc    ebp
  40fd3a:	outs   dx,BYTE PTR ds:[esi]
  40fd3b:	xor    edx,ecx
  40fd3d:	dec    edi
  40fd3e:	loopne 0x40fd16
  40fd40:	outs   dx,BYTE PTR ds:[esi]
  40fd41:	fisub  DWORD PTR [ebx]
  40fd43:	stos   DWORD PTR es:[edi],eax
  40fd44:	jp     0x40fd9c
  40fd46:	and    al,0x23
  40fd48:	fxch   st(7)
  40fd4a:	sbb    DWORD PTR [eax],ebx
  40fd4c:	dec    ecx
  40fd4d:	adc    bl,BYTE PTR [esi+0x43d363cc]
  40fd53:	stc    
  40fd54:	std    
  40fd55:	dec    esi
  40fd56:	stc    
  40fd57:	xor    ebp,DWORD PTR [esi-0x56]
  40fd5a:	dec    edx
  40fd5b:	pop    edx
  40fd5c:	cli    
  40fd5d:	arpl   sp,cx
  40fd5f:	or     eax,0x6c0dcb2a
  40fd64:	mov    dh,0xb1
  40fd66:	lahf   
  40fd67:	push   ss
  40fd68:	pushf  
  40fd69:	es icebp 
  40fd6b:	mov    ds:0x7afe7646,al
  40fd70:	mov    bl,0x9c
  40fd72:	scas   al,BYTE PTR es:[edi]
  40fd73:	pop    ecx
  40fd74:	cdq    
  40fd75:	mov    DWORD PTR [ecx+0x82ac819],0xe38a046c
  40fd7f:	arpl   dx,si
  40fd81:	mov    ah,0x37
  40fd83:	ds sbb cl,ah
  40fd86:	cwde   
  40fd87:	and    DWORD PTR [ebx+0x265d7247],0x1a
  40fd8e:	pop    esp
  40fd8f:	jp     0x40fd26
  40fd91:	push   0x69
  40fd93:	sbb    DWORD PTR [esi-0x3],ebx
  40fd96:	sub    al,BYTE PTR [eax+0x40adaf90]
  40fd9c:	lsl    edi,WORD PTR [esp+eax*2+0x20221863]
  40fda4:	jg     0x40fd58
  40fda6:	dec    edi
  40fda7:	enter  0xb7db,0x20
  40fdab:	push   0xff03d979
  40fdb0:	adc    ah,BYTE PTR [ebx+0x17]
  40fdb3:	das    
  40fdb4:	lock mov bh,0xc7
  40fdb7:	nop
  40fdb8:	cs mov ebp,0x32e5ad2e
  40fdbe:	std    
  40fdbf:	jmp    0x26c2:0x588d3ad9
  40fdc6:	sbb    bl,cl
  40fdc8:	xchg   ebx,eax
  40fdc9:	out    0x53,eax
  40fdcb:	inc    edx
  40fdcc:	inc    ecx
  40fdcd:	or     cl,0xb0
  40fdd0:	dec    esp
  40fdd1:	ds retf 
  40fdd3:	out    0xdd,eax
  40fdd5:	in     al,dx
  40fdd6:	mov    eax,0x8f892973
  40fddb:	call   0x7694ce4a
  40fde0:	sbb    BYTE PTR [ecx+ebx*1],al
  40fde3:	ja     0x40fe48
  40fde5:	das    
  40fde6:	adc    esp,esi
  40fde8:	scas   al,BYTE PTR es:[edi]
  40fde9:	inc    ecx
  40fdea:	mov    ch,0xf2
  40fdec:	xchg   edx,eax
  40fded:	retf   0xf276
  40fdf0:	push   ss
  40fdf1:	cmc    
  40fdf2:	mov    edi,0xc61e243c
  40fdf7:	push   0x1c
  40fdf9:	lods   al,BYTE PTR ds:[esi]
  40fdfa:	add    al,0xd5
  40fdfc:	mov    esi,0xe372d9c7
  40fe01:	fs dec esp
  40fe03:	add    BYTE PTR [ebx-0x467561ca],ah
  40fe09:	jmp    DWORD PTR [edx]
  40fe0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe0c:	xlat   BYTE PTR ds:[ebx]
  40fe0d:	jo     0x40fe3d
  40fe0f:	mov    ds:0x1acaf0a,eax
  40fe14:	xchg   DWORD PTR [ecx-0x3c5b8c35],eax
  40fe1a:	mov    dh,ch
  40fe1c:	mov    edi,0xea9e48ec
  40fe21:	cmc    
  40fe22:	pop    esp
  40fe23:	adc    BYTE PTR [edx+0x6fed439a],ch
  40fe29:	mov    ch,0xb5
  40fe2b:	sbb    ch,BYTE PTR [ecx]
  40fe2d:	or     al,0x60
  40fe2f:	arpl   ax,di
  40fe31:	and    DWORD PTR [ecx-0x55b8bc4e],esi
  40fe37:	jae    0x40fdd4
  40fe39:	(bad)  
  40fe3a:	push   esi
  40fe3b:	int    0x6
  40fe3d:	sbb    BYTE PTR [edi-0x5a6261d],dh
  40fe43:	mov    ds:0x4cf78f92,al
  40fe48:	arpl   WORD PTR [ebx+0x25],di
  40fe4b:	test   DWORD PTR [ebx-0x1e],ecx
  40fe4e:	jb     0x40fe28
  40fe50:	jno    0x40feb7
  40fe52:	(bad)  
  40fe54:	in     eax,0x8f
  40fe56:	fimul  DWORD PTR [eax-0x76]
  40fe59:	js     0x40fde1
  40fe5b:	out    dx,al
  40fe5c:	jecxz  0x40fe9d
  40fe5e:	not    ch
  40fe60:	repnz or BYTE PTR gs:[esi+ebp*8+0x7f],al
  40fe66:	xchg   ecx,eax
  40fe67:	idiv   DWORD PTR [ebx+0x3963de26]
  40fe6d:	mov    ecx,0x602b3944
  40fe72:	sub    cl,BYTE PTR [edx+0x492d6dd2]
  40fe78:	cmp    dl,bh
  40fe7a:	call   0xa1fdc5bb
  40fe7f:	jno    0x40fe35
  40fe81:	push   esp
  40fe82:	into   
  40fe83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe84:	adc    edx,DWORD PTR [eax]
  40fe86:	and    DWORD PTR [ebx+eiz*4+0x6344c0f2],edi
  40fe8d:	adc    BYTE PTR [edi+0x15e42690],0x30
  40fe94:	dec    esi
  40fe95:	adc    BYTE PTR [ebx-0x70],dl
  40fe98:	out    0x9b,eax
  40fe9a:	(bad)  
  40fe9c:	sbb    bh,al
  40fe9e:	(bad)
  40fea1:	cmc    
  40fea2:	mov    WORD PTR [esi-0x59],es
  40fea5:	vphsubwd ymm9,XMMWORD PTR [ebx+0x3c0bef]
  40feae:	popw   ds
  40feb0:	daa    
  40feb1:	push   ebp
  40feb2:	(bad)  
  40feb3:	repz sub edi,ebx
  40feb6:	lods   eax,DWORD PTR ds:[esi]
  40feb7:	xchg   DWORD PTR [esp+ebx*8],edi
  40feba:	push   cs
  40febb:	jb     0x40ff32
  40febd:	out    dx,al
  40febe:	adc    esi,esi
  40fec0:	sbb    eax,0x88d66299
  40fec5:	test   eax,0x3ae3a2d0
  40feca:	mov    al,ds:0x208455d3
  40fecf:	rcr    DWORD PTR [eax-0x58],1
  40fed2:	jg     0x40ff44
  40fed4:	sub    ebp,DWORD PTR [ebx]
  40fed6:	(bad)  
  40fed8:	add    ecx,eax
  40feda:	mov    eax,0xbe41e8a0
  40fedf:	mov    esp,0x9a8f1639
  40fee4:	mov    ebx,0x3f377eb
  40fee9:	xchg   ebp,eax
  40feea:	(bad)  
  40feeb:	je     0x40ff1b
  40feed:	out    dx,eax
  40feee:	icebp  
  40feef:	lahf   
  40fef0:	fst    DWORD PTR [ecx+ebx*1-0x3c87624c]
  40fef7:	addr16 inc eax
  40fef9:	dec    ebp
  40fefa:	cmp    DWORD PTR [ecx],ebx
  40fefc:	and    bl,BYTE PTR [ebx+0x3405d402]
  40ff02:	mov    ds:0x76d1c4ad,eax
  40ff07:	push   edi
  40ff08:	mov    cl,0x61
  40ff0a:	les    ebp,FWORD PTR [esi]
  40ff0c:	dec    edx
  40ff0d:	cmp    eax,0xf51e3028
  40ff12:	stos   DWORD PTR es:[edi],eax
  40ff13:	push   0xffffffa4
  40ff15:	mov    bh,ch
  40ff17:	jno    0x40ff44
  40ff19:	in     al,dx
  40ff1a:	aaa    
  40ff1b:	fild   DWORD PTR [edx-0x5f]
  40ff1e:	ja     0x40ff03
  40ff20:	repz fnsave [ecx-0x30245c58]
  40ff27:	shl    BYTE PTR [esi+edi*2+0x68324ed5],1
  40ff2e:	mov    ebx,0xf7919b48
  40ff33:	adc    eax,0xafbec03d
  40ff38:	push   ds
  40ff39:	xchg   BYTE PTR [ecx-0xc],dh
  40ff3c:	jmp    0x40ff43
  40ff3e:	out    dx,eax
  40ff3f:	ret    0xa1bb
  40ff42:	repz clc 
  40ff44:	cmp    cl,al
  40ff46:	clc    
  40ff47:	and    DWORD PTR [ecx-0x25bde23f],ecx
  40ff4d:	sahf   
  40ff4e:	adc    DWORD PTR [ecx+0x6b],ebx
  40ff51:	xchg   ebx,eax
  40ff52:	test   DWORD PTR [ebx],ebx
  40ff54:	jg     0x40ff61
  40ff56:	push   es
  40ff57:	mov    dl,0xbe
  40ff59:	cli    
  40ff5a:	sub    DWORD PTR [ecx+0x1c970eb0],edx
  40ff60:	scas   al,BYTE PTR es:[edi]
  40ff61:	mov    ebp,0x91e0a8e3
  40ff66:	xor    ebx,esi
  40ff68:	jbe    0x40ff45
  40ff6a:	js     0x40fef4
  40ff6c:	shl    esi,1
  40ff6e:	daa    
  40ff6f:	pushf  
  40ff70:	retf   
  40ff71:	sbb    edx,DWORD PTR [esi-0x41]
  40ff74:	sub    al,0xd
  40ff76:	mov    ecx,0x490a9af7
  40ff7b:	fsub   DWORD PTR [eax+0x78]
  40ff7e:	ss adc esp,eax
  40ff81:	cmp    DWORD PTR [ebx-0xd910f29],0x49
  40ff88:	pop    esi
  40ff89:	into   
  40ff8a:	xor    al,0x63
  40ff8c:	shld   DWORD PTR [ecx-0x1b],edi,0x6
  40ff91:	mov    WORD PTR [ebx],fs
  40ff93:	(bad)  
  40ff94:	push   esp
  40ff95:	add    ch,cl
  40ff97:	lahf   
  40ff98:	sub    eax,0xfb47d03
  40ff9d:	in     al,dx
  40ff9e:	adc    DWORD PTR [ebx+edx*4-0x32],esp
  40ffa2:	fs aas 
  40ffa4:	dec    edi
  40ffa5:	inc    eax
  40ffa6:	jmp    0x7d1b:0x14b4ccf4
  40ffad:	es mov ebx,0xe6d0172f
  40ffb3:	aam    0x58
  40ffb5:	icebp  
  40ffb6:	repnz repnz aam 0x95
  40ffba:	aam    0xee
  40ffbc:	add    ah,al
  40ffbe:	int3   
  40ffbf:	sub    DWORD PTR [eax-0x16],edi
  40ffc2:	cmp    al,0x35
  40ffc4:	ret    
  40ffc5:	ins    BYTE PTR es:[edi],dx
  40ffc6:	mov    al,ds:0xe84a6420
  40ffcb:	push   ss
  40ffcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffcd:	or     eax,0x57d1245b
  40ffd2:	or     dl,BYTE PTR [ebx]
  40ffd4:	or     al,0x69
  40ffd6:	adc    BYTE PTR [edx+0xe551b90],bh
  40ffdc:	jge    0x41004a
  40ffde:	adc    cl,cl
  40ffe0:	mov    edi,0x564dbd2
  40ffe5:	lods   al,BYTE PTR ds:[esi]
  40ffe6:	jmp    0x1a45:0x7213a5ae
  40ffed:	fs jne 0x41003b
  40fff0:	xor    DWORD PTR ds:0x453c4fb2,edi
  40fff6:	ret    0x30b6
  40fff9:	pop    ebx
  40fffa:	sbb    DWORD PTR [esi+0x30],edx
  40fffd:	out    0x2,al
  40ffff:	sub    eax,0xb1033e6f
  410004:	aam    0x51
  410006:	loopne 0x40ffd3
  410008:	cwde   
  410009:	xchg   edx,eax
  41000a:	pop    ss
  41000b:	or     eax,0xa2ebd39b
  410010:	jne    0x410076
  410012:	sbb    dl,ah
  410014:	sub    DWORD PTR [esi+ecx*4+0x78f66e5a],eax
  41001b:	dec    ebx
  41001c:	inc    ecx
  41001d:	clc    
  41001e:	mov    edi,0xde1eb8fb
  410023:	xor    BYTE PTR [ebx-0x453efeb3],ah
  410029:	dec    DWORD PTR [edx+0x5d23ee90]
  41002f:	ss xchg ecx,eax
  410031:	sbb    ebp,DWORD PTR [esi-0x49f8d204]
  410037:	sbb    BYTE PTR [edi-0x8],cl
  41003a:	pop    eax
  41003b:	or     dl,BYTE PTR [ebx]
  41003d:	jp     0x41008b
  41003f:	(bad)  
  410040:	xlat   BYTE PTR ds:[ebx]
  410041:	out    0xc,al
  410043:	rcl    ebp,0x70
  410046:	jmp    0x41cbc658
  41004b:	ret    0xae86
  41004e:	mov    bl,0x3
  410050:	cmp    DWORD PTR [esi],0xffffffdd
  410053:	add    ah,BYTE PTR [esp+ebx*2]
  410056:	mov    ebp,0xbb9d7b93
  41005b:	push   es
  41005c:	test   al,ch
  41005e:	sub    al,0xcc
  410060:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410061:	pop    ebx
  410062:	push   ecx
  410063:	jge    0x41008a
  410065:	adc    BYTE PTR [edx*2-0x9e5a7a5],dl
  41006c:	sti    
  41006d:	adc    eax,0x1ebd7fc9
  410072:	clc    
  410073:	sub    ah,bl
  410075:	cmp    eax,0xefa4bfd2
  41007a:	mov    dl,0xe1
  41007c:	xchg   esi,eax
  41007d:	pusha  
  41007e:	aas    
  41007f:	cs daa 
  410081:	call   DWORD PTR [esi-0x3d3c935b]
  410087:	lea    esi,[ecx-0xead0b0a]
  41008d:	jne    0x4100d5
  41008f:	pop    edx
  410090:	jae    0x41007e
  410092:	sbb    BYTE PTR [esi-0x477e9655],ch
  410098:	loope  0x4100d2
  41009a:	lods   al,BYTE PTR ds:[esi]
  41009b:	fwait
  41009c:	add    eax,0x48d18464
  4100a1:	inc    ecx
  4100a2:	iret   
  4100a3:	rcr    DWORD PTR [esi-0x5d10a4a3],1
  4100a9:	sbb    eax,0xc4bd9396
  4100ae:	and    BYTE PTR [edx+ebp*2+0x5a558339],ch
  4100b5:	pop    esi
  4100b6:	jecxz  0x4100b2
  4100b8:	repz into 
  4100ba:	call   0x66fa7078
  4100bf:	std    
  4100c0:	pop    ss
  4100c1:	nop
  4100c2:	dec    ebx
  4100c3:	sub    dl,BYTE PTR [edx-0x7a]
  4100c6:	dec    edx
  4100c7:	je     0x4100e8
  4100c9:	jne    0x410089
  4100cb:	sub    eax,0x8099422a
  4100d0:	call   0x8ae2624f
  4100d5:	xchg   ecx,eax
  4100d6:	pop    ebp
  4100d7:	clc    
  4100d8:	cli    
  4100d9:	inc    eax
  4100da:	jecxz  0x4100b7
  4100dc:	or     ch,cl
  4100de:	mov    ds:0x5313b22f,eax
  4100e3:	jb     0x410067
  4100e5:	xchg   ecx,eax
  4100e6:	add    edi,DWORD PTR [edi]
  4100e8:	int3   
  4100e9:	aaa    
  4100ea:	pop    eax
  4100eb:	dec    ebp
  4100ec:	into   
  4100ed:	ds dec edx
  4100ef:	sahf   
  4100f0:	jp     0x4100cb
  4100f2:	stos   DWORD PTR es:[edi],eax
  4100f3:	xchg   esi,eax
  4100f4:	jle    0x410108
  4100f6:	in     al,dx
  4100f7:	repnz fwait
  4100f9:	push   esp
  4100fa:	or     ebp,DWORD PTR [edi-0x14]
  4100fd:	shl    esp,1
  4100ff:	pop    esi
  410100:	xchg   edi,eax
  410101:	(bad)  
  410102:	nop
  410103:	data16 int 0xc0
  410106:	and    al,0x61
  410108:	xor    al,0x3e
  41010a:	inc    ecx
  41010b:	jmp    0x519b:0xd4aa61ef
  410112:	lods   eax,DWORD PTR ds:[esi]
  410113:	xchg   edx,eax
  410114:	hlt    
  410115:	xor    esp,DWORD PTR ds:0x5f799814
  41011b:	add    dl,BYTE PTR [ecx+0x16d9ad68]
  410121:	mov    WORD PTR [edi],ds
  410123:	sti    
  410124:	dec    ebp
  410125:	cmp    eax,0xd21ed2af
  41012a:	test   al,0xd1
  41012c:	mov    ah,0xc0
  41012e:	pop    eax
  41012f:	add    eax,0xb01950d7
  410134:	es push es
  410136:	ror    BYTE PTR [ebx-0x33],cl
  410139:	retf   
  41013a:	(bad)  
  41013b:	dec    edi
  41013c:	pop    edi
  41013d:	dec    eax
  41013e:	dec    eax
  41013f:	jl     0x410100
  410141:	add    eax,0x30da704d
  410146:	ret    
  410147:	pop    edi
  410148:	fisub  DWORD PTR [ebp-0x572f96aa]
  41014e:	inc    eax
  41014f:	sbb    eax,0x58e7a66c
  410154:	rcr    edx,cl
  410156:	ror    DWORD PTR [eax-0x67],cl
  410159:	cli    
  41015a:	je     0x41015e
  41015c:	(bad)  
  41015e:	ds push ss
  410160:	stos   DWORD PTR es:[edi],eax
  410161:	jmp    0x41010d
  410163:	jo     0x410169
  410165:	and    DWORD PTR [ecx-0x5258225e],eax
  41016b:	cmp    dh,BYTE PTR [edx]
  41016d:	sbb    eax,0xfd6f0b13
  410172:	push   ecx
  410173:	cmp    al,0xb9
  410175:	push   eax
  410176:	loopne 0x41010c
  410178:	loopne 0x410173
  41017a:	mov    ch,BYTE PTR [eax+0x26e39b24]
  410180:	je     0x4101ad
  410182:	sub    dl,BYTE PTR ss:[edx-0x42]
  410186:	call   0xe59de41f
  41018b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41018c:	cmc    
  41018d:	jecxz  0x410122
  41018f:	xchg   esi,eax
  410190:	sbb    edx,DWORD PTR [ebp-0x1f3d5d34]
  410196:	inc    ecx
  410197:	stc    
  410198:	cs mov edi,0x8d4a8c3b
  41019e:	pop    ss
  41019f:	fwait
  4101a0:	js     0x4101ab
  4101a2:	jl     0x410151
  4101a4:	and    ebp,DWORD PTR [edx+0x6c]
  4101a7:	int3   
  4101a8:	dec    ebx
  4101a9:	push   es
  4101aa:	mov    ah,0xe2
  4101ac:	sbb    DWORD PTR [eax+0x9],esp
  4101af:	and    al,0x1e
  4101b1:	cmc    
  4101b2:	adc    DWORD PTR [ebx],edi
  4101b4:	sbb    BYTE PTR [esi+0x6d],ch
  4101b7:	repz int3 
  4101b9:	jge    0x410233
  4101bb:	push   ss
  4101bc:	pop    ebp
  4101bd:	cmp    eax,DWORD PTR [ebx]
  4101bf:	inc    esi
  4101c0:	pop    eax
  4101c1:	ds js  0x4101f5
  4101c4:	popf   
  4101c5:	push   ebp
  4101c6:	fisttp QWORD PTR [esi+edi*2]
  4101c9:	cmp    ebp,esp
  4101cb:	mov    al,ds:0x3b86d7a4
  4101d0:	xchg   ebx,eax
  4101d1:	or     edi,ecx
  4101d3:	jbe    0x4101b8
  4101d5:	daa    
  4101d6:	mov    bl,0xfd
  4101d8:	mov    bh,0xb1
  4101da:	push   ebp
  4101db:	or     BYTE PTR [edi],bl
  4101dd:	aad    0x4d
  4101df:	les    ecx,FWORD PTR [edi-0x5f]
  4101e2:	pop    ss
  4101e3:	push   edi
  4101e4:	push   esp
  4101e5:	and    bh,al
  4101e7:	mov    DWORD PTR [esi+0x1e1f76fc],ecx
  4101ed:	test   eax,0xbdbe9e60
  4101f2:	sbb    edi,esi
  4101f4:	in     eax,dx
  4101f5:	fdivp  st(4),st
  4101f7:	ret    0x847e
  4101fa:	mov    eax,DWORD PTR [ebx+0x7c]
  4101fd:	inc    esi
  4101fe:	inc    ebp
  4101ff:	imul   esp,DWORD PTR [eax+0x1a],0x2
  410203:	or     dh,BYTE PTR [eax-0x39]
  410206:	bound  ecx,QWORD PTR [ebp+0x7850b5da]
  41020c:	push   es
  41020d:	cmp    DWORD PTR [edi],ecx
  41020f:	adc    dl,0x30
  410212:	mov    dl,0x42
  410214:	sbb    al,BYTE PTR [eax+0x39662dd6]
  41021a:	mov    dl,0x3c
  41021c:	mov    ch,0x4e
  41021e:	outs   dx,DWORD PTR ds:[esi]
  41021f:	dec    esp
  410220:	push   0x4cc095b6
  410225:	cmc    
  410226:	and    BYTE PTR [esi],al
  410228:	mov    es,edx
  41022a:	push   edi
  41022b:	addr16 in al,0x57
  41022e:	pop    esi
  41022f:	pop    ecx
  410230:	xchg   BYTE PTR [edx+0x29],bl
  410233:	es daa 
  410235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410236:	(bad)  
  410237:	fdiv   DWORD PTR [esi-0x7]
  41023a:	mov    ecx,DWORD PTR [ebx-0x55]
  41023d:	adc    DWORD PTR [ebp-0x6290f18b],0xffffffcd
  410244:	sub    BYTE PTR [ecx],ch
  410246:	push   edi
  410247:	add    BYTE PTR [ebx],cl
  410249:	test   eax,edx
  41024b:	cli    
  41024c:	cmp    bl,BYTE PTR [ecx]
  41024e:	xchg   ebp,eax
  41024f:	adc    ah,BYTE PTR [esi+0x70]
  410252:	je     0x410248
  410254:	push   0x6
  410256:	aam    0x5
  410258:	inc    eax
  410259:	ret    0x2761
  41025c:	fsub   QWORD PTR [ecx-0x6e]
  41025f:	fsubr  QWORD PTR [ecx-0x17]
  410262:	cmp    BYTE PTR [eax-0x3694a9b3],bh
  410268:	mov    ch,0x80
  41026a:	pop    ebx
  41026b:	call   0xed01:0x3ce44c39
  410272:	xchg   edi,eax
  410273:	mov    edx,0xaff7863a
  410278:	ja     0x410267
  41027a:	call   0x67450fed
  41027f:	stos   DWORD PTR es:[edi],eax
  410280:	dec    ecx
  410281:	sub    BYTE PTR [eax+0x1f],dl
  410284:	mov    eax,0x42885421
  410289:	add    al,0xd7
  41028b:	loope  0x410277
  41028d:	jmp    DWORD PTR [eax-0x59]
  410290:	cmp    ebx,DWORD PTR [eax]
  410292:	aam    0x55
  410294:	mov    edi,esp
  410296:	inc    eax
  410297:	shl    BYTE PTR [edx-0x7],1
  41029a:	aas    
  41029b:	fld    TBYTE PTR [ebp+0x2a]
  41029e:	dec    edx
  41029f:	sar    BYTE PTR [esp+eiz*8+0x37b959b0],cl
  4102a6:	scas   al,BYTE PTR es:[edi]
  4102a7:	xor    bl,BYTE PTR [esi]
  4102a9:	ins    BYTE PTR es:[edi],dx
  4102aa:	dec    esi
  4102ab:	aas    
  4102ac:	fcmovu st,st(2)
  4102ae:	dec    esi
  4102af:	fisttp QWORD PTR [eax+0x42]
  4102b2:	mov    ah,0xc3
  4102b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102b5:	xor    esp,esp
  4102b7:	and    bh,BYTE PTR [esp+esi*2+0x15fa866]
  4102be:	(bad)  
  4102c0:	ror    DWORD PTR [ecx+eiz*1-0x564b6a48],cl
  4102c7:	sbb    esi,edi
  4102c9:	call   0x8059:0x1d23ef2e
  4102d0:	push   ecx
  4102d1:	shl    esi,cl
  4102d3:	adc    BYTE PTR [eax-0x36],al
  4102d6:	faddp  st(2),st
  4102d8:	imul   edx,DWORD PTR [esi],0xfb2cbd22
  4102de:	cwde   
  4102df:	jns    0x4102d8
  4102e1:	stos   DWORD PTR es:[edi],eax
  4102e2:	xor    edx,esp
  4102e4:	cmp    ebp,DWORD PTR [edi+0x2c]
  4102e7:	mov    ch,0x15
  4102e9:	mov    bh,BYTE PTR [ecx+0x5]
  4102ec:	mov    ds:0x4f495ebd,al
  4102f1:	sbb    eax,0x7befd535
  4102f6:	or     al,BYTE PTR [ecx]
  4102f8:	hlt    
  4102f9:	jae    0x41035a
  4102fb:	iret   
  4102fc:	stos   BYTE PTR es:[edi],al
  4102fd:	cwde   
  4102fe:	jno    0x410379
  410300:	mov    bl,dh
  410302:	cdq    
  410303:	mov    ebp,0xafbb38cb
  410308:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410309:	lahf   
  41030a:	pop    esp
  41030b:	outs   dx,BYTE PTR ds:[esi]
  41030c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41030d:	jle    0x410377
  41030f:	mov    DWORD PTR [ebx+0x7841c9f2],ebp
  410315:	(bad)  
  410316:	xlat   BYTE PTR ds:[ebx]
  410317:	xchg   DWORD PTR [ebx],esp
  410319:	outs   dx,DWORD PTR ds:[esi]
  41031a:	xor    eax,0xe2e031e1
  41031f:	stos   DWORD PTR es:[edi],eax
  410320:	pop    es
  410321:	inc    ecx
  410322:	aad    0x31
  410324:	stos   DWORD PTR es:[edi],eax
  410325:	jno    0x4102ff
  410327:	inc    eax
  410328:	scas   al,BYTE PTR es:[edi]
  410329:	or     ch,al
  41032b:	mov    BYTE PTR [edx-0x3f],0xe2
  41032f:	pushf  
  410330:	add    edx,DWORD PTR [esi+0x6fa9de1f]
  410336:	mov    bl,0x5e
  410338:	addr16 jb 0x4102d3
  41033b:	adc    ebx,DWORD PTR [ebp+0x11]
  41033e:	jae    0x41039f
  410340:	mov    ds:0x37f0f44e,eax
  410345:	dec    ebp
  410346:	(bad)  
  410347:	cmp    dh,BYTE PTR [ebx+0x68]
  41034a:	pop    eax
  41034b:	scas   al,BYTE PTR es:[edi]
  41034c:	into   
  41034d:	rol    DWORD PTR [edi+0x69da3aea],0x90
  410354:	sub    BYTE PTR [esi+0x483ad40a],dh
  41035a:	add    DWORD PTR [esi],esp
  41035c:	xor    DWORD PTR [ebx],ebp
  41035e:	jmp    0x71786410
  410363:	ds xor ah,cl
  410366:	fwait
  410367:	std    
  410368:	lods   al,BYTE PTR ds:[esi]
  410369:	in     eax,0xd0
  41036b:	jge    0x4103d3
  41036d:	(bad)  
  41036e:	adc    eax,0xe215dfd1
  410373:	cmc    
  410374:	daa    
  410375:	sub    eax,0xe17a82cd
  41037a:	or     DWORD PTR [ecx],ecx
  41037c:	sub    ah,bh
  41037e:	jne    0x410336
  410380:	push   cs
  410381:	sbb    BYTE PTR [edi+0x161361c6],ch
  410387:	sbb    bl,BYTE PTR [eax]
  410389:	inc    ebp
  41038a:	scas   al,BYTE PTR es:[edi]
  41038b:	repnz or cl,al
  41038e:	and    BYTE PTR [edx],dl
  410390:	xchg   ebp,eax
  410391:	loop   0x4103ec
  410393:	or     eax,DWORD PTR ds:0x6c1fa67f
  410399:	mov    ds:0x4150a77b,eax
  41039e:	jle    0x410328
  4103a0:	stos   BYTE PTR es:[edi],al
  4103a1:	push   esi
  4103a2:	jne    0x4103f3
  4103a4:	fcom   DWORD PTR [eax+0x5]
  4103a7:	xor    BYTE PTR ds:0xf7358d2a,cl
  4103ad:	pop    esi
  4103ae:	es xchg edi,eax
  4103b0:	and    eax,0x590d0533
  4103b5:	lock adc DWORD PTR [ecx+0x261faa6b],eax
  4103bc:	mov    al,ds:0x70f767eb
  4103c1:	and    BYTE PTR [eax+0x5d435b89],bl
  4103c7:	jo     0x410363
  4103c9:	(bad)  
  4103ca:	in     eax,dx
  4103cb:	xchg   edi,eax
  4103cc:	outs   dx,BYTE PTR ds:[esi]
  4103cd:	repnz or dl,bh
  4103d0:	aad    0xbd
  4103d2:	mov    ch,0x8b
  4103d4:	inc    esp
  4103d5:	dec    eax
  4103d6:	imul   eax,eax,0xded23b6b
  4103dc:	xor    DWORD PTR [edi],eax
  4103de:	adc    edi,edx
  4103e0:	cdq    
  4103e1:	repnz aam 0xb8
  4103e4:	xor    al,0x3f
  4103e6:	sub    DWORD PTR [eax+eiz*1-0x17],edx
  4103ea:	add    al,0xf9
  4103ec:	sub    al,0x47
  4103ee:	iret   
  4103ef:	push   ebp
  4103f0:	mov    dh,0x82
  4103f2:	rcl    cl,cl
  4103f4:	pop    ds
  4103f5:	pop    eax
  4103f6:	xor    al,0x1a
  4103f8:	cs xchg esp,eax
  4103fa:	out    0xa8,eax
  4103fc:	in     al,0x18
  4103fe:	scas   eax,DWORD PTR es:[edi]
  4103ff:	push   eax
  410400:	and    ecx,DWORD PTR [edx]
  410402:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410403:	dec    esp
  410404:	xchg   DWORD PTR [edi],ebx
  410406:	icebp  
  410407:	or     BYTE PTR [ecx+ecx*2-0x2f],bl
  41040b:	imul   edx,DWORD PTR [eax+0x306ae4f8],0x4e038bf4
  410415:	pop    ebp
  410416:	fiadd  WORD PTR [edi+ebp*4]
  410419:	pop    edx
  41041a:	scas   eax,DWORD PTR es:[edi]
  41041b:	data16 xor dh,BYTE PTR [ebp-0x31]
  41041f:	ficom  WORD PTR [esi]
  410421:	fisttp WORD PTR [ecx+0x18e8c21]
  410427:	inc    eax
  410428:	xchg   esi,eax
  410429:	fisttp QWORD PTR [edx-0x67]
  41042c:	enter  0x1baa,0xf1
  410430:	cli    
  410431:	push   ebx
  410432:	xchg   cl,cl
  410434:	xlat   BYTE PTR ds:[ebx]
  410435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410436:	arpl   ax,sp
  410438:	pop    ecx
  410439:	fldenv [ecx-0x3a]
  41043c:	jg     0x410406
  41043e:	fmul   st,st(2)
  410440:	mov    esi,0xd029e982
  410445:	shl    BYTE PTR [esi],cl
  410447:	add    bh,dh
  410449:	mov    ah,0x13
  41044b:	stos   BYTE PTR es:[edi],al
  41044c:	push   ecx
  41044d:	mov    ebp,0xa53a8ea7
  410452:	les    edi,FWORD PTR [ebp+0xf]
  410455:	pop    es
  410456:	jg     0x410407
  410458:	inc    esi
  410459:	out    0x5c,al
  41045b:	fwait
  41045c:	mov    bh,BYTE PTR [ebp+0x165444a5]
  410462:	repnz leave 
  410464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410465:	fwait
  410466:	aam    0x5c
  410468:	or     ecx,0x1c97d2a0
  41046e:	inc    edx
  41046f:	xchg   DWORD PTR [edi-0x252e4566],esp
  410475:	jmp    0x410410
  410477:	fwait
  410478:	aaa    
  410479:	mov    dl,0x5b
  41047b:	out    dx,eax
  41047c:	jmp    0xc8117dd7
  410481:	imul   ebx,DWORD PTR [esi],0x8b0503af
  410487:	cmp    al,0xd2
  410489:	leave  
  41048a:	sub    esi,DWORD PTR ds:0x66395028
  410490:	call   0x78e48ba6
  410495:	or     DWORD PTR ds:0x14cf8df0,esi
  41049b:	push   esi
  41049c:	pop    ecx
  41049d:	enter  0xe221,0xf1
  4104a1:	mov    DWORD PTR [ebx+esi*1-0x6f],esp
  4104a5:	xlat   BYTE PTR ds:[ebx]
  4104a6:	retf   
  4104a7:	cmp    DWORD PTR [ebx+esi*1-0x3e],esi
  4104ab:	mov    ds:0x5d3a5c56,al
  4104b0:	jmp    0xedc7:0xfb6ad056
  4104b7:	sub    edi,ecx
  4104b9:	mov    ch,0xcf
  4104bb:	sbb    al,0x7e
  4104bd:	push   0xffffffe3
  4104bf:	jge    0x41049c
  4104c1:	cmc    
  4104c2:	pop    ds
  4104c3:	arpl   WORD PTR [esi+0x2b],di
  4104c6:	lods   al,BYTE PTR ds:[esi]
  4104c7:	jbe    0x41050e
  4104c9:	hlt    
  4104ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104cb:	inc    edx
  4104cc:	and    eax,0x3a513e1e
  4104d1:	push   eax
  4104d2:	jl     0x4104ab
  4104d4:	pusha  
  4104d5:	cmc    
  4104d6:	test   eax,0xacc6fe7e
  4104db:	clc    
  4104dc:	cmp    al,0xef
  4104de:	scas   eax,DWORD PTR es:[edi]
  4104df:	mov    ds:0x309850e6,al
  4104e4:	es mov cl,0xcb
  4104e7:	out    dx,eax
  4104e8:	xchg   ebx,eax
  4104e9:	stc    
  4104ea:	or     eax,0xdf1f6461
  4104ef:	and    eax,0x4de9f707
  4104f4:	and    bh,bh
  4104f6:	xchg   DWORD PTR [ebx-0x2299e62c],edx
  4104fc:	xchg   esp,eax
  4104fd:	lea    ecx,[eax+esi*8]
  410500:	pop    eax
  410501:	(bad)  
  410502:	lock xchg ebx,eax
  410504:	dec    eax
  410505:	mov    BYTE PTR [edx+0x72a3764b],ah
  41050b:	xor    BYTE PTR [ecx+0x79f3b999],cl
  410511:	xlat   BYTE PTR ds:[ebx]
  410512:	repz mov edi,ecx
  410515:	cbw    
  410517:	popa   
  410518:	sub    BYTE PTR [ebp+0xc],ch
  41051b:	cmp    DWORD PTR [eax],ecx
  41051d:	out    0x43,al
  41051f:	sbb    BYTE PTR [eax+edi*2+0x51992c07],bh
  410526:	add    eax,0x25776dae
  41052b:	xor    eax,DWORD PTR ds:0xa15a1271
  410531:	dec    edx
  410532:	xchg   ebx,eax
  410533:	sbb    al,0x90
  410535:	and    eax,0xac1402b8
  41053a:	out    dx,eax
  41053b:	test   eax,0xd3e2df72
  410540:	call   0x2332:0x2ae64851
  410547:	inc    edi
  410548:	mov    BYTE PTR [eax],al
  41054a:	fdiv   DWORD PTR [ebp+0x3af89903]
  410550:	sahf   
  410551:	push   ds
  410552:	xor    al,0x59
  410554:	es xchg ebx,eax
  410556:	inc    ecx
  410557:	push   0xffffffee
  410559:	jge    0x4104dd
  41055b:	sahf   
  41055c:	in     al,0x28
  41055e:	inc    ebp
  41055f:	stos   DWORD PTR es:[edi],eax
  410560:	loopne 0x4105d2
  410562:	leave  
  410563:	iret   
  410564:	aaa    
  410565:	(bad)  
  410566:	arpl   WORD PTR [ecx+ebx*8],si
  410569:	jnp    0x4104ef
  41056b:	and    ebx,DWORD PTR [eax]
  41056d:	push   cs
  41056e:	push   ebp
  41056f:	(bad)  
  410570:	mov    edx,0x7ba3a17b
  410575:	loopne 0x410596
  410577:	cld    
  410578:	jl     0x41050f
  41057a:	push   esp
  41057b:	or     al,0x5a
  41057d:	or     DWORD PTR [eax+0x49e04230],ebp
  410583:	daa    
  410584:	ficomp DWORD PTR [eax+0xd]
  410587:	into   
  410588:	push   cs
  410589:	mov    ds:0xaf3cdaa7,eax
  41058e:	shl    edi,0xfe
  410591:	xor    DWORD PTR [edx+0x1dfbcb36],0xeccbea7a
  41059b:	sbb    ebx,ebp
  41059d:	jnp    0x410522
  41059f:	lods   al,BYTE PTR ds:[esi]
  4105a0:	fimul  DWORD PTR [ebx]
  4105a2:	scas   al,BYTE PTR es:[edi]
  4105a3:	xor    esp,DWORD PTR [edi-0x475887e7]
  4105a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105aa:	or     ch,bh
  4105ac:	xchg   BYTE PTR [edi],bl
  4105ae:	push   eax
  4105af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105b0:	cmovbe ebx,ebx
  4105b3:	dec    ecx
  4105b4:	cwde   
  4105b5:	push   es
  4105b6:	and    BYTE PTR [edx+eiz*2],bl
  4105b9:	jns    0x4105ac
  4105bb:	popf   
  4105bc:	fnstsw WORD PTR [edi+eiz*4+0x19d5cb41]
  4105c3:	or     ch,bl
  4105c5:	stos   BYTE PTR es:[edi],al
  4105c6:	(bad)  
  4105c7:	fdivr  DWORD PTR [edx]
  4105c9:	test   eax,0x57e0f10b
  4105ce:	ins    BYTE PTR es:[edi],dx
  4105cf:	push   0x896f5c7b
  4105d4:	mov    ch,0xee
  4105d6:	sbb    DWORD PTR [eax],eax
  4105d8:	out    dx,eax
  4105d9:	or     BYTE PTR [eax-0x21],0xe2
  4105dd:	je     0x4105ab
  4105df:	cld    
  4105e0:	lock pop esi
  4105e2:	pop    edx
  4105e3:	push   ds
  4105e4:	ds (bad) 
  4105e6:	fnstenv [eax]
  4105e8:	dec    ecx
  4105e9:	out    0x6e,eax
  4105eb:	mov    eax,ds:0x3fefea05
  4105f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105f1:	popa   
  4105f2:	retf   0xe6a2
  4105f5:	leave  
  4105f6:	out    dx,eax
  4105f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105f8:	lods   eax,DWORD PTR ds:[esi]
  4105f9:	jmp    0x4105a6
  4105fb:	lods   eax,DWORD PTR ds:[esi]
  4105fc:	loopne 0x4105b8
  4105fe:	inc    ecx
  4105ff:	ins    BYTE PTR es:[edi],dx
  410600:	adc    al,0x80
  410602:	js     0x410623
  410604:	arpl   WORD PTR [esi-0x6731d295],ax
  41060a:	(bad)
  41060d:	sub    DWORD PTR [edi+edx*1+0x64],edi
  410611:	ja     0x41060e
  410613:	sti    
  410614:	cli    
  410615:	pop    ebx
  410616:	daa    
  410617:	sub    BYTE PTR [edi+ebx*4],dl
  41061a:	in     al,0x87
  41061c:	mov    ah,0xa4
  41061e:	or     al,bh
  410620:	mov    ebp,ecx
  410622:	and    dh,dl
  410624:	dec    esi
  410626:	cld    
  410627:	pop    eax
  410628:	add    edx,DWORD PTR [edx-0x284f814d]
  41062e:	xlat   BYTE PTR ds:[ebx]
  41062f:	scas   al,BYTE PTR es:[edi]
  410630:	xchg   DWORD PTR [esi],edx
  410632:	or     eax,0xae43b5df
  410637:	dec    ebp
  410638:	std    
  410639:	dec    ebp
  41063a:	push   0xffffffba
  41063c:	pop    eax
  41063d:	icebp  
  41063e:	jne    0x4105e6
  410640:	test   BYTE PTR [ecx+ebx*1],dl
  410643:	imul   esi,DWORD PTR [edx],0x3c
  410646:	add    al,0x3
  410648:	mov    cl,bl
  41064a:	cmp    al,dh
  41064c:	aaa    
  41064d:	lods   al,BYTE PTR ds:[esi]
  41064e:	(bad)  
  41064f:	jmp    0x2afb:0xc99aea1e
  410656:	ja     0x41060c
  410658:	push   ds
  410659:	mov    esi,0x24aa6f02
  41065e:	je     0x410684
  410660:	imul   ecx,DWORD PTR [ecx],0xffffffed
  410663:	fild   QWORD PTR [ebx]
  410665:	mov    al,ds:0x9d743231
  41066a:	mov    ah,0xd4
  41066c:	xchg   edx,eax
  41066d:	add    DWORD PTR [esi],0x42
  410670:	pop    ecx
  410671:	xor    al,ch
  410673:	jae    0x410645
  410675:	repnz adc BYTE PTR ds:0x3b129500,al
  41067c:	popa   
  41067d:	xchg   edx,eax
  41067e:	fbstp  TBYTE PTR [ebx+0x4d]
  410681:	adc    ecx,DWORD PTR [eax+ebx*8-0x6e4882c0]
  410688:	cmp    DWORD PTR [esi],0x2ff1c39c
  41068e:	jno    0x410688
  410690:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410691:	out    dx,al
  410692:	or     ecx,DWORD PTR [edi-0x3c]
  410695:	mov    bh,0x52
  410697:	jp     0x41064b
  410699:	xchg   edi,eax
  41069a:	push   esi
  41069b:	pop    edi
  41069c:	sbb    DWORD PTR [edx+edi*2-0x6ef7ea5a],edx
  4106a3:	ret    0x52a5
  4106a6:	adc    al,BYTE PTR [ebx+eiz*1-0x48]
  4106aa:	cmp    al,BYTE PTR [esi-0x6f]
  4106ad:	or     ch,BYTE PTR [edi-0x4cfe0f1f]
  4106b3:	out    dx,al
  4106b4:	or     al,0xe1
  4106b6:	ret    0x3619
  4106b9:	shl    DWORD PTR [edi],cl
  4106bb:	push   edi
  4106bc:	fst    st(3)
  4106be:	xchg   edx,eax
  4106bf:	mov    bl,BYTE PTR [edx+0x1c]
  4106c2:	cmc    
  4106c3:	add    al,0x48
  4106c5:	scas   al,BYTE PTR es:[edi]
  4106c6:	test   dl,cl
  4106c8:	cmp    al,0xb5
  4106ca:	popa   
  4106cb:	dec    ebx
  4106cc:	add    BYTE PTR [ebp-0x5f],ch
  4106cf:	js     0x410732
  4106d1:	ficomp WORD PTR [ecx]
  4106d3:	or     BYTE PTR [ecx+0x4f6e65db],bl
  4106d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106da:	sub    eax,0xacb871e1
  4106df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106e0:	inc    esi
  4106e1:	js     0x410736
  4106e3:	cmp    ah,BYTE PTR [esp+eax*8+0x2]
  4106e7:	neg    DWORD PTR [edi-0x27]
  4106ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106ec:	cwde   
  4106ed:	test   al,0xb8
  4106ef:	(bad)
  4106f2:	rcr    DWORD PTR [esi+eax*1+0x720422d6],cl
  4106f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106fa:	gs arpl sp,si
  4106fd:	cs dec esp
  4106ff:	sbb    al,0x17
  410701:	add    bl,0x35
  410704:	fnstenv [ecx-0x23a78471]
  41070a:	dec    esi
  41070b:	stos   BYTE PTR es:[edi],al
  41070c:	or     BYTE PTR [ebp+0x44],0x9b
  410710:	and    BYTE PTR [ebp+0x1532df1c],dh
  410716:	adc    DWORD PTR [ebp+0x41f1f8f6],ecx
  41071c:	cmp    eax,0x887bc6e5
  410721:	fnsave [ecx+0x4a48658a]
  410727:	xchg   BYTE PTR [ecx],dl
  410729:	mov    dh,0xd9
  41072b:	fsubrp st(6),st
  41072d:	jle    0x410722
  41072f:	(bad)
  410732:	jle    0x4107a1
  410734:	popa   
  410735:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410736:	ja     0x4106db
  410738:	enter  0x37ed,0x8b
  41073c:	push   eax
  41073d:	inc    edi
  41073e:	icebp  
  41073f:	pop    eax
  410740:	push   esp
  410741:	inc    edi
  410742:	inc    edi
  410743:	mov    WORD PTR [ebp+ebp*1-0x2aa61d7f],cs
  41074a:	in     al,0xb9
  41074c:	(bad)  
  41074d:	out    0xcd,eax
  41074f:	arpl   WORD PTR [esi],bx
  410751:	add    ebx,ecx
  410753:	or     ah,ch
  410755:	mov    bl,dh
  410757:	ficomp DWORD PTR [ecx+0x38]
  41075a:	xor    cl,BYTE PTR [ebp-0x13]
  41075d:	jno    0x41074c
  41075f:	push   edx
  410760:	jae    0x41075c
  410762:	ja     0x410791
  410764:	mov    ah,0x54
  410766:	in     al,0x4d
  410768:	inc    edx
  410769:	(bad)  
  41076a:	and    al,0x7b
  41076c:	or     ebx,DWORD PTR [ebx-0x66fe22bb]
  410772:	(bad)  
  410773:	bound  ebp,QWORD PTR [esi+edx*8+0x2f]
  410777:	jl     0x4107a2
  410779:	cmp    ebp,DWORD PTR [ecx+edx*4+0x7]
  41077d:	sbb    eax,0x4c9e6c4
  410782:	sbb    BYTE PTR [ebx+eiz*4+0x5a],ch
  410786:	sbb    DWORD PTR [eax],ebx
  410788:	xor    DWORD PTR [ebp+0x32f9e55e],eax
  41078e:	mov    ds:0x9cca7d06,eax
  410793:	fsubr  QWORD PTR [esi]
  410795:	pop    ss
  410796:	pop    ebx
  410797:	enter  0x25f1,0x8b
  41079b:	outs   dx,BYTE PTR ds:[esi]
  41079c:	mov    esp,0x6443861
  4107a1:	sub    al,0x74
  4107a3:	mov    bh,BYTE PTR [ecx]
  4107a5:	loop   0x4107ec
  4107a7:	push   0x42e295f1
  4107ac:	sahf   
  4107ad:	clc    
  4107ae:	arpl   WORD PTR [ecx-0x57],dx
  4107b1:	cdq    
  4107b2:	rcl    ecx,0xc3
  4107b5:	mov    WORD PTR [bx-0x3c75],gs
  4107ba:	and    BYTE PTR [edi-0xf],0xfb
  4107be:	sub    eax,0x97989740
  4107c3:	dec    ebp
  4107c4:	outs   dx,BYTE PTR ds:[esi]
  4107c5:	les    esp,FWORD PTR [eax-0x7bdec8fb]
  4107cb:	loop   0x410803
  4107cd:	nop
  4107ce:	lea    edx,[esi+0x46311e6e]
  4107d4:	lods   al,BYTE PTR ds:[esi]
  4107d5:	jnp    0x410836
  4107d7:	inc    ebx
  4107d8:	dec    ebp
  4107d9:	jns    0x4107b1
  4107db:	addr16 xchg edx,eax
  4107dd:	push   eax
  4107de:	mov    ecx,DWORD PTR [eax+0x32f9e0b3]
  4107e4:	xchg   edi,eax
  4107e5:	repnz dec ebp
  4107e7:	(bad)  
  4107e8:	mov    edi,0xbe20c33e
  4107ed:	dec    edx
  4107ee:	xor    BYTE PTR [eax-0x2e],0x6a
  4107f2:	test   al,0xc7
  4107f4:	fs loope 0x41085a
  4107f7:	aam    0xf2
  4107f9:	cmp    ebx,DWORD PTR [ecx-0x21]
  4107fc:	sahf   
  4107fd:	mov    al,ds:0x815d009a
  410802:	cmp    BYTE PTR [edx+0x32d9b116],0xe4
  410809:	push   ss
  41080a:	test   BYTE PTR [edi-0x74],0x36
  41080e:	push   edi
  41080f:	ret    0xbc35
  410812:	jl     0x4107bb
  410814:	aad    0xd6
  410816:	pushf  
  410817:	mul    DWORD PTR [esi+0x5b51be23]
  41081d:	outs   dx,DWORD PTR ds:[esi]
  41081e:	dec    edi
  41081f:	data16 jne 0x4107b6
  410822:	ins    BYTE PTR es:[edi],dx
  410823:	jecxz  0x4107cc
  410825:	dec    edx
  410826:	into   
  410827:	shr    BYTE PTR [eax],0xc0
  41082a:	mov    BYTE PTR [esi+0x54982228],dh
  410830:	sub    esi,DWORD PTR [ebx]
  410832:	and    BYTE PTR [ebx+ebx*2],dh
  410835:	and    eax,0xb9db201f
  41083a:	or     ah,bl
  41083c:	mov    BYTE PTR [ecx+edi*8+0x672c8f40],0xe9
  410844:	popa   
  410845:	loope  0x41086b
  410847:	push   ecx
  410848:	pop    esp
  410849:	sbb    dl,BYTE PTR [ecx+0x1d80e1ea]
  41084f:	jno    0x410846
  410851:	mov    ah,0xd6
  410853:	and    BYTE PTR [edx+0x7d850f0],ch
  410859:	clc    
  41085a:	inc    edi
  41085b:	and    DWORD PTR [ecx+0x15],edx
  41085e:	popa   
  41085f:	or     BYTE PTR [ebp+0x7290b0d6],ch
  410865:	mov    eax,ds:0xbc2a1e12
  41086a:	push   0xbb1f074c
  41086f:	cs icebp 
  410871:	mov    ds:0x44a510fc,eax
  410876:	mov    al,ds:0x1204839b
  41087b:	cmc    
  41087c:	fadd   QWORD PTR [ebx-0x6e]
  41087f:	into   
  410880:	cmp    al,0xb1
  410882:	in     eax,dx
  410883:	cmp    al,0x9f
  410885:	popf   
  410886:	mov    ds:0x245a830d,eax
  41088b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41088c:	jecxz  0x4108af
  41088e:	outs   dx,BYTE PTR ds:[esi]
  41088f:	jle    0x4108b8
  410891:	pop    ds
  410892:	jle    0x410854
  410894:	stos   BYTE PTR es:[edi],al
  410895:	dec    edx
  410896:	pop    ebx
  410897:	mov    bh,0xf5
  410899:	add    DWORD PTR [eax-0x34],ecx
  41089c:	into   
  41089d:	mov    gs,edx
  41089f:	cmp    bh,dl
  4108a1:	or     BYTE PTR [eax-0x2c],bl
  4108a4:	popf   
  4108a5:	cmc    
  4108a6:	les    eax,FWORD PTR [esi-0x53ff2c65]
  4108ac:	hlt    
  4108ad:	add    al,0x91
  4108af:	(bad)
  4108b2:	shl    BYTE PTR [edi],cl
  4108b4:	sbb    eax,0xdc3245f
  4108b9:	lock stos DWORD PTR es:[edi],eax
  4108bb:	(bad)  
  4108bc:	enter  0xda68,0xeb
  4108c0:	inc    ecx
  4108c1:	mov    dl,0x1
  4108c3:	je     0x41091d
  4108c5:	mov    ebp,eax
  4108c7:	int3   
  4108c8:	js     0x410885
  4108ca:	mov    ah,0x4b
  4108cc:	add    eax,eax
  4108ce:	or     al,0x63
  4108d0:	add    al,0x1e
  4108d2:	add    ah,ch
  4108d4:	pop    eax
  4108d5:	sub    BYTE PTR [ecx+0x21c5485e],cl
  4108db:	in     eax,0x3e
  4108dd:	lock shl DWORD PTR [ebx+0x75],1
  4108e1:	aaa    
  4108e2:	mov    bh,0x4a
  4108e4:	jae    0x41087a
  4108e6:	in     al,dx
  4108e7:	inc    ebx
  4108e8:	ret    
  4108e9:	dec    ebx
  4108ea:	jne    0x4108ed
  4108ec:	call   0xe392fb2a
  4108f1:	cmp    ebx,esp
  4108f3:	loopne 0x4108de
  4108f5:	mov    WORD PTR cs:[ebp+0x37a9e9e1],fs
  4108fc:	push   esp
  4108fd:	xor    BYTE PTR [edx],0x4d
  410900:	mov    ?,WORD PTR [eax-0x80]
  410903:	sbb    ch,bh
  410905:	test   BYTE PTR [eax-0x2be8a240],bh
  41090b:	push   0xf95d9d15
  410910:	mov    ah,0xab
  410912:	pop    eax
  410913:	mov    bl,0xa0
  410915:	mov    bl,0x4
  410917:	mov    cl,0x2d
  410919:	push   eax
  41091a:	pop    ebx
  41091b:	mov    cl,0x10
  41091d:	cs cld 
  41091f:	mov    esi,0xb8917a5a
  410924:	mov    esp,DWORD PTR [ecx+0x30]
  410927:	sbb    ch,bh
  410929:	pop    esi
  41092a:	adc    BYTE PTR [ebx],bh
  41092c:	ror    DWORD PTR [ebp+0x720f0e7],1
  410932:	push   esi
  410933:	mov    ah,0x3
  410935:	lds    edi,FWORD PTR [ebx-0x2d]
  410938:	fidivr WORD PTR [esi+0x22]
  41093b:	(bad)  
  41093c:	jle    0x41093c
  41093e:	sub    DWORD PTR [eax+ebx*4-0x36],edi
  410942:	mov    dl,0xb8
  410944:	sub    eax,0xaf917d5e
  410949:	(bad)  
  41094a:	cmp    ebp,edi
  41094c:	jae    0x4108d0
  41094e:	mov    ebx,0x73c302e6
  410953:	pop    edx
  410954:	and    al,0xba
  410956:	pop    ss
  410957:	das    
  410958:	mov    esi,0xf4ca2add
  41095d:	xor    ax,0xb73b
  410961:	xor    al,0xe1
  410963:	imul   ecx,DWORD PTR [edi],0x48
  410966:	push   ss
  410967:	or     al,0x64
  410969:	and    ebx,DWORD PTR [edi]
  41096b:	leave  
  41096c:	jb     0x410967
  41096e:	and    dl,bl
  410970:	dec    ebp
  410971:	xor    BYTE PTR [esi+0x58e1f4ca],bh
  410977:	or     BYTE PTR [esi],bh
  410979:	fcomp  DWORD PTR ds:0x8826ad60
  41097f:	shl    ebx,0xec
  410982:	ins    DWORD PTR es:[edi],dx
  410983:	(bad)  
  410984:	(bad)  
  410985:	imul   ecx,DWORD PTR [edx-0x4cbdab99],0xc108d307
  41098f:	mov    ds:0x407bb606,eax
  410994:	arpl   WORD PTR [edi+eax*8-0x6c8e2978],bp
  41099b:	jmp    0xf256:0x3e6f4f86
  4109a2:	psrld  mm2,QWORD PTR [eax-0x3c]
  4109a6:	push   edi
  4109a7:	ss std 
  4109a9:	mov    edx,0xb63179c7
  4109ae:	xchg   esi,eax
  4109af:	popa   
  4109b0:	or     eax,0xc0d0601d
  4109b5:	test   DWORD PTR [edi+0x16293088],ebx
  4109bb:	sub    DWORD PTR [eax+0x6c],edi
  4109be:	mov    ds:0x5a35582b,eax
  4109c3:	sbb    eax,0x2f07f427
  4109c8:	hlt    
  4109c9:	and    DWORD PTR [eax-0xe],ecx
  4109cc:	out    dx,eax
  4109cd:	mov    DWORD PTR [eax-0x7b3a07fd],edi
  4109d3:	inc    dl
  4109d5:	xchg   esi,eax
  4109d6:	push   ebx
  4109d7:	test   DWORD PTR [ecx+ebp*8-0x52],ebx
  4109db:	cmp    al,dh
  4109dd:	inc    ebp
  4109de:	repnz enter 0xc05f,0x31
  4109e3:	(bad)  [edi+eiz*2+0x600e1cb6]
  4109ea:	jecxz  0x4109ae
  4109ec:	js     0x410a0f
  4109ee:	push   ecx
  4109ef:	cwde   
  4109f0:	xchg   edi,eax
  4109f1:	bound  eax,QWORD PTR [esi-0x684c13af]
  4109f7:	adc    eax,0x6a64f742
  4109fc:	lods   eax,DWORD PTR ds:[esi]
  4109fd:	(bad)  
  4109fe:	jb     0x4109c2
  410a00:	jmp    0x48e0:0x3e1ed833
  410a07:	lahf   
  410a08:	mov    cl,0xc0
  410a0a:	and    eax,0xa797126c
  410a0f:	das    
  410a10:	adc    esi,DWORD PTR [edx+esi*8]
  410a13:	xor    al,0x41
  410a15:	ds pop ss
  410a17:	std    
  410a18:	jne    0x4109be
  410a1a:	inc    edx
  410a1b:	test   eax,0x76fbe2a9
  410a20:	cmp    ecx,ebp
  410a22:	xor    edi,eax
  410a24:	cmp    DWORD PTR [ebx+ebp*2+0x36f6874c],ecx
  410a2b:	lods   eax,DWORD PTR ds:[esi]
  410a2c:	icebp  
  410a2d:	mov    esi,ebx
  410a2f:	ret    0x5645
  410a32:	xor    DWORD PTR [ecx-0x31e46c68],edi
  410a38:	xchg   edx,eax
  410a39:	jmp    0x4109e7
  410a3b:	inc    ecx
  410a3c:	mov    ebx,0x3ecc1742
  410a41:	pop    ebp
  410a42:	or     bl,ah
  410a44:	inc    esp
  410a45:	jge    0x410aa2
  410a47:	or     bl,al
  410a49:	fadd   QWORD PTR [ebx]
  410a4b:	enter  0xb39,0x8
  410a4f:	or     ah,0x1c
  410a52:	or     eax,0xa702e224
  410a57:	sti    
  410a58:	in     al,0xae
  410a5a:	dec    ecx
  410a5b:	dec    esp
  410a5c:	dec    edx
  410a5d:	sub    al,0x1
  410a5f:	cdq    
  410a60:	mov    ?,WORD PTR [ebx+0x235c7a3]
  410a66:	or     BYTE PTR [esi-0x44ffdfe4],bl
  410a6c:	stos   DWORD PTR es:[edi],eax
  410a6d:	lods   al,BYTE PTR ds:[esi]
  410a6e:	and    ch,BYTE PTR [ebx+eiz*8]
  410a71:	mov    ds:0xeadf1448,eax
  410a76:	push   esp
  410a77:	pushf  
  410a78:	outs   dx,DWORD PTR ds:[esi]
  410a79:	or     edx,ebx
  410a7b:	js     0x410a4d
  410a7d:	adc    eax,0xdf5dc17f
  410a82:	gs test eax,0xcc668623
  410a88:	stc    
  410a89:	shl    bl,cl
  410a8b:	sbb    esp,DWORD PTR [esi-0x1fac7fb8]
  410a91:	ficom  DWORD PTR [esi+0x0]
  410a94:	call   0x166f:0x7d2f3705
  410a9b:	xor    eax,0xf2ad2a6a
  410aa0:	fisub  WORD PTR [eax]
  410aa2:	push   0xffffffee
  410aa4:	bound  ebp,QWORD PTR ds:0x560601af
  410aaa:	lahf   
  410aab:	jno    0x410afb
  410aad:	jne    0x410af8
  410aaf:	xor    eax,ecx
  410ab1:	in     eax,dx
  410ab2:	mov    bh,BYTE PTR [edx+0x60295a75]
  410ab8:	leave  
  410ab9:	rcr    BYTE PTR [edx+ebp*4-0x22],cl
  410abd:	bound  edi,QWORD PTR ds:0x94239d29
  410ac3:	xchg   ecx,eax
  410ac4:	jmp    0x410b06
  410ac6:	ss push ss
  410ac8:	lahf   
  410ac9:	rol    DWORD PTR [ecx-0x46],1
  410acc:	and    eax,DWORD PTR [edi-0x35dcf42b]
  410ad2:	inc    eax
  410ad3:	out    0xb2,eax
  410ad5:	sbb    dl,BYTE PTR [ebx-0x5131a6e2]
  410adb:	(bad)  
  410adc:	(bad)  
  410add:	enter  0x91b8,0xe5
  410ae1:	inc    edx
  410ae2:	mov    WORD PTR [esi-0x58a81ac6],?
  410ae8:	gs enter 0x4ed8,0x99
  410aed:	mov    ch,0x24
  410aef:	hlt    
  410af0:	into   
  410af1:	xchg   DWORD PTR [edi-0x69f9fc77],esp
  410af7:	cdq    
  410af8:	pushf  
  410af9:	add    eax,0x75a0f896
  410afe:	imul   eax,DWORD PTR [esi],0x5b
  410b01:	xlat   BYTE PTR es:[ebx]
  410b03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b04:	push   ds
  410b05:	jbe    0x410b40
  410b07:	leave  
  410b08:	jge    0x410abd
  410b0a:	mov    esp,0x9f1e3a2a
  410b0f:	xchg   ebx,eax
  410b10:	stc    
  410b11:	sub    dh,BYTE PTR [ebx-0x56]
  410b14:	test   eax,0x60a8270f
  410b19:	daa    
  410b1a:	and    BYTE PTR gs:[esi+0x262d4b4d],0x6
  410b22:	cli    
  410b23:	sbb    eax,0x483c364a
  410b28:	loop   0x410b7b
  410b2a:	inc    ebx
  410b2b:	jmp    0x9a9bf3a9
  410b30:	fimul  DWORD PTR [ebp-0x5]
  410b33:	sbb    eax,DWORD PTR [eax-0x3634c3bc]
  410b39:	stos   DWORD PTR es:[edi],eax
  410b3a:	lea    ebx,ds:0xa8a3513a
  410b40:	ds ss retf 
  410b43:	(bad)  
  410b44:	cmp    BYTE PTR [ecx],cl
  410b46:	and    ah,BYTE PTR [edx+0x3a564f0d]
  410b4c:	and    al,0x48
  410b4e:	pop    esi
  410b4f:	mov    al,ds:0x9ef9b22
  410b54:	pop    esp
  410b55:	push   ecx
  410b56:	(bad)  
  410b57:	mov    cl,0x8f
  410b59:	mov    ds:0x252514d6,eax
  410b5e:	in     al,0x8
  410b60:	cmp    dh,BYTE PTR [edx+0x13]
  410b63:	jb     0x410b4e
  410b65:	push   edx
  410b66:	es mov cl,0x84
  410b69:	jmp    0x410b42
  410b6b:	mov    edi,0x13010d79
  410b70:	adc    cl,BYTE PTR [edx]
  410b72:	jbe    0x410bcb
  410b74:	pmuludq mm5,QWORD PTR [ebp+ecx*8-0x1a]
  410b79:	jo     0x410b0c
  410b7b:	lds    esp,FWORD PTR [edx-0x7bcc3409]
  410b81:	scas   al,BYTE PTR es:[edi]
  410b82:	cmc    
  410b83:	push   0x77
  410b85:	in     eax,0x26
  410b87:	cmp    ebp,DWORD PTR ds:0x7e896de8
  410b8d:	push   eax
  410b8e:	stc    
  410b8f:	cmp    BYTE PTR [ebx+0x58839d27],bh
  410b95:	cdq    
  410b96:	dec    ebp
  410b97:	mov    ch,0x55
  410b99:	mov    edi,0x9bf89ba
  410b9e:	int    0x92
  410ba0:	push   esi
  410ba1:	rcl    BYTE PTR [edx+0x50fe27a4],1
  410ba7:	(bad)  
  410baa:	sub    dh,BYTE PTR [edi+ecx*2]
  410bad:	add    bl,BYTE PTR [edx+0x1677e8b1]
  410bb3:	sahf   
  410bb4:	or     edx,DWORD PTR [ebp-0x52]
  410bb7:	cmp    al,0xa8
  410bb9:	in     ax,0x81
  410bbc:	jne    0x410c27
  410bbe:	mov    esi,0x201c419b
  410bc3:	popf   
  410bc4:	inc    esi
  410bc5:	dec    ebp
  410bc6:	or     edx,DWORD PTR [edx]
  410bc8:	push   eax
  410bc9:	adc    al,0x8a
  410bcb:	xchg   edi,eax
  410bcc:	rol    DWORD PTR [edi],1
  410bce:	push   eax
  410bcf:	sub    edi,ecx
  410bd1:	mov    ebx,0x5b45f7fb
  410bd6:	pop    ecx
  410bd7:	outs   dx,BYTE PTR ds:[esi]
  410bd8:	lahf   
  410bd9:	std    
  410bda:	xlat   BYTE PTR ds:[ebx]
  410bdb:	retf   0x1202
  410bde:	xor    BYTE PTR [eax],ch
  410be0:	arpl   WORD PTR [eax-0x33],ax
  410be3:	inc    ebp
  410be4:	sub    DWORD PTR [ebx+0x6353925a],0x6115f1c4
  410bee:	cmp    BYTE PTR [edi],cl
  410bf0:	jge    0x410c58
  410bf2:	jmp    0xa0df9c08
  410bf7:	xlat   BYTE PTR ds:[ebx]
  410bf8:	xchg   edi,eax
  410bf9:	or     DWORD PTR [eax+0x749c8ac7],0x493bcf23
  410c03:	dec    esi
  410c04:	ins    DWORD PTR es:[edi],dx
  410c05:	mov    cl,BYTE PTR [edi-0x89ea29a]
  410c0b:	cmc    
  410c0c:	push   eax
  410c0d:	aas    
  410c0e:	pop    edi
  410c0f:	mov    esi,0xe0c8063
  410c14:	cmp    eax,0xf54e8e20
  410c19:	xchg   ecx,eax
  410c1a:	add    esp,ecx
  410c1c:	into   
  410c1d:	jbe    0x410be1
  410c1f:	sub    ebx,DWORD PTR [edi+0x77]
  410c22:	push   cs
  410c23:	js     0x410c9f
  410c25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c26:	lea    ebx,[ecx]
  410c28:	jecxz  0x410bf6
  410c2a:	push   cs
  410c2b:	sbb    BYTE PTR [eax+esi*4],dl
  410c2e:	fistp  DWORD PTR [ebp+edx*2-0x3035e76b]
  410c35:	inc    ecx
  410c36:	inc    ebx
  410c37:	sbb    DWORD PTR [ecx+0x1327e47e],ecx
  410c3d:	fdiv   DWORD PTR [edx]
  410c3f:	les    edx,FWORD PTR [esi+0xd]
  410c42:	adc    BYTE PTR [edi-0x68b1f549],al
  410c48:	or     al,0xf1
  410c4a:	sbb    al,0x56
  410c4c:	outs   dx,BYTE PTR ds:[esi]
  410c4d:	pop    ebp
  410c4e:	rcl    DWORD PTR [edx],cl
  410c50:	imul   edx,DWORD PTR [edx],0x25
  410c53:	mov    bh,0x5a
  410c55:	mov    cl,0x47
  410c57:	and    esp,ecx
  410c59:	mov    dh,0xec
  410c5b:	shl    DWORD PTR [ecx+0x3e],1
  410c5e:	push   ebp
  410c5f:	loopne 0x410c6f
  410c61:	fild   DWORD PTR [edi+edx*2]
  410c64:	mov    dl,0x9
  410c66:	ss push ecx
  410c68:	fucomi st,st(5)
  410c6a:	mul    DWORD PTR ds:0xe04146b5
  410c70:	sahf   
  410c71:	cmc    
  410c72:	mov    ch,0xa8
  410c74:	data16 jge 0x410c14
  410c77:	mov    esi,0x5324b3cb
  410c7c:	mov    al,0x28
  410c7e:	xor    BYTE PTR [edx],ah
  410c80:	hlt    
  410c81:	jnp    0x410c80
  410c83:	and    BYTE PTR [ecx-0x27],bh
  410c86:	push   ecx
  410c87:	adc    ebx,DWORD PTR [ebp-0x4c571be1]
  410c8d:	inc    edx
  410c8e:	sub    bh,dh
  410c90:	mov    ah,0x1d
  410c92:	imul   ebx,DWORD PTR [esi+0x522bfb6c],0x278aedb9
  410c9c:	jge    0x410cdc
  410c9e:	repnz xlat BYTE PTR ds:[ebx]
  410ca0:	add    al,0x75
  410ca2:	ss add edx,esi
  410ca5:	fstp   st(1)
  410ca7:	inc    ecx
  410ca8:	push   edx
  410ca9:	or     BYTE PTR [ebp-0x2252db06],dh
  410caf:	(bad)  
  410cb0:	std    
  410cb1:	ja     0x410cff
  410cb3:	idiv   BYTE PTR es:[esi]
  410cb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cb7:	sbb    ch,BYTE PTR [ebp+0x68]
  410cba:	jb     0x410cab
  410cbc:	das    
  410cbd:	in     al,0x6c
  410cbf:	fs retf 0x44fd
  410cc3:	mov    eax,0xd319ab29
  410cc8:	jno    0x410d1c
  410cca:	out    0xd8,al
  410ccc:	popa   
  410ccd:	sub    ebx,esp
  410ccf:	jno    0x410c6f
  410cd1:	data16 aas 
  410cd3:	lock cmc 
  410cd5:	in     eax,0x44
  410cd7:	pop    edx
  410cd8:	aaa    
  410cd9:	fsubr  DWORD PTR ds:0x77f2b46f
  410cdf:	jns    0x410ca2
  410ce1:	cdq    
  410ce2:	aad    0xbc
  410ce4:	xchg   BYTE PTR [eax],ch
  410ce6:	arpl   si,bx
  410ce8:	mov    esi,?
  410cea:	jp     0x410d5b
  410cec:	push   ds
  410ced:	fidivr DWORD PTR [edx+ecx*1-0x74]
  410cf1:	pop    edi
  410cf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cf3:	cmp    edi,eax
  410cf5:	add    BYTE PTR [ecx-0x62],dh
  410cf8:	inc    edi
  410cf9:	je     0x410cb7
  410cfb:	pop    edi
  410cfc:	std    
  410cfd:	xchg   ebx,eax
  410cfe:	enter  0x6a76,0xcc
  410d02:	fld    DWORD PTR [ebp+0x52]
  410d05:	push   es
  410d06:	mov    dh,0xf2
  410d08:	call   0xeba2:0x8b8ce8e9
  410d0f:	lods   eax,DWORD PTR cs:[esi]
  410d11:	cmp    eax,0xdb1b4e7a
  410d16:	inc    edx
  410d17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d18:	sbb    DWORD PTR [eax+esi*4],esp
  410d1b:	int3   
  410d1c:	leave  
  410d1d:	neg    esp
  410d1f:	cmp    BYTE PTR [eax+0x5b],0x86
  410d23:	and    eax,DWORD PTR [ebx+eiz*1+0x5c]
  410d27:	xor    eax,0xcf748305
  410d2c:	dec    eax
  410d2d:	mov    ds:0xc9daf3ec,al
  410d32:	mov    ebp,0x42a7754d
  410d37:	inc    ebx
  410d38:	imul   ebx,edi,0xef82409e
  410d3e:	out    dx,eax
  410d3f:	mov    ch,0x91
  410d41:	dec    ebp
  410d42:	ja     0x410d0e
  410d44:	xlat   BYTE PTR ds:[ebx]
  410d45:	ror    DWORD PTR [ecx+0x53],1
  410d48:	pushf  
  410d49:	(bad)  
  410d4a:	sub    al,0xad
  410d4c:	and    al,ch
  410d4e:	stos   BYTE PTR es:[edi],al
  410d4f:	dec    ecx
  410d50:	lods   al,BYTE PTR ds:[esi]
  410d51:	and    eax,0x551572bc
  410d56:	cmp    ch,bh
  410d58:	xchg   BYTE PTR [esi],cl
  410d5a:	scas   eax,DWORD PTR es:[edi]
  410d5b:	out    dx,eax
  410d5c:	jo     0x410d09
  410d5e:	aam    0x10
  410d60:	mov    bl,0x2
  410d62:	pop    ebp
  410d63:	dec    ecx
  410d64:	mov    dl,0xa3
  410d66:	test   al,0x81
  410d68:	xchg   esp,eax
  410d69:	inc    edi
  410d6a:	dec    ebp
  410d6b:	(bad)  
  410d6c:	mov    eax,ds:0x61bf1194
  410d71:	sahf   
  410d72:	mov    bh,0xe8
  410d74:	out    dx,eax
  410d75:	enter  0x950a,0x2f
  410d79:	in     eax,0x13
  410d7b:	xchg   ebp,eax
  410d7c:	dec    edx
  410d7d:	mov    ebx,0x4ba5e81e
  410d83:	(bad)  
  410d84:	cdq    
  410d85:	dec    ecx
  410d86:	clc    
  410d87:	push   edx
  410d88:	push   esp
  410d89:	mov    dl,0x96
  410d8b:	or     al,0x6e
  410d8d:	fdivp  st(0),st
  410d8f:	mov    ah,0x38
  410d91:	and    dl,BYTE PTR [esi-0x61cbca02]
  410d97:	sub    al,0x56
  410d99:	jno    0x410dab
  410d9b:	outs   dx,BYTE PTR ds:[esi]
  410d9c:	mov    edx,gs
  410d9e:	imul   edx,DWORD PTR [edx+0x6e277781],0xffffffd8
  410da5:	enter  0x39bc,0x8
  410da9:	adc    BYTE PTR [edi-0x1117a9cc],ch
  410daf:	dec    eax
  410db0:	pop    edi
  410db1:	and    dl,BYTE PTR [ecx]
  410db3:	loopne 0x410e23
  410db5:	xor    al,0x1e
  410db7:	sub    DWORD PTR [edx-0x675d4db3],ebp
  410dbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410dbe:	inc    ebx
  410dbf:	pop    esi
  410dc0:	test   eax,0x1d4fcd5f
  410dc5:	push   es
  410dc6:	fwait
  410dc7:	add    eax,0x6548bc83
  410dcd:	ins    BYTE PTR es:[edi],dx
  410dce:	les    esi,FWORD PTR [edi]
  410dd0:	sub    al,0x10
  410dd2:	pop    esp
  410dd3:	push   ecx
  410dd4:	mov    gs,WORD PTR [ecx-0x1d]
  410dd7:	push   ebp
  410dd8:	ret    0xda16
  410ddb:	cs in  eax,0xa7
  410dde:	cmp    DWORD PTR [esi+0x254780cf],0xa80497d4
  410de8:	mov    ecx,0x7cf848fc
  410ded:	int    0xb1
  410def:	mov    DWORD PTR [esp-0x55],esp
  410df3:	aas    
  410df4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410df5:	sbb    BYTE PTR ds:0x1ad0e400,dl
  410dfb:	add    ebx,DWORD PTR [esi-0x55cabef7]
  410e01:	xchg   ebp,eax
  410e02:	and    esp,ebp
  410e04:	mov    bh,0xd7
  410e06:	mov    esi,edx
  410e08:	or     al,BYTE PTR [ebp-0x2]
  410e0b:	sbb    bl,BYTE PTR [esp+esi*4]
  410e0e:	mov    DWORD PTR [ecx-0x5a],esp
  410e11:	lods   al,BYTE PTR ds:[esi]
  410e12:	add    eax,0xbaea08a
  410e17:	imul   eax,DWORD PTR [edi],0xffffffd9
  410e1a:	icebp  
  410e1b:	jns    0x410e92
  410e1d:	sbb    al,0xd0
  410e1f:	les    ebx,FWORD PTR [edi+0x0]
  410e22:	clc    
  410e23:	jns    0x410df4
  410e25:	fcomp  st(4)
  410e27:	xlat   BYTE PTR ds:[ebx]
  410e28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e29:	inc    ebx
  410e2a:	hlt    
  410e2b:	mov    bh,0xa8
  410e2d:	dec    ebp
  410e2e:	jmp    0x1af4:0xd1216302
  410e35:	sbb    edx,DWORD PTR [edx+0x58]
  410e38:	fwait
  410e39:	rcr    ah,cl
  410e3b:	out    dx,eax
  410e3c:	push   0xffffff90
  410e3e:	mov    bh,0x54
  410e40:	ret    0xe559
  410e43:	std    
  410e44:	dec    esp
  410e45:	rcr    DWORD PTR [eax],cl
  410e47:	out    dx,eax
  410e48:	inc    eax
  410e49:	out    0x36,eax
  410e4b:	pop    ds
  410e4c:	xor    al,0xb4
  410e4e:	cdq    
  410e4f:	cmp    ebx,DWORD PTR [edi-0x31]
  410e52:	mov    cs,WORD PTR ds:0xd10dcdaf
  410e58:	adc    BYTE PTR [edi-0x59417738],0x9d
  410e5f:	xchg   esp,eax
  410e60:	xadd   ecx,esp
  410e63:	xlat   BYTE PTR ds:[ebx]
  410e64:	add    edx,DWORD PTR [ebx+ecx*1]
  410e67:	aad    0x5f
  410e69:	ins    DWORD PTR es:[edi],dx
  410e6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e6b:	jmp    0xe0b3fba3
  410e70:	push   ss
  410e71:	mov    al,0x88
  410e73:	mov    edx,0x61aedac5
  410e78:	mov    eax,DWORD PTR [ebx-0x48]
  410e7b:	sbb    bl,BYTE PTR [ecx-0x7a]
  410e7e:	pop    ecx
  410e7f:	and    al,0xe2
  410e81:	out    0x38,al
  410e83:	int3   
  410e84:	out    0x24,eax
  410e86:	fistp  WORD PTR [edx+0x40437746]
  410e8c:	test   DWORD PTR [edi+0x67],ebp
  410e8f:	dec    esi
  410e90:	pop    ds
  410e91:	jb     0x410ed5
  410e93:	mov    WORD PTR [ebp+ecx*1+0x71],?
  410e97:	ficomp DWORD PTR [ebp+0x4b956875]
  410e9d:	adc    al,0x82
  410e9f:	icebp  
  410ea0:	mov    esp,DWORD PTR [eax]
  410ea2:	in     eax,0xd2
  410ea4:	mov    esp,0x43b0dcaa
  410ea9:	xchg   ebp,eax
  410eaa:	out    0x5a,al
  410eac:	addr16 or ebx,edi
  410eaf:	enter  0xb49e,0x82
  410eb3:	icebp  
  410eb4:	aaa    
  410eb5:	nop
  410eb6:	test   al,0x54
  410eb8:	retf   0xa2e1
  410ebb:	mov    ch,0x73
  410ebd:	xchg   ebp,eax
  410ebe:	xor    esp,DWORD PTR [edi+0x7b]
  410ec1:	and    esi,DWORD PTR [ebx+0x492172f1]
  410ec7:	fdiv   QWORD PTR [ecx]
  410ec9:	or     esi,DWORD PTR [edi+0x7b]
  410ecc:	jl     0x410e7f
  410ece:	mov    WORD PTR [edx],gs
  410ed0:	test   al,0x8f
  410ed2:	(bad)  
  410ed3:	mov    eax,DWORD PTR [edx]
  410ed5:	push   edi
  410ed6:	push   es
  410ed7:	push   ebp
  410ed8:	sahf   
  410ed9:	adc    edi,edx
  410edb:	adc    edx,esp
  410edd:	jno    0x410ecf
  410edf:	out    0x80,eax
  410ee1:	add    bl,BYTE PTR [esi+0x6a]
  410ee4:	mov    cl,0xe4
  410ee6:	ins    BYTE PTR es:[edi],dx
  410ee7:	mov    ds:0x8b41a1b8,eax
  410eec:	xchg   DWORD PTR [ecx+ebx*4],ebp
  410eef:	xchg   ecx,eax
  410ef0:	(bad)  
  410ef1:	into   
  410ef2:	into   
  410ef3:	icebp  
  410ef4:	sbb    al,0x8e
  410ef6:	fsqrt  
  410ef8:	test   al,0xf7
  410efa:	cwde   
  410efb:	add    al,BYTE PTR [edi+0x6629d3f]
  410f01:	jmp    0x39184558
  410f06:	mov    ds:0x18c28493,eax
  410f0b:	push   cs
  410f0c:	retf   0x886c
  410f0f:	cmp    dl,bh
  410f11:	pop    esp
  410f12:	cdq    
  410f13:	dec    edi
  410f14:	cld    
  410f15:	inc    edx
  410f16:	sub    eax,0xc646447
  410f1b:	jb     0x410ea7
  410f1d:	inc    ebp
  410f1e:	outs   dx,DWORD PTR ds:[esi]
  410f1f:	iret   
  410f20:	cld    
  410f21:	retf   0x72ad
  410f24:	sar    DWORD PTR [eax-0x6ac75271],cl
  410f2a:	cdq    
  410f2b:	arpl   bp,bp
  410f2d:	mov    ch,0x97
  410f2f:	jmp    0xdf62:0xc8090879
  410f36:	loope  0x410f00
  410f38:	push   ebx
  410f39:	sbb    ch,BYTE PTR [ecx+0x43]
  410f3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f3d:	and    esp,esi
  410f3f:	sbb    DWORD PTR [ebx-0x2d],edx
  410f42:	sbb    ah,0xbe
  410f45:	add    ebp,esi
  410f47:	(bad)  
  410f48:	mov    DWORD PTR [edi-0x19d966be],eax
  410f4e:	jecxz  0x410ed1
  410f50:	sbb    eax,0x84c2444a
  410f55:	xor    BYTE PTR [edx-0x552b4541],cl
  410f5b:	in     eax,dx
  410f5c:	xchg   dl,dl
  410f5e:	inc    ecx
  410f5f:	sahf   
  410f60:	cwde   
  410f61:	sub    DWORD PTR [edx-0x14],0x1eda7519
  410f68:	bound  edi,QWORD PTR [edi-0x4d]
  410f6b:	inc    esp
  410f6c:	jbe    0x410fca
  410f6e:	inc    esp
  410f6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f70:	adc    al,0x53
  410f72:	out    dx,al
  410f73:	jae    0x410fef
  410f75:	push   ebp
  410f76:	aaa    
  410f77:	sub    eax,DWORD PTR [ebp-0x4bcaef33]
  410f7d:	sbb    BYTE PTR [edx-0x46],0x92
  410f81:	jg     0x410f50
  410f83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f84:	jns    0x410f9a
  410f86:	ins    BYTE PTR es:[edi],dx
  410f87:	icebp  
  410f88:	mov    bh,0x17
  410f8a:	add    eax,0xb37066aa
  410f8f:	iret   
  410f90:	lods   al,BYTE PTR ds:[esi]
  410f91:	xchg   edi,eax
  410f92:	stos   DWORD PTR es:[edi],eax
  410f93:	pushf  
  410f94:	arpl   WORD PTR [esi-0x123d227b],si
  410f9a:	or     al,0x98
  410f9c:	cs jecxz 0x410f7d
  410f9f:	fwait
  410fa0:	and    al,0xbf
  410fa2:	in     al,0x9f
  410fa4:	(bad)  
  410fa5:	pop    ecx
  410fa6:	push   edi
  410fa7:	mov    esi,0xda7f7341
  410fac:	retf   0x9328
  410faf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fb0:	xor    al,0xb6
  410fb2:	and    bh,ah
  410fb4:	daa    
  410fb5:	(bad)  
  410fb6:	leave  
  410fb7:	jb     0x410fed
  410fb9:	jmp    0x410fc3
  410fbb:	add    al,0x2a
  410fbd:	inc    ebp
  410fbe:	fadd   DWORD PTR [esi+0x67]
  410fc1:	stos   BYTE PTR es:[edi],al
  410fc2:	leave  
  410fc3:	jo     0x410fb8
  410fc5:	sub    al,0x2
  410fc7:	inc    esi
  410fc8:	mov    ah,dl
  410fca:	dec    edi
  410fcb:	repz or eax,0xf2c132ca
  410fd1:	ins    BYTE PTR es:[edi],dx
  410fd2:	mov    eax,0x40baee81
  410fd7:	fs (bad) 
  410fd9:	cld    
  410fda:	addr16 mov ebx,0x4a5dbc66
  410fe0:	or     DWORD PTR cs:[edx+0x4a766ebd],esp
  410fe7:	add    edi,DWORD PTR [ebp+0x17]
  410fea:	push   0x469dae04
  410fef:	mov    eax,ds:0x8a33ec5b
  410ff4:	fdivr  DWORD PTR [ebx-0x53a8dfe9]
  410ffa:	push   ds
  410ffb:	lods   al,BYTE PTR ds:[esi]
  410ffc:	jbe    0x410fb6
  410ffe:	pop    esi
  410fff:	sub    eax,esi
  411001:	neg    bl
  411003:	xchg   edi,eax
  411004:	add    ah,BYTE PTR [esi]
  411006:	ins    BYTE PTR es:[edi],dx
  411007:	and    dl,bh
  411009:	sub    al,BYTE PTR [eax+0x68]
  41100c:	fucomi st,st(4)
  41100e:	jle    0x411073
  411010:	cmp    ebp,DWORD PTR [ecx+eax*4]
  411013:	dec    ebp
  411014:	sbb    ebx,DWORD PTR [edi+0x4f]
  411017:	rol    DWORD PTR [edx],1
  411019:	mov    BYTE PTR [ecx+0x20],dh
  41101c:	sbb    BYTE PTR [esi+ebx*1],dh
  41101f:	in     al,0x5e
  411021:	add    DWORD PTR [esi+ebx*2+0xa95169a],0xffffffbf
  411029:	and    ebp,DWORD PTR [edi-0x17236d70]
  41102f:	sbb    eax,0x7cda8254
  411034:	(bad)  
  411035:	pop    ecx
  411036:	data16 cmp al,0x2e
  411039:	adc    eax,0xde75d0dc
  41103e:	fucomp st(2)
  411040:	dec    edi
  411041:	adc    eax,0x18a91035
  411046:	mov    dl,0x61
  411048:	pop    ebx
  411049:	cmp    DWORD PTR [eax+0x58a2a503],ebx
  41104f:	jg     0x41100c
  411051:	nop
  411052:	imul   eax,DWORD PTR [edx],0xe90f09c9
  411058:	out    0x85,eax
  41105a:	aaa    
  41105b:	in     eax,dx
  41105c:	mov    ah,0x67
  41105e:	xchg   DWORD PTR [ebp-0x345affc1],ebx
  411064:	mov    esi,0x6281321a
  411069:	mov    dl,0x8
  41106b:	shl    BYTE PTR [eax-0x1b],0x5f
  41106f:	cmp    ebx,eax
  411071:	mov    dl,0x3d
  411073:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411074:	push   eax
  411075:	or     BYTE PTR [ebx+0x16],dh
  411078:	push   esi
  411079:	shr    DWORD PTR [ecx+0x7a5c1e2e],1
  41107f:	pushf  
  411080:	mov    ds:0x3b56293,eax
  411085:	mov    ch,0x60
  411087:	xor    dl,dh
  411089:	pop    esi
  41108a:	pop    ebx
  41108b:	addr16 pop es
  41108d:	stos   DWORD PTR es:[edi],eax
  41108e:	sub    ecx,DWORD PTR [edx+0x52e4ab53]
  411094:	pop    ss
  411095:	jbe    0x411022
  411097:	ja     0x41110a
  411099:	ret    
  41109a:	fs jno 0x411042
  41109d:	test   DWORD PTR ds:0x5a6264c7,esp
  4110a3:	ins    DWORD PTR es:[edi],dx
  4110a4:	push   esp
  4110a5:	(bad)  
  4110a6:	adc    BYTE PTR ds:0xbb2cc0f3,al
  4110ac:	sbb    BYTE PTR [edi],cl
  4110ae:	aaa    
  4110af:	add    al,0x9b
  4110b1:	test   al,0xf2
  4110b3:	or     al,0xb4
  4110b5:	sub    DWORD PTR [eax+0x73],eax
  4110b8:	(bad)  
  4110b9:	aad    0xbe
  4110bb:	mov    ds:0x384bcdb4,al
  4110c0:	(bad)  
  4110c1:	sbb    al,0xac
  4110c3:	pop    eax
  4110c4:	push   ss
  4110c5:	repz (bad) 
  4110c8:	push   0xffffffcf
  4110ca:	push   esp
  4110cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110cc:	scas   al,BYTE PTR es:[edi]
  4110cd:	cld    
  4110ce:	inc    eax
  4110cf:	pop    edi
  4110d0:	cli    
  4110d1:	xchg   BYTE PTR ds:0x8c760e09,ah
  4110d7:	cli    
  4110d8:	popa   
  4110d9:	xchg   BYTE PTR [edi],cl
  4110db:	sbb    edi,edx
  4110dd:	mov    esi,0xb3c7d5bb
  4110e2:	icebp  
  4110e3:	ins    BYTE PTR es:[edi],dx
  4110e4:	clc    
  4110e5:	rcl    DWORD PTR ds:0x9e241fdf,1
  4110eb:	fnstsw WORD PTR [ecx]
  4110ed:	adc    BYTE PTR [esi],bh
  4110ef:	sbb    edi,DWORD PTR [esi-0x1ea38b52]
  4110f5:	inc    edi
  4110f6:	(bad)  
  4110f7:	call   0x2c33:0x12664a56
  4110fe:	ja     0x4110d2
  411100:	daa    
  411101:	enter  0xc35f,0x27
  411105:	sbb    eax,0xbfe3d8f1
  41110a:	shr    BYTE PTR [ebp-0x148a32],cl
  411110:	fild   WORD PTR [edi-0x62cbbdd2]
  411116:	lds    edx,FWORD PTR [esp+ecx*1+0x54]
  41111a:	jno    0x411151
  41111c:	xchg   esi,eax
  41111d:	sub    BYTE PTR [ebp-0x1e],ah
  411120:	bound  esi,QWORD PTR [eax]
  411122:	xchg   edi,ebx
  411124:	xor    ah,ch
  411126:	pop    esp
  411127:	xchg   DWORD PTR [ecx-0x6bb613ec],ebp
  41112d:	inc    ebx
  41112e:	stos   BYTE PTR es:[edi],al
  41112f:	outs   dx,BYTE PTR ds:[esi]
  411130:	adc    DWORD PTR [ecx-0x7a],eax
  411133:	jmp    0xa29181c5
  411138:	fdiv   QWORD PTR [edi]
  41113a:	add    BYTE PTR [edi],bl
  41113c:	xor    BYTE PTR [eax],al
  41113e:	xchg   ecx,eax
  41113f:	data16 lods al,BYTE PTR ds:[esi]
  411141:	nop
  411142:	and    BYTE PTR [ebx],ch
  411144:	sub    edi,eax
  411146:	sbb    ebp,edi
  411148:	mov    DWORD PTR [ecx+0x113be290],ebx
  41114e:	adc    al,0xed
  411150:	mov    al,0x29
  411152:	ficom  DWORD PTR [ebp-0x5c]
  411155:	fbld   TBYTE PTR [ebp-0x5a01c7]
  41115b:	imul   edi,esp,0x10
  41115e:	and    DWORD PTR [eax+0x2480a907],ebp
  411164:	pop    ebx
  411165:	or     al,0x4c
  411167:	retf   
  411168:	and    dh,BYTE PTR [ebx]
  41116a:	or     DWORD PTR [esi-0x6e],esi
  41116d:	push   ds
  41116e:	push   eax
  41116f:	stos   DWORD PTR es:[edi],eax
  411170:	mov    dh,0xef
  411172:	cmp    esi,DWORD PTR [ebx+0x30843bf4]
  411178:	gs test eax,0x99f5bf9c
  41117e:	test   DWORD PTR [edi],0x7ffb5950
  411184:	mov    ebx,0xbb6ea1ae
  411189:	shr    BYTE PTR [ecx+0x15f3dc2c],1
  41118f:	jae    0x4111fa
  411191:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411192:	jae    0x411142
  411194:	dec    ebp
  411195:	hlt    
  411196:	adc    edx,0xffffffc4
  411199:	pop    ebx
  41119a:	push   cs
  41119b:	mul    BYTE PTR [ecx-0x25]
  41119e:	xor    edx,eax
  4111a0:	sbb    DWORD PTR [edi],ecx
  4111a2:	dec    edi
  4111a3:	call   0xe23e:0x788c95a4
  4111aa:	(bad)  
  4111ab:	maxps  xmm1,xmm4
  4111ae:	or     BYTE PTR [edx-0x1],0xad
  4111b2:	fidiv  DWORD PTR [edi]
  4111b4:	sub    eax,0x4da9b269
  4111b9:	inc    esp
  4111ba:	test   BYTE PTR [eax+edx*1-0x65d7cd1f],0x49
  4111c2:	ret    0x4b2a
  4111c5:	pop    esi
  4111c6:	lahf   
  4111c7:	mov    bh,0x5e
  4111c9:	and    ch,BYTE PTR [esi-0x64]
  4111cc:	lahf   
  4111cd:	mov    bh,BYTE PTR [ecx+eiz*8-0x55d91db6]
  4111d4:	je     0x41120a
  4111d6:	cld    
  4111d7:	adc    DWORD PTR [ebx-0x3a],esp
  4111da:	jnp    0x41122f
  4111dc:	xchg   DWORD PTR [ecx+0x4d49145],ecx
  4111e2:	pop    ebp
  4111e3:	std    
  4111e4:	xchg   ebx,eax
  4111e5:	dec    edx
  4111e6:	fcom   DWORD PTR [eax+ebp*1+0x7330eca2]
  4111ed:	(bad)  
  4111ef:	sub    ebp,DWORD PTR [eax-0x23658b9d]
  4111f5:	adc    cl,BYTE PTR [ebp-0x2d]
  4111f8:	or     al,0xe8
  4111fa:	mov    ebp,0x6ada7491
  4111ff:	or     bh,cl
  411201:	jmp    0xf2d7e54
  411206:	(bad)  
  411208:	jg     0x411237
  41120a:	(bad)  
  41120c:	adc    al,0xd7
  41120e:	outs   dx,BYTE PTR ds:[esi]
  41120f:	xchg   BYTE PTR [ebp-0x5e],cl
  411212:	pop    edi
  411213:	sbb    DWORD PTR [edx+esi*4],0x75
  411217:	mov    ah,0x8e
  411219:	(bad)  
  41121a:	jnp    0x4111ae
  41121c:	inc    edi
  41121d:	xchg   BYTE PTR [edx-0x9],ch
  411220:	out    0xab,al
  411222:	cs ret 0x2e2f
  411226:	repnz arpl WORD PTR [eax],bx
  411229:	loop   0x411262
  41122b:	add    BYTE PTR [edi-0x69fb215e],ah
  411231:	mov    al,ds:0x79ff8fb
  411236:	and    edi,DWORD PTR [eax+ecx*2-0x3c2f4452]
  41123d:	popa   
  41123e:	jns    0x411297
  411240:	retf   0xda12
  411243:	mov    edi,0x5c19eaf5
  411248:	add    eax,0xa952da83
  41124d:	imul   eax,DWORD PTR [ecx],0xfffffff3
  411250:	sub    al,0x4e
  411252:	out    dx,eax
  411253:	fild   DWORD PTR [ecx+0x5f53443c]
  411259:	jp     0x4111f4
  41125b:	or     bh,BYTE PTR [ebp-0x7a0ef50e]
  411261:	loopne 0x411246
  411263:	test   eax,0xfef8efbb
  411268:	dec    edx
  411269:	xor    DWORD PTR [edx+esi*2-0x3c87f331],edx
  411270:	ror    DWORD PTR [eax],0x98
  411273:	cmp    DWORD PTR [esi-0x59],edx
  411276:	lock pop eax
  411278:	les    esi,FWORD PTR [eax]
  41127a:	fadd   DWORD PTR [ebx+edx*2+0x6e3670a]
  411281:	adc    al,0x6b
  411283:	stc    
  411284:	adc    al,dh
  411286:	jo     0x4112a2
  411288:	inc    edx
  411289:	sub    al,0x1
  41128b:	(bad)  
  41128c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41128d:	dec    ebx
  41128e:	into   
  41128f:	ds jl  0x411289
  411292:	inc    ebx
  411293:	dec    edi
  411294:	test   BYTE PTR ds:0xce66a952,bh
  41129a:	lds    ecx,FWORD PTR [ecx+0x573531e3]
  4112a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112a1:	pop    ecx
  4112a2:	inc    esp
  4112a3:	(bad)  
  4112a4:	push   ecx
  4112a5:	mov    eax,0x8c6c75ae
  4112aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112ab:	popa   
  4112ac:	lds    edx,FWORD PTR [ebx-0x12]
  4112af:	(bad)  
  4112b0:	out    dx,eax
  4112b1:	xor    BYTE PTR [eax+ebp*1-0x4ace1661],0x40
  4112b9:	das    
  4112ba:	rol    DWORD PTR [ebp+0x27],1
  4112bd:	into   
  4112be:	ins    BYTE PTR es:[edi],dx
  4112bf:	xchg   ecx,eax
  4112c0:	dec    ebx
  4112c1:	dec    ebp
  4112c2:	and    BYTE PTR [edi+0x3e],dh
  4112c5:	or     eax,0x62d00639
  4112ca:	sub    ebp,esp
  4112cc:	into   
  4112cd:	inc    eax
  4112ce:	mov    dh,0x9c
  4112d0:	and    al,0x1b
  4112d2:	inc    ecx
  4112d3:	iret   
  4112d4:	mov    WORD PTR [ebx],?
  4112d6:	pop    eax
  4112d7:	xchg   esi,eax
  4112d8:	mov    ds:0x596c265b,al
  4112dd:	and    DWORD PTR [ebx+edx*1-0x4f9aa0ca],ebx
  4112e4:	xchg   ecx,eax
  4112e5:	test   eax,0x82093dff
  4112ea:	add    DWORD PTR [ebp-0x33904d4],edx
  4112f0:	cmp    al,0xe6
  4112f2:	xor    al,0x78
  4112f4:	or     BYTE PTR [eax-0x4bc04d6d],ch
  4112fa:	inc    ecx
  4112fb:	shl    DWORD PTR [esi+edi*2+0x3fe7b55f],cl
  411302:	mov    al,0x81
  411304:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411305:	push   edi
  411306:	data16 (bad) 
  411308:	xchg   ecx,eax
  411309:	rol    DWORD PTR [eax-0x52],1
  41130c:	test   eax,0x8300d92c
  411311:	dec    DWORD PTR ds:0x5e269dc9
  411317:	clc    
  411318:	rcl    DWORD PTR [edi+eiz*2-0x7b],cl
  41131c:	dec    edx
  41131d:	imul   eax,DWORD PTR [eax],0x1794f719
  411323:	ret    
  411324:	jmp    0x411375
  411326:	xchg   edx,eax
  411327:	ds jg  0x4112ca
  41132a:	mov    BYTE PTR [ebx-0x759f56d1],ah
  411330:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411331:	rcl    bl,cl
  411333:	adc    edi,esi
  411335:	push   eax
  411336:	hlt    
  411337:	out    dx,eax
  411338:	xor    ebp,DWORD PTR ds:[ecx]
  41133b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41133c:	ret    0xb71a
  41133f:	(bad)  
  411340:	push   eax
  411341:	add    esp,DWORD PTR [edx]
  411343:	jmp    0x2145:0xfaede4f2
  41134a:	retf   
  41134b:	jns    0x411329
  41134d:	fdiv   st,st(0)
  41134f:	dec    ebp
  411350:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411351:	jl     0x4113bb
  411353:	fist   WORD PTR [ecx]
  411355:	push   ebx
  411356:	nop
  411357:	sbb    ah,ah
  411359:	loope  0x41137d
  41135b:	gs xchg esp,eax
  41135d:	bound  edi,QWORD PTR [ebx]
  41135f:	imul   edx,esp,0xcb823567
  411365:	sub    BYTE PTR [edx-0x1a],0xb6
  411369:	or     al,0x4a
  41136b:	jle    0x4113e7
  41136d:	rcl    DWORD PTR [eax+0x5],1
  411370:	add    al,0xb
  411372:	mov    dh,dh
  411374:	sub    esp,DWORD PTR [ecx+0x4a]
  411377:	adc    al,0x48
  411379:	std    
  41137a:	or     al,0x3b
  41137c:	adc    al,0xa8
  41137e:	repz bound edx,QWORD PTR [ebp+eiz*8+0x224fa98d]
  411386:	inc    edi
  411387:	addr16 or al,0x4d
  41138a:	push   esi
  41138b:	jmp    0x4113f5
  41138d:	mov    DWORD PTR [esi+edi*2+0x231579a5],esi
  411394:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411395:	mov    ds:0xbf9e6a18,eax
  41139a:	adc    ebp,ebx
  41139c:	dec    edi
  41139d:	mov    bl,0xba
  41139f:	xor    BYTE PTR [ebx],cl
  4113a1:	or     ecx,DWORD PTR [ecx+0xc7f6c73]
  4113a7:	es mov dl,0x88
  4113aa:	push   esi
  4113ab:	loop   0x411406
  4113ad:	add    al,0x49
  4113af:	aaa    
  4113b0:	neg    BYTE PTR [ebx]
  4113b2:	mov    esi,0xcffafa95
  4113b7:	push   ecx
  4113b8:	jmp    0x4113c2
  4113ba:	popa   
  4113bb:	mov    ch,dl
  4113bd:	sub    eax,0xbddf887a
  4113c2:	arpl   cx,bx
  4113c4:	xor    BYTE PTR ds:0x4a11e253,bh
  4113ca:	dec    esp
  4113cb:	jecxz  0x411373
  4113cd:	sbb    edi,ecx
  4113cf:	test   ah,0x58
  4113d2:	popf   
  4113d3:	cmp    DWORD PTR cs:[edi],eax
  4113d6:	call   0xa45a01e9
  4113db:	dec    edx
  4113dc:	push   esp
  4113dd:	lods   al,BYTE PTR ds:[esi]
  4113de:	in     al,0x49
  4113e0:	(bad)
  4113e4:	and    BYTE PTR [esi],ch
  4113e6:	xchg   esi,eax
  4113e7:	fiadd  WORD PTR [eax+0x69d89a2]
  4113ed:	push   ecx
  4113ee:	mov    al,0xb2
  4113f0:	inc    ecx
  4113f1:	cmp    DWORD PTR [ecx-0x6],0x15f3a7dd
  4113f8:	stos   DWORD PTR es:[edi],eax
  4113f9:	aad    0xf1
  4113fb:	cmp    DWORD PTR [edi-0x4e],ebp
  4113fe:	arpl   WORD PTR [edi],bp
  411400:	inc    esp
  411401:	and    BYTE PTR [ebx+0x2f0a5e23],bh
  411407:	loop   0x411399
  411409:	imul   ebp,DWORD PTR [eax-0x556390f5],0xffffff8e
  411410:	stos   DWORD PTR es:[edi],eax
  411411:	pop    esi
  411412:	mov    bh,0x27
  411414:	rcr    BYTE PTR [ecx+0x42],0x73
  411418:	push   esp
  411419:	mov    cl,0x69
  41141b:	add    al,0x2b
  41141d:	mov    ds:0x9ba2d14,al
  411422:	aas    
  411423:	aaa    
  411424:	xchg   edx,esi
  411426:	imul   ecx,DWORD PTR [ecx+0xe],0xaf47d26a
  41142d:	xchg   esp,eax
  41142e:	xor    ebp,DWORD PTR [ebx+ecx*8]
  411431:	inc    ecx
  411432:	push   ecx
  411433:	jmp    0x7ce4427c
  411438:	xchg   BYTE PTR [eax+edi*1],bl
  41143b:	leave  
  41143c:	add    ch,0x14
  41143f:	inc    esi
  411440:	stos   BYTE PTR es:[di],al
  411442:	sahf   
  411443:	call   0xb28345b
  411448:	sbb    BYTE PTR [ecx],ch
  41144a:	daa    
  41144b:	lds    eax,FWORD PTR [ebp-0x2e6f0bf9]
  411451:	loop   0x4114c0
  411453:	inc    edx
  411454:	jp     0x4113f0
  411456:	mov    dl,BYTE PTR [ecx]
  411458:	mov    cl,0x9c
  41145a:	sub    bh,BYTE PTR [esi+0x1df0f025]
  411460:	xchg   ebp,eax
  411461:	and    BYTE PTR [ecx+0x7e],dl
  411464:	icebp  
  411465:	inc    ebx
  411466:	in     eax,dx
  411467:	(bad)  
  411468:	stos   DWORD PTR es:[edi],eax
  411469:	inc    ebx
  41146a:	fimul  DWORD PTR [edi+0x3b4b6d57]
  411470:	sbb    ebx,0xf102db
  411476:	je     0x411416
  411478:	xchg   edx,eax
  411479:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41147a:	inc    ebp
  41147b:	ficom  WORD PTR [ecx]
  41147d:	les    eax,FWORD PTR [eax]
  41147f:	dec    esi
  411480:	imul   eax,esp,0x18
  411483:	dec    eax
  411484:	clc    
  411485:	aad    0xe0
  411487:	xor    dh,cl
  411489:	jge    0x4114fa
  41148b:	pop    ds
  41148c:	add    DWORD PTR [ebx+0x37262f0b],esp
  411492:	or     al,0x6c
  411494:	shl    bh,cl
  411496:	xchg   ebx,eax
  411497:	stc    
  411498:	(bad)  
  411499:	loopne 0x4114d7
  41149b:	add    BYTE PTR [ebx],dl
  41149d:	add    BYTE PTR [esi],dh
  41149f:	mov    dl,0xbe
  4114a1:	push   cs
  4114a2:	imul   esi,DWORD PTR [ecx+0x665603d0],0x9e4eb94
  4114ac:	repnz cmp ah,0xdc
  4114b0:	jbe    0x4114ca
  4114b2:	ret    
  4114b3:	enter  0x2c32,0x26
  4114b7:	inc    edi
  4114b8:	fwait
  4114b9:	scas   al,BYTE PTR es:[edi]
  4114ba:	fcomp  QWORD PTR [edi+ebx*4-0x45]
  4114be:	cmp    al,BYTE PTR [edi+0x3dd06262]
  4114c4:	cmp    bl,BYTE PTR [eax+0x4b]
  4114c7:	(bad)  
  4114c8:	js     0x4114a6
  4114ca:	cmp    DWORD PTR [edx+0x14],ecx
  4114cd:	enter  0x2e73,0x9
  4114d1:	mul    al
  4114d3:	jp     0x8868ef29
  4114d9:	(bad)  
  4114da:	fisubr DWORD PTR [ebx+0x7dfebfb5]
  4114e0:	leave  
  4114e1:	jg     0x41155d
  4114e3:	push   edi
  4114e4:	xchg   DWORD PTR [esi+0x20e313dd],ebp
  4114ea:	sahf   
  4114eb:	sbb    al,0x76
  4114ed:	sbb    esp,DWORD PTR [ecx+0x65901336]
  4114f3:	div    DWORD PTR [eax-0x4d]
  4114f6:	cmp    al,0xc6
  4114f8:	cmc    
  4114f9:	data16 mov dh,0xbc
  4114fc:	xor    al,0xbf
  4114fe:	mov    eax,0xce6e5dd6
  411503:	int3   
  411504:	push   es
  411505:	xchg   BYTE PTR [ebx],dl
  411507:	jp     0x4114a2
  411509:	call   0xceef:0xb6a23ace
  411510:	inc    eax
  411511:	lds    eax,FWORD PTR [ecx]
  411513:	data16 lods al,BYTE PTR ds:[esi]
  411515:	inc    esp
  411516:	out    dx,al
  411517:	xor    DWORD PTR [esi+0x3d],ecx
  41151a:	cdq    
  41151b:	not    ebx
  41151d:	sbb    DWORD PTR ds:0x2ba9e832,ecx
  411523:	or     DWORD PTR [ecx+0xc],eax
  411526:	icebp  
  411527:	cli    
  411528:	mov    edi,0x924def2f
  41152d:	inc    esi
  41152e:	xchg   esi,eax
  41152f:	push   0x76
  411531:	outs   dx,DWORD PTR ds:[esi]
  411532:	rol    BYTE PTR [ecx+0x7707ee28],1
  411538:	sti    
  411539:	xor    al,0xce
  41153b:	push   edi
  41153c:	fnsave [eax-0x8]
  41153f:	scas   eax,DWORD PTR es:[edi]
  411540:	ja     0x411551
  411542:	js     0x411551
  411544:	sbb    BYTE PTR [ecx+0x282927aa],0x60
  41154b:	in     eax,dx
  41154c:	scas   al,BYTE PTR es:[edi]
  41154d:	(bad)  
  41154e:	sub    al,0xcf
  411550:	mov    cl,0xe6
  411552:	xor    eax,0x7b245119
  411557:	mov    esp,edi
  411559:	ins    BYTE PTR es:[edi],dx
  41155a:	add    eax,0x8e270cb8
  41155f:	dec    edx
  411560:	add    edi,0xffffff92
  411563:	imul   dh
  411565:	(bad)  
  411566:	std    
  411567:	mov    ebx,0xf5e7c7a6
  41156c:	push   esp
  41156d:	adc    edx,DWORD PTR [edi+0x6f]
  411570:	cmp    eax,0x8be7f916
  411575:	ret    
  411576:	stc    
  411577:	enter  0x198c,0xa3
  41157b:	repnz xchg ebp,eax
  41157d:	ja     0x4115cc
  41157f:	out    0x78,al
  411581:	mov    eax,ds:0xd7faac50
  411586:	in     eax,dx
  411587:	js     0x411543
  411589:	pop    eax
  41158a:	dec    ebp
  41158b:	retf   
  41158c:	and    al,0xfd
  41158e:	daa    
  41158f:	add    esi,edx
  411591:	sahf   
  411592:	push   es
  411593:	push   edi
  411594:	data16 stos BYTE PTR es:[edi],al
  411596:	(bad)  
  411597:	jmp    0x411530
  411599:	ss test al,0xad
  41159c:	(bad)  
  41159d:	mov    bl,0x52
  41159f:	pop    es
  4115a0:	or     cl,bh
  4115a2:	xchg   bl,al
  4115a4:	outs   dx,DWORD PTR ds:[esi]
  4115a5:	shl    DWORD PTR [ecx+0x21],0xb3
  4115a9:	outs   dx,BYTE PTR ds:[esi]
  4115aa:	int    0xcb
  4115ac:	jl     0x411583
  4115ae:	mov    cl,0x89
  4115b0:	fcomp  st(1)
  4115b2:	(bad)  
  4115b3:	daa    
  4115b4:	retf   0x2986
  4115b7:	and    BYTE PTR [eax],ch
  4115b9:	push   ebp
  4115ba:	mov    edx,0x7d500dff
  4115bf:	dec    ebp
  4115c0:	xchg   DWORD PTR [edx+0x41646fb8],ebp
  4115c6:	pushf  
  4115c7:	rcr    BYTE PTR [edi+0x77907fd4],cl
  4115cd:	pop    ss
  4115ce:	or     DWORD PTR [edx+0x69],esp
  4115d1:	enter  0x49c9,0xe3
  4115d5:	and    eax,0xd9915cae
  4115da:	sbb    DWORD PTR [esi],edx
  4115dc:	ss stos DWORD PTR es:[edi],eax
  4115de:	or     dl,BYTE PTR [edi-0x50e2ae8]
  4115e4:	xor    esp,DWORD PTR [ecx]
  4115e6:	xor    esi,DWORD PTR [esi-0x7cfbcde7]
  4115ec:	mov    ch,0x3b
  4115ee:	push   eax
  4115ef:	adc    eax,0x667fe645
  4115f4:	adc    eax,0xb8443ad5
  4115f9:	es out 0xf1,al
  4115fc:	cli    
  4115fd:	dec    ecx
  4115fe:	jo     0x411597
  411600:	loopne 0x41163e
  411602:	out    0x7b,eax
  411604:	je     0x41162e
  411606:	adc    eax,0xa391d83b
  41160b:	fsubr  st(5),st
  41160d:	jmp    0xbd4fbd83
  411612:	and    BYTE PTR [edx+0x1f65db22],dh
  411618:	mov    esp,esp
  41161a:	mov    dl,0x29
  41161c:	ins    DWORD PTR es:[edi],dx
  41161d:	push   ds
  41161e:	mov    al,ds:0x35ef1dd8
  411623:	jg     0x41164e
  411625:	(bad)  
  411626:	loop   0x4115f1
  411628:	mov    ds:0x42091014,eax
  41162d:	repz inc ecx
  41162f:	push   eax
  411630:	int3   
  411631:	(bad)  
  411632:	jnp    0x411636
  411634:	shl    esi,1
  411636:	es jl  0x411693
  411639:	adc    edx,esp
  41163b:	out    0x42,al
  41163d:	sub    cl,ah
  41163f:	mov    ebx,0xc08b7368
  411644:	mov    ds:0xf425b264,al
  411649:	mov    WORD PTR [ecx+0x7b170e7a],ds
  41164f:	inc    esi
  411650:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411651:	mov    esp,0x9b09efc3
  411656:	sub    al,0xc
  411658:	and    al,0xdc
  41165a:	js     0x411603
  41165c:	push   ebx
  41165d:	cmp    BYTE PTR [ebx-0x37],0xc7
  411661:	xor    ecx,DWORD PTR [esi-0x31]
  411664:	dec    eax
  411665:	stos   BYTE PTR es:[edi],al
  411666:	push   ss
  411667:	sbb    al,bl
  411669:	adc    eax,0x270dcbba
  41166e:	lods   eax,DWORD PTR ds:[esi]
  41166f:	outs   dx,DWORD PTR ds:[esi]
  411670:	push   ebp
  411671:	out    0x13,al
  411673:	inc    edx
  411674:	jmp    0xe788:0xb896aae5
  41167b:	mov    cl,0x3
  41167d:	stos   BYTE PTR es:[edi],al
  41167e:	dec    eax
  41167f:	mov    edi,DWORD PTR [ebx]
  411681:	clc    
  411682:	inc    eax
  411683:	push   0x35
  411685:	add    eax,0x87e047ed
  41168a:	xchg   ebp,eax
  41168b:	jo     0x4116c3
  41168d:	(bad)  
  41168e:	pop    esi
  41168f:	adc    BYTE PTR [esi],ah
  411691:	in     al,0x6e
  411693:	int    0xba
  411695:	jb     0x4116c7
  411697:	xchg   ecx,eax
  411698:	push   cs
  411699:	jge    0x41163a
  41169b:	push   eax
  41169c:	sbb    BYTE PTR [ecx-0x369d09f3],0x0
  4116a3:	add    ah,BYTE PTR [ecx]
  4116a5:	xchg   DWORD PTR [edi],eax
  4116a7:	pop    ds
  4116a8:	fcomp  DWORD PTR [edi+0x47]
  4116ab:	mov    bl,0x9
  4116ad:	sub    BYTE PTR [edx-0x48],al
  4116b0:	stc    
  4116b1:	push   ds
  4116b2:	int    0x8e
  4116b4:	ror    BYTE PTR [edx-0x4e7adb2a],0xc2
  4116bb:	mov    dl,0x3
  4116bd:	sub    eax,0x80fb3883
  4116c2:	call   0xbe6b:0x6069fa81
  4116c9:	call   0xe7c5:0xd54d05a2
  4116d0:	inc    edx
  4116d1:	mov    bh,0xdc
  4116d3:	sub    DWORD PTR [ebp+0x59],eax
  4116d6:	sbb    bl,BYTE PTR [edx-0x56931e6e]
  4116dc:	cmp    DWORD PTR ds:0xc8ccb2f2,ecx
  4116e2:	clc    
  4116e3:	icebp  
  4116e4:	push   esi
  4116e5:	fcomp  DWORD PTR [esi+0x13]
  4116e8:	scas   eax,DWORD PTR es:[edi]
  4116e9:	je     0x411735
  4116eb:	dec    ebx
  4116ec:	jne    0x411709
  4116ee:	sar    BYTE PTR [ebx-0x10],1
  4116f1:	lods   al,BYTE PTR ds:[esi]
  4116f2:	(bad)
  4116f5:	and    DWORD PTR [ecx+0x36998c64],edi
  4116fb:	cmp    ebp,DWORD PTR [ebx-0x23c80fde]
  411701:	pop    ss
  411702:	test   esp,eax
  411704:	xchg   esp,eax
  411705:	and    bl,BYTE PTR [ebp+0x834b47a]
  41170b:	mov    esp,0xf5ae4b78
  411710:	sbb    dl,BYTE PTR [edi+eax*1+0x5d]
  411714:	push   ebx
  411715:	adc    dl,BYTE PTR [edi+0x39]
  411718:	dec    esi
  411719:	push   ds
  41171a:	mov    BYTE PTR [ebp+0x73b6d16d],dl
  411720:	jge    0x411733
  411722:	stc    
  411723:	xchg   edi,eax
  411724:	sub    edi,DWORD PTR [ebx]
  411726:	stos   BYTE PTR es:[edi],al
  411727:	xchg   esi,eax
  411728:	mov    eax,ds:0xb9a46493
  41172d:	add    BYTE PTR [esi+0x2ec400fb],ch
  411733:	mov    eax,0xfbf82db2
  411738:	in     eax,0x6e
  41173a:	inc    ebx
  41173b:	mov    bh,0x53
  41173d:	mov    ds,WORD PTR [ebx]
  41173f:	fsubr  DWORD PTR [ecx*4+0x3887a0b3]
  411746:	pop    ecx
  411747:	(bad)  
  411748:	mov    DWORD PTR [edx-0x5],edx
  41174b:	mov    al,ds:0x11c94e84
  411750:	xlat   BYTE PTR ds:[ebx]
  411751:	xchg   BYTE PTR [ebp-0x47],cl
  411754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411755:	hlt    
  411756:	outs   dx,DWORD PTR ds:[esi]
  411757:	or     ecx,esi
  411759:	outs   dx,BYTE PTR ds:[esi]
  41175a:	push   eax
  41175b:	nop
  41175c:	mov    al,ds:0x7810bb56
  411761:	ret    0x7d74
  411764:	jmp    0x411799
  411766:	push   ecx
  411767:	je     0x411710
  411769:	cmp    BYTE PTR [edx],dh
  41176b:	jae    0x4117a1
  41176d:	jg     0x41174f
  41176f:	sbb    al,0x1a
  411771:	push   edx
  411772:	dec    esp
  411773:	add    ecx,DWORD PTR [ecx-0x3dc721eb]
  411779:	out    dx,al
  41177a:	pop    esi
  41177b:	xlat   BYTE PTR ds:[ebx]
  41177c:	(bad)  [ebp-0x25]
  41177f:	push   ecx
  411780:	sbb    al,0x77
  411782:	aad    0xe
  411784:	inc    ecx
  411785:	sub    eax,0x7f35aa6a
  41178a:	jp     0x411748
  41178c:	add    BYTE PTR [eax+0x33fba99f],ch
  411792:	adc    eax,esi
  411794:	test   DWORD PTR [ebx-0x4e],0x96a3ff02
  41179b:	gs aas 
  41179d:	into   
  41179e:	sub    al,0xaf
  4117a0:	sti    
  4117a1:	mov    ah,ah
  4117a3:	std    
  4117a4:	ss in  eax,0x22
  4117a7:	sahf   
  4117a8:	dec    ebp
  4117a9:	ror    BYTE PTR [eax],1
  4117ab:	inc    edx
  4117ac:	mov    ecx,DWORD PTR [edx-0x45cfaef7]
  4117b2:	lods   eax,DWORD PTR ds:[esi]
  4117b3:	les    edi,FWORD PTR [ebx]
  4117b5:	mov    al,ds:0x8507556c
  4117ba:	xchg   edi,eax
  4117bb:	adc    DWORD PTR [ebx+0x2],edx
  4117be:	jge    0x41183b
  4117c0:	mov    dh,0x98
  4117c2:	sbb    edx,DWORD PTR ds:0x85bdc0ee
  4117c8:	jge    0x4117a2
  4117ca:	push   edx
  4117cb:	sub    DWORD PTR [eax],0xa6a3c387
  4117d1:	into   
  4117d2:	add    BYTE PTR [ebp+0x2b],cl
  4117d5:	mov    eax,ds:0xa93b6662
  4117da:	pop    edi
  4117db:	add    cl,ah
  4117dd:	mov    dl,0xc0
  4117df:	dec    ebp
  4117e0:	mov    esp,0xfd11ee48
  4117e5:	in     al,dx
  4117e6:	cmp    BYTE PTR [ebp-0x3d9bf36a],al
  4117ec:	pushf  
  4117ed:	pop    ebx
  4117ee:	clc    
  4117ef:	add    al,al
  4117f1:	popa   
  4117f2:	adc    edi,DWORD PTR [ecx+0x24]
  4117f5:	push   ebp
  4117f6:	imul   BYTE PTR [edi]
  4117f8:	fsubr  DWORD PTR [edx+0x7327b8cd]
  4117fe:	sub    eax,0x50e51f70
  411803:	push   ebx
  411804:	ja     0x411806
  411806:	in     al,dx
  411807:	nop
  411808:	(bad)  
  411809:	xor    ah,BYTE PTR [ebp*8-0x16045b73]
  411810:	jg     0x41181d
  411812:	iret   
  411813:	scas   al,BYTE PTR es:[edi]
  411814:	outs   dx,BYTE PTR ds:[esi]
  411815:	sahf   
  411816:	out    0xb0,al
  411818:	adc    BYTE PTR [edi-0x35],bl
  41181b:	mov    edi,0xea9d5226
  411820:	mov    edi,0x1a76fada
  411825:	jecxz  0x411851
  411827:	dec    ecx
  411828:	fs jmp 0x411818
  41182b:	lds    ebx,FWORD PTR [ebx-0x27]
  41182e:	inc    edx
  41182f:	or     bh,BYTE PTR [ebp+ebp*4-0x4abef68]
  411836:	add    DWORD PTR [edi+0x7a00fec],ecx
  41183c:	jge    0x41186f
  41183e:	mov    ch,0x3
  411840:	test   BYTE PTR [edi+0x3f401d24],0xfb
  411847:	xchg   esp,eax
  411848:	les    edi,FWORD PTR [edx]
  41184a:	mov    ecx,0xf3c3637a
  41184f:	aaa    
  411850:	push   cs
  411851:	outs   dx,BYTE PTR ds:[esi]
  411852:	mov    ebx,0x8b9c0cba
  411857:	xchg   ebx,eax
  411858:	std    
  411859:	mov    ch,0xdf
  41185b:	cli    
  41185c:	das    
  41185d:	pop    edx
  41185f:	retf   
  411860:	sub    ecx,esi
  411862:	mov    edi,esp
  411864:	arpl   di,ax
  411866:	xchg   edi,eax
  411867:	pusha  
  411868:	inc    esi
  411869:	inc    edi
  41186a:	in     al,0x72
  41186c:	dec    ebx
  41186d:	mov    ds:0xd25d1507,eax
  411872:	inc    eax
  411873:	stc    
  411874:	xchg   esi,eax
  411875:	dec    eax
  411876:	push   edi
  411877:	lahf   
  411878:	push   eax
  411879:	add    DWORD PTR [edi+0x273913dc],eax
  41187f:	cwde   
  411880:	mov    ch,0x21
  411882:	mov    al,ds:0xaeaf58f2
  411887:	cmp    DWORD PTR [ecx],eax
  411889:	test   ebx,esp
  41188b:	(bad)  
  41188c:	outs   dx,DWORD PTR ds:[esi]
  41188d:	repnz xchg edx,eax
  41188f:	adc    al,0xd3
  411891:	jmp    FWORD PTR [ebx-0x367cb6d2]
  411897:	aad    0x95
  411899:	cmp    eax,0x7142f0d4
  41189e:	mov    ecx,DWORD PTR [edi-0x1a98b7ed]
  4118a4:	xchg   esp,eax
  4118a5:	push   esi
  4118a6:	pop    edi
  4118a7:	aaa    
  4118a8:	test   BYTE PTR [edi],ah
  4118aa:	ja     0x411874
  4118ac:	daa    
  4118ad:	xchg   ebp,eax
  4118ae:	dec    ecx
  4118af:	jno    0x411860
  4118b1:	add    BYTE PTR ds:0x55f1268b,ah
  4118b7:	push   edx
  4118b8:	pop    edi
  4118b9:	push   esp
  4118ba:	fmul   DWORD PTR [eax]
  4118bc:	xchg   DWORD PTR [edi+0xc],ebp
  4118bf:	add    eax,0x4f638e5b
  4118c4:	test   eax,0xaa086376
  4118c9:	std    
  4118ca:	push   0x52
  4118cc:	push   edi
  4118cd:	or     edx,DWORD PTR [esi+0x6f]
  4118d0:	inc    esi
  4118d1:	pop    edx
  4118d2:	out    dx,eax
  4118d3:	addr16 mov eax,0x1128291a
  4118d9:	mov    cl,0xa4
  4118db:	adc    BYTE PTR [edi+edx*8+0x7c],cl
  4118df:	fnstcw WORD PTR [edx]
  4118e1:	rol    ebx,1
  4118e3:	es addr16 retf 
  4118e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118e7:	inc    ebp
  4118e8:	xchg   edx,eax
  4118e9:	jl     0x4118e1
  4118eb:	test   al,0xd5
  4118ed:	sub    ch,BYTE PTR [ebx-0x30]
  4118f0:	xor    BYTE PTR ss:[edx+0xa9d3173],cl
  4118f7:	inc    eax
  4118f8:	lea    esi,[edi+ebx*1]
  4118fb:	test   al,0xfa
  4118fd:	pop    edi
  4118fe:	aas    
  4118ff:	rcl    BYTE PTR [esi+0x46722b08],1
  411905:	lock shr BYTE PTR [ecx],1
  411908:	cli    
  411909:	xor    eax,0xc379ddce
  41190e:	(bad)  
  41190f:	mov    edi,0x100f486a
  411914:	pop    ecx
  411915:	xchg   ebx,eax
  411916:	jmp    0xd5df6878
  41191b:	arpl   ax,si
  41191d:	in     al,dx
  41191e:	sbb    ch,BYTE PTR ds:0x906f5af8
  411924:	popa   
  411925:	xor    eax,0xf756fac9
  41192a:	inc    ecx
  41192b:	jns    0x4118c2
  41192d:	mov    eax,0xf55a3e82
  411932:	mov    ?,WORD PTR [eax+0x40]
  411935:	lock sbb BYTE PTR [edx-0x66],bh
  411939:	pop    ds
  41193a:	in     al,0x70
  41193c:	icebp  
  41193d:	cmp    eax,DWORD PTR [ebx-0x79]
  411940:	repnz mov eax,ds:0x361bbcb3
  411946:	hlt    
  411947:	loopne 0x411952
  411949:	ins    DWORD PTR es:[edi],dx
  41194a:	sub    DWORD PTR [ebx],ebx
  41194c:	ror    BYTE PTR [ebp+0x24c5950b],0xf3
  411953:	inc    esi
  411954:	jnp    0x411943
  411956:	xor    BYTE PTR [esi],ah
  411958:	pop    es
  411959:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41195a:	inc    esp
  41195b:	fbld   TBYTE PTR [esi]
  41195d:	mov    ah,0x29
  41195f:	jno    0x411997
  411961:	and    eax,0x78c6c9f0
  411966:	mov    edi,DWORD PTR ds:0xd37bd15d
  41196c:	pop    ecx
  41196d:	and    al,0xf4
  41196f:	int3   
  411970:	jp     0x41198d
  411972:	and    BYTE PTR [edi+eax*8],dh
  411975:	jnp    0x4119d6
  411977:	shl    DWORD PTR [esi],cl
  411979:	dec    esp
  41197a:	jp     0x411982
  41197c:	push   es
  41197d:	mov    edi,DWORD PTR [ecx-0x4e8a208]
  411983:	push   edi
  411984:	add    ecx,DWORD PTR [ecx+ebp*8]
  411987:	mov    BYTE PTR [eax],0x6e
  41198a:	mov    ebx,0x78343251
  41198f:	scas   al,BYTE PTR es:[edi]
  411990:	daa    
  411991:	add    cl,bl
  411993:	nop
  411994:	push   esi
  411995:	enter  0x87f3,0x67
  411999:	out    0x74,al
  41199b:	dec    edi
  41199c:	adc    BYTE PTR [ebx+ebp*8+0x72],dl
  4119a0:	pusha  
  4119a1:	cmc    
  4119a2:	cdq    
  4119a3:	call   0x831f:0x3dcee727
  4119aa:	not    BYTE PTR [eax+esi*2-0x12]
  4119ae:	pop    edi
  4119af:	imul   edx,DWORD PTR [esi-0x5cb6f5c0],0x1c13a8b8
  4119b9:	iret   
  4119ba:	cmp    al,0x1d
  4119bc:	js     0x411989
  4119be:	xor    DWORD PTR [eax+eiz*1],ebp
  4119c1:	mov    dh,0xc4
  4119c3:	repz jns 0x411a39
  4119c6:	mov    bh,0x61
  4119c8:	sub    dh,al
  4119ca:	repz ret 
  4119cc:	sub    al,0xa3
  4119ce:	ret    0x8f3
  4119d1:	sar    DWORD PTR [edx-0x15],cl
  4119d4:	idiv   DWORD PTR [ecx]
  4119d6:	adc    bh,BYTE PTR [eax-0x2396c3b0]
  4119dc:	add    dh,BYTE PTR [ebp-0x4c]
  4119df:	stos   BYTE PTR es:[edi],al
  4119e0:	adc    BYTE PTR es:[esi-0x3493c9e5],bl
  4119e7:	int3   
  4119e8:	jp     0x41196d
  4119ea:	in     al,dx
  4119eb:	fldenv [ecx-0x68be133e]
  4119f1:	jmp    0x4119a7
  4119f3:	dec    eax
  4119f4:	xchg   ebx,eax
  4119f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119f6:	mov    al,0xd7
  4119f8:	cmp    cl,BYTE PTR [ebx-0x1c]
  4119fb:	or     eax,0x10958111
  411a00:	jp     0x411987
  411a02:	fs sbb eax,0xc2d751d0
  411a08:	aaa    
  411a09:	ins    DWORD PTR es:[edi],dx
  411a0a:	shl    BYTE PTR [ebx-0x5d],0x4a
  411a0e:	inc    ebx
  411a0f:	out    0xfa,al
  411a11:	cwde   
  411a12:	cmp    DWORD PTR [ebx],ebx
  411a14:	or     DWORD PTR [eax],eax
  411a16:	enter  0x5364,0x6f
  411a1a:	xchg   edi,eax
  411a1b:	inc    eax
  411a1c:	xor    al,0xd6
  411a1e:	icebp  
  411a1f:	sbb    DWORD PTR [ecx-0x43df1cc6],esi
  411a25:	xor    al,0x70
  411a27:	fldcw  WORD PTR [edi+ebp*4+0x64741bf0]
  411a2e:	shl    DWORD PTR [ecx-0x779d5d11],cl
  411a34:	iret   
  411a35:	mov    DWORD PTR [edx+0x69],esi
  411a38:	in     eax,0xdc
  411a3a:	jmp    0x411a22
  411a3c:	add    eax,DWORD PTR [eax]
  411a3e:	xchg   BYTE PTR [ebx+ecx*1+0x1],dl
  411a42:	push   ds
  411a43:	push   es
  411a44:	dec    esp
  411a45:	repz xor BYTE PTR [edi],ch
  411a48:	mov    ebx,0x4444b2c
  411a4d:	out    dx,eax
  411a4e:	and    esi,ecx
  411a50:	pushf  
  411a51:	sub    al,0x43
  411a53:	cmc    
  411a54:	popf   
  411a55:	mov    ?,WORD PTR [eax-0x2b]
  411a58:	inc    edi
  411a59:	outs   dx,BYTE PTR ds:[esi]
  411a5a:	xchg   edi,eax
  411a5b:	mov    edi,0x6aeccc2c
  411a60:	retf   0xcace
  411a63:	out    dx,eax
  411a64:	or     eax,0xfd5503e0
  411a69:	inc    edx
  411a6a:	in     al,0xa2
  411a6c:	pop    eax
  411a6d:	push   esi
  411a6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a6f:	jae    0x411a10
  411a71:	addr16 shl bl,0x43
  411a75:	sbb    al,0x1f
  411a77:	stc    
  411a78:	in     al,dx
  411a79:	push   0xae6cd0
  411a7e:	sub    DWORD PTR [eax+0x7956d36d],ecx
  411a84:	in     eax,dx
  411a85:	dec    esp
  411a86:	mov    edx,0x7488e86c
  411a8b:	ins    DWORD PTR es:[edi],dx
  411a8c:	mov    ebp,esp
  411a8e:	(bad)  
  411a8f:	xor    edi,DWORD PTR [eax-0x7e]
  411a92:	sub    eax,0x7f533b6
  411a97:	mov    dl,0x48
  411a99:	or     edi,DWORD PTR [ebx+0x6455558d]
  411a9f:	neg    DWORD PTR [ecx]
  411aa1:	mov    ch,0xf2
  411aa3:	dec    esi
  411aa4:	gs push 0xadcd2b6d
  411aaa:	stos   BYTE PTR es:[edi],al
  411aab:	jb     0x411a33
  411aad:	pop    ebx
  411aae:	mov    esi,0x1870b0a4
  411ab3:	push   ecx
  411ab4:	sub    ebx,DWORD PTR [edx]
  411ab6:	add    DWORD PTR [ecx],edx
  411ab8:	int    0xb1
  411aba:	xor    ecx,esi
  411abc:	lea    eax,[ecx+eax*1+0x3272f3]
  411ac3:	mov    ecx,DWORD PTR [ebp+0x8]
  411ac6:	mov    edx,DWORD PTR [ebp-0x20]
  411ac9:	mov    DWORD PTR [edx+ecx*4],eax
  411acc:	mov    eax,DWORD PTR [ebp-0xc]
  411acf:	mov    ecx,DWORD PTR [ebp+0x8]
  411ad2:	xor    eax,esi
  411ad4:	lea    eax,[eax+ecx*1+0x3272f3]
  411adb:	mov    DWORD PTR [ebp+0x8],eax
  411ade:	mov    eax,DWORD PTR [ebp-0xc]
  411ae1:	mov    ecx,DWORD PTR [ebp+0x14]
  411ae4:	xor    eax,esi
  411ae6:	add    eax,edi
  411ae8:	imul   eax,DWORD PTR [ecx]
  411aeb:	mov    ecx,DWORD PTR [ebp-0x4]
  411aee:	mov    edx,DWORD PTR [ebp+0x8]
  411af1:	xor    ecx,esi
  411af3:	lea    ecx,[ecx+edx*1+0x3272f3]
  411afa:	cmp    ecx,eax
  411afc:	jne    0x40f6ee
  411b02:	mov    eax,DWORD PTR [ebp-0x4]
  411b05:	xor    eax,esi
  411b07:	add    eax,edi
  411b09:	mov    DWORD PTR [ebp-0x10],eax
  411b0c:	mov    ebx,0x65655
  411b11:	add    ebx,0x3234
  411b17:	xchg   ebx,esi
  411b19:	xor    ebx,ebx
  411b1b:	push   esi
  411b1c:	mov    esi,ebx
  411b1e:	pop    ebx
  411b1f:	mov    edx,esi
  411b21:	add    ebx,0x1002
  411b27:	lea    eax,[ebp-0x18]
  411b2a:	add    edx,eax
  411b2c:	add    edx,0x5
  411b2f:	push   edx
  411b30:	inc    esi
  411b31:	pop    ecx
  411b32:	dec    ecx
  411b33:	xchg   ecx,eax
  411b34:	dec    eax
  411b35:	xchg   ecx,eax
  411b36:	dec    ecx
  411b37:	xchg   ecx,edx
  411b39:	dec    edx
  411b3a:	push   edx
  411b3b:	mov    edx,ebx
  411b3d:	pop    ebx
  411b3e:	dec    ebx
  411b3f:	call   DWORD PTR [ebx]
  411b41:	cmp    DWORD PTR [ebp+0x10],esi
  411b44:	je     0x411b65
  411b4a:	xchg   edx,eax
  411b4b:	push   0xc
  411b4d:	pop    ecx
  411b4e:	dec    ecx
  411b4f:	push   0x3
  411b51:	pop    ebx
  411b52:	inc    ebx
  411b53:	xchg   ebx,ecx
  411b55:	inc    ecx
  411b56:	sub    ebx,ecx
  411b58:	xchg   ebx,ecx
  411b5a:	dec    ecx
  411b5b:	dec    ecx
  411b5c:	mov    eax,DWORD PTR [ebp-0x1c]
  411b5f:	imul   eax,ecx
  411b62:	add    esp,eax
  411b64:	xchg   edx,eax
  411b65:	push   eax
  411b66:	xor    ebx,ebx
  411b68:	mov    edx,esp
  411b6a:	dec    edx
  411b6b:	inc    ebx
  411b6c:	add    ebx,DWORD PTR [edx+ebx*1]
  411b6f:	dec    ebx
  411b70:	xor    edx,edx
  411b72:	add    DWORD PTR [ebp-0x10],ebx
  411b75:	pop    ebx
  411b76:	mov    eax,DWORD PTR [ebp-0x10]
  411b79:	pop    edi
  411b7a:	pop    esi
  411b7b:	pop    ebx
  411b7c:	leave  
  411b7d:	ret    0x10
  411b80:	push   ebp
  411b81:	mov    ebp,esp
  411b83:	push   ecx
  411b84:	and    DWORD PTR ds:0x4291db,ecx
  411b8a:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  411b91:	and    DWORD PTR ds:0x4291cb,0x0
  411b9b:	mov    ecx,DWORD PTR ds:0x4291cb
  411ba1:	inc    ecx
  411ba2:	mov    DWORD PTR ds:0x4291cb,ecx
  411ba8:	cmp    DWORD PTR ds:0x4291cb,0x20
  411baf:	jbe    0x411bd2
  411bb5:	jmp    0x411bc5
  411bba:	push   0x4291cf
  411bbf:	call   DWORD PTR ds:0x42a543
  411bc5:	cmp    DWORD PTR ds:0x4291cb,0x1c
  411bcc:	jb     0x411b9b
  411bd2:	mov    eax,DWORD PTR [ebp-0x4]
  411bd5:	xor    DWORD PTR ds:0x4291d7,0x42915f
  411bdf:	mov    edx,DWORD PTR [ebp+0x10]
  411be2:	mov    ecx,0x75108ac
  411be7:	sbb    DWORD PTR ds:0x42919f,0x2976
  411bf1:	xor    eax,ecx
  411bf3:	xor    DWORD PTR ds:0x429167,0x4291ab
  411bfd:	add    eax,0x3272f3
  411c02:	mov    DWORD PTR [edx],eax
  411c04:	and    eax,DWORD PTR ds:0x4291e7
  411c0a:	mov    eax,DWORD PTR [ebp+0xc]
  411c0d:	and    DWORD PTR ds:0x4291d3,edi
  411c13:	xor    eax,ecx
  411c15:	xor    DWORD PTR ds:0x429187,0x6377
  411c1f:	push   esi
  411c20:	xor    edx,DWORD PTR ds:0x42915b
  411c26:	mov    esi,DWORD PTR [ebp+0x10]
  411c29:	mov    edx,0x3272f3
  411c2e:	add    eax,edx
  411c30:	mov    DWORD PTR [esi+0x4],eax
  411c33:	mov    eax,DWORD PTR [ebp+0x14]
  411c36:	mov    esi,DWORD PTR [ebp+0x10]
  411c39:	mov    DWORD PTR [esi+0x8],eax
  411c3c:	mov    eax,DWORD PTR [ebp+0x18]
  411c3f:	mov    esi,DWORD PTR [ebp+0x10]
  411c42:	mov    DWORD PTR [esi+0xc],eax
  411c45:	mov    eax,DWORD PTR [ebp+0x1c]
  411c48:	mov    esi,DWORD PTR [ebp+0x10]
  411c4b:	mov    DWORD PTR [esi+0x10],eax
  411c4e:	mov    eax,DWORD PTR [ebp+0x8]
  411c51:	xor    eax,ecx
  411c53:	add    eax,edx
  411c55:	pop    esi
  411c56:	leave  
  411c57:	ret    0x18
  411c5a:	push   ebp
  411c5b:	mov    ebp,esp
  411c5d:	sub    esp,0x9c
  411c63:	movzx  ecx,BYTE PTR ds:0x429187
  411c6a:	or     DWORD PTR ds:0x4291f3,ecx
  411c70:	mov    ecx,DWORD PTR [ebp+0x8]
  411c73:	mov    eax,0x8a99
  411c78:	sub    DWORD PTR ds:0x4291a7,0x19e0
  411c82:	xor    ax,WORD PTR [ecx+0x20]
  411c86:	mov    ecx,0x3b5b
  411c8b:	add    ax,cx
  411c8e:	and    DWORD PTR ds:0x4291f7,0x0
  411c98:	mov    ecx,DWORD PTR ds:0x4291f7
  411c9e:	inc    ecx
  411c9f:	mov    DWORD PTR ds:0x4291f7,ecx
  411ca5:	cmp    DWORD PTR ds:0x4291f7,0x11
  411cac:	jl     0x411cec
  411cb2:	jmp    0x411cc5
  411cb7:	push   DWORD PTR [ebp-0x28]
  411cba:	push   0x42806d
  411cbf:	call   DWORD PTR ds:0x42a547
  411cc5:	cmp    DWORD PTR ds:0x4291f7,0x10
  411ccc:	jne    0x411cdf
  411cd2:	mov    ecx,DWORD PTR ds:0x4291f7
  411cd8:	inc    ecx
  411cd9:	mov    DWORD PTR ds:0x4291f7,ecx
  411cdf:	cmp    DWORD PTR ds:0x4291f7,0x1c
  411ce6:	jb     0x411c98
  411cec:	movzx  eax,ax
  411cef:	mov    DWORD PTR [ebp-0x10],eax
  411cf2:	mov    BYTE PTR [ebp-0x1],0x82
  411cf6:	and    DWORD PTR ds:0x4291df,0x0
  411d00:	jmp    0x411d14
  411d05:	xor    ecx,ecx
  411d07:	add    ecx,DWORD PTR ds:0x4291df
  411d0d:	inc    ecx
  411d0e:	mov    DWORD PTR ds:0x4291df,ecx
  411d14:	cmp    DWORD PTR ds:0x4291df,0x1b
  411d1b:	jae    0x411d48
  411d21:	cmp    DWORD PTR ds:0x4291df,0x22
  411d28:	jge    0x411d48
  411d2e:	jmp    0x411d43
  411d33:	push   0x4280f2
  411d38:	push   0x0
  411d3a:	push   DWORD PTR [ebp-0x1c]
  411d3d:	call   DWORD PTR ds:0x42a54f
  411d43:	jmp    0x411d05
  411d48:	lea    eax,[ebp-0x1]
  411d4b:	inc    DWORD PTR ds:0x42919b
  411d51:	mov    DWORD PTR [ebp-0xc],eax
  411d54:	mov    al,BYTE PTR [ebp-0x1]
  411d57:	and    DWORD PTR ds:0x4291af,0x0
  411d61:	mov    ecx,DWORD PTR ds:0x4291af
  411d67:	inc    ecx
  411d68:	mov    DWORD PTR ds:0x4291af,ecx
  411d6e:	cmp    DWORD PTR ds:0x4291af,0x19
  411d75:	jbe    0x411d96
  411d7b:	jmp    0x411d89
  411d80:	push   DWORD PTR [ebp-0x20]
  411d83:	call   DWORD PTR ds:0x42a553
  411d89:	cmp    DWORD PTR ds:0x4291af,0x10
  411d90:	jb     0x411d61
  411d96:	mov    ecx,DWORD PTR [ebp-0xc]
  411d99:	xor    al,0x7d
  411d9b:	mov    DWORD PTR ds:0x4291bb,0x2666
  411da5:	add    al,0x2
  411da7:	and    DWORD PTR ds:0x4291c3,0x42917f
  411db1:	mov    BYTE PTR [ecx],al
  411db3:	sbb    DWORD PTR ds:0x4291eb,0x5717
  411dbd:	mov    DWORD PTR [ebp-0x18],0xf89c85a1
  411dc4:	push   ebx
  411dc5:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  411dcc:	mov    DWORD PTR ds:0x4291eb,0x16
  411dd6:	cmp    DWORD PTR ds:0x4291eb,0x0
  411ddd:	je     0x411e17
  411de3:	cmp    DWORD PTR ds:0x4291eb,0x1e
  411dea:	jl     0x411e17
  411df0:	jmp    0x411e07
  411df5:	push   0x428010
  411dfa:	push   0x0
  411dfc:	push   0x6e74
  411e01:	call   DWORD PTR ds:0x42a557
  411e07:	mov    eax,ds:0x4291eb
  411e0c:	dec    eax
  411e0d:	mov    ds:0x4291eb,eax
  411e12:	jmp    0x411dd6
  411e17:	mov    ecx,DWORD PTR [ebp-0x18]
  411e1a:	or     DWORD PTR ds:0x429153,ebx
  411e20:	push   esi
  411e21:	mov    eax,0x75108ac
  411e26:	xor    esi,esi
  411e28:	xor    esi,DWORD PTR ds:0x4291b7
  411e2e:	or     DWORD PTR ds:0x42915b,esi
  411e34:	xor    ecx,eax
  411e36:	mov    esi,DWORD PTR ds:0x4291a3
  411e3c:	sbb    esi,DWORD PTR ds:0x42914f
  411e42:	mov    DWORD PTR ds:0x4291a3,esi
  411e48:	mov    esi,0x3272f3
  411e4d:	push   edi
  411e4e:	add    ecx,esi
  411e50:	jmp    0x411e66
  411e55:	inc    DWORD PTR ds:0x429163
  411e5b:	mov    dl,BYTE PTR [ebp-0x1]
  411e5e:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  411e65:	inc    ecx
  411e66:	mov    DWORD PTR ds:0x42917b,0x7bd4
  411e70:	cmp    ecx,0x40
  411e73:	jb     0x411e55
  411e79:	not    edx
  411e7b:	mov    edx,DWORD PTR [ebp-0x18]
  411e7e:	xor    edx,eax
  411e80:	mov    DWORD PTR ds:0x4291f7,0x3db0
  411e8a:	add    edx,esi
  411e8c:	jmp    0x411f80
  411e91:	movzx  edi,WORD PTR ds:0x42918b
  411e98:	or     DWORD PTR ds:0x429157,edi
  411e9e:	mov    edi,DWORD PTR [ebp+0x8]
  411ea1:	adc    DWORD PTR ds:0x42917b,edx
  411ea7:	mov    ecx,0x8a99
  411eac:	adc    DWORD PTR ds:0x4291f3,0x3816
  411eb6:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411ebb:	and    DWORD PTR ds:0x4291a3,0x0
  411ec5:	jmp    0x411ed7
  411eca:	mov    edi,DWORD PTR ds:0x4291a3
  411ed0:	inc    edi
  411ed1:	mov    DWORD PTR ds:0x4291a3,edi
  411ed7:	cmp    DWORD PTR ds:0x4291a3,0x1f
  411ede:	jae    0x411f1d
  411ee4:	cmp    DWORD PTR ds:0x4291a3,0xa
  411eeb:	jl     0x411f1d
  411ef1:	jmp    0x411efc
  411ef6:	call   DWORD PTR ds:0x42a55b
  411efc:	cmp    DWORD PTR ds:0x4291a3,0x9
  411f03:	jne    0x411f18
  411f09:	xor    edi,edi
  411f0b:	xor    edi,DWORD PTR ds:0x4291a3
  411f11:	inc    edi
  411f12:	mov    DWORD PTR ds:0x4291a3,edi
  411f18:	jmp    0x411eca
  411f1d:	mov    edi,0x3b5b
  411f22:	add    cx,di
  411f25:	add    DWORD PTR ds:0x4291ef,0x4291b7
  411f2f:	movzx  ecx,cx
  411f32:	sbb    DWORD PTR ds:0x42914b,0x16d8
  411f3c:	mov    DWORD PTR [ebp-0xc],ecx
  411f3f:	movzx  ecx,WORD PTR ds:0x42918f
  411f46:	and    DWORD PTR ds:0x429197,ecx
  411f4c:	mov    ecx,DWORD PTR [ebp+0x8]
  411f4f:	sbb    DWORD PTR ds:0x42915b,0x631a
  411f59:	movzx  ecx,WORD PTR [ecx+edx*4]
  411f5d:	xor    ecx,0x8a99
  411f63:	add    ecx,edi
  411f65:	mov    edi,DWORD PTR [ebp-0xc]
  411f68:	mov    DWORD PTR ds:0x4291f7,0x4ad9
  411f72:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411f79:	mov    DWORD PTR ds:0x4291e7,ecx
  411f7f:	inc    edx
  411f80:	not    ecx
  411f82:	mov    ecx,DWORD PTR [ebp-0x10]
  411f85:	mov    DWORD PTR ds:0x42914f,0x2d30
  411f8f:	cmp    edx,ecx
  411f91:	jne    0x411e91
  411f97:	and    edx,edx
  411f99:	mov    ecx,DWORD PTR [ebp-0x18]
  411f9c:	sub    edi,DWORD PTR ds:0x42914f
  411fa2:	mov    edx,DWORD PTR [ebp+0x10]
  411fa5:	xor    DWORD PTR ds:0x4291bf,0xf9d
  411faf:	xor    ecx,eax
  411fb1:	and    DWORD PTR ds:0x4291b7,ebx
  411fb7:	add    ecx,esi
  411fb9:	mov    DWORD PTR [edx],ecx
  411fbb:	mov    ecx,DWORD PTR [ebp-0x18]
  411fbe:	sbb    DWORD PTR ds:0x42919f,0x1e81
  411fc8:	xor    ecx,eax
  411fca:	add    ecx,esi
  411fcc:	adc    DWORD PTR ds:0x4291e3,edi
  411fd2:	mov    DWORD PTR [ebp-0xc],ecx
  411fd5:	add    DWORD PTR ds:0x42914f,0x6cdc
  411fdf:	mov    DWORD PTR [ebp+0x8],0xf89c85a1
  411fe6:	mov    DWORD PTR ds:0x4291bf,0x1d36
  411ff0:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  411ff7:	mov    DWORD PTR [ebp-0x10],0xf89c95a1
  411ffe:	mov    ecx,DWORD PTR [ebp-0x14]
  412001:	mov    DWORD PTR ds:0x4291e3,0x1b
  41200b:	cmp    DWORD PTR ds:0x4291e3,0x0
  412012:	je     0x41204c
  412018:	cmp    DWORD PTR ds:0x4291e3,0x1c
  41201f:	jb     0x41204c
  412025:	jmp    0x41203a
  41202a:	push   0x42915f
  41202f:	push   0x428022
  412034:	call   DWORD PTR ds:0x42a55f
  41203a:	mov    edi,DWORD PTR ds:0x4291e3
  412040:	dec    edi
  412041:	mov    DWORD PTR ds:0x4291e3,edi
  412047:	jmp    0x41200b
  41204c:	mov    DWORD PTR [ebp+0x8],ecx
  41204f:	mov    ecx,DWORD PTR [ebp+0x8]
  412052:	xor    ecx,eax
  412054:	add    ecx,esi
  412056:	movzx  ecx,WORD PTR ds:0x4291b3
  41205d:	mov    ecx,0x242ebcd
  412062:	mov    edi,0xf641bcc
  412067:	je     0x414acc
  41206d:	mov    edx,DWORD PTR [ebp+0x8]
  412070:	sub    DWORD PTR ds:0x42917b,0x1976
  41207a:	mov    ebx,DWORD PTR [ebp-0x8]
  41207d:	xor    edx,eax
  41207f:	xor    ebx,eax
  412081:	not    DWORD PTR ds:0x4291d3
  412087:	sub    edx,ebx
  412089:	not    DWORD PTR ds:0x42918f
  41208f:	sub    edx,esi
  412091:	xor    edx,eax
  412093:	and    DWORD PTR ds:0x4291cb,0x0
  41209d:	jmp    0x4120af
  4120a2:	mov    ebx,DWORD PTR ds:0x4291cb
  4120a8:	inc    ebx
  4120a9:	mov    DWORD PTR ds:0x4291cb,ebx
  4120af:	cmp    DWORD PTR ds:0x4291cb,0x18
  4120b6:	jae    0x4120f8
  4120bc:	cmp    DWORD PTR ds:0x4291cb,0xa
  4120c3:	ja     0x4120f8
  4120c9:	jmp    0x4120d9
  4120ce:	push   0x4a1a
  4120d3:	call   DWORD PTR ds:0x42a563
  4120d9:	cmp    DWORD PTR ds:0x4291cb,0x9
  4120e0:	jne    0x4120f3
  4120e6:	mov    ebx,DWORD PTR ds:0x4291cb
  4120ec:	inc    ebx
  4120ed:	mov    DWORD PTR ds:0x4291cb,ebx
  4120f3:	jmp    0x4120a2
  4120f8:	mov    DWORD PTR [ebp+0x8],edx
  4120fb:	sub    DWORD PTR ds:0x4291e3,0x2e82
  412105:	mov    edx,DWORD PTR [ebp+0x8]
  412108:	mov    ebx,DWORD PTR [ebp-0x58]
  41210b:	mov    DWORD PTR ds:0x42919b,0x1dc1
  412115:	add    edx,0x5708e2
  41211b:	and    DWORD PTR ds:0x4291e7,0x42919f
  412125:	imul   edx,ebx
  412128:	mov    DWORD PTR [ebp-0x58],edx
  41212b:	xor    edx,0x49c6
  412131:	mov    edx,DWORD PTR [ebp+0x8]
  412134:	mov    ebx,DWORD PTR ds:0x42914b
  41213a:	add    DWORD PTR ds:0x4291e3,ebx
  412140:	mov    ebx,DWORD PTR [ebp-0x54]
  412143:	add    edx,0x64f89c
  412149:	inc    DWORD PTR ds:0x42917f
  41214f:	or     edx,ebx
  412151:	mov    DWORD PTR [ebp-0x54],edx
  412154:	mov    edx,DWORD PTR [ebp+0x8]
  412157:	mov    ebx,DWORD PTR [ebp-0x50]
  41215a:	sbb    DWORD PTR ds:0x429183,0x4291b7
  412164:	add    edx,ecx
  412166:	xor    edx,ebx
  412168:	mov    DWORD PTR [ebp-0x50],edx
  41216b:	dec    ebx
  41216c:	mov    edx,DWORD PTR [ebp+0x8]
  41216f:	add    ebx,0x68ce
  412175:	mov    ebx,DWORD PTR [ebp-0x4c]
  412178:	add    edx,edi
  41217a:	and    edx,ebx
  41217c:	and    ebx,0x35bf
  412182:	mov    DWORD PTR [ebp-0x4c],edx
  412185:	xor    DWORD PTR ds:0x4291d3,ebx
  41218b:	mov    edx,DWORD PTR [ebp+0x8]
  41218e:	sub    DWORD PTR ds:0x4291cf,0x55b5
  412198:	mov    ebx,DWORD PTR [ebp-0x48]
  41219b:	lea    edx,[ebx+edx*1+0x241fcdf]
  4121a2:	mov    DWORD PTR [ebp-0x48],edx
  4121a5:	and    DWORD PTR ds:0x429173,0x0
  4121af:	mov    ebx,DWORD PTR ds:0x429173
  4121b5:	inc    ebx
  4121b6:	mov    DWORD PTR ds:0x429173,ebx
  4121bc:	cmp    DWORD PTR ds:0x429173,0x19
  4121c3:	jge    0x4121ee
  4121c9:	jmp    0x4121e1
  4121ce:	push   0x4291f7
  4121d3:	push   0x429187
  4121d8:	push   DWORD PTR [ebp-0x10]
  4121db:	call   DWORD PTR ds:0x42a56b
  4121e1:	cmp    DWORD PTR ds:0x429173,0x12
  4121e8:	jb     0x4121af
  4121ee:	mov    edx,DWORD PTR [ebp+0x8]
  4121f1:	or     DWORD PTR ds:0x4291df,ebx
  4121f7:	mov    ebx,0xfa5e1528
  4121fc:	sub    ebx,edx
  4121fe:	movzx  edx,WORD PTR ds:0x4291c7
  412205:	and    DWORD PTR ds:0x4291f7,edx
  41220b:	add    ebx,DWORD PTR [ebp-0x44]
  41220e:	mov    DWORD PTR [ebp-0x44],ebx
  412211:	and    DWORD PTR ds:0x4291db,0x4291bf
  41221b:	mov    edx,DWORD PTR [ebp+0x8]
  41221e:	xor    edx,eax
  412220:	adc    DWORD PTR ds:0x429153,0x429187
  41222a:	add    edx,esi
  41222c:	mov    DWORD PTR ds:0x42915b,0x2aa5
  412236:	jne    0x41206d
  41223c:	mov    DWORD PTR ds:0x4291af,0x939
  412246:	jmp    0x414acc
  41224b:	xor    DWORD PTR ds:0x4291cb,0x4110
  412255:	mov    edx,DWORD PTR [ebp-0xc]
  412258:	sub    DWORD PTR ds:0x42918b,0x429163
  412262:	sub    edx,esi
  412264:	xor    edx,eax
  412266:	mov    DWORD PTR ds:0x4291b7,0x1c
  412270:	cmp    DWORD PTR ds:0x4291b7,0x0
  412277:	je     0x4122ae
  41227d:	cmp    DWORD PTR ds:0x4291b7,0x21
  412284:	jbe    0x4122ae
  41228a:	jmp    0x41229a
  41228f:	push   0x337f
  412294:	call   DWORD PTR ds:0x42a533
  41229a:	xor    ebx,ebx
  41229c:	or     ebx,DWORD PTR ds:0x4291b7
  4122a2:	dec    ebx
  4122a3:	mov    DWORD PTR ds:0x4291b7,ebx
  4122a9:	jmp    0x412270
  4122ae:	mov    DWORD PTR [ebp-0x5c],edx
  4122b1:	sub    DWORD PTR ds:0x429173,0x5ea2
  4122bb:	mov    edx,DWORD PTR [ebp-0x10]
  4122be:	mov    ebx,DWORD PTR [ebp-0x8]
  4122c1:	xor    edx,eax
  4122c3:	dec    DWORD PTR ds:0x4291b7
  4122c9:	xor    ebx,eax
  4122cb:	adc    DWORD PTR ds:0x429197,0x42917b
  4122d5:	sub    edx,ebx
  4122d7:	sub    edx,esi
  4122d9:	xor    edx,eax
  4122db:	mov    DWORD PTR [ebp-0x10],edx
  4122de:	mov    edx,DWORD PTR [ebp-0x14]
  4122e1:	mov    DWORD PTR [ebp+0x8],edx
  4122e4:	jmp    0x412527
  4122e9:	mov    edx,DWORD PTR [ebp+0x8]
  4122ec:	mov    DWORD PTR ds:0x429157,0x1c
  4122f6:	cmp    DWORD PTR ds:0x429157,0x0
  4122fd:	je     0x412341
  412303:	cmp    DWORD PTR ds:0x429157,0x21
  41230a:	jl     0x412341
  412310:	jmp    0x41232f
  412315:	push   0x4cc6
  41231a:	push   0x428152
  41231f:	push   0x428140
  412324:	push   0x400000
  412329:	call   DWORD PTR ds:0x42a53b
  41232f:	mov    ebx,DWORD PTR ds:0x429157
  412335:	dec    ebx
  412336:	mov    DWORD PTR ds:0x429157,ebx
  41233c:	jmp    0x4122f6
  412341:	mov    ebx,DWORD PTR [ebp-0x8]
  412344:	xor    edx,eax
  412346:	xor    ebx,eax
  412348:	sub    edx,ebx
  41234a:	sub    edx,esi
  41234c:	xor    edx,eax
  41234e:	mov    DWORD PTR [ebp+0x8],edx
  412351:	mov    edx,DWORD PTR [ebp+0x8]
  412354:	mov    ebx,DWORD PTR [ebp-0x58]
  412357:	add    edx,0x5708e2
  41235d:	add    DWORD PTR ds:0x42918f,0x4291b7
  412367:	imul   edx,ebx
  41236a:	mov    DWORD PTR [ebp-0x58],edx
  41236d:	and    DWORD PTR ds:0x4291df,0x0
  412377:	mov    edx,DWORD PTR ds:0x4291df
  41237d:	inc    edx
  41237e:	mov    DWORD PTR ds:0x4291df,edx
  412384:	cmp    DWORD PTR ds:0x4291df,0x9
  41238b:	jb     0x4123cb
  412391:	jmp    0x4123a4
  412396:	push   DWORD PTR [ebp-0x24]
  412399:	push   0x400000
  41239e:	call   DWORD PTR ds:0x42a53f
  4123a4:	cmp    DWORD PTR ds:0x4291df,0x8
  4123ab:	jne    0x4123be
  4123b1:	mov    edx,DWORD PTR ds:0x4291df
  4123b7:	inc    edx
  4123b8:	mov    DWORD PTR ds:0x4291df,edx
  4123be:	cmp    DWORD PTR ds:0x4291df,0x10
  4123c5:	jb     0x412377
  4123cb:	mov    edx,DWORD PTR [ebp+0x8]
  4123ce:	adc    ebx,DWORD PTR ds:0x429183
  4123d4:	mov    ebx,DWORD PTR [ebp-0x54]
  4123d7:	add    DWORD PTR ds:0x4291ef,0x468d
  4123e1:	add    edx,0x64f89c
  4123e7:	or     edx,ebx
  4123e9:	mov    DWORD PTR [ebp-0x54],edx
  4123ec:	and    DWORD PTR ds:0x429187,0x0
  4123f6:	jmp    0x412408
  4123fb:	mov    ebx,DWORD PTR ds:0x429187
  412401:	inc    ebx
  412402:	mov    DWORD PTR ds:0x429187,ebx
  412408:	cmp    DWORD PTR ds:0x429187,0x1d
  41240f:	jae    0x412437
  412415:	cmp    DWORD PTR ds:0x429187,0x1e
  41241c:	jg     0x412437
  412422:	jmp    0x412432
  412427:	push   0x4291cf
  41242c:	call   DWORD PTR ds:0x42a543
  412432:	jmp    0x4123fb
  412437:	mov    edx,DWORD PTR [ebp+0x8]
  41243a:	mov    ebx,DWORD PTR [ebp-0x50]
  41243d:	and    DWORD PTR ds:0x4291db,0x4291cf
  412447:	add    edx,ecx
  412449:	mov    DWORD PTR ds:0x42919b,0x55c4
  412453:	xor    edx,ebx
  412455:	mov    DWORD PTR [ebp-0x50],edx
  412458:	sub    DWORD PTR ds:0x42915f,0x3296
  412462:	mov    edx,DWORD PTR [ebp+0x8]
  412465:	mov    ebx,DWORD PTR [ebp-0x4c]
  412468:	xor    DWORD PTR ds:0x4291a7,0x42916b
  412472:	add    edx,edi
  412474:	xor    DWORD PTR ds:0x4291e7,0x4291af
  41247e:	and    edx,ebx
  412480:	or     DWORD PTR ds:0x42915f,edx
  412486:	mov    DWORD PTR [ebp-0x4c],edx
  412489:	mov    ebx,DWORD PTR ds:0x42918b
  41248f:	sbb    DWORD PTR ds:0x429157,ebx
  412495:	mov    edx,DWORD PTR [ebp+0x8]
  412498:	xor    DWORD PTR ds:0x429157,0x429153
  4124a2:	mov    ebx,DWORD PTR [ebp-0x48]
  4124a5:	lea    edx,[ebx+edx*1+0x241fcdf]
  4124ac:	mov    DWORD PTR [ebp-0x48],edx
  4124af:	and    DWORD PTR ds:0x429173,0x0
  4124b9:	jmp    0x4124cb
  4124be:	mov    edx,DWORD PTR ds:0x429173
  4124c4:	inc    edx
  4124c5:	mov    DWORD PTR ds:0x429173,edx
  4124cb:	cmp    DWORD PTR ds:0x429173,0x15
  4124d2:	jae    0x412517
  4124d8:	cmp    DWORD PTR ds:0x429173,0x5
  4124df:	jle    0x412517
  4124e5:	jmp    0x4124f8
  4124ea:	push   DWORD PTR [ebp-0x18]
  4124ed:	push   0x42808a
  4124f2:	call   DWORD PTR ds:0x42a547
  4124f8:	cmp    DWORD PTR ds:0x429173,0x4
  4124ff:	jne    0x412512
  412505:	mov    edx,DWORD PTR ds:0x429173
  41250b:	inc    edx
  41250c:	mov    DWORD PTR ds:0x429173,edx
  412512:	jmp    0x4124be
  412517:	mov    edx,DWORD PTR [ebp+0x8]
  41251a:	mov    ebx,0xfa5e1528
  41251f:	sub    ebx,edx
  412521:	add    ebx,DWORD PTR [ebp-0x44]
  412524:	mov    DWORD PTR [ebp-0x44],ebx
  412527:	mov    edx,DWORD PTR [ebp+0x8]
  41252a:	xor    edx,eax
  41252c:	add    edx,esi
  41252e:	jne    0x4122e9
  412534:	mov    edx,DWORD PTR [ebp-0xc]
  412537:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41253e:	mov    bl,BYTE PTR [ebp-0x1]
  412541:	cmp    dl,bl
  412543:	je     0x412621
  412549:	mov    ecx,DWORD PTR [ebp-0x5c]
  41254c:	mov    edx,DWORD PTR [ebp-0xc]
  41254f:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  412556:	mov    ebx,DWORD PTR [ebp+0xc]
  412559:	xor    ecx,eax
  41255b:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f3]
  412562:	jne    0x414ade
  412568:	mov    ecx,DWORD PTR [ebp-0x5c]
  41256b:	mov    edx,DWORD PTR [ebp+0xc]
  41256e:	xor    ecx,eax
  412570:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f3]
  412578:	mov    edx,DWORD PTR [ebp-0x18]
  41257b:	xor    edx,eax
  41257d:	add    edx,esi
  41257f:	cmp    ecx,edx
  412581:	mov    ecx,DWORD PTR [ebp-0x14]
  412584:	mov    DWORD PTR [ebp+0x8],ecx
  412587:	mov    ecx,DWORD PTR [ebp+0x8]
  41258a:	je     0x41b681
  412590:	xor    ecx,eax
  412592:	add    ecx,esi
  412594:	mov    ecx,0x242ebcd
  412599:	je     0x414a32
  41259f:	mov    edx,DWORD PTR [ebp+0x8]
  4125a2:	mov    ebx,DWORD PTR [ebp-0x8]
  4125a5:	xor    edx,eax
  4125a7:	xor    ebx,eax
  4125a9:	sub    edx,ebx
  4125ab:	sub    edx,esi
  4125ad:	xor    edx,eax
  4125af:	mov    DWORD PTR [ebp+0x8],edx
  4125b2:	mov    edx,DWORD PTR [ebp+0x8]
  4125b5:	mov    ebx,DWORD PTR [ebp-0x58]
  4125b8:	add    edx,0x5708e2
  4125be:	imul   edx,ebx
  4125c1:	mov    DWORD PTR [ebp-0x58],edx
  4125c4:	mov    edx,DWORD PTR [ebp+0x8]
  4125c7:	mov    ebx,DWORD PTR [ebp-0x54]
  4125ca:	add    edx,0x64f89c
  4125d0:	or     edx,ebx
  4125d2:	mov    DWORD PTR [ebp-0x54],edx
  4125d5:	mov    edx,DWORD PTR [ebp+0x8]
  4125d8:	mov    ebx,DWORD PTR [ebp-0x50]
  4125db:	add    edx,ecx
  4125dd:	xor    edx,ebx
  4125df:	mov    DWORD PTR [ebp-0x50],edx
  4125e2:	mov    edx,DWORD PTR [ebp+0x8]
  4125e5:	mov    ebx,DWORD PTR [ebp-0x4c]
  4125e8:	add    edx,edi
  4125ea:	and    edx,ebx
  4125ec:	mov    DWORD PTR [ebp-0x4c],edx
  4125ef:	mov    edx,DWORD PTR [ebp+0x8]
  4125f2:	mov    ebx,DWORD PTR [ebp-0x48]
  4125f5:	lea    edx,[ebx+edx*1+0x241fcdf]
  4125fc:	mov    DWORD PTR [ebp-0x48],edx
  4125ff:	mov    edx,DWORD PTR [ebp+0x8]
  412602:	mov    ebx,0xfa5e1528
  412607:	sub    ebx,edx
  412609:	add    ebx,DWORD PTR [ebp-0x44]
  41260c:	mov    DWORD PTR [ebp-0x44],ebx
  41260f:	mov    edx,DWORD PTR [ebp+0x8]
  412612:	xor    edx,eax
  412614:	add    edx,esi
  412616:	jne    0x41259f
  41261c:	jmp    0x414a32
  412621:	mov    edx,DWORD PTR [ebp-0x14]
  412624:	jmp    0x4149ad
  412629:	rcr    ah,1
  41262b:	sbb    eax,DWORD PTR [edx+0x17]
  41262e:	mov    ah,0xd0
  412630:	nop
  412631:	cs aam 0x99
  412634:	or     BYTE PTR [eax+0x6ba0564d],al
  41263a:	mov    al,BYTE PTR [ebx-0x7ca3e87d]
  412640:	xor    edx,0x1a
  412643:	lahf   
  412644:	jne    0x41266f
  412646:	mov    ?,WORD PTR es:[edi]
  412649:	call   0x3927:0xa6f40974
  412650:	mov    ebp,0xfd0245d5
  412655:	(bad)  
  412656:	or     edi,DWORD PTR [edx]
  412658:	add    esp,esi
  41265a:	int3   
  41265b:	jle    0x412675
  41265d:	xchg   esp,eax
  41265e:	xor    DWORD PTR ds:0x11f9ec13,ecx
  412664:	jl     0x4125ec
  412666:	pop    ebp
  412667:	jp     0x4126cc
  412669:	aaa    
  41266a:	jb     0x41266c
  41266c:	jecxz  0x4126a7
  41266e:	addr16 cmc 
  412670:	sub    eax,0x929b4596
  412675:	retf   0x46df
  412678:	mov    al,0xa4
  41267a:	push   0xedff1358
  41267f:	sbb    dh,dh
  412681:	rol    DWORD PTR [esp+eiz*8],cl
  412684:	push   esi
  412685:	sub    DWORD PTR [ecx+edi*1+0x1a],esi
  412689:	mov    WORD PTR [ecx],es
  41268b:	outs   dx,DWORD PTR ds:[esi]
  41268c:	mov    ebx,0x237c11e0
  412691:	cmc    
  412692:	sbb    al,0x4d
  412694:	cdq    
  412695:	mov    esp,0xdef946a5
  41269a:	out    0x20,al
  41269c:	popf   
  41269d:	clc    
  41269e:	jo     0x41267c
  4126a0:	jecxz  0x41263a
  4126a2:	loope  0x412715
  4126a4:	out    dx,al
  4126a5:	jmp    0x412658
  4126a7:	sbb    ebp,DWORD PTR [ebx+0xe9860d9]
  4126ad:	and    al,0x3c
  4126af:	leave  
  4126b0:	out    0xe5,eax
  4126b2:	xlat   BYTE PTR ds:[ebx]
  4126b3:	mul    DWORD PTR [esi]
  4126b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126b6:	(bad)  
  4126b7:	aam    0x4
  4126b9:	or     al,0xd1
  4126bb:	das    
  4126bc:	push   ebx
  4126bd:	lods   al,BYTE PTR ds:[esi]
  4126be:	cmp    DWORD PTR [esi+0x30827f7a],esi
  4126c4:	push   ebx
  4126c5:	lds    ebx,FWORD PTR [ebx-0x5]
  4126c8:	int3   
  4126c9:	and    DWORD PTR [ebp-0x305325f1],esp
  4126cf:	or     ebx,esi
  4126d1:	sub    DWORD PTR [ecx],ebp
  4126d3:	icebp  
  4126d4:	enter  0xece9,0xe6
  4126d8:	mov    eax,0x30ccc58d
  4126dd:	mov    eax,ds:0x76c460d3
  4126e2:	fst    QWORD PTR [ecx+0x75]
  4126e5:	mov    WORD PTR [edi],cs
  4126e7:	out    dx,eax
  4126e8:	jg     0x412696
  4126ea:	imul   edi,DWORD PTR [ecx-0x107be533],0xffffffde
  4126f1:	fld    TBYTE PTR [ebp+0x60837aeb]
  4126f7:	fistp  WORD PTR [ecx]
  4126f9:	xchg   ecx,eax
  4126fa:	(bad)  
  4126fb:	lods   eax,DWORD PTR ds:[esi]
  4126fc:	shr    BYTE PTR ds:0xf643fca8,cl
  412702:	(bad)  
  412703:	pop    esi
  412704:	mov    al,0xdf
  412706:	pop    es
  412707:	fsubr  QWORD PTR [edi+0x3a181949]
  41270d:	mov    ebp,edx
  41270f:	inc    edx
  412710:	repnz ds scas eax,DWORD PTR es:[edi]
  412713:	xchg   edx,eax
  412714:	sub    BYTE PTR [eax+0x14b89534],ch
  41271a:	gs sahf 
  41271c:	push   eax
  41271d:	lock adc BYTE PTR [ebx+0xc],ah
  412721:	cdq    
  412722:	push   esi
  412723:	xchg   ebx,eax
  412724:	mov    eax,0x752e16cc
  412729:	mov    al,ds:0x8b9af8a9
  41272e:	add    esp,DWORD PTR [edx-0x3]
  412731:	or     ebx,DWORD PTR [ecx+0x5196f27]
  412737:	push   cs
  412738:	cmp    al,0x1a
  41273a:	and    ebp,DWORD PTR [eax]
  41273c:	call   0x1eb3:0xa1c6b977
  412743:	push   es
  412744:	repnz or BYTE PTR [ecx-0x822b6e9],ah
  41274b:	push   cs
  41274c:	jnp    0x412723
  41274e:	mov    esi,DWORD PTR [ebp+0x588eb7a1]
  412754:	push   eax
  412755:	xor    BYTE PTR [edi],bl
  412757:	push   edi
  412758:	push   0xe
  41275a:	call   0x86b456f8
  41275f:	test   al,0x2e
  412761:	in     al,0xe4
  412763:	pop    ss
  412764:	push   cs
  412765:	inc    ecx
  412766:	ret    0xddda
  412769:	sbb    bh,BYTE PTR [edi+0x7333fb46]
  41276f:	in     eax,0xc7
  412771:	mov    WORD PTR [eax],gs
  412773:	mov    eax,ds:0xe9c6827
  412778:	jmp    0x5fe0:0x87ce0d72
  41277f:	mov    dl,0x2a
  412781:	in     eax,0xa
  412783:	jo     0x412769
  412785:	mov    cl,0xc7
  412787:	mov    al,ds:0xf49de35e
  41278c:	push   ecx
  41278d:	test   DWORD PTR [ebp+0x10],0x8757bf63
  412794:	popf   
  412795:	cmc    
  412796:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412797:	xor    ch,bl
  412799:	mov    al,ds:0x884e98f5
  41279e:	sub    eax,0x7072ab10
  4127a3:	out    dx,al
  4127a4:	lods   eax,DWORD PTR ds:[esi]
  4127a5:	retf   
  4127a6:	push   0x81698254
  4127ab:	sub    esi,esi
  4127ad:	pop    ebp
  4127ae:	sbb    eax,0x359ee062
  4127b3:	mov    dh,0x8
  4127b5:	fcomp  QWORD PTR [edx+esi*2+0x738567a8]
  4127bc:	bound  edi,QWORD PTR [ecx]
  4127be:	pop    edi
  4127bf:	push   ds
  4127c0:	arpl   WORD PTR [edx],sp
  4127c2:	icebp  
  4127c3:	and    al,0xcc
  4127c5:	mov    edx,0xf6dbe2b0
  4127ca:	cli    
  4127cb:	shl    cl,0x67
  4127ce:	sub    eax,0xefa84746
  4127d3:	sbb    DWORD PTR [ebx+0x6a243cb5],edx
  4127d9:	ficomp WORD PTR [eax+0x2b]
  4127dc:	mul    DWORD PTR [esi+eax*1]
  4127df:	xchg   DWORD PTR [esi+edi*2],esi
  4127e2:	sub    al,0x60
  4127e4:	and    ebx,edi
  4127e6:	push   es
  4127e7:	mov    al,0x19
  4127e9:	imul   edx,DWORD PTR [edx+0x70],0xff66b108
  4127f0:	inc    ebp
  4127f1:	add    dh,BYTE PTR ds:0x557651c3
  4127f7:	dec    esi
  4127f8:	mov    al,ds:0x58bf45f8
  4127fd:	pop    ecx
  4127fe:	pop    esp
  4127ff:	stos   DWORD PTR es:[edi],eax
  412800:	cmc    
  412801:	pop    eax
  412802:	sub    al,0xc1
  412804:	mov    edi,0xdba89060
  412809:	fsubr  DWORD PTR [ecx]
  41280b:	xor    DWORD PTR [eax+ebx*2-0x1b],ebp
  41280f:	ret    0xad18
  412812:	sub    DWORD PTR [esi-0xd],0xffffffd5
  412816:	out    dx,eax
  412817:	pusha  
  412818:	(bad)  
  412819:	mov    dh,0x5b
  41281b:	mul    DWORD PTR [edi+ebp*2-0x29976f61]
  412822:	fld    QWORD PTR ds:0xba50306
  412828:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41282a:	xchg   ebp,eax
  41282b:	xchg   ebp,eax
  41282c:	idiv   bl
  41282e:	fsubr  QWORD PTR [ebx+0x140a4598]
  412834:	jp     0x412898
  412836:	enter  0xb64e,0xee
  41283a:	jmp    0x41287e
  41283c:	je     0x4128a0
  41283e:	pop    esi
  41283f:	pop    edi
  412840:	rep ins BYTE PTR es:[edi],dx
  412842:	(bad)  
  412843:	inc    BYTE PTR [edi-0x7c7ed101]
  412849:	jb     0x412859
  41284b:	add    edx,DWORD PTR [esi-0x58]
  41284e:	lock jbe 0x412805
  412851:	(bad)  [edx+ecx*1-0x79c303df]
  412858:	cli    
  412859:	dec    esi
  41285a:	cmp    edx,0x62
  41285d:	je     0x412863
  41285f:	mov    ebx,0x3f164947
  412864:	shl    DWORD PTR [esi-0x3c00adb5],0x1a
  41286b:	xchg   ebp,eax
  41286c:	cli    
  41286d:	rcl    DWORD PTR [ebx-0x77],1
  412870:	xlat   BYTE PTR ds:[ebx]
  412871:	in     eax,0xd1
  412873:	adc    DWORD PTR [eax],0x46
  412876:	mov    ebp,0x95d19c1a
  41287b:	rcl    DWORD PTR [edx+eax*2+0x4b29d7c7],cl
  412882:	mov    bl,0x9f
  412884:	mov    ecx,0xb5cd7b47
  412889:	cli    
  41288a:	jg     0x41281b
  41288c:	dec    ebp
  41288d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41288e:	add    cl,BYTE PTR [ebx+ebp*1-0x1]
  412892:	jbe    0x41282d
  412894:	sub    al,0x8f
  412896:	xchg   ebp,eax
  412897:	sahf   
  412898:	mov    bl,0xbc
  41289a:	fnstcw WORD PTR [esi+0x5e3fb95d]
  4128a0:	inc    eax
  4128a1:	aam    0x2f
  4128a3:	sub    eax,0xf088a96e
  4128a8:	push   ecx
  4128a9:	cdq    
  4128aa:	sar    ch,0x86
  4128ad:	mov    esi,edi
  4128af:	xchg   ebx,edi
  4128b1:	add    edx,ebx
  4128b3:	or     cl,ch
  4128b5:	and    al,0x77
  4128b7:	adc    cl,0xfb
  4128ba:	mov    BYTE PTR [ecx],ah
  4128bc:	pop    esp
  4128bd:	fidivr WORD PTR [ebx]
  4128bf:	leave  
  4128c0:	dec    esi
  4128c1:	fstp   DWORD PTR [edi-0x1efa173b]
  4128c7:	add    eax,0x914cf238
  4128cc:	jmp    0x1401e99f
  4128d1:	jge    0x412904
  4128d3:	sbb    DWORD PTR [edx-0xaa6675e],ebp
  4128d9:	or     ebp,DWORD PTR [edx+0x40d200ae]
  4128df:	mov    dh,0xff
  4128e1:	inc    ecx
  4128e2:	sub    eax,0xfa130fe1
  4128e7:	(bad)  
  4128e8:	mov    ebp,0xa11abcb0
  4128ed:	push   ebp
  4128ee:	lds    ecx,FWORD PTR [esi]
  4128f0:	es int3 
  4128f2:	and    bl,BYTE PTR [ebx]
  4128f4:	pop    ss
  4128f5:	das    
  4128f6:	push   ds
  4128f7:	sar    DWORD PTR [ecx],cl
  4128f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128fa:	cmp    BYTE PTR [edx-0x64a4ca7e],bl
  412900:	inc    ebp
  412901:	fwait
  412902:	add    al,0x55
  412904:	clc    
  412905:	jecxz  0x4128e6
  412907:	dec    edi
  412908:	outs   dx,DWORD PTR ds:[esi]
  412909:	adc    BYTE PTR [edx+0x72],0xdb
  41290d:	mov    edx,esp
  41290f:	ss dec ebx
  412911:	outs   dx,BYTE PTR ds:[esi]
  412912:	rol    DWORD PTR [esi-0x6d],0xdd
  412916:	jmp    0x18e1:0xd6eb2567
  41291d:	cli    
  41291e:	xchg   esp,eax
  41291f:	xor    al,0x33
  412921:	test   BYTE PTR ds:0xc046bc95,al
  412927:	pusha  
  412928:	xchg   dh,bh
  41292a:	xchg   ebp,eax
  41292b:	(bad)  
  41292c:	pop    ebx
  41292d:	out    dx,al
  41292e:	cmp    DWORD PTR [ebx+0x63b53100],ecx
  412934:	lock pushf 
  412936:	push   es
  412937:	jns    0x41297b
  412939:	test   al,0x5d
  41293b:	or     BYTE PTR [ecx-0x25cb55d9],bh
  412941:	push   ss
  412942:	aaa    
  412943:	inc    ecx
  412944:	lea    esp,[edx]
  412946:	cwde   
  412947:	jmp    0x4128d4
  412949:	cld    
  41294a:	lds    ebx,FWORD PTR [ecx+ebp*2]
  41294d:	mov    gs,WORD PTR gs:[esi+0x281fd913]
  412954:	and    al,0xc
  412956:	push   ss
  412957:	or     BYTE PTR [edi],ah
  412959:	sbb    esp,DWORD PTR [edi+0x19]
  41295c:	or     eax,0x78b90e09
  412961:	mov    ecx,0xd04593d5
  412966:	mov    edx,0xcab1618f
  41296b:	xor    eax,0x7c2bf229
  412970:	fst    DWORD PTR [edi+0x2435e0ae]
  412976:	pop    esi
  412977:	adc    DWORD PTR [ecx],eax
  412979:	fs push ebp
  41297b:	xchg   ecx,eax
  41297c:	pop    ds
  41297d:	mov    eax,ds:0xdcd6b40d
  412982:	shl    BYTE PTR [ebx-0x66],0x1c
  412986:	push   edx
  412987:	xchg   edi,eax
  412988:	ds inc ecx
  41298a:	mov    ds:0xe81650cd,eax
  41298f:	inc    dh
  412991:	jmp    0x27e5:0x236a8010
  412998:	es rol dl,cl
  41299b:	in     al,0xdf
  41299d:	addr16 adc dl,ch
  4129a0:	sub    BYTE PTR [ebx+0x7e],bh
  4129a3:	and    DWORD PTR ds:0x64491bf1,edi
  4129a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129aa:	and    ebx,DWORD PTR [edi+eiz*4]
  4129ad:	pop    esi
  4129ae:	(bad)  
  4129af:	jp     0x4129c7
  4129b1:	sub    BYTE PTR [ebp+ebp*8-0x5c92c675],dh
  4129b8:	cmp    BYTE PTR [esi],0xb4
  4129bb:	data16 test BYTE PTR ds:0x702d86f8,0x93
  4129c3:	pop    ds
  4129c4:	mov    ecx,0x563a61be
  4129c9:	sbb    bh,ch
  4129cb:	xor    DWORD PTR [eax-0x3],edx
  4129ce:	inc    edx
  4129cf:	mov    eax,0xfaaf74e9
  4129d4:	pop    eax
  4129d5:	(bad)  
  4129d6:	mov    BYTE PTR [ebp-0x5d],bh
  4129d9:	out    dx,eax
  4129da:	pop    eax
  4129db:	push   cs
  4129dc:	repnz div DWORD PTR [esi-0xc]
  4129e0:	or     al,0x14
  4129e2:	push   esp
  4129e3:	mov    al,ds:0x527c49e5
  4129e8:	cmp    edx,DWORD PTR [eax-0x87649a2]
  4129ee:	mov    cl,0x93
  4129f0:	cdq    
  4129f1:	clc    
  4129f2:	lods   eax,DWORD PTR ds:[esi]
  4129f3:	and    cl,dh
  4129f5:	fs test al,0x2f
  4129f8:	test   bh,dh
  4129fa:	dec    esp
  4129fb:	push   edi
  4129fc:	xor    eax,0xe200ddef
  412a01:	push   ebx
  412a02:	fidivr WORD PTR [ebx+ebp*4-0x64]
  412a06:	loop   0x4129fd
  412a08:	out    0xf,al
  412a0a:	test   bp,si
  412a0d:	push   edx
  412a0e:	push   0xfffffff8
  412a10:	fucomip st,st(3)
  412a12:	bound  esp,QWORD PTR [esi+0x79]
  412a15:	push   es
  412a16:	clc    
  412a17:	outs   dx,DWORD PTR ds:[esi]
  412a18:	xor    dl,BYTE PTR [ebx+0x45]
  412a1b:	(bad)  ds:0xa9abd3cc
  412a21:	xlat   BYTE PTR ds:[ebx]
  412a22:	mov    bh,0xc6
  412a24:	pop    eax
  412a25:	dec    eax
  412a26:	jmp    0xac820308
  412a2b:	sbb    cl,BYTE PTR [esi]
  412a2d:	mov    ds:0x16151c54,al
  412a32:	mov    dh,0x42
  412a34:	mov    cl,0x17
  412a36:	adc    dl,bl
  412a38:	pop    eax
  412a39:	jno    0x412a4e
  412a3b:	sbb    al,0x1e
  412a3d:	jne    0x412a6f
  412a3f:	mov    ebx,0xe18a003a
  412a44:	test   BYTE PTR [edi+0x0],bl
  412a47:	and    DWORD PTR [ebx+eax*4+0x8057b01],0xffffffb6
  412a4f:	and    DWORD PTR [eax],edx
  412a51:	push   cs
  412a52:	test   bl,ch
  412a54:	sbb    eax,0xfef747ae
  412a59:	faddp  st(3),st
  412a5b:	pop    ds
  412a5c:	sahf   
  412a5d:	je     0x412aa4
  412a5f:	xchg   ebp,eax
  412a60:	mov    eax,0x6efd8627
  412a65:	sub    cl,BYTE PTR [edi-0x4342d6ff]
  412a6b:	xor    al,0xe5
  412a6d:	mov    eax,DWORD PTR [edi+0x8e4c47b]
  412a73:	inc    edx
  412a74:	mov    ah,0xa8
  412a76:	out    0xbb,eax
  412a78:	(bad)  
  412a79:	cmp    eax,DWORD PTR [ebx+0x4f]
  412a7c:	pop    ebp
  412a7d:	add    cl,dl
  412a7f:	and    al,0x2b
  412a81:	xchg   bl,al
  412a83:	xchg   esp,eax
  412a84:	retf   0x682c
  412a87:	fild   WORD PTR [edi-0x5b]
  412a8a:	adc    edi,DWORD PTR [edx+0x2b]
  412a8d:	cld    
  412a8e:	icebp  
  412a8f:	ds pop edx
  412a91:	clc    
  412a92:	adc    ebp,edx
  412a94:	push   ecx
  412a95:	xchg   ebx,eax
  412a96:	mov    ebp,0x4f021257
  412a9b:	push   ebx
  412a9c:	mov    bh,0xcb
  412a9e:	outs   dx,BYTE PTR ds:[esi]
  412a9f:	push   esp
  412aa0:	pushf  
  412aa1:	stos   BYTE PTR es:[edi],al
  412aa2:	mov    gs,WORD PTR [eax+0x59]
  412aa5:	sub    DWORD PTR [edx-0x6792c3d3],edx
  412aab:	add    eax,0x7bbccec3
  412ab0:	int    0x93
  412ab2:	in     al,0xf7
  412ab4:	xor    eax,DWORD PTR [ecx-0x576cd31d]
  412aba:	lods   al,BYTE PTR ds:[esi]
  412abb:	pop    ss
  412abc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412abd:	and    BYTE PTR ds:0xa38f2936,0xc6
  412ac4:	cdq    
  412ac5:	mov    ds:0xa16fea11,eax
  412aca:	inc    esp
  412acb:	jp     0x412af3
  412acd:	and    al,0xb0
  412acf:	push   edx
  412ad0:	outs   dx,BYTE PTR ds:[esi]
  412ad1:	mov    dh,0x6f
  412ad3:	mov    esp,0x9cf794fe
  412ad8:	ins    BYTE PTR es:[edi],dx
  412ad9:	mov    ds:0xd4d45cf7,al
  412ade:	out    dx,eax
  412adf:	jnp    0x412abd
  412ae1:	jmp    0xe892:0x16d5b65e
  412ae8:	adc    eax,0xe87364a8
  412aed:	xchg   edi,eax
  412aee:	mov    BYTE PTR [ebx+edx*2-0x3ded98c],cl
  412af5:	inc    ebp
  412af6:	loopne 0x412b4c
  412af8:	ins    BYTE PTR es:[edi],dx
  412af9:	inc    ebp
  412afa:	in     al,0x9f
  412afc:	or     al,0xa
  412afe:	add    edi,DWORD PTR [edx+0x46]
  412b01:	mov    edx,0x5be3c77e
  412b06:	ret    
  412b07:	int3   
  412b08:	inc    esi
  412b09:	fs adc al,0x7a
  412b0c:	mov    esi,0xd778323b
  412b11:	pop    esi
  412b12:	call   FWORD PTR [ebx+edx*2+0x3a]
  412b16:	pop    esi
  412b17:	adc    eax,0xe3db7c57
  412b1c:	inc    edx
  412b1d:	inc    ebx
  412b1e:	stc    
  412b1f:	sub    ecx,DWORD PTR [ecx]
  412b21:	cwde   
  412b22:	cmc    
  412b23:	cmp    al,0x92
  412b25:	ret    0x6de0
  412b28:	mov    edi,0xa389da46
  412b2d:	mov    DWORD PTR [edx],0xc6e3d20f
  412b33:	popf   
  412b34:	std    
  412b35:	cmp    eax,0xdd524a50
  412b3a:	push   0xf5389d21
  412b3f:	ret    0x9755
  412b42:	xchg   DWORD PTR [esi-0x363b7d1a],ecx
  412b48:	or     BYTE PTR [eax-0x38a3f14c],cl
  412b4e:	retf   
  412b4f:	cli    
  412b50:	dec    edx
  412b51:	and    ah,BYTE PTR [ebx]
  412b53:	(bad)  
  412b54:	dec    esi
  412b55:	dec    edx
  412b56:	mov    eax,0x932577dc
  412b5b:	ret    
  412b5c:	mov    cl,0x93
  412b5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b5f:	xchg   edx,eax
  412b60:	sub    BYTE PTR [ebx],0xb0
  412b63:	and    DWORD PTR [eax+ebx*4],eax
  412b66:	sub    eax,0x485d482e
  412b6b:	cmovb  edi,DWORD PTR [edi]
  412b6e:	rcl    bh,cl
  412b70:	jl     0x412b86
  412b72:	pop    ecx
  412b73:	sub    DWORD PTR ds:0xb2c904b3,edx
  412b79:	dec    edi
  412b7a:	push   0xffffffea
  412b7c:	or     eax,0x1476540d
  412b81:	adc    eax,0x4b4d5599
  412b86:	lock cwde 
  412b88:	aam    0xfe
  412b8a:	jmp    0x526362ef
  412b8f:	push   ecx
  412b90:	inc    eax
  412b91:	jmp    0xa741c4b8
  412b96:	inc    DWORD PTR [ebx-0x58]
  412b99:	and    ebp,DWORD PTR [ecx]
  412b9b:	in     eax,dx
  412b9c:	dec    ebp
  412b9d:	cdq    
  412b9e:	push   edi
  412b9f:	cmp    eax,0xda2aebcc
  412ba4:	pop    esi
  412ba5:	pop    ebx
  412ba6:	aas    
  412ba7:	mov    al,0x18
  412ba9:	jge    0x412bfc
  412bab:	sub    dl,dh
  412bad:	jecxz  0x412b5e
  412baf:	push   ebx
  412bb0:	ror    BYTE PTR [edi+0x3d],cl
  412bb3:	es or  al,0x3d
  412bb6:	cmp    DWORD PTR [edx+0x54],ecx
  412bb9:	shl    DWORD PTR gs:[esi-0x4711851f],1
  412bc0:	test   eax,0x4e204c8f
  412bc5:	sbb    eax,0x238b76e2
  412bca:	xchg   al,dl
  412bcc:	xchg   esp,eax
  412bcd:	jl     0x412bfc
  412bcf:	inc    edi
  412bd0:	mov    al,0xb
  412bd2:	cmp    DWORD PTR [edx],ecx
  412bd4:	pop    esp
  412bd5:	pop    esp
  412bd6:	xchg   ecx,eax
  412bd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bd8:	cmp    eax,0x3450de1e
  412bdd:	mov    ebx,0x26c87caf
  412be2:	sub    ebp,0x6b
  412be5:	cmp    BYTE PTR [ebx-0x1adb897e],ch
  412beb:	out    dx,al
  412bec:	mov    al,ds:0x5a63f207
  412bf1:	mov    bh,0x87
  412bf3:	mov    dh,0x98
  412bf5:	sbb    DWORD PTR [edi-0x23390c4c],esp
  412bfb:	fistp  QWORD PTR [edi+0x60]
  412bfe:	mov    esi,ebx
  412c00:	aas    
  412c01:	fadd   DWORD PTR [ecx+edi*2]
  412c04:	and    esi,ecx
  412c06:	sbb    BYTE PTR [esi-0x70f1c122],ah
  412c0c:	jle    0x412b91
  412c0e:	push   eax
  412c0f:	sub    DWORD PTR [edx+0x4b],eax
  412c12:	push   ds
  412c13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c14:	adc    esi,0x88388851
  412c1a:	cmp    BYTE PTR [esi-0x75],bh
  412c1d:	loopne 0x412c86
  412c1f:	adc    ebx,DWORD PTR [eax*2+0x6ba361f3]
  412c26:	icebp  
  412c27:	cld    
  412c28:	sbb    ch,BYTE PTR [esi]
  412c2a:	jge    0x412c28
  412c2c:	(bad)  
  412c2d:	test   al,0x13
  412c2f:	adc    eax,0x50924cd6
  412c34:	call   0x3fe8:0xe9f9a3c6
  412c3b:	js     0x412c09
  412c3d:	test   DWORD PTR [ebx+0x28d2fc77],esp
  412c43:	test   al,0xca
  412c45:	in     eax,0x3b
  412c47:	xchg   ebp,eax
  412c48:	lahf   
  412c49:	mov    ebp,edx
  412c4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c4c:	mov    ebp,0x5904eb98
  412c51:	lahf   
  412c52:	stos   BYTE PTR es:[edi],al
  412c53:	inc    eax
  412c54:	push   esi
  412c55:	add    esi,DWORD PTR [edi+0x1ebd9776]
  412c5b:	jmp    0xb5e3c18
  412c60:	jmp    0xb8fe9ca5
  412c65:	mov    ah,0xb2
  412c67:	push   ebx
  412c68:	aad    0x8a
  412c6a:	add    al,0xf6
  412c6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c6d:	xchg   ecx,eax
  412c6e:	cmp    BYTE PTR [esi+0x228b1bde],0xdd
  412c75:	mov    edi,0x49e370ca
  412c7a:	push   ds
  412c7b:	test   BYTE PTR [ebx-0x1d],cl
  412c7e:	mov    DWORD PTR [eax],esp
  412c80:	dec    eax
  412c81:	imul   ebx,edi,0xe49abcc9
  412c87:	push   0x2b7bb9a
  412c8c:	in     eax,0x7f
  412c8e:	push   es
  412c8f:	test   BYTE PTR [esi+edx*4-0x3d],bh
  412c93:	ins    DWORD PTR es:[edi],dx
  412c94:	cmp    eax,0x38fbc3d6
  412c99:	add    esi,ebx
  412c9b:	or     cl,BYTE PTR [esi-0x3a78018e]
  412ca1:	mov    edi,0x3224c11d
  412ca6:	sbb    al,BYTE PTR [ecx]
  412ca8:	pop    esp
  412ca9:	push   ebp
  412caa:	mov    edi,0x97dd30d7
  412caf:	test   ebp,edi
  412cb1:	sub    al,0xb8
  412cb3:	(bad)  
  412cb4:	pushf  
  412cb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cb6:	(bad)  
  412cb7:	adc    al,0x48
  412cb9:	cmp    DWORD PTR [edi+ebx*8-0x603cea70],0x9a0832be
  412cc4:	dec    ebx
  412cc5:	cmp    eax,0x4650998e
  412cca:	aam    0xb3
  412ccc:	call   0x949d941f
  412cd1:	scas   al,BYTE PTR es:[edi]
  412cd2:	iret   
  412cd3:	(bad)  
  412cd4:	mov    edx,0xa2e5b7f2
  412cd9:	jmp    0xb560299b
  412cde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cdf:	add    dh,BYTE PTR [esi-0x7254c21d]
  412ce5:	aad    0x57
  412ce7:	inc    esi
  412ce8:	adc    al,0x2e
  412cea:	outs   dx,DWORD PTR ds:[esi]
  412ceb:	or     DWORD PTR [eax-0x5d072c9d],ebp
  412cf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cf2:	xchg   DWORD PTR [ecx],ebx
  412cf4:	sub    ecx,0x55
  412cf7:	ss and al,0x62
  412cfa:	or     eax,0xa6afcc2c
  412cff:	cmp    esp,DWORD PTR [edi-0x2c]
  412d02:	jo     0x412c93
  412d04:	sub    BYTE PTR [ecx+0x70],0xcb
  412d08:	outs   dx,BYTE PTR ds:[esi]
  412d09:	add    DWORD PTR [edx+0xb0291b4],ebp
  412d0f:	jmp    0x7bd1:0xbc3d20e9
  412d16:	jg     0x412d7a
  412d18:	push   0xb
  412d1a:	fcmovne st,st(0)
  412d1c:	test   esp,eax
  412d1e:	add    al,0xac
  412d20:	and    al,0x4d
  412d22:	(bad)  
  412d23:	rol    BYTE PTR [ecx-0x7cc458cc],0x8f
  412d2a:	sti    
  412d2b:	pop    esi
  412d2c:	popa   
  412d2d:	or     cl,dl
  412d2f:	out    0xf0,al
  412d31:	(bad)  
  412d32:	inc    esp
  412d33:	out    0x78,al
  412d35:	push   0x5f180652
  412d3a:	and    dh,BYTE PTR [eax+0x49]
  412d3d:	xor    bh,al
  412d3f:	push   eax
  412d40:	jnp    0x412db0
  412d42:	sub    DWORD PTR [edx+0xaf3451a],esp
  412d48:	push   edx
  412d49:	inc    ebx
  412d4a:	imul   esi,DWORD PTR [edi+0x4f],0xb50e9786
  412d51:	stos   DWORD PTR es:[edi],eax
  412d52:	sub    eax,0x92700a6f
  412d57:	sbb    ch,BYTE PTR [eax+esi*8+0x2a720dcc]
  412d5e:	ja     0x412d21
  412d60:	test   BYTE PTR ds:0xc92fc3b6,bl
  412d66:	stos   DWORD PTR es:[edi],eax
  412d67:	sbb    esi,DWORD PTR [edi]
  412d69:	enter  0x16c,0x4e
  412d6d:	and    BYTE PTR [ecx+0x40d84b6b],0x8b
  412d74:	jno    0x412d01
  412d76:	mov    ecx,0x96028d15
  412d7b:	or     eax,0x88af36ea
  412d80:	sbb    al,0xd1
  412d82:	sbb    al,0x26
  412d84:	adc    al,0x0
  412d86:	in     al,0x93
  412d88:	and    al,0xb2
  412d8a:	dec    sp
  412d8c:	mov    al,ds:0xf7e0ca82
  412d91:	or     al,0x57
  412d93:	data16 xor BYTE PTR [ebp-0x252b0a78],0x18
  412d9b:	mov    ecx,0xbab382cb
  412da0:	jb     0x412d36
  412da2:	jle    0x412d59
  412da4:	retf   0x1ded
  412da7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412da8:	sub    DWORD PTR [edx-0x1c],esi
  412dab:	mov    WORD PTR [eax],gs
  412dad:	cs push 0xbaa8069c
  412db3:	cmp    dh,0x3b
  412db6:	adc    al,0x19
  412db8:	iret   
  412db9:	adc    al,0x6f
  412dbb:	dec    esi
  412dbc:	in     eax,dx
  412dbd:	popa   
  412dbe:	fdivr  DWORD PTR [edx-0x22]
  412dc1:	sub    eax,0x23a026a2
  412dc6:	dec    eax
  412dc7:	pop    edx
  412dc8:	push   0xffffff99
  412dca:	jl     0x412de8
  412dcc:	pop    edx
  412dcd:	mov    eax,ds:0xa450da90
  412dd2:	idiv   DWORD PTR [ecx+0x7a547ab1]
  412dd8:	or     ch,BYTE PTR ds:0x7e992be0
  412dde:	fimul  WORD PTR [ebx-0x45e589aa]
  412de4:	jne    0x412dde
  412de6:	leave  
  412de7:	jbe    0x412e15
  412de9:	jle    0x412e58
  412deb:	je     0x412d87
  412ded:	cmp    eax,0x65d48813
  412df2:	pusha  
  412df3:	or     al,0xf6
  412df5:	mov    eax,0xa17c917a
  412dfa:	(bad)  
  412dfb:	push   0xd1440448
  412e00:	xchg   DWORD PTR [esi+0x27],ebx
  412e03:	pop    es
  412e04:	scas   al,BYTE PTR es:[edi]
  412e05:	pop    ebp
  412e06:	mov    ?,WORD PTR [ebx+0x30]
  412e09:	lock xchg ecx,eax
  412e0b:	std    
  412e0c:	mov    eax,ds:0xe3bd8be1
  412e11:	mov    ebx,DWORD PTR [eax+0x6a]
  412e14:	ret    0x4019
  412e17:	out    dx,eax
  412e18:	cwde   
  412e19:	jo     0x412d9c
  412e1b:	repnz push esp
  412e1d:	dec    edx
  412e1e:	jne    0x412e0a
  412e20:	sub    eax,0xcbce2ecd
  412e25:	cmc    
  412e26:	inc    ebx
  412e27:	out    dx,al
  412e28:	fstp   TBYTE PTR [edx+0x5b]
  412e2b:	push   es
  412e2c:	mov    edx,0xa9bfbbb5
  412e31:	(bad)  
  412e32:	push   esi
  412e33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e34:	and    BYTE PTR [ebx],cl
  412e36:	jne    0x412e38
  412e38:	jmp    0xd562:0x32ae546d
  412e3f:	mov    esp,0x53f84de6
  412e44:	adc    eax,0xe5a10ba9
  412e49:	in     eax,0xab
  412e4b:	jne    0x412e40
  412e4d:	pop    edi
  412e4e:	(bad)  
  412e4f:	pop    esi
  412e50:	or     bh,BYTE PTR [ebp+0x385941af]
  412e56:	dec    ebx
  412e57:	push   ds
  412e58:	add    dh,ch
  412e5a:	jbe    0x412e00
  412e5c:	dec    eax
  412e5d:	mov    dl,0x72
  412e5f:	and    edx,DWORD PTR [ecx]
  412e61:	nop
  412e62:	scas   al,BYTE PTR es:[edi]
  412e63:	push   edi
  412e64:	fisttp DWORD PTR [ebp+0x162fea6a]
  412e6a:	xor    DWORD PTR [esi-0x25],esi
  412e6d:	aaa    
  412e6e:	mov    ebp,0xbc087201
  412e73:	inc    ebp
  412e74:	mov    edx,0x5b13a1a0
  412e79:	aam    0x6a
  412e7b:	pop    ss
  412e7c:	mov    bh,0x8f
  412e7e:	out    dx,al
  412e7f:	retf   0x3d8e
  412e82:	jecxz  0x412e49
  412e84:	fbld   TBYTE PTR [eax+0x6cf59cf8]
  412e8a:	fs test al,0x45
  412e8d:	xor    al,cl
  412e8f:	lock xchg edi,eax
  412e91:	pusha  
  412e92:	imul   esp,DWORD PTR [edi+0x5f99c89f],0x6b
  412e99:	inc    esp
  412e9a:	data16 icebp 
  412e9c:	stos   DWORD PTR es:[edi],eax
  412e9d:	jnp    0x412e29
  412e9f:	int3   
  412ea0:	push   cs
  412ea1:	pop    si
  412ea3:	scas   eax,DWORD PTR es:[edi]
  412ea4:	repz xchg edx,eax
  412ea6:	enter  0x83d,0x18
  412eaa:	sub    al,0xca
  412eac:	jbe    0x412e33
  412eae:	cmp    DWORD PTR [eax-0x15],ecx
  412eb1:	mov    edi,0x5cc15048
  412eb6:	aam    0xf4
  412eb8:	mov    esp,0xcad993f1
  412ebd:	cmp    cl,BYTE PTR [eax-0x290c8fde]
  412ec3:	mov    ebx,0xe93643c7
  412ec8:	daa    
  412ec9:	ins    BYTE PTR es:[edi],dx
  412eca:	inc    ebx
  412ecb:	xlat   BYTE PTR ds:[ebx]
  412ecc:	xor    dh,BYTE PTR [ecx+ebx*8-0x658b0414]
  412ed3:	or     al,0xec
  412ed5:	pop    ax
  412ed7:	xchg   DWORD PTR [eax],eax
  412ed9:	sar    DWORD PTR [edx-0x4f],0xe9
  412edd:	mov    dh,BYTE PTR [ebx]
  412edf:	xor    DWORD PTR [edi-0x11eb1579],0x777ccfd4
  412ee9:	xchg   esp,eax
  412eea:	test   cl,0xa5
  412eed:	sbb    BYTE PTR [ecx],cl
  412eef:	jno    0x412f3a
  412ef1:	mov    edx,DWORD PTR [edx+0x6a1c462e]
  412ef7:	inc    ebx
  412ef8:	clc    
  412ef9:	aad    0x2a
  412efb:	rcl    al,cl
  412efd:	xchg   ebp,eax
  412efe:	push   ss
  412eff:	xor    bh,dl
  412f01:	addr16 xchg ebp,eax
  412f03:	mov    ch,0x4
  412f05:	mov    bl,0x8e
  412f07:	jmp    0x412f6f
  412f09:	ret    0xf06d
  412f0c:	sti    
  412f0d:	and    dl,BYTE PTR [ebx]
  412f0f:	mov    bh,BYTE PTR [ecx-0x4a7fb722]
  412f15:	ficom  DWORD PTR [ebp-0x48]
  412f18:	inc    edi
  412f19:	inc    esp
  412f1a:	ds retfw 0x7f14
  412f1f:	adc    eax,ebp
  412f21:	push   0x7e
  412f23:	jbe    0x412f1b
  412f25:	cli    
  412f26:	not    DWORD PTR [edi-0x3280b0bd]
  412f2c:	adc    edx,DWORD PTR [ebx+0x5c92ce19]
  412f32:	push   esp
  412f33:	rol    DWORD PTR [edi],0x17
  412f36:	mov    dh,0x8d
  412f38:	jecxz  0x412f01
  412f3a:	fisubr DWORD PTR [ecx+eax*4+0x223efd74]
  412f41:	mov    fs,WORD PTR [esi]
  412f43:	mov    ecx,0x7be382b7
  412f48:	repnz cmove ecx,DWORD PTR [ecx]
  412f4c:	xor    BYTE PTR [ecx+ebx*8+0x64],dl
  412f50:	xor    cl,BYTE PTR [edx-0x6b]
  412f53:	jmp    0x12c3f9e0
  412f58:	fmul   QWORD PTR [edx+0x70]
  412f5b:	mov    ch,0xf0
  412f5d:	fucom  st(5)
  412f5f:	xor    BYTE PTR [ebx+0x48e56ebf],al
  412f65:	imul   esp,DWORD PTR [edx+0xe],0xf67a40bc
  412f6c:	add    DWORD PTR [edi+0x4],0xffffffac
  412f70:	cld    
  412f71:	repz js 0x412fd8
  412f74:	sbb    BYTE PTR [edi+0x2d],0xff
  412f78:	jnp    0x412ff2
  412f7a:	dec    ebx
  412f7b:	push   edx
  412f7c:	cmp    BYTE PTR [eax],al
  412f7e:	call   0x1a4d:0x2cf27fa3
  412f85:	push   ss
  412f86:	mov    ecx,0xe4f10528
  412f8b:	push   es
  412f8c:	sbb    DWORD PTR [ecx+0x1e],ebx
  412f8f:	mov    ds:0xb5dbcd73,eax
  412f94:	test   BYTE PTR [ecx+0x64],0xe9
  412f98:	fiadd  WORD PTR [ecx+0x9]
  412f9b:	sbb    esp,DWORD PTR [ebp-0x22]
  412f9e:	xor    eax,DWORD PTR [ecx-0x7128be02]
  412fa4:	(bad)  
  412fa6:	sbb    al,0xc6
  412fa8:	mov    BYTE PTR [edx],dl
  412faa:	mov    ebx,ecx
  412fac:	pop    edi
  412fad:	in     eax,dx
  412fae:	push   edx
  412faf:	push   eax
  412fb0:	es lahf 
  412fb2:	and    eax,0x2a26c36e
  412fb7:	inc    esi
  412fb8:	xchg   edx,eax
  412fb9:	jnp    0x412fc7
  412fbb:	(bad)  
  412fbc:	out    dx,eax
  412fbd:	mov    cl,0xe5
  412fbf:	xor    al,0xbc
  412fc1:	test   cl,bl
  412fc3:	imul   ecx,DWORD PTR [esi],0xd4c425ba
  412fc9:	sbb    al,0x9a
  412fcb:	pop    ds
  412fcc:	(bad)  
  412fcd:	xlat   BYTE PTR ds:[ebx]
  412fce:	repnz xchg ecx,eax
  412fd0:	mov    edi,0x8bec97ca
  412fd5:	jne    0x412fa7
  412fd7:	aas    
  412fd8:	jmp    0x34b50761
  412fdd:	lods   al,BYTE PTR ds:[esi]
  412fde:	adc    eax,0x95a916c1
  412fe3:	mov    al,ds:0xf88cdcac
  412fe8:	jae    0x413031
  412fea:	clc    
  412feb:	mov    al,ds:0x6e5d4b32
  412ff0:	add    esp,esp
  412ff2:	sub    eax,0xc14afbd6
  412ff7:	add    DWORD PTR [ebx+0x69],edi
  412ffa:	(bad)  
  412ffc:	sahf   
  412ffd:	ret    
  412ffe:	outs   dx,BYTE PTR ds:[esi]
  412fff:	mov    ds:0x951fba50,eax
  413004:	adc    edi,DWORD PTR [edi-0x3eb89904]
  41300a:	aaa    
  41300b:	sub    ebp,ecx
  41300d:	in     eax,dx
  41300e:	cdq    
  41300f:	(bad)  
  413010:	jp     0x41308f
  413012:	in     eax,dx
  413013:	pop    ecx
  413015:	xor    ecx,edx
  413017:	ss xchg esp,eax
  413019:	xchg   ecx,eax
  41301a:	mov    eax,ds:0x156bb603
  41301f:	shl    DWORD PTR [esi],1
  413021:	ins    DWORD PTR es:[edi],dx
  413022:	(bad)  
  413023:	iret   
  413024:	mov    al,BYTE PTR [ebx+0x637690b5]
  41302a:	xor    eax,0x24b54531
  41302f:	adc    eax,0x7b439485
  413034:	iret   
  413035:	jge    0x412feb
  413037:	enter  0x2b1c,0xff
  41303b:	shl    BYTE PTR [edx-0x28],cl
  41303e:	rcl    BYTE PTR [edx+0x31f51510],1
  413044:	mov    dh,BYTE PTR [ecx+0x5d]
  413047:	jle    0x412fe0
  413049:	or     DWORD PTR [ebx],0xfffffffb
  41304c:	mov    eax,0x843afe46
  413051:	mov    WORD PTR [ecx+0x4f8a1090],ss
  413057:	xor    ecx,DWORD PTR [eax+edx*4-0x58]
  41305b:	je     0x4130d1
  41305d:	and    DWORD PTR [eax+edi*4-0x58],ebx
  413061:	mov    ch,0x36
  413063:	mov    eax,0x3d9fbdc6
  413068:	(bad)  
  413069:	cmp    eax,0x7ead6e39
  41306e:	mov    edx,0x72e4f0bd
  413073:	pop    ebx
  413074:	adc    esp,ecx
  413076:	ins    BYTE PTR es:[edi],dx
  413077:	push   0xffffffc1
  413079:	in     al,0x4
  41307b:	jns    0x41308b
  41307d:	fild   QWORD PTR [esi+eiz*2]
  413080:	mov    ah,0xe4
  413082:	xchg   edi,eax
  413083:	or     al,BYTE PTR [eax+0xc]
  413086:	std    
  413087:	or     eax,edi
  413089:	push   esp
  41308a:	retf   
  41308b:	jb     0x413061
  41308d:	shl    BYTE PTR [ebp-0x53209ccd],1
  413093:	fmul   st(5),st
  413095:	sahf   
  413096:	pop    eax
  413097:	iret   
  413098:	add    eax,0xa4505862
  41309d:	pop    ss
  41309e:	jp     0x41309f
  4130a0:	leave  
  4130a1:	jle    0x41302a
  4130a3:	cmp    eax,0x98762df6
  4130a8:	inc    eax
  4130a9:	add    ebx,DWORD PTR [esi+ebp*1-0x410d0989]
  4130b0:	dec    ecx
  4130b1:	dec    eax
  4130b2:	loope  0x4130e4
  4130b4:	jbe    0x413056
  4130b6:	(bad)  
  4130b7:	out    dx,eax
  4130b8:	dec    BYTE PTR [ebp-0x1d]
  4130bb:	fsubr  DWORD PTR [edi-0x5676fefd]
  4130c1:	cmp    eax,0x31088355
  4130c6:	shl    BYTE PTR [ebx+0x1978895e],cl
  4130cc:	hlt    
  4130cd:	xchg   ebx,eax
  4130ce:	mov    ds:0xc90094b6,al
  4130d3:	dec    esp
  4130d4:	mov    ebx,0x1fa7ac8c
  4130d9:	inc    ebx
  4130da:	(bad)  
  4130dc:	pop    edi
  4130dd:	pop    es
  4130de:	jmp    0x68e3:0xaadc7b26
  4130e5:	cmp    esp,DWORD PTR [edx-0x10beec16]
  4130eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130ec:	inc    ebp
  4130ed:	sub    eax,0xa730af42
  4130f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130f3:	jns    0x413138
  4130f5:	xor    dh,ah
  4130f7:	pop    ss
  4130f8:	inc    edx
  4130f9:	aam    0x94
  4130fb:	mov    esi,0x683c76ad
  413100:	mov    dl,0x19
  413102:	xor    eax,0xc451d387
  413107:	(bad)  
  413109:	pop    esp
  41310a:	push   ss
  41310b:	inc    ecx
  41310c:	(bad)  
  41310d:	sbb    BYTE PTR [ebp+0x44],dh
  413110:	push   ds
  413111:	add    cl,BYTE PTR [eax+0x55]
  413114:	outs   dx,BYTE PTR ds:[esi]
  413115:	pop    esp
  413116:	repz retf 
  413118:	cs aad 0xde
  41311b:	in     al,0xd1
  41311d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41311e:	jmp    0x13da:0x62e398ed
  413125:	ret    
  413126:	or     al,0xcd
  413128:	sub    DWORD PTR [ebx+0x3cfbcbdf],ecx
  41312e:	test   esp,0xb8db2b42
  413134:	add    esp,DWORD PTR [esi]
  413136:	adc    DWORD PTR [eax+0x1ce7de85],0xd36fde85
  413140:	sti    
  413141:	push   0x1b478521
  413146:	(bad)  
  413147:	enter  0x8823,0x54
  41314b:	pop    es
  41314c:	pop    ss
  41314d:	int    0xa6
  41314f:	mov    edi,0x60dab8a2
  413154:	dec    eax
  413155:	jp     0x4131cc
  413157:	jno    0x41310f
  413159:	scas   al,BYTE PTR es:[edi]
  41315a:	xor    eax,0x2f6202e0
  41315f:	iret   
  413160:	sub    al,0x1a
  413162:	mov    fs,WORD PTR [ebx]
  413164:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413165:	loop   0x4130f2
  413167:	adc    BYTE PTR [edx+ecx*2+0x49],al
  41316b:	daa    
  41316c:	aam    0x80
  41316e:	ss call 0xa03f:0xdb5c962
  413176:	aam    0x74
  413178:	test   eax,0x4d5706f7
  41317d:	jmp    0xa29ac50d
  413182:	or     esp,DWORD PTR [ecx+ecx*8-0x24]
  413186:	sbb    eax,0xf5908969
  41318b:	push   0x41
  41318d:	pop    ebp
  41318e:	add    edi,esi
  413190:	add    eax,0x29e5460d
  413195:	aaa    
  413196:	pop    eax
  413197:	test   DWORD PTR ds:0xea9fe68d,ebp
  41319d:	push   es
  41319e:	fbld   TBYTE PTR [eax+edx*2]
  4131a1:	pop    ss
  4131a2:	jno    0x413193
  4131a4:	(bad)  
  4131a5:	mov    ebx,0x6561a083
  4131aa:	pop    esi
  4131ab:	call   ebp
  4131ad:	pop    edx
  4131ae:	imul   ebp,DWORD PTR [edx+0x75],0x13
  4131b2:	fisubr WORD PTR [esi+ebx*8-0x55]
  4131b6:	sbb    DWORD PTR [edi+esi*4-0x549af255],esi
  4131bd:	mov    ds,WORD PTR [ecx-0x33]
  4131c0:	dec    ebx
  4131c1:	je     0x413224
  4131c3:	ret    
  4131c4:	je     0x4131d3
  4131c6:	cmc    
  4131c7:	aam    0xd7
  4131c9:	fyl2xp1 
  4131cb:	mov    ds:0x8b2546a9,eax
  4131d0:	les    ecx,FWORD PTR [ebx]
  4131d2:	jno    0x4131b9
  4131d4:	sbb    esp,DWORD PTR [esi-0x7dd22019]
  4131da:	or     eax,0xe6a32fec
  4131df:	cmc    
  4131e0:	jg     0x4131a5
  4131e2:	je     0x41325c
  4131e4:	push   eax
  4131e5:	scas   eax,DWORD PTR es:[edi]
  4131e6:	pop    edx
  4131e7:	sub    ecx,esp
  4131e9:	mov    ebp,0xc1cab3dd
  4131ee:	das    
  4131ef:	mov    bl,0x37
  4131f1:	(bad)  
  4131f3:	dec    ebx
  4131f4:	imul   edx,DWORD PTR [ebx],0xffffffae
  4131f7:	and    al,0xb1
  4131f9:	lods   eax,DWORD PTR ds:[esi]
  4131fa:	push   ds
  4131fb:	in     al,dx
  4131fc:	or     al,0x34
  4131fe:	imul   ebx,DWORD PTR [ecx+0x33280cb7],0x69c7e387
  413208:	xor    al,0x69
  41320a:	mov    esi,0xecf83c82
  41320f:	xor    al,0x18
  413211:	mov    DWORD PTR [edx-0x9],eax
  413214:	adc    al,0xbb
  413216:	retf   0xaaf5
  413219:	hlt    
  41321a:	xchg   ebp,eax
  41321b:	pusha  
  41321c:	not    DWORD PTR [edi-0x5b]
  41321f:	in     al,dx
  413220:	inc    edx
  413221:	xor    bh,dh
  413223:	xchg   dl,ah
  413225:	test   eax,0x9b10c1bd
  41322a:	jle    0x413231
  41322c:	dec    edx
  41322d:	xor    DWORD PTR [ebp-0x34],ebp
  413230:	sub    ah,BYTE PTR ds:0xf9636af8
  413236:	jo     0x413295
  413238:	pushf  
  413239:	pop    edx
  41323a:	into   
  41323b:	ins    DWORD PTR es:[edi],dx
  41323c:	dec    edi
  41323e:	loopne 0x413258
  413240:	outs   dx,BYTE PTR ds:[esi]
  413241:	ror    DWORD PTR [eax-0x7f],1
  413244:	dec    edx
  413245:	inc    edi
  413246:	cli    
  413247:	stos   DWORD PTR es:[edi],eax
  413248:	stos   DWORD PTR es:[edi],eax
  413249:	fistp  WORD PTR [edx+0x26]
  41324c:	jnp    0x41323b
  41324e:	and    ebx,edx
  413250:	fwait
  413251:	retf   
  413252:	popa   
  413253:	pop    esi
  413254:	(bad)  
  413255:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413256:	out    dx,eax
  413257:	icebp  
  413258:	aam    0xaa
  41325a:	lock lock scas al,BYTE PTR es:[edi]
  41325d:	inc    esi
  41325e:	mov    dh,0x80
  413260:	icebp  
  413261:	pop    ebx
  413262:	mov    edx,0x7f64c057
  413267:	push   ebp
  413268:	inc    ebp
  413269:	ins    BYTE PTR es:[edi],dx
  41326a:	(bad)  
  41326b:	or     DWORD PTR ds:0x2dfa2960,ebp
  413271:	cmp    ebp,0x7933dd02
  413277:	ins    DWORD PTR es:[edi],dx
  413278:	aas    
  413279:	xor    BYTE PTR [esi],dh
  41327b:	cmc    
  41327c:	mov    cl,0x79
  41327e:	imul   esp,DWORD PTR [edi+0xf483997],0x6
  413285:	xchg   esp,eax
  413286:	sub    ebx,esp
  413288:	into   
  413289:	cwde   
  41328a:	mov    dh,dh
  41328c:	retf   
  41328d:	imul   esp,DWORD PTR [edi],0x4d
  413290:	retf   0x74e9
  413293:	data16 jb 0x41322d
  413296:	enter  0x9f27,0xf0
  41329a:	cmp    edi,DWORD PTR [ebx+0x8]
  41329d:	outs   dx,BYTE PTR ds:[esi]
  41329e:	mov    al,0xca
  4132a0:	xor    edi,DWORD PTR [edi+0x134b5c1d]
  4132a6:	jmp    DWORD PTR [ebx-0x46ea1d2a]
  4132ac:	test   dl,al
  4132ae:	out    dx,eax
  4132af:	out    0xa3,al
  4132b1:	mov    eax,0xef6a8686
  4132b6:	push   esi
  4132b7:	pop    es
  4132b8:	or     ecx,DWORD PTR [edi+0x2cadff3c]
  4132be:	pop    ebp
  4132bf:	or     ah,BYTE PTR [ebx]
  4132c1:	fsub   QWORD PTR [esi+0x5f]
  4132c4:	jmp    0x4132cb
  4132c6:	mov    dl,0x5c
  4132c8:	test   eax,0xcf715404
  4132cd:	mov    ecx,0xf10cc18f
  4132d2:	popa   
  4132d3:	xchg   edx,eax
  4132d4:	and    ebx,DWORD PTR [ecx]
  4132d6:	arpl   ax,sp
  4132d8:	imul   ecx,ebx,0xaa96d622
  4132de:	mov    BYTE PTR [edi],bh
  4132e0:	outs   dx,BYTE PTR ds:[esi]
  4132e1:	outs   dx,DWORD PTR ds:[esi]
  4132e2:	cmp    al,0xf1
  4132e4:	lds    eax,FWORD PTR [esi-0x70]
  4132e7:	push   eax
  4132e8:	xlat   BYTE PTR ds:[ebx]
  4132e9:	cdq    
  4132ea:	push   es
  4132eb:	dec    dl
  4132ed:	and    ebp,DWORD PTR [ebp+0x37]
  4132f0:	sub    ebx,DWORD PTR [ebx+ebx*8-0x3b4120e2]
  4132f7:	cmp    edi,ebp
  4132f9:	outs   dx,BYTE PTR ds:[esi]
  4132fa:	(bad)  
  4132fc:	shl    edi,cl
  4132fe:	outs   dx,BYTE PTR ds:[esi]
  4132ff:	dec    eax
  413300:	dec    esp
  413301:	icebp  
  413302:	cwde   
  413303:	sub    bh,BYTE PTR [ecx+0x2e9f0a7a]
  413309:	fs (bad) 
  41330b:	fwait
  41330c:	mov    DWORD PTR [edi+0x7f6deedf],ebp
  413312:	and    eax,0x75f19448
  413317:	or     bh,cl
  413319:	ror    DWORD PTR [edx-0x35],0xad
  41331d:	dec    ecx
  41331e:	pop    esi
  41331f:	mov    ax,bp
  413322:	inc    ebp
  413323:	call   0x95ad:0x28058caf
  41332a:	add    esp,ebp
  41332c:	inc    eax
  41332d:	ds mov dl,0xe7
  413330:	mov    edx,0x84851eb7
  413335:	and    BYTE PTR [eax],dh
  413337:	fwait
  413338:	push   eax
  413339:	sahf   
  41333a:	imul   esi,DWORD PTR [edi+0x520b1de1],0xe45fdddf
  413344:	ror    edi,0xf7
  413347:	jno    0x4132ee
  413349:	fisttp QWORD PTR [esi]
  41334b:	push   cs
  41334c:	cmp    bh,ah
  41334e:	dec    esi
  41334f:	pusha  
  413350:	(bad)  [ebx+0xa]
  413353:	adc    al,0x60
  413355:	pop    ss
  413356:	test   BYTE PTR [esp+0x83183ad],dl
  41335d:	xchg   edx,eax
  41335e:	dec    edx
  41335f:	sbb    ah,BYTE PTR [esi+0x8c318a6]
  413365:	ins    BYTE PTR es:[edi],dx
  413366:	stos   DWORD PTR es:[edi],eax
  413367:	out    0x1c,eax
  413369:	pushf  
  41336a:	jo     0x4133c1
  41336c:	inc    ecx
  41336d:	rcr    ebp,1
  41336f:	or     ch,BYTE PTR [edi+0x5817d7ed]
  413375:	mov    ebx,0x7ae3df78
  41337a:	add    al,dl
  41337c:	adc    eax,0xacde40b0
  413381:	retf   
  413382:	add    dl,BYTE PTR [ecx+0x67]
  413385:	(bad)  
  413386:	push   edi
  413387:	and    eax,0x31b27f7e
  41338c:	outs   dx,BYTE PTR ds:[esi]
  41338d:	aad    0xdb
  41338f:	les    eax,FWORD PTR [eax]
  413391:	popf   
  413392:	cmp    al,0xde
  413394:	cs imul edi,esi,0x6e4bd878
  41339b:	xchg   DWORD PTR [edx-0x3427d0c6],esi
  4133a1:	mov    ah,0x5a
  4133a3:	nop
  4133a4:	iret   
  4133a5:	and    eax,DWORD PTR [edx+ebp*1-0x2]
  4133a9:	jmp    0x8157:0xcbd69f40
  4133b0:	sub    bl,dl
  4133b2:	fstp   DWORD PTR [eax]
  4133b4:	mov    DWORD PTR [eax+0xc],0x45175fec
  4133bb:	push   esp
  4133bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133bd:	or     ah,BYTE PTR [edi-0x2f]
  4133c0:	dec    ebx
  4133c1:	rcr    BYTE PTR ds:0x46b9376d,cl
  4133c7:	mov    ah,0x3d
  4133c9:	(bad)  
  4133ca:	shl    BYTE PTR [esi],cl
  4133cc:	jecxz  0x4133fb
  4133ce:	dec    eax
  4133cf:	dec    edx
  4133d0:	test   BYTE PTR [edi-0x7d],dl
  4133d3:	mov    al,0x3c
  4133d5:	sahf   
  4133d6:	mov    bh,BYTE PTR [esi+ecx*8-0x38]
  4133da:	ret    0x86b
  4133dd:	or     bh,ah
  4133df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133e0:	aas    
  4133e1:	mov    dh,0x9
  4133e3:	sub    eax,0x963ec6f0
  4133e8:	mov    al,ds:0x9e68ce41
  4133ed:	fild   QWORD PTR [ebx+ecx*4+0x9171d71]
  4133f4:	ret    0x8301
  4133f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133f8:	push   edx
  4133f9:	mov    ds:0x34a03a2a,eax
  4133fe:	jle    0x41341c
  413400:	jge    0x4133a9
  413402:	je     0x413469
  413404:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413405:	sub    esp,DWORD PTR [edi+0x5db6ba1c]
  41340b:	popa   
  41340c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41340d:	clc    
  41340e:	adc    BYTE PTR ds:0x7629bad2,dl
  413414:	shl    BYTE PTR [ecx-0x18bb6c53],1
  41341a:	mov    bl,0xff
  41341c:	push   cs
  41341d:	popa   
  41341e:	xor    dl,BYTE PTR [ecx+0x22]
  413421:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413422:	aas    
  413423:	mov    ebx,0x314db1ec
  413428:	loopne 0x413439
  41342a:	xor    DWORD PTR [ebx+0x54b30c93],ebp
  413430:	cli    
  413431:	mov    ebx,0x2968aa5b
  413436:	cpuid  
  413438:	lea    edi,[edi]
  41343a:	sar    BYTE PTR ds:0x6fc08641,0xf6
  413441:	mov    esp,0xf3505ef7
  413446:	mov    ds:0x3785ccb3,eax
  41344b:	jge    0x4133ff
  41344d:	retf   0x4691
  413450:	dec    esi
  413451:	in     al,dx
  413452:	arpl   WORD PTR [eax+0x6d],si
  413455:	xchg   BYTE PTR [edx],al
  413457:	call   0x6e03864b
  41345c:	sbb    BYTE PTR [ecx+0x7c3aa47f],0xd1
  413463:	ins    BYTE PTR es:[edi],dx
  413464:	lods   eax,DWORD PTR ds:[esi]
  413465:	dec    ecx
  413466:	in     eax,dx
  413467:	mov    bh,0x54
  413469:	inc    edx
  41346a:	sbb    eax,0xe003f4e9
  41346f:	or     BYTE PTR [edi+0x2c310810],0xe4
  413476:	repnz aad 0x19
  413479:	(bad)  
  41347a:	pushf  
  41347b:	dec    esp
  41347c:	push   edx
  41347d:	xchg   ebp,eax
  41347e:	cli    
  41347f:	sub    BYTE PTR [ebp+0x2a6ff83b],dh
  413485:	pop    ebx
  413486:	sub    al,0x10
  413488:	or     BYTE PTR [esi+0x391e04c6],bh
  41348e:	enter  0x4cd4,0xd4
  413492:	mov    eax,ds:0x394be6e6
  413497:	mov    edx,ebp
  413499:	iret   
  41349a:	fiadd  WORD PTR gs:[ecx]
  41349d:	in     eax,0x40
  41349f:	pop    esp
  4134a0:	dec    ebx
  4134a1:	fadd   QWORD PTR [ebp-0x401960e4]
  4134a7:	sbb    DWORD PTR [esi+eiz*2+0x29],edi
  4134ab:	and    BYTE PTR [esi-0xa],al
  4134ae:	stos   BYTE PTR es:[edi],al
  4134af:	mov    esi,0x721f0f9
  4134b4:	jb     0x4134b7
  4134b6:	call   eax
  4134b8:	paddq  mm1,QWORD PTR [esp+edi*8]
  4134bc:	mov    eax,ds:0xb9f6ed01
  4134c1:	push   ecx
  4134c2:	addr16 pop ebx
  4134c4:	xchg   esi,eax
  4134c5:	jne    0x4134ea
  4134c7:	fwait
  4134c8:	inc    ecx
  4134c9:	mov    cl,0xb8
  4134cb:	sub    edx,DWORD PTR [edi+0x18]
  4134ce:	ret    
  4134cf:	jmp    FWORD PTR [ebp+0x11]
  4134d2:	cmp    eax,0x83f994e2
  4134d7:	jge    0x41348c
  4134d9:	mov    ds:0x259bcc02,al
  4134de:	rcr    BYTE PTR [edx],1
  4134e0:	das    
  4134e1:	cs cmp eax,eax
  4134e4:	mul    BYTE PTR [esi+0x693ad23a]
  4134ea:	nop
  4134eb:	rdmsr  
  4134ed:	pop    ebp
  4134ee:	xchg   edi,eax
  4134ef:	sub    ch,bh
  4134f1:	jmp    0xdf305885
  4134f6:	dec    edi
  4134f7:	add    al,0xbe
  4134f9:	or     al,BYTE PTR [esi+0x16]
  4134fc:	push   eax
  4134fd:	fistp  DWORD PTR [ebx+0x45b6c9ca]
  413503:	push   esi
  413504:	mov    esi,0x238af8de
  413509:	adc    DWORD PTR [edi],0xffffffbd
  41350c:	push   esi
  41350d:	sub    BYTE PTR ds:0xd9e6c801,dh
  413513:	je     0x4134c3
  413515:	(bad)  
  413516:	dec    ebx
  413517:	add    DWORD PTR ds:0xf95c3562,ebx
  41351d:	pop    esp
  41351e:	pop    ebp
  41351f:	ja     0x413585
  413521:	dec    edx
  413522:	dec    edi
  413523:	xor    BYTE PTR [ebx+edx*8+0x3ffc0159],0x34
  41352b:	jecxz  0x4135a5
  41352d:	in     eax,0x43
  41352f:	imul   esp,DWORD PTR [esi],0x7a6b11cb
  413535:	jp     0x413593
  413537:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413538:	adc    ch,0x16
  41353b:	mov    dh,0x50
  41353d:	mov    ah,BYTE PTR [ebx-0x56]
  413540:	cli    
  413541:	loop   0x41355b
  413543:	jle    0x413558
  413545:	push   ds
  413546:	inc    edx
  413547:	fdivp  st(4),st
  413549:	scas   al,BYTE PTR es:[edi]
  41354a:	addps  xmm2,xmm1
  41354d:	xchg   ecx,eax
  41354e:	(bad)  
  41354f:	scas   al,BYTE PTR es:[edi]
  413550:	adc    eax,0x53151fc8
  413555:	dec    edi
  413556:	jge    0x4134f5
  413558:	jns    0x4135d8
  41355a:	pop    ebp
  41355b:	pop    edx
  41355c:	xchg   ebx,eax
  41355d:	div    al
  41355f:	or     al,0x53
  413561:	mov    edi,0x5712855f
  413566:	xor    eax,0x14bd4bd5
  41356b:	int    0x72
  41356d:	sbb    eax,0x25fe3d2c
  413572:	mov    cl,0xf
  413574:	stos   BYTE PTR es:[edi],al
  413575:	dec    eax
  413576:	add    bh,0xaa
  413579:	cld    
  41357a:	sub    esp,ebx
  41357c:	shl    edx,1
  41357e:	fs push cs
  413580:	push   edx
  413581:	in     eax,dx
  413582:	test   eax,0xccda4c5d
  413587:	ror    BYTE PTR [edx+ebp*8+0x4f],cl
  41358b:	jb     0x4135b7
  41358d:	retf   0x48dc
  413590:	sbb    BYTE PTR [ebp-0x67],bl
  413593:	in     al,dx
  413594:	fdivr  QWORD PTR [ebx-0x28]
  413597:	sbb    al,0x5c
  413599:	js     0x41354c
  41359b:	jbe    0x4135cd
  41359d:	mov    dl,0xa9
  41359f:	stos   DWORD PTR es:[edi],eax
  4135a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135a1:	mov    bl,0x5f
  4135a3:	adc    DWORD PTR [esi+ebp*4+0x6f3e5dbe],edi
  4135aa:	ds call 0xd014:0xbd537a5a
  4135b2:	test   eax,0xf867458b
  4135b7:	sbb    eax,0x17ee4b4c
  4135bc:	das    
  4135bd:	fmul   DWORD PTR [eax]
  4135bf:	mov    ds:0xd6c8e322,eax
  4135c4:	scas   eax,DWORD PTR es:[edi]
  4135c5:	sub    eax,0x6ef31c9d
  4135ca:	bound  eax,QWORD PTR [edi]
  4135cc:	or     BYTE PTR [eax-0x21],bh
  4135cf:	cmp    DWORD PTR [ebx+0x10148155],edx
  4135d5:	dec    edi
  4135d6:	cmp    eax,DWORD PTR [ecx-0x6011934b]
  4135dc:	jg     0x413564
  4135de:	push   edx
  4135df:	inc    edx
  4135e0:	lea    ebx,[esi+0x48]
  4135e3:	push   ss
  4135e4:	in     eax,0x61
  4135e6:	and    al,0x88
  4135e8:	gs loop 0x41358a
  4135eb:	jmp    0x41360c
  4135ed:	mov    al,0xb1
  4135ef:	adc    eax,0xb8a97fed
  4135f4:	call   DWORD PTR ds:0x7f84108b
  4135fa:	dec    ebx
  4135fb:	xchg   edx,eax
  4135fc:	imul   edx,DWORD PTR [ebp+0x7e],0x3c
  413600:	les    esp,FWORD PTR [edx-0x63]
  413603:	aad    0xaa
  413605:	ror    BYTE PTR [edx],1
  413607:	push   esp
  413608:	loop   0x4135b8
  41360a:	lods   al,BYTE PTR ds:[esi]
  41360b:	gs mov ebp,0xf77c1341
  413611:	fs lock out 0xc9,eax
  413615:	xchg   esp,eax
  413616:	xchg   ebp,eax
  413617:	bound  esi,QWORD PTR [edi+esi*4-0x60b9f96c]
  41361e:	ret    0x57f2
  413621:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413622:	icebp  
  413623:	jmp    0x49d301d0
  413628:	das    
  413629:	test   al,0x6
  41362b:	int    0x20
  41362d:	inc    eax
  41362e:	mov    eax,0x450b8b84
  413633:	sub    ebx,ebp
  413635:	lods   eax,DWORD PTR ds:[esi]
  413636:	das    
  413637:	mov    esi,0x8afebcb5
  41363c:	xchg   ebp,eax
  41363d:	cmp    cl,0xa1
  413640:	push   es
  413641:	repnz mov ch,BYTE PTR [edi]
  413644:	xchg   ecx,eax
  413645:	inc    eax
  413646:	push   edi
  413647:	rcr    DWORD PTR [esi+0x8502de7],0xb8
  41364e:	mov    ebp,0xba7ae04d
  413653:	(bad)  
  413654:	mov    ecx,0x801e40fc
  413659:	mov    eax,ds:0x87ba6f02
  41365e:	test   al,0x22
  413660:	mov    dl,0xdd
  413662:	add    ecx,DWORD PTR [ebp-0xf]
  413665:	cmp    dh,BYTE PTR [ecx-0x37fba99a]
  41366b:	mov    ds:0x7df55e08,eax
  413670:	jae    0x413666
  413672:	out    0xae,al
  413674:	mov    edi,0xecbcafb7
  413679:	es push esp
  41367b:	popf   
  41367c:	pop    ecx
  41367d:	mov    al,ds:0xbcf2232b
  413682:	mov    ebx,0x20939c6a
  413687:	push   ecx
  413688:	pop    esi
  413689:	aas    
  41368a:	call   0xe5c7:0xe28e3489
  413691:	lds    ebx,FWORD PTR [ebx]
  413693:	outs   dx,BYTE PTR ds:[esi]
  413694:	lock mov cs,WORD PTR ds:0x2a7b7bc9
  41369b:	pop    esp
  41369c:	push   eax
  41369d:	scas   al,BYTE PTR es:[edi]
  41369e:	xchg   ecx,eax
  41369f:	jbe    0x4136cb
  4136a1:	(bad)  
  4136a2:	call   0x9212:0x3a8bbacd
  4136a9:	xchg   BYTE PTR ds:0x9de5bdae,bh
  4136af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136b0:	out    0x78,eax
  4136b2:	ja     0x4136ef
  4136b4:	out    dx,eax
  4136b5:	pop    ss
  4136b6:	cld    
  4136b7:	dec    edx
  4136b8:	jns    0x4136d9
  4136ba:	adc    DWORD PTR [esi-0xb],ebp
  4136bd:	adc    eax,0x300f39d2
  4136c2:	pushf  
  4136c3:	shr    DWORD PTR [ebp+0x4f],cl
  4136c6:	out    dx,eax
  4136c7:	loope  0x41364a
  4136c9:	xor    al,0x1
  4136cb:	adc    BYTE PTR [ebx-0x4ba40372],cl
  4136d1:	arpl   WORD PTR [edi-0x1f],bp
  4136d4:	cmp    ch,BYTE PTR [esi]
  4136d6:	nop
  4136d7:	mov    esp,0x65307c03
  4136dc:	sti    
  4136dd:	sbb    ecx,DWORD PTR [eax+0x15]
  4136e0:	xchg   esi,eax
  4136e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136e2:	sub    BYTE PTR [eax],bh
  4136e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136e5:	ret    
  4136e6:	or     DWORD PTR [eax-0x27],edx
  4136e9:	add    DWORD PTR [edi-0x640093eb],edi
  4136ef:	pop    edx
  4136f0:	push   cs
  4136f1:	outs   dx,BYTE PTR ds:[esi]
  4136f2:	jbe    0x41371c
  4136f4:	(bad)  
  4136f5:	(bad)  
  4136f6:	addr16 out 0xae,al
  4136f9:	push   eax
  4136fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136fb:	sub    eax,0x8b28b1fd
  413700:	jge    0x413740
  413702:	ins    DWORD PTR es:[edi],dx
  413703:	test   edi,0xa2cec200
  413709:	es in  eax,dx
  41370b:	repz push ebp
  41370d:	jmp    0x5f8:0x8e96a9bf
  413714:	rcl    ch,0x42
  413717:	mov    eax,0x418cfe50
  41371c:	into   
  41371d:	je     0x4136c7
  41371f:	xchg   esi,eax
  413720:	aaa    
  413721:	adc    eax,DWORD PTR [esi]
  413723:	jns    0x413774
  413725:	pop    edx
  413726:	adc    bh,BYTE PTR [ebx+0x22]
  413729:	and    al,BYTE PTR [esi]
  41372b:	and    al,BYTE PTR cs:[ecx]
  41372e:	fadd   QWORD PTR [ecx]
  413730:	and    edi,DWORD PTR [edx-0x4edb4d29]
  413736:	sub    ebx,DWORD PTR [esi]
  413738:	dec    ebx
  413739:	inc    ebp
  41373a:	mov    BYTE PTR [eax+0x392ff095],bh
  413740:	test   BYTE PTR [ebx+0x3938c7b7],dl
  413746:	rcl    ebx,0x95
  413749:	imul   edi,DWORD PTR [esi],0xffffff9d
  41374c:	push   0xf
  41374e:	mov    ch,0x5d
  413750:	add    BYTE PTR [edi+0x21b6c154],0xfe
  413757:	neg    DWORD PTR [esp+edi*4-0x6a3d0923]
  41375e:	mov    ss,WORD PTR ds:0x2f6ec40b
  413764:	cmp    al,0xb9
  413766:	(bad)
  41376a:	pop    edx
  41376b:	fsubr  QWORD PTR [edx+esi*4-0x16]
  41376f:	pop    edx
  413770:	std    
  413771:	push   ss
  413772:	retf   
  413773:	ja     0x41376c
  413775:	out    dx,al
  413776:	arpl   WORD PTR [eax+0x376bcd79],sp
  41377c:	(bad)  
  41377d:	call   0xb7b0a742
  413782:	xor    al,0x2e
  413784:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413785:	and    dh,BYTE PTR [edi-0x24]
  413788:	cld    
  413789:	mov    ds:0xfd714d4b,al
  41378f:	mov    ecx,0xadcc82f9
  413794:	or     ah,BYTE PTR [esi]
  413796:	lds    esi,FWORD PTR [ebx]
  413798:	dec    ebx
  413799:	shl    DWORD PTR [esi-0x711ca29a],1
  41379f:	mov    ch,0xf0
  4137a1:	mov    edi,0x5b1ab67a
  4137a6:	popa   
  4137a7:	es pop ecx
  4137a9:	adc    BYTE PTR [ebp-0x6163a921],dl
  4137af:	fs jmp 0x96fcfa48
  4137b5:	adc    ebp,DWORD PTR [esi]
  4137b7:	and    eax,0x99c9dbe2
  4137bc:	adc    BYTE PTR [eax+0x7f],bh
  4137bf:	loop   0x41374e
  4137c1:	cmp    eax,0x3db18851
  4137c6:	out    dx,eax
  4137c7:	mov    edi,0x7b939236
  4137cc:	fwait
  4137cd:	sbb    ah,0xa3
  4137d0:	retf   
  4137d1:	xchg   esi,eax
  4137d2:	adc    eax,0x1a385be3
  4137d7:	(bad)  
  4137d8:	into   
  4137d9:	stos   BYTE PTR es:[edi],al
  4137da:	sub    eax,0x14348b8e
  4137df:	stos   DWORD PTR es:[edi],eax
  4137e0:	pop    ss
  4137e1:	rcr    ebp,1
  4137e3:	mov    ebp,0x3eb880d0
  4137e8:	dec    ecx
  4137e9:	cmp    esi,DWORD PTR [eax-0x41094287]
  4137ef:	add    esp,0xc5882d0
  4137f5:	ins    BYTE PTR es:[edi],dx
  4137f6:	jl     0x413790
  4137f8:	inc    ebx
  4137f9:	loopne 0x4137c1
  4137fb:	aas    
  4137fc:	arpl   di,si
  4137fe:	shr    BYTE PTR [esi+0x6a],1
  413801:	in     eax,0x9d
  413803:	loopne 0x41386f
  413805:	arpl   WORD PTR [ebx],bx
  413807:	sub    eax,0x1585b207
  41380c:	jns    0x413835
  41380e:	and    eax,0x940f2c28
  413813:	xchg   ebp,eax
  413814:	ins    BYTE PTR es:[edi],dx
  413815:	xchg   edi,eax
  413816:	ret    0x5b23
  413819:	out    dx,eax
  41381a:	in     al,0x4e
  41381c:	or     BYTE PTR [ebp+0x3e],bh
  41381f:	je     0x4137bf
  413821:	lods   eax,DWORD PTR ds:[esi]
  413822:	xchg   BYTE PTR [esi+0x47],al
  413825:	popa   
  413826:	inc    edx
  413827:	aas    
  413828:	sbb    BYTE PTR [eax+0x7e],bl
  41382b:	cdq    
  41382c:	test   al,0xa9
  41382e:	cld    
  41382f:	int3   
  413830:	jnp    0x4138ab
  413832:	inc    esi
  413833:	xchg   ecx,eax
  413834:	xor    ecx,esp
  413836:	sub    DWORD PTR [ecx-0x58],esi
  413839:	(bad)  [ebp-0x1d97d9af]
  41383f:	fist   DWORD PTR [esi]
  413841:	imul   esp,esi,0x5f
  413844:	clc    
  413845:	adc    eax,0x8e65d190
  41384a:	sub    ah,BYTE PTR [ebx]
  41384c:	or     bh,BYTE PTR [ebp-0x10]
  41384f:	dec    esp
  413850:	sub    dh,BYTE PTR [ebx]
  413852:	inc    eax
  413853:	fdivr  DWORD PTR [eax]
  413855:	ds popa 
  413857:	dec    edx
  413858:	jl     0x41383f
  41385a:	(bad)  
  41385b:	jmp    0x6c1414f4
  413860:	inc    ecx
  413861:	iret   
  413862:	jno    0x4137e6
  413864:	mov    ebx,DWORD PTR [edi+0x28c0242f]
  41386a:	neg    BYTE PTR [edi*8+0x51826b87]
  413871:	dec    BYTE PTR [ebx+0x40c63730]
  413877:	inc    esi
  413878:	cld    
  413879:	mov    ebx,gs
  41387b:	or     esi,DWORD PTR [edi+0x40]
  41387e:	ret    
  41387f:	rcr    DWORD PTR [ecx+0x26],0x90
  413883:	cld    
  413884:	mov    dh,0x50
  413886:	call   0x840eb096
  41388b:	inc    eax
  41388c:	mov    esi,0x551bd409
  413891:	add    BYTE PTR [ebx+0x159af565],cl
  413897:	ins    BYTE PTR es:[edi],dx
  413898:	aas    
  413899:	and    ah,BYTE PTR [ebx-0x19f80406]
  41389f:	or     BYTE PTR [ebx-0x7a],al
  4138a2:	push   edi
  4138a3:	adc    DWORD PTR [ebx-0x40140765],eax
  4138a9:	(bad)  
  4138ab:	add    ah,BYTE PTR [eax+edx*8+0x389b647]
  4138b2:	inc    eax
  4138b3:	fstp   QWORD PTR [edi-0x3faa3977]
  4138b9:	ret    0x44bb
  4138bc:	push   es
  4138bd:	ds stos DWORD PTR es:[edi],eax
  4138bf:	or     edi,ecx
  4138c1:	xchg   edx,eax
  4138c2:	jns    0x4138ef
  4138c4:	inc    ebx
  4138c5:	xor    esp,DWORD PTR cs:[esi*8+0x2827ab29]
  4138cd:	adc    al,0x6
  4138cf:	jbe    0x4138c1
  4138d1:	(bad)  
  4138d3:	shl    BYTE PTR ds:0xb42a7d39,1
  4138d9:	in     eax,0xb1
  4138db:	adc    BYTE PTR [ebp+0x2b],bl
  4138de:	dec    esp
  4138df:	adc    eax,0x69dc70e
  4138e4:	add    bh,BYTE PTR [edi]
  4138e6:	fs adc eax,edx
  4138e9:	mov    bh,0x75
  4138eb:	pop    ebp
  4138ec:	arpl   bx,bx
  4138ee:	cmp    al,0xb6
  4138f0:	shl    BYTE PTR [edi+esi*2+0x29],1
  4138f4:	push   0x70
  4138f6:	dec    esp
  4138f7:	push   cs
  4138f8:	cmp    al,0x55
  4138fa:	fxam   
  4138fc:	icebp  
  4138fd:	sbb    edx,DWORD PTR [eax+0x556d5199]
  413903:	jae    0x4138c6
  413905:	jg     0x413899
  413907:	xchg   edi,eax
  413908:	test   DWORD PTR [ebp+0x8],eax
  41390b:	(bad)  
  41390c:	jmp    0x4ca3:0xb9a7ede8
  413913:	xor    eax,0x56e8ac68
  413918:	mov    al,0xc0
  41391a:	rcl    bh,1
  41391c:	add    dh,BYTE PTR [ecx]
  41391e:	pop    edi
  41391f:	(bad)  
  413920:	dec    edx
  413921:	pop    ebx
  413922:	jb     0x4138d8
  413924:	pushf  
  413925:	jo     0x4138e4
  413927:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413928:	inc    esi
  413929:	add    ecx,DWORD PTR [eax-0x27f8cae7]
  41392f:	std    
  413930:	jnp    0x4138e7
  413932:	in     eax,0x74
  413934:	push   ebx
  413935:	inc    esi
  413936:	icebp  
  413937:	pusha  
  413938:	mov    eax,0x70853ff6
  41393d:	sbb    dl,BYTE PTR [esp+edx*2]
  413940:	dec    ebx
  413941:	outs   dx,DWORD PTR ds:[esi]
  413942:	or     edi,DWORD PTR fs:[ecx]
  413945:	out    dx,eax
  413946:	sbb    cl,cl
  413948:	std    
  413949:	jecxz  0x41394e
  41394b:	lods   al,BYTE PTR ds:[esi]
  41394c:	cs loope 0x4138e3
  41394f:	cmp    al,0x29
  413951:	cmp    bl,al
  413953:	daa    
  413954:	xchg   esp,eax
  413955:	dec    ebx
  413956:	fidivr DWORD PTR [eax-0x67]
  413959:	imul   ebp,DWORD PTR [ecx],0xffffffb0
  41395c:	inc    ecx
  41395d:	add    BYTE PTR [ebp-0x5af6547a],cl
  413963:	loop   0x413918
  413965:	or     BYTE PTR [ebp-0x4560cde7],ah
  41396b:	mov    ds:0xfc8e9fbe,al
  413970:	iret   
  413971:	jbe    0x4139bd
  413973:	pop    ss
  413974:	xchg   edi,eax
  413975:	xor    al,0x14
  413977:	cmp    al,BYTE PTR [edi]
  413979:	call   0x2f39:0x2dfe91db
  413980:	clc    
  413981:	sub    cl,BYTE PTR [edx-0x4bfd1108]
  413987:	jno    0x4139a8
  413989:	add    edi,ebx
  41398b:	mov    bh,0xfa
  41398d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41398e:	mov    bl,0x70
  413990:	dec    ebx
  413991:	sbb    DWORD PTR [esi],esi
  413993:	imul   esp,esi,0x50
  413996:	xchg   ebx,eax
  413997:	lods   eax,DWORD PTR ds:[esi]
  413998:	cmp    eax,0xb0c45d9
  41399d:	mov    ds:0x872d9d42,al
  4139a2:	mov    eax,0x6a08a2c
  4139a7:	push   0xb14d6601
  4139ac:	sbb    al,BYTE PTR [ebp+0x1f7c1169]
  4139b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139b3:	pop    ebx
  4139b4:	jnp    0x4139bf
  4139b6:	cmp    al,0x63
  4139b8:	dec    DWORD PTR [esi]
  4139ba:	mov    ebx,0x60492a65
  4139bf:	mov    bl,0x36
  4139c1:	inc    edi
  4139c2:	lock out 0x29,eax
  4139c5:	add    eax,0x74eaf149
  4139ca:	or     BYTE PTR [ebx+0x254776ae],ch
  4139d0:	mov    al,BYTE PTR [ecx-0x4705de13]
  4139d6:	shr    DWORD PTR [ecx],1
  4139d8:	ficomp DWORD PTR [edi]
  4139da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139db:	hlt    
  4139dc:	jle    0x4139de
  4139de:	xor    dh,al
  4139e0:	cmp    eax,0xbc3f25d
  4139e5:	shr    ah,0x84
  4139e8:	retf   0xb8df
  4139eb:	mov    edx,0x1c131f52
  4139f0:	add    DWORD PTR [edi],edi
  4139f2:	pop    eax
  4139f3:	inc    ecx
  4139f4:	or     ch,bh
  4139f6:	popa   
  4139f7:	jl     0x413a5c
  4139f9:	stc    
  4139fa:	clc    
  4139fb:	xchg   ebp,eax
  4139fc:	cmp    eax,0xe33dc045
  413a01:	cmp    DWORD PTR [esi-0x59],esi
  413a04:	iret   
  413a05:	daa    
  413a06:	cs pop esi
  413a08:	jmp    0x413a46
  413a0a:	mov    eax,0x229b6e56
  413a0f:	push   edx
  413a10:	iret   
  413a11:	mov    ebx,0x3f8f8476
  413a16:	inc    ebp
  413a17:	dec    edi
  413a18:	aad    0x10
  413a1a:	(bad)  
  413a1b:	nop
  413a1c:	repnz ficom DWORD PTR [eax-0x7a]
  413a20:	sbb    esp,DWORD PTR [ecx+0x4c96280d]
  413a26:	aas    
  413a27:	aad    0x3a
  413a29:	inc    eax
  413a2a:	loopne 0x413a86
  413a2c:	pushf  
  413a2d:	mov    dh,0x2f
  413a2f:	inc    ecx
  413a30:	mov    BYTE PTR [edi+0x28],cl
  413a33:	ins    BYTE PTR es:[edi],dx
  413a34:	cli    
  413a35:	mov    eax,ds:0xc4e97933
  413a3a:	sub    DWORD PTR [edi+edi*2],edi
  413a3d:	inc    ecx
  413a3e:	ret    0x488
  413a41:	scas   eax,DWORD PTR es:[edi]
  413a42:	push   ds
  413a43:	(bad)  
  413a44:	scas   eax,DWORD PTR es:[edi]
  413a45:	cwde   
  413a46:	jb     0x4139f2
  413a48:	inc    esp
  413a49:	jae    0x413a4c
  413a4b:	icebp  
  413a4c:	outs   dx,BYTE PTR ds:[esi]
  413a4d:	cmp    dh,BYTE PTR [ebx]
  413a4f:	int3   
  413a50:	popf   
  413a51:	arpl   WORD PTR ds:0xafdc096,bp
  413a57:	inc    ebx
  413a58:	call   0x4685c4dc
  413a5d:	pop    ss
  413a5e:	int    0x69
  413a60:	lods   eax,DWORD PTR ds:[esi]
  413a61:	enter  0xd54c,0x38
  413a65:	arpl   WORD PTR [eax-0x5bba0842],sp
  413a6b:	mov    al,ds:0xcc26b90f
  413a70:	push   cs
  413a71:	(bad)  
  413a72:	mov    eax,ds:0x14679d19
  413a77:	jg     0x413aa8
  413a79:	xor    ah,bh
  413a7b:	pop    edx
  413a7c:	mov    BYTE PTR [ebp+0x676b90da],bl
  413a82:	push   esp
  413a83:	outs   dx,DWORD PTR ds:[esi]
  413a84:	leave  
  413a85:	xor    eax,0x4f459d02
  413a8a:	mov    cl,0xe7
  413a8c:	clc    
  413a8d:	std    
  413a8e:	popa   
  413a8f:	aad    0x7c
  413a91:	(bad)  
  413a92:	and    DWORD PTR [ecx+0x6897f393],edi
  413a98:	scas   eax,DWORD PTR es:[edi]
  413a99:	xor    DWORD PTR [ebp+eax*8+0x49],0xc9a7bd9b
  413aa1:	in     al,dx
  413aa2:	clc    
  413aa3:	push   esp
  413aa4:	mov    BYTE PTR [edi-0x51da811a],bl
  413aaa:	pop    esp
  413aab:	dec    edi
  413aac:	xor    eax,0xd702bae
  413ab1:	(bad)  
  413ab2:	neg    DWORD PTR [ebx+0x11]
  413ab5:	sti    
  413ab6:	jl     0x413abb
  413ab8:	mov    bl,0xe8
  413aba:	mov    al,ds:0xad3f1629
  413abf:	arpl   di,ax
  413ac1:	mov    edx,0xbf2f45fa
  413ac6:	mov    dl,BYTE PTR [ebx]
  413ac8:	leave  
  413ac9:	pop    ds
  413aca:	push   0xf0751d2e
  413acf:	(bad)  [ebx+0x6b]
  413ad2:	xor    ebx,esi
  413ad4:	adc    eax,DWORD PTR [esi]
  413ad6:	xor    ebp,DWORD PTR [edi-0x74]
  413ad9:	or     al,0x9b
  413adb:	mov    esi,0xab45159a
  413ae0:	ret    
  413ae1:	popa   
  413ae2:	ret    
  413ae3:	mov    cl,0xba
  413ae5:	psubusb mm0,QWORD PTR [edi+0x77]
  413ae9:	mov    dl,BYTE PTR [eax+0x7bb5a1de]
  413aef:	hlt    
  413af0:	std    
  413af1:	(bad)  
  413af2:	lock aas 
  413af4:	retf   0x47df
  413af7:	mov    eax,ds:0x4619fe56
  413afc:	int    0xe9
  413afe:	das    
  413aff:	bound  ebx,QWORD PTR [edx]
  413b01:	cmp    eax,0x8521c96f
  413b06:	(bad)  
  413b07:	(bad)  
  413b08:	adc    al,0x88
  413b0a:	xchg   edi,eax
  413b0b:	mov    ds:0xdf78ea4e,eax
  413b10:	push   ebx
  413b11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b12:	fisttp WORD PTR [eax+ecx*8+0x27189aa1]
  413b19:	push   0xffffffa1
  413b1b:	mov    ?,WORD PTR [esi+0x33]
  413b1e:	mov    esp,0xc258f0aa
  413b23:	daa    
  413b24:	mov    ebx,0xe5a57526
  413b29:	pusha  
  413b2a:	out    0xd8,eax
  413b2c:	sbb    eax,0x1db3cecb
  413b31:	scas   eax,DWORD PTR es:[edi]
  413b32:	jno    0x413b09
  413b34:	add    bl,bh
  413b36:	loop   0x413aff
  413b38:	fs ud2 
  413b3b:	fincstp 
  413b3d:	and    DWORD PTR [edi+0x21bce414],esi
  413b43:	sub    BYTE PTR [eax],bh
  413b45:	clc    
  413b46:	sub    al,0xe2
  413b48:	cmp    BYTE PTR [ecx+edx*4-0x4f],ch
  413b4c:	sbb    ch,BYTE PTR cs:[edi]
  413b4f:	ins    DWORD PTR es:[edi],dx
  413b50:	xchg   cx,ax
  413b52:	ja     0x413b4e
  413b54:	test   eax,0xf85f45d5
  413b59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b5a:	in     al,0x89
  413b5c:	xchg   ecx,eax
  413b5d:	out    0xaf,eax
  413b5f:	dec    esi
  413b60:	cmp    BYTE PTR [edx-0x40],dl
  413b63:	daa    
  413b64:	outs   dx,BYTE PTR ds:[esi]
  413b65:	pop    esi
  413b66:	pop    eax
  413b67:	xlat   BYTE PTR ds:[ebx]
  413b68:	fcomp  DWORD PTR [ebp-0x54c8c528]
  413b6e:	pushf  
  413b6f:	imul   edx,DWORD PTR [ebx],0x7264b223
  413b75:	icebp  
  413b76:	xor    cl,BYTE PTR ds:0x6dbd917
  413b7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b7d:	or     ch,BYTE PTR [ebx+0x2e]
  413b80:	mov    bl,0x23
  413b82:	bound  edx,QWORD PTR ds:0xfd5f0fad
  413b88:	pop    eax
  413b89:	sub    DWORD PTR [ebp+0x69a40f17],esp
  413b8f:	imul   ebx,DWORD PTR [edx+0x59],0xffffffe2
  413b93:	fnstenv [ebx]
  413b95:	data16 ins BYTE PTR es:[edi],dx
  413b97:	push   eax
  413b98:	cmp    al,0x47
  413b9a:	push   ebp
  413b9b:	pop    eax
  413b9c:	iret   
  413b9d:	push   cs
  413b9e:	xor    eax,0x41f968c3
  413ba3:	aad    0x8
  413ba5:	sub    al,BYTE PTR [edx+0x64f3b240]
  413bab:	fist   DWORD PTR [ecx+0x3902f90c]
  413bb1:	xchg   edx,eax
  413bb2:	jg     0x413b4c
  413bb4:	mov    ah,0xe5
  413bb6:	push   ds
  413bb7:	push   ecx
  413bb8:	ss lock jmp 0x5dc31440
  413bbf:	stos   DWORD PTR es:[edi],eax
  413bc0:	push   esp
  413bc1:	push   esp
  413bc2:	pop    ebx
  413bc3:	pop    eax
  413bc4:	sbb    al,0xdf
  413bc6:	mov    ds:0x75a2cbac,al
  413bcb:	mov    al,0xa
  413bcd:	(bad)  [edi]
  413bcf:	(bad)  
  413bd0:	in     eax,0x7c
  413bd2:	xchg   BYTE PTR [ebx-0x12cec840],ch
  413bd8:	sbb    DWORD PTR [esi-0x6a],eax
  413bdb:	jae    0x413b6f
  413bdd:	cld    
  413bde:	add    BYTE PTR [ebx-0x7942ceee],ch
  413be4:	mov    esi,0xc99cd3af
  413be9:	xchg   edx,eax
  413bea:	ss push eax
  413bec:	mov    bl,BYTE PTR [edx]
  413bee:	xchg   esi,eax
  413bef:	dec    ebp
  413bf0:	mov    al,0xe4
  413bf2:	jmp    0x993f:0x77ff54bc
  413bf9:	lods   al,BYTE PTR ds:[esi]
  413bfa:	shl    edi,0xa6
  413bfd:	adc    eax,0x2b9ec053
  413c02:	popa   
  413c03:	push   edi
  413c04:	jne    0x413c73
  413c06:	jno    0x413bed
  413c08:	repz pop ds
  413c0a:	push   esi
  413c0b:	sub    BYTE PTR [ebx+0x1b3bc3c1],cl
  413c11:	rcl    DWORD PTR [eax-0x647807bb],1
  413c17:	mov    esi,0xaf928ec3
  413c1c:	ins    BYTE PTR es:[edi],dx
  413c1d:	jb     0x413c44
  413c1f:	loop   0x413c0d
  413c21:	xchg   ebx,eax
  413c22:	adc    ecx,DWORD PTR [ebx+0x1a]
  413c25:	push   edi
  413c26:	xchg   ebp,eax
  413c27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c28:	lds    ebp,FWORD PTR gs:[edx+0x473e9443]
  413c2f:	int    0x7a
  413c31:	jg     0x413c1d
  413c33:	mov    esp,DWORD PTR [ebx]
  413c35:	mov    ah,dl
  413c37:	push   edi
  413c38:	inc    eax
  413c39:	mov    edi,0x255b02d7
  413c3e:	cmp    BYTE PTR [eax],bh
  413c40:	inc    edi
  413c41:	inc    edx
  413c42:	ficomp WORD PTR ds:0x83b43aa2
  413c48:	or     cl,cl
  413c4a:	daa    
  413c4b:	mov    eax,0xac90a8a
  413c50:	mov    DWORD PTR [ebp+0x55],ebx
  413c53:	arpl   di,bp
  413c55:	or     esp,edi
  413c57:	xchg   edi,eax
  413c58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c59:	xchg   esp,eax
  413c5a:	mov    eax,0x9705ad4d
  413c5f:	stos   DWORD PTR es:[edi],eax
  413c60:	das    
  413c61:	dec    edi
  413c62:	mov    bh,0x1f
  413c64:	mov    dh,0xe9
  413c66:	jno    0x413c36
  413c68:	call   0x3884:0x835be10e
  413c6f:	mov    ebx,0x6ecb2320
  413c74:	hlt    
  413c75:	cwde   
  413c76:	addr16 pop esi
  413c78:	ins    DWORD PTR es:[edi],dx
  413c79:	mov    ah,BYTE PTR [ebx]
  413c7b:	adc    al,0x27
  413c7d:	sub    al,0x2
  413c7f:	xlat   BYTE PTR ds:[ebx]
  413c80:	loope  0x413cd1
  413c82:	jp     0x413c29
  413c84:	adc    DWORD PTR [ebx-0x66a9fd02],esi
  413c8a:	retf   0xcf05
  413c8d:	pop    eax
  413c8e:	inc    edx
  413c8f:	inc    ebx
  413c90:	push   ebp
  413c91:	aaa    
  413c92:	inc    ebx
  413c93:	adc    DWORD PTR [eax-0x67],eax
  413c96:	and    al,0x87
  413c98:	cdq    
  413c99:	mov    cl,0x94
  413c9b:	sahf   
  413c9c:	sub    esi,edx
  413c9e:	or     DWORD PTR [edx-0x7710637b],0xaf42d738
  413ca8:	test   al,0x6a
  413caa:	sbb    DWORD PTR [edx],ebp
  413cac:	sbb    ch,bh
  413cae:	sar    DWORD PTR ss:[ebx+0x54],cl
  413cb2:	mov    BYTE PTR [edx-0x1479bfb1],bh
  413cb8:	adc    ecx,DWORD PTR [edi+0x10e710d7]
  413cbe:	scas   al,BYTE PTR es:[edi]
  413cbf:	xchg   ebx,eax
  413cc0:	cmp    BYTE PTR [ebx+0x4],dl
  413cc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cc4:	and    BYTE PTR [ebx],0xc3
  413cc7:	mov    ebp,0x1a28d369
  413ccc:	pop    es
  413ccd:	(bad)  
  413cce:	retf   
  413ccf:	jp     0x413ccc
  413cd1:	push   edi
  413cd2:	lahf   
  413cd3:	adc    ch,BYTE PTR [esi-0x49]
  413cd6:	push   es
  413cd7:	jne    0x413c99
  413cd9:	stos   DWORD PTR es:[edi],eax
  413cda:	jbe    0x413d36
  413cdc:	xor    eax,0x840c830c
  413ce1:	jno    0x413cb6
  413ce3:	jge    0x413cf0
  413ce5:	cmp    eax,0xc3433f55
  413cea:	xchg   esi,eax
  413ceb:	inc    edx
  413cec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ced:	dec    ebp
  413cee:	jbe    0x413d5d
  413cf0:	arpl   bx,sp
  413cf2:	lahf   
  413cf3:	imul   ebx,ecx,0x52265a4b
  413cf9:	dec    eax
  413cfa:	sub    DWORD PTR [eax],0xccae29d0
  413d00:	in     al,0x69
  413d02:	call   FWORD PTR [ebx-0xc]
  413d05:	jg     0x413cae
  413d07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d08:	sub    ebp,ecx
  413d0a:	fmulp  st(5),st
  413d0c:	xchg   ebp,eax
  413d0d:	xchg   ebx,eax
  413d0e:	shr    ecx,0x34
  413d11:	ror    al,0x47
  413d14:	mov    al,ds:0xa1641b4a
  413d19:	dec    ecx
  413d1a:	xchg   DWORD PTR [ecx-0x57396b54],ebp
  413d20:	jmp    0x2074b11d
  413d25:	mov    eax,ds:0xeee9a272
  413d2a:	dec    esi
  413d2b:	xchg   esi,eax
  413d2c:	dec    ebp
  413d2d:	jl     0x413d80
  413d2f:	(bad)  
  413d30:	icebp  
  413d31:	int3   
  413d32:	fwait
  413d33:	jg     0x413d27
  413d35:	xchg   ecx,eax
  413d36:	push   es
  413d37:	push   ds
  413d38:	fcomp  QWORD PTR [ebx+0x36357274]
  413d3e:	fisttp QWORD PTR [eax-0x64]
  413d41:	setbe  BYTE PTR [ebp+0x42f4881d]
  413d48:	pop    es
  413d49:	repz inc ebx
  413d4b:	ror    BYTE PTR [ebp+eiz*1-0x74291b1f],1
  413d52:	loope  0x413dd1
  413d54:	mov    al,ds:0xad9d232e
  413d59:	stc    
  413d5a:	mov    eax,0x218cbdee
  413d5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d60:	scas   al,BYTE PTR es:[edi]
  413d61:	pop    edx
  413d62:	xchg   BYTE PTR [eax+0x3915148f],dl
  413d68:	and    ch,BYTE PTR [eax+0x56]
  413d6b:	test   al,0x5c
  413d6d:	mov    al,0xf2
  413d6f:	cmp    al,0x92
  413d71:	adc    al,0x8c
  413d73:	fnstsw WORD PTR [esi+eax*2]
  413d76:	in     al,0x88
  413d78:	and    BYTE PTR [ebp+0x79],ah
  413d7b:	retf   
  413d7c:	and    al,BYTE PTR [esi]
  413d7e:	(bad)  
  413d7f:	mov    al,0x19
  413d81:	rcl    BYTE PTR [edi-0x4b],1
  413d84:	mov    bh,0x4b
  413d86:	dec    ecx
  413d87:	mov    edx,0x99ba699a
  413d8c:	inc    edi
  413d8d:	add    DWORD PTR [edx-0x11],esi
  413d90:	jno    0x413dc9
  413d92:	mov    ds:0xd7d0d060,al
  413d97:	adc    ch,0x8c
  413d9a:	add    eax,0x3c744b4d
  413d9f:	sar    DWORD PTR [edx+edi*8],0x6e
  413da3:	int3   
  413da4:	je     0x413d66
  413da6:	out    0xce,al
  413da8:	loop   0x413df4
  413daa:	fdivr  DWORD PTR [ecx+0x5b]
  413dad:	xchg   edx,eax
  413dae:	push   cs
  413daf:	fwait
  413db0:	jne    0x413d96
  413db2:	lahf   
  413db3:	push   edx
  413db4:	fist   DWORD PTR [edi+0x68]
  413db7:	je     0x413d5e
  413db9:	cld    
  413dba:	aaa    
  413dbb:	sti    
  413dbc:	pop    ds
  413dbd:	ja     0x413db5
  413dbf:	cli    
  413dc0:	push   0x71a336a1
  413dc5:	inc    eax
  413dc6:	stc    
  413dc7:	push   edx
  413dc8:	js     0x413e42
  413dca:	pop    edi
  413dcb:	(bad)  
  413dcc:	xor    al,0x24
  413dce:	jl     0x413d59
  413dd0:	jg     0x413df8
  413dd2:	imul   esp,DWORD PTR [eax+0x761b5918],0x17c0214a
  413ddc:	dec    esp
  413ddd:	add    BYTE PTR [esp+edi*8-0x19],al
  413de1:	cmp    dh,BYTE PTR [ebx-0x5812e684]
  413de7:	jl     0x413e39
  413de9:	dec    eax
  413dea:	neg    BYTE PTR [ebx-0xd]
  413ded:	mov    eax,ss:0x977dec8d
  413df3:	clc    
  413df4:	cld    
  413df5:	scas   al,BYTE PTR es:[edi]
  413df6:	adc    DWORD PTR [ebp+0x53df63e2],edi
  413dfc:	repz adc BYTE PTR [ecx+0x57],bl
  413e00:	jle    0x413de3
  413e02:	mov    ecx,0xfc9eb20e
  413e07:	jmp    0x413e41
  413e09:	icebp  
  413e0a:	(bad)  
  413e0c:	es inc eax
  413e0e:	(bad)  
  413e10:	scas   al,BYTE PTR es:[edi]
  413e11:	data16 loop 0x413dda
  413e14:	inc    esi
  413e15:	fldenv [edx-0x28f66e2f]
  413e1b:	xchg   ebx,eax
  413e1c:	inc    ebx
  413e1d:	dec    ecx
  413e1e:	adc    BYTE PTR [ebp+0x22],ch
  413e21:	cld    
  413e22:	fwait
  413e23:	pop    es
  413e24:	xchg   esi,eax
  413e25:	je     0x413e41
  413e27:	sbb    DWORD PTR [ecx+0x6d],edx
  413e2a:	mov    edi,0x7b735d53
  413e2f:	icebp  
  413e30:	adc    al,0xad
  413e32:	cmp    ebp,esi
  413e34:	xor    esp,DWORD PTR [esi+0x22]
  413e37:	pop    ebx
  413e38:	out    0x44,eax
  413e3a:	inc    ebx
  413e3b:	pusha  
  413e3c:	xchg   DWORD PTR [ebx-0x18],ecx
  413e3f:	cmp    esi,DWORD PTR [esi+eiz*2+0x39]
  413e43:	xor    dl,BYTE PTR [ebp-0x6e]
  413e46:	push   edi
  413e47:	rcl    cl,1
  413e49:	jge    0x413e7a
  413e4b:	fnstcw WORD PTR [esi-0x2b0c9fcb]
  413e51:	mov    WORD PTR [esi-0x49d21ab4],cs
  413e57:	mov    esi,0x6e203917
  413e5c:	(bad)  
  413e5e:	in     eax,dx
  413e5f:	mov    esi,DWORD PTR [edi+0x765366c8]
  413e65:	adc    edi,DWORD PTR [eax]
  413e67:	pop    eax
  413e68:	out    0x53,eax
  413e6a:	and    dl,BYTE PTR [ecx-0x14]
  413e6d:	or     ebx,DWORD PTR [ebp-0x64]
  413e70:	fild   DWORD PTR [ecx]
  413e72:	push   ebp
  413e73:	lods   eax,DWORD PTR ds:[esi]
  413e74:	js     0x413dfc
  413e76:	fmul   QWORD PTR [eax]
  413e78:	xchg   edi,eax
  413e79:	cld    
  413e7a:	or     al,0x6f
  413e7c:	add    ebx,edi
  413e7e:	adc    ah,al
  413e80:	mov    bl,0x60
  413e82:	enter  0x7354,0x4
  413e86:	inc    ecx
  413e87:	shl    DWORD PTR [ebp-0xb91db3],1
  413e8d:	ret    
  413e8e:	mov    edi,0x7052b311
  413e93:	or     BYTE PTR [esi+eax*8+0xfaa6f59],ch
  413e9a:	adc    al,0x99
  413e9c:	loopne 0x413e8c
  413e9e:	add    BYTE PTR [edx],0x95
  413ea1:	scas   al,BYTE PTR es:[edi]
  413ea2:	rol    dh,cl
  413ea4:	add    eax,0x5172c22a
  413ea9:	sar    DWORD PTR [edi],1
  413eab:	jmp    FWORD PTR [ebp+edx*4+0x41]
  413eaf:	clc    
  413eb0:	shl    DWORD PTR [eax],1
  413eb2:	push   es
  413eb3:	sub    BYTE PTR [esi-0x6f],ah
  413eb6:	jp     0x413f14
  413eb8:	mov    bl,0x4f
  413eba:	aaa    
  413ebb:	dec    esi
  413ebc:	or     BYTE PTR [esi-0x14bdf807],dl
  413ec2:	sbb    eax,DWORD PTR ds:0xb9e4ac60
  413ec8:	dec    edi
  413ec9:	pop    es
  413eca:	push   0xffffffda
  413ecc:	stos   DWORD PTR es:[edi],eax
  413ecd:	dec    ebx
  413ece:	stos   DWORD PTR es:[edi],eax
  413ecf:	arpl   WORD PTR [eax],di
  413ed1:	repnz call 0x28b1:0xac31ad22
  413ed9:	dec    eax
  413eda:	push   ds
  413edb:	hlt    
  413edc:	ins    DWORD PTR es:[edi],dx
  413edd:	loopne 0x413efa
  413edf:	mov    al,0x30
  413ee1:	loope  0x413e9f
  413ee3:	test   BYTE PTR [edi],cl
  413ee5:	push   esi
  413ee6:	lea    eax,[ebp+0x55]
  413ee9:	pusha  
  413eea:	aaa    
  413eeb:	inc    ecx
  413eec:	retf   0x199d
  413eef:	sub    DWORD PTR [edx+edi*8],0xf672a7df
  413ef6:	in     eax,dx
  413ef7:	rol    ah,cl
  413ef9:	mov    ah,BYTE PTR [ebx]
  413efb:	jbe    0x413ea6
  413efd:	cdq    
  413efe:	jmp    0x614d:0x17ee9b87
  413f05:	out    0xb2,al
  413f07:	cdq    
  413f08:	sbb    ch,dh
  413f0a:	ret    0x50f8
  413f0d:	push   edx
  413f0e:	mov    eax,0x464213df
  413f13:	jge    0x413f0f
  413f15:	dec    esi
  413f16:	fstp   DWORD PTR [ecx-0x39]
  413f19:	scas   al,BYTE PTR es:[edi]
  413f1a:	out    dx,eax
  413f1b:	push   esp
  413f1c:	outs   dx,BYTE PTR ds:[esi]
  413f1d:	xor    dl,BYTE PTR [edi]
  413f1f:	fisub  DWORD PTR [eax+0x5c5f7734]
  413f25:	mov    ebx,0x40d49922
  413f2a:	mov    esp,ecx
  413f2c:	inc    edx
  413f2d:	xchg   edi,eax
  413f2e:	push   cs
  413f2f:	and    ebx,edx
  413f31:	ss pop edi
  413f33:	inc    eax
  413f34:	mov    esp,0xc9f4714b
  413f39:	and    al,0xb0
  413f3b:	or     BYTE PTR [esi+0x1820b30d],bh
  413f41:	cmc    
  413f42:	fistp  WORD PTR [esi-0x54]
  413f45:	xchg   BYTE PTR [eax+0x71339ec9],bh
  413f4b:	add    eax,0x5237799c
  413f50:	inc    edi
  413f51:	mov    edi,0xc2e30759
  413f56:	out    0x8a,al
  413f58:	pop    ebp
  413f59:	int    0x48
  413f5b:	jg     0x413f6a
  413f5d:	pop    ebp
  413f5e:	std    
  413f5f:	dec    esi
  413f60:	popf   
  413f61:	bound  edx,QWORD PTR [esi+0xb968fb4]
  413f67:	loopne 0x413f68
  413f69:	dec    esi
  413f6a:	fcom   st(3)
  413f6c:	data16 fs hlt 
  413f6f:	xchg   ebp,eax
  413f70:	xchg   esi,eax
  413f71:	push   0x7d
  413f73:	jbe    0x413f3d
  413f75:	shr    DWORD PTR [ecx-0x1d],1
  413f78:	fbstp  TBYTE PTR [eax+0x349883c6]
  413f7e:	(bad)  
  413f7f:	mov    BYTE PTR [ecx+0x12f53fa9],ah
  413f85:	or     bl,BYTE PTR [ebp+eax*4-0x1c]
  413f89:	xchg   esi,eax
  413f8a:	cmp    al,0xf7
  413f8c:	in     al,0x2f
  413f8e:	call   DWORD PTR [edi]
  413f90:	sti    
  413f91:	rcl    BYTE PTR [edi-0x409715fd],cl
  413f97:	les    ecx,FWORD PTR [esi-0xb]
  413f9a:	ret    
  413f9b:	jmp    0xcca9:0xcc1aaa85
  413fa2:	adc    BYTE PTR [ebx],ah
  413fa4:	xchg   esi,eax
  413fa5:	and    ch,BYTE PTR [ecx-0x29]
  413fa8:	mov    dh,0xc7
  413faa:	loope  0x413f6e
  413fac:	pushf  
  413fad:	lahf   
  413fae:	sub    eax,0x9adb606
  413fb3:	cmp    ch,BYTE PTR [ecx-0x42f24305]
  413fb9:	fisttp DWORD PTR [eax]
  413fbb:	dec    eax
  413fbc:	cmp    eax,0x95403c1f
  413fc1:	push   ss
  413fc2:	mov    WORD PTR [edi],cs
  413fc4:	and    ah,al
  413fc6:	ss dec esp
  413fc8:	xchg   edi,eax
  413fc9:	or     esi,DWORD PTR [esi]
  413fcb:	push   edi
  413fcc:	je     0x413fed
  413fce:	aas    
  413fcf:	adc    eax,0xb7c2fca7
  413fd4:	addr16 iret 
  413fd6:	ja     0x413f7b
  413fd8:	lds    edx,FWORD PTR [ecx]
  413fda:	fbld   TBYTE PTR [eax+0x436d0488]
  413fe0:	rol    BYTE PTR [esi],0x1
  413fe3:	outs   dx,DWORD PTR ds:[esi]
  413fe4:	data16 into 
  413fe6:	jns    0x41404c
  413fe8:	sahf   
  413fe9:	cmp    esp,ebx
  413feb:	cmp    BYTE PTR [eax+esi*2-0x6cba9bea],bh
  413ff2:	pop    esi
  413ff3:	addr16 mov ds:0xeb78,al
  413ff7:	(bad)  
  413ff8:	or     DWORD PTR [ebx+0x62],edi
  413ffb:	in     eax,0x2
  413ffd:	aas    
  413ffe:	sti    
  413fff:	push   es
  414000:	sbb    dl,al
  414002:	and    ecx,ecx
  414004:	dec    esp
  414005:	push   ss
  414006:	push   esp
  414007:	cmp    edx,DWORD PTR [esi+0x66]
  41400a:	je     0x414034
  41400c:	sbb    BYTE PTR [esi-0x66],ah
  41400f:	(bad)  
  414010:	push   ebx
  414011:	jo     0x414081
  414013:	pop    ds
  414014:	push   eax
  414015:	es iret 
  414017:	and    eax,0x8ee8f0db
  41401c:	sub    al,0x79
  41401e:	ret    
  41401f:	mov    DWORD PTR [edi-0x12],edi
  414022:	(bad)  
  414023:	jnp    0x413fc7
  414025:	sub    esp,DWORD PTR [eax+ecx*1-0x69108a4c]
  41402c:	test   al,0xfc
  41402e:	dec    ecx
  41402f:	jbe    0x41405f
  414031:	sub    ecx,ebp
  414033:	mov    esp,0x3c9a4d06
  414038:	push   0xffffff85
  41403a:	aad    0xdc
  41403c:	cdq    
  41403d:	mov    ebx,0x2a9bff1f
  414042:	sub    eax,DWORD PTR [ebx-0xd08be36]
  414048:	dec    esp
  414049:	dec    edx
  41404a:	lds    ebx,FWORD PTR [edx+0x5d]
  41404d:	xchg   esi,eax
  41404e:	jno    0x41405f
  414050:	gs call edi
  414053:	call   0xec98f3d3
  414058:	inc    eax
  414059:	inc    eax
  41405a:	leave  
  41405b:	retf   
  41405c:	mov    eax,0x44a268e8
  414061:	pop    esp
  414062:	in     eax,dx
  414063:	(bad)  
  414065:	push   0xffffffed
  414067:	cli    
  414068:	(bad)  
  414069:	in     al,dx
  41406a:	sbb    eax,0x5ece6598
  41406f:	xlat   BYTE PTR ds:[ebx]
  414070:	fdivr  DWORD PTR [esp+ebp*4-0x66e7ee58]
  414077:	or     dh,BYTE PTR [ecx+esi*1]
  41407a:	jecxz  0x4140a6
  41407c:	scas   al,BYTE PTR es:[edi]
  41407d:	mov    esp,0xaeca1d53
  414082:	add    bl,dh
  414084:	les    cx,DWORD PTR [esi-0x3c]
  414088:	imul   eax,DWORD PTR [edx-0x79],0x5e98b16b
  41408f:	retf   
  414090:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414091:	sbb    ch,BYTE PTR [ecx+ebx*4]
  414094:	xor    eax,0xe6a8c386
  414099:	xchg   ecx,eax
  41409a:	nop
  41409b:	enter  0xeaa,0x4d
  41409f:	stos   BYTE PTR es:[edi],al
  4140a0:	sub    BYTE PTR [ebx],0xc4
  4140a3:	lea    edi,[eax-0x7de9e92b]
  4140a9:	stos   DWORD PTR es:[edi],eax
  4140aa:	push   ecx
  4140ab:	jns    0x41404a
  4140ad:	adc    edi,DWORD PTR [ecx+0x1e]
  4140b0:	std    
  4140b1:	daa    
  4140b2:	arpl   WORD PTR [edi],sp
  4140b4:	xchg   ebx,eax
  4140b5:	mov    ecx,0xea147264
  4140ba:	cli    
  4140bb:	aam    0xa6
  4140bd:	sbb    ah,al
  4140bf:	mov    esp,0x3de34af5
  4140c4:	jb     0x41409c
  4140c6:	das    
  4140c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140c8:	and    dh,dh
  4140ca:	xor    edi,DWORD PTR [esi+0x39156f9a]
  4140d0:	or     DWORD PTR [eax+0x2d05df83],0xffffffa7
  4140d7:	xor    DWORD PTR [edx+0x37],edi
  4140da:	and    ebx,DWORD PTR [ecx]
  4140dc:	fcmovb st,st(1)
  4140de:	aas    
  4140df:	inc    edx
  4140e0:	stos   DWORD PTR es:[edi],eax
  4140e1:	cmp    edi,DWORD PTR [eax-0x32e422da]
  4140e7:	cld    
  4140e8:	gs retf 0x245e
  4140ec:	inc    DWORD PTR [edx+0x17]
  4140ef:	xor    eax,0xdbecca17
  4140f4:	mov    dl,0x31
  4140f6:	xlat   BYTE PTR ds:[ebx]
  4140f7:	mov    al,ds:0x49455136
  4140fc:	(bad)  
  4140fd:	mov    cl,0x64
  4140ff:	mov    BYTE PTR [ebx],0x9c
  414102:	cdq    
  414103:	inc    edi
  414104:	pop    ebp
  414105:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414106:	aam    0x2d
  414108:	mov    al,ds:0x7242991e
  41410d:	jge    0x4140a2
  41410f:	jae    0x41414e
  414111:	scas   al,BYTE PTR es:[edi]
  414112:	test   DWORD PTR [eax],edi
  414114:	fsubr  QWORD PTR [ebx+eiz*8]
  414117:	std    
  414118:	imul   BYTE PTR [edi-0x27d18a81]
  41411e:	fucomp st(1)
  414120:	cs or  esi,ecx
  414123:	add    al,0xaf
  414125:	mov    al,ds:0x30baa3a2
  41412a:	icebp  
  41412b:	iret   
  41412c:	pop    edi
  41412d:	xor    eax,0xb7b10be0
  414132:	and    DWORD PTR [ebx],ecx
  414134:	popf   
  414135:	scas   eax,DWORD PTR es:[edi]
  414136:	sbb    BYTE PTR [ecx+0x15],ah
  414139:	inc    esp
  41413a:	pop    ecx
  41413b:	(bad)  
  41413c:	push   ss
  41413d:	cmp    eax,0xc3194fd1
  414142:	push   esi
  414143:	pop    es
  414144:	pusha  
  414145:	(bad)  
  414146:	adc    BYTE PTR ds:0x280afaa6,ch
  41414c:	xor    al,0x2c
  41414e:	lahf   
  41414f:	in     al,dx
  414150:	adc    DWORD PTR [edi-0xf23a124],esp
  414156:	jae    0x4141d0
  414158:	sbb    edx,DWORD PTR [edi]
  41415a:	dec    eax
  41415b:	retf   0x37dd
  41415e:	aad    0xbc
  414160:	ss mov bh,0xa8
  414163:	pop    edi
  414164:	js     0x4141b2
  414166:	into   
  414167:	in     eax,dx
  414168:	neg    BYTE PTR [esi+0x69]
  41416b:	out    0xa5,eax
  41416d:	cmp    al,0xfe
  41416f:	jl     0x414184
  414171:	cs (bad) 
  414173:	sub    DWORD PTR [ecx+0x5ba02fb3],ebx
  414179:	cwde   
  41417a:	dec    eax
  41417b:	xor    ebp,DWORD PTR [eax+0x16120e45]
  414181:	fs xchg esp,eax
  414183:	and    cl,ah
  414185:	mov    DWORD PTR [esi],esi
  414187:	pop    ax
  414189:	jl     0x414149
  41418b:	imul   edx,DWORD PTR [ecx+0x48],0xffffffcc
  41418f:	mov    ds:0x4d7a48e3,eax
  414194:	outs   dx,BYTE PTR ds:[esi]
  414195:	sti    
  414196:	xchg   esi,eax
  414197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414198:	jns    0x414126
  41419a:	xchg   ecx,eax
  41419b:	(bad)  [eax-0x48e7296c]
  4141a1:	lahf   
  4141a2:	shl    DWORD PTR [eax],1
  4141a4:	adc    al,BYTE PTR [eax]
  4141a6:	pop    esi
  4141a7:	(bad)  
  4141a8:	cdq    
  4141a9:	sub    DWORD PTR [ebp+0xbcf5c45],0x4b46c7cc
  4141b3:	dec    ebx
  4141b4:	adc    BYTE PTR [esi+0x3a],al
  4141b7:	add    ebp,DWORD PTR [ecx+0x7866c0a5]
  4141bd:	add    DWORD PTR [esi],edx
  4141bf:	inc    ebp
  4141c0:	ja     0x4141a0
  4141c2:	sbb    eax,0xd959701a
  4141c7:	xchg   BYTE PTR ds:0x11e4f086,dl
  4141cd:	dec    edi
  4141ce:	xchg   esp,eax
  4141cf:	pop    edx
  4141d0:	adc    ch,BYTE PTR [ebp-0x48]
  4141d3:	test   DWORD PTR [esi-0x6c],ecx
  4141d6:	std    
  4141d7:	lds    ecx,FWORD PTR [ebp+0x1a]
  4141da:	adc    eax,0x74fd5dd5
  4141df:	loopne 0x414212
  4141e1:	sbb    ecx,DWORD PTR [ecx]
  4141e3:	nop
  4141e4:	xchg   ebx,eax
  4141e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141e6:	inc    edx
  4141e7:	push   cs
  4141e8:	pop    edx
  4141e9:	push   ebx
  4141ea:	stos   DWORD PTR es:[edi],eax
  4141eb:	fisubr DWORD PTR [esi]
  4141ed:	mov    ebp,0xb2bef4fa
  4141f2:	mov    eax,ds:0x87ecce36
  4141f7:	ds sub eax,0x71679da
  4141fd:	push   esi
  4141fe:	xchg   edx,eax
  4141ff:	xor    eax,0xd4963099
  414204:	push   es
  414205:	fnstsw WORD PTR [esp+edx*4]
  414208:	cmp    DWORD PTR [ebx-0x73],0xfffffffa
  41420c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41420d:	mov    ch,0x24
  41420f:	test   DWORD PTR [ebp+0x7b377149],esp
  414215:	push   0xffffffd8
  414217:	xor    DWORD PTR [eax],ebx
  414219:	aas    
  41421a:	mov    bh,0xfd
  41421c:	rol    BYTE PTR [ebp+0x71b5d042],cl
  414222:	scas   al,BYTE PTR es:[edi]
  414223:	jecxz  0x414229
  414225:	(bad)  
  414226:	cmp    BYTE PTR [edi-0x5f5b773],al
  41422c:	push   edx
  41422d:	shl    DWORD PTR [edi-0x5e],cl
  414230:	test   DWORD PTR [ebx-0x60e64a9f],edx
  414236:	xchg   ecx,eax
  414237:	jecxz  0x4142a7
  414239:	ins    BYTE PTR es:[edi],dx
  41423a:	out    dx,eax
  41423b:	add    al,0x6c
  41423d:	mov    ch,0x50
  41423f:	pusha  
  414240:	imul   eax,DWORD PTR [eax+0x5e],0xf
  414244:	ds xor ax,0xb089
  414249:	aam    0xcc
  41424b:	mov    edx,0x88bdadba
  414250:	gs inc ebx
  414252:	rcl    BYTE PTR [edi],cl
  414254:	add    eax,DWORD PTR [edi+0x2d]
  414257:	lock sbb esp,edi
  41425a:	xchg   edi,eax
  41425b:	cli    
  41425c:	sbb    BYTE PTR [edi],0x8a
  41425f:	(bad)  
  414260:	sub    BYTE PTR [ebx],dl
  414262:	push   edi
  414263:	and    eax,0x5dda9181
  414268:	bound  edi,QWORD PTR [esi+0x35ae4cb1]
  41426e:	out    dx,al
  41426f:	jle    0x414283
  414271:	pop    ds
  414272:	jl     0x414258
  414274:	jb     0x4142a6
  414276:	das    
  414277:	dec    edi
  414278:	inc    ebx
  414279:	gs sti 
  41427b:	sbb    cl,BYTE PTR [ecx-0x2de6a3a7]
  414281:	add    DWORD PTR [ebp-0x644f1787],eax
  414287:	sub    ecx,DWORD PTR [ebp*1+0x53db7cdc]
  41428e:	lods   al,BYTE PTR ds:[esi]
  41428f:	(bad)  
  414290:	pop    ebx
  414291:	lock fstp QWORD PTR [esi]
  414294:	add    eax,0xe07c86c1
  414299:	je     0x4142f1
  41429b:	push   0x92b8a26d
  4142a0:	add    BYTE PTR [eax-0x6cae8fe2],dh
  4142a6:	xor    esp,ebx
  4142a8:	cmc    
  4142a9:	lods   al,BYTE PTR ds:[esi]
  4142aa:	cmp    bl,0x46
  4142ad:	shr    BYTE PTR [ecx+ebp*2+0x51],1
  4142b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142b2:	cdq    
  4142b3:	ds shl al,cl
  4142b6:	or     ebx,esi
  4142b8:	push   0xffffff8b
  4142ba:	jmp    0x4142dc
  4142bc:	dec    edi
  4142bd:	push   0xfffffff0
  4142bf:	adc    BYTE PTR [edx],0xd2
  4142c2:	mov    DWORD PTR [edi+0x52],ecx
  4142c5:	mov    dh,0x84
  4142c7:	add    ebp,DWORD PTR [eax+0x5b1de923]
  4142cd:	dec    ebx
  4142ce:	add    ah,dl
  4142d0:	sub    ecx,eax
  4142d2:	lahf   
  4142d3:	lea    eax,[ebx+esi*8]
  4142d6:	dec    ebp
  4142d7:	push   ss
  4142d8:	dec    eax
  4142d9:	xor    eax,0x6bf9a7d5
  4142de:	push   esi
  4142df:	shl    ecx,0x50
  4142e2:	pop    esp
  4142e3:	sbb    eax,0x97717be3
  4142e8:	push   esi
  4142e9:	stos   BYTE PTR es:[edi],al
  4142ea:	std    
  4142eb:	mov    dh,0xc3
  4142ed:	dec    edx
  4142ee:	ret    
  4142ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142f0:	out    0xaa,al
  4142f2:	push   ebp
  4142f3:	cdq    
  4142f4:	dec    ebx
  4142f5:	std    
  4142f6:	inc    ebx
  4142f7:	xor    eax,0x85607100
  4142fc:	ret    
  4142fd:	cmp    eax,0x557ff7cc
  414302:	in     al,0xf2
  414304:	jo     0x414341
  414306:	jmp    0x4142ea
  414308:	mov    bh,0xbb
  41430a:	pop    edi
  41430b:	jecxz  0x41428e
  41430d:	or     esi,ecx
  41430f:	stc    
  414310:	sub    DWORD PTR [ecx-0x39bdf30b],ebp
  414316:	mov    ds:0xe0b4ed2b,eax
  41431b:	stos   DWORD PTR es:[edi],eax
  41431c:	dec    ebp
  41431d:	lods   eax,DWORD PTR ds:[esi]
  41431e:	pop    ebp
  41431f:	aam    0x15
  414321:	js     0x414357
  414323:	js     0x414379
  414325:	out    0xf4,eax
  414327:	ror    BYTE PTR [esi+0x5d],0x8f
  41432b:	ins    BYTE PTR es:[edi],dx
  41432c:	inc    esi
  41432d:	push   eax
  41432e:	je     0x414362
  414330:	fistp  DWORD PTR [esi+0x52]
  414333:	jne    0x4142bc
  414335:	inc    edi
  414336:	leave  
  414337:	cli    
  414338:	ficom  WORD PTR [edx]
  41433a:	push   edx
  41433b:	retf   0x716f
  41433e:	cmp    al,BYTE PTR [esi+0x2cb10928]
  414344:	mov    DWORD PTR [eax],ebx
  414346:	xlat   BYTE PTR ds:[ebx]
  414347:	push   ecx
  414348:	ins    DWORD PTR es:[edi],dx
  414349:	popa   
  41434a:	xchg   esp,eax
  41434b:	in     al,0xa8
  41434d:	daa    
  41434e:	ret    
  41434f:	xchg   esi,eax
  414350:	shl    DWORD PTR [ecx-0x1b],0x5d
  414354:	cli    
  414355:	jbe    0x4143a4
  414357:	sub    esi,esi
  414359:	fld    QWORD PTR [ebp-0x72]
  41435c:	call   0x2b228dbb
  414361:	jno    0x41430d
  414363:	push   esp
  414364:	inc    esi
  414365:	(bad)  
  414366:	(bad)  
  414367:	sti    
  414368:	mov    dl,0x23
  41436a:	sub    al,0x97
  41436c:	stos   DWORD PTR es:[edi],eax
  41436d:	jmp    0x414390
  41436f:	sbb    al,0x1
  414371:	mov    ch,0xe6
  414373:	mov    bh,0xe1
  414375:	leave  
  414376:	pop    esi
  414377:	sbb    DWORD PTR [eax-0x2f0eab89],eax
  41437d:	adc    BYTE PTR [edx],dh
  41437f:	jne    0x4143bc
  414381:	cmp    ah,BYTE PTR [ebp-0x7c]
  414384:	retf   0x1678
  414387:	popa   
  414388:	out    dx,eax
  414389:	or     bl,al
  41438b:	fisttp DWORD PTR [esi+0x6c98476f]
  414391:	cmc    
  414392:	sahf   
  414393:	adc    BYTE PTR [esp+eax*4+0x6ec77bb],bl
  41439a:	mov    al,0x96
  41439c:	mov    BYTE PTR [ecx],dh
  41439e:	imul   esi,DWORD PTR [ecx+0x32],0x4add3512
  4143a5:	adc    eax,0xbf26cc8d
  4143aa:	mov    esi,0xc3befb27
  4143af:	jecxz  0x4143fa
  4143b1:	adc    ebp,ebx
  4143b3:	or     al,0xfe
  4143b5:	and    eax,0x403a755e
  4143ba:	ret    0xb7ff
  4143bd:	ins    DWORD PTR es:[edi],dx
  4143be:	lds    edx,FWORD PTR [ebx+edi*2+0x74]
  4143c2:	inc    edx
  4143c3:	add    cl,BYTE PTR [edi+esi*2+0x3184bbcd]
  4143ca:	pop    eax
  4143cb:	fwait
  4143cc:	mov    edi,0x4cea2517
  4143d1:	push   esi
  4143d2:	sbb    ch,0x81
  4143d5:	fwait
  4143d6:	dec    edi
  4143d7:	sub    al,0xae
  4143d9:	fld    TBYTE PTR [edi]
  4143db:	fbld   TBYTE PTR [ebp-0x6f4b2db7]
  4143e1:	pop    eax
  4143e2:	sub    BYTE PTR [edi],bl
  4143e4:	das    
  4143e5:	lea    edx,[edx]
  4143e7:	test   DWORD PTR [edi-0x3b],esi
  4143ea:	xchg   edx,eax
  4143eb:	push   edx
  4143ec:	aad    0x29
  4143ee:	imul   ebp,ebx,0xffffffe4
  4143f1:	mov    dl,0x78
  4143f3:	inc    eax
  4143f4:	fdivr  DWORD PTR [edi+0x4cd3c79]
  4143fa:	sub    DWORD PTR [ebx-0x60],0x4b3af195
  414401:	cmp    esp,DWORD PTR [ebx]
  414403:	mov    bl,0x6a
  414405:	xor    al,0x78
  414407:	popa   
  414408:	xchg   ebx,eax
  414409:	inc    ebp
  41440a:	out    dx,eax
  41440b:	scas   eax,DWORD PTR es:[edi]
  41440c:	cmp    bh,cl
  41440e:	jbe    0x4143f6
  414410:	and    al,0x11
  414412:	push   ecx
  414413:	dec    esp
  414414:	pop    edi
  414415:	fs test al,0x8d
  414418:	xchg   ebp,eax
  414419:	pop    es
  41441a:	and    esp,ecx
  41441c:	or     DWORD PTR [edi+0x3c],eax
  41441f:	(bad)  
  414420:	hlt    
  414421:	cli    
  414422:	cmp    ebp,ebp
  414424:	shl    BYTE PTR [esi+0x64],cl
  414427:	sub    al,0xd3
  414429:	jmp    0x463d:0xd3b3db2
  414430:	iret   
  414431:	fwait
  414432:	jnp    0x414444
  414434:	ja     0x414406
  414436:	mov    edi,0x9bf809e
  41443b:	mov    eax,0x7ee54c17
  414440:	pop    ebp
  414441:	mov    eax,ds:0x692ebc0a
  414446:	outs   dx,DWORD PTR ds:[esi]
  414447:	mov    ch,0xa3
  414449:	add    DWORD PTR [eax+edi*1+0x67cf9467],0xade90699
  414454:	jns    0x414471
  414456:	enter  0x617e,0xf2
  41445a:	mov    esi,0x75223e07
  41445f:	leave  
  414460:	fstp   DWORD PTR [ebx+0x2c6a5991]
  414466:	dec    ecx
  414467:	jno    0x4144c7
  414469:	mov    eax,0xcf2d8cda
  41446e:	push   esp
  41446f:	outs   dx,BYTE PTR ds:[esi]
  414471:	sbb    eax,0x6800acb5
  414476:	gs mov ebx,?
  414479:	xor    BYTE PTR [edi*8+0x797fdb40],al
  414480:	ficom  WORD PTR [ebx]
  414482:	loope  0x4144e9
  414484:	stos   BYTE PTR es:[edi],al
  414485:	fild   DWORD PTR [edx]
  414487:	push   0xffffff80
  414489:	add    BYTE PTR [edx],ch
  41448b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41448c:	adc    esi,DWORD PTR [esi]
  41448e:	leave  
  41448f:	cwde   
  414490:	sub    BYTE PTR [ebx-0x69],dh
  414493:	retf   0x99b7
  414496:	pop    ss
  414497:	es jp  0x4144cd
  41449a:	dec    edi
  41449b:	xchg   BYTE PTR [eax-0x32b0355],ah
  4144a1:	mov    al,ds:0x718b202f
  4144a6:	ret    
  4144a7:	and    al,0xa5
  4144a9:	push   eax
  4144aa:	imul   edx,DWORD PTR [eax],0x1d329148
  4144b0:	loope  0x41444b
  4144b2:	into   
  4144b3:	adc    al,0x27
  4144b5:	pop    ecx
  4144b6:	aam    0xb1
  4144b8:	push   ds
  4144b9:	fwait
  4144ba:	in     al,dx
  4144bb:	das    
  4144bc:	aam    0xfa
  4144be:	das    
  4144bf:	push   ebp
  4144c0:	cmp    BYTE PTR [ecx],dl
  4144c2:	and    DWORD PTR [edi-0x2a],0xdc47dfb
  4144c9:	cmp    eax,0x20eb91b4
  4144ce:	out    0x4e,eax
  4144d0:	add    ebp,esp
  4144d2:	in     eax,dx
  4144d3:	(bad)  
  4144d4:	hlt    
  4144d5:	and    DWORD PTR [ecx+0x50bc7b36],esp
  4144db:	mov    eax,0xf987979b
  4144e0:	lock jae 0x4144d9
  4144e3:	xchg   esi,eax
  4144e4:	inc    ecx
  4144e5:	aad    0x43
  4144e7:	sub    ebp,edx
  4144e9:	push   esp
  4144ea:	shl    edi,cl
  4144ec:	mov    bh,0xfa
  4144ee:	xchg   ecx,eax
  4144ef:	sub    eax,0x15a3a654
  4144f4:	sub    eax,0x5701dddc
  4144f9:	jno    0x41450c
  4144fb:	imul   ecx,DWORD PTR [eax-0x4],0x2ee9823d
  414502:	fisttp DWORD PTR [ecx+0x75]
  414505:	popa   
  414506:	xchg   ebx,eax
  414507:	jecxz  0x41452c
  414509:	mov    gs,WORD PTR [edi+0x2149d2a4]
  41450f:	jecxz  0x4144f2
  414511:	aam    0x15
  414513:	call   0x4c63:0x20d3a152
  41451a:	js     0x414507
  41451c:	mov    DWORD PTR [eax],ecx
  41451e:	call   0xe937e9f9
  414523:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414524:	retf   0x9922
  414527:	sub    esp,esp
  414529:	xor    BYTE PTR [ebp+0x5b],ah
  41452c:	jg     0x41451c
  41452e:	sahf   
  41452f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414530:	(bad)  
  414532:	into   
  414533:	pushw  0xffbc
  414536:	call   0xe7fcac3c
  41453b:	inc    ebp
  41453c:	ficomp WORD PTR [eax-0x69adb20f]
  414542:	int3   
  414543:	cs fwait
  414545:	hlt    
  414546:	test   edi,esi
  414548:	lahf   
  414549:	jbe    0x414591
  41454b:	pop    edi
  41454c:	mov    ds:0x1a871622,al
  414551:	aad    0xa6
  414553:	mov    ecx,0x74931353
  414558:	adc    edi,DWORD PTR [esi]
  41455a:	jo     0x414595
  41455c:	pop    ds
  41455d:	in     al,0x1f
  41455f:	push   0xc396731c
  414564:	je     0x414520
  414566:	dec    esi
  414567:	mov    esi,0xdaa580f4
  41456c:	in     eax,dx
  41456d:	icebp  
  41456e:	and    eax,ebx
  414570:	(bad)  
  414571:	sub    al,BYTE PTR [ebx-0x7923fe46]
  414577:	jbe    0x4145c6
  414579:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41457b:	pusha  
  41457c:	push   es
  41457d:	test   BYTE PTR [eax+eax*2],ah
  414580:	xor    edx,DWORD PTR [esp+esi*2+0x71]
  414584:	das    
  414585:	mov    ch,BYTE PTR [esi]
  414587:	clc    
  414588:	mov    eax,ds:0x6d69ccd1
  41458d:	xor    ebx,esi
  41458f:	bswap  edx
  414591:	pop    ebp
  414592:	fstp   TBYTE PTR [edx+0x3b]
  414595:	push   es
  414596:	inc    edi
  414597:	jnp    0x41454f
  414599:	xor    ecx,ecx
  41459b:	les    eax,FWORD PTR [ebx+ebp*1-0x56b244e6]
  4145a2:	sbb    BYTE PTR [esi+0x7a],dl
  4145a5:	cmp    esp,DWORD PTR [ecx]
  4145a7:	mov    WORD PTR [edx+edx*8],cs
  4145aa:	mov    cl,0xcb
  4145ac:	dec    edi
  4145ad:	sbb    ecx,DWORD PTR [edx+0x73]
  4145b0:	mov    dl,0x3b
  4145b2:	ret    0x9c6f
  4145b5:	mov    cl,0xb8
  4145b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145b8:	in     al,0xa7
  4145ba:	iret   
  4145bb:	repz aad 0x11
  4145be:	call   0xfa334704
  4145c3:	mov    ecx,0x904821e7
  4145c8:	mov    eax,ebx
  4145ca:	xchg   edx,eax
  4145cb:	sbb    al,0x9b
  4145cd:	jb     0x41463d
  4145cf:	clc    
  4145d0:	or     al,0xd7
  4145d2:	push   ss
  4145d3:	outs   dx,BYTE PTR ds:[esi]
  4145d4:	inc    BYTE PTR [eax]
  4145d6:	stos   BYTE PTR es:[edi],al
  4145d7:	dec    esp
  4145d8:	stos   BYTE PTR es:[edi],al
  4145d9:	jno    0x4145cd
  4145db:	daa    
  4145dc:	inc    eax
  4145dd:	cmp    ah,dh
  4145df:	out    0xe5,eax
  4145e1:	popf   
  4145e2:	inc    ecx
  4145e3:	out    0xc5,eax
  4145e5:	ffreep st(0)
  4145e7:	in     al,dx
  4145e8:	fs gs xchg edi,edi
  4145ec:	and    al,0xc8
  4145ee:	xor    edi,DWORD PTR [ebx+esi*8+0x4e]
  4145f2:	js     0x41458e
  4145f4:	xchg   esp,eax
  4145f5:	les    edx,FWORD PTR [edx-0x68e3a9fd]
  4145fb:	fild   DWORD PTR [ecx+0x63]
  4145fe:	jnp    0x41461e
  414600:	cmp    eax,0x815d93be
  414605:	sub    al,0x80
  414607:	and    DWORD PTR [eax-0x1bf03f56],esp
  41460d:	push   edx
  41460e:	inc    ebp
  41460f:	sbb    eax,0x17d61d9d
  414614:	imul   edi,DWORD PTR [edi-0x355faa7e],0x1a2f94b1
  41461e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41461f:	(bad)  
  414620:	adc    al,0xd7
  414622:	hlt    
  414623:	mov    edx,0xaa5d33cf
  414628:	cld    
  414629:	mov    dl,0x26
  41462b:	mov    eax,0xb00d2f7f
  414630:	fiadd  WORD PTR [esi]
  414632:	add    edx,edi
  414634:	ret    0x7a17
  414637:	iret   
  414638:	cmp    BYTE PTR [ebx-0x12],bl
  41463b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41463c:	popf   
  41463d:	push   esi
  41463e:	daa    
  41463f:	mov    ebx,0x1675e75f
  414644:	das    
  414645:	jno    0x4145c7
  414647:	jbe    0x4145ed
  414649:	jmp    0x5c99bf1c
  41464e:	xor    DWORD PTR [edi+0x43],esp
  414651:	xor    al,0x3b
  414653:	inc    esi
  414654:	pop    ds
  414655:	jb     0x414675
  414657:	repz mov dl,0x9
  41465a:	dec    esp
  41465b:	mov    cl,0xe6
  41465d:	and    BYTE PTR [ecx+0x68],0xb0
  414661:	push   esi
  414662:	mov    esp,0xd564d231
  414667:	mov    BYTE PTR [edi+ebp*4+0x2a6a66e],ch
  41466e:	push   ecx
  41466f:	jmp    0x414683
  414671:	je     0x4146ca
  414673:	xchg   ebx,eax
  414674:	icebp  
  414675:	push   0x6ab760d1
  41467a:	aas    
  41467b:	fdivrp st(4),st
  41467d:	inc    ecx
  41467e:	mov    dh,0xdf
  414680:	mov    ah,0x89
  414682:	push   edi
  414683:	sub    ch,BYTE PTR [edx-0x4e]
  414686:	cwde   
  414687:	jnp    0x41460e
  414689:	mov    dl,0x4
  41468b:	ja     0x4146b5
  41468d:	pop    ebx
  41468e:	add    BYTE PTR [ebp+esi*1-0x43c714a1],dh
  414695:	push   edx
  414696:	stc    
  414697:	adc    ah,0xff
  41469a:	cmc    
  41469b:	ja     0x414641
  41469d:	mov    ds:0x2905359e,al
  4146a2:	xor    bh,BYTE PTR [eax-0x267861dc]
  4146a8:	push   edi
  4146a9:	lahf   
  4146aa:	add    bh,BYTE PTR [ebx+edi*2+0x75]
  4146ae:	loop   0x4146a8
  4146b0:	fcomp  QWORD PTR [ecx-0x4c]
  4146b3:	icebp  
  4146b4:	rcr    ah,cl
  4146b6:	inc    ebp
  4146b7:	jge    0x414716
  4146b9:	in     al,0xa3
  4146bb:	mov    eax,ds:0xc33e243b
  4146c0:	es push 0x91d24535
  4146c6:	jge    0x414695
  4146c8:	mov    edx,0xbde6718f
  4146cd:	loopne 0x4146b7
  4146cf:	sqrtps xmm5,XMMWORD PTR [edi+0x48]
  4146d3:	mov    ah,0x79
  4146d5:	mov    ebp,DWORD PTR [ebx-0x7e]
  4146d8:	pop    ebx
  4146d9:	aas    
  4146da:	test   DWORD PTR [edx+edx*4],esp
  4146dd:	int    0x1a
  4146df:	imul   ebp,DWORD PTR [esi-0x16],0x45
  4146e3:	cmp    DWORD PTR [ebp+ecx*1+0x45],0xf049aab2
  4146eb:	stc    
  4146ec:	adc    eax,DWORD PTR [ecx+0x70]
  4146ef:	ficomp DWORD PTR [ebp+0x65]
  4146f2:	or     DWORD PTR [esp+ebp*2],ecx
  4146f5:	xchg   edi,eax
  4146f6:	adc    al,0x22
  4146f8:	fdivr  DWORD PTR [edx]
  4146fa:	push   ebx
  4146fb:	int3   
  4146fc:	mov    dl,0xb9
  4146fe:	jecxz  0x414744
  414700:	repnz rcl BYTE PTR [esi],1
  414703:	cmp    eax,0x967c30bd
  414708:	pop    esp
  414709:	jo     0x414751
  41470b:	cmp    ah,BYTE PTR [edx]
  41470d:	repz sahf 
  41470f:	push   edi
  414710:	push   0x30
  414712:	es jno 0x4146ed
  414715:	and    edi,DWORD PTR [ebx-0x59aa957c]
  41471b:	ss jnp 0x414797
  41471e:	rcl    BYTE PTR [edi+0x6b],0x30
  414722:	int3   
  414723:	xor    al,BYTE PTR [edx-0x1c5f72a1]
  414729:	xchg   ebp,eax
  41472a:	int    0xc4
  41472c:	jmp    0xe2f4d9e3
  414731:	daa    
  414732:	pop    ds
  414733:	pop    DWORD PTR [esi+0x340d5b9e]
  414739:	scas   al,BYTE PTR es:[edi]
  41473a:	call   0x3f15:0xc0f68df2
  414741:	or     ecx,DWORD PTR [esi+0x674a8730]
  414747:	mov    dh,0x9b
  414749:	ins    DWORD PTR es:[edi],dx
  41474a:	adc    cl,bh
  41474c:	dec    ecx
  41474d:	mov    bh,0x7d
  41474f:	fisubr DWORD PTR [edi-0x3d]
  414752:	cmp    ah,BYTE PTR ds:0x730cd5cf
  414758:	push   ss
  414759:	xchg   BYTE PTR [esi+0x7e],bh
  41475c:	mov    bh,0x18
  41475e:	mov    esi,0x27e1573f
  414763:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414764:	aam    0xeb
  414766:	sti    
  414767:	inc    ebp
  414768:	push   ebx
  414769:	sti    
  41476a:	xor    ecx,DWORD PTR [ebx]
  41476c:	inc    edi
  41476d:	lahf   
  41476e:	rcr    BYTE PTR [esi+0x37d4df21],0xed
  414775:	cdq    
  414776:	xor    DWORD PTR [edx],esp
  414778:	xor    esi,esp
  41477a:	arpl   WORD PTR [eax],cx
  41477c:	out    0x91,eax
  41477e:	test   DWORD PTR [esi-0x3d896bc9],edx
  414784:	addr16 dec eax
  414786:	push   esi
  414787:	add    cl,0x17
  41478a:	retf   
  41478b:	out    dx,al
  41478c:	mov    cl,0x34
  41478e:	mov    esi,0xf65ef822
  414793:	pop    ss
  414794:	push   esp
  414795:	add    DWORD PTR [edx-0x7d73b81c],0x174c646
  41479f:	repnz cmp BYTE PTR fs:[esi],ch
  4147a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147a4:	pop    edi
  4147a5:	fs mov esi,0xa12eda37
  4147ab:	aad    0x37
  4147ad:	mov    esi,0xacb68f53
  4147b2:	jle    0x41476f
  4147b4:	inc    esp
  4147b5:	scas   al,BYTE PTR es:[edi]
  4147b6:	inc    esi
  4147b7:	ffreep st(0)
  4147b9:	ret    0x1c15
  4147bc:	xchg   DWORD PTR [ebx-0x1c],edx
  4147bf:	push   edx
  4147c0:	mov    ds:0xc733e32a,eax
  4147c5:	jg     0x414800
  4147c7:	adc    BYTE PTR [ebx-0x1a2ee772],0xa2
  4147ce:	xchg   esi,eax
  4147cf:	sub    bl,BYTE PTR [edi]
  4147d1:	push   ebx
  4147d2:	arpl   cx,si
  4147d4:	add    DWORD PTR [ecx+0x19],ebx
  4147d7:	ins    DWORD PTR es:[edi],dx
  4147d8:	push   esi
  4147d9:	or     ch,BYTE PTR [ecx-0x191f6fcc]
  4147df:	adc    eax,DWORD PTR [edi-0x45e575e4]
  4147e5:	mov    al,0x5
  4147e7:	sbb    bl,BYTE PTR [edi]
  4147e9:	or     eax,0xca467537
  4147ee:	pop    ebx
  4147ef:	test   DWORD PTR [ebx-0x74],edx
  4147f2:	mov    ds:0xe5f3a036,eax
  4147f7:	std    
  4147f8:	jmp    0x1e6f:0x61368a1f
  4147ff:	sbb    ebp,ebx
  414801:	inc    edx
  414802:	mov    al,0x39
  414804:	xlat   BYTE PTR ds:[ebx]
  414805:	nop
  414806:	rcr    BYTE PTR [esi-0x4020eb9e],0x83
  41480d:	scas   eax,DWORD PTR es:[edi]
  41480e:	and    DWORD PTR [ebx-0x338de248],edi
  414814:	adc    BYTE PTR [esi],ah
  414816:	pop    esi
  414817:	and    bh,0x50
  41481a:	inc    ebx
  41481b:	mov    bl,0x44
  41481d:	pop    edi
  41481e:	xchg   ebx,eax
  41481f:	sbb    BYTE PTR [edi+eiz*1-0x1e],al
  414823:	(bad)  
  414824:	bound  esp,QWORD PTR [esi]
  414826:	push   0xb84b60b2
  41482b:	or     edx,DWORD PTR [ebx]
  41482d:	loope  0x4147b8
  41482f:	and    bh,al
  414831:	sbb    DWORD PTR [edx-0x942b292],esi
  414837:	xchg   esi,eax
  414838:	ret    
  414839:	mov    al,0xe
  41483b:	inc    eax
  41483c:	jg     0x41486b
  41483e:	les    eax,FWORD PTR ds:0x391b
  414843:	sub    eax,esi
  414845:	cdq    
  414846:	lahf   
  414847:	cmp    ch,BYTE PTR [edx]
  414849:	pop    ecx
  41484a:	gs jae 0x414850
  41484d:	or     DWORD PTR [ecx],edi
  41484f:	dec    ebp
  414850:	mov    ah,al
  414852:	lea    ecx,[ebp-0x16]
  414855:	jl     0x4148bb
  414857:	in     eax,dx
  414858:	(bad)  
  414859:	mov    ch,0x5c
  41485b:	test   eax,0xbb580f44
  414860:	in     al,0x3d
  414862:	neg    DWORD PTR [esi+0x2]
  414865:	repnz scas eax,DWORD PTR es:[edi]
  414867:	lods   al,BYTE PTR ds:[esi]
  414868:	jne    0x414819
  41486a:	mov    ds:0x7d34e7a6,al
  41486f:	push   edx
  414870:	imul   ebx,DWORD PTR [ecx],0xffffffc9
  414873:	jo     0x414858
  414875:	cwde   
  414876:	int3   
  414877:	dec    ebp
  414878:	call   0x6f46:0x33b2ab60
  41487f:	daa    
  414880:	jno    0x4148c0
  414882:	aas    
  414883:	lods   eax,DWORD PTR ds:[esi]
  414884:	adc    dh,BYTE PTR [esi-0x6b]
  414887:	lahf   
  414888:	sub    edx,DWORD PTR [ebx]
  41488a:	ficomp DWORD PTR [esi+edx*1]
  41488d:	cs jo  0x4148de
  414890:	mov    BYTE PTR [esi+edx*1],ah
  414893:	xor    DWORD PTR [esi+0x75078ace],0x5f2b9f55
  41489d:	push   0x5e3db423
  4148a2:	(bad)  
  4148a3:	div    DWORD PTR [ebx]
  4148a5:	inc    ebx
  4148a6:	arpl   WORD PTR [edi-0x62],bp
  4148a9:	ss xor eax,0xeede7072
  4148af:	popf   
  4148b0:	in     eax,dx
  4148b1:	push   edi
  4148b2:	call   0xc20baee2
  4148b7:	inc    ecx
  4148b8:	pop    esp
  4148b9:	cmp    edi,DWORD PTR [edx-0x46109be3]
  4148bf:	inc    ebp
  4148c0:	pop    edi
  4148c1:	cld    
  4148c2:	cwde   
  4148c3:	fwait
  4148c4:	gs adc edx,esp
  4148c7:	(bad)  
  4148c8:	xor    bh,ah
  4148ca:	add    eax,0x9bf3f6c0
  4148cf:	icebp  
  4148d0:	push   ebx
  4148d1:	cli    
  4148d2:	cmp    eax,0x37ae3075
  4148d7:	shl    DWORD PTR [ecx+0x1f5b5f28],0xe
  4148de:	shr    BYTE PTR [esi],cl
  4148e0:	mov    BYTE PTR gs:[ecx+edx*1-0x76],cl
  4148e5:	fwait
  4148e6:	sub    eax,0x82e8826
  4148eb:	stos   DWORD PTR es:[edi],eax
  4148ec:	lahf   
  4148ed:	nop
  4148ee:	retf   0xfcd0
  4148f1:	scas   eax,DWORD PTR es:[edi]
  4148f2:	rol    DWORD PTR [ecx-0x72cf7c25],0xb3
  4148f9:	(bad)  
  4148fa:	je     0x4148ca
  4148fc:	ret    
  4148fd:	ins    DWORD PTR es:[edi],dx
  4148fe:	mov    al,ds:0xbe69efd
  414903:	fxch   st(7)
  414905:	bound  ecx,QWORD PTR [eax]
  414907:	xchg   edx,eax
  414908:	mov    al,0x22
  41490a:	sbb    al,0xcf
  41490c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41490d:	cdq    
  41490e:	fs sbb bh,bh
  414911:	xor    al,0xac
  414913:	enter  0xe87f,0xe7
  414917:	dec    edx
  414918:	sti    
  414919:	sti    
  41491a:	shl    DWORD PTR [eax+0x49],0x14
  41491e:	xor    DWORD PTR [edi],0xffffff96
  414921:	mov    DWORD PTR [ebx+0xbda1e8c],0x75468a94
  41492b:	add    bh,BYTE PTR ds:0xa6fb4879
  414931:	aad    0x6a
  414933:	fs test al,0x39
  414936:	jne    0x414971
  414938:	repnz mov ah,0xd4
  41493b:	push   eax
  41493c:	dec    eax
  41493d:	xor    dh,dl
  41493f:	or     BYTE PTR [ebp+0x1ab97296],al
  414945:	and    BYTE PTR [ecx-0xf],dl
  414948:	(bad)  
  414949:	dec    esi
  41494a:	sub    DWORD PTR [esi-0x6492a991],0xffffffc2
  414951:	sti    
  414952:	fs dec ecx
  414954:	xor    eax,DWORD PTR [edi-0x650e6ee]
  41495a:	add    al,0xfb
  41495c:	jg     0x414987
  41495e:	imul   ecx,DWORD PTR [ebx+0x49],0xffffffc0
  414962:	aam    0x12
  414964:	aaa    
  414965:	push   ebx
  414966:	xlat   BYTE PTR ds:[ebx]
  414967:	adc    DWORD PTR [ebx+edi*4],edi
  41496a:	in     eax,0x97
  41496c:	fucomip st,st(0)
  41496e:	das    
  41496f:	mov    bl,0x82
  414971:	pcmpeqb mm1,mm7
  414974:	mov    ds:0x4d2b799a,eax
  414979:	retf   
  41497a:	jmp    0xa3ba:0x34417543
  414981:	stos   BYTE PTR es:[edi],al
  414982:	push   eax
  414983:	or     bh,cl
  414985:	ds jns 0x4149fe
  414988:	push   edx
  414989:	mov    ch,BYTE PTR [edx-0x37]
  41498c:	add    dh,BYTE PTR [ebx*4+0x5a1ce3af]
  414993:	icebp  
  414994:	mov    ecx,0xe54201be
  414999:	call   0x3a33:0x8cb9986b
  4149a0:	xor    cl,BYTE PTR [ebx+0x41]
  4149a3:	and    ah,ah
  4149a5:	fs je  0x4149bc
  4149a8:	fs push ss
  4149aa:	mov    ch,0x40
  4149ac:	daa    
  4149ad:	mov    DWORD PTR [ebp+0x8],edx
  4149b0:	jmp    0x414a25
  4149b5:	mov    edx,DWORD PTR [ebp+0x8]
  4149b8:	mov    ebx,DWORD PTR [ebp-0x8]
  4149bb:	xor    edx,eax
  4149bd:	xor    ebx,eax
  4149bf:	sub    edx,ebx
  4149c1:	sub    edx,esi
  4149c3:	xor    edx,eax
  4149c5:	mov    DWORD PTR [ebp+0x8],edx
  4149c8:	mov    edx,DWORD PTR [ebp+0x8]
  4149cb:	mov    ebx,DWORD PTR [ebp-0x58]
  4149ce:	add    edx,0x5708e2
  4149d4:	imul   edx,ebx
  4149d7:	mov    DWORD PTR [ebp-0x58],edx
  4149da:	mov    edx,DWORD PTR [ebp+0x8]
  4149dd:	mov    ebx,DWORD PTR [ebp-0x54]
  4149e0:	add    edx,0x64f89c
  4149e6:	or     edx,ebx
  4149e8:	mov    DWORD PTR [ebp-0x54],edx
  4149eb:	mov    edx,DWORD PTR [ebp+0x8]
  4149ee:	mov    ebx,DWORD PTR [ebp-0x50]
  4149f1:	add    edx,ecx
  4149f3:	xor    edx,ebx
  4149f5:	mov    DWORD PTR [ebp-0x50],edx
  4149f8:	mov    edx,DWORD PTR [ebp+0x8]
  4149fb:	mov    ebx,DWORD PTR [ebp-0x4c]
  4149fe:	add    edx,edi
  414a00:	and    edx,ebx
  414a02:	mov    DWORD PTR [ebp-0x4c],edx
  414a05:	mov    edx,DWORD PTR [ebp+0x8]
  414a08:	mov    ebx,DWORD PTR [ebp-0x48]
  414a0b:	lea    edx,[ebx+edx*1+0x241fcdf]
  414a12:	mov    DWORD PTR [ebp-0x48],edx
  414a15:	mov    edx,DWORD PTR [ebp+0x8]
  414a18:	mov    ebx,0xfa5e1528
  414a1d:	sub    ebx,edx
  414a1f:	add    ebx,DWORD PTR [ebp-0x44]
  414a22:	mov    DWORD PTR [ebp-0x44],ebx
  414a25:	mov    edx,DWORD PTR [ebp+0x8]
  414a28:	xor    edx,eax
  414a2a:	add    edx,esi
  414a2c:	jne    0x4149b5
  414a32:	mov    edx,DWORD PTR [ebp-0x14]
  414a35:	mov    DWORD PTR [ebp+0x8],edx
  414a38:	jmp    0x414aad
  414a3d:	mov    edx,DWORD PTR [ebp+0x8]
  414a40:	mov    ebx,DWORD PTR [ebp-0x8]
  414a43:	xor    edx,eax
  414a45:	xor    ebx,eax
  414a47:	sub    edx,ebx
  414a49:	sub    edx,esi
  414a4b:	xor    edx,eax
  414a4d:	mov    DWORD PTR [ebp+0x8],edx
  414a50:	mov    edx,DWORD PTR [ebp+0x8]
  414a53:	mov    ebx,DWORD PTR [ebp-0x58]
  414a56:	add    edx,0x5708e2
  414a5c:	imul   edx,ebx
  414a5f:	mov    DWORD PTR [ebp-0x58],edx
  414a62:	mov    edx,DWORD PTR [ebp+0x8]
  414a65:	mov    ebx,DWORD PTR [ebp-0x54]
  414a68:	add    edx,0x64f89c
  414a6e:	or     edx,ebx
  414a70:	mov    DWORD PTR [ebp-0x54],edx
  414a73:	mov    edx,DWORD PTR [ebp+0x8]
  414a76:	mov    ebx,DWORD PTR [ebp-0x50]
  414a79:	add    edx,ecx
  414a7b:	xor    edx,ebx
  414a7d:	mov    DWORD PTR [ebp-0x50],edx
  414a80:	mov    edx,DWORD PTR [ebp+0x8]
  414a83:	mov    ebx,DWORD PTR [ebp-0x4c]
  414a86:	add    edx,edi
  414a88:	and    edx,ebx
  414a8a:	mov    DWORD PTR [ebp-0x4c],edx
  414a8d:	mov    edx,DWORD PTR [ebp+0x8]
  414a90:	mov    ebx,DWORD PTR [ebp-0x48]
  414a93:	lea    edx,[ebx+edx*1+0x241fcdf]
  414a9a:	mov    DWORD PTR [ebp-0x48],edx
  414a9d:	mov    edx,DWORD PTR [ebp+0x8]
  414aa0:	mov    ebx,0xfa5e1528
  414aa5:	sub    ebx,edx
  414aa7:	add    ebx,DWORD PTR [ebp-0x44]
  414aaa:	mov    DWORD PTR [ebp-0x44],ebx
  414aad:	mov    edx,DWORD PTR [ebp+0x8]
  414ab0:	xor    edx,eax
  414ab2:	add    edx,esi
  414ab4:	jne    0x414a3d
  414aba:	mov    edx,DWORD PTR [ebp-0x8]
  414abd:	mov    ebx,DWORD PTR [ebp-0xc]
  414ac0:	xor    edx,eax
  414ac2:	lea    edx,[edx+ebx*1+0x3272f3]
  414ac9:	mov    DWORD PTR [ebp-0xc],edx
  414acc:	mov    edx,DWORD PTR [ebp-0x10]
  414acf:	xor    edx,eax
  414ad1:	add    edx,esi
  414ad3:	jne    0x41224b
  414ad9:	jmp    0x41b68b
  414ade:	mov    ecx,DWORD PTR [ebp-0x14]
  414ae1:	mov    DWORD PTR [ebp+0x8],ecx
  414ae4:	jmp    0x414b5d
  414ae9:	mov    ecx,DWORD PTR [ebp+0x8]
  414aec:	mov    edx,DWORD PTR [ebp-0x8]
  414aef:	xor    ecx,eax
  414af1:	xor    edx,eax
  414af3:	sub    ecx,edx
  414af5:	sub    ecx,esi
  414af7:	xor    ecx,eax
  414af9:	mov    DWORD PTR [ebp+0x8],ecx
  414afc:	mov    ecx,DWORD PTR [ebp+0x8]
  414aff:	mov    edx,DWORD PTR [ebp-0x58]
  414b02:	add    ecx,0x5708e2
  414b08:	imul   ecx,edx
  414b0b:	mov    DWORD PTR [ebp-0x58],ecx
  414b0e:	mov    ecx,DWORD PTR [ebp+0x8]
  414b11:	mov    edx,DWORD PTR [ebp-0x54]
  414b14:	add    ecx,0x64f89c
  414b1a:	or     ecx,edx
  414b1c:	mov    DWORD PTR [ebp-0x54],ecx
  414b1f:	mov    ecx,DWORD PTR [ebp+0x8]
  414b22:	mov    edx,DWORD PTR [ebp-0x50]
  414b25:	add    ecx,0x242ebcd
  414b2b:	xor    ecx,edx
  414b2d:	mov    DWORD PTR [ebp-0x50],ecx
  414b30:	mov    ecx,DWORD PTR [ebp+0x8]
  414b33:	mov    edx,DWORD PTR [ebp-0x4c]
  414b36:	add    ecx,edi
  414b38:	and    ecx,edx
  414b3a:	mov    DWORD PTR [ebp-0x4c],ecx
  414b3d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b40:	mov    edx,DWORD PTR [ebp-0x48]
  414b43:	lea    ecx,[edx+ecx*1+0x241fcdf]
  414b4a:	mov    DWORD PTR [ebp-0x48],ecx
  414b4d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b50:	mov    edx,0xfa5e1528
  414b55:	sub    edx,ecx
  414b57:	add    edx,DWORD PTR [ebp-0x44]
  414b5a:	mov    DWORD PTR [ebp-0x44],edx
  414b5d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b60:	xor    ecx,eax
  414b62:	add    ecx,esi
  414b64:	jne    0x414ae9
  414b6a:	jmp    0x41b697
  414b6f:	mov    ecx,DWORD PTR [ebp+0x8]
  414b72:	mov    edx,DWORD PTR [ebp-0x8]
  414b75:	xor    ecx,eax
  414b77:	jmp    0x416f00
  414b7c:	repnz mov esi,esp
  414b7f:	repz add BYTE PTR [esi+eiz*8-0x19361778],0xd3
  414b88:	jne    0x414b5b
  414b8a:	lahf   
  414b8b:	je     0x414b8c
  414b8d:	add    BYTE PTR [bp+di+0x5c17],0x83
  414b93:	adc    DWORD PTR [ecx+0x6],0xfffffff0
  414b97:	(bad)  [ebx-0x2149736d]
  414b9d:	inc    edx
  414b9e:	sbb    dl,BYTE PTR [ecx]
  414ba0:	sar    ah,cl
  414ba2:	stos   BYTE PTR es:[edi],al
  414ba3:	lock (bad) 
  414ba5:	popa   
  414ba6:	(bad)  
  414ba7:	xor    ecx,DWORD PTR [edi-0x46]
  414baa:	push   eax
  414bab:	mov    ecx,edx
  414bad:	inc    edi
  414bae:	out    dx,eax
  414baf:	in     al,0x92
  414bb1:	rol    al,1
  414bb3:	pop    ebp
  414bb4:	or     eax,0xd81c535a
  414bb9:	test   BYTE PTR [esi+0x42e0c5ac],0xa6
  414bc0:	or     eax,0xda56ddea
  414bc5:	retf   0xa70f
  414bc8:	sub    eax,0x4017603f
  414bcd:	test   BYTE PTR [eax+ebx*4-0x5b],bl
  414bd1:	sub    BYTE PTR [eax+0x5c],ah
  414bd4:	repz pop ecx
  414bd6:	mov    ah,0x98
  414bd8:	retf   0xc010
  414bdb:	sbb    eax,0x69cbd2ee
  414be0:	mov    ch,0xae
  414be2:	inc    edx
  414be3:	and    BYTE PTR [eax-0x6b],bh
  414be6:	push   esi
  414be7:	add    ebx,DWORD PTR [ecx]
  414be9:	ins    DWORD PTR es:[edi],dx
  414bea:	xlat   BYTE PTR ds:[ebx]
  414beb:	ja     0x414b9c
  414bed:	test   eax,0x629ba038
  414bf2:	xor    edi,DWORD PTR [ebx+0x59]
  414bf5:	inc    al
  414bf7:	mov    bh,0x68
  414bf9:	or     esi,DWORD PTR ds:0x8619f154
  414bff:	cmp    al,0x3f
  414c01:	xor    esp,esi
  414c03:	cmp    al,0x16
  414c05:	xor    eax,0x43c65b20
  414c0a:	mov    BYTE PTR [edx],dl
  414c0c:	das    
  414c0d:	cdq    
  414c0e:	fld    DWORD PTR [ebp-0x55]
  414c11:	out    0x13,al
  414c13:	pusha  
  414c14:	(bad)  
  414c15:	lds    eax,FWORD PTR [eax+0x6c]
  414c18:	bound  esi,QWORD PTR [edx+0x4bc37a3c]
  414c1e:	sbb    ecx,DWORD PTR ds:0x71b43c41
  414c24:	xchg   BYTE PTR [esi-0x6721bc07],al
  414c2a:	xchg   BYTE PTR [esi],ch
  414c2c:	ja     0x414c2d
  414c2e:	iret   
  414c2f:	mov    al,0x2e
  414c31:	cmp    DWORD PTR [ebp+0x3a],ebp
  414c34:	add    DWORD PTR [ecx],eax
  414c36:	popa   
  414c37:	adc    eax,0xb6abb3a9
  414c3c:	jb     0x414bc4
  414c3e:	loopne 0x414c4f
  414c40:	dec    eax
  414c41:	cwde   
  414c42:	or     dl,BYTE PTR [edi]
  414c44:	mov    ebp,0x35a08c20
  414c49:	dec    ebx
  414c4a:	jp     0x414c83
  414c4c:	cld    
  414c4d:	shl    BYTE PTR [esi-0x6e],0x49
  414c51:	xchg   esp,eax
  414c52:	mov    eax,ds:0x6fcd9eee
  414c57:	mov    eax,0xd0f8d277
  414c5c:	xor    DWORD PTR [edx+0x5a],edi
  414c5f:	ret    0xa128
  414c62:	xor    BYTE PTR [edx-0x4c],0x9e
  414c66:	(bad)  
  414c67:	jmp    0xd7014786
  414c6c:	test   BYTE PTR [ecx+0x6f],al
  414c6f:	lds    ecx,FWORD PTR [esi+0x1db65ff0]
  414c75:	jle    0x414c7b
  414c77:	imul   ebp,DWORD PTR [esi],0x4c
  414c7a:	rcl    BYTE PTR [edi],0xd4
  414c7d:	adc    DWORD PTR [edx],0xcabd34f9
  414c83:	in     eax,0x7a
  414c85:	sbb    eax,0x1d78062b
  414c8a:	push   esi
  414c8b:	sub    al,0x33
  414c8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c8e:	xor    al,0x7e
  414c90:	lea    esp,[ebx]
  414c92:	dec    edi
  414c93:	mov    edx,0x3376d4e1
  414c98:	mov    al,0xf6
  414c9a:	inc    edx
  414c9b:	cmp    dl,BYTE PTR [ecx]
  414c9d:	adc    BYTE PTR [edi-0x3e],ch
  414ca0:	dec    ebp
  414ca1:	imul   ebx,esp,0x90a98da9
  414ca7:	cld    
  414ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ca9:	or     ebp,eax
  414cab:	sbb    esp,DWORD PTR [ebx-0x19491757]
  414cb1:	add    ebx,esi
  414cb3:	inc    edx
  414cb4:	cmp    eax,0x88ecbeab
  414cb9:	xchg   edi,eax
  414cba:	(bad)  
  414cbb:	jns    0x414d24
  414cbd:	sbb    al,0xa8
  414cbf:	or     bh,0xe7
  414cc2:	add    eax,0x2373db2d
  414cc7:	sub    DWORD PTR [ebp-0x654d0ba9],edx
  414ccd:	mov    eax,fs:0xa88dab99
  414cd3:	je     0x414d33
  414cd5:	mov    bh,0x7b
  414cd7:	pushf  
  414cd8:	inc    edx
  414cd9:	test   BYTE PTR [eax+eiz*4+0x51],dh
  414cdd:	clc    
  414cde:	ins    DWORD PTR es:[edi],dx
  414cdf:	ret    0xbb12
  414ce2:	pop    edi
  414ce3:	xchg   esi,eax
  414ce4:	out    dx,al
  414ce5:	dec    esp
  414ce6:	lea    edi,[edx+0x475b11d5]
  414cec:	jne    0x414c79
  414cee:	push   edi
  414cef:	push   0x1a0c7cfe
  414cf4:	(bad)  
  414cf5:	mov    eax,ds:0x6fb706ba
  414cfa:	jb     0x414c7c
  414cfc:	div    DWORD PTR [edi]
  414cfe:	les    edx,FWORD PTR [eax+0x77]
  414d01:	inc    DWORD PTR [edx+ebx*4]
  414d04:	fcomip st,st(2)
  414d06:	pop    ds
  414d07:	and    esi,DWORD PTR [ecx+0x33]
  414d0a:	mov    esi,0xe133e305
  414d0f:	mov    bh,0x20
  414d11:	lods   eax,DWORD PTR ds:[esi]
  414d12:	xor    al,0x37
  414d14:	(bad)  
  414d15:	mov    ah,0x9c
  414d17:	sub    edx,ebp
  414d19:	xor    dh,BYTE PTR [edx+0x0]
  414d1c:	ficom  WORD PTR [ecx-0x4f7d5aca]
  414d22:	fmul   QWORD PTR [edi-0x1eb6d13f]
  414d28:	jnp    0x414cf4
  414d2a:	add    dl,ch
  414d2c:	jmp    0x414d7b
  414d2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d2f:	sbb    eax,DWORD PTR [esi-0x54]
  414d32:	call   0x71347540
  414d37:	jno    0x414d70
  414d39:	xor    DWORD PTR [edi+0x65],ecx
  414d3c:	mov    eax,0xdb9b1ab7
  414d41:	mov    al,0xf3
  414d43:	jb     0x414cdd
  414d45:	pop    esp
  414d46:	sbb    BYTE PTR [ecx+eiz*2],0xa7
  414d4a:	xor    DWORD PTR [esp+edi*4+0x57984eeb],eax
  414d51:	cli    
  414d52:	jecxz  0x414dd0
  414d54:	repnz outs dx,DWORD PTR ds:[esi]
  414d56:	iret   
  414d57:	das    
  414d58:	mov    esp,0x36b9a3d8
  414d5d:	push   ebp
  414d5e:	mov    ds:0xf1d4a1f5,eax
  414d63:	fwait
  414d64:	cmp    DWORD PTR [ebp+0x1d7d0e72],edx
  414d6a:	and    BYTE PTR [ebp+eiz*2+0x449af343],0xd4
  414d72:	add    eax,0xfe33bc2d
  414d77:	outs   dx,BYTE PTR ds:[esi]
  414d78:	inc    esp
  414d79:	jbe    0x414d7d
  414d7b:	sbb    eax,0x87bcb66c
  414d80:	(bad)  
  414d81:	pop    ds
  414d82:	mov    bh,0x6b
  414d84:	inc    ecx
  414d85:	fisttp DWORD PTR [edx-0x5685461c]
  414d8b:	mov    edi,0xe39b9e66
  414d90:	fidivr WORD PTR [edx-0x3b9ecb9c]
  414d96:	sub    BYTE PTR [eax+0x56405e1e],bh
  414d9c:	jmp    0x414df5
  414d9e:	jnp    0x414d31
  414da0:	(bad)
  414da3:	daa    
  414da4:	fisub  DWORD PTR [ebp+0xbf4b804]
  414daa:	sub    ecx,DWORD PTR [edi]
  414dac:	aaa    
  414dad:	cs cli 
  414daf:	cvtps2pd xmm2,xmm6
  414db2:	mov    esp,DWORD PTR [esi+0x12]
  414db5:	lods   eax,DWORD PTR fs:[esi]
  414db7:	fwait
  414db8:	das    
  414db9:	or     BYTE PTR [ebp-0xbdf8dc],0x5
  414dc0:	frstor ds:[ebp+edx*1+0x79]
  414dc5:	in     al,0x43
  414dc7:	mov    fs,WORD PTR [eax+0x503ab076]
  414dcd:	mov    esi,0x886e0c08
  414dd2:	(bad)  
  414dd3:	es (bad) 
  414dd5:	in     al,0xcf
  414dd7:	xchg   edi,eax
  414dd8:	inc    ebp
  414dd9:	pop    esi
  414dda:	jp     0x414dcb
  414ddc:	rcr    BYTE PTR [edi],cl
  414dde:	sub    dh,BYTE PTR [ecx]
  414de0:	jmp    0x32c0:0x936150d
  414de7:	mov    edi,0xa3643ab4
  414dec:	jmp    0x414e6c
  414dee:	inc    BYTE PTR ds:0xc2b91606
  414df4:	out    dx,eax
  414df5:	jo     0x414d8a
  414df7:	pop    DWORD PTR [eax-0x45fa855c]
  414dfd:	loopne 0x414d83
  414dff:	iret   
  414e00:	xchg   esi,eax
  414e01:	and    eax,0xc015f757
  414e06:	fistp  QWORD PTR ds:0x8642921e
  414e0c:	fdiv   QWORD PTR [ebx+0x3e]
  414e0f:	pop    eax
  414e10:	scas   eax,DWORD PTR es:[edi]
  414e11:	push   ebx
  414e12:	mov    cl,BYTE PTR [eax]
  414e14:	mov    edx,0xc0b38c27
  414e19:	add    esp,0xffffff81
  414e1c:	push   edi
  414e1d:	cwde   
  414e1e:	jmp    0x9822d36e
  414e23:	std    
  414e24:	pusha  
  414e25:	dec    edx
  414e26:	je     0x414e34
  414e28:	mov    WORD PTR [eax],ss
  414e2a:	fisub  WORD PTR [esi+0x5]
  414e2d:	sub    eax,0x5e71da94
  414e32:	or     cl,BYTE PTR [edx+edi*4-0x53]
  414e36:	inc    ebx
  414e37:	push   cs
  414e38:	cmc    
  414e39:	imul   esp,DWORD PTR [ecx-0x365f4a99],0x5b616697
  414e43:	push   DWORD PTR [edi-0x52]
  414e46:	sub    ebx,ecx
  414e48:	and    BYTE PTR [esi-0x6154fe74],0xbb
  414e4f:	addr16 (bad) 
  414e51:	(bad)  
  414e53:	xchg   DWORD PTR [ecx-0x39d91583],ebx
  414e59:	mov    ds:0x40be4da2,eax
  414e5e:	push   eax
  414e5f:	ja     0x414e6a
  414e61:	es add al,0x8e
  414e64:	mov    dl,BYTE PTR [ecx+0x18]
  414e67:	je     0x414e16
  414e69:	dec    edi
  414e6a:	fwait
  414e6b:	mov    edx,0xca240680
  414e70:	idiv   esp
  414e72:	dec    esp
  414e73:	in     al,0xf5
  414e75:	mov    DWORD PTR [ebp+0x3f0a5b72],0x58184c95
  414e7f:	int3   
  414e80:	dec    ecx
  414e81:	test   BYTE PTR [edi],ch
  414e83:	mov    edi,0x3809cb45
  414e88:	aad    0x68
  414e8a:	push   es
  414e8b:	jno    0x414e27
  414e8d:	inc    ecx
  414e8e:	popf   
  414e8f:	mov    dh,0x30
  414e91:	ret    0x5692
  414e94:	sbb    cl,bl
  414e96:	xchg   ecx,eax
  414e97:	dec    esp
  414e98:	sahf   
  414e99:	loopne 0x414e2a
  414e9b:	sub    esi,DWORD PTR [ebp+0x56]
  414e9e:	iret   
  414e9f:	or     bl,BYTE PTR [ecx]
  414ea1:	and    BYTE PTR [eax],bl
  414ea3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ea4:	jp     0x414ed4
  414ea6:	pushf  
  414ea7:	add    esp,DWORD PTR [ebx]
  414ea9:	or     edx,DWORD PTR [eax+0x5b2cea1a]
  414eaf:	adc    BYTE PTR [eax+0x29],dh
  414eb2:	mov    dh,0xe1
  414eb4:	ror    BYTE PTR [eax+0x32],cl
  414eb7:	sbb    eax,0x2bd04f64
  414ebc:	inc    ebp
  414ebd:	mov    dl,0x40
  414ebf:	xchg   edi,eax
  414ec0:	xor    eax,DWORD PTR [ebx]
  414ec2:	lods   eax,DWORD PTR ds:[esi]
  414ec3:	jo     0x414f3e
  414ec5:	loopne 0x414f24
  414ec7:	dec    ecx
  414ec8:	mov    al,0xfe
  414eca:	xor    DWORD PTR [edi-0x28],edx
  414ecd:	enter  0x205c,0x1f
  414ed1:	(bad)  
  414ed2:	je     0x414efd
  414ed4:	mov    ch,0x2e
  414ed6:	sub    DWORD PTR [edx-0x765b8d3c],esi
  414edc:	(bad)  
  414ede:	rcl    BYTE PTR [edx+esi*4],0xb6
  414ee2:	loope  0x414ee9
  414ee4:	xchg   edi,eax
  414ee5:	mov    esi,0xda7ca6da
  414eea:	daa    
  414eeb:	mov    ecx,0x257d9013
  414ef0:	push   0x1baa52a6
  414ef5:	or     DWORD PTR [eax],edi
  414ef7:	jmp    0xbb70c071
  414efc:	add    eax,ecx
  414efe:	je     0x414ead
  414f00:	add    cl,BYTE PTR [ecx]
  414f02:	mov    ah,0xd5
  414f04:	in     al,0xc2
  414f06:	add    eax,0xd3b0d7a1
  414f0b:	xchg   esp,eax
  414f0c:	sahf   
  414f0d:	ja     0x414f8e
  414f0f:	stos   BYTE PTR es:[edi],al
  414f10:	mov    eax,ds:0x1215b83c
  414f15:	xchg   BYTE PTR [edx],ah
  414f17:	ret    0x5d46
  414f1a:	cmc    
  414f1b:	icebp  
  414f1c:	inc    eax
  414f1d:	push   esp
  414f1e:	lock stos BYTE PTR es:[edi],al
  414f20:	or     DWORD PTR [ecx],ecx
  414f22:	inc    eax
  414f23:	mov    edx,0x86f0738
  414f28:	inc    BYTE PTR [edi+0xb]
  414f2b:	lock stos DWORD PTR es:[edi],eax
  414f2d:	in     eax,dx
  414f2e:	cmp    BYTE PTR [eax-0x1bcebd1e],0xaf
  414f35:	dec    edx
  414f36:	mov    bl,bh
  414f38:	sub    dl,BYTE PTR [eax]
  414f3a:	or     ecx,DWORD PTR [ebx+0x382e32db]
  414f40:	nop
  414f41:	mov    ebp,0xb3cb1e0c
  414f46:	dec    ebp
  414f47:	js     0x414f5e
  414f49:	pop    edi
  414f4a:	push   cs
  414f4b:	mov    bh,0x72
  414f4d:	ins    DWORD PTR es:[edi],dx
  414f4e:	fisttp WORD PTR [eax+0x67925182]
  414f54:	lods   eax,DWORD PTR ds:[esi]
  414f55:	jl     0x414fa3
  414f57:	js     0x414f7b
  414f59:	rol    BYTE PTR [eax],cl
  414f5b:	pop    esi
  414f5c:	outs   dx,DWORD PTR ds:[esi]
  414f5d:	jle    0x414f26
  414f5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f60:	sub    BYTE PTR [edi],dh
  414f62:	sbb    BYTE PTR [esi],al
  414f64:	shl    esi,0x6e
  414f67:	xchg   DWORD PTR [edx+0x736cf5e9],edx
  414f6d:	xchg   ebx,eax
  414f6e:	out    dx,al
  414f6f:	loop   0x414fb0
  414f71:	(bad)  
  414f72:	shl    BYTE PTR [eax+0x43],1
  414f75:	test   ch,dh
  414f77:	(bad)  
  414f78:	pusha  
  414f79:	(bad)  
  414f7a:	dec    ebp
  414f7b:	test   BYTE PTR [ebx],bl
  414f7d:	ja     0x414f41
  414f7f:	imul   edi,edi,0x72cc2d46
  414f85:	jbe    0x414f09
  414f87:	loopne 0x414fcf
  414f89:	mov    ebp,0xb70ebd7a
  414f8e:	pop    edi
  414f8f:	loopne 0x414fa0
  414f91:	add    DWORD PTR [esi],ebp
  414f93:	dec    ecx
  414f94:	adc    esp,ebx
  414f96:	int3   
  414f97:	or     BYTE PTR [ecx-0x111c3865],al
  414f9d:	cmp    eax,0xd724b7b
  414fa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fa3:	rcl    esp,0x97
  414fa6:	jge    0x414ff4
  414fa8:	fistp  DWORD PTR [eax]
  414faa:	in     al,dx
  414fab:	xchg   edi,eax
  414fac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fae:	(bad)  
  414faf:	push   edi
  414fb0:	and    ebp,DWORD PTR [edi+ecx*4]
  414fb3:	sbb    al,0x91
  414fb5:	sub    al,0x6
  414fb7:	je     0x41502a
  414fb9:	(bad)  
  414fba:	jecxz  0x414f79
  414fbc:	cmc    
  414fbd:	adc    ch,BYTE PTR [ebp+esi*8-0x31]
  414fc1:	xchg   ebx,eax
  414fc2:	or     al,BYTE PTR [eax-0x1b]
  414fc5:	leave  
  414fc6:	pusha  
  414fc7:	leave  
  414fc8:	outs   dx,BYTE PTR ds:[esi]
  414fc9:	push   ss
  414fca:	bound  ebx,QWORD PTR [ebp-0xe599461]
  414fd0:	cdq    
  414fd1:	push   DWORD PTR [ebp-0x3d]
  414fd4:	jnp    0x415053
  414fd6:	(bad)  
  414fd7:	hlt    
  414fd8:	es test eax,0x8527a6f4
  414fde:	sub    eax,0xe76c4b6f
  414fe3:	aas    
  414fe4:	daa    
  414fe5:	rol    dh,0x93
  414fe8:	cmp    DWORD PTR [ebx-0x28ff8d00],0xffffffb8
  414fef:	lds    ecx,FWORD PTR [edi-0x20]
  414ff2:	and    BYTE PTR [eax+edx*4-0x11686d92],dl
  414ff9:	and    BYTE PTR [esi],ch
  414ffb:	mov    ch,dl
  414ffd:	dec    cl
  414fff:	pop    edx
  415000:	jns    0x415058
  415002:	xchg   ecx,eax
  415003:	loopne 0x415062
  415005:	pop    ds
  415006:	add    BYTE PTR [edx],ah
  415008:	xor    BYTE PTR [edi+0x7825b41e],ch
  41500e:	rol    DWORD PTR [eax+0x9],1
  415011:	dec    esi
  415012:	pop    edi
  415013:	mov    cl,0x5e
  415015:	(bad)  
  415016:	lea    ebx,[esi]
  415018:	mov    ah,0xd
  41501a:	rol    cl,1
  41501c:	or     dl,BYTE PTR ds:0x25b4b1c0
  415022:	sub    dl,al
  415024:	rcr    DWORD PTR [ecx+0x5c],0x1
  415028:	push   ecx
  415029:	xor    DWORD PTR [edi+ebx*8+0x56],0x8a111f21
  415031:	leave  
  415032:	inc    ebp
  415033:	cmp    al,0x86
  415035:	fbstp  TBYTE PTR [ebx+0x16]
  415038:	cmp    dl,bh
  41503a:	jmp    0x4689:0x9f94c4c5
  415041:	push   ds
  415042:	cmc    
  415043:	jmp    0x24a55505
  415048:	ret    0x7d56
  41504b:	mov    al,0x0
  41504d:	jno    0x415078
  41504f:	or     eax,0xbf2c67a8
  415054:	sub    eax,0x4bbb81d7
  415059:	popa   
  41505a:	jnp    0x415088
  41505c:	psrld  mm6,mm6
  41505f:	pop    ss
  415060:	es inc edi
  415062:	fld    DWORD PTR [ecx-0x1e95229e]
  415068:	cmc    
  415069:	es ret 
  41506b:	sub    al,0x38
  41506d:	mov    ds:0xb09b4f4,al
  415072:	les    ebp,FWORD PTR [eax]
  415074:	xchg   esi,eax
  415075:	sbb    al,0x2e
  415077:	in     al,dx
  415078:	dec    esp
  415079:	or     ah,BYTE PTR [ebp+0xb]
  41507c:	clc    
  41507d:	push   0x1a
  41507f:	cmp    edx,DWORD PTR [esp+edx*8]
  415082:	and    BYTE PTR [eax-0xc],cl
  415085:	int    0x24
  415087:	mov    bl,0x63
  415089:	scas   al,BYTE PTR es:[edi]
  41508a:	mov    dl,0x33
  41508c:	mov    bl,cl
  41508e:	or     esi,DWORD PTR [ebp-0x388a2800]
  415094:	inc    DWORD PTR [esi-0x3007f050]
  41509a:	dec    edx
  41509b:	jl     0x4150da
  41509d:	xchg   esi,eax
  41509e:	cmp    al,0x16
  4150a0:	mov    al,ds:0xaecbb995
  4150a5:	das    
  4150a6:	pop    ss
  4150a7:	test   al,0x52
  4150a9:	jp     0x4150a7
  4150ab:	fsubr  st(4),st
  4150ad:	jmp    0x263bf23d
  4150b2:	clc    
  4150b3:	push   0x6c
  4150b5:	jp     0x41508c
  4150b7:	mov    bh,0x40
  4150b9:	adc    eax,0xc1f57f16
  4150be:	dec    ecx
  4150bf:	jge    0x4150c9
  4150c1:	jno    0x415102
  4150c3:	dec    ecx
  4150c4:	adc    esi,DWORD PTR [ecx+eiz*4]
  4150c7:	daa    
  4150c8:	outs   dx,DWORD PTR ds:[esi]
  4150c9:	(bad)  
  4150cb:	mov    ds:0x2f72ae85,eax
  4150d0:	jno    0x4150b4
  4150d2:	out    0xae,al
  4150d4:	jbe    0x4150b1
  4150d6:	js     0x41512c
  4150d8:	test   eax,0x13b89b0b
  4150dd:	jae    0x4150de
  4150df:	(bad)  
  4150e0:	icebp  
  4150e1:	inc    eax
  4150e2:	or     cl,BYTE PTR [esi]
  4150e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150e5:	(bad)  
  4150e6:	retf   
  4150e7:	pushf  
  4150e8:	pop    esp
  4150e9:	push   esp
  4150ea:	dec    ebp
  4150eb:	test   DWORD PTR [esi+0x6b],edi
  4150ee:	mov    al,BYTE PTR [ecx+0x4d1d5491]
  4150f4:	(bad)  
  4150f6:	(bad)  [eax+eiz*4+0x5f406c4]
  4150fd:	aaa    
  4150fe:	lahf   
  4150ff:	xchg   edi,eax
  415100:	ss and eax,0x2c70d77f
  415106:	lea    ecx,[edi+0x65]
  415109:	ins    DWORD PTR es:[edi],dx
  41510a:	ins    BYTE PTR es:[edi],dx
  41510b:	xchg   ebp,eax
  41510c:	in     eax,0x87
  41510e:	inc    edx
  41510f:	and    al,0xe6
  415111:	mov    ds:0x8a42f51a,eax
  415116:	jo     0x4150f0
  415118:	cmp    BYTE PTR [edx-0x3126a86e],al
  41511e:	out    dx,eax
  41511f:	mov    al,ds:0xd3fc26e7
  415124:	mov    esp,0x2283ea84
  415129:	cmp    esp,ebp
  41512b:	in     al,dx
  41512c:	adc    al,0x4e
  41512e:	sbb    eax,0x686afd70
  415133:	dec    ecx
  415134:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415135:	xor    al,0x5c
  415137:	xchg   edi,eax
  415138:	add    dh,al
  41513a:	(bad)  
  41513b:	sub    ch,bl
  41513d:	mov    esp,0x4ca102c
  415142:	test   dh,al
  415144:	push   ebx
  415145:	adc    BYTE PTR [ecx],0xa7
  415148:	cld    
  415149:	retf   
  41514a:	xor    eax,0x269877d7
  41514f:	add    DWORD PTR [edx-0xf],edx
  415152:	sub    bl,BYTE PTR [ebp+0x3e89b1da]
  415158:	pop    es
  415159:	cmp    bh,BYTE PTR [edx+0x6da0a42a]
  41515f:	retf   
  415160:	pop    esi
  415161:	test   DWORD PTR [esi],0x877643be
  415167:	or     eax,ecx
  415169:	out    0x87,al
  41516b:	xor    esp,DWORD PTR ds:0x9f247e1a
  415171:	xchg   edx,eax
  415172:	fisttp WORD PTR [ebx-0x62]
  415175:	lahf   
  415176:	rcr    edx,1
  415178:	add    dh,BYTE PTR [edx-0x52]
  41517b:	jmp    DWORD PTR [ebp+0x34]
  41517e:	jmp    0x415104
  415180:	ja     0x4151dd
  415182:	add    al,BYTE PTR [eax+ebp*1-0x7898b44b]
  415189:	leave  
  41518a:	push   edx
  41518b:	cmp    ecx,DWORD PTR [esi-0x4b]
  41518e:	mov    esi,0x45c434ec
  415193:	enter  0xefc0,0x8b
  415197:	out    dx,eax
  415198:	fsub   QWORD PTR [edx-0x6f]
  41519b:	lods   al,BYTE PTR ds:[esi]
  41519c:	sbb    cl,BYTE PTR [esi+0x33ac9258]
  4151a2:	stos   BYTE PTR es:[edi],al
  4151a3:	lods   al,BYTE PTR ds:[esi]
  4151a4:	outs   dx,BYTE PTR ds:[esi]
  4151a5:	call   FWORD PTR ds:0x74f4e6e2
  4151ab:	mov    WORD PTR ds:0x5912f53b,fs
  4151b1:	mov    DWORD PTR [ecx+ecx*1-0x34],ebx
  4151b5:	sub    DWORD PTR [esi],0x61edf30e
  4151bb:	lea    eax,cs:[esi+edi*4+0x3c]
  4151c0:	xchg   DWORD PTR [esi+0x489f9d24],esp
  4151c6:	add    BYTE PTR [edi+0x34772083],al
  4151cc:	mov    eax,0x84171768
  4151d1:	sti    
  4151d2:	shr    BYTE PTR [ebp-0x35],cl
  4151d5:	and    BYTE PTR [ecx],ch
  4151d7:	mov    al,ds:0xf7614e3f
  4151dc:	dec    esp
  4151dd:	test   al,0xfe
  4151df:	sub    BYTE PTR [edi+ebx*2],ah
  4151e2:	stos   BYTE PTR es:[edi],al
  4151e3:	mov    bh,0x4f
  4151e5:	add    al,0xff
  4151e7:	and    eax,0xc07efe7
  4151ec:	mov    esi,0x98ed304f
  4151f1:	scas   al,BYTE PTR es:[edi]
  4151f2:	sbb    ebp,edi
  4151f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151f5:	and    ebp,DWORD PTR [edi-0x6f]
  4151f8:	mov    edx,0x275fba09
  4151fd:	dec    esp
  4151fe:	inc    edi
  4151ff:	mov    al,0x6f
  415201:	jbe    0x415243
  415203:	and    esp,edi
  415205:	push   es
  415206:	sar    DWORD PTR [eax],0xee
  415209:	je     0x415261
  41520b:	loopne 0x415206
  41520d:	in     al,0x6a
  41520f:	iret   
  415210:	pop    esi
  415211:	mov    cl,0x16
  415213:	aas    
  415214:	mov    ah,0x34
  415216:	push   edi
  415217:	aam    0xe8
  415219:	pop    ds
  41521a:	hlt    
  41521b:	inc    ebx
  41521c:	sti    
  41521d:	fst    st(3)
  41521f:	push   ds
  415220:	pop    DWORD PTR [ecx+0x50]
  415223:	loop   0x4151ce
  415225:	test   al,0x5e
  415227:	outs   dx,BYTE PTR ds:[esi]
  415228:	ror    DWORD PTR [ebp-0x75c66f4e],1
  41522e:	je     0x415243
  415230:	daa    
  415231:	(bad)  
  415232:	ins    BYTE PTR es:[edi],dx
  415233:	in     eax,dx
  415234:	outs   dx,DWORD PTR ds:[esi]
  415235:	arpl   WORD PTR [esi-0x76],di
  415238:	call   0x40383368
  41523d:	push   ss
  41523e:	jbe    0x4151d1
  415240:	call   0x5ba9:0x29ccb56
  415247:	clc    
  415248:	cdq    
  415249:	and    al,0xfd
  41524b:	xor    DWORD PTR [edi],ebx
  41524d:	sbb    edx,DWORD PTR ds:0xe45c55aa
  415253:	jmp    0x415220
  415255:	mov    ebx,0xf4a4c00c
  41525a:	fsubp  st(0),st
  41525c:	(bad)  
  41525d:	mov    ah,0xf2
  41525f:	or     edx,eax
  415261:	loope  0x415265
  415263:	jmp    0x6215:0x82069c0
  41526a:	push   eax
  41526b:	and    DWORD PTR [edx+0x12],esi
  41526e:	pop    ebp
  41526f:	ret    
  415270:	sub    DWORD PTR [esi+0x4762a908],0x235e739e
  41527a:	ret    0x736b
  41527d:	int3   
  41527e:	mov    cl,BYTE PTR [ebx+0x3167b515]
  415284:	sub    BYTE PTR [esi+0xa],dl
  415287:	xor    DWORD PTR [ecx-0x19],ebx
  41528a:	push   es
  41528b:	popa   
  41528c:	rol    DWORD PTR [edx+0x6f8219b1],0x22
  415293:	add    eax,0xcbd14dd
  415299:	fnstenv [esi]
  41529b:	cmc    
  41529c:	jmp    0xcf3a918b
  4152a1:	outs   dx,BYTE PTR ds:[esi]
  4152a2:	pop    edi
  4152a3:	fucomi st,st(0)
  4152a5:	mov    ds:0x8c3c3d12,al
  4152aa:	bound  ebx,QWORD PTR [edx+0x3d9a08b8]
  4152b0:	mov    ch,bl
  4152b2:	fnstsw WORD PTR [ebx+edx*2-0x2]
  4152b6:	sbb    edi,DWORD PTR [edx+0x13]
  4152b9:	in     eax,0x35
  4152bb:	xchg   esi,eax
  4152bc:	pop    eax
  4152bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152be:	xor    BYTE PTR [edx+0x4f],bh
  4152c1:	add    BYTE PTR [edi+ebx*2+0x6f661797],bl
  4152c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152c9:	scas   eax,DWORD PTR es:[edi]
  4152ca:	adc    DWORD PTR [edi+0x63bef799],0x3
  4152d1:	mov    DWORD PTR [ecx],ebp
  4152d3:	loopne 0x415302
  4152d5:	in     eax,dx
  4152d6:	xor    DWORD PTR [eax-0x59],esp
  4152d9:	test   BYTE PTR [esi-0x302d07f7],dl
  4152df:	jl     0x41529a
  4152e1:	enter  0xc74f,0x2f
  4152e5:	fsub   st,st(3)
  4152e7:	lods   al,BYTE PTR ds:[esi]
  4152e8:	fidivr DWORD PTR [ebx-0x61]
  4152eb:	push   ebx
  4152ec:	mov    ?,WORD PTR [esi+0x28]
  4152ef:	add    DWORD PTR [ecx+0x3f],0x3b662901
  4152f6:	mov    WORD PTR ds:0xbd670397,gs
  4152fc:	adc    edx,DWORD PTR [edi-0x23]
  4152ff:	(bad)  
  415300:	xchg   esi,eax
  415301:	jmp    0xa037:0xef3b4a2e
  415308:	iret   
  415309:	daa    
  41530a:	dec    ecx
  41530b:	push   es
  41530c:	int    0xf3
  41530e:	lock gs add eax,0x90733729
  415315:	jb     0x4152b3
  415317:	sub    DWORD PTR [edi],0xe621dfc7
  41531d:	sub    BYTE PTR [ebx+0x5],bh
  415320:	rol    DWORD PTR [edi+0x54963850],1
  415326:	imul   eax,DWORD PTR [eax+0x4e],0x85f26a36
  41532d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41532e:	pop    esp
  41532f:	sbb    BYTE PTR [esp+eiz*4+0x56c67c7c],bl
  415336:	pop    ebx
  415337:	inc    esp
  415338:	(bad)  
  415339:	idiv   BYTE PTR [edi-0x1b26564d]
  41533f:	push   ebx
  415340:	and    ebp,DWORD PTR [ebx-0x2d]
  415343:	cmp    al,0x9b
  415345:	add    al,0x51
  415347:	and    esi,DWORD PTR [edx+0x21]
  41534a:	leave  
  41534b:	dec    esp
  41534c:	jne    0x4152e5
  41534e:	out    0xc0,eax
  415350:	inc    edi
  415351:	pop    esp
  415352:	loope  0x41530d
  415354:	cmp    edx,DWORD PTR [ebp-0x3c81b519]
  41535a:	jb     0x415368
  41535c:	xchg   ecx,eax
  41535d:	sub    eax,0x2671d7e3
  415362:	or     ebp,DWORD PTR [edx-0x2c3f7cd4]
  415368:	ret    
  415369:	retf   
  41536a:	out    dx,eax
  41536b:	add    BYTE PTR [edi-0x667617ec],al
  415371:	repz loop 0x415383
  415374:	addr16 pop ecx
  415376:	nop
  415377:	retf   
  415378:	imul   ebp,ecx,0x38
  41537b:	test   BYTE PTR [esi+edx*1-0x68872c36],dl
  415382:	add    eax,0xec379a6
  415387:	mov    esp,0xd6184d36
  41538c:	mov    ebp,0xc8a10c7b
  415391:	repnz int3 
  415393:	nop
  415394:	ins    BYTE PTR es:[edi],dx
  415395:	add    BYTE PTR [edx+0x55],cl
  415398:	(bad)  
  415399:	into   
  41539a:	daa    
  41539b:	jbe    0x415366
  41539d:	and    DWORD PTR [edx-0x8dd5432],ebp
  4153a3:	jo     0x4153d7
  4153a5:	mov    BYTE PTR [ebx],ah
  4153a7:	inc    ebx
  4153a8:	adc    eax,0x1698bff5
  4153ad:	gs adc eax,0xd0d7158c
  4153b3:	add    al,0xf8
  4153b5:	mov    dl,0x8d
  4153b7:	aam    0xde
  4153b9:	push   edx
  4153ba:	push   0x18e1493c
  4153bf:	push   eax
  4153c0:	inc    ebx
  4153c1:	dec    esi
  4153c2:	inc    esp
  4153c3:	adc    esi,ebx
  4153c5:	add    al,0xa8
  4153c7:	pop    edx
  4153c8:	jno    0x415437
  4153ca:	stos   DWORD PTR es:[edi],eax
  4153cb:	jno    0x41542d
  4153cd:	mov    al,0x9b
  4153cf:	scas   al,BYTE PTR es:[edi]
  4153d0:	retf   
  4153d1:	xchg   dh,ch
  4153d3:	adc    DWORD PTR [eax+0x721cda],eax
  4153d9:	jl     0x415406
  4153db:	pop    ss
  4153dc:	and    DWORD PTR [eax+eax*1-0x47],0x1d
  4153e1:	int3   
  4153e2:	ins    BYTE PTR es:[edi],dx
  4153e3:	xchg   ecx,eax
  4153e4:	pop    ecx
  4153e5:	or     dh,BYTE PTR [edi]
  4153e7:	sub    al,0xa7
  4153e9:	imul   edx,ebx,0x5d
  4153ec:	shl    BYTE PTR [esi+0x39],1
  4153ef:	add    al,0x68
  4153f1:	int3   
  4153f2:	fcom   QWORD PTR [ecx]
  4153f4:	nop
  4153f5:	shl    DWORD PTR [bp-0x6d],1
  4153f9:	lods   eax,DWORD PTR ds:[esi]
  4153fa:	popa   
  4153fb:	(bad)  
  4153fc:	push   ds
  4153fd:	xchg   edi,eax
  4153fe:	ins    BYTE PTR es:[edi],dx
  4153ff:	stos   DWORD PTR es:[edi],eax
  415400:	ins    DWORD PTR es:[edi],dx
  415401:	sbb    BYTE PTR [esi-0x1eaff0e6],dh
  415407:	xchg   ebp,esi
  415409:	fdiv   DWORD PTR [edx+0x79]
  41540c:	sub    bl,ah
  41540e:	out    dx,eax
  41540f:	fsubrp st(1),st
  415411:	ror    DWORD PTR [edi-0x2d],1
  415414:	dec    edx
  415415:	sbb    al,0xa1
  415417:	pop    eax
  415418:	fld    DWORD PTR [ebp-0x58a2809b]
  41541e:	adc    BYTE PTR [edi+0x22],ch
  415421:	xlat   BYTE PTR ds:[ebx]
  415422:	and    BYTE PTR [edi-0x20],ch
  415425:	mov    bh,0xc9
  415427:	xchg   BYTE PTR [edi-0x177fff00],al
  41542d:	jecxz  0x41549e
  41542f:	jne    0x41548d
  415431:	lahf   
  415432:	pop    es
  415433:	test   al,0xfd
  415435:	hlt    
  415436:	jmp    ebp
  415438:	(bad)  
  415439:	fistp  WORD PTR [ebp+0x5e]
  41543c:	mov    ecx,0xb2a968c
  415441:	int    0xdd
  415443:	xlat   BYTE PTR ds:[ebx]
  415445:	jp     0x415456
  415447:	dec    eax
  415448:	inc    ebp
  415449:	fldlg2 
  41544b:	aam    0xce
  41544d:	cmp    eax,0x52087f1
  415452:	addr16 popf 
  415454:	(bad)  
  415456:	push   esi
  415457:	pusha  
  415458:	cmp    edi,ecx
  41545a:	mov    bh,0x17
  41545c:	mov    eax,0x5997925
  415461:	dec    esi
  415462:	aas    
  415463:	ja     0x41542f
  415465:	push   esp
  415466:	test   DWORD PTR gs:[ebx+0x6f],ecx
  41546a:	outs   dx,DWORD PTR ds:[esi]
  41546b:	mov    DWORD PTR [ebp-0x68],ebx
  41546e:	lods   eax,DWORD PTR ds:[esi]
  41546f:	push   0xe85d98b
  415474:	jg     0x415475
  415476:	jae    0x4154de
  415478:	add    dh,BYTE PTR [ebx+0x5c57fe50]
  41547e:	mov    ds:0x14d02e8d,al
  415483:	or     bh,cl
  415485:	push   0x17
  415487:	stos   BYTE PTR es:[edi],al
  415488:	pop    ecx
  415489:	dec    ebx
  41548a:	mov    bl,0x89
  41548c:	jmp    0x41543a
  41548e:	xlat   BYTE PTR ds:[ebx]
  41548f:	xchg   ecx,eax
  415490:	inc    esp
  415491:	cmp    eax,0xf39672e7
  415496:	scas   eax,DWORD PTR es:[edi]
  415497:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415498:	dec    esp
  415499:	push   ecx
  41549a:	xor    DWORD PTR [eax+esi*8+0x1483a7e5],edi
  4154a1:	mov    ?,WORD PTR [esi-0x15]
  4154a4:	add    eax,0x4e0b63be
  4154a9:	pop    es
  4154aa:	fsubr  QWORD PTR [ecx-0x48]
  4154ad:	pop    ss
  4154ae:	or     edx,eax
  4154b0:	push   esp
  4154b1:	arpl   WORD PTR [ebp+esi*8-0x76a583dd],di
  4154b8:	add    BYTE PTR [ebp-0x76],al
  4154bb:	add    DWORD PTR [esi-0x53],edx
  4154be:	sbb    al,0x5f
  4154c0:	imul   ebx,edx,0xffffffeb
  4154c3:	adc    ah,ah
  4154c5:	inc    edx
  4154c6:	dec    edx
  4154c7:	mov    edx,0xbab72979
  4154cc:	push   edx
  4154cd:	mov    al,ds:0x17340c5
  4154d2:	mov    DWORD PTR [edi-0x2faa9daa],edi
  4154d8:	in     eax,0x32
  4154da:	mov    esp,0x2310014f
  4154df:	inc    esp
  4154e0:	dec    esi
  4154e1:	mov    ch,0x76
  4154e3:	scas   eax,DWORD PTR es:[edi]
  4154e4:	mov    DWORD PTR [eax-0x5fe63fe5],ebp
  4154ea:	xchg   esi,eax
  4154eb:	adc    bh,BYTE PTR [ebx-0x69]
  4154ee:	and    eax,DWORD PTR ds:0x13f17214
  4154f4:	add    eax,0x8d9270d5
  4154f9:	add    BYTE PTR [ebp+ecx*8-0x37],ah
  4154fd:	dec    ecx
  4154fe:	into   
  4154ff:	bound  edx,QWORD PTR [esi]
  415501:	add    al,0x3b
  415503:	sahf   
  415504:	jmp    0x41550a
  415506:	mov    ebp,0x476accd8
  41550b:	push   eax
  41550c:	mov    ah,0x20
  41550e:	mov    esi,0x5ac89956
  415513:	fist   DWORD PTR gs:[ebx+eax*1]
  415517:	push   ecx
  415518:	fdivr  QWORD PTR [ebp-0x5ef74872]
  41551e:	xor    ch,ah
  415520:	xchg   ebp,eax
  415521:	retf   0xac6
  415524:	push   0xab567f3a
  415529:	les    esi,FWORD PTR [eax]
  41552b:	cmc    
  41552c:	and    esp,esp
  41552e:	frstor [esi-0x4a]
  415531:	sub    DWORD PTR [edx-0x18f3a8c0],0xffffffab
  415538:	sub    bh,bh
  41553a:	test   al,0xaa
  41553c:	xchg   ecx,eax
  41553d:	test   esi,ebx
  41553f:	adc    al,0x2b
  415541:	cli    
  415542:	lods   eax,DWORD PTR ds:[esi]
  415543:	(bad)  
  415545:	cmp    dh,al
  415547:	push   esi
  415548:	imul   DWORD PTR [edx-0x632bce4]
  41554e:	add    dl,0xe6
  415551:	xor    BYTE PTR [edx+0x30],ch
  415554:	cli    
  415555:	mov    ecx,0x1fb9d5ca
  41555a:	clc    
  41555b:	sbb    esi,DWORD PTR [edi-0x795352e8]
  415561:	shl    BYTE PTR [ebp-0x54],0x2c
  415565:	mov    dh,0xcb
  415567:	data16 fidivr WORD PTR [eax+0x1cf5b415]
  41556e:	and    eax,0xf5922c5
  415573:	cdq    
  415574:	fnstsw WORD PTR [ecx-0x6b]
  415577:	dec    edi
  415578:	bound  esi,QWORD PTR [edx+0x552e74ec]
  41557e:	popf   
  41557f:	mov    bl,0xa4
  415581:	ret    0x92d6
  415584:	sub    BYTE PTR [edi+0x6950d866],0x95
  41558b:	pusha  
  41558c:	cmp    eax,DWORD PTR [edx+0x1d9f67]
  415592:	push   cs
  415593:	and    esi,ebp
  415595:	test   al,0x14
  415597:	fbld   TBYTE PTR [eax]
  415599:	inc    ebp
  41559a:	loop   0x415601
  41559c:	mov    ecx,0x3a798f33
  4155a1:	sbb    DWORD PTR ds:0x69f40e04,ebx
  4155a7:	nop
  4155a8:	cmc    
  4155a9:	add    edi,DWORD PTR [ecx-0x79b1fd20]
  4155af:	daa    
  4155b0:	inc    edx
  4155b1:	fadd   QWORD PTR [esi+ecx*8]
  4155b4:	ret    
  4155b5:	sahf   
  4155b6:	icebp  
  4155b7:	push   0xff27e1a6
  4155bc:	fimul  WORD PTR [esi+eiz*2-0x1]
  4155c0:	xchg   esp,eax
  4155c1:	mov    WORD PTR [ebp+0x42],gs
  4155c4:	pop    ss
  4155c5:	jbe    0x4155a6
  4155c7:	fs mov al,0x72
  4155ca:	mov    ecx,0x45b4e820
  4155cf:	sbb    esp,ebp
  4155d1:	cli    
  4155d2:	xchg   ebx,eax
  4155d3:	adc    al,0xb5
  4155d5:	push   esp
  4155d6:	sbb    ah,BYTE PTR [eax-0x17fdb826]
  4155dc:	mov    edi,0x552f7200
  4155e1:	push   ebx
  4155e2:	pop    ebp
  4155e3:	sbb    dh,ch
  4155e5:	mov    eax,0xfaaeb6c
  4155ea:	arpl   WORD PTR [ebx+0xb],di
  4155ed:	std    
  4155ee:	or     al,0x29
  4155f0:	shl    BYTE PTR [eax],1
  4155f2:	stos   BYTE PTR es:[edi],al
  4155f3:	jbe    0x415674
  4155f5:	push   cs
  4155f6:	stc    
  4155f7:	jle    0x415651
  4155f9:	int3   
  4155fa:	jnp    0x4155ae
  4155fc:	pusha  
  4155fd:	int    0x1f
  4155ff:	pop    ebx
  415600:	jbe    0x4155fe
  415602:	repnz mov ecx,0x70c467d0
  415608:	int    0xb7
  41560a:	pop    ds
  41560b:	or     DWORD PTR ds:0xcf5c7ba2,0x16
  415612:	adc    bh,0xf
  415615:	stos   DWORD PTR es:[edi],eax
  415616:	test   eax,0x2ca58b27
  41561b:	inc    edi
  41561c:	lea    eax,[ecx]
  41561e:	adc    DWORD PTR [edi+0x51],ebp
  415621:	push   ebx
  415622:	repz mov ebx,0x20f99f21
  415628:	out    0x32,al
  41562a:	inc    edi
  41562b:	push   esp
  41562c:	es call 0xa335d778
  415632:	push   0x37
  415634:	jecxz  0x41567f
  415636:	sar    DWORD PTR [eax+0x70],1
  415639:	push   eax
  41563a:	xor    al,0xd6
  41563c:	jg     0x4156ac
  41563e:	push   0x4b
  415640:	cli    
  415641:	cmc    
  415642:	push   ds
  415643:	mov    ebx,edx
  415645:	sbb    BYTE PTR [edi],bh
  415647:	inc    edi
  415648:	dec    ebp
  415649:	jge    0x415617
  41564b:	test   BYTE PTR [edi-0x79],dh
  41564e:	popf   
  41564f:	in     eax,dx
  415650:	fisubr WORD PTR [eax+0x2d]
  415653:	das    
  415654:	inc    ecx
  415655:	xor    al,0x88
  415657:	shl    BYTE PTR [eax-0x2d],0x5
  41565b:	xchg   esp,eax
  41565c:	xchg   edi,eax
  41565d:	ss sub al,0xcd
  415660:	repnz mov ?,WORD PTR [ebx+edx*1+0x6b548c6f]
  415668:	popf   
  415669:	std    
  41566a:	push   edi
  41566b:	arpl   WORD PTR [ebx+0x257e9e8e],cx
  415671:	ins    DWORD PTR es:[edi],dx
  415672:	test   DWORD PTR [esi-0xf],eax
  415675:	mov    esi,0x20f65c20
  41567a:	sub    al,0xe6
  41567c:	pop    eax
  41567d:	cmp    BYTE PTR [ecx+0x7fc65f0],0x4
  415684:	adc    eax,eax
  415686:	cwde   
  415687:	or     DWORD PTR [eax+0x7dc7d588],ebp
  41568d:	and    BYTE PTR [ecx+0x7034bb64],ah
  415693:	jmp    0x4156ed
  415695:	rol    DWORD PTR [edi+0x1a631d8f],1
  41569b:	cmp    al,0x1b
  41569d:	pop    ds
  41569e:	jg     0x4156c5
  4156a0:	mov    ds:0xeeccd61a,al
  4156a5:	or     BYTE PTR ds:0x5048abbe,0x27
  4156ac:	sbb    al,0x24
  4156ae:	inc    esi
  4156af:	xor    al,0x1f
  4156b1:	push   eax
  4156b2:	adc    eax,0x67dd7b21
  4156b7:	ins    DWORD PTR es:[edi],dx
  4156b8:	fstp   st(3)
  4156ba:	mov    eax,0x39ca5131
  4156bf:	dec    ebx
  4156c0:	push   edx
  4156c1:	jae    0x4156bf
  4156c3:	aad    0x22
  4156c5:	neg    DWORD PTR [edx+0x5c16baac]
  4156cb:	cmp    BYTE PTR [esi+0x709f2961],bh
  4156d1:	fisttp QWORD PTR [esi-0x4a]
  4156d4:	push   es
  4156d5:	iret   
  4156d6:	and    edx,DWORD PTR [edi-0x3f87c1ae]
  4156dc:	xchg   edi,eax
  4156dd:	mov    WORD PTR [ebx+0x2],cx
  4156e1:	cld    
  4156e2:	fcom   DWORD PTR [edx-0x69677eac]
  4156e8:	xlat   BYTE PTR ds:[ebx]
  4156e9:	add    al,0x1f
  4156eb:	pop    es
  4156ec:	xchg   BYTE PTR [edi+0x37723b6b],al
  4156f2:	les    ecx,FWORD PTR [edi+0x53302008]
  4156f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156f9:	dec    edx
  4156fa:	xchg   edx,eax
  4156fb:	cwde   
  4156fc:	add    DWORD PTR [edx+ebx*1-0x70a5ed5c],esi
  415703:	cmp    al,0xd1
  415705:	jo     0x41570b
  415707:	repz mov al,BYTE PTR [esp+0x4a]
  41570c:	(bad)  
  41570d:	out    0x55,al
  41570f:	sbb    bh,BYTE PTR [esi+ebp*1]
  415712:	adc    eax,0xc28b925
  415717:	cmp    DWORD PTR [edi],ebx
  415719:	cmp    DWORD PTR [ebx+eax*4],0x5709c2d3
  415720:	retf   0x9eb1
  415723:	push   ebx
  415724:	ins    BYTE PTR es:[edi],dx
  415725:	mov    ch,ah
  415727:	xchg   ebp,eax
  415728:	icebp  
  415729:	cmp    al,0x51
  41572b:	cmp    al,0xac
  41572d:	adc    DWORD PTR [ebx],esp
  41572f:	push   es
  415730:	pop    ebx
  415731:	mov    ecx,cs
  415733:	in     al,dx
  415734:	mov    ds:0x15caf925,eax
  415739:	dec    edi
  41573a:	mov    DWORD PTR [ebx],ebp
  41573c:	ret    0xc0e0
  41573f:	add    ecx,ebx
  415741:	inc    esi
  415742:	adc    al,0xb
  415744:	cwde   
  415745:	ds aad 0x44
  415748:	es jmp 0x649f:0x49ec9d5e
  415750:	repnz add BYTE PTR [ebp-0x43],bh
  415754:	(bad)  
  415755:	into   
  415756:	lea    ecx,ds:0x3fba2509
  41575c:	ja     0x415795
  41575e:	jbe    0x415746
  415760:	jge    0x415781
  415762:	xchg   edx,eax
  415763:	dec    ebx
  415764:	jae    0x415746
  415766:	(bad)  
  415767:	shl    DWORD PTR [ebp-0x645d0fc2],cl
  41576d:	mov    ebp,0xce25bb65
  415772:	xchg   ebx,eax
  415773:	inc    ebx
  415774:	pusha  
  415775:	dec    eax
  415776:	inc    esp
  415777:	jbe    0x4157ac
  415779:	adc    esp,edi
  41577b:	int    0xde
  41577d:	xchg   ebp,eax
  41577e:	dec    edx
  41577f:	out    dx,eax
  415780:	call   FWORD PTR [esp+ebx*1]
  415783:	xchg   DWORD PTR [ebx-0x1b],esp
  415786:	mov    BYTE PTR [edi],dh
  415788:	mov    BYTE PTR [edi+0x43],bh
  41578b:	and    ah,BYTE PTR [eax]
  41578d:	xor    DWORD PTR fs:[edx-0x69],esp
  415791:	cmp    DWORD PTR [edx+0x5c],esi
  415794:	mov    ds:0x67e57c1c,al
  415799:	push   edx
  41579a:	leave  
  41579b:	xchg   esp,eax
  41579c:	mov    dl,cl
  41579e:	data16 int3 
  4157a0:	into   
  4157a1:	je     0x4157f8
  4157a3:	pusha  
  4157a4:	sbb    bh,BYTE PTR [ebx-0x5bd814e8]
  4157aa:	shr    BYTE PTR [edx],1
  4157ac:	lods   eax,DWORD PTR ds:[esi]
  4157ad:	mov    eax,ds:0xd0043bf9
  4157b2:	sar    ebx,1
  4157b4:	rol    BYTE PTR [ebp-0x51],0xd0
  4157b8:	jae    0x4157aa
  4157ba:	mov    edx,0xf18fed43
  4157bf:	pop    edx
  4157c0:	les    edx,FWORD PTR [ebp+0x5a]
  4157c3:	pop    ds
  4157c4:	sahf   
  4157c5:	lea    edx,ds:0x154f4f6
  4157cb:	mov    edi,0x8de24072
  4157d0:	mov    bh,0x47
  4157d2:	in     al,0x47
  4157d4:	scas   al,BYTE PTR es:[edi]
  4157d5:	pop    ss
  4157d6:	pop    edi
  4157d7:	test   eax,0xd39355c
  4157dc:	jnp    0x41581f
  4157de:	mov    ah,0x76
  4157e0:	jns    0x415837
  4157e2:	shl    BYTE PTR [ecx+0x692e7c48],1
  4157e8:	imul   edx,DWORD PTR [edi-0x80],0xffffffd4
  4157ec:	fs in  eax,dx
  4157ee:	arpl   WORD PTR [esi+0x709a92f8],cx
  4157f4:	push   ss
  4157f5:	fwait
  4157f6:	push   0x3149f21a
  4157fb:	repnz inc ebp
  4157fd:	mov    cl,BYTE PTR [ebp+0x11d0ef2e]
  415803:	dec    ebp
  415804:	push   ss
  415805:	cmp    DWORD PTR [ebp-0xb],edi
  415808:	sbb    dl,al
  41580a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41580b:	sub    DWORD PTR [eax+edx*1-0x77],eax
  41580f:	arpl   bx,cx
  415811:	add    ebp,DWORD PTR [edx+eax*1+0x56a41c1a]
  415818:	jg     0x415856
  41581a:	ins    DWORD PTR es:[edi],dx
  41581b:	mov    ch,0x95
  41581d:	shr    ebx,1
  41581f:	aam    0xf7
  415821:	xchg   edx,eax
  415822:	push   ecx
  415823:	cdq    
  415824:	jp     0x415890
  415826:	int    0xfb
  415828:	sub    DWORD PTR [edi+0x2755d1b7],0x56
  41582f:	popa   
  415830:	fcmovu st,st(1)
  415832:	stos   DWORD PTR es:[edi],eax
  415833:	ins    BYTE PTR es:[edi],dx
  415834:	hlt    
  415835:	push   cs
  415836:	sahf   
  415837:	dec    esi
  415838:	pushf  
  415839:	xchg   ecx,eax
  41583a:	leave  
  41583b:	push   edi
  41583c:	mov    eax,0xc0c971ce
  415841:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415842:	std    
  415843:	lahf   
  415844:	sbb    ch,ah
  415846:	cmc    
  415847:	imul   edx,DWORD PTR [edx+0x7bf53812],0x64
  41584e:	dec    ebp
  41584f:	hlt    
  415850:	(bad)  
  415851:	in     al,dx
  415852:	ja     0x41587f
  415854:	or     esp,DWORD PTR [edi+0x2cfbc85e]
  41585a:	aad    0x2c
  41585c:	or     ah,dh
  41585e:	in     eax,dx
  41585f:	push   edi
  415860:	ins    DWORD PTR es:[edi],dx
  415861:	call   FWORD PTR [esi-0x3b]
  415864:	sub    DWORD PTR [eax-0x4578303a],0x1
  41586b:	sbb    eax,0x35a3b167
  415870:	xor    DWORD PTR [edx-0x64],edi
  415873:	pop    ebx
  415874:	jg     0x4158eb
  415876:	cwde   
  415877:	inc    ecx
  415878:	cmc    
  415879:	push   cs
  41587a:	xor    BYTE PTR [ebx],al
  41587c:	fbld   TBYTE PTR [eax+0x4deb129a]
  415882:	and    eax,0xcf7cc72f
  415887:	or     eax,0x6658e830
  41588c:	add    BYTE PTR [edi-0x1daba2c0],ch
  415892:	es test al,0x61
  415895:	mov    ds:0xc259b33,al
  41589a:	cmp    BYTE PTR [ecx+ecx*4+0x21ce05df],0x34
  4158a2:	shr    ebx,cl
  4158a4:	mov    ch,0xaf
  4158a6:	iret   
  4158a7:	mov    ecx,0x9eaf11b4
  4158ac:	(bad)  
  4158ad:	mov    ecx,0x76b4cf0d
  4158b2:	cmc    
  4158b3:	adc    eax,0xb51f4350
  4158b8:	icebp  
  4158b9:	ror    dh,1
  4158bb:	out    dx,al
  4158bc:	ja     0x415876
  4158be:	add    edi,edi
  4158c0:	mov    ah,0x4c
  4158c2:	int3   
  4158c3:	(bad)  
  4158c4:	in     eax,0x20
  4158c6:	(bad)  
  4158c7:	fsubr  QWORD PTR [ecx+0x380d34d8]
  4158cd:	sub    DWORD PTR [edi],0xec6520e4
  4158d3:	xor    al,0xfc
  4158d5:	cs jbe 0x41586b
  4158d8:	sub    ch,BYTE PTR [edi]
  4158da:	(bad)  
  4158db:	(bad)  
  4158dc:	adc    esp,ecx
  4158de:	xchg   DWORD PTR [ebp-0x53b2928],esp
  4158e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158e5:	jl     0x4158ab
  4158e7:	ret    0x8ef9
  4158ea:	adc    edi,DWORD PTR fs:0x9aa426b4
  4158f1:	in     al,0x37
  4158f3:	in     al,dx
  4158f4:	jbe    0x4158f4
  4158f6:	xchg   ecx,eax
  4158f7:	std    
  4158f8:	shl    DWORD PTR [ecx+0x2e],0xe5
  4158fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158fd:	xchg   edi,eax
  4158fe:	cmp    al,0x6e
  415900:	mov    ecx,0x4996026b
  415905:	out    0x5a,al
  415907:	add    DWORD PTR [ecx-0x7f952f4b],eax
  41590d:	fld    TBYTE PTR [ebp-0x5a]
  415910:	add    al,0xc5
  415912:	or     al,0x47
  415914:	mov    ds:0xf798f4d9,eax
  415919:	and    BYTE PTR [esi],0x3c
  41591c:	xor    BYTE PTR [ecx],dl
  41591e:	dec    ecx
  41591f:	mov    eax,eax
  415921:	inc    ebx
  415922:	cmp    eax,edx
  415924:	bound  esp,QWORD PTR [edx]
  415926:	(bad)  
  415927:	mov    bh,0x9f
  415929:	lods   al,BYTE PTR ds:[esi]
  41592a:	mov    cl,0x9c
  41592c:	mov    ebp,0xaba6093d
  415931:	inc    eax
  415932:	adc    esi,DWORD PTR [edi]
  415934:	push   ecx
  415935:	adc    al,0x9e
  415937:	pop    es
  415938:	jne    0x415991
  41593a:	mov    ah,0x2b
  41593c:	shl    DWORD PTR [ebp-0x36469789],0x42
  415943:	loop   0x4158f6
  415945:	jno    0x4158dd
  415947:	pop    ds
  415948:	ins    BYTE PTR es:[edi],dx
  415949:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41594a:	scas   al,BYTE PTR es:[edi]
  41594b:	repz cmp DWORD PTR [ebx],ecx
  41594e:	daa    
  41594f:	int    0x56
  415951:	adc    al,0x48
  415953:	or     bl,BYTE PTR [ecx-0x7dcd64b6]
  415959:	sbb    edi,DWORD PTR [ebx+0x5e57cfde]
  41595f:	inc    esp
  415960:	push   es
  415961:	pop    eax
  415962:	xor    dl,BYTE PTR [esi-0x35]
  415965:	inc    esi
  415966:	icebp  
  415967:	adc    ch,al
  415969:	mov    ecx,0xf426a183
  41596e:	sbb    dh,BYTE PTR [ebp+0x10]
  415971:	popa   
  415972:	sahf   
  415973:	sahf   
  415974:	pop    edi
  415975:	xor    edi,DWORD PTR [ecx]
  415977:	jmp    0x415935
  415979:	sar    ebx,0xb
  41597c:	arpl   bp,bp
  41597e:	gs pop eax
  415980:	ret    
  415981:	(bad)  
  415982:	ds leave 
  415984:	jg     0x415932
  415986:	(bad)  
  415987:	loopne 0x4159b1
  415989:	je     0x415928
  41598b:	leave  
  41598c:	pop    esi
  41598d:	sub    DWORD PTR [eax],edi
  41598f:	mov    bl,0x35
  415991:	sbb    BYTE PTR [esi],0x38
  415994:	adc    DWORD PTR [edi],0xf5019204
  41599a:	adc    al,0x93
  41599c:	dec    DWORD PTR [edx+0x4cdfc631]
  4159a2:	scas   eax,DWORD PTR es:[edi]
  4159a3:	cld    
  4159a4:	sub    bl,BYTE PTR ds:0x2ea6d1de
  4159aa:	mov    esi,0x4ed1f38
  4159af:	ins    DWORD PTR es:[edi],dx
  4159b0:	cmp    bh,BYTE PTR [eax+0x4e5a701e]
  4159b6:	icebp  
  4159b7:	div    BYTE PTR [edx+ecx*1+0x1335409b]
  4159be:	mov    al,ds:0xdf2609cd
  4159c3:	arpl   WORD PTR [eax-0x6e],di
  4159c6:	xchg   esp,eax
  4159c7:	xchg   edx,eax
  4159c8:	dec    ebp
  4159c9:	mov    dl,0x52
  4159cb:	call   0x95b08d8
  4159d0:	aam    0x5b
  4159d2:	mov    cl,0x5d
  4159d4:	or     bh,BYTE PTR [ebx]
  4159d6:	mov    esp,0x1e5c6ed6
  4159db:	mov    edx,0xa5fb2614
  4159e0:	icebp  
  4159e1:	(bad)  
  4159e2:	pop    ebp
  4159e3:	pop    eax
  4159e4:	pop    eax
  4159e5:	jne    0x415985
  4159e7:	repnz pop esp
  4159e9:	ror    BYTE PTR [ecx-0x1f],cl
  4159ec:	hlt    
  4159ed:	pop    esp
  4159ee:	inc    ebx
  4159ef:	loopne 0x415989
  4159f1:	call   FWORD PTR [edx-0x5b]
  4159f4:	dec    edx
  4159f5:	rcr    dh,0x2
  4159f8:	fidiv  DWORD PTR [ebp+edx*8+0x4f1d8055]
  4159ff:	or     cl,0xf2
  415a02:	mov    ss,WORD PTR [edx-0x27]
  415a05:	mov    ebp,0xa0a6aac7
  415a0a:	mov    al,0xe8
  415a0c:	mov    al,0x20
  415a0e:	fsubr  st,st(7)
  415a10:	lock push ecx
  415a12:	cwde   
  415a13:	push   0xffffffe2
  415a15:	(bad)  
  415a16:	pop    ecx
  415a17:	ds push ebx
  415a19:	dec    eax
  415a1a:	sub    al,0x0
  415a1c:	and    al,0x38
  415a1e:	lahf   
  415a1f:	pop    ebp
  415a20:	cmp    ecx,ebp
  415a22:	leave  
  415a23:	mov    ecx,0x596d0910
  415a28:	mov    edi,0x27b7673c
  415a2d:	jnp    0x415a1b
  415a2f:	xor    ebp,DWORD PTR [edi]
  415a31:	jnp    0x415a88
  415a33:	nop
  415a34:	jno    0x415a79
  415a36:	scas   al,BYTE PTR es:[edi]
  415a37:	shr    edi,cl
  415a39:	jb     0x415a6b
  415a3b:	pop    ebx
  415a3c:	pop    ebx
  415a3d:	enter  0xb994,0xd6
  415a41:	(bad)  
  415a42:	ret    0x6d9
  415a45:	cld    
  415a46:	mov    gs,ebp
  415a48:	dec    edi
  415a49:	push   cs
  415a4a:	dec    esp
  415a4b:	je     0x415a86
  415a4d:	aad    0xd0
  415a4f:	mov    ebp,0x6f655eac
  415a54:	jno    0x415a21
  415a56:	pop    si
  415a58:	std    
  415a59:	sub    al,0x11
  415a5b:	rcr    BYTE PTR [edx+0x30],1
  415a5e:	push   0x4
  415a60:	mov    BYTE PTR [ebx+0x6f],bl
  415a63:	pop    ecx
  415a64:	dec    edi
  415a65:	xchg   ebp,eax
  415a66:	inc    ecx
  415a67:	pop    ebp
  415a68:	mov    cs,edi
  415a6a:	loope  0x415abd
  415a6c:	mov    eax,ds:0x58f33a45
  415a71:	test   eax,0xe9a65086
  415a76:	dec    ebp
  415a77:	clc    
  415a78:	cs mov DWORD PTR es:[edx-0x3f0a1e7e],ebp
  415a80:	dec    esp
  415a81:	mov    ebx,0x77146b20
  415a86:	retf   
  415a87:	inc    ecx
  415a88:	jecxz  0x415a37
  415a8a:	mov    bl,0x6a
  415a8c:	dec    esi
  415a8d:	jecxz  0x415ae1
  415a8f:	out    dx,eax
  415a90:	or     eax,0x211821ea
  415a95:	cmp    DWORD PTR [eax-0x2ec620bc],0xffffff83
  415a9c:	mov    esp,esp
  415a9e:	adc    edx,ebp
  415aa0:	mov    esi,0xbf3165c
  415aa5:	sbb    DWORD PTR [ebx-0x29],ebp
  415aa8:	hlt    
  415aa9:	xor    esp,esi
  415aab:	out    0x10,eax
  415aad:	adc    eax,0xece2058c
  415ab2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ab3:	fmul   st,st(7)
  415ab5:	gs into 
  415ab7:	cli    
  415ab8:	xor    BYTE PTR [edx-0x258014ab],ah
  415abe:	retf   0x4192
  415ac1:	jb     0x415a6a
  415ac3:	or     DWORD PTR [eax],esp
  415ac5:	mov    DWORD PTR [ebx+edi*8],0xbd6752d4
  415acc:	(bad)  
  415acd:	inc    esp
  415ace:	adc    eax,0x647f54c3
  415ad3:	or     ebp,DWORD PTR [esi]
  415ad5:	(bad)  
  415ad6:	jmp    0x4961:0x7a31f395
  415add:	and    DWORD PTR [esi+0x50],edx
  415ae0:	mov    ebp,0xfa082238
  415ae5:	lea    edx,[edi+0x76]
  415ae8:	mov    ds:0xa529721d,eax
  415aed:	mov    dl,0x9a
  415aef:	xor    al,0xcc
  415af1:	pop    edx
  415af2:	popf   
  415af3:	push   ss
  415af4:	mov    al,0x74
  415af6:	cmp    dl,BYTE PTR [ebp+0x20]
  415af9:	ins    DWORD PTR es:[edi],dx
  415afa:	xchg   DWORD PTR [esi+ebx*4],ecx
  415afd:	retf   0xf8af
  415b00:	out    0x78,eax
  415b02:	and    BYTE PTR [ebp-0x27],bh
  415b05:	jne    0x415aa0
  415b07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b08:	sbb    al,0x49
  415b0a:	inc    esp
  415b0b:	(bad)  
  415b0c:	fwait
  415b0d:	jle    0x415b2e
  415b0f:	add    al,0xf2
  415b11:	test   al,0x55
  415b13:	fist   DWORD PTR [ecx-0xd]
  415b16:	hlt    
  415b17:	popf   
  415b18:	outs   dx,DWORD PTR ds:[esi]
  415b19:	nop
  415b1a:	imul   ebp,eax,0x77
  415b1d:	jecxz  0x415b30
  415b1f:	xor    DWORD PTR [ebp+0x7c235d0a],ebx
  415b25:	xchg   esp,eax
  415b26:	mov    al,0xab
  415b28:	test   eax,0xadaf34f8
  415b2d:	push   edi
  415b2e:	add    esi,edi
  415b30:	into   
  415b31:	gs xchg ebx,eax
  415b33:	sub    DWORD PTR [edi+0x4b0ff2b],ecx
  415b39:	mov    eax,ds:0x90eaa422
  415b3e:	lods   al,BYTE PTR ds:[esi]
  415b3f:	mov    ch,0x96
  415b41:	imul   edi,DWORD PTR [esi],0xfb22b90b
  415b47:	rsqrtps xmm7,XMMWORD PTR [edi]
  415b4a:	mov    bl,0x9c
  415b4c:	xchg   BYTE PTR [eax+edi*1+0x20],ah
  415b50:	int    0xf
  415b52:	push   esi
  415b53:	cmc    
  415b54:	xor    eax,0xc678104
  415b59:	dec    edx
  415b5a:	mov    eax,0x3b0e475c
  415b5f:	jno    0x415bdf
  415b61:	sar    BYTE PTR [edi-0x6148858],cl
  415b67:	lds    esp,FWORD PTR [bx+0x1847]
  415b6c:	cwde   
  415b6d:	mov    bh,0x14
  415b6f:	nop
  415b70:	dec    ebp
  415b71:	enter  0xc9c4,0xf0
  415b75:	sub    BYTE PTR [esi-0xab851a7],dl
  415b7b:	push   esp
  415b7d:	mov    BYTE PTR [edi-0x121cbc3a],ch
  415b83:	sbb    eax,0xe3eb531b
  415b88:	xor    al,0xde
  415b8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b8b:	mov    dh,BYTE PTR [ecx-0x7b]
  415b8e:	repnz add eax,0xe14394bc
  415b94:	fbld   TBYTE PTR ds:0x4fa70340
  415b9a:	inc    edx
  415b9b:	(bad)  [ebx-0x64]
  415b9e:	loop   0x415b62
  415ba0:	je     0x415b9d
  415ba2:	dec    edi
  415ba3:	add    eax,0xe171742c
  415ba8:	lds    ebp,FWORD PTR [edx+eax*4]
  415bab:	mov    ecx,0xfb2bd5dd
  415bb0:	aaa    
  415bb1:	aam    0x54
  415bb3:	mov    al,ds:0xbedd8797
  415bb8:	jmp    0x1be0b9f9
  415bbd:	sbb    dh,0xf
  415bc0:	cld    
  415bc1:	pop    eax
  415bc2:	pop    es
  415bc3:	shr    ebp,cl
  415bc5:	dec    edx
  415bc6:	dec    edx
  415bc7:	ret    
  415bc8:	pop    ebx
  415bc9:	test   eax,0xbd72b271
  415bce:	push   ds
  415bcf:	push   0xffffffdb
  415bd1:	cmc    
  415bd2:	xor    edi,DWORD PTR ds:0x1fc18002
  415bd8:	aas    
  415bd9:	in     eax,0xf6
  415bdb:	pop    eax
  415bdc:	fist   DWORD PTR [ebx]
  415bde:	jl     0x415bc3
  415be0:	jl     0x415c23
  415be2:	cli    
  415be3:	lock fwait
  415be5:	mov    dl,0x96
  415be7:	xchg   edi,eax
  415be8:	das    
  415be9:	idiv   esp
  415beb:	lods   eax,DWORD PTR ds:[esi]
  415bec:	fs mov dh,0x39
  415bef:	jo     0x415c53
  415bf1:	push   edi
  415bf2:	rcr    BYTE PTR [eax+0x48],0xcb
  415bf6:	cmp    BYTE PTR [eax-0x42],0x97
  415bfa:	dec    edi
  415bfb:	xchg   ebp,eax
  415bfc:	mov    BYTE PTR [edx],ah
  415bfe:	adc    BYTE PTR [ebx-0x28],cl
  415c01:	mov    ecx,0xd8510db8
  415c06:	out    dx,al
  415c07:	cmp    ebp,ebp
  415c09:	inc    edx
  415c0a:	pop    ecx
  415c0b:	imul   edi,DWORD PTR [ecx+0x2ce0823a],0x50d78455
  415c15:	sbb    dh,BYTE PTR [edx-0x6]
  415c18:	cmp    eax,DWORD PTR [ebx+0x78]
  415c1b:	jo     0x415c3e
  415c1d:	fmul   DWORD PTR [edi+0xcbaf967]
  415c23:	cmp    eax,0xc5e1596c
  415c29:	popa   
  415c2a:	pop    edi
  415c2b:	jnp    0x415c02
  415c2d:	lahf   
  415c2e:	jnp    0x415bdc
  415c30:	xor    BYTE PTR [edi],bl
  415c32:	in     al,0x52
  415c34:	aam    0xea
  415c36:	ds and al,0xcd
  415c39:	dec    esp
  415c3a:	fbstp  TBYTE PTR [edi-0x2096ab0f]
  415c40:	out    0xee,al
  415c42:	mov    BYTE PTR es:[eax],al
  415c45:	cdq    
  415c46:	sub    al,al
  415c48:	test   DWORD PTR [ecx-0x4b],0xa8e04a7b
  415c4f:	out    0x49,al
  415c51:	pop    ebx
  415c52:	mov    esi,0x787bb69
  415c57:	dec    edi
  415c58:	mov    eax,0x3a2f3f9d
  415c5d:	in     al,dx
  415c5e:	xchg   edx,eax
  415c5f:	add    eax,0x8e1304aa
  415c64:	pop    ebx
  415c65:	xchg   ebp,eax
  415c66:	mov    bl,0xf1
  415c68:	jecxz  0x415c8b
  415c6a:	sub    al,0xae
  415c6c:	pop    ss
  415c6d:	adc    DWORD PTR [edx-0x2d90386c],ecx
  415c73:	iret   
  415c74:	popa   
  415c75:	xchg   esp,eax
  415c76:	mov    al,ds:0x66e704fb
  415c7b:	dec    BYTE PTR [ebx+0xd]
  415c7e:	jl     0x415c37
  415c80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c81:	retf   0x5a21
  415c84:	hlt    
  415c85:	aas    
  415c86:	push   esi
  415c87:	and    eax,0xd88dc31
  415c8c:	xchg   dl,ah
  415c8e:	xor    DWORD PTR [ebx+0x44],esi
  415c91:	inc    esi
  415c92:	sub    al,0xa0
  415c94:	fs gs ja 0x415d09
  415c98:	fcmovnb st,st(6)
  415c9a:	xor    BYTE PTR [ebp+ebx*1+0x6d],dh
  415c9e:	mov    edi,0xe25cf726
  415ca3:	cld    
  415ca4:	inc    edi
  415ca5:	cmp    eax,0x20b4b77e
  415caa:	jns    0x415c76
  415cac:	pusha  
  415cad:	fidivr DWORD PTR [edi]
  415caf:	rcl    BYTE PTR [ebp-0x7a8e170b],cl
  415cb5:	and    al,0x1
  415cb7:	(bad)  
  415cb9:	(bad)  
  415cba:	gs xchg ebx,eax
  415cbc:	xor    DWORD PTR [ebp-0x1bb61738],eax
  415cc2:	xor    bl,BYTE PTR [ebx+0xd]
  415cc5:	jae    0x415c96
  415cc7:	or     eax,0xf2198552
  415ccc:	iret   
  415ccd:	mov    ah,0xc4
  415ccf:	nop
  415cd0:	sahf   
  415cd1:	jbe    0x415cfb
  415cd3:	xchg   BYTE PTR [ebp-0x23639e44],bh
  415cd9:	mov    esi,0xa61ecf2a
  415cde:	(bad)  
  415cdf:	and    edx,DWORD PTR [edx-0x69]
  415ce2:	leave  
  415ce3:	in     al,dx
  415ce4:	xchg   ebx,eax
  415ce5:	xchg   ebx,eax
  415ce6:	fnstcw WORD PTR [esi]
  415ce8:	mov    eax,0xb514c8d3
  415ced:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cee:	mov    ch,0x32
  415cf0:	adc    edx,DWORD PTR [edi+ebx*8-0x68]
  415cf4:	push   ebp
  415cf5:	jmp    0x6fd01ef1
  415cfa:	pushf  
  415cfb:	dec    ecx
  415cfc:	inc    ecx
  415cfd:	shr    DWORD PTR [edx],cl
  415cff:	outs   dx,BYTE PTR ds:[esi]
  415d00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d01:	adc    DWORD PTR [edi],ebx
  415d03:	(bad)  
  415d04:	mov    cl,0x58
  415d06:	dec    ebp
  415d07:	push   ebx
  415d08:	cmp    al,0x82
  415d0a:	stos   DWORD PTR es:[edi],eax
  415d0b:	mov    ebp,0xfae39568
  415d10:	in     eax,dx
  415d11:	mov    edi,esi
  415d13:	mov    ds:0x335a19b3,eax
  415d18:	cmp    eax,0xedf015d0
  415d1d:	(bad)  
  415d1e:	hlt    
  415d1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d20:	jp     0x415cc2
  415d22:	call   0x1fc7c9ff
  415d27:	dec    esi
  415d28:	mov    ds:0x3ad537e9,eax
  415d2d:	pop    eax
  415d2e:	push   ss
  415d2f:	push   0xffffff85
  415d31:	mov    BYTE PTR [edi],bl
  415d33:	call   0xf522a09b
  415d38:	cmp    bl,BYTE PTR [eax]
  415d3a:	dec    esi
  415d3b:	data16 jle 0x415d09
  415d3e:	stos   BYTE PTR es:[edi],al
  415d3f:	pop    edx
  415d40:	in     eax,0xf3
  415d42:	sbb    ah,cl
  415d44:	aas    
  415d45:	adc    bh,BYTE PTR ds:[ebx-0x8]
  415d49:	push   0xffffffbd
  415d4b:	sub    esp,DWORD PTR [edi]
  415d4d:	mov    esi,0x2d198674
  415d52:	cmp    DWORD PTR [ebx+0x2969dd7f],esp
  415d58:	or     al,0xcf
  415d5a:	add    eax,0xe5712ce
  415d5f:	rol    BYTE PTR [ecx+0x4be0dd0b],cl
  415d65:	scas   al,BYTE PTR es:[edi]
  415d66:	sub    DWORD PTR [eax-0x493b5ab8],edi
  415d6c:	es test al,0x87
  415d6f:	jo     0x415d24
  415d71:	into   
  415d72:	fwait
  415d73:	out    dx,eax
  415d74:	imul   eax,DWORD PTR [esi+esi*2+0x51f45bf2],0xb453ed94
  415d7f:	xor    DWORD PTR ds:0x819378e4,0x76
  415d86:	xor    DWORD PTR [edx-0x4b],esp
  415d89:	and    al,0xf4
  415d8b:	bound  ebx,QWORD PTR [ecx]
  415d8d:	ret    
  415d8e:	mov    dh,0x79
  415d90:	dec    eax
  415d91:	aad    0x4d
  415d93:	stc    
  415d94:	or     DWORD PTR [ebp+edx*1-0x79],eax
  415d98:	aaa    
  415d99:	and    al,0x8d
  415d9b:	scas   eax,DWORD PTR es:[edi]
  415d9c:	je     0x415d67
  415d9e:	xor    BYTE PTR [ebp+0x6640a4db],dh
  415da4:	aad    0x25
  415da6:	jmp    FWORD PTR [ecx+edx*2+0x60]
  415daa:	inc    esi
  415dab:	call   0x61b6f22b
  415db0:	sbb    BYTE PTR [esp+ebx*4+0x59c69e12],bh
  415db7:	mov    bl,0xf0
  415db9:	push   eax
  415dba:	inc    ebp
  415dbb:	data16 jmp 0x415d9c
  415dbe:	add    eax,0x3253072
  415dc3:	dec    ebx
  415dc4:	jecxz  0x415df6
  415dc6:	cmp    DWORD PTR [ebp-0x47],esp
  415dc9:	int3   
  415dca:	pop    edx
  415dcb:	std    
  415dcc:	push   esi
  415dcd:	push   ecx
  415dce:	add    eax,0x5039325f
  415dd3:	xor    edx,edx
  415dd5:	pushf  
  415dd6:	and    BYTE PTR [edx+0xe04fa83],al
  415ddc:	cld    
  415ddd:	xchg   esi,eax
  415dde:	mov    bh,0x19
  415de0:	fisubr DWORD PTR [eax]
  415de2:	mov    ch,0x20
  415de4:	push   0xfedcc46c
  415de9:	dec    esi
  415dea:	mov    ebx,0x2335742a
  415def:	mov    DWORD PTR [eax+0x2],edx
  415df2:	sub    al,0xb3
  415df4:	cmp    ch,0xf6
  415df7:	push   ss
  415df8:	jmp    0x6747d594
  415dfd:	scas   eax,DWORD PTR es:[edi]
  415dfe:	pop    edi
  415dff:	addr16 popa 
  415e01:	push   0xffffff9f
  415e03:	loopne 0x415dfd
  415e05:	sub    al,0x31
  415e07:	sub    ch,BYTE PTR [ecx+0x28]
  415e0a:	pop    ss
  415e0b:	shr    DWORD PTR [ebp-0x4b],cl
  415e0e:	cmp    cl,0x97
  415e11:	jge    0x415e0e
  415e13:	fdivr  QWORD PTR [edi-0x65756c75]
  415e19:	imul   eax,DWORD PTR [edx],0xe5dbb774
  415e1f:	jp     0x415dae
  415e21:	ret    0x82a5
  415e24:	js     0x415df3
  415e26:	or     sp,cx
  415e29:	mov    edx,edi
  415e2b:	adc    eax,0xe366f3f5
  415e30:	pop    edx
  415e31:	es aaa 
  415e33:	mov    dh,0x93
  415e35:	jg     0x415dc1
  415e37:	jp     0x415e28
  415e39:	jae    0x415de2
  415e3b:	sub    ebx,DWORD PTR [ecx+0x4]
  415e3e:	(bad)  
  415e3f:	mov    bh,0xae
  415e41:	mov    cl,0xea
  415e43:	xchg   BYTE PTR [eax],dh
  415e45:	fst    QWORD PTR [eax+0x7bfc750a]
  415e4b:	cmp    esp,DWORD PTR [ebx-0x6e]
  415e4e:	cli    
  415e4f:	retf   0x7145
  415e52:	mov    esi,0x2d27d4da
  415e57:	mov    bh,0x4c
  415e59:	(bad)  
  415e5a:	and    esi,DWORD PTR [ecx+0x3b]
  415e5d:	pop    ebx
  415e5e:	sbb    BYTE PTR [edx-0x32253efa],al
  415e64:	xchg   ecx,esi
  415e66:	loop   0x415e46
  415e68:	jecxz  0x415eb8
  415e6a:	stos   DWORD PTR es:[edi],eax
  415e6b:	outs   dx,BYTE PTR ds:[esi]
  415e6c:	imul   BYTE PTR [edi]
  415e6e:	cmp    eax,0x348d7b63
  415e73:	add    bh,BYTE PTR [edi+0x5b]
  415e76:	mov    esi,0xdb42d616
  415e7b:	pop    esi
  415e7c:	jae    0x415eaa
  415e7e:	pop    esp
  415e7f:	ja     0x415eee
  415e81:	stc    
  415e82:	or     eax,0x5044b65d
  415e87:	in     eax,0x7d
  415e89:	xor    DWORD PTR [edx+0x47],esp
  415e8c:	pop    esp
  415e8d:	jns    0x415e30
  415e8f:	lock and BYTE PTR [ecx+0x62],0xa7
  415e94:	and    eax,esp
  415e96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e97:	inc    ecx
  415e98:	inc    eax
  415e99:	dec    ebx
  415e9a:	push   ecx
  415e9b:	mov    edi,esi
  415e9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e9e:	js     0x415e76
  415ea0:	pop    esp
  415ea1:	iret   
  415ea2:	inc    edi
  415ea3:	iret   
  415ea4:	add    BYTE PTR [esi-0x48],dl
  415ea7:	cmc    
  415ea8:	push   esi
  415ea9:	inc    ebp
  415eaa:	push   esp
  415eab:	xchg   esp,eax
  415eac:	ja     0x415e63
  415eae:	mov    esp,0xca999cc2
  415eb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415eb4:	push   DWORD PTR [esi+0x193c0267]
  415eba:	mov    eax,es:0x50c1f244
  415ec0:	repz mov al,0xa9
  415ec3:	and    BYTE PTR [eax+0x28],0xd2
  415ec7:	pop    edx
  415ec8:	sub    BYTE PTR [eax-0x1dd9aa2f],bl
  415ece:	daa    
  415ecf:	xor    bh,BYTE PTR [esi-0x57]
  415ed2:	inc    eax
  415ed3:	in     al,dx
  415ed4:	adc    ecx,0xffffffce
  415ed7:	imul   esp,DWORD PTR [edi],0x480f1ce9
  415edd:	mov    ds:0x51f834d4,eax
  415ee2:	scas   al,BYTE PTR es:[edi]
  415ee3:	std    
  415ee4:	push   ds
  415ee5:	mov    ds:0xe5c89cd0,eax
  415eea:	test   BYTE PTR [ecx-0x35002a62],ch
  415ef0:	hlt    
  415ef1:	adc    edx,DWORD PTR [edx+0x4a]
  415ef4:	(bad)  
  415ef5:	in     al,dx
  415ef6:	mov    eax,0xe013fd94
  415efb:	pushf  
  415efc:	jp     0x415e90
  415efe:	jae    0x415f4e
  415f00:	lahf   
  415f01:	test   eax,0x88946886
  415f06:	mov    edi,0x395f8271
  415f0b:	xor    cl,BYTE PTR [ecx-0x1f2d6b9c]
  415f11:	mov    esi,0xde0384b6
  415f16:	inc    esi
  415f17:	(bad)  
  415f18:	mov    esi,0xb32942b0
  415f1d:	dec    edi
  415f1e:	sub    eax,DWORD PTR [edx]
  415f20:	mov    dh,0xb3
  415f22:	call   0xcf1aa703
  415f27:	cmp    DWORD PTR [edx-0x32],edx
  415f2a:	repnz pop ebx
  415f2c:	sbb    al,0x2f
  415f2e:	mov    al,BYTE PTR [edi+0x226e1491]
  415f34:	xchg   edx,eax
  415f35:	stos   DWORD PTR es:[edi],eax
  415f36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f37:	retf   0xfcb3
  415f3a:	and    BYTE PTR [edx-0x49],ah
  415f3d:	pop    ebp
  415f3e:	mov    bl,0xd4
  415f40:	adc    esp,eax
  415f42:	les    ecx,FWORD PTR [eax+esi*8]
  415f45:	push   eax
  415f46:	sub    ah,BYTE PTR [ecx]
  415f48:	out    0x55,al
  415f4a:	sub    edi,ebp
  415f4c:	mov    cl,0x96
  415f4e:	mov    edx,?
  415f50:	xor    al,al
  415f52:	xor    edx,DWORD PTR [edx+0x5b997385]
  415f58:	mov    ds:0xa251eebb,al
  415f5d:	es cmp al,0xe0
  415f60:	xchg   ebx,eax
  415f61:	jno    0x415fb3
  415f63:	stc    
  415f64:	jg     0x415f9d
  415f66:	jge    0x415fcb
  415f68:	bound  esi,QWORD PTR [edi]
  415f6a:	jno    0x415fac
  415f6c:	add    DWORD PTR [ebx-0x37c7fbd2],edi
  415f72:	fs cli 
  415f74:	out    0xbb,al
  415f76:	or     al,0x7f
  415f78:	enter  0xe3b2,0xa2
  415f7c:	lahf   
  415f7d:	inc    edx
  415f7e:	arpl   WORD PTR [esi+esi*8-0x74630fc6],sp
  415f85:	push   ecx
  415f86:	mov    cl,0x78
  415f88:	ds (bad) 
  415f8b:	cmc    
  415f8c:	push   ebx
  415f8d:	jb     0x415fa9
  415f8f:	push   ecx
  415f90:	mov    cl,0xd6
  415f92:	add    BYTE PTR [esi+0x286e0b58],al
  415f98:	fs out 0xf8,al
  415f9b:	or     eax,0x327f1570
  415fa0:	imul   ecx,DWORD PTR [ebx-0x5f981a62],0xce8b3116
  415faa:	pushf  
  415fab:	sti    
  415fac:	add    edi,DWORD PTR [edi-0x1f]
  415faf:	shl    BYTE PTR [ebx],0x68
  415fb2:	mov    ds:0x64b6608e,al
  415fb7:	push   edi
  415fb8:	pop    ebp
  415fb9:	push   ss
  415fba:	stos   DWORD PTR es:[edi],eax
  415fbb:	dec    esi
  415fbc:	and    bl,dl
  415fbe:	inc    ecx
  415fbf:	xor    BYTE PTR [edi+0x2b01b19],dh
  415fc5:	arpl   WORD PTR [edi],di
  415fc7:	add    eax,0x1fd86d2c
  415fcc:	mov    dl,ah
  415fce:	imul   ebp,DWORD PTR [edx],0x13
  415fd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fd2:	sahf   
  415fd3:	jne    0x415fbb
  415fd5:	mov    esi,0x83293ec3
  415fda:	dec    edi
  415fdb:	leave  
  415fdc:	mov    BYTE PTR [ecx+esi*8-0x6b48c427],0x27
  415fe4:	and    al,0x8a
  415fe6:	in     eax,0x97
  415fe8:	adc    BYTE PTR [ecx],bh
  415fea:	pop    ebp
  415feb:	out    dx,eax
  415fec:	inc    edi
  415fed:	hlt    
  415fee:	js     0x415f9b
  415ff0:	loopne 0x415ff0
  415ff2:	ds inc ebp
  415ff4:	les    edx,FWORD PTR [ebp-0x3d90462f]
  415ffa:	xchg   esi,eax
  415ffb:	shr    DWORD PTR [edx-0x38],0x9d
  415fff:	cmp    DWORD PTR [eax],0x4d
  416002:	pop    esi
  416003:	retf   
  416004:	cmp    DWORD PTR [eax+edx*1-0x55],edx
  416008:	lods   al,BYTE PTR ds:[esi]
  416009:	jle    0x415ff2
  41600b:	lahf   
  41600c:	jae    0x416007
  41600e:	mov    ds:0xf6d2ca5a,eax
  416013:	in     eax,dx
  416014:	outs   dx,DWORD PTR ds:[esi]
  416015:	xchg   esi,eax
  416016:	rcl    BYTE PTR [eax+0x1bc89d82],0x4c
  41601d:	jecxz  0x415fe2
  41601f:	dec    ebp
  416020:	into   
  416021:	push   esp
  416022:	pop    es
  416023:	dec    eax
  416024:	nop
  416025:	adc    BYTE PTR [ecx-0x388575e3],bh
  41602b:	daa    
  41602c:	stos   BYTE PTR es:[edi],al
  41602d:	retf   
  41602e:	iret   
  41602f:	pop    ecx
  416030:	out    0xc5,eax
  416032:	loope  0x416017
  416034:	daa    
  416035:	enter  0xe1d9,0x23
  416039:	sub    DWORD PTR [ebx+0x6],esp
  41603c:	cmp    eax,0x5990dff
  416041:	pop    edi
  416042:	sub    ecx,esp
  416044:	or     ecx,DWORD PTR [eax]
  416046:	ret    
  416047:	int    0x68
  416049:	jp     0x415ff9
  41604b:	pop    esp
  41604c:	pushf  
  41604d:	fiadd  WORD PTR [ebx]
  41604f:	leave  
  416050:	cdq    
  416051:	mov    edi,0xf63235f0
  416056:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416057:	sbb    BYTE PTR [ebx+0x53b0ec9b],ch
  41605d:	(bad)
  416061:	pop    ds
  416062:	and    bh,BYTE PTR [esp+ebx*8+0x10]
  416066:	xor    al,0xcc
  416068:	stos   DWORD PTR es:[edi],eax
  416069:	push   DWORD PTR [edi+0x291aba7e]
  41606f:	ret    
  416070:	les    esi,FWORD PTR [esi]
  416072:	std    
  416073:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416074:	les    esp,FWORD PTR [edx]
  416076:	fcmovbe st,st(2)
  416078:	in     al,dx
  416079:	neg    bl
  41607b:	cli    
  41607c:	inc    ebx
  41607d:	dec    ecx
  41607e:	and    al,0xb5
  416080:	mov    edx,ebx
  416082:	mov    ch,0xad
  416084:	dec    edi
  416085:	mov    ds:0x61eea9b1,eax
  41608a:	fdivr  QWORD PTR ds:0x5a9512d0
  416090:	add    BYTE PTR [ebp+0x3bcdf726],0xfb
  416097:	dec    ecx
  416098:	std    
  416099:	ins    DWORD PTR es:[edi],dx
  41609a:	sub    cl,dl
  41609c:	dec    ecx
  41609d:	pop    edi
  41609e:	pop    ebx
  41609f:	add    esi,DWORD PTR [ecx-0x48137148]
  4160a5:	push   esp
  4160a6:	daa    
  4160a7:	(bad)  
  4160a8:	fdiv   DWORD PTR [ebx]
  4160aa:	mov    al,ds:0x3c221817
  4160af:	xchg   edx,eax
  4160b0:	sti    
  4160b1:	fwait
  4160b2:	sahf   
  4160b3:	add    edx,ebx
  4160b5:	call   0xb404:0x48b2887e
  4160bc:	idiv   cl
  4160be:	and    ah,ah
  4160c0:	icebp  
  4160c1:	cmc    
  4160c2:	mov    dl,0xdf
  4160c4:	out    0xcd,eax
  4160c6:	sbb    BYTE PTR [edx+0x48],ah
  4160c9:	in     al,dx
  4160ca:	push   edx
  4160cb:	pop    eax
  4160cc:	fld    DWORD PTR [esi-0x7e]
  4160cf:	mov    DWORD PTR [edi+0x63],ebx
  4160d2:	(bad)  
  4160d3:	cmp    bl,dh
  4160d5:	popa   
  4160d6:	xadd   BYTE PTR [ebx-0xe],dl
  4160da:	mov    eax,0x41829e3
  4160df:	sbb    ch,BYTE PTR [esi-0x58]
  4160e2:	ficom  WORD PTR [edi+0x16]
  4160e5:	nop
  4160e6:	xor    ah,BYTE PTR [esi-0x22]
  4160e9:	pop    es
  4160ea:	dec    eax
  4160eb:	xchg   ebp,eax
  4160ec:	or     eax,0xd5517d6a
  4160f1:	mov    ebx,DWORD PTR [esi+0x6f75ccf5]
  4160f7:	out    dx,al
  4160f8:	icebp  
  4160f9:	jle    0x416145
  4160fb:	dec    edx
  4160fc:	and    ebp,DWORD PTR [ebx-0x5bd5a804]
  416102:	mov    cl,0x0
  416104:	cmp    eax,0x7cabf987
  416109:	push   es
  41610a:	push   ebx
  41610b:	push   ebp
  41610c:	push   ebp
  41610d:	xchg   esi,eax
  41610e:	add    eax,0x1c6b08d1
  416113:	mov    edx,0x7e02ae83
  416118:	pop    ss
  416119:	(bad)  
  41611b:	rol    DWORD PTR ds:0x1118d5c5,0x28
  416122:	imul   ebp,DWORD PTR [ebp+0x34],0xffffffde
  416126:	dec    edx
  416127:	adc    eax,0x2ea0739d
  41612c:	test   al,0xe3
  41612e:	push   eax
  41612f:	lods   al,BYTE PTR ds:[esi]
  416130:	(bad)  
  416131:	in     al,dx
  416132:	imul   ebx,DWORD PTR [ebx+0x78],0xffffffee
  416136:	aad    0x22
  416138:	mov    eax,0x1b69da90
  41613d:	fsub   st(4),st
  41613f:	aam    0xfc
  416141:	push   0x3b4cf8ee
  416146:	(bad)  
  416147:	mov    ebx,0x11f6ee89
  41614c:	mov    eax,ds:0x6bb03910
  416151:	pop    ebx
  416152:	mov    al,ds:0xf936a60f
  416157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416158:	lock out 0xa,eax
  41615b:	xlat   BYTE PTR ds:[ebx]
  41615c:	sub    edx,DWORD PTR [edx]
  41615e:	into   
  41615f:	pop    esp
  416160:	std    
  416161:	retf   0xd0d3
  416164:	rol    BYTE PTR [eax+0x6be4eabb],1
  41616a:	dec    ebp
  41616b:	sub    eax,0x3932960e
  416170:	es mov eax,0x65825dde
  416176:	mov    ecx,0x2d8ebbf5
  41617b:	dec    esp
  41617c:	lahf   
  41617d:	adc    al,BYTE PTR [eax]
  41617f:	ficomp DWORD PTR [esi-0x26]
  416182:	bound  ebp,QWORD PTR [edx+0x56]
  416185:	sbb    BYTE PTR [eax+0x4265d9e8],0x7c
  41618c:	fsubr  DWORD PTR [eax+0xf]
  41618f:	imul   ebx,DWORD PTR [ebp-0x14f2a183],0xffffffaa
  416196:	pop    ds
  416197:	aam    0xea
  416199:	mov    edx,0xddfc78bb
  41619e:	sbb    BYTE PTR [ecx-0xb],dh
  4161a1:	int3   
  4161a2:	lea    edx,[esi+0x7d0dfbff]
  4161a8:	loope  0x41620e
  4161aa:	sahf   
  4161ab:	dec    ebx
  4161ac:	ss jmp 0x639437f3
  4161b2:	xchg   edi,eax
  4161b3:	ds aaa 
  4161b5:	jbe    0x416218
  4161b7:	sbb    ecx,DWORD PTR [ebx+0x3c508c52]
  4161bd:	inc    ebx
  4161be:	inc    ebp
  4161bf:	adc    eax,0xe01a0482
  4161c4:	jp     0x4161ef
  4161c6:	mov    esi,0x98720a40
  4161cb:	(bad)  
  4161cc:	loopne 0x41616a
  4161ce:	arpl   ax,bp
  4161d0:	pop    ebp
  4161d1:	pop    edx
  4161d2:	rep stos BYTE PTR es:[edi],al
  4161d4:	and    DWORD PTR [ebx-0x35b59184],0x7
  4161db:	cmp    eax,0xbf655158
  4161e0:	dec    ebx
  4161e1:	mov    WORD PTR [eax+0x41],gs
  4161e4:	jb     0x41625d
  4161e6:	sbb    al,BYTE PTR [edx]
  4161e8:	jl     0x416172
  4161ea:	fs pop ebx
  4161ec:	dec    ebp
  4161ed:	repnz (bad) [ebx]
  4161f0:	or     DWORD PTR [edx],esi
  4161f2:	dec    edi
  4161f3:	mov    al,0x2b
  4161f5:	dec    eax
  4161f6:	vmovntdq YMMWORD PTR [ebx-0x48dcc709],ymm1
  4161fe:	jp     0x416260
  416200:	fwait
  416201:	shl    DWORD PTR [edi+0x61],1
  416204:	add    bl,dh
  416206:	aam    0xff
  416208:	jne    0x416218
  41620a:	data16 shr BYTE PTR [edi+eax*4-0x7c],0x28
  416210:	fst    DWORD PTR [edi+0x5a]
  416213:	cs shl esp,1
  416216:	fstp   TBYTE PTR [eax-0x6]
  416219:	mov    al,0x27
  41621b:	retf   0x375a
  41621e:	push   edx
  41621f:	stc    
  416220:	sub    eax,0xa24db59d
  416225:	inc    DWORD PTR [esi+0x101e03e3]
  41622b:	je     0x41621c
  41622d:	mov    WORD PTR [edx+0xfa1c94f],ds
  416233:	adc    al,0x30
  416235:	(bad)  [eax]
  416237:	mov    al,0x9f
  416239:	mov    ecx,0x3f6ae41
  41623e:	lds    ecx,FWORD PTR cs:0x720ef345
  416245:	inc    ebx
  416246:	ins    BYTE PTR es:[edi],dx
  416247:	call   0xec37faf9
  41624c:	jl     0x41621f
  41624e:	movs   WORD PTR es:[edi],WORD PTR es:[esi]
  416251:	push   esi
  416252:	rol    BYTE PTR [edx-0x2a2680a0],1
  416258:	inc    edi
  416259:	daa    
  41625a:	xchg   DWORD PTR [edx],eax
  41625c:	pop    eax
  41625d:	cld    
  41625e:	jnp    0x41624d
  416260:	xor    eax,0xa4146dea
  416265:	and    al,0xe8
  416267:	aas    
  416268:	jb     0x4162ad
  41626a:	inc    ebx
  41626b:	inc    ebx
  41626c:	repnz mov esp,0x3ea60e42
  416272:	(bad)  
  416273:	std    
  416274:	psllq  mm3,QWORD PTR [eax]
  416277:	jp     0x41629c
  416279:	sbb    bh,BYTE PTR [esi-0x33]
  41627c:	mov    ch,0xd4
  41627e:	mov    bl,0x71
  416280:	loopne 0x41622d
  416282:	jecxz  0x4162f4
  416284:	sub    eax,0x4c2d9293
  416289:	mov    ebp,0xfcfe730d
  41628e:	cmp    BYTE PTR [ecx+0x20],ah
  416291:	pop    ecx
  416292:	jbe    0x4162cb
  416294:	pop    esi
  416295:	inc    eax
  416296:	pop    ds
  416297:	hlt    
  416298:	sbb    dl,BYTE PTR [ecx]
  41629a:	sar    esi,0x11
  41629d:	mov    cl,0x9a
  41629f:	mov    al,ds:0x2292012c
  4162a4:	adc    eax,0xe0556b6f
  4162a9:	rcl    esi,cl
  4162ab:	adc    al,0x81
  4162ad:	les    esp,FWORD PTR [esi+ebp*4]
  4162b0:	cmc    
  4162b1:	stc    
  4162b2:	ds (bad) 
  4162b4:	sub    BYTE PTR [edx],ch
  4162b6:	outs   dx,DWORD PTR ds:[esi]
  4162b7:	xchg   edi,eax
  4162b8:	pop    esi
  4162b9:	sbb    esi,DWORD PTR ds:[ecx-0x65bdbe31]
  4162c0:	dec    eax
  4162c1:	bound  esp,QWORD PTR [edx+0x626015e7]
  4162c7:	mov    DWORD PTR [edi+0x4875510f],0xee364df8
  4162d1:	(bad)  
  4162d2:	dec    ecx
  4162d3:	stos   BYTE PTR es:[edi],al
  4162d4:	mov    cl,0x22
  4162d6:	cli    
  4162d7:	call   0x25af5346
  4162dc:	sbb    eax,0x2d9938ab
  4162e1:	mov    ch,0x38
  4162e3:	mov    ds:0xecca3a63,eax
  4162e8:	pushf  
  4162e9:	push   ss
  4162ea:	mov    cl,0x27
  4162ec:	mov    bh,0x8b
  4162ee:	lahf   
  4162ef:	xchg   edi,eax
  4162f0:	sbb    DWORD PTR [edi+0x7afec5af],ecx
  4162f6:	imul   esi,DWORD PTR [ecx-0x7cfd81d2],0x6b
  4162fd:	test   DWORD PTR [esi+0x35],0x83d006f0
  416304:	sar    BYTE PTR [esp+eax*4-0x37],0xca
  416309:	iret   
  41630a:	cmp    eax,0xc533c615
  41630f:	jno    0x41633d
  416311:	xor    eax,0x2a40bfb8
  416316:	fld    DWORD PTR [edx+0x38]
  416319:	xor    eax,0x413b2dc9
  41631e:	nop
  41631f:	pop    eax
  416320:	(bad)  
  416322:	(bad)  
  416323:	imul   esp,eax,0x377e9604
  416329:	(bad)  
  41632a:	push   0x3b25634c
  41632f:	xor    al,0x50
  416331:	mov    BYTE PTR [ebp+eax*1+0x41345e40],ch
  416338:	push   esi
  416339:	jl     0x416348
  41633b:	ret    0x1dc0
  41633e:	xchg   edi,eax
  41633f:	or     eax,0x73521d58
  416344:	outs   dx,BYTE PTR ds:[esi]
  416345:	ins    DWORD PTR es:[edi],dx
  416346:	ins    DWORD PTR es:[edi],dx
  416347:	retf   
  416348:	sub    eax,0xe06ea235
  41634d:	fnstcw WORD PTR [ebx-0x7fe96221]
  416353:	jmp    0x23203fc3
  416358:	pop    edi
  416359:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41635a:	dec    eax
  41635b:	push   ebx
  41635c:	mov    ds:0x447c3877,eax
  416361:	or     eax,0xb20cae2f
  416366:	enter  0x4fbd,0x21
  41636a:	das    
  41636b:	push   edx
  41636c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41636d:	mov    edx,0xb24db552
  416372:	inc    esp
  416373:	inc    ecx
  416374:	dec    edx
  416375:	cmc    
  416376:	js     0x416307
  416378:	mov    edi,0xe668ca73
  41637d:	sar    DWORD PTR [edx+0x23],1
  416380:	add    BYTE PTR [eax+0x6819572f],dh
  416386:	outs   dx,BYTE PTR ds:[esi]
  416387:	nop
  416388:	int    0x5a
  41638a:	scas   al,BYTE PTR es:[edi]
  41638b:	mov    edi,0x7ff20edb
  416390:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416391:	test   ah,al
  416393:	mov    ebx,DWORD PTR [edi-0x45081dd]
  416399:	daa    
  41639a:	inc    ebp
  41639b:	lods   eax,DWORD PTR ds:[esi]
  41639c:	and    eax,0x9bcad7b
  4163a1:	cmp    BYTE PTR [edx+ebx*2-0x6c],al
  4163a5:	mov    dh,0x61
  4163a7:	inc    eax
  4163a8:	pop    eax
  4163a9:	sar    BYTE PTR [ebx],1
  4163ab:	jle    0x4163fa
  4163ad:	mov    ecx,0x8b5a7f26
  4163b2:	and    eax,0xeee56d4a
  4163b7:	stos   BYTE PTR es:[edi],al
  4163b8:	and    edi,DWORD PTR [edi-0x1d1a3bce]
  4163be:	loopne 0x41643c
  4163c0:	adc    eax,0x9dcd5dd9
  4163c5:	les    ebp,FWORD PTR [eax]
  4163c7:	lock and esp,esi
  4163ca:	arpl   WORD PTR [eax],ax
  4163cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163cd:	adc    al,0x1b
  4163cf:	push   cs
  4163d0:	mov    cl,0x13
  4163d2:	mov    eax,0x16ec4ae
  4163d7:	dec    ebx
  4163d8:	sub    esp,DWORD PTR [edx+0x4]
  4163db:	and    BYTE PTR [esi-0x5e1b7993],bh
  4163e1:	mul    esi
  4163e3:	push   ss
  4163e4:	loope  0x416386
  4163e6:	leave  
  4163e7:	ss ins BYTE PTR es:[edi],dx
  4163e9:	jge    0x416457
  4163eb:	sbb    al,0x94
  4163ed:	cmp    BYTE PTR [ebx-0x97da965],bl
  4163f3:	out    dx,eax
  4163f4:	inc    edi
  4163f5:	out    dx,al
  4163f6:	gs or  eax,0xe6316cc5
  4163fc:	sub    bh,BYTE PTR [ebx+0xb]
  4163ff:	mov    ah,0x19
  416401:	(bad)  [edi+0x7a]
  416404:	push   esp
  416405:	add    eax,0x9244a098
  41640a:	xor    edx,ebp
  41640c:	jns    0x416398
  41640e:	sar    DWORD PTR [esi],cl
  416410:	cmp    edx,DWORD PTR [esi]
  416412:	pop    es
  416413:	and    eax,0x5eda07b1
  416418:	push   esp
  416419:	scas   eax,DWORD PTR es:[edi]
  41641a:	sar    BYTE PTR [ecx-0x55189876],1
  416420:	bound  eax,QWORD PTR [edx-0x50]
  416423:	nop
  416424:	retf   0x55ed
  416427:	pop    ecx
  416428:	mov    bh,0xde
  41642a:	xchg   ebp,esi
  41642c:	aad    0x94
  41642e:	int    0xeb
  416430:	aaa    
  416431:	xchg   ebp,eax
  416432:	adc    BYTE PTR [esi],ah
  416434:	pop    esp
  416435:	shl    BYTE PTR [ebp-0x2705c8ba],cl
  41643b:	aas    
  41643c:	or     bh,BYTE PTR [ebx]
  41643e:	push   0xb397d387
  416443:	sub    al,0x6b
  416445:	lea    esi,[ebp+0x20]
  416448:	repnz pop es
  41644a:	push   es
  41644b:	push   ebp
  41644c:	mov    eax,DWORD PTR [edx*8-0x3ce1b631]
  416453:	hlt    
  416454:	imul   ebx,esi,0x80452b4d
  41645a:	cmp    eax,0xf7122fc0
  41645f:	stc    
  416460:	mov    esi,0x6fedb276
  416465:	inc    ecx
  416466:	push   ebp
  416467:	test   BYTE PTR [eax+eiz*1],dh
  41646a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41646b:	aam    0x62
  41646d:	xchg   sp,ax
  41646f:	daa    
  416470:	lea    esp,[edx-0x30]
  416473:	jae    0x416429
  416475:	pop    ax
  416477:	int3   
  416478:	or     dl,bh
  41647a:	js     0x4164d0
  41647c:	xchg   esp,eax
  41647d:	sub    BYTE PTR [ebp-0x7743c898],0x59
  416484:	push   ebp
  416485:	cmc    
  416486:	out    0x32,al
  416488:	rcl    DWORD PTR [ecx+0x2510f4b8],1
  41648e:	xor    eax,0x3ca7a8d
  416493:	push   cs
  416494:	sub    al,0xad
  416496:	or     bh,BYTE PTR [ecx+0x6d]
  416499:	and    ebp,DWORD PTR [ecx-0x5239335f]
  41649f:	xchg   edx,eax
  4164a0:	xchg   esp,eax
  4164a1:	retf   
  4164a2:	int    0x3f
  4164a4:	ins    BYTE PTR es:[edi],dx
  4164a5:	add    dh,BYTE PTR [ebx]
  4164a7:	stos   DWORD PTR es:[edi],eax
  4164a8:	or     BYTE PTR [esi+0x48],dh
  4164ab:	(bad)  
  4164ac:	stos   DWORD PTR es:[edi],eax
  4164ad:	dec    ecx
  4164ae:	imul   edx,ebp,0x1896f49
  4164b4:	hlt    
  4164b5:	mov    edi,ebp
  4164b7:	(bad)  
  4164b8:	mov    ds:0x516858e1,al
  4164bd:	sbb    ah,BYTE PTR [ebx-0x14]
  4164c0:	es gs out dx,al
  4164c3:	push   cs
  4164c4:	sub    esp,0x5b
  4164c7:	int    0xa8
  4164c9:	cmp    ebp,DWORD PTR [bx+di-0x7903]
  4164ce:	das    
  4164cf:	enter  0x9d3f,0x8a
  4164d3:	mov    esp,0x68a6d114
  4164d8:	add    BYTE PTR [eax-0x56],ch
  4164db:	mov    cl,0x70
  4164dd:	arpl   WORD PTR [ebp-0x3f77ff31],bx
  4164e3:	mov    eax,ds:0xfa0d8391
  4164e8:	outs   dx,DWORD PTR ds:[esi]
  4164e9:	push   ecx
  4164eb:	dec    ebx
  4164ec:	sub    dl,BYTE PTR [edi+0x72]
  4164ef:	(bad)  
  4164f0:	out    dx,eax
  4164f1:	xchg   ebx,eax
  4164f2:	jo     0x416525
  4164f4:	addr16 jbe 0x416552
  4164f7:	cmc    
  4164f8:	adc    DWORD PTR [ebx-0x46],0x76
  4164fc:	cld    
  4164fd:	ret    0xbb7c
  416500:	aas    
  416501:	fsubr  QWORD PTR [ebp-0x25]
  416504:	mov    al,ds:0x84259d66
  416509:	sub    BYTE PTR [eax+0x6d],al
  41650c:	jo     0x4164ab
  41650e:	xor    BYTE PTR [esp+eiz*2+0x2b557f4],ch
  416515:	and    BYTE PTR [ebx],dh
  416517:	cwde   
  416518:	jecxz  0x4164de
  41651a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41651b:	inc    eax
  41651c:	es lahf 
  41651e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41651f:	stc    
  416520:	xor    esi,DWORD PTR [ebp+0x5635f306]
  416526:	repz sbb DWORD PTR [ebp-0x4e9e1ee1],edi
  41652d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41652e:	dec    edi
  41652f:	gs mov cl,0xe4
  416532:	jle    0x41651c
  416534:	call   DWORD PTR [ebx+ebx*4-0x59]
  416538:	adc    BYTE PTR ds:0xeb44ca1b,0xe4
  41653f:	(bad)  
  416540:	fwait
  416541:	icebp  
  416542:	ins    BYTE PTR es:[edi],dx
  416543:	or     BYTE PTR [ebx+ebx*2-0x6ed08ec7],bh
  41654a:	cmova  eax,DWORD PTR [edx]
  41654d:	es (bad) 
  41654f:	jg     0x416509
  416551:	in     eax,dx
  416552:	push   cs
  416553:	leave  
  416554:	mov    cl,0x65
  416556:	inc    ecx
  416557:	fiadd  WORD PTR [ebp-0x7ebee580]
  41655d:	mov    cl,0xaa
  41655f:	push   ebp
  416560:	lock ss and eax,0x13689809
  416567:	ja     0x41659f
  416569:	pop    edi
  41656a:	xchg   ebx,eax
  41656b:	or     dh,BYTE PTR [ebp+0x1fe0052c]
  416571:	ja     0x416570
  416573:	or     bl,dl
  416575:	push   ss
  416576:	inc    ecx
  416577:	pusha  
  416578:	mov    ds:0x70a0788a,al
  41657d:	cli    
  41657e:	pop    ebx
  41657f:	pop    ds
  416580:	jmp    0x66a45e60
  416585:	mov    dh,0x47
  416587:	shl    DWORD PTR [esi],cl
  416589:	dec    edi
  41658a:	push   cs
  41658b:	icebp  
  41658c:	in     eax,dx
  41658d:	mov    dl,0x39
  41658f:	scas   al,BYTE PTR es:[edi]
  416590:	and    DWORD PTR ds:0x27c25fec,edi
  416596:	inc    edx
  416597:	jmp    0xebab:0xb691d9c
  41659e:	pop    es
  41659f:	mov    edi,0xf1877bcb
  4165a4:	fnsave [esi]
  4165a6:	ins    DWORD PTR es:[edi],dx
  4165a7:	jle    0x41653b
  4165a9:	mov    bh,0x17
  4165ab:	and    eax,0x7723b142
  4165b0:	lahf   
  4165b1:	lods   al,BYTE PTR ds:[esi]
  4165b2:	mov    esi,0xd15ba587
  4165b7:	out    dx,eax
  4165b8:	ja     0x416586
  4165ba:	mov    ds:0x7724330a,eax
  4165bf:	retf   
  4165c0:	jmp    0x4165f8
  4165c2:	xchg   edi,eax
  4165c3:	cmp    eax,0x2e0497b0
  4165c8:	sub    edx,DWORD PTR [eax-0x69]
  4165cb:	inc    ecx
  4165cc:	scas   eax,DWORD PTR es:[edi]
  4165cd:	ds call 0xb592:0x34586849
  4165d5:	mov    ecx,0x3213c799
  4165da:	into   
  4165db:	pop    ebx
  4165dc:	icebp  
  4165dd:	(bad)  
  4165de:	cmc    
  4165df:	lea    eax,[edi+ebx*1]
  4165e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165e3:	fld    DWORD PTR [ecx+0x77]
  4165e6:	jmp    0x4165fe
  4165e8:	inc    eax
  4165e9:	push   ss
  4165ea:	data16 and al,0x77
  4165ed:	out    0x7c,al
  4165ef:	(bad)  
  4165f0:	cmp    eax,0x6c1310bf
  4165f5:	cmp    edx,ebp
  4165f7:	jmp    0xc2817a5b
  4165fc:	xchg   dh,bh
  4165fe:	stos   DWORD PTR es:[edi],eax
  4165ff:	outs   dx,DWORD PTR ds:[esi]
  416600:	jno    0x416625
  416602:	out    dx,al
  416603:	faddp  st(1),st
  416605:	scas   eax,DWORD PTR es:[edi]
  416606:	sti    
  416607:	pop    eax
  416608:	out    0xa2,eax
  41660a:	xor    bh,BYTE PTR [esi]
  41660c:	(bad)  
  41660d:	shr    BYTE PTR [edi+0x31],0x4f
  416611:	jno    0x416687
  416613:	ds inc eax
  416615:	add    al,0x19
  416617:	mov    dl,al
  416619:	das    
  41661a:	jns    0x416684
  41661c:	(bad)  
  41661d:	shl    BYTE PTR [ebx-0x28d5f55d],cl
  416623:	cmp    ebx,DWORD PTR [ebx-0x31b2edd8]
  416629:	xchg   ebp,eax
  41662a:	ja     0x41664f
  41662c:	mov    ebp,0xed96546b
  416631:	into   
  416632:	in     eax,0xdd
  416634:	ins    DWORD PTR es:[edi],dx
  416635:	mov    es,WORD PTR [ecx+0x48d037a0]
  41663b:	mov    dl,BYTE PTR [edx]
  41663d:	iret   
  41663e:	xlat   BYTE PTR ds:[ebx]
  41663f:	mov    al,0x86
  416641:	or     al,0x30
  416643:	aam    0x89
  416645:	test   BYTE PTR [ebx+0x38],ah
  416648:	xor    DWORD PTR [edi+0x5d],0x43
  41664c:	outs   dx,BYTE PTR ds:[esi]
  41664d:	fidiv  WORD PTR [ecx-0x4c96ea4b]
  416653:	cdq    
  416654:	dec    ebx
  416655:	sbb    eax,0x6632a982
  41665a:	mov    BYTE PTR [edx],cl
  41665c:	pushf  
  41665d:	lods   eax,DWORD PTR ds:[esi]
  41665e:	pop    ebp
  41665f:	push   edi
  416660:	test   ah,cl
  416662:	fiadd  WORD PTR [ebx]
  416664:	mov    ss,WORD PTR [edi+ecx*8]
  416667:	sbb    eax,0xb4f7ae98
  41666c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41666d:	std    
  41666e:	mov    edx,0x41226cef
  416673:	ins    BYTE PTR es:[edi],dx
  416674:	inc    ebp
  416675:	lahf   
  416676:	fistp  WORD PTR ds:0xedda26ff
  41667c:	out    0xa9,eax
  41667e:	(bad)  
  416680:	and    DWORD PTR [ebp+0x1ed1a8db],esi
  416686:	pop    esp
  416687:	dec    edx
  416688:	call   0x45d635b
  41668d:	cdq    
  41668e:	dec    esi
  41668f:	or     DWORD PTR [edx],ecx
  416691:	cmp    DWORD PTR [ebp-0x70e2916c],0xffffffd3
  416698:	test   eax,0x2646bb70
  41669d:	stos   BYTE PTR es:[edi],al
  41669e:	jb     0x4166f2
  4166a0:	add    DWORD PTR [edi+edx*2+0x20bcb2ad],eax
  4166a7:	inc    edx
  4166a8:	fmul   QWORD PTR [eax]
  4166aa:	lds    edx,FWORD PTR [ebx-0x58]
  4166ad:	adc    eax,0x8fd5e5c8
  4166b2:	cmp    dl,BYTE PTR [esi+0x3527197c]
  4166b8:	sub    dh,BYTE PTR [edx+eiz*8-0x12]
  4166bc:	pop    ds
  4166bd:	pop    esi
  4166be:	inc    eax
  4166bf:	cli    
  4166c0:	mov    WORD PTR gs:[esp+ecx*2+0x60],?
  4166c5:	ret    0xe711
  4166c8:	inc    eax
  4166c9:	pop    edx
  4166ca:	arpl   WORD PTR [ebx-0x30],ax
  4166cd:	out    dx,al
  4166ce:	inc    esi
  4166cf:	ror    BYTE PTR [eax-0x4bb6c680],1
  4166d5:	sahf   
  4166d6:	dec    ebx
  4166d7:	mov    eax,0xfb4c35da
  4166dc:	enter  0x5b5c,0xcd
  4166e0:	mov    ds:0x398d9081,eax
  4166e6:	push   es
  4166e7:	inc    edx
  4166e8:	imul   esp,DWORD PTR [edx],0x50
  4166eb:	cmp    ch,BYTE PTR [eax]
  4166ed:	pop    es
  4166ee:	ja     0x4166dc
  4166f0:	icebp  
  4166f1:	imul   ecx,esi,0x8cbf2d99
  4166f7:	jns    0x4166c2
  4166f9:	imul   ebp,esi,0xad5b4a51
  4166ff:	into   
  416700:	mov    cl,0xdf
  416702:	stc    
  416703:	ror    DWORD PTR [edx+0x54],1
  416706:	int3   
  416707:	push   cs
  416708:	pushf  
  416709:	and    al,0xd
  41670b:	cmp    eax,0x395ee005
  416710:	in     eax,0x75
  416712:	fldcw  WORD PTR [eax]
  416714:	adc    eax,0x157b17bb
  416719:	out    dx,al
  41671a:	call   0x193c8c7a
  41671f:	retf   0x65eb
  416722:	push   cs
  416723:	dec    ebp
  416724:	scas   eax,DWORD PTR es:[edi]
  416725:	mov    ecx,0x102cf498
  41672a:	rcr    BYTE PTR [edi+0x40873432],cl
  416730:	popf   
  416731:	xchg   edx,eax
  416732:	bound  edi,QWORD PTR [edx]
  416734:	jnp    0x41678e
  416736:	or     BYTE PTR [eax],dl
  416738:	adc    esp,esi
  41673a:	(bad)  
  41673b:	mov    ds:0x70b41d34,al
  416740:	mov    ebx,0xd253cf7c
  416745:	not    cl
  416747:	loope  0x416767
  416749:	jle    0x416755
  41674b:	add    DWORD PTR [ecx-0x710cb347],ecx
  416751:	shl    DWORD PTR [ebx-0x43],1
  416754:	rcl    DWORD PTR [ebp+ebp*1-0x6b40f136],1
  41675b:	out    dx,eax
  41675c:	inc    edi
  41675d:	mov    ebx,0xebd01c24
  416762:	in     al,dx
  416763:	add    eax,0x52abdcff
  416768:	mov    BYTE PTR [edi-0x42],ah
  41676b:	lea    ecx,[edx-0x45]
  41676e:	cmp    bl,ah
  416770:	mov    bh,BYTE PTR [eax-0x2c]
  416773:	lods   eax,DWORD PTR ds:[esi]
  416774:	or     BYTE PTR [ebx],bh
  416776:	lods   al,BYTE PTR ds:[esi]
  416777:	aad    0x2c
  416779:	les    ebx,FWORD PTR [ecx-0x3e]
  41677c:	or     BYTE PTR [ebp+0x77],ah
  41677f:	int3   
  416780:	rcr    edi,0x6c
  416783:	stos   DWORD PTR es:[edi],eax
  416784:	repz or DWORD PTR [ebx],ebp
  416787:	mov    bl,0xca
  416789:	in     al,dx
  41678a:	outs   dx,BYTE PTR ds:[esi]
  41678b:	push   edx
  41678c:	ret    
  41678d:	mov    dh,BYTE PTR [edx+0x4e]
  416790:	in     al,dx
  416791:	(bad)  
  416792:	ds cmp eax,0x60161062
  416798:	fbld   TBYTE PTR [ecx]
  41679a:	xchg   BYTE PTR [ecx-0x253913bd],bl
  4167a0:	fcmovne st,st(7)
  4167a2:	std    
  4167a3:	ja     0x41675f
  4167a5:	mov    bh,0xcf
  4167a7:	fldenv [edi]
  4167a9:	fsubrp st(4),st
  4167ab:	repz icebp 
  4167ad:	mov    gs,WORD PTR [edi+0x7e]
  4167b0:	test   al,0x92
  4167b2:	fnstsw WORD PTR [ebx+ecx*4]
  4167b5:	and    dh,BYTE PTR [edi-0x50593b7e]
  4167bb:	jo     0x41681f
  4167bd:	(bad)  
  4167be:	out    dx,al
  4167bf:	mov    ah,0x6b
  4167c1:	xchg   ebp,eax
  4167c2:	fldcw  WORD PTR [ecx+esi*2]
  4167c5:	fstp   QWORD PTR [esi-0x7d]
  4167c8:	sub    bh,dh
  4167ca:	inc    eax
  4167cb:	ja     0x416832
  4167cd:	add    eax,0xb0fc545e
  4167d2:	dec    eax
  4167d3:	and    dh,BYTE PTR [eax-0x1d]
  4167d6:	dec    ecx
  4167d7:	lds    ebp,FWORD PTR [eax-0x7641fb27]
  4167dd:	not    DWORD PTR [esi]
  4167df:	dec    ebx
  4167e0:	push   ss
  4167e1:	fs (bad) 
  4167e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167e6:	xor    ah,ah
  4167e8:	mov    esi,0x8683800c
  4167ed:	clc    
  4167ee:	shl    BYTE PTR [ecx+0x27573266],1
  4167f4:	icebp  
  4167f5:	(bad)  
  4167f6:	jnp    0x416825
  4167f8:	or     bh,ah
  4167fa:	xor    eax,DWORD PTR [ebx+ebp*8-0x36]
  4167fe:	sbb    dl,BYTE PTR [esi]
  416800:	add    al,0x82
  416802:	jmp    0x47bcd09c
  416807:	adc    edx,ebx
  416809:	out    0xa6,al
  41680b:	xchg   edx,eax
  41680c:	mov    al,0x43
  41680e:	addr16 jb 0x416813
  416811:	mov    eax,0x7b68585e
  416816:	sbb    edx,DWORD PTR [esp+ebx*4]
  416819:	mov    ds:0xcc28fedf,al
  41681e:	inc    ebp
  41681f:	or     DWORD PTR [esi+0x6f830e20],esi
  416825:	sahf   
  416826:	fisttp WORD PTR cs:[edx]
  416829:	dec    ebx
  41682a:	mov    ch,0xd5
  41682c:	push   esp
  41682d:	dec    esi
  41682e:	outs   dx,BYTE PTR ds:[esi]
  41682f:	and    eax,0x6aa2a862
  416834:	lock mov al,ds:0xcf3fe057
  41683a:	je     0x416839
  41683c:	add    BYTE PTR [edi+0x4c],ah
  41683f:	mov    al,0x3b
  416841:	push   eax
  416842:	aaa    
  416843:	outs   dx,DWORD PTR ds:[esi]
  416844:	add    DWORD PTR [ecx],0xb2eedd9d
  41684a:	call   0x1f3a:0x880b565d
  416851:	and    al,0x8d
  416853:	sub    eax,0xe8594619
  416858:	(bad)  
  416859:	jb     0x41683c
  41685b:	inc    edi
  41685c:	xchg   DWORD PTR [edx+0x1ce4fc6],esi
  416862:	mov    ebx,0xeea2b874
  416867:	jo     0x4168e2
  416869:	mov    WORD PTR [ebp+0x39b4a613],ds
  41686f:	jmp    0x4168ef
  416871:	sysenter 
  416873:	dec    edx
  416874:	xor    DWORD PTR [edx+0x20],esp
  416877:	cmp    edx,esp
  416879:	stos   DWORD PTR es:[edi],eax
  41687a:	aad    0xb3
  41687c:	inc    edx
  41687d:	push   ebx
  41687e:	ins    BYTE PTR es:[edi],dx
  41687f:	call   0xc83c:0x2a6bfb1c
  416886:	arpl   WORD PTR [edi],dx
  416888:	(bad)  
  416889:	(bad)  
  41688a:	push   edi
  41688b:	add    eax,DWORD PTR [edi]
  41688d:	xchg   esi,eax
  41688e:	sbb    eax,0x70c0160e
  416893:	in     eax,0x9b
  416895:	mov    WORD PTR ds:0x7618404f,ds
  41689b:	cdq    
  41689c:	jne    0x416847
  41689e:	lds    eax,FWORD PTR [edx+0x29]
  4168a1:	repz scas eax,DWORD PTR es:[di]
  4168a4:	adc    bh,dh
  4168a6:	rol    BYTE PTR gs:[esp+edi*2+0x6d3f9667],cl
  4168ae:	pop    ebx
  4168af:	xor    dl,dh
  4168b1:	or     ebx,esi
  4168b3:	inc    ecx
  4168b4:	seto   BYTE PTR [ebx+edi*4]
  4168b8:	sub    ch,BYTE PTR [esi+ebx*4+0x7e]
  4168bc:	(bad)  
  4168bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168be:	fmul   st(1),st
  4168c0:	lock sbb al,0xef
  4168c3:	test   al,0xc2
  4168c5:	xchg   esi,eax
  4168c6:	mov    al,0x7b
  4168c8:	das    
  4168c9:	cwde   
  4168ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168cb:	add    DWORD PTR [ecx],ebp
  4168cd:	or     eax,0xbb423ee8
  4168d2:	not    DWORD PTR [eax-0x5b1ed9a2]
  4168d8:	or     eax,DWORD PTR [esi-0x56]
  4168db:	push   edi
  4168dc:	repnz add al,0xf
  4168df:	fisttp QWORD PTR [ecx]
  4168e1:	or     esi,DWORD PTR [esi-0x5e]
  4168e4:	jl     0x4168a1
  4168e6:	shl    BYTE PTR [ebp-0x5eedb44c],1
  4168ec:	(bad)  
  4168ee:	int    0x96
  4168f0:	mov    ds:0xd3bb51ec,al
  4168f5:	mov    ecx,DWORD PTR fs:[eax+0x42]
  4168f9:	xor    DWORD PTR [edx+eiz*1+0x5700b96a],edi
  416900:	xchg   BYTE PTR [edi-0x2b2ab55f],dl
  416906:	jmp    0xebb6:0xbe1872e7
  41690d:	stos   BYTE PTR es:[edi],al
  41690e:	adc    esi,ebx
  416910:	push   edx
  416911:	fsubr  DWORD PTR [edi+0x47]
  416914:	pop    eax
  416915:	int    0xab
  416917:	push   0x4806b02a
  41691c:	push   ds
  41691d:	arpl   cx,dx
  41691f:	xlat   BYTE PTR ds:[ebx]
  416920:	cmp    al,0x99
  416922:	jb     0x416954
  416924:	mov    cl,BYTE PTR [edx]
  416926:	out    0x5d,eax
  416928:	cmp    bl,bh
  41692a:	pop    ebp
  41692b:	add    esp,0xffffffc0
  41692e:	sub    al,BYTE PTR [edi+0x7b0b842c]
  416934:	(bad)  
  416935:	push   esi
  416936:	mov    al,0xe9
  416938:	sub    DWORD PTR [ebx],0xf2a692b6
  41693e:	mul    BYTE PTR [eax+ebp*1+0x18]
  416942:	sbb    eax,0x26c0c052
  416947:	mov    WORD PTR [esi+0x3e],es
  41694a:	es int3 
  41694c:	call   0xad95:0xfe9ddb67
  416953:	mov    eax,ds:0xa9384ba0
  416958:	clc    
  416959:	stos   DWORD PTR es:[edi],eax
  41695a:	lea    eax,[ebp+0x29]
  41695d:	pop    edx
  41695e:	xchg   ebp,eax
  41695f:	int3   
  416960:	add    eax,0x5e49a19a
  416965:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416966:	mov    DWORD PTR [esi+0x6e],ecx
  416969:	(bad)
  41696d:	and    edx,DWORD PTR [edi+ebp*4-0x16]
  416971:	retf   
  416972:	icebp  
  416973:	dec    esi
  416974:	inc    ebx
  416975:	xchg   ebp,eax
  416976:	sti    
  416977:	dec    eax
  416978:	test   eax,0x3d01526b
  41697d:	sbb    cl,dl
  41697f:	xor    al,0xed
  416981:	cmp    DWORD PTR [ecx+0x2f],esi
  416984:	cs pop ss
  416986:	leave  
  416987:	mov    al,0x79
  416989:	and    dl,BYTE PTR [edx+0x58d253df]
  41698f:	arpl   cx,dx
  416991:	sbb    eax,0x2d672ee7
  416996:	and    edx,DWORD PTR [ecx+0x1400a08a]
  41699c:	adc    BYTE PTR [eax],dh
  41699e:	jbe    0x41696d
  4169a0:	pop    ss
  4169a1:	or     edi,ecx
  4169a3:	rcr    ebp,0xa9
  4169a6:	popf   
  4169a7:	dec    ecx
  4169a8:	daa    
  4169a9:	cdq    
  4169aa:	or     dh,BYTE PTR [edi]
  4169ac:	dec    ecx
  4169ad:	lahf   
  4169ae:	out    dx,eax
  4169af:	pop    eax
  4169b0:	or     eax,0xe0e189a6
  4169b5:	lods   eax,DWORD PTR ds:[esi]
  4169b6:	mov    dl,0xf8
  4169b8:	cmp    eax,ecx
  4169ba:	std    
  4169bb:	sar    BYTE PTR [esi-0x3f],0xb7
  4169bf:	pop    esp
  4169c0:	mov    fs,ecx
  4169c2:	pop    ebx
  4169c3:	pushf  
  4169c4:	mov    ah,0x23
  4169c6:	out    0x44,al
  4169c8:	int3   
  4169c9:	jg     0x4169ad
  4169cb:	push   edx
  4169cc:	mov    ch,0xc8
  4169ce:	out    dx,eax
  4169cf:	rcl    BYTE PTR ds:0xe2cc968f,1
  4169d5:	ret    
  4169d6:	hlt    
  4169d7:	out    0xad,al
  4169d9:	(bad)  
  4169da:	lods   al,BYTE PTR ds:[esi]
  4169db:	add    ah,BYTE PTR [esi+0xf92df7a]
  4169e1:	fcom   DWORD PTR [esi+0x38]
  4169e4:	sar    esp,0x3d
  4169e7:	xor    dl,BYTE PTR [eax-0x65]
  4169ea:	pop    ss
  4169eb:	mov    ds:0xdb1e127b,al
  4169f0:	shl    DWORD PTR ds:0xc0083b74,1
  4169f6:	sub    al,0x6f
  4169f8:	add    bh,BYTE PTR [ecx-0x3c]
  4169fb:	or     esi,esp
  4169fd:	pop    esp
  4169fe:	xchg   edx,eax
  4169ff:	hlt    
  416a00:	adc    al,0xb1
  416a02:	iret   
  416a03:	lea    esp,[ebp+0x23]
  416a06:	hlt    
  416a07:	pop    ebp
  416a08:	jmp    0x416a09
  416a0a:	jns    0x416a45
  416a0c:	cmp    al,0xef
  416a0e:	out    dx,eax
  416a0f:	daa    
  416a10:	mov    dl,0xeb
  416a12:	hlt    
  416a13:	sti    
  416a14:	jg     0x416a27
  416a16:	and    al,0x48
  416a18:	out    dx,eax
  416a19:	push   0xfffffff1
  416a1b:	adc    ebx,edi
  416a1d:	mov    dh,0x7c
  416a1f:	xchg   esp,eax
  416a20:	adc    BYTE PTR [ebp+ebx*4-0x5e],cl
  416a24:	push   esi
  416a25:	outs   dx,BYTE PTR ds:[esi]
  416a26:	ret    
  416a27:	scas   eax,DWORD PTR es:[edi]
  416a28:	ret    0x2dc9
  416a2b:	leave  
  416a2c:	cmp    eax,0x41e3d392
  416a31:	jae    0x4169eb
  416a33:	and    ebp,DWORD PTR ds:0x72f5d177
  416a39:	pop    ebx
  416a3a:	(bad)
  416a3f:	popf   
  416a40:	inc    esi
  416a41:	xchg   edx,eax
  416a42:	mov    DWORD PTR [edx],ecx
  416a44:	int3   
  416a45:	aaa    
  416a46:	fld    DWORD PTR [ecx]
  416a48:	or     eax,0x6daca26
  416a4d:	pop    es
  416a4e:	imul   ebx,DWORD PTR [edx],0xffffff8c
  416a51:	outs   dx,DWORD PTR ds:[esi]
  416a52:	nop
  416a53:	(bad)  
  416a54:	retf   0xff6c
  416a57:	dec    edx
  416a58:	adc    BYTE PTR fs:[edi+0x5d],0x6f
  416a5d:	je     0x416a83
  416a5f:	xor    BYTE PTR [edx+0x4a],0x9
  416a63:	mov    dh,0x2
  416a65:	mov    eax,ds:0x766bb5bc
  416a6a:	dec    esi
  416a6b:	dec    esi
  416a6c:	and    eax,0xbbcefe4c
  416a71:	mov    al,0x2e
  416a73:	xchg   ecx,eax
  416a74:	ins    DWORD PTR es:[edi],dx
  416a75:	mov    WORD PTR [edi+0x50],es
  416a78:	ret    0x6b9e
  416a7b:	es icebp 
  416a7d:	sbb    al,0xf6
  416a7f:	int    0xc4
  416a81:	push   0xffffffd3
  416a83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a84:	loopne 0x416a17
  416a86:	ja     0x416aba
  416a88:	mov    DWORD PTR [ebx+0x7d5760ac],eax
  416a8e:	int    0xb6
  416a90:	sti    
  416a91:	aad    0x25
  416a93:	mul    DWORD PTR [edi+0x5fa4099e]
  416a99:	test   esp,edi
  416a9b:	(bad)  
  416a9c:	or     eax,0xe8dfa6a
  416aa1:	push   edi
  416aa2:	push   es
  416aa3:	mov    BYTE PTR [edi+0x1f06c3a2],ch
  416aa9:	call   0x1fc:0x71119241
  416ab0:	cmp    esi,esp
  416ab2:	sbb    eax,0x433e5b17
  416ab7:	or     eax,0x6500882d
  416abc:	shl    DWORD PTR [edx],1
  416abe:	mov    dl,BYTE PTR [ebx]
  416ac0:	add    eax,0x6f2dc5ad
  416ac5:	fcos   
  416ac7:	inc    esp
  416ac8:	dec    ebx
  416ac9:	or     eax,0x660b47d0
  416ace:	rol    BYTE PTR [ecx+0x67fe3059],0x46
  416ad5:	adc    BYTE PTR ds:0xcc4d013b,dl
  416adb:	dec    ebx
  416adc:	push   0xf3bcceba
  416ae1:	rcl    DWORD PTR [ebp-0x2b597a18],0x8d
  416ae8:	js     0x416b0d
  416aea:	dec    ebx
  416aeb:	adc    edx,DWORD PTR ds:0x5d0ea93d
  416af1:	call   0x12954838
  416af6:	or     dh,BYTE PTR [ecx-0x66364edb]
  416afc:	jmp    0x71bf2bec
  416b01:	rcr    DWORD PTR [ebx],cl
  416b03:	push   ds
  416b04:	dec    ecx
  416b05:	stos   DWORD PTR es:[edi],eax
  416b06:	push   ss
  416b07:	int    0x6
  416b09:	xor    DWORD PTR [edx+0x5f],ebp
  416b0c:	mov    esi,0xb3fe24fd
  416b11:	ja     0x416aed
  416b13:	add    dh,BYTE PTR [eax]
  416b15:	and    al,0x9e
  416b17:	test   eax,0x7830fc93
  416b1c:	inc    esi
  416b1d:	jne    0x416b34
  416b1f:	lods   eax,DWORD PTR ds:[esi]
  416b20:	cs enter 0x5dea,0xa6
  416b25:	call   DWORD PTR [ecx+0x55]
  416b28:	sbb    dl,bh
  416b2a:	(bad)  
  416b2b:	mul    cl
  416b2d:	cmc    
  416b2e:	adc    BYTE PTR [ebx-0x63],dl
  416b31:	in     al,0xd1
  416b33:	sub    edx,DWORD PTR [esi-0x56b43e30]
  416b39:	out    0xbc,eax
  416b3b:	ret    0xaf75
  416b3e:	loopne 0x416b41
  416b40:	mov    dh,0x8
  416b42:	add    esp,edx
  416b44:	nop
  416b45:	adc    BYTE PTR [edi-0xf],cl
  416b48:	out    0x69,al
  416b4a:	jae    0x416b82
  416b4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b4d:	inc    ebp
  416b4e:	jo     0x416af8
  416b50:	pop    ebp
  416b51:	test   eax,0x94ec0564
  416b56:	fnstcw WORD PTR [esp+ebp*2]
  416b59:	push   edi
  416b5a:	push   edx
  416b5b:	shl    bl,0x26
  416b5e:	mov    ch,0x27
  416b60:	mov    esi,0x1dd38489
  416b65:	add    BYTE PTR [ebx+0x40],0x5d
  416b69:	push   ebp
  416b6a:	loopne 0x416b68
  416b6c:	jl     0x416bcf
  416b6e:	adc    eax,0xd0a54787
  416b73:	add    al,0x22
  416b75:	mov    cl,0x7d
  416b77:	fstp   QWORD PTR [ebx+0x3a26d16]
  416b7d:	jne    0x416b85
  416b7f:	xchg   esi,eax
  416b80:	pop    esp
  416b81:	cmp    al,0xca
  416b83:	xchg   BYTE PTR [ebp+0x57],dh
  416b86:	push   es
  416b87:	xchg   ecx,eax
  416b88:	adc    DWORD PTR [edi],0x50
  416b8b:	mov    al,ch
  416b8d:	call   0x646e0bfd
  416b92:	lock sub DWORD PTR [edx],0x7d
  416b96:	cmp    BYTE PTR [edx*4+0x644b26ab],0xd1
  416b9e:	pop    ss
  416b9f:	and    ecx,edi
  416ba1:	inc    edi
  416ba2:	and    BYTE PTR [ebx-0x45d21cca],al
  416ba8:	sti    
  416ba9:	adc    BYTE PTR [ebx],bl
  416bab:	fcompp 
  416bad:	daa    
  416bae:	gs fxch st(5)
  416bb1:	scas   eax,DWORD PTR es:[edi]
  416bb2:	loope  0x416bdb
  416bb4:	mov    WORD PTR [ecx-0x75],fs
  416bb7:	mov    ds:0xb69313ea,eax
  416bbc:	xchg   eax,ebx
  416bbe:	xor    al,0x4e
  416bc0:	fnstsw WORD PTR [esi-0x3df91d21]
  416bc6:	add    al,0x3c
  416bc8:	or     DWORD PTR [edx],ecx
  416bca:	mov    BYTE PTR [eax-0x9fad6bd],al
  416bd0:	in     eax,dx
  416bd1:	sub    al,0xfe
  416bd3:	cli    
  416bd4:	loop   0x416c05
  416bd6:	adc    al,0xec
  416bd8:	or     al,0x8d
  416bda:	pop    es
  416bdb:	int    0x4a
  416bdd:	push   ecx
  416bde:	mov    edx,0x27b2d34c
  416be3:	cs jno 0x416bb4
  416be6:	xchg   ebx,eax
  416be7:	mov    WORD PTR [esi-0x191ba3f8],es
  416bed:	sbb    eax,0x1647e091
  416bf2:	rcr    BYTE PTR [ebx+0x66a1d6d1],1
  416bf8:	push   DWORD PTR [ebp-0x75bf32ce]
  416bfe:	mov    bl,0x1
  416c00:	pop    eax
  416c01:	sti    
  416c02:	mov    esp,0x3d55a0
  416c07:	int3   
  416c08:	dec    eax
  416c09:	sbb    ch,bh
  416c0b:	push   eax
  416c0c:	or     BYTE PTR [edx+edx*2+0x52],cl
  416c10:	mov    ecx,es
  416c12:	(bad)  [edx]
  416c14:	sub    al,0xbf
  416c16:	cmp    al,0xc1
  416c18:	pop    esp
  416c19:	repnz repnz push edi
  416c1c:	test   BYTE PTR [edi],0xd7
  416c1f:	retfw  0x975b
  416c23:	enter  0x56dc,0x55
  416c27:	sub    eax,0x45876e9a
  416c2c:	sub    al,0x68
  416c2e:	rcr    al,1
  416c30:	adc    dl,BYTE PTR [ebp+0x6d7c89b4]
  416c36:	mov    esi,0x81b5f67e
  416c3b:	dec    edi
  416c3c:	pop    edi
  416c3d:	xor    dl,BYTE PTR ss:[edi-0x7a]
  416c41:	mov    edi,0x2fe28d72
  416c46:	loop   0x416c9b
  416c48:	fidiv  WORD PTR [edi+0x73b3b26f]
  416c4e:	ss aaa 
  416c50:	ret    
  416c51:	inc    edx
  416c52:	lods   al,BYTE PTR gs:[esi]
  416c54:	pop    es
  416c55:	dec    esi
  416c56:	mov    ebx,0xe038c276
  416c5b:	cdq    
  416c5c:	xchg   esi,eax
  416c5d:	mov    ch,0xf3
  416c5f:	fwait
  416c60:	jno    0x416c35
  416c62:	aad    0x29
  416c64:	pop    ebx
  416c65:	xchg   edi,eax
  416c66:	rol    edi,cl
  416c68:	fmul   DWORD PTR [ecx]
  416c6a:	les    eax,FWORD PTR [esi+0x6a2e80bc]
  416c70:	or     eax,0xd8cd7a0a
  416c75:	jecxz  0x416c25
  416c77:	jl     0x416cce
  416c79:	mov    ?,WORD PTR [ebp+0x26dd5811]
  416c7f:	mov    eax,0xe6ac4037
  416c84:	stc    
  416c85:	icebp  
  416c86:	mov    ebx,DWORD PTR [eax+edx*4-0x29a920e0]
  416c8d:	adc    ecx,DWORD PTR [ebx-0x78]
  416c90:	add    eax,0xa66a63be
  416c95:	in     eax,0x25
  416c97:	fcom   QWORD PTR [ebp-0x6d]
  416c9a:	test   eax,0xbcb43a91
  416c9f:	sar    BYTE PTR [ebp-0x428365b8],0x7b
  416ca6:	push   esi
  416ca7:	pop    esp
  416ca8:	xlat   BYTE PTR ds:[ebx]
  416ca9:	jno    0x416c2c
  416cab:	adc    eax,0xa319901f
  416cb0:	add    al,0x94
  416cb2:	rol    BYTE PTR [ecx],1
  416cb4:	jnp    0x416d2d
  416cb6:	retf   
  416cb7:	test   BYTE PTR [edx-0x7042e690],ch
  416cbd:	mov    dh,al
  416cbf:	rol    dh,cl
  416cc1:	xor    edx,DWORD PTR [edi+0x2b]
  416cc4:	cmp    DWORD PTR [ebp-0x56],edx
  416cc7:	test   BYTE PTR [esp+ebp*8+0x6ddae514],dh
  416cce:	shl    DWORD PTR [ecx],1
  416cd0:	add    al,BYTE PTR [eax]
  416cd2:	sbb    eax,0x59dfe446
  416cd7:	(bad)  
  416cd9:	sbb    esi,DWORD PTR [bp-0x7f85]
  416cde:	cmp    bh,BYTE PTR [edx+ebp*1+0x273ac4cd]
  416ce5:	fcomp  QWORD PTR [ecx]
  416ce7:	rcr    edx,1
  416ce9:	pop    edx
  416cea:	hlt    
  416ceb:	push   ss
  416cec:	sti    
  416ced:	fwait
  416cee:	push   esi
  416cef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cf0:	retf   
  416cf1:	repz popf 
  416cf3:	call   0x4787:0x4ce9c0db
  416cfa:	mov    dh,0xd8
  416cfc:	daa    
  416cfd:	add    esp,DWORD PTR [esi+ebp*8+0x58]
  416d01:	in     eax,0xa8
  416d03:	xchg   esi,eax
  416d04:	mov    ebx,0xfa465717
  416d09:	int    0xf9
  416d0b:	in     al,dx
  416d0c:	enter  0x45bb,0x3a
  416d10:	je     0x416ca8
  416d12:	scas   eax,DWORD PTR es:[edi]
  416d13:	jmp    0x22a9:0xd8ed5f78
  416d1a:	inc    edi
  416d1b:	and    BYTE PTR [esi+0x4a09ed9a],bh
  416d21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d22:	inc    edx
  416d23:	xor    al,0xc6
  416d25:	pop    es
  416d26:	in     eax,dx
  416d27:	xor    eax,0xed56ce4e
  416d2c:	mov    ebx,0x62846e3c
  416d31:	ret    
  416d32:	xor    BYTE PTR [edi+0x7b],bl
  416d35:	gs dec edx
  416d37:	mov    ss:0x3ffb6da1,eax
  416d3d:	pop    ebp
  416d3e:	imul   eax,ebx,0xbac54d71
  416d44:	arpl   WORD PTR [edi-0x13],si
  416d47:	mov    eax,ds:0x7cda6f
  416d4c:	mov    DWORD PTR [ebx-0x5a],ecx
  416d4f:	ja     0x416d46
  416d51:	jmp    0x2e31:0xc24703cd
  416d58:	pop    ss
  416d59:	cdq    
  416d5a:	dec    edi
  416d5b:	cmp    al,0xb2
  416d5d:	lds    ecx,FWORD PTR [ebx-0x38ade064]
  416d63:	mov    ebx,0x6b6ddd52
  416d68:	(bad)  
  416d69:	call   0xcb0b:0xb2ce3bf9
  416d70:	out    0x9a,eax
  416d72:	sub    al,0xd2
  416d74:	jnp    0x416d72
  416d76:	pop    edi
  416d77:	sbb    esi,esp
  416d79:	repz mov edx,DWORD PTR ds:0x1dc2d46a
  416d80:	scas   eax,DWORD PTR es:[edi]
  416d81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d82:	shr    cl,cl
  416d84:	loopne 0x416d63
  416d86:	ins    DWORD PTR es:[edi],dx
  416d87:	lea    edx,[eax-0x460f4e8d]
  416d8d:	pop    ebp
  416d8e:	pusha  
  416d8f:	lods   al,BYTE PTR ds:[esi]
  416d90:	(bad)
  416d93:	rcr    bl,1
  416d95:	mov    ebp,0x768a8086
  416d9a:	xchg   BYTE PTR [edi-0x4b6dff5d],bh
  416da0:	or     eax,0x79964dcb
  416da5:	jmp    0x416d3d
  416da7:	ror    cl,0x1b
  416daa:	and    ah,ah
  416dac:	sub    al,0x2c
  416dae:	scas   eax,DWORD PTR es:[edi]
  416daf:	stos   DWORD PTR es:[edi],eax
  416db0:	mov    esp,0x7697a0fc
  416db5:	xor    esi,DWORD PTR [ebx-0x46103cbb]
  416dbb:	dec    ebx
  416dbc:	call   0xf7fe:0xba237330
  416dc3:	cmp    ebx,edi
  416dc5:	xlat   BYTE PTR ds:[ebx]
  416dc6:	test   al,0x43
  416dc8:	pushf  
  416dc9:	pop    edx
  416dca:	sub    BYTE PTR [edi],0x6e
  416dcd:	nop
  416dce:	xchg   ebp,eax
  416dcf:	adc    edi,DWORD PTR [ebx-0x534eb5ea]
  416dd5:	in     al,dx
  416dd6:	jbe    0x416e25
  416dd8:	sub    BYTE PTR [edi+0xaba3ed7],0x51
  416ddf:	pop    edx
  416de0:	pop    ebx
  416de1:	sbb    esi,DWORD PTR [ecx-0x1c]
  416de4:	cwde   
  416de5:	push   esi
  416de6:	pushf  
  416de7:	add    BYTE PTR [eax-0x7f231835],bh
  416ded:	call   0x28ff:0xab6fdfbf
  416df4:	jmp    0x3d77:0x3b4ebca0
  416dfb:	push   ecx
  416dfc:	int3   
  416dfd:	push   edx
  416dfe:	fnstcw WORD PTR [edi]
  416e00:	push   esp
  416e01:	hlt    
  416e02:	mov    eax,0x9a4c06cd
  416e07:	fadd   DWORD PTR [eax]
  416e09:	mov    ch,0x84
  416e0b:	xchg   ecx,eax
  416e0c:	jg     0x416e02
  416e0e:	mov    es:0xea52f14,al
  416e14:	and    DWORD PTR [eax+esi*1],esp
  416e17:	jmp    0x6988:0x72174890
  416e1e:	mov    dh,0xe6
  416e20:	xor    eax,0x8cdf9527
  416e25:	lods   al,BYTE PTR ds:[esi]
  416e26:	inc    ebx
  416e27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e28:	repnz (bad) 
  416e2a:	daa    
  416e2b:	inc    ebx
  416e2c:	push   0x39
  416e2e:	and    ch,BYTE PTR [ebx-0x7550c0be]
  416e34:	(bad)  
  416e35:	ss ja  0x416e4c
  416e38:	adc    BYTE PTR [esi],ch
  416e3a:	sub    eax,0x30e24190
  416e3f:	lahf   
  416e40:	leave  
  416e41:	test   BYTE PTR [ecx+0x143b1389],0xb2
  416e48:	test   DWORD PTR [eax-0x3a],edx
  416e4b:	stos   BYTE PTR es:[edi],al
  416e4c:	(bad)  
  416e4e:	repz sbb BYTE PTR [edi],bh
  416e51:	out    dx,eax
  416e52:	push   0xffffffa7
  416e54:	jne    0x416ea5
  416e56:	jb     0x416e05
  416e58:	adc    DWORD PTR [eax+0x2497c9c7],ebx
  416e5e:	popf   
  416e5f:	pop    ds
  416e60:	push   esp
  416e61:	jmp    0x59ec8b36
  416e66:	scas   eax,DWORD PTR es:[edi]
  416e67:	test   BYTE PTR [edx-0x2d],ah
  416e6a:	or     BYTE PTR [edx-0x28e198b6],al
  416e70:	push   esp
  416e71:	rol    BYTE PTR [ecx],1
  416e73:	outs   dx,DWORD PTR ds:[esi]
  416e74:	dec    esi
  416e75:	dec    edi
  416e76:	cmp    BYTE PTR [edx+0x1b8fd631],dh
  416e7c:	sbb    ecx,DWORD PTR [edx]
  416e7e:	add    bh,BYTE PTR [eax+0x8a188ab]
  416e84:	in     al,dx
  416e85:	int3   
  416e86:	pop    edi
  416e87:	mov    ch,0x93
  416e89:	in     al,dx
  416e8a:	pop    eax
  416e8b:	xchg   edx,eax
  416e8c:	ror    bh,cl
  416e8e:	sub    ebx,esi
  416e90:	inc    eax
  416e91:	stc    
  416e92:	outs   dx,DWORD PTR ds:[esi]
  416e93:	callw  0x6079
  416e97:	je     0x416e30
  416e99:	mov    cl,0xd
  416e9b:	pusha  
  416e9c:	shl    edi,0x41
  416e9f:	fisttp QWORD PTR [esi]
  416ea1:	or     ebx,edi
  416ea3:	fisubr DWORD PTR [ebp+0x413f06d1]
  416ea9:	sub    DWORD PTR ds:0x5f3b31da,0x45
  416eb0:	jmp    0x416e93
  416eb2:	iret   
  416eb3:	add    bh,bh
  416eb5:	stc    
  416eb6:	and    al,0x31
  416eb8:	std    
  416eb9:	mov    DWORD PTR [ebx+0x59],ebx
  416ebc:	dec    esi
  416ebd:	stos   BYTE PTR es:[edi],al
  416ebe:	(bad)  
  416ebf:	pushf  
  416ec0:	imul   ebx,DWORD PTR [ecx-0x4d],0xffffffb3
  416ec4:	je     0x416f45
  416ec6:	push   0x6c
  416ec8:	repnz out 0x77,al
  416ecb:	and    eax,0xe68d0f83
  416ed0:	aas    
  416ed1:	mov    al,0x1c
  416ed3:	sbb    BYTE PTR [eax+0x1e5dd91f],0x84
  416eda:	sbb    DWORD PTR [ecx],ebp
  416edc:	popa   
  416edd:	cmp    DWORD PTR [ecx+edi*1-0x422e8ab2],ecx
  416ee4:	mov    cl,0xa6
  416ee6:	jmp    0x416e76
  416ee8:	jb     0x416e6a
  416eea:	xchg   BYTE PTR [edx-0x10],al
  416eed:	jno    0x416e7c
  416eef:	sbb    al,dl
  416ef1:	cli    
  416ef2:	(bad)  
  416ef4:	outs   dx,DWORD PTR ds:[esi]
  416ef5:	add    eax,0x58323aaf
  416efa:	and    al,0xec
  416efd:	mov    eax,ds:0xd033b714
  416f02:	sub    ecx,edx
  416f04:	sub    ecx,esi
  416f06:	jmp    0x41928f
  416f0b:	adc    ah,BYTE PTR [edx+0xe708f7]
  416f11:	test   BYTE PTR [eax+0x9a72d6],bl
  416f17:	push   0x938caf1d
  416f1c:	inc    eax
  416f1d:	add    BYTE PTR [ebx-0x7c7ca3e9],0x84
  416f24:	ret    
  416f25:	add    BYTE PTR [edx-0x1f],dl
  416f28:	pop    ebx
  416f29:	cli    
  416f2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f2b:	push   ecx
  416f2c:	fldln2 
  416f2e:	adc    eax,0x8ab6d0d6
  416f33:	xchg   edx,eax
  416f34:	retf   
  416f35:	mov    ds:0xe2f90c54,eax
  416f3a:	int3   
  416f3b:	jecxz  0x416fbc
  416f3d:	pop    esi
  416f3e:	dec    edx
  416f3f:	and    DWORD PTR [eax-0x29e054e8],0x21e64820
  416f49:	call   0x5e89:0x52bcab95
  416f50:	iret   
  416f51:	inc    esi
  416f52:	mov    cl,0xd9
  416f54:	mov    ebx,0x8e6326fe
  416f59:	cld    
  416f5a:	(bad)  
  416f5b:	pop    esp
  416f5c:	sar    DWORD PTR ds:0x5bb1a7b0,cl
  416f62:	lea    edi,[edi]
  416f64:	xchg   DWORD PTR [edx+0x68],esi
  416f67:	xchg   ebp,eax
  416f68:	lahf   
  416f69:	lds    eax,FWORD PTR [ebp+0x57]
  416f6c:	loop   0x416fc0
  416f6e:	pop    edx
  416f6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f70:	aam    0x5d
  416f72:	fld    QWORD PTR [ebx-0xfe2b91b]
  416f78:	(bad)  
  416f79:	shl    BYTE PTR [ebx],cl
  416f7b:	leave  
  416f7c:	lods   eax,DWORD PTR ds:[esi]
  416f7d:	adc    eax,0xee69cbc9
  416f82:	clc    
  416f83:	nop
  416f84:	nop
  416f85:	xchg   edx,eax
  416f86:	dec    ebx
  416f87:	dec    esi
  416f88:	aam    0x55
  416f8a:	pop    ss
  416f8b:	cli    
  416f8c:	retf   
  416f8d:	jle    0x416fd9
  416f8f:	or     DWORD PTR [edi-0x1462d8b5],0x3fbb64ac
  416f99:	mov    eax,0xe2fd7930
  416f9e:	arpl   WORD PTR [eax],ax
  416fa0:	ins    DWORD PTR es:[edi],dx
  416fa1:	sbb    eax,0xf433f087
  416fa6:	and    eax,0x9bc06636
  416fab:	jb     0x416f48
  416fad:	shl    BYTE PTR [edi-0x74],0xbe
  416fb1:	fcom   st(1)
  416fb3:	imul   esp,DWORD PTR ds:0xd761988b,0xffffffbe
  416fba:	mov    esi,0xca4d4486
  416fbf:	xor    al,0x60
  416fc1:	scas   eax,DWORD PTR es:[edi]
  416fc2:	loopne 0x416f7c
  416fc4:	fucomi st,st(1)
  416fc6:	sub    eax,0x5be563bb
  416fcb:	test   al,0x2e
  416fcd:	jge    0x416f52
  416fcf:	xor    DWORD PTR [edi+0x2b59e880],0x6d
  416fd6:	sbb    ebp,DWORD PTR [edx]
  416fd8:	pusha  
  416fd9:	jmp    0xbec8:0x112ff2c3
  416fe0:	stc    
  416fe1:	aad    0xde
  416fe3:	mov    esi,0x5494b574
  416fe8:	xor    edi,edx
  416fea:	mov    ebp,0x68d68135
  416fef:	sbb    bh,BYTE PTR [esp]
  416ff2:	popa   
  416ff3:	sub    BYTE PTR [eax+0x4f],dh
  416ff6:	mov    ch,BYTE PTR [edi-0x70]
  416ff9:	les    eax,FWORD PTR [ebx+0x6d2a19cf]
  416fff:	xor    al,0x71
  417001:	call   0x9141:0xe5e4e615
  417008:	addr16 cli 
  41700a:	jae    0x416fbb
  41700c:	ror    DWORD PTR ds:0x596bd7fe,cl
  417012:	imul   eax,DWORD PTR [ebp+0x6d],0x99cd4206
  417019:	adc    DWORD PTR [esi],ecx
  41701b:	mov    edx,ecx
  41701d:	and    BYTE PTR [ecx],ah
  41701f:	jae    0x417081
  417021:	js     0x417055
  417023:	scas   eax,DWORD PTR es:[edi]
  417024:	cmc    
  417025:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417026:	mov    esi,0x4daff0f
  41702b:	or     dl,BYTE PTR [ecx]
  41702d:	mov    ch,0x2b
  41702f:	mov    ebx,0x25dd8315
  417034:	stc    
  417035:	fistp  QWORD PTR [edi-0x5760cdca]
  41703b:	xor    eax,0x9c16c108
  417040:	xchg   esp,eax
  417041:	pop    ecx
  417042:	sbb    al,0x40
  417044:	mov    bl,0x9a
  417046:	arpl   bp,cx
  417048:	jb     0x417016
  41704a:	cs xor eax,0xcc24f693
  417050:	es retf 0xa5f5
  417054:	xchg   edx,eax
  417055:	sqrtps xmm4,XMMWORD PTR es:[ebp+edi*1+0x37b472ac]
  41705e:	xor    eax,0x9da26040
  417063:	dec    ebp
  417064:	mov    ds:0x4b61cc43,eax
  417069:	xchg   DWORD PTR [ebx+0x78],esp
  41706c:	cmp    al,0xe6
  41706e:	ins    BYTE PTR es:[edi],dx
  41706f:	cld    
  417070:	out    dx,eax
  417071:	call   0x7b4f5643
  417076:	js     0x417052
  417078:	xchg   ecx,eax
  417079:	jae    0x4170f5
  41707b:	mov    ch,0x51
  41707d:	xchg   BYTE PTR [edx-0x3a],al
  417080:	sub    DWORD PTR [ebp-0x38],ebx
  417083:	cmp    DWORD PTR [ebx-0x2834dfdb],eax
  417089:	pop    es
  41708a:	stos   DWORD PTR es:[edi],eax
  41708b:	inc    edx
  41708c:	inc    ecx
  41708d:	sub    eax,0x152e6d85
  417092:	push   ds
  417093:	into   
  417094:	mov    edx,0x5732d065
  417099:	int3   
  41709a:	add    DWORD PTR [eax+edi*4+0x4ffdf758],0xc
  4170a2:	test   edx,ebx
  4170a4:	or     edx,DWORD PTR [ebx+0x55c83069]
  4170aa:	adc    al,0x57
  4170ac:	dec    esi
  4170ad:	lock and BYTE PTR [ebx],al
  4170b0:	cmp    eax,0x3906ea45
  4170b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170b7:	xchg   esi,eax
  4170b8:	test   DWORD PTR [eax*2-0x791de541],ebp
  4170bf:	lahf   
  4170c0:	scas   eax,DWORD PTR es:[edi]
  4170c1:	push   ebp
  4170c2:	icebp  
  4170c3:	xor    al,0xd3
  4170c5:	leave  
  4170c6:	ret    0x16d4
  4170c9:	jnp    0x4170e7
  4170cb:	cmp    eax,0x34a348e2
  4170d0:	std    
  4170d1:	fcom   QWORD PTR [ebp-0x32]
  4170d4:	inc    esi
  4170d5:	test   al,0xb6
  4170d7:	daa    
  4170d8:	mov    cl,0xda
  4170da:	add    dl,BYTE PTR [eax+0x3fd51af7]
  4170e0:	pop    ds
  4170e1:	pushf  
  4170e2:	xchg   ecx,eax
  4170e3:	push   edi
  4170e4:	test   BYTE PTR [edi+edx*2+0x5a73c017],ah
  4170eb:	sbb    al,0x59
  4170ed:	adc    DWORD PTR [eax],eax
  4170ef:	lea    eax,[edi+0x7305287d]
  4170f5:	sbb    BYTE PTR [eax+edi*4+0x49],0x96
  4170fa:	(bad)  
  4170fc:	leave  
  4170fd:	test   BYTE PTR [ebx+0x5247827e],dl
  417103:	jecxz  0x417159
  417105:	push   esp
  417106:	adc    al,0xab
  417108:	and    ah,dl
  41710a:	std    
  41710b:	es cwde 
  41710d:	mov    esi,ebp
  41710f:	dec    ebx
  417110:	frstor [ebx+ecx*2+0x2dffdd70]
  417117:	sbb    BYTE PTR [ecx+0x4047d78d],bl
  41711d:	xchg   edx,eax
  41711e:	icebp  
  41711f:	(bad)  
  417121:	mov    ebp,0x8d44ca23
  417126:	test   al,0x13
  417128:	push   es
  417129:	sub    al,0x66
  41712b:	xor    al,0x25
  41712d:	xchg   ebp,eax
  41712e:	adc    bh,BYTE PTR [edi+0xa43f92c]
  417134:	ja     0x4170c1
  417136:	sub    DWORD PTR [eax+eiz*2],ebx
  417139:	ret    0xcade
  41713c:	jl     0x417161
  41713e:	dec    eax
  41713f:	and    eax,0x3aaab4eb
  417144:	xchg   esi,eax
  417145:	call   0xc6ca:0xcf26899c
  41714c:	dec    edx
  41714d:	adc    eax,0x6004beb3
  417152:	shl    DWORD PTR [eax],cl
  417154:	sti    
  417155:	packsswb mm3,QWORD PTR [edi+0x68]
  417159:	xlat   BYTE PTR ds:[ebx]
  41715a:	mov    esi,0xb2acbe71
  41715f:	ds ds push es
  417162:	pusha  
  417163:	jne    0x4171c1
  417165:	popa   
  417166:	mov    ch,0xf2
  417168:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417169:	xor    al,0xf9
  41716b:	inc    edx
  41716c:	cmp    bh,BYTE PTR [edx+0x2e]
  41716f:	lock in al,0x46
  417172:	xor    cl,ch
  417174:	stos   DWORD PTR es:[edi],eax
  417175:	add    esi,esp
  417177:	fidiv  DWORD PTR [ebx-0x51]
  41717a:	fisubr DWORD PTR [esi-0x2c]
  41717d:	xchg   BYTE PTR [esi-0x46],bl
  417180:	xor    dh,BYTE PTR [edi]
  417182:	jle    0x4171ad
  417184:	js     0x41713d
  417186:	scas   al,BYTE PTR es:[edi]
  417187:	shr    BYTE PTR [ecx+0x6f],cl
  41718a:	jne    0x417163
  41718c:	push   ecx
  41718d:	sbb    al,0x91
  41718f:	sbb    ah,bl
  417191:	dec    esi
  417192:	xchg   esp,eax
  417193:	or     al,0x4
  417195:	fmul   st(6),st
  417197:	mov    ecx,0xbbe282c1
  41719c:	jmp    0xc7bd:0xa30d6e94
  4171a3:	stos   BYTE PTR es:[edi],al
  4171a4:	in     al,dx
  4171a5:	aas    
  4171a6:	je     0x417132
  4171a8:	mov    ds:0x92d62741,eax
  4171ad:	scas   eax,DWORD PTR es:[edi]
  4171ae:	mov    dl,0xd8
  4171b0:	aaa    
  4171b1:	mov    ebp,0xac8cfe4d
  4171b6:	sbb    DWORD PTR [edi],0x48
  4171b9:	sbb    DWORD PTR [edx],edx
  4171bb:	mov    ch,0x81
  4171bd:	push   edi
  4171be:	jmp    0x12500c1e
  4171c3:	jne    0x417198
  4171c5:	imul   eax,DWORD PTR [edx+0x49080503],0x77
  4171cc:	xchg   edi,eax
  4171cd:	data16 xlat BYTE PTR ds:[ebx]
  4171cf:	lods   eax,DWORD PTR ds:[esi]
  4171d0:	jmp    0x45de:0xab85890d
  4171d7:	std    
  4171d8:	xor    BYTE PTR [ebx],bl
  4171da:	add    DWORD PTR [ebx+0x6b],ebp
  4171dd:	nop
  4171de:	dec    eax
  4171df:	adc    BYTE PTR [ebx+eiz*8-0x45],ah
  4171e3:	dec    edx
  4171e4:	xor    BYTE PTR [edi+ecx*1-0x6b],ch
  4171e8:	mov    bh,0xc1
  4171ea:	pop    edx
  4171ec:	cmp    esi,edx
  4171ee:	outs   dx,BYTE PTR ds:[esi]
  4171ef:	xchg   ch,dl
  4171f1:	cli    
  4171f2:	inc    ecx
  4171f3:	jp     0x4171c0
  4171f5:	mov    dl,BYTE PTR [ebx]
  4171f7:	push   ds
  4171f8:	mov    ds:0xcacd7b3,eax
  4171fd:	hlt    
  4171fe:	adc    al,0xdf
  417200:	lods   al,BYTE PTR ds:[esi]
  417201:	and    al,BYTE PTR fs:[esi-0x1f]
  417205:	pop    ecx
  417206:	mov    ebx,0x46640a48
  41720b:	add    al,0x45
  41720d:	pop    ebp
  41720e:	inc    al
  417210:	loopne 0x41728a
  417212:	mov    esp,0x2003ae4b
  417217:	pop    eax
  417218:	sub    ch,al
  41721a:	imul   ecx,DWORD PTR [ebx+ebx*8-0x7c],0xffffffe1
  41721f:	jg     0x4171d4
  417221:	inc    esp
  417222:	cmp    BYTE PTR [edx+0x5153bc6f],al
  417228:	jno    0x417292
  41722a:	push   cs
  41722b:	push   0x6
  41722d:	push   esp
  41722e:	cmp    esp,eax
  417230:	inc    eax
  417231:	adc    ebp,ebx
  417233:	mov    al,BYTE PTR [ebx+0x1f5de180]
  417239:	mov    ecx,0x1b49c66
  41723e:	daa    
  41723f:	inc    ecx
  417240:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417241:	dec    edx
  417242:	aam    0x6c
  417244:	ret    
  417245:	pop    eax
  417246:	sub    eax,0xc8fe8ee7
  41724b:	in     al,0xdc
  41724d:	rol    BYTE PTR [edi+0x6774f3bd],cl
  417253:	or     bh,BYTE PTR [eax]
  417255:	xor    dh,ah
  417257:	dec    ebx
  417258:	(bad)  
  417259:	xchg   esp,eax
  41725a:	and    al,0xfc
  41725c:	or     edi,edx
  41725e:	pop    eax
  41725f:	inc    ebp
  417260:	mov    ah,0xdb
  417262:	out    dx,al
  417263:	pop    ebx
  417264:	push   0xffffffde
  417266:	jnp    0x417211
  417268:	out    0x75,al
  41726a:	mov    edx,0xe6f1b89b
  41726f:	or     ecx,edx
  417271:	inc    ebx
  417272:	dec    ebp
  417273:	xchg   edx,eax
  417274:	push   edx
  417275:	cld    
  417276:	call   DWORD PTR [edx-0x2b]
  417279:	sub    cl,BYTE PTR [esi+0x6f23c0aa]
  41727f:	ins    DWORD PTR es:[edi],dx
  417280:	loope  0x4172f5
  417282:	inc    ebp
  417283:	push   cs
  417284:	rol    BYTE PTR [edx-0x13],0x38
  417288:	jo     0x417265
  41728a:	xchg   ebx,eax
  41728b:	(bad)  [ebx+0x6a4cc9a0]
  417291:	and    al,0x93
  417293:	cwde   
  417294:	mov    ah,0x54
  417296:	jnp    0x4172aa
  417298:	jge    0x417264
  41729a:	mov    esp,0xfef71fc5
  41729f:	(bad)  
  4172a0:	cmp    eax,0xd7cb3c8b
  4172a5:	les    edx,FWORD PTR [edi-0x6fe4b3fb]
  4172ab:	jmp    0x4172ce
  4172ad:	pop    eax
  4172ae:	(bad)  
  4172af:	clc    
  4172b0:	fcom   QWORD PTR [esi-0x608b444f]
  4172b6:	jnp    0x41727f
  4172b8:	mov    eax,ds:0x25e932c
  4172bd:	dec    ecx
  4172be:	fbstp  TBYTE PTR [ebx-0x2a]
  4172c1:	adc    eax,0xd6628264
  4172c6:	(bad)  [esi-0x5b76cabf]
  4172cc:	push   es
  4172cd:	pusha  
  4172ce:	lock cmp BYTE PTR [ebx-0x47],cl
  4172d2:	in     eax,dx
  4172d3:	sub    eax,0xf0b31bfb
  4172d8:	sahf   
  4172d9:	repnz sbb al,0x23
  4172dc:	test   ebx,0x15424cae
  4172e2:	in     eax,0x83
  4172e4:	xchg   BYTE PTR ss:[ebx+0x2c],ch
  4172e8:	pushf  
  4172e9:	(bad)
  4172ed:	mov    gs:0x1587867f,al
  4172f3:	or     al,al
  4172f5:	jnp    0x41736e
  4172f7:	push   ecx
  4172f8:	arpl   ax,ax
  4172fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172fb:	sub    eax,DWORD PTR [ebp+0x63]
  4172fe:	aas    
  4172ff:	add    al,0xa8
  417301:	retf   0xe7aa
  417304:	add    ebp,0xa
  417307:	shl    DWORD PTR [ecx+0x1c],1
  41730a:	fadd   st(3),st
  41730c:	push   ss
  41730d:	cli    
  41730e:	js     0x417343
  417310:	jmp    0x7b6dabf8
  417315:	cmp    al,0xbf
  417317:	sbb    esp,DWORD PTR [edx-0x55e98b67]
  41731d:	mov    esi,DWORD PTR [ebp+0x59]
  417320:	sbb    eax,0x470b2fe1
  417325:	inc    eax
  417326:	add    dh,dl
  417328:	nop
  417329:	adc    BYTE PTR [di+0xd],ch
  41732d:	call   0x692:0x4c0ac6c7
  417334:	out    dx,al
  417335:	fiadd  WORD PTR [ebp-0x64e7d459]
  41733b:	dec    esp
  41733c:	les    ecx,FWORD PTR [ebx-0x4b]
  41733f:	sub    dl,BYTE PTR ds:0x3db74c0
  417345:	pop    ds
  417346:	dec    ebx
  417347:	sahf   
  417348:	inc    ebp
  417349:	paddb  mm1,QWORD PTR [eax]
  41734c:	cs fisttp WORD PTR ds:[edx+esi*2]
  417351:	(bad)  
  417352:	jge    0x4172de
  417354:	mov    cs,edx
  417356:	call   0x4a2f:0x975cd390
  41735d:	icebp  
  41735e:	out    dx,eax
  41735f:	(bad)  
  417360:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417361:	mov    edi,0x59368ffb
  417366:	cmp    al,0x45
  417369:	pop    ss
  41736a:	jne    0x4173a0
  41736c:	sub    esp,0x58
  41736f:	mov    ds:0x23705a93,eax
  417374:	repz jg 0x4173ad
  417377:	xchg   ebp,eax
  417378:	add    al,0x50
  41737a:	and    BYTE PTR [edx+0x21],dh
  41737d:	xor    eax,0xec2da29b
  417382:	push   ebx
  417383:	stos   DWORD PTR es:[edi],eax
  417384:	std    
  417385:	xchg   edi,eax
  417386:	inc    esi
  417387:	js     0x4173af
  417389:	pop    edx
  41738a:	or     eax,0x2359c63b
  41738f:	stos   DWORD PTR es:[edi],eax
  417390:	pushf  
  417391:	sbb    DWORD PTR [eax+0x3a],edi
  417394:	loope  0x4173b6
  417396:	popa   
  417397:	mov    edi,0x1e720b61
  41739c:	jmp    0x4173c1
  41739e:	mov    eax,0x5d7daceb
  4173a3:	xor    al,0x79
  4173a5:	jae    0x4173a5
  4173a7:	repz xor esp,DWORD PTR [ecx]
  4173aa:	inc    ecx
  4173ab:	data16 aad 0x83
  4173ae:	mov    ecx,0x6afc9f46
  4173b3:	mov    DWORD PTR [edi],ecx
  4173b5:	adc    DWORD PTR [edx-0x59741efc],edi
  4173bb:	adc    DWORD PTR [esi-0x45c15c81],ebp
  4173c1:	pop    esp
  4173c2:	xor    ebp,DWORD PTR [eax+edx*8]
  4173c5:	rcr    DWORD PTR [eax+0x37d54843],cl
  4173cb:	cmp    eax,0xded3d82c
  4173d0:	pushf  
  4173d1:	pop    ebx
  4173d2:	fsub   QWORD PTR [esi+0x491c764f]
  4173d8:	dec    edi
  4173d9:	loope  0x41744d
  4173db:	mov    ds:0xb404597c,al
  4173e0:	and    DWORD PTR [esi-0x66],edx
  4173e3:	call   0x9819:0x7d7c0a0
  4173ea:	js     0x4173fd
  4173ec:	sbb    esp,DWORD PTR [ebx-0x6d90579b]
  4173f2:	jle    0x417462
  4173f4:	pop    edx
  4173f5:	in     eax,dx
  4173f6:	lahf   
  4173f7:	and    eax,0x8cde2161
  4173fc:	pop    esp
  4173fd:	rcl    BYTE PTR [ecx+0x43],cl
  417400:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417401:	jno    0x417449
  417403:	or     al,0xbe
  417405:	push   ss
  417406:	dec    ebx
  417407:	sub    eax,0xba169445
  41740c:	fwait
  41740d:	fs jo  0x41740a
  417410:	nop
  417411:	push   ss
  417412:	in     al,0x26
  417414:	mov    al,0xfe
  417416:	(bad)  
  417417:	cmp    bh,BYTE PTR [esi-0x21]
  41741a:	xor    ecx,ebp
  41741c:	ret    0x5968
  41741f:	dec    edx
  417420:	aaa    
  417421:	lods   eax,DWORD PTR ds:[esi]
  417422:	ins    BYTE PTR es:[edi],dx
  417423:	(bad)  
  417424:	push   0x39c624b6
  417429:	popa   
  41742a:	mov    DWORD PTR [ebx+0x61],esp
  41742d:	inc    esi
  41742e:	mov    ch,0xd3
  417430:	inc    ebp
  417431:	xor    edi,DWORD PTR [edx+0x291912a4]
  417437:	(bad)  
  417439:	cmp    bh,BYTE PTR [edi]
  41743b:	xchg   DWORD PTR [ebx],esp
  41743d:	push   edi
  41743e:	push   eax
  41743f:	stos   DWORD PTR es:[edi],eax
  417440:	inc    edx
  417441:	mov    ebp,0x20d54a07
  417446:	dec    edi
  417447:	stos   BYTE PTR es:[edi],al
  417448:	dec    ebp
  417449:	xor    al,BYTE PTR [ebp+0xe9353e5]
  41744f:	lods   al,BYTE PTR ds:[esi]
  417450:	or     al,0x33
  417452:	mov    ebx,0xef368493
  417457:	imul   esp,DWORD PTR ds:0x44123bc4,0xb7670d45
  417461:	cmp    ah,bl
  417463:	mov    dh,0x48
  417465:	cli    
  417466:	cmp    bl,ah
  417468:	sub    BYTE PTR [ebp-0x305ebd84],bh
  41746e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41746f:	rcr    DWORD PTR [edx+0x1681e014],0xf7
  417476:	shr    BYTE PTR [ebx+0x53],0x1b
  41747a:	or     edi,DWORD PTR [edx]
  41747c:	scas   al,BYTE PTR es:[edi]
  41747d:	mov    esp,ecx
  41747f:	xor    DWORD PTR [ebp+eiz*8-0x44],ecx
  417483:	loop   0x4174d9
  417485:	add    al,0xca
  417487:	xchg   esi,eax
  417488:	xor    DWORD PTR [ebp+0x4f],edi
  41748b:	call   0x242a5b75
  417490:	sub    ch,bl
  417492:	in     al,dx
  417493:	push   0x4b
  417495:	mov    al,0x64
  417497:	(bad)  
  417498:	jg     0x417511
  41749a:	mov    ebp,0x497715e2
  41749f:	adc    edi,edi
  4174a1:	dec    edx
  4174a2:	out    0xe0,eax
  4174a4:	cmp    eax,0xe1bee52e
  4174a9:	retf   
  4174aa:	iret   
  4174ab:	aas    
  4174ac:	and    eax,0xb125d4d1
  4174b1:	test   BYTE PTR ss:[eax+0x4c],bh
  4174b5:	popa   
  4174b6:	scas   eax,DWORD PTR es:[edi]
  4174b7:	and    al,0x6f
  4174b9:	sar    dl,cl
  4174bb:	stos   DWORD PTR es:[edi],eax
  4174bc:	inc    ecx
  4174bd:	xor    edx,esp
  4174bf:	xlat   BYTE PTR ds:[ebx]
  4174c0:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174c2:	popa   
  4174c3:	fdivp  st(1),st
  4174c5:	or     BYTE PTR [ebp-0x394d42ed],bh
  4174cb:	dec    esp
  4174cc:	stc    
  4174cd:	lods   al,BYTE PTR ds:[esi]
  4174ce:	ror    DWORD PTR [edx],0x5f
  4174d1:	and    eax,0x61d43c89
  4174d6:	mov    ch,0x4a
  4174d8:	test   ah,bl
  4174da:	aad    0x92
  4174dc:	add    al,0x3c
  4174de:	push   esp
  4174df:	scas   eax,DWORD PTR es:[edi]
  4174e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174e1:	fs add al,0xa5
  4174e4:	and    edx,eax
  4174e6:	or     BYTE PTR [ebx],cl
  4174e8:	iret   
  4174e9:	call   0xedd2892f
  4174ee:	jo     0x417502
  4174f0:	sti    
  4174f1:	or     bl,BYTE PTR [ecx]
  4174f3:	and    ah,BYTE PTR [edi]
  4174f5:	mov    al,0x55
  4174f7:	jecxz  0x417543
  4174f9:	shr    ah,1
  4174fb:	jmp    0x9c1e:0x62601753
  417502:	or     eax,0x12198a71
  417507:	std    
  417508:	add    BYTE PTR [ebx-0x1633798c],al
  41750e:	aam    0xc3
  417510:	and    eax,0xd9eda216
  417515:	sub    al,0x39
  417517:	setb   bl
  41751a:	dec    edx
  41751b:	iret   
  41751c:	inc    eax
  41751d:	ss pushf 
  41751f:	pop    ebp
  417520:	jle    0x4174aa
  417522:	add    esp,DWORD PTR [ebp-0x10]
  417525:	idiv   ebx
  417527:	adc    bh,ch
  417529:	cmp    bl,cl
  41752b:	adc    eax,0xb7423717
  417530:	push   ebp
  417531:	sub    al,cl
  417533:	sbb    ch,BYTE PTR [ecx+0x14]
  417536:	adc    ebp,esp
  417538:	outs   dx,DWORD PTR ds:[esi]
  417539:	adc    esi,DWORD PTR [ebx]
  41753b:	push   esp
  41753c:	or     ebp,DWORD PTR [eax+0x65]
  41753f:	std    
  417540:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417541:	pop    es
  417542:	pushf  
  417543:	xchg   BYTE PTR [esi],bl
  417545:	aas    
  417546:	mov    edi,0xe09bacee
  41754b:	adc    ah,bh
  41754d:	ds mov ch,0x15
  417550:	sub    al,0x2d
  417552:	dec    edx
  417553:	pop    edi
  417554:	mov    bl,0x93
  417556:	scas   eax,DWORD PTR es:[edi]
  417557:	call   DWORD PTR [ecx+edi*1+0x3add0706]
  41755e:	mov    al,ds:0x438e164c
  417563:	or     ecx,DWORD PTR [edi+ebx*1+0x22d60615]
  41756a:	add    eax,0xb3c22e7e
  41756f:	mov    cs,eax
  417571:	xchg   edx,eax
  417572:	or     DWORD PTR [ebx+edi*4+0xc],0xffffff82
  417577:	sbb    eax,0x4ee52b4f
  41757c:	nop
  41757d:	cmp    eax,0xf88c42c4
  417582:	mov    ah,0xce
  417584:	and    eax,0x73739b52
  417589:	aam    0x1c
  41758b:	stos   BYTE PTR es:[edi],al
  41758c:	lods   eax,DWORD PTR ds:[esi]
  41758d:	xchg   edx,eax
  41758e:	cld    
  41758f:	je     0x417561
  417591:	pop    es
  417592:	hlt    
  417593:	sbb    eax,0x3b466f1f
  417598:	sub    eax,0xe95889e7
  41759d:	or     BYTE PTR [edx],al
  41759f:	dec    esp
  4175a0:	addr16 jmp 0x3f59:0xbe0f7bde
  4175a8:	jno    0x41761d
  4175aa:	mov    eax,ds:0x358e674c
  4175af:	enter  0x1296,0xa8
  4175b3:	fstp   TBYTE PTR [ecx+0x13]
  4175b6:	icebp  
  4175b7:	jl     0x417613
  4175b9:	pop    es
  4175ba:	addr16 jae 0x417632
  4175bd:	repz jmp FWORD PTR [eax-0x13474f26]
  4175c4:	mov    esp,0x2b4e2298
  4175c9:	(bad)
  4175cc:	and    DWORD PTR ds:0x39d9541e,0xb5a1c1e
  4175d6:	dec    ebp
  4175d7:	push   edx
  4175d8:	cmc    
  4175d9:	clc    
  4175da:	imul   edx,DWORD PTR [esi-0x20],0xffffffec
  4175de:	fwait
  4175df:	aam    0xb6
  4175e1:	push   ebx
  4175e2:	and    BYTE PTR fs:[eax-0x65],0x8f
  4175e7:	xor    eax,0x4748068
  4175ec:	fild   DWORD PTR ds:0x47f0c6b5
  4175f2:	dec    esp
  4175f3:	loop   0x417575
  4175f5:	sbb    dh,BYTE PTR [ecx+0x2b]
  4175f8:	xor    eax,0x26b8d7cf
  4175fd:	retf   
  4175fe:	aad    0x6b
  417600:	jb     0x417671
  417602:	sar    DWORD PTR [esi-0x461b581a],1
  417608:	sbb    bh,bh
  41760a:	arpl   WORD PTR [esi+0x68],dx
  41760d:	mov    esp,0xb5e66e5
  417612:	xchg   ecx,eax
  417613:	mov    DWORD PTR [ebp+ebx*4+0x5f],ecx
  417617:	pop    ds
  417618:	pop    eax
  417619:	sar    BYTE PTR [edx],1
  41761b:	jo     0x4175ff
  41761d:	sbb    ecx,DWORD PTR [edi+0x432995cd]
  417623:	pop    ss
  417624:	xchg   BYTE PTR [esp+ecx*8],bh
  417627:	popf   
  417628:	mov    eax,ds:0xe5785373
  41762d:	into   
  41762e:	mov    dh,0xaf
  417630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417631:	cli    
  417632:	or     al,0x8e
  417634:	cwde   
  417635:	das    
  417636:	lock pop esi
  417638:	xchg   ebp,eax
  417639:	icebp  
  41763a:	(bad)  
  41763b:	shl    DWORD PTR [edx],cl
  41763d:	nop
  41763e:	sar    DWORD PTR [ecx-0x20],0xf0
  417642:	jmp    0xed19d4e4
  417647:	and    BYTE PTR [ebx],dl
  417649:	ja     0x417640
  41764b:	aam    0x73
  41764d:	sahf   
  41764e:	ja     0x4176af
  417650:	fimul  DWORD PTR [esp+ebx*1]
  417653:	sub    DWORD PTR [esi-0x215a9690],edi
  417659:	jno    0x4176a7
  41765b:	xor    eax,0x603e0415
  417660:	mov    ebp,DWORD PTR [edx-0x3e1418cf]
  417666:	daa    
  417667:	rcl    DWORD PTR [ebx],1
  417669:	mov    dh,ch
  41766b:	sub    eax,0x95ca1005
  417670:	ins    BYTE PTR es:[edi],dx
  417671:	outs   dx,BYTE PTR ds:[esi]
  417672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417673:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417674:	icebp  
  417675:	fbstp  TBYTE PTR [ebp-0x7]
  417678:	mov    edi,0xf4156eab
  41767d:	xor    al,0xf0
  41767f:	out    0x6,eax
  417681:	sbb    eax,0x266a5ab2
  417686:	mov    ebp,0xd95ffe5f
  41768b:	inc    edi
  41768c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41768d:	les    ecx,FWORD PTR [esi-0x2e47b00b]
  417693:	sub    DWORD PTR [ebp+0x52faeeb4],esi
  417699:	mov    ds:0xe0572465,al
  41769e:	sub    eax,0x4caea21c
  4176a3:	cpuid  
  4176a5:	cld    
  4176a6:	mov    dl,0x26
  4176a8:	ds jge 0x4176de
  4176ab:	fsub   st,st(6)
  4176ad:	inc    edi
  4176ae:	out    dx,al
  4176af:	aaa    
  4176b0:	push   eax
  4176b1:	sbb    dl,BYTE PTR [esi+eiz*8]
  4176b4:	jb     0x417660
  4176b6:	iret   
  4176b7:	loop   0x417679
  4176b9:	sub    BYTE PTR [ebp+0x57],dh
  4176bc:	and    eax,0xf9e22ff5
  4176c1:	xor    eax,0xf71ef75c
  4176c6:	int    0x13
  4176c8:	xor    BYTE PTR [ebx+eiz*1-0x3e],dh
  4176cc:	xor    BYTE PTR gs:[ebx+0x515da9dd],cl
  4176d3:	in     eax,dx
  4176d4:	enter  0xac9e,0xd9
  4176d8:	ss dec edx
  4176da:	push   ebp
  4176db:	xor    esi,ebp
  4176dd:	out    dx,al
  4176de:	mov    cs,WORD PTR [ecx]
  4176e0:	ins    DWORD PTR es:[edi],dx
  4176e1:	cmp    al,0x42
  4176e3:	inc    esp
  4176e4:	fistp  WORD PTR [ecx-0x5c249d47]
  4176ea:	js     0x41769d
  4176ec:	push   cs
  4176ed:	pushf  
  4176ee:	xchg   esp,eax
  4176ef:	rol    ah,0x48
  4176f2:	js     0x417728
  4176f4:	ins    DWORD PTR es:[edi],dx
  4176f5:	lahf   
  4176f6:	loop   0x4176b7
  4176f8:	mov    edi,0xe20ea14f
  4176fd:	mov    bl,BYTE PTR [eax+eiz*2-0xab3ae1c]
  417704:	pop    si
  417706:	dec    eax
  417707:	ja     0x417766
  417709:	inc    edx
  41770a:	out    0x92,eax
  41770c:	dec    edx
  41770d:	and    DWORD PTR [esi+esi*4+0x74],esp
  417711:	add    al,0xf9
  417713:	aad    0xd7
  417715:	mov    bl,0xc5
  417717:	es cs test al,0x2f
  41771b:	push   eax
  41771c:	into   
  41771d:	cmp    al,0xe2
  41771f:	test   BYTE PTR [edx-0x4b],0xc4
  417723:	mov    esp,0xe4c92ead
  417728:	sbb    cl,BYTE PTR [ecx-0x65f27692]
  41772e:	call   0xda69:0x81208c2f
  417735:	in     eax,dx
  417736:	pusha  
  417737:	push   ss
  417738:	in     al,dx
  417739:	add    bh,BYTE PTR [ebp+0x49]
  41773c:	(bad)  
  41773d:	out    0x4b,al
  41773f:	mov    edi,DWORD PTR [edx-0x67]
  417742:	inc    ebx
  417743:	pop    es
  417744:	jmp    0x4176e6
  417746:	scas   eax,DWORD PTR es:[edi]
  417747:	mov    ecx,0xc549561a
  41774c:	fisubr WORD PTR gs:[ebx+0x4]
  417750:	ds push 0x76
  417753:	add    BYTE PTR [eax],bl
  417755:	mov    bh,0xcc
  417757:	push   0x32
  417759:	push   esp
  41775a:	lods   al,BYTE PTR ds:[esi]
  41775b:	leave  
  41775c:	xchg   esp,eax
  41775d:	outs   dx,BYTE PTR ds:[esi]
  41775e:	xor    al,al
  417760:	je     0x41776e
  417762:	aad    0xe8
  417764:	les    ebx,FWORD PTR [ecx+0x4dd2ba49]
  41776a:	inc    edi
  41776b:	jne    0x41775c
  41776d:	out    dx,al
  41776e:	jge    0x4176f0
  417770:	pop    ebp
  417771:	(bad)  
  417772:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417773:	loopne 0x41771e
  417775:	gs daa 
  417777:	std    
  417778:	daa    
  417779:	ins    BYTE PTR es:[edi],dx
  41777a:	xor    edx,ecx
  41777c:	retf   0x845c
  41777f:	out    dx,eax
  417780:	adc    eax,0xb0b86c64
  417785:	xchg   ecx,eax
  417786:	inc    esi
  417787:	inc    ecx
  417788:	int3   
  417789:	mov    ebp,ecx
  41778b:	cs add ecx,esp
  41778e:	fisubr WORD PTR [esi+0x93a8c90]
  417794:	and    DWORD PTR [ecx],ebp
  417796:	aam    0xf3
  417798:	out    0xd3,eax
  41779a:	out    dx,al
  41779b:	mov    esi,0x7d291789
  4177a0:	repz lock xchg esi,eax
  4177a3:	and    DWORD PTR [esi],eax
  4177a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177a6:	sub    eax,0xf42bfd17
  4177ab:	xor    ebp,DWORD PTR [esi+0x4c5b8c59]
  4177b1:	(bad)  
  4177b2:	lahf   
  4177b3:	cdq    
  4177b4:	(bad)  
  4177b6:	fnstenv [ebx-0x1f]
  4177b9:	push   edx
  4177ba:	(bad)  
  4177bb:	fadd   QWORD PTR [edx]
  4177bd:	lahf   
  4177be:	gs sbb al,0x57
  4177c1:	mov    esp,0x78602e96
  4177c6:	or     esp,DWORD PTR [ebp+0x3c7dfdc0]
  4177cc:	fistp  WORD PTR [esi-0x4cfb695b]
  4177d2:	stc    
  4177d3:	xor    eax,0x8eb789e6
  4177d8:	cmp    eax,0x4a631cd9
  4177dd:	xor    ebp,DWORD PTR [esp+ecx*4+0x10]
  4177e1:	and    al,0x1c
  4177e3:	(bad)  
  4177e5:	sar    BYTE PTR [ebp+0x30],1
  4177e8:	loope  0x4177b6
  4177ea:	cld    
  4177eb:	add    DWORD PTR es:[edx],edi
  4177ee:	xchg   ecx,eax
  4177ef:	and    cl,BYTE PTR [ebx+0x4078ef1a]
  4177f5:	pop    edi
  4177f6:	push   ds
  4177f7:	push   ss
  4177f8:	call   DWORD PTR [edi-0x11]
  4177fb:	jmp    0xa21f:0x11a7b02f
  417802:	mov    fs,ebp
  417804:	retf   
  417805:	dec    ebp
  417806:	inc    eax
  417807:	shr    bh,1
  417809:	loopne 0x4177c4
  41780b:	mov    edi,0x8a5c119f
  417810:	repz and eax,0x6adf55bf
  417816:	push   cs
  417817:	(bad)  
  417818:	lock lock outs dx,BYTE PTR ds:[esi]
  41781b:	push   esp
  41781c:	dec    esp
  41781d:	xor    eax,DWORD PTR [ebp-0x635453fd]
  417823:	sub    al,0xef
  417825:	pusha  
  417826:	add    edi,DWORD PTR [eax-0x17]
  417829:	in     al,0x91
  41782b:	sbb    ebp,DWORD PTR [edi+0x615643a5]
  417831:	mov    ebp,0xb04b41d1
  417836:	fdivr  DWORD PTR [ecx+0x9468fa2]
  41783c:	lahf   
  41783d:	pop    esp
  41783e:	mov    ecx,0x834f5918
  417843:	retf   0x2e8a
  417846:	sbb    ecx,DWORD PTR [edx+0x6266970d]
  41784c:	mov    esp,DWORD PTR [ebx+0x65]
  41784f:	xor    DWORD PTR [edi-0x363f7df4],ebp
  417855:	push   ebp
  417856:	nop
  417857:	repz fistp WORD PTR [eax]
  41785a:	xor    BYTE PTR [edx+ebp*1-0x21bad8d4],ch
  417861:	aad    0x2c
  417863:	add    al,ah
  417865:	jmp    0x12cadc79
  41786a:	push   edx
  41786b:	push   0xffffffcc
  41786d:	xchg   ebp,eax
  41786e:	inc    esp
  41786f:	mov    ah,0x71
  417871:	(bad)  
  417872:	cdq    
  417873:	out    0x41,al
  417875:	mov    dh,0x1f
  417877:	aas    
  417878:	add    dh,BYTE PTR [esi-0x7f]
  41787b:	(bad)  
  41787c:	and    esi,DWORD PTR [ecx+0x22963228]
  417882:	push   fs
  417884:	stc    
  417885:	mov    edi,0xcf0c1de
  41788a:	loopne 0x417838
  41788c:	add    al,BYTE PTR [eax+0x487d2ea6]
  417892:	jecxz  0x4178ad
  417894:	fld    DWORD PTR [eax]
  417896:	cli    
  417897:	xchg   esp,eax
  417898:	(bad)  
  417899:	mov    edi,0xc5c0712
  41789e:	outs   dx,BYTE PTR ds:[esi]
  41789f:	dec    ebp
  4178a0:	(bad)  
  4178a1:	loope  0x4178d7
  4178a3:	inc    ebx
  4178a4:	sub    bh,cl
  4178a6:	retf   0x38a0
  4178a9:	(bad)  
  4178ab:	adc    eax,0xe59c7514
  4178b0:	dec    ebx
  4178b1:	mov    BYTE PTR [edi-0x25],dh
  4178b4:	sub    eax,0x7cb0931c
  4178b9:	jmp    0xe782:0x477bdf83
  4178c0:	stos   DWORD PTR es:[edi],eax
  4178c1:	call   0x6f9ab0c2
  4178c6:	fwait
  4178c7:	mov    ah,0x3
  4178c9:	retf   0x1d31
  4178cc:	cmp    BYTE PTR [ebp-0x135fdc8f],0xe9
  4178d3:	push   ecx
  4178d4:	sub    BYTE PTR [eax+0x62867713],dl
  4178da:	in     eax,dx
  4178db:	mov    al,0xf7
  4178dd:	pop    ebx
  4178de:	fld    TBYTE PTR [eax]
  4178e0:	pop    ds
  4178e1:	jmp    0x4178f2
  4178e3:	pop    DWORD PTR [esi+ebx*1+0xb]
  4178e7:	and    eax,0xf44cea8c
  4178ec:	pushf  
  4178ed:	mov    cl,0x41
  4178ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178f0:	nop
  4178f1:	and    eax,0xf08d734c
  4178f6:	sub    edx,edi
  4178f8:	cmp    eax,0x82c46082
  4178fd:	arpl   WORD PTR [esi+0x20f90183],sp
  417903:	and    bl,dl
  417905:	xchg   ebp,eax
  417906:	mov    cl,0x75
  417908:	and    DWORD PTR [esp+eax*4-0x7f],ebx
  41790c:	in     eax,0xcf
  41790e:	fadd   st,st(4)
  417910:	cmp    ch,dl
  417912:	fwait
  417913:	js     0x41792e
  417915:	cmp    bh,BYTE PTR [edx+ecx*8+0x3d]
  417919:	daa    
  41791a:	mov    WORD PTR [ebp+0x69d1eb7e],?
  417920:	inc    eax
  417921:	sub    ebx,DWORD PTR [ebp+0x54]
  417924:	(bad)  
  417925:	rcr    BYTE PTR es:[esi+0x3b],cl
  417929:	scas   eax,DWORD PTR es:[edi]
  41792a:	mov    gs,WORD PTR [esi+0x7c]
  41792d:	jo     0x417998
  41792f:	mov    al,0x9
  417931:	int3   
  417932:	into   
  417933:	inc    esi
  417934:	pop    ss
  417935:	adc    al,0xdd
  417937:	mov    al,0x65
  417939:	out    0xec,al
  41793b:	fcomp  DWORD PTR [edx]
  41793d:	fsubr  DWORD PTR [ebp-0xa]
  417940:	(bad)  [esi-0x74]
  417943:	in     al,0x79
  417945:	or     al,0xaf
  417947:	pop    edx
  417948:	and    al,0x1b
  41794a:	or     ch,bh
  41794c:	push   cs
  41794d:	xchg   ecx,eax
  41794e:	dec    ecx
  41794f:	stc    
  417950:	aaa    
  417951:	xchg   esi,eax
  417952:	(bad)  
  417953:	(bad)  
  417955:	sti    
  417956:	addr16 jge 0x4178e6
  417959:	arpl   WORD PTR [ecx+0x15],ax
  41795c:	shl    BYTE PTR [edi+0x73fdd99a],1
  417962:	mov    ds:0x40fd370a,al
  417967:	call   FWORD PTR [ecx]
  417969:	ds cmp esp,ebp
  41796c:	cdq    
  41796d:	mov    edi,0x8317250d
  417972:	inc    eax
  417973:	fistp  DWORD PTR [eax-0x1fd1cdf2]
  417979:	cmp    edx,DWORD PTR [ebp+0x27]
  41797c:	pop    ds
  41797d:	cld    
  41797e:	push   edi
  41797f:	and    al,0x4b
  417981:	(bad)  
  417982:	xor    DWORD PTR [ebp+0x5e],edi
  417985:	outs   dx,BYTE PTR ds:[esi]
  417986:	call   0x2cd9:0x63b75782
  41798d:	stos   DWORD PTR es:[edi],eax
  41798e:	pop    esp
  41798f:	mov    dl,0xcb
  417991:	stos   DWORD PTR es:[edi],eax
  417992:	push   0xffffffc6
  417994:	popfw  
  417996:	pop    ecx
  417997:	add    ecx,DWORD PTR [ebx]
  417999:	ja     0x4179a9
  41799b:	xor    dl,BYTE PTR [esi-0x59]
  41799e:	sbb    eax,0xb4a6c8b2
  4179a3:	mov    edx,ebp
  4179a5:	int3   
  4179a6:	imul   ecx,DWORD PTR [ecx-0x53],0x97a0ba03
  4179ad:	popa   
  4179ae:	mov    eax,0x83c10072
  4179b3:	mov    ebp,0x45d1f68b
  4179b8:	scas   al,BYTE PTR es:[edi]
  4179b9:	sbb    ch,BYTE PTR [eax]
  4179bb:	and    eax,0xd434beca
  4179c0:	jae    0x417942
  4179c2:	sbb    ebp,DWORD PTR [ebx]
  4179c4:	pop    ds
  4179c5:	stc    
  4179c6:	popf   
  4179c7:	mov    ebx,0x25674eb4
  4179cc:	inc    eax
  4179cd:	push   esi
  4179ce:	cmp    eax,0x83de1876
  4179d3:	jo     0x4179b0
  4179d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179d6:	add    eax,0x1ecbc988
  4179db:	(bad)  
  4179dc:	shr    ah,1
  4179de:	pop    edi
  4179df:	dec    edi
  4179e0:	(bad)  
  4179e1:	in     eax,dx
  4179e2:	jg     0x417a18
  4179e4:	fldcw  WORD PTR [eax-0x79]
  4179e7:	test   BYTE PTR [esi],ch
  4179e9:	pop    ecx
  4179ea:	cld    
  4179eb:	sbb    esp,0x7940e649
  4179f1:	inc    BYTE PTR [ebx]
  4179f3:	mov    ds:0x6f1c4cab,eax
  4179f8:	scas   eax,DWORD PTR es:[edi]
  4179f9:	cmp    edi,DWORD PTR [edx]
  4179fb:	inc    ebp
  4179fc:	in     al,0x36
  4179fe:	in     al,dx
  4179ff:	repz test ah,al
  417a02:	xchg   edi,eax
  417a03:	jbe    0x4179b2
  417a05:	int    0x85
  417a07:	shl    DWORD PTR [eax],0xad
  417a0a:	dec    esp
  417a0b:	jno    0x41798e
  417a0d:	stos   BYTE PTR es:[edi],al
  417a0e:	mov    ds:0xd49938fa,eax
  417a13:	jnp    0x417a67
  417a15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a16:	stos   BYTE PTR es:[edi],al
  417a17:	fcomp  DWORD PTR [ebp+0x65f535cc]
  417a1d:	inc    esi
  417a1e:	in     al,dx
  417a1f:	out    0xc7,al
  417a21:	out    dx,eax
  417a22:	fild   DWORD PTR [eax-0x6f]
  417a25:	add    DWORD PTR [ebx+0x18b48a41],0x5580b3c2
  417a2f:	xor    al,0x28
  417a31:	and    bh,bl
  417a33:	push   ds
  417a34:	scas   eax,DWORD PTR es:[edi]
  417a35:	dec    eax
  417a36:	push   edx
  417a37:	jmp    0x417a69
  417a39:	xor    edi,eax
  417a3b:	dec    ecx
  417a3c:	inc    edx
  417a3d:	xchg   BYTE PTR [ebp-0x12f1d09c],dl
  417a43:	aaa    
  417a44:	cmp    esi,ebp
  417a46:	in     eax,0x52
  417a48:	fiadd  DWORD PTR [eax+0x7a53f7dc]
  417a4e:	outs   dx,BYTE PTR ds:[esi]
  417a4f:	jb     0x417a32
  417a51:	cmp    DWORD PTR [ecx-0x35],ebp
  417a54:	addr16 sub eax,0xfebfc62e
  417a5a:	(bad)  [ecx+0x2a5309c1]
  417a60:	xor    al,BYTE PTR [esi+0x54]
  417a63:	add    edx,DWORD PTR [edi-0x6d]
  417a66:	cmp    bh,BYTE PTR [eax+ebx*8]
  417a69:	nop
  417a6a:	into   
  417a6b:	jp     0x417aaf
  417a6d:	lea    edi,[edi-0x75]
  417a70:	mov    gs,eax
  417a72:	repz dec esp
  417a74:	fist   WORD PTR [esi]
  417a76:	cmp    DWORD PTR [eax],edi
  417a78:	adc    al,0xf8
  417a7a:	push   eax
  417a7b:	jb     0x417ae2
  417a7d:	xor    al,0xc9
  417a7f:	(bad)  
  417a80:	fdivp  st(5),st
  417a82:	inc    ebp
  417a83:	push   esi
  417a84:	sbb    BYTE PTR [edx],0xa1
  417a87:	push   0x7c
  417a89:	dec    ebx
  417a8a:	retf   0xb6c9
  417a8d:	or     esp,ecx
  417a8f:	scas   eax,DWORD PTR es:[edi]
  417a90:	sub    edx,eax
  417a92:	pop    ss
  417a93:	fsubr  QWORD PTR [edi+edi*1+0x4a28e332]
  417a9a:	xor    BYTE PTR [ebp-0x5a],dl
  417a9d:	inc    edi
  417a9e:	mov    ah,0x79
  417aa0:	ror    DWORD PTR [eax+0xf],0x30
  417aa4:	sub    bh,BYTE PTR [eax-0xc0afe6e]
  417aaa:	mov    ebp,?
  417aac:	push   esp
  417aad:	cmp    edx,DWORD PTR [ebp+0x3c]
  417ab0:	and    bh,bh
  417ab2:	jge    0x417ac5
  417ab4:	les    edx,FWORD PTR ss:[ecx]
  417ab7:	aad    0x7c
  417ab9:	cmp    BYTE PTR [edx+0x670f0dd9],bh
  417abf:	pop    ds
  417ac0:	or     ecx,0x3e
  417ac3:	mov    ds:0xb803461d,al
  417ac8:	sub    cl,BYTE PTR [eax+0x27]
  417acb:	jg     0x417a97
  417acd:	cmp    ecx,DWORD PTR [eax]
  417acf:	test   al,0xd
  417ad1:	aaa    
  417ad2:	jb     0x417b27
  417ad4:	sbb    BYTE PTR [ebx+ecx*8-0x49],0x3b
  417ad9:	xchg   esp,eax
  417ada:	sbb    ebx,esp
  417adc:	jnp    0x417af0
  417ade:	add    ebx,DWORD PTR [ecx+0x6e]
  417ae1:	xchg   esp,eax
  417ae2:	mov    al,BYTE PTR [edx-0x725b2746]
  417ae8:	sub    esi,edx
  417aea:	push   edi
  417aeb:	pop    ss
  417aec:	int    0x8c
  417aee:	mov    al,0x87
  417af1:	cmp    ecx,DWORD PTR [edx]
  417af3:	sbb    BYTE PTR es:[ebx+0x272fab3],dl
  417afa:	cwde   
  417afb:	into   
  417afc:	mov    bl,0xa
  417afe:	scas   eax,DWORD PTR es:[edi]
  417aff:	pushf  
  417b00:	test   DWORD PTR ds:0x35a00649,eax
  417b06:	ss jae 0x417b60
  417b09:	addr16 mov ch,0x69
  417b0c:	sub    ebp,DWORD PTR [edi]
  417b0e:	dec    edx
  417b0f:	bnd je 0x417ad8
  417b12:	out    dx,al
  417b13:	in     al,dx
  417b14:	lea    edi,[ebx]
  417b16:	leave  
  417b17:	das    
  417b18:	xor    eax,ecx
  417b1a:	adc    edx,edx
  417b1c:	pushf  
  417b1d:	or     BYTE PTR [edi],0xbe
  417b20:	stc    
  417b21:	(bad)  
  417b22:	cmp    dl,bh
  417b24:	inc    ebx
  417b25:	mov    ebx,0xd0ae0be1
  417b2a:	xor    cl,BYTE PTR [ecx+0x50]
  417b2d:	and    ebx,edx
  417b2f:	pop    ecx
  417b30:	cmc    
  417b31:	rcl    DWORD PTR [edi+esi*8],0xe7
  417b35:	popa   
  417b36:	clc    
  417b37:	sbb    eax,0xd598869c
  417b3c:	dec    ecx
  417b3d:	out    0xa5,al
  417b3f:	and    edi,ebp
  417b41:	fidiv  DWORD PTR [eax-0x470b6a7a]
  417b47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b48:	ftst   
  417b4a:	cmp    al,0x5b
  417b4c:	pop    edx
  417b4d:	dec    esp
  417b4e:	loopne 0x417b49
  417b50:	mov    esi,0x8f9b188c
  417b55:	gs push ebp
  417b57:	mov    esp,0x68b554b3
  417b5c:	xor    eax,0x43051161
  417b61:	add    eax,0xc148a088
  417b66:	dec    ebx
  417b67:	jge    0x417afa
  417b69:	popf   
  417b6a:	fs mov ah,0x8e
  417b6d:	sub    ah,dh
  417b6f:	mov    ch,0x5e
  417b71:	cmp    ebp,DWORD PTR [ebp+0x1f]
  417b74:	inc    ebx
  417b75:	push   ss
  417b76:	pop    ss
  417b77:	ins    BYTE PTR es:[edi],dx
  417b78:	dec    esi
  417b79:	pushf  
  417b7a:	jae    0x417b57
  417b7c:	sub    dh,bl
  417b7e:	fdiv   DWORD PTR [ecx-0x60]
  417b81:	rcl    BYTE PTR [edx+ebp*1],0x81
  417b85:	retf   0x371c
  417b88:	push   esi
  417b89:	mov    esp,0xc04206c9
  417b8e:	jle    0x417b7b
  417b90:	mov    edx,0x1e65cea
  417b95:	outs   dx,BYTE PTR ds:[esi]
  417b96:	jp     0x417bf1
  417b98:	fnstsw WORD PTR [ecx+0x5dae8d5]
  417b9e:	push   0x40
  417ba0:	inc    ebx
  417ba1:	lea    ebp,[ecx-0x1f80596b]
  417ba7:	push   0xdb047525
  417bac:	leave  
  417bad:	jo     0x417bcd
  417baf:	(bad)  
  417bb0:	cmp    BYTE PTR [ebp-0x75],dl
  417bb3:	int3   
  417bb4:	mov    al,0xe0
  417bb6:	scas   al,BYTE PTR es:[edi]
  417bb7:	push   eax
  417bb8:	sub    ch,BYTE PTR [ebx+0x47]
  417bbb:	scas   al,BYTE PTR es:[edi]
  417bbc:	fs popa 
  417bbe:	test   eax,0x2e715feb
  417bc3:	and    DWORD PTR [edi+0x2b],0xcc436824
  417bca:	or     dh,ch
  417bcc:	xchg   edi,eax
  417bcd:	or     DWORD PTR [ebx],ebx
  417bcf:	and    BYTE PTR [ebx-0xd36676b],bl
  417bd5:	inc    ebx
  417bd6:	fdivr  QWORD PTR [edi-0x3bfac9ba]
  417bdc:	aad    0x6a
  417bde:	dec    ebx
  417bdf:	int    0x56
  417be1:	push   esp
  417be2:	iret   
  417be3:	xor    BYTE PTR [esi-0x2a],dl
  417be6:	jno    0x417b9f
  417be8:	lock pop ecx
  417bea:	ds pop eax
  417bec:	xor    esp,DWORD PTR [edx-0x5f]
  417bef:	push   ds
  417bf0:	inc    ebx
  417bf1:	lahf   
  417bf2:	jmp    0x417b8f
  417bf4:	adc    al,0xa2
  417bf6:	add    eax,0x17c3f142
  417bfb:	imul   edx,esp,0x36
  417bfe:	call   0xab872934
  417c03:	data16 ins BYTE PTR es:[edi],dx
  417c05:	push   cs
  417c06:	jmp    0x86fc0ff4
  417c0b:	push   0x3d
  417c0d:	ins    BYTE PTR es:[edi],dx
  417c0e:	mov    cl,0x2a
  417c10:	mov    bh,0x49
  417c12:	stos   BYTE PTR es:[edi],al
  417c13:	loop   0x417c16
  417c15:	imul   BYTE PTR [bx+si-0x12]
  417c19:	pop    ds
  417c1a:	add    edi,edi
  417c1c:	mov    eax,0xdb8ee53a
  417c21:	or     ah,cl
  417c23:	icebp  
  417c24:	fnstenv [edi+edi*8]
  417c27:	popf   
  417c28:	fs add bl,ch
  417c2b:	fcos   
  417c2d:	arpl   WORD PTR [ecx+0x7c140eeb],si
  417c33:	inc    ecx
  417c34:	dec    esi
  417c35:	mov    ah,0x6c
  417c37:	pop    edi
  417c38:	dec    ebp
  417c39:	add    BYTE PTR [eax+0x254162b0],cl
  417c3f:	ins    DWORD PTR es:[edi],dx
  417c40:	add    eax,0x69c0a1d3
  417c45:	fbld   TBYTE PTR [eax]
  417c47:	add    bh,bh
  417c49:	fdiv   DWORD PTR [eax+0x1a]
  417c4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c4d:	das    
  417c4e:	inc    esp
  417c4f:	xor    al,0xde
  417c51:	rcr    BYTE PTR [ecx+0x3a],cl
  417c54:	nop
  417c55:	ds out dx,eax
  417c57:	cmp    al,0x75
  417c59:	hlt    
  417c5a:	mov    ds:0x88489c75,eax
  417c5f:	sbb    bh,BYTE PTR [eax+0x77]
  417c62:	cmp    eax,0xf9747a6c
  417c67:	sahf   
  417c68:	mul    BYTE PTR [edx+edx*1-0x5e]
  417c6c:	cmc    
  417c6d:	(bad)  
  417c6e:	adc    DWORD PTR [eax],eax
  417c70:	xor    BYTE PTR [ebx],0xfa
  417c73:	inc    edi
  417c74:	and    ebp,DWORD PTR [esi-0x600f9175]
  417c7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c7b:	pusha  
  417c7c:	mov    ds:0x236e850f,eax
  417c81:	add    DWORD PTR [ebp-0x3fcb4227],eax
  417c87:	stc    
  417c88:	fild   QWORD PTR [edx+0x3b]
  417c8b:	pusha  
  417c8c:	ds sbb eax,0x308b4bd3
  417c92:	jmp    0x64097731
  417c97:	cwde   
  417c98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c99:	dec    esp
  417c9a:	into   
  417c9b:	jle    0x417c64
  417c9d:	daa    
  417c9e:	aam    0x62
  417ca0:	lahf   
  417ca1:	mov    ecx,0xbf55c056
  417ca6:	out    dx,al
  417ca7:	jge    0x417c7f
  417ca9:	or     esp,DWORD PTR [edx+0x4d]
  417cac:	sub    cl,BYTE PTR [ebp-0x70]
  417caf:	sahf   
  417cb0:	xlat   BYTE PTR ds:[ebx]
  417cb1:	dec    eax
  417cb2:	adc    al,0x11
  417cb4:	in     al,0x4b
  417cb6:	sbb    eax,0x1d8bf0da
  417cbb:	push   edi
  417cbc:	fiadd  DWORD PTR [ebx+0x3d]
  417cbf:	popf   
  417cc0:	xor    BYTE PTR [ebx-0x17],ch
  417cc3:	inc    esi
  417cc4:	inc    ecx
  417cc5:	or     DWORD PTR [edi+0x7c38f3a4],ebx
  417ccb:	xor    DWORD PTR [ecx-0x49],0x42688304
  417cd2:	mov    ebx,0x9c4c60cf
  417cd7:	test   DWORD PTR [eax*8-0x6297020f],0x6ab31706
  417ce2:	scas   eax,DWORD PTR es:[edi]
  417ce3:	and    eax,0x914d0ff8
  417ce8:	paddq  mm2,QWORD PTR [esi-0x5b767710]
  417cef:	mov    bh,0xf4
  417cf1:	push   0xb356a05a
  417cf6:	test   eax,0x7904e600
  417cfb:	or     al,0x64
  417cfd:	cmp    BYTE PTR [ebp-0x5554c962],bh
  417d03:	add    BYTE PTR [ebx+ebp*4],bh
  417d06:	adc    ah,BYTE PTR [edi-0x49]
  417d09:	fs xchg esi,eax
  417d0b:	jmp    0xb61d385a
  417d10:	dec    eax
  417d11:	push   edx
  417d12:	jns    0x417d4e
  417d14:	xor    al,0xe5
  417d16:	lds    ecx,FWORD PTR [esi+ebx*4+0x13133d0e]
  417d1d:	adc    ch,ah
  417d1f:	cwde   
  417d20:	sbb    DWORD PTR [eax+0x15],0xffffffdb
  417d24:	xchg   esi,eax
  417d25:	mov    dl,0x24
  417d27:	xchg   edi,eax
  417d28:	xchg   BYTE PTR ds:0xeba4d3b0,dh
  417d2e:	nop
  417d2f:	arpl   WORD PTR es:[ecx-0x37],si
  417d33:	dec    eax
  417d34:	push   esp
  417d35:	icebp  
  417d36:	mov    ah,0xb0
  417d38:	shr    BYTE PTR [ebx],1
  417d3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d3b:	pop    ds
  417d3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d3d:	push   ebx
  417d3e:	aaa    
  417d3f:	pop    esi
  417d40:	inc    ebx
  417d41:	pop    ds
  417d42:	xor    BYTE PTR [edi-0x28],ah
  417d45:	sub    BYTE PTR [ebx],0x12
  417d48:	pop    esi
  417d49:	dec    ecx
  417d4a:	rol    bl,1
  417d4c:	in     eax,0x51
  417d4e:	or     edx,edi
  417d50:	pusha  
  417d51:	pop    ebx
  417d52:	dec    ebx
  417d53:	call   0xd15b:0xb5be349d
  417d5a:	(bad)  
  417d5b:	jo     0x417dce
  417d5d:	push   es
  417d5e:	mov    dl,BYTE PTR [esi+esi*2-0x3bc55e02]
  417d65:	rcr    DWORD PTR [edi],0xda
  417d68:	je     0x417d80
  417d6a:	fiadd  DWORD PTR [edi+edi*4+0x31]
  417d6e:	repnz cld 
  417d70:	enter  0x520e,0x73
  417d74:	mov    cl,BYTE PTR [ebx]
  417d76:	and    edx,esi
  417d78:	scas   eax,DWORD PTR es:[edi]
  417d79:	jmp    0x417d52
  417d7b:	jg     0x417da1
  417d7d:	xlat   BYTE PTR ds:[ebx]
  417d7e:	mov    eax,ebx
  417d80:	inc    ebx
  417d81:	ret    0xcd84
  417d84:	fistp  DWORD PTR [eax+0x544975eb]
  417d8a:	test   DWORD PTR ds:0x31d72a15,edi
  417d90:	fcomp  QWORD PTR [edx]
  417d92:	add    DWORD PTR [ecx],ecx
  417d94:	(bad)  
  417d95:	or     eax,0xe8ed5208
  417d9a:	jmp    0xc5bc:0x102d31e9
  417da1:	xchg   edx,eax
  417da2:	adc    DWORD PTR [esi+0x48],esp
  417da5:	xor    bl,BYTE PTR [ebx-0x66e338e0]
  417dab:	xor    bh,BYTE PTR [ebx-0x4]
  417dae:	data16 mov cl,0x1e
  417db1:	lods   al,BYTE PTR ds:[esi]
  417db2:	mov    ah,0x78
  417db4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417db5:	call   0x7e487cc4
  417dba:	pop    esi
  417dbb:	shl    DWORD PTR [edi],0x94
  417dbe:	rcr    BYTE PTR [edx],0xa1
  417dc1:	ror    DWORD PTR [ebp-0x6],cl
  417dc4:	or     cl,BYTE PTR [ebx]
  417dc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417dc7:	inc    edx
  417dc8:	sub    cl,BYTE PTR [esi+0x57bd5253]
  417dce:	push   DWORD PTR ds:0xfd8bcf58
  417dd4:	dec    ebp
  417dd5:	rcr    esp,1
  417dd7:	loope  0x417e2e
  417dd9:	cld    
  417dda:	test   BYTE PTR [ecx+0x7e],dh
  417ddd:	scas   eax,DWORD PTR es:[edi]
  417dde:	repz xor eax,0x96911f1e
  417de4:	adc    DWORD PTR [edx-0xb],0xffffffe3
  417de8:	add    DWORD PTR [ebp-0x11],esi
  417deb:	xchg   ecx,eax
  417dec:	imul   BYTE PTR [ecx-0x7a]
  417def:	push   ds
  417df0:	ins    DWORD PTR es:[edi],dx
  417df1:	push   eax
  417df2:	jl     0x417e1d
  417df4:	push   ecx
  417df5:	repnz or eax,0x396ad057
  417dfb:	or     eax,DWORD PTR [edx+0x31675397]
  417e01:	sub    BYTE PTR [edx-0x372d7ab1],bl
  417e07:	jne    0x417dad
  417e09:	inc    edi
  417e0a:	fisttp WORD PTR [ebx+ebx*2]
  417e0d:	add    eax,0xd8b7ae0e
  417e12:	xchg   esi,eax
  417e13:	test   ah,ch
  417e15:	cmp    ebp,0x2b366725
  417e1b:	pop    ebp
  417e1c:	mov    BYTE PTR [ecx-0x1b2259c7],0x47
  417e23:	mov    WORD PTR [bp-0x1d],ss
  417e27:	movhps QWORD PTR ds:0x2870d86a,xmm1
  417e2e:	push   cs
  417e2f:	stc    
  417e30:	icebp  
  417e31:	je     0x417e68
  417e33:	daa    
  417e34:	pop    ss
  417e35:	sbb    BYTE PTR [eax+ebx*1+0x35399a38],bh
  417e3c:	lods   eax,DWORD PTR ds:[esi]
  417e3d:	cli    
  417e3e:	aam    0x1b
  417e40:	les    ebx,FWORD PTR [eax-0x1b]
  417e43:	int3   
  417e44:	aas    
  417e45:	mov    ah,0xbd
  417e47:	lds    ecx,FWORD PTR [eax]
  417e49:	adc    BYTE PTR [eax],bh
  417e4b:	aad    0x65
  417e4d:	dec    al
  417e4f:	es cdq 
  417e51:	or     bh,BYTE PTR [edx-0x2d]
  417e54:	jb     0x417e7d
  417e56:	push   ecx
  417e57:	xor    dh,BYTE PTR [esi-0x6b]
  417e5a:	sbb    al,0x2
  417e5c:	adc    BYTE PTR [ecx],dh
  417e5e:	stc    
  417e5f:	cmp    DWORD PTR [esi+0x73],ecx
  417e62:	and    DWORD PTR [esi+0x22b316f6],eax
  417e68:	outs   dx,BYTE PTR ds:[esi]
  417e69:	(bad)  
  417e6a:	ins    DWORD PTR es:[edi],dx
  417e6b:	inc    edx
  417e6c:	pop    esp
  417e6d:	jp     0x417e72
  417e6f:	inc    eax
  417e70:	test   DWORD PTR [ebp-0x2a],0xd7871e59
  417e77:	sbb    dl,BYTE PTR [edi-0x576b2a89]
  417e7d:	xlat   BYTE PTR ds:[ebx]
  417e7e:	jmp    0x417e95
  417e80:	dec    ebp
  417e81:	inc    ebp
  417e82:	jecxz  0x417ecf
  417e84:	jne    0x417e28
  417e86:	cdq    
  417e87:	sbb    eax,0xcbeb84e7
  417e8c:	add    eax,0x1f433340
  417e91:	xor    ebx,DWORD PTR ds:0x391998ab
  417e97:	or     eax,0x126ecd13
  417e9c:	mov    esp,DWORD PTR [eax]
  417e9e:	popa   
  417e9f:	leave  
  417ea0:	dec    eax
  417ea1:	add    DWORD PTR [esi+0x63965c26],0xffffff98
  417ea8:	cli    
  417ea9:	sbb    dh,BYTE PTR [esi+0x1f88c568]
  417eaf:	in     eax,0x6
  417eb1:	shr    DWORD PTR [ebp+0x6f],0x6d
  417eb5:	push   0xffffffdc
  417eb7:	pop    ebp
  417eb8:	mov    al,ds:0x27d27222
  417ebd:	jl     0x417f17
  417ebf:	add    DWORD PTR [edi*2+0x9893349],eax
  417ec6:	js     0x417e7a
  417ec8:	jo     0x417ee5
  417eca:	data16 int 0xb9
  417ecd:	push   ebx
  417ece:	pop    edx
  417ecf:	mov    dh,0x5b
  417ed1:	jo     0x417e9f
  417ed3:	add    al,0xb9
  417ed5:	scas   al,BYTE PTR es:[edi]
  417ed6:	or     bl,BYTE PTR [ebx+0x5260ac29]
  417edc:	mov    ds:0xc3134bfa,al
  417ee1:	imul   ecx,DWORD PTR [ecx+0x70a25d82],0x70
  417ee8:	mov    ebp,DWORD PTR [esi+eiz*8-0x2b]
  417eec:	xchg   esi,eax
  417eed:	add    al,0x88
  417eef:	jmp    0x443b:0x719a2a2
  417ef6:	fidivr WORD PTR [edi+0x2e]
  417ef9:	in     al,0x72
  417efb:	mov    edx,0x8d2a28f5
  417f00:	pushf  
  417f01:	es pop eax
  417f03:	(bad)  
  417f04:	repz test eax,0x42ec3529
  417f0a:	inc    edi
  417f0b:	xor    DWORD PTR [edx],esp
  417f0d:	mov    esp,0x1a1136cf
  417f12:	dec    esp
  417f13:	lahf   
  417f14:	ret    0x8fa2
  417f17:	addr16 popf 
  417f19:	fmul   st,st(7)
  417f1b:	dec    edx
  417f1c:	pop    ebp
  417f1d:	adc    dh,cl
  417f1f:	push   ebx
  417f20:	xlat   BYTE PTR ds:[ebx]
  417f21:	mov    al,ds:0x40844296
  417f26:	(bad)  [esp+edi*2+0x5f5a3b4a]
  417f2d:	jmp    0x5b82:0xdc4235e1
  417f34:	ins    DWORD PTR es:[edi],dx
  417f35:	icebp  
  417f36:	das    
  417f37:	dec    edi
  417f38:	sub    edi,edi
  417f3a:	sysexit 
  417f3c:	and    al,0xde
  417f3e:	je     0x417f08
  417f40:	imul   eax,DWORD PTR [ebp-0x10c4447e],0xd69c9fd
  417f4a:	pushf  
  417f4b:	shl    dl,cl
  417f4d:	mov    esi,0xada71af6
  417f52:	or     DWORD PTR [edx+ebx*8],edi
  417f55:	ins    DWORD PTR es:[edi],dx
  417f56:	scas   eax,DWORD PTR es:[edi]
  417f57:	fbld   TBYTE PTR [eax+0x56b4e578]
  417f5d:	add    DWORD PTR [edi+0x4dac2d8b],0xe7eb4b25
  417f67:	mov    al,0x4d
  417f69:	mov    dl,0xe4
  417f6b:	arpl   WORD PTR [eax],bp
  417f6d:	push   0xc065951e
  417f72:	xchg   edx,eax
  417f73:	cwde   
  417f74:	pushf  
  417f75:	int3   
  417f76:	mov    ?,WORD PTR [ebx-0x5f54f624]
  417f7c:	jo     0x417f84
  417f7e:	out    dx,al
  417f7f:	xor    edx,ebp
  417f81:	push   edi
  417f82:	inc    esi
  417f83:	pusha  
  417f84:	cmp    dh,BYTE PTR [edx]
  417f86:	icebp  
  417f87:	jge    0x417ff6
  417f89:	(bad)  
  417f8b:	jmp    0x8a5c:0x77b5f2a5
  417f92:	xor    ecx,ebx
  417f94:	sub    esp,edx
  417f96:	pop    esp
  417f97:	dec    ecx
  417f98:	ds in  eax,0xb3
  417f9b:	push   edi
  417f9c:	adc    eax,0xe1769871
  417fa1:	and    eax,DWORD PTR [ebx-0x8]
  417fa4:	loop   0x417fde
  417fa6:	xchg   BYTE PTR [edx+0x459d29ad],dh
  417fac:	pop    edi
  417fad:	pop    esi
  417fae:	mov    esi,0xcda094cd
  417fb3:	out    dx,eax
  417fb4:	cli    
  417fb5:	sbb    edx,DWORD PTR [ecx+0x15]
  417fb8:	cmc    
  417fb9:	jecxz  0x417f77
  417fbb:	inc    esp
  417fbc:	adc    bl,BYTE PTR [edx-0x3]
  417fbf:	rcl    DWORD PTR [edx-0x5],1
  417fc2:	sub    ah,ch
  417fc4:	jne    0x41801a
  417fc6:	dec    esp
  417fc7:	(bad)  
  417fc8:	pusha  
  417fc9:	ficomp DWORD PTR [eax+0x77]
  417fcc:	inc    ebx
  417fcd:	adc    eax,0xe2fc421c
  417fd2:	xor    ecx,DWORD PTR [edx-0x1c]
  417fd5:	mov    dl,0xc8
  417fd7:	mov    bl,0x81
  417fd9:	sbb    eax,0xa4bcb438
  417fde:	mov    al,0x9b
  417fe0:	ret    
  417fe1:	pusha  
  417fe2:	aad    0xa7
  417fe4:	add    esi,DWORD PTR [edx-0x20984083]
  417fea:	test   BYTE PTR [ebx-0x3c],cl
  417fed:	mov    al,ds:0x275226c8
  417ff2:	sub    BYTE PTR [ecx+eiz*2+0x7c516e4f],al
  417ff9:	lods   al,BYTE PTR ds:[esi]
  417ffa:	pop    ebp
  417ffb:	ds xchg esp,eax
  417ffd:	inc    esp
  417ffe:	out    0xbb,eax
  418000:	xor    eax,0x5577078e
  418005:	mov    ebp,0x384a05f2
  41800a:	cmc    
  41800b:	imul   BYTE PTR [eax+ecx*1+0x1c74bd1e]
  418012:	cmp    ecx,eax
  418014:	jmp    edx
  418016:	imul   ecx,DWORD PTR [ecx],0xb0c1e098
  41801c:	imul   ecx,DWORD PTR [eax],0x6
  41801f:	mov    eax,ds:0x7623bdf2
  418024:	ret    
  418025:	scas   al,BYTE PTR es:[edi]
  418026:	and    DWORD PTR [esi-0x3f],esi
  418029:	dec    ebp
  41802a:	in     eax,dx
  41802b:	xor    al,0xac
  41802d:	lods   al,BYTE PTR ds:[esi]
  41802e:	scas   al,BYTE PTR es:[edi]
  41802f:	addr16 jnp 0x418048
  418032:	mov    edx,0x5b9cb3a9
  418037:	push   ebp
  418038:	ins    DWORD PTR es:[edi],dx
  418039:	pushf  
  41803a:	sub    bl,bh
  41803c:	jp     0x4180ab
  41803e:	cli    
  41803f:	xchg   ecx,eax
  418040:	out    dx,eax
  418041:	push   ebp
  418042:	mov    BYTE PTR [esi+ebp*8],0x5c
  418046:	mov    eax,ds:0xa84842b
  41804b:	mov    al,BYTE PTR [ebx]
  41804d:	dec    ebp
  41804e:	fld    st(2)
  418050:	mov    eax,0xd39ea9f5
  418055:	das    
  418056:	jl     0x4180ac
  418058:	aas    
  418059:	or     bl,dl
  41805b:	pop    edx
  41805c:	cld    
  41805d:	or     al,0xc
  41805f:	cli    
  418060:	adc    ah,BYTE PTR [ebp+0x2542896d]
  418066:	mov    esp,0x39d3b025
  41806b:	jae    0x418074
  41806d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41806e:	leave  
  41806f:	mov    di,WORD PTR [edi+eiz*8+0x5a]
  418074:	mov    WORD PTR [ebx-0x4c],ss
  418077:	inc    ebp
  418078:	or     al,0x96
  41807a:	and    DWORD PTR [ecx],ebp
  41807c:	mov    edx,0xf82fbfb2
  418081:	into   
  418082:	out    dx,eax
  418083:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418084:	les    ebx,FWORD PTR [ebx-0x20f12630]
  41808a:	inc    ebp
  41808b:	jg     0x418078
  41808d:	pop    ss
  41808e:	nop
  41808f:	nop
  418090:	jecxz  0x41808c
  418092:	cmp    eax,0x6c33964
  418097:	ret    
  418098:	xchg   ebx,eax
  418099:	(bad)  
  41809a:	ja     0x4180f7
  41809c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41809d:	jge    0x418117
  41809f:	call   0xde9bd35a
  4180a4:	xchg   ebp,eax
  4180a5:	xor    al,0xd6
  4180a7:	adc    esp,ecx
  4180a9:	lock mov cl,0xec
  4180ac:	mov    eax,ds:0x3ac1d547
  4180b1:	out    0xbb,al
  4180b3:	pop    ebx
  4180b4:	out    0x1c,al
  4180b6:	mov    ebp,0xb41a3d41
  4180bb:	(bad)  
  4180bc:	push   edx
  4180bd:	lock fidiv WORD PTR [ebx-0x6c78ae60]
  4180c4:	fdiv   DWORD PTR [ecx+ebp*2+0x3e]
  4180c8:	pop    esp
  4180c9:	sub    bh,bl
  4180cb:	in     eax,0xe7
  4180cd:	std    
  4180ce:	(bad)  
  4180cf:	mov    cl,0xcd
  4180d1:	mov    ebx,0xba636c6f
  4180d6:	lock ins DWORD PTR es:[edi],dx
  4180d8:	mov    ch,0xc3
  4180da:	dec    ebp
  4180db:	std    
  4180dc:	push   eax
  4180dd:	xor    BYTE PTR [edi],ch
  4180df:	push   ebx
  4180e0:	dec    ecx
  4180e1:	dec    edx
  4180e2:	inc    ecx
  4180e3:	mov    WORD PTR [eax],es
  4180e5:	cmp    al,0x68
  4180e7:	test   eax,0x96cd6978
  4180ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180ed:	jmp    0x4171:0x1d637e00
  4180f4:	loop   0x41814a
  4180f6:	inc    ebx
  4180f7:	mov    ah,0xd8
  4180f9:	xchg   ecx,eax
  4180fa:	pop    ebp
  4180fb:	(bad)  
  4180fc:	out    dx,al
  4180fd:	mov    dh,0xcc
  4180ff:	mov    eax,ds:0x8bd4398e
  418104:	sub    DWORD PTR [ebp+esi*8+0x3447b78e],edx
  41810b:	popa   
  41810c:	push   edx
  41810d:	out    0x1a,eax
  41810f:	fwait
  418110:	sbb    eax,0x4d67e599
  418115:	push   ebx
  418116:	stos   DWORD PTR es:[edi],eax
  418117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418118:	push   es
  418119:	mov    ds:0x3add4681,al
  41811e:	gs adc eax,0x55bcf73a
  418124:	hlt    
  418125:	jp     0x41817f
  418127:	inc    edi
  418128:	rcl    BYTE PTR [esp+eax*4],1
  41812b:	sar    BYTE PTR [edx],0x42
  41812e:	jmp    0x787a2096
  418133:	test   eax,0x393659d7
  418138:	(bad)  [edi+edx*2]
  41813b:	or     BYTE PTR [eax],dl
  41813d:	sbb    ah,BYTE PTR [edi-0x6e4d74cf]
  418143:	(bad)  
  418144:	jbe    0x418170
  418146:	or     eax,0x798f0ffd
  41814b:	jl     0x4180d6
  41814d:	gs mov cl,0xff
  418150:	scas   eax,DWORD PTR es:[edi]
  418151:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418152:	je     0x4180ea
  418154:	mov    ds:0x95bc8de4,al
  418159:	imul   dh
  41815b:	fdivr  QWORD PTR [esi+0x1a48829e]
  418161:	scas   eax,DWORD PTR es:[edi]
  418162:	mul    ah
  418164:	jne    0x418155
  418166:	pop    edi
  418167:	hlt    
  418168:	mov    bl,0xea
  41816a:	lods   ax,WORD PTR ds:[esi]
  41816c:	inc    esp
  41816d:	fmul   DWORD PTR [edi]
  41816f:	pop    eax
  418170:	jp     0x418156
  418172:	xor    eax,0xd7096fd1
  418177:	push   ebp
  418178:	fisubr DWORD PTR [ecx+eax*4-0xa]
  41817c:	sub    dl,dh
  41817e:	sbb    BYTE PTR [ebp+0x496247c6],al
  418184:	ins    BYTE PTR es:[edi],dx
  418185:	pop    esp
  418186:	cdq    
  418187:	popa   
  418188:	or     ch,cl
  41818a:	jecxz  0x4181e4
  41818c:	add    al,BYTE PTR [esi+0x35]
  41818f:	xchg   edi,eax
  418190:	mov    esi,0xe139454a
  418195:	rcl    DWORD PTR [ebp+0x2d],1
  418198:	jne    0x418174
  41819a:	xor    esi,DWORD PTR [edx]
  41819c:	jno    0x418179
  41819e:	cmp    al,BYTE PTR [edx]
  4181a0:	mov    bh,0x8c
  4181a2:	sbb    esi,DWORD PTR [edi+0x3d]
  4181a5:	loop   0x418178
  4181a7:	dec    edi
  4181a8:	dec    ecx
  4181a9:	mov    eax,ds:0x8b0f2691
  4181ae:	dec    edx
  4181af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181b0:	sub    bh,dh
  4181b2:	mov    BYTE PTR [eax-0x72],bh
  4181b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181b6:	popa   
  4181b7:	push   ss
  4181b8:	lahf   
  4181b9:	stos   BYTE PTR es:[edi],al
  4181ba:	xchg   ebp,eax
  4181bb:	mov    eax,DWORD PTR [eax]
  4181bd:	jb     0x4181f6
  4181bf:	xchg   edx,eax
  4181c0:	sub    eax,0x7c6a8243
  4181c5:	cdq    
  4181c6:	pop    ecx
  4181c7:	jb     0x41819d
  4181c9:	test   al,0x1c
  4181cb:	cmp    bh,BYTE PTR [ebp+0x3d]
  4181ce:	pop    edi
  4181cf:	or     al,0xa1
  4181d1:	jl     0x41815b
  4181d3:	in     al,0x70
  4181d5:	dec    edi
  4181d6:	mov    BYTE PTR [eax],0x13
  4181d9:	neg    BYTE PTR [edx]
  4181db:	push   cs
  4181dc:	ds fwait
  4181de:	imul   edx,ebx,0x6aa87a12
  4181e4:	jecxz  0x4181c1
  4181e6:	xor    eax,0xe861c269
  4181eb:	xchg   ebx,eax
  4181ec:	in     al,0x90
  4181ee:	shl    DWORD PTR [edx+0x6651d7c4],cl
  4181f4:	aas    
  4181f5:	inc    edx
  4181f6:	pop    esp
  4181f7:	scas   eax,DWORD PTR es:[edi]
  4181f8:	dec    BYTE PTR [edx+edi*1+0x2d951efe]
  4181ff:	cwde   
  418200:	clc    
  418201:	cmp    eax,0x3ba6d581
  418206:	hlt    
  418207:	fsubr  st(1),st
  418209:	fstp   TBYTE PTR [eax+ebp*1]
  41820c:	mov    ds:0xf770c367,eax
  418211:	or     dl,BYTE PTR [eax]
  418213:	iret   
  418214:	data16 or al,0x97
  418217:	bound  ecx,QWORD PTR ss:[esi]
  41821a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41821b:	jg     0x41821e
  41821d:	ins    DWORD PTR es:[edi],dx
  41821e:	push   es
  41821f:	gs inc eax
  418221:	push   ebx
  418222:	inc    esp
  418223:	pop    ebp
  418224:	cmp    ebx,DWORD PTR [ebp+ebx*8+0x4b]
  418228:	jae    0x4181ce
  41822a:	mov    dl,0xaa
  41822c:	mov    al,ds:0x48cee044
  418231:	mov    eax,0xd8598171
  418236:	rcl    BYTE PTR [ebx+0x20f083cc],1
  41823c:	inc    ecx
  41823d:	dec    ecx
  41823e:	iret   
  41823f:	ins    BYTE PTR es:[edi],dx
  418240:	and    DWORD PTR [esi],edi
  418242:	sub    eax,0xa5ce8d92
  418247:	add    bl,BYTE PTR [eax-0x67]
  41824a:	or     dh,BYTE PTR [ebp+0x1a]
  41824d:	inc    ebp
  41824e:	aas    
  41824f:	mov    ch,0x58
  418251:	lods   al,BYTE PTR ds:[esi]
  418252:	ret    0xbae5
  418255:	mov    esi,DWORD PTR [ecx+0x42]
  418258:	jae    0x4182a1
  41825a:	push   ebp
  41825b:	jmp    0x4181ff
  41825d:	xchg   ebp,eax
  41825e:	aaa    
  41825f:	and    BYTE PTR [edx-0x6b5594cf],dh
  418265:	cmp    cl,BYTE PTR [ebx]
  418267:	push   esp
  418268:	ins    BYTE PTR es:[edi],dx
  418269:	push   ss
  41826a:	(bad)  
  41826d:	push   0x5f
  41826f:	or     DWORD PTR [esp+eiz*8+0x7815f45d],ebp
  418276:	hlt    
  418277:	push   0x502097c8
  41827c:	jmp    0x41820d
  41827e:	repnz inc ebx
  418280:	cmp    esi,DWORD PTR [edi]
  418282:	or     ebx,DWORD PTR [edx-0x5e]
  418285:	mov    edi,0x661526e7
  41828a:	or     al,0xd6
  41828c:	jne    0x418210
  41828e:	push   edx
  41828f:	add    al,0xb4
  418291:	mov    esp,ecx
  418293:	(bad)  
  418295:	mov    WORD PTR [edx+0x1519a16d],?
  41829b:	adc    DWORD PTR [edi-0x43],ebx
  41829e:	add    ah,BYTE PTR [esi+ebp*1]
  4182a1:	imul   esp,ebp,0xffffff86
  4182a4:	popa   
  4182a5:	xlat   BYTE PTR ds:[ebx]
  4182a6:	pusha  
  4182a7:	sub    bh,BYTE PTR [esi-0x72]
  4182aa:	mov    al,ds:0x2d7aae
  4182af:	mov    al,ds:0x86a537b5
  4182b4:	jns    0x418276
  4182b6:	and    esp,DWORD PTR [ecx-0x8]
  4182b9:	xchg   BYTE PTR [edx],dh
  4182bb:	sbb    al,BYTE PTR [ebp+0x272f0447]
  4182c1:	xor    ch,BYTE PTR [eax-0x1f3e1d87]
  4182c7:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182c9:	jge    0x418277
  4182cb:	jnp    0x4182ca
  4182cd:	adc    BYTE PTR [eax],bh
  4182cf:	test   al,0xa6
  4182d1:	cmp    al,0x55
  4182d3:	dec    edi
  4182d4:	imul   edx,DWORD PTR [esi],0xffffffb8
  4182d7:	cmc    
  4182d8:	cmp    BYTE PTR [ebp-0x293cb7b2],0xc9
  4182df:	das    
  4182e0:	(bad)  [eax]
  4182e2:	popa   
  4182e3:	mov    ds:0x309b5893,al
  4182e8:	clc    
  4182e9:	lds    esp,FWORD PTR [edi-0x3b94492]
  4182ef:	mov    ds:0x6339157d,al
  4182f4:	push   esp
  4182f5:	fucomip st,st(7)
  4182f7:	lea    ebx,[esi-0x2c4e4dcf]
  4182fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182fe:	mov    esp,0x62cae4c2
  418303:	(bad)  
  418304:	push   ebx
  418305:	iret   
  418306:	mov    eax,ds:0x8b573f47
  41830b:	xor    BYTE PTR [ecx-0x217d455c],bh
  418311:	push   ds
  418312:	aaa    
  418313:	ins    DWORD PTR es:[edi],dx
  418314:	(bad)
  41831a:	inc    esi
  41831b:	mov    dh,al
  41831d:	sub    BYTE PTR [esi],bl
  41831f:	xor    BYTE PTR [ecx+0x3c],ch
  418322:	mov    al,ds:0xf384e7f8
  418327:	xchg   DWORD PTR [edi],ebp
  418329:	pop    ecx
  41832a:	push   es
  41832b:	test   al,0x3
  41832d:	sbb    ebp,DWORD PTR [esi-0x22]
  418330:	or     BYTE PTR [ebp-0x49],0x2
  418334:	(bad)  
  418335:	stc    
  418336:	rcr    DWORD PTR [ebx+0x57],0x44
  41833a:	ins    BYTE PTR es:[edi],dx
  41833b:	(bad)  
  41833c:	(bad)  
  41833d:	mov    ah,0xde
  41833f:	sti    
  418340:	lahf   
  418341:	inc    esi
  418342:	sti    
  418343:	loopne 0x418392
  418345:	push   es
  418346:	inc    eax
  418347:	popa   
  418348:	mov    edx,0xa6b1e484
  41834d:	jmp    0x22565471
  418352:	ja     0x418348
  418354:	shl    BYTE PTR [ebx+0x12dba731],1
  41835a:	jl     0x4183be
  41835c:	xchg   ebp,eax
  41835d:	out    0x55,eax
  41835f:	cmp    edx,ebx
  418361:	jne    0x41830e
  418363:	add    eax,0xb2e9be85
  418368:	cmp    DWORD PTR [ecx],0x7805a292
  41836e:	pop    eax
  41836f:	shr    DWORD PTR [eax+0x3beefa5f],0xe5
  418376:	and    al,0x46
  418378:	iret   
  418379:	js     0xd3418705
  41837f:	push   edi
  418380:	(bad)  
  418381:	enter  0x269,0x56
  418385:	mov    edx,0xf66354a5
  41838a:	dec    ebx
  41838b:	shl    ebp,1
  41838d:	aaa    
  41838e:	push   edx
  41838f:	not    BYTE PTR [ecx-0x4a]
  418392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418393:	pop    ecx
  418394:	inc    edx
  418395:	js     0x418403
  418397:	mov    cl,0x23
  418399:	push   eax
  41839a:	lock std 
  41839c:	out    0x9b,al
  41839e:	adc    al,0x9b
  4183a0:	scas   eax,DWORD PTR es:[edi]
  4183a1:	pushf  
  4183a2:	jecxz  0x4183da
  4183a4:	sbb    ch,BYTE PTR [eax+0x5f11097f]
  4183aa:	mov    eax,0xfd707b55
  4183af:	aas    
  4183b0:	test   al,0x28
  4183b2:	add    bl,BYTE PTR [edx+0x155984bf]
  4183b8:	idiv   BYTE PTR [eax+0x58d16e64]
  4183be:	mov    cl,0xf0
  4183c0:	mov    ds:0x1d1b6cad,al
  4183c5:	jne    0x41834a
  4183c7:	in     eax,0xa2
  4183c9:	das    
  4183ca:	and    dh,BYTE PTR [eax+0x4c]
  4183cd:	or     eax,0xdd08565f
  4183d2:	std    
  4183d3:	mov    al,0xf
  4183d5:	stos   DWORD PTR es:[edi],eax
  4183d6:	or     bl,BYTE PTR [eax]
  4183d8:	push   ds
  4183d9:	sbb    al,BYTE PTR [ebp+0x141231cf]
  4183df:	cmc    
  4183e0:	mov    BYTE PTR [edi+0x59775048],bl
  4183e6:	mov    dh,0x87
  4183e8:	loop   0x41841f
  4183ea:	int    0xb6
  4183ec:	(bad)  
  4183ed:	pop    esp
  4183ee:	loope  0x4183da
  4183f0:	or     DWORD PTR [esi-0x1e],ecx
  4183f3:	or     edi,DWORD PTR [ebp+0x43ad4bb9]
  4183f9:	jle    0x4183be
  4183fb:	xor    al,0xc
  4183fd:	cmp    BYTE PTR [esi+0x10],cl
  418400:	and    DWORD PTR [eax+0xc9fdc07],ebp
  418406:	inc    esi
  418407:	(bad)  
  418408:	fistp  QWORD PTR [edi+0x34]
  41840b:	push   edx
  41840c:	repz dec BYTE PTR [eax+ebx*8-0x6e]
  418411:	int    0x66
  418413:	inc    edi
  418414:	jge    0x4183cf
  418416:	push   ds
  418417:	imul   ebp,ecx,0x6a
  41841a:	push   cs
  41841b:	loope  0x4183ac
  41841d:	xchg   edx,eax
  41841e:	jb     0x4183f6
  418420:	mov    esp,0x39e48267
  418425:	inc    esi
  418426:	sahf   
  418427:	and    DWORD PTR [eax-0x788434f8],edx
  41842d:	in     eax,0x7c
  41842f:	and    DWORD PTR [edx-0x18],edi
  418432:	jge    0x41840e
  418434:	es imul edx,esp,0x2f54c3f0
  41843b:	xchg   esi,eax
  41843c:	xor    DWORD PTR [esi-0x11],esp
  41843f:	popf   
  418440:	add    DWORD PTR [esi+0x4a],esp
  418443:	fucompp 
  418445:	mov    al,ds:0xddf1de11
  41844a:	daa    
  41844b:	mov    bh,0xba
  41844d:	dec    edi
  41844e:	popa   
  41844f:	dec    edx
  418450:	cdq    
  418451:	push   esp
  418452:	sbb    eax,0xabba85da
  418457:	dec    ebp
  418458:	jmp    0x21cbb4f6
  41845d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41845e:	push   esp
  41845f:	mov    edx,0xeaa09757
  418464:	dec    eax
  418465:	dec    ebx
  418466:	sbb    DWORD PTR [eax],0x14
  418469:	ror    eax,1
  41846b:	or     bl,BYTE PTR [ebp-0x71]
  41846e:	fsubr  DWORD PTR [ecx+0x388b20f6]
  418474:	stc    
  418475:	iret   
  418476:	inc    edx
  418477:	retf   
  418478:	nop
  418479:	xor    BYTE PTR [edx-0x25],ch
  41847c:	aas    
  41847d:	push   ebp
  41847e:	add    DWORD PTR [edx+0x76b0f8cd],ebp
  418484:	int    0x3b
  418486:	adc    ah,BYTE PTR [eax+ebx*1]
  418489:	sub    DWORD PTR [ebp+0x3d],ecx
  41848c:	hlt    
  41848d:	shl    DWORD PTR [ebx+ebx*1],cl
  418490:	dec    ecx
  418491:	cmp    bh,BYTE PTR ds:0x5eaa071a
  418497:	fstp   TBYTE PTR [ebp-0x53]
  41849a:	jecxz  0x4184c0
  41849c:	cwde   
  41849d:	repnz inc ebx
  41849f:	lahf   
  4184a0:	mov    DWORD PTR [ebx],esp
  4184a2:	icebp  
  4184a3:	add    dh,dh
  4184a5:	stc    
  4184a6:	lahf   
  4184a7:	test   DWORD PTR [ecx-0x42],esi
  4184aa:	int    0x85
  4184ac:	mov    ch,0xb2
  4184ae:	sti    
  4184af:	adc    al,0x46
  4184b1:	and    ebx,DWORD PTR [eax]
  4184b3:	add    al,0x88
  4184b5:	out    0xa0,eax
  4184b7:	sahf   
  4184b8:	mov    DWORD PTR [eax],esi
  4184ba:	jmp    0xab9bff28
  4184bf:	inc    edx
  4184c0:	sahf   
  4184c1:	pop    eax
  4184c2:	and    al,0xcc
  4184c4:	call   0x353e:0x6190a6d4
  4184cb:	test   al,0xa8
  4184cd:	cmp    dl,BYTE PTR [edi+eiz*8-0x58c66fed]
  4184d4:	xchg   edi,eax
  4184d5:	xor    bl,dh
  4184d7:	xchg   ebx,eax
  4184d8:	out    dx,eax
  4184d9:	jge    0x418524
  4184db:	dec    ebx
  4184dc:	(bad)  
  4184de:	sub    DWORD PTR [eax],0x10
  4184e1:	dec    edi
  4184e2:	sahf   
  4184e3:	(bad)  
  4184e4:	mov    eax,0x80495df1
  4184e9:	mov    bl,0x64
  4184eb:	retf   0x8947
  4184ee:	call   FWORD PTR [ebx-0x15]
  4184f1:	stc    
  4184f2:	adc    ebx,eax
  4184f4:	pop    esp
  4184f5:	xor    al,0xd4
  4184f7:	test   cl,cl
  4184f9:	jle    0x418513
  4184fb:	jg     0x41849a
  4184fd:	retf   0x6e2e
  418500:	lock xchg ebp,eax
  418502:	pop    edx
  418503:	fimul  DWORD PTR [ebx-0x7ede7b87]
  418509:	cli    
  41850a:	jae    0x41857e
  41850c:	arpl   WORD PTR [eax-0x7a4a941c],si
  418512:	mov    ch,0x3d
  418514:	mov    eax,ds:0x9a865c74
  418519:	mov    edi,0x34c381e0
  41851e:	data16 xor BYTE PTR [edi],ch
  418521:	pop    ebx
  418522:	fxch   st(3)
  418524:	sbb    eax,0xadb6e1c7
  418529:	or     eax,0xc457bded
  41852e:	xor    eax,0x28228ee
  418533:	or     cl,bh
  418535:	inc    edx
  418536:	push   eax
  418537:	into   
  418538:	bound  edx,QWORD PTR [ebx-0xa6c4dac]
  41853e:	outs   dx,BYTE PTR ds:[esi]
  41853f:	pop    edx
  418540:	jno    0x4185ba
  418542:	add    edi,ecx
  418544:	mov    esi,0xd7efbcc4
  418549:	cmp    al,BYTE PTR [esp+edi*2-0x40]
  41854d:	xor    ebp,DWORD PTR [edi-0x76229ff]
  418553:	stos   BYTE PTR es:[edi],al
  418554:	push   ebp
  418555:	cmp    esi,DWORD PTR [edi]
  418557:	stos   DWORD PTR es:[edi],eax
  418558:	in     al,0x8e
  41855a:	lock xchg BYTE PTR [edx-0x6e],ah
  41855e:	jmp    FWORD PTR [edi+0x6]
  418561:	(bad)  
  418562:	cli    
  418563:	fcomp  st(5)
  418565:	ins    DWORD PTR es:[edi],dx
  418566:	xchg   esi,eax
  418567:	and    al,0xf0
  418569:	stc    
  41856a:	enter  0x1388,0x7d
  41856e:	mov    ah,0xb
  418570:	pop    edi
  418571:	inc    eax
  418572:	sbb    al,0x27
  418574:	ja     0x4185a2
  418576:	or     BYTE PTR [ebp-0x73a96083],0xb2
  41857d:	or     eax,0x70cf397e
  418582:	jae    0x418577
  418584:	jbe    0x418571
  418586:	fcom   QWORD PTR [edx-0x58d3653b]
  41858c:	mov    ds:0xea17a843,al
  418591:	std    
  418592:	cmovnp esi,esp
  418595:	inc    edx
  418596:	and    ah,BYTE PTR [ebx-0x43]
  418599:	inc    edx
  41859a:	dec    ebp
  41859b:	push   eax
  41859c:	jo     0x41858f
  41859e:	retf   0xc6a9
  4185a1:	dec    ecx
  4185a2:	jne    0x418563
  4185a4:	call   0xb728:0xe7f06d9
  4185ab:	jle    0x4185ad
  4185ad:	(bad)  
  4185ae:	bnd jle 0x41855f
  4185b1:	das    
  4185b2:	mov    ds:0xa6ece35e,al
  4185b7:	mov    ebp,0x1b098218
  4185bc:	adc    ah,BYTE PTR fs:[eax-0x3da19bb]
  4185c3:	pushw  0x3c
  4185c6:	aas    
  4185c7:	jmp    0xda6c:0x9ea93e8c
  4185ce:	clc    
  4185cf:	das    
  4185d0:	mov    esp,0x932fa8ed
  4185d5:	bound  edx,QWORD PTR [esi-0x3adde7ee]
  4185db:	ret    0x6392
  4185de:	shl    DWORD PTR [edi-0x39],1
  4185e1:	xchg   ebp,eax
  4185e2:	sbb    al,BYTE PTR [edi-0x1b]
  4185e5:	mov    edx,gs
  4185e7:	pop    esi
  4185e8:	cmp    al,0x96
  4185ea:	out    dx,al
  4185eb:	mov    ecx,0x46774cf0
  4185f0:	pop    esp
  4185f1:	es mov ch,0x35
  4185f4:	mov    ecx,0x3cd57442
  4185f9:	retf   0x3be0
  4185fc:	sbb    DWORD PTR [eax+0x163eab58],ebp
  418602:	xor    ebp,DWORD PTR [ebp-0x4f]
  418605:	or     DWORD PTR [esi],edi
  418607:	aas    
  418608:	dec    esi
  418609:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41860a:	pop    esi
  41860b:	or     eax,DWORD PTR [ecx*8-0x33a4e7a]
  418612:	out    0x34,al
  418614:	cli    
  418615:	pop    ebx
  418616:	icebp  
  418617:	mov    esi,DWORD PTR [edi+eiz*1-0x1c]
  41861b:	stos   DWORD PTR es:[edi],eax
  41861c:	mov    ah,0x9f
  41861e:	test   al,0x8f
  418620:	daa    
  418621:	xor    DWORD PTR [edi-0x55a27274],0x6
  418628:	xchg   esp,eax
  418629:	fnstenv [edi+0x5d7b434d]
  41862f:	sub    ch,BYTE PTR [ebx+0x2c]
  418632:	inc    eax
  418633:	push   0xffffffb5
  418635:	add    eax,0x283b417e
  41863a:	out    dx,eax
  41863b:	fnstsw WORD PTR [edi]
  41863d:	sbb    eax,0xbc6c15f3
  418642:	mov    ecx,0xc90d5ab2
  418647:	js     0x418684
  418649:	pop    ecx
  41864a:	ja     0x41867f
  41864c:	loope  0x41867a
  41864e:	in     al,0x37
  418650:	(bad)
  418653:	lahf   
  418654:	leave  
  418655:	mov    edi,0x9fb0b42
  41865a:	pop    edx
  41865b:	(bad)  
  41865c:	arpl   bp,sp
  41865e:	pop    edi
  41865f:	ret    0x3e5b
  418662:	xchg   esi,eax
  418663:	jbe    0x41868d
  418665:	inc    esi
  418666:	aad    0x17
  418668:	hlt    
  418669:	popf   
  41866a:	stos   DWORD PTR es:[edi],eax
  41866b:	push   edx
  41866c:	sub    edi,DWORD PTR [ebx]
  41866e:	sbb    edi,esi
  418670:	pop    DWORD PTR [ebx-0x3418c1c2]
  418676:	xchg   edx,eax
  418677:	int3   
  418678:	shr    BYTE PTR [edx+0x3b143406],cl
  41867e:	xchg   ecx,eax
  41867f:	mov    eax,ds:0x3f936ab7
  418684:	jae    0x41869d
  418686:	mov    ah,0x89
  418688:	(bad)  
  41868a:	fwait
  41868b:	jmp    0xb7be5bc4
  418690:	inc    ebx
  418691:	xchg   edx,eax
  418692:	sbb    al,0x34
  418694:	in     eax,0xc1
  418696:	mov    ah,0xa1
  418698:	data16 cli 
  41869a:	shl    DWORD PTR [ebp-0x562308fd],0xe4
  4186a1:	xor    eax,0x3392346e
  4186a6:	ja     0x4186e4
  4186a8:	push   edi
  4186a9:	xchg   DWORD PTR [eax],esp
  4186ab:	jae    0x41868c
  4186ad:	retf   0x12a9
  4186b0:	mov    DWORD PTR [ecx],0x87645835
  4186b6:	into   
  4186b7:	leave  
  4186b8:	aad    0x13
  4186ba:	je     0x418688
  4186bc:	xor    eax,0x8c31e83b
  4186c1:	pop    eax
  4186c2:	add    bl,dl
  4186c4:	sbb    esp,esi
  4186c6:	push   ss
  4186c7:	pop    edi
  4186c8:	mov    ch,0x32
  4186ca:	jge    0x4186ef
  4186cc:	imul   edx,DWORD PTR [eax+0x5281685c],0x3f
  4186d3:	and    ebp,DWORD PTR [ebx+0x5abf4ff8]
  4186d9:	cmp    edi,DWORD PTR [ecx-0x645d5792]
  4186df:	mov    ecx,0xcc5cb45a
  4186e4:	retf   0x1c1d
  4186e7:	jmp    0x418742
  4186e9:	loopne 0x41868a
  4186eb:	adc    bh,BYTE PTR [esi]
  4186ed:	inc    edx
  4186ee:	sbb    al,0xc8
  4186f0:	les    esi,FWORD PTR [ecx-0x4bcac9c]
  4186f6:	repz prefetchw (bad)
  4186f8:	or     eax,0xd93593cc
  4186fd:	leave  
  4186fe:	das    
  4186ff:	lods   al,BYTE PTR ds:[esi]
  418700:	push   edx
  418701:	and    al,0x18
  418703:	sbb    eax,0x243ed42c
  418708:	xchg   ebx,eax
  418709:	cwde   
  41870a:	xchg   ebp,eax
  41870b:	ret    
  41870c:	es xchg ecx,eax
  41870e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41870f:	pop    esi
  418710:	mov    ecx,0x6806f8b6
  418715:	push   0x6d
  418717:	out    0xc4,al
  418719:	aad    0x6e
  41871b:	inc    eax
  41871c:	xchg   esp,eax
  41871d:	out    0x3,al
  41871f:	test   BYTE PTR fs:0x42935908,bh
  418726:	aas    
  418727:	add    al,dh
  418729:	call   0x198d:0xef468b1d
  418730:	(bad)  
  418732:	es das 
  418734:	pop    eax
  418735:	aaa    
  418736:	pop    ecx
  418737:	or     al,0x9f
  418739:	mov    ch,BYTE PTR [eax+ecx*4+0xf]
  41873d:	mov    edi,0x52e2d9ef
  418742:	cmp    eax,0x59715c7
  418747:	and    al,0xa7
  418749:	push   ds
  41874a:	je     0x418716
  41874c:	test   DWORD PTR [edi+0x1579a4d8],ecx
  418752:	sub    esi,ebp
  418754:	loope  0x4187a2
  418756:	xchg   ebx,eax
  418757:	mov    WORD PTR [ecx],ss
  418759:	sub    al,BYTE PTR [ecx-0x108e9bf5]
  41875f:	jnp    0x4186f6
  418761:	cs pop ss
  418763:	add    ecx,ebp
  418765:	test   DWORD PTR [ebx+eax*1],0x6818ef9b
  41876c:	jo     0x4187ae
  41876e:	xchg   esp,eax
  41876f:	jae    0x418790
  418771:	xor    bl,BYTE PTR [eax+0x79]
  418774:	adc    eax,DWORD PTR [eax+eiz*8-0x64]
  418778:	out    dx,al
  418779:	imul   ebx
  41877b:	jns    0x418772
  41877d:	imul   ebp,DWORD PTR [eax-0x59],0xd1d772e7
  418784:	out    dx,al
  418785:	pop    ebx
  418786:	pushf  
  418787:	cmp    BYTE PTR [edi+0x713112df],dh
  41878d:	idiv   dl
  41878f:	dec    ebx
  418790:	fsubr  st(4),st
  418792:	or     DWORD PTR ds:0xe954c0d4,ebp
  418798:	aad    0xd9
  41879a:	mov    BYTE PTR [ecx+0x557dee1f],al
  4187a0:	adc    DWORD PTR [esi+0x41],edx
  4187a3:	jecxz  0x4187c7
  4187a5:	ret    0x7c7d
  4187a8:	test   al,0x8e
  4187aa:	xchg   ecx,eax
  4187ab:	dec    ebp
  4187ac:	cmp    al,0xf6
  4187ae:	outs   dx,BYTE PTR ds:[esi]
  4187af:	jmp    0x418779
  4187b1:	cmc    
  4187b2:	sub    eax,eax
  4187b4:	add    eax,DWORD PTR ds:0xa6d5143b
  4187ba:	fwait
  4187bb:	je     0x418794
  4187bd:	cmp    BYTE PTR [edx+0x27aefda5],ch
  4187c3:	(bad)
  4187c6:	call   0x16ae9306
  4187cb:	ds add eax,0xd2be0d0c
  4187d1:	jp     0x41881b
  4187d3:	or     cl,BYTE PTR [ebx+eiz*8]
  4187d6:	lods   eax,DWORD PTR ds:[esi]
  4187d7:	loope  0x4187b2
  4187d9:	mov    edx,0x3b61faec
  4187de:	test   BYTE PTR [edx],al
  4187e0:	bnd jns 0x4187e9
  4187e3:	fs jge 0x4187c4
  4187e6:	jmp    0x41880a
  4187e8:	xchg   ecx,eax
  4187e9:	fistp  QWORD PTR ds:0x5cf2f753
  4187ef:	fs std 
  4187f1:	sub    eax,0x25aede51
  4187f6:	psllq  mm3,QWORD PTR [eax-0x611d1269]
  4187fd:	test   al,0xce
  4187ff:	dec    esi
  418800:	mov    esi,ecx
  418802:	xor    ah,bh
  418804:	sar    DWORD PTR ds:0x1af66d73,1
  41880a:	fwait
  41880b:	adc    ah,BYTE PTR [esi+ebx*2+0x37]
  41880f:	mov    esi,0x8eca19c1
  418814:	loopne 0x41887d
  418816:	out    0xce,eax
  418818:	jns    0x418817
  41881a:	dec    edi
  41881b:	je     0x418852
  41881d:	sub    DWORD PTR [esi+0x1accc588],eax
  418823:	pop    ecx
  418824:	in     al,dx
  418825:	les    eax,FWORD PTR [ebx-0x64]
  418828:	js     0x418818
  41882a:	ja     0x418828
  41882c:	loope  0x418892
  41882e:	lds    ebp,FWORD PTR [ecx-0x35]
  418831:	cmp    al,0x26
  418833:	dec    ebp
  418834:	cmp    eax,0xe2bfbbda
  418839:	cld    
  41883a:	shl    DWORD PTR ss:[edx+0x25161d4c],0xd2
  418842:	outs   dx,DWORD PTR ds:[esi]
  418843:	jae    0x4188b1
  418845:	xchg   DWORD PTR ds:0x13aafea5,edi
  41884b:	dec    ebp
  41884c:	out    0x79,al
  41884e:	inc    ecx
  41884f:	retf   0x6891
  418852:	pcmpeqd mm1,mm3
  418855:	xchg   esp,eax
  418856:	stos   DWORD PTR es:[edi],eax
  418857:	mov    ah,0x79
  418859:	loope  0x4188b8
  41885b:	and    ebp,DWORD PTR [ebp+0x29]
  41885e:	adc    al,0x23
  418860:	add    ebx,ebp
  418862:	adc    cl,0xa6
  418865:	lods   al,BYTE PTR ds:[esi]
  418866:	adc    bh,BYTE PTR [edx+0x24]
  418869:	rep stos BYTE PTR es:[edi],al
  41886b:	pop    ss
  41886c:	(bad)  
  41886d:	cld    
  41886e:	sbb    bl,bh
  418870:	jo     0x4188ca
  418872:	fcomi  st,st(3)
  418874:	(bad)  
  418875:	shl    DWORD PTR [edx],cl
  418877:	(bad)  
  418878:	into   
  418879:	adc    eax,0x13a1896c
  41887e:	fiadd  DWORD PTR [edi]
  418880:	xchg   edx,edx
  418882:	arpl   WORD PTR [ebp+edi*2-0x72],si
  418886:	jle    0x41886e
  418888:	shr    bl,0xa0
  41888b:	icebp  
  41888c:	sub    al,BYTE PTR [esi]
  41888e:	add    BYTE PTR [eax+eax*2],cl
  418891:	ins    BYTE PTR es:[edi],dx
  418892:	imul   ebp,DWORD PTR [ebx],0xfffffff2
  418895:	mov    esp,0x7c7c8177
  41889a:	mov    al,0xbd
  41889c:	call   0x7167:0x8fa3d733
  4188a3:	sub    eax,0x6ed123e7
  4188a8:	aas    
  4188a9:	adc    al,0x29
  4188ab:	xor    al,0x72
  4188ad:	loop   0x418830
  4188af:	fmul   QWORD PTR [edx+ebx*8+0x81d6850]
  4188b6:	xor    eax,0x305dd92a
  4188bb:	adc    al,0x36
  4188bd:	lahf   
  4188be:	lea    edi,[ecx]
  4188c0:	pop    es
  4188c1:	aas    
  4188c2:	pop    esp
  4188c3:	xor    BYTE PTR [esi],ah
  4188c5:	and    DWORD PTR [ebx-0x2204de83],eax
  4188cb:	push   es
  4188cc:	jmp    0x2b3f:0x7503aa21
  4188d3:	out    0xde,eax
  4188d5:	enterw 0x127e,0x1f
  4188da:	and    al,0xaf
  4188dc:	sbb    ah,0xd5
  4188df:	mov    esp,0xd664f0c2
  4188e4:	pop    es
  4188e5:	test   DWORD PTR [ecx+0x7f],esp
  4188e8:	xchg   esp,eax
  4188e9:	sub    esi,eax
  4188eb:	mov    dl,0x5b
  4188ed:	rcl    DWORD PTR [eax],1
  4188ef:	or     BYTE PTR [edx-0x7c],al
  4188f2:	sub    ah,BYTE PTR [eax+edi*8+0x5322bda8]
  4188f9:	xchg   edx,eax
  4188fa:	cmp    ch,dl
  4188fc:	sbb    eax,0xa3734216
  418901:	dec    ebp
  418902:	fidiv  DWORD PTR [edi]
  418904:	test   ah,dh
  418906:	xchg   ebx,eax
  418907:	neg    BYTE PTR [eax+0x1b]
  41890a:	mov    dl,0x76
  41890c:	push   edx
  41890d:	dec    eax
  41890e:	lea    esp,[esi+0x7501543]
  418914:	in     al,0xe6
  418916:	ja     0x418925
  418918:	jle    0x4188cf
  41891a:	mov    esi,0x9cb8d821
  41891f:	loop   0x418911
  418921:	xchg   BYTE PTR [ebp-0x56c844ba],ch
  418927:	sub    eax,0x1a0218e9
  41892c:	xor    eax,0x6308cb19
  418931:	test   al,0x3a
  418933:	leave  
  418934:	lods   al,BYTE PTR ds:[esi]
  418935:	popa   
  418936:	xchg   ebp,eax
  418937:	xor    BYTE PTR [edi-0x33],bl
  41893a:	jl     0x418972
  41893c:	sbb    esi,DWORD PTR [ebx-0x3d]
  41893f:	lea    edi,[ecx+0x7c]
  418942:	mov    esi,0xcf940960
  418947:	jle    0x4189b9
  418949:	les    esp,FWORD PTR [ebx]
  41894b:	push   ss
  41894c:	dec    ecx
  41894d:	xor    eax,0xa9d248e6
  418952:	push   esp
  418953:	xchg   BYTE PTR [ebx-0x39a5d2e0],al
  418959:	mov    al,ds:0x67c6f6ae
  41895e:	push   ss
  41895f:	mov    ch,0x65
  418961:	or     DWORD PTR [esi+0x51a9e3fa],ecx
  418967:	and    esi,esp
  418969:	sbb    DWORD PTR [ebp+0x48],edx
  41896c:	aas    
  41896d:	xchg   edx,eax
  41896e:	aam    0xc6
  418970:	sbb    ecx,ebp
  418972:	arpl   WORD PTR [edi+0x6b02ea8],bx
  418978:	cmp    eax,0x20095aea
  41897d:	sbb    ah,al
  41897f:	xchg   edx,eax
  418980:	cmp    DWORD PTR es:[edi-0x4],eax
  418984:	add    esp,DWORD PTR [esp+eax*4+0x18]
  418988:	fcom   DWORD PTR [edx-0x2e]
  41898b:	mov    al,0xe5
  41898d:	nop
  41898e:	mov    ecx,0x5788ab04
  418993:	jne    0x41893c
  418995:	or     al,0x55
  418997:	jmp    0x418956
  418999:	(bad)  
  41899a:	sbb    ebx,DWORD PTR [esi]
  41899c:	sahf   
  41899d:	xchg   edi,eax
  41899e:	mov    ebx,ebp
  4189a0:	jns    0x418980
  4189a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189a3:	imul   esi,DWORD PTR [esi+0x615e733d],0x3c36591b
  4189ad:	outs   dx,DWORD PTR ds:[esi]
  4189ae:	sbb    al,dh
  4189b0:	and    eax,0x67115d6f
  4189b5:	xchg   ebp,eax
  4189b6:	inc    esi
  4189b7:	out    0x53,al
  4189b9:	loope  0x4189bd
  4189bb:	jg     0x418a2f
  4189bd:	xor    al,0x48
  4189bf:	in     al,dx
  4189c0:	and    al,0x7f
  4189c2:	mov    esp,0xeb258149
  4189c7:	mov    ebp,0xb854cb28
  4189cc:	sbb    bl,BYTE PTR [ebx+0x1a056eaf]
  4189d2:	lods   al,BYTE PTR ds:[esi]
  4189d3:	sub    DWORD PTR [esi+edx*8],edx
  4189d6:	sbb    eax,0x4a6b704b
  4189db:	es (bad) 
  4189dd:	daa    
  4189de:	shl    bh,1
  4189e0:	ins    BYTE PTR es:[edi],dx
  4189e1:	outs   dx,BYTE PTR ds:[esi]
  4189e2:	fcmove st,st(1)
  4189e4:	test   al,0xcc
  4189e6:	sub    DWORD PTR [esp+ebp*1-0x74],esi
  4189ea:	js     0x418a53
  4189ec:	cmp    eax,0xf46df476
  4189f1:	retf   
  4189f2:	xor    al,0x12
  4189f4:	stos   BYTE PTR es:[edi],al
  4189f5:	xor    ecx,eax
  4189f7:	das    
  4189f8:	ret    0x5e8a
  4189fb:	sti    
  4189fc:	xor    edx,DWORD PTR [edx]
  4189fe:	ja     0x418991
  418a00:	stos   DWORD PTR es:[edi],eax
  418a01:	sub    bl,al
  418a03:	xchg   ecx,eax
  418a04:	les    eax,FWORD PTR ss:[eax-0x470e68a6]
  418a0b:	in     eax,0xe5
  418a0d:	mov    esp,0x3aa85171
  418a12:	sub    al,0x3d
  418a14:	lods   al,BYTE PTR ds:[esi]
  418a16:	in     al,0x49
  418a18:	cmc    
  418a19:	xchg   edi,eax
  418a1a:	pop    esi
  418a1b:	add    cl,BYTE PTR [esi]
  418a1d:	inc    edi
  418a1e:	jl     0x418a03
  418a20:	ret    0xa7a0
  418a23:	adc    BYTE PTR [eax-0x70],ch
  418a26:	inc    ebx
  418a27:	xlat   BYTE PTR ds:[ebx]
  418a28:	mov    edx,0xc647fafc
  418a2d:	dec    eax
  418a2e:	loope  0x418a47
  418a30:	push   edi
  418a31:	inc    ebx
  418a32:	xchg   BYTE PTR [edi+0x75],dl
  418a35:	mov    ch,0x84
  418a37:	inc    esi
  418a38:	pushf  
  418a39:	retf   0x6a4a
  418a3c:	mov    ds:0x7cefca50,eax
  418a41:	mov    dh,0x91
  418a43:	outs   dx,BYTE PTR ds:[esi]
  418a44:	inc    ebp
  418a45:	and    BYTE PTR [ebx+edx*1-0x4d],0x96
  418a4a:	jns    0x4189f8
  418a4c:	fadd   DWORD PTR [edi+eiz*2-0xd]
  418a50:	add    BYTE PTR [eax],dh
  418a52:	push   edx
  418a53:	test   DWORD PTR [ebp-0x47],esp
  418a56:	sbb    eax,0xf48f3bdd
  418a5b:	push   ds
  418a5c:	add    dh,BYTE PTR [ecx+ecx*4-0xe]
  418a60:	fs jle 0x4189ed
  418a63:	aam    0xbd
  418a65:	pop    eax
  418a66:	out    dx,eax
  418a67:	sqrtps xmm4,XMMWORD PTR [ebp+0x5a]
  418a6b:	stos   DWORD PTR es:[edi],eax
  418a6c:	test   eax,0xec08ee22
  418a71:	ds retf 0x120b
  418a75:	fwait
  418a76:	outs   dx,DWORD PTR ds:[esi]
  418a78:	iret   
  418a79:	sbb    DWORD PTR [edx-0x72a850bd],esp
  418a7f:	aam    0xf2
  418a81:	adc    bh,bl
  418a83:	leave  
  418a84:	jp     0x418a8f
  418a86:	lds    ecx,FWORD PTR [edx-0x59]
  418a89:	sub    eax,0xb408aab
  418a8e:	pop    ss
  418a8f:	xor    dl,BYTE PTR [ebx-0x6b]
  418a92:	add    edx,DWORD PTR [eax+0x29]
  418a95:	inc    eax
  418a96:	xor    al,0xe2
  418a98:	pop    ss
  418a99:	mov    al,ds:0x7603f3be
  418a9e:	add    DWORD PTR [eax-0x5d6338e7],ebp
  418aa4:	push   es
  418aa5:	dec    ecx
  418aa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418aa7:	(bad)  
  418aa8:	ins    DWORD PTR es:[edi],dx
  418aa9:	(bad)  
  418aab:	xchg   DWORD PTR [eax+edx*4],ecx
  418aae:	and    esi,DWORD PTR [edi+0x2af467a6]
  418ab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ab5:	popf   
  418ab6:	pushf  
  418ab7:	jecxz  0x418a75
  418ab9:	push   edi
  418aba:	mov    eax,0x912edcce
  418abf:	outs   dx,DWORD PTR ds:[esi]
  418ac0:	lea    edi,[ecx+ebp*4-0x78]
  418ac4:	iret   
  418ac5:	loopne 0x418a97
  418ac7:	pop    ds
  418ac8:	and    eax,0x702abcda
  418acd:	pushf  
  418ace:	test   al,0xf8
  418ad0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ad1:	nop
  418ad2:	jle    0x418a9b
  418ad4:	ret    
  418ad5:	xchg   edx,eax
  418ad6:	mov    DWORD PTR [ebp+0x20],0x7505b6d
  418add:	adc    DWORD PTR [ecx],ebp
  418adf:	add    al,0xd1
  418ae1:	or     dl,BYTE PTR [edx+0x2e]
  418ae4:	int    0xf5
  418ae6:	jne    0x418b2a
  418ae8:	xor    al,0xdb
  418aea:	shl    DWORD PTR [eax+0x1c],0xd2
  418aee:	loope  0x418b33
  418af0:	add    ch,BYTE PTR [ecx+eiz*8]
  418af3:	push   ebp
  418af4:	stos   BYTE PTR es:[edi],al
  418af5:	dec    edi
  418af6:	mov    ds:0x290af6f1,al
  418afb:	pop    ds
  418afc:	cmp    esi,DWORD PTR [esi+0x40872cc5]
  418b02:	aas    
  418b03:	pop    ebp
  418b04:	lahf   
  418b05:	fadd   QWORD PTR [esp+edx*1-0x74]
  418b09:	pop    es
  418b0a:	inc    esi
  418b0b:	xchg   ebx,eax
  418b0c:	nop
  418b0d:	adc    eax,0x33430633
  418b12:	cmp    dl,BYTE PTR [ebx+edx*2]
  418b15:	jp     0x418b16
  418b17:	adc    DWORD PTR [ebx-0x32effcc0],esp
  418b1d:	jmp    0x418b68
  418b1f:	xchg   ecx,eax
  418b20:	call   0xaafc:0x1fb879dd
  418b27:	adc    ebx,DWORD PTR [ebp-0x3]
  418b2a:	mov    ds:0x43023a9e,al
  418b2f:	mov    eax,0x32180883
  418b34:	mov    edi,0x3614cd4e
  418b39:	cmc    
  418b3a:	mov    cs,ebp
  418b3c:	ja     0x418b1d
  418b3e:	sub    ax,0xc8a6
  418b42:	fidivr WORD PTR [esi]
  418b44:	neg    DWORD PTR [esi]
  418b46:	stc    
  418b47:	jae    0x418b6c
  418b49:	mov    edx,DWORD PTR [ecx-0x1a]
  418b4c:	arpl   si,ax
  418b4e:	stos   DWORD PTR es:[edi],eax
  418b4f:	test   eax,0xc8a82457
  418b54:	repz cmp DWORD PTR [eax+0x2652ba13],ebx
  418b5b:	inc    esp
  418b5c:	pop    es
  418b5d:	hlt    
  418b5e:	(bad)  
  418b5f:	push   eax
  418b60:	sbb    DWORD PTR [edi+edx*8-0x50],edi
  418b64:	div    BYTE PTR [esi]
  418b66:	jge    0x418b97
  418b68:	cmc    
  418b69:	stos   BYTE PTR es:[edi],al
  418b6a:	add    esp,edx
  418b6c:	in     al,0x3d
  418b6e:	sub    eax,0x387376b9
  418b73:	pop    ebx
  418b74:	scas   al,BYTE PTR es:[edi]
  418b75:	aas    
  418b76:	fisttp QWORD PTR [ecx-0x64]
  418b79:	jnp    0x418b82
  418b7b:	arpl   WORD PTR [ebx-0x4e3c4093],sp
  418b81:	and    DWORD PTR [ebx+0x37],ebx
  418b84:	adc    ecx,DWORD PTR [ebp-0x4]
  418b87:	rcr    BYTE PTR [ebp+0x53],1
  418b8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b8b:	jmp    0x418c00
  418b8d:	retf   
  418b8e:	iret   
  418b8f:	push   0x2bf7915b
  418b94:	lods   al,BYTE PTR ds:[esi]
  418b95:	jl     0x418bc7
  418b97:	mov    dl,0x4
  418b99:	dec    edi
  418b9a:	retf   
  418b9b:	mov    al,BYTE PTR [esi]
  418b9d:	jecxz  0x418b41
  418b9f:	or     BYTE PTR [esi],ah
  418ba1:	mov    ebx,0xcb660a6
  418ba6:	xchg   ebx,eax
  418ba7:	pop    es
  418ba8:	adc    ah,BYTE PTR [esi+0x3d]
  418bab:	sbb    ch,BYTE PTR [eax+0x2c526d0c]
  418bb1:	adc    eax,0xc5d50678
  418bb6:	scas   eax,DWORD PTR es:[di]
  418bb8:	jecxz  0x418bf9
  418bba:	mov    DWORD PTR [ecx],ecx
  418bbc:	(bad)  
  418bbd:	fs imul esp,ebx,0xffffffa9
  418bc1:	push   esi
  418bc2:	jmp    0x29bfe697
  418bc7:	inc    ebp
  418bc8:	out    dx,eax
  418bc9:	jge    0x418c1e
  418bcb:	xor    DWORD PTR [esi],0x6b
  418bce:	(bad)  
  418bcf:	bound  eax,QWORD PTR [esi+0xe]
  418bd2:	push   ecx
  418bd3:	fst    QWORD PTR [esi+0x1b530156]
  418bd9:	jae    0x418c39
  418bdb:	imul   edi,DWORD PTR [esi+edx*2],0xc7efa12e
  418be2:	jmp    0x418b96
  418be4:	adc    eax,0x4ef43d23
  418be9:	dec    ebp
  418bea:	loope  0x418c5b
  418bec:	sbb    eax,0xd2fd1c10
  418bf1:	mov    eax,0x9209f727
  418bf6:	lds    esi,FWORD PTR [eax-0x47]
  418bf9:	popa   
  418bfa:	jle    0x418c12
  418bfc:	jo     0x418b91
  418bfe:	daa    
  418bff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c00:	pop    esp
  418c01:	sahf   
  418c02:	(bad)  
  418c03:	jp     0x418c29
  418c05:	mov    edx,0xef4fca89
  418c0a:	push   ebx
  418c0b:	icebp  
  418c0c:	jmp    0x418c2c
  418c0e:	xor    al,0x1b
  418c10:	jb     0x418c8e
  418c12:	addr16 xchg ebp,eax
  418c14:	mov    al,0x4f
  418c16:	in     al,0xdb
  418c18:	xlat   BYTE PTR ds:[ebx]
  418c19:	mov    ebp,0x82f27f80
  418c1e:	out    0x7,al
  418c20:	loop   0x418c9e
  418c22:	xor    ch,BYTE PTR [edx-0x13]
  418c25:	pop    esp
  418c26:	sub    DWORD PTR [eax-0xc],esi
  418c29:	xchg   DWORD PTR [esi-0x7a2753f3],esp
  418c2f:	pop    ds
  418c30:	lock push 0x30
  418c33:	div    DWORD PTR [ebx+ebx*8]
  418c36:	push   esi
  418c37:	adc    al,0x12
  418c39:	inc    edx
  418c3a:	mov    edx,0x26b922d8
  418c3f:	clc    
  418c40:	cld    
  418c41:	repnz mov al,0x1b
  418c44:	pusha  
  418c45:	int    0x93
  418c47:	mov    eax,0x639fe8c1
  418c4c:	push   eax
  418c4d:	mov    DWORD PTR [ebx-0x39],edi
  418c50:	in     al,dx
  418c51:	adc    eax,0x7f5d88b
  418c56:	enter  0xe99b,0xce
  418c5a:	inc    ebp
  418c5b:	cmp    esp,DWORD PTR [ebx+0x71]
  418c5e:	sub    eax,0x1832ba86
  418c63:	adc    ch,BYTE PTR [edi+eiz*8-0x6cb64797]
  418c6a:	inc    eax
  418c6b:	add    al,0x3d
  418c6d:	(bad)  
  418c6f:	lods   eax,DWORD PTR ds:[esi]
  418c70:	pop    es
  418c71:	pop    es
  418c72:	hlt    
  418c73:	idiv   BYTE PTR ds:[eax]
  418c76:	sti    
  418c77:	cmp    al,0xd5
  418c79:	je     0x418cf4
  418c7b:	jae    0x418cd6
  418c7d:	jg     0x418cf4
  418c7f:	adc    DWORD PTR ds:0x63012d19,edx
  418c85:	add    eax,0x27
  418c88:	in     al,dx
  418c89:	dec    edi
  418c8a:	pop    es
  418c8b:	ss cld 
  418c8d:	dec    eax
  418c8e:	jmp    DWORD PTR [edi-0x16]
  418c91:	imul   ebp,DWORD PTR [ebx+0x31],0xc
  418c95:	mov    edx,0xd0571ef8
  418c9a:	jno    0x418d15
  418c9c:	jbe    0x418c67
  418c9e:	cwde   
  418c9f:	cmp    edi,DWORD PTR [edi]
  418ca1:	pop    ebx
  418ca2:	call   0x79070546
  418ca7:	(bad)  
  418ca8:	popa   
  418ca9:	aaa    
  418caa:	ret    0x6de8
  418cad:	rcl    DWORD PTR [eax-0x640dc0a],1
  418cb3:	sub    BYTE PTR [edi+0x5c],bh
  418cb6:	mul    BYTE PTR [ecx]
  418cb8:	enter  0xe964,0x78
  418cbc:	cmp    eax,0x1c47061d
  418cc1:	inc    edx
  418cc2:	sub    DWORD PTR [edx+ecx*2+0x7],eax
  418cc6:	shr    BYTE PTR [eax-0x68a1b1e0],1
  418ccc:	mov    dh,0x76
  418cce:	fidivr DWORD PTR [ebp-0x8]
  418cd1:	call   DWORD PTR [esi+0x5b]
  418cd4:	in     eax,0xad
  418cd6:	sbb    BYTE PTR [eax+ebp*4-0x3c],ah
  418cda:	inc    ecx
  418cdb:	dec    esp
  418cdc:	adc    BYTE PTR [edx+0x3b],bh
  418cdf:	dec    esi
  418ce0:	in     eax,0x48
  418ce2:	retf   0x162f
  418ce5:	sub    ah,BYTE PTR [ecx-0x7b]
  418ce8:	jecxz  0x418cbc
  418cea:	scas   al,BYTE PTR es:[di]
  418cec:	and    cl,BYTE PTR [eax]
  418cee:	xor    al,0x1f
  418cf0:	sbb    eax,0x7b1d7706
  418cf5:	std    
  418cf6:	mov    ds:0xa6018520,eax
  418cfb:	rcr    DWORD PTR [esi],cl
  418cfd:	add    eax,0xd90b45e7
  418d02:	ds or  eax,0x56fb09ea
  418d08:	add    bl,BYTE PTR [eax]
  418d0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d0b:	out    dx,al
  418d0c:	pop    ss
  418d0d:	sbb    al,0x15
  418d0f:	jno    0x418d80
  418d11:	out    dx,al
  418d12:	outs   dx,BYTE PTR ds:[esi]
  418d13:	jnp    0x418ce1
  418d15:	push   es
  418d16:	fist   DWORD PTR [ebx]
  418d18:	scas   eax,DWORD PTR es:[edi]
  418d19:	xchg   edx,eax
  418d1a:	inc    ecx
  418d1b:	int    0x95
  418d1d:	mov    al,0x96
  418d1f:	aas    
  418d20:	push   es
  418d21:	pop    ecx
  418d22:	cdq    
  418d23:	test   DWORD PTR [esi+0x15],edi
  418d26:	inc    ebp
  418d27:	jp     0x418da4
  418d29:	inc    esi
  418d2a:	std    
  418d2b:	xchg   esi,eax
  418d2c:	daa    
  418d2d:	cmp    eax,0x374bbd27
  418d32:	in     eax,0xac
  418d34:	mov    bh,0xc9
  418d36:	jb     0x418d1e
  418d38:	jl     0x418cda
  418d3a:	hlt    
  418d3b:	adc    bl,BYTE PTR [ebp+ebx*2-0x37]
  418d3f:	inc    esi
  418d40:	fucomip st,st(3)
  418d42:	mov    ?,WORD PTR [ebx+0x7a]
  418d45:	int    0x70
  418d47:	lock xor DWORD PTR [ebx+0x30ba6bf],ebp
  418d4e:	sub    al,0x6
  418d50:	cmc    
  418d51:	mov    eax,cs:0x99ba9ec8
  418d57:	in     al,dx
  418d58:	mov    eax,0xbbc9ceed
  418d5d:	mov    DWORD PTR [edi+0x3a043448],ecx
  418d63:	dec    edi
  418d64:	mov    bh,0xe9
  418d66:	adc    DWORD PTR [ebx-0x58],ecx
  418d69:	retf   0x2849
  418d6c:	sub    ch,bl
  418d6e:	call   0x2e229d39
  418d73:	mov    edx,DWORD PTR [ecx+ebp*1+0x20]
  418d77:	sub    bh,BYTE PTR [ebx+0x49]
  418d7a:	aam    0x7b
  418d7c:	jecxz  0x418daa
  418d7e:	jge    0x418d30
  418d80:	fcomp  QWORD PTR [edi+0x3f1b824b]
  418d86:	arpl   cx,bp
  418d88:	lods   eax,DWORD PTR ds:[esi]
  418d89:	mov    WORD PTR [ecx+0x68f3f3aa],?
  418d8f:	cwde   
  418d90:	xchg   ebx,eax
  418d91:	sub    dl,al
  418d93:	iret   
  418d94:	push   0xf
  418d96:	mov    edi,0x5473d18b
  418d9b:	mov    eax,ds:0x5a750428
  418da0:	popa   
  418da1:	shl    DWORD PTR [eax+0x1478dc97],cl
  418da7:	adc    edi,DWORD PTR [ebp-0x79]
  418daa:	ins    DWORD PTR es:[edi],dx
  418dab:	sub    eax,0xd704e79e
  418db0:	in     al,0xea
  418db2:	xor    BYTE PTR [eax+0x1c00e1d2],bh
  418db8:	loopne 0x418db1
  418dba:	imul   ebp,DWORD PTR [edi+0x46],0xffffff80
  418dbe:	outs   dx,BYTE PTR ds:[esi]
  418dbf:	in     al,dx
  418dc0:	mov    ecx,0xad7058ce
  418dc5:	adc    BYTE PTR [ebp-0x80],ah
  418dc8:	repz in al,dx
  418dca:	int3   
  418dcb:	js     0x418e01
  418dcd:	ins    DWORD PTR es:[edi],dx
  418dce:	scas   al,BYTE PTR es:[edi]
  418dcf:	sbb    eax,0x337b5d05
  418dd4:	mul    BYTE PTR [eax-0x62]
  418dd7:	fld    QWORD PTR [ebp+0x4b98c5cb]
  418ddd:	bound  esi,QWORD PTR [esi+0xa24642d]
  418de3:	repnz imul esi,ebp,0x4e
  418de7:	ss push ebp
  418de9:	jb     0x418db1
  418deb:	mov    eax,ds:0xdb9b2880
  418df0:	xlat   BYTE PTR ds:[ebx]
  418df1:	mov    ah,0x72
  418df3:	jle    0x418dfe
  418df5:	mov    ds:0x5558e6ed,al
  418dfa:	nop
  418dfb:	push   edi
  418dfc:	push   esi
  418dfd:	xor    edx,DWORD PTR [ebp-0x2a9dc363]
  418e03:	pop    ds
  418e04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e05:	mov    ds:0x61c6f451,al
  418e0a:	pop    es
  418e0b:	das    
  418e0c:	add    al,0x2d
  418e0e:	shl    DWORD PTR [ecx+0x7d],cl
  418e11:	xor    al,BYTE PTR [ebp+0x4f]
  418e14:	and    BYTE PTR [edx+eax*4],0xb4
  418e18:	test   DWORD PTR ds:[edx+0x23],esp
  418e1c:	clc    
  418e1d:	mov    ebx,edi
  418e1f:	scas   eax,DWORD PTR es:[edi]
  418e20:	sub    ebp,esi
  418e22:	inc    esp
  418e23:	fisttp DWORD PTR [ecx+esi*1]
  418e26:	and    ch,BYTE PTR [edx-0x2900b20b]
  418e2c:	xor    DWORD PTR [edx+0x19],ebp
  418e2f:	repnz push edx
  418e31:	sti    
  418e32:	jmp    DWORD PTR [edx]
  418e34:	loopne 0x418dd8
  418e36:	data16 cmp al,0xec
  418e39:	imul   edi,DWORD PTR [eax-0x80],0x61
  418e3d:	mov    ecx,0xf5201a30
  418e42:	loop   0x418e03
  418e44:	test   DWORD PTR [ebx+0x14],edx
  418e47:	dec    eax
  418e48:	dec    ebx
  418e49:	scas   al,BYTE PTR es:[edi]
  418e4a:	outs   dx,DWORD PTR ds:[esi]
  418e4b:	push   edx
  418e4c:	pop    edi
  418e4d:	clc    
  418e4e:	stos   DWORD PTR es:[edi],eax
  418e4f:	popa   
  418e50:	adc    al,BYTE PTR [edi+0x85ca317]
  418e56:	sar    BYTE PTR [esi-0x78],0x2f
  418e5a:	sbb    cl,BYTE PTR [edi+0x75]
  418e5d:	icebp  
  418e5e:	add    al,0x7f
  418e60:	sbb    ecx,ebx
  418e62:	adc    esi,DWORD PTR [ebx-0x38b49f80]
  418e68:	ret    
  418e69:	call   DWORD PTR [ebx-0x5b5ba605]
  418e6f:	mov    ds:0xde7f6853,eax
  418e74:	pusha  
  418e75:	dec    eax
  418e76:	in     eax,0x34
  418e78:	shl    DWORD PTR [ebp+0x36],0x85
  418e7c:	xchg   BYTE PTR [ecx],cl
  418e7e:	fcomp  QWORD PTR [edx+ebp*2-0x2cde090]
  418e85:	out    dx,eax
  418e86:	in     eax,0x28
  418e88:	arpl   WORD PTR [ecx],ax
  418e8a:	sbb    bh,BYTE PTR [esi-0x7cad4c26]
  418e90:	stc    
  418e91:	cli    
  418e92:	addr16 inc edi
  418e94:	int3   
  418e95:	ret    
  418e96:	jne    0x418eb6
  418e98:	xchg   ebx,eax
  418e99:	ficomp WORD PTR [ecx]
  418e9b:	rcr    BYTE PTR [edi],1
  418e9d:	or     al,0x33
  418e9f:	pop    esp
  418ea0:	jmp    0x418eb0
  418ea2:	fcmovnbe st,st(4)
  418ea4:	retf   0xdbfa
  418ea7:	loope  0x418f14
  418ea9:	jne    0x418f1c
  418eab:	(bad)  
  418eac:	jmp    edi
  418eae:	repnz push ebx
  418eb0:	sbb    ebp,DWORD PTR [ebp-0x64f77978]
  418eb6:	xor    edi,DWORD PTR [ebx-0xc]
  418eb9:	outs   dx,BYTE PTR ds:[esi]
  418eba:	mov    cl,0x43
  418ebc:	jge    0x418e8f
  418ebe:	fs jb  0x418e5c
  418ec1:	jbe    0x418eae
  418ec3:	inc    ecx
  418ec4:	repz je 0x418e9c
  418ec7:	fcmovbe st,st(6)
  418ec9:	sbb    ecx,DWORD PTR [eax+0x4d]
  418ecc:	cmp    edi,ecx
  418ece:	sbb    al,0x45
  418ed0:	test   DWORD PTR [eax],esp
  418ed2:	ds dec esp
  418ed4:	push   0x3b
  418ed6:	xchg   ebp,eax
  418ed7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ed8:	push   edx
  418ed9:	dec    edx
  418eda:	mov    al,ds:0xb1ea4985
  418edf:	jo     0x418eb2
  418ee1:	push   edx
  418ee2:	jmp    0x58cc9d8c
  418ee7:	xor    eax,0x6d0927c3
  418eec:	test   DWORD PTR [eax-0x609643d],esi
  418ef2:	nop
  418ef3:	stos   BYTE PTR es:[edi],al
  418ef4:	xchg   ecx,eax
  418ef5:	call   0x6250405d
  418efa:	pushf  
  418efb:	sub    ebx,DWORD PTR [edi-0x1d5b2baa]
  418f01:	int3   
  418f02:	sti    
  418f03:	dec    edi
  418f04:	sar    BYTE PTR [edx+0x35906253],1
  418f0a:	fidiv  DWORD PTR [edx-0x7ad33820]
  418f10:	mov    ebx,0x9778fb64
  418f15:	mov    eax,0x544584d8
  418f1a:	daa    
  418f1b:	dec    eax
  418f1c:	data16 mov dl,0x97
  418f1f:	mov    eax,?
  418f21:	pop    ss
  418f22:	add    esi,DWORD PTR [eax+0x1e]
  418f25:	or     al,0x82
  418f27:	push   ecx
  418f28:	in     eax,0xf4
  418f2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f2b:	push   0xf3b7d2
  418f30:	push   edi
  418f31:	retf   
  418f32:	xchg   edi,eax
  418f33:	pop    esi
  418f34:	(bad)  
  418f35:	in     al,0x59
  418f37:	add    DWORD PTR [eax],ecx
  418f39:	not    BYTE PTR [esi+edx*2]
  418f3c:	sbb    al,0xe1
  418f3e:	mov    ecx,0x6a28b7f
  418f43:	add    al,0x73
  418f45:	jne    0x418fa6
  418f47:	push   cs
  418f48:	sti    
  418f49:	sbb    BYTE PTR [esi-0x46],bl
  418f4c:	popa   
  418f4d:	std    
  418f4e:	pop    ss
  418f4f:	addr16 and eax,0xf2cedad1
  418f55:	pop    eax
  418f56:	pop    edx
  418f57:	cld    
  418f58:	push   es
  418f59:	lods   al,BYTE PTR ds:[esi]
  418f5a:	retf   
  418f5b:	ss out 0x47,al
  418f5e:	pop    ebp
  418f5f:	cmc    
  418f60:	sub    ch,dl
  418f62:	mov    ecx,0x26fe4959
  418f67:	sbb    edi,DWORD PTR [edx-0x5321517]
  418f6d:	leave  
  418f6e:	pusha  
  418f6f:	mov    ecx,0x22099c35
  418f74:	out    dx,al
  418f75:	mov    bh,dh
  418f77:	fidivr WORD PTR [edx-0x52ce7e9]
  418f7d:	cli    
  418f7e:	cmp    cl,BYTE PTR [ebx-0x36ad7fb7]
  418f84:	mov    ecx,0xc8038384
  418f89:	jle    0x418f54
  418f8b:	fwait
  418f8c:	cmp    esp,0xdd8bb0db
  418f92:	daa    
  418f93:	adc    al,0xaa
  418f95:	dec    eax
  418f96:	xchg   ecx,eax
  418f97:	mov    esp,0x82da2d20
  418f9c:	dec    edi
  418f9d:	xor    al,al
  418f9f:	jg     0x418fb7
  418fa1:	les    esp,FWORD PTR [eax+0x1f5d3551]
  418fa7:	sbb    eax,0xc215853f
  418fac:	dec    ebp
  418fad:	adc    BYTE PTR [edx+0x32],dh
  418fb0:	mov    edx,0x5dd9a91c
  418fb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fb6:	jno    0x419036
  418fb8:	addr16 jne 0x418f65
  418fbb:	dec    ebp
  418fbc:	fst    QWORD PTR [edi*8+0x7a8c88a5]
  418fc3:	or     eax,0x4b6c749
  418fc8:	icebp  
  418fc9:	bound  esp,QWORD PTR [eax+0x1b]
  418fcc:	pop    ss
  418fcd:	inc    esp
  418fce:	jmp    0xf915:0x3ee0b9c9
  418fd5:	sub    DWORD PTR [esi],edi
  418fd7:	cmp    edx,ebx
  418fd9:	xchg   edx,eax
  418fda:	out    dx,eax
  418fdb:	mov    al,ds:0xfb70a7e
  418fe0:	mov    esi,0x407d8e8d
  418fe5:	sbb    DWORD PTR [eax],ecx
  418fe7:	jae    0x419048
  418fe9:	jecxz  0x418ff9
  418feb:	mov    dh,0xf8
  418fed:	loop   0x41901e
  418fef:	or     BYTE PTR [ebx+0x3e6bbecf],bl
  418ff5:	mov    edi,0xec3f22d8
  418ffa:	in     eax,0x2d
  418ffc:	test   BYTE PTR [ebp+0x6f9e59ac],0xcf
  419003:	scas   al,BYTE PTR es:[edi]
  419004:	jo     0x419016
  419006:	(bad)  [eax-0x43]
  419009:	call   0x250d78fa
  41900e:	pop    esp
  41900f:	sti    
  419010:	or     BYTE PTR [ebx+0x23a373bd],ah
  419016:	into   
  419017:	jl     0x418ff9
  419019:	sub    al,0xf9
  41901b:	mov    ebx,0xecabed4c
  419020:	mov    edx,0x3f11ef75
  419025:	dec    ebx
  419026:	cmp    al,0xcc
  419028:	or     al,0xa3
  41902a:	rcl    BYTE PTR [esi+0x525312b9],cl
  419030:	xchg   BYTE PTR [ecx-0x62807e98],ah
  419036:	dec    eax
  419037:	cmp    DWORD PTR [ebx+0x4c],0x18
  41903b:	adc    bh,ah
  41903d:	mov    cl,0x28
  41903f:	cli    
  419040:	cmp    al,BYTE PTR [ecx]
  419042:	int    0x2b
  419044:	aam    0x8b
  419046:	mov    al,0x28
  419048:	add    eax,edi
  41904a:	sub    BYTE PTR [edx],dl
  41904c:	loop   0x419085
  41904e:	std    
  41904f:	nop
  419050:	pop    esp
  419051:	arpl   bp,di
  419053:	and    al,0x42
  419055:	jnp    0x419077
  419057:	dec    esi
  419058:	int    0x8a
  41905a:	and    eax,DWORD PTR [ebp+0x6d3cda8f]
  419060:	jmp    0x1e22d204
  419065:	push   eax
  419066:	out    0x52,eax
  419068:	sbb    ch,BYTE PTR [ecx+edx*2]
  41906b:	xchg   ebx,eax
  41906c:	xchg   edx,eax
  41906d:	inc    cx
  41906f:	in     al,0x6
  419071:	test   eax,0x3724b9fb
  419076:	push   esi
  419077:	shl    ebp,1
  419079:	jb     0x41907e
  41907b:	loope  0x4190bd
  41907d:	(bad)  
  41907e:	sbb    eax,0x3e8397a5
  419083:	sub    BYTE PTR [esi-0x64],dh
  419086:	xchg   DWORD PTR [ecx+0x48fb6d4c],esp
  41908c:	and    DWORD PTR ds:0xf13ea442,0x1c
  419093:	xchg   esi,eax
  419094:	mov    eax,ds:0xaadc7654
  419099:	imul   edi
  41909b:	adc    al,0xf3
  41909d:	push   esi
  41909e:	adc    al,0xc9
  4190a0:	nop
  4190a1:	xchg   esp,eax
  4190a2:	or     cl,BYTE PTR [esi+0x56]
  4190a5:	mov    esp,0x9db4fa19
  4190aa:	mov    ch,0x23
  4190ac:	push   cs
  4190ad:	or     DWORD PTR [eax+ebp*4],eax
  4190b0:	inc    edx
  4190b1:	sub    dh,BYTE PTR [edx+0x6d]
  4190b4:	pavgw  mm1,QWORD PTR [ecx-0x6de6e078]
  4190bb:	jp     0x419046
  4190bd:	dec    eax
  4190be:	inc    ebp
  4190bf:	adc    dl,ah
  4190c1:	in     al,dx
  4190c2:	inc    edi
  4190c3:	cwde   
  4190c4:	mov    ds:0xa4fcc51,al
  4190c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190ca:	mov    esp,0x5dd73ad4
  4190cf:	pop    ebx
  4190d0:	imul   esi,DWORD PTR ds:0x34ef19e2,0x3b
  4190d7:	mov    esi,0xafea4042
  4190dc:	neg    DWORD PTR [edi]
  4190de:	cmc    
  4190df:	lds    ebx,FWORD PTR [ecx]
  4190e1:	sbb    BYTE PTR [edx+edi*8+0x69],al
  4190e5:	jp     0x419106
  4190e7:	out    dx,al
  4190e8:	in     al,0x18
  4190ea:	ret    0xd64a
  4190ed:	dec    ecx
  4190ee:	dec    ebp
  4190ef:	or     eax,0x82e3bf84
  4190f4:	popa   
  4190f5:	xchg   ebp,eax
  4190f6:	adc    BYTE PTR [ebx+0x25e90632],0x51
  4190fd:	mov    esi,0x3f440e89
  419102:	and    bl,cl
  419104:	dec    esp
  419105:	cmp    DWORD PTR [ebx],edi
  419107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419108:	int3   
  419109:	fs retf 0x8ddb
  41910d:	ret    0x3ae8
  419110:	mov    esp,0x494370c1
  419115:	in     eax,dx
  419116:	cmp    edi,ebx
  419118:	push   0x7b95b7b4
  41911d:	pop    esp
  41911e:	xor    al,0x18
  419120:	aaa    
  419121:	sub    BYTE PTR [edx+0x27],dh
  419124:	sub    BYTE PTR [esi-0x16cb09e9],dh
  41912a:	lds    eax,FWORD PTR [ecx+0x1a]
  41912d:	fdivp  st(1),st
  41912f:	sbb    al,0x82
  419131:	adc    ah,ah
  419133:	cmp    al,0x78
  419135:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419136:	add    eax,0x8404f2be
  41913b:	imul   eax,DWORD PTR [esi],0xfffffffd
  41913e:	xlat   BYTE PTR ds:[ebx]
  41913f:	dec    ebp
  419140:	mov    eax,ds:0x419e5dbc
  419145:	cmp    eax,0x48ca7dd0
  41914a:	push   esi
  41914b:	and    eax,DWORD PTR [esi]
  41914d:	or     eax,0x43d825a
  419152:	fwait
  419153:	mov    ds,WORD PTR ds:0x509a6fb6
  419159:	js     0x419166
  41915b:	push   ebp
  41915c:	cs push 0x169419f9
  419162:	mov    edi,0x37bbc1d2
  419167:	and    al,0x99
  419169:	cwde   
  41916a:	sahf   
  41916b:	in     eax,0x92
  41916d:	mov    ds:0xa3496b16,eax
  419172:	and    ecx,DWORD PTR [ecx-0x37ccb51d]
  419178:	add    al,0xeb
  41917a:	mov    dh,0x18
  41917c:	mov    dh,0x58
  41917e:	mov    ds:0xdf012c5e,al
  419183:	fdivr  DWORD PTR [eax-0x320e98c5]
  419189:	sti    
  41918a:	xchg   edx,eax
  41918b:	retf   0xaf2a
  41918e:	cmp    BYTE PTR [esi],ch
  419190:	iret   
  419191:	push   esi
  419192:	pop    edi
  419193:	shr    BYTE PTR [ebp+0x7],cl
  419196:	fistp  QWORD PTR [eax]
  419198:	inc    esp
  419199:	fidivr DWORD PTR [esi+0x1d]
  41919c:	je     0x419145
  41919e:	inc    edi
  41919f:	(bad)  
  4191a0:	out    dx,al
  4191a1:	dec    esi
  4191a2:	aam    0x65
  4191a4:	or     eax,DWORD PTR [esi+ebx*1]
  4191a7:	retf   
  4191a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191a9:	(bad)  
  4191ab:	jmp    0x419200
  4191ad:	jo     0x4191a6
  4191af:	cmp    DWORD PTR [edi-0x4cc9b58],0xffffff92
  4191b6:	std    
  4191b7:	add    ebx,ebp
  4191b9:	mov    cl,0xc2
  4191bb:	adc    ah,BYTE PTR [esi]
  4191bd:	pop    esp
  4191be:	neg    edi
  4191c0:	mov    eax,0x1d5ad7a4
  4191c5:	mov    ds:0xdb5e917,eax
  4191ca:	cmp    DWORD PTR [edx-0x575ef6f2],esp
  4191d0:	mov    esi,0x7d60a08f
  4191d5:	nop
  4191d6:	sti    
  4191d7:	bndldx bnd1,[ebx-0x61]
  4191db:	push   ss
  4191dc:	mov    ch,0x77
  4191de:	pop    esi
  4191df:	mov    ecx,0x6e451643
  4191e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191e5:	jge    0x41918e
  4191e7:	mov    ch,0x59
  4191e9:	test   al,0xb1
  4191eb:	in     eax,dx
  4191ec:	and    eax,DWORD PTR [ecx]
  4191ee:	out    dx,al
  4191ef:	das    
  4191f0:	or     BYTE PTR [ecx-0x37e5b682],0x46
  4191f7:	cmp    al,0x22
  4191f9:	sbb    DWORD PTR ds:0x30176b23,esp
  4191ff:	add    edx,DWORD PTR [esi+0x7badf0e4]
  419205:	xchg   ecx,eax
  419206:	cmp    al,0xe3
  419208:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419209:	fdivr  st(7),st
  41920b:	retf   
  41920c:	or     eax,0x6bc70d8f
  419211:	jne    0x419279
  419213:	test   eax,0x74f07964
  419218:	sub    esi,eax
  41921a:	arpl   WORD PTR [esi],di
  41921c:	pop    es
  41921d:	addr16 aam 0xfa
  419220:	je     0x419285
  419222:	push   cs
  419223:	jb     0x4191d6
  419225:	push   0x872517e7
  41922a:	inc    edi
  41922b:	shr    BYTE PTR [ecx],0x90
  41922e:	out    dx,al
  41922f:	xchg   ebx,eax
  419230:	loope  0x419265
  419232:	mov    esi,0x24b4bc0f
  419237:	fs and DWORD PTR ss:[esi-0x78943e42],0xf679bd7b
  419243:	sub    BYTE PTR [esi],cl
  419245:	gs adc dl,0x8f
  419249:	enter  0x3e7b,0x56
  41924d:	(bad)  
  41924e:	imul   ebp,DWORD PTR [ecx+0x1ea1b371],0xffffffbc
  419255:	in     eax,dx
  419256:	das    
  419257:	or     al,0x19
  419259:	imul   edx,DWORD PTR [edi+0x13],0xfab6ed51
  419260:	cli    
  419261:	inc    ebp
  419262:	dec    eax
  419263:	pop    esp
  419264:	dec    ecx
  419265:	push   es
  419266:	mov    ds:0x57bc732b,eax
  41926b:	push   ecx
  41926c:	fdiv   QWORD PTR [esi]
  41926e:	add    al,0x67
  419270:	cs inc ecx
  419272:	aas    
  419273:	nop
  419274:	or     eax,0x501933c5
  419279:	add    DWORD PTR cs:[edx+edi*4-0x3f],ebp
  41927e:	dec    esi
  41927f:	inc    ecx
  419280:	jae    0x419261
  419282:	pop    ds
  419283:	lahf   
  419284:	adc    eax,0xe4da2792
  419289:	fs jecxz 0x419294
  41928c:	sti    
  41928d:	call   DWORD PTR ds:0x4d89c833
  419293:	or     BYTE PTR [ebx+0x558b084d],cl
  419299:	test   al,0x81
  41929b:	shl    edx,0x8
  41929e:	push   edi
  41929f:	add    BYTE PTR [edi],cl
  4192a1:	scas   eax,DWORD PTR es:[edi]
  4192a2:	retf   0x4d89
  4192a5:	test   al,0x8b
  4192a7:	dec    ebp
  4192a8:	or     BYTE PTR [ebx-0x3e7e53ab],cl
  4192ae:	pushf  
  4192af:	clc    
  4192b0:	add    BYTE PTR fs:[ebx],cl
  4192b3:	retf   0x4d89
  4192b6:	lods   al,BYTE PTR ds:[esi]
  4192b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4192ba:	jmp    0x41b643
  4192bf:	aad    0xa2
  4192c1:	mov    dh,0x8d
  4192c3:	mov    al,0x81
  4192c5:	ror    BYTE PTR [edx+0x26797ce2],0xb0
  4192cc:	outs   dx,DWORD PTR ds:[esi]
  4192cd:	sbb    ah,BYTE PTR [esi+0x27]
  4192d0:	sbb    al,0x82
  4192d2:	adc    DWORD PTR [edi],0x5c
  4192d5:	add    DWORD PTR [ebx+0x5c5b38d8],0x7e
  4192dc:	(bad)  
  4192dd:	lds    esi,FWORD PTR [eax+eax*8-0x1b8ed97e]
  4192e4:	sbb    BYTE PTR [esi+0x36a0b508],dl
  4192ea:	push   es
  4192eb:	push   ebx
  4192ec:	add    edi,DWORD PTR [esi+0x2e646fd8]
  4192f2:	mov    ?,WORD PTR [esi]
  4192f4:	pop    es
  4192f5:	cli    
  4192f6:	sub    bl,BYTE PTR [edx]
  4192f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192f9:	outs   dx,DWORD PTR ds:[esi]
  4192fa:	pop    ss
  4192fb:	sbb    BYTE PTR [ebx-0x29],dh
  4192fe:	(bad)  
  419300:	ret    
  419301:	ret    0x730f
  419304:	jns    0x4192cc
  419306:	les    ebx,FWORD PTR [ebx-0x31b32f8c]
  41930c:	xchg   edx,eax
  41930d:	(bad)  [ecx-0xd]
  419310:	imul   ebx,esi,0x2e42d1b3
  419316:	xchg   esi,eax
  419317:	push   ebp
  419318:	mov    BYTE PTR [eax],dh
  41931a:	stc    
  41931b:	inc    esi
  41931c:	xchg   esi,eax
  41931d:	sbb    al,0xc
  41931f:	mov    al,0x92
  419321:	cli    
  419322:	inc    esp
  419323:	xlat   BYTE PTR ds:[ebx]
  419324:	and    al,0xe9
  419326:	mov    ah,BYTE PTR [edx-0x6082b505]
  41932c:	mov    al,0x7
  41932e:	jbe    0x41934c
  419330:	push   0xffffff81
  419332:	(bad)  
  419333:	jg     0x419301
  419335:	adc    BYTE PTR [eax],bl
  419337:	mov    cl,0xe4
  419339:	dec    ebp
  41933a:	fcomp  DWORD PTR [ebp+0x5e8363d3]
  419340:	mov    ebx,0x7f7d4a22
  419345:	into   
  419346:	pop    eax
  419347:	jb     0x4193b3
  419349:	inc    eax
  41934a:	or     DWORD PTR [ebp+0x6a1af808],ecx
  419350:	jns    0x4193a7
  419352:	daa    
  419353:	les    esp,FWORD PTR [edi+edi*8]
  419356:	and    bl,BYTE PTR [esi+0x58]
  419359:	fwait
  41935a:	push   ebp
  41935b:	scas   al,BYTE PTR es:[edi]
  41935c:	pop    edx
  41935d:	push   es
  41935e:	stos   DWORD PTR es:[edi],eax
  41935f:	pusha  
  419360:	or     eax,0x77172291
  419365:	adc    BYTE PTR [ebx+0x2f8d5097],bh
  41936b:	ss jecxz 0x419337
  41936e:	lock cdq 
  419370:	jle    0x419381
  419372:	cmp    ah,0x5c
  419375:	xchg   edi,eax
  419376:	rol    BYTE PTR [ecx+0x781d6651],cl
  41937c:	and    BYTE PTR [ecx],0xce
  41937f:	jb     0x419329
  419381:	xlat   BYTE PTR ds:[ebx]
  419382:	mov    bh,0x16
  419384:	(bad)  
  419386:	(bad)  
  419387:	mov    ch,0x14
  419389:	push   0x82dda80f
  41938e:	rcr    BYTE PTR ds:0x658b79e,1
  419394:	pop    ebx
  419395:	call   0x89b:0xbac14d64
  41939c:	(bad)  
  41939e:	dec    edx
  41939f:	inc    esi
  4193a0:	nop
  4193a1:	xor    DWORD PTR [ebx+0x49],edx
  4193a4:	popa   
  4193a5:	rol    DWORD PTR [edx+ecx*2+0x51],1
  4193a9:	dec    esi
  4193aa:	jae    0x419370
  4193ac:	dec    esi
  4193ad:	add    BYTE PTR [edi+edx*4-0x404bf76a],al
  4193b4:	push   esp
  4193b5:	push   ecx
  4193b6:	and    edi,DWORD PTR [esi-0x7f]
  4193b9:	ins    BYTE PTR es:[edi],dx
  4193ba:	enter  0xc763,0x8d
  4193be:	fisubr WORD PTR [esi+edi*8+0x70cad20e]
  4193c5:	inc    eax
  4193c6:	inc    ecx
  4193c7:	cdq    
  4193c8:	mov    dl,0x4d
  4193ca:	xor    ah,ah
  4193cc:	cs (bad) 
  4193cf:	popa   
  4193d0:	fs push ecx
  4193d2:	dec    esp
  4193d3:	push   eax
  4193d4:	lods   eax,DWORD PTR ds:[esi]
  4193d5:	fcom   QWORD PTR ds:0x16ddc2ea
  4193db:	adc    dl,BYTE PTR [esi+0x3bc63f9f]
  4193e1:	mov    ds:0x6d8c8de3,eax
  4193e6:	mov    al,ds:0x13120587
  4193eb:	pop    ds
  4193ec:	add    al,0x40
  4193ee:	lea    ebp,[ebp+0x42fe95e5]
  4193f4:	pop    ebp
  4193f5:	scas   al,BYTE PTR es:[edi]
  4193f6:	pop    edi
  4193f7:	adc    DWORD PTR [ebx+0x4b],ecx
  4193fa:	repz sbb eax,DWORD PTR [edi+ebp*1-0x7e]
  4193ff:	clc    
  419400:	xchg   ebx,eax
  419401:	int    0x8d
  419403:	cmp    eax,0x395d810d
  419408:	jo     0x4193c3
  41940a:	(bad)  
  41940b:	mov    ebp,0xde676695
  419410:	cmp    bh,BYTE PTR [edx+0x32a3ad4d]
  419416:	cli    
  419417:	cmp    BYTE PTR [ecx],bl
  419419:	mov    DWORD PTR [esi-0x2c617c0d],0x9f30f317
  419423:	pushf  
  419424:	jp     0x4193e6
  419426:	cmp    al,dl
  419428:	pop    ss
  419429:	out    dx,eax
  41942a:	popa   
  41942b:	or     DWORD PTR [esi-0x9712dc3],0x1a
  419432:	icebp  
  419433:	popa   
  419434:	stos   BYTE PTR es:[edi],al
  419435:	dec    edi
  419436:	fs add bh,dl
  419439:	mov    ebx,0x8bb144fb
  41943e:	push   cs
  41943f:	xchg   BYTE PTR [eax+0x7d],dl
  419442:	push   edx
  419443:	sti    
  419444:	repnz inc edx
  419446:	mov    edx,0xab11c734
  41944b:	push   cs
  41944c:	mov    al,ds:0x72922904
  419451:	or     al,0xad
  419453:	xor    al,0x2a
  419455:	gs fcmovu st,st(6)
  419458:	aam    0xe9
  41945a:	loope  0x4193df
  41945c:	inc    ebx
  41945d:	mov    cl,0x75
  41945f:	retf   
  419460:	imul   ecx,edi,0xffffffba
  419463:	sbb    bl,cl
  419465:	ss or  eax,0x241a5bff
  41946b:	fdivr  st,st(1)
  41946d:	mov    eax,ds:0x752e1c57
  419472:	xor    ebx,DWORD PTR [ebp-0x3c]
  419475:	jb     0x419456
  419477:	sub    edx,DWORD PTR [ebp+0x265c18e2]
  41947d:	push   edi
  41947e:	dec    edi
  41947f:	mov    eax,ds:0xa4db542c
  419484:	cwde   
  419485:	mov    ah,0x98
  419487:	lods   al,BYTE PTR ds:[esi]
  419488:	out    0xaf,al
  41948a:	jmp    0x6717173f
  41948f:	mov    ebp,0xa46fe2fb
  419494:	pop    esi
  419495:	ret    0xd86c
  419498:	mov    al,0x47
  41949a:	repnz stos BYTE PTR es:[edi],al
  41949c:	ja     0x41946c
  41949e:	int    0xa7
  4194a0:	sub    eax,0x543f1494
  4194a5:	xor    BYTE PTR [edx-0x7f],0xb9
  4194a9:	xor    DWORD PTR [eax-0x1e],ecx
  4194ac:	mov    ds:0xa5308a51,al
  4194b1:	data16 mov ch,BYTE PTR cs:0x8e6c9b17
  4194b9:	add    ecx,esi
  4194bb:	xlat   BYTE PTR ds:[ebx]
  4194bc:	ja     0x41946b
  4194be:	nop
  4194bf:	out    0xea,eax
  4194c1:	mov    ah,0x75
  4194c3:	mov    edi,0x8e5b0606
  4194c8:	stos   DWORD PTR es:[edi],eax
  4194c9:	xchg   DWORD PTR [esi],ebx
  4194cb:	push   esi
  4194cc:	cmc    
  4194cd:	or     DWORD PTR [esp+eax*2+0x6752517e],0xffffff80
  4194d5:	dec    ebp
  4194d6:	loop   0x41953c
  4194d8:	jne    0x41945c
  4194da:	dec    esp
  4194db:	push   0x1d
  4194dd:	arpl   WORD PTR [edi+0x57],ax
  4194e0:	fst    QWORD PTR [ecx+0x21]
  4194e3:	cmp    bh,BYTE PTR [edi]
  4194e5:	ins    DWORD PTR es:[edi],dx
  4194e6:	inc    ebx
  4194e7:	outs   dx,BYTE PTR ds:[esi]
  4194e8:	sub    esi,DWORD PTR [esi-0x46]
  4194eb:	icebp  
  4194ec:	ss jmp 0x524:0x154d9551
  4194f4:	int    0x77
  4194f6:	or     dh,BYTE PTR [edx+0x793a24fe]
  4194fc:	not    BYTE PTR [ecx-0x753dce6]
  419502:	daa    
  419503:	jae    0x419527
  419505:	and    ebx,esi
  419507:	mov    ebx,0x5a1bfc9c
  41950c:	jb     0x419568
  41950e:	mov    esp,0xaf62a606
  419513:	and    ch,BYTE PTR [ebp+0x7212247d]
  419519:	xor    DWORD PTR [ebx+eax*2],0x6f
  41951d:	cmp    al,0x99
  41951f:	sar    DWORD PTR [esi],cl
  419521:	sbb    eax,0xf05d50
  419526:	loope  0x419564
  419528:	jl     0x419594
  41952a:	test   BYTE PTR [edi-0x65d1adee],al
  419530:	iret   
  419531:	sub    al,0xa9
  419533:	cdq    
  419534:	clc    
  419535:	mov    dl,0xc7
  419537:	data16 cmp BYTE PTR [edi+0x20234b12],0x38
  41953f:	dec    ebp
  419540:	or     BYTE PTR [ebp+eax*8+0x3a330289],ah
  419547:	mov    dl,0xfd
  419549:	test   dh,dh
  41954b:	mov    esi,0xc3895950
  419550:	fcmove st,st(7)
  419552:	test   BYTE PTR [ebp-0x29a90767],bl
  419558:	(bad)  
  419559:	adc    DWORD PTR [edi],edx
  41955b:	sar    DWORD PTR [ecx],1
  41955d:	xchg   ecx,eax
  41955e:	ins    BYTE PTR es:[edi],dx
  41955f:	add    BYTE PTR es:[edx+0x5c],0x94
  419564:	push   edi
  419565:	adc    ecx,DWORD PTR [ebp+eiz*8+0x4]
  419569:	ins    DWORD PTR es:[edi],dx
  41956a:	(bad)  
  41956b:	mov    ebp,0xd6efb9d8
  419570:	add    al,0x8c
  419572:	test   BYTE PTR [ebp-0x27],bh
  419575:	sbb    DWORD PTR [edi+0x742e1eaa],esi
  41957b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41957c:	stc    
  41957d:	cmp    dh,BYTE PTR [edx+0x3e]
  419580:	aaa    
  419581:	mov    dl,ah
  419583:	pushf  
  419584:	enter  0xd19c,0x38
  419588:	push   ss
  419589:	aaa    
  41958a:	inc    ebp
  41958b:	mov    edi,0x43bf6b36
  419590:	jae    0x4195ca
  419592:	fld    TBYTE PTR [esi-0x79ed4f3]
  419598:	pop    edx
  419599:	push   ebx
  41959a:	and    dh,BYTE PTR [edi]
  41959c:	div    DWORD PTR [eax+0xcbd1a7a]
  4195a2:	mov    dl,0x64
  4195a4:	xchg   DWORD PTR [ebx-0x17e7993a],ebx
  4195aa:	retf   0x364c
  4195ad:	std    
  4195ae:	mov    edx,0xe5116955
  4195b3:	shl    DWORD PTR [esi-0x3],1
  4195b6:	jae    0x4195e7
  4195b8:	jne    0x4195dc
  4195ba:	or     BYTE PTR [eax-0x56],dl
  4195bd:	jbe    0x4195ad
  4195bf:	pop    edx
  4195c0:	cwde   
  4195c1:	and    al,0x82
  4195c3:	push   ds
  4195c4:	push   0xffffff87
  4195c6:	sub    eax,0x73eae756
  4195cb:	jb     0x419559
  4195cd:	cli    
  4195ce:	pop    ebx
  4195cf:	pushf  
  4195d0:	ror    DWORD PTR [eax],0x2c
  4195d3:	dec    DWORD PTR [esi-0x58f622ff]
  4195d9:	aad    0x51
  4195db:	lods   al,BYTE PTR ds:[esi]
  4195dc:	sub    BYTE PTR [ebx],ah
  4195de:	push   ecx
  4195df:	xor    BYTE PTR [esi+ebx*4-0x18],bh
  4195e3:	cmp    DWORD PTR [edi],0x66
  4195e6:	xchg   esp,eax
  4195e7:	fiadd  DWORD PTR [ecx+0xe]
  4195ea:	ret    
  4195eb:	dec    esi
  4195ec:	mov    DWORD PTR [ecx-0x6d],edi
  4195ef:	mov    eax,0x21ea443d
  4195f4:	push   edx
  4195f5:	dec    ebx
  4195f6:	cmp    cl,bh
  4195f8:	in     al,dx
  4195f9:	mov    cl,0x14
  4195fb:	lds    ebp,FWORD PTR [ecx+eiz*4-0x713a127e]
  419602:	and    cl,BYTE PTR [esi-0x46261f16]
  419608:	and    eax,0x71c4ef32
  41960d:	clc    
  41960e:	cmp    BYTE PTR [ebp+ebx*8-0x7a90b971],dl
  419615:	inc    ebp
  419616:	adc    dh,cl
  419618:	adc    eax,0x1156060b
  41961d:	jae    0x4195d8
  41961f:	push   0x5d
  419621:	push   ebx
  419622:	daa    
  419623:	mov    ebx,0x8438e82b
  419628:	ins    BYTE PTR es:[edi],dx
  419629:	adc    DWORD PTR [eax+0x70],edx
  41962c:	jmp    0x5a53a8dc
  419631:	xchg   ebp,eax
  419632:	dec    ebp
  419633:	imul   edx,DWORD PTR [esi],0xffffffe2
  419636:	or     BYTE PTR [edi-0x704ddac5],ah
  41963c:	leave  
  41963d:	and    BYTE PTR [ebx-0x15],bh
  419640:	sbb    cl,BYTE PTR [esi+0x52]
  419643:	rol    DWORD PTR [ebx-0x3a60be58],1
  419649:	stos   DWORD PTR es:[edi],eax
  41964a:	das    
  41964b:	inc    ecx
  41964c:	int3   
  41964d:	popa   
  41964e:	nop
  41964f:	loop   0x419683
  419651:	(bad)  
  419653:	or     al,0xd8
  419655:	lahf   
  419656:	scas   al,BYTE PTR es:[edi]
  419657:	sahf   
  419658:	retf   0x84c
  41965b:	pop    ss
  41965c:	stos   BYTE PTR es:[edi],al
  41965d:	dec    edi
  41965e:	push   edx
  41965f:	xchg   esp,eax
  419660:	sbb    edx,DWORD PTR [ecx-0x13c261bf]
  419666:	push   ebx
  419667:	fst    QWORD PTR [esi-0x4b7de9db]
  41966d:	inc    edi
  41966e:	fwait
  41966f:	into   
  419670:	sub    DWORD PTR [edi-0x1b5d27bf],edi
  419676:	or     cl,dl
  419678:	ret    
  419679:	mov    ss,WORD PTR [ebx]
  41967b:	ja     0x4196fc
  41967d:	repz mov edx,0xbaefc25
  419683:	or     eax,0xa278914d
  419688:	jle    0x4196a9
  41968a:	inc    edx
  41968b:	gs adc eax,0xa2a7ba7d
  419691:	xchg   edx,eax
  419692:	sbb    eax,0xf9a384a5
  419697:	call   0xdb59:0xf5497dd5
  41969e:	fistp  QWORD PTR [ecx]
  4196a0:	add    al,0x47
  4196a2:	push   esi
  4196a3:	sub    eax,0x12ad101a
  4196a8:	push   cs
  4196a9:	(bad)  [edx-0x75726cd1]
  4196af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196b0:	fild   DWORD PTR [ebp+0x528df477]
  4196b6:	call   0xb9af:0xee8b9d53
  4196bd:	jmp    0x419640
  4196bf:	mov    ds:0xe8d2eb23,al
  4196c4:	daa    
  4196c5:	adc    cl,0xca
  4196c8:	inc    ebp
  4196c9:	sbb    dl,BYTE PTR [ebp-0x5b]
  4196cc:	or     al,0x5c
  4196ce:	mov    ebx,0x424712a4
  4196d3:	cmc    
  4196d4:	xor    eax,0xb862ba38
  4196d9:	mov    al,0xcf
  4196db:	(bad)  
  4196dc:	push   cs
  4196dd:	imul   edi,esi,0xffffffc0
  4196e0:	dec    esp
  4196e1:	mov    esi,0x6b504e2e
  4196e6:	xor    esi,DWORD PTR [edi]
  4196e8:	and    al,0x94
  4196ea:	and    BYTE PTR [ebp-0x7d7b8da3],al
  4196f0:	imul   ebx,esi,0xbabd640
  4196f6:	push   ds
  4196f7:	nop    ebp
  4196fa:	lods   al,BYTE PTR ds:[esi]
  4196fb:	mov    DWORD PTR [eax-0x27ccd33b],esp
  419701:	call   0xfd2e:0xb12c50b9
  419708:	cmp    al,0x5
  41970a:	jae    0x419720
  41970c:	jno    0x419759
  41970e:	adc    DWORD PTR [eax],ecx
  419710:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419711:	xor    al,0xea
  419713:	out    dx,al
  419714:	test   eax,0xfec12d56
  419719:	inc    ebx
  41971a:	lds    ebx,FWORD PTR [eax-0x20]
  41971d:	clc    
  41971e:	mov    ah,0x8a
  419720:	and    edi,esi
  419722:	mov    WORD PTR [esi-0x1f980a4d],ds
  419728:	sar    edx,cl
  41972a:	out    dx,eax
  41972b:	xchg   ebx,eax
  41972c:	fdiv   DWORD PTR [ebx]
  41972e:	dec    ebx
  41972f:	icebp  
  419730:	fidivr DWORD PTR [eax-0x6c]
  419733:	pusha  
  419734:	in     al,dx
  419735:	xor    al,0x4c
  419737:	cmp    ebp,DWORD PTR [edi+0x792d3300]
  41973d:	(bad)  
  41973e:	shr    BYTE PTR [edx],cl
  419740:	fisubr WORD PTR [ebp+0x142d4f4d]
  419746:	and    eax,0x3793ce4c
  41974b:	dec    eax
  41974c:	cmp    eax,0xfce0624f
  419751:	push   edx
  419752:	fisttp DWORD PTR [eax-0x12ca082a]
  419758:	retf   0x4f87
  41975b:	sahf   
  41975c:	sub    eax,0x997ad987
  419761:	aaa    
  419762:	mov    ah,dl
  419764:	cli    
  419765:	sti    
  419766:	lds    ebp,FWORD PTR [edi+0x79]
  419769:	dec    esp
  41976a:	data16 not BYTE PTR [ebx]
  41976d:	mov    bl,bl
  41976f:	and    BYTE PTR ds:0x7964baf3,0x17
  419776:	push   0x63cf426
  41977b:	xchg   esp,eax
  41977c:	xchg   ah,bh
  41977e:	sub    DWORD PTR [eax],edx
  419780:	daa    
  419781:	ins    DWORD PTR es:[edi],dx
  419782:	xor    ch,bh
  419784:	gs pop ebx
  419786:	add    BYTE PTR [edx],0xab
  419789:	xchg   cl,cl
  41978b:	imul   edi,DWORD PTR [esi+0x3f6f3d7a],0x8
  419792:	sub    ah,cl
  419794:	fcomp  QWORD PTR [esi-0x69aad913]
  41979a:	dec    edx
  41979b:	mov    dl,0x99
  41979d:	or     DWORD PTR [ecx],ebp
  41979f:	inc    ecx
  4197a0:	test   DWORD PTR [ebx],esi
  4197a2:	stos   BYTE PTR es:[edi],al
  4197a3:	and    al,0x3d
  4197a5:	aas    
  4197a6:	mov    bh,0xc1
  4197a8:	mov    bh,0xa9
  4197aa:	xor    BYTE PTR [ebx+0x5c],dh
  4197ad:	sub    BYTE PTR [esi],dh
  4197af:	inc    edi
  4197b0:	and    al,0xbe
  4197b2:	imul   ebx,DWORD PTR [eax],0xffffff9e
  4197b5:	repz jns 0x41975f
  4197b8:	in     eax,dx
  4197b9:	pop    edx
  4197ba:	and    bh,BYTE PTR [edx+0x44]
  4197bd:	test   eax,0xbaf7f337
  4197c2:	mov    bl,0xe5
  4197c4:	push   ss
  4197c5:	push   esi
  4197c6:	outs   dx,DWORD PTR ds:[esi]
  4197c7:	jbe    0x41982e
  4197c9:	daa    
  4197ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197cb:	(bad)  
  4197cd:	pop    eax
  4197ce:	inc    esp
  4197cf:	ret    
  4197d0:	xchg   ecx,eax
  4197d1:	and    BYTE PTR [eax],ch
  4197d3:	and    BYTE PTR [eax-0x567e0106],0x96
  4197da:	out    dx,al
  4197db:	and    DWORD PTR [edi],0xffffffdb
  4197de:	sbb    ecx,DWORD PTR [eax+0x7d]
  4197e1:	(bad)  
  4197e2:	enter  0x79ec,0x39
  4197e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197e7:	fbstp  TBYTE PTR [ecx-0x3b0cc4e3]
  4197ed:	mov    ebx,0xaea328ac
  4197f2:	es jg  0x4197c6
  4197f5:	ror    esp,cl
  4197f7:	sti    
  4197f8:	pop    ss
  4197f9:	push   0x6d806af1
  4197fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197ff:	loop   0x419810
  419801:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419802:	and    edx,ebx
  419804:	xchg   esp,eax
  419805:	sbb    esi,DWORD PTR [ebp+0x397fb842]
  41980b:	mov    bh,0x7a
  41980d:	sbb    BYTE PTR [edx-0x23b3dc32],ch
  419813:	jmp    0xf746:0x518df2ec
  41981a:	cmp    dl,ah
  41981c:	aaa    
  41981d:	pop    ss
  41981e:	retf   
  41981f:	xor    eax,0x4593804c
  419824:	dec    ebp
  419825:	bswap  esi
  419827:	pop    esi
  419828:	adc    ebp,edx
  41982a:	cmc    
  41982b:	scas   al,BYTE PTR es:[edi]
  41982c:	aas    
  41982d:	sub    al,0x8f
  41982f:	sar    BYTE PTR [edx],cl
  419831:	in     al,dx
  419832:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419833:	dec    edi
  419834:	rcl    BYTE PTR ss:[edx],0xfd
  419838:	cmp    DWORD PTR [ebp+0x6a],0xfffffff6
  41983c:	cdq    
  41983d:	xor    DWORD PTR [edi+ecx*8-0x37],ecx
  419841:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419842:	push   ds
  419843:	hlt    
  419844:	inc    eax
  419845:	rol    edx,1
  419847:	(bad)  
  419848:	sub    eax,0x82ae2bd5
  41984d:	mov    al,ds:0xfadda11e
  419852:	ss inc edx
  419854:	push   ds
  419855:	arpl   dx,bx
  419857:	jno    0x419888
  419859:	sbb    al,dh
  41985b:	arpl   WORD PTR [edx+0x21],si
  41985e:	jge    0x4198d9
  419860:	sbb    DWORD PTR [ecx],ecx
  419862:	rol    BYTE PTR [esp+eax*2+0x18],cl
  419866:	les    ebp,FWORD PTR [ecx+ebx*4]
  419869:	jno    0x41989d
  41986b:	adc    DWORD PTR [edi],0x2
  41986e:	push   ss
  41986f:	adc    ecx,DWORD PTR ds:0xfa31eb1c
  419875:	sub    ebp,ebp
  419877:	(bad)  
  419879:	in     eax,0xd
  41987b:	push   edx
  41987c:	hlt    
  41987d:	sbb    eax,0x3091be2f
  419882:	xchg   ebx,eax
  419883:	fiadd  WORD PTR [edx+0x79]
  419886:	sub    dl,ch
  419888:	ds push ecx
  41988a:	fisub  DWORD PTR [edx]
  41988c:	jns    0x41985f
  41988e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41988f:	aad    0xb5
  419891:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419892:	add    dl,ch
  419894:	(bad)  
  419895:	test   eax,0x9ed2dd59
  41989a:	adc    eax,0x374c6252
  41989f:	xchg   ebp,eax
  4198a0:	inc    esp
  4198a1:	xchg   DWORD PTR [ebp-0x44],eax
  4198a4:	(bad)
  4198a7:	and    BYTE PTR [ebp-0x34],dl
  4198aa:	enter  0x7d21,0xe8
  4198ae:	cwde   
  4198af:	ja     0x419930
  4198b1:	sbb    eax,DWORD PTR [eax+0x6b]
  4198b4:	cmc    
  4198b5:	and    esi,DWORD PTR [edx-0x74]
  4198b8:	call   0xba8b41ed
  4198bd:	inc    ebp
  4198be:	loop   0x41985a
  4198c0:	mov    WORD PTR [ebx+ebp*1],?
  4198c3:	mov    bh,0xe
  4198c5:	call   0x48241df1
  4198ca:	repnz xor al,0xe9
  4198cd:	mov    al,ds:0xf1cd3eb5
  4198d2:	push   ebp
  4198d3:	sbb    DWORD PTR [esi],0x3410cb23
  4198d9:	clc    
  4198da:	jg     0x41985d
  4198dc:	out    0x9b,al
  4198de:	dec    ecx
  4198df:	out    0x70,al
  4198e1:	lods   eax,DWORD PTR ds:[esi]
  4198e2:	mov    al,0x4f
  4198e4:	scas   al,BYTE PTR es:[edi]
  4198e5:	xlat   BYTE PTR ds:[ebx]
  4198e6:	fidiv  DWORD PTR [eax-0x7e603e11]
  4198ec:	sti    
  4198ed:	xchg   ebp,eax
  4198ee:	xchg   esp,eax
  4198ef:	sbb    edi,DWORD PTR [eax]
  4198f1:	aaa    
  4198f2:	dec    eax
  4198f3:	pop    eax
  4198f4:	add    al,0x5c
  4198f6:	popf   
  4198f7:	push   ss
  4198f8:	mov    ecx,0xd5313e8e
  4198fd:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4198ff:	bound  ebx,QWORD PTR [eax-0x1c275a6e]
  419905:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419906:	jnp    0x4198ea
  419908:	xor    esi,eax
  41990a:	fmul   QWORD PTR [ecx+0x7a]
  41990d:	push   esi
  41990e:	fnsave [esi]
  419910:	lods   al,BYTE PTR ds:[esi]
  419911:	inc    edi
  419912:	and    DWORD PTR [edx+0x5f7eabdf],eax
  419918:	mov    dh,0x36
  41991a:	lock in eax,0x77
  41991d:	inc    BYTE PTR [edi]
  41991f:	push   0x2f
  419921:	test   eax,0x7b12a00a
  419926:	sbb    BYTE PTR [ebp-0x2a226a07],0xc7
  41992d:	fsubr  st,st(1)
  41992f:	(bad)  
  419930:	in     al,0x50
  419932:	sbb    bh,bl
  419934:	imul   ebp,DWORD PTR [edx+ebx*2-0x260defe],0x24f252a9
  41993f:	pop    ecx
  419940:	mov    edx,0x7b8568f1
  419946:	sub    edx,esp
  419948:	retf   0xe73
  41994b:	sbb    al,0x44
  41994d:	(bad)  
  41994e:	repnz push eax
  419950:	fnstsw WORD PTR [eax]
  419952:	xor    edi,DWORD PTR [ecx-0x6a4200d1]
  419958:	cwde   
  419959:	in     al,dx
  41995a:	add    ebp,DWORD PTR [ecx]
  41995c:	pop    edx
  41995d:	rcl    dh,cl
  41995f:	into   
  419960:	into   
  419961:	int    0xe6
  419963:	pop    edx
  419964:	add    BYTE PTR [ecx],cl
  419966:	(bad)  
  419967:	xchg   esp,ebp
  419969:	daa    
  41996a:	or     al,0x3c
  41996c:	into   
  41996d:	stc    
  41996e:	(bad)  
  41996f:	scas   eax,DWORD PTR es:[edi]
  419970:	mov    bh,0x9b
  419972:	ret    
  419973:	sbb    BYTE PTR [ebx+0x58d462ad],al
  419979:	dec    BYTE PTR ds:0x6ea4763e
  41997f:	or     eax,0x22474f00
  419984:	xchg   ecx,eax
  419985:	(bad)  
  419986:	(bad)  
  419987:	mov    dh,0xa6
  419989:	jmp    0x8d6a83f2
  41998e:	xchg   edi,eax
  41998f:	mov    ch,0x84
  419991:	jg     0x419999
  419993:	out    dx,eax
  419994:	push   ebp
  419995:	add    ebp,ecx
  419997:	pop    ds
  419998:	jmp    0x419956
  41999a:	dec    esp
  41999b:	jbe    0x41997f
  41999d:	jnp    0x4199f9
  41999f:	out    dx,al
  4199a0:	leave  
  4199a1:	test   al,0x6c
  4199a3:	inc    eax
  4199a4:	inc    ecx
  4199a6:	cli    
  4199a7:	into   
  4199a8:	pop    ss
  4199a9:	loope  0x419945
  4199ab:	je     0x419934
  4199ad:	mov    ch,0xcc
  4199af:	test   al,0xa5
  4199b1:	fs jmp 0x22cb:0x8319bd52
  4199b9:	(bad)  
  4199ba:	mov    edx,0x8716e2dd
  4199bf:	popf   
  4199c0:	sbb    bl,BYTE PTR [eax+0x1e]
  4199c3:	jle    0x419a2d
  4199c5:	sbb    bl,dh
  4199c7:	mov    ch,0x37
  4199c9:	jecxz  0x419970
  4199cb:	jp     0x41999c
  4199cd:	hlt    
  4199ce:	push   esp
  4199cf:	push   cs
  4199d0:	sub    ah,cl
  4199d2:	sahf   
  4199d3:	pop    ss
  4199d4:	cmp    cl,BYTE PTR [esi+edx*8]
  4199d7:	fld    st(3)
  4199d9:	scas   al,BYTE PTR es:[edi]
  4199da:	adc    bl,dh
  4199dc:	mov    ebx,0x2ae1fa83
  4199e1:	ret    0xa323
  4199e4:	jge    0x4199fb
  4199e6:	sub    bp,ax
  4199e9:	fisub  WORD PTR [esp+ebx*4-0x494c22b]
  4199f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199f1:	fild   QWORD PTR [ebx]
  4199f3:	sbb    bh,BYTE PTR [edi-0x671ad90b]
  4199f9:	pop    esp
  4199fa:	(bad)  
  4199fb:	call   0x2402220c
  419a00:	mov    edi,0x5c6125fa
  419a05:	scas   eax,DWORD PTR es:[edi]
  419a06:	mov    ch,BYTE PTR [edi+0x52ff2a7e]
  419a0c:	cs js  0x419a09
  419a0f:	jle    0x419a3e
  419a11:	xchg   edx,eax
  419a12:	adc    cl,ah
  419a14:	push   es
  419a15:	jb     0x419a34
  419a17:	cs leave 
  419a19:	(bad)
  419a1d:	in     al,dx
  419a1e:	pusha  
  419a1f:	cmp    DWORD PTR [ebx+edi*1+0x53a1a003],0xffffffab
  419a27:	push   eax
  419a28:	jp     0x419a99
  419a2a:	gs in  al,dx
  419a2c:	mov    ebp,0xa2e2b216
  419a31:	fs stos BYTE PTR es:[edi],al
  419a33:	jge    0x419a93
  419a35:	shl    ebp,cl
  419a37:	fidiv  WORD PTR [ecx+0x711fb540]
  419a3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a3e:	xchg   esp,eax
  419a3f:	xchg   edi,eax
  419a40:	push   ebx
  419a41:	lods   al,BYTE PTR ds:[esi]
  419a42:	mov    edx,0x497cdb3f
  419a47:	(bad)  
  419a48:	test   al,0x8a
  419a4a:	jecxz  0x4199ef
  419a4c:	outs   dx,BYTE PTR ds:[esi]
  419a4d:	and    DWORD PTR [edx+0x5c75034c],ebp
  419a53:	xchg   ebx,eax
  419a54:	stos   BYTE PTR es:[edi],al
  419a55:	out    dx,al
  419a56:	cwde   
  419a57:	rcl    DWORD PTR [ebx-0x2c],0xd3
  419a5b:	add    BYTE PTR [ecx+0x70],dh
  419a5e:	sub    esi,DWORD PTR [ecx+eax*2]
  419a61:	scas   eax,DWORD PTR es:[edi]
  419a62:	sbb    al,0x6b
  419a64:	mov    ebx,0xdb92b64
  419a69:	or     BYTE PTR [edx-0x68],0xde
  419a6d:	enter  0xe3e7,0xdd
  419a71:	jbe    0x419acb
  419a73:	inc    esp
  419a74:	jl     0x419a84
  419a76:	xor    eax,0x921d00f0
  419a7b:	lock out dx,eax
  419a7d:	ror    BYTE PTR ds:0x717f4aee,0xec
  419a84:	fbstp  TBYTE PTR [ebx-0x4b]
  419a87:	adc    BYTE PTR [ebp-0x749f0a9a],al
  419a8d:	out    dx,al
  419a8e:	jge    0x419adb
  419a90:	and    bh,bl
  419a92:	adc    cl,bh
  419a94:	ret    0x2a5
  419a97:	jb     0x419acd
  419a99:	jb     0x419a1c
  419a9b:	mov    ebp,0x6b9a3085
  419aa0:	dec    esi
  419aa1:	xor    ebp,DWORD PTR [edx]
  419aa3:	mov    esp,DWORD PTR [ecx+0x74]
  419aa6:	fcomp  DWORD PTR [edx-0x7d]
  419aa9:	and    BYTE PTR [ebx],0x30
  419aac:	scas   al,BYTE PTR es:[edi]
  419aad:	mul    DWORD PTR [ebx+0x59]
  419ab0:	jae    0x419aca
  419ab2:	sub    BYTE PTR [ebx+ecx*8-0x6e4edeb2],cl
  419ab9:	sahf   
  419aba:	in     al,0xbe
  419abc:	mov    ah,0x4e
  419abe:	popf   
  419abf:	cmp    esp,eax
  419ac1:	ret    
  419ac2:	mov    esp,0xaad984be
  419ac7:	sti    
  419ac8:	fstp   QWORD PTR fs:[edx+0x2e31e56a]
  419acf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ad0:	inc    edx
  419ad1:	dec    esp
  419ad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ad3:	pop    ecx
  419ad4:	(bad)  
  419ad5:	fcomi  st,st(6)
  419ad7:	cs mov dl,0x3b
  419ada:	add    dh,BYTE PTR [ebp-0x40e60fbd]
  419ae0:	mov    edi,0x3e157781
  419ae5:	mov    eax,0x800cde30
  419aea:	xchg   edi,eax
  419aeb:	shl    DWORD PTR [esi],1
  419aed:	test   DWORD PTR [edx],edx
  419aef:	add    BYTE PTR [eax+0x59],dl
  419af2:	pop    ecx
  419af3:	retf   0x776b
  419af6:	fdiv   DWORD PTR ds:0xfa886531
  419afc:	cs dec ebp
  419afe:	pop    ecx
  419aff:	iret   
  419b00:	xchg   BYTE PTR [edx-0x60046030],ch
  419b06:	sbb    al,0xa
  419b08:	(bad)  
  419b09:	jl     0x419b78
  419b0b:	mov    al,0xf5
  419b0d:	jp     0x419b40
  419b0f:	rcr    dh,1
  419b11:	int    0xf2
  419b13:	push   ebx
  419b14:	pusha  
  419b15:	mov    BYTE PTR [eax-0x7457c2fa],al
  419b1b:	clc    
  419b1c:	je     0x419b03
  419b1e:	sub    BYTE PTR [edx-0x59],ch
  419b21:	gs scas al,BYTE PTR es:[edi]
  419b23:	test   BYTE PTR [ebp-0x419055e8],ch
  419b29:	out    dx,al
  419b2a:	dec    BYTE PTR [edx+0x3b27a0de]
  419b30:	ret    
  419b31:	stos   DWORD PTR es:[edi],eax
  419b32:	mov    ebp,0x3291a22f
  419b37:	mov    edx,0x4b1d93a2
  419b3c:	(bad)  
  419b3d:	sbb    eax,0xd70862b3
  419b42:	inc    ebp
  419b43:	adc    ebx,DWORD PTR [ebx]
  419b45:	das    
  419b46:	jae    0x419b36
  419b48:	not    DWORD PTR [ecx+0x6df17e9e]
  419b4e:	test   eax,0xb7705af1
  419b53:	rol    BYTE PTR [edx],0xe0
  419b56:	(bad)  
  419b57:	mov    WORD PTR [ebx-0x3833f1b8],?
  419b5d:	iret   
  419b5e:	les    ebx,FWORD PTR [esi+0x6bd57ba1]
  419b64:	je     0x419b0b
  419b66:	sti    
  419b67:	mov    edi,0x777e3e8b
  419b6c:	loop   0x419b17
  419b6e:	jno    0x419be8
  419b70:	pop    DWORD PTR [ecx+ecx*4]
  419b73:	mov    edx,0x90eab275
  419b78:	mov    bh,0xd8
  419b7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b7b:	test   DWORD PTR [ebp-0x2a64b92a],eax
  419b81:	pusha  
  419b82:	ins    BYTE PTR es:[edi],dx
  419b83:	ins    BYTE PTR es:[edi],dx
  419b84:	dec    ebx
  419b85:	xchg   ebp,eax
  419b86:	fisttp WORD PTR [edx]
  419b88:	pop    edx
  419b89:	rcl    DWORD PTR [esi+0x7bc42edf],1
  419b8f:	mov    ah,0x27
  419b91:	push   ecx
  419b92:	(bad)  
  419b93:	mov    ebp,0xb144d0a0
  419b98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b99:	adc    al,0x25
  419b9b:	mov    esi,0x62ce402
  419ba0:	popf   
  419ba1:	inc    eax
  419ba2:	popa   
  419ba3:	mov    edi,0x686dbd6a
  419ba8:	lea    edi,[eax+edx*2]
  419bab:	push   cs
  419bac:	mov    edi,0xea6af50f
  419bb1:	shr    BYTE PTR [eax-0x3],0x77
  419bb5:	or     al,dl
  419bb7:	fwait
  419bb8:	in     al,dx
  419bb9:	call   0x8d04:0xfaf2641f
  419bc0:	popa   
  419bc1:	xor    BYTE PTR [ecx],0x40
  419bc4:	out    0xf3,eax
  419bc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bc7:	mov    ds:0xb1ae5015,al
  419bcc:	inc    eax
  419bcd:	xchg   ebp,eax
  419bce:	jecxz  0x419c26
  419bd0:	adc    edx,DWORD PTR [edi]
  419bd2:	dec    esi
  419bd3:	js     0x419b76
  419bd5:	adc    dh,BYTE PTR [eax]
  419bd7:	push   cs
  419bd8:	data16 (bad) 
  419bda:	jp     0x419ba3
  419bdc:	pop    ss
  419bdd:	arpl   WORD PTR [edi+0x78506eae],dx
  419be3:	push   ecx
  419be4:	mov    ebx,0x622af77e
  419be9:	push   esi
  419bea:	lea    eax,[ecx+0x250ed1ce]
  419bf0:	enter  0xdd7,0xc9
  419bf4:	pop    ds
  419bf5:	scas   eax,DWORD PTR es:[edi]
  419bf6:	dec    ebp
  419bf7:	sub    esi,esi
  419bf9:	daa    
  419bfa:	mov    DWORD PTR [edi+eax*1-0x79],ecx
  419bfe:	(bad)  
  419bff:	pop    esi
  419c00:	cmp    ebp,ebp
  419c02:	pop    eax
  419c03:	mov    al,ds:0x3ca85bcf
  419c08:	mov    ds:0xd9530f1e,eax
  419c0d:	out    0x6d,al
  419c0f:	js     0x419bc0
  419c11:	jl     0x419c43
  419c13:	call   0x15eb9534
  419c18:	inc    ah
  419c1a:	xor    BYTE PTR [ebx-0x25d9f6e7],al
  419c20:	in     al,dx
  419c21:	shl    DWORD PTR [eax],cl
  419c23:	mov    ebx,0x7a8ab7da
  419c28:	aas    
  419c29:	push   ebp
  419c2a:	test   BYTE PTR [edi+ecx*4-0x597a097a],bl
  419c31:	sub    esi,DWORD PTR [edx-0x4b]
  419c34:	dec    esp
  419c35:	xor    DWORD PTR [esi+ebp*8],esi
  419c38:	pop    edi
  419c39:	mov    esp,0x55f0924e
  419c3e:	sub    ebp,DWORD PTR [ecx+edi*8-0x5f2b468d]
  419c45:	ins    BYTE PTR es:[edi],dx
  419c46:	adc    eax,0xb5c6f6e6
  419c4b:	int3   
  419c4c:	mov    esi,0x4cf0fd58
  419c51:	sbb    eax,0xc4669ae2
  419c56:	mov    edi,0xdc07812c
  419c5b:	hlt    
  419c5c:	and    cl,BYTE PTR [esi+edx*2-0x5d]
  419c60:	aas    
  419c61:	pop    ss
  419c62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c63:	(bad)  
  419c64:	mov    dh,0xd6
  419c66:	mov    dl,0x1e
  419c68:	cwde   
  419c69:	jnp    0x419c72
  419c6b:	dec    esp
  419c6c:	loopne 0x419c38
  419c6e:	scas   eax,DWORD PTR es:[edi]
  419c6f:	adc    eax,0xdb634b35
  419c74:	clc    
  419c75:	pop    eax
  419c76:	popa   
  419c77:	mov    ecx,0x15d31058
  419c7c:	inc    edx
  419c7d:	out    0x27,al
  419c7f:	mov    esi,0x75abf837
  419c84:	rol    BYTE PTR [edx-0x46],cl
  419c87:	mov    esi,0x2b2fbd16
  419c8c:	mov    dl,0x23
  419c8e:	icebp  
  419c8f:	sub    BYTE PTR [edx-0x34],0x73
  419c93:	sti    
  419c94:	adc    ecx,0x30
  419c97:	popa   
  419c98:	inc    edi
  419c99:	jmp    0xf94971f
  419c9e:	push   edi
  419c9f:	nop
  419ca0:	inc    esp
  419ca1:	cmp    DWORD PTR [esi+0x2a43d99c],0xffffff84
  419ca8:	stos   BYTE PTR es:[edi],al
  419ca9:	clc    
  419caa:	shr    DWORD PTR [ebp+0x2a910bc4],cl
  419cb0:	in     al,dx
  419cb1:	jb     0x419c9e
  419cb3:	sbb    al,BYTE PTR ds:0x36e8f784
  419cb9:	adc    eax,0x43e96e3a
  419cbe:	ds inc eax
  419cc0:	fld    TBYTE PTR [ebx-0x28]
  419cc3:	add    ebx,ebx
  419cc5:	scas   eax,DWORD PTR es:[edi]
  419cc6:	imul   esp,ecx,0xffffffd7
  419cc9:	aaa    
  419cca:	push   cs
  419ccb:	inc    edi
  419ccc:	push   ebp
  419ccd:	lea    edi,[edi+0x7b]
  419cd0:	adc    bh,BYTE PTR [esp+ebp*2]
  419cd3:	repz mov al,ds:0xc9198d72
  419cd9:	and    al,cl
  419cdb:	pop    ds
  419cdc:	jmp    0x419d54
  419cde:	aam    0x5b
  419ce0:	or     al,0x96
  419ce2:	inc    esi
  419ce3:	shl    DWORD PTR [edx+eiz*8+0x74a7bd33],1
  419cea:	ins    BYTE PTR es:[edi],dx
  419ceb:	or     eax,0x91cb364c
  419cf0:	inc    esp
  419cf1:	mov    ebx,DWORD PTR [ecx]
  419cf3:	aam    0x3e
  419cf5:	mov    esp,0x86fc0720
  419cfa:	inc    esp
  419cfb:	rcr    DWORD PTR [esi],1
  419cfd:	(bad)  
  419cff:	mov    ch,0xbd
  419d01:	fisubr WORD PTR [ebx]
  419d03:	pop    esp
  419d04:	stos   BYTE PTR es:[edi],al
  419d05:	clc    
  419d06:	bnd call 0x8a1309ba
  419d0c:	inc    eax
  419d0d:	jmp    0x419d87
  419d0f:	sub    al,0x38
  419d11:	shl    DWORD PTR [edi+0x24758e2c],cl
  419d17:	arpl   bx,ax
  419d19:	dec    esi
  419d1a:	push   cs
  419d1b:	mov    ds:0xadc1a53d,eax
  419d20:	jb     0x419cf2
  419d22:	jl     0x419ce3
  419d24:	std    
  419d25:	stos   DWORD PTR es:[edi],eax
  419d26:	jp     0x419d88
  419d28:	fist   DWORD PTR [ecx]
  419d2a:	jmp    0x419cd3
  419d2c:	(bad)  [esi-0x6b1931fa]
  419d32:	pop    ds
  419d33:	sbb    BYTE PTR [ecx+0x23],0xcf
  419d37:	xchg   BYTE PTR [esi],dl
  419d39:	inc    ecx
  419d3a:	add    BYTE PTR [ebx-0x4f],bl
  419d3d:	push   0xa61ec40f
  419d42:	dec    esp
  419d43:	add    ecx,ebp
  419d45:	call   DWORD PTR [ebx+0x7b]
  419d48:	push   ss
  419d49:	push   eax
  419d4a:	fucomp st(0)
  419d4c:	inc    ebp
  419d4d:	jl     0x419d85
  419d4f:	mov    es,ebx
  419d51:	sbb    eax,0x64b4b9c5
  419d56:	dec    ebx
  419d57:	sub    eax,0xecfb1829
  419d5c:	push   esp
  419d5d:	stos   BYTE PTR es:[edi],al
  419d5e:	jmp    0x6a14:0x843c672a
  419d65:	push   DWORD PTR [eax]
  419d67:	dec    edx
  419d68:	cmc    
  419d69:	mov    al,0xf
  419d6b:	mov    al,0xb6
  419d6d:	xor    al,0x94
  419d6f:	sbb    DWORD PTR [eax],0x7c
  419d72:	daa    
  419d73:	dec    esi
  419d74:	(bad)  [eax-0x78c2aeeb]
  419d7a:	add    al,0x6
  419d7c:	dec    ebx
  419d7d:	push   si
  419d7f:	setg   BYTE PTR [edx]
  419d82:	push   ss
  419d83:	rcr    DWORD PTR [ebx],0x85
  419d86:	sbb    al,BYTE PTR [ebp+0x5e41cf6a]
  419d8c:	data16 mov cl,al
  419d8f:	mov    ecx,0x89bf5451
  419d94:	ret    0x6d37
  419d97:	add    esp,DWORD PTR [edi]
  419d99:	push   ds
  419d9a:	pop    ecx
  419d9b:	sbb    BYTE PTR [bp+si+0x5c8c],al
  419da0:	cli    
  419da1:	push   ecx
  419da2:	pushf  
  419da3:	mov    ebx,0x2f726ae
  419da8:	add    ah,bh
  419daa:	push   0xae20e3e4
  419daf:	je     0x419d4d
  419db1:	adc    eax,0xdb98d86d
  419db6:	(bad)  
  419db8:	fst    QWORD PTR [ebp+0x66]
  419dbb:	hlt    
  419dbc:	cmc    
  419dbd:	ret    
  419dbe:	inc    esi
  419dbf:	imul   esi,DWORD PTR [edx+0x64f2e5b3],0xffffff92
  419dc6:	adc    al,0xe4
  419dc8:	sbb    eax,DWORD PTR [edx+0x7e]
  419dcb:	into   
  419dcc:	pushf  
  419dcd:	mov    bl,0x1b
  419dcf:	pop    DWORD PTR [edi+0x39]
  419dd2:	add    eax,0xb2d3f942
  419dd7:	cwde   
  419dd8:	mov    dl,0x35
  419dda:	fcom   QWORD PTR [ebx]
  419ddc:	mov    edi,0x135c5b80
  419de1:	cmp    eax,0x6cb83d75
  419de6:	inc    ebp
  419de7:	mov    dh,0xbe
  419de9:	ss jns 0x419d9f
  419dec:	push   ecx
  419ded:	push   0x236b7f90
  419df2:	outs   dx,DWORD PTR ds:[esi]
  419df3:	push   0x973d98d3
  419df8:	xchg   edi,eax
  419df9:	lods   al,BYTE PTR ds:[esi]
  419dfa:	push   ds
  419dfb:	mov    edx,0x9f7c4bca
  419e00:	mov    BYTE PTR [ecx+0x5d594cde],dl
  419e06:	mul    BYTE PTR [ebx-0x56ceef85]
  419e0c:	test   BYTE PTR [eax-0x4ec81039],dl
  419e12:	jp     0x419e6a
  419e14:	cmp    edi,DWORD PTR [ebx-0x5fe511ef]
  419e1a:	jge    0x419e6e
  419e1c:	sbb    eax,DWORD PTR [eax]
  419e1e:	sub    eax,0x709958a8
  419e23:	or     eax,0x8f82d121
  419e28:	pop    edi
  419e29:	add    BYTE PTR [ebx+0x7b13c393],ah
  419e2f:	adc    al,0x13
  419e31:	and    eax,0x608f33bf
  419e36:	leave  
  419e37:	sub    edi,DWORD PTR [ebx]
  419e39:	push   esp
  419e3a:	xchg   edx,eax
  419e3b:	push   edx
  419e3c:	mov    eax,DWORD PTR [esi-0x13ac6002]
  419e42:	dec    ebp
  419e43:	add    DWORD PTR [eax-0x2008bb15],eax
  419e49:	jl     0x419e88
  419e4b:	or     ah,BYTE PTR [edi+ebx*4+0x12a795f6]
  419e52:	(bad)  
  419e54:	pop    ebp
  419e55:	(bad)  
  419e56:	in     eax,0x2
  419e58:	add    DWORD PTR [eax+0x5376abc1],ecx
  419e5e:	ror    DWORD PTR [ecx+esi*8],0x45
  419e62:	ins    DWORD PTR es:[edi],dx
  419e63:	mov    bh,0xfc
  419e65:	retf   0xe717
  419e68:	jmp    0x26f906c6
  419e6d:	(bad)  
  419e70:	out    dx,al
  419e71:	sub    BYTE PTR [esp+eax*1-0x48a16f40],dh
  419e78:	scas   al,BYTE PTR es:[edi]
  419e79:	push   esi
  419e7a:	pop    esi
  419e7b:	add    al,0x1b
  419e7d:	jp     0x419e1e
  419e7f:	add    BYTE PTR [esi],0x98
  419e82:	xor    eax,0xe5184016
  419e87:	pop    ebp
  419e88:	pop    ss
  419e89:	mov    bh,0x3a
  419e8b:	adc    ebp,ebp
  419e8d:	cli    
  419e8e:	inc    edx
  419e8f:	jnp    0x419e77
  419e91:	jp     0x419ef2
  419e93:	xchg   esi,eax
  419e94:	or     DWORD PTR [ecx+0x52ebeee0],ebx
  419e9a:	hlt    
  419e9b:	mov    dh,0x17
  419e9d:	loop   0x419e38
  419e9f:	into   
  419ea0:	call   0xea61:0xb295a3d
  419ea7:	push   ebp
  419ea8:	lahf   
  419ea9:	sar    BYTE PTR [eax-0x2b420111],cl
  419eaf:	fisubr WORD PTR [eax+ecx*8+0x7b]
  419eb3:	addr16 pop ebp
  419eb5:	cmp    al,0x45
  419eb7:	xchg   esi,eax
  419eb8:	sub    BYTE PTR [eax],0x3b
  419ebb:	lahf   
  419ebc:	ins    BYTE PTR es:[edi],dx
  419ebd:	push   ecx
  419ebe:	retf   0x5bdd
  419ec1:	mov    ebx,0x4a16a7d3
  419ec6:	dec    edx
  419ec7:	in     al,dx
  419ec8:	sbb    eax,0xbf7037c6
  419ecd:	pusha  
  419ece:	and    DWORD PTR ds:0xe65aa1f1,edi
  419ed4:	pop    ecx
  419ed5:	and    ch,BYTE PTR [esi+0x5d6cea59]
  419edb:	shl    DWORD PTR [edi+0x21],0x88
  419edf:	add    esp,ebp
  419ee1:	xchg   esi,eax
  419ee2:	fwait
  419ee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ee4:	xor    BYTE PTR [ebx-0x42],bh
  419ee7:	cmp    DWORD PTR [ebp+0x596943f],ebp
  419eed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419eee:	(bad)  
  419eef:	dec    eax
  419ef0:	addr16 jnp 0x419e7b
  419ef3:	out    0xc4,eax
  419ef5:	mov    ds:0xfc74995,eax
  419efa:	mov    ds:0x2f38fa77,eax
  419eff:	stos   DWORD PTR es:[edi],eax
  419f00:	popa   
  419f01:	and    eax,0xb56fe375
  419f06:	ss xchg esp,eax
  419f08:	mov    eax,edi
  419f0a:	dec    edi
  419f0b:	mov    ds:0x8b615d2,al
  419f10:	mov    al,0x37
  419f12:	lods   al,BYTE PTR ds:[esi]
  419f13:	repnz lahf 
  419f15:	(bad)  
  419f16:	leave  
  419f17:	xchg   esi,eax
  419f18:	sbb    edi,edx
  419f1a:	aam    0x30
  419f1c:	pushf  
  419f1d:	in     eax,dx
  419f1e:	cmp    BYTE PTR [esi+eax*2-0x77],bl
  419f22:	pop    ss
  419f23:	ret    
  419f24:	retf   
  419f25:	xor    eax,0x2d069ff1
  419f2a:	mov    dl,0xfc
  419f2c:	mov    esi,0x221362dc
  419f31:	iret   
  419f32:	fs push ebx
  419f34:	or     esi,DWORD PTR [esi+0x3af274a8]
  419f3a:	jb     0x419f09
  419f3c:	out    dx,al
  419f3d:	add    eax,0x46dc3904
  419f42:	and    eax,0x76403a6d
  419f47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f48:	int    0xbc
  419f4a:	xchg   ebx,eax
  419f4b:	pop    es
  419f4c:	lds    edx,FWORD PTR [edi]
  419f4e:	pop    edx
  419f4f:	(bad)  
  419f50:	(bad)  
  419f51:	shl    ch,cl
  419f53:	push   ds
  419f54:	mov    ds:0x6eee343a,al
  419f59:	cwde   
  419f5a:	dec    ecx
  419f5b:	in     al,0x64
  419f5d:	pop    ebp
  419f5e:	mov    al,al
  419f60:	(bad)  
  419f61:	ret    
  419f62:	jl     0x419f38
  419f64:	add    bh,ch
  419f66:	rcl    eax,1
  419f68:	adc    BYTE PTR [esi+0x19554a90],bl
  419f6e:	mov    esp,0xf840585e
  419f73:	push   es
  419f74:	cmp    BYTE PTR [edi+eax*4],ch
  419f77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f78:	sub    al,0xf5
  419f7a:	cmp    eax,0x648ffc6d
  419f7f:	or     al,0x52
  419f81:	jne    0x419f7b
  419f83:	clc    
  419f84:	add    bl,BYTE PTR [ebp+0xafa7c9a]
  419f8a:	cld    
  419f8b:	(bad)  
  419f8c:	cmp    bh,BYTE PTR [ecx+0x6a1b23a7]
  419f92:	stos   DWORD PTR es:[edi],eax
  419f93:	xor    ebx,edi
  419f95:	xor    al,0xc6
  419f97:	cmp    edi,edx
  419f99:	fimul  DWORD PTR [edx-0x454d70bd]
  419f9f:	gs pop ecx
  419fa1:	mov    DWORD PTR [esi],edi
  419fa3:	mov    bh,0x91
  419fa5:	push   esp
  419fa6:	fucomp st(6)
  419fa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fa9:	or     BYTE PTR [eax+edx*1-0x7],dl
  419fad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fae:	leave  
  419faf:	arpl   WORD PTR [ecx-0x5b],sp
  419fb2:	push   ebp
  419fb3:	out    0x6,eax
  419fb5:	push   es
  419fb6:	add    esp,DWORD PTR [edi-0x4a834121]
  419fbc:	cli    
  419fbd:	xchg   ebp,eax
  419fbe:	stos   DWORD PTR es:[edi],eax
  419fbf:	mov    esi,0xda3ed9b
  419fc4:	call   0x5a0c:0x83e2a36c
  419fcb:	das    
  419fcc:	or     BYTE PTR [ecx+0x59],ch
  419fcf:	call   0xa861f09b
  419fd4:	rcl    DWORD PTR [esi+eiz*2],cl
  419fd7:	outs   dx,DWORD PTR ds:[esi]
  419fd8:	fbstp  TBYTE PTR ds:0x33a72eaf
  419fde:	in     al,dx
  419fdf:	sub    BYTE PTR [edi],al
  419fe1:	arpl   WORD PTR [esi-0x5259719e],bp
  419fe7:	or     ah,bl
  419fe9:	dec    edx
  419fea:	scas   eax,DWORD PTR es:[edi]
  419feb:	pop    edx
  419fec:	iret   
  419fed:	mov    ?,WORD PTR [ebx]
  419fef:	les    edx,FWORD PTR [edx-0x10f605a2]
  419ff5:	push   esi
  419ff6:	loopne 0x419f91
  419ff8:	jp     0x419fc4
  419ffa:	rcl    BYTE PTR [ebx+0xc],1
  419ffd:	and    cl,BYTE PTR [esi+0x60]
  41a000:	push   esp
  41a001:	mov    ebp,0x1ec490aa
  41a006:	push   eax
  41a007:	cmc    
  41a008:	push   cs
  41a009:	add    bl,BYTE PTR [ebx-0x2d7749a9]
  41a00f:	dec    edi
  41a010:	mov    edx,DWORD PTR [edx+eiz*4-0x30]
  41a014:	xor    DWORD PTR [eax+0x2a],0xffffff97
  41a018:	(bad)  
  41a019:	lock mov al,ds:0xb679bf0a
  41a01f:	in     eax,0x78
  41a021:	ret    
  41a022:	inc    ebx
  41a023:	cmp    al,0xb8
  41a025:	in     eax,0x3b
  41a027:	loope  0x41a011
  41a029:	cmp    DWORD PTR [esi-0x50],0x51a2d490
  41a030:	push   0xa3a768a2
  41a035:	push   edi
  41a036:	mov    cs,WORD PTR [ecx]
  41a038:	test   BYTE PTR [eax-0x2364a205],ah
  41a03e:	std    
  41a03f:	fistp  QWORD PTR [edi-0xe]
  41a042:	pop    ebx
  41a043:	pop    ebx
  41a044:	arpl   bp,bx
  41a046:	push   ebp
  41a047:	push   esp
  41a048:	push   esp
  41a049:	xor    eax,0x279a3860
  41a04e:	dec    esp
  41a04f:	sar    ah,cl
  41a051:	adc    eax,0x1a8327bc
  41a056:	jmp    0x34f532c4
  41a05b:	in     al,0x6b
  41a05d:	push   eax
  41a05e:	or     DWORD PTR [edx-0x4ea54110],edi
  41a064:	lds    esp,FWORD PTR [ebp+ebx*4+0x70]
  41a068:	xchg   ebp,eax
  41a069:	cmp    ebx,DWORD PTR [esi+edx*1]
  41a06c:	xor    eax,0x530e3872
  41a071:	int3   
  41a072:	lock mov dh,0xc1
  41a075:	push   ecx
  41a076:	aad    0xb1
  41a078:	and    BYTE PTR [ecx+0x8],bl
  41a07b:	ins    BYTE PTR es:[di],dx
  41a07d:	sbb    edx,ebp
  41a07f:	lock cli 
  41a081:	shl    DWORD PTR [eax-0x46],1
  41a084:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a085:	dec    ebp
  41a086:	push   ebx
  41a087:	sub    eax,0x88e226c9
  41a08c:	ds stos DWORD PTR es:[edi],eax
  41a08e:	int    0x39
  41a090:	jle    0x41a098
  41a092:	inc    ebx
  41a093:	lahf   
  41a094:	out    dx,eax
  41a095:	iret   
  41a096:	pop    edi
  41a097:	push   ebp
  41a098:	stos   DWORD PTR es:[edi],eax
  41a099:	in     al,dx
  41a09a:	in     eax,dx
  41a09b:	retf   
  41a09c:	(bad)  
  41a09d:	fcom   st(4)
  41a09f:	dec    ecx
  41a0a0:	lods   eax,DWORD PTR ds:[esi]
  41a0a1:	pusha  
  41a0a2:	out    dx,al
  41a0a3:	adc    cl,BYTE PTR [ecx+0x26]
  41a0a6:	ds loop 0x41a0f8
  41a0a9:	adc    DWORD PTR [eax+0xfd930e2],ebx
  41a0af:	push   ecx
  41a0b0:	add    al,dl
  41a0b2:	push   ss
  41a0b3:	inc    ecx
  41a0b4:	data16 adc ch,ah
  41a0b7:	aam    0x3
  41a0b9:	mov    DWORD PTR [edx-0x2c],edx
  41a0bc:	shr    BYTE PTR [edi-0x437fd7f5],cl
  41a0c2:	rcl    DWORD PTR [esi],cl
  41a0c4:	fucom  st(1)
  41a0c6:	adc    ch,ch
  41a0c8:	xor    dh,BYTE PTR [ebx+0x6d]
  41a0cb:	lock popa 
  41a0cd:	imul   ecx,DWORD PTR ds:0xc0a95783,0x4273f250
  41a0d7:	sub    eax,0xab3966ba
  41a0dc:	(bad)  
  41a0dd:	cli    
  41a0de:	ins    BYTE PTR es:[edi],dx
  41a0df:	mov    ds:0x91ac45eb,al
  41a0e4:	stos   DWORD PTR es:[edi],eax
  41a0e5:	sub    DWORD PTR [ecx],eax
  41a0e7:	scas   al,BYTE PTR es:[edi]
  41a0e8:	jbe    0x41a0eb
  41a0ea:	mov    edi,0x7c91df63
  41a0ef:	push   ebp
  41a0f0:	fdiv   QWORD PTR [edx]
  41a0f2:	stos   DWORD PTR es:[edi],eax
  41a0f3:	pop    ss
  41a0f4:	dec    esp
  41a0f5:	sbb    eax,0xf96a1eb3
  41a0fa:	loope  0x41a129
  41a0fc:	les    edi,FWORD PTR [eax+esi*4]
  41a0ff:	das    
  41a100:	pop    eax
  41a101:	dec    edi
  41a102:	push   edi
  41a103:	mov    edi,0xcb459007
  41a108:	dec    edx
  41a109:	repz std 
  41a10b:	div    DWORD PTR [ecx]
  41a10d:	cmc    
  41a10e:	push   ss
  41a10f:	inc    ecx
  41a110:	test   BYTE PTR [ecx],bl
  41a112:	pushf  
  41a113:	outs   dx,BYTE PTR ds:[esi]
  41a114:	sbb    eax,0x88413757
  41a119:	add    eax,DWORD PTR [esi+edi*4-0x16]
  41a11d:	out    0x89,al
  41a11f:	jno    0x41a0f5
  41a121:	pop    ebp
  41a122:	mov    ecx,0x8e99e8e4
  41a127:	fbstp  TBYTE PTR [edi-0x3d83d4ac]
  41a12d:	pop    esp
  41a12e:	(bad)  
  41a12f:	cmc    
  41a130:	xor    BYTE PTR [edx+0x191a3766],dh
  41a136:	xchg   esp,eax
  41a137:	cs fdecstp 
  41a13a:	std    
  41a13b:	rcr    BYTE PTR [esi-0x7a],0xaa
  41a13f:	sub    edx,DWORD PTR [edi]
  41a141:	pop    ebp
  41a142:	in     eax,0x4f
  41a144:	xor    bh,bh
  41a146:	inc    ebx
  41a147:	push   edx
  41a148:	pop    esp
  41a149:	(bad)  
  41a14a:	pop    edx
  41a14b:	mov    bl,0xb6
  41a14d:	sar    DWORD PTR [ecx],cl
  41a14f:	adc    ebx,DWORD PTR [esi]
  41a151:	jp     0x41a1d1
  41a153:	sbb    dh,BYTE PTR [eax-0x61]
  41a156:	lods   eax,DWORD PTR ds:[esi]
  41a157:	jge    0x41a1a1
  41a159:	fnstcw WORD PTR cs:[edx+0x79f05f7a]
  41a160:	xchg   esp,eax
  41a161:	rol    BYTE PTR [esi-0x6456515a],1
  41a167:	cdq    
  41a168:	jae    0x41a0ee
  41a16a:	mov    eax,ss
  41a16c:	in     al,dx
  41a16d:	inc    esp
  41a16e:	out    dx,al
  41a16f:	in     al,dx
  41a170:	cmp    eax,0x2fe37ae0
  41a175:	sub    al,0xad
  41a177:	push   es
  41a178:	(bad)  
  41a179:	(bad)
  41a17c:	push   0x366c98f6
  41a181:	mov    esi,0xddc0f35b
  41a186:	xor    eax,0x6210a8bb
  41a18b:	jmp    0x41a174
  41a18d:	inc    ebx
  41a18e:	sti    
  41a18f:	imul   ebp,DWORD PTR [ebx-0x7a],0x2ba9bf5d
  41a196:	shl    BYTE PTR [ecx+0x7bd44814],cl
  41a19c:	sbb    al,0x83
  41a19e:	mov    eax,es:0xd8f1ef3c
  41a1a4:	or     ah,BYTE PTR [ebx-0x73fbe91d]
  41a1aa:	jmp    0x41a1a1
  41a1ac:	fiadd  DWORD PTR [ebx]
  41a1ae:	cmp    eax,0xc7fd4abe
  41a1b3:	aam    0xc9
  41a1b5:	fwait
  41a1b6:	lods   al,BYTE PTR ds:[esi]
  41a1b7:	push   edx
  41a1b8:	cmp    ebx,DWORD PTR [ecx]
  41a1ba:	fcmove st,st(0)
  41a1bc:	jnp    0x41a161
  41a1be:	xchg   edx,ecx
  41a1c0:	(bad)  
  41a1c1:	cmp    ecx,DWORD PTR [edx-0x7367922d]
  41a1c7:	pop    esi
  41a1c8:	int    0x47
  41a1ca:	add    BYTE PTR [eax+edx*2-0x51],ah
  41a1ce:	in     al,0xdd
  41a1d0:	(bad)  [edi+0x5b]
  41a1d3:	dec    ebp
  41a1d4:	cld    
  41a1d5:	adc    eax,0xd1809e84
  41a1da:	mov    ah,ch
  41a1dc:	rol    BYTE PTR [ebx+0x51],0x81
  41a1e0:	jge    0x41a25c
  41a1e2:	xlat   BYTE PTR ds:[ebx]
  41a1e3:	mov    edi,DWORD PTR [esi-0x3]
  41a1e6:	push   ecx
  41a1e7:	dec    edx
  41a1e8:	xor    BYTE PTR [esi+0x1d],0x28
  41a1ec:	mov    edi,0xb9b75cc2
  41a1f1:	mov    bh,0x92
  41a1f3:	jne    0x41a1ca
  41a1f5:	outs   dx,DWORD PTR ds:[esi]
  41a1f6:	das    
  41a1f7:	or     ecx,DWORD PTR [eax]
  41a1f9:	imul   esp,DWORD PTR [edx],0xffffff85
  41a1fc:	mov    esp,0x2af54453
  41a201:	repnz nop
  41a203:	neg    BYTE PTR [esi+0x1a]
  41a206:	pop    eax
  41a207:	jl     0x41a1dd
  41a209:	aad    0x71
  41a20b:	leave  
  41a20c:	mov    BYTE PTR fs:[edx+0x19],ah
  41a210:	mov    ?,ebx
  41a212:	and    BYTE PTR [edx-0x11],al
  41a215:	sbb    al,0xdb
  41a217:	test   eax,0xf6f7cd2d
  41a21c:	fisttp DWORD PTR [esi-0x25a2c073]
  41a222:	sbb    al,0x2b
  41a224:	in     eax,0xe2
  41a226:	retf   0x3841
  41a229:	cs in  al,0x9e
  41a22c:	and    ah,BYTE PTR [eax-0x6d]
  41a22f:	and    al,0x53
  41a231:	or     edx,DWORD PTR [esi]
  41a233:	inc    eax
  41a234:	push   esp
  41a235:	ror    DWORD PTR [edx+0x30a02e3a],0x95
  41a23c:	or     eax,0xcaeafdb6
  41a241:	jbe    0x41a294
  41a243:	sbb    BYTE PTR [edx],0xaa
  41a246:	and    al,0x52
  41a248:	mov    esp,0x31db7a19
  41a24d:	mov    bh,0xf3
  41a24f:	(bad)  
  41a250:	mov    eax,ds:0x30c59a15
  41a255:	mov    eax,0x66698dcb
  41a25a:	jmp    0x6fd4ee70
  41a25f:	push   cs
  41a260:	ret    
  41a261:	adc    ebp,DWORD PTR [eax]
  41a263:	mov    edx,0x37731519
  41a268:	dec    esp
  41a269:	pusha  
  41a26a:	cs push 0x14168819
  41a270:	scas   al,BYTE PTR es:[edi]
  41a271:	loopne 0x41a25e
  41a273:	jae    0x41a212
  41a275:	xor    esi,DWORD PTR [edi-0x773e037e]
  41a27b:	das    
  41a27c:	in     al,dx
  41a27d:	or     al,BYTE PTR [ecx-0x44]
  41a280:	mov    esi,0x27ce3bde
  41a285:	inc    esi
  41a286:	mov    edi,0xb67ccc6a
  41a28b:	jmp    0x688f:0x2bf2c8ff
  41a292:	mov    dh,0x23
  41a294:	jl     0x41a2e3
  41a296:	jne    0x41a25f
  41a298:	xchg   edi,eax
  41a299:	and    BYTE PTR [edx+0x4abc611f],al
  41a29f:	mov    ch,0x59
  41a2a1:	repnz inc ebx
  41a2a3:	dec    edi
  41a2a4:	arpl   WORD PTR [esi+ecx*4-0x52],cx
  41a2a8:	test   eax,0x1cf4bd7d
  41a2ad:	cmp    al,0x1b
  41a2af:	shl    DWORD PTR [ebx],1
  41a2b1:	jmp    FWORD PTR [eax+0x6bb539d4]
  41a2b7:	nop
  41a2b8:	mov    edx,0x4dc0b0df
  41a2bd:	or     eax,0x887c359d
  41a2c2:	jo     0x41a2b4
  41a2c4:	popf   
  41a2c5:	sbb    BYTE PTR [eax],dh
  41a2c7:	sub    bh,bl
  41a2c9:	fs std 
  41a2cb:	in     eax,0xf
  41a2cd:	sub    al,0xf9
  41a2cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2d0:	jnp    0x41a2a4
  41a2d2:	jnp    0x41a297
  41a2d4:	xchg   BYTE PTR ds:0x5b592a27,dh
  41a2da:	pop    eax
  41a2db:	jne    0x41a342
  41a2dd:	add    BYTE PTR [ebx+eiz*2-0x5f],bl
  41a2e1:	fwait
  41a2e2:	adc    esp,esi
  41a2e4:	jmp    ecx
  41a2e6:	and    DWORD PTR [edi+edx*4+0x7961e9bf],edx
  41a2ed:	pop    ecx
  41a2ee:	ret    0x8079
  41a2f1:	popa   
  41a2f2:	xchg   ebp,eax
  41a2f3:	push   ebx
  41a2f4:	mov    ch,0xed
  41a2f6:	xlat   BYTE PTR ds:[ebx]
  41a2f7:	push   ebp
  41a2f8:	jp     0x41a290
  41a2fa:	test   eax,0x984b9061
  41a2ff:	jmp    0x41a2a2
  41a301:	mov    edx,0x176445f1
  41a306:	mov    bh,0xa2
  41a308:	leave  
  41a309:	fwait
  41a30a:	dec    ebp
  41a30b:	and    al,bl
  41a30d:	cmp    BYTE PTR [ebp-0x72c7ca95],ah
  41a313:	sub    ebp,DWORD PTR [edi+0x2a]
  41a316:	push   esi
  41a317:	sbb    al,0xf4
  41a319:	les    edx,FWORD PTR [esi+0x13]
  41a31c:	scas   al,BYTE PTR es:[edi]
  41a31d:	(bad)  
  41a31e:	ss enter 0x5410,0xd1
  41a323:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a324:	test   BYTE PTR [esi-0x4fb1af8b],dl
  41a32a:	leave  
  41a32b:	or     ebp,DWORD PTR [eax]
  41a32d:	jb     0x41a304
  41a32f:	or     al,0x9b
  41a331:	or     BYTE PTR [eax-0x49],0xc3
  41a335:	push   0xead2105b
  41a33a:	lea    ebx,[eax+0x6]
  41a33d:	mov    al,0x3b
  41a33f:	mov    ch,0x5c
  41a341:	inc    ebx
  41a342:	(bad)  
  41a343:	jns    0x41a388
  41a345:	stos   BYTE PTR es:[edi],al
  41a346:	outs   dx,BYTE PTR ds:[esi]
  41a347:	sar    BYTE PTR [ebx],cl
  41a349:	xlat   BYTE PTR ds:[ebx]
  41a34a:	retf   0x8634
  41a34d:	test   eax,0x1ecd33e0
  41a352:	sbb    edx,esp
  41a354:	push   0xccc79d4
  41a359:	js     0x41a30f
  41a35b:	or     eax,0xfab7dd34
  41a360:	jo     0x41a332
  41a362:	push   0xffffff95
  41a364:	loope  0x41a39e
  41a366:	mov    ebx,0x4dae2d2e
  41a36b:	(bad)  
  41a36c:	popa   
  41a36d:	mov    ecx,0x62088e3
  41a372:	aas    
  41a373:	cmp    ecx,DWORD PTR [esi-0x6806447]
  41a379:	mov    ch,0xd4
  41a37b:	pop    ecx
  41a37c:	cmp    esp,DWORD PTR [eax-0x74]
  41a37f:	inc    ecx
  41a380:	dec    esp
  41a381:	stos   BYTE PTR es:[edi],al
  41a382:	lea    esi,[ebx+ebx*2+0x6a]
  41a386:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a387:	es inc esi
  41a389:	dec    esi
  41a38a:	inc    esi
  41a38b:	cmp    al,0x3f
  41a38d:	fidiv  DWORD PTR [ebx+eiz*1+0x43]
  41a391:	rcr    BYTE PTR [edx],cl
  41a393:	xchg   ecx,eax
  41a394:	and    eax,0xff1a9
  41a399:	or     esi,esp
  41a39b:	fsubr  DWORD PTR [esi-0x13]
  41a39e:	data16 mov cl,0x59
  41a3a1:	jge    0x41a3a8
  41a3a3:	mov    ecx,0x678ddbf0
  41a3a8:	xchg   BYTE PTR [edx+esi*4+0x23],ch
  41a3ac:	xor    DWORD PTR [eax-0x7a],eax
  41a3af:	mov    ebp,0xad1f0b10
  41a3b4:	popa   
  41a3b5:	into   
  41a3b6:	and    eax,0x67ef1c70
  41a3bb:	add    eax,0x400c50d1
  41a3c0:	test   al,0xc4
  41a3c2:	arpl   sp,di
  41a3c4:	sbb    ebp,DWORD PTR [ebx+0x76]
  41a3c7:	retf   
  41a3c8:	mov    cl,0x56
  41a3ca:	and    al,0x0
  41a3cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3cd:	jmp    FWORD PTR [edi-0x26aceab4]
  41a3d3:	test   BYTE PTR [ebx+0x22acb8b6],ch
  41a3d9:	and    BYTE PTR [ecx+ecx*4],cl
  41a3dc:	and    cl,BYTE PTR [eax]
  41a3de:	mov    al,BYTE PTR [esi+eax*1]
  41a3e1:	push   es
  41a3e2:	les    edx,FWORD PTR [eax+0x4e]
  41a3e5:	jle    0x41a420
  41a3e7:	bound  ecx,QWORD PTR [ebp-0x43]
  41a3ea:	dec    ebp
  41a3eb:	hlt    
  41a3ec:	cwde   
  41a3ed:	int    0xd3
  41a3ef:	neg    DWORD PTR [eax]
  41a3f1:	stos   BYTE PTR es:[edi],al
  41a3f2:	inc    ebx
  41a3f3:	jl     0x41a421
  41a3f5:	cmp    ebx,DWORD PTR [esi+0x5c]
  41a3f8:	xchg   BYTE PTR [eax+ebx*4-0x6b19757],cl
  41a3ff:	sub    ebp,edx
  41a401:	std    
  41a402:	xchg   ebx,eax
  41a403:	pop    esp
  41a404:	repnz pop esi
  41a406:	cmp    BYTE PTR [edi+0x1f],al
  41a409:	and    bl,dh
  41a40b:	push   es
  41a40c:	dec    ebx
  41a40d:	inc    ecx
  41a40e:	mov    eax,ds:0x6451f61d
  41a413:	push   ebp
  41a414:	repnz out dx,eax
  41a416:	fsubr  DWORD PTR [edi-0x74539a4a]
  41a41c:	cmp    ch,al
  41a41e:	adc    eax,0xbb5003eb
  41a423:	adc    edi,esi
  41a425:	pop    edx
  41a426:	cmp    esp,DWORD PTR cs:[ecx+0x27339ea5]
  41a42d:	sbb    al,0xbc
  41a42f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a430:	jge    0x41a3eb
  41a432:	lods   eax,DWORD PTR ds:[esi]
  41a433:	in     eax,dx
  41a434:	cs ins DWORD PTR es:[edi],dx
  41a436:	mov    ds:0x9aaac9a0,al
  41a43b:	mov    ?,WORD PTR [edx+0x6c639f34]
  41a441:	loop   0x41a41e
  41a443:	add    al,0x4
  41a445:	xor    DWORD PTR [edi],ebx
  41a447:	je     0x41a3da
  41a449:	jmp    0x41a406
  41a44b:	pop    edx
  41a44c:	mov    edi,0xd9e0bf6
  41a451:	pop    ds
  41a452:	push   edi
  41a453:	mov    cl,0x92
  41a455:	mov    edi,0x39e3d1c4
  41a45a:	inc    esi
  41a45b:	dec    edi
  41a45c:	and    al,0x3d
  41a45e:	je     0x41a4ca
  41a460:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a461:	lods   al,BYTE PTR ds:[esi]
  41a462:	in     eax,0x37
  41a464:	data16 mov ah,0xa4
  41a467:	test   eax,0x8fb6736d
  41a46c:	dec    edx
  41a46d:	pop    ds
  41a46e:	adc    dh,dl
  41a470:	aaa    
  41a471:	pusha  
  41a472:	pop    ebp
  41a473:	sub    eax,0x4e435649
  41a478:	outs   dx,BYTE PTR ds:[esi]
  41a479:	aam    0x35
  41a47b:	add    al,0x26
  41a47d:	aaa    
  41a47e:	bound  eax,QWORD PTR [edi+0x2fb27892]
  41a484:	fldenv ds:0x2f449e37
  41a48a:	jo     0x41a487
  41a48c:	push   esp
  41a48d:	sbb    al,0x8c
  41a48f:	cmp    dh,BYTE PTR [esp+eax*2-0x49]
  41a493:	sar    bh,cl
  41a495:	int    0x56
  41a497:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a498:	stc    
  41a499:	and    cl,BYTE PTR [eax*1-0x3212dc98]
  41a4a0:	retf   
  41a4a1:	jne    0x41a454
  41a4a3:	adc    eax,0xcbccba2
  41a4a8:	mov    cs,esp
  41a4aa:	cs and esi,edx
  41a4ad:	jge    0xedc9b534
  41a4b3:	cmp    esi,DWORD PTR [ebx+0x6b38800f]
  41a4b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4ba:	add    BYTE PTR [ecx-0x31],ah
  41a4bd:	and    al,0xae
  41a4bf:	idiv   BYTE PTR [ecx-0x3961678]
  41a4c5:	mov    cl,0xc0
  41a4c7:	rcl    BYTE PTR [edx],1
  41a4c9:	inc    esi
  41a4cb:	sbb    BYTE PTR [edi],bh
  41a4cd:	push   ss
  41a4ce:	mov    eax,0x8e203550
  41a4d3:	std    
  41a4d4:	push   ss
  41a4d5:	cli    
  41a4d6:	test   DWORD PTR [ebp-0x748a002d],0x7c92e232
  41a4e0:	loope  0x41a53b
  41a4e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4e3:	pop    ebp
  41a4e4:	(bad)  
  41a4e5:	mov    al,ds:0xcb02a9ed
  41a4ea:	int3   
  41a4eb:	repnz xchg edx,eax
  41a4ed:	stos   BYTE PTR es:[edi],al
  41a4ee:	call   0x8f09:0xd91f1810
  41a4f5:	aas    
  41a4f6:	sbb    eax,edx
  41a4f8:	dec    esi
  41a4f9:	push   cs
  41a4fa:	mov    bl,0xa7
  41a4fc:	jmp    0x41a51f
  41a4fe:	test   al,0x8
  41a500:	push   eax
  41a501:	add    al,0xb1
  41a503:	xchg   dl,ah
  41a505:	sbb    BYTE PTR [edx+0x59],bl
  41a508:	test   eax,0x2b7d27dd
  41a50d:	xchg   ebx,eax
  41a50e:	adc    DWORD PTR [edx],esi
  41a510:	push   eax
  41a511:	or     eax,0xc1a7d598
  41a516:	fnsave [eax+0x3e394a5e]
  41a51c:	push   ebx
  41a51d:	push   eax
  41a51e:	or     DWORD PTR [edi],eax
  41a520:	xchg   esp,eax
  41a521:	loopne 0x41a52a
  41a523:	jmp    0x41a503
  41a525:	lds    esi,FWORD PTR [edi+0x61]
  41a528:	jmp    0x8898:0x7b97e878
  41a52f:	mov    esi,0xda2f859
  41a534:	mov    esi,0xa9f4ddab
  41a539:	push   0x29
  41a53b:	ins    BYTE PTR es:[edi],dx
  41a53c:	push   ss
  41a53d:	or     DWORD PTR [ecx],ecx
  41a53f:	or     DWORD PTR [ecx+0x1b12ab44],ecx
  41a545:	out    dx,eax
  41a546:	(bad)  
  41a547:	into   
  41a548:	arpl   bp,di
  41a54a:	xchg   esi,eax
  41a54b:	out    0xd7,eax
  41a54d:	jnp    0x41a505
  41a54f:	cli    
  41a550:	xchg   BYTE PTR [esi+0x16af8e5c],cl
  41a556:	cdq    
  41a557:	rol    eax,0xc1
  41a55a:	sub    DWORD PTR [edx-0x103a9dc4],ebx
  41a560:	test   eax,0x6b1015b0
  41a565:	sub    ch,BYTE PTR [edx+0x75]
  41a568:	popf   
  41a569:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a56a:	add    al,0x74
  41a56c:	mov    eax,ds:0xc52b037c
  41a571:	ret    
  41a572:	in     al,0xe4
  41a574:	ds push ecx
  41a576:	retf   
  41a577:	inc    esi
  41a578:	fwait
  41a579:	call   0xd626:0xed8d
  41a57f:	das    
  41a580:	sbb    DWORD PTR [ecx-0x65],eax
  41a583:	add    DWORD PTR [esi+0x77],ebx
  41a586:	repz ror BYTE PTR [edx+0x3bda7812],cl
  41a58d:	lods   al,BYTE PTR ds:[esi]
  41a58e:	jecxz  0x41a51d
  41a590:	cmp    bh,BYTE PTR [ebp+0xb28b385]
  41a596:	loope  0x41a5bf
  41a598:	fisub  DWORD PTR [ebx+0x4]
  41a59b:	pop    edi
  41a59c:	call   0xd38cea96
  41a5a1:	call   0x17d2c490
  41a5a6:	retf   
  41a5a7:	adc    eax,0x25142f31
  41a5ac:	dec    esp
  41a5ad:	sahf   
  41a5ae:	jbe    0x41a5b7
  41a5b0:	sahf   
  41a5b1:	std    
  41a5b2:	mov    esp,0x1e6bbe52
  41a5b7:	push   es
  41a5b8:	sbb    BYTE PTR [esi],0xb7
  41a5bb:	add    ebx,ecx
  41a5bd:	or     dh,dl
  41a5bf:	push   esi
  41a5c0:	fstp   st(2)
  41a5c2:	aad    0x6f
  41a5c4:	fucomp st(3)
  41a5c6:	xchg   esi,eax
  41a5c7:	mov    al,0xa4
  41a5c9:	fimul  WORD PTR [edx-0x1b]
  41a5cc:	retf   0x4a88
  41a5cf:	jo     0x41a5fc
  41a5d1:	lock push esp
  41a5d3:	xlat   BYTE PTR ds:[ebx]
  41a5d4:	ret    
  41a5d5:	std    
  41a5d6:	push   ss
  41a5d7:	pusha  
  41a5d8:	cmp    dh,bh
  41a5da:	iret   
  41a5db:	shl    DWORD PTR [edx-0x66],cl
  41a5de:	push   DWORD PTR [ecx-0x59]
  41a5e1:	push   0x75
  41a5e3:	push   ss
  41a5e4:	dec    edi
  41a5e5:	sub    eax,0xcfaebcb1
  41a5ea:	fmul   DWORD PTR [ebx-0x28]
  41a5ed:	or     BYTE PTR [esi-0x3c],ch
  41a5f0:	jno    0x41a65b
  41a5f2:	shl    BYTE PTR [eax+0x4e],1
  41a5f5:	pop    eax
  41a5f6:	clc    
  41a5f7:	(bad)  
  41a5f8:	nop
  41a5f9:	int3   
  41a5fa:	jmp    DWORD PTR ds:0xa02eb814
  41a600:	or     esp,DWORD PTR [edx]
  41a602:	mov    eax,0x92331110
  41a607:	imul   edi,DWORD PTR [ebx-0x64],0x42189383
  41a60e:	sub    ecx,DWORD PTR [esi+0x69154149]
  41a614:	jmp    0x41a636
  41a616:	jmp    esi
  41a618:	xlat   BYTE PTR ss:[ebx]
  41a61a:	add    esp,DWORD PTR [esi+edi*4-0x708ed554]
  41a621:	scas   eax,DWORD PTR es:[edi]
  41a622:	mov    al,0x5d
  41a624:	test   DWORD PTR [eax],esp
  41a626:	aam    0xb9
  41a628:	out    0x76,al
  41a62a:	cmp    al,0x4b
  41a62c:	push   esi
  41a62d:	xchg   ebx,eax
  41a62e:	sub    al,BYTE PTR ds:0xdd9a2691
  41a634:	or     DWORD PTR [edi-0x3b4d8b8a],esp
  41a63a:	(bad)  
  41a63b:	in     eax,dx
  41a63c:	jle    0x41a5d0
  41a63e:	or     al,0x3e
  41a640:	push   ebp
  41a641:	js     0x41a5f8
  41a643:	push   cs
  41a644:	leave  
  41a645:	stc    
  41a646:	xchg   DWORD PTR [edi-0x42e7665],ebx
  41a64c:	inc    ebp
  41a64d:	sti    
  41a64e:	loop   0x41a661
  41a650:	sbb    eax,DWORD PTR [esi-0x6fa860eb]
  41a656:	popa   
  41a657:	sub    eax,DWORD PTR [ebp-0x67940854]
  41a65d:	jne    0x41a6a1
  41a65f:	ins    BYTE PTR es:[edi],dx
  41a660:	mov    bl,0xd8
  41a662:	cmp    al,0x10
  41a664:	stc    
  41a665:	adc    BYTE PTR [ebx+0x5],cl
  41a668:	bound  eax,QWORD PTR [ebp+0x59]
  41a66b:	imul   edi,eax,0x50
  41a66e:	addr16 jmp 0xb4066b42
  41a674:	jecxz  0x41a64a
  41a676:	leave  
  41a677:	(bad)  
  41a678:	shr    BYTE PTR [esi+eax*4],1
  41a67b:	mov    edi,ds
  41a67d:	jecxz  0x41a680
  41a67f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a680:	lods   eax,DWORD PTR ds:[esi]
  41a681:	xchg   ebx,eax
  41a682:	scas   al,BYTE PTR es:[edi]
  41a683:	mov    esi,0x7f902277
  41a688:	push   ebx
  41a689:	call   0x199e38db
  41a68e:	in     al,dx
  41a68f:	leave  
  41a690:	mov    ss,ebx
  41a692:	sbb    al,0xd2
  41a694:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a695:	ds push edx
  41a697:	xchg   ebp,eax
  41a698:	dec    ebx
  41a699:	push   0x4feae59c
  41a69e:	sar    DWORD PTR [edx-0x5a79de0e],0x4a
  41a6a5:	inc    DWORD PTR gs:[ebx+esi*8-0x131fef70]
  41a6ad:	inc    ecx
  41a6ae:	repnz mov ch,0xeb
  41a6b1:	and    BYTE PTR [edi-0x33bf4e15],bh
  41a6b7:	neg    DWORD PTR [ecx+0x8]
  41a6ba:	cmp    ebx,ecx
  41a6bc:	xcrypt-ofb (bad)
  41a6bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6be:	scas   eax,DWORD PTR es:[edi]
  41a6bf:	(bad)  
  41a6c0:	pop    eax
  41a6c1:	mov    esi,0x900110e3
  41a6c6:	inc    esi
  41a6c7:	fimul  DWORD PTR [ebx-0x2b]
  41a6ca:	jecxz  0x41a6b3
  41a6cc:	ins    DWORD PTR es:[edi],dx
  41a6cd:	mov    ebx,0x8c515974
  41a6d2:	xor    al,0xf6
  41a6d4:	mov    ds:0xd01af6a7,al
  41a6d9:	ss je  0x41a6e9
  41a6dc:	dec    esi
  41a6dd:	dec    eax
  41a6de:	inc    edx
  41a6df:	pop    ebx
  41a6e0:	dec    ecx
  41a6e1:	(bad)  
  41a6e2:	int    0xb2
  41a6e4:	mov    bh,dh
  41a6e6:	(bad)  
  41a6e7:	jmp    0x94bf:0xb3ac1c86
  41a6ee:	mov    al,ds:0xb760210a
  41a6f3:	lea    eax,[esp+edi*4+0x6749b53b]
  41a6fa:	mov    ecx,ecx
  41a6fc:	addr16 cdq 
  41a6fe:	loop   0x41a773
  41a700:	inc    ebx
  41a701:	sbb    esi,DWORD PTR [ebp-0x7e]
  41a704:	xchg   edi,eax
  41a705:	shl    BYTE PTR [edx],0x6f
  41a708:	out    0xc9,al
  41a70a:	pop    esp
  41a70b:	xchg   edx,eax
  41a70c:	jl     0x41a72b
  41a70e:	repnz sub edx,0x95f8b114
  41a715:	add    al,0xde
  41a717:	xor    DWORD PTR [eax-0x64],ebx
  41a71a:	jp     0x41a6c8
  41a71c:	or     bl,cl
  41a71e:	pop    edx
  41a71f:	lock jl 0x41a6ca
  41a722:	dec    edi
  41a723:	enter  0xe206,0xd2
  41a727:	lods   eax,DWORD PTR ds:[esi]
  41a728:	jns    0x41a75d
  41a72a:	dec    edi
  41a72b:	jge    0x41a6f7
  41a72d:	(bad)  
  41a72f:	das    
  41a730:	adc    DWORD PTR [edi-0x3],esp
  41a733:	mov    gs,WORD PTR [edx+ecx*1+0x145734a4]
  41a73a:	pop    edx
  41a73b:	mov    bh,BYTE PTR [edx-0xd]
  41a73e:	xor    eax,edx
  41a740:	and    BYTE PTR [esi*1-0x7e78f36d],ah
  41a747:	cmp    dh,ch
  41a749:	lock or eax,0x55d762c6
  41a74f:	push   ebx
  41a750:	dec    eax
  41a751:	ret    
  41a752:	xor    edi,DWORD PTR [ecx]
  41a754:	ds popa 
  41a756:	mov    cl,0x7b
  41a758:	int    0x77
  41a75a:	push   0xffffffe2
  41a75c:	inc    edi
  41a75d:	xchg   dh,bl
  41a75f:	rcr    bl,0xb5
  41a762:	xor    DWORD PTR [edi+0x2158ec02],ebp
  41a768:	push   cs
  41a769:	push   0x6e
  41a76b:	sbb    DWORD PTR [ecx+0x20],edx
  41a76e:	adc    edx,eax
  41a770:	jb     0x41a799
  41a772:	or     eax,0x3daca869
  41a777:	test   esi,esp
  41a779:	scas   al,BYTE PTR es:[edi]
  41a77a:	or     BYTE PTR [edx],0x51
  41a77d:	cmp    BYTE PTR [ecx+0x3a0bb810],0x3a
  41a784:	shl    ecx,cl
  41a786:	sbb    DWORD PTR [esi+0x5749e2d5],edi
  41a78c:	dec    ebx
  41a78d:	fstp   TBYTE PTR [eax+0x50ada38a]
  41a793:	shr    BYTE PTR [esp+eiz*2-0x20],0x9
  41a798:	bound  ebx,QWORD PTR [edi+0x4dd3debd]
  41a79e:	stos   BYTE PTR es:[edi],al
  41a79f:	or     eax,DWORD PTR [ecx-0x7d4100a4]
  41a7a5:	or     al,BYTE PTR [ebx+0x10]
  41a7a8:	and    DWORD PTR [esi+0x6f],edx
  41a7ab:	mov    esi,0x660819ec
  41a7b0:	sub    al,0x7e
  41a7b2:	mov    dl,0x93
  41a7b4:	push   esi
  41a7b5:	in     al,dx
  41a7b6:	inc    esi
  41a7b7:	mov    eax,0xc6f6ff91
  41a7bc:	scas   eax,DWORD PTR es:[edi]
  41a7bd:	retf   0x75cf
  41a7c0:	adc    esp,DWORD PTR [ebx*1-0x60a9920a]
  41a7c7:	mov    esp,0xaffaf3de
  41a7cc:	xchg   edx,eax
  41a7cd:	sahf   
  41a7ce:	inc    ecx
  41a7cf:	dec    ebx
  41a7d0:	out    dx,eax
  41a7d1:	cmp    eax,0x7b53ca77
  41a7d6:	stos   DWORD PTR es:[edi],eax
  41a7d7:	ficom  WORD PTR [ebp+ebx*4+0x3b]
  41a7db:	push   edi
  41a7dc:	call   0x8b60b31a
  41a7e1:	call   DWORD PTR [edx-0x5b8ef44c]
  41a7e7:	xor    DWORD PTR [ebp-0x64],0xffffffa7
  41a7eb:	pop    ds
  41a7ec:	mov    ecx,0x6b888d7a
  41a7f1:	xchg   ebp,eax
  41a7f2:	inc    esi
  41a7f3:	sbb    eax,0x31417e58
  41a7f8:	lds    edx,FWORD PTR [edx+0x1536cd65]
  41a7fe:	popa   
  41a7ff:	inc    edi
  41a800:	pop    edi
  41a801:	or     al,0x32
  41a803:	ss push 0x1d2ff62b
  41a809:	mov    ch,dh
  41a80b:	in     eax,0x27
  41a80d:	fidiv  WORD PTR [ebx]
  41a80f:	dec    edi
  41a810:	and    DWORD PTR [esp+esi*1],esi
  41a813:	lods   eax,DWORD PTR ds:[esi]
  41a814:	push   0x3bd78d15
  41a819:	adc    bh,0x24
  41a81c:	ins    BYTE PTR es:[edi],dx
  41a81d:	cmp    esi,DWORD PTR [esp+edx*1+0x588aed5f]
  41a824:	or     BYTE PTR [edi+0x7],dh
  41a827:	sti    
  41a828:	inc    ebx
  41a829:	sub    DWORD PTR [ecx-0x38],esp
  41a82c:	sub    eax,0xe82c28d9
  41a831:	mov    ebx,0x2d923583
  41a836:	sbb    bh,0xd
  41a839:	xchg   edi,eax
  41a83a:	sbb    DWORD PTR [ebx],0xffffff84
  41a83d:	sar    BYTE PTR [ebx-0x63142a2d],0x41
  41a844:	cmp    dl,BYTE PTR [bx+si-0x7242]
  41a849:	mov    fs,WORD PTR ss:[edi-0x12c9f485]
  41a850:	jge    0x41a7f0
  41a852:	mov    eax,0x36c9b9be
  41a857:	dec    esi
  41a858:	ins    DWORD PTR es:[edi],dx
  41a859:	mov    al,0xff
  41a85b:	mov    eax,DWORD PTR [ecx]
  41a85d:	call   0x853e46fe
  41a862:	cmp    eax,0xdf2df470
  41a867:	das    
  41a868:	inc    ecx
  41a869:	icebp  
  41a86a:	(bad)  [edx]
  41a86c:	(bad)  
  41a86d:	xchg   esp,eax
  41a86e:	mov    cl,0xb3
  41a870:	repz push cs
  41a872:	(bad)  
  41a873:	ss cdq 
  41a875:	(bad)  
  41a876:	es dec ebp
  41a878:	in     al,0xd7
  41a87a:	ds dec esi
  41a87c:	lods   al,BYTE PTR ds:[esi]
  41a87d:	push   ecx
  41a87e:	dec    edi
  41a87f:	xchg   edi,eax
  41a880:	stc    
  41a881:	ins    DWORD PTR es:[edi],dx
  41a882:	hlt    
  41a883:	test   al,0xf8
  41a885:	xor    ebx,DWORD PTR [ebx-0x806195b]
  41a88b:	push   ecx
  41a88c:	jae    0x41a818
  41a88e:	cmp    ebx,esi
  41a890:	jns    0x41a8f7
  41a892:	cdq    
  41a893:	jns    0x41a88c
  41a895:	cdq    
  41a896:	lock xchg ebx,eax
  41a898:	xor    DWORD PTR [ebp+0xc6afe9a],edi
  41a89e:	ret    
  41a89f:	cdq    
  41a8a0:	retf   
  41a8a1:	pop    ds
  41a8a2:	iret   
  41a8a3:	fwait
  41a8a4:	outs   dx,BYTE PTR ds:[esi]
  41a8a5:	lods   eax,DWORD PTR ds:[esi]
  41a8a6:	xchg   edi,eax
  41a8a7:	inc    eax
  41a8a8:	lock repz xor dh,BYTE PTR [ecx-0x36]
  41a8ad:	nop
  41a8ae:	js     0x41a867
  41a8b0:	xor    al,al
  41a8b2:	and    edx,DWORD PTR [eax]
  41a8b4:	mov    ds:0xaee8cd64,eax
  41a8b9:	dec    esp
  41a8ba:	je     0x41a8bc
  41a8bc:	push   ds
  41a8bd:	pusha  
  41a8be:	mov    bl,0x1a
  41a8c0:	xchg   BYTE PTR [edi],bl
  41a8c2:	sbb    eax,0xe6e40178
  41a8c7:	mov    dh,0x48
  41a8c9:	and    eax,0x880ab07
  41a8ce:	inc    esi
  41a8cf:	mov    esp,0x811ce089
  41a8d4:	jbe    0x41a8b2
  41a8d6:	pop    esi
  41a8d7:	scas   al,BYTE PTR es:[edi]
  41a8d8:	mov    esi,0x45cc7d83
  41a8dd:	mov    BYTE PTR [edx-0x52],bl
  41a8e0:	jg     0x41a942
  41a8e2:	dec    eax
  41a8e3:	add    al,0x5c
  41a8e5:	dec    eax
  41a8e6:	xchg   esp,eax
  41a8e7:	xor    al,0x66
  41a8e9:	fwait
  41a8ea:	add    cl,BYTE PTR [ebp+0x71fca26c]
  41a8f0:	fisubr WORD PTR [ebx-0x268620ac]
  41a8f6:	das    
  41a8f7:	data16 in al,dx
  41a8f9:	jmp    FWORD PTR [edx]
  41a8fb:	sub    bl,cl
  41a8fd:	es jecxz 0x41a937
  41a900:	jp     0x41a93d
  41a902:	pop    ebx
  41a903:	xor    cl,ch
  41a905:	mov    dh,0xc1
  41a907:	pusha  
  41a908:	or     cl,ch
  41a90a:	jp     0x41a8ae
  41a90c:	dec    esp
  41a90d:	push   0x41
  41a90f:	xchg   ecx,eax
  41a910:	test   DWORD PTR [esi-0x59],edi
  41a913:	cmp    DWORD PTR [eax-0x6b],esp
  41a916:	(bad)  
  41a917:	sbb    eax,0x24350a3
  41a91c:	lea    ecx,[edx+0x31f59d8a]
  41a922:	jle    0x41a997
  41a924:	(bad)  
  41a925:	iret   
  41a926:	dec    ebp
  41a927:	shl    BYTE PTR [esi+0x60],1
  41a92a:	xchg   ebx,eax
  41a92b:	cmp    DWORD PTR [esi-0xe33a916],ecx
  41a931:	xor    dh,BYTE PTR [eax-0x1]
  41a934:	dec    ebx
  41a935:	push   ss
  41a936:	inc    ecx
  41a937:	test   DWORD PTR [ecx*2+0x3b110ae8],esp
  41a93e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a93f:	leave  
  41a940:	clc    
  41a941:	jp     0x41a9aa
  41a943:	or     DWORD PTR [esi+0x64],ecx
  41a946:	gs dec edx
  41a948:	cmp    dh,BYTE PTR [ebx+0x7a62b1c5]
  41a94e:	push   esi
  41a94f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a950:	sub    eax,0x7fec7565
  41a955:	fcmove st,st(5)
  41a957:	nop
  41a958:	scas   eax,DWORD PTR es:[edi]
  41a959:	or     ecx,ebx
  41a95b:	cmc    
  41a95c:	or     BYTE PTR [edx+eiz*1+0x602c7db9],ah
  41a963:	xlat   BYTE PTR ds:[ebx]
  41a964:	fs pusha 
  41a966:	imul   eax,DWORD PTR [edx-0x32],0x50290d00
  41a96d:	push   edx
  41a96e:	cmp    esp,ecx
  41a970:	pop    ecx
  41a971:	cmp    esp,DWORD PTR [eax+0x46]
  41a974:	sub    bl,BYTE PTR [ecx+0x74568ea5]
  41a97a:	dec    ecx
  41a97b:	ret    0x8c40
  41a97e:	add    ecx,ecx
  41a980:	jb     0x41a978
  41a982:	xor    eax,DWORD PTR [edx]
  41a984:	xchg   esp,eax
  41a985:	adc    ch,BYTE PTR [eax-0x85a55d3]
  41a98b:	imul   ecx,DWORD PTR [esp+ecx*4+0xf],0xa3038aba
  41a993:	fld    TBYTE PTR [eax]
  41a995:	lds    esi,FWORD PTR [ebx]
  41a997:	or     DWORD PTR [esi],eax
  41a999:	adc    edx,ebp
  41a99b:	adc    BYTE PTR [eax+esi*4],0x19
  41a99f:	mov    dl,0x15
  41a9a1:	bound  esi,QWORD PTR [esi]
  41a9a3:	jne    0x41a9cb
  41a9a5:	mov    al,ds:0x129d15db
  41a9aa:	fnstenv [edx+esi*1]
  41a9ad:	inc    ebp
  41a9ae:	or     dl,bh
  41a9b0:	imul   edi,DWORD PTR [edi-0x2f],0xcb6c3f49
  41a9b7:	outs   dx,BYTE PTR ds:[esi]
  41a9b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9b9:	cld    
  41a9ba:	adc    BYTE PTR [esi+0x3f],ch
  41a9bd:	(bad)
  41a9c1:	add    al,0x51
  41a9c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9c4:	leave  
  41a9c5:	mov    ah,0x3c
  41a9c7:	mov    ch,0xd9
  41a9c9:	leave  
  41a9ca:	enter  0x4670,0x37
  41a9ce:	xchg   edi,eax
  41a9cf:	js     0x41a986
  41a9d1:	jg     0x41a9c8
  41a9d3:	inc    edx
  41a9d4:	int    0x88
  41a9d6:	loop   0x41aa4c
  41a9d8:	mov    ebx,0x6b531559
  41a9dd:	xor    dh,BYTE PTR [esp+ebp*8]
  41a9e0:	outs   dx,DWORD PTR ds:[esi]
  41a9e1:	dec    ebp
  41a9e2:	popa   
  41a9e3:	(bad)  
  41a9e4:	sbb    BYTE PTR [edx],ch
  41a9e6:	sub    bl,BYTE PTR [edi+0x3d]
  41a9e9:	ja     0x41aa44
  41a9eb:	scas   al,BYTE PTR es:[edi]
  41a9ec:	inc    edx
  41a9ed:	pop    esp
  41a9ee:	mov    esi,0xbb9e4d0e
  41a9f3:	xor    al,0x77
  41a9f5:	push   ss
  41a9f6:	popa   
  41a9f7:	inc    ebx
  41a9f8:	mov    eax,0xe127b849
  41a9fd:	adc    al,0x36
  41a9ff:	adc    BYTE PTR [edx],ah
  41aa01:	imul   ebx,DWORD PTR [eax-0x2ec6628e],0x3d
  41aa08:	pop    ebx
  41aa09:	mov    ch,ah
  41aa0b:	loop   0x41a9cc
  41aa0d:	push   0xffffffbd
  41aa0f:	shr    BYTE PTR ds:[eax],0x94
  41aa13:	add    DWORD PTR [eax-0x6e],ebx
  41aa16:	(bad)  
  41aa17:	div    esp
  41aa19:	mov    ebp,0x7695b46d
  41aa1e:	fild   WORD PTR [ecx+0x24]
  41aa21:	fild   WORD PTR [ebx-0x1a60d423]
  41aa27:	push   esp
  41aa28:	lahf   
  41aa29:	scas   eax,DWORD PTR es:[edi]
  41aa2a:	jbe    0x41aa11
  41aa2c:	mov    ds:0x62ee2615,al
  41aa31:	inc    edi
  41aa32:	arpl   si,di
  41aa34:	sahf   
  41aa35:	cmp    eax,0xc4399785
  41aa3a:	rol    DWORD PTR ds:0x56da7ab0,0x5b
  41aa41:	(bad)  
  41aa43:	loope  0x41a9f8
  41aa45:	outs   dx,DWORD PTR ds:[esi]
  41aa46:	lds    edx,FWORD PTR [ecx+ebx*8+0xc]
  41aa4a:	dec    ebx
  41aa4b:	dec    edi
  41aa4c:	mov    esp,0xd2f15f37
  41aa51:	mov    bl,0x41
  41aa53:	arpl   cx,sp
  41aa55:	sub    eax,0xd225690
  41aa5a:	mov    eax,0x77f9cbeb
  41aa5f:	imul   BYTE PTR [esi+ebp*1-0x3b29b341]
  41aa66:	pop    esi
  41aa67:	cmc    
  41aa68:	dec    eax
  41aa69:	test   al,0xa0
  41aa6b:	icebp  
  41aa6c:	fsqrt  
  41aa6e:	ss mov eax,0x2cff7384
  41aa74:	adc    DWORD PTR gs:[edx+0x5cebabd3],eax
  41aa7b:	pusha  
  41aa7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa7d:	repnz xor eax,0x404368fd
  41aa83:	jae    0x41aa09
  41aa85:	call   0xbbff275f
  41aa8a:	shl    edi,1
  41aa8c:	pop    es
  41aa8d:	and    DWORD PTR [edi],ecx
  41aa8f:	mov    al,0x15
  41aa91:	cmp    eax,ecx
  41aa93:	bound  edx,QWORD PTR [ebp-0x31]
  41aa96:	push   esi
  41aa97:	(bad)  
  41aa98:	jle    0x41aa44
  41aa9a:	adc    DWORD PTR [edi-0x25],edx
  41aa9d:	push   ds
  41aa9e:	adc    eax,0x4ed0c699
  41aaa3:	ror    DWORD PTR [ebx+0x2],cl
  41aaa6:	jne    0x41aa3b
  41aaa8:	sbb    bl,BYTE PTR [edi-0x37]
  41aaab:	lock xchg edx,eax
  41aaad:	or     eax,0xe1d7e689
  41aab2:	push   ebp
  41aab3:	ja     0x41aa47
  41aab5:	push   0x79
  41aab7:	je     0x41ab09
  41aab9:	inc    edi
  41aaba:	dec    ecx
  41aabb:	xchg   DWORD PTR [esi-0xf],eax
  41aabe:	mov    edi,0x9f744268
  41aac3:	mov    esi,esi
  41aac5:	sub    BYTE PTR [ebx],dh
  41aac7:	in     eax,dx
  41aac8:	push   ebx
  41aac9:	fcom   DWORD PTR [ebx+0x2d]
  41aacc:	lods   eax,DWORD PTR ds:[esi]
  41aacd:	inc    edi
  41aace:	cmp    ah,BYTE PTR [ecx+edx*2]
  41aad1:	scas   eax,DWORD PTR es:[edi]
  41aad2:	xor    DWORD PTR [esi+0xe5ad64a],ebp
  41aad8:	or     al,0x37
  41aada:	mov    dh,0x96
  41aadc:	jnp    0x41ab01
  41aade:	mov    eax,ds:0xbc71f9b6
  41aae3:	xchg   BYTE PTR [esi],bh
  41aae5:	and    DWORD PTR gs:[esi+edx*4+0x45],ecx
  41aaea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaeb:	aas    
  41aaec:	hlt    
  41aaed:	add    DWORD PTR [eax-0x5c],edi
  41aaf0:	mov    DWORD PTR [edx+eiz*8-0x5ae5c93a],edi
  41aaf7:	cmc    
  41aaf8:	rcr    BYTE PTR [ebx+0x6e1f1822],1
  41aafe:	ret    0x1e66
  41ab01:	xchg   esp,eax
  41ab02:	jae    0x41ab1b
  41ab04:	pusha  
  41ab05:	ret    
  41ab06:	pop    esp
  41ab07:	out    dx,eax
  41ab08:	hlt    
  41ab09:	mov    eax,0x9b402c19
  41ab0e:	(bad)  
  41ab10:	addr16 push es
  41ab12:	fadd   QWORD PTR [edx+0x19d1abfa]
  41ab18:	int    0xd
  41ab1a:	repz inc esi
  41ab1c:	pushf  
  41ab1d:	fwait
  41ab1e:	stos   DWORD PTR es:[edi],eax
  41ab1f:	or     ecx,DWORD PTR [ebx+0x0]
  41ab22:	mov    dl,0xd5
  41ab24:	jmp    0xdaea:0x37ff4cdc
  41ab2b:	fdivr  st,st(1)
  41ab2d:	sbb    eax,0xd9c86851
  41ab32:	mov    WORD PTR [ebx+0x182f298c],es
  41ab38:	ins    DWORD PTR es:[edi],dx
  41ab39:	inc    esp
  41ab3a:	repnz daa 
  41ab3c:	retf   0x4ee
  41ab3f:	outs   dx,DWORD PTR ds:[esi]
  41ab40:	inc    edx
  41ab41:	mov    edx,0xef96a634
  41ab46:	xor    BYTE PTR [esi+0x77ffc483],ah
  41ab4c:	iret   
  41ab4d:	fsubr  QWORD PTR [esi+0x24]
  41ab50:	sub    DWORD PTR [eax+0x35779809],esi
  41ab56:	xor    esp,esi
  41ab58:	mov    ebp,0xe8d70e3a
  41ab5d:	xor    cl,dh
  41ab5f:	push   eax
  41ab60:	xchg   esp,eax
  41ab61:	stos   BYTE PTR es:[edi],al
  41ab62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab63:	jb     0x41ab49
  41ab65:	ffree  st(6)
  41ab67:	int3   
  41ab68:	(bad)  
  41ab69:	xchg   edx,eax
  41ab6a:	in     al,0xd3
  41ab6c:	mov    al,cl
  41ab6e:	in     al,dx
  41ab6f:	int    0x6b
  41ab71:	mov    esp,0x1527db16
  41ab76:	mov    ebp,DWORD PTR [esi]
  41ab78:	stc    
  41ab79:	mov    ebp,0x41c60a42
  41ab7e:	test   ebp,0x55d531f7
  41ab84:	jmp    0x7fde:0x8c423a93
  41ab8b:	add    bl,BYTE PTR [eax]
  41ab8d:	mov    esp,0x357a891d
  41ab92:	push   esi
  41ab93:	icebp  
  41ab94:	scas   al,BYTE PTR es:[edi]
  41ab95:	mov    cl,0x82
  41ab97:	ds add al,0x3
  41ab9a:	dec    edi
  41ab9b:	iret   
  41ab9c:	lods   al,BYTE PTR ds:[esi]
  41ab9d:	mov    dh,0x65
  41ab9f:	mov    ah,0x5a
  41aba1:	mov    cl,0xc2
  41aba3:	pop    edi
  41aba4:	xchg   DWORD PTR [esp+ebx*8],edx
  41aba7:	pop    edx
  41aba8:	dec    ecx
  41aba9:	mov    ds:0x6b7d7381,eax
  41abae:	sbb    DWORD PTR [esi-0x4c],ecx
  41abb1:	mov    cl,0x85
  41abb3:	jns    0x41ab4e
  41abb5:	push   ebp
  41abb6:	mov    bl,0xdf
  41abb8:	pop    eax
  41abb9:	jmp    0x219cb01
  41abbe:	stos   DWORD PTR es:[edi],eax
  41abbf:	int3   
  41abc0:	shl    dh,1
  41abc2:	test   DWORD PTR [edx+edi*4-0x517ce429],0xe0bcc7b5
  41abcd:	jno    0x41ac4e
  41abcf:	ds aas 
  41abd1:	and    ebx,DWORD PTR [esi+esi*8+0x4e574ed3]
  41abd8:	pop    esp
  41abd9:	call   FWORD PTR [edi]
  41abdb:	pop    edi
  41abdc:	cmp    eax,0x2dcd1cd9
  41abe1:	mov    dh,0xd8
  41abe3:	popf   
  41abe4:	jle    0x41ac32
  41abe6:	pop    ebx
  41abe7:	test   al,0xaf
  41abe9:	dec    esi
  41abea:	add    eax,0x8f93be87
  41abef:	adc    BYTE PTR [eax],0xca
  41abf2:	jns    0x41abbb
  41abf4:	dec    eax
  41abf5:	(bad)  
  41abf6:	fisttp WORD PTR [eax]
  41abf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abf9:	sbb    al,0xf2
  41abfb:	sub    esp,DWORD PTR [edi-0x57]
  41abfe:	in     al,0x68
  41ac00:	(bad)  
  41ac01:	jle    0x41ac35
  41ac03:	xchg   DWORD PTR [edi-0x553a21b6],esp
  41ac09:	jbe    0x41abfd
  41ac0b:	cwde   
  41ac0c:	push   es
  41ac0d:	std    
  41ac0e:	push   es
  41ac0f:	hlt    
  41ac10:	mov    edi,0x37260950
  41ac15:	jmp    0x17f4e01a
  41ac1a:	jmp    0x40846680
  41ac1f:	sbb    BYTE PTR [edx+0x4b],cl
  41ac22:	ret    0xbb9e
  41ac25:	daa    
  41ac26:	jb     0x41aca3
  41ac28:	sub    al,0x83
  41ac2a:	pop    es
  41ac2b:	push   es
  41ac2c:	add    BYTE PTR [eax],ch
  41ac2e:	imul   ebx,DWORD PTR fs:[eax+0x6c0247c3],0x13
  41ac36:	or     ch,bh
  41ac38:	cs std 
  41ac3a:	fisub  WORD PTR [ecx+edi*8+0x26]
  41ac3e:	jne    0x41abe3
  41ac40:	push   0xb00fbeb4
  41ac45:	sbb    dl,ah
  41ac47:	scas   eax,DWORD PTR es:[edi]
  41ac48:	cwde   
  41ac49:	add    esi,DWORD PTR [ecx]
  41ac4b:	pop    ebx
  41ac4c:	and    cx,ax
  41ac4f:	into   
  41ac50:	sbb    DWORD PTR [ecx-0x3da7403d],eax
  41ac56:	out    0x48,al
  41ac58:	retf   
  41ac59:	je     0x41abf3
  41ac5b:	outs   dx,DWORD PTR ds:[esi]
  41ac5c:	enter  0x470e,0xc9
  41ac60:	pop    ds
  41ac61:	xor    eax,0x5596789f
  41ac66:	dec    esi
  41ac67:	(bad)  
  41ac68:	in     al,dx
  41ac69:	fidivr DWORD PTR [edi-0x58d95e62]
  41ac6f:	scas   al,BYTE PTR es:[edi]
  41ac70:	push   edx
  41ac71:	test   BYTE PTR [ecx-0x4ab6dcbe],bl
  41ac77:	pop    es
  41ac78:	std    
  41ac79:	ss out dx,al
  41ac7b:	popf   
  41ac7c:	dec    ebx
  41ac7d:	adc    edx,DWORD PTR [ebp-0x4e5da3db]
  41ac83:	cs into 
  41ac85:	cmp    eax,0x138a9542
  41ac8a:	lods   al,BYTE PTR ds:[esi]
  41ac8b:	mov    ebx,0x9ce6e7b4
  41ac90:	xor    eax,0x7e553be9
  41ac95:	out    0x1e,eax
  41ac97:	adc    eax,0xa4430d52
  41ac9c:	ins    DWORD PTR es:[edi],dx
  41ac9d:	jl     0x41ad09
  41ac9f:	aam    0xda
  41aca1:	jl     0x41acf7
  41aca3:	repnz mov edi,0xee55cb9c
  41aca9:	and    edx,esp
  41acab:	sub    BYTE PTR [esi-0x1d6e9717],ch
  41acb1:	sar    BYTE PTR [ecx+edi*1],1
  41acb4:	inc    esi
  41acb5:	xchg   edx,eax
  41acb6:	xor    al,0x37
  41acb8:	daa    
  41acb9:	jl     0x41acce
  41acbb:	or     eax,0x1238e0ad
  41acc0:	add    BYTE PTR [esp+esi*8+0x7fa09a84],bl
  41acc7:	cli    
  41acc8:	push   0xb39d1692
  41accd:	je     0x41ace2
  41accf:	addr16 addr16 mov al,0xc6
  41acd3:	mov    eax,ds:0x987afa1c
  41acd8:	enter  0xf1c,0x87
  41acdc:	in     eax,0xd0
  41acde:	sbb    eax,0x93613fc1
  41ace3:	sbb    eax,0xb376b28
  41ace8:	(bad)  
  41ace9:	xchg   esp,eax
  41acea:	xor    al,BYTE PTR [ecx+edx*8-0x44909ea8]
  41acf1:	je     0x41ad67
  41acf3:	int    0x7d
  41acf5:	jecxz  0x41ac84
  41acf7:	repnz cmp edx,ecx
  41acfa:	or     bl,BYTE PTR [edx+ebx*2]
  41acfd:	ja     0x41ad77
  41acff:	cld    
  41ad00:	or     eax,0x1afb506d
  41ad05:	dec    ebp
  41ad06:	cwde   
  41ad07:	jb     0x41ac8c
  41ad09:	mov    ah,0xed
  41ad0b:	int    0xb8
  41ad0d:	jl     0x41ad5b
  41ad0f:	dec    ebp
  41ad10:	arpl   WORD PTR [eax-0x685665c7],cx
  41ad16:	dec    ecx
  41ad17:	out    0x69,al
  41ad19:	cwde   
  41ad1a:	sub    esp,ecx
  41ad1c:	mov    edx,0x8806336f
  41ad21:	jp     0x41ad51
  41ad23:	add    eax,0x2873328e
  41ad28:	cdq    
  41ad29:	mov    edx,DWORD PTR [edi]
  41ad2b:	ficom  DWORD PTR [ebp-0x54]
  41ad2e:	pop    edi
  41ad2f:	cmp    DWORD PTR [ebx],eax
  41ad31:	lea    ecx,ds:0x783f30e5
  41ad37:	adc    al,0x14
  41ad39:	add    eax,0x9ea0dfa7
  41ad3e:	stos   BYTE PTR es:[edi],al
  41ad3f:	sbb    eax,0x90811bcd
  41ad44:	push   ss
  41ad45:	xor    al,0x6d
  41ad47:	ror    BYTE PTR [eax],cl
  41ad49:	std    
  41ad4a:	push   ebx
  41ad4b:	adc    DWORD PTR [ebx],edi
  41ad4d:	outs   dx,BYTE PTR ds:[esi]
  41ad4e:	push   0xcbad75f6
  41ad53:	call   0xfc1ee4e1
  41ad58:	repz shl DWORD PTR [eax-0x41],cl
  41ad5c:	dec    esp
  41ad5d:	pusha  
  41ad5e:	fcmovnu st,st(7)
  41ad60:	cmp    BYTE PTR [esi+0x55993ef2],ah
  41ad66:	daa    
  41ad67:	mov    cl,0x38
  41ad69:	in     al,0x7f
  41ad6b:	mov    cl,0xb8
  41ad6d:	jl     0x41ad86
  41ad6f:	jno    0x41ad3b
  41ad71:	jns    0x41ad35
  41ad73:	fsubr  DWORD PTR [ebx-0x642ad3d3]
  41ad79:	mov    eax,ds:0x8602f696
  41ad7e:	call   0x6df2:0x45a3ed4a
  41ad85:	push   0x5
  41ad87:	push   edx
  41ad88:	xchg   DWORD PTR [ebx+0x66190882],esi
  41ad8e:	stos   DWORD PTR es:[edi],eax
  41ad8f:	or     DWORD PTR [ebx-0x6b11331d],ecx
  41ad95:	xchg   esi,eax
  41ad96:	xchg   ebx,eax
  41ad97:	push   ds
  41ad98:	cmp    al,0x76
  41ad9a:	sbb    BYTE PTR [eax+edx*1],ch
  41ad9d:	sbb    al,0xfe
  41ad9f:	neg    bl
  41ada1:	xor    esp,edi
  41ada3:	dec    ebx
  41ada4:	retf   
  41ada5:	and    eax,DWORD PTR [edi]
  41ada7:	jae    0x41ad48
  41ada9:	stos   DWORD PTR es:[edi],eax
  41adaa:	add    ecx,ebx
  41adac:	pop    edi
  41adad:	dec    esi
  41adae:	jp     0x41ad46
  41adb0:	mov    dh,BYTE PTR ds:0x16ace70d
  41adb6:	(bad)  
  41adb7:	fsubr  QWORD PTR [esi-0x6eb00199]
  41adbd:	das    
  41adbe:	push   eax
  41adbf:	sbb    ecx,ebp
  41adc1:	sbb    al,0xde
  41adc4:	adc    al,0x47
  41adc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adc7:	lods   eax,DWORD PTR ds:[esi]
  41adc8:	(bad)  
  41adca:	outs   dx,DWORD PTR ds:[esi]
  41adcb:	and    BYTE PTR [ecx],0xd
  41adce:	mov    edx,0xe491aba6
  41add3:	sub    DWORD PTR [esi-0xe],esi
  41add6:	fisttp DWORD PTR [eax+0x60]
  41add9:	sbb    ecx,esp
  41addb:	xor    dh,bh
  41addd:	in     eax,0xf6
  41addf:	retf   
  41ade0:	jo     0x41adb8
  41ade2:	ret    0xb096
  41ade5:	loop   0x41adec
  41ade7:	jnp    0x41adae
  41ade9:	repz dec eax
  41adeb:	retf   
  41adec:	ffreep st(3)
  41adee:	pop    esp
  41adef:	icebp  
  41adf0:	into   
  41adf1:	sub    al,0x54
  41adf3:	and    esi,esp
  41adf5:	cmp    BYTE PTR [ebp-0x5f390b9b],cl
  41adfb:	ds sub eax,0x93e93cb4
  41ae01:	out    0x45,al
  41ae03:	imul   esp,DWORD PTR [ebx-0x77],0xcb27e4da
  41ae0a:	fistp  QWORD PTR [eax]
  41ae0c:	mov    cl,0xdf
  41ae0e:	mov    al,0x9d
  41ae10:	clc    
  41ae11:	pop    edx
  41ae12:	call   eax
  41ae14:	fdivr  DWORD PTR [eax+0xb]
  41ae17:	jae    0x41ae3d
  41ae19:	fiadd  DWORD PTR [ebp-0x62]
  41ae1c:	ret    0xdf86
  41ae1f:	pop    ds
  41ae20:	clc    
  41ae21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae22:	ret    
  41ae23:	push   edx
  41ae24:	sbb    BYTE PTR [ecx+0x2],dh
  41ae27:	mov    edx,0xbfd3efb
  41ae2c:	adc    al,0x62
  41ae2e:	push   ebx
  41ae2f:	add    BYTE PTR [esi+0x4c112801],ch
  41ae35:	jl     0x41adc0
  41ae37:	icebp  
  41ae38:	cs call 0xac7a4388
  41ae3e:	ins    DWORD PTR es:[edi],dx
  41ae3f:	fs push ebp
  41ae41:	dec    ecx
  41ae42:	push   0xcd703893
  41ae47:	xor    eax,DWORD PTR [ebx]
  41ae49:	leave  
  41ae4a:	test   eax,0xf84f3acb
  41ae4f:	loope  0x41ae38
  41ae51:	rcr    DWORD PTR [esp+edx*8+0x4c8d5eff],1
  41ae58:	and    DWORD PTR [eax+0x5ea1587f],ebx
  41ae5e:	mov    ebx,0x7c6bc7cb
  41ae63:	xchg   DWORD PTR [eax-0x4a],ebp
  41ae66:	lock push edi
  41ae68:	fld    DWORD PTR [edi]
  41ae6a:	pop    ebx
  41ae6b:	dec    ebx
  41ae6c:	pop    ecx
  41ae6d:	daa    
  41ae6e:	xchg   ebp,eax
  41ae6f:	add    al,0xdd
  41ae71:	pop    ds
  41ae72:	add    ch,BYTE PTR [ebp+edi*8+0x7f25cb7]
  41ae79:	mov    bl,0xc3
  41ae7b:	cmp    eax,0x9633b6f3
  41ae80:	dec    dl
  41ae82:	neg    BYTE PTR [ebx+0x1838a877]
  41ae88:	add    DWORD PTR [eax],esi
  41ae8a:	push   es
  41ae8b:	sti    
  41ae8c:	arpl   cx,si
  41ae8e:	ja     0x41af0c
  41ae90:	or     al,0x96
  41ae92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae93:	mov    al,ds:0x4c187518
  41ae98:	pop    ebx
  41ae99:	lods   al,BYTE PTR ds:[esi]
  41ae9a:	je     0x41aedd
  41ae9c:	in     al,0xde
  41ae9e:	int3   
  41ae9f:	lock dec eax
  41aea1:	and    eax,0xe97edad6
  41aea6:	scas   eax,DWORD PTR es:[edi]
  41aea7:	test   eax,0x2327504c
  41aeac:	nop    DWORD PTR [ecx]
  41aeaf:	jno    0x41ae5d
  41aeb1:	lahf   
  41aeb2:	push   eax
  41aeb3:	in     eax,0xda
  41aeb5:	leave  
  41aeb6:	mov    dh,0xb2
  41aeb8:	sar    edi,cl
  41aeba:	jge    0x41aef7
  41aebc:	dec    esi
  41aebd:	inc    eax
  41aebe:	jmp    0x8561:0x88160961
  41aec5:	popf   
  41aec6:	pop    esp
  41aec7:	out    0xb4,eax
  41aec9:	dec    ebx
  41aeca:	outs   dx,BYTE PTR ds:[esi]
  41aecb:	iret   
  41aecc:	xor    BYTE PTR [ebx+0x30a12ea9],ch
  41aed2:	xchg   ecx,eax
  41aed3:	add    al,0xca
  41aed5:	sub    BYTE PTR [edx+eiz*4-0x36],dl
  41aed9:	jmp    0x41af3e
  41aedb:	push   esi
  41aedc:	mov    ah,0x62
  41aede:	jbe    0x41ae8b
  41aee0:	mov    esp,0x2c515847
  41aee5:	mov    edx,0x9561fef9
  41aeea:	es mov esi,ecx
  41aeed:	xchg   esp,eax
  41aeee:	scas   eax,DWORD PTR es:[edi]
  41aeef:	cmc    
  41aef0:	xchg   esi,ebx
  41aef2:	mov    ds:0xaf96cc12,eax
  41aef7:	repz inc esi
  41aef9:	hlt    
  41aefa:	dec    edi
  41aefb:	add    al,0xea
  41aefd:	(bad)  
  41aefe:	and    eax,0x8aa81313
  41af03:	js     0x41af58
  41af05:	call   0xa348b370
  41af0a:	js     0x41aea6
  41af0c:	lds    esp,FWORD PTR [edx+0x7e]
  41af0f:	out    dx,al
  41af10:	xlat   BYTE PTR ds:[ebx]
  41af11:	outs   dx,BYTE PTR ds:[esi]
  41af12:	cmc    
  41af13:	ficom  WORD PTR [esi-0x46]
  41af16:	or     al,BYTE PTR [ecx+0x4f]
  41af19:	popf   
  41af1a:	push   edi
  41af1b:	pop    ebx
  41af1c:	rol    esp,1
  41af1e:	inc    ecx
  41af1f:	xor    ebp,DWORD PTR [edx+0x5f]
  41af22:	mov    dh,0x4f
  41af24:	and    dh,dh
  41af26:	mov    al,ds:0x47a90cca
  41af2b:	mov    ah,0x1b
  41af2d:	(bad)  
  41af2e:	xor    esi,DWORD PTR [esi+0x32]
  41af31:	test   al,0xa6
  41af33:	stc    
  41af34:	add    cl,dh
  41af36:	inc    esi
  41af37:	fnstcw WORD PTR [eax-0x48dfc245]
  41af3d:	mov    ah,0x83
  41af3f:	add    eax,0xe922f68d
  41af44:	int3   
  41af45:	scas   eax,DWORD PTR es:[edi]
  41af46:	pop    ebx
  41af47:	fimul  DWORD PTR [ecx-0x7c]
  41af4a:	inc    ebp
  41af4b:	popf   
  41af4c:	lods   eax,DWORD PTR ds:[esi]
  41af4d:	ins    DWORD PTR es:[edi],dx
  41af4e:	fucomip st,st(6)
  41af50:	dec    eax
  41af51:	fld    DWORD PTR [edx]
  41af53:	lock pmullw mm0,QWORD PTR [esp+eiz*2+0x4220f8ab]
  41af5c:	mov    dl,0x6e
  41af5e:	cmc    
  41af5f:	popa   
  41af60:	jno    0x41af84
  41af62:	mov    eax,ds:0xedb26119
  41af67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af68:	das    
  41af69:	(bad)  
  41af6a:	into   
  41af6b:	and    eax,0xdc9bf212
  41af70:	sub    eax,0x5bbb4680
  41af75:	fist   WORD PTR [ecx]
  41af77:	lock jg 0x41afc6
  41af7a:	aas    
  41af7b:	jp     0x41afe5
  41af7d:	bound  esp,QWORD PTR [ebp+0x77]
  41af80:	ret    0xe403
  41af83:	(bad)  
  41af84:	mov    ah,0x30
  41af86:	ds xor eax,0x3b93bc6
  41af8c:	xor    DWORD PTR [ecx+0x351c4f14],eax
  41af92:	add    dl,ch
  41af94:	xchg   edx,eax
  41af95:	sub    DWORD PTR [eax],edi
  41af97:	mul    dl
  41af99:	das    
  41af9a:	push   eax
  41af9b:	(bad)  [edx+ebx*2-0x48e23130]
  41afa2:	dec    esp
  41afa3:	popf   
  41afa4:	inc    esi
  41afa5:	mov    ds:0xa98c8053,al
  41afaa:	sbb    al,0x1
  41afac:	inc    ebx
  41afad:	mov    edx,edx
  41afaf:	imul   edi,DWORD PTR [ecx],0xffffffe6
  41afb2:	mov    eax,0x69ed55a4
  41afb7:	or     BYTE PTR [ebp+0x6],ch
  41afba:	mov    DWORD PTR [edi],edi
  41afbc:	jle    0x41afc3
  41afbe:	repz sbb ah,BYTE PTR [ecx+0x25ad925e]
  41afc5:	lahf   
  41afc6:	les    ebx,FWORD PTR [edi]
  41afc8:	push   esi
  41afc9:	sub    ecx,DWORD PTR [esp+ecx*2]
  41afcc:	ss mov ecx,0x570b2647
  41afd2:	fmul   QWORD PTR ds:0xadb5ea1b
  41afd8:	sub    al,0xa6
  41afda:	jno    0x41af8d
  41afdc:	test   esi,esi
  41afde:	(bad)  
  41afdf:	dec    esi
  41afe0:	dec    ecx
  41afe1:	aad    0x47
  41afe3:	xchg   esp,eax
  41afe4:	add    eax,0x392c0661
  41afe9:	arpl   WORD PTR ds:0x7cb32d62,sp
  41afef:	daa    
  41aff0:	dec    esp
  41aff1:	fdivrp st(7),st
  41aff3:	adc    DWORD PTR [ecx],ecx
  41aff5:	loope  0x41b018
  41aff7:	xchg   DWORD PTR [ecx+0x5c],ecx
  41affa:	inc    edi
  41affb:	xor    DWORD PTR [edi],esp
  41affd:	adc    al,0xf3
  41afff:	sub    eax,0x355d0bd6
  41b004:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b005:	ins    BYTE PTR es:[edi],dx
  41b006:	xor    cl,BYTE PTR [ecx]
  41b008:	or     esp,DWORD PTR [edi-0x33391e16]
  41b00e:	mov    al,ds:0x59921bd1
  41b013:	add    esp,DWORD PTR [ecx+edi*2+0x7c]
  41b017:	mov    edx,0xc2a5be94
  41b01c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b01d:	mov    ds,WORD PTR [edi-0x1e]
  41b020:	pushf  
  41b021:	es push esi
  41b023:	popa   
  41b024:	sbb    al,0x64
  41b026:	and    DWORD PTR [ebx+0x6ef76d57],esi
  41b02c:	xor    al,0xb2
  41b02e:	pop    ebp
  41b02f:	xor    al,0xba
  41b031:	add    al,0x3f
  41b033:	mov    ds,WORD PTR [ecx+0x753a6a3a]
  41b039:	jbe    0x41b082
  41b03b:	retf   
  41b03c:	imul   DWORD PTR [ebx+0x1d556e28]
  41b042:	aas    
  41b043:	ja     0x41b039
  41b045:	iret   
  41b046:	sbb    BYTE PTR ds:0xf3c12c45,bl
  41b04c:	jo     0x41b0c9
  41b04e:	jno    0x41b08b
  41b050:	(bad)  
  41b051:	stc    
  41b052:	xlat   BYTE PTR ds:[ebx]
  41b053:	pop    esp
  41b054:	call   0x8ae7a8a2
  41b059:	arpl   WORD PTR [eax+0x45214629],dx
  41b05f:	shr    DWORD PTR [edx-0x26],1
  41b062:	into   
  41b063:	ja     0x41b020
  41b065:	hlt    
  41b066:	cmp    eax,0xde8269d
  41b06b:	iret   
  41b06c:	in     eax,dx
  41b06d:	inc    eax
  41b06e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b06f:	rcr    DWORD PTR [ebx-0x517ffc7b],0x5f
  41b076:	data16 in al,dx
  41b078:	repz dec sp
  41b07b:	cmp    DWORD PTR [ebx-0x480b0d34],ebx
  41b081:	and    ax,0x3148
  41b085:	jne    0x41b091
  41b087:	mov    edx,0x123c07bd
  41b08c:	cmp    al,ch
  41b08e:	push   edx
  41b08f:	sub    DWORD PTR ss:[eax+0x67],0xffffffb4
  41b094:	jl     0x41b036
  41b096:	fst    DWORD PTR ds:0x93075760
  41b09c:	icebp  
  41b09d:	jle    0x41b05d
  41b09f:	ret    
  41b0a0:	or     BYTE PTR [edx-0x62],al
  41b0a3:	mov    WORD PTR es:[ecx+0xa],fs
  41b0a7:	aam    0x16
  41b0a9:	in     eax,0xe0
  41b0ab:	pusha  
  41b0ac:	test   DWORD PTR [edi*4+0x2356d8be],ebx
  41b0b3:	xor    eax,0x515b1e1
  41b0b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0b9:	ret    0xd98a
  41b0bc:	xlat   BYTE PTR ds:[ebx]
  41b0bd:	xor    eax,0x1431ea35
  41b0c2:	ins    DWORD PTR es:[edi],dx
  41b0c3:	out    dx,eax
  41b0c4:	retf   0x70d
  41b0c7:	xor    BYTE PTR [edi],dl
  41b0c9:	mov    ds:0xccd00946,eax
  41b0ce:	pop    ds
  41b0cf:	cwde   
  41b0d0:	inc    ecx
  41b0d1:	out    dx,eax
  41b0d2:	lds    esp,FWORD PTR [ebx+0x71]
  41b0d5:	int3   
  41b0d6:	and    BYTE PTR [eax],dh
  41b0d8:	imul   esp,DWORD PTR [ecx],0x794781cc
  41b0de:	in     al,0x67
  41b0e0:	push   edi
  41b0e1:	test   BYTE PTR [eax+0x3d],bh
  41b0e4:	nop
  41b0e5:	lds    edx,FWORD PTR [eax-0x75]
  41b0e8:	loope  0x41b140
  41b0ea:	push   cs
  41b0eb:	jb     0x41b0bb
  41b0ed:	inc    esi
  41b0ee:	aaa    
  41b0ef:	jno    0x41b0b9
  41b0f1:	dec    edi
  41b0f2:	inc    edx
  41b0f3:	into   
  41b0f4:	mov    ds:0x669798e9,eax
  41b0f9:	(bad)  
  41b0fa:	sbb    al,ah
  41b0fc:	mov    ecx,0xcef92daf
  41b101:	repnz sti 
  41b103:	ins    DWORD PTR es:[edi],dx
  41b104:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b105:	xchg   esi,eax
  41b106:	inc    edi
  41b107:	repz add eax,0xb263f87c
  41b10d:	push   ecx
  41b10e:	test   DWORD PTR [edi],esi
  41b110:	push   eax
  41b111:	jno    0x41b17e
  41b113:	aam    0x9e
  41b115:	sbb    dl,BYTE PTR [ebp-0x10]
  41b118:	out    0x25,al
  41b11a:	adc    BYTE PTR [ebp-0x6a],0x4e
  41b11e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b11f:	in     al,0xf3
  41b121:	enter  0xf874,0x2d
  41b125:	stc    
  41b126:	jl     0x41b0ed
  41b128:	dec    ebp
  41b129:	ret    
  41b12a:	out    0xdd,eax
  41b12c:	clc    
  41b12d:	or     BYTE PTR [ebp-0x7e5bda5],0xbe
  41b134:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b135:	xor    BYTE PTR [edi],ch
  41b137:	cli    
  41b138:	mov    ebx,0x547284a3
  41b13d:	shr    BYTE PTR [eax+0x53],0x18
  41b141:	in     eax,dx
  41b142:	out    0x6f,al
  41b144:	push   ebp
  41b145:	xchg   edi,eax
  41b146:	popa   
  41b147:	inc    eax
  41b148:	fdivr  QWORD PTR [edx-0x75097ee1]
  41b14e:	outs   dx,BYTE PTR ds:[esi]
  41b14f:	lds    ebp,FWORD PTR [ebp-0x6dd51d9]
  41b155:	mov    BYTE PTR [ecx-0x1a],cl
  41b158:	bound  esp,QWORD PTR [esi+0x2be34f0c]
  41b15e:	dec    ebx
  41b15f:	inc    edx
  41b160:	xchg   esp,eax
  41b161:	push   ss
  41b162:	and    BYTE PTR [ebx+edi*2-0x620fd618],dl
  41b169:	loop   0x41b11e
  41b16b:	add    eax,0x70f0d509
  41b170:	mov    al,ds:0x517dd220
  41b175:	scas   eax,DWORD PTR es:[edi]
  41b176:	aam    0x6e
  41b178:	gs xchg bl,bh
  41b17b:	(bad)  
  41b17c:	mov    cl,0xb2
  41b17e:	sub    eax,0x65f96733
  41b183:	cmp    eax,0xd02c28b4
  41b188:	mov    ?,WORD PTR ds:0xf9ed408f
  41b18e:	out    0x2e,al
  41b190:	mov    esp,0xcfdaf8af
  41b195:	shl    BYTE PTR [edi-0x60],0x2c
  41b199:	call   0x8693c8c
  41b19e:	popa   
  41b19f:	mov    eax,0x57b20e54
  41b1a4:	pop    ss
  41b1a5:	sti    
  41b1a6:	mov    al,0xb2
  41b1a8:	loope  0x41b196
  41b1aa:	and    cl,BYTE PTR [eax]
  41b1ac:	sub    cl,BYTE PTR [edi-0x75]
  41b1af:	setbe  BYTE PTR [edx]
  41b1b2:	pop    ds
  41b1b3:	aad    0x1f
  41b1b5:	stos   BYTE PTR es:[edi],al
  41b1b6:	sub    bh,BYTE PTR [eax-0x36893c41]
  41b1bc:	lea    esp,[edi+0x54]
  41b1bf:	cwde   
  41b1c0:	and    esp,DWORD PTR [ecx+0x65]
  41b1c3:	jp     0x41b199
  41b1c5:	mov    sp,0x7683
  41b1c9:	cmp    edi,DWORD PTR [edi+0x1b]
  41b1cc:	pop    edx
  41b1cd:	aam    0x6a
  41b1cf:	add    DWORD PTR [esp+ebx*8+0x22],ebx
  41b1d3:	loop   0x41b1c6
  41b1d5:	pop    ds
  41b1d6:	sbb    BYTE PTR [esi+eax*1],0xaa
  41b1da:	cmp    BYTE PTR cs:[edx+0x68],cl
  41b1de:	push   es
  41b1df:	out    dx,eax
  41b1e0:	dec    esp
  41b1e1:	pushf  
  41b1e2:	sar    DWORD PTR ds:0xcfb2ec5b,1
  41b1e8:	neg    DWORD PTR [edi+0x2c]
  41b1eb:	add    DWORD PTR [eax-0xaf67742],ebx
  41b1f1:	rcr    DWORD PTR [eax],1
  41b1f3:	dec    edx
  41b1f4:	pop    es
  41b1f5:	add    BYTE PTR [eax+0x424dc3aa],dl
  41b1fb:	jmp    0x5e805fe2
  41b200:	xchg   BYTE PTR cs:0x4eef493e,bh
  41b207:	loop   0x41b1a5
  41b209:	dec    edx
  41b20a:	adc    al,0x75
  41b20c:	mov    cl,0xd9
  41b20e:	xor    BYTE PTR [esi],dh
  41b210:	cwde   
  41b211:	pop    esi
  41b212:	fistp  QWORD PTR ds:0xa18e4b79
  41b218:	rcr    BYTE PTR [ecx],1
  41b21a:	sbb    eax,0x7f3000fe
  41b21f:	adc    eax,0x114741e6
  41b224:	stos   BYTE PTR es:[edi],al
  41b225:	fwait
  41b226:	adc    al,0x5b
  41b228:	aad    0x94
  41b22a:	data16 xor al,0x10
  41b22d:	sbb    ch,ah
  41b22f:	pop    edi
  41b230:	pop    ds
  41b231:	loop   0x41b21c
  41b233:	sti    
  41b234:	imul   BYTE PTR [eax+esi*2]
  41b237:	add    al,0x8e
  41b239:	into   
  41b23a:	pop    esi
  41b23b:	mov    edx,0x83fc7f20
  41b240:	adc    bl,BYTE PTR [edi-0x21]
  41b243:	mov    ds:0x5f82b945,al
  41b248:	adc    DWORD PTR [edi-0x341f2464],0x1c3d0a29
  41b252:	pop    esp
  41b253:	dec    eax
  41b254:	pop    esp
  41b255:	pop    ss
  41b256:	mov    BYTE PTR [edi-0x516add56],ch
  41b25c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b25d:	mov    ds:0xfc4384d8,eax
  41b263:	mov    cl,BYTE PTR [edi+0x70]
  41b266:	addr16 repnz inc esp
  41b269:	sbb    eax,0xdffcc18f
  41b26e:	adc    eax,ecx
  41b270:	sub    bl,BYTE PTR [esi-0x3c]
  41b273:	je     0x41b2be
  41b275:	fld    DWORD PTR [eax+0x67]
  41b278:	(bad)  
  41b279:	jge    0x41b2ed
  41b27b:	gs (bad) 
  41b27d:	jl     0x41b2c7
  41b27f:	sahf   
  41b280:	gs xor cl,BYTE PTR gs:[ebp-0x22]
  41b285:	icebp  
  41b286:	or     ebp,ebp
  41b288:	gs xchg edi,eax
  41b28a:	mov    ah,bl
  41b28c:	jo     0x41b277
  41b28e:	jle    0x41b22c
  41b290:	clc    
  41b291:	shl    BYTE PTR [esi-0x4f],0xd3
  41b295:	into   
  41b296:	inc    ebx
  41b297:	data16 jns 0x41b2ed
  41b29a:	lods   al,BYTE PTR ds:[esi]
  41b29b:	stc    
  41b29c:	inc    esi
  41b29d:	jb     0x41b288
  41b29f:	or     DWORD PTR [esi],esp
  41b2a1:	xor    DWORD PTR [ebx+eiz*2],eax
  41b2a4:	inc    ecx
  41b2a5:	cmp    dl,BYTE PTR [ecx+ebp*4-0x73]
  41b2a9:	outs   dx,BYTE PTR ds:[esi]
  41b2aa:	(bad)  
  41b2ab:	shr    ecx,0x97
  41b2ae:	ret    
  41b2af:	sub    eax,ecx
  41b2b1:	out    dx,al
  41b2b2:	xor    bh,dh
  41b2b4:	and    ecx,DWORD PTR [ebx-0x2c]
  41b2b7:	mov    edx,ss
  41b2b9:	shl    BYTE PTR [ecx],0x93
  41b2bc:	xor    eax,0x5dda165f
  41b2c1:	dec    eax
  41b2c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2c3:	nop
  41b2c4:	xchg   ebx,eax
  41b2c5:	dec    ebp
  41b2c6:	mov    bh,BYTE PTR [ecx]
  41b2c8:	ror    BYTE PTR [edx-0x6b123876],0x5c
  41b2cf:	or     eax,0x22a84329
  41b2d4:	retf   
  41b2d5:	gs int3 
  41b2d7:	jl     0x41b33e
  41b2d9:	xchg   ecx,esi
  41b2db:	mov    ah,0xa2
  41b2dd:	pop    es
  41b2de:	jl     0x41b35c
  41b2e0:	xor    BYTE PTR [edx-0x38],al
  41b2e3:	pop    ebx
  41b2e4:	into   
  41b2e5:	push   edx
  41b2e6:	cmp    edi,DWORD PTR [ebx+0x7a3284a5]
  41b2ec:	or     edi,DWORD PTR [edi+0x556807a8]
  41b2f2:	xchg   edx,eax
  41b2f3:	mov    bl,0x24
  41b2f5:	pop    es
  41b2f6:	jle    0x41b2f6
  41b2f8:	push   edx
  41b2f9:	loop   0x41b2ce
  41b2fb:	shl    BYTE PTR [edx+0x6ea0084d],0x41
  41b302:	sar    BYTE PTR [ebp+0x75],cl
  41b305:	jmp    0x9c08bce9
  41b30a:	sub    BYTE PTR [eax-0x3c38de26],ch
  41b310:	fincstp 
  41b312:	fild   DWORD PTR [edx-0x6f]
  41b315:	imul   eax,DWORD PTR [edx],0x735fc9e2
  41b31b:	mov    ecx,0x9ba9aa4
  41b320:	add    edi,DWORD PTR [esi+edi*2-0x4d]
  41b324:	inc    edi
  41b325:	and    al,0x68
  41b327:	jb     0x41b30b
  41b329:	pop    ss
  41b32a:	mov    esp,0xb49c63e8
  41b32f:	dec    ebp
  41b330:	test   eax,0x34fac355
  41b335:	loop   0x41b2e5
  41b337:	mov    edx,0x1a934359
  41b33c:	mov    edx,?
  41b33e:	push   ebx
  41b33f:	in     al,dx
  41b340:	or     dl,BYTE PTR [esi]
  41b342:	lods   eax,DWORD PTR ds:[esi]
  41b343:	aad    0xf6
  41b345:	mov    BYTE PTR [edi],cl
  41b347:	adc    ecx,DWORD PTR [esi-0x61]
  41b34a:	inc    ebp
  41b34b:	sub    BYTE PTR [ebx-0x443729b6],al
  41b351:	push   cs
  41b352:	les    ebx,FWORD PTR [ebp-0x5c]
  41b355:	sub    BYTE PTR [edx-0x44],ah
  41b358:	rol    eax,1
  41b35a:	test   al,0x7c
  41b35c:	ror    DWORD PTR ds:0x2c8ab5e4,0x99
  41b363:	jnp    0x41b389
  41b365:	test   DWORD PTR [ebp+0x46b90a11],edi
  41b36b:	xchg   BYTE PTR [edx+0x77],ah
  41b36e:	lock push es
  41b370:	ret    
  41b371:	and    BYTE PTR [edx-0x765ed698],bl
  41b377:	jnp    0x41b3f5
  41b379:	mov    ds:0xbbc78b6e,eax
  41b37e:	shl    ah,0x7d
  41b381:	cs xor dh,dl
  41b384:	mov    ds:0x6fba94cc,al
  41b389:	icebp  
  41b38a:	popa   
  41b38b:	fucom  st(2)
  41b38d:	sub    al,0xd8
  41b38f:	lods   eax,DWORD PTR ds:[esi]
  41b390:	sahf   
  41b391:	push   eax
  41b392:	jne    0x41b326
  41b394:	pusha  
  41b395:	dec    esp
  41b396:	ret    0x2dca
  41b399:	push   0xbfca9f9e
  41b39e:	fcom   st(0)
  41b3a0:	stc    
  41b3a1:	mov    cl,0xd1
  41b3a3:	mov    BYTE PTR [ebx+0x6d7b7ec],0x97
  41b3aa:	inc    esp
  41b3ab:	sbb    BYTE PTR [ecx],dl
  41b3ad:	and    DWORD PTR [ecx+0x4a1cbf8b],edx
  41b3b3:	and    eax,0x32c148
  41b3b8:	mov    DWORD PTR [ecx-0x6ca711e0],ebp
  41b3be:	sar    dh,0x1
  41b3c1:	pop    es
  41b3c2:	fstp   TBYTE PTR [eax-0xb]
  41b3c5:	fwait
  41b3c6:	popa   
  41b3c7:	(bad)  
  41b3c8:	pop    ds
  41b3c9:	mov    DWORD PTR [esi+0x7273906b],eax
  41b3cf:	popf   
  41b3d0:	cli    
  41b3d1:	add    ah,ch
  41b3d3:	mov    ecx,0x477de751
  41b3d8:	adc    BYTE PTR [eax-0x30dd5a10],ah
  41b3de:	ins    BYTE PTR es:[edi],dx
  41b3df:	ret    0x1f12
  41b3e2:	out    0x8e,eax
  41b3e4:	in     al,0xc3
  41b3e6:	mov    dl,0x42
  41b3e8:	call   0x295b04be
  41b3ed:	or     DWORD PTR ds:0x1c71ffdb,esp
  41b3f3:	imul   bl
  41b3f5:	std    
  41b3f6:	add    edx,DWORD PTR [esi]
  41b3f8:	in     eax,0xbb
  41b3fa:	mov    cl,0xbc
  41b3fc:	sti    
  41b3fd:	mov    ds:0x26a3803,al
  41b402:	loop   0x41b416
  41b404:	inc    ecx
  41b405:	pop    eax
  41b406:	dec    ebp
  41b407:	push   ecx
  41b408:	cmp    al,0x57
  41b40a:	fs data16 jl 0x41b469
  41b40e:	stos   BYTE PTR es:[edi],al
  41b40f:	bound  eax,QWORD PTR [eax-0x5eb43ce]
  41b415:	stc    
  41b416:	mov    ebx,0x80c92d1a
  41b41b:	jmp    0x41b41c
  41b41d:	push   edx
  41b41e:	or     DWORD PTR [esi+0x6e],ecx
  41b421:	out    dx,al
  41b422:	jmp    0xad30:0x7dfbf2bd
  41b429:	adc    BYTE PTR [edx+edi*2+0x3ccbf63e],0x31
  41b431:	mov    eax,ds:0x1b7bcdef
  41b436:	out    0xc3,eax
  41b438:	dec    esp
  41b439:	nop
  41b43a:	xor    BYTE PTR ds:0x7845626,cl
  41b441:	adc    edx,edx
  41b443:	push   ds
  41b444:	lds    ecx,FWORD PTR [esp+edx*2-0x15]
  41b448:	cmp    al,0xaa
  41b44a:	arpl   ax,bx
  41b44c:	sub    BYTE PTR [eax+0x72],al
  41b44f:	mov    ebx,gs
  41b451:	cmc    
  41b452:	test   al,0x7e
  41b454:	jae    0x41b425
  41b456:	scas   al,BYTE PTR es:[edi]
  41b457:	arpl   WORD PTR [eax+0x13f526d5],bp
  41b45d:	test   eax,0x929985ad
  41b462:	xchg   ebx,eax
  41b463:	pop    ss
  41b464:	lock sub eax,0x1f07aa0d
  41b46a:	retf   
  41b46b:	xor    DWORD PTR [edi+0x2b],esp
  41b46e:	je     0x41b3fa
  41b470:	mov    ecx,ebx
  41b472:	add    bh,BYTE PTR [ecx+0x41d0526]
  41b478:	mov    ah,0x3d
  41b47a:	fcmovu st,st(1)
  41b47c:	pop    ds
  41b47d:	jp     0x41b485
  41b47f:	ins    BYTE PTR es:[edi],dx
  41b480:	out    0xa6,al
  41b482:	(bad)  
  41b483:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b484:	add    ebx,DWORD PTR [edx]
  41b486:	test   eax,0xfd166465
  41b48b:	xor    BYTE PTR [esi],ah
  41b48d:	push   ebx
  41b48e:	push   0xffffffd6
  41b490:	ss rol edi,cl
  41b493:	lods   al,BYTE PTR ds:[esi]
  41b494:	lods   al,BYTE PTR ds:[esi]
  41b495:	xchg   DWORD PTR [edx-0x76],edi
  41b498:	nop
  41b499:	lock cmps WORD PTR ds:[esi],WORD PTR es:[edi]
  41b49c:	dec    ebx
  41b49d:	mov    dh,0xb9
  41b49f:	push   ebp
  41b4a0:	sbb    edi,DWORD PTR [edi-0xa]
  41b4a3:	jg     0x41b42e
  41b4a5:	scas   eax,DWORD PTR es:[edi]
  41b4a6:	addr16 cmp esi,ecx
  41b4a9:	sub    al,ch
  41b4ab:	je     0x41b465
  41b4ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4ae:	jle    0x41b49d
  41b4b0:	mov    ah,0x7a
  41b4b2:	out    dx,eax
  41b4b3:	and    DWORD PTR [ebx+esi*1],0x34
  41b4b7:	dec    edi
  41b4b8:	call   DWORD PTR [esi]
  41b4ba:	aaa    
  41b4bb:	push   ds
  41b4bc:	dec    ecx
  41b4bd:	xor    dl,ah
  41b4bf:	lock jp 0x41b4e5
  41b4c2:	jb     0x41b50a
  41b4c4:	cmp    BYTE PTR [ebx],al
  41b4c6:	loop   0x41b4d1
  41b4c8:	or     BYTE PTR [eax-0x5c],0x75
  41b4cc:	cmp    eax,0xe51d4
  41b4d1:	sub    eax,0xef922098
  41b4d6:	push   es
  41b4d7:	xor    eax,0xa3d544e7
  41b4dc:	retf   0x9486
  41b4df:	push   eax
  41b4e0:	dec    ebp
  41b4e1:	fcomip st,st(5)
  41b4e3:	test   DWORD PTR [ebp-0x28],edx
  41b4e6:	aam    0x9b
  41b4e8:	scas   al,BYTE PTR es:[edi]
  41b4e9:	jno    0x41b55b
  41b4eb:	mov    WORD PTR [edx],es
  41b4ed:	stos   DWORD PTR es:[edi],eax
  41b4ee:	cwde   
  41b4ef:	ds push ss
  41b4f1:	jecxz  0x41b534
  41b4f3:	fnsave [esi+0x61]
  41b4f6:	xor    bl,al
  41b4f8:	inc    edx
  41b4f9:	dec    eax
  41b4fa:	das    
  41b4fb:	sbb    DWORD PTR [edx],0x8b13af10
  41b501:	(bad)  
  41b502:	std    
  41b503:	leave  
  41b504:	in     eax,dx
  41b505:	pop    edi
  41b506:	cmp    al,0x32
  41b508:	test   eax,0xbdd8479b
  41b50d:	xchg   ebx,eax
  41b50e:	mov    ebp,0x2ebdf0ee
  41b513:	mov    bh,0x6c
  41b515:	inc    ebx
  41b516:	jns    0x41b564
  41b518:	bound  edx,QWORD PTR [ecx-0x66]
  41b51b:	adc    ebp,DWORD PTR es:[bp+si-0x50]
  41b520:	enter  0x7b83,0x9a
  41b524:	enter  0x3313,0x5b
  41b528:	xor    esp,DWORD PTR [esi]
  41b52a:	leave  
  41b52b:	jg     0x41b539
  41b52d:	pushf  
  41b52e:	aad    0x26
  41b530:	mov    bl,0x19
  41b532:	pop    esi
  41b533:	jge    0x41b4f0
  41b535:	push   cs
  41b536:	repz xchg ecx,eax
  41b538:	and    BYTE PTR [ebx+edi*4],0xeb
  41b53c:	test   BYTE PTR [edi],dh
  41b53e:	push   es
  41b53f:	(bad)  
  41b540:	out    dx,eax
  41b541:	stos   BYTE PTR es:[edi],al
  41b542:	mul    DWORD PTR [esp+ebx*1-0x2c8c3352]
  41b549:	mov    WORD PTR [ebx+0x70],fs
  41b54c:	dec    ebp
  41b54d:	jo     0x41b4df
  41b54f:	push   0x7a
  41b551:	cld    
  41b552:	cwde   
  41b553:	mov    ebp,0x7fb9ade0
  41b559:	je     0x41b4fa
  41b55b:	test   DWORD PTR [ecx],ecx
  41b55d:	data16 sbb bl,BYTE PTR [edx-0x5d087e88]
  41b564:	xchg   edi,eax
  41b565:	retf   
  41b566:	cmp    eax,esi
  41b568:	add    al,0x55
  41b56a:	xor    dl,BYTE PTR [edx+edi*8-0x34]
  41b56e:	std    
  41b56f:	mov    edx,0xaace19ea
  41b574:	mov    ebx,0x4127e9c6
  41b579:	adc    al,0xfb
  41b57b:	mov    cl,0x77
  41b57d:	pusha  
  41b57e:	mov    bh,bh
  41b580:	push   0x36
  41b582:	lds    ecx,FWORD PTR [ecx]
  41b584:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b585:	(bad)  
  41b587:	loop   0x41b5c9
  41b589:	inc    edi
  41b58a:	xchg   esp,eax
  41b58b:	std    
  41b58c:	mov    ah,0xb5
  41b58e:	mov    BYTE PTR [edi+0x22f6ea53],ah
  41b594:	pop    ecx
  41b595:	xchg   edi,eax
  41b596:	les    edx,FWORD PTR [ebx]
  41b598:	cmp    eax,0x2778babe
  41b59d:	das    
  41b59e:	repnz (bad) [edx+0x1f]
  41b5a2:	imul   ebp,DWORD PTR [ebp+0x50],0x36efe2b2
  41b5a9:	jp     0x41b565
  41b5ab:	adc    dh,dh
  41b5ad:	cli    
  41b5ae:	(bad)  
  41b5af:	hlt    
  41b5b0:	mov    esp,0x7a731824
  41b5b5:	mov    ds:0x24347af7,al
  41b5ba:	push   0xe5b11dc0
  41b5bf:	or     BYTE PTR [ecx],0xbc
  41b5c2:	mov    bh,0x7b
  41b5c4:	xchg   DWORD PTR [edi-0x3f300ac9],ebx
  41b5ca:	dec    eax
  41b5cb:	mov    DWORD PTR [eax],esp
  41b5cd:	dec    esp
  41b5ce:	stc    
  41b5cf:	(bad)  
  41b5d0:	jae    0x41b55b
  41b5d2:	and    BYTE PTR [eax+ebx*2],0xaf
  41b5d6:	mov    al,ds:0x81bb0995
  41b5db:	fistp  QWORD PTR [esi+0x3a]
  41b5de:	loopne 0x41b598
  41b5e0:	jmp    0x8df4d8c9
  41b5e5:	push   0x6ef6380
  41b5ea:	pop    ss
  41b5eb:	mov    dl,0x19
  41b5ed:	mov    esi,0x122ff6f2
  41b5f2:	jbe    0x41b591
  41b5f4:	jnp    0x41b629
  41b5f6:	mov    ch,0x4b
  41b5f8:	mov    ds:0xe3738fe2,eax
  41b5fd:	sbb    DWORD PTR [edi+0x33],eax
  41b600:	fs pop edx
  41b602:	sub    DWORD PTR [ecx+0x6ce1b4cb],0xffffffc3
  41b609:	jno    0x41b5eb
  41b60b:	iret   
  41b60c:	push   es
  41b60d:	sbb    ch,dh
  41b60f:	jne    0x41b5a9
  41b611:	pop    es
  41b612:	add    al,0x30
  41b614:	(bad)  
  41b615:	inc    esi
  41b616:	jmp    DWORD PTR [ecx]
  41b618:	sub    BYTE PTR [edx],al
  41b61a:	adc    BYTE PTR [edx],bl
  41b61c:	sti    
  41b61d:	sbb    cl,BYTE PTR [esi-0xb1896a0]
  41b623:	push   edi
  41b624:	in     eax,0x9e
  41b626:	inc    ebx
  41b627:	xchg   esp,eax
  41b628:	jmp    0x378e:0xd665d216
  41b62f:	aam    0xbd
  41b631:	shr    DWORD PTR [eax-0x61be8560],1
  41b637:	outs   dx,DWORD PTR ds:[esi]
  41b638:	or     BYTE PTR [edi+0x143abfc3],0x12
  41b63f:	xor    bl,BYTE PTR [ebx+0x558b03dc]
  41b645:	mov    al,0x81
  41b647:	ror    ebp,0xeb
  41b64a:	inc    edx
  41b64b:	add    dh,BYTE PTR [ebx]
  41b64d:	retf   0x4d89
  41b650:	mov    al,0x8b
  41b652:	dec    ebp
  41b653:	or     BYTE PTR [ebx-0x30fc4bab],cl
  41b659:	and    ecx,edx
  41b65b:	mov    DWORD PTR [ebp-0x4c],ecx
  41b65e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b661:	mov    edx,DWORD PTR [ebp-0x48]
  41b664:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b66b:	mov    DWORD PTR [ebp-0x48],ecx
  41b66e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b671:	mov    edx,0xfa5e1528
  41b676:	sub    edx,ecx
  41b678:	add    edx,DWORD PTR [ebp-0x44]
  41b67b:	mov    DWORD PTR [ebp-0x44],edx
  41b67e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b681:	xor    ecx,eax
  41b683:	add    ecx,esi
  41b685:	jne    0x414b6f
  41b68b:	mov    ecx,DWORD PTR [ebp-0x8]
  41b68e:	xor    ecx,eax
  41b690:	mov    eax,DWORD PTR [ebp+0x10]
  41b693:	add    ecx,esi
  41b695:	mov    DWORD PTR [eax],ecx
  41b697:	pop    edi
  41b698:	pop    esi
  41b699:	pop    ebx
  41b69a:	leave  
  41b69b:	ret    0xc
  41b69e:	push   ebp
  41b69f:	mov    ebp,esp
  41b6a1:	sub    esp,0x78
  41b6a4:	not    DWORD PTR ds:0x4291f7
  41b6aa:	push   esi
  41b6ab:	sub    eax,ecx
  41b6ad:	push   edi
  41b6ae:	sub    eax,esi
  41b6b0:	mov    eax,ds:0x42830b
  41b6b5:	mov    DWORD PTR [ebp-0x24],eax
  41b6b8:	mov    eax,ds:0x42842b
  41b6bd:	inc    ecx
  41b6be:	mov    DWORD PTR [ebp-0x30],eax
  41b6c1:	or     DWORD PTR ds:0x42919f,edi
  41b6c7:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  41b6ce:	movzx  edi,BYTE PTR ds:0x42918f
  41b6d5:	adc    DWORD PTR ds:0x42914b,edi
  41b6db:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  41b6e2:	adc    DWORD PTR ds:0x42918f,edx
  41b6e8:	mov    eax,DWORD PTR [ebp-0x10]
  41b6eb:	add    DWORD PTR ds:0x4291f3,ecx
  41b6f1:	mov    ecx,DWORD PTR [ebp-0x10]
  41b6f4:	adc    DWORD PTR ds:0x42915f,0x287e
  41b6fe:	sub    eax,ecx
  41b700:	adc    esi,esi
  41b702:	mov    DWORD PTR [ebp-0x10],eax
  41b705:	xor    DWORD PTR [ebp-0x10],0xf89cb5a1
  41b70c:	xor    DWORD PTR ds:0x4291ab,0x51ed
  41b716:	mov    eax,DWORD PTR [ebp-0x18]
  41b719:	and    DWORD PTR ds:0x4291a3,0x0
  41b723:	mov    edi,DWORD PTR ds:0x4291a3
  41b729:	inc    edi
  41b72a:	mov    DWORD PTR ds:0x4291a3,edi
  41b730:	cmp    DWORD PTR ds:0x4291a3,0x1b
  41b737:	jle    0x41b760
  41b73d:	jmp    0x41b753
  41b742:	push   0x4280d6
  41b747:	push   DWORD PTR [ebp-0x18]
  41b74a:	push   DWORD PTR [ebp-0x14]
  41b74d:	call   DWORD PTR ds:0x42a54f
  41b753:	cmp    DWORD PTR ds:0x4291a3,0x12
  41b75a:	jb     0x41b723
  41b760:	mov    ecx,DWORD PTR [ebp-0x18]
  41b763:	sub    eax,ecx
  41b765:	mov    DWORD PTR [ebp-0x18],eax
  41b768:	or     DWORD PTR [ebp-0x18],0xf89f05a1
  41b76f:	mov    eax,DWORD PTR [ebp-0xc]
  41b772:	and    DWORD PTR ds:0x42919f,0x1b88
  41b77c:	mov    ecx,DWORD PTR [ebp-0xc]
  41b77f:	sub    eax,ecx
  41b781:	and    DWORD PTR ds:0x429173,0x0
  41b78b:	mov    ecx,DWORD PTR ds:0x429173
  41b791:	inc    ecx
  41b792:	mov    DWORD PTR ds:0x429173,ecx
  41b798:	cmp    DWORD PTR ds:0x429173,0x1b
  41b79f:	jg     0x41b7c2
  41b7a5:	jmp    0x41b7b5
  41b7aa:	push   0x3a78
  41b7af:	call   DWORD PTR ds:0x42a553
  41b7b5:	cmp    DWORD PTR ds:0x429173,0x15
  41b7bc:	jb     0x41b78b
  41b7c2:	mov    DWORD PTR [ebp-0xc],eax
  41b7c5:	xor    DWORD PTR ds:0x4291a7,0x3902
  41b7cf:	or     DWORD PTR [ebp-0xc],0xf89c85e1
  41b7d6:	mov    eax,DWORD PTR [ebp-0x1c]
  41b7d9:	and    DWORD PTR ds:0x4291f7,0x5581
  41b7e3:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b7e6:	and    DWORD PTR ds:0x42914b,0x0
  41b7f0:	mov    esi,DWORD PTR ds:0x42914b
  41b7f6:	inc    esi
  41b7f7:	mov    DWORD PTR ds:0x42914b,esi
  41b7fd:	cmp    DWORD PTR ds:0x42914b,0xc
  41b804:	jg     0x41b848
  41b80a:	jmp    0x41b821
  41b80f:	push   0x428010
  41b814:	push   0x0
  41b816:	push   0x6059
  41b81b:	call   DWORD PTR ds:0x42a557
  41b821:	cmp    DWORD PTR ds:0x42914b,0xb
  41b828:	jne    0x41b83b
  41b82e:	mov    esi,DWORD PTR ds:0x42914b
  41b834:	inc    esi
  41b835:	mov    DWORD PTR ds:0x42914b,esi
  41b83b:	cmp    DWORD PTR ds:0x42914b,0x13
  41b842:	jb     0x41b7f0
  41b848:	sub    eax,ecx
  41b84a:	mov    DWORD PTR ds:0x4291e7,0x17
  41b854:	cmp    DWORD PTR ds:0x4291e7,0x0
  41b85b:	je     0x41b88b
  41b861:	cmp    DWORD PTR ds:0x4291e7,0x22
  41b868:	jbe    0x41b88b
  41b86e:	jmp    0x41b879
  41b873:	call   DWORD PTR ds:0x42a55b
  41b879:	mov    edi,DWORD PTR ds:0x4291e7
  41b87f:	dec    edi
  41b880:	mov    DWORD PTR ds:0x4291e7,edi
  41b886:	jmp    0x41b854
  41b88b:	mov    DWORD PTR [ebp-0x1c],eax
  41b88e:	or     DWORD PTR [ebp-0x1c],0xf89c8581
  41b895:	add    eax,eax
  41b897:	mov    eax,DWORD PTR [ebp-0x20]
  41b89a:	mov    ecx,DWORD PTR [ebp-0x20]
  41b89d:	sub    eax,ecx
  41b89f:	and    DWORD PTR ds:0x4291b3,0x0
  41b8a9:	jmp    0x41b8bb
  41b8ae:	mov    esi,DWORD PTR ds:0x4291b3
  41b8b4:	inc    esi
  41b8b5:	mov    DWORD PTR ds:0x4291b3,esi
  41b8bb:	cmp    DWORD PTR ds:0x4291b3,0x1e
  41b8c2:	jae    0x41b8ef
  41b8c8:	cmp    DWORD PTR ds:0x4291b3,0x28
  41b8cf:	jle    0x41b8ef
  41b8d5:	jmp    0x41b8ea
  41b8da:	push   0x4291c7
  41b8df:	push   0x428047
  41b8e4:	call   DWORD PTR ds:0x42a55f
  41b8ea:	jmp    0x41b8ae
  41b8ef:	mov    DWORD PTR [ebp-0x20],eax
  41b8f2:	mov    eax,DWORD PTR [ebp-0x2c]
  41b8f5:	mov    ecx,DWORD PTR [ebp-0x20]
  41b8f8:	neg    edi
  41b8fa:	mov    esi,0x75108ac
  41b8ff:	xor    eax,esi
  41b901:	mov    edi,0x3272f3
  41b906:	add    eax,edi
  41b908:	or     eax,ecx
  41b90a:	mov    DWORD PTR [ebp-0x20],eax
  41b90d:	mov    eax,DWORD PTR [ebp-0x4]
  41b910:	mov    ecx,DWORD PTR [ebp-0x4]
  41b913:	sub    eax,ecx
  41b915:	mov    DWORD PTR [ebp-0x4],eax
  41b918:	or     DWORD PTR [ebp-0x4],0xf89c85be
  41b91f:	mov    eax,DWORD PTR [ebp-0xc]
  41b922:	xor    eax,esi
  41b924:	add    eax,edi
  41b926:	push   eax
  41b927:	mov    eax,DWORD PTR [ebp-0x10]
  41b92a:	xor    eax,esi
  41b92c:	add    eax,edi
  41b92e:	push   eax
  41b92f:	mov    eax,DWORD PTR [ebp-0x4]
  41b932:	xor    eax,esi
  41b934:	add    eax,edi
  41b936:	push   eax
  41b937:	lea    eax,[ebp-0x78]
  41b93a:	push   eax
  41b93b:	push   DWORD PTR [ebp-0x2c]
  41b93e:	push   DWORD PTR [ebp-0x28]
  41b941:	call   0x411b80
  41b946:	test   eax,eax
  41b948:	je     0x41b976
  41b94e:	lea    eax,[ebp-0x78]
  41b951:	push   eax
  41b952:	mov    eax,DWORD PTR [ebp-0x28]
  41b955:	xor    eax,esi
  41b957:	add    eax,edi
  41b959:	push   eax
  41b95a:	mov    eax,DWORD PTR [ebp-0x24]
  41b95d:	add    eax,0xaa
  41b962:	push   eax
  41b963:	mov    eax,DWORD PTR [ebp-0x24]
  41b966:	mov    eax,DWORD PTR [eax+0x198]
  41b96c:	push   DWORD PTR [eax]
  41b96e:	call   0x4085e5
  41b973:	mov    DWORD PTR [ebp-0x14],eax
  41b976:	mov    ecx,DWORD PTR ds:0x428403
  41b97c:	lea    eax,[ebp+0x4]
  41b97f:	mov    DWORD PTR [ecx*4+0x4283fb],eax
  41b986:	inc    DWORD PTR ds:0x428403
  41b98c:	mov    eax,DWORD PTR [ebp-0x14]
  41b98f:	test   eax,eax
  41b991:	je     0x41b9f9
  41b997:	lea    eax,[ebp-0x8]
  41b99a:	mov    DWORD PTR [ebp-0x34],eax
  41b99d:	mov    eax,DWORD PTR [ebp-0x30]
  41b9a0:	mov    DWORD PTR [ebp-0x8],eax
  41b9a3:	mov    eax,DWORD PTR [ebp-0x8]
  41b9a6:	mov    ecx,DWORD PTR [ebp-0x14]
  41b9a9:	sub    eax,ecx
  41b9ab:	mov    DWORD PTR [ebp-0x8],eax
  41b9ae:	mov    ecx,DWORD PTR [ebp-0x4]
  41b9b1:	xor    ecx,esi
  41b9b3:	mov    eax,0xffcd8d0d
  41b9b8:	sub    eax,ecx
  41b9ba:	add    DWORD PTR [ebp-0x8],eax
  41b9bd:	mov    eax,DWORD PTR [ebp-0x8]
  41b9c0:	mov    ecx,DWORD PTR [ebp-0x14]
  41b9c3:	mov    DWORD PTR [ecx+0x1],eax
  41b9c6:	mov    eax,DWORD PTR [ebp-0x14]
  41b9c9:	push   DWORD PTR [ebp-0x24]
  41b9cc:	mov    BYTE PTR [eax],0xe9
  41b9cf:	mov    eax,ds:0x428187
  41b9d4:	push   DWORD PTR [eax]
  41b9d6:	push   DWORD PTR ds:0x4283eb
  41b9dc:	push   DWORD PTR ds:0x42818f
  41b9e2:	push   DWORD PTR ds:0x4283cb
  41b9e8:	push   DWORD PTR ds:0x428f4f
  41b9ee:	push   DWORD PTR [ebp-0x28]
  41b9f1:	push   DWORD PTR [ebp-0x2c]
  41b9f4:	mov    eax,DWORD PTR [ebp-0x14]
  41b9f7:	call   eax
  41b9f9:	pop    edi
  41b9fa:	pop    esi
  41b9fb:	leave  
  41b9fc:	ret    
  41b9fd:	push   ebp
  41b9fe:	mov    ebp,esp
  41ba00:	sub    esp,0x1c
  41ba03:	adc    DWORD PTR ds:0x4291bf,0x12a2
  41ba0d:	mov    DWORD PTR [ebp-0x10],0xf89f85a1
  41ba14:	sub    DWORD PTR ds:0x4291b3,0x1e28
  41ba1e:	lea    eax,[ebp+0x14]
  41ba21:	movzx  edx,BYTE PTR ds:0x4291c7
  41ba28:	sbb    edx,DWORD PTR ds:0x4291ef
  41ba2e:	mov    DWORD PTR ds:0x4291c7,edx
  41ba34:	mov    DWORD PTR [ebp-0x4],eax
  41ba37:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  41ba3e:	and    DWORD PTR ds:0x4291a3,0x0
  41ba48:	jmp    0x41ba5a
  41ba4d:	mov    edx,DWORD PTR ds:0x4291a3
  41ba53:	inc    edx
  41ba54:	mov    DWORD PTR ds:0x4291a3,edx
  41ba5a:	cmp    DWORD PTR ds:0x4291a3,0x1c
  41ba61:	jae    0x41ba87
  41ba67:	cmp    DWORD PTR ds:0x4291a3,0x2a
  41ba6e:	jb     0x41ba87
  41ba74:	jmp    0x41ba82
  41ba79:	push   DWORD PTR [ebp-0x10]
  41ba7c:	call   DWORD PTR ds:0x42a563
  41ba82:	jmp    0x41ba4d
  41ba87:	lea    eax,[ebp-0xc]
  41ba8a:	add    DWORD PTR ds:0x4291d7,ecx
  41ba90:	mov    DWORD PTR [ebp-0x14],eax
  41ba93:	xor    ecx,eax
  41ba95:	mov    eax,DWORD PTR [ebp-0xc]
  41ba98:	mov    ecx,DWORD PTR ds:0x42921f
  41ba9e:	mov    edx,DWORD PTR ds:0x42980b
  41baa4:	sub    edx,ecx
  41baa6:	xor    ecx,DWORD PTR [ecx+edx*1]
  41baa9:	mov    edx,DWORD PTR [ebp-0x14]
  41baac:	adc    ecx,0x3c0d
  41bab2:	mov    ecx,0x75108ac
  41bab7:	adc    DWORD PTR ds:0x4291eb,0xbc
  41bac1:	xor    eax,ecx
  41bac3:	or     DWORD PTR ds:0x4291eb,0x4291d3
  41bacd:	add    eax,0x3272f3
  41bad2:	xor    DWORD PTR ds:0x4291db,0x429193
  41badc:	mov    DWORD PTR [edx],eax
  41bade:	and    DWORD PTR ds:0x429157,0x0
  41bae8:	xor    edx,edx
  41baea:	add    edx,DWORD PTR ds:0x429157
  41baf0:	inc    edx
  41baf1:	mov    DWORD PTR ds:0x429157,edx
  41baf7:	cmp    DWORD PTR ds:0x429157,0x2c
  41bafe:	jge    0x41bb29
  41bb04:	jmp    0x41bb1c
  41bb09:	push   0x4291c7
  41bb0e:	push   0x4291db
  41bb13:	push   DWORD PTR [ebp-0x20]
  41bb16:	call   DWORD PTR ds:0x42a56b
  41bb1c:	cmp    DWORD PTR ds:0x429157,0x1d
  41bb23:	jb     0x41bae8
  41bb29:	mov    eax,ds:0x428183
  41bb2e:	mov    edx,DWORD PTR [ebp-0x4]
  41bb31:	mov    eax,DWORD PTR [eax]
  41bb33:	add    eax,DWORD PTR [edx]
  41bb35:	mov    DWORD PTR ds:0x4291e7,0x17
  41bb3f:	cmp    DWORD PTR ds:0x4291e7,0x0
  41bb46:	je     0x41bb7d
  41bb4c:	cmp    DWORD PTR ds:0x4291e7,0x22
  41bb53:	ja     0x41bb7d
  41bb59:	jmp    0x41bb69
  41bb5e:	push   0x40e7
  41bb63:	call   DWORD PTR ds:0x42a533
  41bb69:	xor    edx,edx
  41bb6b:	or     edx,DWORD PTR ds:0x4291e7
  41bb71:	dec    edx
  41bb72:	mov    DWORD PTR ds:0x4291e7,edx
  41bb78:	jmp    0x41bb3f
  41bb7d:	push   esi
  41bb7e:	sub    edx,0x5425
  41bb84:	mov    DWORD PTR [ebp-0x8],eax
  41bb87:	mov    edx,DWORD PTR [ebp+0x8]
  41bb8a:	mov    eax,ds:0x42830b
  41bb8f:	mov    esi,DWORD PTR ds:0x429b2f
  41bb95:	mov    esi,DWORD PTR [esi]
  41bb97:	adc    DWORD PTR ds:0x42919f,esi
  41bb9d:	mov    eax,DWORD PTR [eax+0x198]
  41bba3:	xor    edx,ecx
  41bba5:	and    DWORD PTR ds:0x4291cf,ecx
  41bbab:	mov    esi,0x3272f3
  41bbb0:	add    edx,esi
  41bbb2:	mov    DWORD PTR ds:0x4291c7,0x7ba3
  41bbbc:	cmp    DWORD PTR [eax],edx
  41bbbe:	mov    DWORD PTR ds:0x4291df,0x7d4d
  41bbc8:	je     0x41bbdb
  41bbce:	not    DWORD PTR ds:0x42917b
  41bbd4:	mov    eax,DWORD PTR [eax]
  41bbd6:	jmp    0x4207f9
  41bbdb:	mov    eax,DWORD PTR [ebp+0x18]
  41bbde:	xor    DWORD PTR ds:0x429183,0x42919f
  41bbe8:	xor    eax,ecx
  41bbea:	push   ebx
  41bbeb:	add    eax,esi
  41bbed:	xor    DWORD PTR ds:0x429197,edi
  41bbf3:	xor    edx,edx
  41bbf5:	sub    DWORD PTR ds:0x4291e3,edi
  41bbfb:	mov    ebx,0xfabdbed6
  41bc00:	add    eax,ebx
  41bc02:	mov    DWORD PTR ds:0x4291cb,0x2663
  41bc0c:	push   edi
  41bc0d:	adc    edx,0xffffffff
  41bc10:	and    DWORD PTR ds:0x4291a3,0x0
  41bc1a:	jmp    0x41bc2e
  41bc1f:	xor    edi,edi
  41bc21:	xor    edi,DWORD PTR ds:0x4291a3
  41bc27:	inc    edi
  41bc28:	mov    DWORD PTR ds:0x4291a3,edi
  41bc2e:	cmp    DWORD PTR ds:0x4291a3,0x1f
  41bc35:	jae    0x41bc68
  41bc3b:	cmp    DWORD PTR ds:0x4291a3,0x22
  41bc42:	jl     0x41bc68
  41bc48:	jmp    0x41bc63
  41bc4d:	push   DWORD PTR [ebp-0x24]
  41bc50:	push   0x42810e
  41bc55:	push   0x42812a
  41bc5a:	push   DWORD PTR [ebp-0x1c]
  41bc5d:	call   DWORD PTR ds:0x42a53b
  41bc63:	jmp    0x41bc1f
  41bc68:	mov    edi,0x8a29a13f
  41bc6d:	xor    eax,edi
  41bc6f:	sub    DWORD PTR ds:0x429197,0x48a0
  41bc79:	xor    edx,0x0
  41bc7c:	mov    DWORD PTR ds:0x42919f,0x3301
  41bc86:	cmp    eax,0x70941fe9
  41bc8b:	mov    DWORD PTR ds:0x429167,0x2e01
  41bc95:	jne    0x41bcc2
  41bc9b:	mov    DWORD PTR ds:0x4291a3,0x73ae
  41bca5:	cmp    edx,0xffffffff
  41bca8:	jne    0x41bcc2
  41bcae:	push   0xf89c85a2
  41bcb3:	mov    DWORD PTR ds:0x4291af,0x3feb
  41bcbd:	jmp    0x4207e6
  41bcc2:	mov    eax,DWORD PTR [ebp+0x18]
  41bcc5:	xor    eax,ecx
  41bcc7:	adc    DWORD PTR ds:0x42916b,0x4291af
  41bcd1:	add    eax,esi
  41bcd3:	sub    DWORD PTR ds:0x429163,0x429173
  41bcdd:	xor    edx,edx
  41bcdf:	add    eax,ebx
  41bce1:	mov    DWORD PTR ds:0x429163,0x4b51
  41bceb:	adc    edx,0xffffffff
  41bcee:	sub    DWORD PTR ds:0x4291af,0x6866
  41bcf8:	xor    eax,edi
  41bcfa:	or     DWORD PTR ds:0x42914f,0x4291db
  41bd04:	xor    edx,0x0
  41bd07:	mov    DWORD PTR ds:0x4291eb,0x1dc4
  41bd11:	cmp    eax,0x70941fe7
  41bd16:	mov    DWORD PTR ds:0x429153,0x3724
  41bd20:	jne    0x4207d3
  41bd26:	cmp    edx,0xffffffff
  41bd29:	mov    DWORD PTR ds:0x4291ef,0x5140
  41bd33:	jne    0x4207d3
  41bd39:	add    DWORD PTR ds:0x429193,0x7d28
  41bd43:	mov    eax,DWORD PTR [ebp+0x10]
  41bd46:	mov    DWORD PTR ds:0x42916b,0x1b
  41bd50:	cmp    DWORD PTR ds:0x42916b,0x0
  41bd57:	je     0x41bd93
  41bd5d:	cmp    DWORD PTR ds:0x42916b,0x1d
  41bd64:	jl     0x41bd93
  41bd6a:	jmp    0x41bd7f
  41bd6f:	push   0x2cfc
  41bd74:	push   0x400000
  41bd79:	call   DWORD PTR ds:0x42a53f
  41bd7f:	xor    edx,edx
  41bd81:	xor    edx,DWORD PTR ds:0x42916b
  41bd87:	dec    edx
  41bd88:	mov    DWORD PTR ds:0x42916b,edx
  41bd8e:	jmp    0x41bd50
  41bd93:	xor    eax,ecx
  41bd95:	add    eax,esi
  41bd97:	mov    DWORD PTR [ebp-0x18],eax
  41bd9a:	sub    DWORD PTR ds:0x42918f,0x3e4b
  41bda4:	mov    eax,DWORD PTR [ebp+0xc]
  41bda7:	and    DWORD PTR ds:0x429183,0x0
  41bdb1:	jmp    0x41bdc5
  41bdb6:	xor    edx,edx
  41bdb8:	add    edx,DWORD PTR ds:0x429183
  41bdbe:	inc    edx
  41bdbf:	mov    DWORD PTR ds:0x429183,edx
  41bdc5:	cmp    DWORD PTR ds:0x429183,0x19
  41bdcc:	jae    0x41bdf4
  41bdd2:	cmp    DWORD PTR ds:0x429183,0x28
  41bdd9:	jbe    0x41bdf4
  41bddf:	jmp    0x41bdef
  41bde4:	push   0x429193
  41bde9:	call   DWORD PTR ds:0x42a543
  41bdef:	jmp    0x41bdb6
  41bdf4:	mov    edx,DWORD PTR [ebp-0x8]
  41bdf7:	mov    DWORD PTR ds:0x4291ab,0x2654
  41be01:	xor    eax,ecx
  41be03:	add    eax,esi
  41be05:	adc    DWORD PTR ds:0x4291e7,0x4291db
  41be0f:	imul   eax,DWORD PTR [edx]
  41be12:	mov    edx,DWORD PTR [ebp+0x8]
  41be15:	or     DWORD PTR ds:0x42914b,0x4291d3
  41be1f:	xor    edx,ecx
  41be21:	add    edx,esi
  41be23:	mov    DWORD PTR ds:0x4291e7,0x151c
  41be2d:	cmp    edx,eax
  41be2f:	mov    eax,DWORD PTR [ebp-0x4]
  41be32:	je     0x41beca
  41be38:	mov    DWORD PTR ds:0x429163,0x16
  41be42:	cmp    DWORD PTR ds:0x429163,0x0
  41be49:	je     0x41be83
  41be4f:	cmp    DWORD PTR ds:0x429163,0x1a
  41be56:	ja     0x41be83
  41be5c:	jmp    0x41be71
  41be61:	push   0x4e27
  41be66:	push   0x4280a5
  41be6b:	call   DWORD PTR ds:0x42a547
  41be71:	mov    edx,DWORD PTR ds:0x429163
  41be77:	dec    edx
  41be78:	mov    DWORD PTR ds:0x429163,edx
  41be7e:	jmp    0x41be42
  41be83:	mov    edx,DWORD PTR [ebp-0x18]
  41be86:	or     DWORD PTR ds:0x42917f,0x4f4
  41be90:	add    DWORD PTR [eax],edx
  41be92:	and    eax,0x7343
  41be97:	mov    eax,DWORD PTR [ebp-0x4]
  41be9a:	mov    edx,DWORD PTR [ebp+0xc]
  41be9d:	xor    edx,ecx
  41be9f:	add    edx,esi
  41bea1:	imul   edx,DWORD PTR [eax]
  41bea4:	sbb    DWORD PTR ds:0x429183,0x4291b3
  41beae:	mov    DWORD PTR [eax],edx
  41beb0:	mov    eax,DWORD PTR [ebp-0x4]
  41beb3:	mov    DWORD PTR [ebp-0x1c],eax
  41beb6:	mov    eax,DWORD PTR [ebp+0x10]
  41beb9:	xor    eax,ecx
  41bebb:	mov    edx,0xffcd8d0d
  41bec0:	sub    edx,eax
  41bec2:	mov    eax,DWORD PTR [ebp-0x1c]
  41bec5:	jmp    0x41bee4
  41beca:	mov    edx,DWORD PTR [ebp+0x14]
  41becd:	xor    DWORD PTR [eax],edx
  41becf:	mov    eax,DWORD PTR [ebp-0x4]
  41bed2:	mov    DWORD PTR [ebp-0x1c],eax
  41bed5:	mov    eax,DWORD PTR [ebp+0x10]
  41bed8:	xor    eax,ecx
  41beda:	mov    edx,0xffcd8d0d
  41bedf:	sub    edx,eax
  41bee1:	mov    eax,DWORD PTR [ebp-0x1c]
  41bee4:	add    DWORD PTR [eax],edx
  41bee6:	mov    eax,DWORD PTR [ebp-0x4]
  41bee9:	mov    edx,DWORD PTR [ebp-0x8]
  41beec:	add    edx,DWORD PTR [eax]
  41beee:	mov    DWORD PTR [ebp-0x8],edx
  41bef1:	mov    eax,DWORD PTR [ebp+0xc]
  41bef4:	mov    edx,DWORD PTR [ebp+0xc]
  41bef7:	xor    edx,ecx
  41bef9:	xor    eax,ecx
  41befb:	lea    eax,[eax+edx*1+0x64e5e6]
  41bf02:	mov    edx,DWORD PTR [ebp+0xc]
  41bf05:	xor    edx,ecx
  41bf07:	add    edx,esi
  41bf09:	imul   eax,edx
  41bf0c:	mov    edx,DWORD PTR [ebp+0xc]
  41bf0f:	xor    edx,ecx
  41bf11:	sub    edx,eax
  41bf13:	mov    eax,DWORD PTR [ebp-0x4]
  41bf16:	add    edx,esi
  41bf18:	cmp    DWORD PTR [eax],edx
  41bf1a:	mov    eax,DWORD PTR [ebp-0x4]
  41bf1d:	jg     0x41bf3a
  41bf23:	mov    DWORD PTR [ebp-0x1c],eax
  41bf26:	mov    eax,DWORD PTR [ebp+0x10]
  41bf29:	xor    eax,ecx
  41bf2b:	mov    edx,0xffcd8d0d
  41bf30:	sub    edx,eax
  41bf32:	mov    eax,DWORD PTR [ebp-0x1c]
  41bf35:	jmp    0x41bf41
  41bf3a:	mov    edx,DWORD PTR [ebp+0x10]
  41bf3d:	xor    edx,ecx
  41bf3f:	add    edx,esi
  41bf41:	add    DWORD PTR [eax],edx
  41bf43:	mov    eax,DWORD PTR [ebp-0x8]
  41bf46:	mov    edx,DWORD PTR [ebp-0x10]
  41bf49:	mov    eax,DWORD PTR [eax]
  41bf4b:	xor    edx,ecx
  41bf4d:	add    edx,0x3272f2
  41bf53:	not    edx
  41bf55:	and    eax,edx
  41bf57:	mov    DWORD PTR [ebp-0x4],eax
  41bf5a:	movsx  eax,BYTE PTR [eax+0x1]
  41bf5e:	cdq    
  41bf5f:	add    eax,ebx
  41bf61:	adc    edx,0xffffffff
  41bf64:	jmp    0x41e327
  41bf69:	pop    esi
  41bf6a:	push   0x85807d90
  41bf6f:	xchg   esi,eax
  41bf70:	dec    eax
  41bf71:	add    cl,BYTE PTR [ebx+0x3]
  41bf74:	sar    esi,cl
  41bf76:	pop    ds
  41bf77:	in     eax,0xf7
  41bf79:	mov    ebx,0xd98382f9
  41bf7e:	pop    esp
  41bf7f:	add    DWORD PTR [ebx-0x74604947],0x32
  41bf86:	and    al,0xdb
  41bf88:	jmp    0x41bff5
  41bf8a:	stos   DWORD PTR es:[edi],eax
  41bf8b:	push   edx
  41bf8c:	mov    ds:0x3406108f,al
  41bf91:	in     eax,dx
  41bf92:	test   al,0xab
  41bf94:	stc    
  41bf95:	xchg   ebp,eax
  41bf96:	adc    eax,edi
  41bf98:	push   edx
  41bf99:	ret    
  41bf9a:	jmp    DWORD PTR [esi+ecx*2+0x29]
  41bf9e:	jg     0x41bfac
  41bfa0:	cdq    
  41bfa1:	stos   DWORD PTR es:[edi],eax
  41bfa2:	cdq    
  41bfa3:	addr16 adc ah,bl
  41bfa6:	jmp    0x9925637f
  41bfab:	mov    BYTE PTR [ebp-0x44f24d7f],dl
  41bfb1:	pop    esi
  41bfb2:	(bad)  
  41bfb3:	cmc    
  41bfb4:	call   FWORD PTR [edx-0x6e]
  41bfb7:	and    al,0x13
  41bfb9:	fs inc esp
  41bfbb:	pop    edx
  41bfbc:	mov    bl,BYTE PTR [edi]
  41bfbe:	add    esi,edi
  41bfc0:	jno    0x41bf9f
  41bfc2:	in     eax,0xdd
  41bfc4:	aad    0xa1
  41bfc6:	rol    BYTE PTR [edi+edi*1-0x29],cl
  41bfca:	jmp    0x3217ad5a
  41bfcf:	fstp   DWORD PTR [eax+0x70689c37]
  41bfd5:	fiadd  DWORD PTR [edi-0x4216ee1a]
  41bfdb:	dec    ecx
  41bfdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfdd:	imul   ecx,DWORD PTR [esi+ebx*4+0x78],0xae1eec42
  41bfe5:	aad    0xe0
  41bfe7:	int    0x5a
  41bfe9:	sbb    BYTE PTR [eax-0xd],ah
  41bfec:	sbb    BYTE PTR [eax+ecx*2+0x6],bh
  41bff0:	xor    ah,ah
  41bff2:	push   0xffffffcc
  41bff4:	push   ss
  41bff5:	clc    
  41bff6:	mov    eax,ds:0x5a28b9dd
  41bffb:	mov    ecx,esp
  41bffd:	sar    ebp,cl
  41bfff:	mov    bh,0xbb
  41c001:	sub    al,0x24
  41c003:	popa   
  41c004:	adc    BYTE PTR [ebx-0x3b6bd5cd],ah
  41c00a:	mov    eax,0xd35136d7
  41c00f:	inc    ebx
  41c010:	stos   DWORD PTR es:[edi],eax
  41c011:	jecxz  0x41bfe0
  41c013:	push   ebx
  41c014:	jmp    0x41bfe3
  41c016:	jns    0x41c04f
  41c018:	js     0x41c058
  41c01a:	push   eax
  41c01b:	fmul   st,st(1)
  41c01d:	loopne 0x41c048
  41c01f:	popf   
  41c020:	sub    BYTE PTR [edx+ebp*8-0x6a],bl
  41c024:	dec    edx
  41c025:	mov    ds:0xdc50b4f5,eax
  41c02a:	outs   dx,BYTE PTR ds:[esi]
  41c02b:	cmc    
  41c02c:	popf   
  41c02d:	pusha  
  41c02e:	cmp    ah,bh
  41c030:	sub    eax,0x51ff51c8
  41c035:	(bad)  
  41c036:	lds    esi,FWORD PTR [edi+ebp*8+0x38defd0a]
  41c03d:	add    ebp,DWORD PTR [ebx+0x2026ba5f]
  41c043:	push   esp
  41c044:	dec    ecx
  41c045:	sti    
  41c046:	sub    esp,edx
  41c048:	pop    ecx
  41c049:	jmp    0x41c002
  41c04b:	push   es
  41c04c:	xor    BYTE PTR [edi+edi*1],dl
  41c04f:	inc    esi
  41c050:	clc    
  41c051:	inc    ecx
  41c052:	cmp    DWORD PTR [esi],ebx
  41c054:	pop    ebx
  41c055:	out    dx,eax
  41c056:	inc    esi
  41c057:	into   
  41c058:	out    dx,al
  41c059:	out    0xe1,eax
  41c05b:	inc    edi
  41c05c:	inc    eax
  41c05d:	and    BYTE PTR [eax-0x3e],ah
  41c060:	(bad)  
  41c061:	xor    dl,BYTE PTR [ecx+esi*4]
  41c064:	rcl    eax,cl
  41c066:	jae    0x41c031
  41c068:	pop    ds
  41c069:	xchg   esi,eax
  41c06a:	imul   esi,ebp,0xffffffbd
  41c06d:	push   esi
  41c06e:	push   ss
  41c06f:	fwait
  41c070:	sbb    ebp,esp
  41c072:	add    BYTE PTR [ebx],al
  41c074:	lock dec esp
  41c076:	lods   al,BYTE PTR ds:[esi]
  41c077:	arpl   WORD PTR [eax+0x1b],di
  41c07a:	pop    ebp
  41c07b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c07c:	mov    DWORD PTR [eax],0xd62088f6
  41c082:	push   eax
  41c083:	outs   dx,DWORD PTR ds:[esi]
  41c084:	cmp    dh,BYTE PTR [eax]
  41c086:	jmp    0x41c0ba
  41c088:	popf   
  41c089:	xchg   DWORD PTR [edi-0x2b8cb59a],eax
  41c08f:	popf   
  41c090:	mov    ds:0x6ffdc395,eax
  41c095:	(bad)  
  41c096:	test   al,0xf0
  41c098:	dec    esi
  41c099:	(bad)  
  41c09a:	aam    0x4a
  41c09c:	scas   eax,DWORD PTR es:[edi]
  41c09d:	mov    cl,0xc
  41c09f:	or     eax,0x62e16ab5
  41c0a4:	xchg   edx,eax
  41c0a5:	mov    WORD PTR [edi-0x38],es
  41c0a8:	dec    esi
  41c0a9:	retf   
  41c0aa:	fild   WORD PTR [edi+0x5c713e2]
  41c0b0:	push   esi
  41c0b1:	pop    eax
  41c0b2:	lods   eax,DWORD PTR ds:[esi]
  41c0b3:	(bad)  
  41c0b4:	dec    edx
  41c0b5:	sub    al,0xf7
  41c0b7:	sahf   
  41c0b8:	loopne 0x41c03c
  41c0ba:	(bad)
  41c0bd:	xchg   edx,eax
  41c0be:	out    dx,al
  41c0bf:	test   DWORD PTR [eax+0x42],ecx
  41c0c2:	xor    DWORD PTR [esi],eax
  41c0c4:	shl    DWORD PTR [ecx],cl
  41c0c6:	inc    esp
  41c0c7:	div    eax
  41c0c9:	push   edx
  41c0ca:	sbb    eax,0x964d03e2
  41c0cf:	xor    bh,BYTE PTR [ecx]
  41c0d1:	jne    0x41c121
  41c0d3:	or     DWORD PTR [esi+edx*8],0x73
  41c0d7:	addr16 dec eax
  41c0d9:	popa   
  41c0da:	dec    eax
  41c0db:	out    dx,eax
  41c0dc:	push   ebp
  41c0dd:	aad    0x79
  41c0df:	jmp    0x54de:0xa5830cd8
  41c0e6:	je     0x41c0e8
  41c0e8:	lahf   
  41c0e9:	ficomp WORD PTR [ecx+0x49]
  41c0ec:	loope  0x41c0c9
  41c0ee:	ds pop ebx
  41c0f0:	pop    esp
  41c0f1:	ds loope 0x41c0a3
  41c0f4:	xchg   DWORD PTR [ecx+0x53],esp
  41c0f7:	shl    DWORD PTR [eax+0x27d84f22],0x25
  41c0fe:	push   es
  41c0ff:	into   
  41c100:	pop    edi
  41c101:	repnz std 
  41c103:	xchg   edi,eax
  41c104:	or     esp,edi
  41c106:	cs test eax,0x13fc850e
  41c10c:	xor    DWORD PTR [eax+edi*4-0x60d7e050],ecx
  41c113:	test   al,0xdf
  41c115:	dec    eax
  41c116:	fnstsw WORD PTR [esp+edi*1]
  41c119:	call   0x57ca:0xf69e20af
  41c120:	loopne 0x41c154
  41c122:	mov    edi,0x37ed55c0
  41c127:	sub    esi,esi
  41c129:	outs   dx,DWORD PTR ds:[esi]
  41c12a:	fsub   st(2),st
  41c12c:	outs   dx,BYTE PTR ds:[esi]
  41c12d:	shl    DWORD PTR [ecx+0x2ee98f54],0xe2
  41c134:	mov    al,ds:0x8136a916
  41c139:	fadd   st,st(1)
  41c13b:	inc    ebx
  41c13c:	add    eax,0xe1abb2dc
  41c141:	fwait
  41c142:	into   
  41c143:	or     BYTE PTR [edi+ebx*2],ch
  41c146:	xor    DWORD PTR [edx-0x7],ecx
  41c149:	jno    0x41c142
  41c14b:	adc    ah,BYTE PTR [ebx+0x4fd96fd1]
  41c151:	sahf   
  41c152:	mov    al,0x8f
  41c154:	mov    cl,0xaa
  41c156:	cdq    
  41c157:	loop   0x41c0f8
  41c159:	sbb    dh,BYTE PTR [edi+0x2a]
  41c15c:	push   edi
  41c15d:	or     BYTE PTR [edi],bh
  41c15f:	ror    DWORD PTR [edi-0x2dccc22a],1
  41c165:	or     ch,BYTE PTR [edx]
  41c167:	inc    edi
  41c168:	xor    ah,BYTE PTR [ecx+esi*8+0x67]
  41c16c:	test   eax,0xcd0695b7
  41c171:	test   al,0xab
  41c173:	ret    
  41c174:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c175:	loope  0x41c0fe
  41c177:	push   0x7cedb6c8
  41c17c:	sub    DWORD PTR [esi],esp
  41c17e:	dec    edi
  41c17f:	or     BYTE PTR [edi-0x3a],dl
  41c182:	inc    ebp
  41c183:	xor    bh,bl
  41c185:	mov    ebx,0x5803d830
  41c18a:	sub    edx,esi
  41c18c:	lea    esp,[edi-0x7c]
  41c18f:	push   esi
  41c190:	sub    DWORD PTR [esi-0x5bd0f167],ecx
  41c196:	addr16 out dx,eax
  41c198:	mov    eax,0xb9dfce62
  41c19d:	lea    edi,[ecx+eiz*1-0x89c0cf4]
  41c1a4:	add    al,cl
  41c1a6:	ins    DWORD PTR es:[edi],dx
  41c1a7:	fucomi st,st(7)
  41c1a9:	aaa    
  41c1aa:	sub    ecx,DWORD PTR [ecx+esi*1+0x120cf57c]
  41c1b1:	adc    DWORD PTR [ecx],edx
  41c1b3:	fisub  WORD PTR [esp+esi*2]
  41c1b6:	cli    
  41c1b7:	dec    ecx
  41c1b8:	dec    esp
  41c1b9:	xlat   BYTE PTR ds:[ebx]
  41c1ba:	mov    ecx,0x2192eaf3
  41c1bf:	mov    dh,BYTE PTR [edi+eax*8]
  41c1c2:	or     DWORD PTR [edi+0x15d36d94],ecx
  41c1c8:	repnz mov ebx,0x2b84bbc3
  41c1ce:	into   
  41c1cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1d0:	pushf  
  41c1d1:	adc    ecx,esp
  41c1d3:	cli    
  41c1d4:	mov    bl,0x97
  41c1d6:	cli    
  41c1d7:	xchg   DWORD PTR [edx],esi
  41c1d9:	xchg   ebx,eax
  41c1da:	icebp  
  41c1db:	inc    esp
  41c1dc:	adc    edx,ebx
  41c1de:	and    BYTE PTR [edi],0xdc
  41c1e1:	add    cl,BYTE PTR [ebx+edx*2]
  41c1e4:	jge    0x41c1bb
  41c1e6:	ins    BYTE PTR es:[edi],dx
  41c1e7:	fucomi st,st(3)
  41c1e9:	(bad)  
  41c1ea:	mov    ds:0xce0991e,al
  41c1ef:	rcl    DWORD PTR [ebx+0x17],1
  41c1f2:	popf   
  41c1f3:	mov    esi,DWORD PTR [eax+0x1a]
  41c1f6:	fnstenv [ebx+0xd791cb7]
  41c1fc:	xor    BYTE PTR [ecx-0x6b019a02],ah
  41c202:	aad    0xa0
  41c204:	(bad)  
  41c205:	jmp    0x6131aa7d
  41c20a:	mov    dh,0x2c
  41c20c:	int3   
  41c20d:	mov    bl,0xaf
  41c20f:	pop    esp
  41c210:	gs ss jl 0x41c1bb
  41c214:	aaa    
  41c215:	mov    BYTE PTR [edi+0x2d],bl
  41c218:	xchg   ebp,eax
  41c219:	sub    bh,dh
  41c21b:	not    DWORD PTR [ebx]
  41c21d:	push   cs
  41c21e:	repz adc ecx,esi
  41c221:	push   ecx
  41c222:	shl    DWORD PTR [ecx+edi*8+0x61],cl
  41c226:	jge    0x41c204
  41c228:	sub    esp,edi
  41c22a:	fwait
  41c22b:	jg     0x41c1c1
  41c22d:	lock mov edi,0x2363023c
  41c233:	aaa    
  41c234:	jnp    0x41c23e
  41c236:	pop    esi
  41c237:	jl     0x41c269
  41c239:	iret   
  41c23a:	jge    0x41c28d
  41c23c:	push   es
  41c23d:	xor    eax,0x5154b297
  41c242:	jne    0x41c28d
  41c244:	out    dx,eax
  41c245:	jg     0x41c1d2
  41c247:	xor    BYTE PTR [edi-0x1e],dl
  41c24a:	(bad)  
  41c24b:	fs cwde 
  41c24d:	sbb    BYTE PTR [edx-0x54b91dcf],bh
  41c253:	add    ch,ch
  41c255:	dec    esi
  41c256:	jecxz  0x41c248
  41c258:	mov    bh,0xd3
  41c25a:	in     al,dx
  41c25b:	dec    esp
  41c25c:	xor    dl,dh
  41c25e:	out    dx,al
  41c25f:	mov    dh,0xb7
  41c261:	jmp    0x41c2b1
  41c263:	mov    eax,ds:0x98f2469e
  41c268:	cmc    
  41c269:	inc    edi
  41c26a:	rol    DWORD PTR [ecx],0xa1
  41c26d:	mov    bh,0xd9
  41c26f:	push   esi
  41c270:	mov    al,0xb9
  41c272:	or     DWORD PTR [esi-0x3a44795d],edx
  41c278:	retf   0x9e2f
  41c27b:	sub    eax,0xf51d6be6
  41c280:	push   ebp
  41c281:	imul   BYTE PTR [ebx-0x68]
  41c284:	and    al,0xd4
  41c286:	push   ecx
  41c287:	mov    ecx,es
  41c289:	test   al,0x9f
  41c28b:	and    ah,BYTE PTR [edx]
  41c28d:	data16 stc 
  41c28f:	push   ebx
  41c290:	into   
  41c291:	adc    BYTE PTR [edx-0xf357696],bh
  41c297:	mov    DWORD PTR [eax],eax
  41c299:	or     BYTE PTR [edi-0x38],0xa2
  41c29d:	mov    al,0x98
  41c29f:	imul   ebp,DWORD PTR [ecx],0xb3e5e1ab
  41c2a5:	or     al,0x11
  41c2a7:	xor    eax,0x776df0f
  41c2ac:	imul   ecx,DWORD PTR [edx+edi*1-0x9a641e1],0xffffffdf
  41c2b4:	adc    DWORD PTR [eax],ebx
  41c2b6:	pop    es
  41c2b7:	pop    esi
  41c2b8:	or     al,0xcd
  41c2ba:	(bad)  
  41c2bb:	push   esp
  41c2bc:	rcr    DWORD PTR [edx+eax*8+0x3c4c08e3],0xef
  41c2c4:	arpl   WORD PTR [eax],dx
  41c2c6:	xlat   BYTE PTR ds:[ebx]
  41c2c7:	not    BYTE PTR [ebx+0x36704ab9]
  41c2cd:	xchg   ebx,edx
  41c2cf:	dec    ebp
  41c2d0:	push   edx
  41c2d1:	cmp    al,0x53
  41c2d3:	rol    DWORD PTR [ecx],cl
  41c2d5:	pop    ss
  41c2d6:	mov    cl,0x3d
  41c2d8:	fstp   QWORD PTR [ecx+esi*2+0x2c]
  41c2dc:	cmp    dh,BYTE PTR [edi]
  41c2de:	div    BYTE PTR [esi]
  41c2e0:	gs ins BYTE PTR es:[edi],dx
  41c2e2:	pop    ebp
  41c2e3:	test   al,0xd7
  41c2e5:	stc    
  41c2e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2e7:	(bad)  
  41c2e8:	in     al,0x5e
  41c2ea:	and    bh,dl
  41c2ec:	mov    edx,0xd9fc7a4a
  41c2f1:	and    cl,BYTE PTR [edx-0x638d2f0d]
  41c2f7:	pop    ebp
  41c2f8:	xor    dl,BYTE PTR [edi-0x73]
  41c2fb:	retf   
  41c2fc:	out    0x52,eax
  41c2fe:	and    edx,DWORD PTR [ebp+edi*8-0x2e]
  41c302:	mul    BYTE PTR [edi]
  41c304:	inc    BYTE PTR [esi]
  41c306:	inc    edx
  41c307:	stos   BYTE PTR es:[edi],al
  41c308:	ficom  DWORD PTR [edi+edi*2+0x2d]
  41c30c:	add    al,0x91
  41c30e:	jmp    0x41c37d
  41c310:	loope  0x41c2bb
  41c312:	jmp    0x41c35b
  41c314:	mov    al,ds:0x2afcacae
  41c319:	sub    al,0xf6
  41c31b:	ds in  eax,dx
  41c31d:	frstor [edi+0x21eb4df5]
  41c323:	inc    ecx
  41c324:	push   ebx
  41c325:	lds    edi,FWORD PTR [edx]
  41c327:	fidiv  DWORD PTR [edx]
  41c329:	cs and eax,0xa490e343
  41c32f:	rol    BYTE PTR [ebx],0xd2
  41c332:	jo     0x41c2d6
  41c334:	aad    0x5f
  41c336:	pushf  
  41c337:	mov    dl,0xeb
  41c339:	jp     0x41c36c
  41c33b:	shr    edi,1
  41c33d:	or     BYTE PTR [eax+0x3fb4d8e7],ah
  41c343:	inc    edx
  41c344:	adc    ebx,ecx
  41c346:	mov    ch,0x27
  41c348:	in     al,0x33
  41c34a:	retf   0x956e
  41c34d:	(bad)  
  41c34e:	(bad)  
  41c350:	jp     0x41c312
  41c352:	dec    edi
  41c353:	push   eax
  41c354:	lock stos DWORD PTR es:[edi],eax
  41c356:	xor    eax,0xe45821f
  41c35b:	push   es
  41c35c:	adc    eax,0xa7d2ec46
  41c361:	inc    esp
  41c362:	rcr    DWORD PTR [edx],0x7f
  41c365:	fisub  WORD PTR [ecx+0x7d]
  41c368:	push   cs
  41c369:	fstp   DWORD PTR [ecx-0xaf966b9]
  41c36f:	jl     0x41c3c8
  41c371:	and    BYTE PTR [ebx-0x287b319b],dh
  41c377:	cli    
  41c378:	ja     0x41c3b3
  41c37a:	or     al,0x15
  41c37c:	cmc    
  41c37d:	cmp    ch,ch
  41c37f:	push   ecx
  41c380:	mov    al,0xed
  41c382:	fmulp  st(5),st
  41c384:	popa   
  41c385:	sbb    dh,BYTE PTR [edi]
  41c387:	retf   0x6749
  41c38a:	stos   DWORD PTR es:[edi],eax
  41c38b:	leave  
  41c38c:	(bad)  
  41c38d:	enter  0x594a,0x6
  41c391:	sub    BYTE PTR [ebx+eiz*4-0x5c],dh
  41c395:	or     DWORD PTR [edi],ebx
  41c397:	fadd   QWORD PTR [edx+0x6f5c9202]
  41c39d:	fisttp DWORD PTR [esi-0x3e]
  41c3a0:	fld    QWORD PTR [ecx+0x59a52e3f]
  41c3a6:	cmp    esi,0x6f
  41c3a9:	test   al,0x31
  41c3ab:	and    eax,0x7524fe41
  41c3b0:	loopne 0x41c3bc
  41c3b2:	les    esi,FWORD PTR [eax]
  41c3b4:	pop    esi
  41c3b5:	out    0xf7,eax
  41c3b7:	retf   
  41c3b8:	out    dx,al
  41c3b9:	pop    edx
  41c3ba:	in     eax,0xe
  41c3bc:	nop
  41c3bd:	int    0xac
  41c3bf:	mov    al,es:0xb7d74c75
  41c3c5:	iret   
  41c3c6:	pop    eax
  41c3c7:	push   esp
  41c3c8:	je     0x41c36b
  41c3ca:	mov    esi,DWORD PTR [esi]
  41c3cc:	adc    BYTE PTR [eax-0x26c2e4fd],dl
  41c3d2:	loopne 0x41c37a
  41c3d4:	cld    
  41c3d5:	or     BYTE PTR ds:0x2e750dee,al
  41c3db:	jnp    0x41c405
  41c3dd:	sbb    esi,DWORD PTR [eax]
  41c3df:	pop    ss
  41c3e0:	stos   BYTE PTR es:[edi],al
  41c3e1:	push   ebx
  41c3e2:	xchg   esp,eax
  41c3e3:	xor    eax,0x7203a2a2
  41c3e8:	jmp    0x86915ff9
  41c3ed:	add    DWORD PTR [esi-0x3e281e7c],eax
  41c3f3:	cli    
  41c3f4:	jp     0x41c43f
  41c3f6:	add    esp,esi
  41c3f8:	repz out 0xef,eax
  41c3fb:	sar    DWORD PTR [esi+0x6494dbd8],cl
  41c401:	pop    esp
  41c402:	add    BYTE PTR [ecx-0x8],ah
  41c405:	scas   eax,DWORD PTR es:[edi]
  41c406:	or     al,0xb6
  41c408:	lds    eax,FWORD PTR [edi+0x26df33c1]
  41c40e:	sbb    DWORD PTR [eax+0x5afa7742],eax
  41c414:	push   edx
  41c415:	div    DWORD PTR [esi-0x7def0d3e]
  41c41b:	jl     0x41c3e4
  41c41d:	iret   
  41c41e:	or     BYTE PTR ds:0x985d4a28,dl
  41c424:	in     al,dx
  41c425:	les    edi,FWORD PTR [esi+eax*8]
  41c428:	mov    ch,0xd6
  41c42a:	out    dx,al
  41c42b:	aaa    
  41c42c:	leave  
  41c42d:	fcom   DWORD PTR [ebp+0x25192a7d]
  41c433:	pop    eax
  41c434:	dec    eax
  41c435:	mov    esp,0xd18cd3fa
  41c43a:	mov    ch,0xb1
  41c43c:	mov    WORD PTR [ecx],?
  41c43e:	pop    ss
  41c43f:	xchg   ebx,eax
  41c440:	sbb    al,0x32
  41c442:	and    BYTE PTR [ecx+0x4c],dh
  41c445:	pop    edi
  41c446:	add    BYTE PTR [ecx+ebx*8-0x1d],ch
  41c44a:	retf   0xcaf6
  41c44d:	repnz mov esp,0xc951513d
  41c453:	xchg   esi,eax
  41c454:	addr16 cdq 
  41c456:	test   bl,cl
  41c458:	jnp    0x41c493
  41c45a:	rol    DWORD PTR [edi],0x3a
  41c45d:	cmp    dl,BYTE PTR [edx-0x1b]
  41c460:	xchg   ecx,eax
  41c461:	into   
  41c462:	fdiv   DWORD PTR [ecx+edi*4-0x4c]
  41c466:	mov    cl,bl
  41c468:	popa   
  41c469:	in     al,dx
  41c46a:	mov    eax,0xbed153de
  41c46f:	outs   dx,DWORD PTR ds:[esi]
  41c470:	iret   
  41c471:	cmp    al,BYTE PTR [esi+ecx*2]
  41c474:	int    0x71
  41c476:	sub    eax,0xb49e3430
  41c47b:	push   cs
  41c47c:	pop    edi
  41c47d:	xlat   BYTE PTR ds:[ebx]
  41c47e:	sub    BYTE PTR [eax+0xef582b7],ah
  41c484:	jns    0x41c40e
  41c486:	dec    ebx
  41c487:	shrd   DWORD PTR [eax+0x1e524572],eax,cl
  41c48e:	call   0xb61d:0x13ecc13e
  41c495:	or     eax,0xa630b4ff
  41c49a:	daa    
  41c49b:	fmul   QWORD PTR [esi+ebx*2-0xb10a024]
  41c4a2:	xchg   ebp,eax
  41c4a3:	sub    bh,BYTE PTR [ecx+eiz*8-0x72]
  41c4a7:	xor    BYTE PTR [eax+0x73],bl
  41c4aa:	pop    ecx
  41c4ab:	mov    ds:0xe23e869b,al
  41c4b0:	(bad)  
  41c4b1:	std    
  41c4b2:	xor    ebx,ebp
  41c4b4:	sbb    al,0x96
  41c4b6:	fcmovb st,st(4)
  41c4b8:	jo     0x41c468
  41c4ba:	fstp   TBYTE PTR [ebp+eiz*1-0x70]
  41c4be:	rcr    bh,cl
  41c4c0:	mov    edx,es
  41c4c2:	jl     0x41c4d8
  41c4c4:	lahf   
  41c4c5:	fwait
  41c4c6:	inc    ebp
  41c4c7:	inc    edx
  41c4c8:	push   esp
  41c4c9:	ror    BYTE PTR [ecx+ebx*4-0x7c],1
  41c4cd:	cmp    eax,0xc3ee6596
  41c4d2:	dec    esi
  41c4d3:	(bad)  
  41c4d4:	sbb    eax,0x78e51482
  41c4d9:	mov    esi,0x551d289d
  41c4de:	repnz cs stos BYTE PTR es:[edi],al
  41c4e1:	dec    BYTE PTR [ebx+0x49b51104]
  41c4e7:	cli    
  41c4e8:	or     edi,DWORD PTR [ecx-0x1dbf1681]
  41c4ee:	pop    edi
  41c4ef:	je     0x41c4a3
  41c4f1:	cli    
  41c4f2:	outs   dx,BYTE PTR ds:[esi]
  41c4f3:	cs inc ebx
  41c4f5:	and    al,0xfc
  41c4f7:	and    DWORD PTR [ecx-0x1138e858],edx
  41c4fd:	ret    
  41c4fe:	retf   0x998f
  41c501:	neg    BYTE PTR [ebp+0x68]
  41c504:	ror    DWORD PTR gs:[ecx-0x20],0x2c
  41c509:	adc    eax,0x856f415c
  41c50e:	sub    dl,bl
  41c510:	mov    cl,0x4b
  41c512:	call   0x9421:0xc16be3dc
  41c519:	push   0x7da4c669
  41c51e:	cs or  bl,ah
  41c521:	(bad)  
  41c522:	dec    esp
  41c523:	push   edi
  41c524:	push   0x7195afe6
  41c529:	mov    ah,0xb8
  41c52b:	sub    eax,0x65937a22
  41c530:	add    al,0xea
  41c532:	mov    edi,0xd902fe7f
  41c537:	jle    0x41c56f
  41c539:	pop    ds
  41c53a:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41c53c:	xchg   esp,eax
  41c53d:	xor    esi,DWORD PTR ds:0x7647e491
  41c543:	push   edi
  41c544:	xchg   ebx,eax
  41c545:	xchg   edx,eax
  41c546:	imul   esp,DWORD PTR [ebp+0x58],0x43832a4a
  41c54d:	popf   
  41c54e:	sub    eax,0xbf505e7a
  41c553:	mov    al,ds:0x8965974b
  41c558:	and    BYTE PTR [eax+eiz*2-0x46f11256],dh
  41c55f:	into   
  41c560:	adc    edx,ecx
  41c562:	push   ss
  41c563:	out    dx,eax
  41c564:	sub    al,0x7d
  41c566:	and    edx,DWORD PTR [edx]
  41c568:	jl     0x41c525
  41c56a:	cmp    BYTE PTR [ebx-0x4],ch
  41c56d:	(bad)  
  41c56e:	fild   WORD PTR [edx-0x1040fc8e]
  41c574:	shr    edi,cl
  41c576:	popf   
  41c577:	popa   
  41c578:	pop    eax
  41c579:	stos   BYTE PTR es:[edi],al
  41c57a:	xchg   esi,eax
  41c57b:	dec    eax
  41c57c:	xchg   DWORD PTR [esi+0x321dff69],ebx
  41c582:	and    edx,DWORD PTR [ecx+0x7e]
  41c585:	or     al,0xdd
  41c587:	rol    ecx,1
  41c589:	pop    eax
  41c58a:	out    dx,al
  41c58b:	add    DWORD PTR [eax],0x96b0e240
  41c591:	shl    BYTE PTR [ebx],0x7f
  41c594:	push   es
  41c595:	pop    ds
  41c596:	add    dh,BYTE PTR [eax+0x50fce999]
  41c59c:	out    0xa,al
  41c59e:	retf   
  41c59f:	into   
  41c5a0:	jne    0x41c56a
  41c5a2:	cs push ds
  41c5a4:	scas   al,BYTE PTR es:[edi]
  41c5a5:	sti    
  41c5a6:	or     BYTE PTR [edx+0x6b09ca4d],bh
  41c5ac:	jnp    0x41c605
  41c5ae:	(bad)  
  41c5af:	xor    DWORD PTR [ebx-0x41],ebx
  41c5b2:	out    dx,al
  41c5b3:	ret    
  41c5b4:	in     al,dx
  41c5b5:	cmp    BYTE PTR [ebx+edx*2],ch
  41c5b8:	xor    eax,0xde91b6a8
  41c5bd:	inc    eax
  41c5be:	jmp    0xf86f:0xf1aeda43
  41c5c5:	pushf  
  41c5c6:	or     ebx,DWORD PTR [esi+0x79]
  41c5c9:	outs   dx,DWORD PTR ds:[esi]
  41c5ca:	mov    dl,0xf
  41c5cc:	iret   
  41c5cd:	retf   
  41c5ce:	stos   DWORD PTR es:[edi],eax
  41c5cf:	sub    al,BYTE PTR [ebx+0x1a11daff]
  41c5d5:	cwde   
  41c5d6:	sub    edi,DWORD PTR [ebx+0x45]
  41c5d9:	xchg   esp,eax
  41c5da:	iret   
  41c5db:	sub    DWORD PTR [esi+0x13],esp
  41c5de:	xchg   edx,eax
  41c5df:	test   DWORD PTR [ebp*4+0x1c632c86],edi
  41c5e6:	(bad)  
  41c5e7:	scas   eax,DWORD PTR es:[edi]
  41c5e8:	int3   
  41c5e9:	pop    edi
  41c5ea:	jmp    0x25030919
  41c5ef:	imul   edi,DWORD PTR [ecx],0x90b6fb3b
  41c5f5:	(bad)  
  41c5f6:	repz jle 0x41c649
  41c5f9:	js     0x41c5d3
  41c5fb:	loop   0x41c5c0
  41c5fd:	mov    dh,0x84
  41c5ff:	fs sahf 
  41c601:	xor    ah,dh
  41c603:	scas   al,BYTE PTR es:[edi]
  41c604:	mov    cl,0x78
  41c606:	xchg   edx,eax
  41c607:	xlat   BYTE PTR ds:[ebx]
  41c608:	rol    BYTE PTR [ecx-0x6a],cl
  41c60b:	loope  0x41c655
  41c60d:	fadd   QWORD PTR [ecx+0x56b7280f]
  41c613:	mov    dh,0x7e
  41c615:	mov    eax,0x46159fc5
  41c61a:	jbe    0x41c5df
  41c61c:	loopne 0x41c60c
  41c61e:	and    bl,cl
  41c620:	lods   al,BYTE PTR ds:[esi]
  41c621:	xchg   BYTE PTR [ebp+0x10],ch
  41c624:	test   esp,ebx
  41c626:	sbb    esp,DWORD PTR ss:[ebp+eiz*4+0x7182308c]
  41c62e:	push   cs
  41c62f:	fucomip st,st(5)
  41c631:	push   ss
  41c632:	loopne 0x41c605
  41c634:	add    DWORD PTR [edx],eax
  41c636:	call   0x26887379
  41c63b:	jns    0x41c62f
  41c63d:	ds pop esp
  41c63f:	dec    esp
  41c640:	sub    BYTE PTR [ebx],cl
  41c642:	test   DWORD PTR [eax+edx*4-0x1b0c8f62],ebx
  41c649:	aam    0x28
  41c64b:	cld    
  41c64c:	(bad)  
  41c64e:	aaa    
  41c64f:	xor    BYTE PTR [esi+0x4d58327d],dl
  41c655:	xchg   edi,eax
  41c656:	lea    edi,[edx+0x584df14c]
  41c65c:	mov    ecx,0xb515d9f4
  41c661:	outs   dx,BYTE PTR ds:[esi]
  41c662:	add    DWORD PTR [edi+0x5a],esi
  41c665:	inc    ecx
  41c666:	int3   
  41c667:	dec    eax
  41c668:	add    BYTE PTR [eiz*8-0x11564149],cl
  41c66f:	add    al,0x5a
  41c671:	out    dx,eax
  41c672:	push   ss
  41c673:	arpl   si,sp
  41c675:	das    
  41c676:	and    DWORD PTR [esi-0x80],0x10
  41c67a:	mov    DWORD PTR [esi+0x3badce2],edi
  41c680:	and    al,0x5f
  41c682:	push   edx
  41c683:	test   ecx,esp
  41c685:	aaa    
  41c686:	add    eax,edi
  41c688:	cmp    ebx,DWORD PTR [ecx+0x5b]
  41c68b:	aad    0x5b
  41c68d:	mov    ch,0xfc
  41c68f:	dec    ecx
  41c690:	dec    ecx
  41c691:	sar    bl,cl
  41c693:	mov    eax,0x315d6a5c
  41c698:	dec    esi
  41c699:	jnp    0x41c675
  41c69b:	dec    esi
  41c69c:	mov    dl,BYTE PTR [esi]
  41c69e:	(bad)  
  41c69f:	daa    
  41c6a0:	mov    DWORD PTR [eax-0x7a],ecx
  41c6a3:	dec    esi
  41c6a4:	mov    dh,0xf7
  41c6a6:	push   edi
  41c6a7:	sbb    al,dh
  41c6a9:	xchg   ebp,eax
  41c6aa:	sahf   
  41c6ab:	sub    eax,0xd2f2eb65
  41c6b0:	mov    al,ds:0x7f5cde0
  41c6b5:	std    
  41c6b6:	xchg   edx,eax
  41c6b7:	lahf   
  41c6b8:	(bad)  
  41c6b9:	jo     0x41c69b
  41c6bb:	dec    edi
  41c6bc:	icebp  
  41c6bd:	(bad)  
  41c6be:	(bad)  
  41c6bf:	sbb    eax,0x70f012cd
  41c6c4:	in     eax,0xbb
  41c6c6:	iret   
  41c6c7:	jl     0x41c720
  41c6c9:	mov    ah,ah
  41c6cb:	cs inc esi
  41c6cd:	dec    ecx
  41c6ce:	cs jns 0x41c709
  41c6d1:	jg     0x41c71b
  41c6d3:	xchg   edi,eax
  41c6d4:	dec    eax
  41c6d5:	push   ebp
  41c6d6:	lods   eax,DWORD PTR ds:[esi]
  41c6d7:	xlat   BYTE PTR ds:[ebx]
  41c6d8:	mov    ebx,0xf948764d
  41c6dd:	cmc    
  41c6de:	rcl    BYTE PTR [ecx+0x14],0x7
  41c6e2:	fwait
  41c6e3:	mov    ds:0x4c04296c,al
  41c6e8:	stos   BYTE PTR es:[edi],al
  41c6e9:	popa   
  41c6ea:	into   
  41c6eb:	xor    al,0x71
  41c6ed:	mov    cl,0xba
  41c6ef:	fistp  DWORD PTR [ebx+ebx*1]
  41c6f2:	es inc edi
  41c6f4:	mov    fs,WORD PTR ds:0xd887008f
  41c6fa:	cmp    ecx,DWORD PTR [esi+0x76ead055]
  41c700:	mov    ?,ebx
  41c702:	xlat   BYTE PTR ds:[ebx]
  41c703:	addr16 pop eax
  41c705:	mov    eax,ds:0xfe3b900
  41c70a:	repnz xor al,0xdf
  41c70d:	imul   ebp,DWORD PTR [eax-0x3067c229],0x9a418332
  41c717:	repz out 0x7d,al
  41c71a:	mov    dh,0xd3
  41c71c:	pavgb  mm5,QWORD PTR [ecx-0x52c08f02]
  41c723:	imul   esi,esp,0xd7a03618
  41c729:	or     al,0x76
  41c72b:	or     BYTE PTR [eax-0x5c],cl
  41c72e:	and    al,bl
  41c730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c731:	int3   
  41c732:	mov    ds,WORD PTR [ebp-0x73]
  41c735:	push   0x21
  41c737:	xor    ch,BYTE PTR [esi]
  41c739:	mov    dh,0x45
  41c73b:	push   edx
  41c73c:	call   0x7c3e2a8f
  41c741:	lea    esp,[esi]
  41c743:	xchg   BYTE PTR [esi],bl
  41c745:	dec    ebp
  41c746:	dec    edi
  41c747:	xor    eax,DWORD PTR [edx-0x4affcb37]
  41c74d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c74e:	xchg   ebp,eax
  41c74f:	dec    edx
  41c750:	xor    esi,DWORD PTR [esi-0x24]
  41c753:	push   eax
  41c754:	xor    cl,BYTE PTR [ecx]
  41c756:	adc    bl,0x78
  41c759:	mov    esp,0xccf530c5
  41c75e:	shr    DWORD PTR [eax+ebp*2+0x2ec3b370],1
  41c765:	out    dx,eax
  41c766:	nop
  41c767:	out    dx,al
  41c768:	xchg   edi,eax
  41c769:	cmp    eax,0x91f975f4
  41c76e:	xchg   edi,eax
  41c76f:	push   ecx
  41c770:	pushf  
  41c771:	cmp    dh,BYTE PTR [edi+edx*8+0x43]
  41c775:	and    DWORD PTR [edx],ebp
  41c777:	xchg   ecx,eax
  41c778:	push   esi
  41c779:	push   cs
  41c77a:	(bad)  
  41c77b:	jp     0x41c7e4
  41c77d:	xor    DWORD PTR [edi+0x20ae8b85],esp
  41c783:	out    0x12,eax
  41c785:	ror    ebp,0x46
  41c788:	(bad)  
  41c789:	mov    eax,ds:0xb2922020
  41c78e:	dec    ecx
  41c78f:	push   edx
  41c790:	xchg   edx,eax
  41c791:	push   ss
  41c792:	sbb    edx,DWORD PTR ds:0xd4bdee4e
  41c798:	or     ah,BYTE PTR [ecx+0x9]
  41c79b:	mov    eax,ds:0xe140fc08
  41c7a0:	inc    edi
  41c7a1:	rcl    DWORD PTR [eax],1
  41c7a3:	repnz hlt 
  41c7a5:	popa   
  41c7a6:	daa    
  41c7a7:	adc    al,0xc5
  41c7a9:	adc    DWORD PTR [edx+0x1ef12be8],eax
  41c7af:	pop    ebp
  41c7b0:	shr    DWORD PTR [edx+0x4a],cl
  41c7b3:	mov    bp,0x4f71
  41c7b7:	push   ds
  41c7b8:	push   ecx
  41c7b9:	imul   ecx,DWORD PTR [ecx+0x7b],0xffffffdd
  41c7bd:	adc    dh,BYTE PTR [edx-0xee077d4]
  41c7c3:	test   BYTE PTR [ebx],bh
  41c7c5:	cld    
  41c7c6:	mov    al,0x5b
  41c7c8:	in     eax,0x6d
  41c7ca:	and    edi,esi
  41c7cc:	in     eax,dx
  41c7cd:	mov    esp,DWORD PTR [ecx-0x24efee2a]
  41c7d3:	dec    edi
  41c7d4:	mov    ds:0x331ee0ff,eax
  41c7d9:	cmp    ecx,DWORD PTR [edx-0x46a2d4b4]
  41c7df:	push   ecx
  41c7e0:	xchg   esp,eax
  41c7e1:	inc    eax
  41c7e2:	js     0x41c783
  41c7e4:	push   esp
  41c7e5:	pushf  
  41c7e6:	stos   DWORD PTR es:[edi],eax
  41c7e7:	add    eax,DWORD PTR [edi+0x2e448178]
  41c7ed:	data16 jp 0x41c7ea
  41c7f0:	push   ecx
  41c7f1:	sub    DWORD PTR [ecx],edi
  41c7f3:	xor    ch,BYTE PTR [ecx]
  41c7f5:	lock mov al,ds:0xaf6c3e50
  41c7fb:	call   0xfa55afa0
  41c800:	jg     0x41c838
  41c802:	jnp    0x41c870
  41c804:	push   es
  41c805:	mov    ds:0x1193f2db,eax
  41c80a:	mov    edi,0xacaee063
  41c80f:	imul   esp,DWORD PTR [ebx+0x1],0xffffff85
  41c813:	not    DWORD PTR ds:0x6779d19d
  41c819:	sub    BYTE PTR [esi],ah
  41c81b:	daa    
  41c81c:	fwait
  41c81d:	sub    eax,0x38055fe2
  41c822:	mov    ds:0x9830b374,eax
  41c827:	sub    BYTE PTR [edi],dl
  41c829:	xchg   ecx,eax
  41c82a:	mov    ds:0x90b8571d,eax
  41c82f:	pop    edi
  41c830:	in     eax,dx
  41c831:	aad    0x52
  41c833:	xchg   ecx,eax
  41c834:	imul   DWORD PTR [edx-0x65]
  41c837:	push   es
  41c838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c839:	sti    
  41c83a:	ffreep st(0)
  41c83c:	xor    eax,0x8c690bc0
  41c841:	sbb    DWORD PTR [edx],ecx
  41c843:	shr    DWORD PTR [ecx-0x281c5c92],1
  41c849:	jge    0x41c8c0
  41c84b:	pop    ebx
  41c84c:	div    DWORD PTR [eax+ebp*4-0xb]
  41c850:	inc    BYTE PTR [edx-0x3aa79c8]
  41c856:	xchg   esi,eax
  41c857:	pop    ebx
  41c858:	sbb    eax,0xdcd28df1
  41c85d:	mov    DWORD PTR [edi],eax
  41c85f:	test   al,0x60
  41c861:	adc    eax,0xeed2c0dc
  41c866:	hlt    
  41c867:	outs   dx,BYTE PTR ds:[esi]
  41c868:	icebp  
  41c869:	and    BYTE PTR [esi-0x6f],ch
  41c86c:	lea    ebx,[ecx+0x6456dc81]
  41c872:	shr    BYTE PTR [ebp+0x4f],0xe3
  41c876:	pop    eax
  41c877:	loope  0x41c8b0
  41c879:	lock jb 0x41c825
  41c87c:	div    BYTE PTR [ebx]
  41c87e:	mov    eax,ds:0x63520f8
  41c883:	mov    BYTE PTR [edi],dl
  41c885:	enter  0x9eb5,0xce
  41c889:	jmp    0x41c86e
  41c88b:	call   ebp
  41c88d:	and    eax,0x126c3087
  41c892:	dec    ebx
  41c893:	inc    esp
  41c894:	xor    ecx,eax
  41c896:	mov    ds:0x85af4f85,al
  41c89b:	fucom  st(4)
  41c89d:	xchg   ecx,eax
  41c89e:	ret    0xeb0
  41c8a1:	push   eax
  41c8a2:	xchg   ebp,eax
  41c8a3:	sbb    bl,BYTE PTR [eax-0x33]
  41c8a6:	cmp    BYTE PTR ds:0x9dd27672,ch
  41c8ac:	mov    bh,0x6b
  41c8ae:	dec    edx
  41c8af:	mov    cl,0x12
  41c8b1:	not    DWORD PTR [ecx+0xce187f5]
  41c8b7:	test   al,0xff
  41c8b9:	xchg   edx,eax
  41c8ba:	xchg   edx,eax
  41c8bb:	std    
  41c8bc:	mov    ds:0x6e1f306e,al
  41c8c1:	out    0x60,al
  41c8c3:	dec    edi
  41c8c4:	ss mov eax,0xc24a34d9
  41c8ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8cb:	jecxz  0x41c8c9
  41c8cd:	xor    eax,0x5edf6ccb
  41c8d2:	push   edi
  41c8d3:	stos   DWORD PTR es:[edi],eax
  41c8d4:	push   esi
  41c8d5:	inc    edi
  41c8d6:	ret    0x2dc6
  41c8d9:	in     eax,dx
  41c8da:	fwait
  41c8db:	xchg   edx,esp
  41c8dd:	shr    DWORD PTR [ebx-0x6],1
  41c8e0:	push   edx
  41c8e1:	pusha  
  41c8e2:	lea    esp,[ebx+0x48]
  41c8e5:	pop    DWORD PTR [ecx]
  41c8e7:	sar    BYTE PTR [ebp-0x70cc095f],cl
  41c8ed:	push   0xf1e91980
  41c8f2:	mov    ds:0x78ddab91,eax
  41c8f7:	xchg   ebx,eax
  41c8f8:	mov    ecx,0x9de69a5b
  41c8fd:	and    BYTE PTR [ebx],0x4b
  41c900:	stos   BYTE PTR es:[edi],al
  41c901:	jne    0x41c892
  41c903:	push   eax
  41c904:	cdq    
  41c905:	cmp    DWORD PTR [ecx-0x73],edi
  41c908:	mov    ah,0x56
  41c90a:	icebp  
  41c90b:	xor    eax,0xb5eb9bbf
  41c910:	push   ds
  41c911:	ror    BYTE PTR [ebx+0x4a8c8b8a],0xe9
  41c918:	jns    0x41c952
  41c91a:	adc    eax,0x1f53c4dd
  41c91f:	and    bh,BYTE PTR [esi-0x56]
  41c922:	inc    ebp
  41c923:	or     al,BYTE PTR [esi-0x10]
  41c926:	dec    ebp
  41c927:	sub    esp,DWORD PTR [ecx]
  41c929:	jp     0x41c971
  41c92b:	xchg   ecx,eax
  41c92c:	scas   eax,DWORD PTR es:[edi]
  41c92d:	test   BYTE PTR [edi+0x12170e98],0x15
  41c934:	ficomp DWORD PTR [ebx]
  41c936:	gs inc ebp
  41c938:	push   eax
  41c939:	mov    al,0x1f
  41c93b:	dec    edx
  41c93c:	stos   DWORD PTR es:[edi],eax
  41c93d:	dec    ebp
  41c93e:	iret   
  41c93f:	xchg   esi,eax
  41c940:	pop    edx
  41c941:	mov    ecx,0x179ef331
  41c946:	jbe    0x41c930
  41c948:	jecxz  0x41c8dc
  41c94a:	inc    edi
  41c94b:	mov    ecx,0x2065979e
  41c950:	xor    esp,DWORD PTR [ebp+0x65f23e54]
  41c956:	pop    ecx
  41c957:	mov    WORD PTR [ecx+0x8e0aba9],?
  41c95d:	inc    ebx
  41c95e:	adc    ecx,ebp
  41c960:	mov    cl,0xf7
  41c962:	adc    ah,BYTE PTR [ebx+0x7840a73b]
  41c968:	mov    esp,0x4d923876
  41c96d:	(bad)  
  41c96e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c96f:	ficom  WORD PTR ds:0xbc6b5b64
  41c975:	sub    al,0x7
  41c977:	cmp    esp,edx
  41c979:	and    BYTE PTR ds:0xf1e5239e,al
  41c97f:	rcl    BYTE PTR [esi],0x3e
  41c982:	dec    ecx
  41c983:	mov    cl,0xd6
  41c985:	fst    DWORD PTR [ecx-0x422ccc91]
  41c98b:	cmp    ah,BYTE PTR [ebp+0x60]
  41c98e:	sahf   
  41c98f:	xchg   ebx,eax
  41c990:	or     ch,bl
  41c992:	ins    BYTE PTR es:[edi],dx
  41c993:	push   cs
  41c994:	fstp   QWORD PTR [eax+0x804fb6b]
  41c99a:	mov    ds:0x724c6d28,al
  41c99f:	call   0x2c37ae4b
  41c9a4:	push   ss
  41c9a5:	pop    esp
  41c9a6:	ja     0x41ca0f
  41c9a8:	mov    WORD PTR [edi-0x41],es
  41c9ab:	ins    DWORD PTR es:[edi],dx
  41c9ac:	daa    
  41c9ad:	fiadd  WORD PTR [edi-0x234c5950]
  41c9b3:	jg     0x41c988
  41c9b5:	popa   
  41c9b6:	jle    0x41c9a9
  41c9b8:	add    dl,bh
  41c9ba:	jbe    0x41c954
  41c9bc:	jl     0x41c9e7
  41c9be:	mov    ch,0x6c
  41c9c0:	jnp    0x41c9dc
  41c9c2:	test   al,0xd
  41c9c4:	call   0x8512:0x1ea20dff
  41c9cb:	sar    BYTE PTR [eax],cl
  41c9cd:	push   cs
  41c9ce:	lock pop esp
  41c9d0:	popa   
  41c9d1:	mov    al,ds:0x6c232b45
  41c9d6:	sub    eax,0x9d257b7b
  41c9db:	dec    ecx
  41c9dc:	sbb    ah,BYTE PTR [esi+ecx*8+0x2b]
  41c9e0:	icebp  
  41c9e1:	cmp    al,BYTE PTR [esi+0x7]
  41c9e4:	repz in al,dx
  41c9e6:	int3   
  41c9e7:	mov    esp,0x7115a8bd
  41c9ec:	fs stos DWORD PTR es:[edi],eax
  41c9ee:	das    
  41c9ef:	mov    bh,0x61
  41c9f1:	fdivrp st(0),st
  41c9f3:	mov    BYTE PTR [ecx+ecx*8],cl
  41c9f6:	ins    BYTE PTR es:[edi],dx
  41c9f7:	push   es
  41c9f8:	fistp  WORD PTR [edx]
  41c9fa:	int3   
  41c9fb:	jle    0x41ca23
  41c9fd:	imul   ebp,esp,0xffffff98
  41ca00:	addr16 loope 0x41c9f9
  41ca03:	scas   eax,DWORD PTR es:[edi]
  41ca04:	nop
  41ca05:	pusha  
  41ca06:	lods   eax,DWORD PTR ds:[esi]
  41ca07:	push   0xc5ffd079
  41ca0c:	inc    ecx
  41ca0d:	cmp    DWORD PTR [eax],edx
  41ca0f:	scas   eax,DWORD PTR es:[edi]
  41ca10:	in     eax,0x9b
  41ca12:	xchg   ebp,eax
  41ca13:	aam    0xea
  41ca15:	jbe    0x41ca04
  41ca17:	clc    
  41ca18:	inc    ebp
  41ca19:	or     eax,0xe90f024c
  41ca1e:	jg     0x41ca79
  41ca20:	nop
  41ca21:	cwde   
  41ca22:	inc    edx
  41ca23:	mov    ebx,0x90218525
  41ca28:	rcr    DWORD PTR [ebx],1
  41ca2a:	sar    BYTE PTR [ebp+0x1d],cl
  41ca2d:	clc    
  41ca2e:	out    dx,eax
  41ca2f:	stos   BYTE PTR es:[edi],al
  41ca30:	dec    edx
  41ca31:	ins    BYTE PTR es:[edi],dx
  41ca32:	xchg   edx,eax
  41ca33:	xor    eax,0xba103cb9
  41ca38:	xchg   ecx,eax
  41ca39:	scas   eax,DWORD PTR es:[edi]
  41ca3a:	test   eax,edi
  41ca3c:	dec    eax
  41ca3d:	inc    edx
  41ca3e:	xchg   ecx,eax
  41ca3f:	inc    ebp
  41ca40:	mov    DWORD PTR [ecx+0x713ebe91],eax
  41ca46:	aad    0x7e
  41ca48:	(bad)  
  41ca49:	jle    0x41ca31
  41ca4b:	(bad)  
  41ca4c:	jno    0x41ca7f
  41ca4e:	frstor [esi]
  41ca50:	in     eax,dx
  41ca51:	inc    ebp
  41ca52:	cli    
  41ca53:	ror    DWORD PTR [ecx],0x9
  41ca56:	adc    BYTE PTR [edi],dh
  41ca58:	popf   
  41ca59:	push   0xb8feed03
  41ca5e:	inc    esi
  41ca5f:	in     eax,dx
  41ca60:	adc    al,0xc1
  41ca62:	jbe    0x41ca55
  41ca64:	mov    ebx,0x23f9ff2e
  41ca69:	into   
  41ca6a:	add    BYTE PTR ds:0xca62afba,cl
  41ca70:	push   eax
  41ca71:	adc    dh,BYTE PTR [eax]
  41ca73:	inc    eax
  41ca74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca75:	pop    ecx
  41ca76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca77:	push   es
  41ca78:	jmp    0x5585f6c5
  41ca7d:	push   es
  41ca7e:	inc    edx
  41ca7f:	fiadd  WORD PTR [ecx-0x25]
  41ca82:	push   edi
  41ca83:	scas   eax,DWORD PTR es:[edi]
  41ca84:	fistp  WORD PTR [edi+0x2a66c4bf]
  41ca8a:	sub    edi,DWORD PTR [edi]
  41ca8c:	test   eax,0x860828ca
  41ca91:	call   0x5f13:0xcc0cb0ad
  41ca98:	addr16 repnz inc edi
  41ca9b:	imul   ebx,DWORD PTR [edi],0xd39cbc73
  41caa1:	arpl   si,bp
  41caa3:	fwait
  41caa4:	adc    eax,0xa662cb04
  41caa9:	adc    BYTE PTR [edi],bh
  41caab:	push   0x91f7e8
  41cab0:	std    
  41cab1:	(bad)  
  41cab2:	sub    al,0xdd
  41cab4:	mov    bl,0x4c
  41cab6:	inc    edi
  41cab7:	push   ds
  41cab8:	fisubr WORD PTR [eax]
  41caba:	inc    esi
  41cabb:	es dec edi
  41cabd:	test   edx,edx
  41cabf:	xor    dh,BYTE PTR [eax+ebp*1-0x1e]
  41cac3:	into   
  41cac4:	mov    ds:0x3861d033,al
  41cac9:	mov    al,0x33
  41cacb:	imul   esp,DWORD PTR [ebx-0xd35ac1d],0x5663a0ba
  41cad5:	test   DWORD PTR ds:0x71109c7,eax
  41cadb:	xor    BYTE PTR [ebx+0x25],bh
  41cade:	imul   esi,DWORD PTR [esi],0x56
  41cae1:	test   al,0xf6
  41cae3:	dec    eax
  41cae4:	dec    edi
  41cae5:	adc    al,0x3a
  41cae7:	aas    
  41cae8:	mov    WORD PTR [eax+0xdbd2f28],?
  41caee:	ins    DWORD PTR es:[edi],dx
  41caef:	mov    esp,0x4dc8028e
  41caf4:	push   esp
  41caf5:	xchg   BYTE PTR [ebx+0x66a9982e],al
  41cafb:	xchg   esi,eax
  41cafc:	popa   
  41cafd:	jae    0x41cb6b
  41caff:	and    eax,0xa7cde44a
  41cb04:	(bad)  
  41cb05:	cmc    
  41cb06:	ficom  WORD PTR [ebp-0x43]
  41cb09:	mov    ah,0x88
  41cb0b:	ins    BYTE PTR es:[edi],dx
  41cb0c:	cmp    DWORD PTR [ebp+0xfc35e63],ebx
  41cb12:	mov    edi,0xfa72eb77
  41cb17:	aam    0xe9
  41cb19:	js     0x41cb48
  41cb1b:	call   0xbafb2207
  41cb20:	mov    edx,0x5e1e3358
  41cb25:	mov    db2,ebx
  41cb28:	xor    al,0x63
  41cb2a:	sub    al,0xf3
  41cb2c:	mov    ah,0x9e
  41cb2e:	scas   al,BYTE PTR es:[edi]
  41cb2f:	test   DWORD PTR [eax+0x49],eax
  41cb32:	mov    ds:0xaefd8a5f,eax
  41cb37:	inc    ecx
  41cb38:	sub    eax,0x92dd94ae
  41cb3d:	pop    ss
  41cb3e:	imul   eax,DWORD PTR [esi-0x3a],0x610c6621
  41cb45:	adc    edi,DWORD PTR ds:0x4a6890e
  41cb4b:	aad    0x41
  41cb4d:	xchg   BYTE PTR [ecx+0x6d],dh
  41cb50:	imul   esi,DWORD PTR [edx],0xffffffe6
  41cb53:	fcmovnu st,st(2)
  41cb55:	pop    edi
  41cb56:	mov    WORD PTR [ecx*1+0x705ed7a3],gs
  41cb5d:	push   ss
  41cb5e:	out    0x88,al
  41cb60:	test   al,0x72
  41cb62:	out    dx,al
  41cb63:	push   cs
  41cb64:	out    dx,al
  41cb65:	in     al,dx
  41cb66:	jmp    0x96f27848
  41cb6b:	mov    esi,?
  41cb6d:	mov    edx,0x63b9f7d
  41cb72:	cmp    al,0xc9
  41cb74:	and    DWORD PTR ds:0xbf61a96c,eax
  41cb7a:	test   al,0xdb
  41cb7c:	jno    0x41cb39
  41cb7e:	aad    0xf2
  41cb80:	pop    ds
  41cb81:	test   eax,0x214d1ebc
  41cb86:	ds mov ebp,edi
  41cb89:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41cb8b:	clc    
  41cb8c:	cmp    esp,edi
  41cb8e:	xor    eax,0xd50e9abf
  41cb93:	lahf   
  41cb94:	pop    edx
  41cb95:	pop    edx
  41cb96:	xor    al,0xd
  41cb98:	aam    0x39
  41cb9a:	add    dh,0x86
  41cb9d:	jb     0x41cbdf
  41cb9f:	pop    edx
  41cba0:	jg     0x41cb68
  41cba2:	aam    0x11
  41cba4:	push   esi
  41cba5:	xchg   esp,eax
  41cba6:	push   ss
  41cba7:	dec    edx
  41cba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cba9:	cmp    esp,esp
  41cbab:	cwde   
  41cbac:	fwait
  41cbad:	mov    dh,0x7c
  41cbaf:	add    esp,ebp
  41cbb1:	mov    bl,0xbf
  41cbb3:	xchg   esi,eax
  41cbb4:	adc    esp,esi
  41cbb6:	call   0xc970:0xc0e4c891
  41cbbd:	pop    ebx
  41cbbe:	mov    eax,0x22a0c90e
  41cbc3:	adc    al,dh
  41cbc5:	aad    0xa4
  41cbc7:	mov    al,ds:0xec947a
  41cbcc:	and    al,0x79
  41cbce:	test   eax,0x63a7735
  41cbd3:	sbb    eax,0x1d23e1ba
  41cbd8:	addr16 out dx,al
  41cbda:	xchg   DWORD PTR [edx+edx*1],edx
  41cbdd:	mov    edi,0x1a66f2d7
  41cbe2:	pop    esp
  41cbe3:	mov    esi,0xd841bbbc
  41cbe8:	jge    0x41cbdf
  41cbea:	in     eax,dx
  41cbeb:	arpl   bx,bx
  41cbed:	cwde   
  41cbee:	fs mov DWORD PTR ds:[ebx-0x32],esi
  41cbf3:	fisub  WORD PTR [eax]
  41cbf5:	loop   0x41cbe8
  41cbf7:	mov    es,WORD PTR [ecx-0xe8c450b]
  41cbfd:	xchg   esp,eax
  41cbfe:	shl    DWORD PTR [edi-0x11],0xa5
  41cc02:	cmp    BYTE PTR [esi+0x7a],bh
  41cc05:	add    dl,dl
  41cc07:	lock aas 
  41cc09:	add    esi,eax
  41cc0b:	inc    eax
  41cc0c:	xchg   esi,eax
  41cc0d:	xchg   edx,eax
  41cc0e:	mov    edx,DWORD PTR [edi+0x7e98978c]
  41cc14:	(bad)  
  41cc15:	jle    0x41cc4e
  41cc17:	and    DWORD PTR [ebx],edi
  41cc19:	pop    es
  41cc1a:	jecxz  0x41cbbd
  41cc1c:	sbb    ecx,esi
  41cc1e:	jecxz  0x41cbb8
  41cc20:	xchg   esp,eax
  41cc21:	(bad)  
  41cc22:	mov    ch,0x1b
  41cc24:	adc    eax,DWORD PTR [ecx+edi*8+0x95214c7]
  41cc2b:	xchg   ebx,eax
  41cc2c:	jno    0x41cc86
  41cc2e:	inc    esp
  41cc2f:	int3   
  41cc30:	ret    0x9894
  41cc33:	xlat   BYTE PTR ds:[ebx]
  41cc34:	xor    esi,DWORD PTR [esp+eiz*8+0x59]
  41cc38:	iret   
  41cc39:	sti    
  41cc3a:	outs   dx,DWORD PTR ds:[esi]
  41cc3b:	int3   
  41cc3c:	jg     0x41cc4f
  41cc3e:	lods   al,BYTE PTR ss:[esi]
  41cc40:	rcl    BYTE PTR [edi],0xf8
  41cc43:	out    dx,al
  41cc44:	je     0x41cc15
  41cc46:	cli    
  41cc47:	dec    esp
  41cc48:	sub    al,0x5b
  41cc4a:	inc    ecx
  41cc4b:	sub    eax,0xe5cbc66c
  41cc50:	rcl    BYTE PTR [esi],1
  41cc52:	inc    esi
  41cc53:	fnstenv ds:0x7d12f16e
  41cc59:	test   eax,0x9fe00bed
  41cc5e:	push   ebx
  41cc5f:	inc    edx
  41cc60:	sahf   
  41cc61:	xor    al,0x45
  41cc63:	add    ecx,eax
  41cc65:	adc    al,0xd
  41cc67:	pop    es
  41cc68:	fsubrp st(6),st
  41cc6a:	jg     0x41cbf7
  41cc6c:	and    dh,BYTE PTR [ebp-0x236561c]
  41cc72:	adc    dl,BYTE PTR [esp+esi*4-0x6d]
  41cc76:	mov    dl,0x56
  41cc78:	adc    ebx,DWORD PTR [ebx-0x5c]
  41cc7b:	adc    ebx,eax
  41cc7d:	dec    ebx
  41cc7e:	mov    edx,DWORD PTR [edx-0x6c]
  41cc81:	mov    ah,0x41
  41cc83:	arpl   WORD PTR [eax+0x64350ab1],dx
  41cc89:	and    dh,BYTE PTR [edx+ebp*1+0xd]
  41cc8d:	mov    DWORD PTR fs:[ebp+0x14],esi
  41cc91:	dec    ebp
  41cc92:	test   BYTE PTR [ebx+ecx*8],al
  41cc95:	add    BYTE PTR [edx+0x2c],dl
  41cc98:	es pop ds
  41cc9a:	push   ss
  41cc9b:	sbb    dh,BYTE PTR [esi]
  41cc9d:	leave  
  41cc9e:	push   0x6f1e14d2
  41cca3:	stc    
  41cca4:	(bad)  
  41cca5:	mov    bl,0x15
  41cca7:	lock sbb BYTE PTR [ebx],ch
  41ccaa:	and    ax,0x5db3
  41ccae:	push   ebp
  41ccaf:	cmp    BYTE PTR ds:0xa38e0a3b,al
  41ccb5:	fistp  DWORD PTR [edi]
  41ccb7:	jns    0x41cc6b
  41ccb9:	or     al,0xd5
  41ccbb:	push   es
  41ccbc:	rol    DWORD PTR [ebx],cl
  41ccbe:	mov    ah,dh
  41ccc0:	lods   eax,DWORD PTR ds:[esi]
  41ccc1:	es jmp 0xab314639
  41ccc7:	jle    0x41cc75
  41ccc9:	xchg   ecx,eax
  41ccca:	and    al,0xa5
  41cccc:	dec    ebx
  41cccd:	cmp    al,0x68
  41cccf:	repnz dec esp
  41ccd1:	stos   BYTE PTR es:[edi],al
  41ccd2:	lock cmp eax,0xfd9b1e35
  41ccd8:	add    eax,0xb6217341
  41ccdd:	mov    eax,0xf86d492e
  41cce2:	pop    ebx
  41cce3:	inc    edx
  41cce4:	fndisi(8087 only) 
  41cce6:	stc    
  41cce7:	cmp    DWORD PTR [edi+0x2524d39c],esi
  41cced:	sbb    eax,0xbb4b9c12
  41ccf2:	push   0xffffffa9
  41ccf4:	and    eax,0xa96c9470
  41ccf9:	dec    edi
  41ccfa:	xchg   ebp,eax
  41ccfb:	sbb    dh,BYTE PTR [ebp+0x329cd4f3]
  41cd01:	test   eax,0xb33ef408
  41cd06:	or     eax,0x999e0fbd
  41cd0b:	xchg   ebp,eax
  41cd0c:	test   al,0xa
  41cd0e:	or     eax,0xeadcafc4
  41cd13:	iret   
  41cd14:	into   
  41cd15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd16:	jecxz  0x41cd32
  41cd18:	jmp    FWORD PTR [edx-0x12]
  41cd1b:	arpl   WORD PTR [ecx],bp
  41cd1d:	addr16 dec esi
  41cd1f:	mov    ?,WORD PTR [edx+0x24ce287f]
  41cd25:	xchg   DWORD PTR [ebx+0x62939ef8],esp
  41cd2b:	ss aaa 
  41cd2d:	xor    eax,0x621c79f0
  41cd32:	inc    edi
  41cd33:	daa    
  41cd34:	inc    esi
  41cd35:	cmp    DWORD PTR [eax],0xf07d041b
  41cd3b:	and    bh,ch
  41cd3d:	push   eax
  41cd3e:	xor    DWORD PTR [eax],esp
  41cd40:	lods   eax,DWORD PTR ds:[esi]
  41cd41:	vpunpckhqdq xmm5,xmm2,XMMWORD PTR [ecx]
  41cd45:	and    al,0xe5
  41cd47:	push   ebp
  41cd48:	stos   BYTE PTR es:[edi],al
  41cd49:	mov    DWORD PTR [edi],esp
  41cd4b:	jg     0x41cd5e
  41cd4d:	mov    dl,0xa9
  41cd4f:	inc    edi
  41cd50:	jecxz  0x41cdc1
  41cd52:	into   
  41cd53:	call   0x4b6b:0x6b5b404f
  41cd5a:	xchg   ebx,eax
  41cd5b:	fs in  al,0x51
  41cd5e:	pop    ds
  41cd5f:	sahf   
  41cd60:	xchg   edx,eax
  41cd61:	inc    edx
  41cd62:	adc    al,0xc
  41cd64:	call   0xab77:0x8106711a
  41cd6b:	popa   
  41cd6c:	jb     0x41cd65
  41cd6e:	xchg   edx,eax
  41cd6f:	cmc    
  41cd70:	sbb    DWORD PTR [edi],ebp
  41cd72:	dec    ebx
  41cd73:	stos   DWORD PTR es:[edi],eax
  41cd74:	sbb    eax,0x9c4705e
  41cd79:	jle    0x41cd71
  41cd7b:	std    
  41cd7c:	adc    al,bl
  41cd7e:	mov    ecx,0xb3683242
  41cd83:	fldenv [ebx]
  41cd85:	or     al,0x45
  41cd87:	pop    ecx
  41cd88:	cmp    BYTE PTR [eax],0xdb
  41cd8b:	mov    ebp,0x122cf267
  41cd90:	dec    ebp
  41cd91:	jno    0x41cd54
  41cd93:	shl    BYTE PTR [edi-0x28ca0ef2],1
  41cd99:	call   0xe01b:0x27119024
  41cda0:	adc    DWORD PTR [esi+0x13],esp
  41cda3:	jnp    0x41cdd9
  41cda5:	mov    dl,0x81
  41cda7:	loopne 0x41cdf7
  41cda9:	mov    ds:0x4c175221,eax
  41cdae:	and    al,0x66
  41cdb0:	cwde   
  41cdb1:	ins    BYTE PTR es:[edi],dx
  41cdb2:	pop    esp
  41cdb3:	and    ah,BYTE PTR [edx-0x39ef56c9]
  41cdb9:	dec    esi
  41cdba:	mov    dl,0x3f
  41cdbc:	pop    es
  41cdbd:	cmp    eax,0xc7b71f7f
  41cdc2:	ja     0x41cdc1
  41cdc4:	es sahf 
  41cdc6:	loope  0x41cdee
  41cdc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdc9:	sbb    ebx,DWORD PTR [ecx-0xe1ac759]
  41cdcf:	add    ah,0xbd
  41cdd2:	inc    edx
  41cdd3:	sar    edi,0x7f
  41cdd6:	sbb    eax,0x6a3e692d
  41cddb:	inc    edi
  41cddc:	popf   
  41cddd:	add    BYTE PTR [ebx],dh
  41cddf:	cmp    eax,0x753a156
  41cde4:	sub    al,0x8b
  41cde6:	jns    0x41ce64
  41cde8:	fbstp  TBYTE PTR [edx-0x2e]
  41cdeb:	pop    ss
  41cdec:	sbb    eax,0x46bf62f8
  41cdf1:	pop    ebx
  41cdf2:	(bad)  
  41cdf3:	and    BYTE PTR [edi+0x5],dh
  41cdf6:	ja     0x41cd90
  41cdf8:	sti    
  41cdf9:	ds (bad) 
  41cdfb:	out    dx,eax
  41cdfc:	dec    eax
  41cdfd:	test   eax,0xe50a4a72
  41ce02:	aaa    
  41ce03:	out    0x88,eax
  41ce05:	retf   0x700
  41ce08:	and    edi,edx
  41ce0a:	aas    
  41ce0b:	call   0xcb89:0x5fffab44
  41ce12:	jns    0x41cdbe
  41ce14:	and    edi,0xffffff84
  41ce17:	rol    BYTE PTR [ebp+0x13],0xfe
  41ce1b:	std    
  41ce1c:	push   edx
  41ce1d:	sub    BYTE PTR [edx-0x859f3b3],bl
  41ce23:	inc    eax
  41ce24:	frstor ds:0x8c04926e
  41ce2a:	adc    al,0x7
  41ce2c:	mov    ebp,0x904e6c8a
  41ce31:	jnp    0x41cdcb
  41ce33:	shr    BYTE PTR [edx-0x63d98887],1
  41ce39:	fcomp  QWORD PTR [esi]
  41ce3b:	jbe    0x41ce0f
  41ce3d:	adc    al,0x19
  41ce3f:	arpl   WORD PTR fs:[ebp-0x4e],bp
  41ce43:	jle    0x41ce1e
  41ce45:	jbe    0x41cdd3
  41ce47:	jne    0x41cdf2
  41ce49:	scas   al,BYTE PTR es:[edi]
  41ce4a:	pop    ss
  41ce4b:	dec    ecx
  41ce4c:	push   cs
  41ce4d:	jno    0x41ce67
  41ce4f:	lock sub al,0x5b
  41ce52:	mov    al,ds:0xa835c273
  41ce57:	(bad)  [ebx-0x130a626e]
  41ce5d:	js     0x41ce0a
  41ce5f:	or     ebx,DWORD PTR [esi-0x3a]
  41ce62:	push   ecx
  41ce63:	js     0x41ce64
  41ce65:	ret    
  41ce66:	fsubrp st(3),st
  41ce68:	fstp   QWORD PTR [ecx]
  41ce6a:	aas    
  41ce6b:	or     al,0xfe
  41ce6d:	cmp    BYTE PTR [edx+0x3c8cd3cf],ah
  41ce73:	xor    BYTE PTR [edi+esi*8],0x95
  41ce77:	ja     0x41cee0
  41ce79:	jp     0x41cebc
  41ce7b:	fild   QWORD PTR [ecx+0x3e957a09]
  41ce81:	mov    ebx,0xd84a7078
  41ce86:	add    ebp,DWORD PTR [ecx+0x51]
  41ce89:	and    eax,0xcff43a74
  41ce8e:	xchg   BYTE PTR [edi],bh
  41ce90:	adc    ch,BYTE PTR [ecx]
  41ce92:	sbb    al,0x68
  41ce94:	or     ecx,DWORD PTR [eax]
  41ce96:	rcl    BYTE PTR [esi-0x3a4a5aca],cl
  41ce9c:	push   edi
  41ce9d:	cmc    
  41ce9e:	nop
  41ce9f:	inc    esp
  41cea0:	ins    BYTE PTR es:[edi],dx
  41cea1:	retf   0x24fc
  41cea4:	xchg   esp,eax
  41cea5:	iret   
  41cea6:	pop    esp
  41cea7:	inc    edx
  41cea8:	ins    DWORD PTR es:[edi],dx
  41cea9:	xlat   BYTE PTR ds:[ebx]
  41ceaa:	ja     0x41ce5a
  41ceac:	pop    esi
  41cead:	jno    0x41ce40
  41ceaf:	adc    BYTE PTR [edi],ah
  41ceb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ceb2:	stos   BYTE PTR es:[edi],al
  41ceb3:	add    eax,0xe508b6d7
  41ceb8:	int    0x0
  41ceba:	scas   al,BYTE PTR es:[edi]
  41cebb:	ret    
  41cebc:	jne    0x41ce91
  41cebe:	aas    
  41cebf:	xor    BYTE PTR [esi],0xbe
  41cec2:	das    
  41cec3:	xor    DWORD PTR ds:0x9744f528,esi
  41cec9:	ret    
  41ceca:	int    0xe6
  41cecc:	sbb    al,0x31
  41cece:	enter  0x4c3,0x84
  41ced2:	or     DWORD PTR [ebx-0x406dbbc7],edx
  41ced8:	mov    dl,0xe0
  41ceda:	xor    cl,BYTE PTR [eax-0x59cd5158]
  41cee0:	stos   BYTE PTR es:[edi],al
  41cee1:	pop    ebx
  41cee2:	hlt    
  41cee3:	or     cl,al
  41cee5:	and    eax,DWORD PTR [ebx]
  41cee7:	mov    ebp,DWORD PTR [edx+0x2d]
  41ceea:	inc    eax
  41ceeb:	fild   QWORD PTR [eax]
  41ceed:	push   ecx
  41ceee:	repz and esi,edx
  41cef1:	cmc    
  41cef2:	mov    dl,0x2e
  41cef4:	mov    ds:0x149ec460,al
  41cef9:	hlt    
  41cefa:	bnd jbe 0x41ce80
  41cefd:	jno    0x41ceb7
  41ceff:	popa   
  41cf00:	mov    ecx,0x784b450c
  41cf05:	ucomiss xmm6,xmm2
  41cf08:	in     eax,0x2
  41cf0a:	or     BYTE PTR [ebx+eax*2+0x31cfcf6b],0x86
  41cf12:	xchg   ecx,eax
  41cf13:	leave  
  41cf14:	loopne 0x41ceb7
  41cf16:	push   edi
  41cf17:	mov    ah,0x26
  41cf19:	pop    esp
  41cf1a:	and    esi,DWORD PTR [ebx]
  41cf1c:	mov    bh,0xbd
  41cf1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf1f:	hlt    
  41cf20:	cmp    DWORD PTR [esi],esp
  41cf22:	dec    esp
  41cf23:	xchg   ecx,eax
  41cf24:	daa    
  41cf25:	sub    eax,0x7a2b3d45
  41cf2a:	stos   DWORD PTR es:[edi],eax
  41cf2b:	call   0x8c7a:0x51608afa
  41cf32:	mov    DWORD PTR [ecx],ecx
  41cf34:	push   ecx
  41cf35:	pushf  
  41cf36:	loopne 0x41cf7f
  41cf38:	mov    al,ds:0x6f2dfa58
  41cf3d:	pusha  
  41cf3e:	sub    eax,0xffaf14bd
  41cf43:	pop    ebx
  41cf44:	retf   
  41cf45:	mov    al,ds:0x29861f59
  41cf4a:	scas   eax,DWORD PTR es:[edi]
  41cf4b:	test   al,0x8e
  41cf4d:	lahf   
  41cf4e:	cmp    bl,BYTE PTR [esi-0x5e46dd68]
  41cf54:	xor    edi,ecx
  41cf56:	rcr    esp,cl
  41cf58:	sub    bh,BYTE PTR [edx+ebp*8]
  41cf5b:	fadd   DWORD PTR [esp+ecx*2]
  41cf5e:	push   0xffffffbf
  41cf60:	sti    
  41cf61:	scas   al,BYTE PTR es:[edi]
  41cf62:	push   cs
  41cf63:	int3   
  41cf64:	sbb    edi,DWORD PTR [esi+0x32]
  41cf67:	xchg   DWORD PTR [ebx],edx
  41cf69:	mov    ah,0x51
  41cf6b:	pop    edi
  41cf6c:	scas   eax,DWORD PTR es:[edi]
  41cf6d:	sbb    BYTE PTR [ecx],dh
  41cf6f:	push   edx
  41cf70:	lds    edi,FWORD PTR ds:0x31a8bb08
  41cf76:	mov    esi,0x1948b76a
  41cf7b:	push   ds
  41cf7c:	mov    ds:0x614eed85,al
  41cf81:	add    ch,BYTE PTR [esi+ebx*4-0x44]
  41cf85:	ins    BYTE PTR es:[edi],dx
  41cf86:	arpl   WORD PTR [esi+0x21],cx
  41cf89:	jbe    0x41cf6a
  41cf8b:	mov    dh,0x55
  41cf8d:	in     al,0xf8
  41cf8f:	cwde   
  41cf90:	or     edi,esp
  41cf92:	jo     0x41cfe5
  41cf94:	out    0xac,al
  41cf96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf97:	jno    0x41d011
  41cf99:	int3   
  41cf9a:	ret    0x1aa7
  41cf9d:	sub    esp,DWORD PTR [ebx+eiz*2]
  41cfa0:	cmp    eax,0x783993e8
  41cfa5:	jmp    0x41cfb2
  41cfa7:	push   ebx
  41cfa8:	xor    eax,0x5b4d6cd4
  41cfad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfae:	pop    edi
  41cfaf:	lods   al,BYTE PTR ds:[esi]
  41cfb0:	aam    0xf8
  41cfb2:	jecxz  0x41cf7d
  41cfb4:	mov    al,0x60
  41cfb6:	outs   dx,DWORD PTR ds:[esi]
  41cfb7:	jnp    0x41d030
  41cfb9:	jmp    0xedc539fb
  41cfbe:	mov    ds:0x4b3ef18e,al
  41cfc3:	ins    DWORD PTR es:[edi],dx
  41cfc4:	add    edx,ebp
  41cfc6:	adc    BYTE PTR ds:0xdc665218,bl
  41cfcc:	jmp    0x41d000
  41cfce:	leave  
  41cfcf:	imul   ecx,edx,0xa4cf317d
  41cfd5:	dec    edx
  41cfd6:	imul   esi,edx,0x18
  41cfd9:	fsubr  st(0),st
  41cfdb:	popa   
  41cfdc:	xchg   esi,eax
  41cfdd:	mov    ds:0xb01a114a,al
  41cfe2:	xchg   edx,eax
  41cfe3:	call   0x17d4:0x560baf34
  41cfea:	mov    ecx,esp
  41cfec:	sbb    eax,edx
  41cfee:	cmc    
  41cfef:	fwait
  41cff0:	cmc    
  41cff1:	in     al,0x5
  41cff3:	not    ebp
  41cff5:	loop   0x41d025
  41cff7:	les    edi,FWORD PTR cs:[esi]
  41cffa:	out    0xd7,eax
  41cffc:	xor    esp,DWORD PTR [edi-0x659722f8]
  41d002:	lds    ebx,FWORD PTR [eax]
  41d004:	mov    ebx,0x69d80b5b
  41d009:	or     ah,dh
  41d00b:	sbb    BYTE PTR [esi],cl
  41d00d:	ret    
  41d00e:	mov    BYTE PTR [edx],ah
  41d010:	add    ch,bl
  41d012:	outs   dx,DWORD PTR ds:[esi]
  41d013:	and    BYTE PTR [esi],cl
  41d015:	aad    0xff
  41d017:	sbb    ch,BYTE PTR [eax-0x51]
  41d01a:	xlat   BYTE PTR ds:[ebx]
  41d01b:	xchg   esi,eax
  41d01c:	push   eax
  41d01d:	(bad)  
  41d01e:	adc    esp,DWORD PTR [edi+0x56fac37]
  41d024:	jge    0x41cfce
  41d026:	fcom   QWORD PTR [esi]
  41d028:	daa    
  41d029:	mov    bh,BYTE PTR [eax+0x5]
  41d02c:	mov    ds:0xafecf5ee,eax
  41d031:	sbb    DWORD PTR [edx],ebp
  41d033:	enter  0x698,0x1a
  41d037:	fisubr DWORD PTR [edi]
  41d039:	retf   
  41d03a:	test   BYTE PTR [eax+0x12],bl
  41d03d:	cmp    BYTE PTR [edx],0xe9
  41d040:	or     DWORD PTR [edi+0x9],edx
  41d043:	inc    ecx
  41d044:	(bad)  
  41d045:	fisttp DWORD PTR [ebx+0xf]
  41d048:	push   edi
  41d049:	lds    edx,FWORD PTR [edi+0x57]
  41d04c:	loop   0x41d0b6
  41d04e:	push   ss
  41d04f:	out    0xf2,al
  41d051:	stc    
  41d052:	sbb    edi,ebx
  41d054:	xor    al,0x4e
  41d056:	cmp    esp,DWORD PTR [ecx]
  41d058:	sahf   
  41d059:	(bad)  
  41d05a:	cs xchg cl,dl
  41d05d:	in     eax,0x40
  41d05f:	or     eax,0xdbf2b502
  41d064:	ffreep st(7)
  41d066:	dec    eax
  41d067:	and    al,0xaa
  41d069:	mov    edi,DWORD PTR [eax+0x583856fa]
  41d06f:	cli    
  41d070:	fwait
  41d071:	ds xor dh,0x3e
  41d075:	mov    edx,0x7634ad2c
  41d07a:	pop    ecx
  41d07b:	mov    DWORD PTR [edi+edx*1],0x4a4e7d
  41d082:	push   esp
  41d083:	add    eax,0x21a9b3bd
  41d088:	shl    DWORD PTR [edi+0x13f7b094],1
  41d08e:	repz (bad) 
  41d090:	into   
  41d091:	mov    edx,DWORD PTR [esi+0x62a52e8f]
  41d097:	iret   
  41d098:	ror    DWORD PTR [edx+0x2e],0xd5
  41d09c:	ret    
  41d09d:	and    eax,0xa38ce70a
  41d0a2:	xchg   edi,eax
  41d0a3:	test   DWORD PTR [edx+0x28dcf51a],edx
  41d0a9:	sbb    eax,0x2b877cc
  41d0ae:	dec    esp
  41d0af:	xchg   ebp,eax
  41d0b0:	jecxz  0x41d112
  41d0b2:	sbb    DWORD PTR [edx-0x57],esp
  41d0b5:	sti    
  41d0b6:	sbb    al,0x23
  41d0b8:	pushf  
  41d0b9:	leave  
  41d0ba:	xchg   edx,eax
  41d0bb:	cld    
  41d0bc:	jb     0x41d0eb
  41d0be:	out    0x76,al
  41d0c0:	add    ebp,DWORD PTR [eax-0x19]
  41d0c3:	jecxz  0x41d0fb
  41d0c5:	sub    ah,BYTE PTR [ecx-0x7d]
  41d0c8:	out    0x7d,eax
  41d0ca:	dec    ebp
  41d0cb:	fisub  WORD PTR [esp+edi*4]
  41d0ce:	push   eax
  41d0cf:	add    bl,BYTE PTR [edi+esi*4]
  41d0d2:	loop   0x41d08d
  41d0d4:	ret    
  41d0d5:	lea    eax,[eax-0x69f4a0e0]
  41d0db:	(bad)  
  41d0dc:	pop    esp
  41d0dd:	repnz dec esp
  41d0df:	icebp  
  41d0e0:	dec    edi
  41d0e1:	mov    edi,0xb1bb2861
  41d0e6:	push   0xffffffb8
  41d0e8:	loopne 0x41d075
  41d0ea:	pop    ebx
  41d0eb:	mov    esi,0xe8eb0d5a
  41d0f0:	mov    ch,0xdb
  41d0f2:	cmp    bh,BYTE PTR [edi-0x940480e]
  41d0f8:	lds    ecx,FWORD PTR [edi+0x6ceb6deb]
  41d0fe:	cmp    eax,0xcd336dcf
  41d103:	jae    0x41d174
  41d105:	lds    esp,FWORD PTR [edx-0x35]
  41d108:	push   edx
  41d109:	xchg   ecx,eax
  41d10a:	push   ebp
  41d10b:	jo     0x41d120
  41d10d:	push   ecx
  41d10e:	mov    bh,cl
  41d110:	idiv   bl
  41d112:	test   eax,0x96cf33db
  41d117:	pop    eax
  41d118:	scas   eax,DWORD PTR es:[edi]
  41d119:	ret    
  41d11a:	fistp  QWORD PTR [ebx-0x19]
  41d11d:	add    eax,0xf3b3b5c
  41d122:	xor    DWORD PTR [ecx+0x5b1df7e0],ebp
  41d128:	xor    al,0xda
  41d12a:	jmp    0x41d106
  41d12c:	(bad)  
  41d12d:	leave  
  41d12e:	nop
  41d12f:	xor    BYTE PTR [eax-0x18],cl
  41d132:	leave  
  41d133:	and    eax,0x3046ce1e
  41d138:	push   0x62
  41d13a:	sub    ecx,ebx
  41d13c:	xor    DWORD PTR [ecx-0x10],esi
  41d13f:	inc    ecx
  41d140:	mov    edx,0xd00bafb0
  41d145:	mov    esi,0xae885c32
  41d14a:	hlt    
  41d14b:	mov    edi,0x86a27282
  41d150:	pop    ebp
  41d151:	stos   DWORD PTR es:[edi],eax
  41d152:	jb     0x41d130
  41d154:	dec    eax
  41d155:	or     al,0xa3
  41d157:	ins    DWORD PTR es:[edi],dx
  41d158:	mov    ds:0xc58a8958,al
  41d15d:	xor    eax,0x2d7602fb
  41d162:	jle    0x41d174
  41d164:	jecxz  0x41d10c
  41d166:	mov    esi,0x89ea2c72
  41d16b:	inc    esi
  41d16c:	sub    ch,BYTE PTR [esi+0x7]
  41d16f:	mov    ch,0x9b
  41d171:	ret    0xfdbd
  41d174:	ss push 0xffffff91
  41d177:	les    ebp,FWORD PTR ds:0xaaddc74e
  41d17d:	add    dh,bl
  41d17f:	adc    ah,cl
  41d181:	xor    BYTE PTR [edx],bl
  41d183:	mov    al,ds:0x7149d059
  41d188:	addr16 jb 0x41d1c0
  41d18b:	inc    ecx
  41d18c:	fadd   QWORD PTR [ebx]
  41d18e:	mov    dh,0x0
  41d190:	cld    
  41d191:	aad    0xe4
  41d193:	mov    eax,DWORD PTR [ebx-0x2ca4940a]
  41d199:	adc    eax,DWORD PTR [esi-0x63]
  41d19c:	and    bh,bh
  41d19e:	mov    DWORD PTR [edi+0x21],eax
  41d1a1:	test   al,0xc4
  41d1a3:	mov    edi,0x47efaae1
  41d1a8:	lds    esp,FWORD PTR [esi-0x1f9e2155]
  41d1ae:	es jle 0x41d1c6
  41d1b1:	xor    BYTE PTR [edi-0x41b1da2f],bl
  41d1b7:	cld    
  41d1b8:	les    ebx,FWORD PTR [ebp+0x5c5e4cf9]
  41d1be:	or     ebp,DWORD PTR [edx-0x61]
  41d1c1:	dec    edx
  41d1c2:	enter  0xc736,0x6c
  41d1c6:	cdq    
  41d1c7:	push   ebp
  41d1c8:	sub    eax,0x334a2ae4
  41d1cd:	scas   eax,DWORD PTR es:[edi]
  41d1ce:	in     eax,0x1e
  41d1d0:	or     esi,ebp
  41d1d2:	sbb    BYTE PTR [edx+0x4c],cl
  41d1d5:	fcomi  st,st(3)
  41d1d7:	add    eax,0x266e7e71
  41d1dc:	pop    esp
  41d1dd:	into   
  41d1de:	inc    eax
  41d1df:	sti    
  41d1e0:	mov    ebp,0x22fcf1e3
  41d1e5:	das    
  41d1e6:	popf   
  41d1e7:	jno    0x41d23c
  41d1e9:	sub    al,0x7c
  41d1eb:	sub    edi,DWORD PTR [eax]
  41d1ed:	popa   
  41d1ee:	mov    eax,0x595dfbd5
  41d1f3:	out    dx,al
  41d1f4:	sub    al,0xa5
  41d1f6:	dec    eax
  41d1f7:	std    
  41d1f8:	scas   eax,DWORD PTR es:[edi]
  41d1f9:	cmp    ax,sp
  41d1fc:	adc    eax,0x2eafe8cc
  41d201:	sbb    BYTE PTR [edx],0x5b
  41d204:	mov    ebx,0x8beb43eb
  41d209:	mov    al,0x13
  41d20b:	mov    ch,0xe3
  41d20d:	jmp    0x41d275
  41d20f:	jle    0x41d28f
  41d211:	mov    esi,ds
  41d213:	fmul   DWORD PTR [eax+ecx*8+0x46]
  41d217:	add    eax,0xad6d337
  41d21c:	clc    
  41d21d:	cli    
  41d21e:	into   
  41d21f:	lods   al,BYTE PTR ds:[esi]
  41d220:	je     0x41d1d5
  41d222:	xchg   ebx,eax
  41d223:	xchg   ebp,eax
  41d224:	mov    ch,0x3c
  41d226:	dec    ebx
  41d227:	pop    esp
  41d228:	retf   
  41d229:	push   esp
  41d22a:	xor    BYTE PTR [eax-0x24],dl
  41d22d:	retf   0xce8b
  41d230:	jno    0x41d24c
  41d232:	cmp    BYTE PTR [ebx],dl
  41d234:	lds    edi,FWORD PTR [esi-0x6612ebf3]
  41d23a:	inc    ebx
  41d23b:	xor    al,0x3c
  41d23d:	repnz std 
  41d23f:	retf   0x1483
  41d242:	and    BYTE PTR [edx+ebx*8+0x3a713119],dh
  41d249:	out    0xc9,eax
  41d24b:	xor    bh,BYTE PTR [ebp+ebp*1-0x20]
  41d24f:	cmovae edi,esp
  41d252:	pop    esi
  41d253:	jo     0x41d285
  41d255:	les    edi,FWORD PTR [ecx+0xec9d70d]
  41d25b:	sbb    esi,DWORD PTR [esi]
  41d25d:	fwait
  41d25e:	cwde   
  41d25f:	adc    bl,ch
  41d261:	mov    cl,0xbc
  41d263:	and    BYTE PTR [edx+0x4582847c],bl
  41d269:	repz fnstenv [eax]
  41d26c:	sbb    DWORD PTR [edx-0x64],edi
  41d26f:	(bad)  
  41d270:	test   ebx,esp
  41d272:	and    BYTE PTR [ebp-0x3cc78f0b],0x43
  41d279:	xor    BYTE PTR [ecx-0x2e316653],dh
  41d27f:	stos   BYTE PTR es:[edi],al
  41d280:	inc    ecx
  41d281:	sub    DWORD PTR [esi+0x14],ebp
  41d284:	push   ds
  41d285:	outs   dx,DWORD PTR ds:[esi]
  41d286:	pop    ds
  41d287:	mov    cl,0x12
  41d289:	cmp    eax,DWORD PTR ds:0xdcfc609e
  41d28f:	jmp    0x41d290
  41d291:	pop    ds
  41d292:	dec    ecx
  41d293:	xchg   edx,eax
  41d294:	mov    ah,0xf4
  41d296:	cs jmp 0xa4c7:0x4ef3452d
  41d29e:	cmp    eax,ecx
  41d2a0:	dec    ebp
  41d2a1:	aas    
  41d2a2:	imul   ecx,DWORD PTR [esi-0x39b1d1ed],0xed27354e
  41d2ac:	daa    
  41d2ad:	mov    ds:0xd21d681b,al
  41d2b2:	popf   
  41d2b3:	mov    edi,eax
  41d2b5:	fiadd  DWORD PTR [edi+eax*1+0x562dfb33]
  41d2bc:	mov    al,0xa2
  41d2be:	xchg   esp,eax
  41d2bf:	dec    esi
  41d2c0:	sbb    DWORD PTR [ebp+0x20],ecx
  41d2c3:	loop   0x41d2a4
  41d2c5:	sbb    DWORD PTR [ebp-0xc],0xf1a44366
  41d2cc:	shr    BYTE PTR [ebx-0x4b757a07],0x5d
  41d2d3:	adc    eax,0x71eb14ad
  41d2d8:	pop    edx
  41d2d9:	fsubr  QWORD PTR [ebx]
  41d2db:	das    
  41d2dc:	popa   
  41d2dd:	loop   0x41d27d
  41d2df:	mov    ecx,0x805d2cc0
  41d2e4:	inc    eax
  41d2e5:	sti    
  41d2e6:	stos   DWORD PTR es:[edi],eax
  41d2e7:	mov    ebx,0x4730bee0
  41d2ec:	mov    dh,0x4c
  41d2ee:	pop    esp
  41d2ef:	mov    bh,0xc7
  41d2f1:	xchg   edi,eax
  41d2f2:	add    eax,0x4ac4d136
  41d2f7:	sbb    ebx,DWORD PTR [esi+0x2b]
  41d2fa:	pop    edx
  41d2fb:	stos   BYTE PTR es:[edi],al
  41d2fc:	lea    ebp,[ebx-0x5072f35f]
  41d302:	in     al,0xef
  41d304:	or     eax,0x1ac140f0
  41d309:	cld    
  41d30a:	fsubr  DWORD PTR [esi]
  41d30c:	cld    
  41d30d:	and    ecx,DWORD PTR [edx]
  41d30f:	jno    0x41d2e5
  41d311:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d312:	(bad)  
  41d313:	pop    esp
  41d314:	cdq    
  41d315:	sar    DWORD PTR [esi-0x5fd8a7c4],0x30
  41d31c:	arpl   WORD PTR [ecx],si
  41d31e:	pop    es
  41d31f:	xor    cl,ch
  41d321:	mov    ah,0xa3
  41d323:	xchg   esp,ebp
  41d325:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d326:	add    eax,DWORD PTR [ebp+0x361fbe99]
  41d32c:	xlat   BYTE PTR ds:[ebx]
  41d32d:	xchg   DWORD PTR [esi+ebp*1-0xc],edi
  41d331:	lea    ebx,[edi]
  41d333:	clc    
  41d334:	int    0xc4
  41d336:	call   0x91716d48
  41d33b:	xchg   DWORD PTR [eax],ecx
  41d33d:	outs   dx,DWORD PTR ds:[esi]
  41d33e:	mul    ch
  41d340:	jno    0x41d36b
  41d342:	fnstcw WORD PTR [ebp+0x10ba3d40]
  41d348:	leave  
  41d349:	lahf   
  41d34a:	cmp    al,0xe
  41d34c:	in     al,0x8e
  41d34e:	dec    esi
  41d34f:	xchg   DWORD PTR [eax+edi*1+0x14],ebx
  41d353:	fdivr  DWORD PTR [ebp-0x60]
  41d356:	mov    DWORD PTR [esi+ebp*4+0xa],edi
  41d35a:	xchg   edi,eax
  41d35b:	jl     0x41d332
  41d35d:	mov    ebp,edx
  41d35f:	mov    bh,0x88
  41d361:	cwde   
  41d362:	xchg   edx,eax
  41d363:	mov    edx,0xd48eac2d
  41d368:	or     BYTE PTR [eax-0x33],bl
  41d36b:	ds xor dh,bl
  41d36e:	xchg   ebp,ebp
  41d370:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d371:	sub    BYTE PTR [ebx+0x72],dl
  41d374:	mov    ecx,ebp
  41d376:	daa    
  41d377:	adc    eax,0xd65aa6d4
  41d37c:	dec    esi
  41d37d:	sbb    eax,DWORD PTR [edi]
  41d37f:	jle    0x41d3cc
  41d381:	inc    eax
  41d382:	or     al,0x1a
  41d384:	jns    0x41d374
  41d386:	aas    
  41d387:	push   eax
  41d388:	mov    edx,0x3eebe21f
  41d38d:	inc    edi
  41d38e:	fs mov esi,0xf756c6d9
  41d394:	rcr    DWORD PTR [ecx],1
  41d396:	xor    al,0xb3
  41d398:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d399:	xchg   DWORD PTR [ecx-0x48c08e58],edx
  41d39f:	jb     0x41d3f3
  41d3a1:	in     al,dx
  41d3a2:	jmp    0xfea7:0xea4dcded
  41d3a9:	arpl   WORD PTR [esi],di
  41d3ab:	jbe    0x41d345
  41d3ad:	xchg   edx,eax
  41d3ae:	jmp    0x4adb:0xfde43695
  41d3b5:	test   DWORD PTR [edi+esi*4-0x61014e34],0x1ddcf4c4
  41d3c0:	cwde   
  41d3c1:	xor    DWORD PTR [edi+0x4cd10580],esp
  41d3c7:	lea    ebx,[esi+0x13fba716]
  41d3cd:	loope  0x41d3ce
  41d3cf:	les    edx,FWORD PTR [ebx+0x43c52844]
  41d3d5:	adc    eax,0xb7948bbb
  41d3da:	xchg   ebp,eax
  41d3db:	dec    edi
  41d3dc:	dec    eax
  41d3dd:	sub    eax,0x22684d74
  41d3e2:	(bad)  
  41d3e3:	xchg   ebp,eax
  41d3e4:	std    
  41d3e5:	mov    esp,0xe2612a98
  41d3ea:	jbe    0x41d41f
  41d3ec:	lahf   
  41d3ed:	sbb    al,0xd
  41d3ef:	pushf  
  41d3f0:	loope  0x41d37e
  41d3f2:	les    ebp,FWORD PTR [ebx+0xfd6e2f4]
  41d3f8:	push   ss
  41d3f9:	adc    BYTE PTR [esi-0x39af18d8],dl
  41d3ff:	cld    
  41d400:	(bad)  
  41d401:	sbb    DWORD PTR [esi],eax
  41d403:	nop
  41d404:	or     eax,0xbf58a0fa
  41d409:	fbstp  TBYTE PTR [edi+0x6db067d4]
  41d40f:	pop    eax
  41d410:	mov    bh,0x46
  41d412:	ror    DWORD PTR [ebp+0x4f],0x1e
  41d416:	xchg   edx,eax
  41d417:	mov    ebp,0xd47d75b8
  41d41c:	ds mov bl,0x93
  41d41f:	sub    DWORD PTR [edx+edx*4+0x683f6ea3],ecx
  41d426:	rcr    eax,cl
  41d428:	gs stos BYTE PTR es:[edi],al
  41d42a:	cmc    
  41d42b:	div    BYTE PTR ds:0x244959ed
  41d431:	ss jle 0x41d463
  41d434:	rol    BYTE PTR [edx-0xdb00755],0x35
  41d43b:	mov    WORD PTR [ebp+0x2e],ds
  41d43e:	xor    eax,0x85000f13
  41d443:	imul   ebp,DWORD PTR [ecx],0xa7feaee9
  41d449:	stos   DWORD PTR es:[edi],eax
  41d44a:	jmp    0x842e72ba
  41d44f:	cmp    DWORD PTR [ecx+eiz*4-0x78b2cf8c],0x5d
  41d457:	mov    ecx,0x9f3b9e01
  41d45c:	sbb    eax,0xf3f47558
  41d461:	and    al,0x2c
  41d463:	and    edi,DWORD PTR [eax-0x1]
  41d466:	jne    0x41d4ab
  41d468:	ss pop ss
  41d46a:	(bad)  
  41d46b:	push   ecx
  41d46c:	bound  edi,QWORD PTR [ecx+esi*1-0x42]
  41d470:	dec    esp
  41d471:	sub    al,0x9b
  41d473:	leave  
  41d474:	fwait
  41d475:	shr    BYTE PTR [ebp+0x1b],1
  41d478:	xor    BYTE PTR [eax],0xc6
  41d47b:	mov    al,dl
  41d47d:	mov    ds:0x7ac5eff2,al
  41d482:	imul   edi,DWORD PTR [esi+0x7cab8367],0x6d9bdd7b
  41d48c:	push   0x2f29ec56
  41d491:	aam    0x4d
  41d493:	jecxz  0x41d452
  41d495:	mov    cl,0x5e
  41d497:	fnstenv [ebp+0x4fc2d7b7]
  41d49d:	jbe    0x41d506
  41d49f:	adc    al,0x5f
  41d4a1:	les    esp,FWORD PTR [ecx-0x1c]
  41d4a4:	imul   edi,DWORD PTR [edx+edx*2+0x17],0xffffffc8
  41d4a9:	mov    ah,bl
  41d4ab:	mov    bh,0xb0
  41d4ad:	add    esp,DWORD PTR [esi]
  41d4af:	mov    bh,0x4b
  41d4b1:	bound  ecx,QWORD PTR [edi]
  41d4b3:	lock fstp QWORD PTR [eax]
  41d4b6:	in     al,0x5f
  41d4b8:	into   
  41d4b9:	loopne 0x41d4d0
  41d4bb:	cmp    bh,BYTE PTR [esi]
  41d4bd:	repz push esp
  41d4bf:	sub    BYTE PTR [ebx+eax*4],al
  41d4c2:	outs   dx,BYTE PTR ds:[esi]
  41d4c3:	inc    ebx
  41d4c4:	mov    WORD PTR [ebx-0x77fb88cf],gs
  41d4ca:	test   al,0xe9
  41d4cc:	push   esp
  41d4cd:	sbb    ah,BYTE PTR [esi+0x14]
  41d4d0:	int3   
  41d4d1:	dec    ecx
  41d4d2:	scas   al,BYTE PTR es:[edi]
  41d4d3:	imul   esi,DWORD PTR [edx],0x6abcc6e9
  41d4d9:	ins    BYTE PTR es:[edi],dx
  41d4da:	rcr    BYTE PTR [esi+ebx*4+0x6d2430e4],1
  41d4e1:	mov    esi,0xaba7a1a4
  41d4e6:	sub    dl,dh
  41d4e8:	dec    edi
  41d4e9:	sbb    ebp,DWORD PTR [esi]
  41d4eb:	das    
  41d4ec:	mov    ch,0x58
  41d4ee:	(bad)
  41d4f1:	push   ecx
  41d4f2:	sbb    esi,DWORD PTR [eax+ebp*1+0x43]
  41d4f6:	jb     0x41d56b
  41d4f8:	(bad)  
  41d4f9:	repnz sbb edi,ecx
  41d4fc:	and    al,0x58
  41d4fe:	sub    DWORD PTR [ebp+0x32],ebp
  41d501:	aad    0x94
  41d503:	adc    al,0xdd
  41d505:	imul   edx,DWORD PTR [esi-0x37333207],0xde0b6753
  41d50f:	inc    edi
  41d510:	aas    
  41d511:	mov    ds:0xa8978f09,al
  41d516:	inc    esp
  41d517:	jnp    0x41d4b4
  41d519:	std    
  41d51a:	sar    ebx,0x17
  41d51d:	stos   BYTE PTR es:[edi],al
  41d51e:	fs ret 
  41d520:	out    0x6a,al
  41d522:	xchg   ecx,eax
  41d523:	xchg   BYTE PTR [edx+0x9],cl
  41d526:	(bad)  
  41d527:	xor    ah,dl
  41d529:	iret   
  41d52a:	rcr    BYTE PTR [edi+ecx*1+0x745af795],cl
  41d531:	dec    esi
  41d532:	imul   ebx,edx,0xfffffffd
  41d535:	pop    edi
  41d536:	imul   DWORD PTR [ebp-0x3df8c8d3]
  41d53c:	test   BYTE PTR [ecx+edi*4+0x43bd2807],bh
  41d543:	fld    st(7)
  41d545:	in     eax,dx
  41d546:	mov    cl,0x1b
  41d548:	out    0xb,al
  41d54a:	or     BYTE PTR [esi],dl
  41d54c:	mov    DWORD PTR [edx+esi*4+0x34b71a16],ecx
  41d553:	and    eax,0xe3568da3
  41d558:	icebp  
  41d559:	mov    BYTE PTR [ecx],cl
  41d55b:	xchg   edx,edx
  41d55d:	fadd   QWORD PTR [eax]
  41d55f:	mov    ch,0x69
  41d561:	push   0x8854aa8f
  41d566:	pop    ds
  41d567:	loope  0x41d4f3
  41d569:	push   es
  41d56a:	dec    ecx
  41d56b:	xchg   BYTE PTR [ecx-0x6e7c5e97],ah
  41d571:	aad    0xe9
  41d573:	jae    0x41d526
  41d575:	(bad)  
  41d577:	repz (bad) 
  41d57a:	call   0xa61c5ad2
  41d57f:	in     al,0xe5
  41d581:	mov    DWORD PTR [esi],esi
  41d583:	and    DWORD PTR [eax-0x18],0x31
  41d587:	gs adc ax,0x1a6e
  41d58c:	or     eax,0x5ae1725b
  41d591:	adc    al,0x3d
  41d593:	loop   0x41d534
  41d595:	sbb    ah,dh
  41d597:	jno    0x41d5bc
  41d599:	push   0x1f
  41d59b:	in     eax,0x9f
  41d59d:	js     0x41d613
  41d59f:	inc    DWORD PTR [edi+ebp*1]
  41d5a2:	mov    bl,BYTE PTR [esi]
  41d5a4:	popa   
  41d5a5:	xchg   ebx,eax
  41d5a6:	neg    ebp
  41d5a8:	jno    0x41d5be
  41d5aa:	mov    dl,0x0
  41d5ac:	into   
  41d5ad:	xchg   esi,eax
  41d5ae:	inc    esi
  41d5af:	xor    eax,DWORD PTR [ebp-0x6]
  41d5b2:	cmp    al,0x5a
  41d5b4:	sub    DWORD PTR [ebx+ebx*1+0x66],edi
  41d5b8:	ds inc esp
  41d5ba:	mov    esp,0x4c2277d9
  41d5bf:	push   esi
  41d5c0:	stc    
  41d5c1:	sahf   
  41d5c2:	add    esp,DWORD PTR [edi+0x47]
  41d5c5:	push   ds
  41d5c6:	or     eax,0x146d7375
  41d5cb:	mov    dh,0x3c
  41d5cd:	test   DWORD PTR [edx+0x49],eax
  41d5d0:	sub    ecx,esp
  41d5d2:	xor    eax,0x13f6d8a0
  41d5d7:	jp     0x41d5cb
  41d5d9:	add    edi,esp
  41d5db:	(bad)  
  41d5dd:	push   ds
  41d5de:	pop    ds
  41d5df:	push   cs
  41d5e0:	(bad)  
  41d5e1:	pop    ebx
  41d5e2:	mov    dl,BYTE PTR [ecx+0x106c3f3]
  41d5e8:	xchg   DWORD PTR [ebp+0x67],eax
  41d5eb:	out    0x64,al
  41d5ed:	mov    ebx,0xfd9d1e5d
  41d5f2:	rol    al,cl
  41d5f4:	fcmovbe st,st(1)
  41d5f6:	lds    edx,FWORD PTR [ecx+0x10]
  41d5f9:	mov    bl,bh
  41d5fb:	aas    
  41d5fc:	or     edx,DWORD PTR [ebx+eax*8+0x53]
  41d600:	jge    0x41d636
  41d602:	push   es
  41d603:	push   ebp
  41d604:	sbb    al,0x83
  41d606:	out    dx,eax
  41d607:	or     al,0xd6
  41d609:	or     dl,BYTE PTR [ecx-0x6560163f]
  41d60f:	(bad)  
  41d610:	call   0xf53f3f8e
  41d615:	xchg   ebx,eax
  41d616:	fcmovbe st,st(3)
  41d618:	shl    DWORD PTR [edx+ecx*4+0x38],0x9e
  41d61d:	cmp    edi,DWORD PTR [ebp+0x27]
  41d620:	das    
  41d621:	je     0x41d67c
  41d623:	push   cs
  41d624:	inc    ecx
  41d625:	sbb    al,0xa
  41d627:	sti    
  41d628:	sub    al,0x9d
  41d62a:	fbstp  TBYTE PTR [esi]
  41d62c:	test   DWORD PTR [ebp+0x27a3f770],esp
  41d632:	clc    
  41d633:	dec    edi
  41d634:	jl     0x41d635
  41d636:	inc    ax
  41d638:	sbb    BYTE PTR [edx-0x53f91abe],ch
  41d63e:	lods   al,BYTE PTR ds:[esi]
  41d63f:	cdq    
  41d640:	popf   
  41d641:	jecxz  0x41d5e9
  41d643:	mov    al,ds:0x364f0e38
  41d648:	popa   
  41d649:	inc    esi
  41d64a:	ja     0x41d62c
  41d64c:	xor    al,0xca
  41d64e:	retf   0x5079
  41d651:	ret    0x83e6
  41d654:	dec    edx
  41d655:	bnd jo 0x41d64a
  41d658:	mov    dl,0xea
  41d65a:	in     al,dx
  41d65b:	stos   DWORD PTR es:[edi],eax
  41d65c:	inc    esi
  41d65d:	xor    al,0xb
  41d65f:	jg     0x41d695
  41d661:	out    dx,al
  41d662:	lahf   
  41d663:	sub    bl,BYTE PTR [edx+0x61]
  41d666:	xchg   edx,eax
  41d667:	mov    ecx,0x38b5fd86
  41d66c:	mov    bh,bl
  41d66e:	sti    
  41d66f:	cli    
  41d670:	inc    esp
  41d671:	adc    al,0xc0
  41d673:	mov    ch,0xb4
  41d675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d676:	(bad)  
  41d677:	sbb    BYTE PTR [edi],bh
  41d679:	jo     0x41d603
  41d67b:	test   ecx,edx
  41d67d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d67e:	inc    ecx
  41d67f:	outs   dx,BYTE PTR ds:[esi]
  41d680:	sbb    BYTE PTR [ebx-0x58],al
  41d683:	jb     0x41d61b
  41d685:	popf   
  41d686:	fstp   TBYTE PTR ds:0xd2c67b2c
  41d68c:	fidiv  DWORD PTR [esi]
  41d68e:	fnstsw WORD PTR [edx+ebp*8-0x15519dee]
  41d695:	outs   dx,DWORD PTR ds:[esi]
  41d696:	pop    ecx
  41d697:	scas   al,BYTE PTR es:[edi]
  41d698:	aaa    
  41d699:	int    0x5a
  41d69b:	push   ecx
  41d69c:	xchg   edx,eax
  41d69d:	push   0x17
  41d69f:	mov    ebp,0x2d0e4467
  41d6a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6a5:	int3   
  41d6a6:	adc    al,0xf3
  41d6a8:	xor    DWORD PTR [edx+ebx*1+0x367c8438],esp
  41d6af:	cwde   
  41d6b0:	hlt    
  41d6b1:	lahf   
  41d6b2:	mov    bh,0xdf
  41d6b4:	test   BYTE PTR [edi],ah
  41d6b6:	test   al,0x49
  41d6b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6b9:	mov    esi,0x9228a1e0
  41d6be:	cmp    BYTE PTR [ebp+ecx*8+0x24],ah
  41d6c2:	iret   
  41d6c3:	bnd jl 0x41d731
  41d6c6:	out    0x89,al
  41d6c8:	cmp    DWORD PTR [eax-0x60],0x7b
  41d6cc:	push   0xb89d6833
  41d6d1:	(bad)  
  41d6d3:	int    0x49
  41d6d5:	hlt    
  41d6d6:	and    eax,0x742a9588
  41d6db:	pop    esp
  41d6dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6dd:	ret    
  41d6de:	sbb    al,0xee
  41d6e0:	retf   0x245f
  41d6e3:	lahf   
  41d6e4:	mov    BYTE PTR [ebx+0x7e73d873],ch
  41d6ea:	cwde   
  41d6eb:	hlt    
  41d6ec:	int3   
  41d6ed:	aas    
  41d6ee:	sbb    bh,ah
  41d6f0:	call   0x7cfefa9c
  41d6f5:	mov    esi,0x7a448142
  41d6fa:	cwde   
  41d6fb:	jge    0x41d691
  41d6fd:	stc    
  41d6fe:	mov    ?,WORD PTR [edx+0x1f319129]
  41d704:	pop    ebp
  41d705:	fldenv gs:[esi+0x1a9b9b5f]
  41d70c:	mov    DWORD PTR [esi+0x542de2c1],ebp
  41d712:	imul   ebx,DWORD PTR [ecx+0x3f],0xffffff90
  41d716:	jno    0x41d6d5
  41d718:	shl    BYTE PTR [ebp-0x1085aaeb],cl
  41d71e:	fs ds pop ebx
  41d721:	sub    edi,DWORD PTR [si+0x4efe]
  41d726:	dec    edx
  41d727:	mov    esi,0x64264504
  41d72c:	stos   DWORD PTR es:[edi],eax
  41d72d:	mov    esp,0x8ae7e3ec
  41d732:	outs   dx,DWORD PTR ds:[esi]
  41d733:	outs   dx,BYTE PTR ds:[esi]
  41d734:	dec    ebp
  41d735:	jge    0x41d7ac
  41d737:	ficomp DWORD PTR ds:0x15cc6a05
  41d73d:	in     al,dx
  41d73e:	ret    0xde63
  41d741:	es push ebx
  41d743:	cmp    al,0xe3
  41d745:	in     al,dx
  41d746:	pop    ebx
  41d747:	adc    al,0x7a
  41d749:	sbb    BYTE PTR ds:0xe5948326,al
  41d74f:	push   ds
  41d750:	pop    ecx
  41d751:	jl     0x41d705
  41d753:	(bad)  
  41d754:	pusha  
  41d755:	int3   
  41d756:	cs pop ebx
  41d758:	sub    dl,BYTE PTR [edi+0x45]
  41d75b:	in     eax,0x51
  41d75d:	sub    DWORD PTR [edx-0x68],ebx
  41d760:	xchg   edi,eax
  41d761:	jp     0x41d775
  41d763:	xor    BYTE PTR [edi-0xe7865dc],0xc8
  41d76a:	xchg   ebx,eax
  41d76b:	into   
  41d76c:	xchg   esi,eax
  41d76d:	xchg   ebx,eax
  41d76e:	mov    ch,0x16
  41d770:	adc    eax,0x3c2e99e4
  41d775:	adc    ebx,DWORD PTR ds:0x495d69f
  41d77b:	or     ebp,edx
  41d77d:	xchg   edx,eax
  41d77e:	(bad)  
  41d77f:	pop    esp
  41d780:	das    
  41d781:	aam    0xc3
  41d783:	pop    ebp
  41d784:	inc    ecx
  41d785:	pop    ecx
  41d786:	add    ecx,0xa31c9f
  41d78c:	fs or  bl,bl
  41d78f:	pop    ds
  41d790:	push   eax
  41d791:	fist   WORD PTR [ecx-0x68]
  41d794:	xchg   edi,eax
  41d795:	std    
  41d796:	(bad)  
  41d797:	(bad)  
  41d798:	xor    ebp,DWORD PTR [ebx+0x7c]
  41d79b:	lds    esi,FWORD PTR [esi+0x23]
  41d79e:	or     DWORD PTR [ecx-0x3420141c],ebp
  41d7a4:	or     al,0xc1
  41d7a6:	jmp    0x74b2:0xb0acc1b7
  41d7ad:	retf   
  41d7ae:	arpl   sp,sp
  41d7b0:	lahf   
  41d7b1:	dec    esp
  41d7b2:	mov    ah,0x2e
  41d7b4:	jp     0x41d793
  41d7b6:	mov    edx,0x88fd7712
  41d7bb:	xor    al,0x74
  41d7bd:	mov    dl,0xce
  41d7bf:	shl    DWORD PTR [esi+0x4b],1
  41d7c2:	into   
  41d7c3:	gs (bad) 
  41d7c5:	pop    ecx
  41d7c6:	int3   
  41d7c7:	xlat   BYTE PTR ds:[ebx]
  41d7c8:	and    al,0x82
  41d7ca:	in     eax,0xda
  41d7cc:	lahf   
  41d7cd:	or     edx,DWORD PTR [ecx+0x50c6f890]
  41d7d3:	pop    edx
  41d7d4:	sti    
  41d7d5:	push   0xffffffe2
  41d7d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7d8:	sbb    edi,DWORD PTR [edx+0x65]
  41d7db:	aas    
  41d7dc:	js     0x41d7c1
  41d7de:	cmp    BYTE PTR [edi],bl
  41d7e0:	jmp    0x5c65:0xffa8b9c2
  41d7e7:	ins    DWORD PTR es:[edi],dx
  41d7e8:	xchg   edx,eax
  41d7e9:	out    dx,eax
  41d7ea:	inc    edx
  41d7eb:	loop   0x41d7df
  41d7ed:	add    ebx,ebx
  41d7ef:	or     ecx,DWORD PTR [ebp-0x72]
  41d7f2:	xor    eax,0x5731f069
  41d7f7:	adc    eax,0xa6984f66
  41d7fc:	jmp    0x41d7fa
  41d7fe:	scas   al,BYTE PTR es:[edi]
  41d7ff:	test   esi,ecx
  41d801:	mov    ah,BYTE PTR [esi-0x51]
  41d804:	aas    
  41d805:	(bad)  
  41d806:	leave  
  41d807:	leave  
  41d808:	loopne 0x41d85c
  41d80a:	test   BYTE PTR [ecx-0x1cce44e8],ah
  41d810:	push   ss
  41d811:	outs   dx,BYTE PTR ds:[esi]
  41d812:	popf   
  41d813:	and    bh,BYTE PTR [ebx]
  41d815:	fsub   QWORD PTR [ebx]
  41d817:	mov    ah,0xbb
  41d819:	push   ebp
  41d81a:	rcr    DWORD PTR [ecx+0xf5050cc],1
  41d820:	ins    DWORD PTR es:[edi],dx
  41d821:	and    DWORD PTR [edx],ebx
  41d823:	dec    esp
  41d824:	mov    ah,0x41
  41d826:	push   ss
  41d827:	ds cmp al,0xb4
  41d82a:	outs   dx,BYTE PTR ds:[esi]
  41d82b:	inc    ebx
  41d82c:	dec    ecx
  41d82d:	adc    DWORD PTR [ebx+0x7e],ecx
  41d830:	mov    esp,0xaf6c357b
  41d835:	push   esi
  41d836:	lods   eax,DWORD PTR ds:[esi]
  41d837:	stos   BYTE PTR es:[edi],al
  41d838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d839:	xor    dh,dh
  41d83b:	jl     0x41d8ae
  41d83d:	sub    eax,0x74e2e3a1
  41d842:	xlat   BYTE PTR ds:[ebx]
  41d843:	pop    ds
  41d844:	push   edx
  41d845:	xor    DWORD PTR [ebx-0x28c5bf21],ecx
  41d84b:	cmc    
  41d84c:	into   
  41d84d:	std    
  41d84e:	loopne 0x41d8cb
  41d850:	ror    ebp,cl
  41d852:	sahf   
  41d853:	cmc    
  41d854:	ss retf 
  41d856:	push   edi
  41d857:	mov    ebx,0x6b9cb6a3
  41d85c:	fidiv  WORD PTR [eax-0x37]
  41d85f:	sbb    dh,ch
  41d861:	dec    eax
  41d862:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41d864:	inc    esp
  41d865:	ins    BYTE PTR es:[edi],dx
  41d866:	int3   
  41d867:	leave  
  41d868:	leave  
  41d869:	nop
  41d86a:	dec    esp
  41d86b:	or     bh,dh
  41d86d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d86e:	dec    edi
  41d86f:	(bad)  
  41d870:	mov    edi,0x67d4ce7b
  41d875:	mov    ebp,0xc1939ba4
  41d87a:	int    0x6a
  41d87c:	mov    dh,0xe
  41d87e:	sahf   
  41d87f:	ror    DWORD PTR [ebp-0x67d9e944],cl
  41d885:	fsubr  QWORD PTR [edx+eiz*1-0x53]
  41d889:	and    BYTE PTR ds:0x3c2ab50b,0xd4
  41d890:	or     DWORD PTR ds:0xf353139a,esi
  41d896:	and    eax,0x70182971
  41d89b:	or     eax,0x53960365
  41d8a0:	jb     0x41d8f5
  41d8a2:	cwde   
  41d8a3:	mov    ebp,0xfdd46de6
  41d8a8:	(bad)  
  41d8a9:	xchg   edi,eax
  41d8aa:	push   0x2e
  41d8ac:	xchg   ecx,eax
  41d8ad:	shl    DWORD PTR [edi],cl
  41d8af:	cmp    DWORD PTR [edi],edx
  41d8b1:	cmp    dl,BYTE PTR [eax-0xe]
  41d8b4:	mov    esi,0xd0fb6146
  41d8b9:	dec    ecx
  41d8ba:	and    eax,0x989ea9b9
  41d8bf:	jmp    esp
  41d8c1:	aas    
  41d8c2:	aad    0xf4
  41d8c4:	cmc    
  41d8c5:	sbb    eax,0xf69b1014
  41d8ca:	(bad)  
  41d8cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8cc:	sahf   
  41d8cd:	add    eax,0x8a5d3bcd
  41d8d2:	fs test eax,0xa757a4ed
  41d8d8:	loope  0x41d937
  41d8da:	aad    0xf8
  41d8dc:	mov    dl,0x60
  41d8de:	xor    al,0xb0
  41d8e1:	iret   
  41d8e2:	(bad)  
  41d8e3:	ss jmp 0x41d871
  41d8e6:	xchg   DWORD PTR [esi+edx*1-0x45],eax
  41d8ea:	lds    ebx,FWORD PTR es:[edx+esi*1+0x5fc53eec]
  41d8f2:	inc    eax
  41d8f3:	into   
  41d8f4:	leave  
  41d8f5:	sub    BYTE PTR gs:[edi+0x2d047851],cl
  41d8fc:	lea    esi,[edi]
  41d8fe:	int    0x98
  41d900:	ret    
  41d901:	adc    eax,0xa9386c53
  41d906:	cdq    
  41d907:	les    ebp,FWORD PTR [ecx+0x5e0396ea]
  41d90d:	and    eax,0xe3581218
  41d912:	or     edi,DWORD PTR [esi]
  41d914:	mov    ds:0x8c739338,eax
  41d919:	inc    esi
  41d91a:	sar    DWORD PTR [esi+0x6c],0x20
  41d91e:	sub    BYTE PTR [edi-0x60],ch
  41d921:	test   bl,al
  41d923:	jl     0x41d8f0
  41d925:	xchg   esp,eax
  41d926:	mov    eax,es
  41d928:	sub    ebx,DWORD PTR [ebx-0x231e9188]
  41d92e:	out    0x85,al
  41d930:	ja     0x41d974
  41d932:	out    dx,al
  41d933:	cmp    dh,BYTE PTR [esi-0x71b71342]
  41d939:	xor    eax,0x2d6920e9
  41d93e:	or     al,0x53
  41d940:	in     al,0x18
  41d942:	mov    ebp,0xbb5f6321
  41d947:	pushf  
  41d948:	lea    eax,[eax]
  41d94a:	(bad)  
  41d94b:	adc    BYTE PTR [esi-0x4fa79a73],0x5c
  41d952:	lods   eax,DWORD PTR ds:[esi]
  41d953:	dec    ebx
  41d954:	mov    ebp,0xe0c7ea8
  41d959:	mov    edi,0xa40f5e78
  41d95e:	pop    ss
  41d95f:	mov    eax,ds:0xff2776ed
  41d964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d965:	mov    bl,0xd8
  41d967:	cmp    BYTE PTR ds:0x221cd09d,dl
  41d96d:	xchg   esp,eax
  41d96e:	fild   WORD PTR [ebp+0xa]
  41d971:	xchg   al,cl
  41d973:	rcr    DWORD PTR [ecx-0x2b],0x93
  41d977:	mov    esp,0x429984c2
  41d97c:	nop
  41d97d:	mov    dl,0xe7
  41d97f:	and    eax,0xfe8d6fea
  41d984:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d985:	or     DWORD PTR [esi],esi
  41d987:	and    eax,0x8da48fb8
  41d98c:	aaa    
  41d98d:	loop   0x41d914
  41d98f:	xor    BYTE PTR [ebp-0x3da0c3f2],al
  41d995:	idiv   DWORD PTR [edx-0x4849c7f7]
  41d99b:	inc    esp
  41d99c:	inc    ebx
  41d99d:	mov    es,esi
  41d99f:	jo     0x41d957
  41d9a1:	out    dx,al
  41d9a2:	cdq    
  41d9a3:	lea    ecx,[ebp+0x4cda3b6f]
  41d9a9:	jno    0x41d936
  41d9ab:	push   edx
  41d9ac:	pop    esi
  41d9ad:	les    esp,FWORD PTR [esi-0x6abcc0f0]
  41d9b3:	jns    0x41d9a9
  41d9b5:	xchg   edi,eax
  41d9b6:	int    0xcd
  41d9b8:	xor    al,0x29
  41d9ba:	out    0xa0,eax
  41d9bc:	mov    dl,0xc
  41d9be:	xchg   esi,eax
  41d9bf:	(bad)  
  41d9c0:	jg     0x41da19
  41d9c2:	aas    
  41d9c3:	mov    DWORD PTR [eax+0x7c6f0d3a],ecx
  41d9c9:	sub    BYTE PTR [eax+0x5af58e63],dl
  41d9cf:	sar    BYTE PTR [edi-0x18],cl
  41d9d2:	push   edi
  41d9d3:	cmp    ch,BYTE PTR [ebp-0x3ffb528]
  41d9d9:	std    
  41d9da:	in     eax,0xc3
  41d9dc:	xchg   esi,eax
  41d9dd:	mov    eax,ds:0xa0796767
  41d9e2:	jne    0x41d9a1
  41d9e4:	popf   
  41d9e5:	dec    edx
  41d9e6:	cmc    
  41d9e7:	mov    esi,0x3eda737
  41d9ec:	scas   al,BYTE PTR es:[edi]
  41d9ed:	dec    esp
  41d9ee:	sbb    al,0x13
  41d9f0:	gs adc eax,0xc478d677
  41d9f6:	jns    0x41da09
  41d9f8:	pop    esp
  41d9f9:	cmp    DWORD PTR [esi],0xffffffb4
  41d9fc:	adc    BYTE PTR [ecx-0x557dbadc],dh
  41da02:	pushf  
  41da03:	xor    ecx,DWORD PTR [edx+0x337c6ad6]
  41da09:	into   
  41da0a:	adc    DWORD PTR [ecx+0x3e],ebp
  41da0d:	jg     0x41d9dd
  41da0f:	stos   BYTE PTR es:[edi],al
  41da10:	pop    edi
  41da11:	push   ecx
  41da12:	add    eax,0x21dccc99
  41da17:	sahf   
  41da18:	in     eax,dx
  41da19:	fst    DWORD PTR [ecx+eax*4-0x62914ca1]
  41da20:	sar    DWORD PTR [esi-0x99be482],1
  41da26:	or     DWORD PTR [esi],esp
  41da28:	mov    edx,es
  41da2a:	sbb    dl,0x86
  41da2d:	mov    ebp,0x5814c24d
  41da32:	test   eax,0x81124879
  41da37:	ret    
  41da38:	mov    cl,0x5a
  41da3a:	jbe    0x41da3d
  41da3c:	or     DWORD PTR [edx+0x7],eax
  41da3f:	neg    DWORD PTR [eax]
  41da41:	mov    esi,0xead73b34
  41da46:	(bad)  
  41da48:	jp     0x41da9c
  41da4a:	cs xchg ebp,eax
  41da4c:	mov    ?,edi
  41da4e:	iret   
  41da4f:	and    al,0x54
  41da51:	push   0x1a
  41da53:	fcomp  DWORD PTR [edi+ebx*1-0x72]
  41da57:	jbe    0x41dac9
  41da59:	jle    0x41da08
  41da5b:	mov    eax,0x9b49943a
  41da60:	pop    es
  41da61:	push   eax
  41da62:	sub    eax,0x7b1fdbe4
  41da67:	dec    esi
  41da68:	adc    eax,0xd9883b27
  41da6d:	(bad)  
  41da6e:	sub    ecx,esp
  41da70:	pushf  
  41da71:	cmp    dh,BYTE PTR [edx-0x4cf70210]
  41da77:	mov    cl,0x26
  41da79:	inc    esi
  41da7a:	and    ebp,DWORD PTR [eax-0x46a18d69]
  41da80:	and    dh,ch
  41da82:	icebp  
  41da83:	in     al,dx
  41da84:	clc    
  41da85:	out    0xf6,eax
  41da87:	cmp    DWORD PTR [ebp-0x2bd0fd28],esp
  41da8d:	pop    ds
  41da8e:	or     bl,BYTE PTR [edx-0x7]
  41da91:	push   es
  41da92:	lock repnz pop ebx
  41da95:	inc    BYTE PTR [edx+0x28dc5fe8]
  41da9b:	push   cs
  41da9c:	mov    al,0xd4
  41da9e:	loope  0x41dabe
  41daa0:	or     BYTE PTR [edi],cl
  41daa2:	call   0x84c8:0x39a552f8
  41daa9:	push   cs
  41daaa:	ja     0x41da84
  41daac:	dec    ecx
  41daad:	fs es stc 
  41dab0:	scas   eax,DWORD PTR es:[edi]
  41dab1:	mov    bh,0x76
  41dab3:	xchg   edx,eax
  41dab4:	jmp    ebp
  41dab6:	stc    
  41dab7:	or     DWORD PTR [eax-0x74f53a0e],ebp
  41dabd:	lock pop ebx
  41dabf:	outs   dx,DWORD PTR ds:[esi]
  41dac0:	pop    ebp
  41dac1:	sahf   
  41dac2:	mov    gs,WORD PTR [edx-0x7b6695c7]
  41dac8:	sti    
  41dac9:	inc    ebp
  41daca:	sub    al,0xb7
  41dacc:	lods   eax,DWORD PTR ds:[esi]
  41dacd:	aad    0x90
  41dacf:	lock push 0xffffffca
  41dad2:	lahf   
  41dad3:	out    dx,eax
  41dad4:	sbb    BYTE PTR [ebp-0x3a20f7e7],0xb5
  41dadb:	adc    al,0x2a
  41dadd:	test   al,0xc2
  41dadf:	fwait
  41dae0:	test   BYTE PTR [ecx],dh
  41dae2:	aam    0xb4
  41dae4:	push   es
  41dae5:	sbb    eax,0xf59f70f6
  41daea:	mov    al,0x39
  41daec:	inc    eax
  41daed:	ret    0xa9dd
  41daf0:	push   0x7b1c978
  41daf5:	adc    BYTE PTR [ebx+0x3646b4d7],cl
  41dafb:	sub    ebp,DWORD PTR [ebp-0x63]
  41dafe:	imul   BYTE PTR [esi+edx*1-0xe07ee1d]
  41db05:	inc    edx
  41db06:	scas   al,BYTE PTR es:[edi]
  41db07:	pop    edi
  41db08:	push   ecx
  41db09:	div    DWORD PTR [edi-0x6d]
  41db0c:	pop    edi
  41db0d:	or     eax,0x1fcf0244
  41db12:	leave  
  41db13:	mov    ah,0x6a
  41db15:	or     esi,esi
  41db17:	int    0x4c
  41db19:	mov    esi,edx
  41db1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db1c:	js     0x41dafa
  41db1e:	jp     0x41db65
  41db20:	stc    
  41db21:	out    dx,eax
  41db22:	sub    ebp,edx
  41db24:	mov    bh,0x5e
  41db26:	mov    ebp,0xc8da3b13
  41db2b:	call   0x6ce4:0x568a6ed9
  41db32:	add    bl,BYTE PTR [eax]
  41db34:	and    esi,DWORD PTR [ebp+0x451ee1be]
  41db3a:	bnd ret 
  41db3c:	xor    BYTE PTR [esi+ebp*2],bl
  41db3f:	sbb    eax,0x61fc13f7
  41db44:	enter  0x6378,0xeb
  41db48:	mov    ebx,ebp
  41db4a:	pop    ss
  41db4b:	or     ch,BYTE PTR [edx+edi*4]
  41db4e:	xchg   DWORD PTR [edx],edi
  41db50:	fs pop edx
  41db52:	out    dx,al
  41db53:	test   DWORD PTR [eax],ebx
  41db55:	clc    
  41db56:	cmp    ch,0x6
  41db59:	add    cl,bl
  41db5b:	adc    ah,al
  41db5d:	(bad)  
  41db5e:	xchg   BYTE PTR ds:0x4443e472,cl
  41db64:	(bad)  
  41db65:	ret    0xe411
  41db68:	jbe    0x41dbbf
  41db6a:	xchg   ebx,eax
  41db6b:	fs jp  0x41dbc8
  41db6e:	inc    ebx
  41db6f:	pop    es
  41db70:	and    edx,edx
  41db72:	ret    0xee90
  41db75:	inc    edx
  41db76:	sub    al,0xf7
  41db78:	add    al,0x84
  41db7a:	enter  0x4727,0xea
  41db7e:	push   ebp
  41db7f:	aas    
  41db80:	rol    al,1
  41db82:	(bad)  
  41db83:	not    DWORD PTR [ebx+0x3f4e00fa]
  41db89:	mov    al,ds:0x2b7c8b06
  41db8e:	das    
  41db8f:	mov    eax,ds:0xac9a5f49
  41db94:	add    eax,0x1991c1a6
  41db99:	xchg   BYTE PTR [esi+0x19],dl
  41db9c:	pop    edi
  41db9d:	pop    edx
  41db9e:	int    0x7c
  41dba0:	inc    ebp
  41dba1:	and    esp,ecx
  41dba3:	mov    ebx,0xa2082ef3
  41dba8:	xchg   ecx,eax
  41dba9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbaa:	sub    eax,0x47ae803a
  41dbaf:	out    0x19,eax
  41dbb1:	aam    0x19
  41dbb3:	stc    
  41dbb4:	test   DWORD PTR ds:0x66c9429b,edx
  41dbba:	int3   
  41dbbb:	inc    esp
  41dbbc:	jno    0x41dbe5
  41dbbe:	ror    BYTE PTR [edx+0x49a1c13a],1
  41dbc4:	jecxz  0x41dc03
  41dbc6:	mov    esp,0x29e116e8
  41dbcb:	inc    edi
  41dbcc:	arpl   WORD PTR [ecx-0x2e],bp
  41dbcf:	pop    edx
  41dbd0:	sbb    eax,0x1d438f2e
  41dbd5:	or     BYTE PTR [eax+esi*4-0x6bf45aa1],al
  41dbdc:	inc    ebx
  41dbdd:	aam    0x8a
  41dbdf:	inc    ebp
  41dbe0:	call   ebx
  41dbe2:	stos   DWORD PTR es:[edi],eax
  41dbe3:	out    0x7e,al
  41dbe5:	cmp    eax,0x8894615c
  41dbea:	sbb    edx,edx
  41dbec:	pop    esi
  41dbed:	sbb    dh,BYTE PTR [esi+0x5e]
  41dbf0:	jae    0x41dc66
  41dbf2:	xchg   esp,eax
  41dbf3:	fcom   DWORD PTR [ebp-0x55b7cdf9]
  41dbf9:	adc    eax,0xdc02a3f2
  41dbfe:	rol    BYTE PTR [ebp-0x7e],cl
  41dc01:	loop   0x41dbd6
  41dc03:	pop    ecx
  41dc04:	leave  
  41dc05:	push   es
  41dc06:	dec    esi
  41dc07:	sbb    eax,0x77234c69
  41dc0c:	js     0x41dc5b
  41dc0e:	xor    BYTE PTR [edi+0xa6ff05d],bh
  41dc14:	cmp    bl,BYTE PTR [edi+ecx*1-0x74e0b806]
  41dc1b:	xchg   edi,eax
  41dc1c:	out    0x56,eax
  41dc1e:	and    eax,0x3ef545b1
  41dc23:	rcr    BYTE PTR [edx+0x52d0a766],0x62
  41dc2a:	aaa    
  41dc2b:	fcomip st,st(6)
  41dc2d:	scas   al,BYTE PTR es:[edi]
  41dc2e:	mov    al,dh
  41dc30:	cmp    cl,ah
  41dc32:	test   BYTE PTR [eax-0x776764df],dl
  41dc38:	test   DWORD PTR [bx+si+0x42],0x2c87b387
  41dc40:	xchg   edx,eax
  41dc41:	and    al,BYTE PTR [ebp-0x5b7bea94]
  41dc47:	(bad)  
  41dc48:	pop    esp
  41dc49:	mov    ?,WORD PTR [eax+ecx*1+0x33c00c0e]
  41dc50:	test   DWORD PTR [edi+0x51],ebp
  41dc53:	imul   edi,DWORD PTR [edx],0xffffff85
  41dc56:	or     esi,DWORD PTR [ebp+0x65854cc9]
  41dc5c:	push   edx
  41dc5d:	stos   BYTE PTR es:[edi],al
  41dc5e:	mov    eax,ds:0x1f711b
  41dc63:	push   edi
  41dc64:	in     eax,dx
  41dc65:	imul   ebx,DWORD PTR [ebx],0x49d8dbd4
  41dc6b:	scas   al,BYTE PTR es:[edi]
  41dc6c:	mov    DWORD PTR [eax-0xc866b5f],eax
  41dc72:	pop    ebp
  41dc73:	add    BYTE PTR [ebp+0x31012f9],ch
  41dc79:	scas   eax,DWORD PTR es:[edi]
  41dc7a:	aas    
  41dc7b:	pop    ss
  41dc7c:	or     al,BYTE PTR cs:[eax+0x14]
  41dc80:	sbb    BYTE PTR [eax+0x76],0x35
  41dc84:	mov    BYTE PTR [edx+ecx*2-0x1cedd7f3],dh
  41dc8b:	pop    ebp
  41dc8c:	add    al,0x99
  41dc8e:	xchg   edi,eax
  41dc8f:	aam    0xb0
  41dc91:	(bad)  
  41dc92:	and    ch,BYTE PTR [ebx]
  41dc94:	mov    edx,ebp
  41dc96:	loop   0x41dd0d
  41dc98:	or     DWORD PTR [esi-0x52],0xfffffff9
  41dc9c:	retf   0xa510
  41dc9f:	pop    edi
  41dca0:	test   al,0xfa
  41dca2:	sahf   
  41dca3:	sub    eax,0xcfc32966
  41dca8:	ds test eax,0x592f15f
  41dcae:	je     0x41dcac
  41dcb0:	jae    0x41dd18
  41dcb2:	fdivr  DWORD PTR [esi+0x64]
  41dcb5:	and    eax,esp
  41dcb7:	inc    edi
  41dcb8:	dec    ecx
  41dcb9:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcbb:	inc    eax
  41dcbc:	mov    eax,ds:0xb056cceb
  41dcc1:	loope  0x41dc88
  41dcc3:	push   esi
  41dcc4:	es pop ebx
  41dcc6:	ins    BYTE PTR es:[edi],dx
  41dcc7:	adc    edi,esi
  41dcc9:	pop    edx
  41dcca:	fmul   QWORD PTR [edi+0x4b]
  41dccd:	mov    al,0xff
  41dccf:	bt     eax,ecx
  41dcd2:	mov    ds:0x8d97d45c,al
  41dcd7:	xor    eax,0x65c2d424
  41dcdc:	and    al,0x7d
  41dcde:	cmp    eax,0xdd90a8f3
  41dce3:	sbb    al,0x33
  41dce5:	out    0xe3,eax
  41dce7:	in     eax,dx
  41dce8:	adc    cl,dh
  41dcea:	xchg   ebx,eax
  41dceb:	push   ebp
  41dcec:	push   ebx
  41dced:	retf   
  41dcee:	test   BYTE PTR [edx],0x20
  41dcf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcf2:	mov    DWORD PTR [esi],ebx
  41dcf4:	or     BYTE PTR [edi+0x12],ah
  41dcf7:	sti    
  41dcf8:	das    
  41dcf9:	add    ah,bl
  41dcfb:	inc    edx
  41dcfc:	cdq    
  41dcfd:	sti    
  41dcfe:	scas   al,BYTE PTR es:[edi]
  41dcff:	in     al,dx
  41dd00:	sbb    ecx,DWORD PTR ds:0x28dc7ace
  41dd06:	jg     0x41dc8d
  41dd08:	sbb    ebx,DWORD PTR [edi-0x7889f7a4]
  41dd0e:	sbb    DWORD PTR [ebx+ecx*1],edx
  41dd11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd12:	mov    WORD PTR [ecx+edi*4-0xe1dfbbc],cs
  41dd19:	sbb    DWORD PTR [edx+ecx*8],ebx
  41dd1c:	sub    dh,BYTE PTR [esi]
  41dd1e:	out    0xb2,eax
  41dd20:	out    dx,al
  41dd21:	xchg   edx,eax
  41dd22:	test   BYTE PTR [ebp+ebx*1-0x48],0x8a
  41dd27:	ja     0x41dd2f
  41dd29:	xchg   DWORD PTR [ecx+0x20],ebx
  41dd2c:	jmp    0x41dcc6
  41dd2e:	pushf  
  41dd2f:	jno    0x41dd2e
  41dd31:	repz test DWORD PTR [edx],ebx
  41dd34:	inc    esp
  41dd35:	loopne 0x41dd2b
  41dd37:	xor    BYTE PTR [edx-0x22e6b540],0xca
  41dd3e:	mov    ds:0x170ecdc1,al
  41dd43:	and    eax,0x6fe006f5
  41dd48:	cmp    eax,0xc5b78a0d
  41dd4d:	xor    ch,BYTE PTR [ebx-0x5eca75f5]
  41dd53:	jg     0x41dce9
  41dd55:	jg     0x41dd5f
  41dd57:	and    al,0xfb
  41dd59:	mov    edx,0xacc51ed2
  41dd5e:	pop    edi
  41dd5f:	xor    cl,bl
  41dd61:	jecxz  0x41ddc9
  41dd63:	psllw  mm7,QWORD PTR [ecx-0x6c]
  41dd67:	pop    ss
  41dd68:	jb     0x41dcfb
  41dd6a:	sub    DWORD PTR [ebp-0x70831fb],eax
  41dd70:	pop    ebx
  41dd71:	jge    0x41ddbd
  41dd73:	imul   eax,DWORD PTR [edi-0x248b287f],0xff316bfc
  41dd7d:	jnp    0x41ddad
  41dd7f:	or     al,0xac
  41dd81:	pop    eax
  41dd82:	cli    
  41dd83:	retf   
  41dd84:	fld    QWORD PTR [ebx-0x71]
  41dd87:	jecxz  0x41dd36
  41dd89:	mov    esp,?
  41dd8b:	cmc    
  41dd8c:	jo     0x41dd8e
  41dd8e:	ret    0xa042
  41dd91:	lahf   
  41dd92:	push   eax
  41dd93:	push   0xffffffac
  41dd95:	lea    ebp,[eax-0x46452a7f]
  41dd9b:	pop    ds
  41dd9c:	outs   dx,BYTE PTR ds:[esi]
  41dd9d:	or     dh,BYTE PTR [edx-0x67e1541d]
  41dda3:	jg     0x41ddcc
  41dda5:	outs   dx,DWORD PTR ds:[esi]
  41dda6:	mov    ebp,0x701da90e
  41ddab:	and    BYTE PTR [eax+ebp*2-0x234db656],bh
  41ddb2:	stos   DWORD PTR es:[edi],eax
  41ddb3:	adc    ch,dl
  41ddb5:	dec    ebp
  41ddb6:	addr16 mov ds:0x56b4,eax
  41ddba:	dec    ebp
  41ddbb:	(bad)  
  41ddbc:	std    
  41ddbd:	adc    cl,0xdc
  41ddc0:	pop    edi
  41ddc1:	lahf   
  41ddc2:	test   al,0x79
  41ddc4:	add    al,0xf1
  41ddc6:	and    BYTE PTR [ebx],al
  41ddc8:	xchg   BYTE PTR [eax],ch
  41ddca:	popa   
  41ddcb:	push   ss
  41ddcc:	jecxz  0x41ddc3
  41ddce:	shr    DWORD PTR [esi],cl
  41ddd0:	xor    bh,cl
  41ddd2:	pop    ebp
  41ddd3:	outs   dx,BYTE PTR ds:[esi]
  41ddd4:	push   eax
  41ddd5:	cwde   
  41ddd6:	lock mov ch,0xed
  41ddd9:	es pop ebp
  41dddb:	sub    eax,0x74f7c815
  41dde0:	dec    esp
  41dde1:	in     al,dx
  41dde2:	icebp  
  41dde3:	jl     0x41de24
  41dde5:	push   ds
  41dde6:	stos   BYTE PTR es:[edi],al
  41dde7:	xchg   DWORD PTR [ebx-0x27],ebp
  41ddea:	shl    ebp,1
  41ddec:	outs   dx,BYTE PTR ds:[esi]
  41dded:	outs   dx,DWORD PTR ds:[esi]
  41ddee:	dec    eax
  41ddef:	pushf  
  41ddf0:	dec    ecx
  41ddf1:	sar    DWORD PTR ss:[ebx+0x51d7b777],0x8d
  41ddf9:	iret   
  41ddfa:	cmp    DWORD PTR [edx-0x21],ebx
  41ddfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddfe:	lods   al,BYTE PTR ds:[esi]
  41ddff:	xlat   BYTE PTR ds:[ebx]
  41de00:	inc    ebp
  41de01:	lods   al,BYTE PTR ds:[esi]
  41de02:	rcl    BYTE PTR [esi+0x16876a2b],0xb
  41de09:	mov    bh,0xe6
  41de0b:	mov    al,ds:0xe98c8f46
  41de10:	icebp  
  41de11:	shl    BYTE PTR [eax+ebx*4+0x71],cl
  41de15:	adc    al,0xe7
  41de17:	push   0x59
  41de19:	push   edx
  41de1a:	jle    0x41dda2
  41de1c:	(bad)  
  41de1e:	mov    cs,WORD PTR [ebp+0x48]
  41de21:	sub    eax,0xebcbf2de
  41de26:	aad    0x44
  41de28:	fidiv  WORD PTR [ebp-0x7b]
  41de2b:	sub    eax,0x50c24665
  41de30:	das    
  41de31:	in     eax,0xa1
  41de33:	repnz mov ds:0x6ef1143d,eax
  41de39:	leave  
  41de3a:	dec    esp
  41de3b:	xchg   DWORD PTR [eax-0x7f],ecx
  41de3e:	pop    ds
  41de3f:	push   0x56022ccd
  41de44:	pushf  
  41de45:	test   eax,0xb1d2ad61
  41de4a:	pop    ebp
  41de4b:	mov    bh,0xbf
  41de4d:	xor    BYTE PTR [ebp+ebp*2+0x7e],dh
  41de51:	repnz add eax,0xa3fdf130
  41de57:	hlt    
  41de58:	sbb    edx,DWORD PTR [ebp-0x74]
  41de5b:	xor    al,0x1
  41de5d:	aas    
  41de5e:	push   ebp
  41de5f:	daa    
  41de60:	xchg   esp,eax
  41de61:	jmp    0x74e4:0x5ecb8adc
  41de68:	mov    ch,0x63
  41de6a:	(bad)  
  41de6c:	sub    dl,BYTE PTR [edi]
  41de6e:	add    BYTE PTR [edi+esi*1],bh
  41de71:	inc    ebx
  41de72:	popa   
  41de73:	fimul  DWORD PTR [edi]
  41de75:	inc    edx
  41de76:	les    esi,FWORD PTR [edi+eax*4+0x56]
  41de7a:	cmp    BYTE PTR [edx+0xee5dcdc],0xa7
  41de81:	cld    
  41de82:	sbb    DWORD PTR [ebx],esp
  41de84:	or     bl,BYTE PTR [ebp+0x4e]
  41de87:	popa   
  41de88:	fidivr DWORD PTR [ebx-0x38]
  41de8b:	aad    0x63
  41de8d:	push   ss
  41de8e:	fld    TBYTE PTR ds:0xf63ff6b3
  41de94:	mov    eax,0x9baa411
  41de99:	call   0x9a04:0x304c245c
  41dea0:	jo     0x41de24
  41dea2:	in     al,0x2b
  41dea4:	into   
  41dea5:	(bad)  
  41dea7:	data16 mov al,ds:0x196ce04d
  41dead:	mov    bl,0xba
  41deaf:	out    dx,eax
  41deb0:	cli    
  41deb1:	idiv   esp
  41deb3:	dec    ebp
  41deb4:	ins    DWORD PTR es:[edi],dx
  41deb5:	cmc    
  41deb6:	fstp   DWORD PTR [ecx+0x6b2a0c6]
  41debc:	mov    ecx,0xf33ec1df
  41dec1:	loope  0x41df00
  41dec3:	mov    eax,ds:0x3346013c
  41dec8:	imul   eax,DWORD PTR [edi-0x4f469bf6],0xffffff87
  41decf:	mov    edi,esi
  41ded1:	cmp    esp,DWORD PTR [ecx-0x2b1d9b06]
  41ded7:	leave  
  41ded8:	or     bh,BYTE PTR [esi]
  41deda:	mov    edx,0x6fe75633
  41dedf:	cmc    
  41dee0:	mov    ds:0xba87d5be,al
  41dee5:	(bad)  
  41dee6:	fiadd  WORD PTR ds:0xaea642c4
  41deec:	inc    esp
  41deed:	mov    al,0xe0
  41deef:	ds mov bl,0xbc
  41def2:	lock loopne 0x41dea8
  41def5:	lock in eax,0x6e
  41def8:	ror    BYTE PTR [eax+eax*1+0x4670a5cb],0x98
  41df00:	add    esi,DWORD PTR [ebp-0x17]
  41df03:	sub    dl,BYTE PTR [ebp+0x2b]
  41df06:	dec    edx
  41df07:	add    esi,DWORD PTR [edx+0x2bb93e7a]
  41df0d:	lods   al,BYTE PTR es:[esi]
  41df0f:	int    0x70
  41df11:	popa   
  41df12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df13:	sub    esp,edi
  41df15:	test   DWORD PTR [esi-0x40],ebp
  41df18:	loopne 0x41df2a
  41df1a:	pusha  
  41df1b:	xchg   edx,eax
  41df1c:	mov    ah,0xba
  41df1e:	daa    
  41df1f:	mov    DWORD PTR [eax+0x3aa0666],esi
  41df25:	imul   esi,esi,0xacf5eb51
  41df2b:	icebp  
  41df2c:	pop    edx
  41df2d:	arpl   WORD PTR [esi+0x21d15613],cx
  41df33:	iret   
  41df34:	jno    0x41df50
  41df36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df37:	fisttp WORD PTR [ecx+0x660bf68a]
  41df3d:	add    eax,0x6dc1f3
  41df42:	mov    ebp,0x7bb39252
  41df47:	ins    BYTE PTR es:[edi],dx
  41df48:	push   0x50
  41df4a:	sbb    DWORD PTR [eax],esi
  41df4c:	shl    BYTE PTR [edx-0x4ca2d555],1
  41df52:	sqrtps xmm7,XMMWORD PTR ds:0xb82c3dd1
  41df59:	jae    0x41dfc2
  41df5b:	adc    eax,0xdad6df0
  41df60:	ds lahf 
  41df62:	(bad)  
  41df63:	fxch   st(2)
  41df65:	or     eax,0x5cb11ecc
  41df6a:	jg     0x41df57
  41df6c:	mov    BYTE PTR [esi-0x46],bh
  41df6f:	sbb    eax,0x1dd7fd52
  41df74:	mov    bh,ah
  41df76:	mov    dh,0x9a
  41df78:	jbe    0x41df0a
  41df7a:	ss dec edi
  41df7c:	aam    0x44
  41df7e:	mov    ecx,0xc7e07154
  41df83:	xor    ch,BYTE PTR [eax]
  41df85:	jb     0x41dfd6
  41df87:	cvtps2pi mm2,QWORD PTR [esi]
  41df8a:	fsub   st(2),st
  41df8c:	scas   eax,DWORD PTR es:[edi]
  41df8d:	ret    0xbe7e
  41df90:	adc    al,BYTE PTR [esi+0x58]
  41df93:	leave  
  41df94:	idiv   DWORD PTR [esi+0x9b7647a]
  41df9a:	retf   
  41df9b:	pop    ebx
  41df9c:	push   ds
  41df9d:	bound  ebp,QWORD PTR [edx-0x3b]
  41dfa0:	loopne 0x41dff4
  41dfa2:	mov    dl,0x9c
  41dfa4:	sahf   
  41dfa5:	add    ecx,DWORD PTR [edi+0x345a23e8]
  41dfab:	(bad)  
  41dfac:	xor    DWORD PTR [edx],edx
  41dfae:	retf   0x619a
  41dfb1:	loop   0x41df78
  41dfb3:	or     al,0xfa
  41dfb5:	mov    DWORD PTR [esi+0x432b8be1],0x83ebdca7
  41dfbf:	push   eax
  41dfc0:	pusha  
  41dfc1:	mov    edx,0x203cd2f7
  41dfc6:	sbb    BYTE PTR [ebx-0x6e],dh
  41dfc9:	sbb    BYTE PTR [eax-0x34],dh
  41dfcc:	aad    0xf1
  41dfce:	inc    esp
  41dfcf:	xor    BYTE PTR [ecx],0x3c
  41dfd2:	loop   0x41dfe9
  41dfd4:	loopne 0x41df83
  41dfd6:	pop    esi
  41dfd7:	xchg   esi,eax
  41dfd8:	dec    edi
  41dfd9:	imul   ebx,DWORD PTR [ebx-0x1de1aaf8],0xffffffc0
  41dfe0:	test   al,0xe2
  41dfe2:	fdiv   QWORD PTR [eax]
  41dfe4:	loop   0x41df9b
  41dfe6:	inc    esi
  41dfe7:	ficom  DWORD PTR [edi+ecx*2-0x56e81899]
  41dfee:	out    0x8c,eax
  41dff0:	fs es leave 
  41dff3:	lds    ebx,FWORD PTR [ecx-0x78]
  41dff6:	retf   
  41dff7:	shr    edx,cl
  41dff9:	into   
  41dffa:	(bad)  [edx+0x5]
  41dffd:	jecxz  0x41df83
  41dfff:	imul   edi,DWORD PTR [esi+edx*8+0x778a06fa],0x14
  41e007:	sub    esi,DWORD PTR [edx+0x58]
  41e00a:	dec    esi
  41e00b:	dec    esp
  41e00c:	addr16 inc ebp
  41e00e:	call   0xf3ce:0x83b5a8d1
  41e015:	popa   
  41e016:	xchg   ebx,eax
  41e017:	jl     0x41e04b
  41e019:	aam    0x12
  41e01b:	pop    ss
  41e01c:	and    edx,edi
  41e01e:	push   cs
  41e01f:	xor    BYTE PTR [ebx+0x27],0x48
  41e023:	add    al,0x4d
  41e025:	push   ss
  41e026:	fadd   DWORD PTR [edx+0x62]
  41e029:	jl     0x41dfb3
  41e02b:	int3   
  41e02c:	add    ax,0xba10
  41e030:	mov    al,ds:0x91518eac
  41e035:	sbb    edi,DWORD PTR [edx]
  41e037:	mov    al,0x24
  41e039:	loope  0x41e079
  41e03b:	cmp    bl,BYTE PTR [ebx]
  41e03d:	mov    edi,0xefb17dbe
  41e042:	icebp  
  41e043:	in     eax,dx
  41e044:	sbb    DWORD PTR fs:[esi+0x4a],esp
  41e048:	ret    
  41e049:	adc    ch,bh
  41e04b:	and    DWORD PTR [edx-0x62],0x53
  41e04f:	push   ss
  41e050:	aad    0x0
  41e052:	add    edi,DWORD PTR [ecx]
  41e054:	mov    edi,0xe6dadc56
  41e059:	push   es
  41e05a:	inc    ecx
  41e05b:	bound  eax,QWORD PTR [ebx]
  41e05d:	icebp  
  41e05e:	pop    esi
  41e05f:	lock scas al,BYTE PTR es:[edi]
  41e061:	or     eax,0xadc168fe
  41e066:	pop    ss
  41e067:	push   edi
  41e068:	add    ebp,DWORD PTR ds:0x2aa2b15c
  41e06e:	inc    eax
  41e06f:	or     edi,DWORD PTR [ebp+0x4f4e5aad]
  41e075:	aam    0x32
  41e077:	or     DWORD PTR [ecx-0x47],esp
  41e07a:	add    eax,DWORD PTR [edi]
  41e07c:	ret    
  41e07d:	das    
  41e07e:	lods   al,BYTE PTR ds:[esi]
  41e07f:	ins    DWORD PTR es:[edi],dx
  41e080:	add    BYTE PTR [ecx+eiz*1-0x54],bl
  41e084:	mov    bh,0x62
  41e086:	ret    0xdd83
  41e089:	mov    dl,0xda
  41e08b:	das    
  41e08c:	push   edi
  41e08d:	add    al,0xc4
  41e08f:	add    eax,0xf526e7af
  41e094:	and    BYTE PTR [ebx+0x6f],bl
  41e097:	cmovns edi,DWORD PTR [eax+0x5830bc13]
  41e09e:	inc    esi
  41e09f:	xor    al,0x6b
  41e0a1:	jbe    0x41e107
  41e0a3:	shr    esi,0xc3
  41e0a6:	and    dl,bh
  41e0a8:	mov    ebx,0xcab5c963
  41e0ad:	cmp    eax,0x936dad52
  41e0b2:	data16 fcmovnu st,st(4)
  41e0b5:	dec    BYTE PTR [esi+0xa69d09b]
  41e0bb:	mov    gs,esi
  41e0bd:	sar    BYTE PTR [edx],cl
  41e0bf:	push   0xfffffff0
  41e0c1:	aad    0xdd
  41e0c3:	jne    0x41e13a
  41e0c5:	xor    ecx,DWORD PTR [edx]
  41e0c7:	call   0x33b03969
  41e0cc:	fisttp QWORD PTR [eax]
  41e0ce:	mov    al,0x5e
  41e0d0:	out    dx,al
  41e0d1:	dec    edx
  41e0d2:	je     0x41e0f7
  41e0d4:	sub    cl,0xe5
  41e0d7:	test   al,0xf2
  41e0d9:	out    dx,eax
  41e0da:	dec    edi
  41e0db:	cmp    cl,BYTE PTR [eax+0x79facaf2]
  41e0e1:	mov    dh,0x64
  41e0e3:	sub    dh,BYTE PTR [ebp+0x2f0f2bb]
  41e0e9:	mov    edx,ebx
  41e0eb:	ss mov ebx,0x6041996b
  41e0f1:	ss loope 0x41e08e
  41e0f4:	mov    dl,0x78
  41e0f6:	sti    
  41e0f7:	cwde   
  41e0f8:	shr    DWORD PTR [esi],cl
  41e0fa:	outs   dx,DWORD PTR ds:[esi]
  41e0fb:	mov    al,0x17
  41e0fd:	inc    ebp
  41e0fe:	add    ecx,DWORD PTR [ecx+ebp*1]
  41e101:	dec    esp
  41e102:	dec    ecx
  41e103:	daa    
  41e104:	cmp    BYTE PTR [ebp+0xf8dc1a5],dh
  41e10a:	mov    ecx,0x9c5ffdc2
  41e10f:	or     al,0xcf
  41e111:	aam    0xf7
  41e113:	fisttp DWORD PTR [ecx]
  41e115:	xchg   DWORD PTR [ebx-0x1a174700],ebp
  41e11b:	aaa    
  41e11c:	inc    ecx
  41e11d:	mov    al,ds:0x8c20e918
  41e122:	repnz and al,0x6d
  41e125:	ins    BYTE PTR es:[edi],dx
  41e126:	and    eax,0xf4891937
  41e12b:	jno    0x41e139
  41e12d:	shl    edi,0xe
  41e130:	jae    0x41e163
  41e132:	cmp    BYTE PTR [ebp+0x49],ch
  41e135:	es push ss
  41e137:	add    eax,0xffcf0a56
  41e13c:	pop    edi
  41e13d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e13e:	and    DWORD PTR [eax+ebp*4+0x77],eax
  41e142:	retf   0x3c1c
  41e145:	dec    esp
  41e146:	imul   BYTE PTR [edx]
  41e148:	push   eax
  41e149:	jns    0x41e0f2
  41e14b:	rcr    BYTE PTR [edi],0x39
  41e14e:	pop    ds
  41e14f:	sahf   
  41e150:	pop    esp
  41e151:	cld    
  41e152:	lahf   
  41e153:	mov    esp,0x6dbbfc3e
  41e158:	test   esi,0x9fecb5ad
  41e15e:	inc    esp
  41e15f:	mov    eax,DWORD PTR [eax-0x3f5b7d8a]
  41e165:	mov    al,0xb9
  41e167:	mov    bh,0x5f
  41e169:	les    edi,FWORD PTR [eax+0x6a]
  41e16c:	dec    ebp
  41e16d:	mov    esp,0xd562c74a
  41e172:	inc    dl
  41e174:	fist   DWORD PTR [edx+esi*4]
  41e177:	popf   
  41e178:	enter  0x222,0x84
  41e17c:	shr    BYTE PTR [edi+eiz*1+0x54],0xfe
  41e181:	pushf  
  41e182:	add    al,0x1a
  41e184:	int    0x5c
  41e186:	cmp    BYTE PTR [edx+esi*1-0x44],bl
  41e18a:	iret   
  41e18b:	test   eax,0x10647f47
  41e190:	in     eax,dx
  41e191:	xor    al,0x57
  41e193:	push   0xdea6a0d2
  41e198:	mov    cs,WORD PTR [edx+0x774ed220]
  41e19e:	xchg   ecx,eax
  41e19f:	retf   
  41e1a0:	jmp    0x41e17d
  41e1a2:	jns    0x41e1e5
  41e1a4:	lahf   
  41e1a5:	clc    
  41e1a6:	pop    ss
  41e1a7:	jo     0x41e1dd
  41e1a9:	std    
  41e1aa:	push   ebp
  41e1ab:	imul   ebp,DWORD PTR [edi-0x7b],0x176cb43d
  41e1b2:	cmp    DWORD PTR [edi+0x2ec911af],edx
  41e1b8:	xor    BYTE PTR [ecx+0x43],0xf8
  41e1bc:	lods   eax,DWORD PTR ds:[esi]
  41e1bd:	cmc    
  41e1be:	add    eax,0xf2e709c7
  41e1c3:	xlat   BYTE PTR ds:[ebx]
  41e1c4:	fnstcw WORD PTR [esi-0x64]
  41e1c7:	aas    
  41e1c8:	call   0x6dde:0xecb1699e
  41e1cf:	or     edx,esi
  41e1d1:	ds es int 0xb8
  41e1d5:	pop    esi
  41e1d6:	jmp    0xddbecdda
  41e1db:	fisttp DWORD PTR [esi+0x71394883]
  41e1e1:	and    al,0xfe
  41e1e3:	push   ecx
  41e1e4:	cmp    BYTE PTR [esi-0x3a],ch
  41e1e7:	adc    eax,0x91c18379
  41e1ec:	add    eax,0xdfea0176
  41e1f1:	jmp    0x7360:0x5a1a1dba
  41e1f8:	cwde   
  41e1f9:	dec    ecx
  41e1fa:	into   
  41e1fb:	sahf   
  41e1fc:	cld    
  41e1fd:	test   al,0xcb
  41e1ff:	out    dx,eax
  41e200:	cli    
  41e201:	int    0xff
  41e203:	adc    edi,DWORD PTR fs:[ecx-0xe]
  41e207:	pop    esi
  41e208:	jbe    0x41e20b
  41e20a:	fist   DWORD PTR [ebx-0x3f]
  41e20d:	adc    DWORD PTR [edx+0x51],eax
  41e210:	or     bh,BYTE PTR [edx+0x20]
  41e213:	(bad)  
  41e214:	dec    esp
  41e215:	xor    al,ch
  41e217:	push   ds
  41e218:	add    DWORD PTR [esp+ecx*4+0x31f0eae3],ecx
  41e21f:	cmc    
  41e220:	pop    edx
  41e221:	rcl    ecx,cl
  41e223:	sti    
  41e224:	hlt    
  41e225:	call   FWORD PTR [esi+0x45]
  41e228:	loopne 0x41e1ac
  41e22a:	or     eax,0x2e4b83a8
  41e22f:	(bad)  [eax-0x61]
  41e232:	out    0x40,eax
  41e234:	rol    DWORD PTR [edi],cl
  41e236:	loope  0x41e1f1
  41e238:	(bad)  
  41e239:	shrd   DWORD PTR [ebp-0x2b],eax,cl
  41e23d:	cmp    BYTE PTR ds:0xebec538,0x5c
  41e244:	into   
  41e245:	inc    esp
  41e246:	mov    dl,0xc8
  41e248:	aaa    
  41e249:	mov    bl,0x81
  41e24b:	xlat   BYTE PTR ds:[ebx]
  41e24c:	jbe    0x41e23e
  41e24e:	xchg   ecx,eax
  41e24f:	jae    0x41e21d
  41e251:	push   cs
  41e252:	lods   al,BYTE PTR ds:[esi]
  41e253:	fidivr DWORD PTR [eax]
  41e255:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e256:	mov    ecx,0xd7784fe7
  41e25b:	push   ecx
  41e25c:	add    edi,edi
  41e25e:	pop    es
  41e25f:	or     esi,DWORD PTR [ecx-0x2c]
  41e262:	inc    eax
  41e263:	dec    eax
  41e264:	sahf   
  41e265:	fbstp  TBYTE PTR [eax]
  41e267:	mov    ebp,0x1554c50f
  41e26c:	xchg   ecx,eax
  41e26d:	dec    ecx
  41e26e:	xchg   DWORD PTR ds:0x6feec96e,edx
  41e274:	mov    eax,ds:0xde18dcc5
  41e279:	mov    eax,0xd38ade57
  41e27e:	add    al,al
  41e280:	mov    esi,?
  41e282:	lods   eax,DWORD PTR ds:[esi]
  41e283:	jle    0xdab3af98
  41e289:	(bad)  
  41e28a:	pop    ds
  41e28b:	pop    ss
  41e28c:	cmp    DWORD PTR ds:0xd95d3e9c,eax
  41e292:	xchg   edx,eax
  41e293:	pop    eax
  41e294:	ss cld 
  41e296:	xlat   BYTE PTR ds:[ebx]
  41e297:	ror    BYTE PTR [eax+0x46699aee],cl
  41e29d:	cs xchg edx,eax
  41e29f:	adc    DWORD PTR [esi+0x1975e712],edx
  41e2a5:	addr16 arpl di,bx
  41e2a8:	jae    0x41e28b
  41e2aa:	pop    edx
  41e2ab:	mov    bh,0x5a
  41e2ad:	ror    DWORD PTR [ebp-0x69],cl
  41e2b0:	dec    esp
  41e2b1:	adc    eax,0x6d2a4551
  41e2b6:	xor    DWORD PTR [edi],0x38ad8171
  41e2bc:	repnz adc bl,BYTE PTR [edi]
  41e2bf:	pusha  
  41e2c0:	or     ebp,edx
  41e2c2:	call   0x5834:0xc23afffc
  41e2c9:	dec    ecx
  41e2ca:	in     al,0x37
  41e2cc:	sub    ch,al
  41e2ce:	jg     0x41e2dc
  41e2d0:	in     al,0x69
  41e2d2:	add    DWORD PTR [ebp+0x4e2db2c1],esi
  41e2d8:	leave  
  41e2d9:	jecxz  0x41e2ea
  41e2db:	inc    esi
  41e2dc:	scas   al,BYTE PTR es:[edi]
  41e2dd:	pop    esp
  41e2de:	repnz inc esi
  41e2e0:	jb     0x41e27d
  41e2e2:	xlat   BYTE PTR ds:[ebx]
  41e2e3:	add    bl,bh
  41e2e5:	inc    ebx
  41e2e6:	mov    al,gs:0xde45c8f7
  41e2ec:	pop    ecx
  41e2ed:	cli    
  41e2ee:	jle    0x41e366
  41e2f0:	pop    esi
  41e2f1:	mov    WORD PTR [ebp+0x6569e0ff],gs
  41e2f7:	sbb    eax,0x5f036686
  41e2fc:	leave  
  41e2fd:	outs   dx,DWORD PTR ds:[esi]
  41e2fe:	xchg   ecx,eax
  41e2ff:	bound  eax,QWORD PTR [edi+edx*4-0x4f]
  41e303:	retf   0x10f3
  41e306:	lea    edi,[ecx+esi*1+0x3c]
  41e30a:	addr16 int 0x37
  41e30d:	xchg   BYTE PTR [ecx-0x30],al
  41e310:	dec    edi
  41e311:	rcl    BYTE PTR [esp+edx*4],0x6a
  41e315:	fcomp  QWORD PTR [ebx-0x149124f0]
  41e31b:	into   
  41e31c:	mov    esi,0xa5dc1fb5
  41e321:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e322:	rcl    BYTE PTR [edx+0x337c7155],0xc7
  41e329:	xor    edx,0x0
  41e32c:	cmp    eax,0x70941e0f
  41e331:	jne    0x41e365
  41e337:	cmp    edx,0xffffffff
  41e33a:	jne    0x41e365
  41e340:	mov    eax,DWORD PTR [ebp-0x4]
  41e343:	movsx  eax,BYTE PTR [eax]
  41e346:	cdq    
  41e347:	add    eax,ebx
  41e349:	adc    edx,0xffffffff
  41e34c:	xor    eax,edi
  41e34e:	xor    edx,0x0
  41e351:	cmp    eax,0x70941e1c
  41e356:	jne    0x41e365
  41e35c:	cmp    edx,0xffffffff
  41e35f:	je     0x41e37c
  41e365:	mov    eax,DWORD PTR [ebp-0x10]
  41e368:	xor    eax,ecx
  41e36a:	mov    edx,0xffcd8d0d
  41e36f:	sub    edx,eax
  41e371:	add    DWORD PTR [ebp-0x4],edx
  41e374:	mov    eax,DWORD PTR [ebp-0x4]
  41e377:	jmp    0x41bf5a
  41e37c:	mov    eax,DWORD PTR [ebp-0x14]
  41e37f:	mov    eax,DWORD PTR [eax]
  41e381:	mov    edx,DWORD PTR [ebp-0x4]
  41e384:	mov    edx,DWORD PTR [edx+0x3c]
  41e387:	lea    eax,[edx+eax*8+0x78]
  41e38b:	mov    edx,DWORD PTR [ebp-0x4]
  41e38e:	mov    eax,DWORD PTR [eax+edx*1]
  41e391:	mov    DWORD PTR [ebp-0x8],eax
  41e394:	mov    eax,DWORD PTR [ebp+0x8]
  41e397:	xor    eax,ecx
  41e399:	add    eax,esi
  41e39b:	mov    DWORD PTR [ebp-0x14],eax
  41e39e:	mov    eax,DWORD PTR [ebp+0x8]
  41e3a1:	mov    edx,DWORD PTR [ebp-0x8]
  41e3a4:	xor    eax,ecx
  41e3a6:	add    eax,esi
  41e3a8:	cmp    edx,eax
  41e3aa:	jne    0x41e3c8
  41e3b0:	mov    eax,DWORD PTR [ebp+0xc]
  41e3b3:	xor    eax,ecx
  41e3b5:	mov    ecx,DWORD PTR [ebp-0x8]
  41e3b8:	add    eax,esi
  41e3ba:	imul   eax,ecx
  41e3bd:	mov    DWORD PTR [ebp-0x8],eax
  41e3c0:	push   DWORD PTR [ebp+0x18]
  41e3c3:	jmp    0x4207e6
  41e3c8:	mov    eax,DWORD PTR [ebp-0x8]
  41e3cb:	mov    ecx,DWORD PTR [ebp-0x4]
  41e3ce:	jmp    0x420791
  41e3d3:	test   BYTE PTR [eax+0x3d],cl
  41e3d6:	lock mov cl,0x80
  41e3d9:	or     BYTE PTR [eax],0x6f
  41e3dc:	enter  0xd93f,0x4c
  41e3e0:	mov    ebx,0xd5116f5f
  41e3e5:	add    BYTE PTR [ebx-0x7c7ca327],0xf9
  41e3ec:	leave  
  41e3ed:	push   esp
  41e3ee:	push   eax
  41e3ef:	enter  0xe6b8,0xc3
  41e3f3:	outs   dx,DWORD PTR ds:[esi]
  41e3f4:	xlat   BYTE PTR ds:[ebx]
  41e3f5:	fisttp QWORD PTR [esi+ebp*1]
  41e3f8:	xchg   esp,eax
  41e3f9:	adc    dh,bl
  41e3fb:	and    BYTE PTR [edi+ecx*4-0x48ba821c],0xae
  41e403:	inc    edi
  41e404:	les    ebp,FWORD PTR [ebp-0x570cf593]
  41e40a:	pop    eax
  41e40b:	or     al,0xc2
  41e40d:	and    eax,0x1f9b7be1
  41e412:	sbb    DWORD PTR [edx+ebx*1+0x76],0x57df7b0c
  41e41a:	aas    
  41e41b:	mov    ch,0x30
  41e41d:	ss (bad) 
  41e41f:	outs   dx,DWORD PTR ds:[esi]
  41e420:	std    
  41e421:	fcomp  QWORD PTR [ecx-0x63e16399]
  41e427:	sub    BYTE PTR [ecx-0x23],al
  41e42a:	dec    esi
  41e42b:	add    BYTE PTR [edx-0x3d951435],0x99
  41e432:	push   ss
  41e433:	(bad)  
  41e434:	lock mov dh,0x72
  41e437:	pop    es
  41e438:	in     al,dx
  41e439:	xor    esi,DWORD PTR [eax]
  41e43b:	sar    BYTE PTR [ecx+0x2494c0b1],cl
  41e441:	mov    eax,ds:0xa7649101
  41e446:	fwait
  41e447:	hlt    
  41e448:	lea    edx,[edx+0x71]
  41e44b:	sub    DWORD PTR [esi+0x21c7fcc2],esi
  41e451:	iret   
  41e452:	xchg   esp,ecx
  41e454:	aam    0x68
  41e456:	ds mov eax,0xb3e5ec6a
  41e45c:	adc    esi,DWORD PTR [esi]
  41e45e:	inc    edi
  41e45f:	idiv   BYTE PTR [ebp+0x7fd9e1d]
  41e465:	jp     0x41e454
  41e467:	ins    BYTE PTR es:[edi],dx
  41e468:	retf   0x6c64
  41e46b:	push   cs
  41e46c:	mov    ch,0xac
  41e46e:	in     eax,0x50
  41e470:	xchg   ebx,eax
  41e471:	push   ebx
  41e472:	shl    DWORD PTR [esi+0x2cc74a5e],1
  41e478:	ror    DWORD PTR [edi+0x7c],cl
  41e47b:	and    bl,BYTE PTR [eax]
  41e47d:	push   edx
  41e47e:	stc    
  41e47f:	(bad)
  41e482:	in     al,dx
  41e483:	push   0xffffffa5
  41e485:	and    edx,0x808a4795
  41e48b:	sub    al,0x56
  41e48d:	and    al,0x18
  41e48f:	addr16 ror ebp,1
  41e492:	inc    ecx
  41e493:	test   eax,0xd3ec3a59
  41e498:	xor    BYTE PTR [esi],ch
  41e49a:	xlat   BYTE PTR ds:[ebx]
  41e49b:	lods   eax,DWORD PTR ds:[esi]
  41e49c:	mov    ch,0x15
  41e49e:	lods   al,BYTE PTR ds:[esi]
  41e49f:	imul   edi,DWORD PTR [eax+0x60ae61d1],0x65f6df96
  41e4a9:	cmp    eax,0x218c0487
  41e4ae:	or     eax,0xaeaefe34
  41e4b3:	sub    BYTE PTR [ecx+0x72f3b9a8],ch
  41e4b9:	pop    ebx
  41e4ba:	loopne 0x41e4d5
  41e4bc:	push   esi
  41e4bd:	xor    BYTE PTR [edi],bh
  41e4bf:	adc    bl,BYTE PTR ds:0xae6c875f
  41e4c5:	mov    ah,0x9
  41e4c7:	cmp    dl,BYTE PTR [ecx]
  41e4c9:	int    0xdb
  41e4cb:	sbb    esi,DWORD PTR [eax]
  41e4cd:	mov    ah,0x6e
  41e4cf:	(bad)  
  41e4d1:	and    BYTE PTR [edi+0x25],0xf4
  41e4d5:	cmp    eax,0x4866fd2b
  41e4da:	or     al,0xa4
  41e4dc:	sti    
  41e4dd:	push   eax
  41e4de:	leave  
  41e4df:	mov    edx,0x75c3b179
  41e4e4:	sbb    al,BYTE PTR [ebx]
  41e4e6:	pop    edi
  41e4e7:	add    BYTE PTR [ebp+eax*8+0x459e2286],dh
  41e4ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4ef:	push   es
  41e4f0:	bound  ebx,QWORD PTR [eax+ebx*1+0x1f647370]
  41e4f7:	and    DWORD PTR [esi+0x74],ecx
  41e4fa:	xor    esi,DWORD PTR [edi]
  41e4fc:	or     esp,esi
  41e4fe:	hlt    
  41e4ff:	mov    al,ds:0x719e52d9
  41e504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e505:	ficomp DWORD PTR [edx+0x20649bc0]
  41e50b:	xor    ecx,edi
  41e50d:	aas    
  41e50e:	pop    edx
  41e50f:	mov    ebx,0x4f3bfb9d
  41e514:	xchg   ebp,eax
  41e515:	or     ecx,DWORD PTR [edx-0x1e84a55e]
  41e51b:	mov    WORD PTR [edx-0x2186cced],?
  41e521:	adc    al,0x26
  41e523:	xor    bl,BYTE PTR [ecx+0x7d071816]
  41e529:	retf   0x5685
  41e52c:	sub    bh,BYTE PTR [edi]
  41e52e:	dec    edi
  41e52f:	(bad)  
  41e530:	jo     0x41e54d
  41e532:	ja     0x41e59c
  41e534:	ret    
  41e535:	xor    al,0x46
  41e537:	jo     0x41e577
  41e539:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e53a:	mov    eax,0x81ce829e
  41e53f:	lods   al,BYTE PTR ds:[esi]
  41e540:	and    eax,DWORD PTR [esi+0x6d]
  41e543:	sti    
  41e544:	xlat   BYTE PTR ds:[ebx]
  41e545:	inc    esi
  41e546:	retf   
  41e547:	in     al,dx
  41e548:	mov    ds:0xfafb35c4,eax
  41e54d:	imul   esi,DWORD PTR [ecx],0xfffffff9
  41e550:	dec    ebx
  41e551:	lahf   
  41e552:	ss shr bx,cl
  41e556:	dec    esi
  41e557:	inc    ecx
  41e558:	mov    eax,edx
  41e55a:	adc    eax,0x503d5ae7
  41e55f:	push   ss
  41e560:	pop    esp
  41e561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e562:	mov    eax,ds:0x7c8b8b94
  41e567:	mov    DWORD PTR [ebp-0x5f],0xdefd6d84
  41e56e:	push   edx
  41e56f:	xor    DWORD PTR [ebx-0xde50d03],ebp
  41e575:	sbb    eax,ebx
  41e577:	js     0x41e5d1
  41e579:	(bad)  
  41e57b:	jbe    0x41e5f0
  41e57d:	inc    eax
  41e57e:	(bad)  
  41e580:	xchg   esp,eax
  41e581:	sahf   
  41e582:	adc    DWORD PTR [ecx],ebp
  41e584:	test   al,0xc9
  41e586:	scas   al,BYTE PTR es:[edi]
  41e587:	jno    0x41e59b
  41e589:	imul   eax,esi,0x28
  41e58c:	and    bh,ch
  41e58e:	add    DWORD PTR [ebx+esi*2-0x3],esp
  41e592:	add    ecx,DWORD PTR [ecx-0x1b2697b6]
  41e598:	out    0xbd,eax
  41e59a:	sub    bh,cl
  41e59c:	sub    al,0x34
  41e59e:	lahf   
  41e59f:	call   0xe27c:0x8d8b0654
  41e5a6:	jae    0x41e60b
  41e5a8:	lods   eax,DWORD PTR ds:[esi]
  41e5a9:	pslld  mm3,QWORD PTR [ebx+0x26]
  41e5ad:	mov    eax,ds:0x3dfd6dd7
  41e5b2:	clc    
  41e5b3:	sub    BYTE PTR fs:[ebx-0x51],bh
  41e5b7:	leave  
  41e5b8:	nop
  41e5b9:	dec    edi
  41e5ba:	imul   eax,DWORD PTR [ebx],0x77e3d1a2
  41e5c0:	cmp    BYTE PTR [edx-0x22],0xd3
  41e5c4:	cs inc ecx
  41e5c6:	xlat   BYTE PTR ds:[ebx]
  41e5c7:	xor    al,0x27
  41e5c9:	popa   
  41e5ca:	mov    bh,0x60
  41e5cc:	out    dx,al
  41e5cd:	mov    al,0xd8
  41e5cf:	hlt    
  41e5d0:	push   es
  41e5d1:	xchg   esp,eax
  41e5d2:	in     eax,0x7
  41e5d4:	fisubr WORD PTR [ebx]
  41e5d6:	aad    0xf
  41e5d8:	lods   eax,DWORD PTR ds:[esi]
  41e5d9:	jnp    0x41e64d
  41e5db:	popf   
  41e5dc:	popf   
  41e5dd:	stos   BYTE PTR es:[edi],al
  41e5de:	mov    edi,ebp
  41e5e0:	or     al,0x7e
  41e5e2:	and    esp,DWORD PTR [eax-0x437a7bcc]
  41e5e8:	repnz das 
  41e5ea:	outs   dx,DWORD PTR ds:[esi]
  41e5eb:	sub    al,0x17
  41e5ed:	or     DWORD PTR [ebp-0x3a],eax
  41e5f0:	enter  0x4bdc,0x74
  41e5f4:	inc    edx
  41e5f5:	sbb    al,0xcf
  41e5f7:	push   ds
  41e5f8:	sub    esi,DWORD PTR [eax]
  41e5fa:	jbe    0x41e58b
  41e5fc:	inc    ecx
  41e5fd:	add    cl,BYTE PTR [edi-0x338ce19e]
  41e603:	jno    0x41e606
  41e605:	dec    ecx
  41e606:	pop    es
  41e607:	nop
  41e608:	push   ss
  41e609:	fsubr  QWORD PTR [edx+0x556ef8b7]
  41e60f:	ret    
  41e610:	loope  0x41e5fe
  41e612:	and    bh,dh
  41e614:	ret    0x3198
  41e617:	(bad)  
  41e618:	fistp  QWORD PTR [ecx+ebp*2-0x54]
  41e61c:	rol    bl,cl
  41e61e:	ins    DWORD PTR es:[edi],dx
  41e61f:	cdq    
  41e620:	pop    ebp
  41e621:	mov    esi,0x5dcec2b7
  41e626:	fild   QWORD PTR [ebx-0x7128f7a9]
  41e62c:	fidiv  WORD PTR [ebp+0x3e]
  41e62f:	jle    0x41e5fe
  41e631:	in     eax,0xcd
  41e633:	or     BYTE PTR [edx+ebp*2-0x6e],cl
  41e637:	jmp    0xae6f1a81
  41e63c:	xchg   esp,eax
  41e63d:	xchg   ebp,eax
  41e63e:	loopne 0x41e6a9
  41e640:	ds inc edi
  41e642:	mov    eax,0x1c6e2f72
  41e647:	mov    BYTE PTR [ecx+esi*8+0x0],ch
  41e64b:	cdq    
  41e64c:	ss retf 
  41e64e:	or     BYTE PTR [ebx-0x4a2a7ecb],al
  41e654:	out    dx,al
  41e655:	jge    0x41e693
  41e657:	and    al,0xe
  41e659:	retf   
  41e65a:	icebp  
  41e65b:	adc    eax,0xde6d4575
  41e660:	pop    esp
  41e661:	(bad)  [eax+0x33]
  41e664:	cmp    DWORD PTR [ebp+0x4f30182e],esi
  41e66a:	mov    dl,0x8b
  41e66c:	aam    0x98
  41e66e:	(bad)  
  41e66f:	in     al,dx
  41e670:	test   al,dh
  41e672:	les    edx,FWORD PTR [edi-0x4ce516b5]
  41e678:	mov    cl,0x9a
  41e67a:	and    eax,0xb349df41
  41e67f:	pop    edx
  41e680:	push   edx
  41e681:	pop    edx
  41e682:	mov    esi,0x2968c43e
  41e687:	push   ecx
  41e688:	ret    0x5bca
  41e68b:	xchg   edx,eax
  41e68c:	outs   dx,DWORD PTR ds:[esi]
  41e68d:	sub    al,0xe
  41e68f:	aad    0x21
  41e691:	je     0x41e6ed
  41e693:	mov    DWORD PTR [ebx],eax
  41e695:	nop
  41e696:	jno    0x41e6cf
  41e698:	pop    ss
  41e699:	xor    edx,DWORD PTR ss:[edi]
  41e69c:	xchg   edx,eax
  41e69d:	pop    ecx
  41e69e:	ins    BYTE PTR es:[edi],dx
  41e69f:	sub    BYTE PTR ds:0x8fa1af52,cl
  41e6a5:	mov    edi,0x76a1cb58
  41e6aa:	inc    ecx
  41e6ab:	hlt    
  41e6ac:	push   edi
  41e6ad:	lahf   
  41e6ae:	sbb    DWORD PTR [ecx],esi
  41e6b0:	and    eax,ebx
  41e6b2:	mov    edi,0x64f48769
  41e6b7:	or     esp,DWORD PTR [ebp-0x10]
  41e6ba:	pop    es
  41e6bb:	test   DWORD PTR [edx-0x795f7dc7],eax
  41e6c1:	in     al,dx
  41e6c2:	test   eax,0x3f50a182
  41e6c7:	jbe    0x41e6bb
  41e6c9:	inc    edx
  41e6ca:	pushf  
  41e6cb:	or     eax,0xdf39b3a2
  41e6d0:	inc    esp
  41e6d1:	iret   
  41e6d2:	std    
  41e6d3:	ret    0x536
  41e6d6:	imul   edi,DWORD PTR [eax+0x16],0x9e527a86
  41e6dd:	std    
  41e6de:	push   ss
  41e6df:	mov    es,WORD PTR [eax+0x2a78c6df]
  41e6e5:	hlt    
  41e6e6:	push   ebp
  41e6e7:	adc    al,0x4c
  41e6e9:	xchg   edi,eax
  41e6ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6eb:	into   
  41e6ec:	js     0x41e672
  41e6ee:	pop    ebx
  41e6ef:	mov    bl,0x93
  41e6f1:	ds pop ebx
  41e6f3:	cmp    eax,0xb575d2d6
  41e6f8:	sbb    dl,al
  41e6fa:	scas   al,BYTE PTR es:[edi]
  41e6fb:	xchg   edi,edx
  41e6fd:	rcl    BYTE PTR [ecx-0x1d],cl
  41e700:	push   esi
  41e701:	ds sahf 
  41e703:	and    dh,BYTE PTR [eax]
  41e705:	popf   
  41e706:	dec    esi
  41e707:	fist   DWORD PTR [ebp+0x6e]
  41e70a:	push   ebx
  41e70b:	fld    TBYTE PTR [eax+0x74]
  41e70e:	std    
  41e70f:	sbb    eax,0x3b2461a1
  41e714:	xchg   edi,eax
  41e715:	jno    0x41e76d
  41e717:	les    esi,FWORD PTR [eax+0x5]
  41e71a:	inc    edx
  41e71b:	cmc    
  41e71c:	sbb    esp,ecx
  41e71e:	add    bh,BYTE PTR [ebx+0x4e]
  41e721:	shr    BYTE PTR [edx+esi*2],0x36
  41e725:	es mov esi,0xa75da632
  41e72b:	inc    ecx
  41e72c:	push   ecx
  41e72d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e72e:	jno    0x41e70a
  41e730:	push   esp
  41e731:	aad    0x4f
  41e733:	cmc    
  41e734:	cs push es
  41e736:	pop    edi
  41e737:	adc    ebp,DWORD PTR [ebx+0x5c]
  41e73a:	out    dx,eax
  41e73b:	push   ebp
  41e73c:	popa   
  41e73d:	inc    ebp
  41e73e:	xchg   ebp,eax
  41e73f:	cmp    BYTE PTR [edx-0x4c0b4ff2],al
  41e745:	mov    ecx,0x5678302b
  41e74a:	(bad)  
  41e74b:	shl    DWORD PTR [edi],cl
  41e74d:	fisttp DWORD PTR [ecx]
  41e74f:	cmp    ecx,esi
  41e751:	pop    ds
  41e752:	ltr    WORD PTR [eax+0xa5e9fb0]
  41e759:	ror    BYTE PTR [esi-0x2695aa8b],1
  41e75f:	ins    DWORD PTR es:[edi],dx
  41e760:	dec    ebx
  41e761:	adc    al,0x94
  41e763:	mov    al,0x66
  41e765:	imul   ebx,ebp,0x8368d7b8
  41e76b:	xchg   DWORD PTR [edx],eax
  41e76d:	les    esi,FWORD PTR [ecx+0x67]
  41e770:	popa   
  41e771:	mov    al,ds:0x5a70998d
  41e776:	xlat   BYTE PTR ds:[ebx]
  41e777:	or     BYTE PTR [eax],bl
  41e779:	and    ecx,edx
  41e77b:	fwait
  41e77c:	adc    eax,0x71c691bd
  41e781:	mov    edi,0xd9f42f5f
  41e786:	mov    edi,0xceb6e5bb
  41e78b:	sbb    al,0x3b
  41e78d:	or     al,0x1f
  41e78f:	cmp    al,0x7d
  41e791:	nop
  41e792:	fs aaa 
  41e794:	mov    ebx,0xd2654286
  41e799:	mov    al,ds:0x4cbbebc3
  41e79e:	jnp    0x41e7e9
  41e7a0:	jns    0x41e72c
  41e7a2:	jmp    0x41e782
  41e7a4:	adc    BYTE PTR [ebp-0x569ca022],bh
  41e7aa:	cli    
  41e7ab:	mov    ds:0x6b56dc58,al
  41e7b0:	push   ecx
  41e7b1:	add    ebx,esi
  41e7b3:	test   dl,0xe1
  41e7b6:	std    
  41e7b7:	inc    ecx
  41e7b8:	test   DWORD PTR [ebp-0x549c64ef],esp
  41e7be:	lea    edi,[eax-0x60c76859]
  41e7c4:	xchg   edi,esp
  41e7c6:	dec    edx
  41e7c7:	mov    ds:0x16d01f62,al
  41e7cc:	test   eax,0x289afc1b
  41e7d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7d3:	push   esp
  41e7d4:	push   esi
  41e7d5:	aas    
  41e7d6:	adc    al,0x6
  41e7d8:	stc    
  41e7d9:	loop   0x41e760
  41e7db:	push   edx
  41e7dc:	xchg   esi,eax
  41e7dd:	sbb    BYTE PTR [edx],cl
  41e7df:	jg     0x41e82d
  41e7e1:	shr    ch,1
  41e7e3:	stc    
  41e7e4:	jge    0x41e85b
  41e7e6:	sub    eax,0x93246be1
  41e7eb:	mov    cl,0x5a
  41e7ed:	xchg   edi,eax
  41e7ee:	cmp    al,BYTE PTR [edx]
  41e7f0:	inc    edx
  41e7f1:	xchg   ebx,eax
  41e7f2:	or     eax,0x6e273dfa
  41e7f7:	imul   ecx,ebx,0x1644e084
  41e7fd:	mov    bh,0xd1
  41e7ff:	xlat   BYTE PTR ds:[ebx]
  41e800:	cdq    
  41e801:	jl     0x41e865
  41e803:	mov    ds:0x483d4c20,eax
  41e808:	inc    ecx
  41e809:	dec    edi
  41e80a:	cld    
  41e80b:	retf   
  41e80c:	or     eax,0xd8eae918
  41e811:	outs   dx,DWORD PTR ds:[esi]
  41e812:	nop
  41e813:	sub    esp,DWORD PTR [ebx+0x43521dde]
  41e819:	jmp    0xd0e5196c
  41e81e:	ins    BYTE PTR es:[edi],dx
  41e81f:	test   DWORD PTR [eax-0x2888a28e],0xc30890c
  41e829:	ja     0x41e89d
  41e82b:	(bad)  
  41e82c:	lock or BYTE PTR [edi-0x7f],al
  41e830:	inc    eax
  41e831:	into   
  41e832:	pop    ebp
  41e833:	jnp    0x41e88e
  41e835:	pushw  ds
  41e837:	or     dl,ah
  41e839:	scas   al,BYTE PTR es:[edi]
  41e83a:	lea    eax,[edx]
  41e83c:	int3   
  41e83d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e83e:	ss mov esi,0x237aa2e2
  41e844:	push   ecx
  41e845:	sbb    dh,al
  41e847:	ja     0x41e839
  41e849:	in     eax,0xf3
  41e84b:	xchg   ebx,eax
  41e84c:	test   al,0x8d
  41e84e:	test   edi,eax
  41e850:	outs   dx,BYTE PTR ds:[esi]
  41e851:	adc    BYTE PTR [eax+0x5f],cl
  41e854:	nop
  41e855:	pop    esp
  41e856:	jmp    0x41e88c
  41e858:	out    dx,eax
  41e859:	mul    BYTE PTR [edx-0x29ba0a0c]
  41e85f:	push   0xd
  41e861:	std    
  41e862:	cmp    BYTE PTR [edi],ch
  41e864:	lahf   
  41e865:	dec    esi
  41e866:	dec    esi
  41e867:	jo     0x41e868
  41e869:	and    BYTE PTR [ebp-0x4e30077e],bl
  41e86f:	push   ebx
  41e870:	xor    DWORD PTR [ebx],eax
  41e872:	and    BYTE PTR [ebx],al
  41e874:	fidiv  WORD PTR [ebx*8-0x4d695cdb]
  41e87b:	dec    edx
  41e87c:	xchg   esi,eax
  41e87d:	aad    0x2
  41e87f:	into   
  41e880:	mov    BYTE PTR [esi+0x5e],al
  41e883:	mov    dl,0x41
  41e885:	pop    edx
  41e886:	fbld   TBYTE PTR [ebp-0x70]
  41e889:	xor    bl,BYTE PTR [ebx+0x1985cbd1]
  41e88f:	icebp  
  41e890:	push   esi
  41e891:	mov    edi,DWORD PTR [ebx+0x4114a0f8]
  41e897:	xor    esp,esp
  41e899:	mov    esp,0xa8073257
  41e89e:	inc    esp
  41e89f:	out    0x23,eax
  41e8a1:	mov    ds:0xa545b49,al
  41e8a6:	push   eax
  41e8a8:	jb     0x41e8d6
  41e8aa:	(bad)  
  41e8ab:	ret    
  41e8ac:	xor    eax,0x76373747
  41e8b1:	lahf   
  41e8b2:	jmp    0xdb2c4fb9
  41e8b7:	arpl   WORD PTR [esi+0x57],dx
  41e8ba:	dec    ebx
  41e8bb:	imul   edx,DWORD PTR [esi],0x3faef3bb
  41e8c1:	push   eax
  41e8c2:	loopne 0x41e8fc
  41e8c4:	sbb    BYTE PTR [ebx+0x1d],dh
  41e8c7:	mov    BYTE PTR [edx-0x27],cl
  41e8ca:	(bad)  
  41e8cb:	xlat   BYTE PTR ds:[ebx]
  41e8cc:	in     eax,0xef
  41e8ce:	push   eax
  41e8cf:	leave  
  41e8d0:	push   esp
  41e8d1:	xchg   ebp,eax
  41e8d2:	add    al,0xaa
  41e8d4:	push   cs
  41e8d5:	imul   ebx,DWORD PTR [eax-0x5b6f5357],0xffffffe7
  41e8dc:	fsub   QWORD PTR [ebp-0x28]
  41e8df:	mov    bh,0x1e
  41e8e1:	xchg   BYTE PTR [esi-0x11632f71],bh
  41e8e7:	loop   0x41e87c
  41e8e9:	push   ecx
  41e8ea:	xor    BYTE PTR [ecx-0x3ae04358],dl
  41e8f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8f1:	enter  0xba17,0x6d
  41e8f5:	(bad)  [ebx]
  41e8f7:	adc    edi,DWORD PTR [edx-0x39]
  41e8fa:	jle    0x41e946
  41e8fc:	fldcw  WORD PTR [ecx-0x11fb31ec]
  41e902:	push   esp
  41e903:	jg     0x41e984
  41e905:	inc    esi
  41e906:	mov    ebp,0x214402a1
  41e90b:	cmp    BYTE PTR [esp+eiz*2],bl
  41e90e:	push   edi
  41e90f:	sbb    eax,esp
  41e911:	inc    esi
  41e912:	lds    ecx,FWORD PTR [edx+0x21]
  41e915:	xchg   ebx,eax
  41e916:	ja     0x41e908
  41e918:	fidiv  WORD PTR ds:0x7e53e445
  41e91e:	xlat   BYTE PTR ds:[ebx]
  41e91f:	push   ss
  41e920:	fisttp WORD PTR [ecx+0x3b014cb3]
  41e926:	sub    edx,DWORD PTR [eax]
  41e928:	inc    DWORD PTR [ecx-0x758b1a30]
  41e92e:	test   eax,0x4ae899f0
  41e933:	test   DWORD PTR [ebx-0x1b],esp
  41e936:	jb     0x41e92f
  41e938:	lea    esi,[ecx+0x588f0e06]
  41e93e:	fcmovne st,st(7)
  41e940:	test   eax,0x4bc17a1
  41e945:	add    al,0x3c
  41e947:	push   es
  41e948:	das    
  41e949:	mov    ch,0xe
  41e94b:	in     al,dx
  41e94c:	mov    ecx,0x8f68362
  41e951:	mov    WORD PTR [edi-0x9],gs
  41e954:	fiadd  DWORD PTR [ebx-0x58]
  41e957:	sar    DWORD PTR [esi],1
  41e959:	idiv   dl
  41e95b:	mov    edi,?
  41e95d:	pop    ss
  41e95e:	fiadd  DWORD PTR [edi+0x5e]
  41e961:	fdivr  DWORD PTR [esi-0x2717f4d3]
  41e967:	lods   eax,DWORD PTR ds:[esi]
  41e968:	pop    ebp
  41e969:	lods   al,BYTE PTR ds:[esi]
  41e96a:	pushf  
  41e96b:	or     ebp,DWORD PTR [ebp-0x4c]
  41e96e:	fistp  DWORD PTR [ebx+edi*8-0x6c37006e]
  41e975:	ds cld 
  41e977:	mov    ah,0xd1
  41e979:	clc    
  41e97a:	xchg   esi,eax
  41e97b:	shr    BYTE PTR [edi-0x5aa17c2f],cl
  41e981:	sub    bl,bl
  41e983:	int    0xb2
  41e985:	nop
  41e986:	push   0xffffff85
  41e988:	add    ah,bh
  41e98a:	mov    ah,0xc8
  41e98c:	mov    eax,ds:0x7ec3035a
  41e991:	aam    0x18
  41e993:	outs   dx,DWORD PTR ds:[esi]
  41e994:	cmp    al,0x4c
  41e996:	mov    ch,0x1a
  41e998:	mov    eax,0xa789f6d4
  41e99d:	lods   eax,DWORD PTR ds:[esi]
  41e99e:	mov    bh,0x80
  41e9a0:	push   ds
  41e9a1:	and    al,BYTE PTR [esi]
  41e9a3:	stos   BYTE PTR es:[edi],al
  41e9a4:	xor    eax,0x1a7b4bef
  41e9a9:	aad    0xef
  41e9ab:	sbb    al,0xc0
  41e9ad:	test   DWORD PTR [esi],ecx
  41e9af:	sub    dh,dl
  41e9b1:	fsub   QWORD PTR [ebp+0x1c039b19]
  41e9b7:	mov    dl,0x16
  41e9b9:	add    dl,BYTE PTR ds:0x8cbfafc
  41e9bf:	and    BYTE PTR [eax*4-0x536f393f],al
  41e9c6:	dec    ecx
  41e9c7:	test   al,0x2b
  41e9c9:	mov    edi,0x24aa73b0
  41e9ce:	jno    0x41ea0d
  41e9d0:	fld    TBYTE PTR [edx+0x3659255f]
  41e9d6:	out    dx,al
  41e9d7:	jle    0x41e9d9
  41e9d9:	sub    ah,BYTE PTR [esi-0x57]
  41e9dc:	fadd   QWORD PTR [ebp+ebp*4-0x1e8a3e5c]
  41e9e3:	loope  0x41ea11
  41e9e5:	inc    eax
  41e9e6:	nop
  41e9e7:	pextrw edi,(bad),0xc5
  41e9e9:	jp     0x41e9d2
  41e9eb:	shl    BYTE PTR [edi+0x40],1
  41e9ee:	cmp    BYTE PTR [esi+0x1b],ah
  41e9f1:	popf   
  41e9f2:	inc    eax
  41e9f3:	xor    eax,ecx
  41e9f5:	scas   eax,DWORD PTR es:[edi]
  41e9f6:	cwde   
  41e9f7:	inc    ebx
  41e9f8:	stos   BYTE PTR es:[edi],al
  41e9f9:	sub    al,BYTE PTR [eax-0xf]
  41e9fc:	xchg   edi,edi
  41e9fe:	je     0x41ea7d
  41ea00:	push   esi
  41ea01:	out    dx,al
  41ea02:	add    esp,edx
  41ea04:	sbb    al,0xf
  41ea06:	jnp    0x41e9d5
  41ea08:	outs   dx,DWORD PTR ds:[esi]
  41ea09:	inc    DWORD PTR [edi+ebp*4-0x6eadd710]
  41ea10:	sar    DWORD PTR [eax+0x6b],cl
  41ea13:	div    DWORD PTR [ebx]
  41ea15:	push   ds
  41ea16:	hlt    
  41ea17:	lods   eax,DWORD PTR ds:[esi]
  41ea18:	fucomp st(0)
  41ea1a:	das    
  41ea1b:	and    DWORD PTR [eax+ebp*2-0x53],0xa8849628
  41ea23:	test   dl,bl
  41ea25:	sbb    esi,DWORD PTR [ecx-0x5be762ec]
  41ea2b:	jge    0x41ea42
  41ea2d:	inc    esp
  41ea2e:	aas    
  41ea2f:	cmp    al,0x7d
  41ea31:	stos   DWORD PTR es:[edi],eax
  41ea32:	xchg   DWORD PTR [edx],esi
  41ea34:	inc    edi
  41ea35:	mov    edx,esp
  41ea37:	mov    ah,0x33
  41ea39:	cmp    esi,DWORD PTR [eax+eiz*1-0x3467c27c]
  41ea40:	dec    ebx
  41ea41:	mov    al,0xff
  41ea43:	sub    BYTE PTR [esi],dl
  41ea45:	ror    DWORD PTR [esi],1
  41ea47:	aad    0xcb
  41ea49:	mov    ebp,0xbb3c6516
  41ea4e:	lahf   
  41ea4f:	adc    WORD PTR [ecx],dx
  41ea52:	lods   eax,DWORD PTR ds:[esi]
  41ea53:	push   eax
  41ea54:	je     0x41e9e6
  41ea56:	ret    0x41f4
  41ea59:	and    al,0x32
  41ea5b:	pushf  
  41ea5c:	xchg   ebx,eax
  41ea5d:	add    DWORD PTR [eax-0x24fe06ac],0x57
  41ea64:	jecxz  0x41ea47
  41ea66:	pusha  
  41ea67:	push   ds
  41ea68:	pop    ecx
  41ea69:	xor    ah,BYTE PTR [esi+0x66cd92bb]
  41ea6f:	mov    esp,0x54128400
  41ea74:	dec    ebx
  41ea75:	test   DWORD PTR [edx-0x689aaf4d],esi
  41ea7b:	das    
  41ea7c:	xchg   ebp,eax
  41ea7d:	push   edi
  41ea7e:	mov    WORD PTR [eax],es
  41ea80:	inc    esi
  41ea81:	jge    0x41ea39
  41ea83:	hlt    
  41ea84:	nop
  41ea85:	or     DWORD PTR [eax+ebp*2],esi
  41ea88:	push   ebp
  41ea89:	dec    esp
  41ea8a:	in     eax,0xa7
  41ea8c:	ficomp WORD PTR [edx+esi*1+0x21536cfc]
  41ea93:	not    BYTE PTR [edx+0x3e3a6171]
  41ea99:	sbb    al,0x2a
  41ea9b:	sbb    BYTE PTR [ebp+0x5a],dh
  41ea9e:	adc    eax,0x30f0bb42
  41eaa3:	sub    eax,0xbac21e65
  41eaa8:	inc    ebp
  41eaa9:	mov    ds:0x1b2eb7ca,al
  41eaae:	jns    0x41ea82
  41eab0:	mov    ecx,0xa5e19df9
  41eab5:	mov    ds:0x6a966278,al
  41eaba:	rcl    BYTE PTR [esi+0x4d],0x6
  41eabe:	(bad)  
  41eabf:	pop    edi
  41eac0:	imul   ebp,DWORD PTR [edx+0x4d5737a6],0xffffff8b
  41eac7:	jo     0x41ead8
  41eac9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eaca:	push   ebx
  41eacb:	repnz mov ecx,0x99019eb8
  41ead1:	das    
  41ead2:	dec    ebx
  41ead3:	jns    0x41eae8
  41ead5:	add    DWORD PTR [eax],esi
  41ead7:	(bad)  [eax+0x6061194c]
  41eadd:	in     eax,0x7c
  41eadf:	fdivr  QWORD PTR [eax+ebp*4]
  41eae2:	pop    esi
  41eae3:	es pop ebp
  41eae5:	inc    eax
  41eae6:	fild   WORD PTR [eax+ecx*4-0x19]
  41eaea:	bound  ecx,QWORD PTR [esi+0x53a5ae15]
  41eaf0:	mov    ds:0x7a3edb30,al
  41eaf5:	inc    eax
  41eaf6:	and    al,0xc4
  41eaf8:	push   ss
  41eaf9:	ins    BYTE PTR es:[edi],dx
  41eafa:	mov    cl,0x24
  41eafc:	jmp    0xa3f6:0xfec53d66
  41eb03:	mov    BYTE PTR [edi-0x5ace0c57],0x93
  41eb0a:	ins    DWORD PTR es:[edi],dx
  41eb0b:	push   eax
  41eb0c:	retf   
  41eb0d:	push   eax
  41eb0e:	not    BYTE PTR [ecx-0x1f0a3cf6]
  41eb14:	jns    0x41eb43
  41eb16:	stc    
  41eb17:	pop    ecx
  41eb18:	xchg   ecx,eax
  41eb19:	add    dl,al
  41eb1b:	or     eax,0xe9911a59
  41eb20:	cld    
  41eb21:	inc    esi
  41eb22:	push   ebx
  41eb23:	retf   
  41eb24:	mov    edi,esp
  41eb26:	sub    BYTE PTR [edi-0x66],bh
  41eb29:	das    
  41eb2a:	fld    DWORD PTR [edi+0x35]
  41eb2d:	(bad)  
  41eb2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb2f:	and    edx,DWORD PTR [edx]
  41eb31:	lahf   
  41eb32:	sub    eax,0xbc646791
  41eb37:	push   esp
  41eb38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb39:	std    
  41eb3a:	xor    eax,0x48b37a8b
  41eb3f:	pop    ebp
  41eb40:	fs sbb esp,ecx
  41eb43:	cld    
  41eb44:	sub    eax,DWORD PTR [edi+0x27]
  41eb47:	outs   dx,BYTE PTR ds:[esi]
  41eb48:	nop
  41eb49:	push   eax
  41eb4a:	push   es
  41eb4b:	mov    eax,ds:0x88ac01c8
  41eb50:	inc    ecx
  41eb51:	jbe    0x41eb54
  41eb53:	sbb    ecx,DWORD PTR [edi+0x655dd7f]
  41eb59:	jmp    0x41eb7b
  41eb5b:	test   cl,bh
  41eb5d:	push   0xd753311c
  41eb62:	sub    al,0xba
  41eb64:	sbb    edi,DWORD PTR ds:0xc9812529
  41eb6a:	ffree  st(6)
  41eb6c:	test   edi,edi
  41eb6e:	int    0x8a
  41eb70:	xchg   DWORD PTR [edi-0x537b9933],ebp
  41eb76:	jl     0x41eb82
  41eb78:	outs   dx,DWORD PTR ds:[esi]
  41eb79:	sbb    eax,0x93b78006
  41eb7e:	dec    ebp
  41eb7f:	inc    esp
  41eb80:	mov    ebp,DWORD PTR [ecx-0x7c]
  41eb83:	cmc    
  41eb84:	push   esp
  41eb85:	jle    0x41eb79
  41eb87:	fstp   TBYTE PTR [edx]
  41eb89:	fs dec ecx
  41eb8b:	mov    eax,ds:0x74907645
  41eb90:	cmp    bh,BYTE PTR [ecx-0x57f87312]
  41eb96:	mov    al,al
  41eb98:	(bad)  
  41eb99:	out    dx,al
  41eb9a:	sub    eax,0xd3e17033
  41eb9f:	iret   
  41eba0:	ss push ss
  41eba2:	sub    al,0x97
  41eba4:	dec    esp
  41eba5:	test   BYTE PTR [ebx+0x77],cl
  41eba8:	std    
  41eba9:	inc    ebp
  41ebaa:	jo     0x41ebac
  41ebac:	popa   
  41ebad:	loop   0x41eb9e
  41ebaf:	loope  0x41eb58
  41ebb1:	cld    
  41ebb2:	mov    dh,0xc6
  41ebb4:	cmp    eax,0xedc816c4
  41ebb9:	pushf  
  41ebba:	sub    BYTE PTR [esi],dh
  41ebbc:	sub    BYTE PTR [eax-0x79],al
  41ebbf:	pop    edi
  41ebc0:	pusha  
  41ebc1:	mov    ebx,0x5ca56b8b
  41ebc6:	fstp   QWORD PTR [eax-0x2cd2da5f]
  41ebcc:	push   0xffffff80
  41ebce:	mov    dh,0x3a
  41ebd0:	hlt    
  41ebd1:	jmp    0xd9855464
  41ebd6:	dec    ebx
  41ebd7:	aad    0x86
  41ebd9:	cmp    edi,edx
  41ebdb:	mov    edi,DWORD PTR [ebx]
  41ebdd:	jmp    0xb4aa063a
  41ebe2:	pop    ecx
  41ebe3:	mov    ah,BYTE PTR [edx]
  41ebe5:	pop    eax
  41ebe6:	sub    ebp,DWORD PTR [ebx]
  41ebe8:	popa   
  41ebe9:	nop
  41ebea:	pop    esp
  41ebeb:	dec    esi
  41ebec:	or     DWORD PTR [ebx-0x34cf949f],esp
  41ebf2:	dec    edi
  41ebf3:	dec    ebp
  41ebf4:	call   0xc831:0xbaa6f909
  41ebfb:	lahf   
  41ebfc:	fcomp  st(5)
  41ebfe:	xchg   edi,eax
  41ebff:	add    dl,ah
  41ec01:	sbb    ch,BYTE PTR [esi+0x5af07709]
  41ec07:	shl    BYTE PTR [esi+0x49],cl
  41ec0a:	jecxz  0x41ebee
  41ec0c:	clc    
  41ec0d:	clc    
  41ec0e:	xor    dh,BYTE PTR [ecx+edx*2-0x33bbac80]
  41ec15:	sub    BYTE PTR [eax+eax*4],dl
  41ec18:	inc    esp
  41ec19:	lods   al,BYTE PTR ds:[esi]
  41ec1a:	scas   eax,DWORD PTR es:[edi]
  41ec1b:	test   al,0x53
  41ec1d:	mov    BYTE PTR [ecx+0xe],al
  41ec20:	in     eax,dx
  41ec21:	jp     0x41ec58
  41ec23:	jl     0x41ebdb
  41ec25:	in     al,0xf5
  41ec27:	add    DWORD PTR [ebp+0xca1fde8],ebx
  41ec2d:	mov    eax,ds:0x1f80fc33
  41ec32:	ins    DWORD PTR es:[edi],dx
  41ec33:	test   BYTE PTR [eax+ecx*1-0x2d],al
  41ec37:	push   ebx
  41ec38:	xor    al,0x29
  41ec3a:	or     edx,0xb0185703
  41ec40:	ret    
  41ec41:	mov    WORD PTR [edi],fs
  41ec43:	js     0x41ebd8
  41ec45:	(bad)  
  41ec47:	jle    0x41ebca
  41ec49:	(bad)  
  41ec4a:	(bad)  
  41ec4b:	sbb    al,0x95
  41ec4d:	mov    al,0xcd
  41ec4f:	lock stos BYTE PTR es:[edi],al
  41ec51:	sbb    edi,DWORD PTR [edi]
  41ec53:	clc    
  41ec54:	loop   0x41ec7b
  41ec56:	jmp    0x41ecbc
  41ec58:	jb     0x41ecaf
  41ec5a:	inc    esi
  41ec5b:	mov    es,WORD PTR [eax-0x6e6a3eb]
  41ec61:	lahf   
  41ec62:	xchg   BYTE PTR [ebx],dl
  41ec64:	shl    eax,1
  41ec66:	retf   
  41ec67:	ds in  eax,0x17
  41ec6a:	xor    cl,BYTE PTR [ebx]
  41ec6c:	fsub   DWORD PTR [ecx+0x25546e10]
  41ec72:	mov    eax,ds:0x72848048
  41ec77:	lea    ecx,[ebx-0x3b]
  41ec7a:	loop   0x41ece5
  41ec7c:	and    al,0x2
  41ec7e:	push   ebp
  41ec7f:	dec    edx
  41ec80:	std    
  41ec81:	dec    eax
  41ec82:	test   BYTE PTR [esi-0x1f],ah
  41ec85:	sub    al,0xb
  41ec87:	and    bl,0x78
  41ec8a:	cwde   
  41ec8b:	cmc    
  41ec8c:	mov    eax,ds:0xbb9b5e8b
  41ec91:	mov    ds:0x4e14ffda,al
  41ec96:	ins    DWORD PTR es:[edi],dx
  41ec97:	(bad)  
  41ec98:	cmc    
  41ec99:	jno    0x41ec9f
  41ec9b:	sub    eax,0xe1e88609
  41eca0:	push   cs
  41eca1:	and    DWORD PTR [eax-0x76c1e6c7],esp
  41eca7:	ins    BYTE PTR es:[edi],dx
  41eca8:	ins    DWORD PTR es:[edi],dx
  41eca9:	or     DWORD PTR [ebx+esi*4+0x39],eax
  41ecad:	lock out dx,al
  41ecaf:	jnp    0x41ecec
  41ecb1:	imul   ebx,DWORD PTR [esi],0x34
  41ecb4:	stos   DWORD PTR es:[edi],eax
  41ecb5:	jmp    0x764ff337
  41ecba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecbc:	fcmovbe st,st(5)
  41ecbe:	inc    eax
  41ecbf:	xor    al,0x1
  41ecc1:	sbb    ah,BYTE PTR [esi]
  41ecc3:	bound  ebp,QWORD PTR [ecx+0x59]
  41ecc6:	mov    esp,0xfad5f0a9
  41eccb:	adc    ecx,ebp
  41eccd:	imul   esi,DWORD PTR fs:[ebp+0x33205d45],0x7d499fa3
  41ecd8:	xchg   ebx,eax
  41ecd9:	jmp    0x7611:0xb7621fb2
  41ece0:	pop    ds
  41ece1:	pusha  
  41ece2:	gs in  eax,0xd3
  41ece5:	retf   
  41ece6:	or     eax,0x9838f9e
  41eceb:	mov    WORD PTR [esi-0x43f1bba4],?
  41ecf1:	dec    edx
  41ecf2:	aam    0x5f
  41ecf4:	dec    ecx
  41ecf5:	and    bl,BYTE PTR ds:0xbeaea038
  41ecfb:	ja     0x41ecc8
  41ecfd:	mov    bl,0xaa
  41ecff:	int3   
  41ed00:	mov    ebx,0xcb3bed22
  41ed05:	adc    BYTE PTR [esp+ecx*8+0x1f20c797],dl
  41ed0c:	dec    edx
  41ed0d:	repz adc BYTE PTR [ebx-0xa],0xfd
  41ed12:	jmp    0xf10edec6
  41ed17:	mov    bh,0xf2
  41ed19:	adc    BYTE PTR [edx+0x44],bl
  41ed1c:	dec    eax
  41ed1d:	mov    edi,0x152da896
  41ed22:	enter  0x17ce,0x61
  41ed26:	xchg   ebx,eax
  41ed27:	jmp    0x7e11658a
  41ed2c:	push   ebx
  41ed2d:	and    bh,ch
  41ed2f:	mov    eax,0x688ef2eb
  41ed34:	jo     0x41ed83
  41ed36:	mov    eax,?
  41ed38:	gs inc ecx
  41ed3a:	fnstenv [ebp+0x3c38a04b]
  41ed40:	into   
  41ed41:	retf   0x612a
  41ed44:	or     BYTE PTR [edx-0x25],ch
  41ed47:	pop    ss
  41ed48:	jmp    FWORD PTR [eax-0x38]
  41ed4b:	inc    edx
  41ed4c:	or     ebp,DWORD PTR [eax-0x34]
  41ed4f:	push   es
  41ed50:	xchg   BYTE PTR [edx+0x1],ah
  41ed53:	cmp    edx,edi
  41ed55:	mov    ebp,0x36a398a9
  41ed5a:	fldenv [edi]
  41ed5c:	and    bh,BYTE PTR [ebp+0x21ff75d1]
  41ed62:	fucomp st(3)
  41ed64:	jno    0x41eddf
  41ed66:	and    dh,BYTE PTR [edx]
  41ed68:	push   eax
  41ed69:	stos   DWORD PTR es:[edi],eax
  41ed6a:	repnz sar DWORD PTR [ecx],1
  41ed6d:	aad    0x2f
  41ed6f:	test   eax,0xc1bb9bb9
  41ed74:	pop    esp
  41ed75:	add    al,0x5
  41ed77:	or     DWORD PTR [ecx-0x2e],edx
  41ed7a:	sbb    DWORD PTR [ecx],0xa0705870
  41ed80:	add    dl,BYTE PTR [ebp+ebx*1+0x6]
  41ed84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed85:	mov    bh,0x1b
  41ed87:	out    dx,al
  41ed88:	push   es
  41ed89:	add    DWORD PTR [ebx-0x5b],esp
  41ed8c:	xor    bl,ch
  41ed8e:	lods   al,BYTE PTR ds:[esi]
  41ed8f:	cmp    eax,0x861c2ae9
  41ed94:	sub    al,0xf0
  41ed96:	ins    DWORD PTR es:[edi],dx
  41ed97:	sbb    DWORD PTR [edx+eiz*4-0x3b],ebx
  41ed9b:	jge    0x41ed9e
  41ed9d:	data16 jne 0x41ed30
  41eda0:	push   0x76
  41eda2:	xor    BYTE PTR [edx],cl
  41eda4:	fs sub eax,0xee9fd2da
  41edaa:	inc    esp
  41edab:	xor    DWORD PTR [edi-0x2],ebx
  41edae:	jae    0x41ee12
  41edb0:	sub    BYTE PTR [ebx-0x5fa97f61],dh
  41edb6:	adc    al,0x8f
  41edb8:	add    bl,BYTE PTR [edx]
  41edba:	into   
  41edbb:	mov    esi,DWORD PTR [eax+0x4a]
  41edbe:	out    0xa1,eax
  41edc0:	add    DWORD PTR [edi+0x2b],ebp
  41edc3:	adc    cl,BYTE PTR [ebp+0xf]
  41edc6:	push   cs
  41edc7:	cmp    edx,DWORD PTR [ebx-0x59869c09]
  41edcd:	or     al,0x75
  41edcf:	int    0x25
  41edd1:	inc    eax
  41edd2:	jg     0x41edf4
  41edd4:	ins    DWORD PTR es:[edi],dx
  41edd5:	invd   
  41edd7:	and    dh,BYTE PTR ds:0x69bfdafb
  41eddd:	adc    eax,0x98131bf1
  41ede2:	pop    eax
  41ede3:	jmp    0xba87:0x63eed36e
  41edea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edeb:	lahf   
  41edec:	inc    ebp
  41eded:	xor    eax,0x4db58952
  41edf2:	repz xchg ebp,eax
  41edf4:	cdq    
  41edf5:	jne    0x41ee57
  41edf7:	pop    esi
  41edf8:	mov    dh,0xdd
  41edfa:	mov    ecx,DWORD PTR [esi-0x1c5bbcde]
  41ee00:	idiv   DWORD PTR [edx]
  41ee02:	pop    eax
  41ee03:	iret   
  41ee04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee05:	pop    ss
  41ee06:	icebp  
  41ee07:	cli    
  41ee08:	aam    0xcd
  41ee0a:	jle    0x41edf5
  41ee0c:	fnstcw WORD PTR [edx+0x5f]
  41ee0f:	inc    edx
  41ee10:	fild   WORD PTR [edx-0x67906db4]
  41ee16:	push   ecx
  41ee17:	lahf   
  41ee18:	lods   eax,DWORD PTR ds:[esi]
  41ee19:	jne    0x41edf2
  41ee1b:	in     eax,0xe0
  41ee1d:	dec    ebx
  41ee1e:	push   0x1f
  41ee20:	(bad)  
  41ee21:	xchg   esp,eax
  41ee22:	imul   edx,DWORD PTR [ebx-0x4a7da900],0xa97e5984
  41ee2c:	or     ah,cl
  41ee2e:	dec    eax
  41ee2f:	hlt    
  41ee30:	jge    0x41ee13
  41ee32:	pop    edx
  41ee33:	clc    
  41ee34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee35:	sub    ebp,DWORD PTR [edi+0x6b9fa9f5]
  41ee3b:	push   0x99fd8ce9
  41ee40:	rcr    dh,0x3f
  41ee43:	cmp    dh,bh
  41ee45:	rol    BYTE PTR ds:0x4f2b20dc,1
  41ee4b:	shr    DWORD PTR [esi+esi*1-0x3cd35d86],1
  41ee52:	nop
  41ee53:	mov    WORD PTR [ecx+0x37f46d5b],fs
  41ee59:	call   0xab28209e
  41ee5e:	(bad)  
  41ee5f:	mov    al,ds:0x2df6a145
  41ee64:	jnp    0x41ee84
  41ee66:	mov    dl,0x6f
  41ee68:	out    0x3a,eax
  41ee6a:	push   ecx
  41ee6b:	mov    BYTE PTR [edi],bh
  41ee6d:	int    0x7d
  41ee6f:	push   edi
  41ee70:	outs   dx,BYTE PTR ds:[esi]
  41ee71:	scas   eax,DWORD PTR es:[edi]
  41ee72:	mov    eax,0xaedca1d1
  41ee77:	mov    al,0xff
  41ee79:	dec    esi
  41ee7a:	add    edi,DWORD PTR [esi+ecx*4+0x3e6213ff]
  41ee81:	ins    BYTE PTR es:[edi],dx
  41ee82:	or     eax,DWORD PTR [ebx-0x7c53fda0]
  41ee88:	retf   0xbf6f
  41ee8b:	aas    
  41ee8c:	adc    ch,bl
  41ee8e:	push   cs
  41ee8f:	retf   
  41ee90:	mov    bh,0x9a
  41ee92:	inc    eax
  41ee93:	xor    ebx,esi
  41ee95:	xor    eax,0x2745a4f
  41ee9a:	fcmovnbe st,st(7)
  41ee9c:	mov    esi,0x44df5dad
  41eea1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eea2:	xor    BYTE PTR [ebx],0x4f
  41eea5:	mov    edi,0x546f0b89
  41eeaa:	inc    ebp
  41eeab:	xor    ch,BYTE PTR [ebp-0x78936dd2]
  41eeb1:	or     ch,0xe8
  41eeb4:	sti    
  41eeb5:	mov    cs,WORD PTR [ecx+0xed0f88f]
  41eebb:	push   eax
  41eebc:	rcr    eax,1
  41eebe:	into   
  41eebf:	push   0x753af84e
  41eec4:	push   esi
  41eec5:	xchg   ebp,ebx
  41eec7:	out    0x79,al
  41eec9:	push   eax
  41eeca:	xchg   BYTE PTR [ebp-0x15],al
  41eecd:	int    0xfa
  41eecf:	cmp    eax,0x1155b0a3
  41eed4:	add    al,0xd5
  41eed6:	aad    0xe5
  41eed8:	outs   dx,DWORD PTR ds:[esi]
  41eed9:	pop    edi
  41eeda:	repnz mov al,ds:0xf7b35759
  41eee0:	div    BYTE PTR [ebp-0x1]
  41eee3:	mov    ds:0xe43b7dfd,eax
  41eee8:	jecxz  0x41ee7a
  41eeea:	cwde   
  41eeeb:	enter  0x6cf3,0xac
  41eeef:	in     al,dx
  41eef0:	pop    es
  41eef1:	das    
  41eef2:	enter  0x6d11,0xaa
  41eef6:	popa   
  41eef7:	inc    ebx
  41eef8:	inc    eax
  41eef9:	repz loopne 0x41ef22
  41eefc:	dec    edx
  41eefd:	jmp    0x41ef60
  41eeff:	mov    al,0xe9
  41ef01:	clc    
  41ef02:	and    ebp,DWORD PTR [eax-0x3]
  41ef05:	mov    dh,0x9e
  41ef07:	dec    ebp
  41ef08:	sbb    eax,0xa2cc68
  41ef0d:	cmc    
  41ef0e:	fs jae 0x41ee9e
  41ef11:	inc    ebx
  41ef12:	and    BYTE PTR [ebp+0x1300c119],dh
  41ef18:	push   edi
  41ef19:	adc    al,0x21
  41ef1b:	jecxz  0x41eed3
  41ef1d:	mov    esi,esp
  41ef1f:	ret    0xedf6
  41ef22:	xlat   BYTE PTR ds:[ebx]
  41ef23:	arpl   WORD PTR [edi],bx
  41ef25:	cmp    al,0x25
  41ef27:	pop    ss
  41ef28:	jecxz  0x41eef6
  41ef2a:	ins    BYTE PTR es:[edi],dx
  41ef2b:	mov    ebx,edi
  41ef2d:	inc    edi
  41ef2e:	icebp  
  41ef2f:	ret    0xf206
  41ef32:	out    0x91,al
  41ef34:	push   es
  41ef35:	pop    ss
  41ef36:	cmp    DWORD PTR [edi],esp
  41ef38:	jge    0x41efa8
  41ef3a:	ss cdq 
  41ef3c:	out    0x10,eax
  41ef3e:	out    dx,eax
  41ef3f:	gs lahf 
  41ef41:	sbb    esp,DWORD PTR [eax]
  41ef43:	shr    DWORD PTR [edi+0x17],cl
  41ef46:	jbe    0x41ef2d
  41ef48:	outs   dx,BYTE PTR ds:[esi]
  41ef49:	adc    esp,DWORD PTR [edx+0x5a]
  41ef4c:	mov    dh,0x99
  41ef4e:	jno    0x41eeee
  41ef50:	fs loop 0x41efcf
  41ef53:	xor    DWORD PTR [edx+0x3b],esi
  41ef56:	(bad)  
  41ef57:	rol    DWORD PTR [ecx-0x7e178415],1
  41ef5d:	mov    gs,WORD PTR [ebx]
  41ef5f:	pop    esi
  41ef60:	fwait
  41ef61:	aas    
  41ef62:	scas   eax,DWORD PTR es:[edi]
  41ef63:	jl     0x41ef6c
  41ef65:	arpl   WORD PTR [ebx+ebp*1+0x40],bx
  41ef69:	outs   dx,DWORD PTR ds:[esi]
  41ef6a:	stos   BYTE PTR es:[edi],al
  41ef6b:	jbe    0x41ef63
  41ef6d:	push   edx
  41ef6e:	enter  0xaf00,0xc7
  41ef72:	xor    eax,0x17cc1ae9
  41ef77:	fwait
  41ef78:	repz mul edx
  41ef7b:	mov    edx,0x4081f804
  41ef80:	in     eax,dx
  41ef81:	dec    ebx
  41ef82:	or     eax,0xfc14dc6b
  41ef87:	shr    BYTE PTR [edx],cl
  41ef89:	ficom  WORD PTR [ebx]
  41ef8b:	mov    BYTE PTR [edx],ch
  41ef8d:	scas   eax,DWORD PTR es:[edi]
  41ef8e:	int    0x8e
  41ef90:	push   edi
  41ef91:	sub    BYTE PTR [ebp-0x73e3d543],dl
  41ef97:	cld    
  41ef98:	je     0x41ef75
  41ef9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef9b:	sub    BYTE PTR [esi-0x7],bl
  41ef9e:	mov    al,ds:0xef15521f
  41efa3:	into   
  41efa4:	push   ecx
  41efa5:	jl     0x41efde
  41efa7:	cmp    DWORD PTR [edx],ebp
  41efa9:	mov    ebp,0x65f512e0
  41efae:	popa   
  41efaf:	in     al,0x1f
  41efb1:	xchg   edi,eax
  41efb2:	pop    ds
  41efb3:	pop    es
  41efb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efb5:	loopne 0x41ef97
  41efb7:	loope  0x41efe0
  41efb9:	jl     0x41ef6f
  41efbb:	fisttp DWORD PTR [ebx]
  41efbd:	(bad)  
  41efbe:	push   ebp
  41efbf:	xchg   edx,eax
  41efc0:	inc    edi
  41efc1:	rcr    ch,0xbb
  41efc4:	lods   al,BYTE PTR ds:[esi]
  41efc5:	inc    eax
  41efc6:	mov    ds:0xeab8373d,eax
  41efcb:	mov    dh,0xd
  41efcd:	jmp    0x6f731ba7
  41efd2:	pop    esp
  41efd3:	je     0x41f02a
  41efd5:	push   ecx
  41efd6:	push   cs
  41efd7:	stc    
  41efd8:	sahf   
  41efd9:	and    BYTE PTR [edx-0xf4a34b6],ch
  41efdf:	and    eax,0xc1725c19
  41efe4:	arpl   WORD PTR [esi-0x18cff6fb],si
  41efea:	inc    esp
  41efeb:	out    0xb1,eax
  41efed:	mov    ah,0x14
  41efef:	mov    bl,0x53
  41eff1:	test   eax,0x5461346
  41eff6:	add    al,BYTE PTR [ecx]
  41eff8:	loop   0x41ef9e
  41effa:	and    esp,eax
  41effc:	fwait
  41effd:	lea    esp,[ebp-0x1694e835]
  41f003:	fcomp  DWORD PTR [eax-0x32aa8c12]
  41f009:	xor    al,0x95
  41f00b:	dec    ebx
  41f00c:	mov    esp,edx
  41f00e:	jp     0x41efe6
  41f010:	and    al,0x93
  41f012:	(bad)  
  41f014:	pop    eax
  41f015:	jmp    0xb2ff56f7
  41f01a:	neg    dh
  41f01c:	je     0x41f03a
  41f01e:	cs popa 
  41f020:	mov    ch,0x81
  41f022:	jecxz  0x41f065
  41f024:	cmp    al,0xe7
  41f026:	mov    edi,0xac0921fb
  41f02b:	ins    BYTE PTR es:[edi],dx
  41f02c:	rcr    BYTE PTR [edi-0x77fb6a70],1
  41f032:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f033:	gs aad 0x10
  41f036:	scas   eax,DWORD PTR es:[edi]
  41f037:	ins    BYTE PTR es:[edi],dx
  41f038:	rcl    ah,1
  41f03a:	push   esi
  41f03b:	xor    DWORD PTR ds:0x3c08f6de,edx
  41f041:	or     DWORD PTR [edx+0x16e4de31],ecx
  41f047:	inc    edx
  41f048:	dec    esp
  41f049:	pop    esi
  41f04a:	out    dx,eax
  41f04b:	sbb    DWORD PTR [edi-0x67],edi
  41f04e:	hlt    
  41f04f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f050:	ror    BYTE PTR [ebp-0x24],0x7f
  41f054:	or     bh,BYTE PTR [esp+eiz*8+0x4ff11bc9]
  41f05b:	mov    al,0x6
  41f05d:	push   ss
  41f05e:	scas   eax,DWORD PTR es:[edi]
  41f05f:	lds    esp,FWORD PTR [ecx-0xb]
  41f062:	imul   eax,ebx,0xfba580ca
  41f068:	add    edx,DWORD PTR [ecx-0x36]
  41f06b:	push   ebp
  41f06c:	and    DWORD PTR [ebx+eiz*8],eax
  41f06f:	dec    edi
  41f070:	lock and eax,0x3da7a729
  41f076:	test   DWORD PTR [eax-0x73376d41],0xea96ded3
  41f080:	cmp    ch,BYTE PTR [eax]
  41f082:	jbe    0x41f021
  41f084:	inc    ebp
  41f085:	into   
  41f086:	mov    esp,0xddb9239f
  41f08b:	or     esp,esi
  41f08d:	cmp    al,0x54
  41f08f:	or     eax,0xc5858770
  41f094:	inc    ecx
  41f095:	outs   dx,BYTE PTR ds:[esi]
  41f096:	not    BYTE PTR [edx]
  41f098:	xchg   BYTE PTR [ebp+eax*1-0x3a4a176a],dh
  41f09f:	out    0x5,eax
  41f0a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0a2:	nop
  41f0a3:	mov    eax,0x9dfc8de1
  41f0a8:	xchg   BYTE PTR [ecx],bl
  41f0aa:	test   eax,0xe8f88d25
  41f0af:	xor    al,0x6c
  41f0b1:	pop    ecx
  41f0b2:	ret    
  41f0b3:	test   DWORD PTR [ecx+esi*2],0xa9013db0
  41f0ba:	mov    bl,0x81
  41f0bc:	jae    0x41f042
  41f0be:	pushf  
  41f0bf:	jecxz  0x41f0cd
  41f0c1:	mov    edi,0x81c89904
  41f0c6:	dec    ebp
  41f0c7:	lahf   
  41f0c8:	fucomp st(1)
  41f0ca:	rcr    BYTE PTR [esi-0x156bb35f],1
  41f0d0:	retf   
  41f0d1:	push   ds
  41f0d2:	dec    esp
  41f0d3:	and    ch,BYTE PTR [eax]
  41f0d5:	in     al,dx
  41f0d6:	cs cmp al,0xf4
  41f0d9:	ja     0x41f06a
  41f0db:	jno    0x41f077
  41f0dd:	clc    
  41f0de:	pop    ebx
  41f0df:	nop
  41f0e0:	mov    cl,0xca
  41f0e2:	add    al,0xc4
  41f0e4:	jbe    0x41f110
  41f0e6:	test   al,0x20
  41f0e8:	pop    eax
  41f0e9:	sti    
  41f0ea:	hlt    
  41f0eb:	dec    ebx
  41f0ec:	jle    0x41f12b
  41f0ee:	xor    eax,0x64e0639d
  41f0f3:	inc    esp
  41f0f4:	sbb    esi,DWORD PTR [edx]
  41f0f6:	mov    ecx,0x2e8d8fde
  41f0fb:	sub    BYTE PTR [esi+ecx*8],ah
  41f0fe:	scas   al,BYTE PTR es:[edi]
  41f0ff:	sub    DWORD PTR [ebp-0xbc1cce3],edx
  41f105:	xchg   ecx,eax
  41f106:	daa    
  41f107:	adc    eax,0xdc9a89ac
  41f10c:	out    0x66,eax
  41f10e:	pop    ebx
  41f10f:	fnstcw WORD PTR ds:0xd98edf02
  41f115:	les    edi,FWORD PTR [ebp-0x67]
  41f118:	add    eax,DWORD PTR [ebp+0x23ab79c1]
  41f11e:	test   dh,bh
  41f120:	gs out 0xcf,al
  41f123:	push   edi
  41f124:	xor    esi,esi
  41f126:	aas    
  41f127:	add    bl,cl
  41f129:	xor    DWORD PTR [ecx+0x71],edx
  41f12c:	pop    ds
  41f12d:	inc    ebx
  41f12e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f12f:	adc    DWORD PTR [ebx+eiz*1-0x3b18eb61],ecx
  41f136:	movzx  ebp,WORD PTR [ebx+0x22]
  41f13a:	xor    al,0x70
  41f13c:	push   cs
  41f13d:	fmul   DWORD PTR [eax+0x7f]
  41f140:	sti    
  41f141:	(bad)  
  41f142:	xor    eax,0x40d4caec
  41f147:	ins    BYTE PTR es:[edi],dx
  41f148:	inc    esi
  41f149:	outs   dx,BYTE PTR ds:[esi]
  41f14a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f14b:	xchg   esp,eax
  41f14c:	inc    dh
  41f14e:	sti    
  41f14f:	add    al,0xa6
  41f151:	jae    0x41f19a
  41f153:	jmp    0x472:0x34a22098
  41f15a:	std    
  41f15b:	mov    esp,0x4bdf68d6
  41f160:	call   0x4042:0x3a319d82
  41f167:	loopne 0x41f178
  41f169:	test   al,0x5d
  41f16b:	and    ah,BYTE PTR [ebp+0x15]
  41f16e:	dec    ecx
  41f16f:	fst    st(5)
  41f171:	scas   eax,DWORD PTR es:[edi]
  41f172:	mov    edi,0x78a186fe
  41f177:	shr    BYTE PTR [esi-0x336cfbfa],cl
  41f17d:	pop    edx
  41f17e:	fild   WORD PTR [ebx-0x14]
  41f181:	leave  
  41f182:	pop    ebp
  41f183:	inc    esp
  41f184:	dec    eax
  41f185:	push   ebx
  41f186:	and    DWORD PTR [edi],eax
  41f188:	sbb    dl,BYTE PTR [ecx-0x48298854]
  41f18e:	lahf   
  41f18f:	rcl    DWORD PTR [eax-0x6c9a83a6],1
  41f195:	cld    
  41f196:	test   BYTE PTR [edx+0x60],bh
  41f199:	xchg   edi,ebx
  41f19b:	mov    cl,0x70
  41f19d:	cmp    eax,0x87cfe577
  41f1a2:	imul   ebx,DWORD PTR [eax-0x72701d8e],0xa94c3f2b
  41f1ac:	les    edi,FWORD PTR [edx+0x13]
  41f1af:	stos   BYTE PTR es:[edi],al
  41f1b0:	pop    ebp
  41f1b1:	dec    ebx
  41f1b2:	mov    ah,ch
  41f1b4:	jns    0x41f1d1
  41f1b6:	mov    ch,0x33
  41f1b8:	in     eax,0xa3
  41f1ba:	fsub   DWORD PTR [edi+0x757ba2ab]
  41f1c0:	test   DWORD PTR [esi+0x47c509aa],ebx
  41f1c6:	retf   
  41f1c7:	adc    al,0x63
  41f1c9:	das    
  41f1ca:	(bad)  
  41f1cc:	mov    al,0x90
  41f1ce:	push   esp
  41f1cf:	sbb    dh,bh
  41f1d1:	pop    esp
  41f1d2:	adc    ah,BYTE PTR [esi+eiz*4]
  41f1d5:	leave  
  41f1d6:	outs   dx,DWORD PTR ds:[esi]
  41f1d7:	test   eax,0x6090ceac
  41f1dc:	sbb    eax,DWORD PTR [edi+0x57]
  41f1df:	sub    al,0xdc
  41f1e1:	mov    esp,0xfe184808
  41f1e6:	or     eax,0xa7eb68ef
  41f1eb:	out    0x5d,eax
  41f1ed:	push   edi
  41f1ee:	and    ah,BYTE PTR ds:0x2cc37e4d
  41f1f4:	pop    es
  41f1f5:	sbb    bh,BYTE PTR [esi]
  41f1f7:	jg     0x41f24a
  41f1f9:	jae    0x41f193
  41f1fb:	jmp    0x41f214
  41f1fd:	xchg   ebx,eax
  41f1fe:	repz int3 
  41f200:	ja     0x41f212
  41f202:	cdq    
  41f203:	push   0xffffff8c
  41f205:	aam    0xbf
  41f207:	jecxz  0x41f265
  41f209:	push   es
  41f20a:	push   ecx
  41f20b:	aas    
  41f20c:	xor    BYTE PTR [ebp-0x35829e4e],bh
  41f212:	sub    DWORD PTR [ecx-0x12],ebx
  41f215:	js     0x41f1f1
  41f217:	test   eax,0x898013eb
  41f21c:	mov    al,ds:0xd5893b61
  41f221:	jecxz  0x41f1f3
  41f223:	inc    edi
  41f224:	fs inc eax
  41f226:	int    0x2c
  41f228:	stc    
  41f229:	xlat   BYTE PTR ds:[ebx]
  41f22a:	repnz ins DWORD PTR es:[edi],dx
  41f22c:	push   edi
  41f22d:	push   0xf6f7e884
  41f232:	mov    ?,WORD PTR [ebp-0x56790a40]
  41f238:	das    
  41f239:	in     al,0x76
  41f23b:	inc    eax
  41f23c:	mov    ds:0xe52cb660,al
  41f241:	clc    
  41f242:	enter  0x3889,0xae
  41f246:	add    edi,edx
  41f248:	shl    dl,cl
  41f24a:	xchg   esp,eax
  41f24b:	mov    ch,0xd9
  41f24d:	fistp  WORD PTR [edi+0x499d9201]
  41f253:	mov    esp,0x4c6e58bf
  41f258:	(bad)  
  41f259:	add    BYTE PTR [edi+0x17d38104],ah
  41f25f:	stos   BYTE PTR es:[edi],al
  41f260:	aaa    
  41f261:	rol    DWORD PTR [edx-0x3be8835a],cl
  41f267:	xchg   esp,eax
  41f268:	shl    dh,1
  41f26a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f26b:	pop    esi
  41f26c:	cdq    
  41f26d:	loop   0x41f271
  41f26f:	xchg   ebx,eax
  41f270:	add    DWORD PTR [edx],edi
  41f272:	mov    dh,0x16
  41f274:	jge    0x41f22d
  41f276:	xor    BYTE PTR [ebx],bl
  41f278:	ret    0x7fd2
  41f27b:	push   ss
  41f27c:	dec    edx
  41f27d:	je     0x41f260
  41f27f:	into   
  41f280:	push   es
  41f281:	pusha  
  41f282:	call   0xddc:0xb643529f
  41f289:	gs add eax,0xac278a5c
  41f28f:	push   edi
  41f290:	adc    ax,0xd5f8
  41f294:	mov    ebp,0x7b16d82b
  41f299:	pop    ebx
  41f29a:	push   edi
  41f29b:	push   0x38
  41f29d:	sub    al,0xf
  41f29f:	mov    ds:0x6c8a2a67,eax
  41f2a4:	pop    ebx
  41f2a5:	mov    ebp,0x6ebef93e
  41f2aa:	add    eax,0xc3ac5e00
  41f2af:	or     ebp,0x5fff91ec
  41f2b5:	sbb    ebx,DWORD PTR [ebx+0x2984c3aa]
  41f2bb:	mov    eax,0x1cbad1d6
  41f2c0:	mov    dl,0x6b
  41f2c2:	fbld   TBYTE PTR [eax]
  41f2c4:	xor    eax,0xac443d6a
  41f2c9:	mov    edx,0xf26c07b5
  41f2ce:	ss int 0x7
  41f2d1:	ins    DWORD PTR es:[edi],dx
  41f2d2:	cmp    DWORD PTR [bp+di+0x2f20],edi
  41f2d7:	(bad)  
  41f2d8:	fisubr WORD PTR ds:0xe9e2c415
  41f2de:	cmp    bh,BYTE PTR [ecx-0x3b1b61e7]
  41f2e4:	add    DWORD PTR [edi-0x5d6be40a],0x1
  41f2eb:	add    DWORD PTR [ecx-0x49f02acf],eax
  41f2f1:	jno    0x41f27d
  41f2f3:	inc    ebp
  41f2f4:	sahf   
  41f2f5:	push   0x2c8b3cf1
  41f2fa:	clc    
  41f2fb:	push   ebp
  41f2fc:	ror    cl,cl
  41f2fe:	repnz pop eax
  41f300:	(bad)  
  41f301:	pop    edi
  41f302:	pop    edi
  41f303:	cmp    al,0x44
  41f305:	pop    edx
  41f306:	daa    
  41f307:	push   es
  41f308:	cmp    al,0xcc
  41f30a:	push   ss
  41f30b:	push   esp
  41f30c:	mov    al,0x72
  41f30e:	jno    0x41f296
  41f310:	inc    esi
  41f311:	mov    ah,0xb8
  41f313:	xchg   esp,ecx
  41f315:	std    
  41f316:	aaa    
  41f317:	pop    ecx
  41f318:	dec    ecx
  41f319:	imul   ecx,DWORD PTR [ecx],0xd3a2df2f
  41f31f:	outs   dx,DWORD PTR ds:[esi]
  41f320:	lock repnz rol BYTE PTR [ebx+eiz*8],1
  41f325:	push   0x2f
  41f327:	sbb    eax,DWORD PTR [ebx-0x2e]
  41f32a:	mov    al,ds:0x4b534b58
  41f32f:	hlt    
  41f330:	sbb    al,0xe9
  41f332:	mov    ah,0x42
  41f334:	add    eax,0x772c5d50
  41f339:	imul   ebx,DWORD PTR [ebx+0x5e],0x44ad7296
  41f340:	jno    0x41f3bf
  41f342:	dec    ebp
  41f343:	stos   BYTE PTR es:[edi],al
  41f344:	dec    eax
  41f345:	xchg   DWORD PTR [ecx],esp
  41f347:	cld    
  41f348:	ins    DWORD PTR es:[edi],dx
  41f349:	sub    BYTE PTR [eax-0x4823c96d],bh
  41f34f:	mov    cl,0xe9
  41f351:	test   eax,0x5f5f26fc
  41f356:	or     al,0xab
  41f358:	or     BYTE PTR [eax+ebp*8-0x6071450b],dh
  41f35f:	out    0xad,eax
  41f361:	jbe    0x41f36e
  41f363:	scas   eax,DWORD PTR es:[edi]
  41f364:	push   ds
  41f365:	das    
  41f366:	cmp    eax,0xd7a12a16
  41f36b:	lahf   
  41f36c:	or     al,0x59
  41f36e:	add    DWORD PTR [ecx+0xda6782e],0x27
  41f375:	cmp    esp,DWORD PTR [ebp+eax*8+0xf2021e4]
  41f37c:	adc    BYTE PTR [ebx+eax*8-0xbf7a11c],0x8a
  41f384:	add    dl,al
  41f386:	xchg   edi,eax
  41f387:	or     dl,BYTE PTR [ebx]
  41f389:	pop    DWORD PTR [ebx+edi*2]
  41f38c:	sbb    al,0x28
  41f38e:	push   ebx
  41f38f:	fld    st(6)
  41f391:	dec    edx
  41f392:	int    0x3a
  41f394:	fild   WORD PTR [ebp+ebp*2+0x47]
  41f398:	jle    0x41f3b6
  41f39a:	fimul  DWORD PTR [edi]
  41f39c:	xlat   BYTE PTR ds:[ebx]
  41f39d:	xchg   esp,eax
  41f39e:	inc    edx
  41f39f:	cmp    ebx,edx
  41f3a1:	test   BYTE PTR [edx],dh
  41f3a3:	outs   dx,DWORD PTR ds:[esi]
  41f3a4:	loop   0x41f40b
  41f3a6:	dec    esi
  41f3a7:	stos   BYTE PTR es:[edi],al
  41f3a8:	cwd    
  41f3aa:	xlat   BYTE PTR ds:[ebx]
  41f3ab:	cmp    eax,0x5817ad8e
  41f3b0:	retf   0xd941
  41f3b3:	popf   
  41f3b4:	ds jge 0x41f3a6
  41f3b7:	lahf   
  41f3b8:	test   al,0xd
  41f3ba:	sub    dl,bl
  41f3bc:	arpl   WORD PTR [ebp+0x17],dx
  41f3bf:	mov    cl,0xa
  41f3c1:	popa   
  41f3c2:	mov    gs,esi
  41f3c4:	inc    edi
  41f3c5:	fld    QWORD PTR [ecx-0x30]
  41f3c8:	xchg   BYTE PTR [edx],bh
  41f3ca:	mov    al,dh
  41f3cc:	loopne 0x41f448
  41f3ce:	inc    eax
  41f3cf:	ins    BYTE PTR es:[edi],dx
  41f3d0:	ror    DWORD PTR [edi-0x59],0xc
  41f3d4:	pop    ebp
  41f3d5:	(bad)  
  41f3d7:	out    dx,al
  41f3d8:	nop
  41f3d9:	aaa    
  41f3da:	jmp    0x14c3:0xd8d877dc
  41f3e1:	mov    ebp,0x3f7d2254
  41f3e6:	and    al,0xa
  41f3e8:	enter  0x30e6,0x41
  41f3ec:	mov    gs,WORD PTR [ebx]
  41f3ee:	fst    st(5)
  41f3f0:	scas   al,BYTE PTR es:[edi]
  41f3f1:	mov    dh,0x41
  41f3f3:	je     0x41f3a6
  41f3f5:	fist   DWORD PTR [esi+0x56]
  41f3f8:	cmp    al,0xb
  41f3fa:	outs   dx,BYTE PTR ds:[esi]
  41f3fb:	push   edx
  41f3fc:	adc    ah,bl
  41f3fe:	lods   al,BYTE PTR ds:[esi]
  41f3ff:	and    eax,0x8001b853
  41f404:	jmp    0xe1ac:0x311d3f47
  41f40b:	sub    edx,0x59
  41f40e:	pop    edx
  41f40f:	push   ebx
  41f410:	or     eax,0x923529ce
  41f415:	xor    eax,0x34ff9618
  41f41a:	ficomp WORD PTR [ecx-0x5bb5c255]
  41f420:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f421:	vprotw ymm12,[ebx],xmm6
  41f426:	fld    QWORD PTR [ebp-0x67]
  41f429:	pop    ebp
  41f42a:	loopne 0x41f498
  41f42c:	test   DWORD PTR [ebx+0x43fa2cb4],esi
  41f432:	aad    0xea
  41f434:	test   eax,0x69f5e8f7
  41f439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f43a:	add    BYTE PTR [edx],dh
  41f43c:	add    al,BYTE PTR [ebp+0x50]
  41f43f:	inc    ebp
  41f440:	jl     0x41f478
  41f442:	adc    esi,DWORD PTR [edi]
  41f444:	jne    0x41f432
  41f446:	inc    edx
  41f447:	scas   al,BYTE PTR es:[edi]
  41f448:	xor    al,bh
  41f44a:	(bad)  
  41f44c:	lahf   
  41f44d:	push   ebp
  41f44e:	shr    BYTE PTR [eax+0x63eeff54],cl
  41f454:	push   ds
  41f455:	icebp  
  41f456:	mov    BYTE PTR [edi],dh
  41f458:	sahf   
  41f459:	sbb    al,0x2f
  41f45b:	push   ebp
  41f45c:	mov    ds:0xe66e06f,eax
  41f461:	pop    eax
  41f462:	popf   
  41f463:	xor    BYTE PTR cs:[edi+esi*1],0x7a
  41f468:	ins    DWORD PTR es:[edi],dx
  41f469:	or     dl,bh
  41f46b:	sub    BYTE PTR [eax-0x665c7588],cl
  41f471:	ins    BYTE PTR es:[edi],dx
  41f472:	imul   ebx,DWORD PTR [edi-0x13fbc16f],0x1cf433e
  41f47c:	jnp    0x41f4d0
  41f47e:	jle    0x41f43e
  41f480:	and    al,0xb2
  41f482:	or     BYTE PTR [ecx*8-0x3f6b3020],al
  41f489:	nop
  41f48a:	dec    edx
  41f48b:	push   esi
  41f48c:	sbb    eax,0x404b5ae1
  41f491:	add    eax,0xb684aa30
  41f496:	inc    edx
  41f497:	inc    ecx
  41f498:	fcomp  DWORD PTR [eax-0x39e82acb]
  41f49e:	sar    ah,0x63
  41f4a1:	dec    edi
  41f4a2:	cdq    
  41f4a3:	bound  ecx,QWORD PTR [ebp-0x13]
  41f4a6:	xchg   DWORD PTR [esi-0x63968a33],ebx
  41f4ac:	mov    ecx,0x16739491
  41f4b1:	push   es
  41f4b2:	xchg   ebp,eax
  41f4b3:	adc    esi,0xee63dff6
  41f4b9:	inc    edi
  41f4ba:	xchg   dl,dh
  41f4bc:	pushf  
  41f4bd:	dec    ebx
  41f4be:	adc    edx,ebx
  41f4c0:	je     0x41f52b
  41f4c2:	(bad)  
  41f4c4:	jno    0x41f504
  41f4c6:	shl    DWORD PTR [ebx-0x328f4120],cl
  41f4cc:	cmp    eax,0x92e71ba1
  41f4d1:	push   edi
  41f4d2:	xor    DWORD PTR ds:0x2a0bd913,0xf61e6918
  41f4dc:	out    0xd6,al
  41f4de:	icebp  
  41f4df:	out    dx,eax
  41f4e0:	jl     0x41f46c
  41f4e2:	(bad)  
  41f4e3:	mov    cl,0xaa
  41f4e5:	cmp    cl,bl
  41f4e7:	sub    dh,BYTE PTR [edi]
  41f4e9:	push   ebp
  41f4ea:	or     BYTE PTR [ebx],al
  41f4ec:	inc    ebp
  41f4ee:	mul    al
  41f4f0:	rcl    BYTE PTR [eax],0xf7
  41f4f3:	dec    ebp
  41f4f4:	xlat   BYTE PTR ds:[ebx]
  41f4f5:	xor    ebp,DWORD PTR [esi-0x6ef60a60]
  41f4fb:	outs   dx,BYTE PTR ds:[esi]
  41f4fc:	mov    al,ds:0xa6b9d204
  41f501:	(bad)  
  41f502:	cld    
  41f503:	imul   ebx,DWORD PTR [edx-0x3ba45bcf],0xffffff97
  41f50a:	cmovg  esi,DWORD PTR [edx+0x7c]
  41f50e:	push   ebp
  41f50f:	dec    eax
  41f510:	jge    0x41f575
  41f512:	sub    al,BYTE PTR [esi-0x5813a412]
  41f518:	repnz dec esp
  41f51a:	mov    edi,0x5037b415
  41f51f:	add    BYTE PTR [eax+0x56ef6504],bl
  41f525:	adc    eax,0xbfc86294
  41f52a:	retf   
  41f52b:	sbb    al,0xcf
  41f52d:	das    
  41f52e:	lahf   
  41f52f:	add    BYTE PTR [ebx-0x3a7f7823],0xf3
  41f536:	inc    esp
  41f537:	loope  0x41f4e5
  41f539:	ja     0x41f527
  41f53b:	dec    esp
  41f53c:	data16 shl BYTE PTR [esi+0x4],cl
  41f540:	jecxz  0x41f585
  41f542:	in     al,dx
  41f543:	add    eax,0x7f218038
  41f548:	fmul   DWORD PTR [ebp-0x64]
  41f54b:	cmp    al,0x91
  41f54d:	jl     0x41f554
  41f54f:	aaa    
  41f550:	pop    ecx
  41f551:	mov    WORD PTR [esi],gs
  41f553:	mov    eax,0xaf3d693a
  41f558:	ret    
  41f559:	jle    0x41f5d8
  41f55b:	aaa    
  41f55c:	out    dx,eax
  41f55d:	pop    ss
  41f55e:	jp     0x41f592
  41f560:	mov    ch,ah
  41f562:	mov    esi,0x4c5e6d52
  41f567:	xchg   ebp,eax
  41f568:	or     DWORD PTR ds:0xa012fde4,ebx
  41f56e:	jno    0x41f554
  41f570:	addr16 dec ebx
  41f572:	jbe    0x41f5d2
  41f574:	loop   0x41f50d
  41f576:	adc    BYTE PTR [ebx],ah
  41f578:	(bad)  
  41f579:	sub    dl,al
  41f57b:	jb     0x41f5a6
  41f57d:	push   ebp
  41f57e:	arpl   WORD PTR [ebx],bx
  41f580:	js     0x41f57c
  41f582:	jnp    0x41f53d
  41f584:	bound  ebp,QWORD PTR [edi+eiz*1]
  41f587:	cs in  al,dx
  41f589:	std    
  41f58a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f58b:	pop    eax
  41f58c:	(bad)  
  41f58d:	sbb    BYTE PTR [esp+eiz*2],ch
  41f590:	xor    al,0x54
  41f592:	adc    DWORD PTR [ebp-0x40],ecx
  41f595:	xchg   ecx,eax
  41f596:	in     eax,0xbe
  41f598:	push   edi
  41f599:	dec    DWORD PTR [esi]
  41f59b:	ja     0x41f58f
  41f59d:	inc    esi
  41f59e:	push   edx
  41f59f:	push   ebx
  41f5a0:	xor    ebp,DWORD PTR [edi+0x2d]
  41f5a3:	and    al,0xb
  41f5a5:	jb     0x41f59e
  41f5a7:	mov    al,BYTE PTR fs:[esi-0xbdd6237]
  41f5ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5af:	and    ebx,DWORD PTR [edi-0x41]
  41f5b2:	(bad)
  41f5b7:	fimul  DWORD PTR [edi+0x13]
  41f5ba:	dec    eax
  41f5bb:	dec    edx
  41f5bc:	test   eax,0xcc364797
  41f5c1:	aas    
  41f5c2:	mov    bl,0x71
  41f5c4:	jle    0x41f5e6
  41f5c6:	pop    eax
  41f5c7:	cmp    bh,0xf2
  41f5ca:	test   eax,0xaa47ee5c
  41f5cf:	cdq    
  41f5d0:	mov    esi,0x72f6a261
  41f5d5:	in     eax,0xf0
  41f5d7:	sbb    al,0x77
  41f5d9:	and    DWORD PTR [edx+0x7b],edx
  41f5dc:	sti    
  41f5dd:	jo     0x41f618
  41f5df:	popa   
  41f5e0:	nop
  41f5e1:	jne    0x41f623
  41f5e3:	nop
  41f5e4:	mov    ds:0x88422858,eax
  41f5e9:	shl    BYTE PTR [eax],0xb9
  41f5ec:	inc    eax
  41f5ed:	(bad)  
  41f5ee:	int    0x83
  41f5f0:	scas   eax,DWORD PTR es:[edi]
  41f5f1:	pop    ss
  41f5f2:	inc    edx
  41f5f3:	stc    
  41f5f4:	xlat   BYTE PTR ds:[ebx]
  41f5f5:	and    esi,DWORD PTR [esi+0xf]
  41f5f8:	mov    al,0x62
  41f5fa:	inc    edi
  41f5fb:	bound  eax,QWORD PTR [eax+0x6f]
  41f5fe:	xchg   edx,eax
  41f5ff:	adc    eax,0xb87b9c36
  41f604:	lea    ecx,[edx-0x13f18c52]
  41f60a:	pop    esi
  41f60b:	mov    eax,ds:0x682aee18
  41f610:	fwait
  41f611:	out    0x93,al
  41f613:	jmp    0x41f67d
  41f615:	jge    0x41f5fc
  41f617:	inc    esi
  41f618:	in     al,0x18
  41f61a:	cmp    BYTE PTR [edi],bl
  41f61c:	jmp    0x41f622
  41f61e:	dec    edx
  41f61f:	stc    
  41f620:	outs   dx,DWORD PTR ds:[esi]
  41f621:	popa   
  41f622:	push   ecx
  41f623:	(bad)  
  41f624:	out    0x6e,al
  41f626:	dec    esp
  41f627:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f628:	sbb    DWORD PTR [eax-0x6d970283],ecx
  41f62e:	inc    ecx
  41f62f:	test   eax,0x2f1a4317
  41f634:	push   ss
  41f635:	xor    al,0x66
  41f637:	xchg   ecx,eax
  41f638:	hlt    
  41f639:	sbb    eax,ecx
  41f63b:	and    ecx,esp
  41f63d:	addr16 je 0x41f616
  41f640:	into   
  41f641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f642:	add    DWORD PTR [edx*8+0x2cbf6245],esi
  41f649:	cwde   
  41f64a:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f64c:	adc    bh,BYTE PTR [ebp+0x3dded98e]
  41f652:	das    
  41f653:	mov    esp,esi
  41f655:	cmp    ch,bh
  41f657:	push   ebx
  41f658:	cmp    bh,ah
  41f65a:	aaa    
  41f65b:	(bad)  
  41f65c:	repnz rcl BYTE PTR [ebx-0x34],1
  41f660:	xchg   ecx,eax
  41f661:	fdivr  st(4),st
  41f663:	adc    BYTE PTR [ebx-0x1d0e730e],dh
  41f669:	cmc    
  41f66a:	test   BYTE PTR [edi+0x79],ah
  41f66d:	jns    0x41f687
  41f66f:	outs   dx,DWORD PTR ds:[esi]
  41f670:	mov    eax,ds:0x59b7f9d9
  41f675:	push   edi
  41f676:	mov    ss,edi
  41f678:	mov    edi,0x2c379224
  41f67d:	adc    DWORD PTR [eax+eax*4+0x1555d0e5],ebx
  41f684:	call   0xf5c73c4e
  41f689:	push   ss
  41f68a:	or     BYTE PTR [eax+0x3e],0x1a
  41f68e:	adc    DWORD PTR [ebx-0x3adfaf51],edx
  41f694:	and    al,0xab
  41f697:	cld    
  41f698:	inc    ebx
  41f699:	out    dx,eax
  41f69a:	adc    BYTE PTR cs:[ecx-0x123b6a46],0xa1
  41f6a2:	jnp    0x41f69c
  41f6a4:	test   DWORD PTR [di],edi
  41f6a7:	cmp    esp,esi
  41f6a9:	xor    ebp,esi
  41f6ab:	(bad)  
  41f6ac:	fcmovnu st,st(6)
  41f6ae:	xchg   ebp,eax
  41f6af:	xchg   ebx,eax
  41f6b0:	dec    ebp
  41f6b1:	(bad)  
  41f6b5:	push   DWORD PTR [bx-0x4e]
  41f6b9:	neg    DWORD PTR [edi]
  41f6bb:	xchg   BYTE PTR [ebx],cl
  41f6bd:	or     DWORD PTR [esi+0x20],edx
  41f6c0:	cli    
  41f6c1:	inc    edi
  41f6c2:	out    0x80,al
  41f6c4:	or     ecx,eax
  41f6c6:	sbb    eax,0xbd157f4f
  41f6cb:	cmp    DWORD PTR [ebx],edx
  41f6cd:	mov    WORD PTR ds:0x21dc4e9c,?
  41f6d3:	push   edi
  41f6d4:	retf   
  41f6d5:	scas   al,BYTE PTR es:[edi]
  41f6d6:	pushf  
  41f6d7:	cmp    DWORD PTR [edx-0x118084c3],ebx
  41f6dd:	call   0x56b43e2e
  41f6e2:	adc    edx,ebp
  41f6e4:	imul   esi,ecx,0xffffffda
  41f6e7:	loopne 0x41f6c4
  41f6e9:	test   eax,0xba7f01ea
  41f6ee:	mov    gs,WORD PTR [ebp+0x3b84d13a]
  41f6f4:	hlt    
  41f6f5:	xchg   edi,eax
  41f6f6:	daa    
  41f6f7:	daa    
  41f6f8:	mov    al,ds:0x888fabed
  41f6fd:	or     ebp,0xcd80b923
  41f703:	dec    edx
  41f704:	loopne 0x41f782
  41f706:	push   ds
  41f707:	push   ebp
  41f708:	imul   esp,DWORD PTR [ebx],0x85476659
  41f70e:	pop    esp
  41f70f:	mov    ?,WORD PTR [ecx]
  41f711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f712:	dec    ebp
  41f713:	adc    BYTE PTR ss:[edx],0x4d
  41f717:	ins    BYTE PTR es:[edi],dx
  41f718:	xlat   BYTE PTR ds:[ebx]
  41f719:	test   DWORD PTR [ecx],edx
  41f71b:	cmp    al,0x29
  41f71d:	mov    ebx,es
  41f71f:	sbb    edx,DWORD PTR [eax-0x266f3997]
  41f725:	push   esp
  41f726:	mov    ebp,0xf26dfa87
  41f72b:	mov    esp,0xd10ea3a3
  41f730:	or     eax,0x7df2c97e
  41f735:	mov    ecx,0xe66f0305
  41f73a:	mov    cl,0xbf
  41f73c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f73d:	pusha  
  41f73e:	jo     0x41f6d9
  41f740:	push   ebx
  41f741:	call   0xc3f2:0x655f8aac
  41f748:	aad    0x1a
  41f74a:	mov    al,0x5
  41f74c:	mov    al,0xd
  41f74e:	(bad)  
  41f74f:	sbb    DWORD PTR [edx+0x5dba7942],esp
  41f755:	inc    eax
  41f756:	pop    ecx
  41f757:	mov    ah,0x6d
  41f759:	inc    edi
  41f75a:	adc    BYTE PTR [edi+ebx*1],al
  41f75d:	push   edi
  41f75e:	ss test al,0x3f
  41f761:	aas    
  41f762:	cmp    eax,DWORD PTR [ebx+0xb]
  41f765:	std    
  41f766:	mov    bh,0xdd
  41f768:	mov    ds:0xaae99ac5,eax
  41f76d:	fst    DWORD PTR [ecx-0x158e2bc6]
  41f773:	enter  0x7fff,0x19
  41f777:	in     al,0x7
  41f779:	lock dec ebp
  41f77b:	into   
  41f77c:	and    DWORD PTR [esi],eax
  41f77e:	ins    DWORD PTR es:[edi],dx
  41f77f:	mov    cl,0xe3
  41f781:	call   0xf7ff:0xb3a24e0a
  41f788:	mov    fs,WORD PTR [edx+0x34]
  41f78b:	sti    
  41f78c:	sub    eax,0xd2932e80
  41f791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f792:	mov    dh,0x99
  41f794:	inc    ecx
  41f795:	shr    BYTE PTR [ebp+edx*2-0x7cca4d27],0xd5
  41f79d:	fsubr  DWORD PTR [edi+eax*4]
  41f7a0:	repnz ins BYTE PTR es:[edi],dx
  41f7a2:	dec    ecx
  41f7a3:	(bad)  
  41f7a5:	or     dh,dl
  41f7a7:	mov    edi,0xd818c4
  41f7ac:	or     edi,eax
  41f7ae:	sbb    DWORD PTR [esi-0x72],ebx
  41f7b1:	push   esp
  41f7b2:	mov    ebp,0xb23de6c0
  41f7b7:	pop    ss
  41f7b8:	push   esi
  41f7b9:	xor    eax,0x8af29b8c
  41f7be:	lahf   
  41f7bf:	nop
  41f7c0:	(bad)  
  41f7c1:	fidiv  DWORD PTR [edi+0x5fbc6384]
  41f7c7:	in     al,dx
  41f7c8:	fs adc ebx,ecx
  41f7cb:	xor    al,0x32
  41f7cd:	ins    DWORD PTR es:[edi],dx
  41f7ce:	sub    DWORD PTR ds:0x4ae4498a,edi
  41f7d4:	or     edx,eax
  41f7d6:	pop    ss
  41f7d7:	pop    ebp
  41f7d8:	shl    bl,cl
  41f7da:	int3   
  41f7db:	sbb    eax,0xd591b507
  41f7e0:	aam    0xd3
  41f7e2:	fld    QWORD PTR [ebx+0x5]
  41f7e5:	test   eax,0x3bf08281
  41f7ea:	dec    ebx
  41f7eb:	jp     0x41f826
  41f7ed:	out    dx,al
  41f7ee:	cmp    BYTE PTR [ecx],al
  41f7f0:	inc    ebp
  41f7f1:	pop    esi
  41f7f2:	push   ss
  41f7f3:	mov    al,0xe2
  41f7f5:	jg     0x41f7f4
  41f7f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7f8:	push   es
  41f7f9:	loopne 0x41f82f
  41f7fb:	fsub   st(7),st
  41f7fd:	popa   
  41f7fe:	lods   eax,DWORD PTR ds:[esi]
  41f7ff:	and    ebp,DWORD PTR [esi+0x28]
  41f802:	sub    BYTE PTR [edi],bh
  41f804:	(bad)  
  41f805:	out    0xad,al
  41f807:	mov    dh,0xf3
  41f809:	lahf   
  41f80a:	pop    ds
  41f80b:	xchg   ebx,eax
  41f80c:	mov    dl,0x71
  41f80e:	scas   al,BYTE PTR es:[edi]
  41f80f:	loope  0x41f86b
  41f811:	and    ch,BYTE PTR [edx+0x7b]
  41f814:	(bad)  
  41f815:	loope  0x41f824
  41f817:	rol    DWORD PTR [ecx+0x45],1
  41f81a:	(bad)  
  41f81b:	and    eax,eax
  41f81d:	ret    0x5ca9
  41f820:	mov    ch,BYTE PTR [ebp+0x53]
  41f823:	loopne 0x41f885
  41f825:	pop    edi
  41f826:	shl    edx,cl
  41f828:	ret    
  41f829:	mov    BYTE PTR [edi+0x29],cl
  41f82c:	add    eax,0x4f748854
  41f831:	xchg   esi,eax
  41f832:	adc    BYTE PTR [edx],0x8
  41f835:	out    0x4,al
  41f837:	mov    ebp,ecx
  41f839:	lock (bad) 
  41f83c:	push   edi
  41f83d:	xchg   ecx,eax
  41f83e:	pop    edi
  41f83f:	(bad)  [edx]
  41f841:	or     BYTE PTR [ebx+edi*1-0x86e0166],bl
  41f848:	aam    0x5d
  41f84a:	push   ebx
  41f84b:	rol    BYTE PTR [edi],0x25
  41f84e:	mov    ebx,0x670039c9
  41f853:	push   DWORD PTR [ecx+edi*1+0x67]
  41f857:	in     al,dx
  41f858:	pop    ebp
  41f859:	sti    
  41f85a:	push   ebx
  41f85b:	mov    dh,0x37
  41f85d:	and    al,0x73
  41f85f:	jge    0x41f87f
  41f861:	add    al,0xc9
  41f863:	lock and DWORD PTR [ecx+0x71],0xbcdad4b2
  41f86b:	push   ss
  41f86c:	xchg   ebp,eax
  41f86d:	call   0xccba825
  41f872:	fadd   DWORD PTR [ebx-0x2638c9dc]
  41f878:	ror    ecx,1
  41f87a:	cmp    al,0xd9
  41f87c:	push   ds
  41f87d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f87e:	out    dx,al
  41f87f:	lea    edx,[ebp+esi*8+0x74]
  41f883:	ins    DWORD PTR es:[edi],dx
  41f884:	xchg   edx,eax
  41f885:	aaa    
  41f886:	add    BYTE PTR ds:0x6f01a12,ch
  41f88c:	enter  0xd7a4,0x1a
  41f890:	cmp    BYTE PTR [edi-0x6],bl
  41f893:	stos   BYTE PTR es:[edi],al
  41f894:	jg     0x41f8c8
  41f896:	aam    0x9f
  41f898:	jae    0x41f913
  41f89a:	push   es
  41f89b:	sbb    esp,DWORD PTR [ebx-0x42]
  41f89e:	stos   BYTE PTR es:[edi],al
  41f89f:	cmc    
  41f8a0:	jbe    0x41f848
  41f8a2:	xor    ch,0xc4
  41f8a5:	sahf   
  41f8a6:	into   
  41f8a7:	sub    eax,0xfb9ca918
  41f8ac:	xor    cl,ch
  41f8ae:	(bad)  
  41f8af:	rcl    DWORD PTR [edx+eiz*1],0x9b
  41f8b3:	and    al,0xf7
  41f8b5:	dec    edi
  41f8b6:	push   ecx
  41f8b7:	imul   DWORD PTR [edi]
  41f8b9:	jno    0x41f8d6
  41f8bb:	ins    DWORD PTR es:[edi],dx
  41f8bc:	mov    dh,0xfe
  41f8be:	xchg   edx,eax
  41f8bf:	xor    eax,0x4c18b37e
  41f8c4:	mov    ebp,0x80e296ad
  41f8c9:	retf   0xabe2
  41f8cc:	neg    DWORD PTR [ebx+0x5f]
  41f8cf:	jecxz  0x41f883
  41f8d1:	pusha  
  41f8d2:	lds    edx,FWORD PTR [edx+0x2c6d1234]
  41f8d8:	sub    al,0x80
  41f8da:	fs jge 0x41f94a
  41f8dd:	repnz pop esp
  41f8df:	retf   0x3fcf
  41f8e2:	(bad)  
  41f8e4:	repnz xor al,0x8e
  41f8e7:	jns    0x41f93e
  41f8e9:	mov    bh,0x28
  41f8eb:	mov    al,0xfa
  41f8ed:	jle    0x41f8b1
  41f8ef:	sub    ecx,DWORD PTR [esp+eax*2+0x4a]
  41f8f3:	fidivr DWORD PTR [esi+0x5d900d63]
  41f8f9:	imul   BYTE PTR [ecx+0xf]
  41f8fc:	jecxz  0x41f8a1
  41f8fe:	into   
  41f8ff:	pop    ds
  41f900:	outs   dx,DWORD PTR ds:[esi]
  41f901:	and    eax,0x94e83138
  41f906:	(bad)  
  41f907:	cwde   
  41f908:	sub    BYTE PTR [ecx-0x4daa01d9],ch
  41f90e:	pop    eax
  41f90f:	jmp    0xea43fa72
  41f914:	fldenv [edi+0x5f]
  41f917:	loopne 0x41f919
  41f919:	jmp    0xb116159f
  41f91e:	rcl    BYTE PTR [esi],0x70
  41f921:	mov    bh,0xe
  41f923:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f924:	xchg   ebp,eax
  41f925:	mov    esp,0xd90356f2
  41f92a:	(bad)  
  41f92b:	shl    DWORD PTR [eax],cl
  41f92d:	push   edx
  41f92e:	inc    edx
  41f92f:	scas   eax,DWORD PTR es:[edi]
  41f930:	jbe    0x41f966
  41f932:	aam    0xca
  41f934:	repnz sub al,0xab
  41f937:	pop    edi
  41f938:	hlt    
  41f939:	and    eax,0x34848aef
  41f93e:	jg     0x41f965
  41f940:	add    bl,BYTE PTR [ecx-0x2f418c6e]
  41f946:	dec    ecx
  41f947:	mov    ds:0xae9c53f6,eax
  41f94c:	sub    ebx,DWORD PTR [ebx-0x48]
  41f94f:	mov    bl,0xce
  41f951:	bts    DWORD PTR [eax+0xd],0x58
  41f956:	sub    eax,0x1ddf26dd
  41f95b:	or     DWORD PTR [edi+0x48cb5989],edi
  41f961:	push   0x5a9f0757
  41f966:	sahf   
  41f967:	jecxz  0x41f976
  41f969:	adc    dh,al
  41f96b:	iret   
  41f96c:	inc    edx
  41f96d:	jbe    0x41f94b
  41f96f:	and    BYTE PTR [ebp+eiz*1+0x2a3d5477],0xdf
  41f977:	test   DWORD PTR fs:[ecx],eax
  41f97a:	push   ss
  41f97b:	loope  0x41f989
  41f97d:	(bad)  
  41f97e:	aaa    
  41f97f:	jbe    0x41f99b
  41f981:	jmp    0x41f919
  41f983:	jns    0x41f933
  41f985:	loope  0x41f925
  41f987:	or     bh,BYTE PTR [ebx+0x3d]
  41f98a:	push   0xffffff8a
  41f98c:	aaa    
  41f98d:	div    BYTE PTR [esi-0x69e31b50]
  41f993:	aaa    
  41f994:	cmp    BYTE PTR [edx],ch
  41f996:	adc    edx,DWORD PTR ds:0xc33c027f
  41f99c:	jno    0x41f973
  41f99e:	jo     0x41f952
  41f9a0:	xchg   ebx,eax
  41f9a1:	add    ch,ch
  41f9a3:	sub    DWORD PTR [ebx-0x16],eax
  41f9a6:	popa   
  41f9a7:	and    BYTE PTR [edi-0x347791f0],0x24
  41f9ae:	pop    edx
  41f9af:	imul   esp,DWORD PTR [ebx+0x7249d2fd],0x50
  41f9b6:	pusha  
  41f9b7:	dec    esi
  41f9b8:	adc    al,0x4a
  41f9ba:	(bad)  
  41f9bb:	out    0x69,al
  41f9bd:	cmp    edx,DWORD PTR [eax+0x4f]
  41f9c0:	rcl    BYTE PTR [edx+0x78c16a29],1
  41f9c6:	repz pop edi
  41f9c8:	xchg   edx,eax
  41f9c9:	mov    eax,0xb9848d41
  41f9ce:	outs   dx,BYTE PTR ds:[esi]
  41f9cf:	cmovno ebx,DWORD PTR [ebx+esi*1-0x5e3520]
  41f9d7:	aaa    
  41f9d8:	xor    edi,DWORD PTR [ebx+0x35712032]
  41f9de:	and    DWORD PTR [edi+0x22],ebp
  41f9e1:	imul   ebx,DWORD PTR [edi+0x3a],0xb2d6ad1f
  41f9e8:	xlat   BYTE PTR ds:[ebx]
  41f9e9:	ins    DWORD PTR es:[edi],dx
  41f9ea:	rcl    dh,0x40
  41f9ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9ee:	add    edi,DWORD PTR [ecx+0x69a92649]
  41f9f4:	in     eax,dx
  41f9f5:	sbb    BYTE PTR [esi],0x39
  41f9f8:	popa   
  41f9f9:	jge    0x41f9bd
  41f9fb:	sub    al,0xaa
  41f9fd:	mov    esp,0x468d0da1
  41fa02:	mov    DWORD PTR [edx+0x3e],esp
  41fa05:	repz inc BYTE PTR [edi+0x43]
  41fa09:	in     al,dx
  41fa0a:	jbe    0x41fa3d
  41fa0c:	js     0x41f9f4
  41fa0e:	in     al,dx
  41fa0f:	pop    esp
  41fa10:	xor    al,0x8c
  41fa12:	adc    ch,BYTE PTR [ebp+0xf06d121]
  41fa18:	mov    ecx,0xba266a21
  41fa1d:	push   edx
  41fa1e:	xor    esp,DWORD PTR [ebx+0x6e21ed6e]
  41fa24:	push   es
  41fa25:	ins    BYTE PTR es:[edi],dx
  41fa26:	dec    edx
  41fa27:	push   ds
  41fa28:	inc    eax
  41fa29:	or     BYTE PTR [eax-0x5],ah
  41fa2c:	mov    WORD PTR [eax+edi*4+0x7fb340a4],gs
  41fa33:	popa   
  41fa34:	out    0x51,al
  41fa36:	and    BYTE PTR [ecx-0x24],al
  41fa39:	je     0x41fa67
  41fa3b:	xchg   edx,eax
  41fa3c:	paddb  mm0,mm1
  41fa3f:	outs   dx,DWORD PTR ds:[esi]
  41fa40:	adc    eax,0xe5520a12
  41fa45:	mov    edi,0xc9e6ab6b
  41fa4a:	lods   al,BYTE PTR ds:[esi]
  41fa4b:	inc    ebx
  41fa4c:	ja     0x41f9f2
  41fa4e:	push   eax
  41fa4f:	xor    eax,0xf553cf30
  41fa54:	and    al,0x55
  41fa56:	ins    DWORD PTR es:[edi],dx
  41fa57:	scas   eax,DWORD PTR es:[edi]
  41fa58:	or     BYTE PTR [edi-0x7c],bh
  41fa5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa5c:	lods   al,BYTE PTR ds:[esi]
  41fa5d:	mov    al,ds:0x386ba19e
  41fa62:	lock vgf2p8affineqb ymm4{k3},ymm5,YMMWORD PTR [eax],0x94
  41fa6a:	push   edi
  41fa6b:	loopne 0x41fa7d
  41fa6d:	xlat   BYTE PTR ds:[ebx]
  41fa6e:	sbb    al,0x5b
  41fa70:	cmp    bh,BYTE PTR [eax+0x2f]
  41fa73:	aam    0x3c
  41fa75:	mov    dh,0xf8
  41fa77:	add    al,0x68
  41fa79:	jmp    0x41faf2
  41fa7b:	shr    DWORD PTR [eax],cl
  41fa7d:	fs dec edx
  41fa7f:	cs sahf 
  41fa81:	jecxz  0x41fa4c
  41fa83:	enter  0xb94a,0x58
  41fa87:	sbb    DWORD PTR [ebx-0x6cf238df],0x7
  41fa8e:	leave  
  41fa8f:	fwait
  41fa90:	pop    esi
  41fa91:	xchg   esp,eax
  41fa92:	(bad)  [eax-0x7e99d92d]
  41fa98:	sbb    ebx,DWORD PTR [eax]
  41fa9a:	mov    ecx,0xaf97c7fc
  41fa9f:	ror    DWORD PTR [edx],0xed
  41faa2:	adc    DWORD PTR [ebp+0xbae8513],0x1d
  41faa9:	sub    eax,DWORD PTR [edi-0x6b464909]
  41faaf:	add    al,0x19
  41fab1:	or     edi,eax
  41fab3:	mov    eax,DWORD PTR [ecx]
  41fab5:	imul   ecx,DWORD PTR [eax-0x34292562],0x7a
  41fabc:	test   al,0x3a
  41fabe:	jbe    0x41faff
  41fac0:	ins    DWORD PTR es:[edi],dx
  41fac1:	mov    ebp,0x6d4a3f85
  41fac6:	int3   
  41fac7:	stos   DWORD PTR es:[edi],eax
  41fac8:	mov    ds:0xee28d9af,eax
  41facd:	cmp    dh,BYTE PTR [esi]
  41facf:	jecxz  0x41faf8
  41fad1:	sbb    ebp,DWORD PTR [ebx+0x74]
  41fad4:	pushf  
  41fad5:	mov    ebp,0x77657329
  41fada:	shl    esi,cl
  41fadc:	fwait
  41fadd:	sbb    eax,DWORD PTR [eax]
  41fadf:	xor    esp,DWORD PTR [ecx+edi*2-0x6b]
  41fae3:	or     al,0xc0
  41fae5:	popf   
  41fae6:	jl     0x41fa76
  41fae8:	push   ecx
  41fae9:	inc    ebx
  41faea:	push   es
  41faeb:	xchg   edi,eax
  41faec:	dec    eax
  41faed:	inc    ebx
  41faee:	push   0x14
  41faf0:	jge    0x41fabb
  41faf2:	or     bh,al
  41faf4:	xlat   BYTE PTR ds:[ebx]
  41faf5:	pop    ebp
  41faf6:	mov    WORD PTR [ebx],ds
  41faf8:	mov    bh,0x5b
  41fafa:	repz cmp ch,BYTE PTR fs:[eax+0x31]
  41faff:	and    DWORD PTR ds:0xcb4981b2,0xeaf2a105
  41fb09:	sahf   
  41fb0a:	add    eax,0x1a5e5b7
  41fb0f:	dec    ecx
  41fb10:	loope  0x41fb4b
  41fb12:	push   cs
  41fb13:	and    ebx,eax
  41fb15:	aas    
  41fb16:	xor    ecx,0xd6d56bcf
  41fb1c:	out    0x93,al
  41fb1e:	rcr    BYTE PTR [edi-0x4efcc515],1
  41fb24:	fsubr  DWORD PTR [eax+0x42]
  41fb27:	and    DWORD PTR [ecx],esp
  41fb29:	shl    al,0x95
  41fb2c:	jne    0x41fbab
  41fb2e:	or     eax,0xffed90a6
  41fb33:	and    BYTE PTR [edx],cl
  41fb35:	and    DWORD PTR [ecx],0x2a4adafa
  41fb3b:	retf   
  41fb3c:	ds lahf 
  41fb3e:	rol    BYTE PTR [esi+0x76],0x8f
  41fb42:	sbb    BYTE PTR [ebp+0x2b],cl
  41fb45:	mov    esi,0x8804b428
  41fb4a:	jecxz  0x41fad6
  41fb4c:	mov    eax,ds:0x4c983887
  41fb51:	call   0xb55699d5
  41fb56:	mov    esp,DWORD PTR [ecx+0x7f3173fc]
  41fb5c:	inc    ecx
  41fb5d:	mov    bh,0x3a
  41fb5f:	adc    eax,0x42bf5cd6
  41fb64:	fwait
  41fb65:	js     0x41fb64
  41fb67:	jne    0x41fbdc
  41fb69:	cmp    DWORD PTR [ecx-0x5],0x4ff68395
  41fb70:	add    DWORD PTR [esi],edx
  41fb72:	push   es
  41fb73:	mov    eax,ds:0x5c99cc4d
  41fb78:	fidiv  WORD PTR [esi-0x6bd5f7b2]
  41fb7e:	inc    ecx
  41fb7f:	sbb    eax,0xb500fa8b
  41fb84:	xchg   ebx,eax
  41fb85:	test   al,0x69
  41fb87:	repnz inc edi
  41fb89:	xchg   BYTE PTR [edx-0x57],ah
  41fb8c:	(bad)  
  41fb8d:	pop    esi
  41fb8e:	stos   DWORD PTR es:[edi],eax
  41fb8f:	mov    ch,0x1c
  41fb91:	sub    BYTE PTR [edi],ch
  41fb93:	stos   BYTE PTR es:[edi],al
  41fb94:	and    WORD PTR [ecx-0x4ad9c00f],dx
  41fb9b:	xlat   BYTE PTR ds:[ebx]
  41fb9c:	mov    eax,0x8e0c1b5b
  41fba1:	mov    ebx,0x9612bb5b
  41fba6:	push   edx
  41fba7:	jno    0x41fb5d
  41fba9:	push   es
  41fbaa:	jmp    0x2da35ae
  41fbaf:	movaps xmm3,xmm5
  41fbb2:	aas    
  41fbb3:	xor    ebp,DWORD PTR [ebx+eiz*4]
  41fbb6:	sti    
  41fbb7:	push   ebp
  41fbb8:	dec    esi
  41fbb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbba:	xor    BYTE PTR [eax-0x44],bh
  41fbbd:	enter  0x45a9,0xf
  41fbc1:	xchg   ecx,eax
  41fbc2:	shr    BYTE PTR [ebp-0x24],cl
  41fbc5:	push   esi
  41fbc6:	add    cl,dl
  41fbc8:	xor    DWORD PTR [edx],ebx
  41fbca:	inc    edi
  41fbcb:	xchg   esi,eax
  41fbcc:	cld    
  41fbcd:	xchg   DWORD PTR [ebx-0x12d9062d],eax
  41fbd3:	jnp    0x41fc49
  41fbd5:	inc    edx
  41fbd6:	mov    dh,cl
  41fbd8:	retf   0x13eb
  41fbdb:	jge    0x41fbb7
  41fbdd:	jg     0x41fc2f
  41fbdf:	int3   
  41fbe0:	pop    edx
  41fbe1:	xchg   ebx,eax
  41fbe2:	jo     0x41fbeb
  41fbe4:	repz aaa 
  41fbe6:	adc    DWORD PTR [edx],0x70
  41fbe9:	ror    DWORD PTR ds:0x49fa99a8,1
  41fbef:	mov    ebp,0xc397aade
  41fbf4:	aas    
  41fbf5:	lahf   
  41fbf6:	(bad)  
  41fbf7:	dec    ebp
  41fbf8:	js     0x41fc40
  41fbfa:	loope  0x41fc4c
  41fbfc:	sbb    edx,DWORD PTR [ebp-0x2b]
  41fbff:	mov    esi,0x77cd898e
  41fc04:	mov    bh,0x38
  41fc06:	jmp    0x85f3b050
  41fc0b:	ins    BYTE PTR es:[edi],dx
  41fc0c:	cs xchg ecx,eax
  41fc0e:	in     al,dx
  41fc0f:	(bad)  
  41fc10:	test   DWORD PTR [esi],0xce651ebf
  41fc16:	retf   
  41fc17:	fs cli 
  41fc19:	cmc    
  41fc1a:	jns    0x41fbf5
  41fc1c:	push   eax
  41fc1d:	xlat   BYTE PTR ds:[ebx]
  41fc1e:	jle    0x41fbda
  41fc20:	push   ecx
  41fc21:	aad    0xc8
  41fc23:	sar    DWORD PTR ds:[esp+ebp*4+0x464ba9fd],cl
  41fc2b:	ins    BYTE PTR es:[edi],dx
  41fc2c:	cmp    DWORD PTR [ebx+0x5e],esp
  41fc2f:	lea    ecx,[ebx+esi*2-0x3e]
  41fc33:	int    0xc
  41fc35:	sub    ax,0x64a6
  41fc39:	dec    ebp
  41fc3a:	mov    bh,0xa8
  41fc3c:	or     DWORD PTR [esp+ebx*2-0x22652528],ecx
  41fc43:	stos   DWORD PTR es:[edi],eax
  41fc44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc45:	pop    eax
  41fc46:	push   ebx
  41fc47:	cmp    BYTE PTR [edx-0x3f0f5c61],0x1e
  41fc4e:	(bad)  
  41fc4f:	pushf  
  41fc50:	push   esp
  41fc51:	call   0xb293:0x9ca178e0
  41fc58:	clc    
  41fc59:	enter  0xcffd,0xb9
  41fc5d:	and    bl,BYTE PTR [edi+0x2e40b880]
  41fc63:	lods   eax,DWORD PTR ds:[esi]
  41fc64:	add    edi,DWORD PTR [ebx+eiz*1+0x2d]
  41fc68:	stos   BYTE PTR es:[edi],al
  41fc69:	fst    DWORD PTR [ecx]
  41fc6b:	fwait
  41fc6c:	cld    
  41fc6d:	out    0xc0,al
  41fc6f:	ret    
  41fc70:	dec    ebx
  41fc71:	test   dl,ah
  41fc73:	mov    DWORD PTR [ebx-0x1b],esp
  41fc76:	test   al,0xa7
  41fc78:	dec    ebx
  41fc79:	xchg   esi,eax
  41fc7a:	inc    ebp
  41fc7b:	jmp    0xae830d3f
  41fc80:	mov    eax,ds:0x69c6f99
  41fc85:	mov    eax,ds:0x13036105
  41fc8a:	xor    BYTE PTR [edi],0x2f
  41fc8d:	int3   
  41fc8e:	mov    edx,0xdddcf6e
  41fc93:	shl    DWORD PTR [edi+ebx*4+0x3830499d],1
  41fc9a:	imul   edi,DWORD PTR [edi+0x65],0xffffffc7
  41fc9e:	outs   dx,BYTE PTR ds:[esi]
  41fc9f:	mov    ss,WORD PTR [edi+0x46]
  41fca2:	mov    eax,ds:0x706bdc71
  41fca7:	xchg   edi,eax
  41fca8:	lods   al,BYTE PTR ds:[esi]
  41fca9:	js     0x41fd00
  41fcab:	ja     0x41fc7f
  41fcad:	sub    al,dh
  41fcaf:	arpl   ax,di
  41fcb1:	mov    ds:0x1f986727,eax
  41fcb6:	cli    
  41fcb7:	mov    eax,0xff248a3a
  41fcbc:	mov    dl,0xee
  41fcbe:	xchg   ebx,eax
  41fcbf:	in     eax,dx
  41fcc0:	repz int3 
  41fcc2:	jne    0x41fcff
  41fcc4:	mov    ebx,0xeea9ea3d
  41fcc9:	js     0x41fcbd
  41fccb:	and    DWORD PTR [eax],esi
  41fccd:	mov    edx,0xef413c43
  41fcd2:	xchg   ecx,eax
  41fcd3:	jne    0x41fc7b
  41fcd5:	iret   
  41fcd6:	out    dx,eax
  41fcd7:	leave  
  41fcd8:	push   ecx
  41fcd9:	push   ss
  41fcda:	repz pop ebp
  41fcdc:	sub    eax,0x8c495868
  41fce1:	pop    ebp
  41fce2:	jmp    DWORD PTR [ecx+0x3e]
  41fce5:	jnp    0x41fc76
  41fce7:	test   BYTE PTR [ecx+edi*4+0x16564268],ah
  41fcee:	and    eax,esp
  41fcf0:	inc    ebx
  41fcf1:	das    
  41fcf2:	push   edx
  41fcf3:	pop    esp
  41fcf4:	cmp    DWORD PTR [edi],eax
  41fcf6:	pop    ecx
  41fcf7:	xchg   BYTE PTR [esi],bl
  41fcf9:	ret    0x1816
  41fcfc:	sbb    ah,BYTE PTR [eax+0x5]
  41fcff:	sub    al,0x89
  41fd01:	pop    ss
  41fd02:	jecxz  0x41fcb2
  41fd04:	inc    edx
  41fd05:	mov    edi,0xd73076c1
  41fd0a:	push   ebp
  41fd0b:	and    edi,edi
  41fd0d:	dec    edi
  41fd0e:	pop    ecx
  41fd0f:	mov    edx,0x8ccd62c6
  41fd14:	push   cs
  41fd15:	test   ebp,0xa79b5ca4
  41fd1b:	ins    DWORD PTR es:[edi],dx
  41fd1c:	push   esi
  41fd1d:	adc    BYTE PTR [edi-0x14],ah
  41fd20:	int    0x58
  41fd22:	ret    
  41fd23:	pop    ebp
  41fd24:	xlat   BYTE PTR ds:[ebx]
  41fd25:	or     al,0xd9
  41fd27:	add    DWORD PTR [ebx-0x629e25ac],eax
  41fd2d:	fs lock test al,0xa
  41fd31:	into   
  41fd32:	icebp  
  41fd33:	clc    
  41fd34:	loope  0x41fd65
  41fd36:	push   esi
  41fd37:	and    al,BYTE PTR [esp+eax*8+0x336aef85]
  41fd3e:	mov    DWORD PTR [edx+0x43b7f37a],esi
  41fd44:	and    BYTE PTR [edx+0x4e],ch
  41fd47:	mov    ds:0x1622bbd5,eax
  41fd4c:	ins    DWORD PTR es:[edi],dx
  41fd4d:	cmc    
  41fd4e:	xor    eax,0x8a715850
  41fd53:	das    
  41fd54:	sbb    dl,dh
  41fd56:	mov    eax,ds:0x4100a368
  41fd5b:	rcl    BYTE PTR [esi+ebp*1],1
  41fd5e:	aaa    
  41fd5f:	or     DWORD PTR [edx+0x46b67595],ebx
  41fd65:	jne    0x41fd99
  41fd67:	js     0x41fd68
  41fd69:	retf   0xb9a8
  41fd6c:	jnp    0x41fd30
  41fd6e:	inc    esi
  41fd6f:	jmp    0x45645a48
  41fd74:	mov    esi,esi
  41fd76:	hlt    
  41fd77:	jmp    0x4197fd01
  41fd7c:	shl    BYTE PTR [eax+0x454584db],cl
  41fd82:	lods   al,BYTE PTR ds:[esi]
  41fd83:	fst    QWORD PTR [eax+eax*8-0x23]
  41fd87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd88:	mov    edi,0x5de2dcbb
  41fd8d:	xor    DWORD PTR [ebp+esi*8-0x1e],esp
  41fd91:	aaa    
  41fd92:	sbb    DWORD PTR [ebp+0xedc644d],eax
  41fd98:	sbb    esi,DWORD PTR [edx+0x76aa9674]
  41fd9e:	popa   
  41fd9f:	int    0x80
  41fda1:	pop    ds
  41fda2:	inc    edi
  41fda3:	xchg   BYTE PTR ds:[ebx+0x9312b68],cl
  41fdaa:	popf   
  41fdab:	add    dl,BYTE PTR [edx+esi*1+0x211f7c16]
  41fdb2:	rol    ah,1
  41fdb4:	popa   
  41fdb5:	mov    bl,0x2d
  41fdb7:	add    BYTE PTR ds:0xe504539f,bh
  41fdbd:	pop    ebp
  41fdbe:	inc    ecx
  41fdbf:	ja     0x41fdf7
  41fdc1:	js     0x41fd90
  41fdc3:	mov    edx,0xee117a5a
  41fdc8:	pop    esi
  41fdc9:	push   cs
  41fdca:	mov    BYTE PTR [eax+0x34d4df2c],0x9b
  41fdd1:	leave  
  41fdd2:	daa    
  41fdd3:	lods   al,BYTE PTR ds:[esi]
  41fdd4:	fsubr  QWORD PTR [edx+0x13aa0d4a]
  41fdda:	mov    WORD PTR [ebx-0xcd0d94f],?
  41fde0:	das    
  41fde1:	xor    al,0xc0
  41fde3:	adc    ecx,edx
  41fde5:	add    bl,BYTE PTR [eax-0x7caa5f31]
  41fdeb:	cmp    BYTE PTR [ecx-0x6557c700],ah
  41fdf1:	lahf   
  41fdf2:	push   ebp
  41fdf3:	mov    al,0x78
  41fdf5:	pop    edx
  41fdf6:	shl    bh,1
  41fdf8:	mov    edx,0x586a9c72
  41fdfd:	frstor [ecx+0x30]
  41fe00:	sbb    ebx,DWORD PTR [eax+eiz*1-0x24]
  41fe04:	mov    ds:0x8b802b33,eax
  41fe09:	cmc    
  41fe0a:	xchg   ebx,eax
  41fe0b:	pop    esi
  41fe0c:	mov    bl,0x13
  41fe0e:	sbb    DWORD PTR [edi+0x74],0xffffff95
  41fe12:	test   al,0x42
  41fe14:	out    dx,al
  41fe15:	lods   eax,DWORD PTR ds:[esi]
  41fe16:	dec    ebp
  41fe17:	pop    edx
  41fe18:	dec    esi
  41fe19:	aad    0x5
  41fe1b:	mov    ds:0x93cc25be,al
  41fe20:	or     edx,DWORD PTR [ecx+0x6a1ab198]
  41fe26:	inc    ecx
  41fe27:	(bad)  
  41fe28:	cwde   
  41fe29:	mov    ecx,0x8766562b
  41fe2e:	imul   edx,DWORD PTR [edx+0x1f1fa2c5],0xffffffcf
  41fe35:	dec    ebx
  41fe36:	jmp    0x3b4d710d
  41fe3b:	pop    ebp
  41fe3c:	inc    esi
  41fe3d:	adc    al,0x1e
  41fe3f:	cwde   
  41fe40:	lock fist WORD PTR [ebx+0x2bb45afe]
  41fe47:	jb     0x41fe4e
  41fe49:	(bad)  
  41fe4a:	jbe    0x41fec9
  41fe4c:	inc    esi
  41fe4d:	ror    BYTE PTR [ebx+eax*8+0x30],1
  41fe51:	dec    ecx
  41fe52:	ins    DWORD PTR es:[edi],dx
  41fe53:	dec    esi
  41fe54:	inc    esi
  41fe55:	loopne 0x41fe18
  41fe57:	push   esp
  41fe58:	and    bl,BYTE PTR [edx-0x5d]
  41fe5b:	add    eax,0xee493d82
  41fe60:	scas   al,BYTE PTR es:[edi]
  41fe61:	pop    eax
  41fe62:	(bad)  
  41fe63:	cmp    bh,BYTE PTR [ebp-0x27]
  41fe66:	in     eax,0x75
  41fe68:	or     BYTE PTR [eax+0x3c0938cd],0x5a
  41fe6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe70:	jnp    0x41fe5d
  41fe72:	xchg   esp,eax
  41fe73:	and    esi,DWORD PTR [edx]
  41fe75:	neg    BYTE PTR ds:[ecx-0x3b660a9e]
  41fe7c:	jns    0x41feb0
  41fe7e:	mov    al,0xff
  41fe80:	pop    eax
  41fe81:	jne    0x41fee1
  41fe83:	pop    edi
  41fe84:	mov    cl,0xd1
  41fe86:	add    ebx,DWORD PTR [ebx-0x4a]
  41fe89:	jbe    0x41fe2d
  41fe8b:	into   
  41fe8c:	retf   
  41fe8d:	cmp    al,0x63
  41fe8f:	xchg   ebp,eax
  41fe90:	fcomp  DWORD PTR [esi+eax*2-0x290d991e]
  41fe97:	cld    
  41fe98:	mov    ah,BYTE PTR [edx-0x1c]
  41fe9b:	aam    0x8d
  41fe9d:	mul    esi
  41fe9f:	add    dh,ch
  41fea1:	mov    ah,0xf
  41fea3:	sbb    eax,0xc84f9910
  41fea8:	jne    0x41feb9
  41feaa:	inc    edi
  41feab:	aaa    
  41feac:	retf   
  41fead:	repnz pop edi
  41feaf:	test   eax,0xa7313e55
  41feb4:	int3   
  41feb5:	fld    st(7)
  41feb7:	jbe    0x41fe83
  41feb9:	xchg   BYTE PTR ds:0xcc313b30,ah
  41febf:	jae    0x41fe7d
  41fec1:	mov    al,ds:0xda43ad8
  41fec6:	and    al,0xbd
  41fec8:	popf   
  41fec9:	jae    0x41fe7e
  41fecb:	cmp    BYTE PTR [edi+0x774a535b],ch
  41fed1:	sar    eax,cl
  41fed3:	std    
  41fed4:	and    dl,cl
  41fed6:	push   0x2ab8e168
  41fedb:	in     al,0x1d
  41fedd:	ins    DWORD PTR es:[edi],dx
  41fede:	dec    esp
  41fedf:	xchg   edi,eax
  41fee0:	inc    esi
  41fee1:	imul   esi,edx,0x1e0893f3
  41fee7:	lock fbstp TBYTE PTR ds:0xb904aba1
  41feee:	(bad)  
  41feef:	ds mov dh,0x20
  41fef2:	das    
  41fef3:	scas   eax,DWORD PTR es:[edi]
  41fef4:	adc    eax,0x321e0949
  41fef9:	rol    DWORD PTR [edi-0x4],cl
  41fefc:	sbb    al,0xe5
  41fefe:	and    DWORD PTR [ecx],ecx
  41ff00:	add    cl,bh
  41ff02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff03:	mov    esi,0xbc70708
  41ff08:	mov    ah,0x10
  41ff0a:	sbb    bl,BYTE PTR ds:0x61a24047
  41ff10:	inc    edx
  41ff11:	push   0xffffffb2
  41ff13:	jne    0x41fef7
  41ff15:	or     eax,0xf954ca8f
  41ff1a:	push   0xa
  41ff1c:	mov    ebp,0x39dafa80
  41ff21:	mov    eax,0xbf29a910
  41ff26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff27:	and    al,0xd8
  41ff29:	jmp    0x88950aa9
  41ff2e:	in     al,dx
  41ff2f:	jb     0x41ff3b
  41ff31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff32:	fwait
  41ff33:	nop
  41ff34:	push   edi
  41ff35:	data16 jbe 0x41ff07
  41ff38:	out    dx,eax
  41ff39:	jb     0x41ff45
  41ff3b:	sbb    ebp,ebx
  41ff3d:	sti    
  41ff3e:	scas   eax,DWORD PTR es:[edi]
  41ff3f:	add    DWORD PTR [esi-0x102d8254],ebx
  41ff45:	fcmovbe st,st(4)
  41ff47:	inc    esi
  41ff48:	arpl   WORD PTR [edi+0x1f],si
  41ff4b:	mov    dh,0x4e
  41ff4d:	fwait
  41ff4e:	loop   0x41ff72
  41ff50:	xchg   ch,al
  41ff52:	push   ss
  41ff53:	add    ebp,ebp
  41ff55:	test   eax,0xfd92df86
  41ff5a:	mov    DWORD PTR [edx+0x4a],esi
  41ff5d:	xor    al,0x22
  41ff5f:	sbb    eax,0x95645e66
  41ff64:	test   al,0x5
  41ff66:	and    bh,ch
  41ff68:	mov    bh,0xb0
  41ff6a:	mov    eax,ds:0xc3c427ab
  41ff6f:	cmp    DWORD PTR [ebx+ebx*4],edi
  41ff72:	bswap  edx
  41ff74:	lds    edi,FWORD PTR [ebp-0x37]
  41ff77:	call   0x8b713d96
  41ff7c:	mov    dh,0x9
  41ff7e:	adc    DWORD PTR [ecx+0xb],esi
  41ff81:	out    0x5a,eax
  41ff83:	inc    esp
  41ff84:	mov    ?,WORD PTR [ecx+0x2a]
  41ff87:	sbb    DWORD PTR cs:[esi],ecx
  41ff8a:	(bad)  
  41ff8b:	and    eax,0xdccaac8c
  41ff90:	inc    esp
  41ff91:	iret   
  41ff92:	aaa    
  41ff93:	sbb    BYTE PTR [eax+eiz*2],bl
  41ff96:	jne    0x41ffc4
  41ff98:	shr    DWORD PTR [edx],0x31
  41ff9b:	arpl   WORD PTR [edi-0x5f30c2e1],si
  41ffa1:	ret    0x96fd
  41ffa4:	idiv   DWORD PTR [edx]
  41ffa6:	retf   
  41ffa7:	into   
  41ffa8:	pop    esp
  41ffa9:	fbstp  TBYTE PTR [eax+eax*1]
  41ffac:	mov    ch,0x50
  41ffae:	add    ebx,DWORD PTR [ebx+0x62]
  41ffb1:	adc    eax,0xe07cfe1c
  41ffb6:	jecxz  0x420001
  41ffb8:	cmp    DWORD PTR [ebx+0x5bc99d36],eax
  41ffbe:	mov    BYTE PTR [ecx+0x27],cl
  41ffc1:	cmp    bh,BYTE PTR [edi+0x4897e0bd]
  41ffc7:	and    ebx,edi
  41ffc9:	in     eax,0x46
  41ffcb:	pop    edx
  41ffcc:	dec    edi
  41ffcd:	mov    WORD PTR [ebx+0x61c70ca2],ss
  41ffd3:	adc    DWORD PTR [ecx+0x3],edx
  41ffd6:	test   DWORD PTR [ecx-0x12],0x90ab2a60
  41ffdd:	adc    edi,DWORD PTR [eax]
  41ffdf:	hlt    
  41ffe0:	adc    ebx,0x50
  41ffe3:	sub    al,0xe5
  41ffe6:	retf   0xeebd
  41ffe9:	fsubr  QWORD PTR [ecx-0x35677351]
  41ffef:	sbb    al,0x56
  41fff1:	ins    BYTE PTR es:[edi],dx
  41fff2:	enter  0x938d,0x40
  41fff6:	cmp    al,0xf2
  41fff8:	jne    0x41ffe9
  41fffa:	xchg   esi,eax
  41fffb:	daa    
  41fffc:	xor    ch,BYTE PTR [esi]
  41fffe:	in     eax,dx
  41ffff:	pop    es
  420000:	(bad)  
  420002:	mov    esi,0x4fbee144
  420007:	jmp    0xa1e3:0xee3fce4e
  42000e:	and    dl,BYTE PTR [edi-0x77]
  420011:	and    al,0xa8
  420013:	jne    0x41fffc
  420015:	pop    esi
  420016:	mov    ds:0xffe12522,eax
  42001b:	aaa    
  42001c:	mov    ah,0x86
  42001e:	wbinvd 
  420020:	ins    BYTE PTR es:[edi],dx
  420021:	stos   BYTE PTR es:[edi],al
  420022:	cmp    eax,0xa7e3cae1
  420027:	aad    0xdc
  420029:	pop    edx
  42002a:	and    eax,0x9a474b58
  42002f:	sahf   
  420030:	retf   0xb972
  420033:	stos   BYTE PTR es:[edi],al
  420034:	pop    esp
  420035:	mov    al,ds:0x49f5a2af
  42003a:	and    BYTE PTR [ebx+0x481b8cd],dh
  420040:	pusha  
  420041:	rcl    DWORD PTR [eax],1
  420043:	in     al,dx
  420044:	fdiv   DWORD PTR [ebx]
  420046:	arpl   WORD PTR [esp+ebp*4-0x7c6a0464],bx
  42004d:	or     eax,0xcf8929ae
  420052:	cwde   
  420053:	(bad)  
  420054:	or     ecx,edx
  420056:	pop    ebx
  420057:	in     al,0xdb
  420059:	addr16 push ss
  42005b:	sbb    BYTE PTR [ecx+0x1e10840f],dl
  420061:	inc    ecx
  420062:	mov    esi,edi
  420064:	cmc    
  420065:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420066:	mov    bh,0xa1
  420068:	xchg   esp,eax
  420069:	mov    cl,0xec
  42006b:	and    al,0x56
  42006d:	ins    BYTE PTR es:[edi],dx
  42006e:	xor    al,0x5
  420070:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420071:	sti    
  420072:	jns    0x4200b3
  420074:	xchg   ecx,eax
  420075:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420076:	xor    al,0x57
  420078:	mov    dh,0xf2
  42007a:	xchg   ebp,eax
  42007b:	add    BYTE PTR [esi],ah
  42007d:	mov    ebp,0xabf2064d
  420082:	mov    ecx,0x6f9a95f9
  420087:	pop    edi
  420088:	fidivr WORD PTR [ecx-0x80]
  42008b:	inc    edi
  42008c:	add    eax,0x34ee910e
  420091:	int    0x41
  420093:	dec    ecx
  420094:	pop    ebp
  420095:	cmp    cl,al
  420097:	repnz and BYTE PTR ds:0x4624b81d,bl
  42009e:	pop    edi
  4200a0:	imul   esi,edx,0x6d
  4200a3:	push   0xffffffb0
  4200a5:	inc    ebx
  4200a6:	popa   
  4200a7:	mov    DWORD PTR [ecx-0x3e],eax
  4200aa:	mov    esp,DWORD PTR [ebx-0x2d]
  4200ad:	lock jecxz 0x420031
  4200b0:	into   
  4200b1:	and    ebp,DWORD PTR [eax+0x5b]
  4200b4:	mov    esp,DWORD PTR [ecx+edi*1-0x2330cea5]
  4200bb:	push   0x9212d982
  4200c0:	in     eax,0xe0
  4200c2:	dec    edi
  4200c3:	and    ebx,esp
  4200c5:	inc    esp
  4200c6:	aad    0x8c
  4200c8:	or     al,0xfd
  4200ca:	inc    esp
  4200cb:	dec    eax
  4200cc:	and    DWORD PTR [edi-0x34],0xfffffff4
  4200d0:	xchg   esp,ebp
  4200d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200d3:	cmp    BYTE PTR [esi-0x26f3cbdc],bl
  4200d9:	rol    BYTE PTR [ebp-0x1d],1
  4200dc:	mov    esp,0xf6e6d036
  4200e1:	mov    ah,0xed
  4200e3:	xor    dh,BYTE PTR [edi-0x78]
  4200e6:	and    al,0x76
  4200e8:	push   es
  4200e9:	xor    ecx,DWORD PTR [edx]
  4200eb:	or     DWORD PTR [esi+ecx*1+0xb],ebp
  4200ef:	add    al,0x1a
  4200f1:	outs   dx,BYTE PTR ds:[esi]
  4200f2:	mov    WORD PTR ds:0xb00c3aea,?
  4200f8:	shl    DWORD PTR [ecx-0x7a457ded],cl
  4200fe:	and    al,0x68
  420100:	je     0x420136
  420102:	mov    bl,0x58
  420104:	fstp   QWORD PTR [esi+edx*1+0x275fa3f8]
  42010b:	out    dx,eax
  42010c:	leave  
  42010d:	push   0xffffffe3
  42010f:	xchg   ebp,eax
  420110:	sti    
  420111:	xchg   ebx,eax
  420112:	pop    ebp
  420113:	push   cs
  420114:	into   
  420115:	pop    ebp
  420116:	dec    esp
  420117:	stos   DWORD PTR es:[edi],eax
  420118:	arpl   WORD PTR [ebx-0x3f],bp
  42011b:	inc    DWORD PTR [esi]
  42011d:	int3   
  42011e:	jo     0x4200f9
  420120:	popa   
  420121:	popf   
  420122:	mov    bh,0x37
  420124:	hlt    
  420125:	mov    edx,0x487961d7
  42012a:	shl    DWORD PTR [ebx-0x729f3151],cl
  420130:	lods   eax,DWORD PTR ds:[esi]
  420131:	ficomp WORD PTR [ecx-0x20]
  420134:	push   0x70742b64
  420139:	aad    0x62
  42013b:	and    al,0x19
  42013d:	out    0x3,eax
  42013f:	retf   0xb7c2
  420142:	outs   dx,DWORD PTR ds:[esi]
  420143:	dec    esp
  420144:	leave  
  420145:	dec    esi
  420146:	xor    eax,0x9c3830df
  42014b:	cmp    DWORD PTR [eax+0x5b],eax
  42014e:	mov    al,0xac
  420150:	js     0x420144
  420152:	mov    ebx,0xcaa0714c
  420157:	dec    ecx
  420158:	retf   0x98e6
  42015b:	jmp    0x4201b4
  42015d:	mov    ch,0x7f
  42015f:	xor    esp,DWORD PTR [ecx+0x7d]
  420162:	das    
  420163:	out    0xdb,al
  420165:	cli    
  420166:	(bad)  
  420167:	fild   QWORD PTR [ecx]
  420169:	aaa    
  42016a:	not    ah
  42016c:	jne    0x4201dc
  42016e:	dec    edx
  42016f:	aaa    
  420170:	sbb    edx,DWORD PTR [eax-0x7a]
  420173:	lock xor BYTE PTR [bp+di],ch
  420177:	pop    esi
  420178:	cmp    al,0x24
  42017a:	loope  0x420164
  42017c:	shr    ecx,cl
  42017e:	(bad)  
  42017f:	je     0x420134
  420181:	ss lahf 
  420183:	pop    eax
  420184:	shl    bh,cl
  420186:	rcr    BYTE PTR gs:[ebx+0x3d705ebb],cl
  42018d:	lods   al,BYTE PTR ds:[esi]
  42018e:	fiadd  WORD PTR [edx+0x78]
  420191:	mov    dl,0xe7
  420193:	mov    dl,0x18
  420195:	xor    esi,ebp
  420197:	xor    ebp,ecx
  420199:	mov    ds:0x8e983489,eax
  42019e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42019f:	inc    esp
  4201a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201a1:	jmp    0x19cd:0xeccb71d8
  4201a8:	iret   
  4201a9:	into   
  4201aa:	push   0x5c
  4201ac:	or     al,0x8e
  4201ae:	hlt    
  4201af:	xchg   esp,eax
  4201b0:	adc    ebp,DWORD PTR [edx+eax*1-0x2]
  4201b4:	jo     0x420182
  4201b6:	fcmovb st,st(1)
  4201b8:	rcr    cl,cl
  4201ba:	cmp    DWORD PTR [ebp-0x3c0070a],esp
  4201c0:	clc    
  4201c1:	mov    ah,0x84
  4201c3:	es sbb dh,ch
  4201c6:	xchg   edi,eax
  4201c7:	loope  0x420150
  4201c9:	dec    esi
  4201ca:	in     eax,dx
  4201cb:	fnstenv [esi-0x7a79ecc4]
  4201d1:	pop    ds
  4201d2:	mov    ds:0xd6e6f81e,al
  4201d7:	std    
  4201d8:	dec    ebx
  4201d9:	xchg   esi,eax
  4201da:	sbb    BYTE PTR [edx+0x2c0e05d2],ah
  4201e0:	adc    eax,0x3973e497
  4201e5:	dec    eax
  4201e6:	push   esp
  4201e7:	shl    DWORD PTR [esp+ebp*1],0xb3
  4201eb:	ins    DWORD PTR es:[edi],dx
  4201ec:	clc    
  4201ed:	adc    al,BYTE PTR [edx-0x68]
  4201f0:	xchg   bh,bl
  4201f2:	xor    ecx,DWORD PTR [ecx-0x36]
  4201f5:	mov    esp,edx
  4201f7:	dec    edi
  4201f8:	xor    dl,BYTE PTR [ebp-0x28ae8ee1]
  4201fe:	sbb    edi,DWORD PTR [edi-0x6a]
  420201:	xor    ebp,DWORD PTR [ebp-0x3b]
  420204:	(bad)  
  420205:	iret   
  420206:	push   0xffffffa3
  420208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420209:	aaa    
  42020a:	retf   0xaf1b
  42020d:	outs   dx,BYTE PTR ds:[esi]
  42020e:	(bad)  
  42020f:	fdivr  QWORD PTR [esi-0x6b]
  420212:	push   ebp
  420213:	push   0x6e4ff582
  420218:	into   
  420219:	mov    ?,WORD PTR [ecx]
  42021b:	ins    BYTE PTR es:[edi],dx
  42021c:	pop    es
  42021d:	les    edx,FWORD PTR [eax-0x7c]
  420220:	pop    ebx
  420221:	sar    DWORD PTR [ebp-0x2f401aa9],1
  420227:	xor    al,0x71
  420229:	and    DWORD PTR [ebp+0x77],edi
  42022c:	fsubr  DWORD PTR [esi+0x7f]
  42022f:	jno    0x42021b
  420231:	push   ss
  420232:	int3   
  420233:	ds cs and eax,0x2f6deaee
  42023a:	mov    cl,0x74
  42023c:	in     eax,dx
  42023d:	daa    
  42023e:	lock lock xchg edi,eax
  420241:	ret    0x5ebb
  420244:	arpl   WORD PTR fs:[esi-0x349b33e],sp
  42024b:	(bad)  
  42024c:	xor    ecx,esp
  42024e:	jno    0x4202cb
  420250:	stos   DWORD PTR es:[edi],eax
  420251:	(bad)  
  420252:	push   esi
  420253:	or     DWORD PTR [ecx-0x28],ebp
  420256:	ss or  bh,ch
  420259:	push   ss
  42025a:	jg     0x4201dc
  42025c:	mov    al,0xc1
  42025e:	fst    QWORD PTR [edx]
  420260:	jge    0x42020c
  420262:	shl    DWORD PTR ds:0xa4cb72e1,1
  420268:	mov    esp,0xffdc9cda
  42026d:	into   
  42026e:	push   es
  42026f:	stos   BYTE PTR es:[edi],al
  420270:	dec    esi
  420271:	repz sbb edx,DWORD PTR [eax]
  420274:	ret    0x5832
  420277:	ds pop ebx
  420279:	mov    cl,0xaa
  42027b:	mov    BYTE PTR [edx+0x7d],dh
  42027e:	adc    edi,DWORD PTR [esi-0x6e897271]
  420284:	es mov cl,0x2f
  420287:	test   DWORD PTR [edx+0x7f11cad0],ebp
  42028d:	adc    ebx,DWORD PTR [ecx-0x5ccf65e3]
  420293:	pop    ebx
  420294:	call   0x27fd0f80
  420299:	not    DWORD PTR [ebx]
  42029b:	pusha  
  42029c:	mov    eax,0xd93c688c
  4202a1:	push   ecx
  4202a2:	cmp    DWORD PTR [ebp+0x6841e728],ebp
  4202a8:	push   edi
  4202a9:	xchg   edx,eax
  4202aa:	and    esp,ecx
  4202ac:	jno    0x4202a3
  4202ae:	jns    0x4202f2
  4202b0:	retf   
  4202b1:	xchg   ebx,eax
  4202b2:	sub    al,0xbf
  4202b4:	or     eax,DWORD PTR [edx+0x67]
  4202b7:	outs   dx,BYTE PTR ds:[esi]
  4202b8:	popf   
  4202b9:	cdq    
  4202ba:	cdq    
  4202bb:	jecxz  0x420296
  4202bd:	fs push edx
  4202bf:	mov    ds:0x1eafc8c7,al
  4202c4:	and    DWORD PTR [esi],ebx
  4202c6:	pop    ecx
  4202c7:	imul   ebp,DWORD PTR [edi+0x7f],0x2f6eb560
  4202ce:	sbb    ah,BYTE PTR [esi]
  4202d0:	rcr    BYTE PTR [eax+0x78],1
  4202d3:	inc    BYTE PTR [edx]
  4202d5:	adc    DWORD PTR [ebx],ecx
  4202d7:	xchg   DWORD PTR [esi],esp
  4202d9:	aaa    
  4202da:	and    DWORD PTR [esi+edx*2-0x4b59a9b6],edx
  4202e1:	ret    
  4202e2:	push   cs
  4202e3:	or     bh,bl
  4202e5:	mov    WORD PTR [ebx],?
  4202e7:	mov    ch,0x86
  4202e9:	popa   
  4202ea:	test   DWORD PTR [ecx],edx
  4202ec:	pop    esp
  4202ed:	mov    dl,0x58
  4202ef:	jecxz  0x420330
  4202f1:	mov    eax,ds:0xf99bd37a
  4202f6:	addr16 xor al,0x1c
  4202f9:	jmp    0x5526:0x3e47224f
  420300:	dec    esi
  420301:	and    DWORD PTR [ecx],ecx
  420303:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420304:	cs clc 
  420306:	stos   DWORD PTR es:[edi],eax
  420307:	xchg   ebx,eax
  420308:	jp     0x420307
  42030a:	xchg   ebp,eax
  42030b:	xor    DWORD PTR [esi],ecx
  42030d:	cmp    DWORD PTR [esi+0x6a],edx
  420310:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420311:	cmp    BYTE PTR ds:0x700ae0d8,dl
  420317:	jo     0x42033a
  420319:	adc    esp,DWORD PTR [ebp+0x5]
  42031c:	and    eax,0x8d7c3b7
  420321:	push   es
  420322:	cmp    eax,0x4d3eede6
  420327:	dec    ebp
  420328:	retf   0x6d03
  42032b:	jp     0x4203ac
  42032d:	dec    ebp
  42032e:	sub    DWORD PTR [ecx-0x2e0be020],ebp
  420334:	inc    ebp
  420335:	pop    ds
  420336:	and    dh,BYTE PTR [ebx+0x715860a7]
  42033c:	aas    
  42033d:	or     eax,0xdc10826
  420342:	scas   eax,DWORD PTR es:[edi]
  420343:	pop    ds
  420344:	mov    bh,0x39
  420346:	fucomp st(3)
  420348:	adc    bh,BYTE PTR [ebx]
  42034a:	cmp    dl,BYTE PTR [edx]
  42034c:	fdivr  st,st(3)
  42034e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42034f:	stos   BYTE PTR es:[edi],al
  420350:	pop    ecx
  420351:	mov    WORD PTR [ecx+0x30],ds
  420354:	fdivr  QWORD PTR [edi+0x4076ff7f]
  42035a:	push   ebx
  42035b:	xchg   ebx,eax
  42035c:	js     0x4203d7
  42035e:	xchg   esi,eax
  42035f:	push   eax
  420360:	mov    al,ds:0x5d8025fc
  420365:	mul    DWORD PTR ss:[di]
  420369:	lock jecxz 0x4203bb
  42036c:	lock in eax,dx
  42036e:	out    0xcd,al
  420370:	xor    edi,DWORD PTR [edi]
  420372:	mov    ds,WORD PTR [edx-0x69]
  420375:	lock test al,0xb7
  420378:	rcr    ah,1
  42037a:	ins    DWORD PTR es:[edi],dx
  42037b:	push   0xffffffc7
  42037d:	das    
  42037e:	push   esi
  42037f:	jp     0x42032a
  420381:	jns    0x420372
  420383:	add    ebp,DWORD PTR [esi]
  420385:	xor    al,0x60
  420387:	push   cs
  420388:	sar    DWORD PTR [edi+0x670ba576],0x8c
  42038f:	in     eax,0x75
  420391:	or     ch,BYTE PTR [ebx-0x77c13343]
  420397:	push   esp
  420398:	cs pop edx
  42039a:	or     eax,0x37a463ef
  42039f:	pop    eax
  4203a0:	cli    
  4203a1:	sbb    edx,DWORD PTR [esi]
  4203a3:	retf   0xb768
  4203a6:	ins    DWORD PTR es:[edi],dx
  4203a7:	leave  
  4203a8:	dec    edi
  4203a9:	sub    al,0x84
  4203ab:	xor    eax,0x90093c7
  4203b0:	cmp    bl,BYTE PTR [eax]
  4203b2:	inc    ebx
  4203b3:	add    eax,0x39e90637
  4203b8:	nop
  4203b9:	pop    ss
  4203ba:	and    BYTE PTR [eax-0x3d],dh
  4203bd:	xchg   BYTE PTR [ebx],al
  4203bf:	out    0x36,eax
  4203c1:	sub    ch,bl
  4203c3:	sbb    BYTE PTR [eax+0x44ddc6da],dh
  4203c9:	loope  0x420412
  4203cb:	cmp    bl,bl
  4203cd:	loope  0x42035f
  4203cf:	mov    ch,dl
  4203d1:	xchg   ecx,eax
  4203d2:	mov    esi,0x7ecd19c0
  4203d7:	xor    al,0x9d
  4203d9:	in     al,dx
  4203da:	test   eax,0x244014db
  4203df:	and    al,0x56
  4203e1:	arpl   WORD PTR [ecx],bx
  4203e3:	xor    eax,0xb7f39ac4
  4203e8:	mov    eax,ds:0xd26a1f1b
  4203ed:	adc    eax,esi
  4203ef:	popf   
  4203f0:	add    DWORD PTR [edi],esi
  4203f2:	and    eax,0x38a5b157
  4203f7:	popa   
  4203f8:	(bad)  
  4203f9:	fcomp  DWORD PTR [edx+0x54]
  4203fc:	jae    0x42038f
  4203fe:	jle    0x420395
  420400:	xchg   esi,eax
  420401:	push   ecx
  420402:	test   al,0x6c
  420404:	mov    ds,WORD PTR [ebx-0x5f6585cf]
  42040a:	dec    ecx
  42040b:	fisttp DWORD PTR [ebx+0x365e6d88]
  420411:	retf   0x1801
  420414:	into   
  420415:	or     ebp,ebx
  420417:	xor    DWORD PTR [esi-0x64380191],edx
  42041d:	mov    ecx,0xddeffc1d
  420422:	stos   BYTE PTR es:[edi],al
  420423:	mov    ah,0x43
  420425:	inc    esp
  420426:	mov    dh,0x71
  420428:	nop
  420429:	or     esp,DWORD PTR [esi+0x6a7dbd69]
  42042f:	xor    edx,ebp
  420431:	pop    ecx
  420432:	fistp  DWORD PTR [esi+ebp*1-0x1749ddf]
  420439:	jg     0x4203dc
  42043b:	jne    0x420400
  42043d:	test   al,0x23
  42043f:	xchg   DWORD PTR [ebp-0x2a],esi
  420442:	popf   
  420443:	mov    edi,0xb02592c6
  420448:	sub    eax,0x3d44c4d9
  42044d:	shl    DWORD PTR [eax+0x54],0x5
  420451:	xchg   DWORD PTR [edi+edi*8],edi
  420454:	addr16 dec ecx
  420456:	jns    0x4203e4
  420458:	push   ecx
  420459:	xchg   esi,eax
  42045a:	test   BYTE PTR [esi],0xaf
  42045d:	fwait
  42045e:	inc    edx
  42045f:	hlt    
  420460:	mov    al,0x98
  420462:	dec    ecx
  420463:	and    eax,0x3f1c208a
  420468:	icebp  
  420469:	pop    es
  42046a:	retf   0x2300
  42046d:	sti    
  42046e:	js     0x4204c0
  420470:	sub    esi,DWORD PTR [ebp-0x7b]
  420473:	lahf   
  420474:	repz pop edx
  420476:	loope  0x420451
  420478:	jl     0x42041b
  42047a:	add    DWORD PTR ss:[ebp-0x6b0813b1],0xff3bf54a
  420485:	adc    eax,0xe3464428
  42048a:	mov    ebp,0xef05ed7e
  42048f:	cmp    al,0x79
  420491:	adc    bh,cl
  420493:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420494:	mov    ds:0x1ecba097,al
  420499:	sub    BYTE PTR [eax-0x74],bl
  42049c:	imul   DWORD PTR ds:0xc2f45eef
  4204a2:	push   esi
  4204a3:	pop    ds
  4204a4:	add    BYTE PTR [ecx+0x7],0xc7
  4204a8:	mov    edi,0xea5258e6
  4204ad:	mov    al,ds:0x6a82102
  4204b2:	inc    edx
  4204b3:	cli    
  4204b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204b5:	add    BYTE PTR [eax-0x7358f1ae],ah
  4204bb:	sbb    bh,BYTE PTR [esi]
  4204bd:	arpl   WORD PTR [edx],ax
  4204bf:	adc    eax,0xd878eafd
  4204c4:	mov    edx,0x762b4512
  4204c9:	adc    bh,0x96
  4204cc:	cs loop 0x420547
  4204cf:	int    0xfd
  4204d1:	pop    eax
  4204d2:	daa    
  4204d3:	dec    esp
  4204d4:	shl    BYTE PTR [ecx+ebp*8-0x54b2ecc8],0xfc
  4204dc:	dec    ebx
  4204dd:	jbe    0x4204c1
  4204df:	sub    al,0xd0
  4204e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204e2:	mov    esp,0xa967193a
  4204e7:	jae    0x42054f
  4204e9:	fwait
  4204ea:	aam    0xb
  4204ec:	mov    fs,WORD PTR [ecx+0x21]
  4204ef:	mov    dl,BYTE PTR [eax]
  4204f1:	int3   
  4204f2:	push   0x27c5fdd1
  4204f7:	push   ds
  4204f8:	sar    BYTE PTR [esi+ecx*1+0x42],0xc2
  4204fd:	je     0x4204c3
  4204ff:	inc    ebp
  420500:	pop    es
  420501:	push   esp
  420502:	xor    DWORD PTR [edx],esp
  420504:	jmp    0x4204ad
  420506:	inc    ebx
  420507:	ins    DWORD PTR es:[edi],dx
  420508:	sub    DWORD PTR [ebx],esi
  42050a:	xor    al,0x60
  42050c:	pop    esi
  42050d:	pop    es
  42050e:	outs   dx,DWORD PTR ds:[esi]
  42050f:	jmp    0xbfcc6e94
  420514:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  420516:	mov    dh,0xa5
  420518:	inc    ecx
  420519:	mov    ebx,0x45be70f6
  42051e:	retf   
  42051f:	shr    DWORD PTR [edx],cl
  420521:	popa   
  420522:	push   ss
  420523:	sub    DWORD PTR [ebp-0x3b22a0fd],esp
  420529:	push   ss
  42052a:	retf   0x91a1
  42052d:	(bad)  
  42052e:	pop    esp
  42052f:	aam    0xdd
  420531:	push   edx
  420532:	rcl    DWORD PTR [esi+edx*1],0xab
  420536:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420537:	inc    eax
  420538:	adc    eax,0xfd41a393
  42053d:	and    DWORD PTR [esi+eax*1+0x7a],edi
  420541:	shr    BYTE PTR [edi+ebx*1],0x97
  420545:	jle    0x42050c
  420547:	loop   0x42057a
  420549:	xchg   BYTE PTR [ecx-0x3193fba],ah
  42054f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420550:	sahf   
  420551:	arpl   WORD PTR [edx-0x67],sp
  420554:	jmp    0xfcb:0x9705b78e
  42055b:	push   ecx
  42055c:	js     0x4204f8
  42055e:	xor    al,0x3e
  420560:	fst    st(4)
  420562:	push   edx
  420563:	dec    esi
  420564:	xor    al,0x8b
  420566:	mov    ds:0xa9c9d223,eax
  42056b:	mov    ah,0xb4
  42056d:	pop    esp
  42056e:	adc    bh,al
  420570:	cdq    
  420571:	push   edx
  420572:	das    
  420573:	mov    bl,0x25
  420575:	(bad)  
  420576:	pop    ebp
  420577:	or     al,0xcc
  420579:	cmp    edi,DWORD PTR [esi+eax*1]
  42057c:	xchg   edi,eax
  42057d:	into   
  42057e:	push   ds
  42057f:	or     ebx,DWORD PTR ds:0xe7aa608a
  420585:	call   0xa5bf:0xd474dd1d
  42058c:	xchg   edi,eax
  42058d:	push   edi
  42058e:	ss pop ebp
  420590:	cdq    
  420591:	mov    dh,0xd5
  420593:	test   DWORD PTR gs:[edi],ebp
  420596:	inc    edi
  420597:	test   eax,0xd550c049
  42059c:	mov    al,BYTE PTR [ebp-0x5a]
  42059f:	jmp    0x42054a
  4205a1:	popf   
  4205a2:	xchg   edi,eax
  4205a3:	(bad)  
  4205a4:	jne    0x4205c2
  4205a6:	call   0xacf3:0xa31b8e80
  4205ad:	push   edx
  4205ae:	mov    dl,0xc4
  4205b0:	or     eax,0xe7c70dc8
  4205b5:	(bad)  
  4205b6:	jne    0x420563
  4205b8:	jbe    0x420558
  4205ba:	adc    dh,dh
  4205bc:	cld    
  4205bd:	int3   
  4205be:	ffreep st(3)
  4205c0:	int    0xf5
  4205c2:	lahf   
  4205c3:	dec    edx
  4205c4:	push   esp
  4205c5:	shl    DWORD PTR [ebx],1
  4205c7:	into   
  4205c8:	adc    BYTE PTR [ecx+0x3f87cfde],0x5a
  4205cf:	dec    edi
  4205d0:	add    BYTE PTR [edi],ch
  4205d2:	adc    edi,esp
  4205d4:	jle    0x4205f0
  4205d6:	inc    esi
  4205d7:	(bad)  
  4205d8:	js     0x4205da
  4205da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205db:	pop    ds
  4205dc:	and    al,cl
  4205de:	inc    eax
  4205df:	mov    BYTE PTR [edx],al
  4205e1:	js     0x4205f1
  4205e3:	mov    cl,0x4d
  4205e5:	mov    dh,0xb6
  4205e7:	das    
  4205e8:	pop    ebx
  4205e9:	mov    cl,dh
  4205eb:	dec    esp
  4205ec:	in     al,0x8a
  4205ee:	retf   
  4205ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205f0:	out    dx,al
  4205f1:	cmp    eax,DWORD PTR [ebx+0x1bab235e]
  4205f7:	sbb    ebx,DWORD PTR [esi+0x18ad778a]
  4205fd:	xchg   edi,eax
  4205fe:	das    
  4205ff:	fldenv [edi-0x79]
  420602:	xchg   esp,eax
  420603:	not    BYTE PTR [edi-0x127f55af]
  420609:	or     dl,BYTE PTR ds:0xdb39a291
  42060f:	rcl    BYTE PTR [ebx+0x1fd65dca],cl
  420615:	hlt    
  420616:	push   ds
  420617:	gs std 
  420619:	jg     0x42061b
  42061b:	retf   0x60d4
  42061e:	pop    ds
  42061f:	mov    bh,0x6d
  420621:	(bad)  
  420622:	adc    ecx,ebp
  420624:	add    edi,DWORD PTR [eax+edx*8-0xe]
  420628:	out    0x68,eax
  42062a:	xor    bl,cl
  42062c:	or     eax,0xf501e5d1
  420631:	adc    cl,al
  420633:	ret    0xb0e8
  420636:	aas    
  420637:	and    eax,0x927bc7b6
  42063c:	pop    ds
  42063d:	les    esi,FWORD PTR [ebx+0x11]
  420640:	push   edx
  420641:	call   FWORD PTR [edx+eiz*2]
  420644:	mov    eax,ds:0xebfa6109
  420649:	and    DWORD PTR cs:[ebx+ebx*2+0x3a],ecx
  42064e:	fwait
  42064f:	dec    esi
  420650:	jae    0x420619
  420652:	xlat   BYTE PTR ds:[ebx]
  420653:	fwait
  420654:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420655:	es inc edi
  420657:	lods   eax,DWORD PTR ds:[esi]
  420658:	or     DWORD PTR [esi],esp
  42065a:	data16 mov ds:0x7e6e1d4f,al
  420660:	mov    ebx,0x9fd73b08
  420665:	daa    
  420666:	lahf   
  420667:	sub    ch,dh
  420669:	and    BYTE PTR [ebp+0x3a],dh
  42066c:	pop    edx
  42066d:	mov    edi,0xf8a8c4f9
  420672:	mov    dl,0x9e
  420674:	arpl   WORD PTR [esi+0x2f],sp
  420677:	inc    ecx
  420678:	(bad)  
  420679:	das    
  42067a:	imul   eax,DWORD PTR [esi+eiz*4],0x5ba0c3f7
  420681:	fidivr WORD PTR [esp+edx*2]
  420684:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420685:	cwde   
  420686:	jo     0x4206a1
  420688:	sub    ecx,ebx
  42068a:	inc    esp
  42068b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42068c:	test   BYTE PTR [edx-0x72],ch
  42068f:	sbb    ebx,DWORD PTR [edx+0x5c]
  420692:	arpl   WORD PTR [ebx],cx
  420694:	outs   dx,BYTE PTR ds:[esi]
  420695:	cdq    
  420696:	pop    es
  420697:	bnd jno 0x4206c2
  42069a:	lahf   
  42069b:	push   ebx
  42069c:	bound  esi,QWORD PTR [ebx-0x53]
  42069f:	test   eax,0xb5f7675d
  4206a4:	ret    
  4206a5:	ficomp WORD PTR [ebx+0x7f]
  4206a8:	sub    al,0xd1
  4206aa:	mov    eax,0x97e37f2f
  4206af:	jmp    0x4206ce
  4206b1:	push   esi
  4206b2:	push   0xffffffa2
  4206b4:	or     al,0xd3
  4206b6:	add    BYTE PTR [esi],dl
  4206b8:	iret   
  4206b9:	pop    eax
  4206ba:	pushf  
  4206bb:	cmp    BYTE PTR [ebx-0x11],ah
  4206be:	push   0xd2a0e485
  4206c3:	fld    QWORD PTR [ebx-0x7d]
  4206c6:	ror    BYTE PTR [ebp+0x21],1
  4206c9:	fdiv   st(1),st
  4206cb:	(bad)  
  4206cd:	(bad)  
  4206ce:	mov    ebx,0xea862218
  4206d3:	pop    edi
  4206d4:	stc    
  4206d5:	neg    ch
  4206d7:	les    esp,FWORD PTR [edi+0x30]
  4206da:	and    ah,BYTE PTR [eax]
  4206dc:	sub    bl,ah
  4206de:	mov    bl,0xfe
  4206e0:	dec    esp
  4206e1:	fsubr  st,st(4)
  4206e3:	lods   eax,DWORD PTR ds:[esi]
  4206e4:	hlt    
  4206e5:	mov    WORD PTR [ebp-0x66],fs
  4206e8:	cmp    eax,0x19b26b42
  4206ed:	mov    WORD PTR [ebx+0x4a798a70],?
  4206f3:	addr16 ss adc eax,0xd4b87bb3
  4206fa:	jnp    0x4206dc
  4206fc:	idiv   ebx
  4206fe:	pop    esp
  4206ff:	pop    ecx
  420700:	sbb    edx,edx
  420702:	mov    eax,ds:0x35a1b39e
  420707:	fadd   DWORD PTR [esi-0x47146127]
  42070d:	cwde   
  42070e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42070f:	sub    eax,0x98d3fa8a
  420714:	push   cs
  420715:	adc    cl,BYTE PTR [ebx]
  420717:	inc    edx
  420718:	mov    esi,0x28cd06ba
  42071d:	in     al,dx
  42071e:	cmp    ah,BYTE PTR [esi-0x42]
  420721:	jle    0x420706
  420723:	das    
  420724:	pop    ds
  420725:	jl     0x420765
  420727:	or     BYTE PTR [edx+ecx*4+0x5e],dh
  42072b:	fcmovbe st,st(4)
  42072d:	xchg   ecx,eax
  42072e:	mov    bh,0xc2
  420730:	inc    ecx
  420731:	mov    ebx,0x5124a1ae
  420736:	and    eax,0xad273dcd
  42073b:	ret    
  42073c:	in     al,0x7b
  42073e:	and    ah,BYTE PTR [edi+0x580f272c]
  420744:	lods   al,BYTE PTR ds:[esi]
  420745:	rcl    DWORD PTR [eax],cl
  420747:	fnstcw WORD PTR [ecx]
  420749:	lds    eax,FWORD PTR [ecx-0x6a]
  42074c:	xchg   ecx,eax
  42074d:	xchg   edi,eax
  42074e:	call   edx
  420750:	or     edx,DWORD PTR [ebp-0x75]
  420753:	cmp    DWORD PTR [edi+0x6da9a661],ebp
  420759:	loop   0x420717
  42075b:	xor    al,0xb9
  42075d:	inc    ecx
  42075e:	nop
  42075f:	adc    edx,DWORD PTR [edi+edx*4]
  420762:	cmc    
  420763:	xchg   esi,eax
  420764:	xor    cl,BYTE PTR [esp+ebp*8]
  420767:	das    
  420768:	rol    BYTE PTR [edx+ecx*4-0x784ed6e9],cl
  42076f:	push   ebp
  420770:	sub    BYTE PTR [eax+0xe],al
  420773:	pop    ebx
  420774:	sub    ebp,0x4e
  420777:	mov    edi,0x1d8c5794
  42077c:	or     DWORD PTR [ebp+ebx*1+0x4e],esi
  420780:	pop    esi
  420781:	popa   
  420782:	xor    al,0x57
  420784:	push   edi
  420785:	nop
  420786:	pop    esi
  420787:	mov    ?,WORD PTR ds:[ebx-0x64]
  42078b:	dec    ecx
  42078c:	jmp    FWORD PTR [edi-0x7a]
  42078f:	je     0x420719
  420791:	add    eax,ecx
  420793:	mov    DWORD PTR [ebp-0x14],eax
  420796:	mov    eax,DWORD PTR [ebp-0x14]
  420799:	mov    eax,DWORD PTR [eax+0xc]
  42079c:	movsx  eax,BYTE PTR [eax+ecx*1]
  4207a0:	cdq    
  4207a1:	add    eax,ebx
  4207a3:	adc    edx,0xffffffff
  4207a6:	xor    eax,edi
  4207a8:	xor    edx,0x0
  4207ab:	cmp    eax,0x70941e1e
  4207b0:	jne    0x41e3c0
  4207b6:	cmp    edx,0xffffffff
  4207b9:	jne    0x41e3c0
  4207bf:	mov    eax,ds:0x42830b
  4207c4:	mov    eax,DWORD PTR [eax+0x198]
  4207ca:	mov    DWORD PTR [eax],ecx
  4207cc:	mov    eax,ecx
  4207ce:	jmp    0x4207f7
  4207d3:	mov    eax,DWORD PTR [ebp+0x18]
  4207d6:	cmp    eax,0xf89c85a2
  4207db:	jne    0x4207f7
  4207e1:	push   0xf89c85a3
  4207e6:	push   DWORD PTR [ebp+0x14]
  4207e9:	push   DWORD PTR [ebp+0x10]
  4207ec:	push   DWORD PTR [ebp+0xc]
  4207ef:	push   DWORD PTR [ebp+0x8]
  4207f2:	call   0x41b9fd
  4207f7:	pop    edi
  4207f8:	pop    ebx
  4207f9:	pop    esi
  4207fa:	leave  
  4207fb:	ret    0x14
  4207fe:	push   ebp
  4207ff:	mov    ebp,esp
  420801:	and    esp,0xfffffff8
  420804:	or     DWORD PTR ds:0x42918f,0x225c
  42080e:	sub    esp,0x3fc
  420814:	sbb    DWORD PTR ds:0x4291a7,0x4291f3
  42081e:	push   ebx
  42081f:	push   esi
  420820:	push   edi
  420821:	and    DWORD PTR ds:0x42915f,0x397e
  42082b:	push   0x42842f
  420830:	or     DWORD PTR ds:0x4291af,0x2ff8
  42083a:	push   0x7876867
  42083f:	or     DWORD PTR ds:0x4291b7,0x20a1
  420849:	call   DWORD PTR ds:0x42a52b
  42084f:	sub    DWORD PTR ds:0x42915f,0x5681
  420859:	mov    DWORD PTR [esp+0x30],eax
  42085d:	lea    eax,[esp+0x78]
  420861:	push   eax
  420862:	sub    DWORD PTR ds:0x42919b,0x4291d3
  42086c:	push   0x428447
  420871:	mov    DWORD PTR ds:0x4291e3,0x3a46
  42087b:	call   DWORD PTR ds:0x42a54b
  420881:	cmp    eax,0xffffffff
  420884:	je     0x42089b
  42088a:	xor    DWORD PTR ds:0x42915f,0x150a
  420894:	xor    eax,eax
  420896:	jmp    0x421b36
  42089b:	mov    esi,DWORD PTR ds:0x42a567
  4208a1:	xor    DWORD PTR ds:0x4291d3,0x3930
  4208ab:	push   0xf
  4208ad:	lea    eax,[esp+0x44]
  4208b1:	push   eax
  4208b2:	push   0x42845b
  4208b7:	push   0x42846f
  4208bc:	sub    DWORD PTR ds:0x42915f,0x4291d7
  4208c6:	push   0x42848f
  4208cb:	adc    DWORD PTR ds:0x429183,0x3c8a
  4208d5:	call   esi
  4208d7:	imul   eax,eax,0x300000
  4208dd:	cmp    eax,0x1b00000
  4208e2:	mov    DWORD PTR ds:0x4291bf,0x78b4
  4208ec:	jne    0x42088a
  4208f2:	or     DWORD PTR ds:0x4291b3,0x42915b
  4208fc:	lea    eax,[esp+0x1b8]
  420903:	and    DWORD PTR ds:0x42919f,0x5d3c
  42090d:	push   eax
  42090e:	add    DWORD PTR ds:0x4291e3,0x4291af
  420918:	push   0x4284cb
  42091d:	and    DWORD PTR ds:0x429153,0x42915b
  420927:	call   DWORD PTR ds:0x42a537
  42092d:	cmp    eax,0xffffffff
  420930:	jne    0x42088a
  420936:	add    DWORD PTR ds:0x42914b,0x6e9d
  420940:	mov    DWORD PTR [esp+0x30],0x0
  420948:	or     ecx,ecx
  42094a:	mov    ecx,0xf89c85a1
  42094f:	mov    DWORD PTR ds:0x4291af,0x17
  420959:	cmp    DWORD PTR ds:0x4291af,0x0
  420960:	je     0x4209b6
  420966:	cmp    DWORD PTR ds:0x4291af,0x4
  42096d:	jge    0x4209b6
  420973:	jmp    0x420988
  420978:	push   0x4280d6
  42097d:	push   0x1
  42097f:	push   DWORD PTR [ebp-0x24]
  420982:	call   DWORD PTR ds:0x42a54f
  420988:	cmp    DWORD PTR ds:0x4291af,0x5
  42098f:	jne    0x4209a2
  420995:	mov    ebx,DWORD PTR ds:0x4291af
  42099b:	dec    ebx
  42099c:	mov    DWORD PTR ds:0x4291af,ebx
  4209a2:	xor    ebx,ebx
  4209a4:	xor    ebx,DWORD PTR ds:0x4291af
  4209aa:	dec    ebx
  4209ab:	mov    DWORD PTR ds:0x4291af,ebx
  4209b1:	jmp    0x420959
  4209b6:	mov    DWORD PTR [esp+0x18],ecx
  4209ba:	add    DWORD PTR ds:0x429167,0x3918
  4209c4:	mov    DWORD PTR [esp+0xc],0xf89c85a2
  4209cc:	mov    edx,DWORD PTR ds:0x4291af
  4209d2:	or     DWORD PTR ds:0x429163,edx
  4209d8:	lea    eax,[esp+0x3c]
  4209dc:	mov    DWORD PTR [esp+0x30],eax
  4209e0:	xor    edi,edx
  4209e2:	lea    eax,[esp+0x38]
  4209e6:	sbb    edx,DWORD PTR ds:0x4291c3
  4209ec:	mov    DWORD PTR [esp+0x20],eax
  4209f0:	or     edi,0x5972
  4209f6:	mov    eax,ds:0x42830b
  4209fb:	mov    DWORD PTR ds:0x42917f,0x17
  420a05:	cmp    DWORD PTR ds:0x42917f,0x0
  420a0c:	je     0x420a43
  420a12:	cmp    DWORD PTR ds:0x42917f,0x21
  420a19:	jl     0x420a43
  420a1f:	jmp    0x420a2f
  420a24:	push   0x3972
  420a29:	call   DWORD PTR ds:0x42a553
  420a2f:	xor    edi,edi
  420a31:	add    edi,DWORD PTR ds:0x42917f
  420a37:	dec    edi
  420a38:	mov    DWORD PTR ds:0x42917f,edi
  420a3e:	jmp    0x420a05
  420a43:	mov    eax,DWORD PTR [eax+0x1c8]
  420a49:	mov    eax,DWORD PTR [eax]
  420a4b:	mov    edx,DWORD PTR [esp+0x20]
  420a4f:	mov    edi,0x75108ac
  420a54:	mov    ebx,DWORD PTR ds:0x4291db
  420a5a:	sbb    DWORD PTR ds:0x429153,ebx
  420a60:	xor    eax,edi
  420a62:	adc    DWORD PTR ds:0x4291f3,0x37f0
  420a6c:	mov    ebx,0x3272f3
  420a71:	add    DWORD PTR ds:0x4291a3,0x4291a7
  420a7b:	add    eax,ebx
  420a7d:	not    DWORD PTR ds:0x4291a3
  420a83:	mov    DWORD PTR [edx],eax
  420a85:	mov    DWORD PTR ds:0x4291cb,0x5252
  420a8f:	mov    eax,ds:0x42901f
  420a94:	cmp    eax,0x445cecf9
  420a99:	mov    DWORD PTR ds:0x4291bb,0x4b3f
  420aa3:	jne    0x420b94
  420aa9:	mov    eax,DWORD PTR [esp+0x18]
  420aad:	and    DWORD PTR ds:0x4291ab,0x0
  420ab7:	jmp    0x420acb
  420abc:	xor    edx,edx
  420abe:	add    edx,DWORD PTR ds:0x4291ab
  420ac4:	inc    edx
  420ac5:	mov    DWORD PTR ds:0x4291ab,edx
  420acb:	cmp    DWORD PTR ds:0x4291ab,0x1e
  420ad2:	jae    0x420b1c
  420ad8:	cmp    DWORD PTR ds:0x4291ab,0xe
  420adf:	jl     0x420b1c
  420ae5:	jmp    0x420afd
  420aea:	push   0x4280a5
  420aef:	push   DWORD PTR [ebp-0x1c]
  420af2:	push   0x3b7d
  420af7:	call   DWORD PTR ds:0x42a557
  420afd:	cmp    DWORD PTR ds:0x4291ab,0xd
  420b04:	jne    0x420b17
  420b0a:	mov    edx,DWORD PTR ds:0x4291ab
  420b10:	inc    edx
  420b11:	mov    DWORD PTR ds:0x4291ab,edx
  420b17:	jmp    0x420abc
  420b1c:	mov    edx,DWORD PTR ds:0x42830b
  420b22:	adc    DWORD PTR ds:0x4291b3,0x4291a7
  420b2c:	mov    edx,DWORD PTR [edx+0x198]
  420b32:	adc    DWORD PTR ds:0x4291a3,0x42918f
  420b3c:	xor    eax,edi
  420b3e:	sub    DWORD PTR ds:0x42916f,0x429197
  420b48:	add    eax,ebx
  420b4a:	add    DWORD PTR ds:0x42915f,0x42915b
  420b54:	mov    DWORD PTR [edx],eax
  420b56:	mov    eax,DWORD PTR [esp+0x18]
  420b5a:	xor    eax,edi
  420b5c:	not    DWORD PTR ds:0x4291b3
  420b62:	add    eax,ebx
  420b64:	sbb    DWORD PTR ds:0x4291eb,0x4291d3
  420b6e:	mov    ds:0x42901f,eax
  420b73:	mov    eax,DWORD PTR [esp+0x18]
  420b77:	sbb    DWORD PTR ds:0x42917b,0x42915f
  420b81:	xor    eax,edi
  420b83:	sub    DWORD PTR ds:0x429167,0x5dcc
  420b8d:	add    eax,ebx
  420b8f:	mov    ds:0x428403,eax
  420b94:	and    DWORD PTR ds:0x4291c3,0x0
  420b9e:	xor    eax,eax
  420ba0:	xor    eax,DWORD PTR ds:0x4291c3
  420ba6:	inc    eax
  420ba7:	mov    ds:0x4291c3,eax
  420bac:	cmp    DWORD PTR ds:0x4291c3,0x10
  420bb3:	jb     0x420be9
  420bb9:	jmp    0x420bc4
  420bbe:	call   DWORD PTR ds:0x42a55b
  420bc4:	cmp    DWORD PTR ds:0x4291c3,0xf
  420bcb:	jne    0x420bdc
  420bd1:	mov    eax,ds:0x4291c3
  420bd6:	inc    eax
  420bd7:	mov    ds:0x4291c3,eax
  420bdc:	cmp    DWORD PTR ds:0x4291c3,0x1a
  420be3:	jb     0x420b9e
  420be9:	mov    eax,ds:0x42830b
  420bee:	xor    DWORD PTR ds:0x4291bb,0x4291bf
  420bf8:	mov    eax,DWORD PTR [eax+0x18c]
  420bfe:	add    DWORD PTR ds:0x4291e7,0x4bf9
  420c08:	mov    eax,DWORD PTR [eax]
  420c0a:	mov    DWORD PTR [esp+0x60],eax
  420c0e:	mov    eax,0xf89c85bd
  420c13:	mov    DWORD PTR [esp+0x10],eax
  420c17:	add    DWORD PTR ds:0x429193,0x4291c7
  420c21:	mov    DWORD PTR [esp+0x10],eax
  420c25:	or     DWORD PTR ds:0x42917f,0x429187
  420c2f:	mov    DWORD PTR [esp+0x10],eax
  420c33:	mov    DWORD PTR [esp+0x10],ecx
  420c37:	dec    DWORD PTR ds:0x429167
  420c3d:	mov    DWORD PTR [esp+0x20],eax
  420c41:	and    DWORD PTR ds:0x4291d7,0x0
  420c4b:	xor    eax,eax
  420c4d:	add    eax,DWORD PTR ds:0x4291d7
  420c53:	inc    eax
  420c54:	mov    ds:0x4291d7,eax
  420c59:	cmp    DWORD PTR ds:0x4291d7,0xc
  420c60:	jge    0x420ca3
  420c66:	jmp    0x420c7b
  420c6b:	push   0x4291a7
  420c70:	push   0x4280a5
  420c75:	call   DWORD PTR ds:0x42a55f
  420c7b:	cmp    DWORD PTR ds:0x4291d7,0xb
  420c82:	jne    0x420c96
  420c88:	xor    eax,eax
  420c8a:	xor    eax,DWORD PTR ds:0x4291d7
  420c90:	inc    eax
  420c91:	mov    ds:0x4291d7,eax
  420c96:	cmp    DWORD PTR ds:0x4291d7,0x18
  420c9d:	jb     0x420c4b
  420ca3:	mov    DWORD PTR [esp+0x20],0xf89c85b9
  420cab:	sbb    eax,0x733e
  420cb0:	mov    eax,DWORD PTR [esp+0x18]
  420cb4:	xor    eax,edi
  420cb6:	xor    DWORD PTR ds:0x429167,0x2364
  420cc0:	add    eax,ebx
  420cc2:	jmp    0x420ea1
  420cc7:	lea    eax,[esp+0x78]
  420ccb:	sub    DWORD PTR ds:0x42918f,0x2bd1
  420cd5:	push   eax
  420cd6:	add    DWORD PTR ds:0x4291af,0x4291bb
  420ce0:	push   0x4284b7
  420ce5:	add    DWORD PTR ds:0x42916f,0x62a2
  420cef:	call   DWORD PTR ds:0x42a54b
  420cf5:	mov    DWORD PTR ds:0x4291ef,0x479f
  420cff:	cmp    eax,0xffffffff
  420d02:	jne    0x42088a
  420d08:	push   0xf
  420d0a:	lea    eax,[esp+0x44]
  420d0e:	add    DWORD PTR ds:0x42918f,0x71aa
  420d18:	push   eax
  420d19:	adc    DWORD PTR ds:0x4291bb,0x429187
  420d23:	push   0x42850b
  420d28:	push   0x42851f
  420d2d:	or     DWORD PTR ds:0x4291ef,0x259a
  420d37:	push   0x42853f
  420d3c:	call   esi
  420d3e:	imul   eax,eax,0x300000
  420d44:	mov    DWORD PTR ds:0x42914f,0x7610
  420d4e:	cmp    eax,0x1b00000
  420d53:	mov    DWORD PTR ds:0x429157,0x1024
  420d5d:	jne    0x42088a
  420d63:	sbb    DWORD PTR ds:0x4291c3,0x4291d7
  420d6d:	lea    eax,[esp+0x1b8]
  420d74:	push   eax
  420d75:	push   0x42857b
  420d7a:	sbb    DWORD PTR ds:0x42918f,0x1a84
  420d84:	call   DWORD PTR ds:0x42a537
  420d8a:	mov    DWORD PTR ds:0x4291b3,0x1d41
  420d94:	cmp    eax,0xffffffff
  420d97:	jne    0x42088a
  420d9d:	mov    eax,DWORD PTR [esp+0xc]
  420da1:	xor    ecx,DWORD PTR ds:0x42914f
  420da7:	mov    ecx,DWORD PTR [esp+0x20]
  420dab:	sbb    DWORD PTR ds:0x429197,0x5641
  420db5:	xor    eax,edi
  420db7:	sbb    DWORD PTR ds:0x4291ef,0x4291eb
  420dc1:	lea    eax,[eax+ecx*1+0x3272f3]
  420dc8:	inc    DWORD PTR ds:0x4291e7
  420dce:	push   eax
  420dcf:	add    DWORD PTR ds:0x4291b3,ebx
  420dd5:	mov    eax,DWORD PTR [esp+0x14]
  420dd9:	xor    eax,edi
  420ddb:	lea    eax,[ebp+eax*1+0x3272fb]
  420de2:	xor    DWORD PTR ds:0x429197,0x3901
  420dec:	push   eax
  420ded:	mov    DWORD PTR ds:0x429153,0x5a0a
  420df7:	mov    eax,ds:0x42830b
  420dfc:	xor    DWORD PTR ds:0x4291c3,0x2a62
  420e06:	push   DWORD PTR [eax+0x1bc]
  420e0c:	adc    DWORD PTR ds:0x429153,0x42915f
  420e16:	call   0x421b3f
  420e1b:	and    DWORD PTR ds:0x4291af,0x0
  420e25:	jmp    0x420e37
  420e2a:	mov    edx,DWORD PTR ds:0x4291af
  420e30:	inc    edx
  420e31:	mov    DWORD PTR ds:0x4291af,edx
  420e37:	cmp    DWORD PTR ds:0x4291af,0x15
  420e3e:	jae    0x420e7e
  420e44:	cmp    DWORD PTR ds:0x4291af,0xd
  420e4b:	jl     0x420e7e
  420e51:	jmp    0x420e5f
  420e56:	push   DWORD PTR [ebp-0x1c]
  420e59:	call   DWORD PTR ds:0x42a563
  420e5f:	cmp    DWORD PTR ds:0x4291af,0xc
  420e66:	jne    0x420e79
  420e6c:	mov    edx,DWORD PTR ds:0x4291af
  420e72:	inc    edx
  420e73:	mov    DWORD PTR ds:0x4291af,edx
  420e79:	jmp    0x420e2a
  420e7e:	mov    eax,DWORD PTR [esp+0xc]
  420e82:	mov    ecx,DWORD PTR [esp+0x20]
  420e86:	mov    edx,DWORD PTR ds:0x429167
  420e8c:	adc    DWORD PTR ds:0x4291b3,edx
  420e92:	xor    eax,edi
  420e94:	and    edx,DWORD PTR ds:0x4291b3
  420e9a:	lea    eax,[ecx+eax*1+0x3272f3]
  420ea1:	mov    ecx,DWORD PTR [esp+0xc]
  420ea5:	neg    edx
  420ea7:	mov    edx,DWORD PTR [esp+0xc]
  420eab:	or     DWORD PTR ds:0x42917b,0x429157
  420eb5:	xor    edx,edi
  420eb7:	or     DWORD PTR ds:0x4291c7,0x1707
  420ec1:	xor    ecx,edi
  420ec3:	xor    DWORD PTR ds:0x42916f,0x6f67
  420ecd:	add    ecx,edx
  420ecf:	mov    edx,DWORD PTR [esp+0xc]
  420ed3:	add    DWORD PTR ds:0x429193,0xde7
  420edd:	xor    edx,edi
  420edf:	mov    DWORD PTR ds:0x429197,0x79ec
  420ee9:	lea    ecx,[ecx+edx*1+0x9758d9]
  420ef0:	mov    DWORD PTR ds:0x42917b,0x463d
  420efa:	mov    DWORD PTR [esp+0x20],eax
  420efe:	cmp    eax,ecx
  420f00:	jbe    0x420cc7
  420f06:	xor    ecx,ecx
  420f08:	or     ecx,DWORD PTR ds:0x4291a3
  420f0e:	or     DWORD PTR ds:0x4291b3,ecx
  420f14:	mov    eax,DWORD PTR [ebp+0xc]
  420f17:	and    DWORD PTR ds:0x4291e3,0x0
  420f21:	mov    ecx,DWORD PTR ds:0x4291e3
  420f27:	inc    ecx
  420f28:	mov    DWORD PTR ds:0x4291e3,ecx
  420f2e:	cmp    DWORD PTR ds:0x4291e3,0x18
  420f35:	jge    0x420f62
  420f3b:	jmp    0x420f55
  420f40:	push   0x4291ab
  420f45:	push   0x4291db
  420f4a:	push   0x4566
  420f4f:	call   DWORD PTR ds:0x42a56b
  420f55:	cmp    DWORD PTR ds:0x4291e3,0x17
  420f5c:	jb     0x420f21
  420f62:	mov    ds:0x42818f,eax
  420f67:	mov    eax,DWORD PTR [ebp+0x10]
  420f6a:	mov    ds:0x4283eb,eax
  420f6f:	mov    DWORD PTR ds:0x4291af,0x18
  420f79:	cmp    DWORD PTR ds:0x4291af,0x0
  420f80:	je     0x420fd1
  420f86:	cmp    DWORD PTR ds:0x4291af,0x4
  420f8d:	ja     0x420fd1
  420f93:	jmp    0x420fa3
  420f98:	push   0x82c1
  420f9d:	call   DWORD PTR ds:0x42a533
  420fa3:	cmp    DWORD PTR ds:0x4291af,0x5
  420faa:	jne    0x420fbf
  420fb0:	xor    ecx,ecx
  420fb2:	or     ecx,DWORD PTR ds:0x4291af
  420fb8:	dec    ecx
  420fb9:	mov    DWORD PTR ds:0x4291af,ecx
  420fbf:	mov    ecx,DWORD PTR ds:0x4291af
  420fc5:	dec    ecx
  420fc6:	mov    DWORD PTR ds:0x4291af,ecx
  420fcc:	jmp    0x420f79
  420fd1:	mov    eax,ds:0x42818f
  420fd6:	movzx  ecx,BYTE PTR ds:0x429183
  420fdd:	adc    DWORD PTR ds:0x4291d7,ecx
  420fe3:	mov    ecx,DWORD PTR [esp+0x30]
  420fe7:	sub    DWORD PTR ds:0x4291ab,0x2768
  420ff1:	sub    eax,ebx
  420ff3:	and    DWORD PTR ds:0x42919f,0x51d9
  420ffd:	xor    eax,edi
  420fff:	mov    DWORD PTR [ecx],eax
  421001:	lea    eax,[esp+0x2c]
  421005:	mov    DWORD PTR [esp+0x6c],eax
  421009:	xor    DWORD PTR ds:0x4291cf,0x6aa
  421013:	lea    eax,[ebp+0x4]
  421016:	sub    DWORD PTR ds:0x42915b,0x4291af
  421020:	mov    DWORD PTR [esp+0x2c],eax
  421024:	lea    eax,[esp+0x78]
  421028:	sub    DWORD PTR ds:0x429153,0x6538
  421032:	push   eax
  421033:	add    DWORD PTR ds:0x4291a3,0x4291f3
  42103d:	push   0x428567
  421042:	call   DWORD PTR ds:0x42a54b
  421048:	mov    DWORD PTR ds:0x4291e3,0x1cd6
  421052:	cmp    eax,0xffffffff
  421055:	mov    DWORD PTR ds:0x4291b7,0x32c8
  42105f:	jne    0x42088a
  421065:	push   0xf
  421067:	lea    eax,[esp+0x44]
  42106b:	xor    DWORD PTR ds:0x429193,0x42919b
  421075:	push   eax
  421076:	push   0x4285bb
  42107b:	adc    DWORD PTR ds:0x429193,0x7895
  421085:	push   0x4285cf
  42108a:	push   0x4285ef
  42108f:	call   esi
  421091:	imul   eax,eax,0x300000
  421097:	cmp    eax,0x1b00000
  42109c:	jne    0x42088a
  4210a2:	lea    eax,[esp+0x1b8]
  4210a9:	push   eax
  4210aa:	push   0x42862b
  4210af:	sub    DWORD PTR ds:0x4291bf,0x42918b
  4210b9:	call   DWORD PTR ds:0x42a537
  4210bf:	mov    DWORD PTR ds:0x429187,0x3d95
  4210c9:	cmp    eax,0xffffffff
  4210cc:	mov    DWORD PTR ds:0x42917f,0x79ad
  4210d6:	jne    0x42088a
  4210dc:	lea    eax,[esp+0x78]
  4210e0:	add    DWORD PTR ds:0x42914f,0x6022
  4210ea:	push   eax
  4210eb:	neg    DWORD PTR ds:0x42917f
  4210f1:	push   0x428617
  4210f6:	add    DWORD PTR ds:0x42917b,0x4291e7
  421100:	call   DWORD PTR ds:0x42a54b
  421106:	mov    DWORD PTR ds:0x42916f,0x4f36
  421110:	cmp    eax,0xffffffff
  421113:	mov    DWORD PTR ds:0x429197,0x71f8
  42111d:	jne    0x42088a
  421123:	xor    DWORD PTR ds:0x4291b7,0x540c
  42112d:	push   0xf
  42112f:	or     DWORD PTR ds:0x42914b,0x42916b
  421139:	lea    eax,[esp+0x44]
  42113d:	and    DWORD PTR ds:0x4291ab,0x3361
  421147:	push   eax
  421148:	sub    DWORD PTR ds:0x4291bb,0x5c7b
  421152:	push   0x42866b
  421157:	adc    DWORD PTR ds:0x4291ab,0x4291cf
  421161:	push   0x42867f
  421166:	xor    DWORD PTR ds:0x429183,0x4291b7
  421170:	push   0x42869f
  421175:	or     DWORD PTR ds:0x4291af,0x4291cf
  42117f:	call   esi
  421181:	imul   eax,eax,0x300000
  421187:	mov    DWORD PTR ds:0x429157,0x112c
  421191:	cmp    eax,0x1b00000
  421196:	jne    0x42088a
  42119c:	or     DWORD PTR ds:0x42914f,0x1a1c
  4211a6:	lea    eax,[esp+0x1b8]
  4211ad:	push   eax
  4211ae:	sub    DWORD PTR ds:0x4291eb,0xb4e
  4211b8:	push   0x4286db
  4211bd:	not    DWORD PTR ds:0x429153
  4211c3:	call   DWORD PTR ds:0x42a537
  4211c9:	mov    DWORD PTR ds:0x4291d7,0x34b9
  4211d3:	cmp    eax,0xffffffff
  4211d6:	mov    DWORD PTR ds:0x4291bb,0x68d6
  4211e0:	jne    0x42088a
  4211e6:	lea    eax,[esp+0x78]
  4211ea:	push   eax
  4211eb:	sub    DWORD PTR ds:0x4291a7,0x429183
  4211f5:	push   0x4286c7
  4211fa:	sub    DWORD PTR ds:0x42919f,0xfe
  421204:	call   DWORD PTR ds:0x42a54b
  42120a:	mov    DWORD PTR ds:0x4291a3,0x162e
  421214:	cmp    eax,0xffffffff
  421217:	jne    0x42088a
  42121d:	add    DWORD PTR ds:0x42918f,0x39d
  421227:	push   0xf
  421229:	lea    eax,[esp+0x44]
  42122d:	push   eax
  42122e:	sbb    DWORD PTR ds:0x4291df,0x4c8c
  421238:	push   0x42871b
  42123d:	push   0x42872f
  421242:	push   0x42874f
  421247:	call   esi
  421249:	sub    DWORD PTR ds:0x42914f,0x429163
  421253:	imul   eax,eax,0x300000
  421259:	mov    DWORD PTR ds:0x42918b,0x5962
  421263:	cmp    eax,0x1b00000
  421268:	jne    0x42088a
  42126e:	add    DWORD PTR ds:0x4291a3,0x4291cb
  421278:	lea    eax,[esp+0x1b8]
  42127f:	or     DWORD PTR ds:0x4291ab,0x4619
  421289:	push   eax
  42128a:	push   0x42878b
  42128f:	and    DWORD PTR ds:0x42916f,0x4291ef
  421299:	call   DWORD PTR ds:0x42a537
  42129f:	mov    DWORD PTR ds:0x4291ef,0x2004
  4212a9:	cmp    eax,0xffffffff
  4212ac:	mov    DWORD PTR ds:0x42918b,0x62c6
  4212b6:	jne    0x42088a
  4212bc:	and    DWORD PTR ds:0x4291d3,0x5eb4
  4212c6:	lea    eax,[esp+0x78]
  4212ca:	adc    DWORD PTR ds:0x42917f,0x4918
  4212d4:	push   eax
  4212d5:	or     DWORD PTR ds:0x42919b,0x429153
  4212df:	push   0x428777
  4212e4:	sbb    DWORD PTR ds:0x429197,0x429157
  4212ee:	call   DWORD PTR ds:0x42a54b
  4212f4:	mov    DWORD PTR ds:0x42914f,0x13e7
  4212fe:	cmp    eax,0xffffffff
  421301:	mov    DWORD PTR ds:0x4291cf,0xa62
  42130b:	jne    0x42088a
  421311:	xor    DWORD PTR ds:0x42915b,0x4291bb
  42131b:	push   0xf
  42131d:	lea    eax,[esp+0x44]
  421321:	or     DWORD PTR ds:0x4291b3,0x2cef
  42132b:	push   eax
  42132c:	push   0x4287cb
  421331:	push   0x4287df
  421336:	sub    DWORD PTR ds:0x4291a3,0x42918f
  421340:	push   0x4287ff
  421345:	call   esi
  421347:	imul   eax,eax,0x300000
  42134d:	mov    DWORD PTR ds:0x429193,0x43ec
  421357:	cmp    eax,0x1b00000
  42135c:	mov    DWORD PTR ds:0x4291c7,0x18cb
  421366:	jne    0x42088a
  42136c:	add    DWORD PTR ds:0x4291af,0x5057
  421376:	lea    eax,[esp+0x1b8]
  42137d:	or     DWORD PTR ds:0x4291c3,0x48df
  421387:	push   eax
  421388:	and    DWORD PTR ds:0x4291e3,0x7c0c
  421392:	push   0x42883b
  421397:	and    DWORD PTR ds:0x4291f7,0x4291d7
  4213a1:	call   DWORD PTR ds:0x42a537
  4213a7:	cmp    eax,0xffffffff
  4213aa:	jne    0x42088a
  4213b0:	or     DWORD PTR ds:0x4291cb,0x5541
  4213ba:	lea    eax,[esp+0x78]
  4213be:	sub    DWORD PTR ds:0x4291f7,0x686a
  4213c8:	push   eax
  4213c9:	xor    DWORD PTR ds:0x4291ef,0x4291eb
  4213d3:	push   0x428827
  4213d8:	add    DWORD PTR ds:0x4291bb,0x4894
  4213e2:	call   DWORD PTR ds:0x42a54b
  4213e8:	mov    DWORD PTR ds:0x42914b,0x5d36
  4213f2:	cmp    eax,0xffffffff
  4213f5:	mov    DWORD PTR ds:0x42918b,0x63d2
  4213ff:	jne    0x42088a
  421405:	adc    DWORD PTR ds:0x4291d3,0x6d
  42140f:	push   0xf
  421411:	xor    DWORD PTR ds:0x4291df,0x4291b3
  42141b:	lea    eax,[esp+0x44]
  42141f:	xor    DWORD PTR ds:0x42914f,0x245a
  421429:	push   eax
  42142a:	adc    DWORD PTR ds:0x42915f,0x29d1
  421434:	push   0x42887b
  421439:	push   0x42888f
  42143e:	sbb    DWORD PTR ds:0x42914f,0x429163
  421448:	push   0x4288af
  42144d:	adc    DWORD PTR ds:0x42917f,0x4291a3
  421457:	call   esi
  421459:	imul   eax,eax,0x300000
  42145f:	cmp    eax,0x1b00000
  421464:	jne    0x42088a
  42146a:	mov    DWORD PTR ds:0x4291cf,0x5dc8
  421474:	lea    eax,[esp+0x1b8]
  42147b:	add    DWORD PTR ds:0x42919b,0x4291ab
  421485:	push   eax
  421486:	not    DWORD PTR ds:0x429153
  42148c:	push   0x4288eb
  421491:	call   DWORD PTR ds:0x42a537
  421497:	mov    DWORD PTR ds:0x4291e7,0x183e
  4214a1:	cmp    eax,0xffffffff
  4214a4:	jne    0x42088a
  4214aa:	lea    eax,[esp+0x78]
  4214ae:	xor    DWORD PTR ds:0x4291d7,0x57b8
  4214b8:	push   eax
  4214b9:	push   0x4288d7
  4214be:	add    DWORD PTR ds:0x4291af,0x1e81
  4214c8:	call   DWORD PTR ds:0x42a54b
  4214ce:	mov    DWORD PTR ds:0x4291c3,0x328a
  4214d8:	cmp    eax,0xffffffff
  4214db:	mov    DWORD PTR ds:0x4291f7,0x13f0
  4214e5:	jne    0x42088a
  4214eb:	push   0xf
  4214ed:	lea    eax,[esp+0x44]
  4214f1:	adc    DWORD PTR ds:0x4291c3,0x429173
  4214fb:	push   eax
  4214fc:	xor    DWORD PTR ds:0x4291cf,0x725b
  421506:	push   0x42892b
  42150b:	adc    DWORD PTR ds:0x4291bb,0x39d7
  421515:	push   0x42893f
  42151a:	xor    DWORD PTR ds:0x42918b,0x4291a7
  421524:	push   0x42895f
  421529:	call   esi
  42152b:	adc    DWORD PTR ds:0x4291ab,0x4291f7
  421535:	imul   eax,eax,0x300000
  42153b:	mov    DWORD PTR ds:0x4291cf,0x3d0e
  421545:	cmp    eax,0x1b00000
  42154a:	jne    0x42088a
  421550:	lea    eax,[esp+0x1b8]
  421557:	xor    DWORD PTR ds:0x429197,0x42919f
  421561:	push   eax
  421562:	push   0x42899b
  421567:	or     DWORD PTR ds:0x42915b,0x3d87
  421571:	call   DWORD PTR ds:0x42a537
  421577:	mov    DWORD PTR ds:0x4291bf,0x3132
  421581:	cmp    eax,0xffffffff
  421584:	jne    0x42088a
  42158a:	add    DWORD PTR ds:0x4291df,0x6129
  421594:	lea    eax,[esp+0x78]
  421598:	mov    DWORD PTR ds:0x42915b,0x7683
  4215a2:	push   eax
  4215a3:	push   0x428987
  4215a8:	adc    DWORD PTR ds:0x4291d3,0x4f30
  4215b2:	call   DWORD PTR ds:0x42a54b
  4215b8:	mov    DWORD PTR ds:0x42918f,0x2474
  4215c2:	cmp    eax,0xffffffff
  4215c5:	jne    0x42088a
  4215cb:	and    DWORD PTR ds:0x4291c3,0x7c44
  4215d5:	push   0xf
  4215d7:	lea    eax,[esp+0x44]
  4215db:	push   eax
  4215dc:	push   0x4289db
  4215e1:	sub    DWORD PTR ds:0x42914f,0x6ca1
  4215eb:	push   0x4289ef
  4215f0:	sbb    DWORD PTR ds:0x42916f,0x4291cf
  4215fa:	push   0x428a0f
  4215ff:	call   esi
  421601:	xor    DWORD PTR ds:0x4291eb,0x4291a3
  42160b:	imul   eax,eax,0x300000
  421611:	mov    DWORD PTR ds:0x4291a7,0x6fd3
  42161b:	cmp    eax,0x1b00000
  421620:	mov    DWORD PTR ds:0x4291f7,0x26fc
  42162a:	jne    0x42088a
  421630:	lea    eax,[esp+0x1b8]
  421637:	push   eax
  421638:	push   0x428a4b
  42163d:	call   DWORD PTR ds:0x42a537
  421643:	cmp    eax,0xffffffff
  421646:	jne    0x42088a
  42164c:	lea    eax,[esp+0x78]
  421650:	push   eax
  421651:	push   0x428a37
  421656:	call   DWORD PTR ds:0x42a54b
  42165c:	cmp    eax,0xffffffff
  42165f:	jne    0x42088a
  421665:	push   0xf
  421667:	lea    eax,[esp+0x44]
  42166b:	push   eax
  42166c:	push   0x428a8b
  421671:	push   0x428a9f
  421676:	push   0x428abf
  42167b:	call   esi
  42167d:	imul   eax,eax,0x300000
  421683:	cmp    eax,0x1b00000
  421688:	jne    0x42088a
  42168e:	lea    eax,[esp+0x1b8]
  421695:	push   eax
  421696:	push   0x428afb
  42169b:	call   DWORD PTR ds:0x42a537
  4216a1:	cmp    eax,0xffffffff
  4216a4:	jne    0x42088a
  4216aa:	lea    eax,[esp+0x78]
  4216ae:	push   eax
  4216af:	push   0x428ae7
  4216b4:	call   DWORD PTR ds:0x42a54b
  4216ba:	cmp    eax,0xffffffff
  4216bd:	jne    0x42088a
  4216c3:	push   0xf
  4216c5:	lea    eax,[esp+0x44]
  4216c9:	push   eax
  4216ca:	push   0x428b3b
  4216cf:	push   0x428b4f
  4216d4:	push   0x428b6f
  4216d9:	call   esi
  4216db:	imul   eax,eax,0x300000
  4216e1:	cmp    eax,0x1b00000
  4216e6:	jne    0x42088a
  4216ec:	lea    eax,[esp+0x1b8]
  4216f3:	push   eax
  4216f4:	push   0x428bab
  4216f9:	call   DWORD PTR ds:0x42a537
  4216ff:	cmp    eax,0xffffffff
  421702:	jne    0x42088a
  421708:	lea    eax,[esp+0x78]
  42170c:	push   eax
  42170d:	push   0x428b97
  421712:	call   DWORD PTR ds:0x42a54b
  421718:	cmp    eax,0xffffffff
  42171b:	jne    0x42088a
  421721:	push   0xf
  421723:	lea    eax,[esp+0x44]
  421727:	push   eax
  421728:	push   0x428beb
  42172d:	push   0x428bff
  421732:	push   0x428c1f
  421737:	call   esi
  421739:	imul   eax,eax,0x300000
  42173f:	cmp    eax,0x1b00000
  421744:	jne    0x42088a
  42174a:	lea    eax,[esp+0x1b8]
  421751:	push   eax
  421752:	push   0x428c5b
  421757:	call   DWORD PTR ds:0x42a537
  42175d:	cmp    eax,0xffffffff
  421760:	jne    0x42088a
  421766:	lea    eax,[esp+0x78]
  42176a:	push   eax
  42176b:	push   0x428c47
  421770:	call   DWORD PTR ds:0x42a54b
  421776:	cmp    eax,0xffffffff
  421779:	jne    0x42088a
  42177f:	push   0xf
  421781:	lea    eax,[esp+0x44]
  421785:	push   eax
  421786:	push   0x428c9b
  42178b:	push   0x428caf
  421790:	push   0x428ccf
  421795:	call   esi
  421797:	imul   eax,eax,0x300000
  42179d:	cmp    eax,0x1b00000
  4217a2:	jne    0x42088a
  4217a8:	lea    eax,[esp+0x1b8]
  4217af:	push   eax
  4217b0:	push   0x428d0b
  4217b5:	call   DWORD PTR ds:0x42a537
  4217bb:	cmp    eax,0xffffffff
  4217be:	jne    0x42088a
  4217c4:	lea    eax,[esp+0x78]
  4217c8:	push   eax
  4217c9:	push   0x428cf7
  4217ce:	call   DWORD PTR ds:0x42a54b
  4217d4:	cmp    eax,0xffffffff
  4217d7:	jne    0x42088a
  4217dd:	push   0xf
  4217df:	lea    eax,[esp+0x44]
  4217e3:	push   eax
  4217e4:	push   0x428d4b
  4217e9:	push   0x428d5f
  4217ee:	push   0x428d7f
  4217f3:	call   esi
  4217f5:	imul   eax,eax,0x300000
  4217fb:	cmp    eax,0x1b00000
  421800:	jne    0x42088a
  421806:	lea    eax,[esp+0x1b8]
  42180d:	push   eax
  42180e:	push   0x428dbb
  421813:	call   DWORD PTR ds:0x42a537
  421819:	cmp    eax,0xffffffff
  42181c:	jne    0x42088a
  421822:	mov    eax,DWORD PTR [esp+0x3c]
  421826:	cmp    eax,0xf89c85a2
  42182b:	je     0x42188a
  421831:	mov    eax,DWORD PTR [esp+0x18]
  421835:	mov    ecx,DWORD PTR [esp+0x38]
  421839:	xor    eax,edi
  42183b:	add    eax,ebx
  42183d:	cmp    eax,ecx
  42183f:	je     0x42188a
  421845:	mov    eax,ds:0x42830b
  42184a:	mov    eax,DWORD PTR [eax+0x194]
  421850:	mov    ecx,DWORD PTR [eax]
  421852:	mov    eax,DWORD PTR [ecx+0x3c]
  421855:	push   DWORD PTR ds:0x4283eb
  42185b:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  42185f:	push   DWORD PTR ds:0x42818f
  421865:	add    eax,ecx
  421867:	mov    ecx,DWORD PTR ds:0x42830b
  42186d:	mov    ecx,DWORD PTR [ecx+0x194]
  421873:	push   DWORD PTR [ecx]
  421875:	call   eax
  421877:	mov    ecx,DWORD PTR ds:0x42830b
  42187d:	mov    ecx,DWORD PTR [ecx+0x1cc]
  421883:	mov    DWORD PTR [ecx],eax
  421885:	jmp    0x421ab7
  42188a:	mov    eax,DWORD PTR [esp+0x18]
  42188e:	mov    ecx,DWORD PTR [esp+0x60]
  421892:	xor    eax,edi
  421894:	add    eax,ebx
  421896:	cmp    eax,ecx
  421898:	jne    0x421901
  42189e:	mov    eax,DWORD PTR [esp+0x18]
  4218a2:	mov    ecx,DWORD PTR ds:0x42830b
  4218a8:	mov    ecx,DWORD PTR [ecx+0x198]
  4218ae:	xor    eax,edi
  4218b0:	add    eax,ebx
  4218b2:	cmp    eax,DWORD PTR [ecx]
  4218b4:	jne    0x4218da
  4218ba:	mov    eax,DWORD PTR [esp+0x18]
  4218be:	push   0xf89c85a1
  4218c3:	xor    eax,edi
  4218c5:	add    eax,ebx
  4218c7:	push   eax
  4218c8:	push   0xf89c85bd
  4218cd:	push   DWORD PTR [esp+0x18]
  4218d1:	push   DWORD PTR [esp+0x28]
  4218d5:	call   0x41b9fd
  4218da:	push   DWORD PTR [esp+0xc]
  4218de:	push   DWORD PTR [esp+0x1c]
  4218e2:	call   0x401000
  4218e7:	mov    eax,DWORD PTR [esp+0x18]
  4218eb:	xor    eax,edi
  4218ed:	add    eax,ebx
  4218ef:	mov    ds:0x428397,eax
  4218f4:	mov    eax,DWORD PTR [esp+0x18]
  4218f8:	xor    eax,edi
  4218fa:	add    eax,ebx
  4218fc:	mov    ds:0x42838f,eax
  421901:	mov    eax,DWORD PTR [esp+0x2c]
  421905:	test   eax,eax
  421907:	je     0x421ab7
  42190d:	lea    eax,[esp+0x78]
  421911:	mov    DWORD PTR [esp+0x64],0xf152c3a
  421919:	push   eax
  42191a:	mov    DWORD PTR [esp+0x78],0x712ed2f
  421922:	mov    DWORD PTR [esp+0x74],0x373fc09
  42192a:	push   0x428da7
  42192f:	mov    DWORD PTR [esp+0x70],0x72670ad9
  421937:	call   DWORD PTR ds:0x42a54b
  42193d:	cmp    eax,0xffffffff
  421940:	jne    0x42088a
  421946:	push   0xf
  421948:	lea    eax,[esp+0x44]
  42194c:	push   eax
  42194d:	push   0x428dfb
  421952:	push   0x428e0f
  421957:	push   0x428e2f
  42195c:	call   esi
  42195e:	imul   eax,eax,0x300000
  421964:	cmp    eax,0x1b00000
  421969:	jne    0x42088a
  42196f:	lea    eax,[esp+0x1b8]
  421976:	push   eax
  421977:	push   0x428e6b
  42197c:	call   DWORD PTR ds:0x42a537
  421982:	cmp    eax,0xffffffff
  421985:	jne    0x42088a
  42198b:	call   0x41b69e
  421990:	mov    eax,DWORD PTR [esp+0x34]
  421994:	mov    eax,DWORD PTR [esp+0xc]
  421998:	mov    DWORD PTR [esp+0x30],eax
  42199c:	mov    eax,DWORD PTR [esp+0x18]
  4219a0:	mov    DWORD PTR [esp+0xc],eax
  4219a4:	mov    eax,eax
  4219a6:	mov    eax,ds:0x42830b
  4219ab:	mov    ecx,DWORD PTR [eax+0x1c0]
  4219b1:	mov    edx,DWORD PTR [ecx]
  4219b3:	and    DWORD PTR [esp+0x14],0x0
  4219b8:	mov    esi,0xfabdbed6
  4219bd:	add    edx,esi
  4219bf:	adc    DWORD PTR [esp+0x14],0xffffffff
  4219c4:	mov    ecx,0x8a29a13f
  4219c9:	xor    edx,ecx
  4219cb:	mov    DWORD PTR [esp+0x20],edx
  4219cf:	mov    edx,DWORD PTR [esp+0x14]
  4219d3:	xor    edx,0x0
  4219d6:	cmp    DWORD PTR [esp+0x20],0x70941fe8
  4219de:	mov    DWORD PTR [esp+0x24],edx
  4219e2:	jne    0x4219f1
  4219e8:	cmp    edx,0xffffffff
  4219eb:	je     0x421a5a
  4219f1:	mov    eax,DWORD PTR [eax+0x1c8]
  4219f7:	mov    eax,DWORD PTR [eax]
  4219f9:	cdq    
  4219fa:	add    eax,esi
  4219fc:	adc    edx,0xffffffff
  4219ff:	and    DWORD PTR [esp+0x14],0x0
  421a04:	xor    edx,0x0
  421a07:	mov    DWORD PTR [esp+0x1c],edx
  421a0b:	mov    edx,DWORD PTR [esp+0xc]
  421a0f:	mov    DWORD PTR [esp+0x10],edx
  421a13:	xor    eax,ecx
  421a15:	add    DWORD PTR [esp+0x10],esi
  421a19:	mov    edx,DWORD PTR [esp+0x10]
  421a1d:	adc    DWORD PTR [esp+0x14],0xffffffff
  421a22:	xor    edx,ecx
  421a24:	mov    DWORD PTR [esp+0x20],edx
  421a28:	mov    edx,DWORD PTR [esp+0x14]
  421a2c:	xor    edx,0x0
  421a2f:	mov    DWORD PTR [esp+0x24],edx
  421a33:	cmp    DWORD PTR [esp+0x20],eax
  421a37:	jne    0x421a49
  421a3d:	mov    eax,DWORD PTR [esp+0x1c]
  421a41:	cmp    edx,eax
  421a43:	je     0x421a5a
  421a49:	mov    eax,DWORD PTR [esp+0xc]
  421a4d:	add    eax,DWORD PTR [esp+0x30]
  421a51:	mov    DWORD PTR [esp+0xc],eax
  421a55:	jmp    0x421ab7
  421a5a:	mov    eax,ds:0x42838f
  421a5f:	mov    edx,DWORD PTR ds:0x428397
  421a65:	xor    eax,edx
  421a67:	mov    ds:0x42838f,eax
  421a6c:	mov    edx,DWORD PTR ds:0x42838f
  421a72:	mov    eax,DWORD PTR [esp+0x2c]
  421a76:	add    DWORD PTR [eax],edx
  421a78:	mov    edx,DWORD PTR [esp+0xc]
  421a7c:	mov    eax,ds:0x42838f
  421a81:	xor    edx,edi
  421a83:	add    edx,ebx
  421a85:	xor    ebx,ebx
  421a87:	add    edx,esi
  421a89:	adc    ebx,0xffffffff
  421a8c:	xor    edi,edi
  421a8e:	xor    edx,ecx
  421a90:	xor    ebx,0x0
  421a93:	add    eax,esi
  421a95:	adc    edi,0xffffffff
  421a98:	xor    eax,ecx
  421a9a:	xor    edi,0x0
  421a9d:	cmp    eax,edx
  421a9f:	jne    0x421ab7
  421aa5:	cmp    edi,ebx
  421aa7:	jne    0x421ab7
  421aad:	mov    eax,ds:0x42838f
  421ab2:	mov    ds:0x428397,eax
  421ab7:	lea    eax,[esp+0x78]
  421abb:	push   eax
  421abc:	push   0x428e57
  421ac1:	call   DWORD PTR ds:0x42a54b
  421ac7:	cmp    eax,0xffffffff
  421aca:	jne    0x42088a
  421ad0:	push   0xf
  421ad2:	lea    eax,[esp+0x44]
  421ad6:	push   eax
  421ad7:	push   0x428eab
  421adc:	push   0x428ebf
  421ae1:	push   0x428edf
  421ae6:	call   DWORD PTR ds:0x42a567
  421aec:	imul   eax,eax,0x300000
  421af2:	cmp    eax,0x1b00000
  421af7:	jne    0x42088a
  421afd:	lea    eax,[esp+0x1b8]
  421b04:	push   eax
  421b05:	push   0x428f0b
  421b0a:	call   DWORD PTR ds:0x42a537
  421b10:	cmp    eax,0xffffffff
  421b13:	jne    0x42088a
  421b19:	mov    eax,ds:0x42830b
  421b1e:	push   0x4
  421b20:	add    eax,0x1cc
  421b25:	push   eax
  421b26:	lea    eax,[esp+0x3c]
  421b2a:	push   eax
  421b2b:	call   0x421b3f
  421b30:	mov    eax,DWORD PTR [esp+0x34]
  421b34:	mov    eax,DWORD PTR [eax]
  421b36:	pop    edi
  421b37:	pop    esi
  421b38:	pop    ebx
  421b39:	mov    esp,ebp
  421b3b:	pop    ebp
  421b3c:	ret    0xc
  421b3f:	push   ebp
  421b40:	mov    ebp,esp
  421b42:	sub    esp,0x10
  421b45:	sub    DWORD PTR ds:0x429153,ebx
  421b4b:	mov    eax,0xf89c85a1
  421b50:	and    ecx,DWORD PTR ds:0x42914b
  421b56:	mov    DWORD PTR [ebp-0x4],eax
  421b59:	and    DWORD PTR ds:0x429167,0x0
  421b63:	jmp    0x421b75
  421b68:	mov    edx,DWORD PTR ds:0x429167
  421b6e:	inc    edx
  421b6f:	mov    DWORD PTR ds:0x429167,edx
  421b75:	cmp    DWORD PTR ds:0x429167,0x1c
  421b7c:	jae    0x421bcb
  421b82:	cmp    DWORD PTR ds:0x429167,0xc
  421b89:	jge    0x421bcb
  421b8f:	jmp    0x421bac
  421b94:	push   DWORD PTR [ebp-0x28]
  421b97:	push   0x428152
  421b9c:	push   0x42810e
  421ba1:	push   0x400000
  421ba6:	call   DWORD PTR ds:0x42a53b
  421bac:	cmp    DWORD PTR ds:0x429167,0xb
  421bb3:	jne    0x421bc6
  421bb9:	mov    edx,DWORD PTR ds:0x429167
  421bbf:	inc    edx
  421bc0:	mov    DWORD PTR ds:0x429167,edx
  421bc6:	jmp    0x421b68
  421bcb:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  421bd2:	or     edx,0x5b7d
  421bd8:	mov    ecx,DWORD PTR [ebp-0x4]
  421bdb:	push   esi
  421bdc:	mov    DWORD PTR ds:0x42918b,0x1a
  421be6:	cmp    DWORD PTR ds:0x42918b,0x0
  421bed:	je     0x421c25
  421bf3:	cmp    DWORD PTR ds:0x42918b,0x26
  421bfa:	ja     0x421c25
  421c00:	jmp    0x421c13
  421c05:	push   0x4386
  421c0a:	push   DWORD PTR [ebp-0x14]
  421c0d:	call   DWORD PTR ds:0x42a53f
  421c13:	mov    edx,DWORD PTR ds:0x42918b
  421c19:	dec    edx
  421c1a:	mov    DWORD PTR ds:0x42918b,edx
  421c20:	jmp    0x421be6
  421c25:	mov    edx,0x75108ac
  421c2a:	xor    ecx,edx
  421c2c:	mov    esi,0x3272f3
  421c31:	push   edi
  421c32:	mov    edi,DWORD PTR [ebp+0x10]
  421c35:	add    ecx,esi
  421c37:	cmp    ecx,edi
  421c39:	mov    DWORD PTR ds:0x42916f,0x60ec
  421c43:	je     0x42414b
  421c49:	movzx  ecx,WORD PTR ds:0x4291f7
  421c50:	adc    DWORD PTR ds:0x4291cf,ecx
  421c56:	mov    ecx,DWORD PTR [ebp-0x4]
  421c59:	mov    edi,DWORD PTR [ebp+0x10]
  421c5c:	inc    DWORD PTR ds:0x4291d3
  421c62:	xor    eax,eax
  421c64:	and    DWORD PTR ds:0x4291b7,0x2b27
  421c6e:	xor    ecx,edx
  421c70:	add    ecx,esi
  421c72:	add    DWORD PTR ds:0x42914b,0x714
  421c7c:	add    edi,0xfabdbed6
  421c82:	mov    DWORD PTR ds:0x429173,0x79de
  421c8c:	adc    eax,0xffffffff
  421c8f:	or     DWORD PTR ds:0x4291b3,0x42917f
  421c99:	xor    eax,0x0
  421c9c:	adc    DWORD PTR ds:0x4291e7,0x4ab7
  421ca6:	mov    DWORD PTR [ebp-0xc],eax
  421ca9:	mov    DWORD PTR ds:0x42914b,0x1e
  421cb3:	cmp    DWORD PTR ds:0x42914b,0x0
  421cba:	je     0x421d0b
  421cc0:	cmp    DWORD PTR ds:0x42914b,0x8
  421cc7:	jge    0x421d0b
  421ccd:	jmp    0x421cdd
  421cd2:	push   0x4291eb
  421cd7:	call   DWORD PTR ds:0x42a543
  421cdd:	cmp    DWORD PTR ds:0x42914b,0x9
  421ce4:	jne    0x421cf8
  421cea:	xor    eax,eax
  421cec:	add    eax,DWORD PTR ds:0x42914b
  421cf2:	dec    eax
  421cf3:	mov    ds:0x42914b,eax
  421cf8:	xor    eax,eax
  421cfa:	xor    eax,DWORD PTR ds:0x42914b
  421d00:	dec    eax
  421d01:	mov    ds:0x42914b,eax
  421d06:	jmp    0x421cb3
  421d0b:	push   ebx
  421d0c:	xor    ebx,ebx
  421d0e:	xor    edi,0x8a29a13f
  421d14:	mov    eax,ecx
  421d16:	add    eax,0xfabdbed6
  421d1b:	adc    ebx,0xffffffff
  421d1e:	xor    eax,0x8a29a13f
  421d23:	xor    ebx,0x0
  421d26:	cmp    eax,edi
  421d28:	jne    0x421d41
  421d2e:	cmp    ebx,DWORD PTR [ebp-0xc]
  421d31:	je     0x424145
  421d37:	jmp    0x421d41
  421d3c:	mov    esi,0x3272f3
  421d41:	mov    eax,DWORD PTR [ebp-0x4]
  421d44:	mov    edi,DWORD PTR [ebp-0x8]
  421d47:	xor    edi,edx
  421d49:	add    edi,esi
  421d4b:	mov    esi,DWORD PTR [ebp+0x8]
  421d4e:	imul   edi,ecx
  421d51:	mov    ebx,DWORD PTR [ebp+0xc]
  421d54:	xor    eax,edx
  421d56:	add    eax,ecx
  421d58:	mov    al,BYTE PTR [ebx+eax*1+0x3272f3]
  421d5f:	mov    BYTE PTR [edi+esi*1],al
  421d62:	mov    eax,DWORD PTR [ebp-0x8]
  421d65:	mov    esi,DWORD PTR [ebp+0x10]
  421d68:	xor    eax,edx
  421d6a:	xor    ebx,ebx
  421d6c:	add    esi,0xfabdbed6
  421d72:	adc    ebx,0xffffffff
  421d75:	lea    ecx,[ecx+eax*1+0x3272f3]
  421d7c:	xor    edi,edi
  421d7e:	xor    esi,0x8a29a13f
  421d84:	xor    ebx,0x0
  421d87:	mov    eax,ecx
  421d89:	add    eax,0xfabdbed6
  421d8e:	adc    edi,0xffffffff
  421d91:	xor    eax,0x8a29a13f
  421d96:	xor    edi,0x0
  421d99:	cmp    eax,esi
  421d9b:	jne    0x421d3c
  421da1:	cmp    edi,ebx
  421da3:	jne    0x421d3c
  421da9:	jmp    0x424145
  421dae:	sbb    ah,bl
  421db0:	cmp    ch,BYTE PTR [edi-0x46]
  421db3:	xchg   BYTE PTR [esi],al
  421db5:	xchg   BYTE PTR [edx-0x68],bl
  421db8:	dec    esi
  421db9:	push   esp
  421dba:	outs   dx,BYTE PTR ds:[esi]
  421dbb:	push   0xb16f2cef
  421dc0:	add    BYTE PTR [ebx-0x7c7ca400],0x7b
  421dc7:	scas   eax,DWORD PTR es:[edi]
  421dc8:	mov    dl,0xc
  421dca:	mov    dh,BYTE PTR [edx]
  421dcc:	loope  0x421d78
  421dce:	retf   0xc770
  421dd1:	jmp    0x421e01
  421dd3:	in     eax,0x24
  421dd5:	dec    edi
  421dd6:	nop
  421dd7:	sbb    DWORD PTR [ebx+0x77],0xffffff8e
  421ddb:	pop    esp
  421ddc:	fdivp  st(6),st
  421dde:	push   ecx
  421ddf:	arpl   WORD PTR [ecx+0x7f277af1],sp
  421de5:	das    
  421de6:	or     al,0xe4
  421de8:	cli    
  421de9:	dec    esp
  421dea:	fidiv  DWORD PTR [ebp-0x7ee00654]
  421df0:	cmc    
  421df1:	adc    eax,DWORD PTR [esi]
  421df3:	push   esi
  421df4:	mov    bl,BYTE PTR [esi-0x71f87bcb]
  421dfa:	ss or  eax,0xe19e16d2
  421e00:	dec    edx
  421e01:	sub    al,0xbe
  421e03:	push   esi
  421e04:	mov    WORD PTR [esi+0x5dc4f851],fs
  421e0a:	cmp    eax,0xb0993cb3
  421e0f:	pop    ecx
  421e10:	mov    edi,0x3c9367a4
  421e15:	lea    ebx,[esi]
  421e17:	pop    esp
  421e18:	pop    ss
  421e19:	ss ds dec ebx
  421e1c:	cmp    eax,0x9c97b7c5
  421e21:	xchg   edx,eax
  421e22:	and    dl,BYTE PTR [ebx+0x44ce25da]
  421e28:	popa   
  421e29:	adc    BYTE PTR [eax+0x4f],0x2e
  421e2d:	adc    eax,DWORD PTR [edi+0x37]
  421e30:	adc    cl,dl
  421e32:	pop    edx
  421e33:	pop    es
  421e34:	out    0x39,eax
  421e36:	loope  0x421dee
  421e38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e39:	out    dx,al
  421e3a:	sar    BYTE PTR [ebx+esi*2-0x15215fa8],1
  421e41:	addr16 (bad) 
  421e43:	imul   esi,esi,0xb
  421e46:	je     0x421e14
  421e48:	iret   
  421e49:	and    DWORD PTR [edx],ecx
  421e4b:	rol    edi,cl
  421e4d:	rol    BYTE PTR [edi+0x25237379],cl
  421e53:	and    eax,0x3bdc707
  421e58:	add    eax,0xabce2d15
  421e5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e5e:	mov    eax,0xd73449b2
  421e63:	addr16 inc ebx
  421e65:	mov    ebp,0xd54716e1
  421e6a:	or     BYTE PTR [ecx-0x38994cee],al
  421e70:	sbb    eax,0xdf2d21b
  421e75:	pusha  
  421e76:	xor    DWORD PTR [ecx],ebp
  421e78:	ja     0x421e29
  421e7a:	mov    ebx,0x4c4eda48
  421e7f:	push   edx
  421e80:	out    0xb5,al
  421e82:	sti    
  421e83:	pop    edi
  421e84:	mov    al,0xee
  421e86:	ins    DWORD PTR es:[edi],dx
  421e87:	sbb    ebx,ebx
  421e89:	out    0xae,eax
  421e8b:	push   edi
  421e8c:	pop    es
  421e8d:	test   BYTE PTR [edi+edi*2+0xb3b533b],al
  421e94:	mov    al,ds:0x7ac47e3a
  421e99:	out    0x5a,al
  421e9b:	ss (bad) 
  421e9d:	pop    edx
  421e9e:	outs   dx,BYTE PTR ds:[esi]
  421e9f:	and    eax,ebp
  421ea1:	(bad)  
  421ea3:	xchg   ebp,eax
  421ea4:	ins    BYTE PTR es:[edi],dx
  421ea5:	or     DWORD PTR [eax+0x4e],esp
  421ea8:	or     DWORD PTR [edx-0x50],0x63
  421eac:	dec    esi
  421ead:	jb     0x421e86
  421eaf:	and    WORD PTR [edi],dx
  421eb2:	push   ds
  421eb3:	sub    bh,0xa6
  421eb6:	xchg   ebx,eax
  421eb7:	xchg   ebx,eax
  421eb8:	dec    ecx
  421eb9:	leave  
  421eba:	ror    BYTE PTR [esi*2-0x2ea6e410],cl
  421ec1:	sub    DWORD PTR [eax+0x61],edi
  421ec4:	ins    BYTE PTR es:[edi],dx
  421ec5:	pop    edx
  421ec6:	mov    bl,0x93
  421ec8:	int3   
  421ec9:	add    al,0x15
  421ecb:	and    BYTE PTR [edx],dl
  421ecd:	aad    0xd5
  421ecf:	vpaddd ymm4,ymm7,YMMWORD PTR [ecx-0x33]
  421ed4:	cld    
  421ed5:	es clc 
  421ed7:	(bad)  
  421ed8:	sbb    al,0xdd
  421eda:	daa    
  421edb:	test   eax,0xe3f3fc1d
  421ee0:	or     esp,eax
  421ee2:	mov    ds:0xaf164969,al
  421ee7:	and    dh,BYTE PTR [ebx-0x19]
  421eea:	ret    0xfddb
  421eed:	xor    edi,DWORD PTR [eax+ecx*1+0x61e864e6]
  421ef4:	dec    esp
  421ef6:	inc    eax
  421ef7:	mov    ecx,0x308d3f6b
  421efc:	cmp    ebp,ebp
  421efe:	aam    0x3d
  421f00:	out    0xa7,eax
  421f02:	add    edx,ebx
  421f04:	loope  0x421ee3
  421f06:	(bad)  
  421f07:	(bad)  
  421f08:	xor    eax,DWORD PTR ds:0x790d56d
  421f0e:	xor    eax,0xde914dad
  421f13:	mov    ds:0x3fc22fb7,al
  421f18:	outs   dx,DWORD PTR ds:[esi]
  421f19:	int3   
  421f1a:	jno    0x421f6d
  421f1c:	pop    edx
  421f1d:	and    DWORD PTR [edi],eax
  421f1f:	scas   al,BYTE PTR es:[edi]
  421f20:	idiv   esp
  421f22:	or     BYTE PTR [edi],bh
  421f24:	popf   
  421f25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f26:	xchg   esp,eax
  421f27:	pop    edi
  421f28:	fld    DWORD PTR [esi+ecx*2+0x517b513b]
  421f2f:	call   0x8b1e0955
  421f34:	mov    ebp,0xb69c9cdc
  421f39:	mov    cl,cl
  421f3b:	arpl   WORD PTR [eax],bp
  421f3d:	aaa    
  421f3e:	cmp    al,0x32
  421f40:	cs xor eax,0x754a4c61
  421f46:	xchg   esi,eax
  421f47:	stc    
  421f48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f49:	add    ecx,edi
  421f4b:	pop    ebp
  421f4c:	xchg   ebp,eax
  421f4d:	mov    BYTE PTR [ecx-0x2f],dh
  421f50:	out    0xce,al
  421f52:	xchg   ebx,eax
  421f53:	sbb    bl,BYTE PTR [ebx+edx*8-0x17]
  421f57:	xchg   ecx,eax
  421f58:	fmul   st,st(3)
  421f5a:	jecxz  0x421f27
  421f5c:	sbb    eax,0x13a1d6df
  421f61:	xchg   edi,eax
  421f62:	inc    esp
  421f63:	lods   eax,DWORD PTR ds:[esi]
  421f64:	rcr    DWORD PTR [esi+0x334fc9a2],cl
  421f6a:	leave  
  421f6b:	sahf   
  421f6c:	arpl   cx,sp
  421f6e:	sti    
  421f6f:	dec    ecx
  421f70:	adc    dl,ah
  421f72:	loop   0x421f4a
  421f74:	sbb    eax,0xefb42b65
  421f79:	inc    esi
  421f7a:	(bad)  
  421f7c:	arpl   WORD PTR [esi-0x6],cx
  421f7f:	mov    edx,DWORD PTR [edx]
  421f81:	push   edx
  421f82:	add    eax,ebx
  421f84:	std    
  421f85:	mov    ah,bh
  421f87:	out    0xc4,al
  421f89:	adc    dh,BYTE PTR [ebp+0x68675522]
  421f8f:	jnp    0x421ff4
  421f91:	test   BYTE PTR [ebp-0x7a78ce90],bh
  421f97:	sbb    esp,edx
  421f99:	aaa    
  421f9a:	inc    esp
  421f9b:	mov    ds:0x34c3e437,eax
  421fa0:	pop    esi
  421fa1:	std    
  421fa2:	cmp    ebx,ebp
  421fa4:	daa    
  421fa5:	ins    DWORD PTR es:[edi],dx
  421fa6:	nop    DWORD PTR [edx-0x10]
  421faa:	mov    bl,0x8b
  421fac:	popf   
  421fad:	aam    0xda
  421faf:	push   ebp
  421fb0:	in     al,dx
  421fb1:	cwde   
  421fb2:	stos   DWORD PTR es:[edi],eax
  421fb3:	dec    ebx
  421fb4:	je     0x422034
  421fb6:	cwde   
  421fb7:	adc    ebx,DWORD PTR [ebx-0x41a59221]
  421fbd:	push   cs
  421fbe:	inc    ecx
  421fbf:	adc    eax,0x9ecf6c1e
  421fc4:	xchg   esp,eax
  421fc5:	test   DWORD PTR [esi-0x70e4ddc3],ebx
  421fcb:	mov    ch,0x3a
  421fcd:	mov    gs,WORD PTR [ebx-0xc]
  421fd0:	test   al,0x73
  421fd2:	pop    es
  421fd3:	popf   
  421fd4:	mov    esi,0x6695f045
  421fd9:	aam    0xb2
  421fdb:	in     eax,0x7c
  421fdd:	dec    eax
  421fde:	push   esi
  421fdf:	pop    fs
  421fe1:	imul   edi,DWORD PTR [esi+esi*8+0x3dc8b973],0x0
  421fe9:	fwait
  421fea:	pusha  
  421feb:	retf   0xcab8
  421fee:	in     eax,0xf1
  421ff0:	cmp    al,0xb1
  421ff2:	mov    cl,cl
  421ff4:	jo     0x421fa3
  421ff6:	mov    ah,0xbc
  421ff8:	push   ebx
  421ff9:	jae    0x42205e
  421ffb:	popa   
  421ffc:	cdq    
  421ffd:	test   eax,0x66f60023
  422002:	sub    ch,BYTE PTR [ecx-0x41]
  422005:	jnp    0x422070
  422007:	popa   
  422008:	xchg   edx,eax
  422009:	pop    ds
  42200a:	daa    
  42200b:	repnz mov bh,BYTE PTR [ebx]
  42200e:	mov    esi,0x20cf1973
  422013:	loop   0x42204f
  422015:	pop    esi
  422016:	or     eax,0x28cf487e
  42201b:	sub    eax,edx
  42201d:	mov    ebp,0xc63a86b
  422022:	mov    ebp,0x59cc83ae
  422027:	les    ebp,FWORD PTR [ebp+0x41048b5d]
  42202d:	fcomp  DWORD PTR [edi+esi*2+0x3823cb71]
  422034:	ss dec ecx
  422036:	adc    eax,0x4b0b06b2
  42203b:	add    eax,0x1a2adabc
  422040:	ss ret 0xfc23
  422044:	test   BYTE PTR [eax-0x52],ah
  422047:	xor    BYTE PTR [ecx+0x3b13d5a4],bl
  42204d:	xlat   BYTE PTR ds:[ebx]
  42204e:	rcl    DWORD PTR [esp+eiz*8],cl
  422051:	jg     0x42204d
  422053:	sbb    edi,edx
  422055:	(bad)  
  422056:	or     ah,BYTE PTR [eax]
  422058:	in     eax,0xac
  42205a:	in     eax,dx
  42205b:	daa    
  42205c:	les    ecx,FWORD PTR [ebp-0x71]
  42205f:	cwde   
  422060:	mov    ds:0x3e7ffae7,al
  422065:	sub    al,0x6
  422067:	dec    esp
  422068:	adc    eax,0xf3d44e9c
  42206d:	cwde   
  42206e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42206f:	cmc    
  422070:	add    al,0x2
  422072:	retf   
  422073:	adc    DWORD PTR [esi],edx
  422075:	out    dx,eax
  422076:	cdq    
  422077:	das    
  422078:	rcl    DWORD PTR [edx-0x3d],1
  42207b:	mov    bh,0x0
  42207d:	out    dx,al
  42207e:	push   es
  42207f:	loope  0x422089
  422081:	lock sub ch,BYTE PTR [edx]
  422084:	cmp    ah,BYTE PTR [ecx]
  422086:	les    ecx,FWORD PTR [ecx+0x56bd3cfc]
  42208c:	xchg   esi,eax
  42208d:	lock loop 0x422048
  422090:	xor    DWORD PTR [eax-0x6c],0x43ad66ef
  422097:	dec    ebx
  422098:	inc    eax
  422099:	mov    ds:0xdfdef475,eax
  42209e:	jge    0x422065
  4220a0:	es into 
  4220a2:	out    0xd1,eax
  4220a4:	cdq    
  4220a5:	lods   al,BYTE PTR ds:[esi]
  4220a6:	mov    eax,0x71cf9fd
  4220ab:	dec    edi
  4220ac:	addr16 cwde 
  4220ae:	test   DWORD PTR [eax+ebp*4],esi
  4220b1:	dec    edx
  4220b2:	fs js  0x42206b
  4220b5:	loope  0x4220ee
  4220b7:	mov    ds:0x69992121,eax
  4220bc:	mov    DWORD PTR [ecx+0x72],ebp
  4220bf:	sub    DWORD PTR [edi+0x7b3a1476],ecx
  4220c5:	and    dl,BYTE PTR [ebx+0x4def23a1]
  4220cb:	adc    dh,BYTE PTR [ebx+edx*8-0x2ca81fcc]
  4220d2:	sti    
  4220d3:	imul   esi,DWORD PTR [edi],0x32c6eaca
  4220d9:	push   es
  4220da:	adc    esi,DWORD PTR [eax-0x4e04ada4]
  4220e0:	into   
  4220e1:	jecxz  0x42209c
  4220e3:	jns    0x42208f
  4220e5:	ret    0x1f0f
  4220e8:	cli    
  4220e9:	inc    edx
  4220ea:	scas   al,BYTE PTR es:[edi]
  4220eb:	xchg   DWORD PTR [ebx],ebx
  4220ed:	adc    ebp,DWORD PTR [ecx+0x1f]
  4220f0:	frstor [eax-0x6b]
  4220f3:	aad    0x2d
  4220f5:	or     dl,dl
  4220f7:	rcl    edx,1
  4220f9:	lahf   
  4220fa:	and    DWORD PTR [esi+0x0],esp
  4220fd:	pmaddwd mm3,QWORD PTR [ecx-0x509da78b]
  422104:	or     eax,0xd6c8f552
  422109:	bound  esi,QWORD PTR [eax]
  42210b:	iret   
  42210c:	cmp    eax,0x9e936261
  422111:	scas   al,BYTE PTR es:[edi]
  422112:	or     dl,BYTE PTR [ecx]
  422114:	mov    dh,0x24
  422116:	push   ebx
  422117:	test   WORD PTR [ebp+0x12],0x36e
  42211d:	jp     0x4220a5
  42211f:	or     esi,DWORD PTR [edx]
  422121:	adc    ah,BYTE PTR [edx+0x47328ae9]
  422127:	stos   BYTE PTR es:[edi],al
  422128:	leave  
  422129:	not    DWORD PTR [edi+0x79]
  42212c:	pop    es
  42212d:	fldcw  WORD PTR [esp+ecx*4+0x10]
  422131:	stos   DWORD PTR es:[edi],eax
  422132:	lahf   
  422133:	mov    WORD PTR [eax+edi*4],ss
  422136:	cmc    
  422137:	xchg   edi,eax
  422138:	push   esp
  422139:	or     esp,esi
  42213b:	or     ecx,DWORD PTR [edx+0x4f]
  42213e:	inc    ebx
  42213f:	cmp    dl,BYTE PTR [ebx]
  422141:	pop    ss
  422142:	rcl    eax,1
  422144:	cwde   
  422145:	gs pop esp
  422147:	pop    ds
  422148:	or     al,BYTE PTR [eax+0x4cfbfb20]
  42214e:	das    
  42214f:	jl     0x4221b9
  422151:	in     eax,0xc0
  422153:	ror    BYTE PTR [ecx+edi*1+0x2cef0606],0xcd
  42215b:	xor    BYTE PTR [ebx+0x684bd244],dh
  422161:	mov    bl,0x6b
  422163:	dec    ebx
  422164:	mov    ah,0xcc
  422166:	ss cmp eax,0xb549cc4f
  42216c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42216d:	iret   
  42216e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42216f:	sbb    ecx,DWORD PTR [edx]
  422171:	imul   ebx,DWORD PTR [ecx-0x16],0xcc42ad39
  422178:	adc    esi,DWORD PTR [ebx+eax*8+0x6f]
  42217c:	cmp    bh,BYTE PTR [eax]
  42217e:	dec    edi
  42217f:	dec    edi
  422180:	and    cl,dh
  422182:	dec    ebp
  422183:	test   eax,0xc7d6a46f
  422188:	pop    ebp
  422189:	add    cl,cl
  42218b:	add    BYTE PTR ds:0x4eeeef84,ch
  422191:	pop    edx
  422192:	xchg   ebx,eax
  422193:	adc    dl,0x5e
  422196:	push   esi
  422197:	push   eax
  422198:	or     bl,BYTE PTR [edx]
  42219a:	adc    ah,al
  42219c:	nop
  42219d:	in     eax,0x56
  42219f:	jp     0x422154
  4221a1:	add    edi,edx
  4221a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221a4:	sbb    edx,esi
  4221a6:	enter  0x7d7a,0x7e
  4221aa:	dec    ebp
  4221ab:	addr16 cdq 
  4221ad:	fxch   st(4)
  4221af:	clc    
  4221b0:	cdq    
  4221b1:	js     0x4221c0
  4221b3:	push   ebx
  4221b4:	push   eax
  4221b5:	sub    DWORD PTR [ecx+edx*8],ecx
  4221b8:	sbb    BYTE PTR ds:0xa66ed8a9,0x92
  4221bf:	xor    ch,BYTE PTR [esi-0x12324e4d]
  4221c5:	addr16 and al,0x7f
  4221c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221c9:	jp     0x422247
  4221cb:	(bad)  
  4221cc:	loop   0x4221b3
  4221ce:	stos   DWORD PTR es:[edi],eax
  4221cf:	pandn  mm5,mm7
  4221d2:	jo     0x42222a
  4221d4:	popf   
  4221d5:	jp     0x42222b
  4221d7:	stos   DWORD PTR es:[edi],eax
  4221d8:	(bad)  
  4221d9:	aaa    
  4221da:	call   0x87b2:0xc04d7b72
  4221e1:	push   edi
  4221e2:	push   ss
  4221e3:	sub    cl,BYTE PTR [ecx+0x48]
  4221e6:	addr16 push ebp
  4221e8:	push   esi
  4221e9:	mov    bl,0xc8
  4221eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221ec:	or     ebp,ebx
  4221ee:	jmp    0x4221d6
  4221f0:	sub    DWORD PTR [eax+edi*8-0x15f9728c],0x55
  4221f8:	sub    ebp,edi
  4221fa:	sti    
  4221fb:	cmp    DWORD PTR [eax],esi
  4221fd:	cli    
  4221fe:	push   esp
  4221ff:	aam    0xc2
  422201:	and    al,0x45
  422203:	iret   
  422204:	sub    ch,BYTE PTR [ecx-0x44]
  422207:	dec    edx
  422208:	not    bh
  42220a:	xchg   esp,eax
  42220b:	dec    ecx
  42220c:	jecxz  0x422223
  42220e:	xchg   esi,eax
  42220f:	add    BYTE PTR [ebx],ah
  422211:	js     0x422275
  422213:	dec    eax
  422214:	and    ch,BYTE PTR [ebx+0x54]
  422217:	push   edi
  422218:	std    
  422219:	add    BYTE PTR [edi],cl
  42221b:	lods   al,BYTE PTR ds:[esi]
  42221c:	xlat   BYTE PTR ds:[ebx]
  42221d:	mov    ah,0xa7
  42221f:	in     al,dx
  422220:	dec    eax
  422221:	test   DWORD PTR [ebx],esi
  422223:	scas   eax,DWORD PTR es:[edi]
  422224:	and    ebp,ebx
  422226:	jle    0x42223e
  422228:	in     al,0x91
  42222a:	mov    cl,0x40
  42222c:	or     al,0x4c
  42222e:	jae    0x4221cd
  422230:	jno    0x4222a0
  422232:	push   esi
  422233:	imul   ebx,DWORD PTR [ebx+0x4a],0x6be9cf24
  42223a:	and    al,0x9f
  42223c:	add    BYTE PTR cs:[esi+0x21],al
  422240:	add    al,0xfe
  422242:	ret    
  422243:	retf   0xe9e6
  422246:	push   eax
  422247:	pop    ds
  422248:	xchg   edi,eax
  422249:	arpl   dx,cx
  42224b:	js     0x422205
  42224d:	cwde   
  42224e:	xchg   edi,eax
  42224f:	mov    bl,0x81
  422251:	xchg   ecx,eax
  422252:	clc    
  422253:	cmp    bl,BYTE PTR [eax+0x8]
  422256:	mov    ds:0xee1d737e,al
  42225b:	push   0x1b05d1f1
  422260:	and    eax,0xadd71c1b
  422265:	and    al,bh
  422267:	dec    esp
  422268:	sar    DWORD PTR ds:0xd389781c,1
  42226e:	and    BYTE PTR [ecx-0x50],dh
  422271:	jmp    0x422239
  422273:	int    0xea
  422275:	inc    ebp
  422276:	xlat   BYTE PTR ds:[ebx]
  422277:	fwait
  422278:	call   0x2e23:0x78503909
  42227f:	xchg   DWORD PTR [ebp-0x25a35f23],ecx
  422285:	aaa    
  422286:	ds push ebx
  422288:	rcr    DWORD PTR [ebp-0x5c],0x45
  42228c:	out    0x1c,al
  42228e:	cli    
  42228f:	inc    ebx
  422290:	es pop esi
  422292:	dec    edi
  422293:	pop    ds
  422294:	pop    edi
  422295:	pop    ebx
  422296:	mov    eax,0xe0bc0a4
  42229b:	inc    edx
  42229c:	or     ebx,ebx
  42229e:	(bad)  
  42229f:	push   ebx
  4222a0:	or     BYTE PTR [eax],al
  4222a2:	mov    ?,esi
  4222a4:	call   0xaed249
  4222a9:	sbb    DWORD PTR [ecx+0x37],0xd82d06d4
  4222b0:	mov    fs,WORD PTR [eax]
  4222b2:	fstp   DWORD PTR [ecx-0x2813fb42]
  4222b8:	pop    esp
  4222b9:	test   BYTE PTR [ebx],bl
  4222bb:	stc    
  4222bc:	pop    eax
  4222bd:	scas   al,BYTE PTR es:[edi]
  4222be:	je     0x4222d2
  4222c0:	xchg   edx,eax
  4222c1:	add    al,0x21
  4222c3:	add    DWORD PTR [eax+0x42b2bea4],edi
  4222c9:	aam    0x61
  4222cb:	push   ebp
  4222cc:	(bad)  
  4222cd:	fs pushf 
  4222cf:	adc    al,0xae
  4222d1:	out    dx,eax
  4222d2:	icebp  
  4222d3:	jmp    0x1185:0x669b16d1
  4222da:	ds cld 
  4222dc:	dec    edx
  4222dd:	in     al,0x2e
  4222df:	pmaxub mm4,QWORD PTR [ebx-0x2512e79]
  4222e6:	jg     0x422313
  4222e8:	or     eax,0x6e3ed68b
  4222ed:	stc    
  4222ee:	add    BYTE PTR [ecx-0x6a],dl
  4222f1:	out    dx,eax
  4222f2:	sbb    al,0x38
  4222f4:	sbb    bl,BYTE PTR [ebx-0x29]
  4222f7:	mov    dl,0x24
  4222f9:	mov    cx,0x5c36
  4222fd:	xchg   BYTE PTR [esi-0x12],bl
  422300:	test   al,0xc1
  422302:	xor    DWORD PTR [edi+edi*8+0x14088333],esi
  422309:	cmp    BYTE PTR [esi+0x2c],0xe
  42230d:	pushf  
  42230e:	ins    DWORD PTR es:[edi],dx
  42230f:	in     eax,dx
  422310:	xlat   BYTE PTR ds:[ebx]
  422311:	adc    al,dl
  422313:	adc    BYTE PTR [ebx-0x75d3b18],0x12
  42231a:	int    0x35
  42231c:	add    BYTE PTR [ebx+0x6e278ac7],0x6b
  422323:	sbb    al,0x7e
  422325:	pusha  
  422326:	call   0x3685afe
  42232b:	or     eax,0x8bdcaa4f
  422330:	mov    eax,ds:0x6dcc72dd
  422335:	rcr    DWORD PTR [ebp+0x2fb136d9],cl
  42233b:	lock adc esi,DWORD PTR [esi-0x6f]
  42233f:	aas    
  422340:	sti    
  422341:	inc    edx
  422342:	sub    al,BYTE PTR [esi-0x5a]
  422345:	aad    0x31
  422347:	imul   eax,edx,0x68
  42234a:	pop    ebx
  42234b:	aaa    
  42234c:	ret    0x5483
  42234f:	sbb    eax,0xeb2299e6
  422354:	sub    ebp,esp
  422356:	out    0x33,eax
  422358:	aad    0xf3
  42235a:	cmc    
  42235b:	inc    esi
  42235c:	xchg   esp,eax
  42235d:	mov    ecx,0x449ee246
  422362:	repz cmp bh,BYTE PTR ds:0x491a3dff
  422369:	rol    DWORD PTR [ebp-0x70],cl
  42236c:	sahf   
  42236d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42236e:	(bad)  
  42236f:	adc    bh,al
  422371:	cs repnz mov bh,0xac
  422375:	xor    esi,ebx
  422377:	fcom   QWORD PTR [ebp-0x56]
  42237a:	mov    WORD PTR [edi],?
  42237c:	mov    al,0x1f
  42237e:	inc    ecx
  42237f:	lods   al,BYTE PTR ds:[esi]
  422380:	sar    BYTE PTR [ebp+0xe3af300],cl
  422386:	jbe    0x422321
  422388:	or     eax,0xdb5e3874
  42238d:	add    BYTE PTR [edx],cl
  42238f:	cs mov al,0xe5
  422392:	aam    0x14
  422394:	mov    ecx,0x9b3babcb
  422399:	mov    dh,0x63
  42239b:	dec    esi
  42239c:	and    BYTE PTR [ecx+ebx*2-0x3bfd82c1],al
  4223a3:	js     0x42234a
  4223a5:	mov    esp,0x65673889
  4223aa:	les    esi,FWORD PTR [edx+0x5f]
  4223ad:	jno    0x4223d3
  4223af:	sub    dl,BYTE PTR [edx-0x20f696c5]
  4223b5:	mov    BYTE PTR [esi],ch
  4223b7:	sahf   
  4223b8:	and    dh,BYTE PTR [esi+0x6b0f070c]
  4223be:	push   cs
  4223bf:	pop    es
  4223c0:	sahf   
  4223c1:	ds push ds
  4223c3:	push   0xac4a9fb4
  4223c8:	pop    ds
  4223c9:	and    al,0xa4
  4223cb:	add    BYTE PTR ds:0x612ddea1,0x77
  4223d2:	pop    ecx
  4223d3:	and    eax,DWORD PTR [edi+eiz*4+0x5b]
  4223d7:	push   eax
  4223d8:	dec    edi
  4223d9:	xor    DWORD PTR [edi],eax
  4223db:	sbb    eax,0x4c4a0904
  4223e0:	push   0x3f52421b
  4223e5:	std    
  4223e6:	mov    cs,WORD PTR [ebp-0x52]
  4223e9:	inc    ebp
  4223ea:	jmp    0x1bd4e6f6
  4223ef:	out    0xbd,eax
  4223f1:	xor    al,0x32
  4223f3:	daa    
  4223f4:	push   ebx
  4223f5:	aad    0x7a
  4223f7:	or     BYTE PTR [ebx-0x4be2e3bc],cl
  4223fd:	jg     0x422392
  4223ff:	repz inc edx
  422401:	(bad)  
  422403:	pusha  
  422404:	lock repnz pop ss
  422407:	repz inc edi
  422409:	xchg   edi,eax
  42240a:	or     ch,bh
  42240c:	nop
  42240d:	retf   
  42240e:	adc    eax,0x326f9786
  422413:	xchg   edx,eax
  422414:	test   DWORD PTR [edi+0x5eb16e28],esp
  42241a:	repz jl 0x42240a
  42241d:	dec    ebp
  42241e:	jne    0x4223f3
  422420:	in     al,0xc2
  422422:	mov    DWORD PTR [edi+edi*8],edi
  422425:	mov    al,ds:0xbba30af8
  42242a:	jb     0x42245c
  42242c:	jo     0x4223ea
  42242e:	push   edi
  42242f:	and    al,0x56
  422431:	push   ss
  422432:	shr    ah,0xd6
  422435:	dec    ebx
  422436:	std    
  422437:	or     ebx,edx
  422439:	rcl    DWORD PTR [esi],cl
  42243b:	push   cs
  42243c:	in     eax,dx
  42243d:	pusha  
  42243e:	neg    BYTE PTR [eax+0x700ffc2a]
  422444:	rcl    BYTE PTR [esi-0x4d],1
  422447:	icebp  
  422448:	mov    al,ds:0x364242e1
  42244d:	mov    dl,0xba
  42244f:	pop    ecx
  422450:	outs   dx,DWORD PTR ds:[esi]
  422451:	and    al,0x59
  422453:	rol    BYTE PTR [ebx],cl
  422455:	jns    0x42247a
  422457:	and    DWORD PTR [ebp-0x4d],ebx
  42245a:	pop    ds
  42245b:	sti    
  42245c:	dec    ebx
  42245d:	std    
  42245e:	mov    edx,0xf09b2091
  422463:	sub    dh,BYTE PTR [esi+0x79905242]
  422469:	push   eax
  42246a:	xor    DWORD PTR ds:0x8dbfbc4c,esi
  422470:	data16 mov dh,0x3e
  422473:	mov    dh,0x31
  422475:	and    BYTE PTR [eax-0x1b],dh
  422478:	cdq    
  422479:	(bad)  
  42247a:	daa    
  42247b:	jge    0x4224f0
  42247d:	inc    esi
  42247e:	sub    BYTE PTR cs:[eax],ch
  422481:	cmp    eax,0x1bfdd3fd
  422486:	loopne 0x422448
  422488:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422489:	sbb    ebx,DWORD PTR [esi+0x54]
  42248c:	dec    edx
  42248d:	fcmovu st,st(0)
  42248f:	push   0x5ccd1cad
  422494:	push   eax
  422495:	mov    DWORD PTR [eax-0x7c],edi
  422498:	aas    
  422499:	test   eax,0xa4843f34
  42249e:	dec    edi
  42249f:	in     eax,0x57
  4224a1:	fs out 0xc1,eax
  4224a4:	xor    edi,DWORD PTR [ebx+eiz*1+0x7edaa11f]
  4224ab:	imul   edi,DWORD PTR ds:0x2da4e1a7,0x2e
  4224b2:	imul   esp,edx,0x5a
  4224b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224b6:	je     0x422509
  4224b8:	xchg   ebp,eax
  4224b9:	mov    eax,0x90b5072a
  4224be:	pushf  
  4224bf:	adc    edi,0xffffffc3
  4224c2:	les    ebp,FWORD PTR [ebp-0x6a]
  4224c5:	mov    esi,0xcafc7a16
  4224ca:	pop    esi
  4224cb:	icebp  
  4224cc:	jle    0x422462
  4224ce:	mov    DWORD PTR [edx-0x518ebfb1],esi
  4224d4:	pop    ss
  4224d5:	mov    bh,0xf2
  4224d7:	retf   
  4224d8:	add    sp,bx
  4224db:	rcr    DWORD PTR [edi-0x67],cl
  4224de:	push   0x0
  4224e0:	popf   
  4224e1:	inc    edx
  4224e2:	dec    ebx
  4224e3:	push   esi
  4224e4:	mov    bl,0x14
  4224e6:	imul   ax,WORD PTR [esi-0x3e],0x68
  4224eb:	inc    edx
  4224ec:	dec    esp
  4224ed:	dec    eax
  4224ee:	mov    bh,BYTE PTR [edx+0x78]
  4224f1:	loope  0x422515
  4224f3:	ret    0xd119
  4224f6:	push   es
  4224f7:	call   0x68b2:0xb8b2a74a
  4224fe:	(bad)  
  4224ff:	and    dl,BYTE PTR [eax+0x232721f1]
  422505:	stos   DWORD PTR es:[edi],eax
  422506:	add    esp,DWORD PTR [eax+0x71]
  422509:	push   ebp
  42250a:	mov    esp,0x6b9c5583
  42250f:	xor    DWORD PTR [ebx+0x53],edi
  422512:	lods   eax,DWORD PTR ds:[esi]
  422513:	inc    ebp
  422514:	(bad)  [eax-0x24b84cb6]
  42251a:	in     al,0xc8
  42251c:	int    0x16
  42251e:	(bad)  
  42251f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422520:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422521:	xchg   edx,eax
  422522:	ins    BYTE PTR es:[edi],dx
  422523:	pop    ebp
  422524:	sub    BYTE PTR [edi],dl
  422526:	(bad)  
  422527:	push   ebp
  422528:	rol    bh,cl
  42252a:	out    dx,al
  42252b:	add    al,al
  42252d:	sti    
  42252e:	xchg   BYTE PTR [ebp-0x7a],bl
  422531:	fwait
  422532:	sar    DWORD PTR [edi-0x14],1
  422535:	push   eax
  422536:	int3   
  422537:	ret    
  422538:	and    ebx,DWORD PTR [edi+esi*2]
  42253b:	ins    BYTE PTR es:[edi],dx
  42253c:	mov    BYTE PTR [eax+esi*1],cl
  42253f:	clc    
  422540:	std    
  422541:	ret    0x6161
  422544:	xchg   BYTE PTR [edi+0x31ef4daa],cl
  42254a:	pop    ds
  42254b:	popa   
  42254c:	cmp    eax,0x22847e0e
  422551:	cmc    
  422552:	mov    ecx,0x3bb7cfe7
  422557:	push   esi
  422558:	inc    esp
  422559:	lea    ebx,[esi]
  42255b:	jge    0x4224eb
  42255d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42255e:	xchg   esi,esp
  422560:	or     ebx,DWORD PTR [ebx+0x293cf93]
  422566:	xor    edi,eax
  422568:	shl    BYTE PTR [ebx],cl
  42256a:	adc    BYTE PTR [ebp+0x52],0x7a
  42256e:	bound  esi,QWORD PTR ds:[edi]
  422571:	arpl   WORD PTR [esi],cx
  422573:	popa   
  422574:	pusha  
  422575:	not    DWORD PTR [edi-0x3422b317]
  42257b:	imul   ecx,DWORD PTR [edi+ebp*1-0x9f90e79],0xe
  422583:	adc    esp,DWORD PTR [bp+si]
  422586:	jg     0x4225b4
  422588:	loopne 0x4225fe
  42258a:	into   
  42258b:	sbb    DWORD PTR [edi+eax*1+0x13253834],ebp
  422592:	pop    eax
  422593:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422594:	vaddps xmm0,xmm6,xmm3
  422598:	or     edi,DWORD PTR [edi-0x2e]
  42259b:	mov    dl,0xef
  42259d:	outs   dx,DWORD PTR ds:[esi]
  42259e:	shl    ecx,0xe3
  4225a1:	mov    ?,ecx
  4225a3:	mov    eax,ecx
  4225a5:	add    edx,DWORD PTR [edi]
  4225a7:	jge    0x422536
  4225a9:	lods   eax,DWORD PTR ds:[esi]
  4225aa:	imul   ebx,esi,0xffffff88
  4225ad:	imul   eax,ecx,0x78
  4225b0:	gs lock adc DWORD PTR gs:[eax+0x7d],ecx
  4225b6:	lahf   
  4225b7:	jmp    DWORD PTR ds:0x992dfc9e
  4225bd:	icebp  
  4225be:	shl    DWORD PTR [ebp+0x42],0x76
  4225c2:	jno    0x422579
  4225c4:	cmc    
  4225c5:	fwait
  4225c6:	shr    DWORD PTR [esi-0x4b],cl
  4225c9:	sub    BYTE PTR [esp+esi*4+0x453e958e],bl
  4225d0:	mul    DWORD PTR [eax]
  4225d2:	ret    
  4225d3:	pop    edi
  4225d4:	iretw  
  4225d6:	mov    ebx,0x8435b874
  4225db:	mov    dh,BYTE PTR [ecx+0x3c0aa34e]
  4225e1:	sub    DWORD PTR ds:0xbd6e60db,0xb2c94b12
  4225eb:	pop    ebp
  4225ec:	add    esp,DWORD PTR [eax-0xf]
  4225ef:	sbb    ecx,DWORD PTR [esi-0x3d]
  4225f2:	outs   dx,DWORD PTR ds:[esi]
  4225f3:	pop    ss
  4225f4:	push   esp
  4225f5:	cmp    al,0x60
  4225f7:	xor    DWORD PTR [eax-0x49b6340],esp
  4225fd:	fsub   DWORD PTR [ecx+0x4f2ec507]
  422603:	(bad)  
  422604:	jno    0x422592
  422606:	mov    bh,0x70
  422608:	icebp  
  422609:	loop   0x42267d
  42260b:	inc    ebx
  42260c:	pop    edx
  42260d:	mov    cl,0x3a
  42260f:	jp     0x4225b9
  422611:	pop    es
  422612:	(bad)  
  422613:	push   ecx
  422614:	sub    eax,0x8e5b28da
  422619:	xor    eax,0x21277c15
  42261e:	push   ds
  42261f:	or     eax,0x509e33a2
  422624:	mov    ds,WORD PTR [edx+0x3fc564aa]
  42262a:	scas   al,BYTE PTR es:[edi]
  42262b:	jmp    0x800b:0x76f88827
  422632:	mov    esp,esi
  422634:	enter  0xeda9,0x4d
  422638:	fbstp  TBYTE PTR [esi+0x377588df]
  42263e:	mov    dh,0xaf
  422640:	cmp    al,0x73
  422642:	mov    ecx,0x46e6f724
  422647:	jmp    0xc5c0:0xf189b9f7
  42264e:	js     0x422669
  422650:	xchg   ecx,eax
  422651:	push   eax
  422652:	push   cs
  422653:	sti    
  422654:	jmp    0x7806:0x44dcbcda
  42265b:	mov    cl,0x9b
  42265d:	repnz loop 0x422678
  422660:	sub    BYTE PTR [edx],bl
  422662:	rol    cl,0xf5
  422665:	popa   
  422666:	leave  
  422667:	ds sti 
  422669:	repnz add eax,0xad6aa45c
  42266f:	test   BYTE PTR [esp+edx*1+0x51],0xf2
  422674:	js     0x4226ef
  422676:	sub    DWORD PTR [eax-0x2592e6b],ecx
  42267c:	enter  0xa717,0x9a
  422680:	or     DWORD PTR [edx-0x5d],ebx
  422683:	movntps XMMWORD PTR cs:[ebp-0x1],xmm1
  422688:	test   eax,0xdfe938e2
  42268d:	(bad)  
  42268e:	or     BYTE PTR [ecx-0x5d3591a2],0x7e
  422695:	xchg   ebp,eax
  422696:	fs fs push edi
  422699:	mov    ds:0x6c23d08d,eax
  42269e:	pop    esp
  42269f:	arpl   WORD PTR [esi+0x5b],cx
  4226a2:	pusha  
  4226a3:	add    al,ch
  4226a5:	aad    0x4c
  4226a7:	call   0x65defbed
  4226ac:	or     DWORD PTR [esi],0x1
  4226af:	jl     0x4226fb
  4226b1:	jnp    0x4226ed
  4226b3:	ins    DWORD PTR es:[edi],dx
  4226b4:	mov    eax,eax
  4226b6:	and    edx,DWORD PTR [edi-0xf]
  4226b9:	and    ah,dl
  4226bb:	and    DWORD PTR [esi+0x6a],ebp
  4226be:	sub    esp,eax
  4226c0:	push   0x8c7aaa07
  4226c5:	cwde   
  4226c6:	out    dx,al
  4226c7:	mov    cl,0x6e
  4226c9:	mov    ss,esp
  4226cb:	into   
  4226cc:	dec    ebx
  4226cd:	popf   
  4226ce:	mov    bl,0x2c
  4226d0:	add    DWORD PTR [ecx-0x70],ebp
  4226d3:	add    eax,0xb20e6283
  4226d8:	je     0x422727
  4226da:	ds call 0x87d2420e
  4226e0:	push   ecx
  4226e1:	fiadd  WORD PTR [eax]
  4226e3:	cmp    al,0xb7
  4226e5:	gs pop esi
  4226e7:	out    dx,al
  4226e8:	in     al,dx
  4226e9:	rcl    DWORD PTR [ecx-0x3d508289],cl
  4226ef:	inc    edi
  4226f0:	jg     0x422729
  4226f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226f3:	sahf   
  4226f4:	adc    eax,0xeb519d6
  4226f9:	jp     0x42273d
  4226fb:	(bad)  
  4226fc:	jecxz  0x42273a
  4226fe:	dec    esi
  4226ff:	mov    WORD PTR [ebp-0xc734f61],?
  422705:	jp     0x4226ff
  422707:	add    esp,DWORD PTR [esi]
  422709:	cld    
  42270a:	retf   
  42270b:	int    0xf1
  42270d:	and    DWORD PTR [edx-0x101058bb],0x26
  422714:	shr    eax,1
  422716:	repz imul ebx,DWORD PTR [esi],0x41
  42271a:	xchg   ebx,eax
  42271b:	imul   esi,ebp,0x36
  42271e:	mov    ds:0x569f32c,eax
  422723:	dec    ecx
  422724:	xchg   esp,eax
  422725:	bnd jno 0x422733
  422728:	adc    DWORD PTR [ecx],ebx
  42272a:	jle    0x422752
  42272c:	in     eax,0x74
  42272e:	outs   dx,DWORD PTR ds:[esi]
  42272f:	push   ecx
  422730:	cmp    BYTE PTR [esp+edx*1],ch
  422733:	int3   
  422734:	aad    0x21
  422736:	in     eax,dx
  422737:	pushf  
  422738:	aam    0x8d
  42273a:	add    esi,edx
  42273c:	popa   
  42273d:	fwait
  42273e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42273f:	arpl   WORD PTR [ebx+0x6e],bx
  422742:	shl    DWORD PTR [ecx],1
  422744:	jnp    0x422737
  422746:	fwait
  422747:	push   0xa92c92a
  42274c:	mov    edi,DWORD PTR [ecx]
  42274e:	in     al,0x62
  422750:	fdiv   QWORD PTR ss:[esi-0x80]
  422754:	push   ebx
  422755:	dec    edx
  422756:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422757:	aas    
  422758:	(bad)  
  422759:	out    0xc0,eax
  42275b:	inc    ecx
  42275c:	push   esp
  42275d:	pop    ds
  42275e:	jmp    0x7b3d:0xe2bb5c58
  422765:	push   cs
  422766:	xor    esi,DWORD PTR [edi+0x190b9738]
  42276c:	ins    DWORD PTR es:[edi],dx
  42276d:	ja     0x422707
  42276f:	xchg   ecx,eax
  422770:	dec    edi
  422771:	or     edx,esi
  422773:	cmp    al,0x21
  422775:	add    DWORD PTR [ebp-0x377c6629],edi
  42277b:	mov    eax,0xab7f1768
  422780:	es mov edx,0xc1f9e8ee
  422786:	or     al,0x16
  422788:	add    ebx,DWORD PTR [ebx-0x35]
  42278b:	mov    ecx,0xdbdafdd3
  422790:	dec    eax
  422791:	stc    
  422792:	inc    eax
  422793:	jle    0x422791
  422795:	xchg   esp,eax
  422796:	sbb    ebx,edi
  422798:	int    0xa8
  42279a:	add    BYTE PTR [eax+edi*8],0x5f
  42279e:	ret    0x271e
  4227a1:	aas    
  4227a2:	push   ebx
  4227a3:	mov    bl,0xa2
  4227a5:	fistp  DWORD PTR [edx-0x1a506447]
  4227ab:	lea    esp,[ebx+0x403020d3]
  4227b1:	test   eax,0xba8057b3
  4227b6:	adc    eax,0x6ef6b520
  4227bb:	add    al,0xf1
  4227bd:	aad    0x47
  4227bf:	aaa    
  4227c0:	sub    ah,BYTE PTR [edi+0x38]
  4227c3:	jo     0x4227ba
  4227c5:	js     0x422840
  4227c7:	push   esi
  4227c8:	inc    esi
  4227c9:	cmp    al,0xa3
  4227cb:	mov    edi,0xf4ae1767
  4227d0:	pop    DWORD PTR [esi+0x28f5a09c]
  4227d6:	cdq    
  4227d7:	(bad)  
  4227d8:	in     al,dx
  4227d9:	popa   
  4227da:	mov    eax,ds:0x67783b2
  4227df:	test   DWORD PTR [edx+eiz*4],edi
  4227e2:	mov    cl,0xbc
  4227e4:	mov    cl,0x37
  4227e6:	inc    esp
  4227e7:	dec    ebx
  4227e8:	xor    BYTE PTR [eax+edi*1],ch
  4227eb:	adc    al,0x26
  4227ed:	mov    ebp,0x38249840
  4227f2:	sub    ecx,DWORD PTR [ecx-0x78]
  4227f5:	xor    eax,0x28a23a3d
  4227fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227fb:	imul   ecx,ebp,0x12
  4227fe:	(bad)  
  4227ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422800:	push   edx
  422801:	mov    dh,0xb
  422803:	ins    DWORD PTR es:[edi],dx
  422804:	ret    
  422805:	sub    eax,0x4a14717f
  42280a:	dec    edx
  42280b:	pop    ds
  42280c:	outs   dx,DWORD PTR ds:[esi]
  42280d:	jmp    0x4227ef
  42280f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422810:	pop    ecx
  422811:	dec    ebp
  422812:	test   ecx,esi
  422814:	cwde   
  422815:	xor    al,BYTE PTR [ecx+ecx*8]
  422818:	adc    dl,BYTE PTR [ebx-0xa53c376]
  42281e:	das    
  42281f:	(bad)  
  422820:	mov    ebx,ecx
  422822:	inc    ebp
  422823:	sub    DWORD PTR [eax],esp
  422825:	ss push cs
  422827:	imul   esi,DWORD PTR ds:0x503c2600,0x24e21221
  422831:	push   esp
  422832:	push   ebp
  422833:	outs   dx,BYTE PTR ds:[esi]
  422834:	retf   0xce3b
  422837:	inc    edx
  422838:	jmp    0x422862
  42283a:	call   0x855000eb
  42283f:	dec    esp
  422840:	ds dec esp
  422842:	(bad)  [eax-0x6b]
  422845:	or     DWORD PTR [esi+0x5b536afd],0xda42a613
  42284f:	pop    ecx
  422850:	je     0x4228cb
  422852:	mov    ecx,0xd0ad4fb6
  422857:	ret    
  422858:	sbb    eax,0xa1ab61b7
  42285d:	mov    ah,0x58
  42285f:	lock or al,0x9
  422862:	mov    dl,BYTE PTR [edx+0x33]
  422865:	es pop ds
  422867:	or     BYTE PTR [esp+ebx*1],ah
  42286a:	pop    edi
  42286b:	inc    edx
  42286c:	xchg   sp,ax
  42286e:	ja     0x422826
  422870:	pop    ecx
  422871:	dec    esp
  422872:	pop    eax
  422873:	xchg   BYTE PTR [ebx+ecx*1],al
  422876:	adc    edi,DWORD PTR ds:0x6ed030d6
  42287c:	(bad)  
  42287d:	enter  0x6b1b,0x3f
  422881:	push   esp
  422882:	outs   dx,DWORD PTR ds:[esi]
  422883:	ret    
  422884:	push   0x64
  422886:	push   edx
  422887:	cwde   
  422888:	hlt    
  422889:	inc    esp
  42288a:	or     edx,eax
  42288c:	jmp    0xb17d84f5
  422891:	ds pushf 
  422893:	aam    0xad
  422895:	js     0x422836
  422897:	stc    
  422898:	ror    ch,cl
  42289a:	mov    ebx,0x2f104314
  42289f:	arpl   WORD PTR [edx+esi*1-0x574373d2],bx
  4228a6:	icebp  
  4228a7:	call   0xaf576f5
  4228ac:	and    BYTE PTR [ecx],0xd8
  4228af:	mov    esp,0x19b40d3b
  4228b4:	add    eax,0x11e01a33
  4228b9:	lahf   
  4228ba:	fidivr DWORD PTR [ebx-0x40]
  4228bd:	cs (bad) 
  4228bf:	in     al,dx
  4228c0:	cmp    al,0xc8
  4228c2:	sub    eax,0x9eda9ab1
  4228c7:	cmp    ch,al
  4228c9:	xor    BYTE PTR [edx-0x68],ch
  4228cc:	pop    ecx
  4228cd:	push   esi
  4228ce:	loopne 0x422929
  4228d0:	call   0x875:0x3808f4d3
  4228d7:	(bad)  
  4228d8:	jne    0x4228ce
  4228da:	cmp    eax,0xb2779b37
  4228df:	sub    ecx,DWORD PTR [ebp+0x47124986]
  4228e5:	mov    edx,0xa2f61b76
  4228ea:	jmp    0x422928
  4228ec:	dec    esi
  4228ed:	ret    
  4228ee:	push   esp
  4228ef:	mov    ds:0xb499e3cf,eax
  4228f4:	pop    ds
  4228f5:	xchg   ebp,eax
  4228f6:	shr    DWORD PTR [eax-0x50d5c691],cl
  4228fc:	and    BYTE PTR [ecx+0x69b7e41],bh
  422902:	sub    ah,BYTE PTR [edx+0x18]
  422905:	adc    eax,esi
  422907:	mov    ebx,0xc5de4162
  42290c:	into   
  42290d:	imul   edx,DWORD PTR [esi+ecx*8],0x55
  422911:	scas   al,BYTE PTR es:[edi]
  422912:	outs   dx,BYTE PTR ds:[esi]
  422913:	jecxz  0x4228fc
  422915:	dec    edx
  422916:	dec    edx
  422917:	push   esp
  422918:	in     al,dx
  422919:	sbb    eax,0x244981c7
  42291e:	div    DWORD PTR ds:0x67623c9f
  422924:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422925:	mov    dl,BYTE PTR [edx]
  422927:	les    ecx,FWORD PTR [edx]
  422929:	jmp    0x4b7d429c
  42292e:	mov    eax,0xc812117a
  422933:	adc    DWORD PTR [ebx],esi
  422935:	cmp    eax,0x477dcdff
  42293a:	jmp    0xde11:0x20ed760e
  422941:	(bad)  
  422942:	pop    esp
  422943:	or     eax,0x4eb4b321
  422948:	test   BYTE PTR [esp+esi*8],cl
  42294b:	mov    esi,0x23ce7a07
  422950:	in     al,0x4a
  422952:	pop    ebp
  422953:	cld    
  422954:	cdq    
  422955:	push   esi
  422956:	rcl    edi,cl
  422958:	jmp    0x4228ec
  42295a:	ret    0xebee
  42295d:	jo     0x4228ff
  42295f:	push   eax
  422960:	enter  0x99c8,0xec
  422964:	xlat   BYTE PTR ds:[ebx]
  422965:	mov    ecx,?
  422967:	cmp    edx,0x3819d568
  42296d:	dec    ecx
  42296e:	ins    DWORD PTR es:[edi],dx
  42296f:	sbb    DWORD PTR [esi-0x4a843676],ecx
  422975:	sbb    eax,0xf2d3f02
  42297a:	mov    gs,WORD PTR [ecx+esi*8+0x2c53799]
  422981:	adc    cl,al
  422983:	or     BYTE PTR [ebx+0x72],dh
  422986:	xor    DWORD PTR [esi-0x4630fe48],eax
  42298c:	mov    BYTE PTR [edx],cl
  42298e:	xchg   BYTE PTR ds:0x4190c9d1,al
  422994:	js     0x422980
  422996:	add    al,0x6d
  422998:	cmp    edx,DWORD PTR [eax+edx*2+0x581b419b]
  42299f:	push   cs
  4229a0:	push   edx
  4229a1:	pop    es
  4229a2:	dec    BYTE PTR [edx]
  4229a4:	mov    cs,WORD PTR [ebp+ebx*4-0x66]
  4229a8:	lods   al,BYTE PTR ds:[esi]
  4229a9:	lahf   
  4229aa:	mov    bl,0x2e
  4229ac:	int3   
  4229ad:	push   es
  4229ae:	sbb    eax,DWORD PTR [eax]
  4229b0:	xor    ch,BYTE PTR [edi]
  4229b2:	inc    di
  4229b4:	mov    DWORD PTR [esi+esi*4-0x486ebb39],edi
  4229bb:	jbe    0x852f5cdb
  4229c1:	inc    ebx
  4229c2:	jmp    0x422a30
  4229c4:	test   DWORD PTR [ecx-0x55f6c09b],ebx
  4229ca:	sti    
  4229cb:	scas   al,BYTE PTR es:[edi]
  4229cc:	out    dx,al
  4229cd:	test   BYTE PTR [esi+0x5cf3c6fc],cl
  4229d3:	leave  
  4229d4:	push   ss
  4229d5:	cwde   
  4229d6:	ret    0x4ada
  4229d9:	xor    ebp,esi
  4229db:	out    dx,al
  4229dc:	stc    
  4229dd:	mov    ebx,0xd4bdbd7e
  4229e2:	retf   
  4229e3:	out    dx,eax
  4229e4:	loopne 0x4229c9
  4229e6:	icebp  
  4229e7:	out    0x9b,al
  4229e9:	fadd   st,st(6)
  4229eb:	pusha  
  4229ec:	fild   QWORD PTR [edx]
  4229ee:	retf   0x66fe
  4229f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229f3:	int3   
  4229f4:	inc    ebx
  4229f5:	(bad)  
  4229f6:	in     eax,0xa6
  4229f8:	push   ebp
  4229f9:	fprem  
  4229fb:	loop   0x422a2f
  4229fd:	mov    cs,WORD PTR [ebx]
  4229ff:	push   esp
  422a00:	xchg   DWORD PTR [ebx+0x36c6fccd],esp
  422a06:	fld    TBYTE PTR [ebp-0x2c]
  422a09:	mov    eax,0x45dd1f90
  422a0e:	bound  ecx,QWORD PTR [esi]
  422a10:	dec    eax
  422a11:	jnp    0x4229ba
  422a13:	out    dx,al
  422a14:	inc    edi
  422a15:	pop    ds
  422a16:	cld    
  422a17:	jp     0x4229f4
  422a19:	into   
  422a1a:	fadd   st(3),st
  422a1c:	cmc    
  422a1d:	paddusb mm6,QWORD PTR [ebp+ebx*4+0x7513f4e2]
  422a25:	cmp    ecx,ebp
  422a27:	sbb    eax,ebx
  422a29:	fisubr DWORD PTR [eax]
  422a2b:	push   edi
  422a2c:	xchg   esp,eax
  422a2d:	sbb    ecx,DWORD PTR [ebx+0x1e5574df]
  422a33:	mov    al,0x9c
  422a35:	out    dx,eax
  422a36:	enterw 0x2fa3,0x6e
  422a3b:	js     0x422aa8
  422a3d:	pop    ebp
  422a3e:	dec    edx
  422a3f:	sbb    cl,bl
  422a41:	cli    
  422a42:	xchg   BYTE PTR [ebx+0x8],ch
  422a45:	aas    
  422a46:	add    bh,BYTE PTR [edi+0x25417d99]
  422a4c:	gs jne 0x422a29
  422a4f:	imul   esp,DWORD PTR [edx+0x67e5a9ae],0xb9e416da
  422a59:	xor    al,0x6
  422a5b:	test   al,0xf0
  422a5d:	fstp   st(2)
  422a5f:	mov    dl,0x9e
  422a61:	call   0xcaa2a745
  422a66:	or     eax,0xb2eeaefc
  422a6b:	clc    
  422a6c:	push   ecx
  422a6d:	mov    edi,0x7e04576d
  422a72:	push   eax
  422a73:	leave  
  422a74:	dec    BYTE PTR [eax]
  422a76:	test   eax,0x66f0c905
  422a7b:	loope  0x422a48
  422a7d:	mov    ds:0x4ed98928,eax
  422a82:	pop    eax
  422a83:	(bad)  
  422a84:	stc    
  422a85:	pop    esi
  422a86:	(bad)  
  422a87:	xor    dl,BYTE PTR [ebp+0x1fe47ae5]
  422a8d:	or     al,0xa5
  422a8f:	add    eax,0x8f79356c
  422a94:	or     bl,bh
  422a96:	leave  
  422a97:	arpl   WORD PTR ds:0xc0a2e1b1,ax
  422a9d:	jp     0x422b17
  422a9f:	es cmp ah,dh
  422aa2:	dec    ecx
  422aa3:	aam    0x7a
  422aa5:	es mov ecx,0x213253dc
  422aab:	hlt    
  422aac:	inc    ebx
  422aad:	popa   
  422aae:	jg     0x422ad7
  422ab0:	repz jmp 0x422af4
  422ab3:	rcr    DWORD PTR [edx],1
  422ab5:	dec    edx
  422ab6:	mov    bh,0xf4
  422ab8:	add    BYTE PTR [ecx],dl
  422aba:	fisubr DWORD PTR [ebp-0xe]
  422abd:	xchg   ebp,eax
  422abe:	cli    
  422abf:	lahf   
  422ac0:	jmp    0x9f5d:0xb1d18d58
  422ac7:	dec    eax
  422ac8:	and    DWORD PTR [esi],ebx
  422aca:	mov    ebx,0x67a44efd
  422acf:	sub    BYTE PTR [ecx],0x11
  422ad2:	(bad)  
  422ad3:	pop    ebp
  422ad4:	cdq    
  422ad5:	xchg   esp,eax
  422ad6:	dec    eax
  422ad7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ad8:	cmp    eax,0x3f6375
  422add:	fcomp  QWORD PTR [esi+0xe5951a4]
  422ae3:	enter  0x3892,0x54
  422ae7:	ja     0x422b4f
  422ae9:	hlt    
  422aea:	pop    es
  422aeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422aec:	and    esp,esp
  422aee:	ss out dx,eax
  422af0:	pop    edx
  422af1:	mov    esi,DWORD PTR [ecx+0x635156b7]
  422af7:	outs   dx,DWORD PTR ds:[esi]
  422af8:	push   ds
  422af9:	je     0x422abb
  422afb:	jmp    0xdbf0:0x11feebd2
  422b02:	fidiv  DWORD PTR [esi]
  422b04:	xlat   BYTE PTR ds:[ebx]
  422b05:	sub    al,0x64
  422b07:	pop    es
  422b08:	adc    al,0x79
  422b0a:	fist   WORD PTR [esi-0xc4abd91]
  422b10:	icebp  
  422b11:	rol    DWORD PTR [ebx+0x3],1
  422b14:	js     0x422aa9
  422b16:	adc    DWORD PTR [esi-0x6b5d5fd2],edi
  422b1c:	push   eax
  422b1d:	popa   
  422b1e:	push   0xbbb35fa9
  422b23:	test   ecx,ebx
  422b25:	sbb    al,0xb2
  422b27:	lods   al,BYTE PTR ds:[esi]
  422b28:	popa   
  422b29:	sti    
  422b2a:	sub    BYTE PTR [edx-0x5079d347],ah
  422b30:	mov    ch,0xc7
  422b32:	test   BYTE PTR [ebx],cl
  422b34:	mov    ebx,0x1adbac13
  422b39:	stos   BYTE PTR es:[edi],al
  422b3a:	ins    DWORD PTR es:[edi],dx
  422b3b:	out    dx,al
  422b3c:	test   eax,0xc5967eee
  422b41:	or     DWORD PTR [ebx],ecx
  422b43:	add    cl,BYTE PTR [esi+eiz*2+0x1]
  422b47:	and    al,BYTE PTR [ecx]
  422b49:	(bad)  
  422b4a:	cmc    
  422b4b:	adc    eax,esp
  422b4d:	out    0xc,eax
  422b4f:	loope  0x422af1
  422b51:	aaa    
  422b52:	mov    edi,0xb6dbab3
  422b57:	not    DWORD PTR [ebp-0x461ec4cb]
  422b5d:	aas    
  422b5e:	fsub   st,st(7)
  422b60:	mov    eax,0x50f0c7f1
  422b65:	popf   
  422b66:	imul   ebx,eax,0xffffffba
  422b69:	cmp    edx,ebx
  422b6b:	test   eax,0x7e08b086
  422b70:	inc    ebx
  422b71:	sbb    al,0x9
  422b73:	jns    0x422b91
  422b75:	leave  
  422b76:	cdq    
  422b77:	sub    esi,ebp
  422b79:	pop    edx
  422b7a:	into   
  422b7b:	mov    ch,al
  422b7d:	inc    esp
  422b7e:	fisubr DWORD PTR [edx+0x55]
  422b81:	push   eax
  422b82:	fidiv  WORD PTR [esi+0xa]
  422b85:	push   DWORD PTR [ecx]
  422b87:	and    BYTE PTR [esi+0x42e53799],cl
  422b8d:	xor    edi,ecx
  422b8f:	hlt    
  422b90:	xchg   BYTE PTR [ebx+0x65],dh
  422b93:	jle    0x422b52
  422b95:	xor    eax,0xe1be0eff
  422b9a:	aam    0x4
  422b9c:	sbb    BYTE PTR [esi+0x3d3ee7ac],ch
  422ba2:	push   ebx
  422ba3:	sbb    DWORD PTR [ecx+0x501b82b],ebx
  422ba9:	test   al,0x4a
  422bab:	dec    ebp
  422bac:	aaa    
  422bad:	movntps XMMWORD PTR [edi+eax*2],xmm7
  422bb1:	call   0xab605b10
  422bb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422bb7:	add    al,0xd8
  422bb9:	xor    DWORD PTR [ecx+0x1],edx
  422bbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422bbd:	pusha  
  422bbe:	(bad)  [edi]
  422bc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422bc1:	into   
  422bc2:	enter  0x287b,0x4d
  422bc6:	dec    esi
  422bc8:	jl     0x422bcb
  422bca:	cli    
  422bcb:	or     ch,BYTE PTR [edi]
  422bcd:	sub    dl,BYTE PTR [ebx+eax*1+0x60b1981f]
  422bd4:	sub    al,BYTE PTR [ecx+0x5]
  422bd7:	call   DWORD PTR [eax+edi*4+0x29]
  422bdb:	das    
  422bdc:	or     al,0x63
  422bde:	mov    bh,0x41
  422be0:	cmp    cl,BYTE PTR [esi*2-0xf30f4f3]
  422be7:	inc    eax
  422be8:	add    esi,edx
  422bea:	xchg   edx,eax
  422beb:	mov    bl,0xc9
  422bed:	pop    esi
  422bee:	add    bl,BYTE PTR [eax]
  422bf0:	aas    
  422bf1:	dec    BYTE PTR [edx]
  422bf3:	or     dl,BYTE PTR [esi-0x12dbe113]
  422bf9:	mov    ecx,0x15d708f0
  422bfe:	dec    ebx
  422bff:	das    
  422c00:	jnp    0x422c3b
  422c02:	jae    0x422bc6
  422c04:	hlt    
  422c05:	mov    bl,0x8c
  422c07:	adc    BYTE PTR [eax],0xf9
  422c0a:	mov    dl,0xc9
  422c0c:	loop   0x422bcd
  422c0e:	dec    edx
  422c0f:	inc    eax
  422c10:	je     0x422ba6
  422c12:	out    0xf2,al
  422c14:	aad    0x19
  422c16:	fnsave [ecx+ebx*1+0x28]
  422c1a:	jno    0x422c7d
  422c1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c1d:	mov    al,0x78
  422c1f:	imul   edi,DWORD PTR [esi+0x62279ee5],0x1a92f7ed
  422c29:	inc    ebp
  422c2a:	fwait
  422c2b:	mov    edi,0x55c32358
  422c30:	or     al,BYTE PTR [edi+0x67]
  422c33:	rcl    bh,cl
  422c35:	push   es
  422c36:	dec    eax
  422c37:	rcl    BYTE PTR [ebp-0x311a3505],1
  422c3d:	stos   BYTE PTR es:[edi],al
  422c3e:	mov    ds:0xfe51e093,eax
  422c43:	lods   eax,DWORD PTR ds:[esi]
  422c44:	xchg   DWORD PTR [ebx+ecx*1+0x69],edx
  422c48:	cmp    eax,DWORD PTR [eax+0x752af896]
  422c4e:	dec    ebp
  422c4f:	inc    esp
  422c50:	mov    edx,0xa53010bf
  422c55:	push   ebp
  422c56:	sub    DWORD PTR [ecx+0x5a],edi
  422c59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c5a:	popa   
  422c5b:	rol    BYTE PTR [edx],1
  422c5d:	pop    eax
  422c5e:	repz mov dh,0x5
  422c61:	popf   
  422c62:	mov    cl,0x6d
  422c64:	mov    ch,0x30
  422c66:	xchg   esp,eax
  422c67:	int3   
  422c68:	daa    
  422c69:	or     edx,DWORD PTR [edi]
  422c6b:	(bad)  
  422c6c:	sar    DWORD PTR [esi],1
  422c6e:	sbb    edi,DWORD PTR [ebx]
  422c70:	and    BYTE PTR [edx],al
  422c72:	aaa    
  422c73:	cld    
  422c74:	daa    
  422c75:	jnp    0x422bfd
  422c77:	aad    0xc5
  422c79:	xor    BYTE PTR [ebx+0x56],ah
  422c7c:	daa    
  422c7d:	xchg   esp,eax
  422c7e:	fld    TBYTE PTR [esp+eax*8-0x14a743ee]
  422c85:	push   ss
  422c86:	aas    
  422c87:	add    BYTE PTR [edi],dh
  422c89:	and    DWORD PTR [ecx],ecx
  422c8b:	adc    DWORD PTR [ebx-0x61],ebx
  422c8e:	scas   al,BYTE PTR es:[edi]
  422c8f:	loop   0x422cd3
  422c91:	shl    DWORD PTR ds:0x154c6957,1
  422c97:	popa   
  422c98:	adc    DWORD PTR ds:0xe1f4fe35,ecx
  422c9e:	sbb    DWORD PTR [eax-0x51],edx
  422ca1:	jnp    0x422ce5
  422ca3:	sbb    ch,bh
  422ca5:	aas    
  422ca6:	xchg   edx,eax
  422ca7:	and    ah,BYTE PTR [ecx-0x60]
  422caa:	pushf  
  422cab:	cmc    
  422cac:	dec    esp
  422cad:	sar    DWORD PTR [edx-0x568c2c99],cl
  422cb3:	sub    edx,DWORD PTR ds:0x38a0caf
  422cb9:	push   ebx
  422cba:	aam    0x29
  422cbc:	push   edx
  422cbd:	sbb    esp,edi
  422cbf:	inc    esp
  422cc0:	sbb    al,0xe6
  422cc2:	lea    ecx,[esi-0x65258ce8]
  422cc8:	retf   
  422cc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422cca:	or     DWORD PTR [eax],0x74
  422ccd:	loope  0x422c80
  422ccf:	push   edx
  422cd0:	rcr    ebx,0xe9
  422cd3:	pop    esp
  422cd4:	shr    BYTE PTR [esi-0x76923ad6],cl
  422cda:	(bad)  
  422cdb:	mov    esi,fs
  422cdd:	xchg   ecx,eax
  422cde:	fnstcw WORD PTR [ecx+ecx*2+0x26a7f32e]
  422ce5:	test   al,0xc8
  422ce7:	in     eax,0x1f
  422ce9:	out    dx,al
  422cea:	and    BYTE PTR [ebx+0xa],ah
  422ced:	lock pop esp
  422cef:	fsubr  DWORD PTR [edi+0x38c76b58]
  422cf5:	jmp    0x422ccf
  422cf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422cf8:	idiv   ch
  422cfa:	ins    BYTE PTR es:[edi],dx
  422cfb:	stos   DWORD PTR es:[edi],eax
  422cfc:	(bad)  
  422cfd:	mov    al,0x2
  422cff:	inc    eax
  422d00:	xchg   BYTE PTR [edx-0x630455c9],ch
  422d06:	push   esi
  422d07:	cwde   
  422d08:	lods   al,BYTE PTR ds:[esi]
  422d09:	std    
  422d0a:	push   cs
  422d0b:	sub    esp,DWORD PTR [ebx-0x774537a0]
  422d11:	cmp    cl,BYTE PTR [eax]
  422d13:	popa   
  422d14:	push   DWORD PTR [edi+0x33f5d2b6]
  422d1a:	mov    ecx,0xedab8310
  422d1f:	fcmovnb st,st(1)
  422d21:	mov    edi,DWORD PTR [eax+0x9]
  422d24:	aaa    
  422d25:	push   0xdccd2a3f
  422d2a:	xor    al,0x9a
  422d2c:	stc    
  422d2d:	stc    
  422d2e:	mov    WORD PTR [edi],ds
  422d30:	dec    esp
  422d31:	pop    es
  422d32:	cmp    al,BYTE PTR [esi-0x662f0670]
  422d38:	push   esp
  422d39:	adc    ebp,DWORD PTR [ecx+0x56]
  422d3c:	repnz es out dx,eax
  422d3f:	mov    BYTE PTR [ecx+0x62],dh
  422d42:	fwait
  422d43:	rcl    DWORD PTR [ebp+0x35],cl
  422d46:	jmp    0x9b72:0x47a0b3c0
  422d4d:	sub    dh,BYTE PTR [eax+0x4d]
  422d50:	retf   
  422d51:	jnp    0x422d7d
  422d53:	xchg   ebx,eax
  422d54:	or     ebp,DWORD PTR [ebp+edx*1-0x5]
  422d58:	mov    ds:0xff0a3773,eax
  422d5d:	adc    BYTE PTR [ebx+0x155dcfdb],dh
  422d63:	mov    ebp,0x5b64c718
  422d68:	mov    dl,0x7
  422d6a:	imul   DWORD PTR [esi-0x1f7559ac]
  422d70:	fsub   QWORD PTR [edi-0x3efa2f27]
  422d76:	jne    0x422d0d
  422d78:	jge    0x422d1f
  422d7a:	dec    ebp
  422d7b:	call   0x70dd4ffc
  422d80:	mov    eax,0xc50ea549
  422d85:	retf   0x226c
  422d88:	sub    DWORD PTR [edx+0xa],esi
  422d8b:	into   
  422d8c:	pop    eax
  422d8d:	es fs cmps DWORD PTR es:[esi],DWORD PTR es:[edi]
  422d91:	rcr    BYTE PTR [ebp+0x107536e1],1
  422d97:	or     esi,ebp
  422d99:	jmp    0x94777163
  422d9e:	shl    BYTE PTR [ebp+0x52],cl
  422da1:	mov    ds:0xeab0020,eax
  422da6:	dec    ecx
  422da7:	xor    cl,BYTE PTR [ecx+0x49]
  422daa:	repz loopne 0x422d50
  422dad:	pop    eax
  422dae:	je     0x422e10
  422db0:	mov    eax,0x8cb14385
  422db5:	cmc    
  422db6:	jns    0x422db1
  422db8:	dec    edx
  422db9:	clc    
  422dba:	pop    esi
  422dbb:	stos   DWORD PTR es:[edi],eax
  422dbc:	jl     0x422dbb
  422dbe:	push   ebp
  422dbf:	leave  
  422dc0:	out    0xcc,al
  422dc2:	out    0xf8,eax
  422dc4:	inc    edi
  422dc5:	and    ebx,edx
  422dc7:	mov    ah,0x45
  422dc9:	mov    ebp,0x64a52876
  422dce:	retf   
  422dcf:	aam    0x25
  422dd1:	cmp    cl,BYTE PTR [eax-0x19]
  422dd4:	inc    ebx
  422dd5:	mov    cl,BYTE PTR [esi]
  422dd7:	mov    bl,0xb8
  422dd9:	mov    dh,0x5c
  422ddb:	out    0x2f,al
  422ddd:	aas    
  422dde:	jmp    DWORD PTR [ebx+ebp*2+0x6d]
  422de2:	mov    esp,0xcaa89780
  422de7:	inc    ebx
  422de8:	push   eax
  422de9:	retf   
  422dea:	mov    esp,0x8f9199c9
  422def:	xchg   ebx,eax
  422df0:	retf   
  422df1:	aaa    
  422df2:	pop    edi
  422df3:	inc    ebx
  422df4:	or     bh,BYTE PTR [edx+0x19]
  422df7:	xchg   ebp,eax
  422df8:	sbb    al,BYTE PTR [edi+0x57b6f1c5]
  422dfe:	mov    ah,bh
  422e00:	jb     0x422dac
  422e02:	into   
  422e03:	addr16 xchg edi,eax
  422e05:	jmp    0x422e51
  422e07:	dec    eax
  422e08:	sub    BYTE PTR [eax-0x4b],bl
  422e0b:	ss out 0xb4,eax
  422e0e:	inc    esi
  422e0f:	cmp    BYTE PTR ds:[edi+ecx*1],cl
  422e13:	xchg   ebp,eax
  422e14:	or     ecx,DWORD PTR [eax+0x32]
  422e17:	arpl   WORD PTR [eax],bp
  422e19:	cli    
  422e1a:	mov    dl,0xca
  422e1c:	and    al,0x16
  422e1e:	inc    esp
  422e1f:	and    dl,BYTE PTR [ebx-0x26e7ff98]
  422e25:	scas   eax,DWORD PTR es:[edi]
  422e26:	enter  0x3eb6,0xb6
  422e2a:	add    eax,DWORD PTR ds:0x4c4d46b
  422e30:	or     eax,0x8f1e7924
  422e35:	pop    ebx
  422e36:	in     eax,0x5a
  422e38:	retf   
  422e39:	lea    esp,[ebp-0x5b]
  422e3c:	adc    al,0x51
  422e3e:	(bad)  
  422e3f:	xchg   ebp,eax
  422e40:	sbb    eax,0x42d5c997
  422e45:	(bad)  
  422e46:	loop   0x422e8b
  422e48:	push   ss
  422e49:	push   es
  422e4a:	pop    edi
  422e4b:	push   0x4c
  422e4d:	mov    al,ds:0x65e3f84
  422e52:	push   0x72
  422e54:	hlt    
  422e55:	cwde   
  422e56:	aaa    
  422e57:	ror    esi,cl
  422e59:	cmp    eax,DWORD PTR [ecx+eiz*4-0xf8a2301]
  422e60:	ret    0x1bae
  422e63:	push   ebx
  422e64:	sub    eax,0xdf8f9bba
  422e69:	or     BYTE PTR [ebx+0x71a7d50e],bh
  422e6f:	jae    0x422ebb
  422e71:	pop    es
  422e72:	inc    ebp
  422e73:	push   esi
  422e74:	test   DWORD PTR [ebx-0x39],ebx
  422e77:	neg    DWORD PTR [ebx+0x0]
  422e7a:	lea    edx,[ebp-0x65]
  422e7d:	dec    ecx
  422e7e:	xlat   BYTE PTR ds:[ebx]
  422e7f:	outs   dx,DWORD PTR ds:[esi]
  422e80:	sbb    DWORD PTR [edx],0x1b
  422e83:	std    
  422e84:	stos   BYTE PTR es:[edi],al
  422e85:	push   eax
  422e86:	xor    BYTE PTR [ecx-0x2bcb7de2],bh
  422e8c:	push   0x8629555c
  422e91:	inc    ebp
  422e92:	(bad)
  422e95:	inc    esi
  422e96:	(bad)  
  422e97:	sub    al,0x73
  422e99:	pop    es
  422e9a:	adc    al,0x3e
  422e9c:	js     0x422e8b
  422e9e:	jae    0x422e20
  422ea0:	dec    esi
  422ea1:	test   DWORD PTR [edx+0x62],edx
  422ea4:	mov    ss,WORD PTR [ebx+0x11]
  422ea7:	mov    ebp,0x8b12c878
  422eac:	mov    dl,0x93
  422eae:	push   ebx
  422eaf:	mov    ah,0x32
  422eb1:	pop    es
  422eb2:	push   esi
  422eb3:	pop    esi
  422eb4:	cmp    ecx,esi
  422eb6:	jge    0x422ef8
  422eb8:	addr16 add eax,0xbd0e582c
  422ebe:	sub    al,0x7
  422ec0:	inc    edx
  422ec1:	mov    dh,0x74
  422ec3:	nop
  422ec4:	test   al,0x21
  422ec6:	add    eax,0x8a6f4a80
  422ecb:	pop    es
  422ecc:	pop    edi
  422ecd:	mov    bh,0xd4
  422ecf:	mov    al,ds:0x6c6767e5
  422ed4:	jb     0x422eb2
  422ed6:	mov    ds:0x543e0b8a,eax
  422edb:	add    eax,0x3ba40135
  422ee0:	das    
  422ee1:	mov    al,0xdd
  422ee3:	mov    ecx,0x65c3d0af
  422ee8:	scas   eax,DWORD PTR es:[edi]
  422ee9:	ret    0x4ed7
  422eec:	cwde   
  422eed:	loopne 0x422ee3
  422eef:	lods   eax,DWORD PTR ds:[esi]
  422ef0:	or     al,0x95
  422ef2:	test   ebx,ebp
  422ef4:	mov    esp,DWORD PTR [ecx+esi*1-0x6fb7d626]
  422efb:	sbb    BYTE PTR [edx-0xa18323],al
  422f01:	adc    edi,edi
  422f03:	sbb    al,0xbc
  422f05:	mov    ebx,0x33c26f88
  422f0a:	cmp    ch,BYTE PTR [ecx-0x1a]
  422f0d:	(bad)  
  422f0f:	sub    DWORD PTR ds:0xdd2dbe5f,esi
  422f15:	test   eax,0x9107e3d9
  422f1a:	enter  0x57de,0xe5
  422f1e:	outs   dx,BYTE PTR ds:[esi]
  422f1f:	cmp    BYTE PTR [esi],0xd
  422f22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f23:	ror    eax,1
  422f25:	jb     0x422ec6
  422f27:	sub    edi,DWORD PTR [edx+0x32]
  422f2a:	mov    bh,0x17
  422f2c:	mov    DWORD PTR [edx-0x47d08434],ebx
  422f32:	mov    ds:0xe10458a5,eax
  422f37:	pop    esp
  422f38:	retf   
  422f39:	xchg   esi,eax
  422f3a:	pushf  
  422f3b:	xchg   esi,eax
  422f3c:	iret   
  422f3d:	jmp    0xc6fc3558
  422f42:	aas    
  422f43:	adc    DWORD PTR [ecx+0x755cd8ff],esi
  422f49:	stos   BYTE PTR es:[edi],al
  422f4a:	adc    BYTE PTR ds:[eax],0x59
  422f4e:	dec    esp
  422f4f:	(bad)  
  422f50:	jae    0x422faf
  422f52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f53:	jbe    0x422f63
  422f55:	int    0xd3
  422f57:	inc    ebx
  422f58:	mov    edx,0x4acf4053
  422f5d:	sti    
  422f5e:	(bad)  
  422f5f:	stos   DWORD PTR es:[edi],eax
  422f60:	adc    bl,BYTE PTR [esi-0x1a]
  422f63:	xchg   ebx,eax
  422f64:	mov    eax,ds:0xefd4b6be
  422f69:	call   0x5eb4:0xb8590b4c
  422f70:	jnp    0x422f6d
  422f72:	xor    al,0xc0
  422f74:	les    ecx,FWORD PTR [ebx+edi*4+0x71f36139]
  422f7b:	jbe    0x422fa8
  422f7d:	out    0xb3,eax
  422f7f:	add    eax,0xe8737cb1
  422f84:	mov    DWORD PTR [edx+0x4662b2a],0xd396f740
  422f8e:	xor    esi,DWORD PTR [edi]
  422f90:	mov    BYTE PTR [ecx+0x111021e8],0xb
  422f97:	adc    edi,DWORD PTR [ecx+0x63]
  422f9a:	imul   ecx,esp,0xe00be574
  422fa0:	out    dx,al
  422fa1:	mov    bl,0xc8
  422fa3:	rol    DWORD PTR [ecx+0xa031b],1
  422fa9:	ret    
  422faa:	sub    DWORD PTR [edi+0x24],ecx
  422fad:	pop    ss
  422fae:	test   al,0x4
  422fb0:	mov    ch,0x79
  422fb2:	div    DWORD PTR [edx+0x3f]
  422fb5:	mov    ah,0x35
  422fb7:	sahf   
  422fb8:	or     al,0x15
  422fba:	xor    cl,dh
  422fbc:	and    ebp,DWORD PTR [ecx]
  422fbe:	(bad)  
  422fbf:	iret   
  422fc0:	test   al,0x95
  422fc2:	push   esp
  422fc3:	ret    0x344d
  422fc6:	call   0xbfe9:0xf8d40720
  422fcd:	sub    BYTE PTR [ebx-0x63],0xa5
  422fd1:	cwde   
  422fd2:	cmp    al,0xc5
  422fd4:	(bad)  
  422fd5:	dec    edx
  422fd6:	mov    bh,0xe
  422fd8:	retf   0xc881
  422fdb:	iret   
  422fdc:	scas   eax,DWORD PTR es:[edi]
  422fdd:	add    al,0xc7
  422fdf:	(bad)  
  422fe0:	sub    DWORD PTR [eax+0x65],esi
  422fe3:	(bad)  
  422fe4:	sbb    BYTE PTR [edx-0x4e500507],al
  422fea:	rol    BYTE PTR [ebx+eiz*1+0x6],1
  422fee:	mov    esp,0xd9e2bb9f
  422ff3:	repz pop ebx
  422ff5:	jmp    0x52c6:0xad3f6a56
  422ffc:	int    0xd8
  422ffe:	xchg   BYTE PTR ds:[ebp-0x66],ah
  423002:	inc    edx
  423003:	repnz (bad) 
  423006:	add    BYTE PTR [edx],ch
  423008:	je     0x42307d
  42300a:	sbb    al,0xc0
  42300c:	jge    0x422ffc
  42300e:	add    BYTE PTR [ebx-0x75],dh
  423011:	push   cs
  423012:	mov    bh,0xc4
  423014:	and    bl,BYTE PTR [edi+0x1f]
  423017:	das    
  423018:	neg    edx
  42301a:	ins    DWORD PTR es:[edi],dx
  42301b:	test   BYTE PTR [esi-0x54],dl
  42301e:	data16 gs cmc 
  423021:	and    esi,esi
  423023:	xlat   BYTE PTR ds:[ebx]
  423024:	cmp    cl,BYTE PTR [edi+0x5c]
  423027:	aad    0xfe
  423029:	icebp  
  42302a:	ja     0x422fe5
  42302c:	mov    edx,0x35f729e
  423031:	test   eax,0x741e3738
  423036:	popa   
  423037:	sub    ch,bh
  423039:	ret    0xcb8a
  42303c:	cmp    edx,DWORD PTR [eax-0x57793939]
  423042:	inc    eax
  423043:	neg    BYTE PTR [esi]
  423045:	rdpmc  
  423047:	outs   dx,BYTE PTR ds:[esi]
  423048:	mov    dl,0xbc
  42304a:	scas   al,BYTE PTR es:[edi]
  42304b:	sbb    esi,DWORD PTR [ebx+esi*2+0x42]
  42304f:	cmp    al,0x3d
  423051:	fwait
  423052:	mov    esi,0x624fad30
  423057:	mov    dl,0x2
  423059:	xchg   esp,eax
  42305a:	fidivr DWORD PTR [edx-0x2f]
  42305d:	ficomp DWORD PTR [ebp+0x3]
  423060:	setns  BYTE PTR [edi]
  423063:	cmp    eax,0xd7827fb1
  423068:	or     BYTE PTR [esi-0x4c],bh
  42306b:	clc    
  42306c:	sar    DWORD PTR es:[ecx-0x8ed51ea],1
  423073:	fs xor ebx,eax
  423076:	test   al,0xdd
  423078:	cmp    edx,0xb
  42307b:	aaa    
  42307c:	pop    ebx
  42307d:	cmp    al,0x42
  42307f:	jg     0x4230cc
  423081:	les    edx,FWORD PTR [ecx-0x46cebb6f]
  423087:	mov    ebp,0x4faa576b
  42308c:	cmp    eax,0x76f370a9
  423091:	sub    DWORD PTR [eax-0x55],0x36198def
  423098:	not    al
  42309a:	pop    edi
  42309b:	out    0xcb,eax
  42309d:	(bad)  
  42309e:	mov    eax,0x6406d1f3
  4230a3:	(bad)  
  4230a4:	mov    ebx,0x7bc385b1
  4230a9:	jno    0x4230c1
  4230ab:	mov    ah,0x84
  4230ad:	fcomp  DWORD PTR [eax+0x55fdb4ee]
  4230b3:	xchg   esi,eax
  4230b4:	lods   eax,DWORD PTR ds:[esi]
  4230b5:	fs pop ds
  4230b7:	mov    al,ds:0x30029c27
  4230bc:	pop    ss
  4230bd:	jo     0x423132
  4230bf:	jp     0x423062
  4230c1:	mov    bh,0x11
  4230c3:	imul   esp,DWORD PTR [eax],0x7a7fa1de
  4230c9:	jecxz  0x423133
  4230cb:	call   0xacdf847e
  4230d0:	ins    DWORD PTR es:[edi],dx
  4230d1:	mov    esi,0x3f595962
  4230d6:	out    0x29,al
  4230d8:	and    DWORD PTR [ebx],0xba8fd713
  4230de:	cmp    edi,DWORD PTR [ebx]
  4230e0:	imul   esp,DWORD PTR gs:[esi-0x13],0x2b670aac
  4230e8:	pusha  
  4230e9:	(bad)  
  4230ea:	in     eax,0xe8
  4230ec:	sub    BYTE PTR [ecx+0x48],al
  4230ef:	data16 sbb al,0x2e
  4230f2:	and    al,bl
  4230f4:	fcomp  QWORD PTR [edx+0x30]
  4230f7:	mov    ch,0x15
  4230f9:	sbb    eax,0xde3caeda
  4230fe:	xchg   ebp,eax
  4230ff:	pop    es
  423100:	mov    bl,0x33
  423102:	sbb    al,BYTE PTR [edx+0x1b]
  423105:	popa   
  423106:	sti    
  423107:	out    0x50,eax
  423109:	(bad)  
  42310a:	es mov dl,0xa0
  42310d:	int3   
  42310e:	(bad)  
  42310f:	(bad)  
  423110:	pop    ds
  423111:	clc    
  423112:	inc    ebx
  423113:	inc    eax
  423114:	mov    ah,0x99
  423116:	and    eax,ebp
  423118:	idiv   BYTE PTR [eax-0x36]
  42311b:	dec    eax
  42311c:	outs   dx,DWORD PTR ds:[esi]
  42311d:	lock mov ch,0x46
  423120:	jnp    0x423104
  423122:	stc    
  423123:	fcmove st,st(7)
  423125:	dec    esi
  423126:	ins    DWORD PTR es:[edi],dx
  423127:	enter  0x6131,0xee
  42312b:	ret    
  42312c:	jns    0x423132
  42312e:	mov    eax,es
  423130:	out    0x51,al
  423132:	loope  0x42317a
  423134:	jne    0x4230bb
  423136:	aaa    
  423137:	mov    ebp,0x67a6516
  42313c:	es cmp ch,dh
  42313f:	inc    DWORD PTR ds:0x37bc5c62
  423145:	xor    eax,esp
  423147:	retf   
  423148:	int    0xcc
  42314a:	retf   
  42314b:	sahf   
  42314c:	dec    ebx
  42314d:	aaa    
  42314e:	mov    ecx,DWORD PTR [edi]
  423150:	mov    al,ds:0x416583c4
  423155:	xor    bl,BYTE PTR [ebx]
  423157:	lods   al,BYTE PTR ds:[esi]
  423158:	test   al,0x82
  42315a:	cmp    eax,0x6cd7e850
  42315f:	mov    esi,0x6316ba3f
  423164:	push   0x84ec5087
  423169:	xlat   BYTE PTR ds:[ebx]
  42316a:	and    DWORD PTR [ebx+0x458f1fcc],0xffffff8e
  423171:	adc    al,0x10
  423173:	jno    0x4231af
  423175:	push   ds
  423176:	aam    0xce
  423178:	ret    0xb187
  42317b:	fst    QWORD PTR [ebx+eax*8]
  42317e:	mov    WORD PTR [edi+0x3a],?
  423181:	iret   
  423182:	es test eax,0x633c7a28
  423188:	mov    ecx,0xaec82895
  42318d:	cmp    ebp,DWORD PTR [eax-0x151b7766]
  423193:	pop    ecx
  423194:	stos   BYTE PTR es:[edi],al
  423195:	outs   dx,BYTE PTR ds:[esi]
  423196:	pop    edi
  423197:	aas    
  423198:	int    0x28
  42319a:	vhsubps ymm6,ymm5,ymm4
  42319e:	dec    ebp
  42319f:	in     al,dx
  4231a0:	sbb    al,0x4c
  4231a2:	ins    DWORD PTR es:[edi],dx
  4231a3:	sub    BYTE PTR [eax],0x2b
  4231a6:	outs   dx,DWORD PTR ds:[esi]
  4231a7:	dec    esi
  4231a8:	push   ecx
  4231a9:	ss mov dh,0x71
  4231ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4231ad:	cmp    bh,ch
  4231af:	cmc    
  4231b0:	or     edx,DWORD PTR [edi-0x61]
  4231b3:	or     cl,BYTE PTR [ebx+0x22]
  4231b6:	or     BYTE PTR [eax],bh
  4231b8:	shr    DWORD PTR [ebp-0xec20a73],cl
  4231be:	jnp    0x42321b
  4231c0:	es pop ds
  4231c2:	aad    0x70
  4231c4:	jmp    0x423208
  4231c6:	add    BYTE PTR [eax+edx*4-0x6b7de0c3],0x93
  4231ce:	pop    ebp
  4231cf:	inc    edi
  4231d0:	xor    al,0xda
  4231d2:	retf   
  4231d3:	sbb    al,0xb0
  4231d5:	enter  0x4b0c,0x19
  4231d9:	ret    0x9e46
  4231dc:	pop    esp
  4231dd:	cli    
  4231de:	mov    ebx,DWORD PTR [edi]
  4231e0:	mov    ds:0xda1467c1,eax
  4231e5:	scas   eax,DWORD PTR es:[edi]
  4231e6:	jno    0x4231ab
  4231e8:	dec    ebp
  4231e9:	mov    bl,0xde
  4231eb:	aas    
  4231ec:	mul    DWORD PTR [esp+edi*4+0x6477b10e]
  4231f3:	or     dl,BYTE PTR [edx]
  4231f5:	(bad)  
  4231f7:	sbb    BYTE PTR [ebx],bl
  4231f9:	mov    edx,0xd8fa3f73
  4231fe:	and    eax,0xfc4fc924
  423203:	inc    ebx
  423204:	adc    BYTE PTR [ebx-0x440523a3],ah
  42320a:	dec    eax
  42320b:	cdq    
  42320c:	jmp    0x4231f3
  42320e:	dec    esp
  42320f:	mov    ds:0x16468fa,al
  423214:	cmp    DWORD PTR ds:0xa997bf3,ecx
  42321a:	mov    ch,0xe
  42321c:	addr16 ret 
  42321e:	call   0x372d:0x900f9017
  423225:	shl    BYTE PTR ds:0xd90e3f70,1
  42322b:	pop    esi
  42322c:	out    0xb6,al
  42322e:	cmp    cl,cl
  423230:	pop    ds
  423231:	ins    BYTE PTR es:[edi],dx
  423232:	jg     0x42329d
  423234:	inc    ebx
  423235:	sub    DWORD PTR [eax+0x49838f66],ebx
  42323b:	or     cl,BYTE PTR [eax-0x50a385f4]
  423241:	out    dx,al
  423242:	daa    
  423243:	rcl    BYTE PTR [ebx-0x33],0x80
  423247:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423248:	mov    dl,0xf7
  42324a:	jmp    0x55415681
  42324f:	pop    ebp
  423250:	mov    ebx,DWORD PTR [ecx-0x3e8dcf76]
  423256:	xchg   ecx,eax
  423257:	push   ebx
  423258:	sub    DWORD PTR [edx-0x35],edi
  42325b:	fiadd  WORD PTR ds:0x14edf08b
  423261:	data16 (bad) 
  423264:	dec    ecx
  423265:	mov    ebx,0x88520bf9
  42326a:	stos   BYTE PTR es:[edi],al
  42326b:	sbb    bl,BYTE PTR [edi]
  42326d:	out    dx,eax
  42326e:	scas   al,BYTE PTR es:[edi]
  42326f:	and    eax,0x20a3276d
  423274:	mov    ?,WORD PTR [edx-0x23b4342d]
  42327a:	jno    0x42322e
  42327c:	cmp    BYTE PTR [edi],cl
  42327e:	sub    al,0x5e
  423280:	and    DWORD PTR [ecx],ebp
  423282:	ffree  st(2)
  423284:	add    al,0xa1
  423286:	test   BYTE PTR [ebx-0x14],0x19
  42328a:	dec    esi
  42328b:	inc    ecx
  42328c:	aam    0x52
  42328e:	and    esi,DWORD PTR [ecx-0x52]
  423291:	sbb    dl,ah
  423293:	adc    edx,esi
  423295:	stos   DWORD PTR es:[edi],eax
  423296:	push   cs
  423297:	inc    ecx
  423298:	adc    ebp,DWORD PTR [edi]
  42329a:	sub    ecx,eax
  42329c:	das    
  42329d:	xor    BYTE PTR [esi+ebp*2],ch
  4232a0:	lods   eax,DWORD PTR ds:[esi]
  4232a1:	out    dx,al
  4232a2:	nop
  4232a3:	mov    eax,ds:0x24ca0236
  4232a8:	inc    ecx
  4232a9:	inc    eax
  4232aa:	inc    edi
  4232ab:	cwde   
  4232ac:	xchg   ebp,eax
  4232ad:	push   ebp
  4232ae:	test   eax,0xba7e37ca
  4232b3:	(bad)  
  4232b4:	stc    
  4232b5:	clc    
  4232b6:	jb     0x423313
  4232b8:	call   0x537:0xb1779789
  4232bf:	in     al,dx
  4232c0:	jmp    0xeb00:0x4cd2386e
  4232c7:	cmc    
  4232c8:	xor    al,0xae
  4232ca:	dec    edx
  4232cb:	ins    BYTE PTR es:[edi],dx
  4232cc:	sub    BYTE PTR [edx-0x44f1605a],dl
  4232d2:	push   esi
  4232d3:	fild   QWORD PTR [ebx]
  4232d5:	daa    
  4232d6:	mov    eax,ds:0x9bc7a634
  4232db:	int    0x9c
  4232dd:	push   ebx
  4232de:	cmp    esp,ebx
  4232e0:	xchg   ebp,eax
  4232e1:	inc    eax
  4232e2:	mov    eax,ds:0xab94e65a
  4232e7:	popa   
  4232e8:	inc    edx
  4232e9:	pop    ebp
  4232ea:	or     eax,0x7f4cebc6
  4232ef:	cmp    dl,bl
  4232f1:	mov    WORD PTR ds:0x857b71dd,cs
  4232f7:	(bad)  
  4232f8:	stc    
  4232f9:	jmp    0x635baaa8
  4232fe:	sbb    BYTE PTR [edi-0x4bcd281b],al
  423304:	aaa    
  423305:	mov    cl,0x3b
  423307:	loope  0x423357
  423309:	inc    ebx
  42330a:	(bad)  
  42330b:	(bad)  
  42330c:	mov    cl,0xd1
  42330e:	aad    0x6f
  423310:	es mov ah,0x20
  423313:	inc    ecx
  423314:	xor    al,0x2f
  423316:	mov    esi,0x827f1f2e
  42331b:	imul   esp,DWORD PTR [edx-0x17556819],0x17d2dc07
  423325:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423326:	push   cs
  423327:	push   ebx
  423328:	mov    ah,0x17
  42332a:	gs into 
  42332c:	add    al,0x5e
  42332e:	sub    eax,0x9a0b3ae6
  423333:	test   al,0x91
  423335:	pop    edx
  423336:	xor    al,0xd3
  423338:	div    BYTE PTR [ecx-0x592e483f]
  42333e:	pushf  
  42333f:	fistp  DWORD PTR [ebp-0x28]
  423342:	mov    ecx,0x7a85a5e7
  423347:	xchg   ecx,eax
  423348:	inc    ecx
  423349:	(bad)  
  42334a:	jmp    0xa47a3af7
  42334f:	and    BYTE PTR [ebx+ebp*1],0x7
  423353:	cwde   
  423354:	mov    al,ds:0xc0ec007a
  423359:	icebp  
  42335a:	cmp    dh,BYTE PTR [esi-0x4a19e9e0]
  423360:	push   ebp
  423361:	sub    ecx,edx
  423363:	mov    esp,0x28e56d8e
  423368:	mov    BYTE PTR [edx],al
  42336a:	shr    BYTE PTR [ecx],0x72
  42336d:	inc    ebx
  42336e:	push   ds
  42336f:	xor    eax,DWORD PTR [ebp+0x2d]
  423372:	int    0x25
  423374:	out    dx,al
  423375:	xchg   ecx,eax
  423376:	push   edx
  423377:	jns    0x423342
  423379:	lock shl esp,cl
  42337c:	jecxz  0x423315
  42337e:	pop    ds
  42337f:	fisubr DWORD PTR [edx+0x70c6cc28]
  423385:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423386:	and    al,0x5a
  423388:	jae    0x42333d
  42338a:	inc    eax
  42338b:	cwde   
  42338c:	hlt    
  42338d:	jmp    0x4233c0
  42338f:	mov    bl,0x7b
  423391:	jge    0x423314
  423393:	pop    ds
  423394:	sar    DWORD PTR ds:0x26c23d80,1
  42339a:	int3   
  42339b:	fstp   QWORD PTR [esi-0x2c]
  42339e:	mov    dl,0xc9
  4233a0:	mov    ds:0x38e465bc,eax
  4233a5:	mov    dh,0x24
  4233a7:	imul   esp,ebx,0xb1af1cb4
  4233ad:	sub    DWORD PTR [eax],edi
  4233af:	pop    esp
  4233b0:	xor    eax,0x6518c026
  4233b5:	std    
  4233b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4233b7:	outs   dx,BYTE PTR ds:[esi]
  4233b8:	repnz mov bh,0xb9
  4233bb:	in     al,0x83
  4233bd:	(bad)  
  4233be:	mov    WORD PTR ds:0xe29ff066,fs
  4233c4:	xchg   ebx,eax
  4233c5:	mov    bl,0xb8
  4233c7:	(bad)  
  4233c8:	gs push 0x37
  4233cb:	shl    DWORD PTR [edx+0x38],1
  4233ce:	pop    ebx
  4233cf:	jg     0x42344e
  4233d1:	xchg   BYTE PTR [edi-0xd],bl
  4233d4:	lds    ecx,FWORD PTR [edi]
  4233d6:	je     0x4233f7
  4233d8:	sbb    cl,BYTE PTR ds:0x119ef2fe
  4233de:	pusha  
  4233df:	shr    DWORD PTR [edi+0x5e],1
  4233e2:	and    DWORD PTR [edi+0x6228193d],0x38208d70
  4233ec:	mov    eax,?
  4233ee:	dec    esp
  4233ef:	ss (bad) 
  4233f1:	jle    0x423469
  4233f3:	ret    
  4233f4:	(bad)  
  4233f5:	retf   
  4233f6:	mov    eax,0x80e1b604
  4233fb:	pop    es
  4233fc:	sbb    al,BYTE PTR [edi]
  4233fe:	xchg   edx,eax
  4233ff:	in     al,dx
  423400:	xchg   esp,eax
  423401:	or     cl,BYTE PTR [esp+eiz*2]
  423404:	inc    ecx
  423405:	(bad)  
  423406:	ja     0x4233f6
  423408:	cwde   
  423409:	adc    eax,0xe8d996cf
  42340e:	inc    edi
  42340f:	or     al,0x72
  423411:	fst    st(5)
  423413:	cli    
  423414:	test   al,0xa0
  423416:	push   eax
  423417:	(bad)  
  423418:	cmp    DWORD PTR [ecx],edi
  42341a:	or     bl,0x9b
  42341d:	iret   
  42341e:	cmp    ebx,DWORD PTR [ebp-0x753e2332]
  423424:	fadd   QWORD PTR [ecx+0x5f0de864]
  42342a:	test   al,0x9d
  42342c:	adc    eax,0xd28e89f
  423431:	leave  
  423432:	jne    0x4234a4
  423434:	loop   0x4234aa
  423436:	sti    
  423437:	mov    eax,ds:0xf4e876a3
  42343c:	jae    0x4233ea
  42343e:	cmc    
  42343f:	outs   dx,BYTE PTR ds:[esi]
  423440:	sub    edx,DWORD PTR [esi+0x6b]
  423443:	es mov ch,0x6c
  423446:	mov    WORD PTR [ecx-0x53],ds
  423449:	enter  0xa902,0xad
  42344d:	and    eax,0xead706cb
  423452:	push   ebx
  423453:	call   DWORD PTR [esi+0x32c001ac]
  423459:	xor    eax,0x36bdd901
  42345e:	cmc    
  42345f:	test   al,0x84
  423461:	out    dx,eax
  423462:	jmp    0x13ef114f
  423467:	stos   DWORD PTR es:[edi],eax
  423468:	jbe    0x423406
  42346a:	sub    DWORD PTR [eax],esp
  42346c:	mov    ds:0xd39db014,al
  423471:	(bad)  
  423473:	mov    ds:0x78306951,al
  423478:	sbb    cl,ch
  42347a:	mov    eax,0xe47ad6ed
  42347f:	rcr    DWORD PTR [edx],1
  423481:	mov    eax,0xf73d8f96
  423486:	sti    
  423487:	pop    esp
  423488:	lock sbb ebx,DWORD PTR es:[ebx]
  42348c:	and    eax,0x40074129
  423491:	pop    ecx
  423492:	and    DWORD PTR [edx+eiz*4],esi
  423495:	cmp    bl,cl
  423497:	xlat   BYTE PTR ds:[ebx]
  423498:	push   ss
  423499:	dec    eax
  42349a:	and    dh,bh
  42349c:	call   0x9c89:0x37ccffd1
  4234a3:	jmp    0x1646fed9
  4234a8:	mov    dl,0xca
  4234aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234ab:	cmp    al,0x21
  4234ad:	dec    edi
  4234ae:	mov    dl,0xe
  4234b0:	or     eax,0xe91cbaf
  4234b5:	ds ret 
  4234b7:	cmp    al,dl
  4234b9:	push   esp
  4234ba:	imul   esp,edx,0x7b0e5ef
  4234c0:	xchg   ebp,eax
  4234c1:	fidivr DWORD PTR [ebx+0x72]
  4234c4:	loope  0x42350a
  4234c6:	mov    eax,ds:0xe701ba40
  4234cb:	mov    ebx,0x7eabe092
  4234d0:	ret    0x87
  4234d3:	pop    edx
  4234d4:	adc    esi,DWORD PTR [esi+esi*4-0x247a90d9]
  4234db:	inc    edx
  4234dc:	idiv   DWORD PTR [edi]
  4234de:	out    0xdd,eax
  4234e0:	mov    dl,0xf3
  4234e2:	call   0xd349:0x777fc238
  4234e9:	cmp    al,0xfe
  4234eb:	fisubr DWORD PTR [ebp-0x5f]
  4234ee:	pop    eax
  4234ef:	test   BYTE PTR [ebp+0x531dba49],cl
  4234f5:	nop
  4234f6:	outs   dx,BYTE PTR ds:[esi]
  4234f7:	sbb    edi,ebp
  4234f9:	inc    edx
  4234fa:	jecxz  0x423564
  4234fc:	rol    BYTE PTR [edx-0x66],1
  4234ff:	cmp    al,BYTE PTR [ebp-0x2c]
  423502:	jecxz  0x42351b
  423504:	into   
  423505:	or     bl,BYTE PTR [ebx]
  423507:	push   esi
  423508:	fs jmp 0xe13c:0x35fff817
  423510:	fs ja  0x423585
  423513:	pop    ecx
  423514:	push   es
  423515:	mov    WORD PTR [edi],cs
  423517:	das    
  423518:	inc    ebp
  423519:	mov    cl,0xe6
  42351b:	pusha  
  42351c:	(bad)  
  42351d:	mov    edi,db3
  423520:	sbb    DWORD PTR [esi+edi*8-0x76],ebp
  423524:	test   DWORD PTR [ebx-0x3c],0xe993afe0
  42352b:	and    dl,cl
  42352d:	push   es
  42352e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42352f:	test   BYTE PTR [edx+0x1d],bh
  423532:	retf   
  423533:	bnd call 0xac41bbe4
  423539:	(bad)  
  42353a:	xor    DWORD PTR ds:0x73222b7d,ebx
  423540:	jbe    0x423550
  423542:	dec    ebx
  423543:	loop   0x4234cd
  423545:	inc    eax
  423546:	push   esi
  423547:	mov    ds:0x9d8b7fdf,al
  42354c:	pop    esp
  42354d:	dec    ebx
  42354e:	mov    cl,bl
  423550:	sub    eax,0x28460cc9
  423555:	mov    ds:0x6e7decd,eax
  42355a:	aad    0xa7
  42355c:	or     ebp,esp
  42355e:	cmc    
  42355f:	(bad)  
  423560:	xchg   edi,eax
  423561:	ins    BYTE PTR es:[di],dx
  423563:	addr16 jl 0x42351c
  423566:	cmp    BYTE PTR [ebp+0x6654ffae],bl
  42356c:	and    eax,0xf9e11788
  423571:	clc    
  423572:	std    
  423573:	shl    BYTE PTR [eax-0x3c2ac8c8],cl
  423579:	ins    DWORD PTR es:[edi],dx
  42357a:	cmp    eax,0xd74406e9
  42357f:	stos   BYTE PTR es:[edi],al
  423580:	gs arpl bp,bx
  423583:	ins    BYTE PTR es:[edi],dx
  423584:	mov    ecx,0xbb8a9685
  423589:	in     eax,0x60
  42358b:	aas    
  42358c:	inc    DWORD PTR [edi+esi*4]
  42358f:	inc    ecx
  423590:	outs   dx,DWORD PTR ds:[esi]
  423591:	cdq    
  423592:	xchg   DWORD PTR ds:0x854a6db6,edi
  423598:	lock mov eax,ds:0x20347dec
  42359e:	mov    al,BYTE PTR [ecx-0x2e]
  4235a1:	add    BYTE PTR [eax],ah
  4235a3:	repnz dec ebp
  4235a5:	ins    DWORD PTR es:[edi],dx
  4235a6:	ins    DWORD PTR es:[edi],dx
  4235a7:	and    BYTE PTR [eax-0x74062232],ch
  4235ad:	out    0xef,eax
  4235af:	push   ecx
  4235b0:	in     al,0xb
  4235b2:	mov    ecx,0x95f52646
  4235b7:	mov    ebp,0xf09e0af4
  4235bc:	pop    ds
  4235bd:	mov    bh,0x4c
  4235bf:	push   cs
  4235c0:	fs mov edx,0x2c7118f5
  4235c6:	sub    bl,BYTE PTR [edx+0x40961b03]
  4235cc:	inc    esp
  4235cd:	jmp    0x423589
  4235cf:	pop    esi
  4235d0:	icebp  
  4235d1:	pop    ds
  4235d2:	xor    cl,BYTE PTR [esi-0x5c]
  4235d5:	les    ecx,FWORD PTR [eax+0x4]
  4235d8:	and    BYTE PTR [ecx],al
  4235da:	fcmovne st,st(4)
  4235dc:	aad    0xdf
  4235de:	stc    
  4235df:	stos   DWORD PTR es:[edi],eax
  4235e0:	sbb    al,0x8b
  4235e2:	mov    ds:0xe97af0cb,al
  4235e7:	aas    
  4235e8:	jmp    0x42358e
  4235ea:	mov    ds:0x85221162,eax
  4235ef:	jmp    0xce5c21e
  4235f4:	mov    ebx,0x60618792
  4235f9:	add    al,0x8
  4235fb:	and    BYTE PTR [edi-0x73],bh
  4235fe:	ds cli 
  423600:	dec    edx
  423601:	dec    edx
  423602:	scas   eax,DWORD PTR es:[edi]
  423603:	(bad)  
  423604:	in     eax,dx
  423605:	sahf   
  423606:	mov    dl,0xee
  423608:	mov    bl,0x91
  42360a:	mov    ch,0x24
  42360c:	test   eax,0x3f1e0ea2
  423611:	sub    DWORD PTR [ebx],eax
  423613:	mov    ebp,0x6fd10ed9
  423618:	stos   DWORD PTR es:[edi],eax
  423619:	les    si,DWORD PTR [esi-0x7f]
  42361d:	inc    esi
  42361e:	or     al,0xa2
  423620:	mov    cl,0xd6
  423622:	sbb    esi,DWORD PTR [edx+0x2cd1e1b8]
  423628:	mov    ebx,DWORD PTR [ebx]
  42362a:	xor    dh,BYTE PTR [edx-0x1df17ca0]
  423630:	pop    esi
  423631:	loopne 0x4235db
  423633:	mov    eax,ds:0xf86d2ed2
  423638:	call   0x19db:0xc5a66fa0
  42363f:	mov    dl,0x6d
  423641:	mov    dl,0xcc
  423643:	jp     0x4235d3
  423645:	xchg   edx,eax
  423646:	jae    0x423671
  423648:	retf   0xcddd
  42364b:	xchg   ebp,eax
  42364c:	stc    
  42364d:	test   al,0x22
  42364f:	or     esi,DWORD PTR ds:0x3362bd19
  423655:	lods   eax,DWORD PTR ds:[esi]
  423656:	daa    
  423657:	pushf  
  423658:	js     0x4236d4
  42365a:	xchg   BYTE PTR [eax-0x4cf0ae0f],ah
  423660:	adc    ebp,esi
  423662:	fwait
  423663:	or     bh,BYTE PTR [esi+0x50157cac]
  423669:	popa   
  42366a:	add    eax,0x46000eaf
  42366f:	fcomp  QWORD PTR [edx-0x262af73b]
  423675:	mov    ebx,0xb1d9d069
  42367a:	cs mov bl,0x5e
  42367d:	ror    BYTE PTR [edx-0x1b],1
  423680:	mov    ?,WORD PTR [edx+edx*4]
  423683:	push   eax
  423684:	mov    cl,0x34
  423686:	jge    0x42363c
  423688:	jnp    0x42361b
  42368a:	pusha  
  42368b:	cli    
  42368c:	cmp    BYTE PTR es:[esi-0x8],al
  423690:	into   
  423691:	add    eax,0xe8853997
  423696:	and    eax,0xf16a250f
  42369b:	mov    ebp,0xba0b818a
  4236a0:	mov    al,ds:0xf4ba04c2
  4236a5:	push   esp
  4236a6:	hlt    
  4236a7:	call   0xc25c:0x4ea439eb
  4236ae:	retf   0xc0bf
  4236b1:	data16 loop 0x423681
  4236b4:	sub    BYTE PTR [edi+0x34],ah
  4236b7:	jae    0x4236c0
  4236b9:	dec    edi
  4236ba:	(bad)  
  4236bb:	jo     0x4236b1
  4236bd:	stos   DWORD PTR es:[edi],eax
  4236be:	bound  ebx,QWORD PTR ds:0x3f18dfd6
  4236c4:	mov    esi,0xfe49d57a
  4236c9:	mov    bh,0x3c
  4236cb:	jmp    0xb82265ea
  4236d0:	and    BYTE PTR [esi+ebp*1+0x3211ed2b],dh
  4236d7:	mov    eax,ds:0xd6924a8c
  4236dc:	sbb    eax,0x5660fbad
  4236e1:	sbb    al,0x76
  4236e3:	or     edi,edx
  4236e5:	shr    BYTE PTR [esi],1
  4236e7:	in     al,0x16
  4236e9:	xchg   edi,eax
  4236ea:	rcl    cl,1
  4236ec:	loope  0x4236a3
  4236ee:	iret   
  4236ef:	push   ecx
  4236f0:	mov    bl,BYTE PTR [edi+0x58]
  4236f3:	dec    ebp
  4236f4:	jge    0x4236ea
  4236f6:	cmp    edi,DWORD PTR [eax-0x6c74ac5]
  4236fc:	adc    DWORD PTR ds:0x566bec2e,edi
  423702:	dec    esp
  423703:	dec    ebx
  423704:	mov    dl,0xdb
  423706:	inc    esi
  423707:	(bad)  
  423709:	fld    QWORD PTR [eax]
  42370b:	xor    dh,BYTE PTR [edx+ebx*1]
  42370e:	ret    0xd0c
  423711:	je     0x42378e
  423713:	push   ebx
  423714:	mov    eax,ds:0x8d94bb95
  423719:	add    dl,bl
  42371b:	(bad)  
  42371d:	sti    
  42371e:	shr    DWORD PTR [edx+0x6f],cl
  423721:	out    dx,al
  423722:	leave  
  423723:	aaa    
  423724:	pop    ds
  423725:	push   ebp
  423726:	or     al,0xb9
  423728:	mov    ebx,0xf755d05d
  42372d:	mov    edx,0x483e3533
  423732:	mov    DWORD PTR [edx+0x19],edx
  423735:	dec    edi
  423736:	rcr    BYTE PTR [edx-0x7b],0xe8
  42373a:	lods   eax,DWORD PTR ds:[esi]
  42373b:	ins    BYTE PTR es:[edi],dx
  42373c:	inc    esi
  42373d:	jecxz  0x4236cb
  42373f:	pop    edi
  423740:	mov    edx,0xf7e20c99
  423745:	daa    
  423746:	push   0xffffff89
  423748:	lahf   
  423749:	xlat   BYTE PTR ds:[ebx]
  42374a:	mov    WORD PTR [edi+0x5690dbb0],?
  423750:	inc    ecx
  423751:	pop    ss
  423752:	fldenv [edi+edi*1-0x1e517ecc]
  423759:	std    
  42375a:	dec    eax
  42375b:	ret    
  42375c:	dec    edi
  42375d:	push   edi
  42375e:	rcl    BYTE PTR [edx],cl
  423760:	inc    ecx
  423761:	popa   
  423762:	fsubr  QWORD PTR [edi]
  423764:	aad    0xca
  423766:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423767:	and    BYTE PTR [esi+0x35d1fd77],0xa6
  42376e:	jmp    0x589e:0x8f5d4fcd
  423775:	and    al,0xa0
  423777:	xor    DWORD PTR [ebp-0x1f],edx
  42377a:	ins    DWORD PTR es:[edi],dx
  42377b:	jb     0x4237c2
  42377d:	xchg   ebx,eax
  42377e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42377f:	pop    esi
  423780:	inc    edx
  423781:	push   ecx
  423782:	xor    esp,DWORD PTR [esp+0x3b]
  423786:	push   ss
  423787:	push   ss
  423788:	add    DWORD PTR [ebp+0x52b66bea],0xffffffb6
  42378f:	add    eax,0x3d82855b
  423794:	ret    
  423795:	inc    esi
  423797:	mov    dl,0xdc
  423799:	ins    BYTE PTR es:[edi],dx
  42379a:	jae    0x4237c6
  42379c:	fstp   QWORD PTR [edx+eax*2]
  42379f:	pop    eax
  4237a0:	scas   eax,DWORD PTR es:[edi]
  4237a1:	lock xor ebx,ebx
  4237a4:	dec    ebp
  4237a5:	jge    0x4237c1
  4237a7:	adc    al,0x26
  4237a9:	shl    BYTE PTR [ecx],1
  4237ab:	pop    esi
  4237ac:	fsubrp st(4),st
  4237ae:	xchg   DWORD PTR [ebx+0x1],ecx
  4237b1:	add    ebx,esp
  4237b3:	mov    edx,0x6bbf2d84
  4237b8:	pop    DWORD PTR [edx-0x758a7b38]
  4237be:	fild   QWORD PTR [ebp+0x5b]
  4237c1:	mov    ecx,0x2f663c44
  4237c6:	inc    edi
  4237c7:	repz sub bh,BYTE PTR [ebx-0x58875665]
  4237ce:	mov    DWORD PTR [ebp+0x29],esi
  4237d1:	xchg   esi,eax
  4237d2:	fdivr  QWORD PTR [ebx-0x3e70d689]
  4237d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237d9:	rcr    al,cl
  4237db:	(bad)  
  4237dd:	push   edx
  4237de:	aam    0x23
  4237e0:	fstp   TBYTE PTR ds:0xf9822c84
  4237e6:	fcmovbe st,st(4)
  4237e8:	scas   al,BYTE PTR es:[edi]
  4237e9:	stos   DWORD PTR es:[edi],eax
  4237ea:	xor    ecx,ebx
  4237ec:	adc    DWORD PTR [edx],ecx
  4237ee:	sbb    BYTE PTR [ebp+0xd1ae570],ch
  4237f4:	xchg   ebp,eax
  4237f5:	jns    0x423863
  4237f7:	xchg   ebp,eax
  4237f8:	or     DWORD PTR [ecx-0x13a6cc7e],0x53d172a3
  423802:	xor    bh,cl
  423804:	xchg   BYTE PTR [esi],dh
  423806:	jle    0x423866
  423808:	int    0x94
  42380a:	mov    ebx,0x2efef30a
  42380f:	pop    ebp
  423810:	(bad)  
  423811:	sbb    eax,0xd7d1039b
  423816:	(bad)  
  423817:	(bad)  
  423818:	xchg   ebx,eax
  423819:	jmp    0xd6a7a44f
  42381e:	jo     0x4237ec
  423820:	aas    
  423821:	mov    BYTE PTR [esi],ah
  423823:	popa   
  423824:	in     al,0xed
  423826:	jle    0x423813
  423828:	pop    ecx
  423829:	push   ebx
  42382a:	or     esi,0x94d450db
  423830:	js     0x4237ef
  423832:	stos   DWORD PTR es:[edi],eax
  423833:	pusha  
  423834:	call   0xf3ba41eb
  423839:	ret    
  42383a:	xchg   ebx,eax
  42383b:	sbb    eax,0x7be90760
  423840:	aad    0x4f
  423842:	jecxz  0x423847
  423844:	jmp    0x1bfa:0x1f7e59e2
  42384b:	into   
  42384c:	(bad)  
  42384d:	xchg   ebx,eax
  42384e:	fldenv [esi+0x1b8d2e07]
  423854:	xlat   BYTE PTR ss:[ebx]
  423856:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423857:	push   es
  423858:	inc    esi
  423859:	stos   BYTE PTR es:[edi],al
  42385a:	sbb    ecx,DWORD PTR ds:0x732eb38
  423860:	mov    ss,WORD PTR [ebx-0x13]
  423863:	cmp    al,0x68
  423865:	jl     0x42384d
  423867:	outs   dx,DWORD PTR ds:[esi]
  423868:	test   BYTE PTR [ebx],bh
  42386a:	xor    ebp,DWORD PTR [eax-0x22d9801]
  423870:	pop    ebx
  423871:	push   ds
  423872:	out    dx,al
  423873:	sbb    BYTE PTR [edx+edi*2-0x3317a311],dl
  42387a:	add    al,0x1e
  42387c:	push   0x372cc235
  423881:	pushf  
  423882:	in     al,dx
  423883:	mov    ah,0xe5
  423885:	test   DWORD PTR fs:[edx],esi
  423888:	sbb    al,0xe2
  42388a:	xchg   edi,eax
  42388b:	xchg   ecx,eax
  42388c:	or     al,0x46
  42388e:	fcmovne st,st(1)
  423890:	cmp    eax,0xf35cafff
  423895:	jne    0x42390c
  423897:	mov    al,ds:0x4d0cd2c4
  42389c:	push   esi
  42389d:	and    BYTE PTR [eax+0x3b],al
  4238a0:	cmp    DWORD PTR [edx+ebx*1],edx
  4238a3:	sbb    edi,ecx
  4238a5:	neg    BYTE PTR [ebx-0x2ea67c5d]
  4238ab:	(bad)  
  4238ac:	sbb    edx,eax
  4238ae:	out    0x34,eax
  4238b0:	mov    esp,0x4ceea1b
  4238b5:	cli    
  4238b6:	push   es
  4238b7:	mov    edx,DWORD PTR [ebx]
  4238b9:	lahf   
  4238ba:	mov    eax,0xc8943232
  4238bf:	shr    ebx,1
  4238c1:	mov    DWORD PTR [ebp-0x58],esi
  4238c4:	jmp    0xe51:0x4708cb15
  4238cb:	adc    BYTE PTR ds:0x837e5b60,ah
  4238d1:	outs   dx,BYTE PTR ds:[esi]
  4238d2:	and    esi,DWORD PTR [eax+0x4]
  4238d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238d6:	pop    eax
  4238d7:	outs   dx,DWORD PTR es:[esi]
  4238d9:	sahf   
  4238da:	aad    0x18
  4238dc:	pop    edi
  4238dd:	and    esp,DWORD PTR [ebx-0x19636b84]
  4238e3:	mov    esi,0xffb91b42
  4238e8:	jae    0x423896
  4238ea:	push   edi
  4238eb:	mov    bh,0x2
  4238ed:	scas   eax,DWORD PTR es:[edi]
  4238ee:	pop    ss
  4238ef:	sti    
  4238f0:	jnp    0x423957
  4238f2:	mov    ss,esp
  4238f4:	shl    BYTE PTR [edi+0x71],cl
  4238f7:	outs   dx,BYTE PTR ds:[esi]
  4238f8:	add    ch,BYTE PTR [ebp+0x70]
  4238fb:	in     al,dx
  4238fc:	pop    eax
  4238fd:	ins    DWORD PTR es:[edi],dx
  4238fe:	fsubr  QWORD PTR [edx]
  423900:	adc    BYTE PTR [edx-0x7ee71b2e],al
  423906:	loope  0x42396a
  423908:	mov    eax,ds:0xdcf3d2fc
  42390d:	cdq    
  42390e:	sahf   
  42390f:	(bad)  
  423910:	and    al,0xb
  423912:	mov    eax,ds:0xcd59bf6a
  423917:	sub    BYTE PTR [esi],bl
  423919:	icebp  
  42391a:	mov    eax,0xec5db636
  42391f:	daa    
  423920:	cmp    bh,BYTE PTR [eax]
  423922:	les    edx,FWORD PTR [esi+0x6e25f82a]
  423928:	nop
  423929:	mov    ebp,0x9002434
  42392e:	imul   DWORD PTR [ecx-0x68]
  423931:	push   0xffffffcb
  423933:	jmp    0x423950
  423935:	pop    eax
  423936:	(bad)  
  423937:	pop    esi
  423938:	jge    0x42397e
  42393a:	shr    DWORD PTR [eax],0x63
  42393d:	mov    edx,DWORD PTR [ecx-0x31a1b6c4]
  423943:	and    al,0x9a
  423945:	(bad)  
  423946:	jmp    0x423917
  423948:	ins    DWORD PTR es:[edi],dx
  423949:	xchg   BYTE PTR [ebx-0x7fcc18d9],dl
  42394f:	sahf   
  423950:	sub    BYTE PTR [ecx-0x6424d77a],ch
  423956:	imul   eax,DWORD PTR [eax-0x7d],0xacccade5
  42395d:	inc    edi
  42395e:	sti    
  42395f:	imul   edi,DWORD PTR [edx-0x8],0xc929cb38
  423966:	mov    WORD PTR [edx+ebx*2+0x185edfc],cs
  42396d:	sub    eax,0x74e74491
  423972:	mov    ah,BYTE PTR [ebx+0x7f]
  423975:	push   esp
  423976:	inc    edi
  423977:	aas    
  423978:	std    
  423979:	call   0xf134:0xd842ac84
  423980:	imul   eax,DWORD PTR [esi],0x5ca26e36
  423986:	loope  0x4239df
  423988:	push   0x8
  42398a:	out    0xf3,eax
  42398c:	fstp   DWORD PTR [ecx+0x27]
  42398f:	stos   BYTE PTR es:[edi],al
  423990:	mov    eax,0xb1888e8a
  423995:	mov    bl,0xa6
  423997:	repz add dh,dl
  42399a:	inc    eax
  42399b:	pop    esi
  42399c:	xchg   ecx,eax
  42399d:	pop    es
  42399e:	add    DWORD PTR [ecx+0x0],esp
  4239a1:	pop    ss
  4239a2:	test   BYTE PTR [esp+ebp*4-0x40],cl
  4239a6:	add    BYTE PTR [esi-0x2b],cl
  4239a9:	sar    DWORD PTR [ecx],cl
  4239ab:	cmp    DWORD PTR [edx-0xf],esp
  4239ae:	adc    eax,0x6c920758
  4239b3:	dec    ebp
  4239b4:	xchg   edx,eax
  4239b5:	mov    edi,DWORD PTR [edi-0xdeae46b]
  4239bb:	and    BYTE PTR [ebp+0x6287fb2],bh
  4239c1:	das    
  4239c2:	test   al,0x98
  4239c4:	dec    edx
  4239c5:	mov    eax,0xac99584d
  4239ca:	jl     0x423965
  4239cc:	int    0xb8
  4239ce:	jae    0x423a30
  4239d0:	scas   al,BYTE PTR es:[edi]
  4239d1:	add    BYTE PTR [edx],dl
  4239d3:	jmp    0xfb29:0x9f920da8
  4239da:	xor    BYTE PTR [ecx],dh
  4239dc:	xor    BYTE PTR [esi+0x6ec9b1f1],al
  4239e2:	or     ch,BYTE PTR [ebx]
  4239e4:	nop
  4239e5:	sahf   
  4239e6:	adc    BYTE PTR [esi-0x71],0xde
  4239ea:	dec    esi
  4239eb:	outs   dx,DWORD PTR ds:[esi]
  4239ec:	out    0x7f,eax
  4239ee:	or     BYTE PTR [ecx-0x21811e7e],bl
  4239f4:	mov    dh,0x3c
  4239f6:	or     DWORD PTR [edi],eax
  4239f8:	stos   DWORD PTR es:[edi],eax
  4239f9:	in     eax,0x24
  4239fb:	add    BYTE PTR [esi-0x35],0x2e
  4239ff:	pop    edi
  423a00:	jo     0x423a6d
  423a02:	sub    DWORD PTR [eax+0x63],esp
  423a05:	fdivr  DWORD PTR [edx-0x71711602]
  423a0b:	popf   
  423a0c:	(bad)
  423a10:	jno    0x4239a9
  423a12:	jg     0x4239f8
  423a14:	fld    TBYTE PTR [eax+0x32]
  423a17:	sub    BYTE PTR [eax+0x67975349],dh
  423a1d:	jno    0x423a34
  423a1f:	dec    ecx
  423a20:	jge    0x423a94
  423a22:	stc    
  423a23:	jl     0x423a19
  423a25:	sub    eax,0xe99b163
  423a2a:	sbb    eax,0x86886147
  423a2f:	add    eax,0x543f1287
  423a34:	xlat   BYTE PTR ds:[ebx]
  423a35:	gs pop ebp
  423a37:	lods   eax,DWORD PTR ds:[esi]
  423a38:	jge    0x4239f5
  423a3a:	adc    BYTE PTR [edi-0x39],0xed
  423a3e:	retf   0x9ec2
  423a41:	add    al,bh
  423a43:	cmp    DWORD PTR [edi+0x4b80810b],eax
  423a49:	shl    BYTE PTR [esi],0xca
  423a4c:	repz (bad) 
  423a4e:	iret   
  423a4f:	daa    
  423a50:	mov    ah,0x9
  423a52:	mov    edx,0xcc7d8603
  423a57:	xor    bh,al
  423a59:	stos   BYTE PTR es:[edi],al
  423a5a:	mov    edx,DWORD PTR [edi]
  423a5c:	test   al,bh
  423a5e:	mov    esp,0x35cae093
  423a63:	pmullw mm7,QWORD PTR [edi]
  423a66:	jg     0x423aba
  423a68:	push   0xe878f2e5
  423a6d:	in     eax,0x74
  423a6f:	js     0x423a06
  423a71:	jmp    0x766b:0x99c89853
  423a78:	ret    0x80a5
  423a7b:	inc    ebp
  423a7c:	in     eax,0x82
  423a7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a7f:	mov    BYTE PTR [esi+0x1],0x8f
  423a83:	xchg   BYTE PTR [eax+0x7d],bh
  423a86:	xchg   esi,eax
  423a87:	jb     0x423a21
  423a89:	or     dh,al
  423a8b:	mov    BYTE PTR [ebp+0x91fa3f0],al
  423a91:	mov    eax,0xa1516097
  423a96:	das    
  423a97:	out    0xef,eax
  423a99:	sysret 
  423a9b:	aad    0x91
  423a9d:	aam    0xbb
  423a9f:	enter  0xbeaa,0x94
  423aa3:	xchg   edx,eax
  423aa4:	inc    eax
  423aa5:	jmp    0x2750b709
  423aaa:	adc    al,0xcd
  423aac:	mov    eax,ds:0x8a20dc4c
  423ab1:	inc    edi
  423ab2:	pop    es
  423ab3:	fst    DWORD PTR [ebp-0x7d]
  423ab6:	mov    ecx,0x5e760b0f
  423abb:	xor    al,0xf7
  423abd:	daa    
  423abe:	hlt    
  423abf:	scas   al,BYTE PTR es:[edi]
  423ac0:	gs mov esi,0x44383a45
  423ac6:	in     eax,dx
  423ac7:	pop    esp
  423ac8:	sbb    BYTE PTR [ebp-0x3d5fb453],bh
  423ace:	xchg   ecx,eax
  423acf:	addr16 loopne 0x423b41
  423ad2:	out    0x7e,eax
  423ad4:	sahf   
  423ad5:	gs jbe 0x423aeb
  423ad8:	jae    0x423b4d
  423ada:	jmp    0x5ce6:0x71c64a8d
  423ae1:	xor    edx,DWORD PTR [esi]
  423ae3:	xlat   BYTE PTR ds:[ebx]
  423ae4:	push   edi
  423ae5:	jl     0x423a6e
  423ae7:	sysexit 
  423ae9:	aad    0xe5
  423aeb:	in     eax,0xd4
  423aed:	call   FWORD PTR [eax+0x6438645c]
  423af3:	sub    BYTE PTR [ebx+0x697c5558],dl
  423af9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423afa:	stc    
  423afb:	bound  eax,QWORD PTR [ecx+0x5479382c]
  423b01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b02:	pop    edi
  423b03:	test   al,0x5a
  423b05:	sub    ch,dh
  423b07:	dec    eax
  423b08:	fsubr  QWORD PTR [ebp-0x43618ad6]
  423b0e:	repz aas 
  423b10:	inc    edi
  423b11:	jbe    0x423ae9
  423b13:	jae    0x423b27
  423b15:	addr16 pop eax
  423b17:	mov    ebx,0x374f1744
  423b1c:	popf   
  423b1d:	sub    BYTE PTR [ecx-0x1bc4cf2e],0xc8
  423b24:	(bad)  
  423b25:	jmp    0x9cfe:0xda2689bb
  423b2c:	stc    
  423b2d:	arpl   WORD PTR [eax],cx
  423b2f:	sub    bh,BYTE PTR [edi+0x37dff2c8]
  423b35:	jns    0x423ad8
  423b37:	out    0xc1,eax
  423b39:	push   edx
  423b3a:	and    ch,BYTE PTR [ebp+0x513c1caa]
  423b40:	cmc    
  423b41:	lods   eax,DWORD PTR ds:[esi]
  423b42:	pand   mm7,mm1
  423b45:	push   0x45fcd248
  423b4a:	jp     0x423bad
  423b4c:	add    al,0xab
  423b4e:	jge    0x423bb7
  423b50:	xchg   esi,eax
  423b51:	mov    al,ds:0xbe339ea9
  423b56:	sti    
  423b57:	jmp    edi
  423b59:	mov    ?,WORD PTR [ecx-0x4d4d16be]
  423b5f:	push   cs
  423b60:	add    DWORD PTR [esi-0x18612928],ecx
  423b66:	jp     0x423bd7
  423b68:	mov    eax,ds:0x48c835f8
  423b6d:	xor    dh,dl
  423b6f:	jae    0x423b97
  423b71:	(bad)  
  423b72:	or     al,0x59
  423b74:	je     0x423b54
  423b76:	das    
  423b77:	mov    bl,0x62
  423b79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b7a:	dec    eax
  423b7b:	and    dh,BYTE PTR [edi+0x64]
  423b7e:	jns    0x423b62
  423b80:	jle    0x423b82
  423b82:	into   
  423b83:	dec    eax
  423b84:	lock lock add DWORD PTR [esi+0x69c1bf48],esp
  423b8c:	pop    ds
  423b8d:	mov    edi,0xb7d6525c
  423b92:	mov    dl,0x32
  423b94:	pop    ebp
  423b95:	mov    al,ds:0x6ac9dd3
  423b9a:	ds inc edx
  423b9c:	xor    dh,bl
  423b9e:	loope  0x423be3
  423ba0:	jmp    0x5806:0xa5aa81ee
  423ba7:	inc    esi
  423ba8:	mov    ?,WORD PTR [edi+esi*8-0xf]
  423bac:	push   ebx
  423bad:	mov    esp,DWORD PTR [esi-0x242696cd]
  423bb3:	xchg   edi,eax
  423bb4:	fsubrp st(2),st
  423bb6:	xchg   ebp,eax
  423bb7:	lea    edx,[eax-0x4bf6c77f]
  423bbd:	fst    QWORD PTR [edi-0x1906d09e]
  423bc3:	xchg   ecx,eax
  423bc4:	sbb    al,0xa9
  423bc6:	outs   dx,DWORD PTR cs:[esi]
  423bc8:	jno    0x423c40
  423bca:	add    al,0x8b
  423bcc:	js     0x423bf9
  423bce:	or     al,0xcb
  423bd0:	ffreep st(1)
  423bd2:	sub    eax,0x127f6c0
  423bd7:	pop    ebx
  423bd8:	push   ecx
  423bd9:	stos   DWORD PTR es:[edi],eax
  423bda:	scas   eax,DWORD PTR es:[edi]
  423bdb:	mov    bh,0x3d
  423bdd:	adc    al,0xfd
  423bdf:	cmp    dl,BYTE PTR [edx]
  423be1:	mov    ch,0x21
  423be3:	ret    0xc8d
  423be6:	call   0xcb8fa569
  423beb:	dec    esi
  423bec:	mov    ecx,DWORD PTR [eax-0x5b6ec067]
  423bf2:	cli    
  423bf3:	jl     0x423c5c
  423bf5:	std    
  423bf6:	iret   
  423bf7:	les    ecx,FWORD PTR [edi-0x1492f5b3]
  423bfd:	fnstsw WORD PTR [ebx]
  423bff:	aam    0x3c
  423c01:	leave  
  423c02:	call   0x95cf:0xd8a83a12
  423c09:	call   0x1341:0x4283ead
  423c10:	dec    esi
  423c11:	dec    ecx
  423c12:	retf   0xf8bd
  423c15:	int    0xfd
  423c17:	std    
  423c18:	(bad)  [ebp-0x44d62d8e]
  423c1e:	loopne 0x423c3c
  423c20:	sbb    BYTE PTR [edi],ah
  423c22:	mov    al,0xf4
  423c24:	xor    ch,ch
  423c26:	pop    esp
  423c27:	xchg   edx,eax
  423c28:	inc    edx
  423c29:	inc    ecx
  423c2a:	addr16 ret 0xb892
  423c2e:	retf   0x6518
  423c31:	adc    BYTE PTR [ebx+0x397a1c58],dl
  423c37:	mov    BYTE PTR [ecx],0x4c
  423c3a:	xor    BYTE PTR [esi+0x3e7f0745],0xa0
  423c41:	call   0xa984685f
  423c46:	scas   al,BYTE PTR es:[edi]
  423c47:	repz mov al,BYTE PTR [edx-0x39]
  423c4b:	mov    ah,0xd2
  423c4d:	push   ds
  423c4e:	popf   
  423c4f:	outs   dx,BYTE PTR ds:[esi]
  423c50:	cmp    al,0x45
  423c52:	cs test eax,0x51a7b1b5
  423c58:	mov    dh,0xe8
  423c5a:	out    0x7f,eax
  423c5c:	xchg   esi,eax
  423c5d:	jp     0x423c98
  423c5f:	lahf   
  423c60:	loope  0x423bef
  423c62:	mov    esp,0xc85d06ac
  423c67:	or     eax,DWORD PTR [esi]
  423c69:	mov    esi,0x359ac0f6
  423c6e:	das    
  423c6f:	mov    BYTE PTR [edx+0x58],dh
  423c72:	fbld   TBYTE PTR [eax+0x1c]
  423c75:	test   al,0x5b
  423c77:	fistp  DWORD PTR [eax]
  423c79:	push   ebp
  423c7a:	aad    0x3b
  423c7c:	and    DWORD PTR [edi-0x1de5875a],ebp
  423c82:	cs push ecx
  423c84:	cmp    ebp,eax
  423c86:	adc    BYTE PTR [edi],0xe4
  423c89:	pop    ebx
  423c8a:	push   esp
  423c8b:	mov    dl,0xea
  423c8d:	in     eax,0x7c
  423c8f:	clc    
  423c90:	dec    esp
  423c91:	sub    cl,BYTE PTR [esi]
  423c93:	sar    ebx,1
  423c95:	(bad)  
  423c96:	popa   
  423c97:	jae    0x423ca4
  423c99:	mov    ds:0x7b74676c,eax
  423c9e:	push   ecx
  423c9f:	xor    edi,DWORD PTR [ebx+ecx*8+0x552b9456]
  423ca6:	cmp    al,0x15
  423ca8:	pop    ss
  423ca9:	mov    eax,ds:0x2e1d7285
  423cae:	jnp    0x423c7e
  423cb0:	and    bh,al
  423cb2:	into   
  423cb3:	mov    ebp,0x6001ecfd
  423cb8:	push   ecx
  423cb9:	ja     0x423c9a
  423cbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423cbc:	xor    ch,dl
  423cbe:	retf   0xc810
  423cc1:	inc    edx
  423cc2:	outs   dx,DWORD PTR ds:[esi]
  423cc3:	or     al,0xfe
  423cc5:	mov    eax,ds:0x73bbfc1e
  423cca:	lods   eax,DWORD PTR ds:[esi]
  423ccb:	mov    ch,0x34
  423ccd:	aas    
  423cce:	sub    edi,DWORD PTR [edx+edi*4]
  423cd1:	inc    edx
  423cd3:	fldcw  WORD PTR [ebx-0x19]
  423cd6:	iret   
  423cd7:	xchg   BYTE PTR [edi+0x1e],bl
  423cda:	nop
  423cdb:	pop    esp
  423cdc:	cmp    al,0x20
  423cde:	call   DWORD PTR [edx]
  423ce0:	push   edi
  423ce1:	sbb    ch,dl
  423ce3:	push   ebx
  423ce4:	loope  0x423caa
  423ce6:	(bad)  
  423ce7:	and    BYTE PTR [ebx],bh
  423ce9:	lods   al,BYTE PTR ds:[esi]
  423ceb:	mov    ss,WORD PTR [esi+0x59]
  423cee:	mov    dl,0xc5
  423cf0:	xor    al,0x45
  423cf2:	xor    BYTE PTR ds:0xc6235ca6,bl
  423cf8:	imul   esi,esi,0x1f805af4
  423cfe:	fild   DWORD PTR [ecx+0x5e5294c5]
  423d04:	test   al,0x22
  423d06:	cmc    
  423d07:	retf   0x233b
  423d0a:	dec    esi
  423d0b:	(bad)  
  423d0c:	retf   
  423d0d:	fimul  WORD PTR [edi-0x47410ccb]
  423d13:	aas    
  423d14:	les    ecx,FWORD PTR [esp+ebp*1]
  423d17:	je     0x423d15
  423d19:	idiv   BYTE PTR [eax+eax*1]
  423d1c:	xchg   ecx,eax
  423d1d:	das    
  423d1e:	test   al,dh
  423d20:	lods   eax,DWORD PTR ds:[esi]
  423d21:	or     ch,BYTE PTR [edx+0x4a]
  423d24:	push   0x5504181e
  423d29:	push   ebp
  423d2a:	sbb    DWORD PTR [esi+ebx*1],0xffffffd2
  423d2e:	cmp    BYTE PTR [edi+0x6da58953],dh
  423d34:	mul    BYTE PTR [esi+0x58]
  423d37:	jg     0x423cbb
  423d39:	daa    
  423d3a:	(bad)  
  423d3b:	cld    
  423d3c:	iret   
  423d3d:	inc    ebx
  423d3e:	push   ebx
  423d3f:	xor    DWORD PTR ds:0x6fd80457,esi
  423d45:	pop    ebx
  423d46:	repz gs cli 
  423d49:	fnstenv [ebx-0x24]
  423d4c:	jl     0x423cd4
  423d4e:	jae    0x423d82
  423d50:	or     DWORD PTR [ecx],0xffffff97
  423d53:	mov    ch,0x46
  423d55:	pop    esi
  423d56:	mov    eax,0xe195c1f0
  423d5b:	aas    
  423d5c:	nop
  423d5d:	sete   BYTE PTR [eax]
  423d60:	jmp    0x423d0b
  423d62:	leave  
  423d63:	and    eax,DWORD PTR [eax]
  423d65:	daa    
  423d66:	push   ebx
  423d67:	clc    
  423d68:	leave  
  423d69:	sub    BYTE PTR [edi],bh
  423d6b:	aad    0xa6
  423d6d:	popf   
  423d6e:	repz inc eax
  423d70:	fild   QWORD PTR [esi-0x3af8c104]
  423d76:	mov    ds:0xab1687bf,al
  423d7b:	push   eax
  423d7c:	push   ebx
  423d7d:	sub    BYTE PTR [eax+0x124f56fc],dl
  423d83:	leave  
  423d84:	add    bh,BYTE PTR [esi-0xb]
  423d87:	xchg   ecx,eax
  423d88:	icebp  
  423d89:	repz mov bh,0x2f
  423d8c:	je     0x423d73
  423d8e:	or     BYTE PTR [esi],ah
  423d90:	inc    esp
  423d91:	loope  0x423df5
  423d93:	mov    esp,0xf4e3ef60
  423d98:	retf   0x838b
  423d9b:	and    eax,0x3069df69
  423da0:	ja     0x423dfc
  423da2:	mov    al,0x68
  423da4:	rcl    DWORD PTR es:[ecx+edi*8-0x2d],1
  423da9:	mov    esp,0xb3312ef9
  423dae:	pushf  
  423daf:	pop    ss
  423db0:	jnp    0x423d69
  423db2:	inc    edx
  423db3:	sub    eax,0x29ea0452
  423db8:	jp     0x423d40
  423dba:	pop    ss
  423dbb:	pop    edx
  423dbc:	lods   al,BYTE PTR ds:[esi]
  423dbd:	in     eax,dx
  423dbe:	xor    esi,DWORD PTR [edx]
  423dc0:	in     eax,dx
  423dc1:	add    BYTE PTR [ebp+ebp*8-0x2b24af90],dh
  423dc8:	add    DWORD PTR gs:[esp+ebp*2-0x75],0x4a
  423dce:	pop    ss
  423dcf:	stos   DWORD PTR es:[edi],eax
  423dd0:	js     0x423ddd
  423dd2:	mov    DWORD PTR [ebx],ebx
  423dd4:	push   es
  423dd5:	jbe    0x423dde
  423dd7:	push   edx
  423dd8:	mov    esp,0xf83a89cd
  423ddd:	mov    WORD PTR [edi-0x1301880f],fs
  423de3:	lock out dx,eax
  423de5:	loop   0x423e19
  423de7:	mov    ah,0xcd
  423de9:	cmp    BYTE PTR [edi+0x43a056ce],ah
  423def:	sahf   
  423df0:	cwde   
  423df1:	sub    eax,0xcbbdaadc
  423df6:	out    dx,al
  423df7:	or     BYTE PTR [edi-0x70780999],cl
  423dfd:	xor    al,0x2f
  423dff:	push   eax
  423e00:	(bad)  
  423e01:	in     eax,0x3
  423e03:	or     al,0x15
  423e05:	aam    0xa4
  423e07:	(bad)  
  423e08:	sysret 
  423e0a:	sti    
  423e0b:	sti    
  423e0c:	mov    DWORD PTR ds:0x8b2384ed,edi
  423e12:	pop    eax
  423e13:	dec    eax
  423e14:	jg     0x423e01
  423e16:	jno    0x423e15
  423e18:	add    DWORD PTR [eax+edx*2-0x7d],0xffffffa1
  423e1d:	js     0x423e6b
  423e1f:	loopne 0x423db4
  423e21:	aas    
  423e22:	daa    
  423e23:	and    esp,edx
  423e25:	jecxz  0x423dfc
  423e27:	js     0x423e9e
  423e29:	out    dx,eax
  423e2a:	mov    ecx,ds
  423e2c:	shr    DWORD PTR [edx+0x4e],0xa1
  423e30:	gs sub eax,0xc2d3e21d
  423e36:	sbb    ecx,DWORD PTR [ebp-0x2dbbab3b]
  423e3c:	sbb    bl,BYTE PTR [edi+ebx*2-0x76]
  423e40:	out    0x1,al
  423e42:	repnz adc edx,0xffffffaa
  423e46:	in     eax,0x40
  423e48:	add    BYTE PTR [esp+edi*8],al
  423e4b:	lods   al,BYTE PTR ds:[esi]
  423e4c:	mov    BYTE PTR [ecx],ch
  423e4e:	mov    esi,0x10691e44
  423e53:	stc    
  423e54:	icebp  
  423e55:	xor    al,0x54
  423e57:	retf   0x252e
  423e5a:	hlt    
  423e5b:	mov    dl,0xf9
  423e5d:	push   es
  423e5e:	cmp    ebp,edx
  423e60:	ret    
  423e61:	xor    ah,0xa4
  423e64:	sub    bh,BYTE PTR [ebx-0x69f854f5]
  423e6a:	adc    eax,0x9152005c
  423e6f:	sahf   
  423e70:	mov    DWORD PTR [edi],edi
  423e72:	pop    esi
  423e73:	sbb    DWORD PTR [edi+0x5d],ebx
  423e76:	rol    esp,cl
  423e78:	ins    DWORD PTR es:[edi],dx
  423e79:	sbb    eax,0x2f3c245a
  423e7e:	popf   
  423e7f:	pop    ss
  423e80:	outs   dx,BYTE PTR ds:[esi]
  423e81:	in     eax,0x94
  423e83:	mov    DWORD PTR [esi],ecx
  423e85:	push   edi
  423e86:	adc    eax,0x25133f6b
  423e8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e8c:	mov    esi,0x57b38b33
  423e91:	paddq  mm6,QWORD PTR [ebx+0x9]
  423e95:	sub    eax,0xb0ae2b0
  423e9a:	inc    bp
  423e9c:	pop    es
  423e9d:	add    edi,DWORD PTR [eax-0x6e991fe1]
  423ea3:	pop    ebp
  423ea4:	mov    esi,0x8bc40e78
  423ea9:	inc    ebp
  423eaa:	mul    BYTE PTR [ebp+0x2011b70d]
  423eb0:	int    0x1e
  423eb2:	(bad)  
  423eb4:	test   eax,0xddae4db6
  423eb9:	stos   DWORD PTR es:[edi],eax
  423eba:	(bad)  
  423ebc:	into   
  423ebd:	add    eax,0xe85dfa7c
  423ec2:	and    al,0xe5
  423ec4:	fmul   st,st(4)
  423ec6:	lea    ebx,[eax-0x4eb5cb02]
  423ecc:	cs adc edx,edx
  423ecf:	push   ebp
  423ed0:	in     al,dx
  423ed1:	mov    dl,0x1e
  423ed3:	mov    eax,ds:0xeee82cab
  423ed8:	int    0x1c
  423eda:	pop    ebx
  423edb:	sar    BYTE PTR [eax],0x63
  423ede:	add    eax,0xb2c85ae0
  423ee3:	outs   dx,BYTE PTR ds:[esi]
  423ee4:	(bad)  
  423ee5:	cs xor ch,0xd5
  423ee9:	fnstsw WORD PTR [edi+ecx*1+0xc405855]
  423ef0:	pusha  
  423ef1:	rol    DWORD PTR [eax-0x6ff377c9],0xe2
  423ef8:	aas    
  423ef9:	fwait
  423efa:	dec    esp
  423efb:	xor    al,0x35
  423efd:	stos   BYTE PTR es:[edi],al
  423efe:	pop    ebx
  423eff:	retf   
  423f00:	retf   
  423f01:	dec    esi
  423f02:	add    al,bl
  423f04:	aad    0x7c
  423f06:	leave  
  423f07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f08:	or     cl,BYTE PTR [ebx+0x1bfaea01]
  423f0e:	mul    BYTE PTR [edx-0x440d32f0]
  423f14:	ret    
  423f15:	jae    0x423e98
  423f17:	lea    esi,[ecx+0x22233798]
  423f1d:	int3   
  423f1e:	repz xchg ebp,eax
  423f20:	cmp    DWORD PTR [edi-0x522aae3f],esp
  423f26:	jmp    0x423f9d
  423f28:	lahf   
  423f29:	fwait
  423f2a:	ins    DWORD PTR es:[edi],dx
  423f2b:	push   0x47
  423f2d:	loopne 0x423fa9
  423f2f:	fwait
  423f30:	mov    dh,0x4a
  423f32:	mov    ds:0x9e44bc53,eax
  423f37:	push   ss
  423f38:	push   eax
  423f39:	jno    0x423ec9
  423f3b:	adc    DWORD PTR [esi+0x1f],edi
  423f3e:	xchg   ecx,eax
  423f3f:	std    
  423f40:	pop    es
  423f41:	dec    edx
  423f42:	xchg   dl,bh
  423f44:	mov    al,0xee
  423f46:	xor    al,BYTE PTR [esi+0x8e402d1]
  423f4c:	add    edi,DWORD PTR [esi]
  423f4e:	lds    edx,FWORD PTR [edx]
  423f50:	test   BYTE PTR [eax],cl
  423f52:	mov    edx,eax
  423f54:	ds out 0xe2,al
  423f57:	jl     0x423f35
  423f59:	arpl   WORD PTR [eax+0xe72bad7],ax
  423f5f:	add    eax,0x91de089d
  423f64:	mov    esp,DWORD PTR [ebp+0x63c5b2a]
  423f6a:	mov    al,BYTE PTR [edi+0x70137014]
  423f70:	pusha  
  423f71:	popa   
  423f72:	ds mov ecx,0x8b17f82c
  423f78:	xor    bh,dh
  423f7a:	xlat   BYTE PTR ds:[ebx]
  423f7b:	inc    eax
  423f7c:	pop    ebx
  423f7d:	add    BYTE PTR [eax],ch
  423f7f:	and    dl,BYTE PTR [esi+0x4651fdfc]
  423f85:	imul   ecx,esp,0xd615d30c
  423f8b:	xor    al,0xbe
  423f8d:	sahf   
  423f8e:	push   cs
  423f8f:	fucom  st(5)
  423f91:	or     DWORD PTR [edx+0x6d17e763],edi
  423f97:	lods   eax,DWORD PTR ds:[esi]
  423f98:	int    0x10
  423f9a:	jle    0x42401a
  423f9c:	(bad)  
  423f9d:	pop    ebx
  423f9e:	sub    DWORD PTR [eax+0x1735218],edi
  423fa4:	push   0x5c
  423fa6:	out    dx,eax
  423fa7:	xchg   esi,eax
  423fa8:	adc    ebx,DWORD PTR [ebx+0x15]
  423fab:	loopne 0x423faf
  423fad:	hlt    
  423fae:	lock mov DWORD PTR [edi+esi*8],ebx
  423fb2:	adc    al,BYTE PTR [ecx]
  423fb4:	int3   
  423fb5:	and    BYTE PTR [ecx-0x50dbc840],al
  423fbb:	fnstsw WORD PTR [esi]
  423fbd:	imul   esi,DWORD PTR [eax],0xffffffff
  423fc0:	in     al,0xd
  423fc2:	ret    
  423fc3:	adc    DWORD PTR [esi+0x51bc013f],edx
  423fc9:	pop    edi
  423fca:	add    ah,bh
  423fcc:	cmp    al,BYTE PTR [ebx+0x54]
  423fcf:	jl     0x424044
  423fd1:	adc    DWORD PTR [edi],esi
  423fd3:	mov    cl,0x89
  423fd5:	fistp  DWORD PTR [edx+0x64]
  423fd8:	retf   
  423fd9:	fwait
  423fda:	mov    bl,BYTE PTR [edx*1-0x70772155]
  423fe1:	es mov dh,0x34
  423fe4:	(bad)  
  423fe5:	out    0x0,al
  423fe7:	push   edi
  423fe8:	xchg   esi,eax
  423fe9:	arpl   WORD PTR [edi+0x7c],bp
  423fec:	xchg   ecx,eax
  423fed:	xor    bh,bl
  423fef:	mov    esi,0x6f2285f2
  423ff4:	mov    edx,0x32bfcef0
  423ff9:	adc    eax,0x6026984c
  423ffe:	fimul  WORD PTR [esi+0x11]
  424001:	(bad)  
  424003:	sbb    al,0xfb
  424005:	and    al,0xac
  424007:	push   cs
  424008:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424009:	pop    es
  42400a:	jo     0x424018
  42400c:	dec    ebp
  42400d:	(bad)  
  42400e:	(bad)  
  424010:	and    al,0xb9
  424012:	jecxz  0x423fe6
  424014:	cli    
  424015:	and    bl,BYTE PTR [edi]
  424017:	xlat   BYTE PTR ds:[ebx]
  424018:	adc    al,0x40
  42401a:	or     BYTE PTR [ebx],dl
  42401c:	lods   eax,DWORD PTR ds:[esi]
  42401d:	cmp    DWORD PTR [ecx],edi
  42401f:	fstp   QWORD PTR ds:0xd4f7ff00
  424025:	dec    ebp
  424026:	jns    0x424040
  424028:	cmp    al,0x90
  42402a:	add    BYTE PTR [ecx+0x53],ch
  42402d:	call   FWORD PTR [ebp+0x4f]
  424030:	cli    
  424031:	jg     0x423fcb
  424033:	fmul   st(4),st
  424035:	stc    
  424036:	scas   al,BYTE PTR es:[edi]
  424037:	xchg   ebx,eax
  424038:	(bad)  
  42403a:	xchg   ebx,eax
  42403b:	pop    eax
  42403c:	sbb    ebp,edx
  42403e:	imul   ecx,ebx,0x33
  424041:	push   edx
  424042:	push   es
  424043:	cli    
  424044:	aam    0x59
  424046:	xor    eax,edx
  424048:	add    dh,BYTE PTR [edi*8+0x97ba0e2]
  42404f:	gs ret 0x7bff
  424053:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  424055:	clc    
  424056:	jle    0x424041
  424058:	xchg   DWORD PTR [edi-0x476ef2ca],edi
  42405e:	arpl   WORD PTR [ecx+eax*2-0x45],bp
  424062:	push   ss
  424063:	leave  
  424064:	data16 jge 0x423ff3
  424067:	sub    edi,edx
  424069:	add    DWORD PTR [edx+0x4378ad91],eax
  42406f:	jb     0x424055
  424071:	push   ebp
  424072:	lock dec eax
  424074:	iret   
  424075:	push   esp
  424076:	push   ss
  424077:	clc    
  424078:	popw   ss
  42407a:	clc    
  42407b:	ds pop edx
  42407d:	pop    ebx
  42407e:	jecxz  0x4240cc
  424080:	or     eax,0xaf873f4a
  424085:	leave  
  424086:	std    
  424087:	(bad)  
  424088:	icebp  
  424089:	retf   0x9990
  42408c:	jnp    0x424065
  42408e:	pop    ecx
  42408f:	jns    0x4240f4
  424091:	pop    eax
  424092:	test   ebx,ebp
  424094:	lods   al,BYTE PTR ds:[esi]
  424095:	out    0x9b,al
  424097:	push   edi
  424098:	push   esp
  424099:	js     0x4240cc
  42409b:	loope  0x4240a2
  42409d:	push   ecx
  42409e:	lods   al,BYTE PTR ds:[si]
  4240a0:	int    0x7a
  4240a2:	push   ds
  4240a3:	je     0x4240a7
  4240a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240a6:	fcom   QWORD PTR [edi]
  4240a8:	int3   
  4240a9:	rol    BYTE PTR [eax+0x11],1
  4240ac:	ficomp WORD PTR [edx]
  4240ae:	mov    ds:0x584f4022,eax
  4240b3:	repz jne 0x4240ba
  4240b6:	and    al,0xe5
  4240b8:	push   ebp
  4240b9:	mov    al,ds:0x98c92d81
  4240be:	cdq    
  4240bf:	in     eax,dx
  4240c0:	inc    eax
  4240c1:	pop    es
  4240c2:	adc    edx,DWORD PTR [ebp+0x35]
  4240c5:	loope  0x4240ab
  4240c7:	lock fnstsw WORD PTR [edx]
  4240ca:	lods   eax,DWORD PTR ds:[esi]
  4240cb:	mov    BYTE PTR ds:[ecx-0x68],0xd5
  4240d0:	inc    esi
  4240d1:	adc    BYTE PTR [ecx-0x40],bh
  4240d4:	xor    al,0xaa
  4240d6:	fsub   DWORD PTR [edx-0x16]
  4240d9:	sub    al,0x4e
  4240db:	cmp    eax,0x4eb0be7d
  4240e0:	outs   dx,DWORD PTR ds:[esi]
  4240e1:	call   0xd050:0x2ce8aa77
  4240e8:	gs or  eax,0xf4613868
  4240ee:	pushf  
  4240ef:	retf   
  4240f0:	mov    al,ds:0xb4410367
  4240f5:	push   esp
  4240f7:	fldenv [edi+0x4fc44aa5]
  4240fd:	in     al,0x9c
  4240ff:	imul   esp,DWORD PTR [ecx-0x578b54c5],0xc8bae478
  424109:	xchg   DWORD PTR [ecx-0x78431754],esp
  42410f:	stos   BYTE PTR es:[edi],al
  424110:	mov    dh,0x63
  424112:	das    
  424113:	xchg   edi,eax
  424114:	xchg   edi,eax
  424115:	ja     0x4240b1
  424117:	lods   eax,DWORD PTR ds:[esi]
  424118:	into   
  424119:	int3   
  42411a:	cmp    BYTE PTR [esp+eiz*8-0x25d41b14],0xe6
  424122:	push   esi
  424123:	cmp    eax,0x5ac7f27c
  424128:	mov    dh,0x1e
  42412a:	loopne 0x4240ba
  42412c:	xchg   ebx,esp
  42412e:	jge    0x4240fc
  424130:	sbb    DWORD PTR [edi-0x2a],eax
  424133:	cdq    
  424134:	sbb    esi,DWORD PTR [edi]
  424136:	jmp    0x4c94dcee
  42413b:	stos   BYTE PTR es:[edi],al
  42413c:	dec    ecx
  42413d:	jmp    0x9e669a08
  424142:	repz in al,0xaa
  424145:	mov    eax,0xf89c85a2
  42414a:	pop    ebx
  42414b:	pop    edi
  42414c:	pop    esi
  42414d:	leave  
  42414e:	ret    0xc
  424151:	push   ebp
  424152:	mov    ebp,esp
  424154:	push   ecx
  424155:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  42415c:	mov    DWORD PTR ds:0x4291bb,0x19
  424166:	cmp    DWORD PTR ds:0x4291bb,0x0
  42416d:	je     0x4241c3
  424173:	cmp    DWORD PTR ds:0x4291bb,0x5
  42417a:	jb     0x4241c3
  424180:	jmp    0x424195
  424185:	push   0x6cdd
  42418a:	push   0x428019
  42418f:	call   DWORD PTR ds:0x42a547
  424195:	cmp    DWORD PTR ds:0x4291bb,0x6
  42419c:	jne    0x4241b1
  4241a2:	xor    ecx,ecx
  4241a4:	xor    ecx,DWORD PTR ds:0x4291bb
  4241aa:	dec    ecx
  4241ab:	mov    DWORD PTR ds:0x4291bb,ecx
  4241b1:	mov    ecx,DWORD PTR ds:0x4291bb
  4241b7:	dec    ecx
  4241b8:	mov    DWORD PTR ds:0x4291bb,ecx
  4241be:	jmp    0x424166
  4241c3:	mov    eax,DWORD PTR [ebp+0x8]
  4241c6:	or     ecx,ecx
  4241c8:	movsx  eax,BYTE PTR [eax]
  4241cb:	or     ecx,0x305b
  4241d1:	mov    edx,0x3272f3
  4241d6:	add    DWORD PTR ds:0x4291c7,0x4291f7
  4241e0:	sub    eax,edx
  4241e2:	mov    DWORD PTR ds:0x4291a7,0x1e
  4241ec:	cmp    DWORD PTR ds:0x4291a7,0x0
  4241f3:	je     0x42424b
  4241f9:	cmp    DWORD PTR ds:0x4291a7,0x6
  424200:	jl     0x42424b
  424206:	jmp    0x42421d
  42420b:	push   0x4280f2
  424210:	push   0x1
  424212:	push   0x8730
  424217:	call   DWORD PTR ds:0x42a54f
  42421d:	cmp    DWORD PTR ds:0x4291a7,0x7
  424224:	jne    0x424237
  42422a:	mov    ecx,DWORD PTR ds:0x4291a7
  424230:	dec    ecx
  424231:	mov    DWORD PTR ds:0x4291a7,ecx
  424237:	xor    ecx,ecx
  424239:	add    ecx,DWORD PTR ds:0x4291a7
  42423f:	dec    ecx
  424240:	mov    DWORD PTR ds:0x4291a7,ecx
  424246:	jmp    0x4241ec
  42424b:	mov    ecx,0x75108ac
  424250:	xor    eax,ecx
  424252:	cmp    eax,0xf89c85f6
  424257:	jne    0x424286
  42425d:	mov    eax,DWORD PTR [ebp+0x8]
  424260:	push   esi
  424261:	mov    esi,DWORD PTR [ebp+0x8]
  424264:	add    esi,DWORD PTR [eax+0x3c]
  424267:	mov    DWORD PTR [ebp+0x8],esi
  42426a:	mov    eax,DWORD PTR [ebp-0x4]
  42426d:	mov    esi,DWORD PTR [ebp+0x8]
  424270:	xor    eax,ecx
  424272:	add    eax,edx
  424274:	cmp    DWORD PTR [esi+0x54],eax
  424277:	pop    esi
  424278:	je     0x424286
  42427e:	mov    eax,DWORD PTR [ebp+0x8]
  424281:	jmp    0x42428d
  424286:	mov    eax,DWORD PTR [ebp-0x4]
  424289:	xor    eax,ecx
  42428b:	add    eax,edx
  42428d:	leave  
  42428e:	ret    0x4
  424291:	push   ebp
  424292:	mov    ebp,esp
  424294:	sub    esp,0xc
  424297:	and    DWORD PTR ds:0x429157,0x0
  4242a1:	mov    edx,DWORD PTR ds:0x429157
  4242a7:	inc    edx
  4242a8:	mov    DWORD PTR ds:0x429157,edx
  4242ae:	cmp    DWORD PTR ds:0x429157,0x16
  4242b5:	jl     0x4242d6
  4242bb:	jmp    0x4242c9
  4242c0:	push   DWORD PTR [ebp-0x14]
  4242c3:	call   DWORD PTR ds:0x42a553
  4242c9:	cmp    DWORD PTR ds:0x429157,0x13
  4242d0:	jb     0x4242a1
  4242d6:	push   esi
  4242d7:	mov    esi,0xf89c85a1
  4242dc:	mov    edx,DWORD PTR ds:0x429e5f
  4242e2:	mov    ecx,DWORD PTR ds:0x429e67
  4242e8:	sub    edx,ecx
  4242ea:	sub    edx,DWORD PTR [edx+ecx*1]
  4242ed:	mov    DWORD PTR [ebp-0x8],esi
  4242f0:	and    DWORD PTR ds:0x4291bf,0x59ca
  4242fa:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  424301:	sub    edx,DWORD PTR ds:0x4291df
  424307:	push   edi
  424308:	and    DWORD PTR ds:0x4291c7,0x0
  424312:	jmp    0x424326
  424317:	xor    ecx,ecx
  424319:	or     ecx,DWORD PTR ds:0x4291c7
  42431f:	inc    ecx
  424320:	mov    DWORD PTR ds:0x4291c7,ecx
  424326:	cmp    DWORD PTR ds:0x4291c7,0x1f
  42432d:	jae    0x42435b
  424333:	cmp    DWORD PTR ds:0x4291c7,0x20
  42433a:	jbe    0x42435b
  424340:	jmp    0x424356
  424345:	push   0x42803d
  42434a:	push   DWORD PTR [ebp-0x20]
  42434d:	push   DWORD PTR [ebp-0x24]
  424350:	call   DWORD PTR ds:0x42a557
  424356:	jmp    0x424317
  42435b:	mov    eax,eax
  42435d:	and    DWORD PTR ds:0x42919b,0x3c1b
  424367:	mov    eax,DWORD PTR [ebp-0x4]
  42436a:	add    DWORD PTR ds:0x4291df,0x7092
  424374:	mov    edi,DWORD PTR [ebp-0x8]
  424377:	adc    DWORD PTR ds:0x429193,edx
  42437d:	mov    ecx,0x75108ac
  424382:	mov    edx,DWORD PTR ds:0x42917b
  424388:	and    DWORD PTR ds:0x4291e7,edx
  42438e:	xor    eax,ecx
  424390:	add    DWORD PTR ds:0x4291df,0x314e
  42439a:	xor    edi,ecx
  42439c:	mov    edx,DWORD PTR ds:0x429e4b
  4243a2:	mov    edx,DWORD PTR [edx]
  4243a4:	adc    DWORD PTR ds:0x4291ab,edx
  4243aa:	mov    edx,0x3272f3
  4243af:	add    edi,edx
  4243b1:	add    eax,edx
  4243b3:	imul   eax,edi
  4243b6:	mov    edi,DWORD PTR [ebp+0xc]
  4243b9:	cmp    edi,eax
  4243bb:	je     0x424410
  4243c1:	mov    DWORD PTR [ebp-0xc],esi
  4243c4:	mov    eax,DWORD PTR [ebp-0xc]
  4243c7:	mov    esi,DWORD PTR [ebp+0xc]
  4243ca:	xor    eax,ecx
  4243cc:	lea    eax,[eax*8+0x1939810]
  4243d3:	mov    eax,DWORD PTR [esi+eax*1]
  4243d6:	mov    DWORD PTR [ebp+0xc],eax
  4243d9:	mov    eax,DWORD PTR [ebp-0x4]
  4243dc:	mov    esi,DWORD PTR [ebp-0x8]
  4243df:	xor    eax,ecx
  4243e1:	xor    esi,ecx
  4243e3:	add    esi,edx
  4243e5:	add    eax,edx
  4243e7:	imul   eax,esi
  4243ea:	mov    esi,DWORD PTR [ebp+0xc]
  4243ed:	cmp    esi,eax
  4243ef:	je     0x424410
  4243f5:	mov    eax,DWORD PTR [ebp-0x4]
  4243f8:	xor    eax,ecx
  4243fa:	mov    ecx,DWORD PTR [ebp+0xc]
  4243fd:	add    eax,edx
  4243ff:	imul   eax,ecx
  424402:	add    eax,DWORD PTR [ebp+0x8]
  424405:	mov    DWORD PTR [ebp+0xc],eax
  424408:	mov    eax,DWORD PTR [ebp+0xc]
  42440b:	jmp    0x424421
  424410:	mov    eax,DWORD PTR [ebp-0x4]
  424413:	mov    esi,DWORD PTR [ebp-0x8]
  424416:	xor    esi,ecx
  424418:	xor    eax,ecx
  42441a:	add    esi,edx
  42441c:	add    eax,edx
  42441e:	imul   eax,esi
  424421:	pop    edi
  424422:	pop    esi
  424423:	leave  
  424424:	ret    0x8
	...
  424433:	add    BYTE PTR [ebx],dl
  424435:	push   esp
  424436:	test   BYTE PTR [ebp+0x0],cl
  424439:	add    BYTE PTR [eax],al
  42443b:	add    BYTE PTR [edx],al
  42443d:	add    BYTE PTR [eax],al
  42443f:	add    BYTE PTR [eax],dh
  424441:	add    BYTE PTR [eax],al
  424443:	add    BYTE PTR [eax+0x44],dl
  424446:	add    al,BYTE PTR [eax]
  424448:	push   eax
  424449:	cmp    BYTE PTR [edx],al
  42444b:	add    BYTE PTR [eax],al
  42444d:	add    BYTE PTR [eax],al
  42444f:	add    BYTE PTR [edx+0x53],dl
  424452:	inc    esp
  424453:	push   ebx
  424454:	cmp    dh,BYTE PTR [ecx-0x7f]
  424457:	push   ebx
  424458:	sbb    eax,0x864202a5
  42445d:	(bad)  
  42445e:	shl    BYTE PTR ds:0x121261c,1
  424464:	add    DWORD PTR [eax],eax
  424466:	add    BYTE PTR [eax],al
  424468:	inc    esi
  424469:	cmp    bl,BYTE PTR [edi+edx*2+0x69]
  42446d:	outs   dx,BYTE PTR ds:[esi]
  42446e:	outs   dx,DWORD PTR fs:[esi]
  424470:	ja     0x4244e5
  424472:	and    BYTE PTR [ecx+ebp*2+0x72],al
  424476:	pop    esp
  424477:	inc    esi
  424478:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x636578
  424480:	mov    edx,DWORD PTR [ebp-0x14]
  424483:	sub    esp,0x108
  424489:	push   ebx
  42448a:	mov    eax,ebx
  42448c:	xchg   ecx,eax
  42448d:	mov    eax,DWORD PTR [ebp+0x8]
  424490:	cmp    eax,0xf89c85a1
  424495:	jne    0x424952
  42449b:	mov    eax,DWORD PTR [ebp+0xc]
  42449e:	cmp    eax,0xf89c85a2
  4244a3:	jne    0x424952
  4244a9:	mov    eax,DWORD PTR [ebp+0x24]
  4244ac:	mov    DWORD PTR [ebp-0x4],eax
  4244af:	mov    eax,DWORD PTR [ebp-0x4]
  4244b2:	mov    eax,DWORD PTR [eax+0x1d8]
  4244b8:	mov    eax,DWORD PTR [eax]
  4244ba:	mov    eax,DWORD PTR [eax]
  4244bc:	mov    DWORD PTR [ebp-0x8],eax
  4244bf:	mov    BYTE PTR [ebp-0x18],0x18
  4244c3:	mov    BYTE PTR [ebp-0x17],0x1f
  4244c7:	mov    BYTE PTR [ebp-0x16],0x1a
  4244cb:	mov    BYTE PTR [ebp-0x15],0x4c
  4244cf:	mov    BYTE PTR [ebp-0x14],0x4d
  4244d3:	mov    BYTE PTR [ebp-0x13],0x83
  4244d7:	mov    BYTE PTR [ebp-0x20],0xe
  4244db:	mov    BYTE PTR [ebp-0x1f],0xc
  4244df:	mov    BYTE PTR [ebp-0x1e],0x1e
  4244e3:	mov    BYTE PTR [ebp-0x1d],0xd
  4244e7:	mov    BYTE PTR [ebp-0x1c],0x4c
  4244eb:	mov    BYTE PTR [ebp-0x1b],0x4d
  4244ef:	mov    BYTE PTR [ebp-0x1a],0x83
  4244f3:	mov    BYTE PTR [ebp-0x28],0xc
  4244f7:	mov    BYTE PTR [ebp-0x27],0x1b
  4244fb:	mov    BYTE PTR [ebp-0x26],0x17
  4244ff:	mov    BYTE PTR [ebp-0x25],0x8
  424503:	mov    BYTE PTR [ebp-0x24],0x22
  424507:	mov    BYTE PTR [ebp-0x23],0x13
  42450b:	mov    BYTE PTR [ebp-0x22],0x1a
  42450f:	mov    BYTE PTR [ebp-0x21],0x83
  424513:	xor    ecx,ecx
  424515:	lea    eax,[ebp+ecx*1-0x18]
  424519:	movzx  edx,BYTE PTR [eax]
  42451c:	xor    edx,0x7d
  42451f:	add    edx,0x2
  424522:	inc    ecx
  424523:	mov    BYTE PTR [eax],dl
  424525:	cmp    ecx,0x6
  424528:	jb     0x424515
  42452a:	xor    ecx,ecx
  42452c:	lea    eax,[ebp+ecx*1-0x20]
  424530:	movzx  edx,BYTE PTR [eax]
  424533:	xor    edx,0x7d
  424536:	add    edx,0x2
  424539:	inc    ecx
  42453a:	mov    BYTE PTR [eax],dl
  42453c:	cmp    ecx,0x7
  42453f:	jb     0x42452c
  424541:	xor    ecx,ecx
  424543:	lea    eax,[ebp+ecx*1-0x28]
  424547:	movzx  edx,BYTE PTR [eax]
  42454a:	xor    edx,0x7d
  42454d:	add    edx,0x2
  424550:	inc    ecx
  424551:	mov    BYTE PTR [eax],dl
  424553:	cmp    ecx,0x8
  424556:	jb     0x424543
  424558:	lea    eax,[ebp-0x2c]
  42455b:	mov    DWORD PTR [ebp-0x8],eax
  42455e:	mov    ecx,DWORD PTR [ebp-0x8]
  424561:	mov    eax,0x7113fccf
  424566:	mov    DWORD PTR [ecx],eax
  424568:	mov    ecx,DWORD PTR [ebp-0x2c]
  42456b:	push   esi
  42456c:	push   edi
  42456d:	mov    esi,0x4e3c
  424572:	mov    ebx,0x3272f3
  424577:	cmp    ecx,eax
  424579:	jne    0x424644
  42457f:	lea    eax,[esi+0x3b]
  424582:	mov    WORD PTR [ebp-0x78],ax
  424586:	mov    eax,esi
  424588:	mov    WORD PTR [ebp-0x76],ax
  42458c:	add    eax,0x35
  42458f:	mov    WORD PTR [ebp-0x74],ax
  424593:	lea    eax,[esi+0x2]
  424596:	mov    WORD PTR [ebp-0x72],ax
  42459a:	add    eax,0x41
  42459d:	mov    ecx,eax
  42459f:	lea    eax,[esi-0x13]
  4245a2:	mov    WORD PTR [ebp-0x66],ax
  4245a6:	mov    eax,esi
  4245a8:	mov    WORD PTR [ebp-0x64],ax
  4245ac:	add    eax,0xffffffec
  4245af:	mov    WORD PTR [ebp-0x62],ax
  4245b3:	mov    eax,0x443
  4245b8:	mov    WORD PTR [ebp-0x60],ax
  4245bc:	mov    eax,0x5672
  4245c1:	mov    WORD PTR [ebp-0x5e],ax
  4245c5:	mov    eax,0x6112
  4245ca:	mov    WORD PTR [ebp-0x5c],ax
  4245ce:	lea    eax,[ebp-0xe0]
  4245d4:	push   eax
  4245d5:	mov    eax,DWORD PTR [ebp+0xc]
  4245d8:	mov    edi,0x75108ac
  4245dd:	xor    eax,edi
  4245df:	add    eax,ebx
  4245e1:	push   eax
  4245e2:	mov    WORD PTR [ebp-0x70],cx
  4245e6:	lea    ecx,[esi-0xa]
  4245e9:	mov    edx,ecx
  4245eb:	lea    eax,[ebp-0x78]
  4245ee:	push   eax
  4245ef:	mov    eax,DWORD PTR [ebp-0x4]
  4245f2:	mov    eax,DWORD PTR [eax+0x198]
  4245f8:	mov    WORD PTR [ebp-0x6e],dx
  4245fc:	mov    edx,0x4f88
  424601:	mov    WORD PTR [ebp-0x6c],dx
  424605:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e35
  42460c:	mov    DWORD PTR [ebp-0x5a],0x4e32f1e4
  424613:	mov    DWORD PTR [ebp-0xe0],0x1
  42461d:	mov    DWORD PTR [ebp-0xdc],0x255
  424627:	push   DWORD PTR [eax]
  424629:	mov    eax,DWORD PTR [ebp+0x10]
  42462c:	call   eax
  42462e:	mov    DWORD PTR [ebp-0x8],eax
  424631:	mov    eax,DWORD PTR [ebp-0x8]
  424634:	test   eax,eax
  424636:	je     0x424649
  424638:	xor    DWORD PTR ds:0x76586876,0x87687666
  424642:	jmp    0x424649
  424644:	mov    edi,0x75108ac
  424649:	mov    eax,DWORD PTR [ebp-0x4]
  42464c:	mov    ecx,DWORD PTR [eax+0x18c]
  424652:	xor    eax,eax
  424654:	cmp    DWORD PTR [ecx],eax
  424656:	jne    0x4248c5
  42465c:	mov    ecx,DWORD PTR [ebp-0x4]
  42465f:	mov    ecx,DWORD PTR [ecx+0x17c]
  424665:	mov    DWORD PTR [ecx],eax
  424667:	mov    ecx,DWORD PTR [ebp-0x4]
  42466a:	mov    ecx,DWORD PTR [ecx+0x180]
  424670:	mov    DWORD PTR [ecx],eax
  424672:	mov    eax,0x4e61
  424677:	mov    WORD PTR [ebp-0x9c],ax
  42467e:	mov    eax,esi
  424680:	mov    WORD PTR [ebp-0x9a],ax
  424687:	mov    eax,0x4e71
  42468c:	mov    WORD PTR [ebp-0x98],ax
  424693:	add    eax,0xffffffc0
  424696:	mov    WORD PTR [ebp-0x96],ax
  42469d:	mov    eax,0x4f8c
  4246a2:	mov    WORD PTR [ebp-0x94],ax
  4246a9:	mov    eax,0x4e30
  4246ae:	mov    WORD PTR [ebp-0x92],ax
  4246b5:	add    eax,0x4f
  4246b8:	mov    WORD PTR [ebp-0x90],ax
  4246bf:	mov    eax,0x4e32
  4246c4:	mov    WORD PTR [ebp-0x8e],ax
  4246cb:	mov    eax,esi
  4246cd:	mov    WORD PTR [ebp-0x8c],ax
  4246d4:	mov    eax,0x4e35
  4246d9:	mov    WORD PTR [ebp-0x8a],ax
  4246e0:	mov    eax,0x99f1
  4246e5:	mov    WORD PTR [ebp-0x88],ax
  4246ec:	mov    eax,0x8d60
  4246f1:	mov    WORD PTR [ebp-0x86],ax
  4246f8:	mov    eax,0xd66f
  4246fd:	mov    WORD PTR [ebp-0x84],ax
  424704:	mov    eax,0xd783
  424709:	mov    WORD PTR [ebp-0x82],ax
  424710:	mov    eax,0x2782
  424715:	mov    WORD PTR [ebp-0x80],ax
  424719:	mov    eax,0x4782
  42471e:	mov    WORD PTR [ebp-0x7e],ax
  424722:	mov    eax,0x4e33
  424727:	push   0x8
  424729:	mov    WORD PTR [ebp-0x7c],ax
  42472d:	mov    DWORD PTR [ebp-0x10],0x8171b0c
  424734:	mov    DWORD PTR [ebp-0xc],0x831a1322
  42473b:	lea    eax,[ebp-0x10]
  42473e:	pop    ecx
  42473f:	mov    dl,BYTE PTR [eax]
  424741:	xor    dl,0x7d
  424744:	add    dl,0x2
  424747:	mov    BYTE PTR [eax],dl
  424749:	inc    eax
  42474a:	dec    ecx
  42474b:	jne    0x42473f
  42474d:	lea    eax,[ebp-0x10]
  424750:	mov    DWORD PTR [ebp-0xdc],eax
  424756:	lea    eax,[ebp-0xe0]
  42475c:	push   eax
  42475d:	mov    eax,DWORD PTR [ebp+0xc]
  424760:	xor    eax,edi
  424762:	add    eax,ebx
  424764:	push   eax
  424765:	mov    eax,DWORD PTR [ebp-0x4]
  424768:	add    eax,0x66
  42476b:	push   eax
  42476c:	mov    eax,DWORD PTR [ebp-0x4]
  42476f:	mov    eax,DWORD PTR [eax+0x198]
  424775:	mov    DWORD PTR [ebp-0xe0],0x1
  42477f:	push   DWORD PTR [eax]
  424781:	mov    eax,DWORD PTR [ebp+0x10]
  424784:	call   eax
  424786:	mov    ecx,DWORD PTR [ebp+0x8]
  424789:	xor    ecx,edi
  42478b:	add    ecx,ebx
  42478d:	mov    DWORD PTR [ebp-0x8],eax
  424790:	cmp    eax,ecx
  424792:	jne    0x4247ad
  424794:	mov    eax,ds:0x33730bc8
  424799:	or     eax,0x22150bcf
  42479e:	mov    ds:0x33730bc8,eax
  4247a3:	add    eax,0x3372e92f
  4247a8:	mov    ds:0x33730bc8,eax
  4247ad:	mov    ecx,0x4e64
  4247b2:	mov    eax,ecx
  4247b4:	mov    WORD PTR [ebp-0x40],ax
  4247b8:	add    eax,0x7
  4247bb:	mov    edx,eax
  4247bd:	mov    WORD PTR [ebp-0x3e],dx
  4247c1:	mov    edx,0x4f93
  4247c6:	mov    WORD PTR [ebp-0x3c],dx
  4247ca:	add    edx,0xfffffff8
  4247cd:	mov    WORD PTR [ebp-0x3a],dx
  4247d1:	mov    edx,0x4f8d
  4247d6:	mov    WORD PTR [ebp-0x38],dx
  4247da:	inc    edx
  4247db:	mov    WORD PTR [ebp-0x36],dx
  4247df:	mov    edx,0x4f87
  4247e4:	mov    WORD PTR [ebp-0x34],dx
  4247e8:	mov    WORD PTR [ebp-0x32],cx
  4247ec:	mov    ecx,esi
  4247ee:	mov    WORD PTR [ebp-0x30],cx
  4247f2:	lea    ecx,[edx-0x3]
  4247f5:	mov    edx,ecx
  4247f7:	mov    WORD PTR [ebp-0x54],dx
  4247fb:	mov    edx,eax
  4247fd:	mov    WORD PTR [ebp-0x52],dx
  424801:	mov    edx,0x4e73
  424806:	mov    WORD PTR [ebp-0x50],dx
  42480a:	mov    WORD PTR [ebp-0x4e],ax
  42480e:	lea    eax,[edx-0x6]
  424811:	mov    WORD PTR [ebp-0x4c],ax
  424815:	inc    eax
  424816:	mov    WORD PTR [ebp-0x4a],ax
  42481a:	lea    eax,[edx-0xc]
  42481d:	mov    WORD PTR [ebp-0x48],ax
  424821:	mov    WORD PTR [ebp-0x46],cx
  424825:	mov    WORD PTR [ebp-0x44],si
  424829:	mov    eax,DWORD PTR [ebp+0x8]
  42482c:	movzx  ecx,WORD PTR [ebp-0x54]
  424830:	xor    eax,edi
  424832:	add    eax,ebx
  424834:	xor    eax,ecx
  424836:	mov    WORD PTR [ebp-0x54],ax
  42483a:	mov    eax,DWORD PTR [ebp+0x8]
  42483d:	movzx  ecx,WORD PTR [ebp-0x40]
  424841:	xor    eax,edi
  424843:	add    eax,ebx
  424845:	xor    eax,ecx
  424847:	mov    WORD PTR [ebp-0x40],ax
  42484b:	xor    eax,eax
  42484d:	mov    WORD PTR [ebp-0xf4],ax
  424854:	mov    WORD PTR [ebp-0x108],ax
  42485b:	mov    edi,DWORD PTR [ebp+0x24]
  42485e:	lea    eax,[ebp-0xf4]
  424864:	lea    edx,[ebp-0x54]
  424867:	mov    DWORD PTR [ebp-0xe0],0x2
  424871:	mov    DWORD PTR [ebp-0xdc],eax
  424877:	call   0x4272b1
  42487c:	mov    DWORD PTR [ebp-0xd8],eax
  424882:	lea    eax,[ebp-0xe0]
  424888:	push   eax
  424889:	mov    eax,DWORD PTR [ebp+0xc]
  42488c:	xor    eax,0x75108ac
  424891:	add    eax,ebx
  424893:	push   eax
  424894:	lea    eax,[ebp-0x9c]
  42489a:	push   eax
  42489b:	push   DWORD PTR [ebp-0x8]
  42489e:	mov    eax,DWORD PTR [ebp+0x10]
  4248a1:	call   eax
  4248a3:	mov    edi,DWORD PTR [ebp+0x24]
  4248a6:	lea    eax,[ebp-0x108]
  4248ac:	lea    edx,[ebp-0x40]
  4248af:	mov    DWORD PTR [ebp-0xdc],eax
  4248b5:	call   0x4272b1
  4248ba:	mov    DWORD PTR [ebp-0xd8],eax
  4248c0:	mov    edi,0x75108ac
  4248c5:	mov    eax,DWORD PTR [ebp+0x14]
  4248c8:	push   DWORD PTR [ebp-0x4]
  4248cb:	push   DWORD PTR [ebp+0x20]
  4248ce:	push   DWORD PTR [ebp+0x1c]
  4248d1:	push   DWORD PTR [ebp+0x18]
  4248d4:	push   DWORD PTR [ebp+0x10]
  4248d7:	push   DWORD PTR [ebp+0x8]
  4248da:	push   DWORD PTR [ebp+0xc]
  4248dd:	call   0x425b50
  4248e2:	test   eax,eax
  4248e4:	je     0x424928
  4248e6:	add    DWORD PTR [ebp-0x4],eax
  4248e9:	push   DWORD PTR [ebp-0x4]
  4248ec:	lea    esi,[ebp+0x4]
  4248ef:	call   0x424d40
  4248f4:	mov    eax,DWORD PTR [ebp-0x4]
  4248f7:	mov    eax,DWORD PTR [eax+0x1c8]
  4248fd:	mov    eax,DWORD PTR [eax]
  4248ff:	xor    eax,edi
  424901:	add    eax,ebx
  424903:	mov    eax,DWORD PTR [ebp-0x4]
  424906:	jne    0x42491e
  424908:	mov    ecx,DWORD PTR [ebp-0x4]
  42490b:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424911:	push   DWORD PTR [ecx]
  424913:	mov    eax,DWORD PTR [eax+0x1e0]
  424919:	call   DWORD PTR [eax+0x28]
  42491c:	jmp    0x424928
  42491e:	mov    eax,DWORD PTR [eax+0x17c]
  424924:	mov    eax,DWORD PTR [eax]
  424926:	add    DWORD PTR [esi],eax
  424928:	mov    eax,DWORD PTR [ebp-0x4]
  42492b:	mov    eax,DWORD PTR [eax+0x1dc]
  424931:	dec    DWORD PTR [eax]
  424933:	mov    ecx,DWORD PTR [ebp-0x4]
  424936:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42493c:	mov    eax,DWORD PTR [eax]
  42493e:	lea    eax,[ecx+eax*4]
  424941:	mov    ecx,DWORD PTR [ebp-0x4]
  424944:	mov    ecx,DWORD PTR [ecx+0x17c]
  42494a:	mov    eax,DWORD PTR [eax]
  42494c:	mov    ecx,DWORD PTR [ecx]
  42494e:	add    DWORD PTR [eax],ecx
  424950:	pop    edi
  424951:	pop    esi
  424952:	pop    ebx
  424953:	leave  
  424954:	ret    0x20
  424957:	push   edi
  424958:	push   esi
  424959:	push   ebx
  42495a:	push   ebp
  42495b:	mov    ebp,esp
  42495d:	mov    eax,DWORD PTR [ebp+0x24]
  424960:	add    DWORD PTR [ebp+0x28],eax
  424963:	push   eax
  424964:	cld    
  424965:	mov    esi,DWORD PTR [ebp+0x18]
  424968:	add    DWORD PTR [ebp+0x1c],esi
  42496b:	push   esi
  42496c:	mov    esi,DWORD PTR [ebp+0x14]
  42496f:	lods   eax,DWORD PTR ds:[esi]
  424970:	xchg   edx,eax
  424971:	push   edx
  424972:	mov    cl,BYTE PTR [esi-0x2]
  424975:	or     eax,0xffffffff
  424978:	shl    eax,cl
  42497a:	not    eax
  42497c:	push   eax
  42497d:	mov    cl,dh
  42497f:	or     eax,0xffffffff
  424982:	shl    eax,cl
  424984:	not    eax
  424986:	push   eax
  424987:	add    cl,dl
  424989:	mov    edi,esi
  42498b:	sub    esp,0xc
  42498e:	sub    eax,eax
  424990:	inc    eax
  424991:	push   eax
  424992:	push   eax
  424993:	push   eax
  424994:	push   eax
  424995:	push   eax
  424996:	push   edi
  424997:	sub    esi,esi
  424999:	push   esi
  42499a:	or     ebx,0xffffffff
  42499d:	mov    eax,0x300
  4249a2:	shl    eax,cl
  4249a4:	lea    ecx,[eax+0x736]
  4249aa:	mov    eax,0x4000400
  4249af:	shr    ecx,1
  4249b1:	rep stos DWORD PTR es:[edi],eax
  4249b3:	push   0x5
  4249b5:	pop    ecx
  4249b6:	call   0x424ca1
  4249bb:	loop   0x4249b6
  4249bd:	lea    esi,[esi]
  4249bf:	lea    edi,[edi]
  4249c1:	mov    edi,DWORD PTR [ebp-0x4]
  4249c4:	mov    eax,DWORD PTR [ebp-0x10]
  4249c7:	sub    edi,DWORD PTR [ebp+0x24]
  4249ca:	and    eax,edi
  4249cc:	mov    DWORD PTR [ebp-0x18],eax
  4249cf:	mov    al,0x0
  4249d1:	call   0x424cb9
  4249d6:	jne    0x424a71
  4249dc:	mov    cl,BYTE PTR [ebp-0xc]
  4249df:	and    edi,DWORD PTR [ebp-0x14]
  4249e2:	shl    edi,cl
  4249e4:	sub    cl,0x8
  4249e7:	neg    cl
  4249e9:	shr    esi,cl
  4249eb:	pop    eax
  4249ec:	add    edi,esi
  4249ee:	pop    esi
  4249ef:	lea    edi,[edi+edi*2]
  4249f2:	shl    edi,0x8
  4249f5:	cmp    al,0x7
  4249f7:	pop    edx
  4249f8:	lea    ecx,[esi+edi*2+0xe6c]
  4249ff:	push   ecx
  424a00:	push   esi
  424a01:	mov    esi,0x100
  424a06:	push   eax
  424a07:	mov    al,0x1
  424a09:	jb     0x424a3f
  424a0b:	mov    edi,DWORD PTR [ebp-0x4]
  424a0e:	sub    edi,DWORD PTR [ebp-0x24]
  424a11:	movzx  edi,BYTE PTR [edi]
  424a14:	mov    ebp,DWORD PTR [ebp-0x34]
  424a17:	shl    edi,1
  424a19:	mov    ecx,esi
  424a1b:	and    esi,edi
  424a1d:	add    ecx,esi
  424a1f:	lea    ebp,[ebp+ecx*2+0x0]
  424a23:	call   0x424cd8
  424a28:	mov    ecx,eax
  424a2a:	shr    esi,0x8
  424a2d:	and    ecx,0x1
  424a30:	cmp    esi,ecx
  424a32:	mov    esi,0x100
  424a37:	jne    0x424a47
  424a39:	cmp    eax,esi
  424a3b:	jb     0x424a14
  424a3d:	jmp    0x424a53
  424a3f:	mov    ebp,DWORD PTR [ebp-0x34]
  424a42:	call   0x424cd8
  424a47:	inc    eax
  424a48:	inc    esi
  424a49:	sub    eax,0x1
  424a4c:	sub    esi,0x1
  424a4f:	cmp    eax,esi
  424a51:	jb     0x424a3f
  424a53:	pop    edx
  424a54:	inc    edx
  424a55:	cmp    edx,0x5
  424a58:	dec    edx
  424a59:	mov    ecx,edx
  424a5b:	jb     0x424a6c
  424a5d:	inc    edx
  424a5e:	cmp    edx,0xb
  424a61:	dec    edx
  424a62:	mov    cl,0x4
  424a64:	dec    cl
  424a66:	jb     0x424a6c
  424a68:	mov    cl,0x7
  424a6a:	dec    cl
  424a6c:	sub    edx,ecx
  424a6e:	push   edx
  424a6f:	jmp    0x424ac0
  424a71:	mov    al,0xc1
  424a73:	dec    al
  424a75:	call   0x424cc9
  424a7a:	jne    0x424a90
  424a7c:	pop    eax
  424a7d:	pop    edi
  424a7e:	pop    edx
  424a7f:	pop    ecx
  424a80:	pop    edx
  424a81:	pop    ecx
  424a82:	push   DWORD PTR [esp]
  424a85:	push   ecx
  424a86:	push   edx
  424a87:	mov    edx,0x664
  424a8c:	mov    cl,0x0
  424a8e:	jmp    0x424b03
  424a90:	mov    al,0xcd
  424a92:	dec    al
  424a94:	call   0x424cc9
  424a99:	jne    0x424ac9
  424a9b:	mov    al,0xf1
  424a9d:	dec    al
  424a9f:	call   0x424cb9
  424aa4:	jne    0x424af9
  424aa6:	pop    eax
  424aa7:	cmp    al,0x7
  424aa9:	mov    al,0x9
  424aab:	jb     0x424aaf
  424aad:	mov    al,0xb
  424aaf:	push   eax
  424ab0:	mov    esi,DWORD PTR [ebp-0x4]
  424ab3:	sub    esi,DWORD PTR [ebp-0x24]
  424ab6:	cmp    esi,DWORD PTR [ebp+0x24]
  424ab9:	jb     0x424c90
  424abf:	lods   al,BYTE PTR ds:[esi]
  424ac0:	mov    edi,DWORD PTR [ebp-0x4]
  424ac3:	stos   BYTE PTR es:[edi],al
  424ac4:	jmp    0x424c57
  424ac9:	mov    al,0xd8
  424acb:	call   0x424cc9
  424ad0:	mov    esi,DWORD PTR [ebp-0x28]
  424ad3:	je     0x424af0
  424ad5:	mov    al,0xe4
  424ad7:	call   0x424cc9
  424adc:	mov    esi,DWORD PTR [ebp-0x2c]
  424adf:	je     0x424aea
  424ae1:	mov    esi,DWORD PTR [ebp-0x30]
  424ae4:	mov    ecx,DWORD PTR [ebp-0x2c]
  424ae7:	mov    DWORD PTR [ebp-0x30],ecx
  424aea:	mov    ecx,DWORD PTR [ebp-0x28]
  424aed:	mov    DWORD PTR [ebp-0x2c],ecx
  424af0:	mov    ecx,DWORD PTR [ebp-0x24]
  424af3:	mov    DWORD PTR [ebp-0x28],ecx
  424af6:	mov    DWORD PTR [ebp-0x24],esi
  424af9:	pop    eax
  424afa:	pop    edi
  424afb:	pop    ecx
  424afc:	mov    edx,0xa68
  424b01:	mov    cl,0x8
  424b03:	add    edx,edi
  424b05:	push   edx
  424b06:	push   edi
  424b07:	cmp    al,0x7
  424b09:	mov    al,cl
  424b0b:	jb     0x424b0f
  424b0d:	add    al,0x3
  424b0f:	push   eax
  424b10:	mov    ebp,DWORD PTR [ebp-0x34]
  424b13:	call   0x424cd6
  424b18:	jne    0x424b2e
  424b1a:	mov    eax,DWORD PTR [ebp-0x18]
  424b1d:	mov    edi,DWORD PTR [ebp-0x34]
  424b20:	shl    eax,0x3
  424b23:	sub    ecx,ecx
  424b25:	push   0x8
  424b27:	pop    esi
  424b28:	lea    edi,[edi+eax*2+0x4]
  424b2c:	jmp    0x424b63
  424b2e:	mov    ebp,DWORD PTR [ebp-0x34]
  424b31:	add    ebp,0x2
  424b34:	call   0x424cd6
  424b39:	jne    0x424b53
  424b3b:	mov    eax,DWORD PTR [ebp-0x18]
  424b3e:	mov    edi,DWORD PTR [ebp-0x34]
  424b41:	shl    eax,0x3
  424b44:	push   0x8
  424b46:	pop    ecx
  424b47:	push   0x8
  424b49:	pop    esi
  424b4a:	lea    edi,[edi+eax*2+0x104]
  424b51:	jmp    0x424b63
  424b53:	mov    edi,0x204
  424b58:	add    edi,DWORD PTR [ebp-0x34]
  424b5b:	push   0x10
  424b5d:	pop    ecx
  424b5e:	mov    esi,0x100
  424b63:	mov    DWORD PTR [ebp-0x1c],ecx
  424b66:	sub    eax,eax
  424b68:	inc    eax
  424b69:	mov    ebp,edi
  424b6b:	call   0x424cd8
  424b70:	mov    ecx,eax
  424b72:	sub    ecx,esi
  424b74:	jb     0x424b69
  424b76:	add    DWORD PTR [ebp-0x1c],ecx
  424b79:	cmp    DWORD PTR [ebp-0x3c],0x4
  424b7d:	jae    0x424c33
  424b83:	add    DWORD PTR [ebp-0x3c],0x7
  424b87:	mov    ecx,DWORD PTR [ebp-0x1c]
  424b8a:	cmp    ecx,0x4
  424b8d:	jb     0x424b92
  424b8f:	push   0x3
  424b91:	pop    ecx
  424b92:	mov    edi,DWORD PTR [ebp-0x38]
  424b95:	shl    ecx,0x6
  424b98:	sub    eax,eax
  424b9a:	inc    eax
  424b9b:	push   0x40
  424b9d:	pop    esi
  424b9e:	lea    edi,[edi+ecx*2+0x360]
  424ba5:	mov    ebp,edi
  424ba7:	call   0x424cd8
  424bac:	mov    ecx,eax
  424bae:	sub    ecx,esi
  424bb0:	jb     0x424ba5
  424bb2:	mov    DWORD PTR [ebp-0x18],ecx
  424bb5:	mov    DWORD PTR [ebp-0x24],ecx
  424bb8:	cmp    ecx,0x4
  424bbb:	jb     0x424c30
  424bbd:	mov    esi,ecx
  424bbf:	and    DWORD PTR [ebp-0x24],0x1
  424bc3:	shr    esi,1
  424bc5:	or     DWORD PTR [ebp-0x24],0x2
  424bc9:	dec    esi
  424bca:	cmp    ecx,0xe
  424bcd:	jae    0x424be8
  424bcf:	mov    eax,0x2af
  424bd4:	sub    eax,ecx
  424bd6:	mov    ecx,esi
  424bd8:	shl    BYTE PTR [ebp-0x24],cl
  424bdb:	add    eax,DWORD PTR [ebp-0x24]
  424bde:	shl    eax,1
  424be0:	add    eax,DWORD PTR [ebp-0x38]
  424be3:	mov    DWORD PTR [ebp-0x34],eax
  424be6:	jmp    0x424c15
  424be8:	sub    esi,0x4
  424beb:	call   0x424c95
  424bf0:	shr    ebx,1
  424bf2:	shl    DWORD PTR [ebp-0x24],1
  424bf5:	cmp    DWORD PTR [ebp-0x20],ebx
  424bf8:	jb     0x424c00
  424bfa:	inc    DWORD PTR [ebp-0x24]
  424bfd:	sub    DWORD PTR [ebp-0x20],ebx
  424c00:	dec    esi
  424c01:	jne    0x424beb
  424c03:	mov    eax,0x644
  424c08:	add    eax,DWORD PTR [ebp-0x38]
  424c0b:	mov    DWORD PTR [ebp-0x34],eax
  424c0e:	shl    DWORD PTR [ebp-0x24],0x4
  424c12:	push   0x4
  424c14:	pop    esi
  424c15:	sub    edi,edi
  424c17:	inc    edi
  424c18:	mov    eax,edi
  424c1a:	mov    ebp,DWORD PTR [ebp-0x34]
  424c1d:	call   0x424cd8
  424c22:	test   al,0x1
  424c24:	je     0x424c29
  424c26:	or     DWORD PTR [ebp-0x24],edi
  424c29:	shl    edi,1
  424c2b:	dec    esi
  424c2c:	jne    0x424c1a
  424c2e:	jmp    0x424c30
  424c30:	inc    DWORD PTR [ebp-0x24]
  424c33:	mov    ecx,DWORD PTR [ebp-0x1c]
  424c36:	add    ecx,0x2
  424c39:	mov    edi,DWORD PTR [ebp-0x4]
  424c3c:	mov    eax,edi
  424c3e:	sub    eax,DWORD PTR [ebp+0x24]
  424c41:	cmp    DWORD PTR [ebp-0x24],eax
  424c44:	ja     0x424c90
  424c46:	mov    esi,edi
  424c48:	sub    esi,DWORD PTR [ebp-0x24]
  424c4b:	mov    edx,DWORD PTR [ebp+0x28]
  424c4e:	lods   al,BYTE PTR ds:[esi]
  424c4f:	stos   BYTE PTR es:[edi],al
  424c50:	cmp    edi,edx
  424c52:	jae    0x424c57
  424c54:	dec    ecx
  424c55:	jne    0x424c4e
  424c57:	mov    DWORD PTR [ebp-0x4],edi
  424c5a:	movzx  esi,al
  424c5d:	cmp    edi,DWORD PTR [ebp+0x28]
  424c60:	jb     0x4249c1
  424c66:	call   0x424c95
  424c6b:	sub    eax,eax
  424c6d:	lea    ebp,[esp+0x3c]
  424c71:	mov    edx,DWORD PTR [ebp+0x20]
  424c74:	mov    esi,DWORD PTR [ebp-0x8]
  424c77:	sub    esi,DWORD PTR [ebp+0x18]
  424c7a:	mov    DWORD PTR [edx],esi
  424c7c:	mov    edx,DWORD PTR [ebp+0x2c]
  424c7f:	mov    edi,DWORD PTR [edx+edi*2+0x33]
  424c83:	jl     0x424c9c
  424c85:	lods   eax,DWORD PTR ds:[esi]
  424c86:	outs   dx,DWORD PTR ds:[esi]
  424c87:	scas   al,BYTE PTR es:[edi]
  424c88:	hlt    
  424c89:	add    BYTE PTR [edx+edx*4],al
  424c8c:	test   DWORD PTR [edi-0x75cc1800],0x8dea3688
  424c96:	jbe    0x424c1f
  424c98:	xchg   DWORD PTR [edi-0x6974af75],eax
  424c9e:	mov    ss,WORD PTR [esi]
  424ca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ca1:	loopne 0x424c58
  424ca3:	pop    esp
  424ca4:	push   0x73
  424ca6:	pop    esp
  424ca7:	not    DWORD PTR [edx+ebx*1-0x4b]
  424cab:	pushf  
  424cac:	or     cl,BYTE PTR [esi-0x52c658f6]
  424cb2:	pushf  
  424cb3:	or     ch,BYTE PTR [ebp-0x69ff95a4]
  424cb9:	mov    ch,0xbc
  424cbb:	call   0x970e:0x8e8a61c3
  424cc2:	xchg   ebx,eax
  424cc3:	pushf  
  424cc4:	sub    dl,BYTE PTR [ebx-0x3c60c972]
  424cca:	popa   
  424ccb:	mov    dl,BYTE PTR [ebx+0x3cb59a9c]
  424cd1:	stos   BYTE PTR es:[edi],al
  424cd2:	mov    ebp,0x33879c38
  424cd7:	mov    bh,BYTE PTR [ebp-0x727863c8]
  424cdd:	jbe    0x424c66
  424cdf:	xchg   DWORD PTR [edi-0x4a08ab75],eax
  424ce5:	mov    eax,0x188e6717
  424cea:	pop    ss
  424ceb:	pop    es
  424cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ced:	jae    0x424ca7
  424cef:	pop    ss
  424cf0:	clc    
  424cf1:	push   esp
  424cf2:	stc    
  424cf3:	mov    cl,0xcb
  424cf5:	xchg   BYTE PTR [eax+0x168e6717],bl
  424cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424cfc:	test   eax,0x8b0717d8
  424d01:	retf   
  424d02:	movzx  edx,WORD PTR [ebp+0x0]
  424d06:	shr    ecx,0xb
  424d09:	imul   ecx,edx
  424d0c:	cmp    DWORD PTR [esp+0x20],ecx
  424d10:	jae    0x424d29
  424d12:	mov    ebx,ecx
  424d14:	mov    ecx,0x800
  424d19:	sub    ecx,edx
  424d1b:	shr    ecx,0x5
  424d1e:	add    WORD PTR [ebp+0x0],cx
  424d22:	add    eax,eax
  424d24:	lea    ebp,[esp+0x40]
  424d28:	ret    
  424d29:	shr    edx,0x5
  424d2c:	sub    DWORD PTR [esp+0x20],ecx
  424d30:	sub    ebx,ecx
  424d32:	sub    WORD PTR [ebp+0x0],dx
  424d36:	add    eax,eax
  424d38:	add    eax,0x1
  424d3b:	lea    ebp,[esp+0x40]
  424d3f:	ret    
  424d40:	push   ebp
  424d41:	mov    ebp,esp
  424d43:	sub    esp,0x12c
  424d49:	push   ebx
  424d4a:	push   esi
  424d4b:	push   edi
  424d4c:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  424d53:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  424d5a:	mov    eax,DWORD PTR [ebp+0x8]
  424d5d:	mov    DWORD PTR [ebp+0x8],eax
  424d60:	mov    ecx,DWORD PTR [ebp-0x10]
  424d63:	mov    ebx,0x75108ac
  424d68:	xor    ecx,ebx
  424d6a:	mov    eax,0x3272f3
  424d6f:	add    ecx,eax
  424d71:	mov    DWORD PTR [ebp-0x24],ecx
  424d74:	mov    ecx,DWORD PTR [ebp-0x10]
  424d77:	xor    ecx,ebx
  424d79:	add    ecx,eax
  424d7b:	mov    DWORD PTR [ebp-0x40],ecx
  424d7e:	mov    ecx,DWORD PTR [ebp-0x10]
  424d81:	xor    ecx,ebx
  424d83:	add    ecx,eax
  424d85:	mov    DWORD PTR [ebp-0x3c],ecx
  424d88:	mov    ecx,DWORD PTR [ebp-0x10]
  424d8b:	xor    ecx,ebx
  424d8d:	add    ecx,eax
  424d8f:	mov    DWORD PTR [ebp-0xd8],ecx
  424d95:	mov    DWORD PTR [ebp-0x50],0xf89f05a1
  424d9c:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a1
  424da3:	mov    DWORD PTR [ebp-0x54],0xf89c85bd
  424daa:	push   0x25
  424dac:	pop    ecx
  424dad:	mov    DWORD PTR [ebp-0x30],ecx
  424db0:	mov    DWORD PTR [ebp-0x30],ecx
  424db3:	push   0x65
  424db5:	pop    ecx
  424db6:	mov    DWORD PTR [ebp-0x30],ecx
  424db9:	mov    DWORD PTR [ebp-0x30],ecx
  424dbc:	mov    DWORD PTR [ebp-0x30],0x4d
  424dc3:	mov    DWORD PTR [ebp-0x30],0x43
  424dca:	mov    ecx,DWORD PTR [ebp-0x10]
  424dcd:	xor    ecx,ebx
  424dcf:	add    ecx,eax
  424dd1:	mov    DWORD PTR [ebp-0x30],ecx
  424dd4:	mov    ecx,DWORD PTR [ebp-0x10]
  424dd7:	xor    ecx,ebx
  424dd9:	add    ecx,eax
  424ddb:	mov    DWORD PTR [ebp-0x30],ecx
  424dde:	mov    DWORD PTR [ebp-0x28],0x258
  424de5:	mov    DWORD PTR [ebp-0x34],0x36
  424dec:	mov    DWORD PTR [ebp-0x14],0x7a
  424df3:	lea    edi,[ebp-0x10c]
  424df9:	lea    esi,[ebp-0x12c]
  424dff:	call   0x425abf
  424e04:	dec    DWORD PTR [ebp-0x14]
  424e07:	jne    0x424df3
  424e09:	dec    DWORD PTR [ebp-0x34]
  424e0c:	jne    0x424dec
  424e0e:	dec    DWORD PTR [ebp-0x28]
  424e11:	jne    0x424de5
  424e13:	mov    DWORD PTR [ebp-0x28],0x400e
  424e1a:	mov    eax,DWORD PTR [ebp-0x10]
  424e1d:	xor    eax,ebx
  424e1f:	mov    esi,0x3272f3
  424e24:	add    eax,esi
  424e26:	mov    DWORD PTR [ebp-0x1c],eax
  424e29:	mov    eax,DWORD PTR [ebp-0x10]
  424e2c:	and    DWORD PTR [ebp-0x94],0x0
  424e33:	xor    eax,ebx
  424e35:	add    eax,esi
  424e37:	mov    DWORD PTR [ebp-0x38],eax
  424e3a:	mov    eax,fs:0x18
  424e40:	mov    DWORD PTR [ebp-0x94],eax
  424e46:	mov    eax,DWORD PTR [eax+0x30]
  424e49:	mov    DWORD PTR [ebp-0xcc],eax
  424e4f:	mov    eax,DWORD PTR [eax+0xc]
  424e52:	mov    DWORD PTR [ebp-0xc0],eax
  424e58:	mov    eax,DWORD PTR [ebp+0x8]
  424e5b:	lea    ecx,[ebp-0x94]
  424e61:	mov    DWORD PTR [eax+0x1a0],ecx
  424e67:	mov    eax,DWORD PTR [ebp+0x8]
  424e6a:	lea    ecx,[ebp-0xcc]
  424e70:	mov    DWORD PTR [eax+0x1a4],ecx
  424e76:	mov    eax,DWORD PTR [ebp+0x8]
  424e79:	push   DWORD PTR [ebp+0x8]
  424e7c:	lea    ecx,[ebp-0xc0]
  424e82:	mov    DWORD PTR [eax+0x1a8],ecx
  424e88:	call   0x427282
  424e8d:	mov    ecx,DWORD PTR [ebp-0x10]
  424e90:	xor    ecx,ebx
  424e92:	add    ecx,esi
  424e94:	cmp    ecx,eax
  424e96:	je     0x425219
  424e9c:	mov    eax,DWORD PTR [ebp+0x8]
  424e9f:	mov    eax,DWORD PTR [eax+0x194]
  424ea5:	mov    ecx,DWORD PTR [eax]
  424ea7:	mov    eax,DWORD PTR [ebp+0x8]
  424eaa:	mov    eax,DWORD PTR [eax+0x194]
  424eb0:	mov    eax,DWORD PTR [eax]
  424eb2:	add    eax,DWORD PTR [ecx+0x3c]
  424eb5:	mov    ecx,DWORD PTR [ebp+0x8]
  424eb8:	mov    ecx,DWORD PTR [ecx+0x1e0]
  424ebe:	lea    edx,[ebp-0xec]
  424ec4:	push   edx
  424ec5:	mov    edx,DWORD PTR [ebp+0x8]
  424ec8:	mov    edx,DWORD PTR [edx+0x18c]
  424ece:	mov    edx,DWORD PTR [edx]
  424ed0:	add    edx,DWORD PTR [eax+0x88]
  424ed6:	push   0x4
  424ed8:	push   DWORD PTR [eax+0x8c]
  424ede:	push   edx
  424edf:	call   DWORD PTR [ecx+0x1c]
  424ee2:	push   DWORD PTR [ebp+0x8]
  424ee5:	xor    eax,eax
  424ee7:	mov    DWORD PTR [ebp-0xa8],0x1b3c0c3a
  424ef1:	mov    DWORD PTR [ebp-0xa4],0x10370d22
  424efb:	mov    DWORD PTR [ebp-0xa0],0x420d1e08
  424f05:	mov    BYTE PTR [ebp-0x9c],0x83
  424f0c:	lea    edi,[ebp-0x9b]
  424f12:	stos   DWORD PTR es:[edi],eax
  424f13:	stos   WORD PTR es:[edi],ax
  424f15:	stos   BYTE PTR es:[edi],al
  424f16:	xor    eax,eax
  424f18:	mov    DWORD PTR [ebp-0xbc],0x1b3c0c3a
  424f22:	mov    DWORD PTR [ebp-0xb8],0x10370d22
  424f2c:	mov    DWORD PTR [ebp-0xb4],0x280d1e08
  424f36:	mov    BYTE PTR [ebp-0xb0],0x83
  424f3d:	lea    edi,[ebp-0xaf]
  424f43:	stos   DWORD PTR es:[edi],eax
  424f44:	stos   WORD PTR es:[edi],ax
  424f46:	stos   BYTE PTR es:[edi],al
  424f47:	mov    edi,DWORD PTR [ebp+0x8]
  424f4a:	mov    eax,DWORD PTR [ebp+0x8]
  424f4d:	mov    edx,DWORD PTR [eax+0x1b8]
  424f53:	mov    DWORD PTR [ebp-0x68],0xd0f0c17
  424f5a:	mov    DWORD PTR [ebp-0x64],0x1a13161c
  424f61:	mov    WORD PTR [ebp-0x60],0x8342
  424f67:	mov    DWORD PTR [ebp-0x90],0x1b3c0c3a
  424f71:	mov    DWORD PTR [ebp-0x8c],0x17420d22
  424f7b:	mov    DWORD PTR [ebp-0x88],0x31221b13
  424f85:	mov    DWORD PTR [ebp-0x84],0xd1e160e
  424f8f:	mov    DWORD PTR [ebp-0x80],0x83421c1a
  424f96:	mov    DWORD PTR [ebp-0x7c],0x1b3c0c3a
  424f9d:	mov    DWORD PTR [ebp-0x78],0x17420d22
  424fa4:	mov    DWORD PTR [ebp-0x74],0x31221b13
  424fab:	mov    DWORD PTR [ebp-0x70],0xd1e160e
  424fb2:	mov    DWORD PTR [ebp-0x6c],0x83281c1a
  424fb9:	call   0x4272b1
  424fbe:	push   eax
  424fbf:	mov    eax,DWORD PTR [ebp+0x8]
  424fc2:	mov    eax,DWORD PTR [eax+0x1a8]
  424fc8:	push   DWORD PTR [eax]
  424fca:	call   0x426f52
  424fcf:	test   eax,eax
  424fd1:	jne    0x425023
  424fd3:	mov    eax,DWORD PTR [ebp+0x8]
  424fd6:	mov    eax,DWORD PTR [eax+0x1e0]
  424fdc:	mov    edi,DWORD PTR [ebp+0x8]
  424fdf:	add    eax,0x4
  424fe2:	mov    DWORD PTR [ebp-0x20],eax
  424fe5:	mov    eax,DWORD PTR [ebp+0x8]
  424fe8:	mov    edx,DWORD PTR [eax+0x1b8]
  424fee:	call   0x4272b1
  424ff3:	push   eax
  424ff4:	mov    eax,DWORD PTR [ebp-0x20]
  424ff7:	call   DWORD PTR [eax]
  424ff9:	test   eax,eax
  424ffb:	jne    0x425023
  424ffd:	mov    eax,DWORD PTR [ebp+0x8]
  425000:	mov    eax,DWORD PTR [eax+0x1e0]
  425006:	mov    edi,DWORD PTR [ebp+0x8]
  425009:	add    eax,0x10
  42500c:	mov    DWORD PTR [ebp-0x20],eax
  42500f:	mov    eax,DWORD PTR [ebp+0x8]
  425012:	mov    edx,DWORD PTR [eax+0x1b8]
  425018:	call   0x4272b1
  42501d:	push   eax
  42501e:	mov    eax,DWORD PTR [ebp-0x20]
  425021:	call   DWORD PTR [eax]
  425023:	mov    eax,DWORD PTR [ebp-0x10]
  425026:	mov    ecx,DWORD PTR [ebp-0x28]
  425029:	xor    eax,ebx
  42502b:	add    eax,esi
  42502d:	cmp    eax,ecx
  42502f:	je     0x4251f2
  425035:	mov    eax,DWORD PTR [ebp-0x18]
  425038:	xor    eax,ebx
  42503a:	mov    ecx,0xffcd8d0d
  42503f:	sub    ecx,eax
  425041:	add    ecx,DWORD PTR [ebp-0x28]
  425044:	mov    eax,DWORD PTR [ebp-0x1c]
  425047:	cmp    eax,ecx
  425049:	ja     0x4251f2
  42504f:	mov    DWORD PTR [ebp-0x34],0x0
  425056:	push   DWORD PTR [ebp+0x8]
  425059:	mov    edi,DWORD PTR [ebp+0x8]
  42505c:	mov    eax,DWORD PTR [ebp+0x8]
  42505f:	mov    edx,DWORD PTR [eax+0x1b4]
  425065:	call   0x4272b1
  42506a:	push   eax
  42506b:	mov    eax,DWORD PTR [ebp+0x8]
  42506e:	mov    eax,DWORD PTR [eax+0x1a8]
  425074:	push   DWORD PTR [eax]
  425076:	call   0x426f52
  42507b:	mov    ecx,DWORD PTR [ebp+0x8]
  42507e:	mov    ecx,DWORD PTR [ecx+0x19c]
  425084:	mov    DWORD PTR [ecx],eax
  425086:	mov    eax,DWORD PTR [ebp+0x8]
  425089:	mov    edi,DWORD PTR [eax+0x1e0]
  42508f:	mov    esi,DWORD PTR [ebp+0x8]
  425092:	xor    eax,eax
  425094:	lea    edx,[ebp-0x7c]
  425097:	call   0x4272e7
  42509c:	push   eax
  42509d:	mov    eax,DWORD PTR [ebp+0x8]
  4250a0:	mov    eax,DWORD PTR [eax+0x19c]
  4250a6:	push   DWORD PTR [eax]
  4250a8:	call   DWORD PTR [edi+0x8]
  4250ab:	mov    DWORD PTR [ebp-0x20],eax
  4250ae:	mov    eax,DWORD PTR [ebp+0x8]
  4250b1:	mov    edi,DWORD PTR [eax+0x1e0]
  4250b7:	mov    esi,DWORD PTR [ebp+0x8]
  4250ba:	xor    eax,eax
  4250bc:	lea    edx,[ebp-0x90]
  4250c2:	call   0x4272e7
  4250c7:	push   eax
  4250c8:	mov    eax,DWORD PTR [ebp+0x8]
  4250cb:	mov    eax,DWORD PTR [eax+0x19c]
  4250d1:	push   DWORD PTR [eax]
  4250d3:	call   DWORD PTR [edi+0x8]
  4250d6:	mov    eax,DWORD PTR [ebp+0x8]
  4250d9:	mov    edi,DWORD PTR [eax+0x1e0]
  4250df:	mov    esi,DWORD PTR [ebp+0x8]
  4250e2:	xor    eax,eax
  4250e4:	lea    edx,[ebp-0xa8]
  4250ea:	call   0x4272e7
  4250ef:	push   eax
  4250f0:	mov    eax,DWORD PTR [ebp+0x8]
  4250f3:	mov    eax,DWORD PTR [eax+0x19c]
  4250f9:	push   DWORD PTR [eax]
  4250fb:	call   DWORD PTR [edi+0x8]
  4250fe:	and    DWORD PTR [ebp-0x8],0x0
  425102:	mov    DWORD PTR [ebp-0x48],eax
  425105:	mov    eax,DWORD PTR [ebp-0x8]
  425108:	and    eax,0x7
  42510b:	add    eax,0x31
  42510e:	push   eax
  42510f:	call   DWORD PTR [ebp-0x20]
  425112:	test   eax,eax
  425114:	je     0x425158
  425116:	mov    eax,DWORD PTR [ebp-0x8]
  425119:	push   0x19
  42511b:	xor    edx,edx
  42511d:	pop    ecx
  42511e:	div    ecx
  425120:	add    dl,0x41
  425123:	movzx  eax,dl
  425126:	push   eax
  425127:	call   DWORD PTR [ebp-0x48]
  42512a:	test   eax,eax
  42512c:	jne    0x425158
  42512e:	mov    eax,DWORD PTR [ebp+0x8]
  425131:	mov    edi,DWORD PTR [eax+0x1e0]
  425137:	mov    esi,DWORD PTR [ebp+0x8]
  42513a:	xor    eax,eax
  42513c:	lea    edx,[ebp-0x68]
  42513f:	call   0x4272e7
  425144:	push   eax
  425145:	mov    eax,DWORD PTR [ebp+0x8]
  425148:	mov    eax,DWORD PTR [eax+0x198]
  42514e:	push   DWORD PTR [eax]
  425150:	call   DWORD PTR [edi+0x8]
  425153:	mov    DWORD PTR [ebp-0x14],eax
  425156:	jmp    0x42515c
  425158:	and    DWORD PTR [ebp-0x14],0x0
  42515c:	inc    DWORD PTR [ebp-0x8]
  42515f:	cmp    DWORD PTR [ebp-0x8],0x10
  425163:	jb     0x425105
  425165:	mov    eax,DWORD PTR [ebp-0x18]
  425168:	mov    esi,DWORD PTR [ebp+0x8]
  42516b:	xor    eax,ebx
  42516d:	mov    edi,0x3272f3
  425172:	add    eax,edi
  425174:	lea    edx,[ebp-0x10c]
  42517a:	call   0x4272e7
  42517f:	push   eax
  425180:	mov    eax,DWORD PTR [ebp-0x10]
  425183:	mov    esi,DWORD PTR [ebp+0x8]
  425186:	xor    eax,ebx
  425188:	add    eax,edi
  42518a:	lea    edx,[ebp-0x12c]
  425190:	call   0x4272e7
  425195:	push   eax
  425196:	call   DWORD PTR [ebp-0x14]
  425199:	mov    ecx,DWORD PTR [ebp-0x10]
  42519c:	xor    ecx,ebx
  42519e:	add    ecx,edi
  4251a0:	cmp    ecx,eax
  4251a2:	jne    0x4251ab
  4251a4:	mov    DWORD PTR [ebp-0x34],0x1
  4251ab:	mov    eax,DWORD PTR [ebp-0x18]
  4251ae:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251b1:	xor    eax,ebx
  4251b3:	lea    eax,[eax+ecx*1+0x3272f3]
  4251ba:	mov    DWORD PTR [ebp-0x1c],eax
  4251bd:	mov    eax,DWORD PTR [ebp-0x34]
  4251c0:	test   eax,eax
  4251c2:	je     0x4251d6
  4251c4:	mov    eax,DWORD PTR [ebp-0x18]
  4251c7:	mov    ecx,DWORD PTR [ebp-0x38]
  4251ca:	xor    eax,ebx
  4251cc:	lea    eax,[eax+ecx*1+0x3272f3]
  4251d3:	mov    DWORD PTR [ebp-0x38],eax
  4251d6:	mov    eax,DWORD PTR [ebp-0x18]
  4251d9:	xor    eax,ebx
  4251db:	mov    ecx,0xffcd8d0d
  4251e0:	sub    ecx,eax
  4251e2:	add    ecx,DWORD PTR [ebp-0x28]
  4251e5:	mov    eax,DWORD PTR [ebp-0x1c]
  4251e8:	cmp    eax,ecx
  4251ea:	jbe    0x42504f
  4251f0:	mov    esi,edi
  4251f2:	mov    eax,DWORD PTR [ebp-0x38]
  4251f5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251f8:	cmp    ecx,eax
  4251fa:	jne    0x42520d
  4251fc:	push   DWORD PTR [ebp+0x8]
  4251ff:	lea    eax,[ebp-0x40]
  425202:	push   eax
  425203:	call   0x427d56
  425208:	mov    DWORD PTR [ebp-0x24],eax
  42520b:	jmp    0x425219
  42520d:	mov    eax,DWORD PTR [ebp-0x24]
  425210:	mov    ecx,DWORD PTR [ebp-0x18]
  425213:	xor    ecx,ebx
  425215:	add    ecx,esi
  425217:	xor    DWORD PTR [eax],ecx
  425219:	mov    eax,DWORD PTR [ebp-0x10]
  42521c:	mov    ecx,DWORD PTR [ebp-0x24]
  42521f:	xor    eax,ebx
  425221:	add    eax,esi
  425223:	cmp    eax,ecx
  425225:	je     0x42599d
  42522b:	mov    eax,DWORD PTR [ebp-0x10]
  42522e:	mov    ecx,DWORD PTR [ebp-0x40]
  425231:	xor    eax,ebx
  425233:	add    eax,esi
  425235:	cmp    eax,ecx
  425237:	je     0x42599d
  42523d:	mov    eax,DWORD PTR [ebp-0x10]
  425240:	xor    eax,ebx
  425242:	add    eax,esi
  425244:	jmp    0x425262
  425246:	mov    edi,DWORD PTR [ebp-0x24]
  425249:	mov    cl,al
  42524b:	and    cl,0x1f
  42524e:	or     dl,0xff
  425251:	sub    dl,cl
  425253:	add    BYTE PTR [edi+eax*1],dl
  425256:	mov    ecx,DWORD PTR [ebp-0x18]
  425259:	xor    ecx,ebx
  42525b:	lea    eax,[eax+ecx*1+0x3272f3]
  425262:	mov    ecx,DWORD PTR [ebp-0x40]
  425265:	cmp    eax,ecx
  425267:	jb     0x425246
  425269:	mov    eax,DWORD PTR [ebp-0x40]
  42526c:	mov    DWORD PTR [ebp-0x28],eax
  42526f:	mov    eax,DWORD PTR [ebp-0x24]
  425272:	mov    DWORD PTR [ebp-0x38],0xf89c85a1
  425279:	mov    DWORD PTR [ebp-0xd4],eax
  42527f:	mov    edi,0xf89c85a2
  425284:	mov    DWORD PTR [ebp-0x2c],edi
  425287:	mov    eax,DWORD PTR [ebp-0x38]
  42528a:	xor    eax,ebx
  42528c:	add    eax,esi
  42528e:	mov    DWORD PTR [ebp-0xc],eax
  425291:	mov    eax,DWORD PTR [ebp-0x38]
  425294:	xor    eax,ebx
  425296:	add    eax,esi
  425298:	mov    DWORD PTR [ebp-0x8],eax
  42529b:	mov    DWORD PTR [ebp-0x48],0xf89c8581
  4252a2:	mov    DWORD PTR [ebp-0x4c],0xf89c85b8
  4252a9:	mov    eax,DWORD PTR [ebp-0x38]
  4252ac:	mov    ecx,DWORD PTR [ebp-0x28]
  4252af:	xor    eax,ebx
  4252b1:	add    eax,esi
  4252b3:	cmp    ecx,eax
  4252b5:	je     0x4254b4
  4252bb:	jmp    0x425490
  4252c0:	mov    ecx,DWORD PTR [ebp-0xc]
  4252c3:	mov    eax,DWORD PTR [ebp-0x28]
  4252c6:	sub    eax,ecx
  4252c8:	mov    ecx,DWORD PTR [ebp-0x48]
  4252cb:	xor    ecx,ebx
  4252cd:	add    ecx,esi
  4252cf:	xor    edx,edx
  4252d1:	div    ecx
  4252d3:	mov    DWORD PTR [ebp-0x8],eax
  4252d6:	mov    eax,DWORD PTR [ebp-0x4c]
  4252d9:	mov    ecx,DWORD PTR [ebp-0x8]
  4252dc:	xor    eax,ebx
  4252de:	add    eax,esi
  4252e0:	cmp    ecx,eax
  4252e2:	jbe    0x4252ee
  4252e4:	mov    eax,DWORD PTR [ebp-0x4c]
  4252e7:	xor    eax,ebx
  4252e9:	add    eax,esi
  4252eb:	mov    DWORD PTR [ebp-0x8],eax
  4252ee:	mov    eax,DWORD PTR [ebp-0x48]
  4252f1:	mov    ecx,DWORD PTR [ebp-0x8]
  4252f4:	xor    eax,ebx
  4252f6:	add    eax,esi
  4252f8:	imul   eax,ecx
  4252fb:	mov    DWORD PTR [ebp-0x8],eax
  4252fe:	mov    eax,DWORD PTR [ebp-0x38]
  425301:	mov    ecx,DWORD PTR [ebp-0x8]
  425304:	xor    eax,ebx
  425306:	add    eax,esi
  425308:	cmp    ecx,eax
  42530a:	je     0x42547e
  425310:	mov    eax,DWORD PTR [ebp-0x8]
  425313:	mov    DWORD PTR [ebp-0x14],eax
  425316:	mov    eax,DWORD PTR [ebp-0xc]
  425319:	add    eax,DWORD PTR [ebp-0xd4]
  42531f:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  425326:	mov    DWORD PTR [ebp-0x34],edi
  425329:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  425333:	mov    DWORD PTR [ebp-0x8],eax
  425336:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  42533d:	mov    DWORD PTR [ebp-0x1c],edi
  425340:	mov    eax,DWORD PTR [ebp-0x20]
  425343:	xor    eax,ebx
  425345:	add    eax,esi
  425347:	jmp    0x42543d
  42534c:	mov    DWORD PTR [ebp-0xe0],0xf89c85b4
  425356:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  425360:	mov    eax,DWORD PTR [ebp-0x1c]
  425363:	mov    ecx,DWORD PTR [ebp-0x44]
  425366:	xor    eax,ebx
  425368:	add    eax,esi
  42536a:	imul   eax,ecx
  42536d:	mov    ecx,DWORD PTR [ebp-0x8]
  425370:	mov    al,BYTE PTR [eax+ecx*1]
  425373:	mov    BYTE PTR [ebp-0x2],al
  425376:	mov    eax,DWORD PTR [ebp-0x1c]
  425379:	mov    ecx,DWORD PTR [ebp-0x44]
  42537c:	xor    eax,ebx
  42537e:	add    eax,esi
  425380:	imul   eax,ecx
  425383:	mov    ecx,DWORD PTR [ebp-0xe8]
  425389:	xor    ecx,ebx
  42538b:	add    eax,ecx
  42538d:	mov    ecx,DWORD PTR [ebp-0x8]
  425390:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  425398:	mov    ecx,DWORD PTR [ebp-0xe0]
  42539e:	xor    ecx,ebx
  4253a0:	lea    eax,[ecx+eax*1+0x3272f3]
  4253a7:	movzx  ecx,BYTE PTR [ebp-0x2]
  4253ab:	xor    ecx,eax
  4253ad:	mov    BYTE PTR [ebp-0x2],cl
  4253b0:	mov    al,BYTE PTR [ebp-0x2]
  4253b3:	mov    ecx,DWORD PTR [ebp-0x1c]
  4253b6:	mov    edx,DWORD PTR [ebp-0x44]
  4253b9:	xor    ecx,ebx
  4253bb:	add    ecx,esi
  4253bd:	imul   ecx,edx
  4253c0:	mov    edx,DWORD PTR [ebp-0x8]
  4253c3:	mov    BYTE PTR [ecx+edx*1],al
  4253c6:	mov    eax,DWORD PTR [ebp-0x1c]
  4253c9:	mov    ecx,DWORD PTR [ebp-0x44]
  4253cc:	xor    eax,ebx
  4253ce:	add    eax,esi
  4253d0:	imul   eax,ecx
  4253d3:	mov    ecx,DWORD PTR [ebp-0x8]
  4253d6:	mov    al,BYTE PTR [eax+ecx*1]
  4253d9:	mov    BYTE PTR [ebp-0x2],al
  4253dc:	mov    eax,DWORD PTR [ebp-0x1c]
  4253df:	mov    ecx,DWORD PTR [ebp-0x44]
  4253e2:	xor    eax,ebx
  4253e4:	add    eax,esi
  4253e6:	imul   eax,ecx
  4253e9:	mov    ecx,DWORD PTR [ebp-0x34]
  4253ec:	xor    ecx,ebx
  4253ee:	add    eax,ecx
  4253f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4253f3:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  4253fb:	mov    ecx,DWORD PTR [ebp-0xc4]
  425401:	xor    ecx,ebx
  425403:	lea    eax,[ecx+eax*1+0x3272f3]
  42540a:	movzx  ecx,BYTE PTR [ebp-0x2]
  42540e:	xor    ecx,eax
  425410:	mov    BYTE PTR [ebp-0x2],cl
  425413:	mov    al,BYTE PTR [ebp-0x2]
  425416:	mov    ecx,DWORD PTR [ebp-0x1c]
  425419:	mov    edx,DWORD PTR [ebp-0x44]
  42541c:	xor    ecx,ebx
  42541e:	add    ecx,esi
  425420:	imul   ecx,edx
  425423:	mov    edx,DWORD PTR [ebp-0x8]
  425426:	mov    BYTE PTR [ecx+edx*1],al
  425429:	mov    eax,DWORD PTR [ebp-0x30]
  42542c:	mov    ecx,DWORD PTR [ebp-0x34]
  42542f:	xor    eax,ebx
  425431:	xor    ecx,ebx
  425433:	add    eax,esi
  425435:	add    ecx,esi
  425437:	imul   eax,ecx
  42543a:	add    eax,DWORD PTR [ebp-0x44]
  42543d:	mov    DWORD PTR [ebp-0x44],eax
  425440:	mov    eax,DWORD PTR [ebp-0x44]
  425443:	mov    ecx,DWORD PTR [ebp-0x14]
  425446:	cmp    ecx,eax
  425448:	jb     0x42534c
  42544e:	mov    eax,DWORD PTR [ebp-0x34]
  425451:	mov    ecx,DWORD PTR [ebp-0x14]
  425454:	xor    eax,ebx
  425456:	add    eax,esi
  425458:	imul   eax,ecx
  42545b:	mov    ecx,DWORD PTR [ebp-0x20]
  42545e:	xor    ecx,ebx
  425460:	add    ecx,esi
  425462:	or     eax,ecx
  425464:	mov    ecx,DWORD PTR [ebp-0x2c]
  425467:	xor    ecx,ebx
  425469:	add    eax,ecx
  42546b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42546e:	xor    ecx,ebx
  425470:	add    eax,ecx
  425472:	mov    ecx,DWORD PTR [ebp-0xc]
  425475:	lea    eax,[eax+ecx*1+0x64e5e6]
  42547c:	jmp    0x42548d
  42547e:	mov    eax,DWORD PTR [ebp-0x2c]
  425481:	mov    ecx,DWORD PTR [ebp-0xc]
  425484:	xor    eax,ebx
  425486:	lea    eax,[eax+ecx*1+0x3272f3]
  42548d:	mov    DWORD PTR [ebp-0xc],eax
  425490:	mov    eax,DWORD PTR [ebp-0x2c]
  425493:	xor    eax,ebx
  425495:	mov    ecx,0xffcd8d0d
  42549a:	sub    ecx,eax
  42549c:	add    ecx,DWORD PTR [ebp-0x28]
  42549f:	mov    eax,DWORD PTR [ebp-0x2c]
  4254a2:	mov    edx,DWORD PTR [ebp-0xc]
  4254a5:	xor    eax,ebx
  4254a7:	add    eax,esi
  4254a9:	imul   eax,edx
  4254ac:	cmp    eax,ecx
  4254ae:	jbe    0x4252c0
  4254b4:	mov    eax,DWORD PTR [ebp-0x10]
  4254b7:	mov    ecx,DWORD PTR [ebp-0x40]
  4254ba:	mov    eax,DWORD PTR [ebp+0x8]
  4254bd:	mov    edx,DWORD PTR [ebp-0x54]
  4254c0:	mov    eax,DWORD PTR [eax+0x1e0]
  4254c6:	xor    edx,ebx
  4254c8:	add    edx,esi
  4254ca:	push   edx
  4254cb:	mov    edx,DWORD PTR [ebp-0x3c]
  4254ce:	xor    edx,ebx
  4254d0:	add    edx,esi
  4254d2:	push   edx
  4254d3:	push   ecx
  4254d4:	mov    DWORD PTR [ebp-0x30],ecx
  4254d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4254da:	xor    ecx,ebx
  4254dc:	add    ecx,esi
  4254de:	push   ecx
  4254df:	call   DWORD PTR [eax+0x14]
  4254e2:	mov    edi,eax
  4254e4:	mov    eax,DWORD PTR [ebp-0x10]
  4254e7:	xor    eax,ebx
  4254e9:	add    eax,esi
  4254eb:	cmp    eax,edi
  4254ed:	je     0x425548
  4254ef:	mov    eax,DWORD PTR [ebp-0x10]
  4254f2:	jmp    0x425515
  4254f4:	mov    ecx,DWORD PTR [ebp-0x24]
  4254f7:	xor    eax,ebx
  4254f9:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f3]
  425500:	mov    BYTE PTR [eax+edi*1+0x3272f3],cl
  425507:	mov    ecx,DWORD PTR [ebp-0x18]
  42550a:	xor    ecx,ebx
  42550c:	lea    eax,[ecx+eax*1+0x3272f3]
  425513:	xor    eax,ebx
  425515:	mov    ecx,DWORD PTR [ebp-0x40]
  425518:	sub    ecx,esi
  42551a:	xor    ecx,ebx
  42551c:	cmp    eax,ecx
  42551e:	jne    0x4254f4
  425520:	mov    eax,DWORD PTR [ebp+0x8]
  425523:	mov    ecx,DWORD PTR [ebp-0x50]
  425526:	mov    eax,DWORD PTR [eax+0x1e0]
  42552c:	xor    ecx,ebx
  42552e:	add    ecx,esi
  425530:	push   ecx
  425531:	mov    ecx,DWORD PTR [ebp-0x10]
  425534:	xor    ecx,ebx
  425536:	add    ecx,esi
  425538:	push   ecx
  425539:	push   DWORD PTR [ebp-0x24]
  42553c:	call   DWORD PTR [eax+0x18]
  42553f:	mov    eax,DWORD PTR [ebp-0x30]
  425542:	mov    DWORD PTR [ebp-0x24],edi
  425545:	mov    DWORD PTR [ebp-0x40],eax
  425548:	mov    edi,DWORD PTR [ebp-0x24]
  42554b:	mov    eax,DWORD PTR [ebp-0x18]
  42554e:	mov    ecx,DWORD PTR [ebp-0x10]
  425551:	xor    eax,ebx
  425553:	mov    DWORD PTR [ebp-0x30],edi
  425556:	add    eax,esi
  425558:	mov    DWORD PTR [ebp-0x5c],0x422b332b
  42555f:	mov    DWORD PTR [ebp-0x58],0x342b3c2b
  425566:	jmp    0x42559a
  425568:	xor    ecx,ebx
  42556a:	mov    dl,BYTE PTR [ebp+ecx*1+0x327297]
  425571:	xor    dl,0x7d
  425574:	add    dl,0x2
  425577:	mov    DWORD PTR [ebp-0x3c],ecx
  42557a:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f3]
  425582:	movzx  edx,dl
  425585:	cmp    ecx,edx
  425587:	jne    0x4255a4
  425589:	mov    ecx,DWORD PTR [ebp-0x18]
  42558c:	mov    edx,DWORD PTR [ebp-0x3c]
  42558f:	xor    ecx,ebx
  425591:	lea    ecx,[ecx+edx*1+0x3272f3]
  425598:	xor    ecx,ebx
  42559a:	cmp    ecx,0xf89c85b9
  4255a0:	jne    0x425568
  4255a2:	jmp    0x4255ab
  4255a4:	mov    eax,DWORD PTR [ebp-0x10]
  4255a7:	xor    eax,ebx
  4255a9:	add    eax,esi
  4255ab:	mov    ecx,DWORD PTR [ebp-0x10]
  4255ae:	xor    ecx,ebx
  4255b0:	add    ecx,esi
  4255b2:	cmp    ecx,eax
  4255b4:	je     0x425727
  4255ba:	mov    eax,DWORD PTR [edi+0x8]
  4255bd:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  4255c4:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d0
  4255cb:	mov    DWORD PTR [ebp-0x48],0xf89cb5a1
  4255d2:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  4255d9:	mov    DWORD PTR [ebp-0x14],eax
  4255dc:	mov    eax,DWORD PTR [ebp+0x8]
  4255df:	mov    ecx,DWORD PTR [ebp-0x20]
  4255e2:	xor    ecx,ebx
  4255e4:	add    ecx,esi
  4255e6:	push   ecx
  4255e7:	mov    ecx,DWORD PTR [ebp-0x48]
  4255ea:	mov    eax,DWORD PTR [eax+0x1e0]
  4255f0:	xor    ecx,ebx
  4255f2:	add    ecx,esi
  4255f4:	push   ecx
  4255f5:	mov    ecx,DWORD PTR [ebp-0x3c]
  4255f8:	xor    ecx,ebx
  4255fa:	add    ecx,esi
  4255fc:	push   ecx
  4255fd:	mov    ecx,DWORD PTR [ebp-0xc]
  425600:	xor    ecx,ebx
  425602:	add    ecx,esi
  425604:	push   ecx
  425605:	call   DWORD PTR [eax+0x14]
  425608:	mov    edi,eax
  42560a:	mov    eax,DWORD PTR [ebp+0x8]
  42560d:	mov    ecx,DWORD PTR [ebp-0x20]
  425610:	mov    eax,DWORD PTR [eax+0x1e0]
  425616:	xor    ecx,ebx
  425618:	add    ecx,esi
  42561a:	push   ecx
  42561b:	mov    ecx,DWORD PTR [ebp-0x48]
  42561e:	xor    ecx,ebx
  425620:	add    ecx,esi
  425622:	push   ecx
  425623:	mov    ecx,DWORD PTR [ebp-0xc]
  425626:	push   DWORD PTR [ebp-0x14]
  425629:	xor    ecx,ebx
  42562b:	add    ecx,esi
  42562d:	push   ecx
  42562e:	call   DWORD PTR [eax+0x14]
  425631:	mov    ecx,DWORD PTR [ebp-0xc]
  425634:	xor    ecx,ebx
  425636:	add    ecx,esi
  425638:	mov    DWORD PTR [ebp-0x20],eax
  42563b:	cmp    ecx,edi
  42563d:	je     0x4259ca
  425643:	mov    ecx,DWORD PTR [ebp-0xc]
  425646:	xor    ecx,ebx
  425648:	add    ecx,esi
  42564a:	cmp    ecx,eax
  42564c:	je     0x4259ca
  425652:	mov    DWORD PTR [ebp-0x3c],0xf89c85bc
  425659:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  425660:	mov    ecx,DWORD PTR [ebp-0x3c]
  425663:	xor    cl,0xac
  425666:	sub    cl,0xd
  425669:	mov    BYTE PTR [edi],cl
  42566b:	mov    ecx,DWORD PTR [ebp-0xc]
  42566e:	xor    cl,0xac
  425671:	sub    cl,0xd
  425674:	mov    BYTE PTR [edi+0x1],cl
  425677:	mov    ecx,DWORD PTR [ebp-0x54]
  42567a:	xor    cl,0xac
  42567d:	sub    cl,0xd
  425680:	mov    BYTE PTR [edi+0x2],cl
  425683:	and    DWORD PTR [ebp-0xc8],0x0
  42568a:	and    DWORD PTR [ebp-0xdc],0x0
  425691:	lea    ecx,[ebp-0xdc]
  425697:	push   ecx
  425698:	push   DWORD PTR [ebp-0x14]
  42569b:	push   eax
  42569c:	lea    eax,[ebp-0xc8]
  4256a2:	push   eax
  4256a3:	mov    eax,DWORD PTR [ebp-0x30]
  4256a6:	push   DWORD PTR [eax+0xc]
  4256a9:	mov    eax,DWORD PTR [ebp-0x24]
  4256ac:	add    eax,0x10
  4256af:	push   eax
  4256b0:	push   edi
  4256b1:	call   0x424957
  4256b6:	mov    DWORD PTR [ebp-0x3c],eax
  4256b9:	mov    eax,DWORD PTR [ebp+0x8]
  4256bc:	mov    ecx,DWORD PTR [ebp-0x50]
  4256bf:	mov    eax,DWORD PTR [eax+0x1e0]
  4256c5:	xor    ecx,ebx
  4256c7:	add    ecx,esi
  4256c9:	push   ecx
  4256ca:	mov    ecx,DWORD PTR [ebp-0xc]
  4256cd:	xor    ecx,ebx
  4256cf:	add    ecx,esi
  4256d1:	push   ecx
  4256d2:	push   edi
  4256d3:	call   DWORD PTR [eax+0x18]
  4256d6:	mov    eax,DWORD PTR [ebp-0x3c]
  4256d9:	add    eax,0xffcd8d0d
  4256de:	xor    eax,ebx
  4256e0:	cmp    eax,0xf89c85a1
  4256e5:	mov    eax,DWORD PTR [ebp+0x8]
  4256e8:	mov    eax,DWORD PTR [eax+0x1e0]
  4256ee:	mov    ecx,DWORD PTR [ebp-0x50]
  4256f1:	jne    0x425714
  4256f3:	xor    ecx,ebx
  4256f5:	add    ecx,esi
  4256f7:	push   ecx
  4256f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4256fb:	xor    ecx,ebx
  4256fd:	add    ecx,esi
  4256ff:	push   ecx
  425700:	push   DWORD PTR [ebp-0x24]
  425703:	call   DWORD PTR [eax+0x18]
  425706:	mov    eax,DWORD PTR [ebp-0x20]
  425709:	mov    DWORD PTR [ebp-0x24],eax
  42570c:	mov    eax,DWORD PTR [ebp-0x14]
  42570f:	mov    DWORD PTR [ebp-0x40],eax
  425712:	jmp    0x425727
  425714:	xor    ecx,ebx
  425716:	add    ecx,esi
  425718:	push   ecx
  425719:	mov    ecx,DWORD PTR [ebp-0xc]
  42571c:	xor    ecx,ebx
  42571e:	add    ecx,esi
  425720:	push   ecx
  425721:	push   DWORD PTR [ebp-0x20]
  425724:	call   DWORD PTR [eax+0x18]
  425727:	mov    eax,DWORD PTR [ebp-0x40]
  42572a:	mov    DWORD PTR [ebp-0x38],eax
  42572d:	mov    eax,DWORD PTR [ebp-0x24]
  425730:	mov    DWORD PTR [ebp-0x28],0xf89c85a1
  425737:	mov    DWORD PTR [ebp-0x3c],eax
  42573a:	mov    edi,0xf89c85a2
  42573f:	mov    DWORD PTR [ebp-0x2c],edi
  425742:	mov    eax,DWORD PTR [ebp-0x28]
  425745:	xor    eax,ebx
  425747:	add    eax,esi
  425749:	mov    DWORD PTR [ebp-0xc],eax
  42574c:	mov    eax,DWORD PTR [ebp-0x28]
  42574f:	xor    eax,ebx
  425751:	add    eax,esi
  425753:	mov    DWORD PTR [ebp-0x14],eax
  425756:	mov    DWORD PTR [ebp-0x48],0xf89c8581
  42575d:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  425764:	mov    eax,DWORD PTR [ebp-0x28]
  425767:	mov    ecx,DWORD PTR [ebp-0x38]
  42576a:	xor    eax,ebx
  42576c:	add    eax,esi
  42576e:	cmp    ecx,eax
  425770:	je     0x425966
  425776:	jmp    0x425942
  42577b:	mov    ecx,DWORD PTR [ebp-0xc]
  42577e:	mov    eax,DWORD PTR [ebp-0x38]
  425781:	sub    eax,ecx
  425783:	mov    ecx,DWORD PTR [ebp-0x48]
  425786:	xor    ecx,ebx
  425788:	add    ecx,esi
  42578a:	xor    edx,edx
  42578c:	div    ecx
  42578e:	mov    DWORD PTR [ebp-0x14],eax
  425791:	mov    eax,DWORD PTR [ebp-0x20]
  425794:	mov    ecx,DWORD PTR [ebp-0x14]
  425797:	xor    eax,ebx
  425799:	add    eax,esi
  42579b:	cmp    ecx,eax
  42579d:	jbe    0x4257a9
  42579f:	mov    eax,DWORD PTR [ebp-0x20]
  4257a2:	xor    eax,ebx
  4257a4:	add    eax,esi
  4257a6:	mov    DWORD PTR [ebp-0x14],eax
  4257a9:	mov    eax,DWORD PTR [ebp-0x48]
  4257ac:	mov    ecx,DWORD PTR [ebp-0x14]
  4257af:	xor    eax,ebx
  4257b1:	add    eax,esi
  4257b3:	imul   eax,ecx
  4257b6:	mov    DWORD PTR [ebp-0x14],eax
  4257b9:	mov    eax,DWORD PTR [ebp-0x28]
  4257bc:	mov    ecx,DWORD PTR [ebp-0x14]
  4257bf:	xor    eax,ebx
  4257c1:	add    eax,esi
  4257c3:	cmp    ecx,eax
  4257c5:	je     0x425930
  4257cb:	mov    eax,DWORD PTR [ebp-0x14]
  4257ce:	mov    DWORD PTR [ebp-0x34],eax
  4257d1:	mov    eax,DWORD PTR [ebp-0xc]
  4257d4:	add    eax,DWORD PTR [ebp-0x3c]
  4257d7:	mov    DWORD PTR [ebp-0x4c],0xf89c85a1
  4257de:	mov    DWORD PTR [ebp-0x14],edi
  4257e1:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  4257e8:	mov    DWORD PTR [ebp-0x1c],eax
  4257eb:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  4257f2:	mov    DWORD PTR [ebp-0x8],edi
  4257f5:	mov    eax,DWORD PTR [ebp-0x4c]
  4257f8:	xor    eax,ebx
  4257fa:	add    eax,esi
  4257fc:	jmp    0x4258ef
  425801:	mov    DWORD PTR [ebp-0xe4],0xf89c85b4
  42580b:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  425815:	mov    eax,DWORD PTR [ebp-0x8]
  425818:	mov    ecx,DWORD PTR [ebp-0x18]
  42581b:	xor    eax,ebx
  42581d:	add    eax,esi
  42581f:	imul   eax,ecx
  425822:	mov    ecx,DWORD PTR [ebp-0x1c]
  425825:	mov    al,BYTE PTR [eax+ecx*1]
  425828:	mov    BYTE PTR [ebp-0x1],al
  42582b:	mov    eax,DWORD PTR [ebp-0x8]
  42582e:	mov    ecx,DWORD PTR [ebp-0x18]
  425831:	xor    eax,ebx
  425833:	add    eax,esi
  425835:	imul   eax,ecx
  425838:	mov    ecx,DWORD PTR [ebp-0x54]
  42583b:	xor    ecx,ebx
  42583d:	add    eax,ecx
  42583f:	mov    ecx,DWORD PTR [ebp-0x1c]
  425842:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  42584a:	mov    ecx,DWORD PTR [ebp-0xe4]
  425850:	xor    ecx,ebx
  425852:	lea    eax,[ecx+eax*1+0x3272f3]
  425859:	movzx  ecx,BYTE PTR [ebp-0x1]
  42585d:	xor    ecx,eax
  42585f:	mov    BYTE PTR [ebp-0x1],cl
  425862:	mov    al,BYTE PTR [ebp-0x1]
  425865:	mov    ecx,DWORD PTR [ebp-0x8]
  425868:	mov    edx,DWORD PTR [ebp-0x18]
  42586b:	xor    ecx,ebx
  42586d:	add    ecx,esi
  42586f:	imul   ecx,edx
  425872:	mov    edx,DWORD PTR [ebp-0x1c]
  425875:	mov    BYTE PTR [ecx+edx*1],al
  425878:	mov    eax,DWORD PTR [ebp-0x8]
  42587b:	mov    ecx,DWORD PTR [ebp-0x18]
  42587e:	xor    eax,ebx
  425880:	add    eax,esi
  425882:	imul   eax,ecx
  425885:	mov    ecx,DWORD PTR [ebp-0x1c]
  425888:	mov    al,BYTE PTR [eax+ecx*1]
  42588b:	mov    BYTE PTR [ebp-0x1],al
  42588e:	mov    eax,DWORD PTR [ebp-0x8]
  425891:	mov    ecx,DWORD PTR [ebp-0x18]
  425894:	xor    eax,ebx
  425896:	add    eax,esi
  425898:	imul   eax,ecx
  42589b:	mov    ecx,DWORD PTR [ebp-0x14]
  42589e:	xor    ecx,ebx
  4258a0:	add    eax,ecx
  4258a2:	mov    ecx,DWORD PTR [ebp-0x1c]
  4258a5:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  4258ad:	mov    ecx,DWORD PTR [ebp-0xd0]
  4258b3:	xor    ecx,ebx
  4258b5:	lea    eax,[ecx+eax*1+0x3272f3]
  4258bc:	movzx  ecx,BYTE PTR [ebp-0x1]
  4258c0:	xor    ecx,eax
  4258c2:	mov    BYTE PTR [ebp-0x1],cl
  4258c5:	mov    al,BYTE PTR [ebp-0x1]
  4258c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4258cb:	mov    edx,DWORD PTR [ebp-0x18]
  4258ce:	xor    ecx,ebx
  4258d0:	add    ecx,esi
  4258d2:	imul   ecx,edx
  4258d5:	mov    edx,DWORD PTR [ebp-0x1c]
  4258d8:	mov    BYTE PTR [ecx+edx*1],al
  4258db:	mov    eax,DWORD PTR [ebp-0x30]
  4258de:	mov    ecx,DWORD PTR [ebp-0x14]
  4258e1:	xor    eax,ebx
  4258e3:	xor    ecx,ebx
  4258e5:	add    eax,esi
  4258e7:	add    ecx,esi
  4258e9:	imul   eax,ecx
  4258ec:	add    eax,DWORD PTR [ebp-0x18]
  4258ef:	mov    DWORD PTR [ebp-0x18],eax
  4258f2:	mov    eax,DWORD PTR [ebp-0x18]
  4258f5:	mov    ecx,DWORD PTR [ebp-0x34]
  4258f8:	cmp    ecx,eax
  4258fa:	jb     0x425801
  425900:	mov    eax,DWORD PTR [ebp-0x14]
  425903:	mov    ecx,DWORD PTR [ebp-0x34]
  425906:	xor    eax,ebx
  425908:	add    eax,esi
  42590a:	imul   eax,ecx
  42590d:	mov    ecx,DWORD PTR [ebp-0x4c]
  425910:	xor    ecx,ebx
  425912:	add    ecx,esi
  425914:	or     eax,ecx
  425916:	mov    ecx,DWORD PTR [ebp-0x2c]
  425919:	xor    ecx,ebx
  42591b:	add    eax,ecx
  42591d:	mov    ecx,DWORD PTR [ebp-0x2c]
  425920:	xor    ecx,ebx
  425922:	add    eax,ecx
  425924:	mov    ecx,DWORD PTR [ebp-0xc]
  425927:	lea    eax,[eax+ecx*1+0x64e5e6]
  42592e:	jmp    0x42593f
  425930:	mov    eax,DWORD PTR [ebp-0x2c]
  425933:	mov    ecx,DWORD PTR [ebp-0xc]
  425936:	xor    eax,ebx
  425938:	lea    eax,[eax+ecx*1+0x3272f3]
  42593f:	mov    DWORD PTR [ebp-0xc],eax
  425942:	mov    eax,DWORD PTR [ebp-0x2c]
  425945:	xor    eax,ebx
  425947:	mov    ecx,0xffcd8d0d
  42594c:	sub    ecx,eax
  42594e:	add    ecx,DWORD PTR [ebp-0x38]
  425951:	mov    eax,DWORD PTR [ebp-0x2c]
  425954:	mov    edx,DWORD PTR [ebp-0xc]
  425957:	xor    eax,ebx
  425959:	add    eax,esi
  42595b:	imul   eax,edx
  42595e:	cmp    eax,ecx
  425960:	jbe    0x42577b
  425966:	push   DWORD PTR [ebp+0x8]
  425969:	mov    eax,DWORD PTR [ebp+0x8]
  42596c:	push   DWORD PTR [eax+0x1cc]
  425972:	lea    eax,[ebp-0xd8]
  425978:	push   eax
  425979:	mov    eax,DWORD PTR [ebp+0x8]
  42597c:	mov    eax,DWORD PTR [eax+0x1c4]
  425982:	push   DWORD PTR [eax]
  425984:	mov    eax,DWORD PTR [ebp+0x8]
  425987:	mov    eax,DWORD PTR [eax+0x1c0]
  42598d:	push   DWORD PTR [eax]
  42598f:	push   DWORD PTR [ebp-0x40]
  425992:	push   DWORD PTR [ebp-0x24]
  425995:	call   0x42642c
  42599a:	mov    DWORD PTR [ebp-0x3c],eax
  42599d:	mov    eax,DWORD PTR [ebp-0x10]
  4259a0:	mov    ecx,DWORD PTR [ebp-0x24]
  4259a3:	xor    eax,ebx
  4259a5:	add    eax,esi
  4259a7:	cmp    eax,ecx
  4259a9:	je     0x4259ca
  4259ab:	mov    eax,DWORD PTR [ebp+0x8]
  4259ae:	mov    ecx,DWORD PTR [ebp-0x50]
  4259b1:	mov    eax,DWORD PTR [eax+0x1e0]
  4259b7:	xor    ecx,ebx
  4259b9:	add    ecx,esi
  4259bb:	push   ecx
  4259bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4259bf:	xor    ecx,ebx
  4259c1:	add    ecx,esi
  4259c3:	push   ecx
  4259c4:	push   DWORD PTR [ebp-0x24]
  4259c7:	call   DWORD PTR [eax+0x18]
  4259ca:	pop    edi
  4259cb:	pop    esi
  4259cc:	pop    ebx
  4259cd:	leave  
  4259ce:	ret    0x4
  4259d1:	push   ebp
  4259d2:	mov    ebp,esp
  4259d4:	push   ecx
  4259d5:	push   ecx
  4259d6:	lea    eax,[ebp-0x8]
  4259d9:	mov    DWORD PTR [ebp-0x4],eax
  4259dc:	push   esi
  4259dd:	mov    esi,DWORD PTR [ebp-0x4]
  4259e0:	mov    eax,0xf881ba2f
  4259e5:	mov    DWORD PTR [esi],eax
  4259e7:	mov    esi,DWORD PTR [ebp-0x8]
  4259ea:	cmp    esi,eax
  4259ec:	pop    esi
  4259ed:	jne    0x4259f7
  4259ef:	mov    BYTE PTR [ecx+0xa],0x83
  4259f3:	mov    BYTE PTR [edx+0x8],0x2c
  4259f7:	mov    BYTE PTR [edx+0xa],0x83
  4259fb:	mov    BYTE PTR [ecx+0x2],0x11
  4259ff:	leave  
  425a00:	ret    
  425a01:	push   ebp
  425a02:	mov    ebp,esp
  425a04:	push   ecx
  425a05:	push   ecx
  425a06:	lea    eax,[ebp-0x8]
  425a09:	mov    DWORD PTR [ebp-0x4],eax
  425a0c:	mov    edx,DWORD PTR [ebp-0x4]
  425a0f:	mov    eax,0xf88b0bcb
  425a14:	mov    DWORD PTR [edx],eax
  425a16:	mov    edx,DWORD PTR [ebp-0x8]
  425a19:	cmp    edx,eax
  425a1b:	jne    0x425a2c
  425a1d:	mov    eax,DWORD PTR [ebp+0x8]
  425a20:	mov    BYTE PTR [ecx+0x9],0xf
  425a24:	mov    BYTE PTR [eax+0x7],0x54
  425a28:	mov    BYTE PTR [ecx+0x6],0xc
  425a2c:	mov    BYTE PTR [ecx+0x3],0x1f
  425a30:	leave  
  425a31:	ret    0x4
  425a34:	push   ebp
  425a35:	mov    ebp,esp
  425a37:	push   ecx
  425a38:	push   ecx
  425a39:	lea    eax,[ebp-0x8]
  425a3c:	mov    DWORD PTR [ebp-0x4],eax
  425a3f:	mov    edx,DWORD PTR [ebp-0x4]
  425a42:	mov    eax,0x7e0da2f
  425a47:	mov    DWORD PTR [edx],eax
  425a49:	mov    edx,DWORD PTR [ebp-0x8]
  425a4c:	cmp    edx,eax
  425a4e:	jne    0x425a54
  425a50:	mov    BYTE PTR [ecx+0x7],0x54
  425a54:	mov    eax,DWORD PTR [ebp+0x8]
  425a57:	mov    BYTE PTR [ecx+0x1],0x1a
  425a5b:	mov    BYTE PTR [eax+0x9],0x2f
  425a5f:	leave  
  425a60:	ret    0x4
  425a63:	push   ebp
  425a64:	mov    ebp,esp
  425a66:	push   ecx
  425a67:	push   ecx
  425a68:	lea    eax,[ebp-0x8]
  425a6b:	mov    DWORD PTR [ebp-0x4],eax
  425a6e:	push   esi
  425a6f:	mov    esi,DWORD PTR [ebp-0x4]
  425a72:	mov    eax,0x7060e38
  425a77:	mov    DWORD PTR [esi],eax
  425a79:	mov    esi,DWORD PTR [ebp-0x8]
  425a7c:	cmp    esi,eax
  425a7e:	pop    esi
  425a7f:	jne    0x425a8b
  425a81:	mov    BYTE PTR [edx+0x4],0x10
  425a85:	mov    WORD PTR [ecx+0x3],0x101f
  425a8b:	mov    BYTE PTR [edx],0x3c
  425a8e:	leave  
  425a8f:	ret    
  425a90:	push   ebp
  425a91:	mov    ebp,esp
  425a93:	push   ecx
  425a94:	push   ecx
  425a95:	lea    eax,[ebp-0x8]
  425a98:	mov    DWORD PTR [ebp-0x4],eax
  425a9b:	mov    edx,DWORD PTR [ebp-0x4]
  425a9e:	mov    eax,0xf8870b3f
  425aa3:	mov    DWORD PTR [edx],eax
  425aa5:	mov    edx,DWORD PTR [ebp-0x8]
  425aa8:	cmp    edx,eax
  425aaa:	jne    0x425ab7
  425aac:	mov    eax,DWORD PTR [ebp+0x8]
  425aaf:	mov    BYTE PTR [ecx+0x8],0xc
  425ab3:	mov    BYTE PTR [eax+0x1],0x1a
  425ab7:	mov    BYTE PTR [ecx+0x5],0x8
  425abb:	leave  
  425abc:	ret    0x4
  425abf:	push   esi
  425ac0:	mov    ecx,edi
  425ac2:	call   0x425a90
  425ac7:	mov    edx,edi
  425ac9:	mov    ecx,esi
  425acb:	mov    BYTE PTR [esi],0x1c
  425ace:	call   0x425a63
  425ad3:	push   esi
  425ad4:	mov    ecx,edi
  425ad6:	mov    BYTE PTR [esi+0x5],0x8
  425ada:	call   0x425a34
  425adf:	push   esi
  425ae0:	mov    BYTE PTR [esi+0x6],0xc
  425ae4:	call   0x425a01
  425ae9:	mov    BYTE PTR [esi+0x2],0x11
  425aed:	mov    edx,esi
  425aef:	jmp    0x4259d1
  425af4:	push   ebp
  425af5:	mov    ebp,esp
  425af7:	push   ecx
  425af8:	mov    ecx,DWORD PTR [edx+0x194]
  425afe:	push   esi
  425aff:	mov    esi,DWORD PTR [ebp+0x8]
  425b02:	mov    esi,DWORD PTR [esi]
  425b04:	mov    DWORD PTR [ecx],esi
  425b06:	mov    ecx,DWORD PTR [edx+0x194]
  425b0c:	mov    ecx,DWORD PTR [ecx]
  425b0e:	mov    esi,DWORD PTR [edx+0x190]
  425b14:	mov    DWORD PTR [esi],ecx
  425b16:	mov    eax,DWORD PTR [edx+0x194]
  425b1c:	mov    ecx,DWORD PTR [eax]
  425b1e:	mov    ecx,DWORD PTR [ecx+0x3c]
  425b21:	add    ecx,DWORD PTR [eax]
  425b23:	mov    DWORD PTR [ebp-0x4],0xf89ca5a1
  425b2a:	mov    eax,DWORD PTR [ebp-0x4]
  425b2d:	movzx  ecx,WORD PTR [ecx+0x16]
  425b31:	xor    eax,0x75108ac
  425b36:	add    eax,0x3272f3
  425b3b:	pop    esi
  425b3c:	test   ecx,eax
  425b3e:	je     0x425b4c
  425b40:	mov    eax,DWORD PTR [edx+0x1c8]
  425b46:	mov    DWORD PTR [eax],0xf89c85a2
  425b4c:	leave  
  425b4d:	ret    0x4
  425b50:	push   ebp
  425b51:	mov    ebp,esp
  425b53:	sub    esp,0x70
  425b56:	and    DWORD PTR [ebp-0x20],0x0
  425b5a:	mov    DWORD PTR [ebp-0x18],0xf89cb5a1
  425b61:	mov    DWORD PTR [ebp-0x1c],0xf89c85e1
  425b68:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  425b6f:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  425b76:	mov    DWORD PTR [ebp-0x2c],0xf89f05a1
  425b7d:	mov    eax,DWORD PTR [ebp+0x20]
  425b80:	mov    eax,DWORD PTR [eax+0x194]
  425b86:	mov    DWORD PTR [ebp-0xc],eax
  425b89:	mov    eax,DWORD PTR [ebp+0x20]
  425b8c:	push   ebx
  425b8d:	push   esi
  425b8e:	mov    esi,DWORD PTR [eax+0x190]
  425b94:	mov    eax,DWORD PTR [ebp+0x20]
  425b97:	mov    eax,DWORD PTR [eax+0x18c]
  425b9d:	mov    DWORD PTR [ebp-0x8],eax
  425ba0:	mov    eax,DWORD PTR [eax]
  425ba2:	push   edi
  425ba3:	mov    DWORD PTR [ebp-0x4],esi
  425ba6:	test   eax,eax
  425ba8:	jne    0x425bb5
  425baa:	push   DWORD PTR [ebp+0x1c]
  425bad:	mov    edx,DWORD PTR [ebp+0x20]
  425bb0:	call   0x425af4
  425bb5:	mov    eax,DWORD PTR [esi]
  425bb7:	mov    ebx,DWORD PTR [esi]
  425bb9:	add    ebx,DWORD PTR [eax+0x3c]
  425bbc:	mov    eax,DWORD PTR [ebp+0xc]
  425bbf:	mov    ecx,DWORD PTR [ebp-0x8]
  425bc2:	mov    ecx,DWORD PTR [ecx]
  425bc4:	mov    esi,0x75108ac
  425bc9:	xor    eax,esi
  425bcb:	mov    edi,0x3272f3
  425bd0:	add    eax,edi
  425bd2:	cmp    eax,ecx
  425bd4:	jne    0x425e0c
  425bda:	mov    eax,DWORD PTR [ebp-0xc]
  425bdd:	mov    eax,DWORD PTR [eax]
  425bdf:	mov    DWORD PTR [ebp-0x10],eax
  425be2:	mov    eax,DWORD PTR [ebx+0x50]
  425be5:	mov    DWORD PTR [ebp-0x68],eax
  425be8:	mov    eax,DWORD PTR [ebp-0x18]
  425beb:	xor    eax,esi
  425bed:	add    eax,edi
  425bef:	mov    DWORD PTR [ebp-0x64],eax
  425bf2:	mov    eax,DWORD PTR [ebp-0x14]
  425bf5:	and    DWORD PTR [ebp-0x6c],0x0
  425bf9:	xor    eax,esi
  425bfb:	add    eax,edi
  425bfd:	mov    DWORD PTR [ebp-0x60],eax
  425c00:	lea    eax,[ebp-0x70]
  425c03:	push   eax
  425c04:	mov    eax,DWORD PTR [ebp+0x8]
  425c07:	xor    eax,esi
  425c09:	add    eax,edi
  425c0b:	push   eax
  425c0c:	mov    eax,DWORD PTR [ebp+0x20]
  425c0f:	add    eax,0xaa
  425c14:	push   eax
  425c15:	mov    eax,DWORD PTR [ebp+0x20]
  425c18:	mov    eax,DWORD PTR [eax+0x198]
  425c1e:	mov    DWORD PTR [ebp-0x70],0x4
  425c25:	push   DWORD PTR [eax]
  425c27:	mov    eax,DWORD PTR [ebp+0x10]
  425c2a:	call   eax
  425c2c:	mov    ecx,DWORD PTR [ebp-0xc]
  425c2f:	mov    ecx,DWORD PTR [ecx]
  425c31:	mov    edx,DWORD PTR [ebp-0x8]
  425c34:	mov    DWORD PTR [ebp-0x6c],eax
  425c37:	mov    DWORD PTR [ebp+0x1c],eax
  425c3a:	mov    DWORD PTR [edx],ecx
  425c3c:	mov    ecx,DWORD PTR [ebp-0x4]
  425c3f:	mov    DWORD PTR [ecx],eax
  425c41:	mov    eax,DWORD PTR [ebx+0x50]
  425c44:	mov    DWORD PTR [ebp-0x68],eax
  425c47:	mov    eax,DWORD PTR [ebp-0x1c]
  425c4a:	xor    eax,esi
  425c4c:	add    eax,edi
  425c4e:	mov    DWORD PTR [ebp-0x64],eax
  425c51:	lea    eax,[ebp-0x20]
  425c54:	mov    DWORD PTR [ebp-0x60],eax
  425c57:	lea    eax,[ebp-0x70]
  425c5a:	push   eax
  425c5b:	mov    eax,DWORD PTR [ebp+0x8]
  425c5e:	xor    eax,esi
  425c60:	add    eax,edi
  425c62:	push   eax
  425c63:	mov    eax,DWORD PTR [ebp+0x20]
  425c66:	add    eax,0xee
  425c6b:	push   eax
  425c6c:	mov    eax,DWORD PTR [ebp+0x20]
  425c6f:	mov    eax,DWORD PTR [eax+0x198]
  425c75:	mov    DWORD PTR [ebp-0x70],0x4
  425c7c:	push   DWORD PTR [eax]
  425c7e:	mov    eax,DWORD PTR [ebp+0x10]
  425c81:	call   eax
  425c83:	test   eax,eax
  425c85:	je     0x425caa
  425c87:	and    DWORD PTR [ebp+0xc],0x0
  425c8b:	cmp    DWORD PTR [ebx+0x50],0x0
  425c8f:	jbe    0x425caa
  425c91:	mov    eax,DWORD PTR [ebp+0x1c]
  425c94:	mov    ecx,DWORD PTR [ebp-0x10]
  425c97:	sub    ecx,eax
  425c99:	mov    dl,BYTE PTR [ecx+eax*1]
  425c9c:	inc    DWORD PTR [ebp+0xc]
  425c9f:	mov    BYTE PTR [eax],dl
  425ca1:	mov    edx,DWORD PTR [ebp+0xc]
  425ca4:	inc    eax
  425ca5:	cmp    edx,DWORD PTR [ebx+0x50]
  425ca8:	jb     0x425c99
  425caa:	mov    edx,DWORD PTR [ebp+0x1c]
  425cad:	mov    ecx,DWORD PTR [edx+0x3c]
  425cb0:	add    ecx,edx
  425cb2:	mov    eax,DWORD PTR [ecx+0xa0]
  425cb8:	mov    ebx,DWORD PTR [ecx+0x28]
  425cbb:	add    eax,edx
  425cbd:	sub    edx,DWORD PTR [ebp-0x10]
  425cc0:	add    ebx,DWORD PTR [ebp+0x1c]
  425cc3:	mov    DWORD PTR [ebp+0xc],edx
  425cc6:	mov    DWORD PTR [ebp-0x2c],ecx
  425cc9:	mov    DWORD PTR [ebp-0x14],ebx
  425ccc:	mov    DWORD PTR [ebp-0x8],0x0
  425cd3:	jmp    0x425d4f
  425cd5:	add    edx,0xfffffff8
  425cd8:	shr    edx,1
  425cda:	mov    DWORD PTR [ebp-0x18],edx
  425cdd:	je     0x425d3b
  425cdf:	lea    edx,[eax+0x8]
  425ce2:	mov    DWORD PTR [ebp-0x4],edx
  425ce5:	mov    edx,DWORD PTR [ebp-0x18]
  425ce8:	mov    DWORD PTR [ebp-0x18],edx
  425ceb:	mov    edx,DWORD PTR [ebp-0x4]
  425cee:	movzx  edx,WORD PTR [edx]
  425cf1:	mov    DWORD PTR [ebp-0x24],edx
  425cf4:	and    edx,0xfff
  425cfa:	mov    DWORD PTR [ebp-0x28],edx
  425cfd:	mov    edx,DWORD PTR [ebp-0x24]
  425d00:	shr    edx,0xc
  425d03:	add    edx,0xffcd8d0d
  425d09:	xor    edx,esi
  425d0b:	cmp    edx,0xf89c85bc
  425d11:	jne    0x425d32
  425d13:	mov    edx,DWORD PTR [ebp-0x28]
  425d16:	add    edx,DWORD PTR [ebp+0x1c]
  425d19:	mov    ebx,DWORD PTR [eax]
  425d1b:	cmp    DWORD PTR [ebx+edx*1],0x0
  425d1f:	je     0x425d2f
  425d21:	mov    ecx,DWORD PTR [ebp+0xc]
  425d24:	add    ecx,DWORD PTR [ebx+edx*1]
  425d27:	mov    ebx,DWORD PTR [eax]
  425d29:	mov    DWORD PTR [edx+ebx*1],ecx
  425d2c:	mov    ecx,DWORD PTR [ebp-0x2c]
  425d2f:	mov    ebx,DWORD PTR [ebp-0x14]
  425d32:	add    DWORD PTR [ebp-0x4],0x2
  425d36:	dec    DWORD PTR [ebp-0x18]
  425d39:	jne    0x425ceb
  425d3b:	mov    edx,DWORD PTR [ebp-0xc]
  425d3e:	add    DWORD PTR [ebp-0x8],edx
  425d41:	mov    edx,DWORD PTR [ebp-0x8]
  425d44:	cmp    edx,DWORD PTR [ecx+0xa4]
  425d4a:	jae    0x425d5d
  425d4c:	add    eax,DWORD PTR [ebp-0xc]
  425d4f:	mov    edx,DWORD PTR [eax+0x4]
  425d52:	mov    DWORD PTR [ebp-0xc],edx
  425d55:	test   edx,edx
  425d57:	jne    0x425cd5
  425d5d:	mov    eax,DWORD PTR [ebp-0x10]
  425d60:	mov    DWORD PTR [ebp-0x6c],eax
  425d63:	mov    DWORD PTR [ebp-0x70],0x4
  425d6a:	mov    eax,DWORD PTR [ecx+0x50]
  425d6d:	mov    DWORD PTR [ebp-0x68],eax
  425d70:	mov    eax,DWORD PTR [ebp-0x1c]
  425d73:	xor    eax,esi
  425d75:	add    eax,edi
  425d77:	mov    DWORD PTR [ebp-0x64],eax
  425d7a:	lea    eax,[ebp-0x20]
  425d7d:	mov    DWORD PTR [ebp-0x60],eax
  425d80:	lea    eax,[ebp-0x70]
  425d83:	push   eax
  425d84:	mov    eax,DWORD PTR [ebp+0x8]
  425d87:	xor    eax,esi
  425d89:	add    eax,edi
  425d8b:	push   eax
  425d8c:	mov    eax,DWORD PTR [ebp+0x20]
  425d8f:	add    eax,0xee
  425d94:	push   eax
  425d95:	mov    eax,DWORD PTR [ebp+0x20]
  425d98:	mov    eax,DWORD PTR [eax+0x198]
  425d9e:	push   DWORD PTR [eax]
  425da0:	mov    eax,DWORD PTR [ebp+0x10]
  425da3:	call   eax
  425da5:	mov    eax,DWORD PTR [ebp+0x20]
  425da8:	mov    eax,DWORD PTR [eax+0x180]
  425dae:	add    eax,DWORD PTR [ebp+0xc]
  425db1:	mov    ecx,DWORD PTR [ebp+0xc]
  425db4:	push   DWORD PTR [ebp+0x18]
  425db7:	mov    DWORD PTR [eax],ecx
  425db9:	push   DWORD PTR [ebp+0x14]
  425dbc:	push   DWORD PTR [ebp+0x1c]
  425dbf:	call   ebx
  425dc1:	mov    ecx,DWORD PTR [ebp+0xc]
  425dc4:	add    ecx,DWORD PTR [ebp+0x20]
  425dc7:	lea    eax,[ebp+0x4]
  425dca:	mov    DWORD PTR [ebp+0x20],ecx
  425dcd:	mov    ecx,DWORD PTR [ebp+0x20]
  425dd0:	mov    ecx,DWORD PTR [ebp+0x20]
  425dd3:	mov    edx,DWORD PTR [ecx+0x190]
  425dd9:	mov    ecx,DWORD PTR [ebp+0x20]
  425ddc:	mov    ecx,DWORD PTR [ecx+0x18c]
  425de2:	mov    esi,DWORD PTR [ecx]
  425de4:	cmp    DWORD PTR [eax],esi
  425de6:	jb     0x425e07
  425de8:	mov    esi,DWORD PTR [edx]
  425dea:	mov    edi,DWORD PTR [edx]
  425dec:	mov    esi,DWORD PTR [esi+0x3c]
  425def:	lea    esi,[edi+esi*1+0x50]
  425df3:	mov    edi,DWORD PTR [ecx]
  425df5:	add    edi,DWORD PTR [esi]
  425df7:	cmp    DWORD PTR [eax],edi
  425df9:	jae    0x425e07
  425dfb:	mov    esi,DWORD PTR [ecx]
  425dfd:	mov    ecx,DWORD PTR [eax]
  425dff:	mov    edx,DWORD PTR [edx]
  425e01:	sub    ecx,esi
  425e03:	add    edx,ecx
  425e05:	mov    DWORD PTR [eax],edx
  425e07:	mov    eax,DWORD PTR [ebp+0xc]
  425e0a:	jmp    0x425e0e
  425e0c:	xor    eax,eax
  425e0e:	pop    edi
  425e0f:	pop    esi
  425e10:	pop    ebx
  425e11:	leave  
  425e12:	ret    0x1c
  425e15:	push   ebp
  425e16:	mov    ebp,esp
  425e18:	sub    esp,0x1c
  425e1b:	push   esi
  425e1c:	mov    esi,eax
  425e1e:	mov    eax,DWORD PTR [ecx+0x190]
  425e24:	cmp    DWORD PTR [eax],0x0
  425e27:	je     0x425f37
  425e2d:	test   edx,edx
  425e2f:	je     0x425f37
  425e35:	test   esi,esi
  425e37:	je     0x425f37
  425e3d:	mov    eax,DWORD PTR [esi+0x88]
  425e43:	test   eax,eax
  425e45:	je     0x425f32
  425e4b:	cmp    DWORD PTR [esi+0x8c],0x10
  425e52:	je     0x425f32
  425e58:	cmp    DWORD PTR [esi+0x34],edx
  425e5b:	je     0x425f32
  425e61:	mov    esi,DWORD PTR [ecx+0x18c]
  425e67:	and    DWORD PTR [ebp-0x10],0x0
  425e6b:	mov    ecx,edx
  425e6d:	sub    ecx,DWORD PTR [esi]
  425e6f:	add    eax,edx
  425e71:	movzx  edx,WORD PTR [eax+0xc]
  425e75:	mov    DWORD PTR [ebp-0x1c],ecx
  425e78:	movzx  ecx,WORD PTR [eax+0xe]
  425e7c:	add    ecx,edx
  425e7e:	je     0x425f32
  425e84:	lea    ecx,[eax+0x14]
  425e87:	push   ebx
  425e88:	mov    DWORD PTR [ebp-0x18],ecx
  425e8b:	mov    esi,0x7fffffff
  425e90:	push   edi
  425e91:	test   DWORD PTR [ecx],esi
  425e93:	je     0x425f14
  425e95:	mov    edx,DWORD PTR [ecx]
  425e97:	and    DWORD PTR [ebp-0xc],0x0
  425e9b:	and    edx,esi
  425e9d:	add    edx,eax
  425e9f:	movzx  edi,WORD PTR [edx+0xe]
  425ea3:	movzx  ebx,WORD PTR [edx+0xc]
  425ea7:	add    edi,ebx
  425ea9:	je     0x425f14
  425eab:	lea    ecx,[edx+0x14]
  425eae:	mov    DWORD PTR [ebp-0x14],ecx
  425eb1:	test   DWORD PTR [ecx],esi
  425eb3:	je     0x425ef6
  425eb5:	mov    ecx,DWORD PTR [ecx]
  425eb7:	and    DWORD PTR [ebp-0x8],0x0
  425ebb:	and    ecx,esi
  425ebd:	add    ecx,eax
  425ebf:	movzx  edi,WORD PTR [ecx+0xe]
  425ec3:	movzx  ebx,WORD PTR [ecx+0xc]
  425ec7:	add    edi,ebx
  425ec9:	je     0x425ef6
  425ecb:	lea    edi,[ecx+0x14]
  425ece:	mov    DWORD PTR [ebp-0x4],edi
  425ed1:	mov    edi,DWORD PTR [ebp-0x4]
  425ed4:	mov    edi,DWORD PTR [edi]
  425ed6:	test   edi,edi
  425ed8:	je     0x425ee0
  425eda:	mov    ebx,DWORD PTR [ebp-0x1c]
  425edd:	add    DWORD PTR [edi+eax*1],ebx
  425ee0:	movzx  edi,WORD PTR [ecx+0xe]
  425ee4:	movzx  ebx,WORD PTR [ecx+0xc]
  425ee8:	inc    DWORD PTR [ebp-0x8]
  425eeb:	add    DWORD PTR [ebp-0x4],0x8
  425eef:	add    edi,ebx
  425ef1:	cmp    DWORD PTR [ebp-0x8],edi
  425ef4:	jb     0x425ed1
  425ef6:	movzx  edi,WORD PTR [edx+0xe]
  425efa:	movzx  ebx,WORD PTR [edx+0xc]
  425efe:	mov    ecx,DWORD PTR [ebp-0x14]
  425f01:	inc    DWORD PTR [ebp-0xc]
  425f04:	add    ecx,0x8
  425f07:	add    edi,ebx
  425f09:	mov    DWORD PTR [ebp-0x14],ecx
  425f0c:	cmp    DWORD PTR [ebp-0xc],edi
  425f0f:	jb     0x425eb1
  425f11:	mov    ecx,DWORD PTR [ebp-0x18]
  425f14:	movzx  edx,WORD PTR [eax+0xe]
  425f18:	movzx  edi,WORD PTR [eax+0xc]
  425f1c:	inc    DWORD PTR [ebp-0x10]
  425f1f:	add    ecx,0x8
  425f22:	add    edx,edi
  425f24:	mov    DWORD PTR [ebp-0x18],ecx
  425f27:	cmp    DWORD PTR [ebp-0x10],edx
  425f2a:	jb     0x425e91
  425f30:	pop    edi
  425f31:	pop    ebx
  425f32:	xor    eax,eax
  425f34:	inc    eax
  425f35:	jmp    0x425f39
  425f37:	xor    eax,eax
  425f39:	pop    esi
  425f3a:	leave  
  425f3b:	ret    
  425f3c:	push   ebp
  425f3d:	mov    ebp,esp
  425f3f:	mov    ecx,DWORD PTR [ecx+0x190]
  425f45:	mov    eax,DWORD PTR [ebp+0xc]
  425f48:	sub    esp,0x10
  425f4b:	push   ebx
  425f4c:	xor    ebx,ebx
  425f4e:	push   esi
  425f4f:	push   edi
  425f50:	cmp    DWORD PTR [ecx],ebx
  425f52:	je     0x425fda
  425f58:	cmp    eax,ebx
  425f5a:	je     0x425fda
  425f5c:	cmp    DWORD PTR [eax+0x78],ebx
  425f5f:	jne    0x425f66
  425f61:	xor    eax,eax
  425f63:	inc    eax
  425f64:	jmp    0x425fdc
  425f66:	mov    eax,DWORD PTR [eax+0x78]
  425f69:	add    eax,DWORD PTR [ebp+0x8]
  425f6c:	mov    ecx,DWORD PTR [eax+0x1c]
  425f6f:	mov    edx,DWORD PTR [eax+0x24]
  425f72:	mov    esi,DWORD PTR [eax+0x14]
  425f75:	mov    edi,DWORD PTR [eax+0x18]
  425f78:	add    ecx,DWORD PTR [ebp+0x8]
  425f7b:	add    edx,DWORD PTR [ebp+0x8]
  425f7e:	mov    DWORD PTR [ebp-0x4],esi
  425f81:	cmp    esi,edi
  425f83:	ja     0x425f88
  425f85:	mov    DWORD PTR [ebp-0x4],edi
  425f88:	mov    DWORD PTR [ebp-0x8],ebx
  425f8b:	cmp    DWORD PTR [ebp-0x4],ebx
  425f8e:	jbe    0x425f61
  425f90:	cmp    ebx,DWORD PTR [eax+0x14]
  425f93:	jae    0x425f9b
  425f95:	movzx  esi,WORD PTR [edx+ebx*2]
  425f99:	jmp    0x425f9d
  425f9b:	mov    esi,ebx
  425f9d:	lea    esi,[ecx+esi*4]
  425fa0:	mov    edi,DWORD PTR [esi]
  425fa2:	test   edi,edi
  425fa4:	je     0x425fcf
  425fa6:	add    edi,DWORD PTR [ebp+0x8]
  425fa9:	mov    DWORD PTR [ebp-0x10],edi
  425fac:	cmp    edi,eax
  425fae:	jbe    0x425fc0
  425fb0:	mov    ebx,DWORD PTR [ebp+0xc]
  425fb3:	mov    ebx,DWORD PTR [ebx+0x7c]
  425fb6:	add    ebx,eax
  425fb8:	cmp    edi,ebx
  425fba:	jae    0x425fc0
  425fbc:	mov    esi,DWORD PTR [esi]
  425fbe:	jmp    0x425fc8
  425fc0:	sub    edi,DWORD PTR [ebp+0x8]
  425fc3:	mov    DWORD PTR [esi],edi
  425fc5:	mov    esi,DWORD PTR [ebp-0x10]
  425fc8:	test   esi,esi
  425fca:	je     0x425fda
  425fcc:	mov    ebx,DWORD PTR [ebp-0x8]
  425fcf:	inc    ebx
  425fd0:	mov    DWORD PTR [ebp-0x8],ebx
  425fd3:	cmp    ebx,DWORD PTR [ebp-0x4]
  425fd6:	jb     0x425f90
  425fd8:	jmp    0x425f61
  425fda:	xor    eax,eax
  425fdc:	pop    edi
  425fdd:	pop    esi
  425fde:	pop    ebx
  425fdf:	leave  
  425fe0:	ret    0x8
  425fe3:	push   ebp
  425fe4:	mov    ebp,esp
  425fe6:	sub    esp,0x2c
  425fe9:	mov    edx,0xf89c85a1
  425fee:	mov    DWORD PTR [ebp-0x4],edx
  425ff1:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  425ff8:	mov    eax,DWORD PTR [ebp-0x4]
  425ffb:	mov    ecx,DWORD PTR [ebp-0x4]
  425ffe:	mov    ecx,DWORD PTR [ebp-0x4]
  426001:	mov    ecx,DWORD PTR [ebp-0x4]
  426004:	mov    ecx,DWORD PTR [ebp-0x4]
  426007:	mov    ecx,DWORD PTR [ebp-0x4]
  42600a:	push   ebx
  42600b:	mov    ebx,DWORD PTR [ebp+0x10]
  42600e:	push   esi
  42600f:	mov    esi,0x75108ac
  426014:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  42601b:	mov    ecx,DWORD PTR [ebp-0x4]
  42601e:	mov    ebx,DWORD PTR [ebx+0x190]
  426024:	push   edi
  426025:	mov    edi,0x3272f3
  42602a:	xor    ecx,esi
  42602c:	xor    eax,esi
  42602e:	add    eax,edi
  426030:	add    ecx,edi
  426032:	mov    DWORD PTR [ebp-0x18],eax
  426035:	cmp    ecx,DWORD PTR [ebx]
  426037:	je     0x4262b8
  42603d:	mov    ebx,DWORD PTR [ebp-0x4]
  426040:	mov    ecx,DWORD PTR [ebp+0xc]
  426043:	xor    ebx,esi
  426045:	add    ebx,edi
  426047:	cmp    ebx,ecx
  426049:	je     0x4262b8
  42604f:	mov    ebx,DWORD PTR [ebp-0x4]
  426052:	mov    ecx,DWORD PTR [ecx+0x80]
  426058:	xor    ebx,esi
  42605a:	add    ebx,edi
  42605c:	cmp    ecx,ebx
  42605e:	je     0x4262b3
  426064:	add    ecx,DWORD PTR [ebp+0x8]
  426067:	mov    DWORD PTR [ebp-0x2c],ecx
  42606a:	mov    ebx,edx
  42606c:	xor    ebx,esi
  42606e:	add    ebx,edi
  426070:	mov    DWORD PTR [ebp-0x10],ebx
  426073:	mov    ebx,DWORD PTR [ebp-0x10]
  426076:	cmp    ebx,edx
  426078:	je     0x42608c
  42607a:	mov    edx,DWORD PTR [ebp-0x10]
  42607d:	mov    ebx,DWORD PTR [ebp-0x4]
  426080:	imul   edx,edx,0x14
  426083:	xor    ebx,esi
  426085:	add    ebx,edi
  426087:	cmp    DWORD PTR [edx+ecx*1],ebx
  42608a:	jne    0x4260a3
  42608c:	mov    edx,DWORD PTR [ebp-0x10]
  42608f:	mov    ebx,DWORD PTR [ebp-0x4]
  426092:	imul   edx,edx,0x14
  426095:	xor    ebx,esi
  426097:	add    ebx,edi
  426099:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  42609d:	je     0x4262a5
  4260a3:	mov    eax,DWORD PTR [ebp-0x4]
  4260a6:	mov    ebx,DWORD PTR [ebp-0x4]
  4260a9:	mov    eax,DWORD PTR [ebp-0x10]
  4260ac:	imul   eax,eax,0x14
  4260af:	add    eax,ecx
  4260b1:	mov    ecx,DWORD PTR [eax+0x10]
  4260b4:	add    ecx,DWORD PTR [ebp+0x8]
  4260b7:	xor    ebx,esi
  4260b9:	mov    DWORD PTR [ebp-0x1c],ecx
  4260bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4260bf:	mov    edx,DWORD PTR [ebp-0x4]
  4260c2:	xor    ecx,esi
  4260c4:	add    ecx,edi
  4260c6:	xor    edx,esi
  4260c8:	mov    DWORD PTR [ebp-0x24],ecx
  4260cb:	mov    ecx,DWORD PTR [eax]
  4260cd:	add    edx,edi
  4260cf:	add    ebx,edi
  4260d1:	cmp    ecx,edx
  4260d3:	je     0x4260db
  4260d5:	add    ecx,DWORD PTR [ebp+0x8]
  4260d8:	mov    DWORD PTR [ebp-0x24],ecx
  4260db:	mov    ecx,DWORD PTR [ebp-0x4]
  4260de:	xor    ecx,esi
  4260e0:	add    ecx,DWORD PTR [eax+0xc]
  4260e3:	mov    eax,DWORD PTR [ebp+0x8]
  4260e6:	lea    eax,[ecx+eax*1+0x3272f3]
  4260ed:	mov    DWORD PTR [ebp+0xc],eax
  4260f0:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4260f7:	mov    eax,DWORD PTR [ebp+0x10]
  4260fa:	push   DWORD PTR [ebp+0xc]
  4260fd:	mov    eax,DWORD PTR [eax+0x1e0]
  426103:	call   DWORD PTR [eax]
  426105:	mov    ecx,DWORD PTR [ebp-0x4]
  426108:	xor    ecx,esi
  42610a:	add    ecx,edi
  42610c:	mov    DWORD PTR [ebp-0xc],eax
  42610f:	cmp    ecx,eax
  426111:	jne    0x426125
  426113:	mov    eax,DWORD PTR [ebp+0x10]
  426116:	push   DWORD PTR [ebp+0xc]
  426119:	mov    eax,DWORD PTR [eax+0x1e0]
  42611f:	call   DWORD PTR [eax+0xc]
  426122:	mov    DWORD PTR [ebp-0xc],eax
  426125:	mov    DWORD PTR [ebp-0x20],0x7f661b2a
  42612c:	mov    DWORD PTR [ebp-0x20],0xf89c985a
  426133:	mov    eax,DWORD PTR [ebp-0x4]
  426136:	xor    eax,esi
  426138:	add    eax,edi
  42613a:	cmp    eax,DWORD PTR [ebp-0xc]
  42613d:	jne    0x426162
  42613f:	mov    eax,DWORD PTR [ebp-0x8]
  426142:	mov    ecx,DWORD PTR [ebp-0x20]
  426145:	xor    eax,esi
  426147:	xor    ecx,esi
  426149:	lea    ebx,[ebx+eax*1+0x3272f3]
  426150:	mov    eax,DWORD PTR [ebp+0x10]
  426153:	mov    eax,DWORD PTR [eax+0x1e0]
  426159:	add    ecx,edi
  42615b:	imul   ecx,ebx
  42615e:	push   ecx
  42615f:	call   DWORD PTR [eax+0x24]
  426162:	mov    eax,DWORD PTR [ebp-0x4]
  426165:	xor    eax,esi
  426167:	add    eax,edi
  426169:	cmp    eax,DWORD PTR [ebp-0xc]
  42616c:	jne    0x42617d
  42616e:	mov    eax,DWORD PTR [ebp-0x28]
  426171:	xor    eax,esi
  426173:	add    eax,edi
  426175:	cmp    ebx,eax
  426177:	jbe    0x4260f7
  42617d:	mov    eax,DWORD PTR [ebp-0x4]
  426180:	xor    eax,esi
  426182:	add    eax,edi
  426184:	cmp    eax,DWORD PTR [ebp-0xc]
  426187:	jne    0x4261a0
  426189:	mov    eax,DWORD PTR [ebp-0x8]
  42618c:	mov    ecx,DWORD PTR [ebp-0x18]
  42618f:	xor    eax,esi
  426191:	lea    eax,[ecx+eax*1+0x3272f3]
  426198:	mov    DWORD PTR [ebp-0x18],eax
  42619b:	jmp    0x42628f
  4261a0:	mov    DWORD PTR [ebp-0x14],0x1121b29
  4261a7:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  4261ae:	mov    ebx,DWORD PTR [ebp-0x4]
  4261b1:	xor    ebx,esi
  4261b3:	add    ebx,edi
  4261b5:	jmp    0x42627c
  4261ba:	mov    eax,DWORD PTR [ebp-0x4]
  4261bd:	xor    eax,esi
  4261bf:	add    eax,edi
  4261c1:	mov    DWORD PTR [ebp-0x14],eax
  4261c4:	mov    eax,DWORD PTR [ebp-0x4]
  4261c7:	xor    eax,esi
  4261c9:	add    eax,edi
  4261cb:	mov    DWORD PTR [ebp+0xc],eax
  4261ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4261d1:	mov    eax,DWORD PTR [ebp-0x24]
  4261d4:	xor    ecx,esi
  4261d6:	add    ecx,edi
  4261d8:	cmp    ecx,eax
  4261da:	je     0x4261e2
  4261dc:	mov    eax,DWORD PTR [eax+ebx*4]
  4261df:	mov    DWORD PTR [ebp-0x14],eax
  4261e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4261e5:	mov    eax,DWORD PTR [eax+ebx*4]
  4261e8:	mov    DWORD PTR [ebp+0xc],eax
  4261eb:	mov    eax,DWORD PTR [ebp-0x4]
  4261ee:	mov    ecx,DWORD PTR [ebp-0x14]
  4261f1:	xor    eax,esi
  4261f3:	add    eax,edi
  4261f5:	cmp    eax,ecx
  4261f7:	je     0x426222
  4261f9:	mov    eax,DWORD PTR [ebp-0x4]
  4261fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4261ff:	xor    eax,esi
  426201:	add    eax,edi
  426203:	shr    ecx,0x1f
  426206:	cmp    eax,ecx
  426208:	je     0x426222
  42620a:	mov    ecx,DWORD PTR [ebp-0x14]
  42620d:	mov    eax,DWORD PTR [ebp+0x10]
  426210:	mov    eax,DWORD PTR [eax+0x1e0]
  426216:	movzx  ecx,cx
  426219:	push   ecx
  42621a:	push   DWORD PTR [ebp-0xc]
  42621d:	call   DWORD PTR [eax+0x8]
  426220:	jmp    0x42623b
  426222:	mov    eax,DWORD PTR [ebp+0xc]
  426225:	add    eax,DWORD PTR [ebp+0x8]
  426228:	mov    ecx,DWORD PTR [ebp+0x10]
  42622b:	mov    ecx,DWORD PTR [ecx+0x1e0]
  426231:	add    eax,0x2
  426234:	push   eax
  426235:	push   DWORD PTR [ebp-0xc]
  426238:	call   DWORD PTR [ecx+0x8]
  42623b:	mov    DWORD PTR [ebp+0xc],eax
  42623e:	mov    eax,DWORD PTR [ebp-0x4]
  426241:	mov    ecx,DWORD PTR [ebp+0xc]
  426244:	xor    eax,esi
  426246:	add    eax,edi
  426248:	cmp    eax,ecx
  42624a:	mov    eax,DWORD PTR [ebp-0x8]
  42624d:	jne    0x426260
  42624f:	mov    ecx,DWORD PTR [ebp-0x18]
  426252:	xor    eax,esi
  426254:	lea    eax,[ecx+eax*1+0x3272f3]
  42625b:	mov    DWORD PTR [ebp-0x18],eax
  42625e:	jmp    0x426270
  426260:	mov    ecx,DWORD PTR [ebp+0xc]
  426263:	xor    eax,esi
  426265:	add    eax,edi
  426267:	imul   eax,ecx
  42626a:	mov    ecx,DWORD PTR [ebp-0x1c]
  42626d:	mov    DWORD PTR [ecx+ebx*4],eax
  426270:	mov    eax,DWORD PTR [ebp-0x8]
  426273:	xor    eax,esi
  426275:	lea    ebx,[ebx+eax*1+0x3272f3]
  42627c:	mov    eax,DWORD PTR [ebp-0x4]
  42627f:	mov    ecx,DWORD PTR [ebp-0x1c]
  426282:	xor    eax,esi
  426284:	add    eax,edi
  426286:	cmp    DWORD PTR [ecx+ebx*4],eax
  426289:	jne    0x4261ba
  42628f:	mov    edx,DWORD PTR [ebp-0x10]
  426292:	mov    eax,DWORD PTR [ebp-0x18]
  426295:	mov    ecx,DWORD PTR [ebp-0x2c]
  426298:	sub    edx,0x3272f2
  42629e:	xor    edx,esi
  4262a0:	jmp    0x42606a
  4262a5:	mov    ecx,DWORD PTR [ebp-0x4]
  4262a8:	xor    ecx,esi
  4262aa:	add    ecx,edi
  4262ac:	cmp    eax,ecx
  4262ae:	mov    eax,DWORD PTR [ebp-0x4]
  4262b1:	jne    0x4262bb
  4262b3:	mov    eax,DWORD PTR [ebp-0x8]
  4262b6:	jmp    0x4262bb
  4262b8:	mov    eax,DWORD PTR [ebp-0x4]
  4262bb:	xor    eax,esi
  4262bd:	add    eax,edi
  4262bf:	pop    edi
  4262c0:	pop    esi
  4262c1:	pop    ebx
  4262c2:	leave  
  4262c3:	ret    0xc
  4262c6:	push   ebp
  4262c7:	mov    ebp,esp
  4262c9:	sub    esp,0x28
  4262cc:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  4262d3:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  4262da:	mov    eax,DWORD PTR [ebp+0xc]
  4262dd:	mov    DWORD PTR [ebp+0xc],eax
  4262e0:	push   esi
  4262e1:	mov    eax,eax
  4262e3:	mov    eax,DWORD PTR [ebp-0x4]
  4262e6:	mov    esi,DWORD PTR [ebp+0x8]
  4262e9:	mov    ecx,0x75108ac
  4262ee:	xor    eax,ecx
  4262f0:	mov    edx,0x3272f3
  4262f5:	add    eax,edx
  4262f7:	cmp    esi,eax
  4262f9:	je     0x426420
  4262ff:	mov    eax,DWORD PTR [ebp+0x8]
  426302:	mov    esi,DWORD PTR [ebp+0x8]
  426305:	add    esi,DWORD PTR [eax+0x3c]
  426308:	push   edi
  426309:	mov    DWORD PTR [ebp+0xc],esi
  42630c:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  426313:	mov    eax,DWORD PTR [ebp-0x1c]
  426316:	mov    esi,DWORD PTR [ebp-0x4]
  426319:	mov    edi,DWORD PTR [ebp+0xc]
  42631c:	xor    esi,ecx
  42631e:	xor    eax,ecx
  426320:	add    esi,edx
  426322:	cmp    DWORD PTR [edi+eax*8+0x1939810],esi
  426329:	je     0x42641a
  42632f:	mov    esi,DWORD PTR [ebp+0xc]
  426332:	mov    eax,DWORD PTR [ebp+0x8]
  426335:	add    eax,DWORD PTR [esi+0xa0]
  42633b:	mov    esi,DWORD PTR [ebp+0x8]
  42633e:	mov    edi,DWORD PTR [ebp+0xc]
  426341:	sub    esi,DWORD PTR [edi+0x34]
  426344:	mov    edi,DWORD PTR [ebp-0x4]
  426347:	xor    edi,ecx
  426349:	add    edi,edx
  42634b:	mov    DWORD PTR [ebp-0x24],esi
  42634e:	cmp    esi,edi
  426350:	je     0x42641a
  426356:	mov    esi,DWORD PTR [ebp-0x4]
  426359:	xor    esi,ecx
  42635b:	add    esi,edx
  42635d:	mov    DWORD PTR [ebp-0x8],esi
  426360:	push   ebx
  426361:	mov    DWORD PTR [ebp-0x10],0xf89c85bc
  426368:	jmp    0x426404
  42636d:	mov    esi,DWORD PTR [ebp-0x4]
  426370:	xor    esi,ecx
  426372:	lea    edi,[ebx-0x8]
  426375:	add    esi,edx
  426377:	shr    edi,1
  426379:	cmp    esi,edi
  42637b:	jae    0x4263ea
  42637d:	sub    edi,esi
  42637f:	lea    ebx,[eax+esi*2+0x8]
  426383:	mov    DWORD PTR [ebp-0x18],edi
  426386:	movzx  esi,WORD PTR [ebx]
  426389:	and    esi,0xfff
  42638f:	mov    DWORD PTR [ebp-0x14],esi
  426392:	mov    edi,DWORD PTR [ebp-0x14]
  426395:	mov    esi,DWORD PTR [eax]
  426397:	sub    esi,edx
  426399:	add    edi,esi
  42639b:	movzx  esi,WORD PTR [ebx]
  42639e:	shr    esi,0xc
  4263a1:	xor    edi,ecx
  4263a3:	mov    DWORD PTR [ebp-0x20],edi
  4263a6:	mov    DWORD PTR [ebp-0x14],esi
  4263a9:	mov    esi,DWORD PTR [ebp-0x20]
  4263ac:	mov    edi,DWORD PTR [ebp+0x8]
  4263af:	xor    esi,ecx
  4263b1:	lea    esi,[esi+edi*1+0x3272f3]
  4263b8:	mov    DWORD PTR [ebp-0x20],esi
  4263bb:	mov    esi,DWORD PTR [ebp-0x10]
  4263be:	mov    edi,DWORD PTR [ebp-0x14]
  4263c1:	xor    esi,ecx
  4263c3:	add    esi,edx
  4263c5:	cmp    edi,esi
  4263c7:	jne    0x4263df
  4263c9:	mov    esi,DWORD PTR [ebp-0x10]
  4263cc:	mov    edi,DWORD PTR [ebp-0x14]
  4263cf:	xor    esi,ecx
  4263d1:	add    esi,edx
  4263d3:	cmp    edi,esi
  4263d5:	jne    0x4263df
  4263d7:	mov    esi,DWORD PTR [ebp-0x20]
  4263da:	mov    edi,DWORD PTR [ebp-0x24]
  4263dd:	add    DWORD PTR [esi],edi
  4263df:	add    ebx,0x2
  4263e2:	dec    DWORD PTR [ebp-0x18]
  4263e5:	jne    0x426386
  4263e7:	mov    ebx,DWORD PTR [ebp-0xc]
  4263ea:	add    DWORD PTR [ebp-0x8],ebx
  4263ed:	mov    esi,DWORD PTR [ebp-0x1c]
  4263f0:	mov    edi,DWORD PTR [ebp-0x8]
  4263f3:	mov    ebx,DWORD PTR [ebp+0xc]
  4263f6:	xor    esi,ecx
  4263f8:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939814]
  4263ff:	jae    0x426419
  426401:	add    eax,DWORD PTR [ebp-0xc]
  426404:	mov    esi,DWORD PTR [ebp-0x4]
  426407:	mov    ebx,DWORD PTR [eax+0x4]
  42640a:	xor    esi,ecx
  42640c:	add    esi,edx
  42640e:	mov    DWORD PTR [ebp-0xc],ebx
  426411:	cmp    ebx,esi
  426413:	jne    0x42636d
  426419:	pop    ebx
  42641a:	mov    eax,DWORD PTR [ebp-0x28]
  42641d:	pop    edi
  42641e:	jmp    0x426423
  426420:	mov    eax,DWORD PTR [ebp-0x4]
  426423:	xor    eax,ecx
  426425:	add    eax,edx
  426427:	pop    esi
  426428:	leave  
  426429:	ret    0x8
  42642c:	push   ebp
  42642d:	mov    ebp,esp
  42642f:	sub    esp,0xd8
  426435:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  42643c:	mov    DWORD PTR [ebp-0x24],0xf89c85a2
  426443:	mov    eax,DWORD PTR [ebp-0x4]
  426446:	push   ebx
  426447:	push   esi
  426448:	mov    esi,0x75108ac
  42644d:	xor    eax,esi
  42644f:	push   edi
  426450:	mov    edi,0x3272f3
  426455:	add    eax,edi
  426457:	mov    DWORD PTR [ebp-0x18],eax
  42645a:	mov    eax,DWORD PTR [ebp-0x4]
  42645d:	xor    eax,esi
  42645f:	add    eax,edi
  426461:	mov    DWORD PTR [ebp-0x8],eax
  426464:	mov    ebx,DWORD PTR [ebp+0x20]
  426467:	mov    eax,DWORD PTR [ebp-0x1c]
  42646a:	mov    ecx,DWORD PTR [ebp-0x1c]
  42646d:	xor    eax,ecx
  42646f:	mov    DWORD PTR [ebp-0x1c],eax
  426472:	add    DWORD PTR [ebp-0x1c],0xf89cb5a1
  426479:	mov    eax,DWORD PTR [ebp-0xc]
  42647c:	mov    ecx,DWORD PTR [ebp-0xc]
  42647f:	xor    eax,ecx
  426481:	mov    DWORD PTR [ebp-0xc],eax
  426484:	add    DWORD PTR [ebp-0xc],0xf89c85e1
  42648b:	mov    eax,DWORD PTR [ebp-0x10]
  42648e:	mov    ecx,DWORD PTR [ebp-0x10]
  426491:	xor    eax,ecx
  426493:	mov    DWORD PTR [ebp-0x10],eax
  426496:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  42649d:	mov    eax,DWORD PTR [ebp-0x28]
  4264a0:	mov    ecx,DWORD PTR [ebp-0x28]
  4264a3:	xor    eax,ecx
  4264a5:	mov    DWORD PTR [ebp-0x28],eax
  4264a8:	add    DWORD PTR [ebp-0x28],0xf89f05a1
  4264af:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  4264b6:	mov    eax,DWORD PTR [ebp+0x8]
  4264b9:	test   eax,eax
  4264bb:	je     0x426944
  4264c1:	mov    eax,DWORD PTR [ebp+0xc]
  4264c4:	test   eax,eax
  4264c6:	je     0x426944
  4264cc:	mov    eax,DWORD PTR [ebp+0x18]
  4264cf:	test   eax,eax
  4264d1:	je     0x426944
  4264d7:	mov    eax,DWORD PTR [ebp+0x20]
  4264da:	mov    ecx,DWORD PTR [ebp+0x8]
  4264dd:	xor    eax,0x8ac
  4264e2:	add    eax,0x72f3
  4264e7:	cmp    WORD PTR [ecx],ax
  4264ea:	jne    0x426944
  4264f0:	mov    eax,DWORD PTR [ebp-0x4]
  4264f3:	xor    eax,esi
  4264f5:	add    eax,edi
  4264f7:	mov    DWORD PTR [ebp-0x30],eax
  4264fa:	mov    eax,DWORD PTR [ebp-0x4]
  4264fd:	mov    ecx,DWORD PTR [ebp+0x8]
  426500:	mov    eax,DWORD PTR [ebp+0x8]
  426503:	add    eax,DWORD PTR [ecx+0x3c]
  426506:	mov    DWORD PTR [ebp+0xc],eax
  426509:	mov    eax,DWORD PTR [eax+0x50]
  42650c:	test   eax,eax
  42650e:	je     0x426944
  426514:	mov    DWORD PTR [ebp-0x2c],0xf88c85a1
  42651b:	mov    eax,DWORD PTR [ebp-0x2c]
  42651e:	xor    eax,esi
  426520:	add    eax,edi
  426522:	mov    DWORD PTR [ebp-0x2c],eax
  426525:	mov    eax,DWORD PTR [ebp-0x4]
  426528:	mov    eax,DWORD PTR [ebx+0x190]
  42652e:	mov    ecx,DWORD PTR [eax]
  426530:	mov    ecx,DWORD PTR [ecx+0x3c]
  426533:	add    ecx,DWORD PTR [eax]
  426535:	mov    eax,DWORD PTR [ebp-0x4]
  426538:	mov    eax,DWORD PTR [ebx+0x18c]
  42653e:	mov    edx,DWORD PTR [eax]
  426540:	mov    DWORD PTR [ebp-0x20],ecx
  426543:	mov    DWORD PTR [ebp+0x20],edx
  426546:	cmp    edx,edx
  426548:	jne    0x42657c
  42654a:	mov    eax,DWORD PTR [ebx+0x1e0]
  426550:	lea    edx,[ebp-0x18]
  426553:	push   edx
  426554:	mov    edx,DWORD PTR [ebp-0xc]
  426557:	xor    edx,esi
  426559:	add    edx,edi
  42655b:	push   edx
  42655c:	push   DWORD PTR [ecx+0x50]
  42655f:	push   DWORD PTR [ebp+0x20]
  426562:	call   DWORD PTR [eax+0x1c]
  426565:	mov    eax,DWORD PTR [ebp-0x20]
  426568:	mov    ecx,DWORD PTR [eax+0x54]
  42656b:	mov    eax,DWORD PTR [eax+0x50]
  42656e:	sub    eax,ecx
  426570:	add    ecx,DWORD PTR [ebp+0x20]
  426573:	push   ecx
  426574:	call   0x426ee1
  426579:	mov    edx,DWORD PTR [ebp+0x20]
  42657c:	mov    eax,DWORD PTR [ebx+0x194]
  426582:	mov    DWORD PTR [eax],edx
  426584:	mov    eax,DWORD PTR [ebp+0xc]
  426587:	push   DWORD PTR [eax+0x54]
  42658a:	push   DWORD PTR [ebp+0x8]
  42658d:	push   edx
  42658e:	call   0x426dd7
  426593:	mov    ecx,DWORD PTR [ebp+0x20]
  426596:	mov    eax,DWORD PTR [ecx+0x3c]
  426599:	add    eax,ecx
  42659b:	movzx  ecx,WORD PTR [eax+0x14]
  42659f:	lea    ecx,[ecx+eax*1+0x18]
  4265a3:	mov    DWORD PTR [ebp+0x18],ecx
  4265a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4265a9:	movzx  edx,WORD PTR [eax+0x6]
  4265ad:	xor    ecx,esi
  4265af:	add    ecx,edi
  4265b1:	mov    DWORD PTR [ebp+0xc],eax
  4265b4:	cmp    edx,ecx
  4265b6:	je     0x426663
  4265bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4265bf:	xor    ecx,esi
  4265c1:	add    ecx,edi
  4265c3:	mov    DWORD PTR [ebp-0x8],ecx
  4265c6:	mov    ecx,DWORD PTR [ebp-0x24]
  4265c9:	movzx  edx,WORD PTR [eax+0x6]
  4265cd:	xor    ecx,esi
  4265cf:	sub    edx,ecx
  4265d1:	sub    edx,edi
  4265d3:	cmp    DWORD PTR [ebp-0x8],edx
  4265d6:	ja     0x426663
  4265dc:	mov    edx,DWORD PTR [ebp+0x18]
  4265df:	add    edx,0x8
  4265e2:	mov    DWORD PTR [ebp+0x18],edx
  4265e5:	jmp    0x4265ea
  4265e7:	mov    edx,DWORD PTR [ebp+0x18]
  4265ea:	mov    eax,DWORD PTR [eax+0x38]
  4265ed:	lea    ecx,[eax-0x1]
  4265f0:	mov    DWORD PTR [ebp-0x38],eax
  4265f3:	mov    eax,DWORD PTR [edx]
  4265f5:	test   eax,ecx
  4265f7:	je     0x426600
  4265f9:	not    ecx
  4265fb:	and    eax,ecx
  4265fd:	add    eax,DWORD PTR [ebp-0x38]
  426600:	mov    ecx,DWORD PTR [edx+0x4]
  426603:	add    ecx,DWORD PTR [ebp+0x20]
  426606:	push   ecx
  426607:	call   0x426ee1
  42660c:	mov    edx,DWORD PTR [ebp-0x4]
  42660f:	mov    eax,DWORD PTR [ebp+0x18]
  426612:	mov    ecx,DWORD PTR [eax+0x8]
  426615:	xor    edx,esi
  426617:	add    edx,edi
  426619:	cmp    ecx,edx
  42661b:	je     0x426634
  42661d:	push   ecx
  42661e:	mov    ecx,DWORD PTR [ebp+0x8]
  426621:	add    ecx,DWORD PTR [eax+0xc]
  426624:	mov    eax,DWORD PTR [eax+0x4]
  426627:	add    eax,DWORD PTR [ebp+0x20]
  42662a:	push   ecx
  42662b:	push   eax
  42662c:	call   0x426dd7
  426631:	mov    eax,DWORD PTR [ebp+0x18]
  426634:	mov    ecx,DWORD PTR [ebp-0x24]
  426637:	mov    edx,DWORD PTR [ebp-0x8]
  42663a:	add    eax,0x28
  42663d:	xor    ecx,esi
  42663f:	lea    ecx,[edx+ecx*1+0x3272f3]
  426646:	mov    edx,DWORD PTR [ebp+0xc]
  426649:	mov    DWORD PTR [ebp+0x18],eax
  42664c:	mov    eax,DWORD PTR [ebp-0x24]
  42664f:	movzx  edx,WORD PTR [edx+0x6]
  426653:	xor    eax,esi
  426655:	sub    edx,eax
  426657:	mov    eax,DWORD PTR [ebp+0xc]
  42665a:	sub    edx,edi
  42665c:	mov    DWORD PTR [ebp-0x8],ecx
  42665f:	cmp    ecx,edx
  426661:	jbe    0x4265e7
  426663:	mov    edx,DWORD PTR [ebx+0x18c]
  426669:	mov    ecx,DWORD PTR [ebp+0x20]
  42666c:	cmp    ecx,DWORD PTR [edx]
  42666e:	jne    0x426697
  426670:	mov    eax,DWORD PTR [ebx+0x1e0]
  426676:	lea    edx,[ebp-0x18]
  426679:	push   edx
  42667a:	mov    edx,DWORD PTR [ebp-0x10]
  42667d:	xor    edx,esi
  42667f:	add    edx,edi
  426681:	push   edx
  426682:	mov    edx,DWORD PTR [ebp-0x20]
  426685:	push   DWORD PTR [edx+0x54]
  426688:	push   ecx
  426689:	call   DWORD PTR [eax+0x1c]
  42668c:	test   eax,eax
  42668e:	je     0x426935
  426694:	mov    eax,DWORD PTR [ebp+0xc]
  426697:	mov    ecx,DWORD PTR [ebx+0x1c8]
  42669d:	mov    ecx,DWORD PTR [ecx]
  42669f:	xor    ecx,esi
  4266a1:	add    ecx,edi
  4266a3:	je     0x426860
  4266a9:	mov    eax,DWORD PTR [ebp-0x4]
  4266ac:	xor    eax,esi
  4266ae:	add    eax,edi
  4266b0:	and    DWORD PTR [ebp+0x8],0x0
  4266b4:	mov    DWORD PTR [ebp-0x14],eax
  4266b7:	mov    eax,0xf89c85dd
  4266bc:	lea    ecx,[eax-0x8]
  4266bf:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  4266c6:	mov    DWORD PTR [ebp-0x54],0xf89c852d
  4266cd:	mov    DWORD PTR [ebp-0x50],eax
  4266d0:	mov    DWORD PTR [ebp-0x4c],ecx
  4266d3:	mov    DWORD PTR [ebp-0x48],ecx
  4266d6:	mov    DWORD PTR [ebp-0x44],0xf89c85a1
  4266dd:	mov    edx,DWORD PTR [ebp+0x8]
  4266e0:	mov    ecx,0x8ac
  4266e5:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  4266ea:	mov    edx,0x72f3
  4266ef:	add    cx,dx
  4266f2:	mov    edx,DWORD PTR [ebp+0x8]
  4266f5:	inc    DWORD PTR [ebp+0x8]
  4266f8:	cmp    DWORD PTR [ebp+0x8],0x6
  4266fc:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  426704:	jb     0x4266dd
  426706:	mov    ecx,0xf89c85d3
  42670b:	mov    DWORD PTR [ebp-0xb0],eax
  426711:	mov    DWORD PTR [ebp-0x9c],eax
  426717:	mov    DWORD PTR [ebp-0x74],eax
  42671a:	mov    DWORD PTR [ebp-0x70],eax
  42671d:	mov    eax,0xf89c852c
  426722:	lea    edx,[ecx+0x2c]
  426725:	mov    DWORD PTR [ebp-0x64],eax
  426728:	mov    DWORD PTR [ebp-0x60],eax
  42672b:	mov    DWORD PTR [ebp-0xb4],0xf89c85f5
  426735:	mov    DWORD PTR [ebp-0xac],ecx
  42673b:	mov    DWORD PTR [ebp-0xa8],edx
  426741:	mov    DWORD PTR [ebp-0xa4],0xf89c85da
  42674b:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  426755:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  42675f:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  426769:	mov    DWORD PTR [ebp-0x90],0xf89c852d
  426773:	mov    DWORD PTR [ebp-0x8c],ecx
  426779:	mov    DWORD PTR [ebp-0x88],0xf89c852a
  426783:	mov    DWORD PTR [ebp-0x84],edx
  426789:	mov    DWORD PTR [ebp-0x80],0xf89c85d0
  426790:	mov    DWORD PTR [ebp-0x7c],ecx
  426793:	mov    DWORD PTR [ebp-0x78],0xf89c85e2
  42679a:	mov    DWORD PTR [ebp-0x6c],ecx
  42679d:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  4267a4:	mov    DWORD PTR [ebp-0x5c],0xf89c85a1
  4267ab:	xor    eax,eax
  4267ad:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4267b4:	xor    cl,0xac
  4267b7:	sub    cl,0xd
  4267ba:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  4267c1:	inc    eax
  4267c2:	cmp    eax,0x17
  4267c5:	jb     0x4267ad
  4267c7:	mov    eax,DWORD PTR [ebx+0x1e0]
  4267cd:	lea    ecx,[ebp-0xc0]
  4267d3:	push   ecx
  4267d4:	call   DWORD PTR [eax+0x4]
  4267d7:	mov    ecx,DWORD PTR [ebx+0x1e0]
  4267dd:	lea    edx,[ebp-0xd8]
  4267e3:	push   edx
  4267e4:	push   eax
  4267e5:	call   DWORD PTR [ecx+0x8]
  4267e8:	mov    DWORD PTR [ebp-0x40],eax
  4267eb:	lea    eax,[ebp-0x14]
  4267ee:	push   eax
  4267ef:	mov    eax,DWORD PTR [ebx+0x18c]
  4267f5:	push   DWORD PTR [eax]
  4267f7:	mov    eax,DWORD PTR [ebp-0x40]
  4267fa:	call   eax
  4267fc:	mov    eax,DWORD PTR [ebp-0x4]
  4267ff:	xor    eax,esi
  426801:	add    eax,edi
  426803:	mov    DWORD PTR [ebp-0x34],eax
  426806:	mov    ecx,DWORD PTR [ebp-0x4]
  426809:	mov    eax,DWORD PTR [ebp-0x14]
  42680c:	xor    ecx,esi
  42680e:	add    ecx,edi
  426810:	cmp    eax,ecx
  426812:	je     0x42685d
  426814:	mov    DWORD PTR [ebp-0x3c],eax
  426817:	jmp    0x426828
  426819:	mov    eax,DWORD PTR [eax]
  42681b:	mov    ecx,DWORD PTR [ebp-0x3c]
  42681e:	mov    DWORD PTR [ebp-0x14],eax
  426821:	mov    eax,DWORD PTR [ebp-0x14]
  426824:	cmp    eax,ecx
  426826:	je     0x426835
  426828:	mov    edx,DWORD PTR [eax+0x18]
  42682b:	mov    ecx,DWORD PTR [ebx+0x18c]
  426831:	cmp    edx,DWORD PTR [ecx]
  426833:	jne    0x426819
  426835:	mov    ecx,DWORD PTR [ebx+0x18c]
  42683b:	mov    edx,DWORD PTR [eax+0x18]
  42683e:	cmp    edx,DWORD PTR [ecx]
  426840:	jne    0x42685d
  426842:	mov    ecx,DWORD PTR [ebx+0x190]
  426848:	mov    edx,DWORD PTR [ebp-0x20]
  42684b:	mov    edx,DWORD PTR [edx+0x28]
  42684e:	add    edx,DWORD PTR [ecx]
  426850:	mov    DWORD PTR [eax+0x1c],edx
  426853:	mov    eax,DWORD PTR [ebp-0x24]
  426856:	xor    eax,esi
  426858:	add    eax,edi
  42685a:	mov    DWORD PTR [ebp-0x34],eax
  42685d:	mov    eax,DWORD PTR [ebp+0xc]
  426860:	push   ebx
  426861:	push   eax
  426862:	push   DWORD PTR [ebp+0x20]
  426865:	call   0x425fe3
  42686a:	test   eax,eax
  42686c:	je     0x426935
  426872:	push   DWORD PTR [ebp+0xc]
  426875:	mov    ecx,ebx
  426877:	push   DWORD PTR [ebp+0x20]
  42687a:	call   0x425f3c
  42687f:	test   eax,eax
  426881:	je     0x426935
  426887:	mov    eax,DWORD PTR [ebp+0xc]
  42688a:	mov    edx,DWORD PTR [ebp+0x20]
  42688d:	mov    ecx,ebx
  42688f:	call   0x425e15
  426894:	test   eax,eax
  426896:	je     0x426935
  42689c:	push   ebx
  42689d:	push   DWORD PTR [ebp+0x20]
  4268a0:	call   0x4262c6
  4268a5:	test   eax,eax
  4268a7:	je     0x426935
  4268ad:	mov    eax,DWORD PTR [ebx+0x18c]
  4268b3:	mov    edx,DWORD PTR [ebp+0x20]
  4268b6:	cmp    edx,DWORD PTR [eax]
  4268b8:	jne    0x4268d4
  4268ba:	mov    eax,DWORD PTR [ebx+0x1e0]
  4268c0:	lea    ecx,[ebp-0x18]
  4268c3:	push   ecx
  4268c4:	push   DWORD PTR [ebp-0x18]
  4268c7:	mov    ecx,DWORD PTR [ebp-0x20]
  4268ca:	push   DWORD PTR [ecx+0x54]
  4268cd:	push   edx
  4268ce:	call   DWORD PTR [eax+0x1c]
  4268d1:	mov    edx,DWORD PTR [ebp+0x20]
  4268d4:	mov    eax,DWORD PTR [ebx+0x1c8]
  4268da:	mov    eax,DWORD PTR [eax]
  4268dc:	xor    eax,esi
  4268de:	add    eax,edi
  4268e0:	je     0x426919
  4268e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4268e5:	mov    eax,DWORD PTR [ecx+0x28]
  4268e8:	mov    DWORD PTR [ebp+0x8],0xf89ca5a1
  4268ef:	mov    esi,DWORD PTR [ebp+0x8]
  4268f2:	push   DWORD PTR [ebp+0x14]
  4268f5:	xor    esi,0x8ac
  4268fb:	push   DWORD PTR [ebp+0x10]
  4268fe:	add    esi,0x72f3
  426904:	or     WORD PTR [ecx+0x16],si
  426908:	add    eax,edx
  42690a:	push   edx
  42690b:	call   eax
  42690d:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a2
  426917:	jmp    0x426923
  426919:	mov    eax,DWORD PTR [ebp+0xc]
  42691c:	mov    eax,DWORD PTR [eax+0x28]
  42691f:	add    eax,edx
  426921:	call   eax
  426923:	mov    DWORD PTR [ebp-0x8],eax
  426926:	mov    eax,DWORD PTR [ebp-0x8]
  426929:	mov    ecx,DWORD PTR [ebp+0x1c]
  42692c:	mov    DWORD PTR [ecx],eax
  42692e:	mov    DWORD PTR [ebp-0x30],0x1
  426935:	cmp    DWORD PTR [ebp-0x30],0x0
  426939:	jne    0x42693f
  42693b:	and    DWORD PTR [ebp+0x20],0x0
  42693f:	mov    eax,DWORD PTR [ebp+0x20]
  426942:	jmp    0x426946
  426944:	xor    eax,eax
  426946:	pop    edi
  426947:	pop    esi
  426948:	pop    ebx
  426949:	leave  
  42694a:	ret    0x1c
  42694d:	push   ebp
  42694e:	mov    ebp,esp
  426950:	movzx  edx,WORD PTR [ecx+0x6]
  426954:	movzx  eax,WORD PTR [ecx+0x14]
  426958:	push   ebx
  426959:	push   edi
  42695a:	xor    edi,edi
  42695c:	lea    eax,[eax+ecx*1+0x18]
  426960:	test   edx,edx
  426962:	je     0x426983
  426964:	mov    ecx,DWORD PTR [eax+0xc]
  426967:	lea    ebx,[ecx+esi*1]
  42696a:	cmp    DWORD PTR [ebp+0x8],ebx
  42696d:	jb     0x42697b
  42696f:	mov    ebx,DWORD PTR [eax+0x8]
  426972:	add    ebx,ecx
  426974:	add    ebx,esi
  426976:	cmp    DWORD PTR [ebp+0x8],ebx
  426979:	jb     0x426985
  42697b:	add    eax,0x28
  42697e:	inc    edi
  42697f:	cmp    edi,edx
  426981:	jb     0x426964
  426983:	xor    eax,eax
  426985:	pop    edi
  426986:	pop    ebx
  426987:	pop    ebp
  426988:	ret    0x4
  42698b:	push   ebp
  42698c:	mov    ebp,esp
  42698e:	sub    esp,0x34
  426991:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  426998:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  42699f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  4269a6:	mov    DWORD PTR [ebp-0x8],0xf89c85c2
  4269ad:	mov    DWORD PTR [ebp-0x20],0xf89c85e2
  4269b4:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  4269bb:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  4269c2:	mov    DWORD PTR [ebp-0x10],eax
  4269c5:	mov    eax,DWORD PTR [ebp+0x8]
  4269c8:	mov    DWORD PTR [ebp-0x14],eax
  4269cb:	mov    eax,DWORD PTR [ebp-0xc]
  4269ce:	push   ebx
  4269cf:	mov    ecx,0x75108ac
  4269d4:	xor    eax,ecx
  4269d6:	push   esi
  4269d7:	mov    esi,DWORD PTR [ebp-0x10]
  4269da:	mov    edx,0x3272f3
  4269df:	add    eax,edx
  4269e1:	push   edi
  4269e2:	cmp    esi,eax
  4269e4:	je     0x426bc3
  4269ea:	mov    eax,DWORD PTR [ebp-0xc]
  4269ed:	mov    esi,DWORD PTR [ebp-0x14]
  4269f0:	xor    eax,ecx
  4269f2:	add    eax,edx
  4269f4:	cmp    esi,eax
  4269f6:	je     0x426bc3
  4269fc:	mov    eax,DWORD PTR [ebp-0xc]
  4269ff:	xor    eax,ecx
  426a01:	add    eax,edx
  426a03:	mov    DWORD PTR [ebp-0x24],eax
  426a06:	mov    eax,DWORD PTR [ebp-0xc]
  426a09:	xor    eax,ecx
  426a0b:	add    eax,edx
  426a0d:	mov    DWORD PTR [ebp-0x28],eax
  426a10:	mov    edi,DWORD PTR [ebp-0x20]
  426a13:	mov    ebx,DWORD PTR [ebp-0x8]
  426a16:	mov    esi,0x8ac
  426a1b:	xor    edi,esi
  426a1d:	mov    eax,0x72f3
  426a22:	xor    ebx,esi
  426a24:	add    edi,eax
  426a26:	add    ebx,eax
  426a28:	sub    ebx,edi
  426a2a:	mov    WORD PTR [ebp-0x8],bx
  426a2e:	jmp    0x426af3
  426a33:	mov    edi,DWORD PTR [ebp-0xc]
  426a36:	mov    bx,WORD PTR [ebp-0x4]
  426a3a:	xor    edi,esi
  426a3c:	add    edi,eax
  426a3e:	cmp    bx,di
  426a41:	je     0x426b35
  426a47:	mov    edi,DWORD PTR [ebp-0xc]
  426a4a:	mov    ebx,DWORD PTR [ebp+0xc]
  426a4d:	xor    edi,ecx
  426a4f:	add    edi,edx
  426a51:	cmp    ebx,edi
  426a53:	mov    di,WORD PTR [ebp-0x4]
  426a57:	mov    bx,WORD PTR [ebp+0x8]
  426a5b:	je     0x426ac6
  426a5d:	cmp    bx,di
  426a60:	je     0x426acf
  426a62:	mov    edi,DWORD PTR [ebp-0x20]
  426a65:	mov    bx,WORD PTR [ebp+0x8]
  426a69:	xor    edi,esi
  426a6b:	add    edi,eax
  426a6d:	cmp    bx,di
  426a70:	jb     0x426a90
  426a72:	mov    edi,DWORD PTR [ebp-0x2c]
  426a75:	mov    bx,WORD PTR [ebp+0x8]
  426a79:	xor    edi,esi
  426a7b:	add    edi,eax
  426a7d:	cmp    bx,di
  426a80:	ja     0x426a90
  426a82:	movzx  edi,WORD PTR [ebp+0x8]
  426a86:	movzx  ebx,WORD PTR [ebp-0x8]
  426a8a:	add    edi,ebx
  426a8c:	mov    WORD PTR [ebp+0x8],di
  426a90:	mov    edi,DWORD PTR [ebp-0x20]
  426a93:	mov    bx,WORD PTR [ebp-0x4]
  426a97:	xor    edi,esi
  426a99:	add    edi,eax
  426a9b:	cmp    bx,di
  426a9e:	jb     0x426abe
  426aa0:	mov    edi,DWORD PTR [ebp-0x2c]
  426aa3:	mov    bx,WORD PTR [ebp-0x4]
  426aa7:	xor    edi,esi
  426aa9:	add    edi,eax
  426aab:	cmp    bx,di
  426aae:	ja     0x426abe
  426ab0:	movzx  edi,WORD PTR [ebp-0x4]
  426ab4:	movzx  ebx,WORD PTR [ebp-0x8]
  426ab8:	add    edi,ebx
  426aba:	mov    WORD PTR [ebp-0x4],di
  426abe:	mov    di,WORD PTR [ebp-0x4]
  426ac2:	mov    bx,WORD PTR [ebp+0x8]
  426ac6:	cmp    bx,di
  426ac9:	jne    0x426bc3
  426acf:	mov    edi,DWORD PTR [ebp-0x1c]
  426ad2:	mov    ebx,DWORD PTR [ebp-0x10]
  426ad5:	xor    edi,ecx
  426ad7:	lea    edi,[edi+ebx*1+0x3272f3]
  426ade:	mov    DWORD PTR [ebp-0x10],edi
  426ae1:	mov    edi,DWORD PTR [ebp-0x1c]
  426ae4:	mov    ebx,DWORD PTR [ebp-0x14]
  426ae7:	xor    edi,ecx
  426ae9:	lea    edi,[edi+ebx*1+0x3272f3]
  426af0:	mov    DWORD PTR [ebp-0x14],edi
  426af3:	mov    edi,DWORD PTR [ebp-0x24]
  426af6:	mov    ebx,DWORD PTR [ebp-0x10]
  426af9:	mov    di,WORD PTR [ebx+edi*2]
  426afd:	mov    WORD PTR [ebp+0x8],di
  426b01:	mov    edi,DWORD PTR [ebp-0x28]
  426b04:	mov    ebx,DWORD PTR [ebp-0x14]
  426b07:	mov    di,WORD PTR [ebx+edi*2]
  426b0b:	mov    WORD PTR [ebp-0x4],di
  426b0f:	mov    edi,DWORD PTR [ebp-0xc]
  426b12:	mov    bx,WORD PTR [ebp+0x8]
  426b16:	xor    edi,esi
  426b18:	add    edi,eax
  426b1a:	cmp    bx,di
  426b1d:	jne    0x426a33
  426b23:	mov    eax,DWORD PTR [ebp-0x18]
  426b26:	mov    esi,DWORD PTR [ebp-0xc]
  426b29:	xor    eax,ecx
  426b2b:	add    eax,edx
  426b2d:	imul   eax,esi
  426b30:	mov    DWORD PTR [ebp-0xc],eax
  426b33:	jmp    0x426b47
  426b35:	mov    eax,DWORD PTR [ebp-0xc]
  426b38:	mov    esi,DWORD PTR [ebp-0x18]
  426b3b:	xor    eax,ecx
  426b3d:	lea    eax,[eax+esi*1+0x3272f3]
  426b44:	mov    DWORD PTR [ebp-0x18],eax
  426b47:	mov    eax,DWORD PTR [ebp-0x24]
  426b4a:	sub    eax,edx
  426b4c:	xor    eax,ecx
  426b4e:	mov    DWORD PTR [ebp-0x30],eax
  426b51:	mov    eax,DWORD PTR [ebp-0x28]
  426b54:	sub    eax,edx
  426b56:	xor    eax,ecx
  426b58:	mov    DWORD PTR [ebp-0x34],eax
  426b5b:	mov    eax,DWORD PTR [ebp-0x34]
  426b5e:	mov    esi,DWORD PTR [ebp-0x1c]
  426b61:	xor    esi,ecx
  426b63:	add    esi,edx
  426b65:	xor    eax,ecx
  426b67:	add    eax,0x3272f3
  426b6c:	imul   esi,eax
  426b6f:	mov    eax,DWORD PTR [ebp-0x14]
  426b72:	movzx  eax,WORD PTR [esi+eax*1]
  426b76:	mov    esi,DWORD PTR [ebp-0x30]
  426b79:	mov    edi,DWORD PTR [ebp-0x1c]
  426b7c:	xor    esi,ecx
  426b7e:	add    esi,edx
  426b80:	xor    edi,ecx
  426b82:	add    edi,edx
  426b84:	imul   edi,esi
  426b87:	mov    esi,DWORD PTR [ebp-0x10]
  426b8a:	movzx  esi,WORD PTR [edi+esi*1]
  426b8e:	sub    eax,edx
  426b90:	sub    esi,edx
  426b92:	xor    eax,ecx
  426b94:	xor    esi,ecx
  426b96:	cmp    esi,eax
  426b98:	jne    0x426bc3
  426b9a:	mov    eax,DWORD PTR [ebp-0x30]
  426b9d:	mov    esi,DWORD PTR [ebp-0x1c]
  426ba0:	xor    eax,ecx
  426ba2:	add    eax,0x3272f3
  426ba7:	xor    esi,ecx
  426ba9:	add    esi,edx
  426bab:	imul   esi,eax
  426bae:	mov    eax,DWORD PTR [ebp-0x10]
  426bb1:	movzx  eax,WORD PTR [esi+eax*1]
  426bb5:	mov    esi,DWORD PTR [ebp-0xc]
  426bb8:	sub    eax,edx
  426bba:	xor    eax,ecx
  426bbc:	cmp    eax,esi
  426bbe:	mov    eax,DWORD PTR [ebp-0xc]
  426bc1:	je     0x426bc6
  426bc3:	mov    eax,DWORD PTR [ebp-0x18]
  426bc6:	pop    edi
  426bc7:	xor    eax,ecx
  426bc9:	pop    esi
  426bca:	add    eax,edx
  426bcc:	pop    ebx
  426bcd:	leave  
  426bce:	ret    0x8
  426bd1:	push   ebp
  426bd2:	mov    ebp,esp
  426bd4:	push   ecx
  426bd5:	mov    cx,WORD PTR [eax]
  426bd8:	push   esi
  426bd9:	mov    esi,0x3b5b
  426bde:	sub    cx,si
  426be1:	mov    esi,0x8a99
  426be6:	xor    cx,si
  426be9:	mov    esi,0x4e3c
  426bee:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426bf5:	mov    edx,0xf89c85a1
  426bfa:	cmp    cx,si
  426bfd:	je     0x426c5c
  426bff:	push   ebx
  426c00:	push   edi
  426c01:	movzx  ecx,cx
  426c04:	mov    edi,0xffcd8d0d
  426c09:	mov    esi,0x75108ac
  426c0e:	mov    ebx,0x4f98
  426c13:	cmp    cx,bx
  426c16:	jne    0x426c1b
  426c18:	mov    DWORD PTR [ebp-0x4],edx
  426c1b:	lea    edx,[edi+0x1]
  426c1e:	xor    edx,esi
  426c20:	mov    edi,edx
  426c22:	xor    edi,esi
  426c24:	mov    cx,WORD PTR [eax+edi*2+0x64e5e6]
  426c2c:	mov    ebx,0x3b5b
  426c31:	sub    cx,bx
  426c34:	mov    ebx,0x8a99
  426c39:	xor    cx,bx
  426c3c:	mov    ebx,0x4e3c
  426c41:	cmp    cx,bx
  426c44:	jne    0x426c0e
  426c46:	mov    ecx,DWORD PTR [ebp-0x4]
  426c49:	pop    edi
  426c4a:	pop    ebx
  426c4b:	cmp    ecx,0xf89c85a0
  426c51:	je     0x426c5c
  426c53:	xor    ecx,esi
  426c55:	lea    eax,[eax+ecx*2+0x64e5e8]
  426c5c:	pop    esi
  426c5d:	leave  
  426c5e:	ret    
  426c5f:	push   ebp
  426c60:	mov    ebp,esp
  426c62:	push   ecx
  426c63:	push   esi
  426c64:	push   edi
  426c65:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426c6c:	mov    esi,0xf89c85a1
  426c71:	call   0x426bd1
  426c76:	mov    edi,eax
  426c78:	mov    al,BYTE PTR [edi]
  426c7a:	sub    al,0x2
  426c7c:	xor    al,0x7d
  426c7e:	cmp    al,0x83
  426c80:	je     0x426ce3
  426c82:	mov    eax,edi
  426c84:	mov    edx,0xffcd8d0d
  426c89:	mov    ecx,0x75108ac
  426c8e:	push   ebx
  426c8f:	mov    ax,WORD PTR [eax]
  426c92:	mov    ebx,0x3b5b
  426c97:	sub    ax,bx
  426c9a:	mov    ebx,0x8a99
  426c9f:	xor    ax,bx
  426ca2:	mov    ebx,0x4e4a
  426ca7:	cmp    ax,bx
  426caa:	jne    0x426caf
  426cac:	mov    DWORD PTR [ebp-0x4],esi
  426caf:	lea    esi,[edx+0x1]
  426cb2:	xor    esi,ecx
  426cb4:	mov    edx,esi
  426cb6:	xor    edx,ecx
  426cb8:	lea    eax,[edi+edx*2+0x64e5e6]
  426cbf:	mov    bl,BYTE PTR [eax]
  426cc1:	sub    bl,0x2
  426cc4:	xor    bl,0x7d
  426cc7:	cmp    bl,0x83
  426cca:	jne    0x426c8f
  426ccc:	mov    eax,DWORD PTR [ebp-0x4]
  426ccf:	pop    ebx
  426cd0:	cmp    eax,0xf89c85a0
  426cd5:	je     0x426ce3
  426cd7:	xor    eax,ecx
  426cd9:	xor    ecx,ecx
  426cdb:	mov    WORD PTR [edi+eax*2+0x64e5e6],cx
  426ce3:	mov    eax,edi
  426ce5:	pop    edi
  426ce6:	pop    esi
  426ce7:	leave  
  426ce8:	ret    
  426ce9:	push   ebp
  426cea:	mov    ebp,esp
  426cec:	push   ecx
  426ced:	push   esi
  426cee:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426cf5:	mov    esi,0xf89c85a1
  426cfa:	call   0x426bd1
  426cff:	mov    cx,WORD PTR [eax]
  426d02:	mov    edx,0x3b5b
  426d07:	sub    cx,dx
  426d0a:	mov    edx,0x8a99
  426d0f:	xor    cx,dx
  426d12:	mov    edx,0x4e3c
  426d17:	cmp    cx,dx
  426d1a:	je     0x426d73
  426d1c:	push   ebx
  426d1d:	push   edi
  426d1e:	movzx  ecx,cx
  426d21:	mov    edx,0xffcd8d0d
  426d26:	mov    edi,0x75108ac
  426d2b:	mov    ebx,0x4e4a
  426d30:	cmp    cx,bx
  426d33:	jne    0x426d38
  426d35:	mov    DWORD PTR [ebp-0x4],esi
  426d38:	lea    esi,[edx+0x1]
  426d3b:	xor    esi,edi
  426d3d:	mov    edx,esi
  426d3f:	xor    edx,edi
  426d41:	mov    cx,WORD PTR [eax+edx*2+0x64e5e6]
  426d49:	mov    ebx,0x3b5b
  426d4e:	sub    cx,bx
  426d51:	mov    ebx,0x8a99
  426d56:	xor    cx,bx
  426d59:	mov    ebx,0x4e3c
  426d5e:	cmp    cx,bx
  426d61:	jne    0x426d2b
  426d63:	cmp    DWORD PTR [ebp-0x4],0xf89c85a0
  426d6a:	pop    edi
  426d6b:	pop    ebx
  426d6c:	je     0x426d73
  426d6e:	xor    eax,eax
  426d70:	inc    eax
  426d71:	jmp    0x426d75
  426d73:	xor    eax,eax
  426d75:	pop    esi
  426d76:	leave  
  426d77:	ret    
  426d78:	push   ebp
  426d79:	mov    ebp,esp
  426d7b:	push   ecx
  426d7c:	mov    eax,DWORD PTR [ebp+0x8]
  426d7f:	movzx  ecx,WORD PTR [eax]
  426d82:	push   esi
  426d83:	lea    eax,[ecx-0x3b5b]
  426d89:	mov    esi,0x8a99
  426d8e:	push   edi
  426d8f:	xor    eax,esi
  426d91:	mov    edi,0x4e3c
  426d96:	mov    DWORD PTR [ebp-0x4],edx
  426d99:	cmp    ax,di
  426d9c:	je     0x426dc9
  426d9e:	mov    eax,DWORD PTR [ebp+0x8]
  426da1:	sub    eax,edx
  426da3:	mov    DWORD PTR [ebp+0x8],eax
  426da6:	jmp    0x426dab
  426da8:	mov    eax,DWORD PTR [ebp+0x8]
  426dab:	mov    WORD PTR [edx],cx
  426dae:	add    edx,0x2
  426db1:	movzx  edi,WORD PTR [eax+edx*1]
  426db5:	mov    ecx,edi
  426db7:	add    edi,0xffffc4a5
  426dbd:	xor    edi,esi
  426dbf:	mov    eax,0x4e3c
  426dc4:	cmp    di,ax
  426dc7:	jne    0x426da8
  426dc9:	xor    eax,eax
  426dcb:	pop    edi
  426dcc:	mov    WORD PTR [edx],ax
  426dcf:	mov    eax,DWORD PTR [ebp-0x4]
  426dd2:	pop    esi
  426dd3:	leave  
  426dd4:	ret    0x4
  426dd7:	push   ebp
  426dd8:	mov    ebp,esp
  426dda:	sub    esp,0x18
  426ddd:	mov    DWORD PTR [ebp-0x8],0xf89c85a1
  426de4:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  426deb:	mov    ecx,DWORD PTR [ebp-0x8]
  426dee:	push   esi
  426def:	mov    eax,0x75108ac
  426df4:	xor    ecx,eax
  426df6:	mov    esi,0x3272f3
  426dfb:	add    ecx,esi
  426dfd:	mov    DWORD PTR [ebp-0x4],ecx
  426e00:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  426e07:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  426e0e:	push   edi
  426e0f:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  426e16:	jmp    0x426eb7
  426e1b:	mov    ecx,DWORD PTR [ebp-0x4]
  426e1e:	mov    edx,DWORD PTR [ebp+0x10]
  426e21:	sub    edx,ecx
  426e23:	mov    ecx,DWORD PTR [ebp-0xc]
  426e26:	xor    ecx,eax
  426e28:	add    ecx,esi
  426e2a:	cmp    edx,ecx
  426e2c:	jbe    0x426e49
  426e2e:	mov    edx,DWORD PTR [ebp-0x4]
  426e31:	add    edx,DWORD PTR [ebp+0x8]
  426e34:	mov    ecx,DWORD PTR [ebp-0x4]
  426e37:	add    ecx,DWORD PTR [ebp+0xc]
  426e3a:	mov    edi,DWORD PTR [ecx]
  426e3c:	mov    DWORD PTR [edx],edi
  426e3e:	mov    ecx,DWORD PTR [ecx+0x4]
  426e41:	mov    DWORD PTR [edx+0x4],ecx
  426e44:	mov    ecx,DWORD PTR [ebp-0xc]
  426e47:	jmp    0x426e96
  426e49:	mov    ecx,DWORD PTR [ebp-0x4]
  426e4c:	mov    edx,DWORD PTR [ebp+0x10]
  426e4f:	sub    edx,ecx
  426e51:	mov    ecx,DWORD PTR [ebp-0x10]
  426e54:	xor    ecx,eax
  426e56:	add    ecx,esi
  426e58:	cmp    edx,ecx
  426e5a:	mov    ecx,DWORD PTR [ebp-0x4]
  426e5d:	jbe    0x426e71
  426e5f:	add    ecx,DWORD PTR [ebp+0x8]
  426e62:	mov    edx,DWORD PTR [ebp-0x4]
  426e65:	add    edx,DWORD PTR [ebp+0xc]
  426e68:	mov    edx,DWORD PTR [edx]
  426e6a:	mov    DWORD PTR [ecx],edx
  426e6c:	mov    ecx,DWORD PTR [ebp-0x10]
  426e6f:	jmp    0x426e96
  426e71:	mov    edx,DWORD PTR [ebp+0x10]
  426e74:	sub    edx,ecx
  426e76:	mov    ecx,DWORD PTR [ebp-0x14]
  426e79:	xor    ecx,eax
  426e7b:	add    ecx,esi
  426e7d:	cmp    edx,ecx
  426e7f:	mov    ecx,DWORD PTR [ebp-0x4]
  426e82:	jbe    0x426ea7
  426e84:	add    ecx,DWORD PTR [ebp+0x8]
  426e87:	mov    edx,DWORD PTR [ebp-0x4]
  426e8a:	add    edx,DWORD PTR [ebp+0xc]
  426e8d:	mov    dx,WORD PTR [edx]
  426e90:	mov    WORD PTR [ecx],dx
  426e93:	mov    ecx,DWORD PTR [ebp-0x14]
  426e96:	mov    edx,DWORD PTR [ebp-0x4]
  426e99:	xor    ecx,eax
  426e9b:	lea    ecx,[ecx+edx*1+0x3272f3]
  426ea2:	mov    DWORD PTR [ebp-0x4],ecx
  426ea5:	jmp    0x426eb7
  426ea7:	add    ecx,DWORD PTR [ebp+0x8]
  426eaa:	mov    edx,DWORD PTR [ebp-0x4]
  426ead:	add    edx,DWORD PTR [ebp+0xc]
  426eb0:	mov    dl,BYTE PTR [edx]
  426eb2:	mov    BYTE PTR [ecx],dl
  426eb4:	inc    DWORD PTR [ebp-0x4]
  426eb7:	mov    ecx,DWORD PTR [ebp-0x18]
  426eba:	mov    edx,DWORD PTR [ebp+0x10]
  426ebd:	xor    ecx,eax
  426ebf:	add    ecx,esi
  426ec1:	imul   ecx,edx
  426ec4:	mov    edx,DWORD PTR [ebp-0x8]
  426ec7:	mov    edi,DWORD PTR [ebp-0x4]
  426eca:	xor    edx,eax
  426ecc:	lea    edx,[edx+edi*1+0x3272f3]
  426ed3:	cmp    edx,ecx
  426ed5:	jb     0x426e1b
  426edb:	pop    edi
  426edc:	pop    esi
  426edd:	leave  
  426ede:	ret    0xc
  426ee1:	push   ebp
  426ee2:	mov    ebp,esp
  426ee4:	sub    esp,0xc
  426ee7:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  426eee:	push   esi
  426eef:	mov    esi,eax
  426ef1:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  426ef8:	mov    edx,DWORD PTR [ebp-0x4]
  426efb:	mov    eax,0x75108ac
  426f00:	xor    edx,eax
  426f02:	mov    ecx,0x3272f3
  426f07:	add    edx,ecx
  426f09:	cmp    esi,edx
  426f0b:	je     0x426f4d
  426f0d:	push   ebx
  426f0e:	push   edi
  426f0f:	mov    edx,DWORD PTR [ebp-0x8]
  426f12:	mov    ebx,DWORD PTR [ebp+0x8]
  426f15:	xor    edx,eax
  426f17:	mov    edi,0xffcd8d0d
  426f1c:	sub    edi,edx
  426f1e:	add    esi,edi
  426f20:	lea    edx,[esi-0x3272f3]
  426f26:	xor    edx,eax
  426f28:	mov    DWORD PTR [ebp-0xc],edx
  426f2b:	mov    edx,DWORD PTR [ebp-0x4]
  426f2e:	mov    edi,DWORD PTR [ebp-0xc]
  426f31:	xor    dl,0xac
  426f34:	sub    dl,0xd
  426f37:	xor    edi,eax
  426f39:	mov    BYTE PTR [edi+ebx*1+0x3272f3],dl
  426f40:	mov    edx,DWORD PTR [ebp-0x4]
  426f43:	xor    edx,eax
  426f45:	add    edx,ecx
  426f47:	cmp    esi,edx
  426f49:	jne    0x426f0f
  426f4b:	pop    edi
  426f4c:	pop    ebx
  426f4d:	pop    esi
  426f4e:	leave  
  426f4f:	ret    0x4
  426f52:	push   ebp
  426f53:	mov    ebp,esp
  426f55:	sub    esp,0x21c
  426f5b:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  426f62:	mov    DWORD PTR [ebp-0x14],0xf89c85a2
  426f69:	mov    eax,DWORD PTR [ebp+0x10]
  426f6c:	mov    eax,DWORD PTR [ebp-0x4]
  426f6f:	mov    ecx,DWORD PTR [ebp+0x8]
  426f72:	push   esi
  426f73:	push   edi
  426f74:	mov    edi,0x75108ac
  426f79:	xor    eax,edi
  426f7b:	mov    esi,0x3272f3
  426f80:	add    eax,esi
  426f82:	cmp    eax,ecx
  426f84:	mov    eax,DWORD PTR [ebp-0x4]
  426f87:	jne    0x426f92
  426f89:	xor    eax,edi
  426f8b:	add    eax,esi
  426f8d:	jmp    0x42703e
  426f92:	mov    ecx,DWORD PTR [ebp+0xc]
  426f95:	xor    eax,edi
  426f97:	add    eax,esi
  426f99:	cmp    eax,ecx
  426f9b:	jne    0x426fa2
  426f9d:	mov    eax,DWORD PTR [ebp-0x4]
  426fa0:	jmp    0x426f89
  426fa2:	lea    eax,[ebp-0x21c]
  426fa8:	mov    DWORD PTR [ebp-0x8],eax
  426fab:	mov    eax,DWORD PTR [ebp+0xc]
  426fae:	mov    DWORD PTR [ebp-0x10],eax
  426fb1:	mov    eax,DWORD PTR [ebp-0x4]
  426fb4:	xor    eax,edi
  426fb6:	add    eax,esi
  426fb8:	mov    DWORD PTR [ebp+0x10],eax
  426fbb:	mov    eax,DWORD PTR [ebp+0xc]
  426fbe:	push   ebx
  426fbf:	call   0x426ce9
  426fc4:	mov    ebx,eax
  426fc6:	mov    eax,DWORD PTR [ebp+0x8]
  426fc9:	mov    eax,DWORD PTR [eax+0x14]
  426fcc:	jmp    0x427026
  426fce:	mov    eax,DWORD PTR [ebp+0xc]
  426fd1:	sub    eax,0x8
  426fd4:	mov    DWORD PTR [ebp-0xc],eax
  426fd7:	mov    eax,DWORD PTR [ebp-0xc]
  426fda:	mov    eax,DWORD PTR [eax+0x28]
  426fdd:	call   0x426bd1
  426fe2:	mov    DWORD PTR [ebp+0x10],eax
  426fe5:	push   DWORD PTR [ebp+0x10]
  426fe8:	mov    edx,DWORD PTR [ebp-0x8]
  426feb:	call   0x426d78
  426ff0:	mov    eax,DWORD PTR [ebp-0x4]
  426ff3:	xor    eax,edi
  426ff5:	add    eax,esi
  426ff7:	cmp    eax,ebx
  426ff9:	jne    0x427003
  426ffb:	mov    eax,DWORD PTR [ebp-0x8]
  426ffe:	call   0x426c5f
  427003:	mov    eax,DWORD PTR [ebp-0x14]
  427006:	xor    eax,edi
  427008:	add    eax,esi
  42700a:	push   eax
  42700b:	push   DWORD PTR [ebp-0x10]
  42700e:	mov    eax,DWORD PTR [ebp-0x8]
  427011:	call   0x42698b
  427016:	mov    ecx,DWORD PTR [ebp-0x4]
  427019:	xor    ecx,edi
  42701b:	add    ecx,esi
  42701d:	cmp    eax,ecx
  42701f:	je     0x427044
  427021:	mov    eax,DWORD PTR [ebp+0xc]
  427024:	mov    eax,DWORD PTR [eax]
  427026:	mov    DWORD PTR [ebp+0xc],eax
  427029:	mov    eax,DWORD PTR [ebp+0x8]
  42702c:	mov    ecx,DWORD PTR [ebp+0xc]
  42702f:	add    eax,0x14
  427032:	cmp    ecx,eax
  427034:	jne    0x426fce
  427036:	mov    eax,DWORD PTR [ebp-0x4]
  427039:	xor    eax,edi
  42703b:	add    eax,esi
  42703d:	pop    ebx
  42703e:	pop    edi
  42703f:	pop    esi
  427040:	leave  
  427041:	ret    0xc
  427044:	mov    eax,DWORD PTR [ebp-0xc]
  427047:	mov    eax,DWORD PTR [eax+0x18]
  42704a:	jmp    0x42703d
  42704c:	push   ebp
  42704d:	mov    ebp,esp
  42704f:	mov    eax,DWORD PTR [ebp+0xc]
  427052:	sub    esp,0x10
  427055:	cmp    DWORD PTR [ebp+0x8],0x0
  427059:	push   ebx
  42705a:	push   esi
  42705b:	push   edi
  42705c:	je     0x427111
  427062:	test   eax,eax
  427064:	je     0x427111
  42706a:	movzx  eax,WORD PTR [eax+0x20]
  42706e:	mov    ecx,eax
  427070:	mov    DWORD PTR [ebp-0x10],eax
  427073:	xor    edx,edx
  427075:	and    DWORD PTR [ebp-0x8],edx
  427078:	mov    eax,0x8a99
  42707d:	xor    ecx,eax
  42707f:	add    ecx,0x3b5b
  427085:	mov    DWORD PTR [ebp-0xc],ecx
  427088:	and    DWORD PTR [ebp-0x4],0x0
  42708c:	xor    ecx,ecx
  42708e:	push   0x7d
  427090:	pop    edi
  427091:	cmp    cx,WORD PTR [ebp-0xc]
  427095:	jae    0x4270fb
  427097:	lea    esi,[edx-0x3b5b]
  42709d:	xor    esi,eax
  42709f:	movzx  ecx,WORD PTR [ebp-0x4]
  4270a3:	mov    ebx,DWORD PTR [ebp+0xc]
  4270a6:	lea    ecx,[ebx+ecx*4]
  4270a9:	cmp    WORD PTR [ecx+0x2],si
  4270ad:	jne    0x4270e6
  4270af:	movzx  ecx,WORD PTR [ecx]
  4270b2:	mov    edi,0x4e3c
  4270b7:	cmp    cx,di
  4270ba:	jne    0x4270c8
  4270bc:	mov    ebx,DWORD PTR [ebp+0x8]
  4270bf:	movzx  edi,dx
  4270c2:	cmp    BYTE PTR [edi+ebx*1],0x0
  4270c6:	je     0x4270f5
  4270c8:	mov    ebx,DWORD PTR [ebp+0x8]
  4270cb:	movzx  edi,dx
  4270ce:	movsx  di,BYTE PTR [edi+ebx*1]
  4270d3:	mov    ebx,0x3b5b
  4270d8:	sub    di,bx
  4270db:	xor    di,ax
  4270de:	cmp    cx,di
  4270e1:	je     0x4270f5
  4270e3:	push   0xffffff83
  4270e5:	pop    edi
  4270e6:	inc    DWORD PTR [ebp-0x4]
  4270e9:	mov    cx,WORD PTR [ebp-0xc]
  4270ed:	cmp    WORD PTR [ebp-0x4],cx
  4270f1:	jb     0x42709f
  4270f3:	jmp    0x4270fb
  4270f5:	inc    DWORD PTR [ebp-0x8]
  4270f8:	push   0xffffff82
  4270fa:	pop    edi
  4270fb:	mov    esi,DWORD PTR [ebp+0x8]
  4270fe:	movzx  ecx,dx
  427101:	cmp    BYTE PTR [ecx+esi*1],0x0
  427105:	je     0x42711a
  427107:	inc    edx
  427108:	cmp    edi,0xffffff83
  42710b:	jne    0x427088
  427111:	xor    eax,eax
  427113:	pop    edi
  427114:	pop    esi
  427115:	pop    ebx
  427116:	leave  
  427117:	ret    0x8
  42711a:	mov    ecx,DWORD PTR [ebp-0x8]
  42711d:	add    ecx,0xffffc4a5
  427123:	xor    cx,ax
  427126:	xor    eax,eax
  427128:	cmp    cx,WORD PTR [ebp-0x10]
  42712c:	sete   al
  42712f:	jmp    0x427113
  427131:	push   ebp
  427132:	mov    ebp,esp
  427134:	sub    esp,0x50
  427137:	push   edi
  427138:	mov    edi,eax
  42713a:	mov    eax,DWORD PTR [edi+0x1a8]
  427140:	cmp    DWORD PTR [eax],0x0
  427143:	jne    0x42714c
  427145:	xor    eax,eax
  427147:	jmp    0x42727d
  42714c:	push   DWORD PTR [ebp+0x8]
  42714f:	push   0x2c
  427151:	pop    eax
  427152:	call   0x426ee1
  427157:	mov    edx,DWORD PTR [edi+0x1ac]
  42715d:	lea    eax,[edi+0x22]
  427160:	mov    DWORD PTR [ebp-0x4c],eax
  427163:	lea    eax,[edi+0x44]
  427166:	mov    DWORD PTR [ebp-0x48],eax
  427169:	lea    eax,[edi+0x66]
  42716c:	mov    DWORD PTR [ebp-0x44],eax
  42716f:	lea    eax,[edi+0x88]
  427175:	mov    DWORD PTR [ebp-0x40],eax
  427178:	lea    eax,[edi+0xaa]
  42717e:	mov    DWORD PTR [ebp-0x3c],eax
  427181:	lea    eax,[edi+0xcc]
  427187:	mov    DWORD PTR [ebp-0x38],eax
  42718a:	lea    eax,[edi+0xee]
  427190:	mov    DWORD PTR [ebp-0x34],eax
  427193:	lea    eax,[edi+0x110]
  427199:	mov    DWORD PTR [ebp-0x30],eax
  42719c:	lea    eax,[edi+0x132]
  4271a2:	mov    DWORD PTR [ebp-0x2c],eax
  4271a5:	lea    eax,[edi+0x154]
  4271ab:	push   edi
  4271ac:	mov    DWORD PTR [ebp-0x50],edi
  4271af:	mov    DWORD PTR [ebp-0x28],eax
  4271b2:	call   0x4272b1
  4271b7:	push   eax
  4271b8:	mov    eax,DWORD PTR [edi+0x1a8]
  4271be:	push   DWORD PTR [eax]
  4271c0:	call   0x426f52
  4271c5:	mov    DWORD PTR [ebp-0x10],eax
  4271c8:	test   eax,eax
  4271ca:	je     0x42727d
  4271d0:	mov    ecx,DWORD PTR [eax+0x3c]
  4271d3:	push   ebx
  4271d4:	push   esi
  4271d5:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  4271d9:	add    esi,eax
  4271db:	mov    edi,DWORD PTR [esi+0x24]
  4271de:	mov    ecx,DWORD PTR [esi+0x1c]
  4271e1:	mov    edx,DWORD PTR [esi+0x20]
  4271e4:	mov    ebx,DWORD PTR [esi+0x18]
  4271e7:	add    edi,eax
  4271e9:	mov    DWORD PTR [ebp-0x20],edi
  4271ec:	mov    edi,DWORD PTR [esi+0x14]
  4271ef:	add    ecx,eax
  4271f1:	add    edx,eax
  4271f3:	mov    DWORD PTR [ebp-0xc],ecx
  4271f6:	mov    DWORD PTR [ebp-0x1c],edx
  4271f9:	mov    DWORD PTR [ebp-0x8],edi
  4271fc:	cmp    edi,ebx
  4271fe:	ja     0x427203
  427200:	mov    DWORD PTR [ebp-0x8],ebx
  427203:	xor    ebx,ebx
  427205:	mov    DWORD PTR [ebp-0x18],ebx
  427208:	cmp    DWORD PTR [ebp-0x8],ebx
  42720b:	jbe    0x42727b
  42720d:	jmp    0x427212
  42720f:	mov    edx,DWORD PTR [ebp-0x1c]
  427212:	mov    edi,DWORD PTR [ebp-0x20]
  427215:	movzx  edi,WORD PTR [edi+ebx*2]
  427219:	cmp    ebx,DWORD PTR [esi+0x18]
  42721c:	jae    0x42727b
  42721e:	cmp    edi,DWORD PTR [esi+0x14]
  427221:	jae    0x42727b
  427223:	mov    ebx,DWORD PTR [edx+ebx*4]
  427226:	mov    edx,DWORD PTR [ebp+0x8]
  427229:	mov    edi,DWORD PTR [ecx+edi*4]
  42722c:	mov    DWORD PTR [ebp-0x4],edx
  42722f:	lea    edx,[ebp-0x50]
  427232:	add    ebx,eax
  427234:	add    edi,eax
  427236:	sub    edx,DWORD PTR [ebp+0x8]
  427239:	mov    DWORD PTR [ebp-0x14],0xb
  427240:	mov    DWORD PTR [ebp-0x24],edx
  427243:	mov    edx,DWORD PTR [ebp-0x4]
  427246:	cmp    DWORD PTR [edx],0x0
  427249:	jne    0x427266
  42724b:	mov    eax,DWORD PTR [ebp-0x24]
  42724e:	push   DWORD PTR [eax+edx*1]
  427251:	push   ebx
  427252:	call   0x42704c
  427257:	mov    ecx,DWORD PTR [ebp-0xc]
  42725a:	test   eax,eax
  42725c:	je     0x427263
  42725e:	mov    eax,DWORD PTR [ebp-0x4]
  427261:	mov    DWORD PTR [eax],edi
  427263:	mov    eax,DWORD PTR [ebp-0x10]
  427266:	add    DWORD PTR [ebp-0x4],0x4
  42726a:	dec    DWORD PTR [ebp-0x14]
  42726d:	jne    0x427243
  42726f:	mov    ebx,DWORD PTR [ebp-0x18]
  427272:	inc    ebx
  427273:	mov    DWORD PTR [ebp-0x18],ebx
  427276:	cmp    ebx,DWORD PTR [ebp-0x8]
  427279:	jb     0x42720f
  42727b:	pop    esi
  42727c:	pop    ebx
  42727d:	pop    edi
  42727e:	leave  
  42727f:	ret    0x4
  427282:	push   ebp
  427283:	mov    ebp,esp
  427285:	mov    eax,DWORD PTR [ebp+0x8]
  427288:	push   esi
  427289:	push   DWORD PTR [eax+0x1e0]
  42728f:	lea    esi,[eax+0x198]
  427295:	mov    eax,DWORD PTR [ebp+0x8]
  427298:	call   0x427131
  42729d:	mov    ecx,DWORD PTR [esi]
  42729f:	mov    DWORD PTR [ecx],eax
  4272a1:	mov    eax,DWORD PTR [esi]
  4272a3:	xor    ecx,ecx
  4272a5:	cmp    DWORD PTR [eax],ecx
  4272a7:	pop    esi
  4272a8:	setne  cl
  4272ab:	mov    eax,ecx
  4272ad:	pop    ebp
  4272ae:	ret    0x4
  4272b1:	mov    ecx,DWORD PTR [edi+0x188]
  4272b7:	push   ebx
  4272b8:	jmp    0x4272cd
  4272ba:	xor    eax,0x8a99
  4272bf:	add    eax,0x3b5b
  4272c4:	mov    WORD PTR [ecx],ax
  4272c7:	add    ecx,0x2
  4272ca:	add    edx,0x2
  4272cd:	movzx  eax,WORD PTR [edx]
  4272d0:	mov    ebx,0x4e3c
  4272d5:	cmp    ax,bx
  4272d8:	jne    0x4272ba
  4272da:	xor    eax,eax
  4272dc:	mov    WORD PTR [ecx],ax
  4272df:	mov    eax,DWORD PTR [edi+0x188]
  4272e5:	pop    ebx
  4272e6:	ret    
  4272e7:	push   edi
  4272e8:	mov    edi,eax
  4272ea:	mov    eax,DWORD PTR [esi+0x188]
  4272f0:	shl    edi,0x6
  4272f3:	add    eax,edi
  4272f5:	jmp    0x427301
  4272f7:	xor    cl,0x7d
  4272fa:	add    cl,0x2
  4272fd:	mov    BYTE PTR [eax],cl
  4272ff:	inc    eax
  427300:	inc    edx
  427301:	mov    cl,BYTE PTR [edx]
  427303:	cmp    cl,0x83
  427306:	jne    0x4272f7
  427308:	mov    BYTE PTR [eax],0x0
  42730b:	mov    eax,DWORD PTR [esi+0x188]
  427311:	add    eax,edi
  427313:	pop    edi
  427314:	ret    
  427315:	push   ebp
  427316:	mov    ebp,esp
  427318:	sub    esp,0x14
  42731b:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  427322:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  427329:	mov    eax,DWORD PTR [ebx]
  42732b:	mov    DWORD PTR [ebp-0x8],eax
  42732e:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  427335:	push   esi
  427336:	push   edi
  427337:	mov    DWORD PTR [ebp-0x14],0xead71881
  42733e:	mov    edi,DWORD PTR [ebp-0x4]
  427341:	mov    ecx,DWORD PTR [ebp-0x10]
  427344:	mov    eax,0x75108ac
  427349:	xor    edi,eax
  42734b:	mov    edx,0x3272f3
  427350:	xor    ecx,eax
  427352:	add    edi,edx
  427354:	add    ecx,edx
  427356:	imul   edi,ecx
  427359:	jmp    0x4273a1
  42735b:	mov    ecx,DWORD PTR [ebp-0x8]
  42735e:	mov    esi,DWORD PTR [ebp-0x4]
  427361:	xor    ecx,eax
  427363:	xor    esi,eax
  427365:	add    ecx,edx
  427367:	add    esi,edx
  427369:	test   esi,ecx
  42736b:	mov    esi,DWORD PTR [ebp-0x8]
  42736e:	mov    ecx,DWORD PTR [ebp-0x4]
  427371:	je     0x427388
  427373:	xor    ecx,eax
  427375:	xor    esi,eax
  427377:	add    ecx,edx
  427379:	add    esi,edx
  42737b:	shr    esi,cl
  42737d:	mov    ecx,DWORD PTR [ebp-0x14]
  427380:	xor    ecx,eax
  427382:	add    ecx,edx
  427384:	xor    esi,ecx
  427386:	jmp    0x427392
  427388:	xor    esi,eax
  42738a:	xor    ecx,eax
  42738c:	add    esi,edx
  42738e:	add    ecx,edx
  427390:	shr    esi,cl
  427392:	mov    DWORD PTR [ebp-0x8],esi
  427395:	mov    ecx,DWORD PTR [ebp-0x4]
  427398:	xor    ecx,eax
  42739a:	lea    edi,[edi+ecx*1+0x3272f3]
  4273a1:	mov    ecx,DWORD PTR [ebp-0xc]
  4273a4:	mov    esi,DWORD PTR [ebp-0x4]
  4273a7:	xor    esi,eax
  4273a9:	xor    ecx,eax
  4273ab:	sub    ecx,esi
  4273ad:	cmp    edi,ecx
  4273af:	jbe    0x42735b
  4273b1:	mov    eax,DWORD PTR [ebp-0x8]
  4273b4:	pop    edi
  4273b5:	mov    DWORD PTR [ebx],eax
  4273b7:	mov    eax,DWORD PTR [ebp-0x8]
  4273ba:	pop    esi
  4273bb:	leave  
  4273bc:	ret    
  4273bd:	push   ebp
  4273be:	mov    ebp,esp
  4273c0:	sub    esp,0x38
  4273c3:	push   ebx
  4273c4:	mov    ebx,0xf89c85a1
  4273c9:	mov    DWORD PTR [ebp-0x4],ebx
  4273cc:	lea    ecx,[ebx+0x1]
  4273cf:	mov    DWORD PTR [ebp-0x24],ecx
  4273d2:	mov    eax,DWORD PTR [ebp-0x4]
  4273d5:	mov    edx,DWORD PTR [ebp+0x8]
  4273d8:	push   esi
  4273d9:	mov    esi,0x75108ac
  4273de:	xor    eax,esi
  4273e0:	push   edi
  4273e1:	mov    edi,0x3272f3
  4273e6:	add    eax,edi
  4273e8:	cmp    edx,eax
  4273ea:	mov    eax,DWORD PTR [ebp-0x4]
  4273ed:	je     0x427552
  4273f3:	mov    edx,DWORD PTR [ebp+0xc]
  4273f6:	xor    eax,esi
  4273f8:	add    eax,edi
  4273fa:	cmp    edx,eax
  4273fc:	je     0x42754f
  427402:	mov    eax,DWORD PTR [ebp+0x10]
  427405:	mov    edx,DWORD PTR [ebp+0xc]
  427408:	mov    DWORD PTR [ebp-0x14],eax
  42740b:	mov    eax,DWORD PTR [ebp+0x8]
  42740e:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  427415:	mov    DWORD PTR [ebp-0xc],eax
  427418:	lea    eax,[ebx+0x2]
  42741b:	mov    DWORD PTR [ebp-0x1c],eax
  42741e:	mov    DWORD PTR [ebp-0x10],ebx
  427421:	mov    DWORD PTR [ebp+0xc],ecx
  427424:	mov    DWORD PTR [ebp+0x10],eax
  427427:	mov    eax,DWORD PTR [ebp+0xc]
  42742a:	xor    eax,esi
  42742c:	mov    DWORD PTR [ebp-0x20],edx
  42742f:	sub    edx,eax
  427431:	sub    edx,edi
  427433:	mov    DWORD PTR [ebp+0x8],edx
  427436:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  42743d:	jmp    0x42753f
  427442:	mov    eax,DWORD PTR [ebp+0xc]
  427445:	mov    ecx,DWORD PTR [ebp+0xc]
  427448:	xor    eax,esi
  42744a:	xor    ecx,esi
  42744c:	lea    ecx,[eax+ecx*1+0x64e5e6]
  427453:	mov    eax,DWORD PTR [ebp+0x8]
  427456:	xor    edx,edx
  427458:	div    ecx
  42745a:	mov    eax,DWORD PTR [ebp+0x10]
  42745d:	mov    ecx,DWORD PTR [ebp+0xc]
  427460:	xor    eax,esi
  427462:	xor    ecx,esi
  427464:	sub    eax,ecx
  427466:	cmp    edx,eax
  427468:	jne    0x4274fe
  42746e:	mov    eax,DWORD PTR [ebp+0x8]
  427471:	mov    ecx,DWORD PTR [ebp-0xc]
  427474:	mov    dl,BYTE PTR [eax+ecx*1]
  427477:	mov    eax,DWORD PTR [ebp-0x10]
  42747a:	mov    ecx,DWORD PTR [ebp-0x8]
  42747d:	xor    eax,esi
  42747f:	xor    ecx,esi
  427481:	add    eax,edi
  427483:	add    ecx,edi
  427485:	cmp    eax,ecx
  427487:	jae    0x4274cf
  427489:	lea    ecx,[eax-0x3272f3]
  42748f:	mov    DWORD PTR [ebp-0x4],ecx
  427492:	mov    ebx,DWORD PTR [ebp-0x4]
  427495:	xor    ebx,esi
  427497:	add    ebx,0x7f55d8e3
  42749d:	lea    ecx,[ebp+eax*4-0x38]
  4274a1:	mov    DWORD PTR [ecx],ebx
  4274a3:	mov    ebx,DWORD PTR [ecx]
  4274a5:	cmp    ebx,0x244ecb9c
  4274ab:	jbe    0x4274b5
  4274ad:	add    DWORD PTR [ecx],0x405fcdd
  4274b3:	jmp    0x4274bb
  4274b5:	add    DWORD PTR [ecx],0xfdaf4323
  4274bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4274be:	xor    ecx,esi
  4274c0:	inc    eax
  4274c1:	inc    DWORD PTR [ebp-0x4]
  4274c4:	add    ecx,edi
  4274c6:	cmp    eax,ecx
  4274c8:	jb     0x427492
  4274ca:	mov    ebx,0xf89c85a1
  4274cf:	cmp    DWORD PTR [ebp-0x14],0x0
  4274d3:	jne    0x4274dd
  4274d5:	xor    dl,0x7d
  4274d8:	add    dl,0x2
  4274db:	jmp    0x4274f3
  4274dd:	mov    eax,DWORD PTR [ebp-0x18]
  4274e0:	xor    al,0xac
  4274e2:	mov    cl,0xd
  4274e4:	sub    cl,al
  4274e6:	add    dl,cl
  4274e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4274eb:	xor    cl,0xac
  4274ee:	sub    cl,0xd
  4274f1:	ror    dl,cl
  4274f3:	xor    eax,eax
  4274f5:	mov    eax,DWORD PTR [ebp+0x8]
  4274f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4274fb:	mov    BYTE PTR [eax+ecx*1],dl
  4274fe:	mov    eax,DWORD PTR [ebp+0x8]
  427501:	mov    ecx,DWORD PTR [ebp-0x10]
  427504:	sub    eax,edi
  427506:	xor    eax,esi
  427508:	cmp    eax,ecx
  42750a:	jne    0x42752d
  42750c:	mov    eax,DWORD PTR [ebp+0x10]
  42750f:	mov    ecx,DWORD PTR [ebp+0xc]
  427512:	xor    eax,esi
  427514:	xor    ecx,esi
  427516:	sub    eax,ecx
  427518:	mov    ecx,DWORD PTR [ebp-0x20]
  42751b:	sub    eax,edi
  42751d:	xor    eax,esi
  42751f:	mov    DWORD PTR [ebp+0x10],eax
  427522:	mov    eax,DWORD PTR [ebp+0xc]
  427525:	xor    eax,esi
  427527:	sub    ecx,eax
  427529:	sub    ecx,edi
  42752b:	jmp    0x42753c
  42752d:	mov    eax,DWORD PTR [ebp+0xc]
  427530:	xor    eax,esi
  427532:	mov    ecx,0xffcd8d0d
  427537:	sub    ecx,eax
  427539:	add    ecx,DWORD PTR [ebp+0x8]
  42753c:	mov    DWORD PTR [ebp+0x8],ecx
  42753f:	mov    eax,DWORD PTR [ebp+0x10]
  427542:	cmp    eax,ebx
  427544:	jne    0x427442
  42754a:	mov    eax,DWORD PTR [ebp-0x24]
  42754d:	jmp    0x427552
  42754f:	mov    eax,DWORD PTR [ebp-0x4]
  427552:	xor    eax,esi
  427554:	add    eax,edi
  427556:	pop    edi
  427557:	pop    esi
  427558:	pop    ebx
  427559:	leave  
  42755a:	ret    0xc
  42755d:	push   ebp
  42755e:	mov    ebp,esp
  427560:	sub    esp,0x420
  427566:	mov    DWORD PTR [ebp-0x14],0xf89c85a1
  42756d:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  427574:	mov    DWORD PTR [ebp-0x18],0xf89c86a1
  42757b:	push   ebx
  42757c:	mov    DWORD PTR [ebp-0x1c],0xf89c85a0
  427583:	mov    eax,DWORD PTR [ebp-0x14]
  427586:	push   esi
  427587:	mov    esi,0x75108ac
  42758c:	push   edi
  42758d:	xor    eax,esi
  42758f:	mov    edi,0x3272f3
  427594:	add    eax,edi
  427596:	mov    DWORD PTR [ebp-0x8],eax
  427599:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  4275a0:	mov    DWORD PTR [ebp-0x4],0xead71881
  4275a7:	mov    DWORD PTR [ebp-0x10],0x8
  4275ae:	mov    ecx,ecx
  4275b0:	mov    eax,DWORD PTR [ebp-0xc]
  4275b3:	mov    ecx,DWORD PTR [ebp-0x14]
  4275b6:	xor    eax,esi
  4275b8:	xor    ecx,esi
  4275ba:	add    eax,edi
  4275bc:	add    ecx,edi
  4275be:	imul   eax,ecx
  4275c1:	jmp    0x4275f4
  4275c3:	mov    eax,DWORD PTR [ebp-0x4]
  4275c6:	sub    eax,edi
  4275c8:	xor    eax,esi
  4275ca:	mov    DWORD PTR [ebp-0x8],eax
  4275cd:	lea    ebx,[ebp-0x8]
  4275d0:	call   0x427315
  4275d5:	mov    DWORD PTR [ebp-0x8],eax
  4275d8:	mov    eax,DWORD PTR [ebp-0x8]
  4275db:	mov    ecx,DWORD PTR [ebp-0x4]
  4275de:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4275e5:	mov    eax,DWORD PTR [ebp-0xc]
  4275e8:	mov    ecx,DWORD PTR [ebp-0x4]
  4275eb:	xor    eax,esi
  4275ed:	lea    eax,[eax+ecx*1+0x3272f3]
  4275f4:	mov    DWORD PTR [ebp-0x4],eax
  4275f7:	mov    eax,DWORD PTR [ebp-0x18]
  4275fa:	mov    ecx,DWORD PTR [ebp-0xc]
  4275fd:	xor    ecx,esi
  4275ff:	xor    eax,esi
  427601:	sub    eax,ecx
  427603:	mov    ecx,DWORD PTR [ebp-0x4]
  427606:	cmp    ecx,eax
  427608:	jbe    0x4275c3
  42760a:	mov    eax,DWORD PTR [ebp-0x1c]
  42760d:	xor    eax,esi
  42760f:	add    eax,edi
  427611:	mov    DWORD PTR [ebp-0x8],eax
  427614:	mov    DWORD PTR [ebp-0x18],0xf89c86a0
  42761b:	mov    ebx,ebx
  42761d:	jmp    0x427680
  42761f:	mov    ecx,DWORD PTR [ebp-0x20]
  427622:	mov    eax,DWORD PTR [ebp-0x8]
  427625:	xor    ecx,esi
  427627:	add    ecx,edi
  427629:	shr    eax,cl
  42762b:	mov    DWORD PTR [ebp-0x4],eax
  42762e:	mov    eax,DWORD PTR [ebp+0x8]
  427631:	mov    cl,BYTE PTR [eax]
  427633:	mov    BYTE PTR [ebp+0xb],cl
  427636:	mov    cl,BYTE PTR [ebp+0xb]
  427639:	mov    edx,DWORD PTR [ebp-0x8]
  42763c:	movzx  ecx,cl
  42763f:	xor    ecx,edx
  427641:	mov    DWORD PTR [ebp+0x8],ecx
  427644:	mov    ecx,DWORD PTR [ebp-0x18]
  427647:	mov    edx,DWORD PTR [ebp+0x8]
  42764a:	xor    ecx,esi
  42764c:	add    ecx,edi
  42764e:	and    ecx,edx
  427650:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  427657:	mov    edx,DWORD PTR [ebp-0x4]
  42765a:	xor    ecx,edx
  42765c:	mov    DWORD PTR [ebp-0x8],ecx
  42765f:	mov    ecx,DWORD PTR [ebp-0xc]
  427662:	xor    ecx,esi
  427664:	lea    eax,[eax+ecx*1+0x3272f3]
  42766b:	mov    DWORD PTR [ebp+0x8],eax
  42766e:	mov    eax,DWORD PTR [ebp-0xc]
  427671:	xor    eax,esi
  427673:	mov    ecx,0xffcd8d0d
  427678:	sub    ecx,eax
  42767a:	add    ecx,DWORD PTR [ebp-0x10]
  42767d:	mov    DWORD PTR [ebp-0x10],ecx
  427680:	mov    eax,DWORD PTR [ebp-0x14]
  427683:	mov    ecx,DWORD PTR [ebp-0x10]
  427686:	xor    eax,esi
  427688:	add    eax,edi
  42768a:	cmp    ecx,eax
  42768c:	jne    0x42761f
  42768e:	mov    eax,DWORD PTR [ebp-0x1c]
  427691:	mov    ecx,DWORD PTR [ebp-0x8]
  427694:	xor    eax,esi
  427696:	add    eax,edi
  427698:	pop    edi
  427699:	pop    esi
  42769a:	xor    eax,ecx
  42769c:	pop    ebx
  42769d:	leave  
  42769e:	ret    0x4
  4276a1:	push   ebp
  4276a2:	mov    ebp,esp
  4276a4:	mov    eax,DWORD PTR [ebp+0x1c]
  4276a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4276aa:	mov    edx,DWORD PTR [ebp+0x10]
  4276ad:	mov    eax,DWORD PTR [eax+0x190]
  4276b3:	mov    eax,DWORD PTR [eax]
  4276b5:	sub    esp,0x64
  4276b8:	push   ebx
  4276b9:	push   esi
  4276ba:	push   edi
  4276bb:	mov    edi,0x75108ac
  4276c0:	xor    ecx,edi
  4276c2:	mov    ebx,0x3272f3
  4276c7:	add    ecx,ebx
  4276c9:	cmp    ecx,edx
  4276cb:	jne    0x4276dc
  4276cd:	or     DWORD PTR ds:0x3750c3f,0x4263eb28
  4276d7:	jmp    0x427bd8
  4276dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4276df:	mov    esi,DWORD PTR [ebp+0x14]
  4276e2:	mov    edx,DWORD PTR [esi]
  4276e4:	xor    ecx,edi
  4276e6:	add    ecx,ebx
  4276e8:	cmp    edx,ecx
  4276ea:	je     0x427b93
  4276f0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4276f3:	mov    DWORD PTR [ebp-0x1c],eax
  4276f6:	mov    DWORD PTR [ebp+0x1c],ecx
  4276f9:	mov    ecx,DWORD PTR [ebp+0x18]
  4276fc:	mov    eax,DWORD PTR [esi]
  4276fe:	mov    DWORD PTR [ebp-0x20],eax
  427701:	mov    DWORD PTR [ebp+0x8],0xf89c85a1
  427708:	mov    edx,0xf89c85a2
  42770d:	mov    DWORD PTR [ebp-0x8],edx
  427710:	mov    eax,DWORD PTR [ebp+0x1c]
  427713:	mov    DWORD PTR [ebp+0x1c],eax
  427716:	mov    eax,DWORD PTR [ebp+0x1c]
  427719:	mov    eax,DWORD PTR [eax+0x190]
  42771f:	mov    eax,DWORD PTR [eax]
  427721:	mov    DWORD PTR [ebp-0x24],ecx
  427724:	mov    ecx,DWORD PTR [ebp+0x1c]
  427727:	mov    ecx,DWORD PTR [ecx+0x190]
  42772d:	mov    ecx,DWORD PTR [ecx]
  42772f:	add    ecx,DWORD PTR [eax+0x3c]
  427732:	mov    DWORD PTR [ebp+0x10],ecx
  427735:	mov    eax,DWORD PTR [ebp+0x8]
  427738:	xor    eax,edi
  42773a:	add    eax,ebx
  42773c:	mov    DWORD PTR [ebp-0x4],eax
  42773f:	mov    eax,DWORD PTR [ebp+0x8]
  427742:	xor    eax,edi
  427744:	add    eax,ebx
  427746:	mov    DWORD PTR [ebp+0x18],eax
  427749:	mov    eax,DWORD PTR [ebp+0x10]
  42774c:	mov    eax,DWORD PTR [eax+0x50]
  42774f:	sub    eax,0xc
  427752:	mov    DWORD PTR [ebp-0x28],eax
  427755:	mov    eax,DWORD PTR [ebp+0x10]
  427758:	mov    eax,DWORD PTR [eax+0x38]
  42775b:	mov    ecx,DWORD PTR [ebp+0x10]
  42775e:	dec    eax
  42775f:	test   DWORD PTR [ecx+0x54],eax
  427762:	mov    eax,DWORD PTR [ebp+0x10]
  427765:	je     0x42777f
  427767:	mov    eax,DWORD PTR [eax+0x38]
  42776a:	mov    ecx,DWORD PTR [ebp+0x10]
  42776d:	mov    ecx,DWORD PTR [ecx+0x54]
  427770:	dec    eax
  427771:	not    eax
  427773:	and    ecx,eax
  427775:	mov    eax,DWORD PTR [ebp+0x10]
  427778:	mov    eax,DWORD PTR [eax+0x38]
  42777b:	add    eax,ecx
  42777d:	jmp    0x427782
  42777f:	mov    eax,DWORD PTR [eax+0x54]
  427782:	mov    DWORD PTR [ebp+0x1c],eax
  427785:	mov    eax,DWORD PTR [ebp+0x8]
  427788:	xor    eax,edi
  42778a:	add    eax,ebx
  42778c:	mov    DWORD PTR [ebp+0x18],eax
  42778f:	mov    eax,DWORD PTR [ebp+0x8]
  427792:	xor    eax,edi
  427794:	add    eax,ebx
  427796:	mov    DWORD PTR [ebp+0x18],eax
  427799:	mov    eax,DWORD PTR [ebp+0x8]
  42779c:	mov    ecx,DWORD PTR [ebp-0x24]
  42779f:	xor    eax,edi
  4277a1:	add    eax,ebx
  4277a3:	mov    DWORD PTR [ecx],eax
  4277a5:	mov    DWORD PTR [ebp+0x18],edx
  4277a8:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  4277af:	mov    DWORD PTR [ebp+0x18],0xf89c85bc
  4277b6:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  4277bd:	mov    eax,DWORD PTR [ebp-0x8]
  4277c0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4277c3:	xor    eax,edi
  4277c5:	add    eax,ebx
  4277c7:	imul   eax,ecx
  4277ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4277cd:	mov    edx,DWORD PTR [ebp-0x28]
  4277d0:	xor    ecx,edi
  4277d2:	lea    ecx,[ecx+edx*1+0x3272f3]
  4277d9:	cmp    eax,ecx
  4277db:	jae    0x427b8c
  4277e1:	mov    eax,DWORD PTR [ebp+0x8]
  4277e4:	xor    eax,edi
  4277e6:	add    eax,ebx
  4277e8:	mov    DWORD PTR [ebp+0x18],eax
  4277eb:	mov    eax,DWORD PTR [ebp+0x1c]
  4277ee:	add    eax,DWORD PTR [ebp-0x1c]
  4277f1:	mov    DWORD PTR [ebp-0x4],eax
  4277f4:	push   DWORD PTR [ebp-0x4]
  4277f7:	mov    esi,DWORD PTR [ebp-0x1c]
  4277fa:	mov    ecx,DWORD PTR [ebp+0x10]
  4277fd:	call   0x42694d
  427802:	mov    DWORD PTR [ebp+0xc],eax
  427805:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  42780c:	mov    eax,DWORD PTR [ebp-0x18]
  42780f:	xor    eax,edi
  427811:	lea    ecx,[ebp-0x40]
  427814:	add    eax,ebx
  427816:	push   ecx
  427817:	call   0x426ee1
  42781c:	mov    eax,DWORD PTR [ebp+0xc]
  42781f:	test   eax,eax
  427821:	je     0x427871
  427823:	mov    eax,DWORD PTR [ebp-0x18]
  427826:	xor    eax,edi
  427828:	add    eax,ebx
  42782a:	push   eax
  42782b:	push   DWORD PTR [ebp+0xc]
  42782e:	lea    eax,[ebp-0x40]
  427831:	push   eax
  427832:	call   0x426dd7
  427837:	mov    eax,DWORD PTR [ebp-0x4]
  42783a:	mov    DWORD PTR [ebp-0x18],eax
  42783d:	mov    eax,DWORD PTR [ebp-0x18]
  427840:	mov    ecx,DWORD PTR [ebp-0x1c]
  427843:	sub    eax,ecx
  427845:	mov    DWORD PTR [ebp-0x18],eax
  427848:	mov    eax,DWORD PTR [ebp+0xc]
  42784b:	mov    ecx,DWORD PTR [ebp+0xc]
  42784e:	mov    eax,DWORD PTR [eax+0x10]
  427851:	add    eax,DWORD PTR [ecx+0xc]
  427854:	mov    ecx,DWORD PTR [ebp-0x18]
  427857:	cmp    ecx,eax
  427859:	jb     0x427871
  42785b:	mov    eax,DWORD PTR [ebp+0xc]
  42785e:	mov    eax,DWORD PTR [eax+0xc]
  427861:	mov    ecx,DWORD PTR [ebp+0xc]
  427864:	add    eax,DWORD PTR [ecx+0x8]
  427867:	mov    ecx,DWORD PTR [ebp-0x18]
  42786a:	sub    eax,ecx
  42786c:	jmp    0x427b5f
  427871:	push   0xc
  427873:	push   DWORD PTR [ebp-0x4]
  427876:	lea    eax,[ebp-0x4c]
  427879:	push   eax
  42787a:	call   0x426dd7
  42787f:	mov    eax,0xf89c85a1
  427884:	mov    DWORD PTR [ebp-0x2c],eax
  427887:	mov    DWORD PTR [ebp-0x30],0xf89c85a2
  42788e:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  427895:	mov    DWORD PTR [ebp-0x38],0xf89c85bc
  42789c:	lea    ecx,[ebp-0x2c]
  42789f:	mov    DWORD PTR [ebp-0xc],ecx
  4278a2:	lea    ecx,[ebp-0x30]
  4278a5:	mov    DWORD PTR [ebp-0x10],ecx
  4278a8:	lea    ecx,[ebp-0x34]
  4278ab:	mov    DWORD PTR [ebp+0xc],ecx
  4278ae:	lea    ecx,[ebp-0x38]
  4278b1:	mov    DWORD PTR [ebp-0x14],ecx
  4278b4:	mov    ecx,DWORD PTR [ebp+0x8]
  4278b7:	xor    ecx,edi
  4278b9:	add    ecx,ebx
  4278bb:	mov    DWORD PTR [ebp-0x18],ecx
  4278be:	jmp    0x427aba
  4278c3:	cmp    eax,0xf89c85a3
  4278c8:	je     0x427acc
  4278ce:	mov    ecx,DWORD PTR [ebp-0x8]
  4278d1:	xor    ecx,edi
  4278d3:	mov    esi,eax
  4278d5:	add    ecx,ebx
  4278d7:	mov    DWORD PTR [ebp+0x18],ecx
  4278da:	mov    eax,DWORD PTR [ebp-0x18]
  4278dd:	xor    esi,edi
  4278df:	lea    eax,[eax+esi*1+0x3272f3]
  4278e6:	mov    DWORD PTR [ebp-0x18],eax
  4278e9:	mov    eax,DWORD PTR [ebp-0x8]
  4278ec:	mov    ecx,DWORD PTR [ebp-0x18]
  4278ef:	xor    eax,edi
  4278f1:	add    eax,ebx
  4278f3:	cmp    ecx,eax
  4278f5:	jne    0x42790a
  4278f7:	mov    eax,DWORD PTR [ebp+0x8]
  4278fa:	xor    eax,edi
  4278fc:	add    eax,ebx
  4278fe:	push   eax
  4278ff:	push   0xc
  427901:	lea    eax,[ebp-0x4c]
  427904:	push   eax
  427905:	call   0x4273bd
  42790a:	mov    eax,DWORD PTR [ebp-0xc]
  42790d:	mov    eax,DWORD PTR [eax]
  42790f:	xor    eax,edi
  427911:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427918:	mov    ecx,DWORD PTR [ebp+0x8]
  42791b:	xor    ecx,edi
  42791d:	movzx  eax,al
  427920:	add    ecx,ebx
  427922:	cmp    eax,ecx
  427924:	je     0x427aa2
  42792a:	mov    eax,DWORD PTR [ebp-0x10]
  42792d:	mov    eax,DWORD PTR [eax]
  42792f:	xor    eax,edi
  427931:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427938:	mov    ecx,DWORD PTR [ebp+0x8]
  42793b:	xor    ecx,edi
  42793d:	movzx  eax,al
  427940:	add    ecx,ebx
  427942:	cmp    eax,ecx
  427944:	je     0x427aa2
  42794a:	mov    eax,DWORD PTR [ebp+0xc]
  42794d:	mov    eax,DWORD PTR [eax]
  42794f:	xor    eax,edi
  427951:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427958:	mov    ecx,DWORD PTR [ebp+0x8]
  42795b:	xor    ecx,edi
  42795d:	movzx  eax,al
  427960:	add    ecx,ebx
  427962:	cmp    eax,ecx
  427964:	je     0x427aa2
  42796a:	mov    eax,DWORD PTR [ebp-0x14]
  42796d:	mov    eax,DWORD PTR [eax]
  42796f:	xor    eax,edi
  427971:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427978:	mov    ecx,DWORD PTR [ebp+0x8]
  42797b:	xor    ecx,edi
  42797d:	movzx  eax,al
  427980:	add    ecx,ebx
  427982:	cmp    eax,ecx
  427984:	je     0x427aa2
  42798a:	mov    eax,DWORD PTR [ebp-0x10]
  42798d:	mov    eax,DWORD PTR [eax]
  42798f:	xor    eax,edi
  427991:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427998:	mov    ecx,DWORD PTR [ebp-0xc]
  42799b:	mov    ecx,DWORD PTR [ecx]
  42799d:	xor    ecx,edi
  42799f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279a6:	xor    al,cl
  4279a8:	mov    ecx,DWORD PTR [ebp+0xc]
  4279ab:	mov    ecx,DWORD PTR [ecx]
  4279ad:	xor    ecx,edi
  4279af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279b6:	or     al,cl
  4279b8:	mov    ecx,DWORD PTR [ebp-0xc]
  4279bb:	mov    ecx,DWORD PTR [ecx]
  4279bd:	xor    ecx,edi
  4279bf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  4279c6:	cmp    cl,al
  4279c8:	jne    0x427aa2
  4279ce:	mov    eax,DWORD PTR [ebp+0xc]
  4279d1:	mov    eax,DWORD PTR [eax]
  4279d3:	xor    eax,edi
  4279d5:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  4279dc:	mov    ecx,DWORD PTR [ebp-0x10]
  4279df:	mov    ecx,DWORD PTR [ecx]
  4279e1:	xor    ecx,edi
  4279e3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279ea:	xor    al,cl
  4279ec:	mov    ecx,DWORD PTR [ebp-0x14]
  4279ef:	mov    ecx,DWORD PTR [ecx]
  4279f1:	xor    ecx,edi
  4279f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279fa:	or     al,cl
  4279fc:	mov    ecx,DWORD PTR [ebp-0x10]
  4279ff:	mov    ecx,DWORD PTR [ecx]
  427a01:	xor    ecx,edi
  427a03:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a0a:	cmp    cl,al
  427a0c:	jne    0x427aa2
  427a12:	mov    eax,DWORD PTR [ebp-0x14]
  427a15:	mov    eax,DWORD PTR [eax]
  427a17:	xor    eax,edi
  427a19:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427a20:	mov    ecx,DWORD PTR [ebp+0xc]
  427a23:	mov    ecx,DWORD PTR [ecx]
  427a25:	xor    ecx,edi
  427a27:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a2e:	xor    al,cl
  427a30:	mov    ecx,DWORD PTR [ebp-0xc]
  427a33:	mov    ecx,DWORD PTR [ecx]
  427a35:	xor    ecx,edi
  427a37:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a3e:	or     al,cl
  427a40:	mov    ecx,DWORD PTR [ebp+0xc]
  427a43:	mov    ecx,DWORD PTR [ecx]
  427a45:	xor    ecx,edi
  427a47:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a4e:	cmp    cl,al
  427a50:	jne    0x427aa2
  427a52:	mov    eax,DWORD PTR [ebp-0x14]
  427a55:	mov    eax,DWORD PTR [eax]
  427a57:	xor    eax,edi
  427a59:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427a60:	mov    ecx,DWORD PTR [ebp-0xc]
  427a63:	mov    ecx,DWORD PTR [ecx]
  427a65:	xor    ecx,edi
  427a67:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a6e:	xor    al,cl
  427a70:	mov    ecx,DWORD PTR [ebp-0x10]
  427a73:	mov    ecx,DWORD PTR [ecx]
  427a75:	xor    ecx,edi
  427a77:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a7e:	or     al,cl
  427a80:	mov    ecx,DWORD PTR [ebp-0x14]
  427a83:	mov    ecx,DWORD PTR [ecx]
  427a85:	xor    ecx,edi
  427a87:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a8e:	cmp    cl,al
  427a90:	jne    0x427aa2
  427a92:	lea    eax,[ebp-0x4c]
  427a95:	push   eax
  427a96:	call   0x42755d
  427a9b:	mov    ecx,DWORD PTR [ebp-0x44]
  427a9e:	cmp    eax,ecx
  427aa0:	je     0x427aac
  427aa2:	mov    eax,DWORD PTR [ebp+0x8]
  427aa5:	xor    eax,edi
  427aa7:	add    eax,ebx
  427aa9:	mov    DWORD PTR [ebp+0x18],eax
  427aac:	mov    eax,DWORD PTR [ebp-0x8]
  427aaf:	xor    eax,edi
  427ab1:	lea    eax,[eax+esi*1+0x3272f3]
  427ab8:	xor    eax,edi
  427aba:	mov    ecx,DWORD PTR [ebp+0x8]
  427abd:	mov    edx,DWORD PTR [ebp+0x18]
  427ac0:	xor    ecx,edi
  427ac2:	add    ecx,ebx
  427ac4:	cmp    edx,ecx
  427ac6:	je     0x4278c3
  427acc:	mov    eax,DWORD PTR [ebp+0x8]
  427acf:	mov    ecx,DWORD PTR [ebp+0x18]
  427ad2:	xor    eax,edi
  427ad4:	add    eax,ebx
  427ad6:	cmp    ecx,eax
  427ad8:	jne    0x427aeb
  427ada:	mov    eax,DWORD PTR [ebp-0x8]
  427add:	mov    ecx,DWORD PTR [ebp+0x1c]
  427ae0:	xor    eax,edi
  427ae2:	lea    eax,[eax+ecx*1+0x3272f3]
  427ae9:	jmp    0x427b62
  427aeb:	push   0x18
  427aed:	push   DWORD PTR [ebp-0x4]
  427af0:	lea    eax,[ebp-0x64]
  427af3:	push   eax
  427af4:	call   0x426dd7
  427af9:	mov    eax,DWORD PTR [ebp+0x8]
  427afc:	mov    ecx,DWORD PTR [ebp-0x18]
  427aff:	xor    eax,edi
  427b01:	add    eax,ebx
  427b03:	cmp    eax,ecx
  427b05:	je     0x427b1a
  427b07:	mov    eax,DWORD PTR [ebp+0x8]
  427b0a:	xor    eax,edi
  427b0c:	add    eax,ebx
  427b0e:	push   eax
  427b0f:	push   0x18
  427b11:	lea    eax,[ebp-0x64]
  427b14:	push   eax
  427b15:	call   0x4273bd
  427b1a:	mov    eax,DWORD PTR [ebp-0x4]
  427b1d:	add    eax,0x18
  427b20:	mov    DWORD PTR [ebp+0x18],eax
  427b23:	push   DWORD PTR [ebp-0x50]
  427b26:	push   DWORD PTR [ebp+0x18]
  427b29:	mov    eax,DWORD PTR [ebp-0x54]
  427b2c:	add    eax,DWORD PTR [ebp-0x20]
  427b2f:	push   eax
  427b30:	call   0x426dd7
  427b35:	mov    eax,DWORD PTR [ebp+0x8]
  427b38:	mov    ecx,DWORD PTR [ebp-0x18]
  427b3b:	xor    eax,edi
  427b3d:	add    eax,ebx
  427b3f:	cmp    eax,ecx
  427b41:	je     0x427b54
  427b43:	push   0x0
  427b45:	push   DWORD PTR [ebp-0x50]
  427b48:	mov    eax,DWORD PTR [ebp-0x54]
  427b4b:	add    eax,DWORD PTR [ebp-0x20]
  427b4e:	push   eax
  427b4f:	call   0x4273bd
  427b54:	mov    eax,DWORD PTR [ebp-0x24]
  427b57:	mov    ecx,DWORD PTR [ebp-0x50]
  427b5a:	add    DWORD PTR [eax],ecx
  427b5c:	mov    eax,DWORD PTR [ebp-0x50]
  427b5f:	add    eax,DWORD PTR [ebp+0x1c]
  427b62:	mov    DWORD PTR [ebp+0x1c],eax
  427b65:	mov    eax,DWORD PTR [ebp-0x8]
  427b68:	mov    ecx,DWORD PTR [ebp+0x1c]
  427b6b:	xor    eax,edi
  427b6d:	add    eax,ebx
  427b6f:	imul   eax,ecx
  427b72:	mov    ecx,DWORD PTR [ebp+0x8]
  427b75:	mov    edx,DWORD PTR [ebp-0x28]
  427b78:	xor    ecx,edi
  427b7a:	lea    ecx,[ecx+edx*1+0x3272f3]
  427b81:	cmp    eax,ecx
  427b83:	jb     0x4277e1
  427b89:	mov    esi,DWORD PTR [ebp+0x14]
  427b8c:	mov    eax,DWORD PTR [ebp-0x20]
  427b8f:	mov    DWORD PTR [esi],eax
  427b91:	jmp    0x427bd8
  427b93:	mov    ecx,DWORD PTR [ebp+0x8]
  427b96:	mov    edx,DWORD PTR [ebp+0xc]
  427b99:	xor    ecx,edi
  427b9b:	xor    edx,edi
  427b9d:	add    ecx,ebx
  427b9f:	add    edx,ebx
  427ba1:	cmp    ecx,edx
  427ba3:	jne    0x427bb7
  427ba5:	mov    eax,ds:0x7f642dd8
  427baa:	imul   eax,eax,0x9f15fccf
  427bb0:	mov    ds:0x7f642dd8,eax
  427bb5:	jmp    0x427bd8
  427bb7:	mov    ecx,DWORD PTR [ebp+0x8]
  427bba:	xor    ecx,edi
  427bbc:	add    ecx,ebx
  427bbe:	cmp    eax,ecx
  427bc0:	je     0x427bce
  427bc2:	sub    DWORD PTR ds:0xf861e38,0x709beac8
  427bcc:	jmp    0x427bd8
  427bce:	and    DWORD PTR ds:0x3343fad8,0x5265ec3f
  427bd8:	pop    edi
  427bd9:	pop    esi
  427bda:	pop    ebx
  427bdb:	leave  
  427bdc:	ret    0x18
  427bdf:	push   ebp
  427be0:	mov    ebp,esp
  427be2:	and    esp,0xfffffff8
  427be5:	mov    eax,DWORD PTR [ebp+0x20]
  427be8:	sub    esp,0x14
  427beb:	push   ebx
  427bec:	mov    ebx,DWORD PTR [ebp+0x14]
  427bef:	push   esi
  427bf0:	push   edi
  427bf1:	cmp    eax,0xf89c85a1
  427bf6:	jne    0x427c02
  427bf8:	push   0xf89c85a2
  427bfd:	jmp    0x427d34
  427c02:	mov    eax,DWORD PTR [ebp+0x20]
  427c05:	cmp    eax,0xf89c85a2
  427c0a:	jne    0x427c16
  427c0c:	push   0xf89c85a3
  427c11:	jmp    0x427d34
  427c16:	mov    eax,DWORD PTR [ebp+0x20]
  427c19:	cmp    eax,0xf89c85a3
  427c1e:	jne    0x427c2a
  427c20:	push   0xf89c85bc
  427c25:	jmp    0x427d34
  427c2a:	mov    eax,DWORD PTR [ebp+0x20]
  427c2d:	cmp    eax,0xf89c85bc
  427c32:	jne    0x427c3e
  427c34:	push   0xf89c85bd
  427c39:	jmp    0x427d34
  427c3e:	mov    ecx,DWORD PTR [ebp+0x20]
  427c41:	mov    eax,0xf89c85b8
  427c46:	cmp    ecx,eax
  427c48:	jne    0x427d04
  427c4e:	mov    eax,DWORD PTR [ebp+0x10]
  427c51:	mov    DWORD PTR [esp+0xc],eax
  427c55:	mov    eax,DWORD PTR [ebp+0x18]
  427c58:	mov    DWORD PTR [esp+0x14],eax
  427c5c:	mov    eax,DWORD PTR [ebp+0xc]
  427c5f:	mov    DWORD PTR [esp+0x18],eax
  427c63:	mov    eax,DWORD PTR [ebp+0x8]
  427c66:	mov    DWORD PTR [esp+0x10],eax
  427c6a:	mov    eax,DWORD PTR [esp+0x10]
  427c6e:	mov    ecx,DWORD PTR [esp+0x14]
  427c72:	mov    edi,0x75108ac
  427c77:	xor    eax,edi
  427c79:	mov    esi,0x3272f3
  427c7e:	add    eax,esi
  427c80:	mov    DWORD PTR [ecx],eax
  427c82:	mov    eax,DWORD PTR [esp+0xc]
  427c86:	mov    eax,DWORD PTR [eax+0x194]
  427c8c:	mov    ecx,DWORD PTR [eax]
  427c8e:	mov    eax,DWORD PTR [esp+0xc]
  427c92:	mov    eax,DWORD PTR [eax+0x194]
  427c98:	mov    eax,DWORD PTR [eax]
  427c9a:	add    eax,DWORD PTR [ecx+0x3c]
  427c9d:	mov    ecx,DWORD PTR [esp+0xc]
  427ca1:	mov    ecx,DWORD PTR [ecx+0x1e0]
  427ca7:	mov    ecx,DWORD PTR [ecx+0x14]
  427caa:	push   0x4
  427cac:	push   0x3000
  427cb1:	push   DWORD PTR [eax+0x50]
  427cb4:	push   0x0
  427cb6:	call   ecx
  427cb8:	mov    DWORD PTR [ebx],eax
  427cba:	mov    eax,DWORD PTR [esp+0x10]
  427cbe:	push   DWORD PTR [esp+0xc]
  427cc2:	xor    eax,edi
  427cc4:	add    eax,esi
  427cc6:	mov    DWORD PTR [esp+0x20],eax
  427cca:	lea    eax,[esp+0x20]
  427cce:	push   eax
  427ccf:	push   ebx
  427cd0:	push   DWORD PTR [esp+0x20]
  427cd4:	push   DWORD PTR [esp+0x28]
  427cd8:	push   DWORD PTR [esp+0x24]
  427cdc:	call   0x4276a1
  427ce1:	mov    eax,DWORD PTR [esp+0x10]
  427ce5:	mov    ecx,DWORD PTR [ebx]
  427ce7:	xor    eax,edi
  427ce9:	add    eax,esi
  427ceb:	cmp    ecx,eax
  427ced:	je     0x427d4b
  427cef:	mov    eax,DWORD PTR [esp+0x18]
  427cf3:	mov    ecx,DWORD PTR [esp+0x14]
  427cf7:	xor    eax,edi
  427cf9:	add    eax,esi
  427cfb:	imul   eax,DWORD PTR [esp+0x1c]
  427d00:	mov    DWORD PTR [ecx],eax
  427d02:	jmp    0x427d4b
  427d04:	mov    ecx,DWORD PTR [ebp+0x20]
  427d07:	cmp    ecx,0xf89c85bd
  427d0d:	jne    0x427d16
  427d0f:	push   0xf89c85be
  427d14:	jmp    0x427d34
  427d16:	mov    ecx,DWORD PTR [ebp+0x20]
  427d19:	cmp    ecx,0xf89c85be
  427d1f:	jne    0x427d28
  427d21:	push   0xf89c85bf
  427d26:	jmp    0x427d34
  427d28:	mov    ecx,DWORD PTR [ebp+0x20]
  427d2b:	cmp    ecx,0xf89c85bf
  427d31:	jne    0x427d4b
  427d33:	push   eax
  427d34:	push   DWORD PTR [ebp+0x1c]
  427d37:	push   DWORD PTR [ebp+0x18]
  427d3a:	push   ebx
  427d3b:	push   DWORD PTR [ebp+0x10]
  427d3e:	push   DWORD PTR [ebp+0xc]
  427d41:	push   DWORD PTR [ebp+0x8]
  427d44:	call   0x427bdf
  427d49:	mov    DWORD PTR [ebx],eax
  427d4b:	mov    eax,DWORD PTR [ebx]
  427d4d:	pop    edi
  427d4e:	pop    esi
  427d4f:	pop    ebx
  427d50:	mov    esp,ebp
  427d52:	pop    ebp
  427d53:	ret    0x1c
  427d56:	push   ebp
  427d57:	mov    ebp,esp
  427d59:	sub    esp,0xc
  427d5c:	mov    eax,0xf89c85a1
  427d61:	mov    DWORD PTR [ebp-0x8],eax
  427d64:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  427d6b:	mov    ecx,DWORD PTR [ebp-0x8]
  427d6e:	xor    ecx,0x75108ac
  427d74:	add    ecx,0x3272f3
  427d7a:	mov    DWORD PTR [ebp-0x4],ecx
  427d7d:	mov    ecx,DWORD PTR [ebp+0xc]
  427d80:	push   eax
  427d81:	mov    DWORD PTR [ebp+0xc],ecx
  427d84:	push   DWORD PTR [ebp+0xc]
  427d87:	lea    eax,[ebp-0x4]
  427d8a:	push   DWORD PTR [ebp+0x8]
  427d8d:	push   eax
  427d8e:	push   DWORD PTR [ebp+0xc]
  427d91:	push   DWORD PTR [ebp-0xc]
  427d94:	push   DWORD PTR [ebp-0x8]
  427d97:	call   0x427bdf
  427d9c:	mov    DWORD PTR [ebp-0x4],eax
  427d9f:	mov    eax,DWORD PTR [ebp-0x4]
  427da2:	leave  
  427da3:	ret    0x8
